embedding_settings:
    data_path: 'data/'                                # 用于训练嵌入模型的代码库的路径。  
    embedding_model_saved_path: 'embedding/'             # 用于训练嵌入模型的代码库的路径。  
    seed: 1                                            # 随机数生成器的种子。
    n_workers: 4                                       # 训练线程数。
    word2vec:
        size: 100                                      # 向量的维数。 这是嵌入维度。  
        window: 5                                       # 在一个句子中，当前单词和预测单词之间的最大距离。  
        min_count: 5                                    # 忽略总频率低于此的所有单词。  
        algorithm: 0                                    # 训练算法:1 skip-gram; 否则CBOW。  
    glove:
        components: 100                                # 输出字向量的维数。 这是嵌入维度。
        window: 5                                      # 在一个句子中，当前单词和预测单词之间的最大距离。  
        epoch: 40                                      # 在语料库上的迭代次数(epoch)。 
        learning_rate: 0.001                           # 学习率
    fasttext:
        size: 100
        window: 5                                       # 在一个句子中，当前单词和预测单词之间的最大距离。  
        min_count: 5                                    
        algorithm: 0                                    
        epoch: 20                                       
    SPL:
        embadding_size: 100                             # 批处理选取的样本个数
        batch_size: 200                                 # 每次迭代训练选取的样本数目
        window: 5                                       # 考虑前后几个词，窗口大小, skipgram中的中心词-上下文pairs数目就是windowsize *2
        min_count: 5                                    # 最低词频，保留模型中的词表
        epoch: 30000                                    # 在语料库上迭代的次数
        nagetive_sample: 100                            # 负采样的个数



model_settings:
  model: 'dnn'                             # 检测模型选择 (currently, the code supports the DNN, RNNs (i.e., LSTM and GRU ), BiRNN (i.e., bidirectional LSTM and bidirectional GRU), and textCNN),graph2vec_dnn
  optimizer: 
    type: 'sgd'                                # 优化器 (SGD)
  loss_function: 'binary_crossentropy'         # 损失函数

  model_para:
    handle_data_imbalance: True
    max_sequence_length: 1000
    use_dropout: True
    dropout_rate: 0.5
    dnn_size: 128                             # DNN神经元数量 (the first layer)
    rnn_size: 128                             # RNN神经元数量 (the first layer)
    birnn_size: 64                            # bi-RNN神经元数量 (the first layer)
    embedding_trainable: False
    

training_settings:
    dataset_config:
        Test_set_ratio: 0.2                   # 测试占比  
        Validation_set_ratio: 0.2             # 验证占比

    network_config:
        batch_size: 32
        epochs: 50
        patcience: 35
        save_training_history: True
        plot_training_history: True
        validation_metric: 'val_loss'
    
    log_flag: True
    save_best_model: True
    using_separate_test_set: False           
    test_set_path: 'test/'                   # test路径
    period_of_saving: 1
    log_path: 'logs/'
    model_save_path: 'result/models/'
    model_saved_name: 'test_model'

func	1:0	64:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	63:12	1	
decl	3:4	3:13	2	int	flags
decl	4:4	4:18	2	VideoState	*is
call	5:4	5:17	2	init_dynload
water	5:18	0:0	2	;
call	6:4	6:41	2	av_log_set_flags
arg	6:21	6:41	3	AV_LOG_SKIP_REPEATED
water	6:21	0:0	4	AV_LOG_SKIP_REPEATED
water	6:42	0:0	2	;
call	7:4	7:38	2	parse_loglevel
arg	7:19	7:23	3	argc
water	7:19	0:0	4	argc
arg	7:25	7:29	3	argv
water	7:25	0:0	4	argv
arg	7:31	7:38	3	options
water	7:31	0:0	4	options
water	7:39	0:0	2	;
call	10:4	10:26	2	avdevice_register_all
water	10:27	0:0	2	;
call	13:4	13:26	2	avfilter_register_all
water	13:27	0:0	2	;
call	15:4	15:20	2	av_register_all
water	15:21	0:0	2	;
call	16:4	16:26	2	avformat_network_init
water	16:27	0:0	2	;
call	17:4	17:14	2	init_opts
water	17:15	0:0	2	;
call	18:4	18:35	2	signal
arg	18:11	18:18	3	SIGINT
water	18:11	0:0	4	SIGINT
arg	18:20	18:35	3	sigterm_handler
water	18:20	0:0	4	sigterm_handler
water	18:36	0:0	2	;
call	19:4	19:35	2	signal
arg	19:11	19:18	3	SIGTERM
water	19:11	0:0	4	SIGTERM
arg	19:20	19:35	3	sigterm_handler
water	19:20	0:0	4	sigterm_handler
water	19:36	0:0	2	;
call	20:4	20:35	2	show_banner
arg	20:16	20:20	3	argc
water	20:16	0:0	4	argc
arg	20:22	20:26	3	argv
water	20:22	0:0	4	argv
arg	20:28	20:35	3	options
water	20:28	0:0	4	options
water	20:36	0:0	2	;
call	21:4	21:59	2	parse_options
arg	21:18	21:22	3	NULL
water	21:18	0:0	4	NULL
arg	21:24	21:28	3	argc
water	21:24	0:0	4	argc
arg	21:30	21:34	3	argv
water	21:30	0:0	4	argv
arg	21:36	21:43	3	options
water	21:36	0:0	4	options
arg	21:45	21:59	3	opt_input_file
water	21:45	0:0	4	opt_input_file
water	21:60	0:0	2	;
if	22:4	28:4	2	(! input_filename)
cond	22:8	22:9	3	! input_filename
op	22:8	0:0	4	!
water	22:9	0:0	4	input_filename
stmts	22:25	28:4	3	
water	22:25	0:0	4	{
call	23:8	23:19	4	show_usage
water	23:20	0:0	4	;
call	24:8	24:70	4	av_log
arg	24:15	24:19	5	NULL
water	24:15	0:0	6	NULL
arg	24:21	24:33	5	AV_LOG_FATAL
water	24:21	0:0	6	AV_LOG_FATAL
arg	24:35	24:70	5	"An input file must be specified\n"
water	24:35	0:0	6	"An input file must be specified\n"
water	24:71	0:0	4	;
call	25:8	26:86	4	av_log
arg	25:15	25:19	5	NULL
water	25:15	0:0	6	NULL
arg	25:21	25:33	5	AV_LOG_FATAL
water	25:21	0:0	6	AV_LOG_FATAL
arg	26:15	26:72	5	"Use -h to get full help or, even better, run 'man %s'\n"
water	26:15	0:0	6	"Use -h to get full help or, even better, run 'man %s'\n"
arg	26:74	26:86	5	program_name
water	26:74	0:0	6	program_name
water	26:87	0:0	4	;
call	27:8	27:14	4	exit
arg	27:13	27:14	5	1
water	27:13	0:0	6	1
water	27:15	0:0	4	;
water	28:4	0:0	4	}
if	29:4	31:4	2	(display_disable)
cond	29:8	29:8	3	display_disable
water	29:8	0:0	4	display_disable
stmts	29:25	31:4	3	
water	29:25	0:0	4	{
water	30:8	0:0	4	video_disable
op	30:22	0:0	4	=
water	30:24	0:0	4	1
water	30:25	0:0	4	;
water	31:4	0:0	4	}
water	32:4	0:0	2	flags
op	32:10	0:0	2	=
water	32:12	0:0	2	SDL_INIT_VIDEO
op	32:27	0:0	2	|
water	32:29	0:0	2	SDL_INIT_AUDIO
op	32:44	0:0	2	|
water	32:46	0:0	2	SDL_INIT_TIMER
water	32:60	0:0	2	;
if	33:4	34:32	2	(audio_disable)
cond	33:8	33:8	3	audio_disable
water	33:8	0:0	4	audio_disable
stmts	34:8	34:32	3	
water	34:8	0:0	4	flags
op	34:14	0:0	4	&=
water	34:17	0:0	4	~SDL_INIT_AUDIO
water	34:32	0:0	4	;
else	35:4	40:4	2
stmts	35:9	40:4	3	
water	35:9	0:0	4	{
if	38:8	39:63	4	(!SDL_getenv ("SDL_AUDIO_ALSA_SET_BUFFER_SIZE" ))
cond	38:12	38:56	5	!SDL_getenv ("SDL_AUDIO_ALSA_SET_BUFFER_SIZE" )
op	38:12	0:0	6	!
call	38:13	38:56	6	SDL_getenv
arg	38:24	38:56	7	"SDL_AUDIO_ALSA_SET_BUFFER_SIZE"
water	38:24	0:0	8	"SDL_AUDIO_ALSA_SET_BUFFER_SIZE"
stmts	39:12	39:63	5	
call	39:12	39:62	6	SDL_setenv
arg	39:23	39:55	7	"SDL_AUDIO_ALSA_SET_BUFFER_SIZE"
water	39:23	0:0	8	"SDL_AUDIO_ALSA_SET_BUFFER_SIZE"
arg	39:56	39:59	7	"1"
water	39:56	0:0	8	"1"
arg	39:61	39:62	7	1
water	39:61	0:0	8	1
water	39:63	0:0	6	;
water	40:4	0:0	4	}
if	41:4	42:32	2	(display_disable)
cond	41:8	41:8	3	display_disable
water	41:8	0:0	4	display_disable
stmts	42:8	42:32	3	
water	42:8	0:0	4	flags
op	42:14	0:0	4	&=
water	42:17	0:0	4	~SDL_INIT_VIDEO
water	42:32	0:0	4	;
if	43:4	47:4	2	(SDL_Init (flags ))
cond	43:8	43:23	3	SDL_Init (flags )
call	43:8	43:23	4	SDL_Init
arg	43:18	43:23	5	flags
water	43:18	0:0	6	flags
stmts	43:26	47:4	3	
water	43:26	0:0	4	{
call	44:8	44:84	4	av_log
arg	44:15	44:19	5	NULL
water	44:15	0:0	6	NULL
arg	44:21	44:33	5	AV_LOG_FATAL
water	44:21	0:0	6	AV_LOG_FATAL
arg	44:35	44:68	5	"Could not initialize SDL - %s\n"
water	44:35	0:0	6	"Could not initialize SDL - %s\n"
arg	44:70	44:84	5	SDL_GetError()
call	44:70	44:83	6	SDL_GetError
water	44:85	0:0	4	;
call	45:8	45:74	4	av_log
arg	45:15	45:19	5	NULL
water	45:15	0:0	6	NULL
arg	45:21	45:33	5	AV_LOG_FATAL
water	45:21	0:0	6	AV_LOG_FATAL
arg	45:35	45:74	5	"(Did you set the DISPLAY variable?)\n"
water	45:35	0:0	6	"(Did you set the DISPLAY variable?)\n"
water	45:75	0:0	4	;
call	46:8	46:14	4	exit
arg	46:13	46:14	5	1
water	46:13	0:0	6	1
water	46:15	0:0	4	;
water	47:4	0:0	4	}
call	48:4	48:45	2	SDL_EventState
arg	48:19	48:33	3	SDL_SYSWMEVENT
water	48:19	0:0	4	SDL_SYSWMEVENT
arg	48:35	48:45	3	SDL_IGNORE
water	48:35	0:0	4	SDL_IGNORE
water	48:46	0:0	2	;
call	49:4	49:44	2	SDL_EventState
arg	49:19	49:32	3	SDL_USEREVENT
water	49:19	0:0	4	SDL_USEREVENT
arg	49:34	49:44	3	SDL_IGNORE
water	49:34	0:0	4	SDL_IGNORE
water	49:45	0:0	2	;
if	50:4	53:4	2	(av_lockmgr_register (lockmgr ))
cond	50:8	50:35	3	av_lockmgr_register (lockmgr )
call	50:8	50:35	4	av_lockmgr_register
arg	50:28	50:35	5	lockmgr
water	50:28	0:0	6	lockmgr
stmts	50:38	53:4	3	
water	50:38	0:0	4	{
call	51:8	51:73	4	av_log
arg	51:15	51:19	5	NULL
water	51:15	0:0	6	NULL
arg	51:21	51:33	5	AV_LOG_FATAL
water	51:21	0:0	6	AV_LOG_FATAL
arg	51:35	51:73	5	"Could not initialize lock manager!\n"
water	51:35	0:0	6	"Could not initialize lock manager!\n"
water	51:74	0:0	4	;
call	52:8	52:20	4	do_exit
arg	52:16	52:20	5	NULL
water	52:16	0:0	6	NULL
water	52:21	0:0	4	;
water	53:4	0:0	4	}
call	54:4	54:29	2	av_init_packet
arg	54:19	54:29	3	&flush_pkt
op	54:19	0:0	4	&
water	54:20	0:0	4	flush_pkt
water	54:30	0:0	2	;
water	55:4	0:0	2	flush_pkt
op	55:13	0:0	2	.
water	55:14	0:0	2	data
op	55:19	0:0	2	=
water	55:21	0:0	2	(
water	55:22	0:0	2	uint8_t
op	55:30	0:0	2	*
water	55:31	0:0	2	)
op	55:32	0:0	2	&
water	55:33	0:0	2	flush_pkt
water	55:42	0:0	2	;
water	56:4	0:0	2	is
op	56:7	0:0	2	=
call	56:9	56:49	2	stream_open
arg	56:21	56:35	3	input_filename
water	56:21	0:0	4	input_filename
arg	56:37	56:49	3	file_iformat
water	56:37	0:0	4	file_iformat
water	56:50	0:0	2	;
if	57:4	60:4	2	(! is)
cond	57:8	57:9	3	! is
op	57:8	0:0	4	!
water	57:9	0:0	4	is
stmts	57:13	60:4	3	
water	57:13	0:0	4	{
call	58:8	58:71	4	av_log
arg	58:15	58:19	5	NULL
water	58:15	0:0	6	NULL
arg	58:21	58:33	5	AV_LOG_FATAL
water	58:21	0:0	6	AV_LOG_FATAL
arg	58:35	58:71	5	"Failed to initialize VideoState!\n"
water	58:35	0:0	6	"Failed to initialize VideoState!\n"
water	58:72	0:0	4	;
call	59:8	59:20	4	do_exit
arg	59:16	59:20	5	NULL
water	59:16	0:0	6	NULL
water	59:21	0:0	4	;
water	60:4	0:0	4	}
call	61:4	61:17	2	event_loop
arg	61:15	61:17	3	is
water	61:15	0:0	4	is
water	61:18	0:0	2	;
return	63:4	63:12	2	0
water	63:11	0:0	3	0

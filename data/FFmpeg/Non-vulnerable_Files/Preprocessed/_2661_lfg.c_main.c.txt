func	1:0	31:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:13	2	void
stmnts	0:0	30:12	1	
decl	3:4	3:13	2	int	x
op	3:10	0:0	2	=
water	3:12	0:0	2	0
decl	4:4	4:12	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:12	2	int	j
decl	5:4	5:15	2	AVLFG	state
call	6:4	6:34	2	av_lfg_init
arg	6:16	6:22	3	&state
op	6:16	0:0	4	&
water	6:17	0:0	4	state
arg	6:24	6:34	3	0xdeadbeef
water	6:24	0:0	4	0
water	6:25	0:0	4	xdeadbeef
water	6:35	0:0	2	;
for	7:4	14:4	2	(j = 0 ;j < 10000;j ++)
forinit	7:9	7:14	3	j = 0 ;
water	7:9	0:0	4	j
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	j < 10000
water	7:16	0:0	4	j
op	7:18	0:0	4	<
water	7:20	0:0	4	10000
forexpr	7:27	7:28	3	j ++
water	7:27	0:0	4	j
op	7:28	0:0	4	++
stmts	7:32	14:4	3	
water	7:32	0:0	4	{
water	8:8	0:0	4	START_TIMER
water	9:8	0:0	4	for
water	9:12	0:0	4	(
water	9:13	0:0	4	i
op	9:15	0:0	4	=
water	9:17	0:0	4	0
water	9:18	0:0	4	;
water	9:20	0:0	4	i
op	9:22	0:0	4	<
water	9:24	0:0	4	624
water	9:27	0:0	4	;
water	9:29	0:0	4	i
op	9:30	0:0	4	++
water	9:32	0:0	4	)
water	9:34	0:0	4	{
water	11:12	0:0	4	x
op	11:14	0:0	4	+=
call	11:17	11:34	4	av_lfg_get
arg	11:28	11:34	5	&state
op	11:28	0:0	6	&
water	11:29	0:0	6	state
water	11:35	0:0	4	;
water	12:8	0:0	4	}
call	13:8	13:44	4	STOP_TIMER
arg	13:19	13:44	5	"624 calls of av_lfg_get"
water	13:19	0:0	6	"624 calls of av_lfg_get"
water	13:45	0:0	4	;
water	14:4	0:0	4	}
call	15:4	15:52	2	av_log
arg	15:11	15:15	3	NULL
water	15:11	0:0	4	NULL
arg	15:17	15:29	3	AV_LOG_ERROR
water	15:17	0:0	4	AV_LOG_ERROR
arg	15:31	15:49	3	"final value:%X\n"
water	15:31	0:0	4	"final value:%X\n"
arg	15:51	15:52	3	x
water	15:51	0:0	4	x
water	15:53	0:0	2	;
water	17:4	0:0	2	{
decl	18:8	18:28	2	double	mean
op	18:22	0:0	2	=
water	18:24	0:0	2	1000
decl	19:8	19:26	2	double	stddev
op	19:22	0:0	2	=
water	19:24	0:0	2	53
call	20:8	20:30	2	av_lfg_init
arg	20:20	20:26	3	&state
op	20:20	0:0	4	&
water	20:21	0:0	4	state
arg	20:28	20:30	3	42
water	20:28	0:0	4	42
water	20:31	0:0	2	;
for	21:8	28:8	2	(i = 0 ;i < 1000;i += 2)
forinit	21:13	21:18	3	i = 0 ;
water	21:13	0:0	4	i
op	21:15	0:0	4	=
water	21:17	0:0	4	0
water	21:18	0:0	4	;
cond	21:20	21:24	3	i < 1000
water	21:20	0:0	4	i
op	21:22	0:0	4	<
water	21:24	0:0	4	1000
forexpr	21:30	21:35	3	i += 2
water	21:30	0:0	4	i
op	21:32	0:0	4	+=
water	21:35	0:0	4	2
stmts	21:38	28:8	3	
water	21:38	0:0	4	{
decl	22:12	22:29	4	double	bmg_out[2]
call	23:12	23:38	4	av_bmg_get
arg	23:23	23:29	5	&state
op	23:23	0:0	6	&
water	23:24	0:0	6	state
arg	23:31	23:38	5	bmg_out
water	23:31	0:0	6	bmg_out
water	23:39	0:0	4	;
call	24:12	27:45	4	av_log
arg	24:19	24:23	5	NULL
water	24:19	0:0	6	NULL
arg	24:25	24:36	5	AV_LOG_INFO
water	24:25	0:0	6	AV_LOG_INFO
arg	25:19	25:29	5	"%f\n%f\n"
water	25:19	0:0	6	"%f\n%f\n"
arg	26:19	26:45	5	bmg_out[0]*stddev+mean
water	26:19	0:0	6	bmg_out
op	26:26	0:0	6	[
water	26:27	0:0	6	0
op	26:28	0:0	6	]
op	26:30	0:0	6	*
water	26:32	0:0	6	stddev
op	26:39	0:0	6	+
water	26:41	0:0	6	mean
arg	27:19	27:45	5	bmg_out[1]*stddev+mean
water	27:19	0:0	6	bmg_out
op	27:26	0:0	6	[
water	27:27	0:0	6	1
op	27:28	0:0	6	]
op	27:30	0:0	6	*
water	27:32	0:0	6	stddev
op	27:39	0:0	6	+
water	27:41	0:0	6	mean
water	27:46	0:0	4	;
water	28:8	0:0	4	}
water	29:4	0:0	2	}
return	30:4	30:12	2	0
water	30:11	0:0	3	0

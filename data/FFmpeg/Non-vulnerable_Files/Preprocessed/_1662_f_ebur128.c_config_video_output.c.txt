func	1:0	73:0	0	static int	config_video_output
params	1:30	0:0	1	
param	1:31	1:52	2	AVFilterLink *	outlink
stmnts	0:0	72:74	1	
decl	3:4	3:15	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:15	2	int	x
water	3:12	0:0	2	,
decl	3:4	3:15	2	int	y
decl	4:4	4:14	2	uint8_t	*p
decl	5:4	5:39	2	AVFilterContext	*ctx
op	5:25	0:0	2	=
water	5:27	0:0	2	outlink
op	5:34	0:0	2	->
water	5:36	0:0	2	src
decl	6:4	6:39	2	EBUR128Context	*ebur128
op	6:28	0:0	2	=
water	6:30	0:0	2	ctx
op	6:33	0:0	2	->
water	6:35	0:0	2	priv
decl	7:4	7:22	2	AVFrame	*outpicref
if	9:4	13:4	2	(ebur128 -> w < 640 || ebur128 -> h < 480)
cond	9:8	9:41	3	ebur128 -> w < 640 || ebur128 -> h < 480
water	9:8	0:0	4	ebur128
op	9:15	0:0	4	->
water	9:17	0:0	4	w
op	9:19	0:0	4	<
water	9:21	0:0	4	640
op	9:25	0:0	4	||
water	9:28	0:0	4	ebur128
op	9:35	0:0	4	->
water	9:37	0:0	4	h
op	9:39	0:0	4	<
water	9:41	0:0	4	480
stmts	9:46	13:4	3	
water	9:46	0:0	4	{
call	10:8	11:66	4	av_log
arg	10:15	10:18	5	ctx
water	10:15	0:0	6	ctx
arg	10:20	10:32	5	AV_LOG_ERROR
water	10:20	0:0	6	AV_LOG_ERROR
arg	10:34	11:42	5	"Video size %dx%d is too small, ""minimum size is 640x480\n"
water	10:34	0:0	6	"Video size %dx%d is too small, "
water	11:15	0:0	6	"minimum size is 640x480\n"
arg	11:44	11:54	5	ebur128->w
water	11:44	0:0	6	ebur128
op	11:51	0:0	6	->
water	11:53	0:0	6	w
arg	11:56	11:66	5	ebur128->h
water	11:56	0:0	6	ebur128
op	11:63	0:0	6	->
water	11:65	0:0	6	h
water	11:67	0:0	4	;
return	12:8	12:30	4	AVERROR(EINVAL)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	EINVAL
water	12:23	0:0	7	EINVAL
water	13:4	0:0	4	}
water	14:4	0:0	2	outlink
op	14:11	0:0	2	->
water	14:13	0:0	2	w
op	14:15	0:0	2	=
water	14:17	0:0	2	ebur128
op	14:24	0:0	2	->
water	14:26	0:0	2	w
water	14:27	0:0	2	;
water	15:4	0:0	2	outlink
op	15:11	0:0	2	->
water	15:13	0:0	2	h
op	15:15	0:0	2	=
water	15:17	0:0	2	ebur128
op	15:24	0:0	2	->
water	15:26	0:0	2	h
water	15:27	0:0	2	;
water	18:4	0:0	2	ebur128
op	18:11	0:0	2	->
water	18:13	0:0	2	text
op	18:17	0:0	2	.
water	18:18	0:0	2	x
op	18:21	0:0	2	=
water	18:23	0:0	2	PAD
water	18:26	0:0	2	;
water	19:4	0:0	2	ebur128
op	19:11	0:0	2	->
water	19:13	0:0	2	text
op	19:17	0:0	2	.
water	19:18	0:0	2	y
op	19:21	0:0	2	=
water	19:23	0:0	2	40
water	19:25	0:0	2	;
water	20:4	0:0	2	ebur128
op	20:11	0:0	2	->
water	20:13	0:0	2	text
op	20:17	0:0	2	.
water	20:18	0:0	2	w
op	20:21	0:0	2	=
water	20:23	0:0	2	3
op	20:25	0:0	2	*
water	20:27	0:0	2	8
water	20:28	0:0	2	;
water	21:4	0:0	2	ebur128
op	21:11	0:0	2	->
water	21:13	0:0	2	text
op	21:17	0:0	2	.
water	21:18	0:0	2	h
op	21:21	0:0	2	=
water	21:23	0:0	2	ebur128
op	21:30	0:0	2	->
water	21:32	0:0	2	h
op	21:34	0:0	2	-
water	21:36	0:0	2	PAD
op	21:40	0:0	2	-
water	21:42	0:0	2	ebur128
op	21:49	0:0	2	->
water	21:51	0:0	2	text
op	21:55	0:0	2	.
water	21:56	0:0	2	y
water	21:57	0:0	2	;
water	23:4	0:0	2	ebur128
op	23:11	0:0	2	->
water	23:13	0:0	2	gauge
op	23:18	0:0	2	.
water	23:19	0:0	2	w
op	23:21	0:0	2	=
water	23:23	0:0	2	20
water	23:25	0:0	2	;
water	24:4	0:0	2	ebur128
op	24:11	0:0	2	->
water	24:13	0:0	2	gauge
op	24:18	0:0	2	.
water	24:19	0:0	2	h
op	24:21	0:0	2	=
water	24:23	0:0	2	ebur128
op	24:30	0:0	2	->
water	24:32	0:0	2	text
op	24:36	0:0	2	.
water	24:37	0:0	2	h
water	24:38	0:0	2	;
water	25:4	0:0	2	ebur128
op	25:11	0:0	2	->
water	25:13	0:0	2	gauge
op	25:18	0:0	2	.
water	25:19	0:0	2	x
op	25:21	0:0	2	=
water	25:23	0:0	2	ebur128
op	25:30	0:0	2	->
water	25:32	0:0	2	w
op	25:34	0:0	2	-
water	25:36	0:0	2	PAD
op	25:40	0:0	2	-
water	25:42	0:0	2	ebur128
op	25:49	0:0	2	->
water	25:51	0:0	2	gauge
op	25:56	0:0	2	.
water	25:57	0:0	2	w
water	25:58	0:0	2	;
water	26:4	0:0	2	ebur128
op	26:11	0:0	2	->
water	26:13	0:0	2	gauge
op	26:18	0:0	2	.
water	26:19	0:0	2	y
op	26:21	0:0	2	=
water	26:23	0:0	2	ebur128
op	26:30	0:0	2	->
water	26:32	0:0	2	text
op	26:36	0:0	2	.
water	26:37	0:0	2	y
water	26:38	0:0	2	;
water	28:4	0:0	2	ebur128
op	28:11	0:0	2	->
water	28:13	0:0	2	graph
op	28:18	0:0	2	.
water	28:19	0:0	2	x
op	28:21	0:0	2	=
water	28:23	0:0	2	ebur128
op	28:30	0:0	2	->
water	28:32	0:0	2	text
op	28:36	0:0	2	.
water	28:37	0:0	2	x
op	28:39	0:0	2	+
water	28:41	0:0	2	ebur128
op	28:48	0:0	2	->
water	28:50	0:0	2	text
op	28:54	0:0	2	.
water	28:55	0:0	2	w
op	28:57	0:0	2	+
water	28:59	0:0	2	PAD
water	28:62	0:0	2	;
water	29:4	0:0	2	ebur128
op	29:11	0:0	2	->
water	29:13	0:0	2	graph
op	29:18	0:0	2	.
water	29:19	0:0	2	y
op	29:21	0:0	2	=
water	29:23	0:0	2	ebur128
op	29:30	0:0	2	->
water	29:32	0:0	2	gauge
op	29:37	0:0	2	.
water	29:38	0:0	2	y
water	29:39	0:0	2	;
water	30:4	0:0	2	ebur128
op	30:11	0:0	2	->
water	30:13	0:0	2	graph
op	30:18	0:0	2	.
water	30:19	0:0	2	w
op	30:21	0:0	2	=
water	30:23	0:0	2	ebur128
op	30:30	0:0	2	->
water	30:32	0:0	2	gauge
op	30:37	0:0	2	.
water	30:38	0:0	2	x
op	30:40	0:0	2	-
water	30:42	0:0	2	ebur128
op	30:49	0:0	2	->
water	30:51	0:0	2	graph
op	30:56	0:0	2	.
water	30:57	0:0	2	x
op	30:59	0:0	2	-
water	30:61	0:0	2	PAD
water	30:64	0:0	2	;
water	31:4	0:0	2	ebur128
op	31:11	0:0	2	->
water	31:13	0:0	2	graph
op	31:18	0:0	2	.
water	31:19	0:0	2	h
op	31:21	0:0	2	=
water	31:23	0:0	2	ebur128
op	31:30	0:0	2	->
water	31:32	0:0	2	gauge
op	31:37	0:0	2	.
water	31:38	0:0	2	h
water	31:39	0:0	2	;
call	33:4	33:51	2	av_assert0
arg	33:15	33:51	3	ebur128->graph.h==ebur128->gauge.h
water	33:15	0:0	4	ebur128
op	33:22	0:0	4	->
water	33:24	0:0	4	graph
op	33:29	0:0	4	.
water	33:30	0:0	4	h
op	33:32	0:0	4	==
water	33:35	0:0	4	ebur128
op	33:42	0:0	4	->
water	33:44	0:0	4	gauge
op	33:49	0:0	4	.
water	33:50	0:0	4	h
water	33:52	0:0	2	;
call	35:4	35:37	2	av_frame_free
arg	35:18	35:37	3	&ebur128->outpicref
op	35:18	0:0	4	&
water	35:19	0:0	4	ebur128
op	35:26	0:0	4	->
water	35:28	0:0	4	outpicref
water	35:38	0:0	2	;
water	36:4	0:0	2	ebur128
op	36:11	0:0	2	->
water	36:13	0:0	2	outpicref
op	36:23	0:0	2	=
water	36:25	0:0	2	outpicref
op	36:35	0:0	2	=
call	37:8	37:59	2	ff_get_video_buffer
arg	37:28	37:35	3	outlink
water	37:28	0:0	4	outlink
arg	37:37	37:47	3	outlink->w
water	37:37	0:0	4	outlink
op	37:44	0:0	4	->
water	37:46	0:0	4	w
arg	37:49	37:59	3	outlink->h
water	37:49	0:0	4	outlink
op	37:56	0:0	4	->
water	37:58	0:0	4	h
water	37:60	0:0	2	;
if	38:4	39:30	2	(! outpicref)
cond	38:8	38:9	3	! outpicref
op	38:8	0:0	4	!
water	38:9	0:0	4	outpicref
stmts	39:8	39:30	3	
return	39:8	39:30	4	AVERROR(ENOMEM)
call	39:15	39:29	5	AVERROR
arg	39:23	39:29	6	ENOMEM
water	39:23	0:0	7	ENOMEM
water	40:4	0:0	2	outlink
op	40:11	0:0	2	->
water	40:13	0:0	2	sample_aspect_ratio
op	40:33	0:0	2	=
water	40:35	0:0	2	(
water	40:36	0:0	2	AVRational
water	40:46	0:0	2	)
water	40:47	0:0	2	{
water	40:48	0:0	2	1
water	40:49	0:0	2	,
water	40:50	0:0	2	1
water	40:51	0:0	2	}
water	40:52	0:0	2	;
water	42:4	0:0	2	ebur128
op	42:11	0:0	2	->
water	42:13	0:0	2	y_line_ref
op	42:24	0:0	2	=
call	42:26	42:86	2	av_calloc
arg	42:36	42:56	3	ebur128->graph.h+1
water	42:36	0:0	4	ebur128
op	42:43	0:0	4	->
water	42:45	0:0	4	graph
op	42:50	0:0	4	.
water	42:51	0:0	4	h
op	42:53	0:0	4	+
water	42:55	0:0	4	1
arg	42:58	42:86	3	sizeof(*ebur128->y_line_ref)
op	42:58	0:0	4	sizeof
water	42:64	0:0	4	(
op	42:65	0:0	4	*
water	42:66	0:0	4	ebur128
op	42:73	0:0	4	->
water	42:75	0:0	4	y_line_ref
water	42:85	0:0	4	)
water	42:87	0:0	2	;
if	43:4	44:30	2	(! ebur128 -> y_line_ref)
cond	43:8	43:18	3	! ebur128 -> y_line_ref
op	43:8	0:0	4	!
water	43:9	0:0	4	ebur128
op	43:16	0:0	4	->
water	43:18	0:0	4	y_line_ref
stmts	44:8	44:30	3	
return	44:8	44:30	4	AVERROR(ENOMEM)
call	44:15	44:29	5	AVERROR
arg	44:23	44:29	6	ENOMEM
water	44:23	0:0	7	ENOMEM
call	46:4	46:69	2	memset
arg	46:11	46:29	3	outpicref->data[0]
water	46:11	0:0	4	outpicref
op	46:20	0:0	4	->
water	46:22	0:0	4	data
op	46:26	0:0	4	[
water	46:27	0:0	4	0
op	46:28	0:0	4	]
arg	46:31	46:32	3	0
water	46:31	0:0	4	0
arg	46:34	46:69	3	ebur128->h*outpicref->linesize[0]
water	46:34	0:0	4	ebur128
op	46:41	0:0	4	->
water	46:43	0:0	4	h
op	46:45	0:0	4	*
water	46:47	0:0	4	outpicref
op	46:56	0:0	4	->
water	46:58	0:0	4	linesize
op	46:66	0:0	4	[
water	46:67	0:0	4	0
op	46:68	0:0	4	]
water	46:70	0:0	2	;
call	48:4	48:64	2	drawtext
arg	48:13	48:22	3	outpicref
water	48:13	0:0	4	outpicref
arg	48:24	48:27	3	PAD
water	48:24	0:0	4	PAD
arg	48:29	48:35	3	PAD+16
water	48:29	0:0	4	PAD
op	48:32	0:0	4	+
water	48:33	0:0	4	16
arg	48:37	48:42	3	FONT8
water	48:37	0:0	4	FONT8
arg	48:44	48:57	3	font_colors+3
water	48:44	0:0	4	font_colors
op	48:55	0:0	4	+
water	48:56	0:0	4	3
arg	48:59	48:64	3	" LU"
water	48:59	0:0	4	" LU"
water	48:65	0:0	2	;
for	49:4	56:4	2	(i = ebur128 -> meter ;i >= - ebur128 -> meter * 2;i --)
forinit	49:9	49:27	3	i = ebur128 -> meter ;
water	49:9	0:0	4	i
op	49:11	0:0	4	=
water	49:13	0:0	4	ebur128
op	49:20	0:0	4	->
water	49:22	0:0	4	meter
water	49:27	0:0	4	;
cond	49:29	49:52	3	i >= - ebur128 -> meter * 2
water	49:29	0:0	4	i
op	49:31	0:0	4	>=
op	49:34	0:0	4	-
water	49:35	0:0	4	ebur128
op	49:42	0:0	4	->
water	49:44	0:0	4	meter
op	49:50	0:0	4	*
water	49:52	0:0	4	2
forexpr	49:55	49:56	3	i --
water	49:55	0:0	4	i
op	49:56	0:0	4	--
stmts	49:60	56:4	3	
water	49:60	0:0	4	{
water	50:8	0:0	4	y
op	50:10	0:0	4	=
call	50:12	50:30	4	lu_to_y
arg	50:20	50:27	5	ebur128
water	50:20	0:0	6	ebur128
arg	50:29	50:30	5	i
water	50:29	0:0	6	i
water	50:31	0:0	4	;
water	51:8	0:0	4	x
op	51:10	0:0	4	=
water	51:12	0:0	4	PAD
op	51:16	0:0	4	+
water	51:18	0:0	4	(
water	51:19	0:0	4	i
op	51:21	0:0	4	<
water	51:23	0:0	4	10
op	51:26	0:0	4	&&
water	51:29	0:0	4	i
op	51:31	0:0	4	>
op	51:33	0:0	4	-
water	51:34	0:0	4	10
water	51:36	0:0	4	)
op	51:38	0:0	4	*
water	51:40	0:0	4	8
water	51:41	0:0	4	;
water	52:8	0:0	4	ebur128
op	52:15	0:0	4	->
water	52:17	0:0	4	y_line_ref
op	52:27	0:0	4	[
water	52:28	0:0	4	y
op	52:29	0:0	4	]
op	52:31	0:0	4	=
water	52:33	0:0	4	i
water	52:34	0:0	4	;
water	53:8	0:0	4	y
op	53:10	0:0	4	-=
water	53:13	0:0	4	4
water	53:14	0:0	4	;
call	54:8	55:66	4	drawtext
arg	54:17	54:26	5	outpicref
water	54:17	0:0	6	outpicref
arg	54:28	54:29	5	x
water	54:28	0:0	6	x
arg	54:31	54:51	5	y+ebur128->graph.y
water	54:31	0:0	6	y
op	54:33	0:0	6	+
water	54:35	0:0	6	ebur128
op	54:42	0:0	6	->
water	54:44	0:0	6	graph
op	54:49	0:0	6	.
water	54:50	0:0	6	y
arg	54:53	54:58	5	FONT8
water	54:53	0:0	6	FONT8
arg	54:60	54:73	5	font_colors+3
water	54:60	0:0	6	font_colors
op	54:71	0:0	6	+
water	54:72	0:0	6	3
arg	55:17	55:23	5	"%c%d"
water	55:17	0:0	6	"%c%d"
arg	55:25	55:56	5	i<0?'-':i>0?'+':' '
water	55:25	0:0	6	i
op	55:27	0:0	6	<
water	55:29	0:0	6	0
water	55:31	0:0	6	?
water	55:33	0:0	6	'-'
water	55:37	0:0	6	:
water	55:39	0:0	6	i
op	55:41	0:0	6	>
water	55:43	0:0	6	0
water	55:45	0:0	6	?
water	55:47	0:0	6	'+'
water	55:51	0:0	6	:
water	55:53	0:0	6	' '
arg	55:58	55:66	5	FFABS(i)
call	55:58	55:65	6	FFABS
arg	55:64	55:65	7	i
water	55:64	0:0	8	i
water	55:67	0:0	4	;
water	56:4	0:0	4	}
water	58:4	0:0	2	ebur128
op	58:11	0:0	2	->
water	58:13	0:0	2	y_zero_lu
op	58:23	0:0	2	=
call	58:25	58:43	2	lu_to_y
arg	58:33	58:40	3	ebur128
water	58:33	0:0	4	ebur128
arg	58:42	58:43	3	0
water	58:42	0:0	4	0
water	58:44	0:0	2	;
water	59:4	0:0	2	p
op	59:6	0:0	2	=
water	59:8	0:0	2	outpicref
op	59:17	0:0	2	->
water	59:19	0:0	2	data
op	59:23	0:0	2	[
water	59:24	0:0	2	0
op	59:25	0:0	2	]
op	59:27	0:0	2	+
water	59:29	0:0	2	ebur128
op	59:36	0:0	2	->
water	59:38	0:0	2	graph
op	59:43	0:0	2	.
water	59:44	0:0	2	y
op	59:46	0:0	2	*
water	59:48	0:0	2	outpicref
op	59:57	0:0	2	->
water	59:59	0:0	2	linesize
op	59:67	0:0	2	[
water	59:68	0:0	2	0
op	59:69	0:0	2	]
op	60:27	0:0	2	+
water	60:29	0:0	2	ebur128
op	60:36	0:0	2	->
water	60:38	0:0	2	graph
op	60:43	0:0	2	.
water	60:44	0:0	2	x
op	60:46	0:0	2	*
water	60:48	0:0	2	3
water	60:49	0:0	2	;
for	61:4	66:4	2	(y = 0 ;y < ebur128 -> graph . h;y ++)
forinit	61:9	61:14	3	y = 0 ;
water	61:9	0:0	4	y
op	61:11	0:0	4	=
water	61:13	0:0	4	0
water	61:14	0:0	4	;
cond	61:16	61:35	3	y < ebur128 -> graph . h
water	61:16	0:0	4	y
op	61:18	0:0	4	<
water	61:20	0:0	4	ebur128
op	61:27	0:0	4	->
water	61:29	0:0	4	graph
op	61:34	0:0	4	.
water	61:35	0:0	4	h
forexpr	61:38	61:39	3	y ++
water	61:38	0:0	4	y
op	61:39	0:0	4	++
stmts	61:43	66:4	3	
water	61:43	0:0	4	{
decl	62:8	62:63	4	const uint8_t	*c
op	62:25	0:0	4	=
call	62:27	62:62	5	get_graph_color
arg	62:43	62:50	6	ebur128
water	62:43	0:0	7	ebur128
arg	62:52	62:59	6	INT_MAX
water	62:52	0:0	7	INT_MAX
arg	62:61	62:62	6	y
water	62:61	0:0	7	y
for	63:8	64:33	4	(x = 0 ;x < ebur128 -> graph . w;x ++)
forinit	63:13	63:18	5	x = 0 ;
water	63:13	0:0	6	x
op	63:15	0:0	6	=
water	63:17	0:0	6	0
water	63:18	0:0	6	;
cond	63:20	63:39	5	x < ebur128 -> graph . w
water	63:20	0:0	6	x
op	63:22	0:0	6	<
water	63:24	0:0	6	ebur128
op	63:31	0:0	6	->
water	63:33	0:0	6	graph
op	63:38	0:0	6	.
water	63:39	0:0	6	w
forexpr	63:42	63:43	5	x ++
water	63:42	0:0	6	x
op	63:43	0:0	6	++
stmts	64:12	64:33	5	
call	64:12	64:32	6	memcpy
arg	64:19	64:26	7	p+x*3
water	64:19	0:0	8	p
op	64:21	0:0	8	+
water	64:23	0:0	8	x
op	64:24	0:0	8	*
water	64:25	0:0	8	3
arg	64:28	64:29	7	c
water	64:28	0:0	8	c
arg	64:31	64:32	7	3
water	64:31	0:0	8	3
water	64:33	0:0	6	;
water	65:8	0:0	4	p
op	65:10	0:0	4	+=
water	65:13	0:0	4	outpicref
op	65:22	0:0	4	->
water	65:24	0:0	4	linesize
op	65:32	0:0	4	[
water	65:33	0:0	4	0
op	65:34	0:0	4	]
water	65:35	0:0	4	;
water	66:4	0:0	4	}
call	69:4	69:52	2	drawline
arg	69:13	69:22	3	outpicref
water	69:13	0:0	4	outpicref
arg	69:24	69:27	3	r.x
water	69:24	0:0	4	r
op	69:25	0:0	4	.
water	69:26	0:0	4	x
arg	69:35	69:42	3	r.y-1
water	69:35	0:0	4	r
op	69:36	0:0	4	.
water	69:37	0:0	4	y
op	69:39	0:0	4	-
water	69:41	0:0	4	1
arg	69:46	69:49	3	r.w
water	69:46	0:0	4	r
op	69:47	0:0	4	.
water	69:48	0:0	4	w
arg	69:51	69:52	3	3
water	69:51	0:0	4	3
water	69:53	0:0	2	;
call	70:4	70:52	2	drawline
arg	70:13	70:22	3	outpicref
water	70:13	0:0	4	outpicref
arg	70:24	70:27	3	r.x
water	70:24	0:0	4	r
op	70:25	0:0	4	.
water	70:26	0:0	4	x
arg	70:35	70:44	3	r.y+r.h
water	70:35	0:0	4	r
op	70:36	0:0	4	.
water	70:37	0:0	4	y
op	70:39	0:0	4	+
water	70:41	0:0	4	r
op	70:42	0:0	4	.
water	70:43	0:0	4	h
arg	70:46	70:49	3	r.w
water	70:46	0:0	4	r
op	70:47	0:0	4	.
water	70:48	0:0	4	w
arg	70:51	70:52	3	3
water	70:51	0:0	4	3
water	70:53	0:0	2	;
call	71:4	71:73	2	drawline
arg	71:13	71:22	3	outpicref
water	71:13	0:0	4	outpicref
arg	71:24	71:31	3	r.x-1
water	71:24	0:0	4	r
op	71:25	0:0	4	.
water	71:26	0:0	4	x
op	71:28	0:0	4	-
water	71:30	0:0	4	1
arg	71:35	71:38	3	r.y
water	71:35	0:0	4	r
op	71:36	0:0	4	.
water	71:37	0:0	4	y
arg	71:46	71:49	3	r.h
water	71:46	0:0	4	r
op	71:47	0:0	4	.
water	71:48	0:0	4	h
arg	71:51	71:73	3	outpicref->linesize[0]
water	71:51	0:0	4	outpicref
op	71:60	0:0	4	->
water	71:62	0:0	4	linesize
op	71:70	0:0	4	[
water	71:71	0:0	4	0
op	71:72	0:0	4	]
water	71:74	0:0	2	;
call	72:4	72:73	2	drawline
arg	72:13	72:22	3	outpicref
water	72:13	0:0	4	outpicref
arg	72:24	72:33	3	r.x+r.w
water	72:24	0:0	4	r
op	72:25	0:0	4	.
water	72:26	0:0	4	x
op	72:28	0:0	4	+
water	72:30	0:0	4	r
op	72:31	0:0	4	.
water	72:32	0:0	4	w
arg	72:35	72:38	3	r.y
water	72:35	0:0	4	r
op	72:36	0:0	4	.
water	72:37	0:0	4	y
arg	72:46	72:49	3	r.h
water	72:46	0:0	4	r
op	72:47	0:0	4	.
water	72:48	0:0	4	h
arg	72:51	72:73	3	outpicref->linesize[0]
water	72:51	0:0	4	outpicref
op	72:60	0:0	4	->
water	72:62	0:0	4	linesize
op	72:70	0:0	4	[
water	72:71	0:0	4	0
op	72:72	0:0	4	]
water	72:74	0:0	2	;

func	1:24	91:0	0	void	yuv2rgba64_1_c_template
params	2:23	0:0	1	
param	2:24	2:37	2	SwsContext *	c
param	2:39	2:58	2	const int32_t *	buf0
param	3:23	3:45	2	const int32_t *	ubuf[2]
param	3:47	3:69	2	const int32_t *	vbuf[2]
param	4:23	4:43	2	const int32_t *	abuf0
param	4:45	4:59	2	uint16_t *	dest
param	4:61	4:69	2	int	dstW
param	5:23	5:34	2	int	uvalpha
param	5:36	5:41	2	int	y
param	5:43	5:68	2	enum AVPixelFormat	target
param	5:70	5:82	2	int	hasAlpha
param	5:84	5:98	2	int	eightbytes
stmnts	0:0	90:4	1	
decl	7:4	7:52	2	const int32_t	*ubuf0
op	7:25	0:0	2	=
water	7:27	0:0	2	ubuf
op	7:31	0:0	2	[
water	7:32	0:0	2	0
op	7:33	0:0	2	]
water	7:34	0:0	2	,
decl	7:4	7:52	2	const int32_t	*vbuf0
op	7:43	0:0	2	=
water	7:45	0:0	2	vbuf
op	7:49	0:0	2	[
water	7:50	0:0	2	0
op	7:51	0:0	2	]
decl	8:4	8:9	2	int	i
decl	9:4	9:39	2	int	A1
op	9:11	0:0	2	=
water	9:13	0:0	2	0
water	9:14	0:0	2	xffff
op	9:19	0:0	2	<<
water	9:21	0:0	2	14
water	9:23	0:0	2	,
decl	9:4	9:39	2	int	A2
op	9:27	0:0	2	=
water	9:29	0:0	2	0
water	9:30	0:0	2	xffff
op	9:35	0:0	2	<<
water	9:37	0:0	2	14
if	10:4	49:4	2	(uvalpha < 2048)
cond	10:8	10:18	3	uvalpha < 2048
water	10:8	0:0	4	uvalpha
op	10:16	0:0	4	<
water	10:18	0:0	4	2048
stmts	10:24	49:4	3	
water	10:24	0:0	4	{
for	11:8	48:8	4	(i = 0 ;i < ( ( dstW + 1 ) >> 1 );i ++)
forinit	11:13	11:18	5	i = 0 ;
water	11:13	0:0	6	i
op	11:15	0:0	6	=
water	11:17	0:0	6	0
water	11:18	0:0	6	;
cond	11:20	11:40	5	i < ( ( dstW + 1 ) >> 1 )
water	11:20	0:0	6	i
op	11:22	0:0	6	<
water	11:24	0:0	6	(
water	11:25	0:0	6	(
water	11:26	0:0	6	dstW
op	11:31	0:0	6	+
water	11:33	0:0	6	1
water	11:34	0:0	6	)
op	11:36	0:0	6	>>
water	11:39	0:0	6	1
water	11:40	0:0	6	)
forexpr	11:43	11:44	5	i ++
water	11:43	0:0	6	i
op	11:44	0:0	6	++
stmts	11:48	48:8	5	
water	11:48	0:0	6	{
decl	12:12	12:43	6	int	Y1
op	12:19	0:0	6	=
water	12:21	0:0	6	(
water	12:22	0:0	6	buf0
op	12:26	0:0	6	[
water	12:27	0:0	6	i
op	12:29	0:0	6	*
water	12:31	0:0	6	2
op	12:32	0:0	6	]
water	12:37	0:0	6	)
op	12:39	0:0	6	>>
water	12:42	0:0	6	2
decl	13:12	13:43	6	int	Y2
op	13:19	0:0	6	=
water	13:21	0:0	6	(
water	13:22	0:0	6	buf0
op	13:26	0:0	6	[
water	13:27	0:0	6	i
op	13:29	0:0	6	*
water	13:31	0:0	6	2
op	13:33	0:0	6	+
water	13:35	0:0	6	1
op	13:36	0:0	6	]
water	13:37	0:0	6	)
op	13:39	0:0	6	>>
water	13:42	0:0	6	2
decl	14:12	14:51	6	int	U
op	14:19	0:0	6	=
water	14:21	0:0	6	(
water	14:22	0:0	6	ubuf0
op	14:27	0:0	6	[
water	14:28	0:0	6	i
op	14:29	0:0	6	]
op	14:31	0:0	6	+
water	14:33	0:0	6	(
op	14:34	0:0	6	-
water	14:35	0:0	6	128
op	14:39	0:0	6	<<
water	14:42	0:0	6	11
water	14:44	0:0	6	)
water	14:45	0:0	6	)
op	14:47	0:0	6	>>
water	14:50	0:0	6	2
decl	15:12	15:51	6	int	V
op	15:19	0:0	6	=
water	15:21	0:0	6	(
water	15:22	0:0	6	vbuf0
op	15:27	0:0	6	[
water	15:28	0:0	6	i
op	15:29	0:0	6	]
op	15:31	0:0	6	+
water	15:33	0:0	6	(
op	15:34	0:0	6	-
water	15:35	0:0	6	128
op	15:39	0:0	6	<<
water	15:42	0:0	6	11
water	15:44	0:0	6	)
water	15:45	0:0	6	)
op	15:47	0:0	6	>>
water	15:50	0:0	6	2
decl	16:12	16:23	6	int	R
water	16:17	0:0	6	,
decl	16:12	16:23	6	int	G
water	16:20	0:0	6	,
decl	16:12	16:23	6	int	B
water	17:12	0:0	6	Y1
op	17:15	0:0	6	-=
water	17:18	0:0	6	c
op	17:19	0:0	6	->
water	17:21	0:0	6	yuv2rgb_y_offset
water	17:37	0:0	6	;
water	18:12	0:0	6	Y2
op	18:15	0:0	6	-=
water	18:18	0:0	6	c
op	18:19	0:0	6	->
water	18:21	0:0	6	yuv2rgb_y_offset
water	18:37	0:0	6	;
water	19:12	0:0	6	Y1
op	19:15	0:0	6	*=
water	19:18	0:0	6	c
op	19:19	0:0	6	->
water	19:21	0:0	6	yuv2rgb_y_coeff
water	19:36	0:0	6	;
water	20:12	0:0	6	Y2
op	20:15	0:0	6	*=
water	20:18	0:0	6	c
op	20:19	0:0	6	->
water	20:21	0:0	6	yuv2rgb_y_coeff
water	20:36	0:0	6	;
water	21:12	0:0	6	Y1
op	21:15	0:0	6	+=
water	21:18	0:0	6	1
op	21:20	0:0	6	<<
water	21:23	0:0	6	13
water	21:25	0:0	6	;
water	22:12	0:0	6	Y2
op	22:15	0:0	6	+=
water	22:18	0:0	6	1
op	22:20	0:0	6	<<
water	22:23	0:0	6	13
water	22:25	0:0	6	;
if	23:12	28:12	6	(hasAlpha)
cond	23:16	23:16	7	hasAlpha
water	23:16	0:0	8	hasAlpha
stmts	23:26	28:12	7	
water	23:26	0:0	8	{
water	24:16	0:0	8	A1
op	24:19	0:0	8	=
water	24:21	0:0	8	abuf0
op	24:26	0:0	8	[
water	24:27	0:0	8	i
op	24:29	0:0	8	*
water	24:31	0:0	8	2
op	24:36	0:0	8	]
op	24:38	0:0	8	<<
water	24:41	0:0	8	11
water	24:43	0:0	8	;
water	25:16	0:0	8	A2
op	25:19	0:0	8	=
water	25:21	0:0	8	abuf0
op	25:26	0:0	8	[
water	25:27	0:0	8	i
op	25:29	0:0	8	*
water	25:31	0:0	8	2
op	25:33	0:0	8	+
water	25:35	0:0	8	1
op	25:36	0:0	8	]
op	25:38	0:0	8	<<
water	25:41	0:0	8	11
water	25:43	0:0	8	;
water	26:16	0:0	8	A1
op	26:19	0:0	8	+=
water	26:22	0:0	8	1
op	26:24	0:0	8	<<
water	26:27	0:0	8	13
water	26:29	0:0	8	;
water	27:16	0:0	8	A2
op	27:19	0:0	8	+=
water	27:22	0:0	8	1
op	27:24	0:0	8	<<
water	27:27	0:0	8	13
water	27:29	0:0	8	;
water	28:12	0:0	8	}
water	29:12	0:0	6	R
op	29:14	0:0	6	=
water	29:16	0:0	6	V
op	29:18	0:0	6	*
water	29:20	0:0	6	c
op	29:21	0:0	6	->
water	29:23	0:0	6	yuv2rgb_v2r_coeff
water	29:40	0:0	6	;
water	30:12	0:0	6	G
op	30:14	0:0	6	=
water	30:16	0:0	6	V
op	30:18	0:0	6	*
water	30:20	0:0	6	c
op	30:21	0:0	6	->
water	30:23	0:0	6	yuv2rgb_v2g_coeff
op	30:41	0:0	6	+
water	30:43	0:0	6	U
op	30:45	0:0	6	*
water	30:47	0:0	6	c
op	30:48	0:0	6	->
water	30:50	0:0	6	yuv2rgb_u2g_coeff
water	30:67	0:0	6	;
water	31:12	0:0	6	B
op	31:14	0:0	6	=
water	31:43	0:0	6	U
op	31:45	0:0	6	*
water	31:47	0:0	6	c
op	31:48	0:0	6	->
water	31:50	0:0	6	yuv2rgb_u2b_coeff
water	31:67	0:0	6	;
call	32:12	32:69	6	output_pixel
arg	32:25	32:33	7	&dest[0]
op	32:25	0:0	8	&
water	32:26	0:0	8	dest
op	32:30	0:0	8	[
water	32:31	0:0	8	0
op	32:32	0:0	8	]
arg	32:35	32:69	7	av_clip_uintp2(R_B+Y1,30)>>14
call	32:35	32:62	8	av_clip_uintp2
arg	32:50	32:58	9	R_B+Y1
water	32:50	0:0	10	R_B
op	32:54	0:0	10	+
water	32:56	0:0	10	Y1
arg	32:60	32:62	9	30
water	32:60	0:0	10	30
op	32:64	0:0	8	>>
water	32:67	0:0	8	14
water	32:70	0:0	6	;
call	33:12	33:69	6	output_pixel
arg	33:25	33:33	7	&dest[1]
op	33:25	0:0	8	&
water	33:26	0:0	8	dest
op	33:30	0:0	8	[
water	33:31	0:0	8	1
op	33:32	0:0	8	]
arg	33:35	33:69	7	av_clip_uintp2(G+Y1,30)>>14
call	33:35	33:62	8	av_clip_uintp2
arg	33:52	33:58	9	G+Y1
water	33:52	0:0	10	G
op	33:54	0:0	10	+
water	33:56	0:0	10	Y1
arg	33:60	33:62	9	30
water	33:60	0:0	10	30
op	33:64	0:0	8	>>
water	33:67	0:0	8	14
water	33:70	0:0	6	;
call	34:12	34:69	6	output_pixel
arg	34:25	34:33	7	&dest[2]
op	34:25	0:0	8	&
water	34:26	0:0	8	dest
op	34:30	0:0	8	[
water	34:31	0:0	8	2
op	34:32	0:0	8	]
arg	34:35	34:69	7	av_clip_uintp2(B_R+Y1,30)>>14
call	34:35	34:62	8	av_clip_uintp2
arg	34:50	34:58	9	B_R+Y1
water	34:50	0:0	10	B_R
op	34:54	0:0	10	+
water	34:56	0:0	10	Y1
arg	34:60	34:62	9	30
water	34:60	0:0	10	30
op	34:64	0:0	8	>>
water	34:67	0:0	8	14
water	34:70	0:0	6	;
if	35:12	42:12	6	(eightbytes)
cond	35:16	35:16	7	eightbytes
water	35:16	0:0	8	eightbytes
stmts	35:28	42:12	7	
water	35:28	0:0	8	{
call	36:16	36:73	8	output_pixel
arg	36:29	36:37	9	&dest[3]
op	36:29	0:0	10	&
water	36:30	0:0	10	dest
op	36:34	0:0	10	[
water	36:35	0:0	10	3
op	36:36	0:0	10	]
arg	36:39	36:73	9	av_clip_uintp2(A1,30)>>14
call	36:39	36:66	10	av_clip_uintp2
arg	36:54	36:62	11	A1
water	36:54	0:0	12	A1
arg	36:64	36:66	11	30
water	36:64	0:0	12	30
op	36:68	0:0	10	>>
water	36:71	0:0	10	14
water	36:74	0:0	8	;
call	37:16	37:73	8	output_pixel
arg	37:29	37:37	9	&dest[4]
op	37:29	0:0	10	&
water	37:30	0:0	10	dest
op	37:34	0:0	10	[
water	37:35	0:0	10	4
op	37:36	0:0	10	]
arg	37:39	37:73	9	av_clip_uintp2(R_B+Y2,30)>>14
call	37:39	37:66	10	av_clip_uintp2
arg	37:54	37:62	11	R_B+Y2
water	37:54	0:0	12	R_B
op	37:58	0:0	12	+
water	37:60	0:0	12	Y2
arg	37:64	37:66	11	30
water	37:64	0:0	12	30
op	37:68	0:0	10	>>
water	37:71	0:0	10	14
water	37:74	0:0	8	;
call	38:16	38:73	8	output_pixel
arg	38:29	38:37	9	&dest[5]
op	38:29	0:0	10	&
water	38:30	0:0	10	dest
op	38:34	0:0	10	[
water	38:35	0:0	10	5
op	38:36	0:0	10	]
arg	38:39	38:73	9	av_clip_uintp2(G+Y2,30)>>14
call	38:39	38:66	10	av_clip_uintp2
arg	38:56	38:62	11	G+Y2
water	38:56	0:0	12	G
op	38:58	0:0	12	+
water	38:60	0:0	12	Y2
arg	38:64	38:66	11	30
water	38:64	0:0	12	30
op	38:68	0:0	10	>>
water	38:71	0:0	10	14
water	38:74	0:0	8	;
call	39:16	39:73	8	output_pixel
arg	39:29	39:37	9	&dest[6]
op	39:29	0:0	10	&
water	39:30	0:0	10	dest
op	39:34	0:0	10	[
water	39:35	0:0	10	6
op	39:36	0:0	10	]
arg	39:39	39:73	9	av_clip_uintp2(B_R+Y2,30)>>14
call	39:39	39:66	10	av_clip_uintp2
arg	39:54	39:62	11	B_R+Y2
water	39:54	0:0	12	B_R
op	39:58	0:0	12	+
water	39:60	0:0	12	Y2
arg	39:64	39:66	11	30
water	39:64	0:0	12	30
op	39:68	0:0	10	>>
water	39:71	0:0	10	14
water	39:74	0:0	8	;
call	40:16	40:73	8	output_pixel
arg	40:29	40:37	9	&dest[7]
op	40:29	0:0	10	&
water	40:30	0:0	10	dest
op	40:34	0:0	10	[
water	40:35	0:0	10	7
op	40:36	0:0	10	]
arg	40:39	40:73	9	av_clip_uintp2(A2,30)>>14
call	40:39	40:66	10	av_clip_uintp2
arg	40:54	40:62	11	A2
water	40:54	0:0	12	A2
arg	40:64	40:66	11	30
water	40:64	0:0	12	30
op	40:68	0:0	10	>>
water	40:71	0:0	10	14
water	40:74	0:0	8	;
water	41:16	0:0	8	dest
op	41:21	0:0	8	+=
water	41:24	0:0	8	8
water	41:25	0:0	8	;
water	42:12	0:0	8	}
else	42:14	47:12	6
stmts	42:19	47:12	7	
water	42:19	0:0	8	{
call	43:16	43:73	8	output_pixel
arg	43:29	43:37	9	&dest[3]
op	43:29	0:0	10	&
water	43:30	0:0	10	dest
op	43:34	0:0	10	[
water	43:35	0:0	10	3
op	43:36	0:0	10	]
arg	43:39	43:73	9	av_clip_uintp2(R_B+Y2,30)>>14
call	43:39	43:66	10	av_clip_uintp2
arg	43:54	43:62	11	R_B+Y2
water	43:54	0:0	12	R_B
op	43:58	0:0	12	+
water	43:60	0:0	12	Y2
arg	43:64	43:66	11	30
water	43:64	0:0	12	30
op	43:68	0:0	10	>>
water	43:71	0:0	10	14
water	43:74	0:0	8	;
call	44:16	44:73	8	output_pixel
arg	44:29	44:37	9	&dest[4]
op	44:29	0:0	10	&
water	44:30	0:0	10	dest
op	44:34	0:0	10	[
water	44:35	0:0	10	4
op	44:36	0:0	10	]
arg	44:39	44:73	9	av_clip_uintp2(G+Y2,30)>>14
call	44:39	44:66	10	av_clip_uintp2
arg	44:56	44:62	11	G+Y2
water	44:56	0:0	12	G
op	44:58	0:0	12	+
water	44:60	0:0	12	Y2
arg	44:64	44:66	11	30
water	44:64	0:0	12	30
op	44:68	0:0	10	>>
water	44:71	0:0	10	14
water	44:74	0:0	8	;
call	45:16	45:73	8	output_pixel
arg	45:29	45:37	9	&dest[5]
op	45:29	0:0	10	&
water	45:30	0:0	10	dest
op	45:34	0:0	10	[
water	45:35	0:0	10	5
op	45:36	0:0	10	]
arg	45:39	45:73	9	av_clip_uintp2(B_R+Y2,30)>>14
call	45:39	45:66	10	av_clip_uintp2
arg	45:54	45:62	11	B_R+Y2
water	45:54	0:0	12	B_R
op	45:58	0:0	12	+
water	45:60	0:0	12	Y2
arg	45:64	45:66	11	30
water	45:64	0:0	12	30
op	45:68	0:0	10	>>
water	45:71	0:0	10	14
water	45:74	0:0	8	;
water	46:16	0:0	8	dest
op	46:21	0:0	8	+=
water	46:24	0:0	8	6
water	46:25	0:0	8	;
water	47:12	0:0	8	}
water	48:8	0:0	6	}
water	49:4	0:0	4	}
else	49:6	90:4	2
stmts	49:11	90:4	3	
water	49:11	0:0	4	{
decl	50:8	50:56	4	const int32_t	*ubuf1
op	50:29	0:0	4	=
water	50:31	0:0	4	ubuf
op	50:35	0:0	4	[
water	50:36	0:0	4	1
op	50:37	0:0	4	]
water	50:38	0:0	4	,
decl	50:8	50:56	4	const int32_t	*vbuf1
op	50:47	0:0	4	=
water	50:49	0:0	4	vbuf
op	50:53	0:0	4	[
water	50:54	0:0	4	1
op	50:55	0:0	4	]
decl	51:8	51:44	4	int	A1
op	51:15	0:0	4	=
water	51:17	0:0	4	0
water	51:18	0:0	4	xffff
op	51:23	0:0	4	<<
water	51:25	0:0	4	14
water	51:27	0:0	4	,
decl	51:8	51:44	4	int	A2
op	51:32	0:0	4	=
water	51:34	0:0	4	0
water	51:35	0:0	4	xffff
op	51:40	0:0	4	<<
water	51:42	0:0	4	14
for	52:8	89:8	4	(i = 0 ;i < ( ( dstW + 1 ) >> 1 );i ++)
forinit	52:13	52:18	5	i = 0 ;
water	52:13	0:0	6	i
op	52:15	0:0	6	=
water	52:17	0:0	6	0
water	52:18	0:0	6	;
cond	52:20	52:40	5	i < ( ( dstW + 1 ) >> 1 )
water	52:20	0:0	6	i
op	52:22	0:0	6	<
water	52:24	0:0	6	(
water	52:25	0:0	6	(
water	52:26	0:0	6	dstW
op	52:31	0:0	6	+
water	52:33	0:0	6	1
water	52:34	0:0	6	)
op	52:36	0:0	6	>>
water	52:39	0:0	6	1
water	52:40	0:0	6	)
forexpr	52:43	52:44	5	i ++
water	52:43	0:0	6	i
op	52:44	0:0	6	++
stmts	52:48	89:8	5	
water	52:48	0:0	6	{
decl	53:12	53:43	6	int	Y1
op	53:19	0:0	6	=
water	53:21	0:0	6	(
water	53:22	0:0	6	buf0
op	53:26	0:0	6	[
water	53:27	0:0	6	i
op	53:29	0:0	6	*
water	53:31	0:0	6	2
op	53:32	0:0	6	]
water	53:37	0:0	6	)
op	53:39	0:0	6	>>
water	53:42	0:0	6	2
decl	54:12	54:43	6	int	Y2
op	54:19	0:0	6	=
water	54:21	0:0	6	(
water	54:22	0:0	6	buf0
op	54:26	0:0	6	[
water	54:27	0:0	6	i
op	54:29	0:0	6	*
water	54:31	0:0	6	2
op	54:33	0:0	6	+
water	54:35	0:0	6	1
op	54:36	0:0	6	]
water	54:37	0:0	6	)
op	54:39	0:0	6	>>
water	54:42	0:0	6	2
decl	55:12	55:62	6	int	U
op	55:19	0:0	6	=
water	55:21	0:0	6	(
water	55:22	0:0	6	ubuf0
op	55:27	0:0	6	[
water	55:28	0:0	6	i
op	55:29	0:0	6	]
op	55:31	0:0	6	+
water	55:33	0:0	6	ubuf1
op	55:38	0:0	6	[
water	55:39	0:0	6	i
op	55:40	0:0	6	]
op	55:42	0:0	6	+
water	55:44	0:0	6	(
op	55:45	0:0	6	-
water	55:46	0:0	6	128
op	55:50	0:0	6	<<
water	55:53	0:0	6	12
water	55:55	0:0	6	)
water	55:56	0:0	6	)
op	55:58	0:0	6	>>
water	55:61	0:0	6	3
decl	56:12	56:62	6	int	V
op	56:19	0:0	6	=
water	56:21	0:0	6	(
water	56:22	0:0	6	vbuf0
op	56:27	0:0	6	[
water	56:28	0:0	6	i
op	56:29	0:0	6	]
op	56:31	0:0	6	+
water	56:33	0:0	6	vbuf1
op	56:38	0:0	6	[
water	56:39	0:0	6	i
op	56:40	0:0	6	]
op	56:42	0:0	6	+
water	56:44	0:0	6	(
op	56:45	0:0	6	-
water	56:46	0:0	6	128
op	56:50	0:0	6	<<
water	56:53	0:0	6	12
water	56:55	0:0	6	)
water	56:56	0:0	6	)
op	56:58	0:0	6	>>
water	56:61	0:0	6	3
decl	57:12	57:23	6	int	R
water	57:17	0:0	6	,
decl	57:12	57:23	6	int	G
water	57:20	0:0	6	,
decl	57:12	57:23	6	int	B
water	58:12	0:0	6	Y1
op	58:15	0:0	6	-=
water	58:18	0:0	6	c
op	58:19	0:0	6	->
water	58:21	0:0	6	yuv2rgb_y_offset
water	58:37	0:0	6	;
water	59:12	0:0	6	Y2
op	59:15	0:0	6	-=
water	59:18	0:0	6	c
op	59:19	0:0	6	->
water	59:21	0:0	6	yuv2rgb_y_offset
water	59:37	0:0	6	;
water	60:12	0:0	6	Y1
op	60:15	0:0	6	*=
water	60:18	0:0	6	c
op	60:19	0:0	6	->
water	60:21	0:0	6	yuv2rgb_y_coeff
water	60:36	0:0	6	;
water	61:12	0:0	6	Y2
op	61:15	0:0	6	*=
water	61:18	0:0	6	c
op	61:19	0:0	6	->
water	61:21	0:0	6	yuv2rgb_y_coeff
water	61:36	0:0	6	;
water	62:12	0:0	6	Y1
op	62:15	0:0	6	+=
water	62:18	0:0	6	1
op	62:20	0:0	6	<<
water	62:23	0:0	6	13
water	62:25	0:0	6	;
water	63:12	0:0	6	Y2
op	63:15	0:0	6	+=
water	63:18	0:0	6	1
op	63:20	0:0	6	<<
water	63:23	0:0	6	13
water	63:25	0:0	6	;
if	64:12	69:12	6	(hasAlpha)
cond	64:16	64:16	7	hasAlpha
water	64:16	0:0	8	hasAlpha
stmts	64:26	69:12	7	
water	64:26	0:0	8	{
water	65:16	0:0	8	A1
op	65:19	0:0	8	=
water	65:21	0:0	8	abuf0
op	65:26	0:0	8	[
water	65:27	0:0	8	i
op	65:29	0:0	8	*
water	65:31	0:0	8	2
op	65:36	0:0	8	]
op	65:38	0:0	8	<<
water	65:41	0:0	8	11
water	65:43	0:0	8	;
water	66:16	0:0	8	A2
op	66:19	0:0	8	=
water	66:21	0:0	8	abuf0
op	66:26	0:0	8	[
water	66:27	0:0	8	i
op	66:29	0:0	8	*
water	66:31	0:0	8	2
op	66:33	0:0	8	+
water	66:35	0:0	8	1
op	66:36	0:0	8	]
op	66:38	0:0	8	<<
water	66:41	0:0	8	11
water	66:43	0:0	8	;
water	67:16	0:0	8	A1
op	67:19	0:0	8	+=
water	67:22	0:0	8	1
op	67:24	0:0	8	<<
water	67:27	0:0	8	13
water	67:29	0:0	8	;
water	68:16	0:0	8	A2
op	68:19	0:0	8	+=
water	68:22	0:0	8	1
op	68:24	0:0	8	<<
water	68:27	0:0	8	13
water	68:29	0:0	8	;
water	69:12	0:0	8	}
water	70:12	0:0	6	R
op	70:14	0:0	6	=
water	70:16	0:0	6	V
op	70:18	0:0	6	*
water	70:20	0:0	6	c
op	70:21	0:0	6	->
water	70:23	0:0	6	yuv2rgb_v2r_coeff
water	70:40	0:0	6	;
water	71:12	0:0	6	G
op	71:14	0:0	6	=
water	71:16	0:0	6	V
op	71:18	0:0	6	*
water	71:20	0:0	6	c
op	71:21	0:0	6	->
water	71:23	0:0	6	yuv2rgb_v2g_coeff
op	71:41	0:0	6	+
water	71:43	0:0	6	U
op	71:45	0:0	6	*
water	71:47	0:0	6	c
op	71:48	0:0	6	->
water	71:50	0:0	6	yuv2rgb_u2g_coeff
water	71:67	0:0	6	;
water	72:12	0:0	6	B
op	72:14	0:0	6	=
water	72:43	0:0	6	U
op	72:45	0:0	6	*
water	72:47	0:0	6	c
op	72:48	0:0	6	->
water	72:50	0:0	6	yuv2rgb_u2b_coeff
water	72:67	0:0	6	;
call	73:12	73:69	6	output_pixel
arg	73:25	73:33	7	&dest[0]
op	73:25	0:0	8	&
water	73:26	0:0	8	dest
op	73:30	0:0	8	[
water	73:31	0:0	8	0
op	73:32	0:0	8	]
arg	73:35	73:69	7	av_clip_uintp2(R_B+Y1,30)>>14
call	73:35	73:62	8	av_clip_uintp2
arg	73:50	73:58	9	R_B+Y1
water	73:50	0:0	10	R_B
op	73:54	0:0	10	+
water	73:56	0:0	10	Y1
arg	73:60	73:62	9	30
water	73:60	0:0	10	30
op	73:64	0:0	8	>>
water	73:67	0:0	8	14
water	73:70	0:0	6	;
call	74:12	74:69	6	output_pixel
arg	74:25	74:33	7	&dest[1]
op	74:25	0:0	8	&
water	74:26	0:0	8	dest
op	74:30	0:0	8	[
water	74:31	0:0	8	1
op	74:32	0:0	8	]
arg	74:35	74:69	7	av_clip_uintp2(G+Y1,30)>>14
call	74:35	74:62	8	av_clip_uintp2
arg	74:52	74:58	9	G+Y1
water	74:52	0:0	10	G
op	74:54	0:0	10	+
water	74:56	0:0	10	Y1
arg	74:60	74:62	9	30
water	74:60	0:0	10	30
op	74:64	0:0	8	>>
water	74:67	0:0	8	14
water	74:70	0:0	6	;
call	75:12	75:69	6	output_pixel
arg	75:25	75:33	7	&dest[2]
op	75:25	0:0	8	&
water	75:26	0:0	8	dest
op	75:30	0:0	8	[
water	75:31	0:0	8	2
op	75:32	0:0	8	]
arg	75:35	75:69	7	av_clip_uintp2(B_R+Y1,30)>>14
call	75:35	75:62	8	av_clip_uintp2
arg	75:50	75:58	9	B_R+Y1
water	75:50	0:0	10	B_R
op	75:54	0:0	10	+
water	75:56	0:0	10	Y1
arg	75:60	75:62	9	30
water	75:60	0:0	10	30
op	75:64	0:0	8	>>
water	75:67	0:0	8	14
water	75:70	0:0	6	;
if	76:12	83:12	6	(eightbytes)
cond	76:16	76:16	7	eightbytes
water	76:16	0:0	8	eightbytes
stmts	76:28	83:12	7	
water	76:28	0:0	8	{
call	77:16	77:73	8	output_pixel
arg	77:29	77:37	9	&dest[3]
op	77:29	0:0	10	&
water	77:30	0:0	10	dest
op	77:34	0:0	10	[
water	77:35	0:0	10	3
op	77:36	0:0	10	]
arg	77:39	77:73	9	av_clip_uintp2(A1,30)>>14
call	77:39	77:66	10	av_clip_uintp2
arg	77:54	77:62	11	A1
water	77:54	0:0	12	A1
arg	77:64	77:66	11	30
water	77:64	0:0	12	30
op	77:68	0:0	10	>>
water	77:71	0:0	10	14
water	77:74	0:0	8	;
call	78:16	78:73	8	output_pixel
arg	78:29	78:37	9	&dest[4]
op	78:29	0:0	10	&
water	78:30	0:0	10	dest
op	78:34	0:0	10	[
water	78:35	0:0	10	4
op	78:36	0:0	10	]
arg	78:39	78:73	9	av_clip_uintp2(R_B+Y2,30)>>14
call	78:39	78:66	10	av_clip_uintp2
arg	78:54	78:62	11	R_B+Y2
water	78:54	0:0	12	R_B
op	78:58	0:0	12	+
water	78:60	0:0	12	Y2
arg	78:64	78:66	11	30
water	78:64	0:0	12	30
op	78:68	0:0	10	>>
water	78:71	0:0	10	14
water	78:74	0:0	8	;
call	79:16	79:73	8	output_pixel
arg	79:29	79:37	9	&dest[5]
op	79:29	0:0	10	&
water	79:30	0:0	10	dest
op	79:34	0:0	10	[
water	79:35	0:0	10	5
op	79:36	0:0	10	]
arg	79:39	79:73	9	av_clip_uintp2(G+Y2,30)>>14
call	79:39	79:66	10	av_clip_uintp2
arg	79:56	79:62	11	G+Y2
water	79:56	0:0	12	G
op	79:58	0:0	12	+
water	79:60	0:0	12	Y2
arg	79:64	79:66	11	30
water	79:64	0:0	12	30
op	79:68	0:0	10	>>
water	79:71	0:0	10	14
water	79:74	0:0	8	;
call	80:16	80:73	8	output_pixel
arg	80:29	80:37	9	&dest[6]
op	80:29	0:0	10	&
water	80:30	0:0	10	dest
op	80:34	0:0	10	[
water	80:35	0:0	10	6
op	80:36	0:0	10	]
arg	80:39	80:73	9	av_clip_uintp2(B_R+Y2,30)>>14
call	80:39	80:66	10	av_clip_uintp2
arg	80:54	80:62	11	B_R+Y2
water	80:54	0:0	12	B_R
op	80:58	0:0	12	+
water	80:60	0:0	12	Y2
arg	80:64	80:66	11	30
water	80:64	0:0	12	30
op	80:68	0:0	10	>>
water	80:71	0:0	10	14
water	80:74	0:0	8	;
call	81:16	81:73	8	output_pixel
arg	81:29	81:37	9	&dest[7]
op	81:29	0:0	10	&
water	81:30	0:0	10	dest
op	81:34	0:0	10	[
water	81:35	0:0	10	7
op	81:36	0:0	10	]
arg	81:39	81:73	9	av_clip_uintp2(A2,30)>>14
call	81:39	81:66	10	av_clip_uintp2
arg	81:54	81:62	11	A2
water	81:54	0:0	12	A2
arg	81:64	81:66	11	30
water	81:64	0:0	12	30
op	81:68	0:0	10	>>
water	81:71	0:0	10	14
water	81:74	0:0	8	;
water	82:16	0:0	8	dest
op	82:21	0:0	8	+=
water	82:24	0:0	8	8
water	82:25	0:0	8	;
water	83:12	0:0	8	}
else	83:14	88:12	6
stmts	83:19	88:12	7	
water	83:19	0:0	8	{
call	84:16	84:73	8	output_pixel
arg	84:29	84:37	9	&dest[3]
op	84:29	0:0	10	&
water	84:30	0:0	10	dest
op	84:34	0:0	10	[
water	84:35	0:0	10	3
op	84:36	0:0	10	]
arg	84:39	84:73	9	av_clip_uintp2(R_B+Y2,30)>>14
call	84:39	84:66	10	av_clip_uintp2
arg	84:54	84:62	11	R_B+Y2
water	84:54	0:0	12	R_B
op	84:58	0:0	12	+
water	84:60	0:0	12	Y2
arg	84:64	84:66	11	30
water	84:64	0:0	12	30
op	84:68	0:0	10	>>
water	84:71	0:0	10	14
water	84:74	0:0	8	;
call	85:16	85:73	8	output_pixel
arg	85:29	85:37	9	&dest[4]
op	85:29	0:0	10	&
water	85:30	0:0	10	dest
op	85:34	0:0	10	[
water	85:35	0:0	10	4
op	85:36	0:0	10	]
arg	85:39	85:73	9	av_clip_uintp2(G+Y2,30)>>14
call	85:39	85:66	10	av_clip_uintp2
arg	85:56	85:62	11	G+Y2
water	85:56	0:0	12	G
op	85:58	0:0	12	+
water	85:60	0:0	12	Y2
arg	85:64	85:66	11	30
water	85:64	0:0	12	30
op	85:68	0:0	10	>>
water	85:71	0:0	10	14
water	85:74	0:0	8	;
call	86:16	86:73	8	output_pixel
arg	86:29	86:37	9	&dest[5]
op	86:29	0:0	10	&
water	86:30	0:0	10	dest
op	86:34	0:0	10	[
water	86:35	0:0	10	5
op	86:36	0:0	10	]
arg	86:39	86:73	9	av_clip_uintp2(B_R+Y2,30)>>14
call	86:39	86:66	10	av_clip_uintp2
arg	86:54	86:62	11	B_R+Y2
water	86:54	0:0	12	B_R
op	86:58	0:0	12	+
water	86:60	0:0	12	Y2
arg	86:64	86:66	11	30
water	86:64	0:0	12	30
op	86:68	0:0	10	>>
water	86:71	0:0	10	14
water	86:74	0:0	8	;
water	87:16	0:0	8	dest
op	87:21	0:0	8	+=
water	87:24	0:0	8	6
water	87:25	0:0	8	;
water	88:12	0:0	8	}
water	89:8	0:0	6	}
water	90:4	0:0	4	}

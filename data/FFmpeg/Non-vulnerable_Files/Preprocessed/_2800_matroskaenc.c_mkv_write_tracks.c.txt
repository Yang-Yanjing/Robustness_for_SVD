func	1:0	22:0	0	static int	mkv_write_tracks
params	1:27	0:0	1	
param	1:28	1:46	2	AVFormatContext *	s
stmnts	0:0	21:12	1	
decl	3:4	3:42	2	MatroskaMuxContext	*mkv
op	3:28	0:0	2	=
water	3:30	0:0	2	s
op	3:31	0:0	2	->
water	3:33	0:0	2	priv_data
decl	4:4	4:27	2	AVIOContext	*pb
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	pb
decl	5:4	5:22	2	ebml_master	tracks
decl	6:4	6:41	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:41	2	int	ret
water	6:14	0:0	2	,
decl	6:4	6:41	2	int	default_stream_exists
op	6:38	0:0	2	=
water	6:40	0:0	2	0
water	7:4	0:0	2	ret
op	7:8	0:0	2	=
call	7:10	7:86	2	mkv_add_seekhead_entry
arg	7:33	7:51	3	mkv->main_seekhead
water	7:33	0:0	4	mkv
op	7:36	0:0	4	->
water	7:38	0:0	4	main_seekhead
arg	7:53	7:71	3	MATROSKA_ID_TRACKS
water	7:53	0:0	4	MATROSKA_ID_TRACKS
arg	7:73	7:86	3	avio_tell(pb)
call	7:73	7:85	4	avio_tell
arg	7:83	7:85	5	pb
water	7:83	0:0	6	pb
water	7:87	0:0	2	;
if	8:4	9:18	2	(ret < 0)
cond	8:8	8:14	3	ret < 0
water	8:8	0:0	4	ret
op	8:12	0:0	4	<
water	8:14	0:0	4	0
stmts	9:8	9:18	3	
return	9:8	9:18	4	ret
water	9:15	0:0	5	ret
water	10:4	0:0	2	tracks
op	10:11	0:0	2	=
call	10:13	10:56	2	start_ebml_master
arg	10:31	10:33	3	pb
water	10:31	0:0	4	pb
arg	10:35	10:53	3	MATROSKA_ID_TRACKS
water	10:35	0:0	4	MATROSKA_ID_TRACKS
arg	10:55	10:56	3	0
water	10:55	0:0	4	0
water	10:57	0:0	2	;
for	11:4	14:4	2	(i = 0 ;i < s -> nb_streams;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:23	3	i < s -> nb_streams
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	s
op	11:21	0:0	4	->
water	11:23	0:0	4	nb_streams
forexpr	11:35	11:36	3	i ++
water	11:35	0:0	4	i
op	11:36	0:0	4	++
stmts	11:40	14:4	3	
water	11:40	0:0	4	{
decl	12:8	12:36	4	AVStream	*st
op	12:21	0:0	4	=
water	12:23	0:0	4	s
op	12:24	0:0	4	->
water	12:26	0:0	4	streams
op	12:33	0:0	4	[
water	12:34	0:0	4	i
op	12:35	0:0	4	]
water	13:8	0:0	4	default_stream_exists
op	13:30	0:0	4	|=
water	13:33	0:0	4	st
op	13:35	0:0	4	->
water	13:37	0:0	4	disposition
op	13:49	0:0	4	&
water	13:51	0:0	4	AV_DISPOSITION_DEFAULT
water	13:73	0:0	4	;
water	14:4	0:0	4	}
for	15:4	19:4	2	(i = 0 ;i < s -> nb_streams;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:23	3	i < s -> nb_streams
water	15:16	0:0	4	i
op	15:18	0:0	4	<
water	15:20	0:0	4	s
op	15:21	0:0	4	->
water	15:23	0:0	4	nb_streams
forexpr	15:35	15:36	3	i ++
water	15:35	0:0	4	i
op	15:36	0:0	4	++
stmts	15:40	19:4	3	
water	15:40	0:0	4	{
water	16:8	0:0	4	ret
op	16:12	0:0	4	=
call	16:14	16:66	4	mkv_write_track
arg	16:30	16:31	5	s
water	16:30	0:0	6	s
arg	16:33	16:36	5	mkv
water	16:33	0:0	6	mkv
arg	16:38	16:39	5	i
water	16:38	0:0	6	i
arg	16:41	16:43	5	pb
water	16:41	0:0	6	pb
arg	16:45	16:66	5	default_stream_exists
water	16:45	0:0	6	default_stream_exists
water	16:67	0:0	4	;
if	17:8	18:22	4	(ret < 0)
cond	17:12	17:18	5	ret < 0
water	17:12	0:0	6	ret
op	17:16	0:0	6	<
water	17:18	0:0	6	0
stmts	18:12	18:22	5	
return	18:12	18:22	6	ret
water	18:19	0:0	7	ret
water	19:4	0:0	4	}
call	20:4	20:30	2	end_ebml_master
arg	20:20	20:22	3	pb
water	20:20	0:0	4	pb
arg	20:24	20:30	3	tracks
water	20:24	0:0	4	tracks
water	20:31	0:0	2	;
return	21:4	21:12	2	0
water	21:11	0:0	3	0

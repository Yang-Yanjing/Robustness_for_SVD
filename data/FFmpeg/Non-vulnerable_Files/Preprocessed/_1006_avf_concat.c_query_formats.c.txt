func	2:0	40:0	0	static int	query_formats
params	2:24	0:0	1	
param	2:25	2:45	2	AVFilterContext *	ctx
stmnts	0:0	39:12	1	
decl	4:4	4:34	2	ConcatContext	*cat
op	4:23	0:0	2	=
water	4:25	0:0	2	ctx
op	4:28	0:0	2	->
water	4:30	0:0	2	priv
water	5:4	0:0	2	unsigned
water	5:13	0:0	2	type
water	5:17	0:0	2	,
water	5:19	0:0	2	nb_str
water	5:25	0:0	2	,
water	5:27	0:0	2	idx0
op	5:32	0:0	2	=
water	5:34	0:0	2	0
water	5:35	0:0	2	,
water	5:37	0:0	2	idx
water	5:40	0:0	2	,
water	5:42	0:0	2	str
water	5:45	0:0	2	,
water	5:47	0:0	2	seg
water	5:50	0:0	2	;
decl	6:4	6:43	2	AVFilterFormats	*formats
water	6:28	0:0	2	,
decl	6:4	6:43	2	AVFilterFormats	*rates
op	6:37	0:0	2	=
water	6:39	0:0	2	NULL
decl	7:4	7:42	2	AVFilterChannelLayouts	*layouts
op	7:36	0:0	2	=
water	7:38	0:0	2	NULL
for	8:4	38:4	2	(type = 0 ;type < TYPE_ALL;type ++)
forinit	8:9	8:17	3	type = 0 ;
water	8:9	0:0	4	type
op	8:14	0:0	4	=
water	8:16	0:0	4	0
water	8:17	0:0	4	;
cond	8:19	8:26	3	type < TYPE_ALL
water	8:19	0:0	4	type
op	8:24	0:0	4	<
water	8:26	0:0	4	TYPE_ALL
forexpr	8:36	8:40	3	type ++
water	8:36	0:0	4	type
op	8:40	0:0	4	++
stmts	8:44	38:4	3	
water	8:44	0:0	4	{
water	9:8	0:0	4	nb_str
op	9:15	0:0	4	=
water	9:17	0:0	4	cat
op	9:20	0:0	4	->
water	9:22	0:0	4	nb_streams
op	9:32	0:0	4	[
water	9:33	0:0	4	type
op	9:37	0:0	4	]
water	9:38	0:0	4	;
for	10:8	37:8	4	(str = 0 ;str < nb_str;str ++)
forinit	10:13	10:20	5	str = 0 ;
water	10:13	0:0	6	str
op	10:17	0:0	6	=
water	10:19	0:0	6	0
water	10:20	0:0	6	;
cond	10:22	10:28	5	str < nb_str
water	10:22	0:0	6	str
op	10:26	0:0	6	<
water	10:28	0:0	6	nb_str
forexpr	10:36	10:39	5	str ++
water	10:36	0:0	6	str
op	10:39	0:0	6	++
stmts	10:43	37:8	5	
water	10:43	0:0	6	{
water	11:12	0:0	6	idx
op	11:16	0:0	6	=
water	11:18	0:0	6	idx0
water	11:22	0:0	6	;
water	13:12	0:0	6	formats
op	13:20	0:0	6	=
call	13:22	13:41	6	ff_all_formats
arg	13:37	13:41	7	type
water	13:37	0:0	8	type
water	13:42	0:0	6	;
if	14:12	15:38	6	(! formats)
cond	14:16	14:17	7	! formats
op	14:16	0:0	8	!
water	14:17	0:0	8	formats
stmts	15:16	15:38	7	
return	15:16	15:38	8	AVERROR(ENOMEM)
call	15:23	15:37	9	AVERROR
arg	15:31	15:37	10	ENOMEM
water	15:31	0:0	11	ENOMEM
call	16:12	16:66	6	ff_formats_ref
arg	16:27	16:34	7	formats
water	16:27	0:0	8	formats
arg	16:36	16:66	7	&ctx->outputs[idx]->in_formats
op	16:36	0:0	8	&
water	16:37	0:0	8	ctx
op	16:40	0:0	8	->
water	16:42	0:0	8	outputs
op	16:49	0:0	8	[
water	16:50	0:0	8	idx
op	16:53	0:0	8	]
op	16:54	0:0	8	->
water	16:56	0:0	8	in_formats
water	16:67	0:0	6	;
if	17:12	26:12	6	(type == AVMEDIA_TYPE_AUDIO)
cond	17:16	17:24	7	type == AVMEDIA_TYPE_AUDIO
water	17:16	0:0	8	type
op	17:21	0:0	8	==
water	17:24	0:0	8	AVMEDIA_TYPE_AUDIO
stmts	17:44	26:12	7	
water	17:44	0:0	8	{
water	18:16	0:0	8	rates
op	18:22	0:0	8	=
call	18:24	18:43	8	ff_all_samplerates
water	18:44	0:0	8	;
if	19:16	20:42	8	(! rates)
cond	19:20	19:21	9	! rates
op	19:20	0:0	10	!
water	19:21	0:0	10	rates
stmts	20:20	20:42	9	
return	20:20	20:42	10	AVERROR(ENOMEM)
call	20:27	20:41	11	AVERROR
arg	20:35	20:41	12	ENOMEM
water	20:35	0:0	13	ENOMEM
call	21:16	21:72	8	ff_formats_ref
arg	21:31	21:36	9	rates
water	21:31	0:0	10	rates
arg	21:38	21:72	9	&ctx->outputs[idx]->in_samplerates
op	21:38	0:0	10	&
water	21:39	0:0	10	ctx
op	21:42	0:0	10	->
water	21:44	0:0	10	outputs
op	21:51	0:0	10	[
water	21:52	0:0	10	idx
op	21:55	0:0	10	]
op	21:56	0:0	10	->
water	21:58	0:0	10	in_samplerates
water	21:73	0:0	8	;
water	22:16	0:0	8	layouts
op	22:24	0:0	8	=
call	22:26	22:49	8	ff_all_channel_layouts
water	22:50	0:0	8	;
if	23:16	24:42	8	(! layouts)
cond	23:20	23:21	9	! layouts
op	23:20	0:0	10	!
water	23:21	0:0	10	layouts
stmts	24:20	24:42	9	
return	24:20	24:42	10	AVERROR(ENOMEM)
call	24:27	24:41	11	AVERROR
arg	24:35	24:41	12	ENOMEM
water	24:35	0:0	13	ENOMEM
call	25:16	25:86	8	ff_channel_layouts_ref
arg	25:39	25:46	9	layouts
water	25:39	0:0	10	layouts
arg	25:48	25:86	9	&ctx->outputs[idx]->in_channel_layouts
op	25:48	0:0	10	&
water	25:49	0:0	10	ctx
op	25:52	0:0	10	->
water	25:54	0:0	10	outputs
op	25:61	0:0	10	[
water	25:62	0:0	10	idx
op	25:65	0:0	10	]
op	25:66	0:0	10	->
water	25:68	0:0	10	in_channel_layouts
water	25:87	0:0	8	;
water	26:12	0:0	8	}
for	28:12	35:12	6	(seg = 0 ;seg < cat -> nb_segments;seg ++)
forinit	28:17	28:24	7	seg = 0 ;
water	28:17	0:0	8	seg
op	28:21	0:0	8	=
water	28:23	0:0	8	0
water	28:24	0:0	8	;
cond	28:26	28:37	7	seg < cat -> nb_segments
water	28:26	0:0	8	seg
op	28:30	0:0	8	<
water	28:32	0:0	8	cat
op	28:35	0:0	8	->
water	28:37	0:0	8	nb_segments
forexpr	28:50	28:53	7	seg ++
water	28:50	0:0	8	seg
op	28:53	0:0	8	++
stmts	28:57	35:12	7	
water	28:57	0:0	8	{
call	29:16	29:70	8	ff_formats_ref
arg	29:31	29:38	9	formats
water	29:31	0:0	10	formats
arg	29:40	29:70	9	&ctx->inputs[idx]->out_formats
op	29:40	0:0	10	&
water	29:41	0:0	10	ctx
op	29:44	0:0	10	->
water	29:46	0:0	10	inputs
op	29:52	0:0	10	[
water	29:53	0:0	10	idx
op	29:56	0:0	10	]
op	29:57	0:0	10	->
water	29:59	0:0	10	out_formats
water	29:71	0:0	8	;
if	30:16	33:16	8	(type == AVMEDIA_TYPE_AUDIO)
cond	30:20	30:28	9	type == AVMEDIA_TYPE_AUDIO
water	30:20	0:0	10	type
op	30:25	0:0	10	==
water	30:28	0:0	10	AVMEDIA_TYPE_AUDIO
stmts	30:48	33:16	9	
water	30:48	0:0	10	{
call	31:20	31:76	10	ff_formats_ref
arg	31:35	31:40	11	rates
water	31:35	0:0	12	rates
arg	31:42	31:76	11	&ctx->inputs[idx]->out_samplerates
op	31:42	0:0	12	&
water	31:43	0:0	12	ctx
op	31:46	0:0	12	->
water	31:48	0:0	12	inputs
op	31:54	0:0	12	[
water	31:55	0:0	12	idx
op	31:58	0:0	12	]
op	31:59	0:0	12	->
water	31:61	0:0	12	out_samplerates
water	31:77	0:0	10	;
call	32:20	32:90	10	ff_channel_layouts_ref
arg	32:43	32:50	11	layouts
water	32:43	0:0	12	layouts
arg	32:52	32:90	11	&ctx->inputs[idx]->out_channel_layouts
op	32:52	0:0	12	&
water	32:53	0:0	12	ctx
op	32:56	0:0	12	->
water	32:58	0:0	12	inputs
op	32:64	0:0	12	[
water	32:65	0:0	12	idx
op	32:68	0:0	12	]
op	32:69	0:0	12	->
water	32:71	0:0	12	out_channel_layouts
water	32:91	0:0	10	;
water	33:16	0:0	10	}
water	34:16	0:0	8	idx
op	34:20	0:0	8	+=
water	34:23	0:0	8	ctx
op	34:26	0:0	8	->
water	34:28	0:0	8	nb_outputs
water	34:38	0:0	8	;
water	35:12	0:0	8	}
water	36:12	0:0	6	idx0
op	36:16	0:0	6	++
water	36:18	0:0	6	;
water	37:8	0:0	6	}
water	38:4	0:0	4	}
return	39:4	39:12	2	0
water	39:11	0:0	3	0

func	1:0	85:0	0	int	ff_ac3_bit_alloc_calc_mask
params	1:30	0:0	1	
param	1:31	1:55	2	AC3BitAllocParameters *	s
param	1:57	1:74	2	int16_t *	band_psd
param	2:31	2:40	2	int	start
param	2:42	2:49	2	int	end
param	2:51	2:64	2	int	fast_gain
param	2:66	2:76	2	int	is_lfe
param	3:31	3:43	2	int	dba_mode
param	3:45	3:58	2	int	dba_nsegs
param	3:60	3:80	2	uint8_t *	dba_offsets
param	4:31	4:51	2	uint8_t *	dba_lengths
param	4:53	4:72	2	uint8_t *	dba_values
param	5:31	5:44	2	int16_t *	mask
stmnts	0:0	84:12	1	
decl	7:4	7:38	2	int16_t	excite[AC3_CRITICAL_BANDS]
decl	8:4	8:12	2	int	band
decl	9:4	9:41	2	int	band_start
water	9:18	0:0	2	,
decl	9:4	9:41	2	int	band_end
water	9:28	0:0	2	,
decl	9:4	9:41	2	int	begin
water	9:35	0:0	2	,
decl	9:4	9:41	2	int	end1
decl	10:4	10:35	2	int	lowcomp
water	10:15	0:0	2	,
decl	10:4	10:35	2	int	fastleak
water	10:25	0:0	2	,
decl	10:4	10:35	2	int	slowleak
if	11:4	12:34	2	(end <= 0)
cond	11:8	11:15	3	end <= 0
water	11:8	0:0	4	end
op	11:12	0:0	4	<=
water	11:15	0:0	4	0
stmts	12:8	12:34	3	
return	12:8	12:34	4	AVERROR_INVALIDDATA
water	12:15	0:0	5	AVERROR_INVALIDDATA
water	14:4	0:0	2	band_start
op	14:15	0:0	2	=
water	14:17	0:0	2	ff_ac3_bin_to_band_tab
op	14:39	0:0	2	[
water	14:40	0:0	2	start
op	14:45	0:0	2	]
water	14:46	0:0	2	;
water	15:4	0:0	2	band_end
op	15:15	0:0	2	=
water	15:17	0:0	2	ff_ac3_bin_to_band_tab
op	15:39	0:0	2	[
water	15:40	0:0	2	end
op	15:43	0:0	2	-
water	15:44	0:0	2	1
op	15:45	0:0	2	]
op	15:47	0:0	2	+
water	15:49	0:0	2	1
water	15:50	0:0	2	;
if	16:4	45:4	2	(band_start == 0)
cond	16:8	16:22	3	band_start == 0
water	16:8	0:0	4	band_start
op	16:19	0:0	4	==
water	16:22	0:0	4	0
stmts	16:25	45:4	3	
water	16:25	0:0	4	{
water	17:8	0:0	4	lowcomp
op	17:16	0:0	4	=
water	17:18	0:0	4	0
water	17:19	0:0	4	;
water	18:8	0:0	4	lowcomp
op	18:16	0:0	4	=
call	18:18	18:70	4	calc_lowcomp1
arg	18:32	18:39	5	lowcomp
water	18:32	0:0	6	lowcomp
arg	18:41	18:52	5	band_psd[0]
water	18:41	0:0	6	band_psd
op	18:49	0:0	6	[
water	18:50	0:0	6	0
op	18:51	0:0	6	]
arg	18:54	18:65	5	band_psd[1]
water	18:54	0:0	6	band_psd
op	18:62	0:0	6	[
water	18:63	0:0	6	1
op	18:64	0:0	6	]
arg	18:67	18:70	5	384
water	18:67	0:0	6	384
water	18:71	0:0	4	;
water	19:8	0:0	4	excite
op	19:14	0:0	4	[
water	19:15	0:0	4	0
op	19:16	0:0	4	]
op	19:18	0:0	4	=
water	19:20	0:0	4	band_psd
op	19:28	0:0	4	[
water	19:29	0:0	4	0
op	19:30	0:0	4	]
op	19:32	0:0	4	-
water	19:34	0:0	4	fast_gain
op	19:44	0:0	4	-
water	19:46	0:0	4	lowcomp
water	19:53	0:0	4	;
water	20:8	0:0	4	lowcomp
op	20:16	0:0	4	=
call	20:18	20:70	4	calc_lowcomp1
arg	20:32	20:39	5	lowcomp
water	20:32	0:0	6	lowcomp
arg	20:41	20:52	5	band_psd[1]
water	20:41	0:0	6	band_psd
op	20:49	0:0	6	[
water	20:50	0:0	6	1
op	20:51	0:0	6	]
arg	20:54	20:65	5	band_psd[2]
water	20:54	0:0	6	band_psd
op	20:62	0:0	6	[
water	20:63	0:0	6	2
op	20:64	0:0	6	]
arg	20:67	20:70	5	384
water	20:67	0:0	6	384
water	20:71	0:0	4	;
water	21:8	0:0	4	excite
op	21:14	0:0	4	[
water	21:15	0:0	4	1
op	21:16	0:0	4	]
op	21:18	0:0	4	=
water	21:20	0:0	4	band_psd
op	21:28	0:0	4	[
water	21:29	0:0	4	1
op	21:30	0:0	4	]
op	21:32	0:0	4	-
water	21:34	0:0	4	fast_gain
op	21:44	0:0	4	-
water	21:46	0:0	4	lowcomp
water	21:53	0:0	4	;
water	22:8	0:0	4	begin
op	22:14	0:0	4	=
water	22:16	0:0	4	7
water	22:17	0:0	4	;
for	23:8	35:8	4	(band = 2 ;band < 7;band ++)
forinit	23:13	23:21	5	band = 2 ;
water	23:13	0:0	6	band
op	23:18	0:0	6	=
water	23:20	0:0	6	2
water	23:21	0:0	6	;
cond	23:23	23:30	5	band < 7
water	23:23	0:0	6	band
op	23:28	0:0	6	<
water	23:30	0:0	6	7
forexpr	23:33	23:37	5	band ++
water	23:33	0:0	6	band
op	23:37	0:0	6	++
stmts	23:41	35:8	5	
water	23:41	0:0	6	{
if	24:12	25:87	6	(! ( is_lfe && band == 6 ))
cond	24:16	24:37	7	! ( is_lfe && band == 6 )
op	24:16	0:0	8	!
water	24:17	0:0	8	(
water	24:18	0:0	8	is_lfe
op	24:25	0:0	8	&&
water	24:28	0:0	8	band
op	24:33	0:0	8	==
water	24:36	0:0	8	6
water	24:37	0:0	8	)
stmts	25:16	25:87	7	
water	25:16	0:0	8	lowcomp
op	25:24	0:0	8	=
call	25:26	25:86	8	calc_lowcomp1
arg	25:40	25:47	9	lowcomp
water	25:40	0:0	10	lowcomp
arg	25:49	25:63	9	band_psd[band]
water	25:49	0:0	10	band_psd
op	25:57	0:0	10	[
water	25:58	0:0	10	band
op	25:62	0:0	10	]
arg	25:65	25:81	9	band_psd[band+1]
water	25:65	0:0	10	band_psd
op	25:73	0:0	10	[
water	25:74	0:0	10	band
op	25:78	0:0	10	+
water	25:79	0:0	10	1
op	25:80	0:0	10	]
arg	25:83	25:86	9	384
water	25:83	0:0	10	384
water	25:87	0:0	8	;
water	26:12	0:0	6	fastleak
op	26:21	0:0	6	=
water	26:23	0:0	6	band_psd
op	26:31	0:0	6	[
water	26:32	0:0	6	band
op	26:36	0:0	6	]
op	26:38	0:0	6	-
water	26:40	0:0	6	fast_gain
water	26:49	0:0	6	;
water	27:12	0:0	6	slowleak
op	27:21	0:0	6	=
water	27:23	0:0	6	band_psd
op	27:31	0:0	6	[
water	27:32	0:0	6	band
op	27:36	0:0	6	]
op	27:38	0:0	6	-
water	27:40	0:0	6	s
op	27:41	0:0	6	->
water	27:43	0:0	6	slow_gain
water	27:52	0:0	6	;
water	28:12	0:0	6	excite
op	28:18	0:0	6	[
water	28:19	0:0	6	band
op	28:23	0:0	6	]
op	28:25	0:0	6	=
water	28:27	0:0	6	fastleak
op	28:36	0:0	6	-
water	28:38	0:0	6	lowcomp
water	28:45	0:0	6	;
if	29:12	34:12	6	(! ( is_lfe && band == 6 ))
cond	29:16	29:37	7	! ( is_lfe && band == 6 )
op	29:16	0:0	8	!
water	29:17	0:0	8	(
water	29:18	0:0	8	is_lfe
op	29:25	0:0	8	&&
water	29:28	0:0	8	band
op	29:33	0:0	8	==
water	29:36	0:0	8	6
water	29:37	0:0	8	)
stmts	29:40	34:12	7	
water	29:40	0:0	8	{
if	30:16	33:16	8	(band_psd [ band ] <= band_psd [ band + 1 ])
cond	30:20	30:53	9	band_psd [ band ] <= band_psd [ band + 1 ]
water	30:20	0:0	10	band_psd
op	30:28	0:0	10	[
water	30:29	0:0	10	band
op	30:33	0:0	10	]
op	30:35	0:0	10	<=
water	30:38	0:0	10	band_psd
op	30:46	0:0	10	[
water	30:47	0:0	10	band
op	30:51	0:0	10	+
water	30:52	0:0	10	1
op	30:53	0:0	10	]
stmts	30:56	33:16	9	
water	30:56	0:0	10	{
water	31:20	0:0	10	begin
op	31:26	0:0	10	=
water	31:28	0:0	10	band
op	31:33	0:0	10	+
water	31:35	0:0	10	1
water	31:36	0:0	10	;
break	32:20	32:25	10	
water	33:16	0:0	10	}
water	34:12	0:0	8	}
water	35:8	0:0	6	}
water	36:8	0:0	4	end1
op	36:13	0:0	4	=
call	36:15	36:33	4	FFMIN
arg	36:21	36:29	5	band_end
water	36:21	0:0	6	band_end
arg	36:31	36:33	5	22
water	36:31	0:0	6	22
water	36:34	0:0	4	;
for	37:8	43:8	4	(band = begin ;band < end1;band ++)
forinit	37:13	37:25	5	band = begin ;
water	37:13	0:0	6	band
op	37:18	0:0	6	=
water	37:20	0:0	6	begin
water	37:25	0:0	6	;
cond	37:27	37:34	5	band < end1
water	37:27	0:0	6	band
op	37:32	0:0	6	<
water	37:34	0:0	6	end1
forexpr	37:40	37:44	5	band ++
water	37:40	0:0	6	band
op	37:44	0:0	6	++
stmts	37:48	43:8	5	
water	37:48	0:0	6	{
if	38:12	39:87	6	(! ( is_lfe && band == 6 ))
cond	38:16	38:37	7	! ( is_lfe && band == 6 )
op	38:16	0:0	8	!
water	38:17	0:0	8	(
water	38:18	0:0	8	is_lfe
op	38:25	0:0	8	&&
water	38:28	0:0	8	band
op	38:33	0:0	8	==
water	38:36	0:0	8	6
water	38:37	0:0	8	)
stmts	39:16	39:87	7	
water	39:16	0:0	8	lowcomp
op	39:24	0:0	8	=
call	39:26	39:86	8	calc_lowcomp
arg	39:39	39:46	9	lowcomp
water	39:39	0:0	10	lowcomp
arg	39:48	39:62	9	band_psd[band]
water	39:48	0:0	10	band_psd
op	39:56	0:0	10	[
water	39:57	0:0	10	band
op	39:61	0:0	10	]
arg	39:64	39:80	9	band_psd[band+1]
water	39:64	0:0	10	band_psd
op	39:72	0:0	10	[
water	39:73	0:0	10	band
op	39:77	0:0	10	+
water	39:78	0:0	10	1
op	39:79	0:0	10	]
arg	39:82	39:86	9	band
water	39:82	0:0	10	band
water	39:87	0:0	8	;
water	40:12	0:0	6	fastleak
op	40:21	0:0	6	=
call	40:23	40:81	6	FFMAX
arg	40:29	40:53	7	fastleak-s->fast_decay
water	40:29	0:0	8	fastleak
op	40:38	0:0	8	-
water	40:40	0:0	8	s
op	40:41	0:0	8	->
water	40:43	0:0	8	fast_decay
arg	40:55	40:81	7	band_psd[band]-fast_gain
water	40:55	0:0	8	band_psd
op	40:63	0:0	8	[
water	40:64	0:0	8	band
op	40:68	0:0	8	]
op	40:70	0:0	8	-
water	40:72	0:0	8	fast_gain
water	40:82	0:0	6	;
water	41:12	0:0	6	slowleak
op	41:21	0:0	6	=
call	41:23	41:84	6	FFMAX
arg	41:29	41:53	7	slowleak-s->slow_decay
water	41:29	0:0	8	slowleak
op	41:38	0:0	8	-
water	41:40	0:0	8	s
op	41:41	0:0	8	->
water	41:43	0:0	8	slow_decay
arg	41:55	41:84	7	band_psd[band]-s->slow_gain
water	41:55	0:0	8	band_psd
op	41:63	0:0	8	[
water	41:64	0:0	8	band
op	41:68	0:0	8	]
op	41:70	0:0	8	-
water	41:72	0:0	8	s
op	41:73	0:0	8	->
water	41:75	0:0	8	slow_gain
water	41:85	0:0	6	;
water	42:12	0:0	6	excite
op	42:18	0:0	6	[
water	42:19	0:0	6	band
op	42:23	0:0	6	]
op	42:25	0:0	6	=
call	42:27	42:61	6	FFMAX
arg	42:33	42:51	7	fastleak-lowcomp
water	42:33	0:0	8	fastleak
op	42:42	0:0	8	-
water	42:44	0:0	8	lowcomp
arg	42:53	42:61	7	slowleak
water	42:53	0:0	8	slowleak
water	42:62	0:0	6	;
water	43:8	0:0	6	}
water	44:8	0:0	4	begin
op	44:14	0:0	4	=
water	44:16	0:0	4	22
water	44:18	0:0	4	;
water	45:4	0:0	4	}
else	45:6	50:4	2
stmts	45:11	50:4	3	
water	45:11	0:0	4	{
water	47:8	0:0	4	begin
op	47:14	0:0	4	=
water	47:16	0:0	4	band_start
water	47:26	0:0	4	;
water	48:8	0:0	4	fastleak
op	48:17	0:0	4	=
water	48:19	0:0	4	(
water	48:20	0:0	4	s
op	48:21	0:0	4	->
water	48:23	0:0	4	cpl_fast_leak
op	48:37	0:0	4	<<
water	48:40	0:0	4	8
water	48:41	0:0	4	)
op	48:43	0:0	4	+
water	48:45	0:0	4	768
water	48:48	0:0	4	;
water	49:8	0:0	4	slowleak
op	49:17	0:0	4	=
water	49:19	0:0	4	(
water	49:20	0:0	4	s
op	49:21	0:0	4	->
water	49:23	0:0	4	cpl_slow_leak
op	49:37	0:0	4	<<
water	49:40	0:0	4	8
water	49:41	0:0	4	)
op	49:43	0:0	4	+
water	49:45	0:0	4	768
water	49:48	0:0	4	;
water	50:4	0:0	4	}
for	51:4	55:4	2	(band = begin ;band < band_end;band ++)
forinit	51:9	51:21	3	band = begin ;
water	51:9	0:0	4	band
op	51:14	0:0	4	=
water	51:16	0:0	4	begin
water	51:21	0:0	4	;
cond	51:23	51:30	3	band < band_end
water	51:23	0:0	4	band
op	51:28	0:0	4	<
water	51:30	0:0	4	band_end
forexpr	51:40	51:44	3	band ++
water	51:40	0:0	4	band
op	51:44	0:0	4	++
stmts	51:48	55:4	3	
water	51:48	0:0	4	{
water	52:8	0:0	4	fastleak
op	52:17	0:0	4	=
call	52:19	52:77	4	FFMAX
arg	52:25	52:49	5	fastleak-s->fast_decay
water	52:25	0:0	6	fastleak
op	52:34	0:0	6	-
water	52:36	0:0	6	s
op	52:37	0:0	6	->
water	52:39	0:0	6	fast_decay
arg	52:51	52:77	5	band_psd[band]-fast_gain
water	52:51	0:0	6	band_psd
op	52:59	0:0	6	[
water	52:60	0:0	6	band
op	52:64	0:0	6	]
op	52:66	0:0	6	-
water	52:68	0:0	6	fast_gain
water	52:78	0:0	4	;
water	53:8	0:0	4	slowleak
op	53:17	0:0	4	=
call	53:19	53:80	4	FFMAX
arg	53:25	53:49	5	slowleak-s->slow_decay
water	53:25	0:0	6	slowleak
op	53:34	0:0	6	-
water	53:36	0:0	6	s
op	53:37	0:0	6	->
water	53:39	0:0	6	slow_decay
arg	53:51	53:80	5	band_psd[band]-s->slow_gain
water	53:51	0:0	6	band_psd
op	53:59	0:0	6	[
water	53:60	0:0	6	band
op	53:64	0:0	6	]
op	53:66	0:0	6	-
water	53:68	0:0	6	s
op	53:69	0:0	6	->
water	53:71	0:0	6	slow_gain
water	53:81	0:0	4	;
water	54:8	0:0	4	excite
op	54:14	0:0	4	[
water	54:15	0:0	4	band
op	54:19	0:0	4	]
op	54:21	0:0	4	=
call	54:23	54:47	4	FFMAX
arg	54:29	54:37	5	fastleak
water	54:29	0:0	6	fastleak
arg	54:39	54:47	5	slowleak
water	54:39	0:0	6	slowleak
water	54:48	0:0	4	;
water	55:4	0:0	4	}
for	57:4	63:4	2	(band = band_start ;band < band_end;band ++)
forinit	57:9	57:26	3	band = band_start ;
water	57:9	0:0	4	band
op	57:14	0:0	4	=
water	57:16	0:0	4	band_start
water	57:26	0:0	4	;
cond	57:28	57:35	3	band < band_end
water	57:28	0:0	4	band
op	57:33	0:0	4	<
water	57:35	0:0	4	band_end
forexpr	57:45	57:49	3	band ++
water	57:45	0:0	4	band
op	57:49	0:0	4	++
stmts	57:53	63:4	3	
water	57:53	0:0	4	{
decl	58:8	58:48	4	int	tmp
op	58:16	0:0	4	=
water	58:18	0:0	4	s
op	58:19	0:0	4	->
water	58:21	0:0	4	db_per_bit
op	58:32	0:0	4	-
water	58:34	0:0	4	band_psd
op	58:42	0:0	4	[
water	58:43	0:0	4	band
op	58:47	0:0	4	]
if	59:8	61:8	4	(tmp > 0)
cond	59:12	59:18	5	tmp > 0
water	59:12	0:0	6	tmp
op	59:16	0:0	6	>
water	59:18	0:0	6	0
stmts	59:21	61:8	5	
water	59:21	0:0	6	{
water	60:12	0:0	6	excite
op	60:18	0:0	6	[
water	60:19	0:0	6	band
op	60:23	0:0	6	]
op	60:25	0:0	6	+=
water	60:28	0:0	6	tmp
op	60:32	0:0	6	>>
water	60:35	0:0	6	2
water	60:36	0:0	6	;
water	61:8	0:0	6	}
water	62:8	0:0	4	mask
op	62:12	0:0	4	[
water	62:13	0:0	4	band
op	62:17	0:0	4	]
op	62:19	0:0	4	=
call	62:21	62:102	4	FFMAX
arg	62:27	62:88	5	ff_ac3_hearing_threshold_tab[band>>s->sr_shift][s->sr_code]
water	62:27	0:0	6	ff_ac3_hearing_threshold_tab
op	62:55	0:0	6	[
water	62:56	0:0	6	band
op	62:61	0:0	6	>>
water	62:64	0:0	6	s
op	62:65	0:0	6	->
water	62:67	0:0	6	sr_shift
op	62:75	0:0	6	]
op	62:76	0:0	6	[
water	62:77	0:0	6	s
op	62:78	0:0	6	->
water	62:80	0:0	6	sr_code
op	62:87	0:0	6	]
arg	62:90	62:102	5	excite[band]
water	62:90	0:0	6	excite
op	62:96	0:0	6	[
water	62:97	0:0	6	band
op	62:101	0:0	6	]
water	62:103	0:0	4	;
water	63:4	0:0	4	}
if	65:4	83:4	2	(dba_mode == DBA_REUSE || dba_mode == DBA_NEW)
cond	65:8	65:45	3	dba_mode == DBA_REUSE || dba_mode == DBA_NEW
water	65:8	0:0	4	dba_mode
op	65:17	0:0	4	==
water	65:20	0:0	4	DBA_REUSE
op	65:30	0:0	4	||
water	65:33	0:0	4	dba_mode
op	65:42	0:0	4	==
water	65:45	0:0	4	DBA_NEW
stmts	65:54	83:4	3	
water	65:54	0:0	4	{
decl	66:8	66:25	4	int	i
water	66:13	0:0	4	,
decl	66:8	66:25	4	int	seg
water	66:18	0:0	4	,
decl	66:8	66:25	4	int	delta
if	67:8	68:21	4	(dba_nsegs > 8)
cond	67:12	67:24	5	dba_nsegs > 8
water	67:12	0:0	6	dba_nsegs
op	67:22	0:0	6	>
water	67:24	0:0	6	8
stmts	68:12	68:21	5	
return	68:12	68:21	6	-1
op	68:19	0:0	7	-
water	68:20	0:0	7	1
water	69:8	0:0	4	band
op	69:13	0:0	4	=
water	69:15	0:0	4	band_start
water	69:25	0:0	4	;
for	70:8	82:8	4	(seg = 0 ;seg < dba_nsegs;seg ++)
forinit	70:13	70:20	5	seg = 0 ;
water	70:13	0:0	6	seg
op	70:17	0:0	6	=
water	70:19	0:0	6	0
water	70:20	0:0	6	;
cond	70:22	70:28	5	seg < dba_nsegs
water	70:22	0:0	6	seg
op	70:26	0:0	6	<
water	70:28	0:0	6	dba_nsegs
forexpr	70:39	70:42	5	seg ++
water	70:39	0:0	6	seg
op	70:42	0:0	6	++
stmts	70:46	82:8	5	
water	70:46	0:0	6	{
water	71:12	0:0	6	band
op	71:17	0:0	6	+=
water	71:20	0:0	6	dba_offsets
op	71:31	0:0	6	[
water	71:32	0:0	6	seg
op	71:35	0:0	6	]
water	71:36	0:0	6	;
if	72:12	73:25	6	(band >= AC3_CRITICAL_BANDS || dba_lengths [ seg ] > AC3_CRITICAL_BANDS - band)
cond	72:16	72:84	7	band >= AC3_CRITICAL_BANDS || dba_lengths [ seg ] > AC3_CRITICAL_BANDS - band
water	72:16	0:0	8	band
op	72:21	0:0	8	>=
water	72:24	0:0	8	AC3_CRITICAL_BANDS
op	72:43	0:0	8	||
water	72:46	0:0	8	dba_lengths
op	72:57	0:0	8	[
water	72:58	0:0	8	seg
op	72:61	0:0	8	]
op	72:63	0:0	8	>
water	72:65	0:0	8	AC3_CRITICAL_BANDS
op	72:83	0:0	8	-
water	72:84	0:0	8	band
stmts	73:16	73:25	7	
return	73:16	73:25	8	-1
op	73:23	0:0	9	-
water	73:24	0:0	9	1
if	74:12	76:12	6	(dba_values [ seg ] >= 4)
cond	74:16	74:35	7	dba_values [ seg ] >= 4
water	74:16	0:0	8	dba_values
op	74:26	0:0	8	[
water	74:27	0:0	8	seg
op	74:30	0:0	8	]
op	74:32	0:0	8	>=
water	74:35	0:0	8	4
stmts	74:38	76:12	7	
water	74:38	0:0	8	{
water	75:16	0:0	8	delta
op	75:22	0:0	8	=
water	75:24	0:0	8	(
water	75:25	0:0	8	dba_values
op	75:35	0:0	8	[
water	75:36	0:0	8	seg
op	75:39	0:0	8	]
op	75:41	0:0	8	-
water	75:43	0:0	8	3
water	75:44	0:0	8	)
op	75:46	0:0	8	*
water	75:48	0:0	8	128
water	75:51	0:0	8	;
water	76:12	0:0	8	}
else	76:14	78:12	6
stmts	76:19	78:12	7	
water	76:19	0:0	8	{
water	77:16	0:0	8	delta
op	77:22	0:0	8	=
water	77:24	0:0	8	(
water	77:25	0:0	8	dba_values
op	77:35	0:0	8	[
water	77:36	0:0	8	seg
op	77:39	0:0	8	]
op	77:41	0:0	8	-
water	77:43	0:0	8	4
water	77:44	0:0	8	)
op	77:46	0:0	8	*
water	77:48	0:0	8	128
water	77:51	0:0	8	;
water	78:12	0:0	8	}
for	79:12	81:12	6	(i = 0 ;i < dba_lengths [ seg ];i ++)
forinit	79:17	79:22	7	i = 0 ;
water	79:17	0:0	8	i
op	79:19	0:0	8	=
water	79:21	0:0	8	0
water	79:22	0:0	8	;
cond	79:24	79:43	7	i < dba_lengths [ seg ]
water	79:24	0:0	8	i
op	79:26	0:0	8	<
water	79:28	0:0	8	dba_lengths
op	79:39	0:0	8	[
water	79:40	0:0	8	seg
op	79:43	0:0	8	]
forexpr	79:46	79:47	7	i ++
water	79:46	0:0	8	i
op	79:47	0:0	8	++
stmts	79:51	81:12	7	
water	79:51	0:0	8	{
water	80:16	0:0	8	mask
op	80:20	0:0	8	[
water	80:21	0:0	8	band
op	80:25	0:0	8	++
op	80:27	0:0	8	]
op	80:29	0:0	8	+=
water	80:32	0:0	8	delta
water	80:37	0:0	8	;
water	81:12	0:0	8	}
water	82:8	0:0	6	}
water	83:4	0:0	4	}
return	84:4	84:12	2	0
water	84:11	0:0	3	0

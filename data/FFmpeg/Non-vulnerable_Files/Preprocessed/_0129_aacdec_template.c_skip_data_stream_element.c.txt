func	1:0	15:0	0	static int	skip_data_stream_element
params	1:35	0:0	1	
param	1:36	1:50	2	AACContext *	ac
param	1:52	1:69	2	GetBitContext *	gb
stmnts	0:0	14:12	1	
decl	3:4	3:34	2	int	byte_align
op	3:19	0:0	2	=
call	3:21	3:33	3	get_bits1
arg	3:31	3:33	4	gb
water	3:31	0:0	5	gb
decl	4:4	4:31	2	int	count
op	4:14	0:0	2	=
call	4:16	4:30	3	get_bits
arg	4:25	4:27	4	gb
water	4:25	0:0	5	gb
arg	4:29	4:30	4	8
water	4:29	0:0	5	8
if	5:4	6:32	2	(count == 255)
cond	5:8	5:17	3	count == 255
water	5:8	0:0	4	count
op	5:14	0:0	4	==
water	5:17	0:0	4	255
stmts	6:8	6:32	3	
water	6:8	0:0	4	count
op	6:14	0:0	4	+=
call	6:17	6:31	4	get_bits
arg	6:26	6:28	5	gb
water	6:26	0:0	6	gb
arg	6:30	6:31	5	8
water	6:30	0:0	6	8
water	6:32	0:0	4	;
if	7:4	8:26	2	(byte_align)
cond	7:8	7:8	3	byte_align
water	7:8	0:0	4	byte_align
stmts	8:8	8:26	3	
call	8:8	8:25	4	align_get_bits
arg	8:23	8:25	5	gb
water	8:23	0:0	6	gb
water	8:26	0:0	4	;
if	9:4	12:4	2	(get_bits_left (gb ) < 8 * count)
cond	9:8	9:32	3	get_bits_left (gb ) < 8 * count
call	9:8	9:24	4	get_bits_left
arg	9:22	9:24	5	gb
water	9:22	0:0	6	gb
op	9:26	0:0	4	<
water	9:28	0:0	4	8
op	9:30	0:0	4	*
water	9:32	0:0	4	count
stmts	9:39	12:4	3	
water	9:39	0:0	4	{
call	10:8	10:80	4	av_log
arg	10:15	10:24	5	ac->avctx
water	10:15	0:0	6	ac
op	10:17	0:0	6	->
water	10:19	0:0	6	avctx
arg	10:26	10:38	5	AV_LOG_ERROR
water	10:26	0:0	6	AV_LOG_ERROR
arg	10:40	10:80	5	"skip_data_stream_element: "overread_err
water	10:40	0:0	6	"skip_data_stream_element: "
water	10:68	0:0	6	overread_err
water	10:81	0:0	4	;
return	11:8	11:34	4	AVERROR_INVALIDDATA
water	11:15	0:0	5	AVERROR_INVALIDDATA
water	12:4	0:0	4	}
call	13:4	13:32	2	skip_bits_long
arg	13:19	13:21	3	gb
water	13:19	0:0	4	gb
arg	13:23	13:32	3	8*count
water	13:23	0:0	4	8
op	13:25	0:0	4	*
water	13:27	0:0	4	count
water	13:33	0:0	2	;
return	14:4	14:12	2	0
water	14:11	0:0	3	0

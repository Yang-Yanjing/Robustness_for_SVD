func	1:0	12:0	0	int	ff_audio_data_add_to_fifo
params	1:29	0:0	1	
param	1:30	1:45	2	AVAudioFifo *	af
param	1:47	1:59	2	AudioData *	a
param	1:61	1:71	2	int	offset
param	2:30	2:44	2	int	nb_samples
stmnts	0:0	11:68	1	
decl	4:4	4:49	2	uint8_t	*offset_data[AVRESAMPLE_MAX_CHANNELS]
decl	5:4	5:22	2	int	offset_size
water	5:19	0:0	2	,
decl	5:4	5:22	2	int	p
if	6:4	7:16	2	(offset >= a -> nb_samples)
cond	6:8	6:21	3	offset >= a -> nb_samples
water	6:8	0:0	4	offset
op	6:15	0:0	4	>=
water	6:18	0:0	4	a
op	6:19	0:0	4	->
water	6:21	0:0	4	nb_samples
stmts	7:8	7:16	3	
return	7:8	7:16	4	0
water	7:15	0:0	5	0
water	8:4	0:0	2	offset_size
op	8:16	0:0	2	=
water	8:18	0:0	2	offset
op	8:25	0:0	2	*
water	8:27	0:0	2	a
op	8:28	0:0	2	->
water	8:30	0:0	2	stride
water	8:36	0:0	2	;
for	9:4	10:49	2	(p = 0 ;p < a -> planes;p ++)
forinit	9:9	9:14	3	p = 0 ;
water	9:9	0:0	4	p
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:23	3	p < a -> planes
water	9:16	0:0	4	p
op	9:18	0:0	4	<
water	9:20	0:0	4	a
op	9:21	0:0	4	->
water	9:23	0:0	4	planes
forexpr	9:31	9:32	3	p ++
water	9:31	0:0	4	p
op	9:32	0:0	4	++
stmts	10:8	10:49	3	
water	10:8	0:0	4	offset_data
op	10:19	0:0	4	[
water	10:20	0:0	4	p
op	10:21	0:0	4	]
op	10:23	0:0	4	=
water	10:25	0:0	4	a
op	10:26	0:0	4	->
water	10:28	0:0	4	data
op	10:32	0:0	4	[
water	10:33	0:0	4	p
op	10:34	0:0	4	]
op	10:36	0:0	4	+
water	10:38	0:0	4	offset_size
water	10:49	0:0	4	;
return	11:4	11:68	2	av_audio_fifo_write(af,(void**)offset_data,nb_samples)
call	11:11	11:67	3	av_audio_fifo_write
arg	11:31	11:33	4	af
water	11:31	0:0	5	af
arg	11:35	11:55	4	(void**)offset_data
water	11:35	0:0	5	(
water	11:36	0:0	5	void
op	11:41	0:0	5	*
op	11:42	0:0	5	*
water	11:43	0:0	5	)
water	11:44	0:0	5	offset_data
arg	11:57	11:67	4	nb_samples
water	11:57	0:0	5	nb_samples

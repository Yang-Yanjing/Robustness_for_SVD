func	1:0	32:0	0	static int	init_converted_samples
params	1:33	0:0	1	
param	1:34	1:68	2	uint8_t * * *	converted_input_samples
param	2:34	2:70	2	AVCodecContext *	output_codec_context
param	3:34	3:48	2	int	frame_size
stmnts	0:0	31:12	1	
decl	5:4	5:13	2	int	error
if	11:4	15:4	2	(! ( * converted_input_samples =calloc (output_codec_context -> channels ,sizeof ( * * converted_input_samples ) ) ))
cond	11:8	12:78	3	! ( * converted_input_samples =calloc (output_codec_context -> channels ,sizeof ( * * converted_input_samples ) ) )
op	11:8	0:0	4	!
water	11:9	0:0	4	(
op	11:10	0:0	4	*
water	11:11	0:0	4	converted_input_samples
op	11:35	0:0	4	=
call	11:37	12:77	4	calloc
arg	11:44	11:74	5	output_codec_context->channels
water	11:44	0:0	6	output_codec_context
op	11:64	0:0	6	->
water	11:66	0:0	6	channels
arg	12:44	12:77	5	sizeof(**converted_input_samples)
op	12:44	0:0	6	sizeof
water	12:50	0:0	6	(
op	12:51	0:0	6	*
op	12:52	0:0	6	*
water	12:53	0:0	6	converted_input_samples
water	12:76	0:0	6	)
water	12:78	0:0	4	)
stmts	12:81	15:4	3	
water	12:81	0:0	4	{
call	13:8	13:78	4	fprintf
arg	13:16	13:22	5	stderr
water	13:16	0:0	6	stderr
arg	13:24	13:78	5	"Could not allocate converted input sample pointers\n"
water	13:24	0:0	6	"Could not allocate converted input sample pointers\n"
water	13:79	0:0	4	;
return	14:8	14:30	4	AVERROR(ENOMEM)
call	14:15	14:29	5	AVERROR
arg	14:23	14:29	6	ENOMEM
water	14:23	0:0	7	ENOMEM
water	15:4	0:0	4	}
if	20:4	30:4	2	(( error =av_samples_alloc (* converted_input_samples ,NULL ,output_codec_context -> channels ,frame_size ,output_codec_context -> sample_fmt ,0 ) ) < 0)
cond	20:8	23:74	3	( error =av_samples_alloc (* converted_input_samples ,NULL ,output_codec_context -> channels ,frame_size ,output_codec_context -> sample_fmt ,0 ) ) < 0
water	20:8	0:0	4	(
water	20:9	0:0	4	error
op	20:15	0:0	4	=
call	20:17	23:69	4	av_samples_alloc
arg	20:34	20:58	5	*converted_input_samples
op	20:34	0:0	6	*
water	20:35	0:0	6	converted_input_samples
arg	20:60	20:64	5	NULL
water	20:60	0:0	6	NULL
arg	21:34	21:64	5	output_codec_context->channels
water	21:34	0:0	6	output_codec_context
op	21:54	0:0	6	->
water	21:56	0:0	6	channels
arg	22:34	22:44	5	frame_size
water	22:34	0:0	6	frame_size
arg	23:34	23:66	5	output_codec_context->sample_fmt
water	23:34	0:0	6	output_codec_context
op	23:54	0:0	6	->
water	23:56	0:0	6	sample_fmt
arg	23:68	23:69	5	0
water	23:68	0:0	6	0
water	23:70	0:0	4	)
op	23:72	0:0	4	<
water	23:74	0:0	4	0
stmts	23:77	30:4	3	
water	23:77	0:0	4	{
call	24:8	26:37	4	fprintf
arg	24:16	24:22	5	stderr
water	24:16	0:0	6	stderr
arg	25:16	25:75	5	"Could not allocate converted input samples (error '%s')\n"
water	25:16	0:0	6	"Could not allocate converted input samples (error '%s')\n"
arg	26:16	26:37	5	get_error_text(error)
call	26:16	26:36	6	get_error_text
arg	26:31	26:36	7	error
water	26:31	0:0	8	error
water	26:38	0:0	4	;
call	27:8	27:47	4	av_freep
arg	27:17	27:47	5	&(*converted_input_samples)[0]
op	27:17	0:0	6	&
water	27:18	0:0	6	(
op	27:19	0:0	6	*
water	27:20	0:0	6	converted_input_samples
water	27:43	0:0	6	)
op	27:44	0:0	6	[
water	27:45	0:0	6	0
op	27:46	0:0	6	]
water	27:48	0:0	4	;
call	28:8	28:37	4	free
arg	28:13	28:37	5	*converted_input_samples
op	28:13	0:0	6	*
water	28:14	0:0	6	converted_input_samples
water	28:38	0:0	4	;
return	29:8	29:20	4	error
water	29:15	0:0	5	error
water	30:4	0:0	4	}
return	31:4	31:12	2	0
water	31:11	0:0	3	0

func	1:0	82:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	81:12	1	
decl	3:4	3:20	2	int	buf_size
op	3:17	0:0	2	=
water	3:19	0:0	2	0
decl	4:4	4:20	2	char	*buf
op	4:14	0:0	2	=
water	4:16	0:0	2	NULL
decl	5:4	5:54	2	const char	*outfilename
op	5:28	0:0	2	=
water	5:30	0:0	2	NULL
water	5:34	0:0	2	,
decl	5:4	5:54	2	const char	*infilename
op	5:48	0:0	2	=
water	5:50	0:0	2	NULL
decl	6:4	6:40	2	FILE	*outfile
op	6:18	0:0	2	=
water	6:20	0:0	2	NULL
water	6:24	0:0	2	,
decl	6:4	6:40	2	FILE	*infile
op	6:34	0:0	2	=
water	6:36	0:0	2	NULL
decl	7:4	7:30	2	const char	*prompt
op	7:23	0:0	2	=
water	7:25	0:0	2	"=> "
decl	8:4	8:27	2	int	count
op	8:14	0:0	2	=
water	8:16	0:0	2	0
water	8:17	0:0	2	,
decl	8:4	8:27	2	int	echo
op	8:24	0:0	2	=
water	8:26	0:0	2	0
decl	9:4	9:9	2	int	c
do	11:4	17:4	2	(0)
cond	17:13	17:13	3	0
water	17:13	0:0	4	0
stmts	11:7	17:4	3	
water	11:7	0:0	4	{
if	12:8	16:8	4	(!av_dynarray2_add (( void * * ) & buf ,& buf_size ,1 ,NULL ))
cond	12:12	12:63	5	!av_dynarray2_add (( void * * ) & buf ,& buf_size ,1 ,NULL )
op	12:12	0:0	6	!
call	12:13	12:63	6	av_dynarray2_add
arg	12:30	12:43	7	(void**)&buf
water	12:30	0:0	8	(
water	12:31	0:0	8	void
op	12:36	0:0	8	*
op	12:37	0:0	8	*
water	12:38	0:0	8	)
op	12:39	0:0	8	&
water	12:40	0:0	8	buf
arg	12:45	12:54	7	&buf_size
op	12:45	0:0	8	&
water	12:46	0:0	8	buf_size
arg	12:56	12:57	7	1
water	12:56	0:0	8	1
arg	12:59	12:63	7	NULL
water	12:59	0:0	8	NULL
stmts	12:66	16:8	5	
water	12:66	0:0	6	{
call	13:12	14:57	6	av_log
arg	13:19	13:23	7	NULL
water	13:19	0:0	8	NULL
arg	13:25	13:37	7	AV_LOG_ERROR
water	13:25	0:0	8	AV_LOG_ERROR
arg	14:19	14:57	7	"Memory allocation problem occurred\n"
water	14:19	0:0	8	"Memory allocation problem occurred\n"
water	14:58	0:0	6	;
return	15:12	15:20	6	1
water	15:19	0:0	7	1
water	16:8	0:0	6	}
water	17:4	0:0	4	}
call	18:4	18:15	2	GROW_ARRAY
water	18:16	0:0	2	;
while	19:4	39:4	2	(( c =getopt (argc ,argv ,"ehi:o:p:" ) ) != - 1)
cond	19:11	19:52	3	( c =getopt (argc ,argv ,"ehi:o:p:" ) ) != - 1
water	19:11	0:0	4	(
water	19:12	0:0	4	c
op	19:14	0:0	4	=
call	19:16	19:45	4	getopt
arg	19:23	19:27	5	argc
water	19:23	0:0	6	argc
arg	19:29	19:33	5	argv
water	19:29	0:0	6	argv
arg	19:35	19:45	5	"ehi:o:p:"
water	19:35	0:0	6	"ehi:o:p:"
water	19:46	0:0	4	)
op	19:48	0:0	4	!=
op	19:51	0:0	4	-
water	19:52	0:0	4	1
stmts	19:55	39:4	3	
water	19:55	0:0	4	{
switch	20:8	38:8	4	(c)
cond	20:16	20:16	5	c
water	20:16	0:0	6	c
stmts	20:19	38:8	5	
water	20:19	0:0	6	{
water	21:8	0:0	6	case
water	21:13	0:0	6	'e'
water	21:16	0:0	6	:
water	22:12	0:0	6	echo
op	22:17	0:0	6	=
water	22:19	0:0	6	1
water	22:20	0:0	6	;
break	23:12	23:17	6	
water	24:8	0:0	6	case
water	24:13	0:0	6	'h'
water	24:16	0:0	6	:
call	25:12	25:18	6	usage
water	25:19	0:0	6	;
return	26:12	26:20	6	0
water	26:19	0:0	7	0
water	27:8	0:0	6	case
water	27:13	0:0	6	'i'
water	27:16	0:0	6	:
water	28:12	0:0	6	infilename
op	28:23	0:0	6	=
water	28:25	0:0	6	optarg
water	28:31	0:0	6	;
break	29:12	29:17	6	
water	30:8	0:0	6	case
water	30:13	0:0	6	'o'
water	30:16	0:0	6	:
water	31:12	0:0	6	outfilename
op	31:24	0:0	6	=
water	31:26	0:0	6	optarg
water	31:32	0:0	6	;
break	32:12	32:17	6	
water	33:8	0:0	6	case
water	33:13	0:0	6	'p'
water	33:16	0:0	6	:
water	34:12	0:0	6	prompt
op	34:19	0:0	6	=
water	34:21	0:0	6	optarg
water	34:27	0:0	6	;
break	35:12	35:17	6	
water	36:8	0:0	6	case
water	36:13	0:0	6	'?'
water	36:16	0:0	6	:
water	37:12	0:0	6	return
water	37:19	0:0	6	1
water	37:20	0:0	6	;
water	38:8	0:0	6	}
water	39:4	0:0	4	}
if	40:4	43:4	2	(! infilename || !strcmp (infilename ,"-" ))
cond	40:8	40:46	3	! infilename || !strcmp (infilename ,"-" )
op	40:8	0:0	4	!
water	40:9	0:0	4	infilename
op	40:20	0:0	4	||
op	40:23	0:0	4	!
call	40:24	40:46	4	strcmp
arg	40:31	40:41	5	infilename
water	40:31	0:0	6	infilename
arg	40:43	40:46	5	"-"
water	40:43	0:0	6	"-"
stmts	40:49	43:4	3	
water	40:49	0:0	4	{
water	41:8	0:0	4	infilename
op	41:19	0:0	4	=
water	41:21	0:0	4	"stdin"
water	41:28	0:0	4	;
water	42:8	0:0	4	infile
op	42:15	0:0	4	=
water	42:17	0:0	4	stdin
water	42:22	0:0	4	;
water	43:4	0:0	4	}
else	43:6	45:4	2
stmts	43:11	45:4	3	
water	43:11	0:0	4	{
water	44:8	0:0	4	infile
op	44:15	0:0	4	=
call	44:17	44:38	4	fopen
arg	44:23	44:33	5	infilename
water	44:23	0:0	6	infilename
arg	44:35	44:38	5	"r"
water	44:35	0:0	6	"r"
water	44:39	0:0	4	;
water	45:4	0:0	4	}
if	46:4	49:4	2	(! infile)
cond	46:8	46:9	3	! infile
op	46:8	0:0	4	!
water	46:9	0:0	4	infile
stmts	46:17	49:4	3	
water	46:17	0:0	4	{
call	47:8	47:95	4	fprintf
arg	47:16	47:22	5	stderr
water	47:16	0:0	6	stderr
arg	47:24	47:66	5	"Impossible to open input file '%s': %s\n"
water	47:24	0:0	6	"Impossible to open input file '%s': %s\n"
arg	47:68	47:78	5	infilename
water	47:68	0:0	6	infilename
arg	47:80	47:95	5	strerror(errno)
call	47:80	47:94	6	strerror
arg	47:89	47:94	7	errno
water	47:89	0:0	8	errno
water	47:96	0:0	4	;
return	48:8	48:16	4	1
water	48:15	0:0	5	1
water	49:4	0:0	4	}
if	50:4	53:4	2	(! outfilename || !strcmp (outfilename ,"-" ))
cond	50:8	50:48	3	! outfilename || !strcmp (outfilename ,"-" )
op	50:8	0:0	4	!
water	50:9	0:0	4	outfilename
op	50:21	0:0	4	||
op	50:24	0:0	4	!
call	50:25	50:48	4	strcmp
arg	50:32	50:43	5	outfilename
water	50:32	0:0	6	outfilename
arg	50:45	50:48	5	"-"
water	50:45	0:0	6	"-"
stmts	50:51	53:4	3	
water	50:51	0:0	4	{
water	51:8	0:0	4	outfilename
op	51:20	0:0	4	=
water	51:22	0:0	4	"stdout"
water	51:30	0:0	4	;
water	52:8	0:0	4	outfile
op	52:16	0:0	4	=
water	52:18	0:0	4	stdout
water	52:24	0:0	4	;
water	53:4	0:0	4	}
else	53:6	55:4	2
stmts	53:11	55:4	3	
water	53:11	0:0	4	{
water	54:8	0:0	4	outfile
op	54:16	0:0	4	=
call	54:18	54:40	4	fopen
arg	54:24	54:35	5	outfilename
water	54:24	0:0	6	outfilename
arg	54:37	54:40	5	"w"
water	54:37	0:0	6	"w"
water	54:41	0:0	4	;
water	55:4	0:0	4	}
if	56:4	59:4	2	(! outfile)
cond	56:8	56:9	3	! outfile
op	56:8	0:0	4	!
water	56:9	0:0	4	outfile
stmts	56:18	59:4	3	
water	56:18	0:0	4	{
call	57:8	57:97	4	fprintf
arg	57:16	57:22	5	stderr
water	57:16	0:0	6	stderr
arg	57:24	57:67	5	"Impossible to open output file '%s': %s\n"
water	57:24	0:0	6	"Impossible to open output file '%s': %s\n"
arg	57:69	57:80	5	outfilename
water	57:69	0:0	6	outfilename
arg	57:82	57:97	5	strerror(errno)
call	57:82	57:96	6	strerror
arg	57:91	57:96	7	errno
water	57:91	0:0	8	errno
water	57:98	0:0	4	;
return	58:8	58:16	4	1
water	58:15	0:0	5	1
water	59:4	0:0	4	}
while	60:4	79:4	2	(( c =fgetc (infile ) ) != EOF)
cond	60:11	60:34	3	( c =fgetc (infile ) ) != EOF
water	60:11	0:0	4	(
water	60:12	0:0	4	c
op	60:14	0:0	4	=
call	60:16	60:28	4	fgetc
arg	60:22	60:28	5	infile
water	60:22	0:0	6	infile
water	60:29	0:0	4	)
op	60:31	0:0	4	!=
water	60:34	0:0	4	EOF
stmts	60:39	79:4	3	
water	60:39	0:0	4	{
if	61:8	74:8	4	(c == '\n')
cond	61:12	61:17	5	c == '\n'
water	61:12	0:0	6	c
op	61:14	0:0	6	==
water	61:17	0:0	6	'\n'
stmts	61:23	74:8	5	
water	61:23	0:0	6	{
decl	62:12	62:20	6	double	d
water	63:12	0:0	6	buf
op	63:15	0:0	6	[
water	63:16	0:0	6	count
op	63:21	0:0	6	]
op	63:23	0:0	6	=
water	63:25	0:0	6	0
water	63:26	0:0	6	;
if	64:12	72:12	6	(buf [ 0 ] != '#')
cond	64:16	64:26	7	buf [ 0 ] != '#'
water	64:16	0:0	8	buf
op	64:19	0:0	8	[
water	64:20	0:0	8	0
op	64:21	0:0	8	]
op	64:23	0:0	8	!=
water	64:26	0:0	8	'#'
stmts	64:31	72:12	7	
water	64:31	0:0	8	{
decl	65:16	67:87	8	int	ret
op	65:24	0:0	8	=
call	65:26	67:86	9	av_expr_parse_and_eval
arg	65:49	65:51	10	&d
op	65:49	0:0	11	&
water	65:50	0:0	11	d
arg	65:53	65:56	10	buf
water	65:53	0:0	11	buf
arg	66:49	66:53	10	NULL
water	66:49	0:0	11	NULL
arg	66:55	66:59	10	NULL
water	66:55	0:0	11	NULL
arg	67:49	67:53	10	NULL
water	67:49	0:0	11	NULL
arg	67:55	67:59	10	NULL
water	67:55	0:0	11	NULL
arg	67:61	67:65	10	NULL
water	67:61	0:0	11	NULL
arg	67:67	67:71	10	NULL
water	67:67	0:0	11	NULL
arg	67:73	67:77	10	NULL
water	67:73	0:0	11	NULL
arg	67:79	67:80	10	0
water	67:79	0:0	11	0
arg	67:82	67:86	10	NULL
water	67:82	0:0	11	NULL
if	68:16	69:48	8	(echo)
cond	68:20	68:20	9	echo
water	68:20	0:0	10	echo
stmts	69:20	69:48	9	
call	69:20	69:47	10	fprintf
arg	69:28	69:35	11	outfile
water	69:28	0:0	12	outfile
arg	69:37	69:42	11	"%s "
water	69:37	0:0	12	"%s "
arg	69:44	69:47	11	buf
water	69:44	0:0	12	buf
water	69:48	0:0	10	;
if	70:16	70:67	8	(ret >= 0)
cond	70:20	70:27	9	ret >= 0
water	70:20	0:0	10	ret
op	70:24	0:0	10	>=
water	70:27	0:0	10	0
stmts	70:30	70:67	9	
call	70:30	70:66	10	fprintf
arg	70:38	70:45	11	outfile
water	70:38	0:0	12	outfile
arg	70:47	70:55	11	"%s%f\n"
water	70:47	0:0	12	"%s%f\n"
arg	70:57	70:63	11	prompt
water	70:57	0:0	12	prompt
arg	70:65	70:66	11	d
water	70:65	0:0	12	d
water	70:67	0:0	10	;
else	71:16	71:89	8
stmts	71:30	71:89	9	
call	71:30	71:88	10	fprintf
arg	71:38	71:45	11	outfile
water	71:38	0:0	12	outfile
arg	71:47	71:60	11	"%s%f (%s)\n"
water	71:47	0:0	12	"%s%f (%s)\n"
arg	71:62	71:68	11	prompt
water	71:62	0:0	12	prompt
arg	71:70	71:71	11	d
water	71:70	0:0	12	d
arg	71:73	71:88	11	av_err2str(ret)
call	71:73	71:87	12	av_err2str
arg	71:84	71:87	13	ret
water	71:84	0:0	14	ret
water	71:89	0:0	10	;
water	72:12	0:0	8	}
water	73:12	0:0	6	count
op	73:18	0:0	6	=
water	73:20	0:0	6	0
water	73:21	0:0	6	;
water	74:8	0:0	6	}
else	74:10	78:8	4
stmts	74:15	78:8	5	
water	74:15	0:0	6	{
if	75:12	76:28	6	(count >= buf_size - 1)
cond	75:16	75:34	7	count >= buf_size - 1
water	75:16	0:0	8	count
op	75:22	0:0	8	>=
water	75:25	0:0	8	buf_size
op	75:33	0:0	8	-
water	75:34	0:0	8	1
stmts	76:16	76:28	7	
call	76:16	76:27	8	GROW_ARRAY
water	76:28	0:0	8	;
water	77:12	0:0	6	buf
op	77:15	0:0	6	[
water	77:16	0:0	6	count
op	77:21	0:0	6	++
op	77:23	0:0	6	]
op	77:25	0:0	6	=
water	77:27	0:0	6	c
water	77:28	0:0	6	;
water	78:8	0:0	6	}
water	79:4	0:0	4	}
call	80:4	80:15	2	av_free
arg	80:12	80:15	3	buf
water	80:12	0:0	4	buf
water	80:16	0:0	2	;
return	81:4	81:12	2	0
water	81:11	0:0	3	0

func	2:0	17:0	0	static int	ebml_parse_id
params	2:24	0:0	1	
param	2:25	2:55	2	MatroskaDemuxContext *	matroska
param	2:57	2:75	2	EbmlSyntax *	syntax
param	3:25	3:36	2	uint32_t	id
param	3:38	3:48	2	void *	data
stmnts	0:0	16:54	1	
decl	5:4	5:9	2	int	i
for	6:4	8:17	2	(i = 0 ;syntax [ i ] . id;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:26	3	syntax [ i ] . id
water	6:16	0:0	4	syntax
op	6:22	0:0	4	[
water	6:23	0:0	4	i
op	6:24	0:0	4	]
op	6:25	0:0	4	.
water	6:26	0:0	4	id
forexpr	6:30	6:31	3	i ++
water	6:30	0:0	4	i
op	6:31	0:0	4	++
stmts	7:8	8:17	3	
if	7:8	8:17	4	(id == syntax [ i ] . id)
cond	7:12	7:28	5	id == syntax [ i ] . id
water	7:12	0:0	6	id
op	7:15	0:0	6	==
water	7:18	0:0	6	syntax
op	7:24	0:0	6	[
water	7:25	0:0	6	i
op	7:26	0:0	6	]
op	7:27	0:0	6	.
water	7:28	0:0	6	id
stmts	8:12	8:17	5	
break	8:12	8:17	6	
if	9:4	12:16	2	(! syntax [ i ] . id && id == MATROSKA_ID_CLUSTER && matroska -> num_levels > 0 && matroska -> levels [ matroska -> num_levels - 1 ] . length == 0 xffffffffffffff)
cond	9:8	11:62	3	! syntax [ i ] . id && id == MATROSKA_ID_CLUSTER && matroska -> num_levels > 0 && matroska -> levels [ matroska -> num_levels - 1 ] . length == 0 xffffffffffffff
op	9:8	0:0	4	!
water	9:9	0:0	4	syntax
op	9:15	0:0	4	[
water	9:16	0:0	4	i
op	9:17	0:0	4	]
op	9:18	0:0	4	.
water	9:19	0:0	4	id
op	9:22	0:0	4	&&
water	9:25	0:0	4	id
op	9:28	0:0	4	==
water	9:31	0:0	4	MATROSKA_ID_CLUSTER
op	9:51	0:0	4	&&
water	10:8	0:0	4	matroska
op	10:16	0:0	4	->
water	10:18	0:0	4	num_levels
op	10:29	0:0	4	>
water	10:31	0:0	4	0
op	10:51	0:0	4	&&
water	11:8	0:0	4	matroska
op	11:16	0:0	4	->
water	11:18	0:0	4	levels
op	11:24	0:0	4	[
water	11:25	0:0	4	matroska
op	11:33	0:0	4	->
water	11:35	0:0	4	num_levels
op	11:46	0:0	4	-
water	11:48	0:0	4	1
op	11:49	0:0	4	]
op	11:50	0:0	4	.
water	11:51	0:0	4	length
op	11:58	0:0	4	==
water	11:61	0:0	4	0
water	11:62	0:0	4	xffffffffffffff
stmts	12:8	12:16	3	
return	12:8	12:16	4	0
water	12:15	0:0	5	0
if	13:4	15:4	2	(! syntax [ i ] . id && id != EBML_ID_VOID && id != EBML_ID_CRC32)
cond	13:8	13:53	3	! syntax [ i ] . id && id != EBML_ID_VOID && id != EBML_ID_CRC32
op	13:8	0:0	4	!
water	13:9	0:0	4	syntax
op	13:15	0:0	4	[
water	13:16	0:0	4	i
op	13:17	0:0	4	]
op	13:18	0:0	4	.
water	13:19	0:0	4	id
op	13:22	0:0	4	&&
water	13:25	0:0	4	id
op	13:28	0:0	4	!=
water	13:31	0:0	4	EBML_ID_VOID
op	13:44	0:0	4	&&
water	13:47	0:0	4	id
op	13:50	0:0	4	!=
water	13:53	0:0	4	EBML_ID_CRC32
stmts	13:68	15:4	3	
water	13:68	0:0	4	{
call	14:8	14:77	4	av_log
arg	14:15	14:28	5	matroska->ctx
water	14:15	0:0	6	matroska
op	14:23	0:0	6	->
water	14:25	0:0	6	ctx
arg	14:30	14:42	5	AV_LOG_DEBUG
water	14:30	0:0	6	AV_LOG_DEBUG
arg	14:44	14:73	5	"Unknown entry 0x%"PRIX32"\n"
water	14:44	0:0	6	"Unknown entry 0x%"
water	14:63	0:0	6	PRIX32
water	14:69	0:0	6	"\n"
arg	14:75	14:77	5	id
water	14:75	0:0	6	id
water	14:78	0:0	4	;
water	15:4	0:0	4	}
return	16:4	16:54	2	ebml_parse_elem(matroska,&syntax[i],data)
call	16:11	16:53	3	ebml_parse_elem
arg	16:27	16:35	4	matroska
water	16:27	0:0	5	matroska
arg	16:37	16:47	4	&syntax[i]
op	16:37	0:0	5	&
water	16:38	0:0	5	syntax
op	16:44	0:0	5	[
water	16:45	0:0	5	i
op	16:46	0:0	5	]
arg	16:49	16:53	4	data
water	16:49	0:0	5	data

func	1:0	18:0	0	static void	perform_dc_correction
params	1:33	0:0	1	
param	1:34	1:66	2	DynamicAudioNormalizerContext *	s
param	1:68	1:82	2	AVFrame *	frame
stmnts	0:0	17:4	1	
decl	3:4	3:47	2	const double	diff
op	3:22	0:0	2	=
water	3:24	0:0	2	1
op	3:25	0:0	2	.
water	3:26	0:0	2	0
op	3:28	0:0	2	/
water	3:30	0:0	2	frame
op	3:35	0:0	2	->
water	3:37	0:0	2	nb_samples
decl	4:4	4:66	2	int	is_first_frame
op	4:23	0:0	2	=
call	4:25	4:65	3	cqueue_empty
arg	4:38	4:65	4	s->gain_history_original[0]
water	4:38	0:0	5	s
op	4:39	0:0	5	->
water	4:41	0:0	5	gain_history_original
op	4:62	0:0	5	[
water	4:63	0:0	5	0
op	4:64	0:0	5	]
decl	5:4	5:12	2	int	c
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	i
for	6:4	17:4	2	(c = 0 ;c < s -> channels;c ++)
forinit	6:9	6:14	3	c = 0 ;
water	6:9	0:0	4	c
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:23	3	c < s -> channels
water	6:16	0:0	4	c
op	6:18	0:0	4	<
water	6:20	0:0	4	s
op	6:21	0:0	4	->
water	6:23	0:0	4	channels
forexpr	6:33	6:34	3	c ++
water	6:33	0:0	4	c
op	6:34	0:0	4	++
stmts	6:38	17:4	3	
water	6:38	0:0	4	{
decl	7:8	7:59	4	double	*dst_ptr
op	7:24	0:0	4	=
water	7:26	0:0	4	(
water	7:27	0:0	4	double
op	7:34	0:0	4	*
water	7:35	0:0	4	)
water	7:36	0:0	4	frame
op	7:41	0:0	4	->
water	7:43	0:0	4	extended_data
op	7:56	0:0	4	[
water	7:57	0:0	4	c
op	7:58	0:0	4	]
decl	8:8	8:42	4	double	current_average_value
op	8:37	0:0	4	=
water	8:39	0:0	4	0
op	8:40	0:0	4	.
water	8:41	0:0	4	0
decl	9:8	9:25	4	double	prev_value
for	10:8	11:54	4	(i = 0 ;i < frame -> nb_samples;i ++)
forinit	10:13	10:18	5	i = 0 ;
water	10:13	0:0	6	i
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:18	0:0	6	;
cond	10:20	10:31	5	i < frame -> nb_samples
water	10:20	0:0	6	i
op	10:22	0:0	6	<
water	10:24	0:0	6	frame
op	10:29	0:0	6	->
water	10:31	0:0	6	nb_samples
forexpr	10:43	10:44	5	i ++
water	10:43	0:0	6	i
op	10:44	0:0	6	++
stmts	11:12	11:54	5	
water	11:12	0:0	6	current_average_value
op	11:34	0:0	6	+=
water	11:37	0:0	6	dst_ptr
op	11:44	0:0	6	[
water	11:45	0:0	6	i
op	11:46	0:0	6	]
op	11:48	0:0	6	*
water	11:50	0:0	6	diff
water	11:54	0:0	6	;
water	12:8	0:0	4	prev_value
op	12:19	0:0	4	=
water	12:21	0:0	4	is_first_frame
water	12:36	0:0	4	?
water	12:38	0:0	4	current_average_value
water	12:60	0:0	4	:
water	12:62	0:0	4	s
op	12:63	0:0	4	->
water	12:65	0:0	4	dc_correction_value
op	12:84	0:0	4	[
water	12:85	0:0	4	c
op	12:86	0:0	4	]
water	12:87	0:0	4	;
water	13:8	0:0	4	s
op	13:9	0:0	4	->
water	13:11	0:0	4	dc_correction_value
op	13:30	0:0	4	[
water	13:31	0:0	4	c
op	13:32	0:0	4	]
op	13:34	0:0	4	=
water	13:36	0:0	4	is_first_frame
water	13:51	0:0	4	?
water	13:53	0:0	4	current_average_value
water	13:75	0:0	4	:
call	13:77	13:143	4	update_value
arg	13:90	13:111	5	current_average_value
water	13:90	0:0	6	current_average_value
arg	13:113	13:138	5	s->dc_correction_value[c]
water	13:113	0:0	6	s
op	13:114	0:0	6	->
water	13:116	0:0	6	dc_correction_value
op	13:135	0:0	6	[
water	13:136	0:0	6	c
op	13:137	0:0	6	]
arg	13:140	13:143	5	0.1
water	13:140	0:0	6	0
op	13:141	0:0	6	.
water	13:142	0:0	6	1
water	13:144	0:0	4	;
for	14:8	16:8	4	(i = 0 ;i < frame -> nb_samples;i ++)
forinit	14:13	14:18	5	i = 0 ;
water	14:13	0:0	6	i
op	14:15	0:0	6	=
water	14:17	0:0	6	0
water	14:18	0:0	6	;
cond	14:20	14:31	5	i < frame -> nb_samples
water	14:20	0:0	6	i
op	14:22	0:0	6	<
water	14:24	0:0	6	frame
op	14:29	0:0	6	->
water	14:31	0:0	6	nb_samples
forexpr	14:43	14:44	5	i ++
water	14:43	0:0	6	i
op	14:44	0:0	6	++
stmts	14:48	16:8	5	
water	14:48	0:0	6	{
water	15:12	0:0	6	dst_ptr
op	15:19	0:0	6	[
water	15:20	0:0	6	i
op	15:21	0:0	6	]
op	15:23	0:0	6	-=
call	15:26	15:88	6	fade
arg	15:31	15:41	7	prev_value
water	15:31	0:0	8	prev_value
arg	15:43	15:68	7	s->dc_correction_value[c]
water	15:43	0:0	8	s
op	15:44	0:0	8	->
water	15:46	0:0	8	dc_correction_value
op	15:65	0:0	8	[
water	15:66	0:0	8	c
op	15:67	0:0	8	]
arg	15:70	15:71	7	i
water	15:70	0:0	8	i
arg	15:73	15:88	7	s->fade_factors
water	15:73	0:0	8	s
op	15:74	0:0	8	->
water	15:76	0:0	8	fade_factors
water	15:89	0:0	6	;
water	16:8	0:0	6	}
water	17:4	0:0	4	}

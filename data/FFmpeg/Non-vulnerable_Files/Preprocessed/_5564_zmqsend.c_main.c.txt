func	1:0	104:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	103:14	1	
decl	3:4	3:16	2	AVBPrint	src
decl	4:4	4:31	2	char	c
water	4:10	0:0	2	,
decl	4:4	4:31	2	char	*src_buf
water	4:20	0:0	2	,
decl	4:4	4:31	2	char	*recv_buf
decl	5:4	5:26	2	int	recv_buf_size
water	5:21	0:0	2	,
decl	5:4	5:26	2	int	ret
decl	6:4	6:26	2	void	*zmq_ctx
water	6:17	0:0	2	,
decl	6:4	6:26	2	void	*socket
decl	7:4	7:53	2	const char	*bind_address
op	7:29	0:0	2	=
water	7:31	0:0	2	"tcp://localhost:5555"
decl	8:4	8:33	2	const char	*infilename
op	8:27	0:0	2	=
water	8:29	0:0	2	NULL
decl	9:4	9:23	2	FILE	*infile
op	9:17	0:0	2	=
water	9:19	0:0	2	NULL
decl	10:4	10:17	2	zmq_msg_t	msg
while	11:4	25:4	2	(( c =getopt (argc ,argv ,"b:hi:" ) ) != - 1)
cond	11:11	11:49	3	( c =getopt (argc ,argv ,"b:hi:" ) ) != - 1
water	11:11	0:0	4	(
water	11:12	0:0	4	c
op	11:14	0:0	4	=
call	11:16	11:42	4	getopt
arg	11:23	11:27	5	argc
water	11:23	0:0	6	argc
arg	11:29	11:33	5	argv
water	11:29	0:0	6	argv
arg	11:35	11:42	5	"b:hi:"
water	11:35	0:0	6	"b:hi:"
water	11:43	0:0	4	)
op	11:45	0:0	4	!=
op	11:48	0:0	4	-
water	11:49	0:0	4	1
stmts	11:52	25:4	3	
water	11:52	0:0	4	{
switch	12:8	24:8	4	(c)
cond	12:16	12:16	5	c
water	12:16	0:0	6	c
stmts	12:19	24:8	5	
water	12:19	0:0	6	{
water	13:8	0:0	6	case
water	13:13	0:0	6	'b'
water	13:16	0:0	6	:
water	14:12	0:0	6	bind_address
op	14:25	0:0	6	=
water	14:27	0:0	6	optarg
water	14:33	0:0	6	;
break	15:12	15:17	6	
water	16:8	0:0	6	case
water	16:13	0:0	6	'h'
water	16:16	0:0	6	:
call	17:12	17:18	6	usage
water	17:19	0:0	6	;
return	18:12	18:20	6	0
water	18:19	0:0	7	0
water	19:8	0:0	6	case
water	19:13	0:0	6	'i'
water	19:16	0:0	6	:
water	20:12	0:0	6	infilename
op	20:23	0:0	6	=
water	20:25	0:0	6	optarg
water	20:31	0:0	6	;
break	21:12	21:17	6	
water	22:8	0:0	6	case
water	22:13	0:0	6	'?'
water	22:16	0:0	6	:
water	23:12	0:0	6	return
water	23:19	0:0	6	1
water	23:20	0:0	6	;
water	24:8	0:0	6	}
water	25:4	0:0	4	}
if	26:4	29:4	2	(! infilename || !strcmp (infilename ,"-" ))
cond	26:8	26:46	3	! infilename || !strcmp (infilename ,"-" )
op	26:8	0:0	4	!
water	26:9	0:0	4	infilename
op	26:20	0:0	4	||
op	26:23	0:0	4	!
call	26:24	26:46	4	strcmp
arg	26:31	26:41	5	infilename
water	26:31	0:0	6	infilename
arg	26:43	26:46	5	"-"
water	26:43	0:0	6	"-"
stmts	26:49	29:4	3	
water	26:49	0:0	4	{
water	27:8	0:0	4	infilename
op	27:19	0:0	4	=
water	27:21	0:0	4	"stdin"
water	27:28	0:0	4	;
water	28:8	0:0	4	infile
op	28:15	0:0	4	=
water	28:17	0:0	4	stdin
water	28:22	0:0	4	;
water	29:4	0:0	4	}
else	29:6	31:4	2
stmts	29:11	31:4	3	
water	29:11	0:0	4	{
water	30:8	0:0	4	infile
op	30:15	0:0	4	=
call	30:17	30:38	4	fopen
arg	30:23	30:33	5	infilename
water	30:23	0:0	6	infilename
arg	30:35	30:38	5	"r"
water	30:35	0:0	6	"r"
water	30:39	0:0	4	;
water	31:4	0:0	4	}
if	32:4	36:4	2	(! infile)
cond	32:8	32:9	3	! infile
op	32:8	0:0	4	!
water	32:9	0:0	4	infile
stmts	32:17	36:4	3	
water	32:17	0:0	4	{
call	33:8	34:86	4	av_log
arg	33:15	33:19	5	NULL
water	33:15	0:0	6	NULL
arg	33:21	33:33	5	AV_LOG_ERROR
water	33:21	0:0	6	AV_LOG_ERROR
arg	34:15	34:57	5	"Impossible to open input file '%s': %s\n"
water	34:15	0:0	6	"Impossible to open input file '%s': %s\n"
arg	34:59	34:69	5	infilename
water	34:59	0:0	6	infilename
arg	34:71	34:86	5	strerror(errno)
call	34:71	34:85	6	strerror
arg	34:80	34:85	7	errno
water	34:80	0:0	8	errno
water	34:87	0:0	4	;
return	35:8	35:16	4	1
water	35:15	0:0	5	1
water	36:4	0:0	4	}
water	37:4	0:0	2	zmq_ctx
op	37:12	0:0	2	=
call	37:14	37:26	2	zmq_ctx_new
water	37:27	0:0	2	;
if	38:4	42:4	2	(! zmq_ctx)
cond	38:8	38:9	3	! zmq_ctx
op	38:8	0:0	4	!
water	38:9	0:0	4	zmq_ctx
stmts	38:18	42:4	3	
water	38:18	0:0	4	{
call	39:8	40:72	4	av_log
arg	39:15	39:19	5	NULL
water	39:15	0:0	6	NULL
arg	39:21	39:33	5	AV_LOG_ERROR
water	39:21	0:0	6	AV_LOG_ERROR
arg	40:15	40:51	5	"Could not create ZMQ context: %s\n"
water	40:15	0:0	6	"Could not create ZMQ context: %s\n"
arg	40:53	40:72	5	zmq_strerror(errno)
call	40:53	40:71	6	zmq_strerror
arg	40:66	40:71	7	errno
water	40:66	0:0	8	errno
water	40:73	0:0	4	;
return	41:8	41:16	4	1
water	41:15	0:0	5	1
water	42:4	0:0	4	}
water	43:4	0:0	2	socket
op	43:11	0:0	2	=
call	43:13	43:40	2	zmq_socket
arg	43:24	43:31	3	zmq_ctx
water	43:24	0:0	4	zmq_ctx
arg	43:33	43:40	3	ZMQ_REQ
water	43:33	0:0	4	ZMQ_REQ
water	43:41	0:0	2	;
if	44:4	49:4	2	(! socket)
cond	44:8	44:9	3	! socket
op	44:8	0:0	4	!
water	44:9	0:0	4	socket
stmts	44:17	49:4	3	
water	44:17	0:0	4	{
call	45:8	46:71	4	av_log
arg	45:15	45:19	5	NULL
water	45:15	0:0	6	NULL
arg	45:21	45:33	5	AV_LOG_ERROR
water	45:21	0:0	6	AV_LOG_ERROR
arg	46:15	46:50	5	"Could not create ZMQ socket: %s\n"
water	46:15	0:0	6	"Could not create ZMQ socket: %s\n"
arg	46:52	46:71	5	zmq_strerror(errno)
call	46:52	46:70	6	zmq_strerror
arg	46:65	46:70	7	errno
water	46:65	0:0	8	errno
water	46:72	0:0	4	;
water	47:8	0:0	4	ret
op	47:12	0:0	4	=
water	47:14	0:0	4	1
water	47:15	0:0	4	;
goto	48:8	48:16	4	end
water	48:13	0:0	5	end
water	49:4	0:0	4	}
if	50:4	55:4	2	(zmq_connect (socket ,bind_address ) == - 1)
cond	50:8	50:46	3	zmq_connect (socket ,bind_address ) == - 1
call	50:8	50:40	4	zmq_connect
arg	50:20	50:26	5	socket
water	50:20	0:0	6	socket
arg	50:28	50:40	5	bind_address
water	50:28	0:0	6	bind_address
op	50:42	0:0	4	==
op	50:45	0:0	4	-
water	50:46	0:0	4	1
stmts	50:49	55:4	3	
water	50:49	0:0	4	{
call	51:8	52:48	4	av_log
arg	51:15	51:19	5	NULL
water	51:15	0:0	6	NULL
arg	51:21	51:33	5	AV_LOG_ERROR
water	51:21	0:0	6	AV_LOG_ERROR
arg	51:35	51:87	5	"Could not bind ZMQ responder to address '%s': %s\n"
water	51:35	0:0	6	"Could not bind ZMQ responder to address '%s': %s\n"
arg	52:15	52:27	5	bind_address
water	52:15	0:0	6	bind_address
arg	52:29	52:48	5	zmq_strerror(errno)
call	52:29	52:47	6	zmq_strerror
arg	52:42	52:47	7	errno
water	52:42	0:0	8	errno
water	52:49	0:0	4	;
water	53:8	0:0	4	ret
op	53:12	0:0	4	=
water	53:14	0:0	4	1
water	53:15	0:0	4	;
goto	54:8	54:16	4	end
water	54:13	0:0	5	end
water	55:4	0:0	4	}
call	57:4	57:52	2	av_bprint_init
arg	57:19	57:23	3	&src
op	57:19	0:0	4	&
water	57:20	0:0	4	src
arg	57:25	57:26	3	1
water	57:25	0:0	4	1
arg	57:28	57:52	3	AV_BPRINT_SIZE_UNLIMITED
water	57:28	0:0	4	AV_BPRINT_SIZE_UNLIMITED
water	57:53	0:0	2	;
while	58:4	59:35	2	(( c =fgetc (infile ) ) != EOF)
cond	58:11	58:34	3	( c =fgetc (infile ) ) != EOF
water	58:11	0:0	4	(
water	58:12	0:0	4	c
op	58:14	0:0	4	=
call	58:16	58:28	4	fgetc
arg	58:22	58:28	5	infile
water	58:22	0:0	6	infile
water	58:29	0:0	4	)
op	58:31	0:0	4	!=
water	58:34	0:0	4	EOF
stmts	59:8	59:35	3	
call	59:8	59:34	4	av_bprint_chars
arg	59:24	59:28	5	&src
op	59:24	0:0	6	&
water	59:25	0:0	6	src
arg	59:30	59:31	5	c
water	59:30	0:0	6	c
arg	59:33	59:34	5	1
water	59:33	0:0	6	1
water	59:35	0:0	4	;
call	60:4	60:30	2	av_bprint_chars
arg	60:20	60:24	3	&src
op	60:20	0:0	4	&
water	60:21	0:0	4	src
arg	60:26	60:27	3	0
water	60:26	0:0	4	0
arg	60:29	60:30	3	1
water	60:29	0:0	4	1
water	60:31	0:0	2	;
if	61:4	66:4	2	(!av_bprint_is_complete (& src ))
cond	61:8	61:35	3	!av_bprint_is_complete (& src )
op	61:8	0:0	4	!
call	61:9	61:35	4	av_bprint_is_complete
arg	61:31	61:35	5	&src
op	61:31	0:0	6	&
water	61:32	0:0	6	src
stmts	61:38	66:4	3	
water	61:38	0:0	4	{
call	62:8	62:88	4	av_log
arg	62:15	62:19	5	NULL
water	62:15	0:0	6	NULL
arg	62:21	62:33	5	AV_LOG_ERROR
water	62:21	0:0	6	AV_LOG_ERROR
arg	62:35	62:88	5	"Could not allocate a buffer for the source string\n"
water	62:35	0:0	6	"Could not allocate a buffer for the source string\n"
water	62:89	0:0	4	;
call	63:8	63:37	4	av_bprint_finalize
arg	63:27	63:31	5	&src
op	63:27	0:0	6	&
water	63:28	0:0	6	src
arg	63:33	63:37	5	NULL
water	63:33	0:0	6	NULL
water	63:38	0:0	4	;
water	64:8	0:0	4	ret
op	64:12	0:0	4	=
water	64:14	0:0	4	1
water	64:15	0:0	4	;
goto	65:8	65:16	4	end
water	65:13	0:0	5	end
water	66:4	0:0	4	}
call	67:4	67:37	2	av_bprint_finalize
arg	67:23	67:27	3	&src
op	67:23	0:0	4	&
water	67:24	0:0	4	src
arg	67:29	67:37	3	&src_buf
op	67:29	0:0	4	&
water	67:30	0:0	4	src_buf
water	67:38	0:0	2	;
if	68:4	72:4	2	(zmq_send (socket ,src_buf ,strlen (src_buf ) ,0 ) == - 1)
cond	68:8	68:58	3	zmq_send (socket ,src_buf ,strlen (src_buf ) ,0 ) == - 1
call	68:8	68:52	4	zmq_send
arg	68:17	68:23	5	socket
water	68:17	0:0	6	socket
arg	68:25	68:32	5	src_buf
water	68:25	0:0	6	src_buf
arg	68:34	68:49	5	strlen(src_buf)
call	68:34	68:48	6	strlen
arg	68:41	68:48	7	src_buf
water	68:41	0:0	8	src_buf
arg	68:51	68:52	5	0
water	68:51	0:0	6	0
op	68:54	0:0	4	==
op	68:57	0:0	4	-
water	68:58	0:0	4	1
stmts	68:61	72:4	3	
water	68:61	0:0	4	{
call	69:8	69:86	4	av_log
arg	69:15	69:19	5	NULL
water	69:15	0:0	6	NULL
arg	69:21	69:33	5	AV_LOG_ERROR
water	69:21	0:0	6	AV_LOG_ERROR
arg	69:35	69:65	5	"Could not send message: %s\n"
water	69:35	0:0	6	"Could not send message: %s\n"
arg	69:67	69:86	5	zmq_strerror(errno)
call	69:67	69:85	6	zmq_strerror
arg	69:80	69:85	7	errno
water	69:80	0:0	8	errno
water	69:87	0:0	4	;
water	70:8	0:0	4	ret
op	70:12	0:0	4	=
water	70:14	0:0	4	1
water	70:15	0:0	4	;
goto	71:8	71:16	4	end
water	71:13	0:0	5	end
water	72:4	0:0	4	}
if	73:4	78:4	2	(zmq_msg_init (& msg ) == - 1)
cond	73:8	73:31	3	zmq_msg_init (& msg ) == - 1
call	73:8	73:25	4	zmq_msg_init
arg	73:21	73:25	5	&msg
op	73:21	0:0	6	&
water	73:22	0:0	6	msg
op	73:27	0:0	4	==
op	73:30	0:0	4	-
water	73:31	0:0	4	1
stmts	73:34	78:4	3	
water	73:34	0:0	4	{
call	74:8	75:82	4	av_log
arg	74:15	74:19	5	NULL
water	74:15	0:0	6	NULL
arg	74:21	74:33	5	AV_LOG_ERROR
water	74:21	0:0	6	AV_LOG_ERROR
arg	75:15	75:61	5	"Could not initialize receiving message: %s\n"
water	75:15	0:0	6	"Could not initialize receiving message: %s\n"
arg	75:63	75:82	5	zmq_strerror(errno)
call	75:63	75:81	6	zmq_strerror
arg	75:76	75:81	7	errno
water	75:76	0:0	8	errno
water	75:83	0:0	4	;
water	76:8	0:0	4	ret
op	76:12	0:0	4	=
water	76:14	0:0	4	1
water	76:15	0:0	4	;
goto	77:8	77:16	4	end
water	77:13	0:0	5	end
water	78:4	0:0	4	}
if	79:4	85:4	2	(zmq_msg_recv (& msg ,socket ,0 ) == - 1)
cond	79:8	79:42	3	zmq_msg_recv (& msg ,socket ,0 ) == - 1
call	79:8	79:36	4	zmq_msg_recv
arg	79:21	79:25	5	&msg
op	79:21	0:0	6	&
water	79:22	0:0	6	msg
arg	79:27	79:33	5	socket
water	79:27	0:0	6	socket
arg	79:35	79:36	5	0
water	79:35	0:0	6	0
op	79:38	0:0	4	==
op	79:41	0:0	4	-
water	79:42	0:0	4	1
stmts	79:45	85:4	3	
water	79:45	0:0	4	{
call	80:8	81:69	4	av_log
arg	80:15	80:19	5	NULL
water	80:15	0:0	6	NULL
arg	80:21	80:33	5	AV_LOG_ERROR
water	80:21	0:0	6	AV_LOG_ERROR
arg	81:15	81:48	5	"Could not receive message: %s\n"
water	81:15	0:0	6	"Could not receive message: %s\n"
arg	81:50	81:69	5	zmq_strerror(errno)
call	81:50	81:68	6	zmq_strerror
arg	81:63	81:68	7	errno
water	81:63	0:0	8	errno
water	81:70	0:0	4	;
call	82:8	82:26	4	zmq_msg_close
arg	82:22	82:26	5	&msg
op	82:22	0:0	6	&
water	82:23	0:0	6	msg
water	82:27	0:0	4	;
water	83:8	0:0	4	ret
op	83:12	0:0	4	=
water	83:14	0:0	4	1
water	83:15	0:0	4	;
goto	84:8	84:16	4	end
water	84:13	0:0	5	end
water	85:4	0:0	4	}
water	86:4	0:0	2	recv_buf_size
op	86:18	0:0	2	=
call	86:20	86:37	2	zmq_msg_size
arg	86:33	86:37	3	&msg
op	86:33	0:0	4	&
water	86:34	0:0	4	msg
op	86:39	0:0	2	+
water	86:41	0:0	2	1
water	86:42	0:0	2	;
water	87:4	0:0	2	recv_buf
op	87:13	0:0	2	=
call	87:15	87:38	2	av_malloc
arg	87:25	87:38	3	recv_buf_size
water	87:25	0:0	4	recv_buf_size
water	87:39	0:0	2	;
if	88:4	94:4	2	(! recv_buf)
cond	88:8	88:9	3	! recv_buf
op	88:8	0:0	4	!
water	88:9	0:0	4	recv_buf
stmts	88:19	94:4	3	
water	88:19	0:0	4	{
call	89:8	90:62	4	av_log
arg	89:15	89:19	5	NULL
water	89:15	0:0	6	NULL
arg	89:21	89:33	5	AV_LOG_ERROR
water	89:21	0:0	6	AV_LOG_ERROR
arg	90:15	90:62	5	"Could not allocate receiving message buffer\n"
water	90:15	0:0	6	"Could not allocate receiving message buffer\n"
water	90:63	0:0	4	;
call	91:8	91:26	4	zmq_msg_close
arg	91:22	91:26	5	&msg
op	91:22	0:0	6	&
water	91:23	0:0	6	msg
water	91:27	0:0	4	;
water	92:8	0:0	4	ret
op	92:12	0:0	4	=
water	92:14	0:0	4	1
water	92:15	0:0	4	;
goto	93:8	93:16	4	end
water	93:13	0:0	5	end
water	94:4	0:0	4	}
call	95:4	95:54	2	memcpy
arg	95:11	95:19	3	recv_buf
water	95:11	0:0	4	recv_buf
arg	95:21	95:39	3	zmq_msg_data(&msg)
call	95:21	95:38	4	zmq_msg_data
arg	95:34	95:38	5	&msg
op	95:34	0:0	6	&
water	95:35	0:0	6	msg
arg	95:41	95:54	3	recv_buf_size
water	95:41	0:0	4	recv_buf_size
water	95:55	0:0	2	;
water	96:4	0:0	2	recv_buf
op	96:12	0:0	2	[
water	96:13	0:0	2	recv_buf_size
op	96:26	0:0	2	-
water	96:27	0:0	2	1
op	96:28	0:0	2	]
op	96:30	0:0	2	=
water	96:32	0:0	2	0
water	96:33	0:0	2	;
call	97:4	97:27	2	printf
arg	97:11	97:17	3	"%s\n"
water	97:11	0:0	4	"%s\n"
arg	97:19	97:27	3	recv_buf
water	97:19	0:0	4	recv_buf
water	97:28	0:0	2	;
call	98:4	98:22	2	zmq_msg_close
arg	98:18	98:22	3	&msg
op	98:18	0:0	4	&
water	98:19	0:0	4	msg
water	98:23	0:0	2	;
call	99:4	99:20	2	av_free
arg	99:12	99:20	3	recv_buf
water	99:12	0:0	4	recv_buf
water	99:21	0:0	2	;
label	100:0	100:3	2	end :
call	101:4	101:20	2	zmq_close
arg	101:14	101:20	3	socket
water	101:14	0:0	4	socket
water	101:21	0:0	2	;
call	102:4	102:27	2	zmq_ctx_destroy
arg	102:20	102:27	3	zmq_ctx
water	102:20	0:0	4	zmq_ctx
water	102:28	0:0	2	;
return	103:4	103:14	2	ret
water	103:11	0:0	3	ret

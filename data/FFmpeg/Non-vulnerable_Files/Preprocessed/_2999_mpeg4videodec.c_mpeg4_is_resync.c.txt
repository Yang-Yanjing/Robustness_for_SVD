func	1:0	40:0	0	static inline int	mpeg4_is_resync
params	1:33	0:0	1	
param	1:34	1:54	2	Mpeg4DecContext *	ctx
stmnts	0:0	39:12	1	
decl	3:4	3:31	2	MpegEncContext	*s
op	3:22	0:0	2	=
op	3:24	0:0	2	&
water	3:25	0:0	2	ctx
op	3:28	0:0	2	->
water	3:30	0:0	2	m
decl	4:4	4:43	2	int	bits_count
op	4:19	0:0	2	=
call	4:21	4:42	3	get_bits_count
arg	4:36	4:42	4	&s->gb
op	4:36	0:0	5	&
water	4:37	0:0	5	s
op	4:38	0:0	5	->
water	4:40	0:0	5	gb
decl	5:4	5:42	2	int	v
op	5:19	0:0	2	=
call	5:21	5:41	3	show_bits
arg	5:31	5:37	4	&s->gb
op	5:31	0:0	5	&
water	5:32	0:0	5	s
op	5:33	0:0	5	->
water	5:35	0:0	5	gb
arg	5:39	5:41	4	16
water	5:39	0:0	5	16
if	6:4	7:16	2	(s -> workaround_bugs & FF_BUG_NO_PADDING && ! ctx -> resync_marker)
cond	6:8	6:56	3	s -> workaround_bugs & FF_BUG_NO_PADDING && ! ctx -> resync_marker
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	workaround_bugs
op	6:27	0:0	4	&
water	6:29	0:0	4	FF_BUG_NO_PADDING
op	6:47	0:0	4	&&
op	6:50	0:0	4	!
water	6:51	0:0	4	ctx
op	6:54	0:0	4	->
water	6:56	0:0	4	resync_marker
stmts	7:8	7:16	3	
return	7:8	7:16	4	0
water	7:15	0:0	5	0
while	8:4	15:4	2	(v <= 0 xFF)
cond	8:11	8:17	3	v <= 0 xFF
water	8:11	0:0	4	v
op	8:13	0:0	4	<=
water	8:16	0:0	4	0
water	8:17	0:0	4	xFF
stmts	8:22	15:4	3	
water	8:22	0:0	4	{
if	9:8	11:17	4	(s -> pict_type == AV_PICTURE_TYPE_B || ( v >> ( 8 - s -> pict_type ) != 1 ) || s -> partitioned_frame)
cond	9:12	10:49	5	s -> pict_type == AV_PICTURE_TYPE_B || ( v >> ( 8 - s -> pict_type ) != 1 ) || s -> partitioned_frame
water	9:12	0:0	6	s
op	9:13	0:0	6	->
water	9:15	0:0	6	pict_type
op	9:25	0:0	6	==
water	9:28	0:0	6	AV_PICTURE_TYPE_B
op	9:46	0:0	6	||
water	10:12	0:0	6	(
water	10:13	0:0	6	v
op	10:15	0:0	6	>>
water	10:18	0:0	6	(
water	10:19	0:0	6	8
op	10:21	0:0	6	-
water	10:23	0:0	6	s
op	10:24	0:0	6	->
water	10:26	0:0	6	pict_type
water	10:35	0:0	6	)
op	10:37	0:0	6	!=
water	10:40	0:0	6	1
water	10:41	0:0	6	)
op	10:43	0:0	6	||
water	10:46	0:0	6	s
op	10:47	0:0	6	->
water	10:49	0:0	6	partitioned_frame
stmts	11:12	11:17	5	
break	11:12	11:17	6	
call	12:8	12:42	4	skip_bits
arg	12:18	12:24	5	&s->gb
op	12:18	0:0	6	&
water	12:19	0:0	6	s
op	12:20	0:0	6	->
water	12:22	0:0	6	gb
arg	12:26	12:42	5	8+s->pict_type
water	12:26	0:0	6	8
op	12:28	0:0	6	+
water	12:30	0:0	6	s
op	12:31	0:0	6	->
water	12:33	0:0	6	pict_type
water	12:43	0:0	4	;
water	13:8	0:0	4	bits_count
op	13:19	0:0	4	+=
water	13:22	0:0	4	8
op	13:24	0:0	4	+
water	13:26	0:0	4	s
op	13:27	0:0	4	->
water	13:29	0:0	4	pict_type
water	13:38	0:0	4	;
water	14:8	0:0	4	v
op	14:10	0:0	4	=
call	14:12	14:32	4	show_bits
arg	14:22	14:28	5	&s->gb
op	14:22	0:0	6	&
water	14:23	0:0	6	s
op	14:24	0:0	6	->
water	14:26	0:0	6	gb
arg	14:30	14:32	5	16
water	14:30	0:0	6	16
water	14:33	0:0	4	;
water	15:4	0:0	4	}
if	16:4	21:4	2	(bits_count + 8 >= s -> gb . size_in_bits)
cond	16:8	16:32	3	bits_count + 8 >= s -> gb . size_in_bits
water	16:8	0:0	4	bits_count
op	16:19	0:0	4	+
water	16:21	0:0	4	8
op	16:23	0:0	4	>=
water	16:26	0:0	4	s
op	16:27	0:0	4	->
water	16:29	0:0	4	gb
op	16:31	0:0	4	.
water	16:32	0:0	4	size_in_bits
stmts	16:46	21:4	3	
water	16:46	0:0	4	{
water	17:8	0:0	4	v
op	17:10	0:0	4	>>=
water	17:14	0:0	4	8
water	17:15	0:0	4	;
water	18:8	0:0	4	v
op	18:11	0:0	4	|=
water	18:14	0:0	4	0
water	18:15	0:0	4	x7F
op	18:19	0:0	4	>>
water	18:22	0:0	4	(
water	18:23	0:0	4	7
op	18:25	0:0	4	-
water	18:27	0:0	4	(
water	18:28	0:0	4	bits_count
op	18:39	0:0	4	&
water	18:41	0:0	4	7
water	18:42	0:0	4	)
water	18:43	0:0	4	)
water	18:44	0:0	4	;
if	19:8	20:28	4	(v == 0 x7F)
cond	19:12	19:18	5	v == 0 x7F
water	19:12	0:0	6	v
op	19:14	0:0	6	==
water	19:17	0:0	6	0
water	19:18	0:0	6	x7F
stmts	20:12	20:28	5	
return	20:12	20:28	6	s->mb_num
water	20:19	0:0	7	s
op	20:20	0:0	7	->
water	20:22	0:0	7	mb_num
water	21:4	0:0	4	}
else	21:6	38:4	2
stmts	21:11	38:4	3	
water	21:11	0:0	4	{
if	22:8	37:8	4	(v == ff_mpeg4_resync_prefix [ bits_count & 7 ])
cond	22:12	22:54	5	v == ff_mpeg4_resync_prefix [ bits_count & 7 ]
water	22:12	0:0	6	v
op	22:14	0:0	6	==
water	22:17	0:0	6	ff_mpeg4_resync_prefix
op	22:39	0:0	6	[
water	22:40	0:0	6	bits_count
op	22:51	0:0	6	&
water	22:53	0:0	6	7
op	22:54	0:0	6	]
stmts	22:57	37:8	5	
water	22:57	0:0	6	{
decl	23:12	23:27	6	int	len
water	23:19	0:0	6	,
decl	23:12	23:27	6	int	mb_num
decl	24:12	24:56	6	int	mb_num_bits
op	24:28	0:0	6	=
call	24:30	24:51	7	av_log2
arg	24:38	24:51	8	s->mb_num-1
water	24:38	0:0	9	s
op	24:39	0:0	9	->
water	24:41	0:0	9	mb_num
op	24:48	0:0	9	-
water	24:50	0:0	9	1
op	24:53	0:0	6	+
water	24:55	0:0	6	1
decl	25:12	25:36	6	GetBitContext	gb
op	25:29	0:0	6	=
water	25:31	0:0	6	s
op	25:32	0:0	6	->
water	25:34	0:0	6	gb
call	26:12	26:31	6	skip_bits
arg	26:22	26:28	7	&s->gb
op	26:22	0:0	8	&
water	26:23	0:0	8	s
op	26:24	0:0	8	->
water	26:26	0:0	8	gb
arg	26:30	26:31	7	1
water	26:30	0:0	8	1
water	26:32	0:0	6	;
call	27:12	27:33	6	align_get_bits
arg	27:27	27:33	7	&s->gb
op	27:27	0:0	8	&
water	27:28	0:0	8	s
op	27:29	0:0	8	->
water	27:31	0:0	8	gb
water	27:34	0:0	6	;
for	28:12	30:25	6	(len = 0 ;len < 32;len ++)
forinit	28:17	28:24	7	len = 0 ;
water	28:17	0:0	8	len
op	28:21	0:0	8	=
water	28:23	0:0	8	0
water	28:24	0:0	8	;
cond	28:26	28:32	7	len < 32
water	28:26	0:0	8	len
op	28:30	0:0	8	<
water	28:32	0:0	8	32
forexpr	28:36	28:39	7	len ++
water	28:36	0:0	8	len
op	28:39	0:0	8	++
stmts	29:16	30:25	7	
if	29:16	30:25	8	(get_bits1 (& s -> gb ))
cond	29:20	29:36	9	get_bits1 (& s -> gb )
call	29:20	29:36	10	get_bits1
arg	29:30	29:36	11	&s->gb
op	29:30	0:0	12	&
water	29:31	0:0	12	s
op	29:32	0:0	12	->
water	29:34	0:0	12	gb
stmts	30:20	30:25	9	
break	30:20	30:25	10	
water	31:12	0:0	6	mb_num
op	31:19	0:0	6	=
call	31:21	31:49	6	get_bits
arg	31:30	31:36	7	&s->gb
op	31:30	0:0	8	&
water	31:31	0:0	8	s
op	31:32	0:0	8	->
water	31:34	0:0	8	gb
arg	31:38	31:49	7	mb_num_bits
water	31:38	0:0	8	mb_num_bits
water	31:50	0:0	6	;
if	32:12	33:26	6	(! mb_num || mb_num > s -> mb_num ||get_bits_count (& s -> gb ) + 6 > s -> gb . size_in_bits)
cond	32:16	32:82	7	! mb_num || mb_num > s -> mb_num ||get_bits_count (& s -> gb ) + 6 > s -> gb . size_in_bits
op	32:16	0:0	8	!
water	32:17	0:0	8	mb_num
op	32:24	0:0	8	||
water	32:27	0:0	8	mb_num
op	32:34	0:0	8	>
water	32:36	0:0	8	s
op	32:37	0:0	8	->
water	32:39	0:0	8	mb_num
op	32:46	0:0	8	||
call	32:49	32:70	8	get_bits_count
arg	32:64	32:70	9	&s->gb
op	32:64	0:0	10	&
water	32:65	0:0	10	s
op	32:66	0:0	10	->
water	32:68	0:0	10	gb
op	32:71	0:0	8	+
water	32:72	0:0	8	6
op	32:74	0:0	8	>
water	32:76	0:0	8	s
op	32:77	0:0	8	->
water	32:79	0:0	8	gb
op	32:81	0:0	8	.
water	32:82	0:0	8	size_in_bits
stmts	33:16	33:26	7	
water	33:16	0:0	8	mb_num
op	33:22	0:0	8	=
op	33:24	0:0	8	-
water	33:25	0:0	8	1
water	33:26	0:0	8	;
water	34:12	0:0	6	s
op	34:13	0:0	6	->
water	34:15	0:0	6	gb
op	34:18	0:0	6	=
water	34:20	0:0	6	gb
water	34:22	0:0	6	;
if	35:12	36:29	6	(len >=ff_mpeg4_get_video_packet_prefix_length (s ))
cond	35:16	35:64	7	len >=ff_mpeg4_get_video_packet_prefix_length (s )
water	35:16	0:0	8	len
op	35:20	0:0	8	>=
call	35:23	35:64	8	ff_mpeg4_get_video_packet_prefix_length
arg	35:63	35:64	9	s
water	35:63	0:0	10	s
stmts	36:16	36:29	7	
return	36:16	36:29	8	mb_num
water	36:23	0:0	9	mb_num
water	37:8	0:0	6	}
water	38:4	0:0	4	}
return	39:4	39:12	2	0
water	39:11	0:0	3	0

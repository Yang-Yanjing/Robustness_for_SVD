func	1:0	26:0	0	static int	config_props
params	1:23	0:0	1	
param	1:24	1:42	2	AVFilterLink *	link
stmnts	0:0	25:12	1	
decl	3:4	3:36	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	link
op	3:31	0:0	2	->
water	3:33	0:0	2	src
decl	4:4	4:37	2	YADIFContext	*s
op	4:20	0:0	2	=
water	4:22	0:0	2	link
op	4:26	0:0	2	->
water	4:28	0:0	2	src
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
water	5:4	0:0	2	link
op	5:8	0:0	2	->
water	5:10	0:0	2	time_base
op	5:19	0:0	2	.
water	5:20	0:0	2	num
op	5:24	0:0	2	=
water	5:26	0:0	2	link
op	5:30	0:0	2	->
water	5:32	0:0	2	src
op	5:35	0:0	2	->
water	5:37	0:0	2	inputs
op	5:43	0:0	2	[
water	5:44	0:0	2	0
op	5:45	0:0	2	]
op	5:46	0:0	2	->
water	5:48	0:0	2	time_base
op	5:57	0:0	2	.
water	5:58	0:0	2	num
water	5:61	0:0	2	;
water	6:4	0:0	2	link
op	6:8	0:0	2	->
water	6:10	0:0	2	time_base
op	6:19	0:0	2	.
water	6:20	0:0	2	den
op	6:24	0:0	2	=
water	6:26	0:0	2	link
op	6:30	0:0	2	->
water	6:32	0:0	2	src
op	6:35	0:0	2	->
water	6:37	0:0	2	inputs
op	6:43	0:0	2	[
water	6:44	0:0	2	0
op	6:45	0:0	2	]
op	6:46	0:0	2	->
water	6:48	0:0	2	time_base
op	6:57	0:0	2	.
water	6:58	0:0	2	den
op	6:62	0:0	2	*
water	6:64	0:0	2	2
water	6:65	0:0	2	;
water	7:4	0:0	2	link
op	7:8	0:0	2	->
water	7:10	0:0	2	w
op	7:24	0:0	2	=
water	7:26	0:0	2	link
op	7:30	0:0	2	->
water	7:32	0:0	2	src
op	7:35	0:0	2	->
water	7:37	0:0	2	inputs
op	7:43	0:0	2	[
water	7:44	0:0	2	0
op	7:45	0:0	2	]
op	7:46	0:0	2	->
water	7:48	0:0	2	w
water	7:49	0:0	2	;
water	8:4	0:0	2	link
op	8:8	0:0	2	->
water	8:10	0:0	2	h
op	8:24	0:0	2	=
water	8:26	0:0	2	link
op	8:30	0:0	2	->
water	8:32	0:0	2	src
op	8:35	0:0	2	->
water	8:37	0:0	2	inputs
op	8:43	0:0	2	[
water	8:44	0:0	2	0
op	8:45	0:0	2	]
op	8:46	0:0	2	->
water	8:48	0:0	2	h
water	8:49	0:0	2	;
if	9:4	10:88	2	(s -> mode & 1)
cond	9:7	9:15	3	s -> mode & 1
water	9:7	0:0	4	s
op	9:8	0:0	4	->
water	9:10	0:0	4	mode
op	9:14	0:0	4	&
water	9:15	0:0	4	1
stmts	10:8	10:88	3	
water	10:8	0:0	4	link
op	10:12	0:0	4	->
water	10:14	0:0	4	frame_rate
op	10:25	0:0	4	=
call	10:27	10:87	4	av_mul_q
arg	10:36	10:68	5	link->src->inputs[0]->frame_rate
water	10:36	0:0	6	link
op	10:40	0:0	6	->
water	10:42	0:0	6	src
op	10:45	0:0	6	->
water	10:47	0:0	6	inputs
op	10:53	0:0	6	[
water	10:54	0:0	6	0
op	10:55	0:0	6	]
op	10:56	0:0	6	->
water	10:58	0:0	6	frame_rate
arg	10:70	10:87	5	(AVRational){2,1}
water	10:70	0:0	6	(
water	10:71	0:0	6	AVRational
water	10:81	0:0	6	)
water	10:82	0:0	6	{
water	10:83	0:0	6	2
water	10:84	0:0	6	,
water	10:85	0:0	6	1
water	10:86	0:0	6	}
water	10:88	0:0	4	;
if	11:4	14:4	2	(link -> w < 3 || link -> h < 3)
cond	11:8	11:33	3	link -> w < 3 || link -> h < 3
water	11:8	0:0	4	link
op	11:12	0:0	4	->
water	11:14	0:0	4	w
op	11:16	0:0	4	<
water	11:18	0:0	4	3
op	11:20	0:0	4	||
water	11:23	0:0	4	link
op	11:27	0:0	4	->
water	11:29	0:0	4	h
op	11:31	0:0	4	<
water	11:33	0:0	4	3
stmts	11:36	14:4	3	
water	11:36	0:0	4	{
call	12:8	12:92	4	av_log
arg	12:15	12:18	5	ctx
water	12:15	0:0	6	ctx
arg	12:20	12:32	5	AV_LOG_ERROR
water	12:20	0:0	6	AV_LOG_ERROR
arg	12:34	12:92	5	"Video of less than 3 columns or lines is not supported\n"
water	12:34	0:0	6	"Video of less than 3 columns or lines is not supported\n"
water	12:93	0:0	4	;
return	13:8	13:30	4	AVERROR(EINVAL)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	EINVAL
water	13:23	0:0	7	EINVAL
water	14:4	0:0	4	}
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	csp
op	15:11	0:0	2	=
call	15:13	15:45	2	av_pix_fmt_desc_get
arg	15:33	15:45	3	link->format
water	15:33	0:0	4	link
op	15:37	0:0	4	->
water	15:39	0:0	4	format
water	15:46	0:0	2	;
if	16:4	19:4	2	(s -> csp -> comp [ 0 ] . depth_minus1 / 8 == 1)
cond	16:8	16:44	3	s -> csp -> comp [ 0 ] . depth_minus1 / 8 == 1
water	16:8	0:0	4	s
op	16:9	0:0	4	->
water	16:11	0:0	4	csp
op	16:14	0:0	4	->
water	16:16	0:0	4	comp
op	16:20	0:0	4	[
water	16:21	0:0	4	0
op	16:22	0:0	4	]
op	16:23	0:0	4	.
water	16:24	0:0	4	depth_minus1
op	16:37	0:0	4	/
water	16:39	0:0	4	8
op	16:41	0:0	4	==
water	16:44	0:0	4	1
stmts	16:47	19:4	3	
water	16:47	0:0	4	{
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	filter_line
op	17:24	0:0	4	=
water	17:26	0:0	4	filter_line_c_16bit
water	17:45	0:0	4	;
water	18:8	0:0	4	s
op	18:9	0:0	4	->
water	18:11	0:0	4	filter_edges
op	18:24	0:0	4	=
water	18:26	0:0	4	filter_edges_16bit
water	18:44	0:0	4	;
water	19:4	0:0	4	}
else	19:6	22:4	2
stmts	19:11	22:4	3	
water	19:11	0:0	4	{
water	20:8	0:0	4	s
op	20:9	0:0	4	->
water	20:11	0:0	4	filter_line
op	20:24	0:0	4	=
water	20:26	0:0	4	filter_line_c
water	20:39	0:0	4	;
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	filter_edges
op	21:24	0:0	4	=
water	21:26	0:0	4	filter_edges
water	21:38	0:0	4	;
water	22:4	0:0	4	}
if	23:4	24:28	2	(ARCH_X86)
cond	23:8	23:8	3	ARCH_X86
water	23:8	0:0	4	ARCH_X86
stmts	24:8	24:28	3	
call	24:8	24:27	4	ff_yadif_init_x86
arg	24:26	24:27	5	s
water	24:26	0:0	6	s
water	24:28	0:0	4	;
return	25:4	25:12	2	0
water	25:11	0:0	3	0

func	1:0	33:0	0	static int	init_pattern_from_string
params	1:35	0:0	1	
param	1:36	1:56	2	AVFilterContext *	ctx
stmnts	0:0	32:12	1	
decl	3:4	3:41	2	CellAutoContext	*cellauto
op	3:30	0:0	2	=
water	3:32	0:0	2	ctx
op	3:35	0:0	2	->
water	3:37	0:0	2	priv
decl	4:4	4:11	2	char	*p
decl	5:4	5:16	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:16	2	int	w
op	5:13	0:0	2	=
water	5:15	0:0	2	0
water	6:4	0:0	2	w
op	6:6	0:0	2	=
call	6:8	6:32	2	strlen
arg	6:15	6:32	3	cellauto->pattern
water	6:15	0:0	4	cellauto
op	6:23	0:0	4	->
water	6:25	0:0	4	pattern
water	6:33	0:0	2	;
call	7:4	7:41	2	av_log
arg	7:11	7:14	3	ctx
water	7:11	0:0	4	ctx
arg	7:16	7:28	3	AV_LOG_DEBUG
water	7:16	0:0	4	AV_LOG_DEBUG
arg	7:30	7:38	3	"w:%d\n"
water	7:30	0:0	4	"w:%d\n"
arg	7:40	7:41	3	w
water	7:40	0:0	4	w
water	7:42	0:0	2	;
if	8:4	15:4	2	(cellauto -> w)
cond	8:8	8:18	3	cellauto -> w
water	8:8	0:0	4	cellauto
op	8:16	0:0	4	->
water	8:18	0:0	4	w
stmts	8:21	15:4	3	
water	8:21	0:0	4	{
if	9:8	14:8	4	(w > cellauto -> w)
cond	9:12	9:26	5	w > cellauto -> w
water	9:12	0:0	6	w
op	9:14	0:0	6	>
water	9:16	0:0	6	cellauto
op	9:24	0:0	6	->
water	9:26	0:0	6	w
stmts	9:29	14:8	5	
water	9:29	0:0	6	{
call	10:12	12:33	6	av_log
arg	10:19	10:22	7	ctx
water	10:19	0:0	8	ctx
arg	10:24	10:36	7	AV_LOG_ERROR
water	10:24	0:0	8	AV_LOG_ERROR
arg	11:19	11:101	7	"The specified width is %d which cannot contain the provided string width of %d\n"
water	11:19	0:0	8	"The specified width is %d which cannot contain the provided string width of %d\n"
arg	12:19	12:30	7	cellauto->w
water	12:19	0:0	8	cellauto
op	12:27	0:0	8	->
water	12:29	0:0	8	w
arg	12:32	12:33	7	w
water	12:32	0:0	8	w
water	12:34	0:0	6	;
return	13:12	13:34	6	AVERROR(EINVAL)
call	13:19	13:33	7	AVERROR
arg	13:27	13:33	8	EINVAL
water	13:27	0:0	9	EINVAL
water	14:8	0:0	6	}
water	15:4	0:0	4	}
else	15:6	19:4	2
stmts	15:11	19:4	3	
water	15:11	0:0	4	{
water	17:8	0:0	4	cellauto
op	17:16	0:0	4	->
water	17:18	0:0	4	w
op	17:20	0:0	4	=
water	17:22	0:0	4	w
water	17:23	0:0	4	;
water	18:8	0:0	4	cellauto
op	18:16	0:0	4	->
water	18:18	0:0	4	h
op	18:20	0:0	4	=
water	18:22	0:0	4	(
water	18:23	0:0	4	double
water	18:29	0:0	4	)
water	18:30	0:0	4	cellauto
op	18:38	0:0	4	->
water	18:40	0:0	4	w
op	18:42	0:0	4	*
water	18:44	0:0	4	M_PHI
water	18:49	0:0	4	;
water	19:4	0:0	4	}
water	20:4	0:0	2	cellauto
op	20:12	0:0	2	->
water	20:14	0:0	2	buf
op	20:18	0:0	2	=
call	20:20	20:79	2	av_mallocz_array
arg	20:37	20:66	3	sizeof(uint8_t)*cellauto->w
op	20:37	0:0	4	sizeof
water	20:43	0:0	4	(
water	20:44	0:0	4	uint8_t
water	20:51	0:0	4	)
op	20:53	0:0	4	*
water	20:55	0:0	4	cellauto
op	20:63	0:0	4	->
water	20:65	0:0	4	w
arg	20:68	20:79	3	cellauto->h
water	20:68	0:0	4	cellauto
op	20:76	0:0	4	->
water	20:78	0:0	4	h
water	20:80	0:0	2	;
if	21:4	22:30	2	(! cellauto -> buf)
cond	21:8	21:19	3	! cellauto -> buf
op	21:8	0:0	4	!
water	21:9	0:0	4	cellauto
op	21:17	0:0	4	->
water	21:19	0:0	4	buf
stmts	22:8	22:30	3	
return	22:8	22:30	4	AVERROR(ENOMEM)
call	22:15	22:29	5	AVERROR
arg	22:23	22:29	6	ENOMEM
water	22:23	0:0	7	ENOMEM
water	24:4	0:0	2	p
op	24:6	0:0	2	=
water	24:8	0:0	2	cellauto
op	24:16	0:0	2	->
water	24:18	0:0	2	pattern
water	24:25	0:0	2	;
for	25:4	31:4	2	(i = ( cellauto -> w - w ) / 2 ;;i ++)
forinit	25:9	25:32	3	i = ( cellauto -> w - w ) / 2 ;
water	25:9	0:0	4	i
op	25:11	0:0	4	=
water	25:13	0:0	4	(
water	25:14	0:0	4	cellauto
op	25:22	0:0	4	->
water	25:24	0:0	4	w
op	25:26	0:0	4	-
water	25:28	0:0	4	w
water	25:29	0:0	4	)
op	25:30	0:0	4	/
water	25:31	0:0	4	2
water	25:32	0:0	4	;
cond	0:0	0:0	3	
forexpr	25:35	25:36	3	i ++
water	25:35	0:0	4	i
op	25:36	0:0	4	++
stmts	25:40	31:4	3	
water	25:40	0:0	4	{
call	26:8	26:69	4	av_log
arg	26:15	26:18	5	ctx
water	26:15	0:0	6	ctx
arg	26:20	26:32	5	AV_LOG_DEBUG
water	26:20	0:0	6	AV_LOG_DEBUG
arg	26:34	26:43	5	"%d %c\n"
water	26:34	0:0	6	"%d %c\n"
arg	26:45	26:46	5	i
water	26:45	0:0	6	i
arg	26:48	26:69	5	*p=='\n'?'N':*p
op	26:48	0:0	6	*
water	26:49	0:0	6	p
op	26:51	0:0	6	==
water	26:54	0:0	6	'\n'
water	26:59	0:0	6	?
water	26:61	0:0	6	'N'
water	26:65	0:0	6	:
op	26:67	0:0	6	*
water	26:68	0:0	6	p
water	26:70	0:0	4	;
if	27:8	28:17	4	(* p == '\n' || ! * p)
cond	27:12	27:28	5	* p == '\n' || ! * p
op	27:12	0:0	6	*
water	27:13	0:0	6	p
op	27:15	0:0	6	==
water	27:18	0:0	6	'\n'
op	27:23	0:0	6	||
op	27:26	0:0	6	!
op	27:27	0:0	6	*
water	27:28	0:0	6	p
stmts	28:12	28:17	5	
break	28:12	28:17	6	
else	29:8	30:51	4
stmts	30:12	30:51	5	
water	30:12	0:0	6	cellauto
op	30:20	0:0	6	->
water	30:22	0:0	6	buf
op	30:25	0:0	6	[
water	30:26	0:0	6	i
op	30:27	0:0	6	]
op	30:29	0:0	6	=
op	30:31	0:0	6	!
op	30:32	0:0	6	!
call	30:33	30:50	6	av_isgraph
arg	30:44	30:50	7	*(p++)
op	30:44	0:0	8	*
water	30:45	0:0	8	(
water	30:46	0:0	8	p
op	30:47	0:0	8	++
water	30:49	0:0	8	)
water	30:51	0:0	6	;
water	31:4	0:0	4	}
return	32:4	32:12	2	0
water	32:11	0:0	3	0

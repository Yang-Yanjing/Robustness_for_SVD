func	1:0	31:0	0	static int	config_output_props
params	1:30	0:0	1	
param	1:31	1:52	2	AVFilterLink *	outlink
stmnts	0:0	30:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:35	2	SetTBContext	*settb
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
decl	5:4	5:41	2	AVFilterLink	*inlink
op	5:25	0:0	2	=
water	5:27	0:0	2	ctx
op	5:30	0:0	2	->
water	5:32	0:0	2	inputs
op	5:38	0:0	2	[
water	5:39	0:0	2	0
op	5:40	0:0	2	]
decl	6:4	6:24	2	AVRational	time_base
decl	7:4	7:11	2	int	ret
decl	8:4	8:14	2	double	res
water	9:4	0:0	2	settb
op	9:9	0:0	2	->
water	9:11	0:0	2	var_values
op	9:21	0:0	2	[
water	9:22	0:0	2	VAR_AVTB
op	9:30	0:0	2	]
op	9:32	0:0	2	=
call	9:34	9:55	2	av_q2d
arg	9:41	9:55	3	AV_TIME_BASE_Q
water	9:41	0:0	4	AV_TIME_BASE_Q
water	9:56	0:0	2	;
water	10:4	0:0	2	settb
op	10:9	0:0	2	->
water	10:11	0:0	2	var_values
op	10:21	0:0	2	[
water	10:22	0:0	2	VAR_INTB
op	10:30	0:0	2	]
op	10:32	0:0	2	=
call	10:34	10:58	2	av_q2d
arg	10:41	10:58	3	inlink->time_base
water	10:41	0:0	4	inlink
op	10:47	0:0	4	->
water	10:49	0:0	4	time_base
water	10:59	0:0	2	;
water	11:4	0:0	2	settb
op	11:9	0:0	2	->
water	11:11	0:0	2	var_values
op	11:21	0:0	2	[
water	11:22	0:0	2	VAR_SR
op	11:28	0:0	2	]
op	11:32	0:0	2	=
water	11:34	0:0	2	inlink
op	11:40	0:0	2	->
water	11:42	0:0	2	sample_rate
water	11:53	0:0	2	;
water	12:4	0:0	2	outlink
op	12:11	0:0	2	->
water	12:13	0:0	2	w
op	12:15	0:0	2	=
water	12:17	0:0	2	inlink
op	12:23	0:0	2	->
water	12:25	0:0	2	w
water	12:26	0:0	2	;
water	13:4	0:0	2	outlink
op	13:11	0:0	2	->
water	13:13	0:0	2	h
op	13:15	0:0	2	=
water	13:17	0:0	2	inlink
op	13:23	0:0	2	->
water	13:25	0:0	2	h
water	13:26	0:0	2	;
if	14:4	18:4	2	(( ret =av_expr_parse_and_eval (& res ,settb -> tb_expr ,var_names ,settb -> var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,NULL ) ) < 0)
cond	14:8	15:80	3	( ret =av_expr_parse_and_eval (& res ,settb -> tb_expr ,var_names ,settb -> var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,NULL ) ) < 0
water	14:8	0:0	4	(
water	14:9	0:0	4	ret
op	14:13	0:0	4	=
call	14:15	15:75	4	av_expr_parse_and_eval
arg	14:38	14:42	5	&res
op	14:38	0:0	6	&
water	14:39	0:0	6	res
arg	14:44	14:58	5	settb->tb_expr
water	14:44	0:0	6	settb
op	14:49	0:0	6	->
water	14:51	0:0	6	tb_expr
arg	14:60	14:69	5	var_names
water	14:60	0:0	6	var_names
arg	14:71	14:88	5	settb->var_values
water	14:71	0:0	6	settb
op	14:76	0:0	6	->
water	14:78	0:0	6	var_values
arg	15:38	15:42	5	NULL
water	15:38	0:0	6	NULL
arg	15:44	15:48	5	NULL
water	15:44	0:0	6	NULL
arg	15:50	15:54	5	NULL
water	15:50	0:0	6	NULL
arg	15:56	15:60	5	NULL
water	15:56	0:0	6	NULL
arg	15:62	15:66	5	NULL
water	15:62	0:0	6	NULL
arg	15:68	15:69	5	0
water	15:68	0:0	6	0
arg	15:71	15:75	5	NULL
water	15:71	0:0	6	NULL
water	15:76	0:0	4	)
op	15:78	0:0	4	<
water	15:80	0:0	4	0
stmts	15:83	18:4	3	
water	15:83	0:0	4	{
call	16:8	16:91	4	av_log
arg	16:15	16:18	5	ctx
water	16:15	0:0	6	ctx
arg	16:20	16:32	5	AV_LOG_ERROR
water	16:20	0:0	6	AV_LOG_ERROR
arg	16:34	16:75	5	"Invalid expression '%s' for timebase.\n"
water	16:34	0:0	6	"Invalid expression '%s' for timebase.\n"
arg	16:77	16:91	5	settb->tb_expr
water	16:77	0:0	6	settb
op	16:82	0:0	6	->
water	16:84	0:0	6	tb_expr
water	16:92	0:0	4	;
return	17:8	17:18	4	ret
water	17:15	0:0	5	ret
water	18:4	0:0	4	}
water	19:4	0:0	2	time_base
op	19:14	0:0	2	=
call	19:16	19:35	2	av_d2q
arg	19:23	19:26	3	res
water	19:23	0:0	4	res
arg	19:28	19:35	3	INT_MAX
water	19:28	0:0	4	INT_MAX
water	19:36	0:0	2	;
if	20:4	25:4	2	(time_base . num <= 0 || time_base . den <= 0)
cond	20:8	20:47	3	time_base . num <= 0 || time_base . den <= 0
water	20:8	0:0	4	time_base
op	20:17	0:0	4	.
water	20:18	0:0	4	num
op	20:22	0:0	4	<=
water	20:25	0:0	4	0
op	20:27	0:0	4	||
water	20:30	0:0	4	time_base
op	20:39	0:0	4	.
water	20:40	0:0	4	den
op	20:44	0:0	4	<=
water	20:47	0:0	4	0
stmts	20:50	25:4	3	
water	20:50	0:0	4	{
call	21:8	23:43	4	av_log
arg	21:15	21:18	5	ctx
water	21:15	0:0	6	ctx
arg	21:20	21:32	5	AV_LOG_ERROR
water	21:20	0:0	6	AV_LOG_ERROR
arg	22:15	22:81	5	"Invalid non-positive values for the timebase num:%d or den:%d.\n"
water	22:15	0:0	6	"Invalid non-positive values for the timebase num:%d or den:%d.\n"
arg	23:15	23:28	5	time_base.num
water	23:15	0:0	6	time_base
op	23:24	0:0	6	.
water	23:25	0:0	6	num
arg	23:30	23:43	5	time_base.den
water	23:30	0:0	6	time_base
op	23:39	0:0	6	.
water	23:40	0:0	6	den
water	23:44	0:0	4	;
return	24:8	24:30	4	AVERROR(EINVAL)
call	24:15	24:29	5	AVERROR
arg	24:23	24:29	6	EINVAL
water	24:23	0:0	7	EINVAL
water	25:4	0:0	4	}
water	26:4	0:0	2	outlink
op	26:11	0:0	2	->
water	26:13	0:0	2	time_base
op	26:23	0:0	2	=
water	26:25	0:0	2	time_base
water	26:34	0:0	2	;
call	27:4	29:57	2	av_log
arg	27:11	27:23	3	outlink->src
water	27:11	0:0	4	outlink
op	27:18	0:0	4	->
water	27:20	0:0	4	src
arg	27:25	27:39	3	AV_LOG_VERBOSE
water	27:25	0:0	4	AV_LOG_VERBOSE
arg	27:41	27:65	3	"tb:%d/%d -> tb:%d/%d\n"
water	27:41	0:0	4	"tb:%d/%d -> tb:%d/%d\n"
arg	28:11	28:33	3	inlink->time_base.num
water	28:11	0:0	4	inlink
op	28:18	0:0	4	->
water	28:20	0:0	4	time_base
op	28:29	0:0	4	.
water	28:30	0:0	4	num
arg	28:35	28:57	3	inlink->time_base.den
water	28:35	0:0	4	inlink
op	28:42	0:0	4	->
water	28:44	0:0	4	time_base
op	28:53	0:0	4	.
water	28:54	0:0	4	den
arg	29:11	29:33	3	outlink->time_base.num
water	29:11	0:0	4	outlink
op	29:18	0:0	4	->
water	29:20	0:0	4	time_base
op	29:29	0:0	4	.
water	29:30	0:0	4	num
arg	29:35	29:57	3	outlink->time_base.den
water	29:35	0:0	4	outlink
op	29:42	0:0	4	->
water	29:44	0:0	4	time_base
op	29:53	0:0	4	.
water	29:54	0:0	4	den
water	29:58	0:0	2	;
return	30:4	30:12	2	0
water	30:11	0:0	3	0

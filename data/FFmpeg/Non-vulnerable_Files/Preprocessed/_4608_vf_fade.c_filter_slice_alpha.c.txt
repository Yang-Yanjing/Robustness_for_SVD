func	1:0	22:0	0	static int	filter_slice_alpha
params	1:29	0:0	1	
param	1:30	1:50	2	AVFilterContext *	ctx
param	1:52	1:61	2	void *	arg
param	1:63	1:72	2	int	jobnr
param	2:30	2:41	2	int	nb_jobs
stmnts	0:0	21:12	1	
decl	4:4	4:30	2	FadeContext	*s
op	4:19	0:0	2	=
water	4:21	0:0	2	ctx
op	4:24	0:0	2	->
water	4:26	0:0	2	priv
decl	5:4	5:24	2	AVFrame	*frame
op	5:19	0:0	2	=
water	5:21	0:0	2	arg
decl	6:4	6:40	2	int	plane
op	6:14	0:0	2	=
water	6:16	0:0	2	s
op	6:17	0:0	2	->
water	6:19	0:0	2	is_packed_rgb
water	6:33	0:0	2	?
water	6:35	0:0	2	0
water	6:37	0:0	2	:
water	6:39	0:0	2	A
decl	7:4	7:59	2	int	slice_start
op	7:20	0:0	2	=
water	7:22	0:0	2	(
water	7:23	0:0	2	frame
op	7:28	0:0	2	->
water	7:30	0:0	2	height
op	7:37	0:0	2	*
water	7:40	0:0	2	jobnr
water	7:48	0:0	2	)
op	7:50	0:0	2	/
water	7:52	0:0	2	nb_jobs
decl	8:4	8:59	2	int	slice_end
op	8:20	0:0	2	=
water	8:22	0:0	2	(
water	8:23	0:0	2	frame
op	8:28	0:0	2	->
water	8:30	0:0	2	height
op	8:37	0:0	2	*
water	8:39	0:0	2	(
water	8:40	0:0	2	jobnr
op	8:45	0:0	2	+
water	8:46	0:0	2	1
water	8:47	0:0	2	)
water	8:48	0:0	2	)
op	8:50	0:0	2	/
water	8:52	0:0	2	nb_jobs
decl	9:4	9:12	2	int	i
water	9:9	0:0	2	,
decl	9:4	9:12	2	int	j
for	10:4	20:4	2	(i = slice_start ;i < slice_end;i ++)
forinit	10:9	10:24	3	i = slice_start ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	slice_start
water	10:24	0:0	4	;
cond	10:26	10:30	3	i < slice_end
water	10:26	0:0	4	i
op	10:28	0:0	4	<
water	10:30	0:0	4	slice_end
forexpr	10:41	10:42	3	i ++
water	10:41	0:0	4	i
op	10:42	0:0	4	++
stmts	10:46	20:4	3	
water	10:46	0:0	4	{
decl	11:8	11:102	4	uint8_t	*p
op	11:19	0:0	4	=
water	11:21	0:0	4	frame
op	11:26	0:0	4	->
water	11:28	0:0	4	data
op	11:32	0:0	4	[
water	11:33	0:0	4	plane
op	11:38	0:0	4	]
op	11:40	0:0	4	+
water	11:42	0:0	4	i
op	11:44	0:0	4	*
water	11:46	0:0	4	frame
op	11:51	0:0	4	->
water	11:53	0:0	4	linesize
op	11:61	0:0	4	[
water	11:62	0:0	4	plane
op	11:67	0:0	4	]
op	11:69	0:0	4	+
water	11:71	0:0	4	s
op	11:72	0:0	4	->
water	11:74	0:0	4	is_packed_rgb
op	11:87	0:0	4	*
water	11:88	0:0	4	s
op	11:89	0:0	4	->
water	11:91	0:0	4	rgba_map
op	11:99	0:0	4	[
water	11:100	0:0	4	A
op	11:101	0:0	4	]
decl	12:8	12:43	4	int	step
op	12:17	0:0	4	=
water	12:19	0:0	4	s
op	12:20	0:0	4	->
water	12:22	0:0	4	is_packed_rgb
water	12:36	0:0	4	?
water	12:38	0:0	4	4
water	12:40	0:0	4	:
water	12:42	0:0	4	1
for	13:8	19:8	4	(j = 0 ;j < frame -> width;j ++)
forinit	13:13	13:18	5	j = 0 ;
water	13:13	0:0	6	j
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:31	5	j < frame -> width
water	13:20	0:0	6	j
op	13:22	0:0	6	<
water	13:24	0:0	6	frame
op	13:29	0:0	6	->
water	13:31	0:0	6	width
forexpr	13:38	13:39	5	j ++
water	13:38	0:0	6	j
op	13:39	0:0	6	++
stmts	13:43	19:8	5	
water	13:43	0:0	6	{
op	17:12	0:0	6	*
water	17:13	0:0	6	p
op	17:15	0:0	6	=
water	17:17	0:0	6	(
water	17:18	0:0	6	(
op	17:19	0:0	6	*
water	17:20	0:0	6	p
op	17:22	0:0	6	-
water	17:24	0:0	6	s
op	17:25	0:0	6	->
water	17:27	0:0	6	black_level
water	17:38	0:0	6	)
op	17:40	0:0	6	*
water	17:42	0:0	6	s
op	17:43	0:0	6	->
water	17:45	0:0	6	factor
op	17:52	0:0	6	+
water	17:54	0:0	6	s
op	17:55	0:0	6	->
water	17:57	0:0	6	black_level_scaled
water	17:75	0:0	6	)
op	17:77	0:0	6	>>
water	17:80	0:0	6	16
water	17:82	0:0	6	;
water	18:12	0:0	6	p
op	18:14	0:0	6	+=
water	18:17	0:0	6	step
water	18:21	0:0	6	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}
return	21:4	21:12	2	0
water	21:11	0:0	3	0

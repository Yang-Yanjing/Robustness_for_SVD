func	1:0	22:0	0	static int	mov_write_gama_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
param	1:64	1:76	2	double	gamma
stmnts	0:0	21:12	1	
decl	3:4	3:21	2	uint32_t	gama
op	3:18	0:0	2	=
water	3:20	0:0	2	0
if	4:4	7:4	2	(gamma <= 0 . 0)
cond	4:8	4:19	3	gamma <= 0 . 0
water	4:8	0:0	4	gamma
op	4:14	0:0	4	<=
water	4:17	0:0	4	0
op	4:18	0:0	4	.
water	4:19	0:0	4	0
stmts	5:4	7:4	3	
water	5:4	0:0	4	{
water	6:8	0:0	4	gamma
op	6:14	0:0	4	=
call	6:16	6:63	4	avpriv_get_gamma_from_trc
arg	6:42	6:63	5	track->enc->color_trc
water	6:42	0:0	6	track
op	6:47	0:0	6	->
water	6:49	0:0	6	enc
op	6:52	0:0	6	->
water	6:54	0:0	6	color_trc
water	6:64	0:0	4	;
water	7:4	0:0	4	}
call	8:4	8:54	2	av_log
arg	8:11	8:13	3	pb
water	8:11	0:0	4	pb
arg	8:15	8:27	3	AV_LOG_DEBUG
water	8:15	0:0	4	AV_LOG_DEBUG
arg	8:29	8:47	3	"gamma value %g\n"
water	8:29	0:0	4	"gamma value %g\n"
arg	8:49	8:54	3	gamma
water	8:49	0:0	4	gamma
water	8:55	0:0	2	;
if	9:4	17:4	2	(gamma > 1 e - 6)
cond	9:8	9:19	3	gamma > 1 e - 6
water	9:8	0:0	4	gamma
op	9:14	0:0	4	>
water	9:16	0:0	4	1
water	9:17	0:0	4	e
op	9:18	0:0	4	-
water	9:19	0:0	4	6
stmts	9:22	17:4	3	
water	9:22	0:0	4	{
water	10:8	0:0	4	gama
op	10:13	0:0	4	=
water	10:15	0:0	4	(
water	10:16	0:0	4	uint32_t
water	10:24	0:0	4	)
call	10:25	10:54	4	lrint
arg	10:31	10:54	5	(double)(1<<16)*gamma
call	10:31	10:45	6	(double)
arg	10:40	10:45	7	1<<16
water	10:40	0:0	8	1
op	10:41	0:0	8	<<
water	10:43	0:0	8	16
op	10:47	0:0	6	*
water	10:49	0:0	6	gamma
water	10:55	0:0	4	;
call	11:8	11:64	4	av_log
arg	11:15	11:17	5	pb
water	11:15	0:0	6	pb
arg	11:19	11:31	5	AV_LOG_DEBUG
water	11:19	0:0	6	AV_LOG_DEBUG
arg	11:33	11:58	5	"writing gama value %d\n"
water	11:33	0:0	6	"writing gama value %d\n"
arg	11:60	11:64	5	gama
water	11:60	0:0	6	gama
water	11:65	0:0	4	;
call	12:8	12:42	4	av_assert0
arg	12:19	12:42	5	track->mode==MODE_MOV
water	12:19	0:0	6	track
op	12:24	0:0	6	->
water	12:26	0:0	6	mode
op	12:31	0:0	6	==
water	12:34	0:0	6	MODE_MOV
water	12:43	0:0	4	;
call	13:8	13:24	4	avio_wb32
arg	13:18	13:20	5	pb
water	13:18	0:0	6	pb
arg	13:22	13:24	5	12
water	13:22	0:0	6	12
water	13:25	0:0	4	;
call	14:8	14:31	4	ffio_wfourcc
arg	14:21	14:23	5	pb
water	14:21	0:0	6	pb
arg	14:25	14:31	5	"gama"
water	14:25	0:0	6	"gama"
water	14:32	0:0	4	;
call	15:8	15:26	4	avio_wb32
arg	15:18	15:20	5	pb
water	15:18	0:0	6	pb
arg	15:22	15:26	5	gama
water	15:22	0:0	6	gama
water	15:27	0:0	4	;
return	16:8	16:17	4	12
water	16:15	0:0	5	12
water	17:4	0:0	4	}
else	18:4	20:4	2
stmts	18:9	20:4	3	
water	18:9	0:0	4	{
call	19:8	19:85	4	av_log
arg	19:15	19:17	5	pb
water	19:15	0:0	6	pb
arg	19:19	19:33	5	AV_LOG_WARNING
water	19:19	0:0	6	AV_LOG_WARNING
arg	19:35	19:85	5	"gamma value unknown, unable to write gama atom\n"
water	19:35	0:0	6	"gamma value unknown, unable to write gama atom\n"
water	19:86	0:0	4	;
water	20:4	0:0	4	}
return	21:4	21:12	2	0
water	21:11	0:0	3	0

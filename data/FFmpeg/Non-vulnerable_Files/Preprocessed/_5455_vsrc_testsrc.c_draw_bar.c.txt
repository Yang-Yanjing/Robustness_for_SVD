func	1:0	35:0	0	static void	draw_bar
params	1:20	0:0	1	
param	1:21	1:44	2	TestSourceContext *	test
param	1:46	1:68	2	const uint8_t	color[4]
param	2:21	2:26	2	int	x
param	2:28	2:33	2	int	y
param	2:35	2:40	2	int	w
param	2:42	2:47	2	int	h
param	3:21	3:35	2	AVFrame *	frame
stmnts	0:0	34:4	1	
decl	5:4	5:71	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:70	3	av_pix_fmt_desc_get
arg	5:57	5:70	4	frame->format
water	5:57	0:0	5	frame
op	5:62	0:0	5	->
water	5:64	0:0	5	format
decl	6:4	6:19	2	uint8_t	*p
water	6:14	0:0	2	,
decl	6:4	6:19	2	uint8_t	*p0
decl	7:4	7:13	2	int	plane
water	8:4	0:0	2	x
op	8:6	0:0	2	=
call	8:8	8:28	2	FFMIN
arg	8:14	8:15	3	x
water	8:14	0:0	4	x
arg	8:17	8:28	3	test->w-1
water	8:17	0:0	4	test
op	8:21	0:0	4	->
water	8:23	0:0	4	w
op	8:25	0:0	4	-
water	8:27	0:0	4	1
water	8:29	0:0	2	;
water	9:4	0:0	2	y
op	9:6	0:0	2	=
call	9:8	9:28	2	FFMIN
arg	9:14	9:15	3	y
water	9:14	0:0	4	y
arg	9:17	9:28	3	test->h-1
water	9:17	0:0	4	test
op	9:21	0:0	4	->
water	9:23	0:0	4	h
op	9:25	0:0	4	-
water	9:27	0:0	4	1
water	9:29	0:0	2	;
water	10:4	0:0	2	w
op	10:6	0:0	2	=
call	10:8	10:28	2	FFMIN
arg	10:14	10:15	3	w
water	10:14	0:0	4	w
arg	10:17	10:28	3	test->w-x
water	10:17	0:0	4	test
op	10:21	0:0	4	->
water	10:23	0:0	4	w
op	10:25	0:0	4	-
water	10:27	0:0	4	x
water	10:29	0:0	2	;
water	11:4	0:0	2	h
op	11:6	0:0	2	=
call	11:8	11:28	2	FFMIN
arg	11:14	11:15	3	h
water	11:14	0:0	4	h
arg	11:17	11:28	3	test->h-y
water	11:17	0:0	4	test
op	11:21	0:0	4	->
water	11:23	0:0	4	h
op	11:25	0:0	4	-
water	11:27	0:0	4	y
water	11:29	0:0	2	;
call	12:4	12:31	2	av_assert0
arg	12:15	12:31	3	x+w<=test->w
water	12:15	0:0	4	x
op	12:17	0:0	4	+
water	12:19	0:0	4	w
op	12:21	0:0	4	<=
water	12:24	0:0	4	test
op	12:28	0:0	4	->
water	12:30	0:0	4	w
water	12:32	0:0	2	;
call	13:4	13:31	2	av_assert0
arg	13:15	13:31	3	y+h<=test->h
water	13:15	0:0	4	y
op	13:17	0:0	4	+
water	13:19	0:0	4	h
op	13:21	0:0	4	<=
water	13:24	0:0	4	test
op	13:28	0:0	4	->
water	13:30	0:0	4	h
water	13:32	0:0	2	;
for	14:4	34:4	2	(plane = 0 ;frame -> data [ plane ];plane ++)
forinit	14:9	14:18	3	plane = 0 ;
water	14:9	0:0	4	plane
op	14:15	0:0	4	=
water	14:17	0:0	4	0
water	14:18	0:0	4	;
cond	14:20	14:37	3	frame -> data [ plane ]
water	14:20	0:0	4	frame
op	14:25	0:0	4	->
water	14:27	0:0	4	data
op	14:31	0:0	4	[
water	14:32	0:0	4	plane
op	14:37	0:0	4	]
forexpr	14:40	14:45	3	plane ++
water	14:40	0:0	4	plane
op	14:45	0:0	4	++
stmts	14:49	34:4	3	
water	14:49	0:0	4	{
decl	15:8	15:34	4	const int	c
op	15:20	0:0	4	=
water	15:22	0:0	4	color
op	15:27	0:0	4	[
water	15:28	0:0	4	plane
op	15:33	0:0	4	]
decl	16:8	16:51	4	const int	linesize
op	16:27	0:0	4	=
water	16:29	0:0	4	frame
op	16:34	0:0	4	->
water	16:36	0:0	4	linesize
op	16:44	0:0	4	[
water	16:45	0:0	4	plane
op	16:50	0:0	4	]
decl	17:8	17:29	4	int	i
water	17:13	0:0	4	,
decl	17:8	17:29	4	int	px
water	17:17	0:0	4	,
decl	17:8	17:29	4	int	py
water	17:21	0:0	4	,
decl	17:8	17:29	4	int	pw
water	17:25	0:0	4	,
decl	17:8	17:29	4	int	ph
if	18:8	23:8	4	(plane == 1 || plane == 2)
cond	18:12	18:35	5	plane == 1 || plane == 2
water	18:12	0:0	6	plane
op	18:18	0:0	6	==
water	18:21	0:0	6	1
op	18:23	0:0	6	||
water	18:26	0:0	6	plane
op	18:32	0:0	6	==
water	18:35	0:0	6	2
stmts	18:38	23:8	5	
water	18:38	0:0	6	{
water	19:12	0:0	6	px
op	19:15	0:0	6	=
water	19:17	0:0	6	x
op	19:19	0:0	6	>>
water	19:22	0:0	6	desc
op	19:26	0:0	6	->
water	19:28	0:0	6	log2_chroma_w
water	19:41	0:0	6	;
water	20:12	0:0	6	pw
op	20:15	0:0	6	=
call	20:17	20:54	6	FF_CEIL_RSHIFT
arg	20:32	20:33	7	w
water	20:32	0:0	8	w
arg	20:35	20:54	7	desc->log2_chroma_w
water	20:35	0:0	8	desc
op	20:39	0:0	8	->
water	20:41	0:0	8	log2_chroma_w
water	20:55	0:0	6	;
water	21:12	0:0	6	py
op	21:15	0:0	6	=
water	21:17	0:0	6	y
op	21:19	0:0	6	>>
water	21:22	0:0	6	desc
op	21:26	0:0	6	->
water	21:28	0:0	6	log2_chroma_h
water	21:41	0:0	6	;
water	22:12	0:0	6	ph
op	22:15	0:0	6	=
call	22:17	22:54	6	FF_CEIL_RSHIFT
arg	22:32	22:33	7	h
water	22:32	0:0	8	h
arg	22:35	22:54	7	desc->log2_chroma_h
water	22:35	0:0	8	desc
op	22:39	0:0	8	->
water	22:41	0:0	8	log2_chroma_h
water	22:55	0:0	6	;
water	23:8	0:0	6	}
else	23:10	28:8	4
stmts	23:15	28:8	5	
water	23:15	0:0	6	{
water	24:12	0:0	6	px
op	24:15	0:0	6	=
water	24:17	0:0	6	x
water	24:18	0:0	6	;
water	25:12	0:0	6	pw
op	25:15	0:0	6	=
water	25:17	0:0	6	w
water	25:18	0:0	6	;
water	26:12	0:0	6	py
op	26:15	0:0	6	=
water	26:17	0:0	6	y
water	26:18	0:0	6	;
water	27:12	0:0	6	ph
op	27:15	0:0	6	=
water	27:17	0:0	6	h
water	27:18	0:0	6	;
water	28:8	0:0	6	}
water	29:8	0:0	4	p0
op	29:11	0:0	4	=
water	29:13	0:0	4	p
op	29:15	0:0	4	=
water	29:17	0:0	4	frame
op	29:22	0:0	4	->
water	29:24	0:0	4	data
op	29:28	0:0	4	[
water	29:29	0:0	4	plane
op	29:34	0:0	4	]
op	29:36	0:0	4	+
water	29:38	0:0	4	py
op	29:41	0:0	4	*
water	29:43	0:0	4	linesize
op	29:52	0:0	4	+
water	29:54	0:0	4	px
water	29:56	0:0	4	;
call	30:8	30:23	4	memset
arg	30:15	30:16	5	p
water	30:15	0:0	6	p
arg	30:18	30:19	5	c
water	30:18	0:0	6	c
arg	30:21	30:23	5	pw
water	30:21	0:0	6	pw
water	30:24	0:0	4	;
water	31:8	0:0	4	p
op	31:10	0:0	4	+=
water	31:13	0:0	4	linesize
water	31:21	0:0	4	;
for	32:8	33:29	4	(i = 1 ;i < ph;i ++ , p += linesize)
forinit	32:13	32:18	5	i = 1 ;
water	32:13	0:0	6	i
op	32:15	0:0	6	=
water	32:17	0:0	6	1
water	32:18	0:0	6	;
cond	32:20	32:24	5	i < ph
water	32:20	0:0	6	i
op	32:22	0:0	6	<
water	32:24	0:0	6	ph
forexpr	32:28	32:38	5	i ++ , p += linesize
water	32:28	0:0	6	i
op	32:29	0:0	6	++
water	32:31	0:0	6	,
water	32:33	0:0	6	p
op	32:35	0:0	6	+=
water	32:38	0:0	6	linesize
stmts	33:12	33:29	5	
call	33:12	33:28	6	memcpy
arg	33:19	33:20	7	p
water	33:19	0:0	8	p
arg	33:22	33:24	7	p0
water	33:22	0:0	8	p0
arg	33:26	33:28	7	pw
water	33:26	0:0	8	pw
water	33:29	0:0	6	;
water	34:4	0:0	4	}

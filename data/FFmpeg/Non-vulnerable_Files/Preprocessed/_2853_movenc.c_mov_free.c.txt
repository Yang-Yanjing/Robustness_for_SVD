func	1:0	21:0	0	static void	mov_free
params	1:20	0:0	1	
param	1:21	1:39	2	AVFormatContext *	s
stmnts	0:0	20:26	1	
decl	3:4	3:37	2	MOVMuxContext	*mov
op	3:23	0:0	2	=
water	3:25	0:0	2	s
op	3:26	0:0	2	->
water	3:28	0:0	2	priv_data
decl	4:4	4:9	2	int	i
if	5:4	9:4	2	(mov -> chapter_track)
cond	5:8	5:13	3	mov -> chapter_track
water	5:8	0:0	4	mov
op	5:11	0:0	4	->
water	5:13	0:0	4	chapter_track
stmts	5:28	9:4	3	
water	5:28	0:0	4	{
if	6:8	7:69	4	(mov -> tracks [ mov -> chapter_track ] . enc)
cond	6:12	6:44	5	mov -> tracks [ mov -> chapter_track ] . enc
water	6:12	0:0	6	mov
op	6:15	0:0	6	->
water	6:17	0:0	6	tracks
op	6:23	0:0	6	[
water	6:24	0:0	6	mov
op	6:27	0:0	6	->
water	6:29	0:0	6	chapter_track
op	6:42	0:0	6	]
op	6:43	0:0	6	.
water	6:44	0:0	6	enc
stmts	7:12	7:69	5	
call	7:12	7:68	6	av_freep
arg	7:21	7:68	7	&mov->tracks[mov->chapter_track].enc->extradata
op	7:21	0:0	8	&
water	7:22	0:0	8	mov
op	7:25	0:0	8	->
water	7:27	0:0	8	tracks
op	7:33	0:0	8	[
water	7:34	0:0	8	mov
op	7:37	0:0	8	->
water	7:39	0:0	8	chapter_track
op	7:52	0:0	8	]
op	7:53	0:0	8	.
water	7:54	0:0	8	enc
op	7:57	0:0	8	->
water	7:59	0:0	8	extradata
water	7:69	0:0	6	;
call	8:8	8:53	4	av_freep
arg	8:17	8:53	5	&mov->tracks[mov->chapter_track].enc
op	8:17	0:0	6	&
water	8:18	0:0	6	mov
op	8:21	0:0	6	->
water	8:23	0:0	6	tracks
op	8:29	0:0	6	[
water	8:30	0:0	6	mov
op	8:33	0:0	6	->
water	8:35	0:0	6	chapter_track
op	8:48	0:0	6	]
op	8:49	0:0	6	.
water	8:50	0:0	6	enc
water	8:54	0:0	4	;
water	9:4	0:0	4	}
for	10:4	19:4	2	(i = 0 ;i < mov -> nb_streams;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:25	3	i < mov -> nb_streams
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	mov
op	10:23	0:0	4	->
water	10:25	0:0	4	nb_streams
forexpr	10:37	10:38	3	i ++
water	10:37	0:0	4	i
op	10:38	0:0	4	++
stmts	10:42	19:4	3	
water	10:42	0:0	4	{
if	11:8	12:49	4	(mov -> tracks [ i ] . tag ==MKTAG ('r' ,'t' ,'p' ,' ' ))
cond	11:12	11:55	5	mov -> tracks [ i ] . tag ==MKTAG ('r' ,'t' ,'p' ,' ' )
water	11:12	0:0	6	mov
op	11:15	0:0	6	->
water	11:17	0:0	6	tracks
op	11:23	0:0	6	[
water	11:24	0:0	6	i
op	11:25	0:0	6	]
op	11:26	0:0	6	.
water	11:27	0:0	6	tag
op	11:31	0:0	6	==
call	11:34	11:55	6	MKTAG
arg	11:40	11:43	7	'r'
water	11:40	0:0	8	'r'
arg	11:44	11:47	7	't'
water	11:44	0:0	8	't'
arg	11:48	11:51	7	'p'
water	11:48	0:0	8	'p'
arg	11:52	11:55	7	' '
water	11:52	0:0	8	' '
stmts	12:12	12:49	5	
call	12:12	12:48	6	ff_mov_close_hinting
arg	12:33	12:48	7	&mov->tracks[i]
op	12:33	0:0	8	&
water	12:34	0:0	8	mov
op	12:37	0:0	8	->
water	12:39	0:0	8	tracks
op	12:45	0:0	8	[
water	12:46	0:0	8	i
op	12:47	0:0	8	]
water	12:49	0:0	6	;
else	13:8	14:41	4
stmts	13:13	14:41	5	
if	13:13	14:41	6	(mov -> tracks [ i ] . tag ==MKTAG ('t' ,'m' ,'c' ,'d' ) && mov -> nb_meta_tmcd)
cond	13:17	13:70	7	mov -> tracks [ i ] . tag ==MKTAG ('t' ,'m' ,'c' ,'d' ) && mov -> nb_meta_tmcd
water	13:17	0:0	8	mov
op	13:20	0:0	8	->
water	13:22	0:0	8	tracks
op	13:28	0:0	8	[
water	13:29	0:0	8	i
op	13:30	0:0	8	]
op	13:31	0:0	8	.
water	13:32	0:0	8	tag
op	13:36	0:0	8	==
call	13:39	13:60	8	MKTAG
arg	13:45	13:48	9	't'
water	13:45	0:0	10	't'
arg	13:49	13:52	9	'm'
water	13:49	0:0	10	'm'
arg	13:53	13:56	9	'c'
water	13:53	0:0	10	'c'
arg	13:57	13:60	9	'd'
water	13:57	0:0	10	'd'
op	13:62	0:0	8	&&
water	13:65	0:0	8	mov
op	13:68	0:0	8	->
water	13:70	0:0	8	nb_meta_tmcd
stmts	14:12	14:41	7	
call	14:12	14:40	8	av_freep
arg	14:21	14:40	9	&mov->tracks[i].enc
op	14:21	0:0	10	&
water	14:22	0:0	10	mov
op	14:25	0:0	10	->
water	14:27	0:0	10	tracks
op	14:33	0:0	10	[
water	14:34	0:0	10	i
op	14:35	0:0	10	]
op	14:36	0:0	10	.
water	14:37	0:0	10	enc
water	14:41	0:0	8	;
call	15:8	15:40	4	av_freep
arg	15:17	15:40	5	&mov->tracks[i].cluster
op	15:17	0:0	6	&
water	15:18	0:0	6	mov
op	15:21	0:0	6	->
water	15:23	0:0	6	tracks
op	15:29	0:0	6	[
water	15:30	0:0	6	i
op	15:31	0:0	6	]
op	15:32	0:0	6	.
water	15:33	0:0	6	cluster
water	15:41	0:0	4	;
call	16:8	16:42	4	av_freep
arg	16:17	16:42	5	&mov->tracks[i].frag_info
op	16:17	0:0	6	&
water	16:18	0:0	6	mov
op	16:21	0:0	6	->
water	16:23	0:0	6	tracks
op	16:29	0:0	6	[
water	16:30	0:0	6	i
op	16:31	0:0	6	]
op	16:32	0:0	6	.
water	16:33	0:0	6	frag_info
water	16:43	0:0	4	;
if	17:8	18:46	4	(mov -> tracks [ i ] . vos_len)
cond	17:12	17:27	5	mov -> tracks [ i ] . vos_len
water	17:12	0:0	6	mov
op	17:15	0:0	6	->
water	17:17	0:0	6	tracks
op	17:23	0:0	6	[
water	17:24	0:0	6	i
op	17:25	0:0	6	]
op	17:26	0:0	6	.
water	17:27	0:0	6	vos_len
stmts	18:12	18:46	5	
call	18:12	18:45	6	av_freep
arg	18:21	18:45	7	&mov->tracks[i].vos_data
op	18:21	0:0	8	&
water	18:22	0:0	8	mov
op	18:25	0:0	8	->
water	18:27	0:0	8	tracks
op	18:33	0:0	8	[
water	18:34	0:0	8	i
op	18:35	0:0	8	]
op	18:36	0:0	8	.
water	18:37	0:0	8	vos_data
water	18:46	0:0	6	;
water	19:4	0:0	4	}
call	20:4	20:25	2	av_freep
arg	20:13	20:25	3	&mov->tracks
op	20:13	0:0	4	&
water	20:14	0:0	4	mov
op	20:17	0:0	4	->
water	20:19	0:0	4	tracks
water	20:26	0:0	2	;

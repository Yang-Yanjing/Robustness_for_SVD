func	1:0	20:0	0	static int	encode_individual_channel
params	1:36	0:0	1	
param	1:37	1:58	2	AVCodecContext *	avctx
param	1:60	1:76	2	AACEncContext *	s
param	2:37	2:62	2	SingleChannelElement *	sce
param	3:37	3:54	2	int	common_window
stmnts	5:4	19:12	1	
call	5:4	5:38	2	put_bits
arg	5:13	5:19	3	&s->pb
op	5:13	0:0	4	&
water	5:14	0:0	4	s
op	5:15	0:0	4	->
water	5:17	0:0	4	pb
arg	5:21	5:22	3	8
water	5:21	0:0	4	8
arg	5:24	5:38	3	sce->sf_idx[0]
water	5:24	0:0	4	sce
op	5:27	0:0	4	->
water	5:29	0:0	4	sf_idx
op	5:35	0:0	4	[
water	5:36	0:0	4	0
op	5:37	0:0	4	]
water	5:39	0:0	2	;
if	6:4	10:4	2	(! common_window)
cond	6:8	6:9	3	! common_window
op	6:8	0:0	4	!
water	6:9	0:0	4	common_window
stmts	6:24	10:4	3	
water	6:24	0:0	4	{
call	7:8	7:33	4	put_ics_info
arg	7:21	7:22	5	s
water	7:21	0:0	6	s
arg	7:24	7:33	5	&sce->ics
op	7:24	0:0	6	&
water	7:25	0:0	6	sce
op	7:28	0:0	6	->
water	7:30	0:0	6	ics
water	7:34	0:0	4	;
if	8:8	9:46	4	(s -> coder -> encode_main_pred)
cond	8:12	8:22	5	s -> coder -> encode_main_pred
water	8:12	0:0	6	s
op	8:13	0:0	6	->
water	8:15	0:0	6	coder
op	8:20	0:0	6	->
water	8:22	0:0	6	encode_main_pred
stmts	9:12	9:46	5	
call	9:12	9:45	6	s->coder->encode_main_pred
arg	9:39	9:40	7	s
water	9:39	0:0	8	s
arg	9:42	9:45	7	sce
water	9:42	0:0	8	sce
water	9:46	0:0	6	;
water	10:4	0:0	4	}
call	11:4	11:27	2	encode_band_info
arg	11:21	11:22	3	s
water	11:21	0:0	4	s
arg	11:24	11:27	3	sce
water	11:24	0:0	4	sce
water	11:28	0:0	2	;
call	12:4	12:38	2	encode_scale_factors
arg	12:25	12:30	3	avctx
water	12:25	0:0	4	avctx
arg	12:32	12:33	3	s
water	12:32	0:0	4	s
arg	12:35	12:38	3	sce
water	12:35	0:0	4	sce
water	12:39	0:0	2	;
call	13:4	13:32	2	encode_pulses
arg	13:18	13:19	3	s
water	13:18	0:0	4	s
arg	13:21	13:32	3	&sce->pulse
op	13:21	0:0	4	&
water	13:22	0:0	4	sce
op	13:25	0:0	4	->
water	13:27	0:0	4	pulse
water	13:33	0:0	2	;
call	14:4	14:42	2	put_bits
arg	14:13	14:19	3	&s->pb
op	14:13	0:0	4	&
water	14:14	0:0	4	s
op	14:15	0:0	4	->
water	14:17	0:0	4	pb
arg	14:21	14:22	3	1
water	14:21	0:0	4	1
arg	14:24	14:42	3	!!sce->tns.present
op	14:24	0:0	4	!
op	14:25	0:0	4	!
water	14:26	0:0	4	sce
op	14:29	0:0	4	->
water	14:31	0:0	4	tns
op	14:34	0:0	4	.
water	14:35	0:0	4	present
water	14:43	0:0	2	;
if	15:4	16:41	2	(s -> coder -> encode_tns_info)
cond	15:8	15:18	3	s -> coder -> encode_tns_info
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	coder
op	15:16	0:0	4	->
water	15:18	0:0	4	encode_tns_info
stmts	16:8	16:41	3	
call	16:8	16:40	4	s->coder->encode_tns_info
arg	16:34	16:35	5	s
water	16:34	0:0	6	s
arg	16:37	16:40	5	sce
water	16:37	0:0	6	sce
water	16:41	0:0	4	;
call	17:4	17:25	2	put_bits
arg	17:13	17:19	3	&s->pb
op	17:13	0:0	4	&
water	17:14	0:0	4	s
op	17:15	0:0	4	->
water	17:17	0:0	4	pb
arg	17:21	17:22	3	1
water	17:21	0:0	4	1
arg	17:24	17:25	3	0
water	17:24	0:0	4	0
water	17:26	0:0	2	;
call	18:4	18:33	2	encode_spectral_coeffs
arg	18:27	18:28	3	s
water	18:27	0:0	4	s
arg	18:30	18:33	3	sce
water	18:30	0:0	4	sce
water	18:34	0:0	2	;
return	19:4	19:12	2	0
water	19:11	0:0	3	0

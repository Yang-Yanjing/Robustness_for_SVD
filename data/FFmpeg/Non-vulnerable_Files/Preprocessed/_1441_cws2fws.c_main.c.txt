func	1:0	99:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:31	2	char *	argv[]
stmnts	0:0	98:14	1	
decl	3:4	3:56	2	int	fd_in
water	3:13	0:0	2	,
decl	3:4	3:56	2	int	fd_out
water	3:21	0:0	2	,
decl	3:4	3:56	2	int	comp_len
water	3:31	0:0	2	,
decl	3:4	3:56	2	int	uncomp_len
water	3:43	0:0	2	,
decl	3:4	3:56	2	int	i
water	3:46	0:0	2	,
decl	3:4	3:56	2	int	last_out
decl	4:4	4:37	2	char	buf_in[1024]
water	4:21	0:0	2	,
decl	4:4	4:37	2	char	buf_out[65536]
decl	5:4	5:20	2	z_stream	zstream
decl	6:4	6:23	2	struct stat	statbuf
decl	7:4	7:15	2	int	ret
op	7:12	0:0	2	=
water	7:14	0:0	2	1
if	8:4	11:4	2	(argc < 3)
cond	8:8	8:15	3	argc < 3
water	8:8	0:0	4	argc
op	8:13	0:0	4	<
water	8:15	0:0	4	3
stmts	8:18	11:4	3	
water	8:18	0:0	4	{
call	9:8	9:64	4	printf
arg	9:15	9:55	5	"Usage: %s <infile.swf> <outfile.swf>\n"
water	9:15	0:0	6	"Usage: %s <infile.swf> <outfile.swf>\n"
arg	9:57	9:64	5	argv[0]
water	9:57	0:0	6	argv
op	9:61	0:0	6	[
water	9:62	0:0	6	0
op	9:63	0:0	6	]
water	9:65	0:0	4	;
return	10:8	10:16	4	1
water	10:15	0:0	5	1
water	11:4	0:0	4	}
water	12:4	0:0	2	fd_in
op	12:10	0:0	2	=
call	12:12	12:34	2	open
arg	12:17	12:24	3	argv[1]
water	12:17	0:0	4	argv
op	12:21	0:0	4	[
water	12:22	0:0	4	1
op	12:23	0:0	4	]
arg	12:26	12:34	3	O_RDONLY
water	12:26	0:0	4	O_RDONLY
water	12:35	0:0	2	;
if	13:4	16:4	2	(fd_in < 0)
cond	13:8	13:16	3	fd_in < 0
water	13:8	0:0	4	fd_in
op	13:14	0:0	4	<
water	13:16	0:0	4	0
stmts	13:19	16:4	3	
water	13:19	0:0	4	{
call	14:8	14:41	4	perror
arg	14:15	14:41	5	"Error opening input file"
water	14:15	0:0	6	"Error opening input file"
water	14:42	0:0	4	;
return	15:8	15:16	4	1
water	15:15	0:0	5	1
water	16:4	0:0	4	}
water	17:4	0:0	2	fd_out
op	17:11	0:0	2	=
call	17:13	17:52	2	open
arg	17:18	17:25	3	argv[2]
water	17:18	0:0	4	argv
op	17:22	0:0	4	[
water	17:23	0:0	4	2
op	17:24	0:0	4	]
arg	17:27	17:45	3	O_WRONLY|O_CREAT
water	17:27	0:0	4	O_WRONLY
op	17:36	0:0	4	|
water	17:38	0:0	4	O_CREAT
arg	17:47	17:52	3	00644
water	17:47	0:0	4	00644
water	17:53	0:0	2	;
if	18:4	22:4	2	(fd_out < 0)
cond	18:8	18:17	3	fd_out < 0
water	18:8	0:0	4	fd_out
op	18:15	0:0	4	<
water	18:17	0:0	4	0
stmts	18:20	22:4	3	
water	18:20	0:0	4	{
call	19:8	19:42	4	perror
arg	19:15	19:42	5	"Error opening output file"
water	19:15	0:0	6	"Error opening output file"
water	19:43	0:0	4	;
call	20:8	20:19	4	close
arg	20:14	20:19	5	fd_in
water	20:14	0:0	6	fd_in
water	20:20	0:0	4	;
return	21:8	21:16	4	1
water	21:15	0:0	5	1
water	22:4	0:0	4	}
if	23:4	26:4	2	(read (fd_in ,& buf_in ,8 ) != 8)
cond	23:8	23:35	3	read (fd_in ,& buf_in ,8 ) != 8
call	23:8	23:30	4	read
arg	23:13	23:18	5	fd_in
water	23:13	0:0	6	fd_in
arg	23:20	23:27	5	&buf_in
op	23:20	0:0	6	&
water	23:21	0:0	6	buf_in
arg	23:29	23:30	5	8
water	23:29	0:0	6	8
op	23:32	0:0	4	!=
water	23:35	0:0	4	8
stmts	23:38	26:4	3	
water	23:38	0:0	4	{
call	24:8	24:31	4	printf
arg	24:15	24:31	5	"Header error\n"
water	24:15	0:0	6	"Header error\n"
water	24:32	0:0	4	;
goto	25:8	25:16	4	out
water	25:13	0:0	5	out
water	26:4	0:0	4	}
if	27:4	30:4	2	(buf_in [ 0 ] != 'C' || buf_in [ 1 ] != 'W' || buf_in [ 2 ] != 'S')
cond	27:8	27:61	3	buf_in [ 0 ] != 'C' || buf_in [ 1 ] != 'W' || buf_in [ 2 ] != 'S'
water	27:8	0:0	4	buf_in
op	27:14	0:0	4	[
water	27:15	0:0	4	0
op	27:16	0:0	4	]
op	27:18	0:0	4	!=
water	27:21	0:0	4	'C'
op	27:25	0:0	4	||
water	27:28	0:0	4	buf_in
op	27:34	0:0	4	[
water	27:35	0:0	4	1
op	27:36	0:0	4	]
op	27:38	0:0	4	!=
water	27:41	0:0	4	'W'
op	27:45	0:0	4	||
water	27:48	0:0	4	buf_in
op	27:54	0:0	4	[
water	27:55	0:0	4	2
op	27:56	0:0	4	]
op	27:58	0:0	4	!=
water	27:61	0:0	4	'S'
stmts	27:66	30:4	3	
water	27:66	0:0	4	{
call	28:8	28:46	4	printf
arg	28:15	28:46	5	"Not a compressed flash file\n"
water	28:15	0:0	6	"Not a compressed flash file\n"
water	28:47	0:0	4	;
goto	29:8	29:16	4	out
water	29:13	0:0	5	out
water	30:4	0:0	4	}
if	31:4	34:4	2	(fstat (fd_in ,& statbuf ) < 0)
cond	31:8	31:33	3	fstat (fd_in ,& statbuf ) < 0
call	31:8	31:29	4	fstat
arg	31:14	31:19	5	fd_in
water	31:14	0:0	6	fd_in
arg	31:21	31:29	5	&statbuf
op	31:21	0:0	6	&
water	31:22	0:0	6	statbuf
op	31:31	0:0	4	<
water	31:33	0:0	4	0
stmts	31:36	34:4	3	
water	31:36	0:0	4	{
call	32:8	32:29	4	perror
arg	32:15	32:29	5	"fstat failed"
water	32:15	0:0	6	"fstat failed"
water	32:30	0:0	4	;
return	33:8	33:16	4	1
water	33:15	0:0	5	1
water	34:4	0:0	4	}
water	35:4	0:0	2	comp_len
op	35:15	0:0	2	=
water	35:17	0:0	2	statbuf
op	35:24	0:0	2	.
water	35:25	0:0	2	st_size
water	35:32	0:0	2	;
water	36:4	0:0	2	uncomp_len
op	36:15	0:0	2	=
water	36:17	0:0	2	buf_in
op	36:23	0:0	2	[
water	36:24	0:0	2	4
op	36:25	0:0	2	]
op	36:27	0:0	2	|
water	36:29	0:0	2	(
water	36:30	0:0	2	buf_in
op	36:36	0:0	2	[
water	36:37	0:0	2	5
op	36:38	0:0	2	]
op	36:40	0:0	2	<<
water	36:43	0:0	2	8
water	36:44	0:0	2	)
op	36:46	0:0	2	|
water	36:48	0:0	2	(
water	36:49	0:0	2	buf_in
op	36:55	0:0	2	[
water	36:56	0:0	2	6
op	36:57	0:0	2	]
op	36:59	0:0	2	<<
water	36:62	0:0	2	16
water	36:64	0:0	2	)
op	36:66	0:0	2	|
water	36:68	0:0	2	(
water	36:69	0:0	2	buf_in
op	36:75	0:0	2	[
water	36:76	0:0	2	7
op	36:77	0:0	2	]
op	36:79	0:0	2	<<
water	36:82	0:0	2	24
water	36:84	0:0	2	)
water	36:85	0:0	2	;
call	37:4	38:39	2	printf
arg	37:11	37:56	3	"Compressed size: %d Uncompressed size: %d\n"
water	37:11	0:0	4	"Compressed size: %d Uncompressed size: %d\n"
arg	38:11	38:23	3	comp_len-4
water	38:11	0:0	4	comp_len
op	38:20	0:0	4	-
water	38:22	0:0	4	4
arg	38:25	38:39	3	uncomp_len-4
water	38:25	0:0	4	uncomp_len
op	38:36	0:0	4	-
water	38:38	0:0	4	4
water	38:40	0:0	2	;
water	40:4	0:0	2	buf_in
op	40:10	0:0	2	[
water	40:11	0:0	2	0
op	40:12	0:0	2	]
op	40:14	0:0	2	=
water	40:16	0:0	2	'F'
water	40:19	0:0	2	;
if	41:4	44:4	2	(write (fd_out ,& buf_in ,8 ) < 8)
cond	41:8	41:36	3	write (fd_out ,& buf_in ,8 ) < 8
call	41:8	41:32	4	write
arg	41:14	41:20	5	fd_out
water	41:14	0:0	6	fd_out
arg	41:22	41:29	5	&buf_in
op	41:22	0:0	6	&
water	41:23	0:0	6	buf_in
arg	41:31	41:32	5	8
water	41:31	0:0	6	8
op	41:34	0:0	4	<
water	41:36	0:0	4	8
stmts	41:39	44:4	3	
water	41:39	0:0	4	{
call	42:8	42:42	4	perror
arg	42:15	42:42	5	"Error writing output file"
water	42:15	0:0	6	"Error writing output file"
water	42:43	0:0	4	;
goto	43:8	43:16	4	out
water	43:13	0:0	5	out
water	44:4	0:0	4	}
water	45:4	0:0	2	zstream
op	45:11	0:0	2	.
water	45:12	0:0	2	zalloc
op	45:19	0:0	2	=
water	45:21	0:0	2	NULL
water	45:25	0:0	2	;
water	46:4	0:0	2	zstream
op	46:11	0:0	2	.
water	46:12	0:0	2	zfree
op	46:19	0:0	2	=
water	46:21	0:0	2	NULL
water	46:25	0:0	2	;
water	47:4	0:0	2	zstream
op	47:11	0:0	2	.
water	47:12	0:0	2	opaque
op	47:19	0:0	2	=
water	47:21	0:0	2	NULL
water	47:25	0:0	2	;
if	48:4	51:4	2	(inflateInit (& zstream ) != Z_OK)
cond	48:8	48:33	3	inflateInit (& zstream ) != Z_OK
call	48:8	48:28	4	inflateInit
arg	48:20	48:28	5	&zstream
op	48:20	0:0	6	&
water	48:21	0:0	6	zstream
op	48:30	0:0	4	!=
water	48:33	0:0	4	Z_OK
stmts	48:39	51:4	3	
water	48:39	0:0	4	{
call	49:8	49:46	4	fprintf
arg	49:16	49:22	5	stderr
water	49:16	0:0	6	stderr
arg	49:24	49:46	5	"inflateInit failed\n"
water	49:24	0:0	6	"inflateInit failed\n"
water	49:47	0:0	4	;
return	50:8	50:16	4	1
water	50:15	0:0	5	1
water	51:4	0:0	4	}
for	52:4	78:4	2	(i = 0 ;i < comp_len - 8;)
forinit	52:9	52:14	3	i = 0 ;
water	52:9	0:0	4	i
op	52:11	0:0	4	=
water	52:13	0:0	4	0
water	52:14	0:0	4	;
cond	52:16	52:31	3	i < comp_len - 8
water	52:16	0:0	4	i
op	52:18	0:0	4	<
water	52:20	0:0	4	comp_len
op	52:29	0:0	4	-
water	52:31	0:0	4	8
forexpr	0:0	0:0	3	
stmts	52:35	78:4	3	
water	52:35	0:0	4	{
decl	53:8	53:49	4	int	ret
water	53:15	0:0	4	,
decl	53:8	53:49	4	int	len
op	53:21	0:0	4	=
call	53:23	53:48	5	read
arg	53:28	53:33	6	fd_in
water	53:28	0:0	7	fd_in
arg	53:35	53:42	6	&buf_in
op	53:35	0:0	7	&
water	53:36	0:0	7	buf_in
arg	53:44	53:48	6	1024
water	53:44	0:0	7	1024
call	54:8	54:40	4	dbgprintf
arg	54:18	54:35	5	"read %d bytes\n"
water	54:18	0:0	6	"read %d bytes\n"
arg	54:37	54:40	5	len
water	54:37	0:0	6	len
water	54:41	0:0	4	;
water	55:8	0:0	4	last_out
op	55:17	0:0	4	=
water	55:19	0:0	4	zstream
op	55:26	0:0	4	.
water	55:27	0:0	4	total_out
water	55:36	0:0	4	;
water	56:8	0:0	4	zstream
op	56:15	0:0	4	.
water	56:16	0:0	4	next_in
op	56:26	0:0	4	=
op	56:28	0:0	4	&
water	56:29	0:0	4	buf_in
op	56:35	0:0	4	[
water	56:36	0:0	4	0
op	56:37	0:0	4	]
water	56:38	0:0	4	;
water	57:8	0:0	4	zstream
op	57:15	0:0	4	.
water	57:16	0:0	4	avail_in
op	57:26	0:0	4	=
water	57:28	0:0	4	len
water	57:31	0:0	4	;
water	58:8	0:0	4	zstream
op	58:15	0:0	4	.
water	58:16	0:0	4	next_out
op	58:26	0:0	4	=
op	58:28	0:0	4	&
water	58:29	0:0	4	buf_out
op	58:36	0:0	4	[
water	58:37	0:0	4	0
op	58:38	0:0	4	]
water	58:39	0:0	4	;
water	59:8	0:0	4	zstream
op	59:15	0:0	4	.
water	59:16	0:0	4	avail_out
op	59:26	0:0	4	=
water	59:28	0:0	4	65536
water	59:33	0:0	4	;
water	60:8	0:0	4	ret
op	60:12	0:0	4	=
call	60:14	60:44	4	inflate
arg	60:22	60:30	5	&zstream
op	60:22	0:0	6	&
water	60:23	0:0	6	zstream
arg	60:32	60:44	5	Z_SYNC_FLUSH
water	60:32	0:0	6	Z_SYNC_FLUSH
water	60:45	0:0	4	;
if	61:8	65:8	4	(ret != Z_STREAM_END && ret != Z_OK)
cond	61:12	61:42	5	ret != Z_STREAM_END && ret != Z_OK
water	61:12	0:0	6	ret
op	61:16	0:0	6	!=
water	61:19	0:0	6	Z_STREAM_END
op	61:32	0:0	6	&&
water	61:35	0:0	6	ret
op	61:39	0:0	6	!=
water	61:42	0:0	6	Z_OK
stmts	61:48	65:8	5	
water	61:48	0:0	6	{
call	62:12	62:57	6	printf
arg	62:19	62:52	7	"Error while decompressing: %d\n"
water	62:19	0:0	8	"Error while decompressing: %d\n"
arg	62:54	62:57	7	ret
water	62:54	0:0	8	ret
water	62:58	0:0	6	;
call	63:12	63:31	6	inflateEnd
arg	63:23	63:31	7	&zstream
op	63:23	0:0	8	&
water	63:24	0:0	8	zstream
water	63:32	0:0	6	;
goto	64:12	64:20	6	out
water	64:17	0:0	7	out
water	65:8	0:0	6	}
call	66:8	68:65	4	dbgprintf
arg	66:18	66:72	5	"a_in: %d t_in: %lu a_out: %d t_out: %lu -- %lu out\n"
water	66:18	0:0	6	"a_in: %d t_in: %lu a_out: %d t_out: %lu -- %lu out\n"
arg	67:18	67:34	5	zstream.avail_in
water	67:18	0:0	6	zstream
op	67:25	0:0	6	.
water	67:26	0:0	6	avail_in
arg	67:36	67:52	5	zstream.total_in
water	67:36	0:0	6	zstream
op	67:43	0:0	6	.
water	67:44	0:0	6	total_in
arg	67:54	67:71	5	zstream.avail_out
water	67:54	0:0	6	zstream
op	67:61	0:0	6	.
water	67:62	0:0	6	avail_out
arg	68:18	68:35	5	zstream.total_out
water	68:18	0:0	6	zstream
op	68:25	0:0	6	.
water	68:26	0:0	6	total_out
arg	68:37	68:65	5	zstream.total_out-last_out
water	68:37	0:0	6	zstream
op	68:44	0:0	6	.
water	68:45	0:0	6	total_out
op	68:55	0:0	6	-
water	68:57	0:0	6	last_out
water	68:66	0:0	4	;
if	69:8	74:8	4	(write (fd_out ,& buf_out ,zstream . total_out - last_out ) < zstream . total_out - last_out)
cond	69:12	70:32	5	write (fd_out ,& buf_out ,zstream . total_out - last_out ) < zstream . total_out - last_out
call	69:12	69:64	6	write
arg	69:18	69:24	7	fd_out
water	69:18	0:0	8	fd_out
arg	69:26	69:34	7	&buf_out
op	69:26	0:0	8	&
water	69:27	0:0	8	buf_out
arg	69:36	69:64	7	zstream.total_out-last_out
water	69:36	0:0	8	zstream
op	69:43	0:0	8	.
water	69:44	0:0	8	total_out
op	69:54	0:0	8	-
water	69:56	0:0	8	last_out
op	69:66	0:0	6	<
water	70:12	0:0	6	zstream
op	70:19	0:0	6	.
water	70:20	0:0	6	total_out
op	70:30	0:0	6	-
water	70:32	0:0	6	last_out
stmts	70:42	74:8	5	
water	70:42	0:0	6	{
call	71:12	71:46	6	perror
arg	71:19	71:46	7	"Error writing output file"
water	71:19	0:0	8	"Error writing output file"
water	71:47	0:0	6	;
call	72:12	72:31	6	inflateEnd
arg	72:23	72:31	7	&zstream
op	72:23	0:0	8	&
water	72:24	0:0	8	zstream
water	72:32	0:0	6	;
goto	73:12	73:20	6	out
water	73:17	0:0	7	out
water	74:8	0:0	6	}
water	75:8	0:0	4	i
op	75:10	0:0	4	+=
water	75:13	0:0	4	len
water	75:16	0:0	4	;
if	76:8	77:17	4	(ret == Z_STREAM_END || ret == Z_BUF_ERROR)
cond	76:12	76:42	5	ret == Z_STREAM_END || ret == Z_BUF_ERROR
water	76:12	0:0	6	ret
op	76:16	0:0	6	==
water	76:19	0:0	6	Z_STREAM_END
op	76:32	0:0	6	||
water	76:35	0:0	6	ret
op	76:39	0:0	6	==
water	76:42	0:0	6	Z_BUF_ERROR
stmts	77:12	77:17	5	
break	77:12	77:17	6	
water	78:4	0:0	4	}
if	79:4	92:4	2	(zstream . total_out != uncomp_len - 8)
cond	79:8	79:42	3	zstream . total_out != uncomp_len - 8
water	79:8	0:0	4	zstream
op	79:15	0:0	4	.
water	79:16	0:0	4	total_out
op	79:26	0:0	4	!=
water	79:29	0:0	4	uncomp_len
op	79:40	0:0	4	-
water	79:42	0:0	4	8
stmts	79:45	92:4	3	
water	79:45	0:0	4	{
call	80:8	81:48	4	printf
arg	80:15	80:64	5	"Size mismatch (%lu != %d), updating header...\n"
water	80:15	0:0	6	"Size mismatch (%lu != %d), updating header...\n"
arg	81:15	81:32	5	zstream.total_out
water	81:15	0:0	6	zstream
op	81:22	0:0	6	.
water	81:23	0:0	6	total_out
arg	81:34	81:48	5	uncomp_len-8
water	81:34	0:0	6	uncomp_len
op	81:45	0:0	6	-
water	81:47	0:0	6	8
water	81:49	0:0	4	;
water	82:8	0:0	4	buf_in
op	82:14	0:0	4	[
water	82:15	0:0	4	0
op	82:16	0:0	4	]
op	82:18	0:0	4	=
water	82:21	0:0	4	(
water	82:22	0:0	4	zstream
op	82:29	0:0	4	.
water	82:30	0:0	4	total_out
op	82:40	0:0	4	+
water	82:42	0:0	4	8
water	82:43	0:0	4	)
op	82:52	0:0	4	&
water	82:54	0:0	4	0
water	82:55	0:0	4	xff
water	82:58	0:0	4	;
water	83:8	0:0	4	buf_in
op	83:14	0:0	4	[
water	83:15	0:0	4	1
op	83:16	0:0	4	]
op	83:18	0:0	4	=
water	83:20	0:0	4	(
water	83:21	0:0	4	(
water	83:22	0:0	4	zstream
op	83:29	0:0	4	.
water	83:30	0:0	4	total_out
op	83:40	0:0	4	+
water	83:42	0:0	4	8
water	83:43	0:0	4	)
op	83:45	0:0	4	>>
water	83:49	0:0	4	8
water	83:50	0:0	4	)
op	83:52	0:0	4	&
water	83:54	0:0	4	0
water	83:55	0:0	4	xff
water	83:58	0:0	4	;
water	84:8	0:0	4	buf_in
op	84:14	0:0	4	[
water	84:15	0:0	4	2
op	84:16	0:0	4	]
op	84:18	0:0	4	=
water	84:20	0:0	4	(
water	84:21	0:0	4	(
water	84:22	0:0	4	zstream
op	84:29	0:0	4	.
water	84:30	0:0	4	total_out
op	84:40	0:0	4	+
water	84:42	0:0	4	8
water	84:43	0:0	4	)
op	84:45	0:0	4	>>
water	84:48	0:0	4	16
water	84:50	0:0	4	)
op	84:52	0:0	4	&
water	84:54	0:0	4	0
water	84:55	0:0	4	xff
water	84:58	0:0	4	;
water	85:8	0:0	4	buf_in
op	85:14	0:0	4	[
water	85:15	0:0	4	3
op	85:16	0:0	4	]
op	85:18	0:0	4	=
water	85:20	0:0	4	(
water	85:21	0:0	4	(
water	85:22	0:0	4	zstream
op	85:29	0:0	4	.
water	85:30	0:0	4	total_out
op	85:40	0:0	4	+
water	85:42	0:0	4	8
water	85:43	0:0	4	)
op	85:45	0:0	4	>>
water	85:48	0:0	4	24
water	85:50	0:0	4	)
op	85:52	0:0	4	&
water	85:54	0:0	4	0
water	85:55	0:0	4	xff
water	85:58	0:0	4	;
if	86:8	91:8	4	(lseek (fd_out ,4 ,SEEK_SET ) < 0 ||write (fd_out ,& buf_in ,4 ) < 4)
cond	86:15	87:43	5	lseek (fd_out ,4 ,SEEK_SET ) < 0 ||write (fd_out ,& buf_in ,4 ) < 4
call	86:15	86:40	6	lseek
arg	86:21	86:27	7	fd_out
water	86:21	0:0	8	fd_out
arg	86:29	86:30	7	4
water	86:29	0:0	8	4
arg	86:32	86:40	7	SEEK_SET
water	86:32	0:0	8	SEEK_SET
op	86:42	0:0	6	<
water	86:44	0:0	6	0
op	87:12	0:0	6	||
call	87:15	87:39	6	write
arg	87:21	87:27	7	fd_out
water	87:21	0:0	8	fd_out
arg	87:29	87:36	7	&buf_in
op	87:29	0:0	8	&
water	87:30	0:0	8	buf_in
arg	87:38	87:39	7	4
water	87:38	0:0	8	4
op	87:41	0:0	6	<
water	87:43	0:0	6	4
stmts	87:46	91:8	5	
water	87:46	0:0	6	{
call	88:12	88:46	6	perror
arg	88:19	88:46	7	"Error writing output file"
water	88:19	0:0	8	"Error writing output file"
water	88:47	0:0	6	;
call	89:12	89:31	6	inflateEnd
arg	89:23	89:31	7	&zstream
op	89:23	0:0	8	&
water	89:24	0:0	8	zstream
water	89:32	0:0	6	;
goto	90:12	90:20	6	out
water	90:17	0:0	7	out
water	91:8	0:0	6	}
water	92:4	0:0	4	}
water	93:4	0:0	2	ret
op	93:8	0:0	2	=
water	93:10	0:0	2	0
water	93:11	0:0	2	;
call	94:4	94:23	2	inflateEnd
arg	94:15	94:23	3	&zstream
op	94:15	0:0	4	&
water	94:16	0:0	4	zstream
water	94:24	0:0	2	;
label	95:0	95:3	2	out :
call	96:4	96:15	2	close
arg	96:10	96:15	3	fd_in
water	96:10	0:0	4	fd_in
water	96:16	0:0	2	;
call	97:4	97:16	2	close
arg	97:10	97:16	3	fd_out
water	97:10	0:0	4	fd_out
water	97:17	0:0	2	;
return	98:4	98:14	2	ret
water	98:11	0:0	3	ret

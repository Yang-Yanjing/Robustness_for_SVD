func	1:0	84:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	83:14	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:29	2	PadContext	*s
op	4:18	0:0	2	=
water	4:20	0:0	2	ctx
op	4:23	0:0	2	->
water	4:25	0:0	2	priv
decl	5:4	5:11	2	int	ret
decl	6:4	6:35	2	double	var_values[VARS_NB]
water	6:30	0:0	2	,
decl	6:4	6:35	2	double	res
decl	7:4	7:14	2	char	*expr
call	8:4	8:44	2	ff_draw_init
arg	8:17	8:25	3	&s->draw
op	8:17	0:0	4	&
water	8:18	0:0	4	s
op	8:19	0:0	4	->
water	8:21	0:0	4	draw
arg	8:27	8:41	3	inlink->format
water	8:27	0:0	4	inlink
op	8:33	0:0	4	->
water	8:35	0:0	4	format
arg	8:43	8:44	3	0
water	8:43	0:0	4	0
water	8:45	0:0	2	;
call	9:4	9:52	2	ff_draw_color
arg	9:18	9:26	3	&s->draw
op	9:18	0:0	4	&
water	9:19	0:0	4	s
op	9:20	0:0	4	->
water	9:22	0:0	4	draw
arg	9:28	9:37	3	&s->color
op	9:28	0:0	4	&
water	9:29	0:0	4	s
op	9:30	0:0	4	->
water	9:32	0:0	4	color
arg	9:39	9:52	3	s->rgba_color
water	9:39	0:0	4	s
op	9:40	0:0	4	->
water	9:42	0:0	4	rgba_color
water	9:53	0:0	2	;
water	10:4	0:0	2	var_values
op	10:14	0:0	2	[
water	10:15	0:0	2	VAR_IN_W
op	10:23	0:0	2	]
op	10:26	0:0	2	=
water	10:28	0:0	2	var_values
op	10:38	0:0	2	[
water	10:39	0:0	2	VAR_IW
op	10:45	0:0	2	]
op	10:47	0:0	2	=
water	10:49	0:0	2	inlink
op	10:55	0:0	2	->
water	10:57	0:0	2	w
water	10:58	0:0	2	;
water	11:4	0:0	2	var_values
op	11:14	0:0	2	[
water	11:15	0:0	2	VAR_IN_H
op	11:23	0:0	2	]
op	11:26	0:0	2	=
water	11:28	0:0	2	var_values
op	11:38	0:0	2	[
water	11:39	0:0	2	VAR_IH
op	11:45	0:0	2	]
op	11:47	0:0	2	=
water	11:49	0:0	2	inlink
op	11:55	0:0	2	->
water	11:57	0:0	2	h
water	11:58	0:0	2	;
water	12:4	0:0	2	var_values
op	12:14	0:0	2	[
water	12:15	0:0	2	VAR_OUT_W
op	12:24	0:0	2	]
op	12:26	0:0	2	=
water	12:28	0:0	2	var_values
op	12:38	0:0	2	[
water	12:39	0:0	2	VAR_OW
op	12:45	0:0	2	]
op	12:47	0:0	2	=
water	12:49	0:0	2	NAN
water	12:52	0:0	2	;
water	13:4	0:0	2	var_values
op	13:14	0:0	2	[
water	13:15	0:0	2	VAR_OUT_H
op	13:24	0:0	2	]
op	13:26	0:0	2	=
water	13:28	0:0	2	var_values
op	13:38	0:0	2	[
water	13:39	0:0	2	VAR_OH
op	13:45	0:0	2	]
op	13:47	0:0	2	=
water	13:49	0:0	2	NAN
water	13:52	0:0	2	;
water	14:4	0:0	2	var_values
op	14:14	0:0	2	[
water	14:15	0:0	2	VAR_A
op	14:20	0:0	2	]
op	14:26	0:0	2	=
water	14:28	0:0	2	(
water	14:29	0:0	2	double
water	14:35	0:0	2	)
water	14:37	0:0	2	inlink
op	14:43	0:0	2	->
water	14:45	0:0	2	w
op	14:47	0:0	2	/
water	14:49	0:0	2	inlink
op	14:55	0:0	2	->
water	14:57	0:0	2	h
water	14:58	0:0	2	;
water	15:4	0:0	2	var_values
op	15:14	0:0	2	[
water	15:15	0:0	2	VAR_SAR
op	15:22	0:0	2	]
op	15:26	0:0	2	=
water	15:28	0:0	2	inlink
op	15:34	0:0	2	->
water	15:36	0:0	2	sample_aspect_ratio
op	15:55	0:0	2	.
water	15:56	0:0	2	num
water	15:60	0:0	2	?
water	16:8	0:0	2	(
water	16:9	0:0	2	double
water	16:15	0:0	2	)
water	16:17	0:0	2	inlink
op	16:23	0:0	2	->
water	16:25	0:0	2	sample_aspect_ratio
op	16:44	0:0	2	.
water	16:45	0:0	2	num
op	16:49	0:0	2	/
water	16:51	0:0	2	inlink
op	16:57	0:0	2	->
water	16:59	0:0	2	sample_aspect_ratio
op	16:78	0:0	2	.
water	16:79	0:0	2	den
water	16:83	0:0	2	:
water	16:85	0:0	2	1
water	16:86	0:0	2	;
water	17:4	0:0	2	var_values
op	17:14	0:0	2	[
water	17:15	0:0	2	VAR_DAR
op	17:22	0:0	2	]
op	17:26	0:0	2	=
water	17:28	0:0	2	var_values
op	17:38	0:0	2	[
water	17:39	0:0	2	VAR_A
op	17:44	0:0	2	]
op	17:46	0:0	2	*
water	17:48	0:0	2	var_values
op	17:58	0:0	2	[
water	17:59	0:0	2	VAR_SAR
op	17:66	0:0	2	]
water	17:67	0:0	2	;
water	18:4	0:0	2	var_values
op	18:14	0:0	2	[
water	18:15	0:0	2	VAR_HSUB
op	18:23	0:0	2	]
op	18:26	0:0	2	=
water	18:28	0:0	2	1
op	18:30	0:0	2	<<
water	18:33	0:0	2	s
op	18:34	0:0	2	->
water	18:36	0:0	2	draw
op	18:40	0:0	2	.
water	18:41	0:0	2	hsub_max
water	18:49	0:0	2	;
water	19:4	0:0	2	var_values
op	19:14	0:0	2	[
water	19:15	0:0	2	VAR_VSUB
op	19:23	0:0	2	]
op	19:26	0:0	2	=
water	19:28	0:0	2	1
op	19:30	0:0	2	<<
water	19:33	0:0	2	s
op	19:34	0:0	2	->
water	19:36	0:0	2	draw
op	19:40	0:0	2	.
water	19:41	0:0	2	vsub_max
water	19:49	0:0	2	;
call	21:4	23:63	2	av_expr_parse_and_eval
arg	21:27	21:31	3	&res
op	21:27	0:0	4	&
water	21:28	0:0	4	res
arg	21:33	21:51	3	(expr=s->w_expr)
water	21:33	0:0	4	(
water	21:34	0:0	4	expr
op	21:39	0:0	4	=
water	21:41	0:0	4	s
op	21:42	0:0	4	->
water	21:44	0:0	4	w_expr
water	21:50	0:0	4	)
arg	22:27	22:36	3	var_names
water	22:27	0:0	4	var_names
arg	22:38	22:48	3	var_values
water	22:38	0:0	4	var_values
arg	23:27	23:31	3	NULL
water	23:27	0:0	4	NULL
arg	23:33	23:37	3	NULL
water	23:33	0:0	4	NULL
arg	23:39	23:43	3	NULL
water	23:39	0:0	4	NULL
arg	23:45	23:49	3	NULL
water	23:45	0:0	4	NULL
arg	23:51	23:55	3	NULL
water	23:51	0:0	4	NULL
arg	23:57	23:58	3	0
water	23:57	0:0	4	0
arg	23:60	23:63	3	ctx
water	23:60	0:0	4	ctx
water	23:64	0:0	2	;
water	24:4	0:0	2	s
op	24:5	0:0	2	->
water	24:7	0:0	2	w
op	24:9	0:0	2	=
water	24:11	0:0	2	var_values
op	24:21	0:0	2	[
water	24:22	0:0	2	VAR_OUT_W
op	24:31	0:0	2	]
op	24:33	0:0	2	=
water	24:35	0:0	2	var_values
op	24:45	0:0	2	[
water	24:46	0:0	2	VAR_OW
op	24:52	0:0	2	]
op	24:54	0:0	2	=
water	24:56	0:0	2	res
water	24:59	0:0	2	;
if	25:4	28:22	2	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> h_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	25:8	27:79	3	( ret =av_expr_parse_and_eval (& res ,( expr = s -> h_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	25:8	0:0	4	(
water	25:9	0:0	4	ret
op	25:13	0:0	4	=
call	25:15	27:74	4	av_expr_parse_and_eval
arg	25:38	25:42	5	&res
op	25:38	0:0	6	&
water	25:39	0:0	6	res
arg	25:44	25:62	5	(expr=s->h_expr)
water	25:44	0:0	6	(
water	25:45	0:0	6	expr
op	25:50	0:0	6	=
water	25:52	0:0	6	s
op	25:53	0:0	6	->
water	25:55	0:0	6	h_expr
water	25:61	0:0	6	)
arg	26:38	26:47	5	var_names
water	26:38	0:0	6	var_names
arg	26:49	26:59	5	var_values
water	26:49	0:0	6	var_values
arg	27:38	27:42	5	NULL
water	27:38	0:0	6	NULL
arg	27:44	27:48	5	NULL
water	27:44	0:0	6	NULL
arg	27:50	27:54	5	NULL
water	27:50	0:0	6	NULL
arg	27:56	27:60	5	NULL
water	27:56	0:0	6	NULL
arg	27:62	27:66	5	NULL
water	27:62	0:0	6	NULL
arg	27:68	27:69	5	0
water	27:68	0:0	6	0
arg	27:71	27:74	5	ctx
water	27:71	0:0	6	ctx
water	27:75	0:0	4	)
op	27:77	0:0	4	<
water	27:79	0:0	4	0
stmts	28:8	28:22	3	
goto	28:8	28:22	4	eval_fail
water	28:13	0:0	5	eval_fail
water	29:4	0:0	2	s
op	29:5	0:0	2	->
water	29:7	0:0	2	h
op	29:9	0:0	2	=
water	29:11	0:0	2	var_values
op	29:21	0:0	2	[
water	29:22	0:0	2	VAR_OUT_H
op	29:31	0:0	2	]
op	29:33	0:0	2	=
water	29:35	0:0	2	var_values
op	29:45	0:0	2	[
water	29:46	0:0	2	VAR_OH
op	29:52	0:0	2	]
op	29:54	0:0	2	=
water	29:56	0:0	2	res
water	29:59	0:0	2	;
if	31:4	34:22	2	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> w_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	31:8	33:79	3	( ret =av_expr_parse_and_eval (& res ,( expr = s -> w_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	31:8	0:0	4	(
water	31:9	0:0	4	ret
op	31:13	0:0	4	=
call	31:15	33:74	4	av_expr_parse_and_eval
arg	31:38	31:42	5	&res
op	31:38	0:0	6	&
water	31:39	0:0	6	res
arg	31:44	31:62	5	(expr=s->w_expr)
water	31:44	0:0	6	(
water	31:45	0:0	6	expr
op	31:50	0:0	6	=
water	31:52	0:0	6	s
op	31:53	0:0	6	->
water	31:55	0:0	6	w_expr
water	31:61	0:0	6	)
arg	32:38	32:47	5	var_names
water	32:38	0:0	6	var_names
arg	32:49	32:59	5	var_values
water	32:49	0:0	6	var_values
arg	33:38	33:42	5	NULL
water	33:38	0:0	6	NULL
arg	33:44	33:48	5	NULL
water	33:44	0:0	6	NULL
arg	33:50	33:54	5	NULL
water	33:50	0:0	6	NULL
arg	33:56	33:60	5	NULL
water	33:56	0:0	6	NULL
arg	33:62	33:66	5	NULL
water	33:62	0:0	6	NULL
arg	33:68	33:69	5	0
water	33:68	0:0	6	0
arg	33:71	33:74	5	ctx
water	33:71	0:0	6	ctx
water	33:75	0:0	4	)
op	33:77	0:0	4	<
water	33:79	0:0	4	0
stmts	34:8	34:22	3	
goto	34:8	34:22	4	eval_fail
water	34:13	0:0	5	eval_fail
water	35:4	0:0	2	s
op	35:5	0:0	2	->
water	35:7	0:0	2	w
op	35:9	0:0	2	=
water	35:11	0:0	2	var_values
op	35:21	0:0	2	[
water	35:22	0:0	2	VAR_OUT_W
op	35:31	0:0	2	]
op	35:33	0:0	2	=
water	35:35	0:0	2	var_values
op	35:45	0:0	2	[
water	35:46	0:0	2	VAR_OW
op	35:52	0:0	2	]
op	35:54	0:0	2	=
water	35:56	0:0	2	res
water	35:59	0:0	2	;
call	37:4	39:63	2	av_expr_parse_and_eval
arg	37:27	37:31	3	&res
op	37:27	0:0	4	&
water	37:28	0:0	4	res
arg	37:33	37:51	3	(expr=s->x_expr)
water	37:33	0:0	4	(
water	37:34	0:0	4	expr
op	37:39	0:0	4	=
water	37:41	0:0	4	s
op	37:42	0:0	4	->
water	37:44	0:0	4	x_expr
water	37:50	0:0	4	)
arg	38:27	38:36	3	var_names
water	38:27	0:0	4	var_names
arg	38:38	38:48	3	var_values
water	38:38	0:0	4	var_values
arg	39:27	39:31	3	NULL
water	39:27	0:0	4	NULL
arg	39:33	39:37	3	NULL
water	39:33	0:0	4	NULL
arg	39:39	39:43	3	NULL
water	39:39	0:0	4	NULL
arg	39:45	39:49	3	NULL
water	39:45	0:0	4	NULL
arg	39:51	39:55	3	NULL
water	39:51	0:0	4	NULL
arg	39:57	39:58	3	0
water	39:57	0:0	4	0
arg	39:60	39:63	3	ctx
water	39:60	0:0	4	ctx
water	39:64	0:0	2	;
water	40:4	0:0	2	s
op	40:5	0:0	2	->
water	40:7	0:0	2	x
op	40:9	0:0	2	=
water	40:11	0:0	2	var_values
op	40:21	0:0	2	[
water	40:22	0:0	2	VAR_X
op	40:27	0:0	2	]
op	40:29	0:0	2	=
water	40:31	0:0	2	res
water	40:34	0:0	2	;
if	41:4	44:22	2	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> y_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	41:8	43:79	3	( ret =av_expr_parse_and_eval (& res ,( expr = s -> y_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	41:8	0:0	4	(
water	41:9	0:0	4	ret
op	41:13	0:0	4	=
call	41:15	43:74	4	av_expr_parse_and_eval
arg	41:38	41:42	5	&res
op	41:38	0:0	6	&
water	41:39	0:0	6	res
arg	41:44	41:62	5	(expr=s->y_expr)
water	41:44	0:0	6	(
water	41:45	0:0	6	expr
op	41:50	0:0	6	=
water	41:52	0:0	6	s
op	41:53	0:0	6	->
water	41:55	0:0	6	y_expr
water	41:61	0:0	6	)
arg	42:38	42:47	5	var_names
water	42:38	0:0	6	var_names
arg	42:49	42:59	5	var_values
water	42:49	0:0	6	var_values
arg	43:38	43:42	5	NULL
water	43:38	0:0	6	NULL
arg	43:44	43:48	5	NULL
water	43:44	0:0	6	NULL
arg	43:50	43:54	5	NULL
water	43:50	0:0	6	NULL
arg	43:56	43:60	5	NULL
water	43:56	0:0	6	NULL
arg	43:62	43:66	5	NULL
water	43:62	0:0	6	NULL
arg	43:68	43:69	5	0
water	43:68	0:0	6	0
arg	43:71	43:74	5	ctx
water	43:71	0:0	6	ctx
water	43:75	0:0	4	)
op	43:77	0:0	4	<
water	43:79	0:0	4	0
stmts	44:8	44:22	3	
goto	44:8	44:22	4	eval_fail
water	44:13	0:0	5	eval_fail
water	45:4	0:0	2	s
op	45:5	0:0	2	->
water	45:7	0:0	2	y
op	45:9	0:0	2	=
water	45:11	0:0	2	var_values
op	45:21	0:0	2	[
water	45:22	0:0	2	VAR_Y
op	45:27	0:0	2	]
op	45:29	0:0	2	=
water	45:31	0:0	2	res
water	45:34	0:0	2	;
if	47:4	50:22	2	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> x_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	47:8	49:79	3	( ret =av_expr_parse_and_eval (& res ,( expr = s -> x_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	47:8	0:0	4	(
water	47:9	0:0	4	ret
op	47:13	0:0	4	=
call	47:15	49:74	4	av_expr_parse_and_eval
arg	47:38	47:42	5	&res
op	47:38	0:0	6	&
water	47:39	0:0	6	res
arg	47:44	47:62	5	(expr=s->x_expr)
water	47:44	0:0	6	(
water	47:45	0:0	6	expr
op	47:50	0:0	6	=
water	47:52	0:0	6	s
op	47:53	0:0	6	->
water	47:55	0:0	6	x_expr
water	47:61	0:0	6	)
arg	48:38	48:47	5	var_names
water	48:38	0:0	6	var_names
arg	48:49	48:59	5	var_values
water	48:49	0:0	6	var_values
arg	49:38	49:42	5	NULL
water	49:38	0:0	6	NULL
arg	49:44	49:48	5	NULL
water	49:44	0:0	6	NULL
arg	49:50	49:54	5	NULL
water	49:50	0:0	6	NULL
arg	49:56	49:60	5	NULL
water	49:56	0:0	6	NULL
arg	49:62	49:66	5	NULL
water	49:62	0:0	6	NULL
arg	49:68	49:69	5	0
water	49:68	0:0	6	0
arg	49:71	49:74	5	ctx
water	49:71	0:0	6	ctx
water	49:75	0:0	4	)
op	49:77	0:0	4	<
water	49:79	0:0	4	0
stmts	50:8	50:22	3	
goto	50:8	50:22	4	eval_fail
water	50:13	0:0	5	eval_fail
water	51:4	0:0	2	s
op	51:5	0:0	2	->
water	51:7	0:0	2	x
op	51:9	0:0	2	=
water	51:11	0:0	2	var_values
op	51:21	0:0	2	[
water	51:22	0:0	2	VAR_X
op	51:27	0:0	2	]
op	51:29	0:0	2	=
water	51:31	0:0	2	res
water	51:34	0:0	2	;
if	53:4	56:4	2	(s -> w < 0 || s -> h < 0 || s -> x < 0 || s -> y < 0)
cond	53:8	53:51	3	s -> w < 0 || s -> h < 0 || s -> x < 0 || s -> y < 0
water	53:8	0:0	4	s
op	53:9	0:0	4	->
water	53:11	0:0	4	w
op	53:13	0:0	4	<
water	53:15	0:0	4	0
op	53:17	0:0	4	||
water	53:20	0:0	4	s
op	53:21	0:0	4	->
water	53:23	0:0	4	h
op	53:25	0:0	4	<
water	53:27	0:0	4	0
op	53:29	0:0	4	||
water	53:32	0:0	4	s
op	53:33	0:0	4	->
water	53:35	0:0	4	x
op	53:37	0:0	4	<
water	53:39	0:0	4	0
op	53:41	0:0	4	||
water	53:44	0:0	4	s
op	53:45	0:0	4	->
water	53:47	0:0	4	y
op	53:49	0:0	4	<
water	53:51	0:0	4	0
stmts	53:54	56:4	3	
water	53:54	0:0	4	{
call	54:8	54:73	4	av_log
arg	54:15	54:18	5	ctx
water	54:15	0:0	6	ctx
arg	54:20	54:32	5	AV_LOG_ERROR
water	54:20	0:0	6	AV_LOG_ERROR
arg	54:34	54:73	5	"Negative values are not acceptable.\n"
water	54:34	0:0	6	"Negative values are not acceptable.\n"
water	54:74	0:0	4	;
return	55:8	55:30	4	AVERROR(EINVAL)
call	55:15	55:29	5	AVERROR
arg	55:23	55:29	6	EINVAL
water	55:23	0:0	7	EINVAL
water	56:4	0:0	4	}
if	57:4	58:24	2	(! s -> w)
cond	57:8	57:12	3	! s -> w
op	57:8	0:0	4	!
water	57:9	0:0	4	s
op	57:10	0:0	4	->
water	57:12	0:0	4	w
stmts	58:8	58:24	3	
water	58:8	0:0	4	s
op	58:9	0:0	4	->
water	58:11	0:0	4	w
op	58:13	0:0	4	=
water	58:15	0:0	4	inlink
op	58:21	0:0	4	->
water	58:23	0:0	4	w
water	58:24	0:0	4	;
if	59:4	60:24	2	(! s -> h)
cond	59:8	59:12	3	! s -> h
op	59:8	0:0	4	!
water	59:9	0:0	4	s
op	59:10	0:0	4	->
water	59:12	0:0	4	h
stmts	60:8	60:24	3	
water	60:8	0:0	4	s
op	60:9	0:0	4	->
water	60:11	0:0	4	h
op	60:13	0:0	4	=
water	60:15	0:0	4	inlink
op	60:21	0:0	4	->
water	60:23	0:0	4	h
water	60:24	0:0	4	;
water	61:4	0:0	2	s
op	61:5	0:0	2	->
water	61:7	0:0	2	w
op	61:12	0:0	2	=
call	61:14	61:56	2	ff_draw_round_to_sub
arg	61:35	61:43	3	&s->draw
op	61:35	0:0	4	&
water	61:36	0:0	4	s
op	61:37	0:0	4	->
water	61:39	0:0	4	draw
arg	61:45	61:46	3	0
water	61:45	0:0	4	0
arg	61:48	61:50	3	-1
op	61:48	0:0	4	-
water	61:49	0:0	4	1
arg	61:52	61:56	3	s->w
water	61:52	0:0	4	s
op	61:53	0:0	4	->
water	61:55	0:0	4	w
water	61:57	0:0	2	;
water	62:4	0:0	2	s
op	62:5	0:0	2	->
water	62:7	0:0	2	h
op	62:12	0:0	2	=
call	62:14	62:56	2	ff_draw_round_to_sub
arg	62:35	62:43	3	&s->draw
op	62:35	0:0	4	&
water	62:36	0:0	4	s
op	62:37	0:0	4	->
water	62:39	0:0	4	draw
arg	62:45	62:46	3	1
water	62:45	0:0	4	1
arg	62:48	62:50	3	-1
op	62:48	0:0	4	-
water	62:49	0:0	4	1
arg	62:52	62:56	3	s->h
water	62:52	0:0	4	s
op	62:53	0:0	4	->
water	62:55	0:0	4	h
water	62:57	0:0	2	;
water	63:4	0:0	2	s
op	63:5	0:0	2	->
water	63:7	0:0	2	x
op	63:12	0:0	2	=
call	63:14	63:56	2	ff_draw_round_to_sub
arg	63:35	63:43	3	&s->draw
op	63:35	0:0	4	&
water	63:36	0:0	4	s
op	63:37	0:0	4	->
water	63:39	0:0	4	draw
arg	63:45	63:46	3	0
water	63:45	0:0	4	0
arg	63:48	63:50	3	-1
op	63:48	0:0	4	-
water	63:49	0:0	4	1
arg	63:52	63:56	3	s->x
water	63:52	0:0	4	s
op	63:53	0:0	4	->
water	63:55	0:0	4	x
water	63:57	0:0	2	;
water	64:4	0:0	2	s
op	64:5	0:0	2	->
water	64:7	0:0	2	y
op	64:12	0:0	2	=
call	64:14	64:56	2	ff_draw_round_to_sub
arg	64:35	64:43	3	&s->draw
op	64:35	0:0	4	&
water	64:36	0:0	4	s
op	64:37	0:0	4	->
water	64:39	0:0	4	draw
arg	64:45	64:46	3	1
water	64:45	0:0	4	1
arg	64:48	64:50	3	-1
op	64:48	0:0	4	-
water	64:49	0:0	4	1
arg	64:52	64:56	3	s->y
water	64:52	0:0	4	s
op	64:53	0:0	4	->
water	64:55	0:0	4	y
water	64:57	0:0	2	;
water	65:4	0:0	2	s
op	65:5	0:0	2	->
water	65:7	0:0	2	in_w
op	65:12	0:0	2	=
call	65:14	65:61	2	ff_draw_round_to_sub
arg	65:35	65:43	3	&s->draw
op	65:35	0:0	4	&
water	65:36	0:0	4	s
op	65:37	0:0	4	->
water	65:39	0:0	4	draw
arg	65:45	65:46	3	0
water	65:45	0:0	4	0
arg	65:48	65:50	3	-1
op	65:48	0:0	4	-
water	65:49	0:0	4	1
arg	65:52	65:61	3	inlink->w
water	65:52	0:0	4	inlink
op	65:58	0:0	4	->
water	65:60	0:0	4	w
water	65:62	0:0	2	;
water	66:4	0:0	2	s
op	66:5	0:0	2	->
water	66:7	0:0	2	in_h
op	66:12	0:0	2	=
call	66:14	66:61	2	ff_draw_round_to_sub
arg	66:35	66:43	3	&s->draw
op	66:35	0:0	4	&
water	66:36	0:0	4	s
op	66:37	0:0	4	->
water	66:39	0:0	4	draw
arg	66:45	66:46	3	1
water	66:45	0:0	4	1
arg	66:48	66:50	3	-1
op	66:48	0:0	4	-
water	66:49	0:0	4	1
arg	66:52	66:61	3	inlink->h
water	66:52	0:0	4	inlink
op	66:58	0:0	4	->
water	66:60	0:0	4	h
water	66:62	0:0	2	;
call	67:4	69:81	2	av_log
arg	67:11	67:14	3	ctx
water	67:11	0:0	4	ctx
arg	67:16	67:30	3	AV_LOG_VERBOSE
water	67:16	0:0	4	AV_LOG_VERBOSE
arg	67:32	67:93	3	"w:%d h:%d -> w:%d h:%d x:%d y:%d color:0x%02X%02X%02X%02X\n"
water	67:32	0:0	4	"w:%d h:%d -> w:%d h:%d x:%d y:%d color:0x%02X%02X%02X%02X\n"
arg	68:11	68:20	3	inlink->w
water	68:11	0:0	4	inlink
op	68:17	0:0	4	->
water	68:19	0:0	4	w
arg	68:22	68:31	3	inlink->h
water	68:22	0:0	4	inlink
op	68:28	0:0	4	->
water	68:30	0:0	4	h
arg	68:33	68:37	3	s->w
water	68:33	0:0	4	s
op	68:34	0:0	4	->
water	68:36	0:0	4	w
arg	68:39	68:43	3	s->h
water	68:39	0:0	4	s
op	68:40	0:0	4	->
water	68:42	0:0	4	h
arg	68:45	68:49	3	s->x
water	68:45	0:0	4	s
op	68:46	0:0	4	->
water	68:48	0:0	4	x
arg	68:51	68:55	3	s->y
water	68:51	0:0	4	s
op	68:52	0:0	4	->
water	68:54	0:0	4	y
arg	69:11	69:27	3	s->rgba_color[0]
water	69:11	0:0	4	s
op	69:12	0:0	4	->
water	69:14	0:0	4	rgba_color
op	69:24	0:0	4	[
water	69:25	0:0	4	0
op	69:26	0:0	4	]
arg	69:29	69:45	3	s->rgba_color[1]
water	69:29	0:0	4	s
op	69:30	0:0	4	->
water	69:32	0:0	4	rgba_color
op	69:42	0:0	4	[
water	69:43	0:0	4	1
op	69:44	0:0	4	]
arg	69:47	69:63	3	s->rgba_color[2]
water	69:47	0:0	4	s
op	69:48	0:0	4	->
water	69:50	0:0	4	rgba_color
op	69:60	0:0	4	[
water	69:61	0:0	4	2
op	69:62	0:0	4	]
arg	69:65	69:81	3	s->rgba_color[3]
water	69:65	0:0	4	s
op	69:66	0:0	4	->
water	69:68	0:0	4	rgba_color
op	69:78	0:0	4	[
water	69:79	0:0	4	3
op	69:80	0:0	4	]
water	69:82	0:0	2	;
if	70:4	78:4	2	(s -> x < 0 || s -> y < 0 || s -> w <= 0 || s -> h <= 0 || ( unsigned ) s -> x + ( unsigned ) inlink -> w > s -> w || ( unsigned ) s -> y + ( unsigned ) inlink -> h > s -> h)
cond	70:8	73:50	3	s -> x < 0 || s -> y < 0 || s -> w <= 0 || s -> h <= 0 || ( unsigned ) s -> x + ( unsigned ) inlink -> w > s -> w || ( unsigned ) s -> y + ( unsigned ) inlink -> h > s -> h
water	70:8	0:0	4	s
op	70:9	0:0	4	->
water	70:11	0:0	4	x
op	70:13	0:0	4	<
water	70:16	0:0	4	0
op	70:18	0:0	4	||
water	70:21	0:0	4	s
op	70:22	0:0	4	->
water	70:24	0:0	4	y
op	70:26	0:0	4	<
water	70:29	0:0	4	0
op	70:52	0:0	4	||
water	71:8	0:0	4	s
op	71:9	0:0	4	->
water	71:11	0:0	4	w
op	71:13	0:0	4	<=
water	71:16	0:0	4	0
op	71:18	0:0	4	||
water	71:21	0:0	4	s
op	71:22	0:0	4	->
water	71:24	0:0	4	h
op	71:26	0:0	4	<=
water	71:29	0:0	4	0
op	71:52	0:0	4	||
water	72:8	0:0	4	(
water	72:9	0:0	4	unsigned
water	72:17	0:0	4	)
water	72:18	0:0	4	s
op	72:19	0:0	4	->
water	72:21	0:0	4	x
op	72:23	0:0	4	+
water	72:25	0:0	4	(
water	72:26	0:0	4	unsigned
water	72:34	0:0	4	)
water	72:35	0:0	4	inlink
op	72:41	0:0	4	->
water	72:43	0:0	4	w
op	72:45	0:0	4	>
water	72:47	0:0	4	s
op	72:48	0:0	4	->
water	72:50	0:0	4	w
op	72:52	0:0	4	||
water	73:8	0:0	4	(
water	73:9	0:0	4	unsigned
water	73:17	0:0	4	)
water	73:18	0:0	4	s
op	73:19	0:0	4	->
water	73:21	0:0	4	y
op	73:23	0:0	4	+
water	73:25	0:0	4	(
water	73:26	0:0	4	unsigned
water	73:34	0:0	4	)
water	73:35	0:0	4	inlink
op	73:41	0:0	4	->
water	73:43	0:0	4	h
op	73:45	0:0	4	>
water	73:47	0:0	4	s
op	73:48	0:0	4	->
water	73:50	0:0	4	h
stmts	73:53	78:4	3	
water	73:53	0:0	4	{
call	74:8	76:73	4	av_log
arg	74:15	74:18	5	ctx
water	74:15	0:0	6	ctx
arg	74:20	74:32	5	AV_LOG_ERROR
water	74:20	0:0	6	AV_LOG_ERROR
arg	75:15	75:92	5	"Input area %d:%d:%d:%d not within the padded area 0:0:%d:%d or zero-sized\n"
water	75:15	0:0	6	"Input area %d:%d:%d:%d not within the padded area 0:0:%d:%d or zero-sized\n"
arg	76:15	76:19	5	s->x
water	76:15	0:0	6	s
op	76:16	0:0	6	->
water	76:18	0:0	6	x
arg	76:21	76:25	5	s->y
water	76:21	0:0	6	s
op	76:22	0:0	6	->
water	76:24	0:0	6	y
arg	76:27	76:43	5	s->x+inlink->w
water	76:27	0:0	6	s
op	76:28	0:0	6	->
water	76:30	0:0	6	x
op	76:32	0:0	6	+
water	76:34	0:0	6	inlink
op	76:40	0:0	6	->
water	76:42	0:0	6	w
arg	76:45	76:61	5	s->y+inlink->h
water	76:45	0:0	6	s
op	76:46	0:0	6	->
water	76:48	0:0	6	y
op	76:50	0:0	6	+
water	76:52	0:0	6	inlink
op	76:58	0:0	6	->
water	76:60	0:0	6	h
arg	76:63	76:67	5	s->w
water	76:63	0:0	6	s
op	76:64	0:0	6	->
water	76:66	0:0	6	w
arg	76:69	76:73	5	s->h
water	76:69	0:0	6	s
op	76:70	0:0	6	->
water	76:72	0:0	6	h
water	76:74	0:0	4	;
return	77:8	77:30	4	AVERROR(EINVAL)
call	77:15	77:29	5	AVERROR
arg	77:23	77:29	6	EINVAL
water	77:23	0:0	7	EINVAL
water	78:4	0:0	4	}
return	79:4	79:12	2	0
water	79:11	0:0	3	0
label	80:0	80:9	2	eval_fail :
call	81:4	82:62	2	av_log
arg	81:11	81:15	3	NULL
water	81:11	0:0	4	NULL
arg	81:17	81:29	3	AV_LOG_ERROR
water	81:17	0:0	4	AV_LOG_ERROR
arg	82:11	82:56	3	"Error when evaluating the expression '%s'\n"
water	82:11	0:0	4	"Error when evaluating the expression '%s'\n"
arg	82:58	82:62	3	expr
water	82:58	0:0	4	expr
water	82:63	0:0	2	;
return	83:4	83:14	2	ret
water	83:11	0:0	3	ret

func	1:0	16:0	0	static void	do_rematrixing
params	1:26	0:0	1	
param	1:27	1:46	2	AC3DecodeContext *	s
stmnts	0:0	15:4	1	
decl	3:4	3:14	2	int	bnd
water	3:11	0:0	2	,
decl	3:4	3:14	2	int	i
decl	4:4	4:19	2	int	end
water	4:11	0:0	2	,
decl	4:4	4:19	2	int	bndend
water	5:4	0:0	2	end
op	5:8	0:0	2	=
call	5:10	5:46	2	FFMIN
arg	5:16	5:30	3	s->end_freq[1]
water	5:16	0:0	4	s
op	5:17	0:0	4	->
water	5:19	0:0	4	end_freq
op	5:27	0:0	4	[
water	5:28	0:0	4	1
op	5:29	0:0	4	]
arg	5:32	5:46	3	s->end_freq[2]
water	5:32	0:0	4	s
op	5:33	0:0	4	->
water	5:35	0:0	4	end_freq
op	5:43	0:0	4	[
water	5:44	0:0	4	2
op	5:45	0:0	4	]
water	5:47	0:0	2	;
for	6:4	15:4	2	(bnd = 0 ;bnd < s -> num_rematrixing_bands;bnd ++)
forinit	6:9	6:16	3	bnd = 0 ;
water	6:9	0:0	4	bnd
op	6:13	0:0	4	=
water	6:15	0:0	4	0
water	6:16	0:0	4	;
cond	6:18	6:27	3	bnd < s -> num_rematrixing_bands
water	6:18	0:0	4	bnd
op	6:22	0:0	4	<
water	6:24	0:0	4	s
op	6:25	0:0	4	->
water	6:27	0:0	4	num_rematrixing_bands
forexpr	6:50	6:53	3	bnd ++
water	6:50	0:0	4	bnd
op	6:53	0:0	4	++
stmts	6:57	15:4	3	
water	6:57	0:0	4	{
if	7:8	14:8	4	(s -> rematrixing_flags [ bnd ])
cond	7:12	7:36	5	s -> rematrixing_flags [ bnd ]
water	7:12	0:0	6	s
op	7:13	0:0	6	->
water	7:15	0:0	6	rematrixing_flags
op	7:32	0:0	6	[
water	7:33	0:0	6	bnd
op	7:36	0:0	6	]
stmts	7:39	14:8	5	
water	7:39	0:0	6	{
water	8:12	0:0	6	bndend
op	8:19	0:0	6	=
call	8:21	8:65	6	FFMIN
arg	8:27	8:30	7	end
water	8:27	0:0	8	end
arg	8:32	8:65	7	ff_ac3_rematrix_band_tab[bnd+1]
water	8:32	0:0	8	ff_ac3_rematrix_band_tab
op	8:56	0:0	8	[
water	8:57	0:0	8	bnd
op	8:61	0:0	8	+
water	8:63	0:0	8	1
op	8:64	0:0	8	]
water	8:66	0:0	6	;
for	9:12	13:12	6	(i = ff_ac3_rematrix_band_tab [ bnd ] ;i < bndend;i ++)
forinit	9:17	9:50	7	i = ff_ac3_rematrix_band_tab [ bnd ] ;
water	9:17	0:0	8	i
op	9:19	0:0	8	=
water	9:21	0:0	8	ff_ac3_rematrix_band_tab
op	9:45	0:0	8	[
water	9:46	0:0	8	bnd
op	9:49	0:0	8	]
water	9:50	0:0	8	;
cond	9:52	9:56	7	i < bndend
water	9:52	0:0	8	i
op	9:54	0:0	8	<
water	9:56	0:0	8	bndend
forexpr	9:64	9:65	7	i ++
water	9:64	0:0	8	i
op	9:65	0:0	8	++
stmts	9:69	13:12	7	
water	9:69	0:0	8	{
decl	10:16	10:48	8	int	tmp0
op	10:25	0:0	8	=
water	10:27	0:0	8	s
op	10:28	0:0	8	->
water	10:30	0:0	8	fixed_coeffs
op	10:42	0:0	8	[
water	10:43	0:0	8	1
op	10:44	0:0	8	]
op	10:45	0:0	8	[
water	10:46	0:0	8	i
op	10:47	0:0	8	]
water	11:16	0:0	8	s
op	11:17	0:0	8	->
water	11:19	0:0	8	fixed_coeffs
op	11:31	0:0	8	[
water	11:32	0:0	8	1
op	11:33	0:0	8	]
op	11:34	0:0	8	[
water	11:35	0:0	8	i
op	11:36	0:0	8	]
op	11:38	0:0	8	+=
water	11:41	0:0	8	s
op	11:42	0:0	8	->
water	11:44	0:0	8	fixed_coeffs
op	11:56	0:0	8	[
water	11:57	0:0	8	2
op	11:58	0:0	8	]
op	11:59	0:0	8	[
water	11:60	0:0	8	i
op	11:61	0:0	8	]
water	11:62	0:0	8	;
water	12:16	0:0	8	s
op	12:17	0:0	8	->
water	12:19	0:0	8	fixed_coeffs
op	12:31	0:0	8	[
water	12:32	0:0	8	2
op	12:33	0:0	8	]
op	12:34	0:0	8	[
water	12:35	0:0	8	i
op	12:36	0:0	8	]
op	12:39	0:0	8	=
water	12:41	0:0	8	tmp0
op	12:46	0:0	8	-
water	12:48	0:0	8	s
op	12:49	0:0	8	->
water	12:51	0:0	8	fixed_coeffs
op	12:63	0:0	8	[
water	12:64	0:0	8	2
op	12:65	0:0	8	]
op	12:66	0:0	8	[
water	12:67	0:0	8	i
op	12:68	0:0	8	]
water	12:69	0:0	8	;
water	13:12	0:0	8	}
water	14:8	0:0	6	}
water	15:4	0:0	4	}

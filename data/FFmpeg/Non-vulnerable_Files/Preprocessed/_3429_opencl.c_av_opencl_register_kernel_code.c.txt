func	1:0	26:0	0	int	av_opencl_register_kernel_code
params	1:34	0:0	1	
param	1:35	1:58	2	const char *	kernel_code
stmnts	0:0	25:14	1	
decl	3:4	3:35	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:35	2	int	ret
op	3:15	0:0	2	=
call	3:17	3:34	3	init_opencl_mtx
if	4:4	5:18	2	(ret < 0)
cond	4:8	4:14	3	ret < 0
water	4:8	0:0	4	ret
op	4:12	0:0	4	<
water	4:14	0:0	4	0
stmts	5:8	5:18	3	
return	5:8	5:18	4	ret
water	5:15	0:0	5	ret
water	6:4	0:0	2	LOCK_OPENCL
water	6:15	0:0	2	;
if	7:4	13:4	2	(opencl_ctx . kernel_code_count >= MAX_KERNEL_CODE_NUM)
cond	7:8	7:40	3	opencl_ctx . kernel_code_count >= MAX_KERNEL_CODE_NUM
water	7:8	0:0	4	opencl_ctx
op	7:18	0:0	4	.
water	7:19	0:0	4	kernel_code_count
op	7:37	0:0	4	>=
water	7:40	0:0	4	MAX_KERNEL_CODE_NUM
stmts	7:61	13:4	3	
water	7:61	0:0	4	{
call	8:8	10:34	4	av_log
arg	8:15	8:26	5	&opencl_ctx
op	8:15	0:0	6	&
water	8:16	0:0	6	opencl_ctx
arg	8:28	8:40	5	AV_LOG_ERROR
water	8:28	0:0	6	AV_LOG_ERROR
arg	9:15	9:110	5	"Could not register kernel code, maximum number of registered kernel code %d already reached\n"
water	9:15	0:0	6	"Could not register kernel code, maximum number of registered kernel code %d already reached\n"
arg	10:15	10:34	5	MAX_KERNEL_CODE_NUM
water	10:15	0:0	6	MAX_KERNEL_CODE_NUM
water	10:35	0:0	4	;
water	11:8	0:0	4	ret
op	11:12	0:0	4	=
call	11:14	11:28	4	AVERROR
arg	11:22	11:28	5	EINVAL
water	11:22	0:0	6	EINVAL
water	11:29	0:0	4	;
goto	12:8	12:16	4	end
water	12:13	0:0	5	end
water	13:4	0:0	4	}
for	14:4	19:4	2	(i = 0 ;i < opencl_ctx . kernel_code_count;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:31	3	i < opencl_ctx . kernel_code_count
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	opencl_ctx
op	14:30	0:0	4	.
water	14:31	0:0	4	kernel_code_count
forexpr	14:50	14:51	3	i ++
water	14:50	0:0	4	i
op	14:51	0:0	4	++
stmts	14:55	19:4	3	
water	14:55	0:0	4	{
if	15:8	18:8	4	(opencl_ctx . kernel_code [ i ] . kernel_string == kernel_code)
cond	15:12	15:55	5	opencl_ctx . kernel_code [ i ] . kernel_string == kernel_code
water	15:12	0:0	6	opencl_ctx
op	15:22	0:0	6	.
water	15:23	0:0	6	kernel_code
op	15:34	0:0	6	[
water	15:35	0:0	6	i
op	15:36	0:0	6	]
op	15:37	0:0	6	.
water	15:38	0:0	6	kernel_string
op	15:52	0:0	6	==
water	15:55	0:0	6	kernel_code
stmts	15:68	18:8	5	
water	15:68	0:0	6	{
call	16:12	16:88	6	av_log
arg	16:19	16:30	7	&opencl_ctx
op	16:19	0:0	8	&
water	16:20	0:0	8	opencl_ctx
arg	16:32	16:46	7	AV_LOG_WARNING
water	16:32	0:0	8	AV_LOG_WARNING
arg	16:48	16:88	7	"Same kernel code has been registered\n"
water	16:48	0:0	8	"Same kernel code has been registered\n"
water	16:89	0:0	6	;
goto	17:12	17:20	6	end
water	17:17	0:0	7	end
water	18:8	0:0	6	}
water	19:4	0:0	4	}
water	20:4	0:0	2	opencl_ctx
op	20:14	0:0	2	.
water	20:15	0:0	2	kernel_code
op	20:26	0:0	2	[
water	20:27	0:0	2	opencl_ctx
op	20:37	0:0	2	.
water	20:38	0:0	2	kernel_code_count
op	20:55	0:0	2	]
op	20:56	0:0	2	.
water	20:57	0:0	2	kernel_string
op	20:71	0:0	2	=
water	20:73	0:0	2	kernel_code
water	20:84	0:0	2	;
water	21:4	0:0	2	opencl_ctx
op	21:14	0:0	2	.
water	21:15	0:0	2	kernel_code
op	21:26	0:0	2	[
water	21:27	0:0	2	opencl_ctx
op	21:37	0:0	2	.
water	21:38	0:0	2	kernel_code_count
op	21:55	0:0	2	]
op	21:56	0:0	2	.
water	21:57	0:0	2	is_compiled
op	21:69	0:0	2	=
water	21:71	0:0	2	0
water	21:72	0:0	2	;
water	22:4	0:0	2	opencl_ctx
op	22:14	0:0	2	.
water	22:15	0:0	2	kernel_code_count
op	22:32	0:0	2	++
water	22:34	0:0	2	;
label	23:0	23:3	2	end :
water	24:4	0:0	2	UNLOCK_OPENCL
water	24:17	0:0	2	;
return	25:4	25:14	2	ret
water	25:11	0:0	3	ret

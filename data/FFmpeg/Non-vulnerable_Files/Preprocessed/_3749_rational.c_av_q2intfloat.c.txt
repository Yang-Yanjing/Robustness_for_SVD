func	1:0	26:0	0	uint32_t	av_q2intfloat
params	1:22	0:0	1	
param	1:23	1:35	2	AVRational	q
stmnts	0:0	25:53	1	
decl	2:4	2:13	2	int64_t	n
decl	3:4	3:13	2	int	shift
decl	4:4	4:16	2	int	sign
op	4:13	0:0	2	=
water	4:15	0:0	2	0
if	5:4	8:4	2	(q . den < 0)
cond	5:8	5:16	3	q . den < 0
water	5:8	0:0	4	q
op	5:9	0:0	4	.
water	5:10	0:0	4	den
op	5:14	0:0	4	<
water	5:16	0:0	4	0
stmts	5:19	8:4	3	
water	5:19	0:0	4	{
water	6:8	0:0	4	q
op	6:9	0:0	4	.
water	6:10	0:0	4	den
op	6:14	0:0	4	*=
op	6:17	0:0	4	-
water	6:18	0:0	4	1
water	6:19	0:0	4	;
water	7:8	0:0	4	q
op	7:9	0:0	4	.
water	7:10	0:0	4	num
op	7:14	0:0	4	*=
op	7:17	0:0	4	-
water	7:18	0:0	4	1
water	7:19	0:0	4	;
water	8:4	0:0	4	}
if	9:4	12:4	2	(q . num < 0)
cond	9:8	9:16	3	q . num < 0
water	9:8	0:0	4	q
op	9:9	0:0	4	.
water	9:10	0:0	4	num
op	9:14	0:0	4	<
water	9:16	0:0	4	0
stmts	9:19	12:4	3	
water	9:19	0:0	4	{
water	10:8	0:0	4	q
op	10:9	0:0	4	.
water	10:10	0:0	4	num
op	10:14	0:0	4	*=
op	10:17	0:0	4	-
water	10:18	0:0	4	1
water	10:19	0:0	4	;
water	11:8	0:0	4	sign
op	11:13	0:0	4	=
water	11:15	0:0	4	1
water	11:16	0:0	4	;
water	12:4	0:0	4	}
if	13:4	13:43	2	(! q . num && ! q . den)
cond	13:8	13:21	3	! q . num && ! q . den
op	13:8	0:0	4	!
water	13:9	0:0	4	q
op	13:10	0:0	4	.
water	13:11	0:0	4	num
op	13:15	0:0	4	&&
op	13:18	0:0	4	!
water	13:19	0:0	4	q
op	13:20	0:0	4	.
water	13:21	0:0	4	den
stmts	13:26	13:43	3	
return	13:26	13:43	4	0xFFC00000
water	13:33	0:0	5	0
water	13:34	0:0	5	xFFC00000
if	14:4	14:24	2	(! q . num)
cond	14:8	14:11	3	! q . num
op	14:8	0:0	4	!
water	14:9	0:0	4	q
op	14:10	0:0	4	.
water	14:11	0:0	4	num
stmts	14:16	14:24	3	
return	14:16	14:24	4	0
water	14:23	0:0	5	0
if	15:4	15:56	2	(! q . den)
cond	15:8	15:11	3	! q . den
op	15:8	0:0	4	!
water	15:9	0:0	4	q
op	15:10	0:0	4	.
water	15:11	0:0	4	den
stmts	15:16	15:56	3	
return	15:16	15:56	4	0x7F800000|(q.num&0x80000000)
water	15:23	0:0	5	0
water	15:24	0:0	5	x7F800000
op	15:34	0:0	5	|
water	15:36	0:0	5	(
water	15:37	0:0	5	q
op	15:38	0:0	5	.
water	15:39	0:0	5	num
op	15:43	0:0	5	&
water	15:45	0:0	5	0
water	15:46	0:0	5	x80000000
water	15:55	0:0	5	)
water	16:4	0:0	2	shift
op	16:10	0:0	2	=
water	16:12	0:0	2	23
op	16:15	0:0	2	+
call	16:17	16:30	2	av_log2
arg	16:25	16:30	3	q.den
water	16:25	0:0	4	q
op	16:26	0:0	4	.
water	16:27	0:0	4	den
op	16:32	0:0	2	-
call	16:34	16:47	2	av_log2
arg	16:42	16:47	3	q.num
water	16:42	0:0	4	q
op	16:43	0:0	4	.
water	16:44	0:0	4	num
water	16:48	0:0	2	;
if	17:4	17:60	2	(shift >= 0)
cond	17:8	17:17	3	shift >= 0
water	17:8	0:0	4	shift
op	17:14	0:0	4	>=
water	17:17	0:0	4	0
stmts	17:20	17:60	3	
water	17:20	0:0	4	n
op	17:22	0:0	4	=
call	17:24	17:59	4	av_rescale
arg	17:35	17:40	5	q.num
water	17:35	0:0	6	q
op	17:36	0:0	6	.
water	17:37	0:0	6	num
arg	17:42	17:52	5	1LL<<shift
water	17:42	0:0	6	1
water	17:43	0:0	6	LL
op	17:45	0:0	6	<<
water	17:47	0:0	6	shift
arg	17:54	17:59	5	q.den
water	17:54	0:0	6	q
op	17:55	0:0	6	.
water	17:56	0:0	6	den
water	17:60	0:0	4	;
else	18:4	18:72	2
stmts	18:20	18:72	3	
water	18:20	0:0	4	n
op	18:22	0:0	4	=
call	18:24	18:71	4	av_rescale
arg	18:35	18:40	5	q.num
water	18:35	0:0	6	q
op	18:36	0:0	6	.
water	18:37	0:0	6	num
arg	18:42	18:43	5	1
water	18:42	0:0	6	1
arg	18:45	18:71	5	((int64_t)q.den)<<-shift
water	18:45	0:0	6	(
water	18:46	0:0	6	(
water	18:47	0:0	6	int64_t
water	18:54	0:0	6	)
water	18:55	0:0	6	q
op	18:56	0:0	6	.
water	18:57	0:0	6	den
water	18:60	0:0	6	)
op	18:62	0:0	6	<<
op	18:65	0:0	6	-
water	18:66	0:0	6	shift
water	18:72	0:0	4	;
water	19:4	0:0	2	shift
op	19:10	0:0	2	-=
water	19:13	0:0	2	n
op	19:15	0:0	2	>=
water	19:18	0:0	2	(
water	19:19	0:0	2	1
op	19:20	0:0	2	<<
water	19:22	0:0	2	24
water	19:24	0:0	2	)
water	19:25	0:0	2	;
water	20:4	0:0	2	shift
op	20:10	0:0	2	+=
water	20:13	0:0	2	n
op	20:15	0:0	2	<
water	20:18	0:0	2	(
water	20:19	0:0	2	1
op	20:20	0:0	2	<<
water	20:22	0:0	2	23
water	20:24	0:0	2	)
water	20:25	0:0	2	;
if	21:4	21:60	2	(shift >= 0)
cond	21:8	21:17	3	shift >= 0
water	21:8	0:0	4	shift
op	21:14	0:0	4	>=
water	21:17	0:0	4	0
stmts	21:20	21:60	3	
water	21:20	0:0	4	n
op	21:22	0:0	4	=
call	21:24	21:59	4	av_rescale
arg	21:35	21:40	5	q.num
water	21:35	0:0	6	q
op	21:36	0:0	6	.
water	21:37	0:0	6	num
arg	21:42	21:52	5	1LL<<shift
water	21:42	0:0	6	1
water	21:43	0:0	6	LL
op	21:45	0:0	6	<<
water	21:47	0:0	6	shift
arg	21:54	21:59	5	q.den
water	21:54	0:0	6	q
op	21:55	0:0	6	.
water	21:56	0:0	6	den
water	21:60	0:0	4	;
else	22:4	22:72	2
stmts	22:20	22:72	3	
water	22:20	0:0	4	n
op	22:22	0:0	4	=
call	22:24	22:71	4	av_rescale
arg	22:35	22:40	5	q.num
water	22:35	0:0	6	q
op	22:36	0:0	6	.
water	22:37	0:0	6	num
arg	22:42	22:43	5	1
water	22:42	0:0	6	1
arg	22:45	22:71	5	((int64_t)q.den)<<-shift
water	22:45	0:0	6	(
water	22:46	0:0	6	(
water	22:47	0:0	6	int64_t
water	22:54	0:0	6	)
water	22:55	0:0	6	q
op	22:56	0:0	6	.
water	22:57	0:0	6	den
water	22:60	0:0	6	)
op	22:62	0:0	6	<<
op	22:65	0:0	6	-
water	22:66	0:0	6	shift
water	22:72	0:0	4	;
call	23:4	23:27	2	av_assert1
arg	23:15	23:27	3	n<(1<<24)
water	23:15	0:0	4	n
op	23:17	0:0	4	<
water	23:20	0:0	4	(
water	23:21	0:0	4	1
op	23:22	0:0	4	<<
water	23:24	0:0	4	24
water	23:26	0:0	4	)
water	23:28	0:0	2	;
call	24:4	24:27	2	av_assert1
arg	24:15	24:27	3	n>=(1<<23)
water	24:15	0:0	4	n
op	24:17	0:0	4	>=
water	24:20	0:0	4	(
water	24:21	0:0	4	1
op	24:22	0:0	4	<<
water	24:24	0:0	4	23
water	24:26	0:0	4	)
water	24:28	0:0	2	;
return	25:4	25:53	2	sign<<31|(150-shift)<<23|(n-(1<<23))
water	25:11	0:0	3	sign
op	25:15	0:0	3	<<
water	25:17	0:0	3	31
op	25:20	0:0	3	|
water	25:22	0:0	3	(
water	25:23	0:0	3	150
op	25:26	0:0	3	-
water	25:27	0:0	3	shift
water	25:32	0:0	3	)
op	25:33	0:0	3	<<
water	25:35	0:0	3	23
op	25:38	0:0	3	|
water	25:40	0:0	3	(
water	25:41	0:0	3	n
op	25:43	0:0	3	-
water	25:45	0:0	3	(
water	25:46	0:0	3	1
op	25:47	0:0	3	<<
water	25:49	0:0	3	23
water	25:51	0:0	3	)
water	25:52	0:0	3	)

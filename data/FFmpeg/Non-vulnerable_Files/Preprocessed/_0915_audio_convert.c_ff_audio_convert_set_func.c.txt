func	1:0	62:0	0	void	ff_audio_convert_set_func
params	1:30	0:0	1	
param	1:31	1:47	2	AudioConvert *	ac
param	1:49	1:76	2	enum AVSampleFormat	out_fmt
param	2:31	2:57	2	enum AVSampleFormat	in_fmt
param	2:59	2:71	2	int	channels
param	3:31	3:44	2	int	ptr_align
param	3:46	3:63	2	int	samples_align
param	4:31	4:48	2	const char *	descr
param	4:50	4:60	2	void *	conv
stmnts	0:0	61:4	1	
decl	6:4	6:17	2	int	found
op	6:14	0:0	2	=
water	6:16	0:0	2	0
switch	7:4	56:4	2	(ac -> func_type)
cond	7:12	7:16	3	ac -> func_type
water	7:12	0:0	4	ac
op	7:14	0:0	4	->
water	7:16	0:0	4	func_type
stmts	7:27	56:4	3	
water	7:27	0:0	4	{
label	8:4	8:28	4	case CONV_FUNC_TYPE_FLAT :
if	9:8	22:8	4	(av_get_packed_sample_fmt (ac -> in_fmt ) == in_fmt &&av_get_packed_sample_fmt (ac -> out_fmt ) == out_fmt)
cond	9:12	10:53	5	av_get_packed_sample_fmt (ac -> in_fmt ) == in_fmt &&av_get_packed_sample_fmt (ac -> out_fmt ) == out_fmt
call	9:12	9:47	6	av_get_packed_sample_fmt
arg	9:37	9:47	7	ac->in_fmt
water	9:37	0:0	8	ac
op	9:39	0:0	8	->
water	9:41	0:0	8	in_fmt
op	9:50	0:0	6	==
water	9:53	0:0	6	in_fmt
op	9:60	0:0	6	&&
call	10:12	10:48	6	av_get_packed_sample_fmt
arg	10:37	10:48	7	ac->out_fmt
water	10:37	0:0	8	ac
op	10:39	0:0	8	->
water	10:41	0:0	8	out_fmt
op	10:50	0:0	6	==
water	10:53	0:0	6	out_fmt
stmts	10:62	22:8	5	
water	10:62	0:0	6	{
water	11:12	0:0	6	ac
op	11:14	0:0	6	->
water	11:16	0:0	6	conv_flat
op	11:30	0:0	6	=
water	11:32	0:0	6	conv
water	11:36	0:0	6	;
water	12:12	0:0	6	ac
op	12:14	0:0	6	->
water	12:16	0:0	6	func_descr
op	12:30	0:0	6	=
water	12:32	0:0	6	descr
water	12:37	0:0	6	;
water	13:12	0:0	6	ac
op	13:14	0:0	6	->
water	13:16	0:0	6	ptr_align
op	13:30	0:0	6	=
water	13:32	0:0	6	ptr_align
water	13:41	0:0	6	;
water	14:12	0:0	6	ac
op	14:14	0:0	6	->
water	14:16	0:0	6	samples_align
op	14:30	0:0	6	=
water	14:32	0:0	6	samples_align
water	14:45	0:0	6	;
if	15:12	18:12	6	(ptr_align == 1 && samples_align == 1)
cond	15:16	15:51	7	ptr_align == 1 && samples_align == 1
water	15:16	0:0	8	ptr_align
op	15:26	0:0	8	==
water	15:29	0:0	8	1
op	15:31	0:0	8	&&
water	15:34	0:0	8	samples_align
op	15:48	0:0	8	==
water	15:51	0:0	8	1
stmts	15:54	18:12	7	
water	15:54	0:0	8	{
water	16:16	0:0	8	ac
op	16:18	0:0	8	->
water	16:20	0:0	8	conv_flat_generic
op	16:39	0:0	8	=
water	16:41	0:0	8	conv
water	16:45	0:0	8	;
water	17:16	0:0	8	ac
op	17:18	0:0	8	->
water	17:20	0:0	8	func_descr_generic
op	17:39	0:0	8	=
water	17:41	0:0	8	descr
water	17:46	0:0	8	;
water	18:12	0:0	8	}
else	18:14	20:12	6
stmts	18:19	20:12	7	
water	18:19	0:0	8	{
water	19:16	0:0	8	ac
op	19:18	0:0	8	->
water	19:20	0:0	8	has_optimized_func
op	19:39	0:0	8	=
water	19:41	0:0	8	1
water	19:42	0:0	8	;
water	20:12	0:0	8	}
water	21:12	0:0	6	found
op	21:18	0:0	6	=
water	21:20	0:0	6	1
water	21:21	0:0	6	;
water	22:8	0:0	6	}
break	23:8	23:13	4	
label	24:4	24:34	4	case CONV_FUNC_TYPE_INTERLEAVE :
if	25:8	38:8	4	(ac -> in_fmt == in_fmt && ac -> out_fmt == out_fmt && ( ! channels || ac -> channels == channels ))
cond	25:12	26:50	5	ac -> in_fmt == in_fmt && ac -> out_fmt == out_fmt && ( ! channels || ac -> channels == channels )
water	25:12	0:0	6	ac
op	25:14	0:0	6	->
water	25:16	0:0	6	in_fmt
op	25:23	0:0	6	==
water	25:26	0:0	6	in_fmt
op	25:33	0:0	6	&&
water	25:36	0:0	6	ac
op	25:38	0:0	6	->
water	25:40	0:0	6	out_fmt
op	25:48	0:0	6	==
water	25:51	0:0	6	out_fmt
op	25:59	0:0	6	&&
water	26:12	0:0	6	(
op	26:13	0:0	6	!
water	26:14	0:0	6	channels
op	26:23	0:0	6	||
water	26:26	0:0	6	ac
op	26:28	0:0	6	->
water	26:30	0:0	6	channels
op	26:39	0:0	6	==
water	26:42	0:0	6	channels
water	26:50	0:0	6	)
stmts	26:53	38:8	5	
water	26:53	0:0	6	{
water	27:12	0:0	6	ac
op	27:14	0:0	6	->
water	27:16	0:0	6	conv_interleave
op	27:32	0:0	6	=
water	27:34	0:0	6	conv
water	27:38	0:0	6	;
water	28:12	0:0	6	ac
op	28:14	0:0	6	->
water	28:16	0:0	6	func_descr
op	28:32	0:0	6	=
water	28:34	0:0	6	descr
water	28:39	0:0	6	;
water	29:12	0:0	6	ac
op	29:14	0:0	6	->
water	29:16	0:0	6	ptr_align
op	29:32	0:0	6	=
water	29:34	0:0	6	ptr_align
water	29:43	0:0	6	;
water	30:12	0:0	6	ac
op	30:14	0:0	6	->
water	30:16	0:0	6	samples_align
op	30:32	0:0	6	=
water	30:34	0:0	6	samples_align
water	30:47	0:0	6	;
if	31:12	34:12	6	(ptr_align == 1 && samples_align == 1)
cond	31:16	31:51	7	ptr_align == 1 && samples_align == 1
water	31:16	0:0	8	ptr_align
op	31:26	0:0	8	==
water	31:29	0:0	8	1
op	31:31	0:0	8	&&
water	31:34	0:0	8	samples_align
op	31:48	0:0	8	==
water	31:51	0:0	8	1
stmts	31:54	34:12	7	
water	31:54	0:0	8	{
water	32:16	0:0	8	ac
op	32:18	0:0	8	->
water	32:20	0:0	8	conv_interleave_generic
op	32:44	0:0	8	=
water	32:46	0:0	8	conv
water	32:50	0:0	8	;
water	33:16	0:0	8	ac
op	33:18	0:0	8	->
water	33:20	0:0	8	func_descr_generic
op	33:44	0:0	8	=
water	33:46	0:0	8	descr
water	33:51	0:0	8	;
water	34:12	0:0	8	}
else	34:14	36:12	6
stmts	34:19	36:12	7	
water	34:19	0:0	8	{
water	35:16	0:0	8	ac
op	35:18	0:0	8	->
water	35:20	0:0	8	has_optimized_func
op	35:39	0:0	8	=
water	35:41	0:0	8	1
water	35:42	0:0	8	;
water	36:12	0:0	8	}
water	37:12	0:0	6	found
op	37:18	0:0	6	=
water	37:20	0:0	6	1
water	37:21	0:0	6	;
water	38:8	0:0	6	}
break	39:8	39:13	4	
label	40:4	40:36	4	case CONV_FUNC_TYPE_DEINTERLEAVE :
if	41:8	54:8	4	(ac -> in_fmt == in_fmt && ac -> out_fmt == out_fmt && ( ! channels || ac -> channels == channels ))
cond	41:12	42:50	5	ac -> in_fmt == in_fmt && ac -> out_fmt == out_fmt && ( ! channels || ac -> channels == channels )
water	41:12	0:0	6	ac
op	41:14	0:0	6	->
water	41:16	0:0	6	in_fmt
op	41:23	0:0	6	==
water	41:26	0:0	6	in_fmt
op	41:33	0:0	6	&&
water	41:36	0:0	6	ac
op	41:38	0:0	6	->
water	41:40	0:0	6	out_fmt
op	41:48	0:0	6	==
water	41:51	0:0	6	out_fmt
op	41:59	0:0	6	&&
water	42:12	0:0	6	(
op	42:13	0:0	6	!
water	42:14	0:0	6	channels
op	42:23	0:0	6	||
water	42:26	0:0	6	ac
op	42:28	0:0	6	->
water	42:30	0:0	6	channels
op	42:39	0:0	6	==
water	42:42	0:0	6	channels
water	42:50	0:0	6	)
stmts	42:53	54:8	5	
water	42:53	0:0	6	{
water	43:12	0:0	6	ac
op	43:14	0:0	6	->
water	43:16	0:0	6	conv_deinterleave
op	43:34	0:0	6	=
water	43:36	0:0	6	conv
water	43:40	0:0	6	;
water	44:12	0:0	6	ac
op	44:14	0:0	6	->
water	44:16	0:0	6	func_descr
op	44:34	0:0	6	=
water	44:36	0:0	6	descr
water	44:41	0:0	6	;
water	45:12	0:0	6	ac
op	45:14	0:0	6	->
water	45:16	0:0	6	ptr_align
op	45:34	0:0	6	=
water	45:36	0:0	6	ptr_align
water	45:45	0:0	6	;
water	46:12	0:0	6	ac
op	46:14	0:0	6	->
water	46:16	0:0	6	samples_align
op	46:34	0:0	6	=
water	46:36	0:0	6	samples_align
water	46:49	0:0	6	;
if	47:12	50:12	6	(ptr_align == 1 && samples_align == 1)
cond	47:16	47:51	7	ptr_align == 1 && samples_align == 1
water	47:16	0:0	8	ptr_align
op	47:26	0:0	8	==
water	47:29	0:0	8	1
op	47:31	0:0	8	&&
water	47:34	0:0	8	samples_align
op	47:48	0:0	8	==
water	47:51	0:0	8	1
stmts	47:54	50:12	7	
water	47:54	0:0	8	{
water	48:16	0:0	8	ac
op	48:18	0:0	8	->
water	48:20	0:0	8	conv_deinterleave_generic
op	48:46	0:0	8	=
water	48:48	0:0	8	conv
water	48:52	0:0	8	;
water	49:16	0:0	8	ac
op	49:18	0:0	8	->
water	49:20	0:0	8	func_descr_generic
op	49:46	0:0	8	=
water	49:48	0:0	8	descr
water	49:53	0:0	8	;
water	50:12	0:0	8	}
else	50:14	52:12	6
stmts	50:19	52:12	7	
water	50:19	0:0	8	{
water	51:16	0:0	8	ac
op	51:18	0:0	8	->
water	51:20	0:0	8	has_optimized_func
op	51:39	0:0	8	=
water	51:41	0:0	8	1
water	51:42	0:0	8	;
water	52:12	0:0	8	}
water	53:12	0:0	6	found
op	53:18	0:0	6	=
water	53:20	0:0	6	1
water	53:21	0:0	6	;
water	54:8	0:0	6	}
break	55:8	55:13	4	
water	56:4	0:0	4	}
if	57:4	61:4	2	(found)
cond	57:8	57:8	3	found
water	57:8	0:0	4	found
stmts	57:15	61:4	3	
water	57:15	0:0	4	{
call	58:8	60:57	4	av_log
arg	58:15	58:22	5	ac->avr
water	58:15	0:0	6	ac
op	58:17	0:0	6	->
water	58:19	0:0	6	avr
arg	58:24	58:36	5	AV_LOG_DEBUG
water	58:24	0:0	6	AV_LOG_DEBUG
arg	58:38	59:31	5	"audio_convert: found function: %-4s ""to %-4s (%s)\n"
water	58:38	0:0	6	"audio_convert: found function: %-4s "
water	59:15	0:0	6	"to %-4s (%s)\n"
arg	59:33	59:67	5	av_get_sample_fmt_name(ac->in_fmt)
call	59:33	59:66	6	av_get_sample_fmt_name
arg	59:56	59:66	7	ac->in_fmt
water	59:56	0:0	8	ac
op	59:58	0:0	8	->
water	59:60	0:0	8	in_fmt
arg	60:15	60:50	5	av_get_sample_fmt_name(ac->out_fmt)
call	60:15	60:49	6	av_get_sample_fmt_name
arg	60:38	60:49	7	ac->out_fmt
water	60:38	0:0	8	ac
op	60:40	0:0	8	->
water	60:42	0:0	8	out_fmt
arg	60:52	60:57	5	descr
water	60:52	0:0	6	descr
water	60:58	0:0	4	;
water	61:4	0:0	4	}

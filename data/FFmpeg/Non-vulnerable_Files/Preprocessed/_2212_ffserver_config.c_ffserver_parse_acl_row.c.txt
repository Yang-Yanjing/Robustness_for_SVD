func	1:0	61:0	0	void	ffserver_parse_acl_row
params	1:27	0:0	1	
param	1:28	1:50	2	FFServerStream *	stream
param	1:52	1:72	2	FFServerStream *	feed
param	2:28	2:57	2	FFServerIPAddressACL *	ext_acl
param	3:28	3:41	2	const char *	p
param	3:43	3:63	2	const char *	filename
param	3:65	3:77	2	int	line_num
stmnts	0:0	60:8	1	
decl	5:4	5:18	2	char	arg[1024]
decl	6:4	6:28	2	FFServerIPAddressACL	acl
decl	7:4	7:30	2	FFServerIPAddressACL	*nacl
decl	8:4	8:32	2	FFServerIPAddressACL	**naclp
call	9:4	9:41	2	ffserver_get_arg
arg	9:21	9:24	3	arg
water	9:21	0:0	4	arg
arg	9:26	9:37	3	sizeof(arg)
op	9:26	0:0	4	sizeof
water	9:32	0:0	4	(
water	9:33	0:0	4	arg
water	9:36	0:0	4	)
arg	9:39	9:41	3	&p
op	9:39	0:0	4	&
water	9:40	0:0	4	p
water	9:42	0:0	2	;
if	10:4	11:29	2	(av_strcasecmp (arg ,"allow" ) == 0)
cond	10:8	10:39	3	av_strcasecmp (arg ,"allow" ) == 0
call	10:8	10:34	4	av_strcasecmp
arg	10:22	10:25	5	arg
water	10:22	0:0	6	arg
arg	10:27	10:34	5	"allow"
water	10:27	0:0	6	"allow"
op	10:36	0:0	4	==
water	10:39	0:0	4	0
stmts	11:8	11:29	3	
water	11:8	0:0	4	acl
op	11:11	0:0	4	.
water	11:12	0:0	4	action
op	11:19	0:0	4	=
water	11:21	0:0	4	IP_ALLOW
water	11:29	0:0	4	;
else	12:4	13:28	2
stmts	12:9	13:28	3	
if	12:9	13:28	4	(av_strcasecmp (arg ,"deny" ) == 0)
cond	12:13	12:43	5	av_strcasecmp (arg ,"deny" ) == 0
call	12:13	12:38	6	av_strcasecmp
arg	12:27	12:30	7	arg
water	12:27	0:0	8	arg
arg	12:32	12:38	7	"deny"
water	12:32	0:0	8	"deny"
op	12:40	0:0	6	==
water	12:43	0:0	6	0
stmts	13:8	13:28	5	
water	13:8	0:0	6	acl
op	13:11	0:0	6	.
water	13:12	0:0	6	action
op	13:19	0:0	6	=
water	13:21	0:0	6	IP_DENY
water	13:28	0:0	6	;
else	14:4	18:4	2
stmts	14:9	18:4	3	
water	14:9	0:0	4	{
call	15:8	16:39	4	fprintf
arg	15:16	15:22	5	stderr
water	15:16	0:0	6	stderr
arg	15:24	15:75	5	"%s:%d: ACL action '%s' should be ALLOW or DENY.\n"
water	15:24	0:0	6	"%s:%d: ACL action '%s' should be ALLOW or DENY.\n"
arg	16:16	16:24	5	filename
water	16:16	0:0	6	filename
arg	16:26	16:34	5	line_num
water	16:26	0:0	6	line_num
arg	16:36	16:39	5	arg
water	16:36	0:0	6	arg
water	16:40	0:0	4	;
goto	17:8	17:17	4	bail
water	17:13	0:0	5	bail
water	18:4	0:0	4	}
call	19:4	19:41	2	ffserver_get_arg
arg	19:21	19:24	3	arg
water	19:21	0:0	4	arg
arg	19:26	19:37	3	sizeof(arg)
op	19:26	0:0	4	sizeof
water	19:32	0:0	4	(
water	19:33	0:0	4	arg
water	19:36	0:0	4	)
arg	19:39	19:41	3	&p
op	19:39	0:0	4	&
water	19:40	0:0	4	p
water	19:42	0:0	2	;
if	20:4	25:4	2	(resolve_host (& acl . first ,arg ))
cond	20:8	20:36	3	resolve_host (& acl . first ,arg )
call	20:8	20:36	4	resolve_host
arg	20:21	20:31	5	&acl.first
op	20:21	0:0	6	&
water	20:22	0:0	6	acl
op	20:25	0:0	6	.
water	20:26	0:0	6	first
arg	20:33	20:36	5	arg
water	20:33	0:0	6	arg
stmts	20:39	25:4	3	
water	20:39	0:0	4	{
call	21:8	23:39	4	fprintf
arg	21:16	21:22	5	stderr
water	21:16	0:0	6	stderr
arg	22:16	22:72	5	"%s:%d: ACL refers to invalid host or IP address '%s'\n"
water	22:16	0:0	6	"%s:%d: ACL refers to invalid host or IP address '%s'\n"
arg	23:16	23:24	5	filename
water	23:16	0:0	6	filename
arg	23:26	23:34	5	line_num
water	23:26	0:0	6	line_num
arg	23:36	23:39	5	arg
water	23:36	0:0	6	arg
water	23:40	0:0	4	;
goto	24:8	24:17	4	bail
water	24:13	0:0	5	bail
water	25:4	0:0	4	}
water	26:4	0:0	2	acl
op	26:7	0:0	2	.
water	26:8	0:0	2	last
op	26:13	0:0	2	=
water	26:15	0:0	2	acl
op	26:18	0:0	2	.
water	26:19	0:0	2	first
water	26:24	0:0	2	;
call	27:4	27:41	2	ffserver_get_arg
arg	27:21	27:24	3	arg
water	27:21	0:0	4	arg
arg	27:26	27:37	3	sizeof(arg)
op	27:26	0:0	4	sizeof
water	27:32	0:0	4	(
water	27:33	0:0	4	arg
water	27:36	0:0	4	)
arg	27:39	27:41	3	&p
op	27:39	0:0	4	&
water	27:40	0:0	4	p
water	27:42	0:0	2	;
if	28:4	35:4	2	(arg [ 0 ])
cond	28:8	28:13	3	arg [ 0 ]
water	28:8	0:0	4	arg
op	28:11	0:0	4	[
water	28:12	0:0	4	0
op	28:13	0:0	4	]
stmts	28:16	35:4	3	
water	28:16	0:0	4	{
if	29:8	34:8	4	(resolve_host (& acl . last ,arg ))
cond	29:12	29:39	5	resolve_host (& acl . last ,arg )
call	29:12	29:39	6	resolve_host
arg	29:25	29:34	7	&acl.last
op	29:25	0:0	8	&
water	29:26	0:0	8	acl
op	29:29	0:0	8	.
water	29:30	0:0	8	last
arg	29:36	29:39	7	arg
water	29:36	0:0	8	arg
stmts	29:42	34:8	5	
water	29:42	0:0	6	{
call	30:12	32:43	6	fprintf
arg	30:20	30:26	7	stderr
water	30:20	0:0	8	stderr
arg	31:20	31:76	7	"%s:%d: ACL refers to invalid host or IP address '%s'\n"
water	31:20	0:0	8	"%s:%d: ACL refers to invalid host or IP address '%s'\n"
arg	32:20	32:28	7	filename
water	32:20	0:0	8	filename
arg	32:30	32:38	7	line_num
water	32:30	0:0	8	line_num
arg	32:40	32:43	7	arg
water	32:40	0:0	8	arg
water	32:44	0:0	6	;
goto	33:12	33:21	6	bail
water	33:17	0:0	7	bail
water	34:8	0:0	6	}
water	35:4	0:0	4	}
water	36:4	0:0	2	nacl
op	36:9	0:0	2	=
call	36:11	36:35	2	av_mallocz
arg	36:22	36:35	3	sizeof(*nacl)
op	36:22	0:0	4	sizeof
water	36:28	0:0	4	(
op	36:29	0:0	4	*
water	36:30	0:0	4	nacl
water	36:34	0:0	4	)
water	36:36	0:0	2	;
if	37:4	40:4	2	(! nacl)
cond	37:8	37:9	3	! nacl
op	37:8	0:0	4	!
water	37:9	0:0	4	nacl
stmts	37:15	40:4	3	
water	37:15	0:0	4	{
call	38:8	38:67	4	fprintf
arg	38:16	38:22	5	stderr
water	38:16	0:0	6	stderr
arg	38:24	38:67	5	"Failed to allocate FFServerIPAddressACL\n"
water	38:24	0:0	6	"Failed to allocate FFServerIPAddressACL\n"
water	38:68	0:0	4	;
goto	39:8	39:17	4	bail
water	39:13	0:0	5	bail
water	40:4	0:0	4	}
water	41:4	0:0	2	naclp
op	41:10	0:0	2	=
water	41:12	0:0	2	0
water	41:13	0:0	2	;
water	42:4	0:0	2	acl
op	42:7	0:0	2	.
water	42:8	0:0	2	next
op	42:13	0:0	2	=
water	42:15	0:0	2	0
water	42:16	0:0	2	;
op	43:4	0:0	2	*
water	43:5	0:0	2	nacl
op	43:10	0:0	2	=
water	43:12	0:0	2	acl
water	43:15	0:0	2	;
if	44:4	45:28	2	(stream)
cond	44:8	44:8	3	stream
water	44:8	0:0	4	stream
stmts	45:8	45:28	3	
water	45:8	0:0	4	naclp
op	45:14	0:0	4	=
op	45:16	0:0	4	&
water	45:17	0:0	4	stream
op	45:23	0:0	4	->
water	45:25	0:0	4	acl
water	45:28	0:0	4	;
else	46:4	47:26	2
stmts	46:9	47:26	3	
if	46:9	47:26	4	(feed)
cond	46:13	46:13	5	feed
water	46:13	0:0	6	feed
stmts	47:8	47:26	5	
water	47:8	0:0	6	naclp
op	47:14	0:0	6	=
op	47:16	0:0	6	&
water	47:17	0:0	6	feed
op	47:21	0:0	6	->
water	47:23	0:0	6	acl
water	47:26	0:0	6	;
else	48:4	49:24	2
stmts	48:9	49:24	3	
if	48:9	49:24	4	(ext_acl)
cond	48:13	48:13	5	ext_acl
water	48:13	0:0	6	ext_acl
stmts	49:8	49:24	5	
water	49:8	0:0	6	naclp
op	49:14	0:0	6	=
op	49:16	0:0	6	&
water	49:17	0:0	6	ext_acl
water	49:24	0:0	6	;
else	50:4	52:35	2
stmts	51:8	52:35	3	
call	51:8	52:34	4	fprintf
arg	51:16	51:22	5	stderr
water	51:16	0:0	6	stderr
arg	51:24	51:70	5	"%s:%d: ACL found not in <Stream> or <Feed>\n"
water	51:24	0:0	6	"%s:%d: ACL found not in <Stream> or <Feed>\n"
arg	52:16	52:24	5	filename
water	52:16	0:0	6	filename
arg	52:26	52:34	5	line_num
water	52:26	0:0	6	line_num
water	52:35	0:0	4	;
if	53:4	57:4	2	(naclp)
cond	53:8	53:8	3	naclp
water	53:8	0:0	4	naclp
stmts	53:15	57:4	3	
water	53:15	0:0	4	{
while	54:8	55:35	4	(* naclp)
cond	54:15	54:16	5	* naclp
op	54:15	0:0	6	*
water	54:16	0:0	6	naclp
stmts	55:12	55:35	5	
water	55:12	0:0	6	naclp
op	55:18	0:0	6	=
op	55:20	0:0	6	&
water	55:21	0:0	6	(
op	55:22	0:0	6	*
water	55:23	0:0	6	naclp
water	55:28	0:0	6	)
op	55:29	0:0	6	->
water	55:31	0:0	6	next
water	55:35	0:0	6	;
op	56:8	0:0	4	*
water	56:9	0:0	4	naclp
op	56:15	0:0	4	=
water	56:17	0:0	4	nacl
water	56:21	0:0	4	;
water	57:4	0:0	4	}
else	57:6	58:21	2
stmts	58:8	58:21	3	
call	58:8	58:20	4	av_free
arg	58:16	58:20	5	nacl
water	58:16	0:0	6	nacl
water	58:21	0:0	4	;
label	59:0	59:4	2	bail :
return	60:2	60:8	2	

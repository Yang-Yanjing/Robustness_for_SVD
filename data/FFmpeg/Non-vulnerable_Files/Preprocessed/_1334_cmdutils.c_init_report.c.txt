func	1:0	66:0	0	static int	init_report
params	1:22	0:0	1	
param	1:23	1:38	2	const char *	env
stmnts	0:0	65:12	1	
decl	3:4	3:34	2	char	*filename_template
op	3:28	0:0	2	=
water	3:30	0:0	2	NULL
decl	4:4	4:19	2	char	*key
water	4:13	0:0	2	,
decl	4:4	4:19	2	char	*val
decl	5:4	5:22	2	int	ret
water	5:11	0:0	2	,
decl	5:4	5:22	2	int	count
op	5:19	0:0	2	=
water	5:21	0:0	2	0
decl	6:4	6:14	2	time_t	now
decl	7:4	7:17	2	struct tm	*tm
decl	8:4	8:21	2	AVBPrint	filename
if	9:4	10:16	2	(report_file)
cond	9:8	9:8	3	report_file
water	9:8	0:0	4	report_file
stmts	10:8	10:16	3	
return	10:8	10:16	4	0
water	10:15	0:0	5	0
call	11:4	11:13	2	time
arg	11:9	11:13	3	&now
op	11:9	0:0	4	&
water	11:10	0:0	4	now
water	11:14	0:0	2	;
water	12:4	0:0	2	tm
op	12:7	0:0	2	=
call	12:9	12:23	2	localtime
arg	12:19	12:23	3	&now
op	12:19	0:0	4	&
water	12:20	0:0	4	now
water	12:24	0:0	2	;
while	13:4	40:4	2	(env && * env)
cond	13:11	13:19	3	env && * env
water	13:11	0:0	4	env
op	13:15	0:0	4	&&
op	13:18	0:0	4	*
water	13:19	0:0	4	env
stmts	13:24	40:4	3	
water	13:24	0:0	4	{
if	14:8	20:8	4	(( ret =av_opt_get_key_value (& env ,"=" ,":" ,0 ,& key ,& val ) ) < 0)
cond	14:12	14:74	5	( ret =av_opt_get_key_value (& env ,"=" ,":" ,0 ,& key ,& val ) ) < 0
water	14:12	0:0	6	(
water	14:13	0:0	6	ret
op	14:17	0:0	6	=
call	14:19	14:69	6	av_opt_get_key_value
arg	14:40	14:44	7	&env
op	14:40	0:0	8	&
water	14:41	0:0	8	env
arg	14:46	14:49	7	"="
water	14:46	0:0	8	"="
arg	14:51	14:54	7	":"
water	14:51	0:0	8	":"
arg	14:56	14:57	7	0
water	14:56	0:0	8	0
arg	14:59	14:63	7	&key
op	14:59	0:0	8	&
water	14:60	0:0	8	key
arg	14:65	14:69	7	&val
op	14:65	0:0	8	&
water	14:66	0:0	8	val
water	14:70	0:0	6	)
op	14:72	0:0	6	<
water	14:74	0:0	6	0
stmts	14:77	20:8	5	
water	14:77	0:0	6	{
if	15:12	18:39	6	(count)
cond	15:16	15:16	7	count
water	15:16	0:0	8	count
stmts	16:16	18:39	7	
call	16:16	18:38	8	av_log
arg	16:23	16:27	9	NULL
water	16:23	0:0	10	NULL
arg	16:29	16:41	9	AV_LOG_ERROR
water	16:29	0:0	10	AV_LOG_ERROR
arg	17:23	17:76	9	"Failed to parse FFREPORT environment variable: %s\n"
water	17:23	0:0	10	"Failed to parse FFREPORT environment variable: %s\n"
arg	18:23	18:38	9	av_err2str(ret)
call	18:23	18:37	10	av_err2str
arg	18:34	18:37	11	ret
water	18:34	0:0	12	ret
water	18:39	0:0	8	;
break	19:12	19:17	6	
water	20:8	0:0	6	}
if	21:8	22:17	4	(* env)
cond	21:12	21:13	5	* env
op	21:12	0:0	6	*
water	21:13	0:0	6	env
stmts	22:12	22:17	5	
water	22:12	0:0	6	env
op	22:15	0:0	6	++
water	22:17	0:0	6	;
water	23:8	0:0	4	count
op	23:13	0:0	4	++
water	23:15	0:0	4	;
if	24:8	28:8	4	(!strcmp (key ,"file" ))
cond	24:12	24:31	5	!strcmp (key ,"file" )
op	24:12	0:0	6	!
call	24:13	24:31	6	strcmp
arg	24:20	24:23	7	key
water	24:20	0:0	8	key
arg	24:25	24:31	7	"file"
water	24:25	0:0	8	"file"
stmts	24:34	28:8	5	
water	24:34	0:0	6	{
call	25:12	25:37	6	av_free
arg	25:20	25:37	7	filename_template
water	25:20	0:0	8	filename_template
water	25:38	0:0	6	;
water	26:12	0:0	6	filename_template
op	26:30	0:0	6	=
water	26:32	0:0	6	val
water	26:35	0:0	6	;
water	27:12	0:0	6	val
op	27:16	0:0	6	=
water	27:18	0:0	6	NULL
water	27:22	0:0	6	;
water	28:8	0:0	6	}
else	28:10	35:8	4
stmts	28:15	35:8	5	
if	28:15	35:8	6	(!strcmp (key ,"level" ))
cond	28:19	28:39	7	!strcmp (key ,"level" )
op	28:19	0:0	8	!
call	28:20	28:39	8	strcmp
arg	28:27	28:30	9	key
water	28:27	0:0	10	key
arg	28:32	28:39	9	"level"
water	28:32	0:0	10	"level"
stmts	28:42	35:8	7	
water	28:42	0:0	8	{
decl	29:12	29:22	8	char	*tail
water	30:12	0:0	8	report_file_level
op	30:30	0:0	8	=
call	30:32	30:53	8	strtol
arg	30:39	30:42	9	val
water	30:39	0:0	10	val
arg	30:44	30:49	9	&tail
op	30:44	0:0	10	&
water	30:45	0:0	10	tail
arg	30:51	30:53	9	10
water	30:51	0:0	10	10
water	30:54	0:0	8	;
if	31:12	34:12	8	(* tail)
cond	31:16	31:17	9	* tail
op	31:16	0:0	10	*
water	31:17	0:0	10	tail
stmts	31:23	34:12	9	
water	31:23	0:0	10	{
call	32:16	32:72	10	av_log
arg	32:23	32:27	11	NULL
water	32:23	0:0	12	NULL
arg	32:29	32:41	11	AV_LOG_FATAL
water	32:29	0:0	12	AV_LOG_FATAL
arg	32:43	32:72	11	"Invalid report file level\n"
water	32:43	0:0	12	"Invalid report file level\n"
water	32:73	0:0	10	;
call	33:16	33:30	10	exit_program
arg	33:29	33:30	11	1
water	33:29	0:0	12	1
water	33:31	0:0	10	;
water	34:12	0:0	10	}
water	35:8	0:0	8	}
else	35:10	37:8	4
stmts	35:15	37:8	5	
water	35:15	0:0	6	{
call	36:12	36:76	6	av_log
arg	36:19	36:23	7	NULL
water	36:19	0:0	8	NULL
arg	36:25	36:37	7	AV_LOG_ERROR
water	36:25	0:0	8	AV_LOG_ERROR
arg	36:39	36:71	7	"Unknown key '%s' in FFREPORT\n"
water	36:39	0:0	8	"Unknown key '%s' in FFREPORT\n"
arg	36:73	36:76	7	key
water	36:73	0:0	8	key
water	36:77	0:0	6	;
water	37:8	0:0	6	}
call	38:8	38:19	4	av_free
arg	38:16	38:19	5	val
water	38:16	0:0	6	val
water	38:20	0:0	4	;
call	39:8	39:19	4	av_free
arg	39:16	39:19	5	key
water	39:16	0:0	6	key
water	39:20	0:0	4	;
water	40:4	0:0	4	}
call	41:4	41:34	2	av_bprint_init
arg	41:19	41:28	3	&filename
op	41:19	0:0	4	&
water	41:20	0:0	4	filename
arg	41:30	41:31	3	0
water	41:30	0:0	4	0
arg	41:33	41:34	3	1
water	41:33	0:0	4	1
water	41:35	0:0	2	;
call	42:4	43:77	2	expand_filename_template
arg	42:29	42:38	3	&filename
op	42:29	0:0	4	&
water	42:30	0:0	4	filename
arg	43:29	43:73	3	av_x_if_null(filename_template,"%p-%t.log")
call	43:29	43:72	4	av_x_if_null
arg	43:42	43:59	5	filename_template
water	43:42	0:0	6	filename_template
arg	43:61	43:72	5	"%p-%t.log"
water	43:61	0:0	6	"%p-%t.log"
arg	43:75	43:77	3	tm
water	43:75	0:0	4	tm
water	43:78	0:0	2	;
call	44:4	44:29	2	av_free
arg	44:12	44:29	3	filename_template
water	44:12	0:0	4	filename_template
water	44:30	0:0	2	;
if	45:4	48:4	2	(!av_bprint_is_complete (& filename ))
cond	45:8	45:40	3	!av_bprint_is_complete (& filename )
op	45:8	0:0	4	!
call	45:9	45:40	4	av_bprint_is_complete
arg	45:31	45:40	5	&filename
op	45:31	0:0	6	&
water	45:32	0:0	6	filename
stmts	45:43	48:4	3	
water	45:43	0:0	4	{
call	46:8	46:78	4	av_log
arg	46:15	46:19	5	NULL
water	46:15	0:0	6	NULL
arg	46:21	46:33	5	AV_LOG_ERROR
water	46:21	0:0	6	AV_LOG_ERROR
arg	46:35	46:78	5	"Out of memory building report file name\n"
water	46:35	0:0	6	"Out of memory building report file name\n"
water	46:79	0:0	4	;
return	47:8	47:30	4	AVERROR(ENOMEM)
call	47:15	47:29	5	AVERROR
arg	47:23	47:29	6	ENOMEM
water	47:23	0:0	7	ENOMEM
water	48:4	0:0	4	}
water	49:4	0:0	2	report_file
op	49:16	0:0	2	=
call	49:18	49:41	2	fopen
arg	49:24	49:36	3	filename.str
water	49:24	0:0	4	filename
op	49:32	0:0	4	.
water	49:33	0:0	4	str
arg	49:38	49:41	3	"w"
water	49:38	0:0	4	"w"
water	49:42	0:0	2	;
if	50:4	55:4	2	(! report_file)
cond	50:8	50:9	3	! report_file
op	50:8	0:0	4	!
water	50:9	0:0	4	report_file
stmts	50:22	55:4	3	
water	50:22	0:0	4	{
decl	51:8	51:32	4	int	ret
op	51:16	0:0	4	=
call	51:18	51:31	5	AVERROR
arg	51:26	51:31	6	errno
water	51:26	0:0	7	errno
call	52:8	53:44	4	av_log
arg	52:15	52:19	5	NULL
water	52:15	0:0	6	NULL
arg	52:21	52:33	5	AV_LOG_ERROR
water	52:21	0:0	6	AV_LOG_ERROR
arg	52:35	52:71	5	"Failed to open report \"%s\": %s\n"
water	52:35	0:0	6	"Failed to open report \"%s\": %s\n"
arg	53:15	53:27	5	filename.str
water	53:15	0:0	6	filename
op	53:23	0:0	6	.
water	53:24	0:0	6	str
arg	53:29	53:44	5	strerror(errno)
call	53:29	53:43	6	strerror
arg	53:38	53:43	7	errno
water	53:38	0:0	8	errno
water	53:45	0:0	4	;
return	54:8	54:18	4	ret
water	54:15	0:0	5	ret
water	55:4	0:0	4	}
call	56:4	56:43	2	av_log_set_callback
arg	56:24	56:43	3	log_callback_report
water	56:24	0:0	4	log_callback_report
water	56:44	0:0	2	;
call	57:4	63:23	2	av_log
arg	57:11	57:15	3	NULL
water	57:11	0:0	4	NULL
arg	57:17	57:28	3	AV_LOG_INFO
water	57:17	0:0	4	AV_LOG_INFO
arg	58:11	59:39	3	"%s started on %04d-%02d-%02d at %02d:%02d:%02d\n""Report written to \"%s\"\n"
water	58:11	0:0	4	"%s started on %04d-%02d-%02d at %02d:%02d:%02d\n"
water	59:11	0:0	4	"Report written to \"%s\"\n"
arg	60:11	60:23	3	program_name
water	60:11	0:0	4	program_name
arg	61:11	61:29	3	tm->tm_year+1900
water	61:11	0:0	4	tm
op	61:13	0:0	4	->
water	61:15	0:0	4	tm_year
op	61:23	0:0	4	+
water	61:25	0:0	4	1900
arg	61:31	61:45	3	tm->tm_mon+1
water	61:31	0:0	4	tm
op	61:33	0:0	4	->
water	61:35	0:0	4	tm_mon
op	61:42	0:0	4	+
water	61:44	0:0	4	1
arg	61:47	61:58	3	tm->tm_mday
water	61:47	0:0	4	tm
op	61:49	0:0	4	->
water	61:51	0:0	4	tm_mday
arg	62:11	62:22	3	tm->tm_hour
water	62:11	0:0	4	tm
op	62:13	0:0	4	->
water	62:15	0:0	4	tm_hour
arg	62:24	62:34	3	tm->tm_min
water	62:24	0:0	4	tm
op	62:26	0:0	4	->
water	62:28	0:0	4	tm_min
arg	62:36	62:46	3	tm->tm_sec
water	62:36	0:0	4	tm
op	62:38	0:0	4	->
water	62:40	0:0	4	tm_sec
arg	63:11	63:23	3	filename.str
water	63:11	0:0	4	filename
op	63:19	0:0	4	.
water	63:20	0:0	4	str
water	63:24	0:0	2	;
call	64:4	64:38	2	av_bprint_finalize
arg	64:23	64:32	3	&filename
op	64:23	0:0	4	&
water	64:24	0:0	4	filename
arg	64:34	64:38	3	NULL
water	64:34	0:0	4	NULL
water	64:39	0:0	2	;
return	65:4	65:12	2	0
water	65:11	0:0	3	0

func	1:0	19:0	0	static int	compute_moov_size
params	1:28	0:0	1	
param	1:29	1:47	2	AVFormatContext *	s
stmnts	0:0	18:21	1	
decl	3:4	3:32	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:32	2	int	moov_size
water	3:20	0:0	2	,
decl	3:4	3:32	2	int	moov_size2
decl	4:4	4:37	2	MOVMuxContext	*mov
op	4:23	0:0	2	=
water	4:25	0:0	2	s
op	4:26	0:0	2	->
water	4:28	0:0	2	priv_data
water	5:4	0:0	2	moov_size
op	5:14	0:0	2	=
call	5:16	5:31	2	get_moov_size
arg	5:30	5:31	3	s
water	5:30	0:0	4	s
water	5:32	0:0	2	;
if	6:4	7:24	2	(moov_size < 0)
cond	6:8	6:20	3	moov_size < 0
water	6:8	0:0	4	moov_size
op	6:18	0:0	4	<
water	6:20	0:0	4	0
stmts	7:8	7:24	3	
return	7:8	7:24	4	moov_size
water	7:15	0:0	5	moov_size
for	8:4	9:47	2	(i = 0 ;i < mov -> nb_streams;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:25	3	i < mov -> nb_streams
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	mov
op	8:23	0:0	4	->
water	8:25	0:0	4	nb_streams
forexpr	8:37	8:38	3	i ++
water	8:37	0:0	4	i
op	8:38	0:0	4	++
stmts	9:8	9:47	3	
water	9:8	0:0	4	mov
op	9:11	0:0	4	->
water	9:13	0:0	4	tracks
op	9:19	0:0	4	[
water	9:20	0:0	4	i
op	9:21	0:0	4	]
op	9:22	0:0	4	.
water	9:23	0:0	4	data_offset
op	9:35	0:0	4	+=
water	9:38	0:0	4	moov_size
water	9:47	0:0	4	;
water	10:4	0:0	2	moov_size2
op	10:15	0:0	2	=
call	10:17	10:32	2	get_moov_size
arg	10:31	10:32	3	s
water	10:31	0:0	4	s
water	10:33	0:0	2	;
if	11:4	12:25	2	(moov_size2 < 0)
cond	11:8	11:21	3	moov_size2 < 0
water	11:8	0:0	4	moov_size2
op	11:19	0:0	4	<
water	11:21	0:0	4	0
stmts	12:8	12:25	3	
return	12:8	12:25	4	moov_size2
water	12:15	0:0	5	moov_size2
if	15:4	17:64	2	(moov_size2 != moov_size)
cond	15:8	15:22	3	moov_size2 != moov_size
water	15:8	0:0	4	moov_size2
op	15:19	0:0	4	!=
water	15:22	0:0	4	moov_size
stmts	16:8	17:64	3	
for	16:8	17:64	4	(i = 0 ;i < mov -> nb_streams;i ++)
forinit	16:13	16:18	5	i = 0 ;
water	16:13	0:0	6	i
op	16:15	0:0	6	=
water	16:17	0:0	6	0
water	16:18	0:0	6	;
cond	16:20	16:29	5	i < mov -> nb_streams
water	16:20	0:0	6	i
op	16:22	0:0	6	<
water	16:24	0:0	6	mov
op	16:27	0:0	6	->
water	16:29	0:0	6	nb_streams
forexpr	16:41	16:42	5	i ++
water	16:41	0:0	6	i
op	16:42	0:0	6	++
stmts	17:12	17:64	5	
water	17:12	0:0	6	mov
op	17:15	0:0	6	->
water	17:17	0:0	6	tracks
op	17:23	0:0	6	[
water	17:24	0:0	6	i
op	17:25	0:0	6	]
op	17:26	0:0	6	.
water	17:27	0:0	6	data_offset
op	17:39	0:0	6	+=
water	17:42	0:0	6	moov_size2
op	17:53	0:0	6	-
water	17:55	0:0	6	moov_size
water	17:64	0:0	6	;
return	18:4	18:21	2	moov_size2
water	18:11	0:0	3	moov_size2

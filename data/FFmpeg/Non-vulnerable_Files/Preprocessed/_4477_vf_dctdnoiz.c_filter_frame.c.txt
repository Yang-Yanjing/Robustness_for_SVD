func	1:0	62:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	61:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:34	2	DCTdnoizContext	*s
op	4:23	0:0	2	=
water	4:25	0:0	2	ctx
op	4:28	0:0	2	->
water	4:30	0:0	2	priv
decl	5:4	5:51	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	inlink
op	5:34	0:0	2	->
water	5:36	0:0	2	dst
op	5:39	0:0	2	->
water	5:41	0:0	2	outputs
op	5:48	0:0	2	[
water	5:49	0:0	2	0
op	5:50	0:0	2	]
decl	6:4	6:21	2	int	direct
water	6:14	0:0	2	,
decl	6:4	6:21	2	int	plane
decl	7:4	7:16	2	AVFrame	*out
if	8:4	11:4	2	(av_frame_is_writable (in ))
cond	8:8	8:31	3	av_frame_is_writable (in )
call	8:8	8:31	4	av_frame_is_writable
arg	8:29	8:31	5	in
water	8:29	0:0	6	in
stmts	8:34	11:4	3	
water	8:34	0:0	4	{
water	9:8	0:0	4	direct
op	9:15	0:0	4	=
water	9:17	0:0	4	1
water	9:18	0:0	4	;
water	10:8	0:0	4	out
op	10:12	0:0	4	=
water	10:14	0:0	4	in
water	10:16	0:0	4	;
water	11:4	0:0	4	}
else	11:6	19:4	2
stmts	11:11	19:4	3	
water	11:11	0:0	4	{
water	12:8	0:0	4	direct
op	12:15	0:0	4	=
water	12:17	0:0	4	0
water	12:18	0:0	4	;
water	13:8	0:0	4	out
op	13:12	0:0	4	=
call	13:14	13:65	4	ff_get_video_buffer
arg	13:34	13:41	5	outlink
water	13:34	0:0	6	outlink
arg	13:43	13:53	5	outlink->w
water	13:43	0:0	6	outlink
op	13:50	0:0	6	->
water	13:52	0:0	6	w
arg	13:55	13:65	5	outlink->h
water	13:55	0:0	6	outlink
op	13:62	0:0	6	->
water	13:64	0:0	6	h
water	13:66	0:0	4	;
if	14:8	17:8	4	(! out)
cond	14:12	14:13	5	! out
op	14:12	0:0	6	!
water	14:13	0:0	6	out
stmts	14:18	17:8	5	
water	14:18	0:0	6	{
call	15:12	15:29	6	av_frame_free
arg	15:26	15:29	7	&in
op	15:26	0:0	8	&
water	15:27	0:0	8	in
water	15:30	0:0	6	;
return	16:12	16:34	6	AVERROR(ENOMEM)
call	16:19	16:33	7	AVERROR
arg	16:27	16:33	8	ENOMEM
water	16:27	0:0	9	ENOMEM
water	17:8	0:0	6	}
call	18:8	18:35	4	av_frame_copy_props
arg	18:28	18:31	5	out
water	18:28	0:0	6	out
arg	18:33	18:35	5	in
water	18:33	0:0	6	in
water	18:36	0:0	4	;
water	19:4	0:0	4	}
call	20:4	22:52	2	s->color_decorrelation
arg	20:27	20:37	3	s->cbuf[0]
water	20:27	0:0	4	s
op	20:28	0:0	4	->
water	20:30	0:0	4	cbuf
op	20:34	0:0	4	[
water	20:35	0:0	4	0
op	20:36	0:0	4	]
arg	20:39	20:52	3	s->p_linesize
water	20:39	0:0	4	s
op	20:40	0:0	4	->
water	20:42	0:0	4	p_linesize
arg	21:27	21:38	3	in->data[0]
water	21:27	0:0	4	in
op	21:29	0:0	4	->
water	21:31	0:0	4	data
op	21:35	0:0	4	[
water	21:36	0:0	4	0
op	21:37	0:0	4	]
arg	21:40	21:55	3	in->linesize[0]
water	21:40	0:0	4	in
op	21:42	0:0	4	->
water	21:44	0:0	4	linesize
op	21:52	0:0	4	[
water	21:53	0:0	4	0
op	21:54	0:0	4	]
arg	22:27	22:38	3	s->pr_width
water	22:27	0:0	4	s
op	22:28	0:0	4	->
water	22:30	0:0	4	pr_width
arg	22:40	22:52	3	s->pr_height
water	22:40	0:0	4	s
op	22:41	0:0	4	->
water	22:43	0:0	4	pr_height
water	22:53	0:0	2	;
for	23:4	29:4	2	(plane = 0 ;plane < 3;plane ++)
forinit	23:9	23:18	3	plane = 0 ;
water	23:9	0:0	4	plane
op	23:15	0:0	4	=
water	23:17	0:0	4	0
water	23:18	0:0	4	;
cond	23:20	23:28	3	plane < 3
water	23:20	0:0	4	plane
op	23:26	0:0	4	<
water	23:28	0:0	4	3
forexpr	23:31	23:36	3	plane ++
water	23:31	0:0	4	plane
op	23:36	0:0	4	++
stmts	23:40	29:4	3	
water	23:40	0:0	4	{
decl	24:8	27:9	4	ThreadData	td
op	24:22	0:0	4	=
water	24:24	0:0	4	{
op	25:12	0:0	4	.
water	25:13	0:0	4	src
op	25:17	0:0	4	=
water	25:19	0:0	4	s
op	25:20	0:0	4	->
water	25:22	0:0	4	cbuf
op	25:26	0:0	4	[
water	25:27	0:0	4	0
op	25:28	0:0	4	]
op	25:29	0:0	4	[
water	25:30	0:0	4	plane
op	25:35	0:0	4	]
water	25:36	0:0	4	,
op	26:12	0:0	4	.
water	26:13	0:0	4	dst
op	26:17	0:0	4	=
water	26:19	0:0	4	s
op	26:20	0:0	4	->
water	26:22	0:0	4	cbuf
op	26:26	0:0	4	[
water	26:27	0:0	4	1
op	26:28	0:0	4	]
op	26:29	0:0	4	[
water	26:30	0:0	4	plane
op	26:35	0:0	4	]
water	26:36	0:0	4	,
water	27:8	0:0	4	}
call	28:8	28:74	4	ctx->internal->execute
arg	28:31	28:34	5	ctx
water	28:31	0:0	6	ctx
arg	28:36	28:48	5	filter_slice
water	28:36	0:0	6	filter_slice
arg	28:50	28:53	5	&td
op	28:50	0:0	6	&
water	28:51	0:0	6	td
arg	28:55	28:59	5	NULL
water	28:55	0:0	6	NULL
arg	28:61	28:74	5	s->nb_threads
water	28:61	0:0	6	s
op	28:62	0:0	6	->
water	28:64	0:0	6	nb_threads
water	28:75	0:0	4	;
water	29:4	0:0	4	}
call	30:4	32:50	2	s->color_correlation
arg	30:25	30:37	3	out->data[0]
water	30:25	0:0	4	out
op	30:28	0:0	4	->
water	30:30	0:0	4	data
op	30:34	0:0	4	[
water	30:35	0:0	4	0
op	30:36	0:0	4	]
arg	30:39	30:55	3	out->linesize[0]
water	30:39	0:0	4	out
op	30:42	0:0	4	->
water	30:44	0:0	4	linesize
op	30:52	0:0	4	[
water	30:53	0:0	4	0
op	30:54	0:0	4	]
arg	31:25	31:35	3	s->cbuf[1]
water	31:25	0:0	4	s
op	31:26	0:0	4	->
water	31:28	0:0	4	cbuf
op	31:32	0:0	4	[
water	31:33	0:0	4	1
op	31:34	0:0	4	]
arg	31:37	31:50	3	s->p_linesize
water	31:37	0:0	4	s
op	31:38	0:0	4	->
water	31:40	0:0	4	p_linesize
arg	32:25	32:36	3	s->pr_width
water	32:25	0:0	4	s
op	32:26	0:0	4	->
water	32:28	0:0	4	pr_width
arg	32:38	32:50	3	s->pr_height
water	32:38	0:0	4	s
op	32:39	0:0	4	->
water	32:41	0:0	4	pr_height
water	32:51	0:0	2	;
if	33:4	60:4	2	(! direct)
cond	33:8	33:9	3	! direct
op	33:8	0:0	4	!
water	33:9	0:0	4	direct
stmts	33:17	60:4	3	
water	33:17	0:0	4	{
decl	34:8	34:13	4	int	y
decl	35:8	35:35	4	uint8_t	*dst
op	35:21	0:0	4	=
water	35:23	0:0	4	out
op	35:26	0:0	4	->
water	35:28	0:0	4	data
op	35:32	0:0	4	[
water	35:33	0:0	4	0
op	35:34	0:0	4	]
decl	36:8	36:40	4	const uint8_t	*src
op	36:27	0:0	4	=
water	36:29	0:0	4	in
op	36:31	0:0	4	->
water	36:33	0:0	4	data
op	36:37	0:0	4	[
water	36:38	0:0	4	0
op	36:39	0:0	4	]
decl	37:8	37:49	4	const int	dst_linesize
op	37:31	0:0	4	=
water	37:33	0:0	4	out
op	37:36	0:0	4	->
water	37:38	0:0	4	linesize
op	37:46	0:0	4	[
water	37:47	0:0	4	0
op	37:48	0:0	4	]
decl	38:8	38:48	4	const int	src_linesize
op	38:31	0:0	4	=
water	38:33	0:0	4	in
op	38:35	0:0	4	->
water	38:37	0:0	4	linesize
op	38:45	0:0	4	[
water	38:46	0:0	4	0
op	38:47	0:0	4	]
decl	39:8	39:54	4	const int	hpad
op	39:23	0:0	4	=
water	39:25	0:0	4	(
water	39:26	0:0	4	inlink
op	39:32	0:0	4	->
water	39:34	0:0	4	w
op	39:36	0:0	4	-
water	39:38	0:0	4	s
op	39:39	0:0	4	->
water	39:41	0:0	4	pr_width
water	39:49	0:0	4	)
op	39:51	0:0	4	*
water	39:53	0:0	4	3
decl	40:8	40:51	4	const int	vpad
op	40:23	0:0	4	=
water	40:25	0:0	4	(
water	40:26	0:0	4	inlink
op	40:32	0:0	4	->
water	40:34	0:0	4	h
op	40:36	0:0	4	-
water	40:38	0:0	4	s
op	40:39	0:0	4	->
water	40:41	0:0	4	pr_height
water	40:50	0:0	4	)
if	41:8	49:8	4	(hpad)
cond	41:12	41:12	5	hpad
water	41:12	0:0	6	hpad
stmts	41:18	49:8	5	
water	41:18	0:0	6	{
decl	42:12	42:55	6	uint8_t	*dstp
op	42:32	0:0	6	=
water	42:34	0:0	6	dst
op	42:38	0:0	6	+
water	42:40	0:0	6	s
op	42:41	0:0	6	->
water	42:43	0:0	6	pr_width
op	42:52	0:0	6	*
water	42:54	0:0	6	3
decl	43:12	43:55	6	const uint8_t	*srcp
op	43:32	0:0	6	=
water	43:34	0:0	6	src
op	43:38	0:0	6	+
water	43:40	0:0	6	s
op	43:41	0:0	6	->
water	43:43	0:0	6	pr_width
op	43:52	0:0	6	*
water	43:54	0:0	6	3
for	44:12	48:12	6	(y = 0 ;y < s -> pr_height;y ++)
forinit	44:17	44:22	7	y = 0 ;
water	44:17	0:0	8	y
op	44:19	0:0	8	=
water	44:21	0:0	8	0
water	44:22	0:0	8	;
cond	44:24	44:31	7	y < s -> pr_height
water	44:24	0:0	8	y
op	44:26	0:0	8	<
water	44:28	0:0	8	s
op	44:29	0:0	8	->
water	44:31	0:0	8	pr_height
forexpr	44:42	44:43	7	y ++
water	44:42	0:0	8	y
op	44:43	0:0	8	++
stmts	44:47	48:12	7	
water	44:47	0:0	8	{
call	45:16	45:39	8	memcpy
arg	45:23	45:27	9	dstp
water	45:23	0:0	10	dstp
arg	45:29	45:33	9	srcp
water	45:29	0:0	10	srcp
arg	45:35	45:39	9	hpad
water	45:35	0:0	10	hpad
water	45:40	0:0	8	;
water	46:16	0:0	8	dstp
op	46:21	0:0	8	+=
water	46:24	0:0	8	dst_linesize
water	46:36	0:0	8	;
water	47:16	0:0	8	srcp
op	47:21	0:0	8	+=
water	47:24	0:0	8	src_linesize
water	47:36	0:0	8	;
water	48:12	0:0	8	}
water	49:8	0:0	6	}
if	50:8	58:8	4	(vpad)
cond	50:12	50:12	5	vpad
water	50:12	0:0	6	vpad
stmts	50:18	58:8	5	
water	50:18	0:0	6	{
decl	51:12	51:67	6	uint8_t	*dstp
op	51:32	0:0	6	=
water	51:34	0:0	6	dst
op	51:38	0:0	6	+
water	51:40	0:0	6	s
op	51:41	0:0	6	->
water	51:43	0:0	6	pr_height
op	51:53	0:0	6	*
water	51:55	0:0	6	dst_linesize
decl	52:12	52:67	6	const uint8_t	*srcp
op	52:32	0:0	6	=
water	52:34	0:0	6	src
op	52:38	0:0	6	+
water	52:40	0:0	6	s
op	52:41	0:0	6	->
water	52:43	0:0	6	pr_height
op	52:53	0:0	6	*
water	52:55	0:0	6	src_linesize
for	53:12	57:12	6	(y = 0 ;y < vpad;y ++)
forinit	53:17	53:22	7	y = 0 ;
water	53:17	0:0	8	y
op	53:19	0:0	8	=
water	53:21	0:0	8	0
water	53:22	0:0	8	;
cond	53:24	53:28	7	y < vpad
water	53:24	0:0	8	y
op	53:26	0:0	8	<
water	53:28	0:0	8	vpad
forexpr	53:34	53:35	7	y ++
water	53:34	0:0	8	y
op	53:35	0:0	8	++
stmts	53:39	57:12	7	
water	53:39	0:0	8	{
call	54:16	54:48	8	memcpy
arg	54:23	54:27	9	dstp
water	54:23	0:0	10	dstp
arg	54:29	54:33	9	srcp
water	54:29	0:0	10	srcp
arg	54:35	54:48	9	inlink->w*3
water	54:35	0:0	10	inlink
op	54:41	0:0	10	->
water	54:43	0:0	10	w
op	54:45	0:0	10	*
water	54:47	0:0	10	3
water	54:49	0:0	8	;
water	55:16	0:0	8	dstp
op	55:21	0:0	8	+=
water	55:24	0:0	8	dst_linesize
water	55:36	0:0	8	;
water	56:16	0:0	8	srcp
op	56:21	0:0	8	+=
water	56:24	0:0	8	src_linesize
water	56:36	0:0	8	;
water	57:12	0:0	8	}
water	58:8	0:0	6	}
call	59:8	59:25	4	av_frame_free
arg	59:22	59:25	5	&in
op	59:22	0:0	6	&
water	59:23	0:0	6	in
water	59:26	0:0	4	;
water	60:4	0:0	4	}
return	61:4	61:40	2	ff_filter_frame(outlink,out)
call	61:11	61:39	3	ff_filter_frame
arg	61:27	61:34	4	outlink
water	61:27	0:0	5	outlink
arg	61:36	61:39	4	out
water	61:36	0:0	5	out

func	1:0	41:0	0	static int	channelmap_filter_frame
params	1:34	0:0	1	
param	1:35	1:55	2	AVFilterLink *	inlink
param	1:57	1:69	2	AVFrame *	buf
stmnts	0:0	40:40	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:42	2	const ChannelMapContext	*s
op	5:31	0:0	2	=
water	5:33	0:0	2	ctx
op	5:36	0:0	2	->
water	5:38	0:0	2	priv
decl	6:4	6:80	2	const int	nch_in
op	6:21	0:0	2	=
call	6:23	6:79	3	av_get_channel_layout_nb_channels
arg	6:57	6:79	4	inlink->channel_layout
water	6:57	0:0	5	inlink
op	6:63	0:0	5	->
water	6:65	0:0	5	channel_layout
decl	7:4	7:30	2	const int	nch_out
op	7:22	0:0	2	=
water	7:24	0:0	2	s
op	7:25	0:0	2	->
water	7:27	0:0	2	nch
decl	8:4	8:10	2	int	ch
decl	9:4	9:34	2	uint8_t	*source_planes[MAX_CH]
call	10:4	11:44	2	memcpy
arg	10:11	10:24	3	source_planes
water	10:11	0:0	4	source_planes
arg	10:26	10:44	3	buf->extended_data
water	10:26	0:0	4	buf
op	10:29	0:0	4	->
water	10:31	0:0	4	extended_data
arg	11:11	11:44	3	nch_in*sizeof(source_planes[0])
water	11:11	0:0	4	nch_in
op	11:18	0:0	4	*
op	11:20	0:0	4	sizeof
water	11:26	0:0	4	(
water	11:27	0:0	4	source_planes
op	11:40	0:0	4	[
water	11:41	0:0	4	0
op	11:42	0:0	4	]
water	11:43	0:0	4	)
water	11:45	0:0	2	;
if	12:4	30:4	2	(nch_out > nch_in)
cond	12:8	12:18	3	nch_out > nch_in
water	12:8	0:0	4	nch_out
op	12:16	0:0	4	>
water	12:18	0:0	4	nch_in
stmts	12:26	30:4	3	
water	12:26	0:0	4	{
if	13:8	26:8	4	(nch_out >FF_ARRAY_ELEMS (buf -> data ))
cond	13:12	13:46	5	nch_out >FF_ARRAY_ELEMS (buf -> data )
water	13:12	0:0	6	nch_out
op	13:20	0:0	6	>
call	13:22	13:46	6	FF_ARRAY_ELEMS
arg	13:37	13:46	7	buf->data
water	13:37	0:0	8	buf
op	13:40	0:0	8	->
water	13:42	0:0	8	data
stmts	13:49	26:8	5	
water	13:49	0:0	6	{
decl	14:12	15:70	6	uint8_t	**new_extended_data
op	14:40	0:0	6	=
call	15:16	15:69	7	av_mallocz_array
arg	15:33	15:40	8	nch_out
water	15:33	0:0	9	nch_out
arg	15:42	15:69	8	sizeof(*buf->extended_data)
op	15:42	0:0	9	sizeof
water	15:48	0:0	9	(
op	15:49	0:0	9	*
water	15:50	0:0	9	buf
op	15:53	0:0	9	->
water	15:55	0:0	9	extended_data
water	15:68	0:0	9	)
if	16:12	19:12	6	(! new_extended_data)
cond	16:16	16:17	7	! new_extended_data
op	16:16	0:0	8	!
water	16:17	0:0	8	new_extended_data
stmts	16:36	19:12	7	
water	16:36	0:0	8	{
call	17:16	17:34	8	av_frame_free
arg	17:30	17:34	9	&buf
op	17:30	0:0	10	&
water	17:31	0:0	10	buf
water	17:35	0:0	8	;
return	18:16	18:38	8	AVERROR(ENOMEM)
call	18:23	18:37	9	AVERROR
arg	18:31	18:37	10	ENOMEM
water	18:31	0:0	11	ENOMEM
water	19:12	0:0	8	}
if	20:12	22:12	6	(buf -> extended_data == buf -> data)
cond	20:16	20:43	7	buf -> extended_data == buf -> data
water	20:16	0:0	8	buf
op	20:19	0:0	8	->
water	20:21	0:0	8	extended_data
op	20:35	0:0	8	==
water	20:38	0:0	8	buf
op	20:41	0:0	8	->
water	20:43	0:0	8	data
stmts	20:49	22:12	7	
water	20:49	0:0	8	{
water	21:16	0:0	8	buf
op	21:19	0:0	8	->
water	21:21	0:0	8	extended_data
op	21:35	0:0	8	=
water	21:37	0:0	8	new_extended_data
water	21:54	0:0	8	;
water	22:12	0:0	8	}
else	22:14	25:12	6
stmts	22:19	25:12	7	
water	22:19	0:0	8	{
call	23:16	23:42	8	av_free
arg	23:24	23:42	9	buf->extended_data
water	23:24	0:0	10	buf
op	23:27	0:0	10	->
water	23:29	0:0	10	extended_data
water	23:43	0:0	8	;
water	24:16	0:0	8	buf
op	24:19	0:0	8	->
water	24:21	0:0	8	extended_data
op	24:35	0:0	8	=
water	24:37	0:0	8	new_extended_data
water	24:54	0:0	8	;
water	25:12	0:0	8	}
water	26:8	0:0	6	}
else	26:10	29:8	4
stmts	26:15	29:8	5	
if	26:15	29:8	6	(buf -> extended_data != buf -> data)
cond	26:19	26:46	7	buf -> extended_data != buf -> data
water	26:19	0:0	8	buf
op	26:22	0:0	8	->
water	26:24	0:0	8	extended_data
op	26:38	0:0	8	!=
water	26:41	0:0	8	buf
op	26:44	0:0	8	->
water	26:46	0:0	8	data
stmts	26:52	29:8	7	
water	26:52	0:0	8	{
call	27:12	27:38	8	av_free
arg	27:20	27:38	9	buf->extended_data
water	27:20	0:0	10	buf
op	27:23	0:0	10	->
water	27:25	0:0	10	extended_data
water	27:39	0:0	8	;
water	28:12	0:0	8	buf
op	28:15	0:0	8	->
water	28:17	0:0	8	extended_data
op	28:31	0:0	8	=
water	28:33	0:0	8	buf
op	28:36	0:0	8	->
water	28:38	0:0	8	data
water	28:42	0:0	8	;
water	29:8	0:0	8	}
water	30:4	0:0	4	}
for	31:4	34:4	2	(ch = 0 ;ch < nch_out;ch ++)
forinit	31:9	31:15	3	ch = 0 ;
water	31:9	0:0	4	ch
op	31:12	0:0	4	=
water	31:14	0:0	4	0
water	31:15	0:0	4	;
cond	31:17	31:22	3	ch < nch_out
water	31:17	0:0	4	ch
op	31:20	0:0	4	<
water	31:22	0:0	4	nch_out
forexpr	31:31	31:33	3	ch ++
water	31:31	0:0	4	ch
op	31:33	0:0	4	++
stmts	31:37	34:4	3	
water	31:37	0:0	4	{
water	32:8	0:0	4	buf
op	32:11	0:0	4	->
water	32:13	0:0	4	extended_data
op	32:26	0:0	4	[
water	32:27	0:0	4	s
op	32:28	0:0	4	->
water	32:30	0:0	4	map
op	32:33	0:0	4	[
water	32:34	0:0	4	ch
op	32:36	0:0	4	]
op	32:37	0:0	4	.
water	32:38	0:0	4	out_channel_idx
op	32:53	0:0	4	]
op	32:55	0:0	4	=
water	33:12	0:0	4	source_planes
op	33:25	0:0	4	[
water	33:26	0:0	4	s
op	33:27	0:0	4	->
water	33:29	0:0	4	map
op	33:32	0:0	4	[
water	33:33	0:0	4	ch
op	33:35	0:0	4	]
op	33:36	0:0	4	.
water	33:37	0:0	4	in_channel_idx
op	33:51	0:0	4	]
water	33:52	0:0	4	;
water	34:4	0:0	4	}
if	35:4	37:76	2	(buf -> data != buf -> extended_data)
cond	35:8	35:26	3	buf -> data != buf -> extended_data
water	35:8	0:0	4	buf
op	35:11	0:0	4	->
water	35:13	0:0	4	data
op	35:18	0:0	4	!=
water	35:21	0:0	4	buf
op	35:24	0:0	4	->
water	35:26	0:0	4	extended_data
stmts	36:8	37:76	3	
call	36:8	37:75	4	memcpy
arg	36:15	36:24	5	buf->data
water	36:15	0:0	6	buf
op	36:18	0:0	6	->
water	36:20	0:0	6	data
arg	36:26	36:44	5	buf->extended_data
water	36:26	0:0	6	buf
op	36:29	0:0	6	->
water	36:31	0:0	6	extended_data
arg	37:11	37:75	5	FFMIN(FF_ARRAY_ELEMS(buf->data),nch_out)*sizeof(buf->data[0])
call	37:11	37:51	6	FFMIN
arg	37:17	37:42	7	FF_ARRAY_ELEMS(buf->data)
call	37:17	37:41	8	FF_ARRAY_ELEMS
arg	37:32	37:41	9	buf->data
water	37:32	0:0	10	buf
op	37:35	0:0	10	->
water	37:37	0:0	10	data
arg	37:44	37:51	7	nch_out
water	37:44	0:0	8	nch_out
op	37:53	0:0	6	*
op	37:55	0:0	6	sizeof
water	37:61	0:0	6	(
water	37:62	0:0	6	buf
op	37:65	0:0	6	->
water	37:67	0:0	6	data
op	37:71	0:0	6	[
water	37:72	0:0	6	0
op	37:73	0:0	6	]
water	37:74	0:0	6	)
water	37:76	0:0	4	;
water	38:4	0:0	2	buf
op	38:7	0:0	2	->
water	38:9	0:0	2	channel_layout
op	38:24	0:0	2	=
water	38:26	0:0	2	outlink
op	38:33	0:0	2	->
water	38:35	0:0	2	channel_layout
water	38:49	0:0	2	;
call	39:4	39:48	2	av_frame_set_channels
arg	39:26	39:29	3	buf
water	39:26	0:0	4	buf
arg	39:31	39:48	3	outlink->channels
water	39:31	0:0	4	outlink
op	39:38	0:0	4	->
water	39:40	0:0	4	channels
water	39:49	0:0	2	;
return	40:4	40:40	2	ff_filter_frame(outlink,buf)
call	40:11	40:39	3	ff_filter_frame
arg	40:27	40:34	4	outlink
water	40:27	0:0	5	outlink
arg	40:36	40:39	4	buf
water	40:36	0:0	5	buf

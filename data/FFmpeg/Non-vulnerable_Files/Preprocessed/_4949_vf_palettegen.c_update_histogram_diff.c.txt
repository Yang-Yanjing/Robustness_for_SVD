func	1:0	18:0	0	static int	update_histogram_diff
params	1:32	0:0	1	
param	1:33	1:55	2	struct hist_node *	hist
param	2:33	2:50	2	const AVFrame *	f1
param	2:52	2:69	2	const AVFrame *	f2
stmnts	0:0	17:25	1	
decl	4:4	4:37	2	int	x
water	4:9	0:0	2	,
decl	4:4	4:37	2	int	y
water	4:12	0:0	2	,
decl	4:4	4:37	2	int	ret
water	4:17	0:0	2	,
decl	4:4	4:37	2	int	nb_diff_colors
op	4:34	0:0	2	=
water	4:36	0:0	2	0
for	5:4	16:4	2	(y = 0 ;y < f1 -> height;y ++)
forinit	5:9	5:14	3	y = 0 ;
water	5:9	0:0	4	y
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:24	3	y < f1 -> height
water	5:16	0:0	4	y
op	5:18	0:0	4	<
water	5:20	0:0	4	f1
op	5:22	0:0	4	->
water	5:24	0:0	4	height
forexpr	5:32	5:33	3	y ++
water	5:32	0:0	4	y
op	5:33	0:0	4	++
stmts	5:37	16:4	3	
water	5:37	0:0	4	{
decl	6:8	6:79	4	const uint32_t	*p
op	6:26	0:0	4	=
call	6:28	6:78	5	(constuint32_t*)
arg	6:47	6:78	6	f1->data[0]+y*f1->linesize[0]
water	6:47	0:0	7	f1
op	6:49	0:0	7	->
water	6:51	0:0	7	data
op	6:55	0:0	7	[
water	6:56	0:0	7	0
op	6:57	0:0	7	]
op	6:59	0:0	7	+
water	6:61	0:0	7	y
op	6:62	0:0	7	*
water	6:63	0:0	7	f1
op	6:65	0:0	7	->
water	6:67	0:0	7	linesize
op	6:75	0:0	7	[
water	6:76	0:0	7	0
op	6:77	0:0	7	]
decl	7:8	7:79	4	const uint32_t	*q
op	7:26	0:0	4	=
call	7:28	7:78	5	(constuint32_t*)
arg	7:47	7:78	6	f2->data[0]+y*f2->linesize[0]
water	7:47	0:0	7	f2
op	7:49	0:0	7	->
water	7:51	0:0	7	data
op	7:55	0:0	7	[
water	7:56	0:0	7	0
op	7:57	0:0	7	]
op	7:59	0:0	7	+
water	7:61	0:0	7	y
op	7:62	0:0	7	*
water	7:63	0:0	7	f2
op	7:65	0:0	7	->
water	7:67	0:0	7	linesize
op	7:75	0:0	7	[
water	7:76	0:0	7	0
op	7:77	0:0	7	]
for	8:8	15:8	4	(x = 0 ;x < f1 -> width;x ++)
forinit	8:13	8:18	5	x = 0 ;
water	8:13	0:0	6	x
op	8:15	0:0	6	=
water	8:17	0:0	6	0
water	8:18	0:0	6	;
cond	8:20	8:28	5	x < f1 -> width
water	8:20	0:0	6	x
op	8:22	0:0	6	<
water	8:24	0:0	6	f1
op	8:26	0:0	6	->
water	8:28	0:0	6	width
forexpr	8:35	8:36	5	x ++
water	8:35	0:0	6	x
op	8:36	0:0	6	++
stmts	8:40	15:8	5	
water	8:40	0:0	6	{
if	9:12	10:24	6	(p [ x ] == q [ x ])
cond	9:16	9:27	7	p [ x ] == q [ x ]
water	9:16	0:0	8	p
op	9:17	0:0	8	[
water	9:18	0:0	8	x
op	9:19	0:0	8	]
op	9:21	0:0	8	==
water	9:24	0:0	8	q
op	9:25	0:0	8	[
water	9:26	0:0	8	x
op	9:27	0:0	8	]
stmts	10:16	10:24	7	
continue	10:16	10:24	8	
water	11:12	0:0	6	ret
op	11:16	0:0	6	=
call	11:18	11:38	6	color_inc
arg	11:28	11:32	7	hist
water	11:28	0:0	8	hist
arg	11:34	11:38	7	p[x]
water	11:34	0:0	8	p
op	11:35	0:0	8	[
water	11:36	0:0	8	x
op	11:37	0:0	8	]
water	11:39	0:0	6	;
if	12:12	13:26	6	(ret < 0)
cond	12:16	12:22	7	ret < 0
water	12:16	0:0	8	ret
op	12:20	0:0	8	<
water	12:22	0:0	8	0
stmts	13:16	13:26	7	
return	13:16	13:26	8	ret
water	13:23	0:0	9	ret
water	14:12	0:0	6	nb_diff_colors
op	14:27	0:0	6	+=
water	14:30	0:0	6	ret
water	14:33	0:0	6	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}
return	17:4	17:25	2	nb_diff_colors
water	17:11	0:0	3	nb_diff_colors

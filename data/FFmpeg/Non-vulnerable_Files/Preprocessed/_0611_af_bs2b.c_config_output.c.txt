func	1:0	30:0	0	static int	config_output
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	29:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:36	2	Bs2bContext	*bs2b
op	4:25	0:0	2	=
water	4:27	0:0	2	ctx
op	4:30	0:0	2	->
water	4:32	0:0	2	priv
decl	5:4	5:41	2	AVFilterLink	*inlink
op	5:25	0:0	2	=
water	5:27	0:0	2	ctx
op	5:30	0:0	2	->
water	5:32	0:0	2	inputs
op	5:38	0:0	2	[
water	5:39	0:0	2	0
op	5:40	0:0	2	]
decl	6:4	6:35	2	int	srate
op	6:14	0:0	2	=
water	6:16	0:0	2	inlink
op	6:22	0:0	2	->
water	6:24	0:0	2	sample_rate
switch	7:4	25:4	2	(inlink -> format)
cond	7:12	7:20	3	inlink -> format
water	7:12	0:0	4	inlink
op	7:18	0:0	4	->
water	7:20	0:0	4	format
stmts	7:28	25:4	3	
water	7:28	0:0	4	{
label	8:4	8:25	4	case AV_SAMPLE_FMT_U8 :
water	9:8	0:0	4	bs2b
op	9:12	0:0	4	->
water	9:14	0:0	4	filter
op	9:21	0:0	4	=
water	9:23	0:0	4	bs2b_cross_feed_u8
water	9:41	0:0	4	;
break	10:8	10:13	4	
label	11:4	11:26	4	case AV_SAMPLE_FMT_S16 :
water	12:8	0:0	4	bs2b
op	12:12	0:0	4	->
water	12:14	0:0	4	filter
op	12:21	0:0	4	=
water	12:23	0:0	4	(
water	12:24	0:0	4	void
op	12:28	0:0	4	*
water	12:29	0:0	4	)
water	12:30	0:0	4	bs2b_cross_feed_s16
water	12:49	0:0	4	;
break	13:8	13:13	4	
label	14:4	14:26	4	case AV_SAMPLE_FMT_S32 :
water	15:8	0:0	4	bs2b
op	15:12	0:0	4	->
water	15:14	0:0	4	filter
op	15:21	0:0	4	=
water	15:23	0:0	4	(
water	15:24	0:0	4	void
op	15:28	0:0	4	*
water	15:29	0:0	4	)
water	15:30	0:0	4	bs2b_cross_feed_s32
water	15:49	0:0	4	;
break	16:8	16:13	4	
label	17:4	17:26	4	case AV_SAMPLE_FMT_FLT :
water	18:8	0:0	4	bs2b
op	18:12	0:0	4	->
water	18:14	0:0	4	filter
op	18:21	0:0	4	=
water	18:23	0:0	4	(
water	18:24	0:0	4	void
op	18:28	0:0	4	*
water	18:29	0:0	4	)
water	18:30	0:0	4	bs2b_cross_feed_f
water	18:47	0:0	4	;
break	19:8	19:13	4	
label	20:4	20:26	4	case AV_SAMPLE_FMT_DBL :
water	21:8	0:0	4	bs2b
op	21:12	0:0	4	->
water	21:14	0:0	4	filter
op	21:21	0:0	4	=
water	21:23	0:0	4	(
water	21:24	0:0	4	void
op	21:28	0:0	4	*
water	21:29	0:0	4	)
water	21:30	0:0	4	bs2b_cross_feed_d
water	21:47	0:0	4	;
break	22:8	22:13	4	
label	23:4	23:11	4	default :
return	24:8	24:26	4	AVERROR_BUG
water	24:15	0:0	5	AVERROR_BUG
water	25:4	0:0	4	}
if	26:4	27:30	2	(( srate < BS2B_MINSRATE ) || ( srate > BS2B_MAXSRATE ))
cond	26:8	26:57	3	( srate < BS2B_MINSRATE ) || ( srate > BS2B_MAXSRATE )
water	26:8	0:0	4	(
water	26:9	0:0	4	srate
op	26:15	0:0	4	<
water	26:17	0:0	4	BS2B_MINSRATE
water	26:30	0:0	4	)
op	26:32	0:0	4	||
water	26:35	0:0	4	(
water	26:36	0:0	4	srate
op	26:42	0:0	4	>
water	26:44	0:0	4	BS2B_MAXSRATE
water	26:57	0:0	4	)
stmts	27:8	27:30	3	
return	27:8	27:30	4	AVERROR(ENOSYS)
call	27:15	27:29	5	AVERROR
arg	27:23	27:29	6	ENOSYS
water	27:23	0:0	7	ENOSYS
call	28:4	28:37	2	bs2b_set_srate
arg	28:19	28:30	3	bs2b->bs2bp
water	28:19	0:0	4	bs2b
op	28:23	0:0	4	->
water	28:25	0:0	4	bs2bp
arg	28:32	28:37	3	srate
water	28:32	0:0	4	srate
water	28:38	0:0	2	;
return	29:4	29:12	2	0
water	29:11	0:0	3	0

func	2:0	33:4	0	static int	parse_channel_expressions
params	2:36	0:0	1	
param	2:37	2:57	2	AVFilterContext *	ctx
param	3:37	3:61	2	int	expected_nb_channels
stmnts	0:0	32:20	1	
decl	5:4	5:33	2	EvalContext	*eval
op	5:22	0:0	2	=
water	5:24	0:0	2	ctx
op	5:27	0:0	2	->
water	5:29	0:0	2	priv
decl	6:4	6:40	2	char	*args1
op	6:16	0:0	2	=
call	6:18	6:39	3	av_strdup
arg	6:28	6:39	4	eval->exprs
water	6:28	0:0	5	eval
op	6:32	0:0	5	->
water	6:34	0:0	5	exprs
decl	7:4	7:39	2	char	*expr
water	7:14	0:0	2	,
decl	7:4	7:39	2	char	*last_expr
op	7:27	0:0	2	=
water	7:29	0:0	2	NULL
water	7:33	0:0	2	,
decl	7:4	7:39	2	char	*buf
call	8:4	8:26	2	double
arg	8:12	8:26	3	*const*func1
op	8:12	0:0	4	*
water	8:14	0:0	4	const
op	8:20	0:0	4	*
water	8:21	0:0	4	func1
water	8:27	0:0	2	(
water	8:28	0:0	2	void
op	8:33	0:0	2	*
water	8:34	0:0	2	,
water	8:36	0:0	2	double
water	8:42	0:0	2	)
op	8:44	0:0	2	=
water	8:46	0:0	2	NULL
water	8:50	0:0	2	;
water	9:4	0:0	2	const
water	9:10	0:0	2	char
op	9:15	0:0	2	*
water	9:17	0:0	2	const
op	9:23	0:0	2	*
water	9:24	0:0	2	func1_names
op	9:36	0:0	2	=
water	9:38	0:0	2	NULL
water	9:42	0:0	2	;
decl	10:4	10:18	2	int	i
water	10:9	0:0	2	,
decl	10:4	10:18	2	int	ret
op	10:15	0:0	2	=
water	10:17	0:0	2	0
if	11:4	12:30	2	(! args1)
cond	11:8	11:9	3	! args1
op	11:8	0:0	4	!
water	11:9	0:0	4	args1
stmts	12:8	12:30	3	
return	12:8	12:30	4	AVERROR(ENOMEM)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	ENOMEM
water	12:23	0:0	7	ENOMEM
if	13:4	16:4	2	(! eval -> exprs)
cond	13:8	13:15	3	! eval -> exprs
op	13:8	0:0	4	!
water	13:9	0:0	4	eval
op	13:13	0:0	4	->
water	13:15	0:0	4	exprs
stmts	13:22	16:4	3	
water	13:22	0:0	4	{
call	14:8	14:72	4	av_log
arg	14:15	14:18	5	ctx
water	14:15	0:0	6	ctx
arg	14:20	14:32	5	AV_LOG_ERROR
water	14:20	0:0	6	AV_LOG_ERROR
arg	14:34	14:72	5	"Channels expressions list is empty\n"
water	14:34	0:0	6	"Channels expressions list is empty\n"
water	14:73	0:0	4	;
return	15:8	15:30	4	AVERROR(EINVAL)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	EINVAL
water	15:23	0:0	7	EINVAL
water	16:4	0:0	4	}
if	17:4	20:4	2	(!strcmp (ctx -> filter -> name ,"aeval" ))
cond	17:8	17:42	3	!strcmp (ctx -> filter -> name ,"aeval" )
op	17:8	0:0	4	!
call	17:9	17:42	4	strcmp
arg	17:16	17:33	5	ctx->filter->name
water	17:16	0:0	6	ctx
op	17:19	0:0	6	->
water	17:21	0:0	6	filter
op	17:27	0:0	6	->
water	17:29	0:0	6	name
arg	17:35	17:42	5	"aeval"
water	17:35	0:0	6	"aeval"
stmts	17:45	20:4	3	
water	17:45	0:0	4	{
water	18:8	0:0	4	func1
op	18:14	0:0	4	=
water	18:16	0:0	4	aeval_func1
water	18:27	0:0	4	;
water	19:8	0:0	4	func1_names
op	19:20	0:0	4	=
water	19:22	0:0	4	aeval_func1_names
water	19:39	0:0	4	;
water	20:4	0:0	4	}
if	22:8	26:8	2	(!av_dynarray2_add (( void * * ) & eval -> expr ,& eval -> nb_channels ,sizeof ( * eval -> expr ) ,NULL ))
cond	22:12	23:55	3	!av_dynarray2_add (( void * * ) & eval -> expr ,& eval -> nb_channels ,sizeof ( * eval -> expr ) ,NULL )
op	22:12	0:0	4	!
call	22:13	23:55	4	av_dynarray2_add
arg	22:30	22:50	5	(void**)&eval->expr
water	22:30	0:0	6	(
water	22:31	0:0	6	void
op	22:36	0:0	6	*
op	22:37	0:0	6	*
water	22:38	0:0	6	)
op	22:39	0:0	6	&
water	22:40	0:0	6	eval
op	22:44	0:0	6	->
water	22:46	0:0	6	expr
arg	22:52	22:70	5	&eval->nb_channels
op	22:52	0:0	6	&
water	22:53	0:0	6	eval
op	22:57	0:0	6	->
water	22:59	0:0	6	nb_channels
arg	23:30	23:49	5	sizeof(*eval->expr)
op	23:30	0:0	6	sizeof
water	23:36	0:0	6	(
op	23:37	0:0	6	*
water	23:38	0:0	6	eval
op	23:42	0:0	6	->
water	23:44	0:0	6	expr
water	23:48	0:0	6	)
arg	23:51	23:55	5	NULL
water	23:51	0:0	6	NULL
stmts	23:58	26:8	3	
water	23:58	0:0	4	{
water	24:12	0:0	4	ret
op	24:16	0:0	4	=
call	24:18	24:32	4	AVERROR
arg	24:26	24:32	5	ENOMEM
water	24:26	0:0	6	ENOMEM
water	24:33	0:0	4	;
goto	25:12	25:20	4	end
water	25:17	0:0	5	end
water	26:8	0:0	4	}
water	27:8	0:0	2	eval
op	27:12	0:0	2	->
water	27:14	0:0	2	expr
op	27:18	0:0	2	[
water	27:19	0:0	2	eval
op	27:23	0:0	2	->
water	27:25	0:0	2	nb_channels
op	27:36	0:0	2	-
water	27:37	0:0	2	1
op	27:38	0:0	2	]
op	27:40	0:0	2	=
water	27:42	0:0	2	NULL
water	27:46	0:0	2	;
water	28:8	0:0	2	ret
op	28:12	0:0	2	=
call	28:14	30:46	2	av_expr_parse
arg	28:28	28:62	3	&eval->expr[eval->nb_channels-1]
op	28:28	0:0	4	&
water	28:29	0:0	4	eval
op	28:33	0:0	4	->
water	28:35	0:0	4	expr
op	28:39	0:0	4	[
water	28:40	0:0	4	eval
op	28:44	0:0	4	->
water	28:46	0:0	4	nb_channels
op	28:58	0:0	4	-
water	28:60	0:0	4	1
op	28:61	0:0	4	]
arg	28:64	28:69	3	expr_
water	28:64	0:0	4	expr_
arg	29:28	29:37	3	var_names
water	29:28	0:0	4	var_names
arg	29:39	29:50	3	func1_names
water	29:39	0:0	4	func1_names
arg	29:52	29:57	3	func1
water	29:52	0:0	4	func1
arg	30:28	30:32	3	NULL
water	30:28	0:0	4	NULL
arg	30:34	30:38	3	NULL
water	30:34	0:0	4	NULL
arg	30:40	30:41	3	0
water	30:40	0:0	4	0
arg	30:43	30:46	3	ctx
water	30:43	0:0	4	ctx
water	30:47	0:0	2	;
if	31:8	32:20	2	(ret < 0)
cond	31:12	31:18	3	ret < 0
water	31:12	0:0	4	ret
op	31:16	0:0	4	<
water	31:18	0:0	4	0
stmts	32:12	32:20	3	
goto	32:12	32:20	4	end
water	32:17	0:0	5	end

func	1:0	24:0	0	static int	flush_frame
params	1:22	0:0	1	
param	1:23	1:44	2	AVFilterLink *	outlink
param	1:46	1:55	2	int	final
param	1:57	1:84	2	AVFrame * *	outsamplesref_ret
stmnts	0:0	23:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:43	2	AResampleContext	*aresample
op	4:32	0:0	2	=
water	4:34	0:0	2	ctx
op	4:37	0:0	2	->
water	4:39	0:0	2	priv
water	5:4	0:0	2	AVFilterLink
op	5:17	0:0	2	*
water	5:18	0:0	2	const
water	5:24	0:0	2	inlink
op	5:31	0:0	2	=
water	5:33	0:0	2	outlink
op	5:40	0:0	2	->
water	5:42	0:0	2	src
op	5:45	0:0	2	->
water	5:47	0:0	2	inputs
op	5:53	0:0	2	[
water	5:54	0:0	2	0
op	5:55	0:0	2	]
water	5:56	0:0	2	;
decl	6:4	6:26	2	AVFrame	*outsamplesref
decl	7:4	7:20	2	int	n_out
op	7:14	0:0	2	=
water	7:16	0:0	2	4096
decl	8:4	8:15	2	int64_t	pts
water	9:4	0:0	2	outsamplesref
op	9:18	0:0	2	=
call	9:20	9:54	2	ff_get_audio_buffer
arg	9:40	9:47	3	outlink
water	9:40	0:0	4	outlink
arg	9:49	9:54	3	n_out
water	9:49	0:0	4	n_out
water	9:55	0:0	2	;
op	10:4	0:0	2	*
water	10:5	0:0	2	outsamplesref_ret
op	10:23	0:0	2	=
water	10:25	0:0	2	outsamplesref
water	10:38	0:0	2	;
if	11:4	12:30	2	(! outsamplesref)
cond	11:8	11:9	3	! outsamplesref
op	11:8	0:0	4	!
water	11:9	0:0	4	outsamplesref
stmts	12:8	12:30	3	
return	12:8	12:30	4	AVERROR(ENOMEM)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	ENOMEM
water	12:23	0:0	7	ENOMEM
water	13:4	0:0	2	pts
op	13:8	0:0	2	=
call	13:10	13:48	2	swr_next_pts
arg	13:23	13:37	3	aresample->swr
water	13:23	0:0	4	aresample
op	13:32	0:0	4	->
water	13:34	0:0	4	swr
arg	13:39	13:48	3	INT64_MIN
water	13:39	0:0	4	INT64_MIN
water	13:49	0:0	2	;
water	14:4	0:0	2	pts
op	14:8	0:0	2	=
call	14:10	14:46	2	ROUNDED_DIV
arg	14:22	14:25	3	pts
water	14:22	0:0	4	pts
arg	14:27	14:46	3	inlink->sample_rate
water	14:27	0:0	4	inlink
op	14:33	0:0	4	->
water	14:35	0:0	4	sample_rate
water	14:47	0:0	2	;
water	15:4	0:0	2	n_out
op	15:10	0:0	2	=
call	15:12	15:130	2	swr_convert
arg	15:24	15:38	3	aresample->swr
water	15:24	0:0	4	aresample
op	15:33	0:0	4	->
water	15:35	0:0	4	swr
arg	15:40	15:68	3	outsamplesref->extended_data
water	15:40	0:0	4	outsamplesref
op	15:53	0:0	4	->
water	15:55	0:0	4	extended_data
arg	15:70	15:75	3	n_out
water	15:70	0:0	4	n_out
arg	15:77	15:127	3	final?NULL:(void*)outsamplesref->extended_data
water	15:77	0:0	4	final
water	15:83	0:0	4	?
water	15:85	0:0	4	NULL
water	15:90	0:0	4	:
water	15:92	0:0	4	(
water	15:93	0:0	4	void
op	15:97	0:0	4	*
water	15:98	0:0	4	)
water	15:99	0:0	4	outsamplesref
op	15:112	0:0	4	->
water	15:114	0:0	4	extended_data
arg	15:129	15:130	3	0
water	15:129	0:0	4	0
water	15:131	0:0	2	;
if	16:4	19:4	2	(n_out <= 0)
cond	16:8	16:17	3	n_out <= 0
water	16:8	0:0	4	n_out
op	16:14	0:0	4	<=
water	16:17	0:0	4	0
stmts	16:20	19:4	3	
water	16:20	0:0	4	{
call	17:8	17:36	4	av_frame_free
arg	17:22	17:36	5	&outsamplesref
op	17:22	0:0	6	&
water	17:23	0:0	6	outsamplesref
water	17:37	0:0	4	;
return	18:8	18:49	4	(n_out==0)?AVERROR_EOF:n_out
water	18:15	0:0	5	(
water	18:16	0:0	5	n_out
op	18:22	0:0	5	==
water	18:25	0:0	5	0
water	18:26	0:0	5	)
water	18:28	0:0	5	?
water	18:30	0:0	5	AVERROR_EOF
water	18:42	0:0	5	:
water	18:44	0:0	5	n_out
water	19:4	0:0	4	}
water	20:4	0:0	2	outsamplesref
op	20:17	0:0	2	->
water	20:19	0:0	2	sample_rate
op	20:31	0:0	2	=
water	20:33	0:0	2	outlink
op	20:40	0:0	2	->
water	20:42	0:0	2	sample_rate
water	20:53	0:0	2	;
water	21:4	0:0	2	outsamplesref
op	21:17	0:0	2	->
water	21:19	0:0	2	nb_samples
op	21:31	0:0	2	=
water	21:33	0:0	2	n_out
water	21:38	0:0	2	;
water	22:4	0:0	2	outsamplesref
op	22:17	0:0	2	->
water	22:19	0:0	2	pts
op	22:23	0:0	2	=
water	22:25	0:0	2	pts
water	22:28	0:0	2	;
return	23:4	23:12	2	0
water	23:11	0:0	3	0

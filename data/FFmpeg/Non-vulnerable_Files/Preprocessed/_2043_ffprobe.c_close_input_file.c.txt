func	1:0	11:0	0	static void	close_input_file
params	1:28	0:0	1	
param	1:29	1:45	2	InputFile *	ifile
stmnts	0:0	10:41	1	
decl	3:4	3:9	2	int	i
for	5:4	7:60	2	(i = 0 ;i < ifile -> nb_streams;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:27	3	i < ifile -> nb_streams
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	ifile
op	5:25	0:0	4	->
water	5:27	0:0	4	nb_streams
forexpr	5:39	5:40	3	i ++
water	5:39	0:0	4	i
op	5:40	0:0	4	++
stmts	6:8	7:60	3	
if	6:8	7:60	4	(ifile -> streams [ i ] . st -> codecpar -> codec_id != AV_CODEC_ID_NONE)
cond	6:12	6:56	5	ifile -> streams [ i ] . st -> codecpar -> codec_id != AV_CODEC_ID_NONE
water	6:12	0:0	6	ifile
op	6:17	0:0	6	->
water	6:19	0:0	6	streams
op	6:26	0:0	6	[
water	6:27	0:0	6	i
op	6:28	0:0	6	]
op	6:29	0:0	6	.
water	6:30	0:0	6	st
op	6:32	0:0	6	->
water	6:34	0:0	6	codecpar
op	6:42	0:0	6	->
water	6:44	0:0	6	codec_id
op	6:53	0:0	6	!=
water	6:56	0:0	6	AV_CODEC_ID_NONE
stmts	7:12	7:60	5	
call	7:12	7:59	6	avcodec_free_context
arg	7:33	7:59	7	&ifile->streams[i].dec_ctx
op	7:33	0:0	8	&
water	7:34	0:0	8	ifile
op	7:39	0:0	8	->
water	7:41	0:0	8	streams
op	7:48	0:0	8	[
water	7:49	0:0	8	i
op	7:50	0:0	8	]
op	7:51	0:0	8	.
water	7:52	0:0	8	dec_ctx
water	7:60	0:0	6	;
call	8:4	8:28	2	av_freep
arg	8:13	8:28	3	&ifile->streams
op	8:13	0:0	4	&
water	8:14	0:0	4	ifile
op	8:19	0:0	4	->
water	8:21	0:0	4	streams
water	8:29	0:0	2	;
water	9:4	0:0	2	ifile
op	9:9	0:0	2	->
water	9:11	0:0	2	nb_streams
op	9:22	0:0	2	=
water	9:24	0:0	2	0
water	9:25	0:0	2	;
call	10:4	10:40	2	avformat_close_input
arg	10:25	10:40	3	&ifile->fmt_ctx
op	10:25	0:0	4	&
water	10:26	0:0	4	ifile
op	10:31	0:0	4	->
water	10:33	0:0	4	fmt_ctx
water	10:41	0:0	2	;

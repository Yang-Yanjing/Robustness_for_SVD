func	1:0	32:0	0	static void	log_value
params	1:21	0:0	1	
param	1:22	1:38	2	void *	av_log_obj
param	1:40	1:49	2	int	level
param	1:51	1:59	2	double	d
stmnts	3:4	31:4	1	
if	3:4	5:4	2	(d == INT_MAX)
cond	3:13	3:18	3	d == INT_MAX
water	3:13	0:0	4	d
op	3:15	0:0	4	==
water	3:18	0:0	4	INT_MAX
stmts	3:27	5:4	3	
water	3:27	0:0	4	{
call	4:8	4:43	4	av_log
arg	4:15	4:25	5	av_log_obj
water	4:15	0:0	6	av_log_obj
arg	4:27	4:32	5	level
water	4:27	0:0	6	level
arg	4:34	4:43	5	"INT_MAX"
water	4:34	0:0	6	"INT_MAX"
water	4:44	0:0	4	;
water	5:4	0:0	4	}
else	5:6	7:4	2
stmts	5:11	7:4	3	
if	5:11	7:4	4	(d == INT_MIN)
cond	5:15	5:20	5	d == INT_MIN
water	5:15	0:0	6	d
op	5:17	0:0	6	==
water	5:20	0:0	6	INT_MIN
stmts	5:29	7:4	5	
water	5:29	0:0	6	{
call	6:8	6:43	6	av_log
arg	6:15	6:25	7	av_log_obj
water	6:15	0:0	8	av_log_obj
arg	6:27	6:32	7	level
water	6:27	0:0	8	level
arg	6:34	6:43	7	"INT_MIN"
water	6:34	0:0	8	"INT_MIN"
water	6:44	0:0	6	;
water	7:4	0:0	6	}
else	7:6	9:4	2
stmts	7:11	9:4	3	
if	7:11	9:4	4	(d == UINT32_MAX)
cond	7:15	7:20	5	d == UINT32_MAX
water	7:15	0:0	6	d
op	7:17	0:0	6	==
water	7:20	0:0	6	UINT32_MAX
stmts	7:32	9:4	5	
water	7:32	0:0	6	{
call	8:8	8:46	6	av_log
arg	8:15	8:25	7	av_log_obj
water	8:15	0:0	8	av_log_obj
arg	8:27	8:32	7	level
water	8:27	0:0	8	level
arg	8:34	8:46	7	"UINT32_MAX"
water	8:34	0:0	8	"UINT32_MAX"
water	8:47	0:0	6	;
water	9:4	0:0	6	}
else	9:6	11:4	2
stmts	9:11	11:4	3	
if	9:11	11:4	4	(d == ( double ) INT64_MAX)
cond	9:15	9:28	5	d == ( double ) INT64_MAX
water	9:15	0:0	6	d
op	9:17	0:0	6	==
water	9:20	0:0	6	(
water	9:21	0:0	6	double
water	9:27	0:0	6	)
water	9:28	0:0	6	INT64_MAX
stmts	9:39	11:4	5	
water	9:39	0:0	6	{
call	10:8	10:43	6	av_log
arg	10:15	10:25	7	av_log_obj
water	10:15	0:0	8	av_log_obj
arg	10:27	10:32	7	level
water	10:27	0:0	8	level
arg	10:34	10:43	7	"I64_MAX"
water	10:34	0:0	8	"I64_MAX"
water	10:44	0:0	6	;
water	11:4	0:0	6	}
else	11:6	13:4	2
stmts	11:11	13:4	3	
if	11:11	13:4	4	(d == INT64_MIN)
cond	11:15	11:20	5	d == INT64_MIN
water	11:15	0:0	6	d
op	11:17	0:0	6	==
water	11:20	0:0	6	INT64_MIN
stmts	11:31	13:4	5	
water	11:31	0:0	6	{
call	12:8	12:43	6	av_log
arg	12:15	12:25	7	av_log_obj
water	12:15	0:0	8	av_log_obj
arg	12:27	12:32	7	level
water	12:27	0:0	8	level
arg	12:34	12:43	7	"I64_MIN"
water	12:34	0:0	8	"I64_MIN"
water	12:44	0:0	6	;
water	13:4	0:0	6	}
else	13:6	15:4	2
stmts	13:11	15:4	3	
if	13:11	15:4	4	(d == FLT_MAX)
cond	13:15	13:20	5	d == FLT_MAX
water	13:15	0:0	6	d
op	13:17	0:0	6	==
water	13:20	0:0	6	FLT_MAX
stmts	13:29	15:4	5	
water	13:29	0:0	6	{
call	14:8	14:43	6	av_log
arg	14:15	14:25	7	av_log_obj
water	14:15	0:0	8	av_log_obj
arg	14:27	14:32	7	level
water	14:27	0:0	8	level
arg	14:34	14:43	7	"FLT_MAX"
water	14:34	0:0	8	"FLT_MAX"
water	14:44	0:0	6	;
water	15:4	0:0	6	}
else	15:6	17:4	2
stmts	15:11	17:4	3	
if	15:11	17:4	4	(d == FLT_MIN)
cond	15:15	15:20	5	d == FLT_MIN
water	15:15	0:0	6	d
op	15:17	0:0	6	==
water	15:20	0:0	6	FLT_MIN
stmts	15:29	17:4	5	
water	15:29	0:0	6	{
call	16:8	16:43	6	av_log
arg	16:15	16:25	7	av_log_obj
water	16:15	0:0	8	av_log_obj
arg	16:27	16:32	7	level
water	16:27	0:0	8	level
arg	16:34	16:43	7	"FLT_MIN"
water	16:34	0:0	8	"FLT_MIN"
water	16:44	0:0	6	;
water	17:4	0:0	6	}
else	17:6	19:4	2
stmts	17:11	19:4	3	
if	17:11	19:4	4	(d == - FLT_MAX)
cond	17:15	17:21	5	d == - FLT_MAX
water	17:15	0:0	6	d
op	17:17	0:0	6	==
op	17:20	0:0	6	-
water	17:21	0:0	6	FLT_MAX
stmts	17:30	19:4	5	
water	17:30	0:0	6	{
call	18:8	18:44	6	av_log
arg	18:15	18:25	7	av_log_obj
water	18:15	0:0	8	av_log_obj
arg	18:27	18:32	7	level
water	18:27	0:0	8	level
arg	18:34	18:44	7	"-FLT_MAX"
water	18:34	0:0	8	"-FLT_MAX"
water	18:45	0:0	6	;
water	19:4	0:0	6	}
else	19:6	21:4	2
stmts	19:11	21:4	3	
if	19:11	21:4	4	(d == - FLT_MIN)
cond	19:15	19:21	5	d == - FLT_MIN
water	19:15	0:0	6	d
op	19:17	0:0	6	==
op	19:20	0:0	6	-
water	19:21	0:0	6	FLT_MIN
stmts	19:30	21:4	5	
water	19:30	0:0	6	{
call	20:8	20:44	6	av_log
arg	20:15	20:25	7	av_log_obj
water	20:15	0:0	8	av_log_obj
arg	20:27	20:32	7	level
water	20:27	0:0	8	level
arg	20:34	20:44	7	"-FLT_MIN"
water	20:34	0:0	8	"-FLT_MIN"
water	20:45	0:0	6	;
water	21:4	0:0	6	}
else	21:6	23:4	2
stmts	21:11	23:4	3	
if	21:11	23:4	4	(d == DBL_MAX)
cond	21:15	21:20	5	d == DBL_MAX
water	21:15	0:0	6	d
op	21:17	0:0	6	==
water	21:20	0:0	6	DBL_MAX
stmts	21:29	23:4	5	
water	21:29	0:0	6	{
call	22:8	22:43	6	av_log
arg	22:15	22:25	7	av_log_obj
water	22:15	0:0	8	av_log_obj
arg	22:27	22:32	7	level
water	22:27	0:0	8	level
arg	22:34	22:43	7	"DBL_MAX"
water	22:34	0:0	8	"DBL_MAX"
water	22:44	0:0	6	;
water	23:4	0:0	6	}
else	23:6	25:4	2
stmts	23:11	25:4	3	
if	23:11	25:4	4	(d == DBL_MIN)
cond	23:15	23:20	5	d == DBL_MIN
water	23:15	0:0	6	d
op	23:17	0:0	6	==
water	23:20	0:0	6	DBL_MIN
stmts	23:29	25:4	5	
water	23:29	0:0	6	{
call	24:8	24:43	6	av_log
arg	24:15	24:25	7	av_log_obj
water	24:15	0:0	8	av_log_obj
arg	24:27	24:32	7	level
water	24:27	0:0	8	level
arg	24:34	24:43	7	"DBL_MIN"
water	24:34	0:0	8	"DBL_MIN"
water	24:44	0:0	6	;
water	25:4	0:0	6	}
else	25:6	27:4	2
stmts	25:11	27:4	3	
if	25:11	27:4	4	(d == - DBL_MAX)
cond	25:15	25:21	5	d == - DBL_MAX
water	25:15	0:0	6	d
op	25:17	0:0	6	==
op	25:20	0:0	6	-
water	25:21	0:0	6	DBL_MAX
stmts	25:30	27:4	5	
water	25:30	0:0	6	{
call	26:8	26:44	6	av_log
arg	26:15	26:25	7	av_log_obj
water	26:15	0:0	8	av_log_obj
arg	26:27	26:32	7	level
water	26:27	0:0	8	level
arg	26:34	26:44	7	"-DBL_MAX"
water	26:34	0:0	8	"-DBL_MAX"
water	26:45	0:0	6	;
water	27:4	0:0	6	}
else	27:6	29:4	2
stmts	27:11	29:4	3	
if	27:11	29:4	4	(d == - DBL_MIN)
cond	27:15	27:21	5	d == - DBL_MIN
water	27:15	0:0	6	d
op	27:17	0:0	6	==
op	27:20	0:0	6	-
water	27:21	0:0	6	DBL_MIN
stmts	27:30	29:4	5	
water	27:30	0:0	6	{
call	28:8	28:44	6	av_log
arg	28:15	28:25	7	av_log_obj
water	28:15	0:0	8	av_log_obj
arg	28:27	28:32	7	level
water	28:27	0:0	8	level
arg	28:34	28:44	7	"-DBL_MIN"
water	28:34	0:0	8	"-DBL_MIN"
water	28:45	0:0	6	;
water	29:4	0:0	6	}
else	29:6	31:4	2
stmts	29:11	31:4	3	
water	29:11	0:0	4	{
call	30:8	30:41	4	av_log
arg	30:15	30:25	5	av_log_obj
water	30:15	0:0	6	av_log_obj
arg	30:27	30:32	5	level
water	30:27	0:0	6	level
arg	30:34	30:38	5	"%g"
water	30:34	0:0	6	"%g"
arg	30:40	30:41	5	d
water	30:40	0:0	6	d
water	30:42	0:0	4	;
water	31:4	0:0	4	}

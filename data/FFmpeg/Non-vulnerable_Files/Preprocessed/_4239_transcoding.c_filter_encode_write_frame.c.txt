func	1:0	39:0	0	static int	filter_encode_write_frame
params	1:36	0:0	1	
param	1:37	1:51	2	AVFrame *	frame
param	1:53	1:78	2	unsigned int	stream_index
stmnts	0:0	38:14	1	
decl	3:4	3:11	2	int	ret
decl	4:4	4:23	2	AVFrame	*filt_frame
call	5:4	5:66	2	av_log
arg	5:11	5:15	3	NULL
water	5:11	0:0	4	NULL
arg	5:17	5:28	3	AV_LOG_INFO
water	5:17	0:0	4	AV_LOG_INFO
arg	5:30	5:66	3	"Pushing decoded frame to filters\n"
water	5:30	0:0	4	"Pushing decoded frame to filters\n"
water	5:67	0:0	2	;
water	7:4	0:0	2	ret
op	7:8	0:0	2	=
call	7:10	8:20	2	av_buffersrc_add_frame_flags
arg	7:39	7:77	3	filter_ctx[stream_index].buffersrc_ctx
water	7:39	0:0	4	filter_ctx
op	7:49	0:0	4	[
water	7:50	0:0	4	stream_index
op	7:62	0:0	4	]
op	7:63	0:0	4	.
water	7:64	0:0	4	buffersrc_ctx
arg	8:12	8:17	3	frame
water	8:12	0:0	4	frame
arg	8:19	8:20	3	0
water	8:19	0:0	4	0
water	8:21	0:0	2	;
if	9:4	12:4	2	(ret < 0)
cond	9:8	9:14	3	ret < 0
water	9:8	0:0	4	ret
op	9:12	0:0	4	<
water	9:14	0:0	4	0
stmts	9:17	12:4	3	
water	9:17	0:0	4	{
call	10:8	10:74	4	av_log
arg	10:15	10:19	5	NULL
water	10:15	0:0	6	NULL
arg	10:21	10:33	5	AV_LOG_ERROR
water	10:21	0:0	6	AV_LOG_ERROR
arg	10:35	10:74	5	"Error while feeding the filtergraph\n"
water	10:35	0:0	6	"Error while feeding the filtergraph\n"
water	10:75	0:0	4	;
return	11:8	11:18	4	ret
water	11:15	0:0	5	ret
water	12:4	0:0	4	}
while	14:4	37:4	2	(1)
cond	14:11	14:11	3	1
water	14:11	0:0	4	1
stmts	14:14	37:4	3	
water	14:14	0:0	4	{
water	15:8	0:0	4	filt_frame
op	15:19	0:0	4	=
call	15:21	15:36	4	av_frame_alloc
water	15:37	0:0	4	;
if	16:8	19:8	4	(! filt_frame)
cond	16:12	16:13	5	! filt_frame
op	16:12	0:0	6	!
water	16:13	0:0	6	filt_frame
stmts	16:25	19:8	5	
water	16:25	0:0	6	{
water	17:12	0:0	6	ret
op	17:16	0:0	6	=
call	17:18	17:32	6	AVERROR
arg	17:26	17:32	7	ENOMEM
water	17:26	0:0	8	ENOMEM
water	17:33	0:0	6	;
break	18:12	18:17	6	
water	19:8	0:0	6	}
call	20:8	20:73	4	av_log
arg	20:15	20:19	5	NULL
water	20:15	0:0	6	NULL
arg	20:21	20:32	5	AV_LOG_INFO
water	20:21	0:0	6	AV_LOG_INFO
arg	20:34	20:73	5	"Pulling filtered frame from filters\n"
water	20:34	0:0	6	"Pulling filtered frame from filters\n"
water	20:74	0:0	4	;
water	21:8	0:0	4	ret
op	21:12	0:0	4	=
call	21:14	22:26	4	av_buffersink_get_frame
arg	21:38	21:77	5	filter_ctx[stream_index].buffersink_ctx
water	21:38	0:0	6	filter_ctx
op	21:48	0:0	6	[
water	21:49	0:0	6	stream_index
op	21:61	0:0	6	]
op	21:62	0:0	6	.
water	21:63	0:0	6	buffersink_ctx
arg	22:16	22:26	5	filt_frame
water	22:16	0:0	6	filt_frame
water	22:27	0:0	4	;
if	23:8	32:8	4	(ret < 0)
cond	23:12	23:18	5	ret < 0
water	23:12	0:0	6	ret
op	23:16	0:0	6	<
water	23:18	0:0	6	0
stmts	23:21	32:8	5	
water	23:21	0:0	6	{
if	28:12	29:23	6	(ret ==AVERROR (EAGAIN ) || ret == AVERROR_EOF)
cond	28:16	28:49	7	ret ==AVERROR (EAGAIN ) || ret == AVERROR_EOF
water	28:16	0:0	8	ret
op	28:20	0:0	8	==
call	28:23	28:37	8	AVERROR
arg	28:31	28:37	9	EAGAIN
water	28:31	0:0	10	EAGAIN
op	28:39	0:0	8	||
water	28:42	0:0	8	ret
op	28:46	0:0	8	==
water	28:49	0:0	8	AVERROR_EOF
stmts	29:16	29:23	7	
water	29:16	0:0	8	ret
op	29:20	0:0	8	=
water	29:22	0:0	8	0
water	29:23	0:0	8	;
call	30:12	30:37	6	av_frame_free
arg	30:26	30:37	7	&filt_frame
op	30:26	0:0	8	&
water	30:27	0:0	8	filt_frame
water	30:38	0:0	6	;
break	31:12	31:17	6	
water	32:8	0:0	6	}
water	33:8	0:0	4	filt_frame
op	33:18	0:0	4	->
water	33:20	0:0	4	pict_type
op	33:30	0:0	4	=
water	33:32	0:0	4	AV_PICTURE_TYPE_NONE
water	33:52	0:0	4	;
water	34:8	0:0	4	ret
op	34:12	0:0	4	=
call	34:14	34:63	4	encode_write_frame
arg	34:33	34:43	5	filt_frame
water	34:33	0:0	6	filt_frame
arg	34:45	34:57	5	stream_index
water	34:45	0:0	6	stream_index
arg	34:59	34:63	5	NULL
water	34:59	0:0	6	NULL
water	34:64	0:0	4	;
if	35:8	36:17	4	(ret < 0)
cond	35:12	35:18	5	ret < 0
water	35:12	0:0	6	ret
op	35:16	0:0	6	<
water	35:18	0:0	6	0
stmts	36:12	36:17	5	
break	36:12	36:17	6	
water	37:4	0:0	4	}
return	38:4	38:14	2	ret
water	38:11	0:0	3	ret

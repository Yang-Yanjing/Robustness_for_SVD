func	1:0	17:0	0	static double	find_peak_magnitude
params	1:33	0:0	1	
param	1:34	1:48	2	AVFrame *	frame
param	1:50	1:61	2	int	channel
stmnts	0:0	16:14	1	
decl	3:4	3:28	2	double	max
op	3:15	0:0	2	=
water	3:17	0:0	2	DBL_EPSILON
decl	4:4	4:12	2	int	c
water	4:9	0:0	2	,
decl	4:4	4:12	2	int	i
if	5:4	11:4	2	(channel == - 1)
cond	5:8	5:20	3	channel == - 1
water	5:8	0:0	4	channel
op	5:16	0:0	4	==
op	5:19	0:0	4	-
water	5:20	0:0	4	1
stmts	5:23	11:4	3	
water	5:23	0:0	4	{
for	6:8	10:8	4	(c = 0 ;c <av_frame_get_channels (frame );c ++)
forinit	6:13	6:18	5	c = 0 ;
water	6:13	0:0	6	c
op	6:15	0:0	6	=
water	6:17	0:0	6	0
water	6:18	0:0	6	;
cond	6:20	6:51	5	c <av_frame_get_channels (frame )
water	6:20	0:0	6	c
op	6:22	0:0	6	<
call	6:24	6:51	6	av_frame_get_channels
arg	6:46	6:51	7	frame
water	6:46	0:0	8	frame
forexpr	6:54	6:55	5	c ++
water	6:54	0:0	6	c
op	6:55	0:0	6	++
stmts	6:59	10:8	5	
water	6:59	0:0	6	{
decl	7:12	7:64	6	double	*data_ptr
op	7:29	0:0	6	=
water	7:31	0:0	6	(
water	7:32	0:0	6	double
op	7:39	0:0	6	*
water	7:40	0:0	6	)
water	7:41	0:0	6	frame
op	7:46	0:0	6	->
water	7:48	0:0	6	extended_data
op	7:61	0:0	6	[
water	7:62	0:0	6	c
op	7:63	0:0	6	]
for	8:12	9:51	6	(i = 0 ;i < frame -> nb_samples;i ++)
forinit	8:17	8:22	7	i = 0 ;
water	8:17	0:0	8	i
op	8:19	0:0	8	=
water	8:21	0:0	8	0
water	8:22	0:0	8	;
cond	8:24	8:35	7	i < frame -> nb_samples
water	8:24	0:0	8	i
op	8:26	0:0	8	<
water	8:28	0:0	8	frame
op	8:33	0:0	8	->
water	8:35	0:0	8	nb_samples
forexpr	8:47	8:48	7	i ++
water	8:47	0:0	8	i
op	8:48	0:0	8	++
stmts	9:16	9:51	7	
water	9:16	0:0	8	max
op	9:20	0:0	8	=
call	9:22	9:50	8	FFMAX
arg	9:28	9:31	9	max
water	9:28	0:0	10	max
arg	9:33	9:50	9	fabs(data_ptr[i])
call	9:33	9:49	10	fabs
arg	9:38	9:49	11	data_ptr[i]
water	9:38	0:0	12	data_ptr
op	9:46	0:0	12	[
water	9:47	0:0	12	i
op	9:48	0:0	12	]
water	9:51	0:0	8	;
water	10:8	0:0	6	}
water	11:4	0:0	4	}
else	11:6	15:4	2
stmts	11:11	15:4	3	
water	11:11	0:0	4	{
decl	12:8	12:66	4	double	*data_ptr
op	12:25	0:0	4	=
water	12:27	0:0	4	(
water	12:28	0:0	4	double
op	12:35	0:0	4	*
water	12:36	0:0	4	)
water	12:37	0:0	4	frame
op	12:42	0:0	4	->
water	12:44	0:0	4	extended_data
op	12:57	0:0	4	[
water	12:58	0:0	4	channel
op	12:65	0:0	4	]
for	13:8	14:47	4	(i = 0 ;i < frame -> nb_samples;i ++)
forinit	13:13	13:18	5	i = 0 ;
water	13:13	0:0	6	i
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:31	5	i < frame -> nb_samples
water	13:20	0:0	6	i
op	13:22	0:0	6	<
water	13:24	0:0	6	frame
op	13:29	0:0	6	->
water	13:31	0:0	6	nb_samples
forexpr	13:43	13:44	5	i ++
water	13:43	0:0	6	i
op	13:44	0:0	6	++
stmts	14:12	14:47	5	
water	14:12	0:0	6	max
op	14:16	0:0	6	=
call	14:18	14:46	6	FFMAX
arg	14:24	14:27	7	max
water	14:24	0:0	8	max
arg	14:29	14:46	7	fabs(data_ptr[i])
call	14:29	14:45	8	fabs
arg	14:34	14:45	9	data_ptr[i]
water	14:34	0:0	10	data_ptr
op	14:42	0:0	10	[
water	14:43	0:0	10	i
op	14:44	0:0	10	]
water	14:47	0:0	6	;
water	15:4	0:0	4	}
return	16:4	16:14	2	max
water	16:11	0:0	3	max

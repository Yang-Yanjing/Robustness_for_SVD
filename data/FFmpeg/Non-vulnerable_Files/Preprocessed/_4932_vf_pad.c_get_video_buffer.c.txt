func	1:0	19:0	0	static AVFrame *	get_video_buffer
params	1:32	0:0	1	
param	1:33	1:53	2	AVFilterLink *	inlink
param	1:55	1:60	2	int	w
param	1:62	1:67	2	int	h
stmnts	0:0	18:16	1	
decl	3:4	3:37	2	PadContext	*s
op	3:18	0:0	2	=
water	3:20	0:0	2	inlink
op	3:26	0:0	2	->
water	3:28	0:0	2	dst
op	3:31	0:0	2	->
water	3:33	0:0	2	priv
decl	4:4	6:62	2	AVFrame	*frame
op	4:19	0:0	2	=
call	4:21	6:61	3	ff_get_video_buffer
arg	4:41	4:64	4	inlink->dst->outputs[0]
water	4:41	0:0	5	inlink
op	4:47	0:0	5	->
water	4:49	0:0	5	dst
op	4:52	0:0	5	->
water	4:54	0:0	5	outputs
op	4:61	0:0	5	[
water	4:62	0:0	5	0
op	4:63	0:0	5	]
arg	5:41	5:61	4	w+(s->w-s->in_w)
water	5:41	0:0	5	w
op	5:43	0:0	5	+
water	5:45	0:0	5	(
water	5:46	0:0	5	s
op	5:47	0:0	5	->
water	5:49	0:0	5	w
op	5:51	0:0	5	-
water	5:53	0:0	5	s
op	5:54	0:0	5	->
water	5:56	0:0	5	in_w
water	5:60	0:0	5	)
arg	6:41	6:61	4	h+(s->h-s->in_h)
water	6:41	0:0	5	h
op	6:43	0:0	5	+
water	6:45	0:0	5	(
water	6:46	0:0	5	s
op	6:47	0:0	5	->
water	6:49	0:0	5	h
op	6:51	0:0	5	-
water	6:53	0:0	5	s
op	6:54	0:0	5	->
water	6:56	0:0	5	in_h
water	6:60	0:0	5	)
decl	7:4	7:13	2	int	plane
if	8:4	9:19	2	(! frame)
cond	8:8	8:9	3	! frame
op	8:8	0:0	4	!
water	8:9	0:0	4	frame
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
water	10:4	0:0	2	frame
op	10:9	0:0	2	->
water	10:11	0:0	2	width
op	10:18	0:0	2	=
water	10:20	0:0	2	w
water	10:21	0:0	2	;
water	11:4	0:0	2	frame
op	11:9	0:0	2	->
water	11:11	0:0	2	height
op	11:18	0:0	2	=
water	11:20	0:0	2	h
water	11:21	0:0	2	;
for	12:4	17:4	2	(plane = 0 ;plane < 4 && frame -> data [ plane ] && frame -> linesize [ plane ];plane ++)
forinit	12:9	12:18	3	plane = 0 ;
water	12:9	0:0	4	plane
op	12:15	0:0	4	=
water	12:17	0:0	4	0
water	12:18	0:0	4	;
cond	12:20	12:76	3	plane < 4 && frame -> data [ plane ] && frame -> linesize [ plane ]
water	12:20	0:0	4	plane
op	12:26	0:0	4	<
water	12:28	0:0	4	4
op	12:30	0:0	4	&&
water	12:33	0:0	4	frame
op	12:38	0:0	4	->
water	12:40	0:0	4	data
op	12:44	0:0	4	[
water	12:45	0:0	4	plane
op	12:50	0:0	4	]
op	12:52	0:0	4	&&
water	12:55	0:0	4	frame
op	12:60	0:0	4	->
water	12:62	0:0	4	linesize
op	12:70	0:0	4	[
water	12:71	0:0	4	plane
op	12:76	0:0	4	]
forexpr	12:79	12:84	3	plane ++
water	12:79	0:0	4	plane
op	12:84	0:0	4	++
stmts	12:88	17:4	3	
water	12:88	0:0	4	{
decl	13:8	13:38	4	int	hsub
op	13:17	0:0	4	=
water	13:19	0:0	4	s
op	13:20	0:0	4	->
water	13:22	0:0	4	draw
op	13:26	0:0	4	.
water	13:27	0:0	4	hsub
op	13:31	0:0	4	[
water	13:32	0:0	4	plane
op	13:37	0:0	4	]
decl	14:8	14:38	4	int	vsub
op	14:17	0:0	4	=
water	14:19	0:0	4	s
op	14:20	0:0	4	->
water	14:22	0:0	4	draw
op	14:26	0:0	4	.
water	14:27	0:0	4	vsub
op	14:31	0:0	4	[
water	14:32	0:0	4	plane
op	14:37	0:0	4	]
water	15:8	0:0	4	frame
op	15:13	0:0	4	->
water	15:15	0:0	4	data
op	15:19	0:0	4	[
water	15:20	0:0	4	plane
op	15:25	0:0	4	]
op	15:27	0:0	4	+=
water	15:30	0:0	4	(
water	15:31	0:0	4	s
op	15:32	0:0	4	->
water	15:34	0:0	4	x
op	15:36	0:0	4	>>
water	15:39	0:0	4	hsub
water	15:43	0:0	4	)
op	15:45	0:0	4	*
water	15:47	0:0	4	s
op	15:48	0:0	4	->
water	15:50	0:0	4	draw
op	15:54	0:0	4	.
water	15:55	0:0	4	pixelstep
op	15:64	0:0	4	[
water	15:65	0:0	4	plane
op	15:70	0:0	4	]
op	15:72	0:0	4	+
water	16:30	0:0	4	(
water	16:31	0:0	4	s
op	16:32	0:0	4	->
water	16:34	0:0	4	y
op	16:36	0:0	4	>>
water	16:39	0:0	4	vsub
water	16:43	0:0	4	)
op	16:45	0:0	4	*
water	16:47	0:0	4	frame
op	16:52	0:0	4	->
water	16:54	0:0	4	linesize
op	16:62	0:0	4	[
water	16:63	0:0	4	plane
op	16:68	0:0	4	]
water	16:69	0:0	4	;
water	17:4	0:0	4	}
return	18:4	18:16	2	frame
water	18:11	0:0	3	frame

func	1:0	35:0	0	static void	enable_tracks
params	1:25	0:0	1	
param	1:26	1:44	2	AVFormatContext *	s
stmnts	0:0	34:4	1	
decl	3:4	3:37	2	MOVMuxContext	*mov
op	3:23	0:0	2	=
water	3:25	0:0	2	s
op	3:26	0:0	2	->
water	3:28	0:0	2	priv_data
decl	4:4	4:9	2	int	i
decl	5:4	5:32	2	int	enabled[AVMEDIA_TYPE_NB]
decl	6:4	6:30	2	int	first[AVMEDIA_TYPE_NB]
for	7:4	10:4	2	(i = 0 ;i < AVMEDIA_TYPE_NB;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	i < AVMEDIA_TYPE_NB
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	AVMEDIA_TYPE_NB
forexpr	7:37	7:38	3	i ++
water	7:37	0:0	4	i
op	7:38	0:0	4	++
stmts	7:42	10:4	3	
water	7:42	0:0	4	{
water	8:8	0:0	4	enabled
op	8:15	0:0	4	[
water	8:16	0:0	4	i
op	8:17	0:0	4	]
op	8:19	0:0	4	=
water	8:21	0:0	4	0
water	8:22	0:0	4	;
water	9:8	0:0	4	first
op	9:13	0:0	4	[
water	9:14	0:0	4	i
op	9:15	0:0	4	]
op	9:17	0:0	4	=
op	9:19	0:0	4	-
water	9:20	0:0	4	1
water	9:21	0:0	4	;
water	10:4	0:0	4	}
for	11:4	22:4	2	(i = 0 ;i < s -> nb_streams;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:23	3	i < s -> nb_streams
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	s
op	11:21	0:0	4	->
water	11:23	0:0	4	nb_streams
forexpr	11:35	11:36	3	i ++
water	11:35	0:0	4	i
op	11:36	0:0	4	++
stmts	11:40	22:4	3	
water	11:40	0:0	4	{
decl	12:8	12:36	4	AVStream	*st
op	12:21	0:0	4	=
water	12:23	0:0	4	s
op	12:24	0:0	4	->
water	12:26	0:0	4	streams
op	12:33	0:0	4	[
water	12:34	0:0	4	i
op	12:35	0:0	4	]
if	13:8	15:20	4	(st -> codec -> codec_type <= AVMEDIA_TYPE_UNKNOWN || st -> codec -> codec_type >= AVMEDIA_TYPE_NB)
cond	13:12	14:37	5	st -> codec -> codec_type <= AVMEDIA_TYPE_UNKNOWN || st -> codec -> codec_type >= AVMEDIA_TYPE_NB
water	13:12	0:0	6	st
op	13:14	0:0	6	->
water	13:16	0:0	6	codec
op	13:21	0:0	6	->
water	13:23	0:0	6	codec_type
op	13:34	0:0	6	<=
water	13:37	0:0	6	AVMEDIA_TYPE_UNKNOWN
op	13:58	0:0	6	||
water	14:12	0:0	6	st
op	14:14	0:0	6	->
water	14:16	0:0	6	codec
op	14:21	0:0	6	->
water	14:23	0:0	6	codec_type
op	14:34	0:0	6	>=
water	14:37	0:0	6	AVMEDIA_TYPE_NB
stmts	15:12	15:20	5	
continue	15:12	15:20	6	
if	16:8	17:44	4	(first [ st -> codec -> codec_type ] < 0)
cond	16:12	16:43	5	first [ st -> codec -> codec_type ] < 0
water	16:12	0:0	6	first
op	16:17	0:0	6	[
water	16:18	0:0	6	st
op	16:20	0:0	6	->
water	16:22	0:0	6	codec
op	16:27	0:0	6	->
water	16:29	0:0	6	codec_type
op	16:39	0:0	6	]
op	16:41	0:0	6	<
water	16:43	0:0	6	0
stmts	17:12	17:44	5	
water	17:12	0:0	6	first
op	17:17	0:0	6	[
water	17:18	0:0	6	st
op	17:20	0:0	6	->
water	17:22	0:0	6	codec
op	17:27	0:0	6	->
water	17:29	0:0	6	codec_type
op	17:39	0:0	6	]
op	17:41	0:0	6	=
water	17:43	0:0	6	i
water	17:44	0:0	6	;
if	18:8	21:8	4	(st -> disposition & AV_DISPOSITION_DEFAULT)
cond	18:12	18:30	5	st -> disposition & AV_DISPOSITION_DEFAULT
water	18:12	0:0	6	st
op	18:14	0:0	6	->
water	18:16	0:0	6	disposition
op	18:28	0:0	6	&
water	18:30	0:0	6	AV_DISPOSITION_DEFAULT
stmts	18:54	21:8	5	
water	18:54	0:0	6	{
water	19:12	0:0	6	mov
op	19:15	0:0	6	->
water	19:17	0:0	6	tracks
op	19:23	0:0	6	[
water	19:24	0:0	6	i
op	19:25	0:0	6	]
op	19:26	0:0	6	.
water	19:27	0:0	6	flags
op	19:33	0:0	6	|=
water	19:36	0:0	6	MOV_TRACK_ENABLED
water	19:53	0:0	6	;
water	20:12	0:0	6	enabled
op	20:19	0:0	6	[
water	20:20	0:0	6	st
op	20:22	0:0	6	->
water	20:24	0:0	6	codec
op	20:29	0:0	6	->
water	20:31	0:0	6	codec_type
op	20:41	0:0	6	]
op	20:42	0:0	6	++
water	20:44	0:0	6	;
water	21:8	0:0	6	}
water	22:4	0:0	4	}
for	23:4	34:4	2	(i = 0 ;i < AVMEDIA_TYPE_NB;i ++)
forinit	23:9	23:14	3	i = 0 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	0
water	23:14	0:0	4	;
cond	23:16	23:20	3	i < AVMEDIA_TYPE_NB
water	23:16	0:0	4	i
op	23:18	0:0	4	<
water	23:20	0:0	4	AVMEDIA_TYPE_NB
forexpr	23:37	23:38	3	i ++
water	23:37	0:0	4	i
op	23:38	0:0	4	++
stmts	23:42	34:4	3	
water	23:42	0:0	4	{
switch	24:8	33:8	4	(i)
cond	24:16	24:16	5	i
water	24:16	0:0	6	i
stmts	24:19	33:8	5	
water	24:19	0:0	6	{
label	25:8	25:31	6	case AVMEDIA_TYPE_VIDEO :
label	26:8	26:31	6	case AVMEDIA_TYPE_AUDIO :
label	27:8	27:34	6	case AVMEDIA_TYPE_SUBTITLE :
if	28:12	29:44	6	(enabled [ i ] > 1)
cond	28:16	28:29	7	enabled [ i ] > 1
water	28:16	0:0	8	enabled
op	28:23	0:0	8	[
water	28:24	0:0	8	i
op	28:25	0:0	8	]
op	28:27	0:0	8	>
water	28:29	0:0	8	1
stmts	29:16	29:44	7	
water	29:16	0:0	8	mov
op	29:19	0:0	8	->
water	29:21	0:0	8	per_stream_grouping
op	29:41	0:0	8	=
water	29:43	0:0	8	1
water	29:44	0:0	8	;
if	30:12	31:64	6	(! enabled [ i ] && first [ i ] >= 0)
cond	30:16	30:43	7	! enabled [ i ] && first [ i ] >= 0
op	30:16	0:0	8	!
water	30:17	0:0	8	enabled
op	30:24	0:0	8	[
water	30:25	0:0	8	i
op	30:26	0:0	8	]
op	30:28	0:0	8	&&
water	30:31	0:0	8	first
op	30:36	0:0	8	[
water	30:37	0:0	8	i
op	30:38	0:0	8	]
op	30:40	0:0	8	>=
water	30:43	0:0	8	0
stmts	31:16	31:64	7	
water	31:16	0:0	8	mov
op	31:19	0:0	8	->
water	31:21	0:0	8	tracks
op	31:27	0:0	8	[
water	31:28	0:0	8	first
op	31:33	0:0	8	[
water	31:34	0:0	8	i
op	31:35	0:0	8	]
op	31:36	0:0	8	]
op	31:37	0:0	8	.
water	31:38	0:0	8	flags
op	31:44	0:0	8	|=
water	31:47	0:0	8	MOV_TRACK_ENABLED
water	31:64	0:0	8	;
break	32:12	32:17	6	
water	33:8	0:0	6	}
water	34:4	0:0	4	}

func	1:0	55:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	3:4	54:12	1	
call	3:4	3:33	2	av_log_set_level
arg	3:21	3:33	3	AV_LOG_TRACE
water	3:21	0:0	4	AV_LOG_TRACE
water	3:34	0:0	2	;
decl	4:4	4:32	2	AVDictionary	*options
op	4:26	0:0	2	=
water	4:28	0:0	2	NULL
decl	5:4	5:46	2	AVIOContext	*client
op	5:24	0:0	2	=
water	5:26	0:0	2	NULL
water	5:30	0:0	2	,
decl	5:4	5:46	2	AVIOContext	*server
op	5:40	0:0	2	=
water	5:42	0:0	2	NULL
decl	6:4	6:32	2	const char	*in_uri
water	6:22	0:0	2	,
decl	6:4	6:32	2	const char	*out_uri
decl	7:4	7:16	2	int	ret
water	7:11	0:0	2	,
decl	7:4	7:16	2	int	pid
if	8:4	13:4	2	(argc < 3)
cond	8:8	8:15	3	argc < 3
water	8:8	0:0	4	argc
op	8:13	0:0	4	<
water	8:15	0:0	4	3
stmts	8:18	13:4	3	
water	8:18	0:0	4	{
call	9:8	11:28	4	printf
arg	9:15	11:19	5	"usage: %s input http://hostname[:port]\n""API example program to serve http to multiple clients.\n""\n"
water	9:15	0:0	6	"usage: %s input http://hostname[:port]\n"
water	10:15	0:0	6	"API example program to serve http to multiple clients.\n"
water	11:15	0:0	6	"\n"
arg	11:21	11:28	5	argv[0]
water	11:21	0:0	6	argv
op	11:25	0:0	6	[
water	11:26	0:0	6	0
op	11:27	0:0	6	]
water	11:29	0:0	4	;
return	12:8	12:16	4	1
water	12:15	0:0	5	1
water	13:4	0:0	4	}
water	14:4	0:0	2	in_uri
op	14:11	0:0	2	=
water	14:13	0:0	2	argv
op	14:17	0:0	2	[
water	14:18	0:0	2	1
op	14:19	0:0	2	]
water	14:20	0:0	2	;
water	15:4	0:0	2	out_uri
op	15:12	0:0	2	=
water	15:14	0:0	2	argv
op	15:18	0:0	2	[
water	15:19	0:0	2	2
op	15:20	0:0	2	]
water	15:21	0:0	2	;
call	16:4	16:20	2	av_register_all
water	16:21	0:0	2	;
call	17:4	17:26	2	avformat_network_init
water	17:27	0:0	2	;
if	18:4	21:4	2	(( ret =av_dict_set (& options ,"listen" ,"2" ,0 ) ) < 0)
cond	18:8	18:58	3	( ret =av_dict_set (& options ,"listen" ,"2" ,0 ) ) < 0
water	18:8	0:0	4	(
water	18:9	0:0	4	ret
op	18:13	0:0	4	=
call	18:15	18:53	4	av_dict_set
arg	18:27	18:35	5	&options
op	18:27	0:0	6	&
water	18:28	0:0	6	options
arg	18:37	18:45	5	"listen"
water	18:37	0:0	6	"listen"
arg	18:47	18:50	5	"2"
water	18:47	0:0	6	"2"
arg	18:52	18:53	5	0
water	18:52	0:0	6	0
water	18:54	0:0	4	)
op	18:56	0:0	4	<
water	18:58	0:0	4	0
stmts	18:61	21:4	3	
water	18:61	0:0	4	{
call	19:8	19:85	4	fprintf
arg	19:16	19:22	5	stderr
water	19:16	0:0	6	stderr
arg	19:24	19:68	5	"Failed to set listen mode for server: %s\n"
water	19:24	0:0	6	"Failed to set listen mode for server: %s\n"
arg	19:70	19:85	5	av_err2str(ret)
call	19:70	19:84	6	av_err2str
arg	19:81	19:84	7	ret
water	19:81	0:0	8	ret
water	19:86	0:0	4	;
return	20:8	20:18	4	ret
water	20:15	0:0	5	ret
water	21:4	0:0	4	}
if	22:4	25:4	2	(( ret =avio_open2 (& server ,out_uri ,AVIO_FLAG_WRITE ,NULL ,& options ) ) < 0)
cond	22:8	22:80	3	( ret =avio_open2 (& server ,out_uri ,AVIO_FLAG_WRITE ,NULL ,& options ) ) < 0
water	22:8	0:0	4	(
water	22:9	0:0	4	ret
op	22:13	0:0	4	=
call	22:15	22:75	4	avio_open2
arg	22:26	22:33	5	&server
op	22:26	0:0	6	&
water	22:27	0:0	6	server
arg	22:35	22:42	5	out_uri
water	22:35	0:0	6	out_uri
arg	22:44	22:59	5	AVIO_FLAG_WRITE
water	22:44	0:0	6	AVIO_FLAG_WRITE
arg	22:61	22:65	5	NULL
water	22:61	0:0	6	NULL
arg	22:67	22:75	5	&options
op	22:67	0:0	6	&
water	22:68	0:0	6	options
water	22:76	0:0	4	)
op	22:78	0:0	4	<
water	22:80	0:0	4	0
stmts	22:83	25:4	3	
water	22:83	0:0	4	{
call	23:8	23:70	4	fprintf
arg	23:16	23:22	5	stderr
water	23:16	0:0	6	stderr
arg	23:24	23:53	5	"Failed to open server: %s\n"
water	23:24	0:0	6	"Failed to open server: %s\n"
arg	23:55	23:70	5	av_err2str(ret)
call	23:55	23:69	6	av_err2str
arg	23:66	23:69	7	ret
water	23:66	0:0	8	ret
water	23:71	0:0	4	;
return	24:8	24:18	4	ret
water	24:15	0:0	5	ret
water	25:4	0:0	4	}
call	26:4	26:43	2	fprintf
arg	26:12	26:18	3	stderr
water	26:12	0:0	4	stderr
arg	26:20	26:43	3	"Entering main loop.\n"
water	26:20	0:0	4	"Entering main loop.\n"
water	26:44	0:0	2	;
for	27:4	47:4	2	(;;)
forinit	27:8	27:8	3	;
water	27:8	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	27:12	47:4	3	
water	27:12	0:0	4	{
if	28:8	29:20	4	(( ret =avio_accept (server ,& client ) ) < 0)
cond	28:12	28:51	5	( ret =avio_accept (server ,& client ) ) < 0
water	28:12	0:0	6	(
water	28:13	0:0	6	ret
op	28:17	0:0	6	=
call	28:19	28:46	6	avio_accept
arg	28:31	28:37	7	server
water	28:31	0:0	8	server
arg	28:39	28:46	7	&client
op	28:39	0:0	8	&
water	28:40	0:0	8	client
water	28:47	0:0	6	)
op	28:49	0:0	6	<
water	28:51	0:0	6	0
stmts	29:12	29:20	5	
goto	29:12	29:20	6	end
water	29:17	0:0	7	end
call	30:8	30:61	4	fprintf
arg	30:16	30:22	5	stderr
water	30:16	0:0	6	stderr
arg	30:24	30:61	5	"Accepted client, forking process.\n"
water	30:24	0:0	6	"Accepted client, forking process.\n"
water	30:62	0:0	4	;
water	33:8	0:0	4	pid
op	33:12	0:0	4	=
call	33:14	33:19	4	fork
water	33:20	0:0	4	;
if	34:8	38:8	4	(pid < 0)
cond	34:12	34:18	5	pid < 0
water	34:12	0:0	6	pid
op	34:16	0:0	6	<
water	34:18	0:0	6	0
stmts	34:21	38:8	5	
water	34:21	0:0	6	{
call	35:12	35:32	6	perror
arg	35:19	35:32	7	"Fork failed"
water	35:19	0:0	8	"Fork failed"
water	35:33	0:0	6	;
water	36:12	0:0	6	ret
op	36:16	0:0	6	=
call	36:18	36:31	6	AVERROR
arg	36:26	36:31	7	errno
water	36:26	0:0	8	errno
water	36:32	0:0	6	;
goto	37:12	37:20	6	end
water	37:17	0:0	7	end
water	38:8	0:0	6	}
if	39:8	44:8	4	(pid == 0)
cond	39:12	39:19	5	pid == 0
water	39:12	0:0	6	pid
op	39:16	0:0	6	==
water	39:19	0:0	6	0
stmts	39:22	44:8	5	
water	39:22	0:0	6	{
call	40:12	40:41	6	fprintf
arg	40:20	40:26	7	stderr
water	40:20	0:0	8	stderr
arg	40:28	40:41	7	"In child.\n"
water	40:28	0:0	8	"In child.\n"
water	40:42	0:0	6	;
call	41:12	41:41	6	process_client
arg	41:27	41:33	7	client
water	41:27	0:0	8	client
arg	41:35	41:41	7	in_uri
water	41:35	0:0	8	in_uri
water	41:42	0:0	6	;
call	42:12	42:29	6	avio_close
arg	42:23	42:29	7	server
water	42:23	0:0	8	server
water	42:30	0:0	6	;
call	43:12	43:18	6	exit
arg	43:17	43:18	7	0
water	43:17	0:0	8	0
water	43:19	0:0	6	;
water	44:8	0:0	6	}
if	45:8	46:30	4	(pid > 0)
cond	45:12	45:18	5	pid > 0
water	45:12	0:0	6	pid
op	45:16	0:0	6	>
water	45:18	0:0	6	0
stmts	46:12	46:30	5	
call	46:12	46:29	6	avio_close
arg	46:23	46:29	7	client
water	46:23	0:0	8	client
water	46:30	0:0	6	;
water	47:4	0:0	4	}
label	48:0	48:3	2	end :
call	49:4	49:21	2	avio_close
arg	49:15	49:21	3	server
water	49:15	0:0	4	server
water	49:22	0:0	2	;
if	50:4	53:4	2	(ret < 0 && ret != AVERROR_EOF)
cond	50:8	50:26	3	ret < 0 && ret != AVERROR_EOF
water	50:8	0:0	4	ret
op	50:12	0:0	4	<
water	50:14	0:0	4	0
op	50:16	0:0	4	&&
water	50:19	0:0	4	ret
op	50:23	0:0	4	!=
water	50:26	0:0	4	AVERROR_EOF
stmts	50:39	53:4	3	
water	50:39	0:0	4	{
call	51:8	51:69	4	fprintf
arg	51:16	51:22	5	stderr
water	51:16	0:0	6	stderr
arg	51:24	51:52	5	"Some errors occurred: %s\n"
water	51:24	0:0	6	"Some errors occurred: %s\n"
arg	51:54	51:69	5	av_err2str(ret)
call	51:54	51:68	6	av_err2str
arg	51:65	51:68	7	ret
water	51:65	0:0	8	ret
water	51:70	0:0	4	;
return	52:8	52:16	4	1
water	52:15	0:0	5	1
water	53:4	0:0	4	}
return	54:4	54:12	2	0
water	54:11	0:0	3	0

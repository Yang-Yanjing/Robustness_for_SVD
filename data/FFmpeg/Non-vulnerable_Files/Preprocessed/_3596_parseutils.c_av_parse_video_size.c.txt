func	1:0	28:0	0	int	av_parse_video_size
params	1:23	0:0	1	
param	1:24	1:38	2	int *	width_ptr
param	1:40	1:55	2	int *	height_ptr
param	1:57	1:72	2	const char *	str
stmnts	0:0	27:12	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:44	2	int	n
op	4:10	0:0	2	=
call	4:12	4:43	3	FF_ARRAY_ELEMS
arg	4:27	4:43	4	video_size_abbrs
water	4:27	0:0	5	video_size_abbrs
decl	5:4	5:17	2	const char	*p
decl	6:4	6:29	2	int	width
op	6:14	0:0	2	=
water	6:16	0:0	2	0
water	6:17	0:0	2	,
decl	6:4	6:29	2	int	height
op	6:26	0:0	2	=
water	6:28	0:0	2	0
for	7:4	13:4	2	(i = 0 ;i < n;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	i < n
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	n
forexpr	7:23	7:24	3	i ++
water	7:23	0:0	4	i
op	7:24	0:0	4	++
stmts	7:28	13:4	3	
water	7:28	0:0	4	{
if	8:8	12:8	4	(!strcmp (video_size_abbrs [ i ] . abbr ,str ))
cond	8:12	8:49	5	!strcmp (video_size_abbrs [ i ] . abbr ,str )
op	8:12	0:0	6	!
call	8:13	8:49	6	strcmp
arg	8:20	8:44	7	video_size_abbrs[i].abbr
water	8:20	0:0	8	video_size_abbrs
op	8:36	0:0	8	[
water	8:37	0:0	8	i
op	8:38	0:0	8	]
op	8:39	0:0	8	.
water	8:40	0:0	8	abbr
arg	8:46	8:49	7	str
water	8:46	0:0	8	str
stmts	8:52	12:8	5	
water	8:52	0:0	6	{
water	9:12	0:0	6	width
op	9:19	0:0	6	=
water	9:21	0:0	6	video_size_abbrs
op	9:37	0:0	6	[
water	9:38	0:0	6	i
op	9:39	0:0	6	]
op	9:40	0:0	6	.
water	9:41	0:0	6	width
water	9:46	0:0	6	;
water	10:12	0:0	6	height
op	10:19	0:0	6	=
water	10:21	0:0	6	video_size_abbrs
op	10:37	0:0	6	[
water	10:38	0:0	6	i
op	10:39	0:0	6	]
op	10:40	0:0	6	.
water	10:41	0:0	6	height
water	10:47	0:0	6	;
break	11:12	11:17	6	
water	12:8	0:0	6	}
water	13:4	0:0	4	}
if	14:4	22:4	2	(i == n)
cond	14:8	14:13	3	i == n
water	14:8	0:0	4	i
op	14:10	0:0	4	==
water	14:13	0:0	4	n
stmts	14:16	22:4	3	
water	14:16	0:0	4	{
water	15:8	0:0	4	width
op	15:14	0:0	4	=
call	15:16	15:41	4	strtol
arg	15:23	15:26	5	str
water	15:23	0:0	6	str
arg	15:28	15:37	5	(void*)&p
water	15:28	0:0	6	(
water	15:29	0:0	6	void
op	15:33	0:0	6	*
water	15:34	0:0	6	)
op	15:35	0:0	6	&
water	15:36	0:0	6	p
arg	15:39	15:41	5	10
water	15:39	0:0	6	10
water	15:42	0:0	4	;
if	16:8	17:15	4	(* p)
cond	16:12	16:13	5	* p
op	16:12	0:0	6	*
water	16:13	0:0	6	p
stmts	17:12	17:15	5	
water	17:12	0:0	6	p
op	17:13	0:0	6	++
water	17:15	0:0	6	;
water	18:8	0:0	4	height
op	18:15	0:0	4	=
call	18:17	18:40	4	strtol
arg	18:24	18:25	5	p
water	18:24	0:0	6	p
arg	18:27	18:36	5	(void*)&p
water	18:27	0:0	6	(
water	18:28	0:0	6	void
op	18:32	0:0	6	*
water	18:33	0:0	6	)
op	18:34	0:0	6	&
water	18:35	0:0	6	p
arg	18:38	18:40	5	10
water	18:38	0:0	6	10
water	18:41	0:0	4	;
if	20:8	21:34	4	(* p)
cond	20:12	20:13	5	* p
op	20:12	0:0	6	*
water	20:13	0:0	6	p
stmts	21:12	21:34	5	
return	21:12	21:34	6	AVERROR(EINVAL)
call	21:19	21:33	7	AVERROR
arg	21:27	21:33	8	EINVAL
water	21:27	0:0	9	EINVAL
water	22:4	0:0	4	}
if	23:4	24:30	2	(width <= 0 || height <= 0)
cond	23:8	23:32	3	width <= 0 || height <= 0
water	23:8	0:0	4	width
op	23:14	0:0	4	<=
water	23:17	0:0	4	0
op	23:19	0:0	4	||
water	23:22	0:0	4	height
op	23:29	0:0	4	<=
water	23:32	0:0	4	0
stmts	24:8	24:30	3	
return	24:8	24:30	4	AVERROR(EINVAL)
call	24:15	24:29	5	AVERROR
arg	24:23	24:29	6	EINVAL
water	24:23	0:0	7	EINVAL
op	25:4	0:0	2	*
water	25:5	0:0	2	width_ptr
op	25:16	0:0	2	=
water	25:18	0:0	2	width
water	25:23	0:0	2	;
op	26:4	0:0	2	*
water	26:5	0:0	2	height_ptr
op	26:16	0:0	2	=
water	26:18	0:0	2	height
water	26:24	0:0	2	;
return	27:4	27:12	2	0
water	27:11	0:0	3	0

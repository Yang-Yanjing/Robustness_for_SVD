func	1:0	22:0	0	static int	mpeg_decode_motion
params	1:29	0:0	1	
param	1:30	1:47	2	MpegEncContext *	s
param	1:49	1:58	2	int	fcode
param	1:60	1:68	2	int	pred
stmnts	0:0	21:38	1	
decl	3:4	3:30	2	int	code
water	3:12	0:0	2	,
decl	3:4	3:30	2	int	sign
water	3:18	0:0	2	,
decl	3:4	3:30	2	int	val
water	3:23	0:0	2	,
decl	3:4	3:30	2	int	shift
water	4:4	0:0	2	code
op	4:9	0:0	2	=
call	4:11	4:59	2	get_vlc2
arg	4:20	4:26	3	&s->gb
op	4:20	0:0	4	&
water	4:21	0:0	4	s
op	4:22	0:0	4	->
water	4:24	0:0	4	gb
arg	4:28	4:43	3	ff_mv_vlc.table
water	4:28	0:0	4	ff_mv_vlc
op	4:37	0:0	4	.
water	4:38	0:0	4	table
arg	4:45	4:56	3	MV_VLC_BITS
water	4:45	0:0	4	MV_VLC_BITS
arg	4:58	4:59	3	2
water	4:58	0:0	4	2
water	4:60	0:0	2	;
if	5:4	6:19	2	(code == 0)
cond	5:8	5:16	3	code == 0
water	5:8	0:0	4	code
op	5:13	0:0	4	==
water	5:16	0:0	4	0
stmts	6:8	6:19	3	
return	6:8	6:19	4	pred
water	6:15	0:0	5	pred
if	7:4	8:21	2	(code < 0)
cond	7:8	7:15	3	code < 0
water	7:8	0:0	4	code
op	7:13	0:0	4	<
water	7:15	0:0	4	0
stmts	8:8	8:21	3	
return	8:8	8:21	4	0xffff
water	8:15	0:0	5	0
water	8:16	0:0	5	xffff
water	9:4	0:0	2	sign
op	9:10	0:0	2	=
call	9:12	9:28	2	get_bits1
arg	9:22	9:28	3	&s->gb
op	9:22	0:0	4	&
water	9:23	0:0	4	s
op	9:24	0:0	4	->
water	9:26	0:0	4	gb
water	9:29	0:0	2	;
water	10:4	0:0	2	shift
op	10:10	0:0	2	=
water	10:12	0:0	2	fcode
op	10:18	0:0	2	-
water	10:20	0:0	2	1
water	10:21	0:0	2	;
water	11:4	0:0	2	val
op	11:10	0:0	2	=
water	11:12	0:0	2	code
water	11:16	0:0	2	;
if	12:4	16:4	2	(shift)
cond	12:8	12:8	3	shift
water	12:8	0:0	4	shift
stmts	12:15	16:4	3	
water	12:15	0:0	4	{
water	13:8	0:0	4	val
op	13:13	0:0	4	=
water	13:15	0:0	4	(
water	13:16	0:0	4	val
op	13:20	0:0	4	-
water	13:22	0:0	4	1
water	13:23	0:0	4	)
op	13:25	0:0	4	<<
water	13:28	0:0	4	shift
water	13:33	0:0	4	;
water	14:8	0:0	4	val
op	14:12	0:0	4	|=
call	14:15	14:37	4	get_bits
arg	14:24	14:30	5	&s->gb
op	14:24	0:0	6	&
water	14:25	0:0	6	s
op	14:26	0:0	6	->
water	14:28	0:0	6	gb
arg	14:32	14:37	5	shift
water	14:32	0:0	6	shift
water	14:38	0:0	4	;
water	15:8	0:0	4	val
op	15:11	0:0	4	++
water	15:13	0:0	4	;
water	16:4	0:0	4	}
if	17:4	18:18	2	(sign)
cond	17:8	17:8	3	sign
water	17:8	0:0	4	sign
stmts	18:8	18:18	3	
water	18:8	0:0	4	val
op	18:12	0:0	4	=
op	18:14	0:0	4	-
water	18:15	0:0	4	val
water	18:18	0:0	4	;
water	19:4	0:0	2	val
op	19:8	0:0	2	+=
water	19:11	0:0	2	pred
water	19:15	0:0	2	;
return	21:4	21:38	2	sign_extend(val,5+shift)
call	21:11	21:37	3	sign_extend
arg	21:23	21:26	4	val
water	21:23	0:0	5	val
arg	21:28	21:37	4	5+shift
water	21:28	0:0	5	5
op	21:30	0:0	5	+
water	21:32	0:0	5	shift

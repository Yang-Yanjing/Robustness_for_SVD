func	1:0	19:0	0	static int	create_subcc_streams
params	1:31	0:0	1	
param	1:32	1:54	2	AVFormatContext *	avctx
stmnts	0:0	18:12	1	
decl	3:4	3:42	2	LavfiContext	*lavfi
op	3:24	0:0	2	=
water	3:26	0:0	2	avctx
op	3:31	0:0	2	->
water	3:33	0:0	2	priv_data
decl	4:4	4:16	2	AVStream	*st
decl	5:4	5:28	2	int	stream_idx
water	5:18	0:0	2	,
decl	5:4	5:28	2	int	sink_idx
for	6:4	17:4	2	(stream_idx = 0 ;stream_idx < lavfi -> nb_sinks;stream_idx ++)
forinit	6:9	6:23	3	stream_idx = 0 ;
water	6:9	0:0	4	stream_idx
op	6:20	0:0	4	=
water	6:22	0:0	4	0
water	6:23	0:0	4	;
cond	6:25	6:45	3	stream_idx < lavfi -> nb_sinks
water	6:25	0:0	4	stream_idx
op	6:36	0:0	4	<
water	6:38	0:0	4	lavfi
op	6:43	0:0	4	->
water	6:45	0:0	4	nb_sinks
forexpr	6:55	6:65	3	stream_idx ++
water	6:55	0:0	4	stream_idx
op	6:65	0:0	4	++
stmts	6:69	17:4	3	
water	6:69	0:0	4	{
water	7:8	0:0	4	sink_idx
op	7:17	0:0	4	=
water	7:19	0:0	4	lavfi
op	7:24	0:0	4	->
water	7:26	0:0	4	stream_sink_map
op	7:41	0:0	4	[
water	7:42	0:0	4	stream_idx
op	7:52	0:0	4	]
water	7:53	0:0	4	;
if	8:8	14:8	4	(lavfi -> sink_stream_subcc_map [ sink_idx ])
cond	8:12	8:49	5	lavfi -> sink_stream_subcc_map [ sink_idx ]
water	8:12	0:0	6	lavfi
op	8:17	0:0	6	->
water	8:19	0:0	6	sink_stream_subcc_map
op	8:40	0:0	6	[
water	8:41	0:0	6	sink_idx
op	8:49	0:0	6	]
stmts	8:52	14:8	5	
water	8:52	0:0	6	{
water	9:12	0:0	6	lavfi
op	9:17	0:0	6	->
water	9:19	0:0	6	sink_stream_subcc_map
op	9:40	0:0	6	[
water	9:41	0:0	6	sink_idx
op	9:49	0:0	6	]
op	9:51	0:0	6	=
water	9:53	0:0	6	avctx
op	9:58	0:0	6	->
water	9:60	0:0	6	nb_streams
water	9:70	0:0	6	;
if	10:12	11:38	6	(! ( st =avformat_new_stream (avctx ,NULL ) ))
cond	10:16	10:55	7	! ( st =avformat_new_stream (avctx ,NULL ) )
op	10:16	0:0	8	!
water	10:17	0:0	8	(
water	10:18	0:0	8	st
op	10:21	0:0	8	=
call	10:23	10:54	8	avformat_new_stream
arg	10:43	10:48	9	avctx
water	10:43	0:0	10	avctx
arg	10:50	10:54	9	NULL
water	10:50	0:0	10	NULL
water	10:55	0:0	8	)
stmts	11:16	11:38	7	
return	11:16	11:38	8	AVERROR(ENOMEM)
call	11:23	11:37	9	AVERROR
arg	11:31	11:37	10	ENOMEM
water	11:31	0:0	11	ENOMEM
water	12:12	0:0	6	st
op	12:14	0:0	6	->
water	12:16	0:0	6	codec
op	12:21	0:0	6	->
water	12:23	0:0	6	codec_id
op	12:32	0:0	6	=
water	12:34	0:0	6	AV_CODEC_ID_EIA_608
water	12:53	0:0	6	;
water	13:12	0:0	6	st
op	13:14	0:0	6	->
water	13:16	0:0	6	codec
op	13:21	0:0	6	->
water	13:23	0:0	6	codec_type
op	13:34	0:0	6	=
water	13:36	0:0	6	AVMEDIA_TYPE_SUBTITLE
water	13:57	0:0	6	;
water	14:8	0:0	6	}
else	14:10	16:8	4
stmts	14:15	16:8	5	
water	14:15	0:0	6	{
water	15:12	0:0	6	lavfi
op	15:17	0:0	6	->
water	15:19	0:0	6	sink_stream_subcc_map
op	15:40	0:0	6	[
water	15:41	0:0	6	sink_idx
op	15:49	0:0	6	]
op	15:51	0:0	6	=
op	15:53	0:0	6	-
water	15:54	0:0	6	1
water	15:55	0:0	6	;
water	16:8	0:0	6	}
water	17:4	0:0	4	}
return	18:4	18:12	2	0
water	18:11	0:0	3	0

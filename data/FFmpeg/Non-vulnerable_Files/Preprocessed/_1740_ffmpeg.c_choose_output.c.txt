func	1:0	21:0	0	static OutputStream *	choose_output
params	1:34	0:0	1	
param	1:35	1:39	2	void
stmnts	0:0	20:18	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:32	2	int64_t	opts_min
op	4:21	0:0	2	=
water	4:23	0:0	2	INT64_MAX
decl	5:4	5:32	2	OutputStream	*ost_min
op	5:26	0:0	2	=
water	5:28	0:0	2	NULL
for	6:4	19:4	2	(i = 0 ;i < nb_output_streams;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:20	3	i < nb_output_streams
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	nb_output_streams
forexpr	6:39	6:40	3	i ++
water	6:39	0:0	4	i
op	6:40	0:0	4	++
stmts	6:44	19:4	3	
water	6:44	0:0	4	{
decl	7:8	7:45	4	OutputStream	*ost
op	7:26	0:0	4	=
water	7:28	0:0	4	output_streams
op	7:42	0:0	4	[
water	7:43	0:0	4	i
op	7:44	0:0	4	]
decl	8:8	10:51	4	int64_t	opts
op	8:21	0:0	4	=
water	8:23	0:0	4	ost
op	8:26	0:0	4	->
water	8:28	0:0	4	st
op	8:30	0:0	4	->
water	8:32	0:0	4	cur_dts
op	8:40	0:0	4	==
water	8:43	0:0	4	AV_NOPTS_VALUE
water	8:58	0:0	4	?
water	8:60	0:0	4	INT64_MIN
water	8:70	0:0	4	:
call	9:23	10:50	5	av_rescale_q
arg	9:36	9:52	6	ost->st->cur_dts
water	9:36	0:0	7	ost
op	9:39	0:0	7	->
water	9:41	0:0	7	st
op	9:43	0:0	7	->
water	9:45	0:0	7	cur_dts
arg	9:54	9:72	6	ost->st->time_base
water	9:54	0:0	7	ost
op	9:57	0:0	7	->
water	9:59	0:0	7	st
op	9:61	0:0	7	->
water	9:63	0:0	7	time_base
arg	10:36	10:50	6	AV_TIME_BASE_Q
water	10:36	0:0	7	AV_TIME_BASE_Q
if	11:8	12:123	4	(ost -> st -> cur_dts == AV_NOPTS_VALUE)
cond	11:12	11:32	5	ost -> st -> cur_dts == AV_NOPTS_VALUE
water	11:12	0:0	6	ost
op	11:15	0:0	6	->
water	11:17	0:0	6	st
op	11:19	0:0	6	->
water	11:21	0:0	6	cur_dts
op	11:29	0:0	6	==
water	11:32	0:0	6	AV_NOPTS_VALUE
stmts	12:12	12:123	5	
call	12:12	12:122	6	av_log
arg	12:19	12:23	7	NULL
water	12:19	0:0	8	NULL
arg	12:25	12:37	7	AV_LOG_DEBUG
water	12:25	0:0	8	AV_LOG_DEBUG
arg	12:39	12:122	7	"cur_dts is invalid (this is harmless if it occurs once at the start per stream)\n"
water	12:39	0:0	8	"cur_dts is invalid (this is harmless if it occurs once at the start per stream)\n"
water	12:123	0:0	6	;
if	13:8	14:22	4	(! ost -> initialized && ! ost -> inputs_done)
cond	13:12	13:39	5	! ost -> initialized && ! ost -> inputs_done
op	13:12	0:0	6	!
water	13:13	0:0	6	ost
op	13:16	0:0	6	->
water	13:18	0:0	6	initialized
op	13:30	0:0	6	&&
op	13:33	0:0	6	!
water	13:34	0:0	6	ost
op	13:37	0:0	6	->
water	13:39	0:0	6	inputs_done
stmts	14:12	14:22	5	
return	14:12	14:22	6	ost
water	14:19	0:0	7	ost
if	15:8	18:8	4	(! ost -> finished && opts < opts_min)
cond	15:12	15:37	5	! ost -> finished && opts < opts_min
op	15:12	0:0	6	!
water	15:13	0:0	6	ost
op	15:16	0:0	6	->
water	15:18	0:0	6	finished
op	15:27	0:0	6	&&
water	15:30	0:0	6	opts
op	15:35	0:0	6	<
water	15:37	0:0	6	opts_min
stmts	15:47	18:8	5	
water	15:47	0:0	6	{
water	16:12	0:0	6	opts_min
op	16:21	0:0	6	=
water	16:23	0:0	6	opts
water	16:27	0:0	6	;
water	17:12	0:0	6	ost_min
op	17:21	0:0	6	=
water	17:23	0:0	6	ost
op	17:26	0:0	6	->
water	17:28	0:0	6	unavailable
water	17:40	0:0	6	?
water	17:42	0:0	6	NULL
water	17:47	0:0	6	:
water	17:49	0:0	6	ost
water	17:52	0:0	6	;
water	18:8	0:0	6	}
water	19:4	0:0	4	}
return	20:4	20:18	2	ost_min
water	20:11	0:0	3	ost_min

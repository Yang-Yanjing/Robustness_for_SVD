func	1:0	28:0	0	static int	set_control
params	1:22	0:0	1	
param	1:23	1:43	2	AVFilterContext *	ctx
param	1:45	1:63	2	unsigned long	port
param	1:65	1:82	2	LADSPA_Data	value
stmnts	0:0	27:12	1	
decl	3:4	3:32	2	LADSPAContext	*s
op	3:21	0:0	2	=
water	3:23	0:0	2	ctx
op	3:26	0:0	2	->
water	3:28	0:0	2	priv
decl	4:4	4:38	2	const char	*label
op	4:22	0:0	2	=
water	4:24	0:0	2	s
op	4:25	0:0	2	->
water	4:27	0:0	2	desc
op	4:31	0:0	2	->
water	4:33	0:0	2	Label
decl	5:4	6:44	2	LADSPA_PortRangeHint	*h
op	5:28	0:0	2	=
water	5:30	0:0	2	(
water	5:31	0:0	2	LADSPA_PortRangeHint
op	5:52	0:0	2	*
water	5:53	0:0	2	)
water	5:54	0:0	2	s
op	5:55	0:0	2	->
water	5:57	0:0	2	desc
op	5:61	0:0	2	->
water	5:63	0:0	2	PortRangeHints
op	5:78	0:0	2	+
water	6:30	0:0	2	s
op	6:31	0:0	2	->
water	6:33	0:0	2	icmap
op	6:38	0:0	2	[
water	6:39	0:0	2	port
op	6:43	0:0	2	]
if	7:4	11:4	2	(port >= s -> nb_inputcontrols)
cond	7:8	7:19	3	port >= s -> nb_inputcontrols
water	7:8	0:0	4	port
op	7:13	0:0	4	>=
water	7:16	0:0	4	s
op	7:17	0:0	4	->
water	7:19	0:0	4	nb_inputcontrols
stmts	7:37	11:4	3	
water	7:37	0:0	4	{
call	8:8	9:40	4	av_log
arg	8:15	8:18	5	ctx
water	8:15	0:0	6	ctx
arg	8:20	8:32	5	AV_LOG_ERROR
water	8:20	0:0	6	AV_LOG_ERROR
arg	8:34	8:77	5	"Control c%ld is out of range [0 - %lu].\n"
water	8:34	0:0	6	"Control c%ld is out of range [0 - %lu].\n"
arg	9:15	9:19	5	port
water	9:15	0:0	6	port
arg	9:21	9:40	5	s->nb_inputcontrols
water	9:21	0:0	6	s
op	9:22	0:0	6	->
water	9:24	0:0	6	nb_inputcontrols
water	9:41	0:0	4	;
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
water	11:4	0:0	4	}
if	12:4	18:4	2	(LADSPA_IS_HINT_BOUNDED_BELOW (h -> HintDescriptor ) && value < h -> LowerBound)
cond	12:8	13:23	3	LADSPA_IS_HINT_BOUNDED_BELOW (h -> HintDescriptor ) && value < h -> LowerBound
call	12:8	12:54	4	LADSPA_IS_HINT_BOUNDED_BELOW
arg	12:37	12:54	5	h->HintDescriptor
water	12:37	0:0	6	h
op	12:38	0:0	6	->
water	12:40	0:0	6	HintDescriptor
op	12:56	0:0	4	&&
water	13:12	0:0	4	value
op	13:18	0:0	4	<
water	13:20	0:0	4	h
op	13:21	0:0	4	->
water	13:23	0:0	4	LowerBound
stmts	13:35	18:4	3	
water	13:35	0:0	4	{
call	14:8	16:42	4	av_log
arg	14:15	14:18	5	ctx
water	14:15	0:0	6	ctx
arg	14:20	14:32	5	AV_LOG_ERROR
water	14:20	0:0	6	AV_LOG_ERROR
arg	15:16	15:76	5	"%s: input control c%ld is below lower boundary of %0.4f.\n"
water	15:16	0:0	6	"%s: input control c%ld is below lower boundary of %0.4f.\n"
arg	16:16	16:21	5	label
water	16:16	0:0	6	label
arg	16:23	16:27	5	port
water	16:23	0:0	6	port
arg	16:29	16:42	5	h->LowerBound
water	16:29	0:0	6	h
op	16:30	0:0	6	->
water	16:32	0:0	6	LowerBound
water	16:43	0:0	4	;
return	17:8	17:30	4	AVERROR(EINVAL)
call	17:15	17:29	5	AVERROR
arg	17:23	17:29	6	EINVAL
water	17:23	0:0	7	EINVAL
water	18:4	0:0	4	}
if	19:4	25:4	2	(LADSPA_IS_HINT_BOUNDED_ABOVE (h -> HintDescriptor ) && value > h -> UpperBound)
cond	19:8	20:23	3	LADSPA_IS_HINT_BOUNDED_ABOVE (h -> HintDescriptor ) && value > h -> UpperBound
call	19:8	19:54	4	LADSPA_IS_HINT_BOUNDED_ABOVE
arg	19:37	19:54	5	h->HintDescriptor
water	19:37	0:0	6	h
op	19:38	0:0	6	->
water	19:40	0:0	6	HintDescriptor
op	19:56	0:0	4	&&
water	20:12	0:0	4	value
op	20:18	0:0	4	>
water	20:20	0:0	4	h
op	20:21	0:0	4	->
water	20:23	0:0	4	UpperBound
stmts	20:35	25:4	3	
water	20:35	0:0	4	{
call	21:8	23:42	4	av_log
arg	21:15	21:18	5	ctx
water	21:15	0:0	6	ctx
arg	21:20	21:32	5	AV_LOG_ERROR
water	21:20	0:0	6	AV_LOG_ERROR
arg	22:16	22:76	5	"%s: input control c%ld is above upper boundary of %0.4f.\n"
water	22:16	0:0	6	"%s: input control c%ld is above upper boundary of %0.4f.\n"
arg	23:16	23:21	5	label
water	23:16	0:0	6	label
arg	23:23	23:27	5	port
water	23:23	0:0	6	port
arg	23:29	23:42	5	h->UpperBound
water	23:29	0:0	6	h
op	23:30	0:0	6	->
water	23:32	0:0	6	UpperBound
water	23:43	0:0	4	;
return	24:8	24:30	4	AVERROR(EINVAL)
call	24:15	24:29	5	AVERROR
arg	24:23	24:29	6	EINVAL
water	24:23	0:0	7	EINVAL
water	25:4	0:0	4	}
water	26:4	0:0	2	s
op	26:5	0:0	2	->
water	26:7	0:0	2	ictlv
op	26:12	0:0	2	[
water	26:13	0:0	2	port
op	26:17	0:0	2	]
op	26:19	0:0	2	=
water	26:21	0:0	2	value
water	26:26	0:0	2	;
return	27:4	27:12	2	0
water	27:11	0:0	3	0

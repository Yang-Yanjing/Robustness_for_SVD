func	1:0	110:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	109:14	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:28	2	ZPContext	*s
op	5:17	0:0	2	=
water	5:19	0:0	2	ctx
op	5:22	0:0	2	->
water	5:24	0:0	2	priv
decl	6:4	6:55	2	double	var_values[VARS_NB]
water	6:30	0:0	2	,
decl	6:4	6:55	2	double	nb_frames
water	6:41	0:0	2	,
decl	6:4	6:55	2	double	zoom
water	6:47	0:0	2	,
decl	6:4	6:55	2	double	dx
water	6:51	0:0	2	,
decl	6:4	6:55	2	double	dy
decl	7:4	7:68	2	const AVPixFmtDescriptor	*desc
op	7:35	0:0	2	=
call	7:37	7:67	3	av_pix_fmt_desc_get
arg	7:57	7:67	4	in->format
water	7:57	0:0	5	in
op	7:59	0:0	5	->
water	7:61	0:0	5	format
decl	8:4	8:23	2	AVFrame	*out
op	8:17	0:0	2	=
water	8:19	0:0	2	NULL
decl	9:4	9:33	2	int	i
water	9:9	0:0	2	,
decl	9:4	9:33	2	int	k
water	9:12	0:0	2	,
decl	9:4	9:33	2	int	x
water	9:15	0:0	2	,
decl	9:4	9:33	2	int	y
water	9:18	0:0	2	,
decl	9:4	9:33	2	int	w
water	9:21	0:0	2	,
decl	9:4	9:33	2	int	h
water	9:24	0:0	2	,
decl	9:4	9:33	2	int	ret
op	9:30	0:0	2	=
water	9:32	0:0	2	0
water	10:4	0:0	2	var_values
op	10:14	0:0	2	[
water	10:15	0:0	2	VAR_IN_W
op	10:23	0:0	2	]
op	10:26	0:0	2	=
water	10:28	0:0	2	var_values
op	10:38	0:0	2	[
water	10:39	0:0	2	VAR_IW
op	10:45	0:0	2	]
op	10:47	0:0	2	=
water	10:49	0:0	2	in
op	10:51	0:0	2	->
water	10:53	0:0	2	width
water	10:58	0:0	2	;
water	11:4	0:0	2	var_values
op	11:14	0:0	2	[
water	11:15	0:0	2	VAR_IN_H
op	11:23	0:0	2	]
op	11:26	0:0	2	=
water	11:28	0:0	2	var_values
op	11:38	0:0	2	[
water	11:39	0:0	2	VAR_IH
op	11:45	0:0	2	]
op	11:47	0:0	2	=
water	11:49	0:0	2	in
op	11:51	0:0	2	->
water	11:53	0:0	2	height
water	11:59	0:0	2	;
water	12:4	0:0	2	var_values
op	12:14	0:0	2	[
water	12:15	0:0	2	VAR_OUT_W
op	12:24	0:0	2	]
op	12:26	0:0	2	=
water	12:28	0:0	2	var_values
op	12:38	0:0	2	[
water	12:39	0:0	2	VAR_OW
op	12:45	0:0	2	]
op	12:47	0:0	2	=
water	12:49	0:0	2	s
op	12:50	0:0	2	->
water	12:52	0:0	2	w
water	12:53	0:0	2	;
water	13:4	0:0	2	var_values
op	13:14	0:0	2	[
water	13:15	0:0	2	VAR_OUT_H
op	13:24	0:0	2	]
op	13:26	0:0	2	=
water	13:28	0:0	2	var_values
op	13:38	0:0	2	[
water	13:39	0:0	2	VAR_OH
op	13:45	0:0	2	]
op	13:47	0:0	2	=
water	13:49	0:0	2	s
op	13:50	0:0	2	->
water	13:52	0:0	2	h
water	13:53	0:0	2	;
water	14:4	0:0	2	var_values
op	14:14	0:0	2	[
water	14:15	0:0	2	VAR_IN
op	14:21	0:0	2	]
op	14:26	0:0	2	=
water	14:28	0:0	2	inlink
op	14:34	0:0	2	->
water	14:36	0:0	2	frame_count
op	14:48	0:0	2	+
water	14:50	0:0	2	1
water	14:51	0:0	2	;
water	15:4	0:0	2	var_values
op	15:14	0:0	2	[
water	15:15	0:0	2	VAR_ON
op	15:21	0:0	2	]
op	15:26	0:0	2	=
water	15:28	0:0	2	outlink
op	15:35	0:0	2	->
water	15:37	0:0	2	frame_count
op	15:49	0:0	2	+
water	15:51	0:0	2	1
water	15:52	0:0	2	;
water	16:4	0:0	2	var_values
op	16:14	0:0	2	[
water	16:15	0:0	2	VAR_PX
op	16:21	0:0	2	]
op	16:26	0:0	2	=
water	16:28	0:0	2	s
op	16:29	0:0	2	->
water	16:31	0:0	2	x
water	16:32	0:0	2	;
water	17:4	0:0	2	var_values
op	17:14	0:0	2	[
water	17:15	0:0	2	VAR_PY
op	17:21	0:0	2	]
op	17:26	0:0	2	=
water	17:28	0:0	2	s
op	17:29	0:0	2	->
water	17:31	0:0	2	y
water	17:32	0:0	2	;
water	18:4	0:0	2	var_values
op	18:14	0:0	2	[
water	18:15	0:0	2	VAR_X
op	18:20	0:0	2	]
op	18:26	0:0	2	=
water	18:28	0:0	2	0
water	18:29	0:0	2	;
water	19:4	0:0	2	var_values
op	19:14	0:0	2	[
water	19:15	0:0	2	VAR_Y
op	19:20	0:0	2	]
op	19:26	0:0	2	=
water	19:28	0:0	2	0
water	19:29	0:0	2	;
water	20:4	0:0	2	var_values
op	20:14	0:0	2	[
water	20:15	0:0	2	VAR_PZOOM
op	20:24	0:0	2	]
op	20:26	0:0	2	=
water	20:28	0:0	2	s
op	20:29	0:0	2	->
water	20:31	0:0	2	prev_zoom
water	20:40	0:0	2	;
water	21:4	0:0	2	var_values
op	21:14	0:0	2	[
water	21:15	0:0	2	VAR_ZOOM
op	21:23	0:0	2	]
op	21:26	0:0	2	=
water	21:28	0:0	2	1
water	21:29	0:0	2	;
water	22:4	0:0	2	var_values
op	22:14	0:0	2	[
water	22:15	0:0	2	VAR_PDURATION
op	22:28	0:0	2	]
op	22:30	0:0	2	=
water	22:32	0:0	2	s
op	22:33	0:0	2	->
water	22:35	0:0	2	prev_nb_frames
water	22:49	0:0	2	;
water	23:4	0:0	2	var_values
op	23:14	0:0	2	[
water	23:15	0:0	2	VAR_A
op	23:20	0:0	2	]
op	23:26	0:0	2	=
water	23:28	0:0	2	(
water	23:29	0:0	2	double
water	23:35	0:0	2	)
water	23:37	0:0	2	in
op	23:39	0:0	2	->
water	23:41	0:0	2	width
op	23:47	0:0	2	/
water	23:49	0:0	2	in
op	23:51	0:0	2	->
water	23:53	0:0	2	height
water	23:59	0:0	2	;
water	24:4	0:0	2	var_values
op	24:14	0:0	2	[
water	24:15	0:0	2	VAR_SAR
op	24:22	0:0	2	]
op	24:26	0:0	2	=
water	24:28	0:0	2	inlink
op	24:34	0:0	2	->
water	24:36	0:0	2	sample_aspect_ratio
op	24:55	0:0	2	.
water	24:56	0:0	2	num
water	24:60	0:0	2	?
water	25:8	0:0	2	(
water	25:9	0:0	2	double
water	25:15	0:0	2	)
water	25:17	0:0	2	inlink
op	25:23	0:0	2	->
water	25:25	0:0	2	sample_aspect_ratio
op	25:44	0:0	2	.
water	25:45	0:0	2	num
op	25:49	0:0	2	/
water	25:51	0:0	2	inlink
op	25:57	0:0	2	->
water	25:59	0:0	2	sample_aspect_ratio
op	25:78	0:0	2	.
water	25:79	0:0	2	den
water	25:83	0:0	2	:
water	25:85	0:0	2	1
water	25:86	0:0	2	;
water	26:4	0:0	2	var_values
op	26:14	0:0	2	[
water	26:15	0:0	2	VAR_DAR
op	26:22	0:0	2	]
op	26:26	0:0	2	=
water	26:28	0:0	2	var_values
op	26:38	0:0	2	[
water	26:39	0:0	2	VAR_A
op	26:44	0:0	2	]
op	26:46	0:0	2	*
water	26:48	0:0	2	var_values
op	26:58	0:0	2	[
water	26:59	0:0	2	VAR_SAR
op	26:66	0:0	2	]
water	26:67	0:0	2	;
water	27:4	0:0	2	var_values
op	27:14	0:0	2	[
water	27:15	0:0	2	VAR_HSUB
op	27:23	0:0	2	]
op	27:26	0:0	2	=
water	27:28	0:0	2	1
op	27:30	0:0	2	<<
water	27:33	0:0	2	desc
op	27:37	0:0	2	->
water	27:39	0:0	2	log2_chroma_w
water	27:52	0:0	2	;
water	28:4	0:0	2	var_values
op	28:14	0:0	2	[
water	28:15	0:0	2	VAR_VSUB
op	28:23	0:0	2	]
op	28:26	0:0	2	=
water	28:28	0:0	2	1
op	28:30	0:0	2	<<
water	28:33	0:0	2	desc
op	28:37	0:0	2	->
water	28:39	0:0	2	log2_chroma_h
water	28:52	0:0	2	;
if	29:4	32:17	2	(( ret =av_expr_parse_and_eval (& nb_frames ,s -> duration_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	29:8	31:79	3	( ret =av_expr_parse_and_eval (& nb_frames ,s -> duration_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	29:8	0:0	4	(
water	29:9	0:0	4	ret
op	29:13	0:0	4	=
call	29:15	31:74	4	av_expr_parse_and_eval
arg	29:38	29:48	5	&nb_frames
op	29:38	0:0	6	&
water	29:39	0:0	6	nb_frames
arg	29:50	29:70	5	s->duration_expr_str
water	29:50	0:0	6	s
op	29:51	0:0	6	->
water	29:53	0:0	6	duration_expr_str
arg	30:38	30:47	5	var_names
water	30:38	0:0	6	var_names
arg	30:49	30:59	5	var_values
water	30:49	0:0	6	var_values
arg	31:38	31:42	5	NULL
water	31:38	0:0	6	NULL
arg	31:44	31:48	5	NULL
water	31:44	0:0	6	NULL
arg	31:50	31:54	5	NULL
water	31:50	0:0	6	NULL
arg	31:56	31:60	5	NULL
water	31:56	0:0	6	NULL
arg	31:62	31:66	5	NULL
water	31:62	0:0	6	NULL
arg	31:68	31:69	5	0
water	31:68	0:0	6	0
arg	31:71	31:74	5	ctx
water	31:71	0:0	6	ctx
water	31:75	0:0	4	)
op	31:77	0:0	4	<
water	31:79	0:0	4	0
stmts	32:8	32:17	3	
goto	32:8	32:17	4	fail
water	32:13	0:0	5	fail
water	33:4	0:0	2	var_values
op	33:14	0:0	2	[
water	33:15	0:0	2	VAR_DURATION
op	33:27	0:0	2	]
op	33:29	0:0	2	=
water	33:31	0:0	2	nb_frames
water	33:40	0:0	2	;
for	34:4	99:4	2	(i = 0 ;i < nb_frames;i ++)
forinit	34:9	34:14	3	i = 0 ;
water	34:9	0:0	4	i
op	34:11	0:0	4	=
water	34:13	0:0	4	0
water	34:14	0:0	4	;
cond	34:16	34:20	3	i < nb_frames
water	34:16	0:0	4	i
op	34:18	0:0	4	<
water	34:20	0:0	4	nb_frames
forexpr	34:31	34:32	3	i ++
water	34:31	0:0	4	i
op	34:32	0:0	4	++
stmts	34:36	99:4	3	
water	34:36	0:0	4	{
decl	35:8	35:17	4	int	px[4]
decl	36:8	36:17	4	int	py[4]
decl	37:8	37:25	4	uint8_t	*input[4]
decl	38:8	39:71	4	int64_t	pts
op	38:20	0:0	4	=
call	38:22	39:53	5	av_rescale_q
arg	38:35	38:42	6	in->pts
water	38:35	0:0	7	in
op	38:37	0:0	7	->
water	38:39	0:0	7	pts
arg	38:44	38:61	6	inlink->time_base
water	38:44	0:0	7	inlink
op	38:50	0:0	7	->
water	38:52	0:0	7	time_base
arg	39:35	39:53	6	outlink->time_base
water	39:35	0:0	7	outlink
op	39:42	0:0	7	->
water	39:44	0:0	7	time_base
op	39:55	0:0	4	+
water	39:57	0:0	4	s
op	39:58	0:0	4	->
water	39:60	0:0	4	frame_count
water	40:8	0:0	4	var_values
op	40:18	0:0	4	[
water	40:19	0:0	4	VAR_TIME
op	40:27	0:0	4	]
op	40:29	0:0	4	=
water	40:31	0:0	4	pts
call	40:35	40:62	4	*av_q2d
arg	40:44	40:62	5	outlink->time_base
water	40:44	0:0	6	outlink
op	40:51	0:0	6	->
water	40:53	0:0	6	time_base
water	40:63	0:0	4	;
water	41:8	0:0	4	var_values
op	41:18	0:0	4	[
water	41:19	0:0	4	VAR_FRAME
op	41:28	0:0	4	]
op	41:30	0:0	4	=
water	41:32	0:0	4	i
water	41:33	0:0	4	;
water	42:8	0:0	4	var_values
op	42:18	0:0	4	[
water	42:19	0:0	4	VAR_ON
op	42:25	0:0	4	]
op	42:27	0:0	4	=
water	42:29	0:0	4	outlink
op	42:36	0:0	4	->
water	42:38	0:0	4	frame_count
op	42:50	0:0	4	+
water	42:52	0:0	4	1
water	42:53	0:0	4	;
if	43:8	46:21	4	(( ret =av_expr_parse_and_eval (& zoom ,s -> zoom_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	43:12	45:83	5	( ret =av_expr_parse_and_eval (& zoom ,s -> zoom_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	43:12	0:0	6	(
water	43:13	0:0	6	ret
op	43:17	0:0	6	=
call	43:19	45:78	6	av_expr_parse_and_eval
arg	43:42	43:47	7	&zoom
op	43:42	0:0	8	&
water	43:43	0:0	8	zoom
arg	43:49	43:65	7	s->zoom_expr_str
water	43:49	0:0	8	s
op	43:50	0:0	8	->
water	43:52	0:0	8	zoom_expr_str
arg	44:42	44:51	7	var_names
water	44:42	0:0	8	var_names
arg	44:53	44:63	7	var_values
water	44:53	0:0	8	var_values
arg	45:42	45:46	7	NULL
water	45:42	0:0	8	NULL
arg	45:48	45:52	7	NULL
water	45:48	0:0	8	NULL
arg	45:54	45:58	7	NULL
water	45:54	0:0	8	NULL
arg	45:60	45:64	7	NULL
water	45:60	0:0	8	NULL
arg	45:66	45:70	7	NULL
water	45:66	0:0	8	NULL
arg	45:72	45:73	7	0
water	45:72	0:0	8	0
arg	45:75	45:78	7	ctx
water	45:75	0:0	8	ctx
water	45:79	0:0	6	)
op	45:81	0:0	6	<
water	45:83	0:0	6	0
stmts	46:12	46:21	5	
goto	46:12	46:21	6	fail
water	46:17	0:0	7	fail
water	47:8	0:0	4	zoom
op	47:13	0:0	4	=
call	47:15	47:35	4	av_clipd
arg	47:24	47:28	5	zoom
water	47:24	0:0	6	zoom
arg	47:30	47:31	5	1
water	47:30	0:0	6	1
arg	47:33	47:35	5	10
water	47:33	0:0	6	10
water	47:36	0:0	4	;
water	48:8	0:0	4	var_values
op	48:18	0:0	4	[
water	48:19	0:0	4	VAR_ZOOM
op	48:27	0:0	4	]
op	48:29	0:0	4	=
water	48:31	0:0	4	zoom
water	48:35	0:0	4	;
water	49:8	0:0	4	w
op	49:10	0:0	4	=
water	49:12	0:0	4	in
op	49:14	0:0	4	->
water	49:16	0:0	4	width
op	49:22	0:0	4	*
water	49:24	0:0	4	(
water	49:25	0:0	4	1
op	49:26	0:0	4	.
water	49:27	0:0	4	0
op	49:29	0:0	4	/
water	49:31	0:0	4	zoom
water	49:35	0:0	4	)
water	49:36	0:0	4	;
water	50:8	0:0	4	h
op	50:10	0:0	4	=
water	50:12	0:0	4	in
op	50:14	0:0	4	->
water	50:16	0:0	4	height
op	50:23	0:0	4	*
water	50:25	0:0	4	(
water	50:26	0:0	4	1
op	50:27	0:0	4	.
water	50:28	0:0	4	0
op	50:30	0:0	4	/
water	50:32	0:0	4	zoom
water	50:36	0:0	4	)
water	50:37	0:0	4	;
if	51:8	54:21	4	(( ret =av_expr_parse_and_eval (& dx ,s -> x_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	51:12	53:83	5	( ret =av_expr_parse_and_eval (& dx ,s -> x_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	51:12	0:0	6	(
water	51:13	0:0	6	ret
op	51:17	0:0	6	=
call	51:19	53:78	6	av_expr_parse_and_eval
arg	51:42	51:45	7	&dx
op	51:42	0:0	8	&
water	51:43	0:0	8	dx
arg	51:47	51:60	7	s->x_expr_str
water	51:47	0:0	8	s
op	51:48	0:0	8	->
water	51:50	0:0	8	x_expr_str
arg	52:42	52:51	7	var_names
water	52:42	0:0	8	var_names
arg	52:53	52:63	7	var_values
water	52:53	0:0	8	var_values
arg	53:42	53:46	7	NULL
water	53:42	0:0	8	NULL
arg	53:48	53:52	7	NULL
water	53:48	0:0	8	NULL
arg	53:54	53:58	7	NULL
water	53:54	0:0	8	NULL
arg	53:60	53:64	7	NULL
water	53:60	0:0	8	NULL
arg	53:66	53:70	7	NULL
water	53:66	0:0	8	NULL
arg	53:72	53:73	7	0
water	53:72	0:0	8	0
arg	53:75	53:78	7	ctx
water	53:75	0:0	8	ctx
water	53:79	0:0	6	)
op	53:81	0:0	6	<
water	53:83	0:0	6	0
stmts	54:12	54:21	5	
goto	54:12	54:21	6	fail
water	54:17	0:0	7	fail
water	55:8	0:0	4	x
op	55:10	0:0	4	=
water	55:12	0:0	4	dx
op	55:15	0:0	4	=
call	55:17	55:56	4	av_clipd
arg	55:26	55:28	5	dx
water	55:26	0:0	6	dx
arg	55:30	55:31	5	0
water	55:30	0:0	6	0
arg	55:33	55:56	5	FFMAX(in->width-w,0)
call	55:33	55:55	6	FFMAX
arg	55:39	55:52	7	in->width-w
water	55:39	0:0	8	in
op	55:41	0:0	8	->
water	55:43	0:0	8	width
op	55:49	0:0	8	-
water	55:51	0:0	8	w
arg	55:54	55:55	7	0
water	55:54	0:0	8	0
water	55:57	0:0	4	;
water	56:8	0:0	4	var_values
op	56:18	0:0	4	[
water	56:19	0:0	4	VAR_X
op	56:24	0:0	4	]
op	56:26	0:0	4	=
water	56:28	0:0	4	dx
water	56:30	0:0	4	;
water	57:8	0:0	4	x
op	57:10	0:0	4	&=
op	57:13	0:0	4	~
water	57:14	0:0	4	(
water	57:15	0:0	4	(
water	57:16	0:0	4	1
op	57:18	0:0	4	<<
water	57:21	0:0	4	desc
op	57:25	0:0	4	->
water	57:27	0:0	4	log2_chroma_w
water	57:40	0:0	4	)
op	57:42	0:0	4	-
water	57:44	0:0	4	1
water	57:45	0:0	4	)
water	57:46	0:0	4	;
if	58:8	61:21	4	(( ret =av_expr_parse_and_eval (& dy ,s -> y_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	58:12	60:83	5	( ret =av_expr_parse_and_eval (& dy ,s -> y_expr_str ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	58:12	0:0	6	(
water	58:13	0:0	6	ret
op	58:17	0:0	6	=
call	58:19	60:78	6	av_expr_parse_and_eval
arg	58:42	58:45	7	&dy
op	58:42	0:0	8	&
water	58:43	0:0	8	dy
arg	58:47	58:60	7	s->y_expr_str
water	58:47	0:0	8	s
op	58:48	0:0	8	->
water	58:50	0:0	8	y_expr_str
arg	59:42	59:51	7	var_names
water	59:42	0:0	8	var_names
arg	59:53	59:63	7	var_values
water	59:53	0:0	8	var_values
arg	60:42	60:46	7	NULL
water	60:42	0:0	8	NULL
arg	60:48	60:52	7	NULL
water	60:48	0:0	8	NULL
arg	60:54	60:58	7	NULL
water	60:54	0:0	8	NULL
arg	60:60	60:64	7	NULL
water	60:60	0:0	8	NULL
arg	60:66	60:70	7	NULL
water	60:66	0:0	8	NULL
arg	60:72	60:73	7	0
water	60:72	0:0	8	0
arg	60:75	60:78	7	ctx
water	60:75	0:0	8	ctx
water	60:79	0:0	6	)
op	60:81	0:0	6	<
water	60:83	0:0	6	0
stmts	61:12	61:21	5	
goto	61:12	61:21	6	fail
water	61:17	0:0	7	fail
water	62:8	0:0	4	y
op	62:10	0:0	4	=
water	62:12	0:0	4	dy
op	62:15	0:0	4	=
call	62:17	62:57	4	av_clipd
arg	62:26	62:28	5	dy
water	62:26	0:0	6	dy
arg	62:30	62:31	5	0
water	62:30	0:0	6	0
arg	62:33	62:57	5	FFMAX(in->height-h,0)
call	62:33	62:56	6	FFMAX
arg	62:39	62:53	7	in->height-h
water	62:39	0:0	8	in
op	62:41	0:0	8	->
water	62:43	0:0	8	height
op	62:50	0:0	8	-
water	62:52	0:0	8	h
arg	62:55	62:56	7	0
water	62:55	0:0	8	0
water	62:58	0:0	4	;
water	63:8	0:0	4	var_values
op	63:18	0:0	4	[
water	63:19	0:0	4	VAR_Y
op	63:24	0:0	4	]
op	63:26	0:0	4	=
water	63:28	0:0	4	dy
water	63:30	0:0	4	;
water	64:8	0:0	4	y
op	64:10	0:0	4	&=
op	64:13	0:0	4	~
water	64:14	0:0	4	(
water	64:15	0:0	4	(
water	64:16	0:0	4	1
op	64:18	0:0	4	<<
water	64:21	0:0	4	desc
op	64:25	0:0	4	->
water	64:27	0:0	4	log2_chroma_h
water	64:40	0:0	4	)
op	64:42	0:0	4	-
water	64:44	0:0	4	1
water	64:45	0:0	4	)
water	64:46	0:0	4	;
water	65:8	0:0	4	out
op	65:12	0:0	4	=
call	65:14	65:65	4	ff_get_video_buffer
arg	65:34	65:41	5	outlink
water	65:34	0:0	6	outlink
arg	65:43	65:53	5	outlink->w
water	65:43	0:0	6	outlink
op	65:50	0:0	6	->
water	65:52	0:0	6	w
arg	65:55	65:65	5	outlink->h
water	65:55	0:0	6	outlink
op	65:62	0:0	6	->
water	65:64	0:0	6	h
water	65:66	0:0	4	;
if	66:8	69:8	4	(! out)
cond	66:12	66:13	5	! out
op	66:12	0:0	6	!
water	66:13	0:0	6	out
stmts	66:18	69:8	5	
water	66:18	0:0	6	{
water	67:12	0:0	6	ret
op	67:16	0:0	6	=
call	67:18	67:32	6	AVERROR
arg	67:26	67:32	7	ENOMEM
water	67:26	0:0	8	ENOMEM
water	67:33	0:0	6	;
goto	68:12	68:21	6	fail
water	68:17	0:0	7	fail
water	69:8	0:0	6	}
water	70:8	0:0	4	px
op	70:10	0:0	4	[
water	70:11	0:0	4	1
op	70:12	0:0	4	]
op	70:14	0:0	4	=
water	70:16	0:0	4	px
op	70:18	0:0	4	[
water	70:19	0:0	4	2
op	70:20	0:0	4	]
op	70:22	0:0	4	=
call	70:24	70:61	4	FF_CEIL_RSHIFT
arg	70:39	70:40	5	x
water	70:39	0:0	6	x
arg	70:42	70:61	5	desc->log2_chroma_w
water	70:42	0:0	6	desc
op	70:46	0:0	6	->
water	70:48	0:0	6	log2_chroma_w
water	70:62	0:0	4	;
water	71:8	0:0	4	px
op	71:10	0:0	4	[
water	71:11	0:0	4	0
op	71:12	0:0	4	]
op	71:14	0:0	4	=
water	71:16	0:0	4	px
op	71:18	0:0	4	[
water	71:19	0:0	4	3
op	71:20	0:0	4	]
op	71:22	0:0	4	=
water	71:24	0:0	4	x
water	71:25	0:0	4	;
water	72:8	0:0	4	py
op	72:10	0:0	4	[
water	72:11	0:0	4	1
op	72:12	0:0	4	]
op	72:14	0:0	4	=
water	72:16	0:0	4	py
op	72:18	0:0	4	[
water	72:19	0:0	4	2
op	72:20	0:0	4	]
op	72:22	0:0	4	=
call	72:24	72:61	4	FF_CEIL_RSHIFT
arg	72:39	72:40	5	y
water	72:39	0:0	6	y
arg	72:42	72:61	5	desc->log2_chroma_h
water	72:42	0:0	6	desc
op	72:46	0:0	6	->
water	72:48	0:0	6	log2_chroma_h
water	72:62	0:0	4	;
water	73:8	0:0	4	py
op	73:10	0:0	4	[
water	73:11	0:0	4	0
op	73:12	0:0	4	]
op	73:14	0:0	4	=
water	73:16	0:0	4	py
op	73:18	0:0	4	[
water	73:19	0:0	4	3
op	73:20	0:0	4	]
op	73:22	0:0	4	=
water	73:24	0:0	4	y
water	73:25	0:0	4	;
water	74:8	0:0	4	s
op	74:9	0:0	4	->
water	74:11	0:0	4	sws
op	74:15	0:0	4	=
call	74:17	74:35	4	sws_alloc_context
water	74:36	0:0	4	;
if	75:8	78:8	4	(! s -> sws)
cond	75:12	75:16	5	! s -> sws
op	75:12	0:0	6	!
water	75:13	0:0	6	s
op	75:14	0:0	6	->
water	75:16	0:0	6	sws
stmts	75:21	78:8	5	
water	75:21	0:0	6	{
water	76:12	0:0	6	ret
op	76:16	0:0	6	=
call	76:18	76:32	6	AVERROR
arg	76:26	76:32	7	ENOMEM
water	76:26	0:0	8	ENOMEM
water	76:33	0:0	6	;
goto	77:12	77:21	6	fail
water	77:17	0:0	7	fail
water	78:8	0:0	6	}
for	79:8	80:68	4	(k = 0 ;in -> data [ k ];k ++)
forinit	79:13	79:18	5	k = 0 ;
water	79:13	0:0	6	k
op	79:15	0:0	6	=
water	79:17	0:0	6	0
water	79:18	0:0	6	;
cond	79:20	79:30	5	in -> data [ k ]
water	79:20	0:0	6	in
op	79:22	0:0	6	->
water	79:24	0:0	6	data
op	79:28	0:0	6	[
water	79:29	0:0	6	k
op	79:30	0:0	6	]
forexpr	79:33	79:34	5	k ++
water	79:33	0:0	6	k
op	79:34	0:0	6	++
stmts	80:12	80:68	5	
water	80:12	0:0	6	input
op	80:17	0:0	6	[
water	80:18	0:0	6	k
op	80:19	0:0	6	]
op	80:21	0:0	6	=
water	80:23	0:0	6	in
op	80:25	0:0	6	->
water	80:27	0:0	6	data
op	80:31	0:0	6	[
water	80:32	0:0	6	k
op	80:33	0:0	6	]
op	80:35	0:0	6	+
water	80:37	0:0	6	py
op	80:39	0:0	6	[
water	80:40	0:0	6	k
op	80:41	0:0	6	]
op	80:43	0:0	6	*
water	80:45	0:0	6	in
op	80:47	0:0	6	->
water	80:49	0:0	6	linesize
op	80:57	0:0	6	[
water	80:58	0:0	6	k
op	80:59	0:0	6	]
op	80:61	0:0	6	+
water	80:63	0:0	6	px
op	80:65	0:0	6	[
water	80:66	0:0	6	k
op	80:67	0:0	6	]
water	80:68	0:0	6	;
call	81:8	81:43	4	av_opt_set_int
arg	81:23	81:29	5	s->sws
water	81:23	0:0	6	s
op	81:24	0:0	6	->
water	81:26	0:0	6	sws
arg	81:31	81:37	5	"srcw"
water	81:31	0:0	6	"srcw"
arg	81:39	81:40	5	w
water	81:39	0:0	6	w
arg	81:42	81:43	5	0
water	81:42	0:0	6	0
water	81:44	0:0	4	;
call	82:8	82:43	4	av_opt_set_int
arg	82:23	82:29	5	s->sws
water	82:23	0:0	6	s
op	82:24	0:0	6	->
water	82:26	0:0	6	sws
arg	82:31	82:37	5	"srch"
water	82:31	0:0	6	"srch"
arg	82:39	82:40	5	h
water	82:39	0:0	6	h
arg	82:42	82:43	5	0
water	82:42	0:0	6	0
water	82:44	0:0	4	;
call	83:8	83:58	4	av_opt_set_int
arg	83:23	83:29	5	s->sws
water	83:23	0:0	6	s
op	83:24	0:0	6	->
water	83:26	0:0	6	sws
arg	83:31	83:43	5	"src_format"
water	83:31	0:0	6	"src_format"
arg	83:45	83:55	5	in->format
water	83:45	0:0	6	in
op	83:47	0:0	6	->
water	83:49	0:0	6	format
arg	83:57	83:58	5	0
water	83:57	0:0	6	0
water	83:59	0:0	4	;
call	84:8	84:52	4	av_opt_set_int
arg	84:23	84:29	5	s->sws
water	84:23	0:0	6	s
op	84:24	0:0	6	->
water	84:26	0:0	6	sws
arg	84:31	84:37	5	"dstw"
water	84:31	0:0	6	"dstw"
arg	84:39	84:49	5	outlink->w
water	84:39	0:0	6	outlink
op	84:46	0:0	6	->
water	84:48	0:0	6	w
arg	84:51	84:52	5	0
water	84:51	0:0	6	0
water	84:53	0:0	4	;
call	85:8	85:52	4	av_opt_set_int
arg	85:23	85:29	5	s->sws
water	85:23	0:0	6	s
op	85:24	0:0	6	->
water	85:26	0:0	6	sws
arg	85:31	85:37	5	"dsth"
water	85:31	0:0	6	"dsth"
arg	85:39	85:49	5	outlink->h
water	85:39	0:0	6	outlink
op	85:46	0:0	6	->
water	85:48	0:0	6	h
arg	85:51	85:52	5	0
water	85:51	0:0	6	0
water	85:53	0:0	4	;
call	86:8	86:63	4	av_opt_set_int
arg	86:23	86:29	5	s->sws
water	86:23	0:0	6	s
op	86:24	0:0	6	->
water	86:26	0:0	6	sws
arg	86:31	86:43	5	"dst_format"
water	86:31	0:0	6	"dst_format"
arg	86:45	86:60	5	outlink->format
water	86:45	0:0	6	outlink
op	86:52	0:0	6	->
water	86:54	0:0	6	format
arg	86:62	86:63	5	0
water	86:62	0:0	6	0
water	86:64	0:0	4	;
call	87:8	87:58	4	av_opt_set_int
arg	87:23	87:29	5	s->sws
water	87:23	0:0	6	s
op	87:24	0:0	6	->
water	87:26	0:0	6	sws
arg	87:31	87:42	5	"sws_flags"
water	87:31	0:0	6	"sws_flags"
arg	87:44	87:55	5	SWS_BICUBIC
water	87:44	0:0	6	SWS_BICUBIC
arg	87:57	87:58	5	0
water	87:57	0:0	6	0
water	87:59	0:0	4	;
if	88:8	89:21	4	(( ret =sws_init_context (s -> sws ,NULL ,NULL ) ) < 0)
cond	88:12	88:59	5	( ret =sws_init_context (s -> sws ,NULL ,NULL ) ) < 0
water	88:12	0:0	6	(
water	88:13	0:0	6	ret
op	88:17	0:0	6	=
call	88:19	88:54	6	sws_init_context
arg	88:36	88:42	7	s->sws
water	88:36	0:0	8	s
op	88:37	0:0	8	->
water	88:39	0:0	8	sws
arg	88:44	88:48	7	NULL
water	88:44	0:0	8	NULL
arg	88:50	88:54	7	NULL
water	88:50	0:0	8	NULL
water	88:55	0:0	6	)
op	88:57	0:0	6	<
water	88:59	0:0	6	0
stmts	89:12	89:21	5	
goto	89:12	89:21	6	fail
water	89:17	0:0	7	fail
call	90:8	90:102	4	sws_scale
arg	90:18	90:24	5	s->sws
water	90:18	0:0	6	s
op	90:19	0:0	6	->
water	90:21	0:0	6	sws
arg	90:26	90:56	5	(constuint8_t*const*)&input
water	90:26	0:0	6	(
water	90:27	0:0	6	const
water	90:33	0:0	6	uint8_t
op	90:41	0:0	6	*
water	90:42	0:0	6	const
op	90:48	0:0	6	*
water	90:49	0:0	6	)
op	90:50	0:0	6	&
water	90:51	0:0	6	input
arg	90:58	90:70	5	in->linesize
water	90:58	0:0	6	in
op	90:60	0:0	6	->
water	90:62	0:0	6	linesize
arg	90:72	90:73	5	0
water	90:72	0:0	6	0
arg	90:75	90:76	5	h
water	90:75	0:0	6	h
arg	90:78	90:87	5	out->data
water	90:78	0:0	6	out
op	90:81	0:0	6	->
water	90:83	0:0	6	data
arg	90:89	90:102	5	out->linesize
water	90:89	0:0	6	out
op	90:92	0:0	6	->
water	90:94	0:0	6	linesize
water	90:103	0:0	4	;
water	91:8	0:0	4	out
op	91:11	0:0	4	->
water	91:13	0:0	4	pts
op	91:17	0:0	4	=
water	91:19	0:0	4	pts
water	91:22	0:0	4	;
water	92:8	0:0	4	s
op	92:9	0:0	4	->
water	92:11	0:0	4	frame_count
op	92:22	0:0	4	++
water	92:24	0:0	4	;
water	93:8	0:0	4	ret
op	93:12	0:0	4	=
call	93:14	93:42	4	ff_filter_frame
arg	93:30	93:37	5	outlink
water	93:30	0:0	6	outlink
arg	93:39	93:42	5	out
water	93:39	0:0	6	out
water	93:43	0:0	4	;
if	94:8	95:17	4	(ret < 0)
cond	94:12	94:18	5	ret < 0
water	94:12	0:0	6	ret
op	94:16	0:0	6	<
water	94:18	0:0	6	0
stmts	95:12	95:17	5	
break	95:12	95:17	6	
water	96:8	0:0	4	out
op	96:12	0:0	4	=
water	96:14	0:0	4	NULL
water	96:18	0:0	4	;
call	97:8	97:30	4	sws_freeContext
arg	97:24	97:30	5	s->sws
water	97:24	0:0	6	s
op	97:25	0:0	6	->
water	97:27	0:0	6	sws
water	97:31	0:0	4	;
water	98:8	0:0	4	s
op	98:9	0:0	4	->
water	98:11	0:0	4	sws
op	98:15	0:0	4	=
water	98:17	0:0	4	NULL
water	98:21	0:0	4	;
water	99:4	0:0	4	}
water	100:4	0:0	2	s
op	100:5	0:0	2	->
water	100:7	0:0	2	x
op	100:9	0:0	2	=
water	100:11	0:0	2	dx
water	100:13	0:0	2	;
water	101:4	0:0	2	s
op	101:5	0:0	2	->
water	101:7	0:0	2	y
op	101:9	0:0	2	=
water	101:11	0:0	2	dy
water	101:13	0:0	2	;
water	102:4	0:0	2	s
op	102:5	0:0	2	->
water	102:7	0:0	2	prev_zoom
op	102:17	0:0	2	=
water	102:19	0:0	2	zoom
water	102:23	0:0	2	;
water	103:4	0:0	2	s
op	103:5	0:0	2	->
water	103:7	0:0	2	prev_nb_frames
op	103:22	0:0	2	=
water	103:24	0:0	2	nb_frames
water	103:33	0:0	2	;
label	104:0	104:4	2	fail :
call	105:4	105:26	2	sws_freeContext
arg	105:20	105:26	3	s->sws
water	105:20	0:0	4	s
op	105:21	0:0	4	->
water	105:23	0:0	4	sws
water	105:27	0:0	2	;
water	106:4	0:0	2	s
op	106:5	0:0	2	->
water	106:7	0:0	2	sws
op	106:11	0:0	2	=
water	106:13	0:0	2	NULL
water	106:17	0:0	2	;
call	107:4	107:22	2	av_frame_free
arg	107:18	107:22	3	&out
op	107:18	0:0	4	&
water	107:19	0:0	4	out
water	107:23	0:0	2	;
call	108:4	108:21	2	av_frame_free
arg	108:18	108:21	3	&in
op	108:18	0:0	4	&
water	108:19	0:0	4	in
water	108:22	0:0	2	;
return	109:4	109:14	2	ret
water	109:11	0:0	3	ret

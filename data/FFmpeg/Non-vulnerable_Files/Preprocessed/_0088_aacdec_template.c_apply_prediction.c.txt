func	1:0	25:0	0	static void	apply_prediction
params	1:28	0:0	1	
param	1:29	1:43	2	AACContext *	ac
param	1:45	1:70	2	SingleChannelElement *	sce
stmnts	0:0	24:50	1	
decl	3:4	3:14	2	int	sfb
water	3:11	0:0	2	,
decl	3:4	3:14	2	int	k
if	4:4	7:4	2	(! sce -> ics . predictor_initialized)
cond	4:8	4:18	3	! sce -> ics . predictor_initialized
op	4:8	0:0	4	!
water	4:9	0:0	4	sce
op	4:12	0:0	4	->
water	4:14	0:0	4	ics
op	4:17	0:0	4	.
water	4:18	0:0	4	predictor_initialized
stmts	4:41	7:4	3	
water	4:41	0:0	4	{
call	5:8	5:49	4	reset_all_predictors
arg	5:29	5:49	5	sce->predictor_state
water	5:29	0:0	6	sce
op	5:32	0:0	6	->
water	5:34	0:0	6	predictor_state
water	5:50	0:0	4	;
water	6:8	0:0	4	sce
op	6:11	0:0	4	->
water	6:13	0:0	4	ics
op	6:16	0:0	4	.
water	6:17	0:0	4	predictor_initialized
op	6:39	0:0	4	=
water	6:41	0:0	4	1
water	6:42	0:0	4	;
water	7:4	0:0	4	}
if	8:4	23:4	2	(sce -> ics . window_sequence [ 0 ] != EIGHT_SHORT_SEQUENCE)
cond	8:8	8:39	3	sce -> ics . window_sequence [ 0 ] != EIGHT_SHORT_SEQUENCE
water	8:8	0:0	4	sce
op	8:11	0:0	4	->
water	8:13	0:0	4	ics
op	8:16	0:0	4	.
water	8:17	0:0	4	window_sequence
op	8:32	0:0	4	[
water	8:33	0:0	4	0
op	8:34	0:0	4	]
op	8:36	0:0	4	!=
water	8:39	0:0	4	EIGHT_SHORT_SEQUENCE
stmts	8:61	23:4	3	
water	8:61	0:0	4	{
for	9:8	19:8	4	(sfb = 0 ;sfb < ff_aac_pred_sfb_max [ ac -> oc [ 1 ] . m4ac . sampling_index ];sfb ++)
forinit	9:13	9:20	5	sfb = 0 ;
water	9:13	0:0	6	sfb
op	9:17	0:0	6	=
water	9:19	0:0	6	0
water	9:20	0:0	6	;
cond	10:13	10:68	5	sfb < ff_aac_pred_sfb_max [ ac -> oc [ 1 ] . m4ac . sampling_index ]
water	10:13	0:0	6	sfb
op	10:17	0:0	6	<
water	10:19	0:0	6	ff_aac_pred_sfb_max
op	10:38	0:0	6	[
water	10:39	0:0	6	ac
op	10:41	0:0	6	->
water	10:43	0:0	6	oc
op	10:45	0:0	6	[
water	10:46	0:0	6	1
op	10:47	0:0	6	]
op	10:48	0:0	6	.
water	10:49	0:0	6	m4ac
op	10:53	0:0	6	.
water	10:54	0:0	6	sampling_index
op	10:68	0:0	6	]
forexpr	11:13	11:16	5	sfb ++
water	11:13	0:0	6	sfb
op	11:16	0:0	6	++
stmts	11:20	19:8	5	
water	11:20	0:0	6	{
for	12:12	18:12	6	(k = sce -> ics . swb_offset [ sfb ] ;k < sce -> ics . swb_offset [ sfb + 1 ];k ++)
forinit	12:17	12:45	7	k = sce -> ics . swb_offset [ sfb ] ;
water	12:17	0:0	8	k
op	12:19	0:0	8	=
water	12:21	0:0	8	sce
op	12:24	0:0	8	->
water	12:26	0:0	8	ics
op	12:29	0:0	8	.
water	12:30	0:0	8	swb_offset
op	12:40	0:0	8	[
water	12:41	0:0	8	sfb
op	12:44	0:0	8	]
water	12:45	0:0	8	;
cond	13:17	13:48	7	k < sce -> ics . swb_offset [ sfb + 1 ]
water	13:17	0:0	8	k
op	13:19	0:0	8	<
water	13:21	0:0	8	sce
op	13:24	0:0	8	->
water	13:26	0:0	8	ics
op	13:29	0:0	8	.
water	13:30	0:0	8	swb_offset
op	13:40	0:0	8	[
water	13:41	0:0	8	sfb
op	13:45	0:0	8	+
water	13:47	0:0	8	1
op	13:48	0:0	8	]
forexpr	14:17	14:18	7	k ++
water	14:17	0:0	8	k
op	14:18	0:0	8	++
stmts	14:22	18:12	7	
water	14:22	0:0	8	{
call	15:16	17:53	8	predict
arg	15:24	15:48	9	&sce->predictor_state[k]
op	15:24	0:0	10	&
water	15:25	0:0	10	sce
op	15:28	0:0	10	->
water	15:30	0:0	10	predictor_state
op	15:45	0:0	10	[
water	15:46	0:0	10	k
op	15:47	0:0	10	]
arg	15:50	15:65	9	&sce->coeffs[k]
op	15:50	0:0	10	&
water	15:51	0:0	10	sce
op	15:54	0:0	10	->
water	15:56	0:0	10	coeffs
op	15:62	0:0	10	[
water	15:63	0:0	10	k
op	15:64	0:0	10	]
arg	16:24	17:53	9	sce->ics.predictor_present&&sce->ics.prediction_used[sfb]
water	16:24	0:0	10	sce
op	16:27	0:0	10	->
water	16:29	0:0	10	ics
op	16:32	0:0	10	.
water	16:33	0:0	10	predictor_present
op	16:51	0:0	10	&&
water	17:24	0:0	10	sce
op	17:27	0:0	10	->
water	17:29	0:0	10	ics
op	17:32	0:0	10	.
water	17:33	0:0	10	prediction_used
op	17:48	0:0	10	[
water	17:49	0:0	10	sfb
op	17:52	0:0	10	]
water	17:54	0:0	8	;
water	18:12	0:0	8	}
water	19:8	0:0	6	}
if	20:8	22:65	4	(sce -> ics . predictor_reset_group)
cond	20:12	20:21	5	sce -> ics . predictor_reset_group
water	20:12	0:0	6	sce
op	20:15	0:0	6	->
water	20:17	0:0	6	ics
op	20:20	0:0	6	.
water	20:21	0:0	6	predictor_reset_group
stmts	21:12	22:65	5	
call	21:12	22:64	6	reset_predictor_group
arg	21:34	21:54	7	sce->predictor_state
water	21:34	0:0	8	sce
op	21:37	0:0	8	->
water	21:39	0:0	8	predictor_state
arg	22:34	22:64	7	sce->ics.predictor_reset_group
water	22:34	0:0	8	sce
op	22:37	0:0	8	->
water	22:39	0:0	8	ics
op	22:42	0:0	8	.
water	22:43	0:0	8	predictor_reset_group
water	22:65	0:0	6	;
water	23:4	0:0	4	}
else	23:6	24:50	2
stmts	24:8	24:50	3	
call	24:8	24:49	4	reset_all_predictors
arg	24:29	24:49	5	sce->predictor_state
water	24:29	0:0	6	sce
op	24:32	0:0	6	->
water	24:34	0:0	6	predictor_state
water	24:50	0:0	4	;

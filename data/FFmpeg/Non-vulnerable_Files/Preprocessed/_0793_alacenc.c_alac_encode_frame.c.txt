func	1:0	32:0	0	static int	alac_encode_frame
params	1:28	0:0	1	
param	1:29	1:50	2	AVCodecContext *	avctx
param	1:52	1:67	2	AVPacket *	avpkt
param	2:29	2:49	2	const AVFrame *	frame
param	2:51	2:70	2	int *	got_packet_ptr
stmnts	0:0	31:12	1	
decl	4:4	4:43	2	AlacEncodeContext	*s
op	4:25	0:0	2	=
water	4:27	0:0	2	avctx
op	4:32	0:0	2	->
water	4:34	0:0	2	priv_data
decl	5:4	5:38	2	int	out_bytes
water	5:17	0:0	2	,
decl	5:4	5:38	2	int	max_frame_size
water	5:33	0:0	2	,
decl	5:4	5:38	2	int	ret
water	6:4	0:0	2	s
op	6:5	0:0	2	->
water	6:7	0:0	2	frame_size
op	6:18	0:0	2	=
water	6:20	0:0	2	frame
op	6:25	0:0	2	->
water	6:27	0:0	2	nb_samples
water	6:37	0:0	2	;
if	7:4	9:71	2	(frame -> nb_samples < DEFAULT_FRAME_SIZE)
cond	7:8	7:28	3	frame -> nb_samples < DEFAULT_FRAME_SIZE
water	7:8	0:0	4	frame
op	7:13	0:0	4	->
water	7:15	0:0	4	nb_samples
op	7:26	0:0	4	<
water	7:28	0:0	4	DEFAULT_FRAME_SIZE
stmts	8:8	9:71	3	
water	8:8	0:0	4	max_frame_size
op	8:23	0:0	4	=
call	8:25	9:70	4	get_max_frame_size
arg	8:44	8:57	5	s->frame_size
water	8:44	0:0	6	s
op	8:45	0:0	6	->
water	8:47	0:0	6	frame_size
arg	8:59	8:74	5	avctx->channels
water	8:59	0:0	6	avctx
op	8:64	0:0	6	->
water	8:66	0:0	6	channels
arg	9:44	9:70	5	avctx->bits_per_raw_sample
water	9:44	0:0	6	avctx
op	9:49	0:0	6	->
water	9:51	0:0	6	bits_per_raw_sample
water	9:71	0:0	4	;
else	10:4	11:48	2
stmts	11:8	11:48	3	
water	11:8	0:0	4	max_frame_size
op	11:23	0:0	4	=
water	11:25	0:0	4	s
op	11:26	0:0	4	->
water	11:28	0:0	4	max_coded_frame_size
water	11:48	0:0	4	;
if	12:4	13:18	2	(( ret =ff_alloc_packet2 (avctx ,avpkt ,2 * max_frame_size ,0 ) ) < 0)
cond	12:8	12:72	3	( ret =ff_alloc_packet2 (avctx ,avpkt ,2 * max_frame_size ,0 ) ) < 0
water	12:8	0:0	4	(
water	12:9	0:0	4	ret
op	12:13	0:0	4	=
call	12:15	12:67	4	ff_alloc_packet2
arg	12:32	12:37	5	avctx
water	12:32	0:0	6	avctx
arg	12:39	12:44	5	avpkt
water	12:39	0:0	6	avpkt
arg	12:46	12:64	5	2*max_frame_size
water	12:46	0:0	6	2
op	12:48	0:0	6	*
water	12:50	0:0	6	max_frame_size
arg	12:66	12:67	5	0
water	12:66	0:0	6	0
water	12:68	0:0	4	)
op	12:70	0:0	4	<
water	12:72	0:0	4	0
stmts	13:8	13:18	3	
return	13:8	13:18	4	ret
water	13:15	0:0	5	ret
if	15:4	18:4	2	(s -> compression_level)
cond	15:8	15:11	3	s -> compression_level
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	compression_level
stmts	15:30	18:4	3	
water	15:30	0:0	4	{
water	16:8	0:0	4	s
op	16:9	0:0	4	->
water	16:11	0:0	4	verbatim
op	16:22	0:0	4	=
water	16:24	0:0	4	0
water	16:25	0:0	4	;
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	extra_bits
op	17:22	0:0	4	=
water	17:24	0:0	4	avctx
op	17:29	0:0	4	->
water	17:31	0:0	4	bits_per_raw_sample
op	17:51	0:0	4	-
water	17:53	0:0	4	16
water	17:55	0:0	4	;
water	18:4	0:0	4	}
else	18:6	21:4	2
stmts	18:11	21:4	3	
water	18:11	0:0	4	{
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	verbatim
op	19:22	0:0	4	=
water	19:24	0:0	4	1
water	19:25	0:0	4	;
water	20:8	0:0	4	s
op	20:9	0:0	4	->
water	20:11	0:0	4	extra_bits
op	20:22	0:0	4	=
water	20:24	0:0	4	0
water	20:25	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	out_bytes
op	22:14	0:0	2	=
call	22:16	22:58	2	write_frame
arg	22:28	22:29	3	s
water	22:28	0:0	4	s
arg	22:31	22:36	3	avpkt
water	22:31	0:0	4	avpkt
arg	22:38	22:58	3	frame->extended_data
water	22:38	0:0	4	frame
op	22:43	0:0	4	->
water	22:45	0:0	4	extended_data
water	22:59	0:0	2	;
if	23:4	28:4	2	(out_bytes > max_frame_size)
cond	23:8	23:20	3	out_bytes > max_frame_size
water	23:8	0:0	4	out_bytes
op	23:18	0:0	4	>
water	23:20	0:0	4	max_frame_size
stmts	23:36	28:4	3	
water	23:36	0:0	4	{
water	25:8	0:0	4	s
op	25:9	0:0	4	->
water	25:11	0:0	4	verbatim
op	25:20	0:0	4	=
water	25:22	0:0	4	1
water	25:23	0:0	4	;
water	26:8	0:0	4	s
op	26:9	0:0	4	->
water	26:11	0:0	4	extra_bits
op	26:22	0:0	4	=
water	26:24	0:0	4	0
water	26:25	0:0	4	;
water	27:8	0:0	4	out_bytes
op	27:18	0:0	4	=
call	27:20	27:62	4	write_frame
arg	27:32	27:33	5	s
water	27:32	0:0	6	s
arg	27:35	27:40	5	avpkt
water	27:35	0:0	6	avpkt
arg	27:42	27:62	5	frame->extended_data
water	27:42	0:0	6	frame
op	27:47	0:0	6	->
water	27:49	0:0	6	extended_data
water	27:63	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	avpkt
op	29:9	0:0	2	->
water	29:11	0:0	2	size
op	29:16	0:0	2	=
water	29:18	0:0	2	out_bytes
water	29:27	0:0	2	;
op	30:4	0:0	2	*
water	30:5	0:0	2	got_packet_ptr
op	30:20	0:0	2	=
water	30:22	0:0	2	1
water	30:23	0:0	2	;
return	31:4	31:12	2	0
water	31:11	0:0	3	0

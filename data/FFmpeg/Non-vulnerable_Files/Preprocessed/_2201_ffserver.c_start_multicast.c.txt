func	1:0	47:0	0	static void	start_multicast
params	1:27	0:0	1	
param	1:28	1:32	2	void
stmnts	0:0	46:4	1	
decl	3:4	3:26	2	FFServerStream	*stream
decl	4:4	4:23	2	char	session_id[32]
decl	5:4	5:22	2	HTTPContext	*rtp_c
decl	6:4	6:38	2	struct sockaddr_in	dest_addr
op	6:33	0:0	2	=
water	6:35	0:0	2	{
water	6:36	0:0	2	0
water	6:37	0:0	2	}
decl	7:4	7:34	2	int	default_port
water	7:20	0:0	2	,
decl	7:4	7:34	2	int	stream_index
decl	8:4	8:33	2	unsigned int	random0
water	8:24	0:0	2	,
decl	8:4	8:33	2	unsigned int	random1
water	9:4	0:0	2	default_port
op	9:17	0:0	2	=
water	9:19	0:0	2	6000
water	9:23	0:0	2	;
for	10:4	46:4	2	(stream = config . first_stream ;stream;stream = stream -> next)
forinit	10:8	10:36	3	stream = config . first_stream ;
water	10:8	0:0	4	stream
op	10:15	0:0	4	=
water	10:17	0:0	4	config
op	10:23	0:0	4	.
water	10:24	0:0	4	first_stream
water	10:36	0:0	4	;
cond	10:38	10:38	3	stream
water	10:38	0:0	4	stream
forexpr	10:46	10:63	3	stream = stream -> next
water	10:46	0:0	4	stream
op	10:53	0:0	4	=
water	10:55	0:0	4	stream
op	10:61	0:0	4	->
water	10:63	0:0	4	next
stmts	10:69	46:4	3	
water	10:69	0:0	4	{
if	11:8	12:20	4	(! stream -> is_multicast)
cond	11:12	11:21	5	! stream -> is_multicast
op	11:12	0:0	6	!
water	11:13	0:0	6	stream
op	11:19	0:0	6	->
water	11:21	0:0	6	is_multicast
stmts	12:12	12:20	5	
continue	12:12	12:20	6	
water	13:8	0:0	4	random0
op	13:16	0:0	4	=
call	13:18	13:42	4	av_lfg_get
arg	13:29	13:42	5	&random_state
op	13:29	0:0	6	&
water	13:30	0:0	6	random_state
water	13:43	0:0	4	;
water	14:8	0:0	4	random1
op	14:16	0:0	4	=
call	14:18	14:42	4	av_lfg_get
arg	14:29	14:42	5	&random_state
op	14:29	0:0	6	&
water	14:30	0:0	6	random_state
water	14:43	0:0	4	;
call	16:8	16:77	4	snprintf
arg	16:17	16:27	5	session_id
water	16:17	0:0	6	session_id
arg	16:29	16:47	5	sizeof(session_id)
op	16:29	0:0	6	sizeof
water	16:35	0:0	6	(
water	16:36	0:0	6	session_id
water	16:46	0:0	6	)
arg	16:49	16:59	5	"%08x%08x"
water	16:49	0:0	6	"%08x%08x"
arg	16:61	16:68	5	random0
water	16:61	0:0	6	random0
arg	16:70	16:77	5	random1
water	16:70	0:0	6	random1
water	16:78	0:0	4	;
if	18:8	21:8	4	(stream -> multicast_port == 0)
cond	18:12	18:38	5	stream -> multicast_port == 0
water	18:12	0:0	6	stream
op	18:18	0:0	6	->
water	18:20	0:0	6	multicast_port
op	18:35	0:0	6	==
water	18:38	0:0	6	0
stmts	18:41	21:8	5	
water	18:41	0:0	6	{
water	19:12	0:0	6	stream
op	19:18	0:0	6	->
water	19:20	0:0	6	multicast_port
op	19:35	0:0	6	=
water	19:37	0:0	6	default_port
water	19:49	0:0	6	;
water	20:12	0:0	6	default_port
op	20:25	0:0	6	+=
water	20:28	0:0	6	100
water	20:31	0:0	6	;
water	21:8	0:0	6	}
water	22:8	0:0	4	dest_addr
op	22:17	0:0	4	.
water	22:18	0:0	4	sin_family
op	22:29	0:0	4	=
water	22:31	0:0	4	AF_INET
water	22:38	0:0	4	;
water	23:8	0:0	4	dest_addr
op	23:17	0:0	4	.
water	23:18	0:0	4	sin_addr
op	23:27	0:0	4	=
water	23:29	0:0	4	stream
op	23:35	0:0	4	->
water	23:37	0:0	4	multicast_ip
water	23:49	0:0	4	;
water	24:8	0:0	4	dest_addr
op	24:17	0:0	4	.
water	24:18	0:0	4	sin_port
op	24:27	0:0	4	=
call	24:29	24:57	4	htons
arg	24:35	24:57	5	stream->multicast_port
water	24:35	0:0	6	stream
op	24:41	0:0	6	->
water	24:43	0:0	6	multicast_port
water	24:58	0:0	4	;
water	25:8	0:0	4	rtp_c
op	25:14	0:0	4	=
call	25:16	26:69	4	rtp_new_connection
arg	25:35	25:45	5	&dest_addr
op	25:35	0:0	6	&
water	25:36	0:0	6	dest_addr
arg	25:47	25:53	5	stream
water	25:47	0:0	6	stream
arg	25:55	25:65	5	session_id
water	25:55	0:0	6	session_id
arg	26:35	26:69	5	RTSP_LOWER_TRANSPORT_UDP_MULTICAST
water	26:35	0:0	6	RTSP_LOWER_TRANSPORT_UDP_MULTICAST
water	26:70	0:0	4	;
if	27:8	28:20	4	(! rtp_c)
cond	27:12	27:13	5	! rtp_c
op	27:12	0:0	6	!
water	27:13	0:0	6	rtp_c
stmts	28:12	28:20	5	
continue	28:12	28:20	6	
if	29:8	33:8	4	(open_input_stream (rtp_c ,"" ) < 0)
cond	29:12	29:43	5	open_input_stream (rtp_c ,"" ) < 0
call	29:12	29:39	6	open_input_stream
arg	29:30	29:35	7	rtp_c
water	29:30	0:0	8	rtp_c
arg	29:37	29:39	7	""
water	29:37	0:0	8	""
op	29:41	0:0	6	<
water	29:43	0:0	6	0
stmts	29:46	33:8	5	
water	29:46	0:0	6	{
call	30:12	31:37	6	http_log
arg	30:21	30:68	7	"Could not open input stream for stream '%s'\n"
water	30:21	0:0	8	"Could not open input stream for stream '%s'\n"
arg	31:21	31:37	7	stream->filename
water	31:21	0:0	8	stream
op	31:27	0:0	8	->
water	31:29	0:0	8	filename
water	31:38	0:0	6	;
continue	32:12	32:20	6	
water	33:8	0:0	6	}
for	35:8	44:8	4	(stream_index = 0 ;stream_index < stream -> nb_streams;stream_index ++)
forinit	35:12	35:28	5	stream_index = 0 ;
water	35:12	0:0	6	stream_index
op	35:25	0:0	6	=
water	35:27	0:0	6	0
water	35:28	0:0	6	;
cond	35:30	35:53	5	stream_index < stream -> nb_streams
water	35:30	0:0	6	stream_index
op	35:43	0:0	6	<
water	35:45	0:0	6	stream
op	35:51	0:0	6	->
water	35:53	0:0	6	nb_streams
forexpr	36:12	36:24	5	stream_index ++
water	36:12	0:0	6	stream_index
op	36:24	0:0	6	++
stmts	36:28	44:8	5	
water	36:28	0:0	6	{
water	37:12	0:0	6	dest_addr
op	37:21	0:0	6	.
water	37:22	0:0	6	sin_port
op	37:31	0:0	6	=
call	37:33	38:55	6	htons
arg	37:39	38:55	7	stream->multicast_port+2*stream_index
water	37:39	0:0	8	stream
op	37:45	0:0	8	->
water	37:47	0:0	8	multicast_port
op	37:62	0:0	8	+
water	38:39	0:0	8	2
op	38:41	0:0	8	*
water	38:43	0:0	8	stream_index
water	38:56	0:0	6	;
if	39:12	40:24	6	(rtp_new_av_stream (rtp_c ,stream_index ,& dest_addr ,NULL ) >= 0)
cond	39:16	39:76	7	rtp_new_av_stream (rtp_c ,stream_index ,& dest_addr ,NULL ) >= 0
call	39:16	39:71	8	rtp_new_av_stream
arg	39:34	39:39	9	rtp_c
water	39:34	0:0	10	rtp_c
arg	39:41	39:53	9	stream_index
water	39:41	0:0	10	stream_index
arg	39:55	39:65	9	&dest_addr
op	39:55	0:0	10	&
water	39:56	0:0	10	dest_addr
arg	39:67	39:71	9	NULL
water	39:67	0:0	10	NULL
op	39:73	0:0	8	>=
water	39:76	0:0	8	0
stmts	40:16	40:24	7	
continue	40:16	40:24	8	
call	41:12	42:51	6	http_log
arg	41:21	41:70	7	"Could not open output stream '%s/streamid=%d'\n"
water	41:21	0:0	8	"Could not open output stream '%s/streamid=%d'\n"
arg	42:21	42:37	7	stream->filename
water	42:21	0:0	8	stream
op	42:27	0:0	8	->
water	42:29	0:0	8	filename
arg	42:39	42:51	7	stream_index
water	42:39	0:0	8	stream_index
water	42:52	0:0	6	;
call	43:12	43:18	6	exit
arg	43:17	43:18	7	1
water	43:17	0:0	8	1
water	43:19	0:0	6	;
water	44:8	0:0	6	}
water	45:8	0:0	4	rtp_c
op	45:13	0:0	4	->
water	45:15	0:0	4	state
op	45:21	0:0	4	=
water	45:23	0:0	4	HTTPSTATE_SEND_DATA
water	45:42	0:0	4	;
water	46:4	0:0	4	}

func	1:0	33:0	0	int	init_complex_filtergraph
params	1:28	0:0	1	
param	1:29	1:44	2	FilterGraph *	fg
stmnts	0:0	32:14	1	
decl	3:4	3:41	2	AVFilterInOut	*inputs
water	3:25	0:0	2	,
decl	3:4	3:41	2	AVFilterInOut	*outputs
water	3:35	0:0	2	,
decl	3:4	3:41	2	AVFilterInOut	*cur
decl	4:4	4:24	2	AVFilterGraph	*graph
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
water	8:4	0:0	2	graph
op	8:10	0:0	2	=
call	8:12	8:33	2	avfilter_graph_alloc
water	8:34	0:0	2	;
if	9:4	10:30	2	(! graph)
cond	9:8	9:9	3	! graph
op	9:8	0:0	4	!
water	9:9	0:0	4	graph
stmts	10:8	10:30	3	
return	10:8	10:30	4	AVERROR(ENOMEM)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	ENOMEM
water	10:23	0:0	7	ENOMEM
water	11:4	0:0	2	ret
op	11:8	0:0	2	=
call	11:10	11:72	2	avfilter_graph_parse2
arg	11:32	11:37	3	graph
water	11:32	0:0	4	graph
arg	11:39	11:53	3	fg->graph_desc
water	11:39	0:0	4	fg
op	11:41	0:0	4	->
water	11:43	0:0	4	graph_desc
arg	11:55	11:62	3	&inputs
op	11:55	0:0	4	&
water	11:56	0:0	4	inputs
arg	11:64	11:72	3	&outputs
op	11:64	0:0	4	&
water	11:65	0:0	4	outputs
water	11:73	0:0	2	;
if	12:4	13:17	2	(ret < 0)
cond	12:8	12:14	3	ret < 0
water	12:8	0:0	4	ret
op	12:12	0:0	4	<
water	12:14	0:0	4	0
stmts	13:8	13:17	3	
goto	13:8	13:17	4	fail
water	13:13	0:0	5	fail
for	14:4	15:34	2	(cur = inputs ;cur;cur = cur -> next)
forinit	14:9	14:21	3	cur = inputs ;
water	14:9	0:0	4	cur
op	14:13	0:0	4	=
water	14:15	0:0	4	inputs
water	14:21	0:0	4	;
cond	14:23	14:23	3	cur
water	14:23	0:0	4	cur
forexpr	14:28	14:39	3	cur = cur -> next
water	14:28	0:0	4	cur
op	14:32	0:0	4	=
water	14:34	0:0	4	cur
op	14:37	0:0	4	->
water	14:39	0:0	4	next
stmts	15:8	15:34	3	
call	15:8	15:33	4	init_input_filter
arg	15:26	15:28	5	fg
water	15:26	0:0	6	fg
arg	15:30	15:33	5	cur
water	15:30	0:0	6	cur
water	15:34	0:0	4	;
for	16:4	28:4	2	(cur = outputs ;cur;)
forinit	16:9	16:22	3	cur = outputs ;
water	16:9	0:0	4	cur
op	16:13	0:0	4	=
water	16:15	0:0	4	outputs
water	16:22	0:0	4	;
cond	16:24	16:24	3	cur
water	16:24	0:0	4	cur
forexpr	0:0	0:0	3	
stmts	16:30	28:4	3	
water	16:30	0:0	4	{
call	17:8	17:46	4	GROW_ARRAY
arg	17:19	17:30	5	fg->outputs
water	17:19	0:0	6	fg
op	17:21	0:0	6	->
water	17:23	0:0	6	outputs
arg	17:32	17:46	5	fg->nb_outputs
water	17:32	0:0	6	fg
op	17:34	0:0	6	->
water	17:36	0:0	6	nb_outputs
water	17:47	0:0	4	;
water	18:8	0:0	4	fg
op	18:10	0:0	4	->
water	18:12	0:0	4	outputs
op	18:19	0:0	4	[
water	18:20	0:0	4	fg
op	18:22	0:0	4	->
water	18:24	0:0	4	nb_outputs
op	18:35	0:0	4	-
water	18:37	0:0	4	1
op	18:38	0:0	4	]
op	18:40	0:0	4	=
call	18:42	18:76	4	av_mallocz
arg	18:53	18:76	5	sizeof(*fg->outputs[0])
op	18:53	0:0	6	sizeof
water	18:59	0:0	6	(
op	18:60	0:0	6	*
water	18:61	0:0	6	fg
op	18:63	0:0	6	->
water	18:65	0:0	6	outputs
op	18:72	0:0	6	[
water	18:73	0:0	6	0
op	18:74	0:0	6	]
water	18:75	0:0	6	)
water	18:77	0:0	4	;
if	19:8	20:27	4	(! fg -> outputs [ fg -> nb_outputs - 1 ])
cond	19:12	19:43	5	! fg -> outputs [ fg -> nb_outputs - 1 ]
op	19:12	0:0	6	!
water	19:13	0:0	6	fg
op	19:15	0:0	6	->
water	19:17	0:0	6	outputs
op	19:24	0:0	6	[
water	19:25	0:0	6	fg
op	19:27	0:0	6	->
water	19:29	0:0	6	nb_outputs
op	19:40	0:0	6	-
water	19:42	0:0	6	1
op	19:43	0:0	6	]
stmts	20:12	20:27	5	
call	20:12	20:26	6	exit_program
arg	20:25	20:26	7	1
water	20:25	0:0	8	1
water	20:27	0:0	6	;
water	21:8	0:0	4	fg
op	21:10	0:0	4	->
water	21:12	0:0	4	outputs
op	21:19	0:0	4	[
water	21:20	0:0	4	fg
op	21:22	0:0	4	->
water	21:24	0:0	4	nb_outputs
op	21:35	0:0	4	-
water	21:37	0:0	4	1
op	21:38	0:0	4	]
op	21:39	0:0	4	->
water	21:41	0:0	4	graph
op	21:49	0:0	4	=
water	21:51	0:0	4	fg
water	21:53	0:0	4	;
water	22:8	0:0	4	fg
op	22:10	0:0	4	->
water	22:12	0:0	4	outputs
op	22:19	0:0	4	[
water	22:20	0:0	4	fg
op	22:22	0:0	4	->
water	22:24	0:0	4	nb_outputs
op	22:35	0:0	4	-
water	22:37	0:0	4	1
op	22:38	0:0	4	]
op	22:39	0:0	4	->
water	22:41	0:0	4	out_tmp
op	22:49	0:0	4	=
water	22:51	0:0	4	cur
water	22:54	0:0	4	;
water	23:8	0:0	4	fg
op	23:10	0:0	4	->
water	23:12	0:0	4	outputs
op	23:19	0:0	4	[
water	23:20	0:0	4	fg
op	23:22	0:0	4	->
water	23:24	0:0	4	nb_outputs
op	23:35	0:0	4	-
water	23:37	0:0	4	1
op	23:38	0:0	4	]
op	23:39	0:0	4	->
water	23:41	0:0	4	type
op	23:49	0:0	4	=
call	23:51	24:85	4	avfilter_pad_get_type
arg	23:73	23:101	5	cur->filter_ctx->output_pads
water	23:73	0:0	6	cur
op	23:76	0:0	6	->
water	23:78	0:0	6	filter_ctx
op	23:88	0:0	6	->
water	23:90	0:0	6	output_pads
arg	24:73	24:85	5	cur->pad_idx
water	24:73	0:0	6	cur
op	24:76	0:0	6	->
water	24:78	0:0	6	pad_idx
water	24:86	0:0	4	;
water	25:8	0:0	4	fg
op	25:10	0:0	4	->
water	25:12	0:0	4	outputs
op	25:19	0:0	4	[
water	25:20	0:0	4	fg
op	25:22	0:0	4	->
water	25:24	0:0	4	nb_outputs
op	25:35	0:0	4	-
water	25:37	0:0	4	1
op	25:38	0:0	4	]
op	25:39	0:0	4	->
water	25:41	0:0	4	name
op	25:46	0:0	4	=
call	25:48	25:79	4	describe_filter_link
arg	25:69	25:71	5	fg
water	25:69	0:0	6	fg
arg	25:73	25:76	5	cur
water	25:73	0:0	6	cur
arg	25:78	25:79	5	0
water	25:78	0:0	6	0
water	25:80	0:0	4	;
water	26:8	0:0	4	cur
op	26:12	0:0	4	=
water	26:14	0:0	4	cur
op	26:17	0:0	4	->
water	26:19	0:0	4	next
water	26:23	0:0	4	;
water	27:8	0:0	4	fg
op	27:10	0:0	4	->
water	27:12	0:0	4	outputs
op	27:19	0:0	4	[
water	27:20	0:0	4	fg
op	27:22	0:0	4	->
water	27:24	0:0	4	nb_outputs
op	27:35	0:0	4	-
water	27:37	0:0	4	1
op	27:38	0:0	4	]
op	27:39	0:0	4	->
water	27:41	0:0	4	out_tmp
op	27:48	0:0	4	->
water	27:50	0:0	4	next
op	27:55	0:0	4	=
water	27:57	0:0	4	NULL
water	27:61	0:0	4	;
water	28:4	0:0	4	}
label	29:0	29:4	2	fail :
call	30:4	30:31	2	avfilter_inout_free
arg	30:24	30:31	3	&inputs
op	30:24	0:0	4	&
water	30:25	0:0	4	inputs
water	30:32	0:0	2	;
call	31:4	31:30	2	avfilter_graph_free
arg	31:24	31:30	3	&graph
op	31:24	0:0	4	&
water	31:25	0:0	4	graph
water	31:31	0:0	2	;
return	32:4	32:14	2	ret
water	32:11	0:0	3	ret

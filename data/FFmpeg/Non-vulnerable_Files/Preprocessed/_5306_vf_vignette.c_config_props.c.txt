func	1:0	30:0	0	static int	config_props
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	29:12	1	
decl	3:4	3:42	2	VignetteContext	*s
op	3:23	0:0	2	=
water	3:25	0:0	2	inlink
op	3:31	0:0	2	->
water	3:33	0:0	2	dst
op	3:36	0:0	2	->
water	3:38	0:0	2	priv
decl	4:4	4:48	2	AVRational	sar
op	4:19	0:0	2	=
water	4:21	0:0	2	inlink
op	4:27	0:0	2	->
water	4:29	0:0	2	sample_aspect_ratio
water	5:4	0:0	2	s
op	5:5	0:0	2	->
water	5:7	0:0	2	desc
op	5:12	0:0	2	=
call	5:14	5:48	2	av_pix_fmt_desc_get
arg	5:34	5:48	3	inlink->format
water	5:34	0:0	4	inlink
op	5:40	0:0	4	->
water	5:42	0:0	4	format
water	5:49	0:0	2	;
water	6:4	0:0	2	s
op	6:5	0:0	2	->
water	6:7	0:0	2	var_values
op	6:17	0:0	2	[
water	6:18	0:0	2	VAR_W
op	6:23	0:0	2	]
op	6:26	0:0	2	=
water	6:28	0:0	2	inlink
op	6:34	0:0	2	->
water	6:36	0:0	2	w
water	6:37	0:0	2	;
water	7:4	0:0	2	s
op	7:5	0:0	2	->
water	7:7	0:0	2	var_values
op	7:17	0:0	2	[
water	7:18	0:0	2	VAR_H
op	7:23	0:0	2	]
op	7:26	0:0	2	=
water	7:28	0:0	2	inlink
op	7:34	0:0	2	->
water	7:36	0:0	2	h
water	7:37	0:0	2	;
water	8:4	0:0	2	s
op	8:5	0:0	2	->
water	8:7	0:0	2	var_values
op	8:17	0:0	2	[
water	8:18	0:0	2	VAR_TB
op	8:24	0:0	2	]
op	8:26	0:0	2	=
call	8:28	8:52	2	av_q2d
arg	8:35	8:52	3	inlink->time_base
water	8:35	0:0	4	inlink
op	8:41	0:0	4	->
water	8:43	0:0	4	time_base
water	8:53	0:0	2	;
water	9:4	0:0	2	s
op	9:5	0:0	2	->
water	9:7	0:0	2	var_values
op	9:17	0:0	2	[
water	9:18	0:0	2	VAR_R
op	9:23	0:0	2	]
op	9:26	0:0	2	=
water	9:28	0:0	2	inlink
op	9:34	0:0	2	->
water	9:36	0:0	2	frame_rate
op	9:46	0:0	2	.
water	9:47	0:0	2	num
op	9:51	0:0	2	==
water	9:54	0:0	2	0
op	9:56	0:0	2	||
water	9:59	0:0	2	inlink
op	9:65	0:0	2	->
water	9:67	0:0	2	frame_rate
op	9:77	0:0	2	.
water	9:78	0:0	2	den
op	9:82	0:0	2	==
water	9:85	0:0	2	0
water	9:87	0:0	2	?
water	10:8	0:0	2	NAN
water	10:12	0:0	2	:
call	10:14	10:39	2	av_q2d
arg	10:21	10:39	3	inlink->frame_rate
water	10:21	0:0	4	inlink
op	10:27	0:0	4	->
water	10:29	0:0	4	frame_rate
water	10:40	0:0	2	;
if	11:4	12:29	2	(! sar . num || ! sar . den)
cond	11:8	11:25	3	! sar . num || ! sar . den
op	11:8	0:0	4	!
water	11:9	0:0	4	sar
op	11:12	0:0	4	.
water	11:13	0:0	4	num
op	11:17	0:0	4	||
op	11:20	0:0	4	!
water	11:21	0:0	4	sar
op	11:24	0:0	4	.
water	11:25	0:0	4	den
stmts	12:8	12:29	3	
water	12:8	0:0	4	sar
op	12:11	0:0	4	.
water	12:12	0:0	4	num
op	12:16	0:0	4	=
water	12:18	0:0	4	sar
op	12:21	0:0	4	.
water	12:22	0:0	4	den
op	12:26	0:0	4	=
water	12:28	0:0	4	1
water	12:29	0:0	4	;
if	13:4	16:4	2	(sar . num > sar . den)
cond	13:8	13:22	3	sar . num > sar . den
water	13:8	0:0	4	sar
op	13:11	0:0	4	.
water	13:12	0:0	4	num
op	13:16	0:0	4	>
water	13:18	0:0	4	sar
op	13:21	0:0	4	.
water	13:22	0:0	4	den
stmts	13:27	16:4	3	
water	13:27	0:0	4	{
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	xscale
op	14:18	0:0	4	=
call	14:20	14:51	4	av_q2d
arg	14:27	14:51	5	av_div_q(sar,s->aspect)
call	14:27	14:50	6	av_div_q
arg	14:36	14:39	7	sar
water	14:36	0:0	8	sar
arg	14:41	14:50	7	s->aspect
water	14:41	0:0	8	s
op	14:42	0:0	8	->
water	14:44	0:0	8	aspect
water	14:52	0:0	4	;
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	yscale
op	15:18	0:0	4	=
water	15:20	0:0	4	1
water	15:21	0:0	4	;
water	16:4	0:0	4	}
else	16:6	19:4	2
stmts	16:11	19:4	3	
water	16:11	0:0	4	{
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	yscale
op	17:18	0:0	4	=
call	17:20	17:51	4	av_q2d
arg	17:27	17:51	5	av_div_q(s->aspect,sar)
call	17:27	17:50	6	av_div_q
arg	17:36	17:45	7	s->aspect
water	17:36	0:0	8	s
op	17:37	0:0	8	->
water	17:39	0:0	8	aspect
arg	17:47	17:50	7	sar
water	17:47	0:0	8	sar
water	17:52	0:0	4	;
water	18:8	0:0	4	s
op	18:9	0:0	4	->
water	18:11	0:0	4	xscale
op	18:18	0:0	4	=
water	18:20	0:0	4	1
water	18:21	0:0	4	;
water	19:4	0:0	4	}
water	20:4	0:0	2	s
op	20:5	0:0	2	->
water	20:7	0:0	2	dmax
op	20:12	0:0	2	=
call	20:14	20:50	2	hypot
arg	20:20	20:34	3	inlink->w/2.
water	20:20	0:0	4	inlink
op	20:26	0:0	4	->
water	20:28	0:0	4	w
op	20:30	0:0	4	/
water	20:32	0:0	4	2
op	20:33	0:0	4	.
arg	20:36	20:50	3	inlink->h/2.
water	20:36	0:0	4	inlink
op	20:42	0:0	4	->
water	20:44	0:0	4	h
op	20:46	0:0	4	/
water	20:48	0:0	4	2
op	20:49	0:0	4	.
water	20:51	0:0	2	;
call	21:4	22:40	2	av_log
arg	21:11	21:12	3	s
water	21:11	0:0	4	s
arg	21:14	21:26	3	AV_LOG_DEBUG
water	21:14	0:0	4	AV_LOG_DEBUG
arg	21:28	21:59	3	"xscale=%f yscale=%f dmax=%f\n"
water	21:28	0:0	4	"xscale=%f yscale=%f dmax=%f\n"
arg	22:11	22:20	3	s->xscale
water	22:11	0:0	4	s
op	22:12	0:0	4	->
water	22:14	0:0	4	xscale
arg	22:22	22:31	3	s->yscale
water	22:22	0:0	4	s
op	22:23	0:0	4	->
water	22:25	0:0	4	yscale
arg	22:33	22:40	3	s->dmax
water	22:33	0:0	4	s
op	22:34	0:0	4	->
water	22:36	0:0	4	dmax
water	22:41	0:0	2	;
water	23:4	0:0	2	s
op	23:5	0:0	2	->
water	23:7	0:0	2	fmap_linesize
op	23:21	0:0	2	=
call	23:23	23:44	2	FFALIGN
arg	23:31	23:40	3	inlink->w
water	23:31	0:0	4	inlink
op	23:37	0:0	4	->
water	23:39	0:0	4	w
arg	23:42	23:44	3	32
water	23:42	0:0	4	32
water	23:45	0:0	2	;
water	24:4	0:0	2	s
op	24:5	0:0	2	->
water	24:7	0:0	2	fmap
op	24:12	0:0	2	=
call	24:14	24:76	2	av_malloc_array
arg	24:30	24:46	3	s->fmap_linesize
water	24:30	0:0	4	s
op	24:31	0:0	4	->
water	24:33	0:0	4	fmap_linesize
arg	24:48	24:76	3	inlink->h*sizeof(*s->fmap)
water	24:48	0:0	4	inlink
op	24:54	0:0	4	->
water	24:56	0:0	4	h
op	24:58	0:0	4	*
op	24:60	0:0	4	sizeof
water	24:66	0:0	4	(
op	24:67	0:0	4	*
water	24:68	0:0	4	s
op	24:69	0:0	4	->
water	24:71	0:0	4	fmap
water	24:75	0:0	4	)
water	24:77	0:0	2	;
if	25:4	26:30	2	(! s -> fmap)
cond	25:8	25:12	3	! s -> fmap
op	25:8	0:0	4	!
water	25:9	0:0	4	s
op	25:10	0:0	4	->
water	25:12	0:0	4	fmap
stmts	26:8	26:30	3	
return	26:8	26:30	4	AVERROR(ENOMEM)
call	26:15	26:29	5	AVERROR
arg	26:23	26:29	6	ENOMEM
water	26:23	0:0	7	ENOMEM
if	27:4	28:39	2	(s -> eval_mode == EVAL_MODE_INIT)
cond	27:8	27:24	3	s -> eval_mode == EVAL_MODE_INIT
water	27:8	0:0	4	s
op	27:9	0:0	4	->
water	27:11	0:0	4	eval_mode
op	27:21	0:0	4	==
water	27:24	0:0	4	EVAL_MODE_INIT
stmts	28:8	28:39	3	
call	28:8	28:38	4	update_context
arg	28:23	28:24	5	s
water	28:23	0:0	6	s
arg	28:26	28:32	5	inlink
water	28:26	0:0	6	inlink
arg	28:34	28:38	5	NULL
water	28:34	0:0	6	NULL
water	28:39	0:0	4	;
return	29:4	29:12	2	0
water	29:11	0:0	3	0

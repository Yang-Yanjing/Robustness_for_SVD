func	1:0	37:0	0	double	av_strtod
params	1:16	0:0	1	
param	1:17	1:35	2	const char *	numstr
param	1:37	1:48	2	char * *	tail
stmnts	0:0	36:12	1	
decl	3:4	3:12	2	double	d
decl	4:4	4:14	2	char	*next
if	5:4	7:4	2	(numstr [ 0 ] == '0' && ( numstr [ 1 ] | 0 x20 ) == 'x')
cond	5:7	5:43	3	numstr [ 0 ] == '0' && ( numstr [ 1 ] | 0 x20 ) == 'x'
water	5:7	0:0	4	numstr
op	5:13	0:0	4	[
water	5:14	0:0	4	0
op	5:15	0:0	4	]
op	5:16	0:0	4	==
water	5:18	0:0	4	'0'
op	5:22	0:0	4	&&
water	5:25	0:0	4	(
water	5:26	0:0	4	numstr
op	5:32	0:0	4	[
water	5:33	0:0	4	1
op	5:34	0:0	4	]
op	5:35	0:0	4	|
water	5:36	0:0	4	0
water	5:37	0:0	4	x20
water	5:40	0:0	4	)
op	5:41	0:0	4	==
water	5:43	0:0	4	'x'
stmts	5:48	7:4	3	
water	5:48	0:0	4	{
water	6:8	0:0	4	d
op	6:10	0:0	4	=
call	6:12	6:37	4	strtoul
arg	6:20	6:26	5	numstr
water	6:20	0:0	6	numstr
arg	6:28	6:33	5	&next
op	6:28	0:0	6	&
water	6:29	0:0	6	next
arg	6:35	6:37	5	16
water	6:35	0:0	6	16
water	6:38	0:0	4	;
water	7:4	0:0	4	}
else	7:6	8:33	2
stmts	8:8	8:33	3	
water	8:8	0:0	4	d
op	8:10	0:0	4	=
call	8:12	8:32	4	strtod
arg	8:19	8:25	5	numstr
water	8:19	0:0	6	numstr
arg	8:27	8:32	5	&next
op	8:27	0:0	6	&
water	8:28	0:0	6	next
water	8:33	0:0	4	;
if	10:4	31:4	2	(next != numstr)
cond	10:8	10:14	3	next != numstr
water	10:8	0:0	4	next
op	10:12	0:0	4	!=
water	10:14	0:0	4	numstr
stmts	10:22	31:4	3	
water	10:22	0:0	4	{
if	11:8	15:8	4	(next [ 0 ] == 'd' && next [ 1 ] == 'B')
cond	11:12	11:41	5	next [ 0 ] == 'd' && next [ 1 ] == 'B'
water	11:12	0:0	6	next
op	11:16	0:0	6	[
water	11:17	0:0	6	0
op	11:18	0:0	6	]
op	11:20	0:0	6	==
water	11:23	0:0	6	'd'
op	11:27	0:0	6	&&
water	11:30	0:0	6	next
op	11:34	0:0	6	[
water	11:35	0:0	6	1
op	11:36	0:0	6	]
op	11:38	0:0	6	==
water	11:41	0:0	6	'B'
stmts	11:46	15:8	5	
water	11:46	0:0	6	{
water	13:12	0:0	6	d
op	13:14	0:0	6	=
call	13:16	13:30	6	pow
arg	13:20	13:22	7	10
water	13:20	0:0	8	10
arg	13:24	13:30	7	d/20
water	13:24	0:0	8	d
op	13:26	0:0	8	/
water	13:28	0:0	8	20
water	13:31	0:0	6	;
water	14:12	0:0	6	next
op	14:17	0:0	6	+=
water	14:20	0:0	6	2
water	14:21	0:0	6	;
water	15:8	0:0	6	}
else	15:10	26:8	4
stmts	15:15	26:8	5	
if	15:15	26:8	6	(* next >= 'E' && * next <= 'z')
cond	15:19	15:44	7	* next >= 'E' && * next <= 'z'
op	15:19	0:0	8	*
water	15:20	0:0	8	next
op	15:25	0:0	8	>=
water	15:28	0:0	8	'E'
op	15:32	0:0	8	&&
op	15:35	0:0	8	*
water	15:36	0:0	8	next
op	15:41	0:0	8	<=
water	15:44	0:0	8	'z'
stmts	15:49	26:8	7	
water	15:49	0:0	8	{
decl	16:12	16:43	8	int	e
op	16:17	0:0	8	=
water	16:19	0:0	8	si_prefixes
op	16:30	0:0	8	[
op	16:31	0:0	8	*
water	16:32	0:0	8	next
op	16:37	0:0	8	-
water	16:39	0:0	8	'E'
op	16:42	0:0	8	]
if	17:12	25:12	8	(e)
cond	17:16	17:16	9	e
water	17:16	0:0	10	e
stmts	17:19	25:12	9	
water	17:19	0:0	10	{
if	18:16	21:16	10	(next [ 1 ] == 'i')
cond	18:20	18:31	11	next [ 1 ] == 'i'
water	18:20	0:0	12	next
op	18:24	0:0	12	[
water	18:25	0:0	12	1
op	18:26	0:0	12	]
op	18:28	0:0	12	==
water	18:31	0:0	12	'i'
stmts	18:36	21:16	11	
water	18:36	0:0	12	{
water	19:20	0:0	12	d
op	19:21	0:0	12	*=
call	19:24	19:37	12	pow
arg	19:29	19:30	13	2
water	19:29	0:0	14	2
arg	19:32	19:37	13	e/0.3
water	19:32	0:0	14	e
op	19:33	0:0	14	/
water	19:34	0:0	14	0
op	19:35	0:0	14	.
water	19:36	0:0	14	3
water	19:38	0:0	12	;
water	20:20	0:0	12	next
op	20:24	0:0	12	+=
water	20:26	0:0	12	2
water	20:27	0:0	12	;
water	21:16	0:0	12	}
else	21:18	24:16	10
stmts	21:23	24:16	11	
water	21:23	0:0	12	{
water	22:20	0:0	12	d
op	22:21	0:0	12	*=
call	22:24	22:33	12	pow
arg	22:28	22:30	13	10
water	22:28	0:0	14	10
arg	22:32	22:33	13	e
water	22:32	0:0	14	e
water	22:34	0:0	12	;
water	23:20	0:0	12	next
op	23:24	0:0	12	++
water	23:26	0:0	12	;
water	24:16	0:0	12	}
water	25:12	0:0	10	}
water	26:8	0:0	8	}
if	27:8	30:8	4	(* next == 'B')
cond	27:12	27:19	5	* next == 'B'
op	27:12	0:0	6	*
water	27:13	0:0	6	next
op	27:17	0:0	6	==
water	27:19	0:0	6	'B'
stmts	27:24	30:8	5	
water	27:24	0:0	6	{
water	28:12	0:0	6	d
op	28:13	0:0	6	*=
water	28:15	0:0	6	8
water	28:16	0:0	6	;
water	29:12	0:0	6	next
op	29:16	0:0	6	++
water	29:18	0:0	6	;
water	30:8	0:0	6	}
water	31:4	0:0	4	}
if	34:4	35:20	2	(tail)
cond	34:8	34:8	3	tail
water	34:8	0:0	4	tail
stmts	35:8	35:20	3	
op	35:8	0:0	4	*
water	35:9	0:0	4	tail
op	35:14	0:0	4	=
water	35:16	0:0	4	next
water	35:20	0:0	4	;
return	36:4	36:12	2	d
water	36:11	0:0	3	d

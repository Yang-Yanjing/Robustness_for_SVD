func	2:0	33:0	0	static int	asf_read_data
params	2:24	0:0	1	
param	2:25	2:43	2	AVFormatContext *	s
param	2:45	2:68	2	const GUIDParseTable *	g
stmnts	0:0	32:12	1	
decl	4:4	4:34	2	ASFContext	*asf
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	priv_data
decl	5:4	5:27	2	AVIOContext	*pb
op	5:20	0:0	2	=
water	5:22	0:0	2	s
op	5:23	0:0	2	->
water	5:25	0:0	2	pb
decl	6:4	6:52	2	uint64_t	size
op	6:20	0:0	2	=
water	6:22	0:0	2	asf
op	6:25	0:0	2	->
water	6:27	0:0	2	data_size
op	6:37	0:0	2	=
call	6:39	6:51	3	avio_rl64
arg	6:49	6:51	4	pb
water	6:49	0:0	5	pb
decl	7:4	7:9	2	int	i
if	8:4	11:4	2	(! asf -> data_reached)
cond	8:8	8:14	3	! asf -> data_reached
op	8:8	0:0	4	!
water	8:9	0:0	4	asf
op	8:12	0:0	4	->
water	8:14	0:0	4	data_reached
stmts	8:28	11:4	3	
water	8:28	0:0	4	{
water	9:8	0:0	4	asf
op	9:11	0:0	4	->
water	9:13	0:0	4	data_reached
op	9:32	0:0	4	=
water	9:34	0:0	4	1
water	9:35	0:0	4	;
water	10:8	0:0	4	asf
op	10:11	0:0	4	->
water	10:13	0:0	4	data_offset
op	10:32	0:0	4	=
water	10:34	0:0	4	asf
op	10:37	0:0	4	->
water	10:39	0:0	4	offset
water	10:45	0:0	4	;
water	11:4	0:0	4	}
for	12:4	15:4	2	(i = 0 ;i < asf -> nb_streams;i ++)
forinit	12:9	12:14	3	i = 0 ;
water	12:9	0:0	4	i
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	;
cond	12:16	12:25	3	i < asf -> nb_streams
water	12:16	0:0	4	i
op	12:18	0:0	4	<
water	12:20	0:0	4	asf
op	12:23	0:0	4	->
water	12:25	0:0	4	nb_streams
forexpr	12:37	12:38	3	i ++
water	12:37	0:0	4	i
op	12:38	0:0	4	++
stmts	12:42	15:4	3	
water	12:42	0:0	4	{
if	13:8	14:51	4	(! ( asf -> b_flags & ASF_FLAG_BROADCAST ))
cond	13:12	13:47	5	! ( asf -> b_flags & ASF_FLAG_BROADCAST )
op	13:12	0:0	6	!
water	13:13	0:0	6	(
water	13:14	0:0	6	asf
op	13:17	0:0	6	->
water	13:19	0:0	6	b_flags
op	13:27	0:0	6	&
water	13:29	0:0	6	ASF_FLAG_BROADCAST
water	13:47	0:0	6	)
stmts	14:12	14:51	5	
water	14:12	0:0	6	s
op	14:13	0:0	6	->
water	14:15	0:0	6	streams
op	14:22	0:0	6	[
water	14:23	0:0	6	i
op	14:24	0:0	6	]
op	14:25	0:0	6	->
water	14:27	0:0	6	duration
op	14:36	0:0	6	=
water	14:38	0:0	6	asf
op	14:41	0:0	6	->
water	14:43	0:0	6	duration
water	14:51	0:0	6	;
water	15:4	0:0	4	}
water	16:4	0:0	2	asf
op	16:7	0:0	2	->
water	16:9	0:0	2	nb_mult_left
op	16:32	0:0	2	=
water	16:34	0:0	2	0
water	16:35	0:0	2	;
water	17:4	0:0	2	asf
op	17:7	0:0	2	->
water	17:9	0:0	2	sub_left
op	17:32	0:0	2	=
water	17:34	0:0	2	0
water	17:35	0:0	2	;
water	18:4	0:0	2	asf
op	18:7	0:0	2	->
water	18:9	0:0	2	state
op	18:32	0:0	2	=
water	18:34	0:0	2	PARSE_PACKET_HEADER
water	18:53	0:0	2	;
water	19:4	0:0	2	asf
op	19:7	0:0	2	->
water	19:9	0:0	2	return_subpayload
op	19:32	0:0	2	=
water	19:34	0:0	2	0
water	19:35	0:0	2	;
water	20:4	0:0	2	asf
op	20:7	0:0	2	->
water	20:9	0:0	2	packet_size_internal
op	20:32	0:0	2	=
water	20:34	0:0	2	0
water	20:35	0:0	2	;
call	21:4	21:20	2	avio_skip
arg	21:14	21:16	3	pb
water	21:14	0:0	4	pb
arg	21:18	21:20	3	16
water	21:18	0:0	4	16
water	21:21	0:0	2	;
water	22:4	0:0	2	size
op	22:9	0:0	2	=
call	22:11	22:23	2	avio_rl64
arg	22:21	22:23	3	pb
water	22:21	0:0	4	pb
water	22:24	0:0	2	;
if	23:4	27:37	2	(size != asf -> nb_packets)
cond	23:8	23:21	3	size != asf -> nb_packets
water	23:8	0:0	4	size
op	23:13	0:0	4	!=
water	23:16	0:0	4	asf
op	23:19	0:0	4	->
water	23:21	0:0	4	nb_packets
stmts	24:8	27:37	3	
call	24:8	27:36	4	av_log
arg	24:15	24:16	5	s
water	24:15	0:0	6	s
arg	24:18	24:32	5	AV_LOG_WARNING
water	24:18	0:0	6	AV_LOG_WARNING
arg	25:15	26:83	5	"Number of Packets from File Properties Object is not equal to Total""Datapackets value! num of packets %"PRIu64" total num %"PRIu64".\n"
water	25:15	0:0	6	"Number of Packets from File Properties Object is not equal to Total"
water	26:15	0:0	6	"Datapackets value! num of packets %"
water	26:52	0:0	6	PRIu64
water	26:58	0:0	6	" total num %"
water	26:72	0:0	6	PRIu64
water	26:78	0:0	6	".\n"
arg	27:15	27:19	5	size
water	27:15	0:0	6	size
arg	27:21	27:36	5	asf->nb_packets
water	27:21	0:0	6	asf
op	27:24	0:0	6	->
water	27:26	0:0	6	nb_packets
water	27:37	0:0	4	;
call	28:4	28:19	2	avio_skip
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:19	3	2
water	28:18	0:0	4	2
water	28:20	0:0	2	;
water	29:4	0:0	2	asf
op	29:7	0:0	2	->
water	29:9	0:0	2	first_packet_offset
op	29:29	0:0	2	=
call	29:31	29:43	2	avio_tell
arg	29:41	29:43	3	pb
water	29:41	0:0	4	pb
water	29:44	0:0	2	;
if	30:4	31:55	2	(pb -> seekable && ! ( asf -> b_flags & ASF_FLAG_BROADCAST ))
cond	30:8	30:59	3	pb -> seekable && ! ( asf -> b_flags & ASF_FLAG_BROADCAST )
water	30:8	0:0	4	pb
op	30:10	0:0	4	->
water	30:12	0:0	4	seekable
op	30:21	0:0	4	&&
op	30:24	0:0	4	!
water	30:25	0:0	4	(
water	30:26	0:0	4	asf
op	30:29	0:0	4	->
water	30:31	0:0	4	b_flags
op	30:39	0:0	4	&
water	30:41	0:0	4	ASF_FLAG_BROADCAST
water	30:59	0:0	4	)
stmts	31:8	31:55	3	
call	31:8	31:54	4	align_position
arg	31:23	31:25	5	pb
water	31:23	0:0	6	pb
arg	31:27	31:38	5	asf->offset
water	31:27	0:0	6	asf
op	31:30	0:0	6	->
water	31:32	0:0	6	offset
arg	31:40	31:54	5	asf->data_size
water	31:40	0:0	6	asf
op	31:43	0:0	6	->
water	31:45	0:0	6	data_size
water	31:55	0:0	4	;
return	32:4	32:12	2	0
water	32:11	0:0	3	0

func	1:0	49:0	0	static int	ffserver_opt_preset
params	1:30	0:0	1	
param	1:31	1:46	2	const char *	arg
param	1:48	1:56	2	int	type
param	1:58	1:80	2	FFServerConfig *	config
stmnts	0:0	48:14	1	
decl	3:4	3:16	2	FILE	*f
op	3:11	0:0	2	=
water	3:12	0:0	2	NULL
decl	4:4	4:58	2	char	filename[1000]
water	4:23	0:0	2	,
decl	4:4	4:58	2	char	tmp[1000]
water	4:34	0:0	2	,
decl	4:4	4:58	2	char	tmp2[1000]
water	4:46	0:0	2	,
decl	4:4	4:58	2	char	line[1000]
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
decl	6:4	6:25	2	AVCodecContext	*avctx
decl	7:4	7:24	2	const AVCodec	*codec
switch	8:4	17:4	2	(type)
cond	8:11	8:11	3	type
water	8:11	0:0	4	type
stmts	8:17	17:4	3	
water	8:17	0:0	4	{
label	9:4	9:32	4	case AV_OPT_FLAG_AUDIO_PARAM :
water	10:8	0:0	4	avctx
op	10:14	0:0	4	=
water	10:16	0:0	4	config
op	10:22	0:0	4	->
water	10:24	0:0	4	dummy_actx
water	10:34	0:0	4	;
break	11:8	11:13	4	
label	12:4	12:32	4	case AV_OPT_FLAG_VIDEO_PARAM :
water	13:8	0:0	4	avctx
op	13:14	0:0	4	=
water	13:16	0:0	4	config
op	13:22	0:0	4	->
water	13:24	0:0	4	dummy_vctx
water	13:34	0:0	4	;
break	14:8	14:13	4	
label	15:4	15:11	4	default :
call	16:8	16:20	4	av_assert0
arg	16:19	16:20	5	0
water	16:19	0:0	6	0
water	16:21	0:0	4	;
water	17:4	0:0	4	}
water	18:4	0:0	2	codec
op	18:10	0:0	2	=
call	18:12	18:48	2	avcodec_find_encoder
arg	18:33	18:48	3	avctx->codec_id
water	18:33	0:0	4	avctx
op	18:38	0:0	4	->
water	18:40	0:0	4	codec_id
water	18:49	0:0	2	;
if	19:4	23:4	2	(! ( f =get_preset_file (filename ,sizeof ( filename ) ,arg ,0 ,codec ? codec -> name : NULL ) ))
cond	19:8	20:57	3	! ( f =get_preset_file (filename ,sizeof ( filename ) ,arg ,0 ,codec ? codec -> name : NULL ) )
op	19:8	0:0	4	!
water	19:9	0:0	4	(
water	19:10	0:0	4	f
op	19:12	0:0	4	=
call	19:14	20:56	4	get_preset_file
arg	19:30	19:38	5	filename
water	19:30	0:0	6	filename
arg	19:40	19:56	5	sizeof(filename)
op	19:40	0:0	6	sizeof
water	19:46	0:0	6	(
water	19:47	0:0	6	filename
water	19:55	0:0	6	)
arg	19:58	19:61	5	arg
water	19:58	0:0	6	arg
arg	19:63	19:64	5	0
water	19:63	0:0	6	0
arg	20:30	20:56	5	codec?codec->name:NULL
water	20:30	0:0	6	codec
water	20:36	0:0	6	?
water	20:38	0:0	6	codec
op	20:43	0:0	6	->
water	20:45	0:0	6	name
water	20:50	0:0	6	:
water	20:52	0:0	6	NULL
water	20:57	0:0	4	)
stmts	20:60	23:4	3	
water	20:60	0:0	4	{
call	21:8	21:74	4	av_log
arg	21:15	21:19	5	NULL
water	21:15	0:0	6	NULL
arg	21:21	21:33	5	AV_LOG_ERROR
water	21:21	0:0	6	AV_LOG_ERROR
arg	21:35	21:69	5	"File for preset '%s' not found\n"
water	21:35	0:0	6	"File for preset '%s' not found\n"
arg	21:71	21:74	5	arg
water	21:71	0:0	6	arg
water	21:75	0:0	4	;
return	22:8	22:30	4	AVERROR(EINVAL)
call	22:15	22:29	5	AVERROR
arg	22:23	22:29	6	EINVAL
water	22:23	0:0	7	EINVAL
water	23:4	0:0	4	}
while	24:4	46:4	2	(!feof (f ))
cond	24:10	24:17	3	!feof (f )
op	24:10	0:0	4	!
call	24:11	24:17	4	feof
arg	24:16	24:17	5	f
water	24:16	0:0	6	f
stmts	24:19	46:4	3	
water	24:19	0:0	4	{
decl	25:8	25:49	4	int	e
op	25:13	0:0	4	=
call	25:15	25:44	5	fscanf
arg	25:22	25:23	6	f
water	25:22	0:0	7	f
arg	25:25	25:38	6	"%999[^\n]\n"
water	25:25	0:0	7	"%999[^\n]\n"
arg	25:40	25:44	6	line
water	25:40	0:0	7	line
op	25:46	0:0	4	-
water	25:48	0:0	4	1
if	26:8	27:20	4	(line [ 0 ] == '#' && ! e)
cond	26:11	26:30	5	line [ 0 ] == '#' && ! e
water	26:11	0:0	6	line
op	26:15	0:0	6	[
water	26:16	0:0	6	0
op	26:17	0:0	6	]
op	26:19	0:0	6	==
water	26:22	0:0	6	'#'
op	26:26	0:0	6	&&
op	26:29	0:0	6	!
water	26:30	0:0	6	e
stmts	27:12	27:20	5	
continue	27:12	27:20	6	
water	28:8	0:0	4	e
op	28:9	0:0	4	|=
call	28:12	28:58	4	sscanf
arg	28:19	28:23	5	line
water	28:19	0:0	6	line
arg	28:25	28:47	5	"%999[^=]=%999[^\n]\n"
water	28:25	0:0	6	"%999[^=]=%999[^\n]\n"
arg	28:49	28:52	5	tmp
water	28:49	0:0	6	tmp
arg	28:54	28:58	5	tmp2
water	28:54	0:0	6	tmp2
op	28:60	0:0	4	-
water	28:62	0:0	4	2
water	28:63	0:0	4	;
if	29:8	34:8	4	(e)
cond	29:11	29:11	5	e
water	29:11	0:0	6	e
stmts	29:13	34:8	5	
water	29:13	0:0	6	{
call	30:12	31:23	6	av_log
arg	30:19	30:23	7	NULL
water	30:19	0:0	8	NULL
arg	30:25	30:37	7	AV_LOG_ERROR
water	30:25	0:0	8	AV_LOG_ERROR
arg	30:39	30:67	7	"%s: Invalid syntax: '%s'\n"
water	30:39	0:0	8	"%s: Invalid syntax: '%s'\n"
arg	30:69	30:77	7	filename
water	30:69	0:0	8	filename
arg	31:19	31:23	7	line
water	31:19	0:0	8	line
water	31:24	0:0	6	;
water	32:12	0:0	6	ret
op	32:16	0:0	6	=
call	32:18	32:32	6	AVERROR
arg	32:26	32:32	7	EINVAL
water	32:26	0:0	8	EINVAL
water	32:33	0:0	6	;
break	33:12	33:17	6	
water	34:8	0:0	6	}
if	35:8	40:8	4	(!strcmp (tmp ,"acodec" ) && avctx -> codec_type == AVMEDIA_TYPE_AUDIO || !strcmp (tmp ,"vcodec" ) && avctx -> codec_type == AVMEDIA_TYPE_VIDEO)
cond	35:12	36:59	5	!strcmp (tmp ,"acodec" ) && avctx -> codec_type == AVMEDIA_TYPE_AUDIO || !strcmp (tmp ,"vcodec" ) && avctx -> codec_type == AVMEDIA_TYPE_VIDEO
op	35:12	0:0	6	!
call	35:13	35:33	6	strcmp
arg	35:20	35:23	7	tmp
water	35:20	0:0	8	tmp
arg	35:25	35:33	7	"acodec"
water	35:25	0:0	8	"acodec"
op	35:35	0:0	6	&&
water	35:38	0:0	6	avctx
op	35:43	0:0	6	->
water	35:45	0:0	6	codec_type
op	35:56	0:0	6	==
water	35:59	0:0	6	AVMEDIA_TYPE_AUDIO
op	35:78	0:0	6	||
op	36:12	0:0	6	!
call	36:13	36:33	6	strcmp
arg	36:20	36:23	7	tmp
water	36:20	0:0	8	tmp
arg	36:25	36:33	7	"vcodec"
water	36:25	0:0	8	"vcodec"
op	36:35	0:0	6	&&
water	36:38	0:0	6	avctx
op	36:43	0:0	6	->
water	36:45	0:0	6	codec_type
op	36:56	0:0	6	==
water	36:59	0:0	6	AVMEDIA_TYPE_VIDEO
stmts	37:8	40:8	5	
water	37:8	0:0	6	{
if	38:12	39:21	6	(ffserver_set_codec (avctx ,tmp2 ,config ) < 0)
cond	38:16	38:58	7	ffserver_set_codec (avctx ,tmp2 ,config ) < 0
call	38:16	38:54	8	ffserver_set_codec
arg	38:35	38:40	9	avctx
water	38:35	0:0	10	avctx
arg	38:42	38:46	9	tmp2
water	38:42	0:0	10	tmp2
arg	38:48	38:54	9	config
water	38:48	0:0	10	config
op	38:56	0:0	8	<
water	38:58	0:0	8	0
stmts	39:16	39:21	7	
break	39:16	39:21	8	
water	40:8	0:0	6	}
else	40:10	44:8	4
stmts	40:15	44:8	5	
if	40:15	44:8	6	(!strcmp (tmp ,"scodec" ))
cond	40:19	40:40	7	!strcmp (tmp ,"scodec" )
op	40:19	0:0	8	!
call	40:20	40:40	8	strcmp
arg	40:27	40:30	9	tmp
water	40:27	0:0	10	tmp
arg	40:32	40:40	9	"scodec"
water	40:32	0:0	10	"scodec"
stmts	40:43	44:8	7	
water	40:43	0:0	8	{
call	41:12	41:66	8	av_log
arg	41:19	41:23	9	NULL
water	41:19	0:0	10	NULL
arg	41:25	41:37	9	AV_LOG_ERROR
water	41:25	0:0	10	AV_LOG_ERROR
arg	41:39	41:66	9	"Subtitles preset found.\n"
water	41:39	0:0	10	"Subtitles preset found.\n"
water	41:67	0:0	8	;
water	42:12	0:0	8	ret
op	42:16	0:0	8	=
call	42:18	42:32	8	AVERROR
arg	42:26	42:32	9	EINVAL
water	42:26	0:0	10	EINVAL
water	42:33	0:0	8	;
break	43:12	43:17	8	
water	44:8	0:0	8	}
else	44:10	45:17	4
stmts	44:15	45:17	5	
if	44:15	45:17	6	(ffserver_save_avoption (tmp ,tmp2 ,type ,config ) < 0)
cond	44:19	44:69	7	ffserver_save_avoption (tmp ,tmp2 ,type ,config ) < 0
call	44:19	44:65	8	ffserver_save_avoption
arg	44:42	44:45	9	tmp
water	44:42	0:0	10	tmp
arg	44:47	44:51	9	tmp2
water	44:47	0:0	10	tmp2
arg	44:53	44:57	9	type
water	44:53	0:0	10	type
arg	44:59	44:65	9	config
water	44:59	0:0	10	config
op	44:67	0:0	8	<
water	44:69	0:0	8	0
stmts	45:12	45:17	7	
break	45:12	45:17	8	
water	46:4	0:0	4	}
call	47:4	47:12	2	fclose
arg	47:11	47:12	3	f
water	47:11	0:0	4	f
water	47:13	0:0	2	;
return	48:4	48:14	2	ret
water	48:11	0:0	3	ret

func	1:0	23:0	0	static void	hScale16To19_c
params	1:26	0:0	1	
param	1:27	1:40	2	SwsContext *	c
param	1:42	1:55	2	int16_t *	_dst
param	1:57	1:65	2	int	dstW
param	2:27	2:46	2	const uint8_t *	_src
param	2:48	2:69	2	const int16_t *	filter
param	3:27	3:51	2	const int32_t *	filterPos
param	3:53	3:67	2	int	filterSize
stmnts	0:0	22:4	1	
decl	5:4	5:70	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:69	3	av_pix_fmt_desc_get
arg	5:57	5:69	4	c->srcFormat
water	5:57	0:0	5	c
op	5:58	0:0	5	->
water	5:60	0:0	5	srcFormat
decl	6:4	6:9	2	int	i
decl	7:4	7:42	2	int32_t	*dst
op	7:24	0:0	2	=
water	7:26	0:0	2	(
water	7:27	0:0	2	int32_t
op	7:35	0:0	2	*
water	7:36	0:0	2	)
water	7:38	0:0	2	_dst
decl	8:4	8:49	2	const uint16_t	*src
op	8:24	0:0	2	=
water	8:26	0:0	2	(
water	8:27	0:0	2	const
water	8:33	0:0	2	uint16_t
op	8:42	0:0	2	*
water	8:43	0:0	2	)
water	8:45	0:0	2	_src
decl	9:4	9:52	2	int	bits
op	9:24	0:0	2	=
water	9:26	0:0	2	desc
op	9:30	0:0	2	->
water	9:32	0:0	2	comp
op	9:36	0:0	2	[
water	9:37	0:0	2	0
op	9:38	0:0	2	]
op	9:39	0:0	2	.
water	9:40	0:0	2	depth_minus1
decl	10:4	10:34	2	int	sh
op	10:24	0:0	2	=
water	10:26	0:0	2	bits
op	10:31	0:0	2	-
water	10:33	0:0	2	4
if	11:4	12:13	2	((isAnyRGB (c -> srcFormat ) || c -> srcFormat == AV_PIX_FMT_PAL8 ) && desc -> comp [ 0 ] . depth_minus1 < 15)
cond	11:7	11:95	3	(isAnyRGB (c -> srcFormat ) || c -> srcFormat == AV_PIX_FMT_PAL8 ) && desc -> comp [ 0 ] . depth_minus1 < 15
water	11:7	0:0	4	(
call	11:8	11:29	4	isAnyRGB
arg	11:17	11:29	5	c->srcFormat
water	11:17	0:0	6	c
op	11:18	0:0	6	->
water	11:20	0:0	6	srcFormat
op	11:31	0:0	4	||
water	11:34	0:0	4	c
op	11:35	0:0	4	->
water	11:37	0:0	4	srcFormat
op	11:46	0:0	4	==
water	11:48	0:0	4	AV_PIX_FMT_PAL8
water	11:63	0:0	4	)
op	11:65	0:0	4	&&
water	11:68	0:0	4	desc
op	11:72	0:0	4	->
water	11:74	0:0	4	comp
op	11:78	0:0	4	[
water	11:79	0:0	4	0
op	11:80	0:0	4	]
op	11:81	0:0	4	.
water	11:82	0:0	4	depth_minus1
op	11:94	0:0	4	<
water	11:95	0:0	4	15
stmts	12:8	12:13	3	
water	12:8	0:0	4	sh
op	12:10	0:0	4	=
water	12:12	0:0	4	9
water	12:13	0:0	4	;
for	13:4	22:4	2	(i = 0 ;i < dstW;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	i < dstW
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	dstW
forexpr	13:26	13:27	3	i ++
water	13:26	0:0	4	i
op	13:27	0:0	4	++
stmts	13:31	22:4	3	
water	13:31	0:0	4	{
decl	14:8	14:13	4	int	j
decl	15:8	15:33	4	int	srcPos
op	15:19	0:0	4	=
water	15:21	0:0	4	filterPos
op	15:30	0:0	4	[
water	15:31	0:0	4	i
op	15:32	0:0	4	]
decl	16:8	16:22	4	int	val
op	16:19	0:0	4	=
water	16:21	0:0	4	0
for	17:8	19:8	4	(j = 0 ;j < filterSize;j ++)
forinit	17:13	17:18	5	j = 0 ;
water	17:13	0:0	6	j
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:24	5	j < filterSize
water	17:20	0:0	6	j
op	17:22	0:0	6	<
water	17:24	0:0	6	filterSize
forexpr	17:36	17:37	5	j ++
water	17:36	0:0	6	j
op	17:37	0:0	6	++
stmts	17:41	19:8	5	
water	17:41	0:0	6	{
water	18:12	0:0	6	val
op	18:16	0:0	6	+=
water	18:19	0:0	6	src
op	18:22	0:0	6	[
water	18:23	0:0	6	srcPos
op	18:30	0:0	6	+
water	18:32	0:0	6	j
op	18:33	0:0	6	]
op	18:35	0:0	6	*
water	18:37	0:0	6	filter
op	18:43	0:0	6	[
water	18:44	0:0	6	filterSize
op	18:55	0:0	6	*
water	18:57	0:0	6	i
op	18:59	0:0	6	+
water	18:61	0:0	6	j
op	18:62	0:0	6	]
water	18:63	0:0	6	;
water	19:8	0:0	6	}
water	21:8	0:0	4	dst
op	21:11	0:0	4	[
water	21:12	0:0	4	i
op	21:13	0:0	4	]
op	21:15	0:0	4	=
call	21:17	21:47	4	FFMIN
arg	21:23	21:32	5	val>>sh
water	21:23	0:0	6	val
op	21:27	0:0	6	>>
water	21:30	0:0	6	sh
arg	21:34	21:47	5	(1<<19)-1
water	21:34	0:0	6	(
water	21:35	0:0	6	1
op	21:37	0:0	6	<<
water	21:40	0:0	6	19
water	21:42	0:0	6	)
op	21:44	0:0	6	-
water	21:46	0:0	6	1
water	21:48	0:0	4	;
water	22:4	0:0	4	}

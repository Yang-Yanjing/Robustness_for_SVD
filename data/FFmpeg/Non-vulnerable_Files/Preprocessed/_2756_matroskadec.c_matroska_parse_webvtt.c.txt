func	1:0	97:0	0	static int	matroska_parse_webvtt
params	1:32	0:0	1	
param	1:33	1:63	2	MatroskaDemuxContext *	matroska
param	2:33	2:53	2	MatroskaTrack *	track
param	3:33	3:45	2	AVStream *	st
param	4:33	4:46	2	uint8_t *	data
param	4:48	4:60	2	int	data_len
param	5:33	5:50	2	uint64_t	timecode
param	6:33	6:50	2	uint64_t	duration
param	7:33	7:44	2	int64_t	pos
stmnts	0:0	96:12	1	
decl	9:4	9:17	2	AVPacket	*pkt
decl	10:4	10:39	2	uint8_t	*id
water	10:15	0:0	2	,
decl	10:4	10:39	2	uint8_t	*settings
water	10:26	0:0	2	,
decl	10:4	10:39	2	uint8_t	*text
water	10:33	0:0	2	,
decl	10:4	10:39	2	uint8_t	*buf
decl	11:4	11:38	2	int	id_len
water	11:14	0:0	2	,
decl	11:4	11:38	2	int	settings_len
water	11:28	0:0	2	,
decl	11:4	11:38	2	int	text_len
decl	12:4	12:18	2	uint8_t	*p
water	12:14	0:0	2	,
decl	12:4	12:18	2	uint8_t	*q
decl	13:4	13:11	2	int	err
if	14:4	15:34	2	(data_len <= 0)
cond	14:8	14:20	3	data_len <= 0
water	14:8	0:0	4	data_len
op	14:17	0:0	4	<=
water	14:20	0:0	4	0
stmts	15:8	15:34	3	
return	15:8	15:34	4	AVERROR_INVALIDDATA
water	15:15	0:0	5	AVERROR_INVALIDDATA
water	16:4	0:0	2	p
op	16:6	0:0	2	=
water	16:8	0:0	2	data
water	16:12	0:0	2	;
water	17:4	0:0	2	q
op	17:6	0:0	2	=
water	17:8	0:0	2	data
op	17:13	0:0	2	+
water	17:15	0:0	2	data_len
water	17:23	0:0	2	;
water	18:4	0:0	2	id
op	18:7	0:0	2	=
water	18:9	0:0	2	p
water	18:10	0:0	2	;
water	19:4	0:0	2	id_len
op	19:11	0:0	2	=
op	19:13	0:0	2	-
water	19:14	0:0	2	1
water	19:15	0:0	2	;
while	20:4	28:4	2	(p < q)
cond	20:11	20:15	3	p < q
water	20:11	0:0	4	p
op	20:13	0:0	4	<
water	20:15	0:0	4	q
stmts	20:18	28:4	3	
water	20:18	0:0	4	{
if	21:8	26:8	4	(* p == '\r' || * p == '\n')
cond	21:12	21:32	5	* p == '\r' || * p == '\n'
op	21:12	0:0	6	*
water	21:13	0:0	6	p
op	21:15	0:0	6	==
water	21:18	0:0	6	'\r'
op	21:23	0:0	6	||
op	21:26	0:0	6	*
water	21:27	0:0	6	p
op	21:29	0:0	6	==
water	21:32	0:0	6	'\n'
stmts	21:38	26:8	5	
water	21:38	0:0	6	{
water	22:12	0:0	6	id_len
op	22:19	0:0	6	=
water	22:21	0:0	6	p
op	22:23	0:0	6	-
water	22:25	0:0	6	id
water	22:27	0:0	6	;
if	23:12	24:19	6	(* p == '\r')
cond	23:16	23:22	7	* p == '\r'
op	23:16	0:0	8	*
water	23:17	0:0	8	p
op	23:19	0:0	8	==
water	23:22	0:0	8	'\r'
stmts	24:16	24:19	7	
water	24:16	0:0	8	p
op	24:17	0:0	8	++
water	24:19	0:0	8	;
break	25:12	25:17	6	
water	26:8	0:0	6	}
water	27:8	0:0	4	p
op	27:9	0:0	4	++
water	27:11	0:0	4	;
water	28:4	0:0	4	}
if	29:4	30:34	2	(p >= q || * p != '\n')
cond	29:8	29:24	3	p >= q || * p != '\n'
water	29:8	0:0	4	p
op	29:10	0:0	4	>=
water	29:13	0:0	4	q
op	29:15	0:0	4	||
op	29:18	0:0	4	*
water	29:19	0:0	4	p
op	29:21	0:0	4	!=
water	29:24	0:0	4	'\n'
stmts	30:8	30:34	3	
return	30:8	30:34	4	AVERROR_INVALIDDATA
water	30:15	0:0	5	AVERROR_INVALIDDATA
water	31:4	0:0	2	p
op	31:5	0:0	2	++
water	31:7	0:0	2	;
water	32:4	0:0	2	settings
op	32:13	0:0	2	=
water	32:15	0:0	2	p
water	32:16	0:0	2	;
water	33:4	0:0	2	settings_len
op	33:17	0:0	2	=
op	33:19	0:0	2	-
water	33:20	0:0	2	1
water	33:21	0:0	2	;
while	34:4	42:4	2	(p < q)
cond	34:11	34:15	3	p < q
water	34:11	0:0	4	p
op	34:13	0:0	4	<
water	34:15	0:0	4	q
stmts	34:18	42:4	3	
water	34:18	0:0	4	{
if	35:8	40:8	4	(* p == '\r' || * p == '\n')
cond	35:12	35:32	5	* p == '\r' || * p == '\n'
op	35:12	0:0	6	*
water	35:13	0:0	6	p
op	35:15	0:0	6	==
water	35:18	0:0	6	'\r'
op	35:23	0:0	6	||
op	35:26	0:0	6	*
water	35:27	0:0	6	p
op	35:29	0:0	6	==
water	35:32	0:0	6	'\n'
stmts	35:38	40:8	5	
water	35:38	0:0	6	{
water	36:12	0:0	6	settings_len
op	36:25	0:0	6	=
water	36:27	0:0	6	p
op	36:29	0:0	6	-
water	36:31	0:0	6	settings
water	36:39	0:0	6	;
if	37:12	38:19	6	(* p == '\r')
cond	37:16	37:22	7	* p == '\r'
op	37:16	0:0	8	*
water	37:17	0:0	8	p
op	37:19	0:0	8	==
water	37:22	0:0	8	'\r'
stmts	38:16	38:19	7	
water	38:16	0:0	8	p
op	38:17	0:0	8	++
water	38:19	0:0	8	;
break	39:12	39:17	6	
water	40:8	0:0	6	}
water	41:8	0:0	4	p
op	41:9	0:0	4	++
water	41:11	0:0	4	;
water	42:4	0:0	4	}
if	43:4	44:34	2	(p >= q || * p != '\n')
cond	43:8	43:24	3	p >= q || * p != '\n'
water	43:8	0:0	4	p
op	43:10	0:0	4	>=
water	43:13	0:0	4	q
op	43:15	0:0	4	||
op	43:18	0:0	4	*
water	43:19	0:0	4	p
op	43:21	0:0	4	!=
water	43:24	0:0	4	'\n'
stmts	44:8	44:34	3	
return	44:8	44:34	4	AVERROR_INVALIDDATA
water	44:15	0:0	5	AVERROR_INVALIDDATA
water	45:4	0:0	2	p
op	45:5	0:0	2	++
water	45:7	0:0	2	;
water	46:4	0:0	2	text
op	46:9	0:0	2	=
water	46:11	0:0	2	p
water	46:12	0:0	2	;
water	47:4	0:0	2	text_len
op	47:13	0:0	2	=
water	47:15	0:0	2	q
op	47:17	0:0	2	-
water	47:19	0:0	2	p
water	47:20	0:0	2	;
while	48:4	54:4	2	(text_len > 0)
cond	48:11	48:22	3	text_len > 0
water	48:11	0:0	4	text_len
op	48:20	0:0	4	>
water	48:22	0:0	4	0
stmts	48:25	54:4	3	
water	48:25	0:0	4	{
decl	49:8	49:36	4	const int	len
op	49:22	0:0	4	=
water	49:24	0:0	4	text_len
op	49:33	0:0	4	-
water	49:35	0:0	4	1
decl	50:8	50:32	4	const uint8_t	c
op	50:24	0:0	4	=
water	50:26	0:0	4	p
op	50:27	0:0	4	[
water	50:28	0:0	4	len
op	50:31	0:0	4	]
if	51:8	52:17	4	(c != '\r' && c != '\n')
cond	51:12	51:30	5	c != '\r' && c != '\n'
water	51:12	0:0	6	c
op	51:14	0:0	6	!=
water	51:17	0:0	6	'\r'
op	51:22	0:0	6	&&
water	51:25	0:0	6	c
op	51:27	0:0	6	!=
water	51:30	0:0	6	'\n'
stmts	52:12	52:17	5	
break	52:12	52:17	6	
water	53:8	0:0	4	text_len
op	53:17	0:0	4	=
water	53:19	0:0	4	len
water	53:22	0:0	4	;
water	54:4	0:0	4	}
if	55:4	56:34	2	(text_len <= 0)
cond	55:8	55:20	3	text_len <= 0
water	55:8	0:0	4	text_len
op	55:17	0:0	4	<=
water	55:20	0:0	4	0
stmts	56:8	56:34	3	
return	56:8	56:34	4	AVERROR_INVALIDDATA
water	56:15	0:0	5	AVERROR_INVALIDDATA
water	57:4	0:0	2	pkt
op	57:8	0:0	2	=
call	57:10	57:33	2	av_mallocz
arg	57:21	57:33	3	sizeof(*pkt)
op	57:21	0:0	4	sizeof
water	57:27	0:0	4	(
op	57:28	0:0	4	*
water	57:29	0:0	4	pkt
water	57:32	0:0	4	)
water	57:34	0:0	2	;
if	58:4	59:30	2	(! pkt)
cond	58:8	58:9	3	! pkt
op	58:8	0:0	4	!
water	58:9	0:0	4	pkt
stmts	59:8	59:30	3	
return	59:8	59:30	4	AVERROR(ENOMEM)
call	59:15	59:29	5	AVERROR
arg	59:23	59:29	6	ENOMEM
water	59:23	0:0	7	ENOMEM
water	60:4	0:0	2	err
op	60:8	0:0	2	=
call	60:10	60:37	2	av_new_packet
arg	60:24	60:27	3	pkt
water	60:24	0:0	4	pkt
arg	60:29	60:37	3	text_len
water	60:29	0:0	4	text_len
water	60:38	0:0	2	;
if	61:4	64:4	2	(err < 0)
cond	61:8	61:14	3	err < 0
water	61:8	0:0	4	err
op	61:12	0:0	4	<
water	61:14	0:0	4	0
stmts	61:17	64:4	3	
water	61:17	0:0	4	{
call	62:8	62:19	4	av_free
arg	62:16	62:19	5	pkt
water	62:16	0:0	6	pkt
water	62:20	0:0	4	;
return	63:8	63:27	4	AVERROR(err)
call	63:15	63:26	5	AVERROR
arg	63:23	63:26	6	err
water	63:23	0:0	7	err
water	64:4	0:0	4	}
call	65:4	65:36	2	memcpy
arg	65:11	65:20	3	pkt->data
water	65:11	0:0	4	pkt
op	65:14	0:0	4	->
water	65:16	0:0	4	data
arg	65:22	65:26	3	text
water	65:22	0:0	4	text
arg	65:28	65:36	3	text_len
water	65:28	0:0	4	text_len
water	65:37	0:0	2	;
if	66:4	75:4	2	(id_len > 0)
cond	66:8	66:17	3	id_len > 0
water	66:8	0:0	4	id_len
op	66:15	0:0	4	>
water	66:17	0:0	4	0
stmts	66:20	75:4	3	
water	66:20	0:0	4	{
water	67:8	0:0	4	buf
op	67:12	0:0	4	=
call	67:14	69:44	4	av_packet_new_side_data
arg	67:38	67:41	5	pkt
water	67:38	0:0	6	pkt
arg	68:38	68:67	5	AV_PKT_DATA_WEBVTT_IDENTIFIER
water	68:38	0:0	6	AV_PKT_DATA_WEBVTT_IDENTIFIER
arg	69:38	69:44	5	id_len
water	69:38	0:0	6	id_len
water	69:45	0:0	4	;
if	70:8	73:8	4	(! buf)
cond	70:12	70:13	5	! buf
op	70:12	0:0	6	!
water	70:13	0:0	6	buf
stmts	70:18	73:8	5	
water	70:18	0:0	6	{
call	71:12	71:23	6	av_free
arg	71:20	71:23	7	pkt
water	71:20	0:0	8	pkt
water	71:24	0:0	6	;
return	72:12	72:34	6	AVERROR(ENOMEM)
call	72:19	72:33	7	AVERROR
arg	72:27	72:33	8	ENOMEM
water	72:27	0:0	9	ENOMEM
water	73:8	0:0	6	}
call	74:8	74:30	4	memcpy
arg	74:15	74:18	5	buf
water	74:15	0:0	6	buf
arg	74:20	74:22	5	id
water	74:20	0:0	6	id
arg	74:24	74:30	5	id_len
water	74:24	0:0	6	id_len
water	74:31	0:0	4	;
water	75:4	0:0	4	}
if	76:4	85:4	2	(settings_len > 0)
cond	76:8	76:23	3	settings_len > 0
water	76:8	0:0	4	settings_len
op	76:21	0:0	4	>
water	76:23	0:0	4	0
stmts	76:26	85:4	3	
water	76:26	0:0	4	{
water	77:8	0:0	4	buf
op	77:12	0:0	4	=
call	77:14	79:50	4	av_packet_new_side_data
arg	77:38	77:41	5	pkt
water	77:38	0:0	6	pkt
arg	78:38	78:65	5	AV_PKT_DATA_WEBVTT_SETTINGS
water	78:38	0:0	6	AV_PKT_DATA_WEBVTT_SETTINGS
arg	79:38	79:50	5	settings_len
water	79:38	0:0	6	settings_len
water	79:51	0:0	4	;
if	80:8	83:8	4	(! buf)
cond	80:12	80:13	5	! buf
op	80:12	0:0	6	!
water	80:13	0:0	6	buf
stmts	80:18	83:8	5	
water	80:18	0:0	6	{
call	81:12	81:23	6	av_free
arg	81:20	81:23	7	pkt
water	81:20	0:0	8	pkt
water	81:24	0:0	6	;
return	82:12	82:34	6	AVERROR(ENOMEM)
call	82:19	82:33	7	AVERROR
arg	82:27	82:33	8	ENOMEM
water	82:27	0:0	9	ENOMEM
water	83:8	0:0	6	}
call	84:8	84:42	4	memcpy
arg	84:15	84:18	5	buf
water	84:15	0:0	6	buf
arg	84:20	84:28	5	settings
water	84:20	0:0	6	settings
arg	84:30	84:42	5	settings_len
water	84:30	0:0	6	settings_len
water	84:43	0:0	4	;
water	85:4	0:0	4	}
water	88:4	0:0	2	pkt
op	88:7	0:0	2	->
water	88:9	0:0	2	stream_index
op	88:22	0:0	2	=
water	88:24	0:0	2	st
op	88:26	0:0	2	->
water	88:28	0:0	2	index
water	88:33	0:0	2	;
water	89:4	0:0	2	pkt
op	89:7	0:0	2	->
water	89:9	0:0	2	pts
op	89:13	0:0	2	=
water	89:15	0:0	2	timecode
water	89:23	0:0	2	;
water	92:4	0:0	2	pkt
op	92:7	0:0	2	->
water	92:9	0:0	2	duration
op	92:18	0:0	2	=
water	92:20	0:0	2	duration
water	92:28	0:0	2	;
water	93:4	0:0	2	pkt
op	93:7	0:0	2	->
water	93:9	0:0	2	pos
op	93:13	0:0	2	=
water	93:15	0:0	2	pos
water	93:18	0:0	2	;
call	94:4	94:64	2	dynarray_add
arg	94:17	94:35	3	&matroska->packets
op	94:17	0:0	4	&
water	94:18	0:0	4	matroska
op	94:26	0:0	4	->
water	94:28	0:0	4	packets
arg	94:37	94:59	3	&matroska->num_packets
op	94:37	0:0	4	&
water	94:38	0:0	4	matroska
op	94:46	0:0	4	->
water	94:48	0:0	4	num_packets
arg	94:61	94:64	3	pkt
water	94:61	0:0	4	pkt
water	94:65	0:0	2	;
water	95:4	0:0	2	matroska
op	95:12	0:0	2	->
water	95:14	0:0	2	prev_pkt
op	95:23	0:0	2	=
water	95:25	0:0	2	pkt
water	95:28	0:0	2	;
return	96:4	96:12	2	0
water	96:11	0:0	3	0

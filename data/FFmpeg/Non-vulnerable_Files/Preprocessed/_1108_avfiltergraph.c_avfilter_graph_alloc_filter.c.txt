func	1:0	34:0	0	AVFilterContext *	avfilter_graph_alloc_filter
params	1:44	0:0	1	
param	1:45	1:65	2	AVFilterGraph *	graph
param	2:45	2:67	2	const AVFilter *	filter
param	3:45	3:61	2	const char *	name
stmnts	0:0	33:12	1	
decl	5:4	5:33	2	AVFilterContext	**filters
water	5:29	0:0	2	,
decl	5:4	5:33	2	AVFilterContext	*s
if	6:4	16:4	2	(graph -> thread_type && ! graph -> internal -> thread_execute)
cond	6:8	6:48	3	graph -> thread_type && ! graph -> internal -> thread_execute
water	6:8	0:0	4	graph
op	6:13	0:0	4	->
water	6:15	0:0	4	thread_type
op	6:27	0:0	4	&&
op	6:30	0:0	4	!
water	6:31	0:0	4	graph
op	6:36	0:0	4	->
water	6:38	0:0	4	internal
op	6:46	0:0	4	->
water	6:48	0:0	4	thread_execute
stmts	6:64	16:4	3	
water	6:64	0:0	4	{
if	7:8	9:8	4	(graph -> execute)
cond	7:12	7:19	5	graph -> execute
water	7:12	0:0	6	graph
op	7:17	0:0	6	->
water	7:19	0:0	6	execute
stmts	7:28	9:8	5	
water	7:28	0:0	6	{
water	8:12	0:0	6	graph
op	8:17	0:0	6	->
water	8:19	0:0	6	internal
op	8:27	0:0	6	->
water	8:29	0:0	6	thread_execute
op	8:44	0:0	6	=
water	8:46	0:0	6	graph
op	8:51	0:0	6	->
water	8:53	0:0	6	execute
water	8:60	0:0	6	;
water	9:8	0:0	6	}
else	9:10	15:8	4
stmts	9:15	15:8	5	
water	9:15	0:0	6	{
decl	10:12	10:49	6	int	ret
op	10:20	0:0	6	=
call	10:22	10:48	7	ff_graph_thread_init
arg	10:43	10:48	8	graph
water	10:43	0:0	9	graph
if	11:12	14:12	6	(ret < 0)
cond	11:16	11:22	7	ret < 0
water	11:16	0:0	8	ret
op	11:20	0:0	8	<
water	11:22	0:0	8	0
stmts	11:25	14:12	7	
water	11:25	0:0	8	{
call	12:16	12:77	8	av_log
arg	12:23	12:28	9	graph
water	12:23	0:0	10	graph
arg	12:30	12:42	9	AV_LOG_ERROR
water	12:30	0:0	10	AV_LOG_ERROR
arg	12:44	12:77	9	"Error initializing threading.\n"
water	12:44	0:0	10	"Error initializing threading.\n"
water	12:78	0:0	8	;
return	13:16	13:27	8	NULL
water	13:23	0:0	9	NULL
water	14:12	0:0	8	}
water	15:8	0:0	6	}
water	16:4	0:0	4	}
water	17:4	0:0	2	s
op	17:6	0:0	2	=
call	17:8	17:36	2	ff_filter_alloc
arg	17:24	17:30	3	filter
water	17:24	0:0	4	filter
arg	17:32	17:36	3	name
water	17:32	0:0	4	name
water	17:37	0:0	2	;
if	18:4	19:19	2	(! s)
cond	18:8	18:9	3	! s
op	18:8	0:0	4	!
water	18:9	0:0	4	s
stmts	19:8	19:19	3	
return	19:8	19:19	4	NULL
water	19:15	0:0	5	NULL
water	20:4	0:0	2	filters
op	20:12	0:0	2	=
call	20:14	20:83	2	av_realloc
arg	20:25	20:39	3	graph->filters
water	20:25	0:0	4	graph
op	20:30	0:0	4	->
water	20:32	0:0	4	filters
arg	20:41	20:83	3	sizeof(*filters)*(graph->nb_filters+1)
op	20:41	0:0	4	sizeof
water	20:47	0:0	4	(
op	20:48	0:0	4	*
water	20:49	0:0	4	filters
water	20:56	0:0	4	)
op	20:58	0:0	4	*
water	20:60	0:0	4	(
water	20:61	0:0	4	graph
op	20:66	0:0	4	->
water	20:68	0:0	4	nb_filters
op	20:79	0:0	4	+
water	20:81	0:0	4	1
water	20:82	0:0	4	)
water	20:84	0:0	2	;
if	21:4	24:4	2	(! filters)
cond	21:8	21:9	3	! filters
op	21:8	0:0	4	!
water	21:9	0:0	4	filters
stmts	21:18	24:4	3	
water	21:18	0:0	4	{
call	22:8	22:23	4	avfilter_free
arg	22:22	22:23	5	s
water	22:22	0:0	6	s
water	22:24	0:0	4	;
return	23:8	23:19	4	NULL
water	23:15	0:0	5	NULL
water	24:4	0:0	4	}
water	25:4	0:0	2	graph
op	25:9	0:0	2	->
water	25:11	0:0	2	filters
op	25:19	0:0	2	=
water	25:21	0:0	2	filters
water	25:28	0:0	2	;
water	26:4	0:0	2	graph
op	26:9	0:0	2	->
water	26:11	0:0	2	filters
op	26:18	0:0	2	[
water	26:19	0:0	2	graph
op	26:24	0:0	2	->
water	26:26	0:0	2	nb_filters
op	26:36	0:0	2	++
op	26:38	0:0	2	]
op	26:40	0:0	2	=
water	26:42	0:0	2	s
water	26:43	0:0	2	;
water	28:0	0:0	2	FF_DISABLE_DEPRECATION_WARNINGS
water	29:4	0:0	2	graph
op	29:9	0:0	2	->
water	29:11	0:0	2	filter_count_unused
op	29:31	0:0	2	=
water	29:33	0:0	2	graph
op	29:38	0:0	2	->
water	29:40	0:0	2	nb_filters
water	29:50	0:0	2	;
water	30:0	0:0	2	FF_ENABLE_DEPRECATION_WARNINGS
water	32:4	0:0	2	s
op	32:5	0:0	2	->
water	32:7	0:0	2	graph
op	32:13	0:0	2	=
water	32:15	0:0	2	graph
water	32:20	0:0	2	;
return	33:4	33:12	2	s
water	33:11	0:0	3	s

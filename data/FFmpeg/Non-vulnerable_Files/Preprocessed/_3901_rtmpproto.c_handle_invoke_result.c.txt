func	1:0	63:0	0	static int	handle_invoke_result
params	1:31	0:0	1	
param	1:32	1:45	2	URLContext *	s
param	1:47	1:62	2	RTMPPacket *	pkt
stmnts	0:0	62:14	1	
decl	3:4	3:34	2	RTMPContext	*rt
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:31	2	char	*tracked_method
op	4:25	0:0	2	=
water	4:27	0:0	2	NULL
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
if	6:4	7:18	2	(( ret =find_tracked_method (s ,pkt ,10 ,& tracked_method ) ) < 0)
cond	6:8	6:67	3	( ret =find_tracked_method (s ,pkt ,10 ,& tracked_method ) ) < 0
water	6:8	0:0	4	(
water	6:9	0:0	4	ret
op	6:13	0:0	4	=
call	6:15	6:62	4	find_tracked_method
arg	6:35	6:36	5	s
water	6:35	0:0	6	s
arg	6:38	6:41	5	pkt
water	6:38	0:0	6	pkt
arg	6:43	6:45	5	10
water	6:43	0:0	6	10
arg	6:47	6:62	5	&tracked_method
op	6:47	0:0	6	&
water	6:48	0:0	6	tracked_method
water	6:63	0:0	4	)
op	6:65	0:0	4	<
water	6:67	0:0	4	0
stmts	7:8	7:18	3	
return	7:8	7:18	4	ret
water	7:15	0:0	5	ret
if	8:4	11:4	2	(! tracked_method)
cond	8:8	8:9	3	! tracked_method
op	8:8	0:0	4	!
water	8:9	0:0	4	tracked_method
stmts	8:25	11:4	3	
water	8:25	0:0	4	{
return	10:8	10:18	4	ret
water	10:15	0:0	5	ret
water	11:4	0:0	4	}
if	12:4	35:4	2	(!strcmp (tracked_method ,"connect" ))
cond	12:8	12:41	3	!strcmp (tracked_method ,"connect" )
op	12:8	0:0	4	!
call	12:9	12:41	4	strcmp
arg	12:16	12:30	5	tracked_method
water	12:16	0:0	6	tracked_method
arg	12:32	12:41	5	"connect"
water	12:32	0:0	6	"connect"
stmts	12:44	35:4	3	
water	12:44	0:0	4	{
if	13:8	18:8	4	(! rt -> is_input)
cond	13:12	13:17	5	! rt -> is_input
op	13:12	0:0	6	!
water	13:13	0:0	6	rt
op	13:15	0:0	6	->
water	13:17	0:0	6	is_input
stmts	13:27	18:8	5	
water	13:27	0:0	6	{
if	14:12	15:25	6	(( ret =gen_release_stream (s ,rt ) ) < 0)
cond	14:16	14:52	7	( ret =gen_release_stream (s ,rt ) ) < 0
water	14:16	0:0	8	(
water	14:17	0:0	8	ret
op	14:21	0:0	8	=
call	14:23	14:47	8	gen_release_stream
arg	14:42	14:43	9	s
water	14:42	0:0	10	s
arg	14:45	14:47	9	rt
water	14:45	0:0	10	rt
water	14:48	0:0	8	)
op	14:50	0:0	8	<
water	14:52	0:0	8	0
stmts	15:16	15:25	7	
goto	15:16	15:25	8	fail
water	15:21	0:0	9	fail
if	16:12	17:25	6	(( ret =gen_fcpublish_stream (s ,rt ) ) < 0)
cond	16:16	16:54	7	( ret =gen_fcpublish_stream (s ,rt ) ) < 0
water	16:16	0:0	8	(
water	16:17	0:0	8	ret
op	16:21	0:0	8	=
call	16:23	16:49	8	gen_fcpublish_stream
arg	16:44	16:45	9	s
water	16:44	0:0	10	s
arg	16:47	16:49	9	rt
water	16:47	0:0	10	rt
water	16:50	0:0	8	)
op	16:52	0:0	8	<
water	16:54	0:0	8	0
stmts	17:16	17:25	7	
goto	17:16	17:25	8	fail
water	17:21	0:0	9	fail
water	18:8	0:0	6	}
else	18:10	21:8	4
stmts	18:15	21:8	5	
water	18:15	0:0	6	{
if	19:12	20:25	6	(( ret =gen_server_bw (s ,rt ) ) < 0)
cond	19:16	19:47	7	( ret =gen_server_bw (s ,rt ) ) < 0
water	19:16	0:0	8	(
water	19:17	0:0	8	ret
op	19:21	0:0	8	=
call	19:23	19:42	8	gen_server_bw
arg	19:37	19:38	9	s
water	19:37	0:0	10	s
arg	19:40	19:42	9	rt
water	19:40	0:0	10	rt
water	19:43	0:0	8	)
op	19:45	0:0	8	<
water	19:47	0:0	8	0
stmts	20:16	20:25	7	
goto	20:16	20:25	8	fail
water	20:21	0:0	9	fail
water	21:8	0:0	6	}
if	22:8	23:21	4	(( ret =gen_create_stream (s ,rt ) ) < 0)
cond	22:12	22:47	5	( ret =gen_create_stream (s ,rt ) ) < 0
water	22:12	0:0	6	(
water	22:13	0:0	6	ret
op	22:17	0:0	6	=
call	22:19	22:42	6	gen_create_stream
arg	22:37	22:38	7	s
water	22:37	0:0	8	s
arg	22:40	22:42	7	rt
water	22:40	0:0	8	rt
water	22:43	0:0	6	)
op	22:45	0:0	6	<
water	22:47	0:0	6	0
stmts	23:12	23:21	5	
goto	23:12	23:21	6	fail
water	23:17	0:0	7	fail
if	24:8	34:8	4	(rt -> is_input)
cond	24:12	24:16	5	rt -> is_input
water	24:12	0:0	6	rt
op	24:14	0:0	6	->
water	24:16	0:0	6	is_input
stmts	24:26	34:8	5	
water	24:26	0:0	6	{
if	27:12	30:12	6	(rt -> subscribe)
cond	27:16	27:20	7	rt -> subscribe
water	27:16	0:0	8	rt
op	27:18	0:0	8	->
water	27:20	0:0	8	subscribe
stmts	27:31	30:12	7	
water	27:31	0:0	8	{
if	28:16	29:29	8	(( ret =gen_fcsubscribe_stream (s ,rt ,rt -> subscribe ) ) < 0)
cond	28:20	28:75	9	( ret =gen_fcsubscribe_stream (s ,rt ,rt -> subscribe ) ) < 0
water	28:20	0:0	10	(
water	28:21	0:0	10	ret
op	28:25	0:0	10	=
call	28:27	28:70	10	gen_fcsubscribe_stream
arg	28:50	28:51	11	s
water	28:50	0:0	12	s
arg	28:53	28:55	11	rt
water	28:53	0:0	12	rt
arg	28:57	28:70	11	rt->subscribe
water	28:57	0:0	12	rt
op	28:59	0:0	12	->
water	28:61	0:0	12	subscribe
water	28:71	0:0	10	)
op	28:73	0:0	10	<
water	28:75	0:0	10	0
stmts	29:20	29:29	9	
goto	29:20	29:29	10	fail
water	29:25	0:0	11	fail
water	30:12	0:0	8	}
else	30:14	33:12	6
stmts	30:19	33:12	7	
if	30:19	33:12	8	(rt -> live == - 1)
cond	30:23	30:36	9	rt -> live == - 1
water	30:23	0:0	10	rt
op	30:25	0:0	10	->
water	30:27	0:0	10	live
op	30:32	0:0	10	==
op	30:35	0:0	10	-
water	30:36	0:0	10	1
stmts	30:39	33:12	9	
water	30:39	0:0	10	{
if	31:16	32:29	10	(( ret =gen_fcsubscribe_stream (s ,rt ,rt -> playpath ) ) < 0)
cond	31:20	31:74	11	( ret =gen_fcsubscribe_stream (s ,rt ,rt -> playpath ) ) < 0
water	31:20	0:0	12	(
water	31:21	0:0	12	ret
op	31:25	0:0	12	=
call	31:27	31:69	12	gen_fcsubscribe_stream
arg	31:50	31:51	13	s
water	31:50	0:0	14	s
arg	31:53	31:55	13	rt
water	31:53	0:0	14	rt
arg	31:57	31:69	13	rt->playpath
water	31:57	0:0	14	rt
op	31:59	0:0	14	->
water	31:61	0:0	14	playpath
water	31:70	0:0	12	)
op	31:72	0:0	12	<
water	31:74	0:0	12	0
stmts	32:20	32:29	11	
goto	32:20	32:29	12	fail
water	32:25	0:0	13	fail
water	33:12	0:0	10	}
water	34:8	0:0	6	}
water	35:4	0:0	4	}
else	35:6	55:4	2
stmts	35:11	55:4	3	
if	35:11	55:4	4	(!strcmp (tracked_method ,"createStream" ))
cond	35:15	35:53	5	!strcmp (tracked_method ,"createStream" )
op	35:15	0:0	6	!
call	35:16	35:53	6	strcmp
arg	35:23	35:37	7	tracked_method
water	35:23	0:0	8	tracked_method
arg	35:39	35:53	7	"createStream"
water	35:39	0:0	8	"createStream"
stmts	35:56	55:4	5	
water	35:56	0:0	6	{
decl	36:8	36:24	6	double	stream_id
if	37:8	39:8	6	(read_number_result (pkt ,& stream_id ))
cond	37:12	37:46	7	read_number_result (pkt ,& stream_id )
call	37:12	37:46	8	read_number_result
arg	37:31	37:34	9	pkt
water	37:31	0:0	10	pkt
arg	37:36	37:46	9	&stream_id
op	37:36	0:0	10	&
water	37:37	0:0	10	stream_id
stmts	37:49	39:8	7	
water	37:49	0:0	8	{
call	38:12	38:71	8	av_log
arg	38:19	38:20	9	s
water	38:19	0:0	10	s
arg	38:22	38:36	9	AV_LOG_WARNING
water	38:22	0:0	10	AV_LOG_WARNING
arg	38:38	38:71	9	"Unexpected reply on connect()\n"
water	38:38	0:0	10	"Unexpected reply on connect()\n"
water	38:72	0:0	8	;
water	39:8	0:0	8	}
else	39:10	41:8	6
stmts	39:15	41:8	7	
water	39:15	0:0	8	{
water	40:12	0:0	8	rt
op	40:14	0:0	8	->
water	40:16	0:0	8	stream_id
op	40:26	0:0	8	=
water	40:28	0:0	8	stream_id
water	40:37	0:0	8	;
water	41:8	0:0	8	}
if	42:8	45:8	6	(! rt -> is_input)
cond	42:12	42:17	7	! rt -> is_input
op	42:12	0:0	8	!
water	42:13	0:0	8	rt
op	42:15	0:0	8	->
water	42:17	0:0	8	is_input
stmts	42:27	45:8	7	
water	42:27	0:0	8	{
if	43:12	44:25	8	(( ret =gen_publish (s ,rt ) ) < 0)
cond	43:16	43:45	9	( ret =gen_publish (s ,rt ) ) < 0
water	43:16	0:0	10	(
water	43:17	0:0	10	ret
op	43:21	0:0	10	=
call	43:23	43:40	10	gen_publish
arg	43:35	43:36	11	s
water	43:35	0:0	12	s
arg	43:38	43:40	11	rt
water	43:38	0:0	12	rt
water	43:41	0:0	10	)
op	43:43	0:0	10	<
water	43:45	0:0	10	0
stmts	44:16	44:25	9	
goto	44:16	44:25	10	fail
water	44:21	0:0	11	fail
water	45:8	0:0	8	}
else	45:10	54:8	6
stmts	45:15	54:8	7	
water	45:15	0:0	8	{
if	46:12	49:12	8	(rt -> live != - 1)
cond	46:16	46:29	9	rt -> live != - 1
water	46:16	0:0	10	rt
op	46:18	0:0	10	->
water	46:20	0:0	10	live
op	46:25	0:0	10	!=
op	46:28	0:0	10	-
water	46:29	0:0	10	1
stmts	46:32	49:12	9	
water	46:32	0:0	10	{
if	47:16	48:29	10	(( ret =gen_get_stream_length (s ,rt ) ) < 0)
cond	47:20	47:59	11	( ret =gen_get_stream_length (s ,rt ) ) < 0
water	47:20	0:0	12	(
water	47:21	0:0	12	ret
op	47:25	0:0	12	=
call	47:27	47:54	12	gen_get_stream_length
arg	47:49	47:50	13	s
water	47:49	0:0	14	s
arg	47:52	47:54	13	rt
water	47:52	0:0	14	rt
water	47:55	0:0	12	)
op	47:57	0:0	12	<
water	47:59	0:0	12	0
stmts	48:20	48:29	11	
goto	48:20	48:29	12	fail
water	48:25	0:0	13	fail
water	49:12	0:0	10	}
if	50:12	51:25	8	(( ret =gen_play (s ,rt ) ) < 0)
cond	50:16	50:42	9	( ret =gen_play (s ,rt ) ) < 0
water	50:16	0:0	10	(
water	50:17	0:0	10	ret
op	50:21	0:0	10	=
call	50:23	50:37	10	gen_play
arg	50:32	50:33	11	s
water	50:32	0:0	12	s
arg	50:35	50:37	11	rt
water	50:35	0:0	12	rt
water	50:38	0:0	10	)
op	50:40	0:0	10	<
water	50:42	0:0	10	0
stmts	51:16	51:25	9	
goto	51:16	51:25	10	fail
water	51:21	0:0	11	fail
if	52:12	53:25	8	(( ret =gen_buffer_time (s ,rt ) ) < 0)
cond	52:16	52:49	9	( ret =gen_buffer_time (s ,rt ) ) < 0
water	52:16	0:0	10	(
water	52:17	0:0	10	ret
op	52:21	0:0	10	=
call	52:23	52:44	10	gen_buffer_time
arg	52:39	52:40	11	s
water	52:39	0:0	12	s
arg	52:42	52:44	11	rt
water	52:42	0:0	12	rt
water	52:45	0:0	10	)
op	52:47	0:0	10	<
water	52:49	0:0	10	0
stmts	53:16	53:25	9	
goto	53:16	53:25	10	fail
water	53:21	0:0	11	fail
water	54:8	0:0	8	}
water	55:4	0:0	6	}
else	55:6	59:4	2
stmts	55:11	59:4	3	
if	55:11	59:4	4	(!strcmp (tracked_method ,"getStreamLength" ))
cond	55:15	55:56	5	!strcmp (tracked_method ,"getStreamLength" )
op	55:15	0:0	6	!
call	55:16	55:56	6	strcmp
arg	55:23	55:37	7	tracked_method
water	55:23	0:0	8	tracked_method
arg	55:39	55:56	7	"getStreamLength"
water	55:39	0:0	8	"getStreamLength"
stmts	55:59	59:4	5	
water	55:59	0:0	6	{
if	56:8	58:8	6	(read_number_result (pkt ,& rt -> duration ))
cond	56:12	56:49	7	read_number_result (pkt ,& rt -> duration )
call	56:12	56:49	8	read_number_result
arg	56:31	56:34	9	pkt
water	56:31	0:0	10	pkt
arg	56:36	56:49	9	&rt->duration
op	56:36	0:0	10	&
water	56:37	0:0	10	rt
op	56:39	0:0	10	->
water	56:41	0:0	10	duration
stmts	56:52	58:8	7	
water	56:52	0:0	8	{
call	57:12	57:79	8	av_log
arg	57:19	57:20	9	s
water	57:19	0:0	10	s
arg	57:22	57:36	9	AV_LOG_WARNING
water	57:22	0:0	10	AV_LOG_WARNING
arg	57:38	57:79	9	"Unexpected reply on getStreamLength()\n"
water	57:38	0:0	10	"Unexpected reply on getStreamLength()\n"
water	57:80	0:0	8	;
water	58:8	0:0	8	}
water	59:4	0:0	6	}
label	60:0	60:4	2	fail :
call	61:4	61:26	2	av_free
arg	61:12	61:26	3	tracked_method
water	61:12	0:0	4	tracked_method
water	61:27	0:0	2	;
return	62:4	62:14	2	ret
water	62:11	0:0	3	ret

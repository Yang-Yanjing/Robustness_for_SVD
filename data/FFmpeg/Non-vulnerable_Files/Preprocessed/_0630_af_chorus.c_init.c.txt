func	1:15	38:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	37:12	1	
decl	3:4	3:32	2	ChorusContext	*s
op	3:21	0:0	2	=
water	3:23	0:0	2	ctx
op	3:26	0:0	2	->
water	3:28	0:0	2	priv
decl	4:4	4:50	2	int	nb_delays
water	4:17	0:0	2	,
decl	4:4	4:50	2	int	nb_decays
water	4:28	0:0	2	,
decl	4:4	4:50	2	int	nb_speeds
water	4:39	0:0	2	,
decl	4:4	4:50	2	int	nb_depths
if	5:4	8:4	2	(! s -> delays_str || ! s -> decays_str || ! s -> speeds_str || ! s -> depths_str)
cond	5:8	5:66	3	! s -> delays_str || ! s -> decays_str || ! s -> speeds_str || ! s -> depths_str
op	5:8	0:0	4	!
water	5:9	0:0	4	s
op	5:10	0:0	4	->
water	5:12	0:0	4	delays_str
op	5:23	0:0	4	||
op	5:26	0:0	4	!
water	5:27	0:0	4	s
op	5:28	0:0	4	->
water	5:30	0:0	4	decays_str
op	5:41	0:0	4	||
op	5:44	0:0	4	!
water	5:45	0:0	4	s
op	5:46	0:0	4	->
water	5:48	0:0	4	speeds_str
op	5:59	0:0	4	||
op	5:62	0:0	4	!
water	5:63	0:0	4	s
op	5:64	0:0	4	->
water	5:66	0:0	4	depths_str
stmts	5:78	8:4	3	
water	5:78	0:0	4	{
call	6:8	6:89	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	6:34	6:89	5	"Both delays & decays & speeds & depths must be set.\n"
water	6:34	0:0	6	"Both delays & decays & speeds & depths must be set.\n"
water	6:90	0:0	4	;
return	7:8	7:30	4	AVERROR(EINVAL)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	EINVAL
water	7:23	0:0	7	EINVAL
water	8:4	0:0	4	}
call	9:4	9:41	2	count_items
arg	9:16	9:29	3	s->delays_str
water	9:16	0:0	4	s
op	9:17	0:0	4	->
water	9:19	0:0	4	delays_str
arg	9:31	9:41	3	&nb_delays
op	9:31	0:0	4	&
water	9:32	0:0	4	nb_delays
water	9:42	0:0	2	;
call	10:4	10:41	2	count_items
arg	10:16	10:29	3	s->decays_str
water	10:16	0:0	4	s
op	10:17	0:0	4	->
water	10:19	0:0	4	decays_str
arg	10:31	10:41	3	&nb_decays
op	10:31	0:0	4	&
water	10:32	0:0	4	nb_decays
water	10:42	0:0	2	;
call	11:4	11:41	2	count_items
arg	11:16	11:29	3	s->speeds_str
water	11:16	0:0	4	s
op	11:17	0:0	4	->
water	11:19	0:0	4	speeds_str
arg	11:31	11:41	3	&nb_speeds
op	11:31	0:0	4	&
water	11:32	0:0	4	nb_speeds
water	11:42	0:0	2	;
call	12:4	12:41	2	count_items
arg	12:16	12:29	3	s->depths_str
water	12:16	0:0	4	s
op	12:17	0:0	4	->
water	12:19	0:0	4	depths_str
arg	12:31	12:41	3	&nb_depths
op	12:31	0:0	4	&
water	12:32	0:0	4	nb_depths
water	12:42	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	delays
op	13:14	0:0	2	=
call	13:16	13:69	2	av_realloc_f
arg	13:29	13:38	3	s->delays
water	13:29	0:0	4	s
op	13:30	0:0	4	->
water	13:32	0:0	4	delays
arg	13:40	13:49	3	nb_delays
water	13:40	0:0	4	nb_delays
arg	13:51	13:69	3	sizeof(*s->delays)
op	13:51	0:0	4	sizeof
water	13:57	0:0	4	(
op	13:58	0:0	4	*
water	13:59	0:0	4	s
op	13:60	0:0	4	->
water	13:62	0:0	4	delays
water	13:68	0:0	4	)
water	13:70	0:0	2	;
water	14:4	0:0	2	s
op	14:5	0:0	2	->
water	14:7	0:0	2	decays
op	14:14	0:0	2	=
call	14:16	14:69	2	av_realloc_f
arg	14:29	14:38	3	s->decays
water	14:29	0:0	4	s
op	14:30	0:0	4	->
water	14:32	0:0	4	decays
arg	14:40	14:49	3	nb_decays
water	14:40	0:0	4	nb_decays
arg	14:51	14:69	3	sizeof(*s->decays)
op	14:51	0:0	4	sizeof
water	14:57	0:0	4	(
op	14:58	0:0	4	*
water	14:59	0:0	4	s
op	14:60	0:0	4	->
water	14:62	0:0	4	decays
water	14:68	0:0	4	)
water	14:70	0:0	2	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	speeds
op	15:14	0:0	2	=
call	15:16	15:69	2	av_realloc_f
arg	15:29	15:38	3	s->speeds
water	15:29	0:0	4	s
op	15:30	0:0	4	->
water	15:32	0:0	4	speeds
arg	15:40	15:49	3	nb_speeds
water	15:40	0:0	4	nb_speeds
arg	15:51	15:69	3	sizeof(*s->speeds)
op	15:51	0:0	4	sizeof
water	15:57	0:0	4	(
op	15:58	0:0	4	*
water	15:59	0:0	4	s
op	15:60	0:0	4	->
water	15:62	0:0	4	speeds
water	15:68	0:0	4	)
water	15:70	0:0	2	;
water	16:4	0:0	2	s
op	16:5	0:0	2	->
water	16:7	0:0	2	depths
op	16:14	0:0	2	=
call	16:16	16:69	2	av_realloc_f
arg	16:29	16:38	3	s->depths
water	16:29	0:0	4	s
op	16:30	0:0	4	->
water	16:32	0:0	4	depths
arg	16:40	16:49	3	nb_depths
water	16:40	0:0	4	nb_depths
arg	16:51	16:69	3	sizeof(*s->depths)
op	16:51	0:0	4	sizeof
water	16:57	0:0	4	(
op	16:58	0:0	4	*
water	16:59	0:0	4	s
op	16:60	0:0	4	->
water	16:62	0:0	4	depths
water	16:68	0:0	4	)
water	16:70	0:0	2	;
if	17:4	18:30	2	(! s -> delays || ! s -> decays || ! s -> speeds || ! s -> depths)
cond	17:8	17:54	3	! s -> delays || ! s -> decays || ! s -> speeds || ! s -> depths
op	17:8	0:0	4	!
water	17:9	0:0	4	s
op	17:10	0:0	4	->
water	17:12	0:0	4	delays
op	17:19	0:0	4	||
op	17:22	0:0	4	!
water	17:23	0:0	4	s
op	17:24	0:0	4	->
water	17:26	0:0	4	decays
op	17:33	0:0	4	||
op	17:36	0:0	4	!
water	17:37	0:0	4	s
op	17:38	0:0	4	->
water	17:40	0:0	4	speeds
op	17:47	0:0	4	||
op	17:50	0:0	4	!
water	17:51	0:0	4	s
op	17:52	0:0	4	->
water	17:54	0:0	4	depths
stmts	18:8	18:30	3	
return	18:8	18:30	4	AVERROR(ENOMEM)
call	18:15	18:29	5	AVERROR
arg	18:23	18:29	6	ENOMEM
water	18:23	0:0	7	ENOMEM
call	19:4	19:51	2	fill_items
arg	19:15	19:28	3	s->delays_str
water	19:15	0:0	4	s
op	19:16	0:0	4	->
water	19:18	0:0	4	delays_str
arg	19:30	19:40	3	&nb_delays
op	19:30	0:0	4	&
water	19:31	0:0	4	nb_delays
arg	19:42	19:51	3	s->delays
water	19:42	0:0	4	s
op	19:43	0:0	4	->
water	19:45	0:0	4	delays
water	19:52	0:0	2	;
call	20:4	20:51	2	fill_items
arg	20:15	20:28	3	s->decays_str
water	20:15	0:0	4	s
op	20:16	0:0	4	->
water	20:18	0:0	4	decays_str
arg	20:30	20:40	3	&nb_decays
op	20:30	0:0	4	&
water	20:31	0:0	4	nb_decays
arg	20:42	20:51	3	s->decays
water	20:42	0:0	4	s
op	20:43	0:0	4	->
water	20:45	0:0	4	decays
water	20:52	0:0	2	;
call	21:4	21:51	2	fill_items
arg	21:15	21:28	3	s->speeds_str
water	21:15	0:0	4	s
op	21:16	0:0	4	->
water	21:18	0:0	4	speeds_str
arg	21:30	21:40	3	&nb_speeds
op	21:30	0:0	4	&
water	21:31	0:0	4	nb_speeds
arg	21:42	21:51	3	s->speeds
water	21:42	0:0	4	s
op	21:43	0:0	4	->
water	21:45	0:0	4	speeds
water	21:52	0:0	2	;
call	22:4	22:51	2	fill_items
arg	22:15	22:28	3	s->depths_str
water	22:15	0:0	4	s
op	22:16	0:0	4	->
water	22:18	0:0	4	depths_str
arg	22:30	22:40	3	&nb_depths
op	22:30	0:0	4	&
water	22:31	0:0	4	nb_depths
arg	22:42	22:51	3	s->depths
water	22:42	0:0	4	s
op	22:43	0:0	4	->
water	22:45	0:0	4	depths
water	22:52	0:0	2	;
if	23:4	26:4	2	(nb_delays != nb_decays && nb_delays != nb_speeds && nb_delays != nb_depths)
cond	23:8	23:73	3	nb_delays != nb_decays && nb_delays != nb_speeds && nb_delays != nb_depths
water	23:8	0:0	4	nb_delays
op	23:18	0:0	4	!=
water	23:21	0:0	4	nb_decays
op	23:31	0:0	4	&&
water	23:34	0:0	4	nb_delays
op	23:44	0:0	4	!=
water	23:47	0:0	4	nb_speeds
op	23:57	0:0	4	&&
water	23:60	0:0	4	nb_delays
op	23:70	0:0	4	!=
water	23:73	0:0	4	nb_depths
stmts	23:84	26:4	3	
water	23:84	0:0	4	{
call	24:8	24:101	4	av_log
arg	24:15	24:18	5	ctx
water	24:15	0:0	6	ctx
arg	24:20	24:32	5	AV_LOG_ERROR
water	24:20	0:0	6	AV_LOG_ERROR
arg	24:34	24:101	5	"Number of delays & decays & speeds & depths given must be same.\n"
water	24:34	0:0	6	"Number of delays & decays & speeds & depths given must be same.\n"
water	24:102	0:0	4	;
return	25:8	25:30	4	AVERROR(EINVAL)
call	25:15	25:29	5	AVERROR
arg	25:23	25:29	6	EINVAL
water	25:23	0:0	7	EINVAL
water	26:4	0:0	4	}
water	27:4	0:0	2	s
op	27:5	0:0	2	->
water	27:7	0:0	2	num_chorus
op	27:18	0:0	2	=
water	27:20	0:0	2	nb_delays
water	27:29	0:0	2	;
if	28:4	31:4	2	(s -> num_chorus < 1)
cond	28:8	28:24	3	s -> num_chorus < 1
water	28:8	0:0	4	s
op	28:9	0:0	4	->
water	28:11	0:0	4	num_chorus
op	28:22	0:0	4	<
water	28:24	0:0	4	1
stmts	28:27	31:4	3	
water	28:27	0:0	4	{
call	29:8	29:93	4	av_log
arg	29:15	29:18	5	ctx
water	29:15	0:0	6	ctx
arg	29:20	29:32	5	AV_LOG_ERROR
water	29:20	0:0	6	AV_LOG_ERROR
arg	29:34	29:93	5	"At least one delay & decay & speed & depth must be set.\n"
water	29:34	0:0	6	"At least one delay & decay & speed & depth must be set.\n"
water	29:94	0:0	4	;
return	30:8	30:30	4	AVERROR(EINVAL)
call	30:15	30:29	5	AVERROR
arg	30:23	30:29	6	EINVAL
water	30:23	0:0	7	EINVAL
water	31:4	0:0	4	}
water	32:4	0:0	2	s
op	32:5	0:0	2	->
water	32:7	0:0	2	length
op	32:14	0:0	2	=
call	32:16	32:59	2	av_calloc
arg	32:26	32:39	3	s->num_chorus
water	32:26	0:0	4	s
op	32:27	0:0	4	->
water	32:29	0:0	4	num_chorus
arg	32:41	32:59	3	sizeof(*s->length)
op	32:41	0:0	4	sizeof
water	32:47	0:0	4	(
op	32:48	0:0	4	*
water	32:49	0:0	4	s
op	32:50	0:0	4	->
water	32:52	0:0	4	length
water	32:58	0:0	4	)
water	32:60	0:0	2	;
water	33:4	0:0	2	s
op	33:5	0:0	2	->
water	33:7	0:0	2	lookup_table
op	33:20	0:0	2	=
call	33:22	33:71	2	av_calloc
arg	33:32	33:45	3	s->num_chorus
water	33:32	0:0	4	s
op	33:33	0:0	4	->
water	33:35	0:0	4	num_chorus
arg	33:47	33:71	3	sizeof(*s->lookup_table)
op	33:47	0:0	4	sizeof
water	33:53	0:0	4	(
op	33:54	0:0	4	*
water	33:55	0:0	4	s
op	33:56	0:0	4	->
water	33:58	0:0	4	lookup_table
water	33:70	0:0	4	)
water	33:72	0:0	2	;
if	34:4	35:30	2	(! s -> length || ! s -> lookup_table)
cond	34:8	34:26	3	! s -> length || ! s -> lookup_table
op	34:8	0:0	4	!
water	34:9	0:0	4	s
op	34:10	0:0	4	->
water	34:12	0:0	4	length
op	34:19	0:0	4	||
op	34:22	0:0	4	!
water	34:23	0:0	4	s
op	34:24	0:0	4	->
water	34:26	0:0	4	lookup_table
stmts	35:8	35:30	3	
return	35:8	35:30	4	AVERROR(ENOMEM)
call	35:15	35:29	5	AVERROR
arg	35:23	35:29	6	ENOMEM
water	35:23	0:0	7	ENOMEM
water	36:4	0:0	2	s
op	36:5	0:0	2	->
water	36:7	0:0	2	next_pts
op	36:16	0:0	2	=
water	36:18	0:0	2	AV_NOPTS_VALUE
water	36:32	0:0	2	;
return	37:4	37:12	2	0
water	37:11	0:0	3	0

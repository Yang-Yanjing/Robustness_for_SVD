func	1:0	138:0	0	static void	vectorscope
params	1:23	0:0	1	
param	1:24	1:45	2	VectorscopeContext *	s
param	1:47	1:58	2	AVFrame *	in
param	1:60	1:72	2	AVFrame *	out
param	1:74	1:80	2	int	pd
stmnts	3:4	137:4	1	
water	3:4	0:0	2	const
water	3:10	0:0	2	uint8_t
op	3:18	0:0	2	*
water	3:20	0:0	2	const
op	3:26	0:0	2	*
water	3:27	0:0	2	src
op	3:31	0:0	2	=
water	3:33	0:0	2	(
water	3:34	0:0	2	const
water	3:40	0:0	2	uint8_t
op	3:48	0:0	2	*
water	3:50	0:0	2	const
op	3:56	0:0	2	*
water	3:57	0:0	2	)
water	3:58	0:0	2	in
op	3:60	0:0	2	->
water	3:62	0:0	2	data
water	3:66	0:0	2	;
decl	4:4	4:45	2	const int	slinesizex
op	4:25	0:0	2	=
water	4:27	0:0	2	in
op	4:29	0:0	2	->
water	4:31	0:0	2	linesize
op	4:39	0:0	2	[
water	4:40	0:0	2	s
op	4:41	0:0	2	->
water	4:43	0:0	2	x
op	4:44	0:0	2	]
decl	5:4	5:45	2	const int	slinesizey
op	5:25	0:0	2	=
water	5:27	0:0	2	in
op	5:29	0:0	2	->
water	5:31	0:0	2	linesize
op	5:39	0:0	2	[
water	5:40	0:0	2	s
op	5:41	0:0	2	->
water	5:43	0:0	2	y
op	5:44	0:0	2	]
decl	6:4	6:43	2	const int	slinesized
op	6:25	0:0	2	=
water	6:27	0:0	2	in
op	6:29	0:0	2	->
water	6:31	0:0	2	linesize
op	6:39	0:0	2	[
water	6:40	0:0	2	pd
op	6:42	0:0	2	]
decl	7:4	7:42	2	const int	dlinesize
op	7:24	0:0	2	=
water	7:26	0:0	2	out
op	7:29	0:0	2	->
water	7:31	0:0	2	linesize
op	7:39	0:0	2	[
water	7:40	0:0	2	0
op	7:41	0:0	2	]
decl	8:4	8:38	2	const int	intensity
op	8:24	0:0	2	=
water	8:26	0:0	2	s
op	8:27	0:0	2	->
water	8:29	0:0	2	intensity
decl	9:4	9:34	2	const int	px
op	9:17	0:0	2	=
water	9:19	0:0	2	s
op	9:20	0:0	2	->
water	9:22	0:0	2	x
water	9:23	0:0	2	,
decl	9:4	9:34	2	const int	py
op	9:28	0:0	2	=
water	9:30	0:0	2	s
op	9:31	0:0	2	->
water	9:33	0:0	2	y
decl	10:4	10:36	2	const int	h
op	10:16	0:0	2	=
water	10:18	0:0	2	s
op	10:19	0:0	2	->
water	10:21	0:0	2	planeheight
op	10:32	0:0	2	[
water	10:33	0:0	2	py
op	10:35	0:0	2	]
decl	11:4	11:35	2	const int	w
op	11:16	0:0	2	=
water	11:18	0:0	2	s
op	11:19	0:0	2	->
water	11:21	0:0	2	planewidth
op	11:31	0:0	2	[
water	11:32	0:0	2	px
op	11:34	0:0	2	]
decl	12:4	12:32	2	const uint8_t	*spx
op	12:23	0:0	2	=
water	12:25	0:0	2	src
op	12:28	0:0	2	[
water	12:29	0:0	2	px
op	12:31	0:0	2	]
decl	13:4	13:32	2	const uint8_t	*spy
op	13:23	0:0	2	=
water	13:25	0:0	2	src
op	13:28	0:0	2	[
water	13:29	0:0	2	py
op	13:31	0:0	2	]
decl	14:4	14:32	2	const uint8_t	*spd
op	14:23	0:0	2	=
water	14:25	0:0	2	src
op	14:28	0:0	2	[
water	14:29	0:0	2	pd
op	14:31	0:0	2	]
decl	15:4	15:28	2	const int	hsub
op	15:19	0:0	2	=
water	15:21	0:0	2	s
op	15:22	0:0	2	->
water	15:24	0:0	2	hsub
decl	16:4	16:28	2	const int	vsub
op	16:19	0:0	2	=
water	16:21	0:0	2	s
op	16:22	0:0	2	->
water	16:24	0:0	2	vsub
decl	17:4	17:29	2	uint8_t	**dst
op	17:18	0:0	2	=
water	17:20	0:0	2	out
op	17:23	0:0	2	->
water	17:25	0:0	2	data
decl	18:4	18:26	2	uint8_t	*dpx
op	18:17	0:0	2	=
water	18:19	0:0	2	dst
op	18:22	0:0	2	[
water	18:23	0:0	2	px
op	18:25	0:0	2	]
decl	19:4	19:26	2	uint8_t	*dpy
op	19:17	0:0	2	=
water	19:19	0:0	2	dst
op	19:22	0:0	2	[
water	19:23	0:0	2	py
op	19:25	0:0	2	]
decl	20:4	20:26	2	uint8_t	*dpd
op	20:17	0:0	2	=
water	20:19	0:0	2	dst
op	20:22	0:0	2	[
water	20:23	0:0	2	pd
op	20:25	0:0	2	]
decl	21:4	21:12	2	int	i
water	21:9	0:0	2	,
decl	21:4	21:12	2	int	j
switch	22:4	125:4	2	(s -> mode)
cond	22:12	22:15	3	s -> mode
water	22:12	0:0	4	s
op	22:13	0:0	4	->
water	22:15	0:0	4	mode
stmts	22:21	125:4	3	
water	22:21	0:0	4	{
label	23:4	23:14	4	case COLOR :
label	24:4	24:13	4	case GRAY :
if	25:8	38:8	4	(s -> is_yuv)
cond	25:12	25:15	5	s -> is_yuv
water	25:12	0:0	6	s
op	25:13	0:0	6	->
water	25:15	0:0	6	is_yuv
stmts	25:23	38:8	5	
water	25:23	0:0	6	{
for	26:12	37:12	6	(i = 0 ;i < h;i ++)
forinit	26:17	26:22	7	i = 0 ;
water	26:17	0:0	8	i
op	26:19	0:0	8	=
water	26:21	0:0	8	0
water	26:22	0:0	8	;
cond	26:24	26:28	7	i < h
water	26:24	0:0	8	i
op	26:26	0:0	8	<
water	26:28	0:0	8	h
forexpr	26:31	26:32	7	i ++
water	26:31	0:0	8	i
op	26:32	0:0	8	++
stmts	26:36	37:12	7	
water	26:36	0:0	8	{
decl	27:16	27:46	8	const int	iwx
op	27:30	0:0	8	=
water	27:32	0:0	8	i
op	27:34	0:0	8	*
water	27:36	0:0	8	slinesizex
decl	28:16	28:46	8	const int	iwy
op	28:30	0:0	8	=
water	28:32	0:0	8	i
op	28:34	0:0	8	*
water	28:36	0:0	8	slinesizey
for	29:16	36:16	8	(j = 0 ;j < w;j ++)
forinit	29:21	29:26	9	j = 0 ;
water	29:21	0:0	10	j
op	29:23	0:0	10	=
water	29:25	0:0	10	0
water	29:26	0:0	10	;
cond	29:28	29:32	9	j < w
water	29:28	0:0	10	j
op	29:30	0:0	10	<
water	29:32	0:0	10	w
forexpr	29:35	29:36	9	j ++
water	29:35	0:0	10	j
op	29:36	0:0	10	++
stmts	29:40	36:16	9	
water	29:40	0:0	10	{
decl	30:20	30:46	10	const int	x
op	30:32	0:0	10	=
water	30:34	0:0	10	spx
op	30:37	0:0	10	[
water	30:38	0:0	10	iwx
op	30:42	0:0	10	+
water	30:44	0:0	10	j
op	30:45	0:0	10	]
decl	31:20	31:46	10	const int	y
op	31:32	0:0	10	=
water	31:34	0:0	10	spy
op	31:37	0:0	10	[
water	31:38	0:0	10	iwy
op	31:42	0:0	10	+
water	31:44	0:0	10	j
op	31:45	0:0	10	]
decl	32:20	32:53	10	const int	pos
op	32:34	0:0	10	=
water	32:36	0:0	10	y
op	32:38	0:0	10	*
water	32:40	0:0	10	dlinesize
op	32:50	0:0	10	+
water	32:52	0:0	10	x
water	33:20	0:0	10	dpd
op	33:23	0:0	10	[
water	33:24	0:0	10	pos
op	33:27	0:0	10	]
op	33:29	0:0	10	=
call	33:31	33:62	10	FFMIN
arg	33:37	33:57	11	dpd[pos]+intensity
water	33:37	0:0	12	dpd
op	33:40	0:0	12	[
water	33:41	0:0	12	pos
op	33:44	0:0	12	]
op	33:46	0:0	12	+
water	33:48	0:0	12	intensity
arg	33:59	33:62	11	255
water	33:59	0:0	12	255
water	33:63	0:0	10	;
if	34:20	35:41	10	(dst [ 3 ])
cond	34:24	34:29	11	dst [ 3 ]
water	34:24	0:0	12	dst
op	34:27	0:0	12	[
water	34:28	0:0	12	3
op	34:29	0:0	12	]
stmts	35:24	35:41	11	
water	35:24	0:0	12	dst
op	35:27	0:0	12	[
water	35:28	0:0	12	3
op	35:29	0:0	12	]
op	35:30	0:0	12	[
water	35:31	0:0	12	pos
op	35:34	0:0	12	]
op	35:36	0:0	12	=
water	35:38	0:0	12	255
water	35:41	0:0	12	;
water	36:16	0:0	10	}
water	37:12	0:0	8	}
water	38:8	0:0	6	}
else	38:10	53:8	4
stmts	38:15	53:8	5	
water	38:15	0:0	6	{
for	39:12	52:12	6	(i = 0 ;i < h;i ++)
forinit	39:17	39:22	7	i = 0 ;
water	39:17	0:0	8	i
op	39:19	0:0	8	=
water	39:21	0:0	8	0
water	39:22	0:0	8	;
cond	39:24	39:28	7	i < h
water	39:24	0:0	8	i
op	39:26	0:0	8	<
water	39:28	0:0	8	h
forexpr	39:31	39:32	7	i ++
water	39:31	0:0	8	i
op	39:32	0:0	8	++
stmts	39:36	52:12	7	
water	39:36	0:0	8	{
decl	40:16	40:46	8	const int	iwx
op	40:30	0:0	8	=
water	40:32	0:0	8	i
op	40:34	0:0	8	*
water	40:36	0:0	8	slinesizex
decl	41:16	41:46	8	const int	iwy
op	41:30	0:0	8	=
water	41:32	0:0	8	i
op	41:34	0:0	8	*
water	41:36	0:0	8	slinesizey
for	42:16	51:16	8	(j = 0 ;j < w;j ++)
forinit	42:21	42:26	9	j = 0 ;
water	42:21	0:0	10	j
op	42:23	0:0	10	=
water	42:25	0:0	10	0
water	42:26	0:0	10	;
cond	42:28	42:32	9	j < w
water	42:28	0:0	10	j
op	42:30	0:0	10	<
water	42:32	0:0	10	w
forexpr	42:35	42:36	9	j ++
water	42:35	0:0	10	j
op	42:36	0:0	10	++
stmts	42:40	51:16	9	
water	42:40	0:0	10	{
decl	43:20	43:46	10	const int	x
op	43:32	0:0	10	=
water	43:34	0:0	10	spx
op	43:37	0:0	10	[
water	43:38	0:0	10	iwx
op	43:42	0:0	10	+
water	43:44	0:0	10	j
op	43:45	0:0	10	]
decl	44:20	44:46	10	const int	y
op	44:32	0:0	10	=
water	44:34	0:0	10	spy
op	44:37	0:0	10	[
water	44:38	0:0	10	iwy
op	44:42	0:0	10	+
water	44:44	0:0	10	j
op	44:45	0:0	10	]
decl	45:20	45:53	10	const int	pos
op	45:34	0:0	10	=
water	45:36	0:0	10	y
op	45:38	0:0	10	*
water	45:40	0:0	10	dlinesize
op	45:50	0:0	10	+
water	45:52	0:0	10	x
water	46:20	0:0	10	dst
op	46:23	0:0	10	[
water	46:24	0:0	10	0
op	46:25	0:0	10	]
op	46:26	0:0	10	[
water	46:27	0:0	10	pos
op	46:30	0:0	10	]
op	46:32	0:0	10	=
call	46:34	46:68	10	FFMIN
arg	46:40	46:63	11	dst[0][pos]+intensity
water	46:40	0:0	12	dst
op	46:43	0:0	12	[
water	46:44	0:0	12	0
op	46:45	0:0	12	]
op	46:46	0:0	12	[
water	46:47	0:0	12	pos
op	46:50	0:0	12	]
op	46:52	0:0	12	+
water	46:54	0:0	12	intensity
arg	46:65	46:68	11	255
water	46:65	0:0	12	255
water	46:69	0:0	10	;
water	47:20	0:0	10	dst
op	47:23	0:0	10	[
water	47:24	0:0	10	1
op	47:25	0:0	10	]
op	47:26	0:0	10	[
water	47:27	0:0	10	pos
op	47:30	0:0	10	]
op	47:32	0:0	10	=
call	47:34	47:68	10	FFMIN
arg	47:40	47:63	11	dst[1][pos]+intensity
water	47:40	0:0	12	dst
op	47:43	0:0	12	[
water	47:44	0:0	12	1
op	47:45	0:0	12	]
op	47:46	0:0	12	[
water	47:47	0:0	12	pos
op	47:50	0:0	12	]
op	47:52	0:0	12	+
water	47:54	0:0	12	intensity
arg	47:65	47:68	11	255
water	47:65	0:0	12	255
water	47:69	0:0	10	;
water	48:20	0:0	10	dst
op	48:23	0:0	10	[
water	48:24	0:0	10	2
op	48:25	0:0	10	]
op	48:26	0:0	10	[
water	48:27	0:0	10	pos
op	48:30	0:0	10	]
op	48:32	0:0	10	=
call	48:34	48:68	10	FFMIN
arg	48:40	48:63	11	dst[2][pos]+intensity
water	48:40	0:0	12	dst
op	48:43	0:0	12	[
water	48:44	0:0	12	2
op	48:45	0:0	12	]
op	48:46	0:0	12	[
water	48:47	0:0	12	pos
op	48:50	0:0	12	]
op	48:52	0:0	12	+
water	48:54	0:0	12	intensity
arg	48:65	48:68	11	255
water	48:65	0:0	12	255
water	48:69	0:0	10	;
if	49:20	50:41	10	(dst [ 3 ])
cond	49:24	49:29	11	dst [ 3 ]
water	49:24	0:0	12	dst
op	49:27	0:0	12	[
water	49:28	0:0	12	3
op	49:29	0:0	12	]
stmts	50:24	50:41	11	
water	50:24	0:0	12	dst
op	50:27	0:0	12	[
water	50:28	0:0	12	3
op	50:29	0:0	12	]
op	50:30	0:0	12	[
water	50:31	0:0	12	pos
op	50:34	0:0	12	]
op	50:36	0:0	12	=
water	50:38	0:0	12	255
water	50:41	0:0	12	;
water	51:16	0:0	10	}
water	52:12	0:0	8	}
water	53:8	0:0	6	}
break	54:8	54:13	4	
label	55:4	55:15	4	case COLOR2 :
if	56:8	72:8	4	(s -> is_yuv)
cond	56:12	56:15	5	s -> is_yuv
water	56:12	0:0	6	s
op	56:13	0:0	6	->
water	56:15	0:0	6	is_yuv
stmts	56:23	72:8	5	
water	56:23	0:0	6	{
for	57:12	71:12	6	(i = 0 ;i < h;i ++)
forinit	57:17	57:22	7	i = 0 ;
water	57:17	0:0	8	i
op	57:19	0:0	8	=
water	57:21	0:0	8	0
water	57:22	0:0	8	;
cond	57:24	57:28	7	i < h
water	57:24	0:0	8	i
op	57:26	0:0	8	<
water	57:28	0:0	8	h
forexpr	57:31	57:32	7	i ++
water	57:31	0:0	8	i
op	57:32	0:0	8	++
stmts	57:36	71:12	7	
water	57:36	0:0	8	{
decl	58:16	58:46	8	const int	iw1
op	58:30	0:0	8	=
water	58:32	0:0	8	i
op	58:34	0:0	8	*
water	58:36	0:0	8	slinesizex
decl	59:16	59:46	8	const int	iw2
op	59:30	0:0	8	=
water	59:32	0:0	8	i
op	59:34	0:0	8	*
water	59:36	0:0	8	slinesizey
for	60:16	70:16	8	(j = 0 ;j < w;j ++)
forinit	60:21	60:26	9	j = 0 ;
water	60:21	0:0	10	j
op	60:23	0:0	10	=
water	60:25	0:0	10	0
water	60:26	0:0	10	;
cond	60:28	60:32	9	j < w
water	60:28	0:0	10	j
op	60:30	0:0	10	<
water	60:32	0:0	10	w
forexpr	60:35	60:36	9	j ++
water	60:35	0:0	10	j
op	60:36	0:0	10	++
stmts	60:40	70:16	9	
water	60:40	0:0	10	{
decl	61:20	61:46	10	const int	x
op	61:32	0:0	10	=
water	61:34	0:0	10	spx
op	61:37	0:0	10	[
water	61:38	0:0	10	iw1
op	61:42	0:0	10	+
water	61:44	0:0	10	j
op	61:45	0:0	10	]
decl	62:20	62:46	10	const int	y
op	62:32	0:0	10	=
water	62:34	0:0	10	spy
op	62:37	0:0	10	[
water	62:38	0:0	10	iw2
op	62:42	0:0	10	+
water	62:44	0:0	10	j
op	62:45	0:0	10	]
decl	63:20	63:53	10	const int	pos
op	63:34	0:0	10	=
water	63:36	0:0	10	y
op	63:38	0:0	10	*
water	63:40	0:0	10	dlinesize
op	63:50	0:0	10	+
water	63:52	0:0	10	x
if	64:20	65:66	10	(! dpd [ pos ])
cond	64:24	64:32	11	! dpd [ pos ]
op	64:24	0:0	12	!
water	64:25	0:0	12	dpd
op	64:28	0:0	12	[
water	64:29	0:0	12	pos
op	64:32	0:0	12	]
stmts	65:24	65:66	11	
water	65:24	0:0	12	dpd
op	65:27	0:0	12	[
water	65:28	0:0	12	pos
op	65:31	0:0	12	]
op	65:33	0:0	12	=
call	65:35	65:48	12	FFABS
arg	65:41	65:48	13	128-x
water	65:41	0:0	14	128
op	65:45	0:0	14	-
water	65:47	0:0	14	x
op	65:50	0:0	12	+
call	65:52	65:65	12	FFABS
arg	65:58	65:65	13	128-y
water	65:58	0:0	14	128
op	65:62	0:0	14	-
water	65:64	0:0	14	y
water	65:66	0:0	12	;
water	66:20	0:0	10	dpx
op	66:23	0:0	10	[
water	66:24	0:0	10	pos
op	66:27	0:0	10	]
op	66:29	0:0	10	=
water	66:31	0:0	10	x
water	66:32	0:0	10	;
water	67:20	0:0	10	dpy
op	67:23	0:0	10	[
water	67:24	0:0	10	pos
op	67:27	0:0	10	]
op	67:29	0:0	10	=
water	67:31	0:0	10	y
water	67:32	0:0	10	;
if	68:20	69:41	10	(dst [ 3 ])
cond	68:24	68:29	11	dst [ 3 ]
water	68:24	0:0	12	dst
op	68:27	0:0	12	[
water	68:28	0:0	12	3
op	68:29	0:0	12	]
stmts	69:24	69:41	11	
water	69:24	0:0	12	dst
op	69:27	0:0	12	[
water	69:28	0:0	12	3
op	69:29	0:0	12	]
op	69:30	0:0	12	[
water	69:31	0:0	12	pos
op	69:34	0:0	12	]
op	69:36	0:0	12	=
water	69:38	0:0	12	255
water	69:41	0:0	12	;
water	70:16	0:0	10	}
water	71:12	0:0	8	}
water	72:8	0:0	6	}
else	72:10	88:8	4
stmts	72:15	88:8	5	
water	72:15	0:0	6	{
for	73:12	87:12	6	(i = 0 ;i < h;i ++)
forinit	73:17	73:22	7	i = 0 ;
water	73:17	0:0	8	i
op	73:19	0:0	8	=
water	73:21	0:0	8	0
water	73:22	0:0	8	;
cond	73:24	73:28	7	i < h
water	73:24	0:0	8	i
op	73:26	0:0	8	<
water	73:28	0:0	8	h
forexpr	73:31	73:32	7	i ++
water	73:31	0:0	8	i
op	73:32	0:0	8	++
stmts	73:36	87:12	7	
water	73:36	0:0	8	{
decl	74:16	74:46	8	const int	iw1
op	74:30	0:0	8	=
water	74:32	0:0	8	i
op	74:34	0:0	8	*
water	74:36	0:0	8	slinesizex
decl	75:16	75:46	8	const int	iw2
op	75:30	0:0	8	=
water	75:32	0:0	8	i
op	75:34	0:0	8	*
water	75:36	0:0	8	slinesizey
for	76:16	86:16	8	(j = 0 ;j < w;j ++)
forinit	76:21	76:26	9	j = 0 ;
water	76:21	0:0	10	j
op	76:23	0:0	10	=
water	76:25	0:0	10	0
water	76:26	0:0	10	;
cond	76:28	76:32	9	j < w
water	76:28	0:0	10	j
op	76:30	0:0	10	<
water	76:32	0:0	10	w
forexpr	76:35	76:36	9	j ++
water	76:35	0:0	10	j
op	76:36	0:0	10	++
stmts	76:40	86:16	9	
water	76:40	0:0	10	{
decl	77:20	77:46	10	const int	x
op	77:32	0:0	10	=
water	77:34	0:0	10	spx
op	77:37	0:0	10	[
water	77:38	0:0	10	iw1
op	77:42	0:0	10	+
water	77:44	0:0	10	j
op	77:45	0:0	10	]
decl	78:20	78:46	10	const int	y
op	78:32	0:0	10	=
water	78:34	0:0	10	spy
op	78:37	0:0	10	[
water	78:38	0:0	10	iw2
op	78:42	0:0	10	+
water	78:44	0:0	10	j
op	78:45	0:0	10	]
decl	79:20	79:53	10	const int	pos
op	79:34	0:0	10	=
water	79:36	0:0	10	y
op	79:38	0:0	10	*
water	79:40	0:0	10	dlinesize
op	79:50	0:0	10	+
water	79:52	0:0	10	x
if	80:20	81:52	10	(! dpd [ pos ])
cond	80:24	80:32	11	! dpd [ pos ]
op	80:24	0:0	12	!
water	80:25	0:0	12	dpd
op	80:28	0:0	12	[
water	80:29	0:0	12	pos
op	80:32	0:0	12	]
stmts	81:24	81:52	11	
water	81:24	0:0	12	dpd
op	81:27	0:0	12	[
water	81:28	0:0	12	pos
op	81:31	0:0	12	]
op	81:33	0:0	12	=
call	81:35	81:51	12	FFMIN
arg	81:41	81:46	13	x+y
water	81:41	0:0	14	x
op	81:43	0:0	14	+
water	81:45	0:0	14	y
arg	81:48	81:51	13	255
water	81:48	0:0	14	255
water	81:52	0:0	12	;
water	82:20	0:0	10	dpx
op	82:23	0:0	10	[
water	82:24	0:0	10	pos
op	82:27	0:0	10	]
op	82:29	0:0	10	=
water	82:31	0:0	10	x
water	82:32	0:0	10	;
water	83:20	0:0	10	dpy
op	83:23	0:0	10	[
water	83:24	0:0	10	pos
op	83:27	0:0	10	]
op	83:29	0:0	10	=
water	83:31	0:0	10	y
water	83:32	0:0	10	;
if	84:20	85:41	10	(dst [ 3 ])
cond	84:24	84:29	11	dst [ 3 ]
water	84:24	0:0	12	dst
op	84:27	0:0	12	[
water	84:28	0:0	12	3
op	84:29	0:0	12	]
stmts	85:24	85:41	11	
water	85:24	0:0	12	dst
op	85:27	0:0	12	[
water	85:28	0:0	12	3
op	85:29	0:0	12	]
op	85:30	0:0	12	[
water	85:31	0:0	12	pos
op	85:34	0:0	12	]
op	85:36	0:0	12	=
water	85:38	0:0	12	255
water	85:41	0:0	12	;
water	86:16	0:0	10	}
water	87:12	0:0	8	}
water	88:8	0:0	6	}
break	89:8	89:13	4	
label	90:4	90:15	4	case COLOR3 :
for	91:8	104:8	4	(i = 0 ;i < h;i ++)
forinit	91:13	91:18	5	i = 0 ;
water	91:13	0:0	6	i
op	91:15	0:0	6	=
water	91:17	0:0	6	0
water	91:18	0:0	6	;
cond	91:20	91:24	5	i < h
water	91:20	0:0	6	i
op	91:22	0:0	6	<
water	91:24	0:0	6	h
forexpr	91:27	91:28	5	i ++
water	91:27	0:0	6	i
op	91:28	0:0	6	++
stmts	91:32	104:8	5	
water	91:32	0:0	6	{
decl	92:12	92:42	6	const int	iw1
op	92:26	0:0	6	=
water	92:28	0:0	6	i
op	92:30	0:0	6	*
water	92:32	0:0	6	slinesizex
decl	93:12	93:42	6	const int	iw2
op	93:26	0:0	6	=
water	93:28	0:0	6	i
op	93:30	0:0	6	*
water	93:32	0:0	6	slinesizey
for	94:12	103:12	6	(j = 0 ;j < w;j ++)
forinit	94:17	94:22	7	j = 0 ;
water	94:17	0:0	8	j
op	94:19	0:0	8	=
water	94:21	0:0	8	0
water	94:22	0:0	8	;
cond	94:24	94:28	7	j < w
water	94:24	0:0	8	j
op	94:26	0:0	8	<
water	94:28	0:0	8	w
forexpr	94:31	94:32	7	j ++
water	94:31	0:0	8	j
op	94:32	0:0	8	++
stmts	94:36	103:12	7	
water	94:36	0:0	8	{
decl	95:16	95:42	8	const int	x
op	95:28	0:0	8	=
water	95:30	0:0	8	spx
op	95:33	0:0	8	[
water	95:34	0:0	8	iw1
op	95:38	0:0	8	+
water	95:40	0:0	8	j
op	95:41	0:0	8	]
decl	96:16	96:42	8	const int	y
op	96:28	0:0	8	=
water	96:30	0:0	8	spy
op	96:33	0:0	8	[
water	96:34	0:0	8	iw2
op	96:38	0:0	8	+
water	96:40	0:0	8	j
op	96:41	0:0	8	]
decl	97:16	97:49	8	const int	pos
op	97:30	0:0	8	=
water	97:32	0:0	8	y
op	97:34	0:0	8	*
water	97:36	0:0	8	dlinesize
op	97:46	0:0	8	+
water	97:48	0:0	8	x
water	98:16	0:0	8	dpd
op	98:19	0:0	8	[
water	98:20	0:0	8	pos
op	98:23	0:0	8	]
op	98:25	0:0	8	=
call	98:27	98:58	8	FFMIN
arg	98:33	98:36	9	255
water	98:33	0:0	10	255
arg	98:38	98:58	9	dpd[pos]+intensity
water	98:38	0:0	10	dpd
op	98:41	0:0	10	[
water	98:42	0:0	10	pos
op	98:45	0:0	10	]
op	98:47	0:0	10	+
water	98:49	0:0	10	intensity
water	98:59	0:0	8	;
water	99:16	0:0	8	dpx
op	99:19	0:0	8	[
water	99:20	0:0	8	pos
op	99:23	0:0	8	]
op	99:25	0:0	8	=
water	99:27	0:0	8	x
water	99:28	0:0	8	;
water	100:16	0:0	8	dpy
op	100:19	0:0	8	[
water	100:20	0:0	8	pos
op	100:23	0:0	8	]
op	100:25	0:0	8	=
water	100:27	0:0	8	y
water	100:28	0:0	8	;
if	101:16	102:37	8	(dst [ 3 ])
cond	101:20	101:25	9	dst [ 3 ]
water	101:20	0:0	10	dst
op	101:23	0:0	10	[
water	101:24	0:0	10	3
op	101:25	0:0	10	]
stmts	102:20	102:37	9	
water	102:20	0:0	10	dst
op	102:23	0:0	10	[
water	102:24	0:0	10	3
op	102:25	0:0	10	]
op	102:26	0:0	10	[
water	102:27	0:0	10	pos
op	102:30	0:0	10	]
op	102:32	0:0	10	=
water	102:34	0:0	10	255
water	102:37	0:0	10	;
water	103:12	0:0	8	}
water	104:8	0:0	6	}
break	105:8	105:13	4	
label	106:4	106:15	4	case COLOR4 :
for	107:8	121:8	4	(i = 0 ;i < in -> height;i ++)
forinit	107:13	107:18	5	i = 0 ;
water	107:13	0:0	6	i
op	107:15	0:0	6	=
water	107:17	0:0	6	0
water	107:18	0:0	6	;
cond	107:20	107:28	5	i < in -> height
water	107:20	0:0	6	i
op	107:22	0:0	6	<
water	107:24	0:0	6	in
op	107:26	0:0	6	->
water	107:28	0:0	6	height
forexpr	107:36	107:37	5	i ++
water	107:36	0:0	6	i
op	107:37	0:0	6	++
stmts	107:41	121:8	5	
water	107:41	0:0	6	{
decl	108:12	108:52	6	const int	iwx
op	108:26	0:0	6	=
water	108:28	0:0	6	(
water	108:29	0:0	6	i
op	108:31	0:0	6	>>
water	108:34	0:0	6	vsub
water	108:38	0:0	6	)
op	108:40	0:0	6	*
water	108:42	0:0	6	slinesizex
decl	109:12	109:52	6	const int	iwy
op	109:26	0:0	6	=
water	109:28	0:0	6	(
water	109:29	0:0	6	i
op	109:31	0:0	6	>>
water	109:34	0:0	6	vsub
water	109:38	0:0	6	)
op	109:40	0:0	6	*
water	109:42	0:0	6	slinesizey
decl	110:12	110:42	6	const int	iwd
op	110:26	0:0	6	=
water	110:28	0:0	6	i
op	110:30	0:0	6	*
water	110:32	0:0	6	slinesized
for	111:12	120:12	6	(j = 0 ;j < in -> width;j ++)
forinit	111:17	111:22	7	j = 0 ;
water	111:17	0:0	8	j
op	111:19	0:0	8	=
water	111:21	0:0	8	0
water	111:22	0:0	8	;
cond	111:24	111:32	7	j < in -> width
water	111:24	0:0	8	j
op	111:26	0:0	8	<
water	111:28	0:0	8	in
op	111:30	0:0	8	->
water	111:32	0:0	8	width
forexpr	111:39	111:40	7	j ++
water	111:39	0:0	8	j
op	111:40	0:0	8	++
stmts	111:44	120:12	7	
water	111:44	0:0	8	{
decl	112:16	112:52	8	const int	x
op	112:28	0:0	8	=
water	112:30	0:0	8	spx
op	112:33	0:0	8	[
water	112:34	0:0	8	iwx
op	112:38	0:0	8	+
water	112:40	0:0	8	(
water	112:41	0:0	8	j
op	112:43	0:0	8	>>
water	112:46	0:0	8	hsub
water	112:50	0:0	8	)
op	112:51	0:0	8	]
decl	113:16	113:52	8	const int	y
op	113:28	0:0	8	=
water	113:30	0:0	8	spy
op	113:33	0:0	8	[
water	113:34	0:0	8	iwy
op	113:38	0:0	8	+
water	113:40	0:0	8	(
water	113:41	0:0	8	j
op	113:43	0:0	8	>>
water	113:46	0:0	8	hsub
water	113:50	0:0	8	)
op	113:51	0:0	8	]
decl	114:16	114:49	8	const int	pos
op	114:30	0:0	8	=
water	114:32	0:0	8	y
op	114:34	0:0	8	*
water	114:36	0:0	8	dlinesize
op	114:46	0:0	8	+
water	114:48	0:0	8	x
water	115:16	0:0	8	dpd
op	115:19	0:0	8	[
water	115:20	0:0	8	pos
op	115:23	0:0	8	]
op	115:25	0:0	8	=
call	115:27	115:55	8	FFMAX
arg	115:33	115:45	9	spd[iwd+j]
water	115:33	0:0	10	spd
op	115:36	0:0	10	[
water	115:37	0:0	10	iwd
op	115:41	0:0	10	+
water	115:43	0:0	10	j
op	115:44	0:0	10	]
arg	115:47	115:55	9	dpd[pos]
water	115:47	0:0	10	dpd
op	115:50	0:0	10	[
water	115:51	0:0	10	pos
op	115:54	0:0	10	]
water	115:56	0:0	8	;
water	116:16	0:0	8	dpx
op	116:19	0:0	8	[
water	116:20	0:0	8	pos
op	116:23	0:0	8	]
op	116:25	0:0	8	=
water	116:27	0:0	8	x
water	116:28	0:0	8	;
water	117:16	0:0	8	dpy
op	117:19	0:0	8	[
water	117:20	0:0	8	pos
op	117:23	0:0	8	]
op	117:25	0:0	8	=
water	117:27	0:0	8	y
water	117:28	0:0	8	;
if	118:16	119:37	8	(dst [ 3 ])
cond	118:20	118:25	9	dst [ 3 ]
water	118:20	0:0	10	dst
op	118:23	0:0	10	[
water	118:24	0:0	10	3
op	118:25	0:0	10	]
stmts	119:20	119:37	9	
water	119:20	0:0	10	dst
op	119:23	0:0	10	[
water	119:24	0:0	10	3
op	119:25	0:0	10	]
op	119:26	0:0	10	[
water	119:27	0:0	10	pos
op	119:30	0:0	10	]
op	119:32	0:0	10	=
water	119:34	0:0	10	255
water	119:37	0:0	10	;
water	120:12	0:0	8	}
water	121:8	0:0	6	}
break	122:8	122:13	4	
label	123:4	123:11	4	default :
call	124:8	124:20	4	av_assert0
arg	124:19	124:20	5	0
water	124:19	0:0	6	0
water	124:21	0:0	4	;
water	125:4	0:0	4	}
call	126:4	126:19	2	envelope
arg	126:13	126:14	3	s
water	126:13	0:0	4	s
arg	126:16	126:19	3	out
water	126:16	0:0	4	out
water	126:20	0:0	2	;
if	127:4	137:4	2	(s -> mode == COLOR)
cond	127:8	127:19	3	s -> mode == COLOR
water	127:8	0:0	4	s
op	127:9	0:0	4	->
water	127:11	0:0	4	mode
op	127:16	0:0	4	==
water	127:19	0:0	4	COLOR
stmts	127:26	137:4	3	
water	127:26	0:0	4	{
for	128:8	136:8	4	(i = 0 ;i < out -> height;i ++)
forinit	128:13	128:18	5	i = 0 ;
water	128:13	0:0	6	i
op	128:15	0:0	6	=
water	128:17	0:0	6	0
water	128:18	0:0	6	;
cond	128:20	128:29	5	i < out -> height
water	128:20	0:0	6	i
op	128:22	0:0	6	<
water	128:24	0:0	6	out
op	128:27	0:0	6	->
water	128:29	0:0	6	height
forexpr	128:37	128:38	5	i ++
water	128:37	0:0	6	i
op	128:38	0:0	6	++
stmts	128:42	136:8	5	
water	128:42	0:0	6	{
for	129:12	135:12	6	(j = 0 ;j < out -> width;j ++)
forinit	129:17	129:22	7	j = 0 ;
water	129:17	0:0	8	j
op	129:19	0:0	8	=
water	129:21	0:0	8	0
water	129:22	0:0	8	;
cond	129:24	129:33	7	j < out -> width
water	129:24	0:0	8	j
op	129:26	0:0	8	<
water	129:28	0:0	8	out
op	129:31	0:0	8	->
water	129:33	0:0	8	width
forexpr	129:40	129:41	7	j ++
water	129:40	0:0	8	j
op	129:41	0:0	8	++
stmts	129:45	135:12	7	
water	129:45	0:0	8	{
if	130:16	134:16	8	(! dpd [ i * out -> linesize [ pd ] + j ])
cond	130:20	130:50	9	! dpd [ i * out -> linesize [ pd ] + j ]
op	130:20	0:0	10	!
water	130:21	0:0	10	dpd
op	130:24	0:0	10	[
water	130:25	0:0	10	i
op	130:27	0:0	10	*
water	130:29	0:0	10	out
op	130:32	0:0	10	->
water	130:34	0:0	10	linesize
op	130:42	0:0	10	[
water	130:43	0:0	10	pd
op	130:45	0:0	10	]
op	130:47	0:0	10	+
water	130:49	0:0	10	j
op	130:50	0:0	10	]
stmts	130:53	134:16	9	
water	130:53	0:0	10	{
water	131:20	0:0	10	dpx
op	131:23	0:0	10	[
water	131:24	0:0	10	i
op	131:26	0:0	10	*
water	131:28	0:0	10	out
op	131:31	0:0	10	->
water	131:33	0:0	10	linesize
op	131:41	0:0	10	[
water	131:42	0:0	10	px
op	131:44	0:0	10	]
op	131:46	0:0	10	+
water	131:48	0:0	10	j
op	131:49	0:0	10	]
op	131:51	0:0	10	=
water	131:53	0:0	10	j
water	131:54	0:0	10	;
water	132:20	0:0	10	dpy
op	132:23	0:0	10	[
water	132:24	0:0	10	i
op	132:26	0:0	10	*
water	132:28	0:0	10	out
op	132:31	0:0	10	->
water	132:33	0:0	10	linesize
op	132:41	0:0	10	[
water	132:42	0:0	10	py
op	132:44	0:0	10	]
op	132:46	0:0	10	+
water	132:48	0:0	10	j
op	132:49	0:0	10	]
op	132:51	0:0	10	=
water	132:53	0:0	10	i
water	132:54	0:0	10	;
water	133:20	0:0	10	dpd
op	133:23	0:0	10	[
water	133:24	0:0	10	i
op	133:26	0:0	10	*
water	133:28	0:0	10	out
op	133:31	0:0	10	->
water	133:33	0:0	10	linesize
op	133:41	0:0	10	[
water	133:42	0:0	10	pd
op	133:44	0:0	10	]
op	133:46	0:0	10	+
water	133:48	0:0	10	j
op	133:49	0:0	10	]
op	133:51	0:0	10	=
water	133:53	0:0	10	128
water	133:56	0:0	10	;
water	134:16	0:0	10	}
water	135:12	0:0	8	}
water	136:8	0:0	6	}
water	137:4	0:0	4	}

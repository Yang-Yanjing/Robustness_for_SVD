func	1:0	17:0	0	static int	mp4_get_codec_tag
params	1:28	0:0	1	
param	1:29	1:47	2	AVFormatContext *	s
param	1:49	1:64	2	MOVTrack *	track
stmnts	0:0	16:14	1	
decl	3:4	3:35	2	int	tag
op	3:12	0:0	2	=
water	3:14	0:0	2	track
op	3:19	0:0	2	->
water	3:21	0:0	2	enc
op	3:24	0:0	2	->
water	3:26	0:0	2	codec_tag
if	4:4	5:16	2	(!ff_codec_get_tag (ff_mp4_obj_type ,track -> enc -> codec_id ))
cond	4:8	4:63	3	!ff_codec_get_tag (ff_mp4_obj_type ,track -> enc -> codec_id )
op	4:8	0:0	4	!
call	4:9	4:63	4	ff_codec_get_tag
arg	4:26	4:41	5	ff_mp4_obj_type
water	4:26	0:0	6	ff_mp4_obj_type
arg	4:43	4:63	5	track->enc->codec_id
water	4:43	0:0	6	track
op	4:48	0:0	6	->
water	4:50	0:0	6	enc
op	4:53	0:0	6	->
water	4:55	0:0	6	codec_id
stmts	5:8	5:16	3	
return	5:8	5:16	4	0
water	5:15	0:0	5	0
if	6:4	6:88	2	(track -> enc -> codec_id == AV_CODEC_ID_H264)
cond	6:13	6:37	3	track -> enc -> codec_id == AV_CODEC_ID_H264
water	6:13	0:0	4	track
op	6:18	0:0	4	->
water	6:20	0:0	4	enc
op	6:23	0:0	4	->
water	6:25	0:0	4	codec_id
op	6:34	0:0	4	==
water	6:37	0:0	4	AV_CODEC_ID_H264
stmts	6:60	6:88	3	
water	6:60	0:0	4	tag
op	6:64	0:0	4	=
call	6:66	6:87	4	MKTAG
arg	6:72	6:75	5	'a'
water	6:72	0:0	6	'a'
arg	6:76	6:79	5	'v'
water	6:76	0:0	6	'v'
arg	6:80	6:83	5	'c'
water	6:80	0:0	6	'c'
arg	6:84	6:87	5	'1'
water	6:84	0:0	6	'1'
water	6:88	0:0	4	;
else	7:4	7:88	2
stmts	7:9	7:88	3	
if	7:9	7:88	4	(track -> enc -> codec_id == AV_CODEC_ID_HEVC)
cond	7:13	7:37	5	track -> enc -> codec_id == AV_CODEC_ID_HEVC
water	7:13	0:0	6	track
op	7:18	0:0	6	->
water	7:20	0:0	6	enc
op	7:23	0:0	6	->
water	7:25	0:0	6	codec_id
op	7:34	0:0	6	==
water	7:37	0:0	6	AV_CODEC_ID_HEVC
stmts	7:60	7:88	5	
water	7:60	0:0	6	tag
op	7:64	0:0	6	=
call	7:66	7:87	6	MKTAG
arg	7:72	7:75	7	'h'
water	7:72	0:0	8	'h'
arg	7:76	7:79	7	'e'
water	7:76	0:0	8	'e'
arg	7:80	7:83	7	'v'
water	7:80	0:0	8	'v'
arg	7:84	7:87	7	'1'
water	7:84	0:0	8	'1'
water	7:88	0:0	6	;
else	8:4	8:88	2
stmts	8:9	8:88	3	
if	8:9	8:88	4	(track -> enc -> codec_id == AV_CODEC_ID_AC3)
cond	8:13	8:37	5	track -> enc -> codec_id == AV_CODEC_ID_AC3
water	8:13	0:0	6	track
op	8:18	0:0	6	->
water	8:20	0:0	6	enc
op	8:23	0:0	6	->
water	8:25	0:0	6	codec_id
op	8:34	0:0	6	==
water	8:37	0:0	6	AV_CODEC_ID_AC3
stmts	8:60	8:88	5	
water	8:60	0:0	6	tag
op	8:64	0:0	6	=
call	8:66	8:87	6	MKTAG
arg	8:72	8:75	7	'a'
water	8:72	0:0	8	'a'
arg	8:76	8:79	7	'c'
water	8:76	0:0	8	'c'
arg	8:80	8:83	7	'-'
water	8:80	0:0	8	'-'
arg	8:84	8:87	7	'3'
water	8:84	0:0	8	'3'
water	8:88	0:0	6	;
else	9:4	9:88	2
stmts	9:9	9:88	3	
if	9:9	9:88	4	(track -> enc -> codec_id == AV_CODEC_ID_EAC3)
cond	9:13	9:37	5	track -> enc -> codec_id == AV_CODEC_ID_EAC3
water	9:13	0:0	6	track
op	9:18	0:0	6	->
water	9:20	0:0	6	enc
op	9:23	0:0	6	->
water	9:25	0:0	6	codec_id
op	9:34	0:0	6	==
water	9:37	0:0	6	AV_CODEC_ID_EAC3
stmts	9:60	9:88	5	
water	9:60	0:0	6	tag
op	9:64	0:0	6	=
call	9:66	9:87	6	MKTAG
arg	9:72	9:75	7	'e'
water	9:72	0:0	8	'e'
arg	9:76	9:79	7	'c'
water	9:76	0:0	8	'c'
arg	9:80	9:83	7	'-'
water	9:80	0:0	8	'-'
arg	9:84	9:87	7	'3'
water	9:84	0:0	8	'3'
water	9:88	0:0	6	;
else	10:4	10:88	2
stmts	10:9	10:88	3	
if	10:9	10:88	4	(track -> enc -> codec_id == AV_CODEC_ID_DIRAC)
cond	10:13	10:37	5	track -> enc -> codec_id == AV_CODEC_ID_DIRAC
water	10:13	0:0	6	track
op	10:18	0:0	6	->
water	10:20	0:0	6	enc
op	10:23	0:0	6	->
water	10:25	0:0	6	codec_id
op	10:34	0:0	6	==
water	10:37	0:0	6	AV_CODEC_ID_DIRAC
stmts	10:60	10:88	5	
water	10:60	0:0	6	tag
op	10:64	0:0	6	=
call	10:66	10:87	6	MKTAG
arg	10:72	10:75	7	'd'
water	10:72	0:0	8	'd'
arg	10:76	10:79	7	'r'
water	10:76	0:0	8	'r'
arg	10:80	10:83	7	'a'
water	10:80	0:0	8	'a'
arg	10:84	10:87	7	'c'
water	10:84	0:0	8	'c'
water	10:88	0:0	6	;
else	11:4	11:88	2
stmts	11:9	11:88	3	
if	11:9	11:88	4	(track -> enc -> codec_id == AV_CODEC_ID_MOV_TEXT)
cond	11:13	11:37	5	track -> enc -> codec_id == AV_CODEC_ID_MOV_TEXT
water	11:13	0:0	6	track
op	11:18	0:0	6	->
water	11:20	0:0	6	enc
op	11:23	0:0	6	->
water	11:25	0:0	6	codec_id
op	11:34	0:0	6	==
water	11:37	0:0	6	AV_CODEC_ID_MOV_TEXT
stmts	11:60	11:88	5	
water	11:60	0:0	6	tag
op	11:64	0:0	6	=
call	11:66	11:87	6	MKTAG
arg	11:72	11:75	7	't'
water	11:72	0:0	8	't'
arg	11:76	11:79	7	'x'
water	11:76	0:0	8	'x'
arg	11:80	11:83	7	'3'
water	11:80	0:0	8	'3'
arg	11:84	11:87	7	'g'
water	11:84	0:0	8	'g'
water	11:88	0:0	6	;
else	12:4	12:88	2
stmts	12:9	12:88	3	
if	12:9	12:88	4	(track -> enc -> codec_id == AV_CODEC_ID_VC1)
cond	12:13	12:37	5	track -> enc -> codec_id == AV_CODEC_ID_VC1
water	12:13	0:0	6	track
op	12:18	0:0	6	->
water	12:20	0:0	6	enc
op	12:23	0:0	6	->
water	12:25	0:0	6	codec_id
op	12:34	0:0	6	==
water	12:37	0:0	6	AV_CODEC_ID_VC1
stmts	12:60	12:88	5	
water	12:60	0:0	6	tag
op	12:64	0:0	6	=
call	12:66	12:87	6	MKTAG
arg	12:72	12:75	7	'v'
water	12:72	0:0	8	'v'
arg	12:76	12:79	7	'c'
water	12:76	0:0	8	'c'
arg	12:80	12:83	7	'-'
water	12:80	0:0	8	'-'
arg	12:84	12:87	7	'1'
water	12:84	0:0	8	'1'
water	12:88	0:0	6	;
else	13:4	13:88	2
stmts	13:9	13:88	3	
if	13:9	13:88	4	(track -> enc -> codec_type == AVMEDIA_TYPE_VIDEO)
cond	13:13	13:39	5	track -> enc -> codec_type == AVMEDIA_TYPE_VIDEO
water	13:13	0:0	6	track
op	13:18	0:0	6	->
water	13:20	0:0	6	enc
op	13:23	0:0	6	->
water	13:25	0:0	6	codec_type
op	13:36	0:0	6	==
water	13:39	0:0	6	AVMEDIA_TYPE_VIDEO
stmts	13:60	13:88	5	
water	13:60	0:0	6	tag
op	13:64	0:0	6	=
call	13:66	13:87	6	MKTAG
arg	13:72	13:75	7	'm'
water	13:72	0:0	8	'm'
arg	13:76	13:79	7	'p'
water	13:76	0:0	8	'p'
arg	13:80	13:83	7	'4'
water	13:80	0:0	8	'4'
arg	13:84	13:87	7	'v'
water	13:84	0:0	8	'v'
water	13:88	0:0	6	;
else	14:4	14:88	2
stmts	14:9	14:88	3	
if	14:9	14:88	4	(track -> enc -> codec_type == AVMEDIA_TYPE_AUDIO)
cond	14:13	14:39	5	track -> enc -> codec_type == AVMEDIA_TYPE_AUDIO
water	14:13	0:0	6	track
op	14:18	0:0	6	->
water	14:20	0:0	6	enc
op	14:23	0:0	6	->
water	14:25	0:0	6	codec_type
op	14:36	0:0	6	==
water	14:39	0:0	6	AVMEDIA_TYPE_AUDIO
stmts	14:60	14:88	5	
water	14:60	0:0	6	tag
op	14:64	0:0	6	=
call	14:66	14:87	6	MKTAG
arg	14:72	14:75	7	'm'
water	14:72	0:0	8	'm'
arg	14:76	14:79	7	'p'
water	14:76	0:0	8	'p'
arg	14:80	14:83	7	'4'
water	14:80	0:0	8	'4'
arg	14:84	14:87	7	'a'
water	14:84	0:0	8	'a'
water	14:88	0:0	6	;
else	15:4	15:92	2
stmts	15:9	15:92	3	
if	15:9	15:92	4	(track -> enc -> codec_id == AV_CODEC_ID_DVD_SUBTITLE)
cond	15:13	15:37	5	track -> enc -> codec_id == AV_CODEC_ID_DVD_SUBTITLE
water	15:13	0:0	6	track
op	15:18	0:0	6	->
water	15:20	0:0	6	enc
op	15:23	0:0	6	->
water	15:25	0:0	6	codec_id
op	15:34	0:0	6	==
water	15:37	0:0	6	AV_CODEC_ID_DVD_SUBTITLE
stmts	15:64	15:92	5	
water	15:64	0:0	6	tag
op	15:68	0:0	6	=
call	15:70	15:91	6	MKTAG
arg	15:76	15:79	7	'm'
water	15:76	0:0	8	'm'
arg	15:80	15:83	7	'p'
water	15:80	0:0	8	'p'
arg	15:84	15:87	7	'4'
water	15:84	0:0	8	'4'
arg	15:88	15:91	7	's'
water	15:88	0:0	8	's'
water	15:92	0:0	6	;
return	16:4	16:14	2	tag
water	16:11	0:0	3	tag

func	1:19	42:0	0	RENAME	(deInterlaceInterpolateLinear)
params	1:55	0:0	1	
param	1:56	1:69	2	uint8_t	src[]
param	1:71	1:81	2	int	stride
stmnts	4:4	40:4	1	
water	4:4	0:0	2	src
op	4:7	0:0	2	+=
water	4:10	0:0	2	4
op	4:11	0:0	2	*
water	4:12	0:0	2	stride
water	4:18	0:0	2	;
water	5:4	0:0	2	__asm__
water	5:12	0:0	2	volatile
water	5:20	0:0	2	(
water	6:8	0:0	2	"lea (%0, %1), %%"
water	6:26	0:0	2	REG_a
water	6:31	0:0	2	"                \n\t"
water	7:8	0:0	2	"lea (%%"
water	7:17	0:0	2	REG_a
water	7:22	0:0	2	", %1, 4), %%"
water	7:36	0:0	2	REG_c
water	7:41	0:0	2	"      \n\t"
water	10:8	0:0	2	"movq (%0), %%mm0                       \n\t"
water	11:8	0:0	2	"movq (%%"
water	11:18	0:0	2	REG_a
water	11:23	0:0	2	", %1), %%mm1            \n\t"
call	12:8	12:26	2	PAVGB
arg	12:14	12:19	3	%%mm1
op	12:14	0:0	4	%
op	12:15	0:0	4	%
water	12:16	0:0	4	mm1
arg	12:21	12:26	3	%%mm0
op	12:21	0:0	4	%
op	12:22	0:0	4	%
water	12:23	0:0	4	mm0
water	13:8	0:0	2	"movq %%mm0, (%%"
water	13:25	0:0	2	REG_a
water	13:30	0:0	2	")                \n\t"
water	14:8	0:0	2	"movq (%0, %1, 4), %%mm0                \n\t"
call	15:8	15:26	2	PAVGB
arg	15:14	15:19	3	%%mm0
op	15:14	0:0	4	%
op	15:15	0:0	4	%
water	15:16	0:0	4	mm0
arg	15:21	15:26	3	%%mm1
op	15:21	0:0	4	%
op	15:22	0:0	4	%
water	15:23	0:0	4	mm1
water	16:8	0:0	2	"movq %%mm1, (%%"
water	16:25	0:0	2	REG_a
water	16:30	0:0	2	", %1, 2)         \n\t"
water	17:8	0:0	2	"movq (%%"
water	17:18	0:0	2	REG_c
water	17:23	0:0	2	", %1), %%mm1            \n\t"
call	18:8	18:26	2	PAVGB
arg	18:14	18:19	3	%%mm1
op	18:14	0:0	4	%
op	18:15	0:0	4	%
water	18:16	0:0	4	mm1
arg	18:21	18:26	3	%%mm0
op	18:21	0:0	4	%
op	18:22	0:0	4	%
water	18:23	0:0	4	mm0
water	19:8	0:0	2	"movq %%mm0, (%%"
water	19:25	0:0	2	REG_c
water	19:30	0:0	2	")                \n\t"
water	20:8	0:0	2	"movq (%0, %1, 8), %%mm0                \n\t"
call	21:8	21:26	2	PAVGB
arg	21:14	21:19	3	%%mm0
op	21:14	0:0	4	%
op	21:15	0:0	4	%
water	21:16	0:0	4	mm0
arg	21:21	21:26	3	%%mm1
op	21:21	0:0	4	%
op	21:22	0:0	4	%
water	21:23	0:0	4	mm1
water	22:8	0:0	2	"movq %%mm1, (%%"
water	22:25	0:0	2	REG_c
water	22:30	0:0	2	", %1, 2)         \n\t"
water	23:8	0:0	2	:
water	23:10	0:0	2	:
water	23:12	0:0	2	"r"
water	23:16	0:0	2	(
water	23:17	0:0	2	src
water	23:20	0:0	2	)
water	23:21	0:0	2	,
water	23:23	0:0	2	"r"
water	23:27	0:0	2	(
water	23:28	0:0	2	(
water	23:29	0:0	2	x86_reg
water	23:36	0:0	2	)
water	23:37	0:0	2	stride
water	23:43	0:0	2	)
water	24:8	0:0	2	:
water	24:10	0:0	2	"%"
water	24:13	0:0	2	REG_a
water	24:18	0:0	2	,
water	24:20	0:0	2	"%"
water	24:23	0:0	2	REG_c
water	25:4	0:0	2	)
water	25:5	0:0	2	;
decl	27:4	27:15	2	int	a
water	27:9	0:0	2	,
decl	27:4	27:15	2	int	b
water	27:12	0:0	2	,
decl	27:4	27:15	2	int	x
water	28:4	0:0	2	src
op	28:7	0:0	2	+=
water	28:10	0:0	2	4
op	28:11	0:0	2	*
water	28:12	0:0	2	stride
water	28:18	0:0	2	;
for	29:4	40:4	2	(x = 0 ;x < 2;x ++)
forinit	29:8	29:11	3	x = 0 ;
water	29:8	0:0	4	x
op	29:9	0:0	4	=
water	29:10	0:0	4	0
water	29:11	0:0	4	;
cond	29:13	29:15	3	x < 2
water	29:13	0:0	4	x
op	29:14	0:0	4	<
water	29:15	0:0	4	2
forexpr	29:18	29:19	3	x ++
water	29:18	0:0	4	x
op	29:19	0:0	4	++
stmts	29:22	40:4	3	
water	29:22	0:0	4	{
water	30:8	0:0	4	a
op	30:9	0:0	4	=
op	30:11	0:0	4	*
water	30:12	0:0	4	(
water	30:13	0:0	4	uint32_t
op	30:21	0:0	4	*
water	30:22	0:0	4	)
op	30:23	0:0	4	&
water	30:24	0:0	4	src
op	30:27	0:0	4	[
water	30:28	0:0	4	stride
op	30:34	0:0	4	*
water	30:35	0:0	4	0
op	30:36	0:0	4	]
water	30:37	0:0	4	;
water	31:8	0:0	4	b
op	31:9	0:0	4	=
op	31:11	0:0	4	*
water	31:12	0:0	4	(
water	31:13	0:0	4	uint32_t
op	31:21	0:0	4	*
water	31:22	0:0	4	)
op	31:23	0:0	4	&
water	31:24	0:0	4	src
op	31:27	0:0	4	[
water	31:28	0:0	4	stride
op	31:34	0:0	4	*
water	31:35	0:0	4	2
op	31:36	0:0	4	]
water	31:37	0:0	4	;
op	32:8	0:0	4	*
water	32:9	0:0	4	(
water	32:10	0:0	4	uint32_t
op	32:18	0:0	4	*
water	32:19	0:0	4	)
op	32:20	0:0	4	&
water	32:21	0:0	4	src
op	32:24	0:0	4	[
water	32:25	0:0	4	stride
op	32:31	0:0	4	*
water	32:32	0:0	4	1
op	32:33	0:0	4	]
op	32:34	0:0	4	=
water	32:36	0:0	4	(
water	32:37	0:0	4	a
op	32:38	0:0	4	|
water	32:39	0:0	4	b
water	32:40	0:0	4	)
op	32:42	0:0	4	-
water	32:44	0:0	4	(
water	32:45	0:0	4	(
water	32:46	0:0	4	(
water	32:47	0:0	4	a
op	32:48	0:0	4	^
water	32:49	0:0	4	b
water	32:50	0:0	4	)
op	32:51	0:0	4	&
water	32:52	0:0	4	0
water	32:53	0:0	4	xFEFEFEFEUL
water	32:64	0:0	4	)
op	32:65	0:0	4	>>
water	32:67	0:0	4	1
water	32:68	0:0	4	)
water	32:69	0:0	4	;
water	33:8	0:0	4	a
op	33:9	0:0	4	=
op	33:11	0:0	4	*
water	33:12	0:0	4	(
water	33:13	0:0	4	uint32_t
op	33:21	0:0	4	*
water	33:22	0:0	4	)
op	33:23	0:0	4	&
water	33:24	0:0	4	src
op	33:27	0:0	4	[
water	33:28	0:0	4	stride
op	33:34	0:0	4	*
water	33:35	0:0	4	4
op	33:36	0:0	4	]
water	33:37	0:0	4	;
op	34:8	0:0	4	*
water	34:9	0:0	4	(
water	34:10	0:0	4	uint32_t
op	34:18	0:0	4	*
water	34:19	0:0	4	)
op	34:20	0:0	4	&
water	34:21	0:0	4	src
op	34:24	0:0	4	[
water	34:25	0:0	4	stride
op	34:31	0:0	4	*
water	34:32	0:0	4	3
op	34:33	0:0	4	]
op	34:34	0:0	4	=
water	34:36	0:0	4	(
water	34:37	0:0	4	a
op	34:38	0:0	4	|
water	34:39	0:0	4	b
water	34:40	0:0	4	)
op	34:42	0:0	4	-
water	34:44	0:0	4	(
water	34:45	0:0	4	(
water	34:46	0:0	4	(
water	34:47	0:0	4	a
op	34:48	0:0	4	^
water	34:49	0:0	4	b
water	34:50	0:0	4	)
op	34:51	0:0	4	&
water	34:52	0:0	4	0
water	34:53	0:0	4	xFEFEFEFEUL
water	34:64	0:0	4	)
op	34:65	0:0	4	>>
water	34:67	0:0	4	1
water	34:68	0:0	4	)
water	34:69	0:0	4	;
water	35:8	0:0	4	b
op	35:9	0:0	4	=
op	35:11	0:0	4	*
water	35:12	0:0	4	(
water	35:13	0:0	4	uint32_t
op	35:21	0:0	4	*
water	35:22	0:0	4	)
op	35:23	0:0	4	&
water	35:24	0:0	4	src
op	35:27	0:0	4	[
water	35:28	0:0	4	stride
op	35:34	0:0	4	*
water	35:35	0:0	4	6
op	35:36	0:0	4	]
water	35:37	0:0	4	;
op	36:8	0:0	4	*
water	36:9	0:0	4	(
water	36:10	0:0	4	uint32_t
op	36:18	0:0	4	*
water	36:19	0:0	4	)
op	36:20	0:0	4	&
water	36:21	0:0	4	src
op	36:24	0:0	4	[
water	36:25	0:0	4	stride
op	36:31	0:0	4	*
water	36:32	0:0	4	5
op	36:33	0:0	4	]
op	36:34	0:0	4	=
water	36:36	0:0	4	(
water	36:37	0:0	4	a
op	36:38	0:0	4	|
water	36:39	0:0	4	b
water	36:40	0:0	4	)
op	36:42	0:0	4	-
water	36:44	0:0	4	(
water	36:45	0:0	4	(
water	36:46	0:0	4	(
water	36:47	0:0	4	a
op	36:48	0:0	4	^
water	36:49	0:0	4	b
water	36:50	0:0	4	)
op	36:51	0:0	4	&
water	36:52	0:0	4	0
water	36:53	0:0	4	xFEFEFEFEUL
water	36:64	0:0	4	)
op	36:65	0:0	4	>>
water	36:67	0:0	4	1
water	36:68	0:0	4	)
water	36:69	0:0	4	;
water	37:8	0:0	4	a
op	37:9	0:0	4	=
op	37:11	0:0	4	*
water	37:12	0:0	4	(
water	37:13	0:0	4	uint32_t
op	37:21	0:0	4	*
water	37:22	0:0	4	)
op	37:23	0:0	4	&
water	37:24	0:0	4	src
op	37:27	0:0	4	[
water	37:28	0:0	4	stride
op	37:34	0:0	4	*
water	37:35	0:0	4	8
op	37:36	0:0	4	]
water	37:37	0:0	4	;
op	38:8	0:0	4	*
water	38:9	0:0	4	(
water	38:10	0:0	4	uint32_t
op	38:18	0:0	4	*
water	38:19	0:0	4	)
op	38:20	0:0	4	&
water	38:21	0:0	4	src
op	38:24	0:0	4	[
water	38:25	0:0	4	stride
op	38:31	0:0	4	*
water	38:32	0:0	4	7
op	38:33	0:0	4	]
op	38:34	0:0	4	=
water	38:36	0:0	4	(
water	38:37	0:0	4	a
op	38:38	0:0	4	|
water	38:39	0:0	4	b
water	38:40	0:0	4	)
op	38:42	0:0	4	-
water	38:44	0:0	4	(
water	38:45	0:0	4	(
water	38:46	0:0	4	(
water	38:47	0:0	4	a
op	38:48	0:0	4	^
water	38:49	0:0	4	b
water	38:50	0:0	4	)
op	38:51	0:0	4	&
water	38:52	0:0	4	0
water	38:53	0:0	4	xFEFEFEFEUL
water	38:64	0:0	4	)
op	38:65	0:0	4	>>
water	38:67	0:0	4	1
water	38:68	0:0	4	)
water	38:69	0:0	4	;
water	39:8	0:0	4	src
op	39:12	0:0	4	+=
water	39:15	0:0	4	4
water	39:16	0:0	4	;
water	40:4	0:0	4	}

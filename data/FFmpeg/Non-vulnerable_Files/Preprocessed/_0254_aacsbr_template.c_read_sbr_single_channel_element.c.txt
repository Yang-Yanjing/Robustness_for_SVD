func	1:0	16:0	0	static int	read_sbr_single_channel_element
params	1:42	0:0	1	
param	1:43	1:57	2	AACContext *	ac
param	2:44	2:72	2	SpectralBandReplication *	sbr
param	3:44	3:61	2	GetBitContext *	gb
stmnts	5:4	15:12	1	
if	5:4	6:24	2	(get_bits1 (gb ))
cond	5:8	5:20	3	get_bits1 (gb )
call	5:8	5:20	4	get_bits1
arg	5:18	5:20	5	gb
water	5:18	0:0	6	gb
stmts	6:8	6:24	3	
call	6:8	6:23	4	skip_bits
arg	6:18	6:20	5	gb
water	6:18	0:0	6	gb
arg	6:22	6:23	5	4
water	6:22	0:0	6	4
water	6:24	0:0	4	;
if	7:4	8:17	2	(read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 0 ] ))
cond	7:8	7:48	3	read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 0 ] )
call	7:8	7:48	4	read_sbr_grid
arg	7:22	7:24	5	ac
water	7:22	0:0	6	ac
arg	7:26	7:29	5	sbr
water	7:26	0:0	6	sbr
arg	7:31	7:33	5	gb
water	7:31	0:0	6	gb
arg	7:35	7:48	5	&sbr->data[0]
op	7:35	0:0	6	&
water	7:36	0:0	6	sbr
op	7:39	0:0	6	->
water	7:41	0:0	6	data
op	7:45	0:0	6	[
water	7:46	0:0	6	0
op	7:47	0:0	6	]
stmts	8:8	8:17	3	
return	8:8	8:17	4	-1
op	8:15	0:0	5	-
water	8:16	0:0	5	1
call	9:4	9:40	2	read_sbr_dtdf
arg	9:18	9:21	3	sbr
water	9:18	0:0	4	sbr
arg	9:23	9:25	3	gb
water	9:23	0:0	4	gb
arg	9:27	9:40	3	&sbr->data[0]
op	9:27	0:0	4	&
water	9:28	0:0	4	sbr
op	9:31	0:0	4	->
water	9:33	0:0	4	data
op	9:37	0:0	4	[
water	9:38	0:0	4	0
op	9:39	0:0	4	]
water	9:41	0:0	2	;
call	10:4	10:40	2	read_sbr_invf
arg	10:18	10:21	3	sbr
water	10:18	0:0	4	sbr
arg	10:23	10:25	3	gb
water	10:23	0:0	4	gb
arg	10:27	10:40	3	&sbr->data[0]
op	10:27	0:0	4	&
water	10:28	0:0	4	sbr
op	10:31	0:0	4	->
water	10:33	0:0	4	data
op	10:37	0:0	4	[
water	10:38	0:0	4	0
op	10:39	0:0	4	]
water	10:41	0:0	2	;
call	11:4	11:47	2	read_sbr_envelope
arg	11:22	11:25	3	sbr
water	11:22	0:0	4	sbr
arg	11:27	11:29	3	gb
water	11:27	0:0	4	gb
arg	11:31	11:44	3	&sbr->data[0]
op	11:31	0:0	4	&
water	11:32	0:0	4	sbr
op	11:35	0:0	4	->
water	11:37	0:0	4	data
op	11:41	0:0	4	[
water	11:42	0:0	4	0
op	11:43	0:0	4	]
arg	11:46	11:47	3	0
water	11:46	0:0	4	0
water	11:48	0:0	2	;
call	12:4	12:44	2	read_sbr_noise
arg	12:19	12:22	3	sbr
water	12:19	0:0	4	sbr
arg	12:24	12:26	3	gb
water	12:24	0:0	4	gb
arg	12:28	12:41	3	&sbr->data[0]
op	12:28	0:0	4	&
water	12:29	0:0	4	sbr
op	12:32	0:0	4	->
water	12:34	0:0	4	data
op	12:38	0:0	4	[
water	12:39	0:0	4	0
op	12:40	0:0	4	]
arg	12:43	12:44	3	0
water	12:43	0:0	4	0
water	12:45	0:0	2	;
if	13:4	14:69	2	(( sbr -> data [ 0 ] . bs_add_harmonic_flag =get_bits1 (gb ) ))
cond	13:8	13:58	3	( sbr -> data [ 0 ] . bs_add_harmonic_flag =get_bits1 (gb ) )
water	13:8	0:0	4	(
water	13:9	0:0	4	sbr
op	13:12	0:0	4	->
water	13:14	0:0	4	data
op	13:18	0:0	4	[
water	13:19	0:0	4	0
op	13:20	0:0	4	]
op	13:21	0:0	4	.
water	13:22	0:0	4	bs_add_harmonic_flag
op	13:43	0:0	4	=
call	13:45	13:57	4	get_bits1
arg	13:55	13:57	5	gb
water	13:55	0:0	6	gb
water	13:58	0:0	4	)
stmts	14:8	14:69	3	
call	14:8	14:68	4	get_bits1_vector
arg	14:25	14:27	5	gb
water	14:25	0:0	6	gb
arg	14:29	14:57	5	sbr->data[0].bs_add_harmonic
water	14:29	0:0	6	sbr
op	14:32	0:0	6	->
water	14:34	0:0	6	data
op	14:38	0:0	6	[
water	14:39	0:0	6	0
op	14:40	0:0	6	]
op	14:41	0:0	6	.
water	14:42	0:0	6	bs_add_harmonic
arg	14:59	14:68	5	sbr->n[1]
water	14:59	0:0	6	sbr
op	14:62	0:0	6	->
water	14:64	0:0	6	n
op	14:65	0:0	6	[
water	14:66	0:0	6	1
op	14:67	0:0	6	]
water	14:69	0:0	4	;
return	15:4	15:12	2	0
water	15:11	0:0	3	0

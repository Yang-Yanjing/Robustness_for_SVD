func	2:0	41:0	0	static void	haldclutsrc_fill_picture
params	2:36	0:0	1	
param	2:37	2:57	2	AVFilterContext *	ctx
param	2:59	2:73	2	AVFrame *	frame
stmnts	0:0	40:32	1	
decl	4:4	4:48	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:48	2	int	j
water	4:12	0:0	2	,
decl	4:4	4:48	2	int	k
water	4:15	0:0	2	,
decl	4:4	4:48	2	int	x
op	4:19	0:0	2	=
water	4:21	0:0	2	0
water	4:22	0:0	2	,
decl	4:4	4:48	2	int	y
op	4:26	0:0	2	=
water	4:28	0:0	2	0
water	4:29	0:0	2	,
decl	4:4	4:48	2	int	is16bit
op	4:39	0:0	2	=
water	4:41	0:0	2	0
water	4:42	0:0	2	,
decl	4:4	4:48	2	int	step
decl	5:4	5:22	2	uint32_t	alpha
op	5:19	0:0	2	=
water	5:21	0:0	2	0
decl	6:4	6:43	2	const TestSourceContext	*hc
op	6:32	0:0	2	=
water	6:34	0:0	2	ctx
op	6:37	0:0	2	->
water	6:39	0:0	2	priv
decl	7:4	7:25	2	int	level
op	7:14	0:0	2	=
water	7:16	0:0	2	hc
op	7:18	0:0	2	->
water	7:20	0:0	2	level
decl	8:4	8:15	2	float	scale
decl	9:4	9:30	2	const int	w
op	9:16	0:0	2	=
water	9:18	0:0	2	frame
op	9:23	0:0	2	->
water	9:25	0:0	2	width
decl	10:4	10:31	2	const int	h
op	10:16	0:0	2	=
water	10:18	0:0	2	frame
op	10:23	0:0	2	->
water	10:25	0:0	2	height
decl	11:4	11:40	2	const uint8_t	*data
op	11:24	0:0	2	=
water	11:26	0:0	2	frame
op	11:31	0:0	2	->
water	11:33	0:0	2	data
op	11:37	0:0	2	[
water	11:38	0:0	2	0
op	11:39	0:0	2	]
decl	12:4	12:44	2	const int	linesize
op	12:24	0:0	2	=
water	12:26	0:0	2	frame
op	12:31	0:0	2	->
water	12:33	0:0	2	linesize
op	12:41	0:0	2	[
water	12:42	0:0	2	0
op	12:43	0:0	2	]
decl	13:4	13:71	2	const AVPixFmtDescriptor	*desc
op	13:35	0:0	2	=
call	13:37	13:70	3	av_pix_fmt_desc_get
arg	13:57	13:70	4	frame->format
water	13:57	0:0	5	frame
op	13:62	0:0	5	->
water	13:64	0:0	5	format
decl	14:4	14:23	2	uint8_t	rgba_map[4]
call	15:4	15:47	2	av_assert0
arg	15:15	15:47	3	w==h&&w==level*level*level
water	15:15	0:0	4	w
op	15:17	0:0	4	==
water	15:20	0:0	4	h
op	15:22	0:0	4	&&
water	15:25	0:0	4	w
op	15:27	0:0	4	==
water	15:30	0:0	4	level
op	15:35	0:0	4	*
water	15:36	0:0	4	level
op	15:41	0:0	4	*
water	15:42	0:0	4	level
water	15:48	0:0	2	;
call	16:4	16:44	2	ff_fill_rgba_map
arg	16:21	16:29	3	rgba_map
water	16:21	0:0	4	rgba_map
arg	16:31	16:44	3	frame->format
water	16:31	0:0	4	frame
op	16:36	0:0	4	->
water	16:38	0:0	4	format
water	16:45	0:0	2	;
switch	17:4	31:4	2	(frame -> format)
cond	17:12	17:19	3	frame -> format
water	17:12	0:0	4	frame
op	17:17	0:0	4	->
water	17:19	0:0	4	format
stmts	17:27	31:4	3	
water	17:27	0:0	4	{
label	18:4	18:25	4	case AV_PIX_FMT_RGB48 :
label	19:4	19:25	4	case AV_PIX_FMT_BGR48 :
label	20:4	20:26	4	case AV_PIX_FMT_RGBA64 :
label	21:4	21:26	4	case AV_PIX_FMT_BGRA64 :
water	22:8	0:0	4	is16bit
op	22:16	0:0	4	=
water	22:18	0:0	4	1
water	22:19	0:0	4	;
water	23:8	0:0	4	alpha
op	23:14	0:0	4	=
water	23:16	0:0	4	0
water	23:17	0:0	4	xffff
water	23:22	0:0	4	;
break	24:8	24:13	4	
label	25:4	25:24	4	case AV_PIX_FMT_RGBA :
label	26:4	26:24	4	case AV_PIX_FMT_BGRA :
label	27:4	27:24	4	case AV_PIX_FMT_ARGB :
label	28:4	28:24	4	case AV_PIX_FMT_ABGR :
water	29:8	0:0	4	alpha
op	29:14	0:0	4	=
water	29:16	0:0	4	0
water	29:17	0:0	4	xff
water	29:20	0:0	4	;
break	30:8	30:13	4	
water	31:4	0:0	4	}
water	32:4	0:0	2	step
op	32:10	0:0	2	=
call	32:12	32:45	2	av_get_padded_bits_per_pixel
arg	32:41	32:45	3	desc
water	32:41	0:0	4	desc
op	32:47	0:0	2	>>
water	32:50	0:0	2	(
water	32:51	0:0	2	3
op	32:53	0:0	2	+
water	32:55	0:0	2	is16bit
water	32:62	0:0	2	)
water	32:63	0:0	2	;
water	33:4	0:0	2	scale
op	33:10	0:0	2	=
water	33:12	0:0	2	(
call	33:13	33:41	2	(float)
arg	33:21	33:41	3	1<<(8*(is16bit+1))
water	33:21	0:0	4	1
op	33:23	0:0	4	<<
water	33:26	0:0	4	(
water	33:27	0:0	4	8
op	33:28	0:0	4	*
water	33:29	0:0	4	(
water	33:30	0:0	4	is16bit
op	33:37	0:0	4	+
water	33:38	0:0	4	1
water	33:39	0:0	4	)
water	33:40	0:0	4	)
op	33:43	0:0	2	-
water	33:45	0:0	2	1
water	33:46	0:0	2	)
op	33:48	0:0	2	/
water	33:50	0:0	2	(
water	33:51	0:0	2	level
op	33:56	0:0	2	*
water	33:57	0:0	2	level
op	33:63	0:0	2	-
water	33:65	0:0	2	1
water	33:66	0:0	2	)
water	33:67	0:0	2	;
decl	35:4	40:32	2	uint	dst[rgba_map[0]]
op	36:21	0:0	2	=
water	36:23	0:0	2	av_clip_uint
water	37:4	0:0	2	dst
op	37:7	0:0	2	[
water	37:8	0:0	2	rgba_map
op	37:16	0:0	2	[
water	37:17	0:0	2	1
op	37:18	0:0	2	]
op	37:19	0:0	2	]
op	37:21	0:0	2	=
water	37:23	0:0	2	av_clip_uint
water	38:4	0:0	2	dst
op	38:7	0:0	2	[
water	38:8	0:0	2	rgba_map
op	38:16	0:0	2	[
water	38:17	0:0	2	2
op	38:18	0:0	2	]
op	38:19	0:0	2	]
op	38:21	0:0	2	=
water	38:23	0:0	2	av_clip_uint
water	39:4	0:0	2	if
water	39:7	0:0	2	(
water	39:8	0:0	2	step
op	39:13	0:0	2	==
water	39:16	0:0	2	4
water	39:17	0:0	2	)
water	40:8	0:0	2	dst
op	40:11	0:0	2	[
water	40:12	0:0	2	rgba_map
op	40:20	0:0	2	[
water	40:21	0:0	2	3
op	40:22	0:0	2	]
op	40:23	0:0	2	]
op	40:25	0:0	2	=
water	40:27	0:0	2	alpha

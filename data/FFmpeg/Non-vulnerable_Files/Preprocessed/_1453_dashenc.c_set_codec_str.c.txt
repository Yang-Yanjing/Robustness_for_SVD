func	2:0	61:0	0	static void	set_codec_str
params	2:25	0:0	1	
param	2:26	2:44	2	AVFormatContext *	s
param	2:46	2:67	2	AVCodecContext *	codec
param	3:26	3:35	2	char *	str
param	3:37	3:45	2	int	size
stmnts	0:0	60:4	1	
decl	5:4	5:46	2	const AVCodecTag	*tags[2]
op	5:30	0:0	2	=
water	5:32	0:0	2	{
water	5:34	0:0	2	NULL
water	5:38	0:0	2	,
water	5:40	0:0	2	NULL
water	5:45	0:0	2	}
decl	6:4	6:16	2	uint32_t	tag
if	7:4	8:40	2	(codec -> codec_type == AVMEDIA_TYPE_VIDEO)
cond	7:8	7:29	3	codec -> codec_type == AVMEDIA_TYPE_VIDEO
water	7:8	0:0	4	codec
op	7:13	0:0	4	->
water	7:15	0:0	4	codec_type
op	7:26	0:0	4	==
water	7:29	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	8:8	8:40	3	
water	8:8	0:0	4	tags
op	8:12	0:0	4	[
water	8:13	0:0	4	0
op	8:14	0:0	4	]
op	8:16	0:0	4	=
water	8:18	0:0	4	ff_codec_movvideo_tags
water	8:40	0:0	4	;
else	9:4	10:40	2
stmts	9:9	10:40	3	
if	9:9	10:40	4	(codec -> codec_type == AVMEDIA_TYPE_AUDIO)
cond	9:13	9:34	5	codec -> codec_type == AVMEDIA_TYPE_AUDIO
water	9:13	0:0	6	codec
op	9:18	0:0	6	->
water	9:20	0:0	6	codec_type
op	9:31	0:0	6	==
water	9:34	0:0	6	AVMEDIA_TYPE_AUDIO
stmts	10:8	10:40	5	
water	10:8	0:0	6	tags
op	10:12	0:0	6	[
water	10:13	0:0	6	0
op	10:14	0:0	6	]
op	10:16	0:0	6	=
water	10:18	0:0	6	ff_codec_movaudio_tags
water	10:40	0:0	6	;
else	11:4	12:14	2
stmts	12:8	12:14	3	
return	12:8	12:14	4	
water	13:4	0:0	2	tag
op	13:8	0:0	2	=
call	13:10	13:48	2	av_codec_get_tag
arg	13:27	13:31	3	tags
water	13:27	0:0	4	tags
arg	13:33	13:48	3	codec->codec_id
water	13:33	0:0	4	codec
op	13:38	0:0	4	->
water	13:40	0:0	4	codec_id
water	13:49	0:0	2	;
if	14:4	15:14	2	(! tag)
cond	14:8	14:9	3	! tag
op	14:8	0:0	4	!
water	14:9	0:0	4	tag
stmts	15:8	15:14	3	
return	15:8	15:14	4	
if	16:4	17:14	2	(size < 5)
cond	16:8	16:15	3	size < 5
water	16:8	0:0	4	size
op	16:13	0:0	4	<
water	16:15	0:0	4	5
stmts	17:8	17:14	3	
return	17:8	17:14	4	
call	18:4	18:20	2	AV_WL32
arg	18:12	18:15	3	str
water	18:12	0:0	4	str
arg	18:17	18:20	3	tag
water	18:17	0:0	4	tag
water	18:21	0:0	2	;
water	19:4	0:0	2	str
op	19:7	0:0	2	[
water	19:8	0:0	2	4
op	19:9	0:0	2	]
op	19:11	0:0	2	=
water	19:13	0:0	2	'\0'
water	19:17	0:0	2	;
if	20:4	39:4	2	(!strcmp (str ,"mp4a" ) || !strcmp (str ,"mp4v" ))
cond	20:8	20:51	3	!strcmp (str ,"mp4a" ) || !strcmp (str ,"mp4v" )
op	20:8	0:0	4	!
call	20:9	20:27	4	strcmp
arg	20:16	20:19	5	str
water	20:16	0:0	6	str
arg	20:21	20:27	5	"mp4a"
water	20:21	0:0	6	"mp4a"
op	20:29	0:0	4	||
op	20:32	0:0	4	!
call	20:33	20:51	4	strcmp
arg	20:40	20:43	5	str
water	20:40	0:0	6	str
arg	20:45	20:51	5	"mp4v"
water	20:45	0:0	6	"mp4v"
stmts	20:54	39:4	3	
water	20:54	0:0	4	{
decl	21:8	21:20	4	uint32_t	oti
water	22:8	0:0	4	tags
op	22:12	0:0	4	[
water	22:13	0:0	4	0
op	22:14	0:0	4	]
op	22:16	0:0	4	=
water	22:18	0:0	4	ff_mp4_obj_type
water	22:33	0:0	4	;
water	23:8	0:0	4	oti
op	23:12	0:0	4	=
call	23:14	23:52	4	av_codec_get_tag
arg	23:31	23:35	5	tags
water	23:31	0:0	6	tags
arg	23:37	23:52	5	codec->codec_id
water	23:37	0:0	6	codec
op	23:42	0:0	6	->
water	23:44	0:0	6	codec_id
water	23:53	0:0	4	;
if	24:8	25:48	4	(oti)
cond	24:12	24:12	5	oti
water	24:12	0:0	6	oti
stmts	25:12	25:48	5	
call	25:12	25:47	6	av_strlcatf
arg	25:24	25:27	7	str
water	25:24	0:0	8	str
arg	25:29	25:33	7	size
water	25:29	0:0	8	size
arg	25:35	25:42	7	".%02x"
water	25:35	0:0	8	".%02x"
arg	25:44	25:47	7	oti
water	25:44	0:0	8	oti
water	25:48	0:0	6	;
else	26:8	27:18	4
stmts	27:12	27:18	5	
return	27:12	27:18	6	
if	28:8	35:8	4	(tag ==MKTAG ('m' ,'p' ,'4' ,'a' ))
cond	28:12	28:43	5	tag ==MKTAG ('m' ,'p' ,'4' ,'a' )
water	28:12	0:0	6	tag
op	28:16	0:0	6	==
call	28:19	28:43	6	MKTAG
arg	28:25	28:28	7	'm'
water	28:25	0:0	8	'm'
arg	28:30	28:33	7	'p'
water	28:30	0:0	8	'p'
arg	28:35	28:38	7	'4'
water	28:35	0:0	8	'4'
arg	28:40	28:43	7	'a'
water	28:40	0:0	8	'a'
stmts	28:46	35:8	5	
water	28:46	0:0	6	{
if	29:12	34:12	6	(codec -> extradata_size >= 2)
cond	29:16	29:41	7	codec -> extradata_size >= 2
water	29:16	0:0	8	codec
op	29:21	0:0	8	->
water	29:23	0:0	8	extradata_size
op	29:38	0:0	8	>=
water	29:41	0:0	8	2
stmts	29:44	34:12	7	
water	29:44	0:0	8	{
decl	30:16	30:50	8	int	aot
op	30:24	0:0	8	=
water	30:26	0:0	8	codec
op	30:31	0:0	8	->
water	30:33	0:0	8	extradata
op	30:42	0:0	8	[
water	30:43	0:0	8	0
op	30:44	0:0	8	]
op	30:46	0:0	8	>>
water	30:49	0:0	8	3
if	31:16	32:72	8	(aot == 31)
cond	31:20	31:27	9	aot == 31
water	31:20	0:0	10	aot
op	31:24	0:0	10	==
water	31:27	0:0	10	31
stmts	32:20	32:72	9	
water	32:20	0:0	10	aot
op	32:24	0:0	10	=
water	32:26	0:0	10	(
water	32:27	0:0	10	(
call	32:28	32:52	10	AV_RB16
arg	32:36	32:52	11	codec->extradata
water	32:36	0:0	12	codec
op	32:41	0:0	12	->
water	32:43	0:0	12	extradata
op	32:54	0:0	10	>>
water	32:57	0:0	10	5
water	32:58	0:0	10	)
op	32:60	0:0	10	&
water	32:62	0:0	10	0
water	32:63	0:0	10	x3f
water	32:66	0:0	10	)
op	32:68	0:0	10	+
water	32:70	0:0	10	32
water	32:72	0:0	10	;
call	33:16	33:49	8	av_strlcatf
arg	33:28	33:31	9	str
water	33:28	0:0	10	str
arg	33:33	33:37	9	size
water	33:33	0:0	10	size
arg	33:39	33:44	9	".%d"
water	33:39	0:0	10	".%d"
arg	33:46	33:49	9	aot
water	33:46	0:0	10	aot
water	33:50	0:0	8	;
water	34:12	0:0	8	}
water	35:8	0:0	6	}
else	35:10	38:8	4
stmts	35:15	38:8	5	
if	35:15	38:8	6	(tag ==MKTAG ('m' ,'p' ,'4' ,'v' ))
cond	35:19	35:50	7	tag ==MKTAG ('m' ,'p' ,'4' ,'v' )
water	35:19	0:0	8	tag
op	35:23	0:0	8	==
call	35:26	35:50	8	MKTAG
arg	35:32	35:35	9	'm'
water	35:32	0:0	10	'm'
arg	35:37	35:40	9	'p'
water	35:37	0:0	10	'p'
arg	35:42	35:45	9	'4'
water	35:42	0:0	10	'4'
arg	35:47	35:50	9	'v'
water	35:47	0:0	10	'v'
stmts	35:53	38:8	7	
water	35:53	0:0	8	{
call	37:12	37:83	8	av_log
arg	37:19	37:20	9	s
water	37:19	0:0	10	s
arg	37:22	37:36	9	AV_LOG_WARNING
water	37:22	0:0	10	AV_LOG_WARNING
arg	37:38	37:83	9	"Incomplete RFC 6381 codec string for mp4v\n"
water	37:38	0:0	10	"Incomplete RFC 6381 codec string for mp4v\n"
water	37:84	0:0	8	;
water	38:8	0:0	8	}
water	39:4	0:0	4	}
else	39:6	60:4	2
stmts	39:11	60:4	3	
if	39:11	60:4	4	(!strcmp (str ,"avc1" ))
cond	39:15	39:34	5	!strcmp (str ,"avc1" )
op	39:15	0:0	6	!
call	39:16	39:34	6	strcmp
arg	39:23	39:26	7	str
water	39:23	0:0	8	str
arg	39:28	39:34	7	"avc1"
water	39:28	0:0	8	"avc1"
stmts	39:37	60:4	5	
water	39:37	0:0	6	{
decl	40:8	40:30	6	uint8_t	*tmpbuf
op	40:24	0:0	6	=
water	40:26	0:0	6	NULL
decl	41:8	41:45	6	uint8_t	*extradata
op	41:27	0:0	6	=
water	41:29	0:0	6	codec
op	41:34	0:0	6	->
water	41:36	0:0	6	extradata
decl	42:8	42:50	6	int	extradata_size
op	42:27	0:0	6	=
water	42:29	0:0	6	codec
op	42:34	0:0	6	->
water	42:36	0:0	6	extradata_size
if	43:8	44:18	6	(! extradata_size)
cond	43:12	43:13	7	! extradata_size
op	43:12	0:0	8	!
water	43:13	0:0	8	extradata_size
stmts	44:12	44:18	7	
return	44:12	44:18	8	
if	45:8	55:8	6	(extradata [ 0 ] != 1)
cond	45:12	45:28	7	extradata [ 0 ] != 1
water	45:12	0:0	8	extradata
op	45:21	0:0	8	[
water	45:22	0:0	8	0
op	45:23	0:0	8	]
op	45:25	0:0	8	!=
water	45:28	0:0	8	1
stmts	45:31	55:8	7	
water	45:31	0:0	8	{
decl	46:12	46:27	8	AVIOContext	*pb
if	47:12	48:22	8	(avio_open_dyn_buf (& pb ) < 0)
cond	47:16	47:41	9	avio_open_dyn_buf (& pb ) < 0
call	47:16	47:37	10	avio_open_dyn_buf
arg	47:34	47:37	11	&pb
op	47:34	0:0	12	&
water	47:35	0:0	12	pb
op	47:39	0:0	10	<
water	47:41	0:0	10	0
stmts	48:16	48:22	9	
return	48:16	48:22	10	
if	49:12	52:12	8	(ff_isom_write_avcc (pb ,extradata ,extradata_size ) < 0)
cond	49:16	49:68	9	ff_isom_write_avcc (pb ,extradata ,extradata_size ) < 0
call	49:16	49:64	10	ff_isom_write_avcc
arg	49:35	49:37	11	pb
water	49:35	0:0	12	pb
arg	49:39	49:48	11	extradata
water	49:39	0:0	12	extradata
arg	49:50	49:64	11	extradata_size
water	49:50	0:0	12	extradata_size
op	49:66	0:0	10	<
water	49:68	0:0	10	0
stmts	49:71	52:12	9	
water	49:71	0:0	10	{
call	50:16	50:37	10	ffio_free_dyn_buf
arg	50:34	50:37	11	&pb
op	50:34	0:0	12	&
water	50:35	0:0	12	pb
water	50:38	0:0	10	;
return	51:16	51:22	10	
water	52:12	0:0	10	}
water	53:12	0:0	8	extradata_size
op	53:27	0:0	8	=
call	53:29	53:62	8	avio_close_dyn_buf
arg	53:48	53:50	9	pb
water	53:48	0:0	10	pb
arg	53:52	53:62	9	&extradata
op	53:52	0:0	10	&
water	53:53	0:0	10	extradata
water	53:63	0:0	8	;
water	54:12	0:0	8	tmpbuf
op	54:19	0:0	8	=
water	54:21	0:0	8	extradata
water	54:30	0:0	8	;
water	55:8	0:0	8	}
if	56:8	58:65	6	(extradata_size >= 4)
cond	56:12	56:30	7	extradata_size >= 4
water	56:12	0:0	8	extradata_size
op	56:27	0:0	8	>=
water	56:30	0:0	8	4
stmts	57:12	58:65	7	
call	57:12	58:64	8	av_strlcatf
arg	57:24	57:27	9	str
water	57:24	0:0	10	str
arg	57:29	57:33	9	size
water	57:29	0:0	10	size
arg	57:35	57:50	9	".%02x%02x%02x"
water	57:35	0:0	10	".%02x%02x%02x"
arg	58:24	58:36	9	extradata[1]
water	58:24	0:0	10	extradata
op	58:33	0:0	10	[
water	58:34	0:0	10	1
op	58:35	0:0	10	]
arg	58:38	58:50	9	extradata[2]
water	58:38	0:0	10	extradata
op	58:47	0:0	10	[
water	58:48	0:0	10	2
op	58:49	0:0	10	]
arg	58:52	58:64	9	extradata[3]
water	58:52	0:0	10	extradata
op	58:61	0:0	10	[
water	58:62	0:0	10	3
op	58:63	0:0	10	]
water	58:65	0:0	8	;
call	59:8	59:22	6	av_free
arg	59:16	59:22	7	tmpbuf
water	59:16	0:0	8	tmpbuf
water	59:23	0:0	6	;
water	60:4	0:0	6	}

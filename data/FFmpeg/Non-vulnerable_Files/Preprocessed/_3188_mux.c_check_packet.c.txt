func	1:0	15:0	0	static int	check_packet
params	1:23	0:0	1	
param	1:24	1:42	2	AVFormatContext *	s
param	1:44	1:57	2	AVPacket *	pkt
stmnts	3:4	14:12	1	
if	3:4	4:16	2	(! pkt)
cond	3:8	3:9	3	! pkt
op	3:8	0:0	4	!
water	3:9	0:0	4	pkt
stmts	4:8	4:16	3	
return	4:8	4:16	4	0
water	4:15	0:0	5	0
if	5:4	9:4	2	(pkt -> stream_index < 0 || pkt -> stream_index >= s -> nb_streams)
cond	5:8	5:57	3	pkt -> stream_index < 0 || pkt -> stream_index >= s -> nb_streams
water	5:8	0:0	4	pkt
op	5:11	0:0	4	->
water	5:13	0:0	4	stream_index
op	5:26	0:0	4	<
water	5:28	0:0	4	0
op	5:30	0:0	4	||
water	5:33	0:0	4	pkt
op	5:36	0:0	4	->
water	5:38	0:0	4	stream_index
op	5:51	0:0	4	>=
water	5:54	0:0	4	s
op	5:55	0:0	4	->
water	5:57	0:0	4	nb_streams
stmts	5:69	9:4	3	
water	5:69	0:0	4	{
call	6:8	7:32	4	av_log
arg	6:15	6:16	5	s
water	6:15	0:0	6	s
arg	6:18	6:30	5	AV_LOG_ERROR
water	6:18	0:0	6	AV_LOG_ERROR
arg	6:32	6:67	5	"Invalid packet stream index: %d\n"
water	6:32	0:0	6	"Invalid packet stream index: %d\n"
arg	7:15	7:32	5	pkt->stream_index
water	7:15	0:0	6	pkt
op	7:18	0:0	6	->
water	7:20	0:0	6	stream_index
water	7:33	0:0	4	;
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	4	}
if	10:4	13:4	2	(s -> streams [ pkt -> stream_index ] -> codec -> codec_type == AVMEDIA_TYPE_ATTACHMENT)
cond	10:8	10:60	3	s -> streams [ pkt -> stream_index ] -> codec -> codec_type == AVMEDIA_TYPE_ATTACHMENT
water	10:8	0:0	4	s
op	10:9	0:0	4	->
water	10:11	0:0	4	streams
op	10:18	0:0	4	[
water	10:19	0:0	4	pkt
op	10:22	0:0	4	->
water	10:24	0:0	4	stream_index
op	10:36	0:0	4	]
op	10:37	0:0	4	->
water	10:39	0:0	4	codec
op	10:44	0:0	4	->
water	10:46	0:0	4	codec_type
op	10:57	0:0	4	==
water	10:60	0:0	4	AVMEDIA_TYPE_ATTACHMENT
stmts	10:85	13:4	3	
water	10:85	0:0	4	{
call	11:8	11:79	4	av_log
arg	11:15	11:16	5	s
water	11:15	0:0	6	s
arg	11:18	11:30	5	AV_LOG_ERROR
water	11:18	0:0	6	AV_LOG_ERROR
arg	11:32	11:79	5	"Received a packet for an attachment stream.\n"
water	11:32	0:0	6	"Received a packet for an attachment stream.\n"
water	11:80	0:0	4	;
return	12:8	12:30	4	AVERROR(EINVAL)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	EINVAL
water	12:23	0:0	7	EINVAL
water	13:4	0:0	4	}
return	14:4	14:12	2	0
water	14:11	0:0	3	0

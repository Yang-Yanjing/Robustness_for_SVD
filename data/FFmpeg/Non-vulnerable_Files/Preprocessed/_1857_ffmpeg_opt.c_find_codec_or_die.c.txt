func	1:0	25:0	0	static AVCodec *	find_codec_or_die
params	1:33	0:0	1	
param	1:34	1:50	2	const char *	name
param	1:52	1:73	2	enum AVMediaType	type
param	1:75	1:86	2	int	encoder
stmnts	0:0	24:16	1	
decl	3:4	3:33	2	const AVCodecDescriptor	*desc
decl	4:4	4:62	2	const char	*codec_string
op	4:29	0:0	2	=
water	4:31	0:0	2	encoder
water	4:39	0:0	2	?
water	4:41	0:0	2	"encoder"
water	4:51	0:0	2	:
water	4:53	0:0	2	"decoder"
decl	5:4	5:18	2	AVCodec	*codec
water	6:4	0:0	2	codec
op	6:10	0:0	2	=
water	6:12	0:0	2	encoder
water	6:20	0:0	2	?
call	7:8	7:41	2	avcodec_find_encoder_by_name
arg	7:37	7:41	3	name
water	7:37	0:0	4	name
water	7:43	0:0	2	:
call	8:8	8:41	2	avcodec_find_decoder_by_name
arg	8:37	8:41	3	name
water	8:37	0:0	4	name
water	8:42	0:0	2	;
if	9:4	15:4	2	(! codec && ( desc =avcodec_descriptor_get_by_name (name ) ))
cond	9:8	9:62	3	! codec && ( desc =avcodec_descriptor_get_by_name (name ) )
op	9:8	0:0	4	!
water	9:9	0:0	4	codec
op	9:15	0:0	4	&&
water	9:18	0:0	4	(
water	9:19	0:0	4	desc
op	9:24	0:0	4	=
call	9:26	9:61	4	avcodec_descriptor_get_by_name
arg	9:57	9:61	5	name
water	9:57	0:0	6	name
water	9:62	0:0	4	)
stmts	9:65	15:4	3	
water	9:65	0:0	4	{
water	10:8	0:0	4	codec
op	10:14	0:0	4	=
water	10:16	0:0	4	encoder
water	10:24	0:0	4	?
call	10:26	10:55	4	avcodec_find_encoder
arg	10:47	10:55	5	desc->id
water	10:47	0:0	6	desc
op	10:51	0:0	6	->
water	10:53	0:0	6	id
water	10:57	0:0	4	:
call	11:26	11:55	4	avcodec_find_decoder
arg	11:47	11:55	5	desc->id
water	11:47	0:0	6	desc
op	11:51	0:0	6	->
water	11:53	0:0	6	id
water	11:56	0:0	4	;
if	12:8	14:57	4	(codec)
cond	12:12	12:12	5	codec
water	12:12	0:0	6	codec
stmts	13:12	14:57	5	
call	13:12	14:56	6	av_log
arg	13:19	13:23	7	NULL
water	13:19	0:0	8	NULL
arg	13:25	13:39	7	AV_LOG_VERBOSE
water	13:25	0:0	8	AV_LOG_VERBOSE
arg	13:41	13:76	7	"Matched %s '%s' for codec '%s'.\n"
water	13:41	0:0	8	"Matched %s '%s' for codec '%s'.\n"
arg	14:19	14:31	7	codec_string
water	14:19	0:0	8	codec_string
arg	14:33	14:44	7	codec->name
water	14:33	0:0	8	codec
op	14:38	0:0	8	->
water	14:40	0:0	8	name
arg	14:46	14:56	7	desc->name
water	14:46	0:0	8	desc
op	14:50	0:0	8	->
water	14:52	0:0	8	name
water	14:57	0:0	6	;
water	15:4	0:0	4	}
if	16:4	19:4	2	(! codec)
cond	16:8	16:9	3	! codec
op	16:8	0:0	4	!
water	16:9	0:0	4	codec
stmts	16:16	19:4	3	
water	16:16	0:0	4	{
call	17:8	17:74	4	av_log
arg	17:15	17:19	5	NULL
water	17:15	0:0	6	NULL
arg	17:21	17:33	5	AV_LOG_FATAL
water	17:21	0:0	6	AV_LOG_FATAL
arg	17:35	17:54	5	"Unknown %s '%s'\n"
water	17:35	0:0	6	"Unknown %s '%s'\n"
arg	17:56	17:68	5	codec_string
water	17:56	0:0	6	codec_string
arg	17:70	17:74	5	name
water	17:70	0:0	6	name
water	17:75	0:0	4	;
call	18:8	18:22	4	exit_program
arg	18:21	18:22	5	1
water	18:21	0:0	6	1
water	18:23	0:0	4	;
water	19:4	0:0	4	}
if	20:4	23:4	2	(codec -> type != type)
cond	20:8	20:23	3	codec -> type != type
water	20:8	0:0	4	codec
op	20:13	0:0	4	->
water	20:15	0:0	4	type
op	20:20	0:0	4	!=
water	20:23	0:0	4	type
stmts	20:29	23:4	3	
water	20:29	0:0	4	{
call	21:8	21:79	4	av_log
arg	21:15	21:19	5	NULL
water	21:15	0:0	6	NULL
arg	21:21	21:33	5	AV_LOG_FATAL
water	21:21	0:0	6	AV_LOG_FATAL
arg	21:35	21:59	5	"Invalid %s type '%s'\n"
water	21:35	0:0	6	"Invalid %s type '%s'\n"
arg	21:61	21:73	5	codec_string
water	21:61	0:0	6	codec_string
arg	21:75	21:79	5	name
water	21:75	0:0	6	name
water	21:80	0:0	4	;
call	22:8	22:22	4	exit_program
arg	22:21	22:22	5	1
water	22:21	0:0	6	1
water	22:23	0:0	4	;
water	23:4	0:0	4	}
return	24:4	24:16	2	codec
water	24:11	0:0	3	codec

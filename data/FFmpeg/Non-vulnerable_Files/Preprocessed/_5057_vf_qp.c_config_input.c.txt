func	2:0	32:0	0	static int	config_input
params	2:23	0:0	1	
param	2:24	2:44	2	AVFilterLink *	inlink
stmnts	0:0	31:12	1	
decl	4:4	4:38	2	AVFilterContext	*ctx
op	4:25	0:0	2	=
water	4:27	0:0	2	inlink
op	4:33	0:0	2	->
water	4:35	0:0	2	dst
decl	5:4	5:28	2	QPContext	*s
op	5:17	0:0	2	=
water	5:19	0:0	2	ctx
op	5:22	0:0	2	->
water	5:24	0:0	2	priv
decl	6:4	6:9	2	int	i
decl	7:4	7:11	2	int	ret
decl	8:4	8:20	2	AVExpr	*e
op	8:14	0:0	2	=
water	8:16	0:0	2	NULL
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	char
op	9:22	0:0	2	*
water	9:23	0:0	2	var_names
op	9:32	0:0	2	[
op	9:33	0:0	2	]
op	9:35	0:0	2	=
water	9:37	0:0	2	{
water	9:39	0:0	2	"known"
water	9:46	0:0	2	,
water	9:48	0:0	2	"qp"
water	9:52	0:0	2	,
water	9:54	0:0	2	"x"
water	9:57	0:0	2	,
water	9:59	0:0	2	"y"
water	9:62	0:0	2	,
water	9:64	0:0	2	"w"
water	9:67	0:0	2	,
water	9:69	0:0	2	"h"
water	9:72	0:0	2	,
water	9:74	0:0	2	NULL
water	9:79	0:0	2	}
water	9:80	0:0	2	;
if	10:4	11:16	2	(! s -> qp_expr_str)
cond	10:8	10:12	3	! s -> qp_expr_str
op	10:8	0:0	4	!
water	10:9	0:0	4	s
op	10:10	0:0	4	->
water	10:12	0:0	4	qp_expr_str
stmts	11:8	11:16	3	
return	11:8	11:16	4	0
water	11:15	0:0	5	0
water	12:4	0:0	2	ret
op	12:8	0:0	2	=
call	12:10	12:85	2	av_expr_parse
arg	12:24	12:26	3	&e
op	12:24	0:0	4	&
water	12:25	0:0	4	e
arg	12:28	12:42	3	s->qp_expr_str
water	12:28	0:0	4	s
op	12:29	0:0	4	->
water	12:31	0:0	4	qp_expr_str
arg	12:44	12:53	3	var_names
water	12:44	0:0	4	var_names
arg	12:55	12:59	3	NULL
water	12:55	0:0	4	NULL
arg	12:61	12:65	3	NULL
water	12:61	0:0	4	NULL
arg	12:67	12:71	3	NULL
water	12:67	0:0	4	NULL
arg	12:73	12:77	3	NULL
water	12:73	0:0	4	NULL
arg	12:79	12:80	3	0
water	12:79	0:0	4	0
arg	12:82	12:85	3	ctx
water	12:82	0:0	4	ctx
water	12:86	0:0	2	;
if	13:4	14:18	2	(ret < 0)
cond	13:8	13:14	3	ret < 0
water	13:8	0:0	4	ret
op	13:12	0:0	4	<
water	13:14	0:0	4	0
stmts	14:8	14:18	3	
return	14:8	14:18	4	ret
water	14:15	0:0	5	ret
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	h
op	15:15	0:0	2	=
water	15:17	0:0	2	(
water	15:18	0:0	2	inlink
op	15:24	0:0	2	->
water	15:26	0:0	2	h
op	15:28	0:0	2	+
water	15:30	0:0	2	15
water	15:32	0:0	2	)
op	15:34	0:0	2	>>
water	15:37	0:0	2	4
water	15:38	0:0	2	;
water	16:4	0:0	2	s
op	16:5	0:0	2	->
water	16:7	0:0	2	qstride
op	16:15	0:0	2	=
water	16:17	0:0	2	(
water	16:18	0:0	2	inlink
op	16:24	0:0	2	->
water	16:26	0:0	2	w
op	16:28	0:0	2	+
water	16:30	0:0	2	15
water	16:32	0:0	2	)
op	16:34	0:0	2	>>
water	16:37	0:0	2	4
water	16:38	0:0	2	;
for	17:4	29:4	2	(i = - 129 ;i < 128;i ++)
forinit	17:9	17:17	3	i = - 129 ;
water	17:9	0:0	4	i
op	17:11	0:0	4	=
op	17:13	0:0	4	-
water	17:14	0:0	4	129
water	17:17	0:0	4	;
cond	17:19	17:23	3	i < 128
water	17:19	0:0	4	i
op	17:21	0:0	4	<
water	17:23	0:0	4	128
forexpr	17:28	17:29	3	i ++
water	17:28	0:0	4	i
op	17:29	0:0	4	++
stmts	17:33	29:4	3	
water	17:33	0:0	4	{
decl	18:8	18:76	4	double	var_values[]
op	18:28	0:0	4	=
water	18:30	0:0	4	{
water	18:32	0:0	4	i
op	18:34	0:0	4	!=
op	18:37	0:0	4	-
water	18:38	0:0	4	129
water	18:41	0:0	4	,
water	18:43	0:0	4	i
water	18:44	0:0	4	,
water	18:46	0:0	4	NAN
water	18:49	0:0	4	,
water	18:51	0:0	4	NAN
water	18:54	0:0	4	,
water	18:56	0:0	4	s
op	18:57	0:0	4	->
water	18:59	0:0	4	qstride
water	18:66	0:0	4	,
water	18:68	0:0	4	s
op	18:69	0:0	4	->
water	18:71	0:0	4	h
water	18:72	0:0	4	,
water	18:74	0:0	4	0
water	18:75	0:0	4	}
decl	19:8	19:59	4	double	temp_val
op	19:24	0:0	4	=
call	19:26	19:58	5	av_expr_eval
arg	19:39	19:40	6	e
water	19:39	0:0	7	e
arg	19:42	19:52	6	var_values
water	19:42	0:0	7	var_values
arg	19:54	19:58	6	NULL
water	19:54	0:0	7	NULL
if	20:8	27:8	4	(isnan (temp_val ))
cond	20:12	20:26	5	isnan (temp_val )
call	20:12	20:26	6	isnan
arg	20:18	20:26	7	temp_val
water	20:18	0:0	8	temp_val
stmts	20:29	27:8	5	
water	20:29	0:0	6	{
if	21:12	22:38	6	(strchr (s -> qp_expr_str ,'x' ) ||strchr (s -> qp_expr_str ,'y' ))
cond	21:15	21:72	7	strchr (s -> qp_expr_str ,'x' ) ||strchr (s -> qp_expr_str ,'y' )
call	21:15	21:41	8	strchr
arg	21:22	21:36	9	s->qp_expr_str
water	21:22	0:0	10	s
op	21:23	0:0	10	->
water	21:25	0:0	10	qp_expr_str
arg	21:38	21:41	9	'x'
water	21:38	0:0	10	'x'
op	21:43	0:0	8	||
call	21:46	21:72	8	strchr
arg	21:53	21:67	9	s->qp_expr_str
water	21:53	0:0	10	s
op	21:54	0:0	10	->
water	21:56	0:0	10	qp_expr_str
arg	21:69	21:72	9	'y'
water	21:69	0:0	10	'y'
stmts	22:16	22:38	7	
water	22:16	0:0	8	s
op	22:17	0:0	8	->
water	22:19	0:0	8	evaluate_per_mb
op	22:35	0:0	8	=
water	22:37	0:0	8	1
water	22:38	0:0	8	;
else	23:12	26:12	6
stmts	23:17	26:12	7	
water	23:17	0:0	8	{
call	24:16	24:30	8	av_expr_free
arg	24:29	24:30	9	e
water	24:29	0:0	10	e
water	24:31	0:0	8	;
return	25:16	25:38	8	AVERROR(EINVAL)
call	25:23	25:37	9	AVERROR
arg	25:31	25:37	10	EINVAL
water	25:31	0:0	11	EINVAL
water	26:12	0:0	8	}
water	27:8	0:0	6	}
water	28:8	0:0	4	s
op	28:9	0:0	4	->
water	28:11	0:0	4	lut
op	28:14	0:0	4	[
water	28:15	0:0	4	i
op	28:17	0:0	4	+
water	28:19	0:0	4	129
op	28:22	0:0	4	]
op	28:24	0:0	4	=
call	28:26	28:41	4	lrintf
arg	28:33	28:41	5	temp_val
water	28:33	0:0	6	temp_val
water	28:42	0:0	4	;
water	29:4	0:0	4	}
call	30:4	30:18	2	av_expr_free
arg	30:17	30:18	3	e
water	30:17	0:0	4	e
water	30:19	0:0	2	;
return	31:4	31:12	2	0
water	31:11	0:0	3	0

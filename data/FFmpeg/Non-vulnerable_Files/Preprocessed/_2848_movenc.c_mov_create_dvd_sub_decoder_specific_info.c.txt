func	1:0	45:0	0	static int	mov_create_dvd_sub_decoder_specific_info
params	1:51	0:0	1	
param	1:52	1:67	2	MOVTrack *	track
param	2:52	2:64	2	AVStream *	st
stmnts	0:0	44:12	1	
decl	4:4	4:36	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:36	2	int	width
op	4:17	0:0	2	=
water	4:19	0:0	2	720
water	4:22	0:0	2	,
decl	4:4	4:36	2	int	height
op	4:31	0:0	2	=
water	4:33	0:0	2	480
decl	5:4	5:39	2	int	have_palette
op	5:21	0:0	2	=
water	5:23	0:0	2	0
water	5:24	0:0	2	,
decl	5:4	5:39	2	int	have_size
op	5:36	0:0	2	=
water	5:38	0:0	2	0
decl	6:4	6:24	2	uint32_t	palette[16]
decl	7:4	7:36	2	char	*cur
op	7:14	0:0	2	=
water	7:16	0:0	2	st
op	7:18	0:0	2	->
water	7:20	0:0	2	codec
op	7:25	0:0	2	->
water	7:27	0:0	2	extradata
while	8:4	32:4	2	(cur && * cur)
cond	8:11	8:19	3	cur && * cur
water	8:11	0:0	4	cur
op	8:15	0:0	4	&&
op	8:18	0:0	4	*
water	8:19	0:0	4	cur
stmts	8:24	32:4	3	
water	8:24	0:0	4	{
if	9:8	24:8	4	(strncmp ("palette:" ,cur ,8 ) == 0)
cond	9:12	9:43	5	strncmp ("palette:" ,cur ,8 ) == 0
call	9:12	9:38	6	strncmp
arg	9:20	9:30	7	"palette:"
water	9:20	0:0	8	"palette:"
arg	9:32	9:35	7	cur
water	9:32	0:0	8	cur
arg	9:37	9:38	7	8
water	9:37	0:0	8	8
op	9:40	0:0	6	==
water	9:43	0:0	6	0
stmts	9:46	24:8	5	
water	9:46	0:0	6	{
decl	10:12	10:24	6	int	i
water	10:17	0:0	6	,
decl	10:12	10:24	6	int	count
water	11:12	0:0	6	count
op	11:18	0:0	6	=
call	11:20	19:70	6	sscanf
arg	11:27	11:34	7	cur+8
water	11:27	0:0	8	cur
op	11:31	0:0	8	+
water	11:33	0:0	8	8
arg	12:16	15:68	7	"%06"PRIx32", %06"PRIx32", %06"PRIx32", %06"PRIx32", ""%06"PRIx32", %06"PRIx32", %06"PRIx32", %06"PRIx32", ""%06"PRIx32", %06"PRIx32", %06"PRIx32", %06"PRIx32", ""%06"PRIx32", %06"PRIx32", %06"PRIx32", %06"PRIx32""
water	12:16	0:0	8	"%06"
water	12:21	0:0	8	PRIx32
water	12:27	0:0	8	", %06"
water	12:34	0:0	8	PRIx32
water	12:40	0:0	8	", %06"
water	12:47	0:0	8	PRIx32
water	12:53	0:0	8	", %06"
water	12:60	0:0	8	PRIx32
water	12:66	0:0	8	", "
water	13:16	0:0	8	"%06"
water	13:21	0:0	8	PRIx32
water	13:27	0:0	8	", %06"
water	13:34	0:0	8	PRIx32
water	13:40	0:0	8	", %06"
water	13:47	0:0	8	PRIx32
water	13:53	0:0	8	", %06"
water	13:60	0:0	8	PRIx32
water	13:66	0:0	8	", "
water	14:16	0:0	8	"%06"
water	14:21	0:0	8	PRIx32
water	14:27	0:0	8	", %06"
water	14:34	0:0	8	PRIx32
water	14:40	0:0	8	", %06"
water	14:47	0:0	8	PRIx32
water	14:53	0:0	8	", %06"
water	14:60	0:0	8	PRIx32
water	14:66	0:0	8	", "
water	15:16	0:0	8	"%06"
water	15:21	0:0	8	PRIx32
water	15:27	0:0	8	", %06"
water	15:34	0:0	8	PRIx32
water	15:40	0:0	8	", %06"
water	15:47	0:0	8	PRIx32
water	15:53	0:0	8	", %06"
water	15:60	0:0	8	PRIx32
water	15:66	0:0	8	""
arg	16:16	16:28	7	&palette[0]
op	16:16	0:0	8	&
water	16:17	0:0	8	palette
op	16:24	0:0	8	[
water	16:26	0:0	8	0
op	16:27	0:0	8	]
arg	16:30	16:42	7	&palette[1]
op	16:30	0:0	8	&
water	16:31	0:0	8	palette
op	16:38	0:0	8	[
water	16:40	0:0	8	1
op	16:41	0:0	8	]
arg	16:44	16:56	7	&palette[2]
op	16:44	0:0	8	&
water	16:45	0:0	8	palette
op	16:52	0:0	8	[
water	16:54	0:0	8	2
op	16:55	0:0	8	]
arg	16:58	16:70	7	&palette[3]
op	16:58	0:0	8	&
water	16:59	0:0	8	palette
op	16:66	0:0	8	[
water	16:68	0:0	8	3
op	16:69	0:0	8	]
arg	17:16	17:28	7	&palette[4]
op	17:16	0:0	8	&
water	17:17	0:0	8	palette
op	17:24	0:0	8	[
water	17:26	0:0	8	4
op	17:27	0:0	8	]
arg	17:30	17:42	7	&palette[5]
op	17:30	0:0	8	&
water	17:31	0:0	8	palette
op	17:38	0:0	8	[
water	17:40	0:0	8	5
op	17:41	0:0	8	]
arg	17:44	17:56	7	&palette[6]
op	17:44	0:0	8	&
water	17:45	0:0	8	palette
op	17:52	0:0	8	[
water	17:54	0:0	8	6
op	17:55	0:0	8	]
arg	17:58	17:70	7	&palette[7]
op	17:58	0:0	8	&
water	17:59	0:0	8	palette
op	17:66	0:0	8	[
water	17:68	0:0	8	7
op	17:69	0:0	8	]
arg	18:16	18:28	7	&palette[8]
op	18:16	0:0	8	&
water	18:17	0:0	8	palette
op	18:24	0:0	8	[
water	18:26	0:0	8	8
op	18:27	0:0	8	]
arg	18:30	18:42	7	&palette[9]
op	18:30	0:0	8	&
water	18:31	0:0	8	palette
op	18:38	0:0	8	[
water	18:40	0:0	8	9
op	18:41	0:0	8	]
arg	18:44	18:56	7	&palette[10]
op	18:44	0:0	8	&
water	18:45	0:0	8	palette
op	18:52	0:0	8	[
water	18:53	0:0	8	10
op	18:55	0:0	8	]
arg	18:58	18:70	7	&palette[11]
op	18:58	0:0	8	&
water	18:59	0:0	8	palette
op	18:66	0:0	8	[
water	18:67	0:0	8	11
op	18:69	0:0	8	]
arg	19:16	19:28	7	&palette[12]
op	19:16	0:0	8	&
water	19:17	0:0	8	palette
op	19:24	0:0	8	[
water	19:25	0:0	8	12
op	19:27	0:0	8	]
arg	19:30	19:42	7	&palette[13]
op	19:30	0:0	8	&
water	19:31	0:0	8	palette
op	19:38	0:0	8	[
water	19:39	0:0	8	13
op	19:41	0:0	8	]
arg	19:44	19:56	7	&palette[14]
op	19:44	0:0	8	&
water	19:45	0:0	8	palette
op	19:52	0:0	8	[
water	19:53	0:0	8	14
op	19:55	0:0	8	]
arg	19:58	19:70	7	&palette[15]
op	19:58	0:0	8	&
water	19:59	0:0	8	palette
op	19:66	0:0	8	[
water	19:67	0:0	8	15
op	19:69	0:0	8	]
water	19:71	0:0	6	;
for	20:12	22:12	6	(i = 0 ;i < count;i ++)
forinit	20:17	20:22	7	i = 0 ;
water	20:17	0:0	8	i
op	20:19	0:0	8	=
water	20:21	0:0	8	0
water	20:22	0:0	8	;
cond	20:24	20:28	7	i < count
water	20:24	0:0	8	i
op	20:26	0:0	8	<
water	20:28	0:0	8	count
forexpr	20:35	20:36	7	i ++
water	20:35	0:0	8	i
op	20:36	0:0	8	++
stmts	20:40	22:12	7	
water	20:40	0:0	8	{
water	21:16	0:0	8	palette
op	21:23	0:0	8	[
water	21:24	0:0	8	i
op	21:25	0:0	8	]
op	21:27	0:0	8	=
call	21:29	21:50	8	rgb_to_yuv
arg	21:40	21:50	9	palette[i]
water	21:40	0:0	10	palette
op	21:47	0:0	10	[
water	21:48	0:0	10	i
op	21:49	0:0	10	]
water	21:51	0:0	8	;
water	22:12	0:0	8	}
water	23:12	0:0	6	have_palette
op	23:25	0:0	6	=
water	23:27	0:0	6	1
water	23:28	0:0	6	;
water	24:8	0:0	6	}
else	24:10	27:8	4
stmts	24:15	27:8	5	
if	24:15	27:8	6	(!strncmp ("size:" ,cur ,5 ))
cond	24:19	24:43	7	!strncmp ("size:" ,cur ,5 )
op	24:19	0:0	8	!
call	24:20	24:43	8	strncmp
arg	24:28	24:35	9	"size:"
water	24:28	0:0	10	"size:"
arg	24:37	24:40	9	cur
water	24:37	0:0	10	cur
arg	24:42	24:43	9	5
water	24:42	0:0	10	5
stmts	24:46	27:8	7	
water	24:46	0:0	8	{
call	25:12	25:52	8	sscanf
arg	25:19	25:26	9	cur+5
water	25:19	0:0	10	cur
op	25:23	0:0	10	+
water	25:25	0:0	10	5
arg	25:28	25:35	9	"%dx%d"
water	25:28	0:0	10	"%dx%d"
arg	25:37	25:43	9	&width
op	25:37	0:0	10	&
water	25:38	0:0	10	width
arg	25:45	25:52	9	&height
op	25:45	0:0	10	&
water	25:46	0:0	10	height
water	25:53	0:0	8	;
water	26:12	0:0	8	have_size
op	26:22	0:0	8	=
water	26:24	0:0	8	1
water	26:25	0:0	8	;
water	27:8	0:0	8	}
if	28:8	29:17	4	(have_palette && have_size)
cond	28:12	28:28	5	have_palette && have_size
water	28:12	0:0	6	have_palette
op	28:25	0:0	6	&&
water	28:28	0:0	6	have_size
stmts	29:12	29:17	5	
break	29:12	29:17	6	
water	30:8	0:0	4	cur
op	30:12	0:0	4	+=
call	30:15	30:34	4	strcspn
arg	30:23	30:26	5	cur
water	30:23	0:0	6	cur
arg	30:28	30:34	5	"\n\r"
water	30:28	0:0	6	"\n\r"
water	30:35	0:0	4	;
water	31:8	0:0	4	cur
op	31:12	0:0	4	+=
call	31:15	31:33	4	strspn
arg	31:22	31:25	5	cur
water	31:22	0:0	6	cur
arg	31:27	31:33	5	"\n\r"
water	31:27	0:0	6	"\n\r"
water	31:34	0:0	4	;
water	32:4	0:0	4	}
if	33:4	41:4	2	(have_palette)
cond	33:8	33:8	3	have_palette
water	33:8	0:0	4	have_palette
stmts	33:22	41:4	3	
water	33:22	0:0	4	{
water	34:8	0:0	4	track
op	34:13	0:0	4	->
water	34:15	0:0	4	vos_data
op	34:24	0:0	4	=
call	34:26	34:40	4	av_malloc
arg	34:36	34:40	5	16*4
water	34:36	0:0	6	16
op	34:38	0:0	6	*
water	34:39	0:0	6	4
water	34:41	0:0	4	;
if	35:8	36:34	4	(! track -> vos_data)
cond	35:12	35:20	5	! track -> vos_data
op	35:12	0:0	6	!
water	35:13	0:0	6	track
op	35:18	0:0	6	->
water	35:20	0:0	6	vos_data
stmts	36:12	36:34	5	
return	36:12	36:34	6	AVERROR(ENOMEM)
call	36:19	36:33	7	AVERROR
arg	36:27	36:33	8	ENOMEM
water	36:27	0:0	9	ENOMEM
for	37:8	39:8	4	(i = 0 ;i < 16;i ++)
forinit	37:13	37:18	5	i = 0 ;
water	37:13	0:0	6	i
op	37:15	0:0	6	=
water	37:17	0:0	6	0
water	37:18	0:0	6	;
cond	37:20	37:24	5	i < 16
water	37:20	0:0	6	i
op	37:22	0:0	6	<
water	37:24	0:0	6	16
forexpr	37:28	37:29	5	i ++
water	37:28	0:0	6	i
op	37:29	0:0	6	++
stmts	37:33	39:8	5	
water	37:33	0:0	6	{
call	38:12	38:55	6	AV_WB32
arg	38:20	38:43	7	track->vos_data+i*4
water	38:20	0:0	8	track
op	38:25	0:0	8	->
water	38:27	0:0	8	vos_data
op	38:36	0:0	8	+
water	38:38	0:0	8	i
op	38:40	0:0	8	*
water	38:42	0:0	8	4
arg	38:45	38:55	7	palette[i]
water	38:45	0:0	8	palette
op	38:52	0:0	8	[
water	38:53	0:0	8	i
op	38:54	0:0	8	]
water	38:56	0:0	6	;
water	39:8	0:0	6	}
water	40:8	0:0	4	track
op	40:13	0:0	4	->
water	40:15	0:0	4	vos_len
op	40:23	0:0	4	=
water	40:25	0:0	4	16
op	40:28	0:0	4	*
water	40:30	0:0	4	4
water	40:31	0:0	4	;
water	41:4	0:0	4	}
water	42:4	0:0	2	st
op	42:6	0:0	2	->
water	42:8	0:0	2	codec
op	42:13	0:0	2	->
water	42:15	0:0	2	width
op	42:21	0:0	2	=
water	42:23	0:0	2	width
water	42:28	0:0	2	;
water	43:4	0:0	2	st
op	43:6	0:0	2	->
water	43:8	0:0	2	codec
op	43:13	0:0	2	->
water	43:15	0:0	2	height
op	43:22	0:0	2	=
water	43:24	0:0	2	track
op	43:29	0:0	2	->
water	43:31	0:0	2	height
op	43:38	0:0	2	=
water	43:40	0:0	2	height
water	43:46	0:0	2	;
return	44:4	44:12	2	0
water	44:11	0:0	3	0

func	1:0	28:0	0	static void	yuv2ya8_X_c
params	2:11	0:0	1	
param	2:12	2:25	2	SwsContext *	c
param	2:27	2:51	2	const int16_t *	lumFilter
param	3:12	3:34	2	const int16_t * *	lumSrc
param	3:36	3:53	2	int	lumFilterSize
param	4:12	4:36	2	const int16_t *	chrFilter
param	4:38	4:61	2	const int16_t * *	chrUSrc
param	5:12	5:35	2	const int16_t * *	chrVSrc
param	5:37	5:54	2	int	chrFilterSize
param	6:12	6:34	2	const int16_t * *	alpSrc
param	6:36	6:49	2	uint8_t *	dest
param	6:51	6:59	2	int	dstW
param	6:61	6:66	2	int	y
stmnts	0:0	27:4	1	
decl	8:4	8:27	2	int	hasAlpha
op	8:17	0:0	2	=
op	8:19	0:0	2	!
op	8:20	0:0	2	!
water	8:21	0:0	2	alpSrc
decl	9:4	9:9	2	int	i
for	10:4	27:4	2	(i = 0 ;i < dstW;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:20	3	i < dstW
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	dstW
forexpr	10:26	10:27	3	i ++
water	10:26	0:0	4	i
op	10:27	0:0	4	++
stmts	10:31	27:4	3	
water	10:31	0:0	4	{
decl	11:8	11:13	4	int	j
decl	12:8	12:36	4	int	Y
op	12:14	0:0	4	=
water	12:16	0:0	4	1
op	12:18	0:0	4	<<
water	12:21	0:0	4	18
water	12:23	0:0	4	,
decl	12:8	12:36	4	int	A
op	12:27	0:0	4	=
water	12:29	0:0	4	1
op	12:31	0:0	4	<<
water	12:34	0:0	4	18
for	13:8	14:44	4	(j = 0 ;j < lumFilterSize;j ++)
forinit	13:13	13:18	5	j = 0 ;
water	13:13	0:0	6	j
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:24	5	j < lumFilterSize
water	13:20	0:0	6	j
op	13:22	0:0	6	<
water	13:24	0:0	6	lumFilterSize
forexpr	13:39	13:40	5	j ++
water	13:39	0:0	6	j
op	13:40	0:0	6	++
stmts	14:12	14:44	5	
water	14:12	0:0	6	Y
op	14:14	0:0	6	+=
water	14:17	0:0	6	lumSrc
op	14:23	0:0	6	[
water	14:24	0:0	6	j
op	14:25	0:0	6	]
op	14:26	0:0	6	[
water	14:27	0:0	6	i
op	14:28	0:0	6	]
op	14:30	0:0	6	*
water	14:32	0:0	6	lumFilter
op	14:41	0:0	6	[
water	14:42	0:0	6	j
op	14:43	0:0	6	]
water	14:44	0:0	6	;
water	15:8	0:0	4	Y
op	15:10	0:0	4	>>=
water	15:14	0:0	4	19
water	15:16	0:0	4	;
if	16:8	17:32	4	(Y & 0 x100)
cond	16:12	16:18	5	Y & 0 x100
water	16:12	0:0	6	Y
op	16:15	0:0	6	&
water	16:17	0:0	6	0
water	16:18	0:0	6	x100
stmts	17:12	17:32	5	
water	17:12	0:0	6	Y
op	17:14	0:0	6	=
call	17:16	17:31	6	av_clip_uint8
arg	17:30	17:31	7	Y
water	17:30	0:0	8	Y
water	17:32	0:0	6	;
if	18:8	24:8	4	(hasAlpha)
cond	18:12	18:12	5	hasAlpha
water	18:12	0:0	6	hasAlpha
stmts	18:22	24:8	5	
water	18:22	0:0	6	{
for	19:12	20:48	6	(j = 0 ;j < lumFilterSize;j ++)
forinit	19:17	19:22	7	j = 0 ;
water	19:17	0:0	8	j
op	19:19	0:0	8	=
water	19:21	0:0	8	0
water	19:22	0:0	8	;
cond	19:24	19:28	7	j < lumFilterSize
water	19:24	0:0	8	j
op	19:26	0:0	8	<
water	19:28	0:0	8	lumFilterSize
forexpr	19:43	19:44	7	j ++
water	19:43	0:0	8	j
op	19:44	0:0	8	++
stmts	20:16	20:48	7	
water	20:16	0:0	8	A
op	20:18	0:0	8	+=
water	20:21	0:0	8	alpSrc
op	20:27	0:0	8	[
water	20:28	0:0	8	j
op	20:29	0:0	8	]
op	20:30	0:0	8	[
water	20:31	0:0	8	i
op	20:32	0:0	8	]
op	20:34	0:0	8	*
water	20:36	0:0	8	lumFilter
op	20:45	0:0	8	[
water	20:46	0:0	8	j
op	20:47	0:0	8	]
water	20:48	0:0	8	;
water	21:12	0:0	6	A
op	21:14	0:0	6	>>=
water	21:18	0:0	6	19
water	21:20	0:0	6	;
if	22:12	23:36	6	(A & 0 x100)
cond	22:16	22:21	7	A & 0 x100
water	22:16	0:0	8	A
op	22:18	0:0	8	&
water	22:20	0:0	8	0
water	22:21	0:0	8	x100
stmts	23:16	23:36	7	
water	23:16	0:0	8	A
op	23:18	0:0	8	=
call	23:20	23:35	8	av_clip_uint8
arg	23:34	23:35	9	A
water	23:34	0:0	10	A
water	23:36	0:0	8	;
water	24:8	0:0	6	}
water	25:8	0:0	4	dest
op	25:12	0:0	4	[
water	25:13	0:0	4	2
op	25:15	0:0	4	*
water	25:17	0:0	4	i
op	25:22	0:0	4	]
op	25:24	0:0	4	=
water	25:26	0:0	4	Y
water	25:27	0:0	4	;
water	26:8	0:0	4	dest
op	26:12	0:0	4	[
water	26:13	0:0	4	2
op	26:15	0:0	4	*
water	26:17	0:0	4	i
op	26:19	0:0	4	+
water	26:21	0:0	4	1
op	26:22	0:0	4	]
op	26:24	0:0	4	=
water	26:26	0:0	4	hasAlpha
water	26:35	0:0	4	?
water	26:37	0:0	4	A
water	26:39	0:0	4	:
water	26:41	0:0	4	255
water	26:44	0:0	4	;
water	27:4	0:0	4	}

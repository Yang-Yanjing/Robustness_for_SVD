func	1:0	19:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	18:41	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:21	2	uint8_t	data[LEN]
call	5:4	5:33	2	av_log_set_level
arg	5:21	5:33	3	AV_LOG_DEBUG
water	5:21	0:0	4	AV_LOG_DEBUG
water	5:34	0:0	2	;
for	6:4	7:42	2	(i = 0 ;i < LEN;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:20	3	i < LEN
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	LEN
forexpr	6:25	6:26	3	i ++
water	6:25	0:0	4	i
op	6:26	0:0	4	++
stmts	7:8	7:42	3	
water	7:8	0:0	4	data
op	7:12	0:0	4	[
water	7:13	0:0	4	i
op	7:14	0:0	4	]
op	7:16	0:0	4	=
water	7:18	0:0	4	(
water	7:19	0:0	4	(
water	7:20	0:0	4	i
op	7:22	0:0	4	*
water	7:24	0:0	4	i
water	7:25	0:0	4	)
op	7:27	0:0	4	>>
water	7:30	0:0	4	3
water	7:31	0:0	4	)
op	7:33	0:0	4	+
water	7:35	0:0	4	123
op	7:39	0:0	4	*
water	7:41	0:0	4	i
water	7:42	0:0	4	;
if	8:4	14:4	2	(argc > 1 && !strcmp (argv [ 1 ] ,"-t" ))
cond	8:8	8:41	3	argc > 1 && !strcmp (argv [ 1 ] ,"-t" )
water	8:8	0:0	4	argc
op	8:13	0:0	4	>
water	8:15	0:0	4	1
op	8:17	0:0	4	&&
op	8:20	0:0	4	!
call	8:21	8:41	4	strcmp
arg	8:28	8:35	5	argv[1]
water	8:28	0:0	6	argv
op	8:32	0:0	6	[
water	8:33	0:0	6	1
op	8:34	0:0	6	]
arg	8:37	8:41	5	"-t"
water	8:37	0:0	6	"-t"
stmts	8:44	14:4	3	
water	8:44	0:0	4	{
for	9:8	13:8	4	(i = 0 ;i < 1000;i ++)
forinit	9:13	9:18	5	i = 0 ;
water	9:13	0:0	6	i
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:24	5	i < 1000
water	9:20	0:0	6	i
op	9:22	0:0	6	<
water	9:24	0:0	6	1000
forexpr	9:30	9:31	5	i ++
water	9:30	0:0	6	i
op	9:31	0:0	6	++
stmts	9:35	13:8	5	
water	9:35	0:0	6	{
water	10:12	0:0	6	START_TIMER
water	10:23	0:0	6	;
water	11:12	0:0	6	checksum
op	11:21	0:0	6	=
call	11:23	11:53	6	av_adler32_update
arg	11:41	11:42	7	1
water	11:41	0:0	8	1
arg	11:44	11:48	7	data
water	11:44	0:0	8	data
arg	11:50	11:53	7	LEN
water	11:50	0:0	8	LEN
water	11:54	0:0	6	;
call	12:12	12:30	6	STOP_TIMER
arg	12:23	12:30	7	"adler"
water	12:23	0:0	8	"adler"
water	12:31	0:0	6	;
water	13:8	0:0	6	}
water	14:4	0:0	4	}
else	14:6	16:4	2
stmts	14:11	16:4	3	
water	14:11	0:0	4	{
water	15:8	0:0	4	checksum
op	15:17	0:0	4	=
call	15:19	15:49	4	av_adler32_update
arg	15:37	15:38	5	1
water	15:37	0:0	6	1
arg	15:40	15:44	5	data
water	15:40	0:0	6	data
arg	15:46	15:49	5	LEN
water	15:46	0:0	6	LEN
water	15:50	0:0	4	;
water	16:4	0:0	4	}
call	17:4	17:67	2	av_log
arg	17:11	17:15	3	NULL
water	17:11	0:0	4	NULL
arg	17:17	17:29	3	AV_LOG_DEBUG
water	17:17	0:0	4	AV_LOG_DEBUG
arg	17:31	17:57	3	"%X (expected 50E6E508)\n"
water	17:31	0:0	4	"%X (expected 50E6E508)\n"
arg	17:59	17:67	3	checksum
water	17:59	0:0	4	checksum
water	17:68	0:0	2	;
return	18:4	18:41	2	checksum==0x50e6e508?0:1
water	18:11	0:0	3	checksum
op	18:20	0:0	3	==
water	18:23	0:0	3	0
water	18:24	0:0	3	x50e6e508
water	18:34	0:0	3	?
water	18:36	0:0	3	0
water	18:38	0:0	3	:
water	18:40	0:0	3	1

func	1:0	25:0	0	static void	free_playlist_list
params	1:30	0:0	1	
param	1:31	1:44	2	HLSContext *	c
stmnts	0:0	24:22	1	
decl	3:4	3:9	2	int	i
for	4:4	20:4	2	(i = 0 ;i < c -> n_playlists;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:23	3	i < c -> n_playlists
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	c
op	4:21	0:0	4	->
water	4:23	0:0	4	n_playlists
forexpr	4:36	4:37	3	i ++
water	4:36	0:0	4	i
op	4:37	0:0	4	++
stmts	4:41	20:4	3	
water	4:41	0:0	4	{
decl	5:8	5:46	4	struct playlist	*pls
op	5:29	0:0	4	=
water	5:31	0:0	4	c
op	5:32	0:0	4	->
water	5:34	0:0	4	playlists
op	5:43	0:0	4	[
water	5:44	0:0	4	i
op	5:45	0:0	4	]
call	6:8	6:29	4	free_segment_list
arg	6:26	6:29	5	pls
water	6:26	0:0	6	pls
water	6:30	0:0	4	;
call	7:8	7:33	4	av_freep
arg	7:17	7:33	5	&pls->renditions
op	7:17	0:0	6	&
water	7:18	0:0	6	pls
op	7:21	0:0	6	->
water	7:23	0:0	6	renditions
water	7:34	0:0	4	;
call	8:8	8:30	4	av_freep
arg	8:17	8:30	5	&pls->id3_buf
op	8:17	0:0	6	&
water	8:18	0:0	6	pls
op	8:21	0:0	6	->
water	8:23	0:0	6	id3_buf
water	8:31	0:0	4	;
call	9:8	9:38	4	av_dict_free
arg	9:21	9:38	5	&pls->id3_initial
op	9:21	0:0	6	&
water	9:22	0:0	6	pls
op	9:25	0:0	6	->
water	9:27	0:0	6	id3_initial
water	9:39	0:0	4	;
call	10:8	10:57	4	ff_id3v2_free_extra_meta
arg	10:33	10:57	5	&pls->id3_deferred_extra
op	10:33	0:0	6	&
water	10:34	0:0	6	pls
op	10:37	0:0	6	->
water	10:39	0:0	6	id3_deferred_extra
water	10:58	0:0	4	;
call	11:8	11:32	4	av_free_packet
arg	11:23	11:32	5	&pls->pkt
op	11:23	0:0	6	&
water	11:24	0:0	6	pls
op	11:27	0:0	6	->
water	11:29	0:0	6	pkt
water	11:33	0:0	4	;
call	12:8	12:32	4	av_freep
arg	12:17	12:32	5	&pls->pb.buffer
op	12:17	0:0	6	&
water	12:18	0:0	6	pls
op	12:21	0:0	6	->
water	12:23	0:0	6	pb
op	12:25	0:0	6	.
water	12:26	0:0	6	buffer
water	12:33	0:0	4	;
if	13:8	14:35	4	(pls -> input)
cond	13:12	13:17	5	pls -> input
water	13:12	0:0	6	pls
op	13:15	0:0	6	->
water	13:17	0:0	6	input
stmts	14:12	14:35	5	
call	14:12	14:34	6	ffurl_close
arg	14:24	14:34	7	pls->input
water	14:24	0:0	8	pls
op	14:27	0:0	8	->
water	14:29	0:0	8	input
water	14:35	0:0	6	;
if	15:8	18:8	4	(pls -> ctx)
cond	15:12	15:17	5	pls -> ctx
water	15:12	0:0	6	pls
op	15:15	0:0	6	->
water	15:17	0:0	6	ctx
stmts	15:22	18:8	5	
water	15:22	0:0	6	{
water	16:12	0:0	6	pls
op	16:15	0:0	6	->
water	16:17	0:0	6	ctx
op	16:20	0:0	6	->
water	16:22	0:0	6	pb
op	16:25	0:0	6	=
water	16:27	0:0	6	NULL
water	16:31	0:0	6	;
call	17:12	17:42	6	avformat_close_input
arg	17:33	17:42	7	&pls->ctx
op	17:33	0:0	8	&
water	17:34	0:0	8	pls
op	17:37	0:0	8	->
water	17:39	0:0	8	ctx
water	17:43	0:0	6	;
water	18:8	0:0	6	}
call	19:8	19:19	4	av_free
arg	19:16	19:19	5	pls
water	19:16	0:0	6	pls
water	19:20	0:0	4	;
water	20:4	0:0	4	}
call	21:4	21:26	2	av_freep
arg	21:13	21:26	3	&c->playlists
op	21:13	0:0	4	&
water	21:14	0:0	4	c
op	21:15	0:0	4	->
water	21:17	0:0	4	playlists
water	21:27	0:0	2	;
call	22:4	22:24	2	av_freep
arg	22:13	22:24	3	&c->cookies
op	22:13	0:0	4	&
water	22:14	0:0	4	c
op	22:15	0:0	4	->
water	22:17	0:0	4	cookies
water	22:25	0:0	2	;
call	23:4	23:27	2	av_freep
arg	23:13	23:27	3	&c->user_agent
op	23:13	0:0	4	&
water	23:14	0:0	4	c
op	23:15	0:0	4	->
water	23:17	0:0	4	user_agent
water	23:28	0:0	2	;
water	24:4	0:0	2	c
op	24:5	0:0	2	->
water	24:7	0:0	2	n_playlists
op	24:19	0:0	2	=
water	24:21	0:0	2	0
water	24:22	0:0	2	;

func	2:15	13:0	0	int	pp_init
params	2:26	0:0	1	
param	2:27	2:47	2	AVFilterContext *	ctx
stmnts	0:0	12:12	1	
decl	4:4	4:9	2	int	i
decl	5:4	5:35	2	PPFilterContext	*pp
op	5:24	0:0	2	=
water	5:26	0:0	2	ctx
op	5:29	0:0	2	->
water	5:31	0:0	2	priv
for	6:4	10:4	2	(i = 0 ;i <= PP_QUALITY_MAX;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:21	3	i <= PP_QUALITY_MAX
water	6:16	0:0	4	i
op	6:18	0:0	4	<=
water	6:21	0:0	4	PP_QUALITY_MAX
forexpr	6:37	6:38	3	i ++
water	6:37	0:0	4	i
op	6:38	0:0	4	++
stmts	6:42	10:4	3	
water	6:42	0:0	4	{
water	7:8	0:0	4	pp
op	7:10	0:0	4	->
water	7:12	0:0	4	modes
op	7:17	0:0	4	[
water	7:18	0:0	4	i
op	7:19	0:0	4	]
op	7:21	0:0	4	=
call	7:23	7:72	4	pp_get_mode_by_name_and_quality
arg	7:55	7:69	5	pp->subfilters
water	7:55	0:0	6	pp
op	7:57	0:0	6	->
water	7:59	0:0	6	subfilters
arg	7:71	7:72	5	i
water	7:71	0:0	6	i
water	7:73	0:0	4	;
if	8:8	9:35	4	(! pp -> modes [ i ])
cond	8:12	8:24	5	! pp -> modes [ i ]
op	8:12	0:0	6	!
water	8:13	0:0	6	pp
op	8:15	0:0	6	->
water	8:17	0:0	6	modes
op	8:22	0:0	6	[
water	8:23	0:0	6	i
op	8:24	0:0	6	]
stmts	9:12	9:35	5	
return	9:12	9:35	6	AVERROR_EXTERNAL
water	9:19	0:0	7	AVERROR_EXTERNAL
water	10:4	0:0	4	}
water	11:4	0:0	2	pp
op	11:6	0:0	2	->
water	11:8	0:0	2	mode_id
op	11:16	0:0	2	=
water	11:18	0:0	2	PP_QUALITY_MAX
water	11:32	0:0	2	;
return	12:4	12:12	2	0
water	12:11	0:0	3	0

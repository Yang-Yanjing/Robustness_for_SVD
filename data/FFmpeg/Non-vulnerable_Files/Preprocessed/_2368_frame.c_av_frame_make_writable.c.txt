func	1:0	34:0	0	int	av_frame_make_writable
params	1:26	0:0	1	
param	1:27	1:41	2	AVFrame *	frame
stmnts	0:0	33:12	1	
decl	3:4	3:15	2	AVFrame	tmp
decl	4:4	4:11	2	int	ret
if	5:4	6:30	2	(! frame -> buf [ 0 ])
cond	5:8	5:21	3	! frame -> buf [ 0 ]
op	5:8	0:0	4	!
water	5:9	0:0	4	frame
op	5:14	0:0	4	->
water	5:16	0:0	4	buf
op	5:19	0:0	4	[
water	5:20	0:0	4	0
op	5:21	0:0	4	]
stmts	6:8	6:30	3	
return	6:8	6:30	4	AVERROR(EINVAL)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	EINVAL
water	6:23	0:0	7	EINVAL
if	7:4	8:16	2	(av_frame_is_writable (frame ))
cond	7:8	7:34	3	av_frame_is_writable (frame )
call	7:8	7:34	4	av_frame_is_writable
arg	7:29	7:34	5	frame
water	7:29	0:0	6	frame
stmts	8:8	8:16	3	
return	8:8	8:16	4	0
water	8:15	0:0	5	0
call	9:4	9:31	2	memset
arg	9:11	9:15	3	&tmp
op	9:11	0:0	4	&
water	9:12	0:0	4	tmp
arg	9:17	9:18	3	0
water	9:17	0:0	4	0
arg	9:20	9:31	3	sizeof(tmp)
op	9:20	0:0	4	sizeof
water	9:26	0:0	4	(
water	9:27	0:0	4	tmp
water	9:30	0:0	4	)
water	9:32	0:0	2	;
water	10:4	0:0	2	tmp
op	10:7	0:0	2	.
water	10:8	0:0	2	format
op	10:23	0:0	2	=
water	10:25	0:0	2	frame
op	10:30	0:0	2	->
water	10:32	0:0	2	format
water	10:38	0:0	2	;
water	11:4	0:0	2	tmp
op	11:7	0:0	2	.
water	11:8	0:0	2	width
op	11:23	0:0	2	=
water	11:25	0:0	2	frame
op	11:30	0:0	2	->
water	11:32	0:0	2	width
water	11:37	0:0	2	;
water	12:4	0:0	2	tmp
op	12:7	0:0	2	.
water	12:8	0:0	2	height
op	12:23	0:0	2	=
water	12:25	0:0	2	frame
op	12:30	0:0	2	->
water	12:32	0:0	2	height
water	12:38	0:0	2	;
water	13:4	0:0	2	tmp
op	13:7	0:0	2	.
water	13:8	0:0	2	channels
op	13:23	0:0	2	=
water	13:25	0:0	2	frame
op	13:30	0:0	2	->
water	13:32	0:0	2	channels
water	13:40	0:0	2	;
water	14:4	0:0	2	tmp
op	14:7	0:0	2	.
water	14:8	0:0	2	channel_layout
op	14:23	0:0	2	=
water	14:25	0:0	2	frame
op	14:30	0:0	2	->
water	14:32	0:0	2	channel_layout
water	14:46	0:0	2	;
water	15:4	0:0	2	tmp
op	15:7	0:0	2	.
water	15:8	0:0	2	nb_samples
op	15:23	0:0	2	=
water	15:25	0:0	2	frame
op	15:30	0:0	2	->
water	15:32	0:0	2	nb_samples
water	15:42	0:0	2	;
water	16:4	0:0	2	ret
op	16:8	0:0	2	=
call	16:10	16:38	2	av_frame_get_buffer
arg	16:30	16:34	3	&tmp
op	16:30	0:0	4	&
water	16:31	0:0	4	tmp
arg	16:36	16:38	3	32
water	16:36	0:0	4	32
water	16:39	0:0	2	;
if	17:4	18:18	2	(ret < 0)
cond	17:8	17:14	3	ret < 0
water	17:8	0:0	4	ret
op	17:12	0:0	4	<
water	17:14	0:0	4	0
stmts	18:8	18:18	3	
return	18:8	18:18	4	ret
water	18:15	0:0	5	ret
water	19:4	0:0	2	ret
op	19:8	0:0	2	=
call	19:10	19:35	2	av_frame_copy
arg	19:24	19:28	3	&tmp
op	19:24	0:0	4	&
water	19:25	0:0	4	tmp
arg	19:30	19:35	3	frame
water	19:30	0:0	4	frame
water	19:36	0:0	2	;
if	20:4	23:4	2	(ret < 0)
cond	20:8	20:14	3	ret < 0
water	20:8	0:0	4	ret
op	20:12	0:0	4	<
water	20:14	0:0	4	0
stmts	20:17	23:4	3	
water	20:17	0:0	4	{
call	21:8	21:27	4	av_frame_unref
arg	21:23	21:27	5	&tmp
op	21:23	0:0	6	&
water	21:24	0:0	6	tmp
water	21:28	0:0	4	;
return	22:8	22:18	4	ret
water	22:15	0:0	5	ret
water	23:4	0:0	4	}
water	24:4	0:0	2	ret
op	24:8	0:0	2	=
call	24:10	24:41	2	av_frame_copy_props
arg	24:30	24:34	3	&tmp
op	24:30	0:0	4	&
water	24:31	0:0	4	tmp
arg	24:36	24:41	3	frame
water	24:36	0:0	4	frame
water	24:42	0:0	2	;
if	25:4	28:4	2	(ret < 0)
cond	25:8	25:14	3	ret < 0
water	25:8	0:0	4	ret
op	25:12	0:0	4	<
water	25:14	0:0	4	0
stmts	25:17	28:4	3	
water	25:17	0:0	4	{
call	26:8	26:27	4	av_frame_unref
arg	26:23	26:27	5	&tmp
op	26:23	0:0	6	&
water	26:24	0:0	6	tmp
water	26:28	0:0	4	;
return	27:8	27:18	4	ret
water	27:15	0:0	5	ret
water	28:4	0:0	4	}
call	29:4	29:24	2	av_frame_unref
arg	29:19	29:24	3	frame
water	29:19	0:0	4	frame
water	29:25	0:0	2	;
op	30:4	0:0	2	*
water	30:5	0:0	2	frame
op	30:11	0:0	2	=
water	30:13	0:0	2	tmp
water	30:16	0:0	2	;
if	31:4	32:42	2	(tmp . data == tmp . extended_data)
cond	31:8	31:24	3	tmp . data == tmp . extended_data
water	31:8	0:0	4	tmp
op	31:11	0:0	4	.
water	31:12	0:0	4	data
op	31:17	0:0	4	==
water	31:20	0:0	4	tmp
op	31:23	0:0	4	.
water	31:24	0:0	4	extended_data
stmts	32:8	32:42	3	
water	32:8	0:0	4	frame
op	32:13	0:0	4	->
water	32:15	0:0	4	extended_data
op	32:29	0:0	4	=
water	32:31	0:0	4	frame
op	32:36	0:0	4	->
water	32:38	0:0	4	data
water	32:42	0:0	4	;
return	33:4	33:12	2	0
water	33:11	0:0	3	0

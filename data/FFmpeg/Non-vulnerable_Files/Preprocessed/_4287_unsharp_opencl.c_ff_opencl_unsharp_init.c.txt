func	1:0	82:0	0	int	ff_opencl_unsharp_init
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
stmnts	0:0	81:14	1	
decl	3:4	3:15	2	int	ret
op	3:12	0:0	2	=
water	3:14	0:0	2	0
decl	4:4	4:23	2	char	build_opts[96]
decl	5:4	5:39	2	UnsharpContext	*unsharp
op	5:28	0:0	2	=
water	5:30	0:0	2	ctx
op	5:33	0:0	2	->
water	5:35	0:0	2	priv
water	6:4	0:0	2	ret
op	6:8	0:0	2	=
call	6:10	6:29	2	av_opencl_init
arg	6:25	6:29	3	NULL
water	6:25	0:0	4	NULL
water	6:30	0:0	2	;
if	7:4	8:18	2	(ret < 0)
cond	7:8	7:14	3	ret < 0
water	7:8	0:0	4	ret
op	7:12	0:0	4	<
water	7:14	0:0	4	0
stmts	8:8	8:18	3	
return	8:8	8:18	4	ret
water	8:15	0:0	5	ret
water	9:4	0:0	2	ret
op	9:8	0:0	2	=
call	9:10	11:56	2	av_opencl_buffer_create
arg	9:34	9:67	3	&unsharp->opencl_ctx.cl_luma_mask
op	9:34	0:0	4	&
water	9:35	0:0	4	unsharp
op	9:42	0:0	4	->
water	9:44	0:0	4	opencl_ctx
op	9:54	0:0	4	.
water	9:55	0:0	4	cl_luma_mask
arg	10:34	10:118	3	sizeof(uint32_t)*(2*unsharp->luma.steps_x+1)*(2*unsharp->luma.steps_y+1)
op	10:34	0:0	4	sizeof
water	10:40	0:0	4	(
water	10:41	0:0	4	uint32_t
water	10:49	0:0	4	)
op	10:51	0:0	4	*
water	10:53	0:0	4	(
water	10:54	0:0	4	2
op	10:56	0:0	4	*
water	10:58	0:0	4	unsharp
op	10:65	0:0	4	->
water	10:67	0:0	4	luma
op	10:71	0:0	4	.
water	10:72	0:0	4	steps_x
op	10:80	0:0	4	+
water	10:82	0:0	4	1
water	10:83	0:0	4	)
op	10:85	0:0	4	*
water	10:87	0:0	4	(
water	10:88	0:0	4	2
op	10:90	0:0	4	*
water	10:92	0:0	4	unsharp
op	10:99	0:0	4	->
water	10:101	0:0	4	luma
op	10:105	0:0	4	.
water	10:106	0:0	4	steps_y
op	10:114	0:0	4	+
water	10:116	0:0	4	1
water	10:117	0:0	4	)
arg	11:34	11:50	3	CL_MEM_READ_ONLY
water	11:34	0:0	4	CL_MEM_READ_ONLY
arg	11:52	11:56	3	NULL
water	11:52	0:0	4	NULL
water	11:57	0:0	2	;
if	12:4	13:18	2	(ret < 0)
cond	12:8	12:14	3	ret < 0
water	12:8	0:0	4	ret
op	12:12	0:0	4	<
water	12:14	0:0	4	0
stmts	13:8	13:18	3	
return	13:8	13:18	4	ret
water	13:15	0:0	5	ret
water	14:4	0:0	2	ret
op	14:8	0:0	2	=
call	14:10	16:56	2	av_opencl_buffer_create
arg	14:34	14:69	3	&unsharp->opencl_ctx.cl_chroma_mask
op	14:34	0:0	4	&
water	14:35	0:0	4	unsharp
op	14:42	0:0	4	->
water	14:44	0:0	4	opencl_ctx
op	14:54	0:0	4	.
water	14:55	0:0	4	cl_chroma_mask
arg	15:34	15:122	3	sizeof(uint32_t)*(2*unsharp->chroma.steps_x+1)*(2*unsharp->chroma.steps_y+1)
op	15:34	0:0	4	sizeof
water	15:40	0:0	4	(
water	15:41	0:0	4	uint32_t
water	15:49	0:0	4	)
op	15:51	0:0	4	*
water	15:53	0:0	4	(
water	15:54	0:0	4	2
op	15:56	0:0	4	*
water	15:58	0:0	4	unsharp
op	15:65	0:0	4	->
water	15:67	0:0	4	chroma
op	15:73	0:0	4	.
water	15:74	0:0	4	steps_x
op	15:82	0:0	4	+
water	15:84	0:0	4	1
water	15:85	0:0	4	)
op	15:87	0:0	4	*
water	15:89	0:0	4	(
water	15:90	0:0	4	2
op	15:92	0:0	4	*
water	15:94	0:0	4	unsharp
op	15:101	0:0	4	->
water	15:103	0:0	4	chroma
op	15:109	0:0	4	.
water	15:110	0:0	4	steps_y
op	15:118	0:0	4	+
water	15:120	0:0	4	1
water	15:121	0:0	4	)
arg	16:34	16:50	3	CL_MEM_READ_ONLY
water	16:34	0:0	4	CL_MEM_READ_ONLY
arg	16:52	16:56	3	NULL
water	16:52	0:0	4	NULL
water	16:57	0:0	2	;
if	18:4	19:18	2	(ret < 0)
cond	18:8	18:14	3	ret < 0
water	18:8	0:0	4	ret
op	18:12	0:0	4	<
water	18:14	0:0	4	0
stmts	19:8	19:18	3	
return	19:8	19:18	4	ret
water	19:15	0:0	5	ret
water	20:4	0:0	2	ret
op	20:8	0:0	2	=
call	20:10	22:56	2	av_opencl_buffer_create
arg	20:34	20:69	3	&unsharp->opencl_ctx.cl_luma_mask_x
op	20:34	0:0	4	&
water	20:35	0:0	4	unsharp
op	20:42	0:0	4	->
water	20:44	0:0	4	opencl_ctx
op	20:54	0:0	4	.
water	20:55	0:0	4	cl_luma_mask_x
arg	21:34	21:84	3	sizeof(uint32_t)*(2*unsharp->luma.steps_x+1)
op	21:34	0:0	4	sizeof
water	21:40	0:0	4	(
water	21:41	0:0	4	uint32_t
water	21:49	0:0	4	)
op	21:51	0:0	4	*
water	21:53	0:0	4	(
water	21:54	0:0	4	2
op	21:56	0:0	4	*
water	21:58	0:0	4	unsharp
op	21:65	0:0	4	->
water	21:67	0:0	4	luma
op	21:71	0:0	4	.
water	21:72	0:0	4	steps_x
op	21:80	0:0	4	+
water	21:82	0:0	4	1
water	21:83	0:0	4	)
arg	22:34	22:50	3	CL_MEM_READ_ONLY
water	22:34	0:0	4	CL_MEM_READ_ONLY
arg	22:52	22:56	3	NULL
water	22:52	0:0	4	NULL
water	22:57	0:0	2	;
if	23:4	24:18	2	(ret < 0)
cond	23:8	23:14	3	ret < 0
water	23:8	0:0	4	ret
op	23:12	0:0	4	<
water	23:14	0:0	4	0
stmts	24:8	24:18	3	
return	24:8	24:18	4	ret
water	24:15	0:0	5	ret
water	25:4	0:0	2	ret
op	25:8	0:0	2	=
call	25:10	27:56	2	av_opencl_buffer_create
arg	25:34	25:69	3	&unsharp->opencl_ctx.cl_luma_mask_y
op	25:34	0:0	4	&
water	25:35	0:0	4	unsharp
op	25:42	0:0	4	->
water	25:44	0:0	4	opencl_ctx
op	25:54	0:0	4	.
water	25:55	0:0	4	cl_luma_mask_y
arg	26:34	26:84	3	sizeof(uint32_t)*(2*unsharp->luma.steps_y+1)
op	26:34	0:0	4	sizeof
water	26:40	0:0	4	(
water	26:41	0:0	4	uint32_t
water	26:49	0:0	4	)
op	26:51	0:0	4	*
water	26:53	0:0	4	(
water	26:54	0:0	4	2
op	26:56	0:0	4	*
water	26:58	0:0	4	unsharp
op	26:65	0:0	4	->
water	26:67	0:0	4	luma
op	26:71	0:0	4	.
water	26:72	0:0	4	steps_y
op	26:80	0:0	4	+
water	26:82	0:0	4	1
water	26:83	0:0	4	)
arg	27:34	27:50	3	CL_MEM_READ_ONLY
water	27:34	0:0	4	CL_MEM_READ_ONLY
arg	27:52	27:56	3	NULL
water	27:52	0:0	4	NULL
water	27:57	0:0	2	;
if	28:4	29:18	2	(ret < 0)
cond	28:8	28:14	3	ret < 0
water	28:8	0:0	4	ret
op	28:12	0:0	4	<
water	28:14	0:0	4	0
stmts	29:8	29:18	3	
return	29:8	29:18	4	ret
water	29:15	0:0	5	ret
water	30:4	0:0	2	ret
op	30:8	0:0	2	=
call	30:10	32:56	2	av_opencl_buffer_create
arg	30:34	30:71	3	&unsharp->opencl_ctx.cl_chroma_mask_x
op	30:34	0:0	4	&
water	30:35	0:0	4	unsharp
op	30:42	0:0	4	->
water	30:44	0:0	4	opencl_ctx
op	30:54	0:0	4	.
water	30:55	0:0	4	cl_chroma_mask_x
arg	31:34	31:86	3	sizeof(uint32_t)*(2*unsharp->chroma.steps_x+1)
op	31:34	0:0	4	sizeof
water	31:40	0:0	4	(
water	31:41	0:0	4	uint32_t
water	31:49	0:0	4	)
op	31:51	0:0	4	*
water	31:53	0:0	4	(
water	31:54	0:0	4	2
op	31:56	0:0	4	*
water	31:58	0:0	4	unsharp
op	31:65	0:0	4	->
water	31:67	0:0	4	chroma
op	31:73	0:0	4	.
water	31:74	0:0	4	steps_x
op	31:82	0:0	4	+
water	31:84	0:0	4	1
water	31:85	0:0	4	)
arg	32:34	32:50	3	CL_MEM_READ_ONLY
water	32:34	0:0	4	CL_MEM_READ_ONLY
arg	32:52	32:56	3	NULL
water	32:52	0:0	4	NULL
water	32:57	0:0	2	;
if	33:4	34:18	2	(ret < 0)
cond	33:8	33:14	3	ret < 0
water	33:8	0:0	4	ret
op	33:12	0:0	4	<
water	33:14	0:0	4	0
stmts	34:8	34:18	3	
return	34:8	34:18	4	ret
water	34:15	0:0	5	ret
water	35:4	0:0	2	ret
op	35:8	0:0	2	=
call	35:10	37:56	2	av_opencl_buffer_create
arg	35:34	35:71	3	&unsharp->opencl_ctx.cl_chroma_mask_y
op	35:34	0:0	4	&
water	35:35	0:0	4	unsharp
op	35:42	0:0	4	->
water	35:44	0:0	4	opencl_ctx
op	35:54	0:0	4	.
water	35:55	0:0	4	cl_chroma_mask_y
arg	36:34	36:86	3	sizeof(uint32_t)*(2*unsharp->chroma.steps_y+1)
op	36:34	0:0	4	sizeof
water	36:40	0:0	4	(
water	36:41	0:0	4	uint32_t
water	36:49	0:0	4	)
op	36:51	0:0	4	*
water	36:53	0:0	4	(
water	36:54	0:0	4	2
op	36:56	0:0	4	*
water	36:58	0:0	4	unsharp
op	36:65	0:0	4	->
water	36:67	0:0	4	chroma
op	36:73	0:0	4	.
water	36:74	0:0	4	steps_y
op	36:82	0:0	4	+
water	36:84	0:0	4	1
water	36:85	0:0	4	)
arg	37:34	37:50	3	CL_MEM_READ_ONLY
water	37:34	0:0	4	CL_MEM_READ_ONLY
arg	37:52	37:56	3	NULL
water	37:52	0:0	4	NULL
water	37:57	0:0	2	;
if	38:4	39:18	2	(ret < 0)
cond	38:8	38:14	3	ret < 0
water	38:8	0:0	4	ret
op	38:12	0:0	4	<
water	38:14	0:0	4	0
stmts	39:8	39:18	3	
return	39:8	39:18	4	ret
water	39:15	0:0	5	ret
water	40:4	0:0	2	ret
op	40:8	0:0	2	=
call	40:10	40:27	2	generate_mask
arg	40:24	40:27	3	ctx
water	40:24	0:0	4	ctx
water	40:28	0:0	2	;
if	41:4	42:18	2	(ret < 0)
cond	41:8	41:14	3	ret < 0
water	41:8	0:0	4	ret
op	41:12	0:0	4	<
water	41:14	0:0	4	0
stmts	42:8	42:18	3	
return	42:8	42:18	4	ret
water	42:15	0:0	5	ret
water	43:4	0:0	2	unsharp
op	43:11	0:0	2	->
water	43:13	0:0	2	opencl_ctx
op	43:23	0:0	2	.
water	43:24	0:0	2	plane_num
op	43:34	0:0	2	=
water	43:36	0:0	2	PLANE_NUM
water	43:45	0:0	2	;
water	44:4	0:0	2	unsharp
op	44:11	0:0	2	->
water	44:13	0:0	2	opencl_ctx
op	44:23	0:0	2	.
water	44:24	0:0	2	command_queue
op	44:38	0:0	2	=
call	44:40	44:68	2	av_opencl_get_command_queue
water	44:69	0:0	2	;
if	45:4	48:4	2	(! unsharp -> opencl_ctx . command_queue)
cond	45:8	45:29	3	! unsharp -> opencl_ctx . command_queue
op	45:8	0:0	4	!
water	45:9	0:0	4	unsharp
op	45:16	0:0	4	->
water	45:18	0:0	4	opencl_ctx
op	45:28	0:0	4	.
water	45:29	0:0	4	command_queue
stmts	45:44	48:4	3	
water	45:44	0:0	4	{
call	46:8	46:92	4	av_log
arg	46:15	46:18	5	ctx
water	46:15	0:0	6	ctx
arg	46:20	46:32	5	AV_LOG_ERROR
water	46:20	0:0	6	AV_LOG_ERROR
arg	46:34	46:92	5	"Unable to get OpenCL command queue in filter 'unsharp'\n"
water	46:34	0:0	6	"Unable to get OpenCL command queue in filter 'unsharp'\n"
water	46:93	0:0	4	;
return	47:8	47:30	4	AVERROR(EINVAL)
call	47:15	47:29	5	AVERROR
arg	47:23	47:29	6	EINVAL
water	47:23	0:0	7	EINVAL
water	48:4	0:0	4	}
call	49:4	50:122	2	snprintf
arg	49:13	49:23	3	build_opts
water	49:13	0:0	4	build_opts
arg	49:25	49:27	3	96
water	49:25	0:0	4	96
arg	49:29	49:102	3	"-D LU_RADIUS_X=%d -D LU_RADIUS_Y=%d -D CH_RADIUS_X=%d -D CH_RADIUS_Y=%d"
water	49:29	0:0	4	"-D LU_RADIUS_X=%d -D LU_RADIUS_Y=%d -D CH_RADIUS_X=%d -D CH_RADIUS_Y=%d"
arg	50:12	50:37	3	2*unsharp->luma.steps_x+1
water	50:12	0:0	4	2
op	50:13	0:0	4	*
water	50:14	0:0	4	unsharp
op	50:21	0:0	4	->
water	50:23	0:0	4	luma
op	50:27	0:0	4	.
water	50:28	0:0	4	steps_x
op	50:35	0:0	4	+
water	50:36	0:0	4	1
arg	50:39	50:64	3	2*unsharp->luma.steps_y+1
water	50:39	0:0	4	2
op	50:40	0:0	4	*
water	50:41	0:0	4	unsharp
op	50:48	0:0	4	->
water	50:50	0:0	4	luma
op	50:54	0:0	4	.
water	50:55	0:0	4	steps_y
op	50:62	0:0	4	+
water	50:63	0:0	4	1
arg	50:66	50:93	3	2*unsharp->chroma.steps_x+1
water	50:66	0:0	4	2
op	50:67	0:0	4	*
water	50:68	0:0	4	unsharp
op	50:75	0:0	4	->
water	50:77	0:0	4	chroma
op	50:83	0:0	4	.
water	50:84	0:0	4	steps_x
op	50:91	0:0	4	+
water	50:92	0:0	4	1
arg	50:95	50:122	3	2*unsharp->chroma.steps_y+1
water	50:95	0:0	4	2
op	50:96	0:0	4	*
water	50:97	0:0	4	unsharp
op	50:104	0:0	4	->
water	50:106	0:0	4	chroma
op	50:112	0:0	4	.
water	50:113	0:0	4	steps_y
op	50:120	0:0	4	+
water	50:121	0:0	4	1
water	50:123	0:0	2	;
water	51:4	0:0	2	unsharp
op	51:11	0:0	2	->
water	51:13	0:0	2	opencl_ctx
op	51:23	0:0	2	.
water	51:24	0:0	2	program
op	51:32	0:0	2	=
call	51:34	51:73	2	av_opencl_compile
arg	51:52	51:61	3	"unsharp"
water	51:52	0:0	4	"unsharp"
arg	51:63	51:73	3	build_opts
water	51:63	0:0	4	build_opts
water	51:74	0:0	2	;
if	52:4	55:4	2	(! unsharp -> opencl_ctx . program)
cond	52:8	52:29	3	! unsharp -> opencl_ctx . program
op	52:8	0:0	4	!
water	52:9	0:0	4	unsharp
op	52:16	0:0	4	->
water	52:18	0:0	4	opencl_ctx
op	52:28	0:0	4	.
water	52:29	0:0	4	program
stmts	52:38	55:4	3	
water	52:38	0:0	4	{
call	53:8	53:80	4	av_log
arg	53:15	53:18	5	ctx
water	53:15	0:0	6	ctx
arg	53:20	53:32	5	AV_LOG_ERROR
water	53:20	0:0	6	AV_LOG_ERROR
arg	53:34	53:80	5	"OpenCL failed to compile program 'unsharp'\n"
water	53:34	0:0	6	"OpenCL failed to compile program 'unsharp'\n"
water	53:81	0:0	4	;
return	54:8	54:30	4	AVERROR(EINVAL)
call	54:15	54:29	5	AVERROR
arg	54:23	54:29	6	EINVAL
water	54:23	0:0	7	EINVAL
water	55:4	0:0	4	}
if	56:4	71:4	2	(unsharp -> opencl_ctx . use_fast_kernels)
cond	56:8	56:28	3	unsharp -> opencl_ctx . use_fast_kernels
water	56:8	0:0	4	unsharp
op	56:15	0:0	4	->
water	56:17	0:0	4	opencl_ctx
op	56:27	0:0	4	.
water	56:28	0:0	4	use_fast_kernels
stmts	56:46	71:4	3	
water	56:46	0:0	4	{
if	57:8	63:8	4	(! unsharp -> opencl_ctx . kernel_luma)
cond	57:12	57:33	5	! unsharp -> opencl_ctx . kernel_luma
op	57:12	0:0	6	!
water	57:13	0:0	6	unsharp
op	57:20	0:0	6	->
water	57:22	0:0	6	opencl_ctx
op	57:32	0:0	6	.
water	57:33	0:0	6	kernel_luma
stmts	57:46	63:8	5	
water	57:46	0:0	6	{
water	58:12	0:0	6	unsharp
op	58:19	0:0	6	->
water	58:21	0:0	6	opencl_ctx
op	58:31	0:0	6	.
water	58:32	0:0	6	kernel_luma
op	58:44	0:0	6	=
call	58:46	58:110	6	clCreateKernel
arg	58:61	58:88	7	unsharp->opencl_ctx.program
water	58:61	0:0	8	unsharp
op	58:68	0:0	8	->
water	58:70	0:0	8	opencl_ctx
op	58:80	0:0	8	.
water	58:81	0:0	8	program
arg	58:90	58:104	7	"unsharp_luma"
water	58:90	0:0	8	"unsharp_luma"
arg	58:106	58:110	7	&ret
op	58:106	0:0	8	&
water	58:107	0:0	8	ret
water	58:111	0:0	6	;
if	59:12	62:12	6	(ret != CL_SUCCESS)
cond	59:16	59:23	7	ret != CL_SUCCESS
water	59:16	0:0	8	ret
op	59:20	0:0	8	!=
water	59:23	0:0	8	CL_SUCCESS
stmts	59:35	62:12	7	
water	59:35	0:0	8	{
call	60:16	60:91	8	av_log
arg	60:23	60:26	9	ctx
water	60:23	0:0	10	ctx
arg	60:28	60:40	9	AV_LOG_ERROR
water	60:28	0:0	10	AV_LOG_ERROR
arg	60:42	60:91	9	"OpenCL failed to create kernel 'unsharp_luma'\n"
water	60:42	0:0	10	"OpenCL failed to create kernel 'unsharp_luma'\n"
water	60:92	0:0	8	;
return	61:16	61:26	8	ret
water	61:23	0:0	9	ret
water	62:12	0:0	8	}
water	63:8	0:0	6	}
if	64:8	70:8	4	(! unsharp -> opencl_ctx . kernel_chroma)
cond	64:12	64:33	5	! unsharp -> opencl_ctx . kernel_chroma
op	64:12	0:0	6	!
water	64:13	0:0	6	unsharp
op	64:20	0:0	6	->
water	64:22	0:0	6	opencl_ctx
op	64:32	0:0	6	.
water	64:33	0:0	6	kernel_chroma
stmts	64:48	70:8	5	
water	64:48	0:0	6	{
water	65:12	0:0	6	unsharp
op	65:19	0:0	6	->
water	65:21	0:0	6	opencl_ctx
op	65:31	0:0	6	.
water	65:32	0:0	6	kernel_chroma
op	65:46	0:0	6	=
call	65:48	65:114	6	clCreateKernel
arg	65:63	65:90	7	unsharp->opencl_ctx.program
water	65:63	0:0	8	unsharp
op	65:70	0:0	8	->
water	65:72	0:0	8	opencl_ctx
op	65:82	0:0	8	.
water	65:83	0:0	8	program
arg	65:92	65:108	7	"unsharp_chroma"
water	65:92	0:0	8	"unsharp_chroma"
arg	65:110	65:114	7	&ret
op	65:110	0:0	8	&
water	65:111	0:0	8	ret
water	65:115	0:0	6	;
if	66:12	69:12	6	(ret < 0)
cond	66:16	66:22	7	ret < 0
water	66:16	0:0	8	ret
op	66:20	0:0	8	<
water	66:22	0:0	8	0
stmts	66:25	69:12	7	
water	66:25	0:0	8	{
call	67:16	67:93	8	av_log
arg	67:23	67:26	9	ctx
water	67:23	0:0	10	ctx
arg	67:28	67:40	9	AV_LOG_ERROR
water	67:28	0:0	10	AV_LOG_ERROR
arg	67:42	67:93	9	"OpenCL failed to create kernel 'unsharp_chroma'\n"
water	67:42	0:0	10	"OpenCL failed to create kernel 'unsharp_chroma'\n"
water	67:94	0:0	8	;
return	68:16	68:26	8	ret
water	68:23	0:0	9	ret
water	69:12	0:0	8	}
water	70:8	0:0	6	}
water	71:4	0:0	4	}
else	72:4	80:4	2
stmts	72:9	80:4	3	
water	72:9	0:0	4	{
if	73:8	79:8	4	(! unsharp -> opencl_ctx . kernel_default)
cond	73:12	73:33	5	! unsharp -> opencl_ctx . kernel_default
op	73:12	0:0	6	!
water	73:13	0:0	6	unsharp
op	73:20	0:0	6	->
water	73:22	0:0	6	opencl_ctx
op	73:32	0:0	6	.
water	73:33	0:0	6	kernel_default
stmts	73:49	79:8	5	
water	73:49	0:0	6	{
water	74:12	0:0	6	unsharp
op	74:19	0:0	6	->
water	74:21	0:0	6	opencl_ctx
op	74:31	0:0	6	.
water	74:32	0:0	6	kernel_default
op	74:47	0:0	6	=
call	74:49	74:116	6	clCreateKernel
arg	74:64	74:91	7	unsharp->opencl_ctx.program
water	74:64	0:0	8	unsharp
op	74:71	0:0	8	->
water	74:73	0:0	8	opencl_ctx
op	74:83	0:0	8	.
water	74:84	0:0	8	program
arg	74:93	74:110	7	"unsharp_default"
water	74:93	0:0	8	"unsharp_default"
arg	74:112	74:116	7	&ret
op	74:112	0:0	8	&
water	74:113	0:0	8	ret
water	74:117	0:0	6	;
if	75:12	78:12	6	(ret < 0)
cond	75:16	75:22	7	ret < 0
water	75:16	0:0	8	ret
op	75:20	0:0	8	<
water	75:22	0:0	8	0
stmts	75:25	78:12	7	
water	75:25	0:0	8	{
call	76:16	76:94	8	av_log
arg	76:23	76:26	9	ctx
water	76:23	0:0	10	ctx
arg	76:28	76:40	9	AV_LOG_ERROR
water	76:28	0:0	10	AV_LOG_ERROR
arg	76:42	76:94	9	"OpenCL failed to create kernel 'unsharp_default'\n"
water	76:42	0:0	10	"OpenCL failed to create kernel 'unsharp_default'\n"
water	76:95	0:0	8	;
return	77:16	77:26	8	ret
water	77:23	0:0	9	ret
water	78:12	0:0	8	}
water	79:8	0:0	6	}
water	80:4	0:0	4	}
return	81:4	81:14	2	ret
water	81:11	0:0	3	ret

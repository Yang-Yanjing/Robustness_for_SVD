func	1:0	77:0	0	static void	swap_channel_layouts_on_filter
params	1:42	0:0	1	
param	1:43	1:66	2	AVFilterContext *	filter
stmnts	0:0	76:4	1	
decl	3:4	3:29	2	AVFilterLink	*link
op	3:23	0:0	2	=
water	3:25	0:0	2	NULL
decl	4:4	4:15	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:15	2	int	j
water	4:12	0:0	2	,
decl	4:4	4:15	2	int	k
for	5:4	10:4	2	(i = 0 ;i < filter -> nb_inputs;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:28	3	i < filter -> nb_inputs
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	filter
op	5:26	0:0	4	->
water	5:28	0:0	4	nb_inputs
forexpr	5:39	5:40	3	i ++
water	5:39	0:0	4	i
op	5:40	0:0	4	++
stmts	5:44	10:4	3	
water	5:44	0:0	4	{
water	6:8	0:0	4	link
op	6:13	0:0	4	=
water	6:15	0:0	4	filter
op	6:21	0:0	4	->
water	6:23	0:0	4	inputs
op	6:29	0:0	4	[
water	6:30	0:0	4	i
op	6:31	0:0	4	]
water	6:32	0:0	4	;
if	7:8	9:17	4	(link -> type == AVMEDIA_TYPE_AUDIO && link -> out_channel_layouts -> nb_channel_layouts == 1)
cond	7:12	8:61	5	link -> type == AVMEDIA_TYPE_AUDIO && link -> out_channel_layouts -> nb_channel_layouts == 1
water	7:12	0:0	6	link
op	7:16	0:0	6	->
water	7:18	0:0	6	type
op	7:23	0:0	6	==
water	7:26	0:0	6	AVMEDIA_TYPE_AUDIO
op	7:45	0:0	6	&&
water	8:12	0:0	6	link
op	8:16	0:0	6	->
water	8:18	0:0	6	out_channel_layouts
op	8:37	0:0	6	->
water	8:39	0:0	6	nb_channel_layouts
op	8:58	0:0	6	==
water	8:61	0:0	6	1
stmts	9:12	9:17	5	
break	9:12	9:17	6	
water	10:4	0:0	4	}
if	11:4	12:14	2	(i == filter -> nb_inputs)
cond	11:8	11:21	3	i == filter -> nb_inputs
water	11:8	0:0	4	i
op	11:10	0:0	4	==
water	11:13	0:0	4	filter
op	11:19	0:0	4	->
water	11:21	0:0	4	nb_inputs
stmts	12:8	12:14	3	
return	12:8	12:14	4	
for	13:4	76:4	2	(i = 0 ;i < filter -> nb_outputs;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:28	3	i < filter -> nb_outputs
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	filter
op	13:26	0:0	4	->
water	13:28	0:0	4	nb_outputs
forexpr	13:40	13:41	3	i ++
water	13:40	0:0	4	i
op	13:41	0:0	4	++
stmts	13:45	76:4	3	
water	13:45	0:0	4	{
decl	14:8	14:50	4	AVFilterLink	*outlink
op	14:30	0:0	4	=
water	14:32	0:0	4	filter
op	14:38	0:0	4	->
water	14:40	0:0	4	outputs
op	14:47	0:0	4	[
water	14:48	0:0	4	i
op	14:49	0:0	4	]
decl	15:8	15:74	4	int	best_idx
op	15:21	0:0	4	=
op	15:23	0:0	4	-
water	15:24	0:0	4	1
water	15:25	0:0	4	,
decl	15:8	15:74	4	int	best_score
op	15:38	0:0	4	=
water	15:40	0:0	4	INT_MIN
water	15:47	0:0	4	,
decl	15:8	15:74	4	int	best_count_diff
op	15:65	0:0	4	=
water	15:67	0:0	4	INT_MAX
if	16:8	18:20	4	(outlink -> type != AVMEDIA_TYPE_AUDIO || outlink -> in_channel_layouts -> nb_channel_layouts < 2)
cond	16:12	17:62	5	outlink -> type != AVMEDIA_TYPE_AUDIO || outlink -> in_channel_layouts -> nb_channel_layouts < 2
water	16:12	0:0	6	outlink
op	16:19	0:0	6	->
water	16:21	0:0	6	type
op	16:26	0:0	6	!=
water	16:29	0:0	6	AVMEDIA_TYPE_AUDIO
op	16:48	0:0	6	||
water	17:12	0:0	6	outlink
op	17:19	0:0	6	->
water	17:21	0:0	6	in_channel_layouts
op	17:39	0:0	6	->
water	17:41	0:0	6	nb_channel_layouts
op	17:60	0:0	6	<
water	17:62	0:0	6	2
stmts	18:12	18:20	5	
continue	18:12	18:20	6	
for	19:8	72:8	4	(j = 0 ;j < outlink -> in_channel_layouts -> nb_channel_layouts;j ++)
forinit	19:13	19:18	5	j = 0 ;
water	19:13	0:0	6	j
op	19:15	0:0	6	=
water	19:17	0:0	6	0
water	19:18	0:0	6	;
cond	19:20	19:53	5	j < outlink -> in_channel_layouts -> nb_channel_layouts
water	19:20	0:0	6	j
op	19:22	0:0	6	<
water	19:24	0:0	6	outlink
op	19:31	0:0	6	->
water	19:33	0:0	6	in_channel_layouts
op	19:51	0:0	6	->
water	19:53	0:0	6	nb_channel_layouts
forexpr	19:73	19:74	5	j ++
water	19:73	0:0	6	j
op	19:74	0:0	6	++
stmts	19:78	72:8	5	
water	19:78	0:0	6	{
decl	20:12	20:81	6	uint64_t	in_chlayout
op	20:34	0:0	6	=
water	20:36	0:0	6	link
op	20:40	0:0	6	->
water	20:42	0:0	6	out_channel_layouts
op	20:61	0:0	6	->
water	20:63	0:0	6	channel_layouts
op	20:78	0:0	6	[
water	20:79	0:0	6	0
op	20:80	0:0	6	]
decl	21:12	21:83	6	uint64_t	out_chlayout
op	21:34	0:0	6	=
water	21:36	0:0	6	outlink
op	21:43	0:0	6	->
water	21:45	0:0	6	in_channel_layouts
op	21:63	0:0	6	->
water	21:65	0:0	6	channel_layouts
op	21:80	0:0	6	[
water	21:81	0:0	6	j
op	21:82	0:0	6	]
decl	22:12	22:82	6	int	in_channels
op	22:34	0:0	6	=
call	22:36	22:81	7	av_get_channel_layout_nb_channels
arg	22:70	22:81	8	in_chlayout
water	22:70	0:0	9	in_chlayout
decl	23:12	23:83	6	int	out_channels
op	23:34	0:0	6	=
call	23:36	23:82	7	av_get_channel_layout_nb_channels
arg	23:70	23:82	8	out_chlayout
water	23:70	0:0	9	out_chlayout
decl	24:12	24:62	6	int	count_diff
op	24:34	0:0	6	=
water	24:36	0:0	6	out_channels
op	24:49	0:0	6	-
water	24:51	0:0	6	in_channels
decl	25:12	25:48	6	int	matched_channels
water	25:32	0:0	6	,
decl	25:12	25:48	6	int	extra_channels
decl	26:12	26:30	6	int	score
op	26:22	0:0	6	=
water	26:24	0:0	6	100000
if	27:12	41:12	6	(FF_LAYOUT2COUNT (in_chlayout ) ||FF_LAYOUT2COUNT (out_chlayout ))
cond	27:16	27:76	7	FF_LAYOUT2COUNT (in_chlayout ) ||FF_LAYOUT2COUNT (out_chlayout )
call	27:16	27:43	8	FF_LAYOUT2COUNT
arg	27:32	27:43	9	in_chlayout
water	27:32	0:0	10	in_chlayout
op	27:45	0:0	8	||
call	27:48	27:76	8	FF_LAYOUT2COUNT
arg	27:64	27:76	9	out_chlayout
water	27:64	0:0	10	out_chlayout
stmts	27:79	41:12	7	
water	27:79	0:0	8	{
if	32:16	33:62	8	(FF_LAYOUT2COUNT (in_chlayout ))
cond	32:20	32:47	9	FF_LAYOUT2COUNT (in_chlayout )
call	32:20	32:47	10	FF_LAYOUT2COUNT
arg	32:36	32:47	11	in_chlayout
water	32:36	0:0	12	in_chlayout
stmts	33:20	33:62	9	
water	33:20	0:0	10	in_channels
op	33:32	0:0	10	=
call	33:34	33:61	10	FF_LAYOUT2COUNT
arg	33:50	33:61	11	in_chlayout
water	33:50	0:0	12	in_chlayout
water	33:62	0:0	10	;
if	34:16	35:64	8	(FF_LAYOUT2COUNT (out_chlayout ))
cond	34:20	34:48	9	FF_LAYOUT2COUNT (out_chlayout )
call	34:20	34:48	10	FF_LAYOUT2COUNT
arg	34:36	34:48	11	out_chlayout
water	34:36	0:0	12	out_chlayout
stmts	35:20	35:64	9	
water	35:20	0:0	10	out_channels
op	35:33	0:0	10	=
call	35:35	35:63	10	FF_LAYOUT2COUNT
arg	35:51	35:63	11	out_chlayout
water	35:51	0:0	12	out_chlayout
water	35:64	0:0	10	;
water	36:16	0:0	8	score
op	36:22	0:0	8	-=
water	36:25	0:0	8	10000
op	36:31	0:0	8	+
call	36:33	36:65	8	FFABS
arg	36:39	36:65	9	out_channels-in_channels
water	36:39	0:0	10	out_channels
op	36:52	0:0	10	-
water	36:54	0:0	10	in_channels
op	36:67	0:0	8	+
water	37:25	0:0	8	(
water	37:26	0:0	8	in_channels
op	37:38	0:0	8	>
water	37:40	0:0	8	out_channels
water	37:53	0:0	8	?
water	37:55	0:0	8	10000
water	37:61	0:0	8	:
water	37:63	0:0	8	0
water	37:64	0:0	8	)
water	37:65	0:0	8	;
water	38:16	0:0	8	in_chlayout
op	38:28	0:0	8	=
water	38:30	0:0	8	out_chlayout
op	38:43	0:0	8	=
water	38:45	0:0	8	0
water	38:46	0:0	8	;
water	41:12	0:0	8	}
for	43:12	54:12	6	(k = 0 ;k <FF_ARRAY_ELEMS (ch_subst );k ++)
forinit	43:17	43:22	7	k = 0 ;
water	43:17	0:0	8	k
op	43:19	0:0	8	=
water	43:21	0:0	8	0
water	43:22	0:0	8	;
cond	43:24	43:51	7	k <FF_ARRAY_ELEMS (ch_subst )
water	43:24	0:0	8	k
op	43:26	0:0	8	<
call	43:28	43:51	8	FF_ARRAY_ELEMS
arg	43:43	43:51	9	ch_subst
water	43:43	0:0	10	ch_subst
forexpr	43:54	43:55	7	k ++
water	43:54	0:0	8	k
op	43:55	0:0	8	++
stmts	43:59	54:12	7	
water	43:59	0:0	8	{
decl	44:16	44:46	8	uint64_t	cmp0
op	44:30	0:0	8	=
water	44:32	0:0	8	ch_subst
op	44:40	0:0	8	[
water	44:41	0:0	8	k
op	44:42	0:0	8	]
op	44:43	0:0	8	[
water	44:44	0:0	8	0
op	44:45	0:0	8	]
decl	45:16	45:46	8	uint64_t	cmp1
op	45:30	0:0	8	=
water	45:32	0:0	8	ch_subst
op	45:40	0:0	8	[
water	45:41	0:0	8	k
op	45:42	0:0	8	]
op	45:43	0:0	8	[
water	45:44	0:0	8	1
op	45:45	0:0	8	]
if	46:16	53:16	8	(( in_chlayout & cmp0 ) && ( ! ( out_chlayout & cmp0 ) ) && ( out_chlayout & cmp1 ) && ( ! ( in_chlayout & cmp1 ) ))
cond	46:20	47:68	9	( in_chlayout & cmp0 ) && ( ! ( out_chlayout & cmp0 ) ) && ( out_chlayout & cmp1 ) && ( ! ( in_chlayout & cmp1 ) )
water	46:20	0:0	10	(
water	46:22	0:0	10	in_chlayout
op	46:34	0:0	10	&
water	46:36	0:0	10	cmp0
water	46:40	0:0	10	)
op	46:42	0:0	10	&&
water	46:45	0:0	10	(
op	46:46	0:0	10	!
water	46:47	0:0	10	(
water	46:48	0:0	10	out_chlayout
op	46:61	0:0	10	&
water	46:63	0:0	10	cmp0
water	46:67	0:0	10	)
water	46:68	0:0	10	)
op	46:70	0:0	10	&&
water	47:20	0:0	10	(
water	47:21	0:0	10	out_chlayout
op	47:34	0:0	10	&
water	47:36	0:0	10	cmp1
water	47:40	0:0	10	)
op	47:42	0:0	10	&&
water	47:45	0:0	10	(
op	47:46	0:0	10	!
water	47:47	0:0	10	(
water	47:49	0:0	10	in_chlayout
op	47:61	0:0	10	&
water	47:63	0:0	10	cmp1
water	47:67	0:0	10	)
water	47:68	0:0	10	)
stmts	47:71	53:16	9	
water	47:71	0:0	10	{
water	48:20	0:0	10	in_chlayout
op	48:33	0:0	10	&=
water	48:36	0:0	10	~cmp0
water	48:41	0:0	10	;
water	49:20	0:0	10	out_chlayout
op	49:33	0:0	10	&=
water	49:36	0:0	10	~cmp1
water	49:41	0:0	10	;
water	52:20	0:0	10	score
op	52:26	0:0	10	+=
water	52:29	0:0	10	10
call	52:32	52:72	10	*av_get_channel_layout_nb_channels
arg	52:68	52:72	11	cmp1
water	52:68	0:0	12	cmp1
op	52:74	0:0	10	-
water	52:76	0:0	10	2
water	52:77	0:0	10	;
water	53:16	0:0	10	}
water	54:12	0:0	8	}
if	56:12	58:27	6	(( in_chlayout & AV_CH_LOW_FREQUENCY ) && ( out_chlayout & AV_CH_LOW_FREQUENCY ))
cond	56:17	57:51	7	( in_chlayout & AV_CH_LOW_FREQUENCY ) && ( out_chlayout & AV_CH_LOW_FREQUENCY )
water	56:17	0:0	8	(
water	56:18	0:0	8	in_chlayout
op	56:30	0:0	8	&
water	56:32	0:0	8	AV_CH_LOW_FREQUENCY
water	56:51	0:0	8	)
op	56:53	0:0	8	&&
water	57:16	0:0	8	(
water	57:17	0:0	8	out_chlayout
op	57:30	0:0	8	&
water	57:32	0:0	8	AV_CH_LOW_FREQUENCY
water	57:51	0:0	8	)
stmts	58:16	58:27	7	
water	58:16	0:0	8	score
op	58:22	0:0	8	+=
water	58:25	0:0	8	10
water	58:27	0:0	8	;
water	59:12	0:0	6	in_chlayout
op	59:25	0:0	6	&=
water	59:28	0:0	6	~AV_CH_LOW_FREQUENCY
water	59:48	0:0	6	;
water	60:12	0:0	6	out_chlayout
op	60:25	0:0	6	&=
water	60:28	0:0	6	~AV_CH_LOW_FREQUENCY
water	60:48	0:0	6	;
water	61:12	0:0	6	matched_channels
op	61:29	0:0	6	=
call	61:31	62:77	6	av_get_channel_layout_nb_channels
arg	61:65	62:77	7	in_chlayout&out_chlayout
water	61:65	0:0	8	in_chlayout
op	61:77	0:0	8	&
water	62:65	0:0	8	out_chlayout
water	62:78	0:0	6	;
water	63:12	0:0	6	extra_channels
op	63:29	0:0	6	=
call	63:31	64:79	6	av_get_channel_layout_nb_channels
arg	63:65	64:79	7	out_chlayout&(~in_chlayout)
water	63:65	0:0	8	out_chlayout
op	63:78	0:0	8	&
water	64:65	0:0	8	(
water	64:66	0:0	8	~in_chlayout
water	64:78	0:0	8	)
water	64:80	0:0	6	;
water	65:12	0:0	6	score
op	65:18	0:0	6	+=
water	65:21	0:0	6	10
op	65:24	0:0	6	*
water	65:26	0:0	6	matched_channels
op	65:43	0:0	6	-
water	65:45	0:0	6	5
op	65:47	0:0	6	*
water	65:49	0:0	6	extra_channels
water	65:63	0:0	6	;
if	66:12	71:12	6	(score > best_score || ( count_diff < best_count_diff && score == best_score ))
cond	66:16	67:68	7	score > best_score || ( count_diff < best_count_diff && score == best_score )
water	66:16	0:0	8	score
op	66:22	0:0	8	>
water	66:24	0:0	8	best_score
op	66:35	0:0	8	||
water	67:16	0:0	8	(
water	67:17	0:0	8	count_diff
op	67:28	0:0	8	<
water	67:30	0:0	8	best_count_diff
op	67:46	0:0	8	&&
water	67:49	0:0	8	score
op	67:55	0:0	8	==
water	67:58	0:0	8	best_score
water	67:68	0:0	8	)
stmts	67:71	71:12	7	
water	67:71	0:0	8	{
water	68:16	0:0	8	best_score
op	68:27	0:0	8	=
water	68:29	0:0	8	score
water	68:34	0:0	8	;
water	69:16	0:0	8	best_idx
op	69:27	0:0	8	=
water	69:29	0:0	8	j
water	69:30	0:0	8	;
water	70:16	0:0	8	best_count_diff
op	70:32	0:0	8	=
water	70:34	0:0	8	count_diff
water	70:44	0:0	8	;
water	71:12	0:0	8	}
water	72:8	0:0	6	}
call	73:8	73:32	4	av_assert0
arg	73:19	73:32	5	best_idx>=0
water	73:19	0:0	6	best_idx
op	73:28	0:0	6	>=
water	73:31	0:0	6	0
water	73:33	0:0	4	;
call	74:8	75:69	4	FFSWAP
arg	74:15	74:23	5	uint64_t
water	74:15	0:0	6	uint64_t
arg	74:25	74:72	5	outlink->in_channel_layouts->channel_layouts[0]
water	74:25	0:0	6	outlink
op	74:32	0:0	6	->
water	74:34	0:0	6	in_channel_layouts
op	74:52	0:0	6	->
water	74:54	0:0	6	channel_layouts
op	74:69	0:0	6	[
water	74:70	0:0	6	0
op	74:71	0:0	6	]
arg	75:15	75:69	5	outlink->in_channel_layouts->channel_layouts[best_idx]
water	75:15	0:0	6	outlink
op	75:22	0:0	6	->
water	75:24	0:0	6	in_channel_layouts
op	75:42	0:0	6	->
water	75:44	0:0	6	channel_layouts
op	75:59	0:0	6	[
water	75:60	0:0	6	best_idx
op	75:68	0:0	6	]
water	75:70	0:0	4	;
water	76:4	0:0	4	}

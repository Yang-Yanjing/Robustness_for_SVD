func	1:0	53:0	0	static int	opengl_draw
params	1:22	0:0	1	
param	1:23	1:41	2	AVFormatContext *	h
param	1:43	1:54	2	void *	input
param	1:56	1:67	2	int	repaint
param	1:69	1:79	2	int	is_pkt
stmnts	0:0	52:14	1	
decl	3:4	3:40	2	OpenGLContext	*opengl
op	3:26	0:0	2	=
water	3:28	0:0	2	h
op	3:29	0:0	2	->
water	3:31	0:0	2	priv_data
decl	4:4	4:62	2	enum AVPixelFormat	pix_fmt
op	4:31	0:0	2	=
water	4:33	0:0	2	h
op	4:34	0:0	2	->
water	4:36	0:0	2	streams
op	4:43	0:0	2	[
water	4:44	0:0	2	0
op	4:45	0:0	2	]
op	4:46	0:0	2	->
water	4:48	0:0	2	codec
op	4:53	0:0	2	->
water	4:55	0:0	2	pix_fmt
decl	5:4	5:65	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:64	3	av_pix_fmt_desc_get
arg	5:57	5:64	4	pix_fmt
water	5:57	0:0	5	pix_fmt
decl	6:4	6:11	2	int	ret
if	8:4	9:17	2	(! opengl -> no_window && ( ret =opengl_sdl_process_events (h ) ) < 0)
cond	8:8	8:69	3	! opengl -> no_window && ( ret =opengl_sdl_process_events (h ) ) < 0
op	8:8	0:0	4	!
water	8:9	0:0	4	opengl
op	8:15	0:0	4	->
water	8:17	0:0	4	no_window
op	8:27	0:0	4	&&
water	8:30	0:0	4	(
water	8:31	0:0	4	ret
op	8:35	0:0	4	=
call	8:37	8:64	4	opengl_sdl_process_events
arg	8:63	8:64	5	h
water	8:63	0:0	6	h
water	8:65	0:0	4	)
op	8:67	0:0	4	<
water	8:69	0:0	4	0
stmts	9:8	9:17	3	
goto	9:8	9:17	4	fail
water	9:13	0:0	5	fail
if	11:4	15:4	2	(opengl -> no_window && ( ret =avdevice_dev_to_app_control_message (h ,AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER ,NULL ,0 ) ) < 0)
cond	11:8	12:104	3	opengl -> no_window && ( ret =avdevice_dev_to_app_control_message (h ,AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER ,NULL ,0 ) ) < 0
water	11:8	0:0	4	opengl
op	11:14	0:0	4	->
water	11:16	0:0	4	no_window
op	11:26	0:0	4	&&
water	12:8	0:0	4	(
water	12:9	0:0	4	ret
op	12:13	0:0	4	=
call	12:15	12:99	4	avdevice_dev_to_app_control_message
arg	12:51	12:52	5	h
water	12:51	0:0	6	h
arg	12:54	12:89	5	AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER
water	12:54	0:0	6	AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER
arg	12:91	12:96	5	NULL
water	12:91	0:0	6	NULL
arg	12:98	12:99	5	0
water	12:98	0:0	6	0
water	12:100	0:0	4	)
op	12:102	0:0	4	<
water	12:104	0:0	4	0
stmts	12:107	15:4	3	
water	12:107	0:0	4	{
call	13:8	13:85	4	av_log
arg	13:15	13:21	5	opengl
water	13:15	0:0	6	opengl
arg	13:23	13:35	5	AV_LOG_ERROR
water	13:23	0:0	6	AV_LOG_ERROR
arg	13:37	13:85	5	"Application failed to prepare window buffer.\n"
water	13:37	0:0	6	"Application failed to prepare window buffer.\n"
water	13:86	0:0	4	;
goto	14:8	14:17	4	fail
water	14:13	0:0	5	fail
water	15:4	0:0	4	}
call	16:4	16:31	2	glClear
arg	16:12	16:31	3	GL_COLOR_BUFFER_BIT
water	16:12	0:0	4	GL_COLOR_BUFFER_BIT
water	16:32	0:0	2	;
if	17:4	27:4	2	(! repaint)
cond	17:8	17:9	3	! repaint
op	17:8	0:0	4	!
water	17:9	0:0	4	repaint
stmts	17:18	27:4	3	
water	17:18	0:0	4	{
if	18:8	19:49	4	(is_pkt)
cond	18:12	18:12	5	is_pkt
water	18:12	0:0	6	is_pkt
stmts	19:12	19:49	5	
call	19:12	19:48	6	glPixelStorei
arg	19:26	19:45	7	GL_UNPACK_ALIGNMENT
water	19:26	0:0	8	GL_UNPACK_ALIGNMENT
arg	19:47	19:48	7	1
water	19:47	0:0	8	1
water	19:49	0:0	6	;
water	20:8	0:0	4	LOAD_TEXTURE_DATA
water	20:25	0:0	4	(
water	20:26	0:0	4	0
water	20:27	0:0	4	,
water	20:29	0:0	4	0
water	20:30	0:0	4	)
if	21:8	26:8	4	(desc -> flags & AV_PIX_FMT_FLAG_PLANAR)
cond	21:12	21:26	5	desc -> flags & AV_PIX_FMT_FLAG_PLANAR
water	21:12	0:0	6	desc
op	21:16	0:0	6	->
water	21:18	0:0	6	flags
op	21:24	0:0	6	&
water	21:26	0:0	6	AV_PIX_FMT_FLAG_PLANAR
stmts	21:50	26:8	5	
water	21:50	0:0	6	{
water	22:12	0:0	6	LOAD_TEXTURE_DATA
water	22:29	0:0	6	(
water	22:30	0:0	6	1
water	22:31	0:0	6	,
water	22:33	0:0	6	1
water	22:34	0:0	6	)
water	23:12	0:0	6	LOAD_TEXTURE_DATA
water	23:29	0:0	6	(
water	23:30	0:0	6	2
water	23:31	0:0	6	,
water	23:33	0:0	6	1
water	23:34	0:0	6	)
if	24:12	25:16	6	(desc -> flags & AV_PIX_FMT_FLAG_ALPHA)
cond	24:16	24:30	7	desc -> flags & AV_PIX_FMT_FLAG_ALPHA
water	24:16	0:0	8	desc
op	24:20	0:0	8	->
water	24:22	0:0	8	flags
op	24:28	0:0	8	&
water	24:30	0:0	8	AV_PIX_FMT_FLAG_ALPHA
stmts	25:16	25:16	7	
water	25:16	0:0	8	LOAD_TEXTURE_DATA
water	25:33	0:0	6	(
water	25:34	0:0	6	3
water	25:35	0:0	6	,
water	25:37	0:0	6	0
water	25:38	0:0	6	)
water	26:8	0:0	6	}
water	27:4	0:0	4	}
water	28:4	0:0	2	ret
op	28:8	0:0	2	=
water	28:10	0:0	2	AVERROR_EXTERNAL
water	28:26	0:0	2	;
call	29:4	29:29	2	OPENGL_ERROR_CHECK
arg	29:23	29:29	3	opengl
water	29:23	0:0	4	opengl
water	29:30	0:0	2	;
if	30:4	31:17	2	(( ret =opengl_prepare (opengl ) ) < 0)
cond	30:8	30:41	3	( ret =opengl_prepare (opengl ) ) < 0
water	30:8	0:0	4	(
water	30:9	0:0	4	ret
op	30:13	0:0	4	=
call	30:15	30:36	4	opengl_prepare
arg	30:30	30:36	5	opengl
water	30:30	0:0	6	opengl
water	30:37	0:0	4	)
op	30:39	0:0	4	<
water	30:41	0:0	4	0
stmts	31:8	31:17	3	
goto	31:8	31:17	4	fail
water	31:13	0:0	5	fail
call	32:4	32:74	2	opengl->glprocs.glBindBuffer
arg	32:33	32:51	3	FF_GL_ARRAY_BUFFER
water	32:33	0:0	4	FF_GL_ARRAY_BUFFER
arg	32:53	32:74	3	opengl->vertex_buffer
water	32:53	0:0	4	opengl
op	32:59	0:0	4	->
water	32:61	0:0	4	vertex_buffer
water	32:75	0:0	2	;
call	33:4	33:81	2	opengl->glprocs.glBindBuffer
arg	33:33	33:59	3	FF_GL_ELEMENT_ARRAY_BUFFER
water	33:33	0:0	4	FF_GL_ELEMENT_ARRAY_BUFFER
arg	33:61	33:81	3	opengl->index_buffer
water	33:61	0:0	4	opengl
op	33:67	0:0	4	->
water	33:69	0:0	4	index_buffer
water	33:82	0:0	2	;
call	34:4	34:117	2	opengl->glprocs.glVertexAttribPointer
arg	34:42	34:65	3	opengl->position_attrib
water	34:42	0:0	4	opengl
op	34:48	0:0	4	->
water	34:50	0:0	4	position_attrib
arg	34:67	34:68	3	3
water	34:67	0:0	4	3
arg	34:70	34:78	3	GL_FLOAT
water	34:70	0:0	4	GL_FLOAT
arg	34:80	34:88	3	GL_FALSE
water	34:80	0:0	4	GL_FALSE
arg	34:90	34:114	3	sizeof(OpenGLVertexInfo)
op	34:90	0:0	4	sizeof
water	34:96	0:0	4	(
water	34:97	0:0	4	OpenGLVertexInfo
water	34:113	0:0	4	)
arg	34:116	34:117	3	0
water	34:116	0:0	4	0
water	34:118	0:0	2	;
call	35:4	35:69	2	opengl->glprocs.glEnableVertexAttribArray
arg	35:46	35:69	3	opengl->position_attrib
water	35:46	0:0	4	opengl
op	35:52	0:0	4	->
water	35:54	0:0	4	position_attrib
water	35:70	0:0	2	;
call	36:4	36:124	2	opengl->glprocs.glVertexAttribPointer
arg	36:42	36:71	3	opengl->texture_coords_attrib
water	36:42	0:0	4	opengl
op	36:48	0:0	4	->
water	36:50	0:0	4	texture_coords_attrib
arg	36:73	36:74	3	2
water	36:73	0:0	4	2
arg	36:76	36:84	3	GL_FLOAT
water	36:76	0:0	4	GL_FLOAT
arg	36:86	36:94	3	GL_FALSE
water	36:86	0:0	4	GL_FALSE
arg	36:96	36:120	3	sizeof(OpenGLVertexInfo)
op	36:96	0:0	4	sizeof
water	36:102	0:0	4	(
water	36:103	0:0	4	OpenGLVertexInfo
water	36:119	0:0	4	)
arg	36:122	36:124	3	12
water	36:122	0:0	4	12
water	36:125	0:0	2	;
call	37:4	37:75	2	opengl->glprocs.glEnableVertexAttribArray
arg	37:46	37:75	3	opengl->texture_coords_attrib
water	37:46	0:0	4	opengl
op	37:52	0:0	4	->
water	37:54	0:0	4	texture_coords_attrib
water	37:76	0:0	2	;
call	38:4	38:78	2	glDrawElements
arg	38:19	38:31	3	GL_TRIANGLES
water	38:19	0:0	4	GL_TRIANGLES
arg	38:33	38:56	3	FF_ARRAY_ELEMS(g_index)
call	38:33	38:55	4	FF_ARRAY_ELEMS
arg	38:48	38:55	5	g_index
water	38:48	0:0	6	g_index
arg	38:58	38:75	3	GL_UNSIGNED_SHORT
water	38:58	0:0	4	GL_UNSIGNED_SHORT
arg	38:77	38:78	3	0
water	38:77	0:0	4	0
water	38:79	0:0	2	;
water	39:4	0:0	2	ret
op	39:8	0:0	2	=
water	39:10	0:0	2	AVERROR_EXTERNAL
water	39:26	0:0	2	;
call	40:4	40:29	2	OPENGL_ERROR_CHECK
arg	40:23	40:29	3	opengl
water	40:23	0:0	4	opengl
water	40:30	0:0	2	;
if	42:4	43:28	2	(! opengl -> no_window)
cond	42:8	42:17	3	! opengl -> no_window
op	42:8	0:0	4	!
water	42:9	0:0	4	opengl
op	42:15	0:0	4	->
water	42:17	0:0	4	no_window
stmts	43:8	43:28	3	
call	43:8	43:27	4	SDL_GL_SwapBuffers
water	43:28	0:0	4	;
if	45:4	49:4	2	(opengl -> no_window && ( ret =avdevice_dev_to_app_control_message (h ,AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER ,NULL ,0 ) ) < 0)
cond	45:8	46:104	3	opengl -> no_window && ( ret =avdevice_dev_to_app_control_message (h ,AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER ,NULL ,0 ) ) < 0
water	45:8	0:0	4	opengl
op	45:14	0:0	4	->
water	45:16	0:0	4	no_window
op	45:26	0:0	4	&&
water	46:8	0:0	4	(
water	46:9	0:0	4	ret
op	46:13	0:0	4	=
call	46:15	46:99	4	avdevice_dev_to_app_control_message
arg	46:51	46:52	5	h
water	46:51	0:0	6	h
arg	46:54	46:89	5	AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER
water	46:54	0:0	6	AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER
arg	46:91	46:96	5	NULL
water	46:91	0:0	6	NULL
arg	46:98	46:99	5	0
water	46:98	0:0	6	0
water	46:100	0:0	4	)
op	46:102	0:0	4	<
water	46:104	0:0	4	0
stmts	46:107	49:4	3	
water	46:107	0:0	4	{
call	47:8	47:85	4	av_log
arg	47:15	47:21	5	opengl
water	47:15	0:0	6	opengl
arg	47:23	47:35	5	AV_LOG_ERROR
water	47:23	0:0	6	AV_LOG_ERROR
arg	47:37	47:85	5	"Application failed to display window buffer.\n"
water	47:37	0:0	6	"Application failed to display window buffer.\n"
water	47:86	0:0	4	;
goto	48:8	48:17	4	fail
water	48:13	0:0	5	fail
water	49:4	0:0	4	}
return	50:4	50:12	2	0
water	50:11	0:0	3	0
label	51:2	51:6	2	fail :
return	52:4	52:14	2	ret
water	52:11	0:0	3	ret

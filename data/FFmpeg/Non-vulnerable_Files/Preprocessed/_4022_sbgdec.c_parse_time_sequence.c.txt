func	1:0	51:0	0	static int	parse_time_sequence
params	1:30	0:0	1	
param	1:31	1:51	2	struct sbg_parser *	p
param	1:53	1:64	2	int	inblock
stmnts	0:0	50:12	1	
decl	3:4	3:27	2	struct sbg_timestamp	ts
decl	4:4	4:18	2	int64_t	rel_ts
decl	5:4	5:9	2	int	r
decl	6:4	6:62	2	struct sbg_fade	fade
op	6:25	0:0	2	=
water	6:27	0:0	2	{
water	6:29	0:0	2	SBG_FADE_SAME
water	6:42	0:0	2	,
water	6:44	0:0	2	SBG_FADE_SAME
water	6:57	0:0	2	,
water	6:59	0:0	2	0
water	6:61	0:0	2	}
decl	7:4	7:26	2	struct sbg_string	name
decl	8:4	8:32	2	struct sbg_script_tseq	*tseq
water	9:4	0:0	2	r
op	9:6	0:0	2	=
call	9:8	9:39	2	parse_timestamp
arg	9:24	9:25	3	p
water	9:24	0:0	4	p
arg	9:27	9:30	3	&ts
op	9:27	0:0	4	&
water	9:28	0:0	4	ts
arg	9:32	9:39	3	&rel_ts
op	9:32	0:0	4	&
water	9:33	0:0	4	rel_ts
water	9:40	0:0	2	;
if	10:4	11:16	2	(! r)
cond	10:8	10:9	3	! r
op	10:8	0:0	4	!
water	10:9	0:0	4	r
stmts	11:8	11:16	3	
return	11:8	11:16	4	0
water	11:15	0:0	5	0
if	12:4	13:16	2	(r < 0)
cond	12:8	12:12	3	r < 0
water	12:8	0:0	4	r
op	12:10	0:0	4	<
water	12:12	0:0	4	0
stmts	13:8	13:16	3	
return	13:8	13:16	4	r
water	13:15	0:0	5	r
if	14:4	19:4	2	(ts . type)
cond	14:8	14:11	3	ts . type
water	14:8	0:0	4	ts
op	14:10	0:0	4	.
water	14:11	0:0	4	type
stmts	14:17	19:4	3	
water	14:17	0:0	4	{
if	15:8	16:38	4	(inblock)
cond	15:12	15:12	5	inblock
water	15:12	0:0	6	inblock
stmts	16:12	16:38	5	
return	16:12	16:38	6	AVERROR_INVALIDDATA
water	16:19	0:0	7	AVERROR_INVALIDDATA
water	17:8	0:0	4	p
op	17:9	0:0	4	->
water	17:11	0:0	4	current_time
op	17:23	0:0	4	.
water	17:24	0:0	4	type
op	17:29	0:0	4	=
water	17:31	0:0	4	ts
op	17:33	0:0	4	.
water	17:34	0:0	4	type
water	17:38	0:0	4	;
water	18:8	0:0	4	p
op	18:9	0:0	4	->
water	18:11	0:0	4	current_time
op	18:23	0:0	4	.
water	18:24	0:0	4	t
op	18:29	0:0	4	=
water	18:31	0:0	4	ts
op	18:33	0:0	4	.
water	18:34	0:0	4	t
water	18:35	0:0	4	;
water	19:4	0:0	4	}
else	19:6	23:4	2
stmts	19:11	23:4	3	
if	19:11	23:4	4	(! inblock && ! p -> current_time . type)
cond	19:14	19:43	5	! inblock && ! p -> current_time . type
op	19:14	0:0	6	!
water	19:15	0:0	6	inblock
op	19:23	0:0	6	&&
op	19:26	0:0	6	!
water	19:27	0:0	6	p
op	19:28	0:0	6	->
water	19:30	0:0	6	current_time
op	19:42	0:0	6	.
water	19:43	0:0	6	type
stmts	19:49	23:4	5	
water	19:49	0:0	6	{
call	20:8	21:63	6	snprintf
arg	20:17	20:27	7	p->err_msg
water	20:17	0:0	8	p
op	20:18	0:0	8	->
water	20:20	0:0	8	err_msg
arg	20:29	20:47	7	sizeof(p->err_msg)
op	20:29	0:0	8	sizeof
water	20:35	0:0	8	(
water	20:36	0:0	8	p
op	20:37	0:0	8	->
water	20:39	0:0	8	err_msg
water	20:46	0:0	8	)
arg	21:17	21:63	7	"relative time without previous absolute time"
water	21:17	0:0	8	"relative time without previous absolute time"
water	21:64	0:0	6	;
return	22:8	22:34	6	AVERROR_INVALIDDATA
water	22:15	0:0	7	AVERROR_INVALIDDATA
water	23:4	0:0	6	}
water	24:4	0:0	2	ts
op	24:6	0:0	2	.
water	24:7	0:0	2	type
op	24:12	0:0	2	=
water	24:14	0:0	2	p
op	24:15	0:0	2	->
water	24:17	0:0	2	current_time
op	24:29	0:0	2	.
water	24:30	0:0	2	type
water	24:34	0:0	2	;
water	25:4	0:0	2	ts
op	25:6	0:0	2	.
water	25:7	0:0	2	t
op	25:12	0:0	2	=
water	25:14	0:0	2	p
op	25:15	0:0	2	->
water	25:17	0:0	2	current_time
op	25:29	0:0	2	.
water	25:30	0:0	2	t
op	25:32	0:0	2	+
water	25:34	0:0	2	rel_ts
water	25:40	0:0	2	;
water	26:4	0:0	2	r
op	26:6	0:0	2	=
call	26:8	26:27	2	parse_fade
arg	26:19	26:20	3	p
water	26:19	0:0	4	p
arg	26:22	26:27	3	&fade
op	26:22	0:0	4	&
water	26:23	0:0	4	fade
water	26:28	0:0	2	;
if	27:4	28:16	2	(r < 0)
cond	27:8	27:12	3	r < 0
water	27:8	0:0	4	r
op	27:10	0:0	4	<
water	27:12	0:0	4	0
stmts	28:8	28:16	3	
return	28:8	28:16	4	r
water	28:15	0:0	5	r
call	29:4	29:15	2	lex_space
arg	29:14	29:15	3	p
water	29:14	0:0	4	p
water	29:16	0:0	2	;
if	30:4	31:34	2	(!lex_name (p ,& name ))
cond	30:8	30:26	3	!lex_name (p ,& name )
op	30:8	0:0	4	!
call	30:9	30:26	4	lex_name
arg	30:18	30:19	5	p
water	30:18	0:0	6	p
arg	30:21	30:26	5	&name
op	30:21	0:0	6	&
water	30:22	0:0	6	name
stmts	31:8	31:34	3	
return	31:8	31:34	4	AVERROR_INVALIDDATA
water	31:15	0:0	5	AVERROR_INVALIDDATA
call	32:4	32:15	2	lex_space
arg	32:14	32:15	3	p
water	32:14	0:0	4	p
water	32:16	0:0	2	;
if	33:4	36:4	2	(lex_fixed (p ,"->" ,2 ))
cond	33:8	33:28	3	lex_fixed (p ,"->" ,2 )
call	33:8	33:28	4	lex_fixed
arg	33:18	33:19	5	p
water	33:18	0:0	6	p
arg	33:21	33:25	5	"->"
water	33:21	0:0	6	"->"
arg	33:27	33:28	5	2
water	33:27	0:0	6	2
stmts	33:31	36:4	3	
water	33:31	0:0	4	{
water	34:8	0:0	4	fade
op	34:12	0:0	4	.
water	34:13	0:0	4	slide
op	34:19	0:0	4	=
water	34:21	0:0	4	SBG_FADE_ADAPT
water	34:35	0:0	4	;
call	35:8	35:19	4	lex_space
arg	35:18	35:19	5	p
water	35:18	0:0	6	p
water	35:20	0:0	4	;
water	36:4	0:0	4	}
if	37:4	38:34	2	(!lex_line_end (p ))
cond	37:8	37:23	3	!lex_line_end (p )
op	37:8	0:0	4	!
call	37:9	37:23	4	lex_line_end
arg	37:22	37:23	5	p
water	37:22	0:0	6	p
stmts	38:8	38:34	3	
return	38:8	38:34	4	AVERROR_INVALIDDATA
water	38:15	0:0	5	AVERROR_INVALIDDATA
water	39:4	0:0	2	tseq
op	39:9	0:0	2	=
water	39:11	0:0	2	inblock
water	39:19	0:0	2	?
call	40:11	41:68	2	alloc_array_elem
arg	40:28	40:55	3	(void**)&p->scs.block_tseq
water	40:28	0:0	4	(
water	40:29	0:0	4	void
op	40:34	0:0	4	*
op	40:35	0:0	4	*
water	40:36	0:0	4	)
op	40:37	0:0	4	&
water	40:38	0:0	4	p
op	40:39	0:0	4	->
water	40:41	0:0	4	scs
op	40:44	0:0	4	.
water	40:45	0:0	4	block_tseq
arg	40:57	40:70	3	sizeof(*tseq)
op	40:57	0:0	4	sizeof
water	40:63	0:0	4	(
op	40:64	0:0	4	*
water	40:65	0:0	4	tseq
water	40:69	0:0	4	)
arg	41:28	41:45	3	&p->nb_block_tseq
op	41:28	0:0	4	&
water	41:29	0:0	4	p
op	41:30	0:0	4	->
water	41:32	0:0	4	nb_block_tseq
arg	41:47	41:68	3	&p->nb_block_tseq_max
op	41:47	0:0	4	&
water	41:48	0:0	4	p
op	41:49	0:0	4	->
water	41:51	0:0	4	nb_block_tseq_max
water	41:70	0:0	2	:
call	42:11	43:60	2	alloc_array_elem
arg	42:28	42:49	3	(void**)&p->scs.tseq
water	42:28	0:0	4	(
water	42:29	0:0	4	void
op	42:34	0:0	4	*
op	42:35	0:0	4	*
water	42:36	0:0	4	)
op	42:37	0:0	4	&
water	42:38	0:0	4	p
op	42:39	0:0	4	->
water	42:41	0:0	4	scs
op	42:44	0:0	4	.
water	42:45	0:0	4	tseq
arg	42:51	42:64	3	sizeof(*tseq)
op	42:51	0:0	4	sizeof
water	42:57	0:0	4	(
op	42:58	0:0	4	*
water	42:59	0:0	4	tseq
water	42:63	0:0	4	)
arg	43:28	43:43	3	&p->scs.nb_tseq
op	43:28	0:0	4	&
water	43:29	0:0	4	p
op	43:30	0:0	4	->
water	43:32	0:0	4	scs
op	43:35	0:0	4	.
water	43:36	0:0	4	nb_tseq
arg	43:45	43:60	3	&p->nb_tseq_max
op	43:45	0:0	4	&
water	43:46	0:0	4	p
op	43:47	0:0	4	->
water	43:49	0:0	4	nb_tseq_max
water	43:61	0:0	2	;
if	44:4	45:30	2	(! tseq)
cond	44:8	44:9	3	! tseq
op	44:8	0:0	4	!
water	44:9	0:0	4	tseq
stmts	45:8	45:30	3	
return	45:8	45:30	4	AVERROR(ENOMEM)
call	45:15	45:29	5	AVERROR
arg	45:23	45:29	6	ENOMEM
water	45:23	0:0	7	ENOMEM
water	46:4	0:0	2	tseq
op	46:8	0:0	2	->
water	46:10	0:0	2	ts
op	46:19	0:0	2	=
water	46:21	0:0	2	ts
water	46:23	0:0	2	;
water	47:4	0:0	2	tseq
op	47:8	0:0	2	->
water	47:10	0:0	2	name
op	47:19	0:0	2	=
water	47:21	0:0	2	name
op	47:25	0:0	2	.
water	47:26	0:0	2	s
water	47:27	0:0	2	;
water	48:4	0:0	2	tseq
op	48:8	0:0	2	->
water	48:10	0:0	2	name_len
op	48:19	0:0	2	=
water	48:21	0:0	2	name
op	48:25	0:0	2	.
water	48:26	0:0	2	e
op	48:28	0:0	2	-
water	48:30	0:0	2	name
op	48:34	0:0	2	.
water	48:35	0:0	2	s
water	48:36	0:0	2	;
water	49:4	0:0	2	tseq
op	49:8	0:0	2	->
water	49:10	0:0	2	fade
op	49:19	0:0	2	=
water	49:21	0:0	2	fade
water	49:25	0:0	2	;
return	50:4	50:12	2	1
water	50:11	0:0	3	1

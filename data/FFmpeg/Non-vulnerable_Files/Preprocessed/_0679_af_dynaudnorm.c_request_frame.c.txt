func	1:0	10:0	0	static int	request_frame
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	9:14	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:48	2	DynamicAudioNormalizerContext	*s
op	4:37	0:0	2	=
water	4:39	0:0	2	ctx
op	4:42	0:0	2	->
water	4:44	0:0	2	priv
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
water	6:4	0:0	2	ret
op	6:8	0:0	2	=
call	6:10	6:41	2	ff_request_frame
arg	6:27	6:41	3	ctx->inputs[0]
water	6:27	0:0	4	ctx
op	6:30	0:0	4	->
water	6:32	0:0	4	inputs
op	6:38	0:0	4	[
water	6:39	0:0	4	0
op	6:40	0:0	4	]
water	6:42	0:0	2	;
if	7:4	8:54	2	(ret == AVERROR_EOF && ! ctx -> is_disabled && s -> delay)
cond	7:8	7:54	3	ret == AVERROR_EOF && ! ctx -> is_disabled && s -> delay
water	7:8	0:0	4	ret
op	7:12	0:0	4	==
water	7:15	0:0	4	AVERROR_EOF
op	7:27	0:0	4	&&
op	7:30	0:0	4	!
water	7:31	0:0	4	ctx
op	7:34	0:0	4	->
water	7:36	0:0	4	is_disabled
op	7:48	0:0	4	&&
water	7:51	0:0	4	s
op	7:52	0:0	4	->
water	7:54	0:0	4	delay
stmts	8:8	8:54	3	
water	8:8	0:0	4	ret
op	8:12	0:0	4	=
call	8:14	8:53	4	flush_buffer
arg	8:27	8:28	5	s
water	8:27	0:0	6	s
arg	8:30	8:44	5	ctx->inputs[0]
water	8:30	0:0	6	ctx
op	8:33	0:0	6	->
water	8:35	0:0	6	inputs
op	8:41	0:0	6	[
water	8:42	0:0	6	0
op	8:43	0:0	6	]
arg	8:46	8:53	5	outlink
water	8:46	0:0	6	outlink
water	8:54	0:0	4	;
return	9:4	9:14	2	ret
water	9:11	0:0	3	ret

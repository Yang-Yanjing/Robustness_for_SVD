func	1:0	86:0	0	static void	count_frame_bits_fixed
params	1:34	0:0	1	
param	1:35	1:54	2	AC3EncodeContext *	s
stmnts	3:4	85:36	1	
water	3:4	0:0	2	static
water	3:11	0:0	2	const
water	3:17	0:0	2	int
water	3:21	0:0	2	frame_bits_inc
op	3:35	0:0	2	[
water	3:36	0:0	2	8
op	3:37	0:0	2	]
op	3:39	0:0	2	=
water	3:41	0:0	2	{
water	3:43	0:0	2	0
water	3:44	0:0	2	,
water	3:46	0:0	2	0
water	3:47	0:0	2	,
water	3:49	0:0	2	2
water	3:50	0:0	2	,
water	3:52	0:0	2	2
water	3:53	0:0	2	,
water	3:55	0:0	2	2
water	3:56	0:0	2	,
water	3:58	0:0	2	4
water	3:59	0:0	2	,
water	3:61	0:0	2	2
water	3:62	0:0	2	,
water	3:64	0:0	2	4
water	3:66	0:0	2	}
water	3:67	0:0	2	;
decl	4:4	4:11	2	int	blk
decl	5:4	5:18	2	int	frame_bits
water	15:4	0:0	2	frame_bits
op	15:15	0:0	2	=
water	15:17	0:0	2	16
water	15:19	0:0	2	;
if	16:4	44:4	2	(s -> eac3)
cond	16:8	16:11	3	s -> eac3
water	16:8	0:0	4	s
op	16:9	0:0	4	->
water	16:11	0:0	4	eac3
stmts	16:17	44:4	3	
water	16:17	0:0	4	{
water	18:8	0:0	4	frame_bits
op	18:19	0:0	4	+=
water	18:22	0:0	4	35
water	18:24	0:0	4	;
water	19:8	0:0	4	frame_bits
op	19:19	0:0	4	+=
water	19:22	0:0	4	1
op	19:24	0:0	4	+
water	19:26	0:0	4	1
water	19:27	0:0	4	;
if	20:8	21:24	4	(s -> num_blocks != 0 x6)
cond	20:12	20:30	5	s -> num_blocks != 0 x6
water	20:12	0:0	6	s
op	20:13	0:0	6	->
water	20:15	0:0	6	num_blocks
op	20:26	0:0	6	!=
water	20:29	0:0	6	0
water	20:30	0:0	6	x6
stmts	21:12	21:24	5	
water	21:12	0:0	6	frame_bits
op	21:22	0:0	6	++
water	21:24	0:0	6	;
water	22:8	0:0	4	frame_bits
op	22:18	0:0	4	++
water	22:20	0:0	4	;
if	24:8	25:27	4	(s -> num_blocks == 6)
cond	24:12	24:29	5	s -> num_blocks == 6
water	24:12	0:0	6	s
op	24:13	0:0	6	->
water	24:15	0:0	6	num_blocks
op	24:26	0:0	6	==
water	24:29	0:0	6	6
stmts	25:12	25:27	5	
water	25:12	0:0	6	frame_bits
op	25:23	0:0	6	+=
water	25:26	0:0	6	2
water	25:27	0:0	6	;
water	26:8	0:0	4	frame_bits
op	26:19	0:0	4	+=
water	26:22	0:0	4	10
water	26:24	0:0	4	;
if	28:8	29:45	4	(s -> use_frame_exp_strategy)
cond	28:12	28:15	5	s -> use_frame_exp_strategy
water	28:12	0:0	6	s
op	28:13	0:0	6	->
water	28:15	0:0	6	use_frame_exp_strategy
stmts	29:12	29:45	5	
water	29:12	0:0	6	frame_bits
op	29:23	0:0	6	+=
water	29:26	0:0	6	5
op	29:28	0:0	6	*
water	29:30	0:0	6	s
op	29:31	0:0	6	->
water	29:33	0:0	6	fbw_channels
water	29:45	0:0	6	;
else	30:8	31:61	4
stmts	31:12	31:61	5	
water	31:12	0:0	6	frame_bits
op	31:23	0:0	6	+=
water	31:26	0:0	6	s
op	31:27	0:0	6	->
water	31:29	0:0	6	num_blocks
op	31:40	0:0	6	*
water	31:42	0:0	6	2
op	31:44	0:0	6	*
water	31:46	0:0	6	s
op	31:47	0:0	6	->
water	31:49	0:0	6	fbw_channels
water	31:61	0:0	6	;
if	32:8	33:39	4	(s -> lfe_on)
cond	32:12	32:15	5	s -> lfe_on
water	32:12	0:0	6	s
op	32:13	0:0	6	->
water	32:15	0:0	6	lfe_on
stmts	33:12	33:39	5	
water	33:12	0:0	6	frame_bits
op	33:23	0:0	6	+=
water	33:26	0:0	6	s
op	33:27	0:0	6	->
water	33:29	0:0	6	num_blocks
water	33:39	0:0	6	;
if	35:8	36:24	4	(s -> num_blks_code != 0 x3)
cond	35:12	35:33	5	s -> num_blks_code != 0 x3
water	35:12	0:0	6	s
op	35:13	0:0	6	->
water	35:15	0:0	6	num_blks_code
op	35:29	0:0	6	!=
water	35:32	0:0	6	0
water	35:33	0:0	6	x3
stmts	36:12	36:24	5	
water	36:12	0:0	6	frame_bits
op	36:22	0:0	6	++
water	36:24	0:0	6	;
else	37:8	38:45	4
stmts	38:12	38:45	5	
water	38:12	0:0	6	frame_bits
op	38:23	0:0	6	+=
water	38:26	0:0	6	s
op	38:27	0:0	6	->
water	38:29	0:0	6	fbw_channels
op	38:42	0:0	6	*
water	38:44	0:0	6	5
water	38:45	0:0	6	;
water	40:8	0:0	4	frame_bits
op	40:19	0:0	4	+=
water	40:22	0:0	4	10
water	40:24	0:0	4	;
if	42:8	43:24	4	(s -> num_blocks != 1)
cond	42:12	42:29	5	s -> num_blocks != 1
water	42:12	0:0	6	s
op	42:13	0:0	6	->
water	42:15	0:0	6	num_blocks
op	42:26	0:0	6	!=
water	42:29	0:0	6	1
stmts	43:12	43:24	5	
water	43:12	0:0	6	frame_bits
op	43:22	0:0	6	++
water	43:24	0:0	6	;
water	44:4	0:0	4	}
else	44:6	47:4	2
stmts	44:11	47:4	3	
water	44:11	0:0	4	{
water	45:8	0:0	4	frame_bits
op	45:19	0:0	4	+=
water	45:22	0:0	4	49
water	45:24	0:0	4	;
water	46:8	0:0	4	frame_bits
op	46:19	0:0	4	+=
water	46:22	0:0	4	frame_bits_inc
op	46:36	0:0	4	[
water	46:37	0:0	4	s
op	46:38	0:0	4	->
water	46:40	0:0	4	channel_mode
op	46:52	0:0	4	]
water	46:53	0:0	4	;
water	47:4	0:0	4	}
for	49:4	80:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	49:9	49:16	3	blk = 0 ;
water	49:9	0:0	4	blk
op	49:13	0:0	4	=
water	49:15	0:0	4	0
water	49:16	0:0	4	;
cond	49:18	49:27	3	blk < s -> num_blocks
water	49:18	0:0	4	blk
op	49:22	0:0	4	<
water	49:24	0:0	4	s
op	49:25	0:0	4	->
water	49:27	0:0	4	num_blocks
forexpr	49:39	49:42	3	blk ++
water	49:39	0:0	4	blk
op	49:42	0:0	4	++
stmts	49:46	80:4	3	
water	49:46	0:0	4	{
if	50:8	55:8	4	(! s -> eac3)
cond	50:12	50:16	5	! s -> eac3
op	50:12	0:0	6	!
water	50:13	0:0	6	s
op	50:14	0:0	6	->
water	50:16	0:0	6	eac3
stmts	50:22	55:8	5	
water	50:22	0:0	6	{
water	52:12	0:0	6	frame_bits
op	52:23	0:0	6	+=
water	52:26	0:0	6	s
op	52:27	0:0	6	->
water	52:29	0:0	6	fbw_channels
water	52:41	0:0	6	;
water	54:12	0:0	6	frame_bits
op	54:23	0:0	6	+=
water	54:26	0:0	6	s
op	54:27	0:0	6	->
water	54:29	0:0	6	fbw_channels
water	54:41	0:0	6	;
water	55:8	0:0	6	}
water	57:8	0:0	4	frame_bits
op	57:18	0:0	4	++
water	57:20	0:0	4	;
if	59:8	60:24	4	(s -> eac3)
cond	59:12	59:15	5	s -> eac3
water	59:12	0:0	6	s
op	59:13	0:0	6	->
water	59:15	0:0	6	eac3
stmts	60:12	60:24	5	
water	60:12	0:0	6	frame_bits
op	60:22	0:0	6	++
water	60:24	0:0	6	;
if	61:8	70:8	4	(! s -> eac3)
cond	61:12	61:16	5	! s -> eac3
op	61:12	0:0	6	!
water	61:13	0:0	6	s
op	61:14	0:0	6	->
water	61:16	0:0	6	eac3
stmts	61:22	70:8	5	
water	61:22	0:0	6	{
water	63:12	0:0	6	frame_bits
op	63:23	0:0	6	+=
water	63:26	0:0	6	2
op	63:28	0:0	6	*
water	63:30	0:0	6	s
op	63:31	0:0	6	->
water	63:33	0:0	6	fbw_channels
water	63:45	0:0	6	;
if	64:12	65:28	6	(s -> lfe_on)
cond	64:16	64:19	7	s -> lfe_on
water	64:16	0:0	8	s
op	64:17	0:0	8	->
water	64:19	0:0	8	lfe_on
stmts	65:16	65:28	7	
water	65:16	0:0	8	frame_bits
op	65:26	0:0	8	++
water	65:28	0:0	8	;
water	67:12	0:0	6	frame_bits
op	67:22	0:0	6	++
water	67:24	0:0	6	;
if	68:12	69:47	6	(! blk)
cond	68:16	68:17	7	! blk
op	68:16	0:0	8	!
water	68:17	0:0	8	blk
stmts	69:16	69:47	7	
water	69:16	0:0	8	frame_bits
op	69:27	0:0	8	+=
water	69:30	0:0	8	2
op	69:32	0:0	8	+
water	69:34	0:0	8	2
op	69:36	0:0	8	+
water	69:38	0:0	8	2
op	69:40	0:0	8	+
water	69:42	0:0	8	2
op	69:44	0:0	8	+
water	69:46	0:0	8	3
water	69:47	0:0	8	;
water	70:8	0:0	6	}
if	72:8	73:24	4	(s -> eac3)
cond	72:12	72:15	5	s -> eac3
water	72:12	0:0	6	s
op	72:13	0:0	6	->
water	72:15	0:0	6	eac3
stmts	73:12	73:24	5	
water	73:12	0:0	6	frame_bits
op	73:22	0:0	6	++
water	73:24	0:0	6	;
if	74:8	79:8	4	(! s -> eac3)
cond	74:12	74:16	5	! s -> eac3
op	74:12	0:0	6	!
water	74:13	0:0	6	s
op	74:14	0:0	6	->
water	74:16	0:0	6	eac3
stmts	74:22	79:8	5	
water	74:22	0:0	6	{
water	76:12	0:0	6	frame_bits
op	76:22	0:0	6	++
water	76:24	0:0	6	;
water	78:12	0:0	6	frame_bits
op	78:22	0:0	6	++
water	78:24	0:0	6	;
water	79:8	0:0	6	}
water	80:4	0:0	4	}
water	82:4	0:0	2	frame_bits
op	82:14	0:0	2	++
water	82:16	0:0	2	;
water	84:4	0:0	2	frame_bits
op	84:15	0:0	2	+=
water	84:18	0:0	2	1
op	84:20	0:0	2	+
water	84:22	0:0	2	16
water	84:24	0:0	2	;
water	85:4	0:0	2	s
op	85:5	0:0	2	->
water	85:7	0:0	2	frame_bits_fixed
op	85:24	0:0	2	=
water	85:26	0:0	2	frame_bits
water	85:36	0:0	2	;

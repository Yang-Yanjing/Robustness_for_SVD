func	1:0	28:0	0	static int	mov_write_minf_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:65	2	MOVMuxContext *	mov
param	1:67	1:82	2	MOVTrack *	track
stmnts	0:0	27:31	1	
decl	3:4	3:31	2	int64_t	pos
op	3:16	0:0	2	=
call	3:18	3:30	3	avio_tell
arg	3:28	3:30	4	pb
water	3:28	0:0	5	pb
decl	4:4	4:11	2	int	ret
call	5:4	5:19	2	avio_wb32
arg	5:14	5:16	3	pb
water	5:14	0:0	4	pb
arg	5:18	5:19	3	0
water	5:18	0:0	4	0
water	5:20	0:0	2	;
call	6:4	6:27	2	ffio_wfourcc
arg	6:17	6:19	3	pb
water	6:17	0:0	4	pb
arg	6:21	6:27	3	"minf"
water	6:21	0:0	4	"minf"
water	6:28	0:0	2	;
if	7:4	8:30	2	(track -> enc -> codec_type == AVMEDIA_TYPE_VIDEO)
cond	7:8	7:34	3	track -> enc -> codec_type == AVMEDIA_TYPE_VIDEO
water	7:8	0:0	4	track
op	7:13	0:0	4	->
water	7:15	0:0	4	enc
op	7:18	0:0	4	->
water	7:20	0:0	4	codec_type
op	7:31	0:0	4	==
water	7:34	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	8:8	8:30	3	
call	8:8	8:29	4	mov_write_vmhd_tag
arg	8:27	8:29	5	pb
water	8:27	0:0	6	pb
water	8:30	0:0	4	;
else	9:4	10:30	2
stmts	9:9	10:30	3	
if	9:9	10:30	4	(track -> enc -> codec_type == AVMEDIA_TYPE_AUDIO)
cond	9:13	9:39	5	track -> enc -> codec_type == AVMEDIA_TYPE_AUDIO
water	9:13	0:0	6	track
op	9:18	0:0	6	->
water	9:20	0:0	6	enc
op	9:23	0:0	6	->
water	9:25	0:0	6	codec_type
op	9:36	0:0	6	==
water	9:39	0:0	6	AVMEDIA_TYPE_AUDIO
stmts	10:8	10:30	5	
call	10:8	10:29	6	mov_write_smhd_tag
arg	10:27	10:29	7	pb
water	10:27	0:0	8	pb
water	10:30	0:0	6	;
else	11:4	17:4	2
stmts	11:9	17:4	3	
if	11:9	17:4	4	(track -> enc -> codec_type == AVMEDIA_TYPE_SUBTITLE)
cond	11:13	11:39	5	track -> enc -> codec_type == AVMEDIA_TYPE_SUBTITLE
water	11:13	0:0	6	track
op	11:18	0:0	6	->
water	11:20	0:0	6	enc
op	11:23	0:0	6	->
water	11:25	0:0	6	codec_type
op	11:36	0:0	6	==
water	11:39	0:0	6	AVMEDIA_TYPE_SUBTITLE
stmts	11:62	17:4	5	
water	11:62	0:0	6	{
if	12:8	14:8	6	(track -> tag ==MKTAG ('t' ,'e' ,'x' ,'t' ) ||is_clcp_track (track ))
cond	12:12	12:71	7	track -> tag ==MKTAG ('t' ,'e' ,'x' ,'t' ) ||is_clcp_track (track )
water	12:12	0:0	8	track
op	12:17	0:0	8	->
water	12:19	0:0	8	tag
op	12:23	0:0	8	==
call	12:26	12:47	8	MKTAG
arg	12:32	12:35	9	't'
water	12:32	0:0	10	't'
arg	12:36	12:39	9	'e'
water	12:36	0:0	10	'e'
arg	12:40	12:43	9	'x'
water	12:40	0:0	10	'x'
arg	12:44	12:47	9	't'
water	12:44	0:0	10	't'
op	12:49	0:0	8	||
call	12:52	12:71	8	is_clcp_track
arg	12:66	12:71	9	track
water	12:66	0:0	10	track
stmts	12:74	14:8	7	
water	12:74	0:0	8	{
call	13:12	13:40	8	mov_write_gmhd_tag
arg	13:31	13:33	9	pb
water	13:31	0:0	10	pb
arg	13:35	13:40	9	track
water	13:35	0:0	10	track
water	13:41	0:0	8	;
water	14:8	0:0	8	}
else	14:10	16:8	6
stmts	14:15	16:8	7	
water	14:15	0:0	8	{
call	15:12	15:33	8	mov_write_nmhd_tag
arg	15:31	15:33	9	pb
water	15:31	0:0	10	pb
water	15:34	0:0	8	;
water	16:8	0:0	8	}
water	17:4	0:0	6	}
else	17:6	19:4	2
stmts	17:11	19:4	3	
if	17:11	19:4	4	(track -> tag ==MKTAG ('r' ,'t' ,'p' ,' ' ))
cond	17:15	17:50	5	track -> tag ==MKTAG ('r' ,'t' ,'p' ,' ' )
water	17:15	0:0	6	track
op	17:20	0:0	6	->
water	17:22	0:0	6	tag
op	17:26	0:0	6	==
call	17:29	17:50	6	MKTAG
arg	17:35	17:38	7	'r'
water	17:35	0:0	8	'r'
arg	17:39	17:42	7	't'
water	17:39	0:0	8	't'
arg	17:43	17:46	7	'p'
water	17:43	0:0	8	'p'
arg	17:47	17:50	7	' '
water	17:47	0:0	8	' '
stmts	17:53	19:4	5	
water	17:53	0:0	6	{
call	18:8	18:29	6	mov_write_hmhd_tag
arg	18:27	18:29	7	pb
water	18:27	0:0	8	pb
water	18:30	0:0	6	;
water	19:4	0:0	6	}
else	19:6	21:4	2
stmts	19:11	21:4	3	
if	19:11	21:4	4	(track -> tag ==MKTAG ('t' ,'m' ,'c' ,'d' ))
cond	19:15	19:50	5	track -> tag ==MKTAG ('t' ,'m' ,'c' ,'d' )
water	19:15	0:0	6	track
op	19:20	0:0	6	->
water	19:22	0:0	6	tag
op	19:26	0:0	6	==
call	19:29	19:50	6	MKTAG
arg	19:35	19:38	7	't'
water	19:35	0:0	8	't'
arg	19:39	19:42	7	'm'
water	19:39	0:0	8	'm'
arg	19:43	19:46	7	'c'
water	19:43	0:0	8	'c'
arg	19:47	19:50	7	'd'
water	19:47	0:0	8	'd'
stmts	19:53	21:4	5	
water	19:53	0:0	6	{
call	20:8	20:36	6	mov_write_gmhd_tag
arg	20:27	20:29	7	pb
water	20:27	0:0	8	pb
arg	20:31	20:36	7	track
water	20:31	0:0	8	track
water	20:37	0:0	6	;
water	21:4	0:0	6	}
if	22:4	23:36	2	(track -> mode == MODE_MOV)
cond	22:8	22:23	3	track -> mode == MODE_MOV
water	22:8	0:0	4	track
op	22:13	0:0	4	->
water	22:15	0:0	4	mode
op	22:20	0:0	4	==
water	22:23	0:0	4	MODE_MOV
stmts	23:8	23:36	3	
call	23:8	23:35	4	mov_write_hdlr_tag
arg	23:27	23:29	5	pb
water	23:27	0:0	6	pb
arg	23:31	23:35	5	NULL
water	23:31	0:0	6	NULL
water	23:36	0:0	4	;
call	24:4	24:25	2	mov_write_dinf_tag
arg	24:23	24:25	3	pb
water	24:23	0:0	4	pb
water	24:26	0:0	2	;
if	25:4	26:18	2	(( ret =mov_write_stbl_tag (pb ,mov ,track ) ) < 0)
cond	25:8	25:53	3	( ret =mov_write_stbl_tag (pb ,mov ,track ) ) < 0
water	25:8	0:0	4	(
water	25:9	0:0	4	ret
op	25:13	0:0	4	=
call	25:15	25:48	4	mov_write_stbl_tag
arg	25:34	25:36	5	pb
water	25:34	0:0	6	pb
arg	25:38	25:41	5	mov
water	25:38	0:0	6	mov
arg	25:43	25:48	5	track
water	25:43	0:0	6	track
water	25:49	0:0	4	)
op	25:51	0:0	4	<
water	25:53	0:0	4	0
stmts	26:8	26:18	3	
return	26:8	26:18	4	ret
water	26:15	0:0	5	ret
return	27:4	27:31	2	update_size(pb,pos)
call	27:11	27:30	3	update_size
arg	27:23	27:25	4	pb
water	27:23	0:0	5	pb
arg	27:27	27:30	4	pos
water	27:27	0:0	5	pos

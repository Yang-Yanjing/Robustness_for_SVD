func	1:15	30:0	0	int	fieldmatch_init
params	1:34	0:0	1	
param	1:35	1:55	2	AVFilterContext *	ctx
stmnts	0:0	29:12	1	
decl	3:4	3:43	2	const FieldMatchContext	*fm
op	3:32	0:0	2	=
water	3:34	0:0	2	ctx
op	3:37	0:0	2	->
water	3:39	0:0	2	priv
decl	4:4	9:5	2	AVFilterPad	pad
op	4:20	0:0	2	=
water	4:22	0:0	2	{
op	5:8	0:0	2	.
water	5:9	0:0	2	name
op	5:22	0:0	2	=
call	5:24	5:40	3	av_strdup
arg	5:34	5:40	4	"main"
water	5:34	0:0	5	"main"
water	5:41	0:0	2	,
op	6:8	0:0	2	.
water	6:9	0:0	2	type
op	6:22	0:0	2	=
water	6:24	0:0	2	AVMEDIA_TYPE_VIDEO
water	6:42	0:0	2	,
op	7:8	0:0	2	.
water	7:9	0:0	2	filter_frame
op	7:22	0:0	2	=
water	7:24	0:0	2	filter_frame
water	7:36	0:0	2	,
op	8:8	0:0	2	.
water	8:9	0:0	2	config_props
op	8:22	0:0	2	=
water	8:24	0:0	2	config_input
water	8:36	0:0	2	,
water	9:4	0:0	2	}
if	10:4	11:30	2	(! pad . name)
cond	10:8	10:13	3	! pad . name
op	10:8	0:0	4	!
water	10:9	0:0	4	pad
op	10:12	0:0	4	.
water	10:13	0:0	4	name
stmts	11:8	11:30	3	
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
call	12:4	12:41	2	ff_insert_inpad
arg	12:20	12:23	3	ctx
water	12:20	0:0	4	ctx
arg	12:25	12:35	3	INPUT_MAIN
water	12:25	0:0	4	INPUT_MAIN
arg	12:37	12:41	3	&pad
op	12:37	0:0	4	&
water	12:38	0:0	4	pad
water	12:42	0:0	2	;
if	13:4	19:4	2	(fm -> ppsrc)
cond	13:8	13:12	3	fm -> ppsrc
water	13:8	0:0	4	fm
op	13:10	0:0	4	->
water	13:12	0:0	4	ppsrc
stmts	13:19	19:4	3	
water	13:19	0:0	4	{
water	14:8	0:0	4	pad
op	14:11	0:0	4	.
water	14:12	0:0	4	name
op	14:17	0:0	4	=
call	14:19	14:40	4	av_strdup
arg	14:29	14:40	5	"clean_src"
water	14:29	0:0	6	"clean_src"
water	14:41	0:0	4	;
water	15:8	0:0	4	pad
op	15:11	0:0	4	.
water	15:12	0:0	4	config_props
op	15:25	0:0	4	=
water	15:27	0:0	4	NULL
water	15:31	0:0	4	;
if	16:8	17:34	4	(! pad . name)
cond	16:12	16:17	5	! pad . name
op	16:12	0:0	6	!
water	16:13	0:0	6	pad
op	16:16	0:0	6	.
water	16:17	0:0	6	name
stmts	17:12	17:34	5	
return	17:12	17:34	6	AVERROR(ENOMEM)
call	17:19	17:33	7	AVERROR
arg	17:27	17:33	8	ENOMEM
water	17:27	0:0	9	ENOMEM
call	18:8	18:49	4	ff_insert_inpad
arg	18:24	18:27	5	ctx
water	18:24	0:0	6	ctx
arg	18:29	18:43	5	INPUT_CLEANSRC
water	18:29	0:0	6	INPUT_CLEANSRC
arg	18:45	18:49	5	&pad
op	18:45	0:0	6	&
water	18:46	0:0	6	pad
water	18:50	0:0	4	;
water	19:4	0:0	4	}
if	20:4	24:4	2	(( fm -> blockx & ( fm -> blockx - 1 ) ) || ( fm -> blocky & ( fm -> blocky - 1 ) ))
cond	20:8	21:38	3	( fm -> blockx & ( fm -> blockx - 1 ) ) || ( fm -> blocky & ( fm -> blocky - 1 ) )
water	20:8	0:0	4	(
water	20:9	0:0	4	fm
op	20:11	0:0	4	->
water	20:13	0:0	4	blockx
op	20:20	0:0	4	&
water	20:22	0:0	4	(
water	20:23	0:0	4	fm
op	20:25	0:0	4	->
water	20:27	0:0	4	blockx
op	20:34	0:0	4	-
water	20:36	0:0	4	1
water	20:37	0:0	4	)
water	20:38	0:0	4	)
op	20:40	0:0	4	||
water	21:8	0:0	4	(
water	21:9	0:0	4	fm
op	21:11	0:0	4	->
water	21:13	0:0	4	blocky
op	21:20	0:0	4	&
water	21:22	0:0	4	(
water	21:23	0:0	4	fm
op	21:25	0:0	4	->
water	21:27	0:0	4	blocky
op	21:34	0:0	4	-
water	21:36	0:0	4	1
water	21:37	0:0	4	)
water	21:38	0:0	4	)
stmts	21:41	24:4	3	
water	21:41	0:0	4	{
call	22:8	22:85	4	av_log
arg	22:15	22:18	5	ctx
water	22:15	0:0	6	ctx
arg	22:20	22:32	5	AV_LOG_ERROR
water	22:20	0:0	6	AV_LOG_ERROR
arg	22:34	22:85	5	"blockx and blocky settings must be power of two\n"
water	22:34	0:0	6	"blockx and blocky settings must be power of two\n"
water	22:86	0:0	4	;
return	23:8	23:30	4	AVERROR(EINVAL)
call	23:15	23:29	5	AVERROR
arg	23:23	23:29	6	EINVAL
water	23:23	0:0	7	EINVAL
water	24:4	0:0	4	}
if	25:4	28:4	2	(fm -> combpel > fm -> blockx * fm -> blocky)
cond	25:8	25:39	3	fm -> combpel > fm -> blockx * fm -> blocky
water	25:8	0:0	4	fm
op	25:10	0:0	4	->
water	25:12	0:0	4	combpel
op	25:20	0:0	4	>
water	25:22	0:0	4	fm
op	25:24	0:0	4	->
water	25:26	0:0	4	blockx
op	25:33	0:0	4	*
water	25:35	0:0	4	fm
op	25:37	0:0	4	->
water	25:39	0:0	4	blocky
stmts	25:47	28:4	3	
water	25:47	0:0	4	{
call	26:8	26:92	4	av_log
arg	26:15	26:18	5	ctx
water	26:15	0:0	6	ctx
arg	26:20	26:32	5	AV_LOG_ERROR
water	26:20	0:0	6	AV_LOG_ERROR
arg	26:34	26:92	5	"Combed pixel should not be larger than blockx x blocky\n"
water	26:34	0:0	6	"Combed pixel should not be larger than blockx x blocky\n"
water	26:93	0:0	4	;
return	27:8	27:30	4	AVERROR(EINVAL)
call	27:15	27:29	5	AVERROR
arg	27:23	27:29	6	EINVAL
water	27:23	0:0	7	EINVAL
water	28:4	0:0	4	}
return	29:4	29:12	2	0
water	29:11	0:0	3	0

func	1:0	24:0	0	int	avfilter_graph_queue_command
params	1:32	0:0	1	
param	1:33	1:53	2	AVFilterGraph *	graph
param	1:55	1:73	2	const char *	target
param	1:75	1:94	2	const char *	command
param	1:96	1:111	2	const char *	arg
param	1:113	1:122	2	int	flags
param	1:124	1:133	2	double	ts
stmnts	0:0	23:12	1	
decl	3:4	3:9	2	int	i
if	4:4	5:16	2	(! graph)
cond	4:7	4:8	3	! graph
op	4:7	0:0	4	!
water	4:8	0:0	4	graph
stmts	5:8	5:16	3	
return	5:8	5:16	4	0
water	5:15	0:0	5	0
for	6:4	22:4	2	(i = 0 ;i < graph -> nb_filters;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:27	3	i < graph -> nb_filters
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	graph
op	6:25	0:0	4	->
water	6:27	0:0	4	nb_filters
forexpr	6:39	6:40	3	i ++
water	6:39	0:0	4	i
op	6:40	0:0	4	++
stmts	6:44	22:4	3	
water	6:44	0:0	4	{
decl	7:8	7:51	4	AVFilterContext	*filter
op	7:32	0:0	4	=
water	7:34	0:0	4	graph
op	7:39	0:0	4	->
water	7:41	0:0	4	filters
op	7:48	0:0	4	[
water	7:49	0:0	4	i
op	7:50	0:0	4	]
if	8:8	21:8	4	(filter && ( !strcmp (target ,"all" ) || !strcmp (target ,filter -> name ) || !strcmp (target ,filter -> filter -> name ) ))
cond	8:11	8:118	5	filter && ( !strcmp (target ,"all" ) || !strcmp (target ,filter -> name ) || !strcmp (target ,filter -> filter -> name ) )
water	8:11	0:0	6	filter
op	8:18	0:0	6	&&
water	8:21	0:0	6	(
op	8:22	0:0	6	!
call	8:23	8:43	6	strcmp
arg	8:30	8:36	7	target
water	8:30	0:0	8	target
arg	8:38	8:43	7	"all"
water	8:38	0:0	8	"all"
op	8:45	0:0	6	||
op	8:48	0:0	6	!
call	8:49	8:76	6	strcmp
arg	8:56	8:62	7	target
water	8:56	0:0	8	target
arg	8:64	8:76	7	filter->name
water	8:64	0:0	8	filter
op	8:70	0:0	8	->
water	8:72	0:0	8	name
op	8:78	0:0	6	||
op	8:81	0:0	6	!
call	8:82	8:117	6	strcmp
arg	8:89	8:95	7	target
water	8:89	0:0	8	target
arg	8:97	8:117	7	filter->filter->name
water	8:97	0:0	8	filter
op	8:103	0:0	8	->
water	8:105	0:0	8	filter
op	8:111	0:0	8	->
water	8:113	0:0	8	name
water	8:118	0:0	6	)
stmts	8:120	21:8	5	
water	8:120	0:0	6	{
decl	9:12	9:67	6	AVFilterCommand	**queue
op	9:36	0:0	6	=
op	9:38	0:0	6	&
water	9:39	0:0	6	filter
op	9:45	0:0	6	->
water	9:47	0:0	6	command_queue
water	9:60	0:0	6	,
decl	9:12	9:67	6	AVFilterCommand	*next
while	10:12	11:39	6	(* queue && ( * queue ) -> time <= ts)
cond	10:19	10:47	7	* queue && ( * queue ) -> time <= ts
op	10:19	0:0	8	*
water	10:20	0:0	8	queue
op	10:26	0:0	8	&&
water	10:29	0:0	8	(
op	10:30	0:0	8	*
water	10:31	0:0	8	queue
water	10:36	0:0	8	)
op	10:37	0:0	8	->
water	10:39	0:0	8	time
op	10:44	0:0	8	<=
water	10:47	0:0	8	ts
stmts	11:16	11:39	7	
water	11:16	0:0	8	queue
op	11:22	0:0	8	=
op	11:24	0:0	8	&
water	11:25	0:0	8	(
op	11:26	0:0	8	*
water	11:27	0:0	8	queue
water	11:32	0:0	8	)
op	11:33	0:0	8	->
water	11:35	0:0	8	next
water	11:39	0:0	8	;
water	12:12	0:0	6	next
op	12:17	0:0	6	=
op	12:19	0:0	6	*
water	12:20	0:0	6	queue
water	12:25	0:0	6	;
op	13:12	0:0	6	*
water	13:13	0:0	6	queue
op	13:19	0:0	6	=
call	13:21	13:55	6	av_mallocz
arg	13:32	13:55	7	sizeof(AVFilterCommand)
op	13:32	0:0	8	sizeof
water	13:38	0:0	8	(
water	13:39	0:0	8	AVFilterCommand
water	13:54	0:0	8	)
water	13:56	0:0	6	;
water	14:12	0:0	6	(
op	14:13	0:0	6	*
water	14:14	0:0	6	queue
water	14:19	0:0	6	)
op	14:20	0:0	6	->
water	14:22	0:0	6	command
op	14:30	0:0	6	=
call	14:32	14:49	6	av_strdup
arg	14:42	14:49	7	command
water	14:42	0:0	8	command
water	14:50	0:0	6	;
water	15:12	0:0	6	(
op	15:13	0:0	6	*
water	15:14	0:0	6	queue
water	15:19	0:0	6	)
op	15:20	0:0	6	->
water	15:22	0:0	6	arg
op	15:30	0:0	6	=
call	15:32	15:45	6	av_strdup
arg	15:42	15:45	7	arg
water	15:42	0:0	8	arg
water	15:46	0:0	6	;
water	16:12	0:0	6	(
op	16:13	0:0	6	*
water	16:14	0:0	6	queue
water	16:19	0:0	6	)
op	16:20	0:0	6	->
water	16:22	0:0	6	time
op	16:30	0:0	6	=
water	16:32	0:0	6	ts
water	16:34	0:0	6	;
water	17:12	0:0	6	(
op	17:13	0:0	6	*
water	17:14	0:0	6	queue
water	17:19	0:0	6	)
op	17:20	0:0	6	->
water	17:22	0:0	6	flags
op	17:30	0:0	6	=
water	17:32	0:0	6	flags
water	17:37	0:0	6	;
water	18:12	0:0	6	(
op	18:13	0:0	6	*
water	18:14	0:0	6	queue
water	18:19	0:0	6	)
op	18:20	0:0	6	->
water	18:22	0:0	6	next
op	18:30	0:0	6	=
water	18:32	0:0	6	next
water	18:36	0:0	6	;
if	19:12	20:24	6	(flags & AVFILTER_CMD_FLAG_ONE)
cond	19:15	19:23	7	flags & AVFILTER_CMD_FLAG_ONE
water	19:15	0:0	8	flags
op	19:21	0:0	8	&
water	19:23	0:0	8	AVFILTER_CMD_FLAG_ONE
stmts	20:16	20:24	7	
return	20:16	20:24	8	0
water	20:23	0:0	9	0
water	21:8	0:0	6	}
water	22:4	0:0	4	}
return	23:4	23:12	2	0
water	23:11	0:0	3	0

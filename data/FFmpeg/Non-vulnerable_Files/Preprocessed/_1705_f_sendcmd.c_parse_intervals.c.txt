func	1:0	41:0	0	static int	parse_intervals
params	1:26	0:0	1	
param	1:27	1:47	2	Interval * *	intervals
param	1:49	1:66	2	int *	nb_intervals
param	2:27	2:42	2	const char *	buf
param	2:44	2:57	2	void *	log_ctx
stmnts	0:0	40:12	1	
decl	4:4	4:26	2	int	interval_count
op	4:23	0:0	2	=
water	4:25	0:0	2	0
decl	5:4	5:18	2	int	ret
water	5:11	0:0	2	,
decl	5:4	5:18	2	int	n
op	5:15	0:0	2	=
water	5:17	0:0	2	0
op	6:4	0:0	2	*
water	6:5	0:0	2	intervals
op	6:15	0:0	2	=
water	6:17	0:0	2	NULL
water	6:21	0:0	2	;
op	7:4	0:0	2	*
water	7:5	0:0	2	nb_intervals
op	7:18	0:0	2	=
water	7:20	0:0	2	0
water	7:21	0:0	2	;
if	8:4	9:16	2	(! buf)
cond	8:8	8:9	3	! buf
op	8:8	0:0	4	!
water	8:9	0:0	4	buf
stmts	9:8	9:16	3	
return	9:8	9:16	4	0
water	9:15	0:0	5	0
while	10:4	39:4	2	(1)
cond	10:11	10:11	3	1
water	10:11	0:0	4	1
stmts	10:14	39:4	3	
water	10:14	0:0	4	{
decl	11:8	11:25	4	Interval	interval
call	12:8	12:26	4	skip_comments
arg	12:22	12:26	5	&buf
op	12:22	0:0	6	&
water	12:23	0:0	6	buf
water	12:27	0:0	4	;
if	13:8	14:17	4	(! ( * buf ))
cond	13:12	13:18	5	! ( * buf )
op	13:12	0:0	6	!
water	13:13	0:0	6	(
op	13:14	0:0	6	*
water	13:15	0:0	6	buf
water	13:18	0:0	6	)
stmts	14:12	14:17	5	
break	14:12	14:17	6	
if	15:8	16:22	4	(( ret =parse_interval (& interval ,interval_count ,& buf ,log_ctx ) ) < 0)
cond	15:12	15:79	5	( ret =parse_interval (& interval ,interval_count ,& buf ,log_ctx ) ) < 0
water	15:12	0:0	6	(
water	15:13	0:0	6	ret
op	15:17	0:0	6	=
call	15:19	15:74	6	parse_interval
arg	15:34	15:43	7	&interval
op	15:34	0:0	8	&
water	15:35	0:0	8	interval
arg	15:45	15:59	7	interval_count
water	15:45	0:0	8	interval_count
arg	15:61	15:65	7	&buf
op	15:61	0:0	8	&
water	15:62	0:0	8	buf
arg	15:67	15:74	7	log_ctx
water	15:67	0:0	8	log_ctx
water	15:75	0:0	6	)
op	15:77	0:0	6	<
water	15:79	0:0	6	0
stmts	16:12	16:22	5	
return	16:12	16:22	6	ret
water	16:19	0:0	7	ret
water	17:8	0:0	4	buf
op	17:12	0:0	4	+=
call	17:15	17:33	4	strspn
arg	17:22	17:25	5	buf
water	17:22	0:0	6	buf
arg	17:27	17:33	5	SPACES
water	17:27	0:0	6	SPACES
water	17:34	0:0	4	;
if	18:8	26:8	4	(* buf)
cond	18:12	18:13	5	* buf
op	18:12	0:0	6	*
water	18:13	0:0	6	buf
stmts	18:18	26:8	5	
water	18:18	0:0	6	{
if	19:12	24:12	6	(* buf != ';')
cond	19:16	19:24	7	* buf != ';'
op	19:16	0:0	8	*
water	19:17	0:0	8	buf
op	19:21	0:0	8	!=
water	19:24	0:0	8	';'
stmts	19:29	24:12	7	
water	19:29	0:0	8	{
call	20:16	22:37	8	av_log
arg	20:23	20:30	9	log_ctx
water	20:23	0:0	10	log_ctx
arg	20:32	20:44	9	AV_LOG_ERROR
water	20:32	0:0	10	AV_LOG_ERROR
arg	21:23	21:97	9	"Missing terminator or extraneous data found at the end of interval #%d\n"
water	21:23	0:0	10	"Missing terminator or extraneous data found at the end of interval #%d\n"
arg	22:23	22:37	9	interval_count
water	22:23	0:0	10	interval_count
water	22:38	0:0	8	;
return	23:16	23:38	8	AVERROR(EINVAL)
call	23:23	23:37	9	AVERROR
arg	23:31	23:37	10	EINVAL
water	23:31	0:0	11	EINVAL
water	24:12	0:0	8	}
water	25:12	0:0	6	buf
op	25:15	0:0	6	++
water	25:17	0:0	6	;
water	26:8	0:0	6	}
water	27:8	0:0	4	interval_count
op	27:22	0:0	4	++
water	27:24	0:0	4	;
if	29:8	37:8	4	(* nb_intervals == n)
cond	29:12	29:29	5	* nb_intervals == n
op	29:12	0:0	6	*
water	29:13	0:0	6	nb_intervals
op	29:26	0:0	6	==
water	29:29	0:0	6	n
stmts	29:32	37:8	5	
water	29:32	0:0	6	{
water	30:12	0:0	6	n
op	30:14	0:0	6	=
call	30:16	30:29	6	FFMAX
arg	30:22	30:24	7	16
water	30:22	0:0	8	16
arg	30:26	30:29	7	2*n
water	30:26	0:0	8	2
op	30:27	0:0	8	*
water	30:28	0:0	8	n
water	30:30	0:0	6	;
op	31:12	0:0	6	*
water	31:13	0:0	6	intervals
op	31:23	0:0	6	=
call	31:25	31:71	6	av_realloc_f
arg	31:38	31:48	7	*intervals
op	31:38	0:0	8	*
water	31:39	0:0	8	intervals
arg	31:50	31:51	7	n
water	31:50	0:0	8	n
arg	31:53	31:71	7	2*sizeof(Interval)
water	31:53	0:0	8	2
op	31:54	0:0	8	*
op	31:55	0:0	8	sizeof
water	31:61	0:0	8	(
water	31:62	0:0	8	Interval
water	31:70	0:0	8	)
water	31:72	0:0	6	;
if	32:12	36:12	6	(! * intervals)
cond	32:16	32:18	7	! * intervals
op	32:16	0:0	8	!
op	32:17	0:0	8	*
water	32:18	0:0	8	intervals
stmts	32:29	36:12	7	
water	32:29	0:0	8	{
call	33:16	34:65	8	av_log
arg	33:23	33:30	9	log_ctx
water	33:23	0:0	10	log_ctx
arg	33:32	33:44	9	AV_LOG_ERROR
water	33:32	0:0	10	AV_LOG_ERROR
arg	34:23	34:65	9	"Could not (re)allocate intervals array\n"
water	34:23	0:0	10	"Could not (re)allocate intervals array\n"
water	34:66	0:0	8	;
return	35:16	35:38	8	AVERROR(ENOMEM)
call	35:23	35:37	9	AVERROR
arg	35:31	35:37	10	ENOMEM
water	35:31	0:0	11	ENOMEM
water	36:12	0:0	8	}
water	37:8	0:0	6	}
water	38:8	0:0	4	(
op	38:9	0:0	4	*
water	38:10	0:0	4	intervals
water	38:19	0:0	4	)
op	38:20	0:0	4	[
water	38:21	0:0	4	(
op	38:22	0:0	4	*
water	38:23	0:0	4	nb_intervals
water	38:35	0:0	4	)
op	38:36	0:0	4	++
op	38:38	0:0	4	]
op	38:40	0:0	4	=
water	38:42	0:0	4	interval
water	38:50	0:0	4	;
water	39:4	0:0	4	}
return	40:4	40:12	2	0
water	40:11	0:0	3	0

func	1:0	46:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	45:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:31	2	PP7Context	*pp7
op	4:20	0:0	2	=
water	4:22	0:0	2	ctx
op	4:25	0:0	2	->
water	4:27	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:21	2	AVFrame	*out
op	6:17	0:0	2	=
water	6:19	0:0	2	in
decl	7:4	7:21	2	int	qp_stride
op	7:18	0:0	2	=
water	7:20	0:0	2	0
decl	8:4	8:28	2	uint8_t	*qp_table
op	8:22	0:0	2	=
water	8:24	0:0	2	NULL
if	9:4	10:75	2	(! pp7 -> qp)
cond	9:8	9:14	3	! pp7 -> qp
op	9:8	0:0	4	!
water	9:9	0:0	4	pp7
op	9:12	0:0	4	->
water	9:14	0:0	4	qp
stmts	10:8	10:75	3	
water	10:8	0:0	4	qp_table
op	10:17	0:0	4	=
call	10:19	10:74	4	av_frame_get_qp_table
arg	10:41	10:43	5	in
water	10:41	0:0	6	in
arg	10:45	10:55	5	&qp_stride
op	10:45	0:0	6	&
water	10:46	0:0	6	qp_stride
arg	10:57	10:74	5	&pp7->qscale_type
op	10:57	0:0	6	&
water	10:58	0:0	6	pp7
op	10:61	0:0	6	->
water	10:63	0:0	6	qscale_type
water	10:75	0:0	4	;
if	11:4	37:4	2	(! ctx -> is_disabled)
cond	11:8	11:14	3	! ctx -> is_disabled
op	11:8	0:0	4	!
water	11:9	0:0	4	ctx
op	11:12	0:0	4	->
water	11:14	0:0	4	is_disabled
stmts	11:27	37:4	3	
water	11:27	0:0	4	{
decl	12:8	12:59	4	const int	cw
op	12:21	0:0	4	=
call	12:23	12:58	5	FF_CEIL_RSHIFT
arg	12:38	12:47	6	inlink->w
water	12:38	0:0	7	inlink
op	12:44	0:0	7	->
water	12:46	0:0	7	w
arg	12:49	12:58	6	pp7->hsub
water	12:49	0:0	7	pp7
op	12:52	0:0	7	->
water	12:54	0:0	7	hsub
decl	13:8	13:59	4	const int	ch
op	13:21	0:0	4	=
call	13:23	13:58	5	FF_CEIL_RSHIFT
arg	13:38	13:47	6	inlink->h
water	13:38	0:0	7	inlink
op	13:44	0:0	7	->
water	13:46	0:0	7	h
arg	13:49	13:58	6	pp7->vsub
water	13:49	0:0	7	pp7
op	13:52	0:0	7	->
water	13:54	0:0	7	vsub
if	16:8	27:8	4	(!av_frame_is_writable (in ) || ( inlink -> w & 7 ) || ( inlink -> h & 7 ))
cond	16:12	16:74	5	!av_frame_is_writable (in ) || ( inlink -> w & 7 ) || ( inlink -> h & 7 )
op	16:12	0:0	6	!
call	16:13	16:36	6	av_frame_is_writable
arg	16:34	16:36	7	in
water	16:34	0:0	8	in
op	16:38	0:0	6	||
water	16:41	0:0	6	(
water	16:42	0:0	6	inlink
op	16:48	0:0	6	->
water	16:50	0:0	6	w
op	16:52	0:0	6	&
water	16:54	0:0	6	7
water	16:55	0:0	6	)
op	16:57	0:0	6	||
water	16:60	0:0	6	(
water	16:61	0:0	6	inlink
op	16:67	0:0	6	->
water	16:69	0:0	6	h
op	16:71	0:0	6	&
water	16:73	0:0	6	7
water	16:74	0:0	6	)
stmts	16:77	27:8	5	
water	16:77	0:0	6	{
decl	17:12	17:55	6	const int	aligned_w
op	17:32	0:0	6	=
call	17:34	17:54	7	FFALIGN
arg	17:42	17:51	8	inlink->w
water	17:42	0:0	9	inlink
op	17:48	0:0	9	->
water	17:50	0:0	9	w
arg	17:53	17:54	8	8
water	17:53	0:0	9	8
decl	18:12	18:55	6	const int	aligned_h
op	18:32	0:0	6	=
call	18:34	18:54	7	FFALIGN
arg	18:42	18:51	8	inlink->h
water	18:42	0:0	9	inlink
op	18:48	0:0	9	->
water	18:50	0:0	9	h
arg	18:53	18:54	8	8
water	18:53	0:0	9	8
water	19:12	0:0	6	out
op	19:16	0:0	6	=
call	19:18	19:67	6	ff_get_video_buffer
arg	19:38	19:45	7	outlink
water	19:38	0:0	8	outlink
arg	19:47	19:56	7	aligned_w
water	19:47	0:0	8	aligned_w
arg	19:58	19:67	7	aligned_h
water	19:58	0:0	8	aligned_h
water	19:68	0:0	6	;
if	20:12	23:12	6	(! out)
cond	20:16	20:17	7	! out
op	20:16	0:0	8	!
water	20:17	0:0	8	out
stmts	20:22	23:12	7	
water	20:22	0:0	8	{
call	21:16	21:33	8	av_frame_free
arg	21:30	21:33	9	&in
op	21:30	0:0	10	&
water	21:31	0:0	10	in
water	21:34	0:0	8	;
return	22:16	22:38	8	AVERROR(ENOMEM)
call	22:23	22:37	9	AVERROR
arg	22:31	22:37	10	ENOMEM
water	22:31	0:0	11	ENOMEM
water	23:12	0:0	8	}
call	24:12	24:39	6	av_frame_copy_props
arg	24:32	24:35	7	out
water	24:32	0:0	8	out
arg	24:37	24:39	7	in
water	24:37	0:0	8	in
water	24:40	0:0	6	;
water	25:12	0:0	6	out
op	25:15	0:0	6	->
water	25:17	0:0	6	width
op	25:23	0:0	6	=
water	25:25	0:0	6	in
op	25:27	0:0	6	->
water	25:29	0:0	6	width
water	25:34	0:0	6	;
water	26:12	0:0	6	out
op	26:15	0:0	6	->
water	26:17	0:0	6	height
op	26:24	0:0	6	=
water	26:26	0:0	6	in
op	26:28	0:0	6	->
water	26:30	0:0	6	height
water	26:36	0:0	6	;
water	27:8	0:0	6	}
if	28:8	36:8	4	(qp_table || pp7 -> qp)
cond	28:12	28:29	5	qp_table || pp7 -> qp
water	28:12	0:0	6	qp_table
op	28:21	0:0	6	||
water	28:24	0:0	6	pp7
op	28:27	0:0	6	->
water	28:29	0:0	6	qp
stmts	28:33	36:8	5	
water	28:33	0:0	6	{
call	29:12	30:63	6	filter
arg	29:19	29:22	7	pp7
water	29:19	0:0	8	pp7
arg	29:24	29:36	7	out->data[0]
water	29:24	0:0	8	out
op	29:27	0:0	8	->
water	29:29	0:0	8	data
op	29:33	0:0	8	[
water	29:34	0:0	8	0
op	29:35	0:0	8	]
arg	29:38	29:49	7	in->data[0]
water	29:38	0:0	8	in
op	29:40	0:0	8	->
water	29:42	0:0	8	data
op	29:46	0:0	8	[
water	29:47	0:0	8	0
op	29:48	0:0	8	]
arg	29:51	29:67	7	out->linesize[0]
water	29:51	0:0	8	out
op	29:54	0:0	8	->
water	29:56	0:0	8	linesize
op	29:64	0:0	8	[
water	29:65	0:0	8	0
op	29:66	0:0	8	]
arg	29:69	29:84	7	in->linesize[0]
water	29:69	0:0	8	in
op	29:71	0:0	8	->
water	29:73	0:0	8	linesize
op	29:81	0:0	8	[
water	29:82	0:0	8	0
op	29:83	0:0	8	]
arg	30:19	30:28	7	inlink->w
water	30:19	0:0	8	inlink
op	30:25	0:0	8	->
water	30:27	0:0	8	w
arg	30:30	30:39	7	inlink->h
water	30:30	0:0	8	inlink
op	30:36	0:0	8	->
water	30:38	0:0	8	h
arg	30:41	30:49	7	qp_table
water	30:41	0:0	8	qp_table
arg	30:51	30:60	7	qp_stride
water	30:51	0:0	8	qp_stride
arg	30:62	30:63	7	1
water	30:62	0:0	8	1
water	30:64	0:0	6	;
call	31:12	32:63	6	filter
arg	31:19	31:22	7	pp7
water	31:19	0:0	8	pp7
arg	31:24	31:36	7	out->data[1]
water	31:24	0:0	8	out
op	31:27	0:0	8	->
water	31:29	0:0	8	data
op	31:33	0:0	8	[
water	31:34	0:0	8	1
op	31:35	0:0	8	]
arg	31:38	31:49	7	in->data[1]
water	31:38	0:0	8	in
op	31:40	0:0	8	->
water	31:42	0:0	8	data
op	31:46	0:0	8	[
water	31:47	0:0	8	1
op	31:48	0:0	8	]
arg	31:51	31:67	7	out->linesize[1]
water	31:51	0:0	8	out
op	31:54	0:0	8	->
water	31:56	0:0	8	linesize
op	31:64	0:0	8	[
water	31:65	0:0	8	1
op	31:66	0:0	8	]
arg	31:69	31:84	7	in->linesize[1]
water	31:69	0:0	8	in
op	31:71	0:0	8	->
water	31:73	0:0	8	linesize
op	31:81	0:0	8	[
water	31:82	0:0	8	1
op	31:83	0:0	8	]
arg	32:19	32:21	7	cw
water	32:19	0:0	8	cw
arg	32:30	32:32	7	ch
water	32:30	0:0	8	ch
arg	32:41	32:49	7	qp_table
water	32:41	0:0	8	qp_table
arg	32:51	32:60	7	qp_stride
water	32:51	0:0	8	qp_stride
arg	32:62	32:63	7	0
water	32:62	0:0	8	0
water	32:64	0:0	6	;
call	33:12	34:63	6	filter
arg	33:19	33:22	7	pp7
water	33:19	0:0	8	pp7
arg	33:24	33:36	7	out->data[2]
water	33:24	0:0	8	out
op	33:27	0:0	8	->
water	33:29	0:0	8	data
op	33:33	0:0	8	[
water	33:34	0:0	8	2
op	33:35	0:0	8	]
arg	33:38	33:49	7	in->data[2]
water	33:38	0:0	8	in
op	33:40	0:0	8	->
water	33:42	0:0	8	data
op	33:46	0:0	8	[
water	33:47	0:0	8	2
op	33:48	0:0	8	]
arg	33:51	33:67	7	out->linesize[2]
water	33:51	0:0	8	out
op	33:54	0:0	8	->
water	33:56	0:0	8	linesize
op	33:64	0:0	8	[
water	33:65	0:0	8	2
op	33:66	0:0	8	]
arg	33:69	33:84	7	in->linesize[2]
water	33:69	0:0	8	in
op	33:71	0:0	8	->
water	33:73	0:0	8	linesize
op	33:81	0:0	8	[
water	33:82	0:0	8	2
op	33:83	0:0	8	]
arg	34:19	34:21	7	cw
water	34:19	0:0	8	cw
arg	34:30	34:32	7	ch
water	34:30	0:0	8	ch
arg	34:41	34:49	7	qp_table
water	34:41	0:0	8	qp_table
arg	34:51	34:60	7	qp_stride
water	34:51	0:0	8	qp_stride
arg	34:62	34:63	7	0
water	34:62	0:0	8	0
water	34:64	0:0	6	;
call	35:12	35:19	6	emms_c
water	35:20	0:0	6	;
water	36:8	0:0	6	}
water	37:4	0:0	4	}
if	38:4	44:4	2	(in != out)
cond	38:8	38:14	3	in != out
water	38:8	0:0	4	in
op	38:11	0:0	4	!=
water	38:14	0:0	4	out
stmts	38:19	44:4	3	
water	38:19	0:0	4	{
if	39:8	42:53	4	(in -> data [ 3 ])
cond	39:12	39:22	5	in -> data [ 3 ]
water	39:12	0:0	6	in
op	39:14	0:0	6	->
water	39:16	0:0	6	data
op	39:20	0:0	6	[
water	39:21	0:0	6	3
op	39:22	0:0	6	]
stmts	40:12	42:53	5	
call	40:12	42:52	6	av_image_copy_plane
arg	40:32	40:44	7	out->data[3]
water	40:32	0:0	8	out
op	40:35	0:0	8	->
water	40:37	0:0	8	data
op	40:41	0:0	8	[
water	40:42	0:0	8	3
op	40:43	0:0	8	]
arg	40:46	40:62	7	out->linesize[3]
water	40:46	0:0	8	out
op	40:49	0:0	8	->
water	40:51	0:0	8	linesize
op	40:59	0:0	8	[
water	40:60	0:0	8	3
op	40:61	0:0	8	]
arg	41:32	41:44	7	in->data[3]
water	41:32	0:0	8	in
op	41:35	0:0	8	->
water	41:37	0:0	8	data
op	41:41	0:0	8	[
water	41:42	0:0	8	3
op	41:43	0:0	8	]
arg	41:46	41:62	7	in->linesize[3]
water	41:46	0:0	8	in
op	41:49	0:0	8	->
water	41:51	0:0	8	linesize
op	41:59	0:0	8	[
water	41:60	0:0	8	3
op	41:61	0:0	8	]
arg	42:32	42:41	7	inlink->w
water	42:32	0:0	8	inlink
op	42:38	0:0	8	->
water	42:40	0:0	8	w
arg	42:43	42:52	7	inlink->h
water	42:43	0:0	8	inlink
op	42:49	0:0	8	->
water	42:51	0:0	8	h
water	42:53	0:0	6	;
call	43:8	43:25	4	av_frame_free
arg	43:22	43:25	5	&in
op	43:22	0:0	6	&
water	43:23	0:0	6	in
water	43:26	0:0	4	;
water	44:4	0:0	4	}
return	45:4	45:40	2	ff_filter_frame(outlink,out)
call	45:11	45:39	3	ff_filter_frame
arg	45:27	45:34	4	outlink
water	45:27	0:0	5	outlink
arg	45:36	45:39	4	out
water	45:36	0:0	5	out

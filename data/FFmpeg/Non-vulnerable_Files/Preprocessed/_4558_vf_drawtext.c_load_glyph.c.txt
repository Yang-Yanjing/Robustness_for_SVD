func	1:0	57:0	0	static int	load_glyph
params	1:21	0:0	1	
param	1:22	1:42	2	AVFilterContext *	ctx
param	1:44	1:61	2	Glyph * *	glyph_ptr
param	1:63	1:76	2	uint32_t	code
stmnts	0:0	56:14	1	
decl	3:4	3:34	2	DrawTextContext	*s
op	3:23	0:0	2	=
water	3:25	0:0	2	ctx
op	3:28	0:0	2	->
water	3:30	0:0	2	priv
decl	4:4	4:30	2	FT_BitmapGlyph	bitmapglyph
decl	5:4	5:16	2	Glyph	*glyph
decl	6:4	6:34	2	struct AVTreeNode	*node
op	6:28	0:0	2	=
water	6:30	0:0	2	NULL
decl	7:4	7:11	2	int	ret
if	9:4	10:30	2	(FT_Load_Char (s -> face ,code ,s -> ft_load_flags ))
cond	9:8	9:52	3	FT_Load_Char (s -> face ,code ,s -> ft_load_flags )
call	9:8	9:52	4	FT_Load_Char
arg	9:21	9:28	5	s->face
water	9:21	0:0	6	s
op	9:22	0:0	6	->
water	9:24	0:0	6	face
arg	9:30	9:34	5	code
water	9:30	0:0	6	code
arg	9:36	9:52	5	s->ft_load_flags
water	9:36	0:0	6	s
op	9:37	0:0	6	->
water	9:39	0:0	6	ft_load_flags
stmts	10:8	10:30	3	
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
water	11:4	0:0	2	glyph
op	11:10	0:0	2	=
call	11:12	11:37	2	av_mallocz
arg	11:23	11:37	3	sizeof(*glyph)
op	11:23	0:0	4	sizeof
water	11:29	0:0	4	(
op	11:30	0:0	4	*
water	11:31	0:0	4	glyph
water	11:36	0:0	4	)
water	11:38	0:0	2	;
if	12:4	15:4	2	(! glyph)
cond	12:8	12:9	3	! glyph
op	12:8	0:0	4	!
water	12:9	0:0	4	glyph
stmts	12:16	15:4	3	
water	12:16	0:0	4	{
water	13:8	0:0	4	ret
op	13:12	0:0	4	=
call	13:14	13:28	4	AVERROR
arg	13:22	13:28	5	ENOMEM
water	13:22	0:0	6	ENOMEM
water	13:29	0:0	4	;
goto	14:8	14:18	4	error
water	14:13	0:0	5	error
water	15:4	0:0	4	}
water	16:4	0:0	2	glyph
op	16:9	0:0	2	->
water	16:11	0:0	2	code
op	16:17	0:0	2	=
water	16:19	0:0	2	code
water	16:23	0:0	2	;
if	17:4	20:4	2	(FT_Get_Glyph (s -> face -> glyph ,& glyph -> glyph ))
cond	17:8	17:50	3	FT_Get_Glyph (s -> face -> glyph ,& glyph -> glyph )
call	17:8	17:50	4	FT_Get_Glyph
arg	17:21	17:35	5	s->face->glyph
water	17:21	0:0	6	s
op	17:22	0:0	6	->
water	17:24	0:0	6	face
op	17:28	0:0	6	->
water	17:30	0:0	6	glyph
arg	17:37	17:50	5	&glyph->glyph
op	17:37	0:0	6	&
water	17:38	0:0	6	glyph
op	17:43	0:0	6	->
water	17:45	0:0	6	glyph
stmts	17:53	20:4	3	
water	17:53	0:0	4	{
water	18:8	0:0	4	ret
op	18:12	0:0	4	=
call	18:14	18:28	4	AVERROR
arg	18:22	18:28	5	EINVAL
water	18:22	0:0	6	EINVAL
water	18:29	0:0	4	;
goto	19:8	19:18	4	error
water	19:13	0:0	5	error
water	20:4	0:0	4	}
if	21:4	30:4	2	(s -> borderw)
cond	21:8	21:11	3	s -> borderw
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	borderw
stmts	21:20	30:4	3	
water	21:20	0:0	4	{
water	22:8	0:0	4	glyph
op	22:13	0:0	4	->
water	22:15	0:0	4	border_glyph
op	22:28	0:0	4	=
water	22:30	0:0	4	glyph
op	22:35	0:0	4	->
water	22:37	0:0	4	glyph
water	22:42	0:0	4	;
if	23:8	27:8	4	(FT_Glyph_StrokeBorder (& glyph -> border_glyph ,s -> stroker ,0 ,0 ) ||FT_Glyph_To_Bitmap (& glyph -> border_glyph ,FT_RENDER_MODE_NORMAL ,0 ,1 ))
cond	23:12	24:80	5	FT_Glyph_StrokeBorder (& glyph -> border_glyph ,s -> stroker ,0 ,0 ) ||FT_Glyph_To_Bitmap (& glyph -> border_glyph ,FT_RENDER_MODE_NORMAL ,0 ,1 )
call	23:12	23:72	6	FT_Glyph_StrokeBorder
arg	23:34	23:54	7	&glyph->border_glyph
op	23:34	0:0	8	&
water	23:35	0:0	8	glyph
op	23:40	0:0	8	->
water	23:42	0:0	8	border_glyph
arg	23:56	23:66	7	s->stroker
water	23:56	0:0	8	s
op	23:57	0:0	8	->
water	23:59	0:0	8	stroker
arg	23:68	23:69	7	0
water	23:68	0:0	8	0
arg	23:71	23:72	7	0
water	23:71	0:0	8	0
op	23:74	0:0	6	||
call	24:12	24:80	6	FT_Glyph_To_Bitmap
arg	24:31	24:51	7	&glyph->border_glyph
op	24:31	0:0	8	&
water	24:32	0:0	8	glyph
op	24:37	0:0	8	->
water	24:39	0:0	8	border_glyph
arg	24:53	24:74	7	FT_RENDER_MODE_NORMAL
water	24:53	0:0	8	FT_RENDER_MODE_NORMAL
arg	24:76	24:77	7	0
water	24:76	0:0	8	0
arg	24:79	24:80	7	1
water	24:79	0:0	8	1
stmts	24:83	27:8	5	
water	24:83	0:0	6	{
water	25:12	0:0	6	ret
op	25:16	0:0	6	=
water	25:18	0:0	6	AVERROR_EXTERNAL
water	25:34	0:0	6	;
goto	26:12	26:22	6	error
water	26:17	0:0	7	error
water	27:8	0:0	6	}
water	28:8	0:0	4	bitmapglyph
op	28:20	0:0	4	=
water	28:22	0:0	4	(
water	28:23	0:0	4	FT_BitmapGlyph
water	28:37	0:0	4	)
water	28:39	0:0	4	glyph
op	28:44	0:0	4	->
water	28:46	0:0	4	border_glyph
water	28:58	0:0	4	;
water	29:8	0:0	4	glyph
op	29:13	0:0	4	->
water	29:15	0:0	4	border_bitmap
op	29:29	0:0	4	=
water	29:31	0:0	4	bitmapglyph
op	29:42	0:0	4	->
water	29:44	0:0	4	bitmap
water	29:50	0:0	4	;
water	30:4	0:0	4	}
if	31:4	34:4	2	(FT_Glyph_To_Bitmap (& glyph -> glyph ,FT_RENDER_MODE_NORMAL ,0 ,1 ))
cond	31:8	31:69	3	FT_Glyph_To_Bitmap (& glyph -> glyph ,FT_RENDER_MODE_NORMAL ,0 ,1 )
call	31:8	31:69	4	FT_Glyph_To_Bitmap
arg	31:27	31:40	5	&glyph->glyph
op	31:27	0:0	6	&
water	31:28	0:0	6	glyph
op	31:33	0:0	6	->
water	31:35	0:0	6	glyph
arg	31:42	31:63	5	FT_RENDER_MODE_NORMAL
water	31:42	0:0	6	FT_RENDER_MODE_NORMAL
arg	31:65	31:66	5	0
water	31:65	0:0	6	0
arg	31:68	31:69	5	1
water	31:68	0:0	6	1
stmts	31:72	34:4	3	
water	31:72	0:0	4	{
water	32:8	0:0	4	ret
op	32:12	0:0	4	=
water	32:14	0:0	4	AVERROR_EXTERNAL
water	32:30	0:0	4	;
goto	33:8	33:18	4	error
water	33:13	0:0	5	error
water	34:4	0:0	4	}
water	35:4	0:0	2	bitmapglyph
op	35:16	0:0	2	=
water	35:18	0:0	2	(
water	35:19	0:0	2	FT_BitmapGlyph
water	35:33	0:0	2	)
water	35:35	0:0	2	glyph
op	35:40	0:0	2	->
water	35:42	0:0	2	glyph
water	35:47	0:0	2	;
water	36:4	0:0	2	glyph
op	36:9	0:0	2	->
water	36:11	0:0	2	bitmap
op	36:23	0:0	2	=
water	36:25	0:0	2	bitmapglyph
op	36:36	0:0	2	->
water	36:38	0:0	2	bitmap
water	36:44	0:0	2	;
water	37:4	0:0	2	glyph
op	37:9	0:0	2	->
water	37:11	0:0	2	bitmap_left
op	37:23	0:0	2	=
water	37:25	0:0	2	bitmapglyph
op	37:36	0:0	2	->
water	37:38	0:0	2	left
water	37:42	0:0	2	;
water	38:4	0:0	2	glyph
op	38:9	0:0	2	->
water	38:11	0:0	2	bitmap_top
op	38:23	0:0	2	=
water	38:25	0:0	2	bitmapglyph
op	38:36	0:0	2	->
water	38:38	0:0	2	top
water	38:41	0:0	2	;
water	39:4	0:0	2	glyph
op	39:9	0:0	2	->
water	39:11	0:0	2	advance
op	39:23	0:0	2	=
water	39:25	0:0	2	s
op	39:26	0:0	2	->
water	39:28	0:0	2	face
op	39:32	0:0	2	->
water	39:34	0:0	2	glyph
op	39:39	0:0	2	->
water	39:41	0:0	2	advance
op	39:48	0:0	2	.
water	39:49	0:0	2	x
op	39:51	0:0	2	>>
water	39:54	0:0	2	6
water	39:55	0:0	2	;
call	41:4	41:70	2	FT_Glyph_Get_CBox
arg	41:22	41:34	3	glyph->glyph
water	41:22	0:0	4	glyph
op	41:27	0:0	4	->
water	41:29	0:0	4	glyph
arg	41:36	41:56	3	ft_glyph_bbox_pixels
water	41:36	0:0	4	ft_glyph_bbox_pixels
arg	41:58	41:70	3	&glyph->bbox
op	41:58	0:0	4	&
water	41:59	0:0	4	glyph
op	41:64	0:0	4	->
water	41:66	0:0	4	bbox
water	41:71	0:0	2	;
if	43:4	46:4	2	(! ( node =av_tree_node_alloc ( ) ))
cond	43:8	43:37	3	! ( node =av_tree_node_alloc ( ) )
op	43:8	0:0	4	!
water	43:9	0:0	4	(
water	43:10	0:0	4	node
op	43:15	0:0	4	=
call	43:17	43:36	4	av_tree_node_alloc
water	43:37	0:0	4	)
stmts	43:40	46:4	3	
water	43:40	0:0	4	{
water	44:8	0:0	4	ret
op	44:12	0:0	4	=
call	44:14	44:28	4	AVERROR
arg	44:22	44:28	5	ENOMEM
water	44:22	0:0	6	ENOMEM
water	44:29	0:0	4	;
goto	45:8	45:18	4	error
water	45:13	0:0	5	error
water	46:4	0:0	4	}
call	47:4	47:54	2	av_tree_insert
arg	47:19	47:29	3	&s->glyphs
op	47:19	0:0	4	&
water	47:20	0:0	4	s
op	47:21	0:0	4	->
water	47:23	0:0	4	glyphs
arg	47:31	47:36	3	glyph
water	47:31	0:0	4	glyph
arg	47:38	47:47	3	glyph_cmp
water	47:38	0:0	4	glyph_cmp
arg	47:49	47:54	3	&node
op	47:49	0:0	4	&
water	47:50	0:0	4	node
water	47:55	0:0	2	;
if	48:4	49:26	2	(glyph_ptr)
cond	48:8	48:8	3	glyph_ptr
water	48:8	0:0	4	glyph_ptr
stmts	49:8	49:26	3	
op	49:8	0:0	4	*
water	49:9	0:0	4	glyph_ptr
op	49:19	0:0	4	=
water	49:21	0:0	4	glyph
water	49:26	0:0	4	;
return	50:4	50:12	2	0
water	50:11	0:0	3	0
label	51:0	51:5	2	error :
if	52:4	53:31	2	(glyph)
cond	52:8	52:8	3	glyph
water	52:8	0:0	4	glyph
stmts	53:8	53:31	3	
call	53:8	53:30	4	av_freep
arg	53:17	53:30	5	&glyph->glyph
op	53:17	0:0	6	&
water	53:18	0:0	6	glyph
op	53:23	0:0	6	->
water	53:25	0:0	6	glyph
water	53:31	0:0	4	;
call	54:4	54:19	2	av_freep
arg	54:13	54:19	3	&glyph
op	54:13	0:0	4	&
water	54:14	0:0	4	glyph
water	54:20	0:0	2	;
call	55:4	55:18	2	av_freep
arg	55:13	55:18	3	&node
op	55:13	0:0	4	&
water	55:14	0:0	4	node
water	55:19	0:0	2	;
return	56:4	56:14	2	ret
water	56:11	0:0	3	ret

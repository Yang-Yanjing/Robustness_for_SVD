decl	1:0	1:25	0	char	*videotoolbox_pixfmt
func	2:0	56:0	0	static int	videotoolbox_retrieve_data
params	2:37	0:0	1	
param	2:38	2:55	2	AVCodecContext *	s
param	2:57	2:71	2	AVFrame *	frame
stmnts	0:0	55:12	1	
decl	4:4	4:32	2	InputStream	*ist
op	4:21	0:0	2	=
water	4:23	0:0	2	s
op	4:24	0:0	2	->
water	4:26	0:0	2	opaque
decl	5:4	5:37	2	VTContext	*vt
op	5:19	0:0	2	=
water	5:21	0:0	2	ist
op	5:24	0:0	2	->
water	5:26	0:0	2	hwaccel_ctx
decl	6:4	6:62	2	CVPixelBufferRef	pixbuf
op	6:28	0:0	2	=
water	6:30	0:0	2	(
water	6:31	0:0	2	CVPixelBufferRef
water	6:47	0:0	2	)
water	6:48	0:0	2	frame
op	6:53	0:0	2	->
water	6:55	0:0	2	data
op	6:59	0:0	2	[
water	6:60	0:0	2	3
op	6:61	0:0	2	]
decl	7:4	7:65	2	OSType	pixel_format
op	7:24	0:0	2	=
call	7:26	7:64	3	CVPixelBufferGetPixelFormatType
arg	7:58	7:64	4	pixbuf
water	7:58	0:0	5	pixbuf
decl	8:4	8:16	2	CVReturn	err
decl	9:4	9:28	2	uint8_t	*data[4]
op	9:21	0:0	2	=
water	9:23	0:0	2	{
water	9:25	0:0	2	0
water	9:27	0:0	2	}
decl	10:4	10:27	2	int	linesize[4]
op	10:20	0:0	2	=
water	10:22	0:0	2	{
water	10:24	0:0	2	0
water	10:26	0:0	2	}
decl	11:4	11:22	2	int	planes
water	11:14	0:0	2	,
decl	11:4	11:22	2	int	ret
water	11:19	0:0	2	,
decl	11:4	11:22	2	int	i
call	12:4	12:32	2	av_frame_unref
arg	12:19	12:32	3	vt->tmp_frame
water	12:19	0:0	4	vt
op	12:21	0:0	4	->
water	12:23	0:0	4	tmp_frame
water	12:33	0:0	2	;
switch	13:4	25:4	2	(pixel_format)
cond	13:12	13:12	3	pixel_format
water	13:12	0:0	4	pixel_format
stmts	13:26	25:4	3	
water	13:26	0:0	4	{
label	14:4	14:44	4	case kCVPixelFormatType_420YpCbCr8Planar :
water	14:46	0:0	4	vt
op	14:48	0:0	4	->
water	14:50	0:0	4	tmp_frame
op	14:59	0:0	4	->
water	14:61	0:0	4	format
op	14:68	0:0	4	=
water	14:70	0:0	4	AV_PIX_FMT_YUV420P
water	14:88	0:0	4	;
break	14:90	14:95	4	
label	15:4	15:38	4	case kCVPixelFormatType_422YpCbCr8 :
water	15:46	0:0	4	vt
op	15:48	0:0	4	->
water	15:50	0:0	4	tmp_frame
op	15:59	0:0	4	->
water	15:61	0:0	4	format
op	15:68	0:0	4	=
water	15:70	0:0	4	AV_PIX_FMT_UYVY422
water	15:88	0:0	4	;
break	15:90	15:95	4	
label	16:4	16:34	4	case kCVPixelFormatType_32BGRA :
water	16:46	0:0	4	vt
op	16:48	0:0	4	->
water	16:50	0:0	4	tmp_frame
op	16:59	0:0	4	->
water	16:61	0:0	4	format
op	16:68	0:0	4	=
water	16:70	0:0	4	AV_PIX_FMT_BGRA
water	16:85	0:0	4	;
break	16:87	16:92	4	
label	18:4	18:56	4	case kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange :
water	18:58	0:0	4	vt
op	18:60	0:0	4	->
water	18:62	0:0	4	tmp_frame
op	18:71	0:0	4	->
water	18:73	0:0	4	format
op	18:80	0:0	4	=
water	18:82	0:0	4	AV_PIX_FMT_NV12
water	18:97	0:0	4	;
break	18:99	18:104	4	
label	20:4	20:11	4	default :
call	21:8	23:63	4	av_log
arg	21:15	21:19	5	NULL
water	21:15	0:0	6	NULL
arg	21:21	21:33	5	AV_LOG_ERROR
water	21:21	0:0	6	AV_LOG_ERROR
arg	22:15	22:51	5	"%s: Unsupported pixel format: %s\n"
water	22:15	0:0	6	"%s: Unsupported pixel format: %s\n"
arg	23:15	23:42	5	av_fourcc2str(s->codec_tag)
call	23:15	23:41	6	av_fourcc2str
arg	23:29	23:41	7	s->codec_tag
water	23:29	0:0	8	s
op	23:30	0:0	8	->
water	23:32	0:0	8	codec_tag
arg	23:44	23:63	5	videotoolbox_pixfmt
water	23:44	0:0	6	videotoolbox_pixfmt
water	23:64	0:0	4	;
return	24:8	24:30	4	AVERROR(ENOSYS)
call	24:15	24:29	5	AVERROR
arg	24:23	24:29	6	ENOSYS
water	24:23	0:0	7	ENOSYS
water	25:4	0:0	4	}
water	26:4	0:0	2	vt
op	26:6	0:0	2	->
water	26:8	0:0	2	tmp_frame
op	26:17	0:0	2	->
water	26:19	0:0	2	width
op	26:26	0:0	2	=
water	26:28	0:0	2	frame
op	26:33	0:0	2	->
water	26:35	0:0	2	width
water	26:40	0:0	2	;
water	27:4	0:0	2	vt
op	27:6	0:0	2	->
water	27:8	0:0	2	tmp_frame
op	27:17	0:0	2	->
water	27:19	0:0	2	height
op	27:26	0:0	2	=
water	27:28	0:0	2	frame
op	27:33	0:0	2	->
water	27:35	0:0	2	height
water	27:41	0:0	2	;
water	28:4	0:0	2	ret
op	28:8	0:0	2	=
call	28:10	28:47	2	av_frame_get_buffer
arg	28:30	28:43	3	vt->tmp_frame
water	28:30	0:0	4	vt
op	28:32	0:0	4	->
water	28:34	0:0	4	tmp_frame
arg	28:45	28:47	3	32
water	28:45	0:0	4	32
water	28:48	0:0	2	;
if	29:4	30:18	2	(ret < 0)
cond	29:8	29:14	3	ret < 0
water	29:8	0:0	4	ret
op	29:12	0:0	4	<
water	29:14	0:0	4	0
stmts	30:8	30:18	3	
return	30:8	30:18	4	ret
water	30:15	0:0	5	ret
water	31:4	0:0	2	err
op	31:8	0:0	2	=
call	31:10	31:74	2	CVPixelBufferLockBaseAddress
arg	31:39	31:45	3	pixbuf
water	31:39	0:0	4	pixbuf
arg	31:47	31:74	3	kCVPixelBufferLock_ReadOnly
water	31:47	0:0	4	kCVPixelBufferLock_ReadOnly
water	31:75	0:0	2	;
if	32:4	35:4	2	(err != kCVReturnSuccess)
cond	32:8	32:15	3	err != kCVReturnSuccess
water	32:8	0:0	4	err
op	32:12	0:0	4	!=
water	32:15	0:0	4	kCVReturnSuccess
stmts	32:33	35:4	3	
water	32:33	0:0	4	{
call	33:8	33:70	4	av_log
arg	33:15	33:19	5	NULL
water	33:15	0:0	6	NULL
arg	33:21	33:33	5	AV_LOG_ERROR
water	33:21	0:0	6	AV_LOG_ERROR
arg	33:35	33:70	5	"Error locking the pixel buffer.\n"
water	33:35	0:0	6	"Error locking the pixel buffer.\n"
water	33:71	0:0	4	;
return	34:8	34:30	4	AVERROR_UNKNOWN
water	34:15	0:0	5	AVERROR_UNKNOWN
water	35:4	0:0	4	}
if	36:4	42:4	2	(CVPixelBufferIsPlanar (pixbuf ))
cond	36:8	36:36	3	CVPixelBufferIsPlanar (pixbuf )
call	36:8	36:36	4	CVPixelBufferIsPlanar
arg	36:30	36:36	5	pixbuf
water	36:30	0:0	6	pixbuf
stmts	36:39	42:4	3	
water	36:39	0:0	4	{
water	37:8	0:0	4	planes
op	37:15	0:0	4	=
call	37:17	37:50	4	CVPixelBufferGetPlaneCount
arg	37:44	37:50	5	pixbuf
water	37:44	0:0	6	pixbuf
water	37:51	0:0	4	;
for	38:8	41:8	4	(i = 0 ;i < planes;i ++)
forinit	38:13	38:18	5	i = 0 ;
water	38:13	0:0	6	i
op	38:15	0:0	6	=
water	38:17	0:0	6	0
water	38:18	0:0	6	;
cond	38:20	38:24	5	i < planes
water	38:20	0:0	6	i
op	38:22	0:0	6	<
water	38:24	0:0	6	planes
forexpr	38:32	38:33	5	i ++
water	38:32	0:0	6	i
op	38:33	0:0	6	++
stmts	38:37	41:8	5	
water	38:37	0:0	6	{
water	39:12	0:0	6	data
op	39:16	0:0	6	[
water	39:17	0:0	6	i
op	39:18	0:0	6	]
op	39:24	0:0	6	=
call	39:26	39:70	6	CVPixelBufferGetBaseAddressOfPlane
arg	39:61	39:67	7	pixbuf
water	39:61	0:0	8	pixbuf
arg	39:69	39:70	7	i
water	39:69	0:0	8	i
water	39:71	0:0	6	;
water	40:12	0:0	6	linesize
op	40:20	0:0	6	[
water	40:21	0:0	6	i
op	40:22	0:0	6	]
op	40:24	0:0	6	=
call	40:26	40:70	6	CVPixelBufferGetBytesPerRowOfPlane
arg	40:61	40:67	7	pixbuf
water	40:61	0:0	8	pixbuf
arg	40:69	40:70	7	i
water	40:69	0:0	8	i
water	40:71	0:0	6	;
water	41:8	0:0	6	}
water	42:4	0:0	4	}
else	42:6	45:4	2
stmts	42:11	45:4	3	
water	42:11	0:0	4	{
water	43:8	0:0	4	data
op	43:12	0:0	4	[
water	43:13	0:0	4	0
op	43:14	0:0	4	]
op	43:16	0:0	4	=
call	43:18	43:52	4	CVPixelBufferGetBaseAddress
arg	43:46	43:52	5	pixbuf
water	43:46	0:0	6	pixbuf
water	43:53	0:0	4	;
water	44:8	0:0	4	linesize
op	44:16	0:0	4	[
water	44:17	0:0	4	0
op	44:18	0:0	4	]
op	44:20	0:0	4	=
call	44:22	44:56	4	CVPixelBufferGetBytesPerRow
arg	44:50	44:56	5	pixbuf
water	44:50	0:0	6	pixbuf
water	44:57	0:0	4	;
water	45:4	0:0	4	}
call	46:4	48:45	2	av_image_copy
arg	46:18	46:37	3	vt->tmp_frame->data
water	46:18	0:0	4	vt
op	46:20	0:0	4	->
water	46:22	0:0	4	tmp_frame
op	46:31	0:0	4	->
water	46:33	0:0	4	data
arg	46:39	46:62	3	vt->tmp_frame->linesize
water	46:39	0:0	4	vt
op	46:41	0:0	4	->
water	46:43	0:0	4	tmp_frame
op	46:52	0:0	4	->
water	46:54	0:0	4	linesize
arg	47:18	47:40	3	(constuint8_t**)data
water	47:18	0:0	4	(
water	47:19	0:0	4	const
water	47:25	0:0	4	uint8_t
op	47:33	0:0	4	*
op	47:34	0:0	4	*
water	47:35	0:0	4	)
water	47:36	0:0	4	data
arg	47:42	47:50	3	linesize
water	47:42	0:0	4	linesize
arg	47:52	47:73	3	vt->tmp_frame->format
water	47:52	0:0	4	vt
op	47:54	0:0	4	->
water	47:56	0:0	4	tmp_frame
op	47:65	0:0	4	->
water	47:67	0:0	4	format
arg	48:18	48:30	3	frame->width
water	48:18	0:0	4	frame
op	48:23	0:0	4	->
water	48:25	0:0	4	width
arg	48:32	48:45	3	frame->height
water	48:32	0:0	4	frame
op	48:37	0:0	4	->
water	48:39	0:0	4	height
water	48:46	0:0	2	;
water	49:4	0:0	2	ret
op	49:8	0:0	2	=
call	49:10	49:50	2	av_frame_copy_props
arg	49:30	49:43	3	vt->tmp_frame
water	49:30	0:0	4	vt
op	49:32	0:0	4	->
water	49:34	0:0	4	tmp_frame
arg	49:45	49:50	3	frame
water	49:45	0:0	4	frame
water	49:51	0:0	2	;
call	50:4	50:70	2	CVPixelBufferUnlockBaseAddress
arg	50:35	50:41	3	pixbuf
water	50:35	0:0	4	pixbuf
arg	50:43	50:70	3	kCVPixelBufferLock_ReadOnly
water	50:43	0:0	4	kCVPixelBufferLock_ReadOnly
water	50:71	0:0	2	;
if	51:4	52:18	2	(ret < 0)
cond	51:8	51:14	3	ret < 0
water	51:8	0:0	4	ret
op	51:12	0:0	4	<
water	51:14	0:0	4	0
stmts	52:8	52:18	3	
return	52:8	52:18	4	ret
water	52:15	0:0	5	ret
call	53:4	53:24	2	av_frame_unref
arg	53:19	53:24	3	frame
water	53:19	0:0	4	frame
water	53:25	0:0	2	;
call	54:4	54:42	2	av_frame_move_ref
arg	54:22	54:27	3	frame
water	54:22	0:0	4	frame
arg	54:29	54:42	3	vt->tmp_frame
water	54:29	0:0	4	vt
op	54:31	0:0	4	->
water	54:33	0:0	4	tmp_frame
water	54:43	0:0	2	;
return	55:4	55:12	2	0
water	55:11	0:0	3	0

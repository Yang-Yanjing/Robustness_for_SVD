func	1:0	15:0	0	static int	mxf_write_user_comments
params	1:34	0:0	1	
param	1:35	1:53	2	AVFormatContext *	s
param	1:55	1:76	2	const AVDictionary *	m
stmnts	0:0	14:16	1	
decl	3:4	3:34	2	MXFContext	*mxf
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:31	2	AVDictionaryEntry	*t
op	4:25	0:0	2	=
water	4:27	0:0	2	NULL
decl	5:4	5:17	2	int	count
op	5:14	0:0	2	=
water	5:16	0:0	2	0
while	6:4	13:4	2	(( t =av_dict_get (m ,"comment_" ,t ,AV_DICT_IGNORE_SUFFIX ) ))
cond	6:11	6:68	3	( t =av_dict_get (m ,"comment_" ,t ,AV_DICT_IGNORE_SUFFIX ) )
water	6:11	0:0	4	(
water	6:12	0:0	4	t
op	6:14	0:0	4	=
call	6:16	6:67	4	av_dict_get
arg	6:28	6:29	5	m
water	6:28	0:0	6	m
arg	6:31	6:41	5	"comment_"
water	6:31	0:0	6	"comment_"
arg	6:43	6:44	5	t
water	6:43	0:0	6	t
arg	6:46	6:67	5	AV_DICT_IGNORE_SUFFIX
water	6:46	0:0	6	AV_DICT_IGNORE_SUFFIX
water	6:68	0:0	4	)
stmts	6:71	13:4	3	
water	6:71	0:0	4	{
if	7:8	10:8	4	(mxf -> tagged_value_count >= UINT16_MAX)
cond	7:12	7:39	5	mxf -> tagged_value_count >= UINT16_MAX
water	7:12	0:0	6	mxf
op	7:15	0:0	6	->
water	7:17	0:0	6	tagged_value_count
op	7:36	0:0	6	>=
water	7:39	0:0	6	UINT16_MAX
stmts	7:51	10:8	5	
water	7:51	0:0	6	{
call	8:12	8:82	6	av_log
arg	8:19	8:20	7	s
water	8:19	0:0	8	s
arg	8:22	8:34	7	AV_LOG_ERROR
water	8:22	0:0	8	AV_LOG_ERROR
arg	8:36	8:82	7	"too many tagged values, ignoring remaining\n"
water	8:36	0:0	8	"too many tagged values, ignoring remaining\n"
water	8:83	0:0	6	;
return	9:12	9:24	6	count
water	9:19	0:0	7	count
water	10:8	0:0	6	}
if	11:8	12:19	4	(mxf_write_tagged_value (s ,t -> key + 8 ,t -> value ) == 0)
cond	11:12	11:63	5	mxf_write_tagged_value (s ,t -> key + 8 ,t -> value ) == 0
call	11:12	11:58	6	mxf_write_tagged_value
arg	11:35	11:36	7	s
water	11:35	0:0	8	s
arg	11:38	11:48	7	t->key+8
water	11:38	0:0	8	t
op	11:39	0:0	8	->
water	11:41	0:0	8	key
op	11:45	0:0	8	+
water	11:47	0:0	8	8
arg	11:50	11:58	7	t->value
water	11:50	0:0	8	t
op	11:51	0:0	8	->
water	11:53	0:0	8	value
op	11:60	0:0	6	==
water	11:63	0:0	6	0
stmts	12:12	12:19	5	
water	12:12	0:0	6	count
op	12:17	0:0	6	++
water	12:19	0:0	6	;
water	13:4	0:0	4	}
return	14:4	14:16	2	count
water	14:11	0:0	3	count

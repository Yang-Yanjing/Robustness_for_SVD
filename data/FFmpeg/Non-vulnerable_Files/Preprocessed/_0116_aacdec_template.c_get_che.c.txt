func	1:0	119:0	0	static ChannelElement *	get_che
params	1:30	0:0	1	
param	1:31	1:45	2	AACContext *	ac
param	1:47	1:55	2	int	type
param	1:57	1:68	2	int	elem_id
stmnts	5:4	118:4	1	
if	5:4	7:4	2	(! ac -> oc [ 1 ] . m4ac . chan_config)
cond	5:8	5:24	3	! ac -> oc [ 1 ] . m4ac . chan_config
op	5:8	0:0	4	!
water	5:9	0:0	4	ac
op	5:11	0:0	4	->
water	5:13	0:0	4	oc
op	5:15	0:0	4	[
water	5:16	0:0	4	1
op	5:17	0:0	4	]
op	5:18	0:0	4	.
water	5:19	0:0	4	m4ac
op	5:23	0:0	4	.
water	5:24	0:0	4	chan_config
stmts	5:37	7:4	3	
water	5:37	0:0	4	{
return	6:8	6:45	4	ac->tag_che_map[type][elem_id]
water	6:15	0:0	5	ac
op	6:17	0:0	5	->
water	6:19	0:0	5	tag_che_map
op	6:30	0:0	5	[
water	6:31	0:0	5	type
op	6:35	0:0	5	]
op	6:36	0:0	5	[
water	6:37	0:0	5	elem_id
op	6:44	0:0	5	]
water	7:4	0:0	4	}
if	9:4	23:4	2	(! ac -> tags_mapped && type == TYPE_CPE && ac -> oc [ 1 ] . m4ac . chan_config == 1)
cond	9:8	10:38	3	! ac -> tags_mapped && type == TYPE_CPE && ac -> oc [ 1 ] . m4ac . chan_config == 1
op	9:8	0:0	4	!
water	9:9	0:0	4	ac
op	9:11	0:0	4	->
water	9:13	0:0	4	tags_mapped
op	9:25	0:0	4	&&
water	9:28	0:0	4	type
op	9:33	0:0	4	==
water	9:36	0:0	4	TYPE_CPE
op	9:45	0:0	4	&&
water	10:8	0:0	4	ac
op	10:10	0:0	4	->
water	10:12	0:0	4	oc
op	10:14	0:0	4	[
water	10:15	0:0	4	1
op	10:16	0:0	4	]
op	10:17	0:0	4	.
water	10:18	0:0	4	m4ac
op	10:22	0:0	4	.
water	10:23	0:0	4	chan_config
op	10:35	0:0	4	==
water	10:38	0:0	4	1
stmts	10:41	23:4	3	
water	10:41	0:0	4	{
water	11:8	0:0	4	uint8_t
water	11:16	0:0	4	layout_map
op	11:26	0:0	4	[
water	11:27	0:0	4	MAX_ELEM_ID
op	11:38	0:0	4	*
water	11:39	0:0	4	4
op	11:40	0:0	4	]
op	11:41	0:0	4	[
water	11:42	0:0	4	3
op	11:43	0:0	4	]
water	11:44	0:0	4	;
decl	12:8	12:27	4	int	layout_map_tags
call	13:8	13:36	4	push_output_configuration
arg	13:34	13:36	5	ac
water	13:34	0:0	6	ac
water	13:37	0:0	4	;
call	14:8	14:57	4	av_log
arg	14:15	14:24	5	ac->avctx
water	14:15	0:0	6	ac
op	14:17	0:0	6	->
water	14:19	0:0	6	avctx
arg	14:26	14:38	5	AV_LOG_DEBUG
water	14:26	0:0	6	AV_LOG_DEBUG
arg	14:40	14:57	5	"mono with CPE\n"
water	14:40	0:0	6	"mono with CPE\n"
water	14:58	0:0	4	;
if	15:8	17:23	4	(set_default_channel_config (ac -> avctx ,layout_map ,& layout_map_tags ,2 ) < 0)
cond	15:12	16:62	5	set_default_channel_config (ac -> avctx ,layout_map ,& layout_map_tags ,2 ) < 0
call	15:12	16:58	6	set_default_channel_config
arg	15:39	15:48	7	ac->avctx
water	15:39	0:0	8	ac
op	15:41	0:0	8	->
water	15:43	0:0	8	avctx
arg	15:50	15:60	7	layout_map
water	15:50	0:0	8	layout_map
arg	16:39	16:55	7	&layout_map_tags
op	16:39	0:0	8	&
water	16:40	0:0	8	layout_map_tags
arg	16:57	16:58	7	2
water	16:57	0:0	8	2
op	16:60	0:0	6	<
water	16:62	0:0	6	0
stmts	17:12	17:23	5	
return	17:12	17:23	6	NULL
water	17:19	0:0	7	NULL
if	18:8	20:23	4	(output_configure (ac ,layout_map ,layout_map_tags ,OC_TRIAL_FRAME ,1 ) < 0)
cond	18:12	19:50	5	output_configure (ac ,layout_map ,layout_map_tags ,OC_TRIAL_FRAME ,1 ) < 0
call	18:12	19:46	6	output_configure
arg	18:29	18:31	7	ac
water	18:29	0:0	8	ac
arg	18:33	18:43	7	layout_map
water	18:33	0:0	8	layout_map
arg	18:45	18:60	7	layout_map_tags
water	18:45	0:0	8	layout_map_tags
arg	19:29	19:43	7	OC_TRIAL_FRAME
water	19:29	0:0	8	OC_TRIAL_FRAME
arg	19:45	19:46	7	1
water	19:45	0:0	8	1
op	19:48	0:0	6	<
water	19:50	0:0	6	0
stmts	20:12	20:23	5	
return	20:12	20:23	6	NULL
water	20:19	0:0	7	NULL
water	21:8	0:0	4	ac
op	21:10	0:0	4	->
water	21:12	0:0	4	oc
op	21:14	0:0	4	[
water	21:15	0:0	4	1
op	21:16	0:0	4	]
op	21:17	0:0	4	.
water	21:18	0:0	4	m4ac
op	21:22	0:0	4	.
water	21:23	0:0	4	chan_config
op	21:35	0:0	4	=
water	21:37	0:0	4	2
water	21:38	0:0	4	;
water	22:8	0:0	4	ac
op	22:10	0:0	4	->
water	22:12	0:0	4	oc
op	22:14	0:0	4	[
water	22:15	0:0	4	1
op	22:16	0:0	4	]
op	22:17	0:0	4	.
water	22:18	0:0	4	m4ac
op	22:22	0:0	4	.
water	22:23	0:0	4	ps
op	22:26	0:0	4	=
water	22:28	0:0	4	0
water	22:29	0:0	4	;
water	23:4	0:0	4	}
if	25:4	40:4	2	(! ac -> tags_mapped && type == TYPE_SCE && ac -> oc [ 1 ] . m4ac . chan_config == 2)
cond	25:8	26:38	3	! ac -> tags_mapped && type == TYPE_SCE && ac -> oc [ 1 ] . m4ac . chan_config == 2
op	25:8	0:0	4	!
water	25:9	0:0	4	ac
op	25:11	0:0	4	->
water	25:13	0:0	4	tags_mapped
op	25:25	0:0	4	&&
water	25:28	0:0	4	type
op	25:33	0:0	4	==
water	25:36	0:0	4	TYPE_SCE
op	25:45	0:0	4	&&
water	26:8	0:0	4	ac
op	26:10	0:0	4	->
water	26:12	0:0	4	oc
op	26:14	0:0	4	[
water	26:15	0:0	4	1
op	26:16	0:0	4	]
op	26:17	0:0	4	.
water	26:18	0:0	4	m4ac
op	26:22	0:0	4	.
water	26:23	0:0	4	chan_config
op	26:35	0:0	4	==
water	26:38	0:0	4	2
stmts	26:41	40:4	3	
water	26:41	0:0	4	{
water	27:8	0:0	4	uint8_t
water	27:16	0:0	4	layout_map
op	27:26	0:0	4	[
water	27:27	0:0	4	MAX_ELEM_ID
op	27:39	0:0	4	*
water	27:41	0:0	4	4
op	27:42	0:0	4	]
op	27:43	0:0	4	[
water	27:44	0:0	4	3
op	27:45	0:0	4	]
water	27:46	0:0	4	;
decl	28:8	28:27	4	int	layout_map_tags
call	29:8	29:36	4	push_output_configuration
arg	29:34	29:36	5	ac
water	29:34	0:0	6	ac
water	29:37	0:0	4	;
call	30:8	30:59	4	av_log
arg	30:15	30:24	5	ac->avctx
water	30:15	0:0	6	ac
op	30:17	0:0	6	->
water	30:19	0:0	6	avctx
arg	30:26	30:38	5	AV_LOG_DEBUG
water	30:26	0:0	6	AV_LOG_DEBUG
arg	30:40	30:59	5	"stereo with SCE\n"
water	30:40	0:0	6	"stereo with SCE\n"
water	30:60	0:0	4	;
if	31:8	33:23	4	(set_default_channel_config (ac -> avctx ,layout_map ,& layout_map_tags ,1 ) < 0)
cond	31:12	32:62	5	set_default_channel_config (ac -> avctx ,layout_map ,& layout_map_tags ,1 ) < 0
call	31:12	32:58	6	set_default_channel_config
arg	31:39	31:48	7	ac->avctx
water	31:39	0:0	8	ac
op	31:41	0:0	8	->
water	31:43	0:0	8	avctx
arg	31:50	31:60	7	layout_map
water	31:50	0:0	8	layout_map
arg	32:39	32:55	7	&layout_map_tags
op	32:39	0:0	8	&
water	32:40	0:0	8	layout_map_tags
arg	32:57	32:58	7	1
water	32:57	0:0	8	1
op	32:60	0:0	6	<
water	32:62	0:0	6	0
stmts	33:12	33:23	5	
return	33:12	33:23	6	NULL
water	33:19	0:0	7	NULL
if	34:8	36:23	4	(output_configure (ac ,layout_map ,layout_map_tags ,OC_TRIAL_FRAME ,1 ) < 0)
cond	34:12	35:50	5	output_configure (ac ,layout_map ,layout_map_tags ,OC_TRIAL_FRAME ,1 ) < 0
call	34:12	35:46	6	output_configure
arg	34:29	34:31	7	ac
water	34:29	0:0	8	ac
arg	34:33	34:43	7	layout_map
water	34:33	0:0	8	layout_map
arg	34:45	34:60	7	layout_map_tags
water	34:45	0:0	8	layout_map_tags
arg	35:29	35:43	7	OC_TRIAL_FRAME
water	35:29	0:0	8	OC_TRIAL_FRAME
arg	35:45	35:46	7	1
water	35:45	0:0	8	1
op	35:48	0:0	6	<
water	35:50	0:0	6	0
stmts	36:12	36:23	5	
return	36:12	36:23	6	NULL
water	36:19	0:0	7	NULL
water	37:8	0:0	4	ac
op	37:10	0:0	4	->
water	37:12	0:0	4	oc
op	37:14	0:0	4	[
water	37:15	0:0	4	1
op	37:16	0:0	4	]
op	37:17	0:0	4	.
water	37:18	0:0	4	m4ac
op	37:22	0:0	4	.
water	37:23	0:0	4	chan_config
op	37:35	0:0	4	=
water	37:37	0:0	4	1
water	37:38	0:0	4	;
if	38:8	39:34	4	(ac -> oc [ 1 ] . m4ac . sbr)
cond	38:12	38:27	5	ac -> oc [ 1 ] . m4ac . sbr
water	38:12	0:0	6	ac
op	38:14	0:0	6	->
water	38:16	0:0	6	oc
op	38:18	0:0	6	[
water	38:19	0:0	6	1
op	38:20	0:0	6	]
op	38:21	0:0	6	.
water	38:22	0:0	6	m4ac
op	38:26	0:0	6	.
water	38:27	0:0	6	sbr
stmts	39:12	39:34	5	
water	39:12	0:0	6	ac
op	39:14	0:0	6	->
water	39:16	0:0	6	oc
op	39:18	0:0	6	[
water	39:19	0:0	6	1
op	39:20	0:0	6	]
op	39:21	0:0	6	.
water	39:22	0:0	6	m4ac
op	39:26	0:0	6	.
water	39:27	0:0	6	ps
op	39:30	0:0	6	=
op	39:32	0:0	6	-
water	39:33	0:0	6	1
water	39:34	0:0	6	;
water	40:4	0:0	4	}
switch	43:4	118:4	2	(ac -> oc [ 1 ] . m4ac . chan_config)
cond	43:12	43:27	3	ac -> oc [ 1 ] . m4ac . chan_config
water	43:12	0:0	4	ac
op	43:14	0:0	4	->
water	43:16	0:0	4	oc
op	43:18	0:0	4	[
water	43:19	0:0	4	1
op	43:20	0:0	4	]
op	43:21	0:0	4	.
water	43:22	0:0	4	m4ac
op	43:26	0:0	4	.
water	43:27	0:0	4	chan_config
stmts	43:40	118:4	3	
water	43:40	0:0	4	{
label	44:4	44:11	4	case 12 :
label	45:4	45:10	4	case 7 :
if	46:8	49:8	4	(ac -> tags_mapped == 3 && type == TYPE_CPE)
cond	46:12	46:44	5	ac -> tags_mapped == 3 && type == TYPE_CPE
water	46:12	0:0	6	ac
op	46:14	0:0	6	->
water	46:16	0:0	6	tags_mapped
op	46:28	0:0	6	==
water	46:31	0:0	6	3
op	46:33	0:0	6	&&
water	46:36	0:0	6	type
op	46:41	0:0	6	==
water	46:44	0:0	6	TYPE_CPE
stmts	46:54	49:8	5	
water	46:54	0:0	6	{
water	47:12	0:0	6	ac
op	47:14	0:0	6	->
water	47:16	0:0	6	tags_mapped
op	47:27	0:0	6	++
water	47:29	0:0	6	;
return	48:12	48:76	6	ac->tag_che_map[TYPE_CPE][elem_id]=ac->che[TYPE_CPE][2]
water	48:19	0:0	7	ac
op	48:21	0:0	7	->
water	48:23	0:0	7	tag_che_map
op	48:34	0:0	7	[
water	48:35	0:0	7	TYPE_CPE
op	48:43	0:0	7	]
op	48:44	0:0	7	[
water	48:45	0:0	7	elem_id
op	48:52	0:0	7	]
op	48:54	0:0	7	=
water	48:56	0:0	7	ac
op	48:58	0:0	7	->
water	48:60	0:0	7	che
op	48:63	0:0	7	[
water	48:64	0:0	7	TYPE_CPE
op	48:72	0:0	7	]
op	48:73	0:0	7	[
water	48:74	0:0	7	2
op	48:75	0:0	7	]
water	49:8	0:0	6	}
label	50:4	50:11	4	case 11 :
if	51:8	56:8	4	(ac -> tags_mapped == 2 && ac -> oc [ 1 ] . m4ac . chan_config == 11 && type == TYPE_SCE)
cond	51:12	53:20	5	ac -> tags_mapped == 2 && ac -> oc [ 1 ] . m4ac . chan_config == 11 && type == TYPE_SCE
water	51:12	0:0	6	ac
op	51:14	0:0	6	->
water	51:16	0:0	6	tags_mapped
op	51:28	0:0	6	==
water	51:31	0:0	6	2
op	51:33	0:0	6	&&
water	52:12	0:0	6	ac
op	52:14	0:0	6	->
water	52:16	0:0	6	oc
op	52:18	0:0	6	[
water	52:19	0:0	6	1
op	52:20	0:0	6	]
op	52:21	0:0	6	.
water	52:22	0:0	6	m4ac
op	52:26	0:0	6	.
water	52:27	0:0	6	chan_config
op	52:39	0:0	6	==
water	52:42	0:0	6	11
op	52:45	0:0	6	&&
water	53:12	0:0	6	type
op	53:17	0:0	6	==
water	53:20	0:0	6	TYPE_SCE
stmts	53:30	56:8	5	
water	53:30	0:0	6	{
water	54:12	0:0	6	ac
op	54:14	0:0	6	->
water	54:16	0:0	6	tags_mapped
op	54:27	0:0	6	++
water	54:29	0:0	6	;
return	55:12	55:76	6	ac->tag_che_map[TYPE_SCE][elem_id]=ac->che[TYPE_SCE][1]
water	55:19	0:0	7	ac
op	55:21	0:0	7	->
water	55:23	0:0	7	tag_che_map
op	55:34	0:0	7	[
water	55:35	0:0	7	TYPE_SCE
op	55:43	0:0	7	]
op	55:44	0:0	7	[
water	55:45	0:0	7	elem_id
op	55:52	0:0	7	]
op	55:54	0:0	7	=
water	55:56	0:0	7	ac
op	55:58	0:0	7	->
water	55:60	0:0	7	che
op	55:63	0:0	7	[
water	55:64	0:0	7	TYPE_SCE
op	55:72	0:0	7	]
op	55:73	0:0	7	[
water	55:74	0:0	7	1
op	55:75	0:0	7	]
water	56:8	0:0	6	}
label	57:4	57:10	4	case 6 :
if	64:8	73:8	4	(ac -> tags_mapped == tags_per_config [ ac -> oc [ 1 ] . m4ac . chan_config ] - 1 && ( type == TYPE_LFE || type == TYPE_SCE ))
cond	64:12	64:119	5	ac -> tags_mapped == tags_per_config [ ac -> oc [ 1 ] . m4ac . chan_config ] - 1 && ( type == TYPE_LFE || type == TYPE_SCE )
water	64:12	0:0	6	ac
op	64:14	0:0	6	->
water	64:16	0:0	6	tags_mapped
op	64:28	0:0	6	==
water	64:31	0:0	6	tags_per_config
op	64:46	0:0	6	[
water	64:47	0:0	6	ac
op	64:49	0:0	6	->
water	64:51	0:0	6	oc
op	64:53	0:0	6	[
water	64:54	0:0	6	1
op	64:55	0:0	6	]
op	64:56	0:0	6	.
water	64:57	0:0	6	m4ac
op	64:61	0:0	6	.
water	64:62	0:0	6	chan_config
op	64:73	0:0	6	]
op	64:75	0:0	6	-
water	64:77	0:0	6	1
op	64:79	0:0	6	&&
water	64:82	0:0	6	(
water	64:83	0:0	6	type
op	64:88	0:0	6	==
water	64:91	0:0	6	TYPE_LFE
op	64:100	0:0	6	||
water	64:103	0:0	6	type
op	64:108	0:0	6	==
water	64:111	0:0	6	TYPE_SCE
water	64:119	0:0	6	)
stmts	64:122	73:8	5	
water	64:122	0:0	6	{
if	65:12	70:12	6	(! ac -> warned_remapping_once && ( type != TYPE_LFE || elem_id != 0 ))
cond	65:16	65:79	7	! ac -> warned_remapping_once && ( type != TYPE_LFE || elem_id != 0 )
op	65:16	0:0	8	!
water	65:17	0:0	8	ac
op	65:19	0:0	8	->
water	65:21	0:0	8	warned_remapping_once
op	65:43	0:0	8	&&
water	65:46	0:0	8	(
water	65:47	0:0	8	type
op	65:52	0:0	8	!=
water	65:55	0:0	8	TYPE_LFE
op	65:64	0:0	8	||
water	65:67	0:0	8	elem_id
op	65:75	0:0	8	!=
water	65:78	0:0	8	0
water	65:79	0:0	8	)
stmts	65:82	70:12	7	
water	65:82	0:0	8	{
call	66:16	68:60	8	av_log
arg	66:23	66:32	9	ac->avctx
water	66:23	0:0	10	ac
op	66:25	0:0	10	->
water	66:27	0:0	10	avctx
arg	66:34	66:48	9	AV_LOG_WARNING
water	66:34	0:0	10	AV_LOG_WARNING
arg	67:19	67:108	9	"This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n"
water	67:19	0:0	10	"This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n"
arg	68:19	68:51	9	type==TYPE_SCE?"SCE":"LFE"
water	68:19	0:0	10	type
op	68:24	0:0	10	==
water	68:27	0:0	10	TYPE_SCE
water	68:36	0:0	10	?
water	68:38	0:0	10	"SCE"
water	68:44	0:0	10	:
water	68:46	0:0	10	"LFE"
arg	68:53	68:60	9	elem_id
water	68:53	0:0	10	elem_id
water	68:61	0:0	8	;
water	69:16	0:0	8	ac
op	69:18	0:0	8	->
water	69:20	0:0	8	warned_remapping_once
op	69:41	0:0	8	++
water	69:43	0:0	8	;
water	70:12	0:0	8	}
water	71:12	0:0	6	ac
op	71:14	0:0	6	->
water	71:16	0:0	6	tags_mapped
op	71:27	0:0	6	++
water	71:29	0:0	6	;
return	72:12	72:72	6	ac->tag_che_map[type][elem_id]=ac->che[TYPE_LFE][0]
water	72:19	0:0	7	ac
op	72:21	0:0	7	->
water	72:23	0:0	7	tag_che_map
op	72:34	0:0	7	[
water	72:35	0:0	7	type
op	72:39	0:0	7	]
op	72:40	0:0	7	[
water	72:41	0:0	7	elem_id
op	72:48	0:0	7	]
op	72:50	0:0	7	=
water	72:52	0:0	7	ac
op	72:54	0:0	7	->
water	72:56	0:0	7	che
op	72:59	0:0	7	[
water	72:60	0:0	7	TYPE_LFE
op	72:68	0:0	7	]
op	72:69	0:0	7	[
water	72:70	0:0	7	0
op	72:71	0:0	7	]
water	73:8	0:0	6	}
label	74:4	74:10	4	case 5 :
if	75:8	78:8	4	(ac -> tags_mapped == 2 && type == TYPE_CPE)
cond	75:12	75:44	5	ac -> tags_mapped == 2 && type == TYPE_CPE
water	75:12	0:0	6	ac
op	75:14	0:0	6	->
water	75:16	0:0	6	tags_mapped
op	75:28	0:0	6	==
water	75:31	0:0	6	2
op	75:33	0:0	6	&&
water	75:36	0:0	6	type
op	75:41	0:0	6	==
water	75:44	0:0	6	TYPE_CPE
stmts	75:54	78:8	5	
water	75:54	0:0	6	{
water	76:12	0:0	6	ac
op	76:14	0:0	6	->
water	76:16	0:0	6	tags_mapped
op	76:27	0:0	6	++
water	76:29	0:0	6	;
return	77:12	77:76	6	ac->tag_che_map[TYPE_CPE][elem_id]=ac->che[TYPE_CPE][1]
water	77:19	0:0	7	ac
op	77:21	0:0	7	->
water	77:23	0:0	7	tag_che_map
op	77:34	0:0	7	[
water	77:35	0:0	7	TYPE_CPE
op	77:43	0:0	7	]
op	77:44	0:0	7	[
water	77:45	0:0	7	elem_id
op	77:52	0:0	7	]
op	77:54	0:0	7	=
water	77:56	0:0	7	ac
op	77:58	0:0	7	->
water	77:60	0:0	7	che
op	77:63	0:0	7	[
water	77:64	0:0	7	TYPE_CPE
op	77:72	0:0	7	]
op	77:73	0:0	7	[
water	77:74	0:0	7	1
op	77:75	0:0	7	]
water	78:8	0:0	6	}
label	79:4	79:10	4	case 4 :
if	86:8	95:8	4	(ac -> tags_mapped == tags_per_config [ ac -> oc [ 1 ] . m4ac . chan_config ] - 1 && ( type == TYPE_LFE || type == TYPE_SCE ))
cond	86:12	86:119	5	ac -> tags_mapped == tags_per_config [ ac -> oc [ 1 ] . m4ac . chan_config ] - 1 && ( type == TYPE_LFE || type == TYPE_SCE )
water	86:12	0:0	6	ac
op	86:14	0:0	6	->
water	86:16	0:0	6	tags_mapped
op	86:28	0:0	6	==
water	86:31	0:0	6	tags_per_config
op	86:46	0:0	6	[
water	86:47	0:0	6	ac
op	86:49	0:0	6	->
water	86:51	0:0	6	oc
op	86:53	0:0	6	[
water	86:54	0:0	6	1
op	86:55	0:0	6	]
op	86:56	0:0	6	.
water	86:57	0:0	6	m4ac
op	86:61	0:0	6	.
water	86:62	0:0	6	chan_config
op	86:73	0:0	6	]
op	86:75	0:0	6	-
water	86:77	0:0	6	1
op	86:79	0:0	6	&&
water	86:82	0:0	6	(
water	86:83	0:0	6	type
op	86:88	0:0	6	==
water	86:91	0:0	6	TYPE_LFE
op	86:100	0:0	6	||
water	86:103	0:0	6	type
op	86:108	0:0	6	==
water	86:111	0:0	6	TYPE_SCE
water	86:119	0:0	6	)
stmts	86:122	95:8	5	
water	86:122	0:0	6	{
if	87:12	92:12	6	(! ac -> warned_remapping_once && ( type != TYPE_SCE || elem_id != 1 ))
cond	87:16	87:79	7	! ac -> warned_remapping_once && ( type != TYPE_SCE || elem_id != 1 )
op	87:16	0:0	8	!
water	87:17	0:0	8	ac
op	87:19	0:0	8	->
water	87:21	0:0	8	warned_remapping_once
op	87:43	0:0	8	&&
water	87:46	0:0	8	(
water	87:47	0:0	8	type
op	87:52	0:0	8	!=
water	87:55	0:0	8	TYPE_SCE
op	87:64	0:0	8	||
water	87:67	0:0	8	elem_id
op	87:75	0:0	8	!=
water	87:78	0:0	8	1
water	87:79	0:0	8	)
stmts	87:82	92:12	7	
water	87:82	0:0	8	{
call	88:16	90:60	8	av_log
arg	88:23	88:32	9	ac->avctx
water	88:23	0:0	10	ac
op	88:25	0:0	10	->
water	88:27	0:0	10	avctx
arg	88:34	88:48	9	AV_LOG_WARNING
water	88:34	0:0	10	AV_LOG_WARNING
arg	89:19	89:108	9	"This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n"
water	89:19	0:0	10	"This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n"
arg	90:19	90:51	9	type==TYPE_SCE?"SCE":"LFE"
water	90:19	0:0	10	type
op	90:24	0:0	10	==
water	90:27	0:0	10	TYPE_SCE
water	90:36	0:0	10	?
water	90:38	0:0	10	"SCE"
water	90:44	0:0	10	:
water	90:46	0:0	10	"LFE"
arg	90:53	90:60	9	elem_id
water	90:53	0:0	10	elem_id
water	90:61	0:0	8	;
water	91:16	0:0	8	ac
op	91:18	0:0	8	->
water	91:20	0:0	8	warned_remapping_once
op	91:41	0:0	8	++
water	91:43	0:0	8	;
water	92:12	0:0	8	}
water	93:12	0:0	6	ac
op	93:14	0:0	6	->
water	93:16	0:0	6	tags_mapped
op	93:27	0:0	6	++
water	93:29	0:0	6	;
return	94:12	94:72	6	ac->tag_che_map[type][elem_id]=ac->che[TYPE_SCE][1]
water	94:19	0:0	7	ac
op	94:21	0:0	7	->
water	94:23	0:0	7	tag_che_map
op	94:34	0:0	7	[
water	94:35	0:0	7	type
op	94:39	0:0	7	]
op	94:40	0:0	7	[
water	94:41	0:0	7	elem_id
op	94:48	0:0	7	]
op	94:50	0:0	7	=
water	94:52	0:0	7	ac
op	94:54	0:0	7	->
water	94:56	0:0	7	che
op	94:59	0:0	7	[
water	94:60	0:0	7	TYPE_SCE
op	94:68	0:0	7	]
op	94:69	0:0	7	[
water	94:70	0:0	7	1
op	94:71	0:0	7	]
water	95:8	0:0	6	}
if	96:8	101:8	4	(ac -> tags_mapped == 2 && ac -> oc [ 1 ] . m4ac . chan_config == 4 && type == TYPE_SCE)
cond	96:12	98:20	5	ac -> tags_mapped == 2 && ac -> oc [ 1 ] . m4ac . chan_config == 4 && type == TYPE_SCE
water	96:12	0:0	6	ac
op	96:14	0:0	6	->
water	96:16	0:0	6	tags_mapped
op	96:28	0:0	6	==
water	96:31	0:0	6	2
op	96:33	0:0	6	&&
water	97:12	0:0	6	ac
op	97:14	0:0	6	->
water	97:16	0:0	6	oc
op	97:18	0:0	6	[
water	97:19	0:0	6	1
op	97:20	0:0	6	]
op	97:21	0:0	6	.
water	97:22	0:0	6	m4ac
op	97:26	0:0	6	.
water	97:27	0:0	6	chan_config
op	97:39	0:0	6	==
water	97:42	0:0	6	4
op	97:44	0:0	6	&&
water	98:12	0:0	6	type
op	98:17	0:0	6	==
water	98:20	0:0	6	TYPE_SCE
stmts	98:30	101:8	5	
water	98:30	0:0	6	{
water	99:12	0:0	6	ac
op	99:14	0:0	6	->
water	99:16	0:0	6	tags_mapped
op	99:27	0:0	6	++
water	99:29	0:0	6	;
return	100:12	100:76	6	ac->tag_che_map[TYPE_SCE][elem_id]=ac->che[TYPE_SCE][1]
water	100:19	0:0	7	ac
op	100:21	0:0	7	->
water	100:23	0:0	7	tag_che_map
op	100:34	0:0	7	[
water	100:35	0:0	7	TYPE_SCE
op	100:43	0:0	7	]
op	100:44	0:0	7	[
water	100:45	0:0	7	elem_id
op	100:52	0:0	7	]
op	100:54	0:0	7	=
water	100:56	0:0	7	ac
op	100:58	0:0	7	->
water	100:60	0:0	7	che
op	100:63	0:0	7	[
water	100:64	0:0	7	TYPE_SCE
op	100:72	0:0	7	]
op	100:73	0:0	7	[
water	100:74	0:0	7	1
op	100:75	0:0	7	]
water	101:8	0:0	6	}
label	102:4	102:10	4	case 3 :
label	103:4	103:10	4	case 2 :
if	104:8	108:8	4	(ac -> tags_mapped == ( ac -> oc [ 1 ] . m4ac . chan_config != 2 ) && type == TYPE_CPE)
cond	104:12	105:20	5	ac -> tags_mapped == ( ac -> oc [ 1 ] . m4ac . chan_config != 2 ) && type == TYPE_CPE
water	104:12	0:0	6	ac
op	104:14	0:0	6	->
water	104:16	0:0	6	tags_mapped
op	104:28	0:0	6	==
water	104:31	0:0	6	(
water	104:32	0:0	6	ac
op	104:34	0:0	6	->
water	104:36	0:0	6	oc
op	104:38	0:0	6	[
water	104:39	0:0	6	1
op	104:40	0:0	6	]
op	104:41	0:0	6	.
water	104:42	0:0	6	m4ac
op	104:46	0:0	6	.
water	104:47	0:0	6	chan_config
op	104:59	0:0	6	!=
water	104:62	0:0	6	2
water	104:63	0:0	6	)
op	104:65	0:0	6	&&
water	105:12	0:0	6	type
op	105:17	0:0	6	==
water	105:20	0:0	6	TYPE_CPE
stmts	105:30	108:8	5	
water	105:30	0:0	6	{
water	106:12	0:0	6	ac
op	106:14	0:0	6	->
water	106:16	0:0	6	tags_mapped
op	106:27	0:0	6	++
water	106:29	0:0	6	;
return	107:12	107:76	6	ac->tag_che_map[TYPE_CPE][elem_id]=ac->che[TYPE_CPE][0]
water	107:19	0:0	7	ac
op	107:21	0:0	7	->
water	107:23	0:0	7	tag_che_map
op	107:34	0:0	7	[
water	107:35	0:0	7	TYPE_CPE
op	107:43	0:0	7	]
op	107:44	0:0	7	[
water	107:45	0:0	7	elem_id
op	107:52	0:0	7	]
op	107:54	0:0	7	=
water	107:56	0:0	7	ac
op	107:58	0:0	7	->
water	107:60	0:0	7	che
op	107:63	0:0	7	[
water	107:64	0:0	7	TYPE_CPE
op	107:72	0:0	7	]
op	107:73	0:0	7	[
water	107:74	0:0	7	0
op	107:75	0:0	7	]
water	108:8	0:0	6	}
else	108:10	110:8	4
stmts	108:15	110:8	5	
if	108:15	110:8	6	(ac -> oc [ 1 ] . m4ac . chan_config == 2)
cond	108:19	108:49	7	ac -> oc [ 1 ] . m4ac . chan_config == 2
water	108:19	0:0	8	ac
op	108:21	0:0	8	->
water	108:23	0:0	8	oc
op	108:25	0:0	8	[
water	108:26	0:0	8	1
op	108:27	0:0	8	]
op	108:28	0:0	8	.
water	108:29	0:0	8	m4ac
op	108:33	0:0	8	.
water	108:34	0:0	8	chan_config
op	108:46	0:0	8	==
water	108:49	0:0	8	2
stmts	108:52	110:8	7	
water	108:52	0:0	8	{
return	109:12	109:23	8	NULL
water	109:19	0:0	9	NULL
water	110:8	0:0	8	}
label	111:4	111:10	4	case 1 :
if	112:8	115:8	4	(! ac -> tags_mapped && type == TYPE_SCE)
cond	112:12	112:40	5	! ac -> tags_mapped && type == TYPE_SCE
op	112:12	0:0	6	!
water	112:13	0:0	6	ac
op	112:15	0:0	6	->
water	112:17	0:0	6	tags_mapped
op	112:29	0:0	6	&&
water	112:32	0:0	6	type
op	112:37	0:0	6	==
water	112:40	0:0	6	TYPE_SCE
stmts	112:50	115:8	5	
water	112:50	0:0	6	{
water	113:12	0:0	6	ac
op	113:14	0:0	6	->
water	113:16	0:0	6	tags_mapped
op	113:27	0:0	6	++
water	113:29	0:0	6	;
return	114:12	114:76	6	ac->tag_che_map[TYPE_SCE][elem_id]=ac->che[TYPE_SCE][0]
water	114:19	0:0	7	ac
op	114:21	0:0	7	->
water	114:23	0:0	7	tag_che_map
op	114:34	0:0	7	[
water	114:35	0:0	7	TYPE_SCE
op	114:43	0:0	7	]
op	114:44	0:0	7	[
water	114:45	0:0	7	elem_id
op	114:52	0:0	7	]
op	114:54	0:0	7	=
water	114:56	0:0	7	ac
op	114:58	0:0	7	->
water	114:60	0:0	7	che
op	114:63	0:0	7	[
water	114:64	0:0	7	TYPE_SCE
op	114:72	0:0	7	]
op	114:73	0:0	7	[
water	114:74	0:0	7	0
op	114:75	0:0	7	]
water	115:8	0:0	6	}
label	116:4	116:11	4	default :
return	117:8	117:19	4	NULL
water	117:15	0:0	5	NULL
water	118:4	0:0	4	}

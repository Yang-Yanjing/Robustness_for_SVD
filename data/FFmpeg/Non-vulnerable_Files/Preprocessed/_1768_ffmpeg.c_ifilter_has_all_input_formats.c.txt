func	2:0	11:0	0	static int	ifilter_has_all_input_formats
params	2:40	0:0	1	
param	2:41	2:56	2	FilterGraph *	fg
stmnts	0:0	10:12	1	
decl	4:4	4:9	2	int	i
for	5:4	9:4	2	(i = 0 ;i < fg -> nb_inputs;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:24	3	i < fg -> nb_inputs
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	fg
op	5:22	0:0	4	->
water	5:24	0:0	4	nb_inputs
forexpr	5:35	5:36	3	i ++
water	5:35	0:0	4	i
op	5:36	0:0	4	++
stmts	5:40	9:4	3	
water	5:40	0:0	4	{
if	6:8	8:20	4	(fg -> inputs [ i ] -> format < 0 && ( fg -> inputs [ i ] -> type == AVMEDIA_TYPE_AUDIO || fg -> inputs [ i ] -> type == AVMEDIA_TYPE_VIDEO ))
cond	6:12	7:83	5	fg -> inputs [ i ] -> format < 0 && ( fg -> inputs [ i ] -> type == AVMEDIA_TYPE_AUDIO || fg -> inputs [ i ] -> type == AVMEDIA_TYPE_VIDEO )
water	6:12	0:0	6	fg
op	6:14	0:0	6	->
water	6:16	0:0	6	inputs
op	6:22	0:0	6	[
water	6:23	0:0	6	i
op	6:24	0:0	6	]
op	6:25	0:0	6	->
water	6:27	0:0	6	format
op	6:34	0:0	6	<
water	6:36	0:0	6	0
op	6:38	0:0	6	&&
water	6:41	0:0	6	(
water	6:42	0:0	6	fg
op	6:44	0:0	6	->
water	6:46	0:0	6	inputs
op	6:52	0:0	6	[
water	6:53	0:0	6	i
op	6:54	0:0	6	]
op	6:55	0:0	6	->
water	6:57	0:0	6	type
op	6:62	0:0	6	==
water	6:65	0:0	6	AVMEDIA_TYPE_AUDIO
op	6:84	0:0	6	||
water	7:42	0:0	6	fg
op	7:44	0:0	6	->
water	7:46	0:0	6	inputs
op	7:52	0:0	6	[
water	7:53	0:0	6	i
op	7:54	0:0	6	]
op	7:55	0:0	6	->
water	7:57	0:0	6	type
op	7:62	0:0	6	==
water	7:65	0:0	6	AVMEDIA_TYPE_VIDEO
water	7:83	0:0	6	)
stmts	8:12	8:20	5	
return	8:12	8:20	6	0
water	8:19	0:0	7	0
water	9:4	0:0	4	}
return	10:4	10:12	2	1
water	10:11	0:0	3	1

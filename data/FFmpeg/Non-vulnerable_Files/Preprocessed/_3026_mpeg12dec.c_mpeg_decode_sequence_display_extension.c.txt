func	1:0	20:0	0	static void	mpeg_decode_sequence_display_extension
params	1:50	0:0	1	
param	1:51	1:67	2	Mpeg1Context *	s1
stmnts	0:0	19:64	1	
decl	3:4	3:41	2	MpegEncContext	*s
op	3:22	0:0	2	=
op	3:24	0:0	2	&
water	3:25	0:0	2	s1
op	3:27	0:0	2	->
water	3:29	0:0	2	mpeg_enc_ctx
decl	4:4	4:31	2	int	color_description
water	4:25	0:0	2	,
decl	4:4	4:31	2	int	w
water	4:28	0:0	2	,
decl	4:4	4:31	2	int	h
call	5:4	5:23	2	skip_bits
arg	5:14	5:20	3	&s->gb
op	5:14	0:0	4	&
water	5:15	0:0	4	s
op	5:16	0:0	4	->
water	5:18	0:0	4	gb
arg	5:22	5:23	3	3
water	5:22	0:0	4	3
water	5:24	0:0	2	;
water	6:4	0:0	2	color_description
op	6:22	0:0	2	=
call	6:24	6:40	2	get_bits1
arg	6:34	6:40	3	&s->gb
op	6:34	0:0	4	&
water	6:35	0:0	4	s
op	6:36	0:0	4	->
water	6:38	0:0	4	gb
water	6:41	0:0	2	;
if	7:4	11:4	2	(color_description)
cond	7:8	7:8	3	color_description
water	7:8	0:0	4	color_description
stmts	7:27	11:4	3	
water	7:27	0:0	4	{
water	8:8	0:0	4	s
op	8:9	0:0	4	->
water	8:11	0:0	4	avctx
op	8:16	0:0	4	->
water	8:18	0:0	4	color_primaries
op	8:34	0:0	4	=
call	8:36	8:54	4	get_bits
arg	8:45	8:51	5	&s->gb
op	8:45	0:0	6	&
water	8:46	0:0	6	s
op	8:47	0:0	6	->
water	8:49	0:0	6	gb
arg	8:53	8:54	5	8
water	8:53	0:0	6	8
water	8:55	0:0	4	;
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	avctx
op	9:16	0:0	4	->
water	9:18	0:0	4	color_trc
op	9:34	0:0	4	=
call	9:36	9:54	4	get_bits
arg	9:45	9:51	5	&s->gb
op	9:45	0:0	6	&
water	9:46	0:0	6	s
op	9:47	0:0	6	->
water	9:49	0:0	6	gb
arg	9:53	9:54	5	8
water	9:53	0:0	6	8
water	9:55	0:0	4	;
water	10:8	0:0	4	s
op	10:9	0:0	4	->
water	10:11	0:0	4	avctx
op	10:16	0:0	4	->
water	10:18	0:0	4	colorspace
op	10:34	0:0	4	=
call	10:36	10:54	4	get_bits
arg	10:45	10:51	5	&s->gb
op	10:45	0:0	6	&
water	10:46	0:0	6	s
op	10:47	0:0	6	->
water	10:49	0:0	6	gb
arg	10:53	10:54	5	8
water	10:53	0:0	6	8
water	10:55	0:0	4	;
water	11:4	0:0	4	}
water	12:4	0:0	2	w
op	12:6	0:0	2	=
call	12:8	12:27	2	get_bits
arg	12:17	12:23	3	&s->gb
op	12:17	0:0	4	&
water	12:18	0:0	4	s
op	12:19	0:0	4	->
water	12:21	0:0	4	gb
arg	12:25	12:27	3	14
water	12:25	0:0	4	14
water	12:28	0:0	2	;
call	13:4	13:23	2	skip_bits
arg	13:14	13:20	3	&s->gb
op	13:14	0:0	4	&
water	13:15	0:0	4	s
op	13:16	0:0	4	->
water	13:18	0:0	4	gb
arg	13:22	13:23	3	1
water	13:22	0:0	4	1
water	13:24	0:0	2	;
water	14:4	0:0	2	h
op	14:6	0:0	2	=
call	14:8	14:27	2	get_bits
arg	14:17	14:23	3	&s->gb
op	14:17	0:0	4	&
water	14:18	0:0	4	s
op	14:19	0:0	4	->
water	14:21	0:0	4	gb
arg	14:25	14:27	3	14
water	14:25	0:0	4	14
water	14:28	0:0	2	;
water	16:4	0:0	2	s1
op	16:6	0:0	2	->
water	16:8	0:0	2	pan_scan
op	16:16	0:0	2	.
water	16:17	0:0	2	width
op	16:24	0:0	2	=
water	16:26	0:0	2	16
op	16:29	0:0	2	*
water	16:31	0:0	2	w
water	16:32	0:0	2	;
water	17:4	0:0	2	s1
op	17:6	0:0	2	->
water	17:8	0:0	2	pan_scan
op	17:16	0:0	2	.
water	17:17	0:0	2	height
op	17:24	0:0	2	=
water	17:26	0:0	2	16
op	17:29	0:0	2	*
water	17:31	0:0	2	h
water	17:32	0:0	2	;
if	18:4	19:64	2	(s -> avctx -> debug & FF_DEBUG_PICT_INFO)
cond	18:8	18:26	3	s -> avctx -> debug & FF_DEBUG_PICT_INFO
water	18:8	0:0	4	s
op	18:9	0:0	4	->
water	18:11	0:0	4	avctx
op	18:16	0:0	4	->
water	18:18	0:0	4	debug
op	18:24	0:0	4	&
water	18:26	0:0	4	FF_DEBUG_PICT_INFO
stmts	19:8	19:64	3	
call	19:8	19:63	4	av_log
arg	19:15	19:23	5	s->avctx
water	19:15	0:0	6	s
op	19:16	0:0	6	->
water	19:18	0:0	6	avctx
arg	19:25	19:37	5	AV_LOG_DEBUG
water	19:25	0:0	6	AV_LOG_DEBUG
arg	19:39	19:57	5	"sde w:%d, h:%d\n"
water	19:39	0:0	6	"sde w:%d, h:%d\n"
arg	19:59	19:60	5	w
water	19:59	0:0	6	w
arg	19:62	19:63	5	h
water	19:62	0:0	6	h
water	19:64	0:0	4	;

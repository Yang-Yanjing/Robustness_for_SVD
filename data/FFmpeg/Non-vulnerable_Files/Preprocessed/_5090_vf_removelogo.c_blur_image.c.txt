func	1:0	30:0	0	static void	blur_image
params	1:22	0:0	1	
param	1:23	1:34	2	int * * *	mask
param	2:23	2:46	2	const uint8_t *	src_data
param	2:49	2:65	2	int	src_linesize
param	3:29	3:46	2	uint8_t *	dst_data
param	3:49	3:65	2	int	dst_linesize
param	4:23	4:47	2	const uint8_t *	mask_data
param	4:49	4:66	2	int	mask_linesize
param	5:23	5:28	2	int	w
param	5:30	5:35	2	int	h
param	5:37	5:47	2	int	direct
param	6:23	6:42	2	FFBoundingBox *	bbox
stmnts	0:0	29:4	1	
decl	8:4	8:12	2	int	x
water	8:9	0:0	2	,
decl	8:4	8:12	2	int	y
decl	9:4	9:21	2	uint8_t	*dst_line
decl	10:4	10:27	2	const uint8_t	*src_line
if	11:4	12:81	2	(! direct)
cond	11:8	11:9	3	! direct
op	11:8	0:0	4	!
water	11:9	0:0	4	direct
stmts	12:8	12:81	3	
call	12:8	12:80	4	av_image_copy_plane
arg	12:28	12:36	5	dst_data
water	12:28	0:0	6	dst_data
arg	12:38	12:50	5	dst_linesize
water	12:38	0:0	6	dst_linesize
arg	12:52	12:60	5	src_data
water	12:52	0:0	6	src_data
arg	12:62	12:74	5	src_linesize
water	12:62	0:0	6	src_linesize
arg	12:76	12:77	5	w
water	12:76	0:0	6	w
arg	12:79	12:80	5	h
water	12:79	0:0	6	h
water	12:81	0:0	4	;
for	13:4	29:4	2	(y = bbox -> y1 ;y <= bbox -> y2;y ++)
forinit	13:9	13:21	3	y = bbox -> y1 ;
water	13:9	0:0	4	y
op	13:11	0:0	4	=
water	13:13	0:0	4	bbox
op	13:17	0:0	4	->
water	13:19	0:0	4	y1
water	13:21	0:0	4	;
cond	13:23	13:34	3	y <= bbox -> y2
water	13:23	0:0	4	y
op	13:25	0:0	4	<=
water	13:28	0:0	4	bbox
op	13:32	0:0	4	->
water	13:34	0:0	4	y2
forexpr	13:38	13:39	3	y ++
water	13:38	0:0	4	y
op	13:39	0:0	4	++
stmts	13:43	29:4	3	
water	13:43	0:0	4	{
water	14:8	0:0	4	src_line
op	14:17	0:0	4	=
water	14:19	0:0	4	src_data
op	14:28	0:0	4	+
water	14:30	0:0	4	src_linesize
op	14:43	0:0	4	*
water	14:45	0:0	4	y
water	14:46	0:0	4	;
water	15:8	0:0	4	dst_line
op	15:17	0:0	4	=
water	15:19	0:0	4	dst_data
op	15:28	0:0	4	+
water	15:30	0:0	4	dst_linesize
op	15:43	0:0	4	*
water	15:45	0:0	4	y
water	15:46	0:0	4	;
for	16:8	28:8	4	(x = bbox -> x1 ;x <= bbox -> x2;x ++)
forinit	16:13	16:25	5	x = bbox -> x1 ;
water	16:13	0:0	6	x
op	16:15	0:0	6	=
water	16:17	0:0	6	bbox
op	16:21	0:0	6	->
water	16:23	0:0	6	x1
water	16:25	0:0	6	;
cond	16:27	16:38	5	x <= bbox -> x2
water	16:27	0:0	6	x
op	16:29	0:0	6	<=
water	16:32	0:0	6	bbox
op	16:36	0:0	6	->
water	16:38	0:0	6	x2
forexpr	16:42	16:43	5	x ++
water	16:42	0:0	6	x
op	16:43	0:0	6	++
stmts	16:47	28:8	5	
water	16:47	0:0	6	{
if	17:13	23:12	6	(mask_data [ y * mask_linesize + x ])
cond	17:17	17:48	7	mask_data [ y * mask_linesize + x ]
water	17:17	0:0	8	mask_data
op	17:26	0:0	8	[
water	17:27	0:0	8	y
op	17:29	0:0	8	*
water	17:31	0:0	8	mask_linesize
op	17:45	0:0	8	+
water	17:47	0:0	8	x
op	17:48	0:0	8	]
stmts	17:51	23:12	7	
water	17:51	0:0	8	{
water	19:17	0:0	8	dst_line
op	19:25	0:0	8	[
water	19:26	0:0	8	x
op	19:27	0:0	8	]
op	19:29	0:0	8	=
call	19:31	22:52	8	blur_pixel
arg	19:42	19:46	9	mask
water	19:42	0:0	10	mask
arg	20:42	20:51	9	mask_data
water	20:42	0:0	10	mask_data
arg	20:53	20:66	9	mask_linesize
water	20:53	0:0	10	mask_linesize
arg	21:42	21:50	9	dst_data
water	21:42	0:0	10	dst_data
arg	21:52	21:64	9	dst_linesize
water	21:52	0:0	10	dst_linesize
arg	22:42	22:43	9	w
water	22:42	0:0	10	w
arg	22:45	22:46	9	h
water	22:45	0:0	10	h
arg	22:48	22:49	9	x
water	22:48	0:0	10	x
arg	22:51	22:52	9	y
water	22:51	0:0	10	y
water	22:53	0:0	8	;
water	23:12	0:0	8	}
else	23:14	27:12	6
stmts	23:19	27:12	7	
water	23:19	0:0	8	{
if	25:16	26:45	8	(! direct)
cond	25:20	25:21	9	! direct
op	25:20	0:0	10	!
water	25:21	0:0	10	direct
stmts	26:20	26:45	9	
water	26:20	0:0	10	dst_line
op	26:28	0:0	10	[
water	26:29	0:0	10	x
op	26:30	0:0	10	]
op	26:32	0:0	10	=
water	26:34	0:0	10	src_line
op	26:42	0:0	10	[
water	26:43	0:0	10	x
op	26:44	0:0	10	]
water	26:45	0:0	10	;
water	27:12	0:0	8	}
water	28:8	0:0	6	}
water	29:4	0:0	4	}

func	1:20	78:0	0	RENAME	(sws_init_swscale)
params	1:44	0:0	1	
param	1:45	1:58	2	SwsContext *	c
stmnts	0:0	77:4	1	
decl	3:4	3:47	2	enum AVPixelFormat	dstFormat
op	3:33	0:0	2	=
water	3:35	0:0	2	c
op	3:36	0:0	2	->
water	3:38	0:0	2	dstFormat
water	4:4	0:0	2	c
op	4:5	0:0	2	->
water	4:7	0:0	2	use_mmx_vfilter
op	4:22	0:0	2	=
water	4:24	0:0	2	0
water	4:25	0:0	2	;
if	5:4	63:4	2	(!is16BPS (dstFormat ) && !is9_OR_10BPS (dstFormat ) && dstFormat != AV_PIX_FMT_NV12 && dstFormat != AV_PIX_FMT_NV21 && ! ( c -> flags & SWS_BITEXACT ))
cond	5:8	6:68	3	!is16BPS (dstFormat ) && !is9_OR_10BPS (dstFormat ) && dstFormat != AV_PIX_FMT_NV12 && dstFormat != AV_PIX_FMT_NV21 && ! ( c -> flags & SWS_BITEXACT )
op	5:8	0:0	4	!
call	5:9	5:26	4	is16BPS
arg	5:17	5:26	5	dstFormat
water	5:17	0:0	6	dstFormat
op	5:28	0:0	4	&&
op	5:31	0:0	4	!
call	5:32	5:54	4	is9_OR_10BPS
arg	5:45	5:54	5	dstFormat
water	5:45	0:0	6	dstFormat
op	5:56	0:0	4	&&
water	5:59	0:0	4	dstFormat
op	5:69	0:0	4	!=
water	5:72	0:0	4	AV_PIX_FMT_NV12
op	6:8	0:0	4	&&
water	6:11	0:0	4	dstFormat
op	6:21	0:0	4	!=
water	6:24	0:0	4	AV_PIX_FMT_NV21
op	6:40	0:0	4	&&
op	6:43	0:0	4	!
water	6:44	0:0	4	(
water	6:45	0:0	4	c
op	6:46	0:0	4	->
water	6:48	0:0	4	flags
op	6:54	0:0	4	&
water	6:56	0:0	4	SWS_BITEXACT
water	6:68	0:0	4	)
stmts	6:71	63:4	3	
water	6:71	0:0	4	{
if	7:12	20:12	4	(c -> flags & SWS_ACCURATE_RND)
cond	7:16	7:27	5	c -> flags & SWS_ACCURATE_RND
water	7:16	0:0	6	c
op	7:17	0:0	6	->
water	7:19	0:0	6	flags
op	7:25	0:0	6	&
water	7:27	0:0	6	SWS_ACCURATE_RND
stmts	7:45	20:12	5	
water	7:45	0:0	6	{
if	8:16	19:16	6	(! ( c -> flags & SWS_FULL_CHR_H_INT ))
cond	8:20	8:51	7	! ( c -> flags & SWS_FULL_CHR_H_INT )
op	8:20	0:0	8	!
water	8:21	0:0	8	(
water	8:22	0:0	8	c
op	8:23	0:0	8	->
water	8:25	0:0	8	flags
op	8:31	0:0	8	&
water	8:33	0:0	8	SWS_FULL_CHR_H_INT
water	8:51	0:0	8	)
stmts	8:54	19:16	7	
water	8:54	0:0	8	{
switch	9:20	18:20	8	(c -> dstFormat)
cond	9:28	9:31	9	c -> dstFormat
water	9:28	0:0	10	c
op	9:29	0:0	10	->
water	9:31	0:0	10	dstFormat
stmts	9:42	18:20	9	
water	9:42	0:0	10	{
label	10:20	10:41	10	case AV_PIX_FMT_RGB32 :
water	10:45	0:0	10	c
op	10:46	0:0	10	->
water	10:48	0:0	10	yuv2packedX
op	10:60	0:0	10	=
call	10:62	10:83	10	RENAME
arg	10:69	10:83	11	yuv2rgb32_X_ar
water	10:69	0:0	12	yuv2rgb32_X_ar
water	10:84	0:0	10	;
break	10:88	10:93	10	
label	12:20	12:41	10	case AV_PIX_FMT_BGR24 :
water	12:45	0:0	10	c
op	12:46	0:0	10	->
water	12:48	0:0	10	yuv2packedX
op	12:60	0:0	10	=
call	12:62	12:83	10	RENAME
arg	12:69	12:83	11	yuv2bgr24_X_ar
water	12:69	0:0	12	yuv2bgr24_X_ar
water	12:84	0:0	10	;
break	12:88	12:93	10	
label	14:20	14:42	10	case AV_PIX_FMT_RGB555 :
water	14:45	0:0	10	c
op	14:46	0:0	10	->
water	14:48	0:0	10	yuv2packedX
op	14:60	0:0	10	=
call	14:62	14:84	10	RENAME
arg	14:69	14:84	11	yuv2rgb555_X_ar
water	14:69	0:0	12	yuv2rgb555_X_ar
water	14:85	0:0	10	;
break	14:88	14:93	10	
label	15:20	15:42	10	case AV_PIX_FMT_RGB565 :
water	15:45	0:0	10	c
op	15:46	0:0	10	->
water	15:48	0:0	10	yuv2packedX
op	15:60	0:0	10	=
call	15:62	15:84	10	RENAME
arg	15:69	15:84	11	yuv2rgb565_X_ar
water	15:69	0:0	12	yuv2rgb565_X_ar
water	15:85	0:0	10	;
break	15:88	15:93	10	
label	16:20	16:43	10	case AV_PIX_FMT_YUYV422 :
water	16:45	0:0	10	c
op	16:46	0:0	10	->
water	16:48	0:0	10	yuv2packedX
op	16:60	0:0	10	=
call	16:62	16:85	10	RENAME
arg	16:69	16:85	11	yuv2yuyv422_X_ar
water	16:69	0:0	12	yuv2yuyv422_X_ar
water	16:86	0:0	10	;
break	16:88	16:93	10	
label	17:20	17:27	10	default :
break	17:29	17:34	10	
water	18:20	0:0	10	}
water	19:16	0:0	8	}
water	20:12	0:0	6	}
else	20:14	36:12	4
stmts	20:19	36:12	5	
water	20:19	0:0	6	{
water	21:16	0:0	6	c
op	21:17	0:0	6	->
water	21:19	0:0	6	use_mmx_vfilter
op	21:34	0:0	6	=
water	21:36	0:0	6	1
water	21:37	0:0	6	;
water	22:16	0:0	6	c
op	22:17	0:0	6	->
water	22:19	0:0	6	yuv2planeX
op	22:30	0:0	6	=
call	22:32	22:51	6	RENAME
arg	22:39	22:51	7	yuv2yuvX
water	22:39	0:0	8	yuv2yuvX
water	22:52	0:0	6	;
if	23:16	35:16	6	(! ( c -> flags & SWS_FULL_CHR_H_INT ))
cond	23:20	23:51	7	! ( c -> flags & SWS_FULL_CHR_H_INT )
op	23:20	0:0	8	!
water	23:21	0:0	8	(
water	23:22	0:0	8	c
op	23:23	0:0	8	->
water	23:25	0:0	8	flags
op	23:31	0:0	8	&
water	23:33	0:0	8	SWS_FULL_CHR_H_INT
water	23:51	0:0	8	)
stmts	23:54	35:16	7	
water	23:54	0:0	8	{
switch	24:20	34:20	8	(c -> dstFormat)
cond	24:28	24:31	9	c -> dstFormat
water	24:28	0:0	10	c
op	24:29	0:0	10	->
water	24:31	0:0	10	dstFormat
stmts	24:42	34:20	9	
water	24:42	0:0	10	{
label	25:20	25:41	10	case AV_PIX_FMT_RGB32 :
water	25:45	0:0	10	c
op	25:46	0:0	10	->
water	25:48	0:0	10	yuv2packedX
op	25:60	0:0	10	=
call	25:62	25:80	10	RENAME
arg	25:69	25:80	11	yuv2rgb32_X
water	25:69	0:0	12	yuv2rgb32_X
water	25:81	0:0	10	;
break	25:85	25:90	10	
label	26:20	26:41	10	case AV_PIX_FMT_BGR32 :
water	26:45	0:0	10	c
op	26:46	0:0	10	->
water	26:48	0:0	10	yuv2packedX
op	26:60	0:0	10	=
call	26:62	26:80	10	RENAME
arg	26:69	26:80	11	yuv2bgr32_X
water	26:69	0:0	12	yuv2bgr32_X
water	26:81	0:0	10	;
break	26:85	26:90	10	
label	28:20	28:41	10	case AV_PIX_FMT_BGR24 :
water	28:45	0:0	10	c
op	28:46	0:0	10	->
water	28:48	0:0	10	yuv2packedX
op	28:60	0:0	10	=
call	28:62	28:80	10	RENAME
arg	28:69	28:80	11	yuv2bgr24_X
water	28:69	0:0	12	yuv2bgr24_X
water	28:81	0:0	10	;
break	28:85	28:90	10	
label	30:20	30:42	10	case AV_PIX_FMT_RGB555 :
water	30:45	0:0	10	c
op	30:46	0:0	10	->
water	30:48	0:0	10	yuv2packedX
op	30:60	0:0	10	=
call	30:62	30:81	10	RENAME
arg	30:69	30:81	11	yuv2rgb555_X
water	30:69	0:0	12	yuv2rgb555_X
water	30:82	0:0	10	;
break	30:85	30:90	10	
label	31:20	31:42	10	case AV_PIX_FMT_RGB565 :
water	31:45	0:0	10	c
op	31:46	0:0	10	->
water	31:48	0:0	10	yuv2packedX
op	31:60	0:0	10	=
call	31:62	31:81	10	RENAME
arg	31:69	31:81	11	yuv2rgb565_X
water	31:69	0:0	12	yuv2rgb565_X
water	31:82	0:0	10	;
break	31:85	31:90	10	
label	32:20	32:43	10	case AV_PIX_FMT_YUYV422 :
water	32:45	0:0	10	c
op	32:46	0:0	10	->
water	32:48	0:0	10	yuv2packedX
op	32:60	0:0	10	=
call	32:62	32:82	10	RENAME
arg	32:69	32:82	11	yuv2yuyv422_X
water	32:69	0:0	12	yuv2yuyv422_X
water	32:83	0:0	10	;
break	32:85	32:90	10	
label	33:20	33:27	10	default :
break	33:29	33:34	10	
water	34:20	0:0	10	}
water	35:16	0:0	8	}
water	36:12	0:0	6	}
if	37:8	62:8	4	(! ( c -> flags & SWS_FULL_CHR_H_INT ))
cond	37:12	37:43	5	! ( c -> flags & SWS_FULL_CHR_H_INT )
op	37:12	0:0	6	!
water	37:13	0:0	6	(
water	37:14	0:0	6	c
op	37:15	0:0	6	->
water	37:17	0:0	6	flags
op	37:23	0:0	6	&
water	37:25	0:0	6	SWS_FULL_CHR_H_INT
water	37:43	0:0	6	)
stmts	37:46	62:8	5	
water	37:46	0:0	6	{
switch	38:12	61:12	6	(c -> dstFormat)
cond	38:20	38:23	7	c -> dstFormat
water	38:20	0:0	8	c
op	38:21	0:0	8	->
water	38:23	0:0	8	dstFormat
stmts	38:34	61:12	7	
water	38:34	0:0	8	{
label	39:12	39:33	8	case AV_PIX_FMT_RGB32 :
water	40:16	0:0	8	c
op	40:17	0:0	8	->
water	40:19	0:0	8	yuv2packed1
op	40:31	0:0	8	=
call	40:33	40:51	8	RENAME
arg	40:40	40:51	9	yuv2rgb32_1
water	40:40	0:0	10	yuv2rgb32_1
water	40:52	0:0	8	;
water	41:16	0:0	8	c
op	41:17	0:0	8	->
water	41:19	0:0	8	yuv2packed2
op	41:31	0:0	8	=
call	41:33	41:51	8	RENAME
arg	41:40	41:51	9	yuv2rgb32_2
water	41:40	0:0	10	yuv2rgb32_2
water	41:52	0:0	8	;
break	42:16	42:21	8	
label	43:12	43:33	8	case AV_PIX_FMT_BGR24 :
water	44:16	0:0	8	c
op	44:17	0:0	8	->
water	44:19	0:0	8	yuv2packed1
op	44:31	0:0	8	=
call	44:33	44:51	8	RENAME
arg	44:40	44:51	9	yuv2bgr24_1
water	44:40	0:0	10	yuv2bgr24_1
water	44:52	0:0	8	;
water	45:16	0:0	8	c
op	45:17	0:0	8	->
water	45:19	0:0	8	yuv2packed2
op	45:31	0:0	8	=
call	45:33	45:51	8	RENAME
arg	45:40	45:51	9	yuv2bgr24_2
water	45:40	0:0	10	yuv2bgr24_2
water	45:52	0:0	8	;
break	46:16	46:21	8	
label	47:12	47:34	8	case AV_PIX_FMT_RGB555 :
water	48:16	0:0	8	c
op	48:17	0:0	8	->
water	48:19	0:0	8	yuv2packed1
op	48:31	0:0	8	=
call	48:33	48:52	8	RENAME
arg	48:40	48:52	9	yuv2rgb555_1
water	48:40	0:0	10	yuv2rgb555_1
water	48:53	0:0	8	;
water	49:16	0:0	8	c
op	49:17	0:0	8	->
water	49:19	0:0	8	yuv2packed2
op	49:31	0:0	8	=
call	49:33	49:52	8	RENAME
arg	49:40	49:52	9	yuv2rgb555_2
water	49:40	0:0	10	yuv2rgb555_2
water	49:53	0:0	8	;
break	50:16	50:21	8	
label	51:12	51:34	8	case AV_PIX_FMT_RGB565 :
water	52:16	0:0	8	c
op	52:17	0:0	8	->
water	52:19	0:0	8	yuv2packed1
op	52:31	0:0	8	=
call	52:33	52:52	8	RENAME
arg	52:40	52:52	9	yuv2rgb565_1
water	52:40	0:0	10	yuv2rgb565_1
water	52:53	0:0	8	;
water	53:16	0:0	8	c
op	53:17	0:0	8	->
water	53:19	0:0	8	yuv2packed2
op	53:31	0:0	8	=
call	53:33	53:52	8	RENAME
arg	53:40	53:52	9	yuv2rgb565_2
water	53:40	0:0	10	yuv2rgb565_2
water	53:53	0:0	8	;
break	54:16	54:21	8	
label	55:12	55:35	8	case AV_PIX_FMT_YUYV422 :
water	56:16	0:0	8	c
op	56:17	0:0	8	->
water	56:19	0:0	8	yuv2packed1
op	56:31	0:0	8	=
call	56:33	56:53	8	RENAME
arg	56:40	56:53	9	yuv2yuyv422_1
water	56:40	0:0	10	yuv2yuyv422_1
water	56:54	0:0	8	;
water	57:16	0:0	8	c
op	57:17	0:0	8	->
water	57:19	0:0	8	yuv2packed2
op	57:31	0:0	8	=
call	57:33	57:53	8	RENAME
arg	57:40	57:53	9	yuv2yuyv422_2
water	57:40	0:0	10	yuv2yuyv422_2
water	57:54	0:0	8	;
break	58:16	58:21	8	
label	59:12	59:19	8	default :
break	60:16	60:21	8	
water	61:12	0:0	8	}
water	62:8	0:0	6	}
water	63:4	0:0	4	}
if	64:4	77:4	2	(c -> srcBpc == 8 && c -> dstBpc <= 14)
cond	64:8	64:39	3	c -> srcBpc == 8 && c -> dstBpc <= 14
water	64:8	0:0	4	c
op	64:9	0:0	4	->
water	64:11	0:0	4	srcBpc
op	64:18	0:0	4	==
water	64:21	0:0	4	8
op	64:23	0:0	4	&&
water	64:26	0:0	4	c
op	64:27	0:0	4	->
water	64:29	0:0	4	dstBpc
op	64:36	0:0	4	<=
water	64:39	0:0	4	14
stmts	64:43	77:4	3	
water	64:43	0:0	4	{
if	67:4	70:4	4	(c -> flags & SWS_FAST_BILINEAR && c -> canMMXEXTBeUsed)
cond	67:8	67:43	5	c -> flags & SWS_FAST_BILINEAR && c -> canMMXEXTBeUsed
water	67:8	0:0	6	c
op	67:9	0:0	6	->
water	67:11	0:0	6	flags
op	67:17	0:0	6	&
water	67:19	0:0	6	SWS_FAST_BILINEAR
op	67:37	0:0	6	&&
water	67:40	0:0	6	c
op	67:41	0:0	6	->
water	67:43	0:0	6	canMMXEXTBeUsed
stmts	67:60	70:4	5	
water	67:60	0:0	6	{
water	68:8	0:0	6	c
op	68:9	0:0	6	->
water	68:11	0:0	6	hyscale_fast
op	68:24	0:0	6	=
water	68:26	0:0	6	ff_hyscale_fast_mmxext
water	68:48	0:0	6	;
water	69:8	0:0	6	c
op	69:9	0:0	6	->
water	69:11	0:0	6	hcscale_fast
op	69:24	0:0	6	=
water	69:26	0:0	6	ff_hcscale_fast_mmxext
water	69:48	0:0	6	;
water	70:4	0:0	6	}
else	70:6	75:4	4
stmts	70:11	75:4	5	
water	70:11	0:0	6	{
water	72:8	0:0	6	c
op	72:9	0:0	6	->
water	72:11	0:0	6	hyscale_fast
op	72:24	0:0	6	=
water	72:26	0:0	6	NULL
water	72:30	0:0	6	;
water	73:8	0:0	6	c
op	73:9	0:0	6	->
water	73:11	0:0	6	hcscale_fast
op	73:24	0:0	6	=
water	73:26	0:0	6	NULL
water	73:30	0:0	6	;
water	75:4	0:0	6	}
water	77:4	0:0	4	}

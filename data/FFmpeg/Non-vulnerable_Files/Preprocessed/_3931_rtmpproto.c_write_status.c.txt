func	1:0	40:0	0	static int	write_status
params	1:23	0:0	1	
param	1:24	1:37	2	URLContext *	s
param	1:39	1:54	2	RTMPPacket *	pkt
param	2:24	2:42	2	const char *	status
param	2:44	2:64	2	const char *	filename
stmnts	0:0	39:14	1	
decl	4:4	4:34	2	RTMPContext	*rt
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	priv_data
decl	5:4	5:27	2	RTMPPacket	spkt
op	5:20	0:0	2	=
water	5:22	0:0	2	{
water	5:24	0:0	2	0
water	5:26	0:0	2	}
decl	6:4	6:23	2	char	statusmsg[128]
decl	7:4	7:15	2	uint8_t	*pp
decl	8:4	8:11	2	int	ret
if	9:4	14:4	2	(( ret =ff_rtmp_packet_create (& spkt ,RTMP_SYSTEM_CHANNEL ,RTMP_PT_INVOKE ,0 ,RTMP_PKTDATA_DEFAULT_SIZE ) ) < 0)
cond	9:8	11:67	3	( ret =ff_rtmp_packet_create (& spkt ,RTMP_SYSTEM_CHANNEL ,RTMP_PT_INVOKE ,0 ,RTMP_PKTDATA_DEFAULT_SIZE ) ) < 0
water	9:8	0:0	4	(
water	9:9	0:0	4	ret
op	9:13	0:0	4	=
call	9:15	11:62	4	ff_rtmp_packet_create
arg	9:37	9:42	5	&spkt
op	9:37	0:0	6	&
water	9:38	0:0	6	spkt
arg	9:44	9:63	5	RTMP_SYSTEM_CHANNEL
water	9:44	0:0	6	RTMP_SYSTEM_CHANNEL
arg	10:37	10:51	5	RTMP_PT_INVOKE
water	10:37	0:0	6	RTMP_PT_INVOKE
arg	10:53	10:54	5	0
water	10:53	0:0	6	0
arg	11:37	11:62	5	RTMP_PKTDATA_DEFAULT_SIZE
water	11:37	0:0	6	RTMP_PKTDATA_DEFAULT_SIZE
water	11:63	0:0	4	)
op	11:65	0:0	4	<
water	11:67	0:0	4	0
stmts	11:70	14:4	3	
water	11:70	0:0	4	{
call	12:8	12:68	4	av_log
arg	12:15	12:16	5	s
water	12:15	0:0	6	s
arg	12:18	12:30	5	AV_LOG_ERROR
water	12:18	0:0	6	AV_LOG_ERROR
arg	12:32	12:68	5	"Unable to create response packet\n"
water	12:32	0:0	6	"Unable to create response packet\n"
water	12:69	0:0	4	;
return	13:8	13:18	4	ret
water	13:15	0:0	5	ret
water	14:4	0:0	4	}
water	15:4	0:0	2	pp
op	15:7	0:0	2	=
water	15:9	0:0	2	spkt
op	15:13	0:0	2	.
water	15:14	0:0	2	data
water	15:18	0:0	2	;
water	16:4	0:0	2	spkt
op	16:8	0:0	2	.
water	16:9	0:0	2	extra
op	16:15	0:0	2	=
water	16:17	0:0	2	pkt
op	16:20	0:0	2	->
water	16:22	0:0	2	extra
water	16:27	0:0	2	;
call	17:4	17:39	2	ff_amf_write_string
arg	17:24	17:27	3	&pp
op	17:24	0:0	4	&
water	17:25	0:0	4	pp
arg	17:29	17:39	3	"onStatus"
water	17:29	0:0	4	"onStatus"
water	17:40	0:0	2	;
call	18:4	18:30	2	ff_amf_write_number
arg	18:24	18:27	3	&pp
op	18:24	0:0	4	&
water	18:25	0:0	4	pp
arg	18:29	18:30	3	0
water	18:29	0:0	4	0
water	18:31	0:0	2	;
call	19:4	19:25	2	ff_amf_write_null
arg	19:22	19:25	3	&pp
op	19:22	0:0	4	&
water	19:23	0:0	4	pp
water	19:26	0:0	2	;
call	20:4	20:33	2	ff_amf_write_object_start
arg	20:30	20:33	3	&pp
op	20:30	0:0	4	&
water	20:31	0:0	4	pp
water	20:34	0:0	2	;
call	21:4	21:40	2	ff_amf_write_field_name
arg	21:28	21:31	3	&pp
op	21:28	0:0	4	&
water	21:29	0:0	4	pp
arg	21:33	21:40	3	"level"
water	21:33	0:0	4	"level"
water	21:41	0:0	2	;
call	22:4	22:37	2	ff_amf_write_string
arg	22:24	22:27	3	&pp
op	22:24	0:0	4	&
water	22:25	0:0	4	pp
arg	22:29	22:37	3	"status"
water	22:29	0:0	4	"status"
water	22:38	0:0	2	;
call	23:4	23:39	2	ff_amf_write_field_name
arg	23:28	23:31	3	&pp
op	23:28	0:0	4	&
water	23:29	0:0	4	pp
arg	23:33	23:39	3	"code"
water	23:33	0:0	4	"code"
water	23:40	0:0	2	;
call	24:4	24:35	2	ff_amf_write_string
arg	24:24	24:27	3	&pp
op	24:24	0:0	4	&
water	24:25	0:0	4	pp
arg	24:29	24:35	3	status
water	24:29	0:0	4	status
water	24:36	0:0	2	;
call	25:4	25:46	2	ff_amf_write_field_name
arg	25:28	25:31	3	&pp
op	25:28	0:0	4	&
water	25:29	0:0	4	pp
arg	25:33	25:46	3	"description"
water	25:33	0:0	4	"description"
water	25:47	0:0	2	;
call	26:4	27:44	2	snprintf
arg	26:13	26:22	3	statusmsg
water	26:13	0:0	4	statusmsg
arg	26:24	26:41	3	sizeof(statusmsg)
op	26:24	0:0	4	sizeof
water	26:30	0:0	4	(
water	26:31	0:0	4	statusmsg
water	26:40	0:0	4	)
arg	27:13	27:34	3	"%s is now published"
water	27:13	0:0	4	"%s is now published"
arg	27:36	27:44	3	filename
water	27:36	0:0	4	filename
water	27:45	0:0	2	;
call	28:4	28:38	2	ff_amf_write_string
arg	28:24	28:27	3	&pp
op	28:24	0:0	4	&
water	28:25	0:0	4	pp
arg	28:29	28:38	3	statusmsg
water	28:29	0:0	4	statusmsg
water	28:39	0:0	2	;
call	29:4	29:42	2	ff_amf_write_field_name
arg	29:28	29:31	3	&pp
op	29:28	0:0	4	&
water	29:29	0:0	4	pp
arg	29:33	29:42	3	"details"
water	29:33	0:0	4	"details"
water	29:43	0:0	2	;
call	30:4	30:37	2	ff_amf_write_string
arg	30:24	30:27	3	&pp
op	30:24	0:0	4	&
water	30:25	0:0	4	pp
arg	30:29	30:37	3	filename
water	30:29	0:0	4	filename
water	30:38	0:0	2	;
call	31:4	31:43	2	ff_amf_write_field_name
arg	31:28	31:31	3	&pp
op	31:28	0:0	4	&
water	31:29	0:0	4	pp
arg	31:33	31:43	3	"clientid"
water	31:33	0:0	4	"clientid"
water	31:44	0:0	2	;
call	32:4	32:66	2	snprintf
arg	32:13	32:22	3	statusmsg
water	32:13	0:0	4	statusmsg
arg	32:24	32:41	3	sizeof(statusmsg)
op	32:24	0:0	4	sizeof
water	32:30	0:0	4	(
water	32:31	0:0	4	statusmsg
water	32:40	0:0	4	)
arg	32:43	32:47	3	"%s"
water	32:43	0:0	4	"%s"
arg	32:49	32:66	3	LIBAVFORMAT_IDENT
water	32:49	0:0	4	LIBAVFORMAT_IDENT
water	32:67	0:0	2	;
call	33:4	33:38	2	ff_amf_write_string
arg	33:24	33:27	3	&pp
op	33:24	0:0	4	&
water	33:25	0:0	4	pp
arg	33:29	33:38	3	statusmsg
water	33:29	0:0	4	statusmsg
water	33:39	0:0	2	;
call	34:4	34:31	2	ff_amf_write_object_end
arg	34:28	34:31	3	&pp
op	34:28	0:0	4	&
water	34:29	0:0	4	pp
water	34:32	0:0	2	;
water	35:4	0:0	2	spkt
op	35:8	0:0	2	.
water	35:9	0:0	2	size
op	35:14	0:0	2	=
water	35:16	0:0	2	pp
op	35:19	0:0	2	-
water	35:21	0:0	2	spkt
op	35:25	0:0	2	.
water	35:26	0:0	2	data
water	35:30	0:0	2	;
water	36:4	0:0	2	ret
op	36:8	0:0	2	=
call	36:10	37:68	2	ff_rtmp_packet_write
arg	36:31	36:41	3	rt->stream
water	36:31	0:0	4	rt
op	36:33	0:0	4	->
water	36:35	0:0	4	stream
arg	36:43	36:48	3	&spkt
op	36:43	0:0	4	&
water	36:44	0:0	4	spkt
arg	36:50	36:68	3	rt->out_chunk_size
water	36:50	0:0	4	rt
op	36:52	0:0	4	->
water	36:54	0:0	4	out_chunk_size
arg	37:31	37:47	3	&rt->prev_pkt[1]
op	37:31	0:0	4	&
water	37:32	0:0	4	rt
op	37:34	0:0	4	->
water	37:36	0:0	4	prev_pkt
op	37:44	0:0	4	[
water	37:45	0:0	4	1
op	37:46	0:0	4	]
arg	37:49	37:68	3	&rt->nb_prev_pkt[1]
op	37:49	0:0	4	&
water	37:50	0:0	4	rt
op	37:52	0:0	4	->
water	37:54	0:0	4	nb_prev_pkt
op	37:65	0:0	4	[
water	37:66	0:0	4	1
op	37:67	0:0	4	]
water	37:69	0:0	2	;
call	38:4	38:32	2	ff_rtmp_packet_destroy
arg	38:27	38:32	3	&spkt
op	38:27	0:0	4	&
water	38:28	0:0	4	spkt
water	38:33	0:0	2	;
return	39:4	39:14	2	ret
water	39:11	0:0	3	ret

func	1:15	35:0	0	int	decode_init
params	1:30	0:0	1	
param	1:31	1:52	2	AVCodecContext *	avctx
stmnts	3:4	34:12	1	
water	3:4	0:0	2	EightBpsContext
op	3:20	0:0	2	*
water	3:22	0:0	2	const
water	3:28	0:0	2	c
op	3:30	0:0	2	=
water	3:32	0:0	2	avctx
op	3:37	0:0	2	->
water	3:39	0:0	2	priv_data
water	3:48	0:0	2	;
water	4:4	0:0	2	c
op	4:5	0:0	2	->
water	4:7	0:0	2	avctx
op	4:19	0:0	2	=
water	4:21	0:0	2	avctx
water	4:26	0:0	2	;
switch	5:4	27:4	2	(avctx -> bits_per_coded_sample)
cond	5:12	5:19	3	avctx -> bits_per_coded_sample
water	5:12	0:0	4	avctx
op	5:17	0:0	4	->
water	5:19	0:0	4	bits_per_coded_sample
stmts	5:42	27:4	3	
water	5:42	0:0	4	{
label	6:4	6:10	4	case 8 :
water	7:8	0:0	4	avctx
op	7:13	0:0	4	->
water	7:15	0:0	4	pix_fmt
op	7:23	0:0	4	=
water	7:25	0:0	4	AV_PIX_FMT_PAL8
water	7:40	0:0	4	;
water	8:8	0:0	4	c
op	8:9	0:0	4	->
water	8:11	0:0	4	planes
op	8:23	0:0	4	=
water	8:25	0:0	4	1
water	8:26	0:0	4	;
water	9:8	0:0	4	c
op	9:9	0:0	4	->
water	9:11	0:0	4	planemap
op	9:19	0:0	4	[
water	9:20	0:0	4	0
op	9:21	0:0	4	]
op	9:23	0:0	4	=
water	9:25	0:0	4	0
water	9:26	0:0	4	;
break	10:8	10:13	4	
label	11:4	11:11	4	case 24 :
water	12:8	0:0	4	avctx
op	12:13	0:0	4	->
water	12:15	0:0	4	pix_fmt
op	12:23	0:0	4	=
call	12:25	12:58	4	ff_get_format
arg	12:39	12:44	5	avctx
water	12:39	0:0	6	avctx
arg	12:46	12:58	5	pixfmt_rgb24
water	12:46	0:0	6	pixfmt_rgb24
water	12:59	0:0	4	;
water	13:8	0:0	4	c
op	13:9	0:0	4	->
water	13:11	0:0	4	planes
op	13:23	0:0	4	=
water	13:25	0:0	4	3
water	13:26	0:0	4	;
water	14:8	0:0	4	c
op	14:9	0:0	4	->
water	14:11	0:0	4	planemap
op	14:19	0:0	4	[
water	14:20	0:0	4	0
op	14:21	0:0	4	]
op	14:23	0:0	4	=
water	14:25	0:0	4	2
water	14:26	0:0	4	;
water	15:8	0:0	4	c
op	15:9	0:0	4	->
water	15:11	0:0	4	planemap
op	15:19	0:0	4	[
water	15:20	0:0	4	1
op	15:21	0:0	4	]
op	15:23	0:0	4	=
water	15:25	0:0	4	1
water	15:26	0:0	4	;
water	16:8	0:0	4	c
op	16:9	0:0	4	->
water	16:11	0:0	4	planemap
op	16:19	0:0	4	[
water	16:20	0:0	4	2
op	16:21	0:0	4	]
op	16:23	0:0	4	=
water	16:25	0:0	4	0
water	16:26	0:0	4	;
break	17:8	17:13	4	
label	18:4	18:11	4	case 32 :
water	19:8	0:0	4	avctx
op	19:13	0:0	4	->
water	19:15	0:0	4	pix_fmt
op	19:23	0:0	4	=
water	19:25	0:0	4	AV_PIX_FMT_RGB32
water	19:41	0:0	4	;
water	20:8	0:0	4	c
op	20:9	0:0	4	->
water	20:11	0:0	4	planes
op	20:23	0:0	4	=
water	20:25	0:0	4	4
water	20:26	0:0	4	;
break	22:8	22:13	4	
label	23:4	23:11	4	default :
call	24:8	25:43	4	av_log
arg	24:15	24:20	5	avctx
water	24:15	0:0	6	avctx
arg	24:22	24:34	5	AV_LOG_ERROR
water	24:22	0:0	6	AV_LOG_ERROR
arg	24:36	24:75	5	"Error: Unsupported color depth: %u.\n"
water	24:36	0:0	6	"Error: Unsupported color depth: %u.\n"
arg	25:15	25:43	5	avctx->bits_per_coded_sample
water	25:15	0:0	6	avctx
op	25:20	0:0	6	->
water	25:22	0:0	6	bits_per_coded_sample
water	25:44	0:0	4	;
return	26:8	26:34	4	AVERROR_INVALIDDATA
water	26:15	0:0	5	AVERROR_INVALIDDATA
water	27:4	0:0	4	}
if	28:4	33:4	2	(avctx -> pix_fmt == AV_PIX_FMT_RGB32)
cond	28:8	28:26	3	avctx -> pix_fmt == AV_PIX_FMT_RGB32
water	28:8	0:0	4	avctx
op	28:13	0:0	4	->
water	28:15	0:0	4	pix_fmt
op	28:23	0:0	4	==
water	28:26	0:0	4	AV_PIX_FMT_RGB32
stmts	28:44	33:4	3	
water	28:44	0:0	4	{
water	29:8	0:0	4	c
op	29:9	0:0	4	->
water	29:11	0:0	4	planemap
op	29:19	0:0	4	[
water	29:20	0:0	4	0
op	29:21	0:0	4	]
op	29:23	0:0	4	=
water	29:25	0:0	4	HAVE_BIGENDIAN
water	29:40	0:0	4	?
water	29:42	0:0	4	1
water	29:44	0:0	4	:
water	29:46	0:0	4	2
water	29:47	0:0	4	;
water	30:8	0:0	4	c
op	30:9	0:0	4	->
water	30:11	0:0	4	planemap
op	30:19	0:0	4	[
water	30:20	0:0	4	1
op	30:21	0:0	4	]
op	30:23	0:0	4	=
water	30:25	0:0	4	HAVE_BIGENDIAN
water	30:40	0:0	4	?
water	30:42	0:0	4	2
water	30:44	0:0	4	:
water	30:46	0:0	4	1
water	30:47	0:0	4	;
water	31:8	0:0	4	c
op	31:9	0:0	4	->
water	31:11	0:0	4	planemap
op	31:19	0:0	4	[
water	31:20	0:0	4	2
op	31:21	0:0	4	]
op	31:23	0:0	4	=
water	31:25	0:0	4	HAVE_BIGENDIAN
water	31:40	0:0	4	?
water	31:42	0:0	4	3
water	31:44	0:0	4	:
water	31:46	0:0	4	0
water	31:47	0:0	4	;
water	32:8	0:0	4	c
op	32:9	0:0	4	->
water	32:11	0:0	4	planemap
op	32:19	0:0	4	[
water	32:20	0:0	4	3
op	32:21	0:0	4	]
op	32:23	0:0	4	=
water	32:25	0:0	4	HAVE_BIGENDIAN
water	32:40	0:0	4	?
water	32:42	0:0	4	0
water	32:44	0:0	4	:
water	32:46	0:0	4	3
water	32:47	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:12	2	0
water	34:11	0:0	3	0

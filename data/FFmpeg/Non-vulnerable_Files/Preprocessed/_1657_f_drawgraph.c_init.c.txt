func	1:15	19:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	18:12	1	
decl	3:4	3:35	2	DrawGraphContext	*s
op	3:24	0:0	2	=
water	3:26	0:0	2	ctx
op	3:29	0:0	2	->
water	3:31	0:0	2	priv
decl	4:4	4:14	2	int	ret
water	4:11	0:0	2	,
decl	4:4	4:14	2	int	i
if	5:4	8:4	2	(s -> max <= s -> min)
cond	5:8	5:21	3	s -> max <= s -> min
water	5:8	0:0	4	s
op	5:9	0:0	4	->
water	5:11	0:0	4	max
op	5:15	0:0	4	<=
water	5:18	0:0	4	s
op	5:19	0:0	4	->
water	5:21	0:0	4	min
stmts	5:26	8:4	3	
water	5:26	0:0	4	{
call	6:8	6:67	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	6:34	6:67	5	"max is same or lower than min\n"
water	6:34	0:0	6	"max is same or lower than min\n"
water	6:68	0:0	4	;
return	7:8	7:30	4	AVERROR(EINVAL)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	EINVAL
water	7:23	0:0	7	EINVAL
water	8:4	0:0	4	}
for	9:4	16:4	2	(i = 0 ;i < 4;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:20	3	i < 4
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	4
forexpr	9:23	9:24	3	i ++
water	9:23	0:0	4	i
op	9:24	0:0	4	++
stmts	9:28	16:4	3	
water	9:28	0:0	4	{
if	10:8	15:8	4	(s -> fg_str [ i ])
cond	10:12	10:23	5	s -> fg_str [ i ]
water	10:12	0:0	6	s
op	10:13	0:0	6	->
water	10:15	0:0	6	fg_str
op	10:21	0:0	6	[
water	10:22	0:0	6	i
op	10:23	0:0	6	]
stmts	10:26	15:8	5	
water	10:26	0:0	6	{
water	11:12	0:0	6	ret
op	11:16	0:0	6	=
call	11:18	12:62	6	av_expr_parse
arg	11:32	11:46	7	&s->fg_expr[i]
op	11:32	0:0	8	&
water	11:33	0:0	8	s
op	11:34	0:0	8	->
water	11:36	0:0	8	fg_expr
op	11:43	0:0	8	[
water	11:44	0:0	8	i
op	11:45	0:0	8	]
arg	11:48	11:60	7	s->fg_str[i]
water	11:48	0:0	8	s
op	11:49	0:0	8	->
water	11:51	0:0	8	fg_str
op	11:57	0:0	8	[
water	11:58	0:0	8	i
op	11:59	0:0	8	]
arg	11:62	11:71	7	var_names
water	11:62	0:0	8	var_names
arg	12:32	12:36	7	NULL
water	12:32	0:0	8	NULL
arg	12:38	12:42	7	NULL
water	12:38	0:0	8	NULL
arg	12:44	12:48	7	NULL
water	12:44	0:0	8	NULL
arg	12:50	12:54	7	NULL
water	12:50	0:0	8	NULL
arg	12:56	12:57	7	0
water	12:56	0:0	8	0
arg	12:59	12:62	7	ctx
water	12:59	0:0	8	ctx
water	12:63	0:0	6	;
if	13:12	14:26	6	(ret < 0)
cond	13:16	13:22	7	ret < 0
water	13:16	0:0	8	ret
op	13:20	0:0	8	<
water	13:22	0:0	8	0
stmts	14:16	14:26	7	
return	14:16	14:26	8	ret
water	14:23	0:0	9	ret
water	15:8	0:0	6	}
water	16:4	0:0	4	}
water	17:4	0:0	2	s
op	17:5	0:0	2	->
water	17:7	0:0	2	first
op	17:13	0:0	2	=
water	17:15	0:0	2	1
water	17:16	0:0	2	;
return	18:4	18:12	2	0
water	18:11	0:0	3	0

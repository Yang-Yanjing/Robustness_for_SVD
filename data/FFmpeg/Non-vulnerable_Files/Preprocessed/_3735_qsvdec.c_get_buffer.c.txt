func	1:0	30:0	0	static int	get_buffer
params	1:21	0:0	1	
param	1:22	1:43	2	AVCodecContext *	avctx
param	1:45	1:59	2	AVFrame *	frame
param	1:61	1:70	2	int	flags
stmnts	0:0	29:12	1	
decl	3:4	3:41	2	DecodeContext	*decode
op	3:26	0:0	2	=
water	3:28	0:0	2	avctx
op	3:33	0:0	2	->
water	3:35	0:0	2	opaque
decl	4:4	4:26	2	mfxFrameSurface1	*surf
decl	5:4	5:25	2	AVBufferRef	*surf_buf
decl	6:4	6:11	2	int	idx
for	7:4	10:4	2	(idx = 0 ;idx < decode -> nb_surfaces;idx ++)
forinit	7:9	7:16	3	idx = 0 ;
water	7:9	0:0	4	idx
op	7:13	0:0	4	=
water	7:15	0:0	4	0
water	7:16	0:0	4	;
cond	7:18	7:32	3	idx < decode -> nb_surfaces
water	7:18	0:0	4	idx
op	7:22	0:0	4	<
water	7:24	0:0	4	decode
op	7:30	0:0	4	->
water	7:32	0:0	4	nb_surfaces
forexpr	7:45	7:48	3	idx ++
water	7:45	0:0	4	idx
op	7:48	0:0	4	++
stmts	7:52	10:4	3	
water	7:52	0:0	4	{
if	8:8	9:17	4	(! decode -> surface_used [ idx ])
cond	8:12	8:37	5	! decode -> surface_used [ idx ]
op	8:12	0:0	6	!
water	8:13	0:0	6	decode
op	8:19	0:0	6	->
water	8:21	0:0	6	surface_used
op	8:33	0:0	6	[
water	8:34	0:0	6	idx
op	8:37	0:0	6	]
stmts	9:12	9:17	5	
break	9:12	9:17	6	
water	10:4	0:0	4	}
if	11:4	14:4	2	(idx == decode -> nb_surfaces)
cond	11:8	11:23	3	idx == decode -> nb_surfaces
water	11:8	0:0	4	idx
op	11:12	0:0	4	==
water	11:15	0:0	4	decode
op	11:21	0:0	4	->
water	11:23	0:0	4	nb_surfaces
stmts	11:36	14:4	3	
water	11:36	0:0	4	{
call	12:8	12:44	4	fprintf
arg	12:16	12:22	5	stderr
water	12:16	0:0	6	stderr
arg	12:24	12:44	5	"No free surfaces\n"
water	12:24	0:0	6	"No free surfaces\n"
water	12:45	0:0	4	;
return	13:8	13:30	4	AVERROR(ENOMEM)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	ENOMEM
water	13:23	0:0	7	ENOMEM
water	14:4	0:0	4	}
water	15:4	0:0	2	surf
op	15:9	0:0	2	=
call	15:11	15:35	2	av_mallocz
arg	15:22	15:35	3	sizeof(*surf)
op	15:22	0:0	4	sizeof
water	15:28	0:0	4	(
op	15:29	0:0	4	*
water	15:30	0:0	4	surf
water	15:34	0:0	4	)
water	15:36	0:0	2	;
if	16:4	17:30	2	(! surf)
cond	16:8	16:9	3	! surf
op	16:8	0:0	4	!
water	16:9	0:0	4	surf
stmts	17:8	17:30	3	
return	17:8	17:30	4	AVERROR(ENOMEM)
call	17:15	17:29	5	AVERROR
arg	17:23	17:29	6	ENOMEM
water	17:23	0:0	7	ENOMEM
water	18:4	0:0	2	surf_buf
op	18:13	0:0	2	=
call	18:15	19:83	2	av_buffer_create
arg	18:32	18:46	3	(uint8_t*)surf
water	18:32	0:0	4	(
water	18:33	0:0	4	uint8_t
op	18:40	0:0	4	*
water	18:41	0:0	4	)
water	18:42	0:0	4	surf
arg	18:48	18:61	3	sizeof(*surf)
op	18:48	0:0	4	sizeof
water	18:54	0:0	4	(
op	18:55	0:0	4	*
water	18:56	0:0	4	surf
water	18:60	0:0	4	)
arg	18:63	18:74	3	free_buffer
water	18:63	0:0	4	free_buffer
arg	19:32	19:58	3	&decode->surface_used[idx]
op	19:32	0:0	4	&
water	19:33	0:0	4	decode
op	19:39	0:0	4	->
water	19:41	0:0	4	surface_used
op	19:53	0:0	4	[
water	19:54	0:0	4	idx
op	19:57	0:0	4	]
arg	19:60	19:83	3	AV_BUFFER_FLAG_READONLY
water	19:60	0:0	4	AV_BUFFER_FLAG_READONLY
water	19:84	0:0	2	;
if	20:4	23:4	2	(! surf_buf)
cond	20:8	20:9	3	! surf_buf
op	20:8	0:0	4	!
water	20:9	0:0	4	surf_buf
stmts	20:19	23:4	3	
water	20:19	0:0	4	{
call	21:8	21:22	4	av_freep
arg	21:17	21:22	5	&surf
op	21:17	0:0	6	&
water	21:18	0:0	6	surf
water	21:23	0:0	4	;
return	22:8	22:30	4	AVERROR(ENOMEM)
call	22:15	22:29	5	AVERROR
arg	22:23	22:29	6	ENOMEM
water	22:23	0:0	7	ENOMEM
water	23:4	0:0	4	}
water	24:4	0:0	2	surf
op	24:8	0:0	2	->
water	24:10	0:0	2	Info
op	24:21	0:0	2	=
water	24:23	0:0	2	decode
op	24:29	0:0	2	->
water	24:31	0:0	2	frame_info
water	24:41	0:0	2	;
water	25:4	0:0	2	surf
op	25:8	0:0	2	->
water	25:10	0:0	2	Data
op	25:14	0:0	2	.
water	25:15	0:0	2	MemId
op	25:21	0:0	2	=
op	25:23	0:0	2	&
water	25:24	0:0	2	decode
op	25:30	0:0	2	->
water	25:32	0:0	2	surfaces
op	25:40	0:0	2	[
water	25:41	0:0	2	idx
op	25:44	0:0	2	]
water	25:45	0:0	2	;
water	26:4	0:0	2	frame
op	26:9	0:0	2	->
water	26:11	0:0	2	buf
op	26:14	0:0	2	[
water	26:15	0:0	2	0
op	26:16	0:0	2	]
op	26:19	0:0	2	=
water	26:21	0:0	2	surf_buf
water	26:29	0:0	2	;
water	27:4	0:0	2	frame
op	27:9	0:0	2	->
water	27:11	0:0	2	data
op	27:15	0:0	2	[
water	27:16	0:0	2	3
op	27:17	0:0	2	]
op	27:19	0:0	2	=
water	27:21	0:0	2	(
water	27:22	0:0	2	uint8_t
op	27:29	0:0	2	*
water	27:30	0:0	2	)
water	27:31	0:0	2	surf
water	27:35	0:0	2	;
water	28:4	0:0	2	decode
op	28:10	0:0	2	->
water	28:12	0:0	2	surface_used
op	28:24	0:0	2	[
water	28:25	0:0	2	idx
op	28:28	0:0	2	]
op	28:30	0:0	2	=
water	28:32	0:0	2	1
water	28:33	0:0	2	;
return	29:4	29:12	2	0
water	29:11	0:0	3	0

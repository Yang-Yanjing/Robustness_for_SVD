func	1:0	24:0	0	static int64_t	nut_read_timestamp
params	1:33	0:0	1	
param	1:34	1:52	2	AVFormatContext *	s
param	1:54	1:70	2	int	stream_index
param	2:34	2:50	2	int64_t *	pos_arg
param	2:52	2:69	2	int64_t	pos_limit
stmnts	0:0	23:14	1	
decl	4:4	4:34	2	NUTContext	*nut
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	priv_data
decl	5:4	5:27	2	AVIOContext	*bc
op	5:20	0:0	2	=
water	5:22	0:0	2	s
op	5:23	0:0	2	->
water	5:25	0:0	2	pb
decl	6:4	6:30	2	int64_t	pos
water	6:15	0:0	2	,
decl	6:4	6:30	2	int64_t	pts
water	6:20	0:0	2	,
decl	6:4	6:30	2	int64_t	back_ptr
call	7:4	8:44	2	av_log
arg	7:11	7:12	3	s
water	7:11	0:0	4	s
arg	7:14	7:26	3	AV_LOG_DEBUG
water	7:14	0:0	4	AV_LOG_DEBUG
arg	7:28	7:72	3	"read_timestamp(X,%d,%"PRId64",%"PRId64")\n"
water	7:28	0:0	4	"read_timestamp(X,%d,%"
water	7:51	0:0	4	PRId64
water	7:57	0:0	4	",%"
water	7:61	0:0	4	PRId64
water	7:67	0:0	4	")\n"
arg	8:11	8:23	3	stream_index
water	8:11	0:0	4	stream_index
arg	8:25	8:33	3	*pos_arg
op	8:25	0:0	4	*
water	8:26	0:0	4	pos_arg
arg	8:35	8:44	3	pos_limit
water	8:35	0:0	4	pos_limit
water	8:45	0:0	2	;
water	9:4	0:0	2	pos
op	9:8	0:0	2	=
op	9:10	0:0	2	*
water	9:11	0:0	2	pos_arg
water	9:18	0:0	2	;
do	10:4	16:4	2	(decode_syncpoint (nut ,& pts ,& back_ptr ) < 0)
cond	16:13	16:54	3	decode_syncpoint (nut ,& pts ,& back_ptr ) < 0
call	16:13	16:50	4	decode_syncpoint
arg	16:30	16:33	5	nut
water	16:30	0:0	6	nut
arg	16:35	16:39	5	&pts
op	16:35	0:0	6	&
water	16:36	0:0	6	pts
arg	16:41	16:50	5	&back_ptr
op	16:41	0:0	6	&
water	16:42	0:0	6	back_ptr
op	16:52	0:0	4	<
water	16:54	0:0	4	0
stmts	10:7	16:4	3	
water	10:7	0:0	4	{
water	11:8	0:0	4	pos
op	11:12	0:0	4	=
call	11:14	11:57	4	find_startcode
arg	11:29	11:31	5	bc
water	11:29	0:0	6	bc
arg	11:33	11:52	5	SYNCPOINT_STARTCODE
water	11:33	0:0	6	SYNCPOINT_STARTCODE
arg	11:54	11:57	5	pos
water	11:54	0:0	6	pos
op	11:59	0:0	4	+
water	11:61	0:0	4	1
water	11:62	0:0	4	;
if	12:8	15:8	4	(pos < 1)
cond	12:12	12:18	5	pos < 1
water	12:12	0:0	6	pos
op	12:16	0:0	6	<
water	12:18	0:0	6	1
stmts	12:21	15:8	5	
water	12:21	0:0	6	{
call	13:12	13:62	6	av_log
arg	13:19	13:20	7	s
water	13:19	0:0	8	s
arg	13:22	13:34	7	AV_LOG_ERROR
water	13:22	0:0	8	AV_LOG_ERROR
arg	13:36	13:62	7	"read_timestamp failed.\n"
water	13:36	0:0	8	"read_timestamp failed.\n"
water	13:63	0:0	6	;
return	14:12	14:33	6	AV_NOPTS_VALUE
water	14:19	0:0	7	AV_NOPTS_VALUE
water	15:8	0:0	6	}
water	16:4	0:0	4	}
water	16:56	0:0	2	;
op	17:4	0:0	2	*
water	17:5	0:0	2	pos_arg
op	17:13	0:0	2	=
water	17:15	0:0	2	pos
op	17:19	0:0	2	-
water	17:21	0:0	2	1
water	17:22	0:0	2	;
call	18:4	18:50	2	av_assert0
arg	18:15	18:50	3	nut->last_syncpoint_pos==*pos_arg
water	18:15	0:0	4	nut
op	18:18	0:0	4	->
water	18:20	0:0	4	last_syncpoint_pos
op	18:39	0:0	4	==
op	18:42	0:0	4	*
water	18:43	0:0	4	pos_arg
water	18:51	0:0	2	;
call	19:4	19:73	2	av_log
arg	19:11	19:12	3	s
water	19:11	0:0	4	s
arg	19:14	19:26	3	AV_LOG_DEBUG
water	19:14	0:0	4	AV_LOG_DEBUG
arg	19:28	19:58	3	"return %"PRId64" %"PRId64"\n"
water	19:28	0:0	4	"return %"
water	19:38	0:0	4	PRId64
water	19:44	0:0	4	" %"
water	19:48	0:0	4	PRId64
water	19:54	0:0	4	"\n"
arg	19:60	19:63	3	pts
water	19:60	0:0	4	pts
arg	19:65	19:73	3	back_ptr
water	19:65	0:0	4	back_ptr
water	19:74	0:0	2	;
if	20:4	21:23	2	(stream_index == - 2)
cond	20:8	20:25	3	stream_index == - 2
water	20:8	0:0	4	stream_index
op	20:21	0:0	4	==
op	20:24	0:0	4	-
water	20:25	0:0	4	2
stmts	21:8	21:23	3	
return	21:8	21:23	4	back_ptr
water	21:15	0:0	5	back_ptr
call	22:4	22:33	2	av_assert0
arg	22:15	22:33	3	stream_index==-1
water	22:15	0:0	4	stream_index
op	22:28	0:0	4	==
op	22:31	0:0	4	-
water	22:32	0:0	4	1
water	22:34	0:0	2	;
return	23:4	23:14	2	pts
water	23:11	0:0	3	pts

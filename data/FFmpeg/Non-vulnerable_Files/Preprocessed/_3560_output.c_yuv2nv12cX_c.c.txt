func	1:0	32:0	0	static void	yuv2nv12cX_c
params	1:24	0:0	1	
param	1:25	1:38	2	SwsContext *	c
param	1:40	1:64	2	const int16_t *	chrFilter
param	1:66	1:83	2	int	chrFilterSize
param	2:24	2:47	2	const int16_t * *	chrUSrc
param	2:49	2:72	2	const int16_t * *	chrVSrc
param	3:24	3:37	2	uint8_t *	dest
param	3:39	3:50	2	int	chrDstW
stmnts	0:0	31:8	1	
decl	5:4	5:47	2	enum AVPixelFormat	dstFormat
op	5:33	0:0	2	=
water	5:35	0:0	2	c
op	5:36	0:0	2	->
water	5:38	0:0	2	dstFormat
decl	6:4	6:44	2	const uint8_t	*chrDither
op	6:29	0:0	2	=
water	6:31	0:0	2	c
op	6:32	0:0	2	->
water	6:34	0:0	2	chrDither8
decl	7:4	7:9	2	int	i
if	8:4	19:8	2	(dstFormat == AV_PIX_FMT_NV12)
cond	8:8	8:21	3	dstFormat == AV_PIX_FMT_NV12
water	8:8	0:0	4	dstFormat
op	8:18	0:0	4	==
water	8:21	0:0	4	AV_PIX_FMT_NV12
stmts	9:8	19:8	3	
for	9:8	19:8	4	(i = 0 ;i < chrDstW;i ++)
forinit	9:13	9:16	5	i = 0 ;
water	9:13	0:0	6	i
op	9:14	0:0	6	=
water	9:15	0:0	6	0
water	9:16	0:0	6	;
cond	9:18	9:20	5	i < chrDstW
water	9:18	0:0	6	i
op	9:19	0:0	6	<
water	9:20	0:0	6	chrDstW
forexpr	9:29	9:30	5	i ++
water	9:29	0:0	6	i
op	9:30	0:0	6	++
stmts	9:34	19:8	5	
water	9:34	0:0	6	{
decl	10:12	10:42	6	int	u
op	10:18	0:0	6	=
water	10:20	0:0	6	chrDither
op	10:29	0:0	6	[
water	10:30	0:0	6	i
op	10:32	0:0	6	&
water	10:34	0:0	6	7
op	10:35	0:0	6	]
op	10:37	0:0	6	<<
water	10:40	0:0	6	12
decl	11:12	11:48	6	int	v
op	11:18	0:0	6	=
water	11:20	0:0	6	chrDither
op	11:29	0:0	6	[
water	11:30	0:0	6	(
water	11:31	0:0	6	i
op	11:33	0:0	6	+
water	11:35	0:0	6	3
water	11:36	0:0	6	)
op	11:38	0:0	6	&
water	11:40	0:0	6	7
op	11:41	0:0	6	]
op	11:43	0:0	6	<<
water	11:46	0:0	6	12
decl	12:12	12:17	6	int	j
for	13:12	16:12	6	(j = 0 ;j < chrFilterSize;j ++)
forinit	13:17	13:20	7	j = 0 ;
water	13:17	0:0	8	j
op	13:18	0:0	8	=
water	13:19	0:0	8	0
water	13:20	0:0	8	;
cond	13:22	13:24	7	j < chrFilterSize
water	13:22	0:0	8	j
op	13:23	0:0	8	<
water	13:24	0:0	8	chrFilterSize
forexpr	13:39	13:40	7	j ++
water	13:39	0:0	8	j
op	13:40	0:0	8	++
stmts	13:44	16:12	7	
water	13:44	0:0	8	{
water	14:16	0:0	8	u
op	14:18	0:0	8	+=
water	14:21	0:0	8	chrUSrc
op	14:28	0:0	8	[
water	14:29	0:0	8	j
op	14:30	0:0	8	]
op	14:31	0:0	8	[
water	14:32	0:0	8	i
op	14:33	0:0	8	]
op	14:35	0:0	8	*
water	14:37	0:0	8	chrFilter
op	14:46	0:0	8	[
water	14:47	0:0	8	j
op	14:48	0:0	8	]
water	14:49	0:0	8	;
water	15:16	0:0	8	v
op	15:18	0:0	8	+=
water	15:21	0:0	8	chrVSrc
op	15:28	0:0	8	[
water	15:29	0:0	8	j
op	15:30	0:0	8	]
op	15:31	0:0	8	[
water	15:32	0:0	8	i
op	15:33	0:0	8	]
op	15:35	0:0	8	*
water	15:37	0:0	8	chrFilter
op	15:46	0:0	8	[
water	15:47	0:0	8	j
op	15:48	0:0	8	]
water	15:49	0:0	8	;
water	16:12	0:0	8	}
water	17:12	0:0	6	dest
op	17:16	0:0	6	[
water	17:17	0:0	6	2
op	17:18	0:0	6	*
water	17:19	0:0	6	i
op	17:20	0:0	6	]
op	17:21	0:0	6	=
call	17:23	17:42	6	av_clip_uint8
arg	17:37	17:42	7	u>>19
water	17:37	0:0	8	u
op	17:38	0:0	8	>>
water	17:40	0:0	8	19
water	17:43	0:0	6	;
water	18:12	0:0	6	dest
op	18:16	0:0	6	[
water	18:17	0:0	6	2
op	18:18	0:0	6	*
water	18:19	0:0	6	i
op	18:20	0:0	6	+
water	18:21	0:0	6	1
op	18:22	0:0	6	]
op	18:23	0:0	6	=
call	18:25	18:44	6	av_clip_uint8
arg	18:39	18:44	7	v>>19
water	18:39	0:0	8	v
op	18:40	0:0	8	>>
water	18:42	0:0	8	19
water	18:45	0:0	6	;
water	19:8	0:0	6	}
else	20:4	31:8	2
stmts	21:8	31:8	3	
for	21:8	31:8	4	(i = 0 ;i < chrDstW;i ++)
forinit	21:13	21:16	5	i = 0 ;
water	21:13	0:0	6	i
op	21:14	0:0	6	=
water	21:15	0:0	6	0
water	21:16	0:0	6	;
cond	21:18	21:20	5	i < chrDstW
water	21:18	0:0	6	i
op	21:19	0:0	6	<
water	21:20	0:0	6	chrDstW
forexpr	21:29	21:30	5	i ++
water	21:29	0:0	6	i
op	21:30	0:0	6	++
stmts	21:34	31:8	5	
water	21:34	0:0	6	{
decl	22:12	22:42	6	int	u
op	22:18	0:0	6	=
water	22:20	0:0	6	chrDither
op	22:29	0:0	6	[
water	22:30	0:0	6	i
op	22:32	0:0	6	&
water	22:34	0:0	6	7
op	22:35	0:0	6	]
op	22:37	0:0	6	<<
water	22:40	0:0	6	12
decl	23:12	23:48	6	int	v
op	23:18	0:0	6	=
water	23:20	0:0	6	chrDither
op	23:29	0:0	6	[
water	23:30	0:0	6	(
water	23:31	0:0	6	i
op	23:33	0:0	6	+
water	23:35	0:0	6	3
water	23:36	0:0	6	)
op	23:38	0:0	6	&
water	23:40	0:0	6	7
op	23:41	0:0	6	]
op	23:43	0:0	6	<<
water	23:46	0:0	6	12
decl	24:12	24:17	6	int	j
for	25:12	28:12	6	(j = 0 ;j < chrFilterSize;j ++)
forinit	25:17	25:20	7	j = 0 ;
water	25:17	0:0	8	j
op	25:18	0:0	8	=
water	25:19	0:0	8	0
water	25:20	0:0	8	;
cond	25:22	25:24	7	j < chrFilterSize
water	25:22	0:0	8	j
op	25:23	0:0	8	<
water	25:24	0:0	8	chrFilterSize
forexpr	25:39	25:40	7	j ++
water	25:39	0:0	8	j
op	25:40	0:0	8	++
stmts	25:44	28:12	7	
water	25:44	0:0	8	{
water	26:16	0:0	8	u
op	26:18	0:0	8	+=
water	26:21	0:0	8	chrUSrc
op	26:28	0:0	8	[
water	26:29	0:0	8	j
op	26:30	0:0	8	]
op	26:31	0:0	8	[
water	26:32	0:0	8	i
op	26:33	0:0	8	]
op	26:35	0:0	8	*
water	26:37	0:0	8	chrFilter
op	26:46	0:0	8	[
water	26:47	0:0	8	j
op	26:48	0:0	8	]
water	26:49	0:0	8	;
water	27:16	0:0	8	v
op	27:18	0:0	8	+=
water	27:21	0:0	8	chrVSrc
op	27:28	0:0	8	[
water	27:29	0:0	8	j
op	27:30	0:0	8	]
op	27:31	0:0	8	[
water	27:32	0:0	8	i
op	27:33	0:0	8	]
op	27:35	0:0	8	*
water	27:37	0:0	8	chrFilter
op	27:46	0:0	8	[
water	27:47	0:0	8	j
op	27:48	0:0	8	]
water	27:49	0:0	8	;
water	28:12	0:0	8	}
water	29:12	0:0	6	dest
op	29:16	0:0	6	[
water	29:17	0:0	6	2
op	29:18	0:0	6	*
water	29:19	0:0	6	i
op	29:20	0:0	6	]
op	29:21	0:0	6	=
call	29:23	29:42	6	av_clip_uint8
arg	29:37	29:42	7	v>>19
water	29:37	0:0	8	v
op	29:38	0:0	8	>>
water	29:40	0:0	8	19
water	29:43	0:0	6	;
water	30:12	0:0	6	dest
op	30:16	0:0	6	[
water	30:17	0:0	6	2
op	30:18	0:0	6	*
water	30:19	0:0	6	i
op	30:20	0:0	6	+
water	30:21	0:0	6	1
op	30:22	0:0	6	]
op	30:23	0:0	6	=
call	30:25	30:44	6	av_clip_uint8
arg	30:39	30:44	7	u>>19
water	30:39	0:0	8	u
op	30:40	0:0	8	>>
water	30:42	0:0	8	19
water	30:45	0:0	6	;
water	31:8	0:0	6	}

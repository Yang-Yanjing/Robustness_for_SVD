func	1:0	39:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	38:12	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:11	2	void	*k
decl	5:4	5:41	2	AVTreeNode	*root
op	5:21	0:0	2	=
water	5:23	0:0	2	NULL
water	5:27	0:0	2	,
decl	5:4	5:41	2	AVTreeNode	*node
op	5:35	0:0	2	=
water	5:37	0:0	2	NULL
decl	6:4	6:14	2	AVLFG	prng
decl	7:4	7:59	2	int	log_level
op	7:18	0:0	2	=
water	7:20	0:0	2	argc
op	7:25	0:0	2	<=
water	7:28	0:0	2	1
water	7:30	0:0	2	?
water	7:32	0:0	2	AV_LOG_INFO
water	7:44	0:0	2	:
call	7:46	7:58	3	atoi
arg	7:51	7:58	4	argv[1]
water	7:51	0:0	5	argv
op	7:55	0:0	5	[
water	7:56	0:0	5	1
op	7:57	0:0	5	]
call	8:4	8:30	2	av_log_set_level
arg	8:21	8:30	3	log_level
water	8:21	0:0	4	log_level
water	8:31	0:0	2	;
call	9:4	9:24	2	av_lfg_init
arg	9:16	9:21	3	&prng
op	9:16	0:0	4	&
water	9:17	0:0	4	prng
arg	9:23	9:24	3	1
water	9:23	0:0	4	1
water	9:25	0:0	2	;
for	10:4	35:4	2	(i = 0 ;i < 10000;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:20	3	i < 10000
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	10000
forexpr	10:27	10:28	3	i ++
water	10:27	0:0	4	i
op	10:28	0:0	4	++
stmts	10:32	35:4	3	
water	10:32	0:0	4	{
decl	11:8	11:46	4	intptr_t	j
op	11:19	0:0	4	=
call	11:21	11:37	5	av_lfg_get
arg	11:32	11:37	6	&prng
op	11:32	0:0	7	&
water	11:33	0:0	7	prng
op	11:39	0:0	4	%
water	11:41	0:0	4	86294
if	12:8	16:8	4	(check (root ) > 999)
cond	12:12	12:26	5	check (root ) > 999
call	12:12	12:22	6	check
arg	12:18	12:22	7	root
water	12:18	0:0	8	root
op	12:24	0:0	6	>
water	12:26	0:0	6	999
stmts	12:31	16:8	5	
water	12:31	0:0	6	{
call	13:12	13:60	6	av_log
arg	13:19	13:23	7	NULL
water	13:19	0:0	8	NULL
arg	13:25	13:37	7	AV_LOG_ERROR
water	13:25	0:0	8	AV_LOG_ERROR
arg	13:39	13:57	7	"FATAL error %d\n"
water	13:39	0:0	8	"FATAL error %d\n"
arg	13:59	13:60	7	i
water	13:59	0:0	8	i
water	13:61	0:0	6	;
call	14:12	14:25	6	print
arg	14:18	14:22	7	root
water	14:18	0:0	8	root
arg	14:24	14:25	7	0
water	14:24	0:0	8	0
water	14:26	0:0	6	;
return	15:12	15:20	6	1
water	15:19	0:0	7	1
water	16:8	0:0	6	}
call	17:8	17:60	4	av_log
arg	17:15	17:19	5	NULL
water	17:15	0:0	6	NULL
arg	17:21	17:33	5	AV_LOG_DEBUG
water	17:21	0:0	6	AV_LOG_DEBUG
arg	17:35	17:52	5	"inserting %4d\n"
water	17:35	0:0	6	"inserting %4d\n"
arg	17:54	17:60	5	(int)j
water	17:54	0:0	6	(
water	17:55	0:0	6	int
water	17:58	0:0	6	)
water	17:59	0:0	6	j
water	17:61	0:0	4	;
if	18:8	19:39	4	(! node)
cond	18:12	18:13	5	! node
op	18:12	0:0	6	!
water	18:13	0:0	6	node
stmts	19:12	19:39	5	
water	19:12	0:0	6	node
op	19:17	0:0	6	=
call	19:19	19:38	6	av_tree_node_alloc
water	19:39	0:0	6	;
if	20:8	23:8	4	(! node)
cond	20:12	20:13	5	! node
op	20:12	0:0	6	!
water	20:13	0:0	6	node
stmts	20:19	23:8	5	
water	20:19	0:0	6	{
call	21:12	21:69	6	av_log
arg	21:19	21:23	7	NULL
water	21:19	0:0	8	NULL
arg	21:25	21:37	7	AV_LOG_ERROR
water	21:25	0:0	8	AV_LOG_ERROR
arg	21:39	21:69	7	"Memory allocation failure.\n"
water	21:39	0:0	8	"Memory allocation failure.\n"
water	21:70	0:0	6	;
return	22:12	22:20	6	1
water	22:19	0:0	7	1
water	23:8	0:0	6	}
call	24:8	24:57	4	av_tree_insert
arg	24:23	24:28	5	&root
op	24:23	0:0	6	&
water	24:24	0:0	6	root
arg	24:30	24:45	5	(void*)(j+1)
call	24:30	24:44	6	(void*)
arg	24:39	24:44	7	j+1
water	24:39	0:0	8	j
op	24:41	0:0	8	+
water	24:43	0:0	8	1
arg	24:47	24:50	5	cmp
water	24:47	0:0	6	cmp
arg	24:52	24:57	5	&node
op	24:52	0:0	6	&
water	24:53	0:0	6	node
water	24:58	0:0	4	;
water	25:8	0:0	4	j
op	25:10	0:0	4	=
call	25:12	25:28	4	av_lfg_get
arg	25:23	25:28	5	&prng
op	25:23	0:0	6	&
water	25:24	0:0	6	prng
op	25:30	0:0	4	%
water	25:32	0:0	4	86294
water	25:37	0:0	4	;
water	26:8	0:0	4	{
decl	27:12	27:36	4	AVTreeNode	*node2
op	27:30	0:0	4	=
water	27:32	0:0	4	NULL
call	28:12	28:63	4	av_log
arg	28:19	28:23	5	NULL
water	28:19	0:0	6	NULL
arg	28:25	28:37	5	AV_LOG_DEBUG
water	28:25	0:0	6	AV_LOG_DEBUG
arg	28:39	28:55	5	"removing %4d\n"
water	28:39	0:0	6	"removing %4d\n"
arg	28:57	28:63	5	(int)j
water	28:57	0:0	6	(
water	28:58	0:0	6	int
water	28:61	0:0	6	)
water	28:62	0:0	6	j
water	28:64	0:0	4	;
call	29:12	29:62	4	av_tree_insert
arg	29:27	29:32	5	&root
op	29:27	0:0	6	&
water	29:28	0:0	6	root
arg	29:34	29:49	5	(void*)(j+1)
call	29:34	29:48	6	(void*)
arg	29:43	29:48	7	j+1
water	29:43	0:0	8	j
op	29:45	0:0	8	+
water	29:47	0:0	8	1
arg	29:51	29:54	5	cmp
water	29:51	0:0	6	cmp
arg	29:56	29:62	5	&node2
op	29:56	0:0	6	&
water	29:57	0:0	6	node2
water	29:63	0:0	4	;
water	30:12	0:0	4	k
op	30:14	0:0	4	=
call	30:16	30:61	4	av_tree_find
arg	30:29	30:33	5	root
water	30:29	0:0	6	root
arg	30:35	30:50	5	(void*)(j+1)
call	30:35	30:49	6	(void*)
arg	30:44	30:49	7	j+1
water	30:44	0:0	8	j
op	30:46	0:0	8	+
water	30:48	0:0	8	1
arg	30:52	30:55	5	cmp
water	30:52	0:0	6	cmp
arg	30:57	30:61	5	NULL
water	30:57	0:0	6	NULL
water	30:62	0:0	4	;
if	31:12	32:69	4	(k)
cond	31:16	31:16	5	k
water	31:16	0:0	6	k
stmts	32:16	32:69	5	
call	32:16	32:68	6	av_log
arg	32:23	32:27	7	NULL
water	32:23	0:0	8	NULL
arg	32:29	32:41	7	AV_LOG_ERROR
water	32:29	0:0	8	AV_LOG_ERROR
arg	32:43	32:65	7	"removal failure %d\n"
water	32:43	0:0	8	"removal failure %d\n"
arg	32:67	32:68	7	i
water	32:67	0:0	8	i
water	32:69	0:0	6	;
call	33:12	33:25	4	av_free
arg	33:20	33:25	5	node2
water	33:20	0:0	6	node2
water	33:26	0:0	4	;
water	34:8	0:0	4	}
water	35:4	0:0	4	}
call	36:4	36:16	2	av_free
arg	36:12	36:16	3	node
water	36:12	0:0	4	node
water	36:17	0:0	2	;
call	37:4	37:24	2	av_tree_destroy
arg	37:20	37:24	3	root
water	37:20	0:0	4	root
water	37:25	0:0	2	;
return	38:4	38:12	2	0
water	38:11	0:0	3	0

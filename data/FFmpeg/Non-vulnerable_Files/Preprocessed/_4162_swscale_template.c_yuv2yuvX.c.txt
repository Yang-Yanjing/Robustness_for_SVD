func	1:12	52:0	0	RENAME	(yuv2yuvX)
params	1:28	0:0	1	
param	1:29	1:50	2	const int16_t *	filter
param	1:52	1:66	2	int	filterSize
param	2:27	2:46	2	const int16_t * *	src
param	2:48	2:61	2	uint8_t *	dest
param	2:63	2:71	2	int	dstW
param	3:27	3:48	2	const uint8_t *	dither
param	3:50	3:60	2	int	offset
stmnts	5:4	51:5	1	
call	5:4	5:31	2	dither_8to16
arg	5:17	5:23	3	dither
water	5:17	0:0	4	dither
arg	5:25	5:31	3	offset
water	5:25	0:0	4	offset
water	5:32	0:0	2	;
water	6:4	0:0	2	filterSize
op	6:14	0:0	2	--
water	6:16	0:0	2	;
water	7:4	0:0	2	__asm__
water	7:12	0:0	2	volatile
water	7:20	0:0	2	(
water	8:8	0:0	2	"movd %0, %%mm1\n\t"
water	9:8	0:0	2	"punpcklwd %%mm1, %%mm1\n\t"
water	10:8	0:0	2	"punpckldq %%mm1, %%mm1\n\t"
water	11:8	0:0	2	"psllw        $3, %%mm1\n\t"
water	12:8	0:0	2	"paddw     %%mm1, %%mm3\n\t"
water	13:8	0:0	2	"paddw     %%mm1, %%mm4\n\t"
water	14:8	0:0	2	"psraw        $4, %%mm3\n\t"
water	15:8	0:0	2	"psraw        $4, %%mm4\n\t"
op	16:8	0:0	2	::
water	16:10	0:0	2	"m"
water	16:13	0:0	2	(
water	16:14	0:0	2	filterSize
water	16:24	0:0	2	)
water	17:5	0:0	2	)
water	17:6	0:0	2	;
water	18:4	0:0	2	__asm__
water	18:12	0:0	2	volatile
water	18:20	0:0	2	(
water	19:8	0:0	2	"movq    %%mm3, %%mm6\n\t"
water	20:8	0:0	2	"movq    %%mm4, %%mm7\n\t"
water	21:8	0:0	2	"movl %3, %%ecx\n\t"
water	22:8	0:0	2	"mov                                 %0, %%"
water	22:52	0:0	2	REG_d
water	22:57	0:0	2	"  \n\t"
water	23:8	0:0	2	"mov                        (%%"
water	23:40	0:0	2	REG_d
water	23:45	0:0	2	"), %%"
water	23:52	0:0	2	REG_S
water	23:57	0:0	2	"  \n\t"
water	24:8	0:0	2	".p2align                             4             \n\t"
water	25:8	0:0	2	"1:                                                 \n\t"
water	26:8	0:0	2	"movq                      8(%%"
water	26:40	0:0	2	REG_d
water	26:45	0:0	2	"), %%mm0      \n\t"
water	27:8	0:0	2	"movq                (%%"
water	27:33	0:0	2	REG_S
water	27:38	0:0	2	", %%"
water	27:44	0:0	2	REG_c
water	27:49	0:0	2	", 2), %%mm2      \n\t"
water	28:8	0:0	2	"movq               8(%%"
water	28:33	0:0	2	REG_S
water	28:38	0:0	2	", %%"
water	28:44	0:0	2	REG_c
water	28:49	0:0	2	", 2), %%mm5      \n\t"
water	29:8	0:0	2	"add                                $16, %%"
water	29:52	0:0	2	REG_d
water	29:57	0:0	2	"  \n\t"
water	30:8	0:0	2	"mov                        (%%"
water	30:40	0:0	2	REG_d
water	30:45	0:0	2	"), %%"
water	30:52	0:0	2	REG_S
water	30:57	0:0	2	"  \n\t"
water	31:8	0:0	2	"test                         %%"
water	31:41	0:0	2	REG_S
water	31:46	0:0	2	", %%"
water	31:52	0:0	2	REG_S
water	31:57	0:0	2	"  \n\t"
water	32:8	0:0	2	"pmulhw                           %%mm0, %%mm2      \n\t"
water	33:8	0:0	2	"pmulhw                           %%mm0, %%mm5      \n\t"
water	34:8	0:0	2	"paddw                            %%mm2, %%mm3      \n\t"
water	35:8	0:0	2	"paddw                            %%mm5, %%mm4      \n\t"
water	36:8	0:0	2	" jnz                                1b             \n\t"
water	37:8	0:0	2	"psraw                               $3, %%mm3      \n\t"
water	38:8	0:0	2	"psraw                               $3, %%mm4      \n\t"
water	39:8	0:0	2	"packuswb                         %%mm4, %%mm3      \n\t"
water	40:8	0:0	2	MOVNTQ2
water	40:16	0:0	2	"                         %%mm3, (%1, %%"
water	40:57	0:0	2	REG_c
water	40:62	0:0	2	")\n\t"
water	41:8	0:0	2	"add                          $8, %%"
water	41:45	0:0	2	REG_c
water	41:50	0:0	2	"         \n\t"
water	42:8	0:0	2	"cmp                          %2, %%"
water	42:45	0:0	2	REG_c
water	42:50	0:0	2	"         \n\t"
water	43:8	0:0	2	"movq    %%mm6, %%mm3\n\t"
water	44:8	0:0	2	"movq    %%mm7, %%mm4\n\t"
water	45:8	0:0	2	"mov                                 %0, %%"
water	45:52	0:0	2	REG_d
water	45:57	0:0	2	"  \n\t"
water	46:8	0:0	2	"mov                        (%%"
water	46:40	0:0	2	REG_d
water	46:45	0:0	2	"), %%"
water	46:52	0:0	2	REG_S
water	46:57	0:0	2	"  \n\t"
water	47:8	0:0	2	"jb                                  1b             \n\t"
op	48:8	0:0	2	::
water	48:11	0:0	2	"g"
water	48:15	0:0	2	(
water	48:16	0:0	2	filter
water	48:22	0:0	2	)
water	48:23	0:0	2	,
water	49:11	0:0	2	"r"
water	49:15	0:0	2	(
water	49:16	0:0	2	dest
op	49:20	0:0	2	-
water	49:21	0:0	2	offset
water	49:27	0:0	2	)
water	49:28	0:0	2	,
water	49:30	0:0	2	"g"
water	49:34	0:0	2	(
call	49:35	49:56	2	(x86_reg)
arg	49:45	49:56	3	dstW+offset
water	49:45	0:0	4	dstW
op	49:49	0:0	4	+
water	49:50	0:0	4	offset
water	49:57	0:0	2	)
water	49:58	0:0	2	,
water	49:60	0:0	2	"m"
water	49:64	0:0	2	(
water	49:65	0:0	2	offset
water	49:71	0:0	2	)
water	50:8	0:0	2	:
water	50:10	0:0	2	"%"
water	50:13	0:0	2	REG_d
water	50:18	0:0	2	,
water	50:20	0:0	2	"%"
water	50:23	0:0	2	REG_S
water	50:28	0:0	2	,
water	50:30	0:0	2	"%"
water	50:33	0:0	2	REG_c
water	51:4	0:0	2	)
water	51:5	0:0	2	;

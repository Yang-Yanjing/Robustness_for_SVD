func	1:0	13:0	0	int	av_audio_fifo_realloc
params	1:25	0:0	1	
param	1:26	1:41	2	AVAudioFifo *	af
param	1:43	1:57	2	int	nb_samples
stmnts	0:0	12:12	1	
decl	3:4	3:24	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:24	2	int	ret
water	3:14	0:0	2	,
decl	3:4	3:24	2	int	buf_size
if	4:4	6:18	2	(( ret =av_samples_get_buffer_size (& buf_size ,af -> channels ,nb_samples ,af -> sample_fmt ,1 ) ) < 0)
cond	4:8	5:64	3	( ret =av_samples_get_buffer_size (& buf_size ,af -> channels ,nb_samples ,af -> sample_fmt ,1 ) ) < 0
water	4:8	0:0	4	(
water	4:9	0:0	4	ret
op	4:13	0:0	4	=
call	4:15	5:59	4	av_samples_get_buffer_size
arg	4:42	4:51	5	&buf_size
op	4:42	0:0	6	&
water	4:43	0:0	6	buf_size
arg	4:53	4:65	5	af->channels
water	4:53	0:0	6	af
op	4:55	0:0	6	->
water	4:57	0:0	6	channels
arg	4:67	4:77	5	nb_samples
water	4:67	0:0	6	nb_samples
arg	5:42	5:56	5	af->sample_fmt
water	5:42	0:0	6	af
op	5:44	0:0	6	->
water	5:46	0:0	6	sample_fmt
arg	5:58	5:59	5	1
water	5:58	0:0	6	1
water	5:60	0:0	4	)
op	5:62	0:0	4	<
water	5:64	0:0	4	0
stmts	6:8	6:18	3	
return	6:8	6:18	4	ret
water	6:15	0:0	5	ret
for	7:4	10:4	2	(i = 0 ;i < af -> nb_buffers;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:24	3	i < af -> nb_buffers
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	af
op	7:22	0:0	4	->
water	7:24	0:0	4	nb_buffers
forexpr	7:36	7:37	3	i ++
water	7:36	0:0	4	i
op	7:37	0:0	4	++
stmts	7:41	10:4	3	
water	7:41	0:0	4	{
if	8:8	9:22	4	(( ret =av_fifo_realloc2 (af -> buf [ i ] ,buf_size ) ) < 0)
cond	8:12	8:61	5	( ret =av_fifo_realloc2 (af -> buf [ i ] ,buf_size ) ) < 0
water	8:12	0:0	6	(
water	8:13	0:0	6	ret
op	8:17	0:0	6	=
call	8:19	8:56	6	av_fifo_realloc2
arg	8:36	8:46	7	af->buf[i]
water	8:36	0:0	8	af
op	8:38	0:0	8	->
water	8:40	0:0	8	buf
op	8:43	0:0	8	[
water	8:44	0:0	8	i
op	8:45	0:0	8	]
arg	8:48	8:56	7	buf_size
water	8:48	0:0	8	buf_size
water	8:57	0:0	6	)
op	8:59	0:0	6	<
water	8:61	0:0	6	0
stmts	9:12	9:22	5	
return	9:12	9:22	6	ret
water	9:19	0:0	7	ret
water	10:4	0:0	4	}
water	11:4	0:0	2	af
op	11:6	0:0	2	->
water	11:8	0:0	2	allocated_samples
op	11:26	0:0	2	=
water	11:28	0:0	2	nb_samples
water	11:38	0:0	2	;
return	12:4	12:12	2	0
water	12:11	0:0	3	0

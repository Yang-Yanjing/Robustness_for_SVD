func	1:0	16:0	0	static int	sdp_probe
params	1:20	0:0	1	
param	1:21	1:36	2	AVProbeData *	p1
stmnts	0:0	15:12	1	
decl	3:4	3:60	2	const char	*p
op	3:18	0:0	2	=
water	3:20	0:0	2	p1
op	3:22	0:0	2	->
water	3:24	0:0	2	buf
water	3:27	0:0	2	,
decl	3:4	3:60	2	const char	*p_end
op	3:36	0:0	2	=
water	3:38	0:0	2	p1
op	3:40	0:0	2	->
water	3:42	0:0	2	buf
op	3:46	0:0	2	+
water	3:48	0:0	2	p1
op	3:50	0:0	2	->
water	3:52	0:0	2	buf_size
while	5:4	14:4	2	(p < p_end && * p != '\0')
cond	5:11	5:30	3	p < p_end && * p != '\0'
water	5:11	0:0	4	p
op	5:13	0:0	4	<
water	5:15	0:0	4	p_end
op	5:21	0:0	4	&&
op	5:24	0:0	4	*
water	5:25	0:0	4	p
op	5:27	0:0	4	!=
water	5:30	0:0	4	'\0'
stmts	5:36	14:4	3	
water	5:36	0:0	4	{
if	6:8	8:42	4	(sizeof ( "c=IN IP" ) - 1 < p_end - p &&av_strstart (p ,"c=IN IP" ,NULL ))
cond	6:12	7:42	5	sizeof ( "c=IN IP" ) - 1 < p_end - p &&av_strstart (p ,"c=IN IP" ,NULL )
op	6:12	0:0	6	sizeof
water	6:18	0:0	6	(
water	6:19	0:0	6	"c=IN IP"
water	6:28	0:0	6	)
op	6:30	0:0	6	-
water	6:32	0:0	6	1
op	6:34	0:0	6	<
water	6:36	0:0	6	p_end
op	6:42	0:0	6	-
water	6:44	0:0	6	p
op	6:46	0:0	6	&&
call	7:12	7:42	6	av_strstart
arg	7:24	7:25	7	p
water	7:24	0:0	8	p
arg	7:27	7:36	7	"c=IN IP"
water	7:27	0:0	8	"c=IN IP"
arg	7:38	7:42	7	NULL
water	7:38	0:0	8	NULL
stmts	8:12	8:42	5	
return	8:12	8:42	6	AVPROBE_SCORE_EXTENSION
water	8:19	0:0	7	AVPROBE_SCORE_EXTENSION
while	9:8	9:47	4	(p < p_end - 1 && * p != '\n')
cond	9:15	9:38	5	p < p_end - 1 && * p != '\n'
water	9:15	0:0	6	p
op	9:17	0:0	6	<
water	9:19	0:0	6	p_end
op	9:25	0:0	6	-
water	9:27	0:0	6	1
op	9:29	0:0	6	&&
op	9:32	0:0	6	*
water	9:33	0:0	6	p
op	9:35	0:0	6	!=
water	9:38	0:0	6	'\n'
stmts	9:44	9:47	5	
water	9:44	0:0	6	p
op	9:45	0:0	6	++
water	9:47	0:0	6	;
if	10:8	11:17	4	(++ p >= p_end)
cond	10:12	10:19	5	++ p >= p_end
op	10:12	0:0	6	++
water	10:14	0:0	6	p
op	10:16	0:0	6	>=
water	10:19	0:0	6	p_end
stmts	11:12	11:17	5	
break	11:12	11:17	6	
if	12:8	13:15	4	(* p == '\r')
cond	12:12	12:18	5	* p == '\r'
op	12:12	0:0	6	*
water	12:13	0:0	6	p
op	12:15	0:0	6	==
water	12:18	0:0	6	'\r'
stmts	13:12	13:15	5	
water	13:12	0:0	6	p
op	13:13	0:0	6	++
water	13:15	0:0	6	;
water	14:4	0:0	4	}
return	15:4	15:12	2	0
water	15:11	0:0	3	0

func	1:0	53:0	0	static int	parse_points_str
params	1:27	0:0	1	
param	1:28	1:48	2	AVFilterContext *	ctx
param	1:50	1:74	2	struct keypoint * *	points
param	1:76	1:89	2	const char *	s
stmnts	0:0	52:12	1	
decl	3:4	3:23	2	char	*p
op	3:12	0:0	2	=
water	3:14	0:0	2	(
water	3:15	0:0	2	char
op	3:20	0:0	2	*
water	3:21	0:0	2	)
water	3:22	0:0	2	s
decl	4:4	4:32	2	struct keypoint	*last
op	4:26	0:0	2	=
water	4:28	0:0	2	NULL
while	6:4	30:4	2	(p && * p)
cond	6:11	6:17	3	p && * p
water	6:11	0:0	4	p
op	6:13	0:0	4	&&
op	6:16	0:0	4	*
water	6:17	0:0	4	p
stmts	6:20	30:4	3	
water	6:20	0:0	4	{
decl	7:8	7:55	4	struct keypoint	*point
op	7:31	0:0	4	=
call	7:33	7:54	5	make_point
arg	7:44	7:45	6	0
water	7:44	0:0	7	0
arg	7:47	7:48	6	0
water	7:47	0:0	7	0
arg	7:50	7:54	6	NULL
water	7:50	0:0	7	NULL
if	8:8	9:34	4	(! point)
cond	8:12	8:13	5	! point
op	8:12	0:0	6	!
water	8:13	0:0	6	point
stmts	9:12	9:34	5	
return	9:12	9:34	6	AVERROR(ENOMEM)
call	9:19	9:33	7	AVERROR
arg	9:27	9:33	8	ENOMEM
water	9:27	0:0	9	ENOMEM
water	10:8	0:0	4	point
op	10:13	0:0	4	->
water	10:15	0:0	4	x
op	10:17	0:0	4	=
call	10:19	10:34	4	av_strtod
arg	10:29	10:30	5	p
water	10:29	0:0	6	p
arg	10:32	10:34	5	&p
op	10:32	0:0	6	&
water	10:33	0:0	6	p
water	10:35	0:0	4	;
if	10:37	10:53	4	(p && * p)
cond	10:41	10:47	5	p && * p
water	10:41	0:0	6	p
op	10:43	0:0	6	&&
op	10:46	0:0	6	*
water	10:47	0:0	6	p
stmts	10:50	10:53	5	
water	10:50	0:0	6	p
op	10:51	0:0	6	++
water	10:53	0:0	6	;
water	11:8	0:0	4	point
op	11:13	0:0	4	->
water	11:15	0:0	4	y
op	11:17	0:0	4	=
call	11:19	11:34	4	av_strtod
arg	11:29	11:30	5	p
water	11:29	0:0	6	p
arg	11:32	11:34	5	&p
op	11:32	0:0	6	&
water	11:33	0:0	6	p
water	11:35	0:0	4	;
if	11:37	11:53	4	(p && * p)
cond	11:41	11:47	5	p && * p
water	11:41	0:0	6	p
op	11:43	0:0	6	&&
op	11:46	0:0	6	*
water	11:47	0:0	6	p
stmts	11:50	11:53	5	
water	11:50	0:0	6	p
op	11:51	0:0	6	++
water	11:53	0:0	6	;
if	12:8	16:8	4	(point -> x < 0 || point -> x > 1 || point -> y < 0 || point -> y > 1)
cond	12:12	12:71	5	point -> x < 0 || point -> x > 1 || point -> y < 0 || point -> y > 1
water	12:12	0:0	6	point
op	12:17	0:0	6	->
water	12:19	0:0	6	x
op	12:21	0:0	6	<
water	12:23	0:0	6	0
op	12:25	0:0	6	||
water	12:28	0:0	6	point
op	12:33	0:0	6	->
water	12:35	0:0	6	x
op	12:37	0:0	6	>
water	12:39	0:0	6	1
op	12:41	0:0	6	||
water	12:44	0:0	6	point
op	12:49	0:0	6	->
water	12:51	0:0	6	y
op	12:53	0:0	6	<
water	12:55	0:0	6	0
op	12:57	0:0	6	||
water	12:60	0:0	6	point
op	12:65	0:0	6	->
water	12:67	0:0	6	y
op	12:69	0:0	6	>
water	12:71	0:0	6	1
stmts	12:74	16:8	5	
water	12:74	0:0	6	{
call	13:12	14:78	6	av_log
arg	13:19	13:22	7	ctx
water	13:19	0:0	8	ctx
arg	13:24	13:36	7	AV_LOG_ERROR
water	13:24	0:0	8	AV_LOG_ERROR
arg	13:38	14:58	7	"Invalid key point coordinates (%f;%f), ""x and y must be in the [0;1] range.\n"
water	13:38	0:0	8	"Invalid key point coordinates (%f;%f), "
water	14:19	0:0	8	"x and y must be in the [0;1] range.\n"
arg	14:60	14:68	7	point->x
water	14:60	0:0	8	point
op	14:65	0:0	8	->
water	14:67	0:0	8	x
arg	14:70	14:78	7	point->y
water	14:70	0:0	8	point
op	14:75	0:0	8	->
water	14:77	0:0	8	y
water	14:79	0:0	6	;
return	15:12	15:34	6	AVERROR(EINVAL)
call	15:19	15:33	7	AVERROR
arg	15:27	15:33	8	EINVAL
water	15:27	0:0	9	EINVAL
water	16:8	0:0	6	}
if	17:8	18:27	4	(! * points)
cond	17:12	17:14	5	! * points
op	17:12	0:0	6	!
op	17:13	0:0	6	*
water	17:14	0:0	6	points
stmts	18:12	18:27	5	
op	18:12	0:0	6	*
water	18:13	0:0	6	points
op	18:20	0:0	6	=
water	18:22	0:0	6	point
water	18:27	0:0	6	;
if	19:8	28:8	4	(last)
cond	19:12	19:12	5	last
water	19:12	0:0	6	last
stmts	19:18	28:8	5	
water	19:18	0:0	6	{
if	20:12	26:12	6	(( int ) (last -> x * 255 ) >=( int ) (point -> x * 255 ))
cond	20:16	20:60	7	( int ) (last -> x * 255 ) >=( int ) (point -> x * 255 )
call	20:16	20:35	8	(int)
arg	20:22	20:35	9	last->x*255
water	20:22	0:0	10	last
op	20:26	0:0	10	->
water	20:28	0:0	10	x
op	20:30	0:0	10	*
water	20:32	0:0	10	255
op	20:37	0:0	8	>=
call	20:40	20:60	8	(int)
arg	20:46	20:60	9	point->x*255
water	20:46	0:0	10	point
op	20:51	0:0	10	->
water	20:53	0:0	10	x
op	20:55	0:0	10	*
water	20:57	0:0	10	255
stmts	20:63	26:12	7	
water	20:63	0:0	8	{
call	21:16	24:59	8	av_log
arg	21:23	21:26	9	ctx
water	21:23	0:0	10	ctx
arg	21:28	21:40	9	AV_LOG_ERROR
water	21:28	0:0	10	AV_LOG_ERROR
arg	21:42	23:60	9	"Key point coordinates (%f;%f) ""and (%f;%f) are too close from each other or not ""strictly increasing on the x-axis\n"
water	21:42	0:0	10	"Key point coordinates (%f;%f) "
water	22:23	0:0	10	"and (%f;%f) are too close from each other or not "
water	23:23	0:0	10	"strictly increasing on the x-axis\n"
arg	24:23	24:30	9	last->x
water	24:23	0:0	10	last
op	24:27	0:0	10	->
water	24:29	0:0	10	x
arg	24:32	24:39	9	last->y
water	24:32	0:0	10	last
op	24:36	0:0	10	->
water	24:38	0:0	10	y
arg	24:41	24:49	9	point->x
water	24:41	0:0	10	point
op	24:46	0:0	10	->
water	24:48	0:0	10	x
arg	24:51	24:59	9	point->y
water	24:51	0:0	10	point
op	24:56	0:0	10	->
water	24:58	0:0	10	y
water	24:60	0:0	8	;
return	25:16	25:38	8	AVERROR(EINVAL)
call	25:23	25:37	9	AVERROR
arg	25:31	25:37	10	EINVAL
water	25:31	0:0	11	EINVAL
water	26:12	0:0	8	}
water	27:12	0:0	6	last
op	27:16	0:0	6	->
water	27:18	0:0	6	next
op	27:23	0:0	6	=
water	27:25	0:0	6	point
water	27:30	0:0	6	;
water	28:8	0:0	6	}
water	29:8	0:0	4	last
op	29:13	0:0	4	=
water	29:15	0:0	4	point
water	29:20	0:0	4	;
water	30:4	0:0	4	}
if	32:4	38:4	2	(! * points)
cond	32:8	32:10	3	! * points
op	32:8	0:0	4	!
op	32:9	0:0	4	*
water	32:10	0:0	4	points
stmts	32:18	38:4	3	
water	32:18	0:0	4	{
water	33:8	0:0	4	last
op	33:13	0:0	4	=
call	33:15	33:36	4	make_point
arg	33:26	33:27	5	0
water	33:26	0:0	6	0
arg	33:29	33:30	5	0
water	33:29	0:0	6	0
arg	33:32	33:36	5	NULL
water	33:32	0:0	6	NULL
water	33:37	0:0	4	;
if	34:8	35:34	4	(! last)
cond	34:12	34:13	5	! last
op	34:12	0:0	6	!
water	34:13	0:0	6	last
stmts	35:12	35:34	5	
return	35:12	35:34	6	AVERROR(ENOMEM)
call	35:19	35:33	7	AVERROR
arg	35:27	35:33	8	ENOMEM
water	35:27	0:0	9	ENOMEM
water	36:8	0:0	4	last
op	36:12	0:0	4	->
water	36:14	0:0	4	x
op	36:16	0:0	4	=
water	36:18	0:0	4	last
op	36:22	0:0	4	->
water	36:24	0:0	4	y
op	36:26	0:0	4	=
water	36:28	0:0	4	0
water	36:29	0:0	4	;
op	37:8	0:0	4	*
water	37:9	0:0	4	points
op	37:16	0:0	4	=
water	37:18	0:0	4	last
water	37:22	0:0	4	;
water	38:4	0:0	4	}
else	38:6	43:4	2
stmts	38:11	43:4	3	
if	38:11	43:4	4	(( * points ) -> x != 0 .)
cond	38:15	38:32	5	( * points ) -> x != 0 .
water	38:15	0:0	6	(
op	38:16	0:0	6	*
water	38:17	0:0	6	points
water	38:23	0:0	6	)
op	38:24	0:0	6	->
water	38:26	0:0	6	x
op	38:28	0:0	6	!=
water	38:31	0:0	6	0
op	38:32	0:0	6	.
stmts	38:35	43:4	5	
water	38:35	0:0	6	{
decl	39:8	39:61	6	struct keypoint	*newfirst
op	39:34	0:0	6	=
call	39:36	39:60	7	make_point
arg	39:47	39:48	8	0
water	39:47	0:0	9	0
arg	39:50	39:51	8	0
water	39:50	0:0	9	0
arg	39:53	39:60	8	*points
op	39:53	0:0	9	*
water	39:54	0:0	9	points
if	40:8	41:34	6	(! newfirst)
cond	40:12	40:13	7	! newfirst
op	40:12	0:0	8	!
water	40:13	0:0	8	newfirst
stmts	41:12	41:34	7	
return	41:12	41:34	8	AVERROR(ENOMEM)
call	41:19	41:33	9	AVERROR
arg	41:27	41:33	10	ENOMEM
water	41:27	0:0	11	ENOMEM
op	42:8	0:0	6	*
water	42:9	0:0	6	points
op	42:16	0:0	6	=
water	42:18	0:0	6	newfirst
water	42:26	0:0	6	;
water	43:4	0:0	6	}
call	44:4	44:19	2	av_assert0
arg	44:15	44:19	3	last
water	44:15	0:0	4	last
water	44:20	0:0	2	;
if	46:4	51:4	2	(last -> x != 1 .)
cond	46:8	46:20	3	last -> x != 1 .
water	46:8	0:0	4	last
op	46:12	0:0	4	->
water	46:14	0:0	4	x
op	46:16	0:0	4	!=
water	46:19	0:0	4	1
op	46:20	0:0	4	.
stmts	46:23	51:4	3	
water	46:23	0:0	4	{
decl	47:8	47:55	4	struct keypoint	*point
op	47:31	0:0	4	=
call	47:33	47:54	5	make_point
arg	47:44	47:45	6	1
water	47:44	0:0	7	1
arg	47:47	47:48	6	1
water	47:47	0:0	7	1
arg	47:50	47:54	6	NULL
water	47:50	0:0	7	NULL
if	48:8	49:34	4	(! point)
cond	48:12	48:13	5	! point
op	48:12	0:0	6	!
water	48:13	0:0	6	point
stmts	49:12	49:34	5	
return	49:12	49:34	6	AVERROR(ENOMEM)
call	49:19	49:33	7	AVERROR
arg	49:27	49:33	8	ENOMEM
water	49:27	0:0	9	ENOMEM
water	50:8	0:0	4	last
op	50:12	0:0	4	->
water	50:14	0:0	4	next
op	50:19	0:0	4	=
water	50:21	0:0	4	point
water	50:26	0:0	4	;
water	51:4	0:0	4	}
return	52:4	52:12	2	0
water	52:11	0:0	3	0

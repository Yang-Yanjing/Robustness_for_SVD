func	1:0	47:0	0	static int	build_filter
params	1:23	0:0	1	
param	1:24	1:42	2	ResampleContext *	c
param	1:44	1:57	2	double	factor
stmnts	0:0	46:12	1	
decl	3:4	3:13	2	int	ph
water	3:10	0:0	2	,
decl	3:4	3:13	2	int	i
decl	4:4	4:18	2	double	x
water	4:12	0:0	2	,
decl	4:4	4:18	2	double	y
water	4:15	0:0	2	,
decl	4:4	4:18	2	double	w
decl	5:4	5:15	2	double	*tab
decl	6:4	6:39	2	int	tap_count
op	6:21	0:0	2	=
water	6:23	0:0	2	c
op	6:24	0:0	2	->
water	6:26	0:0	2	filter_length
decl	7:4	7:42	2	int	phase_count
op	7:21	0:0	2	=
water	7:23	0:0	2	1
op	7:25	0:0	2	<<
water	7:28	0:0	2	c
op	7:29	0:0	2	->
water	7:31	0:0	2	phase_shift
decl	8:4	8:42	2	const int	center
op	8:21	0:0	2	=
water	8:23	0:0	2	(
water	8:24	0:0	2	tap_count
op	8:34	0:0	2	-
water	8:36	0:0	2	1
water	8:37	0:0	2	)
op	8:39	0:0	2	/
water	8:41	0:0	2	2
water	9:4	0:0	2	tab
op	9:8	0:0	2	=
call	9:10	9:44	2	av_malloc
arg	9:20	9:44	3	tap_count*sizeof(*tab)
water	9:20	0:0	4	tap_count
op	9:30	0:0	4	*
op	9:32	0:0	4	sizeof
water	9:38	0:0	4	(
op	9:39	0:0	4	*
water	9:40	0:0	4	tab
water	9:43	0:0	4	)
water	9:45	0:0	2	;
if	10:4	11:30	2	(! tab)
cond	10:8	10:9	3	! tab
op	10:8	0:0	4	!
water	10:9	0:0	4	tab
stmts	11:8	11:30	3	
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
for	12:4	44:4	2	(ph = 0 ;ph < phase_count;ph ++)
forinit	12:9	12:15	3	ph = 0 ;
water	12:9	0:0	4	ph
op	12:12	0:0	4	=
water	12:14	0:0	4	0
water	12:15	0:0	4	;
cond	12:17	12:22	3	ph < phase_count
water	12:17	0:0	4	ph
op	12:20	0:0	4	<
water	12:22	0:0	4	phase_count
forexpr	12:35	12:37	3	ph ++
water	12:35	0:0	4	ph
op	12:37	0:0	4	++
stmts	12:41	44:4	3	
water	12:41	0:0	4	{
decl	13:8	13:23	4	double	norm
op	13:20	0:0	4	=
water	13:22	0:0	4	0
for	14:8	39:8	4	(i = 0 ;i < tap_count;i ++)
forinit	14:13	14:18	5	i = 0 ;
water	14:13	0:0	6	i
op	14:15	0:0	6	=
water	14:17	0:0	6	0
water	14:18	0:0	6	;
cond	14:20	14:24	5	i < tap_count
water	14:20	0:0	6	i
op	14:22	0:0	6	<
water	14:24	0:0	6	tap_count
forexpr	14:35	14:36	5	i ++
water	14:35	0:0	6	i
op	14:36	0:0	6	++
stmts	14:40	39:8	5	
water	14:40	0:0	6	{
water	15:12	0:0	6	x
op	15:14	0:0	6	=
water	15:16	0:0	6	M_PI
op	15:21	0:0	6	*
water	15:23	0:0	6	(
call	15:24	15:43	6	(double)
arg	15:33	15:43	7	i-center
water	15:33	0:0	8	i
op	15:35	0:0	8	-
water	15:37	0:0	8	center
op	15:45	0:0	6	-
water	15:47	0:0	6	(
water	15:48	0:0	6	double
water	15:54	0:0	6	)
water	15:55	0:0	6	ph
op	15:58	0:0	6	/
water	15:60	0:0	6	phase_count
water	15:71	0:0	6	)
op	15:73	0:0	6	*
water	15:75	0:0	6	factor
water	15:81	0:0	6	;
if	16:12	16:31	6	(x == 0)
cond	16:16	16:21	7	x == 0
water	16:16	0:0	8	x
op	16:18	0:0	8	==
water	16:21	0:0	8	0
stmts	16:24	16:31	7	
water	16:24	0:0	8	y
op	16:26	0:0	8	=
water	16:28	0:0	8	1
op	16:29	0:0	8	.
water	16:30	0:0	8	0
water	16:31	0:0	8	;
else	17:12	17:38	6
stmts	17:24	17:38	7	
water	17:24	0:0	8	y
op	17:26	0:0	8	=
call	17:28	17:33	8	sin
arg	17:32	17:33	9	x
water	17:32	0:0	10	x
op	17:35	0:0	8	/
water	17:37	0:0	8	x
water	17:38	0:0	8	;
switch	18:12	36:12	6	(c -> filter_type)
cond	18:20	18:23	7	c -> filter_type
water	18:20	0:0	8	c
op	18:21	0:0	8	->
water	18:23	0:0	8	filter_type
stmts	18:36	36:12	7	
water	18:36	0:0	8	{
label	19:12	19:46	8	case AV_RESAMPLE_FILTER_TYPE_CUBIC :
water	19:48	0:0	8	{
decl	20:16	20:36	8	const float	d
op	20:30	0:0	8	=
op	20:32	0:0	8	-
water	20:33	0:0	8	0
op	20:34	0:0	8	.
water	20:35	0:0	8	5
water	21:16	0:0	8	x
op	21:18	0:0	8	=
call	21:20	21:83	8	fabs
arg	21:25	21:83	9	((double)(i-center)-(double)ph/phase_count)*factor
water	21:25	0:0	10	(
call	21:26	21:45	10	(double)
arg	21:35	21:45	11	i-center
water	21:35	0:0	12	i
op	21:37	0:0	12	-
water	21:39	0:0	12	center
op	21:47	0:0	10	-
water	21:49	0:0	10	(
water	21:50	0:0	10	double
water	21:56	0:0	10	)
water	21:57	0:0	10	ph
op	21:60	0:0	10	/
water	21:62	0:0	10	phase_count
water	21:73	0:0	10	)
op	21:75	0:0	10	*
water	21:77	0:0	10	factor
water	21:84	0:0	8	;
if	22:16	22:93	8	(x < 1 . 0)
cond	22:20	22:26	9	x < 1 . 0
water	22:20	0:0	10	x
op	22:22	0:0	10	<
water	22:24	0:0	10	1
op	22:25	0:0	10	.
water	22:26	0:0	10	0
stmts	22:29	22:93	9	
water	22:29	0:0	10	y
op	22:31	0:0	10	=
water	22:33	0:0	10	1
op	22:35	0:0	10	-
water	22:37	0:0	10	3
op	22:39	0:0	10	*
water	22:41	0:0	10	x
op	22:42	0:0	10	*
water	22:43	0:0	10	x
op	22:45	0:0	10	+
water	22:47	0:0	10	2
op	22:49	0:0	10	*
water	22:51	0:0	10	x
op	22:52	0:0	10	*
water	22:53	0:0	10	x
op	22:54	0:0	10	*
water	22:55	0:0	10	x
op	22:57	0:0	10	+
water	22:59	0:0	10	d
op	22:61	0:0	10	*
water	22:63	0:0	10	(
op	22:80	0:0	10	-
water	22:81	0:0	10	x
op	22:82	0:0	10	*
water	22:83	0:0	10	x
op	22:85	0:0	10	+
water	22:87	0:0	10	x
op	22:88	0:0	10	*
water	22:89	0:0	10	x
op	22:90	0:0	10	*
water	22:91	0:0	10	x
water	22:92	0:0	10	)
water	22:93	0:0	10	;
else	23:16	23:93	8
stmts	23:29	23:93	9	
water	23:29	0:0	10	y
op	23:31	0:0	10	=
water	23:59	0:0	10	d
op	23:61	0:0	10	*
water	23:63	0:0	10	(
op	23:64	0:0	10	-
water	23:65	0:0	10	4
op	23:67	0:0	10	+
water	23:69	0:0	10	8
op	23:71	0:0	10	*
water	23:73	0:0	10	x
op	23:75	0:0	10	-
water	23:77	0:0	10	5
op	23:79	0:0	10	*
water	23:81	0:0	10	x
op	23:82	0:0	10	*
water	23:83	0:0	10	x
op	23:85	0:0	10	+
water	23:87	0:0	10	x
op	23:88	0:0	10	*
water	23:89	0:0	10	x
op	23:90	0:0	10	*
water	23:91	0:0	10	x
water	23:92	0:0	10	)
water	23:93	0:0	10	;
break	24:16	24:21	8	
water	25:12	0:0	8	}
label	26:12	26:57	8	case AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL :
water	27:16	0:0	8	w
op	27:19	0:0	8	=
water	27:21	0:0	8	2
op	27:22	0:0	8	.
water	27:23	0:0	8	0
op	27:25	0:0	8	*
water	27:27	0:0	8	x
op	27:29	0:0	8	/
water	27:31	0:0	8	(
water	27:32	0:0	8	factor
op	27:39	0:0	8	*
water	27:41	0:0	8	tap_count
water	27:50	0:0	8	)
op	27:52	0:0	8	+
water	27:54	0:0	8	M_PI
water	27:58	0:0	8	;
water	28:16	0:0	8	y
op	28:18	0:0	8	*=
water	28:21	0:0	8	0
op	28:22	0:0	8	.
water	28:23	0:0	8	3635819
op	28:31	0:0	8	-
water	28:33	0:0	8	0
op	28:34	0:0	8	.
water	28:35	0:0	8	4891775
call	28:43	28:54	8	*cos
arg	28:53	28:54	9	w
water	28:53	0:0	10	w
op	28:56	0:0	8	+
water	29:33	0:0	8	0
op	29:34	0:0	8	.
water	29:35	0:0	8	1365995
call	29:43	29:54	8	*cos
arg	29:49	29:54	9	2*w
water	29:49	0:0	10	2
op	29:51	0:0	10	*
water	29:53	0:0	10	w
op	29:56	0:0	8	-
water	30:33	0:0	8	0
op	30:34	0:0	8	.
water	30:35	0:0	8	0106411
call	30:43	30:54	8	*cos
arg	30:49	30:54	9	3*w
water	30:49	0:0	10	3
op	30:51	0:0	10	*
water	30:53	0:0	10	w
water	30:55	0:0	8	;
break	31:16	31:21	8	
label	32:12	32:47	8	case AV_RESAMPLE_FILTER_TYPE_KAISER :
water	33:16	0:0	8	w
op	33:19	0:0	8	=
water	33:21	0:0	8	2
op	33:22	0:0	8	.
water	33:23	0:0	8	0
op	33:25	0:0	8	*
water	33:27	0:0	8	x
op	33:29	0:0	8	/
water	33:31	0:0	8	(
water	33:32	0:0	8	factor
op	33:39	0:0	8	*
water	33:41	0:0	8	tap_count
op	33:51	0:0	8	*
water	33:53	0:0	8	M_PI
water	33:57	0:0	8	)
water	33:58	0:0	8	;
water	34:16	0:0	8	y
op	34:18	0:0	8	*=
call	34:21	34:70	8	bessel
arg	34:28	34:70	9	c->kaiser_beta*sqrt(FFMAX(1-w*w,0))
water	34:28	0:0	10	c
op	34:29	0:0	10	->
water	34:31	0:0	10	kaiser_beta
call	34:43	34:69	10	*sqrt
arg	34:50	34:69	11	FFMAX(1-w*w,0)
call	34:50	34:68	12	FFMAX
arg	34:56	34:65	13	1-w*w
water	34:56	0:0	14	1
op	34:58	0:0	14	-
water	34:60	0:0	14	w
op	34:62	0:0	14	*
water	34:64	0:0	14	w
arg	34:67	34:68	13	0
water	34:67	0:0	14	0
water	34:71	0:0	8	;
break	35:16	35:21	8	
water	36:12	0:0	8	}
water	37:12	0:0	6	tab
op	37:15	0:0	6	[
water	37:16	0:0	6	i
op	37:17	0:0	6	]
op	37:19	0:0	6	=
water	37:21	0:0	6	y
water	37:22	0:0	6	;
water	38:12	0:0	6	norm
op	38:18	0:0	6	+=
water	38:21	0:0	6	y
water	38:22	0:0	6	;
water	39:8	0:0	6	}
for	41:8	42:34	4	(i = 0 ;i < tap_count;i ++)
forinit	41:13	41:18	5	i = 0 ;
water	41:13	0:0	6	i
op	41:15	0:0	6	=
water	41:17	0:0	6	0
water	41:18	0:0	6	;
cond	41:20	41:24	5	i < tap_count
water	41:20	0:0	6	i
op	41:22	0:0	6	<
water	41:24	0:0	6	tap_count
forexpr	41:35	41:36	5	i ++
water	41:35	0:0	6	i
op	41:36	0:0	6	++
stmts	42:12	42:34	5	
water	42:12	0:0	6	tab
op	42:15	0:0	6	[
water	42:16	0:0	6	i
op	42:17	0:0	6	]
op	42:19	0:0	6	=
water	42:21	0:0	6	tab
op	42:24	0:0	6	[
water	42:25	0:0	6	i
op	42:26	0:0	6	]
op	42:28	0:0	6	/
water	42:30	0:0	6	norm
water	42:34	0:0	6	;
call	43:8	43:56	4	c->set_filter
arg	43:22	43:36	5	c->filter_bank
water	43:22	0:0	6	c
op	43:23	0:0	6	->
water	43:25	0:0	6	filter_bank
arg	43:38	43:41	5	tab
water	43:38	0:0	6	tab
arg	43:43	43:45	5	ph
water	43:43	0:0	6	ph
arg	43:47	43:56	5	tap_count
water	43:47	0:0	6	tap_count
water	43:57	0:0	4	;
water	44:4	0:0	4	}
call	45:4	45:15	2	av_free
arg	45:12	45:15	3	tab
water	45:12	0:0	4	tab
water	45:16	0:0	2	;
return	46:4	46:12	2	0
water	46:11	0:0	3	0

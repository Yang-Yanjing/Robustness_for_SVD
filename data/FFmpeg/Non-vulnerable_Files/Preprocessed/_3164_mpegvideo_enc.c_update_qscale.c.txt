func	1:0	28:0	0	static inline void	update_qscale
params	1:32	0:0	1	
param	1:33	1:50	2	MpegEncContext *	s
stmnts	3:4	27:32	1	
if	3:4	21:4	2	(s -> q_scale_type == 1)
cond	3:8	3:27	3	s -> q_scale_type == 1
water	3:8	0:0	4	s
op	3:9	0:0	4	->
water	3:11	0:0	4	q_scale_type
op	3:24	0:0	4	==
water	3:27	0:0	4	1
stmts	3:30	21:4	3	
water	3:30	0:0	4	{
decl	4:8	4:13	4	int	i
decl	5:8	5:28	4	int	bestdiff
op	5:20	0:0	4	=
water	5:21	0:0	4	INT_MAX
decl	6:8	6:20	4	int	best
op	6:17	0:0	4	=
water	6:19	0:0	4	1
water	7:8	0:0	4	static
water	7:15	0:0	4	const
water	7:21	0:0	4	uint8_t
water	7:29	0:0	4	non_linear_qscale
op	7:46	0:0	4	[
op	7:47	0:0	4	]
op	7:49	0:0	4	=
water	7:51	0:0	4	{
water	8:12	0:0	4	1
water	8:13	0:0	4	,
water	8:14	0:0	4	2
water	8:15	0:0	4	,
water	8:16	0:0	4	3
water	8:17	0:0	4	,
water	8:18	0:0	4	4
water	8:19	0:0	4	,
water	8:20	0:0	4	5
water	8:21	0:0	4	,
water	8:22	0:0	4	6
water	8:23	0:0	4	,
water	8:24	0:0	4	7
water	8:25	0:0	4	,
water	8:26	0:0	4	8
water	8:27	0:0	4	,
water	8:28	0:0	4	9
water	8:29	0:0	4	,
water	8:30	0:0	4	10
water	8:32	0:0	4	,
water	8:33	0:0	4	11
water	8:35	0:0	4	,
water	8:36	0:0	4	12
water	8:38	0:0	4	,
water	8:39	0:0	4	14
water	8:41	0:0	4	,
water	8:42	0:0	4	16
water	8:44	0:0	4	,
water	8:45	0:0	4	18
water	8:47	0:0	4	,
water	8:48	0:0	4	20
water	8:50	0:0	4	,
water	8:51	0:0	4	24
water	8:53	0:0	4	,
water	8:54	0:0	4	26
water	8:56	0:0	4	,
water	8:57	0:0	4	28
water	9:8	0:0	4	}
water	9:9	0:0	4	;
for	10:8	19:8	4	(i = 0 ;i <FF_ARRAY_ELEMS (non_linear_qscale );i ++)
forinit	10:13	10:19	5	i = 0 ;
water	10:13	0:0	6	i
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:19	0:0	6	;
cond	10:21	10:55	5	i <FF_ARRAY_ELEMS (non_linear_qscale )
water	10:21	0:0	6	i
op	10:22	0:0	6	<
call	10:23	10:55	6	FF_ARRAY_ELEMS
arg	10:38	10:55	7	non_linear_qscale
water	10:38	0:0	8	non_linear_qscale
forexpr	10:58	10:59	5	i ++
water	10:58	0:0	6	i
op	10:59	0:0	6	++
stmts	10:63	19:8	5	
water	10:63	0:0	6	{
decl	11:12	11:98	6	int	diff
op	11:21	0:0	6	=
call	11:23	11:97	7	FFABS
arg	11:29	11:97	8	(non_linear_qscale[i]<<(FF_LAMBDA_SHIFT+7))-(int)s->lambda*139
water	11:29	0:0	9	(
water	11:30	0:0	9	non_linear_qscale
op	11:47	0:0	9	[
water	11:48	0:0	9	i
op	11:49	0:0	9	]
op	11:50	0:0	9	<<
water	11:52	0:0	9	(
water	11:53	0:0	9	FF_LAMBDA_SHIFT
op	11:69	0:0	9	+
water	11:71	0:0	9	7
water	11:72	0:0	9	)
water	11:73	0:0	9	)
op	11:75	0:0	9	-
water	11:77	0:0	9	(
water	11:78	0:0	9	int
water	11:81	0:0	9	)
water	11:82	0:0	9	s
op	11:83	0:0	9	->
water	11:85	0:0	9	lambda
op	11:92	0:0	9	*
water	11:94	0:0	9	139
if	12:12	14:24	6	(non_linear_qscale [ i ] < s -> avctx -> qmin || ( non_linear_qscale [ i ] > s -> avctx -> qmax && ! s -> vbv_ignore_qmax ))
cond	12:16	13:77	7	non_linear_qscale [ i ] < s -> avctx -> qmin || ( non_linear_qscale [ i ] > s -> avctx -> qmax && ! s -> vbv_ignore_qmax )
water	12:16	0:0	8	non_linear_qscale
op	12:33	0:0	8	[
water	12:34	0:0	8	i
op	12:35	0:0	8	]
op	12:37	0:0	8	<
water	12:39	0:0	8	s
op	12:40	0:0	8	->
water	12:42	0:0	8	avctx
op	12:47	0:0	8	->
water	12:49	0:0	8	qmin
op	12:54	0:0	8	||
water	13:16	0:0	8	(
water	13:17	0:0	8	non_linear_qscale
op	13:34	0:0	8	[
water	13:35	0:0	8	i
op	13:36	0:0	8	]
op	13:38	0:0	8	>
water	13:40	0:0	8	s
op	13:41	0:0	8	->
water	13:43	0:0	8	avctx
op	13:48	0:0	8	->
water	13:50	0:0	8	qmax
op	13:55	0:0	8	&&
op	13:58	0:0	8	!
water	13:59	0:0	8	s
op	13:60	0:0	8	->
water	13:62	0:0	8	vbv_ignore_qmax
water	13:77	0:0	8	)
stmts	14:16	14:24	7	
continue	14:16	14:24	8	
if	15:12	18:12	6	(diff < bestdiff)
cond	15:16	15:23	7	diff < bestdiff
water	15:16	0:0	8	diff
op	15:21	0:0	8	<
water	15:23	0:0	8	bestdiff
stmts	15:33	18:12	7	
water	15:33	0:0	8	{
water	16:16	0:0	8	bestdiff
op	16:25	0:0	8	=
water	16:27	0:0	8	diff
water	16:31	0:0	8	;
water	17:16	0:0	8	best
op	17:21	0:0	8	=
water	17:23	0:0	8	non_linear_qscale
op	17:40	0:0	8	[
water	17:41	0:0	8	i
op	17:42	0:0	8	]
water	17:43	0:0	8	;
water	18:12	0:0	8	}
water	19:8	0:0	6	}
water	20:8	0:0	4	s
op	20:9	0:0	4	->
water	20:11	0:0	4	qscale
op	20:18	0:0	4	=
water	20:20	0:0	4	best
water	20:24	0:0	4	;
water	21:4	0:0	4	}
else	21:6	25:4	2
stmts	21:11	25:4	3	
water	21:11	0:0	4	{
water	22:8	0:0	4	s
op	22:9	0:0	4	->
water	22:11	0:0	4	qscale
op	22:18	0:0	4	=
water	22:20	0:0	4	(
water	22:21	0:0	4	s
op	22:22	0:0	4	->
water	22:24	0:0	4	lambda
op	22:31	0:0	4	*
water	22:33	0:0	4	139
op	22:37	0:0	4	+
water	22:39	0:0	4	FF_LAMBDA_SCALE
op	22:55	0:0	4	*
water	22:57	0:0	4	64
water	22:59	0:0	4	)
op	22:61	0:0	4	>>
water	23:20	0:0	4	(
water	23:21	0:0	4	FF_LAMBDA_SHIFT
op	23:37	0:0	4	+
water	23:39	0:0	4	7
water	23:40	0:0	4	)
water	23:41	0:0	4	;
water	24:8	0:0	4	s
op	24:9	0:0	4	->
water	24:11	0:0	4	qscale
op	24:18	0:0	4	=
call	24:20	24:95	4	av_clip
arg	24:28	24:37	5	s->qscale
water	24:28	0:0	6	s
op	24:29	0:0	6	->
water	24:31	0:0	6	qscale
arg	24:39	24:53	5	s->avctx->qmin
water	24:39	0:0	6	s
op	24:40	0:0	6	->
water	24:42	0:0	6	avctx
op	24:47	0:0	6	->
water	24:49	0:0	6	qmin
arg	24:55	24:95	5	s->vbv_ignore_qmax?31:s->avctx->qmax
water	24:55	0:0	6	s
op	24:56	0:0	6	->
water	24:58	0:0	6	vbv_ignore_qmax
water	24:74	0:0	6	?
water	24:76	0:0	6	31
water	24:79	0:0	6	:
water	24:81	0:0	6	s
op	24:82	0:0	6	->
water	24:84	0:0	6	avctx
op	24:89	0:0	6	->
water	24:91	0:0	6	qmax
water	24:96	0:0	4	;
water	25:4	0:0	4	}
water	26:4	0:0	2	s
op	26:5	0:0	2	->
water	26:7	0:0	2	lambda2
op	26:15	0:0	2	=
water	26:17	0:0	2	(
water	26:18	0:0	2	s
op	26:19	0:0	2	->
water	26:21	0:0	2	lambda
op	26:28	0:0	2	*
water	26:30	0:0	2	s
op	26:31	0:0	2	->
water	26:33	0:0	2	lambda
op	26:40	0:0	2	+
water	26:42	0:0	2	FF_LAMBDA_SCALE
op	26:58	0:0	2	/
water	26:60	0:0	2	2
water	26:61	0:0	2	)
op	26:63	0:0	2	>>
water	27:17	0:0	2	FF_LAMBDA_SHIFT
water	27:32	0:0	2	;

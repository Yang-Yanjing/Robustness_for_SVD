func	1:0	36:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	35:40	1	
decl	3:4	3:41	2	GradFunContext	*s
op	3:22	0:0	2	=
water	3:24	0:0	2	inlink
op	3:30	0:0	2	->
water	3:32	0:0	2	dst
op	3:35	0:0	2	->
water	3:37	0:0	2	priv
decl	4:4	4:51	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	inlink
op	4:34	0:0	2	->
water	4:36	0:0	2	dst
op	4:39	0:0	2	->
water	4:41	0:0	2	outputs
op	4:48	0:0	2	[
water	4:49	0:0	2	0
op	4:50	0:0	2	]
decl	5:4	5:16	2	AVFrame	*out
decl	6:4	6:17	2	int	p
water	6:9	0:0	2	,
decl	6:4	6:17	2	int	direct
if	7:4	10:4	2	(av_frame_is_writable (in ))
cond	7:8	7:31	3	av_frame_is_writable (in )
call	7:8	7:31	4	av_frame_is_writable
arg	7:29	7:31	5	in
water	7:29	0:0	6	in
stmts	7:34	10:4	3	
water	7:34	0:0	4	{
water	8:8	0:0	4	direct
op	8:15	0:0	4	=
water	8:17	0:0	4	1
water	8:18	0:0	4	;
water	9:8	0:0	4	out
op	9:12	0:0	4	=
water	9:14	0:0	4	in
water	9:16	0:0	4	;
water	10:4	0:0	4	}
else	10:6	18:4	2
stmts	10:11	18:4	3	
water	10:11	0:0	4	{
water	11:8	0:0	4	direct
op	11:15	0:0	4	=
water	11:17	0:0	4	0
water	11:18	0:0	4	;
water	12:8	0:0	4	out
op	12:12	0:0	4	=
call	12:14	12:65	4	ff_get_video_buffer
arg	12:34	12:41	5	outlink
water	12:34	0:0	6	outlink
arg	12:43	12:53	5	outlink->w
water	12:43	0:0	6	outlink
op	12:50	0:0	6	->
water	12:52	0:0	6	w
arg	12:55	12:65	5	outlink->h
water	12:55	0:0	6	outlink
op	12:62	0:0	6	->
water	12:64	0:0	6	h
water	12:66	0:0	4	;
if	13:8	16:8	4	(! out)
cond	13:12	13:13	5	! out
op	13:12	0:0	6	!
water	13:13	0:0	6	out
stmts	13:18	16:8	5	
water	13:18	0:0	6	{
call	14:12	14:29	6	av_frame_free
arg	14:26	14:29	7	&in
op	14:26	0:0	8	&
water	14:27	0:0	8	in
water	14:30	0:0	6	;
return	15:12	15:34	6	AVERROR(ENOMEM)
call	15:19	15:33	7	AVERROR
arg	15:27	15:33	8	ENOMEM
water	15:27	0:0	9	ENOMEM
water	16:8	0:0	6	}
call	17:8	17:35	4	av_frame_copy_props
arg	17:28	17:31	5	out
water	17:28	0:0	6	out
arg	17:33	17:35	5	in
water	17:33	0:0	6	in
water	17:36	0:0	4	;
water	18:4	0:0	4	}
for	19:4	32:4	2	(p = 0 ;p < 4 && in -> data [ p ] && in -> linesize [ p ];p ++)
forinit	19:9	19:14	3	p = 0 ;
water	19:9	0:0	4	p
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:54	3	p < 4 && in -> data [ p ] && in -> linesize [ p ]
water	19:16	0:0	4	p
op	19:18	0:0	4	<
water	19:20	0:0	4	4
op	19:22	0:0	4	&&
water	19:25	0:0	4	in
op	19:27	0:0	4	->
water	19:29	0:0	4	data
op	19:33	0:0	4	[
water	19:34	0:0	4	p
op	19:35	0:0	4	]
op	19:37	0:0	4	&&
water	19:40	0:0	4	in
op	19:42	0:0	4	->
water	19:44	0:0	4	linesize
op	19:52	0:0	4	[
water	19:53	0:0	4	p
op	19:54	0:0	4	]
forexpr	19:57	19:58	3	p ++
water	19:57	0:0	4	p
op	19:58	0:0	4	++
stmts	19:62	32:4	3	
water	19:62	0:0	4	{
decl	20:8	20:25	4	int	w
op	20:14	0:0	4	=
water	20:16	0:0	4	inlink
op	20:22	0:0	4	->
water	20:24	0:0	4	w
decl	21:8	21:25	4	int	h
op	21:14	0:0	4	=
water	21:16	0:0	4	inlink
op	21:22	0:0	4	->
water	21:24	0:0	4	h
decl	22:8	22:25	4	int	r
op	22:14	0:0	4	=
water	22:16	0:0	4	s
op	22:17	0:0	4	->
water	22:19	0:0	4	radius
if	23:8	27:8	4	(p)
cond	23:12	23:12	5	p
water	23:12	0:0	6	p
stmts	23:15	27:8	5	
water	23:15	0:0	6	{
water	24:12	0:0	6	w
op	24:14	0:0	6	=
water	24:16	0:0	6	s
op	24:17	0:0	6	->
water	24:19	0:0	6	chroma_w
water	24:27	0:0	6	;
water	25:12	0:0	6	h
op	25:14	0:0	6	=
water	25:16	0:0	6	s
op	25:17	0:0	6	->
water	25:19	0:0	6	chroma_h
water	25:27	0:0	6	;
water	26:12	0:0	6	r
op	26:14	0:0	6	=
water	26:16	0:0	6	s
op	26:17	0:0	6	->
water	26:19	0:0	6	chroma_r
water	26:27	0:0	6	;
water	27:8	0:0	6	}
if	28:8	29:92	4	(FFMIN (w ,h ) > 2 * r)
cond	28:12	28:30	5	FFMIN (w ,h ) > 2 * r
call	28:12	28:22	6	FFMIN
arg	28:18	28:19	7	w
water	28:18	0:0	8	w
arg	28:21	28:22	7	h
water	28:21	0:0	8	h
op	28:24	0:0	6	>
water	28:26	0:0	6	2
op	28:28	0:0	6	*
water	28:30	0:0	6	r
stmts	29:12	29:92	5	
call	29:12	29:91	6	filter
arg	29:19	29:20	7	s
water	29:19	0:0	8	s
arg	29:22	29:34	7	out->data[p]
water	29:22	0:0	8	out
op	29:25	0:0	8	->
water	29:27	0:0	8	data
op	29:31	0:0	8	[
water	29:32	0:0	8	p
op	29:33	0:0	8	]
arg	29:36	29:47	7	in->data[p]
water	29:36	0:0	8	in
op	29:38	0:0	8	->
water	29:40	0:0	8	data
op	29:44	0:0	8	[
water	29:45	0:0	8	p
op	29:46	0:0	8	]
arg	29:49	29:50	7	w
water	29:49	0:0	8	w
arg	29:52	29:53	7	h
water	29:52	0:0	8	h
arg	29:55	29:71	7	out->linesize[p]
water	29:55	0:0	8	out
op	29:58	0:0	8	->
water	29:60	0:0	8	linesize
op	29:68	0:0	8	[
water	29:69	0:0	8	p
op	29:70	0:0	8	]
arg	29:73	29:88	7	in->linesize[p]
water	29:73	0:0	8	in
op	29:75	0:0	8	->
water	29:77	0:0	8	linesize
op	29:85	0:0	8	[
water	29:86	0:0	8	p
op	29:87	0:0	8	]
arg	29:90	29:91	7	r
water	29:90	0:0	8	r
water	29:92	0:0	6	;
else	30:8	31:99	4
stmts	30:13	31:99	5	
if	30:13	31:99	6	(out -> data [ p ] != in -> data [ p ])
cond	30:17	30:43	7	out -> data [ p ] != in -> data [ p ]
water	30:17	0:0	8	out
op	30:20	0:0	8	->
water	30:22	0:0	8	data
op	30:26	0:0	8	[
water	30:27	0:0	8	p
op	30:28	0:0	8	]
op	30:30	0:0	8	!=
water	30:33	0:0	8	in
op	30:35	0:0	8	->
water	30:37	0:0	8	data
op	30:41	0:0	8	[
water	30:42	0:0	8	p
op	30:43	0:0	8	]
stmts	31:12	31:99	7	
call	31:12	31:98	8	av_image_copy_plane
arg	31:32	31:44	9	out->data[p]
water	31:32	0:0	10	out
op	31:35	0:0	10	->
water	31:37	0:0	10	data
op	31:41	0:0	10	[
water	31:42	0:0	10	p
op	31:43	0:0	10	]
arg	31:46	31:62	9	out->linesize[p]
water	31:46	0:0	10	out
op	31:49	0:0	10	->
water	31:51	0:0	10	linesize
op	31:59	0:0	10	[
water	31:60	0:0	10	p
op	31:61	0:0	10	]
arg	31:64	31:75	9	in->data[p]
water	31:64	0:0	10	in
op	31:66	0:0	10	->
water	31:68	0:0	10	data
op	31:72	0:0	10	[
water	31:73	0:0	10	p
op	31:74	0:0	10	]
arg	31:77	31:92	9	in->linesize[p]
water	31:77	0:0	10	in
op	31:79	0:0	10	->
water	31:81	0:0	10	linesize
op	31:89	0:0	10	[
water	31:90	0:0	10	p
op	31:91	0:0	10	]
arg	31:94	31:95	9	w
water	31:94	0:0	10	w
arg	31:97	31:98	9	h
water	31:97	0:0	10	h
water	31:99	0:0	8	;
water	32:4	0:0	4	}
if	33:4	34:26	2	(! direct)
cond	33:8	33:9	3	! direct
op	33:8	0:0	4	!
water	33:9	0:0	4	direct
stmts	34:8	34:26	3	
call	34:8	34:25	4	av_frame_free
arg	34:22	34:25	5	&in
op	34:22	0:0	6	&
water	34:23	0:0	6	in
water	34:26	0:0	4	;
return	35:4	35:40	2	ff_filter_frame(outlink,out)
call	35:11	35:39	3	ff_filter_frame
arg	35:27	35:34	4	outlink
water	35:27	0:0	5	outlink
arg	35:36	35:39	4	out
water	35:36	0:0	5	out

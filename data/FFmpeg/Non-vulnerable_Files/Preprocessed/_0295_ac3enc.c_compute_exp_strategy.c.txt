func	1:0	52:0	0	static void	compute_exp_strategy
params	1:32	0:0	1	
param	1:33	1:52	2	AC3EncodeContext *	s
stmnts	0:0	51:41	1	
decl	3:4	3:21	2	int	ch
water	3:10	0:0	2	,
decl	3:4	3:21	2	int	blk
water	3:15	0:0	2	,
decl	3:4	3:21	2	int	blk1
for	4:4	42:4	2	(ch = ! s -> cpl_on ;ch <= s -> fbw_channels;ch ++)
forinit	4:9	4:24	3	ch = ! s -> cpl_on ;
water	4:9	0:0	4	ch
op	4:12	0:0	4	=
op	4:14	0:0	4	!
water	4:15	0:0	4	s
op	4:16	0:0	4	->
water	4:18	0:0	4	cpl_on
water	4:24	0:0	4	;
cond	4:26	4:35	3	ch <= s -> fbw_channels
water	4:26	0:0	4	ch
op	4:29	0:0	4	<=
water	4:32	0:0	4	s
op	4:33	0:0	4	->
water	4:35	0:0	4	fbw_channels
forexpr	4:49	4:51	3	ch ++
water	4:49	0:0	4	ch
op	4:51	0:0	4	++
stmts	4:55	42:4	3	
water	4:55	0:0	4	{
decl	5:8	5:51	4	uint8_t	*exp_strategy
op	5:30	0:0	4	=
water	5:32	0:0	4	s
op	5:33	0:0	4	->
water	5:35	0:0	4	exp_strategy
op	5:47	0:0	4	[
water	5:48	0:0	4	ch
op	5:50	0:0	4	]
decl	6:8	6:52	4	uint8_t	*exp
op	6:30	0:0	4	=
water	6:32	0:0	4	s
op	6:33	0:0	4	->
water	6:35	0:0	4	blocks
op	6:41	0:0	4	[
water	6:42	0:0	4	0
op	6:43	0:0	4	]
op	6:44	0:0	4	.
water	6:45	0:0	4	exp
op	6:48	0:0	4	[
water	6:49	0:0	4	ch
op	6:51	0:0	4	]
decl	7:8	7:20	4	int	exp_diff
water	10:8	0:0	4	exp_strategy
op	10:20	0:0	4	[
water	10:21	0:0	4	0
op	10:22	0:0	4	]
op	10:24	0:0	4	=
water	10:26	0:0	4	EXP_NEW
water	10:33	0:0	4	;
water	11:8	0:0	4	exp
op	11:12	0:0	4	+=
water	11:15	0:0	4	AC3_MAX_COEFS
water	11:28	0:0	4	;
for	12:8	31:8	4	(blk = 1 ;blk < s -> num_blocks;blk ++ , exp += AC3_MAX_COEFS)
forinit	12:13	12:20	5	blk = 1 ;
water	12:13	0:0	6	blk
op	12:17	0:0	6	=
water	12:19	0:0	6	1
water	12:20	0:0	6	;
cond	12:22	12:31	5	blk < s -> num_blocks
water	12:22	0:0	6	blk
op	12:26	0:0	6	<
water	12:28	0:0	6	s
op	12:29	0:0	6	->
water	12:31	0:0	6	num_blocks
forexpr	12:43	12:57	5	blk ++ , exp += AC3_MAX_COEFS
water	12:43	0:0	6	blk
op	12:46	0:0	6	++
water	12:48	0:0	6	,
water	12:50	0:0	6	exp
op	12:54	0:0	6	+=
water	12:57	0:0	6	AC3_MAX_COEFS
stmts	12:72	31:8	5	
water	12:72	0:0	6	{
if	13:12	21:12	6	(ch == CPL_CH)
cond	13:16	13:22	7	ch == CPL_CH
water	13:16	0:0	8	ch
op	13:19	0:0	8	==
water	13:22	0:0	8	CPL_CH
stmts	13:30	21:12	7	
water	13:30	0:0	8	{
if	14:16	17:16	8	(! s -> blocks [ blk - 1 ] . cpl_in_use)
cond	14:20	14:38	9	! s -> blocks [ blk - 1 ] . cpl_in_use
op	14:20	0:0	10	!
water	14:21	0:0	10	s
op	14:22	0:0	10	->
water	14:24	0:0	10	blocks
op	14:30	0:0	10	[
water	14:31	0:0	10	blk
op	14:34	0:0	10	-
water	14:35	0:0	10	1
op	14:36	0:0	10	]
op	14:37	0:0	10	.
water	14:38	0:0	10	cpl_in_use
stmts	14:50	17:16	9	
water	14:50	0:0	10	{
water	15:20	0:0	10	exp_strategy
op	15:32	0:0	10	[
water	15:33	0:0	10	blk
op	15:36	0:0	10	]
op	15:38	0:0	10	=
water	15:40	0:0	10	EXP_NEW
water	15:47	0:0	10	;
continue	16:20	16:28	10	
water	17:16	0:0	10	}
else	17:18	20:16	8
stmts	17:23	20:16	9	
if	17:23	20:16	10	(! s -> blocks [ blk ] . cpl_in_use)
cond	17:27	17:43	11	! s -> blocks [ blk ] . cpl_in_use
op	17:27	0:0	12	!
water	17:28	0:0	12	s
op	17:29	0:0	12	->
water	17:31	0:0	12	blocks
op	17:37	0:0	12	[
water	17:38	0:0	12	blk
op	17:41	0:0	12	]
op	17:42	0:0	12	.
water	17:43	0:0	12	cpl_in_use
stmts	17:55	20:16	11	
water	17:55	0:0	12	{
water	18:20	0:0	12	exp_strategy
op	18:32	0:0	12	[
water	18:33	0:0	12	blk
op	18:36	0:0	12	]
op	18:38	0:0	12	=
water	18:40	0:0	12	EXP_REUSE
water	18:49	0:0	12	;
continue	19:20	19:28	12	
water	20:16	0:0	12	}
water	21:12	0:0	8	}
else	21:14	24:12	6
stmts	21:19	24:12	7	
if	21:19	24:12	8	(s -> blocks [ blk ] . channel_in_cpl [ ch ] != s -> blocks [ blk - 1 ] . channel_in_cpl [ ch ])
cond	21:23	21:94	9	s -> blocks [ blk ] . channel_in_cpl [ ch ] != s -> blocks [ blk - 1 ] . channel_in_cpl [ ch ]
water	21:23	0:0	10	s
op	21:24	0:0	10	->
water	21:26	0:0	10	blocks
op	21:32	0:0	10	[
water	21:33	0:0	10	blk
op	21:36	0:0	10	]
op	21:37	0:0	10	.
water	21:38	0:0	10	channel_in_cpl
op	21:52	0:0	10	[
water	21:53	0:0	10	ch
op	21:55	0:0	10	]
op	21:57	0:0	10	!=
water	21:60	0:0	10	s
op	21:61	0:0	10	->
water	21:63	0:0	10	blocks
op	21:69	0:0	10	[
water	21:70	0:0	10	blk
op	21:73	0:0	10	-
water	21:74	0:0	10	1
op	21:75	0:0	10	]
op	21:76	0:0	10	.
water	21:77	0:0	10	channel_in_cpl
op	21:91	0:0	10	[
water	21:92	0:0	10	ch
op	21:94	0:0	10	]
stmts	21:97	24:12	9	
water	21:97	0:0	10	{
water	22:16	0:0	10	exp_strategy
op	22:28	0:0	10	[
water	22:29	0:0	10	blk
op	22:32	0:0	10	]
op	22:34	0:0	10	=
water	22:36	0:0	10	EXP_NEW
water	22:43	0:0	10	;
continue	23:16	23:24	10	
water	24:12	0:0	10	}
water	25:12	0:0	6	exp_diff
op	25:21	0:0	6	=
water	25:23	0:0	6	s
op	25:24	0:0	6	->
water	25:26	0:0	6	mecc
op	25:30	0:0	6	.
water	25:31	0:0	6	sad
op	25:34	0:0	6	[
water	25:35	0:0	6	0
op	25:36	0:0	6	]
water	25:37	0:0	6	(
water	25:38	0:0	6	NULL
water	25:42	0:0	6	,
water	25:44	0:0	6	exp
water	25:47	0:0	6	,
water	25:49	0:0	6	exp
op	25:53	0:0	6	-
water	25:55	0:0	6	AC3_MAX_COEFS
water	25:68	0:0	6	,
water	25:70	0:0	6	16
water	25:72	0:0	6	,
water	25:74	0:0	6	16
water	25:76	0:0	6	)
water	25:77	0:0	6	;
water	26:12	0:0	6	exp_strategy
op	26:24	0:0	6	[
water	26:25	0:0	6	blk
op	26:28	0:0	6	]
op	26:30	0:0	6	=
water	26:32	0:0	6	EXP_REUSE
water	26:41	0:0	6	;
if	27:12	28:43	6	(ch == CPL_CH && exp_diff > ( EXP_DIFF_THRESHOLD * ( s -> blocks [ blk ] . end_freq [ ch ] - s -> start_freq [ ch ] ) / AC3_MAX_COEFS ))
cond	27:16	27:130	7	ch == CPL_CH && exp_diff > ( EXP_DIFF_THRESHOLD * ( s -> blocks [ blk ] . end_freq [ ch ] - s -> start_freq [ ch ] ) / AC3_MAX_COEFS )
water	27:16	0:0	8	ch
op	27:19	0:0	8	==
water	27:22	0:0	8	CPL_CH
op	27:29	0:0	8	&&
water	27:32	0:0	8	exp_diff
op	27:41	0:0	8	>
water	27:43	0:0	8	(
water	27:44	0:0	8	EXP_DIFF_THRESHOLD
op	27:63	0:0	8	*
water	27:65	0:0	8	(
water	27:66	0:0	8	s
op	27:67	0:0	8	->
water	27:69	0:0	8	blocks
op	27:75	0:0	8	[
water	27:76	0:0	8	blk
op	27:79	0:0	8	]
op	27:80	0:0	8	.
water	27:81	0:0	8	end_freq
op	27:89	0:0	8	[
water	27:90	0:0	8	ch
op	27:92	0:0	8	]
op	27:94	0:0	8	-
water	27:96	0:0	8	s
op	27:97	0:0	8	->
water	27:99	0:0	8	start_freq
op	27:109	0:0	8	[
water	27:110	0:0	8	ch
op	27:112	0:0	8	]
water	27:113	0:0	8	)
op	27:115	0:0	8	/
water	27:117	0:0	8	AC3_MAX_COEFS
water	27:130	0:0	8	)
stmts	28:16	28:43	7	
water	28:16	0:0	8	exp_strategy
op	28:28	0:0	8	[
water	28:29	0:0	8	blk
op	28:32	0:0	8	]
op	28:34	0:0	8	=
water	28:36	0:0	8	EXP_NEW
water	28:43	0:0	8	;
else	29:12	30:43	6
stmts	29:17	30:43	7	
if	29:17	30:43	8	(ch > CPL_CH && exp_diff > EXP_DIFF_THRESHOLD)
cond	29:21	29:47	9	ch > CPL_CH && exp_diff > EXP_DIFF_THRESHOLD
water	29:21	0:0	10	ch
op	29:24	0:0	10	>
water	29:26	0:0	10	CPL_CH
op	29:33	0:0	10	&&
water	29:36	0:0	10	exp_diff
op	29:45	0:0	10	>
water	29:47	0:0	10	EXP_DIFF_THRESHOLD
stmts	30:16	30:43	9	
water	30:16	0:0	10	exp_strategy
op	30:28	0:0	10	[
water	30:29	0:0	10	blk
op	30:32	0:0	10	]
op	30:34	0:0	10	=
water	30:36	0:0	10	EXP_NEW
water	30:43	0:0	10	;
water	31:8	0:0	6	}
water	34:8	0:0	4	blk
op	34:12	0:0	4	=
water	34:14	0:0	4	0
water	34:15	0:0	4	;
while	35:8	41:8	4	(blk < s -> num_blocks)
cond	35:15	35:24	5	blk < s -> num_blocks
water	35:15	0:0	6	blk
op	35:19	0:0	6	<
water	35:21	0:0	6	s
op	35:22	0:0	6	->
water	35:24	0:0	6	num_blocks
stmts	35:36	41:8	5	
water	35:36	0:0	6	{
water	36:12	0:0	6	blk1
op	36:17	0:0	6	=
water	36:19	0:0	6	blk
op	36:23	0:0	6	+
water	36:25	0:0	6	1
water	36:26	0:0	6	;
while	37:12	38:22	6	(blk1 < s -> num_blocks && exp_strategy [ blk1 ] == EXP_REUSE)
cond	37:19	37:65	7	blk1 < s -> num_blocks && exp_strategy [ blk1 ] == EXP_REUSE
water	37:19	0:0	8	blk1
op	37:24	0:0	8	<
water	37:26	0:0	8	s
op	37:27	0:0	8	->
water	37:29	0:0	8	num_blocks
op	37:40	0:0	8	&&
water	37:43	0:0	8	exp_strategy
op	37:55	0:0	8	[
water	37:56	0:0	8	blk1
op	37:60	0:0	8	]
op	37:62	0:0	8	==
water	37:65	0:0	8	EXP_REUSE
stmts	38:16	38:22	7	
water	38:16	0:0	8	blk1
op	38:20	0:0	8	++
water	38:22	0:0	8	;
water	39:12	0:0	6	exp_strategy
op	39:24	0:0	6	[
water	39:25	0:0	6	blk
op	39:28	0:0	6	]
op	39:30	0:0	6	=
water	39:32	0:0	6	exp_strategy_reuse_tab
op	39:54	0:0	6	[
water	39:55	0:0	6	s
op	39:56	0:0	6	->
water	39:58	0:0	6	num_blks_code
op	39:71	0:0	6	]
op	39:72	0:0	6	[
water	39:73	0:0	6	blk1
op	39:77	0:0	6	-
water	39:78	0:0	6	blk
op	39:81	0:0	6	-
water	39:82	0:0	6	1
op	39:83	0:0	6	]
water	39:84	0:0	6	;
water	40:12	0:0	6	blk
op	40:16	0:0	6	=
water	40:18	0:0	6	blk1
water	40:22	0:0	6	;
water	41:8	0:0	6	}
water	42:4	0:0	4	}
if	43:4	48:4	2	(s -> lfe_on)
cond	43:8	43:11	3	s -> lfe_on
water	43:8	0:0	4	s
op	43:9	0:0	4	->
water	43:11	0:0	4	lfe_on
stmts	43:19	48:4	3	
water	43:19	0:0	4	{
water	44:8	0:0	4	ch
op	44:11	0:0	4	=
water	44:13	0:0	4	s
op	44:14	0:0	4	->
water	44:16	0:0	4	lfe_channel
water	44:27	0:0	4	;
water	45:8	0:0	4	s
op	45:9	0:0	4	->
water	45:11	0:0	4	exp_strategy
op	45:23	0:0	4	[
water	45:24	0:0	4	ch
op	45:26	0:0	4	]
op	45:27	0:0	4	[
water	45:28	0:0	4	0
op	45:29	0:0	4	]
op	45:31	0:0	4	=
water	45:33	0:0	4	EXP_D15
water	45:40	0:0	4	;
for	46:8	47:48	4	(blk = 1 ;blk < s -> num_blocks;blk ++)
forinit	46:13	46:20	5	blk = 1 ;
water	46:13	0:0	6	blk
op	46:17	0:0	6	=
water	46:19	0:0	6	1
water	46:20	0:0	6	;
cond	46:22	46:31	5	blk < s -> num_blocks
water	46:22	0:0	6	blk
op	46:26	0:0	6	<
water	46:28	0:0	6	s
op	46:29	0:0	6	->
water	46:31	0:0	6	num_blocks
forexpr	46:43	46:46	5	blk ++
water	46:43	0:0	6	blk
op	46:46	0:0	6	++
stmts	47:12	47:48	5	
water	47:12	0:0	6	s
op	47:13	0:0	6	->
water	47:15	0:0	6	exp_strategy
op	47:27	0:0	6	[
water	47:28	0:0	6	ch
op	47:30	0:0	6	]
op	47:31	0:0	6	[
water	47:32	0:0	6	blk
op	47:35	0:0	6	]
op	47:37	0:0	6	=
water	47:39	0:0	6	EXP_REUSE
water	47:48	0:0	6	;
water	48:4	0:0	4	}
if	50:4	51:41	2	(CONFIG_EAC3_ENCODER && s -> eac3)
cond	50:8	50:34	3	CONFIG_EAC3_ENCODER && s -> eac3
water	50:8	0:0	4	CONFIG_EAC3_ENCODER
op	50:28	0:0	4	&&
water	50:31	0:0	4	s
op	50:32	0:0	4	->
water	50:34	0:0	4	eac3
stmts	51:8	51:41	3	
call	51:8	51:40	4	ff_eac3_get_frame_exp_strategy
arg	51:39	51:40	5	s
water	51:39	0:0	6	s
water	51:41	0:0	4	;

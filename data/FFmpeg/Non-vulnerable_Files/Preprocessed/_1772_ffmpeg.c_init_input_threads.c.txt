func	1:0	22:0	0	static int	init_input_threads
params	1:29	0:0	1	
param	1:30	1:34	2	void
stmnts	0:0	21:12	1	
decl	3:4	3:14	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:14	2	int	ret
if	4:4	5:16	2	(nb_input_files == 1)
cond	4:8	4:26	3	nb_input_files == 1
water	4:8	0:0	4	nb_input_files
op	4:23	0:0	4	==
water	4:26	0:0	4	1
stmts	5:8	5:16	3	
return	5:8	5:16	4	0
water	5:15	0:0	5	0
for	6:4	20:4	2	(i = 0 ;i < nb_input_files;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:20	3	i < nb_input_files
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	nb_input_files
forexpr	6:36	6:37	3	i ++
water	6:36	0:0	4	i
op	6:37	0:0	4	++
stmts	6:41	20:4	3	
water	6:41	0:0	4	{
decl	7:8	7:37	4	InputFile	*f
op	7:21	0:0	4	=
water	7:23	0:0	4	input_files
op	7:34	0:0	4	[
water	7:35	0:0	4	i
op	7:36	0:0	4	]
if	8:8	10:31	4	(f -> ctx -> pb ? ! f -> ctx -> pb -> seekable :strcmp (f -> ctx -> iformat -> name ,"lavfi" ))
cond	8:12	9:49	5	f -> ctx -> pb ? ! f -> ctx -> pb -> seekable :strcmp (f -> ctx -> iformat -> name ,"lavfi" )
water	8:12	0:0	6	f
op	8:13	0:0	6	->
water	8:15	0:0	6	ctx
op	8:18	0:0	6	->
water	8:20	0:0	6	pb
water	8:23	0:0	6	?
op	8:25	0:0	6	!
water	8:26	0:0	6	f
op	8:27	0:0	6	->
water	8:29	0:0	6	ctx
op	8:32	0:0	6	->
water	8:34	0:0	6	pb
op	8:36	0:0	6	->
water	8:38	0:0	6	seekable
water	8:47	0:0	6	:
call	9:12	9:49	6	strcmp
arg	9:19	9:40	7	f->ctx->iformat->name
water	9:19	0:0	8	f
op	9:20	0:0	8	->
water	9:22	0:0	8	ctx
op	9:25	0:0	8	->
water	9:27	0:0	8	iformat
op	9:34	0:0	8	->
water	9:36	0:0	8	name
arg	9:42	9:49	7	"lavfi"
water	9:42	0:0	8	"lavfi"
stmts	10:12	10:31	5	
water	10:12	0:0	6	f
op	10:13	0:0	6	->
water	10:15	0:0	6	non_blocking
op	10:28	0:0	6	=
water	10:30	0:0	6	1
water	10:31	0:0	6	;
water	11:8	0:0	4	ret
op	11:12	0:0	4	=
call	11:14	12:82	4	av_thread_message_queue_alloc
arg	11:44	11:63	5	&f->in_thread_queue
op	11:44	0:0	6	&
water	11:45	0:0	6	f
op	11:46	0:0	6	->
water	11:48	0:0	6	in_thread_queue
arg	12:44	12:64	5	f->thread_queue_size
water	12:44	0:0	6	f
op	12:45	0:0	6	->
water	12:47	0:0	6	thread_queue_size
arg	12:66	12:82	5	sizeof(AVPacket)
op	12:66	0:0	6	sizeof
water	12:72	0:0	6	(
water	12:73	0:0	6	AVPacket
water	12:81	0:0	6	)
water	12:83	0:0	4	;
if	13:8	14:22	4	(ret < 0)
cond	13:12	13:18	5	ret < 0
water	13:12	0:0	6	ret
op	13:16	0:0	6	<
water	13:18	0:0	6	0
stmts	14:12	14:22	5	
return	14:12	14:22	6	ret
water	14:19	0:0	7	ret
if	15:8	19:8	4	(( ret =pthread_create (& f -> thread ,NULL ,input_thread ,f ) ))
cond	15:12	15:68	5	( ret =pthread_create (& f -> thread ,NULL ,input_thread ,f ) )
water	15:12	0:0	6	(
water	15:13	0:0	6	ret
op	15:17	0:0	6	=
call	15:19	15:67	6	pthread_create
arg	15:34	15:44	7	&f->thread
op	15:34	0:0	8	&
water	15:35	0:0	8	f
op	15:36	0:0	8	->
water	15:38	0:0	8	thread
arg	15:46	15:50	7	NULL
water	15:46	0:0	8	NULL
arg	15:52	15:64	7	input_thread
water	15:52	0:0	8	input_thread
arg	15:66	15:67	7	f
water	15:66	0:0	8	f
water	15:68	0:0	6	)
stmts	15:71	19:8	5	
water	15:71	0:0	6	{
call	16:12	16:137	6	av_log
arg	16:19	16:23	7	NULL
water	16:19	0:0	8	NULL
arg	16:25	16:37	7	AV_LOG_ERROR
water	16:25	0:0	8	AV_LOG_ERROR
arg	16:39	16:122	7	"pthread_create failed: %s. Try to increase `ulimit -v` or decrease `ulimit -s`.\n"
water	16:39	0:0	8	"pthread_create failed: %s. Try to increase `ulimit -v` or decrease `ulimit -s`.\n"
arg	16:124	16:137	7	strerror(ret)
call	16:124	16:136	8	strerror
arg	16:133	16:136	9	ret
water	16:133	0:0	10	ret
water	16:138	0:0	6	;
call	17:12	17:60	6	av_thread_message_queue_free
arg	17:41	17:60	7	&f->in_thread_queue
op	17:41	0:0	8	&
water	17:42	0:0	8	f
op	17:43	0:0	8	->
water	17:45	0:0	8	in_thread_queue
water	17:61	0:0	6	;
return	18:12	18:31	6	AVERROR(ret)
call	18:19	18:30	7	AVERROR
arg	18:27	18:30	8	ret
water	18:27	0:0	9	ret
water	19:8	0:0	6	}
water	20:4	0:0	4	}
return	21:4	21:12	2	0
water	21:11	0:0	3	0

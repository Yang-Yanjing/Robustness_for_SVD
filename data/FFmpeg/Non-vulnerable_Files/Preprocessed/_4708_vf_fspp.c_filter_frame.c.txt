func	1:0	92:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	91:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:33	2	FSPPContext	*fspp
op	4:22	0:0	2	=
water	4:24	0:0	2	ctx
op	4:27	0:0	2	->
water	4:29	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:21	2	AVFrame	*out
op	6:17	0:0	2	=
water	6:19	0:0	2	in
decl	7:4	7:21	2	int	qp_stride
op	7:18	0:0	2	=
water	7:20	0:0	2	0
decl	8:4	8:28	2	uint8_t	*qp_table
op	8:22	0:0	2	=
water	8:24	0:0	2	NULL
decl	9:4	9:15	2	int	i
water	9:9	0:0	2	,
decl	9:4	9:15	2	int	bias
decl	10:4	10:30	2	int	custom_threshold_m[64]
water	11:4	0:0	2	bias
op	11:9	0:0	2	=
water	11:11	0:0	2	(
water	11:12	0:0	2	1
op	11:14	0:0	2	<<
water	11:17	0:0	2	4
water	11:18	0:0	2	)
op	11:20	0:0	2	+
water	11:22	0:0	2	fspp
op	11:26	0:0	2	->
water	11:28	0:0	2	strength
water	11:36	0:0	2	;
for	12:4	13:80	2	(i = 0 ;i < 64;i ++)
forinit	12:9	12:14	3	i = 0 ;
water	12:9	0:0	4	i
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	;
cond	12:16	12:20	3	i < 64
water	12:16	0:0	4	i
op	12:18	0:0	4	<
water	12:20	0:0	4	64
forexpr	12:24	12:25	3	i ++
water	12:24	0:0	4	i
op	12:25	0:0	4	++
stmts	13:8	13:80	3	
water	13:8	0:0	4	custom_threshold_m
op	13:26	0:0	4	[
water	13:27	0:0	4	i
op	13:28	0:0	4	]
op	13:30	0:0	4	=
call	13:32	13:79	4	(int)
arg	13:38	13:79	5	custom_threshold[i]*(bias/71.0)+0.5
water	13:38	0:0	6	custom_threshold
op	13:54	0:0	6	[
water	13:55	0:0	6	i
op	13:56	0:0	6	]
op	13:58	0:0	6	*
water	13:60	0:0	6	(
water	13:61	0:0	6	bias
op	13:66	0:0	6	/
water	13:68	0:0	6	71
op	13:70	0:0	6	.
water	13:71	0:0	6	0
water	13:72	0:0	6	)
op	13:74	0:0	6	+
water	13:76	0:0	6	0
op	13:77	0:0	6	.
water	13:78	0:0	6	5
water	13:80	0:0	4	;
for	14:4	23:4	2	(i = 0 ;i < 8;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	i < 8
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	8
forexpr	14:23	14:24	3	i ++
water	14:23	0:0	4	i
op	14:24	0:0	4	++
stmts	14:28	23:4	3	
water	14:28	0:0	4	{
water	15:8	0:0	4	fspp
op	15:12	0:0	4	->
water	15:14	0:0	4	threshold_mtx_noq
op	15:31	0:0	4	[
water	15:32	0:0	4	2
op	15:34	0:0	4	*
water	15:36	0:0	4	i
op	15:37	0:0	4	]
op	15:39	0:0	4	=
water	15:41	0:0	4	(
water	15:42	0:0	4	uint64_t
water	15:50	0:0	4	)
water	15:51	0:0	4	custom_threshold_m
op	15:69	0:0	4	[
water	15:70	0:0	4	i
op	15:72	0:0	4	*
water	15:74	0:0	4	8
op	15:76	0:0	4	+
water	15:78	0:0	4	2
op	15:79	0:0	4	]
op	16:38	0:0	4	|
water	16:39	0:0	4	(
water	16:40	0:0	4	(
water	16:41	0:0	4	(
water	16:42	0:0	4	uint64_t
water	16:50	0:0	4	)
water	16:51	0:0	4	custom_threshold_m
op	16:69	0:0	4	[
water	16:70	0:0	4	i
op	16:72	0:0	4	*
water	16:74	0:0	4	8
op	16:76	0:0	4	+
water	16:78	0:0	4	6
op	16:79	0:0	4	]
water	16:80	0:0	4	)
op	16:82	0:0	4	<<
water	16:85	0:0	4	16
water	16:87	0:0	4	)
op	17:38	0:0	4	|
water	17:39	0:0	4	(
water	17:40	0:0	4	(
water	17:41	0:0	4	(
water	17:42	0:0	4	uint64_t
water	17:50	0:0	4	)
water	17:51	0:0	4	custom_threshold_m
op	17:69	0:0	4	[
water	17:70	0:0	4	i
op	17:72	0:0	4	*
water	17:74	0:0	4	8
op	17:76	0:0	4	+
water	17:78	0:0	4	0
op	17:79	0:0	4	]
water	17:80	0:0	4	)
op	17:82	0:0	4	<<
water	17:85	0:0	4	32
water	17:87	0:0	4	)
op	18:38	0:0	4	|
water	18:39	0:0	4	(
water	18:40	0:0	4	(
water	18:41	0:0	4	(
water	18:42	0:0	4	uint64_t
water	18:50	0:0	4	)
water	18:51	0:0	4	custom_threshold_m
op	18:69	0:0	4	[
water	18:70	0:0	4	i
op	18:72	0:0	4	*
water	18:74	0:0	4	8
op	18:76	0:0	4	+
water	18:78	0:0	4	4
op	18:79	0:0	4	]
water	18:80	0:0	4	)
op	18:82	0:0	4	<<
water	18:85	0:0	4	48
water	18:87	0:0	4	)
water	18:88	0:0	4	;
water	19:8	0:0	4	fspp
op	19:12	0:0	4	->
water	19:14	0:0	4	threshold_mtx_noq
op	19:31	0:0	4	[
water	19:32	0:0	4	2
op	19:34	0:0	4	*
water	19:36	0:0	4	i
op	19:38	0:0	4	+
water	19:40	0:0	4	1
op	19:41	0:0	4	]
op	19:43	0:0	4	=
water	19:45	0:0	4	(
water	19:46	0:0	4	uint64_t
water	19:54	0:0	4	)
water	19:55	0:0	4	custom_threshold_m
op	19:73	0:0	4	[
water	19:74	0:0	4	i
op	19:76	0:0	4	*
water	19:78	0:0	4	8
op	19:80	0:0	4	+
water	19:82	0:0	4	5
op	19:83	0:0	4	]
op	20:42	0:0	4	|
water	20:43	0:0	4	(
water	20:44	0:0	4	(
water	20:45	0:0	4	(
water	20:46	0:0	4	uint64_t
water	20:54	0:0	4	)
water	20:55	0:0	4	custom_threshold_m
op	20:73	0:0	4	[
water	20:74	0:0	4	i
op	20:76	0:0	4	*
water	20:78	0:0	4	8
op	20:80	0:0	4	+
water	20:82	0:0	4	3
op	20:83	0:0	4	]
water	20:84	0:0	4	)
op	20:86	0:0	4	<<
water	20:89	0:0	4	16
water	20:91	0:0	4	)
op	21:42	0:0	4	|
water	21:43	0:0	4	(
water	21:44	0:0	4	(
water	21:45	0:0	4	(
water	21:46	0:0	4	uint64_t
water	21:54	0:0	4	)
water	21:55	0:0	4	custom_threshold_m
op	21:73	0:0	4	[
water	21:74	0:0	4	i
op	21:76	0:0	4	*
water	21:78	0:0	4	8
op	21:80	0:0	4	+
water	21:82	0:0	4	1
op	21:83	0:0	4	]
water	21:84	0:0	4	)
op	21:86	0:0	4	<<
water	21:89	0:0	4	32
water	21:91	0:0	4	)
op	22:42	0:0	4	|
water	22:43	0:0	4	(
water	22:44	0:0	4	(
water	22:45	0:0	4	(
water	22:46	0:0	4	uint64_t
water	22:54	0:0	4	)
water	22:55	0:0	4	custom_threshold_m
op	22:73	0:0	4	[
water	22:74	0:0	4	i
op	22:76	0:0	4	*
water	22:78	0:0	4	8
op	22:80	0:0	4	+
water	22:82	0:0	4	7
op	22:83	0:0	4	]
water	22:84	0:0	4	)
op	22:86	0:0	4	<<
water	22:89	0:0	4	48
water	22:91	0:0	4	)
water	22:92	0:0	4	;
water	23:4	0:0	4	}
if	24:4	25:139	2	(fspp -> qp)
cond	24:8	24:14	3	fspp -> qp
water	24:8	0:0	4	fspp
op	24:12	0:0	4	->
water	24:14	0:0	4	qp
stmts	25:8	25:139	3	
water	25:8	0:0	4	fspp
op	25:12	0:0	4	->
water	25:14	0:0	4	prev_q
op	25:21	0:0	4	=
water	25:23	0:0	4	fspp
op	25:27	0:0	4	->
water	25:29	0:0	4	qp
water	25:31	0:0	4	,
call	25:33	25:138	4	fspp->mul_thrmat
arg	25:50	25:90	5	(int16_t*)(&fspp->threshold_mtx_noq[0])
call	25:50	25:89	6	(int16_t*)
arg	25:62	25:89	7	&fspp->threshold_mtx_noq[0]
op	25:62	0:0	8	&
water	25:63	0:0	8	fspp
op	25:67	0:0	8	->
water	25:69	0:0	8	threshold_mtx_noq
op	25:86	0:0	8	[
water	25:87	0:0	8	0
op	25:88	0:0	8	]
arg	25:92	25:128	5	(int16_t*)(&fspp->threshold_mtx[0])
call	25:92	25:127	6	(int16_t*)
arg	25:104	25:127	7	&fspp->threshold_mtx[0]
op	25:104	0:0	8	&
water	25:105	0:0	8	fspp
op	25:109	0:0	8	->
water	25:111	0:0	8	threshold_mtx
op	25:124	0:0	8	[
water	25:125	0:0	8	0
op	25:126	0:0	8	]
arg	25:130	25:138	5	fspp->qp
water	25:130	0:0	6	fspp
op	25:134	0:0	6	->
water	25:136	0:0	6	qp
water	25:139	0:0	4	;
if	30:4	54:4	2	(! fspp -> qp)
cond	30:8	30:15	3	! fspp -> qp
op	30:8	0:0	4	!
water	30:9	0:0	4	fspp
op	30:13	0:0	4	->
water	30:15	0:0	4	qp
stmts	30:19	54:4	3	
water	30:19	0:0	4	{
water	31:8	0:0	4	qp_table
op	31:17	0:0	4	=
call	31:19	31:75	4	av_frame_get_qp_table
arg	31:41	31:43	5	in
water	31:41	0:0	6	in
arg	31:45	31:55	5	&qp_stride
op	31:45	0:0	6	&
water	31:46	0:0	6	qp_stride
arg	31:57	31:75	5	&fspp->qscale_type
op	31:57	0:0	6	&
water	31:58	0:0	6	fspp
op	31:62	0:0	6	->
water	31:64	0:0	6	qscale_type
water	31:76	0:0	4	;
if	32:8	53:8	4	(qp_table && ! fspp -> use_bframe_qp && in -> pict_type != AV_PICTURE_TYPE_B)
cond	32:12	32:65	5	qp_table && ! fspp -> use_bframe_qp && in -> pict_type != AV_PICTURE_TYPE_B
water	32:12	0:0	6	qp_table
op	32:21	0:0	6	&&
op	32:24	0:0	6	!
water	32:25	0:0	6	fspp
op	32:29	0:0	6	->
water	32:31	0:0	6	use_bframe_qp
op	32:45	0:0	6	&&
water	32:48	0:0	6	in
op	32:50	0:0	6	->
water	32:52	0:0	6	pict_type
op	32:62	0:0	6	!=
water	32:65	0:0	6	AV_PICTURE_TYPE_B
stmts	32:84	53:8	5	
water	32:84	0:0	6	{
decl	33:12	33:20	6	int	w
water	33:17	0:0	6	,
decl	33:12	33:20	6	int	h
if	36:11	39:12	6	(! qp_stride)
cond	36:15	36:16	7	! qp_stride
op	36:15	0:0	8	!
water	36:16	0:0	8	qp_stride
stmts	36:27	39:12	7	
water	36:27	0:0	8	{
water	37:16	0:0	8	w
op	37:18	0:0	8	=
call	37:20	37:47	8	FF_CEIL_RSHIFT
arg	37:35	37:44	9	inlink->w
water	37:35	0:0	10	inlink
op	37:41	0:0	10	->
water	37:43	0:0	10	w
arg	37:46	37:47	9	4
water	37:46	0:0	10	4
water	37:48	0:0	8	;
water	38:16	0:0	8	h
op	38:18	0:0	8	=
water	38:20	0:0	8	1
water	38:21	0:0	8	;
water	39:12	0:0	8	}
else	39:14	42:12	6
stmts	39:19	42:12	7	
water	39:19	0:0	8	{
water	40:16	0:0	8	w
op	40:18	0:0	8	=
water	40:20	0:0	8	qp_stride
water	40:29	0:0	8	;
water	41:16	0:0	8	h
op	41:18	0:0	8	=
call	41:20	41:47	8	FF_CEIL_RSHIFT
arg	41:35	41:44	9	inlink->h
water	41:35	0:0	10	inlink
op	41:41	0:0	10	->
water	41:43	0:0	10	h
arg	41:46	41:47	9	4
water	41:46	0:0	10	4
water	41:48	0:0	8	;
water	42:12	0:0	8	}
if	43:12	50:12	6	(w * h > fspp -> non_b_qp_alloc_size)
cond	43:16	43:30	7	w * h > fspp -> non_b_qp_alloc_size
water	43:16	0:0	8	w
op	43:18	0:0	8	*
water	43:20	0:0	8	h
op	43:22	0:0	8	>
water	43:24	0:0	8	fspp
op	43:28	0:0	8	->
water	43:30	0:0	8	non_b_qp_alloc_size
stmts	43:51	50:12	7	
water	43:51	0:0	8	{
decl	44:16	44:72	8	int	ret
op	44:24	0:0	8	=
call	44:26	44:71	9	av_reallocp_array
arg	44:44	44:65	10	&fspp->non_b_qp_table
op	44:44	0:0	11	&
water	44:45	0:0	11	fspp
op	44:49	0:0	11	->
water	44:51	0:0	11	non_b_qp_table
arg	44:67	44:68	10	w
water	44:67	0:0	11	w
arg	44:70	44:71	10	h
water	44:70	0:0	11	h
if	45:16	48:16	8	(ret < 0)
cond	45:20	45:26	9	ret < 0
water	45:20	0:0	10	ret
op	45:24	0:0	10	<
water	45:26	0:0	10	0
stmts	45:29	48:16	9	
water	45:29	0:0	10	{
water	46:20	0:0	10	fspp
op	46:24	0:0	10	->
water	46:26	0:0	10	non_b_qp_alloc_size
op	46:46	0:0	10	=
water	46:48	0:0	10	0
water	46:49	0:0	10	;
return	47:20	47:30	10	ret
water	47:27	0:0	11	ret
water	48:16	0:0	10	}
water	49:16	0:0	8	fspp
op	49:20	0:0	8	->
water	49:22	0:0	8	non_b_qp_alloc_size
op	49:42	0:0	8	=
water	49:44	0:0	8	w
op	49:46	0:0	8	*
water	49:48	0:0	8	h
water	49:49	0:0	8	;
water	50:12	0:0	8	}
call	51:12	51:57	6	av_assert0
arg	51:23	51:57	7	w*h<=fspp->non_b_qp_alloc_size
water	51:23	0:0	8	w
op	51:25	0:0	8	*
water	51:27	0:0	8	h
op	51:29	0:0	8	<=
water	51:32	0:0	8	fspp
op	51:36	0:0	8	->
water	51:38	0:0	8	non_b_qp_alloc_size
water	51:58	0:0	6	;
call	52:12	52:56	6	memcpy
arg	52:19	52:39	7	fspp->non_b_qp_table
water	52:19	0:0	8	fspp
op	52:23	0:0	8	->
water	52:25	0:0	8	non_b_qp_table
arg	52:41	52:49	7	qp_table
water	52:41	0:0	8	qp_table
arg	52:51	52:56	7	w*h
water	52:51	0:0	8	w
op	52:53	0:0	8	*
water	52:55	0:0	8	h
water	52:57	0:0	6	;
water	53:8	0:0	6	}
water	54:4	0:0	4	}
if	55:4	83:4	2	(fspp -> log2_count && ! ctx -> is_disabled)
cond	55:8	55:34	3	fspp -> log2_count && ! ctx -> is_disabled
water	55:8	0:0	4	fspp
op	55:12	0:0	4	->
water	55:14	0:0	4	log2_count
op	55:25	0:0	4	&&
op	55:28	0:0	4	!
water	55:29	0:0	4	ctx
op	55:32	0:0	4	->
water	55:34	0:0	4	is_disabled
stmts	55:47	83:4	3	
water	55:47	0:0	4	{
if	56:8	57:43	4	(! fspp -> use_bframe_qp && fspp -> non_b_qp_table)
cond	56:12	56:42	5	! fspp -> use_bframe_qp && fspp -> non_b_qp_table
op	56:12	0:0	6	!
water	56:13	0:0	6	fspp
op	56:17	0:0	6	->
water	56:19	0:0	6	use_bframe_qp
op	56:33	0:0	6	&&
water	56:36	0:0	6	fspp
op	56:40	0:0	6	->
water	56:42	0:0	6	non_b_qp_table
stmts	57:12	57:43	5	
water	57:12	0:0	6	qp_table
op	57:21	0:0	6	=
water	57:23	0:0	6	fspp
op	57:27	0:0	6	->
water	57:29	0:0	6	non_b_qp_table
water	57:43	0:0	6	;
if	58:8	82:8	4	(qp_table || fspp -> qp)
cond	58:12	58:30	5	qp_table || fspp -> qp
water	58:12	0:0	6	qp_table
op	58:21	0:0	6	||
water	58:24	0:0	6	fspp
op	58:28	0:0	6	->
water	58:30	0:0	6	qp
stmts	58:34	82:8	5	
water	58:34	0:0	6	{
decl	59:12	59:64	6	const int	cw
op	59:25	0:0	6	=
call	59:27	59:63	7	FF_CEIL_RSHIFT
arg	59:42	59:51	8	inlink->w
water	59:42	0:0	9	inlink
op	59:48	0:0	9	->
water	59:50	0:0	9	w
arg	59:53	59:63	8	fspp->hsub
water	59:53	0:0	9	fspp
op	59:57	0:0	9	->
water	59:59	0:0	9	hsub
decl	60:12	60:64	6	const int	ch
op	60:25	0:0	6	=
call	60:27	60:63	7	FF_CEIL_RSHIFT
arg	60:42	60:51	8	inlink->h
water	60:42	0:0	9	inlink
op	60:48	0:0	9	->
water	60:50	0:0	9	h
arg	60:53	60:63	8	fspp->vsub
water	60:53	0:0	9	fspp
op	60:57	0:0	9	->
water	60:59	0:0	9	vsub
if	63:12	74:12	6	(!av_frame_is_writable (in ) || ( inlink -> w & 7 ) || ( inlink -> h & 7 ))
cond	63:16	63:78	7	!av_frame_is_writable (in ) || ( inlink -> w & 7 ) || ( inlink -> h & 7 )
op	63:16	0:0	8	!
call	63:17	63:40	8	av_frame_is_writable
arg	63:38	63:40	9	in
water	63:38	0:0	10	in
op	63:42	0:0	8	||
water	63:45	0:0	8	(
water	63:46	0:0	8	inlink
op	63:52	0:0	8	->
water	63:54	0:0	8	w
op	63:56	0:0	8	&
water	63:58	0:0	8	7
water	63:59	0:0	8	)
op	63:61	0:0	8	||
water	63:64	0:0	8	(
water	63:65	0:0	8	inlink
op	63:71	0:0	8	->
water	63:73	0:0	8	h
op	63:75	0:0	8	&
water	63:77	0:0	8	7
water	63:78	0:0	8	)
stmts	63:81	74:12	7	
water	63:81	0:0	8	{
decl	64:16	64:59	8	const int	aligned_w
op	64:36	0:0	8	=
call	64:38	64:58	9	FFALIGN
arg	64:46	64:55	10	inlink->w
water	64:46	0:0	11	inlink
op	64:52	0:0	11	->
water	64:54	0:0	11	w
arg	64:57	64:58	10	8
water	64:57	0:0	11	8
decl	65:16	65:59	8	const int	aligned_h
op	65:36	0:0	8	=
call	65:38	65:58	9	FFALIGN
arg	65:46	65:55	10	inlink->h
water	65:46	0:0	11	inlink
op	65:52	0:0	11	->
water	65:54	0:0	11	h
arg	65:57	65:58	10	8
water	65:57	0:0	11	8
water	66:16	0:0	8	out
op	66:20	0:0	8	=
call	66:22	66:71	8	ff_get_video_buffer
arg	66:42	66:49	9	outlink
water	66:42	0:0	10	outlink
arg	66:51	66:60	9	aligned_w
water	66:51	0:0	10	aligned_w
arg	66:62	66:71	9	aligned_h
water	66:62	0:0	10	aligned_h
water	66:72	0:0	8	;
if	67:16	70:16	8	(! out)
cond	67:20	67:21	9	! out
op	67:20	0:0	10	!
water	67:21	0:0	10	out
stmts	67:26	70:16	9	
water	67:26	0:0	10	{
call	68:20	68:37	10	av_frame_free
arg	68:34	68:37	11	&in
op	68:34	0:0	12	&
water	68:35	0:0	12	in
water	68:38	0:0	10	;
return	69:20	69:42	10	AVERROR(ENOMEM)
call	69:27	69:41	11	AVERROR
arg	69:35	69:41	12	ENOMEM
water	69:35	0:0	13	ENOMEM
water	70:16	0:0	10	}
call	71:16	71:43	8	av_frame_copy_props
arg	71:36	71:39	9	out
water	71:36	0:0	10	out
arg	71:41	71:43	9	in
water	71:41	0:0	10	in
water	71:44	0:0	8	;
water	72:16	0:0	8	out
op	72:19	0:0	8	->
water	72:21	0:0	8	width
op	72:27	0:0	8	=
water	72:29	0:0	8	in
op	72:31	0:0	8	->
water	72:33	0:0	8	width
water	72:38	0:0	8	;
water	73:16	0:0	8	out
op	73:19	0:0	8	->
water	73:21	0:0	8	height
op	73:28	0:0	8	=
water	73:30	0:0	8	in
op	73:32	0:0	8	->
water	73:34	0:0	8	height
water	73:40	0:0	8	;
water	74:12	0:0	8	}
call	75:12	76:63	6	filter
arg	75:19	75:23	7	fspp
water	75:19	0:0	8	fspp
arg	75:25	75:37	7	out->data[0]
water	75:25	0:0	8	out
op	75:28	0:0	8	->
water	75:30	0:0	8	data
op	75:34	0:0	8	[
water	75:35	0:0	8	0
op	75:36	0:0	8	]
arg	75:39	75:50	7	in->data[0]
water	75:39	0:0	8	in
op	75:41	0:0	8	->
water	75:43	0:0	8	data
op	75:47	0:0	8	[
water	75:48	0:0	8	0
op	75:49	0:0	8	]
arg	75:52	75:68	7	out->linesize[0]
water	75:52	0:0	8	out
op	75:55	0:0	8	->
water	75:57	0:0	8	linesize
op	75:65	0:0	8	[
water	75:66	0:0	8	0
op	75:67	0:0	8	]
arg	75:70	75:85	7	in->linesize[0]
water	75:70	0:0	8	in
op	75:72	0:0	8	->
water	75:74	0:0	8	linesize
op	75:82	0:0	8	[
water	75:83	0:0	8	0
op	75:84	0:0	8	]
arg	76:19	76:28	7	inlink->w
water	76:19	0:0	8	inlink
op	76:25	0:0	8	->
water	76:27	0:0	8	w
arg	76:30	76:39	7	inlink->h
water	76:30	0:0	8	inlink
op	76:36	0:0	8	->
water	76:38	0:0	8	h
arg	76:41	76:49	7	qp_table
water	76:41	0:0	8	qp_table
arg	76:51	76:60	7	qp_stride
water	76:51	0:0	8	qp_stride
arg	76:62	76:63	7	1
water	76:62	0:0	8	1
water	76:64	0:0	6	;
call	77:12	78:63	6	filter
arg	77:19	77:23	7	fspp
water	77:19	0:0	8	fspp
arg	77:25	77:37	7	out->data[1]
water	77:25	0:0	8	out
op	77:28	0:0	8	->
water	77:30	0:0	8	data
op	77:34	0:0	8	[
water	77:35	0:0	8	1
op	77:36	0:0	8	]
arg	77:39	77:50	7	in->data[1]
water	77:39	0:0	8	in
op	77:41	0:0	8	->
water	77:43	0:0	8	data
op	77:47	0:0	8	[
water	77:48	0:0	8	1
op	77:49	0:0	8	]
arg	77:52	77:68	7	out->linesize[1]
water	77:52	0:0	8	out
op	77:55	0:0	8	->
water	77:57	0:0	8	linesize
op	77:65	0:0	8	[
water	77:66	0:0	8	1
op	77:67	0:0	8	]
arg	77:70	77:85	7	in->linesize[1]
water	77:70	0:0	8	in
op	77:72	0:0	8	->
water	77:74	0:0	8	linesize
op	77:82	0:0	8	[
water	77:83	0:0	8	1
op	77:84	0:0	8	]
arg	78:19	78:21	7	cw
water	78:19	0:0	8	cw
arg	78:30	78:32	7	ch
water	78:30	0:0	8	ch
arg	78:41	78:49	7	qp_table
water	78:41	0:0	8	qp_table
arg	78:51	78:60	7	qp_stride
water	78:51	0:0	8	qp_stride
arg	78:62	78:63	7	0
water	78:62	0:0	8	0
water	78:64	0:0	6	;
call	79:12	80:63	6	filter
arg	79:19	79:23	7	fspp
water	79:19	0:0	8	fspp
arg	79:25	79:37	7	out->data[2]
water	79:25	0:0	8	out
op	79:28	0:0	8	->
water	79:30	0:0	8	data
op	79:34	0:0	8	[
water	79:35	0:0	8	2
op	79:36	0:0	8	]
arg	79:39	79:50	7	in->data[2]
water	79:39	0:0	8	in
op	79:41	0:0	8	->
water	79:43	0:0	8	data
op	79:47	0:0	8	[
water	79:48	0:0	8	2
op	79:49	0:0	8	]
arg	79:52	79:68	7	out->linesize[2]
water	79:52	0:0	8	out
op	79:55	0:0	8	->
water	79:57	0:0	8	linesize
op	79:65	0:0	8	[
water	79:66	0:0	8	2
op	79:67	0:0	8	]
arg	79:70	79:85	7	in->linesize[2]
water	79:70	0:0	8	in
op	79:72	0:0	8	->
water	79:74	0:0	8	linesize
op	79:82	0:0	8	[
water	79:83	0:0	8	2
op	79:84	0:0	8	]
arg	80:19	80:21	7	cw
water	80:19	0:0	8	cw
arg	80:30	80:32	7	ch
water	80:30	0:0	8	ch
arg	80:41	80:49	7	qp_table
water	80:41	0:0	8	qp_table
arg	80:51	80:60	7	qp_stride
water	80:51	0:0	8	qp_stride
arg	80:62	80:63	7	0
water	80:62	0:0	8	0
water	80:64	0:0	6	;
call	81:12	81:19	6	emms_c
water	81:20	0:0	6	;
water	82:8	0:0	6	}
water	83:4	0:0	4	}
if	84:4	90:4	2	(in != out)
cond	84:8	84:14	3	in != out
water	84:8	0:0	4	in
op	84:11	0:0	4	!=
water	84:14	0:0	4	out
stmts	84:19	90:4	3	
water	84:19	0:0	4	{
if	85:8	88:53	4	(in -> data [ 3 ])
cond	85:12	85:22	5	in -> data [ 3 ]
water	85:12	0:0	6	in
op	85:14	0:0	6	->
water	85:16	0:0	6	data
op	85:20	0:0	6	[
water	85:21	0:0	6	3
op	85:22	0:0	6	]
stmts	86:12	88:53	5	
call	86:12	88:52	6	av_image_copy_plane
arg	86:32	86:44	7	out->data[3]
water	86:32	0:0	8	out
op	86:35	0:0	8	->
water	86:37	0:0	8	data
op	86:41	0:0	8	[
water	86:42	0:0	8	3
op	86:43	0:0	8	]
arg	86:46	86:62	7	out->linesize[3]
water	86:46	0:0	8	out
op	86:49	0:0	8	->
water	86:51	0:0	8	linesize
op	86:59	0:0	8	[
water	86:60	0:0	8	3
op	86:61	0:0	8	]
arg	87:32	87:44	7	in->data[3]
water	87:32	0:0	8	in
op	87:35	0:0	8	->
water	87:37	0:0	8	data
op	87:41	0:0	8	[
water	87:42	0:0	8	3
op	87:43	0:0	8	]
arg	87:46	87:62	7	in->linesize[3]
water	87:46	0:0	8	in
op	87:49	0:0	8	->
water	87:51	0:0	8	linesize
op	87:59	0:0	8	[
water	87:60	0:0	8	3
op	87:61	0:0	8	]
arg	88:32	88:41	7	inlink->w
water	88:32	0:0	8	inlink
op	88:38	0:0	8	->
water	88:40	0:0	8	w
arg	88:43	88:52	7	inlink->h
water	88:43	0:0	8	inlink
op	88:49	0:0	8	->
water	88:51	0:0	8	h
water	88:53	0:0	6	;
call	89:8	89:25	4	av_frame_free
arg	89:22	89:25	5	&in
op	89:22	0:0	6	&
water	89:23	0:0	6	in
water	89:26	0:0	4	;
water	90:4	0:0	4	}
return	91:4	91:40	2	ff_filter_frame(outlink,out)
call	91:11	91:39	3	ff_filter_frame
arg	91:27	91:34	4	outlink
water	91:27	0:0	5	outlink
arg	91:36	91:39	4	out
water	91:36	0:0	5	out

func	1:0	59:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	58:12	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:33	2	USPPContext	*uspp
op	4:22	0:0	2	=
water	4:24	0:0	2	ctx
op	4:27	0:0	2	->
water	4:29	0:0	2	priv
decl	5:4	5:32	2	const int	height
op	5:21	0:0	2	=
water	5:23	0:0	2	inlink
op	5:29	0:0	2	->
water	5:31	0:0	2	h
decl	6:4	6:32	2	const int	width
op	6:21	0:0	2	=
water	6:23	0:0	2	inlink
op	6:29	0:0	2	->
water	6:31	0:0	2	w
decl	7:4	7:72	2	const AVPixFmtDescriptor	*desc
op	7:35	0:0	2	=
call	7:37	7:71	3	av_pix_fmt_desc_get
arg	7:57	7:71	4	inlink->format
water	7:57	0:0	5	inlink
op	7:63	0:0	5	->
water	7:65	0:0	5	format
decl	8:4	8:9	2	int	i
decl	9:4	9:57	2	AVCodec	*enc
op	9:17	0:0	2	=
call	9:19	9:56	3	avcodec_find_encoder
arg	9:40	9:56	4	AV_CODEC_ID_SNOW
water	9:40	0:0	5	AV_CODEC_ID_SNOW
if	10:4	13:4	2	(! enc)
cond	10:8	10:9	3	! enc
op	10:8	0:0	4	!
water	10:9	0:0	4	enc
stmts	10:14	13:4	3	
water	10:14	0:0	4	{
call	11:8	11:61	4	av_log
arg	11:15	11:18	5	ctx
water	11:15	0:0	6	ctx
arg	11:20	11:32	5	AV_LOG_ERROR
water	11:20	0:0	6	AV_LOG_ERROR
arg	11:34	11:61	5	"SNOW encoder not found.\n"
water	11:34	0:0	6	"SNOW encoder not found.\n"
water	11:62	0:0	4	;
return	12:8	12:30	4	AVERROR(EINVAL)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	EINVAL
water	12:23	0:0	7	EINVAL
water	13:4	0:0	4	}
water	14:4	0:0	2	uspp
op	14:8	0:0	2	->
water	14:10	0:0	2	hsub
op	14:15	0:0	2	=
water	14:17	0:0	2	desc
op	14:21	0:0	2	->
water	14:23	0:0	2	log2_chroma_w
water	14:36	0:0	2	;
water	15:4	0:0	2	uspp
op	15:8	0:0	2	->
water	15:10	0:0	2	vsub
op	15:15	0:0	2	=
water	15:17	0:0	2	desc
op	15:21	0:0	2	->
water	15:23	0:0	2	log2_chroma_h
water	15:36	0:0	2	;
for	16:4	29:4	2	(i = 0 ;i < 3;i ++)
forinit	16:9	16:14	3	i = 0 ;
water	16:9	0:0	4	i
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:20	3	i < 3
water	16:16	0:0	4	i
op	16:18	0:0	4	<
water	16:20	0:0	4	3
forexpr	16:23	16:24	3	i ++
water	16:23	0:0	4	i
op	16:24	0:0	4	++
stmts	16:28	29:4	3	
water	16:28	0:0	4	{
decl	17:8	17:27	4	int	is_chroma
op	17:22	0:0	4	=
op	17:24	0:0	4	!
op	17:25	0:0	4	!
water	17:26	0:0	4	i
decl	18:8	18:57	4	int	w
op	18:14	0:0	4	=
water	18:16	0:0	4	(
water	18:17	0:0	4	width
op	18:24	0:0	4	+
water	18:26	0:0	4	4
op	18:28	0:0	4	*
water	18:30	0:0	4	BLOCK
op	18:35	0:0	4	-
water	18:36	0:0	4	1
water	18:37	0:0	4	)
op	18:39	0:0	4	&
water	18:41	0:0	4	(
op	18:42	0:0	4	~
water	18:43	0:0	4	(
water	18:44	0:0	4	2
op	18:46	0:0	4	*
water	18:48	0:0	4	BLOCK
op	18:53	0:0	4	-
water	18:54	0:0	4	1
water	18:55	0:0	4	)
water	18:56	0:0	4	)
decl	19:8	19:57	4	int	h
op	19:14	0:0	4	=
water	19:16	0:0	4	(
water	19:17	0:0	4	height
op	19:24	0:0	4	+
water	19:26	0:0	4	4
op	19:28	0:0	4	*
water	19:30	0:0	4	BLOCK
op	19:35	0:0	4	-
water	19:36	0:0	4	1
water	19:37	0:0	4	)
op	19:39	0:0	4	&
water	19:41	0:0	4	(
op	19:42	0:0	4	~
water	19:43	0:0	4	(
water	19:44	0:0	4	2
op	19:46	0:0	4	*
water	19:48	0:0	4	BLOCK
op	19:53	0:0	4	-
water	19:54	0:0	4	1
water	19:55	0:0	4	)
water	19:56	0:0	4	)
if	20:8	23:8	4	(is_chroma)
cond	20:12	20:12	5	is_chroma
water	20:12	0:0	6	is_chroma
stmts	20:23	23:8	5	
water	20:23	0:0	6	{
water	21:12	0:0	6	w
op	21:14	0:0	6	=
call	21:16	21:44	6	FF_CEIL_RSHIFT
arg	21:31	21:32	7	w
water	21:31	0:0	8	w
arg	21:34	21:44	7	uspp->hsub
water	21:34	0:0	8	uspp
op	21:38	0:0	8	->
water	21:40	0:0	8	hsub
water	21:45	0:0	6	;
water	22:12	0:0	6	h
op	22:14	0:0	6	=
call	22:16	22:44	6	FF_CEIL_RSHIFT
arg	22:31	22:32	7	h
water	22:31	0:0	8	h
arg	22:34	22:44	7	uspp->vsub
water	22:34	0:0	8	uspp
op	22:38	0:0	8	->
water	22:40	0:0	8	vsub
water	22:45	0:0	6	;
water	23:8	0:0	6	}
water	24:8	0:0	4	uspp
op	24:12	0:0	4	->
water	24:14	0:0	4	temp_stride
op	24:25	0:0	4	[
water	24:26	0:0	4	i
op	24:27	0:0	4	]
op	24:29	0:0	4	=
water	24:31	0:0	4	w
water	24:32	0:0	4	;
if	25:8	26:34	4	(! ( uspp -> temp [ i ] =av_malloc_array (uspp -> temp_stride [ i ] ,h * sizeof ( int16_t ) ) ))
cond	25:12	25:88	5	! ( uspp -> temp [ i ] =av_malloc_array (uspp -> temp_stride [ i ] ,h * sizeof ( int16_t ) ) )
op	25:12	0:0	6	!
water	25:13	0:0	6	(
water	25:14	0:0	6	uspp
op	25:18	0:0	6	->
water	25:20	0:0	6	temp
op	25:24	0:0	6	[
water	25:25	0:0	6	i
op	25:26	0:0	6	]
op	25:28	0:0	6	=
call	25:30	25:87	6	av_malloc_array
arg	25:46	25:66	7	uspp->temp_stride[i]
water	25:46	0:0	8	uspp
op	25:50	0:0	8	->
water	25:52	0:0	8	temp_stride
op	25:63	0:0	8	[
water	25:64	0:0	8	i
op	25:65	0:0	8	]
arg	25:68	25:87	7	h*sizeof(int16_t)
water	25:68	0:0	8	h
op	25:70	0:0	8	*
op	25:72	0:0	8	sizeof
water	25:78	0:0	8	(
water	25:79	0:0	8	int16_t
water	25:86	0:0	8	)
water	25:88	0:0	6	)
stmts	26:12	26:34	5	
return	26:12	26:34	6	AVERROR(ENOMEM)
call	26:19	26:33	7	AVERROR
arg	26:27	26:33	8	ENOMEM
water	26:27	0:0	9	ENOMEM
if	27:8	28:34	4	(! ( uspp -> src [ i ] =av_malloc_array (uspp -> temp_stride [ i ] ,h * sizeof ( uint8_t ) ) ))
cond	27:12	27:88	5	! ( uspp -> src [ i ] =av_malloc_array (uspp -> temp_stride [ i ] ,h * sizeof ( uint8_t ) ) )
op	27:12	0:0	6	!
water	27:13	0:0	6	(
water	27:14	0:0	6	uspp
op	27:18	0:0	6	->
water	27:20	0:0	6	src
op	27:24	0:0	6	[
water	27:25	0:0	6	i
op	27:26	0:0	6	]
op	27:28	0:0	6	=
call	27:30	27:87	6	av_malloc_array
arg	27:46	27:66	7	uspp->temp_stride[i]
water	27:46	0:0	8	uspp
op	27:50	0:0	8	->
water	27:52	0:0	8	temp_stride
op	27:63	0:0	8	[
water	27:64	0:0	8	i
op	27:65	0:0	8	]
arg	27:68	27:87	7	h*sizeof(uint8_t)
water	27:68	0:0	8	h
op	27:70	0:0	8	*
op	27:72	0:0	8	sizeof
water	27:78	0:0	8	(
water	27:79	0:0	8	uint8_t
water	27:86	0:0	8	)
water	27:88	0:0	6	)
stmts	28:12	28:34	5	
return	28:12	28:34	6	AVERROR(ENOMEM)
call	28:19	28:33	7	AVERROR
arg	28:27	28:33	8	ENOMEM
water	28:27	0:0	9	ENOMEM
water	29:4	0:0	4	}
for	30:4	52:4	2	(i = 0 ;i < ( 1 << uspp -> log2_count );i ++)
forinit	30:9	30:14	3	i = 0 ;
water	30:9	0:0	4	i
op	30:11	0:0	4	=
water	30:13	0:0	4	0
water	30:14	0:0	4	;
cond	30:16	30:40	3	i < ( 1 << uspp -> log2_count )
water	30:16	0:0	4	i
op	30:18	0:0	4	<
water	30:20	0:0	4	(
water	30:21	0:0	4	1
op	30:22	0:0	4	<<
water	30:24	0:0	4	uspp
op	30:28	0:0	4	->
water	30:30	0:0	4	log2_count
water	30:40	0:0	4	)
forexpr	30:43	30:44	3	i ++
water	30:43	0:0	4	i
op	30:44	0:0	4	++
stmts	30:48	52:4	3	
water	30:48	0:0	4	{
decl	31:8	31:33	4	AVCodecContext	*avctx_enc
decl	32:8	32:33	4	AVDictionary	*opts
op	32:27	0:0	4	=
water	32:29	0:0	4	NULL
decl	33:8	33:15	4	int	ret
if	34:8	35:34	4	(! ( uspp -> avctx_enc [ i ] =avcodec_alloc_context3 (NULL ) ))
cond	34:12	34:63	5	! ( uspp -> avctx_enc [ i ] =avcodec_alloc_context3 (NULL ) )
op	34:12	0:0	6	!
water	34:13	0:0	6	(
water	34:14	0:0	6	uspp
op	34:18	0:0	6	->
water	34:20	0:0	6	avctx_enc
op	34:29	0:0	6	[
water	34:30	0:0	6	i
op	34:31	0:0	6	]
op	34:33	0:0	6	=
call	34:35	34:62	6	avcodec_alloc_context3
arg	34:58	34:62	7	NULL
water	34:58	0:0	8	NULL
water	34:63	0:0	6	)
stmts	35:12	35:34	5	
return	35:12	35:34	6	AVERROR(ENOMEM)
call	35:19	35:33	7	AVERROR
arg	35:27	35:33	8	ENOMEM
water	35:27	0:0	9	ENOMEM
water	36:8	0:0	4	avctx_enc
op	36:18	0:0	4	=
water	36:20	0:0	4	uspp
op	36:24	0:0	4	->
water	36:26	0:0	4	avctx_enc
op	36:35	0:0	4	[
water	36:36	0:0	4	i
op	36:37	0:0	4	]
water	36:38	0:0	4	;
water	37:8	0:0	4	avctx_enc
op	37:17	0:0	4	->
water	37:19	0:0	4	width
op	37:25	0:0	4	=
water	37:27	0:0	4	width
op	37:33	0:0	4	+
water	37:35	0:0	4	BLOCK
water	37:40	0:0	4	;
water	38:8	0:0	4	avctx_enc
op	38:17	0:0	4	->
water	38:19	0:0	4	height
op	38:26	0:0	4	=
water	38:28	0:0	4	height
op	38:35	0:0	4	+
water	38:37	0:0	4	BLOCK
water	38:42	0:0	4	;
water	39:8	0:0	4	avctx_enc
op	39:17	0:0	4	->
water	39:19	0:0	4	time_base
op	39:29	0:0	4	=
water	39:31	0:0	4	(
water	39:32	0:0	4	AVRational
water	39:42	0:0	4	)
water	39:43	0:0	4	{
water	39:44	0:0	4	1
water	39:45	0:0	4	,
water	39:46	0:0	4	25
water	39:48	0:0	4	}
water	39:49	0:0	4	;
water	40:8	0:0	4	avctx_enc
op	40:17	0:0	4	->
water	40:19	0:0	4	gop_size
op	40:28	0:0	4	=
water	40:30	0:0	4	INT_MAX
water	40:37	0:0	4	;
water	41:8	0:0	4	avctx_enc
op	41:17	0:0	4	->
water	41:19	0:0	4	max_b_frames
op	41:32	0:0	4	=
water	41:34	0:0	4	0
water	41:35	0:0	4	;
water	42:8	0:0	4	avctx_enc
op	42:17	0:0	4	->
water	42:19	0:0	4	pix_fmt
op	42:27	0:0	4	=
water	42:29	0:0	4	inlink
op	42:35	0:0	4	->
water	42:37	0:0	4	format
water	42:43	0:0	4	;
water	43:8	0:0	4	avctx_enc
op	43:17	0:0	4	->
water	43:19	0:0	4	flags
op	43:25	0:0	4	=
water	43:27	0:0	4	AV_CODEC_FLAG_QSCALE
op	43:48	0:0	4	|
water	43:50	0:0	4	CODEC_FLAG_LOW_DELAY
water	43:70	0:0	4	;
water	44:8	0:0	4	avctx_enc
op	44:17	0:0	4	->
water	44:19	0:0	4	strict_std_compliance
op	44:41	0:0	4	=
water	44:43	0:0	4	FF_COMPLIANCE_EXPERIMENTAL
water	44:69	0:0	4	;
water	45:8	0:0	4	avctx_enc
op	45:17	0:0	4	->
water	45:19	0:0	4	global_quality
op	45:34	0:0	4	=
water	45:36	0:0	4	123
water	45:39	0:0	4	;
call	46:8	46:49	4	av_dict_set
arg	46:20	46:25	5	&opts
op	46:20	0:0	6	&
water	46:21	0:0	6	opts
arg	46:27	46:41	5	"no_bitstream"
water	46:27	0:0	6	"no_bitstream"
arg	46:43	46:46	5	"1"
water	46:43	0:0	6	"1"
arg	46:48	46:49	5	0
water	46:48	0:0	6	0
water	46:50	0:0	4	;
water	47:8	0:0	4	ret
op	47:12	0:0	4	=
call	47:14	47:49	4	avcodec_open2
arg	47:28	47:37	5	avctx_enc
water	47:28	0:0	6	avctx_enc
arg	47:39	47:42	5	enc
water	47:39	0:0	6	enc
arg	47:44	47:49	5	&opts
op	47:44	0:0	6	&
water	47:45	0:0	6	opts
water	47:50	0:0	4	;
if	48:8	49:22	4	(ret < 0)
cond	48:12	48:18	5	ret < 0
water	48:12	0:0	6	ret
op	48:16	0:0	6	<
water	48:18	0:0	6	0
stmts	49:12	49:22	5	
return	49:12	49:22	6	ret
water	49:19	0:0	7	ret
call	50:8	50:26	4	av_dict_free
arg	50:21	50:26	5	&opts
op	50:21	0:0	6	&
water	50:22	0:0	6	opts
water	50:27	0:0	4	;
call	51:8	51:35	4	av_assert0
arg	51:19	51:35	5	avctx_enc->codec
water	51:19	0:0	6	avctx_enc
op	51:28	0:0	6	->
water	51:30	0:0	6	codec
water	51:36	0:0	4	;
water	52:4	0:0	4	}
water	53:4	0:0	2	uspp
op	53:8	0:0	2	->
water	53:10	0:0	2	outbuf_size
op	53:22	0:0	2	=
water	53:24	0:0	2	(
water	53:25	0:0	2	width
op	53:31	0:0	2	+
water	53:33	0:0	2	BLOCK
water	53:38	0:0	2	)
op	53:40	0:0	2	*
water	53:42	0:0	2	(
water	53:43	0:0	2	height
op	53:50	0:0	2	+
water	53:52	0:0	2	BLOCK
water	53:57	0:0	2	)
op	53:59	0:0	2	*
water	53:61	0:0	2	10
water	53:63	0:0	2	;
if	54:4	55:30	2	(! ( uspp -> frame =av_frame_alloc ( ) ))
cond	54:8	54:40	3	! ( uspp -> frame =av_frame_alloc ( ) )
op	54:8	0:0	4	!
water	54:9	0:0	4	(
water	54:10	0:0	4	uspp
op	54:14	0:0	4	->
water	54:16	0:0	4	frame
op	54:22	0:0	4	=
call	54:24	54:39	4	av_frame_alloc
water	54:40	0:0	4	)
stmts	55:8	55:30	3	
return	55:8	55:30	4	AVERROR(ENOMEM)
call	55:15	55:29	5	AVERROR
arg	55:23	55:29	6	ENOMEM
water	55:23	0:0	7	ENOMEM
if	56:4	57:30	2	(! ( uspp -> outbuf =av_malloc (uspp -> outbuf_size ) ))
cond	56:8	56:53	3	! ( uspp -> outbuf =av_malloc (uspp -> outbuf_size ) )
op	56:8	0:0	4	!
water	56:9	0:0	4	(
water	56:10	0:0	4	uspp
op	56:14	0:0	4	->
water	56:16	0:0	4	outbuf
op	56:23	0:0	4	=
call	56:25	56:52	4	av_malloc
arg	56:35	56:52	5	uspp->outbuf_size
water	56:35	0:0	6	uspp
op	56:39	0:0	6	->
water	56:41	0:0	6	outbuf_size
water	56:53	0:0	4	)
stmts	57:8	57:30	3	
return	57:8	57:30	4	AVERROR(ENOMEM)
call	57:15	57:29	5	AVERROR
arg	57:23	57:29	6	ENOMEM
water	57:23	0:0	7	ENOMEM
return	58:4	58:12	2	0
water	58:11	0:0	3	0

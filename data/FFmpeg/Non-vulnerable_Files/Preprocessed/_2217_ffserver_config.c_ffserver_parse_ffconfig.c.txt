func	1:0	91:0	0	int	ffserver_parse_ffconfig
params	1:27	0:0	1	
param	1:28	1:48	2	const char *	filename
param	1:50	1:72	2	FFServerConfig *	config
stmnts	0:0	90:16	1	
decl	3:4	3:11	2	FILE	*f
decl	4:4	4:19	2	char	line[1024]
decl	5:4	5:16	2	char	cmd[64]
decl	6:4	6:17	2	const char	*p
decl	7:4	7:66	2	FFServerStream	**last_stream
water	7:32	0:0	2	,
decl	7:4	7:66	2	FFServerStream	*stream
op	7:42	0:0	2	=
water	7:44	0:0	2	NULL
water	7:48	0:0	2	,
decl	7:4	7:66	2	FFServerStream	*redirect
op	7:60	0:0	2	=
water	7:62	0:0	2	NULL
decl	8:4	8:44	2	FFServerStream	**last_feed
water	8:30	0:0	2	,
decl	8:4	8:44	2	FFServerStream	*feed
op	8:38	0:0	2	=
water	8:40	0:0	2	NULL
decl	9:4	9:15	2	int	ret
op	9:12	0:0	2	=
water	9:14	0:0	2	0
call	10:4	10:21	2	av_assert0
arg	10:15	10:21	3	config
water	10:15	0:0	4	config
water	10:22	0:0	2	;
water	11:4	0:0	2	f
op	11:6	0:0	2	=
call	11:8	11:27	2	fopen
arg	11:14	11:22	3	filename
water	11:14	0:0	4	filename
arg	11:24	11:27	3	"r"
water	11:24	0:0	4	"r"
water	11:28	0:0	2	;
if	12:4	17:4	2	(! f)
cond	12:8	12:9	3	! f
op	12:8	0:0	4	!
water	12:9	0:0	4	f
stmts	12:12	17:4	3	
water	12:12	0:0	4	{
water	13:8	0:0	4	ret
op	13:12	0:0	4	=
call	13:14	13:27	4	AVERROR
arg	13:22	13:27	5	errno
water	13:22	0:0	6	errno
water	13:28	0:0	4	;
call	14:8	15:72	4	av_log
arg	14:15	14:19	5	NULL
water	14:15	0:0	6	NULL
arg	14:21	14:33	5	AV_LOG_ERROR
water	14:21	0:0	6	AV_LOG_ERROR
arg	15:16	15:62	5	"Could not open the configuration file '%s'\n"
water	15:16	0:0	6	"Could not open the configuration file '%s'\n"
arg	15:64	15:72	5	filename
water	15:64	0:0	6	filename
water	15:73	0:0	4	;
return	16:8	16:18	4	ret
water	16:15	0:0	5	ret
water	17:4	0:0	4	}
water	18:4	0:0	2	config
op	18:10	0:0	2	->
water	18:12	0:0	2	first_stream
op	18:25	0:0	2	=
water	18:27	0:0	2	NULL
water	18:31	0:0	2	;
water	19:4	0:0	2	config
op	19:10	0:0	2	->
water	19:12	0:0	2	first_feed
op	19:23	0:0	2	=
water	19:25	0:0	2	NULL
water	19:29	0:0	2	;
water	20:4	0:0	2	config
op	20:10	0:0	2	->
water	20:12	0:0	2	errors
op	20:19	0:0	2	=
water	20:21	0:0	2	config
op	20:27	0:0	2	->
water	20:29	0:0	2	warnings
op	20:38	0:0	2	=
water	20:40	0:0	2	0
water	20:41	0:0	2	;
water	21:4	0:0	2	last_stream
op	21:16	0:0	2	=
op	21:18	0:0	2	&
water	21:19	0:0	2	config
op	21:25	0:0	2	->
water	21:27	0:0	2	first_stream
water	21:39	0:0	2	;
water	22:4	0:0	2	last_feed
op	22:14	0:0	2	=
op	22:16	0:0	2	&
water	22:17	0:0	2	config
op	22:23	0:0	2	->
water	22:25	0:0	2	first_feed
water	22:35	0:0	2	;
water	23:4	0:0	2	config
op	23:10	0:0	2	->
water	23:12	0:0	2	line_num
op	23:21	0:0	2	=
water	23:23	0:0	2	0
water	23:24	0:0	2	;
while	24:4	80:4	2	(fgets (line ,sizeof ( line ) ,f ) != NULL)
cond	24:11	24:43	3	fgets (line ,sizeof ( line ) ,f ) != NULL
call	24:11	24:38	4	fgets
arg	24:17	24:21	5	line
water	24:17	0:0	6	line
arg	24:23	24:35	5	sizeof(line)
op	24:23	0:0	6	sizeof
water	24:29	0:0	6	(
water	24:30	0:0	6	line
water	24:34	0:0	6	)
arg	24:37	24:38	5	f
water	24:37	0:0	6	f
op	24:40	0:0	4	!=
water	24:43	0:0	4	NULL
stmts	24:49	80:4	3	
water	24:49	0:0	4	{
water	25:8	0:0	4	config
op	25:14	0:0	4	->
water	25:16	0:0	4	line_num
op	25:24	0:0	4	++
water	25:26	0:0	4	;
water	26:8	0:0	4	p
op	26:10	0:0	4	=
water	26:12	0:0	4	line
water	26:16	0:0	4	;
while	27:8	28:15	4	(av_isspace (* p ))
cond	27:15	27:28	5	av_isspace (* p )
call	27:15	27:28	6	av_isspace
arg	27:26	27:28	7	*p
op	27:26	0:0	8	*
water	27:27	0:0	8	p
stmts	28:12	28:15	5	
water	28:12	0:0	6	p
op	28:13	0:0	6	++
water	28:15	0:0	6	;
if	29:8	30:20	4	(* p == '\0' || * p == '#')
cond	29:12	29:32	5	* p == '\0' || * p == '#'
op	29:12	0:0	6	*
water	29:13	0:0	6	p
op	29:15	0:0	6	==
water	29:18	0:0	6	'\0'
op	29:23	0:0	6	||
op	29:26	0:0	6	*
water	29:27	0:0	6	p
op	29:29	0:0	6	==
water	29:32	0:0	6	'#'
stmts	30:12	30:20	5	
continue	30:12	30:20	6	
call	31:8	31:45	4	ffserver_get_arg
arg	31:25	31:28	5	cmd
water	31:25	0:0	6	cmd
arg	31:30	31:41	5	sizeof(cmd)
op	31:30	0:0	6	sizeof
water	31:36	0:0	6	(
water	31:37	0:0	6	cmd
water	31:40	0:0	6	)
arg	31:43	31:45	5	&p
op	31:43	0:0	6	&
water	31:44	0:0	6	p
water	31:46	0:0	4	;
if	32:8	48:8	4	(feed || !av_strcasecmp (cmd ,"<Feed" ))
cond	32:12	32:47	5	feed || !av_strcasecmp (cmd ,"<Feed" )
water	32:12	0:0	6	feed
op	32:17	0:0	6	||
op	32:20	0:0	6	!
call	32:21	32:47	6	av_strcasecmp
arg	32:35	32:38	7	cmd
water	32:35	0:0	8	cmd
arg	32:40	32:47	7	"<Feed"
water	32:40	0:0	8	"<Feed"
stmts	32:50	48:8	5	
water	32:50	0:0	6	{
decl	33:12	33:54	6	int	opening
op	33:24	0:0	6	=
op	33:26	0:0	6	!
call	33:27	33:53	7	av_strcasecmp
arg	33:41	33:44	8	cmd
water	33:41	0:0	9	cmd
arg	33:46	33:53	8	"<Feed"
water	33:46	0:0	9	"<Feed"
if	34:12	36:12	6	(opening && ( stream || feed || redirect ))
cond	34:16	34:54	7	opening && ( stream || feed || redirect )
water	34:16	0:0	8	opening
op	34:24	0:0	8	&&
water	34:27	0:0	8	(
water	34:28	0:0	8	stream
op	34:35	0:0	8	||
water	34:38	0:0	8	feed
op	34:43	0:0	8	||
water	34:46	0:0	8	redirect
water	34:54	0:0	8	)
stmts	34:57	36:12	7	
water	34:57	0:0	8	{
call	35:16	35:42	8	ERROR
arg	35:22	35:42	9	"Already in a tag\n"
water	35:22	0:0	10	"Already in a tag\n"
water	35:43	0:0	8	;
water	36:12	0:0	8	}
else	36:14	47:12	6
stmts	36:19	47:12	7	
water	36:19	0:0	8	{
water	37:16	0:0	8	ret
op	37:20	0:0	8	=
call	37:22	37:71	8	ffserver_parse_config_feed
arg	37:49	37:55	9	config
water	37:49	0:0	10	config
arg	37:57	37:60	9	cmd
water	37:57	0:0	10	cmd
arg	37:62	37:64	9	&p
op	37:62	0:0	10	&
water	37:63	0:0	10	p
arg	37:66	37:71	9	&feed
op	37:66	0:0	10	&
water	37:67	0:0	10	feed
water	37:72	0:0	8	;
if	38:16	39:25	8	(ret < 0)
cond	38:20	38:26	9	ret < 0
water	38:20	0:0	10	ret
op	38:24	0:0	10	<
water	38:26	0:0	10	0
stmts	39:20	39:25	9	
break	39:20	39:25	10	
if	40:16	46:16	8	(opening)
cond	40:20	40:20	9	opening
water	40:20	0:0	10	opening
stmts	40:29	46:16	9	
water	40:29	0:0	10	{
op	42:20	0:0	10	*
water	42:21	0:0	10	last_stream
op	42:33	0:0	10	=
water	42:35	0:0	10	feed
water	42:39	0:0	10	;
op	43:20	0:0	10	*
water	43:21	0:0	10	last_feed
op	43:31	0:0	10	=
water	43:33	0:0	10	feed
water	43:37	0:0	10	;
water	44:20	0:0	10	last_stream
op	44:32	0:0	10	=
op	44:34	0:0	10	&
water	44:35	0:0	10	feed
op	44:39	0:0	10	->
water	44:41	0:0	10	next
water	44:45	0:0	10	;
water	45:20	0:0	10	last_feed
op	45:30	0:0	10	=
op	45:32	0:0	10	&
water	45:33	0:0	10	feed
op	45:37	0:0	10	->
water	45:39	0:0	10	next_feed
water	45:48	0:0	10	;
water	46:16	0:0	10	}
water	47:12	0:0	8	}
water	48:8	0:0	6	}
else	48:10	62:8	4
stmts	48:15	62:8	5	
if	48:15	62:8	6	(stream || !av_strcasecmp (cmd ,"<Stream" ))
cond	48:19	48:58	7	stream || !av_strcasecmp (cmd ,"<Stream" )
water	48:19	0:0	8	stream
op	48:26	0:0	8	||
op	48:29	0:0	8	!
call	48:30	48:58	8	av_strcasecmp
arg	48:44	48:47	9	cmd
water	48:44	0:0	10	cmd
arg	48:49	48:58	9	"<Stream"
water	48:49	0:0	10	"<Stream"
stmts	48:61	62:8	7	
water	48:61	0:0	8	{
decl	49:12	49:56	8	int	opening
op	49:24	0:0	8	=
op	49:26	0:0	8	!
call	49:27	49:55	9	av_strcasecmp
arg	49:41	49:44	10	cmd
water	49:41	0:0	11	cmd
arg	49:46	49:55	10	"<Stream"
water	49:46	0:0	11	"<Stream"
if	50:12	52:12	8	(opening && ( stream || feed || redirect ))
cond	50:16	50:54	9	opening && ( stream || feed || redirect )
water	50:16	0:0	10	opening
op	50:24	0:0	10	&&
water	50:27	0:0	10	(
water	50:28	0:0	10	stream
op	50:35	0:0	10	||
water	50:38	0:0	10	feed
op	50:43	0:0	10	||
water	50:46	0:0	10	redirect
water	50:54	0:0	10	)
stmts	50:57	52:12	9	
water	50:57	0:0	10	{
call	51:16	51:42	10	ERROR
arg	51:22	51:42	11	"Already in a tag\n"
water	51:22	0:0	12	"Already in a tag\n"
water	51:43	0:0	10	;
water	52:12	0:0	10	}
else	52:14	61:12	8
stmts	52:19	61:12	9	
water	52:19	0:0	10	{
water	53:16	0:0	10	ret
op	53:20	0:0	10	=
call	53:22	53:75	10	ffserver_parse_config_stream
arg	53:51	53:57	11	config
water	53:51	0:0	12	config
arg	53:59	53:62	11	cmd
water	53:59	0:0	12	cmd
arg	53:64	53:66	11	&p
op	53:64	0:0	12	&
water	53:65	0:0	12	p
arg	53:68	53:75	11	&stream
op	53:68	0:0	12	&
water	53:69	0:0	12	stream
water	53:76	0:0	10	;
if	54:16	55:25	10	(ret < 0)
cond	54:20	54:26	11	ret < 0
water	54:20	0:0	12	ret
op	54:24	0:0	12	<
water	54:26	0:0	12	0
stmts	55:20	55:25	11	
break	55:20	55:25	12	
if	56:16	60:16	10	(opening)
cond	56:20	56:20	11	opening
water	56:20	0:0	12	opening
stmts	56:29	60:16	11	
water	56:29	0:0	12	{
op	58:20	0:0	12	*
water	58:21	0:0	12	last_stream
op	58:33	0:0	12	=
water	58:35	0:0	12	stream
water	58:41	0:0	12	;
water	59:20	0:0	12	last_stream
op	59:32	0:0	12	=
op	59:34	0:0	12	&
water	59:35	0:0	12	stream
op	59:41	0:0	12	->
water	59:43	0:0	12	next
water	59:47	0:0	12	;
water	60:16	0:0	12	}
water	61:12	0:0	10	}
water	62:8	0:0	8	}
else	62:10	77:8	4
stmts	62:15	77:8	5	
if	62:15	77:8	6	(redirect || !av_strcasecmp (cmd ,"<Redirect" ))
cond	62:19	62:62	7	redirect || !av_strcasecmp (cmd ,"<Redirect" )
water	62:19	0:0	8	redirect
op	62:28	0:0	8	||
op	62:31	0:0	8	!
call	62:32	62:62	8	av_strcasecmp
arg	62:46	62:49	9	cmd
water	62:46	0:0	10	cmd
arg	62:51	62:62	9	"<Redirect"
water	62:51	0:0	10	"<Redirect"
stmts	62:65	77:8	7	
water	62:65	0:0	8	{
decl	63:12	63:58	8	int	opening
op	63:24	0:0	8	=
op	63:26	0:0	8	!
call	63:27	63:57	9	av_strcasecmp
arg	63:41	63:44	10	cmd
water	63:41	0:0	11	cmd
arg	63:46	63:57	10	"<Redirect"
water	63:46	0:0	11	"<Redirect"
if	64:12	65:43	8	(opening && ( stream || feed || redirect ))
cond	64:16	64:54	9	opening && ( stream || feed || redirect )
water	64:16	0:0	10	opening
op	64:24	0:0	10	&&
water	64:27	0:0	10	(
water	64:28	0:0	10	stream
op	64:35	0:0	10	||
water	64:38	0:0	10	feed
op	64:43	0:0	10	||
water	64:46	0:0	10	redirect
water	64:54	0:0	10	)
stmts	65:16	65:43	9	
call	65:16	65:42	10	ERROR
arg	65:22	65:42	11	"Already in a tag\n"
water	65:22	0:0	12	"Already in a tag\n"
water	65:43	0:0	10	;
else	66:12	76:12	8
stmts	66:17	76:12	9	
water	66:17	0:0	10	{
water	67:16	0:0	10	ret
op	67:20	0:0	10	=
call	67:22	68:62	10	ffserver_parse_config_redirect
arg	67:53	67:59	11	config
water	67:53	0:0	12	config
arg	67:61	67:64	11	cmd
water	67:61	0:0	12	cmd
arg	67:66	67:68	11	&p
op	67:66	0:0	12	&
water	67:67	0:0	12	p
arg	68:53	68:62	11	&redirect
op	68:53	0:0	12	&
water	68:54	0:0	12	redirect
water	68:63	0:0	10	;
if	69:16	70:25	10	(ret < 0)
cond	69:20	69:26	11	ret < 0
water	69:20	0:0	12	ret
op	69:24	0:0	12	<
water	69:26	0:0	12	0
stmts	70:20	70:25	11	
break	70:20	70:25	12	
if	71:16	75:16	10	(opening)
cond	71:20	71:20	11	opening
water	71:20	0:0	12	opening
stmts	71:29	75:16	11	
water	71:29	0:0	12	{
op	73:20	0:0	12	*
water	73:21	0:0	12	last_stream
op	73:33	0:0	12	=
water	73:35	0:0	12	redirect
water	73:43	0:0	12	;
water	74:20	0:0	12	last_stream
op	74:32	0:0	12	=
op	74:34	0:0	12	&
water	74:35	0:0	12	redirect
op	74:43	0:0	12	->
water	74:45	0:0	12	next
water	74:49	0:0	12	;
water	75:16	0:0	12	}
water	76:12	0:0	10	}
water	77:8	0:0	8	}
else	77:10	79:8	4
stmts	77:15	79:8	5	
water	77:15	0:0	6	{
call	78:12	78:56	6	ffserver_parse_config_global
arg	78:41	78:47	7	config
water	78:41	0:0	8	config
arg	78:49	78:52	7	cmd
water	78:49	0:0	8	cmd
arg	78:54	78:56	7	&p
op	78:54	0:0	8	&
water	78:55	0:0	8	p
water	78:57	0:0	6	;
water	79:8	0:0	6	}
water	80:4	0:0	4	}
if	81:4	83:63	2	(stream || feed || redirect)
cond	81:8	81:26	3	stream || feed || redirect
water	81:8	0:0	4	stream
op	81:15	0:0	4	||
water	81:18	0:0	4	feed
op	81:23	0:0	4	||
water	81:26	0:0	4	redirect
stmts	82:8	83:63	3	
call	82:8	83:62	4	ERROR
arg	82:14	82:43	5	"Missing closing </%s> tag\n"
water	82:14	0:0	6	"Missing closing </%s> tag\n"
arg	83:14	83:62	5	stream?"Stream":(feed?"Feed":"Redirect")
water	83:14	0:0	6	stream
water	83:21	0:0	6	?
water	83:23	0:0	6	"Stream"
water	83:32	0:0	6	:
water	83:34	0:0	6	(
water	83:35	0:0	6	feed
water	83:40	0:0	6	?
water	83:42	0:0	6	"Feed"
water	83:49	0:0	6	:
water	83:51	0:0	6	"Redirect"
water	83:61	0:0	6	)
water	83:63	0:0	4	;
call	84:4	84:12	2	fclose
arg	84:11	84:12	3	f
water	84:11	0:0	4	f
water	84:13	0:0	2	;
if	85:4	86:18	2	(ret < 0)
cond	85:8	85:14	3	ret < 0
water	85:8	0:0	4	ret
op	85:12	0:0	4	<
water	85:14	0:0	4	0
stmts	86:8	86:18	3	
return	86:8	86:18	4	ret
water	86:15	0:0	5	ret
if	87:4	88:30	2	(config -> errors)
cond	87:8	87:16	3	config -> errors
water	87:8	0:0	4	config
op	87:14	0:0	4	->
water	87:16	0:0	4	errors
stmts	88:8	88:30	3	
return	88:8	88:30	4	AVERROR(EINVAL)
call	88:15	88:29	5	AVERROR
arg	88:23	88:29	6	EINVAL
water	88:23	0:0	7	EINVAL
else	89:4	90:16	2
stmts	90:8	90:16	3	
return	90:8	90:16	4	0
water	90:15	0:0	5	0

func	1:0	97:0	0	int	ff_init_filters
params	1:19	0:0	1	
param	1:20	1:34	2	SwsContext *	c
stmnts	0:0	96:14	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:13	2	int	index
decl	5:4	5:17	2	int	num_ydesc
decl	6:4	6:17	2	int	num_cdesc
decl	7:4	7:78	2	int	num_vdesc
op	7:18	0:0	2	=
call	7:20	7:44	3	isPlanarYUV
arg	7:32	7:44	4	c->dstFormat
water	7:32	0:0	5	c
op	7:33	0:0	5	->
water	7:35	0:0	5	dstFormat
op	7:46	0:0	2	&&
op	7:49	0:0	2	!
call	7:50	7:69	3	isGray
arg	7:57	7:69	4	c->dstFormat
water	7:57	0:0	5	c
op	7:58	0:0	5	->
water	7:60	0:0	5	dstFormat
water	7:71	0:0	2	?
water	7:73	0:0	2	2
water	7:75	0:0	2	:
water	7:77	0:0	2	1
decl	8:4	8:92	2	int	need_lum_conv
op	8:22	0:0	2	=
water	8:24	0:0	2	c
op	8:25	0:0	2	->
water	8:27	0:0	2	lumToYV12
op	8:37	0:0	2	||
water	8:40	0:0	2	c
op	8:41	0:0	2	->
water	8:43	0:0	2	readLumPlanar
op	8:57	0:0	2	||
water	8:60	0:0	2	c
op	8:61	0:0	2	->
water	8:63	0:0	2	alpToYV12
op	8:73	0:0	2	||
water	8:76	0:0	2	c
op	8:77	0:0	2	->
water	8:79	0:0	2	readAlpPlanar
decl	9:4	9:56	2	int	need_chr_conv
op	9:22	0:0	2	=
water	9:24	0:0	2	c
op	9:25	0:0	2	->
water	9:27	0:0	2	chrToYV12
op	9:37	0:0	2	||
water	9:40	0:0	2	c
op	9:41	0:0	2	->
water	9:43	0:0	2	readChrPlanar
decl	10:4	10:41	2	int	need_gamma
op	10:19	0:0	2	=
water	10:21	0:0	2	c
op	10:22	0:0	2	->
water	10:24	0:0	2	is_internal_gamma
decl	11:4	11:22	2	int	srcIdx
water	11:14	0:0	2	,
decl	11:4	11:22	2	int	dstIdx
decl	12:4	12:64	2	int	dst_stride
op	12:19	0:0	2	=
call	12:21	12:63	3	FFALIGN
arg	12:29	12:59	4	c->dstW*sizeof(int16_t)+66
water	12:29	0:0	5	c
op	12:30	0:0	5	->
water	12:32	0:0	5	dstW
op	12:37	0:0	5	*
op	12:39	0:0	5	sizeof
water	12:45	0:0	5	(
water	12:46	0:0	5	int16_t
water	12:53	0:0	5	)
op	12:55	0:0	5	+
water	12:57	0:0	5	66
arg	12:61	12:63	4	16
water	12:61	0:0	5	16
decl	13:4	13:90	2	uint32_t	*pal
op	13:19	0:0	2	=
call	13:21	13:40	3	usePal
arg	13:28	13:40	4	c->srcFormat
water	13:28	0:0	5	c
op	13:29	0:0	5	->
water	13:31	0:0	5	srcFormat
water	13:42	0:0	2	?
water	13:44	0:0	2	c
op	13:45	0:0	2	->
water	13:47	0:0	2	pal_yuv
water	13:55	0:0	2	:
water	13:57	0:0	2	(
water	13:58	0:0	2	uint32_t
op	13:66	0:0	2	*
water	13:67	0:0	2	)
water	13:68	0:0	2	c
op	13:69	0:0	2	->
water	13:71	0:0	2	input_rgb2yuv_table
decl	14:4	14:15	2	int	res
op	14:12	0:0	2	=
water	14:14	0:0	2	0
if	15:4	16:24	2	(c -> dstBpc == 16)
cond	15:8	15:21	3	c -> dstBpc == 16
water	15:8	0:0	4	c
op	15:9	0:0	4	->
water	15:11	0:0	4	dstBpc
op	15:18	0:0	4	==
water	15:21	0:0	4	16
stmts	16:8	16:24	3	
water	16:8	0:0	4	dst_stride
op	16:19	0:0	4	<<=
water	16:23	0:0	4	1
water	16:24	0:0	4	;
water	17:4	0:0	2	num_ydesc
op	17:14	0:0	2	=
water	17:16	0:0	2	need_lum_conv
water	17:30	0:0	2	?
water	17:32	0:0	2	2
water	17:34	0:0	2	:
water	17:36	0:0	2	1
water	17:37	0:0	2	;
water	18:4	0:0	2	num_cdesc
op	18:14	0:0	2	=
water	18:16	0:0	2	need_chr_conv
water	18:30	0:0	2	?
water	18:32	0:0	2	2
water	18:34	0:0	2	:
water	18:36	0:0	2	1
water	18:37	0:0	2	;
water	19:4	0:0	2	c
op	19:5	0:0	2	->
water	19:7	0:0	2	numSlice
op	19:16	0:0	2	=
call	19:18	19:44	2	FFMAX
arg	19:24	19:33	3	num_ydesc
water	19:24	0:0	4	num_ydesc
arg	19:35	19:44	3	num_cdesc
water	19:35	0:0	4	num_cdesc
op	19:46	0:0	2	+
water	19:48	0:0	2	2
water	19:49	0:0	2	;
water	20:4	0:0	2	c
op	20:5	0:0	2	->
water	20:7	0:0	2	numDesc
op	20:15	0:0	2	=
water	20:17	0:0	2	num_ydesc
op	20:27	0:0	2	+
water	20:29	0:0	2	num_cdesc
op	20:39	0:0	2	+
water	20:41	0:0	2	num_vdesc
op	20:51	0:0	2	+
water	20:53	0:0	2	(
water	20:54	0:0	2	need_gamma
water	20:65	0:0	2	?
water	20:67	0:0	2	2
water	20:69	0:0	2	:
water	20:71	0:0	2	0
water	20:72	0:0	2	)
water	20:73	0:0	2	;
water	21:4	0:0	2	c
op	21:5	0:0	2	->
water	21:7	0:0	2	descIndex
op	21:16	0:0	2	[
water	21:17	0:0	2	0
op	21:18	0:0	2	]
op	21:20	0:0	2	=
water	21:22	0:0	2	num_ydesc
op	21:32	0:0	2	+
water	21:34	0:0	2	(
water	21:35	0:0	2	need_gamma
water	21:46	0:0	2	?
water	21:48	0:0	2	1
water	21:50	0:0	2	:
water	21:52	0:0	2	0
water	21:53	0:0	2	)
water	21:54	0:0	2	;
water	22:4	0:0	2	c
op	22:5	0:0	2	->
water	22:7	0:0	2	descIndex
op	22:16	0:0	2	[
water	22:17	0:0	2	1
op	22:18	0:0	2	]
op	22:20	0:0	2	=
water	22:22	0:0	2	num_ydesc
op	22:32	0:0	2	+
water	22:34	0:0	2	num_cdesc
op	22:44	0:0	2	+
water	22:46	0:0	2	(
water	22:47	0:0	2	need_gamma
water	22:58	0:0	2	?
water	22:60	0:0	2	1
water	22:62	0:0	2	:
water	22:64	0:0	2	0
water	22:65	0:0	2	)
water	22:66	0:0	2	;
water	23:4	0:0	2	c
op	23:5	0:0	2	->
water	23:7	0:0	2	desc
op	23:12	0:0	2	=
call	23:14	23:70	2	av_mallocz_array
arg	23:31	23:58	3	sizeof(SwsFilterDescriptor)
op	23:31	0:0	4	sizeof
water	23:37	0:0	4	(
water	23:38	0:0	4	SwsFilterDescriptor
water	23:57	0:0	4	)
arg	23:60	23:70	3	c->numDesc
water	23:60	0:0	4	c
op	23:61	0:0	4	->
water	23:63	0:0	4	numDesc
water	23:71	0:0	2	;
if	24:4	25:30	2	(! c -> desc)
cond	24:8	24:12	3	! c -> desc
op	24:8	0:0	4	!
water	24:9	0:0	4	c
op	24:10	0:0	4	->
water	24:12	0:0	4	desc
stmts	25:8	25:30	3	
return	25:8	25:30	4	AVERROR(ENOMEM)
call	25:15	25:29	5	AVERROR
arg	25:23	25:29	6	ENOMEM
water	25:23	0:0	7	ENOMEM
water	26:4	0:0	2	c
op	26:5	0:0	2	->
water	26:7	0:0	2	slice
op	26:13	0:0	2	=
call	26:15	26:61	2	av_mallocz_array
arg	26:32	26:48	3	sizeof(SwsSlice)
op	26:32	0:0	4	sizeof
water	26:38	0:0	4	(
water	26:39	0:0	4	SwsSlice
water	26:47	0:0	4	)
arg	26:50	26:61	3	c->numSlice
water	26:50	0:0	4	c
op	26:51	0:0	4	->
water	26:53	0:0	4	numSlice
water	26:62	0:0	2	;
water	27:4	0:0	2	res
op	27:8	0:0	2	=
call	27:10	27:114	2	alloc_slice
arg	27:22	27:34	3	&c->slice[0]
op	27:22	0:0	4	&
water	27:23	0:0	4	c
op	27:24	0:0	4	->
water	27:26	0:0	4	slice
op	27:31	0:0	4	[
water	27:32	0:0	4	0
op	27:33	0:0	4	]
arg	27:36	27:48	3	c->srcFormat
water	27:36	0:0	4	c
op	27:37	0:0	4	->
water	27:39	0:0	4	srcFormat
arg	27:50	27:57	3	c->srcH
water	27:50	0:0	4	c
op	27:51	0:0	4	->
water	27:53	0:0	4	srcH
arg	27:59	27:69	3	c->chrSrcH
water	27:59	0:0	4	c
op	27:60	0:0	4	->
water	27:62	0:0	4	chrSrcH
arg	27:71	27:90	3	c->chrSrcHSubSample
water	27:71	0:0	4	c
op	27:72	0:0	4	->
water	27:74	0:0	4	chrSrcHSubSample
arg	27:92	27:111	3	c->chrSrcVSubSample
water	27:92	0:0	4	c
op	27:93	0:0	4	->
water	27:95	0:0	4	chrSrcVSubSample
arg	27:113	27:114	3	0
water	27:113	0:0	4	0
water	27:115	0:0	2	;
if	28:4	28:29	2	(res < 0)
cond	28:8	28:14	3	res < 0
water	28:8	0:0	4	res
op	28:12	0:0	4	<
water	28:14	0:0	4	0
stmts	28:17	28:29	3	
goto	28:17	28:29	4	cleanup
water	28:22	0:0	5	cleanup
for	29:4	34:4	2	(i = 1 ;i < c -> numSlice - 2;++ i)
forinit	29:9	29:14	3	i = 1 ;
water	29:9	0:0	4	i
op	29:11	0:0	4	=
water	29:13	0:0	4	1
water	29:14	0:0	4	;
cond	29:16	29:32	3	i < c -> numSlice - 2
water	29:16	0:0	4	i
op	29:18	0:0	4	<
water	29:20	0:0	4	c
op	29:21	0:0	4	->
water	29:23	0:0	4	numSlice
op	29:31	0:0	4	-
water	29:32	0:0	4	2
forexpr	29:35	29:37	3	++ i
op	29:35	0:0	4	++
water	29:37	0:0	4	i
stmts	29:40	34:4	3	
water	29:40	0:0	4	{
water	30:8	0:0	4	res
op	30:12	0:0	4	=
call	30:14	30:171	4	alloc_slice
arg	30:26	30:38	5	&c->slice[i]
op	30:26	0:0	6	&
water	30:27	0:0	6	c
op	30:28	0:0	6	->
water	30:30	0:0	6	slice
op	30:35	0:0	6	[
water	30:36	0:0	6	i
op	30:37	0:0	6	]
arg	30:40	30:52	5	c->srcFormat
water	30:40	0:0	6	c
op	30:41	0:0	6	->
water	30:43	0:0	6	srcFormat
arg	30:54	30:89	5	c->vLumFilterSize+MAX_LINES_AHEAD
water	30:54	0:0	6	c
op	30:55	0:0	6	->
water	30:57	0:0	6	vLumFilterSize
op	30:72	0:0	6	+
water	30:74	0:0	6	MAX_LINES_AHEAD
arg	30:91	30:126	5	c->vChrFilterSize+MAX_LINES_AHEAD
water	30:91	0:0	6	c
op	30:92	0:0	6	->
water	30:94	0:0	6	vChrFilterSize
op	30:109	0:0	6	+
water	30:111	0:0	6	MAX_LINES_AHEAD
arg	30:128	30:147	5	c->chrSrcHSubSample
water	30:128	0:0	6	c
op	30:129	0:0	6	->
water	30:131	0:0	6	chrSrcHSubSample
arg	30:149	30:168	5	c->chrSrcVSubSample
water	30:149	0:0	6	c
op	30:150	0:0	6	->
water	30:152	0:0	6	chrSrcVSubSample
arg	30:170	30:171	5	0
water	30:170	0:0	6	0
water	30:172	0:0	4	;
if	31:8	31:33	4	(res < 0)
cond	31:12	31:18	5	res < 0
water	31:12	0:0	6	res
op	31:16	0:0	6	<
water	31:18	0:0	6	0
stmts	31:21	31:33	5	
goto	31:21	31:33	6	cleanup
water	31:26	0:0	7	cleanup
water	32:8	0:0	4	res
op	32:12	0:0	4	=
call	32:14	32:74	4	alloc_lines
arg	32:26	32:38	5	&c->slice[i]
op	32:26	0:0	6	&
water	32:27	0:0	6	c
op	32:28	0:0	6	->
water	32:30	0:0	6	slice
op	32:35	0:0	6	[
water	32:36	0:0	6	i
op	32:37	0:0	6	]
arg	32:40	32:65	5	FFALIGN(c->srcW*2+78,16)
call	32:40	32:64	6	FFALIGN
arg	32:48	32:60	7	c->srcW*2+78
water	32:48	0:0	8	c
op	32:49	0:0	8	->
water	32:51	0:0	8	srcW
op	32:55	0:0	8	*
water	32:56	0:0	8	2
op	32:57	0:0	8	+
water	32:58	0:0	8	78
arg	32:62	32:64	7	16
water	32:62	0:0	8	16
arg	32:67	32:74	5	c->srcW
water	32:67	0:0	6	c
op	32:68	0:0	6	->
water	32:70	0:0	6	srcW
water	32:75	0:0	4	;
if	33:8	33:33	4	(res < 0)
cond	33:12	33:18	5	res < 0
water	33:12	0:0	6	res
op	33:16	0:0	6	<
water	33:18	0:0	6	0
stmts	33:21	33:33	5	
goto	33:21	33:33	6	cleanup
water	33:26	0:0	7	cleanup
water	34:4	0:0	4	}
water	36:4	0:0	2	res
op	36:8	0:0	2	=
call	36:10	36:167	2	alloc_slice
arg	36:22	36:34	3	&c->slice[i]
op	36:22	0:0	4	&
water	36:23	0:0	4	c
op	36:24	0:0	4	->
water	36:26	0:0	4	slice
op	36:31	0:0	4	[
water	36:32	0:0	4	i
op	36:33	0:0	4	]
arg	36:36	36:48	3	c->srcFormat
water	36:36	0:0	4	c
op	36:37	0:0	4	->
water	36:39	0:0	4	srcFormat
arg	36:50	36:85	3	c->vLumFilterSize+MAX_LINES_AHEAD
water	36:50	0:0	4	c
op	36:51	0:0	4	->
water	36:53	0:0	4	vLumFilterSize
op	36:68	0:0	4	+
water	36:70	0:0	4	MAX_LINES_AHEAD
arg	36:87	36:122	3	c->vChrFilterSize+MAX_LINES_AHEAD
water	36:87	0:0	4	c
op	36:88	0:0	4	->
water	36:90	0:0	4	vChrFilterSize
op	36:105	0:0	4	+
water	36:107	0:0	4	MAX_LINES_AHEAD
arg	36:124	36:143	3	c->chrDstHSubSample
water	36:124	0:0	4	c
op	36:125	0:0	4	->
water	36:127	0:0	4	chrDstHSubSample
arg	36:145	36:164	3	c->chrDstVSubSample
water	36:145	0:0	4	c
op	36:146	0:0	4	->
water	36:148	0:0	4	chrDstVSubSample
arg	36:166	36:167	3	1
water	36:166	0:0	4	1
water	36:168	0:0	2	;
if	37:4	37:29	2	(res < 0)
cond	37:8	37:14	3	res < 0
water	37:8	0:0	4	res
op	37:12	0:0	4	<
water	37:14	0:0	4	0
stmts	37:17	37:29	3	
goto	37:17	37:29	4	cleanup
water	37:22	0:0	5	cleanup
water	38:4	0:0	2	res
op	38:8	0:0	2	=
call	38:10	38:55	2	alloc_lines
arg	38:22	38:34	3	&c->slice[i]
op	38:22	0:0	4	&
water	38:23	0:0	4	c
op	38:24	0:0	4	->
water	38:26	0:0	4	slice
op	38:31	0:0	4	[
water	38:32	0:0	4	i
op	38:33	0:0	4	]
arg	38:36	38:46	3	dst_stride
water	38:36	0:0	4	dst_stride
arg	38:48	38:55	3	c->dstW
water	38:48	0:0	4	c
op	38:49	0:0	4	->
water	38:51	0:0	4	dstW
water	38:56	0:0	2	;
if	39:4	39:29	2	(res < 0)
cond	39:8	39:14	3	res < 0
water	39:8	0:0	4	res
op	39:12	0:0	4	<
water	39:14	0:0	4	0
stmts	39:17	39:29	3	
goto	39:17	39:29	4	cleanup
water	39:22	0:0	5	cleanup
call	40:4	40:58	2	fill_ones
arg	40:14	40:26	3	&c->slice[i]
op	40:14	0:0	4	&
water	40:15	0:0	4	c
op	40:16	0:0	4	->
water	40:18	0:0	4	slice
op	40:23	0:0	4	[
water	40:24	0:0	4	i
op	40:25	0:0	4	]
arg	40:28	40:41	3	dst_stride>>1
water	40:28	0:0	4	dst_stride
op	40:38	0:0	4	>>
water	40:40	0:0	4	1
arg	40:43	40:58	3	c->dstBpc==16
water	40:43	0:0	4	c
op	40:44	0:0	4	->
water	40:46	0:0	4	dstBpc
op	40:53	0:0	4	==
water	40:56	0:0	4	16
water	40:59	0:0	2	;
op	42:4	0:0	2	++
water	42:6	0:0	2	i
water	42:7	0:0	2	;
water	43:4	0:0	2	res
op	43:8	0:0	2	=
call	43:10	43:114	2	alloc_slice
arg	43:22	43:34	3	&c->slice[i]
op	43:22	0:0	4	&
water	43:23	0:0	4	c
op	43:24	0:0	4	->
water	43:26	0:0	4	slice
op	43:31	0:0	4	[
water	43:32	0:0	4	i
op	43:33	0:0	4	]
arg	43:36	43:48	3	c->dstFormat
water	43:36	0:0	4	c
op	43:37	0:0	4	->
water	43:39	0:0	4	dstFormat
arg	43:50	43:57	3	c->dstH
water	43:50	0:0	4	c
op	43:51	0:0	4	->
water	43:53	0:0	4	dstH
arg	43:59	43:69	3	c->chrDstH
water	43:59	0:0	4	c
op	43:60	0:0	4	->
water	43:62	0:0	4	chrDstH
arg	43:71	43:90	3	c->chrDstHSubSample
water	43:71	0:0	4	c
op	43:72	0:0	4	->
water	43:74	0:0	4	chrDstHSubSample
arg	43:92	43:111	3	c->chrDstVSubSample
water	43:92	0:0	4	c
op	43:93	0:0	4	->
water	43:95	0:0	4	chrDstVSubSample
arg	43:113	43:114	3	0
water	43:113	0:0	4	0
water	43:115	0:0	2	;
if	44:4	44:29	2	(res < 0)
cond	44:8	44:14	3	res < 0
water	44:8	0:0	4	res
op	44:12	0:0	4	<
water	44:14	0:0	4	0
stmts	44:17	44:29	3	
goto	44:17	44:29	4	cleanup
water	44:22	0:0	5	cleanup
water	45:4	0:0	2	index
op	45:10	0:0	2	=
water	45:12	0:0	2	0
water	45:13	0:0	2	;
water	46:4	0:0	2	srcIdx
op	46:11	0:0	2	=
water	46:13	0:0	2	0
water	46:14	0:0	2	;
water	47:4	0:0	2	dstIdx
op	47:11	0:0	2	=
water	47:13	0:0	2	1
water	47:14	0:0	2	;
if	48:4	52:4	2	(need_gamma)
cond	48:8	48:8	3	need_gamma
water	48:8	0:0	4	need_gamma
stmts	48:20	52:4	3	
water	48:20	0:0	4	{
water	49:8	0:0	4	res
op	49:12	0:0	4	=
call	49:14	49:84	4	ff_init_gamma_convert
arg	49:36	49:51	5	c->desc+index
water	49:36	0:0	6	c
op	49:37	0:0	6	->
water	49:39	0:0	6	desc
op	49:44	0:0	6	+
water	49:46	0:0	6	index
arg	49:53	49:70	5	c->slice+srcIdx
water	49:53	0:0	6	c
op	49:54	0:0	6	->
water	49:56	0:0	6	slice
op	49:62	0:0	6	+
water	49:64	0:0	6	srcIdx
arg	49:72	49:84	5	c->inv_gamma
water	49:72	0:0	6	c
op	49:73	0:0	6	->
water	49:75	0:0	6	inv_gamma
water	49:85	0:0	4	;
if	50:8	50:33	4	(res < 0)
cond	50:12	50:18	5	res < 0
water	50:12	0:0	6	res
op	50:16	0:0	6	<
water	50:18	0:0	6	0
stmts	50:21	50:33	5	
goto	50:21	50:33	6	cleanup
water	50:26	0:0	7	cleanup
op	51:8	0:0	4	++
water	51:10	0:0	4	index
water	51:15	0:0	4	;
water	52:4	0:0	4	}
if	53:4	59:4	2	(need_lum_conv)
cond	53:8	53:8	3	need_lum_conv
water	53:8	0:0	4	need_lum_conv
stmts	53:23	59:4	3	
water	53:23	0:0	4	{
water	54:8	0:0	4	res
op	54:12	0:0	4	=
call	54:14	54:97	4	ff_init_desc_fmt_convert
arg	54:39	54:54	5	&c->desc[index]
op	54:39	0:0	6	&
water	54:40	0:0	6	c
op	54:41	0:0	6	->
water	54:43	0:0	6	desc
op	54:47	0:0	6	[
water	54:48	0:0	6	index
op	54:53	0:0	6	]
arg	54:56	54:73	5	&c->slice[srcIdx]
op	54:56	0:0	6	&
water	54:57	0:0	6	c
op	54:58	0:0	6	->
water	54:60	0:0	6	slice
op	54:65	0:0	6	[
water	54:66	0:0	6	srcIdx
op	54:72	0:0	6	]
arg	54:75	54:92	5	&c->slice[dstIdx]
op	54:75	0:0	6	&
water	54:76	0:0	6	c
op	54:77	0:0	6	->
water	54:79	0:0	6	slice
op	54:84	0:0	6	[
water	54:85	0:0	6	dstIdx
op	54:91	0:0	6	]
arg	54:94	54:97	5	pal
water	54:94	0:0	6	pal
water	54:98	0:0	4	;
if	55:8	55:33	4	(res < 0)
cond	55:12	55:18	5	res < 0
water	55:12	0:0	6	res
op	55:16	0:0	6	<
water	55:18	0:0	6	0
stmts	55:21	55:33	5	
goto	55:21	55:33	6	cleanup
water	55:26	0:0	7	cleanup
water	56:8	0:0	4	c
op	56:9	0:0	4	->
water	56:11	0:0	4	desc
op	56:15	0:0	4	[
water	56:16	0:0	4	index
op	56:21	0:0	4	]
op	56:22	0:0	4	.
water	56:23	0:0	4	alpha
op	56:29	0:0	4	=
water	56:31	0:0	4	c
op	56:32	0:0	4	->
water	56:34	0:0	4	alpPixBuf
op	56:44	0:0	4	!=
water	56:47	0:0	4	0
water	56:48	0:0	4	;
op	57:8	0:0	4	++
water	57:10	0:0	4	index
water	57:15	0:0	4	;
water	58:8	0:0	4	srcIdx
op	58:15	0:0	4	=
water	58:17	0:0	4	dstIdx
water	58:23	0:0	4	;
water	59:4	0:0	4	}
water	60:4	0:0	2	dstIdx
op	60:11	0:0	2	=
call	60:13	60:39	2	FFMAX
arg	60:19	60:28	3	num_ydesc
water	60:19	0:0	4	num_ydesc
arg	60:30	60:39	3	num_cdesc
water	60:30	0:0	4	num_cdesc
water	60:40	0:0	2	;
water	61:4	0:0	2	res
op	61:8	0:0	2	=
call	61:10	61:147	2	ff_init_desc_hscale
arg	61:30	61:45	3	&c->desc[index]
op	61:30	0:0	4	&
water	61:31	0:0	4	c
op	61:32	0:0	4	->
water	61:34	0:0	4	desc
op	61:38	0:0	4	[
water	61:39	0:0	4	index
op	61:44	0:0	4	]
arg	61:47	61:64	3	&c->slice[srcIdx]
op	61:47	0:0	4	&
water	61:48	0:0	4	c
op	61:49	0:0	4	->
water	61:51	0:0	4	slice
op	61:56	0:0	4	[
water	61:57	0:0	4	srcIdx
op	61:63	0:0	4	]
arg	61:66	61:83	3	&c->slice[dstIdx]
op	61:66	0:0	4	&
water	61:67	0:0	4	c
op	61:68	0:0	4	->
water	61:70	0:0	4	slice
op	61:75	0:0	4	[
water	61:76	0:0	4	dstIdx
op	61:82	0:0	4	]
arg	61:85	61:98	3	c->hLumFilter
water	61:85	0:0	4	c
op	61:86	0:0	4	->
water	61:88	0:0	4	hLumFilter
arg	61:100	61:116	3	c->hLumFilterPos
water	61:100	0:0	4	c
op	61:101	0:0	4	->
water	61:103	0:0	4	hLumFilterPos
arg	61:118	61:135	3	c->hLumFilterSize
water	61:118	0:0	4	c
op	61:119	0:0	4	->
water	61:121	0:0	4	hLumFilterSize
arg	61:137	61:147	3	c->lumXInc
water	61:137	0:0	4	c
op	61:138	0:0	4	->
water	61:140	0:0	4	lumXInc
water	61:148	0:0	2	;
if	62:4	62:29	2	(res < 0)
cond	62:8	62:14	3	res < 0
water	62:8	0:0	4	res
op	62:12	0:0	4	<
water	62:14	0:0	4	0
stmts	62:17	62:29	3	
goto	62:17	62:29	4	cleanup
water	62:22	0:0	5	cleanup
water	63:4	0:0	2	c
op	63:5	0:0	2	->
water	63:7	0:0	2	desc
op	63:11	0:0	2	[
water	63:12	0:0	2	index
op	63:17	0:0	2	]
op	63:18	0:0	2	.
water	63:19	0:0	2	alpha
op	63:25	0:0	2	=
water	63:27	0:0	2	c
op	63:28	0:0	2	->
water	63:30	0:0	2	alpPixBuf
op	63:40	0:0	2	!=
water	63:43	0:0	2	0
water	63:44	0:0	2	;
op	64:4	0:0	2	++
water	64:6	0:0	2	index
water	64:11	0:0	2	;
water	65:4	0:0	2	{
water	66:8	0:0	2	srcIdx
op	66:15	0:0	2	=
water	66:17	0:0	2	0
water	66:18	0:0	2	;
water	67:8	0:0	2	dstIdx
op	67:15	0:0	2	=
water	67:17	0:0	2	1
water	67:18	0:0	2	;
if	68:8	73:8	2	(need_chr_conv)
cond	68:12	68:12	3	need_chr_conv
water	68:12	0:0	4	need_chr_conv
stmts	68:27	73:8	3	
water	68:27	0:0	4	{
water	69:12	0:0	4	res
op	69:16	0:0	4	=
call	69:18	69:102	4	ff_init_desc_cfmt_convert
arg	69:44	69:59	5	&c->desc[index]
op	69:44	0:0	6	&
water	69:45	0:0	6	c
op	69:46	0:0	6	->
water	69:48	0:0	6	desc
op	69:52	0:0	6	[
water	69:53	0:0	6	index
op	69:58	0:0	6	]
arg	69:61	69:78	5	&c->slice[srcIdx]
op	69:61	0:0	6	&
water	69:62	0:0	6	c
op	69:63	0:0	6	->
water	69:65	0:0	6	slice
op	69:70	0:0	6	[
water	69:71	0:0	6	srcIdx
op	69:77	0:0	6	]
arg	69:80	69:97	5	&c->slice[dstIdx]
op	69:80	0:0	6	&
water	69:81	0:0	6	c
op	69:82	0:0	6	->
water	69:84	0:0	6	slice
op	69:89	0:0	6	[
water	69:90	0:0	6	dstIdx
op	69:96	0:0	6	]
arg	69:99	69:102	5	pal
water	69:99	0:0	6	pal
water	69:103	0:0	4	;
if	70:12	70:37	4	(res < 0)
cond	70:16	70:22	5	res < 0
water	70:16	0:0	6	res
op	70:20	0:0	6	<
water	70:22	0:0	6	0
stmts	70:25	70:37	5	
goto	70:25	70:37	6	cleanup
water	70:30	0:0	7	cleanup
op	71:12	0:0	4	++
water	71:14	0:0	4	index
water	71:19	0:0	4	;
water	72:12	0:0	4	srcIdx
op	72:19	0:0	4	=
water	72:21	0:0	4	dstIdx
water	72:27	0:0	4	;
water	73:8	0:0	4	}
water	74:8	0:0	2	dstIdx
op	74:15	0:0	2	=
call	74:17	74:43	2	FFMAX
arg	74:23	74:32	3	num_ydesc
water	74:23	0:0	4	num_ydesc
arg	74:34	74:43	3	num_cdesc
water	74:34	0:0	4	num_cdesc
water	74:44	0:0	2	;
if	75:8	76:157	2	(c -> needs_hcscale)
cond	75:12	75:15	3	c -> needs_hcscale
water	75:12	0:0	4	c
op	75:13	0:0	4	->
water	75:15	0:0	4	needs_hcscale
stmts	76:12	76:157	3	
water	76:12	0:0	4	res
op	76:16	0:0	4	=
call	76:18	76:156	4	ff_init_desc_chscale
arg	76:39	76:54	5	&c->desc[index]
op	76:39	0:0	6	&
water	76:40	0:0	6	c
op	76:41	0:0	6	->
water	76:43	0:0	6	desc
op	76:47	0:0	6	[
water	76:48	0:0	6	index
op	76:53	0:0	6	]
arg	76:56	76:73	5	&c->slice[srcIdx]
op	76:56	0:0	6	&
water	76:57	0:0	6	c
op	76:58	0:0	6	->
water	76:60	0:0	6	slice
op	76:65	0:0	6	[
water	76:66	0:0	6	srcIdx
op	76:72	0:0	6	]
arg	76:75	76:92	5	&c->slice[dstIdx]
op	76:75	0:0	6	&
water	76:76	0:0	6	c
op	76:77	0:0	6	->
water	76:79	0:0	6	slice
op	76:84	0:0	6	[
water	76:85	0:0	6	dstIdx
op	76:91	0:0	6	]
arg	76:94	76:107	5	c->hChrFilter
water	76:94	0:0	6	c
op	76:95	0:0	6	->
water	76:97	0:0	6	hChrFilter
arg	76:109	76:125	5	c->hChrFilterPos
water	76:109	0:0	6	c
op	76:110	0:0	6	->
water	76:112	0:0	6	hChrFilterPos
arg	76:127	76:144	5	c->hChrFilterSize
water	76:127	0:0	6	c
op	76:128	0:0	6	->
water	76:130	0:0	6	hChrFilterSize
arg	76:146	76:156	5	c->chrXInc
water	76:146	0:0	6	c
op	76:147	0:0	6	->
water	76:149	0:0	6	chrXInc
water	76:157	0:0	4	;
else	77:8	78:92	2
stmts	78:12	78:92	3	
water	78:12	0:0	4	res
op	78:16	0:0	4	=
call	78:18	78:91	4	ff_init_desc_no_chr
arg	78:38	78:53	5	&c->desc[index]
op	78:38	0:0	6	&
water	78:39	0:0	6	c
op	78:40	0:0	6	->
water	78:42	0:0	6	desc
op	78:46	0:0	6	[
water	78:47	0:0	6	index
op	78:52	0:0	6	]
arg	78:55	78:72	5	&c->slice[srcIdx]
op	78:55	0:0	6	&
water	78:56	0:0	6	c
op	78:57	0:0	6	->
water	78:59	0:0	6	slice
op	78:64	0:0	6	[
water	78:65	0:0	6	srcIdx
op	78:71	0:0	6	]
arg	78:74	78:91	5	&c->slice[dstIdx]
op	78:74	0:0	6	&
water	78:75	0:0	6	c
op	78:76	0:0	6	->
water	78:78	0:0	6	slice
op	78:83	0:0	6	[
water	78:84	0:0	6	dstIdx
op	78:90	0:0	6	]
water	78:92	0:0	4	;
if	79:8	79:33	2	(res < 0)
cond	79:12	79:18	3	res < 0
water	79:12	0:0	4	res
op	79:16	0:0	4	<
water	79:18	0:0	4	0
stmts	79:21	79:33	3	
goto	79:21	79:33	4	cleanup
water	79:26	0:0	5	cleanup
water	80:4	0:0	2	}
op	81:4	0:0	2	++
water	81:6	0:0	2	index
water	81:11	0:0	2	;
water	82:4	0:0	2	{
water	83:8	0:0	2	srcIdx
op	83:15	0:0	2	=
water	83:17	0:0	2	c
op	83:18	0:0	2	->
water	83:20	0:0	2	numSlice
op	83:29	0:0	2	-
water	83:31	0:0	2	2
water	83:32	0:0	2	;
water	84:8	0:0	2	dstIdx
op	84:15	0:0	2	=
water	84:17	0:0	2	c
op	84:18	0:0	2	->
water	84:20	0:0	2	numSlice
op	84:29	0:0	2	-
water	84:31	0:0	2	1
water	84:32	0:0	2	;
water	85:8	0:0	2	res
op	85:12	0:0	2	=
call	85:14	85:85	2	ff_init_vscale
arg	85:29	85:30	3	c
water	85:29	0:0	4	c
arg	85:32	85:47	3	c->desc+index
water	85:32	0:0	4	c
op	85:33	0:0	4	->
water	85:35	0:0	4	desc
op	85:40	0:0	4	+
water	85:42	0:0	4	index
arg	85:49	85:66	3	c->slice+srcIdx
water	85:49	0:0	4	c
op	85:50	0:0	4	->
water	85:52	0:0	4	slice
op	85:58	0:0	4	+
water	85:60	0:0	4	srcIdx
arg	85:68	85:85	3	c->slice+dstIdx
water	85:68	0:0	4	c
op	85:69	0:0	4	->
water	85:71	0:0	4	slice
op	85:77	0:0	4	+
water	85:79	0:0	4	dstIdx
water	85:86	0:0	2	;
if	86:8	86:33	2	(res < 0)
cond	86:12	86:18	3	res < 0
water	86:12	0:0	4	res
op	86:16	0:0	4	<
water	86:18	0:0	4	0
stmts	86:21	86:33	3	
goto	86:21	86:33	4	cleanup
water	86:26	0:0	5	cleanup
water	87:4	0:0	2	}
op	88:4	0:0	2	++
water	88:6	0:0	2	index
water	88:11	0:0	2	;
if	89:4	92:4	2	(need_gamma)
cond	89:8	89:8	3	need_gamma
water	89:8	0:0	4	need_gamma
stmts	89:20	92:4	3	
water	89:20	0:0	4	{
water	90:8	0:0	4	res
op	90:12	0:0	4	=
call	90:14	90:80	4	ff_init_gamma_convert
arg	90:36	90:51	5	c->desc+index
water	90:36	0:0	6	c
op	90:37	0:0	6	->
water	90:39	0:0	6	desc
op	90:44	0:0	6	+
water	90:46	0:0	6	index
arg	90:53	90:70	5	c->slice+dstIdx
water	90:53	0:0	6	c
op	90:54	0:0	6	->
water	90:56	0:0	6	slice
op	90:62	0:0	6	+
water	90:64	0:0	6	dstIdx
arg	90:72	90:80	5	c->gamma
water	90:72	0:0	6	c
op	90:73	0:0	6	->
water	90:75	0:0	6	gamma
water	90:81	0:0	4	;
if	91:8	91:33	4	(res < 0)
cond	91:12	91:18	5	res < 0
water	91:12	0:0	6	res
op	91:16	0:0	6	<
water	91:18	0:0	6	0
stmts	91:21	91:33	5	
goto	91:21	91:33	6	cleanup
water	91:26	0:0	7	cleanup
water	92:4	0:0	4	}
return	93:4	93:12	2	0
water	93:11	0:0	3	0
label	94:0	94:7	2	cleanup :
call	95:4	95:21	2	ff_free_filters
arg	95:20	95:21	3	c
water	95:20	0:0	4	c
water	95:22	0:0	2	;
return	96:4	96:14	2	res
water	96:11	0:0	3	res

func	1:0	21:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:58	2	AVFrame *	buf
stmnts	0:0	20:14	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:18	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:18	2	int	ret
op	4:15	0:0	2	=
water	4:17	0:0	2	0
for	5:4	18:4	2	(i = 0 ;i < ctx -> nb_outputs;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:25	3	i < ctx -> nb_outputs
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	ctx
op	5:23	0:0	4	->
water	5:25	0:0	4	nb_outputs
forexpr	5:37	5:38	3	i ++
water	5:37	0:0	4	i
op	5:38	0:0	4	++
stmts	5:42	18:4	3	
water	5:42	0:0	4	{
decl	6:8	6:46	4	AVFrame	*buf_out
op	6:25	0:0	4	=
call	6:27	6:45	5	av_frame_clone
arg	6:42	6:45	6	buf
water	6:42	0:0	7	buf
if	7:8	10:8	4	(! buf_out)
cond	7:12	7:13	5	! buf_out
op	7:12	0:0	6	!
water	7:13	0:0	6	buf_out
stmts	7:22	10:8	5	
water	7:22	0:0	6	{
water	8:12	0:0	6	ret
op	8:16	0:0	6	=
call	8:18	8:32	6	AVERROR
arg	8:26	8:32	7	ENOMEM
water	8:26	0:0	8	ENOMEM
water	8:33	0:0	6	;
break	9:12	9:17	6	
water	10:8	0:0	6	}
water	11:8	0:0	4	buf_out
op	11:15	0:0	4	->
water	11:17	0:0	4	data
op	11:21	0:0	4	[
water	11:22	0:0	4	0
op	11:23	0:0	4	]
op	11:25	0:0	4	=
water	11:27	0:0	4	buf_out
op	11:34	0:0	4	->
water	11:36	0:0	4	extended_data
op	11:49	0:0	4	[
water	11:50	0:0	4	0
op	11:51	0:0	4	]
op	11:53	0:0	4	=
water	11:55	0:0	4	buf_out
op	11:62	0:0	4	->
water	11:64	0:0	4	extended_data
op	11:77	0:0	4	[
water	11:78	0:0	4	i
op	11:79	0:0	4	]
water	11:80	0:0	4	;
water	12:8	0:0	4	buf_out
op	12:15	0:0	4	->
water	12:17	0:0	4	channel_layout
op	12:32	0:0	4	=
call	13:12	13:68	4	av_channel_layout_extract_channel
arg	13:46	13:65	5	buf->channel_layout
water	13:46	0:0	6	buf
op	13:49	0:0	6	->
water	13:51	0:0	6	channel_layout
arg	13:67	13:68	5	i
water	13:67	0:0	6	i
water	13:69	0:0	4	;
call	14:8	14:40	4	av_frame_set_channels
arg	14:30	14:37	5	buf_out
water	14:30	0:0	6	buf_out
arg	14:39	14:40	5	1
water	14:39	0:0	6	1
water	14:41	0:0	4	;
water	15:8	0:0	4	ret
op	15:12	0:0	4	=
call	15:14	15:54	4	ff_filter_frame
arg	15:30	15:45	5	ctx->outputs[i]
water	15:30	0:0	6	ctx
op	15:33	0:0	6	->
water	15:35	0:0	6	outputs
op	15:42	0:0	6	[
water	15:43	0:0	6	i
op	15:44	0:0	6	]
arg	15:47	15:54	5	buf_out
water	15:47	0:0	6	buf_out
water	15:55	0:0	4	;
if	16:8	17:17	4	(ret < 0)
cond	16:12	16:18	5	ret < 0
water	16:12	0:0	6	ret
op	16:16	0:0	6	<
water	16:18	0:0	6	0
stmts	17:12	17:17	5	
break	17:12	17:17	6	
water	18:4	0:0	4	}
call	19:4	19:22	2	av_frame_free
arg	19:18	19:22	3	&buf
op	19:18	0:0	4	&
water	19:19	0:0	4	buf
water	19:23	0:0	2	;
return	20:4	20:14	2	ret
water	20:11	0:0	3	ret

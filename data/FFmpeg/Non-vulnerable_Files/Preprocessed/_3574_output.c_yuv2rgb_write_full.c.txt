func	2:24	134:0	0	void	yuv2rgb_write_full
params	2:47	0:0	1	
param	2:48	2:61	2	SwsContext *	c
param	3:4	3:17	2	uint8_t *	dest
param	3:19	3:24	2	int	i
param	3:26	3:31	2	int	Y
param	3:33	3:38	2	int	A
param	3:40	3:45	2	int	U
param	3:47	3:52	2	int	V
param	4:4	4:9	2	int	y
param	4:11	4:36	2	enum AVPixelFormat	target
param	4:38	4:50	2	int	hasAlpha
param	4:52	4:62	2	int	err[4]
stmnts	0:0	133:4	1	
decl	6:4	6:15	2	int	R
water	6:9	0:0	2	,
decl	6:4	6:15	2	int	G
water	6:12	0:0	2	,
decl	6:4	6:15	2	int	B
decl	7:4	7:71	2	int	isrgb8
op	7:15	0:0	2	=
water	7:17	0:0	2	target
op	7:24	0:0	2	==
water	7:27	0:0	2	AV_PIX_FMT_BGR8
op	7:43	0:0	2	||
water	7:46	0:0	2	target
op	7:53	0:0	2	==
water	7:56	0:0	2	AV_PIX_FMT_RGB8
water	8:4	0:0	2	Y
op	8:6	0:0	2	-=
water	8:9	0:0	2	c
op	8:10	0:0	2	->
water	8:12	0:0	2	yuv2rgb_y_offset
water	8:28	0:0	2	;
water	9:4	0:0	2	Y
op	9:6	0:0	2	*=
water	9:9	0:0	2	c
op	9:10	0:0	2	->
water	9:12	0:0	2	yuv2rgb_y_coeff
water	9:27	0:0	2	;
water	10:4	0:0	2	Y
op	10:6	0:0	2	+=
water	10:9	0:0	2	1
op	10:11	0:0	2	<<
water	10:14	0:0	2	21
water	10:16	0:0	2	;
water	11:4	0:0	2	R
op	11:6	0:0	2	=
water	11:8	0:0	2	Y
op	11:10	0:0	2	+
water	11:12	0:0	2	V
op	11:13	0:0	2	*
water	11:14	0:0	2	c
op	11:15	0:0	2	->
water	11:17	0:0	2	yuv2rgb_v2r_coeff
water	11:34	0:0	2	;
water	12:4	0:0	2	G
op	12:6	0:0	2	=
water	12:8	0:0	2	Y
op	12:10	0:0	2	+
water	12:12	0:0	2	V
op	12:13	0:0	2	*
water	12:14	0:0	2	c
op	12:15	0:0	2	->
water	12:17	0:0	2	yuv2rgb_v2g_coeff
op	12:35	0:0	2	+
water	12:37	0:0	2	U
op	12:38	0:0	2	*
water	12:39	0:0	2	c
op	12:40	0:0	2	->
water	12:42	0:0	2	yuv2rgb_u2g_coeff
water	12:59	0:0	2	;
water	13:4	0:0	2	B
op	13:6	0:0	2	=
water	13:8	0:0	2	Y
op	13:10	0:0	2	+
water	13:37	0:0	2	U
op	13:38	0:0	2	*
water	13:39	0:0	2	c
op	13:40	0:0	2	->
water	13:42	0:0	2	yuv2rgb_u2b_coeff
water	13:59	0:0	2	;
if	14:4	18:4	2	(( R | G | B ) & 0 xC0000000)
cond	14:8	14:23	3	( R | G | B ) & 0 xC0000000
water	14:8	0:0	4	(
water	14:9	0:0	4	R
op	14:11	0:0	4	|
water	14:13	0:0	4	G
op	14:15	0:0	4	|
water	14:17	0:0	4	B
water	14:18	0:0	4	)
op	14:20	0:0	4	&
water	14:22	0:0	4	0
water	14:23	0:0	4	xC0000000
stmts	14:34	18:4	3	
water	14:34	0:0	4	{
water	15:8	0:0	4	R
op	15:10	0:0	4	=
call	15:12	15:32	4	av_clip_uintp2
arg	15:27	15:28	5	R
water	15:27	0:0	6	R
arg	15:30	15:32	5	30
water	15:30	0:0	6	30
water	15:33	0:0	4	;
water	16:8	0:0	4	G
op	16:10	0:0	4	=
call	16:12	16:32	4	av_clip_uintp2
arg	16:27	16:28	5	G
water	16:27	0:0	6	G
arg	16:30	16:32	5	30
water	16:30	0:0	6	30
water	16:33	0:0	4	;
water	17:8	0:0	4	B
op	17:10	0:0	4	=
call	17:12	17:32	4	av_clip_uintp2
arg	17:27	17:28	5	B
water	17:27	0:0	6	B
arg	17:30	17:32	5	30
water	17:30	0:0	6	30
water	17:33	0:0	4	;
water	18:4	0:0	4	}
switch	19:4	133:4	2	(target)
cond	19:11	19:11	3	target
water	19:11	0:0	4	target
stmts	19:19	133:4	3	
water	19:19	0:0	4	{
label	20:4	20:24	4	case AV_PIX_FMT_ARGB :
water	21:8	0:0	4	dest
op	21:12	0:0	4	[
water	21:13	0:0	4	0
op	21:14	0:0	4	]
op	21:16	0:0	4	=
water	21:18	0:0	4	hasAlpha
water	21:27	0:0	4	?
water	21:29	0:0	4	A
water	21:31	0:0	4	:
water	21:33	0:0	4	255
water	21:36	0:0	4	;
water	22:8	0:0	4	dest
op	22:12	0:0	4	[
water	22:13	0:0	4	1
op	22:14	0:0	4	]
op	22:16	0:0	4	=
water	22:18	0:0	4	R
op	22:20	0:0	4	>>
water	22:23	0:0	4	22
water	22:25	0:0	4	;
water	23:8	0:0	4	dest
op	23:12	0:0	4	[
water	23:13	0:0	4	2
op	23:14	0:0	4	]
op	23:16	0:0	4	=
water	23:18	0:0	4	G
op	23:20	0:0	4	>>
water	23:23	0:0	4	22
water	23:25	0:0	4	;
water	24:8	0:0	4	dest
op	24:12	0:0	4	[
water	24:13	0:0	4	3
op	24:14	0:0	4	]
op	24:16	0:0	4	=
water	24:18	0:0	4	B
op	24:20	0:0	4	>>
water	24:23	0:0	4	22
water	24:25	0:0	4	;
break	25:8	25:13	4	
label	26:4	26:25	4	case AV_PIX_FMT_RGB24 :
water	27:8	0:0	4	dest
op	27:12	0:0	4	[
water	27:13	0:0	4	0
op	27:14	0:0	4	]
op	27:16	0:0	4	=
water	27:18	0:0	4	R
op	27:20	0:0	4	>>
water	27:23	0:0	4	22
water	27:25	0:0	4	;
water	28:8	0:0	4	dest
op	28:12	0:0	4	[
water	28:13	0:0	4	1
op	28:14	0:0	4	]
op	28:16	0:0	4	=
water	28:18	0:0	4	G
op	28:20	0:0	4	>>
water	28:23	0:0	4	22
water	28:25	0:0	4	;
water	29:8	0:0	4	dest
op	29:12	0:0	4	[
water	29:13	0:0	4	2
op	29:14	0:0	4	]
op	29:16	0:0	4	=
water	29:18	0:0	4	B
op	29:20	0:0	4	>>
water	29:23	0:0	4	22
water	29:25	0:0	4	;
break	30:8	30:13	4	
label	31:4	31:24	4	case AV_PIX_FMT_RGBA :
water	32:8	0:0	4	dest
op	32:12	0:0	4	[
water	32:13	0:0	4	0
op	32:14	0:0	4	]
op	32:16	0:0	4	=
water	32:18	0:0	4	R
op	32:20	0:0	4	>>
water	32:23	0:0	4	22
water	32:25	0:0	4	;
water	33:8	0:0	4	dest
op	33:12	0:0	4	[
water	33:13	0:0	4	1
op	33:14	0:0	4	]
op	33:16	0:0	4	=
water	33:18	0:0	4	G
op	33:20	0:0	4	>>
water	33:23	0:0	4	22
water	33:25	0:0	4	;
water	34:8	0:0	4	dest
op	34:12	0:0	4	[
water	34:13	0:0	4	2
op	34:14	0:0	4	]
op	34:16	0:0	4	=
water	34:18	0:0	4	B
op	34:20	0:0	4	>>
water	34:23	0:0	4	22
water	34:25	0:0	4	;
water	35:8	0:0	4	dest
op	35:12	0:0	4	[
water	35:13	0:0	4	3
op	35:14	0:0	4	]
op	35:16	0:0	4	=
water	35:18	0:0	4	hasAlpha
water	35:27	0:0	4	?
water	35:29	0:0	4	A
water	35:31	0:0	4	:
water	35:33	0:0	4	255
water	35:36	0:0	4	;
break	36:8	36:13	4	
label	37:4	37:24	4	case AV_PIX_FMT_ABGR :
water	38:8	0:0	4	dest
op	38:12	0:0	4	[
water	38:13	0:0	4	0
op	38:14	0:0	4	]
op	38:16	0:0	4	=
water	38:18	0:0	4	hasAlpha
water	38:27	0:0	4	?
water	38:29	0:0	4	A
water	38:31	0:0	4	:
water	38:33	0:0	4	255
water	38:36	0:0	4	;
water	39:8	0:0	4	dest
op	39:12	0:0	4	[
water	39:13	0:0	4	1
op	39:14	0:0	4	]
op	39:16	0:0	4	=
water	39:18	0:0	4	B
op	39:20	0:0	4	>>
water	39:23	0:0	4	22
water	39:25	0:0	4	;
water	40:8	0:0	4	dest
op	40:12	0:0	4	[
water	40:13	0:0	4	2
op	40:14	0:0	4	]
op	40:16	0:0	4	=
water	40:18	0:0	4	G
op	40:20	0:0	4	>>
water	40:23	0:0	4	22
water	40:25	0:0	4	;
water	41:8	0:0	4	dest
op	41:12	0:0	4	[
water	41:13	0:0	4	3
op	41:14	0:0	4	]
op	41:16	0:0	4	=
water	41:18	0:0	4	R
op	41:20	0:0	4	>>
water	41:23	0:0	4	22
water	41:25	0:0	4	;
break	42:8	42:13	4	
label	43:4	43:25	4	case AV_PIX_FMT_BGR24 :
water	44:8	0:0	4	dest
op	44:12	0:0	4	[
water	44:13	0:0	4	0
op	44:14	0:0	4	]
op	44:16	0:0	4	=
water	44:18	0:0	4	B
op	44:20	0:0	4	>>
water	44:23	0:0	4	22
water	44:25	0:0	4	;
water	45:8	0:0	4	dest
op	45:12	0:0	4	[
water	45:13	0:0	4	1
op	45:14	0:0	4	]
op	45:16	0:0	4	=
water	45:18	0:0	4	G
op	45:20	0:0	4	>>
water	45:23	0:0	4	22
water	45:25	0:0	4	;
water	46:8	0:0	4	dest
op	46:12	0:0	4	[
water	46:13	0:0	4	2
op	46:14	0:0	4	]
op	46:16	0:0	4	=
water	46:18	0:0	4	R
op	46:20	0:0	4	>>
water	46:23	0:0	4	22
water	46:25	0:0	4	;
break	47:8	47:13	4	
label	48:4	48:24	4	case AV_PIX_FMT_BGRA :
water	49:8	0:0	4	dest
op	49:12	0:0	4	[
water	49:13	0:0	4	0
op	49:14	0:0	4	]
op	49:16	0:0	4	=
water	49:18	0:0	4	B
op	49:20	0:0	4	>>
water	49:23	0:0	4	22
water	49:25	0:0	4	;
water	50:8	0:0	4	dest
op	50:12	0:0	4	[
water	50:13	0:0	4	1
op	50:14	0:0	4	]
op	50:16	0:0	4	=
water	50:18	0:0	4	G
op	50:20	0:0	4	>>
water	50:23	0:0	4	22
water	50:25	0:0	4	;
water	51:8	0:0	4	dest
op	51:12	0:0	4	[
water	51:13	0:0	4	2
op	51:14	0:0	4	]
op	51:16	0:0	4	=
water	51:18	0:0	4	R
op	51:20	0:0	4	>>
water	51:23	0:0	4	22
water	51:25	0:0	4	;
water	52:8	0:0	4	dest
op	52:12	0:0	4	[
water	52:13	0:0	4	3
op	52:14	0:0	4	]
op	52:16	0:0	4	=
water	52:18	0:0	4	hasAlpha
water	52:27	0:0	4	?
water	52:29	0:0	4	A
water	52:31	0:0	4	:
water	52:33	0:0	4	255
water	52:36	0:0	4	;
break	53:8	53:13	4	
label	54:4	54:29	4	case AV_PIX_FMT_BGR4_BYTE :
label	55:4	55:29	4	case AV_PIX_FMT_RGB4_BYTE :
label	56:4	56:24	4	case AV_PIX_FMT_BGR8 :
label	57:4	57:24	4	case AV_PIX_FMT_RGB8 :
water	58:4	0:0	4	{
decl	59:8	59:17	4	int	r
water	59:13	0:0	4	,
decl	59:8	59:17	4	int	g
water	59:15	0:0	4	,
decl	59:8	59:17	4	int	b
switch	60:8	121:8	4	(c -> dither)
cond	60:16	60:19	5	c -> dither
water	60:16	0:0	6	c
op	60:17	0:0	6	->
water	60:19	0:0	6	dither
stmts	60:27	121:8	5	
water	60:27	0:0	6	{
label	61:8	61:15	6	default :
label	62:8	62:28	6	case SWS_DITHER_AUTO :
label	63:8	63:26	6	case SWS_DITHER_ED :
water	64:12	0:0	6	R
op	64:14	0:0	6	>>=
water	64:18	0:0	6	22
water	64:20	0:0	6	;
water	65:12	0:0	6	G
op	65:14	0:0	6	>>=
water	65:18	0:0	6	22
water	65:20	0:0	6	;
water	66:12	0:0	6	B
op	66:14	0:0	6	>>=
water	66:18	0:0	6	22
water	66:20	0:0	6	;
water	67:12	0:0	6	R
op	67:14	0:0	6	+=
water	67:17	0:0	6	(
water	67:18	0:0	6	7
op	67:19	0:0	6	*
water	67:20	0:0	6	err
op	67:23	0:0	6	[
water	67:24	0:0	6	0
op	67:25	0:0	6	]
op	67:27	0:0	6	+
water	67:29	0:0	6	1
op	67:30	0:0	6	*
water	67:31	0:0	6	c
op	67:32	0:0	6	->
water	67:34	0:0	6	dither_error
op	67:46	0:0	6	[
water	67:47	0:0	6	0
op	67:48	0:0	6	]
op	67:49	0:0	6	[
water	67:50	0:0	6	i
op	67:51	0:0	6	]
op	67:53	0:0	6	+
water	67:55	0:0	6	5
op	67:56	0:0	6	*
water	67:57	0:0	6	c
op	67:58	0:0	6	->
water	67:60	0:0	6	dither_error
op	67:72	0:0	6	[
water	67:73	0:0	6	0
op	67:74	0:0	6	]
op	67:75	0:0	6	[
water	67:76	0:0	6	i
op	67:77	0:0	6	+
water	67:78	0:0	6	1
op	67:79	0:0	6	]
op	67:81	0:0	6	+
water	67:83	0:0	6	3
op	67:84	0:0	6	*
water	67:85	0:0	6	c
op	67:86	0:0	6	->
water	67:88	0:0	6	dither_error
op	67:100	0:0	6	[
water	67:101	0:0	6	0
op	67:102	0:0	6	]
op	67:103	0:0	6	[
water	67:104	0:0	6	i
op	67:105	0:0	6	+
water	67:106	0:0	6	2
op	67:107	0:0	6	]
water	67:108	0:0	6	)
op	67:109	0:0	6	>>
water	67:111	0:0	6	4
water	67:112	0:0	6	;
water	68:12	0:0	6	G
op	68:14	0:0	6	+=
water	68:17	0:0	6	(
water	68:18	0:0	6	7
op	68:19	0:0	6	*
water	68:20	0:0	6	err
op	68:23	0:0	6	[
water	68:24	0:0	6	1
op	68:25	0:0	6	]
op	68:27	0:0	6	+
water	68:29	0:0	6	1
op	68:30	0:0	6	*
water	68:31	0:0	6	c
op	68:32	0:0	6	->
water	68:34	0:0	6	dither_error
op	68:46	0:0	6	[
water	68:47	0:0	6	1
op	68:48	0:0	6	]
op	68:49	0:0	6	[
water	68:50	0:0	6	i
op	68:51	0:0	6	]
op	68:53	0:0	6	+
water	68:55	0:0	6	5
op	68:56	0:0	6	*
water	68:57	0:0	6	c
op	68:58	0:0	6	->
water	68:60	0:0	6	dither_error
op	68:72	0:0	6	[
water	68:73	0:0	6	1
op	68:74	0:0	6	]
op	68:75	0:0	6	[
water	68:76	0:0	6	i
op	68:77	0:0	6	+
water	68:78	0:0	6	1
op	68:79	0:0	6	]
op	68:81	0:0	6	+
water	68:83	0:0	6	3
op	68:84	0:0	6	*
water	68:85	0:0	6	c
op	68:86	0:0	6	->
water	68:88	0:0	6	dither_error
op	68:100	0:0	6	[
water	68:101	0:0	6	1
op	68:102	0:0	6	]
op	68:103	0:0	6	[
water	68:104	0:0	6	i
op	68:105	0:0	6	+
water	68:106	0:0	6	2
op	68:107	0:0	6	]
water	68:108	0:0	6	)
op	68:109	0:0	6	>>
water	68:111	0:0	6	4
water	68:112	0:0	6	;
water	69:12	0:0	6	B
op	69:14	0:0	6	+=
water	69:17	0:0	6	(
water	69:18	0:0	6	7
op	69:19	0:0	6	*
water	69:20	0:0	6	err
op	69:23	0:0	6	[
water	69:24	0:0	6	2
op	69:25	0:0	6	]
op	69:27	0:0	6	+
water	69:29	0:0	6	1
op	69:30	0:0	6	*
water	69:31	0:0	6	c
op	69:32	0:0	6	->
water	69:34	0:0	6	dither_error
op	69:46	0:0	6	[
water	69:47	0:0	6	2
op	69:48	0:0	6	]
op	69:49	0:0	6	[
water	69:50	0:0	6	i
op	69:51	0:0	6	]
op	69:53	0:0	6	+
water	69:55	0:0	6	5
op	69:56	0:0	6	*
water	69:57	0:0	6	c
op	69:58	0:0	6	->
water	69:60	0:0	6	dither_error
op	69:72	0:0	6	[
water	69:73	0:0	6	2
op	69:74	0:0	6	]
op	69:75	0:0	6	[
water	69:76	0:0	6	i
op	69:77	0:0	6	+
water	69:78	0:0	6	1
op	69:79	0:0	6	]
op	69:81	0:0	6	+
water	69:83	0:0	6	3
op	69:84	0:0	6	*
water	69:85	0:0	6	c
op	69:86	0:0	6	->
water	69:88	0:0	6	dither_error
op	69:100	0:0	6	[
water	69:101	0:0	6	2
op	69:102	0:0	6	]
op	69:103	0:0	6	[
water	69:104	0:0	6	i
op	69:105	0:0	6	+
water	69:106	0:0	6	2
op	69:107	0:0	6	]
water	69:108	0:0	6	)
op	69:109	0:0	6	>>
water	69:111	0:0	6	4
water	69:112	0:0	6	;
water	70:12	0:0	6	c
op	70:13	0:0	6	->
water	70:15	0:0	6	dither_error
op	70:27	0:0	6	[
water	70:28	0:0	6	0
op	70:29	0:0	6	]
op	70:30	0:0	6	[
water	70:31	0:0	6	i
op	70:32	0:0	6	]
op	70:34	0:0	6	=
water	70:36	0:0	6	err
op	70:39	0:0	6	[
water	70:40	0:0	6	0
op	70:41	0:0	6	]
water	70:42	0:0	6	;
water	71:12	0:0	6	c
op	71:13	0:0	6	->
water	71:15	0:0	6	dither_error
op	71:27	0:0	6	[
water	71:28	0:0	6	1
op	71:29	0:0	6	]
op	71:30	0:0	6	[
water	71:31	0:0	6	i
op	71:32	0:0	6	]
op	71:34	0:0	6	=
water	71:36	0:0	6	err
op	71:39	0:0	6	[
water	71:40	0:0	6	1
op	71:41	0:0	6	]
water	71:42	0:0	6	;
water	72:12	0:0	6	c
op	72:13	0:0	6	->
water	72:15	0:0	6	dither_error
op	72:27	0:0	6	[
water	72:28	0:0	6	2
op	72:29	0:0	6	]
op	72:30	0:0	6	[
water	72:31	0:0	6	i
op	72:32	0:0	6	]
op	72:34	0:0	6	=
water	72:36	0:0	6	err
op	72:39	0:0	6	[
water	72:40	0:0	6	2
op	72:41	0:0	6	]
water	72:42	0:0	6	;
water	73:12	0:0	6	r
op	73:14	0:0	6	=
water	73:16	0:0	6	R
op	73:18	0:0	6	>>
water	73:21	0:0	6	(
water	73:22	0:0	6	isrgb8
water	73:29	0:0	6	?
water	73:31	0:0	6	5
water	73:33	0:0	6	:
water	73:35	0:0	6	7
water	73:36	0:0	6	)
water	73:37	0:0	6	;
water	74:12	0:0	6	g
op	74:14	0:0	6	=
water	74:16	0:0	6	G
op	74:18	0:0	6	>>
water	74:21	0:0	6	(
water	74:22	0:0	6	isrgb8
water	74:29	0:0	6	?
water	74:31	0:0	6	5
water	74:33	0:0	6	:
water	74:35	0:0	6	6
water	74:36	0:0	6	)
water	74:37	0:0	6	;
water	75:12	0:0	6	b
op	75:14	0:0	6	=
water	75:16	0:0	6	B
op	75:18	0:0	6	>>
water	75:21	0:0	6	(
water	75:22	0:0	6	isrgb8
water	75:29	0:0	6	?
water	75:31	0:0	6	6
water	75:33	0:0	6	:
water	75:35	0:0	6	7
water	75:36	0:0	6	)
water	75:37	0:0	6	;
water	76:12	0:0	6	r
op	76:14	0:0	6	=
call	76:16	76:44	6	av_clip
arg	76:24	76:25	7	r
water	76:24	0:0	8	r
arg	76:27	76:28	7	0
water	76:27	0:0	8	0
arg	76:30	76:44	7	isrgb8?7:1
water	76:30	0:0	8	isrgb8
water	76:37	0:0	8	?
water	76:39	0:0	8	7
water	76:41	0:0	8	:
water	76:43	0:0	8	1
water	76:45	0:0	6	;
water	77:12	0:0	6	g
op	77:14	0:0	6	=
call	77:16	77:44	6	av_clip
arg	77:24	77:25	7	g
water	77:24	0:0	8	g
arg	77:27	77:28	7	0
water	77:27	0:0	8	0
arg	77:30	77:44	7	isrgb8?7:3
water	77:30	0:0	8	isrgb8
water	77:37	0:0	8	?
water	77:39	0:0	8	7
water	77:41	0:0	8	:
water	77:43	0:0	8	3
water	77:45	0:0	6	;
water	78:12	0:0	6	b
op	78:14	0:0	6	=
call	78:16	78:44	6	av_clip
arg	78:24	78:25	7	b
water	78:24	0:0	8	b
arg	78:27	78:28	7	0
water	78:27	0:0	8	0
arg	78:30	78:44	7	isrgb8?3:1
water	78:30	0:0	8	isrgb8
water	78:37	0:0	8	?
water	78:39	0:0	8	3
water	78:41	0:0	8	:
water	78:43	0:0	8	1
water	78:45	0:0	6	;
water	79:12	0:0	6	err
op	79:15	0:0	6	[
water	79:16	0:0	6	0
op	79:17	0:0	6	]
op	79:19	0:0	6	=
water	79:21	0:0	6	R
op	79:23	0:0	6	-
water	79:25	0:0	6	r
op	79:26	0:0	6	*
water	79:27	0:0	6	(
water	79:28	0:0	6	isrgb8
water	79:35	0:0	6	?
water	79:37	0:0	6	36
water	79:40	0:0	6	:
water	79:42	0:0	6	255
water	79:45	0:0	6	)
water	79:46	0:0	6	;
water	80:12	0:0	6	err
op	80:15	0:0	6	[
water	80:16	0:0	6	1
op	80:17	0:0	6	]
op	80:19	0:0	6	=
water	80:21	0:0	6	G
op	80:23	0:0	6	-
water	80:25	0:0	6	g
op	80:26	0:0	6	*
water	80:27	0:0	6	(
water	80:28	0:0	6	isrgb8
water	80:35	0:0	6	?
water	80:37	0:0	6	36
water	80:40	0:0	6	:
water	80:42	0:0	6	85
water	80:44	0:0	6	)
water	80:45	0:0	6	;
water	81:12	0:0	6	err
op	81:15	0:0	6	[
water	81:16	0:0	6	2
op	81:17	0:0	6	]
op	81:19	0:0	6	=
water	81:21	0:0	6	B
op	81:23	0:0	6	-
water	81:25	0:0	6	b
op	81:26	0:0	6	*
water	81:27	0:0	6	(
water	81:28	0:0	6	isrgb8
water	81:35	0:0	6	?
water	81:37	0:0	6	85
water	81:40	0:0	6	:
water	81:42	0:0	6	255
water	81:45	0:0	6	)
water	81:46	0:0	6	;
break	82:12	82:17	6	
label	83:8	83:32	6	case SWS_DITHER_A_DITHER :
if	84:12	93:12	6	(isrgb8)
cond	84:16	84:16	7	isrgb8
water	84:16	0:0	8	isrgb8
stmts	84:24	93:12	7	
water	84:24	0:0	8	{
water	87:16	0:0	8	r
op	87:18	0:0	8	=
water	87:20	0:0	8	(
water	87:21	0:0	8	(
water	87:22	0:0	8	(
water	87:23	0:0	8	R
op	87:25	0:0	8	>>
water	87:28	0:0	8	19
water	87:30	0:0	8	)
op	87:32	0:0	8	+
call	87:34	87:46	8	A_DITHER
arg	87:43	87:44	9	i
water	87:43	0:0	10	i
arg	87:45	87:46	9	y
water	87:45	0:0	10	y
op	87:49	0:0	8	-
water	87:50	0:0	8	96
water	87:52	0:0	8	)
op	87:53	0:0	8	>>
water	87:55	0:0	8	8
water	87:56	0:0	8	)
water	87:57	0:0	8	;
water	88:16	0:0	8	g
op	88:18	0:0	8	=
water	88:20	0:0	8	(
water	88:21	0:0	8	(
water	88:22	0:0	8	(
water	88:23	0:0	8	G
op	88:25	0:0	8	>>
water	88:28	0:0	8	19
water	88:30	0:0	8	)
op	88:32	0:0	8	+
call	88:34	88:51	8	A_DITHER
arg	88:43	88:49	9	i+17
water	88:43	0:0	10	i
op	88:45	0:0	10	+
water	88:47	0:0	10	17
arg	88:50	88:51	9	y
water	88:50	0:0	10	y
op	88:53	0:0	8	-
water	88:55	0:0	8	96
water	88:57	0:0	8	)
op	88:58	0:0	8	>>
water	88:60	0:0	8	8
water	88:61	0:0	8	)
water	88:62	0:0	8	;
water	89:16	0:0	8	b
op	89:18	0:0	8	=
water	89:20	0:0	8	(
water	89:21	0:0	8	(
water	89:22	0:0	8	(
water	89:23	0:0	8	B
op	89:25	0:0	8	>>
water	89:28	0:0	8	20
water	89:30	0:0	8	)
op	89:32	0:0	8	+
call	89:34	89:53	8	A_DITHER
arg	89:43	89:51	9	i+17*2
water	89:43	0:0	10	i
op	89:45	0:0	10	+
water	89:47	0:0	10	17
op	89:49	0:0	10	*
water	89:50	0:0	10	2
arg	89:52	89:53	9	y
water	89:52	0:0	10	y
op	89:55	0:0	8	-
water	89:56	0:0	8	96
water	89:58	0:0	8	)
op	89:59	0:0	8	>>
water	89:61	0:0	8	8
water	89:62	0:0	8	)
water	89:63	0:0	8	;
water	90:16	0:0	8	r
op	90:18	0:0	8	=
call	90:20	90:39	8	av_clip_uintp2
arg	90:35	90:36	9	r
water	90:35	0:0	10	r
arg	90:38	90:39	9	3
water	90:38	0:0	10	3
water	90:40	0:0	8	;
water	91:16	0:0	8	g
op	91:18	0:0	8	=
call	91:20	91:39	8	av_clip_uintp2
arg	91:35	91:36	9	g
water	91:35	0:0	10	g
arg	91:38	91:39	9	3
water	91:38	0:0	10	3
water	91:40	0:0	8	;
water	92:16	0:0	8	b
op	92:18	0:0	8	=
call	92:20	92:39	8	av_clip_uintp2
arg	92:35	92:36	9	b
water	92:35	0:0	10	b
arg	92:38	92:39	9	2
water	92:38	0:0	10	2
water	92:40	0:0	8	;
water	93:12	0:0	8	}
else	93:14	100:12	6
stmts	93:19	100:12	7	
water	93:19	0:0	8	{
water	94:16	0:0	8	r
op	94:18	0:0	8	=
water	94:20	0:0	8	(
water	94:21	0:0	8	(
water	94:22	0:0	8	(
water	94:23	0:0	8	R
op	94:25	0:0	8	>>
water	94:28	0:0	8	21
water	94:30	0:0	8	)
op	94:32	0:0	8	+
call	94:34	94:46	8	A_DITHER
arg	94:43	94:44	9	i
water	94:43	0:0	10	i
arg	94:45	94:46	9	y
water	94:45	0:0	10	y
op	94:47	0:0	8	-
water	94:48	0:0	8	256
water	94:51	0:0	8	)
op	94:52	0:0	8	>>
water	94:54	0:0	8	8
water	94:55	0:0	8	)
water	94:56	0:0	8	;
water	95:16	0:0	8	g
op	95:18	0:0	8	=
water	95:20	0:0	8	(
water	95:21	0:0	8	(
water	95:22	0:0	8	(
water	95:23	0:0	8	G
op	95:25	0:0	8	>>
water	95:28	0:0	8	19
water	95:30	0:0	8	)
op	95:32	0:0	8	+
call	95:34	95:51	8	A_DITHER
arg	95:43	95:49	9	i+17
water	95:43	0:0	10	i
op	95:45	0:0	10	+
water	95:47	0:0	10	17
arg	95:50	95:51	9	y
water	95:50	0:0	10	y
op	95:52	0:0	8	-
water	95:53	0:0	8	256
water	95:56	0:0	8	)
op	95:57	0:0	8	>>
water	95:59	0:0	8	8
water	95:60	0:0	8	)
water	95:61	0:0	8	;
water	96:16	0:0	8	b
op	96:18	0:0	8	=
water	96:20	0:0	8	(
water	96:21	0:0	8	(
water	96:22	0:0	8	(
water	96:23	0:0	8	B
op	96:25	0:0	8	>>
water	96:28	0:0	8	21
water	96:30	0:0	8	)
op	96:32	0:0	8	+
call	96:34	96:53	8	A_DITHER
arg	96:43	96:51	9	i+17*2
water	96:43	0:0	10	i
op	96:45	0:0	10	+
water	96:47	0:0	10	17
op	96:49	0:0	10	*
water	96:50	0:0	10	2
arg	96:52	96:53	9	y
water	96:52	0:0	10	y
op	96:54	0:0	8	-
water	96:55	0:0	8	256
water	96:58	0:0	8	)
op	96:59	0:0	8	>>
water	96:61	0:0	8	8
water	96:62	0:0	8	)
water	96:63	0:0	8	;
water	97:16	0:0	8	r
op	97:18	0:0	8	=
call	97:20	97:39	8	av_clip_uintp2
arg	97:35	97:36	9	r
water	97:35	0:0	10	r
arg	97:38	97:39	9	1
water	97:38	0:0	10	1
water	97:40	0:0	8	;
water	98:16	0:0	8	g
op	98:18	0:0	8	=
call	98:20	98:39	8	av_clip_uintp2
arg	98:35	98:36	9	g
water	98:35	0:0	10	g
arg	98:38	98:39	9	2
water	98:38	0:0	10	2
water	98:40	0:0	8	;
water	99:16	0:0	8	b
op	99:18	0:0	8	=
call	99:20	99:39	8	av_clip_uintp2
arg	99:35	99:36	9	b
water	99:35	0:0	10	b
arg	99:38	99:39	9	1
water	99:38	0:0	10	1
water	99:40	0:0	8	;
water	100:12	0:0	8	}
break	101:12	101:17	6	
label	102:8	102:32	6	case SWS_DITHER_X_DITHER :
if	103:12	112:12	6	(isrgb8)
cond	103:16	103:16	7	isrgb8
water	103:16	0:0	8	isrgb8
stmts	103:24	112:12	7	
water	103:24	0:0	8	{
water	106:16	0:0	8	r
op	106:18	0:0	8	=
water	106:20	0:0	8	(
water	106:21	0:0	8	(
water	106:22	0:0	8	(
water	106:23	0:0	8	R
op	106:25	0:0	8	>>
water	106:28	0:0	8	19
water	106:30	0:0	8	)
op	106:32	0:0	8	+
call	106:34	106:46	8	X_DITHER
arg	106:43	106:44	9	i
water	106:43	0:0	10	i
arg	106:45	106:46	9	y
water	106:45	0:0	10	y
op	106:48	0:0	8	-
water	106:50	0:0	8	96
water	106:52	0:0	8	)
op	106:53	0:0	8	>>
water	106:55	0:0	8	8
water	106:56	0:0	8	)
water	106:57	0:0	8	;
water	107:16	0:0	8	g
op	107:18	0:0	8	=
water	107:20	0:0	8	(
water	107:21	0:0	8	(
water	107:22	0:0	8	(
water	107:23	0:0	8	G
op	107:25	0:0	8	>>
water	107:28	0:0	8	19
water	107:30	0:0	8	)
op	107:32	0:0	8	+
call	107:34	107:51	8	X_DITHER
arg	107:43	107:49	9	i+17
water	107:43	0:0	10	i
op	107:45	0:0	10	+
water	107:47	0:0	10	17
arg	107:50	107:51	9	y
water	107:50	0:0	10	y
op	107:53	0:0	8	-
water	107:55	0:0	8	96
water	107:57	0:0	8	)
op	107:58	0:0	8	>>
water	107:60	0:0	8	8
water	107:61	0:0	8	)
water	107:62	0:0	8	;
water	108:16	0:0	8	b
op	108:18	0:0	8	=
water	108:20	0:0	8	(
water	108:21	0:0	8	(
water	108:22	0:0	8	(
water	108:23	0:0	8	B
op	108:25	0:0	8	>>
water	108:28	0:0	8	20
water	108:30	0:0	8	)
op	108:32	0:0	8	+
call	108:34	108:53	8	X_DITHER
arg	108:43	108:51	9	i+17*2
water	108:43	0:0	10	i
op	108:45	0:0	10	+
water	108:47	0:0	10	17
op	108:49	0:0	10	*
water	108:50	0:0	10	2
arg	108:52	108:53	9	y
water	108:52	0:0	10	y
op	108:55	0:0	8	-
water	108:57	0:0	8	96
water	108:59	0:0	8	)
op	108:60	0:0	8	>>
water	108:62	0:0	8	8
water	108:63	0:0	8	)
water	108:64	0:0	8	;
water	109:16	0:0	8	r
op	109:18	0:0	8	=
call	109:20	109:39	8	av_clip_uintp2
arg	109:35	109:36	9	r
water	109:35	0:0	10	r
arg	109:38	109:39	9	3
water	109:38	0:0	10	3
water	109:40	0:0	8	;
water	110:16	0:0	8	g
op	110:18	0:0	8	=
call	110:20	110:39	8	av_clip_uintp2
arg	110:35	110:36	9	g
water	110:35	0:0	10	g
arg	110:38	110:39	9	3
water	110:38	0:0	10	3
water	110:40	0:0	8	;
water	111:16	0:0	8	b
op	111:18	0:0	8	=
call	111:20	111:39	8	av_clip_uintp2
arg	111:35	111:36	9	b
water	111:35	0:0	10	b
arg	111:38	111:39	9	2
water	111:38	0:0	10	2
water	111:40	0:0	8	;
water	112:12	0:0	8	}
else	112:14	119:12	6
stmts	112:19	119:12	7	
water	112:19	0:0	8	{
water	113:16	0:0	8	r
op	113:18	0:0	8	=
water	113:20	0:0	8	(
water	113:21	0:0	8	(
water	113:22	0:0	8	(
water	113:23	0:0	8	R
op	113:25	0:0	8	>>
water	113:28	0:0	8	21
water	113:30	0:0	8	)
op	113:32	0:0	8	+
call	113:34	113:46	8	X_DITHER
arg	113:43	113:44	9	i
water	113:43	0:0	10	i
arg	113:45	113:46	9	y
water	113:45	0:0	10	y
op	113:47	0:0	8	-
water	113:48	0:0	8	256
water	113:51	0:0	8	)
op	113:52	0:0	8	>>
water	113:54	0:0	8	8
water	113:55	0:0	8	)
water	113:56	0:0	8	;
water	114:16	0:0	8	g
op	114:18	0:0	8	=
water	114:20	0:0	8	(
water	114:21	0:0	8	(
water	114:22	0:0	8	(
water	114:23	0:0	8	G
op	114:25	0:0	8	>>
water	114:28	0:0	8	19
water	114:30	0:0	8	)
op	114:32	0:0	8	+
call	114:34	114:51	8	X_DITHER
arg	114:43	114:49	9	i+17
water	114:43	0:0	10	i
op	114:45	0:0	10	+
water	114:47	0:0	10	17
arg	114:50	114:51	9	y
water	114:50	0:0	10	y
op	114:52	0:0	8	-
water	114:53	0:0	8	256
water	114:56	0:0	8	)
op	114:57	0:0	8	>>
water	114:59	0:0	8	8
water	114:60	0:0	8	)
water	114:61	0:0	8	;
water	115:16	0:0	8	b
op	115:18	0:0	8	=
water	115:20	0:0	8	(
water	115:21	0:0	8	(
water	115:22	0:0	8	(
water	115:23	0:0	8	B
op	115:25	0:0	8	>>
water	115:28	0:0	8	21
water	115:30	0:0	8	)
op	115:32	0:0	8	+
call	115:34	115:53	8	X_DITHER
arg	115:43	115:51	9	i+17*2
water	115:43	0:0	10	i
op	115:45	0:0	10	+
water	115:47	0:0	10	17
op	115:49	0:0	10	*
water	115:50	0:0	10	2
arg	115:52	115:53	9	y
water	115:52	0:0	10	y
op	115:54	0:0	8	-
water	115:55	0:0	8	256
water	115:58	0:0	8	)
op	115:59	0:0	8	>>
water	115:61	0:0	8	8
water	115:62	0:0	8	)
water	115:63	0:0	8	;
water	116:16	0:0	8	r
op	116:18	0:0	8	=
call	116:20	116:39	8	av_clip_uintp2
arg	116:35	116:36	9	r
water	116:35	0:0	10	r
arg	116:38	116:39	9	1
water	116:38	0:0	10	1
water	116:40	0:0	8	;
water	117:16	0:0	8	g
op	117:18	0:0	8	=
call	117:20	117:39	8	av_clip_uintp2
arg	117:35	117:36	9	g
water	117:35	0:0	10	g
arg	117:38	117:39	9	2
water	117:38	0:0	10	2
water	117:40	0:0	8	;
water	118:16	0:0	8	b
op	118:18	0:0	8	=
call	118:20	118:39	8	av_clip_uintp2
arg	118:35	118:36	9	b
water	118:35	0:0	10	b
arg	118:38	118:39	9	1
water	118:38	0:0	10	1
water	118:40	0:0	8	;
water	119:12	0:0	8	}
break	120:12	120:17	6	
water	121:8	0:0	6	}
if	122:8	124:8	4	(target == AV_PIX_FMT_BGR4_BYTE)
cond	122:11	122:21	5	target == AV_PIX_FMT_BGR4_BYTE
water	122:11	0:0	6	target
op	122:18	0:0	6	==
water	122:21	0:0	6	AV_PIX_FMT_BGR4_BYTE
stmts	122:43	124:8	5	
water	122:43	0:0	6	{
water	123:12	0:0	6	dest
op	123:16	0:0	6	[
water	123:17	0:0	6	0
op	123:18	0:0	6	]
op	123:20	0:0	6	=
water	123:22	0:0	6	r
op	123:24	0:0	6	+
water	123:26	0:0	6	2
op	123:27	0:0	6	*
water	123:28	0:0	6	g
op	123:30	0:0	6	+
water	123:32	0:0	6	8
op	123:33	0:0	6	*
water	123:34	0:0	6	b
water	123:35	0:0	6	;
water	124:8	0:0	6	}
else	124:10	126:8	4
stmts	124:15	126:8	5	
if	124:15	126:8	6	(target == AV_PIX_FMT_RGB4_BYTE)
cond	124:18	124:28	7	target == AV_PIX_FMT_RGB4_BYTE
water	124:18	0:0	8	target
op	124:25	0:0	8	==
water	124:28	0:0	8	AV_PIX_FMT_RGB4_BYTE
stmts	124:50	126:8	7	
water	124:50	0:0	8	{
water	125:12	0:0	8	dest
op	125:16	0:0	8	[
water	125:17	0:0	8	0
op	125:18	0:0	8	]
op	125:20	0:0	8	=
water	125:22	0:0	8	b
op	125:24	0:0	8	+
water	125:26	0:0	8	2
op	125:27	0:0	8	*
water	125:28	0:0	8	g
op	125:30	0:0	8	+
water	125:32	0:0	8	8
op	125:33	0:0	8	*
water	125:34	0:0	8	r
water	125:35	0:0	8	;
water	126:8	0:0	8	}
else	126:10	128:8	4
stmts	126:15	128:8	5	
if	126:15	128:8	6	(target == AV_PIX_FMT_BGR8)
cond	126:18	126:28	7	target == AV_PIX_FMT_BGR8
water	126:18	0:0	8	target
op	126:25	0:0	8	==
water	126:28	0:0	8	AV_PIX_FMT_BGR8
stmts	126:45	128:8	7	
water	126:45	0:0	8	{
water	127:12	0:0	8	dest
op	127:16	0:0	8	[
water	127:17	0:0	8	0
op	127:18	0:0	8	]
op	127:20	0:0	8	=
water	127:22	0:0	8	r
op	127:24	0:0	8	+
water	127:26	0:0	8	8
op	127:27	0:0	8	*
water	127:28	0:0	8	g
op	127:30	0:0	8	+
water	127:32	0:0	8	64
op	127:34	0:0	8	*
water	127:35	0:0	8	b
water	127:36	0:0	8	;
water	128:8	0:0	8	}
else	128:10	130:8	4
stmts	128:15	130:8	5	
if	128:15	130:8	6	(target == AV_PIX_FMT_RGB8)
cond	128:18	128:28	7	target == AV_PIX_FMT_RGB8
water	128:18	0:0	8	target
op	128:25	0:0	8	==
water	128:28	0:0	8	AV_PIX_FMT_RGB8
stmts	128:45	130:8	7	
water	128:45	0:0	8	{
water	129:12	0:0	8	dest
op	129:16	0:0	8	[
water	129:17	0:0	8	0
op	129:18	0:0	8	]
op	129:20	0:0	8	=
water	129:22	0:0	8	b
op	129:24	0:0	8	+
water	129:26	0:0	8	4
op	129:27	0:0	8	*
water	129:28	0:0	8	g
op	129:30	0:0	8	+
water	129:32	0:0	8	32
op	129:34	0:0	8	*
water	129:35	0:0	8	r
water	129:36	0:0	8	;
water	130:8	0:0	8	}
else	130:10	131:25	4
stmts	131:12	131:25	5	
call	131:12	131:24	6	av_assert2
arg	131:23	131:24	7	0
water	131:23	0:0	8	0
water	131:25	0:0	6	;
break	132:8	132:13	4	
water	132:14	0:0	4	}
water	133:4	0:0	4	}

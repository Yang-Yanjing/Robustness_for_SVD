decl	1:7	1:35	0	int	copy_unknown_streams
op	1:32	0:0	0	=
water	1:34	0:0	0	0
func	2:0	29:0	0	static void	uninit_options
params	2:26	0:0	1	
param	2:27	2:44	2	OptionsContext *	o
stmnts	0:0	28:29	1	
decl	4:4	4:33	2	const OptionDef	*po
op	4:24	0:0	2	=
water	4:26	0:0	2	options
decl	5:4	5:9	2	int	i
while	7:4	22:4	2	(po -> name)
cond	7:11	7:15	3	po -> name
water	7:11	0:0	4	po
op	7:13	0:0	4	->
water	7:15	0:0	4	name
stmts	7:21	22:4	3	
water	7:21	0:0	4	{
decl	8:8	8:43	4	void	*dst
op	8:18	0:0	4	=
water	8:20	0:0	4	(
water	8:21	0:0	4	uint8_t
op	8:28	0:0	4	*
water	8:29	0:0	4	)
water	8:30	0:0	4	o
op	8:32	0:0	4	+
water	8:34	0:0	4	po
op	8:36	0:0	4	->
water	8:38	0:0	4	u
op	8:39	0:0	4	.
water	8:40	0:0	4	off
if	9:8	19:8	4	(po -> flags & OPT_SPEC)
cond	9:12	9:24	5	po -> flags & OPT_SPEC
water	9:12	0:0	6	po
op	9:14	0:0	6	->
water	9:16	0:0	6	flags
op	9:22	0:0	6	&
water	9:24	0:0	6	OPT_SPEC
stmts	9:34	19:8	5	
water	9:34	0:0	6	{
decl	10:12	10:35	6	SpecifierOpt	**so
op	10:30	0:0	6	=
water	10:32	0:0	6	dst
decl	11:12	11:42	6	int	i
water	11:17	0:0	6	,
decl	11:12	11:42	6	int	*count
op	11:26	0:0	6	=
call	11:28	11:41	7	(int*)
arg	11:35	11:41	8	so+1
water	11:35	0:0	9	so
op	11:38	0:0	9	+
water	11:40	0:0	9	1
for	12:12	16:12	6	(i = 0 ;i < * count;i ++)
forinit	12:17	12:22	7	i = 0 ;
water	12:17	0:0	8	i
op	12:19	0:0	8	=
water	12:21	0:0	8	0
water	12:22	0:0	8	;
cond	12:24	12:29	7	i < * count
water	12:24	0:0	8	i
op	12:26	0:0	8	<
op	12:28	0:0	8	*
water	12:29	0:0	8	count
forexpr	12:36	12:37	7	i ++
water	12:36	0:0	8	i
op	12:37	0:0	8	++
stmts	12:41	16:12	7	
water	12:41	0:0	8	{
call	13:16	13:44	8	av_freep
arg	13:25	13:44	9	&(*so)[i].specifier
op	13:25	0:0	10	&
water	13:26	0:0	10	(
op	13:27	0:0	10	*
water	13:28	0:0	10	so
water	13:30	0:0	10	)
op	13:31	0:0	10	[
water	13:32	0:0	10	i
op	13:33	0:0	10	]
op	13:34	0:0	10	.
water	13:35	0:0	10	specifier
water	13:45	0:0	8	;
if	14:16	15:45	8	(po -> flags & OPT_STRING)
cond	14:20	14:32	9	po -> flags & OPT_STRING
water	14:20	0:0	10	po
op	14:22	0:0	10	->
water	14:24	0:0	10	flags
op	14:30	0:0	10	&
water	14:32	0:0	10	OPT_STRING
stmts	15:20	15:45	9	
call	15:20	15:44	10	av_freep
arg	15:29	15:44	11	&(*so)[i].u.str
op	15:29	0:0	12	&
water	15:30	0:0	12	(
op	15:31	0:0	12	*
water	15:32	0:0	12	so
water	15:34	0:0	12	)
op	15:35	0:0	12	[
water	15:36	0:0	12	i
op	15:37	0:0	12	]
op	15:38	0:0	12	.
water	15:39	0:0	12	u
op	15:40	0:0	12	.
water	15:41	0:0	12	str
water	15:45	0:0	10	;
water	16:12	0:0	8	}
call	17:12	17:23	6	av_freep
arg	17:21	17:23	7	so
water	17:21	0:0	8	so
water	17:24	0:0	6	;
op	18:12	0:0	6	*
water	18:13	0:0	6	count
op	18:19	0:0	6	=
water	18:21	0:0	6	0
water	18:22	0:0	6	;
water	19:8	0:0	6	}
else	19:10	20:25	4
stmts	19:15	20:25	5	
if	19:15	20:25	6	(po -> flags & OPT_OFFSET && po -> flags & OPT_STRING)
cond	19:19	19:57	7	po -> flags & OPT_OFFSET && po -> flags & OPT_STRING
water	19:19	0:0	8	po
op	19:21	0:0	8	->
water	19:23	0:0	8	flags
op	19:29	0:0	8	&
water	19:31	0:0	8	OPT_OFFSET
op	19:42	0:0	8	&&
water	19:45	0:0	8	po
op	19:47	0:0	8	->
water	19:49	0:0	8	flags
op	19:55	0:0	8	&
water	19:57	0:0	8	OPT_STRING
stmts	20:12	20:25	7	
call	20:12	20:24	8	av_freep
arg	20:21	20:24	9	dst
water	20:21	0:0	10	dst
water	20:25	0:0	8	;
water	21:8	0:0	4	po
op	21:10	0:0	4	++
water	21:12	0:0	4	;
water	22:4	0:0	4	}
for	23:4	24:46	2	(i = 0 ;i < o -> nb_stream_maps;i ++)
forinit	23:9	23:14	3	i = 0 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	0
water	23:14	0:0	4	;
cond	23:16	23:23	3	i < o -> nb_stream_maps
water	23:16	0:0	4	i
op	23:18	0:0	4	<
water	23:20	0:0	4	o
op	23:21	0:0	4	->
water	23:23	0:0	4	nb_stream_maps
forexpr	23:39	23:40	3	i ++
water	23:39	0:0	4	i
op	23:40	0:0	4	++
stmts	24:8	24:46	3	
call	24:8	24:45	4	av_freep
arg	24:17	24:45	5	&o->stream_maps[i].linklabel
op	24:17	0:0	6	&
water	24:18	0:0	6	o
op	24:19	0:0	6	->
water	24:21	0:0	6	stream_maps
op	24:32	0:0	6	[
water	24:33	0:0	6	i
op	24:34	0:0	6	]
op	24:35	0:0	6	.
water	24:36	0:0	6	linklabel
water	24:46	0:0	4	;
call	25:4	25:28	2	av_freep
arg	25:13	25:28	3	&o->stream_maps
op	25:13	0:0	4	&
water	25:14	0:0	4	o
op	25:15	0:0	4	->
water	25:17	0:0	4	stream_maps
water	25:29	0:0	2	;
call	26:4	26:35	2	av_freep
arg	26:13	26:35	3	&o->audio_channel_maps
op	26:13	0:0	4	&
water	26:14	0:0	4	o
op	26:15	0:0	4	->
water	26:17	0:0	4	audio_channel_maps
water	26:36	0:0	2	;
call	27:4	27:29	2	av_freep
arg	27:13	27:29	3	&o->streamid_map
op	27:13	0:0	4	&
water	27:14	0:0	4	o
op	27:15	0:0	4	->
water	27:17	0:0	4	streamid_map
water	27:30	0:0	2	;
call	28:4	28:28	2	av_freep
arg	28:13	28:28	3	&o->attachments
op	28:13	0:0	4	&
water	28:14	0:0	4	o
op	28:15	0:0	4	->
water	28:17	0:0	4	attachments
water	28:29	0:0	2	;

func	1:0	28:0	0	static inline void	clip_coeffs
params	1:30	0:0	1	
param	1:31	1:48	2	MpegEncContext *	s
param	1:50	1:64	2	int16_t *	block
param	2:31	2:45	2	int	last_index
stmnts	0:0	27:44	1	
decl	4:4	4:9	2	int	i
decl	5:4	5:38	2	const int	maxlevel
op	5:23	0:0	2	=
water	5:25	0:0	2	s
op	5:26	0:0	2	->
water	5:28	0:0	2	max_qcoeff
decl	6:4	6:38	2	const int	minlevel
op	6:23	0:0	2	=
water	6:25	0:0	2	s
op	6:26	0:0	2	->
water	6:28	0:0	2	min_qcoeff
decl	7:4	7:20	2	int	overflow
op	7:17	0:0	2	=
water	7:19	0:0	2	0
if	8:4	10:4	2	(s -> mb_intra)
cond	8:8	8:11	3	s -> mb_intra
water	8:8	0:0	4	s
op	8:9	0:0	4	->
water	8:11	0:0	4	mb_intra
stmts	8:21	10:4	3	
water	8:21	0:0	4	{
water	9:8	0:0	4	i
op	9:10	0:0	4	=
water	9:12	0:0	4	1
water	9:13	0:0	4	;
water	10:4	0:0	4	}
else	10:6	11:13	2
stmts	11:8	11:13	3	
water	11:8	0:0	4	i
op	11:10	0:0	4	=
water	11:12	0:0	4	0
water	11:13	0:0	4	;
for	12:4	23:4	2	(;i <= last_index;i ++)
forinit	12:9	12:9	3	;
water	12:9	0:0	4	;
cond	12:11	12:16	3	i <= last_index
water	12:11	0:0	4	i
op	12:13	0:0	4	<=
water	12:16	0:0	4	last_index
forexpr	12:28	12:29	3	i ++
water	12:28	0:0	4	i
op	12:29	0:0	4	++
stmts	12:33	23:4	3	
water	12:33	0:0	4	{
decl	13:8	13:54	4	const int	j
op	13:20	0:0	4	=
water	13:22	0:0	4	s
op	13:23	0:0	4	->
water	13:25	0:0	4	intra_scantable
op	13:40	0:0	4	.
water	13:41	0:0	4	permutated
op	13:51	0:0	4	[
water	13:52	0:0	4	i
op	13:53	0:0	4	]
decl	14:8	14:28	4	int	level
op	14:18	0:0	4	=
water	14:20	0:0	4	block
op	14:25	0:0	4	[
water	14:26	0:0	4	j
op	14:27	0:0	4	]
if	15:8	18:8	4	(level > maxlevel)
cond	15:12	15:20	5	level > maxlevel
water	15:12	0:0	6	level
op	15:18	0:0	6	>
water	15:20	0:0	6	maxlevel
stmts	15:30	18:8	5	
water	15:30	0:0	6	{
water	16:12	0:0	6	level
op	16:18	0:0	6	=
water	16:20	0:0	6	maxlevel
water	16:28	0:0	6	;
water	17:12	0:0	6	overflow
op	17:20	0:0	6	++
water	17:22	0:0	6	;
water	18:8	0:0	6	}
else	18:10	21:8	4
stmts	18:15	21:8	5	
if	18:15	21:8	6	(level < minlevel)
cond	18:19	18:27	7	level < minlevel
water	18:19	0:0	8	level
op	18:25	0:0	8	<
water	18:27	0:0	8	minlevel
stmts	18:37	21:8	7	
water	18:37	0:0	8	{
water	19:12	0:0	8	level
op	19:18	0:0	8	=
water	19:20	0:0	8	minlevel
water	19:28	0:0	8	;
water	20:12	0:0	8	overflow
op	20:20	0:0	8	++
water	20:22	0:0	8	;
water	21:8	0:0	8	}
water	22:8	0:0	4	block
op	22:13	0:0	4	[
water	22:14	0:0	4	j
op	22:15	0:0	4	]
op	22:17	0:0	4	=
water	22:19	0:0	4	level
water	22:24	0:0	4	;
water	23:4	0:0	4	}
if	24:4	27:44	2	(overflow && s -> avctx -> mb_decision == FF_MB_DECISION_SIMPLE)
cond	24:8	24:45	3	overflow && s -> avctx -> mb_decision == FF_MB_DECISION_SIMPLE
water	24:8	0:0	4	overflow
op	24:17	0:0	4	&&
water	24:20	0:0	4	s
op	24:21	0:0	4	->
water	24:23	0:0	4	avctx
op	24:28	0:0	4	->
water	24:30	0:0	4	mb_decision
op	24:42	0:0	4	==
water	24:45	0:0	4	FF_MB_DECISION_SIMPLE
stmts	25:8	27:44	3	
call	25:8	27:43	4	av_log
arg	25:15	25:23	5	s->avctx
water	25:15	0:0	6	s
op	25:16	0:0	6	->
water	25:18	0:0	6	avctx
arg	25:25	25:36	5	AV_LOG_INFO
water	25:25	0:0	6	AV_LOG_INFO
arg	26:15	26:66	5	"warning, clipping %d dct coefficients to %d..%d\n"
water	26:15	0:0	6	"warning, clipping %d dct coefficients to %d..%d\n"
arg	27:15	27:23	5	overflow
water	27:15	0:0	6	overflow
arg	27:25	27:33	5	minlevel
water	27:25	0:0	6	minlevel
arg	27:35	27:43	5	maxlevel
water	27:35	0:0	6	maxlevel
water	27:44	0:0	4	;

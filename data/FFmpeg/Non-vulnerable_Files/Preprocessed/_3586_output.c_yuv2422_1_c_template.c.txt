func	1:24	47:0	0	void	yuv2422_1_c_template
params	2:20	0:0	1	
param	2:21	2:34	2	SwsContext *	c
param	2:36	2:55	2	const int16_t *	buf0
param	3:21	3:43	2	const int16_t *	ubuf[2]
param	3:45	3:67	2	const int16_t *	vbuf[2]
param	4:21	4:41	2	const int16_t *	abuf0
param	4:43	4:56	2	uint8_t *	dest
param	4:58	4:66	2	int	dstW
param	5:21	5:32	2	int	uvalpha
param	5:34	5:39	2	int	y
param	5:41	5:66	2	enum AVPixelFormat	target
stmnts	0:0	46:4	1	
decl	7:4	7:52	2	const int16_t	*ubuf0
op	7:25	0:0	2	=
water	7:27	0:0	2	ubuf
op	7:31	0:0	2	[
water	7:32	0:0	2	0
op	7:33	0:0	2	]
water	7:34	0:0	2	,
decl	7:4	7:52	2	const int16_t	*vbuf0
op	7:43	0:0	2	=
water	7:45	0:0	2	vbuf
op	7:49	0:0	2	[
water	7:50	0:0	2	0
op	7:51	0:0	2	]
decl	8:4	8:9	2	int	i
if	9:4	27:4	2	(uvalpha < 2048)
cond	9:8	9:18	3	uvalpha < 2048
water	9:8	0:0	4	uvalpha
op	9:16	0:0	4	<
water	9:18	0:0	4	2048
stmts	9:24	27:4	3	
water	9:24	0:0	4	{
for	10:8	26:8	4	(i = 0 ;i < ( ( dstW + 1 ) >> 1 );i ++)
forinit	10:13	10:18	5	i = 0 ;
water	10:13	0:0	6	i
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:18	0:0	6	;
cond	10:20	10:40	5	i < ( ( dstW + 1 ) >> 1 )
water	10:20	0:0	6	i
op	10:22	0:0	6	<
water	10:24	0:0	6	(
water	10:25	0:0	6	(
water	10:26	0:0	6	dstW
op	10:31	0:0	6	+
water	10:33	0:0	6	1
water	10:34	0:0	6	)
op	10:36	0:0	6	>>
water	10:39	0:0	6	1
water	10:40	0:0	6	)
forexpr	10:43	10:44	5	i ++
water	10:43	0:0	6	i
op	10:44	0:0	6	++
stmts	10:48	26:8	5	
water	10:48	0:0	6	{
decl	11:12	11:46	6	int	Y1
op	11:19	0:0	6	=
water	11:21	0:0	6	(
water	11:22	0:0	6	buf0
op	11:26	0:0	6	[
water	11:27	0:0	6	i
op	11:29	0:0	6	*
water	11:31	0:0	6	2
op	11:36	0:0	6	]
op	11:37	0:0	6	+
water	11:38	0:0	6	64
water	11:40	0:0	6	)
op	11:42	0:0	6	>>
water	11:45	0:0	6	7
decl	12:12	12:46	6	int	Y2
op	12:19	0:0	6	=
water	12:21	0:0	6	(
water	12:22	0:0	6	buf0
op	12:26	0:0	6	[
water	12:27	0:0	6	i
op	12:29	0:0	6	*
water	12:31	0:0	6	2
op	12:33	0:0	6	+
water	12:35	0:0	6	1
op	12:36	0:0	6	]
op	12:37	0:0	6	+
water	12:38	0:0	6	64
water	12:40	0:0	6	)
op	12:42	0:0	6	>>
water	12:45	0:0	6	7
decl	13:12	13:46	6	int	U
op	13:19	0:0	6	=
water	13:21	0:0	6	(
water	13:22	0:0	6	ubuf0
op	13:27	0:0	6	[
water	13:28	0:0	6	i
op	13:29	0:0	6	]
op	13:37	0:0	6	+
water	13:38	0:0	6	64
water	13:40	0:0	6	)
op	13:42	0:0	6	>>
water	13:45	0:0	6	7
decl	14:12	14:46	6	int	V
op	14:19	0:0	6	=
water	14:21	0:0	6	(
water	14:22	0:0	6	vbuf0
op	14:27	0:0	6	[
water	14:28	0:0	6	i
op	14:29	0:0	6	]
op	14:37	0:0	6	+
water	14:38	0:0	6	64
water	14:40	0:0	6	)
op	14:42	0:0	6	>>
water	14:45	0:0	6	7
if	15:12	20:12	6	(( Y1 | Y2 | U | V ) & 0 x100)
cond	15:16	15:37	7	( Y1 | Y2 | U | V ) & 0 x100
water	15:16	0:0	8	(
water	15:17	0:0	8	Y1
op	15:20	0:0	8	|
water	15:22	0:0	8	Y2
op	15:25	0:0	8	|
water	15:27	0:0	8	U
op	15:29	0:0	8	|
water	15:31	0:0	8	V
water	15:32	0:0	8	)
op	15:34	0:0	8	&
water	15:36	0:0	8	0
water	15:37	0:0	8	x100
stmts	15:43	20:12	7	
water	15:43	0:0	8	{
water	16:16	0:0	8	Y1
op	16:19	0:0	8	=
call	16:21	16:37	8	av_clip_uint8
arg	16:35	16:37	9	Y1
water	16:35	0:0	10	Y1
water	16:38	0:0	8	;
water	17:16	0:0	8	Y2
op	17:19	0:0	8	=
call	17:21	17:37	8	av_clip_uint8
arg	17:35	17:37	9	Y2
water	17:35	0:0	10	Y2
water	17:38	0:0	8	;
water	18:16	0:0	8	U
op	18:19	0:0	8	=
call	18:21	18:36	8	av_clip_uint8
arg	18:35	18:36	9	U
water	18:35	0:0	10	U
water	18:37	0:0	8	;
water	19:16	0:0	8	V
op	19:19	0:0	8	=
call	19:21	19:36	8	av_clip_uint8
arg	19:35	19:36	9	V
water	19:35	0:0	10	V
water	19:37	0:0	8	;
water	20:12	0:0	8	}
water	21:12	0:0	6	Y1
op	21:15	0:0	6	=
call	21:17	21:33	6	av_clip_uint8
arg	21:31	21:33	7	Y1
water	21:31	0:0	8	Y1
water	21:34	0:0	6	;
water	22:12	0:0	6	Y2
op	22:15	0:0	6	=
call	22:17	22:33	6	av_clip_uint8
arg	22:31	22:33	7	Y2
water	22:31	0:0	8	Y2
water	22:34	0:0	6	;
water	23:12	0:0	6	U
op	23:15	0:0	6	=
call	23:17	23:32	6	av_clip_uint8
arg	23:31	23:32	7	U
water	23:31	0:0	8	U
water	23:33	0:0	6	;
water	24:12	0:0	6	V
op	24:15	0:0	6	=
call	24:17	24:32	6	av_clip_uint8
arg	24:31	24:32	7	V
water	24:31	0:0	8	V
water	24:33	0:0	6	;
call	25:12	25:45	6	output_pixels
arg	25:26	25:31	7	i*4
water	25:26	0:0	8	i
op	25:28	0:0	8	*
water	25:30	0:0	8	4
arg	25:33	25:35	7	Y1
water	25:33	0:0	8	Y1
arg	25:37	25:38	7	U
water	25:37	0:0	8	U
arg	25:40	25:42	7	Y2
water	25:40	0:0	8	Y2
arg	25:44	25:45	7	V
water	25:44	0:0	8	V
water	25:46	0:0	6	;
water	26:8	0:0	6	}
water	27:4	0:0	4	}
else	27:6	46:4	2
stmts	27:11	46:4	3	
water	27:11	0:0	4	{
decl	28:8	28:56	4	const int16_t	*ubuf1
op	28:29	0:0	4	=
water	28:31	0:0	4	ubuf
op	28:35	0:0	4	[
water	28:36	0:0	4	1
op	28:37	0:0	4	]
water	28:38	0:0	4	,
decl	28:8	28:56	4	const int16_t	*vbuf1
op	28:47	0:0	4	=
water	28:49	0:0	4	vbuf
op	28:53	0:0	4	[
water	28:54	0:0	4	1
op	28:55	0:0	4	]
for	29:8	45:8	4	(i = 0 ;i < ( ( dstW + 1 ) >> 1 );i ++)
forinit	29:13	29:18	5	i = 0 ;
water	29:13	0:0	6	i
op	29:15	0:0	6	=
water	29:17	0:0	6	0
water	29:18	0:0	6	;
cond	29:20	29:40	5	i < ( ( dstW + 1 ) >> 1 )
water	29:20	0:0	6	i
op	29:22	0:0	6	<
water	29:24	0:0	6	(
water	29:25	0:0	6	(
water	29:26	0:0	6	dstW
op	29:31	0:0	6	+
water	29:33	0:0	6	1
water	29:34	0:0	6	)
op	29:36	0:0	6	>>
water	29:39	0:0	6	1
water	29:40	0:0	6	)
forexpr	29:43	29:44	5	i ++
water	29:43	0:0	6	i
op	29:44	0:0	6	++
stmts	29:48	45:8	5	
water	29:48	0:0	6	{
decl	30:12	30:51	6	int	Y1
op	30:19	0:0	6	=
water	30:21	0:0	6	(
water	30:22	0:0	6	buf0
op	30:26	0:0	6	[
water	30:27	0:0	6	i
op	30:29	0:0	6	*
water	30:31	0:0	6	2
op	30:36	0:0	6	]
op	30:41	0:0	6	+
water	30:43	0:0	6	64
water	30:45	0:0	6	)
op	30:47	0:0	6	>>
water	30:50	0:0	6	7
decl	31:12	31:51	6	int	Y2
op	31:19	0:0	6	=
water	31:21	0:0	6	(
water	31:22	0:0	6	buf0
op	31:26	0:0	6	[
water	31:27	0:0	6	i
op	31:29	0:0	6	*
water	31:31	0:0	6	2
op	31:33	0:0	6	+
water	31:35	0:0	6	1
op	31:36	0:0	6	]
op	31:41	0:0	6	+
water	31:43	0:0	6	64
water	31:45	0:0	6	)
op	31:47	0:0	6	>>
water	31:50	0:0	6	7
decl	32:12	32:51	6	int	U
op	32:19	0:0	6	=
water	32:21	0:0	6	(
water	32:22	0:0	6	ubuf0
op	32:27	0:0	6	[
water	32:28	0:0	6	i
op	32:29	0:0	6	]
op	32:31	0:0	6	+
water	32:33	0:0	6	ubuf1
op	32:38	0:0	6	[
water	32:39	0:0	6	i
op	32:40	0:0	6	]
op	32:41	0:0	6	+
water	32:42	0:0	6	128
water	32:45	0:0	6	)
op	32:47	0:0	6	>>
water	32:50	0:0	6	8
decl	33:12	33:51	6	int	V
op	33:19	0:0	6	=
water	33:21	0:0	6	(
water	33:22	0:0	6	vbuf0
op	33:27	0:0	6	[
water	33:28	0:0	6	i
op	33:29	0:0	6	]
op	33:31	0:0	6	+
water	33:33	0:0	6	vbuf1
op	33:38	0:0	6	[
water	33:39	0:0	6	i
op	33:40	0:0	6	]
op	33:41	0:0	6	+
water	33:42	0:0	6	128
water	33:45	0:0	6	)
op	33:47	0:0	6	>>
water	33:50	0:0	6	8
if	34:12	39:12	6	(( Y1 | Y2 | U | V ) & 0 x100)
cond	34:16	34:37	7	( Y1 | Y2 | U | V ) & 0 x100
water	34:16	0:0	8	(
water	34:17	0:0	8	Y1
op	34:20	0:0	8	|
water	34:22	0:0	8	Y2
op	34:25	0:0	8	|
water	34:27	0:0	8	U
op	34:29	0:0	8	|
water	34:31	0:0	8	V
water	34:32	0:0	8	)
op	34:34	0:0	8	&
water	34:36	0:0	8	0
water	34:37	0:0	8	x100
stmts	34:43	39:12	7	
water	34:43	0:0	8	{
water	35:16	0:0	8	Y1
op	35:19	0:0	8	=
call	35:21	35:37	8	av_clip_uint8
arg	35:35	35:37	9	Y1
water	35:35	0:0	10	Y1
water	35:38	0:0	8	;
water	36:16	0:0	8	Y2
op	36:19	0:0	8	=
call	36:21	36:37	8	av_clip_uint8
arg	36:35	36:37	9	Y2
water	36:35	0:0	10	Y2
water	36:38	0:0	8	;
water	37:16	0:0	8	U
op	37:19	0:0	8	=
call	37:21	37:36	8	av_clip_uint8
arg	37:35	37:36	9	U
water	37:35	0:0	10	U
water	37:37	0:0	8	;
water	38:16	0:0	8	V
op	38:19	0:0	8	=
call	38:21	38:36	8	av_clip_uint8
arg	38:35	38:36	9	V
water	38:35	0:0	10	V
water	38:37	0:0	8	;
water	39:12	0:0	8	}
water	40:12	0:0	6	Y1
op	40:15	0:0	6	=
call	40:17	40:33	6	av_clip_uint8
arg	40:31	40:33	7	Y1
water	40:31	0:0	8	Y1
water	40:34	0:0	6	;
water	41:12	0:0	6	Y2
op	41:15	0:0	6	=
call	41:17	41:33	6	av_clip_uint8
arg	41:31	41:33	7	Y2
water	41:31	0:0	8	Y2
water	41:34	0:0	6	;
water	42:12	0:0	6	U
op	42:15	0:0	6	=
call	42:17	42:32	6	av_clip_uint8
arg	42:31	42:32	7	U
water	42:31	0:0	8	U
water	42:33	0:0	6	;
water	43:12	0:0	6	V
op	43:15	0:0	6	=
call	43:17	43:32	6	av_clip_uint8
arg	43:31	43:32	7	V
water	43:31	0:0	8	V
water	43:33	0:0	6	;
call	44:12	44:45	6	output_pixels
arg	44:26	44:31	7	i*4
water	44:26	0:0	8	i
op	44:28	0:0	8	*
water	44:30	0:0	8	4
arg	44:33	44:35	7	Y1
water	44:33	0:0	8	Y1
arg	44:37	44:38	7	U
water	44:37	0:0	8	U
arg	44:40	44:42	7	Y2
water	44:40	0:0	8	Y2
arg	44:44	44:45	7	V
water	44:44	0:0	8	V
water	44:46	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}

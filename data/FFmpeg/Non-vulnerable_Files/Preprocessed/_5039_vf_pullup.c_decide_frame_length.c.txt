func	1:0	47:0	0	static int	decide_frame_length
params	1:30	0:0	1	
param	1:31	1:47	2	PullupContext *	s
stmnts	0:0	46:4	1	
decl	3:4	3:30	2	PullupField	*f0
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	first
decl	4:4	4:30	2	PullupField	*f1
op	4:20	0:0	2	=
water	4:22	0:0	2	f0
op	4:24	0:0	2	->
water	4:26	0:0	2	next
decl	5:4	5:30	2	PullupField	*f2
op	5:20	0:0	2	=
water	5:22	0:0	2	f1
op	5:24	0:0	2	->
water	5:26	0:0	2	next
decl	6:4	6:18	2	PullupField	*f
decl	7:4	7:15	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:15	2	int	l
water	7:12	0:0	2	,
decl	7:4	7:15	2	int	n
if	8:4	9:16	2	(queue_length (s -> first ,s -> last ) < 4)
cond	8:8	8:42	3	queue_length (s -> first ,s -> last ) < 4
call	8:8	8:38	4	queue_length
arg	8:21	8:29	5	s->first
water	8:21	0:0	6	s
op	8:22	0:0	6	->
water	8:24	0:0	6	first
arg	8:31	8:38	5	s->last
water	8:31	0:0	6	s
op	8:32	0:0	6	->
water	8:34	0:0	6	last
op	8:40	0:0	4	<
water	8:42	0:0	4	4
stmts	9:8	9:16	3	
return	9:8	9:16	4	0
water	9:15	0:0	5	0
water	10:4	0:0	2	f
op	10:6	0:0	2	=
water	10:8	0:0	2	s
op	10:9	0:0	2	->
water	10:11	0:0	2	first
water	10:16	0:0	2	;
water	11:4	0:0	2	n
op	11:6	0:0	2	=
call	11:8	11:31	2	queue_length
arg	11:21	11:22	3	f
water	11:21	0:0	4	f
arg	11:24	11:31	3	s->last
water	11:24	0:0	4	s
op	11:25	0:0	4	->
water	11:27	0:0	4	last
water	11:32	0:0	2	;
for	12:4	17:4	2	(i = 0 ;i < n - 1;i ++)
forinit	12:9	12:14	3	i = 0 ;
water	12:9	0:0	4	i
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	;
cond	12:16	12:24	3	i < n - 1
water	12:16	0:0	4	i
op	12:18	0:0	4	<
water	12:20	0:0	4	n
op	12:22	0:0	4	-
water	12:24	0:0	4	1
forexpr	12:27	12:28	3	i ++
water	12:27	0:0	4	i
op	12:28	0:0	4	++
stmts	12:32	17:4	3	
water	12:32	0:0	4	{
if	13:8	14:32	4	(i < n - 3)
cond	13:12	13:20	5	i < n - 3
water	13:12	0:0	6	i
op	13:14	0:0	6	<
water	13:16	0:0	6	n
op	13:18	0:0	6	-
water	13:20	0:0	6	3
stmts	14:12	14:32	5	
call	14:12	14:31	6	compute_breaks
arg	14:27	14:28	7	s
water	14:27	0:0	8	s
arg	14:30	14:31	7	f
water	14:30	0:0	8	f
water	14:32	0:0	6	;
call	15:8	15:29	4	compute_affinity
arg	15:25	15:26	5	s
water	15:25	0:0	6	s
arg	15:28	15:29	5	f
water	15:28	0:0	6	f
water	15:30	0:0	4	;
water	16:8	0:0	4	f
op	16:10	0:0	4	=
water	16:12	0:0	4	f
op	16:13	0:0	4	->
water	16:15	0:0	4	next
water	16:19	0:0	4	;
water	17:4	0:0	4	}
if	18:4	19:16	2	(f0 -> affinity == - 1)
cond	18:8	18:25	3	f0 -> affinity == - 1
water	18:8	0:0	4	f0
op	18:10	0:0	4	->
water	18:12	0:0	4	affinity
op	18:21	0:0	4	==
op	18:24	0:0	4	-
water	18:25	0:0	4	1
stmts	19:8	19:16	3	
return	19:8	19:16	4	1
water	19:15	0:0	5	1
water	20:4	0:0	2	l
op	20:6	0:0	2	=
call	20:8	20:30	2	find_first_break
arg	20:25	20:27	3	f0
water	20:25	0:0	4	f0
arg	20:29	20:30	3	3
water	20:29	0:0	4	3
water	20:31	0:0	2	;
if	21:4	22:13	2	(l == 1 && s -> strict_breaks < 0)
cond	21:8	21:37	3	l == 1 && s -> strict_breaks < 0
water	21:8	0:0	4	l
op	21:10	0:0	4	==
water	21:13	0:0	4	1
op	21:15	0:0	4	&&
water	21:18	0:0	4	s
op	21:19	0:0	4	->
water	21:21	0:0	4	strict_breaks
op	21:35	0:0	4	<
water	21:37	0:0	4	0
stmts	22:8	22:13	3	
water	22:8	0:0	4	l
op	22:10	0:0	4	=
water	22:12	0:0	4	0
water	22:13	0:0	4	;
switch	23:4	46:4	2	(l)
cond	23:12	23:12	3	l
water	23:12	0:0	4	l
stmts	23:15	46:4	3	
water	23:15	0:0	4	{
label	24:4	24:10	4	case 1 :
return	25:8	25:84	4	1+(s->strict_breaks<1&&f0->affinity==1&&f1->affinity==-1)
water	25:15	0:0	5	1
op	25:17	0:0	5	+
water	25:19	0:0	5	(
water	25:20	0:0	5	s
op	25:21	0:0	5	->
water	25:23	0:0	5	strict_breaks
op	25:37	0:0	5	<
water	25:39	0:0	5	1
op	25:41	0:0	5	&&
water	25:44	0:0	5	f0
op	25:46	0:0	5	->
water	25:48	0:0	5	affinity
op	25:57	0:0	5	==
water	25:60	0:0	5	1
op	25:62	0:0	5	&&
water	25:65	0:0	5	f1
op	25:67	0:0	5	->
water	25:69	0:0	5	affinity
op	25:78	0:0	5	==
op	25:81	0:0	5	-
water	25:82	0:0	5	1
water	25:83	0:0	5	)
label	26:4	26:10	4	case 2 :
if	28:8	31:20	4	(s -> strict_pairs && ( f0 -> prev -> breaks & BREAK_RIGHT ) && ( f2 -> breaks & BREAK_LEFT ) && ( f0 -> affinity != 1 || f1 -> affinity != - 1 ))
cond	28:12	30:55	5	s -> strict_pairs && ( f0 -> prev -> breaks & BREAK_RIGHT ) && ( f2 -> breaks & BREAK_LEFT ) && ( f0 -> affinity != 1 || f1 -> affinity != - 1 )
water	28:12	0:0	6	s
op	28:13	0:0	6	->
water	28:15	0:0	6	strict_pairs
op	29:12	0:0	6	&&
water	29:15	0:0	6	(
water	29:16	0:0	6	f0
op	29:18	0:0	6	->
water	29:20	0:0	6	prev
op	29:24	0:0	6	->
water	29:26	0:0	6	breaks
op	29:33	0:0	6	&
water	29:35	0:0	6	BREAK_RIGHT
water	29:46	0:0	6	)
op	29:48	0:0	6	&&
water	29:51	0:0	6	(
water	29:52	0:0	6	f2
op	29:54	0:0	6	->
water	29:56	0:0	6	breaks
op	29:63	0:0	6	&
water	29:65	0:0	6	BREAK_LEFT
water	29:75	0:0	6	)
op	30:12	0:0	6	&&
water	30:15	0:0	6	(
water	30:16	0:0	6	f0
op	30:18	0:0	6	->
water	30:20	0:0	6	affinity
op	30:29	0:0	6	!=
water	30:32	0:0	6	1
op	30:34	0:0	6	||
water	30:37	0:0	6	f1
op	30:39	0:0	6	->
water	30:41	0:0	6	affinity
op	30:50	0:0	6	!=
op	30:53	0:0	6	-
water	30:54	0:0	6	1
water	30:55	0:0	6	)
stmts	31:12	31:20	5	
return	31:12	31:20	6	1
water	31:19	0:0	7	1
return	32:8	32:38	4	1+(f1->affinity!=1)
water	32:15	0:0	5	1
op	32:17	0:0	5	+
water	32:19	0:0	5	(
water	32:20	0:0	5	f1
op	32:22	0:0	5	->
water	32:24	0:0	5	affinity
op	32:33	0:0	5	!=
water	32:36	0:0	5	1
water	32:37	0:0	5	)
label	33:4	33:10	4	case 3 :
return	34:8	34:38	4	2+(f2->affinity!=1)
water	34:15	0:0	5	2
op	34:17	0:0	5	+
water	34:19	0:0	5	(
water	34:20	0:0	5	f2
op	34:22	0:0	5	->
water	34:24	0:0	5	affinity
op	34:33	0:0	5	!=
water	34:36	0:0	5	1
water	34:37	0:0	5	)
label	35:4	35:11	4	default :
if	37:8	38:20	4	(f1 -> affinity == 1)
cond	37:12	37:28	5	f1 -> affinity == 1
water	37:12	0:0	6	f1
op	37:14	0:0	6	->
water	37:16	0:0	6	affinity
op	37:25	0:0	6	==
water	37:28	0:0	6	1
stmts	38:12	38:20	5	
return	38:12	38:20	6	1
water	38:19	0:0	7	1
else	39:8	40:20	4
stmts	39:13	40:20	5	
if	39:13	40:20	6	(f1 -> affinity == - 1)
cond	39:17	39:34	7	f1 -> affinity == - 1
water	39:17	0:0	8	f1
op	39:19	0:0	8	->
water	39:21	0:0	8	affinity
op	39:30	0:0	8	==
op	39:33	0:0	8	-
water	39:34	0:0	8	1
stmts	40:12	40:20	7	
return	40:12	40:20	8	2
water	40:19	0:0	9	2
else	41:8	43:8	4
stmts	41:13	43:8	5	
if	41:13	43:8	6	(f2 -> affinity == - 1)
cond	41:17	41:34	7	f2 -> affinity == - 1
water	41:17	0:0	8	f2
op	41:19	0:0	8	->
water	41:21	0:0	8	affinity
op	41:30	0:0	8	==
op	41:33	0:0	8	-
water	41:34	0:0	8	1
stmts	41:37	43:8	7	
water	41:37	0:0	8	{
return	42:12	42:46	8	(f0->affinity==1)?3:1
water	42:19	0:0	9	(
water	42:20	0:0	9	f0
op	42:22	0:0	9	->
water	42:24	0:0	9	affinity
op	42:33	0:0	9	==
water	42:36	0:0	9	1
water	42:37	0:0	9	)
water	42:39	0:0	9	?
water	42:41	0:0	9	3
water	42:43	0:0	9	:
water	42:45	0:0	9	1
water	43:8	0:0	8	}
else	43:10	45:8	4
stmts	43:15	45:8	5	
water	43:15	0:0	6	{
return	44:12	44:20	6	2
water	44:19	0:0	7	2
water	45:8	0:0	6	}
water	46:4	0:0	4	}

func	1:0	40:0	0	static int	upload_texture
params	1:25	0:0	1	
param	1:26	1:42	2	SDL_Texture *	tex
param	1:44	1:58	2	AVFrame *	frame
param	1:60	1:95	2	struct SwsContext * *	img_convert_ctx
stmnts	0:0	39:14	1	
decl	2:4	2:15	2	int	ret
op	2:12	0:0	2	=
water	2:14	0:0	2	0
switch	3:4	38:4	2	(frame -> format)
cond	3:12	3:19	3	frame -> format
water	3:12	0:0	4	frame
op	3:17	0:0	4	->
water	3:19	0:0	4	format
stmts	3:27	38:4	3	
water	3:27	0:0	4	{
label	4:8	4:31	4	case AV_PIX_FMT_YUV420P :
if	5:12	8:12	4	(frame -> linesize [ 0 ] < 0 || frame -> linesize [ 1 ] < 0 || frame -> linesize [ 2 ] < 0)
cond	5:16	5:89	5	frame -> linesize [ 0 ] < 0 || frame -> linesize [ 1 ] < 0 || frame -> linesize [ 2 ] < 0
water	5:16	0:0	6	frame
op	5:21	0:0	6	->
water	5:23	0:0	6	linesize
op	5:31	0:0	6	[
water	5:32	0:0	6	0
op	5:33	0:0	6	]
op	5:35	0:0	6	<
water	5:37	0:0	6	0
op	5:39	0:0	6	||
water	5:42	0:0	6	frame
op	5:47	0:0	6	->
water	5:49	0:0	6	linesize
op	5:57	0:0	6	[
water	5:58	0:0	6	1
op	5:59	0:0	6	]
op	5:61	0:0	6	<
water	5:63	0:0	6	0
op	5:65	0:0	6	||
water	5:68	0:0	6	frame
op	5:73	0:0	6	->
water	5:75	0:0	6	linesize
op	5:83	0:0	6	[
water	5:84	0:0	6	2
op	5:85	0:0	6	]
op	5:87	0:0	6	<
water	5:89	0:0	6	0
stmts	5:92	8:12	5	
water	5:92	0:0	6	{
call	6:16	6:90	6	av_log
arg	6:23	6:27	7	NULL
water	6:23	0:0	8	NULL
arg	6:29	6:41	7	AV_LOG_ERROR
water	6:29	0:0	8	AV_LOG_ERROR
arg	6:43	6:90	7	"Negative linesize is not supported for YUV.\n"
water	6:43	0:0	8	"Negative linesize is not supported for YUV.\n"
water	6:91	0:0	6	;
return	7:16	7:25	6	-1
op	7:23	0:0	7	-
water	7:24	0:0	7	1
water	8:12	0:0	6	}
water	9:12	0:0	4	ret
op	9:16	0:0	4	=
call	9:18	11:84	4	SDL_UpdateYUVTexture
arg	9:39	9:42	5	tex
water	9:39	0:0	6	tex
arg	9:44	9:48	5	NULL
water	9:44	0:0	6	NULL
arg	9:50	9:64	5	frame->data[0]
water	9:50	0:0	6	frame
op	9:55	0:0	6	->
water	9:57	0:0	6	data
op	9:61	0:0	6	[
water	9:62	0:0	6	0
op	9:63	0:0	6	]
arg	9:66	9:84	5	frame->linesize[0]
water	9:66	0:0	6	frame
op	9:71	0:0	6	->
water	9:73	0:0	6	linesize
op	9:81	0:0	6	[
water	9:82	0:0	6	0
op	9:83	0:0	6	]
arg	10:50	10:64	5	frame->data[1]
water	10:50	0:0	6	frame
op	10:55	0:0	6	->
water	10:57	0:0	6	data
op	10:61	0:0	6	[
water	10:62	0:0	6	1
op	10:63	0:0	6	]
arg	10:66	10:84	5	frame->linesize[1]
water	10:66	0:0	6	frame
op	10:71	0:0	6	->
water	10:73	0:0	6	linesize
op	10:81	0:0	6	[
water	10:82	0:0	6	1
op	10:83	0:0	6	]
arg	11:50	11:64	5	frame->data[2]
water	11:50	0:0	6	frame
op	11:55	0:0	6	->
water	11:57	0:0	6	data
op	11:61	0:0	6	[
water	11:62	0:0	6	2
op	11:63	0:0	6	]
arg	11:66	11:84	5	frame->linesize[2]
water	11:66	0:0	6	frame
op	11:71	0:0	6	->
water	11:73	0:0	6	linesize
op	11:81	0:0	6	[
water	11:82	0:0	6	2
op	11:83	0:0	6	]
water	11:85	0:0	4	;
break	12:12	12:17	4	
label	13:8	13:28	4	case AV_PIX_FMT_BGRA :
if	14:12	16:12	4	(frame -> linesize [ 0 ] < 0)
cond	14:16	14:37	5	frame -> linesize [ 0 ] < 0
water	14:16	0:0	6	frame
op	14:21	0:0	6	->
water	14:23	0:0	6	linesize
op	14:31	0:0	6	[
water	14:32	0:0	6	0
op	14:33	0:0	6	]
op	14:35	0:0	6	<
water	14:37	0:0	6	0
stmts	14:40	16:12	5	
water	14:40	0:0	6	{
water	15:16	0:0	6	ret
op	15:20	0:0	6	=
call	15:22	15:129	6	SDL_UpdateTexture
arg	15:40	15:43	7	tex
water	15:40	0:0	8	tex
arg	15:45	15:49	7	NULL
water	15:45	0:0	8	NULL
arg	15:51	15:108	7	frame->data[0]+frame->linesize[0]*(frame->height-1)
water	15:51	0:0	8	frame
op	15:56	0:0	8	->
water	15:58	0:0	8	data
op	15:62	0:0	8	[
water	15:63	0:0	8	0
op	15:64	0:0	8	]
op	15:66	0:0	8	+
water	15:68	0:0	8	frame
op	15:73	0:0	8	->
water	15:75	0:0	8	linesize
op	15:83	0:0	8	[
water	15:84	0:0	8	0
op	15:85	0:0	8	]
op	15:87	0:0	8	*
water	15:89	0:0	8	(
water	15:90	0:0	8	frame
op	15:95	0:0	8	->
water	15:97	0:0	8	height
op	15:104	0:0	8	-
water	15:106	0:0	8	1
water	15:107	0:0	8	)
arg	15:110	15:129	7	-frame->linesize[0]
op	15:110	0:0	8	-
water	15:111	0:0	8	frame
op	15:116	0:0	8	->
water	15:118	0:0	8	linesize
op	15:126	0:0	8	[
water	15:127	0:0	8	0
op	15:128	0:0	8	]
water	15:130	0:0	6	;
water	16:12	0:0	6	}
else	16:14	18:12	4
stmts	16:19	18:12	5	
water	16:19	0:0	6	{
water	17:16	0:0	6	ret
op	17:20	0:0	6	=
call	17:22	17:85	6	SDL_UpdateTexture
arg	17:40	17:43	7	tex
water	17:40	0:0	8	tex
arg	17:45	17:49	7	NULL
water	17:45	0:0	8	NULL
arg	17:51	17:65	7	frame->data[0]
water	17:51	0:0	8	frame
op	17:56	0:0	8	->
water	17:58	0:0	8	data
op	17:62	0:0	8	[
water	17:63	0:0	8	0
op	17:64	0:0	8	]
arg	17:67	17:85	7	frame->linesize[0]
water	17:67	0:0	8	frame
op	17:72	0:0	8	->
water	17:74	0:0	8	linesize
op	17:82	0:0	8	[
water	17:83	0:0	8	0
op	17:84	0:0	8	]
water	17:86	0:0	6	;
water	18:12	0:0	6	}
break	19:12	19:17	4	
label	20:8	20:15	4	default :
op	22:12	0:0	4	*
water	22:13	0:0	4	img_convert_ctx
op	22:29	0:0	4	=
call	22:31	24:60	4	sws_getCachedContext
arg	22:52	22:68	5	*img_convert_ctx
op	22:52	0:0	6	*
water	22:53	0:0	6	img_convert_ctx
arg	23:16	23:28	5	frame->width
water	23:16	0:0	6	frame
op	23:21	0:0	6	->
water	23:23	0:0	6	width
arg	23:30	23:43	5	frame->height
water	23:30	0:0	6	frame
op	23:35	0:0	6	->
water	23:37	0:0	6	height
arg	23:45	23:58	5	frame->format
water	23:45	0:0	6	frame
op	23:50	0:0	6	->
water	23:52	0:0	6	format
arg	23:60	23:72	5	frame->width
water	23:60	0:0	6	frame
op	23:65	0:0	6	->
water	23:67	0:0	6	width
arg	23:74	23:87	5	frame->height
water	23:74	0:0	6	frame
op	23:79	0:0	6	->
water	23:81	0:0	6	height
arg	24:16	24:31	5	AV_PIX_FMT_BGRA
water	24:16	0:0	6	AV_PIX_FMT_BGRA
arg	24:33	24:42	5	sws_flags
water	24:33	0:0	6	sws_flags
arg	24:44	24:48	5	NULL
water	24:44	0:0	6	NULL
arg	24:50	24:54	5	NULL
water	24:50	0:0	6	NULL
arg	24:56	24:60	5	NULL
water	24:56	0:0	6	NULL
water	24:61	0:0	4	;
if	25:12	33:12	4	(* img_convert_ctx != NULL)
cond	25:16	25:36	5	* img_convert_ctx != NULL
op	25:16	0:0	6	*
water	25:17	0:0	6	img_convert_ctx
op	25:33	0:0	6	!=
water	25:36	0:0	6	NULL
stmts	25:42	33:12	5	
water	25:42	0:0	6	{
decl	26:16	26:34	6	uint8_t	*pixels[4]
decl	27:16	27:28	6	int	pitch[4]
if	28:16	32:16	6	(!SDL_LockTexture (tex ,NULL ,( void * * ) pixels ,pitch ))
cond	28:20	28:70	7	!SDL_LockTexture (tex ,NULL ,( void * * ) pixels ,pitch )
op	28:20	0:0	8	!
call	28:21	28:70	8	SDL_LockTexture
arg	28:37	28:40	9	tex
water	28:37	0:0	10	tex
arg	28:42	28:46	9	NULL
water	28:42	0:0	10	NULL
arg	28:48	28:63	9	(void**)pixels
water	28:48	0:0	10	(
water	28:49	0:0	10	void
op	28:54	0:0	10	*
op	28:55	0:0	10	*
water	28:56	0:0	10	)
water	28:57	0:0	10	pixels
arg	28:65	28:70	9	pitch
water	28:65	0:0	10	pitch
stmts	28:73	32:16	7	
water	28:73	0:0	8	{
call	29:20	30:61	8	sws_scale
arg	29:30	29:46	9	*img_convert_ctx
op	29:30	0:0	10	*
water	29:31	0:0	10	img_convert_ctx
arg	29:48	29:84	9	(constuint8_t*const*)frame->data
water	29:48	0:0	10	(
water	29:49	0:0	10	const
water	29:55	0:0	10	uint8_t
op	29:63	0:0	10	*
water	29:65	0:0	10	const
op	29:71	0:0	10	*
water	29:72	0:0	10	)
water	29:73	0:0	10	frame
op	29:78	0:0	10	->
water	29:80	0:0	10	data
arg	29:86	29:101	9	frame->linesize
water	29:86	0:0	10	frame
op	29:91	0:0	10	->
water	29:93	0:0	10	linesize
arg	30:30	30:31	9	0
water	30:30	0:0	10	0
arg	30:33	30:46	9	frame->height
water	30:33	0:0	10	frame
op	30:38	0:0	10	->
water	30:40	0:0	10	height
arg	30:48	30:54	9	pixels
water	30:48	0:0	10	pixels
arg	30:56	30:61	9	pitch
water	30:56	0:0	10	pitch
water	30:62	0:0	8	;
call	31:20	31:41	8	SDL_UnlockTexture
arg	31:38	31:41	9	tex
water	31:38	0:0	10	tex
water	31:42	0:0	8	;
water	32:16	0:0	8	}
water	33:12	0:0	6	}
else	33:14	36:12	4
stmts	33:19	36:12	5	
water	33:19	0:0	6	{
call	34:16	34:87	6	av_log
arg	34:23	34:27	7	NULL
water	34:23	0:0	8	NULL
arg	34:29	34:41	7	AV_LOG_FATAL
water	34:29	0:0	8	AV_LOG_FATAL
arg	34:43	34:87	7	"Cannot initialize the conversion context\n"
water	34:43	0:0	8	"Cannot initialize the conversion context\n"
water	34:88	0:0	6	;
water	35:16	0:0	6	ret
op	35:20	0:0	6	=
op	35:22	0:0	6	-
water	35:23	0:0	6	1
water	35:24	0:0	6	;
water	36:12	0:0	6	}
break	37:12	37:17	4	
water	38:4	0:0	4	}
return	39:4	39:14	2	ret
water	39:11	0:0	3	ret

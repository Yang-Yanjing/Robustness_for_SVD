func	1:0	15:0	0	static void	fill_iplimage_from_frame
params	1:36	0:0	1	
param	1:37	1:50	2	IplImage *	img
param	1:52	1:72	2	const AVFrame *	frame
param	1:74	1:99	2	enum AVPixelFormat	pixfmt
stmnts	0:0	14:39	1	
decl	3:4	3:20	2	IplImage	*tmpimg
decl	4:4	4:26	2	int	depth
water	4:13	0:0	2	,
decl	4:4	4:26	2	int	channels_nb
if	5:4	5:83	2	(pixfmt == AV_PIX_FMT_GRAY8)
cond	5:13	5:23	3	pixfmt == AV_PIX_FMT_GRAY8
water	5:13	0:0	4	pixfmt
op	5:20	0:0	4	==
water	5:23	0:0	4	AV_PIX_FMT_GRAY8
stmts	5:41	5:83	3	
water	5:41	0:0	4	{
water	5:43	0:0	4	depth
op	5:49	0:0	4	=
water	5:51	0:0	4	IPL_DEPTH_8U
water	5:63	0:0	4	;
water	5:66	0:0	4	channels_nb
op	5:78	0:0	4	=
water	5:80	0:0	4	1
water	5:81	0:0	4	;
water	5:83	0:0	4	}
else	6:4	6:83	2
stmts	6:9	6:83	3	
if	6:9	6:83	4	(pixfmt == AV_PIX_FMT_BGRA)
cond	6:13	6:23	5	pixfmt == AV_PIX_FMT_BGRA
water	6:13	0:0	6	pixfmt
op	6:20	0:0	6	==
water	6:23	0:0	6	AV_PIX_FMT_BGRA
stmts	6:41	6:83	5	
water	6:41	0:0	6	{
water	6:43	0:0	6	depth
op	6:49	0:0	6	=
water	6:51	0:0	6	IPL_DEPTH_8U
water	6:63	0:0	6	;
water	6:66	0:0	6	channels_nb
op	6:78	0:0	6	=
water	6:80	0:0	6	4
water	6:81	0:0	6	;
water	6:83	0:0	6	}
else	7:4	7:83	2
stmts	7:9	7:83	3	
if	7:9	7:83	4	(pixfmt == AV_PIX_FMT_BGR24)
cond	7:13	7:23	5	pixfmt == AV_PIX_FMT_BGR24
water	7:13	0:0	6	pixfmt
op	7:20	0:0	6	==
water	7:23	0:0	6	AV_PIX_FMT_BGR24
stmts	7:41	7:83	5	
water	7:41	0:0	6	{
water	7:43	0:0	6	depth
op	7:49	0:0	6	=
water	7:51	0:0	6	IPL_DEPTH_8U
water	7:63	0:0	6	;
water	7:66	0:0	6	channels_nb
op	7:78	0:0	6	=
water	7:80	0:0	6	3
water	7:81	0:0	6	;
water	7:83	0:0	6	}
else	8:4	8:15	2
stmts	8:9	8:15	3	
return	8:9	8:15	4	
water	9:4	0:0	2	tmpimg
op	9:11	0:0	2	=
call	9:13	9:90	2	cvCreateImageHeader
arg	9:33	9:70	3	(CvSize){frame->width,frame->height}
water	9:33	0:0	4	(
water	9:34	0:0	4	CvSize
water	9:40	0:0	4	)
water	9:41	0:0	4	{
water	9:42	0:0	4	frame
op	9:47	0:0	4	->
water	9:49	0:0	4	width
water	9:54	0:0	4	,
water	9:56	0:0	4	frame
op	9:61	0:0	4	->
water	9:63	0:0	4	height
water	9:69	0:0	4	}
arg	9:72	9:77	3	depth
water	9:72	0:0	4	depth
arg	9:79	9:90	3	channels_nb
water	9:79	0:0	4	channels_nb
water	9:91	0:0	2	;
op	10:4	0:0	2	*
water	10:5	0:0	2	img
op	10:9	0:0	2	=
op	10:11	0:0	2	*
water	10:12	0:0	2	tmpimg
water	10:18	0:0	2	;
water	11:4	0:0	2	img
op	11:7	0:0	2	->
water	11:9	0:0	2	imageData
op	11:19	0:0	2	=
water	11:21	0:0	2	img
op	11:24	0:0	2	->
water	11:26	0:0	2	imageDataOrigin
op	11:42	0:0	2	=
water	11:44	0:0	2	frame
op	11:49	0:0	2	->
water	11:51	0:0	2	data
op	11:55	0:0	2	[
water	11:56	0:0	2	0
op	11:57	0:0	2	]
water	11:58	0:0	2	;
water	12:4	0:0	2	img
op	12:7	0:0	2	->
water	12:9	0:0	2	dataOrder
op	12:19	0:0	2	=
water	12:21	0:0	2	IPL_DATA_ORDER_PIXEL
water	12:41	0:0	2	;
water	13:4	0:0	2	img
op	13:7	0:0	2	->
water	13:9	0:0	2	origin
op	13:19	0:0	2	=
water	13:21	0:0	2	IPL_ORIGIN_TL
water	13:34	0:0	2	;
water	14:4	0:0	2	img
op	14:7	0:0	2	->
water	14:9	0:0	2	widthStep
op	14:19	0:0	2	=
water	14:21	0:0	2	frame
op	14:26	0:0	2	->
water	14:28	0:0	2	linesize
op	14:36	0:0	2	[
water	14:37	0:0	2	0
op	14:38	0:0	2	]
water	14:39	0:0	2	;

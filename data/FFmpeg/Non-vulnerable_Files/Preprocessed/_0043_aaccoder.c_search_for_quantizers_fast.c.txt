func	1:0	32:0	0	static void	search_for_quantizers_fast
params	1:38	0:0	1	
param	1:39	1:60	2	AVCodecContext *	avctx
param	1:62	1:78	2	AACEncContext *	s
param	2:39	2:64	2	SingleChannelElement *	sce
param	3:39	3:57	2	const float	lambda
stmnts	0:0	31:62	1	
decl	5:4	5:19	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:19	2	int	w
water	5:12	0:0	2	,
decl	5:4	5:19	2	int	w2
water	5:16	0:0	2	,
decl	5:4	5:19	2	int	g
decl	6:4	6:18	2	int	minq
op	6:13	0:0	2	=
water	6:15	0:0	2	255
call	7:4	7:46	2	memset
arg	7:11	7:22	3	sce->sf_idx
water	7:11	0:0	4	sce
op	7:14	0:0	4	->
water	7:16	0:0	4	sf_idx
arg	7:24	7:25	3	0
water	7:24	0:0	4	0
arg	7:27	7:46	3	sizeof(sce->sf_idx)
op	7:27	0:0	4	sizeof
water	7:33	0:0	4	(
water	7:34	0:0	4	sce
op	7:37	0:0	4	->
water	7:39	0:0	4	sf_idx
water	7:45	0:0	4	)
water	7:47	0:0	2	;
for	8:4	22:4	2	(w = 0 ;w < sce -> ics . num_windows;w += sce -> ics . group_len [ w ])
forinit	8:9	8:14	3	w = 0 ;
water	8:9	0:0	4	w
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:29	3	w < sce -> ics . num_windows
water	8:16	0:0	4	w
op	8:18	0:0	4	<
water	8:20	0:0	4	sce
op	8:23	0:0	4	->
water	8:25	0:0	4	ics
op	8:28	0:0	4	.
water	8:29	0:0	4	num_windows
forexpr	8:42	8:67	3	w += sce -> ics . group_len [ w ]
water	8:42	0:0	4	w
op	8:44	0:0	4	+=
water	8:47	0:0	4	sce
op	8:50	0:0	4	->
water	8:52	0:0	4	ics
op	8:55	0:0	4	.
water	8:56	0:0	4	group_len
op	8:65	0:0	4	[
water	8:66	0:0	4	w
op	8:67	0:0	4	]
stmts	8:70	22:4	3	
water	8:70	0:0	4	{
for	9:8	21:8	4	(g = 0 ;g < sce -> ics . num_swb;g ++)
forinit	9:13	9:18	5	g = 0 ;
water	9:13	0:0	6	g
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:33	5	g < sce -> ics . num_swb
water	9:20	0:0	6	g
op	9:22	0:0	6	<
water	9:24	0:0	6	sce
op	9:27	0:0	6	->
water	9:29	0:0	6	ics
op	9:32	0:0	6	.
water	9:33	0:0	6	num_swb
forexpr	9:42	9:43	5	g ++
water	9:42	0:0	6	g
op	9:43	0:0	6	++
stmts	9:47	21:8	5	
water	9:47	0:0	6	{
for	10:12	20:12	6	(w2 = 0 ;w2 < sce -> ics . group_len [ w ];w2 ++)
forinit	10:17	10:23	7	w2 = 0 ;
water	10:17	0:0	8	w2
op	10:20	0:0	8	=
water	10:22	0:0	8	0
water	10:23	0:0	8	;
cond	10:25	10:50	7	w2 < sce -> ics . group_len [ w ]
water	10:25	0:0	8	w2
op	10:28	0:0	8	<
water	10:30	0:0	8	sce
op	10:33	0:0	8	->
water	10:35	0:0	8	ics
op	10:38	0:0	8	.
water	10:39	0:0	8	group_len
op	10:48	0:0	8	[
water	10:49	0:0	8	w
op	10:50	0:0	8	]
forexpr	10:53	10:55	7	w2 ++
water	10:53	0:0	8	w2
op	10:55	0:0	8	++
stmts	10:59	20:12	7	
water	10:59	0:0	8	{
decl	11:16	11:83	8	FFPsyBand	*band
op	11:32	0:0	8	=
op	11:34	0:0	8	&
water	11:35	0:0	8	s
op	11:36	0:0	8	->
water	11:38	0:0	8	psy
op	11:41	0:0	8	.
water	11:42	0:0	8	ch
op	11:44	0:0	8	[
water	11:45	0:0	8	s
op	11:46	0:0	8	->
water	11:48	0:0	8	cur_channel
op	11:59	0:0	8	]
op	11:60	0:0	8	.
water	11:61	0:0	8	psy_bands
op	11:70	0:0	8	[
water	11:71	0:0	8	(
water	11:72	0:0	8	w
op	11:73	0:0	8	+
water	11:74	0:0	8	w2
water	11:76	0:0	8	)
op	11:77	0:0	8	*
water	11:78	0:0	8	16
op	11:80	0:0	8	+
water	11:81	0:0	8	g
op	11:82	0:0	8	]
if	12:16	15:16	8	(band -> energy <= band -> threshold)
cond	12:20	12:42	9	band -> energy <= band -> threshold
water	12:20	0:0	10	band
op	12:24	0:0	10	->
water	12:26	0:0	10	energy
op	12:33	0:0	10	<=
water	12:36	0:0	10	band
op	12:40	0:0	10	->
water	12:42	0:0	10	threshold
stmts	12:53	15:16	9	
water	12:53	0:0	10	{
water	13:20	0:0	10	sce
op	13:23	0:0	10	->
water	13:25	0:0	10	sf_idx
op	13:31	0:0	10	[
water	13:32	0:0	10	(
water	13:33	0:0	10	w
op	13:34	0:0	10	+
water	13:35	0:0	10	w2
water	13:37	0:0	10	)
op	13:38	0:0	10	*
water	13:39	0:0	10	16
op	13:41	0:0	10	+
water	13:42	0:0	10	g
op	13:43	0:0	10	]
op	13:45	0:0	10	=
water	13:47	0:0	10	218
water	13:50	0:0	10	;
water	14:20	0:0	10	sce
op	14:23	0:0	10	->
water	14:25	0:0	10	zeroes
op	14:31	0:0	10	[
water	14:32	0:0	10	(
water	14:33	0:0	10	w
op	14:34	0:0	10	+
water	14:35	0:0	10	w2
water	14:37	0:0	10	)
op	14:38	0:0	10	*
water	14:39	0:0	10	16
op	14:41	0:0	10	+
water	14:42	0:0	10	g
op	14:43	0:0	10	]
op	14:45	0:0	10	=
water	14:47	0:0	10	1
water	14:48	0:0	10	;
water	15:16	0:0	10	}
else	15:18	18:16	8
stmts	15:23	18:16	9	
water	15:23	0:0	10	{
water	16:20	0:0	10	sce
op	16:23	0:0	10	->
water	16:25	0:0	10	sf_idx
op	16:31	0:0	10	[
water	16:32	0:0	10	(
water	16:33	0:0	10	w
op	16:34	0:0	10	+
water	16:35	0:0	10	w2
water	16:37	0:0	10	)
op	16:38	0:0	10	*
water	16:39	0:0	10	16
op	16:41	0:0	10	+
water	16:42	0:0	10	g
op	16:43	0:0	10	]
op	16:45	0:0	10	=
call	16:47	16:118	10	av_clip
arg	16:55	16:109	11	SCALE_ONE_POS-SCALE_DIV_512+log2f(band->threshold)
water	16:55	0:0	12	SCALE_ONE_POS
op	16:69	0:0	12	-
water	16:71	0:0	12	SCALE_DIV_512
op	16:85	0:0	12	+
call	16:87	16:108	12	log2f
arg	16:93	16:108	13	band->threshold
water	16:93	0:0	14	band
op	16:97	0:0	14	->
water	16:99	0:0	14	threshold
arg	16:111	16:113	11	80
water	16:111	0:0	12	80
arg	16:115	16:118	11	218
water	16:115	0:0	12	218
water	16:119	0:0	10	;
water	17:20	0:0	10	sce
op	17:23	0:0	10	->
water	17:25	0:0	10	zeroes
op	17:31	0:0	10	[
water	17:32	0:0	10	(
water	17:33	0:0	10	w
op	17:34	0:0	10	+
water	17:35	0:0	10	w2
water	17:37	0:0	10	)
op	17:38	0:0	10	*
water	17:39	0:0	10	16
op	17:41	0:0	10	+
water	17:42	0:0	10	g
op	17:43	0:0	10	]
op	17:45	0:0	10	=
water	17:47	0:0	10	0
water	17:48	0:0	10	;
water	18:16	0:0	10	}
water	19:16	0:0	8	minq
op	19:21	0:0	8	=
call	19:23	19:59	8	FFMIN
arg	19:29	19:33	9	minq
water	19:29	0:0	10	minq
arg	19:35	19:59	9	sce->sf_idx[(w+w2)*16+g]
water	19:35	0:0	10	sce
op	19:38	0:0	10	->
water	19:40	0:0	10	sf_idx
op	19:46	0:0	10	[
water	19:47	0:0	10	(
water	19:48	0:0	10	w
op	19:49	0:0	10	+
water	19:50	0:0	10	w2
water	19:52	0:0	10	)
op	19:53	0:0	10	*
water	19:54	0:0	10	16
op	19:56	0:0	10	+
water	19:57	0:0	10	g
op	19:58	0:0	10	]
water	19:60	0:0	8	;
water	20:12	0:0	8	}
water	21:8	0:0	6	}
water	22:4	0:0	4	}
for	23:4	26:4	2	(i = 0 ;i < 128;i ++)
forinit	23:9	23:14	3	i = 0 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	0
water	23:14	0:0	4	;
cond	23:16	23:20	3	i < 128
water	23:16	0:0	4	i
op	23:18	0:0	4	<
water	23:20	0:0	4	128
forexpr	23:25	23:26	3	i ++
water	23:25	0:0	4	i
op	23:26	0:0	4	++
stmts	23:30	26:4	3	
water	23:30	0:0	4	{
water	24:8	0:0	4	sce
op	24:11	0:0	4	->
water	24:13	0:0	4	sf_idx
op	24:19	0:0	4	[
water	24:20	0:0	4	i
op	24:21	0:0	4	]
op	24:23	0:0	4	=
water	24:25	0:0	4	140
water	24:28	0:0	4	;
water	26:4	0:0	4	}
for	28:4	31:62	2	(w = 0 ;w < sce -> ics . num_windows;w += sce -> ics . group_len [ w ])
forinit	28:9	28:14	3	w = 0 ;
water	28:9	0:0	4	w
op	28:11	0:0	4	=
water	28:13	0:0	4	0
water	28:14	0:0	4	;
cond	28:16	28:29	3	w < sce -> ics . num_windows
water	28:16	0:0	4	w
op	28:18	0:0	4	<
water	28:20	0:0	4	sce
op	28:23	0:0	4	->
water	28:25	0:0	4	ics
op	28:28	0:0	4	.
water	28:29	0:0	4	num_windows
forexpr	28:42	28:67	3	w += sce -> ics . group_len [ w ]
water	28:42	0:0	4	w
op	28:44	0:0	4	+=
water	28:47	0:0	4	sce
op	28:50	0:0	4	->
water	28:52	0:0	4	ics
op	28:55	0:0	4	.
water	28:56	0:0	4	group_len
op	28:65	0:0	4	[
water	28:66	0:0	4	w
op	28:67	0:0	4	]
stmts	29:8	31:62	3	
for	29:8	31:62	4	(g = 0 ;g < sce -> ics . num_swb;g ++)
forinit	29:13	29:18	5	g = 0 ;
water	29:13	0:0	6	g
op	29:15	0:0	6	=
water	29:17	0:0	6	0
water	29:18	0:0	6	;
cond	29:21	29:34	5	g < sce -> ics . num_swb
water	29:21	0:0	6	g
op	29:23	0:0	6	<
water	29:25	0:0	6	sce
op	29:28	0:0	6	->
water	29:30	0:0	6	ics
op	29:33	0:0	6	.
water	29:34	0:0	6	num_swb
forexpr	29:43	29:44	5	g ++
water	29:43	0:0	6	g
op	29:44	0:0	6	++
stmts	30:12	31:62	5	
for	30:12	31:62	6	(w2 = 1 ;w2 < sce -> ics . group_len [ w ];w2 ++)
forinit	30:17	30:23	7	w2 = 1 ;
water	30:17	0:0	8	w2
op	30:20	0:0	8	=
water	30:22	0:0	8	1
water	30:23	0:0	8	;
cond	30:25	30:50	7	w2 < sce -> ics . group_len [ w ]
water	30:25	0:0	8	w2
op	30:28	0:0	8	<
water	30:30	0:0	8	sce
op	30:33	0:0	8	->
water	30:35	0:0	8	ics
op	30:38	0:0	8	.
water	30:39	0:0	8	group_len
op	30:48	0:0	8	[
water	30:49	0:0	8	w
op	30:50	0:0	8	]
forexpr	30:53	30:55	7	w2 ++
water	30:53	0:0	8	w2
op	30:55	0:0	8	++
stmts	31:16	31:62	7	
water	31:16	0:0	8	sce
op	31:19	0:0	8	->
water	31:21	0:0	8	sf_idx
op	31:27	0:0	8	[
water	31:28	0:0	8	(
water	31:29	0:0	8	w
op	31:30	0:0	8	+
water	31:31	0:0	8	w2
water	31:33	0:0	8	)
op	31:34	0:0	8	*
water	31:35	0:0	8	16
op	31:37	0:0	8	+
water	31:38	0:0	8	g
op	31:39	0:0	8	]
op	31:41	0:0	8	=
water	31:43	0:0	8	sce
op	31:46	0:0	8	->
water	31:48	0:0	8	sf_idx
op	31:54	0:0	8	[
water	31:55	0:0	8	w
op	31:56	0:0	8	*
water	31:57	0:0	8	16
op	31:59	0:0	8	+
water	31:60	0:0	8	g
op	31:61	0:0	8	]
water	31:62	0:0	8	;

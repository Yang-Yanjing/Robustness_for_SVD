func	1:0	42:0	0	static void	set_work_frame_pts
params	1:30	0:0	1	
param	1:31	1:51	2	AVFilterContext *	ctx
stmnts	0:0	41:65	1	
decl	3:4	3:35	2	FrameRateContext	*s
op	3:24	0:0	2	=
water	3:26	0:0	2	ctx
op	3:29	0:0	2	->
water	3:31	0:0	2	priv
decl	4:4	4:43	2	int64_t	pts
water	4:15	0:0	2	,
decl	4:4	4:43	2	int64_t	average_srce_pts_delta
op	4:40	0:0	2	=
water	4:42	0:0	2	0
call	5:4	5:41	2	ff_dlog
arg	5:12	5:15	3	ctx
water	5:12	0:0	4	ctx
arg	5:17	5:41	3	"set_work_frame_pts()\n"
water	5:17	0:0	4	"set_work_frame_pts()\n"
water	5:42	0:0	2	;
call	6:4	6:31	2	av_assert0
arg	6:15	6:31	3	s->srce[s->next]
water	6:15	0:0	4	s
op	6:16	0:0	4	->
water	6:18	0:0	4	srce
op	6:22	0:0	4	[
water	6:23	0:0	4	s
op	6:24	0:0	4	->
water	6:26	0:0	4	next
op	6:30	0:0	4	]
water	6:32	0:0	2	;
call	7:4	7:31	2	av_assert0
arg	7:15	7:31	3	s->srce[s->crnt]
water	7:15	0:0	4	s
op	7:16	0:0	4	->
water	7:18	0:0	4	srce
op	7:22	0:0	4	[
water	7:23	0:0	4	s
op	7:24	0:0	4	->
water	7:26	0:0	4	crnt
op	7:30	0:0	4	]
water	7:32	0:0	2	;
call	8:4	8:88	2	ff_dlog
arg	8:12	8:15	3	ctx
water	8:12	0:0	4	ctx
arg	8:17	8:65	3	"set_work_frame_pts() srce crnt pts:%"PRId64"\n"
water	8:17	0:0	4	"set_work_frame_pts() srce crnt pts:%"
water	8:55	0:0	4	PRId64
water	8:61	0:0	4	"\n"
arg	8:67	8:88	3	s->srce[s->crnt]->pts
water	8:67	0:0	4	s
op	8:68	0:0	4	->
water	8:70	0:0	4	srce
op	8:74	0:0	4	[
water	8:75	0:0	4	s
op	8:76	0:0	4	->
water	8:78	0:0	4	crnt
op	8:82	0:0	4	]
op	8:83	0:0	4	->
water	8:85	0:0	4	pts
water	8:89	0:0	2	;
call	9:4	9:88	2	ff_dlog
arg	9:12	9:15	3	ctx
water	9:12	0:0	4	ctx
arg	9:17	9:65	3	"set_work_frame_pts() srce next pts:%"PRId64"\n"
water	9:17	0:0	4	"set_work_frame_pts() srce next pts:%"
water	9:55	0:0	4	PRId64
water	9:61	0:0	4	"\n"
arg	9:67	9:88	3	s->srce[s->next]->pts
water	9:67	0:0	4	s
op	9:68	0:0	4	->
water	9:70	0:0	4	srce
op	9:74	0:0	4	[
water	9:75	0:0	4	s
op	9:76	0:0	4	->
water	9:78	0:0	4	next
op	9:82	0:0	4	]
op	9:83	0:0	4	->
water	9:85	0:0	4	pts
water	9:89	0:0	2	;
if	10:4	11:93	2	(s -> srce [ s -> prev ])
cond	10:8	10:23	3	s -> srce [ s -> prev ]
water	10:8	0:0	4	s
op	10:9	0:0	4	->
water	10:11	0:0	4	srce
op	10:15	0:0	4	[
water	10:16	0:0	4	s
op	10:17	0:0	4	->
water	10:19	0:0	4	prev
op	10:23	0:0	4	]
stmts	11:8	11:93	3	
call	11:8	11:92	4	ff_dlog
arg	11:16	11:19	5	ctx
water	11:16	0:0	6	ctx
arg	11:21	11:69	5	"set_work_frame_pts() srce prev pts:%"PRId64"\n"
water	11:21	0:0	6	"set_work_frame_pts() srce prev pts:%"
water	11:59	0:0	6	PRId64
water	11:65	0:0	6	"\n"
arg	11:71	11:92	5	s->srce[s->prev]->pts
water	11:71	0:0	6	s
op	11:72	0:0	6	->
water	11:74	0:0	6	srce
op	11:78	0:0	6	[
water	11:79	0:0	6	s
op	11:80	0:0	6	->
water	11:82	0:0	6	prev
op	11:86	0:0	6	]
op	11:87	0:0	6	->
water	11:89	0:0	6	pts
water	11:93	0:0	4	;
water	12:4	0:0	2	average_srce_pts_delta
op	12:27	0:0	2	=
water	12:29	0:0	2	s
op	12:30	0:0	2	->
water	12:32	0:0	2	average_srce_pts_dest_delta
water	12:59	0:0	2	;
call	13:4	13:100	2	ff_dlog
arg	13:12	13:15	3	ctx
water	13:12	0:0	4	ctx
arg	13:17	13:76	3	"set_work_frame_pts() initial average srce pts:%"PRId64"\n"
water	13:17	0:0	4	"set_work_frame_pts() initial average srce pts:%"
water	13:66	0:0	4	PRId64
water	13:72	0:0	4	"\n"
arg	13:78	13:100	3	average_srce_pts_delta
water	13:78	0:0	4	average_srce_pts_delta
water	13:101	0:0	2	;
if	15:4	17:4	2	(( pts = ( s -> srce [ s -> next ] -> pts - s -> srce [ s -> crnt ] -> pts ) ))
cond	15:8	15:62	3	( pts = ( s -> srce [ s -> next ] -> pts - s -> srce [ s -> crnt ] -> pts ) )
water	15:8	0:0	4	(
water	15:9	0:0	4	pts
op	15:13	0:0	4	=
water	15:15	0:0	4	(
water	15:16	0:0	4	s
op	15:17	0:0	4	->
water	15:19	0:0	4	srce
op	15:23	0:0	4	[
water	15:24	0:0	4	s
op	15:25	0:0	4	->
water	15:27	0:0	4	next
op	15:31	0:0	4	]
op	15:32	0:0	4	->
water	15:34	0:0	4	pts
op	15:38	0:0	4	-
water	15:40	0:0	4	s
op	15:41	0:0	4	->
water	15:43	0:0	4	srce
op	15:47	0:0	4	[
water	15:48	0:0	4	s
op	15:49	0:0	4	->
water	15:51	0:0	4	crnt
op	15:55	0:0	4	]
op	15:56	0:0	4	->
water	15:58	0:0	4	pts
water	15:61	0:0	4	)
water	15:62	0:0	4	)
stmts	15:65	17:4	3	
water	15:65	0:0	4	{
water	16:8	0:0	4	average_srce_pts_delta
op	16:31	0:0	4	=
water	16:33	0:0	4	average_srce_pts_delta
water	16:55	0:0	4	?
water	16:56	0:0	4	(
water	16:57	0:0	4	(
water	16:58	0:0	4	average_srce_pts_delta
op	16:80	0:0	4	+
water	16:81	0:0	4	pts
water	16:84	0:0	4	)
op	16:85	0:0	4	>>
water	16:87	0:0	4	1
water	16:88	0:0	4	)
water	16:89	0:0	4	:
water	16:90	0:0	4	pts
water	16:93	0:0	4	;
water	17:4	0:0	4	}
else	17:6	19:4	2
stmts	17:11	19:4	3	
if	17:11	19:4	4	(s -> srce [ s -> prev ] && ( pts = ( s -> srce [ s -> crnt ] -> pts - s -> srce [ s -> prev ] -> pts ) ))
cond	17:15	17:89	5	s -> srce [ s -> prev ] && ( pts = ( s -> srce [ s -> crnt ] -> pts - s -> srce [ s -> prev ] -> pts ) )
water	17:15	0:0	6	s
op	17:16	0:0	6	->
water	17:18	0:0	6	srce
op	17:22	0:0	6	[
water	17:23	0:0	6	s
op	17:24	0:0	6	->
water	17:26	0:0	6	prev
op	17:30	0:0	6	]
op	17:32	0:0	6	&&
water	17:35	0:0	6	(
water	17:36	0:0	6	pts
op	17:40	0:0	6	=
water	17:42	0:0	6	(
water	17:43	0:0	6	s
op	17:44	0:0	6	->
water	17:46	0:0	6	srce
op	17:50	0:0	6	[
water	17:51	0:0	6	s
op	17:52	0:0	6	->
water	17:54	0:0	6	crnt
op	17:58	0:0	6	]
op	17:59	0:0	6	->
water	17:61	0:0	6	pts
op	17:65	0:0	6	-
water	17:67	0:0	6	s
op	17:68	0:0	6	->
water	17:70	0:0	6	srce
op	17:74	0:0	6	[
water	17:75	0:0	6	s
op	17:76	0:0	6	->
water	17:78	0:0	6	prev
op	17:82	0:0	6	]
op	17:83	0:0	6	->
water	17:85	0:0	6	pts
water	17:88	0:0	6	)
water	17:89	0:0	6	)
stmts	17:92	19:4	5	
water	17:92	0:0	6	{
water	18:8	0:0	6	average_srce_pts_delta
op	18:31	0:0	6	=
water	18:33	0:0	6	average_srce_pts_delta
water	18:55	0:0	6	?
water	18:56	0:0	6	(
water	18:57	0:0	6	(
water	18:58	0:0	6	average_srce_pts_delta
op	18:80	0:0	6	+
water	18:81	0:0	6	pts
water	18:84	0:0	6	)
op	18:85	0:0	6	>>
water	18:87	0:0	6	1
water	18:88	0:0	6	)
water	18:89	0:0	6	:
water	18:90	0:0	6	pts
water	18:93	0:0	6	;
water	19:4	0:0	6	}
water	20:4	0:0	2	s
op	20:5	0:0	2	->
water	20:7	0:0	2	average_srce_pts_dest_delta
op	20:35	0:0	2	=
call	20:37	20:110	2	av_rescale_q
arg	20:50	20:72	3	average_srce_pts_delta
water	20:50	0:0	4	average_srce_pts_delta
arg	20:74	20:91	3	s->srce_time_base
water	20:74	0:0	4	s
op	20:75	0:0	4	->
water	20:77	0:0	4	srce_time_base
arg	20:93	20:110	3	s->dest_time_base
water	20:93	0:0	4	s
op	20:94	0:0	4	->
water	20:96	0:0	4	dest_time_base
water	20:111	0:0	2	;
call	21:4	21:92	2	ff_dlog
arg	21:12	21:15	3	ctx
water	21:12	0:0	4	ctx
arg	21:17	21:68	3	"set_work_frame_pts() average srce pts:%"PRId64"\n"
water	21:17	0:0	4	"set_work_frame_pts() average srce pts:%"
water	21:58	0:0	4	PRId64
water	21:64	0:0	4	"\n"
arg	21:70	21:92	3	average_srce_pts_delta
water	21:70	0:0	4	average_srce_pts_delta
water	21:93	0:0	2	;
call	22:4	23:88	2	ff_dlog
arg	22:12	22:15	3	ctx
water	22:12	0:0	4	ctx
arg	22:17	22:92	3	"set_work_frame_pts() average srce pts:%"PRId64" at dest time base:%u/%u\n"
water	22:17	0:0	4	"set_work_frame_pts() average srce pts:%"
water	22:58	0:0	4	PRId64
water	22:64	0:0	4	" at dest time base:%u/%u\n"
arg	23:12	23:42	3	s->average_srce_pts_dest_delta
water	23:12	0:0	4	s
op	23:13	0:0	4	->
water	23:15	0:0	4	average_srce_pts_dest_delta
arg	23:44	23:65	3	s->dest_time_base.num
water	23:44	0:0	4	s
op	23:45	0:0	4	->
water	23:47	0:0	4	dest_time_base
op	23:61	0:0	4	.
water	23:62	0:0	4	num
arg	23:67	23:88	3	s->dest_time_base.den
water	23:67	0:0	4	s
op	23:68	0:0	4	->
water	23:70	0:0	4	dest_time_base
op	23:84	0:0	4	.
water	23:85	0:0	4	den
water	23:89	0:0	2	;
call	24:4	24:31	2	set_srce_frame_dest_pts
arg	24:28	24:31	3	ctx
water	24:28	0:0	4	ctx
water	24:32	0:0	2	;
if	25:4	34:4	2	(ctx -> inputs [ 0 ] && ! s -> average_dest_pts_delta)
cond	25:8	25:30	3	ctx -> inputs [ 0 ] && ! s -> average_dest_pts_delta
water	25:8	0:0	4	ctx
op	25:11	0:0	4	->
water	25:13	0:0	4	inputs
op	25:19	0:0	4	[
water	25:20	0:0	4	0
op	25:21	0:0	4	]
op	25:23	0:0	4	&&
op	25:26	0:0	4	!
water	25:27	0:0	4	s
op	25:28	0:0	4	->
water	25:30	0:0	4	average_dest_pts_delta
stmts	25:54	34:4	3	
water	25:54	0:0	4	{
decl	26:8	26:85	4	int64_t	d
op	26:18	0:0	4	=
call	26:20	26:84	5	av_q2d
arg	26:27	26:84	6	av_inv_q(av_mul_q(s->srce_time_base,s->dest_frame_rate))
call	26:27	26:83	7	av_inv_q
arg	26:36	26:83	8	av_mul_q(s->srce_time_base,s->dest_frame_rate)
call	26:36	26:82	9	av_mul_q
arg	26:45	26:62	10	s->srce_time_base
water	26:45	0:0	11	s
op	26:46	0:0	11	->
water	26:48	0:0	11	srce_time_base
arg	26:64	26:82	10	s->dest_frame_rate
water	26:64	0:0	11	s
op	26:65	0:0	11	->
water	26:67	0:0	11	dest_frame_rate
if	27:8	30:8	4	(d == 0)
cond	27:12	27:17	5	d == 0
water	27:12	0:0	6	d
op	27:14	0:0	6	==
water	27:17	0:0	6	0
stmts	27:20	30:8	5	
water	27:20	0:0	6	{
call	28:12	28:100	6	av_log
arg	28:19	28:22	7	ctx
water	28:19	0:0	8	ctx
arg	28:24	28:38	7	AV_LOG_WARNING
water	28:24	0:0	8	AV_LOG_WARNING
arg	28:40	28:100	7	"Buggy path reached, use settb filter before this filter!\n"
water	28:40	0:0	8	"Buggy path reached, use settb filter before this filter!\n"
water	28:101	0:0	6	;
water	29:12	0:0	6	d
op	29:14	0:0	6	=
call	29:16	29:78	6	av_q2d
arg	29:23	29:78	7	av_mul_q(ctx->inputs[0]->time_base,s->dest_frame_rate)
call	29:23	29:77	8	av_mul_q
arg	29:32	29:57	9	ctx->inputs[0]->time_base
water	29:32	0:0	10	ctx
op	29:35	0:0	10	->
water	29:37	0:0	10	inputs
op	29:43	0:0	10	[
water	29:44	0:0	10	0
op	29:45	0:0	10	]
op	29:46	0:0	10	->
water	29:48	0:0	10	time_base
arg	29:59	29:77	9	s->dest_frame_rate
water	29:59	0:0	10	s
op	29:60	0:0	10	->
water	29:62	0:0	10	dest_frame_rate
water	29:79	0:0	6	;
water	30:8	0:0	6	}
water	31:8	0:0	4	s
op	31:9	0:0	4	->
water	31:11	0:0	4	average_dest_pts_delta
op	31:34	0:0	4	=
call	31:36	31:88	4	av_rescale_q
arg	31:49	31:50	5	d
water	31:49	0:0	6	d
arg	31:52	31:69	5	s->srce_time_base
water	31:52	0:0	6	s
op	31:53	0:0	6	->
water	31:55	0:0	6	srce_time_base
arg	31:71	31:88	5	s->dest_time_base
water	31:71	0:0	6	s
op	31:72	0:0	6	->
water	31:74	0:0	6	dest_time_base
water	31:89	0:0	4	;
call	32:8	32:79	4	ff_dlog
arg	32:16	32:19	5	ctx
water	32:16	0:0	6	ctx
arg	32:21	32:79	5	"set_frame_pts() average output pts from input timebase\n"
water	32:21	0:0	6	"set_frame_pts() average output pts from input timebase\n"
water	32:80	0:0	4	;
call	33:8	33:105	4	ff_dlog
arg	33:16	33:19	5	ctx
water	33:16	0:0	6	ctx
arg	33:21	33:78	5	"set_work_frame_pts() average dest pts delta:%"PRId64"\n"
water	33:21	0:0	6	"set_work_frame_pts() average dest pts delta:%"
water	33:68	0:0	6	PRId64
water	33:74	0:0	6	"\n"
arg	33:80	33:105	5	s->average_dest_pts_delta
water	33:80	0:0	6	s
op	33:81	0:0	6	->
water	33:83	0:0	6	average_dest_pts_delta
water	33:106	0:0	4	;
water	34:4	0:0	4	}
if	35:4	37:4	2	(! s -> dest_frame_num)
cond	35:8	35:12	3	! s -> dest_frame_num
op	35:8	0:0	4	!
water	35:9	0:0	4	s
op	35:10	0:0	4	->
water	35:12	0:0	4	dest_frame_num
stmts	35:28	37:4	3	
water	35:28	0:0	4	{
water	36:8	0:0	4	s
op	36:9	0:0	4	->
water	36:11	0:0	4	pts
op	36:15	0:0	4	=
water	36:17	0:0	4	s
op	36:18	0:0	4	->
water	36:20	0:0	4	last_dest_frame_pts
op	36:40	0:0	4	=
water	36:42	0:0	4	s
op	36:43	0:0	4	->
water	36:45	0:0	4	srce_pts_dest
op	36:58	0:0	4	[
water	36:59	0:0	4	s
op	36:60	0:0	4	->
water	36:62	0:0	4	crnt
op	36:66	0:0	4	]
water	36:67	0:0	4	;
water	37:4	0:0	4	}
else	37:6	39:4	2
stmts	37:11	39:4	3	
water	37:11	0:0	4	{
water	38:8	0:0	4	s
op	38:9	0:0	4	->
water	38:11	0:0	4	pts
op	38:15	0:0	4	=
water	38:17	0:0	4	s
op	38:18	0:0	4	->
water	38:20	0:0	4	last_dest_frame_pts
op	38:40	0:0	4	+
water	38:42	0:0	4	s
op	38:43	0:0	4	->
water	38:45	0:0	4	average_dest_pts_delta
water	38:67	0:0	4	;
water	39:4	0:0	4	}
call	40:4	41:64	2	ff_dlog
arg	40:12	40:15	3	ctx
water	40:12	0:0	4	ctx
arg	40:17	40:90	3	"set_work_frame_pts() calculated pts:%"PRId64" at dest time base:%u/%u\n"
water	40:17	0:0	4	"set_work_frame_pts() calculated pts:%"
water	40:56	0:0	4	PRId64
water	40:62	0:0	4	" at dest time base:%u/%u\n"
arg	41:12	41:18	3	s->pts
water	41:12	0:0	4	s
op	41:13	0:0	4	->
water	41:15	0:0	4	pts
arg	41:20	41:41	3	s->dest_time_base.num
water	41:20	0:0	4	s
op	41:21	0:0	4	->
water	41:23	0:0	4	dest_time_base
op	41:37	0:0	4	.
water	41:38	0:0	4	num
arg	41:43	41:64	3	s->dest_time_base.den
water	41:43	0:0	4	s
op	41:44	0:0	4	->
water	41:46	0:0	4	dest_time_base
op	41:60	0:0	4	.
water	41:61	0:0	4	den
water	41:65	0:0	2	;

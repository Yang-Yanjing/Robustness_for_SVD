func	1:0	25:0	0	static void	fill_picture
params	1:24	0:0	1	
param	1:25	1:45	2	AVFilterContext *	ctx
param	1:47	1:62	2	AVFrame *	picref
stmnts	0:0	24:4	1	
decl	3:4	3:41	2	CellAutoContext	*cellauto
op	3:30	0:0	2	=
water	3:32	0:0	2	ctx
op	3:35	0:0	2	->
water	3:37	0:0	2	priv
decl	4:4	4:28	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:28	2	int	j
water	4:12	0:0	2	,
decl	4:4	4:28	2	int	k
water	4:15	0:0	2	,
decl	4:4	4:28	2	int	row_idx
op	4:25	0:0	2	=
water	4:27	0:0	2	0
decl	5:4	5:33	2	uint8_t	*p0
op	5:16	0:0	2	=
water	5:18	0:0	2	picref
op	5:24	0:0	2	->
water	5:26	0:0	2	data
op	5:30	0:0	2	[
water	5:31	0:0	2	0
op	5:32	0:0	2	]
if	6:4	8:59	2	(cellauto -> scroll && cellauto -> generation >= cellauto -> h)
cond	6:8	6:62	3	cellauto -> scroll && cellauto -> generation >= cellauto -> h
water	6:8	0:0	4	cellauto
op	6:16	0:0	4	->
water	6:18	0:0	4	scroll
op	6:25	0:0	4	&&
water	6:28	0:0	4	cellauto
op	6:36	0:0	4	->
water	6:38	0:0	4	generation
op	6:49	0:0	4	>=
water	6:52	0:0	4	cellauto
op	6:60	0:0	4	->
water	6:62	0:0	4	h
stmts	8:8	8:59	3	
water	8:8	0:0	4	row_idx
op	8:16	0:0	4	=
water	8:18	0:0	4	(
water	8:19	0:0	4	cellauto
op	8:27	0:0	4	->
water	8:29	0:0	4	buf_row_idx
op	8:41	0:0	4	+
water	8:43	0:0	4	1
water	8:44	0:0	4	)
op	8:46	0:0	4	%
water	8:48	0:0	4	cellauto
op	8:56	0:0	4	->
water	8:58	0:0	4	h
water	8:59	0:0	4	;
for	10:4	24:4	2	(i = 0 ;i < cellauto -> h;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:30	3	i < cellauto -> h
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	cellauto
op	10:28	0:0	4	->
water	10:30	0:0	4	h
forexpr	10:33	10:34	3	i ++
water	10:33	0:0	4	i
op	10:34	0:0	4	++
stmts	10:38	24:4	3	
water	10:38	0:0	4	{
decl	11:8	11:24	4	uint8_t	byte
op	11:21	0:0	4	=
water	11:23	0:0	4	0
decl	12:8	12:58	4	uint8_t	*row
op	12:21	0:0	4	=
water	12:23	0:0	4	cellauto
op	12:31	0:0	4	->
water	12:33	0:0	4	buf
op	12:37	0:0	4	+
water	12:39	0:0	4	row_idx
op	12:46	0:0	4	*
water	12:47	0:0	4	cellauto
op	12:55	0:0	4	->
water	12:57	0:0	4	w
decl	13:8	13:23	4	uint8_t	*p
op	13:19	0:0	4	=
water	13:21	0:0	4	p0
for	14:8	21:8	4	(k = 0 , j = 0 ;j < cellauto -> w;j ++)
forinit	14:13	14:25	5	k = 0 , j = 0 ;
water	14:13	0:0	6	k
op	14:15	0:0	6	=
water	14:17	0:0	6	0
water	14:18	0:0	6	,
water	14:20	0:0	6	j
op	14:22	0:0	6	=
water	14:24	0:0	6	0
water	14:25	0:0	6	;
cond	14:27	14:41	5	j < cellauto -> w
water	14:27	0:0	6	j
op	14:29	0:0	6	<
water	14:31	0:0	6	cellauto
op	14:39	0:0	6	->
water	14:41	0:0	6	w
forexpr	14:44	14:45	5	j ++
water	14:44	0:0	6	j
op	14:45	0:0	6	++
stmts	14:49	21:8	5	
water	14:49	0:0	6	{
water	15:12	0:0	6	byte
op	15:17	0:0	6	|=
water	15:20	0:0	6	row
op	15:23	0:0	6	[
water	15:24	0:0	6	j
op	15:25	0:0	6	]
op	15:26	0:0	6	<<
water	15:28	0:0	6	(
water	15:29	0:0	6	7
op	15:30	0:0	6	-
water	15:31	0:0	6	k
op	15:32	0:0	6	++
water	15:34	0:0	6	)
water	15:35	0:0	6	;
if	16:12	20:12	6	(k == 8 || j == cellauto -> w - 1)
cond	16:16	16:41	7	k == 8 || j == cellauto -> w - 1
water	16:16	0:0	8	k
op	16:17	0:0	8	==
water	16:19	0:0	8	8
op	16:21	0:0	8	||
water	16:24	0:0	8	j
op	16:26	0:0	8	==
water	16:29	0:0	8	cellauto
op	16:37	0:0	8	->
water	16:39	0:0	8	w
op	16:40	0:0	8	-
water	16:41	0:0	8	1
stmts	16:44	20:12	7	
water	16:44	0:0	8	{
water	17:16	0:0	8	k
op	17:18	0:0	8	=
water	17:20	0:0	8	0
water	17:21	0:0	8	;
op	18:16	0:0	8	*
water	18:17	0:0	8	p
op	18:18	0:0	8	++
op	18:21	0:0	8	=
water	18:23	0:0	8	byte
water	18:27	0:0	8	;
water	19:16	0:0	8	byte
op	19:21	0:0	8	=
water	19:23	0:0	8	0
water	19:24	0:0	8	;
water	20:12	0:0	8	}
water	21:8	0:0	6	}
water	22:8	0:0	4	row_idx
op	22:16	0:0	4	=
water	22:18	0:0	4	(
water	22:19	0:0	4	row_idx
op	22:27	0:0	4	+
water	22:29	0:0	4	1
water	22:30	0:0	4	)
op	22:32	0:0	4	%
water	22:34	0:0	4	cellauto
op	22:42	0:0	4	->
water	22:44	0:0	4	h
water	22:45	0:0	4	;
water	23:8	0:0	4	p0
op	23:11	0:0	4	+=
water	23:14	0:0	4	picref
op	23:20	0:0	4	->
water	23:22	0:0	4	linesize
op	23:30	0:0	4	[
water	23:31	0:0	4	0
op	23:32	0:0	4	]
water	23:33	0:0	4	;
water	24:4	0:0	4	}

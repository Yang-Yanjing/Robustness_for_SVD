func	1:0	43:0	0	static int	open_filter_param
params	1:28	0:0	1	
param	1:29	1:43	2	FilterParam *	f
param	1:45	1:54	2	int	width
param	1:56	1:66	2	int	height
param	1:68	1:90	2	unsigned int	sws_flags
stmnts	0:0	42:12	1	
decl	3:4	3:18	2	SwsVector	*vec
decl	4:4	4:19	2	SwsFilter	sws_f
decl	5:4	5:15	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:15	2	int	x
water	5:12	0:0	2	,
decl	5:4	5:15	2	int	y
decl	6:4	6:36	2	int	linesize
op	6:17	0:0	2	=
call	6:19	6:35	3	FFALIGN
arg	6:27	6:32	4	width
water	6:27	0:0	5	width
arg	6:34	6:35	4	8
water	6:34	0:0	5	8
water	7:4	0:0	2	f
op	7:5	0:0	2	->
water	7:7	0:0	2	pre_filter_buf
op	7:22	0:0	2	=
call	7:24	7:51	2	av_malloc
arg	7:34	7:51	3	linesize*height
water	7:34	0:0	4	linesize
op	7:43	0:0	4	*
water	7:45	0:0	4	height
water	7:52	0:0	2	;
if	8:4	9:30	2	(! f -> pre_filter_buf)
cond	8:8	8:12	3	! f -> pre_filter_buf
op	8:8	0:0	4	!
water	8:9	0:0	4	f
op	8:10	0:0	4	->
water	8:12	0:0	4	pre_filter_buf
stmts	9:8	9:30	3	
return	9:8	9:30	4	AVERROR(ENOMEM)
call	9:15	9:29	5	AVERROR
arg	9:23	9:29	6	ENOMEM
water	9:23	0:0	7	ENOMEM
water	10:4	0:0	2	f
op	10:5	0:0	2	->
water	10:7	0:0	2	pre_filter_linesize
op	10:27	0:0	2	=
water	10:29	0:0	2	linesize
water	10:37	0:0	2	;
water	11:4	0:0	2	vec
op	11:8	0:0	2	=
call	11:10	11:61	2	sws_getGaussianVec
arg	11:29	11:49	3	f->pre_filter_radius
water	11:29	0:0	4	f
op	11:30	0:0	4	->
water	11:32	0:0	4	pre_filter_radius
arg	11:51	11:61	3	f->quality
water	11:51	0:0	4	f
op	11:52	0:0	4	->
water	11:54	0:0	4	quality
water	11:62	0:0	2	;
water	12:4	0:0	2	sws_f
op	12:9	0:0	2	.
water	12:10	0:0	2	lumH
op	12:15	0:0	2	=
water	12:17	0:0	2	sws_f
op	12:22	0:0	2	.
water	12:23	0:0	2	lumV
op	12:28	0:0	2	=
water	12:30	0:0	2	vec
water	12:33	0:0	2	;
water	13:4	0:0	2	sws_f
op	13:9	0:0	2	.
water	13:10	0:0	2	chrH
op	13:15	0:0	2	=
water	13:17	0:0	2	sws_f
op	13:22	0:0	2	.
water	13:23	0:0	2	chrV
op	13:28	0:0	2	=
water	13:30	0:0	2	NULL
water	13:34	0:0	2	;
water	14:4	0:0	2	f
op	14:5	0:0	2	->
water	14:7	0:0	2	pre_filter_context
op	14:26	0:0	2	=
call	14:28	16:72	2	sws_getContext
arg	14:43	14:48	3	width
water	14:43	0:0	4	width
arg	14:50	14:56	3	height
water	14:50	0:0	4	height
arg	14:58	14:74	3	AV_PIX_FMT_GRAY8
water	14:58	0:0	4	AV_PIX_FMT_GRAY8
arg	15:43	15:48	3	width
water	15:43	0:0	4	width
arg	15:50	15:56	3	height
water	15:50	0:0	4	height
arg	15:58	15:74	3	AV_PIX_FMT_GRAY8
water	15:58	0:0	4	AV_PIX_FMT_GRAY8
arg	16:43	16:52	3	sws_flags
water	16:43	0:0	4	sws_flags
arg	16:54	16:60	3	&sws_f
op	16:54	0:0	4	&
water	16:55	0:0	4	sws_f
arg	16:62	16:66	3	NULL
water	16:62	0:0	4	NULL
arg	16:68	16:72	3	NULL
water	16:68	0:0	4	NULL
water	16:73	0:0	2	;
call	17:4	17:19	2	sws_freeVec
arg	17:16	17:19	3	vec
water	17:16	0:0	4	vec
water	17:20	0:0	2	;
water	18:4	0:0	2	vec
op	18:8	0:0	2	=
call	18:10	18:45	2	sws_getGaussianVec
arg	18:29	18:40	3	f->strength
water	18:29	0:0	4	f
op	18:30	0:0	4	->
water	18:32	0:0	4	strength
arg	18:42	18:45	3	5.0
water	18:42	0:0	4	5
op	18:43	0:0	4	.
water	18:44	0:0	4	0
water	18:46	0:0	2	;
for	19:4	25:4	2	(i = 0 ;i < COLOR_DIFF_COEFF_SIZE;i ++)
forinit	19:9	19:14	3	i = 0 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:20	3	i < COLOR_DIFF_COEFF_SIZE
water	19:16	0:0	4	i
op	19:18	0:0	4	<
water	19:20	0:0	4	COLOR_DIFF_COEFF_SIZE
forexpr	19:43	19:44	3	i ++
water	19:43	0:0	4	i
op	19:44	0:0	4	++
stmts	19:48	25:4	3	
water	19:48	0:0	4	{
decl	20:8	20:16	4	double	d
decl	21:8	21:61	4	int	index
op	21:18	0:0	4	=
water	21:20	0:0	4	i
op	21:21	0:0	4	-
water	21:22	0:0	4	COLOR_DIFF_COEFF_SIZE
op	21:43	0:0	4	/
water	21:44	0:0	4	2
op	21:46	0:0	4	+
water	21:48	0:0	4	vec
op	21:51	0:0	4	->
water	21:53	0:0	4	length
op	21:59	0:0	4	/
water	21:60	0:0	4	2
if	22:8	22:54	4	(index < 0 || index >= vec -> length)
cond	22:12	22:39	5	index < 0 || index >= vec -> length
water	22:12	0:0	6	index
op	22:18	0:0	6	<
water	22:20	0:0	6	0
op	22:22	0:0	6	||
water	22:25	0:0	6	index
op	22:31	0:0	6	>=
water	22:34	0:0	6	vec
op	22:37	0:0	6	->
water	22:39	0:0	6	length
stmts	22:47	22:54	5	
water	22:47	0:0	6	d
op	22:49	0:0	6	=
water	22:51	0:0	6	0
op	22:52	0:0	6	.
water	22:53	0:0	6	0
water	22:54	0:0	6	;
else	23:8	23:68	4
stmts	23:47	23:68	5	
water	23:47	0:0	6	d
op	23:49	0:0	6	=
water	23:51	0:0	6	vec
op	23:54	0:0	6	->
water	23:56	0:0	6	coeff
op	23:61	0:0	6	[
water	23:62	0:0	6	index
op	23:67	0:0	6	]
water	23:68	0:0	6	;
water	24:8	0:0	4	f
op	24:9	0:0	4	->
water	24:11	0:0	4	color_diff_coeff
op	24:27	0:0	4	[
water	24:28	0:0	4	i
op	24:29	0:0	4	]
op	24:31	0:0	4	=
call	24:33	24:80	4	(int)
arg	24:39	24:80	5	d/vec->coeff[vec->length/2]*(1<<12)+0.5
water	24:39	0:0	6	d
op	24:40	0:0	6	/
water	24:41	0:0	6	vec
op	24:44	0:0	6	->
water	24:46	0:0	6	coeff
op	24:51	0:0	6	[
water	24:52	0:0	6	vec
op	24:55	0:0	6	->
water	24:57	0:0	6	length
op	24:63	0:0	6	/
water	24:64	0:0	6	2
op	24:65	0:0	6	]
op	24:66	0:0	6	*
water	24:67	0:0	6	(
water	24:68	0:0	6	1
op	24:69	0:0	6	<<
water	24:71	0:0	6	12
water	24:73	0:0	6	)
op	24:75	0:0	6	+
water	24:77	0:0	6	0
op	24:78	0:0	6	.
water	24:79	0:0	6	5
water	24:81	0:0	4	;
water	25:4	0:0	4	}
call	26:4	26:19	2	sws_freeVec
arg	26:16	26:19	3	vec
water	26:16	0:0	4	vec
water	26:20	0:0	2	;
water	27:4	0:0	2	vec
op	27:8	0:0	2	=
call	27:10	27:50	2	sws_getGaussianVec
arg	27:29	27:38	3	f->radius
water	27:29	0:0	4	f
op	27:30	0:0	4	->
water	27:32	0:0	4	radius
arg	27:40	27:50	3	f->quality
water	27:40	0:0	4	f
op	27:41	0:0	4	->
water	27:43	0:0	4	quality
water	27:51	0:0	2	;
water	28:4	0:0	2	f
op	28:5	0:0	2	->
water	28:7	0:0	2	dist_width
op	28:21	0:0	2	=
water	28:23	0:0	2	vec
op	28:26	0:0	2	->
water	28:28	0:0	2	length
water	28:34	0:0	2	;
water	29:4	0:0	2	f
op	29:5	0:0	2	->
water	29:7	0:0	2	dist_linesize
op	29:21	0:0	2	=
call	29:23	29:45	2	FFALIGN
arg	29:31	29:42	3	vec->length
water	29:31	0:0	4	vec
op	29:34	0:0	4	->
water	29:36	0:0	4	length
arg	29:44	29:45	3	8
water	29:44	0:0	4	8
water	29:46	0:0	2	;
water	30:4	0:0	2	f
op	30:5	0:0	2	->
water	30:7	0:0	2	dist_coeff
op	30:21	0:0	2	=
call	30:23	30:95	2	av_malloc_array
arg	30:39	30:52	3	f->dist_width
water	30:39	0:0	4	f
op	30:40	0:0	4	->
water	30:42	0:0	4	dist_width
arg	30:54	30:95	3	f->dist_linesize*sizeof(*f->dist_coeff)
water	30:54	0:0	4	f
op	30:55	0:0	4	->
water	30:57	0:0	4	dist_linesize
op	30:71	0:0	4	*
op	30:73	0:0	4	sizeof
water	30:79	0:0	4	(
op	30:80	0:0	4	*
water	30:81	0:0	4	f
op	30:82	0:0	4	->
water	30:84	0:0	4	dist_coeff
water	30:94	0:0	4	)
water	30:96	0:0	2	;
if	31:4	34:4	2	(! f -> dist_coeff)
cond	31:8	31:12	3	! f -> dist_coeff
op	31:8	0:0	4	!
water	31:9	0:0	4	f
op	31:10	0:0	4	->
water	31:12	0:0	4	dist_coeff
stmts	31:24	34:4	3	
water	31:24	0:0	4	{
call	32:8	32:23	4	sws_freeVec
arg	32:20	32:23	5	vec
water	32:20	0:0	6	vec
water	32:24	0:0	4	;
return	33:8	33:30	4	AVERROR(ENOMEM)
call	33:15	33:29	5	AVERROR
arg	33:23	33:29	6	ENOMEM
water	33:23	0:0	7	ENOMEM
water	34:4	0:0	4	}
for	35:4	40:4	2	(y = 0 ;y < vec -> length;y ++)
forinit	35:9	35:14	3	y = 0 ;
water	35:9	0:0	4	y
op	35:11	0:0	4	=
water	35:13	0:0	4	0
water	35:14	0:0	4	;
cond	35:16	35:25	3	y < vec -> length
water	35:16	0:0	4	y
op	35:18	0:0	4	<
water	35:20	0:0	4	vec
op	35:23	0:0	4	->
water	35:25	0:0	4	length
forexpr	35:33	35:34	3	y ++
water	35:33	0:0	4	y
op	35:34	0:0	4	++
stmts	35:38	40:4	3	
water	35:38	0:0	4	{
for	36:8	39:8	4	(x = 0 ;x < vec -> length;x ++)
forinit	36:13	36:18	5	x = 0 ;
water	36:13	0:0	6	x
op	36:15	0:0	6	=
water	36:17	0:0	6	0
water	36:18	0:0	6	;
cond	36:20	36:29	5	x < vec -> length
water	36:20	0:0	6	x
op	36:22	0:0	6	<
water	36:24	0:0	6	vec
op	36:27	0:0	6	->
water	36:29	0:0	6	length
forexpr	36:37	36:38	5	x ++
water	36:37	0:0	6	x
op	36:38	0:0	6	++
stmts	36:42	39:8	5	
water	36:42	0:0	6	{
decl	37:12	37:52	6	double	d
op	37:21	0:0	6	=
water	37:23	0:0	6	vec
op	37:26	0:0	6	->
water	37:28	0:0	6	coeff
op	37:33	0:0	6	[
water	37:34	0:0	6	x
op	37:35	0:0	6	]
op	37:37	0:0	6	*
water	37:39	0:0	6	vec
op	37:42	0:0	6	->
water	37:44	0:0	6	coeff
op	37:49	0:0	6	[
water	37:50	0:0	6	y
op	37:51	0:0	6	]
water	38:12	0:0	6	f
op	38:13	0:0	6	->
water	38:15	0:0	6	dist_coeff
op	38:25	0:0	6	[
water	38:26	0:0	6	x
op	38:28	0:0	6	+
water	38:30	0:0	6	y
op	38:31	0:0	6	*
water	38:32	0:0	6	f
op	38:33	0:0	6	->
water	38:35	0:0	6	dist_linesize
op	38:48	0:0	6	]
op	38:50	0:0	6	=
call	38:52	38:73	6	(int)
arg	38:58	38:73	7	d*(1<<10)+0.5
water	38:58	0:0	8	d
op	38:59	0:0	8	*
water	38:60	0:0	8	(
water	38:61	0:0	8	1
op	38:62	0:0	8	<<
water	38:64	0:0	8	10
water	38:66	0:0	8	)
op	38:68	0:0	8	+
water	38:70	0:0	8	0
op	38:71	0:0	8	.
water	38:72	0:0	8	5
water	38:74	0:0	6	;
water	39:8	0:0	6	}
water	40:4	0:0	4	}
call	41:4	41:19	2	sws_freeVec
arg	41:16	41:19	3	vec
water	41:16	0:0	4	vec
water	41:20	0:0	2	;
return	42:4	42:12	2	0
water	42:11	0:0	3	0

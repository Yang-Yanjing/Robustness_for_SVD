func	1:0	63:0	0	static int	configure_audio_filters
params	1:34	0:0	1	
param	1:35	1:49	2	VideoState *	is
param	1:51	1:71	2	const char *	afilters
param	1:73	1:96	2	int	force_output_format
stmnts	3:4	62:14	1	
water	3:4	0:0	2	static
water	3:11	0:0	2	const
water	3:17	0:0	2	enum
water	3:22	0:0	2	AVSampleFormat
water	3:37	0:0	2	sample_fmts
op	3:48	0:0	2	[
op	3:49	0:0	2	]
op	3:51	0:0	2	=
water	3:53	0:0	2	{
water	3:55	0:0	2	AV_SAMPLE_FMT_S16
water	3:72	0:0	2	,
water	3:74	0:0	2	AV_SAMPLE_FMT_NONE
water	3:93	0:0	2	}
water	3:94	0:0	2	;
decl	4:4	4:35	2	int	sample_rates[2]
op	4:24	0:0	2	=
water	4:26	0:0	2	{
water	4:28	0:0	2	0
water	4:29	0:0	2	,
op	4:31	0:0	2	-
water	4:32	0:0	2	1
water	4:34	0:0	2	}
decl	5:4	5:42	2	int64_t	channel_layouts[2]
op	5:31	0:0	2	=
water	5:33	0:0	2	{
water	5:35	0:0	2	0
water	5:36	0:0	2	,
op	5:38	0:0	2	-
water	5:39	0:0	2	1
water	5:41	0:0	2	}
decl	6:4	6:31	2	int	channels[2]
op	6:20	0:0	2	=
water	6:22	0:0	2	{
water	6:24	0:0	2	0
water	6:25	0:0	2	,
op	6:27	0:0	2	-
water	6:28	0:0	2	1
water	6:30	0:0	2	}
decl	7:4	7:57	2	AVFilterContext	*filt_asrc
op	7:31	0:0	2	=
water	7:33	0:0	2	NULL
water	7:37	0:0	2	,
decl	7:4	7:57	2	AVFilterContext	*filt_asink
op	7:51	0:0	2	=
water	7:53	0:0	2	NULL
decl	8:4	8:37	2	char	aresample_swr_opts[512]
op	8:33	0:0	2	=
water	8:35	0:0	2	""
decl	9:4	9:31	2	AVDictionaryEntry	*e
op	9:25	0:0	2	=
water	9:27	0:0	2	NULL
decl	10:4	10:23	2	char	asrc_args[256]
decl	11:4	11:11	2	int	ret
call	12:4	12:35	2	avfilter_graph_free
arg	12:24	12:35	3	&is->agraph
op	12:24	0:0	4	&
water	12:25	0:0	4	is
op	12:27	0:0	4	->
water	12:29	0:0	4	agraph
water	12:36	0:0	2	;
if	13:4	14:30	2	(! ( is -> agraph =avfilter_graph_alloc ( ) ))
cond	13:8	13:45	3	! ( is -> agraph =avfilter_graph_alloc ( ) )
op	13:8	0:0	4	!
water	13:9	0:0	4	(
water	13:10	0:0	4	is
op	13:12	0:0	4	->
water	13:14	0:0	4	agraph
op	13:21	0:0	4	=
call	13:23	13:44	4	avfilter_graph_alloc
water	13:45	0:0	4	)
stmts	14:8	14:30	3	
return	14:8	14:30	4	AVERROR(ENOMEM)
call	14:15	14:29	5	AVERROR
arg	14:23	14:29	6	ENOMEM
water	14:23	0:0	7	ENOMEM
while	15:4	16:95	2	(( e =av_dict_get (swr_opts ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) ))
cond	15:11	15:67	3	( e =av_dict_get (swr_opts ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) )
water	15:11	0:0	4	(
water	15:12	0:0	4	e
op	15:14	0:0	4	=
call	15:16	15:66	4	av_dict_get
arg	15:28	15:36	5	swr_opts
water	15:28	0:0	6	swr_opts
arg	15:38	15:40	5	""
water	15:38	0:0	6	""
arg	15:42	15:43	5	e
water	15:42	0:0	6	e
arg	15:45	15:66	5	AV_DICT_IGNORE_SUFFIX
water	15:45	0:0	6	AV_DICT_IGNORE_SUFFIX
water	15:67	0:0	4	)
stmts	16:8	16:95	3	
call	16:8	16:94	4	av_strlcatf
arg	16:20	16:38	5	aresample_swr_opts
water	16:20	0:0	6	aresample_swr_opts
arg	16:40	16:66	5	sizeof(aresample_swr_opts)
op	16:40	0:0	6	sizeof
water	16:46	0:0	6	(
water	16:47	0:0	6	aresample_swr_opts
water	16:65	0:0	6	)
arg	16:68	16:76	5	"%s=%s:"
water	16:68	0:0	6	"%s=%s:"
arg	16:78	16:84	5	e->key
water	16:78	0:0	6	e
op	16:79	0:0	6	->
water	16:81	0:0	6	key
arg	16:86	16:94	5	e->value
water	16:86	0:0	6	e
op	16:87	0:0	6	->
water	16:89	0:0	6	value
water	16:95	0:0	4	;
if	17:4	18:63	2	(strlen (aresample_swr_opts ))
cond	17:8	17:33	3	strlen (aresample_swr_opts )
call	17:8	17:33	4	strlen
arg	17:15	17:33	5	aresample_swr_opts
water	17:15	0:0	6	aresample_swr_opts
stmts	18:8	18:63	3	
water	18:8	0:0	4	aresample_swr_opts
op	18:26	0:0	4	[
call	18:27	18:52	4	strlen
arg	18:34	18:52	5	aresample_swr_opts
water	18:34	0:0	6	aresample_swr_opts
op	18:53	0:0	4	-
water	18:54	0:0	4	1
op	18:55	0:0	4	]
op	18:57	0:0	4	=
water	18:59	0:0	4	'\0'
water	18:63	0:0	4	;
call	19:4	19:70	2	av_opt_set
arg	19:15	19:25	3	is->agraph
water	19:15	0:0	4	is
op	19:17	0:0	4	->
water	19:19	0:0	4	agraph
arg	19:27	19:47	3	"aresample_swr_opts"
water	19:27	0:0	4	"aresample_swr_opts"
arg	19:49	19:67	3	aresample_swr_opts
water	19:49	0:0	4	aresample_swr_opts
arg	19:69	19:70	3	0
water	19:69	0:0	4	0
water	19:71	0:0	2	;
water	20:4	0:0	2	ret
op	20:8	0:0	2	=
call	20:10	24:47	2	snprintf
arg	20:19	20:28	3	asrc_args
water	20:19	0:0	4	asrc_args
arg	20:30	20:47	3	sizeof(asrc_args)
op	20:30	0:0	4	sizeof
water	20:36	0:0	4	(
water	20:37	0:0	4	asrc_args
water	20:46	0:0	4	)
arg	21:19	21:77	3	"sample_rate=%d:sample_fmt=%s:channels=%d:time_base=%d/%d"
water	21:19	0:0	4	"sample_rate=%d:sample_fmt=%s:channels=%d:time_base=%d/%d"
arg	22:19	22:44	3	is->audio_filter_src.freq
water	22:19	0:0	4	is
op	22:21	0:0	4	->
water	22:23	0:0	4	audio_filter_src
op	22:39	0:0	4	.
water	22:40	0:0	4	freq
arg	22:46	22:94	3	av_get_sample_fmt_name(is->audio_filter_src.fmt)
call	22:46	22:93	4	av_get_sample_fmt_name
arg	22:69	22:93	5	is->audio_filter_src.fmt
water	22:69	0:0	6	is
op	22:71	0:0	6	->
water	22:73	0:0	6	audio_filter_src
op	22:89	0:0	6	.
water	22:90	0:0	6	fmt
arg	23:19	23:48	3	is->audio_filter_src.channels
water	23:19	0:0	4	is
op	23:21	0:0	4	->
water	23:23	0:0	4	audio_filter_src
op	23:39	0:0	4	.
water	23:40	0:0	4	channels
arg	24:19	24:20	3	1
water	24:19	0:0	4	1
arg	24:22	24:47	3	is->audio_filter_src.freq
water	24:22	0:0	4	is
op	24:24	0:0	4	->
water	24:26	0:0	4	audio_filter_src
op	24:42	0:0	4	.
water	24:43	0:0	4	freq
water	24:48	0:0	2	;
if	25:4	27:83	2	(is -> audio_filter_src . channel_layout)
cond	25:8	25:29	3	is -> audio_filter_src . channel_layout
water	25:8	0:0	4	is
op	25:10	0:0	4	->
water	25:12	0:0	4	audio_filter_src
op	25:28	0:0	4	.
water	25:29	0:0	4	channel_layout
stmts	26:8	27:83	3	
call	26:8	27:82	4	snprintf
arg	26:17	26:32	5	asrc_args+ret
water	26:17	0:0	6	asrc_args
op	26:27	0:0	6	+
water	26:29	0:0	6	ret
arg	26:34	26:57	5	sizeof(asrc_args)-ret
op	26:34	0:0	6	sizeof
water	26:40	0:0	6	(
water	26:41	0:0	6	asrc_args
water	26:50	0:0	6	)
op	26:52	0:0	6	-
water	26:54	0:0	6	ret
arg	27:17	27:44	5	":channel_layout=0x%"PRIx64
water	27:17	0:0	6	":channel_layout=0x%"
water	27:38	0:0	6	PRIx64
arg	27:47	27:82	5	is->audio_filter_src.channel_layout
water	27:47	0:0	6	is
op	27:49	0:0	6	->
water	27:51	0:0	6	audio_filter_src
op	27:67	0:0	6	.
water	27:68	0:0	6	channel_layout
water	27:83	0:0	4	;
water	28:4	0:0	2	ret
op	28:8	0:0	2	=
call	28:10	30:66	2	avfilter_graph_create_filter
arg	28:39	28:49	3	&filt_asrc
op	28:39	0:0	4	&
water	28:40	0:0	4	filt_asrc
arg	29:39	29:70	3	avfilter_get_by_name("abuffer")
call	29:39	29:69	4	avfilter_get_by_name
arg	29:60	29:69	5	"abuffer"
water	29:60	0:0	6	"abuffer"
arg	29:72	29:88	3	"ffplay_abuffer"
water	29:72	0:0	4	"ffplay_abuffer"
arg	30:39	30:48	3	asrc_args
water	30:39	0:0	4	asrc_args
arg	30:50	30:54	3	NULL
water	30:50	0:0	4	NULL
arg	30:56	30:66	3	is->agraph
water	30:56	0:0	4	is
op	30:58	0:0	4	->
water	30:60	0:0	4	agraph
water	30:67	0:0	2	;
if	31:4	32:16	2	(ret < 0)
cond	31:8	31:14	3	ret < 0
water	31:8	0:0	4	ret
op	31:12	0:0	4	<
water	31:14	0:0	4	0
stmts	32:8	32:16	3	
goto	32:8	32:16	4	end
water	32:13	0:0	5	end
water	33:4	0:0	2	ret
op	33:8	0:0	2	=
call	33:10	35:61	2	avfilter_graph_create_filter
arg	33:39	33:50	3	&filt_asink
op	33:39	0:0	4	&
water	33:40	0:0	4	filt_asink
arg	34:39	34:74	3	avfilter_get_by_name("abuffersink")
call	34:39	34:73	4	avfilter_get_by_name
arg	34:60	34:73	5	"abuffersink"
water	34:60	0:0	6	"abuffersink"
arg	34:76	34:96	3	"ffplay_abuffersink"
water	34:76	0:0	4	"ffplay_abuffersink"
arg	35:39	35:43	3	NULL
water	35:39	0:0	4	NULL
arg	35:45	35:49	3	NULL
water	35:45	0:0	4	NULL
arg	35:51	35:61	3	is->agraph
water	35:51	0:0	4	is
op	35:53	0:0	4	->
water	35:55	0:0	4	agraph
water	35:62	0:0	2	;
if	36:4	37:16	2	(ret < 0)
cond	36:8	36:14	3	ret < 0
water	36:8	0:0	4	ret
op	36:12	0:0	4	<
water	36:14	0:0	4	0
stmts	37:8	37:16	3	
goto	37:8	37:16	4	end
water	37:13	0:0	5	end
if	38:4	39:16	2	(( ret =av_opt_set_int_list (filt_asink ,"sample_fmts" ,sample_fmts ,AV_SAMPLE_FMT_NONE ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	38:8	38:123	3	( ret =av_opt_set_int_list (filt_asink ,"sample_fmts" ,sample_fmts ,AV_SAMPLE_FMT_NONE ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	38:8	0:0	4	(
water	38:9	0:0	4	ret
op	38:13	0:0	4	=
call	38:15	38:118	4	av_opt_set_int_list
arg	38:35	38:45	5	filt_asink
water	38:35	0:0	6	filt_asink
arg	38:47	38:60	5	"sample_fmts"
water	38:47	0:0	6	"sample_fmts"
arg	38:62	38:73	5	sample_fmts
water	38:62	0:0	6	sample_fmts
arg	38:76	38:94	5	AV_SAMPLE_FMT_NONE
water	38:76	0:0	6	AV_SAMPLE_FMT_NONE
arg	38:96	38:118	5	AV_OPT_SEARCH_CHILDREN
water	38:96	0:0	6	AV_OPT_SEARCH_CHILDREN
water	38:119	0:0	4	)
op	38:121	0:0	4	<
water	38:123	0:0	4	0
stmts	39:8	39:16	3	
goto	39:8	39:16	4	end
water	39:13	0:0	5	end
if	40:4	41:16	2	(( ret =av_opt_set_int (filt_asink ,"all_channel_counts" ,1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	40:8	40:94	3	( ret =av_opt_set_int (filt_asink ,"all_channel_counts" ,1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	40:8	0:0	4	(
water	40:9	0:0	4	ret
op	40:13	0:0	4	=
call	40:15	40:89	4	av_opt_set_int
arg	40:30	40:40	5	filt_asink
water	40:30	0:0	6	filt_asink
arg	40:42	40:62	5	"all_channel_counts"
water	40:42	0:0	6	"all_channel_counts"
arg	40:64	40:65	5	1
water	40:64	0:0	6	1
arg	40:67	40:89	5	AV_OPT_SEARCH_CHILDREN
water	40:67	0:0	6	AV_OPT_SEARCH_CHILDREN
water	40:90	0:0	4	)
op	40:92	0:0	4	<
water	40:94	0:0	4	0
stmts	41:8	41:16	3	
goto	41:8	41:16	4	end
water	41:13	0:0	5	end
if	42:4	54:4	2	(force_output_format)
cond	42:8	42:8	3	force_output_format
water	42:8	0:0	4	force_output_format
stmts	42:29	54:4	3	
water	42:29	0:0	4	{
water	43:8	0:0	4	channel_layouts
op	43:23	0:0	4	[
water	43:24	0:0	4	0
op	43:25	0:0	4	]
op	43:27	0:0	4	=
water	43:29	0:0	4	is
op	43:31	0:0	4	->
water	43:33	0:0	4	audio_tgt
op	43:42	0:0	4	.
water	43:43	0:0	4	channel_layout
water	43:57	0:0	4	;
water	44:8	0:0	4	channels
op	44:23	0:0	4	[
water	44:24	0:0	4	0
op	44:25	0:0	4	]
op	44:27	0:0	4	=
water	44:29	0:0	4	is
op	44:31	0:0	4	->
water	44:33	0:0	4	audio_tgt
op	44:42	0:0	4	.
water	44:43	0:0	4	channels
water	44:51	0:0	4	;
water	45:8	0:0	4	sample_rates
op	45:23	0:0	4	[
water	45:24	0:0	4	0
op	45:25	0:0	4	]
op	45:27	0:0	4	=
water	45:29	0:0	4	is
op	45:31	0:0	4	->
water	45:33	0:0	4	audio_tgt
op	45:42	0:0	4	.
water	45:43	0:0	4	freq
water	45:47	0:0	4	;
if	46:8	47:20	4	(( ret =av_opt_set_int (filt_asink ,"all_channel_counts" ,0 ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	46:12	46:98	5	( ret =av_opt_set_int (filt_asink ,"all_channel_counts" ,0 ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	46:12	0:0	6	(
water	46:13	0:0	6	ret
op	46:17	0:0	6	=
call	46:19	46:93	6	av_opt_set_int
arg	46:34	46:44	7	filt_asink
water	46:34	0:0	8	filt_asink
arg	46:46	46:66	7	"all_channel_counts"
water	46:46	0:0	8	"all_channel_counts"
arg	46:68	46:69	7	0
water	46:68	0:0	8	0
arg	46:71	46:93	7	AV_OPT_SEARCH_CHILDREN
water	46:71	0:0	8	AV_OPT_SEARCH_CHILDREN
water	46:94	0:0	6	)
op	46:96	0:0	6	<
water	46:98	0:0	6	0
stmts	47:12	47:20	5	
goto	47:12	47:20	6	end
water	47:17	0:0	7	end
if	48:8	49:20	4	(( ret =av_opt_set_int_list (filt_asink ,"channel_layouts" ,channel_layouts ,- 1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	48:12	48:119	5	( ret =av_opt_set_int_list (filt_asink ,"channel_layouts" ,channel_layouts ,- 1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	48:12	0:0	6	(
water	48:13	0:0	6	ret
op	48:17	0:0	6	=
call	48:19	48:114	6	av_opt_set_int_list
arg	48:39	48:49	7	filt_asink
water	48:39	0:0	8	filt_asink
arg	48:51	48:68	7	"channel_layouts"
water	48:51	0:0	8	"channel_layouts"
arg	48:70	48:85	7	channel_layouts
water	48:70	0:0	8	channel_layouts
arg	48:88	48:90	7	-1
op	48:88	0:0	8	-
water	48:89	0:0	8	1
arg	48:92	48:114	7	AV_OPT_SEARCH_CHILDREN
water	48:92	0:0	8	AV_OPT_SEARCH_CHILDREN
water	48:115	0:0	6	)
op	48:117	0:0	6	<
water	48:119	0:0	6	0
stmts	49:12	49:20	5	
goto	49:12	49:20	6	end
water	49:17	0:0	7	end
if	50:8	51:20	4	(( ret =av_opt_set_int_list (filt_asink ,"channel_counts" ,channels ,- 1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	50:12	50:119	5	( ret =av_opt_set_int_list (filt_asink ,"channel_counts" ,channels ,- 1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	50:12	0:0	6	(
water	50:13	0:0	6	ret
op	50:17	0:0	6	=
call	50:19	50:114	6	av_opt_set_int_list
arg	50:39	50:49	7	filt_asink
water	50:39	0:0	8	filt_asink
arg	50:51	50:68	7	"channel_counts"
water	50:51	0:0	8	"channel_counts"
arg	50:70	50:85	7	channels
water	50:70	0:0	8	channels
arg	50:88	50:90	7	-1
op	50:88	0:0	8	-
water	50:89	0:0	8	1
arg	50:92	50:114	7	AV_OPT_SEARCH_CHILDREN
water	50:92	0:0	8	AV_OPT_SEARCH_CHILDREN
water	50:115	0:0	6	)
op	50:117	0:0	6	<
water	50:119	0:0	6	0
stmts	51:12	51:20	5	
goto	51:12	51:20	6	end
water	51:17	0:0	7	end
if	52:8	53:20	4	(( ret =av_opt_set_int_list (filt_asink ,"sample_rates" ,sample_rates ,- 1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	52:12	52:119	5	( ret =av_opt_set_int_list (filt_asink ,"sample_rates" ,sample_rates ,- 1 ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	52:12	0:0	6	(
water	52:13	0:0	6	ret
op	52:17	0:0	6	=
call	52:19	52:114	6	av_opt_set_int_list
arg	52:39	52:49	7	filt_asink
water	52:39	0:0	8	filt_asink
arg	52:51	52:68	7	"sample_rates"
water	52:51	0:0	8	"sample_rates"
arg	52:70	52:85	7	sample_rates
water	52:70	0:0	8	sample_rates
arg	52:88	52:90	7	-1
op	52:88	0:0	8	-
water	52:89	0:0	8	1
arg	52:92	52:114	7	AV_OPT_SEARCH_CHILDREN
water	52:92	0:0	8	AV_OPT_SEARCH_CHILDREN
water	52:115	0:0	6	)
op	52:117	0:0	6	<
water	52:119	0:0	6	0
stmts	53:12	53:20	5	
goto	53:12	53:20	6	end
water	53:17	0:0	7	end
water	54:4	0:0	4	}
if	55:4	56:16	2	(( ret =configure_filtergraph (is -> agraph ,afilters ,filt_asrc ,filt_asink ) ) < 0)
cond	55:8	55:85	3	( ret =configure_filtergraph (is -> agraph ,afilters ,filt_asrc ,filt_asink ) ) < 0
water	55:8	0:0	4	(
water	55:9	0:0	4	ret
op	55:13	0:0	4	=
call	55:15	55:80	4	configure_filtergraph
arg	55:37	55:47	5	is->agraph
water	55:37	0:0	6	is
op	55:39	0:0	6	->
water	55:41	0:0	6	agraph
arg	55:49	55:57	5	afilters
water	55:49	0:0	6	afilters
arg	55:59	55:68	5	filt_asrc
water	55:59	0:0	6	filt_asrc
arg	55:70	55:80	5	filt_asink
water	55:70	0:0	6	filt_asink
water	55:81	0:0	4	)
op	55:83	0:0	4	<
water	55:85	0:0	4	0
stmts	56:8	56:16	3	
goto	56:8	56:16	4	end
water	56:13	0:0	5	end
water	57:4	0:0	2	is
op	57:6	0:0	2	->
water	57:8	0:0	2	in_audio_filter
op	57:25	0:0	2	=
water	57:27	0:0	2	filt_asrc
water	57:36	0:0	2	;
water	58:4	0:0	2	is
op	58:6	0:0	2	->
water	58:8	0:0	2	out_audio_filter
op	58:25	0:0	2	=
water	58:27	0:0	2	filt_asink
water	58:37	0:0	2	;
label	59:0	59:3	2	end :
if	60:4	61:40	2	(ret < 0)
cond	60:8	60:14	3	ret < 0
water	60:8	0:0	4	ret
op	60:12	0:0	4	<
water	60:14	0:0	4	0
stmts	61:8	61:40	3	
call	61:8	61:39	4	avfilter_graph_free
arg	61:28	61:39	5	&is->agraph
op	61:28	0:0	6	&
water	61:29	0:0	6	is
op	61:31	0:0	6	->
water	61:33	0:0	6	agraph
water	61:40	0:0	4	;
return	62:4	62:14	2	ret
water	62:11	0:0	3	ret

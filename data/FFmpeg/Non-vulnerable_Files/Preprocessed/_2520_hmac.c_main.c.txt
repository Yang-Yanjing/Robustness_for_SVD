func	1:0	56:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:13	2	void
stmnts	0:0	55:12	1	
decl	3:4	3:42	2	uint8_t	key1[20]
water	3:20	0:0	2	,
decl	3:4	3:42	2	uint8_t	key3[131]
water	3:31	0:0	2	,
decl	3:4	3:42	2	uint8_t	data3[50]
decl	4:4	4:16	2	AVHMAC	*hmac
decl	5:4	5:21	2	enum AVHMACType	i
water	6:4	0:0	2	static
water	6:11	0:0	2	const
water	6:17	0:0	2	uint8_t
water	6:25	0:0	2	key2
op	6:29	0:0	2	[
op	6:30	0:0	2	]
op	6:33	0:0	2	=
water	6:35	0:0	2	"Jefe"
water	6:41	0:0	2	;
water	7:4	0:0	2	static
water	7:11	0:0	2	const
water	7:17	0:0	2	uint8_t
water	7:25	0:0	2	data1
op	7:30	0:0	2	[
op	7:31	0:0	2	]
op	7:33	0:0	2	=
water	7:35	0:0	2	"Hi There"
water	7:45	0:0	2	;
water	8:4	0:0	2	static
water	8:11	0:0	2	const
water	8:17	0:0	2	uint8_t
water	8:25	0:0	2	data2
op	8:30	0:0	2	[
op	8:31	0:0	2	]
op	8:33	0:0	2	=
water	8:35	0:0	2	"what do ya want for nothing?"
water	8:65	0:0	2	;
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	uint8_t
water	9:25	0:0	2	data4
op	9:30	0:0	2	[
op	9:31	0:0	2	]
op	9:33	0:0	2	=
water	9:35	0:0	2	"Test Using Larger Than Block-Size Key - Hash Key First"
water	9:91	0:0	2	;
water	10:4	0:0	2	static
water	10:11	0:0	2	const
water	10:17	0:0	2	uint8_t
water	10:25	0:0	2	data5
op	10:30	0:0	2	[
op	10:31	0:0	2	]
op	10:33	0:0	2	=
water	10:35	0:0	2	"Test Using Larger Than Block-Size Key and Larger Than One Block-Size Data"
water	10:110	0:0	2	;
water	11:4	0:0	2	static
water	11:11	0:0	2	const
water	11:17	0:0	2	uint8_t
water	11:25	0:0	2	data6
op	11:30	0:0	2	[
op	11:31	0:0	2	]
op	11:33	0:0	2	=
water	11:35	0:0	2	"This is a test using a larger than block-size key and a larger "
water	12:28	0:0	2	"than block-size data. The key needs to be hashed before being used"
water	13:28	0:0	2	" by the HMAC algorithm."
water	13:53	0:0	2	;
call	14:4	14:35	2	memset
arg	14:11	14:15	3	key1
water	14:11	0:0	4	key1
arg	14:17	14:21	3	0x0b
water	14:17	0:0	4	0
water	14:18	0:0	4	x0b
arg	14:23	14:35	3	sizeof(key1)
op	14:23	0:0	4	sizeof
water	14:29	0:0	4	(
water	14:30	0:0	4	key1
water	14:34	0:0	4	)
water	14:36	0:0	2	;
call	15:4	15:35	2	memset
arg	15:11	15:15	3	key3
water	15:11	0:0	4	key3
arg	15:17	15:21	3	0xaa
water	15:17	0:0	4	0
water	15:18	0:0	4	xaa
arg	15:23	15:35	3	sizeof(key3)
op	15:23	0:0	4	sizeof
water	15:29	0:0	4	(
water	15:30	0:0	4	key3
water	15:34	0:0	4	)
water	15:36	0:0	2	;
call	16:4	16:37	2	memset
arg	16:11	16:16	3	data3
water	16:11	0:0	4	data3
arg	16:18	16:22	3	0xdd
water	16:18	0:0	4	0
water	16:19	0:0	4	xdd
arg	16:24	16:37	3	sizeof(data3)
op	16:24	0:0	4	sizeof
water	16:30	0:0	4	(
water	16:31	0:0	4	data3
water	16:36	0:0	4	)
water	16:38	0:0	2	;
for	18:4	29:4	2	(i = AV_HMAC_MD5 ;i <= AV_HMAC_SHA1;i ++)
forinit	18:9	18:24	3	i = AV_HMAC_MD5 ;
water	18:9	0:0	4	i
op	18:11	0:0	4	=
water	18:13	0:0	4	AV_HMAC_MD5
water	18:24	0:0	4	;
cond	18:26	18:31	3	i <= AV_HMAC_SHA1
water	18:26	0:0	4	i
op	18:28	0:0	4	<=
water	18:31	0:0	4	AV_HMAC_SHA1
forexpr	18:45	18:46	3	i ++
water	18:45	0:0	4	i
op	18:46	0:0	4	++
stmts	18:50	29:4	3	
water	18:50	0:0	4	{
water	19:8	0:0	4	hmac
op	19:13	0:0	4	=
call	19:15	19:30	4	av_hmac_alloc
arg	19:29	19:30	5	i
water	19:29	0:0	6	i
water	19:31	0:0	4	;
if	20:8	21:20	4	(! hmac)
cond	20:12	20:13	5	! hmac
op	20:12	0:0	6	!
water	20:13	0:0	6	hmac
stmts	21:12	21:20	5	
return	21:12	21:20	6	1
water	21:19	0:0	7	1
call	23:8	23:60	4	test
arg	23:13	23:17	5	hmac
water	23:13	0:0	6	hmac
arg	23:19	23:23	5	key1
water	23:19	0:0	6	key1
arg	23:25	23:38	5	hmac->hashlen
water	23:25	0:0	6	hmac
op	23:29	0:0	6	->
water	23:31	0:0	6	hashlen
arg	23:40	23:45	5	data1
water	23:40	0:0	6	data1
arg	23:47	23:60	5	sizeof(data1)
op	23:47	0:0	6	sizeof
water	23:53	0:0	6	(
water	23:54	0:0	6	data1
water	23:59	0:0	6	)
water	23:61	0:0	4	;
call	24:8	24:60	4	test
arg	24:13	24:17	5	hmac
water	24:13	0:0	6	hmac
arg	24:19	24:23	5	key2
water	24:19	0:0	6	key2
arg	24:25	24:37	5	sizeof(key2)
op	24:25	0:0	6	sizeof
water	24:31	0:0	6	(
water	24:32	0:0	6	key2
water	24:36	0:0	6	)
arg	24:40	24:45	5	data2
water	24:40	0:0	6	data2
arg	24:47	24:60	5	sizeof(data2)
op	24:47	0:0	6	sizeof
water	24:53	0:0	6	(
water	24:54	0:0	6	data2
water	24:59	0:0	6	)
water	24:61	0:0	4	;
call	25:8	25:60	4	test
arg	25:13	25:17	5	hmac
water	25:13	0:0	6	hmac
arg	25:19	25:23	5	key3
water	25:19	0:0	6	key3
arg	25:25	25:38	5	hmac->hashlen
water	25:25	0:0	6	hmac
op	25:29	0:0	6	->
water	25:31	0:0	6	hashlen
arg	25:40	25:45	5	data3
water	25:40	0:0	6	data3
arg	25:47	25:60	5	sizeof(data3)
op	25:47	0:0	6	sizeof
water	25:53	0:0	6	(
water	25:54	0:0	6	data3
water	25:59	0:0	6	)
water	25:61	0:0	4	;
call	26:8	26:60	4	test
arg	26:13	26:17	5	hmac
water	26:13	0:0	6	hmac
arg	26:19	26:23	5	key3
water	26:19	0:0	6	key3
arg	26:25	26:27	5	80
water	26:25	0:0	6	80
arg	26:40	26:45	5	data4
water	26:40	0:0	6	data4
arg	26:47	26:60	5	sizeof(data4)
op	26:47	0:0	6	sizeof
water	26:53	0:0	6	(
water	26:54	0:0	6	data4
water	26:59	0:0	6	)
water	26:61	0:0	4	;
call	27:8	27:60	4	test
arg	27:13	27:17	5	hmac
water	27:13	0:0	6	hmac
arg	27:19	27:23	5	key3
water	27:19	0:0	6	key3
arg	27:25	27:27	5	80
water	27:25	0:0	6	80
arg	27:40	27:45	5	data5
water	27:40	0:0	6	data5
arg	27:47	27:60	5	sizeof(data5)
op	27:47	0:0	6	sizeof
water	27:53	0:0	6	(
water	27:54	0:0	6	data5
water	27:59	0:0	6	)
water	27:61	0:0	4	;
call	28:8	28:25	4	av_hmac_free
arg	28:21	28:25	5	hmac
water	28:21	0:0	6	hmac
water	28:26	0:0	4	;
water	29:4	0:0	4	}
for	31:4	42:4	2	(i = AV_HMAC_SHA224 ;i <= AV_HMAC_SHA256;i ++)
forinit	31:9	31:27	3	i = AV_HMAC_SHA224 ;
water	31:9	0:0	4	i
op	31:11	0:0	4	=
water	31:13	0:0	4	AV_HMAC_SHA224
water	31:27	0:0	4	;
cond	31:29	31:34	3	i <= AV_HMAC_SHA256
water	31:29	0:0	4	i
op	31:31	0:0	4	<=
water	31:34	0:0	4	AV_HMAC_SHA256
forexpr	31:50	31:51	3	i ++
water	31:50	0:0	4	i
op	31:51	0:0	4	++
stmts	31:55	42:4	3	
water	31:55	0:0	4	{
water	32:8	0:0	4	hmac
op	32:13	0:0	4	=
call	32:15	32:30	4	av_hmac_alloc
arg	32:29	32:30	5	i
water	32:29	0:0	6	i
water	32:31	0:0	4	;
if	33:8	34:20	4	(! hmac)
cond	33:12	33:13	5	! hmac
op	33:12	0:0	6	!
water	33:13	0:0	6	hmac
stmts	34:12	34:20	5	
return	34:12	34:20	6	1
water	34:19	0:0	7	1
call	36:8	36:59	4	test
arg	36:13	36:17	5	hmac
water	36:13	0:0	6	hmac
arg	36:19	36:23	5	key1
water	36:19	0:0	6	key1
arg	36:25	36:37	5	sizeof(key1)
op	36:25	0:0	6	sizeof
water	36:31	0:0	6	(
water	36:32	0:0	6	key1
water	36:36	0:0	6	)
arg	36:39	36:44	5	data1
water	36:39	0:0	6	data1
arg	36:46	36:59	5	sizeof(data1)
op	36:46	0:0	6	sizeof
water	36:52	0:0	6	(
water	36:53	0:0	6	data1
water	36:58	0:0	6	)
water	36:60	0:0	4	;
call	37:8	37:59	4	test
arg	37:13	37:17	5	hmac
water	37:13	0:0	6	hmac
arg	37:19	37:23	5	key2
water	37:19	0:0	6	key2
arg	37:25	37:37	5	sizeof(key2)
op	37:25	0:0	6	sizeof
water	37:31	0:0	6	(
water	37:32	0:0	6	key2
water	37:36	0:0	6	)
arg	37:39	37:44	5	data2
water	37:39	0:0	6	data2
arg	37:46	37:59	5	sizeof(data2)
op	37:46	0:0	6	sizeof
water	37:52	0:0	6	(
water	37:53	0:0	6	data2
water	37:58	0:0	6	)
water	37:60	0:0	4	;
call	38:8	38:59	4	test
arg	38:13	38:17	5	hmac
water	38:13	0:0	6	hmac
arg	38:19	38:23	5	key3
water	38:19	0:0	6	key3
arg	38:25	38:27	5	20
water	38:25	0:0	6	20
arg	38:39	38:44	5	data3
water	38:39	0:0	6	data3
arg	38:46	38:59	5	sizeof(data3)
op	38:46	0:0	6	sizeof
water	38:52	0:0	6	(
water	38:53	0:0	6	data3
water	38:58	0:0	6	)
water	38:60	0:0	4	;
call	39:8	39:59	4	test
arg	39:13	39:17	5	hmac
water	39:13	0:0	6	hmac
arg	39:19	39:23	5	key3
water	39:19	0:0	6	key3
arg	39:25	39:37	5	sizeof(key3)
op	39:25	0:0	6	sizeof
water	39:31	0:0	6	(
water	39:32	0:0	6	key3
water	39:36	0:0	6	)
arg	39:39	39:44	5	data4
water	39:39	0:0	6	data4
arg	39:46	39:59	5	sizeof(data4)
op	39:46	0:0	6	sizeof
water	39:52	0:0	6	(
water	39:53	0:0	6	data4
water	39:58	0:0	6	)
water	39:60	0:0	4	;
call	40:8	40:59	4	test
arg	40:13	40:17	5	hmac
water	40:13	0:0	6	hmac
arg	40:19	40:23	5	key3
water	40:19	0:0	6	key3
arg	40:25	40:37	5	sizeof(key3)
op	40:25	0:0	6	sizeof
water	40:31	0:0	6	(
water	40:32	0:0	6	key3
water	40:36	0:0	6	)
arg	40:39	40:44	5	data6
water	40:39	0:0	6	data6
arg	40:46	40:59	5	sizeof(data6)
op	40:46	0:0	6	sizeof
water	40:52	0:0	6	(
water	40:53	0:0	6	data6
water	40:58	0:0	6	)
water	40:60	0:0	4	;
call	41:8	41:25	4	av_hmac_free
arg	41:21	41:25	5	hmac
water	41:21	0:0	6	hmac
water	41:26	0:0	4	;
water	42:4	0:0	4	}
for	43:4	54:4	2	(i = AV_HMAC_SHA384 ;i <= AV_HMAC_SHA512;i ++)
forinit	43:9	43:27	3	i = AV_HMAC_SHA384 ;
water	43:9	0:0	4	i
op	43:11	0:0	4	=
water	43:13	0:0	4	AV_HMAC_SHA384
water	43:27	0:0	4	;
cond	43:29	43:34	3	i <= AV_HMAC_SHA512
water	43:29	0:0	4	i
op	43:31	0:0	4	<=
water	43:34	0:0	4	AV_HMAC_SHA512
forexpr	43:50	43:51	3	i ++
water	43:50	0:0	4	i
op	43:51	0:0	4	++
stmts	43:55	54:4	3	
water	43:55	0:0	4	{
water	44:8	0:0	4	hmac
op	44:13	0:0	4	=
call	44:15	44:30	4	av_hmac_alloc
arg	44:29	44:30	5	i
water	44:29	0:0	6	i
water	44:31	0:0	4	;
if	45:8	46:20	4	(! hmac)
cond	45:12	45:13	5	! hmac
op	45:12	0:0	6	!
water	45:13	0:0	6	hmac
stmts	46:12	46:20	5	
return	46:12	46:20	6	1
water	46:19	0:0	7	1
call	48:8	48:59	4	test
arg	48:13	48:17	5	hmac
water	48:13	0:0	6	hmac
arg	48:19	48:23	5	key1
water	48:19	0:0	6	key1
arg	48:25	48:37	5	sizeof(key1)
op	48:25	0:0	6	sizeof
water	48:31	0:0	6	(
water	48:32	0:0	6	key1
water	48:36	0:0	6	)
arg	48:39	48:44	5	data1
water	48:39	0:0	6	data1
arg	48:46	48:59	5	sizeof(data1)
op	48:46	0:0	6	sizeof
water	48:52	0:0	6	(
water	48:53	0:0	6	data1
water	48:58	0:0	6	)
water	48:60	0:0	4	;
call	49:8	49:59	4	test
arg	49:13	49:17	5	hmac
water	49:13	0:0	6	hmac
arg	49:19	49:23	5	key2
water	49:19	0:0	6	key2
arg	49:25	49:37	5	sizeof(key2)
op	49:25	0:0	6	sizeof
water	49:31	0:0	6	(
water	49:32	0:0	6	key2
water	49:36	0:0	6	)
arg	49:39	49:44	5	data2
water	49:39	0:0	6	data2
arg	49:46	49:59	5	sizeof(data2)
op	49:46	0:0	6	sizeof
water	49:52	0:0	6	(
water	49:53	0:0	6	data2
water	49:58	0:0	6	)
water	49:60	0:0	4	;
call	50:8	50:49	4	test
arg	50:13	50:17	5	hmac
water	50:13	0:0	6	hmac
arg	50:19	50:23	5	key3
water	50:19	0:0	6	key3
arg	50:25	50:27	5	20
water	50:25	0:0	6	20
arg	50:29	50:34	5	data3
water	50:29	0:0	6	data3
arg	50:36	50:49	5	sizeof(data3)
op	50:36	0:0	6	sizeof
water	50:42	0:0	6	(
water	50:43	0:0	6	data3
water	50:48	0:0	6	)
water	50:50	0:0	4	;
call	51:8	51:59	4	test
arg	51:13	51:17	5	hmac
water	51:13	0:0	6	hmac
arg	51:19	51:23	5	key3
water	51:19	0:0	6	key3
arg	51:25	51:37	5	sizeof(key3)
op	51:25	0:0	6	sizeof
water	51:31	0:0	6	(
water	51:32	0:0	6	key3
water	51:36	0:0	6	)
arg	51:39	51:44	5	data4
water	51:39	0:0	6	data4
arg	51:46	51:59	5	sizeof(data4)
op	51:46	0:0	6	sizeof
water	51:52	0:0	6	(
water	51:53	0:0	6	data4
water	51:58	0:0	6	)
water	51:60	0:0	4	;
call	52:8	52:59	4	test
arg	52:13	52:17	5	hmac
water	52:13	0:0	6	hmac
arg	52:19	52:23	5	key3
water	52:19	0:0	6	key3
arg	52:25	52:37	5	sizeof(key3)
op	52:25	0:0	6	sizeof
water	52:31	0:0	6	(
water	52:32	0:0	6	key3
water	52:36	0:0	6	)
arg	52:39	52:44	5	data6
water	52:39	0:0	6	data6
arg	52:46	52:59	5	sizeof(data6)
op	52:46	0:0	6	sizeof
water	52:52	0:0	6	(
water	52:53	0:0	6	data6
water	52:58	0:0	6	)
water	52:60	0:0	4	;
call	53:8	53:25	4	av_hmac_free
arg	53:21	53:25	5	hmac
water	53:21	0:0	6	hmac
water	53:26	0:0	4	;
water	54:4	0:0	4	}
return	55:4	55:12	2	0
water	55:11	0:0	3	0

func	1:0	28:0	0	static int	mov_write_iods_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:65	2	MOVMuxContext *	mov
stmnts	0:0	27:31	1	
decl	3:4	3:39	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:39	2	int	has_audio
op	3:21	0:0	2	=
water	3:23	0:0	2	0
water	3:24	0:0	2	,
decl	3:4	3:39	2	int	has_video
op	3:36	0:0	2	=
water	3:38	0:0	2	0
decl	4:4	4:31	2	int64_t	pos
op	4:16	0:0	2	=
call	4:18	4:30	3	avio_tell
arg	4:28	4:30	4	pb
water	4:28	0:0	5	pb
decl	5:4	5:47	2	int	audio_profile
op	5:22	0:0	2	=
water	5:24	0:0	2	mov
op	5:27	0:0	2	->
water	5:29	0:0	2	iods_audio_profile
decl	6:4	6:47	2	int	video_profile
op	6:22	0:0	2	=
water	6:24	0:0	2	mov
op	6:27	0:0	2	->
water	6:29	0:0	2	iods_video_profile
for	7:4	12:4	2	(i = 0 ;i < mov -> nb_streams;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:25	3	i < mov -> nb_streams
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	mov
op	7:23	0:0	4	->
water	7:25	0:0	4	nb_streams
forexpr	7:37	7:38	3	i ++
water	7:37	0:0	4	i
op	7:38	0:0	4	++
stmts	7:42	12:4	3	
water	7:42	0:0	4	{
if	8:8	11:8	4	(mov -> tracks [ i ] . entry > 0 || mov -> flags & FF_MOV_FLAG_EMPTY_MOOV)
cond	8:12	8:53	5	mov -> tracks [ i ] . entry > 0 || mov -> flags & FF_MOV_FLAG_EMPTY_MOOV
water	8:12	0:0	6	mov
op	8:15	0:0	6	->
water	8:17	0:0	6	tracks
op	8:23	0:0	6	[
water	8:24	0:0	6	i
op	8:25	0:0	6	]
op	8:26	0:0	6	.
water	8:27	0:0	6	entry
op	8:33	0:0	6	>
water	8:35	0:0	6	0
op	8:37	0:0	6	||
water	8:40	0:0	6	mov
op	8:43	0:0	6	->
water	8:45	0:0	6	flags
op	8:51	0:0	6	&
water	8:53	0:0	6	FF_MOV_FLAG_EMPTY_MOOV
stmts	8:77	11:8	5	
water	8:77	0:0	6	{
water	9:12	0:0	6	has_audio
op	9:22	0:0	6	|=
water	9:25	0:0	6	mov
op	9:28	0:0	6	->
water	9:30	0:0	6	tracks
op	9:36	0:0	6	[
water	9:37	0:0	6	i
op	9:38	0:0	6	]
op	9:39	0:0	6	.
water	9:40	0:0	6	enc
op	9:43	0:0	6	->
water	9:45	0:0	6	codec_type
op	9:56	0:0	6	==
water	9:59	0:0	6	AVMEDIA_TYPE_AUDIO
water	9:77	0:0	6	;
water	10:12	0:0	6	has_video
op	10:22	0:0	6	|=
water	10:25	0:0	6	mov
op	10:28	0:0	6	->
water	10:30	0:0	6	tracks
op	10:36	0:0	6	[
water	10:37	0:0	6	i
op	10:38	0:0	6	]
op	10:39	0:0	6	.
water	10:40	0:0	6	enc
op	10:43	0:0	6	->
water	10:45	0:0	6	codec_type
op	10:56	0:0	6	==
water	10:59	0:0	6	AVMEDIA_TYPE_VIDEO
water	10:77	0:0	6	;
water	11:8	0:0	6	}
water	12:4	0:0	4	}
if	13:4	14:40	2	(audio_profile < 0)
cond	13:8	13:24	3	audio_profile < 0
water	13:8	0:0	4	audio_profile
op	13:22	0:0	4	<
water	13:24	0:0	4	0
stmts	14:8	14:40	3	
water	14:8	0:0	4	audio_profile
op	14:22	0:0	4	=
water	14:24	0:0	4	0
water	14:25	0:0	4	xFF
op	14:29	0:0	4	-
water	14:31	0:0	4	has_audio
water	14:40	0:0	4	;
if	15:4	16:40	2	(video_profile < 0)
cond	15:8	15:24	3	video_profile < 0
water	15:8	0:0	4	video_profile
op	15:22	0:0	4	<
water	15:24	0:0	4	0
stmts	16:8	16:40	3	
water	16:8	0:0	4	video_profile
op	16:22	0:0	4	=
water	16:24	0:0	4	0
water	16:25	0:0	4	xFF
op	16:29	0:0	4	-
water	16:31	0:0	4	has_video
water	16:40	0:0	4	;
call	17:4	17:21	2	avio_wb32
arg	17:14	17:16	3	pb
water	17:14	0:0	4	pb
arg	17:18	17:21	3	0x0
water	17:18	0:0	4	0
water	17:19	0:0	4	x0
water	17:22	0:0	2	;
call	18:4	18:27	2	ffio_wfourcc
arg	18:17	18:19	3	pb
water	18:17	0:0	4	pb
arg	18:21	18:27	3	"iods"
water	18:21	0:0	4	"iods"
water	18:28	0:0	2	;
call	19:4	19:19	2	avio_wb32
arg	19:14	19:16	3	pb
water	19:14	0:0	4	pb
arg	19:18	19:19	3	0
water	19:18	0:0	4	0
water	19:20	0:0	2	;
call	20:4	20:25	2	put_descr
arg	20:14	20:16	3	pb
water	20:14	0:0	4	pb
arg	20:18	20:22	3	0x10
water	20:18	0:0	4	0
water	20:19	0:0	4	x10
arg	20:24	20:25	3	7
water	20:24	0:0	4	7
water	20:26	0:0	2	;
call	21:4	21:24	2	avio_wb16
arg	21:14	21:16	3	pb
water	21:14	0:0	4	pb
arg	21:18	21:24	3	0x004f
water	21:18	0:0	4	0
water	21:19	0:0	4	x004f
water	21:25	0:0	2	;
call	22:4	22:20	2	avio_w8
arg	22:12	22:14	3	pb
water	22:12	0:0	4	pb
arg	22:16	22:20	3	0xff
water	22:16	0:0	4	0
water	22:17	0:0	4	xff
water	22:21	0:0	2	;
call	23:4	23:20	2	avio_w8
arg	23:12	23:14	3	pb
water	23:12	0:0	4	pb
arg	23:16	23:20	3	0xff
water	23:16	0:0	4	0
water	23:17	0:0	4	xff
water	23:21	0:0	2	;
call	24:4	24:29	2	avio_w8
arg	24:12	24:14	3	pb
water	24:12	0:0	4	pb
arg	24:16	24:29	3	audio_profile
water	24:16	0:0	4	audio_profile
water	24:30	0:0	2	;
call	25:4	25:29	2	avio_w8
arg	25:12	25:14	3	pb
water	25:12	0:0	4	pb
arg	25:16	25:29	3	video_profile
water	25:16	0:0	4	video_profile
water	25:30	0:0	2	;
call	26:4	26:20	2	avio_w8
arg	26:12	26:14	3	pb
water	26:12	0:0	4	pb
arg	26:16	26:20	3	0xff
water	26:16	0:0	4	0
water	26:17	0:0	4	xff
water	26:21	0:0	2	;
return	27:4	27:31	2	update_size(pb,pos)
call	27:11	27:30	3	update_size
arg	27:23	27:25	4	pb
water	27:23	0:0	5	pb
arg	27:27	27:30	4	pos
water	27:27	0:0	5	pos

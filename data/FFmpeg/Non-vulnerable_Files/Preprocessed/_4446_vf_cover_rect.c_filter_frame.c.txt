func	1:0	50:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	49:47	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:35	2	CoverContext	*cover
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
decl	5:4	5:40	2	AVDictionaryEntry	*ex
water	5:25	0:0	2	,
decl	5:4	5:40	2	AVDictionaryEntry	*ey
water	5:30	0:0	2	,
decl	5:4	5:40	2	AVDictionaryEntry	*ew
water	5:35	0:0	2	,
decl	5:4	5:40	2	AVDictionaryEntry	*eh
decl	6:4	6:38	2	int	x
op	6:10	0:0	2	=
op	6:12	0:0	2	-
water	6:13	0:0	2	1
water	6:14	0:0	2	,
decl	6:4	6:38	2	int	y
op	6:18	0:0	2	=
op	6:20	0:0	2	-
water	6:21	0:0	2	1
water	6:22	0:0	2	,
decl	6:4	6:38	2	int	w
op	6:26	0:0	2	=
op	6:28	0:0	2	-
water	6:29	0:0	2	1
water	6:30	0:0	2	,
decl	6:4	6:38	2	int	h
op	6:34	0:0	2	=
op	6:36	0:0	2	-
water	6:37	0:0	2	1
decl	7:4	7:75	2	char	*xendptr
op	7:18	0:0	2	=
water	7:20	0:0	2	NULL
water	7:24	0:0	2	,
decl	7:4	7:75	2	char	*yendptr
op	7:35	0:0	2	=
water	7:37	0:0	2	NULL
water	7:41	0:0	2	,
decl	7:4	7:75	2	char	*wendptr
op	7:52	0:0	2	=
water	7:54	0:0	2	NULL
water	7:58	0:0	2	,
decl	7:4	7:75	2	char	*hendptr
op	7:69	0:0	2	=
water	7:71	0:0	2	NULL
water	8:4	0:0	2	ex
op	8:7	0:0	2	=
call	8:9	8:75	2	av_dict_get
arg	8:21	8:33	3	in->metadata
water	8:21	0:0	4	in
op	8:23	0:0	4	->
water	8:25	0:0	4	metadata
arg	8:35	8:49	3	"lavfi.rect.x"
water	8:35	0:0	4	"lavfi.rect.x"
arg	8:51	8:55	3	NULL
water	8:51	0:0	4	NULL
arg	8:57	8:75	3	AV_DICT_MATCH_CASE
water	8:57	0:0	4	AV_DICT_MATCH_CASE
water	8:76	0:0	2	;
water	9:4	0:0	2	ey
op	9:7	0:0	2	=
call	9:9	9:75	2	av_dict_get
arg	9:21	9:33	3	in->metadata
water	9:21	0:0	4	in
op	9:23	0:0	4	->
water	9:25	0:0	4	metadata
arg	9:35	9:49	3	"lavfi.rect.y"
water	9:35	0:0	4	"lavfi.rect.y"
arg	9:51	9:55	3	NULL
water	9:51	0:0	4	NULL
arg	9:57	9:75	3	AV_DICT_MATCH_CASE
water	9:57	0:0	4	AV_DICT_MATCH_CASE
water	9:76	0:0	2	;
water	10:4	0:0	2	ew
op	10:7	0:0	2	=
call	10:9	10:75	2	av_dict_get
arg	10:21	10:33	3	in->metadata
water	10:21	0:0	4	in
op	10:23	0:0	4	->
water	10:25	0:0	4	metadata
arg	10:35	10:49	3	"lavfi.rect.w"
water	10:35	0:0	4	"lavfi.rect.w"
arg	10:51	10:55	3	NULL
water	10:51	0:0	4	NULL
arg	10:57	10:75	3	AV_DICT_MATCH_CASE
water	10:57	0:0	4	AV_DICT_MATCH_CASE
water	10:76	0:0	2	;
water	11:4	0:0	2	eh
op	11:7	0:0	2	=
call	11:9	11:75	2	av_dict_get
arg	11:21	11:33	3	in->metadata
water	11:21	0:0	4	in
op	11:23	0:0	4	->
water	11:25	0:0	4	metadata
arg	11:35	11:49	3	"lavfi.rect.h"
water	11:35	0:0	4	"lavfi.rect.h"
arg	11:51	11:55	3	NULL
water	11:51	0:0	4	NULL
arg	11:57	11:75	3	AV_DICT_MATCH_CASE
water	11:57	0:0	4	AV_DICT_MATCH_CASE
water	11:76	0:0	2	;
if	12:4	17:4	2	(ex && ey && ew && eh)
cond	12:8	12:26	3	ex && ey && ew && eh
water	12:8	0:0	4	ex
op	12:11	0:0	4	&&
water	12:14	0:0	4	ey
op	12:17	0:0	4	&&
water	12:20	0:0	4	ew
op	12:23	0:0	4	&&
water	12:26	0:0	4	eh
stmts	12:30	17:4	3	
water	12:30	0:0	4	{
water	13:8	0:0	4	x
op	13:10	0:0	4	=
call	13:12	13:42	4	strtol
arg	13:19	13:28	5	ex->value
water	13:19	0:0	6	ex
op	13:21	0:0	6	->
water	13:23	0:0	6	value
arg	13:30	13:38	5	&xendptr
op	13:30	0:0	6	&
water	13:31	0:0	6	xendptr
arg	13:40	13:42	5	10
water	13:40	0:0	6	10
water	13:43	0:0	4	;
water	14:8	0:0	4	y
op	14:10	0:0	4	=
call	14:12	14:42	4	strtol
arg	14:19	14:28	5	ey->value
water	14:19	0:0	6	ey
op	14:21	0:0	6	->
water	14:23	0:0	6	value
arg	14:30	14:38	5	&yendptr
op	14:30	0:0	6	&
water	14:31	0:0	6	yendptr
arg	14:40	14:42	5	10
water	14:40	0:0	6	10
water	14:43	0:0	4	;
water	15:8	0:0	4	w
op	15:10	0:0	4	=
call	15:12	15:42	4	strtol
arg	15:19	15:28	5	ew->value
water	15:19	0:0	6	ew
op	15:21	0:0	6	->
water	15:23	0:0	6	value
arg	15:30	15:38	5	&wendptr
op	15:30	0:0	6	&
water	15:31	0:0	6	wendptr
arg	15:40	15:42	5	10
water	15:40	0:0	6	10
water	15:43	0:0	4	;
water	16:8	0:0	4	h
op	16:10	0:0	4	=
call	16:12	16:42	4	strtol
arg	16:19	16:28	5	eh->value
water	16:19	0:0	6	eh
op	16:21	0:0	6	->
water	16:23	0:0	6	value
arg	16:30	16:38	5	&hendptr
op	16:30	0:0	6	&
water	16:31	0:0	6	hendptr
arg	16:40	16:42	5	10
water	16:40	0:0	6	10
water	16:43	0:0	4	;
water	17:4	0:0	4	}
if	18:4	22:4	2	(! xendptr || * xendptr || ! yendptr || * yendptr || ! wendptr || * wendptr || ! hendptr || ! hendptr)
cond	18:8	19:45	3	! xendptr || * xendptr || ! yendptr || * yendptr || ! wendptr || * wendptr || ! hendptr || ! hendptr
op	18:8	0:0	4	!
water	18:9	0:0	4	xendptr
op	18:17	0:0	4	||
op	18:20	0:0	4	*
water	18:21	0:0	4	xendptr
op	18:29	0:0	4	||
op	18:32	0:0	4	!
water	18:33	0:0	4	yendptr
op	18:41	0:0	4	||
op	18:44	0:0	4	*
water	18:45	0:0	4	yendptr
op	18:53	0:0	4	||
op	19:8	0:0	4	!
water	19:9	0:0	4	wendptr
op	19:17	0:0	4	||
op	19:20	0:0	4	*
water	19:21	0:0	4	wendptr
op	19:29	0:0	4	||
op	19:32	0:0	4	!
water	19:33	0:0	4	hendptr
op	19:41	0:0	4	||
op	19:44	0:0	4	!
water	19:45	0:0	4	hendptr
stmts	20:6	22:4	3	
water	20:6	0:0	4	{
return	21:8	21:51	4	ff_filter_frame(ctx->outputs[0],in)
call	21:15	21:50	5	ff_filter_frame
arg	21:31	21:46	6	ctx->outputs[0]
water	21:31	0:0	7	ctx
op	21:34	0:0	7	->
water	21:36	0:0	7	outputs
op	21:43	0:0	7	[
water	21:44	0:0	7	0
op	21:45	0:0	7	]
arg	21:48	21:50	6	in
water	21:48	0:0	7	in
water	22:4	0:0	4	}
if	23:4	26:4	2	(x < 0)
cond	23:8	23:12	3	x < 0
water	23:8	0:0	4	x
op	23:10	0:0	4	<
water	23:12	0:0	4	0
stmts	23:15	26:4	3	
water	23:15	0:0	4	{
water	24:8	0:0	4	w
op	24:10	0:0	4	+=
water	24:13	0:0	4	x
water	24:14	0:0	4	;
water	25:8	0:0	4	x
op	25:10	0:0	4	=
water	25:12	0:0	4	0
water	25:13	0:0	4	;
water	26:4	0:0	4	}
if	27:4	30:4	2	(y < 0)
cond	27:8	27:12	3	y < 0
water	27:8	0:0	4	y
op	27:10	0:0	4	<
water	27:12	0:0	4	0
stmts	27:15	30:4	3	
water	27:15	0:0	4	{
water	28:8	0:0	4	h
op	28:10	0:0	4	+=
water	28:13	0:0	4	y
water	28:14	0:0	4	;
water	29:8	0:0	4	y
op	29:10	0:0	4	=
water	29:12	0:0	4	0
water	29:13	0:0	4	;
water	30:4	0:0	4	}
water	31:4	0:0	2	w
op	31:6	0:0	2	=
call	31:8	31:31	2	FFMIN
arg	31:14	31:15	3	w
water	31:14	0:0	4	w
arg	31:17	31:31	3	in->width-x
water	31:17	0:0	4	in
op	31:19	0:0	4	->
water	31:21	0:0	4	width
op	31:28	0:0	4	-
water	31:30	0:0	4	x
water	31:32	0:0	2	;
water	32:4	0:0	2	h
op	32:6	0:0	2	=
call	32:8	32:31	2	FFMIN
arg	32:14	32:15	3	h
water	32:14	0:0	4	h
arg	32:17	32:31	3	in->height-y
water	32:17	0:0	4	in
op	32:19	0:0	4	->
water	32:21	0:0	4	height
op	32:28	0:0	4	-
water	32:30	0:0	4	y
water	32:32	0:0	2	;
if	33:4	34:30	2	(w > in -> width || h > in -> height || w <= 0 || h <= 0)
cond	33:8	33:58	3	w > in -> width || h > in -> height || w <= 0 || h <= 0
water	33:8	0:0	4	w
op	33:10	0:0	4	>
water	33:12	0:0	4	in
op	33:14	0:0	4	->
water	33:16	0:0	4	width
op	33:22	0:0	4	||
water	33:25	0:0	4	h
op	33:27	0:0	4	>
water	33:29	0:0	4	in
op	33:31	0:0	4	->
water	33:33	0:0	4	height
op	33:40	0:0	4	||
water	33:43	0:0	4	w
op	33:45	0:0	4	<=
water	33:48	0:0	4	0
op	33:50	0:0	4	||
water	33:53	0:0	4	h
op	33:55	0:0	4	<=
water	33:58	0:0	4	0
stmts	34:8	34:30	3	
return	34:8	34:30	4	AVERROR(EINVAL)
call	34:15	34:29	5	AVERROR
arg	34:23	34:29	6	EINVAL
water	34:23	0:0	7	EINVAL
if	35:4	38:4	2	(cover -> cover_frame)
cond	35:8	35:15	3	cover -> cover_frame
water	35:8	0:0	4	cover
op	35:13	0:0	4	->
water	35:15	0:0	4	cover_frame
stmts	35:28	38:4	3	
water	35:28	0:0	4	{
if	36:8	37:34	4	(w != cover -> cover_frame -> width || h != cover -> cover_frame -> height)
cond	36:12	36:71	5	w != cover -> cover_frame -> width || h != cover -> cover_frame -> height
water	36:12	0:0	6	w
op	36:14	0:0	6	!=
water	36:17	0:0	6	cover
op	36:22	0:0	6	->
water	36:24	0:0	6	cover_frame
op	36:35	0:0	6	->
water	36:37	0:0	6	width
op	36:43	0:0	6	||
water	36:46	0:0	6	h
op	36:48	0:0	6	!=
water	36:51	0:0	6	cover
op	36:56	0:0	6	->
water	36:58	0:0	6	cover_frame
op	36:69	0:0	6	->
water	36:71	0:0	6	height
stmts	37:12	37:34	5	
return	37:12	37:34	6	AVERROR(EINVAL)
call	37:19	37:33	7	AVERROR
arg	37:27	37:33	8	EINVAL
water	37:27	0:0	9	EINVAL
water	38:4	0:0	4	}
water	39:4	0:0	2	cover
op	39:9	0:0	2	->
water	39:11	0:0	2	width
op	39:18	0:0	2	=
water	39:20	0:0	2	w
water	39:21	0:0	2	;
water	40:4	0:0	2	cover
op	40:9	0:0	2	->
water	40:11	0:0	2	height
op	40:18	0:0	2	=
water	40:20	0:0	2	h
water	40:21	0:0	2	;
water	41:4	0:0	2	x
op	41:6	0:0	2	=
call	41:8	41:36	2	av_clip
arg	41:16	41:17	3	x
water	41:16	0:0	4	x
arg	41:19	41:20	3	0
water	41:19	0:0	4	0
arg	41:22	41:36	3	in->width-w
water	41:22	0:0	4	in
op	41:24	0:0	4	->
water	41:26	0:0	4	width
op	41:33	0:0	4	-
water	41:35	0:0	4	w
water	41:37	0:0	2	;
water	42:4	0:0	2	y
op	42:6	0:0	2	=
call	42:8	42:36	2	av_clip
arg	42:16	42:17	3	y
water	42:16	0:0	4	y
arg	42:19	42:20	3	0
water	42:19	0:0	4	0
arg	42:22	42:36	3	in->height-h
water	42:22	0:0	4	in
op	42:24	0:0	4	->
water	42:26	0:0	4	height
op	42:33	0:0	4	-
water	42:35	0:0	4	h
water	42:37	0:0	2	;
call	43:4	43:29	2	av_frame_make_writable
arg	43:27	43:29	3	in
water	43:27	0:0	4	in
water	43:30	0:0	2	;
if	44:4	46:4	2	(cover -> mode == MODE_BLUR)
cond	44:8	44:23	3	cover -> mode == MODE_BLUR
water	44:8	0:0	4	cover
op	44:13	0:0	4	->
water	44:15	0:0	4	mode
op	44:20	0:0	4	==
water	44:23	0:0	4	MODE_BLUR
stmts	44:34	46:4	3	
water	44:34	0:0	4	{
call	45:8	45:29	4	blur
arg	45:14	45:19	5	cover
water	45:14	0:0	6	cover
arg	45:21	45:23	5	in
water	45:21	0:0	6	in
arg	45:25	45:26	5	x
water	45:25	0:0	6	x
arg	45:28	45:29	5	y
water	45:28	0:0	6	y
water	45:30	0:0	4	;
water	46:4	0:0	4	}
else	46:6	48:4	2
stmts	46:11	48:4	3	
water	46:11	0:0	4	{
call	47:8	47:34	4	cover_rect
arg	47:19	47:24	5	cover
water	47:19	0:0	6	cover
arg	47:26	47:28	5	in
water	47:26	0:0	6	in
arg	47:30	47:31	5	x
water	47:30	0:0	6	x
arg	47:33	47:34	5	y
water	47:33	0:0	6	y
water	47:35	0:0	4	;
water	48:4	0:0	4	}
return	49:4	49:47	2	ff_filter_frame(ctx->outputs[0],in)
call	49:11	49:46	3	ff_filter_frame
arg	49:27	49:42	4	ctx->outputs[0]
water	49:27	0:0	5	ctx
op	49:30	0:0	5	->
water	49:32	0:0	5	outputs
op	49:39	0:0	5	[
water	49:40	0:0	5	0
op	49:41	0:0	5	]
arg	49:44	49:46	4	in
water	49:44	0:0	5	in

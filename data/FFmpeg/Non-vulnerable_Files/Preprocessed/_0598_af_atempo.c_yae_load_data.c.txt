func	1:0	53:0	0	static int	yae_load_data
params	1:24	0:0	1	
param	1:25	1:46	2	ATempoContext *	atempo
param	2:25	2:48	2	const uint8_t * *	src_ref
param	3:25	3:47	2	const uint8_t *	src_end
param	4:25	4:42	2	int64_t	stop_here
stmnts	0:0	52:65	1	
decl	7:4	7:33	2	const uint8_t	*src
op	7:23	0:0	2	=
op	7:25	0:0	2	*
water	7:26	0:0	2	src_ref
decl	8:4	8:57	2	const int	read_size
op	8:24	0:0	2	=
water	8:26	0:0	2	stop_here
op	8:36	0:0	2	-
water	8:38	0:0	2	atempo
op	8:44	0:0	2	->
water	8:46	0:0	2	position
op	8:54	0:0	2	[
water	8:55	0:0	2	0
op	8:56	0:0	2	]
if	9:4	11:4	2	(stop_here <= atempo -> position [ 0 ])
cond	9:8	9:39	3	stop_here <= atempo -> position [ 0 ]
water	9:8	0:0	4	stop_here
op	9:18	0:0	4	<=
water	9:21	0:0	4	atempo
op	9:27	0:0	4	->
water	9:29	0:0	4	position
op	9:37	0:0	4	[
water	9:38	0:0	4	0
op	9:39	0:0	4	]
stmts	9:42	11:4	3	
water	9:42	0:0	4	{
return	10:8	10:16	4	0
water	10:15	0:0	5	0
water	11:4	0:0	4	}
call	13:4	13:40	2	av_assert0
arg	13:15	13:40	3	read_size<=atempo->ring
water	13:15	0:0	4	read_size
op	13:25	0:0	4	<=
water	13:28	0:0	4	atempo
op	13:34	0:0	4	->
water	13:36	0:0	4	ring
water	13:41	0:0	2	;
while	14:4	47:4	2	(atempo -> position [ 0 ] < stop_here && src < src_end)
cond	14:11	14:52	3	atempo -> position [ 0 ] < stop_here && src < src_end
water	14:11	0:0	4	atempo
op	14:17	0:0	4	->
water	14:19	0:0	4	position
op	14:27	0:0	4	[
water	14:28	0:0	4	0
op	14:29	0:0	4	]
op	14:31	0:0	4	<
water	14:33	0:0	4	stop_here
op	14:43	0:0	4	&&
water	14:46	0:0	4	src
op	14:50	0:0	4	<
water	14:52	0:0	4	src_end
stmts	14:61	47:4	3	
water	14:61	0:0	4	{
decl	15:8	15:58	4	int	src_samples
op	15:24	0:0	4	=
water	15:26	0:0	4	(
water	15:27	0:0	4	src_end
op	15:35	0:0	4	-
water	15:37	0:0	4	src
water	15:40	0:0	4	)
op	15:42	0:0	4	/
water	15:44	0:0	4	atempo
op	15:50	0:0	4	->
water	15:52	0:0	4	stride
decl	17:8	17:52	4	int	nsamples
op	17:21	0:0	4	=
call	17:23	17:51	5	FFMIN
arg	17:29	17:38	6	read_size
water	17:29	0:0	7	read_size
arg	17:40	17:51	6	src_samples
water	17:40	0:0	7	src_samples
decl	18:8	18:14	4	int	na
decl	19:8	19:14	4	int	nb
water	20:8	0:0	4	nsamples
op	20:17	0:0	4	=
call	20:19	20:47	4	FFMIN
arg	20:25	20:33	5	nsamples
water	20:25	0:0	6	nsamples
arg	20:35	20:47	5	atempo->ring
water	20:35	0:0	6	atempo
op	20:41	0:0	6	->
water	20:43	0:0	6	ring
water	20:48	0:0	4	;
water	21:8	0:0	4	na
op	21:11	0:0	4	=
call	21:13	21:56	4	FFMIN
arg	21:19	21:27	5	nsamples
water	21:19	0:0	6	nsamples
arg	21:29	21:56	5	atempo->ring-atempo->tail
water	21:29	0:0	6	atempo
op	21:35	0:0	6	->
water	21:37	0:0	6	ring
op	21:42	0:0	6	-
water	21:44	0:0	6	atempo
op	21:50	0:0	6	->
water	21:52	0:0	6	tail
water	21:57	0:0	4	;
water	22:8	0:0	4	nb
op	22:11	0:0	4	=
call	22:13	22:46	4	FFMIN
arg	22:19	22:32	5	nsamples-na
water	22:19	0:0	6	nsamples
op	22:28	0:0	6	-
water	22:30	0:0	6	na
arg	22:34	22:46	5	atempo->ring
water	22:34	0:0	6	atempo
op	22:40	0:0	6	->
water	22:42	0:0	6	ring
water	22:47	0:0	4	;
if	23:8	34:8	4	(na)
cond	23:12	23:12	5	na
water	23:12	0:0	6	na
stmts	23:16	34:8	5	
water	23:16	0:0	6	{
decl	24:12	24:71	6	uint8_t	*a
op	24:23	0:0	6	=
water	24:25	0:0	6	atempo
op	24:31	0:0	6	->
water	24:33	0:0	6	buffer
op	24:40	0:0	6	+
water	24:42	0:0	6	atempo
op	24:48	0:0	6	->
water	24:50	0:0	6	tail
op	24:55	0:0	6	*
water	24:57	0:0	6	atempo
op	24:63	0:0	6	->
water	24:65	0:0	6	stride
call	25:12	25:46	6	memcpy
arg	25:19	25:20	7	a
water	25:19	0:0	8	a
arg	25:22	25:25	7	src
water	25:22	0:0	8	src
arg	25:27	25:46	7	na*atempo->stride
water	25:27	0:0	8	na
op	25:30	0:0	8	*
water	25:32	0:0	8	atempo
op	25:38	0:0	8	->
water	25:40	0:0	8	stride
water	25:47	0:0	6	;
water	26:12	0:0	6	src
op	26:16	0:0	6	+=
water	26:19	0:0	6	na
op	26:22	0:0	6	*
water	26:24	0:0	6	atempo
op	26:30	0:0	6	->
water	26:32	0:0	6	stride
water	26:38	0:0	6	;
water	27:12	0:0	6	atempo
op	27:18	0:0	6	->
water	27:20	0:0	6	position
op	27:28	0:0	6	[
water	27:29	0:0	6	0
op	27:30	0:0	6	]
op	27:32	0:0	6	+=
water	27:35	0:0	6	na
water	27:37	0:0	6	;
water	28:12	0:0	6	atempo
op	28:18	0:0	6	->
water	28:20	0:0	6	size
op	28:25	0:0	6	=
call	28:27	28:64	6	FFMIN
arg	28:33	28:50	7	atempo->size+na
water	28:33	0:0	8	atempo
op	28:39	0:0	8	->
water	28:41	0:0	8	size
op	28:46	0:0	8	+
water	28:48	0:0	8	na
arg	28:52	28:64	7	atempo->ring
water	28:52	0:0	8	atempo
op	28:58	0:0	8	->
water	28:60	0:0	8	ring
water	28:65	0:0	6	;
water	29:12	0:0	6	atempo
op	29:18	0:0	6	->
water	29:20	0:0	6	tail
op	29:25	0:0	6	=
water	29:27	0:0	6	(
water	29:28	0:0	6	atempo
op	29:34	0:0	6	->
water	29:36	0:0	6	tail
op	29:41	0:0	6	+
water	29:43	0:0	6	na
water	29:45	0:0	6	)
op	29:47	0:0	6	%
water	29:49	0:0	6	atempo
op	29:55	0:0	6	->
water	29:57	0:0	6	ring
water	29:61	0:0	6	;
water	30:12	0:0	6	atempo
op	30:18	0:0	6	->
water	30:20	0:0	6	head
op	30:25	0:0	6	=
water	31:16	0:0	6	atempo
op	31:22	0:0	6	->
water	31:24	0:0	6	size
op	31:29	0:0	6	<
water	31:31	0:0	6	atempo
op	31:37	0:0	6	->
water	31:39	0:0	6	ring
water	31:44	0:0	6	?
water	32:16	0:0	6	atempo
op	32:22	0:0	6	->
water	32:24	0:0	6	tail
op	32:29	0:0	6	-
water	32:31	0:0	6	atempo
op	32:37	0:0	6	->
water	32:39	0:0	6	size
water	32:44	0:0	6	:
water	33:16	0:0	6	atempo
op	33:22	0:0	6	->
water	33:24	0:0	6	tail
water	33:28	0:0	6	;
water	34:8	0:0	6	}
if	35:8	46:8	4	(nb)
cond	35:12	35:12	5	nb
water	35:12	0:0	6	nb
stmts	35:16	46:8	5	
water	35:16	0:0	6	{
decl	36:12	36:39	6	uint8_t	*b
op	36:23	0:0	6	=
water	36:25	0:0	6	atempo
op	36:31	0:0	6	->
water	36:33	0:0	6	buffer
call	37:12	37:46	6	memcpy
arg	37:19	37:20	7	b
water	37:19	0:0	8	b
arg	37:22	37:25	7	src
water	37:22	0:0	8	src
arg	37:27	37:46	7	nb*atempo->stride
water	37:27	0:0	8	nb
op	37:30	0:0	8	*
water	37:32	0:0	8	atempo
op	37:38	0:0	8	->
water	37:40	0:0	8	stride
water	37:47	0:0	6	;
water	38:12	0:0	6	src
op	38:16	0:0	6	+=
water	38:19	0:0	6	nb
op	38:22	0:0	6	*
water	38:24	0:0	6	atempo
op	38:30	0:0	6	->
water	38:32	0:0	6	stride
water	38:38	0:0	6	;
water	39:12	0:0	6	atempo
op	39:18	0:0	6	->
water	39:20	0:0	6	position
op	39:28	0:0	6	[
water	39:29	0:0	6	0
op	39:30	0:0	6	]
op	39:32	0:0	6	+=
water	39:35	0:0	6	nb
water	39:37	0:0	6	;
water	40:12	0:0	6	atempo
op	40:18	0:0	6	->
water	40:20	0:0	6	size
op	40:25	0:0	6	=
call	40:27	40:64	6	FFMIN
arg	40:33	40:50	7	atempo->size+nb
water	40:33	0:0	8	atempo
op	40:39	0:0	8	->
water	40:41	0:0	8	size
op	40:46	0:0	8	+
water	40:48	0:0	8	nb
arg	40:52	40:64	7	atempo->ring
water	40:52	0:0	8	atempo
op	40:58	0:0	8	->
water	40:60	0:0	8	ring
water	40:65	0:0	6	;
water	41:12	0:0	6	atempo
op	41:18	0:0	6	->
water	41:20	0:0	6	tail
op	41:25	0:0	6	=
water	41:27	0:0	6	(
water	41:28	0:0	6	atempo
op	41:34	0:0	6	->
water	41:36	0:0	6	tail
op	41:41	0:0	6	+
water	41:43	0:0	6	nb
water	41:45	0:0	6	)
op	41:47	0:0	6	%
water	41:49	0:0	6	atempo
op	41:55	0:0	6	->
water	41:57	0:0	6	ring
water	41:61	0:0	6	;
water	42:12	0:0	6	atempo
op	42:18	0:0	6	->
water	42:20	0:0	6	head
op	42:25	0:0	6	=
water	43:16	0:0	6	atempo
op	43:22	0:0	6	->
water	43:24	0:0	6	size
op	43:29	0:0	6	<
water	43:31	0:0	6	atempo
op	43:37	0:0	6	->
water	43:39	0:0	6	ring
water	43:44	0:0	6	?
water	44:16	0:0	6	atempo
op	44:22	0:0	6	->
water	44:24	0:0	6	tail
op	44:29	0:0	6	-
water	44:31	0:0	6	atempo
op	44:37	0:0	6	->
water	44:39	0:0	6	size
water	44:44	0:0	6	:
water	45:16	0:0	6	atempo
op	45:22	0:0	6	->
water	45:24	0:0	6	tail
water	45:28	0:0	6	;
water	46:8	0:0	6	}
water	47:4	0:0	4	}
op	49:4	0:0	2	*
water	49:5	0:0	2	src_ref
op	49:13	0:0	2	=
water	49:15	0:0	2	src
water	49:18	0:0	2	;
call	51:4	51:47	2	av_assert0
arg	51:15	51:47	3	atempo->position[0]<=stop_here
water	51:15	0:0	4	atempo
op	51:21	0:0	4	->
water	51:23	0:0	4	position
op	51:31	0:0	4	[
water	51:32	0:0	4	0
op	51:33	0:0	4	]
op	51:35	0:0	4	<=
water	51:38	0:0	4	stop_here
water	51:48	0:0	2	;
return	52:4	52:65	2	atempo->position[0]==stop_here?0:AVERROR(EAGAIN)
water	52:11	0:0	3	atempo
op	52:17	0:0	3	->
water	52:19	0:0	3	position
op	52:27	0:0	3	[
water	52:28	0:0	3	0
op	52:29	0:0	3	]
op	52:31	0:0	3	==
water	52:34	0:0	3	stop_here
water	52:44	0:0	3	?
water	52:46	0:0	3	0
water	52:48	0:0	3	:
call	52:50	52:64	3	AVERROR
arg	52:58	52:64	4	EAGAIN
water	52:58	0:0	5	EAGAIN

func	1:0	60:0	0	static int	load_font_fontconfig
params	1:31	0:0	1	
param	1:32	1:52	2	AVFilterContext *	ctx
stmnts	0:0	59:14	1	
decl	3:4	3:34	2	DrawTextContext	*s
op	3:23	0:0	2	=
water	3:25	0:0	2	ctx
op	3:28	0:0	2	->
water	3:30	0:0	2	priv
decl	4:4	4:24	2	FcConfig	*fontconfig
decl	5:4	5:25	2	FcPattern	*pat
water	5:18	0:0	2	,
decl	5:4	5:25	2	FcPattern	*best
decl	6:4	6:35	2	FcResult	result
op	6:20	0:0	2	=
water	6:22	0:0	2	FcResultMatch
decl	7:4	7:21	2	FcChar8	*filename
decl	8:4	8:13	2	int	index
decl	9:4	9:15	2	double	size
decl	10:4	10:29	2	int	err
op	10:12	0:0	2	=
call	10:14	10:28	3	AVERROR
arg	10:22	10:28	4	ENOENT
water	10:22	0:0	5	ENOENT
water	11:4	0:0	2	fontconfig
op	11:15	0:0	2	=
call	11:17	11:42	2	FcInitLoadConfigAndFonts
water	11:43	0:0	2	;
if	12:4	15:4	2	(! fontconfig)
cond	12:8	12:9	3	! fontconfig
op	12:8	0:0	4	!
water	12:9	0:0	4	fontconfig
stmts	12:21	15:4	3	
water	12:21	0:0	4	{
call	13:8	13:67	4	av_log
arg	13:15	13:18	5	ctx
water	13:15	0:0	6	ctx
arg	13:20	13:32	5	AV_LOG_ERROR
water	13:20	0:0	6	AV_LOG_ERROR
arg	13:34	13:67	5	"impossible to init fontconfig\n"
water	13:34	0:0	6	"impossible to init fontconfig\n"
water	13:68	0:0	4	;
return	14:8	14:30	4	AVERROR_UNKNOWN
water	14:15	0:0	5	AVERROR_UNKNOWN
water	15:4	0:0	4	}
water	16:4	0:0	2	pat
op	16:8	0:0	2	=
call	16:10	17:56	2	FcNameParse
arg	16:22	17:56	3	s->fontfile?s->fontfile:(uint8_t*)(intptr_t)"default"
water	16:22	0:0	4	s
op	16:23	0:0	4	->
water	16:25	0:0	4	fontfile
water	16:34	0:0	4	?
water	16:36	0:0	4	s
op	16:37	0:0	4	->
water	16:39	0:0	4	fontfile
water	16:48	0:0	4	:
call	17:26	17:46	4	(uint8_t*)
arg	17:38	17:46	5	intptr_t
water	17:38	0:0	6	intptr_t
water	17:47	0:0	4	"default"
water	17:57	0:0	2	;
if	18:4	21:4	2	(! pat)
cond	18:8	18:9	3	! pat
op	18:8	0:0	4	!
water	18:9	0:0	4	pat
stmts	18:14	21:4	3	
water	18:14	0:0	4	{
call	19:8	19:66	4	av_log
arg	19:15	19:18	5	ctx
water	19:15	0:0	6	ctx
arg	19:20	19:32	5	AV_LOG_ERROR
water	19:20	0:0	6	AV_LOG_ERROR
arg	19:34	19:66	5	"could not parse fontconfig pat"
water	19:34	0:0	6	"could not parse fontconfig pat"
water	19:67	0:0	4	;
return	20:8	20:30	4	AVERROR(EINVAL)
call	20:15	20:29	5	AVERROR
arg	20:23	20:29	6	EINVAL
water	20:23	0:0	7	EINVAL
water	21:4	0:0	4	}
call	22:4	22:46	2	FcPatternAddString
arg	22:23	22:26	3	pat
water	22:23	0:0	4	pat
arg	22:28	22:37	3	FC_FAMILY
water	22:28	0:0	4	FC_FAMILY
arg	22:39	22:46	3	s->font
water	22:39	0:0	4	s
op	22:40	0:0	4	->
water	22:42	0:0	4	font
water	22:47	0:0	2	;
if	23:4	24:61	2	(s -> fontsize)
cond	23:8	23:11	3	s -> fontsize
water	23:8	0:0	4	s
op	23:9	0:0	4	->
water	23:11	0:0	4	fontsize
stmts	24:8	24:61	3	
call	24:8	24:60	4	FcPatternAddDouble
arg	24:27	24:30	5	pat
water	24:27	0:0	6	pat
arg	24:32	24:39	5	FC_SIZE
water	24:32	0:0	6	FC_SIZE
arg	24:41	24:60	5	(double)s->fontsize
water	24:41	0:0	6	(
water	24:42	0:0	6	double
water	24:48	0:0	6	)
water	24:49	0:0	6	s
op	24:50	0:0	6	->
water	24:52	0:0	6	fontsize
water	24:61	0:0	4	;
call	25:4	25:27	2	FcDefaultSubstitute
arg	25:24	25:27	3	pat
water	25:24	0:0	4	pat
water	25:28	0:0	2	;
if	26:4	30:4	2	(!FcConfigSubstitute (fontconfig ,pat ,FcMatchPattern ))
cond	26:8	26:59	3	!FcConfigSubstitute (fontconfig ,pat ,FcMatchPattern )
op	26:8	0:0	4	!
call	26:9	26:59	4	FcConfigSubstitute
arg	26:28	26:38	5	fontconfig
water	26:28	0:0	6	fontconfig
arg	26:40	26:43	5	pat
water	26:40	0:0	6	pat
arg	26:45	26:59	5	FcMatchPattern
water	26:45	0:0	6	FcMatchPattern
stmts	26:62	30:4	3	
water	26:62	0:0	4	{
call	27:8	27:74	4	av_log
arg	27:15	27:18	5	ctx
water	27:15	0:0	6	ctx
arg	27:20	27:32	5	AV_LOG_ERROR
water	27:20	0:0	6	AV_LOG_ERROR
arg	27:34	27:74	5	"could not substitue fontconfig options"
water	27:34	0:0	6	"could not substitue fontconfig options"
water	27:75	0:0	4	;
call	28:8	28:28	4	FcPatternDestroy
arg	28:25	28:28	5	pat
water	28:25	0:0	6	pat
water	28:29	0:0	4	;
return	29:8	29:30	4	AVERROR(ENOMEM)
call	29:15	29:29	5	AVERROR
arg	29:23	29:29	6	ENOMEM
water	29:23	0:0	7	ENOMEM
water	30:4	0:0	4	}
water	31:4	0:0	2	best
op	31:9	0:0	2	=
call	31:11	31:47	2	FcFontMatch
arg	31:23	31:33	3	fontconfig
water	31:23	0:0	4	fontconfig
arg	31:35	31:38	3	pat
water	31:35	0:0	4	pat
arg	31:40	31:47	3	&result
op	31:40	0:0	4	&
water	31:41	0:0	4	result
water	31:48	0:0	2	;
call	32:4	32:24	2	FcPatternDestroy
arg	32:21	32:24	3	pat
water	32:21	0:0	4	pat
water	32:25	0:0	2	;
if	33:4	38:4	2	(! best || result != FcResultMatch)
cond	33:8	33:27	3	! best || result != FcResultMatch
op	33:8	0:0	4	!
water	33:9	0:0	4	best
op	33:14	0:0	4	||
water	33:17	0:0	4	result
op	33:24	0:0	4	!=
water	33:27	0:0	4	FcResultMatch
stmts	33:42	38:4	3	
water	33:42	0:0	4	{
call	34:8	36:22	4	av_log
arg	34:15	34:18	5	ctx
water	34:15	0:0	6	ctx
arg	34:20	34:32	5	AV_LOG_ERROR
water	34:20	0:0	6	AV_LOG_ERROR
arg	35:15	35:61	5	"Cannot find a valid font for the family %s\n"
water	35:15	0:0	6	"Cannot find a valid font for the family %s\n"
arg	36:15	36:22	5	s->font
water	36:15	0:0	6	s
op	36:16	0:0	6	->
water	36:18	0:0	6	font
water	36:23	0:0	4	;
goto	37:8	37:17	4	fail
water	37:13	0:0	5	fail
water	38:4	0:0	4	}
if	39:4	44:4	2	(FcPatternGetInteger (best ,FC_INDEX ,0 ,& index ) != FcResultMatch ||FcPatternGetDouble (best ,FC_SIZE ,0 ,& size ) != FcResultMatch)
cond	40:8	41:61	3	FcPatternGetInteger (best ,FC_INDEX ,0 ,& index ) != FcResultMatch ||FcPatternGetDouble (best ,FC_SIZE ,0 ,& size ) != FcResultMatch
call	40:8	40:56	4	FcPatternGetInteger
arg	40:28	40:32	5	best
water	40:28	0:0	6	best
arg	40:34	40:42	5	FC_INDEX
water	40:34	0:0	6	FC_INDEX
arg	40:44	40:45	5	0
water	40:44	0:0	6	0
arg	40:47	40:56	5	&index
op	40:47	0:0	6	&
water	40:48	0:0	6	index
op	40:58	0:0	4	!=
water	40:61	0:0	4	FcResultMatch
op	40:75	0:0	4	||
call	41:8	41:56	4	FcPatternGetDouble
arg	41:28	41:32	5	best
water	41:28	0:0	6	best
arg	41:34	41:41	5	FC_SIZE
water	41:34	0:0	6	FC_SIZE
arg	41:44	41:45	5	0
water	41:44	0:0	6	0
arg	41:47	41:56	5	&size
op	41:47	0:0	6	&
water	41:48	0:0	6	size
op	41:58	0:0	4	!=
water	41:61	0:0	4	FcResultMatch
stmts	41:76	44:4	3	
water	41:76	0:0	4	{
call	42:8	42:71	4	av_log
arg	42:15	42:18	5	ctx
water	42:15	0:0	6	ctx
arg	42:20	42:32	5	AV_LOG_ERROR
water	42:20	0:0	6	AV_LOG_ERROR
arg	42:34	42:71	5	"impossible to find font information"
water	42:34	0:0	6	"impossible to find font information"
water	42:72	0:0	4	;
return	43:8	43:30	4	AVERROR(EINVAL)
call	43:15	43:29	5	AVERROR
arg	43:23	43:29	6	EINVAL
water	43:23	0:0	7	EINVAL
water	44:4	0:0	4	}
if	45:4	49:4	2	(FcPatternGetString (best ,FC_FILE ,0 ,& filename ) != FcResultMatch)
cond	45:8	45:59	3	FcPatternGetString (best ,FC_FILE ,0 ,& filename ) != FcResultMatch
call	45:8	45:54	4	FcPatternGetString
arg	45:27	45:31	5	best
water	45:27	0:0	6	best
arg	45:33	45:40	5	FC_FILE
water	45:33	0:0	6	FC_FILE
arg	45:42	45:43	5	0
water	45:42	0:0	6	0
arg	45:45	45:54	5	&filename
op	45:45	0:0	6	&
water	45:46	0:0	6	filename
op	45:56	0:0	4	!=
water	45:59	0:0	4	FcResultMatch
stmts	45:74	49:4	3	
water	45:74	0:0	4	{
call	46:8	47:22	4	av_log
arg	46:15	46:18	5	ctx
water	46:15	0:0	6	ctx
arg	46:20	46:32	5	AV_LOG_ERROR
water	46:20	0:0	6	AV_LOG_ERROR
arg	46:34	46:57	5	"No file path for %s\n"
water	46:34	0:0	6	"No file path for %s\n"
arg	47:15	47:22	5	s->font
water	47:15	0:0	6	s
op	47:16	0:0	6	->
water	47:18	0:0	6	font
water	47:23	0:0	4	;
goto	48:8	48:17	4	fail
water	48:13	0:0	5	fail
water	49:4	0:0	4	}
call	50:4	50:55	2	av_log
arg	50:11	50:14	3	ctx
water	50:11	0:0	4	ctx
arg	50:16	50:27	3	AV_LOG_INFO
water	50:16	0:0	4	AV_LOG_INFO
arg	50:29	50:45	3	"Using \"%s\"\n"
water	50:29	0:0	4	"Using \"%s\"\n"
arg	50:47	50:55	3	filename
water	50:47	0:0	4	filename
water	50:56	0:0	2	;
if	51:4	52:32	2	(! s -> fontsize)
cond	51:8	51:12	3	! s -> fontsize
op	51:8	0:0	4	!
water	51:9	0:0	4	s
op	51:10	0:0	4	->
water	51:12	0:0	4	fontsize
stmts	52:8	52:32	3	
water	52:8	0:0	4	s
op	52:9	0:0	4	->
water	52:11	0:0	4	fontsize
op	52:20	0:0	4	=
water	52:22	0:0	4	size
op	52:27	0:0	4	+
water	52:29	0:0	4	0
op	52:30	0:0	4	.
water	52:31	0:0	4	5
water	52:32	0:0	4	;
water	53:4	0:0	2	err
op	53:8	0:0	2	=
call	53:10	53:45	2	load_font_file
arg	53:25	53:28	3	ctx
water	53:25	0:0	4	ctx
arg	53:30	53:38	3	filename
water	53:30	0:0	4	filename
arg	53:40	53:45	3	index
water	53:40	0:0	4	index
water	53:46	0:0	2	;
if	54:4	55:18	2	(err)
cond	54:8	54:8	3	err
water	54:8	0:0	4	err
stmts	55:8	55:18	3	
return	55:8	55:18	4	err
water	55:15	0:0	5	err
call	56:4	56:30	2	FcConfigDestroy
arg	56:20	56:30	3	fontconfig
water	56:20	0:0	4	fontconfig
water	56:31	0:0	2	;
label	57:0	57:4	2	fail :
call	58:4	58:25	2	FcPatternDestroy
arg	58:21	58:25	3	best
water	58:21	0:0	4	best
water	58:26	0:0	2	;
return	59:4	59:14	2	err
water	59:11	0:0	3	err

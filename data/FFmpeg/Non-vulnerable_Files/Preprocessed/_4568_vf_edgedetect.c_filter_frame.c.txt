func	1:0	54:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	53:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:45	2	EdgeDetectContext	*edgedetect
op	4:34	0:0	2	=
water	4:36	0:0	2	ctx
op	4:39	0:0	2	->
water	4:41	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:21	2	int	p
water	6:9	0:0	2	,
decl	6:4	6:21	2	int	direct
op	6:18	0:0	2	=
water	6:20	0:0	2	0
decl	7:4	7:16	2	AVFrame	*out
if	8:4	11:4	2	(edgedetect -> mode != MODE_COLORMIX &&av_frame_is_writable (in ))
cond	8:8	8:68	3	edgedetect -> mode != MODE_COLORMIX &&av_frame_is_writable (in )
water	8:8	0:0	4	edgedetect
op	8:18	0:0	4	->
water	8:20	0:0	4	mode
op	8:25	0:0	4	!=
water	8:28	0:0	4	MODE_COLORMIX
op	8:42	0:0	4	&&
call	8:45	8:68	4	av_frame_is_writable
arg	8:66	8:68	5	in
water	8:66	0:0	6	in
stmts	8:71	11:4	3	
water	8:71	0:0	4	{
water	9:8	0:0	4	direct
op	9:15	0:0	4	=
water	9:17	0:0	4	1
water	9:18	0:0	4	;
water	10:8	0:0	4	out
op	10:12	0:0	4	=
water	10:14	0:0	4	in
water	10:16	0:0	4	;
water	11:4	0:0	4	}
else	11:6	18:4	2
stmts	11:11	18:4	3	
water	11:11	0:0	4	{
water	12:8	0:0	4	out
op	12:12	0:0	4	=
call	12:14	12:65	4	ff_get_video_buffer
arg	12:34	12:41	5	outlink
water	12:34	0:0	6	outlink
arg	12:43	12:53	5	outlink->w
water	12:43	0:0	6	outlink
op	12:50	0:0	6	->
water	12:52	0:0	6	w
arg	12:55	12:65	5	outlink->h
water	12:55	0:0	6	outlink
op	12:62	0:0	6	->
water	12:64	0:0	6	h
water	12:66	0:0	4	;
if	13:8	16:8	4	(! out)
cond	13:12	13:13	5	! out
op	13:12	0:0	6	!
water	13:13	0:0	6	out
stmts	13:18	16:8	5	
water	13:18	0:0	6	{
call	14:12	14:29	6	av_frame_free
arg	14:26	14:29	7	&in
op	14:26	0:0	8	&
water	14:27	0:0	8	in
water	14:30	0:0	6	;
return	15:12	15:34	6	AVERROR(ENOMEM)
call	15:19	15:33	7	AVERROR
arg	15:27	15:33	8	ENOMEM
water	15:27	0:0	9	ENOMEM
water	16:8	0:0	6	}
call	17:8	17:35	4	av_frame_copy_props
arg	17:28	17:31	5	out
water	17:28	0:0	6	out
arg	17:33	17:35	5	in
water	17:33	0:0	6	in
water	17:36	0:0	4	;
water	18:4	0:0	4	}
for	19:4	50:4	2	(p = 0 ;p < edgedetect -> nb_planes;p ++)
forinit	19:9	19:14	3	p = 0 ;
water	19:9	0:0	4	p
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:32	3	p < edgedetect -> nb_planes
water	19:16	0:0	4	p
op	19:18	0:0	4	<
water	19:20	0:0	4	edgedetect
op	19:30	0:0	4	->
water	19:32	0:0	4	nb_planes
forexpr	19:43	19:44	3	p ++
water	19:43	0:0	4	p
op	19:44	0:0	4	++
stmts	19:48	50:4	3	
water	19:48	0:0	4	{
decl	20:8	20:57	4	struct plane_info	*plane
op	20:33	0:0	4	=
op	20:35	0:0	4	&
water	20:36	0:0	4	edgedetect
op	20:46	0:0	4	->
water	20:48	0:0	4	planes
op	20:54	0:0	4	[
water	20:55	0:0	4	p
op	20:56	0:0	4	]
decl	21:8	21:44	4	uint8_t	*tmpbuf
op	21:29	0:0	4	=
water	21:31	0:0	4	plane
op	21:36	0:0	4	->
water	21:38	0:0	4	tmpbuf
decl	22:8	22:47	4	uint16_t	*gradients
op	22:29	0:0	4	=
water	22:31	0:0	4	plane
op	22:36	0:0	4	->
water	22:38	0:0	4	gradients
decl	23:8	23:48	4	int8_t	*directions
op	23:29	0:0	4	=
water	23:31	0:0	4	plane
op	23:36	0:0	4	->
water	23:38	0:0	4	directions
call	25:8	27:50	4	gaussian_blur
arg	25:22	25:25	5	ctx
water	25:22	0:0	6	ctx
arg	25:27	25:36	5	inlink->w
water	25:27	0:0	6	inlink
op	25:33	0:0	6	->
water	25:35	0:0	6	w
arg	25:38	25:47	5	inlink->h
water	25:38	0:0	6	inlink
op	25:44	0:0	6	->
water	25:46	0:0	6	h
arg	26:22	26:28	5	tmpbuf
water	26:22	0:0	6	tmpbuf
arg	26:35	26:44	5	inlink->w
water	26:35	0:0	6	inlink
op	26:41	0:0	6	->
water	26:43	0:0	6	w
arg	27:22	27:33	5	in->data[p]
water	27:22	0:0	6	in
op	27:24	0:0	6	->
water	27:26	0:0	6	data
op	27:30	0:0	6	[
water	27:31	0:0	6	p
op	27:32	0:0	6	]
arg	27:35	27:50	5	in->linesize[p]
water	27:35	0:0	6	in
op	27:37	0:0	6	->
water	27:39	0:0	6	linesize
op	27:47	0:0	6	[
water	27:48	0:0	6	p
op	27:49	0:0	6	]
water	27:51	0:0	4	;
call	29:8	32:34	4	sobel
arg	29:14	29:23	5	inlink->w
water	29:14	0:0	6	inlink
op	29:20	0:0	6	->
water	29:22	0:0	6	w
arg	29:25	29:34	5	inlink->h
water	29:25	0:0	6	inlink
op	29:31	0:0	6	->
water	29:33	0:0	6	h
arg	30:14	30:23	5	gradients
water	30:14	0:0	6	gradients
arg	30:25	30:34	5	inlink->w
water	30:25	0:0	6	inlink
op	30:31	0:0	6	->
water	30:33	0:0	6	w
arg	31:14	31:24	5	directions
water	31:14	0:0	6	directions
arg	31:25	31:34	5	inlink->w
water	31:25	0:0	6	inlink
op	31:31	0:0	6	->
water	31:33	0:0	6	w
arg	32:14	32:20	5	tmpbuf
water	32:14	0:0	6	tmpbuf
arg	32:25	32:34	5	inlink->w
water	32:25	0:0	6	inlink
op	32:31	0:0	6	->
water	32:33	0:0	6	w
water	32:35	0:0	4	;
call	35:8	35:47	4	memset
arg	35:15	35:21	5	tmpbuf
water	35:15	0:0	6	tmpbuf
arg	35:23	35:24	5	0
water	35:23	0:0	6	0
arg	35:26	35:47	5	inlink->w*inlink->h
water	35:26	0:0	6	inlink
op	35:32	0:0	6	->
water	35:34	0:0	6	w
op	35:36	0:0	6	*
water	35:38	0:0	6	inlink
op	35:44	0:0	6	->
water	35:46	0:0	6	h
water	35:48	0:0	4	;
call	36:8	39:52	4	non_maximum_suppression
arg	36:32	36:41	5	inlink->w
water	36:32	0:0	6	inlink
op	36:38	0:0	6	->
water	36:40	0:0	6	w
arg	36:43	36:52	5	inlink->h
water	36:43	0:0	6	inlink
op	36:49	0:0	6	->
water	36:51	0:0	6	h
arg	37:32	37:38	5	tmpbuf
water	37:32	0:0	6	tmpbuf
arg	37:43	37:52	5	inlink->w
water	37:43	0:0	6	inlink
op	37:49	0:0	6	->
water	37:51	0:0	6	w
arg	38:32	38:42	5	directions
water	38:32	0:0	6	directions
arg	38:43	38:52	5	inlink->w
water	38:43	0:0	6	inlink
op	38:49	0:0	6	->
water	38:51	0:0	6	w
arg	39:32	39:41	5	gradients
water	39:32	0:0	6	gradients
arg	39:43	39:52	5	inlink->w
water	39:43	0:0	6	inlink
op	39:49	0:0	6	->
water	39:51	0:0	6	w
water	39:53	0:0	4	;
call	41:8	44:48	4	double_threshold
arg	41:25	41:43	5	edgedetect->low_u8
water	41:25	0:0	6	edgedetect
op	41:35	0:0	6	->
water	41:37	0:0	6	low_u8
arg	41:45	41:64	5	edgedetect->high_u8
water	41:45	0:0	6	edgedetect
op	41:55	0:0	6	->
water	41:57	0:0	6	high_u8
arg	42:25	42:34	5	inlink->w
water	42:25	0:0	6	inlink
op	42:31	0:0	6	->
water	42:33	0:0	6	w
arg	42:36	42:45	5	inlink->h
water	42:36	0:0	6	inlink
op	42:42	0:0	6	->
water	42:44	0:0	6	h
arg	43:25	43:37	5	out->data[p]
water	43:25	0:0	6	out
op	43:28	0:0	6	->
water	43:30	0:0	6	data
op	43:34	0:0	6	[
water	43:35	0:0	6	p
op	43:36	0:0	6	]
arg	43:39	43:55	5	out->linesize[p]
water	43:39	0:0	6	out
op	43:42	0:0	6	->
water	43:44	0:0	6	linesize
op	43:52	0:0	6	[
water	43:53	0:0	6	p
op	43:54	0:0	6	]
arg	44:25	44:31	5	tmpbuf
water	44:25	0:0	6	tmpbuf
arg	44:39	44:48	5	inlink->w
water	44:39	0:0	6	inlink
op	44:45	0:0	6	->
water	44:47	0:0	6	w
water	44:49	0:0	4	;
if	45:8	49:8	4	(edgedetect -> mode == MODE_COLORMIX)
cond	45:12	45:32	5	edgedetect -> mode == MODE_COLORMIX
water	45:12	0:0	6	edgedetect
op	45:22	0:0	6	->
water	45:24	0:0	6	mode
op	45:29	0:0	6	==
water	45:32	0:0	6	MODE_COLORMIX
stmts	45:47	49:8	5	
water	45:47	0:0	6	{
call	46:12	48:50	6	color_mix
arg	46:22	46:31	7	inlink->w
water	46:22	0:0	8	inlink
op	46:28	0:0	8	->
water	46:30	0:0	8	w
arg	46:33	46:42	7	inlink->h
water	46:33	0:0	8	inlink
op	46:39	0:0	8	->
water	46:41	0:0	8	h
arg	47:22	47:34	7	out->data[p]
water	47:22	0:0	8	out
op	47:25	0:0	8	->
water	47:27	0:0	8	data
op	47:31	0:0	8	[
water	47:32	0:0	8	p
op	47:33	0:0	8	]
arg	47:36	47:52	7	out->linesize[p]
water	47:36	0:0	8	out
op	47:39	0:0	8	->
water	47:41	0:0	8	linesize
op	47:49	0:0	8	[
water	47:50	0:0	8	p
op	47:51	0:0	8	]
arg	48:22	48:33	7	in->data[p]
water	48:22	0:0	8	in
op	48:24	0:0	8	->
water	48:26	0:0	8	data
op	48:30	0:0	8	[
water	48:31	0:0	8	p
op	48:32	0:0	8	]
arg	48:35	48:50	7	in->linesize[p]
water	48:35	0:0	8	in
op	48:37	0:0	8	->
water	48:39	0:0	8	linesize
op	48:47	0:0	8	[
water	48:48	0:0	8	p
op	48:49	0:0	8	]
water	48:51	0:0	6	;
water	49:8	0:0	6	}
water	50:4	0:0	4	}
if	51:4	52:26	2	(! direct)
cond	51:8	51:9	3	! direct
op	51:8	0:0	4	!
water	51:9	0:0	4	direct
stmts	52:8	52:26	3	
call	52:8	52:25	4	av_frame_free
arg	52:22	52:25	5	&in
op	52:22	0:0	6	&
water	52:23	0:0	6	in
water	52:26	0:0	4	;
return	53:4	53:40	2	ff_filter_frame(outlink,out)
call	53:11	53:39	3	ff_filter_frame
arg	53:27	53:34	4	outlink
water	53:27	0:0	5	outlink
arg	53:36	53:39	4	out
water	53:36	0:0	5	out

func	1:0	57:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:13	2	void
stmnts	0:0	56:12	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:18	2	char	*fullpath
water	5:4	0:0	2	static
water	5:11	0:0	2	const
water	5:17	0:0	2	char
op	5:22	0:0	2	*
water	5:24	0:0	2	const
water	5:30	0:0	2	strings
op	5:37	0:0	2	[
op	5:38	0:0	2	]
op	5:40	0:0	2	=
water	5:42	0:0	2	{
water	6:8	0:0	2	"''"
water	6:12	0:0	2	,
water	7:8	0:0	2	""
water	7:10	0:0	2	,
water	8:8	0:0	2	":"
water	8:11	0:0	2	,
water	9:8	0:0	2	"\\"
water	9:12	0:0	2	,
water	10:8	0:0	2	"'"
water	10:11	0:0	2	,
water	11:8	0:0	2	"    ''    :"
water	11:21	0:0	2	,
water	12:8	0:0	2	"    ''  ''  :"
water	12:23	0:0	2	,
water	13:8	0:0	2	"foo   '' :"
water	13:20	0:0	2	,
water	14:8	0:0	2	"'foo'"
water	14:15	0:0	2	,
water	15:8	0:0	2	"foo     "
water	15:18	0:0	2	,
water	16:8	0:0	2	"  '  foo  '  "
water	16:23	0:0	2	,
water	17:8	0:0	2	"foo\\"
water	17:15	0:0	2	,
water	18:8	0:0	2	"foo':  blah:blah"
water	18:26	0:0	2	,
water	19:8	0:0	2	"foo\\:  blah:blah"
water	19:27	0:0	2	,
water	20:8	0:0	2	"foo\'"
water	20:15	0:0	2	,
water	21:8	0:0	2	"'foo :  '  :blahblah"
water	21:30	0:0	2	,
water	22:8	0:0	2	"\\ :blah"
water	22:18	0:0	2	,
water	23:8	0:0	2	"     foo"
water	23:18	0:0	2	,
water	24:8	0:0	2	"      foo       "
water	24:26	0:0	2	,
water	25:8	0:0	2	"      foo     \\ "
water	25:27	0:0	2	,
water	26:8	0:0	2	"foo ':blah"
water	26:20	0:0	2	,
water	27:8	0:0	2	" foo   bar    :   blahblah"
water	27:36	0:0	2	,
water	28:8	0:0	2	"\\f\\o\\o"
water	28:19	0:0	2	,
water	29:8	0:0	2	"'foo : \\ \\  '   : blahblah"
water	29:38	0:0	2	,
water	30:8	0:0	2	"'\\fo\\o:': blahblah"
water	30:30	0:0	2	,
water	31:8	0:0	2	"\\'fo\\o\\:':  foo  '  :blahblah"
water	32:4	0:0	2	}
water	32:5	0:0	2	;
call	33:4	33:37	2	printf
arg	33:11	33:37	3	"Testing av_get_token()\n"
water	33:11	0:0	4	"Testing av_get_token()\n"
water	33:38	0:0	2	;
for	34:4	42:4	2	(i = 0 ;i <FF_ARRAY_ELEMS (strings );i ++)
forinit	34:9	34:14	3	i = 0 ;
water	34:9	0:0	4	i
op	34:11	0:0	4	=
water	34:13	0:0	4	0
water	34:14	0:0	4	;
cond	34:16	34:42	3	i <FF_ARRAY_ELEMS (strings )
water	34:16	0:0	4	i
op	34:18	0:0	4	<
call	34:20	34:42	4	FF_ARRAY_ELEMS
arg	34:35	34:42	5	strings
water	34:35	0:0	6	strings
forexpr	34:45	34:46	3	i ++
water	34:45	0:0	4	i
op	34:46	0:0	4	++
stmts	34:50	42:4	3	
water	34:50	0:0	4	{
decl	35:8	35:34	4	const char	*p
op	35:22	0:0	4	=
water	35:24	0:0	4	strings
op	35:31	0:0	4	[
water	35:32	0:0	4	i
op	35:33	0:0	4	]
decl	36:8	36:15	4	char	*q
call	37:8	37:24	4	printf
arg	37:15	37:21	5	"|%s|"
water	37:15	0:0	6	"|%s|"
arg	37:23	37:24	5	p
water	37:23	0:0	6	p
water	37:25	0:0	4	;
water	38:8	0:0	4	q
op	38:10	0:0	4	=
call	38:12	38:32	4	av_get_token
arg	38:25	38:27	5	&p
op	38:25	0:0	6	&
water	38:26	0:0	6	p
arg	38:29	38:32	5	":"
water	38:29	0:0	6	":"
water	38:33	0:0	4	;
call	39:8	39:28	4	printf
arg	39:15	39:25	5	" -> |%s|"
water	39:15	0:0	6	" -> |%s|"
arg	39:27	39:28	5	q
water	39:27	0:0	6	q
water	39:29	0:0	4	;
call	40:8	40:29	4	printf
arg	40:15	40:26	5	" + |%s|\n"
water	40:15	0:0	6	" + |%s|\n"
arg	40:28	40:29	5	p
water	40:28	0:0	6	p
water	40:30	0:0	4	;
call	41:8	41:17	4	av_free
arg	41:16	41:17	5	q
water	41:16	0:0	6	q
water	41:18	0:0	4	;
water	42:4	0:0	4	}
call	43:4	43:49	2	printf
arg	43:11	43:49	3	"Testing av_append_path_component()\n"
water	43:11	0:0	4	"Testing av_append_path_component()\n"
water	43:50	0:0	2	;
water	45:8	0:0	2	fullpath
op	45:17	0:0	2	=
call	45:19	45:63	2	av_append_path_component
arg	45:44	45:50	3	(path)
water	45:44	0:0	4	(
water	45:45	0:0	4	path
water	45:49	0:0	4	)
arg	45:52	45:63	3	(component)
water	45:52	0:0	4	(
water	45:53	0:0	4	component
water	45:62	0:0	4	)
water	45:64	0:0	2	;
call	46:8	46:68	2	printf
arg	46:15	46:26	3	"%s = %s\n"
water	46:15	0:0	4	"%s = %s\n"
arg	46:28	46:58	3	fullpath?fullpath:"(null)"
water	46:28	0:0	4	fullpath
water	46:37	0:0	4	?
water	46:39	0:0	4	fullpath
water	46:48	0:0	4	:
water	46:50	0:0	4	"(null)"
arg	46:60	46:68	3	expected
water	46:60	0:0	4	expected
water	46:69	0:0	2	;
call	47:8	47:24	2	av_free
arg	47:16	47:24	3	fullpath
water	47:16	0:0	4	fullpath
water	47:25	0:0	2	;
call	48:4	48:51	2	TEST_APPEND_PATH_COMPONENT
arg	48:31	48:35	3	NULL
water	48:31	0:0	4	NULL
arg	48:37	48:41	3	NULL
water	48:37	0:0	4	NULL
arg	48:43	48:51	3	"(null)"
water	48:43	0:0	4	"(null)"
call	49:4	49:51	2	TEST_APPEND_PATH_COMPONENT
arg	49:31	49:37	3	"path"
water	49:31	0:0	4	"path"
arg	49:39	49:43	3	NULL
water	49:39	0:0	4	NULL
arg	49:45	49:51	3	"path"
water	49:45	0:0	4	"path"
water	49:52	0:0	2	;
call	50:4	50:51	2	TEST_APPEND_PATH_COMPONENT
arg	50:31	50:35	3	NULL
water	50:31	0:0	4	NULL
arg	50:37	50:43	3	"comp"
water	50:37	0:0	4	"comp"
arg	50:45	50:51	3	"comp"
water	50:45	0:0	4	"comp"
water	50:52	0:0	2	;
call	51:4	51:58	2	TEST_APPEND_PATH_COMPONENT
arg	51:31	51:37	3	"path"
water	51:31	0:0	4	"path"
arg	51:39	51:45	3	"comp"
water	51:39	0:0	4	"comp"
arg	51:47	51:58	3	"path/comp"
water	51:47	0:0	4	"path/comp"
water	51:59	0:0	2	;
call	52:4	52:59	2	TEST_APPEND_PATH_COMPONENT
arg	52:31	52:38	3	"path/"
water	52:31	0:0	4	"path/"
arg	52:40	52:46	3	"comp"
water	52:40	0:0	4	"comp"
arg	52:48	52:59	3	"path/comp"
water	52:48	0:0	4	"path/comp"
water	52:60	0:0	2	;
call	53:4	53:59	2	TEST_APPEND_PATH_COMPONENT
arg	53:31	53:37	3	"path"
water	53:31	0:0	4	"path"
arg	53:39	53:46	3	"/comp"
water	53:39	0:0	4	"/comp"
arg	53:48	53:59	3	"path/comp"
water	53:48	0:0	4	"path/comp"
water	53:60	0:0	2	;
call	54:4	54:60	2	TEST_APPEND_PATH_COMPONENT
arg	54:31	54:38	3	"path/"
water	54:31	0:0	4	"path/"
arg	54:40	54:47	3	"/comp"
water	54:40	0:0	4	"/comp"
arg	54:49	54:60	3	"path/comp"
water	54:49	0:0	4	"path/comp"
water	54:61	0:0	2	;
call	55:4	55:84	2	TEST_APPEND_PATH_COMPONENT
arg	55:31	55:44	3	"path/path2/"
water	55:31	0:0	4	"path/path2/"
arg	55:46	55:59	3	"/comp/comp2"
water	55:46	0:0	4	"/comp/comp2"
arg	55:61	55:84	3	"path/path2/comp/comp2"
water	55:61	0:0	4	"path/path2/comp/comp2"
water	55:85	0:0	2	;
return	56:4	56:12	2	0
water	56:11	0:0	3	0

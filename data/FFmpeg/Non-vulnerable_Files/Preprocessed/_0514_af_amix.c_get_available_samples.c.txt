func	1:0	16:0	0	static int	get_available_samples
params	1:32	0:0	1	
param	1:33	1:46	2	MixContext *	s
stmnts	0:0	15:28	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:35	2	int	available_samples
op	4:26	0:0	2	=
water	4:28	0:0	2	INT_MAX
call	5:4	5:31	2	av_assert0
arg	5:15	5:31	3	s->nb_inputs>1
water	5:15	0:0	4	s
op	5:16	0:0	4	->
water	5:18	0:0	4	nb_inputs
op	5:28	0:0	4	>
water	5:30	0:0	4	1
water	5:32	0:0	2	;
for	6:4	12:4	2	(i = 1 ;i < s -> nb_inputs;i ++)
forinit	6:9	6:14	3	i = 1 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	1
water	6:14	0:0	4	;
cond	6:16	6:23	3	i < s -> nb_inputs
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	s
op	6:21	0:0	4	->
water	6:23	0:0	4	nb_inputs
forexpr	6:34	6:35	3	i ++
water	6:34	0:0	4	i
op	6:35	0:0	4	++
stmts	6:39	12:4	3	
water	6:39	0:0	4	{
decl	7:8	7:22	4	int	nb_samples
if	8:8	9:20	4	(s -> input_state [ i ] == INPUT_OFF)
cond	8:12	8:33	5	s -> input_state [ i ] == INPUT_OFF
water	8:12	0:0	6	s
op	8:13	0:0	6	->
water	8:15	0:0	6	input_state
op	8:26	0:0	6	[
water	8:27	0:0	6	i
op	8:28	0:0	6	]
op	8:30	0:0	6	==
water	8:33	0:0	6	INPUT_OFF
stmts	9:12	9:20	5	
continue	9:12	9:20	6	
water	10:8	0:0	4	nb_samples
op	10:19	0:0	4	=
call	10:21	10:51	4	av_audio_fifo_size
arg	10:40	10:51	5	s->fifos[i]
water	10:40	0:0	6	s
op	10:41	0:0	6	->
water	10:43	0:0	6	fifos
op	10:48	0:0	6	[
water	10:49	0:0	6	i
op	10:50	0:0	6	]
water	10:52	0:0	4	;
water	11:8	0:0	4	available_samples
op	11:26	0:0	4	=
call	11:28	11:63	4	FFMIN
arg	11:34	11:51	5	available_samples
water	11:34	0:0	6	available_samples
arg	11:53	11:63	5	nb_samples
water	11:53	0:0	6	nb_samples
water	11:64	0:0	4	;
water	12:4	0:0	4	}
if	13:4	14:16	2	(available_samples == INT_MAX)
cond	13:8	13:29	3	available_samples == INT_MAX
water	13:8	0:0	4	available_samples
op	13:26	0:0	4	==
water	13:29	0:0	4	INT_MAX
stmts	14:8	14:16	3	
return	14:8	14:16	4	0
water	14:15	0:0	5	0
return	15:4	15:28	2	available_samples
water	15:11	0:0	3	available_samples

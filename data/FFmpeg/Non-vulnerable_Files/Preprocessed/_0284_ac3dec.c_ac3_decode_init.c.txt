func	1:15	45:0	0	int	ac3_decode_init
params	1:34	0:0	1	
param	1:35	1:56	2	AVCodecContext *	avctx
stmnts	0:0	44:12	1	
decl	3:4	3:42	2	AC3DecodeContext	*s
op	3:24	0:0	2	=
water	3:26	0:0	2	avctx
op	3:31	0:0	2	->
water	3:33	0:0	2	priv_data
decl	4:4	4:9	2	int	i
water	5:4	0:0	2	s
op	5:5	0:0	2	->
water	5:7	0:0	2	avctx
op	5:13	0:0	2	=
water	5:15	0:0	2	avctx
water	5:20	0:0	2	;
call	6:4	6:23	2	ff_ac3_common_init
water	6:24	0:0	2	;
call	7:4	7:20	2	ac3_tables_init
water	7:21	0:0	2	;
call	8:4	8:41	2	ff_mdct_init
arg	8:17	8:30	3	&s->imdct_256
op	8:17	0:0	4	&
water	8:18	0:0	4	s
op	8:19	0:0	4	->
water	8:21	0:0	4	imdct_256
arg	8:32	8:33	3	8
water	8:32	0:0	4	8
arg	8:35	8:36	3	1
water	8:35	0:0	4	1
arg	8:38	8:41	3	1.0
water	8:38	0:0	4	1
op	8:39	0:0	4	.
water	8:40	0:0	4	0
water	8:42	0:0	2	;
call	9:4	9:41	2	ff_mdct_init
arg	9:17	9:30	3	&s->imdct_512
op	9:17	0:0	4	&
water	9:18	0:0	4	s
op	9:19	0:0	4	->
water	9:21	0:0	4	imdct_512
arg	9:32	9:33	3	9
water	9:32	0:0	4	9
arg	9:35	9:36	3	1
water	9:35	0:0	4	1
arg	9:38	9:41	3	1.0
water	9:38	0:0	4	1
op	9:39	0:0	4	.
water	9:40	0:0	4	0
water	9:42	0:0	2	;
call	10:4	10:33	2	AC3_RENAME
arg	10:15	10:33	3	ff_kbd_window_init
water	10:15	0:0	4	ff_kbd_window_init
water	10:34	0:0	2	(
water	10:35	0:0	2	s
op	10:36	0:0	2	->
water	10:38	0:0	2	window
water	10:44	0:0	2	,
water	10:46	0:0	2	5
op	10:47	0:0	2	.
water	10:48	0:0	2	0
water	10:49	0:0	2	,
water	10:51	0:0	2	256
water	10:54	0:0	2	)
water	10:55	0:0	2	;
call	11:4	11:29	2	ff_bswapdsp_init
arg	11:21	11:29	3	&s->bdsp
op	11:21	0:0	4	&
water	11:22	0:0	4	s
op	11:23	0:0	4	->
water	11:25	0:0	4	bdsp
water	11:30	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	fdsp
op	13:12	0:0	2	=
call	13:14	13:74	2	avpriv_alloc_fixed_dsp
arg	13:37	13:74	3	avctx->flags&AV_CODEC_FLAG_BITEXACT
water	13:37	0:0	4	avctx
op	13:42	0:0	4	->
water	13:44	0:0	4	flags
op	13:50	0:0	4	&
water	13:52	0:0	4	AV_CODEC_FLAG_BITEXACT
water	13:75	0:0	2	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	fdsp
op	15:12	0:0	2	=
call	15:14	15:74	2	avpriv_float_dsp_alloc
arg	15:37	15:74	3	avctx->flags&AV_CODEC_FLAG_BITEXACT
water	15:37	0:0	4	avctx
op	15:42	0:0	4	->
water	15:44	0:0	4	flags
op	15:50	0:0	4	&
water	15:52	0:0	4	AV_CODEC_FLAG_BITEXACT
water	15:75	0:0	2	;
call	16:4	16:43	2	ff_fmt_convert_init
arg	16:24	16:36	3	&s->fmt_conv
op	16:24	0:0	4	&
water	16:25	0:0	4	s
op	16:26	0:0	4	->
water	16:28	0:0	4	fmt_conv
arg	16:38	16:43	3	avctx
water	16:38	0:0	4	avctx
water	16:44	0:0	2	;
call	18:4	18:68	2	ff_ac3dsp_init
arg	18:19	18:29	3	&s->ac3dsp
op	18:19	0:0	4	&
water	18:20	0:0	4	s
op	18:21	0:0	4	->
water	18:23	0:0	4	ac3dsp
arg	18:31	18:68	3	avctx->flags&AV_CODEC_FLAG_BITEXACT
water	18:31	0:0	4	avctx
op	18:36	0:0	4	->
water	18:38	0:0	4	flags
op	18:44	0:0	4	&
water	18:46	0:0	4	AV_CODEC_FLAG_BITEXACT
water	18:69	0:0	2	;
call	19:4	19:33	2	av_lfg_init
arg	19:16	19:30	3	&s->dith_state
op	19:16	0:0	4	&
water	19:17	0:0	4	s
op	19:18	0:0	4	->
water	19:20	0:0	4	dith_state
arg	19:32	19:33	3	0
water	19:32	0:0	4	0
water	19:34	0:0	2	;
if	20:4	21:46	2	(USE_FIXED)
cond	20:8	20:8	3	USE_FIXED
water	20:8	0:0	4	USE_FIXED
stmts	21:8	21:46	3	
water	21:8	0:0	4	avctx
op	21:13	0:0	4	->
water	21:15	0:0	4	sample_fmt
op	21:26	0:0	4	=
water	21:28	0:0	4	AV_SAMPLE_FMT_S16P
water	21:46	0:0	4	;
else	22:4	23:46	2
stmts	23:8	23:46	3	
water	23:8	0:0	4	avctx
op	23:13	0:0	4	->
water	23:15	0:0	4	sample_fmt
op	23:26	0:0	4	=
water	23:28	0:0	4	AV_SAMPLE_FMT_FLTP
water	23:46	0:0	4	;
water	26:0	0:0	2	FF_DISABLE_DEPRECATION_WARNINGS
water	27:4	0:0	2	if
water	27:7	0:0	2	(
water	27:8	0:0	2	avctx
op	27:13	0:0	2	->
water	27:15	0:0	2	request_channels
op	27:32	0:0	2	==
water	27:35	0:0	2	1
water	27:36	0:0	2	)
water	28:8	0:0	2	avctx
op	28:13	0:0	2	->
water	28:15	0:0	2	request_channel_layout
op	28:38	0:0	2	=
water	28:40	0:0	2	AV_CH_LAYOUT_MONO
water	28:57	0:0	2	;
else	29:4	30:59	2
stmts	29:9	30:59	3	
if	29:9	30:59	4	(avctx -> request_channels == 2)
cond	29:13	29:40	5	avctx -> request_channels == 2
water	29:13	0:0	6	avctx
op	29:18	0:0	6	->
water	29:20	0:0	6	request_channels
op	29:37	0:0	6	==
water	29:40	0:0	6	2
stmts	30:8	30:59	5	
water	30:8	0:0	6	avctx
op	30:13	0:0	6	->
water	30:15	0:0	6	request_channel_layout
op	30:38	0:0	6	=
water	30:40	0:0	6	AV_CH_LAYOUT_STEREO
water	30:59	0:0	6	;
water	31:0	0:0	2	FF_ENABLE_DEPRECATION_WARNINGS
water	33:4	0:0	2	if
water	33:7	0:0	2	(
water	33:8	0:0	2	avctx
op	33:13	0:0	2	->
water	33:15	0:0	2	channels
op	33:24	0:0	2	>
water	33:26	0:0	2	1
op	33:28	0:0	2	&&
water	34:8	0:0	2	avctx
op	34:13	0:0	2	->
water	34:15	0:0	2	request_channel_layout
op	34:38	0:0	2	==
water	34:41	0:0	2	AV_CH_LAYOUT_MONO
water	34:58	0:0	2	)
water	35:8	0:0	2	avctx
op	35:13	0:0	2	->
water	35:15	0:0	2	channels
op	35:24	0:0	2	=
water	35:26	0:0	2	1
water	35:27	0:0	2	;
else	36:4	38:27	2
stmts	36:9	38:27	3	
if	36:9	38:27	4	(avctx -> channels > 2 && avctx -> request_channel_layout == AV_CH_LAYOUT_STEREO)
cond	36:13	37:46	5	avctx -> channels > 2 && avctx -> request_channel_layout == AV_CH_LAYOUT_STEREO
water	36:13	0:0	6	avctx
op	36:18	0:0	6	->
water	36:20	0:0	6	channels
op	36:29	0:0	6	>
water	36:31	0:0	6	2
op	36:33	0:0	6	&&
water	37:13	0:0	6	avctx
op	37:18	0:0	6	->
water	37:20	0:0	6	request_channel_layout
op	37:43	0:0	6	==
water	37:46	0:0	6	AV_CH_LAYOUT_STEREO
stmts	38:8	38:27	5	
water	38:8	0:0	6	avctx
op	38:13	0:0	6	->
water	38:15	0:0	6	channels
op	38:24	0:0	6	=
water	38:26	0:0	6	2
water	38:27	0:0	6	;
water	39:4	0:0	2	s
op	39:5	0:0	2	->
water	39:7	0:0	2	downmixed
op	39:17	0:0	2	=
water	39:19	0:0	2	1
water	39:20	0:0	2	;
for	40:4	43:4	2	(i = 0 ;i < AC3_MAX_CHANNELS;i ++)
forinit	40:9	40:14	3	i = 0 ;
water	40:9	0:0	4	i
op	40:11	0:0	4	=
water	40:13	0:0	4	0
water	40:14	0:0	4	;
cond	40:16	40:20	3	i < AC3_MAX_CHANNELS
water	40:16	0:0	4	i
op	40:18	0:0	4	<
water	40:20	0:0	4	AC3_MAX_CHANNELS
forexpr	40:38	40:39	3	i ++
water	40:38	0:0	4	i
op	40:39	0:0	4	++
stmts	40:43	43:4	3	
water	40:43	0:0	4	{
water	41:8	0:0	4	s
op	41:9	0:0	4	->
water	41:11	0:0	4	xcfptr
op	41:17	0:0	4	[
water	41:18	0:0	4	i
op	41:19	0:0	4	]
op	41:21	0:0	4	=
water	41:23	0:0	4	s
op	41:24	0:0	4	->
water	41:26	0:0	4	transform_coeffs
op	41:42	0:0	4	[
water	41:43	0:0	4	i
op	41:44	0:0	4	]
water	41:45	0:0	4	;
water	42:8	0:0	4	s
op	42:9	0:0	4	->
water	42:11	0:0	4	dlyptr
op	42:17	0:0	4	[
water	42:18	0:0	4	i
op	42:19	0:0	4	]
op	42:21	0:0	4	=
water	42:23	0:0	4	s
op	42:24	0:0	4	->
water	42:26	0:0	4	delay
op	42:31	0:0	4	[
water	42:32	0:0	4	i
op	42:33	0:0	4	]
water	42:34	0:0	4	;
water	43:4	0:0	4	}
return	44:4	44:12	2	0
water	44:11	0:0	3	0

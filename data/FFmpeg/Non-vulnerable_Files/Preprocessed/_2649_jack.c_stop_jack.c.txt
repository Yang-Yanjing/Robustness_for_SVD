func	1:0	13:0	0	static void	stop_jack
params	1:21	0:0	1	
param	1:22	1:36	2	JackData *	self
stmnts	3:4	12:43	1	
if	3:4	7:4	2	(self -> client)
cond	3:8	3:14	3	self -> client
water	3:8	0:0	4	self
op	3:12	0:0	4	->
water	3:14	0:0	4	client
stmts	3:22	7:4	3	
water	3:22	0:0	4	{
if	4:8	5:41	4	(self -> activated)
cond	4:12	4:18	5	self -> activated
water	4:12	0:0	6	self
op	4:16	0:0	6	->
water	4:18	0:0	6	activated
stmts	5:12	5:41	5	
call	5:12	5:40	6	jack_deactivate
arg	5:28	5:40	7	self->client
water	5:28	0:0	8	self
op	5:32	0:0	8	->
water	5:34	0:0	8	client
water	5:41	0:0	6	;
call	6:8	6:38	4	jack_client_close
arg	6:26	6:38	5	self->client
water	6:26	0:0	6	self
op	6:30	0:0	6	->
water	6:32	0:0	6	client
water	6:39	0:0	4	;
water	7:4	0:0	4	}
call	8:4	8:35	2	sem_destroy
arg	8:16	8:35	3	&self->packet_count
op	8:16	0:0	4	&
water	8:17	0:0	4	self
op	8:21	0:0	4	->
water	8:23	0:0	4	packet_count
water	8:36	0:0	2	;
call	9:4	9:33	2	free_pkt_fifo
arg	9:18	9:33	3	&self->new_pkts
op	9:18	0:0	4	&
water	9:19	0:0	4	self
op	9:23	0:0	4	->
water	9:25	0:0	4	new_pkts
water	9:34	0:0	2	;
call	10:4	10:36	2	free_pkt_fifo
arg	10:18	10:36	3	&self->filled_pkts
op	10:18	0:0	4	&
water	10:19	0:0	4	self
op	10:23	0:0	4	->
water	10:25	0:0	4	filled_pkts
water	10:37	0:0	2	;
call	11:4	11:25	2	av_freep
arg	11:13	11:25	3	&self->ports
op	11:13	0:0	4	&
water	11:14	0:0	4	self
op	11:18	0:0	4	->
water	11:20	0:0	4	ports
water	11:26	0:0	2	;
call	12:4	12:42	2	ff_timefilter_destroy
arg	12:26	12:42	3	self->timefilter
water	12:26	0:0	4	self
op	12:30	0:0	4	->
water	12:32	0:0	4	timefilter
water	12:43	0:0	2	;

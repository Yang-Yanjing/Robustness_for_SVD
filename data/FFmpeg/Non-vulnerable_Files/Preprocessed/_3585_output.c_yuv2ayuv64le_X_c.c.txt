func	1:0	40:0	0	static void	yuv2ayuv64le_X_c
params	2:16	0:0	1	
param	2:17	2:30	2	SwsContext *	c
param	2:32	2:56	2	const int16_t *	lumFilter
param	3:17	3:40	2	const int16_t * *	_lumSrc
param	3:42	3:59	2	int	lumFilterSize
param	4:17	4:41	2	const int16_t *	chrFilter
param	4:43	4:67	2	const int16_t * *	_chrUSrc
param	5:17	5:41	2	const int16_t * *	_chrVSrc
param	5:43	5:60	2	int	chrFilterSize
param	6:17	6:40	2	const int16_t * *	_alpSrc
param	6:42	6:55	2	uint8_t *	dest
param	6:57	6:65	2	int	dstW
param	6:67	6:72	2	int	y
stmnts	0:0	39:4	1	
decl	8:4	11:56	2	const int32_t	**lumSrc
op	8:28	0:0	2	=
water	8:30	0:0	2	(
water	8:31	0:0	2	const
water	8:37	0:0	2	int32_t
op	8:45	0:0	2	*
op	8:46	0:0	2	*
water	8:47	0:0	2	)
water	8:49	0:0	2	_lumSrc
water	8:56	0:0	2	,
decl	8:4	11:56	2	const int32_t	**chrUSrc
op	9:28	0:0	2	=
water	9:30	0:0	2	(
water	9:31	0:0	2	const
water	9:37	0:0	2	int32_t
op	9:45	0:0	2	*
op	9:46	0:0	2	*
water	9:47	0:0	2	)
water	9:49	0:0	2	_chrUSrc
water	9:57	0:0	2	,
decl	8:4	11:56	2	const int32_t	**chrVSrc
op	10:28	0:0	2	=
water	10:30	0:0	2	(
water	10:31	0:0	2	const
water	10:37	0:0	2	int32_t
op	10:45	0:0	2	*
op	10:46	0:0	2	*
water	10:47	0:0	2	)
water	10:49	0:0	2	_chrVSrc
water	10:57	0:0	2	,
decl	8:4	11:56	2	const int32_t	**alpSrc
op	11:28	0:0	2	=
water	11:30	0:0	2	(
water	11:31	0:0	2	const
water	11:37	0:0	2	int32_t
op	11:45	0:0	2	*
op	11:46	0:0	2	*
water	11:47	0:0	2	)
water	11:49	0:0	2	_alpSrc
decl	12:4	12:27	2	int	hasAlpha
op	12:17	0:0	2	=
op	12:19	0:0	2	!
op	12:20	0:0	2	!
water	12:21	0:0	2	alpSrc
decl	13:4	13:9	2	int	i
for	14:4	39:4	2	(i = 0 ;i < dstW;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	i < dstW
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	dstW
forexpr	14:26	14:27	3	i ++
water	14:26	0:0	4	i
op	14:27	0:0	4	++
stmts	14:31	39:4	3	
water	14:31	0:0	4	{
decl	15:8	15:36	4	int	Y
op	15:14	0:0	4	=
water	15:16	0:0	4	1
op	15:18	0:0	4	<<
water	15:21	0:0	4	14
water	15:23	0:0	4	,
decl	15:8	15:36	4	int	U
op	15:27	0:0	4	=
water	15:29	0:0	4	1
op	15:31	0:0	4	<<
water	15:34	0:0	4	14
decl	16:8	16:36	4	int	V
op	16:14	0:0	4	=
water	16:16	0:0	4	1
op	16:18	0:0	4	<<
water	16:21	0:0	4	14
water	16:23	0:0	4	,
decl	16:8	16:36	4	int	A
op	16:27	0:0	4	=
water	16:29	0:0	4	1
op	16:31	0:0	4	<<
water	16:34	0:0	4	14
decl	17:8	17:13	4	int	j
water	18:8	0:0	4	Y
op	18:10	0:0	4	-=
water	18:13	0:0	4	0
water	18:14	0:0	4	x40000000
water	18:23	0:0	4	;
water	19:8	0:0	4	U
op	19:10	0:0	4	-=
water	19:13	0:0	4	0
water	19:14	0:0	4	x40000000
water	19:23	0:0	4	;
water	20:8	0:0	4	V
op	20:10	0:0	4	-=
water	20:13	0:0	4	0
water	20:14	0:0	4	x40000000
water	20:23	0:0	4	;
water	21:8	0:0	4	A
op	21:10	0:0	4	-=
water	21:13	0:0	4	0
water	21:14	0:0	4	x40000000
water	21:23	0:0	4	;
for	22:8	23:54	4	(j = 0 ;j < lumFilterSize;j ++)
forinit	22:13	22:18	5	j = 0 ;
water	22:13	0:0	6	j
op	22:15	0:0	6	=
water	22:17	0:0	6	0
water	22:18	0:0	6	;
cond	22:20	22:24	5	j < lumFilterSize
water	22:20	0:0	6	j
op	22:22	0:0	6	<
water	22:24	0:0	6	lumFilterSize
forexpr	22:39	22:40	5	j ++
water	22:39	0:0	6	j
op	22:40	0:0	6	++
stmts	23:12	23:54	5	
water	23:12	0:0	6	Y
op	23:14	0:0	6	+=
water	23:17	0:0	6	lumSrc
op	23:23	0:0	6	[
water	23:24	0:0	6	j
op	23:25	0:0	6	]
op	23:26	0:0	6	[
water	23:27	0:0	6	i
op	23:28	0:0	6	]
op	23:30	0:0	6	*
water	23:32	0:0	6	(
water	23:33	0:0	6	unsigned
water	23:41	0:0	6	)
water	23:42	0:0	6	lumFilter
op	23:51	0:0	6	[
water	23:52	0:0	6	j
op	23:53	0:0	6	]
water	23:54	0:0	6	;
for	24:8	25:55	4	(j = 0 ;j < chrFilterSize;j ++)
forinit	24:13	24:18	5	j = 0 ;
water	24:13	0:0	6	j
op	24:15	0:0	6	=
water	24:17	0:0	6	0
water	24:18	0:0	6	;
cond	24:20	24:24	5	j < chrFilterSize
water	24:20	0:0	6	j
op	24:22	0:0	6	<
water	24:24	0:0	6	chrFilterSize
forexpr	24:39	24:40	5	j ++
water	24:39	0:0	6	j
op	24:40	0:0	6	++
stmts	25:12	25:55	5	
water	25:12	0:0	6	U
op	25:14	0:0	6	+=
water	25:17	0:0	6	chrUSrc
op	25:24	0:0	6	[
water	25:25	0:0	6	j
op	25:26	0:0	6	]
op	25:27	0:0	6	[
water	25:28	0:0	6	i
op	25:29	0:0	6	]
op	25:31	0:0	6	*
water	25:33	0:0	6	(
water	25:34	0:0	6	unsigned
water	25:42	0:0	6	)
water	25:43	0:0	6	chrFilter
op	25:52	0:0	6	[
water	25:53	0:0	6	j
op	25:54	0:0	6	]
water	25:55	0:0	6	;
for	26:8	27:55	4	(j = 0 ;j < chrFilterSize;j ++)
forinit	26:13	26:18	5	j = 0 ;
water	26:13	0:0	6	j
op	26:15	0:0	6	=
water	26:17	0:0	6	0
water	26:18	0:0	6	;
cond	26:20	26:24	5	j < chrFilterSize
water	26:20	0:0	6	j
op	26:22	0:0	6	<
water	26:24	0:0	6	chrFilterSize
forexpr	26:39	26:40	5	j ++
water	26:39	0:0	6	j
op	26:40	0:0	6	++
stmts	27:12	27:55	5	
water	27:12	0:0	6	V
op	27:14	0:0	6	+=
water	27:17	0:0	6	chrVSrc
op	27:24	0:0	6	[
water	27:25	0:0	6	j
op	27:26	0:0	6	]
op	27:27	0:0	6	[
water	27:28	0:0	6	i
op	27:29	0:0	6	]
op	27:31	0:0	6	*
water	27:33	0:0	6	(
water	27:34	0:0	6	unsigned
water	27:42	0:0	6	)
water	27:43	0:0	6	chrFilter
op	27:52	0:0	6	[
water	27:53	0:0	6	j
op	27:54	0:0	6	]
water	27:55	0:0	6	;
if	28:8	30:58	4	(hasAlpha)
cond	28:12	28:12	5	hasAlpha
water	28:12	0:0	6	hasAlpha
stmts	29:12	30:58	5	
for	29:12	30:58	6	(j = 0 ;j < lumFilterSize;j ++)
forinit	29:17	29:22	7	j = 0 ;
water	29:17	0:0	8	j
op	29:19	0:0	8	=
water	29:21	0:0	8	0
water	29:22	0:0	8	;
cond	29:24	29:28	7	j < lumFilterSize
water	29:24	0:0	8	j
op	29:26	0:0	8	<
water	29:28	0:0	8	lumFilterSize
forexpr	29:43	29:44	7	j ++
water	29:43	0:0	8	j
op	29:44	0:0	8	++
stmts	30:16	30:58	7	
water	30:16	0:0	8	A
op	30:18	0:0	8	+=
water	30:21	0:0	8	alpSrc
op	30:27	0:0	8	[
water	30:28	0:0	8	j
op	30:29	0:0	8	]
op	30:30	0:0	8	[
water	30:31	0:0	8	i
op	30:32	0:0	8	]
op	30:34	0:0	8	*
water	30:36	0:0	8	(
water	30:37	0:0	8	unsigned
water	30:45	0:0	8	)
water	30:46	0:0	8	lumFilter
op	30:55	0:0	8	[
water	30:56	0:0	8	j
op	30:57	0:0	8	]
water	30:58	0:0	8	;
water	31:8	0:0	4	Y
op	31:10	0:0	4	=
water	31:12	0:0	4	0
water	31:13	0:0	4	x8000
op	31:19	0:0	4	+
call	31:21	31:42	4	av_clip_int16
arg	31:35	31:42	5	Y>>15
water	31:35	0:0	6	Y
op	31:37	0:0	6	>>
water	31:40	0:0	6	15
water	31:43	0:0	4	;
water	32:8	0:0	4	U
op	32:10	0:0	4	=
water	32:12	0:0	4	0
water	32:13	0:0	4	x8000
op	32:19	0:0	4	+
call	32:21	32:42	4	av_clip_int16
arg	32:35	32:42	5	U>>15
water	32:35	0:0	6	U
op	32:37	0:0	6	>>
water	32:40	0:0	6	15
water	32:43	0:0	4	;
water	33:8	0:0	4	V
op	33:10	0:0	4	=
water	33:12	0:0	4	0
water	33:13	0:0	4	x8000
op	33:19	0:0	4	+
call	33:21	33:42	4	av_clip_int16
arg	33:35	33:42	5	V>>15
water	33:35	0:0	6	V
op	33:37	0:0	6	>>
water	33:40	0:0	6	15
water	33:43	0:0	4	;
water	34:8	0:0	4	A
op	34:10	0:0	4	=
water	34:12	0:0	4	0
water	34:13	0:0	4	x8000
op	34:19	0:0	4	+
call	34:21	34:42	4	av_clip_int16
arg	34:35	34:42	5	A>>15
water	34:35	0:0	6	A
op	34:37	0:0	6	>>
water	34:40	0:0	6	15
water	34:43	0:0	4	;
call	35:8	35:50	4	AV_WL16
arg	35:16	35:28	5	dest+8*i
water	35:16	0:0	6	dest
op	35:21	0:0	6	+
water	35:23	0:0	6	8
op	35:25	0:0	6	*
water	35:27	0:0	6	i
arg	35:30	35:50	5	hasAlpha?A:65535
water	35:30	0:0	6	hasAlpha
water	35:39	0:0	6	?
water	35:41	0:0	6	A
water	35:43	0:0	6	:
water	35:45	0:0	6	65535
water	35:51	0:0	4	;
call	36:8	36:35	4	AV_WL16
arg	36:16	36:32	5	dest+8*i+2
water	36:16	0:0	6	dest
op	36:21	0:0	6	+
water	36:23	0:0	6	8
op	36:25	0:0	6	*
water	36:27	0:0	6	i
op	36:29	0:0	6	+
water	36:31	0:0	6	2
arg	36:34	36:35	5	Y
water	36:34	0:0	6	Y
water	36:36	0:0	4	;
call	37:8	37:35	4	AV_WL16
arg	37:16	37:32	5	dest+8*i+4
water	37:16	0:0	6	dest
op	37:21	0:0	6	+
water	37:23	0:0	6	8
op	37:25	0:0	6	*
water	37:27	0:0	6	i
op	37:29	0:0	6	+
water	37:31	0:0	6	4
arg	37:34	37:35	5	U
water	37:34	0:0	6	U
water	37:36	0:0	4	;
call	38:8	38:35	4	AV_WL16
arg	38:16	38:32	5	dest+8*i+6
water	38:16	0:0	6	dest
op	38:21	0:0	6	+
water	38:23	0:0	6	8
op	38:25	0:0	6	*
water	38:27	0:0	6	i
op	38:29	0:0	6	+
water	38:31	0:0	6	6
arg	38:34	38:35	5	V
water	38:34	0:0	6	V
water	38:36	0:0	4	;
water	39:4	0:0	4	}

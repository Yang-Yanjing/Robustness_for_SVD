func	1:0	22:0	0	static int	mov_write_stco_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	21:31	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:37	2	int	mode64
op	4:15	0:0	2	=
call	4:17	4:36	3	co64_required
arg	4:31	4:36	4	track
water	4:31	0:0	5	track
decl	5:4	5:31	2	int64_t	pos
op	5:16	0:0	2	=
call	5:18	5:30	3	avio_tell
arg	5:28	5:30	4	pb
water	5:28	0:0	5	pb
call	6:4	6:19	2	avio_wb32
arg	6:14	6:16	3	pb
water	6:14	0:0	4	pb
arg	6:18	6:19	3	0
water	6:18	0:0	4	0
water	6:20	0:0	2	;
if	7:4	8:32	2	(mode64)
cond	7:8	7:8	3	mode64
water	7:8	0:0	4	mode64
stmts	8:8	8:32	3	
call	8:8	8:31	4	ffio_wfourcc
arg	8:21	8:23	5	pb
water	8:21	0:0	6	pb
arg	8:25	8:31	5	"co64"
water	8:25	0:0	6	"co64"
water	8:32	0:0	4	;
else	9:4	10:32	2
stmts	10:8	10:32	3	
call	10:8	10:31	4	ffio_wfourcc
arg	10:21	10:23	5	pb
water	10:21	0:0	6	pb
arg	10:25	10:31	5	"stco"
water	10:25	0:0	6	"stco"
water	10:32	0:0	4	;
call	11:4	11:19	2	avio_wb32
arg	11:14	11:16	3	pb
water	11:14	0:0	4	pb
arg	11:18	11:19	3	0
water	11:18	0:0	4	0
water	11:20	0:0	2	;
call	12:4	12:35	2	avio_wb32
arg	12:14	12:16	3	pb
water	12:14	0:0	4	pb
arg	12:18	12:35	3	track->chunkCount
water	12:18	0:0	4	track
op	12:23	0:0	4	->
water	12:25	0:0	4	chunkCount
water	12:36	0:0	2	;
for	13:4	20:4	2	(i = 0 ;i < track -> entry;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:27	3	i < track -> entry
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	track
op	13:25	0:0	4	->
water	13:27	0:0	4	entry
forexpr	13:34	13:35	3	i ++
water	13:34	0:0	4	i
op	13:35	0:0	4	++
stmts	13:39	20:4	3	
water	13:39	0:0	4	{
if	14:8	15:20	4	(! track -> cluster [ i ] . chunkNum)
cond	14:12	14:31	5	! track -> cluster [ i ] . chunkNum
op	14:12	0:0	6	!
water	14:13	0:0	6	track
op	14:18	0:0	6	->
water	14:20	0:0	6	cluster
op	14:27	0:0	6	[
water	14:28	0:0	6	i
op	14:29	0:0	6	]
op	14:30	0:0	6	.
water	14:31	0:0	6	chunkNum
stmts	15:12	15:20	5	
continue	15:12	15:20	6	
if	16:8	17:69	4	(mode64 == 1)
cond	16:12	16:22	5	mode64 == 1
water	16:12	0:0	6	mode64
op	16:19	0:0	6	==
water	16:22	0:0	6	1
stmts	17:12	17:69	5	
call	17:12	17:68	6	avio_wb64
arg	17:22	17:24	7	pb
water	17:22	0:0	8	pb
arg	17:26	17:68	7	track->cluster[i].pos+track->data_offset
water	17:26	0:0	8	track
op	17:31	0:0	8	->
water	17:33	0:0	8	cluster
op	17:40	0:0	8	[
water	17:41	0:0	8	i
op	17:42	0:0	8	]
op	17:43	0:0	8	.
water	17:44	0:0	8	pos
op	17:48	0:0	8	+
water	17:50	0:0	8	track
op	17:55	0:0	8	->
water	17:57	0:0	8	data_offset
water	17:69	0:0	6	;
else	18:8	19:69	4
stmts	19:12	19:69	5	
call	19:12	19:68	6	avio_wb32
arg	19:22	19:24	7	pb
water	19:22	0:0	8	pb
arg	19:26	19:68	7	track->cluster[i].pos+track->data_offset
water	19:26	0:0	8	track
op	19:31	0:0	8	->
water	19:33	0:0	8	cluster
op	19:40	0:0	8	[
water	19:41	0:0	8	i
op	19:42	0:0	8	]
op	19:43	0:0	8	.
water	19:44	0:0	8	pos
op	19:48	0:0	8	+
water	19:50	0:0	8	track
op	19:55	0:0	8	->
water	19:57	0:0	8	data_offset
water	19:69	0:0	6	;
water	20:4	0:0	4	}
return	21:4	21:31	2	update_size(pb,pos)
call	21:11	21:30	3	update_size
arg	21:23	21:25	4	pb
water	21:23	0:0	5	pb
arg	21:27	21:30	4	pos
water	21:27	0:0	5	pos

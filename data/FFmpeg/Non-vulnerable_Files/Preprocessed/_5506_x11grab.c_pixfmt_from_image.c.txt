func	1:0	55:0	0	static int	pixfmt_from_image
params	1:28	0:0	1	
param	1:29	1:47	2	AVFormatContext *	s
param	1:49	1:62	2	XImage *	image
param	1:64	1:76	2	int *	pix_fmt
stmnts	3:4	54:12	1	
call	3:4	8:32	2	av_log
arg	3:11	3:12	3	s
water	3:11	0:0	4	s
arg	3:14	3:26	3	AV_LOG_DEBUG
water	3:14	0:0	4	AV_LOG_DEBUG
arg	4:11	4:63	3	"Image r 0x%.6lx g 0x%.6lx b 0x%.6lx and depth %i\n"
water	4:11	0:0	4	"Image r 0x%.6lx g 0x%.6lx b 0x%.6lx and depth %i\n"
arg	5:11	5:26	3	image->red_mask
water	5:11	0:0	4	image
op	5:16	0:0	4	->
water	5:18	0:0	4	red_mask
arg	6:11	6:28	3	image->green_mask
water	6:11	0:0	4	image
op	6:16	0:0	4	->
water	6:18	0:0	4	green_mask
arg	7:11	7:27	3	image->blue_mask
water	7:11	0:0	4	image
op	7:16	0:0	4	->
water	7:18	0:0	4	blue_mask
arg	8:11	8:32	3	image->bits_per_pixel
water	8:11	0:0	4	image
op	8:16	0:0	4	->
water	8:18	0:0	4	bits_per_pixel
water	8:33	0:0	2	;
op	9:4	0:0	2	*
water	9:5	0:0	2	pix_fmt
op	9:13	0:0	2	=
water	9:15	0:0	2	AV_PIX_FMT_NONE
water	9:30	0:0	2	;
switch	10:4	43:4	2	(image -> bits_per_pixel)
cond	10:12	10:19	3	image -> bits_per_pixel
water	10:12	0:0	4	image
op	10:17	0:0	4	->
water	10:19	0:0	4	bits_per_pixel
stmts	10:35	43:4	3	
water	10:35	0:0	4	{
label	11:4	11:10	4	case 8 :
op	12:8	0:0	4	*
water	12:9	0:0	4	pix_fmt
op	12:17	0:0	4	=
water	12:20	0:0	4	AV_PIX_FMT_PAL8
water	12:35	0:0	4	;
break	13:8	13:13	4	
label	14:4	14:11	4	case 16 :
if	15:8	19:8	4	(image -> red_mask == 0 xf800 && image -> green_mask == 0 x07e0 && image -> blue_mask == 0 x001f)
cond	15:12	17:34	5	image -> red_mask == 0 xf800 && image -> green_mask == 0 x07e0 && image -> blue_mask == 0 x001f
water	15:12	0:0	6	image
op	15:17	0:0	6	->
water	15:19	0:0	6	red_mask
op	15:30	0:0	6	==
water	15:33	0:0	6	0
water	15:34	0:0	6	xf800
op	15:40	0:0	6	&&
water	16:12	0:0	6	image
op	16:17	0:0	6	->
water	16:19	0:0	6	green_mask
op	16:30	0:0	6	==
water	16:33	0:0	6	0
water	16:34	0:0	6	x07e0
op	16:40	0:0	6	&&
water	17:12	0:0	6	image
op	17:17	0:0	6	->
water	17:19	0:0	6	blue_mask
op	17:30	0:0	6	==
water	17:33	0:0	6	0
water	17:34	0:0	6	x001f
stmts	17:41	19:8	5	
water	17:41	0:0	6	{
op	18:12	0:0	6	*
water	18:13	0:0	6	pix_fmt
op	18:21	0:0	6	=
water	18:23	0:0	6	AV_PIX_FMT_RGB565
water	18:40	0:0	6	;
water	19:8	0:0	6	}
else	19:10	23:8	4
stmts	19:15	23:8	5	
if	19:15	23:8	6	(image -> red_mask == 0 x7c00 && image -> green_mask == 0 x03e0 && image -> blue_mask == 0 x001f)
cond	19:19	21:41	7	image -> red_mask == 0 x7c00 && image -> green_mask == 0 x03e0 && image -> blue_mask == 0 x001f
water	19:19	0:0	8	image
op	19:24	0:0	8	->
water	19:26	0:0	8	red_mask
op	19:37	0:0	8	==
water	19:40	0:0	8	0
water	19:41	0:0	8	x7c00
op	19:47	0:0	8	&&
water	20:19	0:0	8	image
op	20:24	0:0	8	->
water	20:26	0:0	8	green_mask
op	20:37	0:0	8	==
water	20:40	0:0	8	0
water	20:41	0:0	8	x03e0
op	20:47	0:0	8	&&
water	21:19	0:0	8	image
op	21:24	0:0	8	->
water	21:26	0:0	8	blue_mask
op	21:37	0:0	8	==
water	21:40	0:0	8	0
water	21:41	0:0	8	x001f
stmts	21:48	23:8	7	
water	21:48	0:0	8	{
op	22:12	0:0	8	*
water	22:13	0:0	8	pix_fmt
op	22:21	0:0	8	=
water	22:23	0:0	8	AV_PIX_FMT_RGB555
water	22:40	0:0	8	;
water	23:8	0:0	8	}
break	24:8	24:13	4	
label	25:4	25:11	4	case 24 :
if	26:8	30:8	4	(image -> red_mask == 0 xff0000 && image -> green_mask == 0 x00ff00 && image -> blue_mask == 0 x0000ff)
cond	26:12	28:34	5	image -> red_mask == 0 xff0000 && image -> green_mask == 0 x00ff00 && image -> blue_mask == 0 x0000ff
water	26:12	0:0	6	image
op	26:17	0:0	6	->
water	26:19	0:0	6	red_mask
op	26:30	0:0	6	==
water	26:33	0:0	6	0
water	26:34	0:0	6	xff0000
op	26:42	0:0	6	&&
water	27:12	0:0	6	image
op	27:17	0:0	6	->
water	27:19	0:0	6	green_mask
op	27:30	0:0	6	==
water	27:33	0:0	6	0
water	27:34	0:0	6	x00ff00
op	27:42	0:0	6	&&
water	28:12	0:0	6	image
op	28:17	0:0	6	->
water	28:19	0:0	6	blue_mask
op	28:30	0:0	6	==
water	28:33	0:0	6	0
water	28:34	0:0	6	x0000ff
stmts	28:43	30:8	5	
water	28:43	0:0	6	{
op	29:12	0:0	6	*
water	29:13	0:0	6	pix_fmt
op	29:21	0:0	6	=
water	29:23	0:0	6	AV_PIX_FMT_BGR24
water	29:39	0:0	6	;
water	30:8	0:0	6	}
else	30:10	34:8	4
stmts	30:15	34:8	5	
if	30:15	34:8	6	(image -> red_mask == 0 x0000ff && image -> green_mask == 0 x00ff00 && image -> blue_mask == 0 xff0000)
cond	30:19	32:41	7	image -> red_mask == 0 x0000ff && image -> green_mask == 0 x00ff00 && image -> blue_mask == 0 xff0000
water	30:19	0:0	8	image
op	30:24	0:0	8	->
water	30:26	0:0	8	red_mask
op	30:37	0:0	8	==
water	30:40	0:0	8	0
water	30:41	0:0	8	x0000ff
op	30:49	0:0	8	&&
water	31:19	0:0	8	image
op	31:24	0:0	8	->
water	31:26	0:0	8	green_mask
op	31:37	0:0	8	==
water	31:40	0:0	8	0
water	31:41	0:0	8	x00ff00
op	31:49	0:0	8	&&
water	32:19	0:0	8	image
op	32:24	0:0	8	->
water	32:26	0:0	8	blue_mask
op	32:37	0:0	8	==
water	32:40	0:0	8	0
water	32:41	0:0	8	xff0000
stmts	32:50	34:8	7	
water	32:50	0:0	8	{
op	33:12	0:0	8	*
water	33:13	0:0	8	pix_fmt
op	33:21	0:0	8	=
water	33:23	0:0	8	AV_PIX_FMT_RGB24
water	33:39	0:0	8	;
water	34:8	0:0	8	}
break	35:8	35:13	4	
label	36:4	36:11	4	case 32 :
if	37:8	41:8	4	(image -> red_mask == 0 xff0000 && image -> green_mask == 0 x00ff00 && image -> blue_mask == 0 x0000ff)
cond	37:12	39:34	5	image -> red_mask == 0 xff0000 && image -> green_mask == 0 x00ff00 && image -> blue_mask == 0 x0000ff
water	37:12	0:0	6	image
op	37:17	0:0	6	->
water	37:19	0:0	6	red_mask
op	37:30	0:0	6	==
water	37:33	0:0	6	0
water	37:34	0:0	6	xff0000
op	37:42	0:0	6	&&
water	38:12	0:0	6	image
op	38:17	0:0	6	->
water	38:19	0:0	6	green_mask
op	38:30	0:0	6	==
water	38:33	0:0	6	0
water	38:34	0:0	6	x00ff00
op	38:42	0:0	6	&&
water	39:12	0:0	6	image
op	39:17	0:0	6	->
water	39:19	0:0	6	blue_mask
op	39:30	0:0	6	==
water	39:33	0:0	6	0
water	39:34	0:0	6	x0000ff
stmts	39:44	41:8	5	
water	39:44	0:0	6	{
op	40:12	0:0	6	*
water	40:13	0:0	6	pix_fmt
op	40:21	0:0	6	=
water	40:23	0:0	6	AV_PIX_FMT_0RGB32
water	40:40	0:0	6	;
water	41:8	0:0	6	}
break	42:8	42:13	4	
water	43:4	0:0	4	}
if	44:4	53:4	2	(* pix_fmt == AV_PIX_FMT_NONE)
cond	44:8	44:20	3	* pix_fmt == AV_PIX_FMT_NONE
op	44:8	0:0	4	*
water	44:9	0:0	4	pix_fmt
op	44:17	0:0	4	==
water	44:20	0:0	4	AV_PIX_FMT_NONE
stmts	44:37	53:4	3	
water	44:37	0:0	4	{
call	45:8	51:36	4	av_log
arg	45:15	45:16	5	s
water	45:15	0:0	6	s
arg	45:18	45:30	5	AV_LOG_ERROR
water	45:18	0:0	6	AV_LOG_ERROR
arg	46:15	47:47	5	"XImages with RGB mask 0x%.6lx 0x%.6lx 0x%.6lx and depth %i ""are currently not supported.\n"
water	46:15	0:0	6	"XImages with RGB mask 0x%.6lx 0x%.6lx 0x%.6lx and depth %i "
water	47:15	0:0	6	"are currently not supported.\n"
arg	48:15	48:30	5	image->red_mask
water	48:15	0:0	6	image
op	48:20	0:0	6	->
water	48:22	0:0	6	red_mask
arg	49:15	49:32	5	image->green_mask
water	49:15	0:0	6	image
op	49:20	0:0	6	->
water	49:22	0:0	6	green_mask
arg	50:15	50:31	5	image->blue_mask
water	50:15	0:0	6	image
op	50:20	0:0	6	->
water	50:22	0:0	6	blue_mask
arg	51:15	51:36	5	image->bits_per_pixel
water	51:15	0:0	6	image
op	51:20	0:0	6	->
water	51:22	0:0	6	bits_per_pixel
water	51:37	0:0	4	;
return	52:8	52:35	4	AVERROR_PATCHWELCOME
water	52:15	0:0	5	AVERROR_PATCHWELCOME
water	53:4	0:0	4	}
return	54:4	54:12	2	0
water	54:11	0:0	3	0

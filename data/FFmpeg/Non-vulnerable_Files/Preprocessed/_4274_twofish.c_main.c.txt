func	1:0	67:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:31	2	char *	argv[]
stmnts	0:0	66:14	1	
decl	3:4	4:5	2	uint8_t	Key[32]
op	3:20	0:0	2	=
water	3:22	0:0	2	{
water	3:23	0:0	2	0
water	3:24	0:0	2	x01
water	3:27	0:0	2	,
water	3:29	0:0	2	0
water	3:30	0:0	2	x23
water	3:33	0:0	2	,
water	3:35	0:0	2	0
water	3:36	0:0	2	x45
water	3:39	0:0	2	,
water	3:41	0:0	2	0
water	3:42	0:0	2	x67
water	3:45	0:0	2	,
water	3:47	0:0	2	0
water	3:48	0:0	2	x89
water	3:51	0:0	2	,
water	3:53	0:0	2	0
water	3:54	0:0	2	xab
water	3:57	0:0	2	,
water	3:59	0:0	2	0
water	3:60	0:0	2	xcd
water	3:63	0:0	2	,
water	3:65	0:0	2	0
water	3:66	0:0	2	xef
water	3:69	0:0	2	,
water	3:71	0:0	2	0
water	3:72	0:0	2	xfe
water	3:75	0:0	2	,
water	3:77	0:0	2	0
water	3:78	0:0	2	xdc
water	3:81	0:0	2	,
water	3:83	0:0	2	0
water	3:84	0:0	2	xba
water	3:87	0:0	2	,
water	3:89	0:0	2	0
water	3:90	0:0	2	x98
water	3:93	0:0	2	,
water	3:95	0:0	2	0
water	3:96	0:0	2	x76
water	3:99	0:0	2	,
water	3:101	0:0	2	0
water	3:102	0:0	2	x54
water	3:105	0:0	2	,
water	3:107	0:0	2	0
water	3:108	0:0	2	x32
water	3:111	0:0	2	,
water	3:113	0:0	2	0
water	3:114	0:0	2	x10
water	3:117	0:0	2	,
water	3:119	0:0	2	0
water	3:120	0:0	2	x00
water	3:123	0:0	2	,
water	3:125	0:0	2	0
water	3:126	0:0	2	x11
water	3:129	0:0	2	,
water	3:131	0:0	2	0
water	3:132	0:0	2	x22
water	3:135	0:0	2	,
water	3:137	0:0	2	0
water	3:138	0:0	2	x33
water	3:141	0:0	2	,
water	3:143	0:0	2	0
water	3:144	0:0	2	x44
water	3:147	0:0	2	,
water	3:149	0:0	2	0
water	3:150	0:0	2	x55
water	3:153	0:0	2	,
water	3:155	0:0	2	0
water	3:156	0:0	2	x66
water	3:159	0:0	2	,
water	3:161	0:0	2	0
water	3:162	0:0	2	x77
water	3:165	0:0	2	,
water	3:167	0:0	2	0
water	3:168	0:0	2	x88
water	3:171	0:0	2	,
water	3:173	0:0	2	0
water	3:174	0:0	2	x99
water	3:177	0:0	2	,
water	3:179	0:0	2	0
water	3:180	0:0	2	xaa
water	3:183	0:0	2	,
water	3:185	0:0	2	0
water	3:186	0:0	2	xbb
water	3:189	0:0	2	,
water	3:191	0:0	2	0
water	3:192	0:0	2	xcc
water	3:195	0:0	2	,
water	3:197	0:0	2	0
water	3:198	0:0	2	xdd
water	3:201	0:0	2	,
water	3:203	0:0	2	0
water	3:204	0:0	2	xee
water	3:207	0:0	2	,
water	3:209	0:0	2	0
water	3:210	0:0	2	xff
water	4:4	0:0	2	}
water	5:4	0:0	2	const
water	5:10	0:0	2	uint8_t
water	5:18	0:0	2	rct
op	5:21	0:0	2	[
water	5:22	0:0	2	6
op	5:23	0:0	2	]
op	5:24	0:0	2	[
water	5:25	0:0	2	16
op	5:27	0:0	2	]
op	5:29	0:0	2	=
water	5:31	0:0	2	{
water	6:8	0:0	2	{
water	6:9	0:0	2	0
water	6:10	0:0	2	x9f
water	6:13	0:0	2	,
water	6:15	0:0	2	0
water	6:16	0:0	2	x58
water	6:19	0:0	2	,
water	6:21	0:0	2	0
water	6:22	0:0	2	x9f
water	6:25	0:0	2	,
water	6:27	0:0	2	0
water	6:28	0:0	2	x5c
water	6:31	0:0	2	,
water	6:33	0:0	2	0
water	6:34	0:0	2	xf6
water	6:37	0:0	2	,
water	6:39	0:0	2	0
water	6:40	0:0	2	x12
water	6:43	0:0	2	,
water	6:45	0:0	2	0
water	6:46	0:0	2	x2c
water	6:49	0:0	2	,
water	6:51	0:0	2	0
water	6:52	0:0	2	x32
water	6:55	0:0	2	,
water	6:57	0:0	2	0
water	6:58	0:0	2	xb6
water	6:61	0:0	2	,
water	6:63	0:0	2	0
water	6:64	0:0	2	xbf
water	6:67	0:0	2	,
water	6:69	0:0	2	0
water	6:70	0:0	2	xec
water	6:73	0:0	2	,
water	6:75	0:0	2	0
water	6:76	0:0	2	x2f
water	6:79	0:0	2	,
water	6:81	0:0	2	0
water	6:82	0:0	2	x2a
water	6:85	0:0	2	,
water	6:87	0:0	2	0
water	6:88	0:0	2	xe8
water	6:91	0:0	2	,
water	6:93	0:0	2	0
water	6:94	0:0	2	xc3
water	6:97	0:0	2	,
water	6:99	0:0	2	0
water	6:100	0:0	2	x5a
water	6:103	0:0	2	}
water	6:104	0:0	2	,
water	7:8	0:0	2	{
water	7:9	0:0	2	0
water	7:10	0:0	2	xcf
water	7:13	0:0	2	,
water	7:15	0:0	2	0
water	7:16	0:0	2	xd1
water	7:19	0:0	2	,
water	7:21	0:0	2	0
water	7:22	0:0	2	xd2
water	7:25	0:0	2	,
water	7:27	0:0	2	0
water	7:28	0:0	2	xe5
water	7:31	0:0	2	,
water	7:33	0:0	2	0
water	7:34	0:0	2	xa9
water	7:37	0:0	2	,
water	7:39	0:0	2	0
water	7:40	0:0	2	xbe
water	7:43	0:0	2	,
water	7:45	0:0	2	0
water	7:46	0:0	2	x9c
water	7:49	0:0	2	,
water	7:51	0:0	2	0
water	7:52	0:0	2	xdf
water	7:55	0:0	2	,
water	7:57	0:0	2	0
water	7:58	0:0	2	x50
water	7:61	0:0	2	,
water	7:63	0:0	2	0
water	7:64	0:0	2	x1f
water	7:67	0:0	2	,
water	7:69	0:0	2	0
water	7:70	0:0	2	x13
water	7:73	0:0	2	,
water	7:75	0:0	2	0
water	7:76	0:0	2	xb8
water	7:79	0:0	2	,
water	7:81	0:0	2	0
water	7:82	0:0	2	x92
water	7:85	0:0	2	,
water	7:87	0:0	2	0
water	7:88	0:0	2	xbd
water	7:91	0:0	2	,
water	7:93	0:0	2	0
water	7:94	0:0	2	x22
water	7:97	0:0	2	,
water	7:99	0:0	2	0
water	7:100	0:0	2	x48
water	7:103	0:0	2	}
water	7:104	0:0	2	,
water	8:8	0:0	2	{
water	8:9	0:0	2	0
water	8:10	0:0	2	x37
water	8:13	0:0	2	,
water	8:15	0:0	2	0
water	8:16	0:0	2	x52
water	8:19	0:0	2	,
water	8:21	0:0	2	0
water	8:22	0:0	2	x7b
water	8:25	0:0	2	,
water	8:27	0:0	2	0
water	8:28	0:0	2	xe0
water	8:31	0:0	2	,
water	8:33	0:0	2	0
water	8:34	0:0	2	x05
water	8:37	0:0	2	,
water	8:39	0:0	2	0
water	8:40	0:0	2	x23
water	8:43	0:0	2	,
water	8:45	0:0	2	0
water	8:46	0:0	2	x34
water	8:49	0:0	2	,
water	8:51	0:0	2	0
water	8:52	0:0	2	xb8
water	8:55	0:0	2	,
water	8:57	0:0	2	0
water	8:58	0:0	2	x9f
water	8:61	0:0	2	,
water	8:63	0:0	2	0
water	8:64	0:0	2	x0c
water	8:67	0:0	2	,
water	8:69	0:0	2	0
water	8:70	0:0	2	xfc
water	8:73	0:0	2	,
water	8:75	0:0	2	0
water	8:76	0:0	2	xca
water	8:79	0:0	2	,
water	8:81	0:0	2	0
water	8:82	0:0	2	xe8
water	8:85	0:0	2	,
water	8:87	0:0	2	0
water	8:88	0:0	2	x7c
water	8:91	0:0	2	,
water	8:93	0:0	2	0
water	8:94	0:0	2	xfa
water	8:97	0:0	2	,
water	8:99	0:0	2	0
water	8:100	0:0	2	x20
water	8:103	0:0	2	}
water	8:104	0:0	2	,
water	9:8	0:0	2	{
water	9:9	0:0	2	0
water	9:10	0:0	2	x5d
water	9:13	0:0	2	,
water	9:15	0:0	2	0
water	9:16	0:0	2	x9d
water	9:19	0:0	2	,
water	9:21	0:0	2	0
water	9:22	0:0	2	x4e
water	9:25	0:0	2	,
water	9:27	0:0	2	0
water	9:28	0:0	2	xef
water	9:31	0:0	2	,
water	9:33	0:0	2	0
water	9:34	0:0	2	xfa
water	9:37	0:0	2	,
water	9:39	0:0	2	0
water	9:40	0:0	2	x91
water	9:43	0:0	2	,
water	9:45	0:0	2	0
water	9:46	0:0	2	x51
water	9:49	0:0	2	,
water	9:51	0:0	2	0
water	9:52	0:0	2	x57
water	9:55	0:0	2	,
water	9:57	0:0	2	0
water	9:58	0:0	2	x55
water	9:61	0:0	2	,
water	9:63	0:0	2	0
water	9:64	0:0	2	x24
water	9:67	0:0	2	,
water	9:69	0:0	2	0
water	9:70	0:0	2	xf1
water	9:73	0:0	2	,
water	9:75	0:0	2	0
water	9:76	0:0	2	x15
water	9:79	0:0	2	,
water	9:81	0:0	2	0
water	9:82	0:0	2	x81
water	9:85	0:0	2	,
water	9:87	0:0	2	0
water	9:88	0:0	2	x5a
water	9:91	0:0	2	,
water	9:93	0:0	2	0
water	9:94	0:0	2	x12
water	9:97	0:0	2	,
water	9:99	0:0	2	0
water	9:100	0:0	2	xe0
water	9:103	0:0	2	}
water	9:104	0:0	2	,
water	10:8	0:0	2	{
water	10:9	0:0	2	0
water	10:10	0:0	2	xe7
water	10:13	0:0	2	,
water	10:15	0:0	2	0
water	10:16	0:0	2	x54
water	10:19	0:0	2	,
water	10:21	0:0	2	0
water	10:22	0:0	2	x49
water	10:25	0:0	2	,
water	10:27	0:0	2	0
water	10:28	0:0	2	x21
water	10:31	0:0	2	,
water	10:33	0:0	2	0
water	10:34	0:0	2	x2b
water	10:37	0:0	2	,
water	10:39	0:0	2	0
water	10:40	0:0	2	xee
water	10:43	0:0	2	,
water	10:45	0:0	2	0
water	10:46	0:0	2	xf9
water	10:49	0:0	2	,
water	10:51	0:0	2	0
water	10:52	0:0	2	xf4
water	10:55	0:0	2	,
water	10:57	0:0	2	0
water	10:58	0:0	2	xa3
water	10:61	0:0	2	,
water	10:63	0:0	2	0
water	10:64	0:0	2	x90
water	10:67	0:0	2	,
water	10:69	0:0	2	0
water	10:70	0:0	2	xbd
water	10:73	0:0	2	,
water	10:75	0:0	2	0
water	10:76	0:0	2	x86
water	10:79	0:0	2	,
water	10:81	0:0	2	0
water	10:82	0:0	2	x0a
water	10:85	0:0	2	,
water	10:87	0:0	2	0
water	10:88	0:0	2	x64
water	10:91	0:0	2	,
water	10:93	0:0	2	0
water	10:94	0:0	2	x09
water	10:97	0:0	2	,
water	10:99	0:0	2	0
water	10:100	0:0	2	x41
water	10:103	0:0	2	}
water	10:104	0:0	2	,
water	11:8	0:0	2	{
water	11:9	0:0	2	0
water	11:10	0:0	2	x37
water	11:13	0:0	2	,
water	11:15	0:0	2	0
water	11:16	0:0	2	xfe
water	11:19	0:0	2	,
water	11:21	0:0	2	0
water	11:22	0:0	2	x26
water	11:25	0:0	2	,
water	11:27	0:0	2	0
water	11:28	0:0	2	xff
water	11:31	0:0	2	,
water	11:33	0:0	2	0
water	11:34	0:0	2	x1c
water	11:37	0:0	2	,
water	11:39	0:0	2	0
water	11:40	0:0	2	xf6
water	11:43	0:0	2	,
water	11:45	0:0	2	0
water	11:46	0:0	2	x61
water	11:49	0:0	2	,
water	11:51	0:0	2	0
water	11:52	0:0	2	x75
water	11:55	0:0	2	,
water	11:57	0:0	2	0
water	11:58	0:0	2	xf5
water	11:61	0:0	2	,
water	11:63	0:0	2	0
water	11:64	0:0	2	xdd
water	11:67	0:0	2	,
water	11:69	0:0	2	0
water	11:70	0:0	2	xf4
water	11:73	0:0	2	,
water	11:75	0:0	2	0
water	11:76	0:0	2	xc3
water	11:79	0:0	2	,
water	11:81	0:0	2	0
water	11:82	0:0	2	x3b
water	11:85	0:0	2	,
water	11:87	0:0	2	0
water	11:88	0:0	2	x97
water	11:91	0:0	2	,
water	11:93	0:0	2	0
water	11:94	0:0	2	xa2
water	11:97	0:0	2	,
water	11:99	0:0	2	0
water	11:100	0:0	2	x05
water	11:103	0:0	2	}
water	12:4	0:0	2	}
water	12:5	0:0	2	;
decl	13:4	13:43	2	uint8_t	temp[32]
water	13:20	0:0	2	,
decl	13:4	13:43	2	uint8_t	iv[16]
water	13:28	0:0	2	,
decl	13:4	13:43	2	uint8_t	rpt[32]
op	13:38	0:0	2	=
water	13:40	0:0	2	{
water	13:41	0:0	2	0
water	13:42	0:0	2	}
decl	14:4	14:40	2	const int	kbits[3]
op	14:23	0:0	2	=
water	14:25	0:0	2	{
water	14:26	0:0	2	128
water	14:29	0:0	2	,
water	14:31	0:0	2	192
water	14:34	0:0	2	,
water	14:36	0:0	2	256
water	14:39	0:0	2	}
decl	15:4	15:21	2	int	i
water	15:9	0:0	2	,
decl	15:4	15:21	2	int	j
water	15:12	0:0	2	,
decl	15:4	15:21	2	int	err
op	15:18	0:0	2	=
water	15:20	0:0	2	0
decl	16:4	16:17	2	AVTWOFISH	*cs
water	17:4	0:0	2	cs
op	17:7	0:0	2	=
call	17:9	17:26	2	av_twofish_alloc
water	17:27	0:0	2	;
if	18:4	19:16	2	(! cs)
cond	18:8	18:9	3	! cs
op	18:8	0:0	4	!
water	18:9	0:0	4	cs
stmts	19:8	19:16	3	
return	19:8	19:16	4	1
water	19:15	0:0	5	1
for	20:4	36:4	2	(j = 1 ;j < 3;j ++)
forinit	20:9	20:14	3	j = 1 ;
water	20:9	0:0	4	j
op	20:11	0:0	4	=
water	20:13	0:0	4	1
water	20:14	0:0	4	;
cond	20:16	20:20	3	j < 3
water	20:16	0:0	4	j
op	20:18	0:0	4	<
water	20:20	0:0	4	3
forexpr	20:23	20:24	3	j ++
water	20:23	0:0	4	j
op	20:24	0:0	4	++
stmts	20:28	36:4	3	
water	20:28	0:0	4	{
call	21:8	21:41	4	av_twofish_init
arg	21:24	21:26	5	cs
water	21:24	0:0	6	cs
arg	21:28	21:31	5	Key
water	21:28	0:0	6	Key
arg	21:33	21:41	5	kbits[j]
water	21:33	0:0	6	kbits
op	21:38	0:0	6	[
water	21:39	0:0	6	j
op	21:40	0:0	6	]
water	21:42	0:0	4	;
call	22:8	22:50	4	av_twofish_crypt
arg	22:25	22:27	5	cs
water	22:25	0:0	6	cs
arg	22:29	22:33	5	temp
water	22:29	0:0	6	temp
arg	22:35	22:38	5	rpt
water	22:35	0:0	6	rpt
arg	22:40	22:41	5	1
water	22:40	0:0	6	1
arg	22:43	22:47	5	NULL
water	22:43	0:0	6	NULL
arg	22:49	22:50	5	0
water	22:49	0:0	6	0
water	22:51	0:0	4	;
for	23:8	28:8	4	(i = 0 ;i < 16;i ++)
forinit	23:13	23:18	5	i = 0 ;
water	23:13	0:0	6	i
op	23:15	0:0	6	=
water	23:17	0:0	6	0
water	23:18	0:0	6	;
cond	23:20	23:24	5	i < 16
water	23:20	0:0	6	i
op	23:22	0:0	6	<
water	23:24	0:0	6	16
forexpr	23:28	23:29	5	i ++
water	23:28	0:0	6	i
op	23:29	0:0	6	++
stmts	23:33	28:8	5	
water	23:33	0:0	6	{
if	24:12	27:12	6	(rct [ j ] [ i ] != temp [ i ])
cond	24:16	24:35	7	rct [ j ] [ i ] != temp [ i ]
water	24:16	0:0	8	rct
op	24:19	0:0	8	[
water	24:20	0:0	8	j
op	24:21	0:0	8	]
op	24:22	0:0	8	[
water	24:23	0:0	8	i
op	24:24	0:0	8	]
op	24:26	0:0	8	!=
water	24:29	0:0	8	temp
op	24:33	0:0	8	[
water	24:34	0:0	8	i
op	24:35	0:0	8	]
stmts	24:38	27:12	7	
water	24:38	0:0	8	{
call	25:16	25:82	8	av_log
arg	25:23	25:27	9	NULL
water	25:23	0:0	10	NULL
arg	25:29	25:41	9	AV_LOG_ERROR
water	25:29	0:0	10	AV_LOG_ERROR
arg	25:43	25:59	9	"%d %02x %02x\n"
water	25:43	0:0	10	"%d %02x %02x\n"
arg	25:61	25:62	9	i
water	25:61	0:0	10	i
arg	25:64	25:73	9	rct[j][i]
water	25:64	0:0	10	rct
op	25:67	0:0	10	[
water	25:68	0:0	10	j
op	25:69	0:0	10	]
op	25:70	0:0	10	[
water	25:71	0:0	10	i
op	25:72	0:0	10	]
arg	25:75	25:82	9	temp[i]
water	25:75	0:0	10	temp
op	25:79	0:0	10	[
water	25:80	0:0	10	i
op	25:81	0:0	10	]
water	25:83	0:0	8	;
water	26:16	0:0	8	err
op	26:20	0:0	8	=
water	26:22	0:0	8	1
water	26:23	0:0	8	;
water	27:12	0:0	8	}
water	28:8	0:0	6	}
call	29:8	29:53	4	av_twofish_crypt
arg	29:25	29:27	5	cs
water	29:25	0:0	6	cs
arg	29:29	29:33	5	temp
water	29:29	0:0	6	temp
arg	29:35	29:41	5	rct[j]
water	29:35	0:0	6	rct
op	29:38	0:0	6	[
water	29:39	0:0	6	j
op	29:40	0:0	6	]
arg	29:43	29:44	5	1
water	29:43	0:0	6	1
arg	29:46	29:50	5	NULL
water	29:46	0:0	6	NULL
arg	29:52	29:53	5	1
water	29:52	0:0	6	1
water	29:54	0:0	4	;
for	30:8	35:8	4	(i = 0 ;i < 16;i ++)
forinit	30:13	30:18	5	i = 0 ;
water	30:13	0:0	6	i
op	30:15	0:0	6	=
water	30:17	0:0	6	0
water	30:18	0:0	6	;
cond	30:20	30:24	5	i < 16
water	30:20	0:0	6	i
op	30:22	0:0	6	<
water	30:24	0:0	6	16
forexpr	30:28	30:29	5	i ++
water	30:28	0:0	6	i
op	30:29	0:0	6	++
stmts	30:33	35:8	5	
water	30:33	0:0	6	{
if	31:12	34:12	6	(rpt [ i ] != temp [ i ])
cond	31:16	31:32	7	rpt [ i ] != temp [ i ]
water	31:16	0:0	8	rpt
op	31:19	0:0	8	[
water	31:20	0:0	8	i
op	31:21	0:0	8	]
op	31:23	0:0	8	!=
water	31:26	0:0	8	temp
op	31:30	0:0	8	[
water	31:31	0:0	8	i
op	31:32	0:0	8	]
stmts	31:35	34:12	7	
water	31:35	0:0	8	{
call	32:16	32:79	8	av_log
arg	32:23	32:27	9	NULL
water	32:23	0:0	10	NULL
arg	32:29	32:41	9	AV_LOG_ERROR
water	32:29	0:0	10	AV_LOG_ERROR
arg	32:43	32:59	9	"%d %02x %02x\n"
water	32:43	0:0	10	"%d %02x %02x\n"
arg	32:61	32:62	9	i
water	32:61	0:0	10	i
arg	32:64	32:70	9	rpt[i]
water	32:64	0:0	10	rpt
op	32:67	0:0	10	[
water	32:68	0:0	10	i
op	32:69	0:0	10	]
arg	32:72	32:79	9	temp[i]
water	32:72	0:0	10	temp
op	32:76	0:0	10	[
water	32:77	0:0	10	i
op	32:78	0:0	10	]
water	32:80	0:0	8	;
water	33:16	0:0	8	err
op	33:20	0:0	8	=
water	33:22	0:0	8	1
water	33:23	0:0	8	;
water	34:12	0:0	8	}
water	35:8	0:0	6	}
water	36:4	0:0	4	}
for	37:4	53:4	2	(j = 0 ;j < 3;j ++)
forinit	37:9	37:14	3	j = 0 ;
water	37:9	0:0	4	j
op	37:11	0:0	4	=
water	37:13	0:0	4	0
water	37:14	0:0	4	;
cond	37:16	37:20	3	j < 3
water	37:16	0:0	4	j
op	37:18	0:0	4	<
water	37:20	0:0	4	3
forexpr	37:23	37:24	3	j ++
water	37:23	0:0	4	j
op	37:24	0:0	4	++
stmts	37:28	53:4	3	
water	37:28	0:0	4	{
call	38:8	38:34	4	memset
arg	38:15	38:18	5	Key
water	38:15	0:0	6	Key
arg	38:20	38:21	5	0
water	38:20	0:0	6	0
arg	38:23	38:34	5	sizeof(Key)
op	38:23	0:0	6	sizeof
water	38:29	0:0	6	(
water	38:30	0:0	6	Key
water	38:33	0:0	6	)
water	38:35	0:0	4	;
call	39:8	39:34	4	memset
arg	39:15	39:18	5	rpt
water	39:15	0:0	6	rpt
arg	39:20	39:21	5	0
water	39:20	0:0	6	0
arg	39:23	39:34	5	sizeof(rpt)
op	39:23	0:0	6	sizeof
water	39:29	0:0	6	(
water	39:30	0:0	6	rpt
water	39:33	0:0	6	)
water	39:35	0:0	4	;
for	40:8	46:8	4	(i = 1 ;i < 50;i ++)
forinit	40:13	40:18	5	i = 1 ;
water	40:13	0:0	6	i
op	40:15	0:0	6	=
water	40:17	0:0	6	1
water	40:18	0:0	6	;
cond	40:20	40:24	5	i < 50
water	40:20	0:0	6	i
op	40:22	0:0	6	<
water	40:24	0:0	6	50
forexpr	40:28	40:29	5	i ++
water	40:28	0:0	6	i
op	40:29	0:0	6	++
stmts	40:33	46:8	5	
water	40:33	0:0	6	{
call	41:12	41:45	6	av_twofish_init
arg	41:28	41:30	7	cs
water	41:28	0:0	8	cs
arg	41:32	41:35	7	Key
water	41:32	0:0	8	Key
arg	41:37	41:45	7	kbits[j]
water	41:37	0:0	8	kbits
op	41:42	0:0	8	[
water	41:43	0:0	8	j
op	41:44	0:0	8	]
water	41:46	0:0	6	;
call	42:12	42:54	6	av_twofish_crypt
arg	42:29	42:31	7	cs
water	42:29	0:0	8	cs
arg	42:33	42:37	7	temp
water	42:33	0:0	8	temp
arg	42:39	42:42	7	rpt
water	42:39	0:0	8	rpt
arg	42:44	42:45	7	1
water	42:44	0:0	8	1
arg	42:47	42:51	7	NULL
water	42:47	0:0	8	NULL
arg	42:53	42:54	7	0
water	42:53	0:0	8	0
water	42:55	0:0	6	;
call	43:12	43:49	6	memcpy
arg	43:19	43:25	7	Key+16
water	43:19	0:0	8	Key
op	43:22	0:0	8	+
water	43:23	0:0	8	16
arg	43:26	43:29	7	Key
water	43:26	0:0	8	Key
arg	43:30	43:49	7	(kbits[j]-128)>>3
water	43:30	0:0	8	(
water	43:31	0:0	8	kbits
op	43:36	0:0	8	[
water	43:37	0:0	8	j
op	43:38	0:0	8	]
op	43:39	0:0	8	-
water	43:40	0:0	8	128
water	43:43	0:0	8	)
op	43:45	0:0	8	>>
water	43:48	0:0	8	3
water	43:50	0:0	6	;
call	44:12	44:29	6	memcpy
arg	44:19	44:22	7	Key
water	44:19	0:0	8	Key
arg	44:23	44:26	7	rpt
water	44:23	0:0	8	rpt
arg	44:27	44:29	7	16
water	44:27	0:0	8	16
water	44:30	0:0	6	;
call	45:12	45:30	6	memcpy
arg	45:19	45:22	7	rpt
water	45:19	0:0	8	rpt
arg	45:23	45:27	7	temp
water	45:23	0:0	8	temp
arg	45:28	45:30	7	16
water	45:28	0:0	8	16
water	45:31	0:0	6	;
water	46:8	0:0	6	}
for	47:8	52:8	4	(i = 0 ;i < 16;i ++)
forinit	47:13	47:18	5	i = 0 ;
water	47:13	0:0	6	i
op	47:15	0:0	6	=
water	47:17	0:0	6	0
water	47:18	0:0	6	;
cond	47:20	47:24	5	i < 16
water	47:20	0:0	6	i
op	47:22	0:0	6	<
water	47:24	0:0	6	16
forexpr	47:28	47:29	5	i ++
water	47:28	0:0	6	i
op	47:29	0:0	6	++
stmts	47:33	52:8	5	
water	47:33	0:0	6	{
if	48:12	51:12	6	(rct [ 3 + j ] [ i ] != temp [ i ])
cond	48:16	48:39	7	rct [ 3 + j ] [ i ] != temp [ i ]
water	48:16	0:0	8	rct
op	48:19	0:0	8	[
water	48:20	0:0	8	3
op	48:22	0:0	8	+
water	48:24	0:0	8	j
op	48:25	0:0	8	]
op	48:26	0:0	8	[
water	48:27	0:0	8	i
op	48:28	0:0	8	]
op	48:30	0:0	8	!=
water	48:33	0:0	8	temp
op	48:37	0:0	8	[
water	48:38	0:0	8	i
op	48:39	0:0	8	]
stmts	48:42	51:12	7	
water	48:42	0:0	8	{
call	49:16	49:86	8	av_log
arg	49:23	49:27	9	NULL
water	49:23	0:0	10	NULL
arg	49:29	49:41	9	AV_LOG_ERROR
water	49:29	0:0	10	AV_LOG_ERROR
arg	49:43	49:59	9	"%d %02x %02x\n"
water	49:43	0:0	10	"%d %02x %02x\n"
arg	49:61	49:62	9	i
water	49:61	0:0	10	i
arg	49:64	49:77	9	rct[3+j][i]
water	49:64	0:0	10	rct
op	49:67	0:0	10	[
water	49:68	0:0	10	3
op	49:70	0:0	10	+
water	49:72	0:0	10	j
op	49:73	0:0	10	]
op	49:74	0:0	10	[
water	49:75	0:0	10	i
op	49:76	0:0	10	]
arg	49:79	49:86	9	temp[i]
water	49:79	0:0	10	temp
op	49:83	0:0	10	[
water	49:84	0:0	10	i
op	49:85	0:0	10	]
water	49:87	0:0	8	;
water	50:16	0:0	8	err
op	50:20	0:0	8	=
water	50:22	0:0	8	1
water	50:23	0:0	8	;
water	51:12	0:0	8	}
water	52:8	0:0	6	}
water	53:4	0:0	4	}
call	54:4	54:30	2	memset
arg	54:11	54:14	3	rpt
water	54:11	0:0	4	rpt
arg	54:16	54:17	3	0
water	54:16	0:0	4	0
arg	54:19	54:30	3	sizeof(rpt)
op	54:19	0:0	4	sizeof
water	54:25	0:0	4	(
water	54:26	0:0	4	rpt
water	54:29	0:0	4	)
water	54:31	0:0	2	;
call	55:4	55:37	2	memcpy
arg	55:11	55:13	3	iv
water	55:11	0:0	4	iv
arg	55:15	55:33	3	"HALLO123HALLO123"
water	55:15	0:0	4	"HALLO123HALLO123"
arg	55:35	55:37	3	16
water	55:35	0:0	4	16
water	55:38	0:0	2	;
call	56:4	56:44	2	av_twofish_crypt
arg	56:21	56:23	3	cs
water	56:21	0:0	4	cs
arg	56:25	56:29	3	temp
water	56:25	0:0	4	temp
arg	56:31	56:34	3	rpt
water	56:31	0:0	4	rpt
arg	56:36	56:37	3	2
water	56:36	0:0	4	2
arg	56:39	56:41	3	iv
water	56:39	0:0	4	iv
arg	56:43	56:44	3	0
water	56:43	0:0	4	0
water	56:45	0:0	2	;
call	57:4	57:37	2	memcpy
arg	57:11	57:13	3	iv
water	57:11	0:0	4	iv
arg	57:15	57:33	3	"HALLO123HALLO123"
water	57:15	0:0	4	"HALLO123HALLO123"
arg	57:35	57:37	3	16
water	57:35	0:0	4	16
water	57:38	0:0	2	;
call	58:4	58:45	2	av_twofish_crypt
arg	58:21	58:23	3	cs
water	58:21	0:0	4	cs
arg	58:25	58:29	3	temp
water	58:25	0:0	4	temp
arg	58:31	58:35	3	temp
water	58:31	0:0	4	temp
arg	58:37	58:38	3	2
water	58:37	0:0	4	2
arg	58:40	58:42	3	iv
water	58:40	0:0	4	iv
arg	58:44	58:45	3	1
water	58:44	0:0	4	1
water	58:46	0:0	2	;
for	59:4	64:4	2	(i = 0 ;i < 32;i ++)
forinit	59:9	59:14	3	i = 0 ;
water	59:9	0:0	4	i
op	59:11	0:0	4	=
water	59:13	0:0	4	0
water	59:14	0:0	4	;
cond	59:16	59:20	3	i < 32
water	59:16	0:0	4	i
op	59:18	0:0	4	<
water	59:20	0:0	4	32
forexpr	59:24	59:25	3	i ++
water	59:24	0:0	4	i
op	59:25	0:0	4	++
stmts	59:29	64:4	3	
water	59:29	0:0	4	{
if	60:8	63:8	4	(rpt [ i ] != temp [ i ])
cond	60:12	60:28	5	rpt [ i ] != temp [ i ]
water	60:12	0:0	6	rpt
op	60:15	0:0	6	[
water	60:16	0:0	6	i
op	60:17	0:0	6	]
op	60:19	0:0	6	!=
water	60:22	0:0	6	temp
op	60:26	0:0	6	[
water	60:27	0:0	6	i
op	60:28	0:0	6	]
stmts	60:31	63:8	5	
water	60:31	0:0	6	{
call	61:12	61:75	6	av_log
arg	61:19	61:23	7	NULL
water	61:19	0:0	8	NULL
arg	61:25	61:37	7	AV_LOG_ERROR
water	61:25	0:0	8	AV_LOG_ERROR
arg	61:39	61:55	7	"%d %02x %02x\n"
water	61:39	0:0	8	"%d %02x %02x\n"
arg	61:57	61:58	7	i
water	61:57	0:0	8	i
arg	61:60	61:66	7	rpt[i]
water	61:60	0:0	8	rpt
op	61:63	0:0	8	[
water	61:64	0:0	8	i
op	61:65	0:0	8	]
arg	61:68	61:75	7	temp[i]
water	61:68	0:0	8	temp
op	61:72	0:0	8	[
water	61:73	0:0	8	i
op	61:74	0:0	8	]
water	61:76	0:0	6	;
water	62:12	0:0	6	err
op	62:16	0:0	6	=
water	62:18	0:0	6	1
water	62:19	0:0	6	;
water	63:8	0:0	6	}
water	64:4	0:0	4	}
call	65:4	65:14	2	av_free
arg	65:12	65:14	3	cs
water	65:12	0:0	4	cs
water	65:15	0:0	2	;
return	66:4	66:14	2	err
water	66:11	0:0	3	err

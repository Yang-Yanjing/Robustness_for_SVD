func	1:15	30:0	0	int	dilate_init
params	1:30	0:0	1	
param	1:31	1:51	2	AVFilterContext *	ctx
param	1:53	1:69	2	const char *	args
stmnts	0:0	29:12	1	
decl	3:4	3:29	2	OCVContext	*s
op	3:18	0:0	2	=
water	3:20	0:0	2	ctx
op	3:23	0:0	2	->
water	3:25	0:0	2	priv
decl	4:4	4:35	2	DilateContext	*dilate
op	4:26	0:0	2	=
water	4:28	0:0	2	s
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
decl	5:4	5:46	2	char	default_kernel_str[]
op	5:30	0:0	2	=
water	5:32	0:0	2	"3x3+0x0/rect"
decl	6:4	6:27	2	char	*kernel_str
op	6:21	0:0	2	=
water	6:23	0:0	2	NULL
decl	7:4	7:26	2	const char	*buf
op	7:20	0:0	2	=
water	7:22	0:0	2	args
decl	8:4	8:11	2	int	ret
if	9:4	13:4	2	(args)
cond	9:8	9:8	3	args
water	9:8	0:0	4	args
stmts	9:14	13:4	3	
water	9:14	0:0	4	{
water	10:8	0:0	4	kernel_str
op	10:19	0:0	4	=
call	10:21	10:43	4	av_get_token
arg	10:34	10:38	5	&buf
op	10:34	0:0	6	&
water	10:35	0:0	6	buf
arg	10:40	10:43	5	"|"
water	10:40	0:0	6	"|"
water	10:44	0:0	4	;
if	11:8	12:34	4	(! kernel_str)
cond	11:12	11:13	5	! kernel_str
op	11:12	0:0	6	!
water	11:13	0:0	6	kernel_str
stmts	12:12	12:34	5	
return	12:12	12:34	6	AVERROR(ENOMEM)
call	12:19	12:33	7	AVERROR
arg	12:27	12:33	8	ENOMEM
water	12:27	0:0	9	ENOMEM
water	13:4	0:0	4	}
water	14:4	0:0	2	ret
op	14:8	0:0	2	=
call	14:10	17:33	2	parse_iplconvkernel
arg	14:30	14:45	3	&dilate->kernel
op	14:30	0:0	4	&
water	14:31	0:0	4	dilate
op	14:37	0:0	4	->
water	14:39	0:0	4	kernel
arg	15:30	16:72	3	(!kernel_str||!*kernel_str)?default_kernel_str:kernel_str
water	15:30	0:0	4	(
op	15:31	0:0	4	!
water	15:32	0:0	4	kernel_str
op	15:43	0:0	4	||
op	15:46	0:0	4	!
op	15:47	0:0	4	*
water	15:48	0:0	4	kernel_str
water	15:58	0:0	4	)
water	15:60	0:0	4	?
water	15:62	0:0	4	default_kernel_str
water	16:60	0:0	4	:
water	16:62	0:0	4	kernel_str
arg	17:30	17:33	3	ctx
water	17:30	0:0	4	ctx
water	17:34	0:0	2	;
call	18:4	18:22	2	av_free
arg	18:12	18:22	3	kernel_str
water	18:12	0:0	4	kernel_str
water	18:23	0:0	2	;
if	19:4	20:18	2	(ret < 0)
cond	19:8	19:14	3	ret < 0
water	19:8	0:0	4	ret
op	19:12	0:0	4	<
water	19:14	0:0	4	0
stmts	20:8	20:18	3	
return	20:8	20:18	4	ret
water	20:15	0:0	5	ret
if	21:4	22:33	2	(! buf ||sscanf (buf ,"|%d" ,& dilate -> nb_iterations ) != 1)
cond	21:8	21:62	3	! buf ||sscanf (buf ,"|%d" ,& dilate -> nb_iterations ) != 1
op	21:8	0:0	4	!
water	21:9	0:0	4	buf
op	21:13	0:0	4	||
call	21:16	21:57	4	sscanf
arg	21:23	21:26	5	buf
water	21:23	0:0	6	buf
arg	21:28	21:33	5	"|%d"
water	21:28	0:0	6	"|%d"
arg	21:35	21:57	5	&dilate->nb_iterations
op	21:35	0:0	6	&
water	21:36	0:0	6	dilate
op	21:42	0:0	6	->
water	21:44	0:0	6	nb_iterations
op	21:59	0:0	4	!=
water	21:62	0:0	4	1
stmts	22:8	22:33	3	
water	22:8	0:0	4	dilate
op	22:14	0:0	4	->
water	22:16	0:0	4	nb_iterations
op	22:30	0:0	4	=
water	22:32	0:0	4	1
water	22:33	0:0	4	;
call	23:4	23:75	2	av_log
arg	23:11	23:14	3	ctx
water	23:11	0:0	4	ctx
arg	23:16	23:30	3	AV_LOG_VERBOSE
water	23:16	0:0	4	AV_LOG_VERBOSE
arg	23:32	23:52	3	"iterations_nb:%d\n"
water	23:32	0:0	4	"iterations_nb:%d\n"
arg	23:54	23:75	3	dilate->nb_iterations
water	23:54	0:0	4	dilate
op	23:60	0:0	4	->
water	23:62	0:0	4	nb_iterations
water	23:76	0:0	2	;
if	24:4	28:4	2	(dilate -> nb_iterations <= 0)
cond	24:8	24:33	3	dilate -> nb_iterations <= 0
water	24:8	0:0	4	dilate
op	24:14	0:0	4	->
water	24:16	0:0	4	nb_iterations
op	24:30	0:0	4	<=
water	24:33	0:0	4	0
stmts	24:36	28:4	3	
water	24:36	0:0	4	{
call	25:8	26:36	4	av_log
arg	25:15	25:18	5	ctx
water	25:15	0:0	6	ctx
arg	25:20	25:32	5	AV_LOG_ERROR
water	25:20	0:0	6	AV_LOG_ERROR
arg	25:34	25:87	5	"Invalid non-positive value '%d' for nb_iterations\n"
water	25:34	0:0	6	"Invalid non-positive value '%d' for nb_iterations\n"
arg	26:15	26:36	5	dilate->nb_iterations
water	26:15	0:0	6	dilate
op	26:21	0:0	6	->
water	26:23	0:0	6	nb_iterations
water	26:37	0:0	4	;
return	27:8	27:30	4	AVERROR(EINVAL)
call	27:15	27:29	5	AVERROR
arg	27:23	27:29	6	EINVAL
water	27:23	0:0	7	EINVAL
water	28:4	0:0	4	}
return	29:4	29:12	2	0
water	29:11	0:0	3	0

func	1:19	115:0	0	RENAME	(blockCopy)
params	1:36	0:0	1	
param	1:37	1:50	2	uint8_t	dst[]
param	1:52	1:65	2	int	dstStride
param	1:67	1:86	2	const uint8_t	src[]
param	1:88	1:101	2	int	srcStride
param	2:37	2:49	2	int	levelFix
param	2:51	2:80	2	int64_t *	packedOffsetAndScale
stmnts	0:0	114:4	1	
decl	5:4	5:9	2	int	i
if	7:4	85:4	2	(levelFix)
cond	7:7	7:7	3	levelFix
water	7:7	0:0	4	levelFix
stmts	7:16	85:4	3	
water	7:16	0:0	4	{
water	9:4	0:0	4	__asm__
water	9:12	0:0	4	volatile
water	9:20	0:0	4	(
water	10:8	0:0	4	"movq (%%"
water	10:18	0:0	4	REG_a
water	10:23	0:0	4	"), %%mm2        \n\t"
water	11:8	0:0	4	"movq 8(%%"
water	11:19	0:0	4	REG_a
water	11:24	0:0	4	"), %%mm3       \n\t"
water	12:8	0:0	4	"lea (%2,%4), %%"
water	12:25	0:0	4	REG_a
water	12:30	0:0	4	"         \n\t"
water	13:8	0:0	4	"lea (%3,%5), %%"
water	13:25	0:0	4	REG_d
water	13:30	0:0	4	"         \n\t"
water	14:8	0:0	4	"pxor %%mm4, %%mm4              \n\t"
water	17:8	0:0	4	"movq "
water	18:8	0:0	4	"movq "
water	19:8	0:0	4	"movq "
water	20:8	0:0	4	"movq "
water	21:8	0:0	4	"punpcklbw %%mm0, %%mm0         \n\t"
water	22:8	0:0	4	"punpckhbw %%mm5, %%mm5         \n\t"
water	23:8	0:0	4	"punpcklbw %%mm1, %%mm1         \n\t"
water	24:8	0:0	4	"punpckhbw %%mm6, %%mm6         \n\t"
water	25:8	0:0	4	"pmulhuw %%mm3, %%mm0           \n\t"
water	26:8	0:0	4	"pmulhuw %%mm3, %%mm5           \n\t"
water	27:8	0:0	4	"pmulhuw %%mm3, %%mm1           \n\t"
water	28:8	0:0	4	"pmulhuw %%mm3, %%mm6           \n\t"
water	29:8	0:0	4	"psubw %%mm2, %%mm0             \n\t"
water	30:8	0:0	4	"psubw %%mm2, %%mm5             \n\t"
water	31:8	0:0	4	"psubw %%mm2, %%mm1             \n\t"
water	32:8	0:0	4	"psubw %%mm2, %%mm6             \n\t"
water	33:8	0:0	4	"packuswb %%mm5, %%mm0          \n\t"
water	34:8	0:0	4	"packuswb %%mm6, %%mm1          \n\t"
water	35:8	0:0	4	"movq %%mm0, "
water	36:8	0:0	4	"movq %%mm1, "
water	39:8	0:0	4	"movq "
water	40:8	0:0	4	"movq "
water	41:8	0:0	4	"punpcklbw %%mm4, %%mm0         \n\t"
water	42:8	0:0	4	"punpckhbw %%mm4, %%mm5         \n\t"
water	43:8	0:0	4	"psubw %%mm2, %%mm0             \n\t"
water	44:8	0:0	4	"psubw %%mm2, %%mm5             \n\t"
water	45:8	0:0	4	"movq "
water	46:8	0:0	4	"psllw $6, %%mm0                \n\t"
water	47:8	0:0	4	"psllw $6, %%mm5                \n\t"
water	48:8	0:0	4	"pmulhw %%mm3, %%mm0            \n\t"
water	49:8	0:0	4	"movq "
water	50:8	0:0	4	"pmulhw %%mm3, %%mm5            \n\t"
water	51:8	0:0	4	"punpcklbw %%mm4, %%mm1         \n\t"
water	52:8	0:0	4	"punpckhbw %%mm4, %%mm6         \n\t"
water	53:8	0:0	4	"psubw %%mm2, %%mm1             \n\t"
water	54:8	0:0	4	"psubw %%mm2, %%mm6             \n\t"
water	55:8	0:0	4	"psllw $6, %%mm1                \n\t"
water	56:8	0:0	4	"psllw $6, %%mm6                \n\t"
water	57:8	0:0	4	"pmulhw %%mm3, %%mm1            \n\t"
water	58:8	0:0	4	"pmulhw %%mm3, %%mm6            \n\t"
water	59:8	0:0	4	"packuswb %%mm5, %%mm0          \n\t"
water	60:8	0:0	4	"packuswb %%mm6, %%mm1          \n\t"
water	61:8	0:0	4	"movq %%mm0, "
water	62:8	0:0	4	"movq %%mm1, "
call	65:3	65:41	4	REAL_SCALED_CPY
arg	65:19	65:23	5	src1
water	65:19	0:0	6	src1
arg	65:25	65:29	5	src2
water	65:25	0:0	6	src2
arg	65:31	65:35	5	dst1
water	65:31	0:0	6	dst1
arg	65:37	65:41	5	dst2
water	65:37	0:0	6	dst2
call	66:0	66:61	4	SCALED_CPY
arg	66:11	66:22	5	(%2)
water	66:11	0:0	6	(
op	66:12	0:0	6	%
water	66:13	0:0	6	2
water	66:14	0:0	6	)
arg	66:24	66:38	5	(%2,%4)
water	66:24	0:0	6	(
op	66:25	0:0	6	%
water	66:26	0:0	6	2
water	66:27	0:0	6	,
op	66:29	0:0	6	%
water	66:30	0:0	6	4
water	66:31	0:0	6	)
arg	66:40	66:51	5	(%3)
water	66:40	0:0	6	(
op	66:41	0:0	6	%
water	66:42	0:0	6	3
water	66:43	0:0	6	)
arg	66:53	66:61	5	(%3,%5)
water	66:53	0:0	6	(
op	66:54	0:0	6	%
water	66:55	0:0	6	3
water	66:56	0:0	6	,
op	66:58	0:0	6	%
water	66:59	0:0	6	5
water	66:60	0:0	6	)
call	67:0	67:69	4	SCALED_CPY
arg	67:11	67:22	5	(%2,%4,2)
water	67:11	0:0	6	(
op	67:12	0:0	6	%
water	67:13	0:0	6	2
water	67:14	0:0	6	,
op	67:16	0:0	6	%
water	67:17	0:0	6	4
water	67:18	0:0	6	,
water	67:20	0:0	6	2
water	67:21	0:0	6	)
arg	67:24	67:39	5	(%%REGa,%4,2)
water	67:24	0:0	6	(
op	67:25	0:0	6	%
op	67:26	0:0	6	%
water	67:27	0:0	6	REGa
water	67:31	0:0	6	,
op	67:33	0:0	6	%
water	67:34	0:0	6	4
water	67:35	0:0	6	,
water	67:37	0:0	6	2
water	67:38	0:0	6	)
arg	67:41	67:52	5	(%3,%5,2)
water	67:41	0:0	6	(
op	67:42	0:0	6	%
water	67:43	0:0	6	3
water	67:44	0:0	6	,
op	67:46	0:0	6	%
water	67:47	0:0	6	5
water	67:48	0:0	6	,
water	67:50	0:0	6	2
water	67:51	0:0	6	)
arg	67:54	67:69	5	(%%REGd,%5,2)
water	67:54	0:0	6	(
op	67:55	0:0	6	%
op	67:56	0:0	6	%
water	67:57	0:0	6	REGd
water	67:61	0:0	6	,
op	67:63	0:0	6	%
water	67:64	0:0	6	5
water	67:65	0:0	6	,
water	67:67	0:0	6	2
water	67:68	0:0	6	)
call	68:0	68:69	4	SCALED_CPY
arg	68:11	68:22	5	(%2,%4,4)
water	68:11	0:0	6	(
op	68:12	0:0	6	%
water	68:13	0:0	6	2
water	68:14	0:0	6	,
op	68:16	0:0	6	%
water	68:17	0:0	6	4
water	68:18	0:0	6	,
water	68:20	0:0	6	4
water	68:21	0:0	6	)
arg	68:24	68:39	5	(%%REGa,%4,4)
water	68:24	0:0	6	(
op	68:25	0:0	6	%
op	68:26	0:0	6	%
water	68:27	0:0	6	REGa
water	68:31	0:0	6	,
op	68:33	0:0	6	%
water	68:34	0:0	6	4
water	68:35	0:0	6	,
water	68:37	0:0	6	4
water	68:38	0:0	6	)
arg	68:41	68:52	5	(%3,%5,4)
water	68:41	0:0	6	(
op	68:42	0:0	6	%
water	68:43	0:0	6	3
water	68:44	0:0	6	,
op	68:46	0:0	6	%
water	68:47	0:0	6	5
water	68:48	0:0	6	,
water	68:50	0:0	6	4
water	68:51	0:0	6	)
arg	68:54	68:69	5	(%%REGd,%5,4)
water	68:54	0:0	6	(
op	68:55	0:0	6	%
op	68:56	0:0	6	%
water	68:57	0:0	6	REGd
water	68:61	0:0	6	,
op	68:63	0:0	6	%
water	68:64	0:0	6	5
water	68:65	0:0	6	,
water	68:67	0:0	6	4
water	68:68	0:0	6	)
water	69:8	0:0	4	"lea (%%"
water	69:17	0:0	4	REG_a
water	69:22	0:0	4	",%4,4), %%"
water	69:34	0:0	4	REG_a
water	69:39	0:0	4	"        \n\t"
water	70:8	0:0	4	"lea (%%"
water	70:17	0:0	4	REG_d
water	70:22	0:0	4	",%5,4), %%"
water	70:34	0:0	4	REG_d
water	70:39	0:0	4	"        \n\t"
call	71:0	71:71	4	SCALED_CPY
arg	71:11	71:23	5	(%%REGa,%4)
water	71:11	0:0	6	(
op	71:12	0:0	6	%
op	71:13	0:0	6	%
water	71:14	0:0	6	REGa
water	71:18	0:0	6	,
op	71:20	0:0	6	%
water	71:21	0:0	6	4
water	71:22	0:0	6	)
arg	71:25	71:40	5	(%%REGa,%4,2)
water	71:25	0:0	6	(
op	71:26	0:0	6	%
op	71:27	0:0	6	%
water	71:28	0:0	6	REGa
water	71:32	0:0	6	,
op	71:34	0:0	6	%
water	71:35	0:0	6	4
water	71:36	0:0	6	,
water	71:38	0:0	6	2
water	71:39	0:0	6	)
arg	71:42	71:54	5	(%%REGd,%5)
water	71:42	0:0	6	(
op	71:43	0:0	6	%
op	71:44	0:0	6	%
water	71:45	0:0	6	REGd
water	71:49	0:0	6	,
op	71:51	0:0	6	%
water	71:52	0:0	6	5
water	71:53	0:0	6	)
arg	71:56	71:71	5	(%%REGd,%5,2)
water	71:56	0:0	6	(
op	71:57	0:0	6	%
op	71:58	0:0	6	%
water	71:59	0:0	6	REGd
water	71:63	0:0	6	,
op	71:65	0:0	6	%
water	71:66	0:0	6	5
water	71:67	0:0	6	,
water	71:69	0:0	6	2
water	71:70	0:0	6	)
water	72:8	0:0	4	:
water	72:10	0:0	4	"=&a"
water	72:16	0:0	4	(
water	72:17	0:0	4	packedOffsetAndScale
water	72:37	0:0	4	)
water	73:8	0:0	4	:
water	73:10	0:0	4	"0"
water	73:14	0:0	4	(
water	73:15	0:0	4	packedOffsetAndScale
water	73:35	0:0	4	)
water	73:36	0:0	4	,
water	74:8	0:0	4	"r"
water	74:11	0:0	4	(
water	74:12	0:0	4	src
water	74:15	0:0	4	)
water	74:16	0:0	4	,
water	75:8	0:0	4	"r"
water	75:11	0:0	4	(
water	75:12	0:0	4	dst
water	75:15	0:0	4	)
water	75:16	0:0	4	,
water	76:8	0:0	4	"r"
water	76:12	0:0	4	(
water	76:13	0:0	4	(
water	76:14	0:0	4	x86_reg
water	76:21	0:0	4	)
water	76:22	0:0	4	srcStride
water	76:31	0:0	4	)
water	76:32	0:0	4	,
water	77:8	0:0	4	"r"
water	77:12	0:0	4	(
water	77:13	0:0	4	(
water	77:14	0:0	4	x86_reg
water	77:21	0:0	4	)
water	77:22	0:0	4	dstStride
water	77:31	0:0	4	)
water	78:8	0:0	4	:
water	78:10	0:0	4	"%"
water	78:13	0:0	4	REG_d
water	79:4	0:0	4	)
water	79:5	0:0	4	;
for	81:4	83:48	4	(i = 0 ;i < 8;i ++)
forinit	81:8	81:11	5	i = 0 ;
water	81:8	0:0	6	i
op	81:9	0:0	6	=
water	81:10	0:0	6	0
water	81:11	0:0	6	;
cond	81:13	81:15	5	i < 8
water	81:13	0:0	6	i
op	81:14	0:0	6	<
water	81:15	0:0	6	8
forexpr	81:18	81:19	5	i ++
water	81:18	0:0	6	i
op	81:19	0:0	6	++
stmts	82:8	83:48	5	
call	82:8	83:47	6	memcpy
arg	82:16	82:35	7	&(dst[dstStride*i])
op	82:16	0:0	8	&
water	82:17	0:0	8	(
water	82:18	0:0	8	dst
op	82:21	0:0	8	[
water	82:22	0:0	8	dstStride
op	82:31	0:0	8	*
water	82:32	0:0	8	i
op	82:33	0:0	8	]
water	82:34	0:0	8	)
arg	83:16	83:35	7	&(src[srcStride*i])
op	83:16	0:0	8	&
water	83:17	0:0	8	(
water	83:18	0:0	8	src
op	83:21	0:0	8	[
water	83:22	0:0	8	srcStride
op	83:31	0:0	8	*
water	83:32	0:0	8	i
op	83:33	0:0	8	]
water	83:34	0:0	8	)
arg	83:37	83:47	7	BLOCK_SIZE
water	83:37	0:0	8	BLOCK_SIZE
water	83:48	0:0	6	;
water	85:4	0:0	4	}
else	85:5	114:4	2
stmts	85:9	114:4	3	
water	85:9	0:0	4	{
water	87:4	0:0	4	__asm__
water	87:12	0:0	4	volatile
water	87:20	0:0	4	(
water	88:8	0:0	4	"lea (%0,%2), %%"
water	88:25	0:0	4	REG_a
water	88:30	0:0	4	"                 \n\t"
water	89:8	0:0	4	"lea (%1,%3), %%"
water	89:25	0:0	4	REG_d
water	89:30	0:0	4	"                 \n\t"
water	91:8	0:0	4	"movq "
water	92:8	0:0	4	"movq "
water	93:8	0:0	4	"movq %%mm0, "
water	94:8	0:0	4	"movq %%mm1, "
call	96:3	96:41	4	REAL_SIMPLE_CPY
arg	96:19	96:23	5	src1
water	96:19	0:0	6	src1
arg	96:25	96:29	5	src2
water	96:25	0:0	6	src2
arg	96:31	96:35	5	dst1
water	96:31	0:0	6	dst1
arg	96:37	96:41	5	dst2
water	96:37	0:0	6	dst2
call	97:0	97:62	4	SIMPLE_CPY
arg	97:11	97:22	5	(%0)
water	97:11	0:0	6	(
op	97:12	0:0	6	%
water	97:13	0:0	6	0
water	97:14	0:0	6	)
arg	97:24	97:39	5	(%0,%2)
water	97:24	0:0	6	(
op	97:25	0:0	6	%
water	97:26	0:0	6	0
water	97:27	0:0	6	,
op	97:29	0:0	6	%
water	97:30	0:0	6	2
water	97:31	0:0	6	)
arg	97:41	97:52	5	(%1)
water	97:41	0:0	6	(
op	97:42	0:0	6	%
water	97:43	0:0	6	1
water	97:44	0:0	6	)
arg	97:54	97:62	5	(%1,%3)
water	97:54	0:0	6	(
op	97:55	0:0	6	%
water	97:56	0:0	6	1
water	97:57	0:0	6	,
op	97:59	0:0	6	%
water	97:60	0:0	6	3
water	97:61	0:0	6	)
call	98:0	98:69	4	SIMPLE_CPY
arg	98:11	98:22	5	(%0,%2,2)
water	98:11	0:0	6	(
op	98:12	0:0	6	%
water	98:13	0:0	6	0
water	98:14	0:0	6	,
op	98:16	0:0	6	%
water	98:17	0:0	6	2
water	98:18	0:0	6	,
water	98:20	0:0	6	2
water	98:21	0:0	6	)
arg	98:24	98:39	5	(%%REGa,%2,2)
water	98:24	0:0	6	(
op	98:25	0:0	6	%
op	98:26	0:0	6	%
water	98:27	0:0	6	REGa
water	98:31	0:0	6	,
op	98:33	0:0	6	%
water	98:34	0:0	6	2
water	98:35	0:0	6	,
water	98:37	0:0	6	2
water	98:38	0:0	6	)
arg	98:41	98:52	5	(%1,%3,2)
water	98:41	0:0	6	(
op	98:42	0:0	6	%
water	98:43	0:0	6	1
water	98:44	0:0	6	,
op	98:46	0:0	6	%
water	98:47	0:0	6	3
water	98:48	0:0	6	,
water	98:50	0:0	6	2
water	98:51	0:0	6	)
arg	98:54	98:69	5	(%%REGd,%3,2)
water	98:54	0:0	6	(
op	98:55	0:0	6	%
op	98:56	0:0	6	%
water	98:57	0:0	6	REGd
water	98:61	0:0	6	,
op	98:63	0:0	6	%
water	98:64	0:0	6	3
water	98:65	0:0	6	,
water	98:67	0:0	6	2
water	98:68	0:0	6	)
call	99:0	99:69	4	SIMPLE_CPY
arg	99:11	99:22	5	(%0,%2,4)
water	99:11	0:0	6	(
op	99:12	0:0	6	%
water	99:13	0:0	6	0
water	99:14	0:0	6	,
op	99:16	0:0	6	%
water	99:17	0:0	6	2
water	99:18	0:0	6	,
water	99:20	0:0	6	4
water	99:21	0:0	6	)
arg	99:24	99:39	5	(%%REGa,%2,4)
water	99:24	0:0	6	(
op	99:25	0:0	6	%
op	99:26	0:0	6	%
water	99:27	0:0	6	REGa
water	99:31	0:0	6	,
op	99:33	0:0	6	%
water	99:34	0:0	6	2
water	99:35	0:0	6	,
water	99:37	0:0	6	4
water	99:38	0:0	6	)
arg	99:41	99:52	5	(%1,%3,4)
water	99:41	0:0	6	(
op	99:42	0:0	6	%
water	99:43	0:0	6	1
water	99:44	0:0	6	,
op	99:46	0:0	6	%
water	99:47	0:0	6	3
water	99:48	0:0	6	,
water	99:50	0:0	6	4
water	99:51	0:0	6	)
arg	99:54	99:69	5	(%%REGd,%3,4)
water	99:54	0:0	6	(
op	99:55	0:0	6	%
op	99:56	0:0	6	%
water	99:57	0:0	6	REGd
water	99:61	0:0	6	,
op	99:63	0:0	6	%
water	99:64	0:0	6	3
water	99:65	0:0	6	,
water	99:67	0:0	6	4
water	99:68	0:0	6	)
water	100:8	0:0	4	"lea (%%"
water	100:17	0:0	4	REG_a
water	100:22	0:0	4	",%2,4), %%"
water	100:34	0:0	4	REG_a
water	100:39	0:0	4	"        \n\t"
water	101:8	0:0	4	"lea (%%"
water	101:17	0:0	4	REG_d
water	101:22	0:0	4	",%3,4), %%"
water	101:34	0:0	4	REG_d
water	101:39	0:0	4	"        \n\t"
call	102:0	102:71	4	SIMPLE_CPY
arg	102:11	102:23	5	(%%REGa,%2)
water	102:11	0:0	6	(
op	102:12	0:0	6	%
op	102:13	0:0	6	%
water	102:14	0:0	6	REGa
water	102:18	0:0	6	,
op	102:20	0:0	6	%
water	102:21	0:0	6	2
water	102:22	0:0	6	)
arg	102:25	102:40	5	(%%REGa,%2,2)
water	102:25	0:0	6	(
op	102:26	0:0	6	%
op	102:27	0:0	6	%
water	102:28	0:0	6	REGa
water	102:32	0:0	6	,
op	102:34	0:0	6	%
water	102:35	0:0	6	2
water	102:36	0:0	6	,
water	102:38	0:0	6	2
water	102:39	0:0	6	)
arg	102:42	102:54	5	(%%REGd,%3)
water	102:42	0:0	6	(
op	102:43	0:0	6	%
op	102:44	0:0	6	%
water	102:45	0:0	6	REGd
water	102:49	0:0	6	,
op	102:51	0:0	6	%
water	102:52	0:0	6	3
water	102:53	0:0	6	)
arg	102:56	102:71	5	(%%REGd,%3,2)
water	102:56	0:0	6	(
op	102:57	0:0	6	%
op	102:58	0:0	6	%
water	102:59	0:0	6	REGd
water	102:63	0:0	6	,
op	102:65	0:0	6	%
water	102:66	0:0	6	3
water	102:67	0:0	6	,
water	102:69	0:0	6	2
water	102:70	0:0	6	)
water	103:8	0:0	4	:
water	103:10	0:0	4	:
water	103:12	0:0	4	"r"
water	103:16	0:0	4	(
water	103:17	0:0	4	src
water	103:20	0:0	4	)
water	103:21	0:0	4	,
water	104:8	0:0	4	"r"
water	104:12	0:0	4	(
water	104:13	0:0	4	dst
water	104:16	0:0	4	)
water	104:17	0:0	4	,
water	105:8	0:0	4	"r"
water	105:12	0:0	4	(
water	105:13	0:0	4	(
water	105:14	0:0	4	x86_reg
water	105:21	0:0	4	)
water	105:22	0:0	4	srcStride
water	105:31	0:0	4	)
water	105:32	0:0	4	,
water	106:8	0:0	4	"r"
water	106:12	0:0	4	(
water	106:13	0:0	4	(
water	106:14	0:0	4	x86_reg
water	106:21	0:0	4	)
water	106:22	0:0	4	dstStride
water	106:31	0:0	4	)
water	107:8	0:0	4	:
water	107:10	0:0	4	"%"
water	107:13	0:0	4	REG_a
water	107:18	0:0	4	,
water	107:20	0:0	4	"%"
water	107:23	0:0	4	REG_d
water	108:4	0:0	4	)
water	108:5	0:0	4	;
for	110:4	112:48	4	(i = 0 ;i < 8;i ++)
forinit	110:8	110:11	5	i = 0 ;
water	110:8	0:0	6	i
op	110:9	0:0	6	=
water	110:10	0:0	6	0
water	110:11	0:0	6	;
cond	110:13	110:15	5	i < 8
water	110:13	0:0	6	i
op	110:14	0:0	6	<
water	110:15	0:0	6	8
forexpr	110:18	110:19	5	i ++
water	110:18	0:0	6	i
op	110:19	0:0	6	++
stmts	111:8	112:48	5	
call	111:8	112:47	6	memcpy
arg	111:16	111:35	7	&(dst[dstStride*i])
op	111:16	0:0	8	&
water	111:17	0:0	8	(
water	111:18	0:0	8	dst
op	111:21	0:0	8	[
water	111:22	0:0	8	dstStride
op	111:31	0:0	8	*
water	111:32	0:0	8	i
op	111:33	0:0	8	]
water	111:34	0:0	8	)
arg	112:16	112:35	7	&(src[srcStride*i])
op	112:16	0:0	8	&
water	112:17	0:0	8	(
water	112:18	0:0	8	src
op	112:21	0:0	8	[
water	112:22	0:0	8	srcStride
op	112:31	0:0	8	*
water	112:32	0:0	8	i
op	112:33	0:0	8	]
water	112:34	0:0	8	)
arg	112:37	112:47	7	BLOCK_SIZE
water	112:37	0:0	8	BLOCK_SIZE
water	112:48	0:0	6	;
water	114:4	0:0	4	}

func	1:0	61:0	0	static void	paint_mouse_pointer
params	1:31	0:0	1	
param	1:32	1:45	2	XImage *	image
param	1:47	1:66	2	AVFormatContext *	s1
stmnts	0:0	60:15	1	
decl	3:4	3:37	2	X11GrabContext	*s
op	3:22	0:0	2	=
water	3:24	0:0	2	s1
op	3:26	0:0	2	->
water	3:28	0:0	2	priv_data
decl	4:4	4:27	2	int	x_off
op	4:17	0:0	2	=
water	4:19	0:0	2	s
op	4:20	0:0	2	->
water	4:22	0:0	2	x_off
decl	5:4	5:27	2	int	y_off
op	5:17	0:0	2	=
water	5:19	0:0	2	s
op	5:20	0:0	2	->
water	5:22	0:0	2	y_off
decl	6:4	6:27	2	int	width
op	6:17	0:0	2	=
water	6:19	0:0	2	s
op	6:20	0:0	2	->
water	6:22	0:0	2	width
decl	7:4	7:28	2	int	height
op	7:17	0:0	2	=
water	7:19	0:0	2	s
op	7:20	0:0	2	->
water	7:22	0:0	2	height
decl	8:4	8:25	2	Display	*dpy
op	8:17	0:0	2	=
water	8:19	0:0	2	s
op	8:20	0:0	2	->
water	8:22	0:0	2	dpy
decl	9:4	9:27	2	XFixesCursorImage	*xcim
decl	10:4	10:12	2	int	x
water	10:9	0:0	2	,
decl	10:4	10:12	2	int	y
decl	11:4	11:20	2	int	line
water	11:12	0:0	2	,
decl	11:4	11:20	2	int	column
decl	12:4	12:26	2	int	to_line
water	12:15	0:0	2	,
decl	12:4	12:26	2	int	to_column
decl	13:4	13:46	2	int	pixstride
op	13:18	0:0	2	=
water	13:20	0:0	2	image
op	13:25	0:0	2	->
water	13:27	0:0	2	bits_per_pixel
op	13:42	0:0	2	>>
water	13:45	0:0	2	3
decl	18:4	18:30	2	uint8_t	*pix
op	18:17	0:0	2	=
water	18:19	0:0	2	image
op	18:24	0:0	2	->
water	18:26	0:0	2	data
decl	19:4	19:15	2	Window	root
decl	20:4	20:29	2	XSetWindowAttributes	attr
if	22:4	23:14	2	(image -> bits_per_pixel != 24 && image -> bits_per_pixel != 32)
cond	22:8	22:64	3	image -> bits_per_pixel != 24 && image -> bits_per_pixel != 32
water	22:8	0:0	4	image
op	22:13	0:0	4	->
water	22:15	0:0	4	bits_per_pixel
op	22:30	0:0	4	!=
water	22:33	0:0	4	24
op	22:36	0:0	4	&&
water	22:39	0:0	4	image
op	22:44	0:0	4	->
water	22:46	0:0	4	bits_per_pixel
op	22:61	0:0	4	!=
water	22:64	0:0	4	32
stmts	23:8	23:14	3	
return	23:8	23:14	4	
if	24:4	25:50	2	(! s -> c)
cond	24:8	24:12	3	! s -> c
op	24:8	0:0	4	!
water	24:9	0:0	4	s
op	24:10	0:0	4	->
water	24:12	0:0	4	c
stmts	25:8	25:50	3	
water	25:8	0:0	4	s
op	25:9	0:0	4	->
water	25:11	0:0	4	c
op	25:13	0:0	4	=
call	25:15	25:49	4	XCreateFontCursor
arg	25:33	25:36	5	dpy
water	25:33	0:0	6	dpy
arg	25:38	25:49	5	XC_left_ptr
water	25:38	0:0	6	XC_left_ptr
water	25:50	0:0	4	;
water	26:4	0:0	2	root
op	26:9	0:0	2	=
call	26:11	26:32	2	DefaultRootWindow
arg	26:29	26:32	3	dpy
water	26:29	0:0	4	dpy
water	26:33	0:0	2	;
water	27:4	0:0	2	attr
op	27:8	0:0	2	.
water	27:9	0:0	2	cursor
op	27:16	0:0	2	=
water	27:18	0:0	2	s
op	27:19	0:0	2	->
water	27:21	0:0	2	c
water	27:22	0:0	2	;
call	28:4	28:54	2	XChangeWindowAttributes
arg	28:28	28:31	3	dpy
water	28:28	0:0	4	dpy
arg	28:33	28:37	3	root
water	28:33	0:0	4	root
arg	28:39	28:47	3	CWCursor
water	28:39	0:0	4	CWCursor
arg	28:49	28:54	3	&attr
op	28:49	0:0	4	&
water	28:50	0:0	4	attr
water	28:55	0:0	2	;
water	29:4	0:0	2	xcim
op	29:9	0:0	2	=
call	29:11	29:35	2	XFixesGetCursorImage
arg	29:32	29:35	3	dpy
water	29:32	0:0	4	dpy
water	29:36	0:0	2	;
if	30:4	34:4	2	(! xcim)
cond	30:8	30:9	3	! xcim
op	30:8	0:0	4	!
water	30:9	0:0	4	xcim
stmts	30:15	34:4	3	
water	30:15	0:0	4	{
call	31:8	32:46	4	av_log
arg	31:15	31:17	5	s1
water	31:15	0:0	6	s1
arg	31:19	31:33	5	AV_LOG_WARNING
water	31:19	0:0	6	AV_LOG_WARNING
arg	32:15	32:46	5	"XFixesGetCursorImage failed\n"
water	32:15	0:0	6	"XFixesGetCursorImage failed\n"
water	32:47	0:0	4	;
return	33:8	33:14	4	
water	34:4	0:0	4	}
water	35:4	0:0	2	x
op	35:6	0:0	2	=
water	35:8	0:0	2	xcim
op	35:12	0:0	2	->
water	35:14	0:0	2	x
op	35:16	0:0	2	-
water	35:18	0:0	2	xcim
op	35:22	0:0	2	->
water	35:24	0:0	2	xhot
water	35:28	0:0	2	;
water	36:4	0:0	2	y
op	36:6	0:0	2	=
water	36:8	0:0	2	xcim
op	36:12	0:0	2	->
water	36:14	0:0	2	y
op	36:16	0:0	2	-
water	36:18	0:0	2	xcim
op	36:22	0:0	2	->
water	36:24	0:0	2	yhot
water	36:28	0:0	2	;
water	37:4	0:0	2	to_line
op	37:14	0:0	2	=
call	37:16	37:58	2	FFMIN
arg	37:22	37:40	3	(y+xcim->height)
water	37:22	0:0	4	(
water	37:23	0:0	4	y
op	37:25	0:0	4	+
water	37:27	0:0	4	xcim
op	37:31	0:0	4	->
water	37:33	0:0	4	height
water	37:39	0:0	4	)
arg	37:42	37:58	3	(height+y_off)
water	37:42	0:0	4	(
water	37:43	0:0	4	height
op	37:50	0:0	4	+
water	37:52	0:0	4	y_off
water	37:57	0:0	4	)
water	37:59	0:0	2	;
water	38:4	0:0	2	to_column
op	38:14	0:0	2	=
call	38:16	38:58	2	FFMIN
arg	38:22	38:39	3	(x+xcim->width)
water	38:22	0:0	4	(
water	38:23	0:0	4	x
op	38:25	0:0	4	+
water	38:27	0:0	4	xcim
op	38:31	0:0	4	->
water	38:33	0:0	4	width
water	38:38	0:0	4	)
arg	38:42	38:58	3	(width+x_off)
water	38:42	0:0	4	(
water	38:43	0:0	4	width
op	38:50	0:0	4	+
water	38:52	0:0	4	x_off
water	38:57	0:0	4	)
water	38:59	0:0	2	;
for	39:4	58:4	2	(line =FFMAX (y ,y_off ) ;line < to_line;line ++)
forinit	39:9	39:31	3	line =FFMAX (y ,y_off ) ;
water	39:9	0:0	4	line
op	39:14	0:0	4	=
call	39:16	39:30	4	FFMAX
arg	39:22	39:23	5	y
water	39:22	0:0	6	y
arg	39:25	39:30	5	y_off
water	39:25	0:0	6	y_off
water	39:31	0:0	4	;
cond	39:33	39:40	3	line < to_line
water	39:33	0:0	4	line
op	39:38	0:0	4	<
water	39:40	0:0	4	to_line
forexpr	39:49	39:53	3	line ++
water	39:49	0:0	4	line
op	39:53	0:0	4	++
stmts	39:57	58:4	3	
water	39:57	0:0	4	{
for	40:8	57:8	4	(column =FFMAX (x ,x_off ) ;column < to_column;column ++)
forinit	40:13	40:37	5	column =FFMAX (x ,x_off ) ;
water	40:13	0:0	6	column
op	40:20	0:0	6	=
call	40:22	40:36	6	FFMAX
arg	40:28	40:29	7	x
water	40:28	0:0	8	x
arg	40:31	40:36	7	x_off
water	40:31	0:0	8	x_off
water	40:37	0:0	6	;
cond	40:39	40:48	5	column < to_column
water	40:39	0:0	6	column
op	40:46	0:0	6	<
water	40:48	0:0	6	to_column
forexpr	40:59	40:65	5	column ++
water	40:59	0:0	6	column
op	40:65	0:0	6	++
stmts	40:69	57:8	5	
water	40:69	0:0	6	{
decl	41:12	41:71	6	int	xcim_addr
op	41:27	0:0	6	=
water	41:29	0:0	6	(
water	41:30	0:0	6	line
op	41:36	0:0	6	-
water	41:38	0:0	6	y
water	41:39	0:0	6	)
op	41:45	0:0	6	*
water	41:47	0:0	6	xcim
op	41:51	0:0	6	->
water	41:53	0:0	6	width
op	41:59	0:0	6	+
water	41:61	0:0	6	column
op	41:68	0:0	6	-
water	41:70	0:0	6	x
decl	42:12	42:88	6	int	image_addr
op	42:27	0:0	6	=
water	42:29	0:0	6	(
water	42:30	0:0	6	(
water	42:31	0:0	6	line
op	42:36	0:0	6	-
water	42:38	0:0	6	y_off
water	42:43	0:0	6	)
op	42:45	0:0	6	*
water	42:47	0:0	6	width
op	42:59	0:0	6	+
water	42:61	0:0	6	column
op	42:68	0:0	6	-
water	42:70	0:0	6	x_off
water	42:75	0:0	6	)
op	42:77	0:0	6	*
water	42:79	0:0	6	pixstride
decl	43:12	43:69	6	int	r
op	43:27	0:0	6	=
call	43:29	43:68	7	(uint8_t)
arg	43:39	43:68	8	xcim->pixels[xcim_addr]>>0
water	43:39	0:0	9	xcim
op	43:43	0:0	9	->
water	43:45	0:0	9	pixels
op	43:51	0:0	9	[
water	43:52	0:0	9	xcim_addr
op	43:61	0:0	9	]
op	43:63	0:0	9	>>
water	43:67	0:0	9	0
decl	44:12	44:69	6	int	g
op	44:27	0:0	6	=
call	44:29	44:68	7	(uint8_t)
arg	44:39	44:68	8	xcim->pixels[xcim_addr]>>8
water	44:39	0:0	9	xcim
op	44:43	0:0	9	->
water	44:45	0:0	9	pixels
op	44:51	0:0	9	[
water	44:52	0:0	9	xcim_addr
op	44:61	0:0	9	]
op	44:63	0:0	9	>>
water	44:67	0:0	9	8
decl	45:12	45:69	6	int	b
op	45:27	0:0	6	=
call	45:29	45:68	7	(uint8_t)
arg	45:39	45:68	8	xcim->pixels[xcim_addr]>>16
water	45:39	0:0	9	xcim
op	45:43	0:0	9	->
water	45:45	0:0	9	pixels
op	45:51	0:0	9	[
water	45:52	0:0	9	xcim_addr
op	45:61	0:0	9	]
op	45:63	0:0	9	>>
water	45:66	0:0	9	16
decl	46:12	46:69	6	int	a
op	46:27	0:0	6	=
call	46:29	46:68	7	(uint8_t)
arg	46:39	46:68	8	xcim->pixels[xcim_addr]>>24
water	46:39	0:0	9	xcim
op	46:43	0:0	9	->
water	46:45	0:0	9	pixels
op	46:51	0:0	9	[
water	46:52	0:0	9	xcim_addr
op	46:61	0:0	9	]
op	46:63	0:0	9	>>
water	46:66	0:0	9	24
if	47:12	51:12	6	(a == 255)
cond	47:16	47:21	7	a == 255
water	47:16	0:0	8	a
op	47:18	0:0	8	==
water	47:21	0:0	8	255
stmts	47:26	51:12	7	
water	47:26	0:0	8	{
water	48:16	0:0	8	pix
op	48:19	0:0	8	[
water	48:20	0:0	8	image_addr
op	48:31	0:0	8	+
water	48:33	0:0	8	0
op	48:34	0:0	8	]
op	48:36	0:0	8	=
water	48:38	0:0	8	r
water	48:39	0:0	8	;
water	49:16	0:0	8	pix
op	49:19	0:0	8	[
water	49:20	0:0	8	image_addr
op	49:31	0:0	8	+
water	49:33	0:0	8	1
op	49:34	0:0	8	]
op	49:36	0:0	8	=
water	49:38	0:0	8	g
water	49:39	0:0	8	;
water	50:16	0:0	8	pix
op	50:19	0:0	8	[
water	50:20	0:0	8	image_addr
op	50:31	0:0	8	+
water	50:33	0:0	8	2
op	50:34	0:0	8	]
op	50:36	0:0	8	=
water	50:38	0:0	8	b
water	50:39	0:0	8	;
water	51:12	0:0	8	}
else	51:14	56:12	6
stmts	51:19	56:12	7	
if	51:19	56:12	8	(a)
cond	51:23	51:23	9	a
water	51:23	0:0	10	a
stmts	51:26	56:12	9	
water	51:26	0:0	10	{
water	53:16	0:0	10	pix
op	53:19	0:0	10	[
water	53:20	0:0	10	image_addr
op	53:31	0:0	10	+
water	53:33	0:0	10	0
op	53:34	0:0	10	]
op	53:36	0:0	10	=
water	53:38	0:0	10	r
op	53:40	0:0	10	+
water	53:42	0:0	10	(
water	53:43	0:0	10	pix
op	53:46	0:0	10	[
water	53:47	0:0	10	image_addr
op	53:58	0:0	10	+
water	53:60	0:0	10	0
op	53:61	0:0	10	]
op	53:63	0:0	10	*
water	53:65	0:0	10	(
water	53:66	0:0	10	255
op	53:70	0:0	10	-
water	53:72	0:0	10	a
water	53:73	0:0	10	)
op	53:75	0:0	10	+
water	53:77	0:0	10	255
op	53:81	0:0	10	/
water	53:83	0:0	10	2
water	53:84	0:0	10	)
op	53:86	0:0	10	/
water	53:88	0:0	10	255
water	53:91	0:0	10	;
water	54:16	0:0	10	pix
op	54:19	0:0	10	[
water	54:20	0:0	10	image_addr
op	54:31	0:0	10	+
water	54:33	0:0	10	1
op	54:34	0:0	10	]
op	54:36	0:0	10	=
water	54:38	0:0	10	g
op	54:40	0:0	10	+
water	54:42	0:0	10	(
water	54:43	0:0	10	pix
op	54:46	0:0	10	[
water	54:47	0:0	10	image_addr
op	54:58	0:0	10	+
water	54:60	0:0	10	1
op	54:61	0:0	10	]
op	54:63	0:0	10	*
water	54:65	0:0	10	(
water	54:66	0:0	10	255
op	54:70	0:0	10	-
water	54:72	0:0	10	a
water	54:73	0:0	10	)
op	54:75	0:0	10	+
water	54:77	0:0	10	255
op	54:81	0:0	10	/
water	54:83	0:0	10	2
water	54:84	0:0	10	)
op	54:86	0:0	10	/
water	54:88	0:0	10	255
water	54:91	0:0	10	;
water	55:16	0:0	10	pix
op	55:19	0:0	10	[
water	55:20	0:0	10	image_addr
op	55:31	0:0	10	+
water	55:33	0:0	10	2
op	55:34	0:0	10	]
op	55:36	0:0	10	=
water	55:38	0:0	10	b
op	55:40	0:0	10	+
water	55:42	0:0	10	(
water	55:43	0:0	10	pix
op	55:46	0:0	10	[
water	55:47	0:0	10	image_addr
op	55:58	0:0	10	+
water	55:60	0:0	10	2
op	55:61	0:0	10	]
op	55:63	0:0	10	*
water	55:65	0:0	10	(
water	55:66	0:0	10	255
op	55:70	0:0	10	-
water	55:72	0:0	10	a
water	55:73	0:0	10	)
op	55:75	0:0	10	+
water	55:77	0:0	10	255
op	55:81	0:0	10	/
water	55:83	0:0	10	2
water	55:84	0:0	10	)
op	55:86	0:0	10	/
water	55:88	0:0	10	255
water	55:91	0:0	10	;
water	56:12	0:0	10	}
water	57:8	0:0	6	}
water	58:4	0:0	4	}
call	59:4	59:14	2	XFree
arg	59:10	59:14	3	xcim
water	59:10	0:0	4	xcim
water	59:15	0:0	2	;
water	60:4	0:0	2	xcim
op	60:9	0:0	2	=
water	60:11	0:0	2	NULL
water	60:15	0:0	2	;

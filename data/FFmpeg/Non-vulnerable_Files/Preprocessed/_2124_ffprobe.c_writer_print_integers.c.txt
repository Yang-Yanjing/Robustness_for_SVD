func	1:0	24:0	0	static void	writer_print_integers
params	1:33	0:0	1	
param	1:34	1:53	2	WriterContext *	wctx
param	1:55	1:71	2	const char *	name
param	2:34	2:47	2	uint8_t *	data
param	2:49	2:57	2	int	size
param	2:59	2:77	2	const char *	format
param	3:34	3:45	2	int	columns
param	3:47	3:56	2	int	bytes
param	3:58	3:72	2	int	offset_add
stmnts	0:0	23:33	1	
decl	5:4	5:15	2	AVBPrint	bp
decl	6:4	6:24	2	int	offset
op	6:15	0:0	2	=
water	6:17	0:0	2	0
water	6:18	0:0	2	,
decl	6:4	6:24	2	int	l
water	6:21	0:0	2	,
decl	6:4	6:24	2	int	i
call	7:4	7:51	2	av_bprint_init
arg	7:19	7:22	3	&bp
op	7:19	0:0	4	&
water	7:20	0:0	4	bp
arg	7:24	7:25	3	0
water	7:24	0:0	4	0
arg	7:27	7:51	3	AV_BPRINT_SIZE_UNLIMITED
water	7:27	0:0	4	AV_BPRINT_SIZE_UNLIMITED
water	7:52	0:0	2	;
call	8:4	8:24	2	av_bprintf
arg	8:15	8:18	3	&bp
op	8:15	0:0	4	&
water	8:16	0:0	4	bp
arg	8:20	8:24	3	"\n"
water	8:20	0:0	4	"\n"
water	8:25	0:0	2	;
while	9:4	21:4	2	(size)
cond	9:11	9:11	3	size
water	9:11	0:0	4	size
stmts	9:17	21:4	3	
water	9:17	0:0	4	{
call	10:8	10:40	4	av_bprintf
arg	10:19	10:22	5	&bp
op	10:19	0:0	6	&
water	10:20	0:0	6	bp
arg	10:24	10:32	5	"%08x: "
water	10:24	0:0	6	"%08x: "
arg	10:34	10:40	5	offset
water	10:34	0:0	6	offset
water	10:41	0:0	4	;
water	11:8	0:0	4	l
op	11:10	0:0	4	=
call	11:12	11:31	4	FFMIN
arg	11:18	11:22	5	size
water	11:18	0:0	6	size
arg	11:24	11:31	5	columns
water	11:24	0:0	6	columns
water	11:32	0:0	4	;
for	12:8	18:8	4	(i = 0 ;i < l;i ++)
forinit	12:13	12:18	5	i = 0 ;
water	12:13	0:0	6	i
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	i < l
water	12:20	0:0	6	i
op	12:22	0:0	6	<
water	12:24	0:0	6	l
forexpr	12:27	12:28	5	i ++
water	12:27	0:0	6	i
op	12:28	0:0	6	++
stmts	12:32	18:8	5	
water	12:32	0:0	6	{
if	13:12	13:63	6	(bytes == 1)
cond	13:21	13:30	7	bytes == 1
water	13:21	0:0	8	bytes
op	13:27	0:0	8	==
water	13:30	0:0	8	1
stmts	13:33	13:63	7	
call	13:33	13:62	8	av_bprintf
arg	13:44	13:47	9	&bp
op	13:44	0:0	10	&
water	13:45	0:0	10	bp
arg	13:49	13:55	9	format
water	13:49	0:0	10	format
arg	13:57	13:62	9	*data
op	13:57	0:0	10	*
water	13:58	0:0	10	data
water	13:63	0:0	8	;
else	14:12	14:71	6
stmts	14:17	14:71	7	
if	14:17	14:71	8	(bytes == 2)
cond	14:21	14:30	9	bytes == 2
water	14:21	0:0	10	bytes
op	14:27	0:0	10	==
water	14:30	0:0	10	2
stmts	14:33	14:71	9	
call	14:33	14:70	10	av_bprintf
arg	14:44	14:47	11	&bp
op	14:44	0:0	12	&
water	14:45	0:0	12	bp
arg	14:49	14:55	11	format
water	14:49	0:0	12	format
arg	14:57	14:70	11	AV_RN16(data)
call	14:57	14:69	12	AV_RN16
arg	14:65	14:69	13	data
water	14:65	0:0	14	data
water	14:71	0:0	10	;
else	15:12	15:71	6
stmts	15:17	15:71	7	
if	15:17	15:71	8	(bytes == 4)
cond	15:21	15:30	9	bytes == 4
water	15:21	0:0	10	bytes
op	15:27	0:0	10	==
water	15:30	0:0	10	4
stmts	15:33	15:71	9	
call	15:33	15:70	10	av_bprintf
arg	15:44	15:47	11	&bp
op	15:44	0:0	12	&
water	15:45	0:0	12	bp
arg	15:49	15:55	11	format
water	15:49	0:0	12	format
arg	15:57	15:70	11	AV_RN32(data)
call	15:57	15:69	12	AV_RN32
arg	15:65	15:69	13	data
water	15:65	0:0	14	data
water	15:71	0:0	10	;
water	16:12	0:0	6	data
op	16:17	0:0	6	+=
water	16:20	0:0	6	bytes
water	16:25	0:0	6	;
water	17:12	0:0	6	size
op	17:17	0:0	6	--
water	17:19	0:0	6	;
water	18:8	0:0	6	}
call	19:8	19:28	4	av_bprintf
arg	19:19	19:22	5	&bp
op	19:19	0:0	6	&
water	19:20	0:0	6	bp
arg	19:24	19:28	5	"\n"
water	19:24	0:0	6	"\n"
water	19:29	0:0	4	;
water	20:8	0:0	4	offset
op	20:15	0:0	4	+=
water	20:18	0:0	4	offset_add
water	20:28	0:0	4	;
water	21:4	0:0	4	}
call	22:4	22:45	2	writer_print_string
arg	22:24	22:28	3	wctx
water	22:24	0:0	4	wctx
arg	22:30	22:34	3	name
water	22:30	0:0	4	name
arg	22:36	22:42	3	bp.str
water	22:36	0:0	4	bp
op	22:38	0:0	4	.
water	22:39	0:0	4	str
arg	22:44	22:45	3	0
water	22:44	0:0	4	0
water	22:46	0:0	2	;
call	23:4	23:32	2	av_bprint_finalize
arg	23:23	23:26	3	&bp
op	23:23	0:0	4	&
water	23:24	0:0	4	bp
arg	23:28	23:32	3	NULL
water	23:28	0:0	4	NULL
water	23:33	0:0	2	;

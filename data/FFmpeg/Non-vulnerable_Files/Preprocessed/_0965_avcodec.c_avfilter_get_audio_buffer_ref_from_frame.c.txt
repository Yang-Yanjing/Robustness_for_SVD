func	1:0	21:0	0	AVFilterBufferRef *	avfilter_get_audio_buffer_ref_from_frame
params	1:59	0:0	1	
param	1:60	1:80	2	const AVFrame *	frame
param	2:60	2:69	2	int	perms
stmnts	0:0	20:21	1	
decl	4:4	4:33	2	AVFilterBufferRef	*samplesref
decl	5:4	5:47	2	int	channels
op	5:17	0:0	2	=
call	5:19	5:46	3	av_frame_get_channels
arg	5:41	5:46	4	frame
water	5:41	0:0	5	frame
decl	6:4	6:55	2	int64_t	layout
op	6:19	0:0	2	=
call	6:21	6:54	3	av_frame_get_channel_layout
arg	6:49	6:54	4	frame
water	6:49	0:0	5	frame
if	7:4	10:4	2	(layout &&av_get_channel_layout_nb_channels (layout ) !=av_frame_get_channels (frame ))
cond	7:8	7:90	3	layout &&av_get_channel_layout_nb_channels (layout ) !=av_frame_get_channels (frame )
water	7:8	0:0	4	layout
op	7:15	0:0	4	&&
call	7:18	7:58	4	av_get_channel_layout_nb_channels
arg	7:52	7:58	5	layout
water	7:52	0:0	6	layout
op	7:60	0:0	4	!=
call	7:63	7:90	4	av_frame_get_channels
arg	7:85	7:90	5	frame
water	7:85	0:0	6	frame
stmts	7:93	10:4	3	
water	7:93	0:0	4	{
call	8:8	8:108	4	av_log
arg	8:15	8:19	5	NULL
water	8:15	0:0	6	NULL
arg	8:21	8:33	5	AV_LOG_ERROR
water	8:21	0:0	6	AV_LOG_ERROR
arg	8:35	8:108	5	"Layout indicates a different number of channels than actually present\n"
water	8:35	0:0	6	"Layout indicates a different number of channels than actually present\n"
water	8:109	0:0	4	;
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
water	10:4	0:0	4	}
water	11:4	0:0	2	samplesref
op	11:15	0:0	2	=
call	11:17	13:58	2	avfilter_get_audio_buffer_ref_from_arrays_channels
arg	12:8	12:40	3	(uint8_t**)frame->extended_data
water	12:8	0:0	4	(
water	12:9	0:0	4	uint8_t
op	12:17	0:0	4	*
op	12:18	0:0	4	*
water	12:19	0:0	4	)
water	12:20	0:0	4	frame
op	12:25	0:0	4	->
water	12:27	0:0	4	extended_data
arg	12:42	12:60	3	frame->linesize[0]
water	12:42	0:0	4	frame
op	12:47	0:0	4	->
water	12:49	0:0	4	linesize
op	12:57	0:0	4	[
water	12:58	0:0	4	0
op	12:59	0:0	4	]
arg	12:62	12:67	3	perms
water	12:62	0:0	4	perms
arg	13:8	13:25	3	frame->nb_samples
water	13:8	0:0	4	frame
op	13:13	0:0	4	->
water	13:15	0:0	4	nb_samples
arg	13:27	13:40	3	frame->format
water	13:27	0:0	4	frame
op	13:32	0:0	4	->
water	13:34	0:0	4	format
arg	13:42	13:50	3	channels
water	13:42	0:0	4	channels
arg	13:52	13:58	3	layout
water	13:52	0:0	4	layout
water	13:59	0:0	2	;
if	14:4	15:19	2	(! samplesref)
cond	14:8	14:9	3	! samplesref
op	14:8	0:0	4	!
water	14:9	0:0	4	samplesref
stmts	15:8	15:19	3	
return	15:8	15:19	4	NULL
water	15:15	0:0	5	NULL
if	16:4	19:4	2	(avfilter_copy_frame_props (samplesref ,frame ) < 0)
cond	16:8	16:55	3	avfilter_copy_frame_props (samplesref ,frame ) < 0
call	16:8	16:51	4	avfilter_copy_frame_props
arg	16:34	16:44	5	samplesref
water	16:34	0:0	6	samplesref
arg	16:46	16:51	5	frame
water	16:46	0:0	6	frame
op	16:53	0:0	4	<
water	16:55	0:0	4	0
stmts	16:58	19:4	3	
water	16:58	0:0	4	{
water	17:8	0:0	4	samplesref
op	17:18	0:0	4	->
water	17:20	0:0	4	buf
op	17:23	0:0	4	->
water	17:25	0:0	4	data
op	17:29	0:0	4	[
water	17:30	0:0	4	0
op	17:31	0:0	4	]
op	17:33	0:0	4	=
water	17:35	0:0	4	NULL
water	17:39	0:0	4	;
call	18:8	18:42	4	avfilter_unref_bufferp
arg	18:31	18:42	5	&samplesref
op	18:31	0:0	6	&
water	18:32	0:0	6	samplesref
water	18:43	0:0	4	;
water	19:4	0:0	4	}
return	20:4	20:21	2	samplesref
water	20:11	0:0	3	samplesref

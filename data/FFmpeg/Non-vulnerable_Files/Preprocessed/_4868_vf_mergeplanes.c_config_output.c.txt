func	1:0	93:0	0	static int	config_output
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	92:26	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:37	2	MergePlanesContext	*s
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:25	2	InputParam	inputsp[4]
decl	6:4	6:21	2	FFFrameSyncIn	*in
decl	7:4	7:14	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:14	2	int	ret
if	8:4	9:18	2	(( ret =ff_framesync_init (& s -> fs ,ctx ,s -> nb_inputs ) ) < 0)
cond	8:8	8:63	3	( ret =ff_framesync_init (& s -> fs ,ctx ,s -> nb_inputs ) ) < 0
water	8:8	0:0	4	(
water	8:9	0:0	4	ret
op	8:13	0:0	4	=
call	8:15	8:58	4	ff_framesync_init
arg	8:33	8:39	5	&s->fs
op	8:33	0:0	6	&
water	8:34	0:0	6	s
op	8:35	0:0	6	->
water	8:37	0:0	6	fs
arg	8:41	8:44	5	ctx
water	8:41	0:0	6	ctx
arg	8:46	8:58	5	s->nb_inputs
water	8:46	0:0	6	s
op	8:47	0:0	6	->
water	8:49	0:0	6	nb_inputs
water	8:59	0:0	4	)
op	8:61	0:0	4	<
water	8:63	0:0	4	0
stmts	9:8	9:18	3	
return	9:8	9:18	4	ret
water	9:15	0:0	5	ret
water	10:4	0:0	2	in
op	10:7	0:0	2	=
water	10:9	0:0	2	s
op	10:10	0:0	2	->
water	10:12	0:0	2	fs
op	10:14	0:0	2	.
water	10:15	0:0	2	in
water	10:17	0:0	2	;
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	fs
op	11:9	0:0	2	.
water	11:10	0:0	2	opaque
op	11:17	0:0	2	=
water	11:19	0:0	2	s
water	11:20	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	fs
op	12:9	0:0	2	.
water	12:10	0:0	2	on_event
op	12:19	0:0	2	=
water	12:21	0:0	2	process_frame
water	12:34	0:0	2	;
water	13:4	0:0	2	outlink
op	13:11	0:0	2	->
water	13:13	0:0	2	w
op	13:15	0:0	2	=
water	13:17	0:0	2	ctx
op	13:20	0:0	2	->
water	13:22	0:0	2	inputs
op	13:28	0:0	2	[
water	13:29	0:0	2	0
op	13:30	0:0	2	]
op	13:31	0:0	2	->
water	13:33	0:0	2	w
water	13:34	0:0	2	;
water	14:4	0:0	2	outlink
op	14:11	0:0	2	->
water	14:13	0:0	2	h
op	14:15	0:0	2	=
water	14:17	0:0	2	ctx
op	14:20	0:0	2	->
water	14:22	0:0	2	inputs
op	14:28	0:0	2	[
water	14:29	0:0	2	0
op	14:30	0:0	2	]
op	14:31	0:0	2	->
water	14:33	0:0	2	h
water	14:34	0:0	2	;
water	15:4	0:0	2	outlink
op	15:11	0:0	2	->
water	15:13	0:0	2	time_base
op	15:23	0:0	2	=
water	15:25	0:0	2	ctx
op	15:28	0:0	2	->
water	15:30	0:0	2	inputs
op	15:36	0:0	2	[
water	15:37	0:0	2	0
op	15:38	0:0	2	]
op	15:39	0:0	2	->
water	15:41	0:0	2	time_base
water	15:50	0:0	2	;
water	16:4	0:0	2	outlink
op	16:11	0:0	2	->
water	16:13	0:0	2	frame_rate
op	16:24	0:0	2	=
water	16:26	0:0	2	ctx
op	16:29	0:0	2	->
water	16:31	0:0	2	inputs
op	16:37	0:0	2	[
water	16:38	0:0	2	0
op	16:39	0:0	2	]
op	16:40	0:0	2	->
water	16:42	0:0	2	frame_rate
water	16:52	0:0	2	;
water	17:4	0:0	2	outlink
op	17:11	0:0	2	->
water	17:13	0:0	2	sample_aspect_ratio
op	17:33	0:0	2	=
water	17:35	0:0	2	ctx
op	17:38	0:0	2	->
water	17:40	0:0	2	inputs
op	17:46	0:0	2	[
water	17:47	0:0	2	0
op	17:48	0:0	2	]
op	17:49	0:0	2	->
water	17:51	0:0	2	sample_aspect_ratio
water	17:70	0:0	2	;
water	18:4	0:0	2	s
op	18:5	0:0	2	->
water	18:7	0:0	2	planewidth
op	18:17	0:0	2	[
water	18:18	0:0	2	1
op	18:19	0:0	2	]
op	18:22	0:0	2	=
water	19:4	0:0	2	s
op	19:5	0:0	2	->
water	19:7	0:0	2	planewidth
op	19:17	0:0	2	[
water	19:18	0:0	2	2
op	19:19	0:0	2	]
op	19:22	0:0	2	=
call	19:24	19:76	2	FF_CEIL_RSHIFT
arg	19:39	19:49	3	outlink->w
water	19:39	0:0	4	outlink
op	19:46	0:0	4	->
water	19:48	0:0	4	w
arg	19:51	19:76	3	s->outdesc->log2_chroma_w
water	19:51	0:0	4	s
op	19:52	0:0	4	->
water	19:54	0:0	4	outdesc
op	19:61	0:0	4	->
water	19:63	0:0	4	log2_chroma_w
water	19:77	0:0	2	;
water	20:4	0:0	2	s
op	20:5	0:0	2	->
water	20:7	0:0	2	planewidth
op	20:17	0:0	2	[
water	20:18	0:0	2	0
op	20:19	0:0	2	]
op	20:22	0:0	2	=
water	21:4	0:0	2	s
op	21:5	0:0	2	->
water	21:7	0:0	2	planewidth
op	21:17	0:0	2	[
water	21:18	0:0	2	3
op	21:19	0:0	2	]
op	21:22	0:0	2	=
water	21:24	0:0	2	outlink
op	21:31	0:0	2	->
water	21:33	0:0	2	w
water	21:34	0:0	2	;
water	22:4	0:0	2	s
op	22:5	0:0	2	->
water	22:7	0:0	2	planeheight
op	22:18	0:0	2	[
water	22:19	0:0	2	1
op	22:20	0:0	2	]
op	22:22	0:0	2	=
water	23:4	0:0	2	s
op	23:5	0:0	2	->
water	23:7	0:0	2	planeheight
op	23:18	0:0	2	[
water	23:19	0:0	2	2
op	23:20	0:0	2	]
op	23:22	0:0	2	=
call	23:24	23:76	2	FF_CEIL_RSHIFT
arg	23:39	23:49	3	outlink->h
water	23:39	0:0	4	outlink
op	23:46	0:0	4	->
water	23:48	0:0	4	h
arg	23:51	23:76	3	s->outdesc->log2_chroma_h
water	23:51	0:0	4	s
op	23:52	0:0	4	->
water	23:54	0:0	4	outdesc
op	23:61	0:0	4	->
water	23:63	0:0	4	log2_chroma_h
water	23:77	0:0	2	;
water	24:4	0:0	2	s
op	24:5	0:0	2	->
water	24:7	0:0	2	planeheight
op	24:18	0:0	2	[
water	24:19	0:0	2	0
op	24:20	0:0	2	]
op	24:22	0:0	2	=
water	25:4	0:0	2	s
op	25:5	0:0	2	->
water	25:7	0:0	2	planeheight
op	25:18	0:0	2	[
water	25:19	0:0	2	3
op	25:20	0:0	2	]
op	25:22	0:0	2	=
water	25:24	0:0	2	outlink
op	25:31	0:0	2	->
water	25:33	0:0	2	h
water	25:34	0:0	2	;
for	26:4	58:4	2	(i = 0 ;i < s -> nb_inputs;i ++)
forinit	26:9	26:14	3	i = 0 ;
water	26:9	0:0	4	i
op	26:11	0:0	4	=
water	26:13	0:0	4	0
water	26:14	0:0	4	;
cond	26:16	26:23	3	i < s -> nb_inputs
water	26:16	0:0	4	i
op	26:18	0:0	4	<
water	26:20	0:0	4	s
op	26:21	0:0	4	->
water	26:23	0:0	4	nb_inputs
forexpr	26:34	26:35	3	i ++
water	26:34	0:0	4	i
op	26:35	0:0	4	++
stmts	26:39	58:4	3	
water	26:39	0:0	4	{
decl	27:8	27:40	4	InputParam	*inputp
op	27:27	0:0	4	=
op	27:29	0:0	4	&
water	27:30	0:0	4	inputsp
op	27:37	0:0	4	[
water	27:38	0:0	4	i
op	27:39	0:0	4	]
decl	28:8	28:45	4	AVFilterLink	*inlink
op	28:29	0:0	4	=
water	28:31	0:0	4	ctx
op	28:34	0:0	4	->
water	28:36	0:0	4	inputs
op	28:42	0:0	4	[
water	28:43	0:0	4	i
op	28:44	0:0	4	]
decl	29:8	29:78	4	const AVPixFmtDescriptor	*indesc
op	29:41	0:0	4	=
call	29:43	29:77	5	av_pix_fmt_desc_get
arg	29:63	29:77	6	inlink->format
water	29:63	0:0	7	inlink
op	29:69	0:0	7	->
water	29:71	0:0	7	format
decl	30:8	30:13	4	int	j
if	31:8	42:8	4	(outlink -> sample_aspect_ratio . num != inlink -> sample_aspect_ratio . num || outlink -> sample_aspect_ratio . den != inlink -> sample_aspect_ratio . den)
cond	31:12	32:76	5	outlink -> sample_aspect_ratio . num != inlink -> sample_aspect_ratio . num || outlink -> sample_aspect_ratio . den != inlink -> sample_aspect_ratio . den
water	31:12	0:0	6	outlink
op	31:19	0:0	6	->
water	31:21	0:0	6	sample_aspect_ratio
op	31:40	0:0	6	.
water	31:41	0:0	6	num
op	31:45	0:0	6	!=
water	31:48	0:0	6	inlink
op	31:54	0:0	6	->
water	31:56	0:0	6	sample_aspect_ratio
op	31:75	0:0	6	.
water	31:76	0:0	6	num
op	31:80	0:0	6	||
water	32:12	0:0	6	outlink
op	32:19	0:0	6	->
water	32:21	0:0	6	sample_aspect_ratio
op	32:40	0:0	6	.
water	32:41	0:0	6	den
op	32:45	0:0	6	!=
water	32:48	0:0	6	inlink
op	32:54	0:0	6	->
water	32:56	0:0	6	sample_aspect_ratio
op	32:75	0:0	6	.
water	32:76	0:0	6	den
stmts	32:81	42:8	5	
water	32:81	0:0	6	{
call	33:12	40:70	6	av_log
arg	33:19	33:22	7	ctx
water	33:19	0:0	8	ctx
arg	33:24	33:36	7	AV_LOG_ERROR
water	33:24	0:0	8	AV_LOG_ERROR
arg	33:38	34:81	7	"input #%d link %s SAR %d:%d ""does not match output link %s SAR %d:%d\n"
water	33:38	0:0	8	"input #%d link %s SAR %d:%d "
water	34:38	0:0	8	"does not match output link %s SAR %d:%d\n"
arg	35:38	35:39	7	i
water	35:38	0:0	8	i
arg	35:41	35:64	7	ctx->input_pads[i].name
water	35:41	0:0	8	ctx
op	35:44	0:0	8	->
water	35:46	0:0	8	input_pads
op	35:56	0:0	8	[
water	35:57	0:0	8	i
op	35:58	0:0	8	]
op	35:59	0:0	8	.
water	35:60	0:0	8	name
arg	36:38	36:69	7	inlink->sample_aspect_ratio.num
water	36:38	0:0	8	inlink
op	36:44	0:0	8	->
water	36:46	0:0	8	sample_aspect_ratio
op	36:65	0:0	8	.
water	36:66	0:0	8	num
arg	37:38	37:69	7	inlink->sample_aspect_ratio.den
water	37:38	0:0	8	inlink
op	37:44	0:0	8	->
water	37:46	0:0	8	sample_aspect_ratio
op	37:65	0:0	8	.
water	37:66	0:0	8	den
arg	38:38	38:62	7	ctx->output_pads[0].name
water	38:38	0:0	8	ctx
op	38:41	0:0	8	->
water	38:43	0:0	8	output_pads
op	38:54	0:0	8	[
water	38:55	0:0	8	0
op	38:56	0:0	8	]
op	38:57	0:0	8	.
water	38:58	0:0	8	name
arg	39:38	39:70	7	outlink->sample_aspect_ratio.num
water	39:38	0:0	8	outlink
op	39:45	0:0	8	->
water	39:47	0:0	8	sample_aspect_ratio
op	39:66	0:0	8	.
water	39:67	0:0	8	num
arg	40:38	40:70	7	outlink->sample_aspect_ratio.den
water	40:38	0:0	8	outlink
op	40:45	0:0	8	->
water	40:47	0:0	8	sample_aspect_ratio
op	40:66	0:0	8	.
water	40:67	0:0	8	den
water	40:71	0:0	6	;
return	41:12	41:34	6	AVERROR(EINVAL)
call	41:19	41:33	7	AVERROR
arg	41:27	41:33	8	EINVAL
water	41:27	0:0	9	EINVAL
water	42:8	0:0	6	}
water	43:8	0:0	4	inputp
op	43:14	0:0	4	->
water	43:16	0:0	4	planewidth
op	43:26	0:0	4	[
water	43:27	0:0	4	1
op	43:28	0:0	4	]
op	43:31	0:0	4	=
water	44:8	0:0	4	inputp
op	44:14	0:0	4	->
water	44:16	0:0	4	planewidth
op	44:26	0:0	4	[
water	44:27	0:0	4	2
op	44:28	0:0	4	]
op	44:31	0:0	4	=
call	44:33	44:80	4	FF_CEIL_RSHIFT
arg	44:48	44:57	5	inlink->w
water	44:48	0:0	6	inlink
op	44:54	0:0	6	->
water	44:56	0:0	6	w
arg	44:59	44:80	5	indesc->log2_chroma_w
water	44:59	0:0	6	indesc
op	44:65	0:0	6	->
water	44:67	0:0	6	log2_chroma_w
water	44:81	0:0	4	;
water	45:8	0:0	4	inputp
op	45:14	0:0	4	->
water	45:16	0:0	4	planewidth
op	45:26	0:0	4	[
water	45:27	0:0	4	0
op	45:28	0:0	4	]
op	45:31	0:0	4	=
water	46:8	0:0	4	inputp
op	46:14	0:0	4	->
water	46:16	0:0	4	planewidth
op	46:26	0:0	4	[
water	46:27	0:0	4	3
op	46:28	0:0	4	]
op	46:31	0:0	4	=
water	46:33	0:0	4	inlink
op	46:39	0:0	4	->
water	46:41	0:0	4	w
water	46:42	0:0	4	;
water	47:8	0:0	4	inputp
op	47:14	0:0	4	->
water	47:16	0:0	4	planeheight
op	47:27	0:0	4	[
water	47:28	0:0	4	1
op	47:29	0:0	4	]
op	47:31	0:0	4	=
water	48:8	0:0	4	inputp
op	48:14	0:0	4	->
water	48:16	0:0	4	planeheight
op	48:27	0:0	4	[
water	48:28	0:0	4	2
op	48:29	0:0	4	]
op	48:31	0:0	4	=
call	48:33	48:80	4	FF_CEIL_RSHIFT
arg	48:48	48:57	5	inlink->h
water	48:48	0:0	6	inlink
op	48:54	0:0	6	->
water	48:56	0:0	6	h
arg	48:59	48:80	5	indesc->log2_chroma_h
water	48:59	0:0	6	indesc
op	48:65	0:0	6	->
water	48:67	0:0	6	log2_chroma_h
water	48:81	0:0	4	;
water	49:8	0:0	4	inputp
op	49:14	0:0	4	->
water	49:16	0:0	4	planeheight
op	49:27	0:0	4	[
water	49:28	0:0	4	0
op	49:29	0:0	4	]
op	49:31	0:0	4	=
water	50:8	0:0	4	inputp
op	50:14	0:0	4	->
water	50:16	0:0	4	planeheight
op	50:27	0:0	4	[
water	50:28	0:0	4	3
op	50:29	0:0	4	]
op	50:31	0:0	4	=
water	50:33	0:0	4	inlink
op	50:39	0:0	4	->
water	50:41	0:0	4	h
water	50:42	0:0	4	;
water	51:8	0:0	4	inputp
op	51:14	0:0	4	->
water	51:16	0:0	4	nb_planes
op	51:26	0:0	4	=
call	51:28	51:66	4	av_pix_fmt_count_planes
arg	51:52	51:66	5	inlink->format
water	51:52	0:0	6	inlink
op	51:58	0:0	6	->
water	51:60	0:0	6	format
water	51:67	0:0	4	;
for	52:8	53:63	4	(j = 0 ;j < inputp -> nb_planes;j ++)
forinit	52:13	52:18	5	j = 0 ;
water	52:13	0:0	6	j
op	52:15	0:0	6	=
water	52:17	0:0	6	0
water	52:18	0:0	6	;
cond	52:20	52:32	5	j < inputp -> nb_planes
water	52:20	0:0	6	j
op	52:22	0:0	6	<
water	52:24	0:0	6	inputp
op	52:30	0:0	6	->
water	52:32	0:0	6	nb_planes
forexpr	52:43	52:44	5	j ++
water	52:43	0:0	6	j
op	52:44	0:0	6	++
stmts	53:12	53:63	5	
water	53:12	0:0	6	inputp
op	53:18	0:0	6	->
water	53:20	0:0	6	depth
op	53:25	0:0	6	[
water	53:26	0:0	6	j
op	53:27	0:0	6	]
op	53:29	0:0	6	=
water	53:31	0:0	6	indesc
op	53:37	0:0	6	->
water	53:39	0:0	6	comp
op	53:43	0:0	6	[
water	53:44	0:0	6	j
op	53:45	0:0	6	]
op	53:46	0:0	6	.
water	53:47	0:0	6	depth_minus1
op	53:60	0:0	6	+
water	53:62	0:0	6	1
water	53:63	0:0	6	;
water	54:8	0:0	4	in
op	54:10	0:0	4	[
water	54:11	0:0	4	i
op	54:12	0:0	4	]
op	54:13	0:0	4	.
water	54:14	0:0	4	time_base
op	54:24	0:0	4	=
water	54:26	0:0	4	inlink
op	54:32	0:0	4	->
water	54:34	0:0	4	time_base
water	54:43	0:0	4	;
water	55:8	0:0	4	in
op	55:10	0:0	4	[
water	55:11	0:0	4	i
op	55:12	0:0	4	]
op	55:13	0:0	4	.
water	55:14	0:0	4	sync
op	55:21	0:0	4	=
water	55:23	0:0	4	1
water	55:24	0:0	4	;
water	56:8	0:0	4	in
op	56:10	0:0	4	[
water	56:11	0:0	4	i
op	56:12	0:0	4	]
op	56:13	0:0	4	.
water	56:14	0:0	4	before
op	56:21	0:0	4	=
water	56:23	0:0	4	EXT_STOP
water	56:31	0:0	4	;
water	57:8	0:0	4	in
op	57:10	0:0	4	[
water	57:11	0:0	4	i
op	57:12	0:0	4	]
op	57:13	0:0	4	.
water	57:14	0:0	4	after
op	57:21	0:0	4	=
water	57:23	0:0	4	EXT_STOP
water	57:31	0:0	4	;
water	58:4	0:0	4	}
for	59:4	89:4	2	(i = 0 ;i < s -> nb_planes;i ++)
forinit	59:9	59:14	3	i = 0 ;
water	59:9	0:0	4	i
op	59:11	0:0	4	=
water	59:13	0:0	4	0
water	59:14	0:0	4	;
cond	59:16	59:23	3	i < s -> nb_planes
water	59:16	0:0	4	i
op	59:18	0:0	4	<
water	59:20	0:0	4	s
op	59:21	0:0	4	->
water	59:23	0:0	4	nb_planes
forexpr	59:34	59:35	3	i ++
water	59:34	0:0	4	i
op	59:35	0:0	4	++
stmts	59:39	89:4	3	
water	59:39	0:0	4	{
decl	60:8	60:38	4	const int	input
op	60:24	0:0	4	=
water	60:26	0:0	4	s
op	60:27	0:0	4	->
water	60:29	0:0	4	map
op	60:32	0:0	4	[
water	60:33	0:0	4	i
op	60:34	0:0	4	]
op	60:35	0:0	4	[
water	60:36	0:0	4	1
op	60:37	0:0	4	]
decl	61:8	61:38	4	const int	plane
op	61:24	0:0	4	=
water	61:26	0:0	4	s
op	61:27	0:0	4	->
water	61:29	0:0	4	map
op	61:32	0:0	4	[
water	61:33	0:0	4	i
op	61:34	0:0	4	]
op	61:35	0:0	4	[
water	61:36	0:0	4	0
op	61:37	0:0	4	]
decl	62:8	62:44	4	InputParam	*inputp
op	62:27	0:0	4	=
op	62:29	0:0	4	&
water	62:30	0:0	4	inputsp
op	62:37	0:0	4	[
water	62:38	0:0	4	input
op	62:43	0:0	4	]
if	63:8	67:8	4	(plane + 1 > inputp -> nb_planes)
cond	63:12	63:32	5	plane + 1 > inputp -> nb_planes
water	63:12	0:0	6	plane
op	63:18	0:0	6	+
water	63:20	0:0	6	1
op	63:22	0:0	6	>
water	63:24	0:0	6	inputp
op	63:30	0:0	6	->
water	63:32	0:0	6	nb_planes
stmts	63:43	67:8	5	
water	63:43	0:0	6	{
call	64:12	65:50	6	av_log
arg	64:19	64:22	7	ctx
water	64:19	0:0	8	ctx
arg	64:24	64:36	7	AV_LOG_ERROR
water	64:24	0:0	8	AV_LOG_ERROR
arg	64:38	64:73	7	"input %d does not have %d plane\n"
water	64:38	0:0	8	"input %d does not have %d plane\n"
arg	65:38	65:43	7	input
water	65:38	0:0	8	input
arg	65:45	65:50	7	plane
water	65:45	0:0	8	plane
water	65:51	0:0	6	;
goto	66:12	66:21	6	fail
water	66:17	0:0	7	fail
water	67:8	0:0	6	}
if	68:8	74:8	4	(s -> outdesc -> comp [ i ] . depth_minus1 + 1 != inputp -> depth [ plane ])
cond	68:12	68:71	5	s -> outdesc -> comp [ i ] . depth_minus1 + 1 != inputp -> depth [ plane ]
water	68:12	0:0	6	s
op	68:13	0:0	6	->
water	68:15	0:0	6	outdesc
op	68:22	0:0	6	->
water	68:24	0:0	6	comp
op	68:28	0:0	6	[
water	68:29	0:0	6	i
op	68:30	0:0	6	]
op	68:31	0:0	6	.
water	68:32	0:0	6	depth_minus1
op	68:45	0:0	6	+
water	68:47	0:0	6	1
op	68:49	0:0	6	!=
water	68:52	0:0	6	inputp
op	68:58	0:0	6	->
water	68:60	0:0	6	depth
op	68:65	0:0	6	[
water	68:66	0:0	6	plane
op	68:71	0:0	6	]
stmts	68:74	74:8	5	
water	68:74	0:0	6	{
call	69:12	72:72	6	av_log
arg	69:19	69:22	7	ctx
water	69:19	0:0	8	ctx
arg	69:24	69:36	7	AV_LOG_ERROR
water	69:24	0:0	8	AV_LOG_ERROR
arg	69:38	70:74	7	"output plane %d depth %d does not ""match input %d plane %d depth %d\n"
water	69:38	0:0	8	"output plane %d depth %d does not "
water	70:38	0:0	8	"match input %d plane %d depth %d\n"
arg	71:38	71:39	7	i
water	71:38	0:0	8	i
arg	71:41	71:77	7	s->outdesc->comp[i].depth_minus1+1
water	71:41	0:0	8	s
op	71:42	0:0	8	->
water	71:44	0:0	8	outdesc
op	71:51	0:0	8	->
water	71:53	0:0	8	comp
op	71:57	0:0	8	[
water	71:58	0:0	8	i
op	71:59	0:0	8	]
op	71:60	0:0	8	.
water	71:61	0:0	8	depth_minus1
op	71:74	0:0	8	+
water	71:76	0:0	8	1
arg	72:38	72:43	7	input
water	72:38	0:0	8	input
arg	72:45	72:50	7	plane
water	72:45	0:0	8	plane
arg	72:52	72:72	7	inputp->depth[plane]
water	72:52	0:0	8	inputp
op	72:58	0:0	8	->
water	72:60	0:0	8	depth
op	72:65	0:0	8	[
water	72:66	0:0	8	plane
op	72:71	0:0	8	]
water	72:73	0:0	6	;
goto	73:12	73:21	6	fail
water	73:17	0:0	7	fail
water	74:8	0:0	6	}
if	75:8	81:8	4	(s -> planewidth [ i ] != inputp -> planewidth [ plane ])
cond	75:12	75:56	5	s -> planewidth [ i ] != inputp -> planewidth [ plane ]
water	75:12	0:0	6	s
op	75:13	0:0	6	->
water	75:15	0:0	6	planewidth
op	75:25	0:0	6	[
water	75:26	0:0	6	i
op	75:27	0:0	6	]
op	75:29	0:0	6	!=
water	75:32	0:0	6	inputp
op	75:38	0:0	6	->
water	75:40	0:0	6	planewidth
op	75:50	0:0	6	[
water	75:51	0:0	6	plane
op	75:56	0:0	6	]
stmts	75:59	81:8	5	
water	75:59	0:0	6	{
call	76:12	79:77	6	av_log
arg	76:19	76:22	7	ctx
water	76:19	0:0	8	ctx
arg	76:24	76:36	7	AV_LOG_ERROR
water	76:24	0:0	8	AV_LOG_ERROR
arg	76:38	77:74	7	"output plane %d width %d does not ""match input %d plane %d width %d\n"
water	76:38	0:0	8	"output plane %d width %d does not "
water	77:38	0:0	8	"match input %d plane %d width %d\n"
arg	78:38	78:39	7	i
water	78:38	0:0	8	i
arg	78:41	78:57	7	s->planewidth[i]
water	78:41	0:0	8	s
op	78:42	0:0	8	->
water	78:44	0:0	8	planewidth
op	78:54	0:0	8	[
water	78:55	0:0	8	i
op	78:56	0:0	8	]
arg	79:38	79:43	7	input
water	79:38	0:0	8	input
arg	79:45	79:50	7	plane
water	79:45	0:0	8	plane
arg	79:52	79:77	7	inputp->planewidth[plane]
water	79:52	0:0	8	inputp
op	79:58	0:0	8	->
water	79:60	0:0	8	planewidth
op	79:70	0:0	8	[
water	79:71	0:0	8	plane
op	79:76	0:0	8	]
water	79:78	0:0	6	;
goto	80:12	80:21	6	fail
water	80:17	0:0	7	fail
water	81:8	0:0	6	}
if	82:8	88:8	4	(s -> planeheight [ i ] != inputp -> planeheight [ plane ])
cond	82:12	82:58	5	s -> planeheight [ i ] != inputp -> planeheight [ plane ]
water	82:12	0:0	6	s
op	82:13	0:0	6	->
water	82:15	0:0	6	planeheight
op	82:26	0:0	6	[
water	82:27	0:0	6	i
op	82:28	0:0	6	]
op	82:30	0:0	6	!=
water	82:33	0:0	6	inputp
op	82:39	0:0	6	->
water	82:41	0:0	6	planeheight
op	82:52	0:0	6	[
water	82:53	0:0	6	plane
op	82:58	0:0	6	]
stmts	82:61	88:8	5	
water	82:61	0:0	6	{
call	83:12	86:78	6	av_log
arg	83:19	83:22	7	ctx
water	83:19	0:0	8	ctx
arg	83:24	83:36	7	AV_LOG_ERROR
water	83:24	0:0	8	AV_LOG_ERROR
arg	83:38	84:75	7	"output plane %d height %d does not ""match input %d plane %d height %d\n"
water	83:38	0:0	8	"output plane %d height %d does not "
water	84:38	0:0	8	"match input %d plane %d height %d\n"
arg	85:38	85:39	7	i
water	85:38	0:0	8	i
arg	85:41	85:58	7	s->planeheight[i]
water	85:41	0:0	8	s
op	85:42	0:0	8	->
water	85:44	0:0	8	planeheight
op	85:55	0:0	8	[
water	85:56	0:0	8	i
op	85:57	0:0	8	]
arg	86:38	86:43	7	input
water	86:38	0:0	8	input
arg	86:45	86:50	7	plane
water	86:45	0:0	8	plane
arg	86:52	86:78	7	inputp->planeheight[plane]
water	86:52	0:0	8	inputp
op	86:58	0:0	8	->
water	86:60	0:0	8	planeheight
op	86:71	0:0	8	[
water	86:72	0:0	8	plane
op	86:77	0:0	8	]
water	86:79	0:0	6	;
goto	87:12	87:21	6	fail
water	87:17	0:0	7	fail
water	88:8	0:0	6	}
water	89:4	0:0	4	}
return	90:4	90:41	2	ff_framesync_configure(&s->fs)
call	90:11	90:40	3	ff_framesync_configure
arg	90:34	90:40	4	&s->fs
op	90:34	0:0	5	&
water	90:35	0:0	5	s
op	90:36	0:0	5	->
water	90:38	0:0	5	fs
label	91:0	91:4	2	fail :
return	92:4	92:26	2	AVERROR(EINVAL)
call	92:11	92:25	3	AVERROR
arg	92:19	92:25	4	EINVAL
water	92:19	0:0	5	EINVAL

func	1:0	59:0	0	static int	generate_intervals
params	1:29	0:0	1	
param	1:30	1:39	2	void *	log
param	1:41	1:61	2	struct sbg_script *	s
param	1:63	1:78	2	int	sample_rate
param	2:30	2:56	2	struct ws_intervals *	inter
stmnts	0:0	58:12	1	
decl	4:4	4:45	2	int64_t	trans_time
op	4:23	0:0	2	=
water	4:25	0:0	2	s
op	4:26	0:0	2	->
water	4:28	0:0	2	opt_fade_time
op	4:42	0:0	2	/
water	4:44	0:0	2	2
decl	5:4	5:43	2	struct sbg_script_event	ev0
water	5:31	0:0	2	,
decl	5:4	5:43	2	struct sbg_script_event	*ev1
water	5:37	0:0	2	,
decl	5:4	5:43	2	struct sbg_script_event	*ev2
decl	6:4	6:18	2	int64_t	period
decl	7:4	7:12	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:12	2	int	r
water	11:4	0:0	2	period
op	11:11	0:0	2	=
water	11:13	0:0	2	s
op	11:14	0:0	2	->
water	11:16	0:0	2	events
op	11:22	0:0	2	[
water	11:23	0:0	2	s
op	11:24	0:0	2	->
water	11:26	0:0	2	nb_events
op	11:36	0:0	2	-
water	11:38	0:0	2	1
op	11:39	0:0	2	]
op	11:40	0:0	2	.
water	11:41	0:0	2	ts
op	11:44	0:0	2	-
water	11:46	0:0	2	s
op	11:47	0:0	2	->
water	11:49	0:0	2	events
op	11:55	0:0	2	[
water	11:56	0:0	2	0
op	11:57	0:0	2	]
op	11:58	0:0	2	.
water	11:59	0:0	2	ts
water	11:61	0:0	2	;
water	12:4	0:0	2	period
op	12:11	0:0	2	=
water	12:13	0:0	2	(
water	12:14	0:0	2	period
op	12:21	0:0	2	+
water	12:23	0:0	2	(
water	12:24	0:0	2	DAY_TS
op	12:31	0:0	2	-
water	12:33	0:0	2	1
water	12:34	0:0	2	)
water	12:35	0:0	2	)
op	12:37	0:0	2	/
water	12:39	0:0	2	DAY_TS
op	12:46	0:0	2	*
water	12:48	0:0	2	DAY_TS
water	12:54	0:0	2	;
water	13:4	0:0	2	period
op	13:11	0:0	2	=
call	13:13	13:33	2	FFMAX
arg	13:19	13:25	3	period
water	13:19	0:0	4	period
arg	13:27	13:33	3	DAY_TS
water	13:27	0:0	4	DAY_TS
water	13:34	0:0	2	;
for	15:4	21:4	2	(i = 0 ;i < s -> nb_events;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:23	3	i < s -> nb_events
water	15:16	0:0	4	i
op	15:18	0:0	4	<
water	15:20	0:0	4	s
op	15:21	0:0	4	->
water	15:23	0:0	4	nb_events
forexpr	15:34	15:35	3	i ++
water	15:34	0:0	4	i
op	15:35	0:0	4	++
stmts	15:39	21:4	3	
water	15:39	0:0	4	{
water	16:8	0:0	4	ev1
op	16:12	0:0	4	=
op	16:14	0:0	4	&
water	16:15	0:0	4	s
op	16:16	0:0	4	->
water	16:18	0:0	4	events
op	16:24	0:0	4	[
water	16:25	0:0	4	i
op	16:26	0:0	4	]
water	16:27	0:0	4	;
water	17:8	0:0	4	ev2
op	17:12	0:0	4	=
op	17:14	0:0	4	&
water	17:15	0:0	4	s
op	17:16	0:0	4	->
water	17:18	0:0	4	events
op	17:24	0:0	4	[
water	17:25	0:0	4	(
water	17:26	0:0	4	i
op	17:28	0:0	4	+
water	17:30	0:0	4	1
water	17:31	0:0	4	)
op	17:33	0:0	4	%
water	17:35	0:0	4	s
op	17:36	0:0	4	->
water	17:38	0:0	4	nb_events
op	17:47	0:0	4	]
water	17:48	0:0	4	;
water	18:8	0:0	4	ev1
op	18:11	0:0	4	->
water	18:13	0:0	4	ts_int
op	18:22	0:0	4	=
water	18:24	0:0	4	ev1
op	18:27	0:0	4	->
water	18:29	0:0	4	ts
water	18:31	0:0	4	;
water	19:8	0:0	4	ev1
op	19:11	0:0	4	->
water	19:13	0:0	4	ts_trans
op	19:22	0:0	4	=
water	19:24	0:0	4	ev1
op	19:27	0:0	4	->
water	19:29	0:0	4	fade
op	19:33	0:0	4	.
water	19:34	0:0	4	slide
water	19:40	0:0	4	?
water	19:42	0:0	4	ev1
op	19:45	0:0	4	->
water	19:47	0:0	4	ts
water	20:40	0:0	4	:
water	20:42	0:0	4	ev2
op	20:45	0:0	4	->
water	20:47	0:0	4	ts
op	20:50	0:0	4	+
water	20:52	0:0	4	(
water	20:53	0:0	4	ev1
op	20:57	0:0	4	<
water	20:59	0:0	4	ev2
water	20:63	0:0	4	?
water	20:65	0:0	4	0
water	20:67	0:0	4	:
water	20:69	0:0	4	period
water	20:75	0:0	4	)
water	20:76	0:0	4	;
water	21:4	0:0	4	}
for	22:4	30:4	2	(i = 0 ;i < s -> nb_events;i ++)
forinit	22:9	22:14	3	i = 0 ;
water	22:9	0:0	4	i
op	22:11	0:0	4	=
water	22:13	0:0	4	0
water	22:14	0:0	4	;
cond	22:16	22:23	3	i < s -> nb_events
water	22:16	0:0	4	i
op	22:18	0:0	4	<
water	22:20	0:0	4	s
op	22:21	0:0	4	->
water	22:23	0:0	4	nb_events
forexpr	22:34	22:35	3	i ++
water	22:34	0:0	4	i
op	22:35	0:0	4	++
stmts	22:39	30:4	3	
water	22:39	0:0	4	{
water	23:8	0:0	4	ev1
op	23:12	0:0	4	=
op	23:14	0:0	4	&
water	23:15	0:0	4	s
op	23:16	0:0	4	->
water	23:18	0:0	4	events
op	23:24	0:0	4	[
water	23:25	0:0	4	i
op	23:26	0:0	4	]
water	23:27	0:0	4	;
water	24:8	0:0	4	ev2
op	24:12	0:0	4	=
op	24:14	0:0	4	&
water	24:15	0:0	4	s
op	24:16	0:0	4	->
water	24:18	0:0	4	events
op	24:24	0:0	4	[
water	24:25	0:0	4	(
water	24:26	0:0	4	i
op	24:28	0:0	4	+
water	24:30	0:0	4	1
water	24:31	0:0	4	)
op	24:33	0:0	4	%
water	24:35	0:0	4	s
op	24:36	0:0	4	->
water	24:38	0:0	4	nb_events
op	24:47	0:0	4	]
water	24:48	0:0	4	;
if	25:8	28:8	4	(! ev1 -> fade . slide)
cond	25:12	25:23	5	! ev1 -> fade . slide
op	25:12	0:0	6	!
water	25:13	0:0	6	ev1
op	25:16	0:0	6	->
water	25:18	0:0	6	fade
op	25:22	0:0	6	.
water	25:23	0:0	6	slide
stmts	25:30	28:8	5	
water	25:30	0:0	6	{
water	26:12	0:0	6	ev1
op	26:15	0:0	6	->
water	26:17	0:0	6	ts_trans
op	26:26	0:0	6	=
call	26:28	26:75	6	FFMAX
arg	26:34	26:45	7	ev1->ts_int
water	26:34	0:0	8	ev1
op	26:37	0:0	8	->
water	26:39	0:0	8	ts_int
arg	26:49	26:75	7	ev1->ts_trans-trans_time
water	26:49	0:0	8	ev1
op	26:52	0:0	8	->
water	26:54	0:0	8	ts_trans
op	26:63	0:0	8	-
water	26:65	0:0	8	trans_time
water	26:76	0:0	6	;
water	27:12	0:0	6	ev2
op	27:15	0:0	6	->
water	27:17	0:0	6	ts_int
op	27:26	0:0	6	=
call	27:28	27:75	6	FFMIN
arg	27:34	27:47	7	ev2->ts_trans
water	27:34	0:0	8	ev2
op	27:37	0:0	8	->
water	27:39	0:0	8	ts_trans
arg	27:49	27:75	7	ev2->ts_int+trans_time
water	27:49	0:0	8	ev2
op	27:52	0:0	8	->
water	27:54	0:0	8	ts_int
op	27:63	0:0	8	+
water	27:65	0:0	8	trans_time
water	27:76	0:0	6	;
water	28:8	0:0	6	}
water	29:8	0:0	4	ev1
op	29:11	0:0	4	->
water	29:13	0:0	4	ts_next
op	29:22	0:0	4	=
water	29:24	0:0	4	ev2
op	29:27	0:0	4	->
water	29:29	0:0	4	ts_int
op	29:36	0:0	4	+
water	29:38	0:0	4	(
water	29:39	0:0	4	ev1
op	29:43	0:0	4	<
water	29:45	0:0	4	ev2
water	29:49	0:0	4	?
water	29:51	0:0	4	0
water	29:53	0:0	4	:
water	29:55	0:0	4	period
water	29:61	0:0	4	)
water	29:62	0:0	4	;
water	30:4	0:0	4	}
water	32:4	0:0	2	ev0
op	32:8	0:0	2	=
water	32:10	0:0	2	s
op	32:11	0:0	2	->
water	32:13	0:0	2	events
op	32:19	0:0	2	[
water	32:20	0:0	2	s
op	32:21	0:0	2	->
water	32:23	0:0	2	nb_events
op	32:33	0:0	2	-
water	32:35	0:0	2	1
op	32:36	0:0	2	]
water	32:37	0:0	2	;
water	33:4	0:0	2	ev0
op	33:7	0:0	2	.
water	33:8	0:0	2	ts_int
op	33:17	0:0	2	-=
water	33:20	0:0	2	period
water	33:26	0:0	2	;
water	34:4	0:0	2	ev0
op	34:7	0:0	2	.
water	34:8	0:0	2	ts_trans
op	34:17	0:0	2	-=
water	34:20	0:0	2	period
water	34:26	0:0	2	;
water	35:4	0:0	2	ev0
op	35:7	0:0	2	.
water	35:8	0:0	2	ts_next
op	35:17	0:0	2	-=
water	35:20	0:0	2	period
water	35:26	0:0	2	;
for	37:4	42:4	2	(i = - 1 ;i < s -> nb_events;i ++)
forinit	37:9	37:15	3	i = - 1 ;
water	37:9	0:0	4	i
op	37:11	0:0	4	=
op	37:13	0:0	4	-
water	37:14	0:0	4	1
water	37:15	0:0	4	;
cond	37:17	37:24	3	i < s -> nb_events
water	37:17	0:0	4	i
op	37:19	0:0	4	<
water	37:21	0:0	4	s
op	37:22	0:0	4	->
water	37:24	0:0	4	nb_events
forexpr	37:35	37:36	3	i ++
water	37:35	0:0	4	i
op	37:36	0:0	4	++
stmts	37:40	42:4	3	
water	37:40	0:0	4	{
water	38:8	0:0	4	ev1
op	38:12	0:0	4	=
water	38:14	0:0	4	i
op	38:16	0:0	4	<
water	38:18	0:0	4	0
water	38:20	0:0	4	?
op	38:22	0:0	4	&
water	38:23	0:0	4	ev0
water	38:27	0:0	4	:
op	38:29	0:0	4	&
water	38:30	0:0	4	s
op	38:31	0:0	4	->
water	38:33	0:0	4	events
op	38:39	0:0	4	[
water	38:40	0:0	4	i
op	38:41	0:0	4	]
water	38:42	0:0	4	;
water	39:8	0:0	4	ev1
op	39:11	0:0	4	->
water	39:13	0:0	4	ts_int
op	39:22	0:0	4	=
call	39:24	39:75	4	av_rescale
arg	39:35	39:46	5	ev1->ts_int
water	39:35	0:0	6	ev1
op	39:38	0:0	6	->
water	39:40	0:0	6	ts_int
arg	39:50	39:61	5	sample_rate
water	39:50	0:0	6	sample_rate
arg	39:63	39:75	5	AV_TIME_BASE
water	39:63	0:0	6	AV_TIME_BASE
water	39:76	0:0	4	;
water	40:8	0:0	4	ev1
op	40:11	0:0	4	->
water	40:13	0:0	4	ts_trans
op	40:22	0:0	4	=
call	40:24	40:75	4	av_rescale
arg	40:35	40:48	5	ev1->ts_trans
water	40:35	0:0	6	ev1
op	40:38	0:0	6	->
water	40:40	0:0	6	ts_trans
arg	40:50	40:61	5	sample_rate
water	40:50	0:0	6	sample_rate
arg	40:63	40:75	5	AV_TIME_BASE
water	40:63	0:0	6	AV_TIME_BASE
water	40:76	0:0	4	;
water	41:8	0:0	4	ev1
op	41:11	0:0	4	->
water	41:13	0:0	4	ts_next
op	41:22	0:0	4	=
call	41:24	41:75	4	av_rescale
arg	41:35	41:47	5	ev1->ts_next
water	41:35	0:0	6	ev1
op	41:38	0:0	6	->
water	41:40	0:0	6	ts_next
arg	41:50	41:61	5	sample_rate
water	41:50	0:0	6	sample_rate
arg	41:63	41:75	5	AV_TIME_BASE
water	41:63	0:0	6	AV_TIME_BASE
water	41:76	0:0	4	;
water	42:4	0:0	4	}
for	44:4	45:50	2	(i = 0 ;i < s -> nb_synth;i ++)
forinit	44:9	44:14	3	i = 0 ;
water	44:9	0:0	4	i
op	44:11	0:0	4	=
water	44:13	0:0	4	0
water	44:14	0:0	4	;
cond	44:16	44:23	3	i < s -> nb_synth
water	44:16	0:0	4	i
op	44:18	0:0	4	<
water	44:20	0:0	4	s
op	44:21	0:0	4	->
water	44:23	0:0	4	nb_synth
forexpr	44:33	44:34	3	i ++
water	44:33	0:0	4	i
op	44:34	0:0	4	++
stmts	45:8	45:50	3	
water	45:8	0:0	4	s
op	45:9	0:0	4	->
water	45:11	0:0	4	synth
op	45:16	0:0	4	[
water	45:17	0:0	4	i
op	45:18	0:0	4	]
op	45:19	0:0	4	.
water	45:20	0:0	4	ref
op	45:23	0:0	4	.
water	45:24	0:0	4	l
op	45:26	0:0	4	=
water	45:28	0:0	4	s
op	45:29	0:0	4	->
water	45:31	0:0	4	synth
op	45:36	0:0	4	[
water	45:37	0:0	4	i
op	45:38	0:0	4	]
op	45:39	0:0	4	.
water	45:40	0:0	4	ref
op	45:43	0:0	4	.
water	45:44	0:0	4	r
op	45:46	0:0	4	=
op	45:48	0:0	4	-
water	45:49	0:0	4	1
water	45:50	0:0	4	;
for	46:4	55:4	2	(i = - 1 ;i < s -> nb_events;i ++)
forinit	46:9	46:15	3	i = - 1 ;
water	46:9	0:0	4	i
op	46:11	0:0	4	=
op	46:13	0:0	4	-
water	46:14	0:0	4	1
water	46:15	0:0	4	;
cond	46:17	46:24	3	i < s -> nb_events
water	46:17	0:0	4	i
op	46:19	0:0	4	<
water	46:21	0:0	4	s
op	46:22	0:0	4	->
water	46:24	0:0	4	nb_events
forexpr	46:35	46:36	3	i ++
water	46:35	0:0	4	i
op	46:36	0:0	4	++
stmts	46:40	55:4	3	
water	46:40	0:0	4	{
water	47:8	0:0	4	ev1
op	47:12	0:0	4	=
water	47:14	0:0	4	i
op	47:16	0:0	4	<
water	47:18	0:0	4	0
water	47:20	0:0	4	?
op	47:22	0:0	4	&
water	47:23	0:0	4	ev0
water	47:27	0:0	4	:
op	47:29	0:0	4	&
water	47:30	0:0	4	s
op	47:31	0:0	4	->
water	47:33	0:0	4	events
op	47:39	0:0	4	[
water	47:40	0:0	4	i
op	47:41	0:0	4	]
water	47:42	0:0	4	;
water	48:8	0:0	4	ev2
op	48:12	0:0	4	=
op	48:14	0:0	4	&
water	48:15	0:0	4	s
op	48:16	0:0	4	->
water	48:18	0:0	4	events
op	48:24	0:0	4	[
water	48:25	0:0	4	(
water	48:26	0:0	4	i
op	48:28	0:0	4	+
water	48:30	0:0	4	1
water	48:31	0:0	4	)
op	48:33	0:0	4	%
water	48:35	0:0	4	s
op	48:36	0:0	4	->
water	48:38	0:0	4	nb_events
op	48:47	0:0	4	]
water	48:48	0:0	4	;
water	49:8	0:0	4	r
op	49:10	0:0	4	=
call	49:12	49:47	4	generate_plateau
arg	49:29	49:32	5	log
water	49:29	0:0	6	log
arg	49:34	49:35	5	s
water	49:34	0:0	6	s
arg	49:37	49:42	5	inter
water	49:37	0:0	6	inter
arg	49:44	49:47	5	ev1
water	49:44	0:0	6	ev1
water	49:48	0:0	4	;
if	50:8	51:20	4	(r < 0)
cond	50:12	50:16	5	r < 0
water	50:12	0:0	6	r
op	50:14	0:0	6	<
water	50:16	0:0	6	0
stmts	51:12	51:20	5	
return	51:12	51:20	6	r
water	51:19	0:0	7	r
water	52:8	0:0	4	r
op	52:10	0:0	4	=
call	52:12	52:55	4	generate_transition
arg	52:32	52:35	5	log
water	52:32	0:0	6	log
arg	52:37	52:38	5	s
water	52:37	0:0	6	s
arg	52:40	52:45	5	inter
water	52:40	0:0	6	inter
arg	52:47	52:50	5	ev1
water	52:47	0:0	6	ev1
arg	52:52	52:55	5	ev2
water	52:52	0:0	6	ev2
water	52:56	0:0	4	;
if	53:8	54:20	4	(r < 0)
cond	53:12	53:16	5	r < 0
water	53:12	0:0	6	r
op	53:14	0:0	6	<
water	53:16	0:0	6	0
stmts	54:12	54:20	5	
return	54:12	54:20	6	r
water	54:19	0:0	7	r
water	55:4	0:0	4	}
if	56:4	57:66	2	(! inter -> nb_inter)
cond	56:8	56:16	3	! inter -> nb_inter
op	56:8	0:0	4	!
water	56:9	0:0	4	inter
op	56:14	0:0	4	->
water	56:16	0:0	4	nb_inter
stmts	57:8	57:66	3	
call	57:8	57:65	4	av_log
arg	57:15	57:18	5	log
water	57:15	0:0	6	log
arg	57:20	57:34	5	AV_LOG_WARNING
water	57:20	0:0	6	AV_LOG_WARNING
arg	57:36	57:65	5	"Completely silent script.\n"
water	57:36	0:0	6	"Completely silent script.\n"
water	57:66	0:0	4	;
return	58:4	58:12	2	0
water	58:11	0:0	3	0

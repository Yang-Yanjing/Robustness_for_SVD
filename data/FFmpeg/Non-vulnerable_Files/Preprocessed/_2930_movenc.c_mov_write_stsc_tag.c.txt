func	1:0	25:0	0	static int	mov_write_stsc_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	24:31	1	
decl	3:4	3:33	2	int	index
op	3:14	0:0	2	=
water	3:16	0:0	2	0
water	3:17	0:0	2	,
decl	3:4	3:33	2	int	oldval
op	3:26	0:0	2	=
op	3:28	0:0	2	-
water	3:29	0:0	2	1
water	3:30	0:0	2	,
decl	3:4	3:33	2	int	i
decl	4:4	4:28	2	int64_t	entryPos
water	4:20	0:0	2	,
decl	4:4	4:28	2	int64_t	curpos
decl	5:4	5:31	2	int64_t	pos
op	5:16	0:0	2	=
call	5:18	5:30	3	avio_tell
arg	5:28	5:30	4	pb
water	5:28	0:0	5	pb
call	6:4	6:19	2	avio_wb32
arg	6:14	6:16	3	pb
water	6:14	0:0	4	pb
arg	6:18	6:19	3	0
water	6:18	0:0	4	0
water	6:20	0:0	2	;
call	7:4	7:27	2	ffio_wfourcc
arg	7:17	7:19	3	pb
water	7:17	0:0	4	pb
arg	7:21	7:27	3	"stsc"
water	7:21	0:0	4	"stsc"
water	7:28	0:0	2	;
call	8:4	8:19	2	avio_wb32
arg	8:14	8:16	3	pb
water	8:14	0:0	4	pb
arg	8:18	8:19	3	0
water	8:18	0:0	4	0
water	8:20	0:0	2	;
water	9:4	0:0	2	entryPos
op	9:13	0:0	2	=
call	9:15	9:27	2	avio_tell
arg	9:25	9:27	3	pb
water	9:25	0:0	4	pb
water	9:28	0:0	2	;
call	10:4	10:35	2	avio_wb32
arg	10:14	10:16	3	pb
water	10:14	0:0	4	pb
arg	10:18	10:35	3	track->chunkCount
water	10:18	0:0	4	track
op	10:23	0:0	4	->
water	10:25	0:0	4	chunkCount
water	10:36	0:0	2	;
for	11:4	19:4	2	(i = 0 ;i < track -> entry;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:27	3	i < track -> entry
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	track
op	11:25	0:0	4	->
water	11:27	0:0	4	entry
forexpr	11:34	11:35	3	i ++
water	11:34	0:0	4	i
op	11:35	0:0	4	++
stmts	11:39	19:4	3	
water	11:39	0:0	4	{
if	12:8	18:8	4	(oldval != track -> cluster [ i ] . samples_in_chunk && track -> cluster [ i ] . chunkNum)
cond	12:12	12:78	5	oldval != track -> cluster [ i ] . samples_in_chunk && track -> cluster [ i ] . chunkNum
water	12:12	0:0	6	oldval
op	12:19	0:0	6	!=
water	12:22	0:0	6	track
op	12:27	0:0	6	->
water	12:29	0:0	6	cluster
op	12:36	0:0	6	[
water	12:37	0:0	6	i
op	12:38	0:0	6	]
op	12:39	0:0	6	.
water	12:40	0:0	6	samples_in_chunk
op	12:57	0:0	6	&&
water	12:60	0:0	6	track
op	12:65	0:0	6	->
water	12:67	0:0	6	cluster
op	12:74	0:0	6	[
water	12:75	0:0	6	i
op	12:76	0:0	6	]
op	12:77	0:0	6	.
water	12:78	0:0	6	chunkNum
stmts	12:88	18:8	5	
water	12:88	0:0	6	{
call	13:12	13:52	6	avio_wb32
arg	13:22	13:24	7	pb
water	13:22	0:0	8	pb
arg	13:26	13:52	7	track->cluster[i].chunkNum
water	13:26	0:0	8	track
op	13:31	0:0	8	->
water	13:33	0:0	8	cluster
op	13:40	0:0	8	[
water	13:41	0:0	8	i
op	13:42	0:0	8	]
op	13:43	0:0	8	.
water	13:44	0:0	8	chunkNum
water	13:53	0:0	6	;
call	14:12	14:60	6	avio_wb32
arg	14:22	14:24	7	pb
water	14:22	0:0	8	pb
arg	14:26	14:60	7	track->cluster[i].samples_in_chunk
water	14:26	0:0	8	track
op	14:31	0:0	8	->
water	14:33	0:0	8	cluster
op	14:40	0:0	8	[
water	14:41	0:0	8	i
op	14:42	0:0	8	]
op	14:43	0:0	8	.
water	14:44	0:0	8	samples_in_chunk
water	14:61	0:0	6	;
call	15:12	15:29	6	avio_wb32
arg	15:22	15:24	7	pb
water	15:22	0:0	8	pb
arg	15:26	15:29	7	0x1
water	15:26	0:0	8	0
water	15:27	0:0	8	x1
water	15:30	0:0	6	;
water	16:12	0:0	6	oldval
op	16:19	0:0	6	=
water	16:21	0:0	6	track
op	16:26	0:0	6	->
water	16:28	0:0	6	cluster
op	16:35	0:0	6	[
water	16:36	0:0	6	i
op	16:37	0:0	6	]
op	16:38	0:0	6	.
water	16:39	0:0	6	samples_in_chunk
water	16:55	0:0	6	;
water	17:12	0:0	6	index
op	17:17	0:0	6	++
water	17:19	0:0	6	;
water	18:8	0:0	6	}
water	19:4	0:0	4	}
water	20:4	0:0	2	curpos
op	20:11	0:0	2	=
call	20:13	20:25	2	avio_tell
arg	20:23	20:25	3	pb
water	20:23	0:0	4	pb
water	20:26	0:0	2	;
call	21:4	21:36	2	avio_seek
arg	21:14	21:16	3	pb
water	21:14	0:0	4	pb
arg	21:18	21:26	3	entryPos
water	21:18	0:0	4	entryPos
arg	21:28	21:36	3	SEEK_SET
water	21:28	0:0	4	SEEK_SET
water	21:37	0:0	2	;
call	22:4	22:23	2	avio_wb32
arg	22:14	22:16	3	pb
water	22:14	0:0	4	pb
arg	22:18	22:23	3	index
water	22:18	0:0	4	index
water	22:24	0:0	2	;
call	23:4	23:34	2	avio_seek
arg	23:14	23:16	3	pb
water	23:14	0:0	4	pb
arg	23:18	23:24	3	curpos
water	23:18	0:0	4	curpos
arg	23:26	23:34	3	SEEK_SET
water	23:26	0:0	4	SEEK_SET
water	23:35	0:0	2	;
return	24:4	24:31	2	update_size(pb,pos)
call	24:11	24:30	3	update_size
arg	24:23	24:25	4	pb
water	24:23	0:0	5	pb
arg	24:27	24:30	4	pos
water	24:27	0:0	5	pos

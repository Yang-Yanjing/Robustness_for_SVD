func	1:0	50:0	0	static int	vdpau_alloc
params	1:22	0:0	1	
param	1:23	1:40	2	AVCodecContext *	s
stmnts	0:0	49:26	1	
decl	3:4	3:33	2	InputStream	*ist
op	3:22	0:0	2	=
water	3:24	0:0	2	s
op	3:25	0:0	2	->
water	3:27	0:0	2	opaque
decl	4:4	4:84	2	int	loglevel
op	4:17	0:0	2	=
water	4:19	0:0	2	(
water	4:20	0:0	2	ist
op	4:23	0:0	2	->
water	4:25	0:0	2	hwaccel_id
op	4:36	0:0	2	==
water	4:39	0:0	2	HWACCEL_AUTO
water	4:51	0:0	2	)
water	4:53	0:0	2	?
water	4:55	0:0	2	AV_LOG_VERBOSE
water	4:70	0:0	2	:
water	4:72	0:0	2	AV_LOG_ERROR
decl	5:4	5:21	2	VDPAUContext	*ctx
decl	6:4	6:11	2	int	ret
decl	7:4	7:43	2	AVBufferRef	*device_ref
op	7:37	0:0	2	=
water	7:39	0:0	2	NULL
decl	8:4	8:36	2	AVHWDeviceContext	*device_ctx
decl	9:4	9:38	2	AVVDPAUDeviceContext	*device_hwctx
decl	10:4	10:36	2	AVHWFramesContext	*frames_ctx
water	11:4	0:0	2	ctx
op	11:8	0:0	2	=
call	11:10	11:33	2	av_mallocz
arg	11:21	11:33	3	sizeof(*ctx)
op	11:21	0:0	4	sizeof
water	11:27	0:0	4	(
op	11:28	0:0	4	*
water	11:29	0:0	4	ctx
water	11:32	0:0	4	)
water	11:34	0:0	2	;
if	12:4	13:30	2	(! ctx)
cond	12:8	12:9	3	! ctx
op	12:8	0:0	4	!
water	12:9	0:0	4	ctx
stmts	13:8	13:30	3	
return	13:8	13:30	4	AVERROR(ENOMEM)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	ENOMEM
water	13:23	0:0	7	ENOMEM
water	14:4	0:0	2	ist
op	14:7	0:0	2	->
water	14:9	0:0	2	hwaccel_ctx
op	14:31	0:0	2	=
water	14:33	0:0	2	ctx
water	14:36	0:0	2	;
water	15:4	0:0	2	ist
op	15:7	0:0	2	->
water	15:9	0:0	2	hwaccel_uninit
op	15:31	0:0	2	=
water	15:33	0:0	2	vdpau_uninit
water	15:45	0:0	2	;
water	16:4	0:0	2	ist
op	16:7	0:0	2	->
water	16:9	0:0	2	hwaccel_get_buffer
op	16:31	0:0	2	=
water	16:33	0:0	2	vdpau_get_buffer
water	16:49	0:0	2	;
water	17:4	0:0	2	ist
op	17:7	0:0	2	->
water	17:9	0:0	2	hwaccel_retrieve_data
op	17:31	0:0	2	=
water	17:33	0:0	2	vdpau_retrieve_data
water	17:52	0:0	2	;
water	18:4	0:0	2	ctx
op	18:7	0:0	2	->
water	18:9	0:0	2	tmp_frame
op	18:19	0:0	2	=
call	18:21	18:36	2	av_frame_alloc
water	18:37	0:0	2	;
if	19:4	20:17	2	(! ctx -> tmp_frame)
cond	19:8	19:14	3	! ctx -> tmp_frame
op	19:8	0:0	4	!
water	19:9	0:0	4	ctx
op	19:12	0:0	4	->
water	19:14	0:0	4	tmp_frame
stmts	20:8	20:17	3	
goto	20:8	20:17	4	fail
water	20:13	0:0	5	fail
water	21:4	0:0	2	ret
op	21:8	0:0	2	=
call	21:10	22:61	2	av_hwdevice_ctx_create
arg	21:33	21:44	3	&device_ref
op	21:33	0:0	4	&
water	21:34	0:0	4	device_ref
arg	21:46	21:68	3	AV_HWDEVICE_TYPE_VDPAU
water	21:46	0:0	4	AV_HWDEVICE_TYPE_VDPAU
arg	22:33	22:52	3	ist->hwaccel_device
water	22:33	0:0	4	ist
op	22:36	0:0	4	->
water	22:38	0:0	4	hwaccel_device
arg	22:54	22:58	3	NULL
water	22:54	0:0	4	NULL
arg	22:60	22:61	3	0
water	22:60	0:0	4	0
water	22:62	0:0	2	;
if	23:4	24:17	2	(ret < 0)
cond	23:8	23:14	3	ret < 0
water	23:8	0:0	4	ret
op	23:12	0:0	4	<
water	23:14	0:0	4	0
stmts	24:8	24:17	3	
goto	24:8	24:17	4	fail
water	24:13	0:0	5	fail
water	25:4	0:0	2	device_ctx
op	25:17	0:0	2	=
water	25:19	0:0	2	(
water	25:20	0:0	2	AVHWDeviceContext
op	25:37	0:0	2	*
water	25:38	0:0	2	)
water	25:39	0:0	2	device_ref
op	25:49	0:0	2	->
water	25:51	0:0	2	data
water	25:55	0:0	2	;
water	26:4	0:0	2	device_hwctx
op	26:17	0:0	2	=
water	26:19	0:0	2	device_ctx
op	26:29	0:0	2	->
water	26:31	0:0	2	hwctx
water	26:36	0:0	2	;
water	27:4	0:0	2	ctx
op	27:7	0:0	2	->
water	27:9	0:0	2	hw_frames_ctx
op	27:23	0:0	2	=
call	27:25	27:56	2	av_hwframe_ctx_alloc
arg	27:46	27:56	3	device_ref
water	27:46	0:0	4	device_ref
water	27:57	0:0	2	;
if	28:4	29:17	2	(! ctx -> hw_frames_ctx)
cond	28:8	28:14	3	! ctx -> hw_frames_ctx
op	28:8	0:0	4	!
water	28:9	0:0	4	ctx
op	28:12	0:0	4	->
water	28:14	0:0	4	hw_frames_ctx
stmts	29:8	29:17	3	
goto	29:8	29:17	4	fail
water	29:13	0:0	5	fail
call	30:4	30:31	2	av_buffer_unref
arg	30:20	30:31	3	&device_ref
op	30:20	0:0	4	&
water	30:21	0:0	4	device_ref
water	30:32	0:0	2	;
water	31:4	0:0	2	frames_ctx
op	31:26	0:0	2	=
water	31:28	0:0	2	(
water	31:29	0:0	2	AVHWFramesContext
op	31:46	0:0	2	*
water	31:47	0:0	2	)
water	31:48	0:0	2	ctx
op	31:51	0:0	2	->
water	31:53	0:0	2	hw_frames_ctx
op	31:66	0:0	2	->
water	31:68	0:0	2	data
water	31:72	0:0	2	;
water	32:4	0:0	2	frames_ctx
op	32:14	0:0	2	->
water	32:16	0:0	2	format
op	32:26	0:0	2	=
water	32:28	0:0	2	AV_PIX_FMT_VDPAU
water	32:44	0:0	2	;
water	33:4	0:0	2	frames_ctx
op	33:14	0:0	2	->
water	33:16	0:0	2	sw_format
op	33:26	0:0	2	=
water	33:28	0:0	2	s
op	33:29	0:0	2	->
water	33:31	0:0	2	sw_pix_fmt
water	33:41	0:0	2	;
water	34:4	0:0	2	frames_ctx
op	34:14	0:0	2	->
water	34:16	0:0	2	width
op	34:26	0:0	2	=
water	34:28	0:0	2	s
op	34:29	0:0	2	->
water	34:31	0:0	2	coded_width
water	34:42	0:0	2	;
water	35:4	0:0	2	frames_ctx
op	35:14	0:0	2	->
water	35:16	0:0	2	height
op	35:26	0:0	2	=
water	35:28	0:0	2	s
op	35:29	0:0	2	->
water	35:31	0:0	2	coded_height
water	35:43	0:0	2	;
water	36:4	0:0	2	ret
op	36:8	0:0	2	=
call	36:10	36:48	2	av_hwframe_ctx_init
arg	36:30	36:48	3	ctx->hw_frames_ctx
water	36:30	0:0	4	ctx
op	36:33	0:0	4	->
water	36:35	0:0	4	hw_frames_ctx
water	36:49	0:0	2	;
if	37:4	38:17	2	(ret < 0)
cond	37:8	37:14	3	ret < 0
water	37:8	0:0	4	ret
op	37:12	0:0	4	<
water	37:14	0:0	4	0
stmts	38:8	38:17	3	
goto	38:8	38:17	4	fail
water	38:13	0:0	5	fail
if	39:4	40:17	2	(av_vdpau_bind_context (s ,device_hwctx -> device ,device_hwctx -> get_proc_address ,0 ))
cond	39:8	39:88	3	av_vdpau_bind_context (s ,device_hwctx -> device ,device_hwctx -> get_proc_address ,0 )
call	39:8	39:88	4	av_vdpau_bind_context
arg	39:30	39:31	5	s
water	39:30	0:0	6	s
arg	39:33	39:53	5	device_hwctx->device
water	39:33	0:0	6	device_hwctx
op	39:45	0:0	6	->
water	39:47	0:0	6	device
arg	39:55	39:85	5	device_hwctx->get_proc_address
water	39:55	0:0	6	device_hwctx
op	39:67	0:0	6	->
water	39:69	0:0	6	get_proc_address
arg	39:87	39:88	5	0
water	39:87	0:0	6	0
stmts	40:8	40:17	3	
goto	40:8	40:17	4	fail
water	40:13	0:0	5	fail
call	41:4	42:42	2	av_log
arg	41:11	41:15	3	NULL
water	41:11	0:0	4	NULL
arg	41:17	41:31	3	AV_LOG_VERBOSE
water	41:17	0:0	4	AV_LOG_VERBOSE
arg	41:33	41:79	3	"Using VDPAU to decode input stream #%d:%d.\n"
water	41:33	0:0	4	"Using VDPAU to decode input stream #%d:%d.\n"
arg	42:11	42:26	3	ist->file_index
water	42:11	0:0	4	ist
op	42:14	0:0	4	->
water	42:16	0:0	4	file_index
arg	42:28	42:42	3	ist->st->index
water	42:28	0:0	4	ist
op	42:31	0:0	4	->
water	42:33	0:0	4	st
op	42:35	0:0	4	->
water	42:37	0:0	4	index
water	42:43	0:0	2	;
return	43:4	43:12	2	0
water	43:11	0:0	3	0
label	44:0	44:4	2	fail :
call	45:4	46:42	2	av_log
arg	45:11	45:15	3	NULL
water	45:11	0:0	4	NULL
arg	45:17	45:25	3	loglevel
water	45:17	0:0	4	loglevel
arg	45:27	45:67	3	"VDPAU init failed for stream #%d:%d.\n"
water	45:27	0:0	4	"VDPAU init failed for stream #%d:%d.\n"
arg	46:11	46:26	3	ist->file_index
water	46:11	0:0	4	ist
op	46:14	0:0	4	->
water	46:16	0:0	4	file_index
arg	46:28	46:42	3	ist->st->index
water	46:28	0:0	4	ist
op	46:31	0:0	4	->
water	46:33	0:0	4	st
op	46:35	0:0	4	->
water	46:37	0:0	4	index
water	46:43	0:0	2	;
call	47:4	47:31	2	av_buffer_unref
arg	47:20	47:31	3	&device_ref
op	47:20	0:0	4	&
water	47:21	0:0	4	device_ref
water	47:32	0:0	2	;
call	48:4	48:18	2	vdpau_uninit
arg	48:17	48:18	3	s
water	48:17	0:0	4	s
water	48:19	0:0	2	;
return	49:4	49:26	2	AVERROR(EINVAL)
call	49:11	49:25	3	AVERROR
arg	49:19	49:25	4	EINVAL
water	49:19	0:0	5	EINVAL

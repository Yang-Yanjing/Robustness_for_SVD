func	1:0	19:0	0	static void	copy_input_samples
params	1:30	0:0	1	
param	1:31	1:47	2	AACEncContext *	s
param	1:49	1:69	2	const AVFrame *	frame
stmnts	0:0	18:4	1	
decl	3:4	3:10	2	int	ch
decl	4:4	4:52	2	int	end
op	4:12	0:0	2	=
water	4:14	0:0	2	2048
op	4:19	0:0	2	+
water	4:21	0:0	2	(
water	4:22	0:0	2	frame
water	4:28	0:0	2	?
water	4:30	0:0	2	frame
op	4:35	0:0	2	->
water	4:37	0:0	2	nb_samples
water	4:48	0:0	2	:
water	4:50	0:0	2	0
water	4:51	0:0	2	)
decl	5:4	5:63	2	const uint8_t	*channel_map
op	5:31	0:0	2	=
water	5:33	0:0	2	aac_chan_maps
op	5:46	0:0	2	[
water	5:47	0:0	2	s
op	5:48	0:0	2	->
water	5:50	0:0	2	channels
op	5:59	0:0	2	-
water	5:61	0:0	2	1
op	5:62	0:0	2	]
for	7:4	18:4	2	(ch = 0 ;ch < s -> channels;ch ++)
forinit	7:9	7:15	3	ch = 0 ;
water	7:9	0:0	4	ch
op	7:12	0:0	4	=
water	7:14	0:0	4	0
water	7:15	0:0	4	;
cond	7:17	7:25	3	ch < s -> channels
water	7:17	0:0	4	ch
op	7:20	0:0	4	<
water	7:22	0:0	4	s
op	7:23	0:0	4	->
water	7:25	0:0	4	channels
forexpr	7:35	7:37	3	ch ++
water	7:35	0:0	4	ch
op	7:37	0:0	4	++
stmts	7:41	18:4	3	
water	7:41	0:0	4	{
call	9:8	9:113	4	memcpy
arg	9:15	9:43	5	&s->planar_samples[ch][1024]
op	9:15	0:0	6	&
water	9:16	0:0	6	s
op	9:17	0:0	6	->
water	9:19	0:0	6	planar_samples
op	9:33	0:0	6	[
water	9:34	0:0	6	ch
op	9:36	0:0	6	]
op	9:37	0:0	6	[
water	9:38	0:0	6	1024
op	9:42	0:0	6	]
arg	9:45	9:73	5	&s->planar_samples[ch][2048]
op	9:45	0:0	6	&
water	9:46	0:0	6	s
op	9:47	0:0	6	->
water	9:49	0:0	6	planar_samples
op	9:63	0:0	6	[
water	9:64	0:0	6	ch
op	9:66	0:0	6	]
op	9:67	0:0	6	[
water	9:68	0:0	6	2048
op	9:72	0:0	6	]
arg	9:75	9:113	5	1024*sizeof(s->planar_samples[0][0])
water	9:75	0:0	6	1024
op	9:80	0:0	6	*
op	9:82	0:0	6	sizeof
water	9:88	0:0	6	(
water	9:89	0:0	6	s
op	9:90	0:0	6	->
water	9:92	0:0	6	planar_samples
op	9:106	0:0	6	[
water	9:107	0:0	6	0
op	9:108	0:0	6	]
op	9:109	0:0	6	[
water	9:110	0:0	6	0
op	9:111	0:0	6	]
water	9:112	0:0	6	)
water	9:114	0:0	4	;
if	11:8	15:8	4	(frame)
cond	11:12	11:12	5	frame
water	11:12	0:0	6	frame
stmts	11:19	15:8	5	
water	11:19	0:0	6	{
call	12:12	14:70	6	memcpy
arg	12:19	12:47	7	&s->planar_samples[ch][2048]
op	12:19	0:0	8	&
water	12:20	0:0	8	s
op	12:21	0:0	8	->
water	12:23	0:0	8	planar_samples
op	12:37	0:0	8	[
water	12:38	0:0	8	ch
op	12:40	0:0	8	]
op	12:41	0:0	8	[
water	12:42	0:0	8	2048
op	12:46	0:0	8	]
arg	13:19	13:56	7	frame->extended_data[channel_map[ch]]
water	13:19	0:0	8	frame
op	13:24	0:0	8	->
water	13:26	0:0	8	extended_data
op	13:39	0:0	8	[
water	13:40	0:0	8	channel_map
op	13:51	0:0	8	[
water	13:52	0:0	8	ch
op	13:54	0:0	8	]
op	13:55	0:0	8	]
arg	14:19	14:70	7	frame->nb_samples*sizeof(s->planar_samples[0][0])
water	14:19	0:0	8	frame
op	14:24	0:0	8	->
water	14:26	0:0	8	nb_samples
op	14:37	0:0	8	*
op	14:39	0:0	8	sizeof
water	14:45	0:0	8	(
water	14:46	0:0	8	s
op	14:47	0:0	8	->
water	14:49	0:0	8	planar_samples
op	14:63	0:0	8	[
water	14:64	0:0	8	0
op	14:65	0:0	8	]
op	14:66	0:0	8	[
water	14:67	0:0	8	0
op	14:68	0:0	8	]
water	14:69	0:0	8	)
water	14:71	0:0	6	;
water	15:8	0:0	6	}
call	16:8	17:61	4	memset
arg	16:15	16:42	5	&s->planar_samples[ch][end]
op	16:15	0:0	6	&
water	16:16	0:0	6	s
op	16:17	0:0	6	->
water	16:19	0:0	6	planar_samples
op	16:33	0:0	6	[
water	16:34	0:0	6	ch
op	16:36	0:0	6	]
op	16:37	0:0	6	[
water	16:38	0:0	6	end
op	16:41	0:0	6	]
arg	16:44	16:45	5	0
water	16:44	0:0	6	0
arg	17:15	17:61	5	(3072-end)*sizeof(s->planar_samples[0][0])
water	17:15	0:0	6	(
water	17:16	0:0	6	3072
op	17:21	0:0	6	-
water	17:23	0:0	6	end
water	17:26	0:0	6	)
op	17:28	0:0	6	*
op	17:30	0:0	6	sizeof
water	17:36	0:0	6	(
water	17:37	0:0	6	s
op	17:38	0:0	6	->
water	17:40	0:0	6	planar_samples
op	17:54	0:0	6	[
water	17:55	0:0	6	0
op	17:56	0:0	6	]
op	17:57	0:0	6	[
water	17:58	0:0	6	0
op	17:59	0:0	6	]
water	17:60	0:0	6	)
water	17:62	0:0	4	;
water	18:4	0:0	4	}

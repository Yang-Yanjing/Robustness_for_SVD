func	1:0	19:0	0	static int	count_exponent_bits
params	1:30	0:0	1	
param	1:31	1:50	2	AC3EncodeContext *	s
stmnts	0:0	18:20	1	
decl	3:4	3:15	2	int	blk
water	3:11	0:0	2	,
decl	3:4	3:15	2	int	ch
decl	4:4	4:28	2	int	nb_groups
water	4:17	0:0	2	,
decl	4:4	4:28	2	int	bit_count
water	5:4	0:0	2	bit_count
op	5:14	0:0	2	=
water	5:16	0:0	2	0
water	5:17	0:0	2	;
for	6:4	17:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	6:9	6:16	3	blk = 0 ;
water	6:9	0:0	4	blk
op	6:13	0:0	4	=
water	6:15	0:0	4	0
water	6:16	0:0	4	;
cond	6:18	6:27	3	blk < s -> num_blocks
water	6:18	0:0	4	blk
op	6:22	0:0	4	<
water	6:24	0:0	4	s
op	6:25	0:0	4	->
water	6:27	0:0	4	num_blocks
forexpr	6:39	6:42	3	blk ++
water	6:39	0:0	4	blk
op	6:42	0:0	4	++
stmts	6:46	17:4	3	
water	6:46	0:0	4	{
decl	7:8	7:41	4	AC3Block	*block
op	7:24	0:0	4	=
op	7:26	0:0	4	&
water	7:27	0:0	4	s
op	7:28	0:0	4	->
water	7:30	0:0	4	blocks
op	7:36	0:0	4	[
water	7:37	0:0	4	blk
op	7:40	0:0	4	]
for	8:8	16:8	4	(ch = ! block -> cpl_in_use ;ch <= s -> channels;ch ++)
forinit	8:13	8:36	5	ch = ! block -> cpl_in_use ;
water	8:13	0:0	6	ch
op	8:16	0:0	6	=
op	8:18	0:0	6	!
water	8:19	0:0	6	block
op	8:24	0:0	6	->
water	8:26	0:0	6	cpl_in_use
water	8:36	0:0	6	;
cond	8:38	8:47	5	ch <= s -> channels
water	8:38	0:0	6	ch
op	8:41	0:0	6	<=
water	8:44	0:0	6	s
op	8:45	0:0	6	->
water	8:47	0:0	6	channels
forexpr	8:57	8:59	5	ch ++
water	8:57	0:0	6	ch
op	8:59	0:0	6	++
stmts	8:63	16:8	5	
water	8:63	0:0	6	{
decl	9:12	9:55	6	int	exp_strategy
op	9:29	0:0	6	=
water	9:31	0:0	6	s
op	9:32	0:0	6	->
water	9:34	0:0	6	exp_strategy
op	9:46	0:0	6	[
water	9:47	0:0	6	ch
op	9:49	0:0	6	]
op	9:50	0:0	6	[
water	9:51	0:0	6	blk
op	9:54	0:0	6	]
decl	10:12	10:45	6	int	cpl
op	10:29	0:0	6	=
water	10:31	0:0	6	(
water	10:32	0:0	6	ch
op	10:35	0:0	6	==
water	10:38	0:0	6	CPL_CH
water	10:44	0:0	6	)
decl	11:12	11:70	6	int	nb_coefs
op	11:29	0:0	6	=
water	11:31	0:0	6	block
op	11:36	0:0	6	->
water	11:38	0:0	6	end_freq
op	11:46	0:0	6	[
water	11:47	0:0	6	ch
op	11:49	0:0	6	]
op	11:51	0:0	6	-
water	11:53	0:0	6	s
op	11:54	0:0	6	->
water	11:56	0:0	6	start_freq
op	11:66	0:0	6	[
water	11:67	0:0	6	ch
op	11:69	0:0	6	]
if	12:12	13:24	6	(exp_strategy == EXP_REUSE)
cond	12:16	12:32	7	exp_strategy == EXP_REUSE
water	12:16	0:0	8	exp_strategy
op	12:29	0:0	8	==
water	12:32	0:0	8	EXP_REUSE
stmts	13:16	13:24	7	
continue	13:16	13:24	8	
water	14:12	0:0	6	nb_groups
op	14:22	0:0	6	=
water	14:24	0:0	6	exponent_group_tab
op	14:42	0:0	6	[
water	14:43	0:0	6	cpl
op	14:46	0:0	6	]
op	14:47	0:0	6	[
water	14:48	0:0	6	exp_strategy
op	14:60	0:0	6	-
water	14:61	0:0	6	1
op	14:62	0:0	6	]
op	14:63	0:0	6	[
water	14:64	0:0	6	nb_coefs
op	14:72	0:0	6	]
water	14:73	0:0	6	;
water	15:12	0:0	6	bit_count
op	15:22	0:0	6	+=
water	15:25	0:0	6	4
op	15:27	0:0	6	+
water	15:29	0:0	6	(
water	15:30	0:0	6	nb_groups
op	15:40	0:0	6	*
water	15:42	0:0	6	7
water	15:43	0:0	6	)
water	15:44	0:0	6	;
water	16:8	0:0	6	}
water	17:4	0:0	4	}
return	18:4	18:20	2	bit_count
water	18:11	0:0	3	bit_count

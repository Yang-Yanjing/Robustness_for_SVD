func	1:0	50:0	0	static int	hvcc_add_nal_unit
params	1:28	0:0	1	
param	1:29	1:45	2	uint8_t *	nal_buf
param	1:47	1:64	2	uint32_t	nal_size
param	2:29	2:54	2	int	ps_array_completeness
param	3:29	3:65	2	HEVCDecoderConfigurationRecord *	hvcc
stmnts	0:0	49:14	1	
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
decl	6:4	6:21	2	GetBitContext	gbc
decl	7:4	7:20	2	uint8_t	nal_type
decl	8:4	8:21	2	uint8_t	*rbsp_buf
decl	9:4	9:22	2	uint32_t	rbsp_size
water	10:4	0:0	2	rbsp_buf
op	10:13	0:0	2	=
call	10:15	10:66	2	nal_unit_extract_rbsp
arg	10:37	10:44	3	nal_buf
water	10:37	0:0	4	nal_buf
arg	10:46	10:54	3	nal_size
water	10:46	0:0	4	nal_size
arg	10:56	10:66	3	&rbsp_size
op	10:56	0:0	4	&
water	10:57	0:0	4	rbsp_size
water	10:67	0:0	2	;
if	11:4	14:4	2	(! rbsp_buf)
cond	11:8	11:9	3	! rbsp_buf
op	11:8	0:0	4	!
water	11:9	0:0	4	rbsp_buf
stmts	11:19	14:4	3	
water	11:19	0:0	4	{
water	12:8	0:0	4	ret
op	12:12	0:0	4	=
call	12:14	12:28	4	AVERROR
arg	12:22	12:28	5	ENOMEM
water	12:22	0:0	6	ENOMEM
water	12:29	0:0	4	;
goto	13:8	13:16	4	end
water	13:13	0:0	5	end
water	14:4	0:0	4	}
water	15:4	0:0	2	ret
op	15:8	0:0	2	=
call	15:10	15:50	2	init_get_bits8
arg	15:25	15:29	3	&gbc
op	15:25	0:0	4	&
water	15:26	0:0	4	gbc
arg	15:31	15:39	3	rbsp_buf
water	15:31	0:0	4	rbsp_buf
arg	15:41	15:50	3	rbsp_size
water	15:41	0:0	4	rbsp_size
water	15:51	0:0	2	;
if	16:4	17:16	2	(ret < 0)
cond	16:8	16:14	3	ret < 0
water	16:8	0:0	4	ret
op	16:12	0:0	4	<
water	16:14	0:0	4	0
stmts	17:8	17:16	3	
goto	17:8	17:16	4	end
water	17:13	0:0	5	end
call	18:4	18:41	2	nal_unit_parse_header
arg	18:26	18:30	3	&gbc
op	18:26	0:0	4	&
water	18:27	0:0	4	gbc
arg	18:32	18:41	3	&nal_type
op	18:32	0:0	4	&
water	18:33	0:0	4	nal_type
water	18:42	0:0	2	;
switch	24:4	46:4	2	(nal_type)
cond	24:12	24:12	3	nal_type
water	24:12	0:0	4	nal_type
stmts	24:22	46:4	3	
water	24:22	0:0	4	{
label	25:4	25:16	4	case NAL_VPS :
label	26:4	26:16	4	case NAL_SPS :
label	27:4	27:16	4	case NAL_PPS :
label	28:4	28:23	4	case NAL_SEI_PREFIX :
label	29:4	29:23	4	case NAL_SEI_SUFFIX :
water	30:8	0:0	4	ret
op	30:12	0:0	4	=
call	30:14	31:65	4	hvcc_array_add_nal_unit
arg	30:38	30:45	5	nal_buf
water	30:38	0:0	6	nal_buf
arg	30:47	30:55	5	nal_size
water	30:47	0:0	6	nal_size
arg	30:57	30:65	5	nal_type
water	30:57	0:0	6	nal_type
arg	31:38	31:59	5	ps_array_completeness
water	31:38	0:0	6	ps_array_completeness
arg	31:61	31:65	5	hvcc
water	31:61	0:0	6	hvcc
water	31:66	0:0	4	;
if	32:8	33:20	4	(ret < 0)
cond	32:12	32:18	5	ret < 0
water	32:12	0:0	6	ret
op	32:16	0:0	6	<
water	32:18	0:0	6	0
stmts	33:12	33:20	5	
goto	33:12	33:20	6	end
water	33:17	0:0	7	end
else	34:8	35:44	4
stmts	34:13	35:44	5	
if	34:13	35:44	6	(nal_type == NAL_VPS)
cond	34:17	34:29	7	nal_type == NAL_VPS
water	34:17	0:0	8	nal_type
op	34:26	0:0	8	==
water	34:29	0:0	8	NAL_VPS
stmts	35:12	35:44	7	
water	35:12	0:0	8	ret
op	35:16	0:0	8	=
call	35:18	35:43	8	hvcc_parse_vps
arg	35:33	35:37	9	&gbc
op	35:33	0:0	10	&
water	35:34	0:0	10	gbc
arg	35:39	35:43	9	hvcc
water	35:39	0:0	10	hvcc
water	35:44	0:0	8	;
else	36:8	37:44	4
stmts	36:13	37:44	5	
if	36:13	37:44	6	(nal_type == NAL_SPS)
cond	36:17	36:29	7	nal_type == NAL_SPS
water	36:17	0:0	8	nal_type
op	36:26	0:0	8	==
water	36:29	0:0	8	NAL_SPS
stmts	37:12	37:44	7	
water	37:12	0:0	8	ret
op	37:16	0:0	8	=
call	37:18	37:43	8	hvcc_parse_sps
arg	37:33	37:37	9	&gbc
op	37:33	0:0	10	&
water	37:34	0:0	10	gbc
arg	37:39	37:43	9	hvcc
water	37:39	0:0	10	hvcc
water	37:44	0:0	8	;
else	38:8	39:44	4
stmts	38:13	39:44	5	
if	38:13	39:44	6	(nal_type == NAL_PPS)
cond	38:17	38:29	7	nal_type == NAL_PPS
water	38:17	0:0	8	nal_type
op	38:26	0:0	8	==
water	38:29	0:0	8	NAL_PPS
stmts	39:12	39:44	7	
water	39:12	0:0	8	ret
op	39:16	0:0	8	=
call	39:18	39:43	8	hvcc_parse_pps
arg	39:33	39:37	9	&gbc
op	39:33	0:0	10	&
water	39:34	0:0	10	gbc
arg	39:39	39:43	9	hvcc
water	39:39	0:0	10	hvcc
water	39:44	0:0	8	;
if	40:8	41:20	4	(ret < 0)
cond	40:12	40:18	5	ret < 0
water	40:12	0:0	6	ret
op	40:16	0:0	6	<
water	40:18	0:0	6	0
stmts	41:12	41:20	5	
goto	41:12	41:20	6	end
water	41:17	0:0	7	end
break	42:8	42:13	4	
label	43:4	43:11	4	default :
water	44:8	0:0	4	ret
op	44:12	0:0	4	=
water	44:14	0:0	4	AVERROR_INVALIDDATA
water	44:33	0:0	4	;
goto	45:8	45:16	4	end
water	45:13	0:0	5	end
water	46:4	0:0	4	}
label	47:0	47:3	2	end :
call	48:4	48:20	2	av_free
arg	48:12	48:20	3	rbsp_buf
water	48:12	0:0	4	rbsp_buf
water	48:21	0:0	2	;
return	49:4	49:14	2	ret
water	49:11	0:0	3	ret

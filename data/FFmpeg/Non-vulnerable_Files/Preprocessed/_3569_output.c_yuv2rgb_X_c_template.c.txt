func	1:24	49:0	0	void	yuv2rgb_X_c_template
params	2:20	0:0	1	
param	2:21	2:34	2	SwsContext *	c
param	2:36	2:60	2	const int16_t *	lumFilter
param	3:21	3:43	2	const int16_t * *	lumSrc
param	3:45	3:62	2	int	lumFilterSize
param	4:21	4:45	2	const int16_t *	chrFilter
param	4:47	4:70	2	const int16_t * *	chrUSrc
param	5:21	5:44	2	const int16_t * *	chrVSrc
param	5:46	5:63	2	int	chrFilterSize
param	6:21	6:43	2	const int16_t * *	alpSrc
param	6:45	6:58	2	uint8_t *	dest
param	6:60	6:68	2	int	dstW
param	7:21	7:26	2	int	y
param	7:28	7:53	2	enum AVPixelFormat	target
param	7:55	7:67	2	int	hasAlpha
stmnts	0:0	48:4	1	
decl	9:4	9:9	2	int	i
for	10:4	48:4	2	(i = 0 ;i < ( ( dstW + 1 ) >> 1 );i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:36	3	i < ( ( dstW + 1 ) >> 1 )
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	(
water	10:21	0:0	4	(
water	10:22	0:0	4	dstW
op	10:27	0:0	4	+
water	10:29	0:0	4	1
water	10:30	0:0	4	)
op	10:32	0:0	4	>>
water	10:35	0:0	4	1
water	10:36	0:0	4	)
forexpr	10:39	10:40	3	i ++
water	10:39	0:0	4	i
op	10:40	0:0	4	++
stmts	10:44	48:4	3	
water	10:44	0:0	4	{
decl	11:8	11:21	4	int	j
water	11:13	0:0	4	,
decl	11:8	11:21	4	int	A1
water	11:17	0:0	4	,
decl	11:8	11:21	4	int	A2
decl	12:8	12:24	4	int	Y1
op	12:15	0:0	4	=
water	12:17	0:0	4	1
op	12:19	0:0	4	<<
water	12:22	0:0	4	18
decl	13:8	13:24	4	int	Y2
op	13:15	0:0	4	=
water	13:17	0:0	4	1
op	13:19	0:0	4	<<
water	13:22	0:0	4	18
decl	14:8	14:24	4	int	U
op	14:15	0:0	4	=
water	14:17	0:0	4	1
op	14:19	0:0	4	<<
water	14:22	0:0	4	18
decl	15:8	15:24	4	int	V
op	15:15	0:0	4	=
water	15:17	0:0	4	1
op	15:19	0:0	4	<<
water	15:22	0:0	4	18
decl	16:8	16:29	4	const void	*r
water	16:21	0:0	4	,
decl	16:8	16:29	4	const void	*g
water	16:25	0:0	4	,
decl	16:8	16:29	4	const void	*b
for	17:8	20:8	4	(j = 0 ;j < lumFilterSize;j ++)
forinit	17:13	17:18	5	j = 0 ;
water	17:13	0:0	6	j
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:24	5	j < lumFilterSize
water	17:20	0:0	6	j
op	17:22	0:0	6	<
water	17:24	0:0	6	lumFilterSize
forexpr	17:39	17:40	5	j ++
water	17:39	0:0	6	j
op	17:40	0:0	6	++
stmts	17:44	20:8	5	
water	17:44	0:0	6	{
water	18:12	0:0	6	Y1
op	18:15	0:0	6	+=
water	18:18	0:0	6	lumSrc
op	18:24	0:0	6	[
water	18:25	0:0	6	j
op	18:26	0:0	6	]
op	18:27	0:0	6	[
water	18:28	0:0	6	i
op	18:30	0:0	6	*
water	18:32	0:0	6	2
op	18:33	0:0	6	]
op	18:39	0:0	6	*
water	18:41	0:0	6	lumFilter
op	18:50	0:0	6	[
water	18:51	0:0	6	j
op	18:52	0:0	6	]
water	18:53	0:0	6	;
water	19:12	0:0	6	Y2
op	19:15	0:0	6	+=
water	19:18	0:0	6	lumSrc
op	19:24	0:0	6	[
water	19:25	0:0	6	j
op	19:26	0:0	6	]
op	19:27	0:0	6	[
water	19:28	0:0	6	i
op	19:30	0:0	6	*
water	19:32	0:0	6	2
op	19:34	0:0	6	+
water	19:36	0:0	6	1
op	19:37	0:0	6	]
op	19:39	0:0	6	*
water	19:41	0:0	6	lumFilter
op	19:50	0:0	6	[
water	19:51	0:0	6	j
op	19:52	0:0	6	]
water	19:53	0:0	6	;
water	20:8	0:0	6	}
for	21:8	24:8	4	(j = 0 ;j < chrFilterSize;j ++)
forinit	21:13	21:18	5	j = 0 ;
water	21:13	0:0	6	j
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:24	5	j < chrFilterSize
water	21:20	0:0	6	j
op	21:22	0:0	6	<
water	21:24	0:0	6	chrFilterSize
forexpr	21:39	21:40	5	j ++
water	21:39	0:0	6	j
op	21:40	0:0	6	++
stmts	21:44	24:8	5	
water	21:44	0:0	6	{
water	22:12	0:0	6	U
op	22:14	0:0	6	+=
water	22:17	0:0	6	chrUSrc
op	22:24	0:0	6	[
water	22:25	0:0	6	j
op	22:26	0:0	6	]
op	22:27	0:0	6	[
water	22:28	0:0	6	i
op	22:29	0:0	6	]
op	22:31	0:0	6	*
water	22:33	0:0	6	chrFilter
op	22:42	0:0	6	[
water	22:43	0:0	6	j
op	22:44	0:0	6	]
water	22:45	0:0	6	;
water	23:12	0:0	6	V
op	23:14	0:0	6	+=
water	23:17	0:0	6	chrVSrc
op	23:24	0:0	6	[
water	23:25	0:0	6	j
op	23:26	0:0	6	]
op	23:27	0:0	6	[
water	23:28	0:0	6	i
op	23:29	0:0	6	]
op	23:31	0:0	6	*
water	23:33	0:0	6	chrFilter
op	23:42	0:0	6	[
water	23:43	0:0	6	j
op	23:44	0:0	6	]
water	23:45	0:0	6	;
water	24:8	0:0	6	}
water	25:8	0:0	4	Y1
op	25:11	0:0	4	>>=
water	25:15	0:0	4	19
water	25:17	0:0	4	;
water	26:8	0:0	4	Y2
op	26:11	0:0	4	>>=
water	26:15	0:0	4	19
water	26:17	0:0	4	;
water	27:8	0:0	4	U
op	27:11	0:0	4	>>=
water	27:15	0:0	4	19
water	27:17	0:0	4	;
water	28:8	0:0	4	V
op	28:11	0:0	4	>>=
water	28:15	0:0	4	19
water	28:17	0:0	4	;
if	29:8	42:8	4	(hasAlpha)
cond	29:12	29:12	5	hasAlpha
water	29:12	0:0	6	hasAlpha
stmts	29:22	42:8	5	
water	29:22	0:0	6	{
water	30:12	0:0	6	A1
op	30:15	0:0	6	=
water	30:17	0:0	6	1
op	30:19	0:0	6	<<
water	30:22	0:0	6	18
water	30:24	0:0	6	;
water	31:12	0:0	6	A2
op	31:15	0:0	6	=
water	31:17	0:0	6	1
op	31:19	0:0	6	<<
water	31:22	0:0	6	18
water	31:24	0:0	6	;
for	32:12	35:12	6	(j = 0 ;j < lumFilterSize;j ++)
forinit	32:17	32:22	7	j = 0 ;
water	32:17	0:0	8	j
op	32:19	0:0	8	=
water	32:21	0:0	8	0
water	32:22	0:0	8	;
cond	32:24	32:28	7	j < lumFilterSize
water	32:24	0:0	8	j
op	32:26	0:0	8	<
water	32:28	0:0	8	lumFilterSize
forexpr	32:43	32:44	7	j ++
water	32:43	0:0	8	j
op	32:44	0:0	8	++
stmts	32:48	35:12	7	
water	32:48	0:0	8	{
water	33:16	0:0	8	A1
op	33:19	0:0	8	+=
water	33:22	0:0	8	alpSrc
op	33:28	0:0	8	[
water	33:29	0:0	8	j
op	33:30	0:0	8	]
op	33:31	0:0	8	[
water	33:32	0:0	8	i
op	33:34	0:0	8	*
water	33:36	0:0	8	2
op	33:41	0:0	8	]
op	33:43	0:0	8	*
water	33:45	0:0	8	lumFilter
op	33:54	0:0	8	[
water	33:55	0:0	8	j
op	33:56	0:0	8	]
water	33:57	0:0	8	;
water	34:16	0:0	8	A2
op	34:19	0:0	8	+=
water	34:22	0:0	8	alpSrc
op	34:28	0:0	8	[
water	34:29	0:0	8	j
op	34:30	0:0	8	]
op	34:31	0:0	8	[
water	34:32	0:0	8	i
op	34:34	0:0	8	*
water	34:36	0:0	8	2
op	34:38	0:0	8	+
water	34:40	0:0	8	1
op	34:41	0:0	8	]
op	34:43	0:0	8	*
water	34:45	0:0	8	lumFilter
op	34:54	0:0	8	[
water	34:55	0:0	8	j
op	34:56	0:0	8	]
water	34:57	0:0	8	;
water	35:12	0:0	8	}
water	36:12	0:0	6	A1
op	36:15	0:0	6	>>=
water	36:19	0:0	6	19
water	36:21	0:0	6	;
water	37:12	0:0	6	A2
op	37:15	0:0	6	>>=
water	37:19	0:0	6	19
water	37:21	0:0	6	;
if	38:12	41:12	6	(( A1 | A2 ) & 0 x100)
cond	38:16	38:29	7	( A1 | A2 ) & 0 x100
water	38:16	0:0	8	(
water	38:17	0:0	8	A1
op	38:20	0:0	8	|
water	38:22	0:0	8	A2
water	38:24	0:0	8	)
op	38:26	0:0	8	&
water	38:28	0:0	8	0
water	38:29	0:0	8	x100
stmts	38:35	41:12	7	
water	38:35	0:0	8	{
water	39:16	0:0	8	A1
op	39:19	0:0	8	=
call	39:21	39:37	8	av_clip_uint8
arg	39:35	39:37	9	A1
water	39:35	0:0	10	A1
water	39:38	0:0	8	;
water	40:16	0:0	8	A2
op	40:19	0:0	8	=
call	40:21	40:37	8	av_clip_uint8
arg	40:35	40:37	9	A2
water	40:35	0:0	10	A2
water	40:38	0:0	8	;
water	41:12	0:0	8	}
water	42:8	0:0	6	}
water	43:8	0:0	4	r
op	43:10	0:0	4	=
water	43:13	0:0	4	c
op	43:14	0:0	4	->
water	43:16	0:0	4	table_rV
op	43:24	0:0	4	[
water	43:25	0:0	4	V
op	43:27	0:0	4	+
water	43:29	0:0	4	YUVRGB_TABLE_HEADROOM
op	43:50	0:0	4	]
water	43:51	0:0	4	;
water	44:8	0:0	4	g
op	44:10	0:0	4	=
water	44:12	0:0	4	(
water	44:13	0:0	4	c
op	44:14	0:0	4	->
water	44:16	0:0	4	table_gU
op	44:24	0:0	4	[
water	44:25	0:0	4	U
op	44:27	0:0	4	+
water	44:29	0:0	4	YUVRGB_TABLE_HEADROOM
op	44:50	0:0	4	]
op	44:52	0:0	4	+
water	44:54	0:0	4	c
op	44:55	0:0	4	->
water	44:57	0:0	4	table_gV
op	44:65	0:0	4	[
water	44:66	0:0	4	V
op	44:68	0:0	4	+
water	44:70	0:0	4	YUVRGB_TABLE_HEADROOM
op	44:91	0:0	4	]
water	44:92	0:0	4	)
water	44:93	0:0	4	;
water	45:8	0:0	4	b
op	45:10	0:0	4	=
water	45:13	0:0	4	c
op	45:14	0:0	4	->
water	45:16	0:0	4	table_bU
op	45:24	0:0	4	[
water	45:25	0:0	4	U
op	45:27	0:0	4	+
water	45:29	0:0	4	YUVRGB_TABLE_HEADROOM
op	45:50	0:0	4	]
water	45:51	0:0	4	;
call	46:8	47:50	4	yuv2rgb_write
arg	46:22	46:26	5	dest
water	46:22	0:0	6	dest
arg	46:28	46:29	5	i
water	46:28	0:0	6	i
arg	46:31	46:33	5	Y1
water	46:31	0:0	6	Y1
arg	46:35	46:37	5	Y2
water	46:35	0:0	6	Y2
arg	46:39	46:56	5	hasAlpha?A1:0
water	46:39	0:0	6	hasAlpha
water	46:48	0:0	6	?
water	46:50	0:0	6	A1
water	46:53	0:0	6	:
water	46:55	0:0	6	0
arg	46:58	46:75	5	hasAlpha?A2:0
water	46:58	0:0	6	hasAlpha
water	46:67	0:0	6	?
water	46:69	0:0	6	A2
water	46:72	0:0	6	:
water	46:74	0:0	6	0
arg	47:22	47:23	5	r
water	47:22	0:0	6	r
arg	47:25	47:26	5	g
water	47:25	0:0	6	g
arg	47:28	47:29	5	b
water	47:28	0:0	6	b
arg	47:31	47:32	5	y
water	47:31	0:0	6	y
arg	47:34	47:40	5	target
water	47:34	0:0	6	target
arg	47:42	47:50	5	hasAlpha
water	47:42	0:0	6	hasAlpha
water	47:51	0:0	4	;
water	48:4	0:0	4	}

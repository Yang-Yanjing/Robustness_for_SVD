func	1:0	58:0	0	void	process_client
params	1:19	0:0	1	
param	1:20	1:39	2	AVIOContext *	client
param	1:41	1:59	2	const char *	in_uri
stmnts	0:0	57:21	1	
decl	3:4	3:29	2	AVIOContext	*input
op	3:23	0:0	2	=
water	3:25	0:0	2	NULL
decl	4:4	4:21	2	uint8_t	buf[1024]
decl	5:4	5:26	2	int	ret
water	5:11	0:0	2	,
decl	5:4	5:26	2	int	n
water	5:14	0:0	2	,
decl	5:4	5:26	2	int	reply_code
decl	6:4	6:25	2	char	*resource
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
while	7:4	13:4	2	(( ret =avio_handshake (client ) ) > 0)
cond	7:11	7:44	3	( ret =avio_handshake (client ) ) > 0
water	7:11	0:0	4	(
water	7:12	0:0	4	ret
op	7:16	0:0	4	=
call	7:18	7:39	4	avio_handshake
arg	7:33	7:39	5	client
water	7:33	0:0	6	client
water	7:40	0:0	4	)
op	7:42	0:0	4	>
water	7:44	0:0	4	0
stmts	7:47	13:4	3	
water	7:47	0:0	4	{
call	8:8	8:72	4	av_opt_get
arg	8:19	8:25	5	client
water	8:19	0:0	6	client
arg	8:27	8:37	5	"resource"
water	8:27	0:0	6	"resource"
arg	8:39	8:61	5	AV_OPT_SEARCH_CHILDREN
water	8:39	0:0	6	AV_OPT_SEARCH_CHILDREN
arg	8:63	8:72	5	&resource
op	8:63	0:0	6	&
water	8:64	0:0	6	resource
water	8:73	0:0	4	;
if	11:8	12:17	4	(resource &&strlen (resource ))
cond	11:12	11:39	5	resource &&strlen (resource )
water	11:12	0:0	6	resource
op	11:21	0:0	6	&&
call	11:24	11:39	6	strlen
arg	11:31	11:39	7	resource
water	11:31	0:0	8	resource
stmts	12:12	12:17	5	
break	12:12	12:17	6	
water	13:4	0:0	4	}
if	14:4	15:16	2	(ret < 0)
cond	14:8	14:14	3	ret < 0
water	14:8	0:0	4	ret
op	14:12	0:0	4	<
water	14:14	0:0	4	0
stmts	15:8	15:16	3	
goto	15:8	15:16	4	end
water	15:13	0:0	5	end
call	16:4	16:58	2	av_log
arg	16:11	16:17	3	client
water	16:11	0:0	4	client
arg	16:19	16:31	3	AV_LOG_TRACE
water	16:19	0:0	4	AV_LOG_TRACE
arg	16:33	16:48	3	"resource=%p\n"
water	16:33	0:0	4	"resource=%p\n"
arg	16:50	16:58	3	resource
water	16:50	0:0	4	resource
water	16:59	0:0	2	;
if	17:4	19:4	2	(resource && resource [ 0 ] == '/' && !strcmp (( resource + 1 ) ,in_uri ))
cond	17:8	17:72	3	resource && resource [ 0 ] == '/' && !strcmp (( resource + 1 ) ,in_uri )
water	17:8	0:0	4	resource
op	17:17	0:0	4	&&
water	17:20	0:0	4	resource
op	17:28	0:0	4	[
water	17:29	0:0	4	0
op	17:30	0:0	4	]
op	17:32	0:0	4	==
water	17:35	0:0	4	'/'
op	17:39	0:0	4	&&
op	17:42	0:0	4	!
call	17:43	17:72	4	strcmp
arg	17:50	17:64	5	(resource+1)
water	17:50	0:0	6	(
water	17:51	0:0	6	resource
op	17:60	0:0	6	+
water	17:62	0:0	6	1
water	17:63	0:0	6	)
arg	17:66	17:72	5	in_uri
water	17:66	0:0	6	in_uri
stmts	17:75	19:4	3	
water	17:75	0:0	4	{
water	18:8	0:0	4	reply_code
op	18:19	0:0	4	=
water	18:21	0:0	4	200
water	18:24	0:0	4	;
water	19:4	0:0	4	}
else	19:6	21:4	2
stmts	19:11	21:4	3	
water	19:11	0:0	4	{
water	20:8	0:0	4	reply_code
op	20:19	0:0	4	=
water	20:21	0:0	4	AVERROR_HTTP_NOT_FOUND
water	20:43	0:0	4	;
water	21:4	0:0	4	}
if	22:4	25:4	2	(( ret =av_opt_set_int (client ,"reply_code" ,reply_code ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	22:8	22:91	3	( ret =av_opt_set_int (client ,"reply_code" ,reply_code ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	22:8	0:0	4	(
water	22:9	0:0	4	ret
op	22:13	0:0	4	=
call	22:15	22:86	4	av_opt_set_int
arg	22:30	22:36	5	client
water	22:30	0:0	6	client
arg	22:38	22:50	5	"reply_code"
water	22:38	0:0	6	"reply_code"
arg	22:52	22:62	5	reply_code
water	22:52	0:0	6	reply_code
arg	22:64	22:86	5	AV_OPT_SEARCH_CHILDREN
water	22:64	0:0	6	AV_OPT_SEARCH_CHILDREN
water	22:87	0:0	4	)
op	22:89	0:0	4	<
water	22:91	0:0	4	0
stmts	22:94	25:4	3	
water	22:94	0:0	4	{
call	23:8	23:87	4	av_log
arg	23:15	23:21	5	client
water	23:15	0:0	6	client
arg	23:23	23:35	5	AV_LOG_ERROR
water	23:23	0:0	6	AV_LOG_ERROR
arg	23:37	23:70	5	"Failed to set reply_code: %s.\n"
water	23:37	0:0	6	"Failed to set reply_code: %s.\n"
arg	23:72	23:87	5	av_err2str(ret)
call	23:72	23:86	6	av_err2str
arg	23:83	23:86	7	ret
water	23:83	0:0	8	ret
water	23:88	0:0	4	;
goto	24:8	24:16	4	end
water	24:13	0:0	5	end
water	25:4	0:0	4	}
call	26:4	26:69	2	av_log
arg	26:11	26:17	3	client
water	26:11	0:0	4	client
arg	26:19	26:31	3	AV_LOG_TRACE
water	26:19	0:0	4	AV_LOG_TRACE
arg	26:33	26:57	3	"Set reply code to %d\n"
water	26:33	0:0	4	"Set reply code to %d\n"
arg	26:59	26:69	3	reply_code
water	26:59	0:0	4	reply_code
water	26:70	0:0	2	;
while	27:4	27:46	2	(( ret =avio_handshake (client ) ) > 0)
cond	27:11	27:44	3	( ret =avio_handshake (client ) ) > 0
water	27:11	0:0	4	(
water	27:12	0:0	4	ret
op	27:16	0:0	4	=
call	27:18	27:39	4	avio_handshake
arg	27:33	27:39	5	client
water	27:33	0:0	6	client
water	27:40	0:0	4	)
op	27:42	0:0	4	>
water	27:44	0:0	4	0
stmts	27:46	27:46	3	
water	27:46	0:0	4	;
if	28:4	29:16	2	(ret < 0)
cond	28:8	28:14	3	ret < 0
water	28:8	0:0	4	ret
op	28:12	0:0	4	<
water	28:14	0:0	4	0
stmts	29:8	29:16	3	
goto	29:8	29:16	4	end
water	29:13	0:0	5	end
call	30:4	30:44	2	fprintf
arg	30:12	30:18	3	stderr
water	30:12	0:0	4	stderr
arg	30:20	30:44	3	"Handshake performed.\n"
water	30:20	0:0	4	"Handshake performed.\n"
water	30:45	0:0	2	;
if	31:4	32:16	2	(reply_code != 200)
cond	31:8	31:22	3	reply_code != 200
water	31:8	0:0	4	reply_code
op	31:19	0:0	4	!=
water	31:22	0:0	4	200
stmts	32:8	32:16	3	
goto	32:8	32:16	4	end
water	32:13	0:0	5	end
call	33:4	33:43	2	fprintf
arg	33:12	33:18	3	stderr
water	33:12	0:0	4	stderr
arg	33:20	33:43	3	"Opening input file.\n"
water	33:20	0:0	4	"Opening input file.\n"
water	33:44	0:0	2	;
if	34:4	38:4	2	(( ret =avio_open2 (& input ,in_uri ,AVIO_FLAG_READ ,NULL ,NULL ) ) < 0)
cond	34:8	34:73	3	( ret =avio_open2 (& input ,in_uri ,AVIO_FLAG_READ ,NULL ,NULL ) ) < 0
water	34:8	0:0	4	(
water	34:9	0:0	4	ret
op	34:13	0:0	4	=
call	34:15	34:68	4	avio_open2
arg	34:26	34:32	5	&input
op	34:26	0:0	6	&
water	34:27	0:0	6	input
arg	34:34	34:40	5	in_uri
water	34:34	0:0	6	in_uri
arg	34:42	34:56	5	AVIO_FLAG_READ
water	34:42	0:0	6	AVIO_FLAG_READ
arg	34:58	34:62	5	NULL
water	34:58	0:0	6	NULL
arg	34:64	34:68	5	NULL
water	34:64	0:0	6	NULL
water	34:69	0:0	4	)
op	34:71	0:0	4	<
water	34:73	0:0	4	0
stmts	34:76	38:4	3	
water	34:76	0:0	4	{
call	35:8	36:30	4	av_log
arg	35:15	35:20	5	input
water	35:15	0:0	6	input
arg	35:22	35:34	5	AV_LOG_ERROR
water	35:22	0:0	6	AV_LOG_ERROR
arg	35:36	35:69	5	"Failed to open input: %s: %s.\n"
water	35:36	0:0	6	"Failed to open input: %s: %s.\n"
arg	35:71	35:77	5	in_uri
water	35:71	0:0	6	in_uri
arg	36:15	36:30	5	av_err2str(ret)
call	36:15	36:29	6	av_err2str
arg	36:26	36:29	7	ret
water	36:26	0:0	8	ret
water	36:31	0:0	4	;
goto	37:8	37:16	4	end
water	37:13	0:0	5	end
water	38:4	0:0	4	}
for	39:4	50:4	2	(;;)
forinit	39:8	39:8	3	;
water	39:8	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	39:12	50:4	3	
water	39:12	0:0	4	{
water	40:8	0:0	4	n
op	40:10	0:0	4	=
call	40:12	40:45	4	avio_read
arg	40:22	40:27	5	input
water	40:22	0:0	6	input
arg	40:29	40:32	5	buf
water	40:29	0:0	6	buf
arg	40:34	40:45	5	sizeof(buf)
op	40:34	0:0	6	sizeof
water	40:40	0:0	6	(
water	40:41	0:0	6	buf
water	40:44	0:0	6	)
water	40:46	0:0	4	;
if	41:8	47:8	4	(n < 0)
cond	41:12	41:16	5	n < 0
water	41:12	0:0	6	n
op	41:14	0:0	6	<
water	41:16	0:0	6	0
stmts	41:19	47:8	5	
water	41:19	0:0	6	{
if	42:12	43:21	6	(n == AVERROR_EOF)
cond	42:16	42:21	7	n == AVERROR_EOF
water	42:16	0:0	8	n
op	42:18	0:0	8	==
water	42:21	0:0	8	AVERROR_EOF
stmts	43:16	43:21	7	
break	43:16	43:21	8	
call	44:12	45:32	6	av_log
arg	44:19	44:24	7	input
water	44:19	0:0	8	input
arg	44:26	44:38	7	AV_LOG_ERROR
water	44:26	0:0	8	AV_LOG_ERROR
arg	44:40	44:73	7	"Error reading from input: %s.\n"
water	44:40	0:0	8	"Error reading from input: %s.\n"
arg	45:19	45:32	7	av_err2str(n)
call	45:19	45:31	8	av_err2str
arg	45:30	45:31	9	n
water	45:30	0:0	10	n
water	45:33	0:0	6	;
break	46:12	46:17	6	
water	47:8	0:0	6	}
call	48:8	48:33	4	avio_write
arg	48:19	48:25	5	client
water	48:19	0:0	6	client
arg	48:27	48:30	5	buf
water	48:27	0:0	6	buf
arg	48:32	48:33	5	n
water	48:32	0:0	6	n
water	48:34	0:0	4	;
call	49:8	49:25	4	avio_flush
arg	49:19	49:25	5	client
water	49:19	0:0	6	client
water	49:26	0:0	4	;
water	50:4	0:0	4	}
label	51:0	51:3	2	end :
call	52:4	52:39	2	fprintf
arg	52:12	52:18	3	stderr
water	52:12	0:0	4	stderr
arg	52:20	52:39	3	"Flushing client\n"
water	52:20	0:0	4	"Flushing client\n"
water	52:40	0:0	2	;
call	53:4	53:21	2	avio_flush
arg	53:15	53:21	3	client
water	53:15	0:0	4	client
water	53:22	0:0	2	;
call	54:4	54:38	2	fprintf
arg	54:12	54:18	3	stderr
water	54:12	0:0	4	stderr
arg	54:20	54:38	3	"Closing client\n"
water	54:20	0:0	4	"Closing client\n"
water	54:39	0:0	2	;
call	55:4	55:21	2	avio_close
arg	55:15	55:21	3	client
water	55:15	0:0	4	client
water	55:22	0:0	2	;
call	56:4	56:37	2	fprintf
arg	56:12	56:18	3	stderr
water	56:12	0:0	4	stderr
arg	56:20	56:37	3	"Closing input\n"
water	56:20	0:0	4	"Closing input\n"
water	56:38	0:0	2	;
call	57:4	57:20	2	avio_close
arg	57:15	57:20	3	input
water	57:15	0:0	4	input
water	57:21	0:0	2	;

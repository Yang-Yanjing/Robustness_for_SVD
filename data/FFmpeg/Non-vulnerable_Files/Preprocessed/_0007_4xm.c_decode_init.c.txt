func	1:15	32:0	0	int	decode_init
params	1:30	0:0	1	
param	1:31	1:52	2	AVCodecContext *	avctx
stmnts	3:4	31:12	1	
water	3:4	0:0	2	FourXContext
op	3:17	0:0	2	*
water	3:19	0:0	2	const
water	3:25	0:0	2	f
op	3:27	0:0	2	=
water	3:29	0:0	2	avctx
op	3:34	0:0	2	->
water	3:36	0:0	2	priv_data
water	3:45	0:0	2	;
decl	4:4	4:11	2	int	ret
if	5:4	8:4	2	(avctx -> extradata_size != 4 || ! avctx -> extradata)
cond	5:8	5:46	3	avctx -> extradata_size != 4 || ! avctx -> extradata
water	5:8	0:0	4	avctx
op	5:13	0:0	4	->
water	5:15	0:0	4	extradata_size
op	5:30	0:0	4	!=
water	5:33	0:0	4	4
op	5:35	0:0	4	||
op	5:38	0:0	4	!
water	5:39	0:0	4	avctx
op	5:44	0:0	4	->
water	5:46	0:0	4	extradata
stmts	5:57	8:4	3	
water	5:57	0:0	4	{
call	6:8	6:66	4	av_log
arg	6:15	6:20	5	avctx
water	6:15	0:0	6	avctx
arg	6:22	6:34	5	AV_LOG_ERROR
water	6:22	0:0	6	AV_LOG_ERROR
arg	6:36	6:66	5	"extradata wrong or missing\n"
water	6:36	0:0	6	"extradata wrong or missing\n"
water	6:67	0:0	4	;
return	7:8	7:34	4	AVERROR_INVALIDDATA
water	7:15	0:0	5	AVERROR_INVALIDDATA
water	8:4	0:0	4	}
if	9:4	12:4	2	(( avctx -> width % 16 ) || ( avctx -> height % 16 ))
cond	9:7	9:49	3	( avctx -> width % 16 ) || ( avctx -> height % 16 )
water	9:7	0:0	4	(
water	9:8	0:0	4	avctx
op	9:13	0:0	4	->
water	9:15	0:0	4	width
op	9:21	0:0	4	%
water	9:23	0:0	4	16
water	9:25	0:0	4	)
op	9:27	0:0	4	||
water	9:30	0:0	4	(
water	9:31	0:0	4	avctx
op	9:36	0:0	4	->
water	9:38	0:0	4	height
op	9:45	0:0	4	%
water	9:47	0:0	4	16
water	9:49	0:0	4	)
stmts	9:52	12:4	3	
water	9:52	0:0	4	{
call	10:8	10:64	4	av_log
arg	10:15	10:20	5	avctx
water	10:15	0:0	6	avctx
arg	10:22	10:34	5	AV_LOG_ERROR
water	10:22	0:0	6	AV_LOG_ERROR
arg	10:36	10:64	5	"unsupported width/height\n"
water	10:36	0:0	6	"unsupported width/height\n"
water	10:65	0:0	4	;
return	11:8	11:34	4	AVERROR_INVALIDDATA
water	11:15	0:0	5	AVERROR_INVALIDDATA
water	12:4	0:0	4	}
water	13:4	0:0	2	ret
op	13:8	0:0	2	=
call	13:10	13:67	2	av_image_check_size
arg	13:30	13:42	3	avctx->width
water	13:30	0:0	4	avctx
op	13:35	0:0	4	->
water	13:37	0:0	4	width
arg	13:44	13:57	3	avctx->height
water	13:44	0:0	4	avctx
op	13:49	0:0	4	->
water	13:51	0:0	4	height
arg	13:59	13:60	3	0
water	13:59	0:0	4	0
arg	13:62	13:67	3	avctx
water	13:62	0:0	4	avctx
water	13:68	0:0	2	;
if	14:4	15:18	2	(ret < 0)
cond	14:8	14:14	3	ret < 0
water	14:8	0:0	4	ret
op	14:12	0:0	4	<
water	14:14	0:0	4	0
stmts	15:8	15:18	3	
return	15:8	15:18	4	ret
water	15:15	0:0	5	ret
water	16:4	0:0	2	f
op	16:5	0:0	2	->
water	16:7	0:0	2	frame_buffer
op	16:25	0:0	2	=
call	16:27	16:70	2	av_mallocz
arg	16:38	16:70	3	avctx->width*avctx->height*2
water	16:38	0:0	4	avctx
op	16:43	0:0	4	->
water	16:45	0:0	4	width
op	16:51	0:0	4	*
water	16:53	0:0	4	avctx
op	16:58	0:0	4	->
water	16:60	0:0	4	height
op	16:67	0:0	4	*
water	16:69	0:0	4	2
water	16:71	0:0	2	;
water	17:4	0:0	2	f
op	17:5	0:0	2	->
water	17:7	0:0	2	last_frame_buffer
op	17:25	0:0	2	=
call	17:27	17:70	2	av_mallocz
arg	17:38	17:70	3	avctx->width*avctx->height*2
water	17:38	0:0	4	avctx
op	17:43	0:0	4	->
water	17:45	0:0	4	width
op	17:51	0:0	4	*
water	17:53	0:0	4	avctx
op	17:58	0:0	4	->
water	17:60	0:0	4	height
op	17:67	0:0	4	*
water	17:69	0:0	4	2
water	17:71	0:0	2	;
if	18:4	21:4	2	(! f -> frame_buffer || ! f -> last_frame_buffer)
cond	18:8	18:32	3	! f -> frame_buffer || ! f -> last_frame_buffer
op	18:8	0:0	4	!
water	18:9	0:0	4	f
op	18:10	0:0	4	->
water	18:12	0:0	4	frame_buffer
op	18:25	0:0	4	||
op	18:28	0:0	4	!
water	18:29	0:0	4	f
op	18:30	0:0	4	->
water	18:32	0:0	4	last_frame_buffer
stmts	18:51	21:4	3	
water	18:51	0:0	4	{
call	19:8	19:24	4	decode_end
arg	19:19	19:24	5	avctx
water	19:19	0:0	6	avctx
water	19:25	0:0	4	;
return	20:8	20:30	4	AVERROR(ENOMEM)
call	20:15	20:29	5	AVERROR
arg	20:23	20:29	6	ENOMEM
water	20:23	0:0	7	ENOMEM
water	21:4	0:0	4	}
water	22:4	0:0	2	f
op	22:5	0:0	2	->
water	22:7	0:0	2	version
op	22:15	0:0	2	=
call	22:17	22:41	2	AV_RL32
arg	22:25	22:41	3	avctx->extradata
water	22:25	0:0	4	avctx
op	22:30	0:0	4	->
water	22:32	0:0	4	extradata
op	22:43	0:0	2	>>
water	22:46	0:0	2	16
water	22:48	0:0	2	;
call	23:4	23:36	2	ff_blockdsp_init
arg	23:21	23:29	3	&f->bdsp
op	23:21	0:0	4	&
water	23:22	0:0	4	f
op	23:23	0:0	4	->
water	23:25	0:0	4	bdsp
arg	23:31	23:36	3	avctx
water	23:31	0:0	4	avctx
water	23:37	0:0	2	;
call	24:4	24:30	2	ff_bswapdsp_init
arg	24:21	24:30	3	&f->bbdsp
op	24:21	0:0	4	&
water	24:22	0:0	4	f
op	24:23	0:0	4	->
water	24:25	0:0	4	bbdsp
water	24:31	0:0	2	;
water	25:4	0:0	2	f
op	25:5	0:0	2	->
water	25:7	0:0	2	avctx
op	25:13	0:0	2	=
water	25:15	0:0	2	avctx
water	25:20	0:0	2	;
call	26:4	26:15	2	init_vlcs
arg	26:14	26:15	3	f
water	26:14	0:0	4	f
water	26:16	0:0	2	;
if	27:4	28:42	2	(f -> version > 2)
cond	27:8	27:21	3	f -> version > 2
water	27:8	0:0	4	f
op	27:9	0:0	4	->
water	27:11	0:0	4	version
op	27:19	0:0	4	>
water	27:21	0:0	4	2
stmts	28:8	28:42	3	
water	28:8	0:0	4	avctx
op	28:13	0:0	4	->
water	28:15	0:0	4	pix_fmt
op	28:23	0:0	4	=
water	28:25	0:0	4	AV_PIX_FMT_RGB565
water	28:42	0:0	4	;
else	29:4	30:42	2
stmts	30:8	30:42	3	
water	30:8	0:0	4	avctx
op	30:13	0:0	4	->
water	30:15	0:0	4	pix_fmt
op	30:23	0:0	4	=
water	30:25	0:0	4	AV_PIX_FMT_BGR555
water	30:42	0:0	4	;
return	31:4	31:12	2	0
water	31:11	0:0	3	0

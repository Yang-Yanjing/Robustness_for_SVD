func	1:0	63:0	0	static struct rendition *	new_rendition
params	1:38	0:0	1	
param	1:39	1:52	2	HLSContext *	c
param	1:54	1:81	2	struct rendition_info *	info
param	2:38	2:58	2	const char *	url_base
stmnts	0:0	62:15	1	
decl	4:4	4:26	2	struct rendition	*rend
decl	5:4	5:48	2	enum AVMediaType	type
op	5:26	0:0	2	=
water	5:28	0:0	2	AVMEDIA_TYPE_UNKNOWN
decl	6:4	6:24	2	char	*characteristic
decl	7:4	7:17	2	char	*chr_ptr
decl	8:4	8:17	2	char	*saveptr
if	9:4	10:33	2	(!strcmp (info -> type ,"AUDIO" ))
cond	9:8	9:35	3	!strcmp (info -> type ,"AUDIO" )
op	9:8	0:0	4	!
call	9:9	9:35	4	strcmp
arg	9:16	9:26	5	info->type
water	9:16	0:0	6	info
op	9:20	0:0	6	->
water	9:22	0:0	6	type
arg	9:28	9:35	5	"AUDIO"
water	9:28	0:0	6	"AUDIO"
stmts	10:8	10:33	3	
water	10:8	0:0	4	type
op	10:13	0:0	4	=
water	10:15	0:0	4	AVMEDIA_TYPE_AUDIO
water	10:33	0:0	4	;
else	11:4	12:33	2
stmts	11:9	12:33	3	
if	11:9	12:33	4	(!strcmp (info -> type ,"VIDEO" ))
cond	11:13	11:40	5	!strcmp (info -> type ,"VIDEO" )
op	11:13	0:0	6	!
call	11:14	11:40	6	strcmp
arg	11:21	11:31	7	info->type
water	11:21	0:0	8	info
op	11:25	0:0	8	->
water	11:27	0:0	8	type
arg	11:33	11:40	7	"VIDEO"
water	11:33	0:0	8	"VIDEO"
stmts	12:8	12:33	5	
water	12:8	0:0	6	type
op	12:13	0:0	6	=
water	12:15	0:0	6	AVMEDIA_TYPE_VIDEO
water	12:33	0:0	6	;
else	13:4	14:36	2
stmts	13:9	14:36	3	
if	13:9	14:36	4	(!strcmp (info -> type ,"SUBTITLES" ))
cond	13:13	13:44	5	!strcmp (info -> type ,"SUBTITLES" )
op	13:13	0:0	6	!
call	13:14	13:44	6	strcmp
arg	13:21	13:31	7	info->type
water	13:21	0:0	8	info
op	13:25	0:0	8	->
water	13:27	0:0	8	type
arg	13:33	13:44	7	"SUBTITLES"
water	13:33	0:0	8	"SUBTITLES"
stmts	14:8	14:36	5	
water	14:8	0:0	6	type
op	14:13	0:0	6	=
water	14:15	0:0	6	AVMEDIA_TYPE_SUBTITLE
water	14:36	0:0	6	;
else	15:4	18:19	2
stmts	15:9	18:19	3	
if	15:9	18:19	4	(!strcmp (info -> type ,"CLOSED-CAPTIONS" ))
cond	15:13	15:50	5	!strcmp (info -> type ,"CLOSED-CAPTIONS" )
op	15:13	0:0	6	!
call	15:14	15:50	6	strcmp
arg	15:21	15:31	7	info->type
water	15:21	0:0	8	info
op	15:25	0:0	8	->
water	15:27	0:0	8	type
arg	15:33	15:50	7	"CLOSED-CAPTIONS"
water	15:33	0:0	8	"CLOSED-CAPTIONS"
stmts	18:8	18:19	5	
return	18:8	18:19	6	NULL
water	18:15	0:0	7	NULL
if	19:4	20:19	2	(type == AVMEDIA_TYPE_UNKNOWN)
cond	19:8	19:16	3	type == AVMEDIA_TYPE_UNKNOWN
water	19:8	0:0	4	type
op	19:13	0:0	4	==
water	19:16	0:0	4	AVMEDIA_TYPE_UNKNOWN
stmts	20:8	20:19	3	
return	20:8	20:19	4	NULL
water	20:15	0:0	5	NULL
if	22:4	23:19	2	(type == AVMEDIA_TYPE_SUBTITLE && ! info -> uri [ 0 ])
cond	22:8	22:53	3	type == AVMEDIA_TYPE_SUBTITLE && ! info -> uri [ 0 ]
water	22:8	0:0	4	type
op	22:13	0:0	4	==
water	22:16	0:0	4	AVMEDIA_TYPE_SUBTITLE
op	22:38	0:0	4	&&
op	22:41	0:0	4	!
water	22:42	0:0	4	info
op	22:46	0:0	4	->
water	22:48	0:0	4	uri
op	22:51	0:0	4	[
water	22:52	0:0	4	0
op	22:53	0:0	4	]
stmts	23:8	23:19	3	
return	23:8	23:19	4	NULL
water	23:15	0:0	5	NULL
if	25:4	26:19	2	(type == AVMEDIA_TYPE_SUBTITLE)
cond	25:8	25:16	3	type == AVMEDIA_TYPE_SUBTITLE
water	25:8	0:0	4	type
op	25:13	0:0	4	==
water	25:16	0:0	4	AVMEDIA_TYPE_SUBTITLE
stmts	26:8	26:19	3	
return	26:8	26:19	4	NULL
water	26:15	0:0	5	NULL
water	27:4	0:0	2	rend
op	27:9	0:0	2	=
call	27:11	27:46	2	av_mallocz
arg	27:22	27:46	3	sizeof(structrendition)
op	27:22	0:0	4	sizeof
water	27:28	0:0	4	(
water	27:29	0:0	4	struct
water	27:36	0:0	4	rendition
water	27:45	0:0	4	)
water	27:47	0:0	2	;
if	28:4	29:19	2	(! rend)
cond	28:8	28:9	3	! rend
op	28:8	0:0	4	!
water	28:9	0:0	4	rend
stmts	29:8	29:19	3	
return	29:8	29:19	4	NULL
water	29:15	0:0	5	NULL
call	30:4	30:55	2	dynarray_add
arg	30:17	30:31	3	&c->renditions
op	30:17	0:0	4	&
water	30:18	0:0	4	c
op	30:19	0:0	4	->
water	30:21	0:0	4	renditions
arg	30:33	30:49	3	&c->n_renditions
op	30:33	0:0	4	&
water	30:34	0:0	4	c
op	30:35	0:0	4	->
water	30:37	0:0	4	n_renditions
arg	30:51	30:55	3	rend
water	30:51	0:0	4	rend
water	30:56	0:0	2	;
water	31:4	0:0	2	rend
op	31:8	0:0	2	->
water	31:10	0:0	2	type
op	31:15	0:0	2	=
water	31:17	0:0	2	type
water	31:21	0:0	2	;
call	32:4	32:41	2	strcpy
arg	32:11	32:25	3	rend->group_id
water	32:11	0:0	4	rend
op	32:15	0:0	4	->
water	32:17	0:0	4	group_id
arg	32:27	32:41	3	info->group_id
water	32:27	0:0	4	info
op	32:31	0:0	4	->
water	32:33	0:0	4	group_id
water	32:42	0:0	2	;
call	33:4	33:41	2	strcpy
arg	33:11	33:25	3	rend->language
water	33:11	0:0	4	rend
op	33:15	0:0	4	->
water	33:17	0:0	4	language
arg	33:27	33:41	3	info->language
water	33:27	0:0	4	info
op	33:31	0:0	4	->
water	33:33	0:0	4	language
water	33:42	0:0	2	;
call	34:4	34:33	2	strcpy
arg	34:11	34:21	3	rend->name
water	34:11	0:0	4	rend
op	34:15	0:0	4	->
water	34:17	0:0	4	name
arg	34:23	34:33	3	info->name
water	34:23	0:0	4	info
op	34:27	0:0	4	->
water	34:29	0:0	4	name
water	34:34	0:0	2	;
if	36:4	41:4	2	(info -> uri [ 0 ])
cond	36:8	36:19	3	info -> uri [ 0 ]
water	36:8	0:0	4	info
op	36:12	0:0	4	->
water	36:14	0:0	4	uri
op	36:17	0:0	4	[
water	36:18	0:0	4	0
op	36:19	0:0	4	]
stmts	36:22	41:4	3	
water	36:22	0:0	4	{
water	37:8	0:0	4	rend
op	37:12	0:0	4	->
water	37:14	0:0	4	playlist
op	37:23	0:0	4	=
call	37:25	37:60	4	new_playlist
arg	37:38	37:39	5	c
water	37:38	0:0	6	c
arg	37:41	37:50	5	info->uri
water	37:41	0:0	6	info
op	37:45	0:0	6	->
water	37:47	0:0	6	uri
arg	37:52	37:60	5	url_base
water	37:52	0:0	6	url_base
water	37:61	0:0	4	;
if	38:8	40:61	4	(rend -> playlist)
cond	38:12	38:18	5	rend -> playlist
water	38:12	0:0	6	rend
op	38:16	0:0	6	->
water	38:18	0:0	6	playlist
stmts	39:12	40:61	5	
call	39:12	40:60	6	dynarray_add
arg	39:25	39:52	7	&rend->playlist->renditions
op	39:25	0:0	8	&
water	39:26	0:0	8	rend
op	39:30	0:0	8	->
water	39:32	0:0	8	playlist
op	39:40	0:0	8	->
water	39:42	0:0	8	renditions
arg	40:25	40:54	7	&rend->playlist->n_renditions
op	40:25	0:0	8	&
water	40:26	0:0	8	rend
op	40:30	0:0	8	->
water	40:32	0:0	8	playlist
op	40:40	0:0	8	->
water	40:42	0:0	8	n_renditions
arg	40:56	40:60	7	rend
water	40:56	0:0	8	rend
water	40:61	0:0	6	;
water	41:4	0:0	4	}
if	42:4	49:4	2	(info -> assoc_language [ 0 ])
cond	42:8	42:30	3	info -> assoc_language [ 0 ]
water	42:8	0:0	4	info
op	42:12	0:0	4	->
water	42:14	0:0	4	assoc_language
op	42:28	0:0	4	[
water	42:29	0:0	4	0
op	42:30	0:0	4	]
stmts	42:33	49:4	3	
water	42:33	0:0	4	{
decl	43:8	43:44	4	int	langlen
op	43:20	0:0	4	=
call	43:22	43:43	5	strlen
arg	43:29	43:43	6	rend->language
water	43:29	0:0	7	rend
op	43:33	0:0	7	->
water	43:35	0:0	7	language
if	44:8	48:8	4	(langlen < sizeof ( rend -> language ) - 3)
cond	44:12	44:47	5	langlen < sizeof ( rend -> language ) - 3
water	44:12	0:0	6	langlen
op	44:20	0:0	6	<
op	44:22	0:0	6	sizeof
water	44:28	0:0	6	(
water	44:29	0:0	6	rend
op	44:33	0:0	6	->
water	44:35	0:0	6	language
water	44:43	0:0	6	)
op	44:45	0:0	6	-
water	44:47	0:0	6	3
stmts	44:50	48:8	5	
water	44:50	0:0	6	{
water	45:12	0:0	6	rend
op	45:16	0:0	6	->
water	45:18	0:0	6	language
op	45:26	0:0	6	[
water	45:27	0:0	6	langlen
op	45:34	0:0	6	]
op	45:36	0:0	6	=
water	45:38	0:0	6	','
water	45:41	0:0	6	;
call	46:12	47:56	6	strncpy
arg	46:20	46:48	7	rend->language+langlen+1
water	46:20	0:0	8	rend
op	46:24	0:0	8	->
water	46:26	0:0	8	language
op	46:35	0:0	8	+
water	46:37	0:0	8	langlen
op	46:45	0:0	8	+
water	46:47	0:0	8	1
arg	46:50	46:70	7	info->assoc_language
water	46:50	0:0	8	info
op	46:54	0:0	8	->
water	46:56	0:0	8	assoc_language
arg	47:20	47:56	7	sizeof(rend->language)-langlen-2
op	47:20	0:0	8	sizeof
water	47:26	0:0	8	(
water	47:27	0:0	8	rend
op	47:31	0:0	8	->
water	47:33	0:0	8	language
water	47:41	0:0	8	)
op	47:43	0:0	8	-
water	47:45	0:0	8	langlen
op	47:53	0:0	8	-
water	47:55	0:0	8	2
water	47:57	0:0	6	;
water	48:8	0:0	6	}
water	49:4	0:0	4	}
if	50:4	51:51	2	(!strcmp (info -> defaultr ,"YES" ))
cond	50:8	50:37	3	!strcmp (info -> defaultr ,"YES" )
op	50:8	0:0	4	!
call	50:9	50:37	4	strcmp
arg	50:16	50:30	5	info->defaultr
water	50:16	0:0	6	info
op	50:20	0:0	6	->
water	50:22	0:0	6	defaultr
arg	50:32	50:37	5	"YES"
water	50:32	0:0	6	"YES"
stmts	51:8	51:51	3	
water	51:8	0:0	4	rend
op	51:12	0:0	4	->
water	51:14	0:0	4	disposition
op	51:26	0:0	4	|=
water	51:29	0:0	4	AV_DISPOSITION_DEFAULT
water	51:51	0:0	4	;
if	52:4	53:50	2	(!strcmp (info -> forced ,"YES" ))
cond	52:8	52:35	3	!strcmp (info -> forced ,"YES" )
op	52:8	0:0	4	!
call	52:9	52:35	4	strcmp
arg	52:16	52:28	5	info->forced
water	52:16	0:0	6	info
op	52:20	0:0	6	->
water	52:22	0:0	6	forced
arg	52:30	52:35	5	"YES"
water	52:30	0:0	6	"YES"
stmts	53:8	53:50	3	
water	53:8	0:0	4	rend
op	53:12	0:0	4	->
water	53:14	0:0	4	disposition
op	53:26	0:0	4	|=
water	53:29	0:0	4	AV_DISPOSITION_FORCED
water	53:50	0:0	4	;
water	54:4	0:0	2	chr_ptr
op	54:12	0:0	2	=
water	54:14	0:0	2	info
op	54:18	0:0	2	->
water	54:20	0:0	2	characteristics
water	54:35	0:0	2	;
while	55:4	61:4	2	(( characteristic =av_strtok (chr_ptr ,"," ,& saveptr ) ))
cond	55:11	55:62	3	( characteristic =av_strtok (chr_ptr ,"," ,& saveptr ) )
water	55:11	0:0	4	(
water	55:12	0:0	4	characteristic
op	55:27	0:0	4	=
call	55:29	55:61	4	av_strtok
arg	55:39	55:46	5	chr_ptr
water	55:39	0:0	6	chr_ptr
arg	55:48	55:51	5	","
water	55:48	0:0	6	","
arg	55:53	55:61	5	&saveptr
op	55:53	0:0	6	&
water	55:54	0:0	6	saveptr
water	55:62	0:0	4	)
stmts	55:65	61:4	3	
water	55:65	0:0	4	{
if	56:8	57:64	4	(!strcmp (characteristic ,"public.accessibility.describes-music-and-sound" ))
cond	56:12	56:84	5	!strcmp (characteristic ,"public.accessibility.describes-music-and-sound" )
op	56:12	0:0	6	!
call	56:13	56:84	6	strcmp
arg	56:20	56:34	7	characteristic
water	56:20	0:0	8	characteristic
arg	56:36	56:84	7	"public.accessibility.describes-music-and-sound"
water	56:36	0:0	8	"public.accessibility.describes-music-and-sound"
stmts	57:12	57:64	5	
water	57:12	0:0	6	rend
op	57:16	0:0	6	->
water	57:18	0:0	6	disposition
op	57:30	0:0	6	|=
water	57:33	0:0	6	AV_DISPOSITION_HEARING_IMPAIRED
water	57:64	0:0	6	;
else	58:8	59:63	4
stmts	58:13	59:63	5	
if	58:13	59:63	6	(!strcmp (characteristic ,"public.accessibility.describes-video" ))
cond	58:17	58:79	7	!strcmp (characteristic ,"public.accessibility.describes-video" )
op	58:17	0:0	8	!
call	58:18	58:79	8	strcmp
arg	58:25	58:39	9	characteristic
water	58:25	0:0	10	characteristic
arg	58:41	58:79	9	"public.accessibility.describes-video"
water	58:41	0:0	10	"public.accessibility.describes-video"
stmts	59:12	59:63	7	
water	59:12	0:0	8	rend
op	59:16	0:0	8	->
water	59:18	0:0	8	disposition
op	59:30	0:0	8	|=
water	59:33	0:0	8	AV_DISPOSITION_VISUAL_IMPAIRED
water	59:63	0:0	8	;
water	60:8	0:0	4	chr_ptr
op	60:16	0:0	4	=
water	60:18	0:0	4	NULL
water	60:22	0:0	4	;
water	61:4	0:0	4	}
return	62:4	62:15	2	rend
water	62:11	0:0	3	rend

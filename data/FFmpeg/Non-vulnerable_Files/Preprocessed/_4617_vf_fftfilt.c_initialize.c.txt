func	1:15	29:0	0	int	initialize
params	1:29	0:0	1	
param	1:30	1:50	2	AVFilterContext *	ctx
stmnts	0:0	28:14	1	
decl	3:4	3:39	2	FFTFILTContext	*fftfilt
op	3:28	0:0	2	=
water	3:30	0:0	2	ctx
op	3:33	0:0	2	->
water	3:35	0:0	2	priv
decl	4:4	4:22	2	int	ret
op	4:12	0:0	2	=
water	4:14	0:0	2	0
water	4:15	0:0	2	,
decl	4:4	4:22	2	int	plane
if	5:4	8:4	2	(! fftfilt -> dc [ U ] && ! fftfilt -> dc [ V ])
cond	5:8	5:41	3	! fftfilt -> dc [ U ] && ! fftfilt -> dc [ V ]
op	5:8	0:0	4	!
water	5:9	0:0	4	fftfilt
op	5:16	0:0	4	->
water	5:18	0:0	4	dc
op	5:20	0:0	4	[
water	5:21	0:0	4	U
op	5:22	0:0	4	]
op	5:24	0:0	4	&&
op	5:27	0:0	4	!
water	5:28	0:0	4	fftfilt
op	5:35	0:0	4	->
water	5:37	0:0	4	dc
op	5:39	0:0	4	[
water	5:40	0:0	4	V
op	5:41	0:0	4	]
stmts	5:44	8:4	3	
water	5:44	0:0	4	{
water	6:8	0:0	4	fftfilt
op	6:15	0:0	4	->
water	6:17	0:0	4	dc
op	6:19	0:0	4	[
water	6:20	0:0	4	U
op	6:21	0:0	4	]
op	6:23	0:0	4	=
water	6:25	0:0	4	fftfilt
op	6:32	0:0	4	->
water	6:34	0:0	4	dc
op	6:36	0:0	4	[
water	6:37	0:0	4	Y
op	6:38	0:0	4	]
water	6:39	0:0	4	;
water	7:8	0:0	4	fftfilt
op	7:15	0:0	4	->
water	7:17	0:0	4	dc
op	7:19	0:0	4	[
water	7:20	0:0	4	V
op	7:21	0:0	4	]
op	7:23	0:0	4	=
water	7:25	0:0	4	fftfilt
op	7:32	0:0	4	->
water	7:34	0:0	4	dc
op	7:36	0:0	4	[
water	7:37	0:0	4	Y
op	7:38	0:0	4	]
water	7:39	0:0	4	;
water	8:4	0:0	4	}
else	8:6	11:4	2
stmts	8:11	11:4	3	
water	8:11	0:0	4	{
if	9:8	9:60	4	(! fftfilt -> dc [ U ])
cond	9:12	9:26	5	! fftfilt -> dc [ U ]
op	9:12	0:0	6	!
water	9:13	0:0	6	fftfilt
op	9:20	0:0	6	->
water	9:22	0:0	6	dc
op	9:24	0:0	6	[
water	9:25	0:0	6	U
op	9:26	0:0	6	]
stmts	9:29	9:60	5	
water	9:29	0:0	6	fftfilt
op	9:36	0:0	6	->
water	9:38	0:0	6	dc
op	9:40	0:0	6	[
water	9:41	0:0	6	U
op	9:42	0:0	6	]
op	9:44	0:0	6	=
water	9:46	0:0	6	fftfilt
op	9:53	0:0	6	->
water	9:55	0:0	6	dc
op	9:57	0:0	6	[
water	9:58	0:0	6	V
op	9:59	0:0	6	]
water	9:60	0:0	6	;
if	10:8	10:60	4	(! fftfilt -> dc [ V ])
cond	10:12	10:26	5	! fftfilt -> dc [ V ]
op	10:12	0:0	6	!
water	10:13	0:0	6	fftfilt
op	10:20	0:0	6	->
water	10:22	0:0	6	dc
op	10:24	0:0	6	[
water	10:25	0:0	6	V
op	10:26	0:0	6	]
stmts	10:29	10:60	5	
water	10:29	0:0	6	fftfilt
op	10:36	0:0	6	->
water	10:38	0:0	6	dc
op	10:40	0:0	6	[
water	10:41	0:0	6	V
op	10:42	0:0	6	]
op	10:44	0:0	6	=
water	10:46	0:0	6	fftfilt
op	10:53	0:0	6	->
water	10:55	0:0	6	dc
op	10:57	0:0	6	[
water	10:58	0:0	6	U
op	10:59	0:0	6	]
water	10:60	0:0	6	;
water	11:4	0:0	4	}
if	12:4	15:4	2	(! fftfilt -> weight_str [ U ] && ! fftfilt -> weight_str [ V ])
cond	12:8	12:57	3	! fftfilt -> weight_str [ U ] && ! fftfilt -> weight_str [ V ]
op	12:8	0:0	4	!
water	12:9	0:0	4	fftfilt
op	12:16	0:0	4	->
water	12:18	0:0	4	weight_str
op	12:28	0:0	4	[
water	12:29	0:0	4	U
op	12:30	0:0	4	]
op	12:32	0:0	4	&&
op	12:35	0:0	4	!
water	12:36	0:0	4	fftfilt
op	12:43	0:0	4	->
water	12:45	0:0	4	weight_str
op	12:55	0:0	4	[
water	12:56	0:0	4	V
op	12:57	0:0	4	]
stmts	12:60	15:4	3	
water	12:60	0:0	4	{
water	13:8	0:0	4	fftfilt
op	13:15	0:0	4	->
water	13:17	0:0	4	weight_str
op	13:27	0:0	4	[
water	13:28	0:0	4	U
op	13:29	0:0	4	]
op	13:31	0:0	4	=
call	13:33	13:65	4	av_strdup
arg	13:43	13:65	5	fftfilt->weight_str[Y]
water	13:43	0:0	6	fftfilt
op	13:50	0:0	6	->
water	13:52	0:0	6	weight_str
op	13:62	0:0	6	[
water	13:63	0:0	6	Y
op	13:64	0:0	6	]
water	13:66	0:0	4	;
water	14:8	0:0	4	fftfilt
op	14:15	0:0	4	->
water	14:17	0:0	4	weight_str
op	14:27	0:0	4	[
water	14:28	0:0	4	V
op	14:29	0:0	4	]
op	14:31	0:0	4	=
call	14:33	14:65	4	av_strdup
arg	14:43	14:65	5	fftfilt->weight_str[Y]
water	14:43	0:0	6	fftfilt
op	14:50	0:0	6	->
water	14:52	0:0	6	weight_str
op	14:62	0:0	6	[
water	14:63	0:0	6	Y
op	14:64	0:0	6	]
water	14:66	0:0	4	;
water	15:4	0:0	4	}
else	15:6	18:4	2
stmts	15:11	18:4	3	
water	15:11	0:0	4	{
if	16:8	16:95	4	(! fftfilt -> weight_str [ U ])
cond	16:12	16:34	5	! fftfilt -> weight_str [ U ]
op	16:12	0:0	6	!
water	16:13	0:0	6	fftfilt
op	16:20	0:0	6	->
water	16:22	0:0	6	weight_str
op	16:32	0:0	6	[
water	16:33	0:0	6	U
op	16:34	0:0	6	]
stmts	16:37	16:95	5	
water	16:37	0:0	6	fftfilt
op	16:44	0:0	6	->
water	16:46	0:0	6	weight_str
op	16:56	0:0	6	[
water	16:57	0:0	6	U
op	16:58	0:0	6	]
op	16:60	0:0	6	=
call	16:62	16:94	6	av_strdup
arg	16:72	16:94	7	fftfilt->weight_str[V]
water	16:72	0:0	8	fftfilt
op	16:79	0:0	8	->
water	16:81	0:0	8	weight_str
op	16:91	0:0	8	[
water	16:92	0:0	8	V
op	16:93	0:0	8	]
water	16:95	0:0	6	;
if	17:8	17:95	4	(! fftfilt -> weight_str [ V ])
cond	17:12	17:34	5	! fftfilt -> weight_str [ V ]
op	17:12	0:0	6	!
water	17:13	0:0	6	fftfilt
op	17:20	0:0	6	->
water	17:22	0:0	6	weight_str
op	17:32	0:0	6	[
water	17:33	0:0	6	V
op	17:34	0:0	6	]
stmts	17:37	17:95	5	
water	17:37	0:0	6	fftfilt
op	17:44	0:0	6	->
water	17:46	0:0	6	weight_str
op	17:56	0:0	6	[
water	17:57	0:0	6	V
op	17:58	0:0	6	]
op	17:60	0:0	6	=
call	17:62	17:94	6	av_strdup
arg	17:72	17:94	7	fftfilt->weight_str[U]
water	17:72	0:0	8	fftfilt
op	17:79	0:0	8	->
water	17:81	0:0	8	weight_str
op	17:91	0:0	8	[
water	17:92	0:0	8	U
op	17:93	0:0	8	]
water	17:95	0:0	6	;
water	18:4	0:0	4	}
for	19:4	27:4	2	(plane = 0 ;plane < 3;plane ++)
forinit	19:9	19:18	3	plane = 0 ;
water	19:9	0:0	4	plane
op	19:15	0:0	4	=
water	19:17	0:0	4	0
water	19:18	0:0	4	;
cond	19:20	19:28	3	plane < 3
water	19:20	0:0	4	plane
op	19:26	0:0	4	<
water	19:28	0:0	4	3
forexpr	19:31	19:36	3	plane ++
water	19:31	0:0	4	plane
op	19:36	0:0	4	++
stmts	19:40	27:4	3	
water	19:40	0:0	4	{
water	20:8	0:0	4	static
call	20:15	20:27	4	double
arg	20:23	20:27	5	*p[]
op	20:23	0:0	6	*
water	20:24	0:0	6	p
op	20:25	0:0	6	[
op	20:26	0:0	6	]
water	20:28	0:0	4	(
water	20:29	0:0	4	void
op	20:34	0:0	4	*
water	20:35	0:0	4	,
water	20:37	0:0	4	double
water	20:43	0:0	4	,
water	20:45	0:0	4	double
water	20:51	0:0	4	)
op	20:53	0:0	4	=
water	20:55	0:0	4	{
water	20:57	0:0	4	weight_Y
water	20:65	0:0	4	,
water	20:67	0:0	4	weight_U
water	20:75	0:0	4	,
water	20:77	0:0	4	weight_V
water	20:86	0:0	4	}
water	20:87	0:0	4	;
water	21:8	0:0	4	const
water	21:14	0:0	4	char
op	21:19	0:0	4	*
water	21:20	0:0	4	const
water	21:26	0:0	4	func2_names
op	21:37	0:0	4	[
op	21:38	0:0	4	]
op	21:40	0:0	4	=
water	21:42	0:0	4	{
water	21:43	0:0	4	"weight_Y"
water	21:53	0:0	4	,
water	21:55	0:0	4	"weight_U"
water	21:65	0:0	4	,
water	21:67	0:0	4	"weight_V"
water	21:77	0:0	4	,
water	21:79	0:0	4	NULL
water	21:84	0:0	4	}
water	21:85	0:0	4	;
call	22:8	22:24	4	double
arg	22:16	22:24	5	*func2[]
op	22:16	0:0	6	*
water	22:17	0:0	6	func2
op	22:22	0:0	6	[
op	22:23	0:0	6	]
water	22:25	0:0	4	(
water	22:26	0:0	4	void
op	22:31	0:0	4	*
water	22:32	0:0	4	,
water	22:34	0:0	4	double
water	22:40	0:0	4	,
water	22:42	0:0	4	double
water	22:48	0:0	4	)
op	22:50	0:0	4	=
water	22:52	0:0	4	{
water	22:54	0:0	4	weight_Y
water	22:62	0:0	4	,
water	22:64	0:0	4	weight_U
water	22:72	0:0	4	,
water	22:74	0:0	4	weight_V
water	22:82	0:0	4	,
water	22:84	0:0	4	p
op	22:85	0:0	4	[
water	22:86	0:0	4	plane
op	22:91	0:0	4	]
water	22:92	0:0	4	,
water	22:94	0:0	4	NULL
water	22:99	0:0	4	}
water	22:100	0:0	4	;
water	23:8	0:0	4	ret
op	23:12	0:0	4	=
call	23:14	24:66	4	av_expr_parse
arg	23:28	23:56	5	&fftfilt->weight_expr[plane]
op	23:28	0:0	6	&
water	23:29	0:0	6	fftfilt
op	23:36	0:0	6	->
water	23:38	0:0	6	weight_expr
op	23:49	0:0	6	[
water	23:50	0:0	6	plane
op	23:55	0:0	6	]
arg	23:58	23:84	5	fftfilt->weight_str[plane]
water	23:58	0:0	6	fftfilt
op	23:65	0:0	6	->
water	23:67	0:0	6	weight_str
op	23:77	0:0	6	[
water	23:78	0:0	6	plane
op	23:83	0:0	6	]
arg	23:86	23:95	5	var_names
water	23:86	0:0	6	var_names
arg	24:28	24:32	5	NULL
water	24:28	0:0	6	NULL
arg	24:34	24:38	5	NULL
water	24:34	0:0	6	NULL
arg	24:40	24:51	5	func2_names
water	24:40	0:0	6	func2_names
arg	24:53	24:58	5	func2
water	24:53	0:0	6	func2
arg	24:60	24:61	5	0
water	24:60	0:0	6	0
arg	24:63	24:66	5	ctx
water	24:63	0:0	6	ctx
water	24:67	0:0	4	;
if	25:8	26:17	4	(ret < 0)
cond	25:12	25:18	5	ret < 0
water	25:12	0:0	6	ret
op	25:16	0:0	6	<
water	25:18	0:0	6	0
stmts	26:12	26:17	5	
break	26:12	26:17	6	
water	27:4	0:0	4	}
return	28:4	28:14	2	ret
water	28:11	0:0	3	ret

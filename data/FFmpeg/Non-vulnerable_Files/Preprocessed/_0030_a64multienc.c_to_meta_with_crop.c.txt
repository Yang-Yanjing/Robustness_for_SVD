func	1:0	29:0	0	static void	to_meta_with_crop
params	1:29	0:0	1	
param	1:30	1:51	2	AVCodecContext *	avctx
param	2:30	2:46	2	const AVFrame *	p
param	2:48	2:57	2	int *	dest
stmnts	0:0	28:4	1	
decl	4:4	4:28	2	int	blockx
water	4:14	0:0	2	,
decl	4:4	4:28	2	int	blocky
water	4:22	0:0	2	,
decl	4:4	4:28	2	int	x
water	4:25	0:0	2	,
decl	4:4	4:28	2	int	y
decl	5:4	5:16	2	int	luma
op	5:13	0:0	2	=
water	5:15	0:0	2	0
decl	6:4	6:46	2	int	height
op	6:15	0:0	2	=
call	6:17	6:45	3	FFMIN
arg	6:23	6:36	4	avctx->height
water	6:23	0:0	5	avctx
op	6:28	0:0	5	->
water	6:30	0:0	5	height
arg	6:38	6:45	4	C64YRES
water	6:38	0:0	5	C64YRES
decl	7:4	7:46	2	int	width
op	7:15	0:0	2	=
call	7:17	7:45	3	FFMIN
arg	7:23	7:36	4	avctx->width
water	7:23	0:0	5	avctx
op	7:28	0:0	5	->
water	7:30	0:0	5	width
arg	7:38	7:45	4	C64XRES
water	7:38	0:0	5	C64XRES
decl	8:4	8:29	2	uint8_t	*src
op	8:17	0:0	2	=
water	8:19	0:0	2	p
op	8:20	0:0	2	->
water	8:22	0:0	2	data
op	8:26	0:0	2	[
water	8:27	0:0	2	0
op	8:28	0:0	2	]
for	9:4	28:4	2	(blocky = 0 ;blocky < C64YRES;blocky += 8)
forinit	9:9	9:19	3	blocky = 0 ;
water	9:9	0:0	4	blocky
op	9:16	0:0	4	=
water	9:18	0:0	4	0
water	9:19	0:0	4	;
cond	9:21	9:30	3	blocky < C64YRES
water	9:21	0:0	4	blocky
op	9:28	0:0	4	<
water	9:30	0:0	4	C64YRES
forexpr	9:39	9:49	3	blocky += 8
water	9:39	0:0	4	blocky
op	9:46	0:0	4	+=
water	9:49	0:0	4	8
stmts	9:52	28:4	3	
water	9:52	0:0	4	{
for	10:8	27:8	4	(blockx = 0 ;blockx < C64XRES;blockx += 8)
forinit	10:13	10:23	5	blockx = 0 ;
water	10:13	0:0	6	blockx
op	10:20	0:0	6	=
water	10:22	0:0	6	0
water	10:23	0:0	6	;
cond	10:25	10:34	5	blockx < C64XRES
water	10:25	0:0	6	blockx
op	10:32	0:0	6	<
water	10:34	0:0	6	C64XRES
forexpr	10:43	10:53	5	blockx += 8
water	10:43	0:0	6	blockx
op	10:50	0:0	6	+=
water	10:53	0:0	6	8
stmts	10:56	27:8	5	
water	10:56	0:0	6	{
for	11:12	26:12	6	(y = blocky ;y < blocky + 8 && y < C64YRES;y ++)
forinit	11:17	11:27	7	y = blocky ;
water	11:17	0:0	8	y
op	11:19	0:0	8	=
water	11:21	0:0	8	blocky
water	11:27	0:0	8	;
cond	11:29	11:51	7	y < blocky + 8 && y < C64YRES
water	11:29	0:0	8	y
op	11:31	0:0	8	<
water	11:33	0:0	8	blocky
op	11:40	0:0	8	+
water	11:42	0:0	8	8
op	11:44	0:0	8	&&
water	11:47	0:0	8	y
op	11:49	0:0	8	<
water	11:51	0:0	8	C64YRES
forexpr	11:60	11:61	7	y ++
water	11:60	0:0	8	y
op	11:61	0:0	8	++
stmts	11:65	26:12	7	
water	11:65	0:0	8	{
for	12:16	25:16	8	(x = blockx ;x < blockx + 8 && x < C64XRES;x += 2)
forinit	12:21	12:31	9	x = blockx ;
water	12:21	0:0	10	x
op	12:23	0:0	10	=
water	12:25	0:0	10	blockx
water	12:31	0:0	10	;
cond	12:33	12:55	9	x < blockx + 8 && x < C64XRES
water	12:33	0:0	10	x
op	12:35	0:0	10	<
water	12:37	0:0	10	blockx
op	12:44	0:0	10	+
water	12:46	0:0	10	8
op	12:48	0:0	10	&&
water	12:51	0:0	10	x
op	12:53	0:0	10	<
water	12:55	0:0	10	C64XRES
forexpr	12:64	12:69	9	x += 2
water	12:64	0:0	10	x
op	12:66	0:0	10	+=
water	12:69	0:0	10	2
stmts	12:72	25:16	9	
water	12:72	0:0	10	{
if	13:20	23:20	10	(x < width && y < height)
cond	13:23	13:40	11	x < width && y < height
water	13:23	0:0	12	x
op	13:25	0:0	12	<
water	13:27	0:0	12	width
op	13:33	0:0	12	&&
water	13:36	0:0	12	y
op	13:38	0:0	12	<
water	13:40	0:0	12	height
stmts	13:48	23:20	11	
water	13:48	0:0	12	{
if	14:24	18:24	12	(x + 1 < width)
cond	14:28	14:36	13	x + 1 < width
water	14:28	0:0	14	x
op	14:30	0:0	14	+
water	14:32	0:0	14	1
op	14:34	0:0	14	<
water	14:36	0:0	14	width
stmts	14:43	18:24	13	
water	14:43	0:0	14	{
water	16:28	0:0	14	luma
op	16:33	0:0	14	=
water	16:35	0:0	14	(
water	16:36	0:0	14	src
op	16:39	0:0	14	[
water	16:40	0:0	14	(
water	16:41	0:0	14	x
op	16:43	0:0	14	+
water	16:45	0:0	14	0
op	16:47	0:0	14	+
water	16:49	0:0	14	y
op	16:51	0:0	14	*
water	16:53	0:0	14	p
op	16:54	0:0	14	->
water	16:56	0:0	14	linesize
op	16:64	0:0	14	[
water	16:65	0:0	14	0
op	16:66	0:0	14	]
water	16:67	0:0	14	)
op	16:68	0:0	14	]
op	16:70	0:0	14	+
water	17:36	0:0	14	src
op	17:39	0:0	14	[
water	17:40	0:0	14	(
water	17:41	0:0	14	x
op	17:43	0:0	14	+
water	17:45	0:0	14	1
op	17:47	0:0	14	+
water	17:49	0:0	14	y
op	17:51	0:0	14	*
water	17:53	0:0	14	p
op	17:54	0:0	14	->
water	17:56	0:0	14	linesize
op	17:64	0:0	14	[
water	17:65	0:0	14	0
op	17:66	0:0	14	]
water	17:67	0:0	14	)
op	17:68	0:0	14	]
water	17:69	0:0	14	)
op	17:71	0:0	14	/
water	17:73	0:0	14	2
water	17:74	0:0	14	;
water	18:24	0:0	14	}
else	18:26	20:24	12
stmts	18:31	20:24	13	
water	18:31	0:0	14	{
water	19:28	0:0	14	luma
op	19:33	0:0	14	=
water	19:35	0:0	14	src
op	19:38	0:0	14	[
water	19:39	0:0	14	(
water	19:40	0:0	14	x
op	19:42	0:0	14	+
water	19:44	0:0	14	y
op	19:46	0:0	14	*
water	19:48	0:0	14	p
op	19:49	0:0	14	->
water	19:51	0:0	14	linesize
op	19:59	0:0	14	[
water	19:60	0:0	14	0
op	19:61	0:0	14	]
water	19:62	0:0	14	)
op	19:63	0:0	14	]
water	19:64	0:0	14	;
water	20:24	0:0	14	}
water	22:24	0:0	12	dest
op	22:28	0:0	12	[
water	22:29	0:0	12	0
op	22:30	0:0	12	]
op	22:32	0:0	12	=
water	22:34	0:0	12	luma
water	22:38	0:0	12	;
water	23:20	0:0	12	}
water	24:20	0:0	10	dest
op	24:24	0:0	10	++
water	24:26	0:0	10	;
water	25:16	0:0	10	}
water	26:12	0:0	8	}
water	27:8	0:0	6	}
water	28:4	0:0	4	}

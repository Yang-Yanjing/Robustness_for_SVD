func	1:24	17:0	0	void	rgb64ToUV_c_template
params	2:20	0:0	1	
param	2:21	2:35	2	uint16_t *	dstU
param	2:37	2:51	2	uint16_t *	dstV
param	3:20	3:40	2	const uint16_t *	src1
param	3:42	3:62	2	const uint16_t *	src2
param	4:20	4:29	2	int	width
param	4:31	4:56	2	enum AVPixelFormat	origin
param	4:58	4:74	2	int32_t *	rgb2yuv
stmnts	0:0	16:4	1	
decl	6:4	6:9	2	int	i
decl	7:4	7:76	2	int32_t	ru
op	7:15	0:0	2	=
water	7:17	0:0	2	rgb2yuv
op	7:24	0:0	2	[
water	7:25	0:0	2	RU_IDX
op	7:31	0:0	2	]
water	7:32	0:0	2	,
decl	7:4	7:76	2	int32_t	gu
op	7:37	0:0	2	=
water	7:39	0:0	2	rgb2yuv
op	7:46	0:0	2	[
water	7:47	0:0	2	GU_IDX
op	7:53	0:0	2	]
water	7:54	0:0	2	,
decl	7:4	7:76	2	int32_t	bu
op	7:59	0:0	2	=
water	7:61	0:0	2	rgb2yuv
op	7:68	0:0	2	[
water	7:69	0:0	2	BU_IDX
op	7:75	0:0	2	]
decl	8:4	8:76	2	int32_t	rv
op	8:15	0:0	2	=
water	8:17	0:0	2	rgb2yuv
op	8:24	0:0	2	[
water	8:25	0:0	2	RV_IDX
op	8:31	0:0	2	]
water	8:32	0:0	2	,
decl	8:4	8:76	2	int32_t	gv
op	8:37	0:0	2	=
water	8:39	0:0	2	rgb2yuv
op	8:46	0:0	2	[
water	8:47	0:0	2	GV_IDX
op	8:53	0:0	2	]
water	8:54	0:0	2	,
decl	8:4	8:76	2	int32_t	bv
op	8:59	0:0	2	=
water	8:61	0:0	2	rgb2yuv
op	8:68	0:0	2	[
water	8:69	0:0	2	BV_IDX
op	8:75	0:0	2	]
call	9:4	9:25	2	av_assert1
arg	9:15	9:25	3	src1==src2
water	9:15	0:0	4	src1
op	9:19	0:0	4	==
water	9:21	0:0	4	src2
water	9:26	0:0	2	;
for	10:4	16:4	2	(i = 0 ;i < width;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:20	3	i < width
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	width
forexpr	10:27	10:28	3	i ++
water	10:27	0:0	4	i
op	10:28	0:0	4	++
stmts	10:32	16:4	3	
water	10:32	0:0	4	{
decl	11:8	11:43	4	int	r_b
op	11:16	0:0	4	=
call	11:18	11:42	5	input_pixel
arg	11:30	11:42	6	&src1[i*4+0]
op	11:30	0:0	7	&
water	11:31	0:0	7	src1
op	11:35	0:0	7	[
water	11:36	0:0	7	i
op	11:37	0:0	7	*
water	11:38	0:0	7	4
op	11:39	0:0	7	+
water	11:40	0:0	7	0
op	11:41	0:0	7	]
decl	12:8	12:43	4	int	g
op	12:16	0:0	4	=
call	12:18	12:42	5	input_pixel
arg	12:30	12:42	6	&src1[i*4+1]
op	12:30	0:0	7	&
water	12:31	0:0	7	src1
op	12:35	0:0	7	[
water	12:36	0:0	7	i
op	12:37	0:0	7	*
water	12:38	0:0	7	4
op	12:39	0:0	7	+
water	12:40	0:0	7	1
op	12:41	0:0	7	]
decl	13:8	13:43	4	int	b_r
op	13:16	0:0	4	=
call	13:18	13:42	5	input_pixel
arg	13:30	13:42	6	&src1[i*4+2]
op	13:30	0:0	7	&
water	13:31	0:0	7	src1
op	13:35	0:0	7	[
water	13:36	0:0	7	i
op	13:37	0:0	7	*
water	13:38	0:0	7	4
op	13:39	0:0	7	+
water	13:40	0:0	7	2
op	13:41	0:0	7	]
water	14:8	0:0	4	dstU
op	14:12	0:0	4	[
water	14:13	0:0	4	i
op	14:14	0:0	4	]
op	14:16	0:0	4	=
water	14:18	0:0	4	(
water	14:19	0:0	4	ru
op	14:21	0:0	4	*
water	14:22	0:0	4	r
op	14:24	0:0	4	+
water	14:26	0:0	4	gu
op	14:28	0:0	4	*
water	14:29	0:0	4	g
op	14:31	0:0	4	+
water	14:33	0:0	4	bu
op	14:35	0:0	4	*
water	14:36	0:0	4	b
op	14:38	0:0	4	+
water	14:40	0:0	4	(
water	14:41	0:0	4	0
water	14:42	0:0	4	x10001
op	14:48	0:0	4	<<
water	14:50	0:0	4	(
water	14:51	0:0	4	RGB2YUV_SHIFT
op	14:64	0:0	4	-
water	14:65	0:0	4	1
water	14:66	0:0	4	)
water	14:67	0:0	4	)
water	14:68	0:0	4	)
op	14:70	0:0	4	>>
water	14:73	0:0	4	RGB2YUV_SHIFT
water	14:86	0:0	4	;
water	15:8	0:0	4	dstV
op	15:12	0:0	4	[
water	15:13	0:0	4	i
op	15:14	0:0	4	]
op	15:16	0:0	4	=
water	15:18	0:0	4	(
water	15:19	0:0	4	rv
op	15:21	0:0	4	*
water	15:22	0:0	4	r
op	15:24	0:0	4	+
water	15:26	0:0	4	gv
op	15:28	0:0	4	*
water	15:29	0:0	4	g
op	15:31	0:0	4	+
water	15:33	0:0	4	bv
op	15:35	0:0	4	*
water	15:36	0:0	4	b
op	15:38	0:0	4	+
water	15:40	0:0	4	(
water	15:41	0:0	4	0
water	15:42	0:0	4	x10001
op	15:48	0:0	4	<<
water	15:50	0:0	4	(
water	15:51	0:0	4	RGB2YUV_SHIFT
op	15:64	0:0	4	-
water	15:65	0:0	4	1
water	15:66	0:0	4	)
water	15:67	0:0	4	)
water	15:68	0:0	4	)
op	15:70	0:0	4	>>
water	15:73	0:0	4	RGB2YUV_SHIFT
water	15:86	0:0	4	;
water	16:4	0:0	4	}

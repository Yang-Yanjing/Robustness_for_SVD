func	1:0	41:0	0	static int	mov_get_codec_tag
params	1:28	0:0	1	
param	1:29	1:47	2	AVFormatContext *	s
param	1:49	1:64	2	MOVTrack *	track
stmnts	0:0	40:14	1	
decl	3:4	3:35	2	int	tag
op	3:12	0:0	2	=
water	3:14	0:0	2	track
op	3:19	0:0	2	->
water	3:21	0:0	2	enc
op	3:24	0:0	2	->
water	3:26	0:0	2	codec_tag
if	4:4	39:4	2	(! tag || ( s -> strict_std_compliance >= FF_COMPLIANCE_NORMAL && ( track -> enc -> codec_id == AV_CODEC_ID_DVVIDEO || track -> enc -> codec_id == AV_CODEC_ID_RAWVIDEO || track -> enc -> codec_id == AV_CODEC_ID_H263 || track -> enc -> codec_id == AV_CODEC_ID_H264 || track -> enc -> codec_id == AV_CODEC_ID_MPEG2VIDEO ||av_get_bits_per_sample (track -> enc -> codec_id ) ) ))
cond	4:8	10:63	3	! tag || ( s -> strict_std_compliance >= FF_COMPLIANCE_NORMAL && ( track -> enc -> codec_id == AV_CODEC_ID_DVVIDEO || track -> enc -> codec_id == AV_CODEC_ID_RAWVIDEO || track -> enc -> codec_id == AV_CODEC_ID_H263 || track -> enc -> codec_id == AV_CODEC_ID_H264 || track -> enc -> codec_id == AV_CODEC_ID_MPEG2VIDEO ||av_get_bits_per_sample (track -> enc -> codec_id ) ) )
op	4:8	0:0	4	!
water	4:9	0:0	4	tag
op	4:13	0:0	4	||
water	4:16	0:0	4	(
water	4:17	0:0	4	s
op	4:18	0:0	4	->
water	4:20	0:0	4	strict_std_compliance
op	4:42	0:0	4	>=
water	4:45	0:0	4	FF_COMPLIANCE_NORMAL
op	4:66	0:0	4	&&
water	5:17	0:0	4	(
water	5:18	0:0	4	track
op	5:23	0:0	4	->
water	5:25	0:0	4	enc
op	5:28	0:0	4	->
water	5:30	0:0	4	codec_id
op	5:39	0:0	4	==
water	5:42	0:0	4	AV_CODEC_ID_DVVIDEO
op	5:62	0:0	4	||
water	6:18	0:0	4	track
op	6:23	0:0	4	->
water	6:25	0:0	4	enc
op	6:28	0:0	4	->
water	6:30	0:0	4	codec_id
op	6:39	0:0	4	==
water	6:42	0:0	4	AV_CODEC_ID_RAWVIDEO
op	6:63	0:0	4	||
water	7:18	0:0	4	track
op	7:23	0:0	4	->
water	7:25	0:0	4	enc
op	7:28	0:0	4	->
water	7:30	0:0	4	codec_id
op	7:39	0:0	4	==
water	7:42	0:0	4	AV_CODEC_ID_H263
op	7:59	0:0	4	||
water	8:18	0:0	4	track
op	8:23	0:0	4	->
water	8:25	0:0	4	enc
op	8:28	0:0	4	->
water	8:30	0:0	4	codec_id
op	8:39	0:0	4	==
water	8:42	0:0	4	AV_CODEC_ID_H264
op	8:59	0:0	4	||
water	9:18	0:0	4	track
op	9:23	0:0	4	->
water	9:25	0:0	4	enc
op	9:28	0:0	4	->
water	9:30	0:0	4	codec_id
op	9:39	0:0	4	==
water	9:42	0:0	4	AV_CODEC_ID_MPEG2VIDEO
op	9:65	0:0	4	||
call	10:18	10:61	4	av_get_bits_per_sample
arg	10:41	10:61	5	track->enc->codec_id
water	10:41	0:0	6	track
op	10:46	0:0	6	->
water	10:48	0:0	6	enc
op	10:51	0:0	6	->
water	10:53	0:0	6	codec_id
water	10:62	0:0	4	)
water	10:63	0:0	4	)
stmts	10:66	39:4	3	
water	10:66	0:0	4	{
if	11:8	12:48	4	(track -> enc -> codec_id == AV_CODEC_ID_DVVIDEO)
cond	11:12	11:36	5	track -> enc -> codec_id == AV_CODEC_ID_DVVIDEO
water	11:12	0:0	6	track
op	11:17	0:0	6	->
water	11:19	0:0	6	enc
op	11:22	0:0	6	->
water	11:24	0:0	6	codec_id
op	11:33	0:0	6	==
water	11:36	0:0	6	AV_CODEC_ID_DVVIDEO
stmts	12:12	12:48	5	
water	12:12	0:0	6	tag
op	12:16	0:0	6	=
call	12:18	12:47	6	mov_get_dv_codec_tag
arg	12:39	12:40	7	s
water	12:39	0:0	8	s
arg	12:42	12:47	7	track
water	12:42	0:0	8	track
water	12:48	0:0	6	;
else	13:8	14:54	4
stmts	13:13	14:54	5	
if	13:13	14:54	6	(track -> enc -> codec_id == AV_CODEC_ID_RAWVIDEO)
cond	13:17	13:41	7	track -> enc -> codec_id == AV_CODEC_ID_RAWVIDEO
water	13:17	0:0	8	track
op	13:22	0:0	8	->
water	13:24	0:0	8	enc
op	13:27	0:0	8	->
water	13:29	0:0	8	codec_id
op	13:38	0:0	8	==
water	13:41	0:0	8	AV_CODEC_ID_RAWVIDEO
stmts	14:12	14:54	7	
water	14:12	0:0	8	tag
op	14:16	0:0	8	=
call	14:18	14:53	8	mov_get_rawvideo_codec_tag
arg	14:45	14:46	9	s
water	14:45	0:0	10	s
arg	14:48	14:53	9	track
water	14:48	0:0	10	track
water	14:54	0:0	8	;
else	15:8	16:57	4
stmts	15:13	16:57	5	
if	15:13	16:57	6	(track -> enc -> codec_id == AV_CODEC_ID_MPEG2VIDEO)
cond	15:17	15:41	7	track -> enc -> codec_id == AV_CODEC_ID_MPEG2VIDEO
water	15:17	0:0	8	track
op	15:22	0:0	8	->
water	15:24	0:0	8	enc
op	15:27	0:0	8	->
water	15:29	0:0	8	codec_id
op	15:38	0:0	8	==
water	15:41	0:0	8	AV_CODEC_ID_MPEG2VIDEO
stmts	16:12	16:57	7	
water	16:12	0:0	8	tag
op	16:16	0:0	8	=
call	16:18	16:56	8	mov_get_mpeg2_xdcam_codec_tag
arg	16:48	16:49	9	s
water	16:48	0:0	10	s
arg	16:51	16:56	9	track
water	16:51	0:0	10	track
water	16:57	0:0	8	;
else	17:8	18:50	4
stmts	17:13	18:50	5	
if	17:13	18:50	6	(track -> enc -> codec_id == AV_CODEC_ID_H264)
cond	17:17	17:41	7	track -> enc -> codec_id == AV_CODEC_ID_H264
water	17:17	0:0	8	track
op	17:22	0:0	8	->
water	17:24	0:0	8	enc
op	17:27	0:0	8	->
water	17:29	0:0	8	codec_id
op	17:38	0:0	8	==
water	17:41	0:0	8	AV_CODEC_ID_H264
stmts	18:12	18:50	7	
water	18:12	0:0	8	tag
op	18:16	0:0	8	=
call	18:18	18:49	8	mov_get_h264_codec_tag
arg	18:41	18:42	9	s
water	18:41	0:0	10	s
arg	18:44	18:49	9	track
water	18:44	0:0	10	track
water	18:50	0:0	8	;
else	19:8	27:8	4
stmts	19:13	27:8	5	
if	19:13	27:8	6	(track -> enc -> codec_type == AVMEDIA_TYPE_VIDEO)
cond	19:17	19:43	7	track -> enc -> codec_type == AVMEDIA_TYPE_VIDEO
water	19:17	0:0	8	track
op	19:22	0:0	8	->
water	19:24	0:0	8	enc
op	19:27	0:0	8	->
water	19:29	0:0	8	codec_type
op	19:40	0:0	8	==
water	19:43	0:0	8	AVMEDIA_TYPE_VIDEO
stmts	19:63	27:8	7	
water	19:63	0:0	8	{
water	20:12	0:0	8	tag
op	20:16	0:0	8	=
call	20:18	20:79	8	ff_codec_get_tag
arg	20:35	20:57	9	ff_codec_movvideo_tags
water	20:35	0:0	10	ff_codec_movvideo_tags
arg	20:59	20:79	9	track->enc->codec_id
water	20:59	0:0	10	track
op	20:64	0:0	10	->
water	20:66	0:0	10	enc
op	20:69	0:0	10	->
water	20:71	0:0	10	codec_id
water	20:80	0:0	8	;
if	21:12	26:12	8	(! tag)
cond	21:16	21:17	9	! tag
op	21:16	0:0	10	!
water	21:17	0:0	10	tag
stmts	21:22	26:12	9	
water	21:22	0:0	10	{
water	22:16	0:0	10	tag
op	22:20	0:0	10	=
call	22:22	22:78	10	ff_codec_get_tag
arg	22:39	22:56	11	ff_codec_bmp_tags
water	22:39	0:0	12	ff_codec_bmp_tags
arg	22:58	22:78	11	track->enc->codec_id
water	22:58	0:0	12	track
op	22:63	0:0	12	->
water	22:65	0:0	12	enc
op	22:68	0:0	12	->
water	22:70	0:0	12	codec_id
water	22:79	0:0	10	;
if	23:16	25:59	10	(tag)
cond	23:20	23:20	11	tag
water	23:20	0:0	12	tag
stmts	24:20	25:59	11	
call	24:20	25:58	12	av_log
arg	24:27	24:28	13	s
water	24:27	0:0	14	s
arg	24:30	24:44	13	AV_LOG_WARNING
water	24:30	0:0	14	AV_LOG_WARNING
arg	24:46	25:58	13	"Using MS style video codec tag, ""the file may be unplayable!\n"
water	24:46	0:0	14	"Using MS style video codec tag, "
water	25:27	0:0	14	"the file may be unplayable!\n"
water	25:59	0:0	12	;
water	26:12	0:0	10	}
water	27:8	0:0	8	}
else	27:10	37:8	4
stmts	27:15	37:8	5	
if	27:15	37:8	6	(track -> enc -> codec_type == AVMEDIA_TYPE_AUDIO)
cond	27:19	27:45	7	track -> enc -> codec_type == AVMEDIA_TYPE_AUDIO
water	27:19	0:0	8	track
op	27:24	0:0	8	->
water	27:26	0:0	8	enc
op	27:29	0:0	8	->
water	27:31	0:0	8	codec_type
op	27:42	0:0	8	==
water	27:45	0:0	8	AVMEDIA_TYPE_AUDIO
stmts	27:65	37:8	7	
water	27:65	0:0	8	{
water	28:12	0:0	8	tag
op	28:16	0:0	8	=
call	28:18	28:79	8	ff_codec_get_tag
arg	28:35	28:57	9	ff_codec_movaudio_tags
water	28:35	0:0	10	ff_codec_movaudio_tags
arg	28:59	28:79	9	track->enc->codec_id
water	28:59	0:0	10	track
op	28:64	0:0	10	->
water	28:66	0:0	10	enc
op	28:69	0:0	10	->
water	28:71	0:0	10	codec_id
water	28:80	0:0	8	;
if	29:12	36:12	8	(! tag)
cond	29:16	29:17	9	! tag
op	29:16	0:0	10	!
water	29:17	0:0	10	tag
stmts	29:22	36:12	9	
water	29:22	0:0	10	{
decl	30:16	30:86	10	int	ms_tag
op	30:27	0:0	10	=
call	30:29	30:85	11	ff_codec_get_tag
arg	30:46	30:63	12	ff_codec_wav_tags
water	30:46	0:0	13	ff_codec_wav_tags
arg	30:65	30:85	12	track->enc->codec_id
water	30:65	0:0	13	track
op	30:70	0:0	13	->
water	30:72	0:0	13	enc
op	30:75	0:0	13	->
water	30:77	0:0	13	codec_id
if	31:16	35:16	10	(ms_tag)
cond	31:20	31:20	11	ms_tag
water	31:20	0:0	12	ms_tag
stmts	31:28	35:16	11	
water	31:28	0:0	12	{
water	32:20	0:0	12	tag
op	32:24	0:0	12	=
call	32:26	32:81	12	MKTAG
arg	32:32	32:35	13	'm'
water	32:32	0:0	14	'm'
arg	32:37	32:40	13	's'
water	32:37	0:0	14	's'
arg	32:42	32:64	13	((ms_tag>>8)&0xff)
water	32:42	0:0	14	(
water	32:43	0:0	14	(
water	32:44	0:0	14	ms_tag
op	32:51	0:0	14	>>
water	32:54	0:0	14	8
water	32:55	0:0	14	)
op	32:57	0:0	14	&
water	32:59	0:0	14	0
water	32:60	0:0	14	xff
water	32:63	0:0	14	)
arg	32:66	32:81	13	(ms_tag&0xff)
water	32:66	0:0	14	(
water	32:67	0:0	14	ms_tag
op	32:74	0:0	14	&
water	32:76	0:0	14	0
water	32:77	0:0	14	xff
water	32:80	0:0	14	)
water	32:82	0:0	12	;
call	33:20	34:58	12	av_log
arg	33:27	33:28	13	s
water	33:27	0:0	14	s
arg	33:30	33:44	13	AV_LOG_WARNING
water	33:30	0:0	14	AV_LOG_WARNING
arg	33:46	34:58	13	"Using MS style audio codec tag, ""the file may be unplayable!\n"
water	33:46	0:0	14	"Using MS style audio codec tag, "
water	34:27	0:0	14	"the file may be unplayable!\n"
water	34:59	0:0	12	;
water	35:16	0:0	12	}
water	36:12	0:0	10	}
water	37:8	0:0	8	}
else	37:10	38:83	4
stmts	37:15	38:83	5	
if	37:15	38:83	6	(track -> enc -> codec_type == AVMEDIA_TYPE_SUBTITLE)
cond	37:19	37:45	7	track -> enc -> codec_type == AVMEDIA_TYPE_SUBTITLE
water	37:19	0:0	8	track
op	37:24	0:0	8	->
water	37:26	0:0	8	enc
op	37:29	0:0	8	->
water	37:31	0:0	8	codec_type
op	37:42	0:0	8	==
water	37:45	0:0	8	AVMEDIA_TYPE_SUBTITLE
stmts	38:12	38:83	7	
water	38:12	0:0	8	tag
op	38:16	0:0	8	=
call	38:18	38:82	8	ff_codec_get_tag
arg	38:35	38:60	9	ff_codec_movsubtitle_tags
water	38:35	0:0	10	ff_codec_movsubtitle_tags
arg	38:62	38:82	9	track->enc->codec_id
water	38:62	0:0	10	track
op	38:67	0:0	10	->
water	38:69	0:0	10	enc
op	38:72	0:0	10	->
water	38:74	0:0	10	codec_id
water	38:83	0:0	8	;
water	39:4	0:0	4	}
return	40:4	40:14	2	tag
water	40:11	0:0	3	tag

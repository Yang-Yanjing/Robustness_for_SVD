func	1:0	43:0	0	static int	config_clut
params	1:22	0:0	1	
param	1:23	1:43	2	AVFilterLink *	inlink
stmnts	0:0	42:12	1	
decl	3:4	3:25	2	int	size
water	3:12	0:0	2	,
decl	3:4	3:25	2	int	level
water	3:19	0:0	2	,
decl	3:4	3:25	2	int	w
water	3:22	0:0	2	,
decl	3:4	3:25	2	int	h
decl	4:4	4:38	2	AVFilterContext	*ctx
op	4:25	0:0	2	=
water	4:27	0:0	2	inlink
op	4:33	0:0	2	->
water	4:35	0:0	2	dst
decl	5:4	5:35	2	LUT3DContext	*lut3d
op	5:24	0:0	2	=
water	5:26	0:0	2	ctx
op	5:29	0:0	2	->
water	5:31	0:0	2	priv
decl	6:4	6:72	2	const AVPixFmtDescriptor	*desc
op	6:35	0:0	2	=
call	6:37	6:71	3	av_pix_fmt_desc_get
arg	6:57	6:71	4	inlink->format
water	6:57	0:0	5	inlink
op	6:63	0:0	5	->
water	6:65	0:0	5	format
call	7:4	7:19	2	av_assert0
arg	7:15	7:19	3	desc
water	7:15	0:0	4	desc
water	7:20	0:0	2	;
water	8:4	0:0	2	lut3d
op	8:9	0:0	2	->
water	8:11	0:0	2	clut_is16bit
op	8:24	0:0	2	=
water	8:26	0:0	2	0
water	8:27	0:0	2	;
switch	9:4	15:4	2	(inlink -> format)
cond	9:12	9:20	3	inlink -> format
water	9:12	0:0	4	inlink
op	9:18	0:0	4	->
water	9:20	0:0	4	format
stmts	9:28	15:4	3	
water	9:28	0:0	4	{
label	10:4	10:25	4	case AV_PIX_FMT_RGB48 :
label	11:4	11:25	4	case AV_PIX_FMT_BGR48 :
label	12:4	12:26	4	case AV_PIX_FMT_RGBA64 :
label	13:4	13:26	4	case AV_PIX_FMT_BGRA64 :
water	14:8	0:0	4	lut3d
op	14:13	0:0	4	->
water	14:15	0:0	4	clut_is16bit
op	14:28	0:0	4	=
water	14:30	0:0	4	1
water	14:31	0:0	4	;
water	15:4	0:0	4	}
water	16:4	0:0	2	lut3d
op	16:9	0:0	2	->
water	16:11	0:0	2	clut_step
op	16:21	0:0	2	=
call	16:23	16:56	2	av_get_padded_bits_per_pixel
arg	16:52	16:56	3	desc
water	16:52	0:0	4	desc
op	16:58	0:0	2	>>
water	16:61	0:0	2	3
water	16:62	0:0	2	;
call	17:4	17:57	2	ff_fill_rgba_map
arg	17:21	17:41	3	lut3d->clut_rgba_map
water	17:21	0:0	4	lut3d
op	17:26	0:0	4	->
water	17:28	0:0	4	clut_rgba_map
arg	17:43	17:57	3	inlink->format
water	17:43	0:0	4	inlink
op	17:49	0:0	4	->
water	17:51	0:0	4	format
water	17:58	0:0	2	;
if	18:4	20:68	2	(inlink -> w > inlink -> h)
cond	18:8	18:28	3	inlink -> w > inlink -> h
water	18:8	0:0	4	inlink
op	18:14	0:0	4	->
water	18:16	0:0	4	w
op	18:18	0:0	4	>
water	18:20	0:0	4	inlink
op	18:26	0:0	4	->
water	18:28	0:0	4	h
stmts	19:8	20:68	3	
call	19:8	20:67	4	av_log
arg	19:15	19:18	5	ctx
water	19:15	0:0	6	ctx
arg	19:20	19:31	5	AV_LOG_INFO
water	19:20	0:0	6	AV_LOG_INFO
arg	19:33	20:44	5	"Padding on the right (%dpx) of the ""Hald CLUT will be ignored\n"
water	19:33	0:0	6	"Padding on the right (%dpx) of the "
water	20:15	0:0	6	"Hald CLUT will be ignored\n"
arg	20:46	20:67	5	inlink->w-inlink->h
water	20:46	0:0	6	inlink
op	20:52	0:0	6	->
water	20:54	0:0	6	w
op	20:56	0:0	6	-
water	20:58	0:0	6	inlink
op	20:64	0:0	6	->
water	20:66	0:0	6	h
water	20:68	0:0	4	;
else	21:4	23:68	2
stmts	21:9	23:68	3	
if	21:9	23:68	4	(inlink -> w < inlink -> h)
cond	21:13	21:33	5	inlink -> w < inlink -> h
water	21:13	0:0	6	inlink
op	21:19	0:0	6	->
water	21:21	0:0	6	w
op	21:23	0:0	6	<
water	21:25	0:0	6	inlink
op	21:31	0:0	6	->
water	21:33	0:0	6	h
stmts	22:8	23:68	5	
call	22:8	23:67	6	av_log
arg	22:15	22:18	7	ctx
water	22:15	0:0	8	ctx
arg	22:20	22:31	7	AV_LOG_INFO
water	22:20	0:0	8	AV_LOG_INFO
arg	22:33	23:44	7	"Padding at the bottom (%dpx) of the ""Hald CLUT will be ignored\n"
water	22:33	0:0	8	"Padding at the bottom (%dpx) of the "
water	23:15	0:0	8	"Hald CLUT will be ignored\n"
arg	23:46	23:67	7	inlink->h-inlink->w
water	23:46	0:0	8	inlink
op	23:52	0:0	8	->
water	23:54	0:0	8	h
op	23:56	0:0	8	-
water	23:58	0:0	8	inlink
op	23:64	0:0	8	->
water	23:66	0:0	8	w
water	23:68	0:0	6	;
water	24:4	0:0	2	lut3d
op	24:9	0:0	2	->
water	24:11	0:0	2	clut_width
op	24:22	0:0	2	=
water	24:24	0:0	2	w
op	24:26	0:0	2	=
water	24:28	0:0	2	h
op	24:30	0:0	2	=
call	24:32	24:58	2	FFMIN
arg	24:38	24:47	3	inlink->w
water	24:38	0:0	4	inlink
op	24:44	0:0	4	->
water	24:46	0:0	4	w
arg	24:49	24:58	3	inlink->h
water	24:49	0:0	4	inlink
op	24:55	0:0	4	->
water	24:57	0:0	4	h
water	24:59	0:0	2	;
for	25:4	25:51	2	(level = 1 ;level * level * level < w;level ++)
forinit	25:9	25:18	3	level = 1 ;
water	25:9	0:0	4	level
op	25:15	0:0	4	=
water	25:17	0:0	4	1
water	25:18	0:0	4	;
cond	25:20	25:40	3	level * level * level < w
water	25:20	0:0	4	level
op	25:25	0:0	4	*
water	25:26	0:0	4	level
op	25:31	0:0	4	*
water	25:32	0:0	4	level
op	25:38	0:0	4	<
water	25:40	0:0	4	w
forexpr	25:43	25:48	3	level ++
water	25:43	0:0	4	level
op	25:48	0:0	4	++
stmts	25:51	25:51	3	
water	25:51	0:0	4	;
water	26:4	0:0	2	size
op	26:9	0:0	2	=
water	26:11	0:0	2	level
op	26:16	0:0	2	*
water	26:17	0:0	2	level
op	26:22	0:0	2	*
water	26:23	0:0	2	level
water	26:28	0:0	2	;
if	27:4	30:4	2	(size != w)
cond	27:8	27:16	3	size != w
water	27:8	0:0	4	size
op	27:13	0:0	4	!=
water	27:16	0:0	4	w
stmts	27:19	30:4	3	
water	27:19	0:0	4	{
call	28:8	28:84	4	av_log
arg	28:15	28:18	5	ctx
water	28:15	0:0	6	ctx
arg	28:20	28:34	5	AV_LOG_WARNING
water	28:20	0:0	6	AV_LOG_WARNING
arg	28:36	28:84	5	"The Hald CLUT width does not match the level\n"
water	28:36	0:0	6	"The Hald CLUT width does not match the level\n"
water	28:85	0:0	4	;
return	29:8	29:34	4	AVERROR_INVALIDDATA
water	29:15	0:0	5	AVERROR_INVALIDDATA
water	30:4	0:0	4	}
call	31:4	31:34	2	av_assert0
arg	31:15	31:34	3	w==h&&w==size
water	31:15	0:0	4	w
op	31:17	0:0	4	==
water	31:20	0:0	4	h
op	31:22	0:0	4	&&
water	31:25	0:0	4	w
op	31:27	0:0	4	==
water	31:30	0:0	4	size
water	31:35	0:0	2	;
water	32:4	0:0	2	level
op	32:10	0:0	2	*=
water	32:13	0:0	2	level
water	32:18	0:0	2	;
if	33:4	40:4	2	(level > MAX_LEVEL)
cond	33:8	33:16	3	level > MAX_LEVEL
water	33:8	0:0	4	level
op	33:14	0:0	4	>
water	33:16	0:0	4	MAX_LEVEL
stmts	33:27	40:4	3	
water	33:27	0:0	4	{
decl	34:8	34:50	4	const int	max_clut_level
op	34:33	0:0	4	=
call	34:35	34:49	5	sqrt
arg	34:40	34:49	6	MAX_LEVEL
water	34:40	0:0	7	MAX_LEVEL
decl	35:8	35:79	4	const int	max_clut_size
op	35:33	0:0	4	=
water	35:35	0:0	4	max_clut_level
op	35:49	0:0	4	*
water	35:50	0:0	4	max_clut_level
op	35:64	0:0	4	*
water	35:65	0:0	4	max_clut_level
call	36:8	38:59	4	av_log
arg	36:15	36:18	5	ctx
water	36:15	0:0	6	ctx
arg	36:20	36:32	5	AV_LOG_ERROR
water	36:20	0:0	6	AV_LOG_ERROR
arg	36:34	37:55	5	"Too large Hald CLUT ""(maximum level is %d, or %dx%d CLUT)\n"
water	36:34	0:0	6	"Too large Hald CLUT "
water	37:15	0:0	6	"(maximum level is %d, or %dx%d CLUT)\n"
arg	38:15	38:29	5	max_clut_level
water	38:15	0:0	6	max_clut_level
arg	38:31	38:44	5	max_clut_size
water	38:31	0:0	6	max_clut_size
arg	38:46	38:59	5	max_clut_size
water	38:46	0:0	6	max_clut_size
water	38:60	0:0	4	;
return	39:8	39:30	4	AVERROR(EINVAL)
call	39:15	39:29	5	AVERROR
arg	39:23	39:29	6	EINVAL
water	39:23	0:0	7	EINVAL
water	40:4	0:0	4	}
water	41:4	0:0	2	lut3d
op	41:9	0:0	2	->
water	41:11	0:0	2	lutsize
op	41:19	0:0	2	=
water	41:21	0:0	2	level
water	41:26	0:0	2	;
return	42:4	42:12	2	0
water	42:11	0:0	3	0

func	1:0	40:0	0	static int	opt_preset
params	1:21	0:0	1	
param	1:22	1:34	2	void *	optctx
param	1:36	1:51	2	const char *	opt
param	1:53	1:68	2	const char *	arg
stmnts	0:0	39:12	1	
decl	3:4	3:30	2	OptionsContext	*o
op	3:22	0:0	2	=
water	3:24	0:0	2	optctx
decl	4:4	4:16	2	FILE	*f
op	4:11	0:0	2	=
water	4:12	0:0	2	NULL
decl	5:4	5:51	2	char	filename[1000]
water	5:23	0:0	2	,
decl	5:4	5:51	2	char	line[1000]
water	5:35	0:0	2	,
decl	5:4	5:51	2	char	tmp_line[1000]
decl	6:4	6:33	2	const char	*codec_name
op	6:27	0:0	2	=
water	6:29	0:0	2	NULL
water	7:4	0:0	2	tmp_line
op	7:12	0:0	2	[
water	7:13	0:0	2	0
op	7:14	0:0	2	]
op	7:16	0:0	2	=
op	7:18	0:0	2	*
water	7:19	0:0	2	opt
water	7:22	0:0	2	;
water	8:4	0:0	2	tmp_line
op	8:12	0:0	2	[
water	8:13	0:0	2	1
op	8:14	0:0	2	]
op	8:16	0:0	2	=
water	8:18	0:0	2	0
water	8:19	0:0	2	;
call	9:4	9:67	2	MATCH_PER_TYPE_OPT
arg	9:23	9:34	3	codec_names
water	9:23	0:0	4	codec_names
arg	9:36	9:39	3	str
water	9:36	0:0	4	str
arg	9:41	9:51	3	codec_name
water	9:41	0:0	4	codec_name
arg	9:53	9:57	3	NULL
water	9:53	0:0	4	NULL
arg	9:59	9:67	3	tmp_line
water	9:59	0:0	4	tmp_line
water	9:68	0:0	2	;
if	10:4	16:4	2	(! ( f =get_preset_file (filename ,sizeof ( filename ) ,arg ,* opt == 'f' ,codec_name ) ))
cond	10:8	10:87	3	! ( f =get_preset_file (filename ,sizeof ( filename ) ,arg ,* opt == 'f' ,codec_name ) )
op	10:8	0:0	4	!
water	10:9	0:0	4	(
water	10:10	0:0	4	f
op	10:12	0:0	4	=
call	10:14	10:86	4	get_preset_file
arg	10:30	10:38	5	filename
water	10:30	0:0	6	filename
arg	10:40	10:56	5	sizeof(filename)
op	10:40	0:0	6	sizeof
water	10:46	0:0	6	(
water	10:47	0:0	6	filename
water	10:55	0:0	6	)
arg	10:58	10:61	5	arg
water	10:58	0:0	6	arg
arg	10:63	10:74	5	*opt=='f'
op	10:63	0:0	6	*
water	10:64	0:0	6	opt
op	10:68	0:0	6	==
water	10:71	0:0	6	'f'
arg	10:76	10:86	5	codec_name
water	10:76	0:0	6	codec_name
water	10:87	0:0	4	)
stmts	10:90	16:4	3	
water	10:90	0:0	4	{
if	11:8	13:8	4	(!strncmp (arg ,"libx264-lossless" ,strlen ("libx264-lossless" ) ))
cond	11:11	11:71	5	!strncmp (arg ,"libx264-lossless" ,strlen ("libx264-lossless" ) )
op	11:11	0:0	6	!
call	11:12	11:71	6	strncmp
arg	11:20	11:23	7	arg
water	11:20	0:0	8	arg
arg	11:25	11:43	7	"libx264-lossless"
water	11:25	0:0	8	"libx264-lossless"
arg	11:45	11:71	7	strlen("libx264-lossless")
call	11:45	11:70	8	strlen
arg	11:52	11:70	9	"libx264-lossless"
water	11:52	0:0	10	"libx264-lossless"
stmts	11:73	13:8	5	
water	11:73	0:0	6	{
call	12:12	12:75	6	av_log
arg	12:19	12:23	7	NULL
water	12:19	0:0	8	NULL
arg	12:25	12:37	7	AV_LOG_FATAL
water	12:25	0:0	8	AV_LOG_FATAL
arg	12:39	12:75	7	"Please use -preset <speed> -qp 0\n"
water	12:39	0:0	8	"Please use -preset <speed> -qp 0\n"
water	12:76	0:0	6	;
water	13:8	0:0	6	}
else	13:9	14:79	4
stmts	14:12	14:79	5	
call	14:12	14:78	6	av_log
arg	14:19	14:23	7	NULL
water	14:19	0:0	8	NULL
arg	14:25	14:37	7	AV_LOG_FATAL
water	14:25	0:0	8	AV_LOG_FATAL
arg	14:39	14:73	7	"File for preset '%s' not found\n"
water	14:39	0:0	8	"File for preset '%s' not found\n"
arg	14:75	14:78	7	arg
water	14:75	0:0	8	arg
water	14:79	0:0	6	;
call	15:8	15:22	4	exit_program
arg	15:21	15:22	5	1
water	15:21	0:0	6	1
water	15:23	0:0	4	;
water	16:4	0:0	4	}
while	17:4	37:4	2	(fgets (line ,sizeof ( line ) ,f ))
cond	17:11	17:38	3	fgets (line ,sizeof ( line ) ,f )
call	17:11	17:38	4	fgets
arg	17:17	17:21	5	line
water	17:17	0:0	6	line
arg	17:23	17:35	5	sizeof(line)
op	17:23	0:0	6	sizeof
water	17:29	0:0	6	(
water	17:30	0:0	6	line
water	17:34	0:0	6	)
arg	17:37	17:38	5	f
water	17:37	0:0	6	f
stmts	17:41	37:4	3	
water	17:41	0:0	4	{
decl	18:8	18:45	4	char	*key
op	18:18	0:0	4	=
water	18:20	0:0	4	tmp_line
water	18:28	0:0	4	,
decl	18:8	18:45	4	char	*value
water	18:36	0:0	4	,
decl	18:8	18:45	4	char	*endptr
if	19:8	20:20	4	(strcspn (line ,"#\n\r" ) == 0)
cond	19:12	19:38	5	strcspn (line ,"#\n\r" ) == 0
call	19:12	19:33	6	strcspn
arg	19:20	19:24	7	line
water	19:20	0:0	8	line
arg	19:26	19:33	7	"#\n\r"
water	19:26	0:0	8	"#\n\r"
op	19:35	0:0	6	==
water	19:38	0:0	6	0
stmts	20:12	20:20	5	
continue	20:12	20:20	6	
call	21:8	21:51	4	av_strlcpy
arg	21:19	21:27	5	tmp_line
water	21:19	0:0	6	tmp_line
arg	21:29	21:33	5	line
water	21:29	0:0	6	line
arg	21:35	21:51	5	sizeof(tmp_line)
op	21:35	0:0	6	sizeof
water	21:41	0:0	6	(
water	21:42	0:0	6	tmp_line
water	21:50	0:0	6	)
water	21:52	0:0	4	;
if	22:8	26:8	4	(!av_strtok (key ,"=" ,& value ) || !av_strtok (value ,"\r\n" ,& endptr ))
cond	22:12	23:45	5	!av_strtok (key ,"=" ,& value ) || !av_strtok (value ,"\r\n" ,& endptr )
op	22:12	0:0	6	!
call	22:13	22:44	6	av_strtok
arg	22:23	22:26	7	key
water	22:23	0:0	8	key
arg	22:30	22:33	7	"="
water	22:30	0:0	8	"="
arg	22:38	22:44	7	&value
op	22:38	0:0	8	&
water	22:39	0:0	8	value
op	22:46	0:0	6	||
op	23:12	0:0	6	!
call	23:13	23:45	6	av_strtok
arg	23:23	23:28	7	value
water	23:23	0:0	8	value
arg	23:30	23:36	7	"\r\n"
water	23:30	0:0	8	"\r\n"
arg	23:38	23:45	7	&endptr
op	23:38	0:0	8	&
water	23:39	0:0	8	endptr
stmts	23:48	26:8	5	
water	23:48	0:0	6	{
call	24:12	24:83	6	av_log
arg	24:19	24:23	7	NULL
water	24:19	0:0	8	NULL
arg	24:25	24:37	7	AV_LOG_FATAL
water	24:25	0:0	8	AV_LOG_FATAL
arg	24:39	24:67	7	"%s: Invalid syntax: '%s'\n"
water	24:39	0:0	8	"%s: Invalid syntax: '%s'\n"
arg	24:69	24:77	7	filename
water	24:69	0:0	8	filename
arg	24:79	24:83	7	line
water	24:79	0:0	8	line
water	24:84	0:0	6	;
call	25:12	25:26	6	exit_program
arg	25:25	25:26	7	1
water	25:25	0:0	8	1
water	25:27	0:0	6	;
water	26:8	0:0	6	}
call	27:8	27:90	4	av_log
arg	27:15	27:19	5	NULL
water	27:15	0:0	6	NULL
arg	27:21	27:33	5	AV_LOG_DEBUG
water	27:21	0:0	6	AV_LOG_DEBUG
arg	27:35	27:68	5	"ffpreset[%s]: set '%s' = '%s'\n"
water	27:35	0:0	6	"ffpreset[%s]: set '%s' = '%s'\n"
arg	27:70	27:78	5	filename
water	27:70	0:0	6	filename
arg	27:80	27:83	5	key
water	27:80	0:0	6	key
arg	27:85	27:90	5	value
water	27:85	0:0	6	value
water	27:91	0:0	4	;
if	28:8	28:74	4	(!strcmp (key ,"acodec" ))
cond	28:17	28:38	5	!strcmp (key ,"acodec" )
op	28:17	0:0	6	!
call	28:18	28:38	6	strcmp
arg	28:25	28:28	7	key
water	28:25	0:0	8	key
arg	28:30	28:38	7	"acodec"
water	28:30	0:0	8	"acodec"
stmts	28:41	28:74	5	
call	28:41	28:73	6	opt_audio_codec
arg	28:60	28:61	7	o
water	28:60	0:0	8	o
arg	28:63	28:66	7	key
water	28:63	0:0	8	key
arg	28:68	28:73	7	value
water	28:68	0:0	8	value
water	28:74	0:0	6	;
else	29:8	29:74	4
stmts	29:13	29:74	5	
if	29:13	29:74	6	(!strcmp (key ,"vcodec" ))
cond	29:17	29:38	7	!strcmp (key ,"vcodec" )
op	29:17	0:0	8	!
call	29:18	29:38	8	strcmp
arg	29:25	29:28	9	key
water	29:25	0:0	10	key
arg	29:30	29:38	9	"vcodec"
water	29:30	0:0	10	"vcodec"
stmts	29:41	29:74	7	
call	29:41	29:73	8	opt_video_codec
arg	29:60	29:61	9	o
water	29:60	0:0	10	o
arg	29:63	29:66	9	key
water	29:63	0:0	10	key
arg	29:68	29:73	9	value
water	29:68	0:0	10	value
water	29:74	0:0	8	;
else	30:8	30:74	4
stmts	30:13	30:74	5	
if	30:13	30:74	6	(!strcmp (key ,"scodec" ))
cond	30:17	30:38	7	!strcmp (key ,"scodec" )
op	30:17	0:0	8	!
call	30:18	30:38	8	strcmp
arg	30:25	30:28	9	key
water	30:25	0:0	10	key
arg	30:30	30:38	9	"scodec"
water	30:30	0:0	10	"scodec"
stmts	30:41	30:74	7	
call	30:41	30:73	8	opt_subtitle_codec
arg	30:60	30:61	9	o
water	30:60	0:0	10	o
arg	30:63	30:66	9	key
water	30:63	0:0	10	key
arg	30:68	30:73	9	value
water	30:68	0:0	10	value
water	30:74	0:0	8	;
else	31:8	31:74	4
stmts	31:13	31:74	5	
if	31:13	31:74	6	(!strcmp (key ,"dcodec" ))
cond	31:17	31:38	7	!strcmp (key ,"dcodec" )
op	31:17	0:0	8	!
call	31:18	31:38	8	strcmp
arg	31:25	31:28	9	key
water	31:25	0:0	10	key
arg	31:30	31:38	9	"dcodec"
water	31:30	0:0	10	"dcodec"
stmts	31:41	31:74	7	
call	31:41	31:73	8	opt_data_codec
arg	31:60	31:61	9	o
water	31:60	0:0	10	o
arg	31:63	31:66	9	key
water	31:63	0:0	10	key
arg	31:68	31:73	9	value
water	31:68	0:0	10	value
water	31:74	0:0	8	;
else	32:8	36:8	4
stmts	32:13	36:8	5	
if	32:13	36:8	6	(opt_default_new (o ,key ,value ) < 0)
cond	32:17	32:50	7	opt_default_new (o ,key ,value ) < 0
call	32:17	32:46	8	opt_default_new
arg	32:33	32:34	9	o
water	32:33	0:0	10	o
arg	32:36	32:39	9	key
water	32:36	0:0	10	key
arg	32:41	32:46	9	value
water	32:41	0:0	10	value
op	32:48	0:0	8	<
water	32:50	0:0	8	0
stmts	32:53	36:8	7	
water	32:53	0:0	8	{
call	33:12	34:45	8	av_log
arg	33:19	33:23	9	NULL
water	33:19	0:0	10	NULL
arg	33:25	33:37	9	AV_LOG_FATAL
water	33:25	0:0	10	AV_LOG_FATAL
arg	33:39	33:102	9	"%s: Invalid option or argument: '%s', parsed as '%s' = '%s'\n"
water	33:39	0:0	10	"%s: Invalid option or argument: '%s', parsed as '%s' = '%s'\n"
arg	34:19	34:27	9	filename
water	34:19	0:0	10	filename
arg	34:29	34:33	9	line
water	34:29	0:0	10	line
arg	34:35	34:38	9	key
water	34:35	0:0	10	key
arg	34:40	34:45	9	value
water	34:40	0:0	10	value
water	34:46	0:0	8	;
call	35:12	35:26	8	exit_program
arg	35:25	35:26	9	1
water	35:25	0:0	10	1
water	35:27	0:0	8	;
water	36:8	0:0	8	}
water	37:4	0:0	4	}
call	38:4	38:12	2	fclose
arg	38:11	38:12	3	f
water	38:11	0:0	4	f
water	38:13	0:0	2	;
return	39:4	39:12	2	0
water	39:11	0:0	3	0

func	1:0	72:0	0	static int	generate_transition
params	1:30	0:0	1	
param	1:31	1:40	2	void *	log
param	1:42	1:62	2	struct sbg_script *	s
param	2:31	2:57	2	struct ws_intervals *	inter
param	3:31	3:59	2	struct sbg_script_event *	ev1
param	4:31	4:59	2	struct sbg_script_event *	ev2
stmnts	0:0	71:12	1	
decl	6:4	6:51	2	int64_t	ts1
op	6:16	0:0	2	=
water	6:18	0:0	2	ev1
op	6:21	0:0	2	->
water	6:23	0:0	2	ts_trans
water	6:31	0:0	2	,
decl	6:4	6:51	2	int64_t	ts2
op	6:37	0:0	2	=
water	6:39	0:0	2	ev1
op	6:42	0:0	2	->
water	6:44	0:0	2	ts_next
decl	8:4	8:61	2	int64_t	tsmid
op	8:18	0:0	2	=
water	8:20	0:0	2	(
water	8:21	0:0	2	ts1
op	8:25	0:0	2	>>
water	8:28	0:0	2	1
water	8:29	0:0	2	)
op	8:31	0:0	2	+
water	8:33	0:0	2	(
water	8:34	0:0	2	ts2
op	8:38	0:0	2	>>
water	8:41	0:0	2	1
water	8:42	0:0	2	)
op	8:44	0:0	2	+
water	8:46	0:0	2	(
water	8:47	0:0	2	ts1
op	8:51	0:0	2	&
water	8:53	0:0	2	ts2
op	8:57	0:0	2	&
water	8:59	0:0	2	1
water	8:60	0:0	2	)
decl	9:4	9:78	2	enum sbg_fade_type	type
op	9:28	0:0	2	=
water	9:30	0:0	2	ev1
op	9:33	0:0	2	->
water	9:35	0:0	2	fade
op	9:39	0:0	2	.
water	9:40	0:0	2	slide
op	9:46	0:0	2	|
water	9:48	0:0	2	(
water	9:49	0:0	2	ev1
op	9:52	0:0	2	->
water	9:54	0:0	2	fade
op	9:58	0:0	2	.
water	9:59	0:0	2	out
op	9:63	0:0	2	&
water	9:65	0:0	2	ev2
op	9:68	0:0	2	->
water	9:70	0:0	2	fade
op	9:74	0:0	2	.
water	9:75	0:0	2	in
water	9:77	0:0	2	)
decl	10:4	10:63	2	int	nb_elements
op	10:20	0:0	2	=
call	10:22	10:62	3	FFMAX
arg	10:28	10:44	4	ev1->nb_elements
water	10:28	0:0	5	ev1
op	10:31	0:0	5	->
water	10:33	0:0	5	nb_elements
arg	10:46	10:62	4	ev2->nb_elements
water	10:46	0:0	5	ev2
op	10:49	0:0	5	->
water	10:51	0:0	5	nb_elements
decl	11:4	11:56	2	struct sbg_script_synth	*s1
water	11:31	0:0	2	,
decl	11:4	11:56	2	struct sbg_script_synth	*s2
water	11:36	0:0	2	,
decl	11:4	11:56	2	struct sbg_script_synth	s1mod
water	11:43	0:0	2	,
decl	11:4	11:56	2	struct sbg_script_synth	s2mod
water	11:50	0:0	2	,
decl	11:4	11:56	2	struct sbg_script_synth	smid
decl	12:4	12:18	2	int	pass
water	12:12	0:0	2	,
decl	12:4	12:18	2	int	i
water	12:15	0:0	2	,
decl	12:4	12:18	2	int	r
for	13:4	70:4	2	(pass = 0 ;pass < 2;pass ++)
forinit	13:9	13:17	3	pass = 0 ;
water	13:9	0:0	4	pass
op	13:14	0:0	4	=
water	13:16	0:0	4	0
water	13:17	0:0	4	;
cond	13:19	13:26	3	pass < 2
water	13:19	0:0	4	pass
op	13:24	0:0	4	<
water	13:26	0:0	4	2
forexpr	13:29	13:33	3	pass ++
water	13:29	0:0	4	pass
op	13:33	0:0	4	++
stmts	13:37	70:4	3	
water	13:37	0:0	4	{
for	21:8	69:8	4	(i = 0 ;i < nb_elements;i ++)
forinit	21:13	21:18	5	i = 0 ;
water	21:13	0:0	6	i
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:24	5	i < nb_elements
water	21:20	0:0	6	i
op	21:22	0:0	6	<
water	21:24	0:0	6	nb_elements
forexpr	21:37	21:38	5	i ++
water	21:37	0:0	6	i
op	21:38	0:0	6	++
stmts	21:42	69:8	5	
water	21:42	0:0	6	{
water	22:12	0:0	6	s1
op	22:15	0:0	6	=
water	22:17	0:0	6	i
op	22:19	0:0	6	<
water	22:21	0:0	6	ev1
op	22:24	0:0	6	->
water	22:26	0:0	6	nb_elements
water	22:38	0:0	6	?
op	22:40	0:0	6	&
water	22:41	0:0	6	s
op	22:42	0:0	6	->
water	22:44	0:0	6	synth
op	22:49	0:0	6	[
water	22:50	0:0	6	ev1
op	22:53	0:0	6	->
water	22:55	0:0	6	elements
op	22:64	0:0	6	+
water	22:66	0:0	6	i
op	22:67	0:0	6	]
water	22:69	0:0	6	:
op	22:71	0:0	6	&
water	22:72	0:0	6	s1mod
water	22:77	0:0	6	;
water	23:12	0:0	6	s2
op	23:15	0:0	6	=
water	23:17	0:0	6	i
op	23:19	0:0	6	<
water	23:21	0:0	6	ev2
op	23:24	0:0	6	->
water	23:26	0:0	6	nb_elements
water	23:38	0:0	6	?
op	23:40	0:0	6	&
water	23:41	0:0	6	s
op	23:42	0:0	6	->
water	23:44	0:0	6	synth
op	23:49	0:0	6	[
water	23:50	0:0	6	ev2
op	23:53	0:0	6	->
water	23:55	0:0	6	elements
op	23:64	0:0	6	+
water	23:66	0:0	6	i
op	23:67	0:0	6	]
water	23:69	0:0	6	:
op	23:71	0:0	6	&
water	23:72	0:0	6	s2mod
water	23:77	0:0	6	;
water	24:12	0:0	6	s1mod
op	24:18	0:0	6	=
water	24:20	0:0	6	s1
op	24:23	0:0	6	!=
op	24:26	0:0	6	&
water	24:27	0:0	6	s1mod
water	24:33	0:0	6	?
op	24:35	0:0	6	*
water	24:36	0:0	6	s1
water	24:39	0:0	6	:
water	24:41	0:0	6	(
water	24:42	0:0	6	struct
water	24:49	0:0	6	sbg_script_synth
water	24:65	0:0	6	)
water	24:66	0:0	6	{
water	24:68	0:0	6	0
water	24:70	0:0	6	}
water	24:71	0:0	6	;
water	25:12	0:0	6	s2mod
op	25:18	0:0	6	=
water	25:20	0:0	6	s2
op	25:23	0:0	6	!=
op	25:26	0:0	6	&
water	25:27	0:0	6	s2mod
water	25:33	0:0	6	?
op	25:35	0:0	6	*
water	25:36	0:0	6	s2
water	25:39	0:0	6	:
water	25:41	0:0	6	(
water	25:42	0:0	6	struct
water	25:49	0:0	6	sbg_script_synth
water	25:65	0:0	6	)
water	25:66	0:0	6	{
water	25:68	0:0	6	0
water	25:70	0:0	6	}
water	25:71	0:0	6	;
if	26:12	36:12	6	(ev1 -> fade . slide)
cond	26:16	26:26	7	ev1 -> fade . slide
water	26:16	0:0	8	ev1
op	26:19	0:0	8	->
water	26:21	0:0	8	fade
op	26:25	0:0	8	.
water	26:26	0:0	8	slide
stmts	26:33	36:12	7	
water	26:33	0:0	8	{
if	29:16	32:16	8	(s1mod . type == SBG_TYPE_NONE)
cond	29:20	29:34	9	s1mod . type == SBG_TYPE_NONE
water	29:20	0:0	10	s1mod
op	29:25	0:0	10	.
water	29:26	0:0	10	type
op	29:31	0:0	10	==
water	29:34	0:0	10	SBG_TYPE_NONE
stmts	29:49	32:16	9	
water	29:49	0:0	10	{
water	30:20	0:0	10	s1mod
op	30:26	0:0	10	=
water	30:28	0:0	10	s2mod
water	30:33	0:0	10	;
water	31:20	0:0	10	s1mod
op	31:25	0:0	10	.
water	31:26	0:0	10	vol
op	31:30	0:0	10	=
water	31:32	0:0	10	0
water	31:33	0:0	10	;
water	32:16	0:0	10	}
else	32:18	35:16	8
stmts	32:23	35:16	9	
if	32:23	35:16	10	(s2mod . type == SBG_TYPE_NONE)
cond	32:27	32:41	11	s2mod . type == SBG_TYPE_NONE
water	32:27	0:0	12	s2mod
op	32:32	0:0	12	.
water	32:33	0:0	12	type
op	32:38	0:0	12	==
water	32:41	0:0	12	SBG_TYPE_NONE
stmts	32:56	35:16	11	
water	32:56	0:0	12	{
water	33:20	0:0	12	s2mod
op	33:26	0:0	12	=
water	33:28	0:0	12	s1mod
water	33:33	0:0	12	;
water	34:20	0:0	12	s2mod
op	34:25	0:0	12	.
water	34:26	0:0	12	vol
op	34:30	0:0	12	=
water	34:32	0:0	12	0
water	34:33	0:0	12	;
water	35:16	0:0	12	}
water	36:12	0:0	8	}
if	37:12	50:12	6	(s1mod . type == s2mod . type && s1mod . type != SBG_TYPE_BELL && ( type == SBG_FADE_ADAPT || ( s1mod . carrier == s2mod . carrier && s1mod . beat == s2mod . beat ) ))
cond	37:16	41:43	7	s1mod . type == s2mod . type && s1mod . type != SBG_TYPE_BELL && ( type == SBG_FADE_ADAPT || ( s1mod . carrier == s2mod . carrier && s1mod . beat == s2mod . beat ) )
water	37:16	0:0	8	s1mod
op	37:21	0:0	8	.
water	37:22	0:0	8	type
op	37:27	0:0	8	==
water	37:30	0:0	8	s2mod
op	37:35	0:0	8	.
water	37:36	0:0	8	type
op	37:41	0:0	8	&&
water	38:16	0:0	8	s1mod
op	38:21	0:0	8	.
water	38:22	0:0	8	type
op	38:27	0:0	8	!=
water	38:30	0:0	8	SBG_TYPE_BELL
op	38:44	0:0	8	&&
water	39:16	0:0	8	(
water	39:17	0:0	8	type
op	39:22	0:0	8	==
water	39:25	0:0	8	SBG_FADE_ADAPT
op	39:40	0:0	8	||
water	40:17	0:0	8	(
water	40:18	0:0	8	s1mod
op	40:23	0:0	8	.
water	40:24	0:0	8	carrier
op	40:32	0:0	8	==
water	40:35	0:0	8	s2mod
op	40:40	0:0	8	.
water	40:41	0:0	8	carrier
op	40:49	0:0	8	&&
water	41:18	0:0	8	s1mod
op	41:23	0:0	8	.
water	41:24	0:0	8	beat
op	41:29	0:0	8	==
water	41:32	0:0	8	s2mod
op	41:37	0:0	8	.
water	41:38	0:0	8	beat
water	41:42	0:0	8	)
water	41:43	0:0	8	)
stmts	41:46	50:12	7	
water	41:46	0:0	8	{
if	43:16	49:16	8	(! pass)
cond	43:20	43:21	9	! pass
op	43:20	0:0	10	!
water	43:21	0:0	10	pass
stmts	43:27	49:16	9	
water	43:27	0:0	10	{
water	44:20	0:0	10	r
op	44:22	0:0	10	=
call	44:24	45:69	10	generate_interval
arg	44:42	44:45	11	log
water	44:42	0:0	12	log
arg	44:47	44:48	11	s
water	44:47	0:0	12	s
arg	44:50	44:55	11	inter
water	44:50	0:0	12	inter
arg	45:42	45:45	11	ts1
water	45:42	0:0	12	ts1
arg	45:47	45:50	11	ts2
water	45:47	0:0	12	ts2
arg	45:52	45:58	11	&s1mod
op	45:52	0:0	12	&
water	45:53	0:0	12	s1mod
arg	45:60	45:66	11	&s2mod
op	45:60	0:0	12	&
water	45:61	0:0	12	s2mod
arg	45:68	45:69	11	3
water	45:68	0:0	12	3
water	45:70	0:0	10	;
if	46:20	47:32	10	(r < 0)
cond	46:24	46:28	11	r < 0
water	46:24	0:0	12	r
op	46:26	0:0	12	<
water	46:28	0:0	12	0
stmts	47:24	47:32	11	
return	47:24	47:32	12	r
water	47:31	0:0	13	r
water	48:20	0:0	10	s2
op	48:22	0:0	10	->
water	48:24	0:0	10	ref
op	48:28	0:0	10	=
water	48:30	0:0	10	s2mod
op	48:35	0:0	10	.
water	48:36	0:0	10	ref
water	48:39	0:0	10	;
water	49:16	0:0	10	}
water	50:12	0:0	8	}
else	50:14	68:12	6
stmts	50:19	68:12	7	
water	50:19	0:0	8	{
if	52:16	59:16	8	(! pass)
cond	52:20	52:21	9	! pass
op	52:20	0:0	10	!
water	52:21	0:0	10	pass
stmts	52:27	59:16	9	
water	52:27	0:0	10	{
water	53:20	0:0	10	smid
op	53:25	0:0	10	=
water	53:27	0:0	10	s1mod
water	53:32	0:0	10	;
water	54:20	0:0	10	smid
op	54:24	0:0	10	.
water	54:25	0:0	10	vol
op	54:29	0:0	10	=
water	54:31	0:0	10	0
water	54:32	0:0	10	;
water	55:20	0:0	10	r
op	55:22	0:0	10	=
call	55:24	56:70	10	generate_interval
arg	55:42	55:45	11	log
water	55:42	0:0	12	log
arg	55:47	55:48	11	s
water	55:47	0:0	12	s
arg	55:50	55:55	11	inter
water	55:50	0:0	12	inter
arg	56:42	56:45	11	ts1
water	56:42	0:0	12	ts1
arg	56:47	56:52	11	tsmid
water	56:47	0:0	12	tsmid
arg	56:54	56:60	11	&s1mod
op	56:54	0:0	12	&
water	56:55	0:0	12	s1mod
arg	56:62	56:67	11	&smid
op	56:62	0:0	12	&
water	56:63	0:0	12	smid
arg	56:69	56:70	11	1
water	56:69	0:0	12	1
water	56:71	0:0	10	;
if	57:20	58:32	10	(r < 0)
cond	57:24	57:28	11	r < 0
water	57:24	0:0	12	r
op	57:26	0:0	12	<
water	57:28	0:0	12	0
stmts	58:24	58:32	11	
return	58:24	58:32	12	r
water	58:31	0:0	13	r
water	59:16	0:0	10	}
else	59:18	67:16	8
stmts	59:23	67:16	9	
water	59:23	0:0	10	{
water	60:20	0:0	10	smid
op	60:25	0:0	10	=
water	60:27	0:0	10	s2mod
water	60:32	0:0	10	;
water	61:20	0:0	10	smid
op	61:24	0:0	10	.
water	61:25	0:0	10	vol
op	61:29	0:0	10	=
water	61:31	0:0	10	0
water	61:32	0:0	10	;
water	62:20	0:0	10	r
op	62:22	0:0	10	=
call	62:24	63:70	10	generate_interval
arg	62:42	62:45	11	log
water	62:42	0:0	12	log
arg	62:47	62:48	11	s
water	62:47	0:0	12	s
arg	62:50	62:55	11	inter
water	62:50	0:0	12	inter
arg	63:42	63:47	11	tsmid
water	63:42	0:0	12	tsmid
arg	63:49	63:52	11	ts2
water	63:49	0:0	12	ts2
arg	63:54	63:59	11	&smid
op	63:54	0:0	12	&
water	63:55	0:0	12	smid
arg	63:61	63:67	11	&s2mod
op	63:61	0:0	12	&
water	63:62	0:0	12	s2mod
arg	63:69	63:70	11	2
water	63:69	0:0	12	2
water	63:71	0:0	10	;
if	64:20	65:32	10	(r < 0)
cond	64:24	64:28	11	r < 0
water	64:24	0:0	12	r
op	64:26	0:0	12	<
water	64:28	0:0	12	0
stmts	65:24	65:32	11	
return	65:24	65:32	12	r
water	65:31	0:0	13	r
water	66:20	0:0	10	s2
op	66:22	0:0	10	->
water	66:24	0:0	10	ref
op	66:28	0:0	10	=
water	66:30	0:0	10	s2mod
op	66:35	0:0	10	.
water	66:36	0:0	10	ref
water	66:39	0:0	10	;
water	67:16	0:0	10	}
water	68:12	0:0	8	}
water	69:8	0:0	6	}
water	70:4	0:0	4	}
return	71:4	71:12	2	0
water	71:11	0:0	3	0

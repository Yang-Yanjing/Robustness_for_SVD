func	1:0	24:0	0	static float	lame_calc_attack_threshold
params	1:39	0:0	1	
param	1:40	1:51	2	int	bitrate
stmnts	0:0	23:42	1	
decl	4:4	4:42	2	int	lower_range
op	4:20	0:0	2	=
water	4:22	0:0	2	12
water	4:24	0:0	2	,
decl	4:4	4:42	2	int	upper_range
op	4:38	0:0	2	=
water	4:40	0:0	2	12
decl	5:4	5:50	2	int	lower_range_kbps
op	5:25	0:0	2	=
water	5:27	0:0	2	psy_abr_map
op	5:38	0:0	2	[
water	5:39	0:0	2	12
op	5:41	0:0	2	]
op	5:42	0:0	2	.
water	5:43	0:0	2	quality
decl	6:4	6:50	2	int	upper_range_kbps
op	6:25	0:0	2	=
water	6:27	0:0	2	psy_abr_map
op	6:38	0:0	2	[
water	6:39	0:0	2	12
op	6:41	0:0	2	]
op	6:42	0:0	2	.
water	6:43	0:0	2	quality
decl	7:4	7:9	2	int	i
for	11:4	19:4	2	(i = 1 ;i < 13;i ++)
forinit	11:9	11:14	3	i = 1 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	1
water	11:14	0:0	4	;
cond	11:16	11:20	3	i < 13
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	13
forexpr	11:24	11:25	3	i ++
water	11:24	0:0	4	i
op	11:25	0:0	4	++
stmts	11:29	19:4	3	
water	11:29	0:0	4	{
if	12:8	18:8	4	(FFMAX (bitrate ,psy_abr_map [ i ] . quality ) != bitrate)
cond	12:12	12:54	5	FFMAX (bitrate ,psy_abr_map [ i ] . quality ) != bitrate
call	12:12	12:49	6	FFMAX
arg	12:18	12:25	7	bitrate
water	12:18	0:0	8	bitrate
arg	12:27	12:49	7	psy_abr_map[i].quality
water	12:27	0:0	8	psy_abr_map
op	12:38	0:0	8	[
water	12:39	0:0	8	i
op	12:40	0:0	8	]
op	12:41	0:0	8	.
water	12:42	0:0	8	quality
op	12:51	0:0	6	!=
water	12:54	0:0	6	bitrate
stmts	12:63	18:8	5	
water	12:63	0:0	6	{
water	13:12	0:0	6	upper_range
op	13:24	0:0	6	=
water	13:26	0:0	6	i
water	13:27	0:0	6	;
water	14:12	0:0	6	upper_range_kbps
op	14:29	0:0	6	=
water	14:31	0:0	6	psy_abr_map
op	14:42	0:0	6	[
water	14:43	0:0	6	i
op	14:48	0:0	6	]
op	14:49	0:0	6	.
water	14:50	0:0	6	quality
water	14:57	0:0	6	;
water	15:12	0:0	6	lower_range
op	15:24	0:0	6	=
water	15:26	0:0	6	i
op	15:28	0:0	6	-
water	15:30	0:0	6	1
water	15:31	0:0	6	;
water	16:12	0:0	6	lower_range_kbps
op	16:29	0:0	6	=
water	16:31	0:0	6	psy_abr_map
op	16:42	0:0	6	[
water	16:43	0:0	6	i
op	16:45	0:0	6	-
water	16:47	0:0	6	1
op	16:48	0:0	6	]
op	16:49	0:0	6	.
water	16:50	0:0	6	quality
water	16:57	0:0	6	;
break	17:12	17:17	6	
water	18:8	0:0	6	}
water	19:4	0:0	4	}
if	21:4	22:46	2	(( upper_range_kbps - bitrate ) > ( bitrate - lower_range_kbps ))
cond	21:8	21:66	3	( upper_range_kbps - bitrate ) > ( bitrate - lower_range_kbps )
water	21:8	0:0	4	(
water	21:9	0:0	4	upper_range_kbps
op	21:26	0:0	4	-
water	21:28	0:0	4	bitrate
water	21:35	0:0	4	)
op	21:37	0:0	4	>
water	21:39	0:0	4	(
water	21:40	0:0	4	bitrate
op	21:48	0:0	4	-
water	21:50	0:0	4	lower_range_kbps
water	21:66	0:0	4	)
stmts	22:8	22:46	3	
return	22:8	22:46	4	psy_abr_map[lower_range].st_lrm
water	22:15	0:0	5	psy_abr_map
op	22:26	0:0	5	[
water	22:27	0:0	5	lower_range
op	22:38	0:0	5	]
op	22:39	0:0	5	.
water	22:40	0:0	5	st_lrm
return	23:4	23:42	2	psy_abr_map[upper_range].st_lrm
water	23:11	0:0	3	psy_abr_map
op	23:22	0:0	3	[
water	23:23	0:0	3	upper_range
op	23:34	0:0	3	]
op	23:35	0:0	3	.
water	23:36	0:0	3	st_lrm

func	1:0	17:0	0	static void	print_benchs
params	1:24	0:0	1	
param	1:25	1:40	2	CheckasmFunc *	f
stmnts	3:4	16:4	1	
if	3:4	16:4	2	(f)
cond	3:8	3:8	3	f
water	3:8	0:0	4	f
stmts	3:11	16:4	3	
water	3:11	0:0	4	{
call	4:8	4:32	4	print_benchs
arg	4:21	4:32	5	f->child[0]
water	4:21	0:0	6	f
op	4:22	0:0	6	->
water	4:24	0:0	6	child
op	4:29	0:0	6	[
water	4:30	0:0	6	0
op	4:31	0:0	6	]
water	4:33	0:0	4	;
if	6:8	14:8	4	(f -> versions . cpu || f -> versions . next)
cond	6:12	6:43	5	f -> versions . cpu || f -> versions . next
water	6:12	0:0	6	f
op	6:13	0:0	6	->
water	6:15	0:0	6	versions
op	6:23	0:0	6	.
water	6:24	0:0	6	cpu
op	6:28	0:0	6	||
water	6:31	0:0	6	f
op	6:32	0:0	6	->
water	6:34	0:0	6	versions
op	6:42	0:0	6	.
water	6:43	0:0	6	next
stmts	6:49	14:8	5	
water	6:49	0:0	6	{
decl	7:12	7:49	6	CheckasmFuncVersion	*v
op	7:35	0:0	6	=
op	7:37	0:0	6	&
water	7:38	0:0	6	f
op	7:39	0:0	6	->
water	7:41	0:0	6	versions
do	8:12	13:12	6	(( v = v -> next ))
cond	13:21	13:33	7	( v = v -> next )
water	13:21	0:0	8	(
water	13:22	0:0	8	v
op	13:24	0:0	8	=
water	13:26	0:0	8	v
op	13:27	0:0	8	->
water	13:29	0:0	8	next
water	13:33	0:0	8	)
stmts	8:15	13:12	7	
water	8:15	0:0	8	{
if	9:16	12:16	8	(v -> iterations)
cond	9:20	9:23	9	v -> iterations
water	9:20	0:0	10	v
op	9:21	0:0	10	->
water	9:23	0:0	10	iterations
stmts	9:35	12:16	9	
water	9:35	0:0	10	{
decl	10:20	10:86	10	int	decicycles
op	10:35	0:0	10	=
water	10:37	0:0	10	(
water	10:38	0:0	10	10
op	10:40	0:0	10	*
water	10:41	0:0	10	v
op	10:42	0:0	10	->
water	10:44	0:0	10	cycles
op	10:50	0:0	10	/
water	10:51	0:0	10	v
op	10:52	0:0	10	->
water	10:54	0:0	10	iterations
op	10:65	0:0	10	-
water	10:67	0:0	10	state
op	10:72	0:0	10	.
water	10:73	0:0	10	nop_time
water	10:81	0:0	10	)
op	10:83	0:0	10	/
water	10:85	0:0	10	4
call	11:20	11:102	10	printf
arg	11:27	11:43	11	"%s_%s: %d.%d\n"
water	11:27	0:0	12	"%s_%s: %d.%d\n"
arg	11:45	11:52	11	f->name
water	11:45	0:0	12	f
op	11:46	0:0	12	->
water	11:48	0:0	12	name
arg	11:54	11:72	11	cpu_suffix(v->cpu)
call	11:54	11:71	12	cpu_suffix
arg	11:65	11:71	13	v->cpu
water	11:65	0:0	14	v
op	11:66	0:0	14	->
water	11:68	0:0	14	cpu
arg	11:74	11:87	11	decicycles/10
water	11:74	0:0	12	decicycles
op	11:84	0:0	12	/
water	11:85	0:0	12	10
arg	11:89	11:102	11	decicycles%10
water	11:89	0:0	12	decicycles
op	11:99	0:0	12	%
water	11:100	0:0	12	10
water	11:103	0:0	10	;
water	12:16	0:0	10	}
water	13:12	0:0	8	}
water	13:35	0:0	6	;
water	14:8	0:0	6	}
call	15:8	15:32	4	print_benchs
arg	15:21	15:32	5	f->child[1]
water	15:21	0:0	6	f
op	15:22	0:0	6	->
water	15:24	0:0	6	child
op	15:29	0:0	6	[
water	15:30	0:0	6	1
op	15:31	0:0	6	]
water	15:33	0:0	4	;
water	16:4	0:0	4	}

func	1:0	35:0	0	static int	handle_invoke_error
params	1:30	0:0	1	
param	1:31	1:44	2	URLContext *	s
param	1:46	1:61	2	RTMPPacket *	pkt
stmnts	0:0	34:14	1	
decl	3:4	3:34	2	RTMPContext	*rt
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:51	2	const uint8_t	*data_end
op	4:28	0:0	2	=
water	4:30	0:0	2	pkt
op	4:33	0:0	2	->
water	4:35	0:0	2	data
op	4:40	0:0	2	+
water	4:42	0:0	2	pkt
op	4:45	0:0	2	->
water	4:47	0:0	2	size
decl	5:4	5:31	2	char	*tracked_method
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:4	6:28	2	int	level
op	6:14	0:0	2	=
water	6:16	0:0	2	AV_LOG_ERROR
decl	7:4	7:23	2	uint8_t	tmpstr[256]
decl	8:4	8:11	2	int	ret
if	9:4	10:18	2	(( ret =find_tracked_method (s ,pkt ,9 ,& tracked_method ) ) < 0)
cond	9:8	9:66	3	( ret =find_tracked_method (s ,pkt ,9 ,& tracked_method ) ) < 0
water	9:8	0:0	4	(
water	9:9	0:0	4	ret
op	9:13	0:0	4	=
call	9:15	9:61	4	find_tracked_method
arg	9:35	9:36	5	s
water	9:35	0:0	6	s
arg	9:38	9:41	5	pkt
water	9:38	0:0	6	pkt
arg	9:43	9:44	5	9
water	9:43	0:0	6	9
arg	9:46	9:61	5	&tracked_method
op	9:46	0:0	6	&
water	9:47	0:0	6	tracked_method
water	9:62	0:0	4	)
op	9:64	0:0	4	<
water	9:66	0:0	4	0
stmts	10:8	10:18	3	
return	10:8	10:18	4	ret
water	10:15	0:0	5	ret
if	11:4	32:4	2	(!ff_amf_get_field_value (pkt -> data + 9 ,data_end ,"description" ,tmpstr ,sizeof ( tmpstr ) ))
cond	11:8	12:69	3	!ff_amf_get_field_value (pkt -> data + 9 ,data_end ,"description" ,tmpstr ,sizeof ( tmpstr ) )
op	11:8	0:0	4	!
call	11:9	12:69	4	ff_amf_get_field_value
arg	11:32	11:45	5	pkt->data+9
water	11:32	0:0	6	pkt
op	11:35	0:0	6	->
water	11:37	0:0	6	data
op	11:42	0:0	6	+
water	11:44	0:0	6	9
arg	11:47	11:55	5	data_end
water	11:47	0:0	6	data_end
arg	12:32	12:45	5	"description"
water	12:32	0:0	6	"description"
arg	12:47	12:53	5	tmpstr
water	12:47	0:0	6	tmpstr
arg	12:55	12:69	5	sizeof(tmpstr)
op	12:55	0:0	6	sizeof
water	12:61	0:0	6	(
water	12:62	0:0	6	tmpstr
water	12:68	0:0	6	)
stmts	12:72	32:4	3	
water	12:72	0:0	4	{
if	13:8	20:8	4	(tracked_method && ( !strcmp (tracked_method ,"_checkbw" ) || !strcmp (tracked_method ,"releaseStream" ) || !strcmp (tracked_method ,"FCSubscribe" ) || !strcmp (tracked_method ,"FCPublish" ) ))
cond	13:12	16:67	5	tracked_method && ( !strcmp (tracked_method ,"_checkbw" ) || !strcmp (tracked_method ,"releaseStream" ) || !strcmp (tracked_method ,"FCSubscribe" ) || !strcmp (tracked_method ,"FCPublish" ) )
water	13:12	0:0	6	tracked_method
op	13:27	0:0	6	&&
water	13:30	0:0	6	(
op	13:31	0:0	6	!
call	13:32	13:65	6	strcmp
arg	13:39	13:53	7	tracked_method
water	13:39	0:0	8	tracked_method
arg	13:55	13:65	7	"_checkbw"
water	13:55	0:0	8	"_checkbw"
op	13:72	0:0	6	||
op	14:31	0:0	6	!
call	14:32	14:70	6	strcmp
arg	14:39	14:53	7	tracked_method
water	14:39	0:0	8	tracked_method
arg	14:55	14:70	7	"releaseStream"
water	14:55	0:0	8	"releaseStream"
op	14:72	0:0	6	||
op	15:31	0:0	6	!
call	15:32	15:68	6	strcmp
arg	15:39	15:53	7	tracked_method
water	15:39	0:0	8	tracked_method
arg	15:55	15:68	7	"FCSubscribe"
water	15:55	0:0	8	"FCSubscribe"
op	15:72	0:0	6	||
op	16:31	0:0	6	!
call	16:32	16:66	6	strcmp
arg	16:39	16:53	7	tracked_method
water	16:39	0:0	8	tracked_method
arg	16:55	16:66	7	"FCPublish"
water	16:55	0:0	8	"FCPublish"
water	16:67	0:0	6	)
stmts	16:70	20:8	5	
water	16:70	0:0	6	{
water	18:12	0:0	6	level
op	18:18	0:0	6	=
water	18:20	0:0	6	AV_LOG_WARNING
water	18:34	0:0	6	;
water	19:12	0:0	6	ret
op	19:16	0:0	6	=
water	19:18	0:0	6	0
water	19:19	0:0	6	;
water	20:8	0:0	6	}
else	20:10	23:8	4
stmts	20:15	23:8	5	
if	20:15	23:8	6	(tracked_method && !strcmp (tracked_method ,"getStreamLength" ))
cond	20:19	20:78	7	tracked_method && !strcmp (tracked_method ,"getStreamLength" )
water	20:19	0:0	8	tracked_method
op	20:34	0:0	8	&&
op	20:37	0:0	8	!
call	20:38	20:78	8	strcmp
arg	20:45	20:59	9	tracked_method
water	20:45	0:0	10	tracked_method
arg	20:61	20:78	9	"getStreamLength"
water	20:61	0:0	10	"getStreamLength"
stmts	20:81	23:8	7	
water	20:81	0:0	8	{
water	21:12	0:0	8	level
op	21:18	0:0	8	=
water	21:20	0:0	8	rt
op	21:22	0:0	8	->
water	21:24	0:0	8	live
water	21:29	0:0	8	?
water	21:31	0:0	8	AV_LOG_DEBUG
water	21:44	0:0	8	:
water	21:46	0:0	8	AV_LOG_WARNING
water	21:60	0:0	8	;
water	22:12	0:0	8	ret
op	22:16	0:0	8	=
water	22:18	0:0	8	0
water	22:19	0:0	8	;
water	23:8	0:0	8	}
else	23:10	29:8	4
stmts	23:15	29:8	5	
if	23:15	29:8	6	(tracked_method && !strcmp (tracked_method ,"connect" ))
cond	23:19	23:70	7	tracked_method && !strcmp (tracked_method ,"connect" )
water	23:19	0:0	8	tracked_method
op	23:34	0:0	8	&&
op	23:37	0:0	8	!
call	23:38	23:70	8	strcmp
arg	23:45	23:59	9	tracked_method
water	23:45	0:0	10	tracked_method
arg	23:61	23:70	9	"connect"
water	23:61	0:0	10	"connect"
stmts	23:73	29:8	7	
water	23:73	0:0	8	{
water	24:12	0:0	8	ret
op	24:16	0:0	8	=
call	24:18	24:48	8	handle_connect_error
arg	24:39	24:40	9	s
water	24:39	0:0	10	s
arg	24:42	24:48	9	tmpstr
water	24:42	0:0	10	tmpstr
water	24:49	0:0	8	;
if	25:12	28:12	8	(! ret)
cond	25:16	25:17	9	! ret
op	25:16	0:0	10	!
water	25:17	0:0	10	ret
stmts	25:22	28:12	9	
water	25:22	0:0	10	{
water	26:16	0:0	10	rt
op	26:18	0:0	10	->
water	26:20	0:0	10	do_reconnect
op	26:33	0:0	10	=
water	26:35	0:0	10	1
water	26:36	0:0	10	;
water	27:16	0:0	10	level
op	27:22	0:0	10	=
water	27:24	0:0	10	AV_LOG_VERBOSE
water	27:38	0:0	10	;
water	28:12	0:0	10	}
water	29:8	0:0	8	}
else	29:10	30:33	4
stmts	30:12	30:33	5	
water	30:12	0:0	6	ret
op	30:16	0:0	6	=
water	30:18	0:0	6	AVERROR_UNKNOWN
water	30:33	0:0	6	;
call	31:8	31:53	4	av_log
arg	31:15	31:16	5	s
water	31:15	0:0	6	s
arg	31:18	31:23	5	level
water	31:18	0:0	6	level
arg	31:25	31:45	5	"Server error: %s\n"
water	31:25	0:0	6	"Server error: %s\n"
arg	31:47	31:53	5	tmpstr
water	31:47	0:0	6	tmpstr
water	31:54	0:0	4	;
water	32:4	0:0	4	}
call	33:4	33:26	2	av_free
arg	33:12	33:26	3	tracked_method
water	33:12	0:0	4	tracked_method
water	33:27	0:0	2	;
return	34:4	34:14	2	ret
water	34:11	0:0	3	ret

func	1:15	22:0	0	void	uninit
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
stmnts	0:0	21:30	1	
decl	3:4	3:32	2	ChorusContext	*s
op	3:21	0:0	2	=
water	3:23	0:0	2	ctx
op	3:26	0:0	2	->
water	3:28	0:0	2	priv
decl	4:4	4:9	2	int	n
call	5:4	5:23	2	av_freep
arg	5:13	5:23	3	&s->delays
op	5:13	0:0	4	&
water	5:14	0:0	4	s
op	5:15	0:0	4	->
water	5:17	0:0	4	delays
water	5:24	0:0	2	;
call	6:4	6:23	2	av_freep
arg	6:13	6:23	3	&s->decays
op	6:13	0:0	4	&
water	6:14	0:0	4	s
op	6:15	0:0	4	->
water	6:17	0:0	4	decays
water	6:24	0:0	2	;
call	7:4	7:23	2	av_freep
arg	7:13	7:23	3	&s->speeds
op	7:13	0:0	4	&
water	7:14	0:0	4	s
op	7:15	0:0	4	->
water	7:17	0:0	4	speeds
water	7:24	0:0	2	;
call	8:4	8:23	2	av_freep
arg	8:13	8:23	3	&s->depths
op	8:13	0:0	4	&
water	8:14	0:0	4	s
op	8:15	0:0	4	->
water	8:17	0:0	4	depths
water	8:24	0:0	2	;
if	9:4	10:34	2	(s -> chorusbuf)
cond	9:8	9:11	3	s -> chorusbuf
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	chorusbuf
stmts	10:8	10:34	3	
call	10:8	10:33	4	av_freep
arg	10:17	10:33	5	&s->chorusbuf[0]
op	10:17	0:0	6	&
water	10:18	0:0	6	s
op	10:19	0:0	6	->
water	10:21	0:0	6	chorusbuf
op	10:30	0:0	6	[
water	10:31	0:0	6	0
op	10:32	0:0	6	]
water	10:34	0:0	4	;
call	11:4	11:26	2	av_freep
arg	11:13	11:26	3	&s->chorusbuf
op	11:13	0:0	4	&
water	11:14	0:0	4	s
op	11:15	0:0	4	->
water	11:17	0:0	4	chorusbuf
water	11:27	0:0	2	;
if	12:4	14:34	2	(s -> phase)
cond	12:8	12:11	3	s -> phase
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	phase
stmts	13:8	14:34	3	
for	13:8	14:34	4	(n = 0 ;n < s -> channels;n ++)
forinit	13:13	13:18	5	n = 0 ;
water	13:13	0:0	6	n
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:27	5	n < s -> channels
water	13:20	0:0	6	n
op	13:22	0:0	6	<
water	13:24	0:0	6	s
op	13:25	0:0	6	->
water	13:27	0:0	6	channels
forexpr	13:37	13:38	5	n ++
water	13:37	0:0	6	n
op	13:38	0:0	6	++
stmts	14:12	14:34	5	
call	14:12	14:33	6	av_freep
arg	14:21	14:33	7	&s->phase[n]
op	14:21	0:0	8	&
water	14:22	0:0	8	s
op	14:23	0:0	8	->
water	14:25	0:0	8	phase
op	14:30	0:0	8	[
water	14:31	0:0	8	n
op	14:32	0:0	8	]
water	14:34	0:0	6	;
call	15:4	15:22	2	av_freep
arg	15:13	15:22	3	&s->phase
op	15:13	0:0	4	&
water	15:14	0:0	4	s
op	15:15	0:0	4	->
water	15:17	0:0	4	phase
water	15:23	0:0	2	;
call	16:4	16:24	2	av_freep
arg	16:13	16:24	3	&s->counter
op	16:13	0:0	4	&
water	16:14	0:0	4	s
op	16:15	0:0	4	->
water	16:17	0:0	4	counter
water	16:25	0:0	2	;
call	17:4	17:23	2	av_freep
arg	17:13	17:23	3	&s->length
op	17:13	0:0	4	&
water	17:14	0:0	4	s
op	17:15	0:0	4	->
water	17:17	0:0	4	length
water	17:24	0:0	2	;
if	18:4	20:41	2	(s -> lookup_table)
cond	18:8	18:11	3	s -> lookup_table
water	18:8	0:0	4	s
op	18:9	0:0	4	->
water	18:11	0:0	4	lookup_table
stmts	19:8	20:41	3	
for	19:8	20:41	4	(n = 0 ;n < s -> num_chorus;n ++)
forinit	19:13	19:18	5	n = 0 ;
water	19:13	0:0	6	n
op	19:15	0:0	6	=
water	19:17	0:0	6	0
water	19:18	0:0	6	;
cond	19:20	19:27	5	n < s -> num_chorus
water	19:20	0:0	6	n
op	19:22	0:0	6	<
water	19:24	0:0	6	s
op	19:25	0:0	6	->
water	19:27	0:0	6	num_chorus
forexpr	19:39	19:40	5	n ++
water	19:39	0:0	6	n
op	19:40	0:0	6	++
stmts	20:12	20:41	5	
call	20:12	20:40	6	av_freep
arg	20:21	20:40	7	&s->lookup_table[n]
op	20:21	0:0	8	&
water	20:22	0:0	8	s
op	20:23	0:0	8	->
water	20:25	0:0	8	lookup_table
op	20:37	0:0	8	[
water	20:38	0:0	8	n
op	20:39	0:0	8	]
water	20:41	0:0	6	;
call	21:4	21:29	2	av_freep
arg	21:13	21:29	3	&s->lookup_table
op	21:13	0:0	4	&
water	21:14	0:0	4	s
op	21:15	0:0	4	->
water	21:17	0:0	4	lookup_table
water	21:30	0:0	2	;

func	1:0	21:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	20:12	1	
decl	3:4	3:40	2	HQDN3DContext	*s
op	3:21	0:0	2	=
water	3:23	0:0	2	inlink
op	3:29	0:0	2	->
water	3:31	0:0	2	dst
op	3:34	0:0	2	->
water	3:36	0:0	2	priv
decl	4:4	4:72	2	const AVPixFmtDescriptor	*desc
op	4:35	0:0	2	=
call	4:37	4:71	3	av_pix_fmt_desc_get
arg	4:57	4:71	4	inlink->format
water	4:57	0:0	5	inlink
op	4:63	0:0	5	->
water	4:65	0:0	5	format
decl	5:4	5:9	2	int	i
call	6:4	6:22	2	uninit
arg	6:11	6:22	3	inlink->dst
water	6:11	0:0	4	inlink
op	6:17	0:0	4	->
water	6:19	0:0	4	dst
water	6:23	0:0	2	;
water	7:4	0:0	2	s
op	7:5	0:0	2	->
water	7:7	0:0	2	hsub
op	7:13	0:0	2	=
water	7:15	0:0	2	desc
op	7:19	0:0	2	->
water	7:21	0:0	2	log2_chroma_w
water	7:34	0:0	2	;
water	8:4	0:0	2	s
op	8:5	0:0	2	->
water	8:7	0:0	2	vsub
op	8:13	0:0	2	=
water	8:15	0:0	2	desc
op	8:19	0:0	2	->
water	8:21	0:0	2	log2_chroma_h
water	8:34	0:0	2	;
water	9:4	0:0	2	s
op	9:5	0:0	2	->
water	9:7	0:0	2	depth
op	9:13	0:0	2	=
water	9:15	0:0	2	desc
op	9:19	0:0	2	->
water	9:21	0:0	2	comp
op	9:25	0:0	2	[
water	9:26	0:0	2	0
op	9:27	0:0	2	]
op	9:28	0:0	2	.
water	9:29	0:0	2	depth_minus1
op	9:41	0:0	2	+
water	9:42	0:0	2	1
water	9:43	0:0	2	;
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	line
op	10:12	0:0	2	=
call	10:14	10:57	2	av_malloc_array
arg	10:30	10:39	3	inlink->w
water	10:30	0:0	4	inlink
op	10:36	0:0	4	->
water	10:38	0:0	4	w
arg	10:41	10:57	3	sizeof(*s->line)
op	10:41	0:0	4	sizeof
water	10:47	0:0	4	(
op	10:48	0:0	4	*
water	10:49	0:0	4	s
op	10:50	0:0	4	->
water	10:52	0:0	4	line
water	10:56	0:0	4	)
water	10:58	0:0	2	;
if	11:4	12:30	2	(! s -> line)
cond	11:8	11:12	3	! s -> line
op	11:8	0:0	4	!
water	11:9	0:0	4	s
op	11:10	0:0	4	->
water	11:12	0:0	4	line
stmts	12:8	12:30	3	
return	12:8	12:30	4	AVERROR(ENOMEM)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	ENOMEM
water	12:23	0:0	7	ENOMEM
for	13:4	17:4	2	(i = 0 ;i < 4;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	i < 4
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	4
forexpr	13:23	13:24	3	i ++
water	13:23	0:0	4	i
op	13:24	0:0	4	++
stmts	13:28	17:4	3	
water	13:28	0:0	4	{
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	coefs
op	14:16	0:0	4	[
water	14:17	0:0	4	i
op	14:18	0:0	4	]
op	14:20	0:0	4	=
call	14:22	14:60	4	precalc_coefs
arg	14:36	14:50	5	s->strength[i]
water	14:36	0:0	6	s
op	14:37	0:0	6	->
water	14:39	0:0	6	strength
op	14:47	0:0	6	[
water	14:48	0:0	6	i
op	14:49	0:0	6	]
arg	14:52	14:60	5	s->depth
water	14:52	0:0	6	s
op	14:53	0:0	6	->
water	14:55	0:0	6	depth
water	14:61	0:0	4	;
if	15:8	16:34	4	(! s -> coefs [ i ])
cond	15:12	15:23	5	! s -> coefs [ i ]
op	15:12	0:0	6	!
water	15:13	0:0	6	s
op	15:14	0:0	6	->
water	15:16	0:0	6	coefs
op	15:21	0:0	6	[
water	15:22	0:0	6	i
op	15:23	0:0	6	]
stmts	16:12	16:34	5	
return	16:12	16:34	6	AVERROR(ENOMEM)
call	16:19	16:33	7	AVERROR
arg	16:27	16:33	8	ENOMEM
water	16:27	0:0	9	ENOMEM
water	17:4	0:0	4	}
if	18:4	19:29	2	(ARCH_X86)
cond	18:8	18:8	3	ARCH_X86
water	18:8	0:0	4	ARCH_X86
stmts	19:8	19:29	3	
call	19:8	19:28	4	ff_hqdn3d_init_x86
arg	19:27	19:28	5	s
water	19:27	0:0	6	s
water	19:29	0:0	4	;
return	20:4	20:12	2	0
water	20:11	0:0	3	0

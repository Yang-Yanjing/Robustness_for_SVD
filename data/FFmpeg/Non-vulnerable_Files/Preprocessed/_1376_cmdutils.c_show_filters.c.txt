func	1:0	44:0	0	int	show_filters
params	1:16	0:0	1	
param	1:17	1:29	2	void *	optctx
param	1:31	1:46	2	const char *	opt
param	1:48	1:63	2	const char *	arg
stmnts	0:0	43:12	1	
decl	4:4	4:33	2	const AVFilter	*filter
op	4:27	0:0	2	=
water	4:29	0:0	2	NULL
decl	5:4	5:30	2	char	descr[64]
water	5:18	0:0	2	,
decl	5:4	5:30	2	char	*descr_cur
decl	6:4	6:12	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:12	2	int	j
decl	7:4	7:26	2	const AVFilterPad	*pad
call	8:4	15:42	2	printf
arg	8:11	15:42	3	"Filters:\n""  T.. = Timeline support\n""  .S. = Slice threading\n""  ..C = Command support\n""  A = Audio input/output\n""  V = Video input/output\n""  N = Dynamic number and/or type of input/output\n""  | = Source or sink filter\n"
water	8:11	0:0	4	"Filters:\n"
water	9:11	0:0	4	"  T.. = Timeline support\n"
water	10:11	0:0	4	"  .S. = Slice threading\n"
water	11:11	0:0	4	"  ..C = Command support\n"
water	12:11	0:0	4	"  A = Audio input/output\n"
water	13:11	0:0	4	"  V = Video input/output\n"
water	14:11	0:0	4	"  N = Dynamic number and/or type of input/output\n"
water	15:11	0:0	4	"  | = Source or sink filter\n"
water	15:43	0:0	2	;
while	16:4	39:4	2	(( filter =avfilter_next (filter ) ))
cond	16:11	16:42	3	( filter =avfilter_next (filter ) )
water	16:11	0:0	4	(
water	16:12	0:0	4	filter
op	16:19	0:0	4	=
call	16:21	16:41	4	avfilter_next
arg	16:35	16:41	5	filter
water	16:35	0:0	6	filter
water	16:42	0:0	4	)
stmts	16:45	39:4	3	
water	16:45	0:0	4	{
water	17:8	0:0	4	descr_cur
op	17:18	0:0	4	=
water	17:20	0:0	4	descr
water	17:25	0:0	4	;
for	18:8	32:8	4	(i = 0 ;i < 2;i ++)
forinit	18:13	18:18	5	i = 0 ;
water	18:13	0:0	6	i
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:24	5	i < 2
water	18:20	0:0	6	i
op	18:22	0:0	6	<
water	18:24	0:0	6	2
forexpr	18:27	18:28	5	i ++
water	18:27	0:0	6	i
op	18:28	0:0	6	++
stmts	18:32	32:8	5	
water	18:32	0:0	6	{
if	19:12	22:12	6	(i)
cond	19:16	19:16	7	i
water	19:16	0:0	8	i
stmts	19:19	22:12	7	
water	19:19	0:0	8	{
op	20:16	0:0	8	*
water	20:17	0:0	8	(
water	20:18	0:0	8	descr_cur
op	20:27	0:0	8	++
water	20:29	0:0	8	)
op	20:31	0:0	8	=
water	20:33	0:0	8	'-'
water	20:36	0:0	8	;
op	21:16	0:0	8	*
water	21:17	0:0	8	(
water	21:18	0:0	8	descr_cur
op	21:27	0:0	8	++
water	21:29	0:0	8	)
op	21:31	0:0	8	=
water	21:33	0:0	8	'>'
water	21:36	0:0	8	;
water	22:12	0:0	8	}
water	23:12	0:0	6	pad
op	23:16	0:0	6	=
water	23:18	0:0	6	i
water	23:20	0:0	6	?
water	23:22	0:0	6	filter
op	23:28	0:0	6	->
water	23:30	0:0	6	outputs
water	23:38	0:0	6	:
water	23:40	0:0	6	filter
op	23:46	0:0	6	->
water	23:48	0:0	6	inputs
water	23:54	0:0	6	;
for	24:12	28:12	6	(j = 0 ;pad &&avfilter_pad_get_name (pad ,j );j ++)
forinit	24:17	24:22	7	j = 0 ;
water	24:17	0:0	8	j
op	24:19	0:0	8	=
water	24:21	0:0	8	0
water	24:22	0:0	8	;
cond	24:24	24:59	7	pad &&avfilter_pad_get_name (pad ,j )
water	24:24	0:0	8	pad
op	24:28	0:0	8	&&
call	24:31	24:59	8	avfilter_pad_get_name
arg	24:53	24:56	9	pad
water	24:53	0:0	10	pad
arg	24:58	24:59	9	j
water	24:58	0:0	10	j
forexpr	24:62	24:63	7	j ++
water	24:62	0:0	8	j
op	24:63	0:0	8	++
stmts	24:67	28:12	7	
water	24:67	0:0	8	{
if	25:16	26:25	8	(descr_cur >= descr + sizeof ( descr ) - 4)
cond	25:20	25:57	9	descr_cur >= descr + sizeof ( descr ) - 4
water	25:20	0:0	10	descr_cur
op	25:30	0:0	10	>=
water	25:33	0:0	10	descr
op	25:39	0:0	10	+
op	25:41	0:0	10	sizeof
water	25:47	0:0	10	(
water	25:48	0:0	10	descr
water	25:53	0:0	10	)
op	25:55	0:0	10	-
water	25:57	0:0	10	4
stmts	26:20	26:25	9	
break	26:20	26:25	10	
op	27:16	0:0	8	*
water	27:17	0:0	8	(
water	27:18	0:0	8	descr_cur
op	27:27	0:0	8	++
water	27:29	0:0	8	)
op	27:31	0:0	8	=
call	27:33	27:82	8	get_media_type_char
arg	27:53	27:82	9	avfilter_pad_get_type(pad,j)
call	27:53	27:81	10	avfilter_pad_get_type
arg	27:75	27:78	11	pad
water	27:75	0:0	12	pad
arg	27:80	27:81	11	j
water	27:80	0:0	12	j
water	27:83	0:0	8	;
water	28:12	0:0	8	}
if	29:12	31:102	6	(! j)
cond	29:16	29:17	7	! j
op	29:16	0:0	8	!
water	29:17	0:0	8	j
stmts	30:16	31:102	7	
op	30:16	0:0	8	*
water	30:17	0:0	8	(
water	30:18	0:0	8	descr_cur
op	30:27	0:0	8	++
water	30:29	0:0	8	)
op	30:31	0:0	8	=
water	30:33	0:0	8	(
water	30:34	0:0	8	(
op	30:35	0:0	8	!
water	30:36	0:0	8	i
op	30:38	0:0	8	&&
water	30:41	0:0	8	(
water	30:42	0:0	8	filter
op	30:48	0:0	8	->
water	30:50	0:0	8	flags
op	30:56	0:0	8	&
water	30:58	0:0	8	AVFILTER_FLAG_DYNAMIC_INPUTS
water	30:86	0:0	8	)
water	30:87	0:0	8	)
op	30:89	0:0	8	||
water	31:34	0:0	8	(
water	31:36	0:0	8	i
op	31:38	0:0	8	&&
water	31:41	0:0	8	(
water	31:42	0:0	8	filter
op	31:48	0:0	8	->
water	31:50	0:0	8	flags
op	31:56	0:0	8	&
water	31:58	0:0	8	AVFILTER_FLAG_DYNAMIC_OUTPUTS
water	31:87	0:0	8	)
water	31:88	0:0	8	)
water	31:89	0:0	8	)
water	31:91	0:0	8	?
water	31:93	0:0	8	'N'
water	31:97	0:0	8	:
water	31:99	0:0	8	'|'
water	31:102	0:0	8	;
water	32:8	0:0	6	}
op	33:8	0:0	4	*
water	33:9	0:0	4	descr_cur
op	33:19	0:0	4	=
water	33:21	0:0	4	0
water	33:22	0:0	4	;
call	34:8	38:55	4	printf
arg	34:15	34:41	5	" %c%c%c %-17s %-10s %s\n"
water	34:15	0:0	6	" %c%c%c %-17s %-10s %s\n"
arg	35:15	35:73	5	filter->flags&AVFILTER_FLAG_SUPPORT_TIMELINE?'T':'.'
water	35:15	0:0	6	filter
op	35:21	0:0	6	->
water	35:23	0:0	6	flags
op	35:29	0:0	6	&
water	35:31	0:0	6	AVFILTER_FLAG_SUPPORT_TIMELINE
water	35:62	0:0	6	?
water	35:64	0:0	6	'T'
water	35:68	0:0	6	:
water	35:70	0:0	6	'.'
arg	36:15	36:73	5	filter->flags&AVFILTER_FLAG_SLICE_THREADS?'S':'.'
water	36:15	0:0	6	filter
op	36:21	0:0	6	->
water	36:23	0:0	6	flags
op	36:29	0:0	6	&
water	36:31	0:0	6	AVFILTER_FLAG_SLICE_THREADS
water	36:62	0:0	6	?
water	36:64	0:0	6	'S'
water	36:68	0:0	6	:
water	36:70	0:0	6	'.'
arg	37:15	37:73	5	filter->process_command?'C':'.'
water	37:15	0:0	6	filter
op	37:21	0:0	6	->
water	37:23	0:0	6	process_command
water	37:62	0:0	6	?
water	37:64	0:0	6	'C'
water	37:68	0:0	6	:
water	37:70	0:0	6	'.'
arg	38:15	38:27	5	filter->name
water	38:15	0:0	6	filter
op	38:21	0:0	6	->
water	38:23	0:0	6	name
arg	38:29	38:34	5	descr
water	38:29	0:0	6	descr
arg	38:36	38:55	5	filter->description
water	38:36	0:0	6	filter
op	38:42	0:0	6	->
water	38:44	0:0	6	description
water	38:56	0:0	4	;
water	39:4	0:0	4	}
call	41:4	41:57	2	printf
arg	41:11	41:57	3	"No filters available: libavfilter disabled\n"
water	41:11	0:0	4	"No filters available: libavfilter disabled\n"
water	41:58	0:0	2	;
return	43:4	43:12	2	0
water	43:11	0:0	3	0

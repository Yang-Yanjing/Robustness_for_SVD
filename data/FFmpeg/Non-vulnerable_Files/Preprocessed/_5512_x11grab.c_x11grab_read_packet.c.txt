func	1:0	98:0	0	static int	x11grab_read_packet
params	1:30	0:0	1	
param	1:31	1:50	2	AVFormatContext *	s1
param	1:52	1:65	2	AVPacket *	pkt
stmnts	0:0	97:24	1	
decl	3:4	3:37	2	X11GrabContext	*s
op	3:22	0:0	2	=
water	3:24	0:0	2	s1
op	3:26	0:0	2	->
water	3:28	0:0	2	priv_data
decl	4:4	4:30	2	Display	*dpy
op	4:22	0:0	2	=
water	4:24	0:0	2	s
op	4:25	0:0	2	->
water	4:27	0:0	2	dpy
decl	5:4	5:32	2	XImage	*image
op	5:22	0:0	2	=
water	5:24	0:0	2	s
op	5:25	0:0	2	->
water	5:27	0:0	2	image
decl	6:4	6:32	2	int	x_off
op	6:22	0:0	2	=
water	6:24	0:0	2	s
op	6:25	0:0	2	->
water	6:27	0:0	2	x_off
decl	7:4	7:32	2	int	y_off
op	7:22	0:0	2	=
water	7:24	0:0	2	s
op	7:25	0:0	2	->
water	7:27	0:0	2	y_off
decl	8:4	8:39	2	int	follow_mouse
op	8:22	0:0	2	=
water	8:24	0:0	2	s
op	8:25	0:0	2	->
water	8:27	0:0	2	follow_mouse
decl	9:4	9:56	2	int	screen
water	9:14	0:0	2	,
decl	9:4	9:56	2	int	pointer_x
water	9:25	0:0	2	,
decl	9:4	9:56	2	int	pointer_y
water	9:36	0:0	2	,
decl	9:4	9:56	2	int	_
water	9:39	0:0	2	,
decl	9:4	9:56	2	int	same_screen
op	9:53	0:0	2	=
water	9:55	0:0	2	1
decl	10:4	10:18	2	Window	w
water	10:12	0:0	2	,
decl	10:4	10:18	2	Window	root
decl	11:4	11:26	2	int64_t	curtime
water	11:19	0:0	2	,
decl	11:4	11:26	2	int64_t	delay
decl	12:4	12:22	2	struct timespec	ts
water	14:4	0:0	2	s
op	14:5	0:0	2	->
water	14:7	0:0	2	time_frame
op	14:18	0:0	2	+=
call	14:21	14:36	2	INT64_C
arg	14:29	14:36	3	1000000
water	14:29	0:0	4	1000000
water	14:37	0:0	2	;
for	16:4	27:4	2	(;;)
forinit	16:9	16:9	3	;
water	16:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	16:13	27:4	3	
water	16:13	0:0	4	{
water	17:8	0:0	4	curtime
op	17:16	0:0	4	=
call	17:18	17:29	4	av_gettime
water	17:30	0:0	4	;
water	18:8	0:0	4	delay
op	18:16	0:0	4	=
water	18:18	0:0	4	s
op	18:19	0:0	4	->
water	18:21	0:0	4	time_frame
call	18:32	18:53	4	*av_q2d
arg	18:41	18:53	5	s->time_base
water	18:41	0:0	6	s
op	18:42	0:0	6	->
water	18:44	0:0	6	time_base
op	18:55	0:0	4	-
water	18:57	0:0	4	curtime
water	18:64	0:0	4	;
if	19:8	23:8	4	(delay <= 0)
cond	19:12	19:21	5	delay <= 0
water	19:12	0:0	6	delay
op	19:18	0:0	6	<=
water	19:21	0:0	6	0
stmts	19:24	23:8	5	
water	19:24	0:0	6	{
if	20:12	21:49	6	(delay <INT64_C (- 1000000 )* av_q2d (s -> time_base ))
cond	20:16	20:63	7	delay <INT64_C (- 1000000 )* av_q2d (s -> time_base )
water	20:16	0:0	8	delay
op	20:22	0:0	8	<
call	20:24	20:40	8	INT64_C
arg	20:32	20:40	9	-1000000
op	20:32	0:0	10	-
water	20:33	0:0	10	1000000
call	20:42	20:63	8	*av_q2d
arg	20:51	20:63	9	s->time_base
water	20:51	0:0	10	s
op	20:52	0:0	10	->
water	20:54	0:0	10	time_base
stmts	21:16	21:49	7	
water	21:16	0:0	8	s
op	21:17	0:0	8	->
water	21:19	0:0	8	time_frame
op	21:30	0:0	8	+=
call	21:33	21:48	8	INT64_C
arg	21:41	21:48	9	1000000
water	21:41	0:0	10	1000000
water	21:49	0:0	8	;
break	22:12	22:17	6	
water	23:8	0:0	6	}
water	24:8	0:0	4	ts
op	24:10	0:0	4	.
water	24:11	0:0	4	tv_sec
op	24:19	0:0	4	=
water	24:21	0:0	4	delay
op	24:27	0:0	4	/
water	24:29	0:0	4	1000000
water	24:36	0:0	4	;
water	25:8	0:0	4	ts
op	25:10	0:0	4	.
water	25:11	0:0	4	tv_nsec
op	25:19	0:0	4	=
water	25:21	0:0	4	(
water	25:22	0:0	4	delay
op	25:28	0:0	4	%
water	25:30	0:0	4	1000000
water	25:37	0:0	4	)
op	25:39	0:0	4	*
water	25:41	0:0	4	1000
water	25:45	0:0	4	;
call	26:8	26:27	4	nanosleep
arg	26:18	26:21	5	&ts
op	26:18	0:0	6	&
water	26:19	0:0	6	ts
arg	26:23	26:27	5	NULL
water	26:23	0:0	6	NULL
water	26:28	0:0	4	;
water	27:4	0:0	4	}
call	28:4	28:22	2	av_init_packet
arg	28:19	28:22	3	pkt
water	28:19	0:0	4	pkt
water	28:23	0:0	2	;
water	29:4	0:0	2	pkt
op	29:7	0:0	2	->
water	29:9	0:0	2	data
op	29:14	0:0	2	=
water	29:16	0:0	2	image
op	29:21	0:0	2	->
water	29:23	0:0	2	data
water	29:27	0:0	2	;
water	30:4	0:0	2	pkt
op	30:7	0:0	2	->
water	30:9	0:0	2	size
op	30:14	0:0	2	=
water	30:16	0:0	2	s
op	30:17	0:0	2	->
water	30:19	0:0	2	frame_size
water	30:29	0:0	2	;
water	31:4	0:0	2	pkt
op	31:7	0:0	2	->
water	31:9	0:0	2	pts
op	31:14	0:0	2	=
water	31:16	0:0	2	curtime
water	31:23	0:0	2	;
if	32:4	41:4	2	(s -> palette_changed)
cond	32:8	32:11	3	s -> palette_changed
water	32:8	0:0	4	s
op	32:9	0:0	4	->
water	32:11	0:0	4	palette_changed
stmts	32:28	41:4	3	
water	32:28	0:0	4	{
decl	33:8	34:62	4	uint8_t	*pal
op	33:21	0:0	4	=
call	33:23	34:61	5	av_packet_new_side_data
arg	33:47	33:50	6	pkt
water	33:47	0:0	7	pkt
arg	33:52	33:71	6	AV_PKT_DATA_PALETTE
water	33:52	0:0	7	AV_PKT_DATA_PALETTE
arg	34:47	34:61	6	AVPALETTE_SIZE
water	34:47	0:0	7	AVPALETTE_SIZE
if	35:8	37:8	4	(! pal)
cond	35:12	35:13	5	! pal
op	35:12	0:0	6	!
water	35:13	0:0	6	pal
stmts	35:18	37:8	5	
water	35:18	0:0	6	{
call	36:12	36:71	6	av_log
arg	36:19	36:20	7	s
water	36:19	0:0	8	s
arg	36:22	36:34	7	AV_LOG_ERROR
water	36:22	0:0	8	AV_LOG_ERROR
arg	36:36	36:71	7	"Cannot append palette to packet\n"
water	36:36	0:0	8	"Cannot append palette to packet\n"
water	36:72	0:0	6	;
water	37:8	0:0	6	}
else	37:10	40:8	4
stmts	37:15	40:8	5	
water	37:15	0:0	6	{
call	38:12	38:50	6	memcpy
arg	38:19	38:22	7	pal
water	38:19	0:0	8	pal
arg	38:24	38:34	7	s->palette
water	38:24	0:0	8	s
op	38:25	0:0	8	->
water	38:27	0:0	8	palette
arg	38:36	38:50	7	AVPALETTE_SIZE
water	38:36	0:0	8	AVPALETTE_SIZE
water	38:51	0:0	6	;
water	39:12	0:0	6	s
op	39:13	0:0	6	->
water	39:15	0:0	6	palette_changed
op	39:31	0:0	6	=
water	39:33	0:0	6	0
water	39:34	0:0	6	;
water	40:8	0:0	6	}
water	41:4	0:0	4	}
water	42:4	0:0	2	screen
op	42:11	0:0	2	=
call	42:13	42:30	2	DefaultScreen
arg	42:27	42:30	3	dpy
water	42:27	0:0	4	dpy
water	42:31	0:0	2	;
water	43:4	0:0	2	root
op	43:11	0:0	2	=
call	43:13	43:35	2	RootWindow
arg	43:24	43:27	3	dpy
water	43:24	0:0	4	dpy
arg	43:29	43:35	3	screen
water	43:29	0:0	4	screen
water	43:36	0:0	2	;
if	44:4	46:71	2	(follow_mouse || s -> draw_mouse)
cond	44:8	44:27	3	follow_mouse || s -> draw_mouse
water	44:8	0:0	4	follow_mouse
op	44:21	0:0	4	||
water	44:24	0:0	4	s
op	44:25	0:0	4	->
water	44:27	0:0	4	draw_mouse
stmts	45:8	46:71	3	
water	45:8	0:0	4	same_screen
op	45:20	0:0	4	=
call	45:22	46:70	4	XQueryPointer
arg	45:36	45:39	5	dpy
water	45:36	0:0	6	dpy
arg	45:41	45:45	5	root
water	45:41	0:0	6	root
arg	45:47	45:49	5	&w
op	45:47	0:0	6	&
water	45:48	0:0	6	w
arg	45:51	45:53	5	&w
op	45:51	0:0	6	&
water	45:52	0:0	6	w
arg	46:36	46:46	5	&pointer_x
op	46:36	0:0	6	&
water	46:37	0:0	6	pointer_x
arg	46:48	46:58	5	&pointer_y
op	46:48	0:0	6	&
water	46:49	0:0	6	pointer_y
arg	46:60	46:62	5	&_
op	46:60	0:0	6	&
water	46:61	0:0	6	_
arg	46:64	46:66	5	&_
op	46:64	0:0	6	&
water	46:65	0:0	6	_
arg	46:68	46:70	5	&_
op	46:68	0:0	6	&
water	46:69	0:0	6	_
water	46:71	0:0	4	;
if	47:4	74:4	2	(follow_mouse && same_screen)
cond	47:8	47:24	3	follow_mouse && same_screen
water	47:8	0:0	4	follow_mouse
op	47:21	0:0	4	&&
water	47:24	0:0	4	same_screen
stmts	47:37	74:4	3	
water	47:37	0:0	4	{
decl	48:8	48:30	4	int	screen_w
water	48:20	0:0	4	,
decl	48:8	48:30	4	int	screen_h
water	49:8	0:0	4	screen_w
op	49:17	0:0	4	=
call	49:19	49:43	4	DisplayWidth
arg	49:32	49:35	5	dpy
water	49:32	0:0	6	dpy
arg	49:37	49:43	5	screen
water	49:37	0:0	6	screen
water	49:44	0:0	4	;
water	50:8	0:0	4	screen_h
op	50:17	0:0	4	=
call	50:19	50:44	4	DisplayHeight
arg	50:33	50:36	5	dpy
water	50:33	0:0	6	dpy
arg	50:38	50:44	5	screen
water	50:38	0:0	6	screen
water	50:45	0:0	4	;
if	51:8	55:8	4	(follow_mouse == - 1)
cond	51:12	51:29	5	follow_mouse == - 1
water	51:12	0:0	6	follow_mouse
op	51:25	0:0	6	==
op	51:28	0:0	6	-
water	51:29	0:0	6	1
stmts	51:32	55:8	5	
water	51:32	0:0	6	{
water	53:12	0:0	6	x_off
op	53:18	0:0	6	+=
water	53:21	0:0	6	pointer_x
op	53:31	0:0	6	-
water	53:33	0:0	6	s
op	53:34	0:0	6	->
water	53:36	0:0	6	width
op	53:42	0:0	6	/
water	53:44	0:0	6	2
op	53:46	0:0	6	-
water	53:48	0:0	6	x_off
water	53:53	0:0	6	;
water	54:12	0:0	6	y_off
op	54:18	0:0	6	+=
water	54:21	0:0	6	pointer_y
op	54:31	0:0	6	-
water	54:33	0:0	6	s
op	54:34	0:0	6	->
water	54:36	0:0	6	height
op	54:43	0:0	6	/
water	54:45	0:0	6	2
op	54:47	0:0	6	-
water	54:49	0:0	6	y_off
water	54:54	0:0	6	;
water	55:8	0:0	6	}
else	55:10	66:8	4
stmts	55:15	66:8	5	
water	55:15	0:0	6	{
if	58:12	59:70	6	(pointer_x > x_off + s -> width - follow_mouse)
cond	58:16	58:47	7	pointer_x > x_off + s -> width - follow_mouse
water	58:16	0:0	8	pointer_x
op	58:26	0:0	8	>
water	58:28	0:0	8	x_off
op	58:34	0:0	8	+
water	58:36	0:0	8	s
op	58:37	0:0	8	->
water	58:39	0:0	8	width
op	58:45	0:0	8	-
water	58:47	0:0	8	follow_mouse
stmts	59:16	59:70	7	
water	59:16	0:0	8	x_off
op	59:22	0:0	8	+=
water	59:25	0:0	8	pointer_x
op	59:35	0:0	8	-
water	59:37	0:0	8	(
water	59:38	0:0	8	x_off
op	59:44	0:0	8	+
water	59:46	0:0	8	s
op	59:47	0:0	8	->
water	59:49	0:0	8	width
op	59:55	0:0	8	-
water	59:57	0:0	8	follow_mouse
water	59:69	0:0	8	)
water	59:70	0:0	8	;
else	60:12	61:59	6
stmts	60:17	61:59	7	
if	60:17	61:59	8	(pointer_x < x_off + follow_mouse)
cond	60:21	60:41	9	pointer_x < x_off + follow_mouse
water	60:21	0:0	10	pointer_x
op	60:31	0:0	10	<
water	60:33	0:0	10	x_off
op	60:39	0:0	10	+
water	60:41	0:0	10	follow_mouse
stmts	61:16	61:59	9	
water	61:16	0:0	10	x_off
op	61:22	0:0	10	-=
water	61:25	0:0	10	(
water	61:26	0:0	10	x_off
op	61:32	0:0	10	+
water	61:34	0:0	10	follow_mouse
water	61:46	0:0	10	)
op	61:48	0:0	10	-
water	61:50	0:0	10	pointer_x
water	61:59	0:0	10	;
if	62:12	63:71	6	(pointer_y > y_off + s -> height - follow_mouse)
cond	62:16	62:48	7	pointer_y > y_off + s -> height - follow_mouse
water	62:16	0:0	8	pointer_y
op	62:26	0:0	8	>
water	62:28	0:0	8	y_off
op	62:34	0:0	8	+
water	62:36	0:0	8	s
op	62:37	0:0	8	->
water	62:39	0:0	8	height
op	62:46	0:0	8	-
water	62:48	0:0	8	follow_mouse
stmts	63:16	63:71	7	
water	63:16	0:0	8	y_off
op	63:22	0:0	8	+=
water	63:25	0:0	8	pointer_y
op	63:35	0:0	8	-
water	63:37	0:0	8	(
water	63:38	0:0	8	y_off
op	63:44	0:0	8	+
water	63:46	0:0	8	s
op	63:47	0:0	8	->
water	63:49	0:0	8	height
op	63:56	0:0	8	-
water	63:58	0:0	8	follow_mouse
water	63:70	0:0	8	)
water	63:71	0:0	8	;
else	64:12	65:59	6
stmts	64:17	65:59	7	
if	64:17	65:59	8	(pointer_y < y_off + follow_mouse)
cond	64:21	64:41	9	pointer_y < y_off + follow_mouse
water	64:21	0:0	10	pointer_y
op	64:31	0:0	10	<
water	64:33	0:0	10	y_off
op	64:39	0:0	10	+
water	64:41	0:0	10	follow_mouse
stmts	65:16	65:59	9	
water	65:16	0:0	10	y_off
op	65:22	0:0	10	-=
water	65:25	0:0	10	(
water	65:26	0:0	10	y_off
op	65:32	0:0	10	+
water	65:34	0:0	10	follow_mouse
water	65:46	0:0	10	)
op	65:48	0:0	10	-
water	65:50	0:0	10	pointer_y
water	65:59	0:0	10	;
water	66:8	0:0	6	}
water	68:8	0:0	4	s
op	68:9	0:0	4	->
water	68:11	0:0	4	x_off
op	68:17	0:0	4	=
water	68:19	0:0	4	x_off
op	68:25	0:0	4	=
call	68:27	68:64	4	av_clip
arg	68:35	68:40	5	x_off
water	68:35	0:0	6	x_off
arg	68:42	68:43	5	0
water	68:42	0:0	6	0
arg	68:45	68:64	5	screen_w-s->width
water	68:45	0:0	6	screen_w
op	68:54	0:0	6	-
water	68:56	0:0	6	s
op	68:57	0:0	6	->
water	68:59	0:0	6	width
water	68:65	0:0	4	;
water	69:8	0:0	4	s
op	69:9	0:0	4	->
water	69:11	0:0	4	y_off
op	69:17	0:0	4	=
water	69:19	0:0	4	y_off
op	69:25	0:0	4	=
call	69:27	69:65	4	av_clip
arg	69:35	69:40	5	y_off
water	69:35	0:0	6	y_off
arg	69:42	69:43	5	0
water	69:42	0:0	6	0
arg	69:45	69:65	5	screen_h-s->height
water	69:45	0:0	6	screen_h
op	69:54	0:0	6	-
water	69:56	0:0	6	s
op	69:57	0:0	6	->
water	69:59	0:0	6	height
water	69:66	0:0	4	;
if	70:8	73:53	4	(s -> show_region && s -> region_win)
cond	70:12	70:33	5	s -> show_region && s -> region_win
water	70:12	0:0	6	s
op	70:13	0:0	6	->
water	70:15	0:0	6	show_region
op	70:27	0:0	6	&&
water	70:30	0:0	6	s
op	70:31	0:0	6	->
water	70:33	0:0	6	region_win
stmts	71:12	73:53	5	
call	71:12	73:52	6	XMoveWindow
arg	71:24	71:27	7	dpy
water	71:24	0:0	8	dpy
arg	71:29	71:42	7	s->region_win
water	71:29	0:0	8	s
op	71:30	0:0	8	->
water	71:32	0:0	8	region_win
arg	72:24	72:52	7	s->x_off-REGION_WIN_BORDER
water	72:24	0:0	8	s
op	72:25	0:0	8	->
water	72:27	0:0	8	x_off
op	72:33	0:0	8	-
water	72:35	0:0	8	REGION_WIN_BORDER
arg	73:24	73:52	7	s->y_off-REGION_WIN_BORDER
water	73:24	0:0	8	s
op	73:25	0:0	8	->
water	73:27	0:0	8	y_off
op	73:33	0:0	8	-
water	73:35	0:0	8	REGION_WIN_BORDER
water	73:53	0:0	6	;
water	74:4	0:0	4	}
if	75:4	87:4	2	(s -> show_region && same_screen)
cond	75:8	75:26	3	s -> show_region && same_screen
water	75:8	0:0	4	s
op	75:9	0:0	4	->
water	75:11	0:0	4	show_region
op	75:23	0:0	4	&&
water	75:26	0:0	4	same_screen
stmts	75:39	87:4	3	
water	75:39	0:0	4	{
if	76:8	84:8	4	(s -> region_win)
cond	76:12	76:15	5	s -> region_win
water	76:12	0:0	6	s
op	76:13	0:0	6	->
water	76:15	0:0	6	region_win
stmts	76:27	84:8	5	
water	76:27	0:0	6	{
decl	77:12	77:48	6	XEvent	evt
op	77:23	0:0	6	=
water	77:25	0:0	6	{
op	77:27	0:0	6	.
water	77:28	0:0	6	type
op	77:33	0:0	6	=
water	77:35	0:0	6	NoEventMask
water	77:47	0:0	6	}
while	79:12	81:16	6	(XCheckMaskEvent (dpy ,ExposureMask | StructureNotifyMask ,& evt ))
cond	79:19	80:39	7	XCheckMaskEvent (dpy ,ExposureMask | StructureNotifyMask ,& evt )
call	79:19	80:39	8	XCheckMaskEvent
arg	79:35	79:38	9	dpy
water	79:35	0:0	10	dpy
arg	79:40	79:74	9	ExposureMask|StructureNotifyMask
water	79:40	0:0	10	ExposureMask
op	79:53	0:0	10	|
water	79:55	0:0	10	StructureNotifyMask
arg	80:35	80:39	9	&evt
op	80:35	0:0	10	&
water	80:36	0:0	10	evt
stmts	81:16	81:16	7	
water	81:16	0:0	8	;
if	82:12	83:42	6	(evt . type)
cond	82:16	82:20	7	evt . type
water	82:16	0:0	8	evt
op	82:19	0:0	8	.
water	82:20	0:0	8	type
stmts	83:16	83:42	7	
call	83:16	83:41	8	x11grab_draw_region_win
arg	83:40	83:41	9	s
water	83:40	0:0	10	s
water	83:42	0:0	8	;
water	84:8	0:0	6	}
else	84:10	86:8	4
stmts	84:15	86:8	5	
water	84:15	0:0	6	{
call	85:12	85:37	6	x11grab_region_win_init
arg	85:36	85:37	7	s
water	85:36	0:0	8	s
water	85:38	0:0	6	;
water	86:8	0:0	6	}
water	87:4	0:0	4	}
if	88:4	91:4	2	(s -> use_shm)
cond	88:8	88:11	3	s -> use_shm
water	88:8	0:0	4	s
op	88:9	0:0	4	->
water	88:11	0:0	4	use_shm
stmts	88:20	91:4	3	
water	88:20	0:0	4	{
if	89:8	90:62	4	(!XShmGetImage (dpy ,root ,image ,x_off ,y_off ,AllPlanes ))
cond	89:12	89:67	5	!XShmGetImage (dpy ,root ,image ,x_off ,y_off ,AllPlanes )
op	89:12	0:0	6	!
call	89:13	89:67	6	XShmGetImage
arg	89:26	89:29	7	dpy
water	89:26	0:0	8	dpy
arg	89:31	89:35	7	root
water	89:31	0:0	8	root
arg	89:37	89:42	7	image
water	89:37	0:0	8	image
arg	89:44	89:49	7	x_off
water	89:44	0:0	8	x_off
arg	89:51	89:56	7	y_off
water	89:51	0:0	8	y_off
arg	89:58	89:67	7	AllPlanes
water	89:58	0:0	8	AllPlanes
stmts	90:12	90:62	5	
call	90:12	90:61	6	av_log
arg	90:19	90:21	7	s1
water	90:19	0:0	8	s1
arg	90:23	90:34	7	AV_LOG_INFO
water	90:23	0:0	8	AV_LOG_INFO
arg	90:36	90:61	7	"XShmGetImage() failed\n"
water	90:36	0:0	8	"XShmGetImage() failed\n"
water	90:62	0:0	6	;
water	91:4	0:0	4	}
else	91:6	94:4	2
stmts	91:11	94:4	3	
water	91:11	0:0	4	{
if	92:8	93:61	4	(!xget_zpixmap (dpy ,root ,image ,x_off ,y_off ))
cond	92:12	92:56	5	!xget_zpixmap (dpy ,root ,image ,x_off ,y_off )
op	92:12	0:0	6	!
call	92:13	92:56	6	xget_zpixmap
arg	92:26	92:29	7	dpy
water	92:26	0:0	8	dpy
arg	92:31	92:35	7	root
water	92:31	0:0	8	root
arg	92:37	92:42	7	image
water	92:37	0:0	8	image
arg	92:44	92:49	7	x_off
water	92:44	0:0	8	x_off
arg	92:51	92:56	7	y_off
water	92:51	0:0	8	y_off
stmts	93:12	93:61	5	
call	93:12	93:60	6	av_log
arg	93:19	93:21	7	s1
water	93:19	0:0	8	s1
arg	93:23	93:34	7	AV_LOG_INFO
water	93:23	0:0	8	AV_LOG_INFO
arg	93:36	93:60	7	"XGetZPixmap() failed\n"
water	93:36	0:0	8	"XGetZPixmap() failed\n"
water	93:61	0:0	6	;
water	94:4	0:0	4	}
if	95:4	96:38	2	(s -> draw_mouse && same_screen)
cond	95:8	95:25	3	s -> draw_mouse && same_screen
water	95:8	0:0	4	s
op	95:9	0:0	4	->
water	95:11	0:0	4	draw_mouse
op	95:22	0:0	4	&&
water	95:25	0:0	4	same_screen
stmts	96:8	96:38	3	
call	96:8	96:37	4	paint_mouse_pointer
arg	96:28	96:33	5	image
water	96:28	0:0	6	image
arg	96:35	96:37	5	s1
water	96:35	0:0	6	s1
water	96:38	0:0	4	;
return	97:4	97:24	2	s->frame_size
water	97:11	0:0	3	s
op	97:12	0:0	3	->
water	97:14	0:0	3	frame_size

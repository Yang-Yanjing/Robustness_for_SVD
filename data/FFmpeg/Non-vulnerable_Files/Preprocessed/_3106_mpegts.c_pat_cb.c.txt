func	1:0	65:0	0	static void	pat_cb
params	1:18	0:0	1	
param	1:19	1:39	2	MpegTSFilter *	filter
param	1:41	1:63	2	const uint8_t *	section
param	1:65	1:80	2	int	section_len
stmnts	0:0	64:4	1	
decl	3:4	3:55	2	MpegTSContext	*ts
op	3:22	0:0	2	=
water	3:24	0:0	2	filter
op	3:30	0:0	2	->
water	3:32	0:0	2	u
op	3:33	0:0	2	.
water	3:34	0:0	2	section_filter
op	3:48	0:0	2	.
water	3:49	0:0	2	opaque
decl	4:4	4:57	2	MpegTSSectionFilter	*tssf
op	4:30	0:0	2	=
op	4:32	0:0	2	&
water	4:33	0:0	2	filter
op	4:39	0:0	2	->
water	4:41	0:0	2	u
op	4:42	0:0	2	.
water	4:43	0:0	2	section_filter
decl	5:4	5:30	2	SectionHeader	h1
water	5:20	0:0	2	,
decl	5:4	5:30	2	SectionHeader	*h
op	5:25	0:0	2	=
op	5:27	0:0	2	&
water	5:28	0:0	2	h1
decl	6:4	6:28	2	const uint8_t	*p
water	6:20	0:0	2	,
decl	6:4	6:28	2	const uint8_t	*p_end
decl	7:4	7:20	2	int	sid
water	7:11	0:0	2	,
decl	7:4	7:20	2	int	pmt_pid
decl	8:4	8:22	2	AVProgram	*program
call	9:4	9:45	2	av_log
arg	9:11	9:21	3	ts->stream
water	9:11	0:0	4	ts
op	9:13	0:0	4	->
water	9:15	0:0	4	stream
arg	9:23	9:35	3	AV_LOG_TRACE
water	9:23	0:0	4	AV_LOG_TRACE
arg	9:37	9:45	3	"PAT:\n"
water	9:37	0:0	4	"PAT:\n"
water	9:46	0:0	2	;
call	10:4	10:51	2	hex_dump_debug
arg	10:19	10:29	3	ts->stream
water	10:19	0:0	4	ts
op	10:21	0:0	4	->
water	10:23	0:0	4	stream
arg	10:31	10:38	3	section
water	10:31	0:0	4	section
arg	10:40	10:51	3	section_len
water	10:40	0:0	4	section_len
water	10:52	0:0	2	;
water	11:4	0:0	2	p_end
op	11:10	0:0	2	=
water	11:12	0:0	2	section
op	11:20	0:0	2	+
water	11:22	0:0	2	section_len
op	11:34	0:0	2	-
water	11:36	0:0	2	4
water	11:37	0:0	2	;
water	12:4	0:0	2	p
op	12:10	0:0	2	=
water	12:12	0:0	2	section
water	12:19	0:0	2	;
if	13:4	14:14	2	(parse_section_header (h ,& p ,p_end ) < 0)
cond	13:8	13:45	3	parse_section_header (h ,& p ,p_end ) < 0
call	13:8	13:41	4	parse_section_header
arg	13:29	13:30	5	h
water	13:29	0:0	6	h
arg	13:32	13:34	5	&p
op	13:32	0:0	6	&
water	13:33	0:0	6	p
arg	13:36	13:41	5	p_end
water	13:36	0:0	6	p_end
op	13:43	0:0	4	<
water	13:45	0:0	4	0
stmts	14:8	14:14	3	
return	14:8	14:14	4	
if	15:4	16:14	2	(h -> tid != PAT_TID)
cond	15:8	15:18	3	h -> tid != PAT_TID
water	15:8	0:0	4	h
op	15:9	0:0	4	->
water	15:11	0:0	4	tid
op	15:15	0:0	4	!=
water	15:18	0:0	4	PAT_TID
stmts	16:8	16:14	3	
return	16:8	16:14	4	
if	17:4	18:14	2	(ts -> skip_changes)
cond	17:8	17:12	3	ts -> skip_changes
water	17:8	0:0	4	ts
op	17:10	0:0	4	->
water	17:12	0:0	4	skip_changes
stmts	18:8	18:14	3	
return	18:8	18:14	4	
if	19:4	20:14	2	(skip_identical (h ,tssf ))
cond	19:8	19:30	3	skip_identical (h ,tssf )
call	19:8	19:30	4	skip_identical
arg	19:23	19:24	5	h
water	19:23	0:0	6	h
arg	19:26	19:30	5	tssf
water	19:26	0:0	6	tssf
stmts	20:8	20:14	3	
return	20:8	20:14	4	
water	21:4	0:0	2	ts
op	21:6	0:0	2	->
water	21:8	0:0	2	stream
op	21:14	0:0	2	->
water	21:16	0:0	2	ts_id
op	21:22	0:0	2	=
water	21:24	0:0	2	h
op	21:25	0:0	2	->
water	21:27	0:0	2	id
water	21:29	0:0	2	;
call	22:4	22:21	2	clear_programs
arg	22:19	22:21	3	ts
water	22:19	0:0	4	ts
water	22:22	0:0	2	;
for	23:4	54:4	2	(;;)
forinit	23:9	23:9	3	;
water	23:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	23:13	54:4	3	
water	23:13	0:0	4	{
water	24:8	0:0	4	sid
op	24:12	0:0	4	=
call	24:14	24:29	4	get16
arg	24:20	24:22	5	&p
op	24:20	0:0	6	&
water	24:21	0:0	6	p
arg	24:24	24:29	5	p_end
water	24:24	0:0	6	p_end
water	24:30	0:0	4	;
if	25:8	26:17	4	(sid < 0)
cond	25:12	25:18	5	sid < 0
water	25:12	0:0	6	sid
op	25:16	0:0	6	<
water	25:18	0:0	6	0
stmts	26:12	26:17	5	
break	26:12	26:17	6	
water	27:8	0:0	4	pmt_pid
op	27:16	0:0	4	=
call	27:18	27:33	4	get16
arg	27:24	27:26	5	&p
op	27:24	0:0	6	&
water	27:25	0:0	6	p
arg	27:28	27:33	5	p_end
water	27:28	0:0	6	p_end
water	27:34	0:0	4	;
if	28:8	29:17	4	(pmt_pid < 0)
cond	28:12	28:22	5	pmt_pid < 0
water	28:12	0:0	6	pmt_pid
op	28:20	0:0	6	<
water	28:22	0:0	6	0
stmts	29:12	29:17	5	
break	29:12	29:17	6	
water	30:8	0:0	4	pmt_pid
op	30:16	0:0	4	&=
water	30:19	0:0	4	0
water	30:20	0:0	4	x1fff
water	30:25	0:0	4	;
if	31:8	32:17	4	(pmt_pid == ts -> current_pid)
cond	31:12	31:27	5	pmt_pid == ts -> current_pid
water	31:12	0:0	6	pmt_pid
op	31:20	0:0	6	==
water	31:23	0:0	6	ts
op	31:25	0:0	6	->
water	31:27	0:0	6	current_pid
stmts	32:12	32:17	5	
break	32:12	32:17	6	
call	33:8	33:76	4	av_log
arg	33:15	33:25	5	ts->stream
water	33:15	0:0	6	ts
op	33:17	0:0	6	->
water	33:19	0:0	6	stream
arg	33:27	33:39	5	AV_LOG_TRACE
water	33:27	0:0	6	AV_LOG_TRACE
arg	33:41	33:62	5	"sid=0x%x pid=0x%x\n"
water	33:41	0:0	6	"sid=0x%x pid=0x%x\n"
arg	33:64	33:67	5	sid
water	33:64	0:0	6	sid
arg	33:69	33:76	5	pmt_pid
water	33:69	0:0	6	pmt_pid
water	33:77	0:0	4	;
if	34:8	36:8	4	(sid == 0 x0000)
cond	34:12	34:20	5	sid == 0 x0000
water	34:12	0:0	6	sid
op	34:16	0:0	6	==
water	34:19	0:0	6	0
water	34:20	0:0	6	x0000
stmts	34:27	36:8	5	
water	34:27	0:0	6	{
water	0:0	0:0	6	STATEMENTS
water	36:8	0:0	6	}
else	36:10	53:8	4
stmts	36:15	53:8	5	
water	36:15	0:0	6	{
decl	37:12	37:49	6	MpegTSFilter	*fil
op	37:30	0:0	6	=
water	37:32	0:0	6	ts
op	37:34	0:0	6	->
water	37:36	0:0	6	pids
op	37:40	0:0	6	[
water	37:41	0:0	6	pmt_pid
op	37:48	0:0	6	]
water	38:12	0:0	6	program
op	38:20	0:0	6	=
call	38:22	38:52	6	av_new_program
arg	38:37	38:47	7	ts->stream
water	38:37	0:0	8	ts
op	38:39	0:0	8	->
water	38:41	0:0	8	stream
arg	38:49	38:52	7	sid
water	38:49	0:0	8	sid
water	38:53	0:0	6	;
if	39:12	42:12	6	(program)
cond	39:16	39:16	7	program
water	39:16	0:0	8	program
stmts	39:25	42:12	7	
water	39:25	0:0	8	{
water	40:16	0:0	8	program
op	40:23	0:0	8	->
water	40:25	0:0	8	program_num
op	40:37	0:0	8	=
water	40:39	0:0	8	sid
water	40:42	0:0	8	;
water	41:16	0:0	8	program
op	41:23	0:0	8	->
water	41:25	0:0	8	pmt_pid
op	41:33	0:0	8	=
water	41:35	0:0	8	pmt_pid
water	41:42	0:0	8	;
water	42:12	0:0	8	}
if	43:12	47:62	6	(fil)
cond	43:16	43:16	7	fil
water	43:16	0:0	8	fil
stmts	44:16	47:62	7	
if	44:16	47:62	8	(fil -> type != MPEGTS_SECTION || fil -> pid != pmt_pid || fil -> u . section_filter . section_cb != pmt_cb)
cond	44:23	46:59	9	fil -> type != MPEGTS_SECTION || fil -> pid != pmt_pid || fil -> u . section_filter . section_cb != pmt_cb
water	44:23	0:0	10	fil
op	44:26	0:0	10	->
water	44:28	0:0	10	type
op	44:33	0:0	10	!=
water	44:36	0:0	10	MPEGTS_SECTION
op	45:20	0:0	10	||
water	45:23	0:0	10	fil
op	45:26	0:0	10	->
water	45:28	0:0	10	pid
op	45:32	0:0	10	!=
water	45:35	0:0	10	pmt_pid
op	46:20	0:0	10	||
water	46:23	0:0	10	fil
op	46:26	0:0	10	->
water	46:28	0:0	10	u
op	46:29	0:0	10	.
water	46:30	0:0	10	section_filter
op	46:44	0:0	10	.
water	46:45	0:0	10	section_cb
op	46:56	0:0	10	!=
water	46:59	0:0	10	pmt_cb
stmts	47:20	47:62	9	
call	47:20	47:61	10	mpegts_close_filter
arg	47:40	47:42	11	ts
water	47:40	0:0	12	ts
arg	47:44	47:61	11	ts->pids[pmt_pid]
water	47:44	0:0	12	ts
op	47:46	0:0	12	->
water	47:48	0:0	12	pids
op	47:52	0:0	12	[
water	47:53	0:0	12	pmt_pid
op	47:60	0:0	12	]
water	47:62	0:0	10	;
if	48:12	49:70	6	(! ts -> pids [ pmt_pid ])
cond	48:16	48:33	7	! ts -> pids [ pmt_pid ]
op	48:16	0:0	8	!
water	48:17	0:0	8	ts
op	48:19	0:0	8	->
water	48:21	0:0	8	pids
op	48:25	0:0	8	[
water	48:26	0:0	8	pmt_pid
op	48:33	0:0	8	]
stmts	49:16	49:70	7	
call	49:16	49:69	8	mpegts_open_section_filter
arg	49:43	49:45	9	ts
water	49:43	0:0	10	ts
arg	49:47	49:54	9	pmt_pid
water	49:47	0:0	10	pmt_pid
arg	49:56	49:62	9	pmt_cb
water	49:56	0:0	10	pmt_cb
arg	49:64	49:66	9	ts
water	49:64	0:0	10	ts
arg	49:68	49:69	9	1
water	49:68	0:0	10	1
water	49:70	0:0	8	;
call	50:12	50:33	6	add_pat_entry
arg	50:26	50:28	7	ts
water	50:26	0:0	8	ts
arg	50:30	50:33	7	sid
water	50:30	0:0	8	sid
water	50:34	0:0	6	;
call	51:12	51:37	6	add_pid_to_pmt
arg	51:27	51:29	7	ts
water	51:27	0:0	8	ts
arg	51:31	51:34	7	sid
water	51:31	0:0	8	sid
arg	51:36	51:37	7	0
water	51:36	0:0	8	0
water	51:38	0:0	6	;
call	52:12	52:43	6	add_pid_to_pmt
arg	52:27	52:29	7	ts
water	52:27	0:0	8	ts
arg	52:31	52:34	7	sid
water	52:31	0:0	8	sid
arg	52:36	52:43	7	pmt_pid
water	52:36	0:0	8	pmt_pid
water	52:44	0:0	6	;
water	53:8	0:0	6	}
water	54:4	0:0	4	}
if	55:4	64:4	2	(sid < 0)
cond	55:8	55:14	3	sid < 0
water	55:8	0:0	4	sid
op	55:12	0:0	4	<
water	55:14	0:0	4	0
stmts	55:17	64:4	3	
water	55:17	0:0	4	{
decl	56:8	56:15	4	int	i
water	56:13	0:0	4	,
decl	56:8	56:15	4	int	j
for	57:8	63:8	4	(j = 0 ;j < ts -> stream -> nb_programs;j ++)
forinit	57:13	57:16	5	j = 0 ;
water	57:13	0:0	6	j
op	57:14	0:0	6	=
water	57:15	0:0	6	0
water	57:16	0:0	6	;
cond	57:18	57:32	5	j < ts -> stream -> nb_programs
water	57:18	0:0	6	j
op	57:19	0:0	6	<
water	57:20	0:0	6	ts
op	57:22	0:0	6	->
water	57:24	0:0	6	stream
op	57:30	0:0	6	->
water	57:32	0:0	6	nb_programs
forexpr	57:45	57:46	5	j ++
water	57:45	0:0	6	j
op	57:46	0:0	6	++
stmts	57:50	63:8	5	
water	57:50	0:0	6	{
for	58:12	60:25	6	(i = 0 ;i < ts -> nb_prg;i ++)
forinit	58:17	58:22	7	i = 0 ;
water	58:17	0:0	8	i
op	58:19	0:0	8	=
water	58:21	0:0	8	0
water	58:22	0:0	8	;
cond	58:24	58:32	7	i < ts -> nb_prg
water	58:24	0:0	8	i
op	58:26	0:0	8	<
water	58:28	0:0	8	ts
op	58:30	0:0	8	->
water	58:32	0:0	8	nb_prg
forexpr	58:40	58:41	7	i ++
water	58:40	0:0	8	i
op	58:41	0:0	8	++
stmts	59:16	60:25	7	
if	59:16	60:25	8	(ts -> prg [ i ] . id == ts -> stream -> programs [ j ] -> id)
cond	59:20	59:62	9	ts -> prg [ i ] . id == ts -> stream -> programs [ j ] -> id
water	59:20	0:0	10	ts
op	59:22	0:0	10	->
water	59:24	0:0	10	prg
op	59:27	0:0	10	[
water	59:28	0:0	10	i
op	59:29	0:0	10	]
op	59:30	0:0	10	.
water	59:31	0:0	10	id
op	59:34	0:0	10	==
water	59:37	0:0	10	ts
op	59:39	0:0	10	->
water	59:41	0:0	10	stream
op	59:47	0:0	10	->
water	59:49	0:0	10	programs
op	59:57	0:0	10	[
water	59:58	0:0	10	j
op	59:59	0:0	10	]
op	59:60	0:0	10	->
water	59:62	0:0	10	id
stmts	60:20	60:25	9	
break	60:20	60:25	10	
if	61:12	62:64	6	(i == ts -> nb_prg && ! ts -> skip_clear)
cond	61:16	61:38	7	i == ts -> nb_prg && ! ts -> skip_clear
water	61:16	0:0	8	i
op	61:17	0:0	8	==
water	61:19	0:0	8	ts
op	61:21	0:0	8	->
water	61:23	0:0	8	nb_prg
op	61:30	0:0	8	&&
op	61:33	0:0	8	!
water	61:34	0:0	8	ts
op	61:36	0:0	8	->
water	61:38	0:0	8	skip_clear
stmts	62:16	62:64	7	
call	62:16	62:63	8	clear_avprogram
arg	62:32	62:34	9	ts
water	62:32	0:0	10	ts
arg	62:36	62:63	9	ts->stream->programs[j]->id
water	62:36	0:0	10	ts
op	62:38	0:0	10	->
water	62:40	0:0	10	stream
op	62:46	0:0	10	->
water	62:48	0:0	10	programs
op	62:56	0:0	10	[
water	62:57	0:0	10	j
op	62:58	0:0	10	]
op	62:59	0:0	10	->
water	62:61	0:0	10	id
water	62:64	0:0	8	;
water	63:8	0:0	6	}
water	64:4	0:0	4	}

func	1:0	35:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	34:12	1	
decl	3:4	3:11	2	int	ret
decl	4:4	4:28	2	char	*filename
op	4:19	0:0	2	=
water	4:21	0:0	2	argv
op	4:25	0:0	2	[
water	4:26	0:0	2	1
op	4:27	0:0	2	]
decl	5:4	5:21	2	uint8_t	*file_buf
decl	6:4	6:24	2	size_t	file_buf_size
decl	7:4	7:17	2	uint32_t	code
decl	8:4	8:27	2	const uint8_t	*p
water	8:20	0:0	2	,
decl	8:4	8:27	2	const uint8_t	*endp
water	9:4	0:0	2	ret
op	9:8	0:0	2	=
call	9:10	9:66	2	av_file_map
arg	9:22	9:30	3	filename
water	9:22	0:0	4	filename
arg	9:32	9:41	3	&file_buf
op	9:32	0:0	4	&
water	9:33	0:0	4	file_buf
arg	9:43	9:57	3	&file_buf_size
op	9:43	0:0	4	&
water	9:44	0:0	4	file_buf_size
arg	9:59	9:60	3	0
water	9:59	0:0	4	0
arg	9:62	9:66	3	NULL
water	9:62	0:0	4	NULL
water	9:67	0:0	2	;
if	10:4	11:16	2	(ret < 0)
cond	10:8	10:14	3	ret < 0
water	10:8	0:0	4	ret
op	10:12	0:0	4	<
water	10:14	0:0	4	0
stmts	11:8	11:16	3	
return	11:8	11:16	4	1
water	11:15	0:0	5	1
water	12:4	0:0	2	p
op	12:6	0:0	2	=
water	12:8	0:0	2	file_buf
water	12:16	0:0	2	;
water	13:4	0:0	2	endp
op	13:9	0:0	2	=
water	13:11	0:0	2	file_buf
op	13:20	0:0	2	+
water	13:22	0:0	2	file_buf_size
water	13:35	0:0	2	;
while	14:4	32:4	2	(p < endp)
cond	14:11	14:15	3	p < endp
water	14:11	0:0	4	p
op	14:13	0:0	4	<
water	14:15	0:0	4	endp
stmts	14:21	32:4	3	
water	14:21	0:0	4	{
decl	15:8	15:16	4	int	l
water	15:13	0:0	4	,
decl	15:8	15:16	4	int	r
decl	16:8	16:29	4	const uint8_t	*p0
op	16:26	0:0	4	=
water	16:28	0:0	4	p
water	17:8	0:0	4	code
op	17:13	0:0	4	=
water	17:15	0:0	4	UINT32_MAX
water	17:25	0:0	4	;
water	18:8	0:0	4	r
op	18:10	0:0	4	=
call	18:12	18:45	4	av_utf8_decode
arg	18:27	18:32	5	&code
op	18:27	0:0	6	&
water	18:28	0:0	6	code
arg	18:34	18:36	5	&p
op	18:34	0:0	6	&
water	18:35	0:0	6	p
arg	18:38	18:42	5	endp
water	18:38	0:0	6	endp
arg	18:44	18:45	5	0
water	18:44	0:0	6	0
water	18:46	0:0	4	;
water	19:8	0:0	4	l
op	19:10	0:0	4	=
call	19:12	19:22	4	(int)
arg	19:18	19:22	5	p-p0
water	19:18	0:0	6	p
op	19:19	0:0	6	-
water	19:20	0:0	6	p0
water	19:23	0:0	4	;
call	20:8	20:32	4	print_sequence
arg	20:23	20:25	5	p0
water	20:23	0:0	6	p0
arg	20:27	20:28	5	l
water	20:27	0:0	6	l
arg	20:30	20:32	5	20
water	20:30	0:0	6	20
water	20:33	0:0	4	;
if	21:8	29:8	4	(code != UINT32_MAX)
cond	21:12	21:20	5	code != UINT32_MAX
water	21:12	0:0	6	code
op	21:17	0:0	6	!=
water	21:20	0:0	6	UINT32_MAX
stmts	21:32	29:8	5	
water	21:32	0:0	6	{
call	22:12	22:55	6	printf
arg	22:19	22:40	7	"%-10d 0x%-10X %-5d "
water	22:19	0:0	8	"%-10d 0x%-10X %-5d "
arg	22:42	22:46	7	code
water	22:42	0:0	8	code
arg	22:48	22:52	7	code
water	22:48	0:0	8	code
arg	22:54	22:55	7	l
water	22:54	0:0	8	l
water	22:56	0:0	6	;
if	23:12	26:12	6	(r >= 0)
cond	23:16	23:21	7	r >= 0
water	23:16	0:0	8	r
op	23:18	0:0	8	>=
water	23:21	0:0	8	0
stmts	23:24	26:12	7	
water	23:24	0:0	8	{
if	24:16	24:48	8	(* p0 == '\n')
cond	24:20	24:27	9	* p0 == '\n'
op	24:20	0:0	10	*
water	24:21	0:0	10	p0
op	24:24	0:0	10	==
water	24:27	0:0	10	'\n'
stmts	24:33	24:48	9	
call	24:33	24:47	10	printf
arg	24:40	24:47	11	"\\n\n"
water	24:40	0:0	12	"\\n\n"
water	24:48	0:0	10	;
else	25:16	25:57	8
stmts	25:33	25:57	9	
call	25:33	25:56	10	printf
arg	25:41	25:49	11	"%.*s\n"
water	25:41	0:0	12	"%.*s\n"
arg	25:51	25:52	11	l
water	25:51	0:0	12	l
arg	25:54	25:56	11	p0
water	25:54	0:0	12	p0
water	25:57	0:0	10	;
water	26:12	0:0	8	}
else	26:14	28:12	6
stmts	26:19	28:12	7	
water	26:19	0:0	8	{
call	27:16	27:45	8	printf
arg	27:23	27:45	9	"invalid code range\n"
water	27:23	0:0	10	"invalid code range\n"
water	27:46	0:0	8	;
water	28:12	0:0	8	}
water	29:8	0:0	6	}
else	29:10	31:8	4
stmts	29:15	31:8	5	
water	29:15	0:0	6	{
call	30:12	30:39	6	printf
arg	30:19	30:39	7	"invalid sequence\n"
water	30:19	0:0	8	"invalid sequence\n"
water	30:40	0:0	6	;
water	31:8	0:0	6	}
water	32:4	0:0	4	}
call	33:4	33:41	2	av_file_unmap
arg	33:18	33:26	3	file_buf
water	33:18	0:0	4	file_buf
arg	33:28	33:41	3	file_buf_size
water	33:28	0:0	4	file_buf_size
water	33:42	0:0	2	;
return	34:4	34:12	2	0
water	34:11	0:0	3	0

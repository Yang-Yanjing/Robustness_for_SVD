func	1:0	34:0	0	static int	lum_convert
params	1:22	0:0	1	
param	1:23	1:36	2	SwsContext *	c
param	1:38	1:63	2	SwsFilterDescriptor *	desc
param	1:65	1:75	2	int	sliceY
param	1:77	1:87	2	int	sliceH
stmnts	0:0	33:17	1	
decl	3:4	3:31	2	int	srcW
op	3:13	0:0	2	=
water	3:15	0:0	2	desc
op	3:19	0:0	2	->
water	3:21	0:0	2	src
op	3:24	0:0	2	->
water	3:26	0:0	2	width
decl	4:4	4:44	2	ColorContext	*instance
op	4:28	0:0	2	=
water	4:30	0:0	2	desc
op	4:34	0:0	2	->
water	4:36	0:0	2	instance
decl	5:4	5:34	2	uint32_t	*pal
op	5:19	0:0	2	=
water	5:21	0:0	2	instance
op	5:29	0:0	2	->
water	5:31	0:0	2	pal
decl	6:4	6:9	2	int	i
water	7:4	0:0	2	desc
op	7:8	0:0	2	->
water	7:10	0:0	2	dst
op	7:13	0:0	2	->
water	7:15	0:0	2	plane
op	7:20	0:0	2	[
water	7:21	0:0	2	0
op	7:22	0:0	2	]
op	7:23	0:0	2	.
water	7:24	0:0	2	sliceY
op	7:31	0:0	2	=
water	7:33	0:0	2	sliceY
water	7:39	0:0	2	;
water	8:4	0:0	2	desc
op	8:8	0:0	2	->
water	8:10	0:0	2	dst
op	8:13	0:0	2	->
water	8:15	0:0	2	plane
op	8:20	0:0	2	[
water	8:21	0:0	2	0
op	8:22	0:0	2	]
op	8:23	0:0	2	.
water	8:24	0:0	2	sliceH
op	8:31	0:0	2	=
water	8:33	0:0	2	sliceH
water	8:39	0:0	2	;
water	9:4	0:0	2	desc
op	9:8	0:0	2	->
water	9:10	0:0	2	dst
op	9:13	0:0	2	->
water	9:15	0:0	2	plane
op	9:20	0:0	2	[
water	9:21	0:0	2	3
op	9:22	0:0	2	]
op	9:23	0:0	2	.
water	9:24	0:0	2	sliceY
op	9:31	0:0	2	=
water	9:33	0:0	2	sliceY
water	9:39	0:0	2	;
water	10:4	0:0	2	desc
op	10:8	0:0	2	->
water	10:10	0:0	2	dst
op	10:13	0:0	2	->
water	10:15	0:0	2	plane
op	10:20	0:0	2	[
water	10:21	0:0	2	3
op	10:22	0:0	2	]
op	10:23	0:0	2	.
water	10:24	0:0	2	sliceH
op	10:31	0:0	2	=
water	10:33	0:0	2	sliceH
water	10:39	0:0	2	;
for	11:4	32:4	2	(i = 0 ;i < sliceH;++ i)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:20	3	i < sliceH
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	sliceH
forexpr	11:28	11:30	3	++ i
op	11:28	0:0	4	++
water	11:30	0:0	4	i
stmts	11:33	32:4	3	
water	11:33	0:0	4	{
decl	12:8	12:55	4	int	sp0
op	12:16	0:0	4	=
water	12:18	0:0	4	sliceY
op	12:24	0:0	4	+
water	12:25	0:0	4	i
op	12:27	0:0	4	-
water	12:29	0:0	4	desc
op	12:33	0:0	4	->
water	12:35	0:0	4	src
op	12:38	0:0	4	->
water	12:40	0:0	4	plane
op	12:45	0:0	4	[
water	12:46	0:0	4	0
op	12:47	0:0	4	]
op	12:48	0:0	4	.
water	12:49	0:0	4	sliceY
decl	13:8	13:90	4	int	sp1
op	13:16	0:0	4	=
water	13:18	0:0	4	(
water	13:19	0:0	4	(
water	13:20	0:0	4	sliceY
op	13:26	0:0	4	+
water	13:27	0:0	4	i
water	13:28	0:0	4	)
op	13:30	0:0	4	>>
water	13:33	0:0	4	desc
op	13:37	0:0	4	->
water	13:39	0:0	4	src
op	13:42	0:0	4	->
water	13:44	0:0	4	v_chr_sub_sample
water	13:60	0:0	4	)
op	13:62	0:0	4	-
water	13:64	0:0	4	desc
op	13:68	0:0	4	->
water	13:70	0:0	4	src
op	13:73	0:0	4	->
water	13:75	0:0	4	plane
op	13:80	0:0	4	[
water	13:81	0:0	4	1
op	13:82	0:0	4	]
op	13:83	0:0	4	.
water	13:84	0:0	4	sliceY
decl	14:8	17:54	4	const uint8_t	*src[4]
op	14:31	0:0	4	=
water	14:33	0:0	4	{
water	14:35	0:0	4	desc
op	14:39	0:0	4	->
water	14:41	0:0	4	src
op	14:44	0:0	4	->
water	14:46	0:0	4	plane
op	14:51	0:0	4	[
water	14:52	0:0	4	0
op	14:53	0:0	4	]
op	14:54	0:0	4	.
water	14:55	0:0	4	line
op	14:59	0:0	4	[
water	14:60	0:0	4	sp0
op	14:63	0:0	4	]
water	14:64	0:0	4	,
water	15:24	0:0	4	desc
op	15:28	0:0	4	->
water	15:30	0:0	4	src
op	15:33	0:0	4	->
water	15:35	0:0	4	plane
op	15:40	0:0	4	[
water	15:41	0:0	4	1
op	15:42	0:0	4	]
op	15:43	0:0	4	.
water	15:44	0:0	4	line
op	15:48	0:0	4	[
water	15:49	0:0	4	sp1
op	15:52	0:0	4	]
water	15:53	0:0	4	,
water	16:24	0:0	4	desc
op	16:28	0:0	4	->
water	16:30	0:0	4	src
op	16:33	0:0	4	->
water	16:35	0:0	4	plane
op	16:40	0:0	4	[
water	16:41	0:0	4	2
op	16:42	0:0	4	]
op	16:43	0:0	4	.
water	16:44	0:0	4	line
op	16:48	0:0	4	[
water	16:49	0:0	4	sp1
op	16:52	0:0	4	]
water	16:53	0:0	4	,
water	17:24	0:0	4	desc
op	17:28	0:0	4	->
water	17:30	0:0	4	src
op	17:33	0:0	4	->
water	17:35	0:0	4	plane
op	17:40	0:0	4	[
water	17:41	0:0	4	3
op	17:42	0:0	4	]
op	17:43	0:0	4	.
water	17:44	0:0	4	line
op	17:48	0:0	4	[
water	17:49	0:0	4	sp0
op	17:52	0:0	4	]
water	17:53	0:0	4	}
decl	18:8	18:51	4	uint8_t	*dst
op	18:22	0:0	4	=
water	18:24	0:0	4	desc
op	18:28	0:0	4	->
water	18:30	0:0	4	dst
op	18:33	0:0	4	->
water	18:35	0:0	4	plane
op	18:40	0:0	4	[
water	18:41	0:0	4	0
op	18:42	0:0	4	]
op	18:43	0:0	4	.
water	18:44	0:0	4	line
op	18:48	0:0	4	[
water	18:49	0:0	4	i
op	18:50	0:0	4	]
if	19:8	21:8	4	(c -> lumToYV12)
cond	19:12	19:15	5	c -> lumToYV12
water	19:12	0:0	6	c
op	19:13	0:0	6	->
water	19:15	0:0	6	lumToYV12
stmts	19:26	21:8	5	
water	19:26	0:0	6	{
call	20:12	20:63	6	c->lumToYV12
arg	20:25	20:28	7	dst
water	20:25	0:0	8	dst
arg	20:30	20:36	7	src[0]
water	20:30	0:0	8	src
op	20:33	0:0	8	[
water	20:34	0:0	8	0
op	20:35	0:0	8	]
arg	20:38	20:44	7	src[1]
water	20:38	0:0	8	src
op	20:41	0:0	8	[
water	20:42	0:0	8	1
op	20:43	0:0	8	]
arg	20:46	20:52	7	src[2]
water	20:46	0:0	8	src
op	20:49	0:0	8	[
water	20:50	0:0	8	2
op	20:51	0:0	8	]
arg	20:54	20:58	7	srcW
water	20:54	0:0	8	srcW
arg	20:60	20:63	7	pal
water	20:60	0:0	8	pal
water	20:64	0:0	6	;
water	21:8	0:0	6	}
else	21:10	23:8	4
stmts	21:15	23:8	5	
if	21:15	23:8	6	(c -> readLumPlanar)
cond	21:19	21:22	7	c -> readLumPlanar
water	21:19	0:0	8	c
op	21:20	0:0	8	->
water	21:22	0:0	8	readLumPlanar
stmts	21:37	23:8	7	
water	21:37	0:0	8	{
call	22:12	22:67	8	c->readLumPlanar
arg	22:29	22:32	9	dst
water	22:29	0:0	10	dst
arg	22:34	22:37	9	src
water	22:34	0:0	10	src
arg	22:39	22:43	9	srcW
water	22:39	0:0	10	srcW
arg	22:45	22:67	9	c->input_rgb2yuv_table
water	22:45	0:0	10	c
op	22:46	0:0	10	->
water	22:48	0:0	10	input_rgb2yuv_table
water	22:68	0:0	8	;
water	23:8	0:0	8	}
if	24:8	31:8	4	(desc -> alpha)
cond	24:12	24:18	5	desc -> alpha
water	24:12	0:0	6	desc
op	24:16	0:0	6	->
water	24:18	0:0	6	alpha
stmts	24:25	31:8	5	
water	24:25	0:0	6	{
water	25:12	0:0	6	dst
op	25:16	0:0	6	=
water	25:18	0:0	6	desc
op	25:22	0:0	6	->
water	25:24	0:0	6	dst
op	25:27	0:0	6	->
water	25:29	0:0	6	plane
op	25:34	0:0	6	[
water	25:35	0:0	6	3
op	25:36	0:0	6	]
op	25:37	0:0	6	.
water	25:38	0:0	6	line
op	25:42	0:0	6	[
water	25:43	0:0	6	i
op	25:44	0:0	6	]
water	25:45	0:0	6	;
if	26:12	28:12	6	(c -> alpToYV12)
cond	26:16	26:19	7	c -> alpToYV12
water	26:16	0:0	8	c
op	26:17	0:0	8	->
water	26:19	0:0	8	alpToYV12
stmts	26:30	28:12	7	
water	26:30	0:0	8	{
call	27:16	27:67	8	c->alpToYV12
arg	27:29	27:32	9	dst
water	27:29	0:0	10	dst
arg	27:34	27:40	9	src[3]
water	27:34	0:0	10	src
op	27:37	0:0	10	[
water	27:38	0:0	10	3
op	27:39	0:0	10	]
arg	27:42	27:48	9	src[1]
water	27:42	0:0	10	src
op	27:45	0:0	10	[
water	27:46	0:0	10	1
op	27:47	0:0	10	]
arg	27:50	27:56	9	src[2]
water	27:50	0:0	10	src
op	27:53	0:0	10	[
water	27:54	0:0	10	2
op	27:55	0:0	10	]
arg	27:58	27:62	9	srcW
water	27:58	0:0	10	srcW
arg	27:64	27:67	9	pal
water	27:64	0:0	10	pal
water	27:68	0:0	8	;
water	28:12	0:0	8	}
else	28:14	30:12	6
stmts	28:19	30:12	7	
if	28:19	30:12	8	(c -> readAlpPlanar)
cond	28:23	28:26	9	c -> readAlpPlanar
water	28:23	0:0	10	c
op	28:24	0:0	10	->
water	28:26	0:0	10	readAlpPlanar
stmts	28:41	30:12	9	
water	28:41	0:0	10	{
call	29:16	29:53	10	c->readAlpPlanar
arg	29:33	29:36	11	dst
water	29:33	0:0	12	dst
arg	29:38	29:41	11	src
water	29:38	0:0	12	src
arg	29:43	29:47	11	srcW
water	29:43	0:0	12	srcW
arg	29:49	29:53	11	NULL
water	29:49	0:0	12	NULL
water	29:54	0:0	10	;
water	30:12	0:0	10	}
water	31:8	0:0	6	}
water	32:4	0:0	4	}
return	33:4	33:17	2	sliceH
water	33:11	0:0	3	sliceH

func	1:0	42:0	0	int	av_opt_serialize
params	1:20	0:0	1	
param	1:21	1:30	2	void *	obj
param	1:32	1:45	2	int	opt_flags
param	1:47	1:56	2	int	flags
param	1:58	1:71	2	char * *	buffer
param	2:21	2:43	2	const char	key_val_sep
param	2:45	2:65	2	const char	pairs_sep
stmnts	0:0	41:12	1	
decl	4:4	4:28	2	const AVOption	*o
op	4:22	0:0	2	=
water	4:24	0:0	2	NULL
decl	5:4	5:16	2	uint8_t	*buf
decl	6:4	6:19	2	AVBPrint	bprint
decl	7:4	7:20	2	int	ret
water	7:11	0:0	2	,
decl	7:4	7:20	2	int	cnt
op	7:17	0:0	2	=
water	7:19	0:0	2	0
decl	8:4	8:63	2	const char	special_chars[]
op	8:31	0:0	2	=
water	8:33	0:0	2	{
water	8:34	0:0	2	pairs_sep
water	8:43	0:0	2	,
water	8:45	0:0	2	key_val_sep
water	8:56	0:0	2	,
water	8:58	0:0	2	'\0'
water	8:62	0:0	2	}
if	9:4	13:4	2	(pairs_sep == '\0' || key_val_sep == '\0' || pairs_sep == key_val_sep || pairs_sep == '\\' || key_val_sep == '\\')
cond	9:8	10:44	3	pairs_sep == '\0' || key_val_sep == '\0' || pairs_sep == key_val_sep || pairs_sep == '\\' || key_val_sep == '\\'
water	9:8	0:0	4	pairs_sep
op	9:18	0:0	4	==
water	9:21	0:0	4	'\0'
op	9:26	0:0	4	||
water	9:29	0:0	4	key_val_sep
op	9:41	0:0	4	==
water	9:44	0:0	4	'\0'
op	9:49	0:0	4	||
water	9:52	0:0	4	pairs_sep
op	9:62	0:0	4	==
water	9:65	0:0	4	key_val_sep
op	9:77	0:0	4	||
water	10:8	0:0	4	pairs_sep
op	10:18	0:0	4	==
water	10:21	0:0	4	'\\'
op	10:26	0:0	4	||
water	10:29	0:0	4	key_val_sep
op	10:41	0:0	4	==
water	10:44	0:0	4	'\\'
stmts	10:50	13:4	3	
water	10:50	0:0	4	{
call	11:8	11:63	4	av_log
arg	11:15	11:18	5	obj
water	11:15	0:0	6	obj
arg	11:20	11:32	5	AV_LOG_ERROR
water	11:20	0:0	6	AV_LOG_ERROR
arg	11:34	11:63	5	"Invalid separator(s) found."
water	11:34	0:0	6	"Invalid separator(s) found."
water	11:64	0:0	4	;
return	12:8	12:30	4	AVERROR(EINVAL)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	EINVAL
water	12:23	0:0	7	EINVAL
water	13:4	0:0	4	}
if	14:4	15:30	2	(! obj || ! buffer)
cond	14:8	14:17	3	! obj || ! buffer
op	14:8	0:0	4	!
water	14:9	0:0	4	obj
op	14:13	0:0	4	||
op	14:16	0:0	4	!
water	14:17	0:0	4	buffer
stmts	15:8	15:30	3	
return	15:8	15:30	4	AVERROR(EINVAL)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	EINVAL
water	15:23	0:0	7	EINVAL
op	16:4	0:0	2	*
water	16:5	0:0	2	buffer
op	16:12	0:0	2	=
water	16:14	0:0	2	NULL
water	16:18	0:0	2	;
call	17:4	17:56	2	av_bprint_init
arg	17:19	17:26	3	&bprint
op	17:19	0:0	4	&
water	17:20	0:0	4	bprint
arg	17:28	17:30	3	64
water	17:28	0:0	4	64
arg	17:32	17:56	3	AV_BPRINT_SIZE_UNLIMITED
water	17:32	0:0	4	AV_BPRINT_SIZE_UNLIMITED
water	17:57	0:0	2	;
while	18:4	39:4	2	(o =av_opt_next (obj ,o ))
cond	18:11	18:33	3	o =av_opt_next (obj ,o )
water	18:11	0:0	4	o
op	18:13	0:0	4	=
call	18:15	18:33	4	av_opt_next
arg	18:27	18:30	5	obj
water	18:27	0:0	6	obj
arg	18:32	18:33	5	o
water	18:32	0:0	6	o
stmts	18:36	39:4	3	
water	18:36	0:0	4	{
if	19:8	20:20	4	(o -> type == AV_OPT_TYPE_CONST)
cond	19:12	19:23	5	o -> type == AV_OPT_TYPE_CONST
water	19:12	0:0	6	o
op	19:13	0:0	6	->
water	19:15	0:0	6	type
op	19:20	0:0	6	==
water	19:23	0:0	6	AV_OPT_TYPE_CONST
stmts	20:12	20:20	5	
continue	20:12	20:20	6	
if	21:8	22:20	4	(( flags & AV_OPT_SERIALIZE_OPT_FLAGS_EXACT ) && o -> flags != opt_flags)
cond	21:12	21:70	5	( flags & AV_OPT_SERIALIZE_OPT_FLAGS_EXACT ) && o -> flags != opt_flags
water	21:12	0:0	6	(
water	21:13	0:0	6	flags
op	21:19	0:0	6	&
water	21:21	0:0	6	AV_OPT_SERIALIZE_OPT_FLAGS_EXACT
water	21:53	0:0	6	)
op	21:55	0:0	6	&&
water	21:58	0:0	6	o
op	21:59	0:0	6	->
water	21:61	0:0	6	flags
op	21:67	0:0	6	!=
water	21:70	0:0	6	opt_flags
stmts	22:12	22:20	5	
continue	22:12	22:20	6	
else	23:8	24:20	4
stmts	23:13	24:20	5	
if	23:13	24:20	6	(( ( o -> flags & opt_flags ) != opt_flags ))
cond	23:17	23:53	7	( ( o -> flags & opt_flags ) != opt_flags )
water	23:17	0:0	8	(
water	23:18	0:0	8	(
water	23:19	0:0	8	o
op	23:20	0:0	8	->
water	23:22	0:0	8	flags
op	23:28	0:0	8	&
water	23:30	0:0	8	opt_flags
water	23:39	0:0	8	)
op	23:41	0:0	8	!=
water	23:44	0:0	8	opt_flags
water	23:53	0:0	8	)
stmts	24:12	24:20	7	
continue	24:12	24:20	8	
if	25:8	26:20	4	(flags & AV_OPT_SERIALIZE_SKIP_DEFAULTS &&av_opt_is_set_to_default (obj ,o ) > 0)
cond	25:12	25:89	5	flags & AV_OPT_SERIALIZE_SKIP_DEFAULTS &&av_opt_is_set_to_default (obj ,o ) > 0
water	25:12	0:0	6	flags
op	25:18	0:0	6	&
water	25:20	0:0	6	AV_OPT_SERIALIZE_SKIP_DEFAULTS
op	25:51	0:0	6	&&
call	25:54	25:85	6	av_opt_is_set_to_default
arg	25:79	25:82	7	obj
water	25:79	0:0	8	obj
arg	25:84	25:85	7	o
water	25:84	0:0	8	o
op	25:87	0:0	6	>
water	25:89	0:0	6	0
stmts	26:12	26:20	5	
continue	26:12	26:20	6	
if	27:8	30:8	4	(( ret =av_opt_get (obj ,o -> name ,0 ,& buf ) ) < 0)
cond	27:12	27:56	5	( ret =av_opt_get (obj ,o -> name ,0 ,& buf ) ) < 0
water	27:12	0:0	6	(
water	27:13	0:0	6	ret
op	27:17	0:0	6	=
call	27:19	27:51	6	av_opt_get
arg	27:30	27:33	7	obj
water	27:30	0:0	8	obj
arg	27:35	27:42	7	o->name
water	27:35	0:0	8	o
op	27:36	0:0	8	->
water	27:38	0:0	8	name
arg	27:44	27:45	7	0
water	27:44	0:0	8	0
arg	27:47	27:51	7	&buf
op	27:47	0:0	8	&
water	27:48	0:0	8	buf
water	27:52	0:0	6	)
op	27:54	0:0	6	<
water	27:56	0:0	6	0
stmts	27:59	30:8	5	
water	27:59	0:0	6	{
call	28:12	28:44	6	av_bprint_finalize
arg	28:31	28:38	7	&bprint
op	28:31	0:0	8	&
water	28:32	0:0	8	bprint
arg	28:40	28:44	7	NULL
water	28:40	0:0	8	NULL
water	28:45	0:0	6	;
return	29:12	29:22	6	ret
water	29:19	0:0	7	ret
water	30:8	0:0	6	}
if	31:8	38:8	4	(buf)
cond	31:12	31:12	5	buf
water	31:12	0:0	6	buf
stmts	31:17	38:8	5	
water	31:17	0:0	6	{
if	32:12	33:61	6	(cnt ++)
cond	32:16	32:19	7	cnt ++
water	32:16	0:0	8	cnt
op	32:19	0:0	8	++
stmts	33:16	33:61	7	
call	33:16	33:60	8	av_bprint_append_data
arg	33:38	33:45	9	&bprint
op	33:38	0:0	10	&
water	33:39	0:0	10	bprint
arg	33:47	33:57	9	&pairs_sep
op	33:47	0:0	10	&
water	33:48	0:0	10	pairs_sep
arg	33:59	33:60	9	1
water	33:59	0:0	10	1
water	33:61	0:0	8	;
call	34:12	34:89	6	av_bprint_escape
arg	34:29	34:36	7	&bprint
op	34:29	0:0	8	&
water	34:30	0:0	8	bprint
arg	34:38	34:45	7	o->name
water	34:38	0:0	8	o
op	34:39	0:0	8	->
water	34:41	0:0	8	name
arg	34:47	34:60	7	special_chars
water	34:47	0:0	8	special_chars
arg	34:62	34:86	7	AV_ESCAPE_MODE_BACKSLASH
water	34:62	0:0	8	AV_ESCAPE_MODE_BACKSLASH
arg	34:88	34:89	7	0
water	34:88	0:0	8	0
water	34:90	0:0	6	;
call	35:12	35:58	6	av_bprint_append_data
arg	35:34	35:41	7	&bprint
op	35:34	0:0	8	&
water	35:35	0:0	8	bprint
arg	35:43	35:55	7	&key_val_sep
op	35:43	0:0	8	&
water	35:44	0:0	8	key_val_sep
arg	35:57	35:58	7	1
water	35:57	0:0	8	1
water	35:59	0:0	6	;
call	36:12	36:85	6	av_bprint_escape
arg	36:29	36:36	7	&bprint
op	36:29	0:0	8	&
water	36:30	0:0	8	bprint
arg	36:38	36:41	7	buf
water	36:38	0:0	8	buf
arg	36:43	36:56	7	special_chars
water	36:43	0:0	8	special_chars
arg	36:58	36:82	7	AV_ESCAPE_MODE_BACKSLASH
water	36:58	0:0	8	AV_ESCAPE_MODE_BACKSLASH
arg	36:84	36:85	7	0
water	36:84	0:0	8	0
water	36:86	0:0	6	;
call	37:12	37:25	6	av_freep
arg	37:21	37:25	7	&buf
op	37:21	0:0	8	&
water	37:22	0:0	8	buf
water	37:26	0:0	6	;
water	38:8	0:0	6	}
water	39:4	0:0	4	}
call	40:4	40:38	2	av_bprint_finalize
arg	40:23	40:30	3	&bprint
op	40:23	0:0	4	&
water	40:24	0:0	4	bprint
arg	40:32	40:38	3	buffer
water	40:32	0:0	4	buffer
water	40:39	0:0	2	;
return	41:4	41:12	2	0
water	41:11	0:0	3	0

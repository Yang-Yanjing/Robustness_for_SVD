func	1:0	36:0	0	static int	thread_init_internal
params	1:31	0:0	1	
param	1:32	1:48	2	ThreadContext *	c
param	1:50	1:64	2	int	nb_threads
stmnts	0:0	35:24	1	
decl	3:4	3:14	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:14	2	int	ret
if	4:4	11:4	2	(! nb_threads)
cond	4:8	4:9	3	! nb_threads
op	4:8	0:0	4	!
water	4:9	0:0	4	nb_threads
stmts	4:21	11:4	3	
water	4:21	0:0	4	{
decl	5:8	5:36	4	int	nb_cpus
op	5:20	0:0	4	=
call	5:22	5:35	5	av_cpu_count
if	7:8	8:36	4	(nb_cpus > 1)
cond	7:12	7:22	5	nb_cpus > 1
water	7:12	0:0	6	nb_cpus
op	7:20	0:0	6	>
water	7:22	0:0	6	1
stmts	8:12	8:36	5	
water	8:12	0:0	6	nb_threads
op	8:23	0:0	6	=
water	8:25	0:0	6	nb_cpus
op	8:33	0:0	6	+
water	8:35	0:0	6	1
water	8:36	0:0	6	;
else	9:8	10:26	4
stmts	10:12	10:26	5	
water	10:12	0:0	6	nb_threads
op	10:23	0:0	6	=
water	10:25	0:0	6	1
water	10:26	0:0	6	;
water	11:4	0:0	4	}
if	12:4	13:16	2	(nb_threads <= 1)
cond	12:8	12:22	3	nb_threads <= 1
water	12:8	0:0	4	nb_threads
op	12:19	0:0	4	<=
water	12:22	0:0	4	1
stmts	13:8	13:16	3	
return	13:8	13:16	4	1
water	13:15	0:0	5	1
water	14:4	0:0	2	c
op	14:5	0:0	2	->
water	14:7	0:0	2	nb_threads
op	14:18	0:0	2	=
water	14:20	0:0	2	nb_threads
water	14:30	0:0	2	;
water	15:4	0:0	2	c
op	15:5	0:0	2	->
water	15:7	0:0	2	workers
op	15:15	0:0	2	=
call	15:17	15:65	2	av_mallocz_array
arg	15:34	15:53	3	sizeof(*c->workers)
op	15:34	0:0	4	sizeof
water	15:40	0:0	4	(
op	15:41	0:0	4	*
water	15:42	0:0	4	c
op	15:43	0:0	4	->
water	15:45	0:0	4	workers
water	15:52	0:0	4	)
arg	15:55	15:65	3	nb_threads
water	15:55	0:0	4	nb_threads
water	15:66	0:0	2	;
if	16:4	17:30	2	(! c -> workers)
cond	16:8	16:12	3	! c -> workers
op	16:8	0:0	4	!
water	16:9	0:0	4	c
op	16:10	0:0	4	->
water	16:12	0:0	4	workers
stmts	17:8	17:30	3	
return	17:8	17:30	4	AVERROR(ENOMEM)
call	17:15	17:29	5	AVERROR
arg	17:23	17:29	6	ENOMEM
water	17:23	0:0	7	ENOMEM
water	18:4	0:0	2	c
op	18:5	0:0	2	->
water	18:7	0:0	2	current_job
op	18:19	0:0	2	=
water	18:21	0:0	2	0
water	18:22	0:0	2	;
water	19:4	0:0	2	c
op	19:5	0:0	2	->
water	19:7	0:0	2	nb_jobs
op	19:19	0:0	2	=
water	19:21	0:0	2	0
water	19:22	0:0	2	;
water	20:4	0:0	2	c
op	20:5	0:0	2	->
water	20:7	0:0	2	done
op	20:19	0:0	2	=
water	20:21	0:0	2	0
water	20:22	0:0	2	;
call	21:4	21:48	2	pthread_cond_init
arg	21:22	21:42	3	&c->current_job_cond
op	21:22	0:0	4	&
water	21:23	0:0	4	c
op	21:24	0:0	4	->
water	21:26	0:0	4	current_job_cond
arg	21:44	21:48	3	NULL
water	21:44	0:0	4	NULL
water	21:49	0:0	2	;
call	22:4	22:48	2	pthread_cond_init
arg	22:22	22:39	3	&c->last_job_cond
op	22:22	0:0	4	&
water	22:23	0:0	4	c
op	22:24	0:0	4	->
water	22:26	0:0	4	last_job_cond
arg	22:44	22:48	3	NULL
water	22:44	0:0	4	NULL
water	22:49	0:0	2	;
call	23:4	23:49	2	pthread_mutex_init
arg	23:23	23:43	3	&c->current_job_lock
op	23:23	0:0	4	&
water	23:24	0:0	4	c
op	23:25	0:0	4	->
water	23:27	0:0	4	current_job_lock
arg	23:45	23:49	3	NULL
water	23:45	0:0	4	NULL
water	23:50	0:0	2	;
call	24:4	24:43	2	pthread_mutex_lock
arg	24:23	24:43	3	&c->current_job_lock
op	24:23	0:0	4	&
water	24:24	0:0	4	c
op	24:25	0:0	4	->
water	24:27	0:0	4	current_job_lock
water	24:44	0:0	2	;
for	25:4	33:4	2	(i = 0 ;i < nb_threads;i ++)
forinit	25:9	25:14	3	i = 0 ;
water	25:9	0:0	4	i
op	25:11	0:0	4	=
water	25:13	0:0	4	0
water	25:14	0:0	4	;
cond	25:16	25:20	3	i < nb_threads
water	25:16	0:0	4	i
op	25:18	0:0	4	<
water	25:20	0:0	4	nb_threads
forexpr	25:32	25:33	3	i ++
water	25:32	0:0	4	i
op	25:33	0:0	4	++
stmts	25:37	33:4	3	
water	25:37	0:0	4	{
water	26:8	0:0	4	ret
op	26:12	0:0	4	=
call	26:14	26:60	4	pthread_create
arg	26:29	26:43	5	&c->workers[i]
op	26:29	0:0	6	&
water	26:30	0:0	6	c
op	26:31	0:0	6	->
water	26:33	0:0	6	workers
op	26:40	0:0	6	[
water	26:41	0:0	6	i
op	26:42	0:0	6	]
arg	26:45	26:49	5	NULL
water	26:45	0:0	6	NULL
arg	26:51	26:57	5	worker
water	26:51	0:0	6	worker
arg	26:59	26:60	5	c
water	26:59	0:0	6	c
water	26:61	0:0	4	;
if	27:8	32:8	4	(ret)
cond	27:12	27:12	5	ret
water	27:12	0:0	6	ret
stmts	27:17	32:8	5	
water	27:17	0:0	6	{
call	28:11	28:52	6	pthread_mutex_unlock
arg	28:32	28:52	7	&c->current_job_lock
op	28:32	0:0	8	&
water	28:33	0:0	8	c
op	28:34	0:0	8	->
water	28:36	0:0	8	current_job_lock
water	28:53	0:0	6	;
water	29:11	0:0	6	c
op	29:12	0:0	6	->
water	29:14	0:0	6	nb_threads
op	29:25	0:0	6	=
water	29:27	0:0	6	i
water	29:28	0:0	6	;
call	30:11	30:32	6	slice_thread_uninit
arg	30:31	30:32	7	c
water	30:31	0:0	8	c
water	30:33	0:0	6	;
return	31:11	31:30	6	AVERROR(ret)
call	31:18	31:29	7	AVERROR
arg	31:26	31:29	8	ret
water	31:26	0:0	9	ret
water	32:8	0:0	6	}
water	33:4	0:0	4	}
call	34:4	34:31	2	slice_thread_park_workers
arg	34:30	34:31	3	c
water	34:30	0:0	4	c
water	34:32	0:0	2	;
return	35:4	35:24	2	c->nb_threads
water	35:11	0:0	3	c
op	35:12	0:0	3	->
water	35:14	0:0	3	nb_threads

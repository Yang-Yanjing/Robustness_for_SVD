func	1:8	38:0	0	int	ff_ac3_encode_close
params	1:31	0:0	1	
param	1:32	1:53	2	AVCodecContext *	avctx
stmnts	0:0	37:12	1	
decl	3:4	3:15	2	int	blk
water	3:11	0:0	2	,
decl	3:4	3:15	2	int	ch
decl	4:4	4:42	2	AC3EncodeContext	*s
op	4:24	0:0	2	=
water	4:26	0:0	2	avctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv_data
call	5:4	5:33	2	av_freep
arg	5:13	5:33	3	&s->windowed_samples
op	5:13	0:0	4	&
water	5:14	0:0	4	s
op	5:15	0:0	4	->
water	5:17	0:0	4	windowed_samples
water	5:34	0:0	2	;
if	6:4	8:40	2	(s -> planar_samples)
cond	6:8	6:11	3	s -> planar_samples
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	planar_samples
stmts	7:4	8:40	3	
for	7:4	8:40	4	(ch = 0 ;ch < s -> channels;ch ++)
forinit	7:9	7:15	5	ch = 0 ;
water	7:9	0:0	6	ch
op	7:12	0:0	6	=
water	7:14	0:0	6	0
water	7:15	0:0	6	;
cond	7:17	7:25	5	ch < s -> channels
water	7:17	0:0	6	ch
op	7:20	0:0	6	<
water	7:22	0:0	6	s
op	7:23	0:0	6	->
water	7:25	0:0	6	channels
forexpr	7:35	7:37	5	ch ++
water	7:35	0:0	6	ch
op	7:37	0:0	6	++
stmts	8:8	8:40	5	
call	8:8	8:39	6	av_freep
arg	8:17	8:39	7	&s->planar_samples[ch]
op	8:17	0:0	8	&
water	8:18	0:0	8	s
op	8:19	0:0	8	->
water	8:21	0:0	8	planar_samples
op	8:35	0:0	8	[
water	8:36	0:0	8	ch
op	8:38	0:0	8	]
water	8:40	0:0	6	;
call	9:4	9:31	2	av_freep
arg	9:13	9:31	3	&s->planar_samples
op	9:13	0:0	4	&
water	9:14	0:0	4	s
op	9:15	0:0	4	->
water	9:17	0:0	4	planar_samples
water	9:32	0:0	2	;
call	10:4	10:27	2	av_freep
arg	10:13	10:27	3	&s->bap_buffer
op	10:13	0:0	4	&
water	10:14	0:0	4	s
op	10:15	0:0	4	->
water	10:17	0:0	4	bap_buffer
water	10:28	0:0	2	;
call	11:4	11:28	2	av_freep
arg	11:13	11:28	3	&s->bap1_buffer
op	11:13	0:0	4	&
water	11:14	0:0	4	s
op	11:15	0:0	4	->
water	11:17	0:0	4	bap1_buffer
water	11:29	0:0	2	;
call	12:4	12:33	2	av_freep
arg	12:13	12:33	3	&s->mdct_coef_buffer
op	12:13	0:0	4	&
water	12:14	0:0	4	s
op	12:15	0:0	4	->
water	12:17	0:0	4	mdct_coef_buffer
water	12:34	0:0	2	;
call	13:4	13:34	2	av_freep
arg	13:13	13:34	3	&s->fixed_coef_buffer
op	13:13	0:0	4	&
water	13:14	0:0	4	s
op	13:15	0:0	4	->
water	13:17	0:0	4	fixed_coef_buffer
water	13:35	0:0	2	;
call	14:4	14:27	2	av_freep
arg	14:13	14:27	3	&s->exp_buffer
op	14:13	0:0	4	&
water	14:14	0:0	4	s
op	14:15	0:0	4	->
water	14:17	0:0	4	exp_buffer
water	14:28	0:0	2	;
call	15:4	15:35	2	av_freep
arg	15:13	15:35	3	&s->grouped_exp_buffer
op	15:13	0:0	4	&
water	15:14	0:0	4	s
op	15:15	0:0	4	->
water	15:17	0:0	4	grouped_exp_buffer
water	15:36	0:0	2	;
call	16:4	16:27	2	av_freep
arg	16:13	16:27	3	&s->psd_buffer
op	16:13	0:0	4	&
water	16:14	0:0	4	s
op	16:15	0:0	4	->
water	16:17	0:0	4	psd_buffer
water	16:28	0:0	2	;
call	17:4	17:32	2	av_freep
arg	17:13	17:32	3	&s->band_psd_buffer
op	17:13	0:0	4	&
water	17:14	0:0	4	s
op	17:15	0:0	4	->
water	17:17	0:0	4	band_psd_buffer
water	17:33	0:0	2	;
call	18:4	18:28	2	av_freep
arg	18:13	18:28	3	&s->mask_buffer
op	18:13	0:0	4	&
water	18:14	0:0	4	s
op	18:15	0:0	4	->
water	18:17	0:0	4	mask_buffer
water	18:29	0:0	2	;
call	19:4	19:29	2	av_freep
arg	19:13	19:29	3	&s->qmant_buffer
op	19:13	0:0	4	&
water	19:14	0:0	4	s
op	19:15	0:0	4	->
water	19:17	0:0	4	qmant_buffer
water	19:30	0:0	2	;
call	20:4	20:37	2	av_freep
arg	20:13	20:37	3	&s->cpl_coord_exp_buffer
op	20:13	0:0	4	&
water	20:14	0:0	4	s
op	20:15	0:0	4	->
water	20:17	0:0	4	cpl_coord_exp_buffer
water	20:38	0:0	2	;
call	21:4	21:38	2	av_freep
arg	21:13	21:38	3	&s->cpl_coord_mant_buffer
op	21:13	0:0	4	&
water	21:14	0:0	4	s
op	21:15	0:0	4	->
water	21:17	0:0	4	cpl_coord_mant_buffer
water	21:39	0:0	2	;
call	22:4	22:21	2	av_freep
arg	22:13	22:21	3	&s->fdsp
op	22:13	0:0	4	&
water	22:14	0:0	4	s
op	22:15	0:0	4	->
water	22:17	0:0	4	fdsp
water	22:22	0:0	2	;
for	23:4	35:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	23:9	23:16	3	blk = 0 ;
water	23:9	0:0	4	blk
op	23:13	0:0	4	=
water	23:15	0:0	4	0
water	23:16	0:0	4	;
cond	23:18	23:27	3	blk < s -> num_blocks
water	23:18	0:0	4	blk
op	23:22	0:0	4	<
water	23:24	0:0	4	s
op	23:25	0:0	4	->
water	23:27	0:0	4	num_blocks
forexpr	23:39	23:42	3	blk ++
water	23:39	0:0	4	blk
op	23:42	0:0	4	++
stmts	23:46	35:4	3	
water	23:46	0:0	4	{
decl	24:8	24:41	4	AC3Block	*block
op	24:24	0:0	4	=
op	24:26	0:0	4	&
water	24:27	0:0	4	s
op	24:28	0:0	4	->
water	24:30	0:0	4	blocks
op	24:36	0:0	4	[
water	24:37	0:0	4	blk
op	24:40	0:0	4	]
call	25:8	25:34	4	av_freep
arg	25:17	25:34	5	&block->mdct_coef
op	25:17	0:0	6	&
water	25:18	0:0	6	block
op	25:23	0:0	6	->
water	25:25	0:0	6	mdct_coef
water	25:35	0:0	4	;
call	26:8	26:35	4	av_freep
arg	26:17	26:35	5	&block->fixed_coef
op	26:17	0:0	6	&
water	26:18	0:0	6	block
op	26:23	0:0	6	->
water	26:25	0:0	6	fixed_coef
water	26:36	0:0	4	;
call	27:8	27:28	4	av_freep
arg	27:17	27:28	5	&block->exp
op	27:17	0:0	6	&
water	27:18	0:0	6	block
op	27:23	0:0	6	->
water	27:25	0:0	6	exp
water	27:29	0:0	4	;
call	28:8	28:36	4	av_freep
arg	28:17	28:36	5	&block->grouped_exp
op	28:17	0:0	6	&
water	28:18	0:0	6	block
op	28:23	0:0	6	->
water	28:25	0:0	6	grouped_exp
water	28:37	0:0	4	;
call	29:8	29:28	4	av_freep
arg	29:17	29:28	5	&block->psd
op	29:17	0:0	6	&
water	29:18	0:0	6	block
op	29:23	0:0	6	->
water	29:25	0:0	6	psd
water	29:29	0:0	4	;
call	30:8	30:33	4	av_freep
arg	30:17	30:33	5	&block->band_psd
op	30:17	0:0	6	&
water	30:18	0:0	6	block
op	30:23	0:0	6	->
water	30:25	0:0	6	band_psd
water	30:34	0:0	4	;
call	31:8	31:29	4	av_freep
arg	31:17	31:29	5	&block->mask
op	31:17	0:0	6	&
water	31:18	0:0	6	block
op	31:23	0:0	6	->
water	31:25	0:0	6	mask
water	31:30	0:0	4	;
call	32:8	32:30	4	av_freep
arg	32:17	32:30	5	&block->qmant
op	32:17	0:0	6	&
water	32:18	0:0	6	block
op	32:23	0:0	6	->
water	32:25	0:0	6	qmant
water	32:31	0:0	4	;
call	33:8	33:38	4	av_freep
arg	33:17	33:38	5	&block->cpl_coord_exp
op	33:17	0:0	6	&
water	33:18	0:0	6	block
op	33:23	0:0	6	->
water	33:25	0:0	6	cpl_coord_exp
water	33:39	0:0	4	;
call	34:8	34:39	4	av_freep
arg	34:17	34:39	5	&block->cpl_coord_mant
op	34:17	0:0	6	&
water	34:18	0:0	6	block
op	34:23	0:0	6	->
water	34:25	0:0	6	cpl_coord_mant
water	34:40	0:0	4	;
water	35:4	0:0	4	}
call	36:4	36:17	2	s->mdct_end
arg	36:16	36:17	3	s
water	36:16	0:0	4	s
water	36:18	0:0	2	;
return	37:4	37:12	2	0
water	37:11	0:0	3	0

func	1:0	29:0	0	static void	update_ltp
params	1:22	0:0	1	
param	1:23	1:37	2	AACContext *	ac
param	1:39	1:64	2	SingleChannelElement *	sce
stmnts	0:0	28:84	1	
decl	3:4	3:44	2	IndividualChannelStream	*ics
op	3:33	0:0	2	=
op	3:35	0:0	2	&
water	3:36	0:0	2	sce
op	3:39	0:0	2	->
water	3:41	0:0	2	ics
decl	4:4	4:36	2	INTFLOAT	*saved
op	4:24	0:0	2	=
water	4:26	0:0	2	sce
op	4:29	0:0	2	->
water	4:31	0:0	2	saved
decl	5:4	5:37	2	INTFLOAT	*saved_ltp
op	5:24	0:0	2	=
water	5:26	0:0	2	sce
op	5:29	0:0	2	->
water	5:31	0:0	2	coeffs
decl	6:4	6:113	2	const INTFLOAT	*lwindow
op	6:28	0:0	2	=
water	6:30	0:0	2	ics
op	6:33	0:0	2	->
water	6:35	0:0	2	use_kb_window
op	6:48	0:0	2	[
water	6:49	0:0	2	0
op	6:50	0:0	2	]
water	6:52	0:0	2	?
call	6:54	6:85	3	AAC_RENAME
arg	6:65	6:85	4	ff_aac_kbd_long_1024
water	6:65	0:0	5	ff_aac_kbd_long_1024
water	6:87	0:0	2	:
call	6:89	6:112	3	AAC_RENAME
arg	6:100	6:112	4	ff_sine_1024
water	6:100	0:0	5	ff_sine_1024
decl	7:4	7:112	2	const INTFLOAT	*swindow
op	7:28	0:0	2	=
water	7:30	0:0	2	ics
op	7:33	0:0	2	->
water	7:35	0:0	2	use_kb_window
op	7:48	0:0	2	[
water	7:49	0:0	2	0
op	7:50	0:0	2	]
water	7:52	0:0	2	?
call	7:54	7:85	3	AAC_RENAME
arg	7:65	7:85	4	ff_aac_kbd_short_128
water	7:65	0:0	5	ff_aac_kbd_short_128
water	7:87	0:0	2	:
call	7:89	7:111	3	AAC_RENAME
arg	7:100	7:111	4	ff_sine_128
water	7:100	0:0	5	ff_sine_128
decl	8:4	8:9	2	int	i
if	9:4	15:4	2	(ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE)
cond	9:8	9:35	3	ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE
water	9:8	0:0	4	ics
op	9:11	0:0	4	->
water	9:13	0:0	4	window_sequence
op	9:28	0:0	4	[
water	9:29	0:0	4	0
op	9:30	0:0	4	]
op	9:32	0:0	4	==
water	9:35	0:0	4	EIGHT_SHORT_SEQUENCE
stmts	9:57	15:4	3	
water	9:57	0:0	4	{
call	10:8	10:63	4	memcpy
arg	10:15	10:24	5	saved_ltp
water	10:15	0:0	6	saved_ltp
arg	10:32	10:37	5	saved
water	10:32	0:0	6	saved
arg	10:39	10:63	5	512*sizeof(*saved_ltp)
water	10:39	0:0	6	512
op	10:43	0:0	6	*
op	10:45	0:0	6	sizeof
water	10:51	0:0	6	(
op	10:52	0:0	6	*
water	10:53	0:0	6	saved_ltp
water	10:62	0:0	6	)
water	10:64	0:0	4	;
call	11:8	11:63	4	memset
arg	11:15	11:30	5	saved_ltp+576
water	11:15	0:0	6	saved_ltp
op	11:25	0:0	6	+
water	11:27	0:0	6	576
arg	11:32	11:33	5	0
water	11:32	0:0	6	0
arg	11:39	11:63	5	448*sizeof(*saved_ltp)
water	11:39	0:0	6	448
op	11:43	0:0	6	*
op	11:45	0:0	6	sizeof
water	11:51	0:0	6	(
op	11:52	0:0	6	*
water	11:53	0:0	6	saved_ltp
water	11:62	0:0	6	)
water	11:64	0:0	4	;
call	12:8	12:100	4	ac->fdsp->vector_fmul_reverse
arg	12:38	12:53	5	saved_ltp+448
water	12:38	0:0	6	saved_ltp
op	12:48	0:0	6	+
water	12:50	0:0	6	448
arg	12:55	12:73	5	ac->buf_mdct+960
water	12:55	0:0	6	ac
op	12:57	0:0	6	->
water	12:59	0:0	6	buf_mdct
op	12:68	0:0	6	+
water	12:70	0:0	6	960
arg	12:79	12:91	5	&swindow[64]
op	12:79	0:0	6	&
water	12:80	0:0	6	swindow
op	12:87	0:0	6	[
water	12:88	0:0	6	64
op	12:90	0:0	6	]
arg	12:98	12:100	5	64
water	12:98	0:0	6	64
water	12:101	0:0	4	;
for	13:8	14:83	4	(i = 0 ;i < 64;i ++)
forinit	13:13	13:18	5	i = 0 ;
water	13:13	0:0	6	i
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:24	5	i < 64
water	13:20	0:0	6	i
op	13:22	0:0	6	<
water	13:24	0:0	6	64
forexpr	13:28	13:29	5	i ++
water	13:28	0:0	6	i
op	13:29	0:0	6	++
stmts	14:12	14:83	5	
water	14:12	0:0	6	saved_ltp
op	14:21	0:0	6	[
water	14:22	0:0	6	i
op	14:24	0:0	6	+
water	14:26	0:0	6	512
op	14:29	0:0	6	]
op	14:31	0:0	6	=
call	14:33	14:82	6	AAC_MUL31
arg	14:43	14:65	7	ac->buf_mdct[1023-i]
water	14:43	0:0	8	ac
op	14:45	0:0	8	->
water	14:47	0:0	8	buf_mdct
op	14:55	0:0	8	[
water	14:56	0:0	8	1023
op	14:61	0:0	8	-
water	14:63	0:0	8	i
op	14:64	0:0	8	]
arg	14:67	14:82	7	swindow[63-i]
water	14:67	0:0	8	swindow
op	14:74	0:0	8	[
water	14:75	0:0	8	63
op	14:78	0:0	8	-
water	14:80	0:0	8	i
op	14:81	0:0	8	]
water	14:83	0:0	6	;
water	15:4	0:0	4	}
else	15:6	21:4	2
stmts	15:11	21:4	3	
if	15:11	21:4	4	(ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE)
cond	15:15	15:42	5	ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE
water	15:15	0:0	6	ics
op	15:18	0:0	6	->
water	15:20	0:0	6	window_sequence
op	15:35	0:0	6	[
water	15:36	0:0	6	0
op	15:37	0:0	6	]
op	15:39	0:0	6	==
water	15:42	0:0	6	LONG_START_SEQUENCE
stmts	15:63	21:4	5	
water	15:63	0:0	6	{
call	16:8	16:76	6	memcpy
arg	16:15	16:24	7	saved_ltp
water	16:15	0:0	8	saved_ltp
arg	16:32	16:50	7	ac->buf_mdct+512
water	16:32	0:0	8	ac
op	16:34	0:0	8	->
water	16:36	0:0	8	buf_mdct
op	16:45	0:0	8	+
water	16:47	0:0	8	512
arg	16:52	16:76	7	448*sizeof(*saved_ltp)
water	16:52	0:0	8	448
op	16:56	0:0	8	*
op	16:58	0:0	8	sizeof
water	16:64	0:0	8	(
op	16:65	0:0	8	*
water	16:66	0:0	8	saved_ltp
water	16:75	0:0	8	)
water	16:77	0:0	6	;
call	17:8	17:76	6	memset
arg	17:15	17:30	7	saved_ltp+576
water	17:15	0:0	8	saved_ltp
op	17:25	0:0	8	+
water	17:27	0:0	8	576
arg	17:32	17:33	7	0
water	17:32	0:0	8	0
arg	17:52	17:76	7	448*sizeof(*saved_ltp)
water	17:52	0:0	8	448
op	17:56	0:0	8	*
op	17:58	0:0	8	sizeof
water	17:64	0:0	8	(
op	17:65	0:0	8	*
water	17:66	0:0	8	saved_ltp
water	17:75	0:0	8	)
water	17:77	0:0	6	;
call	18:8	18:100	6	ac->fdsp->vector_fmul_reverse
arg	18:38	18:53	7	saved_ltp+448
water	18:38	0:0	8	saved_ltp
op	18:48	0:0	8	+
water	18:50	0:0	8	448
arg	18:55	18:73	7	ac->buf_mdct+960
water	18:55	0:0	8	ac
op	18:57	0:0	8	->
water	18:59	0:0	8	buf_mdct
op	18:68	0:0	8	+
water	18:70	0:0	8	960
arg	18:79	18:91	7	&swindow[64]
op	18:79	0:0	8	&
water	18:80	0:0	8	swindow
op	18:87	0:0	8	[
water	18:88	0:0	8	64
op	18:90	0:0	8	]
arg	18:98	18:100	7	64
water	18:98	0:0	8	64
water	18:101	0:0	6	;
for	19:8	20:83	6	(i = 0 ;i < 64;i ++)
forinit	19:13	19:18	7	i = 0 ;
water	19:13	0:0	8	i
op	19:15	0:0	8	=
water	19:17	0:0	8	0
water	19:18	0:0	8	;
cond	19:20	19:24	7	i < 64
water	19:20	0:0	8	i
op	19:22	0:0	8	<
water	19:24	0:0	8	64
forexpr	19:28	19:29	7	i ++
water	19:28	0:0	8	i
op	19:29	0:0	8	++
stmts	20:12	20:83	7	
water	20:12	0:0	8	saved_ltp
op	20:21	0:0	8	[
water	20:22	0:0	8	i
op	20:24	0:0	8	+
water	20:26	0:0	8	512
op	20:29	0:0	8	]
op	20:31	0:0	8	=
call	20:33	20:82	8	AAC_MUL31
arg	20:43	20:65	9	ac->buf_mdct[1023-i]
water	20:43	0:0	10	ac
op	20:45	0:0	10	->
water	20:47	0:0	10	buf_mdct
op	20:55	0:0	10	[
water	20:56	0:0	10	1023
op	20:61	0:0	10	-
water	20:63	0:0	10	i
op	20:64	0:0	10	]
arg	20:67	20:82	9	swindow[63-i]
water	20:67	0:0	10	swindow
op	20:74	0:0	10	[
water	20:75	0:0	10	63
op	20:78	0:0	10	-
water	20:80	0:0	10	i
op	20:81	0:0	10	]
water	20:83	0:0	8	;
water	21:4	0:0	6	}
else	21:6	25:4	2
stmts	21:11	25:4	3	
water	21:11	0:0	4	{
call	22:8	22:101	4	ac->fdsp->vector_fmul_reverse
arg	22:38	22:47	5	saved_ltp
water	22:38	0:0	6	saved_ltp
arg	22:55	22:73	5	ac->buf_mdct+512
water	22:55	0:0	6	ac
op	22:57	0:0	6	->
water	22:59	0:0	6	buf_mdct
op	22:68	0:0	6	+
water	22:70	0:0	6	512
arg	22:79	22:92	5	&lwindow[512]
op	22:79	0:0	6	&
water	22:80	0:0	6	lwindow
op	22:87	0:0	6	[
water	22:88	0:0	6	512
op	22:91	0:0	6	]
arg	22:98	22:101	5	512
water	22:98	0:0	6	512
water	22:102	0:0	4	;
for	23:8	24:84	4	(i = 0 ;i < 512;i ++)
forinit	23:13	23:18	5	i = 0 ;
water	23:13	0:0	6	i
op	23:15	0:0	6	=
water	23:17	0:0	6	0
water	23:18	0:0	6	;
cond	23:20	23:24	5	i < 512
water	23:20	0:0	6	i
op	23:22	0:0	6	<
water	23:24	0:0	6	512
forexpr	23:29	23:30	5	i ++
water	23:29	0:0	6	i
op	23:30	0:0	6	++
stmts	24:12	24:84	5	
water	24:12	0:0	6	saved_ltp
op	24:21	0:0	6	[
water	24:22	0:0	6	i
op	24:24	0:0	6	+
water	24:26	0:0	6	512
op	24:29	0:0	6	]
op	24:31	0:0	6	=
call	24:33	24:83	6	AAC_MUL31
arg	24:43	24:65	7	ac->buf_mdct[1023-i]
water	24:43	0:0	8	ac
op	24:45	0:0	8	->
water	24:47	0:0	8	buf_mdct
op	24:55	0:0	8	[
water	24:56	0:0	8	1023
op	24:61	0:0	8	-
water	24:63	0:0	8	i
op	24:64	0:0	8	]
arg	24:67	24:83	7	lwindow[511-i]
water	24:67	0:0	8	lwindow
op	24:74	0:0	8	[
water	24:75	0:0	8	511
op	24:79	0:0	8	-
water	24:81	0:0	8	i
op	24:82	0:0	8	]
water	24:84	0:0	6	;
water	25:4	0:0	4	}
call	26:4	26:83	2	memcpy
arg	26:11	26:25	3	sce->ltp_state
water	26:11	0:0	4	sce
op	26:14	0:0	4	->
water	26:16	0:0	4	ltp_state
arg	26:32	26:51	3	sce->ltp_state+1024
water	26:32	0:0	4	sce
op	26:35	0:0	4	->
water	26:37	0:0	4	ltp_state
op	26:46	0:0	4	+
water	26:47	0:0	4	1024
arg	26:53	26:83	3	1024*sizeof(*sce->ltp_state)
water	26:53	0:0	4	1024
op	26:58	0:0	4	*
op	26:60	0:0	4	sizeof
water	26:66	0:0	4	(
op	26:67	0:0	4	*
water	26:68	0:0	4	sce
op	26:71	0:0	4	->
water	26:73	0:0	4	ltp_state
water	26:82	0:0	4	)
water	26:84	0:0	2	;
call	27:4	27:83	2	memcpy
arg	27:11	27:30	3	sce->ltp_state+1024
water	27:11	0:0	4	sce
op	27:14	0:0	4	->
water	27:16	0:0	4	ltp_state
op	27:25	0:0	4	+
water	27:26	0:0	4	1024
arg	27:32	27:40	3	sce->ret
water	27:32	0:0	4	sce
op	27:35	0:0	4	->
water	27:37	0:0	4	ret
arg	27:53	27:83	3	1024*sizeof(*sce->ltp_state)
water	27:53	0:0	4	1024
op	27:58	0:0	4	*
op	27:60	0:0	4	sizeof
water	27:66	0:0	4	(
op	27:67	0:0	4	*
water	27:68	0:0	4	sce
op	27:71	0:0	4	->
water	27:73	0:0	4	ltp_state
water	27:82	0:0	4	)
water	27:84	0:0	2	;
call	28:4	28:83	2	memcpy
arg	28:11	28:30	3	sce->ltp_state+2048
water	28:11	0:0	4	sce
op	28:14	0:0	4	->
water	28:16	0:0	4	ltp_state
op	28:25	0:0	4	+
water	28:26	0:0	4	2048
arg	28:32	28:41	3	saved_ltp
water	28:32	0:0	4	saved_ltp
arg	28:53	28:83	3	1024*sizeof(*sce->ltp_state)
water	28:53	0:0	4	1024
op	28:58	0:0	4	*
op	28:60	0:0	4	sizeof
water	28:66	0:0	4	(
op	28:67	0:0	4	*
water	28:68	0:0	4	sce
op	28:71	0:0	4	->
water	28:73	0:0	4	ltp_state
water	28:82	0:0	4	)
water	28:84	0:0	2	;

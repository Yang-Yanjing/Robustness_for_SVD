func	1:0	22:0	0	static MXFStructuralComponent *	mxf_resolve_essence_group_choice
params	1:63	0:0	1	
param	1:64	1:79	2	MXFContext *	mxf
param	1:81	1:111	2	MXFEssenceGroup *	essence_group
stmnts	0:0	21:15	1	
decl	3:4	3:44	2	MXFStructuralComponent	*component
op	3:38	0:0	2	=
water	3:40	0:0	2	NULL
decl	4:4	4:30	2	MXFPackage	*package
op	4:24	0:0	2	=
water	4:26	0:0	2	NULL
decl	5:4	5:36	2	MXFDescriptor	*descriptor
op	5:30	0:0	2	=
water	5:32	0:0	2	NULL
decl	6:4	6:9	2	int	i
if	7:4	8:19	2	(! essence_group || ! essence_group -> structural_components_count)
cond	7:8	7:42	3	! essence_group || ! essence_group -> structural_components_count
op	7:8	0:0	4	!
water	7:9	0:0	4	essence_group
op	7:23	0:0	4	||
op	7:26	0:0	4	!
water	7:27	0:0	4	essence_group
op	7:40	0:0	4	->
water	7:42	0:0	4	structural_components_count
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
for	11:4	20:4	2	(i = 0 ;i < essence_group -> structural_components_count;i ++)
forinit	11:9	11:13	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:12	0:0	4	0
water	11:13	0:0	4	;
cond	11:15	11:34	3	i < essence_group -> structural_components_count
water	11:15	0:0	4	i
op	11:17	0:0	4	<
water	11:19	0:0	4	essence_group
op	11:32	0:0	4	->
water	11:34	0:0	4	structural_components_count
forexpr	11:63	11:64	3	i ++
water	11:63	0:0	4	i
op	11:64	0:0	4	++
stmts	11:67	20:4	3	
water	11:67	0:0	4	{
water	12:8	0:0	4	component
op	12:18	0:0	4	=
call	12:20	12:105	4	mxf_resolve_strong_ref
arg	12:43	12:46	5	mxf
water	12:43	0:0	6	mxf
arg	12:48	12:93	5	&essence_group->structural_components_refs[i]
op	12:48	0:0	6	&
water	12:49	0:0	6	essence_group
op	12:62	0:0	6	->
water	12:64	0:0	6	structural_components_refs
op	12:90	0:0	6	[
water	12:91	0:0	6	i
op	12:92	0:0	6	]
arg	12:95	12:105	5	SourceClip
water	12:95	0:0	6	SourceClip
water	12:106	0:0	4	;
if	13:8	14:20	4	(! component)
cond	13:12	13:13	5	! component
op	13:12	0:0	6	!
water	13:13	0:0	6	component
stmts	14:12	14:20	5	
continue	14:12	14:20	6	
if	15:8	16:20	4	(! ( package =mxf_resolve_source_package (mxf ,component -> source_package_uid ) ))
cond	15:12	15:86	5	! ( package =mxf_resolve_source_package (mxf ,component -> source_package_uid ) )
op	15:12	0:0	6	!
water	15:13	0:0	6	(
water	15:14	0:0	6	package
op	15:22	0:0	6	=
call	15:24	15:85	6	mxf_resolve_source_package
arg	15:51	15:54	7	mxf
water	15:51	0:0	8	mxf
arg	15:56	15:85	7	component->source_package_uid
water	15:56	0:0	8	component
op	15:65	0:0	8	->
water	15:67	0:0	8	source_package_uid
water	15:86	0:0	6	)
stmts	16:12	16:20	5	
continue	16:12	16:20	6	
water	17:8	0:0	4	descriptor
op	17:19	0:0	4	=
call	17:21	17:85	4	mxf_resolve_strong_ref
arg	17:44	17:47	5	mxf
water	17:44	0:0	6	mxf
arg	17:49	17:73	5	&package->descriptor_ref
op	17:49	0:0	6	&
water	17:50	0:0	6	package
op	17:57	0:0	6	->
water	17:59	0:0	6	descriptor_ref
arg	17:75	17:85	5	Descriptor
water	17:75	0:0	6	Descriptor
water	17:86	0:0	4	;
if	18:8	19:28	4	(descriptor)
cond	18:12	18:12	5	descriptor
water	18:12	0:0	6	descriptor
stmts	19:12	19:28	5	
return	19:12	19:28	6	component
water	19:19	0:0	7	component
water	20:4	0:0	4	}
return	21:4	21:15	2	NULL
water	21:11	0:0	3	NULL

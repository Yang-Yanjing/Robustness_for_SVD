func	1:0	36:0	0	void	av_murmur3_update
params	1:22	0:0	1	
param	1:23	1:35	2	AVMurMur3 *	c
param	1:37	1:55	2	const uint8_t *	src
param	1:57	1:64	2	int	len
stmnts	0:0	35:4	1	
decl	3:4	3:22	2	const uint8_t	*end
decl	4:4	4:35	2	uint64_t	h1
op	4:16	0:0	2	=
water	4:18	0:0	2	c
op	4:19	0:0	2	->
water	4:21	0:0	2	h1
water	4:23	0:0	2	,
decl	4:4	4:35	2	uint64_t	h2
op	4:28	0:0	2	=
water	4:30	0:0	2	c
op	4:31	0:0	2	->
water	4:33	0:0	2	h2
decl	5:4	5:19	2	uint64_t	k1
water	5:15	0:0	2	,
decl	5:4	5:19	2	uint64_t	k2
if	6:4	6:24	2	(len <= 0)
cond	6:8	6:15	3	len <= 0
water	6:8	0:0	4	len
op	6:12	0:0	4	<=
water	6:15	0:0	4	0
stmts	6:18	6:24	3	
return	6:18	6:24	4	
water	7:4	0:0	2	c
op	7:5	0:0	2	->
water	7:7	0:0	2	len
op	7:11	0:0	2	+=
water	7:14	0:0	2	len
water	7:17	0:0	2	;
if	8:4	18:4	2	(c -> state_pos > 0)
cond	8:8	8:23	3	c -> state_pos > 0
water	8:8	0:0	4	c
op	8:9	0:0	4	->
water	8:11	0:0	4	state_pos
op	8:21	0:0	4	>
water	8:23	0:0	4	0
stmts	8:26	18:4	3	
water	8:26	0:0	4	{
while	9:8	12:8	4	(c -> state_pos < 16)
cond	9:15	9:30	5	c -> state_pos < 16
water	9:15	0:0	6	c
op	9:16	0:0	6	->
water	9:18	0:0	6	state_pos
op	9:28	0:0	6	<
water	9:30	0:0	6	16
stmts	9:34	12:8	5	
water	9:34	0:0	6	{
water	10:12	0:0	6	c
op	10:13	0:0	6	->
water	10:15	0:0	6	state
op	10:20	0:0	6	[
water	10:21	0:0	6	c
op	10:22	0:0	6	->
water	10:24	0:0	6	state_pos
op	10:33	0:0	6	++
op	10:35	0:0	6	]
op	10:37	0:0	6	=
op	10:39	0:0	6	*
water	10:40	0:0	6	src
op	10:43	0:0	6	++
water	10:45	0:0	6	;
if	11:12	11:34	6	(-- len <= 0)
cond	11:16	11:25	7	-- len <= 0
op	11:16	0:0	8	--
water	11:18	0:0	8	len
op	11:22	0:0	8	<=
water	11:25	0:0	8	0
stmts	11:28	11:34	7	
return	11:28	11:34	8	
water	12:8	0:0	6	}
water	13:8	0:0	4	c
op	13:9	0:0	4	->
water	13:11	0:0	4	state_pos
op	13:21	0:0	4	=
water	13:23	0:0	4	0
water	13:24	0:0	4	;
water	14:8	0:0	4	k1
op	14:11	0:0	4	=
call	14:13	14:28	4	get_k1
arg	14:20	14:28	5	c->state
water	14:20	0:0	6	c
op	14:21	0:0	6	->
water	14:23	0:0	6	state
water	14:29	0:0	4	;
water	15:8	0:0	4	k2
op	15:11	0:0	4	=
call	15:13	15:28	4	get_k2
arg	15:20	15:28	5	c->state
water	15:20	0:0	6	c
op	15:21	0:0	6	->
water	15:23	0:0	6	state
water	15:29	0:0	4	;
water	16:8	0:0	4	h1
op	16:11	0:0	4	=
call	16:13	16:33	4	update_h1
arg	16:23	16:25	5	k1
water	16:23	0:0	6	k1
arg	16:27	16:29	5	h1
water	16:27	0:0	6	h1
arg	16:31	16:33	5	h2
water	16:31	0:0	6	h2
water	16:34	0:0	4	;
water	17:8	0:0	4	h2
op	17:11	0:0	4	=
call	17:13	17:33	4	update_h2
arg	17:23	17:25	5	k2
water	17:23	0:0	6	k2
arg	17:27	17:29	5	h1
water	17:27	0:0	6	h1
arg	17:31	17:33	5	h2
water	17:31	0:0	6	h2
water	17:34	0:0	4	;
water	18:4	0:0	4	}
water	19:4	0:0	2	end
op	19:8	0:0	2	=
water	19:10	0:0	2	src
op	19:14	0:0	2	+
water	19:16	0:0	2	(
water	19:17	0:0	2	len
op	19:21	0:0	2	&
water	19:23	0:0	2	~15
water	19:26	0:0	2	)
water	19:27	0:0	2	;
while	20:4	28:4	2	(src < end)
cond	20:11	20:17	3	src < end
water	20:11	0:0	4	src
op	20:15	0:0	4	<
water	20:17	0:0	4	end
stmts	20:22	28:4	3	
water	20:22	0:0	4	{
water	23:8	0:0	4	k1
op	23:11	0:0	4	=
call	23:13	23:23	4	get_k1
arg	23:20	23:23	5	src
water	23:20	0:0	6	src
water	23:24	0:0	4	;
water	24:8	0:0	4	k2
op	24:11	0:0	4	=
call	24:13	24:23	4	get_k2
arg	24:20	24:23	5	src
water	24:20	0:0	6	src
water	24:24	0:0	4	;
water	25:8	0:0	4	h1
op	25:11	0:0	4	=
call	25:13	25:33	4	update_h1
arg	25:23	25:25	5	k1
water	25:23	0:0	6	k1
arg	25:27	25:29	5	h1
water	25:27	0:0	6	h1
arg	25:31	25:33	5	h2
water	25:31	0:0	6	h2
water	25:34	0:0	4	;
water	26:8	0:0	4	h2
op	26:11	0:0	4	=
call	26:13	26:33	4	update_h2
arg	26:23	26:25	5	k2
water	26:23	0:0	6	k2
arg	26:27	26:29	5	h1
water	26:27	0:0	6	h1
arg	26:31	26:33	5	h2
water	26:31	0:0	6	h2
water	26:34	0:0	4	;
water	27:8	0:0	4	src
op	27:12	0:0	4	+=
water	27:15	0:0	4	16
water	27:17	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	c
op	29:5	0:0	2	->
water	29:7	0:0	2	h1
op	29:10	0:0	2	=
water	29:12	0:0	2	h1
water	29:14	0:0	2	;
water	30:4	0:0	2	c
op	30:5	0:0	2	->
water	30:7	0:0	2	h2
op	30:10	0:0	2	=
water	30:12	0:0	2	h2
water	30:14	0:0	2	;
water	31:4	0:0	2	len
op	31:8	0:0	2	&=
water	31:11	0:0	2	15
water	31:13	0:0	2	;
if	32:4	35:4	2	(len > 0)
cond	32:8	32:14	3	len > 0
water	32:8	0:0	4	len
op	32:12	0:0	4	>
water	32:14	0:0	4	0
stmts	32:17	35:4	3	
water	32:17	0:0	4	{
call	33:8	33:33	4	memcpy
arg	33:15	33:23	5	c->state
water	33:15	0:0	6	c
op	33:16	0:0	6	->
water	33:18	0:0	6	state
arg	33:25	33:28	5	src
water	33:25	0:0	6	src
arg	33:30	33:33	5	len
water	33:30	0:0	6	len
water	33:34	0:0	4	;
water	34:8	0:0	4	c
op	34:9	0:0	4	->
water	34:11	0:0	4	state_pos
op	34:21	0:0	4	=
water	34:23	0:0	4	len
water	34:26	0:0	4	;
water	35:4	0:0	4	}

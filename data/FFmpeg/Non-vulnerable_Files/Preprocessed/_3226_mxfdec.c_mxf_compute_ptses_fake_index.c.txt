func	1:0	97:0	0	static int	mxf_compute_ptses_fake_index
params	1:39	0:0	1	
param	1:40	1:55	2	MXFContext *	mxf
param	1:57	1:83	2	MXFIndexTable *	index_table
stmnts	0:0	96:12	1	
decl	3:4	3:15	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:15	2	int	j
water	3:12	0:0	2	,
decl	3:4	3:15	2	int	x
decl	4:4	4:37	2	int8_t	max_temporal_offset
op	4:31	0:0	2	=
op	4:33	0:0	2	-
water	4:34	0:0	2	128
decl	5:4	5:18	2	uint8_t	*flags
for	7:4	14:4	2	(i = 0 ;i < index_table -> nb_segments;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:33	3	i < index_table -> nb_segments
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	index_table
op	7:31	0:0	4	->
water	7:33	0:0	4	nb_segments
forexpr	7:46	7:47	3	i ++
water	7:46	0:0	4	i
op	7:47	0:0	4	++
stmts	7:51	14:4	3	
water	7:51	0:0	4	{
decl	8:8	8:58	4	MXFIndexTableSegment	*s
op	8:32	0:0	4	=
water	8:34	0:0	4	index_table
op	8:45	0:0	4	->
water	8:47	0:0	4	segments
op	8:55	0:0	4	[
water	8:56	0:0	4	i
op	8:57	0:0	4	]
if	9:8	12:8	4	(! s -> nb_index_entries)
cond	9:12	9:16	5	! s -> nb_index_entries
op	9:12	0:0	6	!
water	9:13	0:0	6	s
op	9:14	0:0	6	->
water	9:16	0:0	6	nb_index_entries
stmts	9:34	12:8	5	
water	9:34	0:0	6	{
water	10:12	0:0	6	index_table
op	10:23	0:0	6	->
water	10:25	0:0	6	nb_ptses
op	10:34	0:0	6	=
water	10:36	0:0	6	0
water	10:37	0:0	6	;
return	11:12	11:20	6	0
water	11:19	0:0	7	0
water	12:8	0:0	6	}
water	13:8	0:0	4	index_table
op	13:19	0:0	4	->
water	13:21	0:0	4	nb_ptses
op	13:30	0:0	4	+=
water	13:33	0:0	4	s
op	13:34	0:0	4	->
water	13:36	0:0	4	index_duration
water	13:50	0:0	4	;
water	14:4	0:0	4	}
if	16:4	17:16	2	(index_table -> nb_ptses <= 0)
cond	16:8	16:33	3	index_table -> nb_ptses <= 0
water	16:8	0:0	4	index_table
op	16:19	0:0	4	->
water	16:21	0:0	4	nb_ptses
op	16:30	0:0	4	<=
water	16:33	0:0	4	0
stmts	17:8	17:16	3	
return	17:8	17:16	4	0
water	17:15	0:0	5	0
if	18:4	26:4	2	(! ( index_table -> ptses =av_calloc (index_table -> nb_ptses ,sizeof ( int64_t ) ) ) || ! ( index_table -> fake_index =av_calloc (index_table -> nb_ptses ,sizeof ( AVIndexEntry ) ) ) || ! ( index_table -> offsets =av_calloc (index_table -> nb_ptses ,sizeof ( int8_t ) ) ) || ! ( flags =av_calloc (index_table -> nb_ptses ,sizeof ( uint8_t ) ) ))
cond	18:8	21:85	3	! ( index_table -> ptses =av_calloc (index_table -> nb_ptses ,sizeof ( int64_t ) ) ) || ! ( index_table -> fake_index =av_calloc (index_table -> nb_ptses ,sizeof ( AVIndexEntry ) ) ) || ! ( index_table -> offsets =av_calloc (index_table -> nb_ptses ,sizeof ( int8_t ) ) ) || ! ( flags =av_calloc (index_table -> nb_ptses ,sizeof ( uint8_t ) ) )
op	18:8	0:0	4	!
water	18:9	0:0	4	(
water	18:10	0:0	4	index_table
op	18:21	0:0	4	->
water	18:23	0:0	4	ptses
op	18:34	0:0	4	=
call	18:36	18:84	4	av_calloc
arg	18:46	18:67	5	index_table->nb_ptses
water	18:46	0:0	6	index_table
op	18:57	0:0	6	->
water	18:59	0:0	6	nb_ptses
arg	18:69	18:84	5	sizeof(int64_t)
op	18:69	0:0	6	sizeof
water	18:75	0:0	6	(
water	18:76	0:0	6	int64_t
water	18:83	0:0	6	)
water	18:85	0:0	4	)
op	18:87	0:0	4	||
op	19:8	0:0	4	!
water	19:9	0:0	4	(
water	19:10	0:0	4	index_table
op	19:21	0:0	4	->
water	19:23	0:0	4	fake_index
op	19:34	0:0	4	=
call	19:36	19:89	4	av_calloc
arg	19:46	19:67	5	index_table->nb_ptses
water	19:46	0:0	6	index_table
op	19:57	0:0	6	->
water	19:59	0:0	6	nb_ptses
arg	19:69	19:89	5	sizeof(AVIndexEntry)
op	19:69	0:0	6	sizeof
water	19:75	0:0	6	(
water	19:76	0:0	6	AVIndexEntry
water	19:88	0:0	6	)
water	19:90	0:0	4	)
op	19:92	0:0	4	||
op	20:8	0:0	4	!
water	20:9	0:0	4	(
water	20:10	0:0	4	index_table
op	20:21	0:0	4	->
water	20:23	0:0	4	offsets
op	20:34	0:0	4	=
call	20:36	20:83	4	av_calloc
arg	20:46	20:67	5	index_table->nb_ptses
water	20:46	0:0	6	index_table
op	20:57	0:0	6	->
water	20:59	0:0	6	nb_ptses
arg	20:69	20:83	5	sizeof(int8_t)
op	20:69	0:0	6	sizeof
water	20:75	0:0	6	(
water	20:76	0:0	6	int8_t
water	20:82	0:0	6	)
water	20:84	0:0	4	)
op	20:86	0:0	4	||
op	21:8	0:0	4	!
water	21:9	0:0	4	(
water	21:10	0:0	4	flags
op	21:34	0:0	4	=
call	21:36	21:84	4	av_calloc
arg	21:46	21:67	5	index_table->nb_ptses
water	21:46	0:0	6	index_table
op	21:57	0:0	6	->
water	21:59	0:0	6	nb_ptses
arg	21:69	21:84	5	sizeof(uint8_t)
op	21:69	0:0	6	sizeof
water	21:75	0:0	6	(
water	21:76	0:0	6	uint8_t
water	21:83	0:0	6	)
water	21:85	0:0	4	)
stmts	21:88	26:4	3	
water	21:88	0:0	4	{
call	22:8	22:36	4	av_freep
arg	22:17	22:36	5	&index_table->ptses
op	22:17	0:0	6	&
water	22:18	0:0	6	index_table
op	22:29	0:0	6	->
water	22:31	0:0	6	ptses
water	22:37	0:0	4	;
call	23:8	23:41	4	av_freep
arg	23:17	23:41	5	&index_table->fake_index
op	23:17	0:0	6	&
water	23:18	0:0	6	index_table
op	23:29	0:0	6	->
water	23:31	0:0	6	fake_index
water	23:42	0:0	4	;
call	24:8	24:38	4	av_freep
arg	24:17	24:38	5	&index_table->offsets
op	24:17	0:0	6	&
water	24:18	0:0	6	index_table
op	24:29	0:0	6	->
water	24:31	0:0	6	offsets
water	24:39	0:0	4	;
return	25:8	25:30	4	AVERROR(ENOMEM)
call	25:15	25:29	5	AVERROR
arg	25:23	25:29	6	ENOMEM
water	25:23	0:0	7	ENOMEM
water	26:4	0:0	4	}
for	29:4	30:46	2	(x = 0 ;x < index_table -> nb_ptses;x ++)
forinit	29:9	29:14	3	x = 0 ;
water	29:9	0:0	4	x
op	29:11	0:0	4	=
water	29:13	0:0	4	0
water	29:14	0:0	4	;
cond	29:16	29:33	3	x < index_table -> nb_ptses
water	29:16	0:0	4	x
op	29:18	0:0	4	<
water	29:20	0:0	4	index_table
op	29:31	0:0	4	->
water	29:33	0:0	4	nb_ptses
forexpr	29:43	29:44	3	x ++
water	29:43	0:0	4	x
op	29:44	0:0	4	++
stmts	30:8	30:46	3	
water	30:8	0:0	4	index_table
op	30:19	0:0	4	->
water	30:21	0:0	4	ptses
op	30:26	0:0	4	[
water	30:27	0:0	4	x
op	30:28	0:0	4	]
op	30:30	0:0	4	=
water	30:32	0:0	4	AV_NOPTS_VALUE
water	30:46	0:0	4	;
for	58:4	87:4	2	(i = x = 0 ;i < index_table -> nb_segments;i ++)
forinit	58:9	58:18	3	i = x = 0 ;
water	58:9	0:0	4	i
op	58:11	0:0	4	=
water	58:13	0:0	4	x
op	58:15	0:0	4	=
water	58:17	0:0	4	0
water	58:18	0:0	4	;
cond	58:20	58:37	3	i < index_table -> nb_segments
water	58:20	0:0	4	i
op	58:22	0:0	4	<
water	58:24	0:0	4	index_table
op	58:35	0:0	4	->
water	58:37	0:0	4	nb_segments
forexpr	58:50	58:51	3	i ++
water	58:50	0:0	4	i
op	58:51	0:0	4	++
stmts	58:55	87:4	3	
water	58:55	0:0	4	{
decl	59:8	59:58	4	MXFIndexTableSegment	*s
op	59:32	0:0	4	=
water	59:34	0:0	4	index_table
op	59:45	0:0	4	->
water	59:47	0:0	4	segments
op	59:55	0:0	4	[
water	59:56	0:0	4	i
op	59:57	0:0	4	]
decl	60:8	60:27	4	int	index_delta
op	60:24	0:0	4	=
water	60:26	0:0	4	1
decl	61:8	61:35	4	int	n
op	61:14	0:0	4	=
water	61:16	0:0	4	s
op	61:17	0:0	4	->
water	61:19	0:0	4	nb_index_entries
if	62:8	66:8	4	(s -> nb_index_entries == 2 * s -> index_duration + 1)
cond	62:12	62:59	5	s -> nb_index_entries == 2 * s -> index_duration + 1
water	62:12	0:0	6	s
op	62:13	0:0	6	->
water	62:15	0:0	6	nb_index_entries
op	62:32	0:0	6	==
water	62:35	0:0	6	2
op	62:37	0:0	6	*
water	62:39	0:0	6	s
op	62:40	0:0	6	->
water	62:42	0:0	6	index_duration
op	62:57	0:0	6	+
water	62:59	0:0	6	1
stmts	62:62	66:8	5	
water	62:62	0:0	6	{
water	63:12	0:0	6	index_delta
op	63:24	0:0	6	=
water	63:26	0:0	6	2
water	63:27	0:0	6	;
water	65:12	0:0	6	n
op	65:13	0:0	6	--
water	65:15	0:0	6	;
water	66:8	0:0	6	}
for	67:8	86:8	4	(j = 0 ;j < n;j += index_delta , x ++)
forinit	67:13	67:18	5	j = 0 ;
water	67:13	0:0	6	j
op	67:15	0:0	6	=
water	67:17	0:0	6	0
water	67:18	0:0	6	;
cond	67:20	67:24	5	j < n
water	67:20	0:0	6	j
op	67:22	0:0	6	<
water	67:24	0:0	6	n
forexpr	67:27	67:46	5	j += index_delta , x ++
water	67:27	0:0	6	j
op	67:29	0:0	6	+=
water	67:32	0:0	6	index_delta
water	67:43	0:0	6	,
water	67:45	0:0	6	x
op	67:46	0:0	6	++
stmts	67:50	86:8	5	
water	67:50	0:0	6	{
decl	68:12	68:68	6	int	offset
op	68:23	0:0	6	=
water	68:25	0:0	6	s
op	68:26	0:0	6	->
water	68:28	0:0	6	temporal_offset_entries
op	68:51	0:0	6	[
water	68:52	0:0	6	j
op	68:53	0:0	6	]
op	68:55	0:0	6	/
water	68:57	0:0	6	index_delta
decl	69:12	69:35	6	int	index
op	69:23	0:0	6	=
water	69:25	0:0	6	x
op	69:27	0:0	6	+
water	69:29	0:0	6	offset
if	70:12	75:12	6	(x >= index_table -> nb_ptses)
cond	70:16	70:34	7	x >= index_table -> nb_ptses
water	70:16	0:0	8	x
op	70:18	0:0	8	>=
water	70:21	0:0	8	index_table
op	70:32	0:0	8	->
water	70:34	0:0	8	nb_ptses
stmts	70:44	75:12	7	
water	70:44	0:0	8	{
call	71:16	73:61	8	av_log
arg	71:23	71:30	9	mxf->fc
water	71:23	0:0	10	mxf
op	71:26	0:0	10	->
water	71:28	0:0	10	fc
arg	71:32	71:44	9	AV_LOG_ERROR
water	71:32	0:0	10	AV_LOG_ERROR
arg	72:23	72:88	9	"x >= nb_ptses - IndexEntryCount %i < IndexDuration %"PRId64"?\n"
water	72:23	0:0	10	"x >= nb_ptses - IndexEntryCount %i < IndexDuration %"
water	72:77	0:0	10	PRId64
water	72:83	0:0	10	"?\n"
arg	73:23	73:42	9	s->nb_index_entries
water	73:23	0:0	10	s
op	73:24	0:0	10	->
water	73:26	0:0	10	nb_index_entries
arg	73:44	73:61	9	s->index_duration
water	73:44	0:0	10	s
op	73:45	0:0	10	->
water	73:47	0:0	10	index_duration
water	73:62	0:0	8	;
break	74:16	74:21	8	
water	75:12	0:0	8	}
water	76:12	0:0	6	flags
op	76:17	0:0	6	[
water	76:18	0:0	6	x
op	76:19	0:0	6	]
op	76:21	0:0	6	=
op	76:23	0:0	6	!
water	76:24	0:0	6	(
water	76:25	0:0	6	s
op	76:26	0:0	6	->
water	76:28	0:0	6	flag_entries
op	76:40	0:0	6	[
water	76:41	0:0	6	j
op	76:42	0:0	6	]
op	76:44	0:0	6	&
water	76:46	0:0	6	0
water	76:47	0:0	6	x30
water	76:50	0:0	6	)
water	76:52	0:0	6	?
water	76:54	0:0	6	AVINDEX_KEYFRAME
water	76:71	0:0	6	:
water	76:73	0:0	6	0
water	76:74	0:0	6	;
if	77:12	82:12	6	(index < 0 || index >= index_table -> nb_ptses)
cond	77:16	77:51	7	index < 0 || index >= index_table -> nb_ptses
water	77:16	0:0	8	index
op	77:22	0:0	8	<
water	77:24	0:0	8	0
op	77:26	0:0	8	||
water	77:29	0:0	8	index
op	77:35	0:0	8	>=
water	77:38	0:0	8	index_table
op	77:49	0:0	8	->
water	77:51	0:0	8	nb_ptses
stmts	77:61	82:12	7	
water	77:61	0:0	8	{
call	78:16	80:39	8	av_log
arg	78:23	78:30	9	mxf->fc
water	78:23	0:0	10	mxf
op	78:26	0:0	10	->
water	78:28	0:0	10	fc
arg	78:32	78:44	9	AV_LOG_ERROR
water	78:32	0:0	10	AV_LOG_ERROR
arg	79:23	79:90	9	"index entry %i + TemporalOffset %i = %i, which is out of bounds\n"
water	79:23	0:0	10	"index entry %i + TemporalOffset %i = %i, which is out of bounds\n"
arg	80:23	80:24	9	x
water	80:23	0:0	10	x
arg	80:26	80:32	9	offset
water	80:26	0:0	10	offset
arg	80:34	80:39	9	index
water	80:34	0:0	10	index
water	80:40	0:0	8	;
continue	81:16	81:24	8	
water	82:12	0:0	8	}
water	83:12	0:0	6	index_table
op	83:23	0:0	6	->
water	83:25	0:0	6	offsets
op	83:32	0:0	6	[
water	83:33	0:0	6	x
op	83:34	0:0	6	]
op	83:36	0:0	6	=
water	83:38	0:0	6	offset
water	83:44	0:0	6	;
water	84:12	0:0	6	index_table
op	84:23	0:0	6	->
water	84:25	0:0	6	ptses
op	84:30	0:0	6	[
water	84:31	0:0	6	index
op	84:36	0:0	6	]
op	84:38	0:0	6	=
water	84:40	0:0	6	x
water	84:41	0:0	6	;
water	85:12	0:0	6	max_temporal_offset
op	85:32	0:0	6	=
call	85:34	85:67	6	FFMAX
arg	85:40	85:59	7	max_temporal_offset
water	85:40	0:0	8	max_temporal_offset
arg	85:61	85:67	7	offset
water	85:61	0:0	8	offset
water	85:68	0:0	6	;
water	86:8	0:0	6	}
water	87:4	0:0	4	}
for	89:4	93:4	2	(x = 0 ;x < index_table -> nb_ptses;x ++)
forinit	89:9	89:14	3	x = 0 ;
water	89:9	0:0	4	x
op	89:11	0:0	4	=
water	89:13	0:0	4	0
water	89:14	0:0	4	;
cond	89:16	89:33	3	x < index_table -> nb_ptses
water	89:16	0:0	4	x
op	89:18	0:0	4	<
water	89:20	0:0	4	index_table
op	89:31	0:0	4	->
water	89:33	0:0	4	nb_ptses
forexpr	89:43	89:44	3	x ++
water	89:43	0:0	4	x
op	89:44	0:0	4	++
stmts	89:48	93:4	3	
water	89:48	0:0	4	{
water	90:8	0:0	4	index_table
op	90:19	0:0	4	->
water	90:21	0:0	4	fake_index
op	90:31	0:0	4	[
water	90:32	0:0	4	x
op	90:33	0:0	4	]
op	90:34	0:0	4	.
water	90:35	0:0	4	timestamp
op	90:45	0:0	4	=
water	90:47	0:0	4	x
water	90:48	0:0	4	;
if	91:8	92:75	4	(index_table -> ptses [ x ] != AV_NOPTS_VALUE)
cond	91:12	91:37	5	index_table -> ptses [ x ] != AV_NOPTS_VALUE
water	91:12	0:0	6	index_table
op	91:23	0:0	6	->
water	91:25	0:0	6	ptses
op	91:30	0:0	6	[
water	91:31	0:0	6	x
op	91:32	0:0	6	]
op	91:34	0:0	6	!=
water	91:37	0:0	6	AV_NOPTS_VALUE
stmts	92:12	92:75	5	
water	92:12	0:0	6	index_table
op	92:23	0:0	6	->
water	92:25	0:0	6	fake_index
op	92:35	0:0	6	[
water	92:36	0:0	6	index_table
op	92:47	0:0	6	->
water	92:49	0:0	6	ptses
op	92:54	0:0	6	[
water	92:55	0:0	6	x
op	92:56	0:0	6	]
op	92:57	0:0	6	]
op	92:58	0:0	6	.
water	92:59	0:0	6	flags
op	92:65	0:0	6	=
water	92:67	0:0	6	flags
op	92:72	0:0	6	[
water	92:73	0:0	6	x
op	92:74	0:0	6	]
water	92:75	0:0	6	;
water	93:4	0:0	4	}
call	94:4	94:19	2	av_freep
arg	94:13	94:19	3	&flags
op	94:13	0:0	4	&
water	94:14	0:0	4	flags
water	94:20	0:0	2	;
water	95:4	0:0	2	index_table
op	95:15	0:0	2	->
water	95:17	0:0	2	first_dts
op	95:27	0:0	2	=
op	95:29	0:0	2	-
water	95:30	0:0	2	max_temporal_offset
water	95:49	0:0	2	;
return	96:4	96:12	2	0
water	96:11	0:0	3	0

func	1:0	31:0	0	static void	swap_samplerates_on_filter
params	1:38	0:0	1	
param	1:39	1:62	2	AVFilterContext *	filter
stmnts	0:0	30:4	1	
decl	3:4	3:29	2	AVFilterLink	*link
op	3:23	0:0	2	=
water	3:25	0:0	2	NULL
decl	4:4	4:19	2	int	sample_rate
decl	5:4	5:12	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	j
for	6:4	11:4	2	(i = 0 ;i < filter -> nb_inputs;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:28	3	i < filter -> nb_inputs
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	filter
op	6:26	0:0	4	->
water	6:28	0:0	4	nb_inputs
forexpr	6:39	6:40	3	i ++
water	6:39	0:0	4	i
op	6:40	0:0	4	++
stmts	6:44	11:4	3	
water	6:44	0:0	4	{
water	7:8	0:0	4	link
op	7:13	0:0	4	=
water	7:15	0:0	4	filter
op	7:21	0:0	4	->
water	7:23	0:0	4	inputs
op	7:29	0:0	4	[
water	7:30	0:0	4	i
op	7:31	0:0	4	]
water	7:32	0:0	4	;
if	8:8	10:17	4	(link -> type == AVMEDIA_TYPE_AUDIO && link -> out_samplerates -> nb_formats == 1)
cond	8:12	9:48	5	link -> type == AVMEDIA_TYPE_AUDIO && link -> out_samplerates -> nb_formats == 1
water	8:12	0:0	6	link
op	8:16	0:0	6	->
water	8:18	0:0	6	type
op	8:23	0:0	6	==
water	8:26	0:0	6	AVMEDIA_TYPE_AUDIO
op	8:45	0:0	6	&&
water	9:12	0:0	6	link
op	9:16	0:0	6	->
water	9:18	0:0	6	out_samplerates
op	9:33	0:0	6	->
water	9:35	0:0	6	nb_formats
op	9:45	0:0	6	==
water	9:48	0:0	6	1
stmts	10:12	10:17	5	
break	10:12	10:17	6	
water	11:4	0:0	4	}
if	12:4	13:14	2	(i == filter -> nb_inputs)
cond	12:8	12:21	3	i == filter -> nb_inputs
water	12:8	0:0	4	i
op	12:10	0:0	4	==
water	12:13	0:0	4	filter
op	12:19	0:0	4	->
water	12:21	0:0	4	nb_inputs
stmts	13:8	13:14	3	
return	13:8	13:14	4	
water	14:4	0:0	2	sample_rate
op	14:16	0:0	2	=
water	14:18	0:0	2	link
op	14:22	0:0	2	->
water	14:24	0:0	2	out_samplerates
op	14:39	0:0	2	->
water	14:41	0:0	2	formats
op	14:48	0:0	2	[
water	14:49	0:0	2	0
op	14:50	0:0	2	]
water	14:51	0:0	2	;
for	15:4	30:4	2	(i = 0 ;i < filter -> nb_outputs;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:28	3	i < filter -> nb_outputs
water	15:16	0:0	4	i
op	15:18	0:0	4	<
water	15:20	0:0	4	filter
op	15:26	0:0	4	->
water	15:28	0:0	4	nb_outputs
forexpr	15:40	15:41	3	i ++
water	15:40	0:0	4	i
op	15:41	0:0	4	++
stmts	15:45	30:4	3	
water	15:45	0:0	4	{
decl	16:8	16:50	4	AVFilterLink	*outlink
op	16:30	0:0	4	=
water	16:32	0:0	4	filter
op	16:38	0:0	4	->
water	16:40	0:0	4	outputs
op	16:47	0:0	4	[
water	16:48	0:0	4	i
op	16:49	0:0	4	]
decl	17:8	17:41	4	int	best_idx
water	17:20	0:0	4	,
decl	17:8	17:41	4	int	best_diff
op	17:32	0:0	4	=
water	17:34	0:0	4	INT_MAX
if	18:8	20:20	4	(outlink -> type != AVMEDIA_TYPE_AUDIO || outlink -> in_samplerates -> nb_formats < 2)
cond	18:12	19:50	5	outlink -> type != AVMEDIA_TYPE_AUDIO || outlink -> in_samplerates -> nb_formats < 2
water	18:12	0:0	6	outlink
op	18:19	0:0	6	->
water	18:21	0:0	6	type
op	18:26	0:0	6	!=
water	18:29	0:0	6	AVMEDIA_TYPE_AUDIO
op	18:48	0:0	6	||
water	19:12	0:0	6	outlink
op	19:19	0:0	6	->
water	19:21	0:0	6	in_samplerates
op	19:35	0:0	6	->
water	19:37	0:0	6	nb_formats
op	19:48	0:0	6	<
water	19:50	0:0	6	2
stmts	20:12	20:20	5	
continue	20:12	20:20	6	
for	21:8	27:8	4	(j = 0 ;j < outlink -> in_samplerates -> nb_formats;j ++)
forinit	21:13	21:18	5	j = 0 ;
water	21:13	0:0	6	j
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:49	5	j < outlink -> in_samplerates -> nb_formats
water	21:20	0:0	6	j
op	21:22	0:0	6	<
water	21:24	0:0	6	outlink
op	21:31	0:0	6	->
water	21:33	0:0	6	in_samplerates
op	21:47	0:0	6	->
water	21:49	0:0	6	nb_formats
forexpr	21:61	21:62	5	j ++
water	21:61	0:0	6	j
op	21:62	0:0	6	++
stmts	21:66	27:8	5	
water	21:66	0:0	6	{
decl	22:12	22:77	6	int	diff
op	22:21	0:0	6	=
call	22:23	22:76	7	abs
arg	22:27	22:76	8	sample_rate-outlink->in_samplerates->formats[j]
water	22:27	0:0	9	sample_rate
op	22:39	0:0	9	-
water	22:41	0:0	9	outlink
op	22:48	0:0	9	->
water	22:50	0:0	9	in_samplerates
op	22:64	0:0	9	->
water	22:66	0:0	9	formats
op	22:73	0:0	9	[
water	22:74	0:0	9	j
op	22:75	0:0	9	]
if	23:12	26:12	6	(diff < best_diff)
cond	23:16	23:23	7	diff < best_diff
water	23:16	0:0	8	diff
op	23:21	0:0	8	<
water	23:23	0:0	8	best_diff
stmts	23:34	26:12	7	
water	23:34	0:0	8	{
water	24:16	0:0	8	best_diff
op	24:26	0:0	8	=
water	24:28	0:0	8	diff
water	24:32	0:0	8	;
water	25:16	0:0	8	best_idx
op	25:26	0:0	8	=
water	25:28	0:0	8	j
water	25:29	0:0	8	;
water	26:12	0:0	8	}
water	27:8	0:0	6	}
call	28:8	29:57	4	FFSWAP
arg	28:15	28:18	5	int
water	28:15	0:0	6	int
arg	28:20	28:55	5	outlink->in_samplerates->formats[0]
water	28:20	0:0	6	outlink
op	28:27	0:0	6	->
water	28:29	0:0	6	in_samplerates
op	28:43	0:0	6	->
water	28:45	0:0	6	formats
op	28:52	0:0	6	[
water	28:53	0:0	6	0
op	28:54	0:0	6	]
arg	29:15	29:57	5	outlink->in_samplerates->formats[best_idx]
water	29:15	0:0	6	outlink
op	29:22	0:0	6	->
water	29:24	0:0	6	in_samplerates
op	29:38	0:0	6	->
water	29:40	0:0	6	formats
op	29:47	0:0	6	[
water	29:48	0:0	6	best_idx
op	29:56	0:0	6	]
water	29:58	0:0	4	;
water	30:4	0:0	4	}

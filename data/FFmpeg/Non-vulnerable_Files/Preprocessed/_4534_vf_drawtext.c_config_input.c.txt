func	1:0	32:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	31:12	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:34	2	DrawTextContext	*s
op	4:23	0:0	2	=
water	4:25	0:0	2	ctx
op	4:28	0:0	2	->
water	4:30	0:0	2	priv
decl	5:4	5:11	2	int	ret
call	6:4	6:42	2	ff_draw_init
arg	6:17	6:23	3	&s->dc
op	6:17	0:0	4	&
water	6:18	0:0	4	s
op	6:19	0:0	4	->
water	6:21	0:0	4	dc
arg	6:25	6:39	3	inlink->format
water	6:25	0:0	4	inlink
op	6:31	0:0	4	->
water	6:33	0:0	4	format
arg	6:41	6:42	3	0
water	6:41	0:0	4	0
water	6:43	0:0	2	;
call	7:4	7:60	2	ff_draw_color
arg	7:18	7:24	3	&s->dc
op	7:18	0:0	4	&
water	7:19	0:0	4	s
op	7:20	0:0	4	->
water	7:22	0:0	4	dc
arg	7:26	7:39	3	&s->fontcolor
op	7:26	0:0	4	&
water	7:27	0:0	4	s
op	7:28	0:0	4	->
water	7:30	0:0	4	fontcolor
arg	7:43	7:60	3	s->fontcolor.rgba
water	7:43	0:0	4	s
op	7:44	0:0	4	->
water	7:46	0:0	4	fontcolor
op	7:55	0:0	4	.
water	7:56	0:0	4	rgba
water	7:61	0:0	2	;
call	8:4	8:62	2	ff_draw_color
arg	8:18	8:24	3	&s->dc
op	8:18	0:0	4	&
water	8:19	0:0	4	s
op	8:20	0:0	4	->
water	8:22	0:0	4	dc
arg	8:26	8:41	3	&s->shadowcolor
op	8:26	0:0	4	&
water	8:27	0:0	4	s
op	8:28	0:0	4	->
water	8:30	0:0	4	shadowcolor
arg	8:43	8:62	3	s->shadowcolor.rgba
water	8:43	0:0	4	s
op	8:44	0:0	4	->
water	8:46	0:0	4	shadowcolor
op	8:57	0:0	4	.
water	8:58	0:0	4	rgba
water	8:63	0:0	2	;
call	9:4	9:62	2	ff_draw_color
arg	9:18	9:24	3	&s->dc
op	9:18	0:0	4	&
water	9:19	0:0	4	s
op	9:20	0:0	4	->
water	9:22	0:0	4	dc
arg	9:26	9:41	3	&s->bordercolor
op	9:26	0:0	4	&
water	9:27	0:0	4	s
op	9:28	0:0	4	->
water	9:30	0:0	4	bordercolor
arg	9:43	9:62	3	s->bordercolor.rgba
water	9:43	0:0	4	s
op	9:44	0:0	4	->
water	9:46	0:0	4	bordercolor
op	9:57	0:0	4	.
water	9:58	0:0	4	rgba
water	9:63	0:0	2	;
call	10:4	10:59	2	ff_draw_color
arg	10:18	10:24	3	&s->dc
op	10:18	0:0	4	&
water	10:19	0:0	4	s
op	10:20	0:0	4	->
water	10:22	0:0	4	dc
arg	10:26	10:38	3	&s->boxcolor
op	10:26	0:0	4	&
water	10:27	0:0	4	s
op	10:28	0:0	4	->
water	10:30	0:0	4	boxcolor
arg	10:43	10:59	3	s->boxcolor.rgba
water	10:43	0:0	4	s
op	10:44	0:0	4	->
water	10:46	0:0	4	boxcolor
op	10:54	0:0	4	.
water	10:55	0:0	4	rgba
water	10:60	0:0	2	;
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	var_values
op	11:17	0:0	2	[
water	11:18	0:0	2	VAR_w
op	11:23	0:0	2	]
op	11:29	0:0	2	=
water	11:31	0:0	2	s
op	11:32	0:0	2	->
water	11:34	0:0	2	var_values
op	11:44	0:0	2	[
water	11:45	0:0	2	VAR_W
op	11:50	0:0	2	]
op	11:56	0:0	2	=
water	11:58	0:0	2	s
op	11:59	0:0	2	->
water	11:61	0:0	2	var_values
op	11:71	0:0	2	[
water	11:72	0:0	2	VAR_MAIN_W
op	11:82	0:0	2	]
op	11:84	0:0	2	=
water	11:86	0:0	2	inlink
op	11:92	0:0	2	->
water	11:94	0:0	2	w
water	11:95	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	var_values
op	12:17	0:0	2	[
water	12:18	0:0	2	VAR_h
op	12:23	0:0	2	]
op	12:29	0:0	2	=
water	12:31	0:0	2	s
op	12:32	0:0	2	->
water	12:34	0:0	2	var_values
op	12:44	0:0	2	[
water	12:45	0:0	2	VAR_H
op	12:50	0:0	2	]
op	12:56	0:0	2	=
water	12:58	0:0	2	s
op	12:59	0:0	2	->
water	12:61	0:0	2	var_values
op	12:71	0:0	2	[
water	12:72	0:0	2	VAR_MAIN_H
op	12:82	0:0	2	]
op	12:84	0:0	2	=
water	12:86	0:0	2	inlink
op	12:92	0:0	2	->
water	12:94	0:0	2	h
water	12:95	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	var_values
op	13:17	0:0	2	[
water	13:18	0:0	2	VAR_SAR
op	13:25	0:0	2	]
op	13:29	0:0	2	=
water	13:31	0:0	2	inlink
op	13:37	0:0	2	->
water	13:39	0:0	2	sample_aspect_ratio
op	13:58	0:0	2	.
water	13:59	0:0	2	num
water	13:63	0:0	2	?
call	13:65	13:99	2	av_q2d
arg	13:72	13:99	3	inlink->sample_aspect_ratio
water	13:72	0:0	4	inlink
op	13:78	0:0	4	->
water	13:80	0:0	4	sample_aspect_ratio
water	13:101	0:0	2	:
water	13:103	0:0	2	1
water	13:104	0:0	2	;
water	14:4	0:0	2	s
op	14:5	0:0	2	->
water	14:7	0:0	2	var_values
op	14:17	0:0	2	[
water	14:18	0:0	2	VAR_DAR
op	14:25	0:0	2	]
op	14:29	0:0	2	=
water	14:31	0:0	2	(
water	14:32	0:0	2	double
water	14:38	0:0	2	)
water	14:39	0:0	2	inlink
op	14:45	0:0	2	->
water	14:47	0:0	2	w
op	14:49	0:0	2	/
water	14:51	0:0	2	inlink
op	14:57	0:0	2	->
water	14:59	0:0	2	h
op	14:61	0:0	2	*
water	14:63	0:0	2	s
op	14:64	0:0	2	->
water	14:66	0:0	2	var_values
op	14:76	0:0	2	[
water	14:77	0:0	2	VAR_SAR
op	14:84	0:0	2	]
water	14:85	0:0	2	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	var_values
op	15:17	0:0	2	[
water	15:18	0:0	2	VAR_HSUB
op	15:26	0:0	2	]
op	15:29	0:0	2	=
water	15:31	0:0	2	1
op	15:33	0:0	2	<<
water	15:36	0:0	2	s
op	15:37	0:0	2	->
water	15:39	0:0	2	dc
op	15:41	0:0	2	.
water	15:42	0:0	2	hsub_max
water	15:50	0:0	2	;
water	16:4	0:0	2	s
op	16:5	0:0	2	->
water	16:7	0:0	2	var_values
op	16:17	0:0	2	[
water	16:18	0:0	2	VAR_VSUB
op	16:26	0:0	2	]
op	16:29	0:0	2	=
water	16:31	0:0	2	1
op	16:33	0:0	2	<<
water	16:36	0:0	2	s
op	16:37	0:0	2	->
water	16:39	0:0	2	dc
op	16:41	0:0	2	.
water	16:42	0:0	2	vsub_max
water	16:50	0:0	2	;
water	17:4	0:0	2	s
op	17:5	0:0	2	->
water	17:7	0:0	2	var_values
op	17:17	0:0	2	[
water	17:18	0:0	2	VAR_X
op	17:23	0:0	2	]
op	17:29	0:0	2	=
water	17:31	0:0	2	NAN
water	17:34	0:0	2	;
water	18:4	0:0	2	s
op	18:5	0:0	2	->
water	18:7	0:0	2	var_values
op	18:17	0:0	2	[
water	18:18	0:0	2	VAR_Y
op	18:23	0:0	2	]
op	18:29	0:0	2	=
water	18:31	0:0	2	NAN
water	18:34	0:0	2	;
water	19:4	0:0	2	s
op	19:5	0:0	2	->
water	19:7	0:0	2	var_values
op	19:17	0:0	2	[
water	19:18	0:0	2	VAR_T
op	19:23	0:0	2	]
op	19:29	0:0	2	=
water	19:31	0:0	2	NAN
water	19:34	0:0	2	;
call	20:4	20:46	2	av_lfg_init
arg	20:16	20:24	3	&s->prng
op	20:16	0:0	4	&
water	20:17	0:0	4	s
op	20:18	0:0	4	->
water	20:20	0:0	4	prng
arg	20:26	20:46	3	av_get_random_seed()
call	20:26	20:45	4	av_get_random_seed
water	20:47	0:0	2	;
call	21:4	21:27	2	av_expr_free
arg	21:17	21:27	3	s->x_pexpr
water	21:17	0:0	4	s
op	21:18	0:0	4	->
water	21:20	0:0	4	x_pexpr
water	21:28	0:0	2	;
call	22:4	22:27	2	av_expr_free
arg	22:17	22:27	3	s->y_pexpr
water	22:17	0:0	4	s
op	22:18	0:0	4	->
water	22:20	0:0	4	y_pexpr
water	22:28	0:0	2	;
water	23:4	0:0	2	s
op	23:5	0:0	2	->
water	23:7	0:0	2	x_pexpr
op	23:15	0:0	2	=
water	23:17	0:0	2	s
op	23:18	0:0	2	->
water	23:20	0:0	2	y_pexpr
op	23:28	0:0	2	=
water	23:30	0:0	2	NULL
water	23:34	0:0	2	;
if	24:4	30:30	2	(( ret =av_expr_parse (& s -> x_pexpr ,s -> x_expr ,var_names ,NULL ,NULL ,fun2_names ,fun2 ,0 ,ctx ) ) < 0 || ( ret =av_expr_parse (& s -> y_pexpr ,s -> y_expr ,var_names ,NULL ,NULL ,fun2_names ,fun2 ,0 ,ctx ) ) < 0 || ( ret =av_expr_parse (& s -> a_pexpr ,s -> a_expr ,var_names ,NULL ,NULL ,fun2_names ,fun2 ,0 ,ctx ) ) < 0)
cond	24:8	29:70	3	( ret =av_expr_parse (& s -> x_pexpr ,s -> x_expr ,var_names ,NULL ,NULL ,fun2_names ,fun2 ,0 ,ctx ) ) < 0 || ( ret =av_expr_parse (& s -> y_pexpr ,s -> y_expr ,var_names ,NULL ,NULL ,fun2_names ,fun2 ,0 ,ctx ) ) < 0 || ( ret =av_expr_parse (& s -> a_pexpr ,s -> a_expr ,var_names ,NULL ,NULL ,fun2_names ,fun2 ,0 ,ctx ) ) < 0
water	24:8	0:0	4	(
water	24:9	0:0	4	ret
op	24:13	0:0	4	=
call	24:15	25:65	4	av_expr_parse
arg	24:29	24:40	5	&s->x_pexpr
op	24:29	0:0	6	&
water	24:30	0:0	6	s
op	24:31	0:0	6	->
water	24:33	0:0	6	x_pexpr
arg	24:42	24:51	5	s->x_expr
water	24:42	0:0	6	s
op	24:43	0:0	6	->
water	24:45	0:0	6	x_expr
arg	24:53	24:62	5	var_names
water	24:53	0:0	6	var_names
arg	25:29	25:33	5	NULL
water	25:29	0:0	6	NULL
arg	25:35	25:39	5	NULL
water	25:35	0:0	6	NULL
arg	25:41	25:51	5	fun2_names
water	25:41	0:0	6	fun2_names
arg	25:53	25:57	5	fun2
water	25:53	0:0	6	fun2
arg	25:59	25:60	5	0
water	25:59	0:0	6	0
arg	25:62	25:65	5	ctx
water	25:62	0:0	6	ctx
water	25:66	0:0	4	)
op	25:68	0:0	4	<
water	25:70	0:0	4	0
op	25:72	0:0	4	||
water	26:8	0:0	4	(
water	26:9	0:0	4	ret
op	26:13	0:0	4	=
call	26:15	27:65	4	av_expr_parse
arg	26:29	26:40	5	&s->y_pexpr
op	26:29	0:0	6	&
water	26:30	0:0	6	s
op	26:31	0:0	6	->
water	26:33	0:0	6	y_pexpr
arg	26:42	26:51	5	s->y_expr
water	26:42	0:0	6	s
op	26:43	0:0	6	->
water	26:45	0:0	6	y_expr
arg	26:53	26:62	5	var_names
water	26:53	0:0	6	var_names
arg	27:29	27:33	5	NULL
water	27:29	0:0	6	NULL
arg	27:35	27:39	5	NULL
water	27:35	0:0	6	NULL
arg	27:41	27:51	5	fun2_names
water	27:41	0:0	6	fun2_names
arg	27:53	27:57	5	fun2
water	27:53	0:0	6	fun2
arg	27:59	27:60	5	0
water	27:59	0:0	6	0
arg	27:62	27:65	5	ctx
water	27:62	0:0	6	ctx
water	27:66	0:0	4	)
op	27:68	0:0	4	<
water	27:70	0:0	4	0
op	27:72	0:0	4	||
water	28:8	0:0	4	(
water	28:9	0:0	4	ret
op	28:13	0:0	4	=
call	28:15	29:65	4	av_expr_parse
arg	28:29	28:40	5	&s->a_pexpr
op	28:29	0:0	6	&
water	28:30	0:0	6	s
op	28:31	0:0	6	->
water	28:33	0:0	6	a_pexpr
arg	28:42	28:51	5	s->a_expr
water	28:42	0:0	6	s
op	28:43	0:0	6	->
water	28:45	0:0	6	a_expr
arg	28:53	28:62	5	var_names
water	28:53	0:0	6	var_names
arg	29:29	29:33	5	NULL
water	29:29	0:0	6	NULL
arg	29:35	29:39	5	NULL
water	29:35	0:0	6	NULL
arg	29:41	29:51	5	fun2_names
water	29:41	0:0	6	fun2_names
arg	29:53	29:57	5	fun2
water	29:53	0:0	6	fun2
arg	29:59	29:60	5	0
water	29:59	0:0	6	0
arg	29:62	29:65	5	ctx
water	29:62	0:0	6	ctx
water	29:66	0:0	4	)
op	29:68	0:0	4	<
water	29:70	0:0	4	0
stmts	30:8	30:30	3	
return	30:8	30:30	4	AVERROR(EINVAL)
call	30:15	30:29	5	AVERROR
arg	30:23	30:29	6	EINVAL
water	30:23	0:0	7	EINVAL
return	31:4	31:12	2	0
water	31:11	0:0	3	0

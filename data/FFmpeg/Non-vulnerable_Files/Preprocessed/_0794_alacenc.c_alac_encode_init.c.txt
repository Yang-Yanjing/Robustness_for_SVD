func	1:15	89:0	0	int	alac_encode_init
params	1:35	0:0	1	
param	1:36	1:57	2	AVCodecContext *	avctx
stmnts	0:0	88:14	1	
decl	3:4	3:43	2	AlacEncodeContext	*s
op	3:25	0:0	2	=
water	3:27	0:0	2	avctx
op	3:32	0:0	2	->
water	3:34	0:0	2	priv_data
decl	4:4	4:11	2	int	ret
decl	5:4	5:27	2	uint8_t	*alac_extradata
water	6:4	0:0	2	avctx
op	6:9	0:0	2	->
water	6:11	0:0	2	frame_size
op	6:22	0:0	2	=
water	6:24	0:0	2	s
op	6:25	0:0	2	->
water	6:27	0:0	2	frame_size
op	6:38	0:0	2	=
water	6:40	0:0	2	DEFAULT_FRAME_SIZE
water	6:58	0:0	2	;
if	7:4	11:4	2	(avctx -> sample_fmt == AV_SAMPLE_FMT_S32P)
cond	7:8	7:29	3	avctx -> sample_fmt == AV_SAMPLE_FMT_S32P
water	7:8	0:0	4	avctx
op	7:13	0:0	4	->
water	7:15	0:0	4	sample_fmt
op	7:26	0:0	4	==
water	7:29	0:0	4	AV_SAMPLE_FMT_S32P
stmts	7:49	11:4	3	
water	7:49	0:0	4	{
if	8:8	9:77	4	(avctx -> bits_per_raw_sample != 24)
cond	8:12	8:42	5	avctx -> bits_per_raw_sample != 24
water	8:12	0:0	6	avctx
op	8:17	0:0	6	->
water	8:19	0:0	6	bits_per_raw_sample
op	8:39	0:0	6	!=
water	8:42	0:0	6	24
stmts	9:12	9:77	5	
call	9:12	9:76	6	av_log
arg	9:19	9:24	7	avctx
water	9:19	0:0	8	avctx
arg	9:26	9:40	7	AV_LOG_WARNING
water	9:26	0:0	8	AV_LOG_WARNING
arg	9:42	9:76	7	"encoding as 24 bits-per-sample\n"
water	9:42	0:0	8	"encoding as 24 bits-per-sample\n"
water	9:77	0:0	6	;
water	10:8	0:0	4	avctx
op	10:13	0:0	4	->
water	10:15	0:0	4	bits_per_raw_sample
op	10:35	0:0	4	=
water	10:37	0:0	4	24
water	10:39	0:0	4	;
water	11:4	0:0	4	}
else	11:6	14:4	2
stmts	11:11	14:4	3	
water	11:11	0:0	4	{
water	12:8	0:0	4	avctx
op	12:13	0:0	4	->
water	12:15	0:0	4	bits_per_raw_sample
op	12:35	0:0	4	=
water	12:37	0:0	4	16
water	12:39	0:0	4	;
water	13:8	0:0	4	s
op	13:9	0:0	4	->
water	13:11	0:0	4	extra_bits
op	13:35	0:0	4	=
water	13:37	0:0	4	0
water	13:38	0:0	4	;
water	14:4	0:0	4	}
if	16:4	17:32	2	(avctx -> compression_level == FF_COMPRESSION_DEFAULT)
cond	16:8	16:36	3	avctx -> compression_level == FF_COMPRESSION_DEFAULT
water	16:8	0:0	4	avctx
op	16:13	0:0	4	->
water	16:15	0:0	4	compression_level
op	16:33	0:0	4	==
water	16:36	0:0	4	FF_COMPRESSION_DEFAULT
stmts	17:8	17:32	3	
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	compression_level
op	17:29	0:0	4	=
water	17:31	0:0	4	2
water	17:32	0:0	4	;
else	18:4	19:70	2
stmts	19:8	19:70	3	
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	compression_level
op	19:29	0:0	4	=
call	19:31	19:69	4	av_clip
arg	19:39	19:63	5	avctx->compression_level
water	19:39	0:0	6	avctx
op	19:44	0:0	6	->
water	19:46	0:0	6	compression_level
arg	19:65	19:66	5	0
water	19:65	0:0	6	0
arg	19:68	19:69	5	2
water	19:68	0:0	6	2
water	19:70	0:0	4	;
water	21:4	0:0	2	s
op	21:5	0:0	2	->
water	21:7	0:0	2	rc
op	21:9	0:0	2	.
water	21:10	0:0	2	history_mult
op	21:26	0:0	2	=
water	21:28	0:0	2	40
water	21:30	0:0	2	;
water	22:4	0:0	2	s
op	22:5	0:0	2	->
water	22:7	0:0	2	rc
op	22:9	0:0	2	.
water	22:10	0:0	2	initial_history
op	22:26	0:0	2	=
water	22:28	0:0	2	10
water	22:30	0:0	2	;
water	23:4	0:0	2	s
op	23:5	0:0	2	->
water	23:7	0:0	2	rc
op	23:9	0:0	2	.
water	23:10	0:0	2	k_modifier
op	23:26	0:0	2	=
water	23:28	0:0	2	14
water	23:30	0:0	2	;
water	24:4	0:0	2	s
op	24:5	0:0	2	->
water	24:7	0:0	2	rc
op	24:9	0:0	2	.
water	24:10	0:0	2	rice_modifier
op	24:26	0:0	2	=
water	24:28	0:0	2	4
water	24:29	0:0	2	;
water	25:4	0:0	2	s
op	25:5	0:0	2	->
water	25:7	0:0	2	max_coded_frame_size
op	25:28	0:0	2	=
call	25:30	27:75	2	get_max_frame_size
arg	25:49	25:66	3	avctx->frame_size
water	25:49	0:0	4	avctx
op	25:54	0:0	4	->
water	25:56	0:0	4	frame_size
arg	26:49	26:64	3	avctx->channels
water	26:49	0:0	4	avctx
op	26:54	0:0	4	->
water	26:56	0:0	4	channels
arg	27:49	27:75	3	avctx->bits_per_raw_sample
water	27:49	0:0	4	avctx
op	27:54	0:0	4	->
water	27:56	0:0	4	bits_per_raw_sample
water	27:76	0:0	2	;
water	28:4	0:0	2	avctx
op	28:9	0:0	2	->
water	28:11	0:0	2	extradata
op	28:21	0:0	2	=
call	28:23	28:84	2	av_mallocz
arg	28:34	28:84	3	ALAC_EXTRADATA_SIZE+AV_INPUT_BUFFER_PADDING_SIZE
water	28:34	0:0	4	ALAC_EXTRADATA_SIZE
op	28:54	0:0	4	+
water	28:56	0:0	4	AV_INPUT_BUFFER_PADDING_SIZE
water	28:85	0:0	2	;
if	29:4	32:4	2	(! avctx -> extradata)
cond	29:8	29:16	3	! avctx -> extradata
op	29:8	0:0	4	!
water	29:9	0:0	4	avctx
op	29:14	0:0	4	->
water	29:16	0:0	4	extradata
stmts	29:27	32:4	3	
water	29:27	0:0	4	{
water	30:8	0:0	4	ret
op	30:12	0:0	4	=
call	30:14	30:28	4	AVERROR
arg	30:22	30:28	5	ENOMEM
water	30:22	0:0	6	ENOMEM
water	30:29	0:0	4	;
goto	31:8	31:18	4	error
water	31:13	0:0	5	error
water	32:4	0:0	4	}
water	33:4	0:0	2	avctx
op	33:9	0:0	2	->
water	33:11	0:0	2	extradata_size
op	33:26	0:0	2	=
water	33:28	0:0	2	ALAC_EXTRADATA_SIZE
water	33:47	0:0	2	;
water	34:4	0:0	2	alac_extradata
op	34:19	0:0	2	=
water	34:21	0:0	2	avctx
op	34:26	0:0	2	->
water	34:28	0:0	2	extradata
water	34:37	0:0	2	;
call	35:4	35:50	2	AV_WB32
arg	35:12	35:26	3	alac_extradata
water	35:12	0:0	4	alac_extradata
arg	35:31	35:50	3	ALAC_EXTRADATA_SIZE
water	35:31	0:0	4	ALAC_EXTRADATA_SIZE
water	35:51	0:0	2	;
call	36:4	36:55	2	AV_WB32
arg	36:12	36:28	3	alac_extradata+4
water	36:12	0:0	4	alac_extradata
op	36:26	0:0	4	+
water	36:27	0:0	4	4
arg	36:31	36:55	3	MKBETAG('a','l','a','c')
call	36:31	36:54	4	MKBETAG
arg	36:39	36:42	5	'a'
water	36:39	0:0	6	'a'
arg	36:43	36:46	5	'l'
water	36:43	0:0	6	'l'
arg	36:47	36:50	5	'a'
water	36:47	0:0	6	'a'
arg	36:51	36:54	5	'c'
water	36:51	0:0	6	'c'
water	36:56	0:0	2	;
call	37:4	37:48	2	AV_WB32
arg	37:12	37:29	3	alac_extradata+12
water	37:12	0:0	4	alac_extradata
op	37:26	0:0	4	+
water	37:27	0:0	4	12
arg	37:31	37:48	3	avctx->frame_size
water	37:31	0:0	4	avctx
op	37:36	0:0	4	->
water	37:38	0:0	4	frame_size
water	37:49	0:0	2	;
call	38:4	38:57	2	AV_WB8
arg	38:12	38:29	3	alac_extradata+17
water	38:12	0:0	4	alac_extradata
op	38:26	0:0	4	+
water	38:27	0:0	4	17
arg	38:31	38:57	3	avctx->bits_per_raw_sample
water	38:31	0:0	4	avctx
op	38:36	0:0	4	->
water	38:38	0:0	4	bits_per_raw_sample
water	38:58	0:0	2	;
call	39:4	39:46	2	AV_WB8
arg	39:12	39:29	3	alac_extradata+21
water	39:12	0:0	4	alac_extradata
op	39:26	0:0	4	+
water	39:27	0:0	4	21
arg	39:31	39:46	3	avctx->channels
water	39:31	0:0	4	avctx
op	39:36	0:0	4	->
water	39:38	0:0	4	channels
water	39:47	0:0	2	;
call	40:4	40:54	2	AV_WB32
arg	40:12	40:29	3	alac_extradata+24
water	40:12	0:0	4	alac_extradata
op	40:26	0:0	4	+
water	40:27	0:0	4	24
arg	40:31	40:54	3	s->max_coded_frame_size
water	40:31	0:0	4	s
op	40:32	0:0	4	->
water	40:34	0:0	4	max_coded_frame_size
water	40:55	0:0	2	;
call	41:4	42:77	2	AV_WB32
arg	41:12	41:29	3	alac_extradata+28
water	41:12	0:0	4	alac_extradata
op	41:26	0:0	4	+
water	41:27	0:0	4	28
arg	42:12	42:77	3	avctx->sample_rate*avctx->channels*avctx->bits_per_raw_sample
water	42:12	0:0	4	avctx
op	42:17	0:0	4	->
water	42:19	0:0	4	sample_rate
op	42:31	0:0	4	*
water	42:33	0:0	4	avctx
op	42:38	0:0	4	->
water	42:40	0:0	4	channels
op	42:49	0:0	4	*
water	42:51	0:0	4	avctx
op	42:56	0:0	4	->
water	42:58	0:0	4	bits_per_raw_sample
water	42:78	0:0	2	;
call	43:4	43:49	2	AV_WB32
arg	43:12	43:29	3	alac_extradata+32
water	43:12	0:0	4	alac_extradata
op	43:26	0:0	4	+
water	43:27	0:0	4	32
arg	43:31	43:49	3	avctx->sample_rate
water	43:31	0:0	4	avctx
op	43:36	0:0	4	->
water	43:38	0:0	4	sample_rate
water	43:50	0:0	2	;
if	45:4	49:4	2	(s -> compression_level > 0)
cond	45:8	45:31	3	s -> compression_level > 0
water	45:8	0:0	4	s
op	45:9	0:0	4	->
water	45:11	0:0	4	compression_level
op	45:29	0:0	4	>
water	45:31	0:0	4	0
stmts	45:34	49:4	3	
water	45:34	0:0	4	{
call	46:8	46:52	4	AV_WB8
arg	46:15	46:32	5	alac_extradata+18
water	46:15	0:0	6	alac_extradata
op	46:29	0:0	6	+
water	46:30	0:0	6	18
arg	46:34	46:52	5	s->rc.history_mult
water	46:34	0:0	6	s
op	46:35	0:0	6	->
water	46:37	0:0	6	rc
op	46:39	0:0	6	.
water	46:40	0:0	6	history_mult
water	46:53	0:0	4	;
call	47:8	47:55	4	AV_WB8
arg	47:15	47:32	5	alac_extradata+19
water	47:15	0:0	6	alac_extradata
op	47:29	0:0	6	+
water	47:30	0:0	6	19
arg	47:34	47:55	5	s->rc.initial_history
water	47:34	0:0	6	s
op	47:35	0:0	6	->
water	47:37	0:0	6	rc
op	47:39	0:0	6	.
water	47:40	0:0	6	initial_history
water	47:56	0:0	4	;
call	48:8	48:50	4	AV_WB8
arg	48:15	48:32	5	alac_extradata+20
water	48:15	0:0	6	alac_extradata
op	48:29	0:0	6	+
water	48:30	0:0	6	20
arg	48:34	48:50	5	s->rc.k_modifier
water	48:34	0:0	6	s
op	48:35	0:0	6	->
water	48:37	0:0	6	rc
op	48:39	0:0	6	.
water	48:40	0:0	6	k_modifier
water	48:51	0:0	4	;
water	49:4	0:0	4	}
water	50:4	0:0	2	s
op	50:5	0:0	2	->
water	50:7	0:0	2	min_prediction_order
op	50:28	0:0	2	=
water	50:30	0:0	2	DEFAULT_MIN_PRED_ORDER
water	50:52	0:0	2	;
if	51:4	60:4	2	(avctx -> min_prediction_order >= 0)
cond	51:8	51:39	3	avctx -> min_prediction_order >= 0
water	51:8	0:0	4	avctx
op	51:13	0:0	4	->
water	51:15	0:0	4	min_prediction_order
op	51:36	0:0	4	>=
water	51:39	0:0	4	0
stmts	51:42	60:4	3	
water	51:42	0:0	4	{
if	52:8	58:8	4	(avctx -> min_prediction_order < MIN_LPC_ORDER || avctx -> min_prediction_order > ALAC_MAX_LPC_ORDER)
cond	52:12	53:41	5	avctx -> min_prediction_order < MIN_LPC_ORDER || avctx -> min_prediction_order > ALAC_MAX_LPC_ORDER
water	52:12	0:0	6	avctx
op	52:17	0:0	6	->
water	52:19	0:0	6	min_prediction_order
op	52:40	0:0	6	<
water	52:42	0:0	6	MIN_LPC_ORDER
op	52:56	0:0	6	||
water	53:11	0:0	6	avctx
op	53:16	0:0	6	->
water	53:18	0:0	6	min_prediction_order
op	53:39	0:0	6	>
water	53:41	0:0	6	ALAC_MAX_LPC_ORDER
stmts	53:61	58:8	5	
water	53:61	0:0	6	{
call	54:12	55:46	6	av_log
arg	54:19	54:24	7	avctx
water	54:19	0:0	8	avctx
arg	54:26	54:38	7	AV_LOG_ERROR
water	54:26	0:0	8	AV_LOG_ERROR
arg	54:40	54:76	7	"invalid min prediction order: %d\n"
water	54:40	0:0	8	"invalid min prediction order: %d\n"
arg	55:19	55:46	7	avctx->min_prediction_order
water	55:19	0:0	8	avctx
op	55:24	0:0	8	->
water	55:26	0:0	8	min_prediction_order
water	55:47	0:0	6	;
water	56:12	0:0	6	ret
op	56:16	0:0	6	=
call	56:18	56:32	6	AVERROR
arg	56:26	56:32	7	EINVAL
water	56:26	0:0	8	EINVAL
water	56:33	0:0	6	;
goto	57:12	57:22	6	error
water	57:17	0:0	7	error
water	58:8	0:0	6	}
water	59:8	0:0	4	s
op	59:9	0:0	4	->
water	59:11	0:0	4	min_prediction_order
op	59:32	0:0	4	=
water	59:34	0:0	4	avctx
op	59:39	0:0	4	->
water	59:41	0:0	4	min_prediction_order
water	59:61	0:0	4	;
water	60:4	0:0	4	}
water	61:4	0:0	2	s
op	61:5	0:0	2	->
water	61:7	0:0	2	max_prediction_order
op	61:28	0:0	2	=
water	61:30	0:0	2	DEFAULT_MAX_PRED_ORDER
water	61:52	0:0	2	;
if	62:4	71:4	2	(avctx -> max_prediction_order >= 0)
cond	62:8	62:39	3	avctx -> max_prediction_order >= 0
water	62:8	0:0	4	avctx
op	62:13	0:0	4	->
water	62:15	0:0	4	max_prediction_order
op	62:36	0:0	4	>=
water	62:39	0:0	4	0
stmts	62:42	71:4	3	
water	62:42	0:0	4	{
if	63:8	69:8	4	(avctx -> max_prediction_order < MIN_LPC_ORDER || avctx -> max_prediction_order > ALAC_MAX_LPC_ORDER)
cond	63:12	64:42	5	avctx -> max_prediction_order < MIN_LPC_ORDER || avctx -> max_prediction_order > ALAC_MAX_LPC_ORDER
water	63:12	0:0	6	avctx
op	63:17	0:0	6	->
water	63:19	0:0	6	max_prediction_order
op	63:40	0:0	6	<
water	63:42	0:0	6	MIN_LPC_ORDER
op	63:56	0:0	6	||
water	64:12	0:0	6	avctx
op	64:17	0:0	6	->
water	64:19	0:0	6	max_prediction_order
op	64:40	0:0	6	>
water	64:42	0:0	6	ALAC_MAX_LPC_ORDER
stmts	64:62	69:8	5	
water	64:62	0:0	6	{
call	65:12	66:46	6	av_log
arg	65:19	65:24	7	avctx
water	65:19	0:0	8	avctx
arg	65:26	65:38	7	AV_LOG_ERROR
water	65:26	0:0	8	AV_LOG_ERROR
arg	65:40	65:76	7	"invalid max prediction order: %d\n"
water	65:40	0:0	8	"invalid max prediction order: %d\n"
arg	66:19	66:46	7	avctx->max_prediction_order
water	66:19	0:0	8	avctx
op	66:24	0:0	8	->
water	66:26	0:0	8	max_prediction_order
water	66:47	0:0	6	;
water	67:12	0:0	6	ret
op	67:16	0:0	6	=
call	67:18	67:32	6	AVERROR
arg	67:26	67:32	7	EINVAL
water	67:26	0:0	8	EINVAL
water	67:33	0:0	6	;
goto	68:12	68:22	6	error
water	68:17	0:0	7	error
water	69:8	0:0	6	}
water	70:8	0:0	4	s
op	70:9	0:0	4	->
water	70:11	0:0	4	max_prediction_order
op	70:32	0:0	4	=
water	70:34	0:0	4	avctx
op	70:39	0:0	4	->
water	70:41	0:0	4	max_prediction_order
water	70:61	0:0	4	;
water	71:4	0:0	4	}
if	72:4	78:4	2	(s -> max_prediction_order < s -> min_prediction_order)
cond	72:8	72:37	3	s -> max_prediction_order < s -> min_prediction_order
water	72:8	0:0	4	s
op	72:9	0:0	4	->
water	72:11	0:0	4	max_prediction_order
op	72:32	0:0	4	<
water	72:34	0:0	4	s
op	72:35	0:0	4	->
water	72:37	0:0	4	min_prediction_order
stmts	72:59	78:4	3	
water	72:59	0:0	4	{
call	73:8	75:63	4	av_log
arg	73:15	73:20	5	avctx
water	73:15	0:0	6	avctx
arg	73:22	73:34	5	AV_LOG_ERROR
water	73:22	0:0	6	AV_LOG_ERROR
arg	74:15	74:59	5	"invalid prediction orders: min=%d max=%d\n"
water	74:15	0:0	6	"invalid prediction orders: min=%d max=%d\n"
arg	75:15	75:38	5	s->min_prediction_order
water	75:15	0:0	6	s
op	75:16	0:0	6	->
water	75:18	0:0	6	min_prediction_order
arg	75:40	75:63	5	s->max_prediction_order
water	75:40	0:0	6	s
op	75:41	0:0	6	->
water	75:43	0:0	6	max_prediction_order
water	75:64	0:0	4	;
water	76:8	0:0	4	ret
op	76:12	0:0	4	=
call	76:14	76:28	4	AVERROR
arg	76:22	76:28	5	EINVAL
water	76:22	0:0	6	EINVAL
water	76:29	0:0	4	;
goto	77:8	77:18	4	error
water	77:13	0:0	5	error
water	78:4	0:0	4	}
water	79:4	0:0	2	s
op	79:5	0:0	2	->
water	79:7	0:0	2	avctx
op	79:13	0:0	2	=
water	79:15	0:0	2	avctx
water	79:20	0:0	2	;
if	80:4	84:4	2	(( ret =ff_lpc_init (& s -> lpc_ctx ,avctx -> frame_size ,s -> max_prediction_order ,FF_LPC_TYPE_LEVINSON ) ) < 0)
cond	80:8	82:52	3	( ret =ff_lpc_init (& s -> lpc_ctx ,avctx -> frame_size ,s -> max_prediction_order ,FF_LPC_TYPE_LEVINSON ) ) < 0
water	80:8	0:0	4	(
water	80:9	0:0	4	ret
op	80:13	0:0	4	=
call	80:15	82:47	4	ff_lpc_init
arg	80:27	80:38	5	&s->lpc_ctx
op	80:27	0:0	6	&
water	80:28	0:0	6	s
op	80:29	0:0	6	->
water	80:31	0:0	6	lpc_ctx
arg	80:40	80:57	5	avctx->frame_size
water	80:40	0:0	6	avctx
op	80:45	0:0	6	->
water	80:47	0:0	6	frame_size
arg	81:27	81:50	5	s->max_prediction_order
water	81:27	0:0	6	s
op	81:28	0:0	6	->
water	81:30	0:0	6	max_prediction_order
arg	82:27	82:47	5	FF_LPC_TYPE_LEVINSON
water	82:27	0:0	6	FF_LPC_TYPE_LEVINSON
water	82:48	0:0	4	)
op	82:50	0:0	4	<
water	82:52	0:0	4	0
stmts	82:55	84:4	3	
water	82:55	0:0	4	{
goto	83:8	83:18	4	error
water	83:13	0:0	5	error
water	84:4	0:0	4	}
return	85:4	85:12	2	0
water	85:11	0:0	3	0
label	86:0	86:5	2	error :
call	87:4	87:27	2	alac_encode_close
arg	87:22	87:27	3	avctx
water	87:22	0:0	4	avctx
water	87:28	0:0	2	;
return	88:4	88:14	2	ret
water	88:11	0:0	3	ret

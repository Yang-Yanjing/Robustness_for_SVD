func	1:0	49:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	48:12	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:28	2	StabData	*sd
op	4:17	0:0	2	=
water	4:19	0:0	2	ctx
op	4:22	0:0	2	->
water	4:24	0:0	2	priv
decl	5:4	5:34	2	VSMotionDetect	*md
op	5:23	0:0	2	=
op	5:25	0:0	2	&
water	5:26	0:0	2	(
water	5:27	0:0	2	sd
op	5:29	0:0	2	->
water	5:31	0:0	2	md
water	5:33	0:0	2	)
decl	6:4	6:18	2	VSFrameInfo	fi
decl	7:4	7:72	2	const AVPixFmtDescriptor	*desc
op	7:35	0:0	2	=
call	7:37	7:71	3	av_pix_fmt_desc_get
arg	7:57	7:71	4	inlink->format
water	7:57	0:0	5	inlink
op	7:63	0:0	5	->
water	7:65	0:0	5	format
call	8:4	9:56	2	vsFrameInfoInit
arg	8:20	8:23	3	&fi
op	8:20	0:0	4	&
water	8:21	0:0	4	fi
arg	8:25	8:34	3	inlink->w
water	8:25	0:0	4	inlink
op	8:31	0:0	4	->
water	8:33	0:0	4	w
arg	8:36	8:45	3	inlink->h
water	8:36	0:0	4	inlink
op	8:42	0:0	4	->
water	8:44	0:0	4	h
arg	9:20	9:56	3	ff_av2vs_pixfmt(ctx,inlink->format)
call	9:20	9:55	4	ff_av2vs_pixfmt
arg	9:36	9:39	5	ctx
water	9:36	0:0	6	ctx
arg	9:41	9:55	5	inlink->format
water	9:41	0:0	6	inlink
op	9:47	0:0	6	->
water	9:49	0:0	6	format
water	9:57	0:0	2	;
if	10:4	13:4	2	(fi . bytesPerPixel !=av_get_bits_per_pixel (desc ) / 8)
cond	10:8	10:56	3	fi . bytesPerPixel !=av_get_bits_per_pixel (desc ) / 8
water	10:8	0:0	4	fi
op	10:10	0:0	4	.
water	10:11	0:0	4	bytesPerPixel
op	10:25	0:0	4	!=
call	10:28	10:54	4	av_get_bits_per_pixel
arg	10:50	10:54	5	desc
water	10:50	0:0	6	desc
op	10:55	0:0	4	/
water	10:56	0:0	4	8
stmts	10:59	13:4	3	
water	10:59	0:0	4	{
call	11:8	11:97	4	av_log
arg	11:15	11:18	5	ctx
water	11:15	0:0	6	ctx
arg	11:20	11:32	5	AV_LOG_ERROR
water	11:20	0:0	6	AV_LOG_ERROR
arg	11:34	11:97	5	"pixel-format error: wrong bits/per/pixel, please report a BUG"
water	11:34	0:0	6	"pixel-format error: wrong bits/per/pixel, please report a BUG"
water	11:98	0:0	4	;
return	12:8	12:30	4	AVERROR(EINVAL)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	EINVAL
water	12:23	0:0	7	EINVAL
water	13:4	0:0	4	}
if	14:4	17:4	2	(fi . log2ChromaW != desc -> log2_chroma_w)
cond	14:8	14:32	3	fi . log2ChromaW != desc -> log2_chroma_w
water	14:8	0:0	4	fi
op	14:10	0:0	4	.
water	14:11	0:0	4	log2ChromaW
op	14:23	0:0	4	!=
water	14:26	0:0	4	desc
op	14:30	0:0	4	->
water	14:32	0:0	4	log2_chroma_w
stmts	14:47	17:4	3	
water	14:47	0:0	4	{
call	15:8	15:90	4	av_log
arg	15:15	15:18	5	ctx
water	15:15	0:0	6	ctx
arg	15:20	15:32	5	AV_LOG_ERROR
water	15:20	0:0	6	AV_LOG_ERROR
arg	15:34	15:90	5	"pixel-format error: log2_chroma_w, please report a BUG"
water	15:34	0:0	6	"pixel-format error: log2_chroma_w, please report a BUG"
water	15:91	0:0	4	;
return	16:8	16:30	4	AVERROR(EINVAL)
call	16:15	16:29	5	AVERROR
arg	16:23	16:29	6	EINVAL
water	16:23	0:0	7	EINVAL
water	17:4	0:0	4	}
if	18:4	21:4	2	(fi . log2ChromaH != desc -> log2_chroma_h)
cond	18:8	18:32	3	fi . log2ChromaH != desc -> log2_chroma_h
water	18:8	0:0	4	fi
op	18:10	0:0	4	.
water	18:11	0:0	4	log2ChromaH
op	18:23	0:0	4	!=
water	18:26	0:0	4	desc
op	18:30	0:0	4	->
water	18:32	0:0	4	log2_chroma_h
stmts	18:47	21:4	3	
water	18:47	0:0	4	{
call	19:8	19:90	4	av_log
arg	19:15	19:18	5	ctx
water	19:15	0:0	6	ctx
arg	19:20	19:32	5	AV_LOG_ERROR
water	19:20	0:0	6	AV_LOG_ERROR
arg	19:34	19:90	5	"pixel-format error: log2_chroma_h, please report a BUG"
water	19:34	0:0	6	"pixel-format error: log2_chroma_h, please report a BUG"
water	19:91	0:0	4	;
return	20:8	20:30	4	AVERROR(EINVAL)
call	20:15	20:29	5	AVERROR
arg	20:23	20:29	6	EINVAL
water	20:23	0:0	7	EINVAL
water	21:4	0:0	4	}
water	23:4	0:0	2	sd
op	23:6	0:0	2	->
water	23:8	0:0	2	conf
op	23:12	0:0	2	.
water	23:13	0:0	2	algo
op	23:22	0:0	2	=
water	23:24	0:0	2	1
water	23:25	0:0	2	;
water	24:4	0:0	2	sd
op	24:6	0:0	2	->
water	24:8	0:0	2	conf
op	24:12	0:0	2	.
water	24:13	0:0	2	modName
op	24:22	0:0	2	=
water	24:24	0:0	2	"vidstabdetect"
water	24:39	0:0	2	;
if	25:4	28:4	2	(vsMotionDetectInit (md ,& sd -> conf ,& fi ) != VS_OK)
cond	25:8	25:50	3	vsMotionDetectInit (md ,& sd -> conf ,& fi ) != VS_OK
call	25:8	25:45	4	vsMotionDetectInit
arg	25:27	25:29	5	md
water	25:27	0:0	6	md
arg	25:31	25:40	5	&sd->conf
op	25:31	0:0	6	&
water	25:32	0:0	6	sd
op	25:34	0:0	6	->
water	25:36	0:0	6	conf
arg	25:42	25:45	5	&fi
op	25:42	0:0	6	&
water	25:43	0:0	6	fi
op	25:47	0:0	4	!=
water	25:50	0:0	4	VS_OK
stmts	25:57	28:4	3	
water	25:57	0:0	4	{
call	26:8	26:98	4	av_log
arg	26:15	26:18	5	ctx
water	26:15	0:0	6	ctx
arg	26:20	26:32	5	AV_LOG_ERROR
water	26:20	0:0	6	AV_LOG_ERROR
arg	26:34	26:98	5	"initialization of Motion Detection failed, please report a BUG"
water	26:34	0:0	6	"initialization of Motion Detection failed, please report a BUG"
water	26:99	0:0	4	;
return	27:8	27:30	4	AVERROR(EINVAL)
call	27:15	27:29	5	AVERROR
arg	27:23	27:29	6	EINVAL
water	27:23	0:0	7	EINVAL
water	28:4	0:0	4	}
call	29:4	29:41	2	vsMotionDetectGetConfig
arg	29:28	29:37	3	&sd->conf
op	29:28	0:0	4	&
water	29:29	0:0	4	sd
op	29:31	0:0	4	->
water	29:33	0:0	4	conf
arg	29:39	29:41	3	md
water	29:39	0:0	4	md
water	29:42	0:0	2	;
call	30:4	30:73	2	av_log
arg	30:11	30:14	3	ctx
water	30:11	0:0	4	ctx
arg	30:16	30:27	3	AV_LOG_INFO
water	30:16	0:0	4	AV_LOG_INFO
arg	30:29	30:73	3	"Video stabilization settings (pass 1/2):\n"
water	30:29	0:0	4	"Video stabilization settings (pass 1/2):\n"
water	30:74	0:0	2	;
call	31:4	31:72	2	av_log
arg	31:11	31:14	3	ctx
water	31:11	0:0	4	ctx
arg	31:16	31:27	3	AV_LOG_INFO
water	31:16	0:0	4	AV_LOG_INFO
arg	31:29	31:52	3	"     shakiness = %d\n"
water	31:29	0:0	4	"     shakiness = %d\n"
arg	31:54	31:72	3	sd->conf.shakiness
water	31:54	0:0	4	sd
op	31:56	0:0	4	->
water	31:58	0:0	4	conf
op	31:62	0:0	4	.
water	31:63	0:0	4	shakiness
water	31:73	0:0	2	;
call	32:4	32:71	2	av_log
arg	32:11	32:14	3	ctx
water	32:11	0:0	4	ctx
arg	32:16	32:27	3	AV_LOG_INFO
water	32:16	0:0	4	AV_LOG_INFO
arg	32:29	32:52	3	"      accuracy = %d\n"
water	32:29	0:0	4	"      accuracy = %d\n"
arg	32:54	32:71	3	sd->conf.accuracy
water	32:54	0:0	4	sd
op	32:56	0:0	4	->
water	32:58	0:0	4	conf
op	32:62	0:0	4	.
water	32:63	0:0	4	accuracy
water	32:72	0:0	2	;
call	33:4	33:71	2	av_log
arg	33:11	33:14	3	ctx
water	33:11	0:0	4	ctx
arg	33:16	33:27	3	AV_LOG_INFO
water	33:16	0:0	4	AV_LOG_INFO
arg	33:29	33:52	3	"      stepsize = %d\n"
water	33:29	0:0	4	"      stepsize = %d\n"
arg	33:54	33:71	3	sd->conf.stepSize
water	33:54	0:0	4	sd
op	33:56	0:0	4	->
water	33:58	0:0	4	conf
op	33:62	0:0	4	.
water	33:63	0:0	4	stepSize
water	33:72	0:0	2	;
call	34:4	34:80	2	av_log
arg	34:11	34:14	3	ctx
water	34:11	0:0	4	ctx
arg	34:16	34:27	3	AV_LOG_INFO
water	34:16	0:0	4	AV_LOG_INFO
arg	34:29	34:52	3	"   mincontrast = %f\n"
water	34:29	0:0	4	"   mincontrast = %f\n"
arg	34:54	34:80	3	sd->conf.contrastThreshold
water	34:54	0:0	4	sd
op	34:56	0:0	4	->
water	34:58	0:0	4	conf
op	34:62	0:0	4	.
water	34:63	0:0	4	contrastThreshold
water	34:81	0:0	2	;
call	35:4	35:76	2	av_log
arg	35:11	35:14	3	ctx
water	35:11	0:0	4	ctx
arg	35:16	35:27	3	AV_LOG_INFO
water	35:16	0:0	4	AV_LOG_INFO
arg	35:29	35:52	3	"        tripod = %d\n"
water	35:29	0:0	4	"        tripod = %d\n"
arg	35:54	35:76	3	sd->conf.virtualTripod
water	35:54	0:0	4	sd
op	35:56	0:0	4	->
water	35:58	0:0	4	conf
op	35:62	0:0	4	.
water	35:63	0:0	4	virtualTripod
water	35:77	0:0	2	;
call	36:4	36:67	2	av_log
arg	36:11	36:14	3	ctx
water	36:11	0:0	4	ctx
arg	36:16	36:27	3	AV_LOG_INFO
water	36:16	0:0	4	AV_LOG_INFO
arg	36:29	36:52	3	"          show = %d\n"
water	36:29	0:0	4	"          show = %d\n"
arg	36:54	36:67	3	sd->conf.show
water	36:54	0:0	4	sd
op	36:56	0:0	4	->
water	36:58	0:0	4	conf
op	36:62	0:0	4	.
water	36:63	0:0	4	show
water	36:68	0:0	2	;
call	37:4	37:64	2	av_log
arg	37:11	37:14	3	ctx
water	37:11	0:0	4	ctx
arg	37:16	37:27	3	AV_LOG_INFO
water	37:16	0:0	4	AV_LOG_INFO
arg	37:29	37:52	3	"        result = %s\n"
water	37:29	0:0	4	"        result = %s\n"
arg	37:54	37:64	3	sd->result
water	37:54	0:0	4	sd
op	37:56	0:0	4	->
water	37:58	0:0	4	result
water	37:65	0:0	2	;
water	38:4	0:0	2	sd
op	38:6	0:0	2	->
water	38:8	0:0	2	f
op	38:10	0:0	2	=
call	38:12	38:33	2	fopen
arg	38:18	38:28	3	sd->result
water	38:18	0:0	4	sd
op	38:20	0:0	4	->
water	38:22	0:0	4	result
arg	38:30	38:33	3	"w"
water	38:30	0:0	4	"w"
water	38:34	0:0	2	;
if	39:4	42:4	2	(sd -> f == NULL)
cond	39:8	39:17	3	sd -> f == NULL
water	39:8	0:0	4	sd
op	39:10	0:0	4	->
water	39:12	0:0	4	f
op	39:14	0:0	4	==
water	39:17	0:0	4	NULL
stmts	39:23	42:4	3	
water	39:23	0:0	4	{
call	40:8	40:79	4	av_log
arg	40:15	40:18	5	ctx
water	40:15	0:0	6	ctx
arg	40:20	40:32	5	AV_LOG_ERROR
water	40:20	0:0	6	AV_LOG_ERROR
arg	40:34	40:67	5	"cannot open transform file %s\n"
water	40:34	0:0	6	"cannot open transform file %s\n"
arg	40:69	40:79	5	sd->result
water	40:69	0:0	6	sd
op	40:71	0:0	6	->
water	40:73	0:0	6	result
water	40:80	0:0	4	;
return	41:8	41:30	4	AVERROR(EINVAL)
call	41:15	41:29	5	AVERROR
arg	41:23	41:29	6	EINVAL
water	41:23	0:0	7	EINVAL
water	42:4	0:0	4	}
else	42:6	47:4	2
stmts	42:11	47:4	3	
water	42:11	0:0	4	{
if	43:8	46:8	4	(vsPrepareFile (md ,sd -> f ) != VS_OK)
cond	43:12	43:40	5	vsPrepareFile (md ,sd -> f ) != VS_OK
call	43:12	43:35	6	vsPrepareFile
arg	43:26	43:28	7	md
water	43:26	0:0	8	md
arg	43:30	43:35	7	sd->f
water	43:30	0:0	8	sd
op	43:32	0:0	8	->
water	43:34	0:0	8	f
op	43:37	0:0	6	!=
water	43:40	0:0	6	VS_OK
stmts	43:47	46:8	5	
water	43:47	0:0	6	{
call	44:12	44:87	6	av_log
arg	44:19	44:22	7	ctx
water	44:19	0:0	8	ctx
arg	44:24	44:36	7	AV_LOG_ERROR
water	44:24	0:0	8	AV_LOG_ERROR
arg	44:38	44:75	7	"cannot write to transform file %s\n"
water	44:38	0:0	8	"cannot write to transform file %s\n"
arg	44:77	44:87	7	sd->result
water	44:77	0:0	8	sd
op	44:79	0:0	8	->
water	44:81	0:0	8	result
water	44:88	0:0	6	;
return	45:12	45:34	6	AVERROR(EINVAL)
call	45:19	45:33	7	AVERROR
arg	45:27	45:33	8	EINVAL
water	45:27	0:0	9	EINVAL
water	46:8	0:0	6	}
water	47:4	0:0	4	}
return	48:4	48:12	2	0
water	48:11	0:0	3	0

func	1:0	82:0	0	static int	ffserver_save_avoption
params	1:33	0:0	1	
param	1:34	1:49	2	const char *	opt
param	1:51	1:66	2	const char *	arg
param	1:68	1:76	2	int	type
param	2:34	2:56	2	FFServerConfig *	config
stmnts	4:4	81:12	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	int
water	4:15	0:0	2	hinted
op	4:22	0:0	2	=
water	4:24	0:0	2	0
water	4:25	0:0	2	;
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
decl	6:4	6:24	2	AVDictionaryEntry	*e
decl	7:4	7:28	2	const AVOption	*o
op	7:22	0:0	2	=
water	7:24	0:0	2	NULL
decl	8:4	8:29	2	const char	*option
op	8:23	0:0	2	=
water	8:25	0:0	2	NULL
decl	9:4	9:33	2	const char	*codec_name
op	9:27	0:0	2	=
water	9:29	0:0	2	NULL
decl	10:4	10:19	2	char	buff[1024]
decl	11:4	11:23	2	AVCodecContext	*ctx
decl	12:4	12:23	2	AVDictionary	**dict
decl	13:4	13:35	2	enum AVCodecID	guessed_codec_id
switch	14:4	29:4	2	(type)
cond	14:12	14:12	3	type
water	14:12	0:0	4	type
stmts	14:18	29:4	3	
water	14:18	0:0	4	{
label	15:4	15:32	4	case AV_OPT_FLAG_VIDEO_PARAM :
water	16:8	0:0	4	ctx
op	16:12	0:0	4	=
water	16:14	0:0	4	config
op	16:20	0:0	4	->
water	16:22	0:0	4	dummy_vctx
water	16:32	0:0	4	;
water	17:8	0:0	4	dict
op	17:13	0:0	4	=
op	17:15	0:0	4	&
water	17:16	0:0	4	config
op	17:22	0:0	4	->
water	17:24	0:0	4	video_opts
water	17:34	0:0	4	;
water	18:8	0:0	4	guessed_codec_id
op	18:25	0:0	4	=
water	18:27	0:0	4	config
op	18:33	0:0	4	->
water	18:35	0:0	4	guessed_video_codec_id
op	18:58	0:0	4	!=
water	18:61	0:0	4	AV_CODEC_ID_NONE
water	18:78	0:0	4	?
water	19:27	0:0	4	config
op	19:33	0:0	4	->
water	19:35	0:0	4	guessed_video_codec_id
water	19:58	0:0	4	:
water	19:60	0:0	4	AV_CODEC_ID_H264
water	19:76	0:0	4	;
break	20:8	20:13	4	
label	21:4	21:32	4	case AV_OPT_FLAG_AUDIO_PARAM :
water	22:8	0:0	4	ctx
op	22:12	0:0	4	=
water	22:14	0:0	4	config
op	22:20	0:0	4	->
water	22:22	0:0	4	dummy_actx
water	22:32	0:0	4	;
water	23:8	0:0	4	dict
op	23:13	0:0	4	=
op	23:15	0:0	4	&
water	23:16	0:0	4	config
op	23:22	0:0	4	->
water	23:24	0:0	4	audio_opts
water	23:34	0:0	4	;
water	24:8	0:0	4	guessed_codec_id
op	24:25	0:0	4	=
water	24:27	0:0	4	config
op	24:33	0:0	4	->
water	24:35	0:0	4	guessed_audio_codec_id
op	24:58	0:0	4	!=
water	24:61	0:0	4	AV_CODEC_ID_NONE
water	24:78	0:0	4	?
water	25:27	0:0	4	config
op	25:33	0:0	4	->
water	25:35	0:0	4	guessed_audio_codec_id
water	25:58	0:0	4	:
water	25:60	0:0	4	AV_CODEC_ID_AAC
water	25:75	0:0	4	;
break	26:8	26:13	4	
label	27:4	27:11	4	default :
call	28:8	28:20	4	av_assert0
arg	28:19	28:20	5	0
water	28:19	0:0	6	0
water	28:21	0:0	4	;
water	29:4	0:0	4	}
if	30:4	46:4	2	(strchr (opt ,':' ))
cond	30:8	30:23	3	strchr (opt ,':' )
call	30:8	30:23	4	strchr
arg	30:15	30:18	5	opt
water	30:15	0:0	6	opt
arg	30:20	30:23	5	':'
water	30:20	0:0	6	':'
stmts	30:26	46:4	3	
water	30:26	0:0	4	{
call	32:8	32:46	4	snprintf
arg	32:17	32:21	5	buff
water	32:17	0:0	6	buff
arg	32:23	32:35	5	sizeof(buff)
op	32:23	0:0	6	sizeof
water	32:29	0:0	6	(
water	32:30	0:0	6	buff
water	32:34	0:0	6	)
arg	32:37	32:41	5	"%s"
water	32:37	0:0	6	"%s"
arg	32:43	32:46	5	opt
water	32:43	0:0	6	opt
water	32:47	0:0	4	;
water	33:8	0:0	4	codec_name
op	33:19	0:0	4	=
water	33:21	0:0	4	buff
water	33:25	0:0	4	;
if	34:8	39:8	4	(! ( option =strchr (buff ,':' ) ))
cond	34:11	34:39	5	! ( option =strchr (buff ,':' ) )
op	34:11	0:0	6	!
water	34:12	0:0	6	(
water	34:13	0:0	6	option
op	34:20	0:0	6	=
call	34:22	34:38	6	strchr
arg	34:29	34:33	7	buff
water	34:29	0:0	8	buff
arg	34:35	34:38	7	':'
water	34:35	0:0	8	':'
water	34:39	0:0	6	)
stmts	34:41	39:8	5	
water	34:41	0:0	6	{
call	35:12	37:63	6	report_config_error
arg	35:32	35:48	7	config->filename
water	35:32	0:0	8	config
op	35:38	0:0	8	->
water	35:40	0:0	8	filename
arg	35:50	35:66	7	config->line_num
water	35:50	0:0	8	config
op	35:56	0:0	8	->
water	35:58	0:0	8	line_num
arg	36:32	36:44	7	AV_LOG_ERROR
water	36:32	0:0	8	AV_LOG_ERROR
arg	36:46	36:61	7	&config->errors
op	36:46	0:0	8	&
water	36:47	0:0	8	config
op	36:53	0:0	8	->
water	36:55	0:0	8	errors
arg	37:32	37:63	7	"Syntax error. Unmatched ':'\n"
water	37:32	0:0	8	"Syntax error. Unmatched ':'\n"
water	37:64	0:0	6	;
return	38:12	38:21	6	-1
op	38:19	0:0	7	-
water	38:20	0:0	7	1
water	39:8	0:0	6	}
water	40:8	0:0	4	buff
op	40:12	0:0	4	[
water	40:13	0:0	4	option
op	40:20	0:0	4	-
water	40:22	0:0	4	buff
op	40:26	0:0	4	]
op	40:28	0:0	4	=
water	40:30	0:0	4	'\0'
water	40:34	0:0	4	;
water	41:8	0:0	4	option
op	41:14	0:0	4	++
water	41:16	0:0	4	;
if	42:8	43:22	4	(( ret =ffserver_set_codec (ctx ,codec_name ,config ) ) < 0)
cond	42:12	42:66	5	( ret =ffserver_set_codec (ctx ,codec_name ,config ) ) < 0
water	42:12	0:0	6	(
water	42:13	0:0	6	ret
op	42:17	0:0	6	=
call	42:19	42:61	6	ffserver_set_codec
arg	42:38	42:41	7	ctx
water	42:38	0:0	8	ctx
arg	42:43	42:53	7	codec_name
water	42:43	0:0	8	codec_name
arg	42:55	42:61	7	config
water	42:55	0:0	8	config
water	42:62	0:0	6	)
op	42:64	0:0	6	<
water	42:66	0:0	6	0
stmts	43:12	43:22	5	
return	43:12	43:22	6	ret
water	43:19	0:0	7	ret
if	44:8	45:21	4	(! ctx -> codec || ! ctx -> priv_data)
cond	44:12	44:33	5	! ctx -> codec || ! ctx -> priv_data
op	44:12	0:0	6	!
water	44:13	0:0	6	ctx
op	44:16	0:0	6	->
water	44:18	0:0	6	codec
op	44:24	0:0	6	||
op	44:27	0:0	6	!
water	44:28	0:0	6	ctx
op	44:31	0:0	6	->
water	44:33	0:0	6	priv_data
stmts	45:12	45:21	5	
return	45:12	45:21	6	-1
op	45:19	0:0	7	-
water	45:20	0:0	7	1
water	46:4	0:0	4	}
else	46:6	48:4	2
stmts	46:11	48:4	3	
water	46:11	0:0	4	{
water	47:8	0:0	4	option
op	47:15	0:0	4	=
water	47:17	0:0	4	opt
water	47:20	0:0	4	;
water	48:4	0:0	4	}
water	49:4	0:0	2	o
op	49:6	0:0	2	=
call	49:8	50:42	2	av_opt_find
arg	49:20	49:23	3	ctx
water	49:20	0:0	4	ctx
arg	49:25	49:31	3	option
water	49:25	0:0	4	option
arg	49:33	49:37	3	NULL
water	49:33	0:0	4	NULL
arg	49:39	49:72	3	type|AV_OPT_FLAG_ENCODING_PARAM
water	49:39	0:0	4	type
op	49:44	0:0	4	|
water	49:46	0:0	4	AV_OPT_FLAG_ENCODING_PARAM
arg	50:20	50:42	3	AV_OPT_SEARCH_CHILDREN
water	50:20	0:0	4	AV_OPT_SEARCH_CHILDREN
water	50:43	0:0	2	;
if	51:4	54:48	2	(! o && ( !strcmp (option ,"time_base" ) || !strcmp (option ,"pixel_format" ) || !strcmp (option ,"video_size" ) || !strcmp (option ,"codec_tag" ) ))
cond	51:8	53:70	3	! o && ( !strcmp (option ,"time_base" ) || !strcmp (option ,"pixel_format" ) || !strcmp (option ,"video_size" ) || !strcmp (option ,"codec_tag" ) )
op	51:8	0:0	4	!
water	51:9	0:0	4	o
op	51:11	0:0	4	&&
water	52:8	0:0	4	(
op	52:9	0:0	4	!
call	52:10	52:36	4	strcmp
arg	52:17	52:23	5	option
water	52:17	0:0	6	option
arg	52:25	52:36	5	"time_base"
water	52:25	0:0	6	"time_base"
op	52:39	0:0	4	||
op	52:42	0:0	4	!
call	52:43	52:72	4	strcmp
arg	52:50	52:56	5	option
water	52:50	0:0	6	option
arg	52:58	52:72	5	"pixel_format"
water	52:58	0:0	6	"pixel_format"
op	52:74	0:0	4	||
op	53:9	0:0	4	!
call	53:10	53:37	4	strcmp
arg	53:17	53:23	5	option
water	53:17	0:0	6	option
arg	53:25	53:37	5	"video_size"
water	53:25	0:0	6	"video_size"
op	53:39	0:0	4	||
op	53:42	0:0	4	!
call	53:43	53:69	4	strcmp
arg	53:50	53:56	5	option
water	53:50	0:0	6	option
arg	53:58	53:69	5	"codec_tag"
water	53:58	0:0	6	"codec_tag"
water	53:70	0:0	4	)
stmts	54:8	54:48	3	
water	54:8	0:0	4	o
op	54:10	0:0	4	=
call	54:12	54:47	4	av_opt_find
arg	54:24	54:27	5	ctx
water	54:24	0:0	6	ctx
arg	54:29	54:35	5	option
water	54:29	0:0	6	option
arg	54:37	54:41	5	NULL
water	54:37	0:0	6	NULL
arg	54:43	54:44	5	0
water	54:43	0:0	6	0
arg	54:46	54:47	5	0
water	54:46	0:0	6	0
water	54:48	0:0	4	;
if	55:4	67:4	2	(! o)
cond	55:8	55:9	3	! o
op	55:8	0:0	4	!
water	55:9	0:0	4	o
stmts	55:12	67:4	3	
water	55:12	0:0	4	{
call	56:8	57:76	4	report_config_error
arg	56:28	56:44	5	config->filename
water	56:28	0:0	6	config
op	56:34	0:0	6	->
water	56:36	0:0	6	filename
arg	56:46	56:62	5	config->line_num
water	56:46	0:0	6	config
op	56:52	0:0	6	->
water	56:54	0:0	6	line_num
arg	56:64	56:76	5	AV_LOG_ERROR
water	56:64	0:0	6	AV_LOG_ERROR
arg	57:28	57:43	5	&config->errors
op	57:28	0:0	6	&
water	57:29	0:0	6	config
op	57:35	0:0	6	->
water	57:37	0:0	6	errors
arg	57:45	57:71	5	"Option not found: '%s'\n"
water	57:45	0:0	6	"Option not found: '%s'\n"
arg	57:73	57:76	5	opt
water	57:73	0:0	6	opt
water	57:77	0:0	4	;
if	58:8	66:8	4	(! hinted && ctx -> codec_id == AV_CODEC_ID_NONE)
cond	58:12	58:40	5	! hinted && ctx -> codec_id == AV_CODEC_ID_NONE
op	58:12	0:0	6	!
water	58:13	0:0	6	hinted
op	58:20	0:0	6	&&
water	58:23	0:0	6	ctx
op	58:26	0:0	6	->
water	58:28	0:0	6	codec_id
op	58:37	0:0	6	==
water	58:40	0:0	6	AV_CODEC_ID_NONE
stmts	58:58	66:8	5	
water	58:58	0:0	6	{
water	59:12	0:0	6	hinted
op	59:19	0:0	6	=
water	59:21	0:0	6	1
water	59:22	0:0	6	;
call	60:12	65:35	6	report_config_error
arg	60:32	60:48	7	config->filename
water	60:32	0:0	8	config
op	60:38	0:0	8	->
water	60:40	0:0	8	filename
arg	60:50	60:66	7	config->line_num
water	60:50	0:0	8	config
op	60:56	0:0	8	->
water	60:58	0:0	8	line_num
arg	61:32	61:44	7	AV_LOG_ERROR
water	61:32	0:0	8	AV_LOG_ERROR
arg	61:46	61:50	7	NULL
water	61:46	0:0	8	NULL
arg	61:52	63:79	7	"If '%s' is a codec private""option, then prefix it with codec name, for ""example '%s:%s %s' or define codec earlier.\n"
water	61:52	0:0	8	"If '%s' is a codec private"
water	62:32	0:0	8	"option, then prefix it with codec name, for "
water	63:32	0:0	8	"example '%s:%s %s' or define codec earlier.\n"
arg	64:32	64:35	7	opt
water	64:32	0:0	8	opt
arg	64:37	64:72	7	avcodec_get_name(guessed_codec_id)
call	64:37	64:70	8	avcodec_get_name
arg	64:54	64:70	9	guessed_codec_id
water	64:54	0:0	10	guessed_codec_id
arg	64:73	64:76	7	opt
water	64:73	0:0	8	opt
arg	65:32	65:35	7	arg
water	65:32	0:0	8	arg
water	65:36	0:0	6	;
water	66:8	0:0	6	}
water	67:4	0:0	4	}
else	67:6	71:4	2
stmts	67:11	71:4	3	
if	67:11	71:4	4	(( ret =av_opt_set (ctx ,option ,arg ,AV_OPT_SEARCH_CHILDREN ) ) < 0)
cond	67:15	67:78	5	( ret =av_opt_set (ctx ,option ,arg ,AV_OPT_SEARCH_CHILDREN ) ) < 0
water	67:15	0:0	6	(
water	67:16	0:0	6	ret
op	67:20	0:0	6	=
call	67:22	67:73	6	av_opt_set
arg	67:33	67:36	7	ctx
water	67:33	0:0	8	ctx
arg	67:38	67:44	7	option
water	67:38	0:0	8	option
arg	67:46	67:49	7	arg
water	67:46	0:0	8	arg
arg	67:51	67:73	7	AV_OPT_SEARCH_CHILDREN
water	67:51	0:0	8	AV_OPT_SEARCH_CHILDREN
water	67:74	0:0	6	)
op	67:76	0:0	6	<
water	67:78	0:0	6	0
stmts	67:81	71:4	5	
water	67:81	0:0	6	{
call	68:8	70:36	6	report_config_error
arg	68:28	68:44	7	config->filename
water	68:28	0:0	8	config
op	68:34	0:0	8	->
water	68:36	0:0	8	filename
arg	68:46	68:62	7	config->line_num
water	68:46	0:0	8	config
op	68:52	0:0	8	->
water	68:54	0:0	8	line_num
arg	68:64	68:76	7	AV_LOG_ERROR
water	68:64	0:0	8	AV_LOG_ERROR
arg	69:16	69:31	7	&config->errors
op	69:16	0:0	8	&
water	69:17	0:0	8	config
op	69:23	0:0	8	->
water	69:25	0:0	8	errors
arg	69:33	69:73	7	"Invalid value for option %s (%s): %s\n"
water	69:33	0:0	8	"Invalid value for option %s (%s): %s\n"
arg	69:75	69:78	7	opt
water	69:75	0:0	8	opt
arg	70:16	70:19	7	arg
water	70:16	0:0	8	arg
arg	70:21	70:36	7	av_err2str(ret)
call	70:21	70:35	8	av_err2str
arg	70:32	70:35	9	ret
water	70:32	0:0	10	ret
water	70:37	0:0	6	;
water	71:4	0:0	6	}
else	71:6	78:4	2
stmts	71:11	78:4	3	
if	71:11	78:4	4	(( e =av_dict_get (* dict ,option ,NULL ,0 ) ))
cond	71:15	71:55	5	( e =av_dict_get (* dict ,option ,NULL ,0 ) )
water	71:15	0:0	6	(
water	71:16	0:0	6	e
op	71:18	0:0	6	=
call	71:20	71:54	6	av_dict_get
arg	71:32	71:37	7	*dict
op	71:32	0:0	8	*
water	71:33	0:0	8	dict
arg	71:39	71:45	7	option
water	71:39	0:0	8	option
arg	71:47	71:51	7	NULL
water	71:47	0:0	8	NULL
arg	71:53	71:54	7	0
water	71:53	0:0	8	0
water	71:55	0:0	6	)
stmts	71:58	78:4	5	
water	71:58	0:0	6	{
if	72:8	74:65	6	(( o -> type == AV_OPT_TYPE_FLAGS ) && arg && ( arg [ 0 ] == '+' || arg [ 0 ] == '-' ))
cond	72:12	73:43	7	( o -> type == AV_OPT_TYPE_FLAGS ) && arg && ( arg [ 0 ] == '+' || arg [ 0 ] == '-' )
water	72:12	0:0	8	(
water	72:13	0:0	8	o
op	72:14	0:0	8	->
water	72:16	0:0	8	type
op	72:21	0:0	8	==
water	72:24	0:0	8	AV_OPT_TYPE_FLAGS
water	72:41	0:0	8	)
op	72:43	0:0	8	&&
water	72:46	0:0	8	arg
op	72:50	0:0	8	&&
water	73:12	0:0	8	(
water	73:13	0:0	8	arg
op	73:16	0:0	8	[
water	73:17	0:0	8	0
op	73:18	0:0	8	]
op	73:20	0:0	8	==
water	73:23	0:0	8	'+'
op	73:27	0:0	8	||
water	73:30	0:0	8	arg
op	73:33	0:0	8	[
water	73:34	0:0	8	0
op	73:35	0:0	8	]
op	73:37	0:0	8	==
water	73:40	0:0	8	'-'
water	73:43	0:0	8	)
stmts	74:12	74:65	7	
return	74:12	74:65	8	av_dict_set(dict,option,arg,AV_DICT_APPEND)
call	74:19	74:64	9	av_dict_set
arg	74:31	74:35	10	dict
water	74:31	0:0	11	dict
arg	74:37	74:43	10	option
water	74:37	0:0	11	option
arg	74:45	74:48	10	arg
water	74:45	0:0	11	arg
arg	74:50	74:64	10	AV_DICT_APPEND
water	74:50	0:0	11	AV_DICT_APPEND
call	75:8	77:72	6	report_config_error
arg	75:28	75:44	7	config->filename
water	75:28	0:0	8	config
op	75:34	0:0	8	->
water	75:36	0:0	8	filename
arg	75:46	75:62	7	config->line_num
water	75:46	0:0	8	config
op	75:52	0:0	8	->
water	75:54	0:0	8	line_num
arg	75:64	75:76	7	AV_LOG_ERROR
water	75:64	0:0	8	AV_LOG_ERROR
arg	76:28	76:43	7	&config->errors
op	76:28	0:0	8	&
water	76:29	0:0	8	config
op	76:35	0:0	8	->
water	76:37	0:0	8	errors
arg	76:45	77:57	7	"Redeclaring value of option '%s'.""Previous value was: '%s'.\n"
water	76:45	0:0	8	"Redeclaring value of option '%s'."
water	77:28	0:0	8	"Previous value was: '%s'.\n"
arg	77:59	77:62	7	opt
water	77:59	0:0	8	opt
arg	77:64	77:72	7	e->value
water	77:64	0:0	8	e
op	77:65	0:0	8	->
water	77:67	0:0	8	value
water	77:73	0:0	6	;
water	78:4	0:0	6	}
else	78:6	80:4	2
stmts	78:11	80:4	3	
if	78:11	80:4	4	(av_dict_set (dict ,option ,arg ,0 ) < 0)
cond	78:15	78:51	5	av_dict_set (dict ,option ,arg ,0 ) < 0
call	78:15	78:47	6	av_dict_set
arg	78:27	78:31	7	dict
water	78:27	0:0	8	dict
arg	78:33	78:39	7	option
water	78:33	0:0	8	option
arg	78:41	78:44	7	arg
water	78:41	0:0	8	arg
arg	78:46	78:47	7	0
water	78:46	0:0	8	0
op	78:49	0:0	6	<
water	78:51	0:0	6	0
stmts	78:54	80:4	5	
water	78:54	0:0	6	{
return	79:8	79:30	6	AVERROR(ENOMEM)
call	79:15	79:29	7	AVERROR
arg	79:23	79:29	8	ENOMEM
water	79:23	0:0	9	ENOMEM
water	80:4	0:0	6	}
return	81:4	81:12	2	0
water	81:11	0:0	3	0

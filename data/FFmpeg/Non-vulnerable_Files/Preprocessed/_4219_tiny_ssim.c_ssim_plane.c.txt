func	1:0	26:0	0	float	ssim_plane
params	1:16	0:0	1	
param	2:27	2:38	2	pixel *	pix1
param	2:40	2:56	2	intptr_t	stride1
param	3:27	3:38	2	pixel *	pix2
param	3:40	3:56	2	intptr_t	stride2
param	4:27	4:36	2	int	width
param	4:38	4:48	2	int	height
param	4:50	4:59	2	void *	buf
param	4:61	4:70	2	int *	cnt
stmnts	0:0	25:42	1	
decl	6:4	6:13	2	int	z
op	6:10	0:0	2	=
water	6:12	0:0	2	0
decl	7:4	7:12	2	int	x
water	7:9	0:0	2	,
decl	7:4	7:12	2	int	y
decl	8:4	8:20	2	float	ssim
op	8:15	0:0	2	=
water	8:17	0:0	2	0
op	8:18	0:0	2	.
water	8:19	0:0	2	0
call	9:4	9:14	2	int
arg	9:9	9:14	3	*sum0
op	9:9	0:0	4	*
water	9:10	0:0	4	sum0
op	9:15	0:0	2	[
water	9:16	0:0	2	4
op	9:17	0:0	2	]
op	9:19	0:0	2	=
water	9:21	0:0	2	buf
water	9:24	0:0	2	;
call	10:4	10:14	2	int
arg	10:9	10:14	3	*sum1
op	10:9	0:0	4	*
water	10:10	0:0	4	sum1
op	10:15	0:0	2	[
water	10:16	0:0	2	4
op	10:17	0:0	2	]
op	10:19	0:0	2	=
water	10:21	0:0	2	sum0
op	10:26	0:0	2	+
water	10:28	0:0	2	(
water	10:29	0:0	2	width
op	10:35	0:0	2	>>
water	10:38	0:0	2	2
water	10:39	0:0	2	)
op	10:41	0:0	2	+
water	10:43	0:0	2	3
water	10:44	0:0	2	;
water	11:4	0:0	2	width
op	11:10	0:0	2	>>=
water	11:14	0:0	2	2
water	11:15	0:0	2	;
water	12:4	0:0	2	height
op	12:11	0:0	2	>>=
water	12:15	0:0	2	2
water	12:16	0:0	2	;
for	13:4	23:4	2	(y = 1 ;y < height;y ++)
forinit	13:9	13:14	3	y = 1 ;
water	13:9	0:0	4	y
op	13:11	0:0	4	=
water	13:13	0:0	4	1
water	13:14	0:0	4	;
cond	13:16	13:20	3	y < height
water	13:16	0:0	4	y
op	13:18	0:0	4	<
water	13:20	0:0	4	height
forexpr	13:28	13:29	3	y ++
water	13:28	0:0	4	y
op	13:29	0:0	4	++
stmts	14:4	23:4	3	
water	14:4	0:0	4	{
for	15:8	20:8	4	(;z <= y;z ++)
forinit	15:13	15:13	5	;
water	15:13	0:0	6	;
cond	15:15	15:20	5	z <= y
water	15:15	0:0	6	z
op	15:17	0:0	6	<=
water	15:20	0:0	6	y
forexpr	15:23	15:24	5	z ++
water	15:23	0:0	6	z
op	15:24	0:0	6	++
stmts	16:8	20:8	5	
water	16:8	0:0	6	{
call	17:12	17:38	6	FFSWAP
arg	17:20	17:25	7	void*
water	17:20	0:0	8	void
op	17:24	0:0	8	*
arg	17:27	17:31	7	sum0
water	17:27	0:0	8	sum0
arg	17:33	17:38	7	sum1
water	17:33	0:0	8	sum1
water	17:39	0:0	6	;
for	18:12	19:109	6	(x = 0 ;x < width;x += 2)
forinit	18:17	18:22	7	x = 0 ;
water	18:17	0:0	8	x
op	18:19	0:0	8	=
water	18:21	0:0	8	0
water	18:22	0:0	8	;
cond	18:24	18:28	7	x < width
water	18:24	0:0	8	x
op	18:26	0:0	8	<
water	18:28	0:0	8	width
forexpr	18:35	18:38	7	x += 2
water	18:35	0:0	8	x
op	18:36	0:0	8	+=
water	18:38	0:0	8	2
stmts	19:16	19:109	7	
call	19:16	19:108	8	ssim_4x4x2_core
arg	19:33	19:55	9	&pix1[4*(x+z*stride1)]
op	19:33	0:0	10	&
water	19:34	0:0	10	pix1
op	19:38	0:0	10	[
water	19:39	0:0	10	4
op	19:40	0:0	10	*
water	19:41	0:0	10	(
water	19:42	0:0	10	x
op	19:43	0:0	10	+
water	19:44	0:0	10	z
op	19:45	0:0	10	*
water	19:46	0:0	10	stride1
water	19:53	0:0	10	)
op	19:54	0:0	10	]
arg	19:57	19:64	9	stride1
water	19:57	0:0	10	stride1
arg	19:66	19:88	9	&pix2[4*(x+z*stride2)]
op	19:66	0:0	10	&
water	19:67	0:0	10	pix2
op	19:71	0:0	10	[
water	19:72	0:0	10	4
op	19:73	0:0	10	*
water	19:74	0:0	10	(
water	19:75	0:0	10	x
op	19:76	0:0	10	+
water	19:77	0:0	10	z
op	19:78	0:0	10	*
water	19:79	0:0	10	stride2
water	19:86	0:0	10	)
op	19:87	0:0	10	]
arg	19:90	19:97	9	stride2
water	19:90	0:0	10	stride2
arg	19:99	19:108	9	&sum0[x]
op	19:99	0:0	10	&
water	19:100	0:0	10	sum0
op	19:104	0:0	10	[
water	19:105	0:0	10	x
op	19:106	0:0	10	]
water	19:109	0:0	8	;
water	20:8	0:0	6	}
for	21:8	22:67	4	(x = 0 ;x < width - 1;x += 4)
forinit	21:13	21:18	5	x = 0 ;
water	21:13	0:0	6	x
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:30	5	x < width - 1
water	21:20	0:0	6	x
op	21:22	0:0	6	<
water	21:24	0:0	6	width
op	21:29	0:0	6	-
water	21:30	0:0	6	1
forexpr	21:33	21:38	5	x += 4
water	21:33	0:0	6	x
op	21:35	0:0	6	+=
water	21:38	0:0	6	4
stmts	22:12	22:67	5	
water	22:12	0:0	6	ssim
op	22:17	0:0	6	+=
call	22:20	22:66	6	ssim_end4
arg	22:31	22:37	7	sum0+x
water	22:31	0:0	8	sum0
op	22:35	0:0	8	+
water	22:36	0:0	8	x
arg	22:39	22:45	7	sum1+x
water	22:39	0:0	8	sum1
op	22:43	0:0	8	+
water	22:44	0:0	8	x
arg	22:47	22:66	7	FFMIN(4,width-x-1)
call	22:47	22:64	8	FFMIN
arg	22:53	22:54	9	4
water	22:53	0:0	10	4
arg	22:55	22:64	9	width-x-1
water	22:55	0:0	10	width
op	22:60	0:0	10	-
water	22:61	0:0	10	x
op	22:62	0:0	10	-
water	22:63	0:0	10	1
water	22:67	0:0	6	;
water	23:4	0:0	4	}
return	25:4	25:42	2	ssim/((height-1)*(width-1))
water	25:11	0:0	3	ssim
op	25:16	0:0	3	/
water	25:18	0:0	3	(
water	25:19	0:0	3	(
water	25:20	0:0	3	height
op	25:26	0:0	3	-
water	25:27	0:0	3	1
water	25:28	0:0	3	)
op	25:30	0:0	3	*
water	25:32	0:0	3	(
water	25:33	0:0	3	width
op	25:38	0:0	3	-
water	25:39	0:0	3	1
water	25:40	0:0	3	)
water	25:41	0:0	3	)

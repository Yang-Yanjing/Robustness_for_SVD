func	1:0	30:0	0	void	ff_draw_color
params	1:18	0:0	1	
param	1:19	1:38	2	FFDrawContext *	draw
param	1:40	1:58	2	FFDrawColor *	color
param	1:60	1:81	2	const uint8_t	rgba[4]
stmnts	3:4	29:4	1	
water	3:4	0:0	2	unsigned
water	3:13	0:0	2	i
water	3:14	0:0	2	;
decl	4:4	4:23	2	uint8_t	rgba_map[4]
if	5:4	6:54	2	(rgba != color -> rgba)
cond	5:8	5:23	3	rgba != color -> rgba
water	5:8	0:0	4	rgba
op	5:13	0:0	4	!=
water	5:16	0:0	4	color
op	5:21	0:0	4	->
water	5:23	0:0	4	rgba
stmts	6:8	6:54	3	
call	6:8	6:53	4	memcpy
arg	6:15	6:26	5	color->rgba
water	6:15	0:0	6	color
op	6:20	0:0	6	->
water	6:22	0:0	6	rgba
arg	6:28	6:32	5	rgba
water	6:28	0:0	6	rgba
arg	6:34	6:53	5	sizeof(color->rgba)
op	6:34	0:0	6	sizeof
water	6:40	0:0	6	(
water	6:41	0:0	6	color
op	6:46	0:0	6	->
water	6:48	0:0	6	rgba
water	6:52	0:0	6	)
water	6:54	0:0	4	;
if	7:4	16:4	2	(( draw -> desc -> flags & AV_PIX_FMT_FLAG_RGB ) &&ff_fill_rgba_map (rgba_map ,draw -> format ) >= 0)
cond	7:8	8:52	3	( draw -> desc -> flags & AV_PIX_FMT_FLAG_RGB ) &&ff_fill_rgba_map (rgba_map ,draw -> format ) >= 0
water	7:8	0:0	4	(
water	7:9	0:0	4	draw
op	7:13	0:0	4	->
water	7:15	0:0	4	desc
op	7:19	0:0	4	->
water	7:21	0:0	4	flags
op	7:27	0:0	4	&
water	7:29	0:0	4	AV_PIX_FMT_FLAG_RGB
water	7:48	0:0	4	)
op	7:50	0:0	4	&&
call	8:8	8:47	4	ff_fill_rgba_map
arg	8:25	8:33	5	rgba_map
water	8:25	0:0	6	rgba_map
arg	8:35	8:47	5	draw->format
water	8:35	0:0	6	draw
op	8:39	0:0	6	->
water	8:41	0:0	6	format
op	8:49	0:0	4	>=
water	8:52	0:0	4	0
stmts	8:55	16:4	3	
water	8:55	0:0	4	{
if	9:8	12:8	4	(draw -> nb_planes == 1)
cond	9:12	9:31	5	draw -> nb_planes == 1
water	9:12	0:0	6	draw
op	9:16	0:0	6	->
water	9:18	0:0	6	nb_planes
op	9:28	0:0	6	==
water	9:31	0:0	6	1
stmts	9:34	12:8	5	
water	9:34	0:0	6	{
for	10:8	11:52	6	(i = 0 ;i < 4;i ++)
forinit	10:13	10:18	7	i = 0 ;
water	10:13	0:0	8	i
op	10:15	0:0	8	=
water	10:17	0:0	8	0
water	10:18	0:0	8	;
cond	10:20	10:24	7	i < 4
water	10:20	0:0	8	i
op	10:22	0:0	8	<
water	10:24	0:0	8	4
forexpr	10:27	10:28	7	i ++
water	10:27	0:0	8	i
op	10:28	0:0	8	++
stmts	11:12	11:52	7	
water	11:12	0:0	8	color
op	11:17	0:0	8	->
water	11:19	0:0	8	comp
op	11:23	0:0	8	[
water	11:24	0:0	8	0
op	11:25	0:0	8	]
op	11:26	0:0	8	.
water	11:27	0:0	8	u8
op	11:29	0:0	8	[
water	11:30	0:0	8	rgba_map
op	11:38	0:0	8	[
water	11:39	0:0	8	i
op	11:40	0:0	8	]
op	11:41	0:0	8	]
op	11:43	0:0	8	=
water	11:45	0:0	8	rgba
op	11:49	0:0	8	[
water	11:50	0:0	8	i
op	11:51	0:0	8	]
water	11:52	0:0	8	;
water	12:8	0:0	6	}
else	12:10	15:8	4
stmts	12:15	15:8	5	
water	12:15	0:0	6	{
for	13:12	14:56	6	(i = 0 ;i < 4;i ++)
forinit	13:17	13:22	7	i = 0 ;
water	13:17	0:0	8	i
op	13:19	0:0	8	=
water	13:21	0:0	8	0
water	13:22	0:0	8	;
cond	13:24	13:28	7	i < 4
water	13:24	0:0	8	i
op	13:26	0:0	8	<
water	13:28	0:0	8	4
forexpr	13:31	13:32	7	i ++
water	13:31	0:0	8	i
op	13:32	0:0	8	++
stmts	14:16	14:56	7	
water	14:16	0:0	8	color
op	14:21	0:0	8	->
water	14:23	0:0	8	comp
op	14:27	0:0	8	[
water	14:28	0:0	8	rgba_map
op	14:36	0:0	8	[
water	14:37	0:0	8	i
op	14:38	0:0	8	]
op	14:39	0:0	8	]
op	14:40	0:0	8	.
water	14:41	0:0	8	u8
op	14:43	0:0	8	[
water	14:44	0:0	8	0
op	14:45	0:0	8	]
op	14:47	0:0	8	=
water	14:49	0:0	8	rgba
op	14:53	0:0	8	[
water	14:54	0:0	8	i
op	14:55	0:0	8	]
water	14:56	0:0	8	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}
else	16:6	22:4	2
stmts	16:11	22:4	3	
if	16:11	22:4	4	(draw -> nb_planes == 3 || draw -> nb_planes == 4)
cond	16:15	16:58	5	draw -> nb_planes == 3 || draw -> nb_planes == 4
water	16:15	0:0	6	draw
op	16:19	0:0	6	->
water	16:21	0:0	6	nb_planes
op	16:31	0:0	6	==
water	16:34	0:0	6	3
op	16:36	0:0	6	||
water	16:39	0:0	6	draw
op	16:43	0:0	6	->
water	16:45	0:0	6	nb_planes
op	16:55	0:0	6	==
water	16:58	0:0	6	4
stmts	16:61	22:4	5	
water	16:61	0:0	6	{
water	18:8	0:0	6	color
op	18:13	0:0	6	->
water	18:15	0:0	6	comp
op	18:19	0:0	6	[
water	18:20	0:0	6	0
op	18:21	0:0	6	]
op	18:22	0:0	6	.
water	18:23	0:0	6	u8
op	18:25	0:0	6	[
water	18:26	0:0	6	0
op	18:27	0:0	6	]
op	18:29	0:0	6	=
call	18:31	18:70	6	RGB_TO_Y_CCIR
arg	18:45	18:52	7	rgba[0]
water	18:45	0:0	8	rgba
op	18:49	0:0	8	[
water	18:50	0:0	8	0
op	18:51	0:0	8	]
arg	18:54	18:61	7	rgba[1]
water	18:54	0:0	8	rgba
op	18:58	0:0	8	[
water	18:59	0:0	8	1
op	18:60	0:0	8	]
arg	18:63	18:70	7	rgba[2]
water	18:63	0:0	8	rgba
op	18:67	0:0	8	[
water	18:68	0:0	8	2
op	18:69	0:0	8	]
water	18:71	0:0	6	;
water	19:8	0:0	6	color
op	19:13	0:0	6	->
water	19:15	0:0	6	comp
op	19:19	0:0	6	[
water	19:20	0:0	6	1
op	19:21	0:0	6	]
op	19:22	0:0	6	.
water	19:23	0:0	6	u8
op	19:25	0:0	6	[
water	19:26	0:0	6	0
op	19:27	0:0	6	]
op	19:29	0:0	6	=
call	19:31	19:73	6	RGB_TO_U_CCIR
arg	19:45	19:52	7	rgba[0]
water	19:45	0:0	8	rgba
op	19:49	0:0	8	[
water	19:50	0:0	8	0
op	19:51	0:0	8	]
arg	19:54	19:61	7	rgba[1]
water	19:54	0:0	8	rgba
op	19:58	0:0	8	[
water	19:59	0:0	8	1
op	19:60	0:0	8	]
arg	19:63	19:70	7	rgba[2]
water	19:63	0:0	8	rgba
op	19:67	0:0	8	[
water	19:68	0:0	8	2
op	19:69	0:0	8	]
arg	19:72	19:73	7	0
water	19:72	0:0	8	0
water	19:74	0:0	6	;
water	20:8	0:0	6	color
op	20:13	0:0	6	->
water	20:15	0:0	6	comp
op	20:19	0:0	6	[
water	20:20	0:0	6	2
op	20:21	0:0	6	]
op	20:22	0:0	6	.
water	20:23	0:0	6	u8
op	20:25	0:0	6	[
water	20:26	0:0	6	0
op	20:27	0:0	6	]
op	20:29	0:0	6	=
call	20:31	20:73	6	RGB_TO_V_CCIR
arg	20:45	20:52	7	rgba[0]
water	20:45	0:0	8	rgba
op	20:49	0:0	8	[
water	20:50	0:0	8	0
op	20:51	0:0	8	]
arg	20:54	20:61	7	rgba[1]
water	20:54	0:0	8	rgba
op	20:58	0:0	8	[
water	20:59	0:0	8	1
op	20:60	0:0	8	]
arg	20:63	20:70	7	rgba[2]
water	20:63	0:0	8	rgba
op	20:67	0:0	8	[
water	20:68	0:0	8	2
op	20:69	0:0	8	]
arg	20:72	20:73	7	0
water	20:72	0:0	8	0
water	20:74	0:0	6	;
water	21:8	0:0	6	color
op	21:13	0:0	6	->
water	21:15	0:0	6	comp
op	21:19	0:0	6	[
water	21:20	0:0	6	3
op	21:21	0:0	6	]
op	21:22	0:0	6	.
water	21:23	0:0	6	u8
op	21:25	0:0	6	[
water	21:26	0:0	6	0
op	21:27	0:0	6	]
op	21:29	0:0	6	=
water	21:31	0:0	6	rgba
op	21:35	0:0	6	[
water	21:36	0:0	6	3
op	21:37	0:0	6	]
water	21:38	0:0	6	;
water	22:4	0:0	6	}
else	22:6	25:4	2
stmts	22:11	25:4	3	
if	22:11	25:4	4	(draw -> format == AV_PIX_FMT_GRAY8 || draw -> format == AV_PIX_FMT_GRAY8A)
cond	22:15	22:67	5	draw -> format == AV_PIX_FMT_GRAY8 || draw -> format == AV_PIX_FMT_GRAY8A
water	22:15	0:0	6	draw
op	22:19	0:0	6	->
water	22:21	0:0	6	format
op	22:28	0:0	6	==
water	22:31	0:0	6	AV_PIX_FMT_GRAY8
op	22:48	0:0	6	||
water	22:51	0:0	6	draw
op	22:55	0:0	6	->
water	22:57	0:0	6	format
op	22:64	0:0	6	==
water	22:67	0:0	6	AV_PIX_FMT_GRAY8A
stmts	22:86	25:4	5	
water	22:86	0:0	6	{
water	23:8	0:0	6	color
op	23:13	0:0	6	->
water	23:15	0:0	6	comp
op	23:19	0:0	6	[
water	23:20	0:0	6	0
op	23:21	0:0	6	]
op	23:22	0:0	6	.
water	23:23	0:0	6	u8
op	23:25	0:0	6	[
water	23:26	0:0	6	0
op	23:27	0:0	6	]
op	23:29	0:0	6	=
call	23:31	23:70	6	RGB_TO_Y_CCIR
arg	23:45	23:52	7	rgba[0]
water	23:45	0:0	8	rgba
op	23:49	0:0	8	[
water	23:50	0:0	8	0
op	23:51	0:0	8	]
arg	23:54	23:61	7	rgba[1]
water	23:54	0:0	8	rgba
op	23:58	0:0	8	[
water	23:59	0:0	8	1
op	23:60	0:0	8	]
arg	23:63	23:70	7	rgba[2]
water	23:63	0:0	8	rgba
op	23:67	0:0	8	[
water	23:68	0:0	8	2
op	23:69	0:0	8	]
water	23:71	0:0	6	;
water	24:8	0:0	6	color
op	24:13	0:0	6	->
water	24:15	0:0	6	comp
op	24:19	0:0	6	[
water	24:20	0:0	6	1
op	24:21	0:0	6	]
op	24:22	0:0	6	.
water	24:23	0:0	6	u8
op	24:25	0:0	6	[
water	24:26	0:0	6	0
op	24:27	0:0	6	]
op	24:29	0:0	6	=
water	24:31	0:0	6	rgba
op	24:35	0:0	6	[
water	24:36	0:0	6	3
op	24:37	0:0	6	]
water	24:38	0:0	6	;
water	25:4	0:0	6	}
else	25:6	29:4	2
stmts	25:11	29:4	3	
water	25:11	0:0	4	{
call	26:8	27:76	4	av_log
arg	26:15	26:19	5	NULL
water	26:15	0:0	6	NULL
arg	26:21	26:35	5	AV_LOG_WARNING
water	26:21	0:0	6	AV_LOG_WARNING
arg	27:15	27:58	5	"Color conversion not implemented for %s\n"
water	27:15	0:0	6	"Color conversion not implemented for %s\n"
arg	27:60	27:76	5	draw->desc->name
water	27:60	0:0	6	draw
op	27:64	0:0	6	->
water	27:66	0:0	6	desc
op	27:70	0:0	6	->
water	27:72	0:0	6	name
water	27:77	0:0	4	;
call	28:8	28:41	4	memset
arg	28:15	28:20	5	color
water	28:15	0:0	6	color
arg	28:22	28:25	5	128
water	28:22	0:0	6	128
arg	28:27	28:41	5	sizeof(*color)
op	28:27	0:0	6	sizeof
water	28:33	0:0	6	(
op	28:34	0:0	6	*
water	28:35	0:0	6	color
water	28:40	0:0	6	)
water	28:42	0:0	4	;
water	29:4	0:0	4	}

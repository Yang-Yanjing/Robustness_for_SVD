func	1:0	74:0	0	static int	init_filters
params	1:23	0:0	1	
param	1:24	1:49	2	const char *	filters_descr
stmnts	0:0	73:14	1	
decl	3:4	3:18	2	char	args[512]
decl	4:4	4:15	2	int	ret
op	4:12	0:0	2	=
water	4:14	0:0	2	0
decl	5:4	5:57	2	AVFilter	*buffersrc
op	5:25	0:0	2	=
call	5:27	5:56	3	avfilter_get_by_name
arg	5:48	5:56	4	"buffer"
water	5:48	0:0	5	"buffer"
decl	6:4	6:61	2	AVFilter	*buffersink
op	6:25	0:0	2	=
call	6:27	6:60	3	avfilter_get_by_name
arg	6:48	6:60	4	"buffersink"
water	6:48	0:0	5	"buffersink"
decl	7:4	7:51	2	AVFilterInOut	*outputs
op	7:27	0:0	2	=
call	7:29	7:50	3	avfilter_inout_alloc
decl	8:4	8:51	2	AVFilterInOut	*inputs
op	8:27	0:0	2	=
call	8:29	8:50	3	avfilter_inout_alloc
decl	9:4	9:74	2	AVRational	time_base
op	9:25	0:0	2	=
water	9:27	0:0	2	fmt_ctx
op	9:34	0:0	2	->
water	9:36	0:0	2	streams
op	9:43	0:0	2	[
water	9:44	0:0	2	video_stream_index
op	9:62	0:0	2	]
op	9:63	0:0	2	->
water	9:65	0:0	2	time_base
decl	10:4	10:73	2	enum AVPixelFormat	pix_fmts[]
op	10:34	0:0	2	=
water	10:36	0:0	2	{
water	10:38	0:0	2	AV_PIX_FMT_GRAY8
water	10:54	0:0	2	,
water	10:56	0:0	2	AV_PIX_FMT_NONE
water	10:72	0:0	2	}
water	11:4	0:0	2	filter_graph
op	11:17	0:0	2	=
call	11:19	11:40	2	avfilter_graph_alloc
water	11:41	0:0	2	;
if	12:4	15:4	2	(! outputs || ! inputs || ! filter_graph)
cond	12:8	12:32	3	! outputs || ! inputs || ! filter_graph
op	12:8	0:0	4	!
water	12:9	0:0	4	outputs
op	12:17	0:0	4	||
op	12:20	0:0	4	!
water	12:21	0:0	4	inputs
op	12:28	0:0	4	||
op	12:31	0:0	4	!
water	12:32	0:0	4	filter_graph
stmts	12:46	15:4	3	
water	12:46	0:0	4	{
water	13:8	0:0	4	ret
op	13:12	0:0	4	=
call	13:14	13:28	4	AVERROR
arg	13:22	13:28	5	ENOMEM
water	13:22	0:0	6	ENOMEM
water	13:29	0:0	4	;
goto	14:8	14:16	4	end
water	14:13	0:0	5	end
water	15:4	0:0	4	}
call	17:4	21:78	2	snprintf
arg	17:13	17:17	3	args
water	17:13	0:0	4	args
arg	17:19	17:31	3	sizeof(args)
op	17:19	0:0	4	sizeof
water	17:25	0:0	4	(
water	17:26	0:0	4	args
water	17:30	0:0	4	)
arg	18:12	18:76	3	"video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d"
water	18:12	0:0	4	"video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d"
arg	19:12	19:26	3	dec_ctx->width
water	19:12	0:0	4	dec_ctx
op	19:19	0:0	4	->
water	19:21	0:0	4	width
arg	19:28	19:43	3	dec_ctx->height
water	19:28	0:0	4	dec_ctx
op	19:35	0:0	4	->
water	19:37	0:0	4	height
arg	19:45	19:61	3	dec_ctx->pix_fmt
water	19:45	0:0	4	dec_ctx
op	19:52	0:0	4	->
water	19:54	0:0	4	pix_fmt
arg	20:12	20:25	3	time_base.num
water	20:12	0:0	4	time_base
op	20:21	0:0	4	.
water	20:22	0:0	4	num
arg	20:27	20:40	3	time_base.den
water	20:27	0:0	4	time_base
op	20:36	0:0	4	.
water	20:37	0:0	4	den
arg	21:12	21:44	3	dec_ctx->sample_aspect_ratio.num
water	21:12	0:0	4	dec_ctx
op	21:19	0:0	4	->
water	21:21	0:0	4	sample_aspect_ratio
op	21:40	0:0	4	.
water	21:41	0:0	4	num
arg	21:46	21:78	3	dec_ctx->sample_aspect_ratio.den
water	21:46	0:0	4	dec_ctx
op	21:53	0:0	4	->
water	21:55	0:0	4	sample_aspect_ratio
op	21:74	0:0	4	.
water	21:75	0:0	4	den
water	21:79	0:0	2	;
water	22:4	0:0	2	ret
op	22:8	0:0	2	=
call	22:10	23:63	2	avfilter_graph_create_filter
arg	22:39	22:53	3	&buffersrc_ctx
op	22:39	0:0	4	&
water	22:40	0:0	4	buffersrc_ctx
arg	22:55	22:64	3	buffersrc
water	22:55	0:0	4	buffersrc
arg	22:66	22:70	3	"in"
water	22:66	0:0	4	"in"
arg	23:39	23:43	3	args
water	23:39	0:0	4	args
arg	23:45	23:49	3	NULL
water	23:45	0:0	4	NULL
arg	23:51	23:63	3	filter_graph
water	23:51	0:0	4	filter_graph
water	23:64	0:0	2	;
if	24:4	27:4	2	(ret < 0)
cond	24:8	24:14	3	ret < 0
water	24:8	0:0	4	ret
op	24:12	0:0	4	<
water	24:14	0:0	4	0
stmts	24:17	27:4	3	
water	24:17	0:0	4	{
call	25:8	25:66	4	av_log
arg	25:15	25:19	5	NULL
water	25:15	0:0	6	NULL
arg	25:21	25:33	5	AV_LOG_ERROR
water	25:21	0:0	6	AV_LOG_ERROR
arg	25:35	25:66	5	"Cannot create buffer source\n"
water	25:35	0:0	6	"Cannot create buffer source\n"
water	25:67	0:0	4	;
goto	26:8	26:16	4	end
water	26:13	0:0	5	end
water	27:4	0:0	4	}
water	29:4	0:0	2	ret
op	29:8	0:0	2	=
call	29:10	30:63	2	avfilter_graph_create_filter
arg	29:39	29:54	3	&buffersink_ctx
op	29:39	0:0	4	&
water	29:40	0:0	4	buffersink_ctx
arg	29:56	29:66	3	buffersink
water	29:56	0:0	4	buffersink
arg	29:68	29:73	3	"out"
water	29:68	0:0	4	"out"
arg	30:39	30:43	3	NULL
water	30:39	0:0	4	NULL
arg	30:45	30:49	3	NULL
water	30:45	0:0	4	NULL
arg	30:51	30:63	3	filter_graph
water	30:51	0:0	4	filter_graph
water	30:64	0:0	2	;
if	31:4	34:4	2	(ret < 0)
cond	31:8	31:14	3	ret < 0
water	31:8	0:0	4	ret
op	31:12	0:0	4	<
water	31:14	0:0	4	0
stmts	31:17	34:4	3	
water	31:17	0:0	4	{
call	32:8	32:64	4	av_log
arg	32:15	32:19	5	NULL
water	32:15	0:0	6	NULL
arg	32:21	32:33	5	AV_LOG_ERROR
water	32:21	0:0	6	AV_LOG_ERROR
arg	32:35	32:64	5	"Cannot create buffer sink\n"
water	32:35	0:0	6	"Cannot create buffer sink\n"
water	32:65	0:0	4	;
goto	33:8	33:16	4	end
water	33:13	0:0	5	end
water	34:4	0:0	4	}
water	35:4	0:0	2	ret
op	35:8	0:0	2	=
call	35:10	36:69	2	av_opt_set_int_list
arg	35:30	35:44	3	buffersink_ctx
water	35:30	0:0	4	buffersink_ctx
arg	35:46	35:56	3	"pix_fmts"
water	35:46	0:0	4	"pix_fmts"
arg	35:58	35:66	3	pix_fmts
water	35:58	0:0	4	pix_fmts
arg	36:30	36:45	3	AV_PIX_FMT_NONE
water	36:30	0:0	4	AV_PIX_FMT_NONE
arg	36:47	36:69	3	AV_OPT_SEARCH_CHILDREN
water	36:47	0:0	4	AV_OPT_SEARCH_CHILDREN
water	36:70	0:0	2	;
if	37:4	40:4	2	(ret < 0)
cond	37:8	37:14	3	ret < 0
water	37:8	0:0	4	ret
op	37:12	0:0	4	<
water	37:14	0:0	4	0
stmts	37:17	40:4	3	
water	37:17	0:0	4	{
call	38:8	38:69	4	av_log
arg	38:15	38:19	5	NULL
water	38:15	0:0	6	NULL
arg	38:21	38:33	5	AV_LOG_ERROR
water	38:21	0:0	6	AV_LOG_ERROR
arg	38:35	38:69	5	"Cannot set output pixel format\n"
water	38:35	0:0	6	"Cannot set output pixel format\n"
water	38:70	0:0	4	;
goto	39:8	39:16	4	end
water	39:13	0:0	5	end
water	40:4	0:0	4	}
water	51:4	0:0	2	outputs
op	51:11	0:0	2	->
water	51:13	0:0	2	name
op	51:24	0:0	2	=
call	51:26	51:40	2	av_strdup
arg	51:36	51:40	3	"in"
water	51:36	0:0	4	"in"
water	51:41	0:0	2	;
water	52:4	0:0	2	outputs
op	52:11	0:0	2	->
water	52:13	0:0	2	filter_ctx
op	52:24	0:0	2	=
water	52:26	0:0	2	buffersrc_ctx
water	52:39	0:0	2	;
water	53:4	0:0	2	outputs
op	53:11	0:0	2	->
water	53:13	0:0	2	pad_idx
op	53:24	0:0	2	=
water	53:26	0:0	2	0
water	53:27	0:0	2	;
water	54:4	0:0	2	outputs
op	54:11	0:0	2	->
water	54:13	0:0	2	next
op	54:24	0:0	2	=
water	54:26	0:0	2	NULL
water	54:30	0:0	2	;
water	61:4	0:0	2	inputs
op	61:10	0:0	2	->
water	61:12	0:0	2	name
op	61:23	0:0	2	=
call	61:25	61:40	2	av_strdup
arg	61:35	61:40	3	"out"
water	61:35	0:0	4	"out"
water	61:41	0:0	2	;
water	62:4	0:0	2	inputs
op	62:10	0:0	2	->
water	62:12	0:0	2	filter_ctx
op	62:23	0:0	2	=
water	62:25	0:0	2	buffersink_ctx
water	62:39	0:0	2	;
water	63:4	0:0	2	inputs
op	63:10	0:0	2	->
water	63:12	0:0	2	pad_idx
op	63:23	0:0	2	=
water	63:25	0:0	2	0
water	63:26	0:0	2	;
water	64:4	0:0	2	inputs
op	64:10	0:0	2	->
water	64:12	0:0	2	next
op	64:23	0:0	2	=
water	64:25	0:0	2	NULL
water	64:29	0:0	2	;
if	65:4	67:16	2	(( ret =avfilter_graph_parse_ptr (filter_graph ,filters_descr ,& inputs ,& outputs ,NULL ) ) < 0)
cond	65:8	66:64	3	( ret =avfilter_graph_parse_ptr (filter_graph ,filters_descr ,& inputs ,& outputs ,NULL ) ) < 0
water	65:8	0:0	4	(
water	65:9	0:0	4	ret
op	65:13	0:0	4	=
call	65:15	66:59	4	avfilter_graph_parse_ptr
arg	65:40	65:52	5	filter_graph
water	65:40	0:0	6	filter_graph
arg	65:54	65:67	5	filters_descr
water	65:54	0:0	6	filters_descr
arg	66:36	66:43	5	&inputs
op	66:36	0:0	6	&
water	66:37	0:0	6	inputs
arg	66:45	66:53	5	&outputs
op	66:45	0:0	6	&
water	66:46	0:0	6	outputs
arg	66:55	66:59	5	NULL
water	66:55	0:0	6	NULL
water	66:60	0:0	4	)
op	66:62	0:0	4	<
water	66:64	0:0	4	0
stmts	67:8	67:16	3	
goto	67:8	67:16	4	end
water	67:13	0:0	5	end
if	68:4	69:16	2	(( ret =avfilter_graph_config (filter_graph ,NULL ) ) < 0)
cond	68:8	68:60	3	( ret =avfilter_graph_config (filter_graph ,NULL ) ) < 0
water	68:8	0:0	4	(
water	68:9	0:0	4	ret
op	68:13	0:0	4	=
call	68:15	68:55	4	avfilter_graph_config
arg	68:37	68:49	5	filter_graph
water	68:37	0:0	6	filter_graph
arg	68:51	68:55	5	NULL
water	68:51	0:0	6	NULL
water	68:56	0:0	4	)
op	68:58	0:0	4	<
water	68:60	0:0	4	0
stmts	69:8	69:16	3	
goto	69:8	69:16	4	end
water	69:13	0:0	5	end
label	70:0	70:3	2	end :
call	71:4	71:31	2	avfilter_inout_free
arg	71:24	71:31	3	&inputs
op	71:24	0:0	4	&
water	71:25	0:0	4	inputs
water	71:32	0:0	2	;
call	72:4	72:32	2	avfilter_inout_free
arg	72:24	72:32	3	&outputs
op	72:24	0:0	4	&
water	72:25	0:0	4	outputs
water	72:33	0:0	2	;
return	73:4	73:14	2	ret
water	73:11	0:0	3	ret

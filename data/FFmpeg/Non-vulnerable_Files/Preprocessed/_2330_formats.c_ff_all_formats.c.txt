func	1:0	18:0	0	AVFilterFormats *	ff_all_formats
params	1:31	0:0	1	
param	1:32	1:53	2	enum AVMediaType	type
stmnts	0:0	17:14	1	
decl	3:4	3:31	2	AVFilterFormats	*ret
op	3:25	0:0	2	=
water	3:27	0:0	2	NULL
if	4:4	10:4	2	(type == AVMEDIA_TYPE_VIDEO)
cond	4:8	4:16	3	type == AVMEDIA_TYPE_VIDEO
water	4:8	0:0	4	type
op	4:13	0:0	4	==
water	4:16	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	4:36	10:4	3	
water	4:36	0:0	4	{
decl	5:8	5:45	4	const AVPixFmtDescriptor	*desc
op	5:39	0:0	4	=
water	5:41	0:0	4	NULL
while	6:8	9:8	4	(( desc =av_pix_fmt_desc_next (desc ) ))
cond	6:15	6:49	5	( desc =av_pix_fmt_desc_next (desc ) )
water	6:15	0:0	6	(
water	6:16	0:0	6	desc
op	6:21	0:0	6	=
call	6:23	6:48	6	av_pix_fmt_desc_next
arg	6:44	6:48	7	desc
water	6:44	0:0	8	desc
water	6:49	0:0	6	)
stmts	6:52	9:8	5	
water	6:52	0:0	6	{
if	7:12	8:65	6	(! ( desc -> flags & AV_PIX_FMT_FLAG_HWACCEL ))
cond	7:16	7:55	7	! ( desc -> flags & AV_PIX_FMT_FLAG_HWACCEL )
op	7:16	0:0	8	!
water	7:17	0:0	8	(
water	7:18	0:0	8	desc
op	7:22	0:0	8	->
water	7:24	0:0	8	flags
op	7:30	0:0	8	&
water	7:32	0:0	8	AV_PIX_FMT_FLAG_HWACCEL
water	7:55	0:0	8	)
stmts	8:16	8:65	7	
call	8:16	8:64	8	ff_add_format
arg	8:30	8:34	9	&ret
op	8:30	0:0	10	&
water	8:31	0:0	10	ret
arg	8:36	8:64	9	av_pix_fmt_desc_get_id(desc)
call	8:36	8:63	10	av_pix_fmt_desc_get_id
arg	8:59	8:63	11	desc
water	8:59	0:0	12	desc
water	8:65	0:0	8	;
water	9:8	0:0	6	}
water	10:4	0:0	4	}
else	10:6	16:4	2
stmts	10:11	16:4	3	
if	10:11	16:4	4	(type == AVMEDIA_TYPE_AUDIO)
cond	10:15	10:23	5	type == AVMEDIA_TYPE_AUDIO
water	10:15	0:0	6	type
op	10:20	0:0	6	==
water	10:23	0:0	6	AVMEDIA_TYPE_AUDIO
stmts	10:43	16:4	5	
water	10:43	0:0	6	{
decl	11:8	11:35	6	enum AVSampleFormat	fmt
op	11:32	0:0	6	=
water	11:34	0:0	6	0
while	12:8	15:8	6	(av_get_sample_fmt_name (fmt ))
cond	12:15	12:41	7	av_get_sample_fmt_name (fmt )
call	12:15	12:41	8	av_get_sample_fmt_name
arg	12:38	12:41	9	fmt
water	12:38	0:0	10	fmt
stmts	12:44	15:8	7	
water	12:44	0:0	8	{
call	13:12	13:35	8	ff_add_format
arg	13:26	13:30	9	&ret
op	13:26	0:0	10	&
water	13:27	0:0	10	ret
arg	13:32	13:35	9	fmt
water	13:32	0:0	10	fmt
water	13:36	0:0	8	;
water	14:12	0:0	8	fmt
op	14:15	0:0	8	++
water	14:17	0:0	8	;
water	15:8	0:0	8	}
water	16:4	0:0	6	}
return	17:4	17:14	2	ret
water	17:11	0:0	3	ret

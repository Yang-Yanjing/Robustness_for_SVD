func	1:0	19:0	0	static int	parse_synth_channel_sine
params	1:35	0:0	1	
param	1:36	1:56	2	struct sbg_parser *	p
param	2:36	2:66	2	struct sbg_script_synth *	synth
stmnts	0:0	18:12	1	
decl	4:4	4:26	2	double	carrierf
water	4:19	0:0	2	,
decl	4:4	4:26	2	double	beatf
decl	5:4	5:26	2	int	carrier
water	5:15	0:0	2	,
decl	5:4	5:26	2	int	beat
water	5:21	0:0	2	,
decl	5:4	5:26	2	int	vol
if	6:4	7:16	2	(!lex_double (p ,& carrierf ))
cond	6:8	6:32	3	!lex_double (p ,& carrierf )
op	6:8	0:0	4	!
call	6:9	6:32	4	lex_double
arg	6:20	6:21	5	p
water	6:20	0:0	6	p
arg	6:23	6:32	5	&carrierf
op	6:23	0:0	6	&
water	6:24	0:0	6	carrierf
stmts	7:8	7:16	3	
return	7:8	7:16	4	0
water	7:15	0:0	5	0
if	8:4	9:17	2	(!lex_double (p ,& beatf ))
cond	8:8	8:29	3	!lex_double (p ,& beatf )
op	8:8	0:0	4	!
call	8:9	8:29	4	lex_double
arg	8:20	8:21	5	p
water	8:20	0:0	6	p
arg	8:23	8:29	5	&beatf
op	8:23	0:0	6	&
water	8:24	0:0	6	beatf
stmts	9:8	9:17	3	
water	9:8	0:0	4	beatf
op	9:14	0:0	4	=
water	9:16	0:0	4	0
water	9:17	0:0	4	;
call	10:4	10:39	2	FORWARD_ERROR
arg	10:18	10:39	3	parse_volume(p,&vol)
call	10:18	10:38	4	parse_volume
arg	10:31	10:32	5	p
water	10:31	0:0	6	p
arg	10:34	10:38	5	&vol
op	10:34	0:0	6	&
water	10:35	0:0	6	vol
water	10:40	0:0	2	;
if	11:4	13:28	2	(scale_double (p -> log ,carrierf ,1 ,& carrier ) < 0 ||scale_double (p -> log ,beatf ,1 ,& beat ) < 0)
cond	11:8	12:48	3	scale_double (p -> log ,carrierf ,1 ,& carrier ) < 0 ||scale_double (p -> log ,beatf ,1 ,& beat ) < 0
call	11:8	11:50	4	scale_double
arg	11:21	11:27	5	p->log
water	11:21	0:0	6	p
op	11:22	0:0	6	->
water	11:24	0:0	6	log
arg	11:29	11:37	5	carrierf
water	11:29	0:0	6	carrierf
arg	11:39	11:40	5	1
water	11:39	0:0	6	1
arg	11:42	11:50	5	&carrier
op	11:42	0:0	6	&
water	11:43	0:0	6	carrier
op	11:52	0:0	4	<
water	11:54	0:0	4	0
op	11:56	0:0	4	||
call	12:8	12:44	4	scale_double
arg	12:21	12:27	5	p->log
water	12:21	0:0	6	p
op	12:22	0:0	6	->
water	12:24	0:0	6	log
arg	12:29	12:34	5	beatf
water	12:29	0:0	6	beatf
arg	12:36	12:37	5	1
water	12:36	0:0	6	1
arg	12:39	12:44	5	&beat
op	12:39	0:0	6	&
water	12:40	0:0	6	beat
op	12:46	0:0	4	<
water	12:48	0:0	4	0
stmts	13:8	13:28	3	
return	13:8	13:28	4	AVERROR(EDOM)
call	13:15	13:27	5	AVERROR
arg	13:23	13:27	6	EDOM
water	13:23	0:0	7	EDOM
water	14:4	0:0	2	synth
op	14:9	0:0	2	->
water	14:11	0:0	2	type
op	14:19	0:0	2	=
water	14:21	0:0	2	SBG_TYPE_SINE
water	14:34	0:0	2	;
water	15:4	0:0	2	synth
op	15:9	0:0	2	->
water	15:11	0:0	2	carrier
op	15:19	0:0	2	=
water	15:21	0:0	2	carrier
water	15:28	0:0	2	;
water	16:4	0:0	2	synth
op	16:9	0:0	2	->
water	16:11	0:0	2	beat
op	16:19	0:0	2	=
water	16:21	0:0	2	beat
water	16:25	0:0	2	;
water	17:4	0:0	2	synth
op	17:9	0:0	2	->
water	17:11	0:0	2	vol
op	17:19	0:0	2	=
water	17:21	0:0	2	vol
water	17:24	0:0	2	;
return	18:4	18:12	2	1
water	18:11	0:0	3	1

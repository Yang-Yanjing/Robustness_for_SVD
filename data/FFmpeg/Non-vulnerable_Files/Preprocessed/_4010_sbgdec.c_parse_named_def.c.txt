func	1:0	25:0	0	static int	parse_named_def
params	1:26	0:0	1	
param	1:27	1:47	2	struct sbg_parser *	p
stmnts	0:0	24:34	1	
decl	3:4	3:33	2	char	*cursor_save
op	3:22	0:0	2	=
water	3:24	0:0	2	p
op	3:25	0:0	2	->
water	3:27	0:0	2	cursor
decl	4:4	4:26	2	struct sbg_string	name
decl	5:4	5:37	2	struct sbg_script_definition	*def
if	6:4	9:4	2	(!lex_name (p ,& name ) || !lex_char (p ,':' ) || !lex_space (p ))
cond	6:8	6:64	3	!lex_name (p ,& name ) || !lex_char (p ,':' ) || !lex_space (p )
op	6:8	0:0	4	!
call	6:9	6:26	4	lex_name
arg	6:18	6:19	5	p
water	6:18	0:0	6	p
arg	6:21	6:26	5	&name
op	6:21	0:0	6	&
water	6:22	0:0	6	name
op	6:28	0:0	4	||
op	6:31	0:0	4	!
call	6:32	6:47	4	lex_char
arg	6:41	6:42	5	p
water	6:41	0:0	6	p
arg	6:44	6:47	5	':'
water	6:44	0:0	6	':'
op	6:49	0:0	4	||
op	6:52	0:0	4	!
call	6:53	6:64	4	lex_space
arg	6:63	6:64	5	p
water	6:63	0:0	6	p
stmts	6:67	9:4	3	
water	6:67	0:0	4	{
water	7:8	0:0	4	p
op	7:9	0:0	4	->
water	7:11	0:0	4	cursor
op	7:18	0:0	4	=
water	7:20	0:0	4	cursor_save
water	7:31	0:0	4	;
return	8:8	8:16	4	0
water	8:15	0:0	5	0
water	9:4	0:0	4	}
if	10:4	15:4	2	(name . e - name . s == 6 && !memcmp (name . s ,"wave" ,4 ) && name . s [ 4 ] >= '0' && name . s [ 4 ] <= '9' && name . s [ 5 ] >= '0' && name . s [ 5 ] <= '9')
cond	10:8	12:41	3	name . e - name . s == 6 && !memcmp (name . s ,"wave" ,4 ) && name . s [ 4 ] >= '0' && name . s [ 4 ] <= '9' && name . s [ 5 ] >= '0' && name . s [ 5 ] <= '9'
water	10:8	0:0	4	name
op	10:12	0:0	4	.
water	10:13	0:0	4	e
op	10:15	0:0	4	-
water	10:17	0:0	4	name
op	10:21	0:0	4	.
water	10:22	0:0	4	s
op	10:24	0:0	4	==
water	10:27	0:0	4	6
op	10:29	0:0	4	&&
op	10:32	0:0	4	!
call	10:33	10:57	4	memcmp
arg	10:40	10:46	5	name.s
water	10:40	0:0	6	name
op	10:44	0:0	6	.
water	10:45	0:0	6	s
arg	10:48	10:54	5	"wave"
water	10:48	0:0	6	"wave"
arg	10:56	10:57	5	4
water	10:56	0:0	6	4
op	10:59	0:0	4	&&
water	11:8	0:0	4	name
op	11:12	0:0	4	.
water	11:13	0:0	4	s
op	11:14	0:0	4	[
water	11:15	0:0	4	4
op	11:16	0:0	4	]
op	11:18	0:0	4	>=
water	11:21	0:0	4	'0'
op	11:25	0:0	4	&&
water	11:28	0:0	4	name
op	11:32	0:0	4	.
water	11:33	0:0	4	s
op	11:34	0:0	4	[
water	11:35	0:0	4	4
op	11:36	0:0	4	]
op	11:38	0:0	4	<=
water	11:41	0:0	4	'9'
op	11:45	0:0	4	&&
water	12:8	0:0	4	name
op	12:12	0:0	4	.
water	12:13	0:0	4	s
op	12:14	0:0	4	[
water	12:15	0:0	4	5
op	12:16	0:0	4	]
op	12:18	0:0	4	>=
water	12:21	0:0	4	'0'
op	12:25	0:0	4	&&
water	12:28	0:0	4	name
op	12:32	0:0	4	.
water	12:33	0:0	4	s
op	12:34	0:0	4	[
water	12:35	0:0	4	5
op	12:36	0:0	4	]
op	12:38	0:0	4	<=
water	12:41	0:0	4	'9'
stmts	12:46	15:4	3	
water	12:46	0:0	4	{
decl	13:8	13:64	4	int	wavenum
op	13:20	0:0	4	=
water	13:22	0:0	4	(
water	13:23	0:0	4	name
op	13:27	0:0	4	.
water	13:28	0:0	4	s
op	13:29	0:0	4	[
water	13:30	0:0	4	4
op	13:31	0:0	4	]
op	13:33	0:0	4	-
water	13:35	0:0	4	'0'
water	13:38	0:0	4	)
op	13:40	0:0	4	*
water	13:42	0:0	4	10
op	13:45	0:0	4	+
water	13:47	0:0	4	(
water	13:48	0:0	4	name
op	13:52	0:0	4	.
water	13:53	0:0	4	s
op	13:54	0:0	4	[
water	13:55	0:0	4	5
op	13:56	0:0	4	]
op	13:58	0:0	4	-
water	13:60	0:0	4	'0'
water	13:63	0:0	4	)
return	14:8	14:41	4	parse_wave_def(p,wavenum)
call	14:15	14:40	5	parse_wave_def
arg	14:30	14:31	6	p
water	14:30	0:0	7	p
arg	14:33	14:40	6	wavenum
water	14:33	0:0	7	wavenum
water	15:4	0:0	4	}
water	16:4	0:0	2	def
op	16:8	0:0	2	=
call	16:10	17:57	2	alloc_array_elem
arg	16:27	16:47	3	(void**)&p->scs.def
water	16:27	0:0	4	(
water	16:28	0:0	4	void
op	16:33	0:0	4	*
op	16:34	0:0	4	*
water	16:35	0:0	4	)
op	16:36	0:0	4	&
water	16:37	0:0	4	p
op	16:38	0:0	4	->
water	16:40	0:0	4	scs
op	16:43	0:0	4	.
water	16:44	0:0	4	def
arg	16:49	16:61	3	sizeof(*def)
op	16:49	0:0	4	sizeof
water	16:55	0:0	4	(
op	16:56	0:0	4	*
water	16:57	0:0	4	def
water	16:60	0:0	4	)
arg	17:27	17:41	3	&p->scs.nb_def
op	17:27	0:0	4	&
water	17:28	0:0	4	p
op	17:29	0:0	4	->
water	17:31	0:0	4	scs
op	17:34	0:0	4	.
water	17:35	0:0	4	nb_def
arg	17:43	17:57	3	&p->nb_def_max
op	17:43	0:0	4	&
water	17:44	0:0	4	p
op	17:45	0:0	4	->
water	17:47	0:0	4	nb_def_max
water	17:58	0:0	2	;
if	18:4	19:30	2	(! def)
cond	18:8	18:9	3	! def
op	18:8	0:0	4	!
water	18:9	0:0	4	def
stmts	19:8	19:30	3	
return	19:8	19:30	4	AVERROR(ENOMEM)
call	19:15	19:29	5	AVERROR
arg	19:23	19:29	6	ENOMEM
water	19:23	0:0	7	ENOMEM
water	20:4	0:0	2	def
op	20:7	0:0	2	->
water	20:9	0:0	2	name
op	20:18	0:0	2	=
water	20:20	0:0	2	name
op	20:24	0:0	2	.
water	20:25	0:0	2	s
water	20:26	0:0	2	;
water	21:4	0:0	2	def
op	21:7	0:0	2	->
water	21:9	0:0	2	name_len
op	21:18	0:0	2	=
water	21:20	0:0	2	name
op	21:24	0:0	2	.
water	21:25	0:0	2	e
op	21:27	0:0	2	-
water	21:29	0:0	2	name
op	21:33	0:0	2	.
water	21:34	0:0	2	s
water	21:35	0:0	2	;
if	22:4	23:38	2	(lex_char (p ,'{' ))
cond	22:8	22:23	3	lex_char (p ,'{' )
call	22:8	22:23	4	lex_char
arg	22:17	22:18	5	p
water	22:17	0:0	6	p
arg	22:20	22:23	5	'{'
water	22:20	0:0	6	'{'
stmts	23:8	23:38	3	
return	23:8	23:38	4	parse_block_def(p,def)
call	23:15	23:37	5	parse_block_def
arg	23:31	23:32	6	p
water	23:31	0:0	7	p
arg	23:34	23:37	6	def
water	23:34	0:0	7	def
return	24:4	24:34	2	parse_synth_def(p,def)
call	24:11	24:33	3	parse_synth_def
arg	24:27	24:28	4	p
water	24:27	0:0	5	p
arg	24:30	24:33	4	def
water	24:30	0:0	5	def

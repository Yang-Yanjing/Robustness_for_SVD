func	1:0	22:0	0	static int	mov_write_chpl_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:65	2	AVFormatContext *	s
stmnts	0:0	21:31	1	
decl	3:4	3:31	2	int64_t	pos
op	3:16	0:0	2	=
call	3:18	3:30	3	avio_tell
arg	3:28	3:30	4	pb
water	3:28	0:0	5	pb
decl	4:4	4:51	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:51	2	int	nb_chapters
op	4:23	0:0	2	=
call	4:25	4:50	3	FFMIN
arg	4:31	4:45	4	s->nb_chapters
water	4:31	0:0	5	s
op	4:32	0:0	5	->
water	4:34	0:0	5	nb_chapters
arg	4:47	4:50	4	255
water	4:47	0:0	5	255
call	5:4	5:19	2	avio_wb32
arg	5:14	5:16	3	pb
water	5:14	0:0	4	pb
arg	5:18	5:19	3	0
water	5:18	0:0	4	0
water	5:20	0:0	2	;
call	6:4	6:27	2	ffio_wfourcc
arg	6:17	6:19	3	pb
water	6:17	0:0	4	pb
arg	6:21	6:27	3	"chpl"
water	6:21	0:0	4	"chpl"
water	6:28	0:0	2	;
call	7:4	7:28	2	avio_wb32
arg	7:14	7:16	3	pb
water	7:14	0:0	4	pb
arg	7:18	7:28	3	0x01000000
water	7:18	0:0	4	0
water	7:19	0:0	4	x01000000
water	7:29	0:0	2	;
call	8:4	8:19	2	avio_wb32
arg	8:14	8:16	3	pb
water	8:14	0:0	4	pb
arg	8:18	8:19	3	0
water	8:18	0:0	4	0
water	8:20	0:0	2	;
call	9:4	9:27	2	avio_w8
arg	9:12	9:14	3	pb
water	9:12	0:0	4	pb
arg	9:16	9:27	3	nb_chapters
water	9:16	0:0	4	nb_chapters
water	9:28	0:0	2	;
for	10:4	20:4	2	(i = 0 ;i < nb_chapters;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:20	3	i < nb_chapters
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	nb_chapters
forexpr	10:33	10:34	3	i ++
water	10:33	0:0	4	i
op	10:34	0:0	4	++
stmts	10:38	20:4	3	
water	10:38	0:0	4	{
decl	11:8	11:37	4	AVChapter	*c
op	11:21	0:0	4	=
water	11:23	0:0	4	s
op	11:24	0:0	4	->
water	11:26	0:0	4	chapters
op	11:34	0:0	4	[
water	11:35	0:0	4	i
op	11:36	0:0	4	]
decl	12:8	12:28	4	AVDictionaryEntry	*t
call	13:8	13:84	4	avio_wb64
arg	13:18	13:20	5	pb
water	13:18	0:0	6	pb
arg	13:22	13:84	5	av_rescale_q(c->start,c->time_base,(AVRational){1,10000000})
call	13:22	13:83	6	av_rescale_q
arg	13:35	13:43	7	c->start
water	13:35	0:0	8	c
op	13:36	0:0	8	->
water	13:38	0:0	8	start
arg	13:45	13:57	7	c->time_base
water	13:45	0:0	8	c
op	13:46	0:0	8	->
water	13:48	0:0	8	time_base
arg	13:59	13:83	7	(AVRational){1,10000000}
water	13:59	0:0	8	(
water	13:60	0:0	8	AVRational
water	13:70	0:0	8	)
water	13:71	0:0	8	{
water	13:72	0:0	8	1
water	13:73	0:0	8	,
water	13:74	0:0	8	10000000
water	13:82	0:0	8	}
water	13:85	0:0	4	;
if	14:8	18:8	4	(( t =av_dict_get (c -> metadata ,"title" ,NULL ,0 ) ))
cond	14:12	14:59	5	( t =av_dict_get (c -> metadata ,"title" ,NULL ,0 ) )
water	14:12	0:0	6	(
water	14:13	0:0	6	t
op	14:15	0:0	6	=
call	14:17	14:58	6	av_dict_get
arg	14:29	14:40	7	c->metadata
water	14:29	0:0	8	c
op	14:30	0:0	8	->
water	14:32	0:0	8	metadata
arg	14:42	14:49	7	"title"
water	14:42	0:0	8	"title"
arg	14:51	14:55	7	NULL
water	14:51	0:0	8	NULL
arg	14:57	14:58	7	0
water	14:57	0:0	8	0
water	14:59	0:0	6	)
stmts	14:62	18:8	5	
water	14:62	0:0	6	{
decl	15:12	15:50	6	int	len
op	15:20	0:0	6	=
call	15:22	15:49	7	FFMIN
arg	15:28	15:44	8	strlen(t->value)
call	15:28	15:43	9	strlen
arg	15:35	15:43	10	t->value
water	15:35	0:0	11	t
op	15:36	0:0	11	->
water	15:38	0:0	11	value
arg	15:46	15:49	8	255
water	15:46	0:0	9	255
call	16:12	16:27	6	avio_w8
arg	16:20	16:22	7	pb
water	16:20	0:0	8	pb
arg	16:24	16:27	7	len
water	16:24	0:0	8	len
water	16:28	0:0	6	;
call	17:12	17:40	6	avio_write
arg	17:23	17:25	7	pb
water	17:23	0:0	8	pb
arg	17:27	17:35	7	t->value
water	17:27	0:0	8	t
op	17:28	0:0	8	->
water	17:30	0:0	8	value
arg	17:37	17:40	7	len
water	17:37	0:0	8	len
water	17:41	0:0	6	;
water	18:8	0:0	6	}
else	18:10	19:26	4
stmts	19:12	19:26	5	
call	19:12	19:25	6	avio_w8
arg	19:20	19:22	7	pb
water	19:20	0:0	8	pb
arg	19:24	19:25	7	0
water	19:24	0:0	8	0
water	19:26	0:0	6	;
water	20:4	0:0	4	}
return	21:4	21:31	2	update_size(pb,pos)
call	21:11	21:30	3	update_size
arg	21:23	21:25	4	pb
water	21:23	0:0	5	pb
arg	21:27	21:30	4	pos
water	21:27	0:0	5	pos

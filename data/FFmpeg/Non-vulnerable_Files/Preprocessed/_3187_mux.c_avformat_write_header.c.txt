func	1:0	25:0	0	int	avformat_write_header
params	1:25	0:0	1	
param	1:26	1:44	2	AVFormatContext *	s
param	1:46	1:68	2	AVDictionary * *	options
stmnts	0:0	24:12	1	
decl	3:4	3:15	2	int	ret
op	3:12	0:0	2	=
water	3:14	0:0	2	0
if	4:4	5:18	2	(( ret =init_muxer (s ,options ) ) < 0)
cond	4:8	4:41	3	( ret =init_muxer (s ,options ) ) < 0
water	4:8	0:0	4	(
water	4:9	0:0	4	ret
op	4:13	0:0	4	=
call	4:15	4:36	4	init_muxer
arg	4:26	4:27	5	s
water	4:26	0:0	6	s
arg	4:29	4:36	5	options
water	4:29	0:0	6	options
water	4:37	0:0	4	)
op	4:39	0:0	4	<
water	4:41	0:0	4	0
stmts	5:8	5:18	3	
return	5:8	5:18	4	ret
water	5:15	0:0	5	ret
if	6:4	14:4	2	(s -> oformat -> write_header)
cond	6:8	6:20	3	s -> oformat -> write_header
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	oformat
op	6:18	0:0	4	->
water	6:20	0:0	4	write_header
stmts	6:34	14:4	3	
water	6:34	0:0	4	{
water	7:8	0:0	4	ret
op	7:12	0:0	4	=
call	7:14	7:40	4	s->oformat->write_header
arg	7:39	7:40	5	s
water	7:39	0:0	6	s
water	7:41	0:0	4	;
if	8:8	9:30	4	(ret >= 0 && s -> pb && s -> pb -> error < 0)
cond	8:12	8:48	5	ret >= 0 && s -> pb && s -> pb -> error < 0
water	8:12	0:0	6	ret
op	8:16	0:0	6	>=
water	8:19	0:0	6	0
op	8:21	0:0	6	&&
water	8:24	0:0	6	s
op	8:25	0:0	6	->
water	8:27	0:0	6	pb
op	8:30	0:0	6	&&
water	8:33	0:0	6	s
op	8:34	0:0	6	->
water	8:36	0:0	6	pb
op	8:38	0:0	6	->
water	8:40	0:0	6	error
op	8:46	0:0	6	<
water	8:48	0:0	6	0
stmts	9:12	9:30	5	
water	9:12	0:0	6	ret
op	9:16	0:0	6	=
water	9:18	0:0	6	s
op	9:19	0:0	6	->
water	9:21	0:0	6	pb
op	9:23	0:0	6	->
water	9:25	0:0	6	error
water	9:30	0:0	6	;
if	10:8	11:22	4	(ret < 0)
cond	10:12	10:18	5	ret < 0
water	10:12	0:0	6	ret
op	10:16	0:0	6	<
water	10:18	0:0	6	0
stmts	11:12	11:22	5	
return	11:12	11:22	6	ret
water	11:19	0:0	7	ret
if	12:8	13:29	4	(s -> flush_packets && s -> pb && s -> pb -> error >= 0 && s -> flags & AVFMT_FLAG_FLUSH_PACKETS)
cond	12:12	12:73	5	s -> flush_packets && s -> pb && s -> pb -> error >= 0 && s -> flags & AVFMT_FLAG_FLUSH_PACKETS
water	12:12	0:0	6	s
op	12:13	0:0	6	->
water	12:15	0:0	6	flush_packets
op	12:29	0:0	6	&&
water	12:32	0:0	6	s
op	12:33	0:0	6	->
water	12:35	0:0	6	pb
op	12:38	0:0	6	&&
water	12:41	0:0	6	s
op	12:42	0:0	6	->
water	12:44	0:0	6	pb
op	12:46	0:0	6	->
water	12:48	0:0	6	error
op	12:54	0:0	6	>=
water	12:57	0:0	6	0
op	12:59	0:0	6	&&
water	12:62	0:0	6	s
op	12:63	0:0	6	->
water	12:65	0:0	6	flags
op	12:71	0:0	6	&
water	12:73	0:0	6	AVFMT_FLAG_FLUSH_PACKETS
stmts	13:12	13:29	5	
call	13:12	13:28	6	avio_flush
arg	13:23	13:28	7	s->pb
water	13:23	0:0	8	s
op	13:24	0:0	8	->
water	13:26	0:0	8	pb
water	13:29	0:0	6	;
water	14:4	0:0	4	}
if	15:4	16:18	2	(( ret =init_pts (s ) ) < 0)
cond	15:8	15:30	3	( ret =init_pts (s ) ) < 0
water	15:8	0:0	4	(
water	15:9	0:0	4	ret
op	15:13	0:0	4	=
call	15:15	15:25	4	init_pts
arg	15:24	15:25	5	s
water	15:24	0:0	6	s
water	15:26	0:0	4	)
op	15:28	0:0	4	<
water	15:30	0:0	4	0
stmts	16:8	16:18	3	
return	16:8	16:18	4	ret
water	16:15	0:0	5	ret
if	17:4	23:4	2	(s -> avoid_negative_ts < 0)
cond	17:8	17:31	3	s -> avoid_negative_ts < 0
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	avoid_negative_ts
op	17:29	0:0	4	<
water	17:31	0:0	4	0
stmts	17:34	23:4	3	
water	17:34	0:0	4	{
call	18:8	18:66	4	av_assert2
arg	18:19	18:66	5	s->avoid_negative_ts==AVFMT_AVOID_NEG_TS_AUTO
water	18:19	0:0	6	s
op	18:20	0:0	6	->
water	18:22	0:0	6	avoid_negative_ts
op	18:40	0:0	6	==
water	18:43	0:0	6	AVFMT_AVOID_NEG_TS_AUTO
water	18:67	0:0	4	;
if	19:8	21:8	4	(s -> oformat -> flags & ( AVFMT_TS_NEGATIVE | AVFMT_NOTIMESTAMPS ))
cond	19:12	19:71	5	s -> oformat -> flags & ( AVFMT_TS_NEGATIVE | AVFMT_NOTIMESTAMPS )
water	19:12	0:0	6	s
op	19:13	0:0	6	->
water	19:15	0:0	6	oformat
op	19:22	0:0	6	->
water	19:24	0:0	6	flags
op	19:30	0:0	6	&
water	19:32	0:0	6	(
water	19:33	0:0	6	AVFMT_TS_NEGATIVE
op	19:51	0:0	6	|
water	19:53	0:0	6	AVFMT_NOTIMESTAMPS
water	19:71	0:0	6	)
stmts	19:74	21:8	5	
water	19:74	0:0	6	{
water	20:12	0:0	6	s
op	20:13	0:0	6	->
water	20:15	0:0	6	avoid_negative_ts
op	20:33	0:0	6	=
water	20:35	0:0	6	0
water	20:36	0:0	6	;
water	21:8	0:0	6	}
else	21:10	22:71	4
stmts	22:12	22:71	5	
water	22:12	0:0	6	s
op	22:13	0:0	6	->
water	22:15	0:0	6	avoid_negative_ts
op	22:33	0:0	6	=
water	22:35	0:0	6	AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE
water	22:71	0:0	6	;
water	23:4	0:0	4	}
return	24:4	24:12	2	0
water	24:11	0:0	3	0

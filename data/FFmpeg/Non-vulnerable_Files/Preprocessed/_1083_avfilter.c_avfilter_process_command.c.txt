func	1:0	19:0	0	int	avfilter_process_command
params	1:28	0:0	1	
param	1:29	1:52	2	AVFilterContext *	filter
param	1:54	1:69	2	const char *	cmd
param	1:71	1:86	2	const char *	arg
param	1:88	1:97	2	char *	res
param	1:99	1:110	2	int	res_len
param	1:112	1:121	2	int	flags
stmnts	3:4	18:26	1	
if	3:4	13:4	2	(!strcmp (cmd ,"ping" ))
cond	3:7	3:26	3	!strcmp (cmd ,"ping" )
op	3:7	0:0	4	!
call	3:8	3:26	4	strcmp
arg	3:15	3:18	5	cmd
water	3:15	0:0	6	cmd
arg	3:20	3:26	5	"ping"
water	3:20	0:0	6	"ping"
stmts	3:28	13:4	3	
water	3:28	0:0	4	{
decl	4:8	4:33	4	char	local_res[256]
op	4:28	0:0	4	=
water	4:30	0:0	4	{
water	4:31	0:0	4	0
water	4:32	0:0	4	}
if	5:8	8:8	4	(! res)
cond	5:12	5:13	5	! res
op	5:12	0:0	6	!
water	5:13	0:0	6	res
stmts	5:18	8:8	5	
water	5:18	0:0	6	{
water	6:12	0:0	6	res
op	6:16	0:0	6	=
water	6:18	0:0	6	local_res
water	6:27	0:0	6	;
water	7:12	0:0	6	res_len
op	7:20	0:0	6	=
op	7:22	0:0	6	sizeof
water	7:28	0:0	6	(
water	7:29	0:0	6	local_res
water	7:38	0:0	6	)
water	7:39	0:0	6	;
water	8:8	0:0	6	}
call	9:8	9:89	4	av_strlcatf
arg	9:20	9:23	5	res
water	9:20	0:0	6	res
arg	9:25	9:32	5	res_len
water	9:25	0:0	6	res_len
arg	9:34	9:53	5	"pong from:%s %s\n"
water	9:34	0:0	6	"pong from:%s %s\n"
arg	9:55	9:75	5	filter->filter->name
water	9:55	0:0	6	filter
op	9:61	0:0	6	->
water	9:63	0:0	6	filter
op	9:69	0:0	6	->
water	9:71	0:0	6	name
arg	9:77	9:89	5	filter->name
water	9:77	0:0	6	filter
op	9:83	0:0	6	->
water	9:85	0:0	6	name
water	9:90	0:0	4	;
if	10:8	11:50	4	(res == local_res)
cond	10:12	10:19	5	res == local_res
water	10:12	0:0	6	res
op	10:16	0:0	6	==
water	10:19	0:0	6	local_res
stmts	11:12	11:50	5	
call	11:12	11:49	6	av_log
arg	11:19	11:25	7	filter
water	11:19	0:0	8	filter
arg	11:27	11:38	7	AV_LOG_INFO
water	11:27	0:0	8	AV_LOG_INFO
arg	11:40	11:44	7	"%s"
water	11:40	0:0	8	"%s"
arg	11:46	11:49	7	res
water	11:46	0:0	8	res
water	11:50	0:0	6	;
return	12:8	12:16	4	0
water	12:15	0:0	5	0
water	13:4	0:0	4	}
else	13:5	15:4	2
stmts	13:10	15:4	3	
if	13:10	15:4	4	(!strcmp (cmd ,"enable" ))
cond	13:13	13:34	5	!strcmp (cmd ,"enable" )
op	13:13	0:0	6	!
call	13:14	13:34	6	strcmp
arg	13:21	13:24	7	cmd
water	13:21	0:0	8	cmd
arg	13:26	13:34	7	"enable"
water	13:26	0:0	8	"enable"
stmts	13:37	15:4	5	
water	13:37	0:0	6	{
return	14:8	14:43	6	set_enable_expr(filter,arg)
call	14:15	14:42	7	set_enable_expr
arg	14:31	14:37	8	filter
water	14:31	0:0	9	filter
arg	14:39	14:42	8	arg
water	14:39	0:0	9	arg
water	15:4	0:0	6	}
else	15:5	17:4	2
stmts	15:10	17:4	3	
if	15:10	17:4	4	(filter -> filter -> process_command)
cond	15:13	15:29	5	filter -> filter -> process_command
water	15:13	0:0	6	filter
op	15:19	0:0	6	->
water	15:21	0:0	6	filter
op	15:27	0:0	6	->
water	15:29	0:0	6	process_command
stmts	15:46	17:4	5	
water	15:46	0:0	6	{
return	16:8	16:85	6	filter->filter->process_command(filter,cmd,arg,res,res_len,flags)
call	16:15	16:84	7	filter->filter->process_command
arg	16:47	16:53	8	filter
water	16:47	0:0	9	filter
arg	16:55	16:58	8	cmd
water	16:55	0:0	9	cmd
arg	16:60	16:63	8	arg
water	16:60	0:0	9	arg
arg	16:65	16:68	8	res
water	16:65	0:0	9	res
arg	16:70	16:77	8	res_len
water	16:70	0:0	9	res_len
arg	16:79	16:84	8	flags
water	16:79	0:0	9	flags
water	17:4	0:0	6	}
return	18:4	18:26	2	AVERROR(ENOSYS)
call	18:11	18:25	3	AVERROR
arg	18:19	18:25	4	ENOSYS
water	18:19	0:0	5	ENOSYS

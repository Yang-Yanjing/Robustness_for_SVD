func	1:0	20:0	0	int	av_rc4_init
params	1:15	0:0	1	
param	1:16	1:24	2	AVRC4 *	r
param	1:26	1:44	2	const uint8_t *	key
param	1:46	1:58	2	int	key_bits
param	1:60	1:71	2	int	decrypt
stmnts	0:0	19:12	1	
decl	2:4	2:12	2	int	i
water	2:9	0:0	2	,
decl	2:4	2:12	2	int	j
decl	3:4	3:13	2	uint8_t	y
decl	4:4	4:29	2	uint8_t	*state
op	4:19	0:0	2	=
water	4:21	0:0	2	r
op	4:22	0:0	2	->
water	4:24	0:0	2	state
decl	5:4	5:30	2	int	keylen
op	5:15	0:0	2	=
water	5:17	0:0	2	key_bits
op	5:26	0:0	2	>>
water	5:29	0:0	2	3
if	6:4	7:17	2	(key_bits & 7)
cond	6:8	6:19	3	key_bits & 7
water	6:8	0:0	4	key_bits
op	6:17	0:0	4	&
water	6:19	0:0	4	7
stmts	7:8	7:17	3	
return	7:8	7:17	4	-1
op	7:15	0:0	5	-
water	7:16	0:0	5	1
for	8:4	9:20	2	(i = 0 ;i < 256;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < 256
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	256
forexpr	8:25	8:26	3	i ++
water	8:25	0:0	4	i
op	8:26	0:0	4	++
stmts	9:8	9:20	3	
water	9:8	0:0	4	state
op	9:13	0:0	4	[
water	9:14	0:0	4	i
op	9:15	0:0	4	]
op	9:17	0:0	4	=
water	9:19	0:0	4	i
water	9:20	0:0	4	;
water	10:4	0:0	2	y
op	10:6	0:0	2	=
water	10:8	0:0	2	0
water	10:9	0:0	2	;
for	12:4	16:4	2	(j = 0 , i = 0 ;i < 256;i ++ , j ++)
forinit	12:9	12:21	3	j = 0 , i = 0 ;
water	12:9	0:0	4	j
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	,
water	12:16	0:0	4	i
op	12:18	0:0	4	=
water	12:20	0:0	4	0
water	12:21	0:0	4	;
cond	12:23	12:27	3	i < 256
water	12:23	0:0	4	i
op	12:25	0:0	4	<
water	12:27	0:0	4	256
forexpr	12:32	12:38	3	i ++ , j ++
water	12:32	0:0	4	i
op	12:33	0:0	4	++
water	12:35	0:0	4	,
water	12:37	0:0	4	j
op	12:38	0:0	4	++
stmts	12:42	16:4	3	
water	12:42	0:0	4	{
if	13:8	13:30	4	(j == keylen)
cond	13:12	13:17	5	j == keylen
water	13:12	0:0	6	j
op	13:14	0:0	6	==
water	13:17	0:0	6	keylen
stmts	13:25	13:30	5	
water	13:25	0:0	6	j
op	13:27	0:0	6	=
water	13:29	0:0	6	0
water	13:30	0:0	6	;
water	14:8	0:0	4	y
op	14:10	0:0	4	+=
water	14:13	0:0	4	state
op	14:18	0:0	4	[
water	14:19	0:0	4	i
op	14:20	0:0	4	]
op	14:22	0:0	4	+
water	14:24	0:0	4	key
op	14:27	0:0	4	[
water	14:28	0:0	4	j
op	14:29	0:0	4	]
water	14:30	0:0	4	;
call	15:8	15:42	4	FFSWAP
arg	15:15	15:22	5	uint8_t
water	15:15	0:0	6	uint8_t
arg	15:24	15:32	5	state[i]
water	15:24	0:0	6	state
op	15:29	0:0	6	[
water	15:30	0:0	6	i
op	15:31	0:0	6	]
arg	15:34	15:42	5	state[y]
water	15:34	0:0	6	state
op	15:39	0:0	6	[
water	15:40	0:0	6	y
op	15:41	0:0	6	]
water	15:43	0:0	4	;
water	16:4	0:0	4	}
water	17:4	0:0	2	r
op	17:5	0:0	2	->
water	17:7	0:0	2	x
op	17:9	0:0	2	=
water	17:11	0:0	2	1
water	17:12	0:0	2	;
water	18:4	0:0	2	r
op	18:5	0:0	2	->
water	18:7	0:0	2	y
op	18:9	0:0	2	=
water	18:11	0:0	2	state
op	18:16	0:0	2	[
water	18:17	0:0	2	1
op	18:18	0:0	2	]
water	18:19	0:0	2	;
return	19:4	19:12	2	0
water	19:11	0:0	3	0

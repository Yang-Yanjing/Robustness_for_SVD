func	1:0	40:0	0	AVFilterBufferRef *	avfilter_ref_buffer
params	1:38	0:0	1	
param	1:39	1:61	2	AVFilterBufferRef *	ref
param	1:63	1:72	2	int	pmask
stmnts	0:0	39:14	1	
decl	3:4	3:65	2	AVFilterBufferRef	*ret
op	3:27	0:0	2	=
call	3:29	3:64	3	av_malloc
arg	3:39	3:64	4	sizeof(AVFilterBufferRef)
op	3:39	0:0	5	sizeof
water	3:45	0:0	5	(
water	3:46	0:0	5	AVFilterBufferRef
water	3:63	0:0	5	)
if	4:4	5:19	2	(! ret)
cond	4:8	4:9	3	! ret
op	4:8	0:0	4	!
water	4:9	0:0	4	ret
stmts	5:8	5:19	3	
return	5:8	5:19	4	NULL
water	5:15	0:0	5	NULL
op	6:4	0:0	2	*
water	6:5	0:0	2	ret
op	6:9	0:0	2	=
op	6:11	0:0	2	*
water	6:12	0:0	2	ref
water	6:15	0:0	2	;
water	7:4	0:0	2	ret
op	7:7	0:0	2	->
water	7:9	0:0	2	metadata
op	7:18	0:0	2	=
water	7:20	0:0	2	NULL
water	7:24	0:0	2	;
call	8:4	8:49	2	av_dict_copy
arg	8:17	8:31	3	&ret->metadata
op	8:17	0:0	4	&
water	8:18	0:0	4	ret
op	8:21	0:0	4	->
water	8:23	0:0	4	metadata
arg	8:33	8:46	3	ref->metadata
water	8:33	0:0	4	ref
op	8:36	0:0	4	->
water	8:38	0:0	4	metadata
arg	8:48	8:49	3	0
water	8:48	0:0	4	0
water	8:50	0:0	2	;
if	9:4	17:4	2	(ref -> type == AVMEDIA_TYPE_VIDEO)
cond	9:8	9:21	3	ref -> type == AVMEDIA_TYPE_VIDEO
water	9:8	0:0	4	ref
op	9:11	0:0	4	->
water	9:13	0:0	4	type
op	9:18	0:0	4	==
water	9:21	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	9:41	17:4	3	
water	9:41	0:0	4	{
water	10:8	0:0	4	ret
op	10:11	0:0	4	->
water	10:13	0:0	4	video
op	10:19	0:0	4	=
call	10:21	10:66	4	av_malloc
arg	10:31	10:66	5	sizeof(AVFilterBufferRefVideoProps)
op	10:31	0:0	6	sizeof
water	10:37	0:0	6	(
water	10:38	0:0	6	AVFilterBufferRefVideoProps
water	10:65	0:0	6	)
water	10:67	0:0	4	;
if	11:8	14:8	4	(! ret -> video)
cond	11:12	11:18	5	! ret -> video
op	11:12	0:0	6	!
water	11:13	0:0	6	ret
op	11:16	0:0	6	->
water	11:18	0:0	6	video
stmts	11:25	14:8	5	
water	11:25	0:0	6	{
call	12:12	12:23	6	av_free
arg	12:20	12:23	7	ret
water	12:20	0:0	8	ret
water	12:24	0:0	6	;
return	13:12	13:23	6	NULL
water	13:19	0:0	7	NULL
water	14:8	0:0	6	}
call	15:8	15:47	4	copy_video_props
arg	15:25	15:35	5	ret->video
water	15:25	0:0	6	ret
op	15:28	0:0	6	->
water	15:30	0:0	6	video
arg	15:37	15:47	5	ref->video
water	15:37	0:0	6	ref
op	15:40	0:0	6	->
water	15:42	0:0	6	video
water	15:48	0:0	4	;
water	16:8	0:0	4	ret
op	16:11	0:0	4	->
water	16:13	0:0	4	extended_data
op	16:27	0:0	4	=
water	16:29	0:0	4	ret
op	16:32	0:0	4	->
water	16:34	0:0	4	data
water	16:38	0:0	4	;
water	17:4	0:0	4	}
else	17:6	36:4	2
stmts	17:11	36:4	3	
if	17:11	36:4	4	(ref -> type == AVMEDIA_TYPE_AUDIO)
cond	17:15	17:28	5	ref -> type == AVMEDIA_TYPE_AUDIO
water	17:15	0:0	6	ref
op	17:18	0:0	6	->
water	17:20	0:0	6	type
op	17:25	0:0	6	==
water	17:28	0:0	6	AVMEDIA_TYPE_AUDIO
stmts	17:48	36:4	5	
water	17:48	0:0	6	{
water	18:8	0:0	6	ret
op	18:11	0:0	6	->
water	18:13	0:0	6	audio
op	18:19	0:0	6	=
call	18:21	18:66	6	av_malloc
arg	18:31	18:66	7	sizeof(AVFilterBufferRefAudioProps)
op	18:31	0:0	8	sizeof
water	18:37	0:0	8	(
water	18:38	0:0	8	AVFilterBufferRefAudioProps
water	18:65	0:0	8	)
water	18:67	0:0	6	;
if	19:8	22:8	6	(! ret -> audio)
cond	19:12	19:18	7	! ret -> audio
op	19:12	0:0	8	!
water	19:13	0:0	8	ret
op	19:16	0:0	8	->
water	19:18	0:0	8	audio
stmts	19:25	22:8	7	
water	19:25	0:0	8	{
call	20:12	20:23	8	av_free
arg	20:20	20:23	9	ret
water	20:20	0:0	10	ret
water	20:24	0:0	8	;
return	21:12	21:23	8	NULL
water	21:19	0:0	9	NULL
water	22:8	0:0	8	}
op	23:8	0:0	6	*
water	23:9	0:0	6	ret
op	23:12	0:0	6	->
water	23:14	0:0	6	audio
op	23:20	0:0	6	=
op	23:22	0:0	6	*
water	23:23	0:0	6	ref
op	23:26	0:0	6	->
water	23:28	0:0	6	audio
water	23:33	0:0	6	;
if	24:8	34:8	6	(ref -> extended_data && ref -> extended_data != ref -> data)
cond	24:12	24:61	7	ref -> extended_data && ref -> extended_data != ref -> data
water	24:12	0:0	8	ref
op	24:15	0:0	8	->
water	24:17	0:0	8	extended_data
op	24:31	0:0	8	&&
water	24:34	0:0	8	ref
op	24:37	0:0	8	->
water	24:39	0:0	8	extended_data
op	24:53	0:0	8	!=
water	24:56	0:0	8	ref
op	24:59	0:0	8	->
water	24:61	0:0	8	data
stmts	24:67	34:8	7	
water	24:67	0:0	8	{
decl	25:12	25:91	8	int	nb_channels
op	25:28	0:0	8	=
call	25:30	25:90	9	av_get_channel_layout_nb_channels
arg	25:64	25:90	10	ref->audio->channel_layout
water	25:64	0:0	11	ref
op	25:67	0:0	11	->
water	25:69	0:0	11	audio
op	25:74	0:0	11	->
water	25:76	0:0	11	channel_layout
if	26:12	31:12	8	(! ( ret -> extended_data =av_malloc_array (sizeof ( * ret -> extended_data ) ,nb_channels ) ))
cond	26:16	27:61	9	! ( ret -> extended_data =av_malloc_array (sizeof ( * ret -> extended_data ) ,nb_channels ) )
op	26:16	0:0	10	!
water	26:17	0:0	10	(
water	26:18	0:0	10	ret
op	26:21	0:0	10	->
water	26:23	0:0	10	extended_data
op	26:37	0:0	10	=
call	26:39	27:60	10	av_malloc_array
arg	26:55	26:82	11	sizeof(*ret->extended_data)
op	26:55	0:0	12	sizeof
water	26:61	0:0	12	(
op	26:62	0:0	12	*
water	26:63	0:0	12	ret
op	26:66	0:0	12	->
water	26:68	0:0	12	extended_data
water	26:81	0:0	12	)
arg	27:49	27:60	11	nb_channels
water	27:49	0:0	12	nb_channels
water	27:61	0:0	10	)
stmts	27:64	31:12	9	
water	27:64	0:0	10	{
call	28:16	28:36	10	av_freep
arg	28:25	28:36	11	&ret->audio
op	28:25	0:0	12	&
water	28:26	0:0	12	ret
op	28:29	0:0	12	->
water	28:31	0:0	12	audio
water	28:37	0:0	10	;
call	29:16	29:29	10	av_freep
arg	29:25	29:29	11	&ret
op	29:25	0:0	12	&
water	29:26	0:0	12	ret
water	29:30	0:0	10	;
return	30:16	30:27	10	NULL
water	30:23	0:0	11	NULL
water	31:12	0:0	10	}
call	32:12	33:60	8	memcpy
arg	32:19	32:37	9	ret->extended_data
water	32:19	0:0	10	ret
op	32:22	0:0	10	->
water	32:24	0:0	10	extended_data
arg	32:39	32:57	9	ref->extended_data
water	32:39	0:0	10	ref
op	32:42	0:0	10	->
water	32:44	0:0	10	extended_data
arg	33:19	33:60	9	sizeof(*ret->extended_data)*nb_channels
op	33:19	0:0	10	sizeof
water	33:25	0:0	10	(
op	33:26	0:0	10	*
water	33:27	0:0	10	ret
op	33:30	0:0	10	->
water	33:32	0:0	10	extended_data
water	33:45	0:0	10	)
op	33:47	0:0	10	*
water	33:49	0:0	10	nb_channels
water	33:61	0:0	8	;
water	34:8	0:0	8	}
else	34:10	35:42	6
stmts	35:12	35:42	7	
water	35:12	0:0	8	ret
op	35:15	0:0	8	->
water	35:17	0:0	8	extended_data
op	35:31	0:0	8	=
water	35:33	0:0	8	ret
op	35:36	0:0	8	->
water	35:38	0:0	8	data
water	35:42	0:0	8	;
water	36:4	0:0	6	}
water	37:4	0:0	2	ret
op	37:7	0:0	2	->
water	37:9	0:0	2	perms
op	37:15	0:0	2	&=
water	37:18	0:0	2	pmask
water	37:23	0:0	2	;
water	38:4	0:0	2	ret
op	38:7	0:0	2	->
water	38:9	0:0	2	buf
op	38:12	0:0	2	->
water	38:14	0:0	2	refcount
op	38:23	0:0	2	++
water	38:25	0:0	2	;
return	39:4	39:14	2	ret
water	39:11	0:0	3	ret

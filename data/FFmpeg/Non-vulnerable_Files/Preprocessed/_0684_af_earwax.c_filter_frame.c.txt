func	1:0	29:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:64	2	AVFrame *	insamples
stmnts	0:0	28:47	1	
decl	3:4	3:51	2	AVFilterLink	*outlink
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
op	3:39	0:0	2	->
water	3:41	0:0	2	outputs
op	3:48	0:0	2	[
water	3:49	0:0	2	0
op	3:50	0:0	2	]
decl	4:4	4:36	2	int16_t	*taps
water	4:17	0:0	2	,
decl	4:4	4:36	2	int16_t	*endin
water	4:25	0:0	2	,
decl	4:4	4:36	2	int16_t	*in
water	4:30	0:0	2	,
decl	4:4	4:36	2	int16_t	*out
decl	5:4	5:76	2	AVFrame	*outsamples
op	5:24	0:0	2	=
call	5:26	5:75	3	ff_get_audio_buffer
arg	5:46	5:52	4	inlink
water	5:46	0:0	5	inlink
arg	5:54	5:75	4	insamples->nb_samples
water	5:54	0:0	5	insamples
op	5:63	0:0	5	->
water	5:65	0:0	5	nb_samples
decl	6:4	6:11	2	int	len
if	7:4	10:4	2	(! outsamples)
cond	7:8	7:9	3	! outsamples
op	7:8	0:0	4	!
water	7:9	0:0	4	outsamples
stmts	7:21	10:4	3	
water	7:21	0:0	4	{
call	8:8	8:32	4	av_frame_free
arg	8:22	8:32	5	&insamples
op	8:22	0:0	6	&
water	8:23	0:0	6	insamples
water	8:33	0:0	4	;
return	9:8	9:30	4	AVERROR(ENOMEM)
call	9:15	9:29	5	AVERROR
arg	9:23	9:29	6	ENOMEM
water	9:23	0:0	7	ENOMEM
water	10:4	0:0	4	}
call	11:4	11:45	2	av_frame_copy_props
arg	11:24	11:34	3	outsamples
water	11:24	0:0	4	outsamples
arg	11:36	11:45	3	insamples
water	11:36	0:0	4	insamples
water	11:46	0:0	2	;
water	12:4	0:0	2	taps
op	12:10	0:0	2	=
water	12:12	0:0	2	(
water	12:13	0:0	2	(
water	12:14	0:0	2	EarwaxContext
op	12:28	0:0	2	*
water	12:29	0:0	2	)
water	12:30	0:0	2	inlink
op	12:36	0:0	2	->
water	12:38	0:0	2	dst
op	12:41	0:0	2	->
water	12:43	0:0	2	priv
water	12:47	0:0	2	)
op	12:48	0:0	2	->
water	12:50	0:0	2	taps
water	12:54	0:0	2	;
water	13:4	0:0	2	out
op	13:10	0:0	2	=
water	13:12	0:0	2	(
water	13:13	0:0	2	int16_t
op	13:21	0:0	2	*
water	13:22	0:0	2	)
water	13:23	0:0	2	outsamples
op	13:33	0:0	2	->
water	13:35	0:0	2	data
op	13:39	0:0	2	[
water	13:40	0:0	2	0
op	13:41	0:0	2	]
water	13:42	0:0	2	;
water	14:4	0:0	2	in
op	14:10	0:0	2	=
water	14:12	0:0	2	(
water	14:13	0:0	2	int16_t
op	14:21	0:0	2	*
water	14:22	0:0	2	)
water	14:23	0:0	2	insamples
op	14:33	0:0	2	->
water	14:35	0:0	2	data
op	14:39	0:0	2	[
water	14:40	0:0	2	0
op	14:41	0:0	2	]
water	14:42	0:0	2	;
water	15:4	0:0	2	len
op	15:8	0:0	2	=
call	15:10	15:48	2	FFMIN
arg	15:16	15:23	3	NUMTAPS
water	15:16	0:0	4	NUMTAPS
arg	15:25	15:48	3	2*insamples->nb_samples
water	15:25	0:0	4	2
op	15:26	0:0	4	*
water	15:27	0:0	4	insamples
op	15:36	0:0	4	->
water	15:38	0:0	4	nb_samples
water	15:49	0:0	2	;
call	17:4	17:48	2	memcpy
arg	17:11	17:23	3	taps+NUMTAPS
water	17:11	0:0	4	taps
op	17:15	0:0	4	+
water	17:16	0:0	4	NUMTAPS
arg	17:25	17:27	3	in
water	17:25	0:0	4	in
arg	17:29	17:48	3	len*sizeof(*taps)
water	17:29	0:0	4	len
op	17:33	0:0	4	*
op	17:35	0:0	4	sizeof
water	17:41	0:0	4	(
op	17:42	0:0	4	*
water	17:43	0:0	4	taps
water	17:47	0:0	4	)
water	17:49	0:0	2	;
water	18:4	0:0	2	out
op	18:10	0:0	2	=
call	18:12	18:47	2	scalarproduct
arg	18:26	18:30	3	taps
water	18:26	0:0	4	taps
arg	18:32	18:42	3	taps+len
water	18:32	0:0	4	taps
op	18:37	0:0	4	+
water	18:39	0:0	4	len
arg	18:44	18:47	3	out
water	18:44	0:0	4	out
water	18:48	0:0	2	;
if	20:4	25:4	2	(2 * insamples -> nb_samples >= NUMTAPS)
cond	20:8	20:35	3	2 * insamples -> nb_samples >= NUMTAPS
water	20:8	0:0	4	2
op	20:9	0:0	4	*
water	20:10	0:0	4	insamples
op	20:19	0:0	4	->
water	20:21	0:0	4	nb_samples
op	20:32	0:0	4	>=
water	20:35	0:0	4	NUMTAPS
stmts	20:44	25:4	3	
water	20:44	0:0	4	{
water	21:8	0:0	4	endin
op	21:14	0:0	4	=
water	21:16	0:0	4	in
op	21:19	0:0	4	+
water	21:21	0:0	4	insamples
op	21:30	0:0	4	->
water	21:32	0:0	4	nb_samples
op	21:43	0:0	4	*
water	21:45	0:0	4	2
op	21:47	0:0	4	-
water	21:49	0:0	4	NUMTAPS
water	21:56	0:0	4	;
call	22:8	22:36	4	scalarproduct
arg	22:22	22:24	5	in
water	22:22	0:0	6	in
arg	22:26	22:31	5	endin
water	22:26	0:0	6	endin
arg	22:33	22:36	5	out
water	22:33	0:0	6	out
water	22:37	0:0	4	;
call	24:8	24:51	4	memcpy
arg	24:15	24:19	5	taps
water	24:15	0:0	6	taps
arg	24:21	24:26	5	endin
water	24:21	0:0	6	endin
arg	24:28	24:51	5	NUMTAPS*sizeof(*taps)
water	24:28	0:0	6	NUMTAPS
op	24:36	0:0	6	*
op	24:38	0:0	6	sizeof
water	24:44	0:0	6	(
op	24:45	0:0	6	*
water	24:46	0:0	6	taps
water	24:50	0:0	6	)
water	24:52	0:0	4	;
water	25:4	0:0	4	}
else	25:6	26:78	2
stmts	26:8	26:78	3	
call	26:8	26:77	4	memmove
arg	26:16	26:20	5	taps
water	26:16	0:0	6	taps
arg	26:22	26:52	5	taps+2*insamples->nb_samples
water	26:22	0:0	6	taps
op	26:27	0:0	6	+
water	26:29	0:0	6	2
op	26:30	0:0	6	*
water	26:31	0:0	6	insamples
op	26:40	0:0	6	->
water	26:42	0:0	6	nb_samples
arg	26:54	26:77	5	NUMTAPS*sizeof(*taps)
water	26:54	0:0	6	NUMTAPS
op	26:62	0:0	6	*
op	26:64	0:0	6	sizeof
water	26:70	0:0	6	(
op	26:71	0:0	6	*
water	26:72	0:0	6	taps
water	26:76	0:0	6	)
water	26:78	0:0	4	;
call	27:4	27:28	2	av_frame_free
arg	27:18	27:28	3	&insamples
op	27:18	0:0	4	&
water	27:19	0:0	4	insamples
water	27:29	0:0	2	;
return	28:4	28:47	2	ff_filter_frame(outlink,outsamples)
call	28:11	28:46	3	ff_filter_frame
arg	28:27	28:34	4	outlink
water	28:27	0:0	5	outlink
arg	28:36	28:46	4	outsamples
water	28:36	0:0	5	outsamples

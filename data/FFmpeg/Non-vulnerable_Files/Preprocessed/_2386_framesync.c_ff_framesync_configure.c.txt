func	1:0	37:0	0	int	ff_framesync_configure
params	1:26	0:0	1	
param	1:27	1:42	2	FFFrameSync *	fs
stmnts	3:4	36:12	1	
water	3:4	0:0	2	unsigned
water	3:13	0:0	2	i
water	3:14	0:0	2	;
decl	4:4	4:20	2	int64_t	gcd
water	4:15	0:0	2	,
decl	4:4	4:20	2	int64_t	lcm
if	5:4	31:4	2	(! fs -> time_base . num)
cond	5:8	5:23	3	! fs -> time_base . num
op	5:8	0:0	4	!
water	5:9	0:0	4	fs
op	5:11	0:0	4	->
water	5:13	0:0	4	time_base
op	5:22	0:0	4	.
water	5:23	0:0	4	num
stmts	5:28	31:4	3	
water	5:28	0:0	4	{
for	6:8	24:8	4	(i = 0 ;i < fs -> nb_in;i ++)
forinit	6:13	6:18	5	i = 0 ;
water	6:13	0:0	6	i
op	6:15	0:0	6	=
water	6:17	0:0	6	0
water	6:18	0:0	6	;
cond	6:20	6:28	5	i < fs -> nb_in
water	6:20	0:0	6	i
op	6:22	0:0	6	<
water	6:24	0:0	6	fs
op	6:26	0:0	6	->
water	6:28	0:0	6	nb_in
forexpr	6:35	6:36	5	i ++
water	6:35	0:0	6	i
op	6:36	0:0	6	++
stmts	6:40	24:8	5	
water	6:40	0:0	6	{
if	7:12	23:12	6	(fs -> in [ i ] . sync)
cond	7:16	7:26	7	fs -> in [ i ] . sync
water	7:16	0:0	8	fs
op	7:18	0:0	8	->
water	7:20	0:0	8	in
op	7:22	0:0	8	[
water	7:23	0:0	8	i
op	7:24	0:0	8	]
op	7:25	0:0	8	.
water	7:26	0:0	8	sync
stmts	7:32	23:12	7	
water	7:32	0:0	8	{
if	8:16	20:16	8	(fs -> time_base . num)
cond	8:20	8:34	9	fs -> time_base . num
water	8:20	0:0	10	fs
op	8:22	0:0	10	->
water	8:24	0:0	10	time_base
op	8:33	0:0	10	.
water	8:34	0:0	10	num
stmts	8:39	20:16	9	
water	8:39	0:0	10	{
water	9:20	0:0	10	gcd
op	9:24	0:0	10	=
call	9:26	9:75	10	av_gcd
arg	9:33	9:50	11	fs->time_base.den
water	9:33	0:0	12	fs
op	9:35	0:0	12	->
water	9:37	0:0	12	time_base
op	9:46	0:0	12	.
water	9:47	0:0	12	den
arg	9:52	9:75	11	fs->in[i].time_base.den
water	9:52	0:0	12	fs
op	9:54	0:0	12	->
water	9:56	0:0	12	in
op	9:58	0:0	12	[
water	9:59	0:0	12	i
op	9:60	0:0	12	]
op	9:61	0:0	12	.
water	9:62	0:0	12	time_base
op	9:71	0:0	12	.
water	9:72	0:0	12	den
water	9:76	0:0	10	;
water	10:20	0:0	10	lcm
op	10:24	0:0	10	=
water	10:26	0:0	10	(
water	10:27	0:0	10	fs
op	10:29	0:0	10	->
water	10:31	0:0	10	time_base
op	10:40	0:0	10	.
water	10:41	0:0	10	den
op	10:45	0:0	10	/
water	10:47	0:0	10	gcd
water	10:50	0:0	10	)
op	10:52	0:0	10	*
water	10:54	0:0	10	fs
op	10:56	0:0	10	->
water	10:58	0:0	10	in
op	10:60	0:0	10	[
water	10:61	0:0	10	i
op	10:62	0:0	10	]
op	10:63	0:0	10	.
water	10:64	0:0	10	time_base
op	10:73	0:0	10	.
water	10:74	0:0	10	den
water	10:77	0:0	10	;
if	11:20	15:20	10	(lcm < AV_TIME_BASE / 2)
cond	11:24	11:45	11	lcm < AV_TIME_BASE / 2
water	11:24	0:0	12	lcm
op	11:28	0:0	12	<
water	11:30	0:0	12	AV_TIME_BASE
op	11:43	0:0	12	/
water	11:45	0:0	12	2
stmts	11:48	15:20	11	
water	11:48	0:0	12	{
water	12:24	0:0	12	fs
op	12:26	0:0	12	->
water	12:28	0:0	12	time_base
op	12:37	0:0	12	.
water	12:38	0:0	12	den
op	12:42	0:0	12	=
water	12:44	0:0	12	lcm
water	12:47	0:0	12	;
water	13:24	0:0	12	fs
op	13:26	0:0	12	->
water	13:28	0:0	12	time_base
op	13:37	0:0	12	.
water	13:38	0:0	12	num
op	13:42	0:0	12	=
call	13:44	14:74	12	av_gcd
arg	13:51	13:68	13	fs->time_base.num
water	13:51	0:0	14	fs
op	13:53	0:0	14	->
water	13:55	0:0	14	time_base
op	13:64	0:0	14	.
water	13:65	0:0	14	num
arg	14:51	14:74	13	fs->in[i].time_base.num
water	14:51	0:0	14	fs
op	14:53	0:0	14	->
water	14:55	0:0	14	in
op	14:57	0:0	14	[
water	14:58	0:0	14	i
op	14:59	0:0	14	]
op	14:60	0:0	14	.
water	14:61	0:0	14	time_base
op	14:70	0:0	14	.
water	14:71	0:0	14	num
water	14:75	0:0	12	;
water	15:20	0:0	12	}
else	15:22	19:20	10
stmts	15:27	19:20	11	
water	15:27	0:0	12	{
water	16:24	0:0	12	fs
op	16:26	0:0	12	->
water	16:28	0:0	12	time_base
op	16:37	0:0	12	.
water	16:38	0:0	12	num
op	16:42	0:0	12	=
water	16:44	0:0	12	1
water	16:45	0:0	12	;
water	17:24	0:0	12	fs
op	17:26	0:0	12	->
water	17:28	0:0	12	time_base
op	17:37	0:0	12	.
water	17:38	0:0	12	den
op	17:42	0:0	12	=
water	17:44	0:0	12	AV_TIME_BASE
water	17:56	0:0	12	;
break	18:24	18:29	12	
water	19:20	0:0	12	}
water	20:16	0:0	10	}
else	20:18	22:16	8
stmts	20:23	22:16	9	
water	20:23	0:0	10	{
water	21:20	0:0	10	fs
op	21:22	0:0	10	->
water	21:24	0:0	10	time_base
op	21:34	0:0	10	=
water	21:36	0:0	10	fs
op	21:38	0:0	10	->
water	21:40	0:0	10	in
op	21:42	0:0	10	[
water	21:43	0:0	10	i
op	21:44	0:0	10	]
op	21:45	0:0	10	.
water	21:46	0:0	10	time_base
water	21:55	0:0	10	;
water	22:16	0:0	10	}
water	23:12	0:0	8	}
water	24:8	0:0	6	}
if	25:8	28:8	4	(! fs -> time_base . num)
cond	25:12	25:27	5	! fs -> time_base . num
op	25:12	0:0	6	!
water	25:13	0:0	6	fs
op	25:15	0:0	6	->
water	25:17	0:0	6	time_base
op	25:26	0:0	6	.
water	25:27	0:0	6	num
stmts	25:32	28:8	5	
water	25:32	0:0	6	{
call	26:12	26:68	6	av_log
arg	26:19	26:21	7	fs
water	26:19	0:0	8	fs
arg	26:23	26:35	7	AV_LOG_ERROR
water	26:23	0:0	8	AV_LOG_ERROR
arg	26:37	26:68	7	"Impossible to set time base\n"
water	26:37	0:0	8	"Impossible to set time base\n"
water	26:69	0:0	6	;
return	27:12	27:34	6	AVERROR(EINVAL)
call	27:19	27:33	7	AVERROR
arg	27:27	27:33	8	EINVAL
water	27:27	0:0	9	EINVAL
water	28:8	0:0	6	}
call	29:8	30:51	4	av_log
arg	29:15	29:17	5	fs
water	29:15	0:0	6	fs
arg	29:19	29:33	5	AV_LOG_VERBOSE
water	29:19	0:0	6	AV_LOG_VERBOSE
arg	29:35	29:63	5	"Selected %d/%d time base\n"
water	29:35	0:0	6	"Selected %d/%d time base\n"
arg	30:15	30:32	5	fs->time_base.num
water	30:15	0:0	6	fs
op	30:17	0:0	6	->
water	30:19	0:0	6	time_base
op	30:28	0:0	6	.
water	30:29	0:0	6	num
arg	30:34	30:51	5	fs->time_base.den
water	30:34	0:0	6	fs
op	30:36	0:0	6	->
water	30:38	0:0	6	time_base
op	30:47	0:0	6	.
water	30:48	0:0	6	den
water	30:52	0:0	4	;
water	31:4	0:0	4	}
for	32:4	33:59	2	(i = 0 ;i < fs -> nb_in;i ++)
forinit	32:9	32:14	3	i = 0 ;
water	32:9	0:0	4	i
op	32:11	0:0	4	=
water	32:13	0:0	4	0
water	32:14	0:0	4	;
cond	32:16	32:24	3	i < fs -> nb_in
water	32:16	0:0	4	i
op	32:18	0:0	4	<
water	32:20	0:0	4	fs
op	32:22	0:0	4	->
water	32:24	0:0	4	nb_in
forexpr	32:31	32:32	3	i ++
water	32:31	0:0	4	i
op	32:32	0:0	4	++
stmts	33:8	33:59	3	
water	33:8	0:0	4	fs
op	33:10	0:0	4	->
water	33:12	0:0	4	in
op	33:14	0:0	4	[
water	33:15	0:0	4	i
op	33:16	0:0	4	]
op	33:17	0:0	4	.
water	33:18	0:0	4	pts
op	33:22	0:0	4	=
water	33:24	0:0	4	fs
op	33:26	0:0	4	->
water	33:28	0:0	4	in
op	33:30	0:0	4	[
water	33:31	0:0	4	i
op	33:32	0:0	4	]
op	33:33	0:0	4	.
water	33:34	0:0	4	pts_next
op	33:43	0:0	4	=
water	33:45	0:0	4	AV_NOPTS_VALUE
water	33:59	0:0	4	;
water	34:4	0:0	2	fs
op	34:6	0:0	2	->
water	34:8	0:0	2	sync_level
op	34:19	0:0	2	=
water	34:21	0:0	2	UINT_MAX
water	34:29	0:0	2	;
call	35:4	35:34	2	framesync_sync_level_update
arg	35:32	35:34	3	fs
water	35:32	0:0	4	fs
water	35:35	0:0	2	;
return	36:4	36:12	2	0
water	36:11	0:0	3	0

func	1:0	24:0	0	static int	config_output
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	23:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:35	2	DecimateContext	*dm
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
decl	5:4	6:60	2	const AVFilterLink	*inlink
op	5:31	0:0	2	=
water	6:8	0:0	2	ctx
op	6:11	0:0	2	->
water	6:13	0:0	2	inputs
op	6:19	0:0	2	[
water	6:20	0:0	2	dm
op	6:22	0:0	2	->
water	6:24	0:0	2	ppsrc
water	6:30	0:0	2	?
water	6:32	0:0	2	INPUT_CLEANSRC
water	6:47	0:0	2	:
water	6:49	0:0	2	INPUT_MAIN
op	6:59	0:0	2	]
decl	7:4	7:39	2	AVRational	fps
op	7:19	0:0	2	=
water	7:21	0:0	2	inlink
op	7:27	0:0	2	->
water	7:29	0:0	2	frame_rate
if	8:4	12:4	2	(! fps . num || ! fps . den)
cond	8:8	8:25	3	! fps . num || ! fps . den
op	8:8	0:0	4	!
water	8:9	0:0	4	fps
op	8:12	0:0	4	.
water	8:13	0:0	4	num
op	8:17	0:0	4	||
op	8:20	0:0	4	!
water	8:21	0:0	4	fps
op	8:24	0:0	4	.
water	8:25	0:0	4	den
stmts	8:30	12:4	3	
water	8:30	0:0	4	{
call	9:8	10:69	4	av_log
arg	9:15	9:18	5	ctx
water	9:15	0:0	6	ctx
arg	9:20	9:32	5	AV_LOG_ERROR
water	9:20	0:0	6	AV_LOG_ERROR
arg	9:34	10:51	5	"The input needs a constant frame rate; ""current rate of %d/%d is invalid\n"
water	9:34	0:0	6	"The input needs a constant frame rate; "
water	10:15	0:0	6	"current rate of %d/%d is invalid\n"
arg	10:53	10:60	5	fps.num
water	10:53	0:0	6	fps
op	10:56	0:0	6	.
water	10:57	0:0	6	num
arg	10:62	10:69	5	fps.den
water	10:62	0:0	6	fps
op	10:65	0:0	6	.
water	10:66	0:0	6	den
water	10:70	0:0	4	;
return	11:8	11:30	4	AVERROR(EINVAL)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	EINVAL
water	11:23	0:0	7	EINVAL
water	12:4	0:0	4	}
water	13:4	0:0	2	fps
op	13:8	0:0	2	=
call	13:10	13:62	2	av_mul_q
arg	13:19	13:22	3	fps
water	13:19	0:0	4	fps
arg	13:24	13:62	3	(AVRational){dm->cycle-1,dm->cycle}
water	13:24	0:0	4	(
water	13:25	0:0	4	AVRational
water	13:35	0:0	4	)
water	13:36	0:0	4	{
water	13:37	0:0	4	dm
op	13:39	0:0	4	->
water	13:41	0:0	4	cycle
op	13:47	0:0	4	-
water	13:49	0:0	4	1
water	13:50	0:0	4	,
water	13:52	0:0	4	dm
op	13:54	0:0	4	->
water	13:56	0:0	4	cycle
water	13:61	0:0	4	}
water	13:63	0:0	2	;
call	14:4	15:75	2	av_log
arg	14:11	14:14	3	ctx
water	14:11	0:0	4	ctx
arg	14:16	14:30	3	AV_LOG_VERBOSE
water	14:16	0:0	4	AV_LOG_VERBOSE
arg	14:32	14:55	3	"FPS: %d/%d -> %d/%d\n"
water	14:32	0:0	4	"FPS: %d/%d -> %d/%d\n"
arg	15:11	15:33	3	inlink->frame_rate.num
water	15:11	0:0	4	inlink
op	15:17	0:0	4	->
water	15:19	0:0	4	frame_rate
op	15:29	0:0	4	.
water	15:30	0:0	4	num
arg	15:35	15:57	3	inlink->frame_rate.den
water	15:35	0:0	4	inlink
op	15:41	0:0	4	->
water	15:43	0:0	4	frame_rate
op	15:53	0:0	4	.
water	15:54	0:0	4	den
arg	15:59	15:66	3	fps.num
water	15:59	0:0	4	fps
op	15:62	0:0	4	.
water	15:63	0:0	4	num
arg	15:68	15:75	3	fps.den
water	15:68	0:0	4	fps
op	15:71	0:0	4	.
water	15:72	0:0	4	den
water	15:76	0:0	2	;
water	16:4	0:0	2	outlink
op	16:11	0:0	2	->
water	16:13	0:0	2	flags
op	16:19	0:0	2	|=
water	16:22	0:0	2	FF_LINK_FLAG_REQUEST_LOOP
water	16:47	0:0	2	;
water	17:4	0:0	2	outlink
op	17:11	0:0	2	->
water	17:13	0:0	2	time_base
op	17:24	0:0	2	=
water	17:26	0:0	2	inlink
op	17:32	0:0	2	->
water	17:34	0:0	2	time_base
water	17:43	0:0	2	;
water	18:4	0:0	2	outlink
op	18:11	0:0	2	->
water	18:13	0:0	2	frame_rate
op	18:24	0:0	2	=
water	18:26	0:0	2	fps
water	18:29	0:0	2	;
water	19:4	0:0	2	outlink
op	19:11	0:0	2	->
water	19:13	0:0	2	sample_aspect_ratio
op	19:33	0:0	2	=
water	19:35	0:0	2	inlink
op	19:41	0:0	2	->
water	19:43	0:0	2	sample_aspect_ratio
water	19:62	0:0	2	;
water	20:4	0:0	2	outlink
op	20:11	0:0	2	->
water	20:13	0:0	2	w
op	20:15	0:0	2	=
water	20:17	0:0	2	inlink
op	20:23	0:0	2	->
water	20:25	0:0	2	w
water	20:26	0:0	2	;
water	21:4	0:0	2	outlink
op	21:11	0:0	2	->
water	21:13	0:0	2	h
op	21:15	0:0	2	=
water	21:17	0:0	2	inlink
op	21:23	0:0	2	->
water	21:25	0:0	2	h
water	21:26	0:0	2	;
water	22:4	0:0	2	dm
op	22:6	0:0	2	->
water	22:8	0:0	2	ts_unit
op	22:16	0:0	2	=
call	22:18	22:68	2	av_q2d
arg	22:25	22:68	3	av_inv_q(av_mul_q(fps,outlink->time_base))
call	22:25	22:67	4	av_inv_q
arg	22:34	22:67	5	av_mul_q(fps,outlink->time_base)
call	22:34	22:66	6	av_mul_q
arg	22:43	22:46	7	fps
water	22:43	0:0	8	fps
arg	22:48	22:66	7	outlink->time_base
water	22:48	0:0	8	outlink
op	22:55	0:0	8	->
water	22:57	0:0	8	time_base
water	22:69	0:0	2	;
return	23:4	23:12	2	0
water	23:11	0:0	3	0

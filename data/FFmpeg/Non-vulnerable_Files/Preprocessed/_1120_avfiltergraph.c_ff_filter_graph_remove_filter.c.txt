func	1:0	12:0	0	void	ff_filter_graph_remove_filter
params	1:34	0:0	1	
param	1:35	1:55	2	AVFilterGraph *	graph
param	1:57	1:80	2	AVFilterContext *	filter
stmnts	0:0	11:4	1	
decl	3:4	3:9	2	int	i
for	4:4	11:4	2	(i = 0 ;i < graph -> nb_filters;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:27	3	i < graph -> nb_filters
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	graph
op	4:25	0:0	4	->
water	4:27	0:0	4	nb_filters
forexpr	4:39	4:40	3	i ++
water	4:39	0:0	4	i
op	4:40	0:0	4	++
stmts	4:44	11:4	3	
water	4:44	0:0	4	{
if	5:8	10:8	4	(graph -> filters [ i ] == filter)
cond	5:12	5:33	5	graph -> filters [ i ] == filter
water	5:12	0:0	6	graph
op	5:17	0:0	6	->
water	5:19	0:0	6	filters
op	5:26	0:0	6	[
water	5:27	0:0	6	i
op	5:28	0:0	6	]
op	5:30	0:0	6	==
water	5:33	0:0	6	filter
stmts	5:41	10:8	5	
water	5:41	0:0	6	{
call	6:12	7:56	6	FFSWAP
arg	6:19	6:35	7	AVFilterContext*
water	6:19	0:0	8	AVFilterContext
op	6:34	0:0	8	*
arg	6:37	6:54	7	graph->filters[i]
water	6:37	0:0	8	graph
op	6:42	0:0	8	->
water	6:44	0:0	8	filters
op	6:51	0:0	8	[
water	6:52	0:0	8	i
op	6:53	0:0	8	]
arg	7:19	7:56	7	graph->filters[graph->nb_filters-1]
water	7:19	0:0	8	graph
op	7:24	0:0	8	->
water	7:26	0:0	8	filters
op	7:33	0:0	8	[
water	7:34	0:0	8	graph
op	7:39	0:0	8	->
water	7:41	0:0	8	nb_filters
op	7:52	0:0	8	-
water	7:54	0:0	8	1
op	7:55	0:0	8	]
water	7:57	0:0	6	;
water	8:12	0:0	6	graph
op	8:17	0:0	6	->
water	8:19	0:0	6	nb_filters
op	8:29	0:0	6	--
water	8:31	0:0	6	;
return	9:12	9:18	6	
water	10:8	0:0	6	}
water	11:4	0:0	4	}

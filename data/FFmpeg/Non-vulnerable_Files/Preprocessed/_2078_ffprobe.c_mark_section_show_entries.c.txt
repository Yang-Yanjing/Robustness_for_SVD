func	1:0	13:0	0	static inline void	mark_section_show_entries
params	1:44	0:0	1	
param	1:45	1:65	2	SectionID	section_id
param	2:45	2:65	2	int	show_all_entries
param	2:67	2:88	2	AVDictionary *	entries
stmnts	0:0	12:4	1	
decl	4:4	4:51	2	struct section	*section
op	4:28	0:0	2	=
op	4:30	0:0	2	&
water	4:31	0:0	2	sections
op	4:39	0:0	2	[
water	4:40	0:0	2	section_id
op	4:50	0:0	2	]
water	5:4	0:0	2	section
op	5:11	0:0	2	->
water	5:13	0:0	2	show_all_entries
op	5:30	0:0	2	=
water	5:32	0:0	2	show_all_entries
water	5:48	0:0	2	;
if	6:4	10:4	2	(show_all_entries)
cond	6:8	6:8	3	show_all_entries
water	6:8	0:0	4	show_all_entries
stmts	6:26	10:4	3	
water	6:26	0:0	4	{
decl	7:8	7:21	4	SectionID	*id
for	8:8	9:69	4	(id = section -> children_ids ;* id != - 1;id ++)
forinit	8:13	8:39	5	id = section -> children_ids ;
water	8:13	0:0	6	id
op	8:16	0:0	6	=
water	8:18	0:0	6	section
op	8:25	0:0	6	->
water	8:27	0:0	6	children_ids
water	8:39	0:0	6	;
cond	8:41	8:49	5	* id != - 1
op	8:41	0:0	6	*
water	8:42	0:0	6	id
op	8:45	0:0	6	!=
op	8:48	0:0	6	-
water	8:49	0:0	6	1
forexpr	8:52	8:54	5	id ++
water	8:52	0:0	6	id
op	8:54	0:0	6	++
stmts	9:12	9:69	5	
call	9:12	9:68	6	mark_section_show_entries
arg	9:38	9:41	7	*id
op	9:38	0:0	8	*
water	9:39	0:0	8	id
arg	9:43	9:59	7	show_all_entries
water	9:43	0:0	8	show_all_entries
arg	9:61	9:68	7	entries
water	9:61	0:0	8	entries
water	9:69	0:0	6	;
water	10:4	0:0	4	}
else	10:6	12:4	2
stmts	10:11	12:4	3	
water	10:11	0:0	4	{
call	11:8	11:58	4	av_dict_copy
arg	11:21	11:46	5	&section->entries_to_show
op	11:21	0:0	6	&
water	11:22	0:0	6	section
op	11:29	0:0	6	->
water	11:31	0:0	6	entries_to_show
arg	11:48	11:55	5	entries
water	11:48	0:0	6	entries
arg	11:57	11:58	5	0
water	11:57	0:0	6	0
water	11:59	0:0	4	;
water	12:4	0:0	4	}

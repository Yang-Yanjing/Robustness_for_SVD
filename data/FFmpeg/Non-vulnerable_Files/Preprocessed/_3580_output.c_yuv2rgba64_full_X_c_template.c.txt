func	1:24	56:0	0	void	yuv2rgba64_full_X_c_template
params	2:28	0:0	1	
param	2:29	2:42	2	SwsContext *	c
param	2:44	2:68	2	const int16_t *	lumFilter
param	3:23	3:45	2	const int32_t * *	lumSrc
param	3:47	3:64	2	int	lumFilterSize
param	4:23	4:47	2	const int16_t *	chrFilter
param	4:49	4:72	2	const int32_t * *	chrUSrc
param	5:23	5:46	2	const int32_t * *	chrVSrc
param	5:48	5:65	2	int	chrFilterSize
param	6:23	6:45	2	const int32_t * *	alpSrc
param	6:47	6:61	2	uint16_t *	dest
param	6:63	6:71	2	int	dstW
param	7:23	7:28	2	int	y
param	7:30	7:55	2	enum AVPixelFormat	target
param	7:57	7:69	2	int	hasAlpha
param	7:71	7:85	2	int	eightbytes
stmnts	0:0	55:4	1	
decl	9:4	9:9	2	int	i
decl	10:4	10:22	2	int	A
op	10:10	0:0	2	=
water	10:12	0:0	2	0
water	10:13	0:0	2	xffff
op	10:18	0:0	2	<<
water	10:20	0:0	2	14
for	11:4	55:4	2	(i = 0 ;i < dstW;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:20	3	i < dstW
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	dstW
forexpr	11:26	11:27	3	i ++
water	11:26	0:0	4	i
op	11:27	0:0	4	++
stmts	11:31	55:4	3	
water	11:31	0:0	4	{
decl	12:8	12:13	4	int	j
decl	13:8	13:28	4	int	Y
op	13:15	0:0	4	=
op	13:17	0:0	4	-
water	13:18	0:0	4	0
water	13:19	0:0	4	x40000000
decl	14:8	14:27	4	int	U
op	14:15	0:0	4	=
op	14:17	0:0	4	-
water	14:18	0:0	4	128
op	14:22	0:0	4	<<
water	14:25	0:0	4	23
decl	15:8	15:27	4	int	V
op	15:15	0:0	4	=
op	15:17	0:0	4	-
water	15:18	0:0	4	128
op	15:22	0:0	4	<<
water	15:25	0:0	4	23
decl	16:8	16:19	4	int	R
water	16:13	0:0	4	,
decl	16:8	16:19	4	int	G
water	16:16	0:0	4	,
decl	16:8	16:19	4	int	B
for	17:8	19:8	4	(j = 0 ;j < lumFilterSize;j ++)
forinit	17:13	17:18	5	j = 0 ;
water	17:13	0:0	6	j
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:24	5	j < lumFilterSize
water	17:20	0:0	6	j
op	17:22	0:0	6	<
water	17:24	0:0	6	lumFilterSize
forexpr	17:39	17:40	5	j ++
water	17:39	0:0	6	j
op	17:40	0:0	6	++
stmts	17:44	19:8	5	
water	17:44	0:0	6	{
water	18:12	0:0	6	Y
op	18:14	0:0	6	+=
water	18:17	0:0	6	lumSrc
op	18:23	0:0	6	[
water	18:24	0:0	6	j
op	18:25	0:0	6	]
op	18:26	0:0	6	[
water	18:27	0:0	6	i
op	18:28	0:0	6	]
op	18:31	0:0	6	*
water	18:33	0:0	6	(
water	18:34	0:0	6	unsigned
water	18:42	0:0	6	)
water	18:43	0:0	6	lumFilter
op	18:52	0:0	6	[
water	18:53	0:0	6	j
op	18:54	0:0	6	]
water	18:55	0:0	6	;
water	19:8	0:0	6	}
for	20:8	23:8	4	(j = 0 ;j < chrFilterSize;j ++)
forinit	20:13	20:18	5	j = 0 ;
water	20:13	0:0	6	j
op	20:15	0:0	6	=
water	20:17	0:0	6	0
water	20:18	0:0	6	;
cond	20:20	20:24	5	j < chrFilterSize
water	20:20	0:0	6	j
op	20:22	0:0	6	<
water	20:24	0:0	6	chrFilterSize
forexpr	20:39	20:40	5	j ++
water	20:39	0:0	6	j
op	20:40	0:0	6	++
stmts	20:44	23:8	5	
water	20:44	0:0	6	{
water	20:45	0:0	6	;
water	21:12	0:0	6	U
op	21:14	0:0	6	+=
water	21:17	0:0	6	chrUSrc
op	21:24	0:0	6	[
water	21:25	0:0	6	j
op	21:26	0:0	6	]
op	21:27	0:0	6	[
water	21:28	0:0	6	i
op	21:29	0:0	6	]
op	21:31	0:0	6	*
water	21:33	0:0	6	(
water	21:34	0:0	6	unsigned
water	21:42	0:0	6	)
water	21:43	0:0	6	chrFilter
op	21:52	0:0	6	[
water	21:53	0:0	6	j
op	21:54	0:0	6	]
water	21:55	0:0	6	;
water	22:12	0:0	6	V
op	22:14	0:0	6	+=
water	22:17	0:0	6	chrVSrc
op	22:24	0:0	6	[
water	22:25	0:0	6	j
op	22:26	0:0	6	]
op	22:27	0:0	6	[
water	22:28	0:0	6	i
op	22:29	0:0	6	]
op	22:31	0:0	6	*
water	22:33	0:0	6	(
water	22:34	0:0	6	unsigned
water	22:42	0:0	6	)
water	22:43	0:0	6	chrFilter
op	22:52	0:0	6	[
water	22:53	0:0	6	j
op	22:54	0:0	6	]
water	22:55	0:0	6	;
water	23:8	0:0	6	}
if	24:8	31:8	4	(hasAlpha)
cond	24:12	24:12	5	hasAlpha
water	24:12	0:0	6	hasAlpha
stmts	24:22	31:8	5	
water	24:22	0:0	6	{
water	25:12	0:0	6	A
op	25:14	0:0	6	=
op	25:16	0:0	6	-
water	25:17	0:0	6	0
water	25:18	0:0	6	x40000000
water	25:27	0:0	6	;
for	26:12	28:12	6	(j = 0 ;j < lumFilterSize;j ++)
forinit	26:17	26:22	7	j = 0 ;
water	26:17	0:0	8	j
op	26:19	0:0	8	=
water	26:21	0:0	8	0
water	26:22	0:0	8	;
cond	26:24	26:28	7	j < lumFilterSize
water	26:24	0:0	8	j
op	26:26	0:0	8	<
water	26:28	0:0	8	lumFilterSize
forexpr	26:43	26:44	7	j ++
water	26:43	0:0	8	j
op	26:44	0:0	8	++
stmts	26:48	28:12	7	
water	26:48	0:0	8	{
water	27:16	0:0	8	A
op	27:18	0:0	8	+=
water	27:21	0:0	8	alpSrc
op	27:27	0:0	8	[
water	27:28	0:0	8	j
op	27:29	0:0	8	]
op	27:30	0:0	8	[
water	27:31	0:0	8	i
op	27:32	0:0	8	]
op	27:34	0:0	8	*
water	27:36	0:0	8	(
water	27:37	0:0	8	unsigned
water	27:45	0:0	8	)
water	27:46	0:0	8	lumFilter
op	27:55	0:0	8	[
water	27:56	0:0	8	j
op	27:57	0:0	8	]
water	27:58	0:0	8	;
water	28:12	0:0	8	}
water	29:12	0:0	6	A
op	29:14	0:0	6	>>=
water	29:18	0:0	6	1
water	29:19	0:0	6	;
water	30:12	0:0	6	A
op	30:14	0:0	6	+=
water	30:17	0:0	6	0
water	30:18	0:0	6	x20002000
water	30:27	0:0	6	;
water	31:8	0:0	6	}
water	33:8	0:0	4	Y
op	33:11	0:0	4	>>=
water	33:15	0:0	4	14
water	33:17	0:0	4	;
water	34:8	0:0	4	Y
op	34:10	0:0	4	+=
water	34:13	0:0	4	0
water	34:14	0:0	4	x10000
water	34:20	0:0	4	;
water	35:8	0:0	4	U
op	35:11	0:0	4	>>=
water	35:15	0:0	4	14
water	35:17	0:0	4	;
water	36:8	0:0	4	V
op	36:11	0:0	4	>>=
water	36:15	0:0	4	14
water	36:17	0:0	4	;
water	38:8	0:0	4	Y
op	38:10	0:0	4	-=
water	38:13	0:0	4	c
op	38:14	0:0	4	->
water	38:16	0:0	4	yuv2rgb_y_offset
water	38:32	0:0	4	;
water	39:8	0:0	4	Y
op	39:10	0:0	4	*=
water	39:13	0:0	4	c
op	39:14	0:0	4	->
water	39:16	0:0	4	yuv2rgb_y_coeff
water	39:31	0:0	4	;
water	40:8	0:0	4	Y
op	40:10	0:0	4	+=
water	40:13	0:0	4	1
op	40:15	0:0	4	<<
water	40:18	0:0	4	13
water	40:20	0:0	4	;
water	42:8	0:0	4	R
op	42:10	0:0	4	=
water	42:12	0:0	4	V
op	42:14	0:0	4	*
water	42:16	0:0	4	c
op	42:17	0:0	4	->
water	42:19	0:0	4	yuv2rgb_v2r_coeff
water	42:36	0:0	4	;
water	43:8	0:0	4	G
op	43:10	0:0	4	=
water	43:12	0:0	4	V
op	43:14	0:0	4	*
water	43:16	0:0	4	c
op	43:17	0:0	4	->
water	43:19	0:0	4	yuv2rgb_v2g_coeff
op	43:37	0:0	4	+
water	43:39	0:0	4	U
op	43:41	0:0	4	*
water	43:43	0:0	4	c
op	43:44	0:0	4	->
water	43:46	0:0	4	yuv2rgb_u2g_coeff
water	43:63	0:0	4	;
water	44:8	0:0	4	B
op	44:10	0:0	4	=
water	44:39	0:0	4	U
op	44:41	0:0	4	*
water	44:43	0:0	4	c
op	44:44	0:0	4	->
water	44:46	0:0	4	yuv2rgb_u2b_coeff
water	44:63	0:0	4	;
call	46:8	46:64	4	output_pixel
arg	46:21	46:29	5	&dest[0]
op	46:21	0:0	6	&
water	46:22	0:0	6	dest
op	46:26	0:0	6	[
water	46:27	0:0	6	0
op	46:28	0:0	6	]
arg	46:31	46:64	5	av_clip_uintp2(R_B+Y,30)>>14
call	46:31	46:57	6	av_clip_uintp2
arg	46:46	46:53	7	R_B+Y
water	46:46	0:0	8	R_B
op	46:50	0:0	8	+
water	46:52	0:0	8	Y
arg	46:55	46:57	7	30
water	46:55	0:0	8	30
op	46:59	0:0	6	>>
water	46:62	0:0	6	14
water	46:65	0:0	4	;
call	47:8	47:64	4	output_pixel
arg	47:21	47:29	5	&dest[1]
op	47:21	0:0	6	&
water	47:22	0:0	6	dest
op	47:26	0:0	6	[
water	47:27	0:0	6	1
op	47:28	0:0	6	]
arg	47:31	47:64	5	av_clip_uintp2(G+Y,30)>>14
call	47:31	47:57	6	av_clip_uintp2
arg	47:48	47:53	7	G+Y
water	47:48	0:0	8	G
op	47:50	0:0	8	+
water	47:52	0:0	8	Y
arg	47:55	47:57	7	30
water	47:55	0:0	8	30
op	47:59	0:0	6	>>
water	47:62	0:0	6	14
water	47:65	0:0	4	;
call	48:8	48:64	4	output_pixel
arg	48:21	48:29	5	&dest[2]
op	48:21	0:0	6	&
water	48:22	0:0	6	dest
op	48:26	0:0	6	[
water	48:27	0:0	6	2
op	48:28	0:0	6	]
arg	48:31	48:64	5	av_clip_uintp2(B_R+Y,30)>>14
call	48:31	48:57	6	av_clip_uintp2
arg	48:46	48:53	7	B_R+Y
water	48:46	0:0	8	B_R
op	48:50	0:0	8	+
water	48:52	0:0	8	Y
arg	48:55	48:57	7	30
water	48:55	0:0	8	30
op	48:59	0:0	6	>>
water	48:62	0:0	6	14
water	48:65	0:0	4	;
if	49:8	52:8	4	(eightbytes)
cond	49:12	49:12	5	eightbytes
water	49:12	0:0	6	eightbytes
stmts	49:24	52:8	5	
water	49:24	0:0	6	{
call	50:12	50:62	6	output_pixel
arg	50:25	50:33	7	&dest[3]
op	50:25	0:0	8	&
water	50:26	0:0	8	dest
op	50:30	0:0	8	[
water	50:31	0:0	8	3
op	50:32	0:0	8	]
arg	50:35	50:62	7	av_clip_uintp2(A,30)>>14
call	50:35	50:55	8	av_clip_uintp2
arg	50:50	50:51	9	A
water	50:50	0:0	10	A
arg	50:53	50:55	9	30
water	50:53	0:0	10	30
op	50:57	0:0	8	>>
water	50:60	0:0	8	14
water	50:63	0:0	6	;
water	51:12	0:0	6	dest
op	51:17	0:0	6	+=
water	51:20	0:0	6	4
water	51:21	0:0	6	;
water	52:8	0:0	6	}
else	52:10	54:8	4
stmts	52:15	54:8	5	
water	52:15	0:0	6	{
water	53:12	0:0	6	dest
op	53:17	0:0	6	+=
water	53:20	0:0	6	3
water	53:21	0:0	6	;
water	54:8	0:0	6	}
water	55:4	0:0	4	}

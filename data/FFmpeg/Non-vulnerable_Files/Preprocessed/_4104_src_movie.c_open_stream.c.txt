func	1:0	16:0	0	static int	open_stream
params	1:22	0:0	1	
param	1:23	1:32	2	void *	log
param	1:34	1:49	2	MovieStream *	st
stmnts	0:0	15:12	1	
decl	3:4	3:18	2	AVCodec	*codec
decl	4:4	4:11	2	int	ret
water	5:4	0:0	2	codec
op	5:10	0:0	2	=
call	5:12	5:56	2	avcodec_find_decoder
arg	5:33	5:56	3	st->st->codec->codec_id
water	5:33	0:0	4	st
op	5:35	0:0	4	->
water	5:37	0:0	4	st
op	5:39	0:0	4	->
water	5:41	0:0	4	codec
op	5:46	0:0	4	->
water	5:48	0:0	4	codec_id
water	5:57	0:0	2	;
if	6:4	9:4	2	(! codec)
cond	6:8	6:9	3	! codec
op	6:8	0:0	4	!
water	6:9	0:0	4	codec
stmts	6:16	9:4	3	
water	6:16	0:0	4	{
call	7:8	7:62	4	av_log
arg	7:15	7:18	5	log
water	7:15	0:0	6	log
arg	7:20	7:32	5	AV_LOG_ERROR
water	7:20	0:0	6	AV_LOG_ERROR
arg	7:34	7:62	5	"Failed to find any codec\n"
water	7:34	0:0	6	"Failed to find any codec\n"
water	7:63	0:0	4	;
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	4	}
water	10:4	0:0	2	st
op	10:6	0:0	2	->
water	10:8	0:0	2	st
op	10:10	0:0	2	->
water	10:12	0:0	2	codec
op	10:17	0:0	2	->
water	10:19	0:0	2	refcounted_frames
op	10:37	0:0	2	=
water	10:39	0:0	2	1
water	10:40	0:0	2	;
if	11:4	14:4	2	(( ret =avcodec_open2 (st -> st -> codec ,codec ,NULL ) ) < 0)
cond	11:8	11:60	3	( ret =avcodec_open2 (st -> st -> codec ,codec ,NULL ) ) < 0
water	11:8	0:0	4	(
water	11:9	0:0	4	ret
op	11:13	0:0	4	=
call	11:15	11:55	4	avcodec_open2
arg	11:29	11:42	5	st->st->codec
water	11:29	0:0	6	st
op	11:31	0:0	6	->
water	11:33	0:0	6	st
op	11:35	0:0	6	->
water	11:37	0:0	6	codec
arg	11:44	11:49	5	codec
water	11:44	0:0	6	codec
arg	11:51	11:55	5	NULL
water	11:51	0:0	6	NULL
water	11:56	0:0	4	)
op	11:58	0:0	4	<
water	11:60	0:0	4	0
stmts	11:63	14:4	3	
water	11:63	0:0	4	{
call	12:8	12:58	4	av_log
arg	12:15	12:18	5	log
water	12:15	0:0	6	log
arg	12:20	12:32	5	AV_LOG_ERROR
water	12:20	0:0	6	AV_LOG_ERROR
arg	12:34	12:58	5	"Failed to open codec\n"
water	12:34	0:0	6	"Failed to open codec\n"
water	12:59	0:0	4	;
return	13:8	13:18	4	ret
water	13:15	0:0	5	ret
water	14:4	0:0	4	}
return	15:4	15:12	2	0
water	15:11	0:0	3	0

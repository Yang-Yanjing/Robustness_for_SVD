func	1:0	198:0	0	static void	event_loop
params	1:22	0:0	1	
param	1:23	1:45	2	VideoState *	cur_stream
stmnts	0:0	197:4	1	
decl	3:4	3:19	2	SDL_Event	event
decl	4:4	4:26	2	double	incr
water	4:15	0:0	2	,
decl	4:4	4:26	2	double	pos
water	4:20	0:0	2	,
decl	4:4	4:26	2	double	frac
for	5:4	197:4	2	(;;)
forinit	5:9	5:9	3	;
water	5:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	5:13	197:4	3	
water	5:13	0:0	4	{
decl	6:8	6:16	4	double	x
call	7:8	7:50	4	refresh_loop_wait_event
arg	7:32	7:42	5	cur_stream
water	7:32	0:0	6	cur_stream
arg	7:44	7:50	5	&event
op	7:44	0:0	6	&
water	7:45	0:0	6	event
water	7:51	0:0	4	;
switch	8:8	196:8	4	(event . type)
cond	8:16	8:22	5	event . type
water	8:16	0:0	6	event
op	8:21	0:0	6	.
water	8:22	0:0	6	type
stmts	8:28	196:8	5	
water	8:28	0:0	6	{
label	9:8	9:24	6	case SDL_KEYDOWN :
if	10:12	13:12	6	(exit_on_keydown)
cond	10:16	10:16	7	exit_on_keydown
water	10:16	0:0	8	exit_on_keydown
stmts	10:33	13:12	7	
water	10:33	0:0	8	{
call	11:16	11:34	8	do_exit
arg	11:24	11:34	9	cur_stream
water	11:24	0:0	10	cur_stream
water	11:35	0:0	8	;
break	12:16	12:21	8	
water	13:12	0:0	8	}
switch	14:12	120:12	6	(event . key . keysym . sym)
cond	14:20	14:37	7	event . key . keysym . sym
water	14:20	0:0	8	event
op	14:25	0:0	8	.
water	14:26	0:0	8	key
op	14:29	0:0	8	.
water	14:30	0:0	8	keysym
op	14:36	0:0	8	.
water	14:37	0:0	8	sym
stmts	14:42	120:12	7	
water	14:42	0:0	8	{
label	15:12	15:28	8	case SDLK_ESCAPE :
label	16:12	16:23	8	case SDLK_q :
call	17:16	17:34	8	do_exit
arg	17:24	17:34	9	cur_stream
water	17:24	0:0	10	cur_stream
water	17:35	0:0	8	;
break	18:16	18:21	8	
label	19:12	19:23	8	case SDLK_f :
call	20:16	20:45	8	toggle_full_screen
arg	20:35	20:45	9	cur_stream
water	20:35	0:0	10	cur_stream
water	20:46	0:0	8	;
water	21:16	0:0	8	cur_stream
op	21:26	0:0	8	->
water	21:28	0:0	8	force_refresh
op	21:42	0:0	8	=
water	21:44	0:0	8	1
water	21:45	0:0	8	;
break	22:16	22:21	8	
label	23:12	23:23	8	case SDLK_p :
label	24:12	24:27	8	case SDLK_SPACE :
call	25:16	25:39	8	toggle_pause
arg	25:29	25:39	9	cur_stream
water	25:29	0:0	10	cur_stream
water	25:40	0:0	8	;
break	26:16	26:21	8	
label	27:12	27:23	8	case SDLK_m :
call	28:16	28:38	8	toggle_mute
arg	28:28	28:38	9	cur_stream
water	28:28	0:0	10	cur_stream
water	28:39	0:0	8	;
break	29:16	29:21	8	
label	30:12	30:33	8	case SDLK_KP_MULTIPLY :
label	31:12	31:23	8	case SDLK_0 :
call	32:16	32:60	8	update_volume
arg	32:30	32:40	9	cur_stream
water	32:30	0:0	10	cur_stream
arg	32:42	32:43	9	1
water	32:42	0:0	10	1
arg	32:45	32:60	9	SDL_VOLUME_STEP
water	32:45	0:0	10	SDL_VOLUME_STEP
water	32:61	0:0	8	;
break	33:16	33:21	8	
label	34:12	34:31	8	case SDLK_KP_DIVIDE :
label	35:12	35:23	8	case SDLK_9 :
call	36:16	36:61	8	update_volume
arg	36:30	36:40	9	cur_stream
water	36:30	0:0	10	cur_stream
arg	36:42	36:44	9	-1
op	36:42	0:0	10	-
water	36:43	0:0	10	1
arg	36:46	36:61	9	SDL_VOLUME_STEP
water	36:46	0:0	10	SDL_VOLUME_STEP
water	36:62	0:0	8	;
break	37:16	37:21	8	
label	38:12	38:23	8	case SDLK_s :
call	39:16	39:45	8	step_to_next_frame
arg	39:35	39:45	9	cur_stream
water	39:35	0:0	10	cur_stream
water	39:46	0:0	8	;
break	40:16	40:21	8	
label	41:12	41:23	8	case SDLK_a :
call	42:16	42:67	8	stream_cycle_channel
arg	42:37	42:47	9	cur_stream
water	42:37	0:0	10	cur_stream
arg	42:49	42:67	9	AVMEDIA_TYPE_AUDIO
water	42:49	0:0	10	AVMEDIA_TYPE_AUDIO
water	42:68	0:0	8	;
break	43:16	43:21	8	
label	44:12	44:23	8	case SDLK_v :
call	45:16	45:67	8	stream_cycle_channel
arg	45:37	45:47	9	cur_stream
water	45:37	0:0	10	cur_stream
arg	45:49	45:67	9	AVMEDIA_TYPE_VIDEO
water	45:49	0:0	10	AVMEDIA_TYPE_VIDEO
water	45:68	0:0	8	;
break	46:16	46:21	8	
label	47:12	47:23	8	case SDLK_c :
call	48:16	48:67	8	stream_cycle_channel
arg	48:37	48:47	9	cur_stream
water	48:37	0:0	10	cur_stream
arg	48:49	48:67	9	AVMEDIA_TYPE_VIDEO
water	48:49	0:0	10	AVMEDIA_TYPE_VIDEO
water	48:68	0:0	8	;
call	49:16	49:67	8	stream_cycle_channel
arg	49:37	49:47	9	cur_stream
water	49:37	0:0	10	cur_stream
arg	49:49	49:67	9	AVMEDIA_TYPE_AUDIO
water	49:49	0:0	10	AVMEDIA_TYPE_AUDIO
water	49:68	0:0	8	;
call	50:16	50:70	8	stream_cycle_channel
arg	50:37	50:47	9	cur_stream
water	50:37	0:0	10	cur_stream
arg	50:49	50:70	9	AVMEDIA_TYPE_SUBTITLE
water	50:49	0:0	10	AVMEDIA_TYPE_SUBTITLE
water	50:71	0:0	8	;
break	51:16	51:21	8	
label	52:12	52:23	8	case SDLK_t :
call	53:16	53:70	8	stream_cycle_channel
arg	53:37	53:47	9	cur_stream
water	53:37	0:0	10	cur_stream
arg	53:49	53:70	9	AVMEDIA_TYPE_SUBTITLE
water	53:49	0:0	10	AVMEDIA_TYPE_SUBTITLE
water	53:71	0:0	8	;
break	54:16	54:21	8	
label	55:12	55:23	8	case SDLK_w :
if	57:16	60:16	8	(cur_stream -> show_mode == SHOW_MODE_VIDEO && cur_stream -> vfilter_idx < nb_vfilters - 1)
cond	57:20	57:104	9	cur_stream -> show_mode == SHOW_MODE_VIDEO && cur_stream -> vfilter_idx < nb_vfilters - 1
water	57:20	0:0	10	cur_stream
op	57:30	0:0	10	->
water	57:32	0:0	10	show_mode
op	57:42	0:0	10	==
water	57:45	0:0	10	SHOW_MODE_VIDEO
op	57:61	0:0	10	&&
water	57:64	0:0	10	cur_stream
op	57:74	0:0	10	->
water	57:76	0:0	10	vfilter_idx
op	57:88	0:0	10	<
water	57:90	0:0	10	nb_vfilters
op	57:102	0:0	10	-
water	57:104	0:0	10	1
stmts	57:107	60:16	9	
water	57:107	0:0	10	{
if	58:20	59:51	10	(++ cur_stream -> vfilter_idx >= nb_vfilters)
cond	58:24	58:53	11	++ cur_stream -> vfilter_idx >= nb_vfilters
op	58:24	0:0	12	++
water	58:26	0:0	12	cur_stream
op	58:36	0:0	12	->
water	58:38	0:0	12	vfilter_idx
op	58:50	0:0	12	>=
water	58:53	0:0	12	nb_vfilters
stmts	59:24	59:51	11	
water	59:24	0:0	12	cur_stream
op	59:34	0:0	12	->
water	59:36	0:0	12	vfilter_idx
op	59:48	0:0	12	=
water	59:50	0:0	12	0
water	59:51	0:0	12	;
water	60:16	0:0	10	}
else	60:18	63:16	8
stmts	60:23	63:16	9	
water	60:23	0:0	10	{
water	61:20	0:0	10	cur_stream
op	61:30	0:0	10	->
water	61:32	0:0	10	vfilter_idx
op	61:44	0:0	10	=
water	61:46	0:0	10	0
water	61:47	0:0	10	;
call	62:20	62:51	10	toggle_audio_display
arg	62:41	62:51	11	cur_stream
water	62:41	0:0	12	cur_stream
water	62:52	0:0	10	;
water	63:16	0:0	10	}
call	65:16	65:47	8	toggle_audio_display
arg	65:37	65:47	9	cur_stream
water	65:37	0:0	10	cur_stream
water	65:48	0:0	8	;
break	67:16	67:21	8	
label	68:12	68:28	8	case SDLK_PAGEUP :
if	69:16	72:16	8	(cur_stream -> ic -> nb_chapters <= 1)
cond	69:20	69:51	9	cur_stream -> ic -> nb_chapters <= 1
water	69:20	0:0	10	cur_stream
op	69:30	0:0	10	->
water	69:32	0:0	10	ic
op	69:34	0:0	10	->
water	69:36	0:0	10	nb_chapters
op	69:48	0:0	10	<=
water	69:51	0:0	10	1
stmts	69:54	72:16	9	
water	69:54	0:0	10	{
water	70:20	0:0	10	incr
op	70:25	0:0	10	=
water	70:27	0:0	10	600
op	70:30	0:0	10	.
water	70:31	0:0	10	0
water	70:32	0:0	10	;
goto	71:20	71:32	10	do_seek
water	71:25	0:0	11	do_seek
water	72:16	0:0	10	}
call	73:16	73:42	8	seek_chapter
arg	73:29	73:39	9	cur_stream
water	73:29	0:0	10	cur_stream
arg	73:41	73:42	9	1
water	73:41	0:0	10	1
water	73:43	0:0	8	;
break	74:16	74:21	8	
label	75:12	75:30	8	case SDLK_PAGEDOWN :
if	76:16	79:16	8	(cur_stream -> ic -> nb_chapters <= 1)
cond	76:20	76:51	9	cur_stream -> ic -> nb_chapters <= 1
water	76:20	0:0	10	cur_stream
op	76:30	0:0	10	->
water	76:32	0:0	10	ic
op	76:34	0:0	10	->
water	76:36	0:0	10	nb_chapters
op	76:48	0:0	10	<=
water	76:51	0:0	10	1
stmts	76:54	79:16	9	
water	76:54	0:0	10	{
water	77:20	0:0	10	incr
op	77:25	0:0	10	=
op	77:27	0:0	10	-
water	77:28	0:0	10	600
op	77:31	0:0	10	.
water	77:32	0:0	10	0
water	77:33	0:0	10	;
goto	78:20	78:32	10	do_seek
water	78:25	0:0	11	do_seek
water	79:16	0:0	10	}
call	80:16	80:43	8	seek_chapter
arg	80:29	80:39	9	cur_stream
water	80:29	0:0	10	cur_stream
arg	80:41	80:43	9	-1
op	80:41	0:0	10	-
water	80:42	0:0	10	1
water	80:44	0:0	8	;
break	81:16	81:21	8	
label	82:12	82:26	8	case SDLK_LEFT :
water	83:16	0:0	8	incr
op	83:21	0:0	8	=
op	83:23	0:0	8	-
water	83:24	0:0	8	10
op	83:26	0:0	8	.
water	83:27	0:0	8	0
water	83:28	0:0	8	;
goto	84:16	84:28	8	do_seek
water	84:21	0:0	9	do_seek
label	85:12	85:27	8	case SDLK_RIGHT :
water	86:16	0:0	8	incr
op	86:21	0:0	8	=
water	86:23	0:0	8	10
op	86:25	0:0	8	.
water	86:26	0:0	8	0
water	86:27	0:0	8	;
goto	87:16	87:28	8	do_seek
water	87:21	0:0	9	do_seek
label	88:12	88:24	8	case SDLK_UP :
water	89:16	0:0	8	incr
op	89:21	0:0	8	=
water	89:23	0:0	8	60
op	89:25	0:0	8	.
water	89:26	0:0	8	0
water	89:27	0:0	8	;
goto	90:16	90:28	8	do_seek
water	90:21	0:0	9	do_seek
label	91:12	91:26	8	case SDLK_DOWN :
water	92:16	0:0	8	incr
op	92:21	0:0	8	=
op	92:23	0:0	8	-
water	92:24	0:0	8	60
op	92:26	0:0	8	.
water	92:27	0:0	8	0
water	92:28	0:0	8	;
label	93:12	93:19	8	do_seek :
if	94:20	108:20	8	(seek_by_bytes)
cond	94:24	94:24	9	seek_by_bytes
water	94:24	0:0	10	seek_by_bytes
stmts	94:39	108:20	9	
water	94:39	0:0	10	{
water	95:24	0:0	10	pos
op	95:28	0:0	10	=
op	95:30	0:0	10	-
water	95:31	0:0	10	1
water	95:32	0:0	10	;
if	96:24	97:74	10	(pos < 0 && cur_stream -> video_stream >= 0)
cond	96:28	96:67	11	pos < 0 && cur_stream -> video_stream >= 0
water	96:28	0:0	12	pos
op	96:32	0:0	12	<
water	96:34	0:0	12	0
op	96:36	0:0	12	&&
water	96:39	0:0	12	cur_stream
op	96:49	0:0	12	->
water	96:51	0:0	12	video_stream
op	96:64	0:0	12	>=
water	96:67	0:0	12	0
stmts	97:28	97:74	11	
water	97:28	0:0	12	pos
op	97:32	0:0	12	=
call	97:34	97:73	12	frame_queue_last_pos
arg	97:55	97:73	13	&cur_stream->pictq
op	97:55	0:0	14	&
water	97:56	0:0	14	cur_stream
op	97:66	0:0	14	->
water	97:68	0:0	14	pictq
water	97:74	0:0	12	;
if	98:24	99:74	10	(pos < 0 && cur_stream -> audio_stream >= 0)
cond	98:28	98:67	11	pos < 0 && cur_stream -> audio_stream >= 0
water	98:28	0:0	12	pos
op	98:32	0:0	12	<
water	98:34	0:0	12	0
op	98:36	0:0	12	&&
water	98:39	0:0	12	cur_stream
op	98:49	0:0	12	->
water	98:51	0:0	12	audio_stream
op	98:64	0:0	12	>=
water	98:67	0:0	12	0
stmts	99:28	99:74	11	
water	99:28	0:0	12	pos
op	99:32	0:0	12	=
call	99:34	99:73	12	frame_queue_last_pos
arg	99:55	99:73	13	&cur_stream->sampq
op	99:55	0:0	14	&
water	99:56	0:0	14	cur_stream
op	99:66	0:0	14	->
water	99:68	0:0	14	sampq
water	99:74	0:0	12	;
if	100:24	101:63	10	(pos < 0)
cond	100:28	100:34	11	pos < 0
water	100:28	0:0	12	pos
op	100:32	0:0	12	<
water	100:34	0:0	12	0
stmts	101:28	101:63	11	
water	101:28	0:0	12	pos
op	101:32	0:0	12	=
call	101:34	101:62	12	avio_tell
arg	101:44	101:62	13	cur_stream->ic->pb
water	101:44	0:0	14	cur_stream
op	101:54	0:0	14	->
water	101:56	0:0	14	ic
op	101:58	0:0	14	->
water	101:60	0:0	14	pb
water	101:63	0:0	12	;
if	102:24	103:66	10	(cur_stream -> ic -> bit_rate)
cond	102:28	102:44	11	cur_stream -> ic -> bit_rate
water	102:28	0:0	12	cur_stream
op	102:38	0:0	12	->
water	102:40	0:0	12	ic
op	102:42	0:0	12	->
water	102:44	0:0	12	bit_rate
stmts	103:28	103:66	11	
water	103:28	0:0	12	incr
op	103:33	0:0	12	*=
water	103:36	0:0	12	cur_stream
op	103:46	0:0	12	->
water	103:48	0:0	12	ic
op	103:50	0:0	12	->
water	103:52	0:0	12	bit_rate
op	103:61	0:0	12	/
water	103:63	0:0	12	8
op	103:64	0:0	12	.
water	103:65	0:0	12	0
water	103:66	0:0	12	;
else	104:24	105:44	10
stmts	105:28	105:44	11	
water	105:28	0:0	12	incr
op	105:33	0:0	12	*=
water	105:36	0:0	12	180000
op	105:42	0:0	12	.
water	105:43	0:0	12	0
water	105:44	0:0	12	;
water	106:24	0:0	10	pos
op	106:28	0:0	10	+=
water	106:31	0:0	10	incr
water	106:35	0:0	10	;
call	107:24	107:60	10	stream_seek
arg	107:36	107:46	11	cur_stream
water	107:36	0:0	12	cur_stream
arg	107:48	107:51	11	pos
water	107:48	0:0	12	pos
arg	107:53	107:57	11	incr
water	107:53	0:0	12	incr
arg	107:59	107:60	11	1
water	107:59	0:0	12	1
water	107:61	0:0	10	;
water	108:20	0:0	10	}
else	108:22	116:20	8
stmts	108:27	116:20	9	
water	108:27	0:0	10	{
water	109:24	0:0	10	pos
op	109:28	0:0	10	=
call	109:30	109:57	10	get_master_clock
arg	109:47	109:57	11	cur_stream
water	109:47	0:0	12	cur_stream
water	109:58	0:0	10	;
if	110:24	111:77	10	(isnan (pos ))
cond	110:28	110:37	11	isnan (pos )
call	110:28	110:37	12	isnan
arg	110:34	110:37	13	pos
water	110:34	0:0	14	pos
stmts	111:28	111:77	11	
water	111:28	0:0	12	pos
op	111:32	0:0	12	=
water	111:34	0:0	12	(
water	111:35	0:0	12	double
water	111:41	0:0	12	)
water	111:42	0:0	12	cur_stream
op	111:52	0:0	12	->
water	111:54	0:0	12	seek_pos
op	111:63	0:0	12	/
water	111:65	0:0	12	AV_TIME_BASE
water	111:77	0:0	12	;
water	112:24	0:0	10	pos
op	112:28	0:0	10	+=
water	112:31	0:0	10	incr
water	112:35	0:0	10	;
if	113:24	114:83	10	(cur_stream -> ic -> start_time != AV_NOPTS_VALUE && pos < cur_stream -> ic -> start_time / ( double ) AV_TIME_BASE)
cond	113:28	113:119	11	cur_stream -> ic -> start_time != AV_NOPTS_VALUE && pos < cur_stream -> ic -> start_time / ( double ) AV_TIME_BASE
water	113:28	0:0	12	cur_stream
op	113:38	0:0	12	->
water	113:40	0:0	12	ic
op	113:42	0:0	12	->
water	113:44	0:0	12	start_time
op	113:55	0:0	12	!=
water	113:58	0:0	12	AV_NOPTS_VALUE
op	113:73	0:0	12	&&
water	113:76	0:0	12	pos
op	113:80	0:0	12	<
water	113:82	0:0	12	cur_stream
op	113:92	0:0	12	->
water	113:94	0:0	12	ic
op	113:96	0:0	12	->
water	113:98	0:0	12	start_time
op	113:109	0:0	12	/
water	113:111	0:0	12	(
water	113:112	0:0	12	double
water	113:118	0:0	12	)
water	113:119	0:0	12	AV_TIME_BASE
stmts	114:28	114:83	11	
water	114:28	0:0	12	pos
op	114:32	0:0	12	=
water	114:34	0:0	12	cur_stream
op	114:44	0:0	12	->
water	114:46	0:0	12	ic
op	114:48	0:0	12	->
water	114:50	0:0	12	start_time
op	114:61	0:0	12	/
water	114:63	0:0	12	(
water	114:64	0:0	12	double
water	114:70	0:0	12	)
water	114:71	0:0	12	AV_TIME_BASE
water	114:83	0:0	12	;
call	115:24	115:112	10	stream_seek
arg	115:36	115:46	11	cur_stream
water	115:36	0:0	12	cur_stream
arg	115:48	115:77	11	(int64_t)(pos*AV_TIME_BASE)
call	115:48	115:76	12	(int64_t)
arg	115:58	115:76	13	pos*AV_TIME_BASE
water	115:58	0:0	14	pos
op	115:62	0:0	14	*
water	115:64	0:0	14	AV_TIME_BASE
arg	115:79	115:109	11	(int64_t)(incr*AV_TIME_BASE)
call	115:79	115:108	12	(int64_t)
arg	115:89	115:108	13	incr*AV_TIME_BASE
water	115:89	0:0	14	incr
op	115:94	0:0	14	*
water	115:96	0:0	14	AV_TIME_BASE
arg	115:111	115:112	11	0
water	115:111	0:0	12	0
water	115:113	0:0	10	;
water	116:20	0:0	10	}
break	117:16	117:21	8	
label	118:12	118:19	8	default :
break	119:16	119:21	8	
water	120:12	0:0	8	}
break	121:12	121:17	6	
label	122:8	122:32	6	case SDL_MOUSEBUTTONDOWN :
if	123:12	126:12	6	(exit_on_mousedown)
cond	123:16	123:16	7	exit_on_mousedown
water	123:16	0:0	8	exit_on_mousedown
stmts	123:35	126:12	7	
water	123:35	0:0	8	{
call	124:16	124:34	8	do_exit
arg	124:24	124:34	9	cur_stream
water	124:24	0:0	10	cur_stream
water	124:35	0:0	8	;
break	125:16	125:21	8	
water	126:12	0:0	8	}
if	127:12	136:12	6	(event . button . button == SDL_BUTTON_LEFT)
cond	127:16	127:39	7	event . button . button == SDL_BUTTON_LEFT
water	127:16	0:0	8	event
op	127:21	0:0	8	.
water	127:22	0:0	8	button
op	127:28	0:0	8	.
water	127:29	0:0	8	button
op	127:36	0:0	8	==
water	127:39	0:0	8	SDL_BUTTON_LEFT
stmts	127:56	136:12	7	
water	127:56	0:0	8	{
water	128:16	0:0	8	static
water	128:23	0:0	8	int64_t
water	128:31	0:0	8	last_mouse_left_click
op	128:53	0:0	8	=
water	128:55	0:0	8	0
water	128:56	0:0	8	;
if	129:16	133:16	8	(av_gettime_relative ( ) - last_mouse_left_click <= 500000)
cond	129:20	129:69	9	av_gettime_relative ( ) - last_mouse_left_click <= 500000
call	129:20	129:40	10	av_gettime_relative
op	129:42	0:0	10	-
water	129:44	0:0	10	last_mouse_left_click
op	129:66	0:0	10	<=
water	129:69	0:0	10	500000
stmts	129:77	133:16	9	
water	129:77	0:0	10	{
call	130:20	130:49	10	toggle_full_screen
arg	130:39	130:49	11	cur_stream
water	130:39	0:0	12	cur_stream
water	130:50	0:0	10	;
water	131:20	0:0	10	cur_stream
op	131:30	0:0	10	->
water	131:32	0:0	10	force_refresh
op	131:46	0:0	10	=
water	131:48	0:0	10	1
water	131:49	0:0	10	;
water	132:20	0:0	10	last_mouse_left_click
op	132:42	0:0	10	=
water	132:44	0:0	10	0
water	132:45	0:0	10	;
water	133:16	0:0	10	}
else	133:18	135:16	8
stmts	133:23	135:16	9	
water	133:23	0:0	10	{
water	134:20	0:0	10	last_mouse_left_click
op	134:42	0:0	10	=
call	134:44	134:64	10	av_gettime_relative
water	134:65	0:0	10	;
water	135:16	0:0	10	}
water	136:12	0:0	8	}
label	137:8	137:28	6	case SDL_MOUSEMOTION :
if	138:12	141:12	6	(cursor_hidden)
cond	138:16	138:16	7	cursor_hidden
water	138:16	0:0	8	cursor_hidden
stmts	138:31	141:12	7	
water	138:31	0:0	8	{
call	139:16	139:32	8	SDL_ShowCursor
arg	139:31	139:32	9	1
water	139:31	0:0	10	1
water	139:33	0:0	8	;
water	140:16	0:0	8	cursor_hidden
op	140:30	0:0	8	=
water	140:32	0:0	8	0
water	140:33	0:0	8	;
water	141:12	0:0	8	}
water	142:12	0:0	6	cursor_last_shown
op	142:30	0:0	6	=
call	142:32	142:52	6	av_gettime_relative
water	142:53	0:0	6	;
if	143:12	147:12	6	(event . type == SDL_MOUSEBUTTONDOWN)
cond	143:16	143:30	7	event . type == SDL_MOUSEBUTTONDOWN
water	143:16	0:0	8	event
op	143:21	0:0	8	.
water	143:22	0:0	8	type
op	143:27	0:0	8	==
water	143:30	0:0	8	SDL_MOUSEBUTTONDOWN
stmts	143:51	147:12	7	
water	143:51	0:0	8	{
if	144:16	145:25	8	(event . button . button != SDL_BUTTON_RIGHT)
cond	144:20	144:43	9	event . button . button != SDL_BUTTON_RIGHT
water	144:20	0:0	10	event
op	144:25	0:0	10	.
water	144:26	0:0	10	button
op	144:32	0:0	10	.
water	144:33	0:0	10	button
op	144:40	0:0	10	!=
water	144:43	0:0	10	SDL_BUTTON_RIGHT
stmts	145:20	145:25	9	
break	145:20	145:25	10	
water	146:16	0:0	8	x
op	146:18	0:0	8	=
water	146:20	0:0	8	event
op	146:25	0:0	8	.
water	146:26	0:0	8	button
op	146:32	0:0	8	.
water	146:33	0:0	8	x
water	146:34	0:0	8	;
water	147:12	0:0	8	}
else	147:14	151:12	6
stmts	147:19	151:12	7	
water	147:19	0:0	8	{
if	148:16	149:25	8	(! ( event . motion . state & SDL_BUTTON_RMASK ))
cond	148:20	148:59	9	! ( event . motion . state & SDL_BUTTON_RMASK )
op	148:20	0:0	10	!
water	148:21	0:0	10	(
water	148:22	0:0	10	event
op	148:27	0:0	10	.
water	148:28	0:0	10	motion
op	148:34	0:0	10	.
water	148:35	0:0	10	state
op	148:41	0:0	10	&
water	148:43	0:0	10	SDL_BUTTON_RMASK
water	148:59	0:0	10	)
stmts	149:20	149:25	9	
break	149:20	149:25	10	
water	150:16	0:0	8	x
op	150:18	0:0	8	=
water	150:20	0:0	8	event
op	150:25	0:0	8	.
water	150:26	0:0	8	motion
op	150:32	0:0	8	.
water	150:33	0:0	8	x
water	150:34	0:0	8	;
water	151:12	0:0	8	}
if	152:16	155:16	6	(seek_by_bytes || cur_stream -> ic -> duration <= 0)
cond	152:20	152:65	7	seek_by_bytes || cur_stream -> ic -> duration <= 0
water	152:20	0:0	8	seek_by_bytes
op	152:34	0:0	8	||
water	152:37	0:0	8	cur_stream
op	152:47	0:0	8	->
water	152:49	0:0	8	ic
op	152:51	0:0	8	->
water	152:53	0:0	8	duration
op	152:62	0:0	8	<=
water	152:65	0:0	8	0
stmts	152:68	155:16	7	
water	152:68	0:0	8	{
decl	153:20	153:66	8	uint64_t	size
op	153:34	0:0	8	=
call	153:37	153:65	9	avio_size
arg	153:47	153:65	10	cur_stream->ic->pb
water	153:47	0:0	11	cur_stream
op	153:57	0:0	11	->
water	153:59	0:0	11	ic
op	153:61	0:0	11	->
water	153:63	0:0	11	pb
call	154:20	154:74	8	stream_seek
arg	154:32	154:42	9	cur_stream
water	154:32	0:0	10	cur_stream
arg	154:44	154:68	9	size*x/cur_stream->width
water	154:44	0:0	10	size
op	154:48	0:0	10	*
water	154:49	0:0	10	x
op	154:50	0:0	10	/
water	154:51	0:0	10	cur_stream
op	154:61	0:0	10	->
water	154:63	0:0	10	width
arg	154:70	154:71	9	0
water	154:70	0:0	10	0
arg	154:73	154:74	9	1
water	154:73	0:0	10	1
water	154:75	0:0	8	;
water	155:16	0:0	8	}
else	155:18	175:16	6
stmts	155:23	175:16	7	
water	155:23	0:0	8	{
decl	156:20	156:30	8	int64_t	ts
decl	157:20	157:38	8	int	ns
water	157:26	0:0	8	,
decl	157:20	157:38	8	int	hh
water	157:30	0:0	8	,
decl	157:20	157:38	8	int	mm
water	157:34	0:0	8	,
decl	157:20	157:38	8	int	ss
decl	158:20	158:42	8	int	tns
water	158:27	0:0	8	,
decl	158:20	158:42	8	int	thh
water	158:32	0:0	8	,
decl	158:20	158:42	8	int	tmm
water	158:37	0:0	8	,
decl	158:20	158:42	8	int	tss
water	159:20	0:0	8	tns
op	159:25	0:0	8	=
water	159:27	0:0	8	cur_stream
op	159:37	0:0	8	->
water	159:39	0:0	8	ic
op	159:41	0:0	8	->
water	159:43	0:0	8	duration
op	159:52	0:0	8	/
water	159:54	0:0	8	1000000
water	159:61	0:0	8	LL
water	159:63	0:0	8	;
water	160:20	0:0	8	thh
op	160:25	0:0	8	=
water	160:27	0:0	8	tns
op	160:31	0:0	8	/
water	160:33	0:0	8	3600
water	160:37	0:0	8	;
water	161:20	0:0	8	tmm
op	161:25	0:0	8	=
water	161:27	0:0	8	(
water	161:28	0:0	8	tns
op	161:32	0:0	8	%
water	161:34	0:0	8	3600
water	161:38	0:0	8	)
op	161:40	0:0	8	/
water	161:42	0:0	8	60
water	161:44	0:0	8	;
water	162:20	0:0	8	tss
op	162:25	0:0	8	=
water	162:27	0:0	8	(
water	162:28	0:0	8	tns
op	162:32	0:0	8	%
water	162:34	0:0	8	60
water	162:36	0:0	8	)
water	162:37	0:0	8	;
water	163:20	0:0	8	frac
op	163:25	0:0	8	=
water	163:27	0:0	8	x
op	163:29	0:0	8	/
water	163:31	0:0	8	cur_stream
op	163:41	0:0	8	->
water	163:43	0:0	8	width
water	163:48	0:0	8	;
water	164:20	0:0	8	ns
op	164:25	0:0	8	=
water	164:27	0:0	8	frac
op	164:32	0:0	8	*
water	164:34	0:0	8	tns
water	164:37	0:0	8	;
water	165:20	0:0	8	hh
op	165:25	0:0	8	=
water	165:27	0:0	8	ns
op	165:30	0:0	8	/
water	165:32	0:0	8	3600
water	165:36	0:0	8	;
water	166:20	0:0	8	mm
op	166:25	0:0	8	=
water	166:27	0:0	8	(
water	166:28	0:0	8	ns
op	166:31	0:0	8	%
water	166:33	0:0	8	3600
water	166:37	0:0	8	)
op	166:39	0:0	8	/
water	166:41	0:0	8	60
water	166:43	0:0	8	;
water	167:20	0:0	8	ss
op	167:25	0:0	8	=
water	167:27	0:0	8	(
water	167:28	0:0	8	ns
op	167:31	0:0	8	%
water	167:33	0:0	8	60
water	167:35	0:0	8	)
water	167:36	0:0	8	;
call	168:20	170:53	8	av_log
arg	168:27	168:31	9	NULL
water	168:27	0:0	10	NULL
arg	168:33	168:44	9	AV_LOG_INFO
water	168:33	0:0	10	AV_LOG_INFO
arg	169:27	169:103	9	"Seek to %2.0f%% (%2d:%02d:%02d) of total duration (%2d:%02d:%02d)       \n"
water	169:27	0:0	10	"Seek to %2.0f%% (%2d:%02d:%02d) of total duration (%2d:%02d:%02d)       \n"
arg	169:105	169:113	9	frac*100
water	169:105	0:0	10	frac
op	169:109	0:0	10	*
water	169:110	0:0	10	100
arg	170:28	170:30	9	hh
water	170:28	0:0	10	hh
arg	170:32	170:34	9	mm
water	170:32	0:0	10	mm
arg	170:36	170:38	9	ss
water	170:36	0:0	10	ss
arg	170:40	170:43	9	thh
water	170:40	0:0	10	thh
arg	170:45	170:48	9	tmm
water	170:45	0:0	10	tmm
arg	170:50	170:53	9	tss
water	170:50	0:0	10	tss
water	170:54	0:0	8	;
water	171:20	0:0	8	ts
op	171:23	0:0	8	=
water	171:25	0:0	8	frac
op	171:30	0:0	8	*
water	171:32	0:0	8	cur_stream
op	171:42	0:0	8	->
water	171:44	0:0	8	ic
op	171:46	0:0	8	->
water	171:48	0:0	8	duration
water	171:56	0:0	8	;
if	172:20	173:56	8	(cur_stream -> ic -> start_time != AV_NOPTS_VALUE)
cond	172:24	172:54	9	cur_stream -> ic -> start_time != AV_NOPTS_VALUE
water	172:24	0:0	10	cur_stream
op	172:34	0:0	10	->
water	172:36	0:0	10	ic
op	172:38	0:0	10	->
water	172:40	0:0	10	start_time
op	172:51	0:0	10	!=
water	172:54	0:0	10	AV_NOPTS_VALUE
stmts	173:24	173:56	9	
water	173:24	0:0	10	ts
op	173:27	0:0	10	+=
water	173:30	0:0	10	cur_stream
op	173:40	0:0	10	->
water	173:42	0:0	10	ic
op	173:44	0:0	10	->
water	173:46	0:0	10	start_time
water	173:56	0:0	10	;
call	174:20	174:52	8	stream_seek
arg	174:32	174:42	9	cur_stream
water	174:32	0:0	10	cur_stream
arg	174:44	174:46	9	ts
water	174:44	0:0	10	ts
arg	174:48	174:49	9	0
water	174:48	0:0	10	0
arg	174:51	174:52	9	0
water	174:51	0:0	10	0
water	174:53	0:0	8	;
water	175:16	0:0	8	}
break	176:12	176:17	6	
label	177:8	177:28	6	case SDL_WINDOWEVENT :
switch	178:12	188:12	6	(event . window . event)
cond	178:20	178:33	7	event . window . event
water	178:20	0:0	8	event
op	178:25	0:0	8	.
water	178:26	0:0	8	window
op	178:32	0:0	8	.
water	178:33	0:0	8	event
stmts	178:40	188:12	7	
water	178:40	0:0	8	{
label	179:16	179:44	8	case SDL_WINDOWEVENT_RESIZED :
water	180:20	0:0	8	screen_width
op	180:34	0:0	8	=
water	180:36	0:0	8	cur_stream
op	180:46	0:0	8	->
water	180:48	0:0	8	width
op	180:55	0:0	8	=
water	180:57	0:0	8	event
op	180:62	0:0	8	.
water	180:63	0:0	8	window
op	180:69	0:0	8	.
water	180:70	0:0	8	data1
water	180:75	0:0	8	;
water	181:20	0:0	8	screen_height
op	181:34	0:0	8	=
water	181:36	0:0	8	cur_stream
op	181:46	0:0	8	->
water	181:48	0:0	8	height
op	181:55	0:0	8	=
water	181:57	0:0	8	event
op	181:62	0:0	8	.
water	181:63	0:0	8	window
op	181:69	0:0	8	.
water	181:70	0:0	8	data2
water	181:75	0:0	8	;
if	182:20	185:20	8	(cur_stream -> vis_texture)
cond	182:24	182:36	9	cur_stream -> vis_texture
water	182:24	0:0	10	cur_stream
op	182:34	0:0	10	->
water	182:36	0:0	10	vis_texture
stmts	182:49	185:20	9	
water	182:49	0:0	10	{
call	183:24	183:66	10	SDL_DestroyTexture
arg	183:43	183:66	11	cur_stream->vis_texture
water	183:43	0:0	12	cur_stream
op	183:53	0:0	12	->
water	183:55	0:0	12	vis_texture
water	183:67	0:0	10	;
water	184:24	0:0	10	cur_stream
op	184:34	0:0	10	->
water	184:36	0:0	10	vis_texture
op	184:48	0:0	10	=
water	184:50	0:0	10	NULL
water	184:54	0:0	10	;
water	185:20	0:0	10	}
label	186:16	186:44	8	case SDL_WINDOWEVENT_EXPOSED :
water	187:20	0:0	8	cur_stream
op	187:30	0:0	8	->
water	187:32	0:0	8	force_refresh
op	187:46	0:0	8	=
water	187:48	0:0	8	1
water	187:49	0:0	8	;
water	188:12	0:0	8	}
break	189:12	189:17	6	
label	190:8	190:21	6	case SDL_QUIT :
label	191:8	191:26	6	case FF_QUIT_EVENT :
call	192:12	192:30	6	do_exit
arg	192:20	192:30	7	cur_stream
water	192:20	0:0	8	cur_stream
water	192:31	0:0	6	;
break	193:12	193:17	6	
label	194:8	194:15	6	default :
break	195:12	195:17	6	
water	196:8	0:0	6	}
water	197:4	0:0	4	}

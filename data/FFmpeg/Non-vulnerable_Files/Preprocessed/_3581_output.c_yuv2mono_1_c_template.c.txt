func	1:24	42:0	0	void	yuv2mono_1_c_template
params	2:21	0:0	1	
param	2:22	2:35	2	SwsContext *	c
param	2:37	2:56	2	const int16_t *	buf0
param	3:22	3:44	2	const int16_t *	ubuf[2]
param	3:46	3:68	2	const int16_t *	vbuf[2]
param	4:22	4:42	2	const int16_t *	abuf0
param	4:44	4:57	2	uint8_t *	dest
param	4:59	4:67	2	int	dstW
param	5:22	5:33	2	int	uvalpha
param	5:35	5:40	2	int	y
param	5:42	5:67	2	enum AVPixelFormat	target
stmnts	7:4	41:4	1	
water	7:4	0:0	2	const
water	7:10	0:0	2	uint8_t
op	7:18	0:0	2	*
water	7:20	0:0	2	const
water	7:26	0:0	2	d128
op	7:31	0:0	2	=
water	7:33	0:0	2	ff_dither_8x8_220
op	7:50	0:0	2	[
water	7:51	0:0	2	y
op	7:53	0:0	2	&
water	7:55	0:0	2	7
op	7:56	0:0	2	]
water	7:57	0:0	2	;
decl	8:4	8:9	2	int	i
if	9:4	28:4	2	(c -> dither == SWS_DITHER_ED)
cond	9:8	9:21	3	c -> dither == SWS_DITHER_ED
water	9:8	0:0	4	c
op	9:9	0:0	4	->
water	9:11	0:0	4	dither
op	9:18	0:0	4	==
water	9:21	0:0	4	SWS_DITHER_ED
stmts	9:36	28:4	3	
water	9:36	0:0	4	{
decl	10:8	10:19	4	int	err
op	10:16	0:0	4	=
water	10:18	0:0	4	0
decl	11:8	11:19	4	int	acc
op	11:16	0:0	4	=
water	11:18	0:0	4	0
for	12:8	26:8	4	(i = 0 ;i < dstW;i += 2)
forinit	12:13	12:18	5	i = 0 ;
water	12:13	0:0	6	i
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	i < dstW
water	12:20	0:0	6	i
op	12:22	0:0	6	<
water	12:24	0:0	6	dstW
forexpr	12:30	12:34	5	i += 2
water	12:30	0:0	6	i
op	12:32	0:0	6	+=
water	12:34	0:0	6	2
stmts	12:37	26:8	5	
water	12:37	0:0	6	{
decl	13:12	13:17	6	int	Y
water	14:12	0:0	6	Y
op	14:14	0:0	6	=
water	14:16	0:0	6	(
water	14:17	0:0	6	(
water	14:18	0:0	6	buf0
op	14:22	0:0	6	[
water	14:23	0:0	6	i
op	14:25	0:0	6	+
water	14:27	0:0	6	0
op	14:28	0:0	6	]
op	14:30	0:0	6	+
water	14:32	0:0	6	64
water	14:34	0:0	6	)
op	14:36	0:0	6	>>
water	14:39	0:0	6	7
water	14:40	0:0	6	)
water	14:41	0:0	6	;
water	15:12	0:0	6	Y
op	15:14	0:0	6	+=
water	15:17	0:0	6	(
water	15:18	0:0	6	7
op	15:19	0:0	6	*
water	15:20	0:0	6	err
op	15:24	0:0	6	+
water	15:26	0:0	6	1
op	15:27	0:0	6	*
water	15:28	0:0	6	c
op	15:29	0:0	6	->
water	15:31	0:0	6	dither_error
op	15:43	0:0	6	[
water	15:44	0:0	6	0
op	15:45	0:0	6	]
op	15:46	0:0	6	[
water	15:47	0:0	6	i
op	15:48	0:0	6	]
op	15:50	0:0	6	+
water	15:52	0:0	6	5
op	15:53	0:0	6	*
water	15:54	0:0	6	c
op	15:55	0:0	6	->
water	15:57	0:0	6	dither_error
op	15:69	0:0	6	[
water	15:70	0:0	6	0
op	15:71	0:0	6	]
op	15:72	0:0	6	[
water	15:73	0:0	6	i
op	15:74	0:0	6	+
water	15:75	0:0	6	1
op	15:76	0:0	6	]
op	15:78	0:0	6	+
water	15:80	0:0	6	3
op	15:81	0:0	6	*
water	15:82	0:0	6	c
op	15:83	0:0	6	->
water	15:85	0:0	6	dither_error
op	15:97	0:0	6	[
water	15:98	0:0	6	0
op	15:99	0:0	6	]
op	15:100	0:0	6	[
water	15:101	0:0	6	i
op	15:102	0:0	6	+
water	15:103	0:0	6	2
op	15:104	0:0	6	]
op	15:106	0:0	6	+
water	15:108	0:0	6	8
op	15:110	0:0	6	-
water	15:112	0:0	6	256
water	15:115	0:0	6	)
op	15:116	0:0	6	>>
water	15:118	0:0	6	4
water	15:119	0:0	6	;
water	16:12	0:0	6	c
op	16:13	0:0	6	->
water	16:15	0:0	6	dither_error
op	16:27	0:0	6	[
water	16:28	0:0	6	0
op	16:29	0:0	6	]
op	16:30	0:0	6	[
water	16:31	0:0	6	i
op	16:32	0:0	6	]
op	16:34	0:0	6	=
water	16:36	0:0	6	err
water	16:39	0:0	6	;
water	17:12	0:0	6	acc
op	17:16	0:0	6	=
water	17:18	0:0	6	2
op	17:19	0:0	6	*
water	17:20	0:0	6	acc
op	17:24	0:0	6	+
water	17:26	0:0	6	(
water	17:27	0:0	6	Y
op	17:29	0:0	6	>=
water	17:32	0:0	6	128
water	17:35	0:0	6	)
water	17:36	0:0	6	;
water	18:12	0:0	6	Y
op	18:14	0:0	6	-=
water	18:17	0:0	6	220
op	18:20	0:0	6	*
water	18:21	0:0	6	(
water	18:22	0:0	6	acc
op	18:25	0:0	6	&
water	18:26	0:0	6	1
water	18:27	0:0	6	)
water	18:28	0:0	6	;
water	19:12	0:0	6	err
op	19:16	0:0	6	=
water	19:18	0:0	6	(
water	19:19	0:0	6	(
water	19:20	0:0	6	buf0
op	19:24	0:0	6	[
water	19:25	0:0	6	i
op	19:27	0:0	6	+
water	19:29	0:0	6	1
op	19:30	0:0	6	]
op	19:32	0:0	6	+
water	19:34	0:0	6	64
water	19:36	0:0	6	)
op	19:38	0:0	6	>>
water	19:41	0:0	6	7
water	19:42	0:0	6	)
water	19:43	0:0	6	;
water	20:12	0:0	6	err
op	20:16	0:0	6	+=
water	20:19	0:0	6	(
water	20:20	0:0	6	7
op	20:21	0:0	6	*
water	20:22	0:0	6	Y
op	20:24	0:0	6	+
water	20:26	0:0	6	1
op	20:27	0:0	6	*
water	20:28	0:0	6	c
op	20:29	0:0	6	->
water	20:31	0:0	6	dither_error
op	20:43	0:0	6	[
water	20:44	0:0	6	0
op	20:45	0:0	6	]
op	20:46	0:0	6	[
water	20:47	0:0	6	i
op	20:48	0:0	6	+
water	20:49	0:0	6	1
op	20:50	0:0	6	]
op	20:52	0:0	6	+
water	20:54	0:0	6	5
op	20:55	0:0	6	*
water	20:56	0:0	6	c
op	20:57	0:0	6	->
water	20:59	0:0	6	dither_error
op	20:71	0:0	6	[
water	20:72	0:0	6	0
op	20:73	0:0	6	]
op	20:74	0:0	6	[
water	20:75	0:0	6	i
op	20:76	0:0	6	+
water	20:77	0:0	6	2
op	20:78	0:0	6	]
op	20:80	0:0	6	+
water	20:82	0:0	6	3
op	20:83	0:0	6	*
water	20:84	0:0	6	c
op	20:85	0:0	6	->
water	20:87	0:0	6	dither_error
op	20:99	0:0	6	[
water	20:100	0:0	6	0
op	20:101	0:0	6	]
op	20:102	0:0	6	[
water	20:103	0:0	6	i
op	20:104	0:0	6	+
water	20:105	0:0	6	3
op	20:106	0:0	6	]
op	20:108	0:0	6	+
water	20:110	0:0	6	8
op	20:112	0:0	6	-
water	20:114	0:0	6	256
water	20:117	0:0	6	)
op	20:118	0:0	6	>>
water	20:120	0:0	6	4
water	20:121	0:0	6	;
water	21:12	0:0	6	c
op	21:13	0:0	6	->
water	21:15	0:0	6	dither_error
op	21:27	0:0	6	[
water	21:28	0:0	6	0
op	21:29	0:0	6	]
op	21:30	0:0	6	[
water	21:31	0:0	6	i
op	21:32	0:0	6	+
water	21:33	0:0	6	1
op	21:34	0:0	6	]
op	21:36	0:0	6	=
water	21:38	0:0	6	Y
water	21:39	0:0	6	;
water	22:12	0:0	6	acc
op	22:16	0:0	6	=
water	22:18	0:0	6	2
op	22:19	0:0	6	*
water	22:20	0:0	6	acc
op	22:24	0:0	6	+
water	22:26	0:0	6	(
water	22:27	0:0	6	err
op	22:31	0:0	6	>=
water	22:34	0:0	6	128
water	22:37	0:0	6	)
water	22:38	0:0	6	;
water	23:12	0:0	6	err
op	23:16	0:0	6	-=
water	23:19	0:0	6	220
op	23:22	0:0	6	*
water	23:23	0:0	6	(
water	23:24	0:0	6	acc
op	23:27	0:0	6	&
water	23:28	0:0	6	1
water	23:29	0:0	6	)
water	23:30	0:0	6	;
if	24:12	25:42	6	(( i & 7 ) == 6)
cond	24:16	24:27	7	( i & 7 ) == 6
water	24:16	0:0	8	(
water	24:17	0:0	8	i
op	24:19	0:0	8	&
water	24:21	0:0	8	7
water	24:22	0:0	8	)
op	24:24	0:0	8	==
water	24:27	0:0	8	6
stmts	25:16	25:42	7	
call	25:16	25:41	8	output_pixel
arg	25:29	25:36	9	*dest++
op	25:29	0:0	10	*
water	25:30	0:0	10	dest
op	25:34	0:0	10	++
arg	25:38	25:41	9	acc
water	25:38	0:0	10	acc
water	25:42	0:0	8	;
water	26:8	0:0	6	}
water	27:8	0:0	4	c
op	27:9	0:0	4	->
water	27:11	0:0	4	dither_error
op	27:23	0:0	4	[
water	27:24	0:0	4	0
op	27:25	0:0	4	]
op	27:26	0:0	4	[
water	27:27	0:0	4	i
op	27:28	0:0	4	]
op	27:30	0:0	4	=
water	27:32	0:0	4	err
water	27:35	0:0	4	;
water	28:4	0:0	4	}
else	28:6	41:4	2
stmts	28:11	41:4	3	
water	28:11	0:0	4	{
for	29:4	40:4	4	(i = 0 ;i < dstW;i += 8)
forinit	29:9	29:14	5	i = 0 ;
water	29:9	0:0	6	i
op	29:11	0:0	6	=
water	29:13	0:0	6	0
water	29:14	0:0	6	;
cond	29:16	29:20	5	i < dstW
water	29:16	0:0	6	i
op	29:18	0:0	6	<
water	29:20	0:0	6	dstW
forexpr	29:26	29:31	5	i += 8
water	29:26	0:0	6	i
op	29:28	0:0	6	+=
water	29:31	0:0	6	8
stmts	29:34	40:4	5	
water	29:34	0:0	6	{
decl	30:8	30:19	6	int	acc
op	30:16	0:0	6	=
water	30:18	0:0	6	0
call	31:8	31:63	6	accumulate_bit
arg	31:23	31:26	7	acc
water	31:23	0:0	8	acc
arg	31:28	31:63	7	((buf0[i+0]+64)>>7)+d128[0]
water	31:28	0:0	8	(
water	31:29	0:0	8	(
water	31:30	0:0	8	buf0
op	31:34	0:0	8	[
water	31:35	0:0	8	i
op	31:37	0:0	8	+
water	31:39	0:0	8	0
op	31:40	0:0	8	]
op	31:42	0:0	8	+
water	31:44	0:0	8	64
water	31:46	0:0	8	)
op	31:48	0:0	8	>>
water	31:51	0:0	8	7
water	31:52	0:0	8	)
op	31:54	0:0	8	+
water	31:56	0:0	8	d128
op	31:60	0:0	8	[
water	31:61	0:0	8	0
op	31:62	0:0	8	]
water	31:64	0:0	6	;
call	32:8	32:63	6	accumulate_bit
arg	32:23	32:26	7	acc
water	32:23	0:0	8	acc
arg	32:28	32:63	7	((buf0[i+1]+64)>>7)+d128[1]
water	32:28	0:0	8	(
water	32:29	0:0	8	(
water	32:30	0:0	8	buf0
op	32:34	0:0	8	[
water	32:35	0:0	8	i
op	32:37	0:0	8	+
water	32:39	0:0	8	1
op	32:40	0:0	8	]
op	32:42	0:0	8	+
water	32:44	0:0	8	64
water	32:46	0:0	8	)
op	32:48	0:0	8	>>
water	32:51	0:0	8	7
water	32:52	0:0	8	)
op	32:54	0:0	8	+
water	32:56	0:0	8	d128
op	32:60	0:0	8	[
water	32:61	0:0	8	1
op	32:62	0:0	8	]
water	32:64	0:0	6	;
call	33:8	33:63	6	accumulate_bit
arg	33:23	33:26	7	acc
water	33:23	0:0	8	acc
arg	33:28	33:63	7	((buf0[i+2]+64)>>7)+d128[2]
water	33:28	0:0	8	(
water	33:29	0:0	8	(
water	33:30	0:0	8	buf0
op	33:34	0:0	8	[
water	33:35	0:0	8	i
op	33:37	0:0	8	+
water	33:39	0:0	8	2
op	33:40	0:0	8	]
op	33:42	0:0	8	+
water	33:44	0:0	8	64
water	33:46	0:0	8	)
op	33:48	0:0	8	>>
water	33:51	0:0	8	7
water	33:52	0:0	8	)
op	33:54	0:0	8	+
water	33:56	0:0	8	d128
op	33:60	0:0	8	[
water	33:61	0:0	8	2
op	33:62	0:0	8	]
water	33:64	0:0	6	;
call	34:8	34:63	6	accumulate_bit
arg	34:23	34:26	7	acc
water	34:23	0:0	8	acc
arg	34:28	34:63	7	((buf0[i+3]+64)>>7)+d128[3]
water	34:28	0:0	8	(
water	34:29	0:0	8	(
water	34:30	0:0	8	buf0
op	34:34	0:0	8	[
water	34:35	0:0	8	i
op	34:37	0:0	8	+
water	34:39	0:0	8	3
op	34:40	0:0	8	]
op	34:42	0:0	8	+
water	34:44	0:0	8	64
water	34:46	0:0	8	)
op	34:48	0:0	8	>>
water	34:51	0:0	8	7
water	34:52	0:0	8	)
op	34:54	0:0	8	+
water	34:56	0:0	8	d128
op	34:60	0:0	8	[
water	34:61	0:0	8	3
op	34:62	0:0	8	]
water	34:64	0:0	6	;
call	35:8	35:63	6	accumulate_bit
arg	35:23	35:26	7	acc
water	35:23	0:0	8	acc
arg	35:28	35:63	7	((buf0[i+4]+64)>>7)+d128[4]
water	35:28	0:0	8	(
water	35:29	0:0	8	(
water	35:30	0:0	8	buf0
op	35:34	0:0	8	[
water	35:35	0:0	8	i
op	35:37	0:0	8	+
water	35:39	0:0	8	4
op	35:40	0:0	8	]
op	35:42	0:0	8	+
water	35:44	0:0	8	64
water	35:46	0:0	8	)
op	35:48	0:0	8	>>
water	35:51	0:0	8	7
water	35:52	0:0	8	)
op	35:54	0:0	8	+
water	35:56	0:0	8	d128
op	35:60	0:0	8	[
water	35:61	0:0	8	4
op	35:62	0:0	8	]
water	35:64	0:0	6	;
call	36:8	36:63	6	accumulate_bit
arg	36:23	36:26	7	acc
water	36:23	0:0	8	acc
arg	36:28	36:63	7	((buf0[i+5]+64)>>7)+d128[5]
water	36:28	0:0	8	(
water	36:29	0:0	8	(
water	36:30	0:0	8	buf0
op	36:34	0:0	8	[
water	36:35	0:0	8	i
op	36:37	0:0	8	+
water	36:39	0:0	8	5
op	36:40	0:0	8	]
op	36:42	0:0	8	+
water	36:44	0:0	8	64
water	36:46	0:0	8	)
op	36:48	0:0	8	>>
water	36:51	0:0	8	7
water	36:52	0:0	8	)
op	36:54	0:0	8	+
water	36:56	0:0	8	d128
op	36:60	0:0	8	[
water	36:61	0:0	8	5
op	36:62	0:0	8	]
water	36:64	0:0	6	;
call	37:8	37:63	6	accumulate_bit
arg	37:23	37:26	7	acc
water	37:23	0:0	8	acc
arg	37:28	37:63	7	((buf0[i+6]+64)>>7)+d128[6]
water	37:28	0:0	8	(
water	37:29	0:0	8	(
water	37:30	0:0	8	buf0
op	37:34	0:0	8	[
water	37:35	0:0	8	i
op	37:37	0:0	8	+
water	37:39	0:0	8	6
op	37:40	0:0	8	]
op	37:42	0:0	8	+
water	37:44	0:0	8	64
water	37:46	0:0	8	)
op	37:48	0:0	8	>>
water	37:51	0:0	8	7
water	37:52	0:0	8	)
op	37:54	0:0	8	+
water	37:56	0:0	8	d128
op	37:60	0:0	8	[
water	37:61	0:0	8	6
op	37:62	0:0	8	]
water	37:64	0:0	6	;
call	38:8	38:63	6	accumulate_bit
arg	38:23	38:26	7	acc
water	38:23	0:0	8	acc
arg	38:28	38:63	7	((buf0[i+7]+64)>>7)+d128[7]
water	38:28	0:0	8	(
water	38:29	0:0	8	(
water	38:30	0:0	8	buf0
op	38:34	0:0	8	[
water	38:35	0:0	8	i
op	38:37	0:0	8	+
water	38:39	0:0	8	7
op	38:40	0:0	8	]
op	38:42	0:0	8	+
water	38:44	0:0	8	64
water	38:46	0:0	8	)
op	38:48	0:0	8	>>
water	38:51	0:0	8	7
water	38:52	0:0	8	)
op	38:54	0:0	8	+
water	38:56	0:0	8	d128
op	38:60	0:0	8	[
water	38:61	0:0	8	7
op	38:62	0:0	8	]
water	38:64	0:0	6	;
call	39:8	39:33	6	output_pixel
arg	39:21	39:28	7	*dest++
op	39:21	0:0	8	*
water	39:22	0:0	8	dest
op	39:26	0:0	8	++
arg	39:30	39:33	7	acc
water	39:30	0:0	8	acc
water	39:34	0:0	6	;
water	40:4	0:0	6	}
water	41:4	0:0	4	}

func	1:0	75:0	0	static inline int	mpeg1_fast_decode_block_inter
params	1:47	0:0	1	
param	1:48	1:65	2	MpegEncContext *	s
param	2:48	2:62	2	int16_t *	block
param	2:64	2:69	2	int	n
stmnts	0:0	74:12	1	
decl	4:4	4:24	2	int	level
water	4:13	0:0	2	,
decl	4:4	4:24	2	int	i
water	4:16	0:0	2	,
decl	4:4	4:24	2	int	j
water	4:19	0:0	2	,
decl	4:4	4:24	2	int	run
decl	5:4	5:43	2	RLTable	*rl
op	5:29	0:0	2	=
op	5:31	0:0	2	&
water	5:32	0:0	2	ff_rl_mpeg1
water	6:4	0:0	2	uint8_t
op	6:12	0:0	2	*
water	6:13	0:0	2	const
water	6:19	0:0	2	scantable
op	6:29	0:0	2	=
water	6:31	0:0	2	s
op	6:32	0:0	2	->
water	6:34	0:0	2	intra_scantable
op	6:49	0:0	2	.
water	6:50	0:0	2	permutated
water	6:60	0:0	2	;
decl	7:4	7:40	2	const int	qscale
op	7:29	0:0	2	=
water	7:31	0:0	2	s
op	7:32	0:0	2	->
water	7:34	0:0	2	qscale
water	8:4	0:0	2	{
call	9:8	9:30	2	OPEN_READER
arg	9:20	9:22	3	re
water	9:20	0:0	4	re
arg	9:24	9:30	3	&s->gb
op	9:24	0:0	4	&
water	9:25	0:0	4	s
op	9:26	0:0	4	->
water	9:28	0:0	4	gb
water	9:31	0:0	2	;
water	10:8	0:0	2	i
op	10:10	0:0	2	=
op	10:12	0:0	2	-
water	10:13	0:0	2	1
water	10:14	0:0	2	;
call	12:8	12:31	2	UPDATE_CACHE
arg	12:21	12:23	3	re
water	12:21	0:0	4	re
arg	12:25	12:31	3	&s->gb
op	12:25	0:0	4	&
water	12:26	0:0	4	s
op	12:27	0:0	4	->
water	12:29	0:0	4	gb
water	12:32	0:0	2	;
if	13:8	23:8	2	(( ( int32_t )GET_CACHE (re ,& s -> gb ) ) < 0)
cond	13:12	13:48	3	( ( int32_t )GET_CACHE (re ,& s -> gb ) ) < 0
water	13:12	0:0	4	(
water	13:13	0:0	4	(
water	13:14	0:0	4	int32_t
water	13:21	0:0	4	)
call	13:23	13:43	4	GET_CACHE
arg	13:33	13:35	5	re
water	13:33	0:0	6	re
arg	13:37	13:43	5	&s->gb
op	13:37	0:0	6	&
water	13:38	0:0	6	s
op	13:39	0:0	6	->
water	13:41	0:0	6	gb
water	13:44	0:0	4	)
op	13:46	0:0	4	<
water	13:48	0:0	4	0
stmts	13:51	23:8	3	
water	13:51	0:0	4	{
water	14:12	0:0	4	level
op	14:18	0:0	4	=
water	14:20	0:0	4	(
water	14:21	0:0	4	3
op	14:23	0:0	4	*
water	14:25	0:0	4	qscale
water	14:31	0:0	4	)
op	14:33	0:0	4	>>
water	14:36	0:0	4	1
water	14:37	0:0	4	;
water	15:12	0:0	4	level
op	15:18	0:0	4	=
water	15:20	0:0	4	(
water	15:21	0:0	4	level
op	15:27	0:0	4	-
water	15:29	0:0	4	1
water	15:30	0:0	4	)
op	15:32	0:0	4	|
water	15:34	0:0	4	1
water	15:35	0:0	4	;
if	16:12	17:30	4	(GET_CACHE (re ,& s -> gb ) & 0 x40000000)
cond	16:16	16:41	5	GET_CACHE (re ,& s -> gb ) & 0 x40000000
call	16:16	16:36	6	GET_CACHE
arg	16:26	16:28	7	re
water	16:26	0:0	8	re
arg	16:30	16:36	7	&s->gb
op	16:30	0:0	8	&
water	16:31	0:0	8	s
op	16:32	0:0	8	->
water	16:34	0:0	8	gb
op	16:38	0:0	6	&
water	16:40	0:0	6	0
water	16:41	0:0	6	x40000000
stmts	17:16	17:30	5	
water	17:16	0:0	6	level
op	17:22	0:0	6	=
op	17:24	0:0	6	-
water	17:25	0:0	6	level
water	17:30	0:0	6	;
water	18:12	0:0	4	block
op	18:17	0:0	4	[
water	18:18	0:0	4	0
op	18:19	0:0	4	]
op	18:21	0:0	4	=
water	18:23	0:0	4	level
water	18:28	0:0	4	;
water	19:12	0:0	4	i
op	19:13	0:0	4	++
water	19:15	0:0	4	;
call	20:12	20:35	4	SKIP_BITS
arg	20:22	20:24	5	re
water	20:22	0:0	6	re
arg	20:26	20:32	5	&s->gb
op	20:26	0:0	6	&
water	20:27	0:0	6	s
op	20:28	0:0	6	->
water	20:30	0:0	6	gb
arg	20:34	20:35	5	2
water	20:34	0:0	6	2
water	20:36	0:0	4	;
if	21:12	22:24	4	(( ( int32_t )GET_CACHE (re ,& s -> gb ) ) <= ( int32_t ) 0 xBFFFFFFF)
cond	21:16	21:64	5	( ( int32_t )GET_CACHE (re ,& s -> gb ) ) <= ( int32_t ) 0 xBFFFFFFF
water	21:16	0:0	6	(
water	21:17	0:0	6	(
water	21:18	0:0	6	int32_t
water	21:25	0:0	6	)
call	21:27	21:47	6	GET_CACHE
arg	21:37	21:39	7	re
water	21:37	0:0	8	re
arg	21:41	21:47	7	&s->gb
op	21:41	0:0	8	&
water	21:42	0:0	8	s
op	21:43	0:0	8	->
water	21:45	0:0	8	gb
water	21:48	0:0	6	)
op	21:50	0:0	6	<=
water	21:53	0:0	6	(
water	21:54	0:0	6	int32_t
water	21:61	0:0	6	)
water	21:63	0:0	6	0
water	21:64	0:0	6	xBFFFFFFF
stmts	22:16	22:24	5	
goto	22:16	22:24	6	end
water	22:21	0:0	7	end
water	23:8	0:0	4	}
for	25:8	68:8	2	(;;)
forinit	25:13	25:13	3	;
water	25:13	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	25:17	68:8	3	
water	25:17	0:0	4	{
call	26:12	27:41	4	GET_RL_VLC
arg	26:23	26:28	5	level
water	26:23	0:0	6	level
arg	26:30	26:33	5	run
water	26:30	0:0	6	run
arg	26:35	26:37	5	re
water	26:35	0:0	6	re
arg	26:39	26:45	5	&s->gb
op	26:39	0:0	6	&
water	26:40	0:0	6	s
op	26:41	0:0	6	->
water	26:43	0:0	6	gb
arg	26:47	26:60	5	rl->rl_vlc[0]
water	26:47	0:0	6	rl
op	26:49	0:0	6	->
water	26:51	0:0	6	rl_vlc
op	26:57	0:0	6	[
water	26:58	0:0	6	0
op	26:59	0:0	6	]
arg	27:23	27:35	5	TEX_VLC_BITS
water	27:23	0:0	6	TEX_VLC_BITS
arg	27:37	27:38	5	2
water	27:37	0:0	6	2
arg	27:40	27:41	5	0
water	27:40	0:0	6	0
water	27:42	0:0	4	;
if	28:12	37:12	4	(level != 0)
cond	28:16	28:25	5	level != 0
water	28:16	0:0	6	level
op	28:22	0:0	6	!=
water	28:25	0:0	6	0
stmts	28:28	37:12	5	
water	28:28	0:0	6	{
water	29:16	0:0	6	i
op	29:18	0:0	6	+=
water	29:21	0:0	6	run
water	29:24	0:0	6	;
call	30:16	30:42	6	check_scantable_index
arg	30:38	30:39	7	s
water	30:38	0:0	8	s
arg	30:41	30:42	7	i
water	30:41	0:0	8	i
water	30:43	0:0	6	;
water	31:16	0:0	6	j
op	31:18	0:0	6	=
water	31:20	0:0	6	scantable
op	31:29	0:0	6	[
water	31:30	0:0	6	i
op	31:31	0:0	6	]
water	31:32	0:0	6	;
water	32:16	0:0	6	level
op	32:22	0:0	6	=
water	32:24	0:0	6	(
water	32:25	0:0	6	(
water	32:26	0:0	6	level
op	32:32	0:0	6	*
water	32:34	0:0	6	2
op	32:36	0:0	6	+
water	32:38	0:0	6	1
water	32:39	0:0	6	)
op	32:41	0:0	6	*
water	32:43	0:0	6	qscale
water	32:49	0:0	6	)
op	32:51	0:0	6	>>
water	32:54	0:0	6	1
water	32:55	0:0	6	;
water	33:16	0:0	6	level
op	33:22	0:0	6	=
water	33:24	0:0	6	(
water	33:25	0:0	6	level
op	33:31	0:0	6	-
water	33:33	0:0	6	1
water	33:34	0:0	6	)
op	33:36	0:0	6	|
water	33:38	0:0	6	1
water	33:39	0:0	6	;
water	34:16	0:0	6	level
op	34:22	0:0	6	=
water	34:24	0:0	6	(
water	34:25	0:0	6	level
op	34:31	0:0	6	^
call	34:33	34:57	6	SHOW_SBITS
arg	34:44	34:46	7	re
water	34:44	0:0	8	re
arg	34:48	34:54	7	&s->gb
op	34:48	0:0	8	&
water	34:49	0:0	8	s
op	34:50	0:0	8	->
water	34:52	0:0	8	gb
arg	34:56	34:57	7	1
water	34:56	0:0	8	1
water	34:58	0:0	6	)
op	34:60	0:0	6	-
call	35:24	35:48	6	SHOW_SBITS
arg	35:35	35:37	7	re
water	35:35	0:0	8	re
arg	35:39	35:45	7	&s->gb
op	35:39	0:0	8	&
water	35:40	0:0	8	s
op	35:41	0:0	8	->
water	35:43	0:0	8	gb
arg	35:47	35:48	7	1
water	35:47	0:0	8	1
water	35:49	0:0	6	;
call	36:16	36:39	6	SKIP_BITS
arg	36:26	36:28	7	re
water	36:26	0:0	8	re
arg	36:30	36:36	7	&s->gb
op	36:30	0:0	8	&
water	36:31	0:0	8	s
op	36:32	0:0	8	->
water	36:34	0:0	8	gb
arg	36:38	36:39	7	1
water	36:38	0:0	8	1
water	36:40	0:0	6	;
water	37:12	0:0	6	}
else	37:14	63:12	4
stmts	37:19	63:12	5	
water	37:19	0:0	6	{
water	39:16	0:0	6	run
op	39:20	0:0	6	=
call	39:22	39:46	6	SHOW_UBITS
arg	39:33	39:35	7	re
water	39:33	0:0	8	re
arg	39:37	39:43	7	&s->gb
op	39:37	0:0	8	&
water	39:38	0:0	8	s
op	39:39	0:0	8	->
water	39:41	0:0	8	gb
arg	39:45	39:46	7	6
water	39:45	0:0	8	6
op	39:48	0:0	6	+
water	39:50	0:0	6	1
water	39:51	0:0	6	;
call	40:16	40:44	6	LAST_SKIP_BITS
arg	40:31	40:33	7	re
water	40:31	0:0	8	re
arg	40:35	40:41	7	&s->gb
op	40:35	0:0	8	&
water	40:36	0:0	8	s
op	40:37	0:0	8	->
water	40:39	0:0	8	gb
arg	40:43	40:44	7	6
water	40:43	0:0	8	6
water	40:45	0:0	6	;
call	41:16	41:39	6	UPDATE_CACHE
arg	41:29	41:31	7	re
water	41:29	0:0	8	re
arg	41:33	41:39	7	&s->gb
op	41:33	0:0	8	&
water	41:34	0:0	8	s
op	41:35	0:0	8	->
water	41:37	0:0	8	gb
water	41:40	0:0	6	;
water	42:16	0:0	6	level
op	42:22	0:0	6	=
call	42:24	42:48	6	SHOW_SBITS
arg	42:35	42:37	7	re
water	42:35	0:0	8	re
arg	42:39	42:45	7	&s->gb
op	42:39	0:0	8	&
water	42:40	0:0	8	s
op	42:41	0:0	8	->
water	42:43	0:0	8	gb
arg	42:47	42:48	7	8
water	42:47	0:0	8	8
water	42:49	0:0	6	;
call	43:16	43:39	6	SKIP_BITS
arg	43:26	43:28	7	re
water	43:26	0:0	8	re
arg	43:30	43:36	7	&s->gb
op	43:30	0:0	8	&
water	43:31	0:0	8	s
op	43:32	0:0	8	->
water	43:34	0:0	8	gb
arg	43:38	43:39	7	8
water	43:38	0:0	8	8
water	43:40	0:0	6	;
if	44:16	47:16	6	(level == - 128)
cond	44:20	44:30	7	level == - 128
water	44:20	0:0	8	level
op	44:26	0:0	8	==
op	44:29	0:0	8	-
water	44:30	0:0	8	128
stmts	44:35	47:16	7	
water	44:35	0:0	8	{
water	45:20	0:0	8	level
op	45:26	0:0	8	=
call	45:28	45:52	8	SHOW_UBITS
arg	45:39	45:41	9	re
water	45:39	0:0	10	re
arg	45:43	45:49	9	&s->gb
op	45:43	0:0	10	&
water	45:44	0:0	10	s
op	45:45	0:0	10	->
water	45:47	0:0	10	gb
arg	45:51	45:52	9	8
water	45:51	0:0	10	8
op	45:54	0:0	8	-
water	45:56	0:0	8	256
water	45:59	0:0	8	;
call	46:20	46:43	8	SKIP_BITS
arg	46:30	46:32	9	re
water	46:30	0:0	10	re
arg	46:34	46:40	9	&s->gb
op	46:34	0:0	10	&
water	46:35	0:0	10	s
op	46:36	0:0	10	->
water	46:38	0:0	10	gb
arg	46:42	46:43	9	8
water	46:42	0:0	10	8
water	46:44	0:0	8	;
water	47:16	0:0	8	}
else	47:18	50:16	6
stmts	47:23	50:16	7	
if	47:23	50:16	8	(level == 0)
cond	47:27	47:36	9	level == 0
water	47:27	0:0	10	level
op	47:33	0:0	10	==
water	47:36	0:0	10	0
stmts	47:39	50:16	9	
water	47:39	0:0	10	{
water	48:20	0:0	10	level
op	48:26	0:0	10	=
call	48:28	48:52	10	SHOW_UBITS
arg	48:39	48:41	11	re
water	48:39	0:0	12	re
arg	48:43	48:49	11	&s->gb
op	48:43	0:0	12	&
water	48:44	0:0	12	s
op	48:45	0:0	12	->
water	48:47	0:0	12	gb
arg	48:51	48:52	11	8
water	48:51	0:0	12	8
water	48:53	0:0	10	;
call	49:20	49:43	10	SKIP_BITS
arg	49:30	49:32	11	re
water	49:30	0:0	12	re
arg	49:34	49:40	11	&s->gb
op	49:34	0:0	12	&
water	49:35	0:0	12	s
op	49:36	0:0	12	->
water	49:38	0:0	12	gb
arg	49:42	49:43	11	8
water	49:42	0:0	12	8
water	49:44	0:0	10	;
water	50:16	0:0	10	}
water	51:16	0:0	6	i
op	51:18	0:0	6	+=
water	51:21	0:0	6	run
water	51:24	0:0	6	;
call	52:16	52:42	6	check_scantable_index
arg	52:38	52:39	7	s
water	52:38	0:0	8	s
arg	52:41	52:42	7	i
water	52:41	0:0	8	i
water	52:43	0:0	6	;
water	53:16	0:0	6	j
op	53:18	0:0	6	=
water	53:20	0:0	6	scantable
op	53:29	0:0	6	[
water	53:30	0:0	6	i
op	53:31	0:0	6	]
water	53:32	0:0	6	;
if	54:16	59:16	6	(level < 0)
cond	54:20	54:28	7	level < 0
water	54:20	0:0	8	level
op	54:26	0:0	8	<
water	54:28	0:0	8	0
stmts	54:31	59:16	7	
water	54:31	0:0	8	{
water	55:20	0:0	8	level
op	55:26	0:0	8	=
op	55:28	0:0	8	-
water	55:29	0:0	8	level
water	55:34	0:0	8	;
water	56:20	0:0	8	level
op	56:26	0:0	8	=
water	56:28	0:0	8	(
water	56:29	0:0	8	(
water	56:30	0:0	8	level
op	56:36	0:0	8	*
water	56:38	0:0	8	2
op	56:40	0:0	8	+
water	56:42	0:0	8	1
water	56:43	0:0	8	)
op	56:45	0:0	8	*
water	56:47	0:0	8	qscale
water	56:53	0:0	8	)
op	56:55	0:0	8	>>
water	56:58	0:0	8	1
water	56:59	0:0	8	;
water	57:20	0:0	8	level
op	57:26	0:0	8	=
water	57:28	0:0	8	(
water	57:29	0:0	8	level
op	57:35	0:0	8	-
water	57:37	0:0	8	1
water	57:38	0:0	8	)
op	57:40	0:0	8	|
water	57:42	0:0	8	1
water	57:43	0:0	8	;
water	58:20	0:0	8	level
op	58:26	0:0	8	=
op	58:28	0:0	8	-
water	58:29	0:0	8	level
water	58:34	0:0	8	;
water	59:16	0:0	8	}
else	59:18	62:16	6
stmts	59:23	62:16	7	
water	59:23	0:0	8	{
water	60:20	0:0	8	level
op	60:26	0:0	8	=
water	60:28	0:0	8	(
water	60:29	0:0	8	(
water	60:30	0:0	8	level
op	60:36	0:0	8	*
water	60:38	0:0	8	2
op	60:40	0:0	8	+
water	60:42	0:0	8	1
water	60:43	0:0	8	)
op	60:45	0:0	8	*
water	60:47	0:0	8	qscale
water	60:53	0:0	8	)
op	60:55	0:0	8	>>
water	60:58	0:0	8	1
water	60:59	0:0	8	;
water	61:20	0:0	8	level
op	61:26	0:0	8	=
water	61:28	0:0	8	(
water	61:29	0:0	8	level
op	61:35	0:0	8	-
water	61:37	0:0	8	1
water	61:38	0:0	8	)
op	61:40	0:0	8	|
water	61:42	0:0	8	1
water	61:43	0:0	8	;
water	62:16	0:0	8	}
water	63:12	0:0	6	}
water	64:12	0:0	4	block
op	64:17	0:0	4	[
water	64:18	0:0	4	j
op	64:19	0:0	4	]
op	64:21	0:0	4	=
water	64:23	0:0	4	level
water	64:28	0:0	4	;
if	65:12	66:21	4	(( ( int32_t )GET_CACHE (re ,& s -> gb ) ) <= ( int32_t ) 0 xBFFFFFFF)
cond	65:16	65:64	5	( ( int32_t )GET_CACHE (re ,& s -> gb ) ) <= ( int32_t ) 0 xBFFFFFFF
water	65:16	0:0	6	(
water	65:17	0:0	6	(
water	65:18	0:0	6	int32_t
water	65:25	0:0	6	)
call	65:27	65:47	6	GET_CACHE
arg	65:37	65:39	7	re
water	65:37	0:0	8	re
arg	65:41	65:47	7	&s->gb
op	65:41	0:0	8	&
water	65:42	0:0	8	s
op	65:43	0:0	8	->
water	65:45	0:0	8	gb
water	65:48	0:0	6	)
op	65:50	0:0	6	<=
water	65:53	0:0	6	(
water	65:54	0:0	6	int32_t
water	65:61	0:0	6	)
water	65:63	0:0	6	0
water	65:64	0:0	6	xBFFFFFFF
stmts	66:16	66:21	5	
break	66:16	66:21	6	
call	67:12	67:35	4	UPDATE_CACHE
arg	67:25	67:27	5	re
water	67:25	0:0	6	re
arg	67:29	67:35	5	&s->gb
op	67:29	0:0	6	&
water	67:30	0:0	6	s
op	67:31	0:0	6	->
water	67:33	0:0	6	gb
water	67:36	0:0	4	;
water	68:8	0:0	4	}
label	69:0	69:3	2	end :
call	70:8	70:36	2	LAST_SKIP_BITS
arg	70:23	70:25	3	re
water	70:23	0:0	4	re
arg	70:27	70:33	3	&s->gb
op	70:27	0:0	4	&
water	70:28	0:0	4	s
op	70:29	0:0	4	->
water	70:31	0:0	4	gb
arg	70:35	70:36	3	2
water	70:35	0:0	4	2
water	70:37	0:0	2	;
call	71:8	71:31	2	CLOSE_READER
arg	71:21	71:23	3	re
water	71:21	0:0	4	re
arg	71:25	71:31	3	&s->gb
op	71:25	0:0	4	&
water	71:26	0:0	4	s
op	71:27	0:0	4	->
water	71:29	0:0	4	gb
water	71:32	0:0	2	;
water	72:4	0:0	2	}
water	73:4	0:0	2	s
op	73:5	0:0	2	->
water	73:7	0:0	2	block_last_index
op	73:23	0:0	2	[
water	73:24	0:0	2	n
op	73:25	0:0	2	]
op	73:27	0:0	2	=
water	73:29	0:0	2	i
water	73:30	0:0	2	;
return	74:4	74:12	2	0
water	74:11	0:0	3	0

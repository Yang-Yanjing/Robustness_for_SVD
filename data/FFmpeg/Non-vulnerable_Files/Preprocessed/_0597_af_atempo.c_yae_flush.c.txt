func	1:0	65:0	0	static int	yae_flush
params	1:20	0:0	1	
param	1:21	1:42	2	ATempoContext *	atempo
param	2:21	2:38	2	uint8_t * *	dst_ref
param	3:21	3:37	2	uint8_t *	dst_end
stmnts	0:0	64:65	1	
decl	5:4	5:47	2	AudioFragment	*frag
op	5:24	0:0	2	=
call	5:26	5:46	3	yae_curr_frag
arg	5:40	5:46	4	atempo
water	5:40	0:0	5	atempo
decl	6:4	6:23	2	int64_t	overlap_end
decl	7:4	7:22	2	int64_t	start_here
decl	8:4	8:21	2	int64_t	stop_here
decl	9:4	9:18	2	int64_t	offset
decl	10:4	10:22	2	const uint8_t	*src
decl	11:4	11:16	2	uint8_t	*dst
decl	12:4	12:16	2	int	src_size
decl	13:4	13:16	2	int	dst_size
decl	14:4	14:14	2	int	nbytes
water	15:4	0:0	2	atempo
op	15:10	0:0	2	->
water	15:12	0:0	2	state
op	15:18	0:0	2	=
water	15:20	0:0	2	YAE_FLUSH_OUTPUT
water	15:36	0:0	2	;
if	16:4	20:4	2	(atempo -> position [ 0 ] == frag -> position [ 0 ] + frag -> nsamples && atempo -> position [ 1 ] == frag -> position [ 1 ] + frag -> nsamples)
cond	16:8	17:57	3	atempo -> position [ 0 ] == frag -> position [ 0 ] + frag -> nsamples && atempo -> position [ 1 ] == frag -> position [ 1 ] + frag -> nsamples
water	16:8	0:0	4	atempo
op	16:14	0:0	4	->
water	16:16	0:0	4	position
op	16:24	0:0	4	[
water	16:25	0:0	4	0
op	16:26	0:0	4	]
op	16:28	0:0	4	==
water	16:31	0:0	4	frag
op	16:35	0:0	4	->
water	16:37	0:0	4	position
op	16:45	0:0	4	[
water	16:46	0:0	4	0
op	16:47	0:0	4	]
op	16:49	0:0	4	+
water	16:51	0:0	4	frag
op	16:55	0:0	4	->
water	16:57	0:0	4	nsamples
op	16:66	0:0	4	&&
water	17:8	0:0	4	atempo
op	17:14	0:0	4	->
water	17:16	0:0	4	position
op	17:24	0:0	4	[
water	17:25	0:0	4	1
op	17:26	0:0	4	]
op	17:28	0:0	4	==
water	17:31	0:0	4	frag
op	17:35	0:0	4	->
water	17:37	0:0	4	position
op	17:45	0:0	4	[
water	17:46	0:0	4	1
op	17:47	0:0	4	]
op	17:49	0:0	4	+
water	17:51	0:0	4	frag
op	17:55	0:0	4	->
water	17:57	0:0	4	nsamples
stmts	17:67	20:4	3	
water	17:67	0:0	4	{
return	19:8	19:16	4	0
water	19:15	0:0	5	0
water	20:4	0:0	4	}
if	21:4	35:4	2	(frag -> position [ 0 ] + frag -> nsamples < atempo -> position [ 0 ])
cond	21:8	21:63	3	frag -> position [ 0 ] + frag -> nsamples < atempo -> position [ 0 ]
water	21:8	0:0	4	frag
op	21:12	0:0	4	->
water	21:14	0:0	4	position
op	21:22	0:0	4	[
water	21:23	0:0	4	0
op	21:24	0:0	4	]
op	21:26	0:0	4	+
water	21:28	0:0	4	frag
op	21:32	0:0	4	->
water	21:34	0:0	4	nsamples
op	21:43	0:0	4	<
water	21:45	0:0	4	atempo
op	21:51	0:0	4	->
water	21:53	0:0	4	position
op	21:61	0:0	4	[
water	21:62	0:0	4	0
op	21:63	0:0	4	]
stmts	21:66	35:4	3	
water	21:66	0:0	4	{
call	23:8	23:40	4	yae_load_frag
arg	23:22	23:28	5	atempo
water	23:22	0:0	6	atempo
arg	23:30	23:34	5	NULL
water	23:30	0:0	6	NULL
arg	23:36	23:40	5	NULL
water	23:36	0:0	6	NULL
water	23:41	0:0	4	;
if	24:8	34:8	4	(atempo -> nfrag)
cond	24:12	24:20	5	atempo -> nfrag
water	24:12	0:0	6	atempo
op	24:18	0:0	6	->
water	24:20	0:0	6	nfrag
stmts	24:27	34:8	5	
water	24:27	0:0	6	{
call	26:12	26:36	6	yae_downmix
arg	26:24	26:30	7	atempo
water	26:24	0:0	8	atempo
arg	26:32	26:36	7	frag
water	26:32	0:0	8	frag
water	26:37	0:0	6	;
call	28:12	28:60	6	av_rdft_calc
arg	28:25	28:48	7	atempo->real_to_complex
water	28:25	0:0	8	atempo
op	28:31	0:0	8	->
water	28:33	0:0	8	real_to_complex
arg	28:50	28:60	7	frag->xdat
water	28:50	0:0	8	frag
op	28:54	0:0	8	->
water	28:56	0:0	8	xdat
water	28:61	0:0	6	;
if	30:12	33:12	6	(yae_adjust_position (atempo ))
cond	30:16	30:42	7	yae_adjust_position (atempo )
call	30:16	30:42	8	yae_adjust_position
arg	30:36	30:42	9	atempo
water	30:36	0:0	10	atempo
stmts	30:45	33:12	7	
water	30:45	0:0	8	{
call	32:16	32:48	8	yae_load_frag
arg	32:30	32:36	9	atempo
water	32:30	0:0	10	atempo
arg	32:38	32:42	9	NULL
water	32:38	0:0	10	NULL
arg	32:44	32:48	9	NULL
water	32:44	0:0	10	NULL
water	32:49	0:0	8	;
water	33:12	0:0	8	}
water	34:8	0:0	6	}
water	35:4	0:0	4	}
water	37:4	0:0	2	overlap_end
op	37:16	0:0	2	=
water	37:18	0:0	2	frag
op	37:22	0:0	2	->
water	37:24	0:0	2	position
op	37:32	0:0	2	[
water	37:33	0:0	2	1
op	37:34	0:0	2	]
op	37:36	0:0	2	+
call	37:38	38:58	2	FFMIN
arg	37:44	37:62	3	atempo->window/2
water	37:44	0:0	4	atempo
op	37:50	0:0	4	->
water	37:52	0:0	4	window
op	37:59	0:0	4	/
water	37:61	0:0	4	2
arg	38:44	38:58	3	frag->nsamples
water	38:44	0:0	4	frag
op	38:48	0:0	4	->
water	38:50	0:0	4	nsamples
water	38:59	0:0	2	;
while	39:4	43:4	2	(atempo -> position [ 1 ] < overlap_end)
cond	39:11	39:33	3	atempo -> position [ 1 ] < overlap_end
water	39:11	0:0	4	atempo
op	39:17	0:0	4	->
water	39:19	0:0	4	position
op	39:27	0:0	4	[
water	39:28	0:0	4	1
op	39:29	0:0	4	]
op	39:31	0:0	4	<
water	39:33	0:0	4	overlap_end
stmts	39:46	43:4	3	
water	39:46	0:0	4	{
if	40:8	42:8	4	(yae_overlap_add (atempo ,dst_ref ,dst_end ) != 0)
cond	40:12	40:57	5	yae_overlap_add (atempo ,dst_ref ,dst_end ) != 0
call	40:12	40:52	6	yae_overlap_add
arg	40:28	40:34	7	atempo
water	40:28	0:0	8	atempo
arg	40:36	40:43	7	dst_ref
water	40:36	0:0	8	dst_ref
arg	40:45	40:52	7	dst_end
water	40:45	0:0	8	dst_end
op	40:54	0:0	6	!=
water	40:57	0:0	6	0
stmts	40:60	42:8	5	
water	40:60	0:0	6	{
return	41:12	41:34	6	AVERROR(EAGAIN)
call	41:19	41:33	7	AVERROR
arg	41:27	41:33	8	EAGAIN
water	41:27	0:0	9	EAGAIN
water	42:8	0:0	6	}
water	43:4	0:0	4	}
if	45:4	48:4	2	(frag -> position [ 0 ] + frag -> nsamples < atempo -> position [ 0 ])
cond	45:8	45:63	3	frag -> position [ 0 ] + frag -> nsamples < atempo -> position [ 0 ]
water	45:8	0:0	4	frag
op	45:12	0:0	4	->
water	45:14	0:0	4	position
op	45:22	0:0	4	[
water	45:23	0:0	4	0
op	45:24	0:0	4	]
op	45:26	0:0	4	+
water	45:28	0:0	4	frag
op	45:32	0:0	4	->
water	45:34	0:0	4	nsamples
op	45:43	0:0	4	<
water	45:45	0:0	4	atempo
op	45:51	0:0	4	->
water	45:53	0:0	4	position
op	45:61	0:0	4	[
water	45:62	0:0	4	0
op	45:63	0:0	4	]
stmts	45:66	48:4	3	
water	45:66	0:0	4	{
call	46:8	46:39	4	yae_advance_to_next_frag
arg	46:33	46:39	5	atempo
water	46:33	0:0	6	atempo
water	46:40	0:0	4	;
return	47:8	47:30	4	AVERROR(EAGAIN)
call	47:15	47:29	5	AVERROR
arg	47:23	47:29	6	EAGAIN
water	47:23	0:0	7	EAGAIN
water	48:4	0:0	4	}
water	50:4	0:0	2	start_here
op	50:15	0:0	2	=
call	50:17	50:55	2	FFMAX
arg	50:23	50:42	3	atempo->position[1]
water	50:23	0:0	4	atempo
op	50:29	0:0	4	->
water	50:31	0:0	4	position
op	50:39	0:0	4	[
water	50:40	0:0	4	1
op	50:41	0:0	4	]
arg	50:44	50:55	3	overlap_end
water	50:44	0:0	4	overlap_end
water	50:56	0:0	2	;
water	51:4	0:0	2	stop_here
op	51:15	0:0	2	=
water	51:17	0:0	2	frag
op	51:21	0:0	2	->
water	51:23	0:0	2	position
op	51:31	0:0	2	[
water	51:32	0:0	2	1
op	51:33	0:0	2	]
op	51:35	0:0	2	+
water	51:37	0:0	2	frag
op	51:41	0:0	2	->
water	51:43	0:0	2	nsamples
water	51:51	0:0	2	;
water	52:4	0:0	2	offset
op	52:15	0:0	2	=
water	52:17	0:0	2	start_here
op	52:28	0:0	2	-
water	52:30	0:0	2	frag
op	52:34	0:0	2	->
water	52:36	0:0	2	position
op	52:44	0:0	2	[
water	52:45	0:0	2	1
op	52:46	0:0	2	]
water	52:47	0:0	2	;
call	53:4	53:73	2	av_assert0
arg	53:15	53:73	3	start_here<=stop_here&&frag->position[1]<=start_here
water	53:15	0:0	4	start_here
op	53:26	0:0	4	<=
water	53:29	0:0	4	stop_here
op	53:39	0:0	4	&&
water	53:42	0:0	4	frag
op	53:46	0:0	4	->
water	53:48	0:0	4	position
op	53:56	0:0	4	[
water	53:57	0:0	4	1
op	53:58	0:0	4	]
op	53:60	0:0	4	<=
water	53:63	0:0	4	start_here
water	53:74	0:0	2	;
water	54:4	0:0	2	src
op	54:8	0:0	2	=
water	54:10	0:0	2	frag
op	54:14	0:0	2	->
water	54:16	0:0	2	data
op	54:21	0:0	2	+
water	54:23	0:0	2	offset
op	54:30	0:0	2	*
water	54:32	0:0	2	atempo
op	54:38	0:0	2	->
water	54:40	0:0	2	stride
water	54:46	0:0	2	;
water	55:4	0:0	2	dst
op	55:8	0:0	2	=
water	55:10	0:0	2	(
water	55:11	0:0	2	uint8_t
op	55:19	0:0	2	*
water	55:20	0:0	2	)
op	55:21	0:0	2	*
water	55:22	0:0	2	dst_ref
water	55:29	0:0	2	;
water	56:4	0:0	2	src_size
op	56:13	0:0	2	=
call	56:15	56:43	2	(int)
arg	56:21	56:43	3	stop_here-start_here
water	56:21	0:0	4	stop_here
op	56:31	0:0	4	-
water	56:33	0:0	4	start_here
op	56:45	0:0	2	*
water	56:47	0:0	2	atempo
op	56:53	0:0	2	->
water	56:55	0:0	2	stride
water	56:61	0:0	2	;
water	57:4	0:0	2	dst_size
op	57:13	0:0	2	=
water	57:15	0:0	2	dst_end
op	57:23	0:0	2	-
water	57:25	0:0	2	dst
water	57:28	0:0	2	;
water	58:4	0:0	2	nbytes
op	58:11	0:0	2	=
call	58:13	58:37	2	FFMIN
arg	58:19	58:27	3	src_size
water	58:19	0:0	4	src_size
arg	58:29	58:37	3	dst_size
water	58:29	0:0	4	dst_size
water	58:38	0:0	2	;
call	59:4	59:27	2	memcpy
arg	59:11	59:14	3	dst
water	59:11	0:0	4	dst
arg	59:16	59:19	3	src
water	59:16	0:0	4	src
arg	59:21	59:27	3	nbytes
water	59:21	0:0	4	nbytes
water	59:28	0:0	2	;
water	60:4	0:0	2	dst
op	60:8	0:0	2	+=
water	60:11	0:0	2	nbytes
water	60:17	0:0	2	;
water	61:4	0:0	2	atempo
op	61:10	0:0	2	->
water	61:12	0:0	2	position
op	61:20	0:0	2	[
water	61:21	0:0	2	1
op	61:22	0:0	2	]
op	61:24	0:0	2	+=
water	61:27	0:0	2	(
water	61:28	0:0	2	nbytes
op	61:35	0:0	2	/
water	61:37	0:0	2	atempo
op	61:43	0:0	2	->
water	61:45	0:0	2	stride
water	61:51	0:0	2	)
water	61:52	0:0	2	;
op	63:4	0:0	2	*
water	63:5	0:0	2	dst_ref
op	63:13	0:0	2	=
water	63:15	0:0	2	(
water	63:16	0:0	2	uint8_t
op	63:24	0:0	2	*
water	63:25	0:0	2	)
water	63:26	0:0	2	dst
water	63:29	0:0	2	;
return	64:4	64:65	2	atempo->position[1]==stop_here?0:AVERROR(EAGAIN)
water	64:11	0:0	3	atempo
op	64:17	0:0	3	->
water	64:19	0:0	3	position
op	64:27	0:0	3	[
water	64:28	0:0	3	1
op	64:29	0:0	3	]
op	64:31	0:0	3	==
water	64:34	0:0	3	stop_here
water	64:44	0:0	3	?
water	64:46	0:0	3	0
water	64:48	0:0	3	:
call	64:50	64:64	3	AVERROR
arg	64:58	64:64	4	EAGAIN
water	64:58	0:0	5	EAGAIN

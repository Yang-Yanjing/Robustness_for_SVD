func	1:0	8:0	0	static void	encode_band_info
params	1:28	0:0	1	
param	1:29	1:45	2	AACEncContext *	s
param	1:47	1:72	2	SingleChannelElement *	sce
stmnts	0:0	7:87	1	
decl	3:4	3:9	2	int	w
if	4:4	5:55	2	(s -> coder -> set_special_band_scalefactors)
cond	4:8	4:18	3	s -> coder -> set_special_band_scalefactors
water	4:8	0:0	4	s
op	4:9	0:0	4	->
water	4:11	0:0	4	coder
op	4:16	0:0	4	->
water	4:18	0:0	4	set_special_band_scalefactors
stmts	5:8	5:55	3	
call	5:8	5:54	4	s->coder->set_special_band_scalefactors
arg	5:48	5:49	5	s
water	5:48	0:0	6	s
arg	5:51	5:54	5	sce
water	5:51	0:0	6	sce
water	5:55	0:0	4	;
for	6:4	7:87	2	(w = 0 ;w < sce -> ics . num_windows;w += sce -> ics . group_len [ w ])
forinit	6:9	6:14	3	w = 0 ;
water	6:9	0:0	4	w
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:29	3	w < sce -> ics . num_windows
water	6:16	0:0	4	w
op	6:18	0:0	4	<
water	6:20	0:0	4	sce
op	6:23	0:0	4	->
water	6:25	0:0	4	ics
op	6:28	0:0	4	.
water	6:29	0:0	4	num_windows
forexpr	6:42	6:67	3	w += sce -> ics . group_len [ w ]
water	6:42	0:0	4	w
op	6:44	0:0	4	+=
water	6:47	0:0	4	sce
op	6:50	0:0	4	->
water	6:52	0:0	4	ics
op	6:55	0:0	4	.
water	6:56	0:0	4	group_len
op	6:65	0:0	4	[
water	6:66	0:0	4	w
op	6:67	0:0	4	]
stmts	7:8	7:87	3	
call	7:8	7:86	4	s->coder->encode_window_bands_info
arg	7:43	7:44	5	s
water	7:43	0:0	6	s
arg	7:46	7:49	5	sce
water	7:46	0:0	6	sce
arg	7:51	7:52	5	w
water	7:51	0:0	6	w
arg	7:54	7:75	5	sce->ics.group_len[w]
water	7:54	0:0	6	sce
op	7:57	0:0	6	->
water	7:59	0:0	6	ics
op	7:62	0:0	6	.
water	7:63	0:0	6	group_len
op	7:72	0:0	6	[
water	7:73	0:0	6	w
op	7:74	0:0	6	]
arg	7:77	7:86	5	s->lambda
water	7:77	0:0	6	s
op	7:78	0:0	6	->
water	7:80	0:0	6	lambda
water	7:87	0:0	4	;

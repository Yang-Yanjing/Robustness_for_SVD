func	1:0	147:0	0	static int	dshow_read_header
params	1:28	0:0	1	
param	1:29	1:51	2	AVFormatContext *	avctx
stmnts	0:0	146:14	1	
decl	3:4	3:44	2	struct dshow_ctx	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	avctx
op	3:33	0:0	2	->
water	3:35	0:0	2	priv_data
decl	4:4	4:31	2	IGraphBuilder	*graph
op	4:25	0:0	2	=
water	4:27	0:0	2	NULL
decl	5:4	5:34	2	ICreateDevEnum	*devenum
op	5:28	0:0	2	=
water	5:30	0:0	2	NULL
decl	6:4	6:33	2	IMediaControl	*control
op	6:27	0:0	2	=
water	6:29	0:0	2	NULL
decl	7:4	7:35	2	IMediaEvent	*media_event
op	7:29	0:0	2	=
water	7:31	0:0	2	NULL
decl	8:4	8:29	2	HANDLE	media_event_handle
decl	9:4	9:15	2	HANDLE	proc
decl	10:4	10:26	2	int	ret
op	10:12	0:0	2	=
call	10:14	10:25	3	AVERROR
arg	10:22	10:25	4	EIO
water	10:22	0:0	5	EIO
decl	11:4	11:9	2	int	r
call	12:4	12:18	2	CoInitialize
arg	12:17	12:18	3	0
water	12:17	0:0	4	0
water	12:19	0:0	2	;
if	13:4	16:4	2	(! ctx -> list_devices && !parse_device_name (avctx ))
cond	13:8	13:54	3	! ctx -> list_devices && !parse_device_name (avctx )
op	13:8	0:0	4	!
water	13:9	0:0	4	ctx
op	13:12	0:0	4	->
water	13:14	0:0	4	list_devices
op	13:27	0:0	4	&&
op	13:30	0:0	4	!
call	13:31	13:54	4	parse_device_name
arg	13:49	13:54	5	avctx
water	13:49	0:0	6	avctx
stmts	13:57	16:4	3	
water	13:57	0:0	4	{
call	14:8	14:69	4	av_log
arg	14:15	14:20	5	avctx
water	14:15	0:0	6	avctx
arg	14:22	14:34	5	AV_LOG_ERROR
water	14:22	0:0	6	AV_LOG_ERROR
arg	14:36	14:69	5	"Malformed dshow input string.\n"
water	14:36	0:0	6	"Malformed dshow input string.\n"
water	14:70	0:0	4	;
goto	15:8	15:18	4	error
water	15:13	0:0	5	error
water	16:4	0:0	4	}
water	17:4	0:0	2	ctx
op	17:7	0:0	2	->
water	17:9	0:0	2	video_codec_id
op	17:24	0:0	2	=
water	17:26	0:0	2	avctx
op	17:31	0:0	2	->
water	17:33	0:0	2	video_codec_id
water	17:48	0:0	2	?
water	17:50	0:0	2	avctx
op	17:55	0:0	2	->
water	17:57	0:0	2	video_codec_id
water	18:48	0:0	2	:
water	18:50	0:0	2	AV_CODEC_ID_RAWVIDEO
water	18:70	0:0	2	;
if	19:4	26:4	2	(ctx -> pixel_format != AV_PIX_FMT_NONE)
cond	19:8	19:29	3	ctx -> pixel_format != AV_PIX_FMT_NONE
water	19:8	0:0	4	ctx
op	19:11	0:0	4	->
water	19:13	0:0	4	pixel_format
op	19:26	0:0	4	!=
water	19:29	0:0	4	AV_PIX_FMT_NONE
stmts	19:46	26:4	3	
water	19:46	0:0	4	{
if	20:8	25:8	4	(ctx -> video_codec_id != AV_CODEC_ID_RAWVIDEO)
cond	20:12	20:35	5	ctx -> video_codec_id != AV_CODEC_ID_RAWVIDEO
water	20:12	0:0	6	ctx
op	20:15	0:0	6	->
water	20:17	0:0	6	video_codec_id
op	20:32	0:0	6	!=
water	20:35	0:0	6	AV_CODEC_ID_RAWVIDEO
stmts	20:57	25:8	5	
water	20:57	0:0	6	{
call	21:12	22:75	6	av_log
arg	21:19	21:24	7	avctx
water	21:19	0:0	8	avctx
arg	21:26	21:38	7	AV_LOG_ERROR
water	21:26	0:0	8	AV_LOG_ERROR
arg	21:40	22:75	7	"Pixel format may only be set when ""video codec is not set or set to rawvideo\n"
water	21:40	0:0	8	"Pixel format may only be set when "
water	22:30	0:0	8	"video codec is not set or set to rawvideo\n"
water	22:76	0:0	6	;
water	23:12	0:0	6	ret
op	23:16	0:0	6	=
call	23:18	23:32	6	AVERROR
arg	23:26	23:32	7	EINVAL
water	23:26	0:0	8	EINVAL
water	23:33	0:0	6	;
goto	24:12	24:22	6	error
water	24:17	0:0	7	error
water	25:8	0:0	6	}
water	26:4	0:0	4	}
if	27:4	33:4	2	(ctx -> framerate)
cond	27:8	27:13	3	ctx -> framerate
water	27:8	0:0	4	ctx
op	27:11	0:0	4	->
water	27:13	0:0	4	framerate
stmts	27:24	33:4	3	
water	27:24	0:0	4	{
water	28:8	0:0	4	r
op	28:10	0:0	4	=
call	28:12	28:73	4	av_parse_video_rate
arg	28:32	28:57	5	&ctx->requested_framerate
op	28:32	0:0	6	&
water	28:33	0:0	6	ctx
op	28:36	0:0	6	->
water	28:38	0:0	6	requested_framerate
arg	28:59	28:73	5	ctx->framerate
water	28:59	0:0	6	ctx
op	28:62	0:0	6	->
water	28:64	0:0	6	framerate
water	28:74	0:0	4	;
if	29:8	32:8	4	(r < 0)
cond	29:12	29:16	5	r < 0
water	29:12	0:0	6	r
op	29:14	0:0	6	<
water	29:16	0:0	6	0
stmts	29:19	32:8	5	
water	29:19	0:0	6	{
call	30:12	30:91	6	av_log
arg	30:19	30:24	7	avctx
water	30:19	0:0	8	avctx
arg	30:26	30:38	7	AV_LOG_ERROR
water	30:26	0:0	8	AV_LOG_ERROR
arg	30:40	30:75	7	"Could not parse framerate '%s'.\n"
water	30:40	0:0	8	"Could not parse framerate '%s'.\n"
arg	30:77	30:91	7	ctx->framerate
water	30:77	0:0	8	ctx
op	30:80	0:0	8	->
water	30:82	0:0	8	framerate
water	30:92	0:0	6	;
goto	31:12	31:22	6	error
water	31:17	0:0	7	error
water	32:8	0:0	6	}
water	33:4	0:0	4	}
water	34:4	0:0	2	r
op	34:6	0:0	2	=
call	34:8	35:61	2	CoCreateInstance
arg	34:25	34:43	3	&CLSID_FilterGraph
op	34:25	0:0	4	&
water	34:26	0:0	4	CLSID_FilterGraph
arg	34:45	34:49	3	NULL
water	34:45	0:0	4	NULL
arg	34:51	34:71	3	CLSCTX_INPROC_SERVER
water	34:51	0:0	4	CLSCTX_INPROC_SERVER
arg	35:25	35:43	3	&IID_IGraphBuilder
op	35:25	0:0	4	&
water	35:26	0:0	4	IID_IGraphBuilder
arg	35:45	35:61	3	(void**)&graph
water	35:45	0:0	4	(
water	35:46	0:0	4	void
op	35:51	0:0	4	*
op	35:52	0:0	4	*
water	35:53	0:0	4	)
op	35:55	0:0	4	&
water	35:56	0:0	4	graph
water	35:62	0:0	2	;
if	36:4	39:4	2	(r != S_OK)
cond	36:8	36:13	3	r != S_OK
water	36:8	0:0	4	r
op	36:10	0:0	4	!=
water	36:13	0:0	4	S_OK
stmts	36:19	39:4	3	
water	36:19	0:0	4	{
call	37:8	37:71	4	av_log
arg	37:15	37:20	5	avctx
water	37:15	0:0	6	avctx
arg	37:22	37:34	5	AV_LOG_ERROR
water	37:22	0:0	6	AV_LOG_ERROR
arg	37:36	37:71	5	"Could not create capture graph.\n"
water	37:36	0:0	6	"Could not create capture graph.\n"
water	37:72	0:0	4	;
goto	38:8	38:18	4	error
water	38:13	0:0	5	error
water	39:4	0:0	4	}
water	40:4	0:0	2	ctx
op	40:7	0:0	2	->
water	40:9	0:0	2	graph
op	40:15	0:0	2	=
water	40:17	0:0	2	graph
water	40:22	0:0	2	;
water	41:4	0:0	2	r
op	41:6	0:0	2	=
call	41:8	42:64	2	CoCreateInstance
arg	41:25	41:48	3	&CLSID_SystemDeviceEnum
op	41:25	0:0	4	&
water	41:26	0:0	4	CLSID_SystemDeviceEnum
arg	41:50	41:54	3	NULL
water	41:50	0:0	4	NULL
arg	41:56	41:76	3	CLSCTX_INPROC_SERVER
water	41:56	0:0	4	CLSCTX_INPROC_SERVER
arg	42:25	42:44	3	&IID_ICreateDevEnum
op	42:25	0:0	4	&
water	42:26	0:0	4	IID_ICreateDevEnum
arg	42:46	42:64	3	(void**)&devenum
water	42:46	0:0	4	(
water	42:47	0:0	4	void
op	42:52	0:0	4	*
op	42:53	0:0	4	*
water	42:54	0:0	4	)
op	42:56	0:0	4	&
water	42:57	0:0	4	devenum
water	42:65	0:0	2	;
if	43:4	46:4	2	(r != S_OK)
cond	43:8	43:13	3	r != S_OK
water	43:8	0:0	4	r
op	43:10	0:0	4	!=
water	43:13	0:0	4	S_OK
stmts	43:19	46:4	3	
water	43:19	0:0	4	{
call	44:8	44:75	4	av_log
arg	44:15	44:20	5	avctx
water	44:15	0:0	6	avctx
arg	44:22	44:34	5	AV_LOG_ERROR
water	44:22	0:0	6	AV_LOG_ERROR
arg	44:36	44:75	5	"Could not enumerate system devices.\n"
water	44:36	0:0	6	"Could not enumerate system devices.\n"
water	44:76	0:0	4	;
goto	45:8	45:18	4	error
water	45:13	0:0	5	error
water	46:4	0:0	4	}
if	47:4	54:4	2	(ctx -> list_devices)
cond	47:8	47:13	3	ctx -> list_devices
water	47:8	0:0	4	ctx
op	47:11	0:0	4	->
water	47:13	0:0	4	list_devices
stmts	47:27	54:4	3	
water	47:27	0:0	4	{
call	48:8	48:106	4	av_log
arg	48:15	48:20	5	avctx
water	48:15	0:0	6	avctx
arg	48:22	48:33	5	AV_LOG_INFO
water	48:22	0:0	6	AV_LOG_INFO
arg	48:35	48:106	5	"DirectShow video devices (some may be both video and audio devices)\n"
water	48:35	0:0	6	"DirectShow video devices (some may be both video and audio devices)\n"
water	48:107	0:0	4	;
call	49:8	49:80	4	dshow_cycle_devices
arg	49:28	49:33	5	avctx
water	49:28	0:0	6	avctx
arg	49:35	49:42	5	devenum
water	49:35	0:0	6	devenum
arg	49:44	49:55	5	VideoDevice
water	49:44	0:0	6	VideoDevice
arg	49:57	49:74	5	VideoSourceDevice
water	49:57	0:0	6	VideoSourceDevice
arg	49:76	49:80	5	NULL
water	49:76	0:0	6	NULL
water	49:81	0:0	4	;
call	50:8	50:63	4	av_log
arg	50:15	50:20	5	avctx
water	50:15	0:0	6	avctx
arg	50:22	50:33	5	AV_LOG_INFO
water	50:22	0:0	6	AV_LOG_INFO
arg	50:35	50:63	5	"DirectShow audio devices\n"
water	50:35	0:0	6	"DirectShow audio devices\n"
water	50:64	0:0	4	;
call	51:8	51:80	4	dshow_cycle_devices
arg	51:28	51:33	5	avctx
water	51:28	0:0	6	avctx
arg	51:35	51:42	5	devenum
water	51:35	0:0	6	devenum
arg	51:44	51:55	5	AudioDevice
water	51:44	0:0	6	AudioDevice
arg	51:57	51:74	5	AudioSourceDevice
water	51:57	0:0	6	AudioSourceDevice
arg	51:76	51:80	5	NULL
water	51:76	0:0	6	NULL
water	51:81	0:0	4	;
water	52:8	0:0	4	ret
op	52:12	0:0	4	=
water	52:14	0:0	4	AVERROR_EXIT
water	52:26	0:0	4	;
goto	53:8	53:18	4	error
water	53:13	0:0	5	error
water	54:4	0:0	4	}
if	55:4	70:4	2	(ctx -> list_options)
cond	55:8	55:13	3	ctx -> list_options
water	55:8	0:0	4	ctx
op	55:11	0:0	4	->
water	55:13	0:0	4	list_options
stmts	55:27	70:4	3	
water	55:27	0:0	4	{
if	56:8	60:12	4	(ctx -> device_name [ VideoDevice ])
cond	56:12	56:40	5	ctx -> device_name [ VideoDevice ]
water	56:12	0:0	6	ctx
op	56:15	0:0	6	->
water	56:17	0:0	6	device_name
op	56:28	0:0	6	[
water	56:29	0:0	6	VideoDevice
op	56:40	0:0	6	]
stmts	57:12	60:12	5	
if	57:12	60:12	6	(( r =dshow_list_device_options (avctx ,devenum ,VideoDevice ,VideoSourceDevice ) ))
cond	57:16	57:94	7	( r =dshow_list_device_options (avctx ,devenum ,VideoDevice ,VideoSourceDevice ) )
water	57:16	0:0	8	(
water	57:17	0:0	8	r
op	57:19	0:0	8	=
call	57:21	57:93	8	dshow_list_device_options
arg	57:47	57:52	9	avctx
water	57:47	0:0	10	avctx
arg	57:54	57:61	9	devenum
water	57:54	0:0	10	devenum
arg	57:63	57:74	9	VideoDevice
water	57:63	0:0	10	VideoDevice
arg	57:76	57:93	9	VideoSourceDevice
water	57:76	0:0	10	VideoSourceDevice
water	57:94	0:0	8	)
stmts	57:97	60:12	7	
water	57:97	0:0	8	{
water	58:16	0:0	8	ret
op	58:20	0:0	8	=
water	58:22	0:0	8	r
water	58:23	0:0	8	;
goto	59:16	59:26	8	error
water	59:21	0:0	9	error
water	60:12	0:0	8	}
if	61:8	69:8	4	(ctx -> device_name [ AudioDevice ])
cond	61:12	61:40	5	ctx -> device_name [ AudioDevice ]
water	61:12	0:0	6	ctx
op	61:15	0:0	6	->
water	61:17	0:0	6	device_name
op	61:28	0:0	6	[
water	61:29	0:0	6	AudioDevice
op	61:40	0:0	6	]
stmts	61:43	69:8	5	
water	61:43	0:0	6	{
if	62:12	68:12	6	(dshow_list_device_options (avctx ,devenum ,AudioDevice ,AudioSourceDevice ))
cond	62:16	62:88	7	dshow_list_device_options (avctx ,devenum ,AudioDevice ,AudioSourceDevice )
call	62:16	62:88	8	dshow_list_device_options
arg	62:42	62:47	9	avctx
water	62:42	0:0	10	avctx
arg	62:49	62:56	9	devenum
water	62:49	0:0	10	devenum
arg	62:58	62:69	9	AudioDevice
water	62:58	0:0	10	AudioDevice
arg	62:71	62:88	9	AudioSourceDevice
water	62:71	0:0	10	AudioSourceDevice
stmts	62:91	68:12	7	
water	62:91	0:0	8	{
if	64:16	67:16	8	(( r =dshow_list_device_options (avctx ,devenum ,AudioDevice ,VideoSourceDevice ) ))
cond	64:20	64:98	9	( r =dshow_list_device_options (avctx ,devenum ,AudioDevice ,VideoSourceDevice ) )
water	64:20	0:0	10	(
water	64:21	0:0	10	r
op	64:23	0:0	10	=
call	64:25	64:97	10	dshow_list_device_options
arg	64:51	64:56	11	avctx
water	64:51	0:0	12	avctx
arg	64:58	64:65	11	devenum
water	64:58	0:0	12	devenum
arg	64:67	64:78	11	AudioDevice
water	64:67	0:0	12	AudioDevice
arg	64:80	64:97	11	VideoSourceDevice
water	64:80	0:0	12	VideoSourceDevice
water	64:98	0:0	10	)
stmts	64:101	67:16	9	
water	64:101	0:0	10	{
water	65:20	0:0	10	ret
op	65:24	0:0	10	=
water	65:26	0:0	10	r
water	65:27	0:0	10	;
goto	66:20	66:30	10	error
water	66:25	0:0	11	error
water	67:16	0:0	10	}
water	68:12	0:0	8	}
water	69:8	0:0	6	}
water	70:4	0:0	4	}
if	71:4	77:4	2	(ctx -> device_name [ VideoDevice ])
cond	71:8	71:36	3	ctx -> device_name [ VideoDevice ]
water	71:8	0:0	4	ctx
op	71:11	0:0	4	->
water	71:13	0:0	4	device_name
op	71:24	0:0	4	[
water	71:25	0:0	4	VideoDevice
op	71:36	0:0	4	]
stmts	71:39	77:4	3	
water	71:39	0:0	4	{
if	72:8	76:8	4	(( r =dshow_open_device (avctx ,devenum ,VideoDevice ,VideoSourceDevice ) ) < 0 || ( r =dshow_add_device (avctx ,VideoDevice ) ) < 0)
cond	72:12	73:57	5	( r =dshow_open_device (avctx ,devenum ,VideoDevice ,VideoSourceDevice ) ) < 0 || ( r =dshow_add_device (avctx ,VideoDevice ) ) < 0
water	72:12	0:0	6	(
water	72:13	0:0	6	r
op	72:15	0:0	6	=
call	72:17	72:81	6	dshow_open_device
arg	72:35	72:40	7	avctx
water	72:35	0:0	8	avctx
arg	72:42	72:49	7	devenum
water	72:42	0:0	8	devenum
arg	72:51	72:62	7	VideoDevice
water	72:51	0:0	8	VideoDevice
arg	72:64	72:81	7	VideoSourceDevice
water	72:64	0:0	8	VideoSourceDevice
water	72:82	0:0	6	)
op	72:84	0:0	6	<
water	72:86	0:0	6	0
op	72:88	0:0	6	||
water	73:12	0:0	6	(
water	73:13	0:0	6	r
op	73:15	0:0	6	=
call	73:17	73:52	6	dshow_add_device
arg	73:34	73:39	7	avctx
water	73:34	0:0	8	avctx
arg	73:41	73:52	7	VideoDevice
water	73:41	0:0	8	VideoDevice
water	73:53	0:0	6	)
op	73:55	0:0	6	<
water	73:57	0:0	6	0
stmts	73:60	76:8	5	
water	73:60	0:0	6	{
water	74:12	0:0	6	ret
op	74:16	0:0	6	=
water	74:18	0:0	6	r
water	74:19	0:0	6	;
goto	75:12	75:22	6	error
water	75:17	0:0	7	error
water	76:8	0:0	6	}
water	77:4	0:0	4	}
if	78:4	89:4	2	(ctx -> device_name [ AudioDevice ])
cond	78:8	78:36	3	ctx -> device_name [ AudioDevice ]
water	78:8	0:0	4	ctx
op	78:11	0:0	4	->
water	78:13	0:0	4	device_name
op	78:24	0:0	4	[
water	78:25	0:0	4	AudioDevice
op	78:36	0:0	4	]
stmts	78:39	89:4	3	
water	78:39	0:0	4	{
if	79:8	88:8	4	(( r =dshow_open_device (avctx ,devenum ,AudioDevice ,AudioSourceDevice ) ) < 0 || ( r =dshow_add_device (avctx ,AudioDevice ) ) < 0)
cond	79:12	80:57	5	( r =dshow_open_device (avctx ,devenum ,AudioDevice ,AudioSourceDevice ) ) < 0 || ( r =dshow_add_device (avctx ,AudioDevice ) ) < 0
water	79:12	0:0	6	(
water	79:13	0:0	6	r
op	79:15	0:0	6	=
call	79:17	79:81	6	dshow_open_device
arg	79:35	79:40	7	avctx
water	79:35	0:0	8	avctx
arg	79:42	79:49	7	devenum
water	79:42	0:0	8	devenum
arg	79:51	79:62	7	AudioDevice
water	79:51	0:0	8	AudioDevice
arg	79:64	79:81	7	AudioSourceDevice
water	79:64	0:0	8	AudioSourceDevice
water	79:82	0:0	6	)
op	79:84	0:0	6	<
water	79:86	0:0	6	0
op	79:88	0:0	6	||
water	80:12	0:0	6	(
water	80:13	0:0	6	r
op	80:15	0:0	6	=
call	80:17	80:52	6	dshow_add_device
arg	80:34	80:39	7	avctx
water	80:34	0:0	8	avctx
arg	80:41	80:52	7	AudioDevice
water	80:41	0:0	8	AudioDevice
water	80:53	0:0	6	)
op	80:55	0:0	6	<
water	80:57	0:0	6	0
stmts	80:60	88:8	5	
water	80:60	0:0	6	{
call	81:12	81:128	6	av_log
arg	81:19	81:24	7	avctx
water	81:19	0:0	8	avctx
arg	81:26	81:37	7	AV_LOG_INFO
water	81:26	0:0	8	AV_LOG_INFO
arg	81:39	81:97	7	"Searching for audio device within video devices for %s\n"
water	81:39	0:0	8	"Searching for audio device within video devices for %s\n"
arg	81:99	81:128	7	ctx->device_name[AudioDevice]
water	81:99	0:0	8	ctx
op	81:102	0:0	8	->
water	81:104	0:0	8	device_name
op	81:115	0:0	8	[
water	81:116	0:0	8	AudioDevice
op	81:127	0:0	8	]
water	81:129	0:0	6	;
if	83:12	87:12	6	(( r =dshow_open_device (avctx ,devenum ,AudioDevice ,VideoSourceDevice ) ) < 0 || ( r =dshow_add_device (avctx ,AudioDevice ) ) < 0)
cond	83:16	84:61	7	( r =dshow_open_device (avctx ,devenum ,AudioDevice ,VideoSourceDevice ) ) < 0 || ( r =dshow_add_device (avctx ,AudioDevice ) ) < 0
water	83:16	0:0	8	(
water	83:17	0:0	8	r
op	83:19	0:0	8	=
call	83:21	83:85	8	dshow_open_device
arg	83:39	83:44	9	avctx
water	83:39	0:0	10	avctx
arg	83:46	83:53	9	devenum
water	83:46	0:0	10	devenum
arg	83:55	83:66	9	AudioDevice
water	83:55	0:0	10	AudioDevice
arg	83:68	83:85	9	VideoSourceDevice
water	83:68	0:0	10	VideoSourceDevice
water	83:86	0:0	8	)
op	83:88	0:0	8	<
water	83:90	0:0	8	0
op	83:92	0:0	8	||
water	84:16	0:0	8	(
water	84:17	0:0	8	r
op	84:19	0:0	8	=
call	84:21	84:56	8	dshow_add_device
arg	84:38	84:43	9	avctx
water	84:38	0:0	10	avctx
arg	84:45	84:56	9	AudioDevice
water	84:45	0:0	10	AudioDevice
water	84:57	0:0	8	)
op	84:59	0:0	8	<
water	84:61	0:0	8	0
stmts	84:64	87:12	7	
water	84:64	0:0	8	{
water	85:16	0:0	8	ret
op	85:20	0:0	8	=
water	85:22	0:0	8	r
water	85:23	0:0	8	;
goto	86:16	86:26	8	error
water	86:21	0:0	9	error
water	87:12	0:0	8	}
water	88:8	0:0	6	}
water	89:4	0:0	4	}
if	90:4	94:4	2	(ctx -> list_options)
cond	90:8	90:13	3	ctx -> list_options
water	90:8	0:0	4	ctx
op	90:11	0:0	4	->
water	90:13	0:0	4	list_options
stmts	90:27	94:4	3	
water	90:27	0:0	4	{
water	92:8	0:0	4	ret
op	92:12	0:0	4	=
water	92:14	0:0	4	AVERROR_EXIT
water	92:26	0:0	4	;
goto	93:8	93:18	4	error
water	93:13	0:0	5	error
water	94:4	0:0	4	}
water	95:4	0:0	2	ctx
op	95:7	0:0	2	->
water	95:9	0:0	2	curbufsize
op	95:19	0:0	2	[
water	95:20	0:0	2	0
op	95:21	0:0	2	]
op	95:23	0:0	2	=
water	95:25	0:0	2	0
water	95:26	0:0	2	;
water	96:4	0:0	2	ctx
op	96:7	0:0	2	->
water	96:9	0:0	2	curbufsize
op	96:19	0:0	2	[
water	96:20	0:0	2	1
op	96:21	0:0	2	]
op	96:23	0:0	2	=
water	96:25	0:0	2	0
water	96:26	0:0	2	;
water	97:4	0:0	2	ctx
op	97:7	0:0	2	->
water	97:9	0:0	2	mutex
op	97:15	0:0	2	=
call	97:17	97:42	2	CreateMutex
arg	97:29	97:33	3	NULL
water	97:29	0:0	4	NULL
arg	97:35	97:36	3	0
water	97:35	0:0	4	0
arg	97:38	97:42	3	NULL
water	97:38	0:0	4	NULL
water	97:43	0:0	2	;
if	98:4	101:4	2	(! ctx -> mutex)
cond	98:8	98:14	3	! ctx -> mutex
op	98:8	0:0	4	!
water	98:9	0:0	4	ctx
op	98:12	0:0	4	->
water	98:14	0:0	4	mutex
stmts	98:21	101:4	3	
water	98:21	0:0	4	{
call	99:8	99:62	4	av_log
arg	99:15	99:20	5	avctx
water	99:15	0:0	6	avctx
arg	99:22	99:34	5	AV_LOG_ERROR
water	99:22	0:0	6	AV_LOG_ERROR
arg	99:36	99:62	5	"Could not create Mutex\n"
water	99:36	0:0	6	"Could not create Mutex\n"
water	99:63	0:0	4	;
goto	100:8	100:18	4	error
water	100:13	0:0	5	error
water	101:4	0:0	4	}
water	102:4	0:0	2	ctx
op	102:7	0:0	2	->
water	102:9	0:0	2	event
op	102:14	0:0	2	[
water	102:15	0:0	2	1
op	102:16	0:0	2	]
op	102:18	0:0	2	=
call	102:20	102:48	2	CreateEvent
arg	102:32	102:36	3	NULL
water	102:32	0:0	4	NULL
arg	102:38	102:39	3	1
water	102:38	0:0	4	1
arg	102:41	102:42	3	0
water	102:41	0:0	4	0
arg	102:44	102:48	3	NULL
water	102:44	0:0	4	NULL
water	102:49	0:0	2	;
if	103:4	106:4	2	(! ctx -> event [ 1 ])
cond	103:8	103:21	3	! ctx -> event [ 1 ]
op	103:8	0:0	4	!
water	103:9	0:0	4	ctx
op	103:12	0:0	4	->
water	103:14	0:0	4	event
op	103:19	0:0	4	[
water	103:20	0:0	4	1
op	103:21	0:0	4	]
stmts	103:24	106:4	3	
water	103:24	0:0	4	{
call	104:8	104:62	4	av_log
arg	104:15	104:20	5	avctx
water	104:15	0:0	6	avctx
arg	104:22	104:34	5	AV_LOG_ERROR
water	104:22	0:0	6	AV_LOG_ERROR
arg	104:36	104:62	5	"Could not create Event\n"
water	104:36	0:0	6	"Could not create Event\n"
water	104:63	0:0	4	;
goto	105:8	105:18	4	error
water	105:13	0:0	5	error
water	106:4	0:0	4	}
water	107:4	0:0	2	r
op	107:6	0:0	2	=
call	107:8	107:82	2	IGraphBuilder_QueryInterface
arg	107:37	107:42	3	graph
water	107:37	0:0	4	graph
arg	107:44	107:62	3	&IID_IMediaControl
op	107:44	0:0	4	&
water	107:45	0:0	4	IID_IMediaControl
arg	107:64	107:82	3	(void**)&control
water	107:64	0:0	4	(
water	107:65	0:0	4	void
op	107:70	0:0	4	*
op	107:71	0:0	4	*
water	107:72	0:0	4	)
op	107:74	0:0	4	&
water	107:75	0:0	4	control
water	107:83	0:0	2	;
if	108:4	111:4	2	(r != S_OK)
cond	108:8	108:13	3	r != S_OK
water	108:8	0:0	4	r
op	108:10	0:0	4	!=
water	108:13	0:0	4	S_OK
stmts	108:19	111:4	3	
water	108:19	0:0	4	{
call	109:8	109:68	4	av_log
arg	109:15	109:20	5	avctx
water	109:15	0:0	6	avctx
arg	109:22	109:34	5	AV_LOG_ERROR
water	109:22	0:0	6	AV_LOG_ERROR
arg	109:36	109:68	5	"Could not get media control.\n"
water	109:36	0:0	6	"Could not get media control.\n"
water	109:69	0:0	4	;
goto	110:8	110:18	4	error
water	110:13	0:0	5	error
water	111:4	0:0	4	}
water	112:4	0:0	2	ctx
op	112:7	0:0	2	->
water	112:9	0:0	2	control
op	112:17	0:0	2	=
water	112:19	0:0	2	control
water	112:26	0:0	2	;
water	113:4	0:0	2	r
op	113:6	0:0	2	=
call	113:8	113:84	2	IGraphBuilder_QueryInterface
arg	113:37	113:42	3	graph
water	113:37	0:0	4	graph
arg	113:44	113:60	3	&IID_IMediaEvent
op	113:44	0:0	4	&
water	113:45	0:0	4	IID_IMediaEvent
arg	113:62	113:84	3	(void**)&media_event
water	113:62	0:0	4	(
water	113:63	0:0	4	void
op	113:68	0:0	4	*
op	113:69	0:0	4	*
water	113:70	0:0	4	)
op	113:72	0:0	4	&
water	113:73	0:0	4	media_event
water	113:85	0:0	2	;
if	114:4	117:4	2	(r != S_OK)
cond	114:8	114:13	3	r != S_OK
water	114:8	0:0	4	r
op	114:10	0:0	4	!=
water	114:13	0:0	4	S_OK
stmts	114:19	117:4	3	
water	114:19	0:0	4	{
call	115:8	115:66	4	av_log
arg	115:15	115:20	5	avctx
water	115:15	0:0	6	avctx
arg	115:22	115:34	5	AV_LOG_ERROR
water	115:22	0:0	6	AV_LOG_ERROR
arg	115:36	115:66	5	"Could not get media event.\n"
water	115:36	0:0	6	"Could not get media event.\n"
water	115:67	0:0	4	;
goto	116:8	116:18	4	error
water	116:13	0:0	5	error
water	117:4	0:0	4	}
water	118:4	0:0	2	ctx
op	118:7	0:0	2	->
water	118:9	0:0	2	media_event
op	118:21	0:0	2	=
water	118:23	0:0	2	media_event
water	118:34	0:0	2	;
water	119:4	0:0	2	r
op	119:6	0:0	2	=
call	119:8	119:76	2	IMediaEvent_GetEventHandle
arg	119:35	119:46	3	media_event
water	119:35	0:0	4	media_event
arg	119:48	119:76	3	(void*)&media_event_handle
water	119:48	0:0	4	(
water	119:49	0:0	4	void
op	119:54	0:0	4	*
water	119:55	0:0	4	)
op	119:57	0:0	4	&
water	119:58	0:0	4	media_event_handle
water	119:77	0:0	2	;
if	120:4	123:4	2	(r != S_OK)
cond	120:8	120:13	3	r != S_OK
water	120:8	0:0	4	r
op	120:10	0:0	4	!=
water	120:13	0:0	4	S_OK
stmts	120:19	123:4	3	
water	120:19	0:0	4	{
call	121:8	121:73	4	av_log
arg	121:15	121:20	5	avctx
water	121:15	0:0	6	avctx
arg	121:22	121:34	5	AV_LOG_ERROR
water	121:22	0:0	6	AV_LOG_ERROR
arg	121:36	121:73	5	"Could not get media event handle.\n"
water	121:36	0:0	6	"Could not get media event handle.\n"
water	121:74	0:0	4	;
goto	122:8	122:18	4	error
water	122:13	0:0	5	error
water	123:4	0:0	4	}
water	124:4	0:0	2	proc
op	124:9	0:0	2	=
call	124:11	124:29	2	GetCurrentProcess
water	124:30	0:0	2	;
water	125:4	0:0	2	r
op	125:6	0:0	2	=
call	125:8	126:51	2	DuplicateHandle
arg	125:24	125:28	3	proc
water	125:24	0:0	4	proc
arg	125:30	125:48	3	media_event_handle
water	125:30	0:0	4	media_event_handle
arg	125:50	125:54	3	proc
water	125:50	0:0	4	proc
arg	125:56	125:70	3	&ctx->event[0]
op	125:56	0:0	4	&
water	125:57	0:0	4	ctx
op	125:60	0:0	4	->
water	125:62	0:0	4	event
op	125:67	0:0	4	[
water	125:68	0:0	4	0
op	125:69	0:0	4	]
arg	126:24	126:25	3	0
water	126:24	0:0	4	0
arg	126:27	126:28	3	0
water	126:27	0:0	4	0
arg	126:30	126:51	3	DUPLICATE_SAME_ACCESS
water	126:30	0:0	4	DUPLICATE_SAME_ACCESS
water	126:52	0:0	2	;
if	127:4	130:4	2	(! r)
cond	127:8	127:9	3	! r
op	127:8	0:0	4	!
water	127:9	0:0	4	r
stmts	127:12	130:4	3	
water	127:12	0:0	4	{
call	128:8	128:79	4	av_log
arg	128:15	128:20	5	avctx
water	128:15	0:0	6	avctx
arg	128:22	128:34	5	AV_LOG_ERROR
water	128:22	0:0	6	AV_LOG_ERROR
arg	128:36	128:79	5	"Could not duplicate media event handle.\n"
water	128:36	0:0	6	"Could not duplicate media event handle.\n"
water	128:80	0:0	4	;
goto	129:8	129:18	4	error
water	129:13	0:0	5	error
water	130:4	0:0	4	}
water	131:4	0:0	2	r
op	131:6	0:0	2	=
call	131:8	131:33	2	IMediaControl_Run
arg	131:26	131:33	3	control
water	131:26	0:0	4	control
water	131:34	0:0	2	;
if	132:4	135:4	2	(r == S_FALSE)
cond	132:8	132:13	3	r == S_FALSE
water	132:8	0:0	4	r
op	132:10	0:0	4	==
water	132:13	0:0	4	S_FALSE
stmts	132:22	135:4	3	
water	132:22	0:0	4	{
decl	133:8	133:25	4	OAFilterState	pfs
water	134:8	0:0	4	r
op	134:10	0:0	4	=
call	134:12	134:51	4	IMediaControl_GetState
arg	134:35	134:42	5	control
water	134:35	0:0	6	control
arg	134:44	134:45	5	0
water	134:44	0:0	6	0
arg	134:47	134:51	5	&pfs
op	134:47	0:0	6	&
water	134:48	0:0	6	pfs
water	134:52	0:0	4	;
water	135:4	0:0	4	}
if	136:4	139:4	2	(r != S_OK)
cond	136:8	136:13	3	r != S_OK
water	136:8	0:0	4	r
op	136:10	0:0	4	!=
water	136:13	0:0	4	S_OK
stmts	136:19	139:4	3	
water	136:19	0:0	4	{
call	137:8	137:126	4	av_log
arg	137:15	137:20	5	avctx
water	137:15	0:0	6	avctx
arg	137:22	137:34	5	AV_LOG_ERROR
water	137:22	0:0	6	AV_LOG_ERROR
arg	137:36	137:126	5	"Could not run graph (sometimes caused by a device already in use by other application)\n"
water	137:36	0:0	6	"Could not run graph (sometimes caused by a device already in use by other application)\n"
water	137:127	0:0	4	;
goto	138:8	138:18	4	error
water	138:13	0:0	5	error
water	139:4	0:0	4	}
water	140:4	0:0	2	ret
op	140:8	0:0	2	=
water	140:10	0:0	2	0
water	140:11	0:0	2	;
label	141:0	141:5	2	error :
if	142:4	143:39	2	(devenum)
cond	142:8	142:8	3	devenum
water	142:8	0:0	4	devenum
stmts	143:8	143:39	3	
call	143:8	143:38	4	ICreateDevEnum_Release
arg	143:31	143:38	5	devenum
water	143:31	0:0	6	devenum
water	143:39	0:0	4	;
if	144:4	145:31	2	(ret < 0)
cond	144:8	144:14	3	ret < 0
water	144:8	0:0	4	ret
op	144:12	0:0	4	<
water	144:14	0:0	4	0
stmts	145:8	145:31	3	
call	145:8	145:30	4	dshow_read_close
arg	145:25	145:30	5	avctx
water	145:25	0:0	6	avctx
water	145:31	0:0	4	;
return	146:4	146:14	2	ret
water	146:11	0:0	3	ret

func	1:0	112:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	111:14	1	
decl	3:4	3:79	2	AVFormatContext	*input_format_context
op	3:42	0:0	2	=
water	3:44	0:0	2	NULL
water	3:48	0:0	2	,
decl	3:4	3:79	2	AVFormatContext	*output_format_context
op	3:73	0:0	2	=
water	3:75	0:0	2	NULL
decl	4:4	4:76	2	AVCodecContext	*input_codec_context
op	4:40	0:0	2	=
water	4:42	0:0	2	NULL
water	4:46	0:0	2	,
decl	4:4	4:76	2	AVCodecContext	*output_codec_context
op	4:70	0:0	2	=
water	4:72	0:0	2	NULL
decl	5:4	5:39	2	SwrContext	*resample_context
op	5:33	0:0	2	=
water	5:35	0:0	2	NULL
decl	6:4	6:28	2	AVAudioFifo	*fifo
op	6:22	0:0	2	=
water	6:24	0:0	2	NULL
decl	7:4	7:26	2	int	ret
op	7:12	0:0	2	=
water	7:14	0:0	2	AVERROR_EXIT
if	8:4	11:4	2	(argc < 3)
cond	8:8	8:15	3	argc < 3
water	8:8	0:0	4	argc
op	8:13	0:0	4	<
water	8:15	0:0	4	3
stmts	8:18	11:4	3	
water	8:18	0:0	4	{
call	9:8	9:73	4	fprintf
arg	9:16	9:22	5	stderr
water	9:16	0:0	6	stderr
arg	9:24	9:64	5	"Usage: %s <input file> <output file>\n"
water	9:24	0:0	6	"Usage: %s <input file> <output file>\n"
arg	9:66	9:73	5	argv[0]
water	9:66	0:0	6	argv
op	9:70	0:0	6	[
water	9:71	0:0	6	0
op	9:72	0:0	6	]
water	9:74	0:0	4	;
call	10:8	10:14	4	exit
arg	10:13	10:14	5	1
water	10:13	0:0	6	1
water	10:15	0:0	4	;
water	11:4	0:0	4	}
call	13:4	13:20	2	av_register_all
water	13:21	0:0	2	;
if	15:4	17:20	2	(open_input_file (argv [ 1 ] ,& input_format_context ,& input_codec_context ))
cond	15:8	16:44	3	open_input_file (argv [ 1 ] ,& input_format_context ,& input_codec_context )
call	15:8	16:44	4	open_input_file
arg	15:24	15:31	5	argv[1]
water	15:24	0:0	6	argv
op	15:28	0:0	6	[
water	15:29	0:0	6	1
op	15:30	0:0	6	]
arg	15:33	15:54	5	&input_format_context
op	15:33	0:0	6	&
water	15:34	0:0	6	input_format_context
arg	16:24	16:44	5	&input_codec_context
op	16:24	0:0	6	&
water	16:25	0:0	6	input_codec_context
stmts	17:8	17:20	3	
goto	17:8	17:20	4	cleanup
water	17:13	0:0	5	cleanup
if	19:4	21:20	2	(open_output_file (argv [ 2 ] ,input_codec_context ,& output_format_context ,& output_codec_context ))
cond	19:8	20:70	3	open_output_file (argv [ 2 ] ,input_codec_context ,& output_format_context ,& output_codec_context )
call	19:8	20:70	4	open_output_file
arg	19:25	19:32	5	argv[2]
water	19:25	0:0	6	argv
op	19:29	0:0	6	[
water	19:30	0:0	6	2
op	19:31	0:0	6	]
arg	19:34	19:53	5	input_codec_context
water	19:34	0:0	6	input_codec_context
arg	20:25	20:47	5	&output_format_context
op	20:25	0:0	6	&
water	20:26	0:0	6	output_format_context
arg	20:49	20:70	5	&output_codec_context
op	20:49	0:0	6	&
water	20:50	0:0	6	output_codec_context
stmts	21:8	21:20	3	
goto	21:8	21:20	4	cleanup
water	21:13	0:0	5	cleanup
if	23:4	25:20	2	(init_resampler (input_codec_context ,output_codec_context ,& resample_context ))
cond	23:8	24:40	3	init_resampler (input_codec_context ,output_codec_context ,& resample_context )
call	23:8	24:40	4	init_resampler
arg	23:23	23:42	5	input_codec_context
water	23:23	0:0	6	input_codec_context
arg	23:44	23:64	5	output_codec_context
water	23:44	0:0	6	output_codec_context
arg	24:23	24:40	5	&resample_context
op	24:23	0:0	6	&
water	24:24	0:0	6	resample_context
stmts	25:8	25:20	3	
goto	25:8	25:20	4	cleanup
water	25:13	0:0	5	cleanup
if	27:4	28:20	2	(init_fifo (& fifo ,output_codec_context ))
cond	27:8	27:45	3	init_fifo (& fifo ,output_codec_context )
call	27:8	27:45	4	init_fifo
arg	27:18	27:23	5	&fifo
op	27:18	0:0	6	&
water	27:19	0:0	6	fifo
arg	27:25	27:45	5	output_codec_context
water	27:25	0:0	6	output_codec_context
stmts	28:8	28:20	3	
goto	28:8	28:20	4	cleanup
water	28:13	0:0	5	cleanup
if	30:4	31:20	2	(write_output_file_header (output_format_context ))
cond	30:8	30:54	3	write_output_file_header (output_format_context )
call	30:8	30:54	4	write_output_file_header
arg	30:33	30:54	5	output_format_context
water	30:33	0:0	6	output_format_context
stmts	31:8	31:20	3	
goto	31:8	31:20	4	cleanup
water	31:13	0:0	5	cleanup
while	36:4	92:4	2	(1)
cond	36:11	36:11	3	1
water	36:11	0:0	4	1
stmts	36:14	92:4	3	
water	36:14	0:0	4	{
decl	38:8	38:70	4	const int	output_frame_size
op	38:36	0:0	4	=
water	38:38	0:0	4	output_codec_context
op	38:58	0:0	4	->
water	38:60	0:0	4	frame_size
decl	39:8	39:39	4	int	finished
op	39:36	0:0	4	=
water	39:38	0:0	4	0
while	47:8	63:8	4	(av_audio_fifo_size (fifo ) < output_frame_size)
cond	47:15	47:42	5	av_audio_fifo_size (fifo ) < output_frame_size
call	47:15	47:38	6	av_audio_fifo_size
arg	47:34	47:38	7	fifo
water	47:34	0:0	8	fifo
op	47:40	0:0	6	<
water	47:42	0:0	6	output_frame_size
stmts	47:61	63:8	5	
water	47:61	0:0	6	{
if	52:12	56:28	6	(read_decode_convert_and_store (fifo ,input_format_context ,input_codec_context ,output_codec_context ,resample_context ,& finished ))
cond	52:16	55:73	7	read_decode_convert_and_store (fifo ,input_format_context ,input_codec_context ,output_codec_context ,resample_context ,& finished )
call	52:16	55:73	8	read_decode_convert_and_store
arg	52:46	52:50	9	fifo
water	52:46	0:0	10	fifo
arg	52:52	52:72	9	input_format_context
water	52:52	0:0	10	input_format_context
arg	53:46	53:65	9	input_codec_context
water	53:46	0:0	10	input_codec_context
arg	54:46	54:66	9	output_codec_context
water	54:46	0:0	10	output_codec_context
arg	55:46	55:62	9	resample_context
water	55:46	0:0	10	resample_context
arg	55:64	55:73	9	&finished
op	55:64	0:0	10	&
water	55:65	0:0	10	finished
stmts	56:16	56:28	7	
goto	56:16	56:28	8	cleanup
water	56:21	0:0	9	cleanup
if	61:12	62:21	6	(finished)
cond	61:16	61:16	7	finished
water	61:16	0:0	8	finished
stmts	62:16	62:21	7	
break	62:16	62:21	8	
water	63:8	0:0	6	}
while	69:8	77:28	4	(av_audio_fifo_size (fifo ) >= output_frame_size || ( finished &&av_audio_fifo_size (fifo ) > 0 ))
cond	69:15	70:56	5	av_audio_fifo_size (fifo ) >= output_frame_size || ( finished &&av_audio_fifo_size (fifo ) > 0 )
call	69:15	69:38	6	av_audio_fifo_size
arg	69:34	69:38	7	fifo
water	69:34	0:0	8	fifo
op	69:40	0:0	6	>=
water	69:43	0:0	6	output_frame_size
op	69:61	0:0	6	||
water	70:15	0:0	6	(
water	70:16	0:0	6	finished
op	70:25	0:0	6	&&
call	70:28	70:51	6	av_audio_fifo_size
arg	70:47	70:51	7	fifo
water	70:47	0:0	8	fifo
op	70:53	0:0	6	>
water	70:55	0:0	6	0
water	70:56	0:0	6	)
stmts	75:12	77:28	5	
if	75:12	77:28	6	(load_encode_and_write (fifo ,output_format_context ,output_codec_context ))
cond	75:16	76:58	7	load_encode_and_write (fifo ,output_format_context ,output_codec_context )
call	75:16	76:58	8	load_encode_and_write
arg	75:38	75:42	9	fifo
water	75:38	0:0	10	fifo
arg	75:44	75:65	9	output_format_context
water	75:44	0:0	10	output_format_context
arg	76:38	76:58	9	output_codec_context
water	76:38	0:0	10	output_codec_context
stmts	77:16	77:28	7	
goto	77:16	77:28	8	cleanup
water	77:21	0:0	9	cleanup
if	82:8	91:8	4	(finished)
cond	82:12	82:12	5	finished
water	82:12	0:0	6	finished
stmts	82:22	91:8	5	
water	82:22	0:0	6	{
decl	83:12	83:28	6	int	data_written
do	85:12	89:12	6	(data_written)
cond	89:21	89:21	7	data_written
water	89:21	0:0	8	data_written
stmts	85:15	89:12	7	
water	85:15	0:0	8	{
if	86:16	88:32	8	(encode_audio_frame (NULL ,output_format_context ,output_codec_context ,& data_written ))
cond	86:20	87:74	9	encode_audio_frame (NULL ,output_format_context ,output_codec_context ,& data_written )
call	86:20	87:74	10	encode_audio_frame
arg	86:39	86:43	11	NULL
water	86:39	0:0	12	NULL
arg	86:45	86:66	11	output_format_context
water	86:45	0:0	12	output_format_context
arg	87:39	87:59	11	output_codec_context
water	87:39	0:0	12	output_codec_context
arg	87:61	87:74	11	&data_written
op	87:61	0:0	12	&
water	87:62	0:0	12	data_written
stmts	88:20	88:32	9	
goto	88:20	88:32	10	cleanup
water	88:25	0:0	11	cleanup
water	89:12	0:0	8	}
water	89:34	0:0	6	;
break	90:12	90:17	6	
water	91:8	0:0	6	}
water	92:4	0:0	4	}
if	94:4	95:20	2	(write_output_file_trailer (output_format_context ))
cond	94:8	94:55	3	write_output_file_trailer (output_format_context )
call	94:8	94:55	4	write_output_file_trailer
arg	94:34	94:55	5	output_format_context
water	94:34	0:0	6	output_format_context
stmts	95:8	95:20	3	
goto	95:8	95:20	4	cleanup
water	95:13	0:0	5	cleanup
water	96:4	0:0	2	ret
op	96:8	0:0	2	=
water	96:10	0:0	2	0
water	96:11	0:0	2	;
label	97:0	97:7	2	cleanup :
if	98:4	99:32	2	(fifo)
cond	98:8	98:8	3	fifo
water	98:8	0:0	4	fifo
stmts	99:8	99:32	3	
call	99:8	99:31	4	av_audio_fifo_free
arg	99:27	99:31	5	fifo
water	99:27	0:0	6	fifo
water	99:32	0:0	4	;
call	100:4	100:30	2	swr_free
arg	100:13	100:30	3	&resample_context
op	100:13	0:0	4	&
water	100:14	0:0	4	resample_context
water	100:31	0:0	2	;
if	101:4	102:43	2	(output_codec_context)
cond	101:8	101:8	3	output_codec_context
water	101:8	0:0	4	output_codec_context
stmts	102:8	102:43	3	
call	102:8	102:42	4	avcodec_close
arg	102:22	102:42	5	output_codec_context
water	102:22	0:0	6	output_codec_context
water	102:43	0:0	4	;
if	103:4	106:4	2	(output_format_context)
cond	103:8	103:8	3	output_format_context
water	103:8	0:0	4	output_format_context
stmts	103:31	106:4	3	
water	103:31	0:0	4	{
call	104:8	104:46	4	avio_closep
arg	104:20	104:46	5	&output_format_context->pb
op	104:20	0:0	6	&
water	104:21	0:0	6	output_format_context
op	104:42	0:0	6	->
water	104:44	0:0	6	pb
water	104:47	0:0	4	;
call	105:8	105:51	4	avformat_free_context
arg	105:30	105:51	5	output_format_context
water	105:30	0:0	6	output_format_context
water	105:52	0:0	4	;
water	106:4	0:0	4	}
if	107:4	108:42	2	(input_codec_context)
cond	107:8	107:8	3	input_codec_context
water	107:8	0:0	4	input_codec_context
stmts	108:8	108:42	3	
call	108:8	108:41	4	avcodec_close
arg	108:22	108:41	5	input_codec_context
water	108:22	0:0	6	input_codec_context
water	108:42	0:0	4	;
if	109:4	110:51	2	(input_format_context)
cond	109:8	109:8	3	input_format_context
water	109:8	0:0	4	input_format_context
stmts	110:8	110:51	3	
call	110:8	110:50	4	avformat_close_input
arg	110:29	110:50	5	&input_format_context
op	110:29	0:0	6	&
water	110:30	0:0	6	input_format_context
water	110:51	0:0	4	;
return	111:4	111:14	2	ret
water	111:11	0:0	3	ret

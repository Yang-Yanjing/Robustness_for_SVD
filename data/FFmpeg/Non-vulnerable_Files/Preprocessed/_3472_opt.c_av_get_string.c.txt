func	1:0	31:0	0	const char *	av_get_string
params	1:25	0:0	1	
param	1:26	1:35	2	void *	obj
param	1:37	1:53	2	const char *	name
param	1:55	1:77	2	const AVOption * *	o_out
param	1:79	1:88	2	char *	buf
param	1:90	1:101	2	int	buf_len
stmnts	0:0	30:14	1	
decl	3:4	3:79	2	const AVOption	*o
op	3:22	0:0	2	=
call	3:24	3:78	3	av_opt_find
arg	3:36	3:39	4	obj
water	3:36	0:0	5	obj
arg	3:41	3:45	4	name
water	3:41	0:0	5	name
arg	3:47	3:51	4	NULL
water	3:47	0:0	5	NULL
arg	3:53	3:54	4	0
water	3:53	0:0	5	0
arg	3:56	3:78	4	AV_OPT_SEARCH_CHILDREN
water	3:56	0:0	5	AV_OPT_SEARCH_CHILDREN
decl	4:4	4:13	2	void	*dst
decl	5:4	5:16	2	uint8_t	*bin
decl	6:4	6:14	2	int	len
water	6:11	0:0	2	,
decl	6:4	6:14	2	int	i
if	7:4	8:19	2	(! o)
cond	7:8	7:9	3	! o
op	7:8	0:0	4	!
water	7:9	0:0	4	o
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
if	9:4	10:19	2	(o -> type != AV_OPT_TYPE_STRING && ( ! buf || ! buf_len ))
cond	9:8	9:58	3	o -> type != AV_OPT_TYPE_STRING && ( ! buf || ! buf_len )
water	9:8	0:0	4	o
op	9:9	0:0	4	->
water	9:11	0:0	4	type
op	9:16	0:0	4	!=
water	9:19	0:0	4	AV_OPT_TYPE_STRING
op	9:38	0:0	4	&&
water	9:41	0:0	4	(
op	9:42	0:0	4	!
water	9:43	0:0	4	buf
op	9:47	0:0	4	||
op	9:50	0:0	4	!
water	9:51	0:0	4	buf_len
water	9:58	0:0	4	)
stmts	10:8	10:19	3	
return	10:8	10:19	4	NULL
water	10:15	0:0	5	NULL
water	11:4	0:0	2	dst
op	11:7	0:0	2	=
water	11:9	0:0	2	(
water	11:10	0:0	2	(
water	11:11	0:0	2	uint8_t
op	11:18	0:0	2	*
water	11:19	0:0	2	)
water	11:20	0:0	2	obj
water	11:23	0:0	2	)
op	11:25	0:0	2	+
water	11:27	0:0	2	o
op	11:28	0:0	2	->
water	11:30	0:0	2	offset
water	11:36	0:0	2	;
if	12:4	12:24	2	(o_out)
cond	12:8	12:8	3	o_out
water	12:8	0:0	4	o_out
stmts	12:15	12:24	3	
op	12:15	0:0	4	*
water	12:16	0:0	4	o_out
op	12:21	0:0	4	=
water	12:23	0:0	4	o
water	12:24	0:0	4	;
switch	13:4	29:4	2	(o -> type)
cond	13:12	13:15	3	o -> type
water	13:12	0:0	4	o
op	13:13	0:0	4	->
water	13:15	0:0	4	type
stmts	13:21	29:4	3	
water	13:21	0:0	4	{
label	14:4	14:26	4	case AV_OPT_TYPE_FLAGS :
call	14:32	14:78	4	snprintf
arg	14:41	14:44	5	buf
water	14:41	0:0	6	buf
arg	14:46	14:53	5	buf_len
water	14:46	0:0	6	buf_len
arg	14:55	14:63	5	"0x%08X"
water	14:55	0:0	6	"0x%08X"
arg	14:64	14:78	5	*(int*)dst
op	14:64	0:0	6	*
water	14:65	0:0	6	(
water	14:66	0:0	6	int
op	14:73	0:0	6	*
water	14:74	0:0	6	)
water	14:75	0:0	6	dst
water	14:79	0:0	4	;
break	14:80	14:85	4	
label	15:4	15:24	4	case AV_OPT_TYPE_INT :
call	15:32	15:76	4	snprintf
arg	15:41	15:44	5	buf
water	15:41	0:0	6	buf
arg	15:46	15:53	5	buf_len
water	15:46	0:0	6	buf_len
arg	15:55	15:60	5	"%d"
water	15:55	0:0	6	"%d"
arg	15:62	15:76	5	*(int*)dst
op	15:62	0:0	6	*
water	15:63	0:0	6	(
water	15:64	0:0	6	int
op	15:71	0:0	6	*
water	15:72	0:0	6	)
water	15:73	0:0	6	dst
water	15:77	0:0	4	;
break	15:78	15:83	4	
label	16:4	16:26	4	case AV_OPT_TYPE_INT64 :
call	16:32	16:80	4	snprintf
arg	16:41	16:44	5	buf
water	16:41	0:0	6	buf
arg	16:46	16:53	5	buf_len
water	16:46	0:0	6	buf_len
arg	16:55	16:64	5	"%"PRId64
water	16:55	0:0	6	"%"
water	16:58	0:0	6	PRId64
arg	16:66	16:80	5	*(int64_t*)dst
op	16:66	0:0	6	*
water	16:67	0:0	6	(
water	16:68	0:0	6	int64_t
op	16:75	0:0	6	*
water	16:76	0:0	6	)
water	16:77	0:0	6	dst
water	16:81	0:0	4	;
break	16:82	16:87	4	
label	17:4	17:26	4	case AV_OPT_TYPE_FLOAT :
call	17:32	17:76	4	snprintf
arg	17:41	17:44	5	buf
water	17:41	0:0	6	buf
arg	17:46	17:53	5	buf_len
water	17:46	0:0	6	buf_len
arg	17:55	17:60	5	"%f"
water	17:55	0:0	6	"%f"
arg	17:62	17:76	5	*(float*)dst
op	17:62	0:0	6	*
water	17:63	0:0	6	(
water	17:64	0:0	6	float
op	17:71	0:0	6	*
water	17:72	0:0	6	)
water	17:73	0:0	6	dst
water	17:77	0:0	4	;
break	17:78	17:83	4	
label	18:4	18:27	4	case AV_OPT_TYPE_DOUBLE :
call	18:32	18:76	4	snprintf
arg	18:41	18:44	5	buf
water	18:41	0:0	6	buf
arg	18:46	18:53	5	buf_len
water	18:46	0:0	6	buf_len
arg	18:55	18:60	5	"%f"
water	18:55	0:0	6	"%f"
arg	18:62	18:76	5	*(double*)dst
op	18:62	0:0	6	*
water	18:63	0:0	6	(
water	18:64	0:0	6	double
op	18:71	0:0	6	*
water	18:72	0:0	6	)
water	18:73	0:0	6	dst
water	18:77	0:0	4	;
break	18:78	18:83	4	
label	19:4	19:29	4	case AV_OPT_TYPE_RATIONAL :
call	19:32	19:112	4	snprintf
arg	19:41	19:44	5	buf
water	19:41	0:0	6	buf
arg	19:46	19:53	5	buf_len
water	19:46	0:0	6	buf_len
arg	19:55	19:62	5	"%d/%d"
water	19:55	0:0	6	"%d/%d"
arg	19:64	19:87	5	((AVRational*)dst)->num
water	19:64	0:0	6	(
water	19:65	0:0	6	(
water	19:66	0:0	6	AVRational
op	19:76	0:0	6	*
water	19:77	0:0	6	)
water	19:78	0:0	6	dst
water	19:81	0:0	6	)
op	19:82	0:0	6	->
water	19:84	0:0	6	num
arg	19:89	19:112	5	((AVRational*)dst)->den
water	19:89	0:0	6	(
water	19:90	0:0	6	(
water	19:91	0:0	6	AVRational
op	19:101	0:0	6	*
water	19:102	0:0	6	)
water	19:103	0:0	6	dst
water	19:106	0:0	6	)
op	19:107	0:0	6	->
water	19:109	0:0	6	den
water	19:113	0:0	4	;
break	19:114	19:119	4	
label	20:4	20:26	4	case AV_OPT_TYPE_CONST :
call	20:32	20:80	4	snprintf
arg	20:41	20:44	5	buf
water	20:41	0:0	6	buf
arg	20:46	20:53	5	buf_len
water	20:46	0:0	6	buf_len
arg	20:55	20:60	5	"%f"
water	20:55	0:0	6	"%f"
arg	20:62	20:80	5	o->default_val.dbl
water	20:62	0:0	6	o
op	20:63	0:0	6	->
water	20:65	0:0	6	default_val
op	20:76	0:0	6	.
water	20:77	0:0	6	dbl
water	20:81	0:0	4	;
break	20:82	20:87	4	
label	21:4	21:27	4	case AV_OPT_TYPE_STRING :
return	21:32	21:51	4	*(void**)dst
op	21:39	0:0	5	*
water	21:40	0:0	5	(
water	21:41	0:0	5	void
op	21:45	0:0	5	*
op	21:46	0:0	5	*
water	21:47	0:0	5	)
water	21:48	0:0	5	dst
label	22:4	22:27	4	case AV_OPT_TYPE_BINARY :
water	23:8	0:0	4	len
op	23:12	0:0	4	=
op	23:14	0:0	4	*
call	23:15	23:58	4	(int*)
arg	23:22	23:58	5	((uint8_t*)dst)+sizeof(uint8_t*)
water	23:22	0:0	6	(
water	23:23	0:0	6	(
water	23:24	0:0	6	uint8_t
op	23:32	0:0	6	*
water	23:33	0:0	6	)
water	23:34	0:0	6	dst
water	23:37	0:0	6	)
op	23:39	0:0	6	+
op	23:41	0:0	6	sizeof
water	23:47	0:0	6	(
water	23:48	0:0	6	uint8_t
op	23:56	0:0	6	*
water	23:57	0:0	6	)
water	23:59	0:0	4	;
if	24:8	24:47	4	(len >= ( buf_len + 1 ) / 2)
cond	24:12	24:33	5	len >= ( buf_len + 1 ) / 2
water	24:12	0:0	6	len
op	24:16	0:0	6	>=
water	24:19	0:0	6	(
water	24:20	0:0	6	buf_len
op	24:28	0:0	6	+
water	24:30	0:0	6	1
water	24:31	0:0	6	)
op	24:32	0:0	6	/
water	24:33	0:0	6	2
stmts	24:36	24:47	5	
return	24:36	24:47	6	NULL
water	24:43	0:0	7	NULL
water	25:8	0:0	4	bin
op	25:12	0:0	4	=
op	25:14	0:0	4	*
water	25:15	0:0	4	(
water	25:16	0:0	4	uint8_t
op	25:23	0:0	4	*
op	25:24	0:0	4	*
water	25:25	0:0	4	)
water	25:26	0:0	4	dst
water	25:29	0:0	4	;
for	26:8	26:72	4	(i = 0 ;i < len;i ++)
forinit	26:13	26:18	5	i = 0 ;
water	26:13	0:0	6	i
op	26:15	0:0	6	=
water	26:17	0:0	6	0
water	26:18	0:0	6	;
cond	26:20	26:24	5	i < len
water	26:20	0:0	6	i
op	26:22	0:0	6	<
water	26:24	0:0	6	len
forexpr	26:29	26:30	5	i ++
water	26:29	0:0	6	i
op	26:30	0:0	6	++
stmts	26:34	26:72	5	
call	26:34	26:71	6	snprintf
arg	26:43	26:52	7	buf+i*2
water	26:43	0:0	8	buf
op	26:47	0:0	8	+
water	26:49	0:0	8	i
op	26:50	0:0	8	*
water	26:51	0:0	8	2
arg	26:54	26:55	7	3
water	26:54	0:0	8	3
arg	26:57	26:63	7	"%02X"
water	26:57	0:0	8	"%02X"
arg	26:65	26:71	7	bin[i]
water	26:65	0:0	8	bin
op	26:68	0:0	8	[
water	26:69	0:0	8	i
op	26:70	0:0	8	]
water	26:72	0:0	6	;
break	27:8	27:13	4	
label	28:4	28:11	4	default :
return	28:13	28:24	4	NULL
water	28:20	0:0	5	NULL
water	29:4	0:0	4	}
return	30:4	30:14	2	buf
water	30:11	0:0	3	buf

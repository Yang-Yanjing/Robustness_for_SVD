func	1:0	27:0	0	static int	process_command
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
param	1:49	1:64	2	const char *	cmd
param	1:66	1:82	2	const char *	args
param	2:27	2:36	2	char *	res
param	2:38	2:49	2	int	res_len
param	2:51	2:60	2	int	flags
stmnts	0:0	26:14	1	
decl	4:4	4:30	2	CropContext	*s
op	4:19	0:0	2	=
water	4:21	0:0	2	ctx
op	4:24	0:0	2	->
water	4:26	0:0	2	priv
decl	5:4	5:11	2	int	ret
if	6:4	24:4	2	(!strcmp (cmd ,"out_w" ) || !strcmp (cmd ,"w" ) || !strcmp (cmd ,"out_h" ) || !strcmp (cmd ,"h" ) || !strcmp (cmd ,"x" ) || !strcmp (cmd ,"y" ))
cond	6:11	8:53	3	!strcmp (cmd ,"out_w" ) || !strcmp (cmd ,"w" ) || !strcmp (cmd ,"out_h" ) || !strcmp (cmd ,"h" ) || !strcmp (cmd ,"x" ) || !strcmp (cmd ,"y" )
op	6:11	0:0	4	!
call	6:12	6:31	4	strcmp
arg	6:19	6:22	5	cmd
water	6:19	0:0	6	cmd
arg	6:24	6:31	5	"out_w"
water	6:24	0:0	6	"out_w"
op	6:34	0:0	4	||
op	6:37	0:0	4	!
call	6:38	6:53	4	strcmp
arg	6:45	6:48	5	cmd
water	6:45	0:0	6	cmd
arg	6:50	6:53	5	"w"
water	6:50	0:0	6	"w"
op	7:8	0:0	4	||
op	7:11	0:0	4	!
call	7:12	7:31	4	strcmp
arg	7:19	7:22	5	cmd
water	7:19	0:0	6	cmd
arg	7:24	7:31	5	"out_h"
water	7:24	0:0	6	"out_h"
op	7:34	0:0	4	||
op	7:37	0:0	4	!
call	7:38	7:53	4	strcmp
arg	7:45	7:48	5	cmd
water	7:45	0:0	6	cmd
arg	7:50	7:53	5	"h"
water	7:50	0:0	6	"h"
op	8:8	0:0	4	||
op	8:11	0:0	4	!
call	8:12	8:27	4	strcmp
arg	8:19	8:22	5	cmd
water	8:19	0:0	6	cmd
arg	8:24	8:27	5	"x"
water	8:24	0:0	6	"x"
op	8:34	0:0	4	||
op	8:37	0:0	4	!
call	8:38	8:53	4	strcmp
arg	8:45	8:48	5	cmd
water	8:45	0:0	6	cmd
arg	8:50	8:53	5	"y"
water	8:50	0:0	6	"y"
stmts	8:56	24:4	3	
water	8:56	0:0	4	{
decl	9:8	9:24	4	int	old_x
op	9:18	0:0	4	=
water	9:20	0:0	4	s
op	9:21	0:0	4	->
water	9:23	0:0	4	x
decl	10:8	10:24	4	int	old_y
op	10:18	0:0	4	=
water	10:20	0:0	4	s
op	10:21	0:0	4	->
water	10:23	0:0	4	y
decl	11:8	11:24	4	int	old_w
op	11:18	0:0	4	=
water	11:20	0:0	4	s
op	11:21	0:0	4	->
water	11:23	0:0	4	w
decl	12:8	12:24	4	int	old_h
op	12:18	0:0	4	=
water	12:20	0:0	4	s
op	12:21	0:0	4	->
water	12:23	0:0	4	h
decl	13:8	13:47	4	AVFilterLink	*outlink
op	13:30	0:0	4	=
water	13:32	0:0	4	ctx
op	13:35	0:0	4	->
water	13:37	0:0	4	outputs
op	13:44	0:0	4	[
water	13:45	0:0	4	0
op	13:46	0:0	4	]
decl	14:8	14:46	4	AVFilterLink	*inlink
op	14:30	0:0	4	=
water	14:32	0:0	4	ctx
op	14:35	0:0	4	->
water	14:37	0:0	4	inputs
op	14:43	0:0	4	[
water	14:44	0:0	4	0
op	14:45	0:0	4	]
call	15:8	15:34	4	av_opt_set
arg	15:19	15:20	5	s
water	15:19	0:0	6	s
arg	15:22	15:25	5	cmd
water	15:22	0:0	6	cmd
arg	15:27	15:31	5	args
water	15:27	0:0	6	args
arg	15:33	15:34	5	0
water	15:33	0:0	6	0
water	15:35	0:0	4	;
if	16:8	22:8	4	(( ret =config_input (inlink ) ) < 0)
cond	16:12	16:43	5	( ret =config_input (inlink ) ) < 0
water	16:12	0:0	6	(
water	16:13	0:0	6	ret
op	16:17	0:0	6	=
call	16:19	16:38	6	config_input
arg	16:32	16:38	7	inlink
water	16:32	0:0	8	inlink
water	16:39	0:0	6	)
op	16:41	0:0	6	<
water	16:43	0:0	6	0
stmts	16:46	22:8	5	
water	16:46	0:0	6	{
water	17:12	0:0	6	s
op	17:13	0:0	6	->
water	17:15	0:0	6	x
op	17:17	0:0	6	=
water	17:19	0:0	6	old_x
water	17:24	0:0	6	;
water	18:12	0:0	6	s
op	18:13	0:0	6	->
water	18:15	0:0	6	y
op	18:17	0:0	6	=
water	18:19	0:0	6	old_y
water	18:24	0:0	6	;
water	19:12	0:0	6	s
op	19:13	0:0	6	->
water	19:15	0:0	6	w
op	19:17	0:0	6	=
water	19:19	0:0	6	old_w
water	19:24	0:0	6	;
water	20:12	0:0	6	s
op	20:13	0:0	6	->
water	20:15	0:0	6	h
op	20:17	0:0	6	=
water	20:19	0:0	6	old_h
water	20:24	0:0	6	;
return	21:12	21:22	6	ret
water	21:19	0:0	7	ret
water	22:8	0:0	6	}
water	23:8	0:0	4	ret
op	23:12	0:0	4	=
call	23:14	23:35	4	config_output
arg	23:28	23:35	5	outlink
water	23:28	0:0	6	outlink
water	23:36	0:0	4	;
water	24:4	0:0	4	}
else	24:6	25:29	2
stmts	25:8	25:29	3	
water	25:8	0:0	4	ret
op	25:12	0:0	4	=
call	25:14	25:28	4	AVERROR
arg	25:22	25:28	5	ENOSYS
water	25:22	0:0	6	ENOSYS
water	25:29	0:0	4	;
return	26:4	26:14	2	ret
water	26:11	0:0	3	ret

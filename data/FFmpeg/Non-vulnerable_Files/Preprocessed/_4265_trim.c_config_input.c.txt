func	1:0	26:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	25:12	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:36	2	TrimContext	*s
op	4:25	0:0	2	=
water	4:27	0:0	2	ctx
op	4:30	0:0	2	->
water	4:32	0:0	2	priv
decl	5:4	6:79	2	AVRational	tb
op	5:18	0:0	2	=
water	5:20	0:0	2	(
water	5:21	0:0	2	inlink
op	5:27	0:0	2	->
water	5:29	0:0	2	type
op	5:34	0:0	2	==
water	5:37	0:0	2	AVMEDIA_TYPE_VIDEO
water	5:55	0:0	2	)
water	5:57	0:0	2	?
water	6:21	0:0	2	inlink
op	6:27	0:0	2	->
water	6:29	0:0	2	time_base
water	6:39	0:0	2	:
water	6:41	0:0	2	(
water	6:42	0:0	2	AVRational
water	6:52	0:0	2	)
water	6:53	0:0	2	{
water	6:55	0:0	2	1
water	6:56	0:0	2	,
water	6:58	0:0	2	inlink
op	6:64	0:0	2	->
water	6:66	0:0	2	sample_rate
water	6:78	0:0	2	}
if	7:4	8:47	2	(s -> start_time_dbl != DBL_MAX)
cond	7:8	7:29	3	s -> start_time_dbl != DBL_MAX
water	7:8	0:0	4	s
op	7:9	0:0	4	->
water	7:11	0:0	4	start_time_dbl
op	7:26	0:0	4	!=
water	7:29	0:0	4	DBL_MAX
stmts	8:8	8:47	3	
water	8:8	0:0	4	s
op	8:9	0:0	4	->
water	8:11	0:0	4	start_time
op	8:22	0:0	4	=
water	8:24	0:0	4	s
op	8:25	0:0	4	->
water	8:27	0:0	4	start_time_dbl
op	8:42	0:0	4	*
water	8:44	0:0	4	1
water	8:45	0:0	4	e6
water	8:47	0:0	4	;
if	9:4	10:43	2	(s -> end_time_dbl != DBL_MAX)
cond	9:8	9:27	3	s -> end_time_dbl != DBL_MAX
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	end_time_dbl
op	9:24	0:0	4	!=
water	9:27	0:0	4	DBL_MAX
stmts	10:8	10:43	3	
water	10:8	0:0	4	s
op	10:9	0:0	4	->
water	10:11	0:0	4	end_time
op	10:20	0:0	4	=
water	10:22	0:0	4	s
op	10:23	0:0	4	->
water	10:25	0:0	4	end_time_dbl
op	10:38	0:0	4	*
water	10:40	0:0	4	1
water	10:41	0:0	4	e6
water	10:43	0:0	4	;
if	11:4	12:43	2	(s -> duration_dbl != 0)
cond	11:8	11:27	3	s -> duration_dbl != 0
water	11:8	0:0	4	s
op	11:9	0:0	4	->
water	11:11	0:0	4	duration_dbl
op	11:24	0:0	4	!=
water	11:27	0:0	4	0
stmts	12:8	12:43	3	
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	duration
op	12:20	0:0	4	=
water	12:22	0:0	4	s
op	12:23	0:0	4	->
water	12:25	0:0	4	duration_dbl
op	12:38	0:0	4	*
water	12:40	0:0	4	1
water	12:41	0:0	4	e6
water	12:43	0:0	4	;
if	13:4	17:4	2	(s -> start_time != INT64_MAX)
cond	13:8	13:25	3	s -> start_time != INT64_MAX
water	13:8	0:0	4	s
op	13:9	0:0	4	->
water	13:11	0:0	4	start_time
op	13:22	0:0	4	!=
water	13:25	0:0	4	INT64_MAX
stmts	13:36	17:4	3	
water	13:36	0:0	4	{
decl	14:8	14:75	4	int64_t	start_pts
op	14:26	0:0	4	=
call	14:28	14:74	5	av_rescale_q
arg	14:41	14:54	6	s->start_time
water	14:41	0:0	7	s
op	14:42	0:0	7	->
water	14:44	0:0	7	start_time
arg	14:56	14:70	6	AV_TIME_BASE_Q
water	14:56	0:0	7	AV_TIME_BASE_Q
arg	14:72	14:74	6	tb
water	14:72	0:0	7	tb
if	15:8	16:36	4	(s -> start_pts == AV_NOPTS_VALUE || start_pts < s -> start_pts)
cond	15:12	15:61	5	s -> start_pts == AV_NOPTS_VALUE || start_pts < s -> start_pts
water	15:12	0:0	6	s
op	15:13	0:0	6	->
water	15:15	0:0	6	start_pts
op	15:25	0:0	6	==
water	15:28	0:0	6	AV_NOPTS_VALUE
op	15:43	0:0	6	||
water	15:46	0:0	6	start_pts
op	15:56	0:0	6	<
water	15:58	0:0	6	s
op	15:59	0:0	6	->
water	15:61	0:0	6	start_pts
stmts	16:12	16:36	5	
water	16:12	0:0	6	s
op	16:13	0:0	6	->
water	16:15	0:0	6	start_pts
op	16:25	0:0	6	=
water	16:27	0:0	6	start_pts
water	16:36	0:0	6	;
water	17:4	0:0	4	}
if	18:4	22:4	2	(s -> end_time != INT64_MAX)
cond	18:8	18:23	3	s -> end_time != INT64_MAX
water	18:8	0:0	4	s
op	18:9	0:0	4	->
water	18:11	0:0	4	end_time
op	18:20	0:0	4	!=
water	18:23	0:0	4	INT64_MAX
stmts	18:34	22:4	3	
water	18:34	0:0	4	{
decl	19:8	19:71	4	int64_t	end_pts
op	19:24	0:0	4	=
call	19:26	19:70	5	av_rescale_q
arg	19:39	19:50	6	s->end_time
water	19:39	0:0	7	s
op	19:40	0:0	7	->
water	19:42	0:0	7	end_time
arg	19:52	19:66	6	AV_TIME_BASE_Q
water	19:52	0:0	7	AV_TIME_BASE_Q
arg	19:68	19:70	6	tb
water	19:68	0:0	7	tb
if	20:8	21:32	4	(s -> end_pts == AV_NOPTS_VALUE || end_pts > s -> end_pts)
cond	20:12	20:57	5	s -> end_pts == AV_NOPTS_VALUE || end_pts > s -> end_pts
water	20:12	0:0	6	s
op	20:13	0:0	6	->
water	20:15	0:0	6	end_pts
op	20:23	0:0	6	==
water	20:26	0:0	6	AV_NOPTS_VALUE
op	20:41	0:0	6	||
water	20:44	0:0	6	end_pts
op	20:52	0:0	6	>
water	20:54	0:0	6	s
op	20:55	0:0	6	->
water	20:57	0:0	6	end_pts
stmts	21:12	21:32	5	
water	21:12	0:0	6	s
op	21:13	0:0	6	->
water	21:15	0:0	6	end_pts
op	21:23	0:0	6	=
water	21:25	0:0	6	end_pts
water	21:32	0:0	6	;
water	22:4	0:0	4	}
if	23:4	24:70	2	(s -> duration)
cond	23:8	23:11	3	s -> duration
water	23:8	0:0	4	s
op	23:9	0:0	4	->
water	23:11	0:0	4	duration
stmts	24:8	24:70	3	
water	24:8	0:0	4	s
op	24:9	0:0	4	->
water	24:11	0:0	4	duration_tb
op	24:23	0:0	4	=
call	24:25	24:69	4	av_rescale_q
arg	24:38	24:49	5	s->duration
water	24:38	0:0	6	s
op	24:39	0:0	6	->
water	24:41	0:0	6	duration
arg	24:51	24:65	5	AV_TIME_BASE_Q
water	24:51	0:0	6	AV_TIME_BASE_Q
arg	24:67	24:69	5	tb
water	24:67	0:0	6	tb
water	24:70	0:0	4	;
return	25:4	25:12	2	0
water	25:11	0:0	3	0

func	1:0	60:0	0	static void	chroma
params	1:18	0:0	1	
param	1:19	1:37	2	WaveformContext *	s
param	1:39	1:50	2	AVFrame *	in
param	1:52	1:64	2	AVFrame *	out
param	2:19	2:32	2	int	component
param	2:34	2:47	2	int	intensity
param	2:49	2:59	2	int	offset
param	2:61	2:71	2	int	column
stmnts	0:0	59:51	1	
decl	4:4	4:52	2	const int	plane
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	desc
op	4:29	0:0	2	->
water	4:31	0:0	2	comp
op	4:35	0:0	2	[
water	4:36	0:0	2	component
op	4:45	0:0	2	]
op	4:46	0:0	2	.
water	4:47	0:0	2	plane
decl	5:4	5:32	2	const int	mirror
op	5:21	0:0	2	=
water	5:23	0:0	2	s
op	5:24	0:0	2	->
water	5:26	0:0	2	mirror
decl	6:4	6:64	2	const int	c0_linesize
op	6:26	0:0	2	=
water	6:28	0:0	2	in
op	6:30	0:0	2	->
water	6:32	0:0	2	linesize
op	6:40	0:0	2	[
water	6:41	0:0	2	(
water	6:42	0:0	2	plane
op	6:48	0:0	2	+
water	6:50	0:0	2	1
water	6:51	0:0	2	)
op	6:53	0:0	2	%
water	6:55	0:0	2	s
op	6:56	0:0	2	->
water	6:58	0:0	2	ncomp
op	6:63	0:0	2	]
decl	7:4	7:64	2	const int	c1_linesize
op	7:26	0:0	2	=
water	7:28	0:0	2	in
op	7:30	0:0	2	->
water	7:32	0:0	2	linesize
op	7:40	0:0	2	[
water	7:41	0:0	2	(
water	7:42	0:0	2	plane
op	7:48	0:0	2	+
water	7:50	0:0	2	2
water	7:51	0:0	2	)
op	7:53	0:0	2	%
water	7:55	0:0	2	s
op	7:56	0:0	2	->
water	7:58	0:0	2	ncomp
op	7:63	0:0	2	]
decl	8:4	8:49	2	const int	dst_linesize
op	8:27	0:0	2	=
water	8:29	0:0	2	out
op	8:32	0:0	2	->
water	8:34	0:0	2	linesize
op	8:42	0:0	2	[
water	8:43	0:0	2	plane
op	8:48	0:0	2	]
decl	9:4	9:35	2	const int	max
op	9:18	0:0	2	=
water	9:20	0:0	2	255
op	9:24	0:0	2	-
water	9:26	0:0	2	intensity
decl	10:4	10:32	2	const int	src_h
op	10:20	0:0	2	=
water	10:22	0:0	2	in
op	10:24	0:0	2	->
water	10:26	0:0	2	height
decl	11:4	11:31	2	const int	src_w
op	11:20	0:0	2	=
water	11:22	0:0	2	in
op	11:24	0:0	2	->
water	11:26	0:0	2	width
decl	12:4	12:12	2	int	x
water	12:9	0:0	2	,
decl	12:4	12:12	2	int	y
if	13:4	35:4	2	(column)
cond	13:8	13:8	3	column
water	13:8	0:0	4	column
stmts	13:16	35:4	3	
water	13:16	0:0	4	{
decl	14:8	14:77	4	const int	dst_signed_linesize
op	14:38	0:0	4	=
water	14:40	0:0	4	dst_linesize
op	14:53	0:0	4	*
water	14:55	0:0	4	(
water	14:56	0:0	4	mirror
op	14:63	0:0	4	==
water	14:66	0:0	4	1
water	14:68	0:0	4	?
op	14:70	0:0	4	-
water	14:71	0:0	4	1
water	14:73	0:0	4	:
water	14:75	0:0	4	1
water	14:76	0:0	4	)
for	15:8	34:8	4	(x = 0 ;x < src_w;x ++)
forinit	15:13	15:18	5	x = 0 ;
water	15:13	0:0	6	x
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:24	5	x < src_w
water	15:20	0:0	6	x
op	15:22	0:0	6	<
water	15:24	0:0	6	src_w
forexpr	15:31	15:32	5	x ++
water	15:31	0:0	6	x
op	15:32	0:0	6	++
stmts	15:36	34:8	5	
water	15:36	0:0	6	{
decl	16:12	16:69	6	const uint8_t	*c0_data
op	16:35	0:0	6	=
water	16:37	0:0	6	in
op	16:39	0:0	6	->
water	16:41	0:0	6	data
op	16:45	0:0	6	[
water	16:46	0:0	6	(
water	16:47	0:0	6	plane
op	16:53	0:0	6	+
water	16:55	0:0	6	1
water	16:56	0:0	6	)
op	16:58	0:0	6	%
water	16:60	0:0	6	s
op	16:61	0:0	6	->
water	16:63	0:0	6	ncomp
op	16:68	0:0	6	]
decl	17:12	17:69	6	const uint8_t	*c1_data
op	17:35	0:0	6	=
water	17:37	0:0	6	in
op	17:39	0:0	6	->
water	17:41	0:0	6	data
op	17:45	0:0	6	[
water	17:46	0:0	6	(
water	17:47	0:0	6	plane
op	17:53	0:0	6	+
water	17:55	0:0	6	2
water	17:56	0:0	6	)
op	17:58	0:0	6	%
water	17:60	0:0	6	s
op	17:61	0:0	6	->
water	17:63	0:0	6	ncomp
op	17:68	0:0	6	]
decl	18:12	18:72	6	uint8_t	*dst_data
op	18:30	0:0	6	=
water	18:32	0:0	6	out
op	18:35	0:0	6	->
water	18:37	0:0	6	data
op	18:41	0:0	6	[
water	18:42	0:0	6	plane
op	18:47	0:0	6	]
op	18:49	0:0	6	+
water	18:51	0:0	6	offset
op	18:58	0:0	6	*
water	18:60	0:0	6	dst_linesize
water	19:12	0:0	6	uint8_t
op	19:20	0:0	6	*
water	19:22	0:0	6	const
water	19:28	0:0	6	dst_bottom_line
op	19:44	0:0	6	=
water	19:46	0:0	6	dst_data
op	19:55	0:0	6	+
water	19:57	0:0	6	dst_linesize
op	19:70	0:0	6	*
water	19:72	0:0	6	(
water	19:73	0:0	6	s
op	19:74	0:0	6	->
water	19:76	0:0	6	size
op	19:81	0:0	6	-
water	19:83	0:0	6	1
water	19:84	0:0	6	)
water	19:85	0:0	6	;
water	20:12	0:0	6	uint8_t
op	20:20	0:0	6	*
water	20:22	0:0	6	const
water	20:28	0:0	6	dst_line
op	20:37	0:0	6	=
water	20:39	0:0	6	(
water	20:40	0:0	6	mirror
water	20:47	0:0	6	?
water	20:49	0:0	6	dst_bottom_line
water	20:65	0:0	6	:
water	20:67	0:0	6	dst_data
water	20:75	0:0	6	)
water	20:76	0:0	6	;
decl	21:12	21:35	6	uint8_t	*dst
op	21:25	0:0	6	=
water	21:27	0:0	6	dst_line
for	22:12	33:12	6	(y = 0 ;y < src_h;y ++)
forinit	22:17	22:22	7	y = 0 ;
water	22:17	0:0	8	y
op	22:19	0:0	8	=
water	22:21	0:0	8	0
water	22:22	0:0	8	;
cond	22:24	22:28	7	y < src_h
water	22:24	0:0	8	y
op	22:26	0:0	8	<
water	22:28	0:0	8	src_h
forexpr	22:35	22:36	7	y ++
water	22:35	0:0	8	y
op	22:36	0:0	8	++
stmts	22:40	33:12	7	
water	22:40	0:0	8	{
decl	23:16	23:81	8	const int	sum
op	23:30	0:0	8	=
call	23:32	23:54	9	FFABS
arg	23:38	23:54	10	c0_data[x]-128
water	23:38	0:0	11	c0_data
op	23:45	0:0	11	[
water	23:46	0:0	11	x
op	23:47	0:0	11	]
op	23:49	0:0	11	-
water	23:51	0:0	11	128
op	23:56	0:0	8	+
call	23:58	23:80	9	FFABS
arg	23:64	23:80	10	c1_data[x]-128
water	23:64	0:0	11	c1_data
op	23:71	0:0	11	[
water	23:72	0:0	11	x
op	23:73	0:0	11	]
op	23:75	0:0	11	-
water	23:77	0:0	11	128
decl	24:16	24:31	8	uint8_t	*target
decl	25:16	25:21	8	int	p
for	26:16	29:16	8	(p = 256 - sum ;p < 256 + sum;p ++)
forinit	26:21	26:34	9	p = 256 - sum ;
water	26:21	0:0	10	p
op	26:23	0:0	10	=
water	26:25	0:0	10	256
op	26:29	0:0	10	-
water	26:31	0:0	10	sum
water	26:34	0:0	10	;
cond	26:36	26:46	9	p < 256 + sum
water	26:36	0:0	10	p
op	26:38	0:0	10	<
water	26:40	0:0	10	256
op	26:44	0:0	10	+
water	26:46	0:0	10	sum
forexpr	26:51	26:52	9	p ++
water	26:51	0:0	10	p
op	26:52	0:0	10	++
stmts	26:56	29:16	9	
water	26:56	0:0	10	{
water	27:20	0:0	10	target
op	27:27	0:0	10	=
water	27:29	0:0	10	dst
op	27:33	0:0	10	+
water	27:35	0:0	10	x
op	27:37	0:0	10	+
water	27:39	0:0	10	dst_signed_linesize
op	27:59	0:0	10	*
water	27:61	0:0	10	p
water	27:62	0:0	10	;
call	28:20	28:41	10	update
arg	28:27	28:33	11	target
water	28:27	0:0	12	target
arg	28:35	28:38	11	max
water	28:35	0:0	12	max
arg	28:40	28:41	11	1
water	28:40	0:0	12	1
water	28:42	0:0	10	;
water	29:16	0:0	10	}
water	30:16	0:0	8	c0_data
op	30:24	0:0	8	+=
water	30:27	0:0	8	c0_linesize
water	30:38	0:0	8	;
water	31:16	0:0	8	c1_data
op	31:24	0:0	8	+=
water	31:27	0:0	8	c1_linesize
water	31:38	0:0	8	;
water	32:16	0:0	8	dst_data
op	32:25	0:0	8	+=
water	32:28	0:0	8	dst_linesize
water	32:40	0:0	8	;
water	33:12	0:0	8	}
water	34:8	0:0	6	}
water	35:4	0:0	4	}
else	35:6	58:4	2
stmts	35:11	58:4	3	
water	35:11	0:0	4	{
decl	36:8	36:65	4	const uint8_t	*c0_data
op	36:31	0:0	4	=
water	36:33	0:0	4	in
op	36:35	0:0	4	->
water	36:37	0:0	4	data
op	36:41	0:0	4	[
water	36:42	0:0	4	(
water	36:43	0:0	4	plane
op	36:49	0:0	4	+
water	36:51	0:0	4	1
water	36:52	0:0	4	)
op	36:54	0:0	4	%
water	36:56	0:0	4	s
op	36:57	0:0	4	->
water	36:59	0:0	4	ncomp
op	36:64	0:0	4	]
decl	37:8	37:65	4	const uint8_t	*c1_data
op	37:31	0:0	4	=
water	37:33	0:0	4	in
op	37:35	0:0	4	->
water	37:37	0:0	4	data
op	37:41	0:0	4	[
water	37:42	0:0	4	(
water	37:43	0:0	4	plane
op	37:49	0:0	4	+
water	37:51	0:0	4	2
water	37:52	0:0	4	)
op	37:54	0:0	4	%
water	37:56	0:0	4	s
op	37:57	0:0	4	->
water	37:59	0:0	4	ncomp
op	37:64	0:0	4	]
decl	38:8	38:53	4	uint8_t	*dst_data
op	38:26	0:0	4	=
water	38:28	0:0	4	out
op	38:31	0:0	4	->
water	38:33	0:0	4	data
op	38:37	0:0	4	[
water	38:38	0:0	4	plane
op	38:43	0:0	4	]
op	38:45	0:0	4	+
water	38:47	0:0	4	offset
if	39:8	40:35	4	(mirror)
cond	39:12	39:12	5	mirror
water	39:12	0:0	6	mirror
stmts	40:12	40:35	5	
water	40:12	0:0	6	dst_data
op	40:21	0:0	6	+=
water	40:24	0:0	6	s
op	40:25	0:0	6	->
water	40:27	0:0	6	size
op	40:32	0:0	6	-
water	40:34	0:0	6	1
water	40:35	0:0	6	;
for	41:8	57:8	4	(y = 0 ;y < src_h;y ++)
forinit	41:13	41:18	5	y = 0 ;
water	41:13	0:0	6	y
op	41:15	0:0	6	=
water	41:17	0:0	6	0
water	41:18	0:0	6	;
cond	41:20	41:24	5	y < src_h
water	41:20	0:0	6	y
op	41:22	0:0	6	<
water	41:24	0:0	6	src_h
forexpr	41:31	41:32	5	y ++
water	41:31	0:0	6	y
op	41:32	0:0	6	++
stmts	41:36	57:8	5	
water	41:36	0:0	6	{
for	42:12	53:12	6	(x = 0 ;x < src_w;x ++)
forinit	42:17	42:22	7	x = 0 ;
water	42:17	0:0	8	x
op	42:19	0:0	8	=
water	42:21	0:0	8	0
water	42:22	0:0	8	;
cond	42:24	42:28	7	x < src_w
water	42:24	0:0	8	x
op	42:26	0:0	8	<
water	42:28	0:0	8	src_w
forexpr	42:35	42:36	7	x ++
water	42:35	0:0	8	x
op	42:36	0:0	8	++
stmts	42:40	53:12	7	
water	42:40	0:0	8	{
decl	43:16	43:81	8	const int	sum
op	43:30	0:0	8	=
call	43:32	43:54	9	FFABS
arg	43:38	43:54	10	c0_data[x]-128
water	43:38	0:0	11	c0_data
op	43:45	0:0	11	[
water	43:46	0:0	11	x
op	43:47	0:0	11	]
op	43:49	0:0	11	-
water	43:51	0:0	11	128
op	43:56	0:0	8	+
call	43:58	43:80	9	FFABS
arg	43:64	43:80	10	c1_data[x]-128
water	43:64	0:0	11	c1_data
op	43:71	0:0	11	[
water	43:72	0:0	11	x
op	43:73	0:0	11	]
op	43:75	0:0	11	-
water	43:77	0:0	11	128
decl	44:16	44:31	8	uint8_t	*target
decl	45:16	45:21	8	int	p
for	46:16	52:16	8	(p = 256 - sum ;p < 256 + sum;p ++)
forinit	46:21	46:34	9	p = 256 - sum ;
water	46:21	0:0	10	p
op	46:23	0:0	10	=
water	46:25	0:0	10	256
op	46:29	0:0	10	-
water	46:31	0:0	10	sum
water	46:34	0:0	10	;
cond	46:36	46:46	9	p < 256 + sum
water	46:36	0:0	10	p
op	46:38	0:0	10	<
water	46:40	0:0	10	256
op	46:44	0:0	10	+
water	46:46	0:0	10	sum
forexpr	46:51	46:52	9	p ++
water	46:51	0:0	10	p
op	46:52	0:0	10	++
stmts	46:56	52:16	9	
water	46:56	0:0	10	{
if	47:20	48:45	10	(mirror)
cond	47:24	47:24	11	mirror
water	47:24	0:0	12	mirror
stmts	48:24	48:45	11	
water	48:24	0:0	12	target
op	48:31	0:0	12	=
water	48:33	0:0	12	dst_data
op	48:42	0:0	12	-
water	48:44	0:0	12	p
water	48:45	0:0	12	;
else	49:20	50:45	10
stmts	50:24	50:45	11	
water	50:24	0:0	12	target
op	50:31	0:0	12	=
water	50:33	0:0	12	dst_data
op	50:42	0:0	12	+
water	50:44	0:0	12	p
water	50:45	0:0	12	;
call	51:20	51:41	10	update
arg	51:27	51:33	11	target
water	51:27	0:0	12	target
arg	51:35	51:38	11	max
water	51:35	0:0	12	max
arg	51:40	51:41	11	1
water	51:40	0:0	12	1
water	51:42	0:0	10	;
water	52:16	0:0	10	}
water	53:12	0:0	8	}
water	54:12	0:0	6	c0_data
op	54:20	0:0	6	+=
water	54:23	0:0	6	c0_linesize
water	54:34	0:0	6	;
water	55:12	0:0	6	c1_data
op	55:20	0:0	6	+=
water	55:23	0:0	6	c1_linesize
water	55:34	0:0	6	;
water	56:12	0:0	6	dst_data
op	56:21	0:0	6	+=
water	56:24	0:0	6	dst_linesize
water	56:36	0:0	6	;
water	57:8	0:0	6	}
water	58:4	0:0	4	}
call	59:4	59:50	2	envelope
arg	59:13	59:14	3	s
water	59:13	0:0	4	s
arg	59:16	59:19	3	out
water	59:16	0:0	4	out
arg	59:21	59:26	3	plane
water	59:21	0:0	4	plane
arg	59:28	59:50	3	(plane+0)%s->ncomp
water	59:28	0:0	4	(
water	59:29	0:0	4	plane
op	59:35	0:0	4	+
water	59:37	0:0	4	0
water	59:38	0:0	4	)
op	59:40	0:0	4	%
water	59:42	0:0	4	s
op	59:43	0:0	4	->
water	59:45	0:0	4	ncomp
water	59:51	0:0	2	;

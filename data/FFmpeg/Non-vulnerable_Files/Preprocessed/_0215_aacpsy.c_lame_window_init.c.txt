func	1:15	13:0	0	void	lame_window_init
params	1:36	0:0	1	
param	1:37	1:55	2	AacPsyContext *	ctx
param	1:57	1:78	2	AVCodecContext *	avctx
stmnts	0:0	12:4	1	
decl	3:4	3:12	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	j
for	4:4	12:4	2	(i = 0 ;i < avctx -> channels;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:27	3	i < avctx -> channels
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	avctx
op	4:25	0:0	4	->
water	4:27	0:0	4	channels
forexpr	4:37	4:38	3	i ++
water	4:37	0:0	4	i
op	4:38	0:0	4	++
stmts	4:42	12:4	3	
water	4:42	0:0	4	{
decl	5:8	5:40	4	AacPsyChannel	*pch
op	5:27	0:0	4	=
op	5:29	0:0	4	&
water	5:30	0:0	4	ctx
op	5:33	0:0	4	->
water	5:35	0:0	4	ch
op	5:37	0:0	4	[
water	5:38	0:0	4	i
op	5:39	0:0	4	]
if	6:8	7:92	4	(avctx -> flags & AV_CODEC_FLAG_QSCALE)
cond	6:12	6:27	5	avctx -> flags & AV_CODEC_FLAG_QSCALE
water	6:12	0:0	6	avctx
op	6:17	0:0	6	->
water	6:19	0:0	6	flags
op	6:25	0:0	6	&
water	6:27	0:0	6	AV_CODEC_FLAG_QSCALE
stmts	7:12	7:92	5	
water	7:12	0:0	6	pch
op	7:15	0:0	6	->
water	7:17	0:0	6	attack_threshold
op	7:34	0:0	6	=
water	7:36	0:0	6	psy_vbr_map
op	7:47	0:0	6	[
water	7:48	0:0	6	avctx
op	7:53	0:0	6	->
water	7:55	0:0	6	global_quality
op	7:70	0:0	6	/
water	7:72	0:0	6	FF_QP2LAMBDA
op	7:84	0:0	6	]
op	7:85	0:0	6	.
water	7:86	0:0	6	st_lrm
water	7:92	0:0	6	;
else	8:8	9:104	4
stmts	9:12	9:104	5	
water	9:12	0:0	6	pch
op	9:15	0:0	6	->
water	9:17	0:0	6	attack_threshold
op	9:34	0:0	6	=
call	9:36	9:103	6	lame_calc_attack_threshold
arg	9:63	9:103	7	avctx->bit_rate/avctx->channels/1000
water	9:63	0:0	8	avctx
op	9:68	0:0	8	->
water	9:70	0:0	8	bit_rate
op	9:79	0:0	8	/
water	9:81	0:0	8	avctx
op	9:86	0:0	8	->
water	9:88	0:0	8	channels
op	9:97	0:0	8	/
water	9:99	0:0	8	1000
water	9:104	0:0	6	;
for	10:8	11:48	4	(j = 0 ;j < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS;j ++)
forinit	10:13	10:18	5	j = 0 ;
water	10:13	0:0	6	j
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:18	0:0	6	;
cond	10:20	10:47	5	j < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS
water	10:20	0:0	6	j
op	10:22	0:0	6	<
water	10:24	0:0	6	AAC_NUM_BLOCKS_SHORT
op	10:45	0:0	6	*
water	10:47	0:0	6	PSY_LAME_NUM_SUBBLOCKS
forexpr	10:71	10:72	5	j ++
water	10:71	0:0	6	j
op	10:72	0:0	6	++
stmts	11:12	11:48	5	
water	11:12	0:0	6	pch
op	11:15	0:0	6	->
water	11:17	0:0	6	prev_energy_subshort
op	11:37	0:0	6	[
water	11:38	0:0	6	j
op	11:39	0:0	6	]
op	11:41	0:0	6	=
water	11:43	0:0	6	10
op	11:45	0:0	6	.
water	11:46	0:0	6	0
water	11:47	0:0	6	f
water	11:48	0:0	6	;
water	12:4	0:0	4	}

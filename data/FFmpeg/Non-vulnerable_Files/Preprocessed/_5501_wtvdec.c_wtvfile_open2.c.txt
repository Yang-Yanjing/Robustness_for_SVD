func	1:0	36:0	0	static AVIOContext *	wtvfile_open2
params	1:34	0:0	1	
param	1:35	1:53	2	AVFormatContext *	s
param	1:55	1:73	2	const uint8_t *	buf
param	1:75	1:87	2	int	buf_size
param	1:89	1:112	2	const uint8_t *	filename
param	1:114	1:131	2	int	filename_size
stmnts	0:0	35:12	1	
decl	3:4	3:43	2	const uint8_t	*buf_end
op	3:27	0:0	2	=
water	3:29	0:0	2	buf
op	3:33	0:0	2	+
water	3:35	0:0	2	buf_size
while	4:4	34:4	2	(buf + 48 <= buf_end)
cond	4:10	4:22	3	buf + 48 <= buf_end
water	4:10	0:0	4	buf
op	4:14	0:0	4	+
water	4:16	0:0	4	48
op	4:19	0:0	4	<=
water	4:22	0:0	4	buf_end
stmts	4:31	34:4	3	
water	4:31	0:0	4	{
decl	5:8	5:54	4	int	dir_length
water	5:22	0:0	4	,
decl	5:8	5:54	4	int	name_size
water	5:33	0:0	4	,
decl	5:8	5:54	4	int	first_sector
water	5:47	0:0	4	,
decl	5:8	5:54	4	int	depth
decl	6:8	6:28	4	uint64_t	file_length
decl	7:8	7:27	4	const uint8_t	*name
if	8:8	12:8	4	(ff_guidcmp (buf ,ff_dir_entry_guid ))
cond	8:12	8:45	5	ff_guidcmp (buf ,ff_dir_entry_guid )
call	8:12	8:45	6	ff_guidcmp
arg	8:23	8:26	7	buf
water	8:23	0:0	8	buf
arg	8:28	8:45	7	ff_dir_entry_guid
water	8:28	0:0	8	ff_dir_entry_guid
stmts	8:48	12:8	5	
water	8:48	0:0	6	{
call	9:12	10:76	6	av_log
arg	9:19	9:20	7	s
water	9:19	0:0	8	s
arg	9:22	9:34	7	AV_LOG_ERROR
water	9:22	0:0	8	AV_LOG_ERROR
arg	9:36	10:58	7	"unknown guid "FF_PRI_GUID", expected dir_entry_guid; ""remaining directory entries ignored\n"
water	9:36	0:0	8	"unknown guid "
water	9:51	0:0	8	FF_PRI_GUID
water	9:62	0:0	8	", expected dir_entry_guid; "
water	10:19	0:0	8	"remaining directory entries ignored\n"
arg	10:60	10:76	7	FF_ARG_GUID(buf)
call	10:60	10:75	8	FF_ARG_GUID
arg	10:72	10:75	9	buf
water	10:72	0:0	10	buf
water	10:77	0:0	6	;
break	11:12	11:17	6	
water	12:8	0:0	6	}
water	13:8	0:0	4	dir_length
op	13:20	0:0	4	=
call	13:22	13:38	4	AV_RL16
arg	13:30	13:38	5	buf+16
water	13:30	0:0	6	buf
op	13:34	0:0	6	+
water	13:36	0:0	6	16
water	13:39	0:0	4	;
water	14:8	0:0	4	file_length
op	14:20	0:0	4	=
call	14:22	14:38	4	AV_RL64
arg	14:30	14:38	5	buf+24
water	14:30	0:0	6	buf
op	14:34	0:0	6	+
water	14:36	0:0	6	24
water	14:39	0:0	4	;
water	15:8	0:0	4	name_size
op	15:20	0:0	4	=
water	15:22	0:0	4	2
call	15:24	15:42	4	*AV_RL32
arg	15:34	15:42	5	buf+32
water	15:34	0:0	6	buf
op	15:38	0:0	6	+
water	15:40	0:0	6	32
water	15:43	0:0	4	;
if	16:8	20:8	4	(name_size < 0)
cond	16:12	16:24	5	name_size < 0
water	16:12	0:0	6	name_size
op	16:22	0:0	6	<
water	16:24	0:0	6	0
stmts	16:27	20:8	5	
water	16:27	0:0	6	{
call	17:12	18:79	6	av_log
arg	17:19	17:20	7	s
water	17:19	0:0	8	s
arg	17:22	17:34	7	AV_LOG_ERROR
water	17:22	0:0	8	AV_LOG_ERROR
arg	18:19	18:79	7	"bad filename length, remaining directory entries ignored\n"
water	18:19	0:0	8	"bad filename length, remaining directory entries ignored\n"
water	18:80	0:0	6	;
break	19:12	19:17	6	
water	20:8	0:0	6	}
if	21:8	24:8	4	(48 + ( int64_t ) name_size > buf_end - buf)
cond	21:12	21:48	5	48 + ( int64_t ) name_size > buf_end - buf
water	21:12	0:0	6	48
op	21:15	0:0	6	+
water	21:17	0:0	6	(
water	21:18	0:0	6	int64_t
water	21:25	0:0	6	)
water	21:26	0:0	6	name_size
op	21:36	0:0	6	>
water	21:38	0:0	6	buf_end
op	21:46	0:0	6	-
water	21:48	0:0	6	buf
stmts	21:53	24:8	5	
water	21:53	0:0	6	{
call	22:12	22:105	6	av_log
arg	22:19	22:20	7	s
water	22:19	0:0	8	s
arg	22:22	22:34	7	AV_LOG_ERROR
water	22:22	0:0	8	AV_LOG_ERROR
arg	22:36	22:105	7	"filename exceeds buffer size; remaining directory entries ignored\n"
water	22:36	0:0	8	"filename exceeds buffer size; remaining directory entries ignored\n"
water	22:106	0:0	6	;
break	23:12	23:17	6	
water	24:8	0:0	6	}
water	25:8	0:0	4	first_sector
op	25:21	0:0	4	=
call	25:23	25:51	4	AV_RL32
arg	25:31	25:51	5	buf+40+name_size
water	25:31	0:0	6	buf
op	25:35	0:0	6	+
water	25:37	0:0	6	40
op	25:40	0:0	6	+
water	25:42	0:0	6	name_size
water	25:52	0:0	4	;
water	26:8	0:0	4	depth
op	26:21	0:0	4	=
call	26:23	26:51	4	AV_RL32
arg	26:31	26:51	5	buf+44+name_size
water	26:31	0:0	6	buf
op	26:35	0:0	6	+
water	26:37	0:0	6	44
op	26:40	0:0	6	+
water	26:42	0:0	6	name_size
water	26:52	0:0	4	;
water	28:8	0:0	4	name
op	28:13	0:0	4	=
water	28:15	0:0	4	buf
op	28:19	0:0	4	+
water	28:21	0:0	4	40
water	28:23	0:0	4	;
if	29:8	32:75	4	(name_size >= filename_size && !memcmp (name ,filename ,filename_size ) && ( name_size < filename_size + 2 || !AV_RN16 (name + filename_size ) ))
cond	29:12	31:76	5	name_size >= filename_size && !memcmp (name ,filename ,filename_size ) && ( name_size < filename_size + 2 || !AV_RN16 (name + filename_size ) )
water	29:12	0:0	6	name_size
op	29:22	0:0	6	>=
water	29:25	0:0	6	filename_size
op	29:39	0:0	6	&&
op	30:12	0:0	6	!
call	30:13	30:49	6	memcmp
arg	30:20	30:24	7	name
water	30:20	0:0	8	name
arg	30:26	30:34	7	filename
water	30:26	0:0	8	filename
arg	30:36	30:49	7	filename_size
water	30:36	0:0	8	filename_size
op	30:51	0:0	6	&&
water	31:12	0:0	6	(
water	31:13	0:0	6	name_size
op	31:23	0:0	6	<
water	31:25	0:0	6	filename_size
op	31:39	0:0	6	+
water	31:41	0:0	6	2
op	31:43	0:0	6	||
op	31:46	0:0	6	!
call	31:47	31:75	6	AV_RN16
arg	31:55	31:75	7	name+filename_size
water	31:55	0:0	8	name
op	31:60	0:0	8	+
water	31:62	0:0	8	filename_size
water	31:76	0:0	6	)
stmts	32:12	32:75	5	
return	32:12	32:75	6	wtvfile_open_sector(first_sector,file_length,depth,s)
call	32:19	32:74	7	wtvfile_open_sector
arg	32:39	32:51	8	first_sector
water	32:39	0:0	9	first_sector
arg	32:53	32:64	8	file_length
water	32:53	0:0	9	file_length
arg	32:66	32:71	8	depth
water	32:66	0:0	9	depth
arg	32:73	32:74	8	s
water	32:73	0:0	9	s
water	33:8	0:0	4	buf
op	33:12	0:0	4	+=
water	33:15	0:0	4	dir_length
water	33:25	0:0	4	;
water	34:4	0:0	4	}
return	35:4	35:12	2	0
water	35:11	0:0	3	0

func	1:0	25:0	0	int	parse_optgroup
params	1:18	0:0	1	
param	1:19	1:31	2	void *	optctx
param	1:33	1:47	2	OptionGroup *	g
stmnts	0:0	24:12	1	
decl	3:4	3:14	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:14	2	int	ret
call	4:4	5:37	2	av_log
arg	4:11	4:15	3	NULL
water	4:11	0:0	4	NULL
arg	4:17	4:29	3	AV_LOG_DEBUG
water	4:17	0:0	4	AV_LOG_DEBUG
arg	4:31	4:69	3	"Parsing a group of options: %s %s.\n"
water	4:31	0:0	4	"Parsing a group of options: %s %s.\n"
arg	5:11	5:29	3	g->group_def->name
water	5:11	0:0	4	g
op	5:12	0:0	4	->
water	5:14	0:0	4	group_def
op	5:23	0:0	4	->
water	5:25	0:0	4	name
arg	5:31	5:37	3	g->arg
water	5:31	0:0	4	g
op	5:32	0:0	4	->
water	5:34	0:0	4	arg
water	5:38	0:0	2	;
for	6:4	22:4	2	(i = 0 ;i < g -> nb_opts;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:23	3	i < g -> nb_opts
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	g
op	6:21	0:0	4	->
water	6:23	0:0	4	nb_opts
forexpr	6:32	6:33	3	i ++
water	6:32	0:0	4	i
op	6:33	0:0	4	++
stmts	6:37	22:4	3	
water	6:37	0:0	4	{
decl	7:8	7:31	4	Option	*o
op	7:18	0:0	4	=
op	7:20	0:0	4	&
water	7:21	0:0	4	g
op	7:22	0:0	4	->
water	7:24	0:0	4	opts
op	7:28	0:0	4	[
water	7:29	0:0	4	i
op	7:30	0:0	4	]
if	8:8	16:8	4	(g -> group_def -> flags && ! ( g -> group_def -> flags & o -> opt -> flags ))
cond	8:12	9:49	5	g -> group_def -> flags && ! ( g -> group_def -> flags & o -> opt -> flags )
water	8:12	0:0	6	g
op	8:13	0:0	6	->
water	8:15	0:0	6	group_def
op	8:24	0:0	6	->
water	8:26	0:0	6	flags
op	8:32	0:0	6	&&
op	9:12	0:0	6	!
water	9:13	0:0	6	(
water	9:14	0:0	6	g
op	9:15	0:0	6	->
water	9:17	0:0	6	group_def
op	9:26	0:0	6	->
water	9:28	0:0	6	flags
op	9:34	0:0	6	&
water	9:36	0:0	6	o
op	9:37	0:0	6	->
water	9:39	0:0	6	opt
op	9:42	0:0	6	->
water	9:44	0:0	6	flags
water	9:49	0:0	6	)
stmts	9:52	16:8	5	
water	9:52	0:0	6	{
call	10:12	14:45	6	av_log
arg	10:19	10:23	7	NULL
water	10:19	0:0	8	NULL
arg	10:25	10:37	7	AV_LOG_ERROR
water	10:25	0:0	8	AV_LOG_ERROR
arg	10:39	13:42	7	"Option %s (%s) cannot be applied to ""%s %s -- you are trying to apply an input option to an ""output file or vice versa. Move this option before the ""file it belongs to.\n"
water	10:39	0:0	8	"Option %s (%s) cannot be applied to "
water	11:19	0:0	8	"%s %s -- you are trying to apply an input option to an "
water	12:19	0:0	8	"output file or vice versa. Move this option before the "
water	13:19	0:0	8	"file it belongs to.\n"
arg	13:44	13:50	7	o->key
water	13:44	0:0	8	o
op	13:45	0:0	8	->
water	13:47	0:0	8	key
arg	13:52	13:64	7	o->opt->help
water	13:52	0:0	8	o
op	13:53	0:0	8	->
water	13:55	0:0	8	opt
op	13:58	0:0	8	->
water	13:60	0:0	8	help
arg	14:19	14:37	7	g->group_def->name
water	14:19	0:0	8	g
op	14:20	0:0	8	->
water	14:22	0:0	8	group_def
op	14:31	0:0	8	->
water	14:33	0:0	8	name
arg	14:39	14:45	7	g->arg
water	14:39	0:0	8	g
op	14:40	0:0	8	->
water	14:42	0:0	8	arg
water	14:46	0:0	6	;
return	15:12	15:34	6	AVERROR(EINVAL)
call	15:19	15:33	7	AVERROR
arg	15:27	15:33	8	EINVAL
water	15:27	0:0	9	EINVAL
water	16:8	0:0	6	}
call	17:8	18:43	4	av_log
arg	17:15	17:19	5	NULL
water	17:15	0:0	6	NULL
arg	17:21	17:33	5	AV_LOG_DEBUG
water	17:21	0:0	6	AV_LOG_DEBUG
arg	17:35	17:80	5	"Applying option %s (%s) with argument %s.\n"
water	17:35	0:0	6	"Applying option %s (%s) with argument %s.\n"
arg	18:15	18:21	5	o->key
water	18:15	0:0	6	o
op	18:16	0:0	6	->
water	18:18	0:0	6	key
arg	18:23	18:35	5	o->opt->help
water	18:23	0:0	6	o
op	18:24	0:0	6	->
water	18:26	0:0	6	opt
op	18:29	0:0	6	->
water	18:31	0:0	6	help
arg	18:37	18:43	5	o->val
water	18:37	0:0	6	o
op	18:38	0:0	6	->
water	18:40	0:0	6	val
water	18:44	0:0	4	;
water	19:8	0:0	4	ret
op	19:12	0:0	4	=
call	19:14	19:57	4	write_option
arg	19:27	19:33	5	optctx
water	19:27	0:0	6	optctx
arg	19:35	19:41	5	o->opt
water	19:35	0:0	6	o
op	19:36	0:0	6	->
water	19:38	0:0	6	opt
arg	19:43	19:49	5	o->key
water	19:43	0:0	6	o
op	19:44	0:0	6	->
water	19:46	0:0	6	key
arg	19:51	19:57	5	o->val
water	19:51	0:0	6	o
op	19:52	0:0	6	->
water	19:54	0:0	6	val
water	19:58	0:0	4	;
if	20:8	21:22	4	(ret < 0)
cond	20:12	20:18	5	ret < 0
water	20:12	0:0	6	ret
op	20:16	0:0	6	<
water	20:18	0:0	6	0
stmts	21:12	21:22	5	
return	21:12	21:22	6	ret
water	21:19	0:0	7	ret
water	22:4	0:0	4	}
call	23:4	23:74	2	av_log
arg	23:11	23:15	3	NULL
water	23:11	0:0	4	NULL
arg	23:17	23:29	3	AV_LOG_DEBUG
water	23:17	0:0	4	AV_LOG_DEBUG
arg	23:31	23:74	3	"Successfully parsed a group of options.\n"
water	23:31	0:0	4	"Successfully parsed a group of options.\n"
water	23:75	0:0	2	;
return	24:4	24:12	2	0
water	24:11	0:0	3	0

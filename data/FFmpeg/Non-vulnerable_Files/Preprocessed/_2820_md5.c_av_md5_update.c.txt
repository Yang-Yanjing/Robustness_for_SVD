func	1:0	31:0	0	void	av_md5_update
params	1:18	0:0	1	
param	1:19	1:29	2	AVMD5 *	ctx
param	1:31	1:49	2	const uint8_t *	src
param	1:51	1:58	2	int	len
stmnts	0:0	30:36	1	
decl	3:4	3:22	2	const uint8_t	*end
decl	4:4	4:9	2	int	j
water	5:4	0:0	2	j
op	5:6	0:0	2	=
water	5:8	0:0	2	ctx
op	5:11	0:0	2	->
water	5:13	0:0	2	len
op	5:17	0:0	2	&
water	5:19	0:0	2	63
water	5:21	0:0	2	;
water	6:4	0:0	2	ctx
op	6:7	0:0	2	->
water	6:9	0:0	2	len
op	6:13	0:0	2	+=
water	6:16	0:0	2	len
water	6:19	0:0	2	;
if	7:4	15:4	2	(j)
cond	7:8	7:8	3	j
water	7:8	0:0	4	j
stmts	7:11	15:4	3	
water	7:11	0:0	4	{
decl	8:8	8:36	4	int	cnt
op	8:16	0:0	4	=
call	8:18	8:35	5	FFMIN
arg	8:24	8:27	6	len
water	8:24	0:0	7	len
arg	8:29	8:35	6	64-j
water	8:29	0:0	7	64
op	8:32	0:0	7	-
water	8:34	0:0	7	j
call	9:8	9:39	4	memcpy
arg	9:15	9:29	5	ctx->block+j
water	9:15	0:0	6	ctx
op	9:18	0:0	6	->
water	9:20	0:0	6	block
op	9:26	0:0	6	+
water	9:28	0:0	6	j
arg	9:31	9:34	5	src
water	9:31	0:0	6	src
arg	9:36	9:39	5	cnt
water	9:36	0:0	6	cnt
water	9:40	0:0	4	;
water	10:8	0:0	4	src
op	10:12	0:0	4	+=
water	10:15	0:0	4	cnt
water	10:18	0:0	4	;
water	11:8	0:0	4	len
op	11:12	0:0	4	-=
water	11:15	0:0	4	cnt
water	11:18	0:0	4	;
if	12:8	13:18	4	(j + cnt < 64)
cond	12:12	12:22	5	j + cnt < 64
water	12:12	0:0	6	j
op	12:14	0:0	6	+
water	12:16	0:0	6	cnt
op	12:20	0:0	6	<
water	12:22	0:0	6	64
stmts	13:12	13:18	5	
return	13:12	13:18	6	
call	14:8	14:49	4	body
arg	14:13	14:22	5	ctx->ABCD
water	14:13	0:0	6	ctx
op	14:16	0:0	6	->
water	14:18	0:0	6	ABCD
arg	14:24	14:46	5	(uint32_t*)ctx->block
water	14:24	0:0	6	(
water	14:25	0:0	6	uint32_t
op	14:34	0:0	6	*
water	14:35	0:0	6	)
water	14:36	0:0	6	ctx
op	14:39	0:0	6	->
water	14:41	0:0	6	block
arg	14:48	14:49	5	1
water	14:48	0:0	6	1
water	14:50	0:0	4	;
water	15:4	0:0	4	}
water	16:4	0:0	2	end
op	16:8	0:0	2	=
water	16:10	0:0	2	src
op	16:14	0:0	2	+
water	16:16	0:0	2	(
water	16:17	0:0	2	len
op	16:21	0:0	2	&
water	16:23	0:0	2	~63
water	16:26	0:0	2	)
water	16:27	0:0	2	;
if	17:4	23:4	2	(HAVE_BIGENDIAN || ( ! HAVE_FAST_UNALIGNED && ( ( intptr_t ) src & 3 ) ))
cond	17:8	17:70	3	HAVE_BIGENDIAN || ( ! HAVE_FAST_UNALIGNED && ( ( intptr_t ) src & 3 ) )
water	17:8	0:0	4	HAVE_BIGENDIAN
op	17:23	0:0	4	||
water	17:26	0:0	4	(
op	17:27	0:0	4	!
water	17:28	0:0	4	HAVE_FAST_UNALIGNED
op	17:48	0:0	4	&&
water	17:51	0:0	4	(
water	17:52	0:0	4	(
water	17:53	0:0	4	intptr_t
water	17:61	0:0	4	)
water	17:62	0:0	4	src
op	17:66	0:0	4	&
water	17:68	0:0	4	3
water	17:69	0:0	4	)
water	17:70	0:0	4	)
stmts	17:73	23:4	3	
water	17:73	0:0	4	{
while	18:7	22:8	4	(src < end)
cond	18:14	18:20	5	src < end
water	18:14	0:0	6	src
op	18:18	0:0	6	<
water	18:20	0:0	6	end
stmts	18:25	22:8	5	
water	18:25	0:0	6	{
call	19:11	19:37	6	memcpy
arg	19:18	19:28	7	ctx->block
water	19:18	0:0	8	ctx
op	19:21	0:0	8	->
water	19:23	0:0	8	block
arg	19:30	19:33	7	src
water	19:30	0:0	8	src
arg	19:35	19:37	7	64
water	19:35	0:0	8	64
water	19:38	0:0	6	;
call	20:11	20:53	6	body
arg	20:16	20:25	7	ctx->ABCD
water	20:16	0:0	8	ctx
op	20:19	0:0	8	->
water	20:21	0:0	8	ABCD
arg	20:27	20:50	7	(uint32_t*)ctx->block
water	20:27	0:0	8	(
water	20:28	0:0	8	uint32_t
op	20:37	0:0	8	*
water	20:38	0:0	8	)
water	20:40	0:0	8	ctx
op	20:43	0:0	8	->
water	20:45	0:0	8	block
arg	20:52	20:53	7	1
water	20:52	0:0	8	1
water	20:54	0:0	6	;
water	21:11	0:0	6	src
op	21:15	0:0	6	+=
water	21:18	0:0	6	64
water	21:20	0:0	6	;
water	22:8	0:0	6	}
water	23:4	0:0	4	}
else	23:6	27:4	2
stmts	23:11	27:4	3	
water	23:11	0:0	4	{
decl	24:8	24:30	4	int	nblocks
op	24:20	0:0	4	=
water	24:22	0:0	4	len
op	24:26	0:0	4	/
water	24:28	0:0	4	64
call	25:8	25:48	4	body
arg	25:13	25:22	5	ctx->ABCD
water	25:13	0:0	6	ctx
op	25:16	0:0	6	->
water	25:18	0:0	6	ABCD
arg	25:24	25:39	5	(uint32_t*)src
water	25:24	0:0	6	(
water	25:25	0:0	6	uint32_t
op	25:34	0:0	6	*
water	25:35	0:0	6	)
water	25:36	0:0	6	src
arg	25:41	25:48	5	nblocks
water	25:41	0:0	6	nblocks
water	25:49	0:0	4	;
water	26:8	0:0	4	src
op	26:12	0:0	4	=
water	26:14	0:0	4	end
water	26:17	0:0	4	;
water	27:4	0:0	4	}
water	28:4	0:0	2	len
op	28:8	0:0	2	&=
water	28:11	0:0	2	63
water	28:13	0:0	2	;
if	29:4	30:36	2	(len > 0)
cond	29:8	29:14	3	len > 0
water	29:8	0:0	4	len
op	29:12	0:0	4	>
water	29:14	0:0	4	0
stmts	30:8	30:36	3	
call	30:8	30:35	4	memcpy
arg	30:15	30:25	5	ctx->block
water	30:15	0:0	6	ctx
op	30:18	0:0	6	->
water	30:20	0:0	6	block
arg	30:27	30:30	5	src
water	30:27	0:0	6	src
arg	30:32	30:35	5	len
water	30:32	0:0	6	len
water	30:36	0:0	4	;

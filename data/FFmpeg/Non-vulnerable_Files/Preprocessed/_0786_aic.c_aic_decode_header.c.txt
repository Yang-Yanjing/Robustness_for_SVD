func	1:0	30:0	0	static int	aic_decode_header
params	1:28	0:0	1	
param	1:29	1:44	2	AICContext *	ctx
param	1:46	1:64	2	const uint8_t *	src
param	1:66	1:74	2	int	size
stmnts	0:0	29:12	1	
decl	3:4	3:23	2	uint32_t	frame_size
decl	4:4	4:21	2	int	width
water	4:13	0:0	2	,
decl	4:4	4:21	2	int	height
if	5:4	8:4	2	(src [ 0 ] != 1)
cond	5:8	5:18	3	src [ 0 ] != 1
water	5:8	0:0	4	src
op	5:11	0:0	4	[
water	5:12	0:0	4	0
op	5:13	0:0	4	]
op	5:15	0:0	4	!=
water	5:18	0:0	4	1
stmts	5:21	8:4	3	
water	5:21	0:0	4	{
call	6:8	6:71	4	av_log
arg	6:15	6:25	5	ctx->avctx
water	6:15	0:0	6	ctx
op	6:18	0:0	6	->
water	6:20	0:0	6	avctx
arg	6:27	6:39	5	AV_LOG_ERROR
water	6:27	0:0	6	AV_LOG_ERROR
arg	6:41	6:63	5	"Invalid version %d\n"
water	6:41	0:0	6	"Invalid version %d\n"
arg	6:65	6:71	5	src[0]
water	6:65	0:0	6	src
op	6:68	0:0	6	[
water	6:69	0:0	6	0
op	6:70	0:0	6	]
water	6:72	0:0	4	;
return	7:8	7:34	4	AVERROR_INVALIDDATA
water	7:15	0:0	5	AVERROR_INVALIDDATA
water	8:4	0:0	4	}
if	9:4	12:4	2	(src [ 1 ] != AIC_HDR_SIZE - 2)
cond	9:8	9:33	3	src [ 1 ] != AIC_HDR_SIZE - 2
water	9:8	0:0	4	src
op	9:11	0:0	4	[
water	9:12	0:0	4	1
op	9:13	0:0	4	]
op	9:15	0:0	4	!=
water	9:18	0:0	4	AIC_HDR_SIZE
op	9:31	0:0	4	-
water	9:33	0:0	4	2
stmts	9:36	12:4	3	
water	9:36	0:0	4	{
call	10:8	10:75	4	av_log
arg	10:15	10:25	5	ctx->avctx
water	10:15	0:0	6	ctx
op	10:18	0:0	6	->
water	10:20	0:0	6	avctx
arg	10:27	10:39	5	AV_LOG_ERROR
water	10:27	0:0	6	AV_LOG_ERROR
arg	10:41	10:67	5	"Invalid header size %d\n"
water	10:41	0:0	6	"Invalid header size %d\n"
arg	10:69	10:75	5	src[1]
water	10:69	0:0	6	src
op	10:72	0:0	6	[
water	10:73	0:0	6	1
op	10:74	0:0	6	]
water	10:76	0:0	4	;
return	11:8	11:34	4	AVERROR_INVALIDDATA
water	11:15	0:0	5	AVERROR_INVALIDDATA
water	12:4	0:0	4	}
water	13:4	0:0	2	frame_size
op	13:15	0:0	2	=
call	13:17	13:32	2	AV_RB32
arg	13:25	13:32	3	src+2
water	13:25	0:0	4	src
op	13:29	0:0	4	+
water	13:31	0:0	4	2
water	13:33	0:0	2	;
water	14:4	0:0	2	width
op	14:15	0:0	2	=
call	14:17	14:32	2	AV_RB16
arg	14:25	14:32	3	src+6
water	14:25	0:0	4	src
op	14:29	0:0	4	+
water	14:31	0:0	4	6
water	14:33	0:0	2	;
water	15:4	0:0	2	height
op	15:15	0:0	2	=
call	15:17	15:32	2	AV_RB16
arg	15:25	15:32	3	src+8
water	15:25	0:0	4	src
op	15:29	0:0	4	+
water	15:31	0:0	4	8
water	15:33	0:0	2	;
if	16:4	20:4	2	(frame_size > size)
cond	16:8	16:21	3	frame_size > size
water	16:8	0:0	4	frame_size
op	16:19	0:0	4	>
water	16:21	0:0	4	size
stmts	16:27	20:4	3	
water	16:27	0:0	4	{
call	17:8	18:31	4	av_log
arg	17:15	17:25	5	ctx->avctx
water	17:15	0:0	6	ctx
op	17:18	0:0	6	->
water	17:20	0:0	6	avctx
arg	17:27	17:39	5	AV_LOG_ERROR
water	17:27	0:0	6	AV_LOG_ERROR
arg	17:41	17:82	5	"Frame size should be %"PRIu32" got %d\n"
water	17:41	0:0	6	"Frame size should be %"
water	17:65	0:0	6	PRIu32
water	17:71	0:0	6	" got %d\n"
arg	18:15	18:25	5	frame_size
water	18:15	0:0	6	frame_size
arg	18:27	18:31	5	size
water	18:27	0:0	6	size
water	18:32	0:0	4	;
return	19:8	19:34	4	AVERROR_INVALIDDATA
water	19:15	0:0	5	AVERROR_INVALIDDATA
water	20:4	0:0	4	}
if	21:4	26:4	2	(width != ctx -> avctx -> width || height != ctx -> avctx -> height)
cond	21:8	21:60	3	width != ctx -> avctx -> width || height != ctx -> avctx -> height
water	21:8	0:0	4	width
op	21:14	0:0	4	!=
water	21:17	0:0	4	ctx
op	21:20	0:0	4	->
water	21:22	0:0	4	avctx
op	21:27	0:0	4	->
water	21:29	0:0	4	width
op	21:35	0:0	4	||
water	21:38	0:0	4	height
op	21:45	0:0	4	!=
water	21:48	0:0	4	ctx
op	21:51	0:0	4	->
water	21:53	0:0	4	avctx
op	21:58	0:0	4	->
water	21:60	0:0	4	height
stmts	21:68	26:4	3	
water	21:68	0:0	4	{
call	22:8	24:67	4	av_log
arg	22:15	22:25	5	ctx->avctx
water	22:15	0:0	6	ctx
op	22:18	0:0	6	->
water	22:20	0:0	6	avctx
arg	22:27	22:39	5	AV_LOG_ERROR
water	22:27	0:0	6	AV_LOG_ERROR
arg	23:15	23:72	5	"Picture dimension changed: old: %d x %d, new: %d x %d\n"
water	23:15	0:0	6	"Picture dimension changed: old: %d x %d, new: %d x %d\n"
arg	24:15	24:32	5	ctx->avctx->width
water	24:15	0:0	6	ctx
op	24:18	0:0	6	->
water	24:20	0:0	6	avctx
op	24:25	0:0	6	->
water	24:27	0:0	6	width
arg	24:34	24:52	5	ctx->avctx->height
water	24:34	0:0	6	ctx
op	24:37	0:0	6	->
water	24:39	0:0	6	avctx
op	24:44	0:0	6	->
water	24:46	0:0	6	height
arg	24:54	24:59	5	width
water	24:54	0:0	6	width
arg	24:61	24:67	5	height
water	24:61	0:0	6	height
water	24:68	0:0	4	;
return	25:8	25:34	4	AVERROR_INVALIDDATA
water	25:15	0:0	5	AVERROR_INVALIDDATA
water	26:4	0:0	4	}
water	27:4	0:0	2	ctx
op	27:7	0:0	2	->
water	27:9	0:0	2	quant
op	27:20	0:0	2	=
water	27:22	0:0	2	src
op	27:25	0:0	2	[
water	27:26	0:0	2	15
op	27:28	0:0	2	]
water	27:29	0:0	2	;
water	28:4	0:0	2	ctx
op	28:7	0:0	2	->
water	28:9	0:0	2	interlaced
op	28:20	0:0	2	=
water	28:22	0:0	2	(
water	28:23	0:0	2	(
water	28:24	0:0	2	src
op	28:27	0:0	2	[
water	28:28	0:0	2	16
op	28:30	0:0	2	]
op	28:32	0:0	2	>>
water	28:35	0:0	2	4
water	28:36	0:0	2	)
op	28:38	0:0	2	==
water	28:41	0:0	2	3
water	28:42	0:0	2	)
water	28:43	0:0	2	;
return	29:4	29:12	2	0
water	29:11	0:0	3	0

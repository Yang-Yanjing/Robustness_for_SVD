func	1:0	20:0	0	static int	frame_queue_init
params	1:27	0:0	1	
param	1:28	1:41	2	FrameQueue *	f
param	1:43	1:60	2	PacketQueue *	pktq
param	1:62	1:74	2	int	max_size
param	1:76	1:89	2	int	keep_last
stmnts	0:0	19:12	1	
decl	3:4	3:9	2	int	i
call	4:4	4:35	2	memset
arg	4:11	4:12	3	f
water	4:11	0:0	4	f
arg	4:14	4:15	3	0
water	4:14	0:0	4	0
arg	4:17	4:35	3	sizeof(FrameQueue)
op	4:17	0:0	4	sizeof
water	4:23	0:0	4	(
water	4:24	0:0	4	FrameQueue
water	4:34	0:0	4	)
water	4:36	0:0	2	;
if	5:4	8:4	2	(! ( f -> mutex =SDL_CreateMutex ( ) ))
cond	5:8	5:38	3	! ( f -> mutex =SDL_CreateMutex ( ) )
op	5:8	0:0	4	!
water	5:9	0:0	4	(
water	5:10	0:0	4	f
op	5:11	0:0	4	->
water	5:13	0:0	4	mutex
op	5:19	0:0	4	=
call	5:21	5:37	4	SDL_CreateMutex
water	5:38	0:0	4	)
stmts	5:41	8:4	3	
water	5:41	0:0	4	{
call	6:8	6:76	4	av_log
arg	6:15	6:19	5	NULL
water	6:15	0:0	6	NULL
arg	6:21	6:33	5	AV_LOG_FATAL
water	6:21	0:0	6	AV_LOG_FATAL
arg	6:35	6:60	5	"SDL_CreateMutex(): %s\n"
water	6:35	0:0	6	"SDL_CreateMutex(): %s\n"
arg	6:62	6:76	5	SDL_GetError()
call	6:62	6:75	6	SDL_GetError
water	6:77	0:0	4	;
return	7:8	7:30	4	AVERROR(ENOMEM)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	ENOMEM
water	7:23	0:0	7	ENOMEM
water	8:4	0:0	4	}
if	9:4	12:4	2	(! ( f -> cond =SDL_CreateCond ( ) ))
cond	9:8	9:36	3	! ( f -> cond =SDL_CreateCond ( ) )
op	9:8	0:0	4	!
water	9:9	0:0	4	(
water	9:10	0:0	4	f
op	9:11	0:0	4	->
water	9:13	0:0	4	cond
op	9:18	0:0	4	=
call	9:20	9:35	4	SDL_CreateCond
water	9:36	0:0	4	)
stmts	9:39	12:4	3	
water	9:39	0:0	4	{
call	10:8	10:75	4	av_log
arg	10:15	10:19	5	NULL
water	10:15	0:0	6	NULL
arg	10:21	10:33	5	AV_LOG_FATAL
water	10:21	0:0	6	AV_LOG_FATAL
arg	10:35	10:59	5	"SDL_CreateCond(): %s\n"
water	10:35	0:0	6	"SDL_CreateCond(): %s\n"
arg	10:61	10:75	5	SDL_GetError()
call	10:61	10:74	6	SDL_GetError
water	10:76	0:0	4	;
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
water	12:4	0:0	4	}
water	13:4	0:0	2	f
op	13:5	0:0	2	->
water	13:7	0:0	2	pktq
op	13:12	0:0	2	=
water	13:14	0:0	2	pktq
water	13:18	0:0	2	;
water	14:4	0:0	2	f
op	14:5	0:0	2	->
water	14:7	0:0	2	max_size
op	14:16	0:0	2	=
call	14:18	14:50	2	FFMIN
arg	14:24	14:32	3	max_size
water	14:24	0:0	4	max_size
arg	14:34	14:50	3	FRAME_QUEUE_SIZE
water	14:34	0:0	4	FRAME_QUEUE_SIZE
water	14:51	0:0	2	;
water	15:4	0:0	2	f
op	15:5	0:0	2	->
water	15:7	0:0	2	keep_last
op	15:17	0:0	2	=
op	15:19	0:0	2	!
op	15:20	0:0	2	!
water	15:21	0:0	2	keep_last
water	15:30	0:0	2	;
for	16:4	18:34	2	(i = 0 ;i < f -> max_size;i ++)
forinit	16:9	16:14	3	i = 0 ;
water	16:9	0:0	4	i
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:23	3	i < f -> max_size
water	16:16	0:0	4	i
op	16:18	0:0	4	<
water	16:20	0:0	4	f
op	16:21	0:0	4	->
water	16:23	0:0	4	max_size
forexpr	16:33	16:34	3	i ++
water	16:33	0:0	4	i
op	16:34	0:0	4	++
stmts	17:8	18:34	3	
if	17:8	18:34	4	(! ( f -> queue [ i ] . frame =av_frame_alloc ( ) ))
cond	17:12	17:50	5	! ( f -> queue [ i ] . frame =av_frame_alloc ( ) )
op	17:12	0:0	6	!
water	17:13	0:0	6	(
water	17:14	0:0	6	f
op	17:15	0:0	6	->
water	17:17	0:0	6	queue
op	17:22	0:0	6	[
water	17:23	0:0	6	i
op	17:24	0:0	6	]
op	17:25	0:0	6	.
water	17:26	0:0	6	frame
op	17:32	0:0	6	=
call	17:34	17:49	6	av_frame_alloc
water	17:50	0:0	6	)
stmts	18:12	18:34	5	
return	18:12	18:34	6	AVERROR(ENOMEM)
call	18:19	18:33	7	AVERROR
arg	18:27	18:33	8	ENOMEM
water	18:27	0:0	9	ENOMEM
return	19:4	19:12	2	0
water	19:11	0:0	3	0

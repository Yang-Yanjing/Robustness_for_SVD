func	1:0	59:0	0	void	ff_ac3_compute_coupling_strategy
params	1:37	0:0	1	
param	1:38	1:57	2	AC3EncodeContext *	s
stmnts	0:0	58:4	1	
decl	3:4	3:15	2	int	blk
water	3:11	0:0	2	,
decl	3:4	3:15	2	int	ch
decl	4:4	4:19	2	int	got_cpl_snr
decl	5:4	5:22	2	int	num_cpl_blocks
for	8:4	12:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	8:9	8:16	3	blk = 0 ;
water	8:9	0:0	4	blk
op	8:13	0:0	4	=
water	8:15	0:0	4	0
water	8:16	0:0	4	;
cond	8:18	8:27	3	blk < s -> num_blocks
water	8:18	0:0	4	blk
op	8:22	0:0	4	<
water	8:24	0:0	4	s
op	8:25	0:0	4	->
water	8:27	0:0	4	num_blocks
forexpr	8:39	8:42	3	blk ++
water	8:39	0:0	4	blk
op	8:42	0:0	4	++
stmts	8:46	12:4	3	
water	8:46	0:0	4	{
decl	9:8	9:41	4	AC3Block	*block
op	9:24	0:0	4	=
op	9:26	0:0	4	&
water	9:27	0:0	4	s
op	9:28	0:0	4	->
water	9:30	0:0	4	blocks
op	9:36	0:0	4	[
water	9:37	0:0	4	blk
op	9:40	0:0	4	]
for	10:8	11:49	4	(ch = 1 ;ch <= s -> fbw_channels;ch ++)
forinit	10:13	10:19	5	ch = 1 ;
water	10:13	0:0	6	ch
op	10:16	0:0	6	=
water	10:18	0:0	6	1
water	10:19	0:0	6	;
cond	10:21	10:30	5	ch <= s -> fbw_channels
water	10:21	0:0	6	ch
op	10:24	0:0	6	<=
water	10:27	0:0	6	s
op	10:28	0:0	6	->
water	10:30	0:0	6	fbw_channels
forexpr	10:44	10:46	5	ch ++
water	10:44	0:0	6	ch
op	10:46	0:0	6	++
stmts	11:12	11:49	5	
water	11:12	0:0	6	block
op	11:17	0:0	6	->
water	11:19	0:0	6	channel_in_cpl
op	11:33	0:0	6	[
water	11:34	0:0	6	ch
op	11:36	0:0	6	]
op	11:38	0:0	6	=
water	11:40	0:0	6	s
op	11:41	0:0	6	->
water	11:43	0:0	6	cpl_on
water	11:49	0:0	6	;
water	12:4	0:0	4	}
water	15:4	0:0	2	got_cpl_snr
op	15:16	0:0	2	=
water	15:18	0:0	2	0
water	15:19	0:0	2	;
water	16:4	0:0	2	num_cpl_blocks
op	16:19	0:0	2	=
water	16:21	0:0	2	0
water	16:22	0:0	2	;
for	17:4	46:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	17:9	17:16	3	blk = 0 ;
water	17:9	0:0	4	blk
op	17:13	0:0	4	=
water	17:15	0:0	4	0
water	17:16	0:0	4	;
cond	17:18	17:27	3	blk < s -> num_blocks
water	17:18	0:0	4	blk
op	17:22	0:0	4	<
water	17:24	0:0	4	s
op	17:25	0:0	4	->
water	17:27	0:0	4	num_blocks
forexpr	17:39	17:42	3	blk ++
water	17:39	0:0	4	blk
op	17:42	0:0	4	++
stmts	17:46	46:4	3	
water	17:46	0:0	4	{
decl	18:8	18:41	4	AC3Block	*block
op	18:24	0:0	4	=
op	18:26	0:0	4	&
water	18:27	0:0	4	s
op	18:28	0:0	4	->
water	18:30	0:0	4	blocks
op	18:36	0:0	4	[
water	18:37	0:0	4	blk
op	18:40	0:0	4	]
water	19:8	0:0	4	block
op	19:13	0:0	4	->
water	19:15	0:0	4	num_cpl_channels
op	19:32	0:0	4	=
water	19:34	0:0	4	0
water	19:35	0:0	4	;
for	20:8	21:64	4	(ch = 1 ;ch <= s -> fbw_channels;ch ++)
forinit	20:13	20:19	5	ch = 1 ;
water	20:13	0:0	6	ch
op	20:16	0:0	6	=
water	20:18	0:0	6	1
water	20:19	0:0	6	;
cond	20:21	20:30	5	ch <= s -> fbw_channels
water	20:21	0:0	6	ch
op	20:24	0:0	6	<=
water	20:27	0:0	6	s
op	20:28	0:0	6	->
water	20:30	0:0	6	fbw_channels
forexpr	20:44	20:46	5	ch ++
water	20:44	0:0	6	ch
op	20:46	0:0	6	++
stmts	21:12	21:64	5	
water	21:12	0:0	6	block
op	21:17	0:0	6	->
water	21:19	0:0	6	num_cpl_channels
op	21:36	0:0	6	+=
water	21:39	0:0	6	block
op	21:44	0:0	6	->
water	21:46	0:0	6	channel_in_cpl
op	21:60	0:0	6	[
water	21:61	0:0	6	ch
op	21:63	0:0	6	]
water	21:64	0:0	6	;
water	22:8	0:0	4	block
op	22:13	0:0	4	->
water	22:15	0:0	4	cpl_in_use
op	22:26	0:0	4	=
water	22:28	0:0	4	block
op	22:33	0:0	4	->
water	22:35	0:0	4	num_cpl_channels
op	22:52	0:0	4	>
water	22:54	0:0	4	1
water	22:55	0:0	4	;
water	23:8	0:0	4	num_cpl_blocks
op	23:23	0:0	4	+=
water	23:26	0:0	4	block
op	23:31	0:0	4	->
water	23:33	0:0	4	cpl_in_use
water	23:43	0:0	4	;
if	24:8	28:8	4	(! block -> cpl_in_use)
cond	24:12	24:20	5	! block -> cpl_in_use
op	24:12	0:0	6	!
water	24:13	0:0	6	block
op	24:18	0:0	6	->
water	24:20	0:0	6	cpl_in_use
stmts	24:32	28:8	5	
water	24:32	0:0	6	{
water	25:12	0:0	6	block
op	25:17	0:0	6	->
water	25:19	0:0	6	num_cpl_channels
op	25:36	0:0	6	=
water	25:38	0:0	6	0
water	25:39	0:0	6	;
for	26:12	27:45	6	(ch = 1 ;ch <= s -> fbw_channels;ch ++)
forinit	26:17	26:23	7	ch = 1 ;
water	26:17	0:0	8	ch
op	26:20	0:0	8	=
water	26:22	0:0	8	1
water	26:23	0:0	8	;
cond	26:25	26:34	7	ch <= s -> fbw_channels
water	26:25	0:0	8	ch
op	26:28	0:0	8	<=
water	26:31	0:0	8	s
op	26:32	0:0	8	->
water	26:34	0:0	8	fbw_channels
forexpr	26:48	26:50	7	ch ++
water	26:48	0:0	8	ch
op	26:50	0:0	8	++
stmts	27:16	27:45	7	
water	27:16	0:0	8	block
op	27:21	0:0	8	->
water	27:23	0:0	8	channel_in_cpl
op	27:37	0:0	8	[
water	27:38	0:0	8	ch
op	27:40	0:0	8	]
op	27:42	0:0	8	=
water	27:44	0:0	8	0
water	27:45	0:0	8	;
water	28:8	0:0	6	}
water	29:8	0:0	4	block
op	29:13	0:0	4	->
water	29:15	0:0	4	new_cpl_strategy
op	29:32	0:0	4	=
op	29:34	0:0	4	!
water	29:35	0:0	4	blk
water	29:38	0:0	4	;
if	30:8	37:8	4	(blk)
cond	30:12	30:12	5	blk
water	30:12	0:0	6	blk
stmts	30:17	37:8	5	
water	30:17	0:0	6	{
for	31:12	36:12	6	(ch = 1 ;ch <= s -> fbw_channels;ch ++)
forinit	31:17	31:23	7	ch = 1 ;
water	31:17	0:0	8	ch
op	31:20	0:0	8	=
water	31:22	0:0	8	1
water	31:23	0:0	8	;
cond	31:25	31:34	7	ch <= s -> fbw_channels
water	31:25	0:0	8	ch
op	31:28	0:0	8	<=
water	31:31	0:0	8	s
op	31:32	0:0	8	->
water	31:34	0:0	8	fbw_channels
forexpr	31:48	31:50	7	ch ++
water	31:48	0:0	8	ch
op	31:50	0:0	8	++
stmts	31:54	36:12	7	
water	31:54	0:0	8	{
if	32:16	35:16	8	(block -> channel_in_cpl [ ch ] != s -> blocks [ blk - 1 ] . channel_in_cpl [ ch ])
cond	32:20	32:83	9	block -> channel_in_cpl [ ch ] != s -> blocks [ blk - 1 ] . channel_in_cpl [ ch ]
water	32:20	0:0	10	block
op	32:25	0:0	10	->
water	32:27	0:0	10	channel_in_cpl
op	32:41	0:0	10	[
water	32:42	0:0	10	ch
op	32:44	0:0	10	]
op	32:46	0:0	10	!=
water	32:49	0:0	10	s
op	32:50	0:0	10	->
water	32:52	0:0	10	blocks
op	32:58	0:0	10	[
water	32:59	0:0	10	blk
op	32:62	0:0	10	-
water	32:63	0:0	10	1
op	32:64	0:0	10	]
op	32:65	0:0	10	.
water	32:66	0:0	10	channel_in_cpl
op	32:80	0:0	10	[
water	32:81	0:0	10	ch
op	32:83	0:0	10	]
stmts	32:86	35:16	9	
water	32:86	0:0	10	{
water	33:20	0:0	10	block
op	33:25	0:0	10	->
water	33:27	0:0	10	new_cpl_strategy
op	33:44	0:0	10	=
water	33:46	0:0	10	1
water	33:47	0:0	10	;
break	34:20	34:25	10	
water	35:16	0:0	10	}
water	36:12	0:0	8	}
water	37:8	0:0	6	}
water	38:8	0:0	4	block
op	38:13	0:0	4	->
water	38:15	0:0	4	new_cpl_leak
op	38:28	0:0	4	=
water	38:30	0:0	4	block
op	38:35	0:0	4	->
water	38:37	0:0	4	new_cpl_strategy
water	38:53	0:0	4	;
if	39:8	43:8	4	(! blk || ( block -> cpl_in_use && ! got_cpl_snr ))
cond	39:12	39:54	5	! blk || ( block -> cpl_in_use && ! got_cpl_snr )
op	39:12	0:0	6	!
water	39:13	0:0	6	blk
op	39:17	0:0	6	||
water	39:20	0:0	6	(
water	39:21	0:0	6	block
op	39:26	0:0	6	->
water	39:28	0:0	6	cpl_in_use
op	39:39	0:0	6	&&
op	39:42	0:0	6	!
water	39:43	0:0	6	got_cpl_snr
water	39:54	0:0	6	)
stmts	39:57	43:8	5	
water	39:57	0:0	6	{
water	40:12	0:0	6	block
op	40:17	0:0	6	->
water	40:19	0:0	6	new_snr_offsets
op	40:35	0:0	6	=
water	40:37	0:0	6	1
water	40:38	0:0	6	;
if	41:12	42:31	6	(block -> cpl_in_use)
cond	41:16	41:23	7	block -> cpl_in_use
water	41:16	0:0	8	block
op	41:21	0:0	8	->
water	41:23	0:0	8	cpl_in_use
stmts	42:16	42:31	7	
water	42:16	0:0	8	got_cpl_snr
op	42:28	0:0	8	=
water	42:30	0:0	8	1
water	42:31	0:0	8	;
water	43:8	0:0	6	}
else	43:10	45:8	4
stmts	43:15	45:8	5	
water	43:15	0:0	6	{
water	44:12	0:0	6	block
op	44:17	0:0	6	->
water	44:19	0:0	6	new_snr_offsets
op	44:35	0:0	6	=
water	44:37	0:0	6	0
water	44:38	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}
if	47:4	48:21	2	(! num_cpl_blocks)
cond	47:8	47:9	3	! num_cpl_blocks
op	47:8	0:0	4	!
water	47:9	0:0	4	num_cpl_blocks
stmts	48:8	48:21	3	
water	48:8	0:0	4	s
op	48:9	0:0	4	->
water	48:11	0:0	4	cpl_on
op	48:18	0:0	4	=
water	48:20	0:0	4	0
water	48:21	0:0	4	;
for	50:4	58:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	50:9	50:16	3	blk = 0 ;
water	50:9	0:0	4	blk
op	50:13	0:0	4	=
water	50:15	0:0	4	0
water	50:16	0:0	4	;
cond	50:18	50:27	3	blk < s -> num_blocks
water	50:18	0:0	4	blk
op	50:22	0:0	4	<
water	50:24	0:0	4	s
op	50:25	0:0	4	->
water	50:27	0:0	4	num_blocks
forexpr	50:39	50:42	3	blk ++
water	50:39	0:0	4	blk
op	50:42	0:0	4	++
stmts	50:46	58:4	3	
water	50:46	0:0	4	{
decl	51:8	51:41	4	AC3Block	*block
op	51:24	0:0	4	=
op	51:26	0:0	4	&
water	51:27	0:0	4	s
op	51:28	0:0	4	->
water	51:30	0:0	4	blocks
op	51:36	0:0	4	[
water	51:37	0:0	4	blk
op	51:40	0:0	4	]
for	52:8	57:8	4	(ch = 1 ;ch <= s -> fbw_channels;ch ++)
forinit	52:13	52:19	5	ch = 1 ;
water	52:13	0:0	6	ch
op	52:16	0:0	6	=
water	52:18	0:0	6	1
water	52:19	0:0	6	;
cond	52:21	52:30	5	ch <= s -> fbw_channels
water	52:21	0:0	6	ch
op	52:24	0:0	6	<=
water	52:27	0:0	6	s
op	52:28	0:0	6	->
water	52:30	0:0	6	fbw_channels
forexpr	52:44	52:46	5	ch ++
water	52:44	0:0	6	ch
op	52:46	0:0	6	++
stmts	52:50	57:8	5	
water	52:50	0:0	6	{
if	53:12	54:59	6	(block -> channel_in_cpl [ ch ])
cond	53:16	53:40	7	block -> channel_in_cpl [ ch ]
water	53:16	0:0	8	block
op	53:21	0:0	8	->
water	53:23	0:0	8	channel_in_cpl
op	53:37	0:0	8	[
water	53:38	0:0	8	ch
op	53:40	0:0	8	]
stmts	54:16	54:59	7	
water	54:16	0:0	8	block
op	54:21	0:0	8	->
water	54:23	0:0	8	end_freq
op	54:31	0:0	8	[
water	54:32	0:0	8	ch
op	54:34	0:0	8	]
op	54:36	0:0	8	=
water	54:38	0:0	8	s
op	54:39	0:0	8	->
water	54:41	0:0	8	start_freq
op	54:51	0:0	8	[
water	54:52	0:0	8	CPL_CH
op	54:58	0:0	8	]
water	54:59	0:0	8	;
else	55:12	56:64	6
stmts	56:16	56:64	7	
water	56:16	0:0	8	block
op	56:21	0:0	8	->
water	56:23	0:0	8	end_freq
op	56:31	0:0	8	[
water	56:32	0:0	8	ch
op	56:34	0:0	8	]
op	56:36	0:0	8	=
water	56:38	0:0	8	s
op	56:39	0:0	8	->
water	56:41	0:0	8	bandwidth_code
op	56:56	0:0	8	*
water	56:58	0:0	8	3
op	56:60	0:0	8	+
water	56:62	0:0	8	73
water	56:64	0:0	8	;
water	57:8	0:0	6	}
water	58:4	0:0	4	}

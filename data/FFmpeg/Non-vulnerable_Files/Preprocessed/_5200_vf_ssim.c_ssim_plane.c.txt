func	1:0	22:0	0	static float	ssim_plane
params	1:23	0:0	1	
param	1:24	1:43	2	SSIMDSPContext *	dsp
param	2:24	2:37	2	uint8_t *	main
param	2:39	2:54	2	int	main_stride
param	3:24	3:36	2	uint8_t *	ref
param	3:38	3:52	2	int	ref_stride
param	4:24	4:33	2	int	width
param	4:35	4:45	2	int	height
param	4:47	4:57	2	void *	temp
stmnts	0:0	21:46	1	
decl	6:4	6:16	2	int	z
op	6:10	0:0	2	=
water	6:12	0:0	2	0
water	6:13	0:0	2	,
decl	6:4	6:16	2	int	y
decl	7:4	7:20	2	float	ssim
op	7:15	0:0	2	=
water	7:17	0:0	2	0
op	7:18	0:0	2	.
water	7:19	0:0	2	0
call	8:4	8:14	2	int
arg	8:9	8:14	3	*sum0
op	8:9	0:0	4	*
water	8:10	0:0	4	sum0
op	8:15	0:0	2	[
water	8:16	0:0	2	4
op	8:17	0:0	2	]
op	8:19	0:0	2	=
water	8:21	0:0	2	temp
water	8:25	0:0	2	;
call	9:4	9:14	2	int
arg	9:9	9:14	3	*sum1
op	9:9	0:0	4	*
water	9:10	0:0	4	sum1
op	9:15	0:0	2	[
water	9:16	0:0	2	4
op	9:17	0:0	2	]
op	9:19	0:0	2	=
water	9:21	0:0	2	sum0
op	9:26	0:0	2	+
water	9:28	0:0	2	(
water	9:29	0:0	2	width
op	9:35	0:0	2	>>
water	9:38	0:0	2	2
water	9:39	0:0	2	)
op	9:41	0:0	2	+
water	9:43	0:0	2	3
water	9:44	0:0	2	;
water	10:4	0:0	2	width
op	10:10	0:0	2	>>=
water	10:14	0:0	2	2
water	10:15	0:0	2	;
water	11:4	0:0	2	height
op	11:11	0:0	2	>>=
water	11:15	0:0	2	2
water	11:16	0:0	2	;
for	12:4	20:4	2	(y = 1 ;y < height;y ++)
forinit	12:9	12:14	3	y = 1 ;
water	12:9	0:0	4	y
op	12:11	0:0	4	=
water	12:13	0:0	4	1
water	12:14	0:0	4	;
cond	12:16	12:20	3	y < height
water	12:16	0:0	4	y
op	12:18	0:0	4	<
water	12:20	0:0	4	height
forexpr	12:28	12:29	3	y ++
water	12:28	0:0	4	y
op	12:29	0:0	4	++
stmts	12:33	20:4	3	
water	12:33	0:0	4	{
for	13:8	18:8	4	(;z <= y;z ++)
forinit	13:13	13:13	5	;
water	13:13	0:0	6	;
cond	13:15	13:20	5	z <= y
water	13:15	0:0	6	z
op	13:17	0:0	6	<=
water	13:20	0:0	6	y
forexpr	13:23	13:24	5	z ++
water	13:23	0:0	6	z
op	13:24	0:0	6	++
stmts	13:28	18:8	5	
water	13:28	0:0	6	{
call	14:12	14:36	6	FFSWAP
arg	14:19	14:24	7	void*
water	14:19	0:0	8	void
op	14:23	0:0	8	*
arg	14:26	14:30	7	sum0
water	14:26	0:0	8	sum0
arg	14:32	14:36	7	sum1
water	14:32	0:0	8	sum1
water	14:37	0:0	6	;
call	15:12	17:42	6	dsp->ssim_4x4_line
arg	15:31	15:57	7	&main[4*z*main_stride]
op	15:31	0:0	8	&
water	15:32	0:0	8	main
op	15:36	0:0	8	[
water	15:37	0:0	8	4
op	15:39	0:0	8	*
water	15:41	0:0	8	z
op	15:43	0:0	8	*
water	15:45	0:0	8	main_stride
op	15:56	0:0	8	]
arg	15:59	15:70	7	main_stride
water	15:59	0:0	8	main_stride
arg	16:31	16:55	7	&ref[4*z*ref_stride]
op	16:31	0:0	8	&
water	16:32	0:0	8	ref
op	16:35	0:0	8	[
water	16:36	0:0	8	4
op	16:38	0:0	8	*
water	16:40	0:0	8	z
op	16:42	0:0	8	*
water	16:44	0:0	8	ref_stride
op	16:54	0:0	8	]
arg	16:57	16:67	7	ref_stride
water	16:57	0:0	8	ref_stride
arg	17:31	17:35	7	sum0
water	17:31	0:0	8	sum0
arg	17:37	17:42	7	width
water	17:37	0:0	8	width
water	17:43	0:0	6	;
water	18:8	0:0	6	}
water	19:8	0:0	4	ssim
op	19:13	0:0	4	+=
call	19:16	19:92	4	dsp->ssim_end_line
arg	19:35	19:57	5	(constint(*)[4])sum0
water	19:35	0:0	6	(
water	19:36	0:0	6	const
call	19:42	19:48	6	int
arg	19:47	19:48	7	*
op	19:47	0:0	8	*
op	19:49	0:0	6	[
water	19:50	0:0	6	4
op	19:51	0:0	6	]
water	19:52	0:0	6	)
water	19:53	0:0	6	sum0
arg	19:59	19:81	5	(constint(*)[4])sum1
water	19:59	0:0	6	(
water	19:60	0:0	6	const
call	19:66	19:72	6	int
arg	19:71	19:72	7	*
op	19:71	0:0	8	*
op	19:73	0:0	6	[
water	19:74	0:0	6	4
op	19:75	0:0	6	]
water	19:76	0:0	6	)
water	19:77	0:0	6	sum1
arg	19:83	19:92	5	width-1
water	19:83	0:0	6	width
op	19:89	0:0	6	-
water	19:91	0:0	6	1
water	19:93	0:0	4	;
water	20:4	0:0	4	}
return	21:4	21:46	2	ssim/((height-1)*(width-1))
water	21:11	0:0	3	ssim
op	21:16	0:0	3	/
water	21:18	0:0	3	(
water	21:19	0:0	3	(
water	21:20	0:0	3	height
op	21:27	0:0	3	-
water	21:29	0:0	3	1
water	21:30	0:0	3	)
op	21:32	0:0	3	*
water	21:34	0:0	3	(
water	21:35	0:0	3	width
op	21:41	0:0	3	-
water	21:43	0:0	3	1
water	21:44	0:0	3	)
water	21:45	0:0	3	)

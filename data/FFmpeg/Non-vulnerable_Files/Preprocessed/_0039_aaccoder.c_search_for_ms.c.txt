func	1:0	61:0	0	static void	search_for_ms
params	1:25	0:0	1	
param	1:26	1:42	2	AACEncContext *	s
param	1:44	1:63	2	ChannelElement *	cpe
stmnts	0:0	60:4	1	
decl	3:4	3:30	2	int	start
op	3:14	0:0	2	=
water	3:16	0:0	2	0
water	3:17	0:0	2	,
decl	3:4	3:30	2	int	i
water	3:20	0:0	2	,
decl	3:4	3:30	2	int	w
water	3:23	0:0	2	,
decl	3:4	3:30	2	int	w2
water	3:27	0:0	2	,
decl	3:4	3:30	2	int	g
decl	4:4	4:24	2	float	M[128]
water	4:16	0:0	2	,
decl	4:4	4:24	2	float	S[128]
decl	5:4	5:102	2	float	*L34
op	5:15	0:0	2	=
water	5:17	0:0	2	s
op	5:18	0:0	2	->
water	5:20	0:0	2	scoefs
water	5:26	0:0	2	,
decl	5:4	5:102	2	float	*R34
op	5:33	0:0	2	=
water	5:35	0:0	2	s
op	5:36	0:0	2	->
water	5:38	0:0	2	scoefs
op	5:45	0:0	2	+
water	5:47	0:0	2	128
water	5:50	0:0	2	,
decl	5:4	5:102	2	float	*M34
op	5:57	0:0	2	=
water	5:59	0:0	2	s
op	5:60	0:0	2	->
water	5:62	0:0	2	scoefs
op	5:69	0:0	2	+
water	5:71	0:0	2	128
op	5:74	0:0	2	*
water	5:75	0:0	2	2
water	5:76	0:0	2	,
decl	5:4	5:102	2	float	*S34
op	5:83	0:0	2	=
water	5:85	0:0	2	s
op	5:86	0:0	2	->
water	5:88	0:0	2	scoefs
op	5:95	0:0	2	+
water	5:97	0:0	2	128
op	5:100	0:0	2	*
water	5:101	0:0	2	3
decl	6:4	6:34	2	const float	lambda
op	6:23	0:0	2	=
water	6:25	0:0	2	s
op	6:26	0:0	2	->
water	6:28	0:0	2	lambda
decl	7:4	7:44	2	SingleChannelElement	*sce0
op	7:31	0:0	2	=
op	7:33	0:0	2	&
water	7:34	0:0	2	cpe
op	7:37	0:0	2	->
water	7:39	0:0	2	ch
op	7:41	0:0	2	[
water	7:42	0:0	2	0
op	7:43	0:0	2	]
decl	8:4	8:44	2	SingleChannelElement	*sce1
op	8:31	0:0	2	=
op	8:33	0:0	2	&
water	8:34	0:0	2	cpe
op	8:37	0:0	2	->
water	8:39	0:0	2	ch
op	8:41	0:0	2	[
water	8:42	0:0	2	1
op	8:43	0:0	2	]
if	9:4	10:14	2	(! cpe -> common_window)
cond	9:8	9:14	3	! cpe -> common_window
op	9:8	0:0	4	!
water	9:9	0:0	4	cpe
op	9:12	0:0	4	->
water	9:14	0:0	4	common_window
stmts	10:8	10:14	3	
return	10:8	10:14	4	
for	11:4	60:4	2	(w = 0 ;w < sce0 -> ics . num_windows;w += sce0 -> ics . group_len [ w ])
forinit	11:9	11:14	3	w = 0 ;
water	11:9	0:0	4	w
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:30	3	w < sce0 -> ics . num_windows
water	11:16	0:0	4	w
op	11:18	0:0	4	<
water	11:20	0:0	4	sce0
op	11:24	0:0	4	->
water	11:26	0:0	4	ics
op	11:29	0:0	4	.
water	11:30	0:0	4	num_windows
forexpr	11:43	11:69	3	w += sce0 -> ics . group_len [ w ]
water	11:43	0:0	4	w
op	11:45	0:0	4	+=
water	11:48	0:0	4	sce0
op	11:52	0:0	4	->
water	11:54	0:0	4	ics
op	11:57	0:0	4	.
water	11:58	0:0	4	group_len
op	11:67	0:0	4	[
water	11:68	0:0	4	w
op	11:69	0:0	4	]
stmts	11:72	60:4	3	
water	11:72	0:0	4	{
water	12:8	0:0	4	start
op	12:14	0:0	4	=
water	12:16	0:0	4	0
water	12:17	0:0	4	;
for	13:8	59:8	4	(g = 0 ;g < sce0 -> ics . num_swb;g ++)
forinit	13:13	13:18	5	g = 0 ;
water	13:13	0:0	6	g
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:21	13:35	5	g < sce0 -> ics . num_swb
water	13:21	0:0	6	g
op	13:23	0:0	6	<
water	13:25	0:0	6	sce0
op	13:29	0:0	6	->
water	13:31	0:0	6	ics
op	13:34	0:0	6	.
water	13:35	0:0	6	num_swb
forexpr	13:44	13:45	5	g ++
water	13:44	0:0	6	g
op	13:45	0:0	6	++
stmts	13:49	59:8	5	
water	13:49	0:0	6	{
if	14:12	57:12	6	(! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ] && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ])
cond	14:16	14:71	7	! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ] && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ]
op	14:16	0:0	8	!
water	14:17	0:0	8	cpe
op	14:20	0:0	8	->
water	14:22	0:0	8	ch
op	14:24	0:0	8	[
water	14:25	0:0	8	0
op	14:26	0:0	8	]
op	14:27	0:0	8	.
water	14:28	0:0	8	zeroes
op	14:34	0:0	8	[
water	14:35	0:0	8	w
op	14:36	0:0	8	*
water	14:37	0:0	8	16
op	14:39	0:0	8	+
water	14:40	0:0	8	g
op	14:41	0:0	8	]
op	14:43	0:0	8	&&
op	14:46	0:0	8	!
water	14:47	0:0	8	cpe
op	14:50	0:0	8	->
water	14:52	0:0	8	ch
op	14:54	0:0	8	[
water	14:55	0:0	8	1
op	14:56	0:0	8	]
op	14:57	0:0	8	.
water	14:58	0:0	8	zeroes
op	14:64	0:0	8	[
water	14:65	0:0	8	w
op	14:66	0:0	8	*
water	14:67	0:0	8	16
op	14:69	0:0	8	+
water	14:70	0:0	8	g
op	14:71	0:0	8	]
stmts	14:74	57:12	7	
water	14:74	0:0	8	{
decl	15:16	15:48	8	float	dist1
op	15:28	0:0	8	=
water	15:30	0:0	8	0
op	15:31	0:0	8	.
water	15:32	0:0	8	0
water	15:33	0:0	8	f
water	15:34	0:0	8	,
decl	15:16	15:48	8	float	dist2
op	15:42	0:0	8	=
water	15:44	0:0	8	0
op	15:45	0:0	8	.
water	15:46	0:0	8	0
water	15:47	0:0	8	f
for	16:16	55:16	8	(w2 = 0 ;w2 < sce0 -> ics . group_len [ w ];w2 ++)
forinit	16:21	16:27	9	w2 = 0 ;
water	16:21	0:0	10	w2
op	16:24	0:0	10	=
water	16:26	0:0	10	0
water	16:27	0:0	10	;
cond	16:29	16:55	9	w2 < sce0 -> ics . group_len [ w ]
water	16:29	0:0	10	w2
op	16:32	0:0	10	<
water	16:34	0:0	10	sce0
op	16:38	0:0	10	->
water	16:40	0:0	10	ics
op	16:43	0:0	10	.
water	16:44	0:0	10	group_len
op	16:53	0:0	10	[
water	16:54	0:0	10	w
op	16:55	0:0	10	]
forexpr	16:58	16:60	9	w2 ++
water	16:58	0:0	10	w2
op	16:60	0:0	10	++
stmts	16:64	55:16	9	
water	16:64	0:0	10	{
decl	17:20	17:90	10	FFPsyBand	*band0
op	17:37	0:0	10	=
op	17:39	0:0	10	&
water	17:40	0:0	10	s
op	17:41	0:0	10	->
water	17:43	0:0	10	psy
op	17:46	0:0	10	.
water	17:47	0:0	10	ch
op	17:49	0:0	10	[
water	17:50	0:0	10	s
op	17:51	0:0	10	->
water	17:53	0:0	10	cur_channel
op	17:64	0:0	10	+
water	17:65	0:0	10	0
op	17:66	0:0	10	]
op	17:67	0:0	10	.
water	17:68	0:0	10	psy_bands
op	17:77	0:0	10	[
water	17:78	0:0	10	(
water	17:79	0:0	10	w
op	17:80	0:0	10	+
water	17:81	0:0	10	w2
water	17:83	0:0	10	)
op	17:84	0:0	10	*
water	17:85	0:0	10	16
op	17:87	0:0	10	+
water	17:88	0:0	10	g
op	17:89	0:0	10	]
decl	18:20	18:90	10	FFPsyBand	*band1
op	18:37	0:0	10	=
op	18:39	0:0	10	&
water	18:40	0:0	10	s
op	18:41	0:0	10	->
water	18:43	0:0	10	psy
op	18:46	0:0	10	.
water	18:47	0:0	10	ch
op	18:49	0:0	10	[
water	18:50	0:0	10	s
op	18:51	0:0	10	->
water	18:53	0:0	10	cur_channel
op	18:64	0:0	10	+
water	18:65	0:0	10	1
op	18:66	0:0	10	]
op	18:67	0:0	10	.
water	18:68	0:0	10	psy_bands
op	18:77	0:0	10	[
water	18:78	0:0	10	(
water	18:79	0:0	10	w
op	18:80	0:0	10	+
water	18:81	0:0	10	w2
water	18:83	0:0	10	)
op	18:84	0:0	10	*
water	18:85	0:0	10	16
op	18:87	0:0	10	+
water	18:88	0:0	10	g
op	18:89	0:0	10	]
decl	19:20	19:76	10	float	minthr
op	19:33	0:0	10	=
call	19:35	19:75	11	FFMIN
arg	19:41	19:57	12	band0->threshold
water	19:41	0:0	13	band0
op	19:46	0:0	13	->
water	19:48	0:0	13	threshold
arg	19:59	19:75	12	band1->threshold
water	19:59	0:0	13	band1
op	19:64	0:0	13	->
water	19:66	0:0	13	threshold
decl	20:20	20:76	10	float	maxthr
op	20:33	0:0	10	=
call	20:35	20:75	11	FFMAX
arg	20:41	20:57	12	band0->threshold
water	20:41	0:0	13	band0
op	20:46	0:0	13	->
water	20:48	0:0	13	threshold
arg	20:59	20:75	12	band1->threshold
water	20:59	0:0	13	band1
op	20:64	0:0	13	->
water	20:66	0:0	13	threshold
for	21:20	26:20	10	(i = 0 ;i < sce0 -> ics . swb_sizes [ g ];i ++)
forinit	21:25	21:30	11	i = 0 ;
water	21:25	0:0	12	i
op	21:27	0:0	12	=
water	21:29	0:0	12	0
water	21:30	0:0	12	;
cond	21:32	21:57	11	i < sce0 -> ics . swb_sizes [ g ]
water	21:32	0:0	12	i
op	21:34	0:0	12	<
water	21:36	0:0	12	sce0
op	21:40	0:0	12	->
water	21:42	0:0	12	ics
op	21:45	0:0	12	.
water	21:46	0:0	12	swb_sizes
op	21:55	0:0	12	[
water	21:56	0:0	12	g
op	21:57	0:0	12	]
forexpr	21:60	21:61	11	i ++
water	21:60	0:0	12	i
op	21:61	0:0	12	++
stmts	21:65	26:20	11	
water	21:65	0:0	12	{
water	22:24	0:0	12	M
op	22:25	0:0	12	[
water	22:26	0:0	12	i
op	22:27	0:0	12	]
op	22:29	0:0	12	=
water	22:31	0:0	12	(
water	22:32	0:0	12	sce0
op	22:36	0:0	12	->
water	22:38	0:0	12	coeffs
op	22:44	0:0	12	[
water	22:45	0:0	12	start
op	22:50	0:0	12	+
water	22:51	0:0	12	(
water	22:52	0:0	12	w
op	22:53	0:0	12	+
water	22:54	0:0	12	w2
water	22:56	0:0	12	)
op	22:57	0:0	12	*
water	22:58	0:0	12	128
op	22:61	0:0	12	+
water	22:62	0:0	12	i
op	22:63	0:0	12	]
op	23:30	0:0	12	+
water	23:32	0:0	12	sce1
op	23:36	0:0	12	->
water	23:38	0:0	12	coeffs
op	23:44	0:0	12	[
water	23:45	0:0	12	start
op	23:50	0:0	12	+
water	23:51	0:0	12	(
water	23:52	0:0	12	w
op	23:53	0:0	12	+
water	23:54	0:0	12	w2
water	23:56	0:0	12	)
op	23:57	0:0	12	*
water	23:58	0:0	12	128
op	23:61	0:0	12	+
water	23:62	0:0	12	i
op	23:63	0:0	12	]
water	23:64	0:0	12	)
op	23:66	0:0	12	*
water	23:68	0:0	12	0
op	23:69	0:0	12	.
water	23:70	0:0	12	5
water	23:71	0:0	12	;
water	24:24	0:0	12	S
op	24:25	0:0	12	[
water	24:26	0:0	12	i
op	24:27	0:0	12	]
op	24:29	0:0	12	=
water	24:32	0:0	12	M
op	24:33	0:0	12	[
water	24:34	0:0	12	i
op	24:35	0:0	12	]
op	25:30	0:0	12	-
water	25:32	0:0	12	sce1
op	25:36	0:0	12	->
water	25:38	0:0	12	coeffs
op	25:44	0:0	12	[
water	25:45	0:0	12	start
op	25:50	0:0	12	+
water	25:51	0:0	12	(
water	25:52	0:0	12	w
op	25:53	0:0	12	+
water	25:54	0:0	12	w2
water	25:56	0:0	12	)
op	25:57	0:0	12	*
water	25:58	0:0	12	128
op	25:61	0:0	12	+
water	25:62	0:0	12	i
op	25:63	0:0	12	]
water	25:64	0:0	12	;
water	26:20	0:0	12	}
call	27:20	27:90	10	abs_pow34_v
arg	27:32	27:35	11	L34
water	27:32	0:0	12	L34
arg	27:37	27:66	11	sce0->coeffs+start+(w+w2)*128
water	27:37	0:0	12	sce0
op	27:41	0:0	12	->
water	27:43	0:0	12	coeffs
op	27:49	0:0	12	+
water	27:50	0:0	12	start
op	27:55	0:0	12	+
water	27:56	0:0	12	(
water	27:57	0:0	12	w
op	27:58	0:0	12	+
water	27:59	0:0	12	w2
water	27:61	0:0	12	)
op	27:62	0:0	12	*
water	27:63	0:0	12	128
arg	27:68	27:90	11	sce0->ics.swb_sizes[g]
water	27:68	0:0	12	sce0
op	27:72	0:0	12	->
water	27:74	0:0	12	ics
op	27:77	0:0	12	.
water	27:78	0:0	12	swb_sizes
op	27:87	0:0	12	[
water	27:88	0:0	12	g
op	27:89	0:0	12	]
water	27:91	0:0	10	;
call	28:20	28:90	10	abs_pow34_v
arg	28:32	28:35	11	R34
water	28:32	0:0	12	R34
arg	28:37	28:66	11	sce1->coeffs+start+(w+w2)*128
water	28:37	0:0	12	sce1
op	28:41	0:0	12	->
water	28:43	0:0	12	coeffs
op	28:49	0:0	12	+
water	28:50	0:0	12	start
op	28:55	0:0	12	+
water	28:56	0:0	12	(
water	28:57	0:0	12	w
op	28:58	0:0	12	+
water	28:59	0:0	12	w2
water	28:61	0:0	12	)
op	28:62	0:0	12	*
water	28:63	0:0	12	128
arg	28:68	28:90	11	sce0->ics.swb_sizes[g]
water	28:68	0:0	12	sce0
op	28:72	0:0	12	->
water	28:74	0:0	12	ics
op	28:77	0:0	12	.
water	28:78	0:0	12	swb_sizes
op	28:87	0:0	12	[
water	28:88	0:0	12	g
op	28:89	0:0	12	]
water	28:91	0:0	10	;
call	29:20	29:86	10	abs_pow34_v
arg	29:32	29:35	11	M34
water	29:32	0:0	12	M34
arg	29:37	29:38	11	M
water	29:37	0:0	12	M
arg	29:64	29:86	11	sce0->ics.swb_sizes[g]
water	29:64	0:0	12	sce0
op	29:68	0:0	12	->
water	29:70	0:0	12	ics
op	29:73	0:0	12	.
water	29:74	0:0	12	swb_sizes
op	29:83	0:0	12	[
water	29:84	0:0	12	g
op	29:85	0:0	12	]
water	29:87	0:0	10	;
call	30:20	30:86	10	abs_pow34_v
arg	30:32	30:35	11	S34
water	30:32	0:0	12	S34
arg	30:37	30:38	11	S
water	30:37	0:0	12	S
arg	30:64	30:86	11	sce0->ics.swb_sizes[g]
water	30:64	0:0	12	sce0
op	30:68	0:0	12	->
water	30:70	0:0	12	ics
op	30:73	0:0	12	.
water	30:74	0:0	12	swb_sizes
op	30:83	0:0	12	[
water	30:84	0:0	12	g
op	30:85	0:0	12	]
water	30:87	0:0	10	;
water	31:20	0:0	10	dist1
op	31:26	0:0	10	+=
call	31:29	36:92	10	quantize_band_cost
arg	31:48	31:49	11	s
water	31:48	0:0	12	s
arg	31:51	31:84	11	&sce0->coeffs[start+(w+w2)*128]
op	31:51	0:0	12	&
water	31:52	0:0	12	sce0
op	31:56	0:0	12	->
water	31:58	0:0	12	coeffs
op	31:64	0:0	12	[
water	31:65	0:0	12	start
op	31:71	0:0	12	+
water	31:73	0:0	12	(
water	31:74	0:0	12	w
op	31:75	0:0	12	+
water	31:76	0:0	12	w2
water	31:78	0:0	12	)
op	31:79	0:0	12	*
water	31:80	0:0	12	128
op	31:83	0:0	12	]
arg	32:48	32:51	11	L34
water	32:48	0:0	12	L34
arg	33:48	33:70	11	sce0->ics.swb_sizes[g]
water	33:48	0:0	12	sce0
op	33:52	0:0	12	->
water	33:54	0:0	12	ics
op	33:57	0:0	12	.
water	33:58	0:0	12	swb_sizes
op	33:67	0:0	12	[
water	33:68	0:0	12	g
op	33:69	0:0	12	]
arg	34:48	34:73	11	sce0->sf_idx[(w+w2)*16+g]
water	34:48	0:0	12	sce0
op	34:52	0:0	12	->
water	34:54	0:0	12	sf_idx
op	34:60	0:0	12	[
water	34:61	0:0	12	(
water	34:62	0:0	12	w
op	34:63	0:0	12	+
water	34:64	0:0	12	w2
water	34:66	0:0	12	)
op	34:67	0:0	12	*
water	34:68	0:0	12	16
op	34:70	0:0	12	+
water	34:71	0:0	12	g
op	34:72	0:0	12	]
arg	35:48	35:76	11	sce0->band_type[(w+w2)*16+g]
water	35:48	0:0	12	sce0
op	35:52	0:0	12	->
water	35:54	0:0	12	band_type
op	35:63	0:0	12	[
water	35:64	0:0	12	(
water	35:65	0:0	12	w
op	35:66	0:0	12	+
water	35:67	0:0	12	w2
water	35:69	0:0	12	)
op	35:70	0:0	12	*
water	35:71	0:0	12	16
op	35:73	0:0	12	+
water	35:74	0:0	12	g
op	35:75	0:0	12	]
arg	36:48	36:73	11	lambda/band0->threshold
water	36:48	0:0	12	lambda
op	36:55	0:0	12	/
water	36:57	0:0	12	band0
op	36:62	0:0	12	->
water	36:64	0:0	12	threshold
arg	36:75	36:83	11	INFINITY
water	36:75	0:0	12	INFINITY
arg	36:85	36:89	11	NULL
water	36:85	0:0	12	NULL
arg	36:91	36:92	11	0
water	36:91	0:0	12	0
water	36:93	0:0	10	;
water	37:20	0:0	10	dist1
op	37:26	0:0	10	+=
call	37:29	42:92	10	quantize_band_cost
arg	37:48	37:49	11	s
water	37:48	0:0	12	s
arg	37:51	37:84	11	&sce1->coeffs[start+(w+w2)*128]
op	37:51	0:0	12	&
water	37:52	0:0	12	sce1
op	37:56	0:0	12	->
water	37:58	0:0	12	coeffs
op	37:64	0:0	12	[
water	37:65	0:0	12	start
op	37:71	0:0	12	+
water	37:73	0:0	12	(
water	37:74	0:0	12	w
op	37:75	0:0	12	+
water	37:76	0:0	12	w2
water	37:78	0:0	12	)
op	37:79	0:0	12	*
water	37:80	0:0	12	128
op	37:83	0:0	12	]
arg	38:48	38:51	11	R34
water	38:48	0:0	12	R34
arg	39:48	39:70	11	sce1->ics.swb_sizes[g]
water	39:48	0:0	12	sce1
op	39:52	0:0	12	->
water	39:54	0:0	12	ics
op	39:57	0:0	12	.
water	39:58	0:0	12	swb_sizes
op	39:67	0:0	12	[
water	39:68	0:0	12	g
op	39:69	0:0	12	]
arg	40:48	40:73	11	sce1->sf_idx[(w+w2)*16+g]
water	40:48	0:0	12	sce1
op	40:52	0:0	12	->
water	40:54	0:0	12	sf_idx
op	40:60	0:0	12	[
water	40:61	0:0	12	(
water	40:62	0:0	12	w
op	40:63	0:0	12	+
water	40:64	0:0	12	w2
water	40:66	0:0	12	)
op	40:67	0:0	12	*
water	40:68	0:0	12	16
op	40:70	0:0	12	+
water	40:71	0:0	12	g
op	40:72	0:0	12	]
arg	41:48	41:76	11	sce1->band_type[(w+w2)*16+g]
water	41:48	0:0	12	sce1
op	41:52	0:0	12	->
water	41:54	0:0	12	band_type
op	41:63	0:0	12	[
water	41:64	0:0	12	(
water	41:65	0:0	12	w
op	41:66	0:0	12	+
water	41:67	0:0	12	w2
water	41:69	0:0	12	)
op	41:70	0:0	12	*
water	41:71	0:0	12	16
op	41:73	0:0	12	+
water	41:74	0:0	12	g
op	41:75	0:0	12	]
arg	42:48	42:73	11	lambda/band1->threshold
water	42:48	0:0	12	lambda
op	42:55	0:0	12	/
water	42:57	0:0	12	band1
op	42:62	0:0	12	->
water	42:64	0:0	12	threshold
arg	42:75	42:83	11	INFINITY
water	42:75	0:0	12	INFINITY
arg	42:85	42:89	11	NULL
water	42:85	0:0	12	NULL
arg	42:91	42:92	11	0
water	42:91	0:0	12	0
water	42:93	0:0	10	;
water	43:20	0:0	10	dist2
op	43:26	0:0	10	+=
call	43:29	48:82	10	quantize_band_cost
arg	43:48	43:49	11	s
water	43:48	0:0	12	s
arg	43:51	43:52	11	M
water	43:51	0:0	12	M
arg	44:48	44:51	11	M34
water	44:48	0:0	12	M34
arg	45:48	45:70	11	sce0->ics.swb_sizes[g]
water	45:48	0:0	12	sce0
op	45:52	0:0	12	->
water	45:54	0:0	12	ics
op	45:57	0:0	12	.
water	45:58	0:0	12	swb_sizes
op	45:67	0:0	12	[
water	45:68	0:0	12	g
op	45:69	0:0	12	]
arg	46:48	46:73	11	sce0->sf_idx[(w+w2)*16+g]
water	46:48	0:0	12	sce0
op	46:52	0:0	12	->
water	46:54	0:0	12	sf_idx
op	46:60	0:0	12	[
water	46:61	0:0	12	(
water	46:62	0:0	12	w
op	46:63	0:0	12	+
water	46:64	0:0	12	w2
water	46:66	0:0	12	)
op	46:67	0:0	12	*
water	46:68	0:0	12	16
op	46:70	0:0	12	+
water	46:71	0:0	12	g
op	46:72	0:0	12	]
arg	47:48	47:76	11	sce0->band_type[(w+w2)*16+g]
water	47:48	0:0	12	sce0
op	47:52	0:0	12	->
water	47:54	0:0	12	band_type
op	47:63	0:0	12	[
water	47:64	0:0	12	(
water	47:65	0:0	12	w
op	47:66	0:0	12	+
water	47:67	0:0	12	w2
water	47:69	0:0	12	)
op	47:70	0:0	12	*
water	47:71	0:0	12	16
op	47:73	0:0	12	+
water	47:74	0:0	12	g
op	47:75	0:0	12	]
arg	48:48	48:63	11	lambda/maxthr
water	48:48	0:0	12	lambda
op	48:55	0:0	12	/
water	48:57	0:0	12	maxthr
arg	48:65	48:73	11	INFINITY
water	48:65	0:0	12	INFINITY
arg	48:75	48:79	11	NULL
water	48:75	0:0	12	NULL
arg	48:81	48:82	11	0
water	48:81	0:0	12	0
water	48:83	0:0	10	;
water	49:20	0:0	10	dist2
op	49:26	0:0	10	+=
call	49:29	54:82	10	quantize_band_cost
arg	49:48	49:49	11	s
water	49:48	0:0	12	s
arg	49:51	49:52	11	S
water	49:51	0:0	12	S
arg	50:48	50:51	11	S34
water	50:48	0:0	12	S34
arg	51:48	51:70	11	sce1->ics.swb_sizes[g]
water	51:48	0:0	12	sce1
op	51:52	0:0	12	->
water	51:54	0:0	12	ics
op	51:57	0:0	12	.
water	51:58	0:0	12	swb_sizes
op	51:67	0:0	12	[
water	51:68	0:0	12	g
op	51:69	0:0	12	]
arg	52:48	52:73	11	sce1->sf_idx[(w+w2)*16+g]
water	52:48	0:0	12	sce1
op	52:52	0:0	12	->
water	52:54	0:0	12	sf_idx
op	52:60	0:0	12	[
water	52:61	0:0	12	(
water	52:62	0:0	12	w
op	52:63	0:0	12	+
water	52:64	0:0	12	w2
water	52:66	0:0	12	)
op	52:67	0:0	12	*
water	52:68	0:0	12	16
op	52:70	0:0	12	+
water	52:71	0:0	12	g
op	52:72	0:0	12	]
arg	53:48	53:76	11	sce1->band_type[(w+w2)*16+g]
water	53:48	0:0	12	sce1
op	53:52	0:0	12	->
water	53:54	0:0	12	band_type
op	53:63	0:0	12	[
water	53:64	0:0	12	(
water	53:65	0:0	12	w
op	53:66	0:0	12	+
water	53:67	0:0	12	w2
water	53:69	0:0	12	)
op	53:70	0:0	12	*
water	53:71	0:0	12	16
op	53:73	0:0	12	+
water	53:74	0:0	12	g
op	53:75	0:0	12	]
arg	54:48	54:63	11	lambda/minthr
water	54:48	0:0	12	lambda
op	54:55	0:0	12	/
water	54:57	0:0	12	minthr
arg	54:65	54:73	11	INFINITY
water	54:65	0:0	12	INFINITY
arg	54:75	54:79	11	NULL
water	54:75	0:0	12	NULL
arg	54:81	54:82	11	0
water	54:81	0:0	12	0
water	54:83	0:0	10	;
water	55:16	0:0	10	}
water	56:16	0:0	8	cpe
op	56:19	0:0	8	->
water	56:21	0:0	8	ms_mask
op	56:28	0:0	8	[
water	56:29	0:0	8	w
op	56:30	0:0	8	*
water	56:31	0:0	8	16
op	56:33	0:0	8	+
water	56:34	0:0	8	g
op	56:35	0:0	8	]
op	56:37	0:0	8	=
water	56:39	0:0	8	dist2
op	56:45	0:0	8	<
water	56:47	0:0	8	dist1
water	56:52	0:0	8	;
water	57:12	0:0	8	}
water	58:12	0:0	6	start
op	58:18	0:0	6	+=
water	58:21	0:0	6	sce0
op	58:25	0:0	6	->
water	58:27	0:0	6	ics
op	58:30	0:0	6	.
water	58:31	0:0	6	swb_sizes
op	58:40	0:0	6	[
water	58:41	0:0	6	g
op	58:42	0:0	6	]
water	58:43	0:0	6	;
water	59:8	0:0	6	}
water	60:4	0:0	4	}

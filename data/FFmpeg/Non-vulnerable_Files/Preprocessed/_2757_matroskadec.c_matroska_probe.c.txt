func	1:0	36:0	0	static int	matroska_probe
params	1:25	0:0	1	
param	1:26	1:40	2	AVProbeData *	p
stmnts	0:0	35:34	1	
decl	3:4	3:22	2	uint64_t	total
op	3:19	0:0	2	=
water	3:21	0:0	2	0
decl	4:4	4:43	2	int	len_mask
op	4:17	0:0	2	=
water	4:19	0:0	2	0
water	4:20	0:0	2	x80
water	4:23	0:0	2	,
decl	4:4	4:43	2	int	size
op	4:30	0:0	2	=
water	4:32	0:0	2	1
water	4:33	0:0	2	,
decl	4:4	4:43	2	int	n
op	4:37	0:0	2	=
water	4:39	0:0	2	1
water	4:40	0:0	2	,
decl	4:4	4:43	2	int	i
if	6:4	7:16	2	(AV_RB32 (p -> buf ) != EBML_ID_HEADER)
cond	6:8	6:27	3	AV_RB32 (p -> buf ) != EBML_ID_HEADER
call	6:8	6:22	4	AV_RB32
arg	6:16	6:22	5	p->buf
water	6:16	0:0	6	p
op	6:17	0:0	6	->
water	6:19	0:0	6	buf
op	6:24	0:0	4	!=
water	6:27	0:0	4	EBML_ID_HEADER
stmts	7:8	7:16	3	
return	7:8	7:16	4	0
water	7:15	0:0	5	0
water	9:4	0:0	2	total
op	9:10	0:0	2	=
water	9:12	0:0	2	p
op	9:13	0:0	2	->
water	9:15	0:0	2	buf
op	9:18	0:0	2	[
water	9:19	0:0	2	4
op	9:20	0:0	2	]
water	9:21	0:0	2	;
while	10:4	13:4	2	(size <= 8 && ! ( total & len_mask ))
cond	10:11	10:42	3	size <= 8 && ! ( total & len_mask )
water	10:11	0:0	4	size
op	10:16	0:0	4	<=
water	10:19	0:0	4	8
op	10:21	0:0	4	&&
op	10:24	0:0	4	!
water	10:25	0:0	4	(
water	10:26	0:0	4	total
op	10:32	0:0	4	&
water	10:34	0:0	4	len_mask
water	10:42	0:0	4	)
stmts	10:45	13:4	3	
water	10:45	0:0	4	{
water	11:8	0:0	4	size
op	11:12	0:0	4	++
water	11:14	0:0	4	;
water	12:8	0:0	4	len_mask
op	12:17	0:0	4	>>=
water	12:21	0:0	4	1
water	12:22	0:0	4	;
water	13:4	0:0	4	}
if	14:4	15:16	2	(size > 8)
cond	14:8	14:15	3	size > 8
water	14:8	0:0	4	size
op	14:13	0:0	4	>
water	14:15	0:0	4	8
stmts	15:8	15:16	3	
return	15:8	15:16	4	0
water	15:15	0:0	5	0
water	16:4	0:0	2	total
op	16:10	0:0	2	&=
water	16:13	0:0	2	(
water	16:14	0:0	2	len_mask
op	16:23	0:0	2	-
water	16:25	0:0	2	1
water	16:26	0:0	2	)
water	16:27	0:0	2	;
while	17:4	18:46	2	(n < size)
cond	17:11	17:15	3	n < size
water	17:11	0:0	4	n
op	17:13	0:0	4	<
water	17:15	0:0	4	size
stmts	18:8	18:46	3	
water	18:8	0:0	4	total
op	18:14	0:0	4	=
water	18:16	0:0	4	(
water	18:17	0:0	4	total
op	18:23	0:0	4	<<
water	18:26	0:0	4	8
water	18:27	0:0	4	)
op	18:29	0:0	4	|
water	18:31	0:0	4	p
op	18:32	0:0	4	->
water	18:34	0:0	4	buf
op	18:37	0:0	4	[
water	18:38	0:0	4	4
op	18:40	0:0	4	+
water	18:42	0:0	4	n
op	18:43	0:0	4	++
op	18:45	0:0	4	]
water	18:46	0:0	4	;
if	20:4	21:16	2	(p -> buf_size < 4 + size + total)
cond	20:8	20:33	3	p -> buf_size < 4 + size + total
water	20:8	0:0	4	p
op	20:9	0:0	4	->
water	20:11	0:0	4	buf_size
op	20:20	0:0	4	<
water	20:22	0:0	4	4
op	20:24	0:0	4	+
water	20:26	0:0	4	size
op	20:31	0:0	4	+
water	20:33	0:0	4	total
stmts	21:8	21:16	3	
return	21:8	21:16	4	0
water	21:15	0:0	5	0
for	26:4	33:4	2	(i = 0 ;i <FF_ARRAY_ELEMS (matroska_doctypes );i ++)
forinit	26:9	26:14	3	i = 0 ;
water	26:9	0:0	4	i
op	26:11	0:0	4	=
water	26:13	0:0	4	0
water	26:14	0:0	4	;
cond	26:16	26:52	3	i <FF_ARRAY_ELEMS (matroska_doctypes )
water	26:16	0:0	4	i
op	26:18	0:0	4	<
call	26:20	26:52	4	FF_ARRAY_ELEMS
arg	26:35	26:52	5	matroska_doctypes
water	26:35	0:0	6	matroska_doctypes
forexpr	26:55	26:56	3	i ++
water	26:55	0:0	4	i
op	26:56	0:0	4	++
stmts	26:60	33:4	3	
water	26:60	0:0	4	{
decl	27:8	27:54	4	size_t	probelen
op	27:24	0:0	4	=
call	27:26	27:53	5	strlen
arg	27:33	27:53	6	matroska_doctypes[i]
water	27:33	0:0	7	matroska_doctypes
op	27:50	0:0	7	[
water	27:51	0:0	7	i
op	27:52	0:0	7	]
if	28:8	29:20	4	(total < probelen)
cond	28:12	28:20	5	total < probelen
water	28:12	0:0	6	total
op	28:18	0:0	6	<
water	28:20	0:0	6	probelen
stmts	29:12	29:20	5	
continue	29:12	29:20	6	
for	30:8	32:40	4	(n = 4 + size ;n <= 4 + size + total - probelen;n ++)
forinit	30:13	30:25	5	n = 4 + size ;
water	30:13	0:0	6	n
op	30:15	0:0	6	=
water	30:17	0:0	6	4
op	30:19	0:0	6	+
water	30:21	0:0	6	size
water	30:25	0:0	6	;
cond	30:27	30:51	5	n <= 4 + size + total - probelen
water	30:27	0:0	6	n
op	30:29	0:0	6	<=
water	30:32	0:0	6	4
op	30:34	0:0	6	+
water	30:36	0:0	6	size
op	30:41	0:0	6	+
water	30:43	0:0	6	total
op	30:49	0:0	6	-
water	30:51	0:0	6	probelen
forexpr	30:61	30:62	5	n ++
water	30:61	0:0	6	n
op	30:62	0:0	6	++
stmts	31:12	32:40	5	
if	31:12	32:40	6	(!memcmp (p -> buf + n ,matroska_doctypes [ i ] ,probelen ))
cond	31:16	31:66	7	!memcmp (p -> buf + n ,matroska_doctypes [ i ] ,probelen )
op	31:16	0:0	8	!
call	31:17	31:66	8	memcmp
arg	31:24	31:34	9	p->buf+n
water	31:24	0:0	10	p
op	31:25	0:0	10	->
water	31:27	0:0	10	buf
op	31:31	0:0	10	+
water	31:33	0:0	10	n
arg	31:36	31:56	9	matroska_doctypes[i]
water	31:36	0:0	10	matroska_doctypes
op	31:53	0:0	10	[
water	31:54	0:0	10	i
op	31:55	0:0	10	]
arg	31:58	31:66	9	probelen
water	31:58	0:0	10	probelen
stmts	32:16	32:40	7	
return	32:16	32:40	8	AVPROBE_SCORE_MAX
water	32:23	0:0	9	AVPROBE_SCORE_MAX
water	33:4	0:0	4	}
return	35:4	35:34	2	AVPROBE_SCORE_EXTENSION
water	35:11	0:0	3	AVPROBE_SCORE_EXTENSION

func	1:0	25:0	0	static int	iec61883_read_packet
params	1:31	0:0	1	
param	1:32	1:56	2	AVFormatContext *	context
param	1:58	1:71	2	AVPacket *	pkt
stmnts	0:0	24:15	1	
decl	3:4	3:49	2	struct iec61883_data	*dv
op	3:29	0:0	2	=
water	3:31	0:0	2	context
op	3:38	0:0	2	->
water	3:40	0:0	2	priv_data
decl	4:4	4:12	2	int	size
call	9:4	9:33	2	pthread_mutex_lock
arg	9:23	9:33	3	&dv->mutex
op	9:23	0:0	4	&
water	9:24	0:0	4	dv
op	9:26	0:0	4	->
water	9:28	0:0	4	mutex
water	9:34	0:0	2	;
while	10:4	12:52	2	(( size =dv -> parse_queue (dv ,pkt ) ) == - 1)
cond	10:11	10:49	3	( size =dv -> parse_queue (dv ,pkt ) ) == - 1
water	10:11	0:0	4	(
water	10:12	0:0	4	size
op	10:17	0:0	4	=
call	10:19	10:42	4	dv->parse_queue
arg	10:35	10:37	5	dv
water	10:35	0:0	6	dv
arg	10:39	10:42	5	pkt
water	10:39	0:0	6	pkt
water	10:43	0:0	4	)
op	10:45	0:0	4	==
op	10:48	0:0	4	-
water	10:49	0:0	4	1
stmts	11:8	12:52	3	
if	11:8	12:52	4	(! dv -> eof)
cond	11:12	11:17	5	! dv -> eof
op	11:12	0:0	6	!
water	11:13	0:0	6	dv
op	11:15	0:0	6	->
water	11:17	0:0	6	eof
stmts	12:12	12:52	5	
call	12:12	12:51	6	pthread_cond_wait
arg	12:30	12:39	7	&dv->cond
op	12:30	0:0	8	&
water	12:31	0:0	8	dv
op	12:33	0:0	8	->
water	12:35	0:0	8	cond
arg	12:41	12:51	7	&dv->mutex
op	12:41	0:0	8	&
water	12:42	0:0	8	dv
op	12:44	0:0	8	->
water	12:46	0:0	8	mutex
water	12:52	0:0	6	;
else	13:8	14:17	2
stmts	14:12	14:17	3	
break	14:12	14:17	4	
call	15:4	15:35	2	pthread_mutex_unlock
arg	15:25	15:35	3	&dv->mutex
op	15:25	0:0	4	&
water	15:26	0:0	4	dv
op	15:28	0:0	4	->
water	15:30	0:0	4	mutex
water	15:36	0:0	2	;
decl	17:4	17:14	2	int	result
while	18:4	22:4	2	(( size =dv -> parse_queue (dv ,pkt ) ) == - 1)
cond	18:11	18:49	3	( size =dv -> parse_queue (dv ,pkt ) ) == - 1
water	18:11	0:0	4	(
water	18:12	0:0	4	size
op	18:17	0:0	4	=
call	18:19	18:42	4	dv->parse_queue
arg	18:35	18:37	5	dv
water	18:35	0:0	6	dv
arg	18:39	18:42	5	pkt
water	18:39	0:0	6	pkt
water	18:43	0:0	4	)
op	18:45	0:0	4	==
op	18:48	0:0	4	-
water	18:49	0:0	4	1
stmts	18:52	22:4	3	
water	18:52	0:0	4	{
call	19:8	19:40	4	iec61883_receive_task
arg	19:30	19:40	5	(void*)dv
water	19:30	0:0	6	(
water	19:31	0:0	6	void
op	19:36	0:0	6	*
water	19:37	0:0	6	)
water	19:38	0:0	6	dv
water	19:41	0:0	4	;
if	20:8	21:36	4	(dv -> receive_error)
cond	20:12	20:16	5	dv -> receive_error
water	20:12	0:0	6	dv
op	20:14	0:0	6	->
water	20:16	0:0	6	receive_error
stmts	21:12	21:36	5	
return	21:12	21:36	6	dv->receive_error
water	21:19	0:0	7	dv
op	21:21	0:0	7	->
water	21:23	0:0	7	receive_error
water	22:4	0:0	4	}
return	24:4	24:15	2	size
water	24:11	0:0	3	size

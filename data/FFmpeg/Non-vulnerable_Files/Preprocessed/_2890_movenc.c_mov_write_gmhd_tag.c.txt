func	1:0	43:0	0	static int	mov_write_gmhd_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	42:31	1	
decl	3:4	3:31	2	int64_t	pos
op	3:16	0:0	2	=
call	3:18	3:30	3	avio_tell
arg	3:28	3:30	4	pb
water	3:28	0:0	5	pb
call	4:4	4:19	2	avio_wb32
arg	4:14	4:16	3	pb
water	4:14	0:0	4	pb
arg	4:18	4:19	3	0
water	4:18	0:0	4	0
water	4:20	0:0	2	;
call	5:4	5:27	2	ffio_wfourcc
arg	5:17	5:19	3	pb
water	5:17	0:0	4	pb
arg	5:21	5:27	3	"gmhd"
water	5:21	0:0	4	"gmhd"
water	5:28	0:0	2	;
call	6:4	6:22	2	avio_wb32
arg	6:14	6:16	3	pb
water	6:14	0:0	4	pb
arg	6:18	6:22	3	0x18
water	6:18	0:0	4	0
water	6:19	0:0	4	x18
water	6:23	0:0	2	;
call	7:4	7:27	2	ffio_wfourcc
arg	7:17	7:19	3	pb
water	7:17	0:0	4	pb
arg	7:21	7:27	3	"gmin"
water	7:21	0:0	4	"gmin"
water	7:28	0:0	2	;
call	8:4	8:19	2	avio_wb32
arg	8:14	8:16	3	pb
water	8:14	0:0	4	pb
arg	8:18	8:19	3	0
water	8:18	0:0	4	0
water	8:20	0:0	2	;
call	9:4	9:22	2	avio_wb16
arg	9:14	9:16	3	pb
water	9:14	0:0	4	pb
arg	9:18	9:22	3	0x40
water	9:18	0:0	4	0
water	9:19	0:0	4	x40
water	9:23	0:0	2	;
call	10:4	10:24	2	avio_wb16
arg	10:14	10:16	3	pb
water	10:14	0:0	4	pb
arg	10:18	10:24	3	0x8000
water	10:18	0:0	4	0
water	10:19	0:0	4	x8000
water	10:25	0:0	2	;
call	11:4	11:24	2	avio_wb16
arg	11:14	11:16	3	pb
water	11:14	0:0	4	pb
arg	11:18	11:24	3	0x8000
water	11:18	0:0	4	0
water	11:19	0:0	4	x8000
water	11:25	0:0	2	;
call	12:4	12:24	2	avio_wb16
arg	12:14	12:16	3	pb
water	12:14	0:0	4	pb
arg	12:18	12:24	3	0x8000
water	12:18	0:0	4	0
water	12:19	0:0	4	x8000
water	12:25	0:0	2	;
call	13:4	13:19	2	avio_wb16
arg	13:14	13:16	3	pb
water	13:14	0:0	4	pb
arg	13:18	13:19	3	0
water	13:18	0:0	4	0
water	13:20	0:0	2	;
call	14:4	14:19	2	avio_wb16
arg	14:14	14:16	3	pb
water	14:14	0:0	4	pb
arg	14:18	14:19	3	0
water	14:18	0:0	4	0
water	14:20	0:0	2	;
if	21:4	34:4	2	(track -> tag !=MKTAG ('c' ,'6' ,'0' ,'8' ))
cond	21:8	21:43	3	track -> tag !=MKTAG ('c' ,'6' ,'0' ,'8' )
water	21:8	0:0	4	track
op	21:13	0:0	4	->
water	21:15	0:0	4	tag
op	21:19	0:0	4	!=
call	21:22	21:43	4	MKTAG
arg	21:28	21:31	5	'c'
water	21:28	0:0	6	'c'
arg	21:32	21:35	5	'6'
water	21:32	0:0	6	'6'
arg	21:36	21:39	5	'0'
water	21:36	0:0	6	'0'
arg	21:40	21:43	5	'8'
water	21:40	0:0	6	'8'
stmts	21:46	34:4	3	
water	21:46	0:0	4	{
call	22:4	22:22	4	avio_wb32
arg	22:14	22:16	5	pb
water	22:14	0:0	6	pb
arg	22:18	22:22	5	0x2C
water	22:18	0:0	6	0
water	22:19	0:0	6	x2C
water	22:23	0:0	4	;
call	23:4	23:27	4	ffio_wfourcc
arg	23:17	23:19	5	pb
water	23:17	0:0	6	pb
arg	23:21	23:27	5	"text"
water	23:21	0:0	6	"text"
water	23:28	0:0	4	;
call	24:4	24:22	4	avio_wb16
arg	24:14	24:16	5	pb
water	24:14	0:0	6	pb
arg	24:18	24:22	5	0x01
water	24:18	0:0	6	0
water	24:19	0:0	6	x01
water	24:23	0:0	4	;
call	25:4	25:22	4	avio_wb32
arg	25:14	25:16	5	pb
water	25:14	0:0	6	pb
arg	25:18	25:22	5	0x00
water	25:18	0:0	6	0
water	25:19	0:0	6	x00
water	25:23	0:0	4	;
call	26:4	26:22	4	avio_wb32
arg	26:14	26:16	5	pb
water	26:14	0:0	6	pb
arg	26:18	26:22	5	0x00
water	26:18	0:0	6	0
water	26:19	0:0	6	x00
water	26:23	0:0	4	;
call	27:4	27:22	4	avio_wb32
arg	27:14	27:16	5	pb
water	27:14	0:0	6	pb
arg	27:18	27:22	5	0x00
water	27:18	0:0	6	0
water	27:19	0:0	6	x00
water	27:23	0:0	4	;
call	28:4	28:22	4	avio_wb32
arg	28:14	28:16	5	pb
water	28:14	0:0	6	pb
arg	28:18	28:22	5	0x01
water	28:18	0:0	6	0
water	28:19	0:0	6	x01
water	28:23	0:0	4	;
call	29:4	29:22	4	avio_wb32
arg	29:14	29:16	5	pb
water	29:14	0:0	6	pb
arg	29:18	29:22	5	0x00
water	29:18	0:0	6	0
water	29:19	0:0	6	x00
water	29:23	0:0	4	;
call	30:4	30:22	4	avio_wb32
arg	30:14	30:16	5	pb
water	30:14	0:0	6	pb
arg	30:18	30:22	5	0x00
water	30:18	0:0	6	0
water	30:19	0:0	6	x00
water	30:23	0:0	4	;
call	31:4	31:22	4	avio_wb32
arg	31:14	31:16	5	pb
water	31:14	0:0	6	pb
arg	31:18	31:22	5	0x00
water	31:18	0:0	6	0
water	31:19	0:0	6	x00
water	31:23	0:0	4	;
call	32:4	32:28	4	avio_wb32
arg	32:14	32:16	5	pb
water	32:14	0:0	6	pb
arg	32:18	32:28	5	0x00004000
water	32:18	0:0	6	0
water	32:19	0:0	6	x00004000
water	32:29	0:0	4	;
call	33:4	33:24	4	avio_wb16
arg	33:14	33:16	5	pb
water	33:14	0:0	6	pb
arg	33:18	33:24	5	0x0000
water	33:18	0:0	6	0
water	33:19	0:0	6	x0000
water	33:25	0:0	4	;
water	34:4	0:0	4	}
if	35:4	41:4	2	(track -> enc -> codec_tag ==MKTAG ('t' ,'m' ,'c' ,'d' ))
cond	35:8	35:54	3	track -> enc -> codec_tag ==MKTAG ('t' ,'m' ,'c' ,'d' )
water	35:8	0:0	4	track
op	35:13	0:0	4	->
water	35:15	0:0	4	enc
op	35:18	0:0	4	->
water	35:20	0:0	4	codec_tag
op	35:30	0:0	4	==
call	35:33	35:54	4	MKTAG
arg	35:39	35:42	5	't'
water	35:39	0:0	6	't'
arg	35:43	35:46	5	'm'
water	35:43	0:0	6	'm'
arg	35:47	35:50	5	'c'
water	35:47	0:0	6	'c'
arg	35:51	35:54	5	'd'
water	35:51	0:0	6	'd'
stmts	35:57	41:4	3	
water	35:57	0:0	4	{
decl	36:8	36:40	4	int64_t	tmcd_pos
op	36:25	0:0	4	=
call	36:27	36:39	5	avio_tell
arg	36:37	36:39	6	pb
water	36:37	0:0	7	pb
call	37:8	37:23	4	avio_wb32
arg	37:18	37:20	5	pb
water	37:18	0:0	6	pb
arg	37:22	37:23	5	0
water	37:22	0:0	6	0
water	37:24	0:0	4	;
call	38:8	38:31	4	ffio_wfourcc
arg	38:21	38:23	5	pb
water	38:21	0:0	6	pb
arg	38:25	38:31	5	"tmcd"
water	38:25	0:0	6	"tmcd"
water	38:32	0:0	4	;
call	39:8	39:36	4	mov_write_tcmi_tag
arg	39:27	39:29	5	pb
water	39:27	0:0	6	pb
arg	39:31	39:36	5	track
water	39:31	0:0	6	track
water	39:37	0:0	4	;
call	40:8	40:32	4	update_size
arg	40:20	40:22	5	pb
water	40:20	0:0	6	pb
arg	40:24	40:32	5	tmcd_pos
water	40:24	0:0	6	tmcd_pos
water	40:33	0:0	4	;
water	41:4	0:0	4	}
return	42:4	42:31	2	update_size(pb,pos)
call	42:11	42:30	3	update_size
arg	42:23	42:25	4	pb
water	42:23	0:0	5	pb
arg	42:27	42:30	4	pos
water	42:27	0:0	5	pos

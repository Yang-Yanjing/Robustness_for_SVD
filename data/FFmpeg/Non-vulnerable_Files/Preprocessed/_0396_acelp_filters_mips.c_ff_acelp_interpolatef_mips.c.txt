func	1:0	42:0	0	static void	ff_acelp_interpolatef_mips
params	1:38	0:0	1	
param	1:39	1:49	2	float *	out
param	1:51	1:66	2	const float *	in
param	2:27	2:53	2	const float *	filter_coeffs
param	2:55	2:68	2	int	precision
param	3:27	3:39	2	int	frac_pos
param	3:41	3:58	2	int	filter_length
param	3:60	3:70	2	int	length
stmnts	0:0	41:4	1	
decl	5:4	5:12	2	int	n
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	i
decl	6:4	6:28	2	int	prec
op	6:13	0:0	2	=
water	6:15	0:0	2	precision
op	6:25	0:0	2	*
water	6:27	0:0	2	4
decl	7:4	7:40	2	int	fc_offset
op	7:18	0:0	2	=
water	7:20	0:0	2	precision
op	7:30	0:0	2	-
water	7:32	0:0	2	frac_pos
decl	8:4	8:48	2	float	in_val_p
water	8:18	0:0	2	,
decl	8:4	8:48	2	float	in_val_m
water	8:28	0:0	2	,
decl	8:4	8:48	2	float	fc_val_p
water	8:38	0:0	2	,
decl	8:4	8:48	2	float	fc_val_m
for	9:4	41:4	2	(n = 0 ;n < length;n ++)
forinit	9:9	9:14	3	n = 0 ;
water	9:9	0:0	4	n
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:20	3	n < length
water	9:16	0:0	4	n
op	9:18	0:0	4	<
water	9:20	0:0	4	length
forexpr	9:28	9:29	3	n ++
water	9:28	0:0	4	n
op	9:29	0:0	4	++
stmts	9:33	41:4	3	
water	9:33	0:0	4	{
decl	14:8	14:36	4	const float	*p_in_p
op	14:28	0:0	4	=
op	14:30	0:0	4	&
water	14:31	0:0	4	in
op	14:33	0:0	4	[
water	14:34	0:0	4	n
op	14:35	0:0	4	]
decl	15:8	15:38	4	const float	*p_in_m
op	15:28	0:0	4	=
op	15:30	0:0	4	&
water	15:31	0:0	4	in
op	15:33	0:0	4	[
water	15:34	0:0	4	n
op	15:35	0:0	4	-
water	15:36	0:0	4	1
op	15:37	0:0	4	]
decl	16:8	16:65	4	const float	*p_filter_coeffs_p
op	16:39	0:0	4	=
op	16:41	0:0	4	&
water	16:42	0:0	4	filter_coeffs
op	16:55	0:0	4	[
water	16:56	0:0	4	frac_pos
op	16:64	0:0	4	]
decl	17:8	17:66	4	const float	*p_filter_coeffs_m
op	17:39	0:0	4	=
water	17:41	0:0	4	filter_coeffs
op	17:55	0:0	4	+
water	17:57	0:0	4	fc_offset
decl	18:8	18:19	4	float	v
op	18:16	0:0	4	=
water	18:18	0:0	4	0
for	19:8	39:8	4	(i = 0 ;i < filter_length;i ++)
forinit	19:13	19:18	5	i = 0 ;
water	19:13	0:0	6	i
op	19:15	0:0	6	=
water	19:17	0:0	6	0
water	19:18	0:0	6	;
cond	19:20	19:24	5	i < filter_length
water	19:20	0:0	6	i
op	19:22	0:0	6	<
water	19:24	0:0	6	filter_length
forexpr	19:38	19:39	5	i ++
water	19:38	0:0	6	i
op	19:39	0:0	6	++
stmts	19:43	39:8	5	
water	19:43	0:0	6	{
water	20:12	0:0	6	__asm__
water	20:20	0:0	6	volatile
water	20:29	0:0	6	(
water	21:16	0:0	6	"lwc1   %[in_val_p],           0(%[p_in_p])                    \n\t"
water	22:16	0:0	6	"lwc1   %[fc_val_p],           0(%[p_filter_coeffs_p])         \n\t"
water	23:16	0:0	6	"lwc1   %[in_val_m],           0(%[p_in_m])                    \n\t"
water	24:16	0:0	6	"lwc1   %[fc_val_m],           0(%[p_filter_coeffs_m])         \n\t"
water	25:16	0:0	6	PTR_ADDIU
water	25:26	0:0	6	"%[p_in_p],          %[p_in_p],              4       \n\t"
water	26:16	0:0	6	"madd.s %[v],%[v],             %[in_val_p],%[fc_val_p]         \n\t"
water	27:16	0:0	6	PTR_ADDIU
water	27:26	0:0	6	"%[p_in_m],          %[p_in_m],              -4      \n\t"
water	28:16	0:0	6	PTR_ADDU
water	28:25	0:0	6	"%[p_filter_coeffs_p],%[p_filter_coeffs_p],   %[prec] \n\t"
water	29:16	0:0	6	PTR_ADDU
water	29:25	0:0	6	"%[p_filter_coeffs_m],%[p_filter_coeffs_m],   %[prec] \n\t"
water	30:16	0:0	6	"madd.s %[v],%[v],%[in_val_m], %[fc_val_m]                     \n\t"
water	31:16	0:0	6	:
op	31:18	0:0	6	[
water	31:19	0:0	6	v
op	31:20	0:0	6	]
water	31:22	0:0	6	"+&f"
water	31:28	0:0	6	(
water	31:29	0:0	6	v
water	31:30	0:0	6	)
water	31:31	0:0	6	,
op	31:32	0:0	6	[
water	31:33	0:0	6	p_in_p
op	31:39	0:0	6	]
water	31:41	0:0	6	"+r"
water	31:46	0:0	6	(
water	31:47	0:0	6	p_in_p
water	31:53	0:0	6	)
water	31:54	0:0	6	,
op	31:56	0:0	6	[
water	31:57	0:0	6	p_in_m
op	31:63	0:0	6	]
water	31:65	0:0	6	"+r"
water	31:70	0:0	6	(
water	31:71	0:0	6	p_in_m
water	31:77	0:0	6	)
water	31:78	0:0	6	,
op	32:18	0:0	6	[
water	32:19	0:0	6	p_filter_coeffs_p
op	32:36	0:0	6	]
water	32:38	0:0	6	"+r"
water	32:43	0:0	6	(
water	32:44	0:0	6	p_filter_coeffs_p
water	32:61	0:0	6	)
water	32:62	0:0	6	,
op	33:18	0:0	6	[
water	33:19	0:0	6	in_val_p
op	33:27	0:0	6	]
water	33:29	0:0	6	"=&f"
water	33:35	0:0	6	(
water	33:36	0:0	6	in_val_p
water	33:44	0:0	6	)
water	33:45	0:0	6	,
op	33:47	0:0	6	[
water	33:48	0:0	6	in_val_m
op	33:56	0:0	6	]
water	33:58	0:0	6	"=&f"
water	33:64	0:0	6	(
water	33:65	0:0	6	in_val_m
water	33:73	0:0	6	)
water	33:74	0:0	6	,
op	34:18	0:0	6	[
water	34:19	0:0	6	fc_val_p
op	34:27	0:0	6	]
water	34:29	0:0	6	"=&f"
water	34:35	0:0	6	(
water	34:36	0:0	6	fc_val_p
water	34:44	0:0	6	)
water	34:45	0:0	6	,
op	34:47	0:0	6	[
water	34:48	0:0	6	fc_val_m
op	34:56	0:0	6	]
water	34:58	0:0	6	"=&f"
water	34:64	0:0	6	(
water	34:65	0:0	6	fc_val_m
water	34:73	0:0	6	)
water	34:74	0:0	6	,
op	35:18	0:0	6	[
water	35:19	0:0	6	p_filter_coeffs_m
op	35:36	0:0	6	]
water	35:38	0:0	6	"+r"
water	35:43	0:0	6	(
water	35:44	0:0	6	p_filter_coeffs_m
water	35:61	0:0	6	)
water	36:16	0:0	6	:
op	36:18	0:0	6	[
water	36:19	0:0	6	prec
op	36:23	0:0	6	]
water	36:25	0:0	6	"r"
water	36:29	0:0	6	(
water	36:30	0:0	6	prec
water	36:34	0:0	6	)
water	37:16	0:0	6	:
water	37:18	0:0	6	"memory"
water	38:12	0:0	6	)
water	38:13	0:0	6	;
water	39:8	0:0	6	}
water	40:8	0:0	4	out
op	40:11	0:0	4	[
water	40:12	0:0	4	n
op	40:13	0:0	4	]
op	40:15	0:0	4	=
water	40:17	0:0	4	v
water	40:18	0:0	4	;
water	41:4	0:0	4	}

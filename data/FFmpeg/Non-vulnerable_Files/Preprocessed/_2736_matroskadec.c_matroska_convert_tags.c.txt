func	1:0	32:0	0	static void	matroska_convert_tags
params	1:33	0:0	1	
param	1:34	1:52	2	AVFormatContext *	s
stmnts	0:0	31:4	1	
decl	3:4	3:49	2	MatroskaDemuxContext	*matroska
op	3:35	0:0	2	=
water	3:37	0:0	2	s
op	3:38	0:0	2	->
water	3:40	0:0	2	priv_data
decl	4:4	4:44	2	MatroskaTags	*tags
op	4:23	0:0	2	=
water	4:25	0:0	2	matroska
op	4:33	0:0	2	->
water	4:35	0:0	2	tags
op	4:39	0:0	2	.
water	4:40	0:0	2	elem
decl	5:4	5:12	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	j
for	6:4	31:4	2	(i = 0 ;i < matroska -> tags . nb_elem;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:35	3	i < matroska -> tags . nb_elem
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	matroska
op	6:28	0:0	4	->
water	6:30	0:0	4	tags
op	6:34	0:0	4	.
water	6:35	0:0	4	nb_elem
forexpr	6:44	6:45	3	i ++
water	6:44	0:0	4	i
op	6:45	0:0	4	++
stmts	6:49	31:4	3	
water	6:49	0:0	4	{
if	7:8	14:8	4	(tags [ i ] . target . attachuid)
cond	7:12	7:27	5	tags [ i ] . target . attachuid
water	7:12	0:0	6	tags
op	7:16	0:0	6	[
water	7:17	0:0	6	i
op	7:18	0:0	6	]
op	7:19	0:0	6	.
water	7:20	0:0	6	target
op	7:26	0:0	6	.
water	7:27	0:0	6	attachuid
stmts	7:38	14:8	5	
water	7:38	0:0	6	{
decl	8:12	8:71	6	MatroskaAttachment	*attachment
op	8:43	0:0	6	=
water	8:45	0:0	6	matroska
op	8:53	0:0	6	->
water	8:55	0:0	6	attachments
op	8:66	0:0	6	.
water	8:67	0:0	6	elem
for	9:12	13:79	6	(j = 0 ;j < matroska -> attachments . nb_elem;j ++)
forinit	9:17	9:22	7	j = 0 ;
water	9:17	0:0	8	j
op	9:19	0:0	8	=
water	9:21	0:0	8	0
water	9:22	0:0	8	;
cond	9:24	9:50	7	j < matroska -> attachments . nb_elem
water	9:24	0:0	8	j
op	9:26	0:0	8	<
water	9:28	0:0	8	matroska
op	9:36	0:0	8	->
water	9:38	0:0	8	attachments
op	9:49	0:0	8	.
water	9:50	0:0	8	nb_elem
forexpr	9:59	9:60	7	j ++
water	9:59	0:0	8	j
op	9:60	0:0	8	++
stmts	10:16	13:79	7	
if	10:16	13:79	8	(attachment [ j ] . uid == tags [ i ] . target . attachuid && attachment [ j ] . stream)
cond	10:20	11:34	9	attachment [ j ] . uid == tags [ i ] . target . attachuid && attachment [ j ] . stream
water	10:20	0:0	10	attachment
op	10:30	0:0	10	[
water	10:31	0:0	10	j
op	10:32	0:0	10	]
op	10:33	0:0	10	.
water	10:34	0:0	10	uid
op	10:38	0:0	10	==
water	10:41	0:0	10	tags
op	10:45	0:0	10	[
water	10:46	0:0	10	i
op	10:47	0:0	10	]
op	10:48	0:0	10	.
water	10:49	0:0	10	target
op	10:55	0:0	10	.
water	10:56	0:0	10	attachuid
op	10:66	0:0	10	&&
water	11:20	0:0	10	attachment
op	11:30	0:0	10	[
water	11:31	0:0	10	j
op	11:32	0:0	10	]
op	11:33	0:0	10	.
water	11:34	0:0	10	stream
stmts	12:20	13:79	9	
call	12:20	13:78	10	matroska_convert_tag
arg	12:41	12:42	11	s
water	12:41	0:0	12	s
arg	12:44	12:56	11	&tags[i].tag
op	12:44	0:0	12	&
water	12:45	0:0	12	tags
op	12:49	0:0	12	[
water	12:50	0:0	12	i
op	12:51	0:0	12	]
op	12:52	0:0	12	.
water	12:53	0:0	12	tag
arg	13:41	13:72	11	&attachment[j].stream->metadata
op	13:41	0:0	12	&
water	13:42	0:0	12	attachment
op	13:52	0:0	12	[
water	13:53	0:0	12	j
op	13:54	0:0	12	]
op	13:55	0:0	12	.
water	13:56	0:0	12	stream
op	13:62	0:0	12	->
water	13:64	0:0	12	metadata
arg	13:74	13:78	11	NULL
water	13:74	0:0	12	NULL
water	13:79	0:0	10	;
water	14:8	0:0	6	}
else	14:10	21:8	4
stmts	14:15	21:8	5	
if	14:15	21:8	6	(tags [ i ] . target . chapteruid)
cond	14:19	14:34	7	tags [ i ] . target . chapteruid
water	14:19	0:0	8	tags
op	14:23	0:0	8	[
water	14:24	0:0	8	i
op	14:25	0:0	8	]
op	14:26	0:0	8	.
water	14:27	0:0	8	target
op	14:33	0:0	8	.
water	14:34	0:0	8	chapteruid
stmts	14:46	21:8	7	
water	14:46	0:0	8	{
decl	15:12	15:62	8	MatroskaChapter	*chapter
op	15:37	0:0	8	=
water	15:39	0:0	8	matroska
op	15:47	0:0	8	->
water	15:49	0:0	8	chapters
op	15:57	0:0	8	.
water	15:58	0:0	8	elem
for	16:12	20:77	8	(j = 0 ;j < matroska -> chapters . nb_elem;j ++)
forinit	16:17	16:22	9	j = 0 ;
water	16:17	0:0	10	j
op	16:19	0:0	10	=
water	16:21	0:0	10	0
water	16:22	0:0	10	;
cond	16:24	16:47	9	j < matroska -> chapters . nb_elem
water	16:24	0:0	10	j
op	16:26	0:0	10	<
water	16:28	0:0	10	matroska
op	16:36	0:0	10	->
water	16:38	0:0	10	chapters
op	16:46	0:0	10	.
water	16:47	0:0	10	nb_elem
forexpr	16:56	16:57	9	j ++
water	16:56	0:0	10	j
op	16:57	0:0	10	++
stmts	17:16	20:77	9	
if	17:16	20:77	10	(chapter [ j ] . uid == tags [ i ] . target . chapteruid && chapter [ j ] . chapter)
cond	17:20	18:31	11	chapter [ j ] . uid == tags [ i ] . target . chapteruid && chapter [ j ] . chapter
water	17:20	0:0	12	chapter
op	17:27	0:0	12	[
water	17:28	0:0	12	j
op	17:29	0:0	12	]
op	17:30	0:0	12	.
water	17:31	0:0	12	uid
op	17:35	0:0	12	==
water	17:38	0:0	12	tags
op	17:42	0:0	12	[
water	17:43	0:0	12	i
op	17:44	0:0	12	]
op	17:45	0:0	12	.
water	17:46	0:0	12	target
op	17:52	0:0	12	.
water	17:53	0:0	12	chapteruid
op	17:64	0:0	12	&&
water	18:20	0:0	12	chapter
op	18:27	0:0	12	[
water	18:28	0:0	12	j
op	18:29	0:0	12	]
op	18:30	0:0	12	.
water	18:31	0:0	12	chapter
stmts	19:20	20:77	11	
call	19:20	20:76	12	matroska_convert_tag
arg	19:41	19:42	13	s
water	19:41	0:0	14	s
arg	19:44	19:56	13	&tags[i].tag
op	19:44	0:0	14	&
water	19:45	0:0	14	tags
op	19:49	0:0	14	[
water	19:50	0:0	14	i
op	19:51	0:0	14	]
op	19:52	0:0	14	.
water	19:53	0:0	14	tag
arg	20:41	20:70	13	&chapter[j].chapter->metadata
op	20:41	0:0	14	&
water	20:42	0:0	14	chapter
op	20:49	0:0	14	[
water	20:50	0:0	14	j
op	20:51	0:0	14	]
op	20:52	0:0	14	.
water	20:53	0:0	14	chapter
op	20:60	0:0	14	->
water	20:62	0:0	14	metadata
arg	20:72	20:76	13	NULL
water	20:72	0:0	14	NULL
water	20:77	0:0	12	;
water	21:8	0:0	8	}
else	21:10	27:8	4
stmts	21:15	27:8	5	
if	21:15	27:8	6	(tags [ i ] . target . trackuid)
cond	21:19	21:34	7	tags [ i ] . target . trackuid
water	21:19	0:0	8	tags
op	21:23	0:0	8	[
water	21:24	0:0	8	i
op	21:25	0:0	8	]
op	21:26	0:0	8	.
water	21:27	0:0	8	target
op	21:33	0:0	8	.
water	21:34	0:0	8	trackuid
stmts	21:44	27:8	7	
water	21:44	0:0	8	{
decl	22:12	22:56	8	MatroskaTrack	*track
op	22:33	0:0	8	=
water	22:35	0:0	8	matroska
op	22:43	0:0	8	->
water	22:45	0:0	8	tracks
op	22:51	0:0	8	.
water	22:52	0:0	8	elem
for	23:12	26:74	8	(j = 0 ;j < matroska -> tracks . nb_elem;j ++)
forinit	23:17	23:22	9	j = 0 ;
water	23:17	0:0	10	j
op	23:19	0:0	10	=
water	23:21	0:0	10	0
water	23:22	0:0	10	;
cond	23:24	23:45	9	j < matroska -> tracks . nb_elem
water	23:24	0:0	10	j
op	23:26	0:0	10	<
water	23:28	0:0	10	matroska
op	23:36	0:0	10	->
water	23:38	0:0	10	tracks
op	23:44	0:0	10	.
water	23:45	0:0	10	nb_elem
forexpr	23:54	23:55	9	j ++
water	23:54	0:0	10	j
op	23:55	0:0	10	++
stmts	24:16	26:74	9	
if	24:16	26:74	10	(track [ j ] . uid == tags [ i ] . target . trackuid && track [ j ] . stream)
cond	24:20	24:72	11	track [ j ] . uid == tags [ i ] . target . trackuid && track [ j ] . stream
water	24:20	0:0	12	track
op	24:25	0:0	12	[
water	24:26	0:0	12	j
op	24:27	0:0	12	]
op	24:28	0:0	12	.
water	24:29	0:0	12	uid
op	24:33	0:0	12	==
water	24:36	0:0	12	tags
op	24:40	0:0	12	[
water	24:41	0:0	12	i
op	24:42	0:0	12	]
op	24:43	0:0	12	.
water	24:44	0:0	12	target
op	24:50	0:0	12	.
water	24:51	0:0	12	trackuid
op	24:60	0:0	12	&&
water	24:63	0:0	12	track
op	24:68	0:0	12	[
water	24:69	0:0	12	j
op	24:70	0:0	12	]
op	24:71	0:0	12	.
water	24:72	0:0	12	stream
stmts	25:20	26:74	11	
call	25:20	26:73	12	matroska_convert_tag
arg	25:41	25:42	13	s
water	25:41	0:0	14	s
arg	25:44	25:56	13	&tags[i].tag
op	25:44	0:0	14	&
water	25:45	0:0	14	tags
op	25:49	0:0	14	[
water	25:50	0:0	14	i
op	25:51	0:0	14	]
op	25:52	0:0	14	.
water	25:53	0:0	14	tag
arg	26:41	26:67	13	&track[j].stream->metadata
op	26:41	0:0	14	&
water	26:42	0:0	14	track
op	26:47	0:0	14	[
water	26:48	0:0	14	j
op	26:49	0:0	14	]
op	26:50	0:0	14	.
water	26:51	0:0	14	stream
op	26:57	0:0	14	->
water	26:59	0:0	14	metadata
arg	26:69	26:73	13	NULL
water	26:69	0:0	14	NULL
water	26:74	0:0	12	;
water	27:8	0:0	8	}
else	27:10	30:8	4
stmts	27:15	30:8	5	
water	27:15	0:0	6	{
call	28:12	29:52	6	matroska_convert_tag
arg	28:33	28:34	7	s
water	28:33	0:0	8	s
arg	28:36	28:48	7	&tags[i].tag
op	28:36	0:0	8	&
water	28:37	0:0	8	tags
op	28:41	0:0	8	[
water	28:42	0:0	8	i
op	28:43	0:0	8	]
op	28:44	0:0	8	.
water	28:45	0:0	8	tag
arg	28:50	28:62	7	&s->metadata
op	28:50	0:0	8	&
water	28:51	0:0	8	s
op	28:52	0:0	8	->
water	28:54	0:0	8	metadata
arg	29:33	29:52	7	tags[i].target.type
water	29:33	0:0	8	tags
op	29:37	0:0	8	[
water	29:38	0:0	8	i
op	29:39	0:0	8	]
op	29:40	0:0	8	.
water	29:41	0:0	8	target
op	29:47	0:0	8	.
water	29:48	0:0	8	type
water	29:53	0:0	6	;
water	30:8	0:0	6	}
water	31:4	0:0	4	}

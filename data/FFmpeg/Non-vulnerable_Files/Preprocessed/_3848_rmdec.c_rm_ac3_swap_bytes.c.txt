func	1:0	13:0	0	static inline void	rm_ac3_swap_bytes
params	2:18	0:0	1	
param	2:19	2:31	2	AVStream *	st
param	2:33	2:46	2	AVPacket *	pkt
stmnts	0:0	12:4	1	
decl	4:4	4:16	2	uint8_t	*ptr
decl	5:4	5:9	2	int	j
if	6:4	12:4	2	(st -> codec -> codec_id == AV_CODEC_ID_AC3)
cond	6:8	6:31	3	st -> codec -> codec_id == AV_CODEC_ID_AC3
water	6:8	0:0	4	st
op	6:10	0:0	4	->
water	6:12	0:0	4	codec
op	6:17	0:0	4	->
water	6:19	0:0	4	codec_id
op	6:28	0:0	4	==
water	6:31	0:0	4	AV_CODEC_ID_AC3
stmts	6:48	12:4	3	
water	6:48	0:0	4	{
water	7:8	0:0	4	ptr
op	7:12	0:0	4	=
water	7:14	0:0	4	pkt
op	7:17	0:0	4	->
water	7:19	0:0	4	data
water	7:23	0:0	4	;
for	8:8	11:8	4	(j = 0 ;j < pkt -> size;j += 2)
forinit	8:13	8:16	5	j = 0 ;
water	8:13	0:0	6	j
op	8:14	0:0	6	=
water	8:15	0:0	6	0
water	8:16	0:0	6	;
cond	8:17	8:24	5	j < pkt -> size
water	8:17	0:0	6	j
op	8:18	0:0	6	<
water	8:19	0:0	6	pkt
op	8:22	0:0	6	->
water	8:24	0:0	6	size
forexpr	8:29	8:32	5	j += 2
water	8:29	0:0	6	j
op	8:30	0:0	6	+=
water	8:32	0:0	6	2
stmts	8:35	11:8	5	
water	8:35	0:0	6	{
call	9:12	9:38	6	FFSWAP
arg	9:19	9:22	7	int
water	9:19	0:0	8	int
arg	9:24	9:30	7	ptr[0]
water	9:24	0:0	8	ptr
op	9:27	0:0	8	[
water	9:28	0:0	8	0
op	9:29	0:0	8	]
arg	9:32	9:38	7	ptr[1]
water	9:32	0:0	8	ptr
op	9:35	0:0	8	[
water	9:36	0:0	8	1
op	9:37	0:0	8	]
water	9:39	0:0	6	;
water	10:12	0:0	6	ptr
op	10:16	0:0	6	+=
water	10:19	0:0	6	2
water	10:20	0:0	6	;
water	11:8	0:0	6	}
water	12:4	0:0	4	}

func	1:0	40:0	0	static int	decode_dynamic_range
params	1:31	0:0	1	
param	1:32	1:60	2	DynamicRangeControl *	che_drc
param	2:32	2:49	2	GetBitContext *	gb
stmnts	0:0	39:12	1	
decl	4:4	4:25	2	int	n
op	4:22	0:0	2	=
water	4:24	0:0	2	1
decl	5:4	5:25	2	int	drc_num_bands
op	5:22	0:0	2	=
water	5:24	0:0	2	1
decl	6:4	6:9	2	int	i
if	8:4	12:4	2	(get_bits1 (gb ))
cond	8:8	8:20	3	get_bits1 (gb )
call	8:8	8:20	4	get_bits1
arg	8:18	8:20	5	gb
water	8:18	0:0	6	gb
stmts	8:23	12:4	3	
water	8:23	0:0	4	{
water	9:8	0:0	4	che_drc
op	9:15	0:0	4	->
water	9:17	0:0	4	pce_instance_tag
op	9:35	0:0	4	=
call	9:37	9:51	4	get_bits
arg	9:46	9:48	5	gb
water	9:46	0:0	6	gb
arg	9:50	9:51	5	4
water	9:50	0:0	6	4
water	9:52	0:0	4	;
call	10:8	10:23	4	skip_bits
arg	10:18	10:20	5	gb
water	10:18	0:0	6	gb
arg	10:22	10:23	5	4
water	10:22	0:0	6	4
water	10:24	0:0	4	;
water	11:8	0:0	4	n
op	11:9	0:0	4	++
water	11:11	0:0	4	;
water	12:4	0:0	4	}
if	14:4	16:4	2	(get_bits1 (gb ))
cond	14:8	14:20	3	get_bits1 (gb )
call	14:8	14:20	4	get_bits1
arg	14:18	14:20	5	gb
water	14:18	0:0	6	gb
stmts	14:23	16:4	3	
water	14:23	0:0	4	{
water	15:8	0:0	4	n
op	15:10	0:0	4	+=
call	15:13	15:54	4	decode_drc_channel_exclusions
arg	15:43	15:50	5	che_drc
water	15:43	0:0	6	che_drc
arg	15:52	15:54	5	gb
water	15:52	0:0	6	gb
water	15:55	0:0	4	;
water	16:4	0:0	4	}
if	18:4	27:4	2	(get_bits1 (gb ))
cond	18:8	18:20	3	get_bits1 (gb )
call	18:8	18:20	4	get_bits1
arg	18:18	18:20	5	gb
water	18:18	0:0	6	gb
stmts	18:23	27:4	3	
water	18:23	0:0	4	{
water	19:8	0:0	4	che_drc
op	19:15	0:0	4	->
water	19:17	0:0	4	band_incr
op	19:38	0:0	4	=
call	19:40	19:54	4	get_bits
arg	19:49	19:51	5	gb
water	19:49	0:0	6	gb
arg	19:53	19:54	5	4
water	19:53	0:0	6	4
water	19:55	0:0	4	;
water	20:8	0:0	4	che_drc
op	20:15	0:0	4	->
water	20:17	0:0	4	interpolation_scheme
op	20:38	0:0	4	=
call	20:40	20:54	4	get_bits
arg	20:49	20:51	5	gb
water	20:49	0:0	6	gb
arg	20:53	20:54	5	4
water	20:53	0:0	6	4
water	20:55	0:0	4	;
water	21:8	0:0	4	n
op	21:9	0:0	4	++
water	21:11	0:0	4	;
water	22:8	0:0	4	drc_num_bands
op	22:22	0:0	4	+=
water	22:25	0:0	4	che_drc
op	22:32	0:0	4	->
water	22:34	0:0	4	band_incr
water	22:43	0:0	4	;
for	23:8	26:8	4	(i = 0 ;i < drc_num_bands;i ++)
forinit	23:13	23:18	5	i = 0 ;
water	23:13	0:0	6	i
op	23:15	0:0	6	=
water	23:17	0:0	6	0
water	23:18	0:0	6	;
cond	23:20	23:24	5	i < drc_num_bands
water	23:20	0:0	6	i
op	23:22	0:0	6	<
water	23:24	0:0	6	drc_num_bands
forexpr	23:39	23:40	5	i ++
water	23:39	0:0	6	i
op	23:40	0:0	6	++
stmts	23:44	26:8	5	
water	23:44	0:0	6	{
water	24:12	0:0	6	che_drc
op	24:19	0:0	6	->
water	24:21	0:0	6	band_top
op	24:29	0:0	6	[
water	24:30	0:0	6	i
op	24:31	0:0	6	]
op	24:33	0:0	6	=
call	24:35	24:49	6	get_bits
arg	24:44	24:46	7	gb
water	24:44	0:0	8	gb
arg	24:48	24:49	7	8
water	24:48	0:0	8	8
water	24:50	0:0	6	;
water	25:12	0:0	6	n
op	25:13	0:0	6	++
water	25:15	0:0	6	;
water	26:8	0:0	6	}
water	27:4	0:0	4	}
if	29:4	33:4	2	(get_bits1 (gb ))
cond	29:8	29:20	3	get_bits1 (gb )
call	29:8	29:20	4	get_bits1
arg	29:18	29:20	5	gb
water	29:18	0:0	6	gb
stmts	29:23	33:4	3	
water	29:23	0:0	4	{
water	30:8	0:0	4	che_drc
op	30:15	0:0	4	->
water	30:17	0:0	4	prog_ref_level
op	30:32	0:0	4	=
call	30:34	30:48	4	get_bits
arg	30:43	30:45	5	gb
water	30:43	0:0	6	gb
arg	30:47	30:48	5	7
water	30:47	0:0	6	7
water	30:49	0:0	4	;
call	31:8	31:21	4	skip_bits1
arg	31:19	31:21	5	gb
water	31:19	0:0	6	gb
water	31:22	0:0	4	;
water	32:8	0:0	4	n
op	32:9	0:0	4	++
water	32:11	0:0	4	;
water	33:4	0:0	4	}
for	34:4	38:4	2	(i = 0 ;i < drc_num_bands;i ++)
forinit	34:9	34:14	3	i = 0 ;
water	34:9	0:0	4	i
op	34:11	0:0	4	=
water	34:13	0:0	4	0
water	34:14	0:0	4	;
cond	34:16	34:20	3	i < drc_num_bands
water	34:16	0:0	4	i
op	34:18	0:0	4	<
water	34:20	0:0	4	drc_num_bands
forexpr	34:35	34:36	3	i ++
water	34:35	0:0	4	i
op	34:36	0:0	4	++
stmts	34:40	38:4	3	
water	34:40	0:0	4	{
water	35:8	0:0	4	che_drc
op	35:15	0:0	4	->
water	35:17	0:0	4	dyn_rng_sgn
op	35:28	0:0	4	[
water	35:29	0:0	4	i
op	35:30	0:0	4	]
op	35:32	0:0	4	=
call	35:34	35:46	4	get_bits1
arg	35:44	35:46	5	gb
water	35:44	0:0	6	gb
water	35:47	0:0	4	;
water	36:8	0:0	4	che_drc
op	36:15	0:0	4	->
water	36:17	0:0	4	dyn_rng_ctl
op	36:28	0:0	4	[
water	36:29	0:0	4	i
op	36:30	0:0	4	]
op	36:32	0:0	4	=
call	36:34	36:48	4	get_bits
arg	36:43	36:45	5	gb
water	36:43	0:0	6	gb
arg	36:47	36:48	5	7
water	36:47	0:0	6	7
water	36:49	0:0	4	;
water	37:8	0:0	4	n
op	37:9	0:0	4	++
water	37:11	0:0	4	;
water	38:4	0:0	4	}
return	39:4	39:12	2	n
water	39:11	0:0	3	n

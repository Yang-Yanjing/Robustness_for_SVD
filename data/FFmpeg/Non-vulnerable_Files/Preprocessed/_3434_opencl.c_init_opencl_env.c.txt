func	1:0	88:0	0	static int	init_opencl_env
params	1:26	0:0	1	
param	1:27	1:52	2	OpenclContext *	opencl_ctx
param	1:54	1:89	2	AVOpenCLExternalEnv *	ext_opencl_env
stmnts	0:0	87:14	1	
decl	3:4	3:17	2	cl_int	status
decl	4:4	4:32	2	cl_context_properties	cps[3]
decl	5:4	5:18	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:18	2	int	ret
op	5:15	0:0	2	=
water	5:17	0:0	2	0
decl	6:4	6:42	2	AVOpenCLDeviceNode	*device_node
op	6:36	0:0	2	=
water	6:38	0:0	2	NULL
if	7:4	16:4	2	(ext_opencl_env)
cond	7:8	7:8	3	ext_opencl_env
water	7:8	0:0	4	ext_opencl_env
stmts	7:24	16:4	3	
water	7:24	0:0	4	{
if	8:8	9:20	4	(opencl_ctx -> is_user_created)
cond	8:12	8:24	5	opencl_ctx -> is_user_created
water	8:12	0:0	6	opencl_ctx
op	8:22	0:0	6	->
water	8:24	0:0	6	is_user_created
stmts	9:12	9:20	5	
return	9:12	9:20	6	0
water	9:19	0:0	7	0
water	10:8	0:0	4	opencl_ctx
op	10:18	0:0	4	->
water	10:20	0:0	4	platform_id
op	10:36	0:0	4	=
water	10:38	0:0	4	ext_opencl_env
op	10:52	0:0	4	->
water	10:54	0:0	4	platform_id
water	10:65	0:0	4	;
water	11:8	0:0	4	opencl_ctx
op	11:18	0:0	4	->
water	11:20	0:0	4	is_user_created
op	11:36	0:0	4	=
water	11:38	0:0	4	1
water	11:39	0:0	4	;
water	12:8	0:0	4	opencl_ctx
op	12:18	0:0	4	->
water	12:20	0:0	4	command_queue
op	12:36	0:0	4	=
water	12:38	0:0	4	ext_opencl_env
op	12:52	0:0	4	->
water	12:54	0:0	4	command_queue
water	12:67	0:0	4	;
water	13:8	0:0	4	opencl_ctx
op	13:18	0:0	4	->
water	13:20	0:0	4	context
op	13:36	0:0	4	=
water	13:38	0:0	4	ext_opencl_env
op	13:52	0:0	4	->
water	13:54	0:0	4	context
water	13:61	0:0	4	;
water	14:8	0:0	4	opencl_ctx
op	14:18	0:0	4	->
water	14:20	0:0	4	device_id
op	14:36	0:0	4	=
water	14:38	0:0	4	ext_opencl_env
op	14:52	0:0	4	->
water	14:54	0:0	4	device_id
water	14:63	0:0	4	;
water	15:8	0:0	4	opencl_ctx
op	15:18	0:0	4	->
water	15:20	0:0	4	device_type
op	15:36	0:0	4	=
water	15:38	0:0	4	ext_opencl_env
op	15:52	0:0	4	->
water	15:54	0:0	4	device_type
water	15:65	0:0	4	;
water	16:4	0:0	4	}
else	16:6	86:4	2
stmts	16:11	86:4	3	
water	16:11	0:0	4	{
if	17:8	85:8	4	(! opencl_ctx -> is_user_created)
cond	17:12	17:25	5	! opencl_ctx -> is_user_created
op	17:12	0:0	6	!
water	17:13	0:0	6	opencl_ctx
op	17:23	0:0	6	->
water	17:25	0:0	6	is_user_created
stmts	17:42	85:8	5	
water	17:42	0:0	6	{
if	18:12	23:12	6	(! opencl_ctx -> device_list . platform_num)
cond	18:16	18:41	7	! opencl_ctx -> device_list . platform_num
op	18:16	0:0	8	!
water	18:17	0:0	8	opencl_ctx
op	18:27	0:0	8	->
water	18:29	0:0	8	device_list
op	18:40	0:0	8	.
water	18:41	0:0	8	platform_num
stmts	18:55	23:12	7	
water	18:55	0:0	8	{
water	19:16	0:0	8	ret
op	19:20	0:0	8	=
call	19:22	19:62	8	get_device_list
arg	19:38	19:62	9	&opencl_ctx->device_list
op	19:38	0:0	10	&
water	19:39	0:0	10	opencl_ctx
op	19:49	0:0	10	->
water	19:51	0:0	10	device_list
water	19:63	0:0	8	;
if	20:16	22:16	8	(ret < 0)
cond	20:20	20:26	9	ret < 0
water	20:20	0:0	10	ret
op	20:24	0:0	10	<
water	20:26	0:0	10	0
stmts	20:29	22:16	9	
water	20:29	0:0	10	{
return	21:20	21:30	10	ret
water	21:27	0:0	11	ret
water	22:16	0:0	10	}
water	23:12	0:0	8	}
if	24:12	35:12	6	(opencl_ctx -> platform_idx >= 0)
cond	24:16	24:44	7	opencl_ctx -> platform_idx >= 0
water	24:16	0:0	8	opencl_ctx
op	24:26	0:0	8	->
water	24:28	0:0	8	platform_idx
op	24:41	0:0	8	>=
water	24:44	0:0	8	0
stmts	24:47	35:12	7	
water	24:47	0:0	8	{
if	25:16	28:16	8	(opencl_ctx -> device_list . platform_num < opencl_ctx -> platform_idx + 1)
cond	25:20	25:86	9	opencl_ctx -> device_list . platform_num < opencl_ctx -> platform_idx + 1
water	25:20	0:0	10	opencl_ctx
op	25:30	0:0	10	->
water	25:32	0:0	10	device_list
op	25:43	0:0	10	.
water	25:44	0:0	10	platform_num
op	25:57	0:0	10	<
water	25:59	0:0	10	opencl_ctx
op	25:69	0:0	10	->
water	25:71	0:0	10	platform_idx
op	25:84	0:0	10	+
water	25:86	0:0	10	1
stmts	25:89	28:16	9	
water	25:89	0:0	10	{
call	26:20	26:90	10	av_log
arg	26:27	26:37	11	opencl_ctx
water	26:27	0:0	12	opencl_ctx
arg	26:39	26:51	11	AV_LOG_ERROR
water	26:39	0:0	12	AV_LOG_ERROR
arg	26:53	26:90	11	"User set platform index not exist\n"
water	26:53	0:0	12	"User set platform index not exist\n"
water	26:91	0:0	10	;
return	27:20	27:42	10	AVERROR(EINVAL)
call	27:27	27:41	11	AVERROR
arg	27:35	27:41	12	EINVAL
water	27:35	0:0	13	EINVAL
water	28:16	0:0	10	}
if	29:16	33:16	8	(! opencl_ctx -> device_list . platform_node [ opencl_ctx -> platform_idx ] -> device_num)
cond	29:20	29:86	9	! opencl_ctx -> device_list . platform_node [ opencl_ctx -> platform_idx ] -> device_num
op	29:20	0:0	10	!
water	29:21	0:0	10	opencl_ctx
op	29:31	0:0	10	->
water	29:33	0:0	10	device_list
op	29:44	0:0	10	.
water	29:45	0:0	10	platform_node
op	29:58	0:0	10	[
water	29:59	0:0	10	opencl_ctx
op	29:69	0:0	10	->
water	29:71	0:0	10	platform_idx
op	29:83	0:0	10	]
op	29:84	0:0	10	->
water	29:86	0:0	10	device_num
stmts	29:98	33:16	9	
water	29:98	0:0	10	{
call	30:20	31:51	10	av_log
arg	30:27	30:37	11	opencl_ctx
water	30:27	0:0	12	opencl_ctx
arg	30:39	30:51	11	AV_LOG_ERROR
water	30:39	0:0	12	AV_LOG_ERROR
arg	30:53	30:107	11	"No devices in user specific platform with index %d\n"
water	30:53	0:0	12	"No devices in user specific platform with index %d\n"
arg	31:27	31:51	11	opencl_ctx->platform_idx
water	31:27	0:0	12	opencl_ctx
op	31:37	0:0	12	->
water	31:39	0:0	12	platform_idx
water	31:52	0:0	10	;
return	32:20	32:42	10	AVERROR(EINVAL)
call	32:27	32:41	11	AVERROR
arg	32:35	32:41	12	EINVAL
water	32:35	0:0	13	EINVAL
water	33:16	0:0	10	}
water	34:16	0:0	8	opencl_ctx
op	34:26	0:0	8	->
water	34:28	0:0	8	platform_id
op	34:40	0:0	8	=
water	34:42	0:0	8	opencl_ctx
op	34:52	0:0	8	->
water	34:54	0:0	8	device_list
op	34:65	0:0	8	.
water	34:66	0:0	8	platform_node
op	34:79	0:0	8	[
water	34:80	0:0	8	opencl_ctx
op	34:90	0:0	8	->
water	34:92	0:0	8	platform_idx
op	34:104	0:0	8	]
op	34:105	0:0	8	->
water	34:107	0:0	8	platform_id
water	34:118	0:0	8	;
water	35:12	0:0	8	}
else	35:14	44:12	6
stmts	35:19	44:12	7	
water	35:19	0:0	8	{
for	37:16	43:16	8	(i = 0 ;i < opencl_ctx -> device_list . platform_num;i ++)
forinit	37:21	37:26	9	i = 0 ;
water	37:21	0:0	10	i
op	37:23	0:0	10	=
water	37:25	0:0	10	0
water	37:26	0:0	10	;
cond	37:28	37:56	9	i < opencl_ctx -> device_list . platform_num
water	37:28	0:0	10	i
op	37:30	0:0	10	<
water	37:32	0:0	10	opencl_ctx
op	37:42	0:0	10	->
water	37:44	0:0	10	device_list
op	37:55	0:0	10	.
water	37:56	0:0	10	platform_num
forexpr	37:70	37:71	9	i ++
water	37:70	0:0	10	i
op	37:71	0:0	10	++
stmts	37:75	43:16	9	
water	37:75	0:0	10	{
if	38:20	42:20	10	(opencl_ctx -> device_list . platform_node [ i ] -> device_num)
cond	38:24	38:66	11	opencl_ctx -> device_list . platform_node [ i ] -> device_num
water	38:24	0:0	12	opencl_ctx
op	38:34	0:0	12	->
water	38:36	0:0	12	device_list
op	38:47	0:0	12	.
water	38:48	0:0	12	platform_node
op	38:61	0:0	12	[
water	38:62	0:0	12	i
op	38:63	0:0	12	]
op	38:64	0:0	12	->
water	38:66	0:0	12	device_num
stmts	38:78	42:20	11	
water	38:78	0:0	12	{
water	39:24	0:0	12	opencl_ctx
op	39:34	0:0	12	->
water	39:36	0:0	12	platform_id
op	39:48	0:0	12	=
water	39:50	0:0	12	opencl_ctx
op	39:60	0:0	12	->
water	39:62	0:0	12	device_list
op	39:73	0:0	12	.
water	39:74	0:0	12	platform_node
op	39:87	0:0	12	[
water	39:88	0:0	12	i
op	39:89	0:0	12	]
op	39:90	0:0	12	->
water	39:92	0:0	12	platform_id
water	39:103	0:0	12	;
water	40:24	0:0	12	opencl_ctx
op	40:34	0:0	12	->
water	40:36	0:0	12	platform_idx
op	40:49	0:0	12	=
water	40:51	0:0	12	i
water	40:52	0:0	12	;
break	41:24	41:29	12	
water	42:20	0:0	12	}
water	43:16	0:0	10	}
water	44:12	0:0	8	}
if	45:12	48:12	6	(! opencl_ctx -> platform_id)
cond	45:16	45:29	7	! opencl_ctx -> platform_id
op	45:16	0:0	8	!
water	45:17	0:0	8	opencl_ctx
op	45:27	0:0	8	->
water	45:29	0:0	8	platform_id
stmts	45:42	48:12	7	
water	45:42	0:0	8	{
call	46:16	46:83	8	av_log
arg	46:23	46:33	9	opencl_ctx
water	46:23	0:0	10	opencl_ctx
arg	46:35	46:47	9	AV_LOG_ERROR
water	46:35	0:0	10	AV_LOG_ERROR
arg	46:49	46:83	9	"Could not get OpenCL platforms\n"
water	46:49	0:0	10	"Could not get OpenCL platforms\n"
water	46:84	0:0	8	;
return	47:16	47:39	8	AVERROR_EXTERNAL
water	47:23	0:0	9	AVERROR_EXTERNAL
water	48:12	0:0	8	}
if	50:12	56:12	6	(opencl_ctx -> device_idx >= 0)
cond	50:16	50:42	7	opencl_ctx -> device_idx >= 0
water	50:16	0:0	8	opencl_ctx
op	50:26	0:0	8	->
water	50:28	0:0	8	device_idx
op	50:39	0:0	8	>=
water	50:42	0:0	8	0
stmts	50:45	56:12	7	
water	50:45	0:0	8	{
if	51:16	55:16	8	(opencl_ctx -> device_list . platform_node [ opencl_ctx -> platform_idx ] -> device_num < opencl_ctx -> device_idx + 1)
cond	51:20	51:123	9	opencl_ctx -> device_list . platform_node [ opencl_ctx -> platform_idx ] -> device_num < opencl_ctx -> device_idx + 1
water	51:20	0:0	10	opencl_ctx
op	51:30	0:0	10	->
water	51:32	0:0	10	device_list
op	51:43	0:0	10	.
water	51:44	0:0	10	platform_node
op	51:57	0:0	10	[
water	51:58	0:0	10	opencl_ctx
op	51:68	0:0	10	->
water	51:70	0:0	10	platform_idx
op	51:82	0:0	10	]
op	51:83	0:0	10	->
water	51:85	0:0	10	device_num
op	51:96	0:0	10	<
water	51:98	0:0	10	opencl_ctx
op	51:108	0:0	10	->
water	51:110	0:0	10	device_idx
op	51:121	0:0	10	+
water	51:123	0:0	10	1
stmts	51:126	55:16	9	
water	51:126	0:0	10	{
call	52:20	53:116	10	av_log
arg	52:27	52:37	11	opencl_ctx
water	52:27	0:0	12	opencl_ctx
arg	52:39	52:51	11	AV_LOG_ERROR
water	52:39	0:0	12	AV_LOG_ERROR
arg	53:27	53:90	11	"Could not get OpenCL device idx %d in the user set platform\n"
water	53:27	0:0	12	"Could not get OpenCL device idx %d in the user set platform\n"
arg	53:92	53:116	11	opencl_ctx->platform_idx
water	53:92	0:0	12	opencl_ctx
op	53:102	0:0	12	->
water	53:104	0:0	12	platform_idx
water	53:117	0:0	10	;
return	54:20	54:42	10	AVERROR(EINVAL)
call	54:27	54:41	11	AVERROR
arg	54:35	54:41	12	EINVAL
water	54:35	0:0	13	EINVAL
water	55:16	0:0	10	}
water	56:12	0:0	8	}
else	56:14	58:12	6
stmts	56:19	58:12	7	
water	56:19	0:0	8	{
water	57:16	0:0	8	opencl_ctx
op	57:26	0:0	8	->
water	57:28	0:0	8	device_idx
op	57:39	0:0	8	=
water	57:41	0:0	8	0
water	57:42	0:0	8	;
water	58:12	0:0	8	}
water	59:12	0:0	6	device_node
op	59:24	0:0	6	=
water	59:26	0:0	6	opencl_ctx
op	59:36	0:0	6	->
water	59:38	0:0	6	device_list
op	59:49	0:0	6	.
water	59:50	0:0	6	platform_node
op	59:63	0:0	6	[
water	59:64	0:0	6	opencl_ctx
op	59:74	0:0	6	->
water	59:76	0:0	6	platform_idx
op	59:88	0:0	6	]
op	59:89	0:0	6	->
water	59:91	0:0	6	device_node
op	59:102	0:0	6	[
water	59:103	0:0	6	opencl_ctx
op	59:113	0:0	6	->
water	59:115	0:0	6	device_idx
op	59:125	0:0	6	]
water	59:126	0:0	6	;
water	60:12	0:0	6	opencl_ctx
op	60:22	0:0	6	->
water	60:24	0:0	6	device_id
op	60:34	0:0	6	=
water	60:36	0:0	6	device_node
op	60:47	0:0	6	->
water	60:49	0:0	6	device_id
water	60:58	0:0	6	;
water	61:12	0:0	6	opencl_ctx
op	61:22	0:0	6	->
water	61:24	0:0	6	device_type
op	61:36	0:0	6	=
water	61:38	0:0	6	device_node
op	61:49	0:0	6	->
water	61:51	0:0	6	device_type
water	61:62	0:0	6	;
call	65:12	67:43	6	av_log
arg	65:19	65:29	7	opencl_ctx
water	65:19	0:0	8	opencl_ctx
arg	65:31	65:45	7	AV_LOG_VERBOSE
water	65:31	0:0	8	AV_LOG_VERBOSE
arg	65:47	65:85	7	"Platform Name: %s, Device Name: %s\n"
water	65:47	0:0	8	"Platform Name: %s, Device Name: %s\n"
arg	66:19	66:97	7	opencl_ctx->device_list.platform_node[opencl_ctx->platform_idx]->platform_name
water	66:19	0:0	8	opencl_ctx
op	66:29	0:0	8	->
water	66:31	0:0	8	device_list
op	66:42	0:0	8	.
water	66:43	0:0	8	platform_node
op	66:56	0:0	8	[
water	66:57	0:0	8	opencl_ctx
op	66:67	0:0	8	->
water	66:69	0:0	8	platform_idx
op	66:81	0:0	8	]
op	66:82	0:0	8	->
water	66:84	0:0	8	platform_name
arg	67:19	67:43	7	device_node->device_name
water	67:19	0:0	8	device_node
op	67:30	0:0	8	->
water	67:32	0:0	8	device_name
water	67:44	0:0	6	;
water	68:12	0:0	6	cps
op	68:15	0:0	6	[
water	68:16	0:0	6	0
op	68:17	0:0	6	]
op	68:19	0:0	6	=
water	68:21	0:0	6	CL_CONTEXT_PLATFORM
water	68:40	0:0	6	;
water	69:12	0:0	6	cps
op	69:15	0:0	6	[
water	69:16	0:0	6	1
op	69:17	0:0	6	]
op	69:19	0:0	6	=
water	69:21	0:0	6	(
water	69:22	0:0	6	cl_context_properties
water	69:43	0:0	6	)
water	69:44	0:0	6	opencl_ctx
op	69:54	0:0	6	->
water	69:56	0:0	6	platform_id
water	69:67	0:0	6	;
water	70:12	0:0	6	cps
op	70:15	0:0	6	[
water	70:16	0:0	6	2
op	70:17	0:0	6	]
op	70:19	0:0	6	=
water	70:21	0:0	6	0
water	70:22	0:0	6	;
water	71:12	0:0	6	opencl_ctx
op	71:22	0:0	6	->
water	71:24	0:0	6	context
op	71:32	0:0	6	=
call	71:34	72:74	6	clCreateContextFromType
arg	71:58	71:61	7	cps
water	71:58	0:0	8	cps
arg	71:63	71:86	7	opencl_ctx->device_type
water	71:63	0:0	8	opencl_ctx
op	71:73	0:0	8	->
water	71:75	0:0	8	device_type
arg	72:55	72:59	7	NULL
water	72:55	0:0	8	NULL
arg	72:61	72:65	7	NULL
water	72:61	0:0	8	NULL
arg	72:67	72:74	7	&status
op	72:67	0:0	8	&
water	72:68	0:0	8	status
water	72:75	0:0	6	;
if	73:12	77:12	6	(status != CL_SUCCESS)
cond	73:16	73:26	7	status != CL_SUCCESS
water	73:16	0:0	8	status
op	73:23	0:0	8	!=
water	73:26	0:0	8	CL_SUCCESS
stmts	73:38	77:12	7	
water	73:38	0:0	8	{
call	74:16	75:102	8	av_log
arg	74:23	74:33	9	opencl_ctx
water	74:23	0:0	10	opencl_ctx
arg	74:35	74:47	9	AV_LOG_ERROR
water	74:35	0:0	10	AV_LOG_ERROR
arg	75:23	75:76	9	"Could not get OpenCL context from device type: %s\n"
water	75:23	0:0	10	"Could not get OpenCL context from device type: %s\n"
arg	75:78	75:102	9	av_opencl_errstr(status)
call	75:78	75:101	10	av_opencl_errstr
arg	75:95	75:101	11	status
water	75:95	0:0	12	status
water	75:103	0:0	8	;
return	76:16	76:39	8	AVERROR_EXTERNAL
water	76:23	0:0	9	AVERROR_EXTERNAL
water	77:12	0:0	8	}
water	78:12	0:0	6	opencl_ctx
op	78:22	0:0	6	->
water	78:24	0:0	6	command_queue
op	78:38	0:0	6	=
call	78:40	79:68	6	clCreateCommandQueue
arg	78:61	78:80	7	opencl_ctx->context
water	78:61	0:0	8	opencl_ctx
op	78:71	0:0	8	->
water	78:73	0:0	8	context
arg	78:82	78:103	7	opencl_ctx->device_id
water	78:82	0:0	8	opencl_ctx
op	78:92	0:0	8	->
water	78:94	0:0	8	device_id
arg	79:58	79:59	7	0
water	79:58	0:0	8	0
arg	79:61	79:68	7	&status
op	79:61	0:0	8	&
water	79:62	0:0	8	status
water	79:69	0:0	6	;
if	80:12	84:12	6	(status != CL_SUCCESS)
cond	80:16	80:26	7	status != CL_SUCCESS
water	80:16	0:0	8	status
op	80:23	0:0	8	!=
water	80:26	0:0	8	CL_SUCCESS
stmts	80:38	84:12	7	
water	80:38	0:0	8	{
call	81:16	82:94	8	av_log
arg	81:23	81:33	9	opencl_ctx
water	81:23	0:0	10	opencl_ctx
arg	81:35	81:47	9	AV_LOG_ERROR
water	81:35	0:0	10	AV_LOG_ERROR
arg	82:23	82:68	9	"Could not create OpenCL command queue: %s\n"
water	82:23	0:0	10	"Could not create OpenCL command queue: %s\n"
arg	82:70	82:94	9	av_opencl_errstr(status)
call	82:70	82:93	10	av_opencl_errstr
arg	82:87	82:93	11	status
water	82:87	0:0	12	status
water	82:95	0:0	8	;
return	83:16	83:39	8	AVERROR_EXTERNAL
water	83:23	0:0	9	AVERROR_EXTERNAL
water	84:12	0:0	8	}
water	85:8	0:0	6	}
water	86:4	0:0	4	}
return	87:4	87:14	2	ret
water	87:11	0:0	3	ret

func	1:0	36:0	0	static void	output_server_manifest
params	1:34	0:0	1	
param	1:35	1:56	2	struct Tracks *	tracks
param	1:58	1:78	2	const char *	basename
param	2:35	2:60	2	const char *	output_prefix
param	3:35	3:58	2	const char *	path_prefix
param	4:35	4:58	2	const char *	ismc_prefix
stmnts	0:0	35:15	1	
decl	6:4	6:23	2	char	filename[1000]
decl	7:4	7:13	2	FILE	*out
decl	8:4	8:9	2	int	i
call	9:4	9:76	2	snprintf
arg	9:13	9:21	3	filename
water	9:13	0:0	4	filename
arg	9:23	9:39	3	sizeof(filename)
op	9:23	0:0	4	sizeof
water	9:29	0:0	4	(
water	9:30	0:0	4	filename
water	9:38	0:0	4	)
arg	9:41	9:51	3	"%s%s.ism"
water	9:41	0:0	4	"%s%s.ism"
arg	9:53	9:66	3	output_prefix
water	9:53	0:0	4	output_prefix
arg	9:68	9:76	3	basename
water	9:68	0:0	4	basename
water	9:77	0:0	2	;
water	10:4	0:0	2	out
op	10:8	0:0	2	=
call	10:10	10:29	2	fopen
arg	10:16	10:24	3	filename
water	10:16	0:0	4	filename
arg	10:26	10:29	3	"w"
water	10:26	0:0	4	"w"
water	10:30	0:0	2	;
if	11:4	14:4	2	(! out)
cond	11:8	11:9	3	! out
op	11:8	0:0	4	!
water	11:9	0:0	4	out
stmts	11:14	14:4	3	
water	11:14	0:0	4	{
call	12:8	12:23	4	perror
arg	12:15	12:23	5	filename
water	12:15	0:0	6	filename
water	12:24	0:0	4	;
return	13:8	13:14	4	
water	14:4	0:0	4	}
call	15:4	15:63	2	fprintf
arg	15:12	15:15	3	out
water	15:12	0:0	4	out
arg	15:17	15:63	3	"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
water	15:17	0:0	4	"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
water	15:64	0:0	2	;
call	16:4	16:76	2	fprintf
arg	16:12	16:15	3	out
water	16:12	0:0	4	out
arg	16:17	16:76	3	"<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n"
water	16:17	0:0	4	"<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n"
water	16:77	0:0	2	;
call	17:4	17:29	2	fprintf
arg	17:12	17:15	3	out
water	17:12	0:0	4	out
arg	17:17	17:29	3	"\t<head>\n"
water	17:17	0:0	4	"\t<head>\n"
water	17:30	0:0	2	;
call	18:4	19:68	2	fprintf
arg	18:12	18:15	3	out
water	18:12	0:0	4	out
arg	18:17	19:45	3	"\t\t<meta name=\"clientManifestRelativePath\" ""content=\"%s%s.ismc\" />\n"
water	18:17	0:0	4	"\t\t<meta name=\"clientManifestRelativePath\" "
water	19:17	0:0	4	"content=\"%s%s.ismc\" />\n"
arg	19:47	19:58	3	ismc_prefix
water	19:47	0:0	4	ismc_prefix
arg	19:60	19:68	3	basename
water	19:60	0:0	4	basename
water	19:69	0:0	2	;
call	20:4	20:30	2	fprintf
arg	20:12	20:15	3	out
water	20:12	0:0	4	out
arg	20:17	20:30	3	"\t</head>\n"
water	20:17	0:0	4	"\t</head>\n"
water	20:31	0:0	2	;
call	21:4	21:29	2	fprintf
arg	21:12	21:15	3	out
water	21:12	0:0	4	out
arg	21:17	21:29	3	"\t<body>\n"
water	21:17	0:0	4	"\t<body>\n"
water	21:30	0:0	2	;
call	22:4	22:33	2	fprintf
arg	22:12	22:15	3	out
water	22:12	0:0	4	out
arg	22:17	22:33	3	"\t\t<switch>\n"
water	22:17	0:0	4	"\t\t<switch>\n"
water	22:34	0:0	2	;
for	23:4	31:4	2	(i = 0 ;i < tracks -> nb_tracks;i ++)
forinit	23:9	23:14	3	i = 0 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	0
water	23:14	0:0	4	;
cond	23:16	23:28	3	i < tracks -> nb_tracks
water	23:16	0:0	4	i
op	23:18	0:0	4	<
water	23:20	0:0	4	tracks
op	23:26	0:0	4	->
water	23:28	0:0	4	nb_tracks
forexpr	23:39	23:40	3	i ++
water	23:39	0:0	4	i
op	23:40	0:0	4	++
stmts	23:44	31:4	3	
water	23:44	0:0	4	{
decl	24:8	24:47	4	struct Track	*track
op	24:28	0:0	4	=
water	24:30	0:0	4	tracks
op	24:36	0:0	4	->
water	24:38	0:0	4	tracks
op	24:44	0:0	4	[
water	24:45	0:0	4	i
op	24:46	0:0	4	]
decl	25:8	25:65	4	const char	*type
op	25:28	0:0	4	=
water	25:30	0:0	4	track
op	25:35	0:0	4	->
water	25:37	0:0	4	is_video
water	25:46	0:0	4	?
water	25:48	0:0	4	"video"
water	25:56	0:0	4	:
water	25:58	0:0	4	"audio"
call	26:8	27:62	4	fprintf
arg	26:16	26:19	5	out
water	26:16	0:0	6	out
arg	26:21	26:69	5	"\t\t\t<%s src=\"%s%s\" systemBitrate=\"%d\">\n"
water	26:21	0:0	6	"\t\t\t<%s src=\"%s%s\" systemBitrate=\"%d\">\n"
arg	27:16	27:20	5	type
water	27:16	0:0	6	type
arg	27:22	27:33	5	path_prefix
water	27:22	0:0	6	path_prefix
arg	27:35	27:46	5	track->name
water	27:35	0:0	6	track
op	27:40	0:0	6	->
water	27:42	0:0	6	name
arg	27:48	27:62	5	track->bitrate
water	27:48	0:0	6	track
op	27:53	0:0	6	->
water	27:55	0:0	6	bitrate
water	27:63	0:0	4	;
call	28:8	29:63	4	fprintf
arg	28:16	28:19	5	out
water	28:16	0:0	6	out
arg	28:21	29:46	5	"\t\t\t\t<param name=\"trackID\" value=\"%d\" ""valueType=\"data\" />\n"
water	28:21	0:0	6	"\t\t\t\t<param name=\"trackID\" value=\"%d\" "
water	29:21	0:0	6	"valueType=\"data\" />\n"
arg	29:48	29:63	5	track->track_id
water	29:48	0:0	6	track
op	29:53	0:0	6	->
water	29:55	0:0	6	track_id
water	29:64	0:0	4	;
call	30:8	30:42	4	fprintf
arg	30:16	30:19	5	out
water	30:16	0:0	6	out
arg	30:21	30:36	5	"\t\t\t</%s>\n"
water	30:21	0:0	6	"\t\t\t</%s>\n"
arg	30:38	30:42	5	type
water	30:38	0:0	6	type
water	30:43	0:0	4	;
water	31:4	0:0	4	}
call	32:4	32:34	2	fprintf
arg	32:12	32:15	3	out
water	32:12	0:0	4	out
arg	32:17	32:34	3	"\t\t</switch>\n"
water	32:17	0:0	4	"\t\t</switch>\n"
water	32:35	0:0	2	;
call	33:4	33:30	2	fprintf
arg	33:12	33:15	3	out
water	33:12	0:0	4	out
arg	33:17	33:30	3	"\t</body>\n"
water	33:17	0:0	4	"\t</body>\n"
water	33:31	0:0	2	;
call	34:4	34:28	2	fprintf
arg	34:12	34:15	3	out
water	34:12	0:0	4	out
arg	34:17	34:28	3	"</smil>\n"
water	34:17	0:0	4	"</smil>\n"
water	34:29	0:0	2	;
call	35:4	35:14	2	fclose
arg	35:11	35:14	3	out
water	35:11	0:0	4	out
water	35:15	0:0	2	;

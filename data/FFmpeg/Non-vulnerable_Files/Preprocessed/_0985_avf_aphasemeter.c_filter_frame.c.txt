func	1:0	62:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	61:59	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:41	2	AudioPhaseMeterContext	*s
op	5:30	0:0	2	=
water	5:32	0:0	2	ctx
op	5:35	0:0	2	->
water	5:37	0:0	2	priv
decl	6:4	6:27	2	AVDictionary	**metadata
decl	7:4	7:33	2	const int	rc
op	7:17	0:0	2	=
water	7:19	0:0	2	s
op	7:20	0:0	2	->
water	7:22	0:0	2	contrast
op	7:30	0:0	2	[
water	7:31	0:0	2	0
op	7:32	0:0	2	]
decl	8:4	8:33	2	const int	gc
op	8:17	0:0	2	=
water	8:19	0:0	2	s
op	8:20	0:0	2	->
water	8:22	0:0	2	contrast
op	8:30	0:0	2	[
water	8:31	0:0	2	1
op	8:32	0:0	2	]
decl	9:4	9:33	2	const int	bc
op	9:17	0:0	2	=
water	9:19	0:0	2	s
op	9:20	0:0	2	->
water	9:22	0:0	2	contrast
op	9:30	0:0	2	[
water	9:31	0:0	2	2
op	9:32	0:0	2	]
decl	10:4	10:20	2	float	fphase
op	10:17	0:0	2	=
water	10:19	0:0	2	0
decl	11:4	11:16	2	AVFrame	*out
decl	12:4	12:16	2	uint8_t	*dst
decl	13:4	13:9	2	int	i
if	14:4	25:4	2	(! s -> out || s -> out -> width != outlink -> w || s -> out -> height != outlink -> h)
cond	14:8	15:46	3	! s -> out || s -> out -> width != outlink -> w || s -> out -> height != outlink -> h
op	14:8	0:0	4	!
water	14:9	0:0	4	s
op	14:10	0:0	4	->
water	14:12	0:0	4	out
op	14:16	0:0	4	||
water	14:19	0:0	4	s
op	14:20	0:0	4	->
water	14:22	0:0	4	out
op	14:25	0:0	4	->
water	14:27	0:0	4	width
op	14:34	0:0	4	!=
water	14:37	0:0	4	outlink
op	14:44	0:0	4	->
water	14:46	0:0	4	w
op	14:48	0:0	4	||
water	15:19	0:0	4	s
op	15:20	0:0	4	->
water	15:22	0:0	4	out
op	15:25	0:0	4	->
water	15:27	0:0	4	height
op	15:34	0:0	4	!=
water	15:37	0:0	4	outlink
op	15:44	0:0	4	->
water	15:46	0:0	4	h
stmts	15:49	25:4	3	
water	15:49	0:0	4	{
call	16:8	16:29	4	av_frame_free
arg	16:22	16:29	5	&s->out
op	16:22	0:0	6	&
water	16:23	0:0	6	s
op	16:24	0:0	6	->
water	16:26	0:0	6	out
water	16:30	0:0	4	;
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	out
op	17:15	0:0	4	=
call	17:17	17:68	4	ff_get_video_buffer
arg	17:37	17:44	5	outlink
water	17:37	0:0	6	outlink
arg	17:46	17:56	5	outlink->w
water	17:46	0:0	6	outlink
op	17:53	0:0	6	->
water	17:55	0:0	6	w
arg	17:58	17:68	5	outlink->h
water	17:58	0:0	6	outlink
op	17:65	0:0	6	->
water	17:67	0:0	6	h
water	17:69	0:0	4	;
if	18:8	21:8	4	(! s -> out)
cond	18:12	18:16	5	! s -> out
op	18:12	0:0	6	!
water	18:13	0:0	6	s
op	18:14	0:0	6	->
water	18:16	0:0	6	out
stmts	18:21	21:8	5	
water	18:21	0:0	6	{
call	19:12	19:29	6	av_frame_free
arg	19:26	19:29	7	&in
op	19:26	0:0	8	&
water	19:27	0:0	8	in
water	19:30	0:0	6	;
return	20:12	20:34	6	AVERROR(ENOMEM)
call	20:19	20:33	7	AVERROR
arg	20:27	20:33	8	ENOMEM
water	20:27	0:0	9	ENOMEM
water	21:8	0:0	6	}
water	22:8	0:0	4	out
op	22:12	0:0	4	=
water	22:14	0:0	4	s
op	22:15	0:0	4	->
water	22:17	0:0	4	out
water	22:20	0:0	4	;
for	23:8	24:74	4	(i = 0 ;i < outlink -> h;i ++)
forinit	23:13	23:18	5	i = 0 ;
water	23:13	0:0	6	i
op	23:15	0:0	6	=
water	23:17	0:0	6	0
water	23:18	0:0	6	;
cond	23:20	23:33	5	i < outlink -> h
water	23:20	0:0	6	i
op	23:22	0:0	6	<
water	23:24	0:0	6	outlink
op	23:31	0:0	6	->
water	23:33	0:0	6	h
forexpr	23:36	23:37	5	i ++
water	23:36	0:0	6	i
op	23:37	0:0	6	++
stmts	24:12	24:74	5	
call	24:12	24:73	6	memset
arg	24:19	24:54	7	out->data[0]+i*out->linesize[0]
water	24:19	0:0	8	out
op	24:22	0:0	8	->
water	24:24	0:0	8	data
op	24:28	0:0	8	[
water	24:29	0:0	8	0
op	24:30	0:0	8	]
op	24:32	0:0	8	+
water	24:34	0:0	8	i
op	24:36	0:0	8	*
water	24:38	0:0	8	out
op	24:41	0:0	8	->
water	24:43	0:0	8	linesize
op	24:51	0:0	8	[
water	24:52	0:0	8	0
op	24:53	0:0	8	]
arg	24:56	24:57	7	0
water	24:56	0:0	8	0
arg	24:59	24:73	7	outlink->w*4
water	24:59	0:0	8	outlink
op	24:66	0:0	8	->
water	24:68	0:0	8	w
op	24:70	0:0	8	*
water	24:72	0:0	8	4
water	24:74	0:0	6	;
water	25:4	0:0	4	}
else	25:6	33:4	2
stmts	25:11	33:4	3	
water	25:11	0:0	4	{
water	26:8	0:0	4	out
op	26:12	0:0	4	=
water	26:14	0:0	4	s
op	26:15	0:0	4	->
water	26:17	0:0	4	out
water	26:20	0:0	4	;
for	27:8	30:35	4	(i = outlink -> h - 1 ;i >= 10;i --)
forinit	27:13	27:31	5	i = outlink -> h - 1 ;
water	27:13	0:0	6	i
op	27:15	0:0	6	=
water	27:17	0:0	6	outlink
op	27:24	0:0	6	->
water	27:26	0:0	6	h
op	27:28	0:0	6	-
water	27:30	0:0	6	1
water	27:31	0:0	6	;
cond	27:33	27:38	5	i >= 10
water	27:33	0:0	6	i
op	27:35	0:0	6	>=
water	27:38	0:0	6	10
forexpr	27:42	27:43	5	i --
water	27:42	0:0	6	i
op	27:43	0:0	6	--
stmts	28:12	30:35	5	
call	28:12	30:34	6	memmove
arg	28:20	28:59	7	out->data[0]+(i)*out->linesize[0]
water	28:20	0:0	8	out
op	28:23	0:0	8	->
water	28:25	0:0	8	data
op	28:29	0:0	8	[
water	28:30	0:0	8	0
op	28:31	0:0	8	]
op	28:33	0:0	8	+
water	28:35	0:0	8	(
water	28:36	0:0	8	i
water	28:39	0:0	8	)
op	28:41	0:0	8	*
water	28:43	0:0	8	out
op	28:46	0:0	8	->
water	28:48	0:0	8	linesize
op	28:56	0:0	8	[
water	28:57	0:0	8	0
op	28:58	0:0	8	]
arg	29:20	29:59	7	out->data[0]+(i-1)*out->linesize[0]
water	29:20	0:0	8	out
op	29:23	0:0	8	->
water	29:25	0:0	8	data
op	29:29	0:0	8	[
water	29:30	0:0	8	0
op	29:31	0:0	8	]
op	29:33	0:0	8	+
water	29:35	0:0	8	(
water	29:36	0:0	8	i
op	29:37	0:0	8	-
water	29:38	0:0	8	1
water	29:39	0:0	8	)
op	29:41	0:0	8	*
water	29:43	0:0	8	out
op	29:46	0:0	8	->
water	29:48	0:0	8	linesize
op	29:56	0:0	8	[
water	29:57	0:0	8	0
op	29:58	0:0	8	]
arg	30:20	30:34	7	outlink->w*4
water	30:20	0:0	8	outlink
op	30:27	0:0	8	->
water	30:29	0:0	8	w
op	30:31	0:0	8	*
water	30:33	0:0	8	4
water	30:35	0:0	6	;
for	31:8	32:44	4	(i = 0 ;i < outlink -> w;i ++)
forinit	31:13	31:18	5	i = 0 ;
water	31:13	0:0	6	i
op	31:15	0:0	6	=
water	31:17	0:0	6	0
water	31:18	0:0	6	;
cond	31:20	31:33	5	i < outlink -> w
water	31:20	0:0	6	i
op	31:22	0:0	6	<
water	31:24	0:0	6	outlink
op	31:31	0:0	6	->
water	31:33	0:0	6	w
forexpr	31:36	31:37	5	i ++
water	31:36	0:0	6	i
op	31:37	0:0	6	++
stmts	32:12	32:44	5	
call	32:12	32:43	6	AV_WL32
arg	32:20	32:40	7	out->data[0]+i*4
water	32:20	0:0	8	out
op	32:23	0:0	8	->
water	32:25	0:0	8	data
op	32:29	0:0	8	[
water	32:30	0:0	8	0
op	32:31	0:0	8	]
op	32:33	0:0	8	+
water	32:35	0:0	8	i
op	32:37	0:0	8	*
water	32:39	0:0	8	4
arg	32:42	32:43	7	0
water	32:42	0:0	8	0
water	32:44	0:0	6	;
water	33:4	0:0	4	}
water	34:4	0:0	2	s
op	34:5	0:0	2	->
water	34:7	0:0	2	out
op	34:10	0:0	2	->
water	34:12	0:0	2	pts
op	34:16	0:0	2	=
water	34:18	0:0	2	in
op	34:20	0:0	2	->
water	34:22	0:0	2	pts
water	34:25	0:0	2	;
for	35:4	46:4	2	(i = 0 ;i < in -> nb_samples;i ++)
forinit	35:9	35:14	3	i = 0 ;
water	35:9	0:0	4	i
op	35:11	0:0	4	=
water	35:13	0:0	4	0
water	35:14	0:0	4	;
cond	35:16	35:24	3	i < in -> nb_samples
water	35:16	0:0	4	i
op	35:18	0:0	4	<
water	35:20	0:0	4	in
op	35:22	0:0	4	->
water	35:24	0:0	4	nb_samples
forexpr	35:36	35:37	3	i ++
water	35:36	0:0	4	i
op	35:37	0:0	4	++
stmts	35:41	46:4	3	
water	35:41	0:0	4	{
decl	36:8	36:55	4	const float	*src
op	36:25	0:0	4	=
water	36:27	0:0	4	(
water	36:28	0:0	4	float
op	36:34	0:0	4	*
water	36:35	0:0	4	)
water	36:36	0:0	4	in
op	36:38	0:0	4	->
water	36:40	0:0	4	data
op	36:44	0:0	4	[
water	36:45	0:0	4	0
op	36:46	0:0	4	]
op	36:48	0:0	4	+
water	36:50	0:0	4	i
op	36:52	0:0	4	*
water	36:54	0:0	4	2
decl	37:8	37:79	4	const float	f
op	37:22	0:0	4	=
water	37:24	0:0	4	src
op	37:27	0:0	4	[
water	37:28	0:0	4	0
op	37:29	0:0	4	]
op	37:31	0:0	4	*
water	37:33	0:0	4	src
op	37:36	0:0	4	[
water	37:37	0:0	4	1
op	37:38	0:0	4	]
op	37:40	0:0	4	/
water	37:42	0:0	4	(
water	37:43	0:0	4	src
op	37:46	0:0	4	[
water	37:47	0:0	4	0
op	37:48	0:0	4	]
op	37:49	0:0	4	*
water	37:50	0:0	4	src
op	37:53	0:0	4	[
water	37:54	0:0	4	0
op	37:55	0:0	4	]
op	37:57	0:0	4	+
water	37:59	0:0	4	src
op	37:62	0:0	4	[
water	37:63	0:0	4	1
op	37:64	0:0	4	]
op	37:66	0:0	4	*
water	37:68	0:0	4	src
op	37:71	0:0	4	[
water	37:72	0:0	4	1
op	37:73	0:0	4	]
water	37:74	0:0	4	)
op	37:76	0:0	4	*
water	37:78	0:0	4	2
decl	38:8	38:44	4	const float	phase
op	38:26	0:0	4	=
call	38:28	38:35	5	isnan
arg	38:34	38:35	6	f
water	38:34	0:0	7	f
water	38:37	0:0	4	?
water	38:39	0:0	4	1
water	38:41	0:0	4	:
water	38:43	0:0	4	f
decl	39:8	39:40	4	const int	x
op	39:20	0:0	4	=
call	39:22	39:39	5	get_x
arg	39:28	39:33	6	phase
water	39:28	0:0	7	phase
arg	39:35	39:39	6	s->w
water	39:35	0:0	7	s
op	39:36	0:0	7	->
water	39:38	0:0	7	w
water	40:8	0:0	4	dst
op	40:12	0:0	4	=
water	40:14	0:0	4	out
op	40:17	0:0	4	->
water	40:19	0:0	4	data
op	40:23	0:0	4	[
water	40:24	0:0	4	0
op	40:25	0:0	4	]
op	40:27	0:0	4	+
water	40:29	0:0	4	x
op	40:31	0:0	4	*
water	40:33	0:0	4	4
water	40:34	0:0	4	;
water	41:8	0:0	4	dst
op	41:11	0:0	4	[
water	41:12	0:0	4	0
op	41:13	0:0	4	]
op	41:15	0:0	4	=
call	41:17	41:39	4	FFMIN
arg	41:23	41:26	5	255
water	41:23	0:0	6	255
arg	41:28	41:39	5	dst[0]+rc
water	41:28	0:0	6	dst
op	41:31	0:0	6	[
water	41:32	0:0	6	0
op	41:33	0:0	6	]
op	41:35	0:0	6	+
water	41:37	0:0	6	rc
water	41:40	0:0	4	;
water	42:8	0:0	4	dst
op	42:11	0:0	4	[
water	42:12	0:0	4	1
op	42:13	0:0	4	]
op	42:15	0:0	4	=
call	42:17	42:39	4	FFMIN
arg	42:23	42:26	5	255
water	42:23	0:0	6	255
arg	42:28	42:39	5	dst[1]+gc
water	42:28	0:0	6	dst
op	42:31	0:0	6	[
water	42:32	0:0	6	1
op	42:33	0:0	6	]
op	42:35	0:0	6	+
water	42:37	0:0	6	gc
water	42:40	0:0	4	;
water	43:8	0:0	4	dst
op	43:11	0:0	4	[
water	43:12	0:0	4	2
op	43:13	0:0	4	]
op	43:15	0:0	4	=
call	43:17	43:39	4	FFMIN
arg	43:23	43:26	5	255
water	43:23	0:0	6	255
arg	43:28	43:39	5	dst[2]+bc
water	43:28	0:0	6	dst
op	43:31	0:0	6	[
water	43:32	0:0	6	2
op	43:33	0:0	6	]
op	43:35	0:0	6	+
water	43:37	0:0	6	bc
water	43:40	0:0	4	;
water	44:8	0:0	4	dst
op	44:11	0:0	4	[
water	44:12	0:0	4	3
op	44:13	0:0	4	]
op	44:15	0:0	4	=
water	44:17	0:0	4	255
water	44:20	0:0	4	;
water	45:8	0:0	4	fphase
op	45:15	0:0	4	+=
water	45:18	0:0	4	phase
water	45:23	0:0	4	;
water	46:4	0:0	4	}
water	47:4	0:0	2	fphase
op	47:11	0:0	2	/=
water	47:14	0:0	2	in
op	47:16	0:0	2	->
water	47:18	0:0	2	nb_samples
water	47:28	0:0	2	;
if	48:4	51:4	2	(s -> draw_median_phase)
cond	48:8	48:11	3	s -> draw_median_phase
water	48:8	0:0	4	s
op	48:9	0:0	4	->
water	48:11	0:0	4	draw_median_phase
stmts	48:30	51:4	3	
water	48:30	0:0	4	{
water	49:8	0:0	4	dst
op	49:12	0:0	4	=
water	49:14	0:0	4	out
op	49:17	0:0	4	->
water	49:19	0:0	4	data
op	49:23	0:0	4	[
water	49:24	0:0	4	0
op	49:25	0:0	4	]
op	49:27	0:0	4	+
call	49:29	49:47	4	get_x
arg	49:35	49:41	5	fphase
water	49:35	0:0	6	fphase
arg	49:43	49:47	5	s->w
water	49:43	0:0	6	s
op	49:44	0:0	6	->
water	49:46	0:0	6	w
op	49:49	0:0	4	*
water	49:51	0:0	4	4
water	49:52	0:0	4	;
call	50:8	50:36	4	AV_WL32
arg	50:16	50:19	5	dst
water	50:16	0:0	6	dst
arg	50:21	50:36	5	AV_RL32(s->mpc)
call	50:21	50:35	6	AV_RL32
arg	50:29	50:35	7	s->mpc
water	50:29	0:0	8	s
op	50:30	0:0	8	->
water	50:32	0:0	8	mpc
water	50:37	0:0	4	;
water	51:4	0:0	4	}
for	52:4	53:81	2	(i = 1 ;i < 10 && i < outlink -> h;i ++)
forinit	52:9	52:14	3	i = 1 ;
water	52:9	0:0	4	i
op	52:11	0:0	4	=
water	52:13	0:0	4	1
water	52:14	0:0	4	;
cond	52:16	52:39	3	i < 10 && i < outlink -> h
water	52:16	0:0	4	i
op	52:18	0:0	4	<
water	52:20	0:0	4	10
op	52:23	0:0	4	&&
water	52:26	0:0	4	i
op	52:28	0:0	4	<
water	52:30	0:0	4	outlink
op	52:37	0:0	4	->
water	52:39	0:0	4	h
forexpr	52:42	52:43	3	i ++
water	52:42	0:0	4	i
op	52:43	0:0	4	++
stmts	53:8	53:81	3	
call	53:8	53:80	4	memcpy
arg	53:15	53:50	5	out->data[0]+i*out->linesize[0]
water	53:15	0:0	6	out
op	53:18	0:0	6	->
water	53:20	0:0	6	data
op	53:24	0:0	6	[
water	53:25	0:0	6	0
op	53:26	0:0	6	]
op	53:28	0:0	6	+
water	53:30	0:0	6	i
op	53:32	0:0	6	*
water	53:34	0:0	6	out
op	53:37	0:0	6	->
water	53:39	0:0	6	linesize
op	53:47	0:0	6	[
water	53:48	0:0	6	0
op	53:49	0:0	6	]
arg	53:52	53:64	5	out->data[0]
water	53:52	0:0	6	out
op	53:55	0:0	6	->
water	53:57	0:0	6	data
op	53:61	0:0	6	[
water	53:62	0:0	6	0
op	53:63	0:0	6	]
arg	53:66	53:80	5	outlink->w*4
water	53:66	0:0	6	outlink
op	53:73	0:0	6	->
water	53:75	0:0	6	w
op	53:77	0:0	6	*
water	53:79	0:0	6	4
water	53:81	0:0	4	;
water	54:4	0:0	2	metadata
op	54:13	0:0	2	=
call	54:15	54:45	2	avpriv_frame_get_metadatap
arg	54:42	54:45	3	out
water	54:42	0:0	4	out
water	54:46	0:0	2	;
if	55:4	59:4	2	(metadata)
cond	55:8	55:8	3	metadata
water	55:8	0:0	4	metadata
stmts	55:18	59:4	3	
water	55:18	0:0	4	{
decl	56:8	56:26	4	uint8_t	value[128]
call	57:8	57:51	4	snprintf
arg	57:17	57:22	5	value
water	57:17	0:0	6	value
arg	57:24	57:37	5	sizeof(value)
op	57:24	0:0	6	sizeof
water	57:30	0:0	6	(
water	57:31	0:0	6	value
water	57:36	0:0	6	)
arg	57:39	57:43	5	"%f"
water	57:39	0:0	6	"%f"
arg	57:45	57:51	5	fphase
water	57:45	0:0	6	fphase
water	57:52	0:0	4	;
call	58:8	58:65	4	av_dict_set
arg	58:20	58:28	5	metadata
water	58:20	0:0	6	metadata
arg	58:30	58:55	5	"lavfi.aphasemeter.phase"
water	58:30	0:0	6	"lavfi.aphasemeter.phase"
arg	58:57	58:62	5	value
water	58:57	0:0	6	value
arg	58:64	58:65	5	0
water	58:64	0:0	6	0
water	58:66	0:0	4	;
water	59:4	0:0	4	}
call	60:4	60:21	2	av_frame_free
arg	60:18	60:21	3	&in
op	60:18	0:0	4	&
water	60:19	0:0	4	in
water	60:22	0:0	2	;
return	61:4	61:59	2	ff_filter_frame(outlink,av_frame_clone(s->out))
call	61:11	61:58	3	ff_filter_frame
arg	61:27	61:34	4	outlink
water	61:27	0:0	5	outlink
arg	61:36	61:58	4	av_frame_clone(s->out)
call	61:36	61:57	5	av_frame_clone
arg	61:51	61:57	6	s->out
water	61:51	0:0	7	s
op	61:52	0:0	7	->
water	61:54	0:0	7	out

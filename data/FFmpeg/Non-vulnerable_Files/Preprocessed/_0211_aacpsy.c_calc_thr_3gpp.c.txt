func	1:0	22:0	0	static void	calc_thr_3gpp
params	1:25	0:0	1	
param	1:26	1:51	2	const FFPsyWindowInfo *	wi
param	1:53	1:72	2	const int	num_bands
param	1:74	1:92	2	AacPsyChannel *	pch
param	2:26	2:51	2	const uint8_t *	band_sizes
param	2:53	2:71	2	const float *	coefs
stmnts	0:0	21:4	1	
decl	4:4	4:15	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:15	2	int	w
water	4:12	0:0	2	,
decl	4:4	4:15	2	int	g
decl	5:4	5:17	2	int	start
op	5:14	0:0	2	=
water	5:16	0:0	2	0
for	6:4	21:4	2	(w = 0 ;w < wi -> num_windows * 16;w += 16)
forinit	6:9	6:14	3	w = 0 ;
water	6:9	0:0	4	w
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:36	3	w < wi -> num_windows * 16
water	6:16	0:0	4	w
op	6:18	0:0	4	<
water	6:20	0:0	4	wi
op	6:22	0:0	4	->
water	6:24	0:0	4	num_windows
op	6:35	0:0	4	*
water	6:36	0:0	4	16
forexpr	6:40	6:45	3	w += 16
water	6:40	0:0	4	w
op	6:42	0:0	4	+=
water	6:45	0:0	4	16
stmts	6:49	21:4	3	
water	6:49	0:0	4	{
for	7:8	20:8	4	(g = 0 ;g < num_bands;g ++)
forinit	7:13	7:18	5	g = 0 ;
water	7:13	0:0	6	g
op	7:15	0:0	6	=
water	7:17	0:0	6	0
water	7:18	0:0	6	;
cond	7:20	7:24	5	g < num_bands
water	7:20	0:0	6	g
op	7:22	0:0	6	<
water	7:24	0:0	6	num_bands
forexpr	7:35	7:36	5	g ++
water	7:35	0:0	6	g
op	7:36	0:0	6	++
stmts	7:40	20:8	5	
water	7:40	0:0	6	{
decl	8:12	8:46	6	AacPsyBand	*band
op	8:29	0:0	6	=
op	8:31	0:0	6	&
water	8:32	0:0	6	pch
op	8:35	0:0	6	->
water	8:37	0:0	6	band
op	8:41	0:0	6	[
water	8:42	0:0	6	w
op	8:43	0:0	6	+
water	8:44	0:0	6	g
op	8:45	0:0	6	]
decl	9:12	9:36	6	float	form_factor
op	9:30	0:0	6	=
water	9:32	0:0	6	0
op	9:33	0:0	6	.
water	9:34	0:0	6	0
water	9:35	0:0	6	f
decl	10:12	10:22	6	float	Temp
water	11:12	0:0	6	band
op	11:16	0:0	6	->
water	11:18	0:0	6	energy
op	11:25	0:0	6	=
water	11:27	0:0	6	0
op	11:28	0:0	6	.
water	11:29	0:0	6	0
water	11:30	0:0	6	f
water	11:31	0:0	6	;
for	12:12	15:12	6	(i = 0 ;i < band_sizes [ g ];i ++)
forinit	12:17	12:22	7	i = 0 ;
water	12:17	0:0	8	i
op	12:19	0:0	8	=
water	12:21	0:0	8	0
water	12:22	0:0	8	;
cond	12:24	12:40	7	i < band_sizes [ g ]
water	12:24	0:0	8	i
op	12:26	0:0	8	<
water	12:28	0:0	8	band_sizes
op	12:38	0:0	8	[
water	12:39	0:0	8	g
op	12:40	0:0	8	]
forexpr	12:43	12:44	7	i ++
water	12:43	0:0	8	i
op	12:44	0:0	8	++
stmts	12:48	15:12	7	
water	12:48	0:0	8	{
water	13:16	0:0	8	band
op	13:20	0:0	8	->
water	13:22	0:0	8	energy
op	13:29	0:0	8	+=
water	13:32	0:0	8	coefs
op	13:37	0:0	8	[
water	13:38	0:0	8	start
op	13:43	0:0	8	+
water	13:44	0:0	8	i
op	13:45	0:0	8	]
op	13:47	0:0	8	*
water	13:49	0:0	8	coefs
op	13:54	0:0	8	[
water	13:55	0:0	8	start
op	13:60	0:0	8	+
water	13:61	0:0	8	i
op	13:62	0:0	8	]
water	13:63	0:0	8	;
water	14:16	0:0	8	form_factor
op	14:29	0:0	8	+=
call	14:32	14:58	8	sqrtf
arg	14:38	14:58	9	fabs(coefs[start+i])
call	14:38	14:57	10	fabs
arg	14:43	14:57	11	coefs[start+i]
water	14:43	0:0	12	coefs
op	14:48	0:0	12	[
water	14:49	0:0	12	start
op	14:54	0:0	12	+
water	14:55	0:0	12	i
op	14:56	0:0	12	]
water	14:59	0:0	8	;
water	15:12	0:0	8	}
water	16:12	0:0	6	Temp
op	16:17	0:0	6	=
water	16:19	0:0	6	band
op	16:23	0:0	6	->
water	16:25	0:0	6	energy
op	16:32	0:0	6	>
water	16:34	0:0	6	0
water	16:36	0:0	6	?
call	16:38	16:79	6	sqrtf
arg	16:44	16:79	7	(float)band_sizes[g]/band->energy
water	16:44	0:0	8	(
water	16:45	0:0	8	float
water	16:50	0:0	8	)
water	16:51	0:0	8	band_sizes
op	16:61	0:0	8	[
water	16:62	0:0	8	g
op	16:63	0:0	8	]
op	16:65	0:0	8	/
water	16:67	0:0	8	band
op	16:71	0:0	8	->
water	16:73	0:0	8	energy
water	16:81	0:0	6	:
water	16:83	0:0	6	0
water	16:84	0:0	6	;
water	17:12	0:0	6	band
op	17:16	0:0	6	->
water	17:18	0:0	6	thr
op	17:27	0:0	6	=
water	17:29	0:0	6	band
op	17:33	0:0	6	->
water	17:35	0:0	6	energy
op	17:42	0:0	6	*
water	17:44	0:0	6	0
op	17:45	0:0	6	.
water	17:46	0:0	6	001258925
water	17:55	0:0	6	f
water	17:56	0:0	6	;
water	18:12	0:0	6	band
op	18:16	0:0	6	->
water	18:18	0:0	6	nz_lines
op	18:27	0:0	6	=
water	18:29	0:0	6	form_factor
call	18:41	18:53	6	*sqrtf
arg	18:49	18:53	7	Temp
water	18:49	0:0	8	Temp
water	18:54	0:0	6	;
water	19:12	0:0	6	start
op	19:18	0:0	6	+=
water	19:21	0:0	6	band_sizes
op	19:31	0:0	6	[
water	19:32	0:0	6	g
op	19:33	0:0	6	]
water	19:34	0:0	6	;
water	20:8	0:0	6	}
water	21:4	0:0	4	}

func	1:0	14:0	0	static int	request_frame
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	13:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:40	2	AlphaMergeContext	*merge
op	4:29	0:0	2	=
water	4:31	0:0	2	ctx
op	4:34	0:0	2	->
water	4:36	0:0	2	priv
decl	5:4	5:15	2	int	in
water	5:10	0:0	2	,
decl	5:4	5:15	2	int	ret
water	6:4	0:0	2	merge
op	6:9	0:0	2	->
water	6:11	0:0	2	frame_requested
op	6:27	0:0	2	=
water	6:29	0:0	2	1
water	6:30	0:0	2	;
while	7:4	12:4	2	(merge -> frame_requested)
cond	7:11	7:18	3	merge -> frame_requested
water	7:11	0:0	4	merge
op	7:16	0:0	4	->
water	7:18	0:0	4	frame_requested
stmts	7:35	12:4	3	
water	7:35	0:0	4	{
water	8:8	0:0	4	in
op	8:11	0:0	4	=
call	8:13	8:51	4	ff_bufqueue_peek
arg	8:30	8:48	5	&merge->queue_main
op	8:30	0:0	6	&
water	8:31	0:0	6	merge
op	8:36	0:0	6	->
water	8:38	0:0	6	queue_main
arg	8:50	8:51	5	0
water	8:50	0:0	6	0
water	8:53	0:0	4	?
water	8:55	0:0	4	1
water	8:57	0:0	4	:
water	8:59	0:0	4	0
water	8:60	0:0	4	;
water	9:8	0:0	4	ret
op	9:12	0:0	4	=
call	9:14	9:46	4	ff_request_frame
arg	9:31	9:46	5	ctx->inputs[in]
water	9:31	0:0	6	ctx
op	9:34	0:0	6	->
water	9:36	0:0	6	inputs
op	9:42	0:0	6	[
water	9:43	0:0	6	in
op	9:45	0:0	6	]
water	9:47	0:0	4	;
if	10:8	11:22	4	(ret < 0)
cond	10:12	10:18	5	ret < 0
water	10:12	0:0	6	ret
op	10:16	0:0	6	<
water	10:18	0:0	6	0
stmts	11:12	11:22	5	
return	11:12	11:22	6	ret
water	11:19	0:0	7	ret
water	12:4	0:0	4	}
return	13:4	13:12	2	0
water	13:11	0:0	3	0

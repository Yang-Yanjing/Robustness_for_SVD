func	1:0	16:0	0	void	av_opt_freep_ranges
params	1:24	0:0	1	
param	1:25	1:49	2	AVOptionRanges * *	rangesp
stmnts	0:0	15:21	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:37	2	AVOptionRanges	*ranges
op	4:27	0:0	2	=
op	4:29	0:0	2	*
water	4:30	0:0	2	rangesp
if	5:4	6:14	2	(! ranges)
cond	5:8	5:9	3	! ranges
op	5:8	0:0	4	!
water	5:9	0:0	4	ranges
stmts	6:8	6:14	3	
return	6:8	6:14	4	
for	7:4	13:4	2	(i = 0 ;i < ranges -> nb_ranges * ranges -> nb_components;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:48	3	i < ranges -> nb_ranges * ranges -> nb_components
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	ranges
op	7:26	0:0	4	->
water	7:28	0:0	4	nb_ranges
op	7:38	0:0	4	*
water	7:40	0:0	4	ranges
op	7:46	0:0	4	->
water	7:48	0:0	4	nb_components
forexpr	7:63	7:64	3	i ++
water	7:63	0:0	4	i
op	7:64	0:0	4	++
stmts	7:68	13:4	3	
water	7:68	0:0	4	{
decl	8:8	8:47	4	AVOptionRange	*range
op	8:29	0:0	4	=
water	8:31	0:0	4	ranges
op	8:37	0:0	4	->
water	8:39	0:0	4	range
op	8:44	0:0	4	[
water	8:45	0:0	4	i
op	8:46	0:0	4	]
if	9:8	12:8	4	(range)
cond	9:12	9:12	5	range
water	9:12	0:0	6	range
stmts	9:19	12:8	5	
water	9:19	0:0	6	{
call	10:12	10:32	6	av_freep
arg	10:21	10:32	7	&range->str
op	10:21	0:0	8	&
water	10:22	0:0	8	range
op	10:27	0:0	8	->
water	10:29	0:0	8	str
water	10:33	0:0	6	;
call	11:12	11:38	6	av_freep
arg	11:21	11:38	7	&ranges->range[i]
op	11:21	0:0	8	&
water	11:22	0:0	8	ranges
op	11:28	0:0	8	->
water	11:30	0:0	8	range
op	11:35	0:0	8	[
water	11:36	0:0	8	i
op	11:37	0:0	8	]
water	11:39	0:0	6	;
water	12:8	0:0	6	}
water	13:4	0:0	4	}
call	14:4	14:27	2	av_freep
arg	14:13	14:27	3	&ranges->range
op	14:13	0:0	4	&
water	14:14	0:0	4	ranges
op	14:20	0:0	4	->
water	14:22	0:0	4	range
water	14:28	0:0	2	;
call	15:4	15:20	2	av_freep
arg	15:13	15:20	3	rangesp
water	15:13	0:0	4	rangesp
water	15:21	0:0	2	;

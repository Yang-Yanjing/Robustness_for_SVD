func	1:0	18:0	0	void *	grow_array
params	1:16	0:0	1	
param	1:17	1:28	2	void *	array
param	1:30	1:43	2	int	elem_size
param	1:45	1:54	2	int *	size
param	1:56	1:68	2	int	new_size
stmnts	3:4	17:16	1	
if	3:4	6:4	2	(new_size >= INT_MAX / elem_size)
cond	3:8	3:30	3	new_size >= INT_MAX / elem_size
water	3:8	0:0	4	new_size
op	3:17	0:0	4	>=
water	3:20	0:0	4	INT_MAX
op	3:28	0:0	4	/
water	3:30	0:0	4	elem_size
stmts	3:41	6:4	3	
water	3:41	0:0	4	{
call	4:8	4:53	4	av_log
arg	4:15	4:19	5	NULL
water	4:15	0:0	6	NULL
arg	4:21	4:33	5	AV_LOG_ERROR
water	4:21	0:0	6	AV_LOG_ERROR
arg	4:35	4:53	5	"Array too big.\n"
water	4:35	0:0	6	"Array too big.\n"
water	4:54	0:0	4	;
call	5:8	5:22	4	exit_program
arg	5:21	5:22	5	1
water	5:21	0:0	6	1
water	5:23	0:0	4	;
water	6:4	0:0	4	}
if	7:4	16:4	2	(* size < new_size)
cond	7:8	7:16	3	* size < new_size
op	7:8	0:0	4	*
water	7:9	0:0	4	size
op	7:14	0:0	4	<
water	7:16	0:0	4	new_size
stmts	7:26	16:4	3	
water	7:26	0:0	4	{
decl	8:8	8:67	4	uint8_t	*tmp
op	8:21	0:0	4	=
call	8:23	8:66	5	av_realloc_array
arg	8:40	8:45	6	array
water	8:40	0:0	7	array
arg	8:47	8:55	6	new_size
water	8:47	0:0	7	new_size
arg	8:57	8:66	6	elem_size
water	8:57	0:0	7	elem_size
if	9:8	12:8	4	(! tmp)
cond	9:12	9:13	5	! tmp
op	9:12	0:0	6	!
water	9:13	0:0	6	tmp
stmts	9:18	12:8	5	
water	9:18	0:0	6	{
call	10:12	10:66	6	av_log
arg	10:19	10:23	7	NULL
water	10:19	0:0	8	NULL
arg	10:25	10:37	7	AV_LOG_ERROR
water	10:25	0:0	8	AV_LOG_ERROR
arg	10:39	10:66	7	"Could not alloc buffer.\n"
water	10:39	0:0	8	"Could not alloc buffer.\n"
water	10:67	0:0	6	;
call	11:12	11:26	6	exit_program
arg	11:25	11:26	7	1
water	11:25	0:0	8	1
water	11:27	0:0	6	;
water	12:8	0:0	6	}
call	13:8	13:69	4	memset
arg	13:15	13:36	5	tmp+*size*elem_size
water	13:15	0:0	6	tmp
op	13:19	0:0	6	+
op	13:21	0:0	6	*
water	13:22	0:0	6	size
op	13:26	0:0	6	*
water	13:27	0:0	6	elem_size
arg	13:38	13:39	5	0
water	13:38	0:0	6	0
arg	13:41	13:69	5	(new_size-*size)*elem_size
water	13:41	0:0	6	(
water	13:42	0:0	6	new_size
op	13:50	0:0	6	-
op	13:51	0:0	6	*
water	13:52	0:0	6	size
water	13:56	0:0	6	)
op	13:58	0:0	6	*
water	13:60	0:0	6	elem_size
water	13:70	0:0	4	;
op	14:8	0:0	4	*
water	14:9	0:0	4	size
op	14:14	0:0	4	=
water	14:16	0:0	4	new_size
water	14:24	0:0	4	;
return	15:8	15:18	4	tmp
water	15:15	0:0	5	tmp
water	16:4	0:0	4	}
return	17:4	17:16	2	array
water	17:11	0:0	3	array

func	1:0	86:0	0	static int	mxf_read_generic_descriptor
params	1:38	0:0	1	
param	1:39	1:48	2	void *	arg
param	1:50	1:65	2	AVIOContext *	pb
param	1:67	1:74	2	int	tag
param	1:76	1:84	2	int	size
param	1:86	1:93	2	UID	uid
param	1:95	1:113	2	int64_t	klv_offset
stmnts	0:0	85:12	1	
decl	3:4	3:35	2	MXFDescriptor	*descriptor
op	3:30	0:0	2	=
water	3:32	0:0	2	arg
switch	4:4	84:4	2	(tag)
cond	4:11	4:11	3	tag
water	4:11	0:0	4	tag
stmts	4:16	84:4	3	
water	4:16	0:0	4	{
label	5:4	5:15	4	case 0 x3F01 :
return	6:8	7:80	4	mxf_read_strong_ref_array(pb,&descriptor->sub_descriptors_refs,&descriptor->sub_descriptors_count)
call	6:15	7:79	5	mxf_read_strong_ref_array
arg	6:41	6:43	6	pb
water	6:41	0:0	7	pb
arg	6:45	6:78	6	&descriptor->sub_descriptors_refs
op	6:45	0:0	7	&
water	6:46	0:0	7	descriptor
op	6:56	0:0	7	->
water	6:58	0:0	7	sub_descriptors_refs
arg	7:45	7:79	6	&descriptor->sub_descriptors_count
op	7:45	0:0	7	&
water	7:46	0:0	7	descriptor
op	7:56	0:0	7	->
water	7:58	0:0	7	sub_descriptors_count
label	8:4	8:15	4	case 0 x3002 :
water	9:8	0:0	4	descriptor
op	9:18	0:0	4	->
water	9:20	0:0	4	duration
op	9:29	0:0	4	=
call	9:31	9:43	4	avio_rb64
arg	9:41	9:43	5	pb
water	9:41	0:0	6	pb
water	9:44	0:0	4	;
break	10:8	10:13	4	
label	11:4	11:15	4	case 0 x3004 :
call	12:8	12:58	4	avio_read
arg	12:18	12:20	5	pb
water	12:18	0:0	6	pb
arg	12:22	12:54	5	descriptor->essence_container_ul
water	12:22	0:0	6	descriptor
op	12:32	0:0	6	->
water	12:34	0:0	6	essence_container_ul
arg	12:56	12:58	5	16
water	12:56	0:0	6	16
water	12:59	0:0	4	;
break	13:8	13:13	4	
label	14:4	14:15	4	case 0 x3005 :
call	15:8	15:46	4	avio_read
arg	15:18	15:20	5	pb
water	15:18	0:0	6	pb
arg	15:22	15:42	5	descriptor->codec_ul
water	15:22	0:0	6	descriptor
op	15:32	0:0	6	->
water	15:34	0:0	6	codec_ul
arg	15:44	15:46	5	16
water	15:44	0:0	6	16
water	15:47	0:0	4	;
break	16:8	16:13	4	
label	17:4	17:15	4	case 0 x3006 :
water	18:8	0:0	4	descriptor
op	18:18	0:0	4	->
water	18:20	0:0	4	linked_track_id
op	18:36	0:0	4	=
call	18:38	18:50	4	avio_rb32
arg	18:48	18:50	5	pb
water	18:48	0:0	6	pb
water	18:51	0:0	4	;
break	19:8	19:13	4	
label	20:4	20:15	4	case 0 x3201 :
call	21:8	21:54	4	avio_read
arg	21:18	21:20	5	pb
water	21:18	0:0	6	pb
arg	21:22	21:50	5	descriptor->essence_codec_ul
water	21:22	0:0	6	descriptor
op	21:32	0:0	6	->
water	21:34	0:0	6	essence_codec_ul
arg	21:52	21:54	5	16
water	21:52	0:0	6	16
water	21:55	0:0	4	;
break	22:8	22:13	4	
label	23:4	23:15	4	case 0 x3203 :
water	24:8	0:0	4	descriptor
op	24:18	0:0	4	->
water	24:20	0:0	4	width
op	24:26	0:0	4	=
call	24:28	24:40	4	avio_rb32
arg	24:38	24:40	5	pb
water	24:38	0:0	6	pb
water	24:41	0:0	4	;
break	25:8	25:13	4	
label	26:4	26:15	4	case 0 x3202 :
water	27:8	0:0	4	descriptor
op	27:18	0:0	4	->
water	27:20	0:0	4	height
op	27:27	0:0	4	=
call	27:29	27:41	4	avio_rb32
arg	27:39	27:41	5	pb
water	27:39	0:0	6	pb
water	27:42	0:0	4	;
break	28:8	28:13	4	
label	29:4	29:15	4	case 0 x320C :
water	30:8	0:0	4	descriptor
op	30:18	0:0	4	->
water	30:20	0:0	4	frame_layout
op	30:33	0:0	4	=
call	30:35	30:45	4	avio_r8
arg	30:43	30:45	5	pb
water	30:43	0:0	6	pb
water	30:46	0:0	4	;
break	31:8	31:13	4	
label	32:4	32:15	4	case 0 x320E :
water	33:8	0:0	4	descriptor
op	33:18	0:0	4	->
water	33:20	0:0	4	aspect_ratio
op	33:32	0:0	4	.
water	33:33	0:0	4	num
op	33:37	0:0	4	=
call	33:39	33:51	4	avio_rb32
arg	33:49	33:51	5	pb
water	33:49	0:0	6	pb
water	33:52	0:0	4	;
water	34:8	0:0	4	descriptor
op	34:18	0:0	4	->
water	34:20	0:0	4	aspect_ratio
op	34:32	0:0	4	.
water	34:33	0:0	4	den
op	34:37	0:0	4	=
call	34:39	34:51	4	avio_rb32
arg	34:49	34:51	5	pb
water	34:49	0:0	6	pb
water	34:52	0:0	4	;
break	35:8	35:13	4	
label	36:4	36:15	4	case 0 x3212 :
water	37:8	0:0	4	descriptor
op	37:18	0:0	4	->
water	37:20	0:0	4	field_dominance
op	37:36	0:0	4	=
call	37:38	37:48	4	avio_r8
arg	37:46	37:48	5	pb
water	37:46	0:0	6	pb
water	37:49	0:0	4	;
break	38:8	38:13	4	
label	39:4	39:15	4	case 0 x3301 :
water	40:8	0:0	4	descriptor
op	40:18	0:0	4	->
water	40:20	0:0	4	component_depth
op	40:36	0:0	4	=
call	40:38	40:50	4	avio_rb32
arg	40:48	40:50	5	pb
water	40:48	0:0	6	pb
water	40:51	0:0	4	;
break	41:8	41:13	4	
label	42:4	42:15	4	case 0 x3302 :
water	43:8	0:0	4	descriptor
op	43:18	0:0	4	->
water	43:20	0:0	4	horiz_subsampling
op	43:38	0:0	4	=
call	43:40	43:52	4	avio_rb32
arg	43:50	43:52	5	pb
water	43:50	0:0	6	pb
water	43:53	0:0	4	;
break	44:8	44:13	4	
label	45:4	45:15	4	case 0 x3308 :
water	46:8	0:0	4	descriptor
op	46:18	0:0	4	->
water	46:20	0:0	4	vert_subsampling
op	46:37	0:0	4	=
call	46:39	46:51	4	avio_rb32
arg	46:49	46:51	5	pb
water	46:49	0:0	6	pb
water	46:52	0:0	4	;
break	47:8	47:13	4	
label	48:4	48:15	4	case 0 x3D03 :
water	49:8	0:0	4	descriptor
op	49:18	0:0	4	->
water	49:20	0:0	4	sample_rate
op	49:31	0:0	4	.
water	49:32	0:0	4	num
op	49:36	0:0	4	=
call	49:38	49:50	4	avio_rb32
arg	49:48	49:50	5	pb
water	49:48	0:0	6	pb
water	49:51	0:0	4	;
water	50:8	0:0	4	descriptor
op	50:18	0:0	4	->
water	50:20	0:0	4	sample_rate
op	50:31	0:0	4	.
water	50:32	0:0	4	den
op	50:36	0:0	4	=
call	50:38	50:50	4	avio_rb32
arg	50:48	50:50	5	pb
water	50:48	0:0	6	pb
water	50:51	0:0	4	;
break	51:8	51:13	4	
label	52:4	52:15	4	case 0 x3D06 :
call	53:8	53:54	4	avio_read
arg	53:18	53:20	5	pb
water	53:18	0:0	6	pb
arg	53:22	53:50	5	descriptor->essence_codec_ul
water	53:22	0:0	6	descriptor
op	53:32	0:0	6	->
water	53:34	0:0	6	essence_codec_ul
arg	53:52	53:54	5	16
water	53:52	0:0	6	16
water	53:55	0:0	4	;
break	54:8	54:13	4	
label	55:4	55:15	4	case 0 x3D07 :
water	56:8	0:0	4	descriptor
op	56:18	0:0	4	->
water	56:20	0:0	4	channels
op	56:29	0:0	4	=
call	56:31	56:43	4	avio_rb32
arg	56:41	56:43	5	pb
water	56:41	0:0	6	pb
water	56:44	0:0	4	;
break	57:8	57:13	4	
label	58:4	58:15	4	case 0 x3D01 :
water	59:8	0:0	4	descriptor
op	59:18	0:0	4	->
water	59:20	0:0	4	bits_per_sample
op	59:36	0:0	4	=
call	59:38	59:50	4	avio_rb32
arg	59:48	59:50	5	pb
water	59:48	0:0	6	pb
water	59:51	0:0	4	;
break	60:8	60:13	4	
label	61:4	61:15	4	case 0 x3401 :
call	62:8	62:44	4	mxf_read_pixel_layout
arg	62:30	62:32	5	pb
water	62:30	0:0	6	pb
arg	62:34	62:44	5	descriptor
water	62:34	0:0	6	descriptor
water	62:45	0:0	4	;
break	63:8	63:13	4	
label	64:4	64:11	4	default :
if	66:8	76:8	4	(IS_KLV_KEY (uid ,mxf_sony_mpeg4_extradata ))
cond	66:12	66:52	5	IS_KLV_KEY (uid ,mxf_sony_mpeg4_extradata )
call	66:12	66:52	6	IS_KLV_KEY
arg	66:23	66:26	7	uid
water	66:23	0:0	8	uid
arg	66:28	66:52	7	mxf_sony_mpeg4_extradata
water	66:28	0:0	8	mxf_sony_mpeg4_extradata
stmts	66:55	76:8	5	
water	66:55	0:0	6	{
if	67:12	68:80	6	(descriptor -> extradata)
cond	67:16	67:28	7	descriptor -> extradata
water	67:16	0:0	8	descriptor
op	67:26	0:0	8	->
water	67:28	0:0	8	extradata
stmts	68:16	68:80	7	
call	68:16	68:79	8	av_log
arg	68:23	68:27	9	NULL
water	68:23	0:0	10	NULL
arg	68:29	68:43	9	AV_LOG_WARNING
water	68:29	0:0	10	AV_LOG_WARNING
arg	68:45	68:79	9	"Duplicate sony_mpeg4_extradata\n"
water	68:45	0:0	10	"Duplicate sony_mpeg4_extradata\n"
water	68:80	0:0	8	;
call	69:12	69:41	6	av_free
arg	69:20	69:41	7	descriptor->extradata
water	69:20	0:0	8	descriptor
op	69:30	0:0	8	->
water	69:32	0:0	8	extradata
water	69:42	0:0	6	;
water	70:12	0:0	6	descriptor
op	70:22	0:0	6	->
water	70:24	0:0	6	extradata_size
op	70:39	0:0	6	=
water	70:41	0:0	6	0
water	70:42	0:0	6	;
water	71:12	0:0	6	descriptor
op	71:22	0:0	6	->
water	71:24	0:0	6	extradata
op	71:34	0:0	6	=
call	71:36	71:50	6	av_malloc
arg	71:46	71:50	7	size
water	71:46	0:0	8	size
water	71:51	0:0	6	;
if	72:12	73:38	6	(! descriptor -> extradata)
cond	72:16	72:29	7	! descriptor -> extradata
op	72:16	0:0	8	!
water	72:17	0:0	8	descriptor
op	72:27	0:0	8	->
water	72:29	0:0	8	extradata
stmts	73:16	73:38	7	
return	73:16	73:38	8	AVERROR(ENOMEM)
call	73:23	73:37	9	AVERROR
arg	73:31	73:37	10	ENOMEM
water	73:31	0:0	11	ENOMEM
water	74:12	0:0	6	descriptor
op	74:22	0:0	6	->
water	74:24	0:0	6	extradata_size
op	74:39	0:0	6	=
water	74:41	0:0	6	size
water	74:45	0:0	6	;
call	75:12	75:53	6	avio_read
arg	75:22	75:24	7	pb
water	75:22	0:0	8	pb
arg	75:26	75:47	7	descriptor->extradata
water	75:26	0:0	8	descriptor
op	75:36	0:0	8	->
water	75:38	0:0	8	extradata
arg	75:49	75:53	7	size
water	75:49	0:0	8	size
water	75:54	0:0	6	;
water	76:8	0:0	6	}
if	77:8	82:8	4	(IS_KLV_KEY (uid ,mxf_jp2k_rsiz ))
cond	77:12	77:41	5	IS_KLV_KEY (uid ,mxf_jp2k_rsiz )
call	77:12	77:41	6	IS_KLV_KEY
arg	77:23	77:26	7	uid
water	77:23	0:0	8	uid
arg	77:28	77:41	7	mxf_jp2k_rsiz
water	77:28	0:0	8	mxf_jp2k_rsiz
stmts	77:44	82:8	5	
water	77:44	0:0	6	{
decl	78:12	78:41	6	uint32_t	rsiz
op	78:26	0:0	6	=
call	78:28	78:40	7	avio_rb16
arg	78:38	78:40	8	pb
water	78:38	0:0	9	pb
if	79:12	81:54	6	(rsiz == FF_PROFILE_JPEG2000_DCINEMA_2K || rsiz == FF_PROFILE_JPEG2000_DCINEMA_4K)
cond	79:16	80:24	7	rsiz == FF_PROFILE_JPEG2000_DCINEMA_2K || rsiz == FF_PROFILE_JPEG2000_DCINEMA_4K
water	79:16	0:0	8	rsiz
op	79:21	0:0	8	==
water	79:24	0:0	8	FF_PROFILE_JPEG2000_DCINEMA_2K
op	79:55	0:0	8	||
water	80:16	0:0	8	rsiz
op	80:21	0:0	8	==
water	80:24	0:0	8	FF_PROFILE_JPEG2000_DCINEMA_4K
stmts	81:16	81:54	7	
water	81:16	0:0	8	descriptor
op	81:26	0:0	8	->
water	81:28	0:0	8	pix_fmt
op	81:36	0:0	8	=
water	81:38	0:0	8	AV_PIX_FMT_XYZ12
water	81:54	0:0	8	;
water	82:8	0:0	6	}
break	83:8	83:13	4	
water	84:4	0:0	4	}
return	85:4	85:12	2	0
water	85:11	0:0	3	0

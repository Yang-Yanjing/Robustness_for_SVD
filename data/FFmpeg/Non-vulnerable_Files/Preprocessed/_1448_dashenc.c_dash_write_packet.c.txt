func	1:0	66:0	0	static int	dash_write_packet
params	1:28	0:0	1	
param	1:29	1:47	2	AVFormatContext *	s
param	1:49	1:62	2	AVPacket *	pkt
stmnts	0:0	65:50	1	
decl	3:4	3:33	2	DASHContext	*c
op	3:19	0:0	2	=
water	3:21	0:0	2	s
op	3:22	0:0	2	->
water	3:24	0:0	2	priv_data
decl	4:4	4:48	2	AVStream	*st
op	4:17	0:0	2	=
water	4:19	0:0	2	s
op	4:20	0:0	2	->
water	4:22	0:0	2	streams
op	4:29	0:0	2	[
water	4:30	0:0	2	pkt
op	4:33	0:0	2	->
water	4:35	0:0	2	stream_index
op	4:47	0:0	2	]
decl	5:4	5:53	2	OutputStream	*os
op	5:21	0:0	2	=
op	5:23	0:0	2	&
water	5:24	0:0	2	c
op	5:25	0:0	2	->
water	5:27	0:0	2	streams
op	5:34	0:0	2	[
water	5:35	0:0	2	pkt
op	5:38	0:0	2	->
water	5:40	0:0	2	stream_index
op	5:52	0:0	2	]
decl	6:4	6:82	2	int64_t	seg_end_duration
op	6:29	0:0	2	=
water	6:31	0:0	2	(
water	6:32	0:0	2	os
op	6:34	0:0	2	->
water	6:36	0:0	2	segment_index
water	6:49	0:0	2	)
op	6:51	0:0	2	*
water	6:53	0:0	2	(
water	6:54	0:0	2	int64_t
water	6:61	0:0	2	)
water	6:63	0:0	2	c
op	6:64	0:0	2	->
water	6:66	0:0	2	min_seg_duration
decl	7:4	7:11	2	int	ret
water	8:4	0:0	2	ret
op	8:8	0:0	2	=
call	8:10	8:50	2	update_stream_extradata
arg	8:34	8:35	3	s
water	8:34	0:0	4	s
arg	8:37	8:39	3	os
water	8:37	0:0	4	os
arg	8:41	8:50	3	st->codec
water	8:41	0:0	4	st
op	8:43	0:0	4	->
water	8:45	0:0	4	codec
water	8:51	0:0	2	;
if	9:4	10:18	2	(ret < 0)
cond	9:8	9:14	3	ret < 0
water	9:8	0:0	4	ret
op	9:12	0:0	4	<
water	9:14	0:0	4	0
stmts	10:8	10:18	3	
return	10:8	10:18	4	ret
water	10:15	0:0	5	ret
if	17:4	18:47	2	(! pkt -> duration && os -> last_dts != AV_NOPTS_VALUE)
cond	17:8	17:42	3	! pkt -> duration && os -> last_dts != AV_NOPTS_VALUE
op	17:8	0:0	4	!
water	17:9	0:0	4	pkt
op	17:12	0:0	4	->
water	17:14	0:0	4	duration
op	17:23	0:0	4	&&
water	17:26	0:0	4	os
op	17:28	0:0	4	->
water	17:30	0:0	4	last_dts
op	17:39	0:0	4	!=
water	17:42	0:0	4	AV_NOPTS_VALUE
stmts	18:8	18:47	3	
water	18:8	0:0	4	pkt
op	18:11	0:0	4	->
water	18:13	0:0	4	duration
op	18:22	0:0	4	=
water	18:24	0:0	4	pkt
op	18:27	0:0	4	->
water	18:29	0:0	4	dts
op	18:33	0:0	4	-
water	18:35	0:0	4	os
op	18:37	0:0	4	->
water	18:39	0:0	4	last_dts
water	18:47	0:0	4	;
water	19:4	0:0	2	os
op	19:6	0:0	2	->
water	19:8	0:0	2	last_dts
op	19:17	0:0	2	=
water	19:19	0:0	2	pkt
op	19:22	0:0	2	->
water	19:24	0:0	2	dts
water	19:27	0:0	2	;
if	22:4	26:4	2	(os -> first_pts == AV_NOPTS_VALUE && s -> avoid_negative_ts == AVFMT_AVOID_NEG_TS_MAKE_ZERO)
cond	22:8	23:32	3	os -> first_pts == AV_NOPTS_VALUE && s -> avoid_negative_ts == AVFMT_AVOID_NEG_TS_MAKE_ZERO
water	22:8	0:0	4	os
op	22:10	0:0	4	->
water	22:12	0:0	4	first_pts
op	22:22	0:0	4	==
water	22:25	0:0	4	AV_NOPTS_VALUE
op	22:40	0:0	4	&&
water	23:8	0:0	4	s
op	23:9	0:0	4	->
water	23:11	0:0	4	avoid_negative_ts
op	23:29	0:0	4	==
water	23:32	0:0	4	AVFMT_AVOID_NEG_TS_MAKE_ZERO
stmts	23:62	26:4	3	
water	23:62	0:0	4	{
water	24:8	0:0	4	pkt
op	24:11	0:0	4	->
water	24:13	0:0	4	pts
op	24:17	0:0	4	-=
water	24:20	0:0	4	pkt
op	24:23	0:0	4	->
water	24:25	0:0	4	dts
water	24:28	0:0	4	;
water	25:8	0:0	4	pkt
op	25:11	0:0	4	->
water	25:13	0:0	4	dts
op	25:18	0:0	4	=
water	25:20	0:0	4	0
water	25:21	0:0	4	;
water	26:4	0:0	4	}
if	27:4	28:32	2	(os -> first_pts == AV_NOPTS_VALUE)
cond	27:8	27:25	3	os -> first_pts == AV_NOPTS_VALUE
water	27:8	0:0	4	os
op	27:10	0:0	4	->
water	27:12	0:0	4	first_pts
op	27:22	0:0	4	==
water	27:25	0:0	4	AV_NOPTS_VALUE
stmts	28:8	28:32	3	
water	28:8	0:0	4	os
op	28:10	0:0	4	->
water	28:12	0:0	4	first_pts
op	28:22	0:0	4	=
water	28:24	0:0	4	pkt
op	28:27	0:0	4	->
water	28:29	0:0	4	pts
water	28:32	0:0	4	;
if	29:4	50:4	2	(( ! c -> has_video || st -> codec -> codec_type == AVMEDIA_TYPE_VIDEO ) && pkt -> flags & AV_PKT_FLAG_KEY && os -> packets_written &&av_compare_ts (pkt -> pts - os -> first_pts ,st -> time_base ,seg_end_duration ,AV_TIME_BASE_Q ) >= 0)
cond	29:8	32:59	3	( ! c -> has_video || st -> codec -> codec_type == AVMEDIA_TYPE_VIDEO ) && pkt -> flags & AV_PKT_FLAG_KEY && os -> packets_written &&av_compare_ts (pkt -> pts - os -> first_pts ,st -> time_base ,seg_end_duration ,AV_TIME_BASE_Q ) >= 0
water	29:8	0:0	4	(
op	29:9	0:0	4	!
water	29:10	0:0	4	c
op	29:11	0:0	4	->
water	29:13	0:0	4	has_video
op	29:23	0:0	4	||
water	29:26	0:0	4	st
op	29:28	0:0	4	->
water	29:30	0:0	4	codec
op	29:35	0:0	4	->
water	29:37	0:0	4	codec_type
op	29:48	0:0	4	==
water	29:51	0:0	4	AVMEDIA_TYPE_VIDEO
water	29:69	0:0	4	)
op	29:71	0:0	4	&&
water	30:8	0:0	4	pkt
op	30:11	0:0	4	->
water	30:13	0:0	4	flags
op	30:19	0:0	4	&
water	30:21	0:0	4	AV_PKT_FLAG_KEY
op	30:37	0:0	4	&&
water	30:40	0:0	4	os
op	30:42	0:0	4	->
water	30:44	0:0	4	packets_written
op	30:60	0:0	4	&&
call	31:8	32:54	4	av_compare_ts
arg	31:22	31:46	5	pkt->pts-os->first_pts
water	31:22	0:0	6	pkt
op	31:25	0:0	6	->
water	31:27	0:0	6	pts
op	31:31	0:0	6	-
water	31:33	0:0	6	os
op	31:35	0:0	6	->
water	31:37	0:0	6	first_pts
arg	31:48	31:61	5	st->time_base
water	31:48	0:0	6	st
op	31:50	0:0	6	->
water	31:52	0:0	6	time_base
arg	32:22	32:38	5	seg_end_duration
water	32:22	0:0	6	seg_end_duration
arg	32:40	32:54	5	AV_TIME_BASE_Q
water	32:40	0:0	6	AV_TIME_BASE_Q
op	32:56	0:0	4	>=
water	32:59	0:0	4	0
stmts	32:62	50:4	3	
water	32:62	0:0	4	{
decl	33:8	33:48	4	int64_t	prev_duration
op	33:30	0:0	4	=
water	33:32	0:0	4	c
op	33:33	0:0	4	->
water	33:35	0:0	4	last_duration
water	34:8	0:0	4	c
op	34:9	0:0	4	->
water	34:11	0:0	4	last_duration
op	34:25	0:0	4	=
call	34:27	36:54	4	av_rescale_q
arg	34:40	34:64	5	pkt->pts-os->start_pts
water	34:40	0:0	6	pkt
op	34:43	0:0	6	->
water	34:45	0:0	6	pts
op	34:49	0:0	6	-
water	34:51	0:0	6	os
op	34:53	0:0	6	->
water	34:55	0:0	6	start_pts
arg	35:40	35:53	5	st->time_base
water	35:40	0:0	6	st
op	35:42	0:0	6	->
water	35:44	0:0	6	time_base
arg	36:40	36:54	5	AV_TIME_BASE_Q
water	36:40	0:0	6	AV_TIME_BASE_Q
water	36:55	0:0	4	;
water	37:8	0:0	4	c
op	37:9	0:0	4	->
water	37:11	0:0	4	total_duration
op	37:26	0:0	4	=
call	37:28	39:55	4	av_rescale_q
arg	37:41	37:65	5	pkt->pts-os->first_pts
water	37:41	0:0	6	pkt
op	37:44	0:0	6	->
water	37:46	0:0	6	pts
op	37:50	0:0	6	-
water	37:52	0:0	6	os
op	37:54	0:0	6	->
water	37:56	0:0	6	first_pts
arg	38:41	38:54	5	st->time_base
water	38:41	0:0	6	st
op	38:43	0:0	6	->
water	38:45	0:0	6	time_base
arg	39:41	39:55	5	AV_TIME_BASE_Q
water	39:41	0:0	6	AV_TIME_BASE_Q
water	39:56	0:0	4	;
if	40:8	47:8	4	(( ! c -> use_timeline || ! c -> use_template ) && prev_duration)
cond	40:12	40:54	5	( ! c -> use_timeline || ! c -> use_template ) && prev_duration
water	40:12	0:0	6	(
op	40:13	0:0	6	!
water	40:14	0:0	6	c
op	40:15	0:0	6	->
water	40:17	0:0	6	use_timeline
op	40:30	0:0	6	||
op	40:33	0:0	6	!
water	40:34	0:0	6	c
op	40:35	0:0	6	->
water	40:37	0:0	6	use_template
water	40:49	0:0	6	)
op	40:51	0:0	6	&&
water	40:54	0:0	6	prev_duration
stmts	40:69	47:8	5	
water	40:69	0:0	6	{
if	41:12	46:12	6	(c -> last_duration < prev_duration * 9 / 10 || c -> last_duration > prev_duration * 11 / 10)
cond	41:16	42:52	7	c -> last_duration < prev_duration * 9 / 10 || c -> last_duration > prev_duration * 11 / 10
water	41:16	0:0	8	c
op	41:17	0:0	8	->
water	41:19	0:0	8	last_duration
op	41:33	0:0	8	<
water	41:35	0:0	8	prev_duration
op	41:48	0:0	8	*
water	41:49	0:0	8	9
op	41:50	0:0	8	/
water	41:51	0:0	8	10
op	41:54	0:0	8	||
water	42:16	0:0	8	c
op	42:17	0:0	8	->
water	42:19	0:0	8	last_duration
op	42:33	0:0	8	>
water	42:35	0:0	8	prev_duration
op	42:48	0:0	8	*
water	42:49	0:0	8	11
op	42:51	0:0	8	/
water	42:52	0:0	8	10
stmts	42:56	46:12	7	
water	42:56	0:0	8	{
call	43:16	45:81	8	av_log
arg	43:23	43:24	9	s
water	43:23	0:0	10	s
arg	43:26	43:40	9	AV_LOG_WARNING
water	43:26	0:0	10	AV_LOG_WARNING
arg	44:23	45:81	9	"Segment durations differ too much, enable use_timeline ""and use_template, or keep a stricter keyframe interval\n"
water	44:23	0:0	10	"Segment durations differ too much, enable use_timeline "
water	45:23	0:0	10	"and use_template, or keep a stricter keyframe interval\n"
water	45:82	0:0	8	;
water	46:12	0:0	8	}
water	47:8	0:0	6	}
if	48:8	49:22	4	(( ret =dash_flush (s ,0 ,pkt -> stream_index ) ) < 0)
cond	48:12	48:58	5	( ret =dash_flush (s ,0 ,pkt -> stream_index ) ) < 0
water	48:12	0:0	6	(
water	48:13	0:0	6	ret
op	48:17	0:0	6	=
call	48:19	48:53	6	dash_flush
arg	48:30	48:31	7	s
water	48:30	0:0	8	s
arg	48:33	48:34	7	0
water	48:33	0:0	8	0
arg	48:36	48:53	7	pkt->stream_index
water	48:36	0:0	8	pkt
op	48:39	0:0	8	->
water	48:41	0:0	8	stream_index
water	48:54	0:0	6	)
op	48:56	0:0	6	<
water	48:58	0:0	6	0
stmts	49:12	49:22	5	
return	49:12	49:22	6	ret
water	49:19	0:0	7	ret
water	50:4	0:0	4	}
if	51:4	59:4	2	(! os -> packets_written)
cond	51:8	51:13	3	! os -> packets_written
op	51:8	0:0	4	!
water	51:9	0:0	4	os
op	51:11	0:0	4	->
water	51:13	0:0	4	packets_written
stmts	51:30	59:4	3	
water	51:30	0:0	4	{
if	55:8	56:39	4	(os -> max_pts != AV_NOPTS_VALUE)
cond	55:12	55:27	5	os -> max_pts != AV_NOPTS_VALUE
water	55:12	0:0	6	os
op	55:14	0:0	6	->
water	55:16	0:0	6	max_pts
op	55:24	0:0	6	!=
water	55:27	0:0	6	AV_NOPTS_VALUE
stmts	56:12	56:39	5	
water	56:12	0:0	6	os
op	56:14	0:0	6	->
water	56:16	0:0	6	start_pts
op	56:26	0:0	6	=
water	56:28	0:0	6	os
op	56:30	0:0	6	->
water	56:32	0:0	6	max_pts
water	56:39	0:0	6	;
else	57:8	58:36	4
stmts	58:12	58:36	5	
water	58:12	0:0	6	os
op	58:14	0:0	6	->
water	58:16	0:0	6	start_pts
op	58:26	0:0	6	=
water	58:28	0:0	6	pkt
op	58:31	0:0	6	->
water	58:33	0:0	6	pts
water	58:36	0:0	6	;
water	59:4	0:0	4	}
if	60:4	61:46	2	(os -> max_pts == AV_NOPTS_VALUE)
cond	60:8	60:23	3	os -> max_pts == AV_NOPTS_VALUE
water	60:8	0:0	4	os
op	60:10	0:0	4	->
water	60:12	0:0	4	max_pts
op	60:20	0:0	4	==
water	60:23	0:0	4	AV_NOPTS_VALUE
stmts	61:8	61:46	3	
water	61:8	0:0	4	os
op	61:10	0:0	4	->
water	61:12	0:0	4	max_pts
op	61:20	0:0	4	=
water	61:22	0:0	4	pkt
op	61:25	0:0	4	->
water	61:27	0:0	4	pts
op	61:31	0:0	4	+
water	61:33	0:0	4	pkt
op	61:36	0:0	4	->
water	61:38	0:0	4	duration
water	61:46	0:0	4	;
else	62:4	63:66	2
stmts	63:8	63:66	3	
water	63:8	0:0	4	os
op	63:10	0:0	4	->
water	63:12	0:0	4	max_pts
op	63:20	0:0	4	=
call	63:22	63:65	4	FFMAX
arg	63:28	63:39	5	os->max_pts
water	63:28	0:0	6	os
op	63:30	0:0	6	->
water	63:32	0:0	6	max_pts
arg	63:41	63:65	5	pkt->pts+pkt->duration
water	63:41	0:0	6	pkt
op	63:44	0:0	6	->
water	63:46	0:0	6	pts
op	63:50	0:0	6	+
water	63:52	0:0	6	pkt
op	63:55	0:0	6	->
water	63:57	0:0	6	duration
water	63:66	0:0	4	;
water	64:4	0:0	2	os
op	64:6	0:0	2	->
water	64:8	0:0	2	packets_written
op	64:23	0:0	2	++
water	64:25	0:0	2	;
return	65:4	65:50	2	ff_write_chained(os->ctx,0,pkt,s,0)
call	65:11	65:49	3	ff_write_chained
arg	65:28	65:35	4	os->ctx
water	65:28	0:0	5	os
op	65:30	0:0	5	->
water	65:32	0:0	5	ctx
arg	65:37	65:38	4	0
water	65:37	0:0	5	0
arg	65:40	65:43	4	pkt
water	65:40	0:0	5	pkt
arg	65:45	65:46	4	s
water	65:45	0:0	5	s
arg	65:48	65:49	4	0
water	65:48	0:0	5	0

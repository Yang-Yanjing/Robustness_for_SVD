func	1:0	68:0	0	static int	pick_format
params	1:22	0:0	1	
param	1:23	1:41	2	AVFilterLink *	link
param	1:43	1:60	2	AVFilterLink *	ref
stmnts	3:4	67:12	1	
if	3:4	4:16	2	(! link || ! link -> in_formats)
cond	3:8	3:24	3	! link || ! link -> in_formats
op	3:8	0:0	4	!
water	3:9	0:0	4	link
op	3:14	0:0	4	||
op	3:17	0:0	4	!
water	3:18	0:0	4	link
op	3:22	0:0	4	->
water	3:24	0:0	4	in_formats
stmts	4:8	4:16	3	
return	4:8	4:16	4	0
water	4:15	0:0	5	0
if	5:4	19:4	2	(link -> type == AVMEDIA_TYPE_VIDEO)
cond	5:8	5:22	3	link -> type == AVMEDIA_TYPE_VIDEO
water	5:8	0:0	4	link
op	5:12	0:0	4	->
water	5:14	0:0	4	type
op	5:19	0:0	4	==
water	5:22	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	5:42	19:4	3	
water	5:42	0:0	4	{
if	6:8	18:8	4	(ref && ref -> type == AVMEDIA_TYPE_VIDEO)
cond	6:11	6:31	5	ref && ref -> type == AVMEDIA_TYPE_VIDEO
water	6:11	0:0	6	ref
op	6:15	0:0	6	&&
water	6:18	0:0	6	ref
op	6:21	0:0	6	->
water	6:23	0:0	6	type
op	6:28	0:0	6	==
water	6:31	0:0	6	AVMEDIA_TYPE_VIDEO
stmts	6:50	18:8	5	
water	6:50	0:0	6	{
decl	7:12	7:83	6	int	has_alpha
op	7:25	0:0	6	=
call	7:27	7:58	7	av_pix_fmt_desc_get
arg	7:47	7:58	8	ref->format
water	7:47	0:0	9	ref
op	7:50	0:0	9	->
water	7:52	0:0	9	format
op	7:59	0:0	6	->
water	7:61	0:0	6	nb_components
op	7:75	0:0	6	%
water	7:77	0:0	6	2
op	7:79	0:0	6	==
water	7:82	0:0	6	0
decl	8:12	8:52	6	enum AVPixelFormat	best
op	8:35	0:0	6	=
water	8:37	0:0	6	AV_PIX_FMT_NONE
decl	9:12	9:17	6	int	i
for	10:12	13:12	6	(i = 0 ;i < link -> in_formats -> nb_formats;i ++)
forinit	10:17	10:20	7	i = 0 ;
water	10:17	0:0	8	i
op	10:18	0:0	8	=
water	10:19	0:0	8	0
water	10:20	0:0	8	;
cond	10:22	10:42	7	i < link -> in_formats -> nb_formats
water	10:22	0:0	8	i
op	10:23	0:0	8	<
water	10:24	0:0	8	link
op	10:28	0:0	8	->
water	10:30	0:0	8	in_formats
op	10:40	0:0	8	->
water	10:42	0:0	8	nb_formats
forexpr	10:54	10:55	7	i ++
water	10:54	0:0	8	i
op	10:55	0:0	8	++
stmts	10:59	13:12	7	
water	10:59	0:0	8	{
decl	11:16	11:67	8	enum AVPixelFormat	p
op	11:37	0:0	8	=
water	11:39	0:0	8	link
op	11:43	0:0	8	->
water	11:45	0:0	8	in_formats
op	11:55	0:0	8	->
water	11:57	0:0	8	formats
op	11:64	0:0	8	[
water	11:65	0:0	8	i
op	11:66	0:0	8	]
water	12:16	0:0	8	best
op	12:20	0:0	8	=
call	12:22	12:85	8	av_find_best_pix_fmt_of_2
arg	12:48	12:52	9	best
water	12:48	0:0	10	best
arg	12:54	12:55	9	p
water	12:54	0:0	10	p
arg	12:57	12:68	9	ref->format
water	12:57	0:0	10	ref
op	12:60	0:0	10	->
water	12:62	0:0	10	format
arg	12:70	12:79	9	has_alpha
water	12:70	0:0	10	has_alpha
arg	12:81	12:85	9	NULL
water	12:81	0:0	10	NULL
water	12:86	0:0	8	;
water	13:12	0:0	8	}
call	14:12	16:62	6	av_log
arg	14:19	14:28	7	link->src
water	14:19	0:0	8	link
op	14:23	0:0	8	->
water	14:25	0:0	8	src
arg	14:29	14:41	7	AV_LOG_DEBUG
water	14:29	0:0	8	AV_LOG_DEBUG
arg	14:43	14:83	7	"picking %s out of %d ref:%s alpha:%d\n"
water	14:43	0:0	8	"picking %s out of %d ref:%s alpha:%d\n"
arg	15:19	15:44	7	av_get_pix_fmt_name(best)
call	15:19	15:43	8	av_get_pix_fmt_name
arg	15:39	15:43	9	best
water	15:39	0:0	10	best
arg	15:46	15:74	7	link->in_formats->nb_formats
water	15:46	0:0	8	link
op	15:50	0:0	8	->
water	15:52	0:0	8	in_formats
op	15:62	0:0	8	->
water	15:64	0:0	8	nb_formats
arg	16:19	16:51	7	av_get_pix_fmt_name(ref->format)
call	16:19	16:50	8	av_get_pix_fmt_name
arg	16:39	16:50	9	ref->format
water	16:39	0:0	10	ref
op	16:42	0:0	10	->
water	16:44	0:0	10	format
arg	16:53	16:62	7	has_alpha
water	16:53	0:0	8	has_alpha
water	16:63	0:0	6	;
water	17:12	0:0	6	link
op	17:16	0:0	6	->
water	17:18	0:0	6	in_formats
op	17:28	0:0	6	->
water	17:30	0:0	6	formats
op	17:37	0:0	6	[
water	17:38	0:0	6	0
op	17:39	0:0	6	]
op	17:41	0:0	6	=
water	17:43	0:0	6	best
water	17:47	0:0	6	;
water	18:8	0:0	6	}
water	19:4	0:0	4	}
else	19:6	32:4	2
stmts	19:11	32:4	3	
if	19:11	32:4	4	(link -> type == AVMEDIA_TYPE_AUDIO)
cond	19:15	19:29	5	link -> type == AVMEDIA_TYPE_AUDIO
water	19:15	0:0	6	link
op	19:19	0:0	6	->
water	19:21	0:0	6	type
op	19:26	0:0	6	==
water	19:29	0:0	6	AVMEDIA_TYPE_AUDIO
stmts	19:49	32:4	5	
water	19:49	0:0	6	{
if	20:8	31:8	6	(ref && ref -> type == AVMEDIA_TYPE_AUDIO)
cond	20:11	20:31	7	ref && ref -> type == AVMEDIA_TYPE_AUDIO
water	20:11	0:0	8	ref
op	20:15	0:0	8	&&
water	20:18	0:0	8	ref
op	20:21	0:0	8	->
water	20:23	0:0	8	type
op	20:28	0:0	8	==
water	20:31	0:0	8	AVMEDIA_TYPE_AUDIO
stmts	20:50	31:8	7	
water	20:50	0:0	8	{
decl	21:12	21:56	8	enum AVSampleFormat	best
op	21:36	0:0	8	=
water	21:38	0:0	8	AV_SAMPLE_FMT_NONE
decl	22:12	22:17	8	int	i
for	23:12	26:12	8	(i = 0 ;i < link -> in_formats -> nb_formats;i ++)
forinit	23:17	23:20	9	i = 0 ;
water	23:17	0:0	10	i
op	23:18	0:0	10	=
water	23:19	0:0	10	0
water	23:20	0:0	10	;
cond	23:22	23:42	9	i < link -> in_formats -> nb_formats
water	23:22	0:0	10	i
op	23:23	0:0	10	<
water	23:24	0:0	10	link
op	23:28	0:0	10	->
water	23:30	0:0	10	in_formats
op	23:40	0:0	10	->
water	23:42	0:0	10	nb_formats
forexpr	23:54	23:55	9	i ++
water	23:54	0:0	10	i
op	23:55	0:0	10	++
stmts	23:59	26:12	9	
water	23:59	0:0	10	{
decl	24:16	24:68	10	enum AVSampleFormat	p
op	24:38	0:0	10	=
water	24:40	0:0	10	link
op	24:44	0:0	10	->
water	24:46	0:0	10	in_formats
op	24:56	0:0	10	->
water	24:58	0:0	10	formats
op	24:65	0:0	10	[
water	24:66	0:0	10	i
op	24:67	0:0	10	]
water	25:16	0:0	10	best
op	25:21	0:0	10	=
call	25:23	25:69	10	find_best_sample_fmt_of_2
arg	25:49	25:53	11	best
water	25:49	0:0	12	best
arg	25:55	25:56	11	p
water	25:55	0:0	12	p
arg	25:58	25:69	11	ref->format
water	25:58	0:0	12	ref
op	25:61	0:0	12	->
water	25:63	0:0	12	format
water	25:70	0:0	10	;
water	26:12	0:0	10	}
call	27:12	29:54	8	av_log
arg	27:19	27:28	9	link->src
water	27:19	0:0	10	link
op	27:23	0:0	10	->
water	27:25	0:0	10	src
arg	27:29	27:41	9	AV_LOG_DEBUG
water	27:29	0:0	10	AV_LOG_DEBUG
arg	27:43	27:74	9	"picking %s out of %d ref:%s\n"
water	27:43	0:0	10	"picking %s out of %d ref:%s\n"
arg	28:19	28:47	9	av_get_sample_fmt_name(best)
call	28:19	28:46	10	av_get_sample_fmt_name
arg	28:42	28:46	11	best
water	28:42	0:0	12	best
arg	28:49	28:77	9	link->in_formats->nb_formats
water	28:49	0:0	10	link
op	28:53	0:0	10	->
water	28:55	0:0	10	in_formats
op	28:65	0:0	10	->
water	28:67	0:0	10	nb_formats
arg	29:19	29:54	9	av_get_sample_fmt_name(ref->format)
call	29:19	29:53	10	av_get_sample_fmt_name
arg	29:42	29:53	11	ref->format
water	29:42	0:0	12	ref
op	29:45	0:0	12	->
water	29:47	0:0	12	format
water	29:55	0:0	8	;
water	30:12	0:0	8	link
op	30:16	0:0	8	->
water	30:18	0:0	8	in_formats
op	30:28	0:0	8	->
water	30:30	0:0	8	formats
op	30:37	0:0	8	[
water	30:38	0:0	8	0
op	30:39	0:0	8	]
op	30:41	0:0	8	=
water	30:43	0:0	8	best
water	30:47	0:0	8	;
water	31:8	0:0	8	}
water	32:4	0:0	6	}
water	33:4	0:0	2	link
op	33:8	0:0	2	->
water	33:10	0:0	2	in_formats
op	33:20	0:0	2	->
water	33:22	0:0	2	nb_formats
op	33:33	0:0	2	=
water	33:35	0:0	2	1
water	33:36	0:0	2	;
water	34:4	0:0	2	link
op	34:8	0:0	2	->
water	34:10	0:0	2	format
op	34:17	0:0	2	=
water	34:19	0:0	2	link
op	34:23	0:0	2	->
water	34:25	0:0	2	in_formats
op	34:35	0:0	2	->
water	34:37	0:0	2	formats
op	34:44	0:0	2	[
water	34:45	0:0	2	0
op	34:46	0:0	2	]
water	34:47	0:0	2	;
if	35:4	60:4	2	(link -> type == AVMEDIA_TYPE_AUDIO)
cond	35:8	35:22	3	link -> type == AVMEDIA_TYPE_AUDIO
water	35:8	0:0	4	link
op	35:12	0:0	4	->
water	35:14	0:0	4	type
op	35:19	0:0	4	==
water	35:22	0:0	4	AVMEDIA_TYPE_AUDIO
stmts	35:42	60:4	3	
water	35:42	0:0	4	{
if	36:8	41:8	4	(! link -> in_samplerates -> nb_formats)
cond	36:12	36:35	5	! link -> in_samplerates -> nb_formats
op	36:12	0:0	6	!
water	36:13	0:0	6	link
op	36:17	0:0	6	->
water	36:19	0:0	6	in_samplerates
op	36:33	0:0	6	->
water	36:35	0:0	6	nb_formats
stmts	36:47	41:8	5	
water	36:47	0:0	6	{
call	37:12	39:34	6	av_log
arg	37:19	37:28	7	link->src
water	37:19	0:0	8	link
op	37:23	0:0	8	->
water	37:25	0:0	8	src
arg	37:30	37:42	7	AV_LOG_ERROR
water	37:30	0:0	8	AV_LOG_ERROR
arg	37:44	38:59	7	"Cannot select sample rate for"" the link between filters %s and %s.\n"
water	37:44	0:0	8	"Cannot select sample rate for"
water	38:19	0:0	8	" the link between filters %s and %s.\n"
arg	38:61	38:76	7	link->src->name
water	38:61	0:0	8	link
op	38:65	0:0	8	->
water	38:67	0:0	8	src
op	38:70	0:0	8	->
water	38:72	0:0	8	name
arg	39:19	39:34	7	link->dst->name
water	39:19	0:0	8	link
op	39:23	0:0	8	->
water	39:25	0:0	8	dst
op	39:28	0:0	8	->
water	39:30	0:0	8	name
water	39:35	0:0	6	;
return	40:12	40:34	6	AVERROR(EINVAL)
call	40:19	40:33	7	AVERROR
arg	40:27	40:33	8	EINVAL
water	40:27	0:0	9	EINVAL
water	41:8	0:0	6	}
water	42:8	0:0	4	link
op	42:12	0:0	4	->
water	42:14	0:0	4	in_samplerates
op	42:28	0:0	4	->
water	42:30	0:0	4	nb_formats
op	42:41	0:0	4	=
water	42:43	0:0	4	1
water	42:44	0:0	4	;
water	43:8	0:0	4	link
op	43:12	0:0	4	->
water	43:14	0:0	4	sample_rate
op	43:26	0:0	4	=
water	43:28	0:0	4	link
op	43:32	0:0	4	->
water	43:34	0:0	4	in_samplerates
op	43:48	0:0	4	->
water	43:50	0:0	4	formats
op	43:57	0:0	4	[
water	43:58	0:0	4	0
op	43:59	0:0	4	]
water	43:60	0:0	4	;
if	44:8	53:8	4	(link -> in_channel_layouts -> all_layouts)
cond	44:12	44:38	5	link -> in_channel_layouts -> all_layouts
water	44:12	0:0	6	link
op	44:16	0:0	6	->
water	44:18	0:0	6	in_channel_layouts
op	44:36	0:0	6	->
water	44:38	0:0	6	all_layouts
stmts	44:51	53:8	5	
water	44:51	0:0	6	{
call	45:12	47:34	6	av_log
arg	45:19	45:28	7	link->src
water	45:19	0:0	8	link
op	45:23	0:0	8	->
water	45:25	0:0	8	src
arg	45:30	45:42	7	AV_LOG_ERROR
water	45:30	0:0	8	AV_LOG_ERROR
arg	45:44	46:59	7	"Cannot select channel layout for"" the link between filters %s and %s.\n"
water	45:44	0:0	8	"Cannot select channel layout for"
water	46:19	0:0	8	" the link between filters %s and %s.\n"
arg	46:61	46:76	7	link->src->name
water	46:61	0:0	8	link
op	46:65	0:0	8	->
water	46:67	0:0	8	src
op	46:70	0:0	8	->
water	46:72	0:0	8	name
arg	47:19	47:34	7	link->dst->name
water	47:19	0:0	8	link
op	47:23	0:0	8	->
water	47:25	0:0	8	dst
op	47:28	0:0	8	->
water	47:30	0:0	8	name
water	47:35	0:0	6	;
if	48:12	51:64	6	(! link -> in_channel_layouts -> all_counts)
cond	48:16	48:43	7	! link -> in_channel_layouts -> all_counts
op	48:16	0:0	8	!
water	48:17	0:0	8	link
op	48:21	0:0	8	->
water	48:23	0:0	8	in_channel_layouts
op	48:41	0:0	8	->
water	48:43	0:0	8	all_counts
stmts	49:16	51:64	7	
call	49:16	51:63	8	av_log
arg	49:23	49:32	9	link->src
water	49:23	0:0	10	link
op	49:27	0:0	10	->
water	49:29	0:0	10	src
arg	49:34	49:46	9	AV_LOG_ERROR
water	49:34	0:0	10	AV_LOG_ERROR
arg	49:48	51:63	9	"Unknown channel layouts not ""supported, try specifying a channel layout using ""'aformat=channel_layouts=something'.\n"
water	49:48	0:0	10	"Unknown channel layouts not "
water	50:23	0:0	10	"supported, try specifying a channel layout using "
water	51:23	0:0	10	"'aformat=channel_layouts=something'.\n"
water	51:64	0:0	8	;
return	52:12	52:34	6	AVERROR(EINVAL)
call	52:19	52:33	7	AVERROR
arg	52:27	52:33	8	EINVAL
water	52:27	0:0	9	EINVAL
water	53:8	0:0	6	}
water	54:8	0:0	4	link
op	54:12	0:0	4	->
water	54:14	0:0	4	in_channel_layouts
op	54:32	0:0	4	->
water	54:34	0:0	4	nb_channel_layouts
op	54:53	0:0	4	=
water	54:55	0:0	4	1
water	54:56	0:0	4	;
water	55:8	0:0	4	link
op	55:12	0:0	4	->
water	55:14	0:0	4	channel_layout
op	55:29	0:0	4	=
water	55:31	0:0	4	link
op	55:35	0:0	4	->
water	55:37	0:0	4	in_channel_layouts
op	55:55	0:0	4	->
water	55:57	0:0	4	channel_layouts
op	55:72	0:0	4	[
water	55:73	0:0	4	0
op	55:74	0:0	4	]
water	55:75	0:0	4	;
if	56:8	57:36	4	(( link -> channels =FF_LAYOUT2COUNT (link -> channel_layout ) ))
cond	56:12	56:67	5	( link -> channels =FF_LAYOUT2COUNT (link -> channel_layout ) )
water	56:12	0:0	6	(
water	56:13	0:0	6	link
op	56:17	0:0	6	->
water	56:19	0:0	6	channels
op	56:28	0:0	6	=
call	56:30	56:66	6	FF_LAYOUT2COUNT
arg	56:46	56:66	7	link->channel_layout
water	56:46	0:0	8	link
op	56:50	0:0	8	->
water	56:52	0:0	8	channel_layout
water	56:67	0:0	6	)
stmts	57:12	57:36	5	
water	57:12	0:0	6	link
op	57:16	0:0	6	->
water	57:18	0:0	6	channel_layout
op	57:33	0:0	6	=
water	57:35	0:0	6	0
water	57:36	0:0	6	;
else	58:8	59:84	4
stmts	59:12	59:84	5	
water	59:12	0:0	6	link
op	59:16	0:0	6	->
water	59:18	0:0	6	channels
op	59:27	0:0	6	=
call	59:29	59:83	6	av_get_channel_layout_nb_channels
arg	59:63	59:83	7	link->channel_layout
water	59:63	0:0	8	link
op	59:67	0:0	8	->
water	59:69	0:0	8	channel_layout
water	59:84	0:0	6	;
water	60:4	0:0	4	}
call	61:4	61:38	2	ff_formats_unref
arg	61:21	61:38	3	&link->in_formats
op	61:21	0:0	4	&
water	61:22	0:0	4	link
op	61:26	0:0	4	->
water	61:28	0:0	4	in_formats
water	61:39	0:0	2	;
call	62:4	62:39	2	ff_formats_unref
arg	62:21	62:39	3	&link->out_formats
op	62:21	0:0	4	&
water	62:22	0:0	4	link
op	62:26	0:0	4	->
water	62:28	0:0	4	out_formats
water	62:40	0:0	2	;
call	63:4	63:42	2	ff_formats_unref
arg	63:21	63:42	3	&link->in_samplerates
op	63:21	0:0	4	&
water	63:22	0:0	4	link
op	63:26	0:0	4	->
water	63:28	0:0	4	in_samplerates
water	63:43	0:0	2	;
call	64:4	64:43	2	ff_formats_unref
arg	64:21	64:43	3	&link->out_samplerates
op	64:21	0:0	4	&
water	64:22	0:0	4	link
op	64:26	0:0	4	->
water	64:28	0:0	4	out_samplerates
water	64:44	0:0	2	;
call	65:4	65:54	2	ff_channel_layouts_unref
arg	65:29	65:54	3	&link->in_channel_layouts
op	65:29	0:0	4	&
water	65:30	0:0	4	link
op	65:34	0:0	4	->
water	65:36	0:0	4	in_channel_layouts
water	65:55	0:0	2	;
call	66:4	66:55	2	ff_channel_layouts_unref
arg	66:29	66:55	3	&link->out_channel_layouts
op	66:29	0:0	4	&
water	66:30	0:0	4	link
op	66:34	0:0	4	->
water	66:36	0:0	4	out_channel_layouts
water	66:56	0:0	2	;
return	67:4	67:12	2	0
water	67:11	0:0	3	0

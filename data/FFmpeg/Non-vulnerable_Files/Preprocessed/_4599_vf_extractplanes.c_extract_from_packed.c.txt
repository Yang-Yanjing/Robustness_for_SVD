func	1:0	23:0	0	static void	extract_from_packed
params	1:31	0:0	1	
param	1:32	1:44	2	uint8_t *	dst
param	1:46	1:62	2	int	dst_linesize
param	2:32	2:50	2	const uint8_t *	src
param	2:52	2:68	2	int	src_linesize
param	3:32	3:41	2	int	width
param	3:43	3:53	2	int	height
param	4:32	4:41	2	int	depth
param	4:43	4:51	2	int	step
param	4:53	4:61	2	int	comp
stmnts	0:0	22:4	1	
decl	6:4	6:12	2	int	x
water	6:9	0:0	2	,
decl	6:4	6:12	2	int	y
for	7:4	22:4	2	(y = 0 ;y < height;y ++)
forinit	7:9	7:14	3	y = 0 ;
water	7:9	0:0	4	y
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	y < height
water	7:16	0:0	4	y
op	7:18	0:0	4	<
water	7:20	0:0	4	height
forexpr	7:28	7:29	3	y ++
water	7:28	0:0	4	y
op	7:29	0:0	4	++
stmts	7:33	22:4	3	
water	7:33	0:0	4	{
switch	8:8	19:8	4	(depth)
cond	8:16	8:16	5	depth
water	8:16	0:0	6	depth
stmts	8:23	19:8	5	
water	8:23	0:0	6	{
label	9:8	9:14	6	case 1 :
for	10:12	11:45	6	(x = 0 ;x < width;x ++)
forinit	10:17	10:22	7	x = 0 ;
water	10:17	0:0	8	x
op	10:19	0:0	8	=
water	10:21	0:0	8	0
water	10:22	0:0	8	;
cond	10:24	10:28	7	x < width
water	10:24	0:0	8	x
op	10:26	0:0	8	<
water	10:28	0:0	8	width
forexpr	10:35	10:36	7	x ++
water	10:35	0:0	8	x
op	10:36	0:0	8	++
stmts	11:16	11:45	7	
water	11:16	0:0	8	dst
op	11:19	0:0	8	[
water	11:20	0:0	8	x
op	11:21	0:0	8	]
op	11:23	0:0	8	=
water	11:25	0:0	8	src
op	11:28	0:0	8	[
water	11:29	0:0	8	x
op	11:31	0:0	8	*
water	11:33	0:0	8	step
op	11:38	0:0	8	+
water	11:40	0:0	8	comp
op	11:44	0:0	8	]
water	11:45	0:0	8	;
break	12:12	12:17	6	
label	13:8	13:14	6	case 2 :
for	14:12	17:12	6	(x = 0 ;x < width;x ++)
forinit	14:17	14:22	7	x = 0 ;
water	14:17	0:0	8	x
op	14:19	0:0	8	=
water	14:21	0:0	8	0
water	14:22	0:0	8	;
cond	14:24	14:28	7	x < width
water	14:24	0:0	8	x
op	14:26	0:0	8	<
water	14:28	0:0	8	width
forexpr	14:35	14:36	7	x ++
water	14:35	0:0	8	x
op	14:36	0:0	8	++
stmts	14:40	17:12	7	
water	14:40	0:0	8	{
water	15:16	0:0	8	dst
op	15:19	0:0	8	[
water	15:20	0:0	8	x
op	15:22	0:0	8	*
water	15:24	0:0	8	2
op	15:29	0:0	8	]
op	15:31	0:0	8	=
water	15:33	0:0	8	src
op	15:36	0:0	8	[
water	15:37	0:0	8	x
op	15:39	0:0	8	*
water	15:41	0:0	8	step
op	15:46	0:0	8	+
water	15:48	0:0	8	comp
op	15:53	0:0	8	*
water	15:55	0:0	8	2
op	15:60	0:0	8	]
water	15:61	0:0	8	;
water	16:16	0:0	8	dst
op	16:19	0:0	8	[
water	16:20	0:0	8	x
op	16:22	0:0	8	*
water	16:24	0:0	8	2
op	16:26	0:0	8	+
water	16:28	0:0	8	1
op	16:29	0:0	8	]
op	16:31	0:0	8	=
water	16:33	0:0	8	src
op	16:36	0:0	8	[
water	16:37	0:0	8	x
op	16:39	0:0	8	*
water	16:41	0:0	8	step
op	16:46	0:0	8	+
water	16:48	0:0	8	comp
op	16:53	0:0	8	*
water	16:55	0:0	8	2
op	16:57	0:0	8	+
water	16:59	0:0	8	1
op	16:60	0:0	8	]
water	16:61	0:0	8	;
water	17:12	0:0	8	}
break	18:12	18:17	6	
water	19:8	0:0	6	}
water	20:8	0:0	4	dst
op	20:12	0:0	4	+=
water	20:15	0:0	4	dst_linesize
water	20:27	0:0	4	;
water	21:8	0:0	4	src
op	21:12	0:0	4	+=
water	21:15	0:0	4	src_linesize
water	21:27	0:0	4	;
water	22:4	0:0	4	}
decl	30:4	30:12	0	int	x
water	30:9	0:0	0	,
decl	30:4	30:12	0	int	y

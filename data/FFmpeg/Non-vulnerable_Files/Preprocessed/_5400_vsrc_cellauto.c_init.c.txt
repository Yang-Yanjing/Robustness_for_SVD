func	1:15	38:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	37:12	1	
decl	3:4	3:41	2	CellAutoContext	*cellauto
op	3:30	0:0	2	=
water	3:32	0:0	2	ctx
op	3:35	0:0	2	->
water	3:37	0:0	2	priv
decl	4:4	4:11	2	int	ret
if	5:4	6:50	2	(! cellauto -> w && ! cellauto -> filename && ! cellauto -> pattern)
cond	5:8	5:58	3	! cellauto -> w && ! cellauto -> filename && ! cellauto -> pattern
op	5:8	0:0	4	!
water	5:9	0:0	4	cellauto
op	5:17	0:0	4	->
water	5:19	0:0	4	w
op	5:21	0:0	4	&&
op	5:24	0:0	4	!
water	5:25	0:0	4	cellauto
op	5:33	0:0	4	->
water	5:35	0:0	4	filename
op	5:44	0:0	4	&&
op	5:47	0:0	4	!
water	5:48	0:0	4	cellauto
op	5:56	0:0	4	->
water	5:58	0:0	4	pattern
stmts	6:8	6:50	3	
call	6:8	6:49	4	av_opt_set
arg	6:19	6:27	5	cellauto
water	6:19	0:0	6	cellauto
arg	6:29	6:35	5	"size"
water	6:29	0:0	6	"size"
arg	6:37	6:46	5	"320x518"
water	6:37	0:0	6	"320x518"
arg	6:48	6:49	5	0
water	6:48	0:0	6	0
water	6:50	0:0	4	;
if	7:4	10:4	2	(cellauto -> filename && cellauto -> pattern)
cond	7:8	7:40	3	cellauto -> filename && cellauto -> pattern
water	7:8	0:0	4	cellauto
op	7:16	0:0	4	->
water	7:18	0:0	4	filename
op	7:27	0:0	4	&&
water	7:30	0:0	4	cellauto
op	7:38	0:0	4	->
water	7:40	0:0	4	pattern
stmts	7:49	10:4	3	
water	7:49	0:0	4	{
call	8:8	8:93	4	av_log
arg	8:15	8:18	5	ctx
water	8:15	0:0	6	ctx
arg	8:20	8:32	5	AV_LOG_ERROR
water	8:20	0:0	6	AV_LOG_ERROR
arg	8:34	8:93	5	"Only one of the filename or pattern options can be used\n"
water	8:34	0:0	6	"Only one of the filename or pattern options can be used\n"
water	8:94	0:0	4	;
return	9:8	9:30	4	AVERROR(EINVAL)
call	9:15	9:29	5	AVERROR
arg	9:23	9:29	6	EINVAL
water	9:23	0:0	7	EINVAL
water	10:4	0:0	4	}
if	11:4	14:4	2	(cellauto -> filename)
cond	11:8	11:18	3	cellauto -> filename
water	11:8	0:0	4	cellauto
op	11:16	0:0	4	->
water	11:18	0:0	4	filename
stmts	11:28	14:4	3	
water	11:28	0:0	4	{
if	12:8	13:22	4	(( ret =init_pattern_from_file (ctx ) ) < 0)
cond	12:12	12:50	5	( ret =init_pattern_from_file (ctx ) ) < 0
water	12:12	0:0	6	(
water	12:13	0:0	6	ret
op	12:17	0:0	6	=
call	12:19	12:45	6	init_pattern_from_file
arg	12:42	12:45	7	ctx
water	12:42	0:0	8	ctx
water	12:46	0:0	6	)
op	12:48	0:0	6	<
water	12:50	0:0	6	0
stmts	13:12	13:22	5	
return	13:12	13:22	6	ret
water	13:19	0:0	7	ret
water	14:4	0:0	4	}
else	14:6	17:4	2
stmts	14:11	17:4	3	
if	14:11	17:4	4	(cellauto -> pattern)
cond	14:15	14:25	5	cellauto -> pattern
water	14:15	0:0	6	cellauto
op	14:23	0:0	6	->
water	14:25	0:0	6	pattern
stmts	14:34	17:4	5	
water	14:34	0:0	6	{
if	15:8	16:22	6	(( ret =init_pattern_from_string (ctx ) ) < 0)
cond	15:12	15:52	7	( ret =init_pattern_from_string (ctx ) ) < 0
water	15:12	0:0	8	(
water	15:13	0:0	8	ret
op	15:17	0:0	8	=
call	15:19	15:47	8	init_pattern_from_string
arg	15:44	15:47	9	ctx
water	15:44	0:0	10	ctx
water	15:48	0:0	8	)
op	15:50	0:0	8	<
water	15:52	0:0	8	0
stmts	16:12	16:22	7	
return	16:12	16:22	8	ret
water	16:19	0:0	9	ret
water	17:4	0:0	6	}
else	17:6	31:4	2
stmts	17:11	31:4	3	
water	17:11	0:0	4	{
decl	19:8	19:13	4	int	i
water	20:8	0:0	4	cellauto
op	20:16	0:0	4	->
water	20:18	0:0	4	buf
op	20:22	0:0	4	=
call	20:24	20:83	4	av_mallocz_array
arg	20:41	20:70	5	sizeof(uint8_t)*cellauto->w
op	20:41	0:0	6	sizeof
water	20:47	0:0	6	(
water	20:48	0:0	6	uint8_t
water	20:55	0:0	6	)
op	20:57	0:0	6	*
water	20:59	0:0	6	cellauto
op	20:67	0:0	6	->
water	20:69	0:0	6	w
arg	20:72	20:83	5	cellauto->h
water	20:72	0:0	6	cellauto
op	20:80	0:0	6	->
water	20:82	0:0	6	h
water	20:84	0:0	4	;
if	21:8	22:34	4	(! cellauto -> buf)
cond	21:12	21:23	5	! cellauto -> buf
op	21:12	0:0	6	!
water	21:13	0:0	6	cellauto
op	21:21	0:0	6	->
water	21:23	0:0	6	buf
stmts	22:12	22:34	5	
return	22:12	22:34	6	AVERROR(ENOMEM)
call	22:19	22:33	7	AVERROR
arg	22:27	22:33	8	ENOMEM
water	22:27	0:0	9	ENOMEM
if	23:8	24:56	4	(cellauto -> random_seed == - 1)
cond	23:12	23:38	5	cellauto -> random_seed == - 1
water	23:12	0:0	6	cellauto
op	23:20	0:0	6	->
water	23:22	0:0	6	random_seed
op	23:34	0:0	6	==
op	23:37	0:0	6	-
water	23:38	0:0	6	1
stmts	24:12	24:56	5	
water	24:12	0:0	6	cellauto
op	24:20	0:0	6	->
water	24:22	0:0	6	random_seed
op	24:34	0:0	6	=
call	24:36	24:55	6	av_get_random_seed
water	24:56	0:0	6	;
call	25:8	25:57	4	av_lfg_init
arg	25:20	25:34	5	&cellauto->lfg
op	25:20	0:0	6	&
water	25:21	0:0	6	cellauto
op	25:29	0:0	6	->
water	25:31	0:0	6	lfg
arg	25:36	25:57	5	cellauto->random_seed
water	25:36	0:0	6	cellauto
op	25:44	0:0	6	->
water	25:46	0:0	6	random_seed
water	25:58	0:0	4	;
for	26:8	30:8	4	(i = 0 ;i < cellauto -> w;i ++)
forinit	26:13	26:18	5	i = 0 ;
water	26:13	0:0	6	i
op	26:15	0:0	6	=
water	26:17	0:0	6	0
water	26:18	0:0	6	;
cond	26:20	26:34	5	i < cellauto -> w
water	26:20	0:0	6	i
op	26:22	0:0	6	<
water	26:24	0:0	6	cellauto
op	26:32	0:0	6	->
water	26:34	0:0	6	w
forexpr	26:37	26:38	5	i ++
water	26:37	0:0	6	i
op	26:38	0:0	6	++
stmts	26:42	30:8	5	
water	26:42	0:0	6	{
decl	27:12	27:70	6	double	r
op	27:21	0:0	6	=
water	27:23	0:0	6	(
water	27:24	0:0	6	double
water	27:30	0:0	6	)
call	27:31	27:56	7	av_lfg_get
arg	27:42	27:56	8	&cellauto->lfg
op	27:42	0:0	9	&
water	27:43	0:0	9	cellauto
op	27:51	0:0	9	->
water	27:53	0:0	9	lfg
op	27:58	0:0	6	/
water	27:60	0:0	6	UINT32_MAX
if	28:12	29:36	6	(r <= cellauto -> random_fill_ratio)
cond	28:16	28:31	7	r <= cellauto -> random_fill_ratio
water	28:16	0:0	8	r
op	28:18	0:0	8	<=
water	28:21	0:0	8	cellauto
op	28:29	0:0	8	->
water	28:31	0:0	8	random_fill_ratio
stmts	29:16	29:36	7	
water	29:16	0:0	8	cellauto
op	29:24	0:0	8	->
water	29:26	0:0	8	buf
op	29:29	0:0	8	[
water	29:30	0:0	8	i
op	29:31	0:0	8	]
op	29:33	0:0	8	=
water	29:35	0:0	8	1
water	29:36	0:0	8	;
water	30:8	0:0	6	}
water	31:4	0:0	4	}
call	32:4	36:32	2	av_log
arg	32:11	32:14	3	ctx
water	32:11	0:0	4	ctx
arg	32:16	32:30	3	AV_LOG_VERBOSE
water	32:16	0:0	4	AV_LOG_VERBOSE
arg	33:11	33:74	3	"s:%dx%d r:%d/%d rule:%d stitch:%d scroll:%d full:%d seed:%u\n"
water	33:11	0:0	4	"s:%dx%d r:%d/%d rule:%d stitch:%d scroll:%d full:%d seed:%u\n"
arg	34:11	34:22	3	cellauto->w
water	34:11	0:0	4	cellauto
op	34:19	0:0	4	->
water	34:21	0:0	4	w
arg	34:24	34:35	3	cellauto->h
water	34:24	0:0	4	cellauto
op	34:32	0:0	4	->
water	34:34	0:0	4	h
arg	34:37	34:61	3	cellauto->frame_rate.num
water	34:37	0:0	4	cellauto
op	34:45	0:0	4	->
water	34:47	0:0	4	frame_rate
op	34:57	0:0	4	.
water	34:58	0:0	4	num
arg	34:63	34:87	3	cellauto->frame_rate.den
water	34:63	0:0	4	cellauto
op	34:71	0:0	4	->
water	34:73	0:0	4	frame_rate
op	34:83	0:0	4	.
water	34:84	0:0	4	den
arg	35:11	35:25	3	cellauto->rule
water	35:11	0:0	4	cellauto
op	35:19	0:0	4	->
water	35:21	0:0	4	rule
arg	35:27	35:43	3	cellauto->stitch
water	35:27	0:0	4	cellauto
op	35:35	0:0	4	->
water	35:37	0:0	4	stitch
arg	35:45	35:61	3	cellauto->scroll
water	35:45	0:0	4	cellauto
op	35:53	0:0	4	->
water	35:55	0:0	4	scroll
arg	35:63	35:83	3	cellauto->start_full
water	35:63	0:0	4	cellauto
op	35:71	0:0	4	->
water	35:73	0:0	4	start_full
arg	36:11	36:32	3	cellauto->random_seed
water	36:11	0:0	4	cellauto
op	36:19	0:0	4	->
water	36:21	0:0	4	random_seed
water	36:33	0:0	2	;
return	37:4	37:12	2	0
water	37:11	0:0	3	0

func	1:0	33:0	0	static int	acrossfade_config_output
params	1:35	0:0	1	
param	1:36	1:57	2	AVFilterLink *	outlink
stmnts	0:0	32:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:36	2	AudioFadeContext	*s
op	4:25	0:0	2	=
water	4:27	0:0	2	ctx
op	4:30	0:0	2	->
water	4:32	0:0	2	priv
if	5:4	11:4	2	(ctx -> inputs [ 0 ] -> sample_rate != ctx -> inputs [ 1 ] -> sample_rate)
cond	5:8	5:55	3	ctx -> inputs [ 0 ] -> sample_rate != ctx -> inputs [ 1 ] -> sample_rate
water	5:8	0:0	4	ctx
op	5:11	0:0	4	->
water	5:13	0:0	4	inputs
op	5:19	0:0	4	[
water	5:20	0:0	4	0
op	5:21	0:0	4	]
op	5:22	0:0	4	->
water	5:24	0:0	4	sample_rate
op	5:36	0:0	4	!=
water	5:39	0:0	4	ctx
op	5:42	0:0	4	->
water	5:44	0:0	4	inputs
op	5:50	0:0	4	[
water	5:51	0:0	4	1
op	5:52	0:0	4	]
op	5:53	0:0	4	->
water	5:55	0:0	4	sample_rate
stmts	5:68	11:4	3	
water	5:68	0:0	4	{
call	6:8	9:71	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	7:15	8:43	5	"Inputs must have the same sample rate ""%d for in0 vs %d for in1\n"
water	7:15	0:0	6	"Inputs must have the same sample rate "
water	8:15	0:0	6	"%d for in0 vs %d for in1\n"
arg	9:15	9:42	5	ctx->inputs[0]->sample_rate
water	9:15	0:0	6	ctx
op	9:18	0:0	6	->
water	9:20	0:0	6	inputs
op	9:26	0:0	6	[
water	9:27	0:0	6	0
op	9:28	0:0	6	]
op	9:29	0:0	6	->
water	9:31	0:0	6	sample_rate
arg	9:44	9:71	5	ctx->inputs[1]->sample_rate
water	9:44	0:0	6	ctx
op	9:47	0:0	6	->
water	9:49	0:0	6	inputs
op	9:55	0:0	6	[
water	9:56	0:0	6	1
op	9:57	0:0	6	]
op	9:58	0:0	6	->
water	9:60	0:0	6	sample_rate
water	9:72	0:0	4	;
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
water	11:4	0:0	4	}
water	12:4	0:0	2	outlink
op	12:11	0:0	2	->
water	12:13	0:0	2	sample_rate
op	12:25	0:0	2	=
water	12:27	0:0	2	ctx
op	12:30	0:0	2	->
water	12:32	0:0	2	inputs
op	12:38	0:0	2	[
water	12:39	0:0	2	0
op	12:40	0:0	2	]
op	12:41	0:0	2	->
water	12:43	0:0	2	sample_rate
water	12:54	0:0	2	;
water	13:4	0:0	2	outlink
op	13:11	0:0	2	->
water	13:13	0:0	2	time_base
op	13:25	0:0	2	=
water	13:27	0:0	2	ctx
op	13:30	0:0	2	->
water	13:32	0:0	2	inputs
op	13:38	0:0	2	[
water	13:39	0:0	2	0
op	13:40	0:0	2	]
op	13:41	0:0	2	->
water	13:43	0:0	2	time_base
water	13:52	0:0	2	;
water	14:4	0:0	2	outlink
op	14:11	0:0	2	->
water	14:13	0:0	2	channel_layout
op	14:28	0:0	2	=
water	14:30	0:0	2	ctx
op	14:33	0:0	2	->
water	14:35	0:0	2	inputs
op	14:41	0:0	2	[
water	14:42	0:0	2	0
op	14:43	0:0	2	]
op	14:44	0:0	2	->
water	14:46	0:0	2	channel_layout
water	14:60	0:0	2	;
water	15:4	0:0	2	outlink
op	15:11	0:0	2	->
water	15:13	0:0	2	channels
op	15:22	0:0	2	=
water	15:24	0:0	2	ctx
op	15:27	0:0	2	->
water	15:29	0:0	2	inputs
op	15:35	0:0	2	[
water	15:36	0:0	2	0
op	15:37	0:0	2	]
op	15:38	0:0	2	->
water	15:40	0:0	2	channels
water	15:48	0:0	2	;
water	16:4	0:0	2	outlink
op	16:11	0:0	2	->
water	16:13	0:0	2	flags
op	16:19	0:0	2	|=
water	16:22	0:0	2	FF_LINK_FLAG_REQUEST_LOOP
water	16:47	0:0	2	;
switch	17:4	26:4	2	(outlink -> format)
cond	17:12	17:21	3	outlink -> format
water	17:12	0:0	4	outlink
op	17:19	0:0	4	->
water	17:21	0:0	4	format
stmts	17:29	26:4	3	
water	17:29	0:0	4	{
label	18:4	18:26	4	case AV_SAMPLE_FMT_DBL :
water	18:29	0:0	4	s
op	18:30	0:0	4	->
water	18:32	0:0	4	crossfade_samples
op	18:50	0:0	4	=
water	18:52	0:0	4	crossfade_samples_dbl
water	18:73	0:0	4	;
break	18:76	18:81	4	
label	19:4	19:27	4	case AV_SAMPLE_FMT_DBLP :
water	19:29	0:0	4	s
op	19:30	0:0	4	->
water	19:32	0:0	4	crossfade_samples
op	19:50	0:0	4	=
water	19:52	0:0	4	crossfade_samples_dblp
water	19:74	0:0	4	;
break	19:76	19:81	4	
label	20:4	20:26	4	case AV_SAMPLE_FMT_FLT :
water	20:29	0:0	4	s
op	20:30	0:0	4	->
water	20:32	0:0	4	crossfade_samples
op	20:50	0:0	4	=
water	20:52	0:0	4	crossfade_samples_flt
water	20:73	0:0	4	;
break	20:76	20:81	4	
label	21:4	21:27	4	case AV_SAMPLE_FMT_FLTP :
water	21:29	0:0	4	s
op	21:30	0:0	4	->
water	21:32	0:0	4	crossfade_samples
op	21:50	0:0	4	=
water	21:52	0:0	4	crossfade_samples_fltp
water	21:74	0:0	4	;
break	21:76	21:81	4	
label	22:4	22:26	4	case AV_SAMPLE_FMT_S16 :
water	22:29	0:0	4	s
op	22:30	0:0	4	->
water	22:32	0:0	4	crossfade_samples
op	22:50	0:0	4	=
water	22:52	0:0	4	crossfade_samples_s16
water	22:73	0:0	4	;
break	22:76	22:81	4	
label	23:4	23:27	4	case AV_SAMPLE_FMT_S16P :
water	23:29	0:0	4	s
op	23:30	0:0	4	->
water	23:32	0:0	4	crossfade_samples
op	23:50	0:0	4	=
water	23:52	0:0	4	crossfade_samples_s16p
water	23:74	0:0	4	;
break	23:76	23:81	4	
label	24:4	24:26	4	case AV_SAMPLE_FMT_S32 :
water	24:29	0:0	4	s
op	24:30	0:0	4	->
water	24:32	0:0	4	crossfade_samples
op	24:50	0:0	4	=
water	24:52	0:0	4	crossfade_samples_s32
water	24:73	0:0	4	;
break	24:76	24:81	4	
label	25:4	25:27	4	case AV_SAMPLE_FMT_S32P :
water	25:29	0:0	4	s
op	25:30	0:0	4	->
water	25:32	0:0	4	crossfade_samples
op	25:50	0:0	4	=
water	25:52	0:0	4	crossfade_samples_s32p
water	25:74	0:0	4	;
break	25:76	25:81	4	
water	26:4	0:0	4	}
call	27:4	27:25	2	config_output
arg	27:18	27:25	3	outlink
water	27:18	0:0	4	outlink
water	27:26	0:0	2	;
water	28:4	0:0	2	s
op	28:5	0:0	2	->
water	28:7	0:0	2	fifo
op	28:11	0:0	2	[
water	28:12	0:0	2	0
op	28:13	0:0	2	]
op	28:15	0:0	2	=
call	28:17	28:86	2	av_audio_fifo_alloc
arg	28:37	28:52	3	outlink->format
water	28:37	0:0	4	outlink
op	28:44	0:0	4	->
water	28:46	0:0	4	format
arg	28:54	28:71	3	outlink->channels
water	28:54	0:0	4	outlink
op	28:61	0:0	4	->
water	28:63	0:0	4	channels
arg	28:73	28:86	3	s->nb_samples
water	28:73	0:0	4	s
op	28:74	0:0	4	->
water	28:76	0:0	4	nb_samples
water	28:87	0:0	2	;
water	29:4	0:0	2	s
op	29:5	0:0	2	->
water	29:7	0:0	2	fifo
op	29:11	0:0	2	[
water	29:12	0:0	2	1
op	29:13	0:0	2	]
op	29:15	0:0	2	=
call	29:17	29:86	2	av_audio_fifo_alloc
arg	29:37	29:52	3	outlink->format
water	29:37	0:0	4	outlink
op	29:44	0:0	4	->
water	29:46	0:0	4	format
arg	29:54	29:71	3	outlink->channels
water	29:54	0:0	4	outlink
op	29:61	0:0	4	->
water	29:63	0:0	4	channels
arg	29:73	29:86	3	s->nb_samples
water	29:73	0:0	4	s
op	29:74	0:0	4	->
water	29:76	0:0	4	nb_samples
water	29:87	0:0	2	;
if	30:4	31:30	2	(! s -> fifo [ 0 ] || ! s -> fifo [ 1 ])
cond	30:8	30:33	3	! s -> fifo [ 0 ] || ! s -> fifo [ 1 ]
op	30:8	0:0	4	!
water	30:9	0:0	4	s
op	30:10	0:0	4	->
water	30:12	0:0	4	fifo
op	30:16	0:0	4	[
water	30:17	0:0	4	0
op	30:18	0:0	4	]
op	30:20	0:0	4	||
op	30:23	0:0	4	!
water	30:24	0:0	4	s
op	30:25	0:0	4	->
water	30:27	0:0	4	fifo
op	30:31	0:0	4	[
water	30:32	0:0	4	1
op	30:33	0:0	4	]
stmts	31:8	31:30	3	
return	31:8	31:30	4	AVERROR(ENOMEM)
call	31:15	31:29	5	AVERROR
arg	31:23	31:29	6	ENOMEM
water	31:23	0:0	7	ENOMEM
return	32:4	32:12	2	0
water	32:11	0:0	3	0

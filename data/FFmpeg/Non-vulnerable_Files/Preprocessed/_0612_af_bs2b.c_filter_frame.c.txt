func	1:0	25:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:60	2	AVFrame *	frame
stmnts	0:0	24:46	1	
decl	3:4	3:11	2	int	ret
decl	4:4	4:22	2	AVFrame	*out_frame
decl	5:4	5:45	2	Bs2bContext	*bs2b
op	5:26	0:0	2	=
water	5:28	0:0	2	inlink
op	5:34	0:0	2	->
water	5:36	0:0	2	dst
op	5:39	0:0	2	->
water	5:41	0:0	2	priv
decl	6:4	6:51	2	AVFilterLink	*outlink
op	6:26	0:0	2	=
water	6:28	0:0	2	inlink
op	6:34	0:0	2	->
water	6:36	0:0	2	dst
op	6:39	0:0	2	->
water	6:41	0:0	2	outputs
op	6:48	0:0	2	[
water	6:49	0:0	2	0
op	6:50	0:0	2	]
if	7:4	9:4	2	(av_frame_is_writable (frame ))
cond	7:8	7:34	3	av_frame_is_writable (frame )
call	7:8	7:34	4	av_frame_is_writable
arg	7:29	7:34	5	frame
water	7:29	0:0	6	frame
stmts	7:37	9:4	3	
water	7:37	0:0	4	{
water	8:8	0:0	4	out_frame
op	8:18	0:0	4	=
water	8:20	0:0	4	frame
water	8:25	0:0	4	;
water	9:4	0:0	4	}
else	9:6	20:4	2
stmts	9:11	20:4	3	
water	9:11	0:0	4	{
water	10:8	0:0	4	out_frame
op	10:18	0:0	4	=
call	10:20	10:65	4	ff_get_audio_buffer
arg	10:40	10:46	5	inlink
water	10:40	0:0	6	inlink
arg	10:48	10:65	5	frame->nb_samples
water	10:48	0:0	6	frame
op	10:53	0:0	6	->
water	10:55	0:0	6	nb_samples
water	10:66	0:0	4	;
if	11:8	12:34	4	(! out_frame)
cond	11:12	11:13	5	! out_frame
op	11:12	0:0	6	!
water	11:13	0:0	6	out_frame
stmts	12:12	12:34	5	
return	12:12	12:34	6	AVERROR(ENOMEM)
call	12:19	12:33	7	AVERROR
arg	12:27	12:33	8	ENOMEM
water	12:27	0:0	9	ENOMEM
call	13:8	13:38	4	av_frame_copy
arg	13:22	13:31	5	out_frame
water	13:22	0:0	6	out_frame
arg	13:33	13:38	5	frame
water	13:33	0:0	6	frame
water	13:39	0:0	4	;
water	14:8	0:0	4	ret
op	14:12	0:0	4	=
call	14:14	14:50	4	av_frame_copy_props
arg	14:34	14:43	5	out_frame
water	14:34	0:0	6	out_frame
arg	14:45	14:50	5	frame
water	14:45	0:0	6	frame
water	14:51	0:0	4	;
if	15:8	19:8	4	(ret < 0)
cond	15:12	15:18	5	ret < 0
water	15:12	0:0	6	ret
op	15:16	0:0	6	<
water	15:18	0:0	6	0
stmts	15:21	19:8	5	
water	15:21	0:0	6	{
call	16:12	16:36	6	av_frame_free
arg	16:26	16:36	7	&out_frame
op	16:26	0:0	8	&
water	16:27	0:0	8	out_frame
water	16:37	0:0	6	;
call	17:12	17:32	6	av_frame_free
arg	17:26	17:32	7	&frame
op	17:26	0:0	8	&
water	17:27	0:0	8	frame
water	17:33	0:0	6	;
return	18:12	18:22	6	ret
water	18:19	0:0	7	ret
water	19:8	0:0	6	}
water	20:4	0:0	4	}
call	21:4	21:80	2	bs2b->filter
arg	21:17	21:28	3	bs2b->bs2bp
water	21:17	0:0	4	bs2b
op	21:21	0:0	4	->
water	21:23	0:0	4	bs2bp
arg	21:30	21:57	3	out_frame->extended_data[0]
water	21:30	0:0	4	out_frame
op	21:39	0:0	4	->
water	21:41	0:0	4	extended_data
op	21:54	0:0	4	[
water	21:55	0:0	4	0
op	21:56	0:0	4	]
arg	21:59	21:80	3	out_frame->nb_samples
water	21:59	0:0	4	out_frame
op	21:68	0:0	4	->
water	21:70	0:0	4	nb_samples
water	21:81	0:0	2	;
if	22:4	23:29	2	(frame != out_frame)
cond	22:8	22:17	3	frame != out_frame
water	22:8	0:0	4	frame
op	22:14	0:0	4	!=
water	22:17	0:0	4	out_frame
stmts	23:8	23:29	3	
call	23:8	23:28	4	av_frame_free
arg	23:22	23:28	5	&frame
op	23:22	0:0	6	&
water	23:23	0:0	6	frame
water	23:29	0:0	4	;
return	24:4	24:46	2	ff_filter_frame(outlink,out_frame)
call	24:11	24:45	3	ff_filter_frame
arg	24:27	24:34	4	outlink
water	24:27	0:0	5	outlink
arg	24:36	24:45	4	out_frame
water	24:36	0:0	5	out_frame

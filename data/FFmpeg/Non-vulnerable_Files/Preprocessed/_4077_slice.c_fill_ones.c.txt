func	1:0	20:0	0	static void	fill_ones
params	1:21	0:0	1	
param	1:22	1:33	2	SwsSlice *	s
param	1:35	1:40	2	int	n
param	1:42	1:53	2	int	is16bit
stmnts	0:0	19:4	1	
decl	3:4	3:9	2	int	i
for	4:4	19:4	2	(i = 0 ;i < 4;++ i)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:20	3	i < 4
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	4
forexpr	4:23	4:25	3	++ i
op	4:23	0:0	4	++
water	4:25	0:0	4	i
stmts	4:28	19:4	3	
water	4:28	0:0	4	{
decl	5:8	5:13	4	int	j
decl	6:8	6:46	4	int	size
op	6:17	0:0	4	=
water	6:19	0:0	4	s
op	6:20	0:0	4	->
water	6:22	0:0	4	plane
op	6:27	0:0	4	[
water	6:28	0:0	4	i
op	6:29	0:0	4	]
op	6:30	0:0	4	.
water	6:31	0:0	4	available_lines
for	7:8	18:8	4	(j = 0 ;j < size;++ j)
forinit	7:13	7:18	5	j = 0 ;
water	7:13	0:0	6	j
op	7:15	0:0	6	=
water	7:17	0:0	6	0
water	7:18	0:0	6	;
cond	7:20	7:24	5	j < size
water	7:20	0:0	6	j
op	7:22	0:0	6	<
water	7:24	0:0	6	size
forexpr	7:30	7:32	5	++ j
op	7:30	0:0	6	++
water	7:32	0:0	6	j
stmts	7:35	18:8	5	
water	7:35	0:0	6	{
decl	8:12	8:17	6	int	k
decl	9:12	9:39	6	int	end
op	9:20	0:0	6	=
water	9:22	0:0	6	is16bit
water	9:30	0:0	6	?
water	9:32	0:0	6	n
op	9:33	0:0	6	>>
water	9:35	0:0	6	1
water	9:36	0:0	6	:
water	9:38	0:0	6	n
water	11:12	0:0	6	end
op	11:16	0:0	6	+=
water	11:19	0:0	6	1
water	11:20	0:0	6	;
if	12:12	14:64	6	(is16bit)
cond	12:16	12:16	7	is16bit
water	12:16	0:0	8	is16bit
stmts	13:16	14:64	7	
for	13:16	14:64	8	(k = 0 ;k < end;++ k)
forinit	13:21	13:26	9	k = 0 ;
water	13:21	0:0	10	k
op	13:23	0:0	10	=
water	13:25	0:0	10	0
water	13:26	0:0	10	;
cond	13:28	13:32	9	k < end
water	13:28	0:0	10	k
op	13:30	0:0	10	<
water	13:32	0:0	10	end
forexpr	13:37	13:39	9	++ k
op	13:37	0:0	10	++
water	13:39	0:0	10	k
stmts	14:20	14:64	9	
water	14:20	0:0	10	(
call	14:21	14:51	10	(int32_t*)
arg	14:32	14:51	11	s->plane[i].line[j]
water	14:32	0:0	12	s
op	14:33	0:0	12	->
water	14:35	0:0	12	plane
op	14:40	0:0	12	[
water	14:41	0:0	12	i
op	14:42	0:0	12	]
op	14:43	0:0	12	.
water	14:44	0:0	12	line
op	14:48	0:0	12	[
water	14:49	0:0	12	j
op	14:50	0:0	12	]
water	14:52	0:0	10	)
op	14:53	0:0	10	[
water	14:54	0:0	10	k
op	14:55	0:0	10	]
op	14:57	0:0	10	=
water	14:59	0:0	10	1
op	14:60	0:0	10	<<
water	14:62	0:0	10	18
water	14:64	0:0	10	;
else	15:12	17:64	6
stmts	16:16	17:64	7	
for	16:16	17:64	8	(k = 0 ;k < end;++ k)
forinit	16:21	16:26	9	k = 0 ;
water	16:21	0:0	10	k
op	16:23	0:0	10	=
water	16:25	0:0	10	0
water	16:26	0:0	10	;
cond	16:28	16:32	9	k < end
water	16:28	0:0	10	k
op	16:30	0:0	10	<
water	16:32	0:0	10	end
forexpr	16:37	16:39	9	++ k
op	16:37	0:0	10	++
water	16:39	0:0	10	k
stmts	17:20	17:64	9	
water	17:20	0:0	10	(
call	17:21	17:51	10	(int16_t*)
arg	17:32	17:51	11	s->plane[i].line[j]
water	17:32	0:0	12	s
op	17:33	0:0	12	->
water	17:35	0:0	12	plane
op	17:40	0:0	12	[
water	17:41	0:0	12	i
op	17:42	0:0	12	]
op	17:43	0:0	12	.
water	17:44	0:0	12	line
op	17:48	0:0	12	[
water	17:49	0:0	12	j
op	17:50	0:0	12	]
water	17:52	0:0	10	)
op	17:53	0:0	10	[
water	17:54	0:0	10	k
op	17:55	0:0	10	]
op	17:57	0:0	10	=
water	17:59	0:0	10	1
op	17:60	0:0	10	<<
water	17:62	0:0	10	14
water	17:64	0:0	10	;
water	18:8	0:0	6	}
water	19:4	0:0	4	}

func	1:0	36:0	0	static inline void	blur8
params	1:24	0:0	1	
param	1:25	1:37	2	uint8_t *	dst
param	1:39	1:51	2	int	dst_step
param	1:53	1:71	2	const uint8_t *	src
param	1:73	1:85	2	int	src_step
param	2:24	2:31	2	int	len
param	2:33	2:43	2	int	radius
stmnts	0:0	35:4	1	
decl	18:4	18:35	2	const int	length
op	18:21	0:0	2	=
water	18:23	0:0	2	radius
op	18:29	0:0	2	*
water	18:30	0:0	2	2
op	18:32	0:0	2	+
water	18:34	0:0	2	1
decl	19:4	19:47	2	const int	inv
op	19:18	0:0	2	=
water	19:20	0:0	2	(
water	19:21	0:0	2	(
water	19:22	0:0	2	1
op	19:23	0:0	2	<<
water	19:25	0:0	2	16
water	19:27	0:0	2	)
op	19:29	0:0	2	+
water	19:31	0:0	2	length
op	19:37	0:0	2	/
water	19:38	0:0	2	2
water	19:39	0:0	2	)
op	19:40	0:0	2	/
water	19:41	0:0	2	length
decl	20:4	20:37	2	int	x
water	20:9	0:0	2	,
decl	20:4	20:37	2	int	sum
op	20:15	0:0	2	=
water	20:17	0:0	2	src
op	20:20	0:0	2	[
water	20:21	0:0	2	radius
op	20:27	0:0	2	*
water	20:28	0:0	2	src_step
op	20:36	0:0	2	]
for	21:4	22:33	2	(x = 0 ;x < radius;x ++)
forinit	21:9	21:14	3	x = 0 ;
water	21:9	0:0	4	x
op	21:11	0:0	4	=
water	21:13	0:0	4	0
water	21:14	0:0	4	;
cond	21:16	21:20	3	x < radius
water	21:16	0:0	4	x
op	21:18	0:0	4	<
water	21:20	0:0	4	radius
forexpr	21:28	21:29	3	x ++
water	21:28	0:0	4	x
op	21:29	0:0	4	++
stmts	22:8	22:33	3	
water	22:8	0:0	4	sum
op	22:12	0:0	4	+=
water	22:15	0:0	4	src
op	22:18	0:0	4	[
water	22:19	0:0	4	x
op	22:20	0:0	4	*
water	22:21	0:0	4	src_step
op	22:29	0:0	4	]
op	22:30	0:0	4	<<
water	22:32	0:0	4	1
water	22:33	0:0	4	;
water	23:4	0:0	2	sum
op	23:8	0:0	2	=
water	23:10	0:0	2	sum
op	23:13	0:0	2	*
water	23:14	0:0	2	inv
op	23:18	0:0	2	+
water	23:20	0:0	2	(
water	23:21	0:0	2	1
op	23:22	0:0	2	<<
water	23:24	0:0	2	15
water	23:26	0:0	2	)
water	23:27	0:0	2	;
for	24:4	27:4	2	(x = 0 ;x <= radius;x ++)
forinit	24:9	24:14	3	x = 0 ;
water	24:9	0:0	4	x
op	24:11	0:0	4	=
water	24:13	0:0	4	0
water	24:14	0:0	4	;
cond	24:16	24:21	3	x <= radius
water	24:16	0:0	4	x
op	24:18	0:0	4	<=
water	24:21	0:0	4	radius
forexpr	24:29	24:30	3	x ++
water	24:29	0:0	4	x
op	24:30	0:0	4	++
stmts	24:34	27:4	3	
water	24:34	0:0	4	{
water	25:8	0:0	4	sum
op	25:12	0:0	4	+=
water	25:15	0:0	4	(
water	25:16	0:0	4	src
op	25:19	0:0	4	[
water	25:20	0:0	4	(
water	25:21	0:0	4	radius
op	25:27	0:0	4	+
water	25:28	0:0	4	x
water	25:29	0:0	4	)
op	25:30	0:0	4	*
water	25:31	0:0	4	src_step
op	25:39	0:0	4	]
op	25:41	0:0	4	-
water	25:43	0:0	4	src
op	25:46	0:0	4	[
water	25:47	0:0	4	(
water	25:48	0:0	4	radius
op	25:54	0:0	4	-
water	25:55	0:0	4	x
water	25:56	0:0	4	)
op	25:57	0:0	4	*
water	25:58	0:0	4	src_step
op	25:66	0:0	4	]
water	25:67	0:0	4	)
op	25:68	0:0	4	*
water	25:69	0:0	4	inv
water	25:72	0:0	4	;
water	26:8	0:0	4	dst
op	26:11	0:0	4	[
water	26:12	0:0	4	x
op	26:13	0:0	4	*
water	26:14	0:0	4	dst_step
op	26:22	0:0	4	]
op	26:24	0:0	4	=
water	26:26	0:0	4	sum
op	26:29	0:0	4	>>
water	26:31	0:0	4	16
water	26:33	0:0	4	;
water	27:4	0:0	4	}
for	28:4	31:4	2	(;x < len - radius;x ++)
forinit	28:9	28:9	3	;
water	28:9	0:0	4	;
cond	28:11	28:19	3	x < len - radius
water	28:11	0:0	4	x
op	28:13	0:0	4	<
water	28:15	0:0	4	len
op	28:18	0:0	4	-
water	28:19	0:0	4	radius
forexpr	28:27	28:28	3	x ++
water	28:27	0:0	4	x
op	28:28	0:0	4	++
stmts	28:32	31:4	3	
water	28:32	0:0	4	{
water	29:8	0:0	4	sum
op	29:12	0:0	4	+=
water	29:15	0:0	4	(
water	29:16	0:0	4	src
op	29:19	0:0	4	[
water	29:20	0:0	4	(
water	29:21	0:0	4	radius
op	29:27	0:0	4	+
water	29:28	0:0	4	x
water	29:29	0:0	4	)
op	29:30	0:0	4	*
water	29:31	0:0	4	src_step
op	29:39	0:0	4	]
op	29:41	0:0	4	-
water	29:43	0:0	4	src
op	29:46	0:0	4	[
water	29:47	0:0	4	(
water	29:48	0:0	4	x
op	29:49	0:0	4	-
water	29:50	0:0	4	radius
op	29:56	0:0	4	-
water	29:57	0:0	4	1
water	29:58	0:0	4	)
op	29:59	0:0	4	*
water	29:60	0:0	4	src_step
op	29:68	0:0	4	]
water	29:69	0:0	4	)
op	29:70	0:0	4	*
water	29:71	0:0	4	inv
water	29:74	0:0	4	;
water	30:8	0:0	4	dst
op	30:11	0:0	4	[
water	30:12	0:0	4	x
op	30:13	0:0	4	*
water	30:14	0:0	4	dst_step
op	30:22	0:0	4	]
op	30:24	0:0	4	=
water	30:26	0:0	4	sum
op	30:30	0:0	4	>>
water	30:32	0:0	4	16
water	30:34	0:0	4	;
water	31:4	0:0	4	}
for	32:4	35:4	2	(;x < len;x ++)
forinit	32:9	32:9	3	;
water	32:9	0:0	4	;
cond	32:11	32:15	3	x < len
water	32:11	0:0	4	x
op	32:13	0:0	4	<
water	32:15	0:0	4	len
forexpr	32:20	32:21	3	x ++
water	32:20	0:0	4	x
op	32:21	0:0	4	++
stmts	32:25	35:4	3	
water	32:25	0:0	4	{
water	33:8	0:0	4	sum
op	33:12	0:0	4	+=
water	33:15	0:0	4	(
water	33:16	0:0	4	src
op	33:19	0:0	4	[
water	33:20	0:0	4	(
water	33:21	0:0	4	2
op	33:22	0:0	4	*
water	33:23	0:0	4	len
op	33:26	0:0	4	-
water	33:27	0:0	4	radius
op	33:33	0:0	4	-
water	33:34	0:0	4	x
op	33:35	0:0	4	-
water	33:36	0:0	4	1
water	33:37	0:0	4	)
op	33:38	0:0	4	*
water	33:39	0:0	4	src_step
op	33:47	0:0	4	]
op	33:49	0:0	4	-
water	33:51	0:0	4	src
op	33:54	0:0	4	[
water	33:55	0:0	4	(
water	33:56	0:0	4	x
op	33:57	0:0	4	-
water	33:58	0:0	4	radius
op	33:64	0:0	4	-
water	33:65	0:0	4	1
water	33:66	0:0	4	)
op	33:67	0:0	4	*
water	33:68	0:0	4	src_step
op	33:76	0:0	4	]
water	33:77	0:0	4	)
op	33:78	0:0	4	*
water	33:79	0:0	4	inv
water	33:82	0:0	4	;
water	34:8	0:0	4	dst
op	34:11	0:0	4	[
water	34:12	0:0	4	x
op	34:13	0:0	4	*
water	34:14	0:0	4	dst_step
op	34:22	0:0	4	]
op	34:24	0:0	4	=
water	34:26	0:0	4	sum
op	34:29	0:0	4	>>
water	34:31	0:0	4	16
water	34:33	0:0	4	;
water	35:4	0:0	4	}

func	1:0	20:0	0	void	av_hmac_init
params	1:17	0:0	1	
param	1:18	1:27	2	AVHMAC *	c
param	1:29	1:47	2	const uint8_t *	key
param	1:49	1:68	2	unsigned int	keylen
stmnts	0:0	19:42	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:31	2	uint8_t	block[MAX_BLOCKLEN]
if	5:4	10:4	2	(keylen > c -> blocklen)
cond	5:8	5:20	3	keylen > c -> blocklen
water	5:8	0:0	4	keylen
op	5:15	0:0	4	>
water	5:17	0:0	4	c
op	5:18	0:0	4	->
water	5:20	0:0	4	blocklen
stmts	5:30	10:4	3	
water	5:30	0:0	4	{
call	6:8	6:23	4	c->init
arg	6:16	6:23	5	c->hash
water	6:16	0:0	6	c
op	6:17	0:0	6	->
water	6:19	0:0	6	hash
water	6:24	0:0	4	;
call	7:8	7:38	4	c->update
arg	7:18	7:25	5	c->hash
water	7:18	0:0	6	c
op	7:19	0:0	6	->
water	7:21	0:0	6	hash
arg	7:27	7:30	5	key
water	7:27	0:0	6	key
arg	7:32	7:38	5	keylen
water	7:32	0:0	6	keylen
water	7:39	0:0	4	;
call	8:8	8:32	4	c->final
arg	8:17	8:24	5	c->hash
water	8:17	0:0	6	c
op	8:18	0:0	6	->
water	8:20	0:0	6	hash
arg	8:26	8:32	5	c->key
water	8:26	0:0	6	c
op	8:27	0:0	6	->
water	8:29	0:0	6	key
water	8:33	0:0	4	;
water	9:8	0:0	4	c
op	9:9	0:0	4	->
water	9:11	0:0	4	keylen
op	9:18	0:0	4	=
water	9:20	0:0	4	c
op	9:21	0:0	4	->
water	9:23	0:0	4	hashlen
water	9:30	0:0	4	;
water	10:4	0:0	4	}
else	10:6	13:4	2
stmts	10:11	13:4	3	
water	10:11	0:0	4	{
call	11:8	11:34	4	memcpy
arg	11:15	11:21	5	c->key
water	11:15	0:0	6	c
op	11:16	0:0	6	->
water	11:18	0:0	6	key
arg	11:23	11:26	5	key
water	11:23	0:0	6	key
arg	11:28	11:34	5	keylen
water	11:28	0:0	6	keylen
water	11:35	0:0	4	;
water	12:8	0:0	4	c
op	12:9	0:0	4	->
water	12:11	0:0	4	keylen
op	12:18	0:0	4	=
water	12:20	0:0	4	keylen
water	12:26	0:0	4	;
water	13:4	0:0	4	}
call	14:4	14:19	2	c->init
arg	14:12	14:19	3	c->hash
water	14:12	0:0	4	c
op	14:13	0:0	4	->
water	14:15	0:0	4	hash
water	14:20	0:0	2	;
for	15:4	16:35	2	(i = 0 ;i < c -> keylen;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:23	3	i < c -> keylen
water	15:16	0:0	4	i
op	15:18	0:0	4	<
water	15:20	0:0	4	c
op	15:21	0:0	4	->
water	15:23	0:0	4	keylen
forexpr	15:31	15:32	3	i ++
water	15:31	0:0	4	i
op	15:32	0:0	4	++
stmts	16:8	16:35	3	
water	16:8	0:0	4	block
op	16:13	0:0	4	[
water	16:14	0:0	4	i
op	16:15	0:0	4	]
op	16:17	0:0	4	=
water	16:19	0:0	4	c
op	16:20	0:0	4	->
water	16:22	0:0	4	key
op	16:25	0:0	4	[
water	16:26	0:0	4	i
op	16:27	0:0	4	]
op	16:29	0:0	4	^
water	16:31	0:0	4	0
water	16:32	0:0	4	x36
water	16:35	0:0	4	;
for	17:4	18:23	2	(i = c -> keylen ;i < c -> blocklen;i ++)
forinit	17:9	17:22	3	i = c -> keylen ;
water	17:9	0:0	4	i
op	17:11	0:0	4	=
water	17:13	0:0	4	c
op	17:14	0:0	4	->
water	17:16	0:0	4	keylen
water	17:22	0:0	4	;
cond	17:24	17:31	3	i < c -> blocklen
water	17:24	0:0	4	i
op	17:26	0:0	4	<
water	17:28	0:0	4	c
op	17:29	0:0	4	->
water	17:31	0:0	4	blocklen
forexpr	17:41	17:42	3	i ++
water	17:41	0:0	4	i
op	17:42	0:0	4	++
stmts	18:8	18:23	3	
water	18:8	0:0	4	block
op	18:13	0:0	4	[
water	18:14	0:0	4	i
op	18:15	0:0	4	]
op	18:17	0:0	4	=
water	18:19	0:0	4	0
water	18:20	0:0	4	x36
water	18:23	0:0	4	;
call	19:4	19:41	2	c->update
arg	19:14	19:21	3	c->hash
water	19:14	0:0	4	c
op	19:15	0:0	4	->
water	19:17	0:0	4	hash
arg	19:23	19:28	3	block
water	19:23	0:0	4	block
arg	19:30	19:41	3	c->blocklen
water	19:30	0:0	4	c
op	19:31	0:0	4	->
water	19:33	0:0	4	blocklen
water	19:42	0:0	2	;

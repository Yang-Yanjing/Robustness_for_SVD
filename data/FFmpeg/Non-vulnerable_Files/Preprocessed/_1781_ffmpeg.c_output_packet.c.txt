func	1:0	56:0	0	static void	output_packet
params	1:25	0:0	1	
param	1:26	1:40	2	OutputFile *	of
param	1:42	1:55	2	AVPacket *	pkt
param	1:57	1:74	2	OutputStream *	ost
stmnts	0:0	55:4	1	
decl	3:4	3:15	2	int	ret
op	3:12	0:0	2	=
water	3:14	0:0	2	0
if	5:4	47:4	2	(ost -> nb_bitstream_filters)
cond	5:8	5:13	3	ost -> nb_bitstream_filters
water	5:8	0:0	4	ost
op	5:11	0:0	4	->
water	5:13	0:0	4	nb_bitstream_filters
stmts	5:35	47:4	3	
water	5:35	0:0	4	{
decl	6:8	6:15	4	int	idx
water	7:8	0:0	4	ret
op	7:12	0:0	4	=
call	7:14	7:53	4	av_bsf_send_packet
arg	7:33	7:48	5	ost->bsf_ctx[0]
water	7:33	0:0	6	ost
op	7:36	0:0	6	->
water	7:38	0:0	6	bsf_ctx
op	7:45	0:0	6	[
water	7:46	0:0	6	0
op	7:47	0:0	6	]
arg	7:50	7:53	5	pkt
water	7:50	0:0	6	pkt
water	7:54	0:0	4	;
if	8:8	9:23	4	(ret < 0)
cond	8:12	8:18	5	ret < 0
water	8:12	0:0	6	ret
op	8:16	0:0	6	<
water	8:18	0:0	6	0
stmts	9:12	9:23	5	
goto	9:12	9:23	6	finish
water	9:17	0:0	7	finish
water	10:8	0:0	4	idx
op	10:12	0:0	4	=
water	10:14	0:0	4	1
water	10:15	0:0	4	;
while	11:8	46:8	4	(idx)
cond	11:15	11:15	5	idx
water	11:15	0:0	6	idx
stmts	11:20	46:8	5	
water	11:20	0:0	6	{
water	13:12	0:0	6	ret
op	13:16	0:0	6	=
call	13:18	13:66	6	av_bsf_receive_packet
arg	13:40	13:61	7	ost->bsf_ctx[idx-1]
water	13:40	0:0	8	ost
op	13:43	0:0	8	->
water	13:45	0:0	8	bsf_ctx
op	13:52	0:0	8	[
water	13:53	0:0	8	idx
op	13:57	0:0	8	-
water	13:59	0:0	8	1
op	13:60	0:0	8	]
arg	13:63	13:66	7	pkt
water	13:63	0:0	8	pkt
water	13:67	0:0	6	;
if	14:12	18:12	6	(ret ==AVERROR (EAGAIN ))
cond	14:16	14:37	7	ret ==AVERROR (EAGAIN )
water	14:16	0:0	8	ret
op	14:20	0:0	8	==
call	14:23	14:37	8	AVERROR
arg	14:31	14:37	9	EAGAIN
water	14:31	0:0	10	EAGAIN
stmts	14:40	18:12	7	
water	14:40	0:0	8	{
water	15:16	0:0	8	ret
op	15:20	0:0	8	=
water	15:22	0:0	8	0
water	15:23	0:0	8	;
water	16:16	0:0	8	idx
op	16:19	0:0	8	--
water	16:21	0:0	8	;
continue	17:16	17:24	8	
water	18:12	0:0	8	}
else	18:14	19:27	6
stmts	18:19	19:27	7	
if	18:19	19:27	8	(ret < 0)
cond	18:23	18:29	9	ret < 0
water	18:23	0:0	10	ret
op	18:27	0:0	10	<
water	18:29	0:0	10	0
stmts	19:16	19:27	9	
goto	19:16	19:27	10	finish
water	19:21	0:0	11	finish
if	25:12	30:12	6	(! ( ost -> bsf_extradata_updated [ idx - 1 ] & 1 ))
cond	25:16	25:57	7	! ( ost -> bsf_extradata_updated [ idx - 1 ] & 1 )
op	25:16	0:0	8	!
water	25:17	0:0	8	(
water	25:18	0:0	8	ost
op	25:21	0:0	8	->
water	25:23	0:0	8	bsf_extradata_updated
op	25:44	0:0	8	[
water	25:45	0:0	8	idx
op	25:49	0:0	8	-
water	25:51	0:0	8	1
op	25:52	0:0	8	]
op	25:54	0:0	8	&
water	25:56	0:0	8	1
water	25:57	0:0	8	)
stmts	25:60	30:12	7	
water	25:60	0:0	8	{
water	26:16	0:0	8	ret
op	26:20	0:0	8	=
call	26:22	26:95	8	avcodec_parameters_copy
arg	26:46	26:63	9	ost->st->codecpar
water	26:46	0:0	10	ost
op	26:49	0:0	10	->
water	26:51	0:0	10	st
op	26:53	0:0	10	->
water	26:55	0:0	10	codecpar
arg	26:65	26:95	9	ost->bsf_ctx[idx-1]->par_out
water	26:65	0:0	10	ost
op	26:68	0:0	10	->
water	26:70	0:0	10	bsf_ctx
op	26:77	0:0	10	[
water	26:78	0:0	10	idx
op	26:82	0:0	10	-
water	26:84	0:0	10	1
op	26:85	0:0	10	]
op	26:86	0:0	10	->
water	26:88	0:0	10	par_out
water	26:96	0:0	8	;
if	27:16	28:31	8	(ret < 0)
cond	27:20	27:26	9	ret < 0
water	27:20	0:0	10	ret
op	27:24	0:0	10	<
water	27:26	0:0	10	0
stmts	28:20	28:31	9	
goto	28:20	28:31	10	finish
water	28:25	0:0	11	finish
water	29:16	0:0	8	ost
op	29:19	0:0	8	->
water	29:21	0:0	8	bsf_extradata_updated
op	29:42	0:0	8	[
water	29:43	0:0	8	idx
op	29:47	0:0	8	-
water	29:49	0:0	8	1
op	29:50	0:0	8	]
op	29:52	0:0	8	|=
water	29:55	0:0	8	1
water	29:56	0:0	8	;
water	30:12	0:0	8	}
if	32:12	44:12	6	(idx < ost -> nb_bitstream_filters)
cond	32:16	32:27	7	idx < ost -> nb_bitstream_filters
water	32:16	0:0	8	idx
op	32:20	0:0	8	<
water	32:22	0:0	8	ost
op	32:25	0:0	8	->
water	32:27	0:0	8	nb_bitstream_filters
stmts	32:49	44:12	7	
water	32:49	0:0	8	{
if	34:16	39:16	8	(! ( ost -> bsf_extradata_updated [ idx ] & 2 ))
cond	34:20	34:57	9	! ( ost -> bsf_extradata_updated [ idx ] & 2 )
op	34:20	0:0	10	!
water	34:21	0:0	10	(
water	34:22	0:0	10	ost
op	34:25	0:0	10	->
water	34:27	0:0	10	bsf_extradata_updated
op	34:48	0:0	10	[
water	34:49	0:0	10	idx
op	34:52	0:0	10	]
op	34:54	0:0	10	&
water	34:56	0:0	10	2
water	34:57	0:0	10	)
stmts	34:60	39:16	9	
water	34:60	0:0	10	{
water	35:20	0:0	10	ret
op	35:24	0:0	10	=
call	35:26	35:108	10	avcodec_parameters_copy
arg	35:50	35:76	11	ost->bsf_ctx[idx]->par_out
water	35:50	0:0	12	ost
op	35:53	0:0	12	->
water	35:55	0:0	12	bsf_ctx
op	35:62	0:0	12	[
water	35:63	0:0	12	idx
op	35:66	0:0	12	]
op	35:67	0:0	12	->
water	35:69	0:0	12	par_out
arg	35:78	35:108	11	ost->bsf_ctx[idx-1]->par_out
water	35:78	0:0	12	ost
op	35:81	0:0	12	->
water	35:83	0:0	12	bsf_ctx
op	35:90	0:0	12	[
water	35:91	0:0	12	idx
op	35:95	0:0	12	-
water	35:97	0:0	12	1
op	35:98	0:0	12	]
op	35:99	0:0	12	->
water	35:101	0:0	12	par_out
water	35:109	0:0	10	;
if	36:20	37:35	10	(ret < 0)
cond	36:24	36:30	11	ret < 0
water	36:24	0:0	12	ret
op	36:28	0:0	12	<
water	36:30	0:0	12	0
stmts	37:24	37:35	11	
goto	37:24	37:35	12	finish
water	37:29	0:0	13	finish
water	38:20	0:0	10	ost
op	38:23	0:0	10	->
water	38:25	0:0	10	bsf_extradata_updated
op	38:46	0:0	10	[
water	38:47	0:0	10	idx
op	38:50	0:0	10	]
op	38:52	0:0	10	|=
water	38:55	0:0	10	2
water	38:56	0:0	10	;
water	39:16	0:0	10	}
water	40:16	0:0	8	ret
op	40:20	0:0	8	=
call	40:22	40:63	8	av_bsf_send_packet
arg	40:41	40:58	9	ost->bsf_ctx[idx]
water	40:41	0:0	10	ost
op	40:44	0:0	10	->
water	40:46	0:0	10	bsf_ctx
op	40:53	0:0	10	[
water	40:54	0:0	10	idx
op	40:57	0:0	10	]
arg	40:60	40:63	9	pkt
water	40:60	0:0	10	pkt
water	40:64	0:0	8	;
if	41:16	42:31	8	(ret < 0)
cond	41:20	41:26	9	ret < 0
water	41:20	0:0	10	ret
op	41:24	0:0	10	<
water	41:26	0:0	10	0
stmts	42:20	42:31	9	
goto	42:20	42:31	10	finish
water	42:25	0:0	11	finish
water	43:16	0:0	8	idx
op	43:19	0:0	8	++
water	43:21	0:0	8	;
water	44:12	0:0	8	}
else	44:14	45:45	6
stmts	45:16	45:45	7	
call	45:16	45:44	8	write_packet
arg	45:29	45:31	9	of
water	45:29	0:0	10	of
arg	45:33	45:36	9	pkt
water	45:33	0:0	10	pkt
arg	45:38	45:41	9	ost
water	45:38	0:0	10	ost
arg	45:43	45:44	9	0
water	45:43	0:0	10	0
water	45:45	0:0	8	;
water	46:8	0:0	6	}
water	47:4	0:0	4	}
else	47:6	48:37	2
stmts	48:8	48:37	3	
call	48:8	48:36	4	write_packet
arg	48:21	48:23	5	of
water	48:21	0:0	6	of
arg	48:25	48:28	5	pkt
water	48:25	0:0	6	pkt
arg	48:30	48:33	5	ost
water	48:30	0:0	6	ost
arg	48:35	48:36	5	0
water	48:35	0:0	6	0
water	48:37	0:0	4	;
label	49:0	49:6	2	finish :
if	50:4	55:4	2	(ret < 0 && ret != AVERROR_EOF)
cond	50:8	50:26	3	ret < 0 && ret != AVERROR_EOF
water	50:8	0:0	4	ret
op	50:12	0:0	4	<
water	50:14	0:0	4	0
op	50:16	0:0	4	&&
water	50:19	0:0	4	ret
op	50:23	0:0	4	!=
water	50:26	0:0	4	AVERROR_EOF
stmts	50:39	55:4	3	
water	50:39	0:0	4	{
call	51:8	52:73	4	av_log
arg	51:15	51:19	5	NULL
water	51:15	0:0	6	NULL
arg	51:21	51:33	5	AV_LOG_ERROR
water	51:21	0:0	6	AV_LOG_ERROR
arg	51:35	52:44	5	"Error applying bitstream filters to an output ""packet for stream #%d:%d.\n"
water	51:35	0:0	6	"Error applying bitstream filters to an output "
water	52:15	0:0	6	"packet for stream #%d:%d.\n"
arg	52:46	52:61	5	ost->file_index
water	52:46	0:0	6	ost
op	52:49	0:0	6	->
water	52:51	0:0	6	file_index
arg	52:63	52:73	5	ost->index
water	52:63	0:0	6	ost
op	52:66	0:0	6	->
water	52:68	0:0	6	index
water	52:74	0:0	4	;
if	53:8	54:27	4	(exit_on_error)
cond	53:11	53:11	5	exit_on_error
water	53:11	0:0	6	exit_on_error
stmts	54:12	54:27	5	
call	54:12	54:26	6	exit_program
arg	54:25	54:26	7	1
water	54:25	0:0	8	1
water	54:27	0:0	6	;
water	55:4	0:0	4	}

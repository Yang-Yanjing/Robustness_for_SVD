func	1:0	173:0	0	static void	blend_image
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
param	2:24	2:36	2	AVFrame *	dst
param	2:38	2:56	2	const AVFrame *	src
param	3:24	3:29	2	int	x
param	3:31	3:36	2	int	y
stmnts	0:0	172:4	1	
decl	5:4	5:33	2	OverlayContext	*s
op	5:22	0:0	2	=
water	5:24	0:0	2	ctx
op	5:27	0:0	2	->
water	5:29	0:0	2	priv
decl	6:4	6:33	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:33	2	int	imax
water	6:15	0:0	2	,
decl	6:4	6:33	2	int	j
water	6:18	0:0	2	,
decl	6:4	6:33	2	int	jmax
water	6:24	0:0	2	,
decl	6:4	6:33	2	int	k
water	6:27	0:0	2	,
decl	6:4	6:33	2	int	kmax
decl	7:4	7:32	2	const int	src_w
op	7:20	0:0	2	=
water	7:22	0:0	2	src
op	7:25	0:0	2	->
water	7:27	0:0	2	width
decl	8:4	8:33	2	const int	src_h
op	8:20	0:0	2	=
water	8:22	0:0	2	src
op	8:25	0:0	2	->
water	8:27	0:0	2	height
decl	9:4	9:32	2	const int	dst_w
op	9:20	0:0	2	=
water	9:22	0:0	2	dst
op	9:25	0:0	2	->
water	9:27	0:0	2	width
decl	10:4	10:33	2	const int	dst_h
op	10:20	0:0	2	=
water	10:22	0:0	2	dst
op	10:25	0:0	2	->
water	10:27	0:0	2	height
if	11:4	13:14	2	(x >= dst_w || x + src_w < 0 || y >= dst_h || y + src_h < 0)
cond	11:8	12:32	3	x >= dst_w || x + src_w < 0 || y >= dst_h || y + src_h < 0
water	11:8	0:0	4	x
op	11:10	0:0	4	>=
water	11:13	0:0	4	dst_w
op	11:19	0:0	4	||
water	11:22	0:0	4	x
op	11:23	0:0	4	+
water	11:24	0:0	4	src_w
op	11:30	0:0	4	<
water	11:32	0:0	4	0
op	11:34	0:0	4	||
water	12:8	0:0	4	y
op	12:10	0:0	4	>=
water	12:13	0:0	4	dst_h
op	12:19	0:0	4	||
water	12:22	0:0	4	y
op	12:23	0:0	4	+
water	12:24	0:0	4	src_h
op	12:30	0:0	4	<
water	12:32	0:0	4	0
stmts	13:8	13:14	3	
return	13:8	13:14	4	
if	14:4	76:4	2	(s -> main_is_packed_rgb)
cond	14:8	14:11	3	s -> main_is_packed_rgb
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	main_is_packed_rgb
stmts	14:31	76:4	3	
water	14:31	0:0	4	{
decl	15:8	15:21	4	uint8_t	alpha
decl	16:8	16:42	4	const int	dr
op	16:21	0:0	4	=
water	16:23	0:0	4	s
op	16:24	0:0	4	->
water	16:26	0:0	4	main_rgba_map
op	16:39	0:0	4	[
water	16:40	0:0	4	R
op	16:41	0:0	4	]
decl	17:8	17:42	4	const int	dg
op	17:21	0:0	4	=
water	17:23	0:0	4	s
op	17:24	0:0	4	->
water	17:26	0:0	4	main_rgba_map
op	17:39	0:0	4	[
water	17:40	0:0	4	G
op	17:41	0:0	4	]
decl	18:8	18:42	4	const int	db
op	18:21	0:0	4	=
water	18:23	0:0	4	s
op	18:24	0:0	4	->
water	18:26	0:0	4	main_rgba_map
op	18:39	0:0	4	[
water	18:40	0:0	4	B
op	18:41	0:0	4	]
decl	19:8	19:42	4	const int	da
op	19:21	0:0	4	=
water	19:23	0:0	4	s
op	19:24	0:0	4	->
water	19:26	0:0	4	main_rgba_map
op	19:39	0:0	4	[
water	19:40	0:0	4	A
op	19:41	0:0	4	]
decl	20:8	20:45	4	const int	dstep
op	20:24	0:0	4	=
water	20:26	0:0	4	s
op	20:27	0:0	4	->
water	20:29	0:0	4	main_pix_step
op	20:42	0:0	4	[
water	20:43	0:0	4	0
op	20:44	0:0	4	]
decl	21:8	21:45	4	const int	sr
op	21:21	0:0	4	=
water	21:23	0:0	4	s
op	21:24	0:0	4	->
water	21:26	0:0	4	overlay_rgba_map
op	21:42	0:0	4	[
water	21:43	0:0	4	R
op	21:44	0:0	4	]
decl	22:8	22:45	4	const int	sg
op	22:21	0:0	4	=
water	22:23	0:0	4	s
op	22:24	0:0	4	->
water	22:26	0:0	4	overlay_rgba_map
op	22:42	0:0	4	[
water	22:43	0:0	4	G
op	22:44	0:0	4	]
decl	23:8	23:45	4	const int	sb
op	23:21	0:0	4	=
water	23:23	0:0	4	s
op	23:24	0:0	4	->
water	23:26	0:0	4	overlay_rgba_map
op	23:42	0:0	4	[
water	23:43	0:0	4	B
op	23:44	0:0	4	]
decl	24:8	24:45	4	const int	sa
op	24:21	0:0	4	=
water	24:23	0:0	4	s
op	24:24	0:0	4	->
water	24:26	0:0	4	overlay_rgba_map
op	24:42	0:0	4	[
water	24:43	0:0	4	A
op	24:44	0:0	4	]
decl	25:8	25:48	4	const int	sstep
op	25:24	0:0	4	=
water	25:26	0:0	4	s
op	25:27	0:0	4	->
water	25:29	0:0	4	overlay_pix_step
op	25:45	0:0	4	[
water	25:46	0:0	4	0
op	25:47	0:0	4	]
decl	26:8	26:52	4	const int	main_has_alpha
op	26:33	0:0	4	=
water	26:35	0:0	4	s
op	26:36	0:0	4	->
water	26:38	0:0	4	main_has_alpha
decl	27:8	27:32	4	uint8_t	*s
water	27:18	0:0	4	,
decl	27:8	27:32	4	uint8_t	*sp
water	27:23	0:0	4	,
decl	27:8	27:32	4	uint8_t	*d
water	27:27	0:0	4	,
decl	27:8	27:32	4	uint8_t	*dp
water	28:8	0:0	4	i
op	28:10	0:0	4	=
call	28:12	28:23	4	FFMAX
arg	28:18	28:20	5	-y
op	28:18	0:0	6	-
water	28:19	0:0	6	y
arg	28:22	28:23	5	0
water	28:22	0:0	6	0
water	28:24	0:0	4	;
water	29:8	0:0	4	sp
op	29:11	0:0	4	=
water	29:13	0:0	4	src
op	29:16	0:0	4	->
water	29:18	0:0	4	data
op	29:22	0:0	4	[
water	29:23	0:0	4	0
op	29:24	0:0	4	]
op	29:26	0:0	4	+
water	29:28	0:0	4	i
op	29:34	0:0	4	*
water	29:36	0:0	4	src
op	29:39	0:0	4	->
water	29:41	0:0	4	linesize
op	29:49	0:0	4	[
water	29:50	0:0	4	0
op	29:51	0:0	4	]
water	29:52	0:0	4	;
water	30:8	0:0	4	dp
op	30:11	0:0	4	=
water	30:13	0:0	4	dst
op	30:16	0:0	4	->
water	30:18	0:0	4	data
op	30:22	0:0	4	[
water	30:23	0:0	4	0
op	30:24	0:0	4	]
op	30:26	0:0	4	+
water	30:28	0:0	4	(
water	30:29	0:0	4	y
op	30:30	0:0	4	+
water	30:31	0:0	4	i
water	30:32	0:0	4	)
op	30:34	0:0	4	*
water	30:36	0:0	4	dst
op	30:39	0:0	4	->
water	30:41	0:0	4	linesize
op	30:49	0:0	4	[
water	30:50	0:0	4	0
op	30:51	0:0	4	]
water	30:52	0:0	4	;
for	31:8	75:8	4	(imax =FFMIN (- y + dst_h ,src_h ) ;i < imax;i ++)
forinit	31:13	31:44	5	imax =FFMIN (- y + dst_h ,src_h ) ;
water	31:13	0:0	6	imax
op	31:18	0:0	6	=
call	31:20	31:43	6	FFMIN
arg	31:26	31:36	7	-y+dst_h
op	31:26	0:0	8	-
water	31:27	0:0	8	y
op	31:29	0:0	8	+
water	31:31	0:0	8	dst_h
arg	31:38	31:43	7	src_h
water	31:38	0:0	8	src_h
water	31:44	0:0	6	;
cond	31:46	31:50	5	i < imax
water	31:46	0:0	6	i
op	31:48	0:0	6	<
water	31:50	0:0	6	imax
forexpr	31:56	31:57	5	i ++
water	31:56	0:0	6	i
op	31:57	0:0	6	++
stmts	31:61	75:8	5	
water	31:61	0:0	6	{
water	32:12	0:0	6	j
op	32:14	0:0	6	=
call	32:16	32:27	6	FFMAX
arg	32:22	32:24	7	-x
op	32:22	0:0	8	-
water	32:23	0:0	8	x
arg	32:26	32:27	7	0
water	32:26	0:0	8	0
water	32:28	0:0	6	;
water	33:12	0:0	6	s
op	33:14	0:0	6	=
water	33:16	0:0	6	sp
op	33:19	0:0	6	+
water	33:21	0:0	6	j
op	33:27	0:0	6	*
water	33:29	0:0	6	sstep
water	33:34	0:0	6	;
water	34:12	0:0	6	d
op	34:14	0:0	6	=
water	34:16	0:0	6	dp
op	34:19	0:0	6	+
water	34:21	0:0	6	(
water	34:22	0:0	6	x
op	34:23	0:0	6	+
water	34:24	0:0	6	j
water	34:25	0:0	6	)
op	34:27	0:0	6	*
water	34:29	0:0	6	dstep
water	34:34	0:0	6	;
for	35:12	72:12	6	(jmax =FFMIN (- x + dst_w ,src_w ) ;j < jmax;j ++)
forinit	35:17	35:48	7	jmax =FFMIN (- x + dst_w ,src_w ) ;
water	35:17	0:0	8	jmax
op	35:22	0:0	8	=
call	35:24	35:47	8	FFMIN
arg	35:30	35:40	9	-x+dst_w
op	35:30	0:0	10	-
water	35:31	0:0	10	x
op	35:33	0:0	10	+
water	35:35	0:0	10	dst_w
arg	35:42	35:47	9	src_w
water	35:42	0:0	10	src_w
water	35:48	0:0	8	;
cond	35:50	35:54	7	j < jmax
water	35:50	0:0	8	j
op	35:52	0:0	8	<
water	35:54	0:0	8	jmax
forexpr	35:60	35:61	7	j ++
water	35:60	0:0	8	j
op	35:61	0:0	8	++
stmts	35:65	72:12	7	
water	35:65	0:0	8	{
water	36:16	0:0	8	alpha
op	36:22	0:0	8	=
water	36:24	0:0	8	s
op	36:25	0:0	8	[
water	36:26	0:0	8	sa
op	36:28	0:0	8	]
water	36:29	0:0	8	;
if	39:16	42:16	8	(main_has_alpha && alpha != 0 && alpha != 255)
cond	39:20	39:61	9	main_has_alpha && alpha != 0 && alpha != 255
water	39:20	0:0	10	main_has_alpha
op	39:35	0:0	10	&&
water	39:38	0:0	10	alpha
op	39:44	0:0	10	!=
water	39:47	0:0	10	0
op	39:49	0:0	10	&&
water	39:52	0:0	10	alpha
op	39:58	0:0	10	!=
water	39:61	0:0	10	255
stmts	39:66	42:16	9	
water	39:66	0:0	10	{
decl	40:20	40:43	10	uint8_t	alpha_d
op	40:36	0:0	10	=
water	40:38	0:0	10	d
op	40:39	0:0	10	[
water	40:40	0:0	10	da
op	40:42	0:0	10	]
water	41:20	0:0	10	alpha
op	41:26	0:0	10	=
call	41:28	41:62	10	UNPREMULTIPLY_ALPHA
arg	41:48	41:53	11	alpha
water	41:48	0:0	12	alpha
arg	41:55	41:62	11	alpha_d
water	41:55	0:0	12	alpha_d
water	41:63	0:0	10	;
water	42:16	0:0	10	}
switch	43:16	57:16	8	(alpha)
cond	43:24	43:24	9	alpha
water	43:24	0:0	10	alpha
stmts	43:31	57:16	9	
water	43:31	0:0	10	{
label	44:16	44:22	10	case 0 :
break	45:20	45:25	10	
label	46:16	46:24	10	case 255 :
water	47:20	0:0	10	d
op	47:21	0:0	10	[
water	47:22	0:0	10	dr
op	47:24	0:0	10	]
op	47:26	0:0	10	=
water	47:28	0:0	10	s
op	47:29	0:0	10	[
water	47:30	0:0	10	sr
op	47:32	0:0	10	]
water	47:33	0:0	10	;
water	48:20	0:0	10	d
op	48:21	0:0	10	[
water	48:22	0:0	10	dg
op	48:24	0:0	10	]
op	48:26	0:0	10	=
water	48:28	0:0	10	s
op	48:29	0:0	10	[
water	48:30	0:0	10	sg
op	48:32	0:0	10	]
water	48:33	0:0	10	;
water	49:20	0:0	10	d
op	49:21	0:0	10	[
water	49:22	0:0	10	db
op	49:24	0:0	10	]
op	49:26	0:0	10	=
water	49:28	0:0	10	s
op	49:29	0:0	10	[
water	49:30	0:0	10	sb
op	49:32	0:0	10	]
water	49:33	0:0	10	;
break	50:20	50:25	10	
label	51:16	51:23	10	default :
water	54:20	0:0	10	d
op	54:21	0:0	10	[
water	54:22	0:0	10	dr
op	54:24	0:0	10	]
op	54:26	0:0	10	=
call	54:28	54:77	10	FAST_DIV255
arg	54:40	54:77	11	d[dr]*(255-alpha)+s[sr]*alpha
water	54:40	0:0	12	d
op	54:41	0:0	12	[
water	54:42	0:0	12	dr
op	54:44	0:0	12	]
op	54:46	0:0	12	*
water	54:48	0:0	12	(
water	54:49	0:0	12	255
op	54:53	0:0	12	-
water	54:55	0:0	12	alpha
water	54:60	0:0	12	)
op	54:62	0:0	12	+
water	54:64	0:0	12	s
op	54:65	0:0	12	[
water	54:66	0:0	12	sr
op	54:68	0:0	12	]
op	54:70	0:0	12	*
water	54:72	0:0	12	alpha
water	54:78	0:0	10	;
water	55:20	0:0	10	d
op	55:21	0:0	10	[
water	55:22	0:0	10	dg
op	55:24	0:0	10	]
op	55:26	0:0	10	=
call	55:28	55:77	10	FAST_DIV255
arg	55:40	55:77	11	d[dg]*(255-alpha)+s[sg]*alpha
water	55:40	0:0	12	d
op	55:41	0:0	12	[
water	55:42	0:0	12	dg
op	55:44	0:0	12	]
op	55:46	0:0	12	*
water	55:48	0:0	12	(
water	55:49	0:0	12	255
op	55:53	0:0	12	-
water	55:55	0:0	12	alpha
water	55:60	0:0	12	)
op	55:62	0:0	12	+
water	55:64	0:0	12	s
op	55:65	0:0	12	[
water	55:66	0:0	12	sg
op	55:68	0:0	12	]
op	55:70	0:0	12	*
water	55:72	0:0	12	alpha
water	55:78	0:0	10	;
water	56:20	0:0	10	d
op	56:21	0:0	10	[
water	56:22	0:0	10	db
op	56:24	0:0	10	]
op	56:26	0:0	10	=
call	56:28	56:77	10	FAST_DIV255
arg	56:40	56:77	11	d[db]*(255-alpha)+s[sb]*alpha
water	56:40	0:0	12	d
op	56:41	0:0	12	[
water	56:42	0:0	12	db
op	56:44	0:0	12	]
op	56:46	0:0	12	*
water	56:48	0:0	12	(
water	56:49	0:0	12	255
op	56:53	0:0	12	-
water	56:55	0:0	12	alpha
water	56:60	0:0	12	)
op	56:62	0:0	12	+
water	56:64	0:0	12	s
op	56:65	0:0	12	[
water	56:66	0:0	12	sb
op	56:68	0:0	12	]
op	56:70	0:0	12	*
water	56:72	0:0	12	alpha
water	56:78	0:0	10	;
water	57:16	0:0	10	}
if	58:16	69:16	8	(main_has_alpha)
cond	58:20	58:20	9	main_has_alpha
water	58:20	0:0	10	main_has_alpha
stmts	58:36	69:16	9	
water	58:36	0:0	10	{
switch	59:20	68:20	10	(alpha)
cond	59:28	59:28	11	alpha
water	59:28	0:0	12	alpha
stmts	59:35	68:20	11	
water	59:35	0:0	12	{
label	60:20	60:26	12	case 0 :
break	61:24	61:29	12	
label	62:20	62:28	12	case 255 :
water	63:24	0:0	12	d
op	63:25	0:0	12	[
water	63:26	0:0	12	da
op	63:28	0:0	12	]
op	63:30	0:0	12	=
water	63:32	0:0	12	s
op	63:33	0:0	12	[
water	63:34	0:0	12	sa
op	63:36	0:0	12	]
water	63:37	0:0	12	;
break	64:24	64:29	12	
label	65:20	65:27	12	default :
water	67:24	0:0	12	d
op	67:25	0:0	12	[
water	67:26	0:0	12	da
op	67:28	0:0	12	]
op	67:30	0:0	12	+=
call	67:33	67:66	12	FAST_DIV255
arg	67:45	67:66	13	(255-d[da])*s[sa]
water	67:45	0:0	14	(
water	67:46	0:0	14	255
op	67:50	0:0	14	-
water	67:52	0:0	14	d
op	67:53	0:0	14	[
water	67:54	0:0	14	da
op	67:56	0:0	14	]
water	67:57	0:0	14	)
op	67:59	0:0	14	*
water	67:61	0:0	14	s
op	67:62	0:0	14	[
water	67:63	0:0	14	sa
op	67:65	0:0	14	]
water	67:67	0:0	12	;
water	68:20	0:0	12	}
water	69:16	0:0	10	}
water	70:16	0:0	8	d
op	70:18	0:0	8	+=
water	70:21	0:0	8	dstep
water	70:26	0:0	8	;
water	71:16	0:0	8	s
op	71:18	0:0	8	+=
water	71:21	0:0	8	sstep
water	71:26	0:0	8	;
water	72:12	0:0	8	}
water	73:12	0:0	6	dp
op	73:15	0:0	6	+=
water	73:18	0:0	6	dst
op	73:21	0:0	6	->
water	73:23	0:0	6	linesize
op	73:31	0:0	6	[
water	73:32	0:0	6	0
op	73:33	0:0	6	]
water	73:34	0:0	6	;
water	74:12	0:0	6	sp
op	74:15	0:0	6	+=
water	74:18	0:0	6	src
op	74:21	0:0	6	->
water	74:23	0:0	6	linesize
op	74:31	0:0	6	[
water	74:32	0:0	6	0
op	74:33	0:0	6	]
water	74:34	0:0	6	;
water	75:8	0:0	6	}
water	76:4	0:0	4	}
else	76:6	172:4	2
stmts	76:11	172:4	3	
water	76:11	0:0	4	{
decl	77:8	77:52	4	const int	main_has_alpha
op	77:33	0:0	4	=
water	77:35	0:0	4	s
op	77:36	0:0	4	->
water	77:38	0:0	4	main_has_alpha
if	78:8	110:8	4	(main_has_alpha)
cond	78:12	78:12	5	main_has_alpha
water	78:12	0:0	6	main_has_alpha
stmts	78:28	110:8	5	
water	78:28	0:0	6	{
decl	79:12	79:25	6	uint8_t	alpha
decl	80:12	80:36	6	uint8_t	*s
water	80:22	0:0	6	,
decl	80:12	80:36	6	uint8_t	*sa
water	80:27	0:0	6	,
decl	80:12	80:36	6	uint8_t	*d
water	80:31	0:0	6	,
decl	80:12	80:36	6	uint8_t	*da
water	81:12	0:0	6	i
op	81:14	0:0	6	=
call	81:16	81:27	6	FFMAX
arg	81:22	81:24	7	-y
op	81:22	0:0	8	-
water	81:23	0:0	8	y
arg	81:26	81:27	7	0
water	81:26	0:0	8	0
water	81:28	0:0	6	;
water	82:12	0:0	6	sa
op	82:15	0:0	6	=
water	82:17	0:0	6	src
op	82:20	0:0	6	->
water	82:22	0:0	6	data
op	82:26	0:0	6	[
water	82:27	0:0	6	3
op	82:28	0:0	6	]
op	82:30	0:0	6	+
water	82:32	0:0	6	i
op	82:38	0:0	6	*
water	82:40	0:0	6	src
op	82:43	0:0	6	->
water	82:45	0:0	6	linesize
op	82:53	0:0	6	[
water	82:54	0:0	6	3
op	82:55	0:0	6	]
water	82:56	0:0	6	;
water	83:12	0:0	6	da
op	83:15	0:0	6	=
water	83:17	0:0	6	dst
op	83:20	0:0	6	->
water	83:22	0:0	6	data
op	83:26	0:0	6	[
water	83:27	0:0	6	3
op	83:28	0:0	6	]
op	83:30	0:0	6	+
water	83:32	0:0	6	(
water	83:33	0:0	6	y
op	83:34	0:0	6	+
water	83:35	0:0	6	i
water	83:36	0:0	6	)
op	83:38	0:0	6	*
water	83:40	0:0	6	dst
op	83:43	0:0	6	->
water	83:45	0:0	6	linesize
op	83:53	0:0	6	[
water	83:54	0:0	6	3
op	83:55	0:0	6	]
water	83:56	0:0	6	;
for	84:12	109:12	6	(imax =FFMIN (- y + dst_h ,src_h ) ;i < imax;i ++)
forinit	84:17	84:48	7	imax =FFMIN (- y + dst_h ,src_h ) ;
water	84:17	0:0	8	imax
op	84:22	0:0	8	=
call	84:24	84:47	8	FFMIN
arg	84:30	84:40	9	-y+dst_h
op	84:30	0:0	10	-
water	84:31	0:0	10	y
op	84:33	0:0	10	+
water	84:35	0:0	10	dst_h
arg	84:42	84:47	9	src_h
water	84:42	0:0	10	src_h
water	84:48	0:0	8	;
cond	84:50	84:54	7	i < imax
water	84:50	0:0	8	i
op	84:52	0:0	8	<
water	84:54	0:0	8	imax
forexpr	84:60	84:61	7	i ++
water	84:60	0:0	8	i
op	84:61	0:0	8	++
stmts	84:65	109:12	7	
water	84:65	0:0	8	{
water	85:16	0:0	8	j
op	85:18	0:0	8	=
call	85:20	85:31	8	FFMAX
arg	85:26	85:28	9	-x
op	85:26	0:0	10	-
water	85:27	0:0	10	x
arg	85:30	85:31	9	0
water	85:30	0:0	10	0
water	85:32	0:0	8	;
water	86:16	0:0	8	s
op	86:18	0:0	8	=
water	86:20	0:0	8	sa
op	86:23	0:0	8	+
water	86:25	0:0	8	j
water	86:26	0:0	8	;
water	87:16	0:0	8	d
op	87:18	0:0	8	=
water	87:20	0:0	8	da
op	87:23	0:0	8	+
water	87:25	0:0	8	x
op	87:26	0:0	8	+
water	87:27	0:0	8	j
water	87:28	0:0	8	;
for	88:16	106:16	8	(jmax =FFMIN (- x + dst_w ,src_w ) ;j < jmax;j ++)
forinit	88:21	88:52	9	jmax =FFMIN (- x + dst_w ,src_w ) ;
water	88:21	0:0	10	jmax
op	88:26	0:0	10	=
call	88:28	88:51	10	FFMIN
arg	88:34	88:44	11	-x+dst_w
op	88:34	0:0	12	-
water	88:35	0:0	12	x
op	88:37	0:0	12	+
water	88:39	0:0	12	dst_w
arg	88:46	88:51	11	src_w
water	88:46	0:0	12	src_w
water	88:52	0:0	10	;
cond	88:54	88:58	9	j < jmax
water	88:54	0:0	10	j
op	88:56	0:0	10	<
water	88:58	0:0	10	jmax
forexpr	88:64	88:65	9	j ++
water	88:64	0:0	10	j
op	88:65	0:0	10	++
stmts	88:69	106:16	9	
water	88:69	0:0	10	{
water	89:20	0:0	10	alpha
op	89:26	0:0	10	=
op	89:28	0:0	10	*
water	89:29	0:0	10	s
water	89:30	0:0	10	;
if	90:20	93:20	10	(alpha != 0 && alpha != 255)
cond	90:24	90:47	11	alpha != 0 && alpha != 255
water	90:24	0:0	12	alpha
op	90:30	0:0	12	!=
water	90:33	0:0	12	0
op	90:35	0:0	12	&&
water	90:38	0:0	12	alpha
op	90:44	0:0	12	!=
water	90:47	0:0	12	255
stmts	90:52	93:20	11	
water	90:52	0:0	12	{
decl	91:24	91:44	12	uint8_t	alpha_d
op	91:40	0:0	12	=
op	91:42	0:0	12	*
water	91:43	0:0	12	d
water	92:24	0:0	12	alpha
op	92:30	0:0	12	=
call	92:32	92:66	12	UNPREMULTIPLY_ALPHA
arg	92:52	92:57	13	alpha
water	92:52	0:0	14	alpha
arg	92:59	92:66	13	alpha_d
water	92:59	0:0	14	alpha_d
water	92:67	0:0	12	;
water	93:20	0:0	12	}
switch	94:20	103:20	10	(alpha)
cond	94:28	94:28	11	alpha
water	94:28	0:0	12	alpha
stmts	94:35	103:20	11	
water	94:35	0:0	12	{
label	95:20	95:26	12	case 0 :
break	96:24	96:29	12	
label	97:20	97:28	12	case 255 :
op	98:24	0:0	12	*
water	98:25	0:0	12	d
op	98:27	0:0	12	=
op	98:29	0:0	12	*
water	98:30	0:0	12	s
water	98:31	0:0	12	;
break	99:24	99:29	12	
label	100:20	100:27	12	default :
op	102:24	0:0	12	*
water	102:25	0:0	12	d
op	102:27	0:0	12	+=
call	102:30	102:57	12	FAST_DIV255
arg	102:42	102:57	13	(255-*d)**s
water	102:42	0:0	14	(
water	102:43	0:0	14	255
op	102:47	0:0	14	-
op	102:49	0:0	14	*
water	102:50	0:0	14	d
water	102:51	0:0	14	)
op	102:53	0:0	14	*
op	102:55	0:0	14	*
water	102:56	0:0	14	s
water	102:58	0:0	12	;
water	103:20	0:0	12	}
water	104:20	0:0	10	d
op	104:22	0:0	10	+=
water	104:25	0:0	10	1
water	104:26	0:0	10	;
water	105:20	0:0	10	s
op	105:22	0:0	10	+=
water	105:25	0:0	10	1
water	105:26	0:0	10	;
water	106:16	0:0	10	}
water	107:16	0:0	8	da
op	107:19	0:0	8	+=
water	107:22	0:0	8	dst
op	107:25	0:0	8	->
water	107:27	0:0	8	linesize
op	107:35	0:0	8	[
water	107:36	0:0	8	3
op	107:37	0:0	8	]
water	107:38	0:0	8	;
water	108:16	0:0	8	sa
op	108:19	0:0	8	+=
water	108:22	0:0	8	src
op	108:25	0:0	8	->
water	108:27	0:0	8	linesize
op	108:35	0:0	8	[
water	108:36	0:0	8	3
op	108:37	0:0	8	]
water	108:38	0:0	8	;
water	109:12	0:0	8	}
water	110:8	0:0	6	}
for	111:8	171:8	4	(i = 0 ;i < 3;i ++)
forinit	111:13	111:18	5	i = 0 ;
water	111:13	0:0	6	i
op	111:15	0:0	6	=
water	111:17	0:0	6	0
water	111:18	0:0	6	;
cond	111:20	111:24	5	i < 3
water	111:20	0:0	6	i
op	111:22	0:0	6	<
water	111:24	0:0	6	3
forexpr	111:27	111:28	5	i ++
water	111:27	0:0	6	i
op	111:28	0:0	6	++
stmts	111:32	171:8	5	
water	111:32	0:0	6	{
decl	112:12	112:38	6	int	hsub
op	112:21	0:0	6	=
water	112:23	0:0	6	i
water	112:25	0:0	6	?
water	112:27	0:0	6	s
op	112:28	0:0	6	->
water	112:30	0:0	6	hsub
water	112:35	0:0	6	:
water	112:37	0:0	6	0
decl	113:12	113:38	6	int	vsub
op	113:21	0:0	6	=
water	113:23	0:0	6	i
water	113:25	0:0	6	?
water	113:27	0:0	6	s
op	113:28	0:0	6	->
water	113:30	0:0	6	vsub
water	113:35	0:0	6	:
water	113:37	0:0	6	0
decl	114:12	114:52	6	int	src_wp
op	114:23	0:0	6	=
call	114:25	114:51	7	FF_CEIL_RSHIFT
arg	114:40	114:45	8	src_w
water	114:40	0:0	9	src_w
arg	114:47	114:51	8	hsub
water	114:47	0:0	9	hsub
decl	115:12	115:52	6	int	src_hp
op	115:23	0:0	6	=
call	115:25	115:51	7	FF_CEIL_RSHIFT
arg	115:40	115:45	8	src_h
water	115:40	0:0	9	src_h
arg	115:47	115:51	8	vsub
water	115:47	0:0	9	vsub
decl	116:12	116:52	6	int	dst_wp
op	116:23	0:0	6	=
call	116:25	116:51	7	FF_CEIL_RSHIFT
arg	116:40	116:45	8	dst_w
water	116:40	0:0	9	dst_w
arg	116:47	116:51	8	hsub
water	116:47	0:0	9	hsub
decl	117:12	117:52	6	int	dst_hp
op	117:23	0:0	6	=
call	117:25	117:51	7	FF_CEIL_RSHIFT
arg	117:40	117:45	8	dst_h
water	117:40	0:0	9	dst_h
arg	117:47	117:51	8	vsub
water	117:47	0:0	9	vsub
decl	118:12	118:28	6	int	yp
op	118:19	0:0	6	=
water	118:21	0:0	6	y
op	118:22	0:0	6	>>
water	118:24	0:0	6	vsub
decl	119:12	119:28	6	int	xp
op	119:19	0:0	6	=
water	119:21	0:0	6	x
op	119:22	0:0	6	>>
water	119:24	0:0	6	hsub
decl	120:12	120:45	6	uint8_t	*s
water	120:22	0:0	6	,
decl	120:12	120:45	6	uint8_t	*sp
water	120:27	0:0	6	,
decl	120:12	120:45	6	uint8_t	*d
water	120:31	0:0	6	,
decl	120:12	120:45	6	uint8_t	*dp
water	120:36	0:0	6	,
decl	120:12	120:45	6	uint8_t	*a
water	120:40	0:0	6	,
decl	120:12	120:45	6	uint8_t	*ap
water	121:12	0:0	6	j
op	121:14	0:0	6	=
call	121:16	121:28	6	FFMAX
arg	121:22	121:25	7	-yp
op	121:22	0:0	8	-
water	121:23	0:0	8	yp
arg	121:27	121:28	7	0
water	121:27	0:0	8	0
water	121:29	0:0	6	;
water	122:12	0:0	6	sp
op	122:15	0:0	6	=
water	122:17	0:0	6	src
op	122:20	0:0	6	->
water	122:22	0:0	6	data
op	122:26	0:0	6	[
water	122:27	0:0	6	i
op	122:28	0:0	6	]
op	122:30	0:0	6	+
water	122:32	0:0	6	j
op	122:42	0:0	6	*
water	122:44	0:0	6	src
op	122:47	0:0	6	->
water	122:49	0:0	6	linesize
op	122:57	0:0	6	[
water	122:58	0:0	6	i
op	122:59	0:0	6	]
water	122:60	0:0	6	;
water	123:12	0:0	6	dp
op	123:15	0:0	6	=
water	123:17	0:0	6	dst
op	123:20	0:0	6	->
water	123:22	0:0	6	data
op	123:26	0:0	6	[
water	123:27	0:0	6	i
op	123:28	0:0	6	]
op	123:30	0:0	6	+
water	123:32	0:0	6	(
water	123:33	0:0	6	yp
op	123:35	0:0	6	+
water	123:36	0:0	6	j
water	123:37	0:0	6	)
op	123:42	0:0	6	*
water	123:44	0:0	6	dst
op	123:47	0:0	6	->
water	123:49	0:0	6	linesize
op	123:57	0:0	6	[
water	123:58	0:0	6	i
op	123:59	0:0	6	]
water	123:60	0:0	6	;
water	124:12	0:0	6	ap
op	124:15	0:0	6	=
water	124:17	0:0	6	src
op	124:20	0:0	6	->
water	124:22	0:0	6	data
op	124:26	0:0	6	[
water	124:27	0:0	6	3
op	124:28	0:0	6	]
op	124:30	0:0	6	+
water	124:32	0:0	6	(
water	124:33	0:0	6	j
op	124:34	0:0	6	<<
water	124:36	0:0	6	vsub
water	124:40	0:0	6	)
op	124:42	0:0	6	*
water	124:44	0:0	6	src
op	124:47	0:0	6	->
water	124:49	0:0	6	linesize
op	124:57	0:0	6	[
water	124:58	0:0	6	3
op	124:59	0:0	6	]
water	124:60	0:0	6	;
for	125:12	170:12	6	(jmax =FFMIN (- yp + dst_hp ,src_hp ) ;j < jmax;j ++)
forinit	125:17	125:51	7	jmax =FFMIN (- yp + dst_hp ,src_hp ) ;
water	125:17	0:0	8	jmax
op	125:22	0:0	8	=
call	125:24	125:50	8	FFMIN
arg	125:30	125:42	9	-yp+dst_hp
op	125:30	0:0	10	-
water	125:31	0:0	10	yp
op	125:34	0:0	10	+
water	125:36	0:0	10	dst_hp
arg	125:44	125:50	9	src_hp
water	125:44	0:0	10	src_hp
water	125:51	0:0	8	;
cond	125:53	125:57	7	j < jmax
water	125:53	0:0	8	j
op	125:55	0:0	8	<
water	125:57	0:0	8	jmax
forexpr	125:63	125:64	7	j ++
water	125:63	0:0	8	j
op	125:64	0:0	8	++
stmts	125:68	170:12	7	
water	125:68	0:0	8	{
water	126:16	0:0	8	k
op	126:18	0:0	8	=
call	126:20	126:32	8	FFMAX
arg	126:26	126:29	9	-xp
op	126:26	0:0	10	-
water	126:27	0:0	10	xp
arg	126:31	126:32	9	0
water	126:31	0:0	10	0
water	126:33	0:0	8	;
water	127:16	0:0	8	d
op	127:18	0:0	8	=
water	127:20	0:0	8	dp
op	127:23	0:0	8	+
water	127:25	0:0	8	xp
op	127:27	0:0	8	+
water	127:28	0:0	8	k
water	127:29	0:0	8	;
water	128:16	0:0	8	s
op	128:18	0:0	8	=
water	128:20	0:0	8	sp
op	128:23	0:0	8	+
water	128:25	0:0	8	k
water	128:26	0:0	8	;
water	129:16	0:0	8	a
op	129:18	0:0	8	=
water	129:20	0:0	8	ap
op	129:23	0:0	8	+
water	129:25	0:0	8	(
water	129:26	0:0	8	k
op	129:27	0:0	8	<<
water	129:29	0:0	8	hsub
water	129:33	0:0	8	)
water	129:34	0:0	8	;
for	130:16	166:16	8	(kmax =FFMIN (- xp + dst_wp ,src_wp ) ;k < kmax;k ++)
forinit	130:21	130:55	9	kmax =FFMIN (- xp + dst_wp ,src_wp ) ;
water	130:21	0:0	10	kmax
op	130:26	0:0	10	=
call	130:28	130:54	10	FFMIN
arg	130:34	130:46	11	-xp+dst_wp
op	130:34	0:0	12	-
water	130:35	0:0	12	xp
op	130:38	0:0	12	+
water	130:40	0:0	12	dst_wp
arg	130:48	130:54	11	src_wp
water	130:48	0:0	12	src_wp
water	130:55	0:0	10	;
cond	130:57	130:61	9	k < kmax
water	130:57	0:0	10	k
op	130:59	0:0	10	<
water	130:61	0:0	10	kmax
forexpr	130:67	130:68	9	k ++
water	130:67	0:0	10	k
op	130:68	0:0	10	++
stmts	130:72	166:16	9	
water	130:72	0:0	10	{
decl	131:20	131:47	10	int	alpha_v
water	131:31	0:0	10	,
decl	131:20	131:47	10	int	alpha_h
water	131:40	0:0	10	,
decl	131:20	131:47	10	int	alpha
if	133:20	136:20	10	(hsub && vsub && j + 1 < src_hp && k + 1 < src_wp)
cond	133:24	133:62	11	hsub && vsub && j + 1 < src_hp && k + 1 < src_wp
water	133:24	0:0	12	hsub
op	133:29	0:0	12	&&
water	133:32	0:0	12	vsub
op	133:37	0:0	12	&&
water	133:40	0:0	12	j
op	133:41	0:0	12	+
water	133:42	0:0	12	1
op	133:44	0:0	12	<
water	133:46	0:0	12	src_hp
op	133:53	0:0	12	&&
water	133:56	0:0	12	k
op	133:57	0:0	12	+
water	133:58	0:0	12	1
op	133:60	0:0	12	<
water	133:62	0:0	12	src_wp
stmts	133:70	136:20	11	
water	133:70	0:0	12	{
water	134:24	0:0	12	alpha
op	134:30	0:0	12	=
water	134:32	0:0	12	(
water	134:33	0:0	12	a
op	134:34	0:0	12	[
water	134:35	0:0	12	0
op	134:36	0:0	12	]
op	134:38	0:0	12	+
water	134:40	0:0	12	a
op	134:41	0:0	12	[
water	134:42	0:0	12	src
op	134:45	0:0	12	->
water	134:47	0:0	12	linesize
op	134:55	0:0	12	[
water	134:56	0:0	12	3
op	134:57	0:0	12	]
op	134:58	0:0	12	]
op	134:60	0:0	12	+
water	135:33	0:0	12	a
op	135:34	0:0	12	[
water	135:35	0:0	12	1
op	135:36	0:0	12	]
op	135:38	0:0	12	+
water	135:40	0:0	12	a
op	135:41	0:0	12	[
water	135:42	0:0	12	src
op	135:45	0:0	12	->
water	135:47	0:0	12	linesize
op	135:55	0:0	12	[
water	135:56	0:0	12	3
op	135:57	0:0	12	]
op	135:58	0:0	12	+
water	135:59	0:0	12	1
op	135:60	0:0	12	]
water	135:61	0:0	12	)
op	135:63	0:0	12	>>
water	135:66	0:0	12	2
water	135:67	0:0	12	;
water	136:20	0:0	12	}
else	136:22	142:20	10
stmts	136:27	142:20	11	
if	136:27	142:20	12	(hsub || vsub)
cond	136:31	136:39	13	hsub || vsub
water	136:31	0:0	14	hsub
op	136:36	0:0	14	||
water	136:39	0:0	14	vsub
stmts	136:45	142:20	13	
water	136:45	0:0	14	{
water	137:24	0:0	14	alpha_h
op	137:32	0:0	14	=
water	137:34	0:0	14	hsub
op	137:39	0:0	14	&&
water	137:42	0:0	14	k
op	137:43	0:0	14	+
water	137:44	0:0	14	1
op	137:46	0:0	14	<
water	137:48	0:0	14	src_wp
water	137:55	0:0	14	?
water	138:28	0:0	14	(
water	138:29	0:0	14	a
op	138:30	0:0	14	[
water	138:31	0:0	14	0
op	138:32	0:0	14	]
op	138:34	0:0	14	+
water	138:36	0:0	14	a
op	138:37	0:0	14	[
water	138:38	0:0	14	1
op	138:39	0:0	14	]
water	138:40	0:0	14	)
op	138:42	0:0	14	>>
water	138:45	0:0	14	1
water	138:47	0:0	14	:
water	138:49	0:0	14	a
op	138:50	0:0	14	[
water	138:51	0:0	14	0
op	138:52	0:0	14	]
water	138:53	0:0	14	;
water	139:24	0:0	14	alpha_v
op	139:32	0:0	14	=
water	139:34	0:0	14	vsub
op	139:39	0:0	14	&&
water	139:42	0:0	14	j
op	139:43	0:0	14	+
water	139:44	0:0	14	1
op	139:46	0:0	14	<
water	139:48	0:0	14	src_hp
water	139:55	0:0	14	?
water	140:28	0:0	14	(
water	140:29	0:0	14	a
op	140:30	0:0	14	[
water	140:31	0:0	14	0
op	140:32	0:0	14	]
op	140:34	0:0	14	+
water	140:36	0:0	14	a
op	140:37	0:0	14	[
water	140:38	0:0	14	src
op	140:41	0:0	14	->
water	140:43	0:0	14	linesize
op	140:51	0:0	14	[
water	140:52	0:0	14	3
op	140:53	0:0	14	]
op	140:54	0:0	14	]
water	140:55	0:0	14	)
op	140:57	0:0	14	>>
water	140:60	0:0	14	1
water	140:62	0:0	14	:
water	140:64	0:0	14	a
op	140:65	0:0	14	[
water	140:66	0:0	14	0
op	140:67	0:0	14	]
water	140:68	0:0	14	;
water	141:24	0:0	14	alpha
op	141:30	0:0	14	=
water	141:32	0:0	14	(
water	141:33	0:0	14	alpha_v
op	141:41	0:0	14	+
water	141:43	0:0	14	alpha_h
water	141:50	0:0	14	)
op	141:52	0:0	14	>>
water	141:55	0:0	14	1
water	141:56	0:0	14	;
water	142:20	0:0	14	}
else	142:22	143:36	10
stmts	143:24	143:36	11	
water	143:24	0:0	12	alpha
op	143:30	0:0	12	=
water	143:32	0:0	12	a
op	143:33	0:0	12	[
water	143:34	0:0	12	0
op	143:35	0:0	12	]
water	143:36	0:0	12	;
if	146:20	161:20	10	(main_has_alpha && alpha != 0 && alpha != 255)
cond	146:24	146:65	11	main_has_alpha && alpha != 0 && alpha != 255
water	146:24	0:0	12	main_has_alpha
op	146:39	0:0	12	&&
water	146:42	0:0	12	alpha
op	146:48	0:0	12	!=
water	146:51	0:0	12	0
op	146:53	0:0	12	&&
water	146:56	0:0	12	alpha
op	146:62	0:0	12	!=
water	146:65	0:0	12	255
stmts	146:70	161:20	11	
water	146:70	0:0	12	{
decl	148:24	148:39	12	uint8_t	alpha_d
if	149:24	152:24	12	(hsub && vsub && j + 1 < src_hp && k + 1 < src_wp)
cond	149:28	149:66	13	hsub && vsub && j + 1 < src_hp && k + 1 < src_wp
water	149:28	0:0	14	hsub
op	149:33	0:0	14	&&
water	149:36	0:0	14	vsub
op	149:41	0:0	14	&&
water	149:44	0:0	14	j
op	149:45	0:0	14	+
water	149:46	0:0	14	1
op	149:48	0:0	14	<
water	149:50	0:0	14	src_hp
op	149:57	0:0	14	&&
water	149:60	0:0	14	k
op	149:61	0:0	14	+
water	149:62	0:0	14	1
op	149:64	0:0	14	<
water	149:66	0:0	14	src_wp
stmts	149:74	152:24	13	
water	149:74	0:0	14	{
water	150:28	0:0	14	alpha_d
op	150:36	0:0	14	=
water	150:38	0:0	14	(
water	150:39	0:0	14	d
op	150:40	0:0	14	[
water	150:41	0:0	14	0
op	150:42	0:0	14	]
op	150:44	0:0	14	+
water	150:46	0:0	14	d
op	150:47	0:0	14	[
water	150:48	0:0	14	src
op	150:51	0:0	14	->
water	150:53	0:0	14	linesize
op	150:61	0:0	14	[
water	150:62	0:0	14	3
op	150:63	0:0	14	]
op	150:64	0:0	14	]
op	150:66	0:0	14	+
water	151:39	0:0	14	d
op	151:40	0:0	14	[
water	151:41	0:0	14	1
op	151:42	0:0	14	]
op	151:44	0:0	14	+
water	151:46	0:0	14	d
op	151:47	0:0	14	[
water	151:48	0:0	14	src
op	151:51	0:0	14	->
water	151:53	0:0	14	linesize
op	151:61	0:0	14	[
water	151:62	0:0	14	3
op	151:63	0:0	14	]
op	151:64	0:0	14	+
water	151:65	0:0	14	1
op	151:66	0:0	14	]
water	151:67	0:0	14	)
op	151:69	0:0	14	>>
water	151:72	0:0	14	2
water	151:73	0:0	14	;
water	152:24	0:0	14	}
else	152:26	158:24	12
stmts	152:31	158:24	13	
if	152:31	158:24	14	(hsub || vsub)
cond	152:35	152:43	15	hsub || vsub
water	152:35	0:0	16	hsub
op	152:40	0:0	16	||
water	152:43	0:0	16	vsub
stmts	152:49	158:24	15	
water	152:49	0:0	16	{
water	153:28	0:0	16	alpha_h
op	153:36	0:0	16	=
water	153:38	0:0	16	hsub
op	153:43	0:0	16	&&
water	153:46	0:0	16	k
op	153:47	0:0	16	+
water	153:48	0:0	16	1
op	153:50	0:0	16	<
water	153:52	0:0	16	src_wp
water	153:59	0:0	16	?
water	154:32	0:0	16	(
water	154:33	0:0	16	d
op	154:34	0:0	16	[
water	154:35	0:0	16	0
op	154:36	0:0	16	]
op	154:38	0:0	16	+
water	154:40	0:0	16	d
op	154:41	0:0	16	[
water	154:42	0:0	16	1
op	154:43	0:0	16	]
water	154:44	0:0	16	)
op	154:46	0:0	16	>>
water	154:49	0:0	16	1
water	154:51	0:0	16	:
water	154:53	0:0	16	d
op	154:54	0:0	16	[
water	154:55	0:0	16	0
op	154:56	0:0	16	]
water	154:57	0:0	16	;
water	155:28	0:0	16	alpha_v
op	155:36	0:0	16	=
water	155:38	0:0	16	vsub
op	155:43	0:0	16	&&
water	155:46	0:0	16	j
op	155:47	0:0	16	+
water	155:48	0:0	16	1
op	155:50	0:0	16	<
water	155:52	0:0	16	src_hp
water	155:59	0:0	16	?
water	156:32	0:0	16	(
water	156:33	0:0	16	d
op	156:34	0:0	16	[
water	156:35	0:0	16	0
op	156:36	0:0	16	]
op	156:38	0:0	16	+
water	156:40	0:0	16	d
op	156:41	0:0	16	[
water	156:42	0:0	16	src
op	156:45	0:0	16	->
water	156:47	0:0	16	linesize
op	156:55	0:0	16	[
water	156:56	0:0	16	3
op	156:57	0:0	16	]
op	156:58	0:0	16	]
water	156:59	0:0	16	)
op	156:61	0:0	16	>>
water	156:64	0:0	16	1
water	156:66	0:0	16	:
water	156:68	0:0	16	d
op	156:69	0:0	16	[
water	156:70	0:0	16	0
op	156:71	0:0	16	]
water	156:72	0:0	16	;
water	157:28	0:0	16	alpha_d
op	157:36	0:0	16	=
water	157:38	0:0	16	(
water	157:39	0:0	16	alpha_v
op	157:47	0:0	16	+
water	157:49	0:0	16	alpha_h
water	157:56	0:0	16	)
op	157:58	0:0	16	>>
water	157:61	0:0	16	1
water	157:62	0:0	16	;
water	158:24	0:0	16	}
else	158:26	159:42	12
stmts	159:28	159:42	13	
water	159:28	0:0	14	alpha_d
op	159:36	0:0	14	=
water	159:38	0:0	14	d
op	159:39	0:0	14	[
water	159:40	0:0	14	0
op	159:41	0:0	14	]
water	159:42	0:0	14	;
water	160:24	0:0	12	alpha
op	160:30	0:0	12	=
call	160:32	160:66	12	UNPREMULTIPLY_ALPHA
arg	160:52	160:57	13	alpha
water	160:52	0:0	14	alpha
arg	160:59	160:66	13	alpha_d
water	160:59	0:0	14	alpha_d
water	160:67	0:0	12	;
water	161:20	0:0	12	}
op	162:20	0:0	10	*
water	162:21	0:0	10	d
op	162:23	0:0	10	=
call	162:25	162:68	10	FAST_DIV255
arg	162:37	162:68	11	*d*(255-alpha)+*s*alpha
op	162:37	0:0	12	*
water	162:38	0:0	12	d
op	162:40	0:0	12	*
water	162:42	0:0	12	(
water	162:43	0:0	12	255
op	162:47	0:0	12	-
water	162:49	0:0	12	alpha
water	162:54	0:0	12	)
op	162:56	0:0	12	+
op	162:58	0:0	12	*
water	162:59	0:0	12	s
op	162:61	0:0	12	*
water	162:63	0:0	12	alpha
water	162:69	0:0	10	;
water	163:20	0:0	10	s
op	163:21	0:0	10	++
water	163:23	0:0	10	;
water	164:20	0:0	10	d
op	164:21	0:0	10	++
water	164:23	0:0	10	;
water	165:20	0:0	10	a
op	165:22	0:0	10	+=
water	165:25	0:0	10	1
op	165:27	0:0	10	<<
water	165:30	0:0	10	hsub
water	165:34	0:0	10	;
water	166:16	0:0	10	}
water	167:16	0:0	8	dp
op	167:19	0:0	8	+=
water	167:22	0:0	8	dst
op	167:25	0:0	8	->
water	167:27	0:0	8	linesize
op	167:35	0:0	8	[
water	167:36	0:0	8	i
op	167:37	0:0	8	]
water	167:38	0:0	8	;
water	168:16	0:0	8	sp
op	168:19	0:0	8	+=
water	168:22	0:0	8	src
op	168:25	0:0	8	->
water	168:27	0:0	8	linesize
op	168:35	0:0	8	[
water	168:36	0:0	8	i
op	168:37	0:0	8	]
water	168:38	0:0	8	;
water	169:16	0:0	8	ap
op	169:19	0:0	8	+=
water	169:22	0:0	8	(
water	169:23	0:0	8	1
op	169:25	0:0	8	<<
water	169:28	0:0	8	vsub
water	169:32	0:0	8	)
op	169:34	0:0	8	*
water	169:36	0:0	8	src
op	169:39	0:0	8	->
water	169:41	0:0	8	linesize
op	169:49	0:0	8	[
water	169:50	0:0	8	3
op	169:51	0:0	8	]
water	169:52	0:0	8	;
water	170:12	0:0	8	}
water	171:8	0:0	6	}
water	172:4	0:0	4	}

func	1:15	42:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	41:12	1	
decl	3:4	3:35	2	AudioEchoContext	*s
op	3:24	0:0	2	=
water	3:26	0:0	2	ctx
op	3:29	0:0	2	->
water	3:31	0:0	2	priv
decl	4:4	4:31	2	int	nb_delays
water	4:17	0:0	2	,
decl	4:4	4:31	2	int	nb_decays
water	4:28	0:0	2	,
decl	4:4	4:31	2	int	i
if	5:4	8:4	2	(! s -> delays || ! s -> decays)
cond	5:8	5:26	3	! s -> delays || ! s -> decays
op	5:8	0:0	4	!
water	5:9	0:0	4	s
op	5:10	0:0	4	->
water	5:12	0:0	4	delays
op	5:19	0:0	4	||
op	5:22	0:0	4	!
water	5:23	0:0	4	s
op	5:24	0:0	4	->
water	5:26	0:0	4	decays
stmts	5:34	8:4	3	
water	5:34	0:0	4	{
call	6:8	6:67	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	6:34	6:67	5	"Missing delays and/or decays.\n"
water	6:34	0:0	6	"Missing delays and/or decays.\n"
water	6:68	0:0	4	;
return	7:8	7:30	4	AVERROR(EINVAL)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	EINVAL
water	7:23	0:0	7	EINVAL
water	8:4	0:0	4	}
call	9:4	9:37	2	count_items
arg	9:16	9:25	3	s->delays
water	9:16	0:0	4	s
op	9:17	0:0	4	->
water	9:19	0:0	4	delays
arg	9:27	9:37	3	&nb_delays
op	9:27	0:0	4	&
water	9:28	0:0	4	nb_delays
water	9:38	0:0	2	;
call	10:4	10:37	2	count_items
arg	10:16	10:25	3	s->decays
water	10:16	0:0	4	s
op	10:17	0:0	4	->
water	10:19	0:0	4	decays
arg	10:27	10:37	3	&nb_decays
op	10:27	0:0	4	&
water	10:28	0:0	4	nb_decays
water	10:38	0:0	2	;
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	delay
op	11:13	0:0	2	=
call	11:15	11:66	2	av_realloc_f
arg	11:28	11:36	3	s->delay
water	11:28	0:0	4	s
op	11:29	0:0	4	->
water	11:31	0:0	4	delay
arg	11:38	11:47	3	nb_delays
water	11:38	0:0	4	nb_delays
arg	11:49	11:66	3	sizeof(*s->delay)
op	11:49	0:0	4	sizeof
water	11:55	0:0	4	(
op	11:56	0:0	4	*
water	11:57	0:0	4	s
op	11:58	0:0	4	->
water	11:60	0:0	4	delay
water	11:65	0:0	4	)
water	11:67	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	decay
op	12:13	0:0	2	=
call	12:15	12:66	2	av_realloc_f
arg	12:28	12:36	3	s->decay
water	12:28	0:0	4	s
op	12:29	0:0	4	->
water	12:31	0:0	4	decay
arg	12:38	12:47	3	nb_decays
water	12:38	0:0	4	nb_decays
arg	12:49	12:66	3	sizeof(*s->decay)
op	12:49	0:0	4	sizeof
water	12:55	0:0	4	(
op	12:56	0:0	4	*
water	12:57	0:0	4	s
op	12:58	0:0	4	->
water	12:60	0:0	4	decay
water	12:65	0:0	4	)
water	12:67	0:0	2	;
if	13:4	14:30	2	(! s -> delay || ! s -> decay)
cond	13:8	13:25	3	! s -> delay || ! s -> decay
op	13:8	0:0	4	!
water	13:9	0:0	4	s
op	13:10	0:0	4	->
water	13:12	0:0	4	delay
op	13:18	0:0	4	||
op	13:21	0:0	4	!
water	13:22	0:0	4	s
op	13:23	0:0	4	->
water	13:25	0:0	4	decay
stmts	14:8	14:30	3	
return	14:8	14:30	4	AVERROR(ENOMEM)
call	14:15	14:29	5	AVERROR
arg	14:23	14:29	6	ENOMEM
water	14:23	0:0	7	ENOMEM
call	15:4	15:46	2	fill_items
arg	15:15	15:24	3	s->delays
water	15:15	0:0	4	s
op	15:16	0:0	4	->
water	15:18	0:0	4	delays
arg	15:26	15:36	3	&nb_delays
op	15:26	0:0	4	&
water	15:27	0:0	4	nb_delays
arg	15:38	15:46	3	s->delay
water	15:38	0:0	4	s
op	15:39	0:0	4	->
water	15:41	0:0	4	delay
water	15:47	0:0	2	;
call	16:4	16:46	2	fill_items
arg	16:15	16:24	3	s->decays
water	16:15	0:0	4	s
op	16:16	0:0	4	->
water	16:18	0:0	4	decays
arg	16:26	16:36	3	&nb_decays
op	16:26	0:0	4	&
water	16:27	0:0	4	nb_decays
arg	16:38	16:46	3	s->decay
water	16:38	0:0	4	s
op	16:39	0:0	4	->
water	16:41	0:0	4	decay
water	16:47	0:0	2	;
if	17:4	20:4	2	(nb_delays != nb_decays)
cond	17:8	17:21	3	nb_delays != nb_decays
water	17:8	0:0	4	nb_delays
op	17:18	0:0	4	!=
water	17:21	0:0	4	nb_decays
stmts	17:32	20:4	3	
water	17:32	0:0	4	{
call	18:8	18:113	4	av_log
arg	18:15	18:18	5	ctx
water	18:15	0:0	6	ctx
arg	18:20	18:32	5	AV_LOG_ERROR
water	18:20	0:0	6	AV_LOG_ERROR
arg	18:34	18:91	5	"Number of delays %d differs from number of decays %d.\n"
water	18:34	0:0	6	"Number of delays %d differs from number of decays %d.\n"
arg	18:93	18:102	5	nb_delays
water	18:93	0:0	6	nb_delays
arg	18:104	18:113	5	nb_decays
water	18:104	0:0	6	nb_decays
water	18:114	0:0	4	;
return	19:8	19:30	4	AVERROR(EINVAL)
call	19:15	19:29	5	AVERROR
arg	19:23	19:29	6	EINVAL
water	19:23	0:0	7	EINVAL
water	20:4	0:0	4	}
water	21:4	0:0	2	s
op	21:5	0:0	2	->
water	21:7	0:0	2	nb_echoes
op	21:17	0:0	2	=
water	21:19	0:0	2	nb_delays
water	21:28	0:0	2	;
if	22:4	25:4	2	(! s -> nb_echoes)
cond	22:8	22:12	3	! s -> nb_echoes
op	22:8	0:0	4	!
water	22:9	0:0	4	s
op	22:10	0:0	4	->
water	22:12	0:0	4	nb_echoes
stmts	22:23	25:4	3	
water	22:23	0:0	4	{
call	23:8	23:77	4	av_log
arg	23:15	23:18	5	ctx
water	23:15	0:0	6	ctx
arg	23:20	23:32	5	AV_LOG_ERROR
water	23:20	0:0	6	AV_LOG_ERROR
arg	23:34	23:77	5	"At least one decay & delay must be set.\n"
water	23:34	0:0	6	"At least one decay & delay must be set.\n"
water	23:78	0:0	4	;
return	24:8	24:30	4	AVERROR(EINVAL)
call	24:15	24:29	5	AVERROR
arg	24:23	24:29	6	EINVAL
water	24:23	0:0	7	EINVAL
water	25:4	0:0	4	}
water	26:4	0:0	2	s
op	26:5	0:0	2	->
water	26:7	0:0	2	samples
op	26:15	0:0	2	=
call	26:17	26:72	2	av_realloc_f
arg	26:30	26:40	3	s->samples
water	26:30	0:0	4	s
op	26:31	0:0	4	->
water	26:33	0:0	4	samples
arg	26:42	26:51	3	nb_delays
water	26:42	0:0	4	nb_delays
arg	26:53	26:72	3	sizeof(*s->samples)
op	26:53	0:0	4	sizeof
water	26:59	0:0	4	(
op	26:60	0:0	4	*
water	26:61	0:0	4	s
op	26:62	0:0	4	->
water	26:64	0:0	4	samples
water	26:71	0:0	4	)
water	26:73	0:0	2	;
if	27:4	28:30	2	(! s -> samples)
cond	27:8	27:12	3	! s -> samples
op	27:8	0:0	4	!
water	27:9	0:0	4	s
op	27:10	0:0	4	->
water	27:12	0:0	4	samples
stmts	28:8	28:30	3	
return	28:8	28:30	4	AVERROR(ENOMEM)
call	28:15	28:29	5	AVERROR
arg	28:23	28:29	6	ENOMEM
water	28:23	0:0	7	ENOMEM
for	29:4	38:4	2	(i = 0 ;i < nb_delays;i ++)
forinit	29:9	29:14	3	i = 0 ;
water	29:9	0:0	4	i
op	29:11	0:0	4	=
water	29:13	0:0	4	0
water	29:14	0:0	4	;
cond	29:16	29:20	3	i < nb_delays
water	29:16	0:0	4	i
op	29:18	0:0	4	<
water	29:20	0:0	4	nb_delays
forexpr	29:31	29:32	3	i ++
water	29:31	0:0	4	i
op	29:32	0:0	4	++
stmts	29:36	38:4	3	
water	29:36	0:0	4	{
if	30:8	33:8	4	(s -> delay [ i ] <= 0 || s -> delay [ i ] > 90000)
cond	30:12	30:46	5	s -> delay [ i ] <= 0 || s -> delay [ i ] > 90000
water	30:12	0:0	6	s
op	30:13	0:0	6	->
water	30:15	0:0	6	delay
op	30:20	0:0	6	[
water	30:21	0:0	6	i
op	30:22	0:0	6	]
op	30:24	0:0	6	<=
water	30:27	0:0	6	0
op	30:29	0:0	6	||
water	30:32	0:0	6	s
op	30:33	0:0	6	->
water	30:35	0:0	6	delay
op	30:40	0:0	6	[
water	30:41	0:0	6	i
op	30:42	0:0	6	]
op	30:44	0:0	6	>
water	30:46	0:0	6	90000
stmts	30:53	33:8	5	
water	30:53	0:0	6	{
call	31:12	31:107	6	av_log
arg	31:19	31:22	7	ctx
water	31:19	0:0	8	ctx
arg	31:24	31:36	7	AV_LOG_ERROR
water	31:24	0:0	8	AV_LOG_ERROR
arg	31:38	31:91	7	"delay[%d]: %f is out of allowed range: (0, 90000]\n"
water	31:38	0:0	8	"delay[%d]: %f is out of allowed range: (0, 90000]\n"
arg	31:93	31:94	7	i
water	31:93	0:0	8	i
arg	31:96	31:107	7	s->delay[i]
water	31:96	0:0	8	s
op	31:97	0:0	8	->
water	31:99	0:0	8	delay
op	31:104	0:0	8	[
water	31:105	0:0	8	i
op	31:106	0:0	8	]
water	31:108	0:0	6	;
return	32:12	32:34	6	AVERROR(EINVAL)
call	32:19	32:33	7	AVERROR
arg	32:27	32:33	8	EINVAL
water	32:27	0:0	9	EINVAL
water	33:8	0:0	6	}
if	34:8	37:8	4	(s -> decay [ i ] <= 0 || s -> decay [ i ] > 1)
cond	34:12	34:46	5	s -> decay [ i ] <= 0 || s -> decay [ i ] > 1
water	34:12	0:0	6	s
op	34:13	0:0	6	->
water	34:15	0:0	6	decay
op	34:20	0:0	6	[
water	34:21	0:0	6	i
op	34:22	0:0	6	]
op	34:24	0:0	6	<=
water	34:27	0:0	6	0
op	34:29	0:0	6	||
water	34:32	0:0	6	s
op	34:33	0:0	6	->
water	34:35	0:0	6	decay
op	34:40	0:0	6	[
water	34:41	0:0	6	i
op	34:42	0:0	6	]
op	34:44	0:0	6	>
water	34:46	0:0	6	1
stmts	34:49	37:8	5	
water	34:49	0:0	6	{
call	35:12	35:103	6	av_log
arg	35:19	35:22	7	ctx
water	35:19	0:0	8	ctx
arg	35:24	35:36	7	AV_LOG_ERROR
water	35:24	0:0	8	AV_LOG_ERROR
arg	35:38	35:87	7	"decay[%d]: %f is out of allowed range: (0, 1]\n"
water	35:38	0:0	8	"decay[%d]: %f is out of allowed range: (0, 1]\n"
arg	35:89	35:90	7	i
water	35:89	0:0	8	i
arg	35:92	35:103	7	s->decay[i]
water	35:92	0:0	8	s
op	35:93	0:0	8	->
water	35:95	0:0	8	decay
op	35:100	0:0	8	[
water	35:101	0:0	8	i
op	35:102	0:0	8	]
water	35:104	0:0	6	;
return	36:12	36:34	6	AVERROR(EINVAL)
call	36:19	36:33	7	AVERROR
arg	36:27	36:33	8	EINVAL
water	36:27	0:0	9	EINVAL
water	37:8	0:0	6	}
water	38:4	0:0	4	}
water	39:4	0:0	2	s
op	39:5	0:0	2	->
water	39:7	0:0	2	next_pts
op	39:16	0:0	2	=
water	39:18	0:0	2	AV_NOPTS_VALUE
water	39:32	0:0	2	;
call	40:4	40:60	2	av_log
arg	40:11	40:14	3	ctx
water	40:11	0:0	4	ctx
arg	40:16	40:28	3	AV_LOG_DEBUG
water	40:16	0:0	4	AV_LOG_DEBUG
arg	40:30	40:46	3	"nb_echoes:%d\n"
water	40:30	0:0	4	"nb_echoes:%d\n"
arg	40:48	40:60	3	s->nb_echoes
water	40:48	0:0	4	s
op	40:49	0:0	4	->
water	40:51	0:0	4	nb_echoes
water	40:61	0:0	2	;
return	41:4	41:12	2	0
water	41:11	0:0	3	0

func	1:0	11:0	0	static void	scale_coefficients
params	1:30	0:0	1	
param	1:31	1:50	2	AC3EncodeContext *	s
stmnts	0:0	10:4	1	
decl	3:4	3:15	2	int	blk
water	3:11	0:0	2	,
decl	3:4	3:15	2	int	ch
for	4:4	10:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	4:9	4:16	3	blk = 0 ;
water	4:9	0:0	4	blk
op	4:13	0:0	4	=
water	4:15	0:0	4	0
water	4:16	0:0	4	;
cond	4:18	4:27	3	blk < s -> num_blocks
water	4:18	0:0	4	blk
op	4:22	0:0	4	<
water	4:24	0:0	4	s
op	4:25	0:0	4	->
water	4:27	0:0	4	num_blocks
forexpr	4:39	4:42	3	blk ++
water	4:39	0:0	4	blk
op	4:42	0:0	4	++
stmts	4:46	10:4	3	
water	4:46	0:0	4	{
decl	5:8	5:41	4	AC3Block	*block
op	5:24	0:0	4	=
op	5:26	0:0	4	&
water	5:27	0:0	4	s
op	5:28	0:0	4	->
water	5:30	0:0	4	blocks
op	5:36	0:0	4	[
water	5:37	0:0	4	blk
op	5:40	0:0	4	]
for	6:8	9:8	4	(ch = 1 ;ch <= s -> channels;ch ++)
forinit	6:13	6:19	5	ch = 1 ;
water	6:13	0:0	6	ch
op	6:16	0:0	6	=
water	6:18	0:0	6	1
water	6:19	0:0	6	;
cond	6:21	6:30	5	ch <= s -> channels
water	6:21	0:0	6	ch
op	6:24	0:0	6	<=
water	6:27	0:0	6	s
op	6:28	0:0	6	->
water	6:30	0:0	6	channels
forexpr	6:40	6:42	5	ch ++
water	6:40	0:0	6	ch
op	6:42	0:0	6	++
stmts	6:46	9:8	5	
water	6:46	0:0	6	{
call	7:12	8:61	6	s->ac3dsp.ac3_rshift_int32
arg	7:39	7:59	7	block->mdct_coef[ch]
water	7:39	0:0	8	block
op	7:44	0:0	8	->
water	7:46	0:0	8	mdct_coef
op	7:55	0:0	8	[
water	7:56	0:0	8	ch
op	7:58	0:0	8	]
arg	7:61	7:74	7	AC3_MAX_COEFS
water	7:61	0:0	8	AC3_MAX_COEFS
arg	8:39	8:61	7	block->coeff_shift[ch]
water	8:39	0:0	8	block
op	8:44	0:0	8	->
water	8:46	0:0	8	coeff_shift
op	8:57	0:0	8	[
water	8:58	0:0	8	ch
op	8:60	0:0	8	]
water	8:62	0:0	6	;
water	9:8	0:0	6	}
water	10:4	0:0	4	}

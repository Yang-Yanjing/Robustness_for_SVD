func	2:0	48:0	0	static int	sbr_hf_calc_npatches
params	2:31	0:0	1	
param	2:32	2:46	2	AACContext *	ac
param	2:48	2:76	2	SpectralBandReplication *	sbr
stmnts	0:0	47:12	1	
decl	4:4	4:48	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:48	2	int	k
water	4:12	0:0	2	,
decl	4:4	4:48	2	int	last_k
op	4:21	0:0	2	=
op	4:23	0:0	2	-
water	4:24	0:0	2	1
water	4:25	0:0	2	,
decl	4:4	4:48	2	int	last_msb
op	4:36	0:0	2	=
op	4:38	0:0	2	-
water	4:39	0:0	2	1
water	4:40	0:0	2	,
decl	4:4	4:48	2	int	sb
op	4:45	0:0	2	=
water	4:47	0:0	2	0
decl	5:4	5:23	2	int	msb
op	5:12	0:0	2	=
water	5:14	0:0	2	sbr
op	5:17	0:0	2	->
water	5:19	0:0	2	k
op	5:20	0:0	2	[
water	5:21	0:0	2	0
op	5:22	0:0	2	]
decl	6:4	6:24	2	int	usb
op	6:12	0:0	2	=
water	6:14	0:0	2	sbr
op	6:17	0:0	2	->
water	6:19	0:0	2	kx
op	6:21	0:0	2	[
water	6:22	0:0	2	1
op	6:23	0:0	2	]
decl	7:4	7:77	2	int	goal_sb
op	7:16	0:0	2	=
water	7:18	0:0	2	(
water	7:19	0:0	2	(
water	7:20	0:0	2	1000
op	7:25	0:0	2	<<
water	7:28	0:0	2	11
water	7:30	0:0	2	)
op	7:32	0:0	2	+
water	7:34	0:0	2	(
water	7:35	0:0	2	sbr
op	7:38	0:0	2	->
water	7:40	0:0	2	sample_rate
op	7:52	0:0	2	>>
water	7:55	0:0	2	1
water	7:56	0:0	2	)
water	7:57	0:0	2	)
op	7:59	0:0	2	/
water	7:61	0:0	2	sbr
op	7:64	0:0	2	->
water	7:66	0:0	2	sample_rate
water	8:4	0:0	2	sbr
op	8:7	0:0	2	->
water	8:9	0:0	2	num_patches
op	8:21	0:0	2	=
water	8:23	0:0	2	0
water	8:24	0:0	2	;
if	9:4	11:4	2	(goal_sb < sbr -> kx [ 1 ] + sbr -> m [ 1 ])
cond	9:8	9:39	3	goal_sb < sbr -> kx [ 1 ] + sbr -> m [ 1 ]
water	9:8	0:0	4	goal_sb
op	9:16	0:0	4	<
water	9:18	0:0	4	sbr
op	9:21	0:0	4	->
water	9:23	0:0	4	kx
op	9:25	0:0	4	[
water	9:26	0:0	4	1
op	9:27	0:0	4	]
op	9:29	0:0	4	+
water	9:31	0:0	4	sbr
op	9:34	0:0	4	->
water	9:36	0:0	4	m
op	9:37	0:0	4	[
water	9:38	0:0	4	1
op	9:39	0:0	4	]
stmts	9:42	11:4	3	
water	9:42	0:0	4	{
for	10:8	10:53	4	(k = 0 ;sbr -> f_master [ k ] < goal_sb;k ++)
forinit	10:13	10:18	5	k = 0 ;
water	10:13	0:0	6	k
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:18	0:0	6	;
cond	10:20	10:39	5	sbr -> f_master [ k ] < goal_sb
water	10:20	0:0	6	sbr
op	10:23	0:0	6	->
water	10:25	0:0	6	f_master
op	10:33	0:0	6	[
water	10:34	0:0	6	k
op	10:35	0:0	6	]
op	10:37	0:0	6	<
water	10:39	0:0	6	goal_sb
forexpr	10:48	10:49	5	k ++
water	10:48	0:0	6	k
op	10:49	0:0	6	++
stmts	10:53	10:53	5	
water	10:53	0:0	6	;
water	11:4	0:0	4	}
else	11:6	12:25	2
stmts	12:8	12:25	3	
water	12:8	0:0	4	k
op	12:10	0:0	4	=
water	12:12	0:0	4	sbr
op	12:15	0:0	4	->
water	12:17	0:0	4	n_master
water	12:25	0:0	4	;
do	13:4	43:4	2	(sb != sbr -> kx [ 1 ] + sbr -> m [ 1 ])
cond	43:13	43:40	3	sb != sbr -> kx [ 1 ] + sbr -> m [ 1 ]
water	43:13	0:0	4	sb
op	43:16	0:0	4	!=
water	43:19	0:0	4	sbr
op	43:22	0:0	4	->
water	43:24	0:0	4	kx
op	43:26	0:0	4	[
water	43:27	0:0	4	1
op	43:28	0:0	4	]
op	43:30	0:0	4	+
water	43:32	0:0	4	sbr
op	43:35	0:0	4	->
water	43:37	0:0	4	m
op	43:38	0:0	4	[
water	43:39	0:0	4	1
op	43:40	0:0	4	]
stmts	13:7	43:4	3	
water	13:7	0:0	4	{
decl	14:8	14:19	4	int	odd
op	14:16	0:0	4	=
water	14:18	0:0	4	0
if	15:8	18:8	4	(k == last_k && msb == last_msb)
cond	15:12	15:34	5	k == last_k && msb == last_msb
water	15:12	0:0	6	k
op	15:14	0:0	6	==
water	15:17	0:0	6	last_k
op	15:24	0:0	6	&&
water	15:27	0:0	6	msb
op	15:31	0:0	6	==
water	15:34	0:0	6	last_msb
stmts	15:44	18:8	5	
water	15:44	0:0	6	{
call	16:12	16:73	6	av_log
arg	16:19	16:28	7	ac->avctx
water	16:19	0:0	8	ac
op	16:21	0:0	8	->
water	16:23	0:0	8	avctx
arg	16:30	16:42	7	AV_LOG_ERROR
water	16:30	0:0	8	AV_LOG_ERROR
arg	16:44	16:73	7	"patch construction failed\n"
water	16:44	0:0	8	"patch construction failed\n"
water	16:74	0:0	6	;
return	17:12	17:38	6	AVERROR_INVALIDDATA
water	17:19	0:0	7	AVERROR_INVALIDDATA
water	18:8	0:0	6	}
water	19:8	0:0	4	last_k
op	19:15	0:0	4	=
water	19:17	0:0	4	k
water	19:18	0:0	4	;
water	20:8	0:0	4	last_msb
op	20:17	0:0	4	=
water	20:19	0:0	4	msb
water	20:22	0:0	4	;
for	21:8	24:8	4	(i = k ;i == k || sb > ( sbr -> k [ 0 ] - 1 + msb - odd );i --)
forinit	21:13	21:18	5	i = k ;
water	21:13	0:0	6	i
op	21:15	0:0	6	=
water	21:17	0:0	6	k
water	21:18	0:0	6	;
cond	21:20	21:61	5	i == k || sb > ( sbr -> k [ 0 ] - 1 + msb - odd )
water	21:20	0:0	6	i
op	21:22	0:0	6	==
water	21:25	0:0	6	k
op	21:27	0:0	6	||
water	21:30	0:0	6	sb
op	21:33	0:0	6	>
water	21:35	0:0	6	(
water	21:36	0:0	6	sbr
op	21:39	0:0	6	->
water	21:41	0:0	6	k
op	21:42	0:0	6	[
water	21:43	0:0	6	0
op	21:44	0:0	6	]
op	21:46	0:0	6	-
water	21:48	0:0	6	1
op	21:50	0:0	6	+
water	21:52	0:0	6	msb
op	21:56	0:0	6	-
water	21:58	0:0	6	odd
water	21:61	0:0	6	)
forexpr	21:64	21:65	5	i --
water	21:64	0:0	6	i
op	21:65	0:0	6	--
stmts	21:69	24:8	5	
water	21:69	0:0	6	{
water	22:12	0:0	6	sb
op	22:15	0:0	6	=
water	22:17	0:0	6	sbr
op	22:20	0:0	6	->
water	22:22	0:0	6	f_master
op	22:30	0:0	6	[
water	22:31	0:0	6	i
op	22:32	0:0	6	]
water	22:33	0:0	6	;
water	23:12	0:0	6	odd
op	23:16	0:0	6	=
water	23:18	0:0	6	(
water	23:19	0:0	6	sb
op	23:22	0:0	6	+
water	23:24	0:0	6	sbr
op	23:27	0:0	6	->
water	23:29	0:0	6	k
op	23:30	0:0	6	[
water	23:31	0:0	6	0
op	23:32	0:0	6	]
water	23:33	0:0	6	)
op	23:35	0:0	6	&
water	23:37	0:0	6	1
water	23:38	0:0	6	;
water	24:8	0:0	6	}
if	29:8	32:8	4	(sbr -> num_patches > 5)
cond	29:12	29:31	5	sbr -> num_patches > 5
water	29:12	0:0	6	sbr
op	29:15	0:0	6	->
water	29:17	0:0	6	num_patches
op	29:29	0:0	6	>
water	29:31	0:0	6	5
stmts	29:34	32:8	5	
water	29:34	0:0	6	{
call	30:12	30:86	6	av_log
arg	30:19	30:28	7	ac->avctx
water	30:19	0:0	8	ac
op	30:21	0:0	8	->
water	30:23	0:0	8	avctx
arg	30:30	30:42	7	AV_LOG_ERROR
water	30:30	0:0	8	AV_LOG_ERROR
arg	30:44	30:68	7	"Too many patches: %d\n"
water	30:44	0:0	8	"Too many patches: %d\n"
arg	30:70	30:86	7	sbr->num_patches
water	30:70	0:0	8	sbr
op	30:73	0:0	8	->
water	30:75	0:0	8	num_patches
water	30:87	0:0	6	;
return	31:12	31:21	6	-1
op	31:19	0:0	7	-
water	31:20	0:0	7	1
water	32:8	0:0	6	}
water	33:8	0:0	4	sbr
op	33:11	0:0	4	->
water	33:13	0:0	4	patch_num_subbands
op	33:31	0:0	4	[
water	33:32	0:0	4	sbr
op	33:35	0:0	4	->
water	33:37	0:0	4	num_patches
op	33:48	0:0	4	]
op	33:51	0:0	4	=
call	33:53	33:70	4	FFMAX
arg	33:59	33:67	5	sb-usb
water	33:59	0:0	6	sb
op	33:62	0:0	6	-
water	33:64	0:0	6	usb
arg	33:69	33:70	5	0
water	33:69	0:0	6	0
water	33:71	0:0	4	;
water	34:8	0:0	4	sbr
op	34:11	0:0	4	->
water	34:13	0:0	4	patch_start_subband
op	34:32	0:0	4	[
water	34:33	0:0	4	sbr
op	34:36	0:0	4	->
water	34:38	0:0	4	num_patches
op	34:49	0:0	4	]
op	34:51	0:0	4	=
water	34:53	0:0	4	sbr
op	34:56	0:0	4	->
water	34:58	0:0	4	k
op	34:59	0:0	4	[
water	34:60	0:0	4	0
op	34:61	0:0	4	]
op	34:63	0:0	4	-
water	34:65	0:0	4	odd
op	34:69	0:0	4	-
water	34:71	0:0	4	sbr
op	34:74	0:0	4	->
water	34:76	0:0	4	patch_num_subbands
op	34:94	0:0	4	[
water	34:95	0:0	4	sbr
op	34:98	0:0	4	->
water	34:100	0:0	4	num_patches
op	34:111	0:0	4	]
water	34:112	0:0	4	;
if	35:8	39:8	4	(sbr -> patch_num_subbands [ sbr -> num_patches ] > 0)
cond	35:12	35:56	5	sbr -> patch_num_subbands [ sbr -> num_patches ] > 0
water	35:12	0:0	6	sbr
op	35:15	0:0	6	->
water	35:17	0:0	6	patch_num_subbands
op	35:35	0:0	6	[
water	35:36	0:0	6	sbr
op	35:39	0:0	6	->
water	35:41	0:0	6	num_patches
op	35:52	0:0	6	]
op	35:54	0:0	6	>
water	35:56	0:0	6	0
stmts	35:59	39:8	5	
water	35:59	0:0	6	{
water	36:12	0:0	6	usb
op	36:16	0:0	6	=
water	36:18	0:0	6	sb
water	36:20	0:0	6	;
water	37:12	0:0	6	msb
op	37:16	0:0	6	=
water	37:18	0:0	6	sb
water	37:20	0:0	6	;
water	38:12	0:0	6	sbr
op	38:15	0:0	6	->
water	38:17	0:0	6	num_patches
op	38:28	0:0	6	++
water	38:30	0:0	6	;
water	39:8	0:0	6	}
else	39:10	40:28	4
stmts	40:12	40:28	5	
water	40:12	0:0	6	msb
op	40:16	0:0	6	=
water	40:18	0:0	6	sbr
op	40:21	0:0	6	->
water	40:23	0:0	6	kx
op	40:25	0:0	6	[
water	40:26	0:0	6	1
op	40:27	0:0	6	]
water	40:28	0:0	6	;
if	41:8	42:29	4	(sbr -> f_master [ k ] - sb < 3)
cond	41:12	41:36	5	sbr -> f_master [ k ] - sb < 3
water	41:12	0:0	6	sbr
op	41:15	0:0	6	->
water	41:17	0:0	6	f_master
op	41:25	0:0	6	[
water	41:26	0:0	6	k
op	41:27	0:0	6	]
op	41:29	0:0	6	-
water	41:31	0:0	6	sb
op	41:34	0:0	6	<
water	41:36	0:0	6	3
stmts	42:12	42:29	5	
water	42:12	0:0	6	k
op	42:14	0:0	6	=
water	42:16	0:0	6	sbr
op	42:19	0:0	6	->
water	42:21	0:0	6	n_master
water	42:29	0:0	6	;
water	43:4	0:0	4	}
water	43:42	0:0	2	;
if	44:4	46:26	2	(sbr -> num_patches > 1 && sbr -> patch_num_subbands [ sbr -> num_patches - 1 ] < 3)
cond	44:8	45:56	3	sbr -> num_patches > 1 && sbr -> patch_num_subbands [ sbr -> num_patches - 1 ] < 3
water	44:8	0:0	4	sbr
op	44:11	0:0	4	->
water	44:13	0:0	4	num_patches
op	44:25	0:0	4	>
water	44:27	0:0	4	1
op	44:29	0:0	4	&&
water	45:8	0:0	4	sbr
op	45:11	0:0	4	->
water	45:13	0:0	4	patch_num_subbands
op	45:31	0:0	4	[
water	45:32	0:0	4	sbr
op	45:35	0:0	4	->
water	45:37	0:0	4	num_patches
op	45:49	0:0	4	-
water	45:51	0:0	4	1
op	45:52	0:0	4	]
op	45:54	0:0	4	<
water	45:56	0:0	4	3
stmts	46:8	46:26	3	
water	46:8	0:0	4	sbr
op	46:11	0:0	4	->
water	46:13	0:0	4	num_patches
op	46:24	0:0	4	--
water	46:26	0:0	4	;
return	47:4	47:12	2	0
water	47:11	0:0	3	0

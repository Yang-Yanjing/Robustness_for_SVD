func	1:0	21:0	0	static int	mov_write_string_metadata
params	1:36	0:0	1	
param	1:37	1:55	2	AVFormatContext *	s
param	1:57	1:72	2	AVIOContext *	pb
param	2:37	2:53	2	const char *	name
param	2:55	2:70	2	const char *	tag
param	3:37	3:51	2	int	long_style
stmnts	0:0	20:69	1	
decl	5:4	5:30	2	int	l
water	5:9	0:0	2	,
decl	5:4	5:30	2	int	lang
op	5:16	0:0	2	=
water	5:18	0:0	2	0
water	5:19	0:0	2	,
decl	5:4	5:30	2	int	len
water	5:24	0:0	2	,
decl	5:4	5:30	2	int	len2
decl	6:4	6:36	2	AVDictionaryEntry	*t
water	6:24	0:0	2	,
decl	6:4	6:36	2	AVDictionaryEntry	*t2
op	6:30	0:0	2	=
water	6:32	0:0	2	NULL
decl	7:4	7:17	2	char	tag2[16]
if	8:4	9:16	2	(! ( t =av_dict_get (s -> metadata ,tag ,NULL ,0 ) ))
cond	8:8	8:52	3	! ( t =av_dict_get (s -> metadata ,tag ,NULL ,0 ) )
op	8:8	0:0	4	!
water	8:9	0:0	4	(
water	8:10	0:0	4	t
op	8:12	0:0	4	=
call	8:14	8:51	4	av_dict_get
arg	8:26	8:37	5	s->metadata
water	8:26	0:0	6	s
op	8:27	0:0	6	->
water	8:29	0:0	6	metadata
arg	8:39	8:42	5	tag
water	8:39	0:0	6	tag
arg	8:44	8:48	5	NULL
water	8:44	0:0	6	NULL
arg	8:50	8:51	5	0
water	8:50	0:0	6	0
water	8:52	0:0	4	)
stmts	9:8	9:16	3	
return	9:8	9:16	4	0
water	9:15	0:0	5	0
water	10:4	0:0	2	len
op	10:8	0:0	2	=
call	10:10	10:23	2	strlen
arg	10:17	10:23	3	t->key
water	10:17	0:0	4	t
op	10:18	0:0	4	->
water	10:20	0:0	4	key
water	10:24	0:0	2	;
call	11:4	11:43	2	snprintf
arg	11:13	11:17	3	tag2
water	11:13	0:0	4	tag2
arg	11:19	11:31	3	sizeof(tag2)
op	11:19	0:0	4	sizeof
water	11:25	0:0	4	(
water	11:26	0:0	4	tag2
water	11:30	0:0	4	)
arg	11:33	11:38	3	"%s-"
water	11:33	0:0	4	"%s-"
arg	11:40	11:43	3	tag
water	11:40	0:0	4	tag
water	11:44	0:0	2	;
while	12:4	19:4	2	(( t2 =av_dict_get (s -> metadata ,tag2 ,t2 ,AV_DICT_IGNORE_SUFFIX ) ))
cond	12:11	12:74	3	( t2 =av_dict_get (s -> metadata ,tag2 ,t2 ,AV_DICT_IGNORE_SUFFIX ) )
water	12:11	0:0	4	(
water	12:12	0:0	4	t2
op	12:15	0:0	4	=
call	12:17	12:73	4	av_dict_get
arg	12:29	12:40	5	s->metadata
water	12:29	0:0	6	s
op	12:30	0:0	6	->
water	12:32	0:0	6	metadata
arg	12:42	12:46	5	tag2
water	12:42	0:0	6	tag2
arg	12:48	12:50	5	t2
water	12:48	0:0	6	t2
arg	12:52	12:73	5	AV_DICT_IGNORE_SUFFIX
water	12:52	0:0	6	AV_DICT_IGNORE_SUFFIX
water	12:74	0:0	4	)
stmts	12:77	19:4	3	
water	12:77	0:0	4	{
water	13:8	0:0	4	len2
op	13:13	0:0	4	=
call	13:15	13:29	4	strlen
arg	13:22	13:29	5	t2->key
water	13:22	0:0	6	t2
op	13:24	0:0	6	->
water	13:26	0:0	6	key
water	13:30	0:0	4	;
if	14:8	18:8	4	(len2 == len + 4 && !strcmp (t -> value ,t2 -> value ) && ( l =ff_mov_iso639_to_lang (& t2 -> key [ len2 - 3 ] ,1 ) ) >= 0)
cond	14:12	15:69	5	len2 == len + 4 && !strcmp (t -> value ,t2 -> value ) && ( l =ff_mov_iso639_to_lang (& t2 -> key [ len2 - 3 ] ,1 ) ) >= 0
water	14:12	0:0	6	len2
op	14:17	0:0	6	==
water	14:20	0:0	6	len
op	14:24	0:0	6	+
water	14:26	0:0	6	4
op	14:28	0:0	6	&&
op	14:31	0:0	6	!
call	14:32	14:58	6	strcmp
arg	14:39	14:47	7	t->value
water	14:39	0:0	8	t
op	14:40	0:0	8	->
water	14:42	0:0	8	value
arg	14:49	14:58	7	t2->value
water	14:49	0:0	8	t2
op	14:51	0:0	8	->
water	14:53	0:0	8	value
op	15:12	0:0	6	&&
water	15:15	0:0	6	(
water	15:16	0:0	6	l
op	15:18	0:0	6	=
call	15:20	15:63	6	ff_mov_iso639_to_lang
arg	15:42	15:60	7	&t2->key[len2-3]
op	15:42	0:0	8	&
water	15:43	0:0	8	t2
op	15:45	0:0	8	->
water	15:47	0:0	8	key
op	15:50	0:0	8	[
water	15:51	0:0	8	len2
op	15:56	0:0	8	-
water	15:58	0:0	8	3
op	15:59	0:0	8	]
arg	15:62	15:63	7	1
water	15:62	0:0	8	1
water	15:64	0:0	6	)
op	15:66	0:0	6	>=
water	15:69	0:0	6	0
stmts	15:72	18:8	5	
water	15:72	0:0	6	{
water	16:12	0:0	6	lang
op	16:17	0:0	6	=
water	16:19	0:0	6	l
water	16:20	0:0	6	;
break	17:12	17:17	6	
water	18:8	0:0	6	}
water	19:4	0:0	4	}
return	20:4	20:69	2	mov_write_string_tag(pb,name,t->value,lang,long_style)
call	20:11	20:68	3	mov_write_string_tag
arg	20:32	20:34	4	pb
water	20:32	0:0	5	pb
arg	20:36	20:40	4	name
water	20:36	0:0	5	name
arg	20:42	20:50	4	t->value
water	20:42	0:0	5	t
op	20:43	0:0	5	->
water	20:45	0:0	5	value
arg	20:52	20:56	4	lang
water	20:52	0:0	5	lang
arg	20:58	20:68	4	long_style
water	20:58	0:0	5	long_style

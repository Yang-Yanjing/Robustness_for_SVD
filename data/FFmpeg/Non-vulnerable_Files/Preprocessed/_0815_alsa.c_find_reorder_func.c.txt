func	1:15	34:0	0	int	find_reorder_func
params	1:36	0:0	1	
param	1:37	1:48	2	AlsaData *	s
param	1:50	1:62	2	int	codec_id
param	1:64	1:79	2	uint64_t	layout
param	1:81	1:88	2	int	out
stmnts	0:0	33:48	1	
decl	3:4	3:14	2	int	format
if	5:4	6:30	2	(! out)
cond	5:8	5:9	3	! out
op	5:8	0:0	4	!
water	5:9	0:0	4	out
stmts	6:8	6:30	3	
return	6:8	6:30	4	AVERROR(ENOSYS)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	ENOSYS
water	6:23	0:0	7	ENOSYS
if	8:4	9:16	2	(layout == AV_CH_LAYOUT_QUAD || layout == AV_CH_LAYOUT_2_2)
cond	8:8	8:49	3	layout == AV_CH_LAYOUT_QUAD || layout == AV_CH_LAYOUT_2_2
water	8:8	0:0	4	layout
op	8:15	0:0	4	==
water	8:18	0:0	4	AV_CH_LAYOUT_QUAD
op	8:36	0:0	4	||
water	8:39	0:0	4	layout
op	8:46	0:0	4	==
water	8:49	0:0	4	AV_CH_LAYOUT_2_2
stmts	9:8	9:16	3	
return	9:8	9:16	4	0
water	9:15	0:0	5	0
switch	10:4	26:4	2	(codec_id)
cond	10:12	10:12	3	codec_id
water	10:12	0:0	4	codec_id
stmts	10:22	26:4	3	
water	10:22	0:0	4	{
label	11:4	11:27	4	case AV_CODEC_ID_PCM_S8 :
label	12:4	12:27	4	case AV_CODEC_ID_PCM_U8 :
label	13:4	13:29	4	case AV_CODEC_ID_PCM_ALAW :
label	14:4	14:30	4	case AV_CODEC_ID_PCM_MULAW :
water	14:32	0:0	4	format
op	14:39	0:0	4	=
water	14:41	0:0	4	FORMAT_I8
water	14:50	0:0	4	;
break	14:53	14:58	4	
label	15:4	15:30	4	case AV_CODEC_ID_PCM_S16LE :
label	16:4	16:30	4	case AV_CODEC_ID_PCM_S16BE :
label	17:4	17:30	4	case AV_CODEC_ID_PCM_U16LE :
label	18:4	18:30	4	case AV_CODEC_ID_PCM_U16BE :
water	18:32	0:0	4	format
op	18:39	0:0	4	=
water	18:41	0:0	4	FORMAT_I16
water	18:51	0:0	4	;
break	18:53	18:58	4	
label	19:4	19:30	4	case AV_CODEC_ID_PCM_S32LE :
label	20:4	20:30	4	case AV_CODEC_ID_PCM_S32BE :
label	21:4	21:30	4	case AV_CODEC_ID_PCM_U32LE :
label	22:4	22:30	4	case AV_CODEC_ID_PCM_U32BE :
water	22:32	0:0	4	format
op	22:39	0:0	4	=
water	22:41	0:0	4	FORMAT_I32
water	22:51	0:0	4	;
break	22:53	22:58	4	
label	23:4	23:30	4	case AV_CODEC_ID_PCM_F32LE :
label	24:4	24:30	4	case AV_CODEC_ID_PCM_F32BE :
water	24:32	0:0	4	format
op	24:39	0:0	4	=
water	24:41	0:0	4	FORMAT_F32
water	24:51	0:0	4	;
break	24:53	24:58	4	
label	25:4	25:11	4	default :
return	25:29	25:51	4	AVERROR(ENOSYS)
call	25:36	25:50	5	AVERROR
arg	25:44	25:50	6	ENOSYS
water	25:44	0:0	7	ENOSYS
water	26:4	0:0	4	}
if	27:4	33:48	2	(layout == AV_CH_LAYOUT_5POINT0_BACK || layout == AV_CH_LAYOUT_5POINT0)
cond	27:13	27:62	3	layout == AV_CH_LAYOUT_5POINT0_BACK || layout == AV_CH_LAYOUT_5POINT0
water	27:13	0:0	4	layout
op	27:20	0:0	4	==
water	27:23	0:0	4	AV_CH_LAYOUT_5POINT0_BACK
op	27:49	0:0	4	||
water	27:52	0:0	4	layout
op	27:59	0:0	4	==
water	27:62	0:0	4	AV_CH_LAYOUT_5POINT0
stmts	28:8	33:48	3	
call	28:8	28:23	4	PICK_REORDER
arg	28:21	28:23	5	50
water	28:21	0:0	6	50
water	29:4	0:0	4	else
water	29:9	0:0	4	if
water	29:12	0:0	4	(
water	29:13	0:0	4	layout
op	29:20	0:0	4	==
water	29:23	0:0	4	AV_CH_LAYOUT_5POINT1_BACK
op	29:49	0:0	4	||
water	29:52	0:0	4	layout
op	29:59	0:0	4	==
water	29:62	0:0	4	AV_CH_LAYOUT_5POINT1
water	29:82	0:0	4	)
call	30:8	30:23	4	PICK_REORDER
arg	30:21	30:23	5	51
water	30:21	0:0	6	51
water	31:4	0:0	4	else
water	31:9	0:0	4	if
water	31:12	0:0	4	(
water	31:13	0:0	4	layout
op	31:20	0:0	4	==
water	31:23	0:0	4	AV_CH_LAYOUT_7POINT1
water	31:43	0:0	4	)
call	32:8	32:23	4	PICK_REORDER
arg	32:21	32:23	5	71
water	32:21	0:0	6	71
water	33:4	0:0	4	return
water	33:11	0:0	4	s
op	33:12	0:0	4	->
water	33:14	0:0	4	reorder_func
water	33:27	0:0	4	?
water	33:29	0:0	4	0
water	33:31	0:0	4	:
call	33:33	33:47	4	AVERROR
arg	33:41	33:47	5	ENOSYS
water	33:41	0:0	6	ENOSYS
water	33:48	0:0	4	;

func	1:0	32:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:13	2	void
stmnts	0:0	31:12	1	
decl	3:4	3:36	2	AVCodec	*enc
op	3:17	0:0	2	=
water	3:19	0:0	2	NULL
water	3:23	0:0	2	,
decl	3:4	3:36	2	AVCodec	*dec
op	3:30	0:0	2	=
water	3:32	0:0	2	NULL
decl	4:4	4:51	2	AVCodecContext	*enc_ctx
op	4:28	0:0	2	=
water	4:30	0:0	2	NULL
water	4:34	0:0	2	,
decl	4:4	4:51	2	AVCodecContext	*dec_ctx
op	4:45	0:0	2	=
water	4:47	0:0	2	NULL
decl	5:4	5:133	2	uint64_t	channel_layouts[]
op	5:31	0:0	2	=
water	5:33	0:0	2	{
water	5:34	0:0	2	AV_CH_LAYOUT_STEREO
water	5:53	0:0	2	,
water	5:55	0:0	2	AV_CH_LAYOUT_5POINT1_BACK
water	5:80	0:0	2	,
water	5:82	0:0	2	AV_CH_LAYOUT_SURROUND
water	5:103	0:0	2	,
water	5:105	0:0	2	AV_CH_LAYOUT_STEREO_DOWNMIX
water	5:132	0:0	2	}
decl	6:4	6:53	2	int	sample_rates[]
op	6:23	0:0	2	=
water	6:25	0:0	2	{
water	6:26	0:0	2	8000
water	6:30	0:0	2	,
water	6:32	0:0	2	44100
water	6:37	0:0	2	,
water	6:39	0:0	2	48000
water	6:44	0:0	2	,
water	6:46	0:0	2	192000
water	6:52	0:0	2	}
decl	7:4	7:14	2	int	cl
water	7:10	0:0	2	,
decl	7:4	7:14	2	int	sr
call	8:4	8:25	2	avcodec_register_all
water	8:26	0:0	2	;
water	9:4	0:0	2	enc
op	9:8	0:0	2	=
call	9:10	9:47	2	avcodec_find_encoder
arg	9:31	9:47	3	AV_CODEC_ID_FLAC
water	9:31	0:0	4	AV_CODEC_ID_FLAC
water	9:48	0:0	2	;
if	10:4	13:4	2	(! enc)
cond	10:8	10:9	3	! enc
op	10:8	0:0	4	!
water	10:9	0:0	4	enc
stmts	10:14	13:4	3	
water	10:14	0:0	4	{
call	11:8	11:57	4	av_log
arg	11:15	11:19	5	NULL
water	11:15	0:0	6	NULL
arg	11:21	11:33	5	AV_LOG_ERROR
water	11:21	0:0	6	AV_LOG_ERROR
arg	11:35	11:57	5	"Can't find encoder\n"
water	11:35	0:0	6	"Can't find encoder\n"
water	11:58	0:0	4	;
return	12:8	12:16	4	1
water	12:15	0:0	5	1
water	13:4	0:0	4	}
water	14:4	0:0	2	dec
op	14:8	0:0	2	=
call	14:10	14:47	2	avcodec_find_decoder
arg	14:31	14:47	3	AV_CODEC_ID_FLAC
water	14:31	0:0	4	AV_CODEC_ID_FLAC
water	14:48	0:0	2	;
if	15:4	18:4	2	(! dec)
cond	15:8	15:9	3	! dec
op	15:8	0:0	4	!
water	15:9	0:0	4	dec
stmts	15:14	18:4	3	
water	15:14	0:0	4	{
call	16:8	16:57	4	av_log
arg	16:15	16:19	5	NULL
water	16:15	0:0	6	NULL
arg	16:21	16:33	5	AV_LOG_ERROR
water	16:21	0:0	6	AV_LOG_ERROR
arg	16:35	16:57	5	"Can't find decoder\n"
water	16:35	0:0	6	"Can't find decoder\n"
water	16:58	0:0	4	;
return	17:8	17:16	4	1
water	17:15	0:0	5	1
water	18:4	0:0	4	}
for	19:4	30:4	2	(cl = 0 ;cl <FF_ARRAY_ELEMS (channel_layouts );cl ++)
forinit	19:9	19:15	3	cl = 0 ;
water	19:9	0:0	4	cl
op	19:12	0:0	4	=
water	19:14	0:0	4	0
water	19:15	0:0	4	;
cond	19:17	19:52	3	cl <FF_ARRAY_ELEMS (channel_layouts )
water	19:17	0:0	4	cl
op	19:20	0:0	4	<
call	19:22	19:52	4	FF_ARRAY_ELEMS
arg	19:37	19:52	5	channel_layouts
water	19:37	0:0	6	channel_layouts
forexpr	19:55	19:57	3	cl ++
water	19:55	0:0	4	cl
op	19:57	0:0	4	++
stmts	19:61	30:4	3	
water	19:61	0:0	4	{
for	20:8	29:8	4	(sr = 0 ;sr <FF_ARRAY_ELEMS (sample_rates );sr ++)
forinit	20:13	20:19	5	sr = 0 ;
water	20:13	0:0	6	sr
op	20:16	0:0	6	=
water	20:18	0:0	6	0
water	20:19	0:0	6	;
cond	20:21	20:53	5	sr <FF_ARRAY_ELEMS (sample_rates )
water	20:21	0:0	6	sr
op	20:24	0:0	6	<
call	20:26	20:53	6	FF_ARRAY_ELEMS
arg	20:41	20:53	7	sample_rates
water	20:41	0:0	8	sample_rates
forexpr	20:56	20:58	5	sr ++
water	20:56	0:0	6	sr
op	20:58	0:0	6	++
stmts	20:62	29:8	5	
water	20:62	0:0	6	{
if	21:12	22:24	6	(init_encoder (enc ,& enc_ctx ,channel_layouts [ cl ] ,sample_rates [ sr ] ) != 0)
cond	21:16	21:86	7	init_encoder (enc ,& enc_ctx ,channel_layouts [ cl ] ,sample_rates [ sr ] ) != 0
call	21:16	21:81	8	init_encoder
arg	21:29	21:32	9	enc
water	21:29	0:0	10	enc
arg	21:34	21:42	9	&enc_ctx
op	21:34	0:0	10	&
water	21:35	0:0	10	enc_ctx
arg	21:44	21:63	9	channel_layouts[cl]
water	21:44	0:0	10	channel_layouts
op	21:59	0:0	10	[
water	21:60	0:0	10	cl
op	21:62	0:0	10	]
arg	21:65	21:81	9	sample_rates[sr]
water	21:65	0:0	10	sample_rates
op	21:77	0:0	10	[
water	21:78	0:0	10	sr
op	21:80	0:0	10	]
op	21:83	0:0	8	!=
water	21:86	0:0	8	0
stmts	22:16	22:24	7	
return	22:16	22:24	8	1
water	22:23	0:0	9	1
if	23:12	24:24	6	(init_decoder (dec ,& dec_ctx ,channel_layouts [ cl ] ) != 0)
cond	23:16	23:68	7	init_decoder (dec ,& dec_ctx ,channel_layouts [ cl ] ) != 0
call	23:16	23:63	8	init_decoder
arg	23:29	23:32	9	dec
water	23:29	0:0	10	dec
arg	23:34	23:42	9	&dec_ctx
op	23:34	0:0	10	&
water	23:35	0:0	10	dec_ctx
arg	23:44	23:63	9	channel_layouts[cl]
water	23:44	0:0	10	channel_layouts
op	23:59	0:0	10	[
water	23:60	0:0	10	cl
op	23:62	0:0	10	]
op	23:65	0:0	8	!=
water	23:68	0:0	8	0
stmts	24:16	24:24	7	
return	24:16	24:24	8	1
water	24:23	0:0	9	1
if	25:12	26:24	6	(run_test (enc ,dec ,enc_ctx ,dec_ctx ) != 0)
cond	25:16	25:56	7	run_test (enc ,dec ,enc_ctx ,dec_ctx ) != 0
call	25:16	25:51	8	run_test
arg	25:25	25:28	9	enc
water	25:25	0:0	10	enc
arg	25:30	25:33	9	dec
water	25:30	0:0	10	dec
arg	25:35	25:42	9	enc_ctx
water	25:35	0:0	10	enc_ctx
arg	25:44	25:51	9	dec_ctx
water	25:44	0:0	10	dec_ctx
op	25:53	0:0	8	!=
water	25:56	0:0	8	0
stmts	26:16	26:24	7	
return	26:16	26:24	8	1
water	26:23	0:0	9	1
call	27:12	27:34	6	close_encoder
arg	27:26	27:34	7	&enc_ctx
op	27:26	0:0	8	&
water	27:27	0:0	8	enc_ctx
water	27:35	0:0	6	;
call	28:12	28:34	6	close_decoder
arg	28:26	28:34	7	&dec_ctx
op	28:26	0:0	8	&
water	28:27	0:0	8	dec_ctx
water	28:35	0:0	6	;
water	29:8	0:0	6	}
water	30:4	0:0	4	}
return	31:4	31:12	2	0
water	31:11	0:0	3	0

func	1:0	24:0	0	static int	matroska_deliver_packet
params	1:34	0:0	1	
param	1:35	1:65	2	MatroskaDemuxContext *	matroska
param	2:35	2:48	2	AVPacket *	pkt
stmnts	4:4	23:13	1	
if	4:4	22:4	2	(matroska -> num_packets > 0)
cond	4:8	4:32	3	matroska -> num_packets > 0
water	4:8	0:0	4	matroska
op	4:16	0:0	4	->
water	4:18	0:0	4	num_packets
op	4:30	0:0	4	>
water	4:32	0:0	4	0
stmts	4:35	22:4	3	
water	4:35	0:0	4	{
call	5:8	5:58	4	memcpy
arg	5:15	5:18	5	pkt
water	5:15	0:0	6	pkt
arg	5:20	5:40	5	matroska->packets[0]
water	5:20	0:0	6	matroska
op	5:28	0:0	6	->
water	5:30	0:0	6	packets
op	5:37	0:0	6	[
water	5:38	0:0	6	0
op	5:39	0:0	6	]
arg	5:42	5:58	5	sizeof(AVPacket)
op	5:42	0:0	6	sizeof
water	5:48	0:0	6	(
water	5:49	0:0	6	AVPacket
water	5:57	0:0	6	)
water	5:59	0:0	4	;
call	6:8	6:38	4	av_freep
arg	6:17	6:38	5	&matroska->packets[0]
op	6:17	0:0	6	&
water	6:18	0:0	6	matroska
op	6:26	0:0	6	->
water	6:28	0:0	6	packets
op	6:35	0:0	6	[
water	6:36	0:0	6	0
op	6:37	0:0	6	]
water	6:39	0:0	4	;
if	7:8	16:8	4	(matroska -> num_packets > 1)
cond	7:12	7:36	5	matroska -> num_packets > 1
water	7:12	0:0	6	matroska
op	7:20	0:0	6	->
water	7:22	0:0	6	num_packets
op	7:34	0:0	6	>
water	7:36	0:0	6	1
stmts	7:39	16:8	5	
water	7:39	0:0	6	{
decl	8:12	8:28	6	void	*newpackets
call	9:12	10:68	6	memmove
arg	9:20	9:41	7	&matroska->packets[0]
op	9:20	0:0	8	&
water	9:21	0:0	8	matroska
op	9:29	0:0	8	->
water	9:31	0:0	8	packets
op	9:38	0:0	8	[
water	9:39	0:0	8	0
op	9:40	0:0	8	]
arg	9:43	9:64	7	&matroska->packets[1]
op	9:43	0:0	8	&
water	9:44	0:0	8	matroska
op	9:52	0:0	8	->
water	9:54	0:0	8	packets
op	9:61	0:0	8	[
water	9:62	0:0	8	1
op	9:63	0:0	8	]
arg	10:20	10:68	7	(matroska->num_packets-1)*sizeof(AVPacket*)
water	10:20	0:0	8	(
water	10:21	0:0	8	matroska
op	10:29	0:0	8	->
water	10:31	0:0	8	num_packets
op	10:43	0:0	8	-
water	10:45	0:0	8	1
water	10:46	0:0	8	)
op	10:48	0:0	8	*
op	10:50	0:0	8	sizeof
water	10:56	0:0	8	(
water	10:57	0:0	8	AVPacket
op	10:66	0:0	8	*
water	10:67	0:0	8	)
water	10:69	0:0	6	;
water	11:12	0:0	6	newpackets
op	11:23	0:0	6	=
call	11:25	13:54	6	av_realloc
arg	11:36	11:53	7	matroska->packets
water	11:36	0:0	8	matroska
op	11:44	0:0	8	->
water	11:46	0:0	8	packets
arg	12:36	13:54	7	(matroska->num_packets-1)*sizeof(AVPacket*)
water	12:36	0:0	8	(
water	12:37	0:0	8	matroska
op	12:45	0:0	8	->
water	12:47	0:0	8	num_packets
op	12:59	0:0	8	-
water	12:61	0:0	8	1
water	12:62	0:0	8	)
op	12:64	0:0	8	*
op	13:36	0:0	8	sizeof
water	13:42	0:0	8	(
water	13:43	0:0	8	AVPacket
op	13:52	0:0	8	*
water	13:53	0:0	8	)
water	13:55	0:0	6	;
if	14:12	15:46	6	(newpackets)
cond	14:16	14:16	7	newpackets
water	14:16	0:0	8	newpackets
stmts	15:16	15:46	7	
water	15:16	0:0	8	matroska
op	15:24	0:0	8	->
water	15:26	0:0	8	packets
op	15:34	0:0	8	=
water	15:36	0:0	8	newpackets
water	15:46	0:0	8	;
water	16:8	0:0	6	}
else	16:10	19:8	4
stmts	16:15	19:8	5	
water	16:15	0:0	6	{
call	17:12	17:39	6	av_freep
arg	17:21	17:39	7	&matroska->packets
op	17:21	0:0	8	&
water	17:22	0:0	8	matroska
op	17:30	0:0	8	->
water	17:32	0:0	8	packets
water	17:40	0:0	6	;
water	18:12	0:0	6	matroska
op	18:20	0:0	6	->
water	18:22	0:0	6	prev_pkt
op	18:31	0:0	6	=
water	18:33	0:0	6	NULL
water	18:37	0:0	6	;
water	19:8	0:0	6	}
water	20:8	0:0	4	matroska
op	20:16	0:0	4	->
water	20:18	0:0	4	num_packets
op	20:29	0:0	4	--
water	20:31	0:0	4	;
return	21:8	21:16	4	0
water	21:15	0:0	5	0
water	22:4	0:0	4	}
return	23:4	23:13	2	-1
op	23:11	0:0	3	-
water	23:12	0:0	3	1

func	1:0	14:0	0	int	av_audio_fifo_drain
params	1:23	0:0	1	
param	1:24	1:39	2	AVAudioFifo *	af
param	1:41	1:55	2	int	nb_samples
stmnts	0:0	13:12	1	
decl	3:4	3:15	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:15	2	int	size
if	4:4	5:30	2	(nb_samples < 0)
cond	4:8	4:21	3	nb_samples < 0
water	4:8	0:0	4	nb_samples
op	4:19	0:0	4	<
water	4:21	0:0	4	0
stmts	5:8	5:30	3	
return	5:8	5:30	4	AVERROR(EINVAL)
call	5:15	5:29	5	AVERROR
arg	5:23	5:29	6	EINVAL
water	5:23	0:0	7	EINVAL
water	6:4	0:0	2	nb_samples
op	6:15	0:0	2	=
call	6:17	6:49	2	FFMIN
arg	6:23	6:33	3	nb_samples
water	6:23	0:0	4	nb_samples
arg	6:35	6:49	3	af->nb_samples
water	6:35	0:0	4	af
op	6:37	0:0	4	->
water	6:39	0:0	4	nb_samples
water	6:50	0:0	2	;
if	7:4	12:4	2	(nb_samples)
cond	7:8	7:8	3	nb_samples
water	7:8	0:0	4	nb_samples
stmts	7:20	12:4	3	
water	7:20	0:0	4	{
water	8:8	0:0	4	size
op	8:13	0:0	4	=
water	8:15	0:0	4	nb_samples
op	8:26	0:0	4	*
water	8:28	0:0	4	af
op	8:30	0:0	4	->
water	8:32	0:0	4	sample_size
water	8:43	0:0	4	;
for	9:8	10:43	4	(i = 0 ;i < af -> nb_buffers;i ++)
forinit	9:13	9:18	5	i = 0 ;
water	9:13	0:0	6	i
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:28	5	i < af -> nb_buffers
water	9:20	0:0	6	i
op	9:22	0:0	6	<
water	9:24	0:0	6	af
op	9:26	0:0	6	->
water	9:28	0:0	6	nb_buffers
forexpr	9:40	9:41	5	i ++
water	9:40	0:0	6	i
op	9:41	0:0	6	++
stmts	10:12	10:43	5	
call	10:12	10:42	6	av_fifo_drain
arg	10:26	10:36	7	af->buf[i]
water	10:26	0:0	8	af
op	10:28	0:0	8	->
water	10:30	0:0	8	buf
op	10:33	0:0	8	[
water	10:34	0:0	8	i
op	10:35	0:0	8	]
arg	10:38	10:42	7	size
water	10:38	0:0	8	size
water	10:43	0:0	6	;
water	11:8	0:0	4	af
op	11:10	0:0	4	->
water	11:12	0:0	4	nb_samples
op	11:23	0:0	4	-=
water	11:26	0:0	4	nb_samples
water	11:36	0:0	4	;
water	12:4	0:0	4	}
return	13:4	13:12	2	0
water	13:11	0:0	3	0

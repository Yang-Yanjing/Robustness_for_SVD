func	1:0	90:0	0	ResampleContext *	ff_audio_resample_init
params	1:39	0:0	1	
param	1:40	1:67	2	AVAudioResampleContext *	avr
stmnts	0:0	89:15	1	
decl	3:4	3:22	2	ResampleContext	*c
decl	4:4	4:42	2	int	out_rate
op	4:20	0:0	2	=
water	4:22	0:0	2	avr
op	4:25	0:0	2	->
water	4:27	0:0	2	out_sample_rate
decl	5:4	5:41	2	int	in_rate
op	5:20	0:0	2	=
water	5:22	0:0	2	avr
op	5:25	0:0	2	->
water	5:27	0:0	2	in_sample_rate
decl	6:4	6:66	2	double	factor
op	6:20	0:0	2	=
call	6:22	6:65	3	FFMIN
arg	6:28	6:60	4	out_rate*avr->cutoff/in_rate
water	6:28	0:0	5	out_rate
op	6:37	0:0	5	*
water	6:39	0:0	5	avr
op	6:42	0:0	5	->
water	6:44	0:0	5	cutoff
op	6:51	0:0	5	/
water	6:53	0:0	5	in_rate
arg	6:62	6:65	4	1.0
water	6:62	0:0	5	1
op	6:63	0:0	5	.
water	6:64	0:0	5	0
decl	7:4	7:43	2	int	phase_count
op	7:20	0:0	2	=
water	7:22	0:0	2	1
op	7:24	0:0	2	<<
water	7:27	0:0	2	avr
op	7:30	0:0	2	->
water	7:32	0:0	2	phase_shift
decl	8:4	8:18	2	int	felem_size
if	9:4	17:4	2	(avr -> internal_sample_fmt != AV_SAMPLE_FMT_S16P && avr -> internal_sample_fmt != AV_SAMPLE_FMT_S32P && avr -> internal_sample_fmt != AV_SAMPLE_FMT_FLTP && avr -> internal_sample_fmt != AV_SAMPLE_FMT_DBLP)
cond	9:8	12:36	3	avr -> internal_sample_fmt != AV_SAMPLE_FMT_S16P && avr -> internal_sample_fmt != AV_SAMPLE_FMT_S32P && avr -> internal_sample_fmt != AV_SAMPLE_FMT_FLTP && avr -> internal_sample_fmt != AV_SAMPLE_FMT_DBLP
water	9:8	0:0	4	avr
op	9:11	0:0	4	->
water	9:13	0:0	4	internal_sample_fmt
op	9:33	0:0	4	!=
water	9:36	0:0	4	AV_SAMPLE_FMT_S16P
op	9:55	0:0	4	&&
water	10:8	0:0	4	avr
op	10:11	0:0	4	->
water	10:13	0:0	4	internal_sample_fmt
op	10:33	0:0	4	!=
water	10:36	0:0	4	AV_SAMPLE_FMT_S32P
op	10:55	0:0	4	&&
water	11:8	0:0	4	avr
op	11:11	0:0	4	->
water	11:13	0:0	4	internal_sample_fmt
op	11:33	0:0	4	!=
water	11:36	0:0	4	AV_SAMPLE_FMT_FLTP
op	11:55	0:0	4	&&
water	12:8	0:0	4	avr
op	12:11	0:0	4	->
water	12:13	0:0	4	internal_sample_fmt
op	12:33	0:0	4	!=
water	12:36	0:0	4	AV_SAMPLE_FMT_DBLP
stmts	12:56	17:4	3	
water	12:56	0:0	4	{
call	13:8	15:63	4	av_log
arg	13:15	13:18	5	avr
water	13:15	0:0	6	avr
arg	13:20	13:32	5	AV_LOG_ERROR
water	13:20	0:0	6	AV_LOG_ERROR
arg	13:34	14:33	5	"Unsupported internal format for ""resampling: %s\n"
water	13:34	0:0	6	"Unsupported internal format for "
water	14:15	0:0	6	"resampling: %s\n"
arg	15:15	15:63	5	av_get_sample_fmt_name(avr->internal_sample_fmt)
call	15:15	15:62	6	av_get_sample_fmt_name
arg	15:38	15:62	7	avr->internal_sample_fmt
water	15:38	0:0	8	avr
op	15:41	0:0	8	->
water	15:43	0:0	8	internal_sample_fmt
water	15:64	0:0	4	;
return	16:8	16:19	4	NULL
water	16:15	0:0	5	NULL
water	17:4	0:0	4	}
water	18:4	0:0	2	c
op	18:6	0:0	2	=
call	18:8	18:29	2	av_mallocz
arg	18:19	18:29	3	sizeof(*c)
op	18:19	0:0	4	sizeof
water	18:25	0:0	4	(
op	18:26	0:0	4	*
water	18:27	0:0	4	c
water	18:28	0:0	4	)
water	18:30	0:0	2	;
if	19:4	20:19	2	(! c)
cond	19:8	19:9	3	! c
op	19:8	0:0	4	!
water	19:9	0:0	4	c
stmts	20:8	20:19	3	
return	20:8	20:19	4	NULL
water	20:15	0:0	5	NULL
water	21:4	0:0	2	c
op	21:5	0:0	2	->
water	21:7	0:0	2	avr
op	21:21	0:0	2	=
water	21:23	0:0	2	avr
water	21:26	0:0	2	;
water	22:4	0:0	2	c
op	22:5	0:0	2	->
water	22:7	0:0	2	phase_shift
op	22:21	0:0	2	=
water	22:23	0:0	2	avr
op	22:26	0:0	2	->
water	22:28	0:0	2	phase_shift
water	22:39	0:0	2	;
water	23:4	0:0	2	c
op	23:5	0:0	2	->
water	23:7	0:0	2	phase_mask
op	23:21	0:0	2	=
water	23:23	0:0	2	phase_count
op	23:35	0:0	2	-
water	23:37	0:0	2	1
water	23:38	0:0	2	;
water	24:4	0:0	2	c
op	24:5	0:0	2	->
water	24:7	0:0	2	linear
op	24:21	0:0	2	=
water	24:23	0:0	2	avr
op	24:26	0:0	2	->
water	24:28	0:0	2	linear_interp
water	24:41	0:0	2	;
water	25:4	0:0	2	c
op	25:5	0:0	2	->
water	25:7	0:0	2	filter_length
op	25:21	0:0	2	=
call	25:23	25:68	2	FFMAX
arg	25:29	25:65	3	(int)ceil(avr->filter_size/factor)
water	25:29	0:0	4	(
water	25:30	0:0	4	int
water	25:33	0:0	4	)
call	25:34	25:64	4	ceil
arg	25:39	25:64	5	avr->filter_size/factor
water	25:39	0:0	6	avr
op	25:42	0:0	6	->
water	25:44	0:0	6	filter_size
op	25:56	0:0	6	/
water	25:58	0:0	6	factor
arg	25:67	25:68	3	1
water	25:67	0:0	4	1
water	25:69	0:0	2	;
water	26:4	0:0	2	c
op	26:5	0:0	2	->
water	26:7	0:0	2	filter_type
op	26:21	0:0	2	=
water	26:23	0:0	2	avr
op	26:26	0:0	2	->
water	26:28	0:0	2	filter_type
water	26:39	0:0	2	;
water	27:4	0:0	2	c
op	27:5	0:0	2	->
water	27:7	0:0	2	kaiser_beta
op	27:21	0:0	2	=
water	27:23	0:0	2	avr
op	27:26	0:0	2	->
water	27:28	0:0	2	kaiser_beta
water	27:39	0:0	2	;
switch	28:4	49:4	2	(avr -> internal_sample_fmt)
cond	28:12	28:17	3	avr -> internal_sample_fmt
water	28:12	0:0	4	avr
op	28:15	0:0	4	->
water	28:17	0:0	4	internal_sample_fmt
stmts	28:38	49:4	3	
water	28:38	0:0	4	{
label	29:4	29:27	4	case AV_SAMPLE_FMT_DBLP :
water	30:8	0:0	4	c
op	30:9	0:0	4	->
water	30:11	0:0	4	resample_one
op	30:25	0:0	4	=
water	30:27	0:0	4	c
op	30:28	0:0	4	->
water	30:30	0:0	4	linear
water	30:37	0:0	4	?
water	30:39	0:0	4	resample_linear_dbl
water	30:59	0:0	4	:
water	30:61	0:0	4	resample_one_dbl
water	30:77	0:0	4	;
water	31:8	0:0	4	c
op	31:9	0:0	4	->
water	31:11	0:0	4	resample_nearest
op	31:28	0:0	4	=
water	31:30	0:0	4	resample_nearest_dbl
water	31:50	0:0	4	;
water	32:8	0:0	4	c
op	32:9	0:0	4	->
water	32:11	0:0	4	set_filter
op	32:25	0:0	4	=
water	32:27	0:0	4	set_filter_dbl
water	32:41	0:0	4	;
break	33:8	33:13	4	
label	34:4	34:27	4	case AV_SAMPLE_FMT_FLTP :
water	35:8	0:0	4	c
op	35:9	0:0	4	->
water	35:11	0:0	4	resample_one
op	35:25	0:0	4	=
water	35:27	0:0	4	c
op	35:28	0:0	4	->
water	35:30	0:0	4	linear
water	35:37	0:0	4	?
water	35:39	0:0	4	resample_linear_flt
water	35:59	0:0	4	:
water	35:61	0:0	4	resample_one_flt
water	35:77	0:0	4	;
water	36:8	0:0	4	c
op	36:9	0:0	4	->
water	36:11	0:0	4	resample_nearest
op	36:28	0:0	4	=
water	36:30	0:0	4	resample_nearest_flt
water	36:50	0:0	4	;
water	37:8	0:0	4	c
op	37:9	0:0	4	->
water	37:11	0:0	4	set_filter
op	37:25	0:0	4	=
water	37:27	0:0	4	set_filter_flt
water	37:41	0:0	4	;
break	38:8	38:13	4	
label	39:4	39:27	4	case AV_SAMPLE_FMT_S32P :
water	40:8	0:0	4	c
op	40:9	0:0	4	->
water	40:11	0:0	4	resample_one
op	40:25	0:0	4	=
water	40:27	0:0	4	c
op	40:28	0:0	4	->
water	40:30	0:0	4	linear
water	40:37	0:0	4	?
water	40:39	0:0	4	resample_linear_s32
water	40:59	0:0	4	:
water	40:61	0:0	4	resample_one_s32
water	40:77	0:0	4	;
water	41:8	0:0	4	c
op	41:9	0:0	4	->
water	41:11	0:0	4	resample_nearest
op	41:28	0:0	4	=
water	41:30	0:0	4	resample_nearest_s32
water	41:50	0:0	4	;
water	42:8	0:0	4	c
op	42:9	0:0	4	->
water	42:11	0:0	4	set_filter
op	42:25	0:0	4	=
water	42:27	0:0	4	set_filter_s32
water	42:41	0:0	4	;
break	43:8	43:13	4	
label	44:4	44:27	4	case AV_SAMPLE_FMT_S16P :
water	45:8	0:0	4	c
op	45:9	0:0	4	->
water	45:11	0:0	4	resample_one
op	45:25	0:0	4	=
water	45:27	0:0	4	c
op	45:28	0:0	4	->
water	45:30	0:0	4	linear
water	45:37	0:0	4	?
water	45:39	0:0	4	resample_linear_s16
water	45:59	0:0	4	:
water	45:61	0:0	4	resample_one_s16
water	45:77	0:0	4	;
water	46:8	0:0	4	c
op	46:9	0:0	4	->
water	46:11	0:0	4	resample_nearest
op	46:28	0:0	4	=
water	46:30	0:0	4	resample_nearest_s16
water	46:50	0:0	4	;
water	47:8	0:0	4	c
op	47:9	0:0	4	->
water	47:11	0:0	4	set_filter
op	47:25	0:0	4	=
water	47:27	0:0	4	set_filter_s16
water	47:41	0:0	4	;
break	48:8	48:13	4	
water	49:4	0:0	4	}
if	50:4	51:67	2	(ARCH_AARCH64)
cond	50:8	50:8	3	ARCH_AARCH64
water	50:8	0:0	4	ARCH_AARCH64
stmts	51:8	51:67	3	
call	51:8	51:66	4	ff_audio_resample_init_aarch64
arg	51:39	51:40	5	c
water	51:39	0:0	6	c
arg	51:42	51:66	5	avr->internal_sample_fmt
water	51:42	0:0	6	avr
op	51:45	0:0	6	->
water	51:47	0:0	6	internal_sample_fmt
water	51:67	0:0	4	;
if	52:4	53:63	2	(ARCH_ARM)
cond	52:8	52:8	3	ARCH_ARM
water	52:8	0:0	4	ARCH_ARM
stmts	53:8	53:63	3	
call	53:8	53:62	4	ff_audio_resample_init_arm
arg	53:35	53:36	5	c
water	53:35	0:0	6	c
arg	53:38	53:62	5	avr->internal_sample_fmt
water	53:38	0:0	6	avr
op	53:41	0:0	6	->
water	53:43	0:0	6	internal_sample_fmt
water	53:63	0:0	4	;
water	54:4	0:0	2	felem_size
op	54:15	0:0	2	=
call	54:17	54:65	2	av_get_bytes_per_sample
arg	54:41	54:65	3	avr->internal_sample_fmt
water	54:41	0:0	4	avr
op	54:44	0:0	4	->
water	54:46	0:0	4	internal_sample_fmt
water	54:66	0:0	2	;
water	55:4	0:0	2	c
op	55:5	0:0	2	->
water	55:7	0:0	2	filter_bank
op	55:19	0:0	2	=
call	55:21	55:81	2	av_mallocz
arg	55:32	55:81	3	c->filter_length*(phase_count+1)*felem_size
water	55:32	0:0	4	c
op	55:33	0:0	4	->
water	55:35	0:0	4	filter_length
op	55:49	0:0	4	*
water	55:51	0:0	4	(
water	55:52	0:0	4	phase_count
op	55:64	0:0	4	+
water	55:66	0:0	4	1
water	55:67	0:0	4	)
op	55:69	0:0	4	*
water	55:71	0:0	4	felem_size
water	55:82	0:0	2	;
if	56:4	57:18	2	(! c -> filter_bank)
cond	56:8	56:12	3	! c -> filter_bank
op	56:8	0:0	4	!
water	56:9	0:0	4	c
op	56:10	0:0	4	->
water	56:12	0:0	4	filter_bank
stmts	57:8	57:18	3	
goto	57:8	57:18	4	error
water	57:13	0:0	5	error
if	58:4	59:18	2	(build_filter (c ,factor ) < 0)
cond	58:8	58:34	3	build_filter (c ,factor ) < 0
call	58:8	58:30	4	build_filter
arg	58:21	58:22	5	c
water	58:21	0:0	6	c
arg	58:24	58:30	5	factor
water	58:24	0:0	6	factor
op	58:32	0:0	4	<
water	58:34	0:0	4	0
stmts	59:8	59:18	3	
goto	59:8	59:18	4	error
water	59:13	0:0	5	error
call	60:4	61:62	2	memcpy
arg	60:11	60:77	3	&c->filter_bank[(c->filter_length*phase_count+1)*felem_size]
op	60:11	0:0	4	&
water	60:12	0:0	4	c
op	60:13	0:0	4	->
water	60:15	0:0	4	filter_bank
op	60:26	0:0	4	[
water	60:27	0:0	4	(
water	60:28	0:0	4	c
op	60:29	0:0	4	->
water	60:31	0:0	4	filter_length
op	60:45	0:0	4	*
water	60:47	0:0	4	phase_count
op	60:59	0:0	4	+
water	60:61	0:0	4	1
water	60:62	0:0	4	)
op	60:64	0:0	4	*
water	60:66	0:0	4	felem_size
op	60:76	0:0	4	]
arg	61:11	61:25	3	c->filter_bank
water	61:11	0:0	4	c
op	61:12	0:0	4	->
water	61:14	0:0	4	filter_bank
arg	61:27	61:62	3	(c->filter_length-1)*felem_size
water	61:27	0:0	4	(
water	61:28	0:0	4	c
op	61:29	0:0	4	->
water	61:31	0:0	4	filter_length
op	61:45	0:0	4	-
water	61:47	0:0	4	1
water	61:48	0:0	4	)
op	61:50	0:0	4	*
water	61:52	0:0	4	felem_size
water	61:63	0:0	2	;
call	62:4	63:75	2	memcpy
arg	62:11	62:71	3	&c->filter_bank[c->filter_length*phase_count*felem_size]
op	62:11	0:0	4	&
water	62:12	0:0	4	c
op	62:13	0:0	4	->
water	62:15	0:0	4	filter_bank
op	62:26	0:0	4	[
water	62:27	0:0	4	c
op	62:28	0:0	4	->
water	62:30	0:0	4	filter_length
op	62:44	0:0	4	*
water	62:46	0:0	4	phase_count
op	62:58	0:0	4	*
water	62:60	0:0	4	felem_size
op	62:70	0:0	4	]
arg	63:11	63:63	3	&c->filter_bank[(c->filter_length-1)*felem_size]
op	63:11	0:0	4	&
water	63:12	0:0	4	c
op	63:13	0:0	4	->
water	63:15	0:0	4	filter_bank
op	63:26	0:0	4	[
water	63:27	0:0	4	(
water	63:28	0:0	4	c
op	63:29	0:0	4	->
water	63:31	0:0	4	filter_length
op	63:45	0:0	4	-
water	63:47	0:0	4	1
water	63:48	0:0	4	)
op	63:50	0:0	4	*
water	63:52	0:0	4	felem_size
op	63:62	0:0	4	]
arg	63:65	63:75	3	felem_size
water	63:65	0:0	4	felem_size
water	63:76	0:0	2	;
water	64:4	0:0	2	c
op	64:5	0:0	2	->
water	64:7	0:0	2	compensation_distance
op	64:29	0:0	2	=
water	64:31	0:0	2	0
water	64:32	0:0	2	;
if	65:4	67:18	2	(!av_reduce (& c -> src_incr ,& c -> dst_incr ,out_rate ,in_rate * ( int64_t ) phase_count ,INT32_MAX / 2 ))
cond	65:8	66:64	3	!av_reduce (& c -> src_incr ,& c -> dst_incr ,out_rate ,in_rate * ( int64_t ) phase_count ,INT32_MAX / 2 )
op	65:8	0:0	4	!
call	65:9	66:64	4	av_reduce
arg	65:19	65:31	5	&c->src_incr
op	65:19	0:0	6	&
water	65:20	0:0	6	c
op	65:21	0:0	6	->
water	65:23	0:0	6	src_incr
arg	65:33	65:45	5	&c->dst_incr
op	65:33	0:0	6	&
water	65:34	0:0	6	c
op	65:35	0:0	6	->
water	65:37	0:0	6	dst_incr
arg	65:47	65:55	5	out_rate
water	65:47	0:0	6	out_rate
arg	66:19	66:49	5	in_rate*(int64_t)phase_count
water	66:19	0:0	6	in_rate
op	66:27	0:0	6	*
water	66:29	0:0	6	(
water	66:30	0:0	6	int64_t
water	66:37	0:0	6	)
water	66:38	0:0	6	phase_count
arg	66:51	66:64	5	INT32_MAX/2
water	66:51	0:0	6	INT32_MAX
op	66:61	0:0	6	/
water	66:63	0:0	6	2
stmts	67:8	67:18	3	
goto	67:8	67:18	4	error
water	67:13	0:0	5	error
water	68:4	0:0	2	c
op	68:5	0:0	2	->
water	68:7	0:0	2	ideal_dst_incr
op	68:22	0:0	2	=
water	68:24	0:0	2	c
op	68:25	0:0	2	->
water	68:27	0:0	2	dst_incr
water	68:35	0:0	2	;
water	69:4	0:0	2	c
op	69:5	0:0	2	->
water	69:7	0:0	2	padding_size
op	69:22	0:0	2	=
water	69:24	0:0	2	(
water	69:25	0:0	2	c
op	69:26	0:0	2	->
water	69:28	0:0	2	filter_length
op	69:42	0:0	2	-
water	69:44	0:0	2	1
water	69:45	0:0	2	)
op	69:47	0:0	2	/
water	69:49	0:0	2	2
water	69:50	0:0	2	;
water	70:4	0:0	2	c
op	70:5	0:0	2	->
water	70:7	0:0	2	initial_padding_filled
op	70:30	0:0	2	=
water	70:32	0:0	2	0
water	70:33	0:0	2	;
water	71:4	0:0	2	c
op	71:5	0:0	2	->
water	71:7	0:0	2	index
op	71:13	0:0	2	=
water	71:15	0:0	2	0
water	71:16	0:0	2	;
water	72:4	0:0	2	c
op	72:5	0:0	2	->
water	72:7	0:0	2	frac
op	72:13	0:0	2	=
water	72:15	0:0	2	0
water	72:16	0:0	2	;
water	74:4	0:0	2	c
op	74:5	0:0	2	->
water	74:7	0:0	2	buffer
op	74:14	0:0	2	=
call	74:16	76:53	2	ff_audio_data_alloc
arg	74:36	74:58	3	avr->resample_channels
water	74:36	0:0	4	avr
op	74:39	0:0	4	->
water	74:41	0:0	4	resample_channels
arg	74:60	74:75	3	c->padding_size
water	74:60	0:0	4	c
op	74:61	0:0	4	->
water	74:63	0:0	4	padding_size
arg	75:36	75:60	3	avr->internal_sample_fmt
water	75:36	0:0	4	avr
op	75:39	0:0	4	->
water	75:41	0:0	4	internal_sample_fmt
arg	76:36	76:53	3	"resample buffer"
water	76:36	0:0	4	"resample buffer"
water	76:54	0:0	2	;
if	77:4	78:18	2	(! c -> buffer)
cond	77:8	77:12	3	! c -> buffer
op	77:8	0:0	4	!
water	77:9	0:0	4	c
op	77:10	0:0	4	->
water	77:12	0:0	4	buffer
stmts	78:8	78:18	3	
goto	78:8	78:18	4	error
water	78:13	0:0	5	error
water	79:4	0:0	2	c
op	79:5	0:0	2	->
water	79:7	0:0	2	buffer
op	79:13	0:0	2	->
water	79:15	0:0	2	nb_samples
op	79:31	0:0	2	=
water	79:33	0:0	2	c
op	79:34	0:0	2	->
water	79:36	0:0	2	padding_size
water	79:48	0:0	2	;
water	80:4	0:0	2	c
op	80:5	0:0	2	->
water	80:7	0:0	2	initial_padding_samples
op	80:31	0:0	2	=
water	80:33	0:0	2	c
op	80:34	0:0	2	->
water	80:36	0:0	2	padding_size
water	80:48	0:0	2	;
call	81:4	83:52	2	av_log
arg	81:11	81:14	3	avr
water	81:11	0:0	4	avr
arg	81:16	81:28	3	AV_LOG_DEBUG
water	81:16	0:0	4	AV_LOG_DEBUG
arg	81:30	81:66	3	"resample: %s from %d Hz to %d Hz\n"
water	81:30	0:0	4	"resample: %s from %d Hz to %d Hz\n"
arg	82:11	82:59	3	av_get_sample_fmt_name(avr->internal_sample_fmt)
call	82:11	82:58	4	av_get_sample_fmt_name
arg	82:34	82:58	5	avr->internal_sample_fmt
water	82:34	0:0	6	avr
op	82:37	0:0	6	->
water	82:39	0:0	6	internal_sample_fmt
arg	83:11	83:30	3	avr->in_sample_rate
water	83:11	0:0	4	avr
op	83:14	0:0	4	->
water	83:16	0:0	4	in_sample_rate
arg	83:32	83:52	3	avr->out_sample_rate
water	83:32	0:0	4	avr
op	83:35	0:0	4	->
water	83:37	0:0	4	out_sample_rate
water	83:53	0:0	2	;
return	84:4	84:12	2	c
water	84:11	0:0	3	c
label	85:0	85:5	2	error :
call	86:4	86:33	2	ff_audio_data_free
arg	86:23	86:33	3	&c->buffer
op	86:23	0:0	4	&
water	86:24	0:0	4	c
op	86:25	0:0	4	->
water	86:27	0:0	4	buffer
water	86:34	0:0	2	;
call	87:4	87:26	2	av_free
arg	87:12	87:26	3	c->filter_bank
water	87:12	0:0	4	c
op	87:13	0:0	4	->
water	87:15	0:0	4	filter_bank
water	87:27	0:0	2	;
call	88:4	88:13	2	av_free
arg	88:12	88:13	3	c
water	88:12	0:0	4	c
water	88:14	0:0	2	;
return	89:4	89:15	2	NULL
water	89:11	0:0	3	NULL

func	2:0	29:0	0	int	init_simple_filtergraph
params	2:27	0:0	1	
param	2:28	2:44	2	InputStream *	ist
param	2:46	2:63	2	OutputStream *	ost
stmnts	0:0	28:12	1	
decl	4:4	4:45	2	FilterGraph	*fg
op	4:20	0:0	2	=
call	4:22	4:44	3	av_mallocz
arg	4:33	4:44	4	sizeof(*fg)
op	4:33	0:0	5	sizeof
water	4:39	0:0	5	(
op	4:40	0:0	5	*
water	4:41	0:0	5	fg
water	4:43	0:0	5	)
if	5:4	6:23	2	(! fg)
cond	5:8	5:9	3	! fg
op	5:8	0:0	4	!
water	5:9	0:0	4	fg
stmts	6:8	6:23	3	
call	6:8	6:22	4	exit_program
arg	6:21	6:22	5	1
water	6:21	0:0	6	1
water	6:23	0:0	4	;
water	7:4	0:0	2	fg
op	7:6	0:0	2	->
water	7:8	0:0	2	index
op	7:14	0:0	2	=
water	7:16	0:0	2	nb_filtergraphs
water	7:31	0:0	2	;
call	8:4	8:42	2	GROW_ARRAY
arg	8:15	8:26	3	fg->outputs
water	8:15	0:0	4	fg
op	8:17	0:0	4	->
water	8:19	0:0	4	outputs
arg	8:28	8:42	3	fg->nb_outputs
water	8:28	0:0	4	fg
op	8:30	0:0	4	->
water	8:32	0:0	4	nb_outputs
water	8:43	0:0	2	;
if	9:4	10:23	2	(! ( fg -> outputs [ 0 ] =av_mallocz (sizeof ( * fg -> outputs [ 0 ] ) ) ))
cond	9:8	9:62	3	! ( fg -> outputs [ 0 ] =av_mallocz (sizeof ( * fg -> outputs [ 0 ] ) ) )
op	9:8	0:0	4	!
water	9:9	0:0	4	(
water	9:10	0:0	4	fg
op	9:12	0:0	4	->
water	9:14	0:0	4	outputs
op	9:21	0:0	4	[
water	9:22	0:0	4	0
op	9:23	0:0	4	]
op	9:25	0:0	4	=
call	9:27	9:61	4	av_mallocz
arg	9:38	9:61	5	sizeof(*fg->outputs[0])
op	9:38	0:0	6	sizeof
water	9:44	0:0	6	(
op	9:45	0:0	6	*
water	9:46	0:0	6	fg
op	9:48	0:0	6	->
water	9:50	0:0	6	outputs
op	9:57	0:0	6	[
water	9:58	0:0	6	0
op	9:59	0:0	6	]
water	9:60	0:0	6	)
water	9:62	0:0	4	)
stmts	10:8	10:23	3	
call	10:8	10:22	4	exit_program
arg	10:21	10:22	5	1
water	10:21	0:0	6	1
water	10:23	0:0	4	;
water	11:4	0:0	2	fg
op	11:6	0:0	2	->
water	11:8	0:0	2	outputs
op	11:15	0:0	2	[
water	11:16	0:0	2	0
op	11:17	0:0	2	]
op	11:18	0:0	2	->
water	11:20	0:0	2	ost
op	11:26	0:0	2	=
water	11:28	0:0	2	ost
water	11:31	0:0	2	;
water	12:4	0:0	2	fg
op	12:6	0:0	2	->
water	12:8	0:0	2	outputs
op	12:15	0:0	2	[
water	12:16	0:0	2	0
op	12:17	0:0	2	]
op	12:18	0:0	2	->
water	12:20	0:0	2	graph
op	12:26	0:0	2	=
water	12:28	0:0	2	fg
water	12:30	0:0	2	;
water	13:4	0:0	2	fg
op	13:6	0:0	2	->
water	13:8	0:0	2	outputs
op	13:15	0:0	2	[
water	13:16	0:0	2	0
op	13:17	0:0	2	]
op	13:18	0:0	2	->
water	13:20	0:0	2	format
op	13:27	0:0	2	=
op	13:29	0:0	2	-
water	13:30	0:0	2	1
water	13:31	0:0	2	;
water	14:4	0:0	2	ost
op	14:7	0:0	2	->
water	14:9	0:0	2	filter
op	14:16	0:0	2	=
water	14:18	0:0	2	fg
op	14:20	0:0	2	->
water	14:22	0:0	2	outputs
op	14:29	0:0	2	[
water	14:30	0:0	2	0
op	14:31	0:0	2	]
water	14:32	0:0	2	;
call	15:4	15:40	2	GROW_ARRAY
arg	15:15	15:25	3	fg->inputs
water	15:15	0:0	4	fg
op	15:17	0:0	4	->
water	15:19	0:0	4	inputs
arg	15:27	15:40	3	fg->nb_inputs
water	15:27	0:0	4	fg
op	15:29	0:0	4	->
water	15:31	0:0	4	nb_inputs
water	15:41	0:0	2	;
if	16:4	17:23	2	(! ( fg -> inputs [ 0 ] =av_mallocz (sizeof ( * fg -> inputs [ 0 ] ) ) ))
cond	16:8	16:60	3	! ( fg -> inputs [ 0 ] =av_mallocz (sizeof ( * fg -> inputs [ 0 ] ) ) )
op	16:8	0:0	4	!
water	16:9	0:0	4	(
water	16:10	0:0	4	fg
op	16:12	0:0	4	->
water	16:14	0:0	4	inputs
op	16:20	0:0	4	[
water	16:21	0:0	4	0
op	16:22	0:0	4	]
op	16:24	0:0	4	=
call	16:26	16:59	4	av_mallocz
arg	16:37	16:59	5	sizeof(*fg->inputs[0])
op	16:37	0:0	6	sizeof
water	16:43	0:0	6	(
op	16:44	0:0	6	*
water	16:45	0:0	6	fg
op	16:47	0:0	6	->
water	16:49	0:0	6	inputs
op	16:55	0:0	6	[
water	16:56	0:0	6	0
op	16:57	0:0	6	]
water	16:58	0:0	6	)
water	16:60	0:0	4	)
stmts	17:8	17:23	3	
call	17:8	17:22	4	exit_program
arg	17:21	17:22	5	1
water	17:21	0:0	6	1
water	17:23	0:0	4	;
water	18:4	0:0	2	fg
op	18:6	0:0	2	->
water	18:8	0:0	2	inputs
op	18:14	0:0	2	[
water	18:15	0:0	2	0
op	18:16	0:0	2	]
op	18:17	0:0	2	->
water	18:19	0:0	2	ist
op	18:25	0:0	2	=
water	18:27	0:0	2	ist
water	18:30	0:0	2	;
water	19:4	0:0	2	fg
op	19:6	0:0	2	->
water	19:8	0:0	2	inputs
op	19:14	0:0	2	[
water	19:15	0:0	2	0
op	19:16	0:0	2	]
op	19:17	0:0	2	->
water	19:19	0:0	2	graph
op	19:25	0:0	2	=
water	19:27	0:0	2	fg
water	19:29	0:0	2	;
water	20:4	0:0	2	fg
op	20:6	0:0	2	->
water	20:8	0:0	2	inputs
op	20:14	0:0	2	[
water	20:15	0:0	2	0
op	20:16	0:0	2	]
op	20:17	0:0	2	->
water	20:19	0:0	2	format
op	20:26	0:0	2	=
op	20:28	0:0	2	-
water	20:29	0:0	2	1
water	20:30	0:0	2	;
water	21:4	0:0	2	fg
op	21:6	0:0	2	->
water	21:8	0:0	2	inputs
op	21:14	0:0	2	[
water	21:15	0:0	2	0
op	21:16	0:0	2	]
op	21:17	0:0	2	->
water	21:19	0:0	2	frame_queue
op	21:31	0:0	2	=
call	21:33	21:67	2	av_fifo_alloc
arg	21:47	21:67	3	8*sizeof(AVFrame*)
water	21:47	0:0	4	8
op	21:49	0:0	4	*
op	21:51	0:0	4	sizeof
water	21:57	0:0	4	(
water	21:58	0:0	4	AVFrame
op	21:65	0:0	4	*
water	21:66	0:0	4	)
water	21:68	0:0	2	;
if	22:4	23:23	2	(! fg -> inputs [ 0 ] -> frame_queue)
cond	22:8	22:24	3	! fg -> inputs [ 0 ] -> frame_queue
op	22:8	0:0	4	!
water	22:9	0:0	4	fg
op	22:11	0:0	4	->
water	22:13	0:0	4	inputs
op	22:19	0:0	4	[
water	22:20	0:0	4	0
op	22:21	0:0	4	]
op	22:22	0:0	4	->
water	22:24	0:0	4	frame_queue
stmts	23:8	23:23	3	
call	23:8	23:22	4	exit_program
arg	23:21	23:22	5	1
water	23:21	0:0	6	1
water	23:23	0:0	4	;
call	24:4	24:44	2	GROW_ARRAY
arg	24:15	24:27	3	ist->filters
water	24:15	0:0	4	ist
op	24:18	0:0	4	->
water	24:20	0:0	4	filters
arg	24:29	24:44	3	ist->nb_filters
water	24:29	0:0	4	ist
op	24:32	0:0	4	->
water	24:34	0:0	4	nb_filters
water	24:45	0:0	2	;
water	25:4	0:0	2	ist
op	25:7	0:0	2	->
water	25:9	0:0	2	filters
op	25:16	0:0	2	[
water	25:17	0:0	2	ist
op	25:20	0:0	2	->
water	25:22	0:0	2	nb_filters
op	25:33	0:0	2	-
water	25:35	0:0	2	1
op	25:36	0:0	2	]
op	25:38	0:0	2	=
water	25:40	0:0	2	fg
op	25:42	0:0	2	->
water	25:44	0:0	2	inputs
op	25:50	0:0	2	[
water	25:51	0:0	2	0
op	25:52	0:0	2	]
water	25:53	0:0	2	;
call	26:4	26:44	2	GROW_ARRAY
arg	26:15	26:27	3	filtergraphs
water	26:15	0:0	4	filtergraphs
arg	26:29	26:44	3	nb_filtergraphs
water	26:29	0:0	4	nb_filtergraphs
water	26:45	0:0	2	;
water	27:4	0:0	2	filtergraphs
op	27:16	0:0	2	[
water	27:17	0:0	2	nb_filtergraphs
op	27:33	0:0	2	-
water	27:35	0:0	2	1
op	27:36	0:0	2	]
op	27:38	0:0	2	=
water	27:40	0:0	2	fg
water	27:42	0:0	2	;
return	28:4	28:12	2	0
water	28:11	0:0	3	0

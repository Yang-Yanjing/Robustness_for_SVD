func	1:0	13:0	0	static MXFPackage *	mxf_resolve_source_package
params	1:45	0:0	1	
param	1:46	1:61	2	MXFContext *	mxf
param	1:63	1:78	2	UID	package_uid
stmnts	0:0	12:15	1	
decl	3:4	3:30	2	MXFPackage	*package
op	3:24	0:0	2	=
water	3:26	0:0	2	NULL
decl	4:4	4:9	2	int	i
for	5:4	11:4	2	(i = 0 ;i < mxf -> packages_count;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:25	3	i < mxf -> packages_count
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	mxf
op	5:23	0:0	4	->
water	5:25	0:0	4	packages_count
forexpr	5:41	5:42	3	i ++
water	5:41	0:0	4	i
op	5:42	0:0	4	++
stmts	5:46	11:4	3	
water	5:46	0:0	4	{
water	6:8	0:0	4	package
op	6:16	0:0	4	=
call	6:18	6:83	4	mxf_resolve_strong_ref
arg	6:41	6:44	5	mxf
water	6:41	0:0	6	mxf
arg	6:46	6:68	5	&mxf->packages_refs[i]
op	6:46	0:0	6	&
water	6:47	0:0	6	mxf
op	6:50	0:0	6	->
water	6:52	0:0	6	packages_refs
op	6:65	0:0	6	[
water	6:66	0:0	6	i
op	6:67	0:0	6	]
arg	6:70	6:83	5	SourcePackage
water	6:70	0:0	6	SourcePackage
water	6:84	0:0	4	;
if	7:8	8:20	4	(! package)
cond	7:12	7:13	5	! package
op	7:12	0:0	6	!
water	7:13	0:0	6	package
stmts	8:12	8:20	5	
continue	8:12	8:20	6	
if	9:8	10:26	4	(!memcmp (package -> package_uid ,package_uid ,16 ))
cond	9:12	9:57	5	!memcmp (package -> package_uid ,package_uid ,16 )
op	9:12	0:0	6	!
call	9:13	9:57	6	memcmp
arg	9:20	9:40	7	package->package_uid
water	9:20	0:0	8	package
op	9:27	0:0	8	->
water	9:29	0:0	8	package_uid
arg	9:42	9:53	7	package_uid
water	9:42	0:0	8	package_uid
arg	9:55	9:57	7	16
water	9:55	0:0	8	16
stmts	10:12	10:26	5	
return	10:12	10:26	6	package
water	10:19	0:0	7	package
water	11:4	0:0	4	}
return	12:4	12:15	2	NULL
water	12:11	0:0	3	NULL

func	1:0	29:0	0	AVAudioFifo *	av_audio_fifo_alloc
params	1:32	0:0	1	
param	1:33	1:63	2	enum AVSampleFormat	sample_fmt
param	1:65	1:77	2	int	channels
param	2:33	2:47	2	int	nb_samples
stmnts	0:0	28:15	1	
decl	4:4	4:19	2	AVAudioFifo	*af
decl	5:4	5:19	2	int	buf_size
water	5:16	0:0	2	,
decl	5:4	5:19	2	int	i
if	7:4	8:19	2	(av_samples_get_buffer_size (& buf_size ,channels ,nb_samples ,sample_fmt ,1 ) < 0)
cond	7:8	7:85	3	av_samples_get_buffer_size (& buf_size ,channels ,nb_samples ,sample_fmt ,1 ) < 0
call	7:8	7:81	4	av_samples_get_buffer_size
arg	7:35	7:44	5	&buf_size
op	7:35	0:0	6	&
water	7:36	0:0	6	buf_size
arg	7:46	7:54	5	channels
water	7:46	0:0	6	channels
arg	7:56	7:66	5	nb_samples
water	7:56	0:0	6	nb_samples
arg	7:68	7:78	5	sample_fmt
water	7:68	0:0	6	sample_fmt
arg	7:80	7:81	5	1
water	7:80	0:0	6	1
op	7:83	0:0	4	<
water	7:85	0:0	4	0
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
water	9:4	0:0	2	af
op	9:7	0:0	2	=
call	9:9	9:31	2	av_mallocz
arg	9:20	9:31	3	sizeof(*af)
op	9:20	0:0	4	sizeof
water	9:26	0:0	4	(
op	9:27	0:0	4	*
water	9:28	0:0	4	af
water	9:30	0:0	4	)
water	9:32	0:0	2	;
if	10:4	11:19	2	(! af)
cond	10:8	10:9	3	! af
op	10:8	0:0	4	!
water	10:9	0:0	4	af
stmts	11:8	11:19	3	
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
water	12:4	0:0	2	af
op	12:6	0:0	2	->
water	12:8	0:0	2	channels
op	12:20	0:0	2	=
water	12:22	0:0	2	channels
water	12:30	0:0	2	;
water	13:4	0:0	2	af
op	13:6	0:0	2	->
water	13:8	0:0	2	sample_fmt
op	13:20	0:0	2	=
water	13:22	0:0	2	sample_fmt
water	13:32	0:0	2	;
water	14:4	0:0	2	af
op	14:6	0:0	2	->
water	14:8	0:0	2	sample_size
op	14:20	0:0	2	=
water	14:22	0:0	2	buf_size
op	14:31	0:0	2	/
water	14:33	0:0	2	nb_samples
water	14:43	0:0	2	;
water	15:4	0:0	2	af
op	15:6	0:0	2	->
water	15:8	0:0	2	nb_buffers
op	15:20	0:0	2	=
call	15:22	15:56	2	av_sample_fmt_is_planar
arg	15:46	15:56	3	sample_fmt
water	15:46	0:0	4	sample_fmt
water	15:58	0:0	2	?
water	15:60	0:0	2	channels
water	15:69	0:0	2	:
water	15:71	0:0	2	1
water	15:72	0:0	2	;
water	16:4	0:0	2	af
op	16:6	0:0	2	->
water	16:8	0:0	2	buf
op	16:12	0:0	2	=
call	16:14	16:63	2	av_mallocz_array
arg	16:31	16:45	3	af->nb_buffers
water	16:31	0:0	4	af
op	16:33	0:0	4	->
water	16:35	0:0	4	nb_buffers
arg	16:47	16:63	3	sizeof(*af->buf)
op	16:47	0:0	4	sizeof
water	16:53	0:0	4	(
op	16:54	0:0	4	*
water	16:55	0:0	4	af
op	16:57	0:0	4	->
water	16:59	0:0	4	buf
water	16:62	0:0	4	)
water	16:64	0:0	2	;
if	17:4	18:18	2	(! af -> buf)
cond	17:8	17:13	3	! af -> buf
op	17:8	0:0	4	!
water	17:9	0:0	4	af
op	17:11	0:0	4	->
water	17:13	0:0	4	buf
stmts	18:8	18:18	3	
goto	18:8	18:18	4	error
water	18:13	0:0	5	error
for	19:4	23:4	2	(i = 0 ;i < af -> nb_buffers;i ++)
forinit	19:9	19:14	3	i = 0 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:24	3	i < af -> nb_buffers
water	19:16	0:0	4	i
op	19:18	0:0	4	<
water	19:20	0:0	4	af
op	19:22	0:0	4	->
water	19:24	0:0	4	nb_buffers
forexpr	19:36	19:37	3	i ++
water	19:36	0:0	4	i
op	19:37	0:0	4	++
stmts	19:41	23:4	3	
water	19:41	0:0	4	{
water	20:8	0:0	4	af
op	20:10	0:0	4	->
water	20:12	0:0	4	buf
op	20:15	0:0	4	[
water	20:16	0:0	4	i
op	20:17	0:0	4	]
op	20:19	0:0	4	=
call	20:21	20:43	4	av_fifo_alloc
arg	20:35	20:43	5	buf_size
water	20:35	0:0	6	buf_size
water	20:44	0:0	4	;
if	21:8	22:22	4	(! af -> buf [ i ])
cond	21:12	21:22	5	! af -> buf [ i ]
op	21:12	0:0	6	!
water	21:13	0:0	6	af
op	21:15	0:0	6	->
water	21:17	0:0	6	buf
op	21:20	0:0	6	[
water	21:21	0:0	6	i
op	21:22	0:0	6	]
stmts	22:12	22:22	5	
goto	22:12	22:22	6	error
water	22:17	0:0	7	error
water	23:4	0:0	4	}
water	24:4	0:0	2	af
op	24:6	0:0	2	->
water	24:8	0:0	2	allocated_samples
op	24:26	0:0	2	=
water	24:28	0:0	2	nb_samples
water	24:38	0:0	2	;
return	25:4	25:13	2	af
water	25:11	0:0	3	af
label	26:0	26:5	2	error :
call	27:4	27:25	2	av_audio_fifo_free
arg	27:23	27:25	3	af
water	27:23	0:0	4	af
water	27:26	0:0	2	;
return	28:4	28:15	2	NULL
water	28:11	0:0	3	NULL

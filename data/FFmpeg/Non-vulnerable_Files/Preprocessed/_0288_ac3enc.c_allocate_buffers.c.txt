func	1:15	94:0	0	int	allocate_buffers
params	1:35	0:0	1	
param	1:36	1:55	2	AC3EncodeContext *	s
stmnts	0:0	93:26	1	
decl	3:4	3:36	2	AVCodecContext	*avctx
op	3:26	0:0	2	=
water	3:28	0:0	2	s
op	3:29	0:0	2	->
water	3:31	0:0	2	avctx
decl	4:4	4:15	2	int	blk
water	4:11	0:0	2	,
decl	4:4	4:15	2	int	ch
decl	5:4	5:34	2	int	channels
op	5:17	0:0	2	=
water	5:19	0:0	2	s
op	5:20	0:0	2	->
water	5:22	0:0	2	channels
op	5:31	0:0	2	+
water	5:33	0:0	2	1
decl	6:4	6:49	2	int	channel_blocks
op	6:23	0:0	2	=
water	6:25	0:0	2	channels
op	6:34	0:0	2	*
water	6:36	0:0	2	s
op	6:37	0:0	2	->
water	6:39	0:0	2	num_blocks
decl	7:4	7:55	2	int	total_coefs
op	7:23	0:0	2	=
water	7:25	0:0	2	AC3_MAX_COEFS
op	7:39	0:0	2	*
water	7:41	0:0	2	channel_blocks
if	8:4	9:23	2	(s -> allocate_sample_buffers (s ))
cond	8:8	8:36	3	s -> allocate_sample_buffers (s )
call	8:8	8:36	4	s->allocate_sample_buffers
arg	8:35	8:36	5	s
water	8:35	0:0	6	s
stmts	9:8	9:23	3	
goto	9:8	9:23	4	alloc_fail
water	9:13	0:0	5	alloc_fail
call	10:4	11:55	2	FF_ALLOC_ARRAY_OR_GOTO
arg	10:27	10:32	3	avctx
water	10:27	0:0	4	avctx
arg	10:34	10:47	3	s->bap_buffer
water	10:34	0:0	4	s
op	10:35	0:0	4	->
water	10:37	0:0	4	bap_buffer
arg	10:49	10:60	3	total_coefs
water	10:49	0:0	4	total_coefs
arg	11:21	11:43	3	sizeof(*s->bap_buffer)
op	11:21	0:0	4	sizeof
water	11:27	0:0	4	(
op	11:28	0:0	4	*
water	11:29	0:0	4	s
op	11:30	0:0	4	->
water	11:32	0:0	4	bap_buffer
water	11:42	0:0	4	)
arg	11:45	11:55	3	alloc_fail
water	11:45	0:0	4	alloc_fail
water	11:56	0:0	2	;
call	12:4	13:56	2	FF_ALLOC_ARRAY_OR_GOTO
arg	12:27	12:32	3	avctx
water	12:27	0:0	4	avctx
arg	12:34	12:48	3	s->bap1_buffer
water	12:34	0:0	4	s
op	12:35	0:0	4	->
water	12:37	0:0	4	bap1_buffer
arg	12:50	12:61	3	total_coefs
water	12:50	0:0	4	total_coefs
arg	13:21	13:44	3	sizeof(*s->bap1_buffer)
op	13:21	0:0	4	sizeof
water	13:27	0:0	4	(
op	13:28	0:0	4	*
water	13:29	0:0	4	s
op	13:30	0:0	4	->
water	13:32	0:0	4	bap1_buffer
water	13:43	0:0	4	)
arg	13:46	13:56	3	alloc_fail
water	13:46	0:0	4	alloc_fail
water	13:57	0:0	2	;
call	14:4	15:62	2	FF_ALLOCZ_ARRAY_OR_GOTO
arg	14:28	14:33	3	avctx
water	14:28	0:0	4	avctx
arg	14:35	14:54	3	s->mdct_coef_buffer
water	14:35	0:0	4	s
op	14:36	0:0	4	->
water	14:38	0:0	4	mdct_coef_buffer
arg	14:56	14:67	3	total_coefs
water	14:56	0:0	4	total_coefs
arg	15:22	15:50	3	sizeof(*s->mdct_coef_buffer)
op	15:22	0:0	4	sizeof
water	15:28	0:0	4	(
op	15:29	0:0	4	*
water	15:30	0:0	4	s
op	15:31	0:0	4	->
water	15:33	0:0	4	mdct_coef_buffer
water	15:49	0:0	4	)
arg	15:52	15:62	3	alloc_fail
water	15:52	0:0	4	alloc_fail
water	15:63	0:0	2	;
call	16:4	17:55	2	FF_ALLOC_ARRAY_OR_GOTO
arg	16:27	16:32	3	avctx
water	16:27	0:0	4	avctx
arg	16:34	16:47	3	s->exp_buffer
water	16:34	0:0	4	s
op	16:35	0:0	4	->
water	16:37	0:0	4	exp_buffer
arg	16:49	16:60	3	total_coefs
water	16:49	0:0	4	total_coefs
arg	17:21	17:43	3	sizeof(*s->exp_buffer)
op	17:21	0:0	4	sizeof
water	17:27	0:0	4	(
op	17:28	0:0	4	*
water	17:29	0:0	4	s
op	17:30	0:0	4	->
water	17:32	0:0	4	exp_buffer
water	17:42	0:0	4	)
arg	17:45	17:55	3	alloc_fail
water	17:45	0:0	4	alloc_fail
water	17:56	0:0	2	;
call	18:4	19:63	2	FF_ALLOC_ARRAY_OR_GOTO
arg	18:27	18:32	3	avctx
water	18:27	0:0	4	avctx
arg	18:34	18:55	3	s->grouped_exp_buffer
water	18:34	0:0	4	s
op	18:35	0:0	4	->
water	18:37	0:0	4	grouped_exp_buffer
arg	18:57	18:71	3	channel_blocks
water	18:57	0:0	4	channel_blocks
arg	18:73	19:51	3	128*sizeof(*s->grouped_exp_buffer)
water	18:73	0:0	4	128
op	18:77	0:0	4	*
op	19:21	0:0	4	sizeof
water	19:27	0:0	4	(
op	19:28	0:0	4	*
water	19:29	0:0	4	s
op	19:30	0:0	4	->
water	19:32	0:0	4	grouped_exp_buffer
water	19:50	0:0	4	)
arg	19:53	19:63	3	alloc_fail
water	19:53	0:0	4	alloc_fail
water	19:64	0:0	2	;
call	20:4	21:55	2	FF_ALLOC_ARRAY_OR_GOTO
arg	20:27	20:32	3	avctx
water	20:27	0:0	4	avctx
arg	20:34	20:47	3	s->psd_buffer
water	20:34	0:0	4	s
op	20:35	0:0	4	->
water	20:37	0:0	4	psd_buffer
arg	20:49	20:60	3	total_coefs
water	20:49	0:0	4	total_coefs
arg	21:21	21:43	3	sizeof(*s->psd_buffer)
op	21:21	0:0	4	sizeof
water	21:27	0:0	4	(
op	21:28	0:0	4	*
water	21:29	0:0	4	s
op	21:30	0:0	4	->
water	21:32	0:0	4	psd_buffer
water	21:42	0:0	4	)
arg	21:45	21:55	3	alloc_fail
water	21:45	0:0	4	alloc_fail
water	21:56	0:0	2	;
call	22:4	23:60	2	FF_ALLOC_ARRAY_OR_GOTO
arg	22:27	22:32	3	avctx
water	22:27	0:0	4	avctx
arg	22:34	22:52	3	s->band_psd_buffer
water	22:34	0:0	4	s
op	22:35	0:0	4	->
water	22:37	0:0	4	band_psd_buffer
arg	22:54	22:68	3	channel_blocks
water	22:54	0:0	4	channel_blocks
arg	22:70	23:48	3	64*sizeof(*s->band_psd_buffer)
water	22:70	0:0	4	64
op	22:73	0:0	4	*
op	23:21	0:0	4	sizeof
water	23:27	0:0	4	(
op	23:28	0:0	4	*
water	23:29	0:0	4	s
op	23:30	0:0	4	->
water	23:32	0:0	4	band_psd_buffer
water	23:47	0:0	4	)
arg	23:50	23:60	3	alloc_fail
water	23:50	0:0	4	alloc_fail
water	23:61	0:0	2	;
call	24:4	25:56	2	FF_ALLOC_ARRAY_OR_GOTO
arg	24:27	24:32	3	avctx
water	24:27	0:0	4	avctx
arg	24:34	24:48	3	s->mask_buffer
water	24:34	0:0	4	s
op	24:35	0:0	4	->
water	24:37	0:0	4	mask_buffer
arg	24:50	24:64	3	channel_blocks
water	24:50	0:0	4	channel_blocks
arg	24:66	25:44	3	64*sizeof(*s->mask_buffer)
water	24:66	0:0	4	64
op	24:69	0:0	4	*
op	25:21	0:0	4	sizeof
water	25:27	0:0	4	(
op	25:28	0:0	4	*
water	25:29	0:0	4	s
op	25:30	0:0	4	->
water	25:32	0:0	4	mask_buffer
water	25:43	0:0	4	)
arg	25:46	25:56	3	alloc_fail
water	25:46	0:0	4	alloc_fail
water	25:57	0:0	2	;
call	26:4	27:57	2	FF_ALLOC_ARRAY_OR_GOTO
arg	26:27	26:32	3	avctx
water	26:27	0:0	4	avctx
arg	26:34	26:49	3	s->qmant_buffer
water	26:34	0:0	4	s
op	26:35	0:0	4	->
water	26:37	0:0	4	qmant_buffer
arg	26:51	26:62	3	total_coefs
water	26:51	0:0	4	total_coefs
arg	27:21	27:45	3	sizeof(*s->qmant_buffer)
op	27:21	0:0	4	sizeof
water	27:27	0:0	4	(
op	27:28	0:0	4	*
water	27:29	0:0	4	s
op	27:30	0:0	4	->
water	27:32	0:0	4	qmant_buffer
water	27:44	0:0	4	)
arg	27:47	27:57	3	alloc_fail
water	27:47	0:0	4	alloc_fail
water	27:58	0:0	2	;
if	28:4	33:4	2	(s -> cpl_enabled)
cond	28:8	28:11	3	s -> cpl_enabled
water	28:8	0:0	4	s
op	28:9	0:0	4	->
water	28:11	0:0	4	cpl_enabled
stmts	28:24	33:4	3	
water	28:24	0:0	4	{
call	29:8	30:69	4	FF_ALLOC_ARRAY_OR_GOTO
arg	29:31	29:36	5	avctx
water	29:31	0:0	6	avctx
arg	29:38	29:61	5	s->cpl_coord_exp_buffer
water	29:38	0:0	6	s
op	29:39	0:0	6	->
water	29:41	0:0	6	cpl_coord_exp_buffer
arg	29:63	29:77	5	channel_blocks
water	29:63	0:0	6	channel_blocks
arg	29:79	30:57	5	16*sizeof(*s->cpl_coord_exp_buffer)
water	29:79	0:0	6	16
op	29:82	0:0	6	*
op	30:25	0:0	6	sizeof
water	30:31	0:0	6	(
op	30:32	0:0	6	*
water	30:33	0:0	6	s
op	30:34	0:0	6	->
water	30:36	0:0	6	cpl_coord_exp_buffer
water	30:56	0:0	6	)
arg	30:59	30:69	5	alloc_fail
water	30:59	0:0	6	alloc_fail
water	30:70	0:0	4	;
call	31:8	32:70	4	FF_ALLOC_ARRAY_OR_GOTO
arg	31:31	31:36	5	avctx
water	31:31	0:0	6	avctx
arg	31:38	31:62	5	s->cpl_coord_mant_buffer
water	31:38	0:0	6	s
op	31:39	0:0	6	->
water	31:41	0:0	6	cpl_coord_mant_buffer
arg	31:64	31:78	5	channel_blocks
water	31:64	0:0	6	channel_blocks
arg	31:80	32:58	5	16*sizeof(*s->cpl_coord_mant_buffer)
water	31:80	0:0	6	16
op	31:83	0:0	6	*
op	32:25	0:0	6	sizeof
water	32:31	0:0	6	(
op	32:32	0:0	6	*
water	32:33	0:0	6	s
op	32:34	0:0	6	->
water	32:36	0:0	6	cpl_coord_mant_buffer
water	32:57	0:0	6	)
arg	32:60	32:70	5	alloc_fail
water	32:60	0:0	6	alloc_fail
water	32:71	0:0	4	;
water	33:4	0:0	4	}
for	34:4	71:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	34:9	34:16	3	blk = 0 ;
water	34:9	0:0	4	blk
op	34:13	0:0	4	=
water	34:15	0:0	4	0
water	34:16	0:0	4	;
cond	34:18	34:27	3	blk < s -> num_blocks
water	34:18	0:0	4	blk
op	34:22	0:0	4	<
water	34:24	0:0	4	s
op	34:25	0:0	4	->
water	34:27	0:0	4	num_blocks
forexpr	34:39	34:42	3	blk ++
water	34:39	0:0	4	blk
op	34:42	0:0	4	++
stmts	34:46	71:4	3	
water	34:46	0:0	4	{
decl	35:8	35:41	4	AC3Block	*block
op	35:24	0:0	4	=
op	35:26	0:0	4	&
water	35:27	0:0	4	s
op	35:28	0:0	4	->
water	35:30	0:0	4	blocks
op	35:36	0:0	4	[
water	35:37	0:0	4	blk
op	35:40	0:0	4	]
call	36:8	37:36	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	36:32	36:37	5	avctx
water	36:32	0:0	6	avctx
arg	36:39	36:55	5	block->mdct_coef
water	36:39	0:0	6	block
op	36:44	0:0	6	->
water	36:46	0:0	6	mdct_coef
arg	36:57	36:65	5	channels
water	36:57	0:0	6	channels
arg	36:67	36:92	5	sizeof(*block->mdct_coef)
op	36:67	0:0	6	sizeof
water	36:73	0:0	6	(
op	36:74	0:0	6	*
water	36:75	0:0	6	block
op	36:80	0:0	6	->
water	36:82	0:0	6	mdct_coef
water	36:91	0:0	6	)
arg	37:26	37:36	5	alloc_fail
water	37:26	0:0	6	alloc_fail
water	37:37	0:0	4	;
call	38:8	39:36	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	38:32	38:37	5	avctx
water	38:32	0:0	6	avctx
arg	38:39	38:49	5	block->exp
water	38:39	0:0	6	block
op	38:44	0:0	6	->
water	38:46	0:0	6	exp
arg	38:51	38:59	5	channels
water	38:51	0:0	6	channels
arg	38:61	38:80	5	sizeof(*block->exp)
op	38:61	0:0	6	sizeof
water	38:67	0:0	6	(
op	38:68	0:0	6	*
water	38:69	0:0	6	block
op	38:74	0:0	6	->
water	38:76	0:0	6	exp
water	38:79	0:0	6	)
arg	39:26	39:36	5	alloc_fail
water	39:26	0:0	6	alloc_fail
water	39:37	0:0	4	;
call	40:8	41:36	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	40:32	40:37	5	avctx
water	40:32	0:0	6	avctx
arg	40:39	40:57	5	block->grouped_exp
water	40:39	0:0	6	block
op	40:44	0:0	6	->
water	40:46	0:0	6	grouped_exp
arg	40:59	40:67	5	channels
water	40:59	0:0	6	channels
arg	40:69	40:96	5	sizeof(*block->grouped_exp)
op	40:69	0:0	6	sizeof
water	40:75	0:0	6	(
op	40:76	0:0	6	*
water	40:77	0:0	6	block
op	40:82	0:0	6	->
water	40:84	0:0	6	grouped_exp
water	40:95	0:0	6	)
arg	41:26	41:36	5	alloc_fail
water	41:26	0:0	6	alloc_fail
water	41:37	0:0	4	;
call	42:8	43:36	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	42:32	42:37	5	avctx
water	42:32	0:0	6	avctx
arg	42:39	42:49	5	block->psd
water	42:39	0:0	6	block
op	42:44	0:0	6	->
water	42:46	0:0	6	psd
arg	42:51	42:59	5	channels
water	42:51	0:0	6	channels
arg	42:61	42:80	5	sizeof(*block->psd)
op	42:61	0:0	6	sizeof
water	42:67	0:0	6	(
op	42:68	0:0	6	*
water	42:69	0:0	6	block
op	42:74	0:0	6	->
water	42:76	0:0	6	psd
water	42:79	0:0	6	)
arg	43:26	43:36	5	alloc_fail
water	43:26	0:0	6	alloc_fail
water	43:37	0:0	4	;
call	44:8	45:36	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	44:32	44:37	5	avctx
water	44:32	0:0	6	avctx
arg	44:39	44:54	5	block->band_psd
water	44:39	0:0	6	block
op	44:44	0:0	6	->
water	44:46	0:0	6	band_psd
arg	44:56	44:64	5	channels
water	44:56	0:0	6	channels
arg	44:66	44:90	5	sizeof(*block->band_psd)
op	44:66	0:0	6	sizeof
water	44:72	0:0	6	(
op	44:73	0:0	6	*
water	44:74	0:0	6	block
op	44:79	0:0	6	->
water	44:81	0:0	6	band_psd
water	44:89	0:0	6	)
arg	45:26	45:36	5	alloc_fail
water	45:26	0:0	6	alloc_fail
water	45:37	0:0	4	;
call	46:8	47:36	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	46:32	46:37	5	avctx
water	46:32	0:0	6	avctx
arg	46:39	46:50	5	block->mask
water	46:39	0:0	6	block
op	46:44	0:0	6	->
water	46:46	0:0	6	mask
arg	46:52	46:60	5	channels
water	46:52	0:0	6	channels
arg	46:62	46:82	5	sizeof(*block->mask)
op	46:62	0:0	6	sizeof
water	46:68	0:0	6	(
op	46:69	0:0	6	*
water	46:70	0:0	6	block
op	46:75	0:0	6	->
water	46:77	0:0	6	mask
water	46:81	0:0	6	)
arg	47:26	47:36	5	alloc_fail
water	47:26	0:0	6	alloc_fail
water	47:37	0:0	4	;
call	48:8	49:36	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	48:32	48:37	5	avctx
water	48:32	0:0	6	avctx
arg	48:39	48:51	5	block->qmant
water	48:39	0:0	6	block
op	48:44	0:0	6	->
water	48:46	0:0	6	qmant
arg	48:53	48:61	5	channels
water	48:53	0:0	6	channels
arg	48:63	48:84	5	sizeof(*block->qmant)
op	48:63	0:0	6	sizeof
water	48:69	0:0	6	(
op	48:70	0:0	6	*
water	48:71	0:0	6	block
op	48:76	0:0	6	->
water	48:78	0:0	6	qmant
water	48:83	0:0	6	)
arg	49:26	49:36	5	alloc_fail
water	49:26	0:0	6	alloc_fail
water	49:37	0:0	4	;
if	50:8	55:8	4	(s -> cpl_enabled)
cond	50:12	50:15	5	s -> cpl_enabled
water	50:12	0:0	6	s
op	50:13	0:0	6	->
water	50:15	0:0	6	cpl_enabled
stmts	50:28	55:8	5	
water	50:28	0:0	6	{
call	51:12	52:40	6	FF_ALLOCZ_ARRAY_OR_GOTO
arg	51:36	51:41	7	avctx
water	51:36	0:0	8	avctx
arg	51:43	51:63	7	block->cpl_coord_exp
water	51:43	0:0	8	block
op	51:48	0:0	8	->
water	51:50	0:0	8	cpl_coord_exp
arg	51:65	51:73	7	channels
water	51:65	0:0	8	channels
arg	51:75	51:104	7	sizeof(*block->cpl_coord_exp)
op	51:75	0:0	8	sizeof
water	51:81	0:0	8	(
op	51:82	0:0	8	*
water	51:83	0:0	8	block
op	51:88	0:0	8	->
water	51:90	0:0	8	cpl_coord_exp
water	51:103	0:0	8	)
arg	52:30	52:40	7	alloc_fail
water	52:30	0:0	8	alloc_fail
water	52:41	0:0	6	;
call	53:12	54:40	6	FF_ALLOCZ_ARRAY_OR_GOTO
arg	53:36	53:41	7	avctx
water	53:36	0:0	8	avctx
arg	53:43	53:64	7	block->cpl_coord_mant
water	53:43	0:0	8	block
op	53:48	0:0	8	->
water	53:50	0:0	8	cpl_coord_mant
arg	53:66	53:74	7	channels
water	53:66	0:0	8	channels
arg	53:76	53:106	7	sizeof(*block->cpl_coord_mant)
op	53:76	0:0	8	sizeof
water	53:82	0:0	8	(
op	53:83	0:0	8	*
water	53:84	0:0	8	block
op	53:89	0:0	8	->
water	53:91	0:0	8	cpl_coord_mant
water	53:105	0:0	8	)
arg	54:30	54:40	7	alloc_fail
water	54:30	0:0	8	alloc_fail
water	54:41	0:0	6	;
water	55:8	0:0	6	}
for	56:8	70:8	4	(ch = 0 ;ch < channels;ch ++)
forinit	56:13	56:19	5	ch = 0 ;
water	56:13	0:0	6	ch
op	56:16	0:0	6	=
water	56:18	0:0	6	0
water	56:19	0:0	6	;
cond	56:21	56:26	5	ch < channels
water	56:21	0:0	6	ch
op	56:24	0:0	6	<
water	56:26	0:0	6	channels
forexpr	56:36	56:38	5	ch ++
water	56:36	0:0	6	ch
op	56:38	0:0	6	++
stmts	56:42	70:8	5	
water	56:42	0:0	6	{
water	58:12	0:0	6	block
op	58:17	0:0	6	->
water	58:19	0:0	6	grouped_exp
op	58:30	0:0	6	[
water	58:31	0:0	6	ch
op	58:33	0:0	6	]
op	58:35	0:0	6	=
op	58:37	0:0	6	&
water	58:38	0:0	6	s
op	58:39	0:0	6	->
water	58:41	0:0	6	grouped_exp_buffer
op	58:59	0:0	6	[
water	58:60	0:0	6	128
op	58:74	0:0	6	*
water	58:76	0:0	6	(
water	58:77	0:0	6	blk
op	58:81	0:0	6	*
water	58:83	0:0	6	channels
op	58:92	0:0	6	+
water	58:94	0:0	6	ch
water	58:96	0:0	6	)
op	58:97	0:0	6	]
water	58:98	0:0	6	;
water	59:12	0:0	6	block
op	59:17	0:0	6	->
water	59:19	0:0	6	psd
op	59:22	0:0	6	[
water	59:23	0:0	6	ch
op	59:25	0:0	6	]
op	59:35	0:0	6	=
op	59:37	0:0	6	&
water	59:38	0:0	6	s
op	59:39	0:0	6	->
water	59:41	0:0	6	psd_buffer
op	59:59	0:0	6	[
water	59:60	0:0	6	AC3_MAX_COEFS
op	59:74	0:0	6	*
water	59:76	0:0	6	(
water	59:77	0:0	6	blk
op	59:81	0:0	6	*
water	59:83	0:0	6	channels
op	59:92	0:0	6	+
water	59:94	0:0	6	ch
water	59:96	0:0	6	)
op	59:97	0:0	6	]
water	59:98	0:0	6	;
water	60:12	0:0	6	block
op	60:17	0:0	6	->
water	60:19	0:0	6	band_psd
op	60:27	0:0	6	[
water	60:28	0:0	6	ch
op	60:30	0:0	6	]
op	60:35	0:0	6	=
op	60:37	0:0	6	&
water	60:38	0:0	6	s
op	60:39	0:0	6	->
water	60:41	0:0	6	band_psd_buffer
op	60:59	0:0	6	[
water	60:60	0:0	6	64
op	60:74	0:0	6	*
water	60:76	0:0	6	(
water	60:77	0:0	6	blk
op	60:81	0:0	6	*
water	60:83	0:0	6	channels
op	60:92	0:0	6	+
water	60:94	0:0	6	ch
water	60:96	0:0	6	)
op	60:97	0:0	6	]
water	60:98	0:0	6	;
water	61:12	0:0	6	block
op	61:17	0:0	6	->
water	61:19	0:0	6	mask
op	61:23	0:0	6	[
water	61:24	0:0	6	ch
op	61:26	0:0	6	]
op	61:35	0:0	6	=
op	61:37	0:0	6	&
water	61:38	0:0	6	s
op	61:39	0:0	6	->
water	61:41	0:0	6	mask_buffer
op	61:59	0:0	6	[
water	61:60	0:0	6	64
op	61:74	0:0	6	*
water	61:76	0:0	6	(
water	61:77	0:0	6	blk
op	61:81	0:0	6	*
water	61:83	0:0	6	channels
op	61:92	0:0	6	+
water	61:94	0:0	6	ch
water	61:96	0:0	6	)
op	61:97	0:0	6	]
water	61:98	0:0	6	;
water	62:12	0:0	6	block
op	62:17	0:0	6	->
water	62:19	0:0	6	qmant
op	62:24	0:0	6	[
water	62:25	0:0	6	ch
op	62:27	0:0	6	]
op	62:35	0:0	6	=
op	62:37	0:0	6	&
water	62:38	0:0	6	s
op	62:39	0:0	6	->
water	62:41	0:0	6	qmant_buffer
op	62:59	0:0	6	[
water	62:60	0:0	6	AC3_MAX_COEFS
op	62:74	0:0	6	*
water	62:76	0:0	6	(
water	62:77	0:0	6	blk
op	62:81	0:0	6	*
water	62:83	0:0	6	channels
op	62:92	0:0	6	+
water	62:94	0:0	6	ch
water	62:96	0:0	6	)
op	62:97	0:0	6	]
water	62:98	0:0	6	;
if	63:12	66:12	6	(s -> cpl_enabled)
cond	63:16	63:19	7	s -> cpl_enabled
water	63:16	0:0	8	s
op	63:17	0:0	8	->
water	63:19	0:0	8	cpl_enabled
stmts	63:32	66:12	7	
water	63:32	0:0	8	{
water	64:16	0:0	8	block
op	64:21	0:0	8	->
water	64:23	0:0	8	cpl_coord_exp
op	64:36	0:0	8	[
water	64:37	0:0	8	ch
op	64:39	0:0	8	]
op	64:42	0:0	8	=
op	64:44	0:0	8	&
water	64:45	0:0	8	s
op	64:46	0:0	8	->
water	64:48	0:0	8	cpl_coord_exp_buffer
op	64:69	0:0	8	[
water	64:70	0:0	8	16
op	64:74	0:0	8	*
water	64:76	0:0	8	(
water	64:77	0:0	8	blk
op	64:81	0:0	8	*
water	64:83	0:0	8	channels
op	64:92	0:0	8	+
water	64:94	0:0	8	ch
water	64:96	0:0	8	)
op	64:97	0:0	8	]
water	64:98	0:0	8	;
water	65:16	0:0	8	block
op	65:21	0:0	8	->
water	65:23	0:0	8	cpl_coord_mant
op	65:37	0:0	8	[
water	65:38	0:0	8	ch
op	65:40	0:0	8	]
op	65:42	0:0	8	=
op	65:44	0:0	8	&
water	65:45	0:0	8	s
op	65:46	0:0	8	->
water	65:48	0:0	8	cpl_coord_mant_buffer
op	65:69	0:0	8	[
water	65:70	0:0	8	16
op	65:74	0:0	8	*
water	65:76	0:0	8	(
water	65:77	0:0	8	blk
op	65:81	0:0	8	*
water	65:83	0:0	8	channels
op	65:92	0:0	8	+
water	65:94	0:0	8	ch
water	65:96	0:0	8	)
op	65:97	0:0	8	]
water	65:98	0:0	8	;
water	66:12	0:0	8	}
water	68:12	0:0	6	block
op	68:17	0:0	6	->
water	68:19	0:0	6	exp
op	68:22	0:0	6	[
water	68:23	0:0	6	ch
op	68:25	0:0	6	]
op	68:35	0:0	6	=
op	68:37	0:0	6	&
water	68:38	0:0	6	s
op	68:39	0:0	6	->
water	68:41	0:0	6	exp_buffer
op	68:59	0:0	6	[
water	68:60	0:0	6	AC3_MAX_COEFS
op	68:74	0:0	6	*
water	68:76	0:0	6	(
water	68:77	0:0	6	s
op	68:78	0:0	6	->
water	68:80	0:0	6	num_blocks
op	68:91	0:0	6	*
water	68:93	0:0	6	ch
op	68:96	0:0	6	+
water	68:98	0:0	6	blk
water	68:101	0:0	6	)
op	68:102	0:0	6	]
water	68:103	0:0	6	;
water	69:12	0:0	6	block
op	69:17	0:0	6	->
water	69:19	0:0	6	mdct_coef
op	69:28	0:0	6	[
water	69:29	0:0	6	ch
op	69:31	0:0	6	]
op	69:35	0:0	6	=
op	69:37	0:0	6	&
water	69:38	0:0	6	s
op	69:39	0:0	6	->
water	69:41	0:0	6	mdct_coef_buffer
op	69:59	0:0	6	[
water	69:60	0:0	6	AC3_MAX_COEFS
op	69:74	0:0	6	*
water	69:76	0:0	6	(
water	69:77	0:0	6	s
op	69:78	0:0	6	->
water	69:80	0:0	6	num_blocks
op	69:91	0:0	6	*
water	69:93	0:0	6	ch
op	69:96	0:0	6	+
water	69:98	0:0	6	blk
water	69:101	0:0	6	)
op	69:102	0:0	6	]
water	69:103	0:0	6	;
water	70:8	0:0	6	}
water	71:4	0:0	4	}
if	72:4	82:4	2	(! s -> fixed_point)
cond	72:8	72:12	3	! s -> fixed_point
op	72:8	0:0	4	!
water	72:9	0:0	4	s
op	72:10	0:0	4	->
water	72:12	0:0	4	fixed_point
stmts	72:25	82:4	3	
water	72:25	0:0	4	{
call	73:8	74:67	4	FF_ALLOCZ_ARRAY_OR_GOTO
arg	73:32	73:37	5	avctx
water	73:32	0:0	6	avctx
arg	73:39	73:59	5	s->fixed_coef_buffer
water	73:39	0:0	6	s
op	73:40	0:0	6	->
water	73:42	0:0	6	fixed_coef_buffer
arg	73:61	73:72	5	total_coefs
water	73:61	0:0	6	total_coefs
arg	74:26	74:55	5	sizeof(*s->fixed_coef_buffer)
op	74:26	0:0	6	sizeof
water	74:32	0:0	6	(
op	74:33	0:0	6	*
water	74:34	0:0	6	s
op	74:35	0:0	6	->
water	74:37	0:0	6	fixed_coef_buffer
water	74:54	0:0	6	)
arg	74:57	74:67	5	alloc_fail
water	74:57	0:0	6	alloc_fail
water	74:68	0:0	4	;
for	75:8	81:8	4	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	75:13	75:20	5	blk = 0 ;
water	75:13	0:0	6	blk
op	75:17	0:0	6	=
water	75:19	0:0	6	0
water	75:20	0:0	6	;
cond	75:22	75:31	5	blk < s -> num_blocks
water	75:22	0:0	6	blk
op	75:26	0:0	6	<
water	75:28	0:0	6	s
op	75:29	0:0	6	->
water	75:31	0:0	6	num_blocks
forexpr	75:43	75:46	5	blk ++
water	75:43	0:0	6	blk
op	75:46	0:0	6	++
stmts	75:50	81:8	5	
water	75:50	0:0	6	{
decl	76:12	76:45	6	AC3Block	*block
op	76:28	0:0	6	=
op	76:30	0:0	6	&
water	76:31	0:0	6	s
op	76:32	0:0	6	->
water	76:34	0:0	6	blocks
op	76:40	0:0	6	[
water	76:41	0:0	6	blk
op	76:44	0:0	6	]
call	77:12	78:68	6	FF_ALLOCZ_ARRAY_OR_GOTO
arg	77:36	77:41	7	avctx
water	77:36	0:0	8	avctx
arg	77:43	77:60	7	block->fixed_coef
water	77:43	0:0	8	block
op	77:48	0:0	8	->
water	77:50	0:0	8	fixed_coef
arg	77:62	77:70	7	channels
water	77:62	0:0	8	channels
arg	78:30	78:56	7	sizeof(*block->fixed_coef)
op	78:30	0:0	8	sizeof
water	78:36	0:0	8	(
op	78:37	0:0	8	*
water	78:38	0:0	8	block
op	78:43	0:0	8	->
water	78:45	0:0	8	fixed_coef
water	78:55	0:0	8	)
arg	78:58	78:68	7	alloc_fail
water	78:58	0:0	8	alloc_fail
water	78:69	0:0	6	;
for	79:12	80:105	6	(ch = 0 ;ch < channels;ch ++)
forinit	79:17	79:23	7	ch = 0 ;
water	79:17	0:0	8	ch
op	79:20	0:0	8	=
water	79:22	0:0	8	0
water	79:23	0:0	8	;
cond	79:25	79:30	7	ch < channels
water	79:25	0:0	8	ch
op	79:28	0:0	8	<
water	79:30	0:0	8	channels
forexpr	79:40	79:42	7	ch ++
water	79:40	0:0	8	ch
op	79:42	0:0	8	++
stmts	80:16	80:105	7	
water	80:16	0:0	8	block
op	80:21	0:0	8	->
water	80:23	0:0	8	fixed_coef
op	80:33	0:0	8	[
water	80:34	0:0	8	ch
op	80:36	0:0	8	]
op	80:38	0:0	8	=
op	80:40	0:0	8	&
water	80:41	0:0	8	s
op	80:42	0:0	8	->
water	80:44	0:0	8	fixed_coef_buffer
op	80:61	0:0	8	[
water	80:62	0:0	8	AC3_MAX_COEFS
op	80:76	0:0	8	*
water	80:78	0:0	8	(
water	80:79	0:0	8	s
op	80:80	0:0	8	->
water	80:82	0:0	8	num_blocks
op	80:93	0:0	8	*
water	80:95	0:0	8	ch
op	80:98	0:0	8	+
water	80:100	0:0	8	blk
water	80:103	0:0	8	)
op	80:104	0:0	8	]
water	80:105	0:0	8	;
water	81:8	0:0	6	}
water	82:4	0:0	4	}
else	82:6	90:4	2
stmts	82:11	90:4	3	
water	82:11	0:0	4	{
for	83:8	89:8	4	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	83:13	83:20	5	blk = 0 ;
water	83:13	0:0	6	blk
op	83:17	0:0	6	=
water	83:19	0:0	6	0
water	83:20	0:0	6	;
cond	83:22	83:31	5	blk < s -> num_blocks
water	83:22	0:0	6	blk
op	83:26	0:0	6	<
water	83:28	0:0	6	s
op	83:29	0:0	6	->
water	83:31	0:0	6	num_blocks
forexpr	83:43	83:46	5	blk ++
water	83:43	0:0	6	blk
op	83:46	0:0	6	++
stmts	83:50	89:8	5	
water	83:50	0:0	6	{
decl	84:12	84:45	6	AC3Block	*block
op	84:28	0:0	6	=
op	84:30	0:0	6	&
water	84:31	0:0	6	s
op	84:32	0:0	6	->
water	84:34	0:0	6	blocks
op	84:40	0:0	6	[
water	84:41	0:0	6	blk
op	84:44	0:0	6	]
call	85:12	86:68	6	FF_ALLOCZ_ARRAY_OR_GOTO
arg	85:36	85:41	7	avctx
water	85:36	0:0	8	avctx
arg	85:43	85:60	7	block->fixed_coef
water	85:43	0:0	8	block
op	85:48	0:0	8	->
water	85:50	0:0	8	fixed_coef
arg	85:62	85:70	7	channels
water	85:62	0:0	8	channels
arg	86:30	86:56	7	sizeof(*block->fixed_coef)
op	86:30	0:0	8	sizeof
water	86:36	0:0	8	(
op	86:37	0:0	8	*
water	86:38	0:0	8	block
op	86:43	0:0	8	->
water	86:45	0:0	8	fixed_coef
water	86:55	0:0	8	)
arg	86:58	86:68	7	alloc_fail
water	86:58	0:0	8	alloc_fail
water	86:69	0:0	6	;
for	87:12	88:71	6	(ch = 0 ;ch < channels;ch ++)
forinit	87:17	87:23	7	ch = 0 ;
water	87:17	0:0	8	ch
op	87:20	0:0	8	=
water	87:22	0:0	8	0
water	87:23	0:0	8	;
cond	87:25	87:30	7	ch < channels
water	87:25	0:0	8	ch
op	87:28	0:0	8	<
water	87:30	0:0	8	channels
forexpr	87:40	87:42	7	ch ++
water	87:40	0:0	8	ch
op	87:42	0:0	8	++
stmts	88:16	88:71	7	
water	88:16	0:0	8	block
op	88:21	0:0	8	->
water	88:23	0:0	8	fixed_coef
op	88:33	0:0	8	[
water	88:34	0:0	8	ch
op	88:36	0:0	8	]
op	88:38	0:0	8	=
water	88:40	0:0	8	(
water	88:41	0:0	8	int32_t
op	88:49	0:0	8	*
water	88:50	0:0	8	)
water	88:51	0:0	8	block
op	88:56	0:0	8	->
water	88:58	0:0	8	mdct_coef
op	88:67	0:0	8	[
water	88:68	0:0	8	ch
op	88:70	0:0	8	]
water	88:71	0:0	8	;
water	89:8	0:0	6	}
water	90:4	0:0	4	}
return	91:4	91:12	2	0
water	91:11	0:0	3	0
label	92:0	92:10	2	alloc_fail :
return	93:4	93:26	2	AVERROR(ENOMEM)
call	93:11	93:25	3	AVERROR
arg	93:19	93:25	4	ENOMEM
water	93:19	0:0	5	ENOMEM

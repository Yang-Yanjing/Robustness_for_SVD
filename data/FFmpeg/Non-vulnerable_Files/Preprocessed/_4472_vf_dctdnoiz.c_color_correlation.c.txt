func	1:24	23:0	0	void	color_correlation
params	1:46	0:0	1	
param	1:47	1:59	2	uint8_t *	dst
param	1:61	1:77	2	int	dst_linesize
param	2:47	2:58	2	float * *	src
param	2:60	2:76	2	int	src_linesize
param	3:47	3:52	2	int	w
param	3:54	3:59	2	int	h
param	4:47	4:52	2	int	r
param	4:54	4:59	2	int	g
param	4:61	4:66	2	int	b
stmnts	0:0	22:4	1	
decl	6:4	6:12	2	int	x
water	6:9	0:0	2	,
decl	6:4	6:12	2	int	y
decl	7:4	7:31	2	const float	*src_r
op	7:23	0:0	2	=
water	7:25	0:0	2	src
op	7:28	0:0	2	[
water	7:29	0:0	2	0
op	7:30	0:0	2	]
decl	8:4	8:31	2	const float	*src_g
op	8:23	0:0	2	=
water	8:25	0:0	2	src
op	8:28	0:0	2	[
water	8:29	0:0	2	1
op	8:30	0:0	2	]
decl	9:4	9:31	2	const float	*src_b
op	9:23	0:0	2	=
water	9:25	0:0	2	src
op	9:28	0:0	2	[
water	9:29	0:0	2	2
op	9:30	0:0	2	]
for	10:4	22:4	2	(y = 0 ;y < h;y ++)
forinit	10:9	10:14	3	y = 0 ;
water	10:9	0:0	4	y
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:20	3	y < h
water	10:16	0:0	4	y
op	10:18	0:0	4	<
water	10:20	0:0	4	h
forexpr	10:23	10:24	3	y ++
water	10:23	0:0	4	y
op	10:24	0:0	4	++
stmts	10:28	22:4	3	
water	10:28	0:0	4	{
decl	11:8	11:27	4	uint8_t	*dstp
op	11:22	0:0	4	=
water	11:24	0:0	4	dst
for	12:8	17:8	4	(x = 0 ;x < w;x ++)
forinit	12:13	12:18	5	x = 0 ;
water	12:13	0:0	6	x
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	x < w
water	12:20	0:0	6	x
op	12:22	0:0	6	<
water	12:24	0:0	6	w
forexpr	12:27	12:28	5	x ++
water	12:27	0:0	6	x
op	12:28	0:0	6	++
stmts	12:32	17:8	5	
water	12:32	0:0	6	{
water	13:12	0:0	6	dstp
op	13:16	0:0	6	[
water	13:17	0:0	6	r
op	13:18	0:0	6	]
op	13:20	0:0	6	=
call	13:22	13:105	6	av_clip_uint8
arg	13:36	13:105	7	src_r[x]*DCT3X3_0_0+src_g[x]*DCT3X3_1_0+src_b[x]*DCT3X3_2_0
water	13:36	0:0	8	src_r
op	13:41	0:0	8	[
water	13:42	0:0	8	x
op	13:43	0:0	8	]
op	13:45	0:0	8	*
water	13:47	0:0	8	DCT3X3_0_0
op	13:58	0:0	8	+
water	13:60	0:0	8	src_g
op	13:65	0:0	8	[
water	13:66	0:0	8	x
op	13:67	0:0	8	]
op	13:69	0:0	8	*
water	13:71	0:0	8	DCT3X3_1_0
op	13:82	0:0	8	+
water	13:84	0:0	8	src_b
op	13:89	0:0	8	[
water	13:90	0:0	8	x
op	13:91	0:0	8	]
op	13:93	0:0	8	*
water	13:95	0:0	8	DCT3X3_2_0
water	13:106	0:0	6	;
water	14:12	0:0	6	dstp
op	14:16	0:0	6	[
water	14:17	0:0	6	g
op	14:18	0:0	6	]
op	14:20	0:0	6	=
call	14:22	14:105	6	av_clip_uint8
arg	14:36	14:105	7	src_r[x]*DCT3X3_0_1+src_b[x]*DCT3X3_2_1
water	14:36	0:0	8	src_r
op	14:41	0:0	8	[
water	14:42	0:0	8	x
op	14:43	0:0	8	]
op	14:45	0:0	8	*
water	14:47	0:0	8	DCT3X3_0_1
op	14:58	0:0	8	+
water	14:84	0:0	8	src_b
op	14:89	0:0	8	[
water	14:90	0:0	8	x
op	14:91	0:0	8	]
op	14:93	0:0	8	*
water	14:95	0:0	8	DCT3X3_2_1
water	14:106	0:0	6	;
water	15:12	0:0	6	dstp
op	15:16	0:0	6	[
water	15:17	0:0	6	b
op	15:18	0:0	6	]
op	15:20	0:0	6	=
call	15:22	15:105	6	av_clip_uint8
arg	15:36	15:105	7	src_r[x]*DCT3X3_0_2+src_g[x]*DCT3X3_1_2+src_b[x]*DCT3X3_2_2
water	15:36	0:0	8	src_r
op	15:41	0:0	8	[
water	15:42	0:0	8	x
op	15:43	0:0	8	]
op	15:45	0:0	8	*
water	15:47	0:0	8	DCT3X3_0_2
op	15:58	0:0	8	+
water	15:60	0:0	8	src_g
op	15:65	0:0	8	[
water	15:66	0:0	8	x
op	15:67	0:0	8	]
op	15:69	0:0	8	*
water	15:71	0:0	8	DCT3X3_1_2
op	15:82	0:0	8	+
water	15:84	0:0	8	src_b
op	15:89	0:0	8	[
water	15:90	0:0	8	x
op	15:91	0:0	8	]
op	15:93	0:0	8	*
water	15:95	0:0	8	DCT3X3_2_2
water	15:106	0:0	6	;
water	16:12	0:0	6	dstp
op	16:17	0:0	6	+=
water	16:20	0:0	6	3
water	16:21	0:0	6	;
water	17:8	0:0	6	}
water	18:8	0:0	4	dst
op	18:12	0:0	4	+=
water	18:15	0:0	4	dst_linesize
water	18:27	0:0	4	;
water	19:8	0:0	4	src_r
op	19:14	0:0	4	+=
water	19:17	0:0	4	src_linesize
water	19:29	0:0	4	;
water	20:8	0:0	4	src_g
op	20:14	0:0	4	+=
water	20:17	0:0	4	src_linesize
water	20:29	0:0	4	;
water	21:8	0:0	4	src_b
op	21:14	0:0	4	+=
water	21:17	0:0	4	src_linesize
water	21:29	0:0	4	;
water	22:4	0:0	4	}

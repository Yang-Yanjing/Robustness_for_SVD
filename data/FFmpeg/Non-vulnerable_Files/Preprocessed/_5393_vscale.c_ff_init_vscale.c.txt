func	1:0	37:0	0	int	ff_init_vscale
params	1:18	0:0	1	
param	1:19	1:32	2	SwsContext *	c
param	1:34	1:59	2	SwsFilterDescriptor *	desc
param	1:61	1:74	2	SwsSlice *	src
param	1:76	1:89	2	SwsSlice *	dst
stmnts	0:0	36:12	1	
decl	3:4	3:33	2	VScalerContext	*lumCtx
op	3:27	0:0	2	=
water	3:29	0:0	2	NULL
decl	4:4	4:33	2	VScalerContext	*chrCtx
op	4:27	0:0	2	=
water	4:29	0:0	2	NULL
if	5:4	23:4	2	(isPlanarYUV (c -> dstFormat ) || (isGray (c -> dstFormat ) && !isALPHA (c -> dstFormat ) ))
cond	5:8	5:84	3	isPlanarYUV (c -> dstFormat ) || (isGray (c -> dstFormat ) && !isALPHA (c -> dstFormat ) )
call	5:8	5:32	4	isPlanarYUV
arg	5:20	5:32	5	c->dstFormat
water	5:20	0:0	6	c
op	5:21	0:0	6	->
water	5:23	0:0	6	dstFormat
op	5:34	0:0	4	||
water	5:37	0:0	4	(
call	5:38	5:57	4	isGray
arg	5:45	5:57	5	c->dstFormat
water	5:45	0:0	6	c
op	5:46	0:0	6	->
water	5:48	0:0	6	dstFormat
op	5:59	0:0	4	&&
op	5:62	0:0	4	!
call	5:63	5:83	4	isALPHA
arg	5:71	5:83	5	c->dstFormat
water	5:71	0:0	6	c
op	5:72	0:0	6	->
water	5:74	0:0	6	dstFormat
water	5:84	0:0	4	)
stmts	5:87	23:4	3	
water	5:87	0:0	4	{
water	6:8	0:0	4	lumCtx
op	6:15	0:0	4	=
call	6:17	6:50	4	av_mallocz
arg	6:28	6:50	5	sizeof(VScalerContext)
op	6:28	0:0	6	sizeof
water	6:34	0:0	6	(
water	6:35	0:0	6	VScalerContext
water	6:49	0:0	6	)
water	6:51	0:0	4	;
if	7:8	8:34	4	(! lumCtx)
cond	7:12	7:13	5	! lumCtx
op	7:12	0:0	6	!
water	7:13	0:0	6	lumCtx
stmts	8:12	8:34	5	
return	8:12	8:34	6	AVERROR(ENOMEM)
call	8:19	8:33	7	AVERROR
arg	8:27	8:33	8	ENOMEM
water	8:27	0:0	9	ENOMEM
water	9:8	0:0	4	desc
op	9:12	0:0	4	[
water	9:13	0:0	4	0
op	9:14	0:0	4	]
op	9:15	0:0	4	.
water	9:16	0:0	4	process
op	9:24	0:0	4	=
water	9:26	0:0	4	lum_planar_vscale
water	9:43	0:0	4	;
water	10:8	0:0	4	desc
op	10:12	0:0	4	[
water	10:13	0:0	4	0
op	10:14	0:0	4	]
op	10:15	0:0	4	.
water	10:16	0:0	4	instance
op	10:25	0:0	4	=
water	10:27	0:0	4	lumCtx
water	10:33	0:0	4	;
water	11:8	0:0	4	desc
op	11:12	0:0	4	[
water	11:13	0:0	4	0
op	11:14	0:0	4	]
op	11:15	0:0	4	.
water	11:16	0:0	4	src
op	11:20	0:0	4	=
water	11:22	0:0	4	src
water	11:25	0:0	4	;
water	12:8	0:0	4	desc
op	12:12	0:0	4	[
water	12:13	0:0	4	0
op	12:14	0:0	4	]
op	12:15	0:0	4	.
water	12:16	0:0	4	dst
op	12:20	0:0	4	=
water	12:22	0:0	4	dst
water	12:25	0:0	4	;
water	13:8	0:0	4	desc
op	13:12	0:0	4	[
water	13:13	0:0	4	0
op	13:14	0:0	4	]
op	13:15	0:0	4	.
water	13:16	0:0	4	alpha
op	13:22	0:0	4	=
water	13:24	0:0	4	c
op	13:25	0:0	4	->
water	13:27	0:0	4	alpPixBuf
op	13:37	0:0	4	!=
water	13:40	0:0	4	0
water	13:41	0:0	4	;
if	14:8	22:8	4	(!isGray (c -> dstFormat ))
cond	14:12	14:32	5	!isGray (c -> dstFormat )
op	14:12	0:0	6	!
call	14:13	14:32	6	isGray
arg	14:20	14:32	7	c->dstFormat
water	14:20	0:0	8	c
op	14:21	0:0	8	->
water	14:23	0:0	8	dstFormat
stmts	14:35	22:8	5	
water	14:35	0:0	6	{
water	15:12	0:0	6	chrCtx
op	15:19	0:0	6	=
call	15:21	15:54	6	av_mallocz
arg	15:32	15:54	7	sizeof(VScalerContext)
op	15:32	0:0	8	sizeof
water	15:38	0:0	8	(
water	15:39	0:0	8	VScalerContext
water	15:53	0:0	8	)
water	15:55	0:0	6	;
if	16:12	17:38	6	(! chrCtx)
cond	16:16	16:17	7	! chrCtx
op	16:16	0:0	8	!
water	16:17	0:0	8	chrCtx
stmts	17:16	17:38	7	
return	17:16	17:38	8	AVERROR(ENOMEM)
call	17:23	17:37	9	AVERROR
arg	17:31	17:37	10	ENOMEM
water	17:31	0:0	11	ENOMEM
water	18:12	0:0	6	desc
op	18:16	0:0	6	[
water	18:17	0:0	6	1
op	18:18	0:0	6	]
op	18:19	0:0	6	.
water	18:20	0:0	6	process
op	18:28	0:0	6	=
water	18:30	0:0	6	chr_planar_vscale
water	18:47	0:0	6	;
water	19:12	0:0	6	desc
op	19:16	0:0	6	[
water	19:17	0:0	6	1
op	19:18	0:0	6	]
op	19:19	0:0	6	.
water	19:20	0:0	6	instance
op	19:29	0:0	6	=
water	19:31	0:0	6	chrCtx
water	19:37	0:0	6	;
water	20:12	0:0	6	desc
op	20:16	0:0	6	[
water	20:17	0:0	6	1
op	20:18	0:0	6	]
op	20:19	0:0	6	.
water	20:20	0:0	6	src
op	20:24	0:0	6	=
water	20:26	0:0	6	src
water	20:29	0:0	6	;
water	21:12	0:0	6	desc
op	21:16	0:0	6	[
water	21:17	0:0	6	1
op	21:18	0:0	6	]
op	21:19	0:0	6	.
water	21:20	0:0	6	dst
op	21:24	0:0	6	=
water	21:26	0:0	6	dst
water	21:29	0:0	6	;
water	22:8	0:0	6	}
water	23:4	0:0	4	}
else	23:6	33:4	2
stmts	23:11	33:4	3	
water	23:11	0:0	4	{
water	24:8	0:0	4	lumCtx
op	24:15	0:0	4	=
call	24:17	24:59	4	av_mallocz_array
arg	24:34	24:56	5	sizeof(VScalerContext)
op	24:34	0:0	6	sizeof
water	24:40	0:0	6	(
water	24:41	0:0	6	VScalerContext
water	24:55	0:0	6	)
arg	24:58	24:59	5	2
water	24:58	0:0	6	2
water	24:60	0:0	4	;
if	25:8	26:34	4	(! lumCtx)
cond	25:12	25:13	5	! lumCtx
op	25:12	0:0	6	!
water	25:13	0:0	6	lumCtx
stmts	26:12	26:34	5	
return	26:12	26:34	6	AVERROR(ENOMEM)
call	26:19	26:33	7	AVERROR
arg	26:27	26:33	8	ENOMEM
water	26:27	0:0	9	ENOMEM
water	27:8	0:0	4	chrCtx
op	27:15	0:0	4	=
op	27:17	0:0	4	&
water	27:18	0:0	4	lumCtx
op	27:24	0:0	4	[
water	27:25	0:0	4	1
op	27:26	0:0	4	]
water	27:27	0:0	4	;
water	28:8	0:0	4	desc
op	28:12	0:0	4	[
water	28:13	0:0	4	0
op	28:14	0:0	4	]
op	28:15	0:0	4	.
water	28:16	0:0	4	process
op	28:24	0:0	4	=
water	28:26	0:0	4	c
op	28:27	0:0	4	->
water	28:29	0:0	4	yuv2packedX
water	28:41	0:0	4	?
water	28:43	0:0	4	packed_vscale
water	28:57	0:0	4	:
water	28:59	0:0	4	any_vscale
water	28:69	0:0	4	;
water	29:8	0:0	4	desc
op	29:12	0:0	4	[
water	29:13	0:0	4	0
op	29:14	0:0	4	]
op	29:15	0:0	4	.
water	29:16	0:0	4	instance
op	29:25	0:0	4	=
water	29:27	0:0	4	lumCtx
water	29:33	0:0	4	;
water	30:8	0:0	4	desc
op	30:12	0:0	4	[
water	30:13	0:0	4	0
op	30:14	0:0	4	]
op	30:15	0:0	4	.
water	30:16	0:0	4	src
op	30:20	0:0	4	=
water	30:22	0:0	4	src
water	30:25	0:0	4	;
water	31:8	0:0	4	desc
op	31:12	0:0	4	[
water	31:13	0:0	4	0
op	31:14	0:0	4	]
op	31:15	0:0	4	.
water	31:16	0:0	4	dst
op	31:20	0:0	4	=
water	31:22	0:0	4	dst
water	31:25	0:0	4	;
water	32:8	0:0	4	desc
op	32:12	0:0	4	[
water	32:13	0:0	4	0
op	32:14	0:0	4	]
op	32:15	0:0	4	.
water	32:16	0:0	4	alpha
op	32:22	0:0	4	=
water	32:24	0:0	4	c
op	32:25	0:0	4	->
water	32:27	0:0	4	alpPixBuf
op	32:37	0:0	4	!=
water	32:40	0:0	4	0
water	32:41	0:0	4	;
water	33:4	0:0	4	}
call	34:4	35:87	2	ff_init_vscale_pfn
arg	34:23	34:24	3	c
water	34:23	0:0	4	c
arg	34:26	34:39	3	c->yuv2plane1
water	34:26	0:0	4	c
op	34:27	0:0	4	->
water	34:29	0:0	4	yuv2plane1
arg	34:41	34:54	3	c->yuv2planeX
water	34:41	0:0	4	c
op	34:42	0:0	4	->
water	34:44	0:0	4	yuv2planeX
arg	34:56	34:69	3	c->yuv2nv12cX
water	34:56	0:0	4	c
op	34:57	0:0	4	->
water	34:59	0:0	4	yuv2nv12cX
arg	35:8	35:22	3	c->yuv2packed1
water	35:8	0:0	4	c
op	35:9	0:0	4	->
water	35:11	0:0	4	yuv2packed1
arg	35:24	35:38	3	c->yuv2packed2
water	35:24	0:0	4	c
op	35:25	0:0	4	->
water	35:27	0:0	4	yuv2packed2
arg	35:40	35:54	3	c->yuv2packedX
water	35:40	0:0	4	c
op	35:41	0:0	4	->
water	35:43	0:0	4	yuv2packedX
arg	35:56	35:67	3	c->yuv2anyX
water	35:56	0:0	4	c
op	35:57	0:0	4	->
water	35:59	0:0	4	yuv2anyX
arg	35:69	35:87	3	c->use_mmx_vfilter
water	35:69	0:0	4	c
op	35:70	0:0	4	->
water	35:72	0:0	4	use_mmx_vfilter
water	35:88	0:0	2	;
return	36:4	36:12	2	0
water	36:11	0:0	3	0

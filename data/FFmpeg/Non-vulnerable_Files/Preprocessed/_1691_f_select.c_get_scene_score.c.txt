func	1:0	33:0	0	static double	get_scene_score
params	1:29	0:0	1	
param	1:30	1:50	2	AVFilterContext *	ctx
param	1:52	1:66	2	AVFrame *	frame
stmnts	0:0	32:14	1	
decl	3:4	3:18	2	double	ret
op	3:15	0:0	2	=
water	3:17	0:0	2	0
decl	4:4	4:37	2	SelectContext	*select
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:46	2	AVFrame	*prev_picref
op	5:25	0:0	2	=
water	5:27	0:0	2	select
op	5:33	0:0	2	->
water	5:35	0:0	2	prev_picref
if	6:4	30:4	2	(prev_picref && frame -> height == prev_picref -> height && frame -> width == prev_picref -> width)
cond	6:8	8:38	3	prev_picref && frame -> height == prev_picref -> height && frame -> width == prev_picref -> width
water	6:8	0:0	4	prev_picref
op	6:20	0:0	4	&&
water	7:8	0:0	4	frame
op	7:13	0:0	4	->
water	7:15	0:0	4	height
op	7:22	0:0	4	==
water	7:25	0:0	4	prev_picref
op	7:36	0:0	4	->
water	7:38	0:0	4	height
op	7:45	0:0	4	&&
water	8:8	0:0	4	frame
op	8:13	0:0	4	->
water	8:15	0:0	4	width
op	8:22	0:0	4	==
water	8:25	0:0	4	prev_picref
op	8:36	0:0	4	->
water	8:38	0:0	4	width
stmts	8:45	30:4	3	
water	8:45	0:0	4	{
decl	9:8	9:28	4	int	x
water	9:13	0:0	4	,
decl	9:8	9:28	4	int	y
water	9:16	0:0	4	,
decl	9:8	9:28	4	int	nb_sad
op	9:25	0:0	4	=
water	9:27	0:0	4	0
decl	10:8	10:23	4	int64_t	sad
op	10:20	0:0	4	=
water	10:22	0:0	4	0
decl	11:8	11:25	4	double	mafd
water	11:19	0:0	4	,
decl	11:8	11:25	4	double	diff
decl	12:8	12:41	4	uint8_t	*p1
op	12:20	0:0	4	=
water	12:27	0:0	4	frame
op	12:32	0:0	4	->
water	12:34	0:0	4	data
op	12:38	0:0	4	[
water	12:39	0:0	4	0
op	12:40	0:0	4	]
decl	13:8	13:42	4	uint8_t	*p2
op	13:20	0:0	4	=
water	13:22	0:0	4	prev_picref
op	13:33	0:0	4	->
water	13:35	0:0	4	data
op	13:39	0:0	4	[
water	13:40	0:0	4	0
op	13:41	0:0	4	]
decl	14:8	14:56	4	const int	p1_linesize
op	14:30	0:0	4	=
water	14:38	0:0	4	frame
op	14:43	0:0	4	->
water	14:45	0:0	4	linesize
op	14:53	0:0	4	[
water	14:54	0:0	4	0
op	14:55	0:0	4	]
decl	15:8	15:56	4	const int	p2_linesize
op	15:30	0:0	4	=
water	15:32	0:0	4	prev_picref
op	15:43	0:0	4	->
water	15:45	0:0	4	linesize
op	15:53	0:0	4	[
water	15:54	0:0	4	0
op	15:55	0:0	4	]
for	16:8	23:8	4	(y = 0 ;y < frame -> height - 7;y += 8)
forinit	16:13	16:18	5	y = 0 ;
water	16:13	0:0	6	y
op	16:15	0:0	6	=
water	16:17	0:0	6	0
water	16:18	0:0	6	;
cond	16:20	16:40	5	y < frame -> height - 7
water	16:20	0:0	6	y
op	16:22	0:0	6	<
water	16:24	0:0	6	frame
op	16:29	0:0	6	->
water	16:31	0:0	6	height
op	16:38	0:0	6	-
water	16:40	0:0	6	7
forexpr	16:43	16:48	5	y += 8
water	16:43	0:0	6	y
op	16:45	0:0	6	+=
water	16:48	0:0	6	8
stmts	16:51	23:8	5	
water	16:51	0:0	6	{
for	17:12	20:12	6	(x = 0 ;x < frame -> width * 3 - 7;x += 8)
forinit	17:17	17:22	7	x = 0 ;
water	17:17	0:0	8	x
op	17:19	0:0	8	=
water	17:21	0:0	8	0
water	17:22	0:0	8	;
cond	17:24	17:45	7	x < frame -> width * 3 - 7
water	17:24	0:0	8	x
op	17:26	0:0	8	<
water	17:28	0:0	8	frame
op	17:33	0:0	8	->
water	17:35	0:0	8	width
op	17:40	0:0	8	*
water	17:41	0:0	8	3
op	17:43	0:0	8	-
water	17:45	0:0	8	7
forexpr	17:48	17:53	7	x += 8
water	17:48	0:0	8	x
op	17:50	0:0	8	+=
water	17:53	0:0	8	8
stmts	17:56	20:12	7	
water	17:56	0:0	8	{
water	18:16	0:0	8	sad
op	18:20	0:0	8	+=
call	18:23	18:75	8	select->sad
arg	18:35	18:41	9	p1+x
water	18:35	0:0	10	p1
op	18:38	0:0	10	+
water	18:40	0:0	10	x
arg	18:43	18:54	9	p1_linesize
water	18:43	0:0	10	p1_linesize
arg	18:56	18:62	9	p2+x
water	18:56	0:0	10	p2
op	18:59	0:0	10	+
water	18:61	0:0	10	x
arg	18:64	18:75	9	p2_linesize
water	18:64	0:0	10	p2_linesize
water	18:76	0:0	8	;
water	19:16	0:0	8	nb_sad
op	19:23	0:0	8	+=
water	19:26	0:0	8	8
op	19:28	0:0	8	*
water	19:30	0:0	8	8
water	19:31	0:0	8	;
water	20:12	0:0	8	}
water	21:12	0:0	6	p1
op	21:15	0:0	6	+=
water	21:18	0:0	6	8
op	21:20	0:0	6	*
water	21:22	0:0	6	p1_linesize
water	21:33	0:0	6	;
water	22:12	0:0	6	p2
op	22:15	0:0	6	+=
water	22:18	0:0	6	8
op	22:20	0:0	6	*
water	22:22	0:0	6	p2_linesize
water	22:33	0:0	6	;
water	23:8	0:0	6	}
call	24:8	24:15	4	emms_c
water	24:16	0:0	4	;
water	25:8	0:0	4	mafd
op	25:13	0:0	4	=
water	25:15	0:0	4	nb_sad
water	25:22	0:0	4	?
water	25:24	0:0	4	(
water	25:25	0:0	4	double
water	25:31	0:0	4	)
water	25:32	0:0	4	sad
op	25:36	0:0	4	/
water	25:38	0:0	4	nb_sad
water	25:45	0:0	4	:
water	25:47	0:0	4	0
water	25:48	0:0	4	;
water	26:8	0:0	4	diff
op	26:13	0:0	4	=
call	26:15	26:44	4	fabs
arg	26:20	26:44	5	mafd-select->prev_mafd
water	26:20	0:0	6	mafd
op	26:25	0:0	6	-
water	26:27	0:0	6	select
op	26:33	0:0	6	->
water	26:35	0:0	6	prev_mafd
water	26:45	0:0	4	;
water	27:8	0:0	4	ret
op	27:13	0:0	4	=
call	27:15	27:54	4	av_clipf
arg	27:24	27:48	5	FFMIN(mafd,diff)/100.
call	27:24	27:40	6	FFMIN
arg	27:30	27:34	7	mafd
water	27:30	0:0	8	mafd
arg	27:36	27:40	7	diff
water	27:36	0:0	8	diff
op	27:42	0:0	6	/
water	27:44	0:0	6	100
op	27:47	0:0	6	.
arg	27:50	27:51	5	0
water	27:50	0:0	6	0
arg	27:53	27:54	5	1
water	27:53	0:0	6	1
water	27:55	0:0	4	;
water	28:8	0:0	4	select
op	28:14	0:0	4	->
water	28:16	0:0	4	prev_mafd
op	28:26	0:0	4	=
water	28:28	0:0	4	mafd
water	28:32	0:0	4	;
call	29:8	29:34	4	av_frame_free
arg	29:22	29:34	5	&prev_picref
op	29:22	0:0	6	&
water	29:23	0:0	6	prev_picref
water	29:35	0:0	4	;
water	30:4	0:0	4	}
water	31:4	0:0	2	select
op	31:10	0:0	2	->
water	31:12	0:0	2	prev_picref
op	31:24	0:0	2	=
call	31:26	31:46	2	av_frame_clone
arg	31:41	31:46	3	frame
water	31:41	0:0	4	frame
water	31:47	0:0	2	;
return	32:4	32:14	2	ret
water	32:11	0:0	3	ret

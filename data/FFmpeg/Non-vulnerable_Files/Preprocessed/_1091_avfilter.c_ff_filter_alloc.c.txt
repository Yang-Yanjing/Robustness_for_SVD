func	1:0	64:0	0	AVFilterContext *	ff_filter_alloc
params	1:32	0:0	1	
param	1:33	1:55	2	const AVFilter *	filter
param	1:57	1:78	2	const char *	inst_name
stmnts	0:0	63:15	1	
decl	3:4	3:24	2	AVFilterContext	*ret
if	4:4	5:19	2	(! filter)
cond	4:8	4:9	3	! filter
op	4:8	0:0	4	!
water	4:9	0:0	4	filter
stmts	5:8	5:19	3	
return	5:8	5:19	4	NULL
water	5:15	0:0	5	NULL
water	6:4	0:0	2	ret
op	6:8	0:0	2	=
call	6:10	6:44	2	av_mallocz
arg	6:21	6:44	3	sizeof(AVFilterContext)
op	6:21	0:0	4	sizeof
water	6:27	0:0	4	(
water	6:28	0:0	4	AVFilterContext
water	6:43	0:0	4	)
water	6:45	0:0	2	;
if	7:4	8:19	2	(! ret)
cond	7:8	7:9	3	! ret
op	7:8	0:0	4	!
water	7:9	0:0	4	ret
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
water	9:4	0:0	2	ret
op	9:7	0:0	2	->
water	9:9	0:0	2	av_class
op	9:18	0:0	2	=
op	9:20	0:0	2	&
water	9:21	0:0	2	avfilter_class
water	9:35	0:0	2	;
water	10:4	0:0	2	ret
op	10:7	0:0	2	->
water	10:9	0:0	2	filter
op	10:18	0:0	2	=
water	10:20	0:0	2	filter
water	10:26	0:0	2	;
water	11:4	0:0	2	ret
op	11:7	0:0	2	->
water	11:9	0:0	2	name
op	11:18	0:0	2	=
water	11:20	0:0	2	inst_name
water	11:30	0:0	2	?
call	11:32	11:51	2	av_strdup
arg	11:42	11:51	3	inst_name
water	11:42	0:0	4	inst_name
water	11:53	0:0	2	:
water	11:55	0:0	2	NULL
water	11:59	0:0	2	;
if	12:4	16:4	2	(filter -> priv_size)
cond	12:8	12:16	3	filter -> priv_size
water	12:8	0:0	4	filter
op	12:14	0:0	4	->
water	12:16	0:0	4	priv_size
stmts	12:27	16:4	3	
water	12:27	0:0	4	{
water	13:8	0:0	4	ret
op	13:11	0:0	4	->
water	13:13	0:0	4	priv
op	13:22	0:0	4	=
call	13:24	13:52	4	av_mallocz
arg	13:35	13:52	5	filter->priv_size
water	13:35	0:0	6	filter
op	13:41	0:0	6	->
water	13:43	0:0	6	priv_size
water	13:53	0:0	4	;
if	14:8	15:20	4	(! ret -> priv)
cond	14:12	14:18	5	! ret -> priv
op	14:12	0:0	6	!
water	14:13	0:0	6	ret
op	14:16	0:0	6	->
water	14:18	0:0	6	priv
stmts	15:12	15:20	5	
goto	15:12	15:20	6	err
water	15:17	0:0	7	err
water	16:4	0:0	4	}
call	17:4	17:27	2	av_opt_set_defaults
arg	17:24	17:27	3	ret
water	17:24	0:0	4	ret
water	17:28	0:0	2	;
if	18:4	21:4	2	(filter -> priv_class)
cond	18:8	18:16	3	filter -> priv_class
water	18:8	0:0	4	filter
op	18:14	0:0	4	->
water	18:16	0:0	4	priv_class
stmts	18:28	21:4	3	
water	18:28	0:0	4	{
op	19:8	0:0	4	*
water	19:9	0:0	4	(
water	19:10	0:0	4	const
water	19:16	0:0	4	AVClass
op	19:23	0:0	4	*
op	19:24	0:0	4	*
water	19:25	0:0	4	)
water	19:26	0:0	4	ret
op	19:29	0:0	4	->
water	19:31	0:0	4	priv
op	19:36	0:0	4	=
water	19:38	0:0	4	filter
op	19:44	0:0	4	->
water	19:46	0:0	4	priv_class
water	19:56	0:0	4	;
call	20:8	20:37	4	av_opt_set_defaults
arg	20:28	20:37	5	ret->priv
water	20:28	0:0	6	ret
op	20:31	0:0	6	->
water	20:33	0:0	6	priv
water	20:38	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	ret
op	22:7	0:0	2	->
water	22:9	0:0	2	internal
op	22:18	0:0	2	=
call	22:20	22:53	2	av_mallocz
arg	22:31	22:53	3	sizeof(*ret->internal)
op	22:31	0:0	4	sizeof
water	22:37	0:0	4	(
op	22:38	0:0	4	*
water	22:39	0:0	4	ret
op	22:42	0:0	4	->
water	22:44	0:0	4	internal
water	22:52	0:0	4	)
water	22:54	0:0	2	;
if	23:4	24:16	2	(! ret -> internal)
cond	23:8	23:14	3	! ret -> internal
op	23:8	0:0	4	!
water	23:9	0:0	4	ret
op	23:12	0:0	4	->
water	23:14	0:0	4	internal
stmts	24:8	24:16	3	
goto	24:8	24:16	4	err
water	24:13	0:0	5	err
water	25:4	0:0	2	ret
op	25:7	0:0	2	->
water	25:9	0:0	2	internal
op	25:17	0:0	2	->
water	25:19	0:0	2	execute
op	25:27	0:0	2	=
water	25:29	0:0	2	default_execute
water	25:44	0:0	2	;
water	26:4	0:0	2	ret
op	26:7	0:0	2	->
water	26:9	0:0	2	nb_inputs
op	26:19	0:0	2	=
call	26:21	26:54	2	avfilter_pad_count
arg	26:40	26:54	3	filter->inputs
water	26:40	0:0	4	filter
op	26:46	0:0	4	->
water	26:48	0:0	4	inputs
water	26:55	0:0	2	;
if	27:4	35:4	2	(ret -> nb_inputs)
cond	27:8	27:13	3	ret -> nb_inputs
water	27:8	0:0	4	ret
op	27:11	0:0	4	->
water	27:13	0:0	4	nb_inputs
stmts	27:25	35:4	3	
water	27:25	0:0	4	{
water	28:8	0:0	4	ret
op	28:11	0:0	4	->
water	28:13	0:0	4	input_pads
op	28:26	0:0	4	=
call	28:28	28:79	4	av_malloc_array
arg	28:44	28:58	5	ret->nb_inputs
water	28:44	0:0	6	ret
op	28:47	0:0	6	->
water	28:49	0:0	6	nb_inputs
arg	28:60	28:79	5	sizeof(AVFilterPad)
op	28:60	0:0	6	sizeof
water	28:66	0:0	6	(
water	28:67	0:0	6	AVFilterPad
water	28:78	0:0	6	)
water	28:80	0:0	4	;
if	29:8	30:20	4	(! ret -> input_pads)
cond	29:12	29:18	5	! ret -> input_pads
op	29:12	0:0	6	!
water	29:13	0:0	6	ret
op	29:16	0:0	6	->
water	29:18	0:0	6	input_pads
stmts	30:12	30:20	5	
goto	30:12	30:20	6	err
water	30:17	0:0	7	err
call	31:8	31:84	4	memcpy
arg	31:15	31:30	5	ret->input_pads
water	31:15	0:0	6	ret
op	31:18	0:0	6	->
water	31:20	0:0	6	input_pads
arg	31:32	31:46	5	filter->inputs
water	31:32	0:0	6	filter
op	31:38	0:0	6	->
water	31:40	0:0	6	inputs
arg	31:48	31:84	5	sizeof(AVFilterPad)*ret->nb_inputs
op	31:48	0:0	6	sizeof
water	31:54	0:0	6	(
water	31:55	0:0	6	AVFilterPad
water	31:66	0:0	6	)
op	31:68	0:0	6	*
water	31:70	0:0	6	ret
op	31:73	0:0	6	->
water	31:75	0:0	6	nb_inputs
water	31:85	0:0	4	;
water	32:8	0:0	4	ret
op	32:11	0:0	4	->
water	32:13	0:0	4	inputs
op	32:26	0:0	4	=
call	32:28	32:82	4	av_mallocz_array
arg	32:45	32:59	5	ret->nb_inputs
water	32:45	0:0	6	ret
op	32:48	0:0	6	->
water	32:50	0:0	6	nb_inputs
arg	32:61	32:82	5	sizeof(AVFilterLink*)
op	32:61	0:0	6	sizeof
water	32:67	0:0	6	(
water	32:68	0:0	6	AVFilterLink
op	32:80	0:0	6	*
water	32:81	0:0	6	)
water	32:83	0:0	4	;
if	33:8	34:20	4	(! ret -> inputs)
cond	33:12	33:18	5	! ret -> inputs
op	33:12	0:0	6	!
water	33:13	0:0	6	ret
op	33:16	0:0	6	->
water	33:18	0:0	6	inputs
stmts	34:12	34:20	5	
goto	34:12	34:20	6	err
water	34:17	0:0	7	err
water	35:4	0:0	4	}
water	36:4	0:0	2	ret
op	36:7	0:0	2	->
water	36:9	0:0	2	nb_outputs
op	36:20	0:0	2	=
call	36:22	36:56	2	avfilter_pad_count
arg	36:41	36:56	3	filter->outputs
water	36:41	0:0	4	filter
op	36:47	0:0	4	->
water	36:49	0:0	4	outputs
water	36:57	0:0	2	;
if	37:4	45:4	2	(ret -> nb_outputs)
cond	37:8	37:13	3	ret -> nb_outputs
water	37:8	0:0	4	ret
op	37:11	0:0	4	->
water	37:13	0:0	4	nb_outputs
stmts	37:25	45:4	3	
water	37:25	0:0	4	{
water	38:8	0:0	4	ret
op	38:11	0:0	4	->
water	38:13	0:0	4	output_pads
op	38:26	0:0	4	=
call	38:28	38:80	4	av_malloc_array
arg	38:44	38:59	5	ret->nb_outputs
water	38:44	0:0	6	ret
op	38:47	0:0	6	->
water	38:49	0:0	6	nb_outputs
arg	38:61	38:80	5	sizeof(AVFilterPad)
op	38:61	0:0	6	sizeof
water	38:67	0:0	6	(
water	38:68	0:0	6	AVFilterPad
water	38:79	0:0	6	)
water	38:81	0:0	4	;
if	39:8	40:20	4	(! ret -> output_pads)
cond	39:12	39:18	5	! ret -> output_pads
op	39:12	0:0	6	!
water	39:13	0:0	6	ret
op	39:16	0:0	6	->
water	39:18	0:0	6	output_pads
stmts	40:12	40:20	5	
goto	40:12	40:20	6	err
water	40:17	0:0	7	err
call	41:8	41:87	4	memcpy
arg	41:15	41:31	5	ret->output_pads
water	41:15	0:0	6	ret
op	41:18	0:0	6	->
water	41:20	0:0	6	output_pads
arg	41:33	41:48	5	filter->outputs
water	41:33	0:0	6	filter
op	41:39	0:0	6	->
water	41:41	0:0	6	outputs
arg	41:50	41:87	5	sizeof(AVFilterPad)*ret->nb_outputs
op	41:50	0:0	6	sizeof
water	41:56	0:0	6	(
water	41:57	0:0	6	AVFilterPad
water	41:68	0:0	6	)
op	41:70	0:0	6	*
water	41:72	0:0	6	ret
op	41:75	0:0	6	->
water	41:77	0:0	6	nb_outputs
water	41:88	0:0	4	;
water	42:8	0:0	4	ret
op	42:11	0:0	4	->
water	42:13	0:0	4	outputs
op	42:26	0:0	4	=
call	42:28	42:83	4	av_mallocz_array
arg	42:45	42:60	5	ret->nb_outputs
water	42:45	0:0	6	ret
op	42:48	0:0	6	->
water	42:50	0:0	6	nb_outputs
arg	42:62	42:83	5	sizeof(AVFilterLink*)
op	42:62	0:0	6	sizeof
water	42:68	0:0	6	(
water	42:69	0:0	6	AVFilterLink
op	42:81	0:0	6	*
water	42:82	0:0	6	)
water	42:84	0:0	4	;
if	43:8	44:20	4	(! ret -> outputs)
cond	43:12	43:18	5	! ret -> outputs
op	43:12	0:0	6	!
water	43:13	0:0	6	ret
op	43:16	0:0	6	->
water	43:18	0:0	6	outputs
stmts	44:12	44:20	5	
goto	44:12	44:20	6	err
water	44:17	0:0	7	err
water	45:4	0:0	4	}
water	47:0	0:0	2	FF_DISABLE_DEPRECATION_WARNINGS
water	48:4	0:0	2	ret
op	48:7	0:0	2	->
water	48:9	0:0	2	output_count
op	48:22	0:0	2	=
water	48:24	0:0	2	ret
op	48:27	0:0	2	->
water	48:29	0:0	2	nb_outputs
water	48:39	0:0	2	;
water	49:4	0:0	2	ret
op	49:7	0:0	2	->
water	49:9	0:0	2	input_count
op	49:22	0:0	2	=
water	49:24	0:0	2	ret
op	49:27	0:0	2	->
water	49:29	0:0	2	nb_inputs
water	49:38	0:0	2	;
water	50:0	0:0	2	FF_ENABLE_DEPRECATION_WARNINGS
water	52:4	0:0	2	return
water	52:11	0:0	2	ret
water	52:14	0:0	2	;
label	53:0	53:3	2	err :
call	54:4	54:25	2	av_freep
arg	54:13	54:25	3	&ret->inputs
op	54:13	0:0	4	&
water	54:14	0:0	4	ret
op	54:17	0:0	4	->
water	54:19	0:0	4	inputs
water	54:26	0:0	2	;
call	55:4	55:29	2	av_freep
arg	55:13	55:29	3	&ret->input_pads
op	55:13	0:0	4	&
water	55:14	0:0	4	ret
op	55:17	0:0	4	->
water	55:19	0:0	4	input_pads
water	55:30	0:0	2	;
water	56:4	0:0	2	ret
op	56:7	0:0	2	->
water	56:9	0:0	2	nb_inputs
op	56:19	0:0	2	=
water	56:21	0:0	2	0
water	56:22	0:0	2	;
call	57:4	57:26	2	av_freep
arg	57:13	57:26	3	&ret->outputs
op	57:13	0:0	4	&
water	57:14	0:0	4	ret
op	57:17	0:0	4	->
water	57:19	0:0	4	outputs
water	57:27	0:0	2	;
call	58:4	58:30	2	av_freep
arg	58:13	58:30	3	&ret->output_pads
op	58:13	0:0	4	&
water	58:14	0:0	4	ret
op	58:17	0:0	4	->
water	58:19	0:0	4	output_pads
water	58:31	0:0	2	;
water	59:4	0:0	2	ret
op	59:7	0:0	2	->
water	59:9	0:0	2	nb_outputs
op	59:20	0:0	2	=
water	59:22	0:0	2	0
water	59:23	0:0	2	;
call	60:4	60:23	2	av_freep
arg	60:13	60:23	3	&ret->priv
op	60:13	0:0	4	&
water	60:14	0:0	4	ret
op	60:17	0:0	4	->
water	60:19	0:0	4	priv
water	60:24	0:0	2	;
call	61:4	61:27	2	av_freep
arg	61:13	61:27	3	&ret->internal
op	61:13	0:0	4	&
water	61:14	0:0	4	ret
op	61:17	0:0	4	->
water	61:19	0:0	4	internal
water	61:28	0:0	2	;
call	62:4	62:15	2	av_free
arg	62:12	62:15	3	ret
water	62:12	0:0	4	ret
water	62:16	0:0	2	;
return	63:4	63:15	2	NULL
water	63:11	0:0	3	NULL

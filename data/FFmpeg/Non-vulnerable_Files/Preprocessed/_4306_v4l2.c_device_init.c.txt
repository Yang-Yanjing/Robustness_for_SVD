func	1:0	35:0	0	static int	device_init
params	1:22	0:0	1	
param	1:23	1:43	2	AVFormatContext *	ctx
param	1:45	1:55	2	int *	width
param	1:57	1:68	2	int *	height
param	2:23	2:43	2	uint32_t	pixelformat
stmnts	0:0	34:14	1	
decl	4:4	4:41	2	struct video_data	*s
op	4:25	0:0	2	=
water	4:27	0:0	2	ctx
op	4:30	0:0	2	->
water	4:32	0:0	2	priv_data
decl	5:4	5:68	2	struct v4l2_format	fmt
op	5:27	0:0	2	=
water	5:29	0:0	2	{
op	5:31	0:0	2	.
water	5:32	0:0	2	type
op	5:37	0:0	2	=
water	5:39	0:0	2	V4L2_BUF_TYPE_VIDEO_CAPTURE
water	5:67	0:0	2	}
decl	6:4	6:15	2	int	res
op	6:12	0:0	2	=
water	6:14	0:0	2	0
water	7:4	0:0	2	fmt
op	7:7	0:0	2	.
water	7:8	0:0	2	fmt
op	7:11	0:0	2	.
water	7:12	0:0	2	pix
op	7:15	0:0	2	.
water	7:16	0:0	2	width
op	7:22	0:0	2	=
op	7:24	0:0	2	*
water	7:25	0:0	2	width
water	7:30	0:0	2	;
water	8:4	0:0	2	fmt
op	8:7	0:0	2	.
water	8:8	0:0	2	fmt
op	8:11	0:0	2	.
water	8:12	0:0	2	pix
op	8:15	0:0	2	.
water	8:16	0:0	2	height
op	8:23	0:0	2	=
op	8:25	0:0	2	*
water	8:26	0:0	2	height
water	8:32	0:0	2	;
water	9:4	0:0	2	fmt
op	9:7	0:0	2	.
water	9:8	0:0	2	fmt
op	9:11	0:0	2	.
water	9:12	0:0	2	pix
op	9:15	0:0	2	.
water	9:16	0:0	2	pixelformat
op	9:28	0:0	2	=
water	9:30	0:0	2	pixelformat
water	9:41	0:0	2	;
water	10:4	0:0	2	fmt
op	10:7	0:0	2	.
water	10:8	0:0	2	fmt
op	10:11	0:0	2	.
water	10:12	0:0	2	pix
op	10:15	0:0	2	.
water	10:16	0:0	2	field
op	10:22	0:0	2	=
water	10:24	0:0	2	V4L2_FIELD_ANY
water	10:38	0:0	2	;
if	13:4	14:28	2	(v4l2_ioctl (s -> fd ,VIDIOC_S_FMT ,& fmt ) < 0)
cond	13:8	13:48	3	v4l2_ioctl (s -> fd ,VIDIOC_S_FMT ,& fmt ) < 0
call	13:8	13:44	4	v4l2_ioctl
arg	13:19	13:24	5	s->fd
water	13:19	0:0	6	s
op	13:20	0:0	6	->
water	13:22	0:0	6	fd
arg	13:26	13:38	5	VIDIOC_S_FMT
water	13:26	0:0	6	VIDIOC_S_FMT
arg	13:40	13:44	5	&fmt
op	13:40	0:0	6	&
water	13:41	0:0	6	fmt
op	13:46	0:0	4	<
water	13:48	0:0	4	0
stmts	14:8	14:28	3	
water	14:8	0:0	4	res
op	14:12	0:0	4	=
call	14:14	14:27	4	AVERROR
arg	14:22	14:27	5	errno
water	14:22	0:0	6	errno
water	14:28	0:0	4	;
if	15:4	21:4	2	(( * width != fmt . fmt . pix . width ) || ( * height != fmt . fmt . pix . height ))
cond	15:8	15:71	3	( * width != fmt . fmt . pix . width ) || ( * height != fmt . fmt . pix . height )
water	15:8	0:0	4	(
op	15:9	0:0	4	*
water	15:10	0:0	4	width
op	15:16	0:0	4	!=
water	15:19	0:0	4	fmt
op	15:22	0:0	4	.
water	15:23	0:0	4	fmt
op	15:26	0:0	4	.
water	15:27	0:0	4	pix
op	15:30	0:0	4	.
water	15:31	0:0	4	width
water	15:36	0:0	4	)
op	15:38	0:0	4	||
water	15:41	0:0	4	(
op	15:42	0:0	4	*
water	15:43	0:0	4	height
op	15:50	0:0	4	!=
water	15:53	0:0	4	fmt
op	15:56	0:0	4	.
water	15:57	0:0	4	fmt
op	15:60	0:0	4	.
water	15:61	0:0	4	pix
op	15:64	0:0	4	.
water	15:65	0:0	4	height
water	15:71	0:0	4	)
stmts	15:74	21:4	3	
water	15:74	0:0	4	{
call	16:8	18:69	4	av_log
arg	16:15	16:18	5	ctx
water	16:15	0:0	6	ctx
arg	16:20	16:31	5	AV_LOG_INFO
water	16:20	0:0	6	AV_LOG_INFO
arg	17:15	17:72	5	"The V4L2 driver changed the video from %dx%d to %dx%d\n"
water	17:15	0:0	6	"The V4L2 driver changed the video from %dx%d to %dx%d\n"
arg	18:15	18:21	5	*width
op	18:15	0:0	6	*
water	18:16	0:0	6	width
arg	18:23	18:30	5	*height
op	18:23	0:0	6	*
water	18:24	0:0	6	height
arg	18:32	18:49	5	fmt.fmt.pix.width
water	18:32	0:0	6	fmt
op	18:35	0:0	6	.
water	18:36	0:0	6	fmt
op	18:39	0:0	6	.
water	18:40	0:0	6	pix
op	18:43	0:0	6	.
water	18:44	0:0	6	width
arg	18:51	18:69	5	fmt.fmt.pix.height
water	18:51	0:0	6	fmt
op	18:54	0:0	6	.
water	18:55	0:0	6	fmt
op	18:58	0:0	6	.
water	18:59	0:0	6	pix
op	18:62	0:0	6	.
water	18:63	0:0	6	height
water	18:70	0:0	4	;
op	19:8	0:0	4	*
water	19:9	0:0	4	width
op	19:15	0:0	4	=
water	19:17	0:0	4	fmt
op	19:20	0:0	4	.
water	19:21	0:0	4	fmt
op	19:24	0:0	4	.
water	19:25	0:0	4	pix
op	19:28	0:0	4	.
water	19:29	0:0	4	width
water	19:34	0:0	4	;
op	20:8	0:0	4	*
water	20:9	0:0	4	height
op	20:16	0:0	4	=
water	20:18	0:0	4	fmt
op	20:21	0:0	4	.
water	20:22	0:0	4	fmt
op	20:25	0:0	4	.
water	20:26	0:0	4	pix
op	20:29	0:0	4	.
water	20:30	0:0	4	height
water	20:36	0:0	4	;
water	21:4	0:0	4	}
if	22:4	28:4	2	(pixelformat != fmt . fmt . pix . pixelformat)
cond	22:8	22:35	3	pixelformat != fmt . fmt . pix . pixelformat
water	22:8	0:0	4	pixelformat
op	22:20	0:0	4	!=
water	22:23	0:0	4	fmt
op	22:26	0:0	4	.
water	22:27	0:0	4	fmt
op	22:30	0:0	4	.
water	22:31	0:0	4	pix
op	22:34	0:0	4	.
water	22:35	0:0	4	pixelformat
stmts	22:48	28:4	3	
water	22:48	0:0	4	{
call	23:8	26:51	4	av_log
arg	23:15	23:18	5	ctx
water	23:15	0:0	6	ctx
arg	23:20	23:32	5	AV_LOG_DEBUG
water	23:20	0:0	6	AV_LOG_DEBUG
arg	24:15	25:40	5	"The V4L2 driver changed the pixel format ""from 0x%08X to 0x%08X\n"
water	24:15	0:0	6	"The V4L2 driver changed the pixel format "
water	25:15	0:0	6	"from 0x%08X to 0x%08X\n"
arg	26:15	26:26	5	pixelformat
water	26:15	0:0	6	pixelformat
arg	26:28	26:51	5	fmt.fmt.pix.pixelformat
water	26:28	0:0	6	fmt
op	26:31	0:0	6	.
water	26:32	0:0	6	fmt
op	26:35	0:0	6	.
water	26:36	0:0	6	pix
op	26:39	0:0	6	.
water	26:40	0:0	6	pixelformat
water	26:52	0:0	4	;
water	27:8	0:0	4	res
op	27:12	0:0	4	=
call	27:14	27:28	4	AVERROR
arg	27:22	27:28	5	EINVAL
water	27:22	0:0	6	EINVAL
water	27:29	0:0	4	;
water	28:4	0:0	4	}
if	29:4	33:4	2	(fmt . fmt . pix . field == V4L2_FIELD_INTERLACED)
cond	29:8	29:29	3	fmt . fmt . pix . field == V4L2_FIELD_INTERLACED
water	29:8	0:0	4	fmt
op	29:11	0:0	4	.
water	29:12	0:0	4	fmt
op	29:15	0:0	4	.
water	29:16	0:0	4	pix
op	29:19	0:0	4	.
water	29:20	0:0	4	field
op	29:26	0:0	4	==
water	29:29	0:0	4	V4L2_FIELD_INTERLACED
stmts	29:52	33:4	3	
water	29:52	0:0	4	{
call	30:8	31:63	4	av_log
arg	30:15	30:18	5	ctx
water	30:15	0:0	6	ctx
arg	30:20	30:32	5	AV_LOG_DEBUG
water	30:20	0:0	6	AV_LOG_DEBUG
arg	31:15	31:63	5	"The V4L2 driver is using the interlaced mode\n"
water	31:15	0:0	6	"The V4L2 driver is using the interlaced mode\n"
water	31:64	0:0	4	;
water	32:8	0:0	4	s
op	32:9	0:0	4	->
water	32:11	0:0	4	interlaced
op	32:22	0:0	4	=
water	32:24	0:0	4	1
water	32:25	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:14	2	res
water	34:11	0:0	3	res

func	1:15	23:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	22:12	1	
decl	3:4	3:31	2	HQXContext	*hqx
op	3:20	0:0	2	=
water	3:22	0:0	2	ctx
op	3:25	0:0	2	->
water	3:27	0:0	2	priv
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	hqxfunc_t
water	4:27	0:0	2	hqxfuncs
op	4:35	0:0	2	[
op	4:36	0:0	2	]
op	4:38	0:0	2	=
water	4:40	0:0	2	{
water	4:41	0:0	2	hq2x
water	4:45	0:0	2	,
water	4:47	0:0	2	hq3x
water	4:51	0:0	2	,
water	4:53	0:0	2	hq4x
water	4:57	0:0	2	}
water	4:58	0:0	2	;
decl	5:4	5:14	2	uint32_t	c
decl	6:4	6:17	2	int	bg
water	6:10	0:0	2	,
decl	6:4	6:17	2	int	rg
water	6:14	0:0	2	,
decl	6:4	6:17	2	int	g
for	7:4	20:4	2	(bg = - 255 ;bg < 256;bg ++)
forinit	7:9	7:16	3	bg = - 255 ;
water	7:9	0:0	4	bg
op	7:11	0:0	4	=
op	7:12	0:0	4	-
water	7:13	0:0	4	255
water	7:16	0:0	4	;
cond	7:18	7:21	3	bg < 256
water	7:18	0:0	4	bg
op	7:20	0:0	4	<
water	7:21	0:0	4	256
forexpr	7:26	7:28	3	bg ++
water	7:26	0:0	4	bg
op	7:28	0:0	4	++
stmts	7:32	20:4	3	
water	7:32	0:0	4	{
for	8:8	19:8	4	(rg = - 255 ;rg < 256;rg ++)
forinit	8:13	8:20	5	rg = - 255 ;
water	8:13	0:0	6	rg
op	8:15	0:0	6	=
op	8:16	0:0	6	-
water	8:17	0:0	6	255
water	8:20	0:0	6	;
cond	8:22	8:25	5	rg < 256
water	8:22	0:0	6	rg
op	8:24	0:0	6	<
water	8:25	0:0	6	256
forexpr	8:30	8:32	5	rg ++
water	8:30	0:0	6	rg
op	8:32	0:0	6	++
stmts	8:36	19:8	5	
water	8:36	0:0	6	{
decl	9:12	9:72	6	const uint32_t	u
op	9:29	0:0	6	=
call	9:31	9:65	7	(uint32_t)
arg	9:42	9:65	8	(-169*rg+500*bg)/1000
water	9:42	0:0	9	(
op	9:43	0:0	9	-
water	9:44	0:0	9	169
op	9:47	0:0	9	*
water	9:48	0:0	9	rg
op	9:51	0:0	9	+
water	9:53	0:0	9	500
op	9:56	0:0	9	*
water	9:57	0:0	9	bg
water	9:59	0:0	9	)
op	9:60	0:0	9	/
water	9:61	0:0	9	1000
op	9:67	0:0	6	+
water	9:69	0:0	6	128
decl	10:12	10:72	6	const uint32_t	v
op	10:29	0:0	6	=
call	10:31	10:65	7	(uint32_t)
arg	10:42	10:65	8	(500*rg-81*bg)/1000
water	10:42	0:0	9	(
water	10:44	0:0	9	500
op	10:47	0:0	9	*
water	10:48	0:0	9	rg
op	10:51	0:0	9	-
water	10:54	0:0	9	81
op	10:56	0:0	9	*
water	10:57	0:0	9	bg
water	10:59	0:0	9	)
op	10:60	0:0	9	/
water	10:61	0:0	9	1000
op	10:67	0:0	6	+
water	10:69	0:0	6	128
decl	11:12	11:44	6	int	startg
op	11:23	0:0	6	=
call	11:25	11:43	7	FFMAX3
arg	11:32	11:35	8	-bg
op	11:32	0:0	9	-
water	11:33	0:0	9	bg
arg	11:37	11:40	8	-rg
op	11:37	0:0	9	-
water	11:38	0:0	9	rg
arg	11:42	11:43	8	0
water	11:42	0:0	9	0
decl	12:12	12:50	6	int	endg
op	12:21	0:0	6	=
call	12:23	12:49	7	FFMIN3
arg	12:30	12:36	8	255-bg
water	12:30	0:0	9	255
op	12:33	0:0	9	-
water	12:34	0:0	9	bg
arg	12:38	12:44	8	255-rg
water	12:38	0:0	9	255
op	12:41	0:0	9	-
water	12:42	0:0	9	rg
arg	12:46	12:49	8	255
water	12:46	0:0	9	255
decl	13:12	13:74	6	uint32_t	y
op	13:23	0:0	6	=
call	13:25	13:73	7	(uint32_t)
arg	13:36	13:73	8	(299*rg+1000*startg+114*bg)/1000
water	13:36	0:0	9	(
water	13:38	0:0	9	299
op	13:41	0:0	9	*
water	13:42	0:0	9	rg
op	13:45	0:0	9	+
water	13:47	0:0	9	1000
op	13:51	0:0	9	*
water	13:52	0:0	9	startg
op	13:59	0:0	9	+
water	13:61	0:0	9	114
op	13:64	0:0	9	*
water	13:65	0:0	9	bg
water	13:67	0:0	9	)
op	13:68	0:0	9	/
water	13:69	0:0	9	1000
water	14:12	0:0	6	c
op	14:14	0:0	6	=
water	14:16	0:0	6	bg
op	14:19	0:0	6	+
water	14:21	0:0	6	(
water	14:22	0:0	6	rg
op	14:24	0:0	6	<<
water	14:26	0:0	6	16
water	14:28	0:0	6	)
op	14:30	0:0	6	+
water	14:32	0:0	6	0
water	14:33	0:0	6	x010101
op	14:41	0:0	6	*
water	14:43	0:0	6	startg
water	14:49	0:0	6	;
for	15:12	18:12	6	(g = startg ;g <= endg;g ++)
forinit	15:17	15:27	7	g = startg ;
water	15:17	0:0	8	g
op	15:19	0:0	8	=
water	15:21	0:0	8	startg
water	15:27	0:0	8	;
cond	15:29	15:34	7	g <= endg
water	15:29	0:0	8	g
op	15:31	0:0	8	<=
water	15:34	0:0	8	endg
forexpr	15:40	15:41	7	g ++
water	15:40	0:0	8	g
op	15:41	0:0	8	++
stmts	15:45	18:12	7	
water	15:45	0:0	8	{
water	16:16	0:0	8	hqx
op	16:19	0:0	8	->
water	16:21	0:0	8	rgbtoyuv
op	16:29	0:0	8	[
water	16:30	0:0	8	c
op	16:31	0:0	8	]
op	16:33	0:0	8	=
water	16:35	0:0	8	(
water	16:36	0:0	8	(
water	16:37	0:0	8	y
op	16:38	0:0	8	++
water	16:40	0:0	8	)
op	16:42	0:0	8	<<
water	16:45	0:0	8	16
water	16:47	0:0	8	)
op	16:49	0:0	8	+
water	16:51	0:0	8	(
water	16:52	0:0	8	u
op	16:54	0:0	8	<<
water	16:57	0:0	8	8
water	16:58	0:0	8	)
op	16:60	0:0	8	+
water	16:62	0:0	8	v
water	16:63	0:0	8	;
water	17:16	0:0	8	c
op	17:17	0:0	8	+=
water	17:20	0:0	8	0
water	17:21	0:0	8	x010101
water	17:28	0:0	8	;
water	18:12	0:0	8	}
water	19:8	0:0	6	}
water	20:4	0:0	4	}
water	21:4	0:0	2	hqx
op	21:7	0:0	2	->
water	21:9	0:0	2	func
op	21:14	0:0	2	=
water	21:16	0:0	2	hqxfuncs
op	21:24	0:0	2	[
water	21:25	0:0	2	hqx
op	21:28	0:0	2	->
water	21:30	0:0	2	n
op	21:32	0:0	2	-
water	21:34	0:0	2	2
op	21:35	0:0	2	]
water	21:36	0:0	2	;
return	22:4	22:12	2	0
water	22:11	0:0	3	0

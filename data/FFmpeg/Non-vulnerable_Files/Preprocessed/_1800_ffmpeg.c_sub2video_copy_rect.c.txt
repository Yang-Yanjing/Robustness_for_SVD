func	1:0	28:0	0	static void	sub2video_copy_rect
params	1:31	0:0	1	
param	1:32	1:44	2	uint8_t *	dst
param	1:46	1:62	2	int	dst_linesize
param	1:64	1:69	2	int	w
param	1:71	1:76	2	int	h
param	2:32	2:49	2	AVSubtitleRect *	r
stmnts	0:0	27:4	1	
decl	4:4	4:24	2	uint32_t	*pal
water	4:17	0:0	2	,
decl	4:4	4:24	2	uint32_t	*dst2
decl	5:4	5:23	2	uint8_t	*src
water	5:16	0:0	2	,
decl	5:4	5:23	2	uint8_t	*src2
decl	6:4	6:12	2	int	x
water	6:9	0:0	2	,
decl	6:4	6:12	2	int	y
if	7:4	10:4	2	(r -> type != SUBTITLE_BITMAP)
cond	7:8	7:19	3	r -> type != SUBTITLE_BITMAP
water	7:8	0:0	4	r
op	7:9	0:0	4	->
water	7:11	0:0	4	type
op	7:16	0:0	4	!=
water	7:19	0:0	4	SUBTITLE_BITMAP
stmts	7:36	10:4	3	
water	7:36	0:0	4	{
call	8:8	8:71	4	av_log
arg	8:15	8:19	5	NULL
water	8:15	0:0	6	NULL
arg	8:21	8:35	5	AV_LOG_WARNING
water	8:21	0:0	6	AV_LOG_WARNING
arg	8:37	8:71	5	"sub2video: non-bitmap subtitle\n"
water	8:37	0:0	6	"sub2video: non-bitmap subtitle\n"
water	8:72	0:0	4	;
return	9:8	9:14	4	
water	10:4	0:0	4	}
if	11:4	16:4	2	(r -> x < 0 || r -> x + r -> w > w || r -> y < 0 || r -> y + r -> h > h)
cond	11:8	11:65	3	r -> x < 0 || r -> x + r -> w > w || r -> y < 0 || r -> y + r -> h > h
water	11:8	0:0	4	r
op	11:9	0:0	4	->
water	11:11	0:0	4	x
op	11:13	0:0	4	<
water	11:15	0:0	4	0
op	11:17	0:0	4	||
water	11:20	0:0	4	r
op	11:21	0:0	4	->
water	11:23	0:0	4	x
op	11:25	0:0	4	+
water	11:27	0:0	4	r
op	11:28	0:0	4	->
water	11:30	0:0	4	w
op	11:32	0:0	4	>
water	11:34	0:0	4	w
op	11:36	0:0	4	||
water	11:39	0:0	4	r
op	11:40	0:0	4	->
water	11:42	0:0	4	y
op	11:44	0:0	4	<
water	11:46	0:0	4	0
op	11:48	0:0	4	||
water	11:51	0:0	4	r
op	11:52	0:0	4	->
water	11:54	0:0	4	y
op	11:56	0:0	4	+
water	11:58	0:0	4	r
op	11:59	0:0	4	->
water	11:61	0:0	4	h
op	11:63	0:0	4	>
water	11:65	0:0	4	h
stmts	11:68	16:4	3	
water	11:68	0:0	4	{
call	12:8	14:8	4	av_log
arg	12:15	12:19	5	NULL
water	12:15	0:0	6	NULL
arg	12:21	12:35	5	AV_LOG_WARNING
water	12:21	0:0	6	AV_LOG_WARNING
arg	12:37	12:93	5	"sub2video: rectangle (%d %d %d %d) overflowing %d %d\n"
water	12:37	0:0	6	"sub2video: rectangle (%d %d %d %d) overflowing %d %d\n"
arg	13:12	13:16	5	r->x
water	13:12	0:0	6	r
op	13:13	0:0	6	->
water	13:15	0:0	6	x
arg	13:18	13:22	5	r->y
water	13:18	0:0	6	r
op	13:19	0:0	6	->
water	13:21	0:0	6	y
arg	13:24	13:28	5	r->w
water	13:24	0:0	6	r
op	13:25	0:0	6	->
water	13:27	0:0	6	w
arg	13:30	13:34	5	r->h
water	13:30	0:0	6	r
op	13:31	0:0	6	->
water	13:33	0:0	6	h
arg	13:36	13:37	5	w
water	13:36	0:0	6	w
arg	13:39	14:8	5	h
water	13:39	0:0	6	h
water	14:9	0:0	4	;
return	15:8	15:14	4	
water	16:4	0:0	4	}
water	17:4	0:0	2	dst
op	17:8	0:0	2	+=
water	17:11	0:0	2	r
op	17:12	0:0	2	->
water	17:14	0:0	2	y
op	17:16	0:0	2	*
water	17:18	0:0	2	dst_linesize
op	17:31	0:0	2	+
water	17:33	0:0	2	r
op	17:34	0:0	2	->
water	17:36	0:0	2	x
op	17:38	0:0	2	*
water	17:40	0:0	2	4
water	17:41	0:0	2	;
water	18:4	0:0	2	src
op	18:8	0:0	2	=
water	18:10	0:0	2	r
op	18:11	0:0	2	->
water	18:13	0:0	2	data
op	18:17	0:0	2	[
water	18:18	0:0	2	0
op	18:19	0:0	2	]
water	18:20	0:0	2	;
water	19:4	0:0	2	pal
op	19:8	0:0	2	=
water	19:10	0:0	2	(
water	19:11	0:0	2	uint32_t
op	19:20	0:0	2	*
water	19:21	0:0	2	)
water	19:22	0:0	2	r
op	19:23	0:0	2	->
water	19:25	0:0	2	data
op	19:29	0:0	2	[
water	19:30	0:0	2	1
op	19:31	0:0	2	]
water	19:32	0:0	2	;
for	20:4	27:4	2	(y = 0 ;y < r -> h;y ++)
forinit	20:9	20:14	3	y = 0 ;
water	20:9	0:0	4	y
op	20:11	0:0	4	=
water	20:13	0:0	4	0
water	20:14	0:0	4	;
cond	20:16	20:23	3	y < r -> h
water	20:16	0:0	4	y
op	20:18	0:0	4	<
water	20:20	0:0	4	r
op	20:21	0:0	4	->
water	20:23	0:0	4	h
forexpr	20:26	20:27	3	y ++
water	20:26	0:0	4	y
op	20:27	0:0	4	++
stmts	20:31	27:4	3	
water	20:31	0:0	4	{
water	21:8	0:0	4	dst2
op	21:13	0:0	4	=
water	21:15	0:0	4	(
water	21:16	0:0	4	uint32_t
op	21:25	0:0	4	*
water	21:26	0:0	4	)
water	21:27	0:0	4	dst
water	21:30	0:0	4	;
water	22:8	0:0	4	src2
op	22:13	0:0	4	=
water	22:15	0:0	4	src
water	22:18	0:0	4	;
for	23:8	24:38	4	(x = 0 ;x < r -> w;x ++)
forinit	23:13	23:18	5	x = 0 ;
water	23:13	0:0	6	x
op	23:15	0:0	6	=
water	23:17	0:0	6	0
water	23:18	0:0	6	;
cond	23:20	23:27	5	x < r -> w
water	23:20	0:0	6	x
op	23:22	0:0	6	<
water	23:24	0:0	6	r
op	23:25	0:0	6	->
water	23:27	0:0	6	w
forexpr	23:30	23:31	5	x ++
water	23:30	0:0	6	x
op	23:31	0:0	6	++
stmts	24:12	24:38	5	
op	24:12	0:0	6	*
water	24:13	0:0	6	(
water	24:14	0:0	6	dst2
op	24:18	0:0	6	++
water	24:20	0:0	6	)
op	24:22	0:0	6	=
water	24:24	0:0	6	pal
op	24:27	0:0	6	[
op	24:28	0:0	6	*
water	24:29	0:0	6	(
water	24:30	0:0	6	src2
op	24:34	0:0	6	++
water	24:36	0:0	6	)
op	24:37	0:0	6	]
water	24:38	0:0	6	;
water	25:8	0:0	4	dst
op	25:12	0:0	4	+=
water	25:15	0:0	4	dst_linesize
water	25:27	0:0	4	;
water	26:8	0:0	4	src
op	26:12	0:0	4	+=
water	26:15	0:0	4	r
op	26:16	0:0	4	->
water	26:18	0:0	4	linesize
op	26:26	0:0	4	[
water	26:27	0:0	4	0
op	26:28	0:0	4	]
water	26:29	0:0	4	;
water	27:4	0:0	4	}

func	1:0	36:0	0	static int	check_init_output_file
params	1:33	0:0	1	
param	1:34	1:48	2	OutputFile *	of
param	1:50	1:64	2	int	file_index
stmnts	0:0	35:12	1	
decl	3:4	3:14	2	int	ret
water	3:11	0:0	2	,
decl	3:4	3:14	2	int	i
for	4:4	8:4	2	(i = 0 ;i < of -> ctx -> nb_streams;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:29	3	i < of -> ctx -> nb_streams
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	of
op	4:22	0:0	4	->
water	4:24	0:0	4	ctx
op	4:27	0:0	4	->
water	4:29	0:0	4	nb_streams
forexpr	4:41	4:42	3	i ++
water	4:41	0:0	4	i
op	4:42	0:0	4	++
stmts	4:46	8:4	3	
water	4:46	0:0	4	{
decl	5:8	5:61	4	OutputStream	*ost
op	5:26	0:0	4	=
water	5:28	0:0	4	output_streams
op	5:42	0:0	4	[
water	5:43	0:0	4	of
op	5:45	0:0	4	->
water	5:47	0:0	4	ost_index
op	5:57	0:0	4	+
water	5:59	0:0	4	i
op	5:60	0:0	4	]
if	6:8	7:20	4	(! ost -> initialized)
cond	6:12	6:18	5	! ost -> initialized
op	6:12	0:0	6	!
water	6:13	0:0	6	ost
op	6:16	0:0	6	->
water	6:18	0:0	6	initialized
stmts	7:12	7:20	5	
return	7:12	7:20	6	0
water	7:19	0:0	7	0
water	8:4	0:0	4	}
water	9:4	0:0	2	of
op	9:6	0:0	2	->
water	9:8	0:0	2	ctx
op	9:11	0:0	2	->
water	9:13	0:0	2	interrupt_callback
op	9:32	0:0	2	=
water	9:34	0:0	2	int_cb
water	9:40	0:0	2	;
water	10:4	0:0	2	ret
op	10:8	0:0	2	=
call	10:10	10:50	2	avformat_write_header
arg	10:32	10:39	3	of->ctx
water	10:32	0:0	4	of
op	10:34	0:0	4	->
water	10:36	0:0	4	ctx
arg	10:41	10:50	3	&of->opts
op	10:41	0:0	4	&
water	10:42	0:0	4	of
op	10:44	0:0	4	->
water	10:46	0:0	4	opts
water	10:51	0:0	2	;
if	11:4	17:4	2	(ret < 0)
cond	11:8	11:14	3	ret < 0
water	11:8	0:0	4	ret
op	11:12	0:0	4	<
water	11:14	0:0	4	0
stmts	11:17	17:4	3	
water	11:17	0:0	4	{
call	12:8	15:42	4	av_log
arg	12:15	12:19	5	NULL
water	12:15	0:0	6	NULL
arg	12:21	12:33	5	AV_LOG_ERROR
water	12:21	0:0	6	AV_LOG_ERROR
arg	13:15	14:53	5	"Could not write header for output file #%d ""(incorrect codec parameters ?): %s\n"
water	13:15	0:0	6	"Could not write header for output file #%d "
water	14:15	0:0	6	"(incorrect codec parameters ?): %s\n"
arg	15:15	15:25	5	file_index
water	15:15	0:0	6	file_index
arg	15:27	15:42	5	av_err2str(ret)
call	15:27	15:41	6	av_err2str
arg	15:38	15:41	7	ret
water	15:38	0:0	8	ret
water	15:43	0:0	4	;
return	16:8	16:18	4	ret
water	16:15	0:0	5	ret
water	17:4	0:0	4	}
water	19:4	0:0	2	of
op	19:6	0:0	2	->
water	19:8	0:0	2	header_written
op	19:23	0:0	2	=
water	19:25	0:0	2	1
water	19:26	0:0	2	;
call	20:4	20:60	2	av_dump_format
arg	20:19	20:26	3	of->ctx
water	20:19	0:0	4	of
op	20:21	0:0	4	->
water	20:23	0:0	4	ctx
arg	20:28	20:38	3	file_index
water	20:28	0:0	4	file_index
arg	20:40	20:57	3	of->ctx->filename
water	20:40	0:0	4	of
op	20:42	0:0	4	->
water	20:44	0:0	4	ctx
op	20:47	0:0	4	->
water	20:49	0:0	4	filename
arg	20:59	20:60	3	1
water	20:59	0:0	4	1
water	20:61	0:0	2	;
if	21:4	22:19	2	(sdp_filename || want_sdp)
cond	21:8	21:24	3	sdp_filename || want_sdp
water	21:8	0:0	4	sdp_filename
op	21:21	0:0	4	||
water	21:24	0:0	4	want_sdp
stmts	22:8	22:19	3	
call	22:8	22:18	4	print_sdp
water	22:19	0:0	4	;
for	24:4	34:4	2	(i = 0 ;i < of -> ctx -> nb_streams;i ++)
forinit	24:9	24:14	3	i = 0 ;
water	24:9	0:0	4	i
op	24:11	0:0	4	=
water	24:13	0:0	4	0
water	24:14	0:0	4	;
cond	24:16	24:29	3	i < of -> ctx -> nb_streams
water	24:16	0:0	4	i
op	24:18	0:0	4	<
water	24:20	0:0	4	of
op	24:22	0:0	4	->
water	24:24	0:0	4	ctx
op	24:27	0:0	4	->
water	24:29	0:0	4	nb_streams
forexpr	24:41	24:42	3	i ++
water	24:41	0:0	4	i
op	24:42	0:0	4	++
stmts	24:46	34:4	3	
water	24:46	0:0	4	{
decl	25:8	25:61	4	OutputStream	*ost
op	25:26	0:0	4	=
water	25:28	0:0	4	output_streams
op	25:42	0:0	4	[
water	25:43	0:0	4	of
op	25:45	0:0	4	->
water	25:47	0:0	4	ost_index
op	25:57	0:0	4	+
water	25:59	0:0	4	i
op	25:60	0:0	4	]
if	27:8	28:50	4	(!av_fifo_size (ost -> muxing_queue ))
cond	27:12	27:43	5	!av_fifo_size (ost -> muxing_queue )
op	27:12	0:0	6	!
call	27:13	27:43	6	av_fifo_size
arg	27:26	27:43	7	ost->muxing_queue
water	27:26	0:0	8	ost
op	27:29	0:0	8	->
water	27:31	0:0	8	muxing_queue
stmts	28:12	28:50	5	
water	28:12	0:0	6	ost
op	28:15	0:0	6	->
water	28:17	0:0	6	mux_timebase
op	28:30	0:0	6	=
water	28:32	0:0	6	ost
op	28:35	0:0	6	->
water	28:37	0:0	6	st
op	28:39	0:0	6	->
water	28:41	0:0	6	time_base
water	28:50	0:0	6	;
while	29:8	33:8	4	(av_fifo_size (ost -> muxing_queue ))
cond	29:15	29:45	5	av_fifo_size (ost -> muxing_queue )
call	29:15	29:45	6	av_fifo_size
arg	29:28	29:45	7	ost->muxing_queue
water	29:28	0:0	8	ost
op	29:31	0:0	8	->
water	29:33	0:0	8	muxing_queue
stmts	29:48	33:8	5	
water	29:48	0:0	6	{
decl	30:12	30:24	6	AVPacket	pkt
call	31:12	31:75	6	av_fifo_generic_read
arg	31:33	31:50	7	ost->muxing_queue
water	31:33	0:0	8	ost
op	31:36	0:0	8	->
water	31:38	0:0	8	muxing_queue
arg	31:52	31:56	7	&pkt
op	31:52	0:0	8	&
water	31:53	0:0	8	pkt
arg	31:58	31:69	7	sizeof(pkt)
op	31:58	0:0	8	sizeof
water	31:64	0:0	8	(
water	31:65	0:0	8	pkt
water	31:68	0:0	8	)
arg	31:71	31:75	7	NULL
water	31:71	0:0	8	NULL
water	31:76	0:0	6	;
call	32:12	32:41	6	write_packet
arg	32:25	32:27	7	of
water	32:25	0:0	8	of
arg	32:29	32:33	7	&pkt
op	32:29	0:0	8	&
water	32:30	0:0	8	pkt
arg	32:35	32:38	7	ost
water	32:35	0:0	8	ost
arg	32:40	32:41	7	1
water	32:40	0:0	8	1
water	32:42	0:0	6	;
water	33:8	0:0	6	}
water	34:4	0:0	4	}
return	35:4	35:12	2	0
water	35:11	0:0	3	0

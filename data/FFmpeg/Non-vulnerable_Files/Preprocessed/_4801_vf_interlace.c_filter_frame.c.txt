func	1:0	40:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:58	2	AVFrame *	buf
stmnts	0:0	39:14	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:35	2	InterlaceContext	*s
op	5:24	0:0	2	=
water	5:26	0:0	2	ctx
op	5:29	0:0	2	->
water	5:31	0:0	2	priv
decl	6:4	6:16	2	AVFrame	*out
decl	7:4	7:16	2	int	tff
water	7:11	0:0	2	,
decl	7:4	7:16	2	int	ret
call	8:4	8:25	2	av_frame_free
arg	8:18	8:25	3	&s->cur
op	8:18	0:0	4	&
water	8:19	0:0	4	s
op	8:20	0:0	4	->
water	8:22	0:0	4	cur
water	8:26	0:0	2	;
water	9:4	0:0	2	s
op	9:5	0:0	2	->
water	9:7	0:0	2	cur
op	9:12	0:0	2	=
water	9:14	0:0	2	s
op	9:15	0:0	2	->
water	9:17	0:0	2	next
water	9:21	0:0	2	;
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	next
op	10:12	0:0	2	=
water	10:14	0:0	2	buf
water	10:17	0:0	2	;
if	12:4	13:16	2	(! s -> cur || ! s -> next)
cond	12:8	12:23	3	! s -> cur || ! s -> next
op	12:8	0:0	4	!
water	12:9	0:0	4	s
op	12:10	0:0	4	->
water	12:12	0:0	4	cur
op	12:16	0:0	4	||
op	12:19	0:0	4	!
water	12:20	0:0	4	s
op	12:21	0:0	4	->
water	12:23	0:0	4	next
stmts	13:8	13:16	3	
return	13:8	13:16	4	0
water	13:15	0:0	5	0
if	14:4	23:4	2	(s -> cur -> interlaced_frame)
cond	14:8	14:16	3	s -> cur -> interlaced_frame
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	cur
op	14:14	0:0	4	->
water	14:16	0:0	4	interlaced_frame
stmts	14:34	23:4	3	
water	14:34	0:0	4	{
call	15:8	16:72	4	av_log
arg	15:15	15:18	5	ctx
water	15:15	0:0	6	ctx
arg	15:20	15:34	5	AV_LOG_WARNING
water	15:20	0:0	6	AV_LOG_WARNING
arg	16:15	16:72	5	"video is already interlaced, adjusting framerate only\n"
water	16:15	0:0	6	"video is already interlaced, adjusting framerate only\n"
water	16:73	0:0	4	;
water	17:8	0:0	4	out
op	17:12	0:0	4	=
call	17:14	17:35	4	av_frame_clone
arg	17:29	17:35	5	s->cur
water	17:29	0:0	6	s
op	17:30	0:0	6	->
water	17:32	0:0	6	cur
water	17:36	0:0	4	;
if	18:8	19:34	4	(! out)
cond	18:12	18:13	5	! out
op	18:12	0:0	6	!
water	18:13	0:0	6	out
stmts	19:12	19:34	5	
return	19:12	19:34	6	AVERROR(ENOMEM)
call	19:19	19:33	7	AVERROR
arg	19:27	19:33	8	ENOMEM
water	19:27	0:0	9	ENOMEM
water	20:8	0:0	4	out
op	20:11	0:0	4	->
water	20:13	0:0	4	pts
op	20:17	0:0	4	/=
water	20:20	0:0	4	2
water	20:21	0:0	4	;
water	21:8	0:0	4	ret
op	21:12	0:0	4	=
call	21:14	21:42	4	ff_filter_frame
arg	21:30	21:37	5	outlink
water	21:30	0:0	6	outlink
arg	21:39	21:42	5	out
water	21:39	0:0	6	out
water	21:43	0:0	4	;
return	22:8	22:18	4	ret
water	22:15	0:0	5	ret
water	23:4	0:0	4	}
water	24:4	0:0	2	tff
op	24:8	0:0	2	=
water	24:10	0:0	2	(
water	24:11	0:0	2	s
op	24:12	0:0	2	->
water	24:14	0:0	2	scan
op	24:19	0:0	2	==
water	24:22	0:0	2	MODE_TFF
water	24:30	0:0	2	)
water	24:31	0:0	2	;
water	25:4	0:0	2	out
op	25:8	0:0	2	=
call	25:10	25:61	2	ff_get_video_buffer
arg	25:30	25:37	3	outlink
water	25:30	0:0	4	outlink
arg	25:39	25:49	3	outlink->w
water	25:39	0:0	4	outlink
op	25:46	0:0	4	->
water	25:48	0:0	4	w
arg	25:51	25:61	3	outlink->h
water	25:51	0:0	4	outlink
op	25:58	0:0	4	->
water	25:60	0:0	4	h
water	25:62	0:0	2	;
if	26:4	27:30	2	(! out)
cond	26:8	26:9	3	! out
op	26:8	0:0	4	!
water	26:9	0:0	4	out
stmts	27:8	27:30	3	
return	27:8	27:30	4	AVERROR(ENOMEM)
call	27:15	27:29	5	AVERROR
arg	27:23	27:29	6	ENOMEM
water	27:23	0:0	7	ENOMEM
call	28:4	28:35	2	av_frame_copy_props
arg	28:24	28:27	3	out
water	28:24	0:0	4	out
arg	28:29	28:35	3	s->cur
water	28:29	0:0	4	s
op	28:30	0:0	4	->
water	28:32	0:0	4	cur
water	28:36	0:0	2	;
water	29:4	0:0	2	out
op	29:7	0:0	2	->
water	29:9	0:0	2	interlaced_frame
op	29:26	0:0	2	=
water	29:28	0:0	2	1
water	29:29	0:0	2	;
water	30:4	0:0	2	out
op	30:7	0:0	2	->
water	30:9	0:0	2	top_field_first
op	30:26	0:0	2	=
water	30:28	0:0	2	tff
water	30:31	0:0	2	;
water	31:4	0:0	2	out
op	31:7	0:0	2	->
water	31:9	0:0	2	pts
op	31:25	0:0	2	/=
water	31:28	0:0	2	2
water	31:29	0:0	2	;
call	33:4	33:90	2	copy_picture_field
arg	33:23	33:24	3	s
water	33:23	0:0	4	s
arg	33:26	33:32	3	s->cur
water	33:26	0:0	4	s
op	33:27	0:0	4	->
water	33:29	0:0	4	cur
arg	33:34	33:37	3	out
water	33:34	0:0	4	out
arg	33:39	33:45	3	inlink
water	33:39	0:0	4	inlink
arg	33:47	33:78	3	tff?FIELD_UPPER:FIELD_LOWER
water	33:47	0:0	4	tff
water	33:51	0:0	4	?
water	33:53	0:0	4	FIELD_UPPER
water	33:65	0:0	4	:
water	33:67	0:0	4	FIELD_LOWER
arg	33:80	33:90	3	s->lowpass
water	33:80	0:0	4	s
op	33:81	0:0	4	->
water	33:83	0:0	4	lowpass
water	33:91	0:0	2	;
call	34:4	34:25	2	av_frame_free
arg	34:18	34:25	3	&s->cur
op	34:18	0:0	4	&
water	34:19	0:0	4	s
op	34:20	0:0	4	->
water	34:22	0:0	4	cur
water	34:26	0:0	2	;
call	36:4	36:91	2	copy_picture_field
arg	36:23	36:24	3	s
water	36:23	0:0	4	s
arg	36:26	36:33	3	s->next
water	36:26	0:0	4	s
op	36:27	0:0	4	->
water	36:29	0:0	4	next
arg	36:35	36:38	3	out
water	36:35	0:0	4	out
arg	36:40	36:46	3	inlink
water	36:40	0:0	4	inlink
arg	36:48	36:79	3	tff?FIELD_LOWER:FIELD_UPPER
water	36:48	0:0	4	tff
water	36:52	0:0	4	?
water	36:54	0:0	4	FIELD_LOWER
water	36:66	0:0	4	:
water	36:68	0:0	4	FIELD_UPPER
arg	36:81	36:91	3	s->lowpass
water	36:81	0:0	4	s
op	36:82	0:0	4	->
water	36:84	0:0	4	lowpass
water	36:92	0:0	2	;
call	37:4	37:26	2	av_frame_free
arg	37:18	37:26	3	&s->next
op	37:18	0:0	4	&
water	37:19	0:0	4	s
op	37:20	0:0	4	->
water	37:22	0:0	4	next
water	37:27	0:0	2	;
water	38:4	0:0	2	ret
op	38:8	0:0	2	=
call	38:10	38:38	2	ff_filter_frame
arg	38:26	38:33	3	outlink
water	38:26	0:0	4	outlink
arg	38:35	38:38	3	out
water	38:35	0:0	4	out
water	38:39	0:0	2	;
return	39:4	39:14	2	ret
water	39:11	0:0	3	ret

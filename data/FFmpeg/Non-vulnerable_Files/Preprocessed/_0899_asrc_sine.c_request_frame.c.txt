func	1:0	29:0	0	static int	request_frame
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	28:42	1	
decl	3:4	3:42	2	SineContext	*sine
op	3:22	0:0	2	=
water	3:24	0:0	2	outlink
op	3:31	0:0	2	->
water	3:33	0:0	2	src
op	3:36	0:0	2	->
water	3:38	0:0	2	priv
decl	4:4	4:18	2	AVFrame	*frame
decl	5:4	5:47	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:47	2	int	nb_samples
op	5:22	0:0	2	=
water	5:24	0:0	2	sine
op	5:28	0:0	2	->
water	5:30	0:0	2	samples_per_frame
decl	6:4	6:20	2	int16_t	*samples
if	7:4	12:4	2	(sine -> duration)
cond	7:8	7:14	3	sine -> duration
water	7:8	0:0	4	sine
op	7:12	0:0	4	->
water	7:14	0:0	4	duration
stmts	7:24	12:4	3	
water	7:24	0:0	4	{
water	8:8	0:0	4	nb_samples
op	8:19	0:0	4	=
call	8:21	8:65	4	FFMIN
arg	8:27	8:37	5	nb_samples
water	8:27	0:0	6	nb_samples
arg	8:39	8:65	5	sine->duration-sine->pts
water	8:39	0:0	6	sine
op	8:43	0:0	6	->
water	8:45	0:0	6	duration
op	8:54	0:0	6	-
water	8:56	0:0	6	sine
op	8:60	0:0	6	->
water	8:62	0:0	6	pts
water	8:66	0:0	4	;
call	9:8	9:34	4	av_assert1
arg	9:19	9:34	5	nb_samples>=0
water	9:19	0:0	6	nb_samples
op	9:30	0:0	6	>=
water	9:33	0:0	6	0
water	9:35	0:0	4	;
if	10:8	11:30	4	(! nb_samples)
cond	10:12	10:13	5	! nb_samples
op	10:12	0:0	6	!
water	10:13	0:0	6	nb_samples
stmts	11:12	11:30	5	
return	11:12	11:30	6	AVERROR_EOF
water	11:19	0:0	7	AVERROR_EOF
water	12:4	0:0	4	}
if	13:4	14:30	2	(! ( frame =ff_get_audio_buffer (outlink ,nb_samples ) ))
cond	13:8	13:58	3	! ( frame =ff_get_audio_buffer (outlink ,nb_samples ) )
op	13:8	0:0	4	!
water	13:9	0:0	4	(
water	13:10	0:0	4	frame
op	13:16	0:0	4	=
call	13:18	13:57	4	ff_get_audio_buffer
arg	13:38	13:45	5	outlink
water	13:38	0:0	6	outlink
arg	13:47	13:57	5	nb_samples
water	13:47	0:0	6	nb_samples
water	13:58	0:0	4	)
stmts	14:8	14:30	3	
return	14:8	14:30	4	AVERROR(ENOMEM)
call	14:15	14:29	5	AVERROR
arg	14:23	14:29	6	ENOMEM
water	14:23	0:0	7	ENOMEM
water	15:4	0:0	2	samples
op	15:12	0:0	2	=
water	15:14	0:0	2	(
water	15:15	0:0	2	int16_t
op	15:23	0:0	2	*
water	15:24	0:0	2	)
water	15:25	0:0	2	frame
op	15:30	0:0	2	->
water	15:32	0:0	2	data
op	15:36	0:0	2	[
water	15:37	0:0	2	0
op	15:38	0:0	2	]
water	15:39	0:0	2	;
for	16:4	25:4	2	(i = 0 ;i < nb_samples;i ++)
forinit	16:9	16:14	3	i = 0 ;
water	16:9	0:0	4	i
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:20	3	i < nb_samples
water	16:16	0:0	4	i
op	16:18	0:0	4	<
water	16:20	0:0	4	nb_samples
forexpr	16:32	16:33	3	i ++
water	16:32	0:0	4	i
op	16:33	0:0	4	++
stmts	16:37	25:4	3	
water	16:37	0:0	4	{
water	17:8	0:0	4	samples
op	17:15	0:0	4	[
water	17:16	0:0	4	i
op	17:17	0:0	4	]
op	17:19	0:0	4	=
water	17:21	0:0	4	sine
op	17:25	0:0	4	->
water	17:27	0:0	4	sin
op	17:30	0:0	4	[
water	17:31	0:0	4	sine
op	17:35	0:0	4	->
water	17:37	0:0	4	phi
op	17:41	0:0	4	>>
water	17:44	0:0	4	(
water	17:45	0:0	4	32
op	17:48	0:0	4	-
water	17:50	0:0	4	LOG_PERIOD
water	17:60	0:0	4	)
op	17:61	0:0	4	]
water	17:62	0:0	4	;
water	18:8	0:0	4	sine
op	18:12	0:0	4	->
water	18:14	0:0	4	phi
op	18:18	0:0	4	+=
water	18:21	0:0	4	sine
op	18:25	0:0	4	->
water	18:27	0:0	4	dphi
water	18:31	0:0	4	;
if	19:8	22:8	4	(sine -> beep_index < sine -> beep_length)
cond	19:12	19:37	5	sine -> beep_index < sine -> beep_length
water	19:12	0:0	6	sine
op	19:16	0:0	6	->
water	19:18	0:0	6	beep_index
op	19:29	0:0	6	<
water	19:31	0:0	6	sine
op	19:35	0:0	6	->
water	19:37	0:0	6	beep_length
stmts	19:50	22:8	5	
water	19:50	0:0	6	{
water	20:12	0:0	6	samples
op	20:19	0:0	6	[
water	20:20	0:0	6	i
op	20:21	0:0	6	]
op	20:23	0:0	6	+=
water	20:26	0:0	6	sine
op	20:30	0:0	6	->
water	20:32	0:0	6	sin
op	20:35	0:0	6	[
water	20:36	0:0	6	sine
op	20:40	0:0	6	->
water	20:42	0:0	6	phi_beep
op	20:51	0:0	6	>>
water	20:54	0:0	6	(
water	20:55	0:0	6	32
op	20:58	0:0	6	-
water	20:60	0:0	6	LOG_PERIOD
water	20:70	0:0	6	)
op	20:71	0:0	6	]
op	20:73	0:0	6	<<
water	20:76	0:0	6	1
water	20:77	0:0	6	;
water	21:12	0:0	6	sine
op	21:16	0:0	6	->
water	21:18	0:0	6	phi_beep
op	21:27	0:0	6	+=
water	21:30	0:0	6	sine
op	21:34	0:0	6	->
water	21:36	0:0	6	dphi_beep
water	21:45	0:0	6	;
water	22:8	0:0	6	}
if	23:8	24:32	4	(++ sine -> beep_index == sine -> beep_period)
cond	23:12	23:40	5	++ sine -> beep_index == sine -> beep_period
op	23:12	0:0	6	++
water	23:14	0:0	6	sine
op	23:18	0:0	6	->
water	23:20	0:0	6	beep_index
op	23:31	0:0	6	==
water	23:34	0:0	6	sine
op	23:38	0:0	6	->
water	23:40	0:0	6	beep_period
stmts	24:12	24:32	5	
water	24:12	0:0	6	sine
op	24:16	0:0	6	->
water	24:18	0:0	6	beep_index
op	24:29	0:0	6	=
water	24:31	0:0	6	0
water	24:32	0:0	6	;
water	25:4	0:0	4	}
water	26:4	0:0	2	frame
op	26:9	0:0	2	->
water	26:11	0:0	2	pts
op	26:15	0:0	2	=
water	26:17	0:0	2	sine
op	26:21	0:0	2	->
water	26:23	0:0	2	pts
water	26:26	0:0	2	;
water	27:4	0:0	2	sine
op	27:8	0:0	2	->
water	27:10	0:0	2	pts
op	27:14	0:0	2	+=
water	27:17	0:0	2	nb_samples
water	27:27	0:0	2	;
return	28:4	28:42	2	ff_filter_frame(outlink,frame)
call	28:11	28:41	3	ff_filter_frame
arg	28:27	28:34	4	outlink
water	28:27	0:0	5	outlink
arg	28:36	28:41	4	frame
water	28:36	0:0	5	frame

func	1:0	25:0	0	void	show_help_options
params	1:22	0:0	1	
param	1:23	1:47	2	const OptionDef *	options
param	1:49	1:64	2	const char *	msg
param	1:66	1:79	2	int	req_flags
param	2:23	2:36	2	int	rej_flags
param	2:38	2:51	2	int	alt_flags
stmnts	0:0	24:16	1	
decl	4:4	4:23	2	const OptionDef	*po
decl	5:4	5:13	2	int	first
water	6:4	0:0	2	first
op	6:10	0:0	2	=
water	6:12	0:0	2	1
water	6:13	0:0	2	;
for	7:4	23:4	2	(po = options ;po -> name;po ++)
forinit	7:9	7:21	3	po = options ;
water	7:9	0:0	4	po
op	7:12	0:0	4	=
water	7:14	0:0	4	options
water	7:21	0:0	4	;
cond	7:23	7:27	3	po -> name
water	7:23	0:0	4	po
op	7:25	0:0	4	->
water	7:27	0:0	4	name
forexpr	7:33	7:35	3	po ++
water	7:33	0:0	4	po
op	7:35	0:0	4	++
stmts	7:39	23:4	3	
water	7:39	0:0	4	{
decl	8:8	8:20	4	char	buf[64]
if	9:8	12:20	4	(( ( po -> flags & req_flags ) != req_flags ) || ( alt_flags && ! ( po -> flags & alt_flags ) ) || ( po -> flags & rej_flags ))
cond	9:12	11:34	5	( ( po -> flags & req_flags ) != req_flags ) || ( alt_flags && ! ( po -> flags & alt_flags ) ) || ( po -> flags & rej_flags )
water	9:12	0:0	6	(
water	9:13	0:0	6	(
water	9:14	0:0	6	po
op	9:16	0:0	6	->
water	9:18	0:0	6	flags
op	9:24	0:0	6	&
water	9:26	0:0	6	req_flags
water	9:35	0:0	6	)
op	9:37	0:0	6	!=
water	9:40	0:0	6	req_flags
water	9:49	0:0	6	)
op	9:51	0:0	6	||
water	10:12	0:0	6	(
water	10:13	0:0	6	alt_flags
op	10:23	0:0	6	&&
op	10:26	0:0	6	!
water	10:27	0:0	6	(
water	10:28	0:0	6	po
op	10:30	0:0	6	->
water	10:32	0:0	6	flags
op	10:38	0:0	6	&
water	10:40	0:0	6	alt_flags
water	10:49	0:0	6	)
water	10:50	0:0	6	)
op	10:52	0:0	6	||
water	11:12	0:0	6	(
water	11:13	0:0	6	po
op	11:15	0:0	6	->
water	11:17	0:0	6	flags
op	11:23	0:0	6	&
water	11:25	0:0	6	rej_flags
water	11:34	0:0	6	)
stmts	12:12	12:20	5	
continue	12:12	12:20	6	
if	13:8	16:8	4	(first)
cond	13:12	13:12	5	first
water	13:12	0:0	6	first
stmts	13:19	16:8	5	
water	13:19	0:0	6	{
call	14:12	14:30	6	printf
arg	14:19	14:25	7	"%s\n"
water	14:19	0:0	8	"%s\n"
arg	14:27	14:30	7	msg
water	14:27	0:0	8	msg
water	14:31	0:0	6	;
water	15:12	0:0	6	first
op	15:18	0:0	6	=
water	15:20	0:0	6	0
water	15:21	0:0	6	;
water	16:8	0:0	6	}
call	17:8	17:45	4	av_strlcpy
arg	17:19	17:22	5	buf
water	17:19	0:0	6	buf
arg	17:24	17:32	5	po->name
water	17:24	0:0	6	po
op	17:26	0:0	6	->
water	17:28	0:0	6	name
arg	17:34	17:45	5	sizeof(buf)
op	17:34	0:0	6	sizeof
water	17:40	0:0	6	(
water	17:41	0:0	6	buf
water	17:44	0:0	6	)
water	17:46	0:0	4	;
if	18:8	21:8	4	(po -> argname)
cond	18:12	18:16	5	po -> argname
water	18:12	0:0	6	po
op	18:14	0:0	6	->
water	18:16	0:0	6	argname
stmts	18:25	21:8	5	
water	18:25	0:0	6	{
call	19:12	19:44	6	av_strlcat
arg	19:23	19:26	7	buf
water	19:23	0:0	8	buf
arg	19:28	19:31	7	" "
water	19:28	0:0	8	" "
arg	19:33	19:44	7	sizeof(buf)
op	19:33	0:0	8	sizeof
water	19:39	0:0	8	(
water	19:40	0:0	8	buf
water	19:43	0:0	8	)
water	19:45	0:0	6	;
call	20:12	20:52	6	av_strlcat
arg	20:23	20:26	7	buf
water	20:23	0:0	8	buf
arg	20:28	20:39	7	po->argname
water	20:28	0:0	8	po
op	20:30	0:0	8	->
water	20:32	0:0	8	argname
arg	20:41	20:52	7	sizeof(buf)
op	20:41	0:0	8	sizeof
water	20:47	0:0	8	(
water	20:48	0:0	8	buf
water	20:51	0:0	8	)
water	20:53	0:0	6	;
water	21:8	0:0	6	}
call	22:8	22:44	4	printf
arg	22:15	22:29	5	"-%-17s  %s\n"
water	22:15	0:0	6	"-%-17s  %s\n"
arg	22:31	22:34	5	buf
water	22:31	0:0	6	buf
arg	22:36	22:44	5	po->help
water	22:36	0:0	6	po
op	22:38	0:0	6	->
water	22:40	0:0	6	help
water	22:45	0:0	4	;
water	23:4	0:0	4	}
call	24:4	24:15	2	printf
arg	24:11	24:15	3	"\n"
water	24:11	0:0	4	"\n"
water	24:16	0:0	2	;

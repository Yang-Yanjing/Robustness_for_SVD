func	1:0	50:0	0	static int64_t	mkv_write_cues
params	1:29	0:0	1	
param	1:30	1:48	2	AVFormatContext *	s
param	1:50	1:64	2	mkv_cues *	cues
param	1:66	1:83	2	mkv_track *	tracks
param	1:85	1:99	2	int	num_tracks
stmnts	0:0	49:21	1	
decl	3:4	3:27	2	AVIOContext	*pb
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	pb
decl	4:4	4:28	2	ebml_master	cues_element
decl	5:4	5:22	2	int64_t	currentpos
decl	6:4	6:12	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:12	2	int	j
water	7:4	0:0	2	currentpos
op	7:15	0:0	2	=
call	7:17	7:29	2	avio_tell
arg	7:27	7:29	3	pb
water	7:27	0:0	4	pb
water	7:30	0:0	2	;
water	8:4	0:0	2	cues_element
op	8:17	0:0	2	=
call	8:19	8:60	2	start_ebml_master
arg	8:37	8:39	3	pb
water	8:37	0:0	4	pb
arg	8:41	8:57	3	MATROSKA_ID_CUES
water	8:41	0:0	4	MATROSKA_ID_CUES
arg	8:59	8:60	3	0
water	8:59	0:0	4	0
water	8:61	0:0	2	;
for	9:4	47:4	2	(i = 0 ;i < cues -> num_entries;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:26	3	i < cues -> num_entries
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	cues
op	9:24	0:0	4	->
water	9:26	0:0	4	num_entries
forexpr	9:39	9:40	3	i ++
water	9:39	0:0	4	i
op	9:40	0:0	4	++
stmts	9:44	47:4	3	
water	9:44	0:0	4	{
decl	10:8	10:45	4	ebml_master	cuepoint
water	10:28	0:0	4	,
decl	10:8	10:45	4	ebml_master	track_positions
decl	11:8	11:47	4	mkv_cuepoint	*entry
op	11:28	0:0	4	=
op	11:30	0:0	4	&
water	11:31	0:0	4	cues
op	11:35	0:0	4	->
water	11:37	0:0	4	entries
op	11:44	0:0	4	[
water	11:45	0:0	4	i
op	11:46	0:0	4	]
decl	12:8	12:33	4	uint64_t	pts
op	12:21	0:0	4	=
water	12:23	0:0	4	entry
op	12:28	0:0	4	->
water	12:30	0:0	4	pts
decl	13:8	13:22	4	int	ctp_nb
op	13:19	0:0	4	=
water	13:21	0:0	4	0
for	15:8	16:33	4	(j = 0 ;j < num_tracks;j ++)
forinit	15:13	15:18	5	j = 0 ;
water	15:13	0:0	6	j
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:24	5	j < num_tracks
water	15:20	0:0	6	j
op	15:22	0:0	6	<
water	15:24	0:0	6	num_tracks
forexpr	15:36	15:37	5	j ++
water	15:36	0:0	6	j
op	15:37	0:0	6	++
stmts	16:12	16:33	5	
water	16:12	0:0	6	tracks
op	16:18	0:0	6	[
water	16:19	0:0	6	j
op	16:20	0:0	6	]
op	16:21	0:0	6	.
water	16:22	0:0	6	has_cue
op	16:30	0:0	6	=
water	16:32	0:0	6	0
water	16:33	0:0	6	;
for	17:8	24:8	4	(j = 0 ;j < cues -> num_entries - i && entry [ j ] . pts == pts;j ++)
forinit	17:13	17:18	5	j = 0 ;
water	17:13	0:0	6	j
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:65	5	j < cues -> num_entries - i && entry [ j ] . pts == pts
water	17:20	0:0	6	j
op	17:22	0:0	6	<
water	17:24	0:0	6	cues
op	17:28	0:0	6	->
water	17:30	0:0	6	num_entries
op	17:42	0:0	6	-
water	17:44	0:0	6	i
op	17:46	0:0	6	&&
water	17:49	0:0	6	entry
op	17:54	0:0	6	[
water	17:55	0:0	6	j
op	17:56	0:0	6	]
op	17:57	0:0	6	.
water	17:58	0:0	6	pts
op	17:62	0:0	6	==
water	17:65	0:0	6	pts
forexpr	17:70	17:71	5	j ++
water	17:70	0:0	6	j
op	17:71	0:0	6	++
stmts	17:75	24:8	5	
water	17:75	0:0	6	{
decl	18:12	18:46	6	int	tracknum
op	18:25	0:0	6	=
water	18:27	0:0	6	entry
op	18:32	0:0	6	[
water	18:33	0:0	6	j
op	18:34	0:0	6	]
op	18:35	0:0	6	.
water	18:36	0:0	6	stream_idx
call	19:12	19:57	6	av_assert0
arg	19:23	19:57	7	tracknum>=0&&tracknum<num_tracks
water	19:23	0:0	8	tracknum
op	19:31	0:0	8	>=
water	19:33	0:0	8	0
op	19:35	0:0	8	&&
water	19:38	0:0	8	tracknum
op	19:46	0:0	8	<
water	19:47	0:0	8	num_tracks
water	19:58	0:0	6	;
if	20:12	21:24	6	(tracks [ tracknum ] . has_cue && s -> streams [ tracknum ] -> codec -> codec_type != AVMEDIA_TYPE_SUBTITLE)
cond	20:16	20:87	7	tracks [ tracknum ] . has_cue && s -> streams [ tracknum ] -> codec -> codec_type != AVMEDIA_TYPE_SUBTITLE
water	20:16	0:0	8	tracks
op	20:22	0:0	8	[
water	20:23	0:0	8	tracknum
op	20:31	0:0	8	]
op	20:32	0:0	8	.
water	20:33	0:0	8	has_cue
op	20:41	0:0	8	&&
water	20:44	0:0	8	s
op	20:45	0:0	8	->
water	20:47	0:0	8	streams
op	20:54	0:0	8	[
water	20:55	0:0	8	tracknum
op	20:63	0:0	8	]
op	20:64	0:0	8	->
water	20:66	0:0	8	codec
op	20:71	0:0	8	->
water	20:73	0:0	8	codec_type
op	20:84	0:0	8	!=
water	20:87	0:0	8	AVMEDIA_TYPE_SUBTITLE
stmts	21:16	21:24	7	
continue	21:16	21:24	8	
water	22:12	0:0	6	tracks
op	22:18	0:0	6	[
water	22:19	0:0	6	tracknum
op	22:27	0:0	6	]
op	22:28	0:0	6	.
water	22:29	0:0	6	has_cue
op	22:37	0:0	6	=
water	22:39	0:0	6	1
water	22:40	0:0	6	;
water	23:12	0:0	6	ctp_nb
op	23:19	0:0	6	++
water	23:21	0:0	6	;
water	24:8	0:0	6	}
water	25:8	0:0	4	cuepoint
op	25:17	0:0	4	=
call	25:19	25:90	4	start_ebml_master
arg	25:37	25:39	5	pb
water	25:37	0:0	6	pb
arg	25:41	25:63	5	MATROSKA_ID_POINTENTRY
water	25:41	0:0	6	MATROSKA_ID_POINTENTRY
arg	25:65	25:90	5	MAX_CUEPOINT_SIZE(ctp_nb)
call	25:65	25:89	6	MAX_CUEPOINT_SIZE
arg	25:83	25:89	7	ctp_nb
water	25:83	0:0	8	ctp_nb
water	25:91	0:0	4	;
call	26:8	26:50	4	put_ebml_uint
arg	26:22	26:24	5	pb
water	26:22	0:0	6	pb
arg	26:26	26:45	5	MATROSKA_ID_CUETIME
water	26:26	0:0	6	MATROSKA_ID_CUETIME
arg	26:47	26:50	5	pts
water	26:47	0:0	6	pts
water	26:51	0:0	4	;
for	29:8	30:33	4	(j = 0 ;j < num_tracks;j ++)
forinit	29:13	29:18	5	j = 0 ;
water	29:13	0:0	6	j
op	29:15	0:0	6	=
water	29:17	0:0	6	0
water	29:18	0:0	6	;
cond	29:20	29:24	5	j < num_tracks
water	29:20	0:0	6	j
op	29:22	0:0	6	<
water	29:24	0:0	6	num_tracks
forexpr	29:36	29:37	5	j ++
water	29:36	0:0	6	j
op	29:37	0:0	6	++
stmts	30:12	30:33	5	
water	30:12	0:0	6	tracks
op	30:18	0:0	6	[
water	30:19	0:0	6	j
op	30:20	0:0	6	]
op	30:21	0:0	6	.
water	30:22	0:0	6	has_cue
op	30:30	0:0	6	=
water	30:32	0:0	6	0
water	30:33	0:0	6	;
for	31:8	44:8	4	(j = 0 ;j < cues -> num_entries - i && entry [ j ] . pts == pts;j ++)
forinit	31:13	31:18	5	j = 0 ;
water	31:13	0:0	6	j
op	31:15	0:0	6	=
water	31:17	0:0	6	0
water	31:18	0:0	6	;
cond	31:20	31:65	5	j < cues -> num_entries - i && entry [ j ] . pts == pts
water	31:20	0:0	6	j
op	31:22	0:0	6	<
water	31:24	0:0	6	cues
op	31:28	0:0	6	->
water	31:30	0:0	6	num_entries
op	31:42	0:0	6	-
water	31:44	0:0	6	i
op	31:46	0:0	6	&&
water	31:49	0:0	6	entry
op	31:54	0:0	6	[
water	31:55	0:0	6	j
op	31:56	0:0	6	]
op	31:57	0:0	6	.
water	31:58	0:0	6	pts
op	31:62	0:0	6	==
water	31:65	0:0	6	pts
forexpr	31:70	31:71	5	j ++
water	31:70	0:0	6	j
op	31:71	0:0	6	++
stmts	31:75	44:8	5	
water	31:75	0:0	6	{
decl	32:12	32:46	6	int	tracknum
op	32:25	0:0	6	=
water	32:27	0:0	6	entry
op	32:32	0:0	6	[
water	32:33	0:0	6	j
op	32:34	0:0	6	]
op	32:35	0:0	6	.
water	32:36	0:0	6	stream_idx
call	33:12	33:57	6	av_assert0
arg	33:23	33:57	7	tracknum>=0&&tracknum<num_tracks
water	33:23	0:0	8	tracknum
op	33:31	0:0	8	>=
water	33:33	0:0	8	0
op	33:35	0:0	8	&&
water	33:38	0:0	8	tracknum
op	33:46	0:0	8	<
water	33:47	0:0	8	num_tracks
water	33:58	0:0	6	;
if	34:12	35:24	6	(tracks [ tracknum ] . has_cue && s -> streams [ tracknum ] -> codec -> codec_type != AVMEDIA_TYPE_SUBTITLE)
cond	34:16	34:87	7	tracks [ tracknum ] . has_cue && s -> streams [ tracknum ] -> codec -> codec_type != AVMEDIA_TYPE_SUBTITLE
water	34:16	0:0	8	tracks
op	34:22	0:0	8	[
water	34:23	0:0	8	tracknum
op	34:31	0:0	8	]
op	34:32	0:0	8	.
water	34:33	0:0	8	has_cue
op	34:41	0:0	8	&&
water	34:44	0:0	8	s
op	34:45	0:0	8	->
water	34:47	0:0	8	streams
op	34:54	0:0	8	[
water	34:55	0:0	8	tracknum
op	34:63	0:0	8	]
op	34:64	0:0	8	->
water	34:66	0:0	8	codec
op	34:71	0:0	8	->
water	34:73	0:0	8	codec_type
op	34:84	0:0	8	!=
water	34:87	0:0	8	AVMEDIA_TYPE_SUBTITLE
stmts	35:16	35:24	7	
continue	35:16	35:24	8	
water	36:12	0:0	6	tracks
op	36:18	0:0	6	[
water	36:19	0:0	6	tracknum
op	36:27	0:0	6	]
op	36:28	0:0	6	.
water	36:29	0:0	6	has_cue
op	36:37	0:0	6	=
water	36:39	0:0	6	1
water	36:40	0:0	6	;
water	37:12	0:0	6	track_positions
op	37:28	0:0	6	=
call	37:30	37:102	6	start_ebml_master
arg	37:48	37:50	7	pb
water	37:48	0:0	8	pb
arg	37:52	37:80	7	MATROSKA_ID_CUETRACKPOSITION
water	37:52	0:0	8	MATROSKA_ID_CUETRACKPOSITION
arg	37:82	37:102	7	MAX_CUETRACKPOS_SIZE
water	37:82	0:0	8	MAX_CUETRACKPOS_SIZE
water	37:103	0:0	6	;
call	38:12	38:83	6	put_ebml_uint
arg	38:26	38:28	7	pb
water	38:26	0:0	8	pb
arg	38:30	38:61	7	MATROSKA_ID_CUETRACK
water	38:30	0:0	8	MATROSKA_ID_CUETRACK
arg	38:63	38:83	7	entry[j].tracknum
water	38:63	0:0	8	entry
op	38:68	0:0	8	[
water	38:69	0:0	8	j
op	38:70	0:0	8	]
op	38:71	0:0	8	.
water	38:72	0:0	8	tracknum
water	38:84	0:0	6	;
call	39:12	39:83	6	put_ebml_uint
arg	39:26	39:28	7	pb
water	39:26	0:0	8	pb
arg	39:30	39:61	7	MATROSKA_ID_CUECLUSTERPOSITION
water	39:30	0:0	8	MATROSKA_ID_CUECLUSTERPOSITION
arg	39:63	39:83	7	entry[j].cluster_pos
water	39:63	0:0	8	entry
op	39:68	0:0	8	[
water	39:69	0:0	8	j
op	39:70	0:0	8	]
op	39:71	0:0	8	.
water	39:72	0:0	8	cluster_pos
water	39:84	0:0	6	;
call	40:12	40:84	6	put_ebml_uint
arg	40:26	40:28	7	pb
water	40:26	0:0	8	pb
arg	40:30	40:61	7	MATROSKA_ID_CUERELATIVEPOSITION
water	40:30	0:0	8	MATROSKA_ID_CUERELATIVEPOSITION
arg	40:63	40:84	7	entry[j].relative_pos
water	40:63	0:0	8	entry
op	40:68	0:0	8	[
water	40:69	0:0	8	j
op	40:70	0:0	8	]
op	40:71	0:0	8	.
water	40:72	0:0	8	relative_pos
water	40:85	0:0	6	;
if	41:12	42:81	6	(entry [ j ] . duration != - 1)
cond	41:16	41:38	7	entry [ j ] . duration != - 1
water	41:16	0:0	8	entry
op	41:21	0:0	8	[
water	41:22	0:0	8	j
op	41:23	0:0	8	]
op	41:24	0:0	8	.
water	41:25	0:0	8	duration
op	41:34	0:0	8	!=
op	41:37	0:0	8	-
water	41:38	0:0	8	1
stmts	42:16	42:81	7	
call	42:16	42:80	8	put_ebml_uint
arg	42:30	42:32	9	pb
water	42:30	0:0	10	pb
arg	42:34	42:61	9	MATROSKA_ID_CUEDURATION
water	42:34	0:0	10	MATROSKA_ID_CUEDURATION
arg	42:63	42:80	9	entry[j].duration
water	42:63	0:0	10	entry
op	42:68	0:0	10	[
water	42:69	0:0	10	j
op	42:70	0:0	10	]
op	42:71	0:0	10	.
water	42:72	0:0	10	duration
water	42:81	0:0	8	;
call	43:12	43:47	6	end_ebml_master
arg	43:28	43:30	7	pb
water	43:28	0:0	8	pb
arg	43:32	43:47	7	track_positions
water	43:32	0:0	8	track_positions
water	43:48	0:0	6	;
water	44:8	0:0	6	}
water	45:8	0:0	4	i
op	45:10	0:0	4	+=
water	45:13	0:0	4	j
op	45:15	0:0	4	-
water	45:17	0:0	4	1
water	45:18	0:0	4	;
call	46:8	46:36	4	end_ebml_master
arg	46:24	46:26	5	pb
water	46:24	0:0	6	pb
arg	46:28	46:36	5	cuepoint
water	46:28	0:0	6	cuepoint
water	46:37	0:0	4	;
water	47:4	0:0	4	}
call	48:4	48:36	2	end_ebml_master
arg	48:20	48:22	3	pb
water	48:20	0:0	4	pb
arg	48:24	48:36	3	cues_element
water	48:24	0:0	4	cues_element
water	48:37	0:0	2	;
return	49:4	49:21	2	currentpos
water	49:11	0:0	3	currentpos

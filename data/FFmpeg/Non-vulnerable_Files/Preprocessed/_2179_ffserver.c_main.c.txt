func	1:0	49:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	48:14	1	
decl	3:4	3:39	2	struct sigaction	sigact
op	3:28	0:0	2	=
water	3:30	0:0	2	{
water	3:32	0:0	2	{
water	3:34	0:0	2	0
water	3:36	0:0	2	}
water	3:38	0:0	2	}
decl	4:4	4:18	2	int	cfg_parsed
decl	5:4	5:26	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	EXIT_FAILURE
call	6:4	6:17	2	init_dynload
water	6:18	0:0	2	;
water	7:4	0:0	2	config
op	7:10	0:0	2	.
water	7:11	0:0	2	filename
op	7:20	0:0	2	=
call	7:22	7:52	2	av_strdup
arg	7:32	7:52	3	"/etc/ffserver.conf"
water	7:32	0:0	4	"/etc/ffserver.conf"
water	7:53	0:0	2	;
call	8:4	8:38	2	parse_loglevel
arg	8:19	8:23	3	argc
water	8:19	0:0	4	argc
arg	8:25	8:29	3	argv
water	8:25	0:0	4	argv
arg	8:31	8:38	3	options
water	8:31	0:0	4	options
water	8:39	0:0	2	;
call	9:4	9:20	2	av_register_all
water	9:21	0:0	2	;
call	10:4	10:26	2	avformat_network_init
water	10:27	0:0	2	;
call	11:4	11:35	2	show_banner
arg	11:16	11:20	3	argc
water	11:16	0:0	4	argc
arg	11:22	11:26	3	argv
water	11:22	0:0	4	argv
arg	11:28	11:35	3	options
water	11:28	0:0	4	options
water	11:36	0:0	2	;
water	12:4	0:0	2	my_program_name
op	12:20	0:0	2	=
water	12:22	0:0	2	argv
op	12:26	0:0	2	[
water	12:27	0:0	2	0
op	12:28	0:0	2	]
water	12:29	0:0	2	;
call	13:4	13:49	2	parse_options
arg	13:18	13:22	3	NULL
water	13:18	0:0	4	NULL
arg	13:24	13:28	3	argc
water	13:24	0:0	4	argc
arg	13:30	13:34	3	argv
water	13:30	0:0	4	argv
arg	13:36	13:43	3	options
water	13:36	0:0	4	options
arg	13:45	13:49	3	NULL
water	13:45	0:0	4	NULL
water	13:50	0:0	2	;
call	14:4	14:25	2	unsetenv
arg	14:13	14:25	3	"http_proxy"
water	14:13	0:0	4	"http_proxy"
water	14:26	0:0	2	;
call	15:4	15:51	2	av_lfg_init
arg	15:16	15:29	3	&random_state
op	15:16	0:0	4	&
water	15:17	0:0	4	random_state
arg	15:31	15:51	3	av_get_random_seed()
call	15:31	15:50	4	av_get_random_seed
water	15:52	0:0	2	;
water	16:4	0:0	2	sigact
op	16:10	0:0	2	.
water	16:11	0:0	2	sa_handler
op	16:22	0:0	2	=
water	16:24	0:0	2	handle_child_exit
water	16:41	0:0	2	;
water	17:4	0:0	2	sigact
op	17:10	0:0	2	.
water	17:11	0:0	2	sa_flags
op	17:20	0:0	2	=
water	17:22	0:0	2	SA_NOCLDSTOP
op	17:35	0:0	2	|
water	17:37	0:0	2	SA_RESTART
water	17:47	0:0	2	;
call	18:4	18:33	2	sigaction
arg	18:14	18:21	3	SIGCHLD
water	18:14	0:0	4	SIGCHLD
arg	18:23	18:30	3	&sigact
op	18:23	0:0	4	&
water	18:24	0:0	4	sigact
arg	18:32	18:33	3	0
water	18:32	0:0	4	0
water	18:34	0:0	2	;
if	19:4	23:4	2	(( cfg_parsed =ffserver_parse_ffconfig (config . filename ,& config ) ) < 0)
cond	19:8	19:75	3	( cfg_parsed =ffserver_parse_ffconfig (config . filename ,& config ) ) < 0
water	19:8	0:0	4	(
water	19:9	0:0	4	cfg_parsed
op	19:20	0:0	4	=
call	19:22	19:70	4	ffserver_parse_ffconfig
arg	19:46	19:61	5	config.filename
water	19:46	0:0	6	config
op	19:52	0:0	6	.
water	19:53	0:0	6	filename
arg	19:63	19:70	5	&config
op	19:63	0:0	6	&
water	19:64	0:0	6	config
water	19:71	0:0	4	)
op	19:73	0:0	4	<
water	19:75	0:0	4	0
stmts	19:78	23:4	3	
water	19:78	0:0	4	{
call	20:8	21:55	4	fprintf
arg	20:16	20:22	5	stderr
water	20:16	0:0	6	stderr
arg	20:24	20:69	5	"Error reading configuration file '%s': %s\n"
water	20:24	0:0	6	"Error reading configuration file '%s': %s\n"
arg	21:16	21:31	5	config.filename
water	21:16	0:0	6	config
op	21:22	0:0	6	.
water	21:23	0:0	6	filename
arg	21:33	21:55	5	av_err2str(cfg_parsed)
call	21:33	21:54	6	av_err2str
arg	21:44	21:54	7	cfg_parsed
water	21:44	0:0	8	cfg_parsed
water	21:56	0:0	4	;
goto	22:8	22:17	4	bail
water	22:13	0:0	5	bail
water	23:4	0:0	4	}
if	25:4	31:4	2	(config . logfilename [ 0 ] != '\0')
cond	25:8	25:33	3	config . logfilename [ 0 ] != '\0'
water	25:8	0:0	4	config
op	25:14	0:0	4	.
water	25:15	0:0	4	logfilename
op	25:26	0:0	4	[
water	25:27	0:0	4	0
op	25:28	0:0	4	]
op	25:30	0:0	4	!=
water	25:33	0:0	4	'\0'
stmts	25:39	31:4	3	
water	25:39	0:0	4	{
if	26:8	27:28	4	(!strcmp (config . logfilename ,"-" ))
cond	26:12	26:43	5	!strcmp (config . logfilename ,"-" )
op	26:12	0:0	6	!
call	26:13	26:43	6	strcmp
arg	26:20	26:38	7	config.logfilename
water	26:20	0:0	8	config
op	26:26	0:0	8	.
water	26:27	0:0	8	logfilename
arg	26:40	26:43	7	"-"
water	26:40	0:0	8	"-"
stmts	27:12	27:28	5	
water	27:12	0:0	6	logfile
op	27:20	0:0	6	=
water	27:22	0:0	6	stdout
water	27:28	0:0	6	;
else	28:8	29:52	4
stmts	29:12	29:52	5	
water	29:12	0:0	6	logfile
op	29:20	0:0	6	=
call	29:22	29:51	6	fopen
arg	29:28	29:46	7	config.logfilename
water	29:28	0:0	8	config
op	29:34	0:0	8	.
water	29:35	0:0	8	logfilename
arg	29:48	29:51	7	"a"
water	29:48	0:0	8	"a"
water	29:52	0:0	6	;
call	30:8	30:39	4	av_log_set_callback
arg	30:28	30:39	5	http_av_log
water	30:28	0:0	6	http_av_log
water	30:40	0:0	4	;
water	31:4	0:0	4	}
call	32:4	32:23	2	build_file_streams
water	32:24	0:0	2	;
if	33:4	36:4	2	(build_feed_streams ( ) < 0)
cond	33:8	33:31	3	build_feed_streams ( ) < 0
call	33:8	33:27	4	build_feed_streams
op	33:29	0:0	4	<
water	33:31	0:0	4	0
stmts	33:34	36:4	3	
water	33:34	0:0	4	{
call	34:8	34:49	4	http_log
arg	34:17	34:49	5	"Could not setup feed streams\n"
water	34:17	0:0	6	"Could not setup feed streams\n"
water	34:50	0:0	4	;
goto	35:8	35:17	4	bail
water	35:13	0:0	5	bail
water	36:4	0:0	4	}
call	37:4	37:22	2	compute_bandwidth
water	37:23	0:0	2	;
call	39:4	39:27	2	signal
arg	39:11	39:18	3	SIGPIPE
water	39:11	0:0	4	SIGPIPE
arg	39:20	39:27	3	SIG_IGN
water	39:20	0:0	4	SIG_IGN
water	39:28	0:0	2	;
if	40:4	43:4	2	(http_server ( ) < 0)
cond	40:8	40:24	3	http_server ( ) < 0
call	40:8	40:20	4	http_server
op	40:22	0:0	4	<
water	40:24	0:0	4	0
stmts	40:27	43:4	3	
water	40:27	0:0	4	{
call	41:8	41:43	4	http_log
arg	41:17	41:43	5	"Could not start server\n"
water	41:17	0:0	6	"Could not start server\n"
water	41:44	0:0	4	;
goto	42:8	42:17	4	bail
water	42:13	0:0	5	bail
water	43:4	0:0	4	}
water	44:4	0:0	2	ret
op	44:7	0:0	2	=
water	44:8	0:0	2	EXIT_SUCCESS
water	44:20	0:0	2	;
label	45:0	45:4	2	bail :
call	46:4	46:30	2	av_freep
arg	46:14	46:30	3	&config.filename
op	46:14	0:0	4	&
water	46:15	0:0	4	config
op	46:21	0:0	4	.
water	46:22	0:0	4	filename
water	46:31	0:0	2	;
call	47:4	47:28	2	avformat_network_deinit
water	47:29	0:0	2	;
return	48:4	48:14	2	ret
water	48:11	0:0	3	ret

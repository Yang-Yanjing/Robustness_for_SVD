func	1:0	26:0	0	static void	apply_intensity_stereo
params	1:34	0:0	1	
param	1:35	1:54	2	ChannelElement *	cpe
stmnts	0:0	25:4	1	
decl	3:4	3:19	2	int	w
water	3:9	0:0	2	,
decl	3:4	3:19	2	int	w2
water	3:13	0:0	2	,
decl	3:4	3:19	2	int	g
water	3:16	0:0	2	,
decl	3:4	3:19	2	int	i
decl	4:4	4:50	2	IndividualChannelStream	*ics
op	4:33	0:0	2	=
op	4:35	0:0	2	&
water	4:36	0:0	2	cpe
op	4:39	0:0	2	->
water	4:41	0:0	2	ch
op	4:43	0:0	2	[
water	4:44	0:0	2	0
op	4:45	0:0	2	]
op	4:46	0:0	2	.
water	4:47	0:0	2	ics
if	5:4	6:14	2	(! cpe -> common_window)
cond	5:8	5:14	3	! cpe -> common_window
op	5:8	0:0	4	!
water	5:9	0:0	4	cpe
op	5:12	0:0	4	->
water	5:14	0:0	4	common_window
stmts	6:8	6:14	3	
return	6:8	6:14	4	
for	7:4	25:4	2	(w = 0 ;w < ics -> num_windows;w += ics -> group_len [ w ])
forinit	7:9	7:14	3	w = 0 ;
water	7:9	0:0	4	w
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:25	3	w < ics -> num_windows
water	7:16	0:0	4	w
op	7:18	0:0	4	<
water	7:20	0:0	4	ics
op	7:23	0:0	4	->
water	7:25	0:0	4	num_windows
forexpr	7:38	7:59	3	w += ics -> group_len [ w ]
water	7:38	0:0	4	w
op	7:40	0:0	4	+=
water	7:43	0:0	4	ics
op	7:46	0:0	4	->
water	7:48	0:0	4	group_len
op	7:57	0:0	4	[
water	7:58	0:0	4	w
op	7:59	0:0	4	]
stmts	7:62	25:4	3	
water	7:62	0:0	4	{
for	8:8	24:8	4	(w2 = 0 ;w2 < ics -> group_len [ w ];w2 ++)
forinit	8:13	8:20	5	w2 = 0 ;
water	8:13	0:0	6	w2
op	8:16	0:0	6	=
water	8:19	0:0	6	0
water	8:20	0:0	6	;
cond	8:22	8:43	5	w2 < ics -> group_len [ w ]
water	8:22	0:0	6	w2
op	8:25	0:0	6	<
water	8:27	0:0	6	ics
op	8:30	0:0	6	->
water	8:32	0:0	6	group_len
op	8:41	0:0	6	[
water	8:42	0:0	6	w
op	8:43	0:0	6	]
forexpr	8:46	8:48	5	w2 ++
water	8:46	0:0	6	w2
op	8:48	0:0	6	++
stmts	8:52	24:8	5	
water	8:52	0:0	6	{
decl	9:12	9:36	6	int	start
op	9:22	0:0	6	=
water	9:24	0:0	6	(
water	9:25	0:0	6	w
op	9:26	0:0	6	+
water	9:27	0:0	6	w2
water	9:29	0:0	6	)
op	9:31	0:0	6	*
water	9:33	0:0	6	128
for	10:12	23:12	6	(g = 0 ;g < ics -> num_swb;g ++)
forinit	10:17	10:22	7	g = 0 ;
water	10:17	0:0	8	g
op	10:19	0:0	8	=
water	10:21	0:0	8	0
water	10:22	0:0	8	;
cond	10:24	10:33	7	g < ics -> num_swb
water	10:24	0:0	8	g
op	10:26	0:0	8	<
water	10:28	0:0	8	ics
op	10:31	0:0	8	->
water	10:33	0:0	8	num_swb
forexpr	10:42	10:43	7	g ++
water	10:42	0:0	8	g
op	10:43	0:0	8	++
stmts	10:47	23:12	7	
water	10:47	0:0	8	{
decl	11:16	11:69	8	int	p
op	11:23	0:0	8	=
op	11:25	0:0	8	-
water	11:26	0:0	8	1
op	11:28	0:0	8	+
water	11:30	0:0	8	2
op	11:32	0:0	8	*
water	11:34	0:0	8	(
water	11:35	0:0	8	cpe
op	11:38	0:0	8	->
water	11:40	0:0	8	ch
op	11:42	0:0	8	[
water	11:43	0:0	8	1
op	11:44	0:0	8	]
op	11:45	0:0	8	.
water	11:46	0:0	8	band_type
op	11:55	0:0	8	[
water	11:56	0:0	8	w
op	11:57	0:0	8	*
water	11:58	0:0	8	16
op	11:60	0:0	8	+
water	11:61	0:0	8	g
op	11:62	0:0	8	]
op	11:64	0:0	8	-
water	11:66	0:0	8	14
water	11:68	0:0	8	)
decl	12:16	12:56	8	float	scale
op	12:28	0:0	8	=
water	12:30	0:0	8	cpe
op	12:33	0:0	8	->
water	12:35	0:0	8	ch
op	12:37	0:0	8	[
water	12:38	0:0	8	0
op	12:39	0:0	8	]
op	12:40	0:0	8	.
water	12:41	0:0	8	is_ener
op	12:48	0:0	8	[
water	12:49	0:0	8	w
op	12:50	0:0	8	*
water	12:51	0:0	8	16
op	12:53	0:0	8	+
water	12:54	0:0	8	g
op	12:55	0:0	8	]
if	13:16	16:16	8	(! cpe -> is_mask [ w * 16 + g ])
cond	13:20	13:42	9	! cpe -> is_mask [ w * 16 + g ]
op	13:20	0:0	10	!
water	13:21	0:0	10	cpe
op	13:24	0:0	10	->
water	13:26	0:0	10	is_mask
op	13:33	0:0	10	[
water	13:34	0:0	10	w
op	13:35	0:0	10	*
water	13:36	0:0	10	16
op	13:39	0:0	10	+
water	13:41	0:0	10	g
op	13:42	0:0	10	]
stmts	13:45	16:16	9	
water	13:45	0:0	10	{
water	14:20	0:0	10	start
op	14:26	0:0	10	+=
water	14:29	0:0	10	ics
op	14:32	0:0	10	->
water	14:34	0:0	10	swb_sizes
op	14:43	0:0	10	[
water	14:44	0:0	10	g
op	14:45	0:0	10	]
water	14:46	0:0	10	;
continue	15:20	15:28	10	
water	16:16	0:0	10	}
for	17:16	21:16	8	(i = 0 ;i < ics -> swb_sizes [ g ];i ++)
forinit	17:21	17:26	9	i = 0 ;
water	17:21	0:0	10	i
op	17:23	0:0	10	=
water	17:25	0:0	10	0
water	17:26	0:0	10	;
cond	17:28	17:48	9	i < ics -> swb_sizes [ g ]
water	17:28	0:0	10	i
op	17:30	0:0	10	<
water	17:32	0:0	10	ics
op	17:35	0:0	10	->
water	17:37	0:0	10	swb_sizes
op	17:46	0:0	10	[
water	17:47	0:0	10	g
op	17:48	0:0	10	]
forexpr	17:51	17:52	9	i ++
water	17:51	0:0	10	i
op	17:52	0:0	10	++
stmts	17:56	21:16	9	
water	17:56	0:0	10	{
decl	18:20	18:97	10	float	sum
op	18:30	0:0	10	=
water	18:32	0:0	10	(
water	18:33	0:0	10	cpe
op	18:36	0:0	10	->
water	18:38	0:0	10	ch
op	18:40	0:0	10	[
water	18:41	0:0	10	0
op	18:42	0:0	10	]
op	18:43	0:0	10	.
water	18:44	0:0	10	coeffs
op	18:50	0:0	10	[
water	18:51	0:0	10	start
op	18:56	0:0	10	+
water	18:57	0:0	10	i
op	18:58	0:0	10	]
op	18:60	0:0	10	+
water	18:62	0:0	10	p
op	18:63	0:0	10	*
water	18:64	0:0	10	cpe
op	18:67	0:0	10	->
water	18:69	0:0	10	ch
op	18:71	0:0	10	[
water	18:72	0:0	10	1
op	18:73	0:0	10	]
op	18:74	0:0	10	.
water	18:75	0:0	10	coeffs
op	18:81	0:0	10	[
water	18:82	0:0	10	start
op	18:87	0:0	10	+
water	18:88	0:0	10	i
op	18:89	0:0	10	]
water	18:90	0:0	10	)
op	18:91	0:0	10	*
water	18:92	0:0	10	scale
water	19:20	0:0	10	cpe
op	19:23	0:0	10	->
water	19:25	0:0	10	ch
op	19:27	0:0	10	[
water	19:28	0:0	10	0
op	19:29	0:0	10	]
op	19:30	0:0	10	.
water	19:31	0:0	10	coeffs
op	19:37	0:0	10	[
water	19:38	0:0	10	start
op	19:43	0:0	10	+
water	19:44	0:0	10	i
op	19:45	0:0	10	]
op	19:47	0:0	10	=
water	19:49	0:0	10	sum
water	19:52	0:0	10	;
water	20:20	0:0	10	cpe
op	20:23	0:0	10	->
water	20:25	0:0	10	ch
op	20:27	0:0	10	[
water	20:28	0:0	10	1
op	20:29	0:0	10	]
op	20:30	0:0	10	.
water	20:31	0:0	10	coeffs
op	20:37	0:0	10	[
water	20:38	0:0	10	start
op	20:43	0:0	10	+
water	20:44	0:0	10	i
op	20:45	0:0	10	]
op	20:47	0:0	10	=
water	20:49	0:0	10	0
op	20:50	0:0	10	.
water	20:51	0:0	10	0
water	20:52	0:0	10	f
water	20:53	0:0	10	;
water	21:16	0:0	10	}
water	22:16	0:0	8	start
op	22:22	0:0	8	+=
water	22:25	0:0	8	ics
op	22:28	0:0	8	->
water	22:30	0:0	8	swb_sizes
op	22:39	0:0	8	[
water	22:40	0:0	8	g
op	22:41	0:0	8	]
water	22:42	0:0	8	;
water	23:12	0:0	8	}
water	24:8	0:0	6	}
water	25:4	0:0	4	}

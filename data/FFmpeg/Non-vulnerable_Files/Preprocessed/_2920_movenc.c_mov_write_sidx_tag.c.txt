func	1:0	55:0	0	static int	mov_write_sidx_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	2:30	2:45	2	MOVTrack *	track
param	2:47	2:59	2	int	ref_size
param	2:61	2:80	2	int	total_sidx_size
stmnts	0:0	54:31	1	
decl	4:4	4:52	2	int64_t	pos
op	4:16	0:0	2	=
call	4:18	4:30	3	avio_tell
arg	4:28	4:30	4	pb
water	4:28	0:0	5	pb
water	4:31	0:0	2	,
decl	4:4	4:52	2	int64_t	offset_pos
water	4:43	0:0	2	,
decl	4:4	4:52	2	int64_t	end_pos
decl	5:4	5:47	2	int64_t	presentation_time
water	5:29	0:0	2	,
decl	5:4	5:47	2	int64_t	duration
water	5:39	0:0	2	,
decl	5:4	5:47	2	int64_t	offset
decl	6:4	6:35	2	int	starts_with_SAP
water	6:23	0:0	2	,
decl	6:4	6:35	2	int	i
water	6:26	0:0	2	,
decl	6:4	6:35	2	int	entries
if	7:4	19:4	2	(track -> entry)
cond	7:8	7:15	3	track -> entry
water	7:8	0:0	4	track
op	7:13	0:0	4	->
water	7:15	0:0	4	entry
stmts	7:22	19:4	3	
water	7:22	0:0	4	{
water	8:8	0:0	4	entries
op	8:16	0:0	4	=
water	8:18	0:0	4	1
water	8:19	0:0	4	;
water	9:8	0:0	4	presentation_time
op	9:26	0:0	4	=
water	9:28	0:0	4	track
op	9:33	0:0	4	->
water	9:35	0:0	4	start_dts
op	9:45	0:0	4	+
water	9:47	0:0	4	track
op	9:52	0:0	4	->
water	9:54	0:0	4	frag_start
op	9:65	0:0	4	+
water	10:28	0:0	4	track
op	10:33	0:0	4	->
water	10:35	0:0	4	cluster
op	10:42	0:0	4	[
water	10:43	0:0	4	0
op	10:44	0:0	4	]
op	10:45	0:0	4	.
water	10:46	0:0	4	cts
water	10:49	0:0	4	;
water	11:8	0:0	4	duration
op	11:17	0:0	4	=
water	11:19	0:0	4	track
op	11:24	0:0	4	->
water	11:26	0:0	4	end_pts
op	11:34	0:0	4	-
water	12:19	0:0	4	(
water	12:20	0:0	4	track
op	12:25	0:0	4	->
water	12:27	0:0	4	cluster
op	12:34	0:0	4	[
water	12:35	0:0	4	0
op	12:36	0:0	4	]
op	12:37	0:0	4	.
water	12:38	0:0	4	dts
op	12:42	0:0	4	+
water	12:44	0:0	4	track
op	12:49	0:0	4	->
water	12:51	0:0	4	cluster
op	12:58	0:0	4	[
water	12:59	0:0	4	0
op	12:60	0:0	4	]
op	12:61	0:0	4	.
water	12:62	0:0	4	cts
water	12:65	0:0	4	)
water	12:66	0:0	4	;
water	13:8	0:0	4	starts_with_SAP
op	13:24	0:0	4	=
water	13:26	0:0	4	track
op	13:31	0:0	4	->
water	13:33	0:0	4	cluster
op	13:40	0:0	4	[
water	13:41	0:0	4	0
op	13:42	0:0	4	]
op	13:43	0:0	4	.
water	13:44	0:0	4	flags
op	13:50	0:0	4	&
water	13:52	0:0	4	MOV_SYNC_SAMPLE
water	13:67	0:0	4	;
if	15:8	18:8	4	(presentation_time < 0)
cond	15:12	15:32	5	presentation_time < 0
water	15:12	0:0	6	presentation_time
op	15:30	0:0	6	<
water	15:32	0:0	6	0
stmts	15:35	18:8	5	
water	15:35	0:0	6	{
water	16:12	0:0	6	duration
op	16:21	0:0	6	+=
water	16:24	0:0	6	presentation_time
water	16:41	0:0	6	;
water	17:12	0:0	6	presentation_time
op	17:30	0:0	6	=
water	17:32	0:0	6	0
water	17:33	0:0	6	;
water	18:8	0:0	6	}
water	19:4	0:0	4	}
else	19:6	24:4	2
stmts	19:11	24:4	3	
water	19:11	0:0	4	{
water	20:8	0:0	4	entries
op	20:16	0:0	4	=
water	20:18	0:0	4	track
op	20:23	0:0	4	->
water	20:25	0:0	4	nb_frag_info
water	20:37	0:0	4	;
if	21:8	22:20	4	(entries <= 0)
cond	21:12	21:23	5	entries <= 0
water	21:12	0:0	6	entries
op	21:20	0:0	6	<=
water	21:23	0:0	6	0
stmts	22:12	22:20	5	
return	22:12	22:20	6	0
water	22:19	0:0	7	0
water	23:8	0:0	4	presentation_time
op	23:26	0:0	4	=
water	23:28	0:0	4	track
op	23:33	0:0	4	->
water	23:35	0:0	4	frag_info
op	23:44	0:0	4	[
water	23:45	0:0	4	0
op	23:46	0:0	4	]
op	23:47	0:0	4	.
water	23:48	0:0	4	time
water	23:52	0:0	4	;
water	24:4	0:0	4	}
call	25:4	25:19	2	avio_wb32
arg	25:14	25:16	3	pb
water	25:14	0:0	4	pb
arg	25:18	25:19	3	0
water	25:18	0:0	4	0
water	25:20	0:0	2	;
call	26:4	26:27	2	ffio_wfourcc
arg	26:17	26:19	3	pb
water	26:17	0:0	4	pb
arg	26:21	26:27	3	"sidx"
water	26:21	0:0	4	"sidx"
water	26:28	0:0	2	;
call	27:4	27:17	2	avio_w8
arg	27:12	27:14	3	pb
water	27:12	0:0	4	pb
arg	27:16	27:17	3	1
water	27:16	0:0	4	1
water	27:18	0:0	2	;
call	28:4	28:19	2	avio_wb24
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:19	3	0
water	28:18	0:0	4	0
water	28:20	0:0	2	;
call	29:4	29:33	2	avio_wb32
arg	29:14	29:16	3	pb
water	29:14	0:0	4	pb
arg	29:18	29:33	3	track->track_id
water	29:18	0:0	4	track
op	29:23	0:0	4	->
water	29:25	0:0	4	track_id
water	29:34	0:0	2	;
call	30:4	30:34	2	avio_wb32
arg	30:14	30:16	3	pb
water	30:14	0:0	4	pb
arg	30:18	30:34	3	track->timescale
water	30:18	0:0	4	track
op	30:23	0:0	4	->
water	30:25	0:0	4	timescale
water	30:35	0:0	2	;
call	31:4	31:35	2	avio_wb64
arg	31:14	31:16	3	pb
water	31:14	0:0	4	pb
arg	31:18	31:35	3	presentation_time
water	31:18	0:0	4	presentation_time
water	31:36	0:0	2	;
water	32:4	0:0	2	offset_pos
op	32:15	0:0	2	=
call	32:17	32:29	2	avio_tell
arg	32:27	32:29	3	pb
water	32:27	0:0	4	pb
water	32:30	0:0	2	;
call	33:4	33:19	2	avio_wb64
arg	33:14	33:16	3	pb
water	33:14	0:0	4	pb
arg	33:18	33:19	3	0
water	33:18	0:0	4	0
water	33:20	0:0	2	;
call	34:4	34:19	2	avio_wb16
arg	34:14	34:16	3	pb
water	34:14	0:0	4	pb
arg	34:18	34:19	3	0
water	34:18	0:0	4	0
water	34:20	0:0	2	;
call	35:4	35:25	2	avio_wb16
arg	35:14	35:16	3	pb
water	35:14	0:0	4	pb
arg	35:18	35:25	3	entries
water	35:18	0:0	4	entries
water	35:26	0:0	2	;
for	36:4	48:4	2	(i = 0 ;i < entries;i ++)
forinit	36:9	36:14	3	i = 0 ;
water	36:9	0:0	4	i
op	36:11	0:0	4	=
water	36:13	0:0	4	0
water	36:14	0:0	4	;
cond	36:16	36:20	3	i < entries
water	36:16	0:0	4	i
op	36:18	0:0	4	<
water	36:20	0:0	4	entries
forexpr	36:29	36:30	3	i ++
water	36:29	0:0	4	i
op	36:30	0:0	4	++
stmts	36:34	48:4	3	
water	36:34	0:0	4	{
if	37:8	44:8	4	(! track -> entry)
cond	37:12	37:20	5	! track -> entry
op	37:12	0:0	6	!
water	37:13	0:0	6	track
op	37:18	0:0	6	->
water	37:20	0:0	6	entry
stmts	37:27	44:8	5	
water	37:27	0:0	6	{
if	38:12	40:12	6	(i > 1 && track -> frag_info [ i ] . offset != track -> frag_info [ i - 1 ] . offset + track -> frag_info [ i - 1 ] . size)
cond	38:16	38:112	7	i > 1 && track -> frag_info [ i ] . offset != track -> frag_info [ i - 1 ] . offset + track -> frag_info [ i - 1 ] . size
water	38:16	0:0	8	i
op	38:18	0:0	8	>
water	38:20	0:0	8	1
op	38:22	0:0	8	&&
water	38:25	0:0	8	track
op	38:30	0:0	8	->
water	38:32	0:0	8	frag_info
op	38:41	0:0	8	[
water	38:42	0:0	8	i
op	38:43	0:0	8	]
op	38:44	0:0	8	.
water	38:45	0:0	8	offset
op	38:52	0:0	8	!=
water	38:55	0:0	8	track
op	38:60	0:0	8	->
water	38:62	0:0	8	frag_info
op	38:71	0:0	8	[
water	38:72	0:0	8	i
op	38:74	0:0	8	-
water	38:76	0:0	8	1
op	38:77	0:0	8	]
op	38:78	0:0	8	.
water	38:79	0:0	8	offset
op	38:86	0:0	8	+
water	38:88	0:0	8	track
op	38:93	0:0	8	->
water	38:95	0:0	8	frag_info
op	38:104	0:0	8	[
water	38:105	0:0	8	i
op	38:107	0:0	8	-
water	38:109	0:0	8	1
op	38:110	0:0	8	]
op	38:111	0:0	8	.
water	38:112	0:0	8	size
stmts	38:118	40:12	7	
water	38:118	0:0	8	{
call	39:15	39:95	8	av_log
arg	39:22	39:26	9	NULL
water	39:22	0:0	10	NULL
arg	39:28	39:40	9	AV_LOG_ERROR
water	39:28	0:0	10	AV_LOG_ERROR
arg	39:42	39:95	9	"Non-consecutive fragments, writing incorrect sidx\n"
water	39:42	0:0	10	"Non-consecutive fragments, writing incorrect sidx\n"
water	39:96	0:0	8	;
water	40:12	0:0	8	}
water	41:12	0:0	6	duration
op	41:21	0:0	6	=
water	41:23	0:0	6	track
op	41:28	0:0	6	->
water	41:30	0:0	6	frag_info
op	41:39	0:0	6	[
water	41:40	0:0	6	i
op	41:41	0:0	6	]
op	41:42	0:0	6	.
water	41:43	0:0	6	duration
water	41:51	0:0	6	;
water	42:12	0:0	6	ref_size
op	42:21	0:0	6	=
water	42:23	0:0	6	track
op	42:28	0:0	6	->
water	42:30	0:0	6	frag_info
op	42:39	0:0	6	[
water	42:40	0:0	6	i
op	42:41	0:0	6	]
op	42:42	0:0	6	.
water	42:43	0:0	6	size
water	42:47	0:0	6	;
water	43:12	0:0	6	starts_with_SAP
op	43:28	0:0	6	=
water	43:30	0:0	6	1
water	43:31	0:0	6	;
water	44:8	0:0	6	}
call	45:8	45:57	4	avio_wb32
arg	45:18	45:20	5	pb
water	45:18	0:0	6	pb
arg	45:22	45:57	5	(0<<31)|(ref_size&0x7fffffff)
water	45:22	0:0	6	(
water	45:23	0:0	6	0
op	45:25	0:0	6	<<
water	45:28	0:0	6	31
water	45:30	0:0	6	)
op	45:32	0:0	6	|
water	45:34	0:0	6	(
water	45:35	0:0	6	ref_size
op	45:44	0:0	6	&
water	45:46	0:0	6	0
water	45:47	0:0	6	x7fffffff
water	45:56	0:0	6	)
water	45:58	0:0	4	;
call	46:8	46:30	4	avio_wb32
arg	46:18	46:20	5	pb
water	46:18	0:0	6	pb
arg	46:22	46:30	5	duration
water	46:22	0:0	6	duration
water	46:31	0:0	4	;
call	47:8	47:61	4	avio_wb32
arg	47:18	47:20	5	pb
water	47:18	0:0	6	pb
arg	47:22	47:61	5	(starts_with_SAP<<31)|(0<<28)|0
water	47:22	0:0	6	(
water	47:23	0:0	6	starts_with_SAP
op	47:39	0:0	6	<<
water	47:42	0:0	6	31
water	47:44	0:0	6	)
op	47:46	0:0	6	|
water	47:48	0:0	6	(
water	47:49	0:0	6	0
op	47:51	0:0	6	<<
water	47:54	0:0	6	28
water	47:56	0:0	6	)
op	47:58	0:0	6	|
water	47:60	0:0	6	0
water	47:62	0:0	4	;
water	48:4	0:0	4	}
water	49:4	0:0	2	end_pos
op	49:12	0:0	2	=
call	49:14	49:26	2	avio_tell
arg	49:24	49:26	3	pb
water	49:24	0:0	4	pb
water	49:27	0:0	2	;
water	50:4	0:0	2	offset
op	50:11	0:0	2	=
water	50:13	0:0	2	pos
op	50:17	0:0	2	+
water	50:19	0:0	2	total_sidx_size
op	50:35	0:0	2	-
water	50:37	0:0	2	end_pos
water	50:44	0:0	2	;
call	51:4	51:38	2	avio_seek
arg	51:14	51:16	3	pb
water	51:14	0:0	4	pb
arg	51:18	51:28	3	offset_pos
water	51:18	0:0	4	offset_pos
arg	51:30	51:38	3	SEEK_SET
water	51:30	0:0	4	SEEK_SET
water	51:39	0:0	2	;
call	52:4	52:24	2	avio_wb64
arg	52:14	52:16	3	pb
water	52:14	0:0	4	pb
arg	52:18	52:24	3	offset
water	52:18	0:0	4	offset
water	52:25	0:0	2	;
call	53:4	53:35	2	avio_seek
arg	53:14	53:16	3	pb
water	53:14	0:0	4	pb
arg	53:18	53:25	3	end_pos
water	53:18	0:0	4	end_pos
arg	53:27	53:35	3	SEEK_SET
water	53:27	0:0	4	SEEK_SET
water	53:36	0:0	2	;
return	54:4	54:31	2	update_size(pb,pos)
call	54:11	54:30	3	update_size
arg	54:23	54:25	4	pb
water	54:23	0:0	5	pb
arg	54:27	54:30	4	pos
water	54:27	0:0	5	pos

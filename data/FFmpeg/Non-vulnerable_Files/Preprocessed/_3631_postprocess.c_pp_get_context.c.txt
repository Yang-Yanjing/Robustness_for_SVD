func	1:8	27:0	0	pp_context *	pp_get_context
params	1:34	0:0	1	
param	1:35	1:44	2	int	width
param	1:46	1:56	2	int	height
param	1:58	1:69	2	int	cpuCaps
stmnts	0:0	26:12	1	
decl	2:4	2:47	2	PPContext	*c
op	2:16	0:0	2	=
call	2:18	2:46	3	av_mallocz
arg	2:29	2:46	4	sizeof(PPContext)
op	2:29	0:0	5	sizeof
water	2:35	0:0	5	(
water	2:36	0:0	5	PPContext
water	2:45	0:0	5	)
decl	3:4	3:34	2	int	stride
op	3:14	0:0	2	=
call	3:16	3:33	3	FFALIGN
arg	3:24	3:29	4	width
water	3:24	0:0	5	width
arg	3:31	3:33	4	16
water	3:31	0:0	5	16
decl	4:4	4:35	2	int	qpStride
op	4:16	0:0	2	=
water	4:18	0:0	2	(
water	4:19	0:0	2	width
op	4:24	0:0	2	+
water	4:25	0:0	2	15
water	4:27	0:0	2	)
op	4:28	0:0	2	/
water	4:29	0:0	2	16
op	4:32	0:0	2	+
water	4:34	0:0	2	2
if	5:4	6:19	2	(! c)
cond	5:8	5:9	3	! c
op	5:8	0:0	4	!
water	5:9	0:0	4	c
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
water	7:4	0:0	2	c
op	7:5	0:0	2	->
water	7:7	0:0	2	av_class
op	7:16	0:0	2	=
op	7:18	0:0	2	&
water	7:19	0:0	2	av_codec_context_class
water	7:41	0:0	2	;
if	8:4	11:4	2	(cpuCaps & PP_FORMAT)
cond	8:7	8:15	3	cpuCaps & PP_FORMAT
water	8:7	0:0	4	cpuCaps
op	8:14	0:0	4	&
water	8:15	0:0	4	PP_FORMAT
stmts	8:25	11:4	3	
water	8:25	0:0	4	{
water	9:8	0:0	4	c
op	9:9	0:0	4	->
water	9:11	0:0	4	hChromaSubSample
op	9:27	0:0	4	=
water	9:29	0:0	4	cpuCaps
op	9:36	0:0	4	&
water	9:37	0:0	4	0
water	9:38	0:0	4	x3
water	9:40	0:0	4	;
water	10:8	0:0	4	c
op	10:9	0:0	4	->
water	10:11	0:0	4	vChromaSubSample
op	10:27	0:0	4	=
water	10:29	0:0	4	(
water	10:30	0:0	4	cpuCaps
op	10:37	0:0	4	>>
water	10:39	0:0	4	4
water	10:40	0:0	4	)
op	10:41	0:0	4	&
water	10:42	0:0	4	0
water	10:43	0:0	4	x3
water	10:45	0:0	4	;
water	11:4	0:0	4	}
else	11:5	14:4	2
stmts	11:9	14:4	3	
water	11:9	0:0	4	{
water	12:8	0:0	4	c
op	12:9	0:0	4	->
water	12:11	0:0	4	hChromaSubSample
op	12:27	0:0	4	=
water	12:29	0:0	4	1
water	12:30	0:0	4	;
water	13:8	0:0	4	c
op	13:9	0:0	4	->
water	13:11	0:0	4	vChromaSubSample
op	13:27	0:0	4	=
water	13:29	0:0	4	1
water	13:30	0:0	4	;
water	14:4	0:0	4	}
if	15:4	17:4	2	(cpuCaps & PP_CPU_CAPS_AUTO)
cond	15:8	15:18	3	cpuCaps & PP_CPU_CAPS_AUTO
water	15:8	0:0	4	cpuCaps
op	15:16	0:0	4	&
water	15:18	0:0	4	PP_CPU_CAPS_AUTO
stmts	15:36	17:4	3	
water	15:36	0:0	4	{
water	16:8	0:0	4	c
op	16:9	0:0	4	->
water	16:11	0:0	4	cpuCaps
op	16:19	0:0	4	=
call	16:21	16:38	4	av_get_cpu_flags
water	16:39	0:0	4	;
water	17:4	0:0	4	}
else	17:6	23:4	2
stmts	17:11	23:4	3	
water	17:11	0:0	4	{
water	18:8	0:0	4	c
op	18:9	0:0	4	->
water	18:11	0:0	4	cpuCaps
op	18:19	0:0	4	=
water	18:21	0:0	4	0
water	18:22	0:0	4	;
if	19:8	19:73	4	(cpuCaps & PP_CPU_CAPS_MMX)
cond	19:12	19:22	5	cpuCaps & PP_CPU_CAPS_MMX
water	19:12	0:0	6	cpuCaps
op	19:20	0:0	6	&
water	19:22	0:0	6	PP_CPU_CAPS_MMX
stmts	19:44	19:73	5	
water	19:44	0:0	6	c
op	19:45	0:0	6	->
water	19:47	0:0	6	cpuCaps
op	19:55	0:0	6	|=
water	19:58	0:0	6	AV_CPU_FLAG_MMX
water	19:73	0:0	6	;
if	20:8	20:76	4	(cpuCaps & PP_CPU_CAPS_MMX2)
cond	20:12	20:22	5	cpuCaps & PP_CPU_CAPS_MMX2
water	20:12	0:0	6	cpuCaps
op	20:20	0:0	6	&
water	20:22	0:0	6	PP_CPU_CAPS_MMX2
stmts	20:44	20:76	5	
water	20:44	0:0	6	c
op	20:45	0:0	6	->
water	20:47	0:0	6	cpuCaps
op	20:55	0:0	6	|=
water	20:58	0:0	6	AV_CPU_FLAG_MMXEXT
water	20:76	0:0	6	;
if	21:8	21:75	4	(cpuCaps & PP_CPU_CAPS_3DNOW)
cond	21:12	21:22	5	cpuCaps & PP_CPU_CAPS_3DNOW
water	21:12	0:0	6	cpuCaps
op	21:20	0:0	6	&
water	21:22	0:0	6	PP_CPU_CAPS_3DNOW
stmts	21:44	21:75	5	
water	21:44	0:0	6	c
op	21:45	0:0	6	->
water	21:47	0:0	6	cpuCaps
op	21:55	0:0	6	|=
water	21:58	0:0	6	AV_CPU_FLAG_3DNOW
water	21:75	0:0	6	;
if	22:8	22:77	4	(cpuCaps & PP_CPU_CAPS_ALTIVEC)
cond	22:12	22:22	5	cpuCaps & PP_CPU_CAPS_ALTIVEC
water	22:12	0:0	6	cpuCaps
op	22:20	0:0	6	&
water	22:22	0:0	6	PP_CPU_CAPS_ALTIVEC
stmts	22:44	22:77	5	
water	22:44	0:0	6	c
op	22:45	0:0	6	->
water	22:47	0:0	6	cpuCaps
op	22:55	0:0	6	|=
water	22:58	0:0	6	AV_CPU_FLAG_ALTIVEC
water	22:77	0:0	6	;
water	23:4	0:0	4	}
call	24:4	24:53	2	reallocBuffers
arg	24:19	24:20	3	c
water	24:19	0:0	4	c
arg	24:22	24:27	3	width
water	24:22	0:0	4	width
arg	24:29	24:35	3	height
water	24:29	0:0	4	height
arg	24:37	24:43	3	stride
water	24:37	0:0	4	stride
arg	24:45	24:53	3	qpStride
water	24:45	0:0	4	qpStride
water	24:54	0:0	2	;
water	25:4	0:0	2	c
op	25:5	0:0	2	->
water	25:7	0:0	2	frameNum
op	25:15	0:0	2	=
op	25:16	0:0	2	-
water	25:17	0:0	2	1
water	25:18	0:0	2	;
return	26:4	26:12	2	c
water	26:11	0:0	3	c

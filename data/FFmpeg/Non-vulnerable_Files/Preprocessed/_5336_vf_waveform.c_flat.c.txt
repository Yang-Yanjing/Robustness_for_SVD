func	1:0	84:0	0	static void	flat
params	1:16	0:0	1	
param	1:17	1:35	2	WaveformContext *	s
param	1:37	1:48	2	AVFrame *	in
param	1:50	1:62	2	AVFrame *	out
param	2:17	2:30	2	int	component
param	2:32	2:45	2	int	intensity
param	2:47	2:57	2	int	offset
param	2:59	2:69	2	int	column
stmnts	0:0	83:51	1	
decl	4:4	4:52	2	const int	plane
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	desc
op	4:29	0:0	2	->
water	4:31	0:0	2	comp
op	4:35	0:0	2	[
water	4:36	0:0	2	component
op	4:45	0:0	2	]
op	4:46	0:0	2	.
water	4:47	0:0	2	plane
decl	5:4	5:32	2	const int	mirror
op	5:21	0:0	2	=
water	5:23	0:0	2	s
op	5:24	0:0	2	->
water	5:26	0:0	2	mirror
decl	6:4	6:53	2	const int	c0_linesize
op	6:26	0:0	2	=
water	6:28	0:0	2	in
op	6:30	0:0	2	->
water	6:32	0:0	2	linesize
op	6:40	0:0	2	[
water	6:42	0:0	2	plane
op	6:48	0:0	2	+
water	6:50	0:0	2	0
op	6:52	0:0	2	]
decl	7:4	7:64	2	const int	c1_linesize
op	7:26	0:0	2	=
water	7:28	0:0	2	in
op	7:30	0:0	2	->
water	7:32	0:0	2	linesize
op	7:40	0:0	2	[
water	7:41	0:0	2	(
water	7:42	0:0	2	plane
op	7:48	0:0	2	+
water	7:50	0:0	2	1
water	7:51	0:0	2	)
op	7:53	0:0	2	%
water	7:55	0:0	2	s
op	7:56	0:0	2	->
water	7:58	0:0	2	ncomp
op	7:63	0:0	2	]
decl	8:4	8:64	2	const int	c2_linesize
op	8:26	0:0	2	=
water	8:28	0:0	2	in
op	8:30	0:0	2	->
water	8:32	0:0	2	linesize
op	8:40	0:0	2	[
water	8:41	0:0	2	(
water	8:42	0:0	2	plane
op	8:48	0:0	2	+
water	8:50	0:0	2	2
water	8:51	0:0	2	)
op	8:53	0:0	2	%
water	8:55	0:0	2	s
op	8:56	0:0	2	->
water	8:58	0:0	2	ncomp
op	8:63	0:0	2	]
decl	9:4	9:54	2	const int	d0_linesize
op	9:26	0:0	2	=
water	9:28	0:0	2	out
op	9:31	0:0	2	->
water	9:33	0:0	2	linesize
op	9:41	0:0	2	[
water	9:43	0:0	2	plane
op	9:49	0:0	2	+
water	9:51	0:0	2	0
op	9:53	0:0	2	]
decl	10:4	10:65	2	const int	d1_linesize
op	10:26	0:0	2	=
water	10:28	0:0	2	out
op	10:31	0:0	2	->
water	10:33	0:0	2	linesize
op	10:41	0:0	2	[
water	10:42	0:0	2	(
water	10:43	0:0	2	plane
op	10:49	0:0	2	+
water	10:51	0:0	2	1
water	10:52	0:0	2	)
op	10:54	0:0	2	%
water	10:56	0:0	2	s
op	10:57	0:0	2	->
water	10:59	0:0	2	ncomp
op	10:64	0:0	2	]
decl	11:4	11:35	2	const int	max
op	11:18	0:0	2	=
water	11:20	0:0	2	255
op	11:24	0:0	2	-
water	11:26	0:0	2	intensity
decl	12:4	12:32	2	const int	src_h
op	12:20	0:0	2	=
water	12:22	0:0	2	in
op	12:24	0:0	2	->
water	12:26	0:0	2	height
decl	13:4	13:31	2	const int	src_w
op	13:20	0:0	2	=
water	13:22	0:0	2	in
op	13:24	0:0	2	->
water	13:26	0:0	2	width
decl	14:4	14:12	2	int	x
water	14:9	0:0	2	,
decl	14:4	14:12	2	int	y
if	15:4	46:4	2	(column)
cond	15:8	15:8	3	column
water	15:8	0:0	4	column
stmts	15:16	46:4	3	
water	15:16	0:0	4	{
decl	16:8	16:75	4	const int	d0_signed_linesize
op	16:37	0:0	4	=
water	16:39	0:0	4	d0_linesize
op	16:51	0:0	4	*
water	16:53	0:0	4	(
water	16:54	0:0	4	mirror
op	16:61	0:0	4	==
water	16:64	0:0	4	1
water	16:66	0:0	4	?
op	16:68	0:0	4	-
water	16:69	0:0	4	1
water	16:71	0:0	4	:
water	16:73	0:0	4	1
water	16:74	0:0	4	)
decl	17:8	17:75	4	const int	d1_signed_linesize
op	17:37	0:0	4	=
water	17:39	0:0	4	d1_linesize
op	17:51	0:0	4	*
water	17:53	0:0	4	(
water	17:54	0:0	4	mirror
op	17:61	0:0	4	==
water	17:64	0:0	4	1
water	17:66	0:0	4	?
op	17:68	0:0	4	-
water	17:69	0:0	4	1
water	17:71	0:0	4	:
water	17:73	0:0	4	1
water	17:74	0:0	4	)
for	18:8	45:8	4	(x = 0 ;x < src_w;x ++)
forinit	18:13	18:18	5	x = 0 ;
water	18:13	0:0	6	x
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:24	5	x < src_w
water	18:20	0:0	6	x
op	18:22	0:0	6	<
water	18:24	0:0	6	src_w
forexpr	18:31	18:32	5	x ++
water	18:31	0:0	6	x
op	18:32	0:0	6	++
stmts	18:36	45:8	5	
water	18:36	0:0	6	{
decl	19:12	19:56	6	const uint8_t	*c0_data
op	19:35	0:0	6	=
water	19:37	0:0	6	in
op	19:39	0:0	6	->
water	19:41	0:0	6	data
op	19:45	0:0	6	[
water	19:46	0:0	6	plane
op	19:52	0:0	6	+
water	19:54	0:0	6	0
op	19:55	0:0	6	]
decl	20:12	20:69	6	const uint8_t	*c1_data
op	20:35	0:0	6	=
water	20:37	0:0	6	in
op	20:39	0:0	6	->
water	20:41	0:0	6	data
op	20:45	0:0	6	[
water	20:46	0:0	6	(
water	20:47	0:0	6	plane
op	20:53	0:0	6	+
water	20:55	0:0	6	1
water	20:56	0:0	6	)
op	20:58	0:0	6	%
water	20:60	0:0	6	s
op	20:61	0:0	6	->
water	20:63	0:0	6	ncomp
op	20:68	0:0	6	]
decl	21:12	21:69	6	const uint8_t	*c2_data
op	21:35	0:0	6	=
water	21:37	0:0	6	in
op	21:39	0:0	6	->
water	21:41	0:0	6	data
op	21:45	0:0	6	[
water	21:46	0:0	6	(
water	21:47	0:0	6	plane
op	21:53	0:0	6	+
water	21:55	0:0	6	2
water	21:56	0:0	6	)
op	21:58	0:0	6	%
water	21:60	0:0	6	s
op	21:61	0:0	6	->
water	21:63	0:0	6	ncomp
op	21:68	0:0	6	]
decl	22:12	22:70	6	uint8_t	*d0_data
op	22:29	0:0	6	=
water	22:31	0:0	6	out
op	22:34	0:0	6	->
water	22:36	0:0	6	data
op	22:40	0:0	6	[
water	22:41	0:0	6	plane
op	22:46	0:0	6	]
op	22:48	0:0	6	+
water	22:50	0:0	6	offset
op	22:57	0:0	6	*
water	22:59	0:0	6	d0_linesize
decl	23:12	23:87	6	uint8_t	*d1_data
op	23:29	0:0	6	=
water	23:31	0:0	6	out
op	23:34	0:0	6	->
water	23:36	0:0	6	data
op	23:40	0:0	6	[
water	23:41	0:0	6	(
water	23:42	0:0	6	plane
op	23:48	0:0	6	+
water	23:50	0:0	6	1
water	23:51	0:0	6	)
op	23:53	0:0	6	%
water	23:55	0:0	6	s
op	23:56	0:0	6	->
water	23:58	0:0	6	ncomp
op	23:63	0:0	6	]
op	23:65	0:0	6	+
water	23:67	0:0	6	offset
op	23:74	0:0	6	*
water	23:76	0:0	6	d1_linesize
water	24:12	0:0	6	uint8_t
op	24:20	0:0	6	*
water	24:22	0:0	6	const
water	24:28	0:0	6	d0_bottom_line
op	24:43	0:0	6	=
water	24:45	0:0	6	d0_data
op	24:53	0:0	6	+
water	24:55	0:0	6	d0_linesize
op	24:67	0:0	6	*
water	24:69	0:0	6	(
water	24:70	0:0	6	s
op	24:71	0:0	6	->
water	24:73	0:0	6	size
op	24:78	0:0	6	-
water	24:80	0:0	6	1
water	24:81	0:0	6	)
water	24:82	0:0	6	;
water	25:12	0:0	6	uint8_t
op	25:20	0:0	6	*
water	25:22	0:0	6	const
water	25:28	0:0	6	d0
op	25:31	0:0	6	=
water	25:33	0:0	6	(
water	25:34	0:0	6	mirror
water	25:41	0:0	6	?
water	25:43	0:0	6	d0_bottom_line
water	25:58	0:0	6	:
water	25:60	0:0	6	d0_data
water	25:67	0:0	6	)
water	25:68	0:0	6	;
water	26:12	0:0	6	uint8_t
op	26:20	0:0	6	*
water	26:22	0:0	6	const
water	26:28	0:0	6	d1_bottom_line
op	26:43	0:0	6	=
water	26:45	0:0	6	d1_data
op	26:53	0:0	6	+
water	26:55	0:0	6	d1_linesize
op	26:67	0:0	6	*
water	26:69	0:0	6	(
water	26:70	0:0	6	s
op	26:71	0:0	6	->
water	26:73	0:0	6	size
op	26:78	0:0	6	-
water	26:80	0:0	6	1
water	26:81	0:0	6	)
water	26:82	0:0	6	;
water	27:12	0:0	6	uint8_t
op	27:20	0:0	6	*
water	27:22	0:0	6	const
water	27:28	0:0	6	d1
op	27:31	0:0	6	=
water	27:33	0:0	6	(
water	27:34	0:0	6	mirror
water	27:41	0:0	6	?
water	27:43	0:0	6	d1_bottom_line
water	27:58	0:0	6	:
water	27:60	0:0	6	d1_data
water	27:67	0:0	6	)
water	27:68	0:0	6	;
for	28:12	44:12	6	(y = 0 ;y < src_h;y ++)
forinit	28:17	28:22	7	y = 0 ;
water	28:17	0:0	8	y
op	28:19	0:0	8	=
water	28:21	0:0	8	0
water	28:22	0:0	8	;
cond	28:24	28:28	7	y < src_h
water	28:24	0:0	8	y
op	28:26	0:0	8	<
water	28:28	0:0	8	src_h
forexpr	28:35	28:36	7	y ++
water	28:35	0:0	8	y
op	28:36	0:0	8	++
stmts	28:40	44:12	7	
water	28:40	0:0	8	{
decl	29:16	29:47	8	const int	c0
op	29:29	0:0	8	=
water	29:31	0:0	8	c0_data
op	29:38	0:0	8	[
water	29:39	0:0	8	x
op	29:40	0:0	8	]
op	29:42	0:0	8	+
water	29:44	0:0	8	256
decl	30:16	30:80	8	const int	c1
op	30:29	0:0	8	=
call	30:31	30:53	9	FFABS
arg	30:37	30:53	10	c1_data[x]-128
water	30:37	0:0	11	c1_data
op	30:44	0:0	11	[
water	30:45	0:0	11	x
op	30:46	0:0	11	]
op	30:48	0:0	11	-
water	30:50	0:0	11	128
op	30:55	0:0	8	+
call	30:57	30:79	9	FFABS
arg	30:63	30:79	10	c2_data[x]-128
water	30:63	0:0	11	c2_data
op	30:70	0:0	11	[
water	30:71	0:0	11	x
op	30:72	0:0	11	]
op	30:74	0:0	11	-
water	30:76	0:0	11	128
decl	31:16	31:31	8	uint8_t	*target
decl	32:16	32:21	8	int	p
water	33:16	0:0	8	target
op	33:23	0:0	8	=
water	33:25	0:0	8	d0
op	33:28	0:0	8	+
water	33:30	0:0	8	x
op	33:32	0:0	8	+
water	33:34	0:0	8	d0_signed_linesize
op	33:53	0:0	8	*
water	33:55	0:0	8	c0
water	33:57	0:0	8	;
call	34:16	34:45	8	update
arg	34:23	34:29	9	target
water	34:23	0:0	10	target
arg	34:31	34:34	9	max
water	34:31	0:0	10	max
arg	34:36	34:45	9	intensity
water	34:36	0:0	10	intensity
water	34:46	0:0	8	;
for	35:16	38:16	8	(p = c0 - c1 ;p < c0 + c1;p ++)
forinit	35:21	35:32	9	p = c0 - c1 ;
water	35:21	0:0	10	p
op	35:23	0:0	10	=
water	35:25	0:0	10	c0
op	35:28	0:0	10	-
water	35:30	0:0	10	c1
water	35:32	0:0	10	;
cond	35:34	35:43	9	p < c0 + c1
water	35:34	0:0	10	p
op	35:36	0:0	10	<
water	35:38	0:0	10	c0
op	35:41	0:0	10	+
water	35:43	0:0	10	c1
forexpr	35:47	35:48	9	p ++
water	35:47	0:0	10	p
op	35:48	0:0	10	++
stmts	35:52	38:16	9	
water	35:52	0:0	10	{
water	36:20	0:0	10	target
op	36:27	0:0	10	=
water	36:29	0:0	10	d1
op	36:32	0:0	10	+
water	36:34	0:0	10	x
op	36:36	0:0	10	+
water	36:38	0:0	10	d1_signed_linesize
op	36:57	0:0	10	*
water	36:59	0:0	10	p
water	36:60	0:0	10	;
call	37:20	37:41	10	update
arg	37:27	37:33	11	target
water	37:27	0:0	12	target
arg	37:35	37:38	11	max
water	37:35	0:0	12	max
arg	37:40	37:41	11	1
water	37:40	0:0	12	1
water	37:42	0:0	10	;
water	38:16	0:0	10	}
water	39:16	0:0	8	c0_data
op	39:24	0:0	8	+=
water	39:27	0:0	8	c0_linesize
water	39:38	0:0	8	;
water	40:16	0:0	8	c1_data
op	40:24	0:0	8	+=
water	40:27	0:0	8	c1_linesize
water	40:38	0:0	8	;
water	41:16	0:0	8	c2_data
op	41:24	0:0	8	+=
water	41:27	0:0	8	c2_linesize
water	41:38	0:0	8	;
water	42:16	0:0	8	d0_data
op	42:24	0:0	8	+=
water	42:27	0:0	8	d0_linesize
water	42:38	0:0	8	;
water	43:16	0:0	8	d1_data
op	43:24	0:0	8	+=
water	43:27	0:0	8	d1_linesize
water	43:38	0:0	8	;
water	44:12	0:0	8	}
water	45:8	0:0	6	}
water	46:4	0:0	4	}
else	46:6	81:4	2
stmts	46:11	81:4	3	
water	46:11	0:0	4	{
decl	47:8	47:48	4	const uint8_t	*c0_data
op	47:31	0:0	4	=
water	47:33	0:0	4	in
op	47:35	0:0	4	->
water	47:37	0:0	4	data
op	47:41	0:0	4	[
water	47:42	0:0	4	plane
op	47:47	0:0	4	]
decl	48:8	48:65	4	const uint8_t	*c1_data
op	48:31	0:0	4	=
water	48:33	0:0	4	in
op	48:35	0:0	4	->
water	48:37	0:0	4	data
op	48:41	0:0	4	[
water	48:42	0:0	4	(
water	48:43	0:0	4	plane
op	48:49	0:0	4	+
water	48:51	0:0	4	1
water	48:52	0:0	4	)
op	48:54	0:0	4	%
water	48:56	0:0	4	s
op	48:57	0:0	4	->
water	48:59	0:0	4	ncomp
op	48:64	0:0	4	]
decl	49:8	49:65	4	const uint8_t	*c2_data
op	49:31	0:0	4	=
water	49:33	0:0	4	in
op	49:35	0:0	4	->
water	49:37	0:0	4	data
op	49:41	0:0	4	[
water	49:42	0:0	4	(
water	49:43	0:0	4	plane
op	49:49	0:0	4	+
water	49:51	0:0	4	2
water	49:52	0:0	4	)
op	49:54	0:0	4	%
water	49:56	0:0	4	s
op	49:57	0:0	4	->
water	49:59	0:0	4	ncomp
op	49:64	0:0	4	]
decl	50:8	50:52	4	uint8_t	*d0_data
op	50:25	0:0	4	=
water	50:27	0:0	4	out
op	50:30	0:0	4	->
water	50:32	0:0	4	data
op	50:36	0:0	4	[
water	50:37	0:0	4	plane
op	50:42	0:0	4	]
op	50:44	0:0	4	+
water	50:46	0:0	4	offset
decl	51:8	51:69	4	uint8_t	*d1_data
op	51:25	0:0	4	=
water	51:27	0:0	4	out
op	51:30	0:0	4	->
water	51:32	0:0	4	data
op	51:36	0:0	4	[
water	51:37	0:0	4	(
water	51:38	0:0	4	plane
op	51:44	0:0	4	+
water	51:46	0:0	4	1
water	51:47	0:0	4	)
op	51:49	0:0	4	%
water	51:51	0:0	4	s
op	51:52	0:0	4	->
water	51:54	0:0	4	ncomp
op	51:59	0:0	4	]
op	51:61	0:0	4	+
water	51:63	0:0	4	offset
if	52:8	55:8	4	(mirror)
cond	52:12	52:12	5	mirror
water	52:12	0:0	6	mirror
stmts	52:20	55:8	5	
water	52:20	0:0	6	{
water	53:12	0:0	6	d0_data
op	53:20	0:0	6	+=
water	53:23	0:0	6	s
op	53:24	0:0	6	->
water	53:26	0:0	6	size
op	53:31	0:0	6	-
water	53:33	0:0	6	1
water	53:34	0:0	6	;
water	54:12	0:0	6	d1_data
op	54:20	0:0	6	+=
water	54:23	0:0	6	s
op	54:24	0:0	6	->
water	54:26	0:0	6	size
op	54:31	0:0	6	-
water	54:33	0:0	6	1
water	54:34	0:0	6	;
water	55:8	0:0	6	}
for	56:8	80:8	4	(y = 0 ;y < src_h;y ++)
forinit	56:13	56:18	5	y = 0 ;
water	56:13	0:0	6	y
op	56:15	0:0	6	=
water	56:17	0:0	6	0
water	56:18	0:0	6	;
cond	56:20	56:24	5	y < src_h
water	56:20	0:0	6	y
op	56:22	0:0	6	<
water	56:24	0:0	6	src_h
forexpr	56:31	56:32	5	y ++
water	56:31	0:0	6	y
op	56:32	0:0	6	++
stmts	56:36	80:8	5	
water	56:36	0:0	6	{
for	57:12	74:12	6	(x = 0 ;x < src_w;x ++)
forinit	57:17	57:22	7	x = 0 ;
water	57:17	0:0	8	x
op	57:19	0:0	8	=
water	57:21	0:0	8	0
water	57:22	0:0	8	;
cond	57:24	57:28	7	x < src_w
water	57:24	0:0	8	x
op	57:26	0:0	8	<
water	57:28	0:0	8	src_w
forexpr	57:35	57:36	7	x ++
water	57:35	0:0	8	x
op	57:36	0:0	8	++
stmts	57:40	74:12	7	
water	57:40	0:0	8	{
decl	58:16	58:41	8	int	c0
op	58:23	0:0	8	=
water	58:25	0:0	8	c0_data
op	58:32	0:0	8	[
water	58:33	0:0	8	x
op	58:34	0:0	8	]
op	58:36	0:0	8	+
water	58:38	0:0	8	256
decl	59:16	59:80	8	const int	c1
op	59:29	0:0	8	=
call	59:31	59:53	9	FFABS
arg	59:37	59:53	10	c1_data[x]-128
water	59:37	0:0	11	c1_data
op	59:44	0:0	11	[
water	59:45	0:0	11	x
op	59:46	0:0	11	]
op	59:48	0:0	11	-
water	59:50	0:0	11	128
op	59:55	0:0	8	+
call	59:57	59:79	9	FFABS
arg	59:63	59:79	10	c2_data[x]-128
water	59:63	0:0	11	c2_data
op	59:70	0:0	11	[
water	59:71	0:0	11	x
op	59:72	0:0	11	]
op	59:74	0:0	11	-
water	59:76	0:0	11	128
decl	60:16	60:31	8	uint8_t	*target
decl	61:16	61:21	8	int	p
if	62:16	63:41	8	(mirror)
cond	62:20	62:20	9	mirror
water	62:20	0:0	10	mirror
stmts	63:20	63:41	9	
water	63:20	0:0	10	target
op	63:27	0:0	10	=
water	63:29	0:0	10	d0_data
op	63:37	0:0	10	-
water	63:39	0:0	10	c0
water	63:41	0:0	10	;
else	64:16	65:41	8
stmts	65:20	65:41	9	
water	65:20	0:0	10	target
op	65:27	0:0	10	=
water	65:29	0:0	10	d0_data
op	65:37	0:0	10	+
water	65:39	0:0	10	c0
water	65:41	0:0	10	;
call	66:16	66:45	8	update
arg	66:23	66:29	9	target
water	66:23	0:0	10	target
arg	66:31	66:34	9	max
water	66:31	0:0	10	max
arg	66:36	66:45	9	intensity
water	66:36	0:0	10	intensity
water	66:46	0:0	8	;
for	67:16	73:16	8	(p = c0 - c1 ;p < c0 + c1;p ++)
forinit	67:21	67:32	9	p = c0 - c1 ;
water	67:21	0:0	10	p
op	67:23	0:0	10	=
water	67:25	0:0	10	c0
op	67:28	0:0	10	-
water	67:30	0:0	10	c1
water	67:32	0:0	10	;
cond	67:34	67:43	9	p < c0 + c1
water	67:34	0:0	10	p
op	67:36	0:0	10	<
water	67:38	0:0	10	c0
op	67:41	0:0	10	+
water	67:43	0:0	10	c1
forexpr	67:47	67:48	9	p ++
water	67:47	0:0	10	p
op	67:48	0:0	10	++
stmts	67:52	73:16	9	
water	67:52	0:0	10	{
if	68:20	69:44	10	(mirror)
cond	68:24	68:24	11	mirror
water	68:24	0:0	12	mirror
stmts	69:24	69:44	11	
water	69:24	0:0	12	target
op	69:31	0:0	12	=
water	69:33	0:0	12	d1_data
op	69:41	0:0	12	-
water	69:43	0:0	12	p
water	69:44	0:0	12	;
else	70:20	71:44	10
stmts	71:24	71:44	11	
water	71:24	0:0	12	target
op	71:31	0:0	12	=
water	71:33	0:0	12	d1_data
op	71:41	0:0	12	+
water	71:43	0:0	12	p
water	71:44	0:0	12	;
call	72:20	72:41	10	update
arg	72:27	72:33	11	target
water	72:27	0:0	12	target
arg	72:35	72:38	11	max
water	72:35	0:0	12	max
arg	72:40	72:41	11	1
water	72:40	0:0	12	1
water	72:42	0:0	10	;
water	73:16	0:0	10	}
water	74:12	0:0	8	}
water	75:12	0:0	6	c0_data
op	75:20	0:0	6	+=
water	75:23	0:0	6	c0_linesize
water	75:34	0:0	6	;
water	76:12	0:0	6	c1_data
op	76:20	0:0	6	+=
water	76:23	0:0	6	c1_linesize
water	76:34	0:0	6	;
water	77:12	0:0	6	c2_data
op	77:20	0:0	6	+=
water	77:23	0:0	6	c2_linesize
water	77:34	0:0	6	;
water	78:12	0:0	6	d0_data
op	78:20	0:0	6	+=
water	78:23	0:0	6	d0_linesize
water	78:34	0:0	6	;
water	79:12	0:0	6	d1_data
op	79:20	0:0	6	+=
water	79:23	0:0	6	d1_linesize
water	79:34	0:0	6	;
water	80:8	0:0	6	}
water	81:4	0:0	4	}
call	82:4	82:33	2	envelope
arg	82:13	82:14	3	s
water	82:13	0:0	4	s
arg	82:16	82:19	3	out
water	82:16	0:0	4	out
arg	82:21	82:26	3	plane
water	82:21	0:0	4	plane
arg	82:28	82:33	3	plane
water	82:28	0:0	4	plane
water	82:34	0:0	2	;
call	83:4	83:50	2	envelope
arg	83:13	83:14	3	s
water	83:13	0:0	4	s
arg	83:16	83:19	3	out
water	83:16	0:0	4	out
arg	83:21	83:26	3	plane
water	83:21	0:0	4	plane
arg	83:28	83:50	3	(plane+1)%s->ncomp
water	83:28	0:0	4	(
water	83:29	0:0	4	plane
op	83:35	0:0	4	+
water	83:37	0:0	4	1
water	83:38	0:0	4	)
op	83:40	0:0	4	%
water	83:42	0:0	4	s
op	83:43	0:0	4	->
water	83:45	0:0	4	ncomp
water	83:51	0:0	2	;

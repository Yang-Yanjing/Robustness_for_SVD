func	1:0	21:0	0	static void	idct
params	1:16	0:0	1	
param	1:17	1:29	2	uint8_t *	dst
param	1:31	1:47	2	int	dst_linesize
param	1:49	1:60	2	int	src[64]
stmnts	0:0	20:4	1	
decl	3:4	3:15	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:15	2	int	j
water	3:12	0:0	2	,
decl	3:4	3:15	2	int	k
decl	4:4	4:18	2	double	tmp[64]
for	5:4	12:4	2	(i = 0 ;i < 8;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:20	3	i < 8
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	8
forexpr	5:23	5:24	3	i ++
water	5:23	0:0	4	i
op	5:24	0:0	4	++
stmts	5:28	12:4	3	
water	5:28	0:0	4	{
for	6:8	11:8	4	(j = 0 ;j < 8;j ++)
forinit	6:13	6:18	5	j = 0 ;
water	6:13	0:0	6	j
op	6:15	0:0	6	=
water	6:17	0:0	6	0
water	6:18	0:0	6	;
cond	6:20	6:24	5	j < 8
water	6:20	0:0	6	j
op	6:22	0:0	6	<
water	6:24	0:0	6	8
forexpr	6:27	6:28	5	j ++
water	6:27	0:0	6	j
op	6:28	0:0	6	++
stmts	6:32	11:8	5	
water	6:32	0:0	6	{
decl	7:12	7:28	6	double	sum
op	7:23	0:0	6	=
water	7:25	0:0	6	0
op	7:26	0:0	6	.
water	7:27	0:0	6	0
for	8:12	9:44	6	(k = 0 ;k < 8;k ++)
forinit	8:17	8:22	7	k = 0 ;
water	8:17	0:0	8	k
op	8:19	0:0	8	=
water	8:21	0:0	8	0
water	8:22	0:0	8	;
cond	8:24	8:28	7	k < 8
water	8:24	0:0	8	k
op	8:26	0:0	8	<
water	8:28	0:0	8	8
forexpr	8:31	8:32	7	k ++
water	8:31	0:0	8	k
op	8:32	0:0	8	++
stmts	9:16	9:44	7	
water	9:16	0:0	8	sum
op	9:20	0:0	8	+=
water	9:23	0:0	8	c
op	9:24	0:0	8	[
water	9:25	0:0	8	k
op	9:26	0:0	8	*
water	9:27	0:0	8	8
op	9:28	0:0	8	+
water	9:29	0:0	8	j
op	9:30	0:0	8	]
op	9:32	0:0	8	*
water	9:34	0:0	8	src
op	9:37	0:0	8	[
water	9:38	0:0	8	8
op	9:39	0:0	8	*
water	9:40	0:0	8	i
op	9:41	0:0	8	+
water	9:42	0:0	8	k
op	9:43	0:0	8	]
water	9:44	0:0	8	;
water	10:12	0:0	6	tmp
op	10:15	0:0	6	[
water	10:16	0:0	6	8
op	10:17	0:0	6	*
water	10:18	0:0	6	i
op	10:19	0:0	6	+
water	10:20	0:0	6	j
op	10:21	0:0	6	]
op	10:23	0:0	6	=
water	10:25	0:0	6	sum
water	10:28	0:0	6	;
water	11:8	0:0	6	}
water	12:4	0:0	4	}
for	13:4	20:4	2	(j = 0 ;j < 8;j ++)
forinit	13:9	13:14	3	j = 0 ;
water	13:9	0:0	4	j
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	j < 8
water	13:16	0:0	4	j
op	13:18	0:0	4	<
water	13:20	0:0	4	8
forexpr	13:23	13:24	3	j ++
water	13:23	0:0	4	j
op	13:24	0:0	4	++
stmts	13:28	20:4	3	
water	13:28	0:0	4	{
for	14:8	19:8	4	(i = 0 ;i < 8;i ++)
forinit	14:13	14:18	5	i = 0 ;
water	14:13	0:0	6	i
op	14:15	0:0	6	=
water	14:17	0:0	6	0
water	14:18	0:0	6	;
cond	14:20	14:24	5	i < 8
water	14:20	0:0	6	i
op	14:22	0:0	6	<
water	14:24	0:0	6	8
forexpr	14:27	14:28	5	i ++
water	14:27	0:0	6	i
op	14:28	0:0	6	++
stmts	14:32	19:8	5	
water	14:32	0:0	6	{
decl	15:12	15:28	6	double	sum
op	15:23	0:0	6	=
water	15:25	0:0	6	0
op	15:26	0:0	6	.
water	15:27	0:0	6	0
for	16:12	17:42	6	(k = 0 ;k < 8;k ++)
forinit	16:17	16:22	7	k = 0 ;
water	16:17	0:0	8	k
op	16:19	0:0	8	=
water	16:21	0:0	8	0
water	16:22	0:0	8	;
cond	16:24	16:28	7	k < 8
water	16:24	0:0	8	k
op	16:26	0:0	8	<
water	16:28	0:0	8	8
forexpr	16:31	16:32	7	k ++
water	16:31	0:0	8	k
op	16:32	0:0	8	++
stmts	17:16	17:42	7	
water	17:16	0:0	8	sum
op	17:20	0:0	8	+=
water	17:23	0:0	8	c
op	17:24	0:0	8	[
water	17:25	0:0	8	k
op	17:26	0:0	8	*
water	17:27	0:0	8	8
op	17:28	0:0	8	+
water	17:29	0:0	8	i
op	17:30	0:0	8	]
op	17:31	0:0	8	*
water	17:32	0:0	8	tmp
op	17:35	0:0	8	[
water	17:36	0:0	8	8
op	17:37	0:0	8	*
water	17:38	0:0	8	k
op	17:39	0:0	8	+
water	17:40	0:0	8	j
op	17:41	0:0	8	]
water	17:42	0:0	8	;
water	18:12	0:0	6	dst
op	18:15	0:0	6	[
water	18:16	0:0	6	dst_linesize
op	18:28	0:0	6	*
water	18:29	0:0	6	i
op	18:31	0:0	6	+
water	18:33	0:0	6	j
op	18:34	0:0	6	]
op	18:36	0:0	6	=
call	18:38	18:71	6	av_clip_uint8
arg	18:52	18:71	7	(int)floor(sum+0.5)
water	18:52	0:0	8	(
water	18:53	0:0	8	int
water	18:56	0:0	8	)
call	18:57	18:70	8	floor
arg	18:63	18:70	9	sum+0.5
water	18:63	0:0	10	sum
op	18:66	0:0	10	+
water	18:67	0:0	10	0
op	18:68	0:0	10	.
water	18:69	0:0	10	5
water	18:72	0:0	6	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}

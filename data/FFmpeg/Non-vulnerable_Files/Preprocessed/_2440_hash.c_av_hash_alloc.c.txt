func	1:0	36:0	0	int	av_hash_alloc
params	1:17	0:0	1	
param	1:18	1:37	2	AVHashContext * *	ctx
param	1:39	1:55	2	const char *	name
stmnts	0:0	35:12	1	
decl	3:4	3:22	2	AVHashContext	*res
decl	4:4	4:9	2	int	i
op	5:4	0:0	2	*
water	5:5	0:0	2	ctx
op	5:9	0:0	2	=
water	5:11	0:0	2	NULL
water	5:15	0:0	2	;
for	6:4	8:17	2	(i = 0 ;i < NUM_HASHES;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:20	3	i < NUM_HASHES
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	NUM_HASHES
forexpr	6:32	6:33	3	i ++
water	6:32	0:0	4	i
op	6:33	0:0	4	++
stmts	7:8	8:17	3	
if	7:8	8:17	4	(av_strcasecmp (name ,hashdesc [ i ] . name ) == 0)
cond	7:12	7:53	5	av_strcasecmp (name ,hashdesc [ i ] . name ) == 0
call	7:12	7:48	6	av_strcasecmp
arg	7:26	7:30	7	name
water	7:26	0:0	8	name
arg	7:32	7:48	7	hashdesc[i].name
water	7:32	0:0	8	hashdesc
op	7:40	0:0	8	[
water	7:41	0:0	8	i
op	7:42	0:0	8	]
op	7:43	0:0	8	.
water	7:44	0:0	8	name
op	7:50	0:0	6	==
water	7:53	0:0	6	0
stmts	8:12	8:17	5	
break	8:12	8:17	6	
if	9:4	9:47	2	(i >= NUM_HASHES)
cond	9:8	9:13	3	i >= NUM_HASHES
water	9:8	0:0	4	i
op	9:10	0:0	4	>=
water	9:13	0:0	4	NUM_HASHES
stmts	9:25	9:47	3	
return	9:25	9:47	4	AVERROR(EINVAL)
call	9:32	9:46	5	AVERROR
arg	9:40	9:46	6	EINVAL
water	9:40	0:0	7	EINVAL
water	10:4	0:0	2	res
op	10:8	0:0	2	=
call	10:10	10:33	2	av_mallocz
arg	10:21	10:33	3	sizeof(*res)
op	10:21	0:0	4	sizeof
water	10:27	0:0	4	(
op	10:28	0:0	4	*
water	10:29	0:0	4	res
water	10:32	0:0	4	)
water	10:34	0:0	2	;
if	11:4	11:36	2	(! res)
cond	11:8	11:9	3	! res
op	11:8	0:0	4	!
water	11:9	0:0	4	res
stmts	11:14	11:36	3	
return	11:14	11:36	4	AVERROR(ENOMEM)
call	11:21	11:35	5	AVERROR
arg	11:29	11:35	6	ENOMEM
water	11:29	0:0	7	ENOMEM
water	12:4	0:0	2	res
op	12:7	0:0	2	->
water	12:9	0:0	2	type
op	12:14	0:0	2	=
water	12:16	0:0	2	i
water	12:17	0:0	2	;
switch	13:4	29:4	2	(i)
cond	13:12	13:12	3	i
water	13:12	0:0	4	i
stmts	13:15	29:4	3	
water	13:15	0:0	4	{
label	14:4	14:12	4	case MD5 :
water	14:18	0:0	4	res
op	14:21	0:0	4	->
water	14:23	0:0	4	ctx
op	14:27	0:0	4	=
call	14:29	14:42	4	av_md5_alloc
water	14:43	0:0	4	;
break	14:45	14:50	4	
label	15:4	15:16	4	case MURMUR3 :
water	15:18	0:0	4	res
op	15:21	0:0	4	->
water	15:23	0:0	4	ctx
op	15:27	0:0	4	=
call	15:29	15:46	4	av_murmur3_alloc
water	15:47	0:0	4	;
break	15:49	15:54	4	
label	16:4	16:18	4	case RIPEMD128 :
label	17:4	17:18	4	case RIPEMD160 :
label	18:4	18:18	4	case RIPEMD256 :
label	19:4	19:18	4	case RIPEMD320 :
water	19:20	0:0	4	res
op	19:23	0:0	4	->
water	19:25	0:0	4	ctx
op	19:29	0:0	4	=
call	19:31	19:47	4	av_ripemd_alloc
water	19:48	0:0	4	;
break	19:50	19:55	4	
label	20:4	20:15	4	case SHA160 :
label	21:4	21:15	4	case SHA224 :
label	22:4	22:15	4	case SHA256 :
water	22:18	0:0	4	res
op	22:21	0:0	4	->
water	22:23	0:0	4	ctx
op	22:27	0:0	4	=
call	22:29	22:42	4	av_sha_alloc
water	22:43	0:0	4	;
break	22:45	22:50	4	
label	23:4	23:19	4	case SHA512_224 :
label	24:4	24:19	4	case SHA512_256 :
label	25:4	25:15	4	case SHA384 :
label	26:4	26:15	4	case SHA512 :
water	26:18	0:0	4	res
op	26:21	0:0	4	->
water	26:23	0:0	4	ctx
op	26:27	0:0	4	=
call	26:29	26:45	4	av_sha512_alloc
water	26:46	0:0	4	;
break	26:48	26:53	4	
label	27:4	27:14	4	case CRC32 :
water	27:18	0:0	4	res
op	27:21	0:0	4	->
water	27:23	0:0	4	crctab
op	27:30	0:0	4	=
call	27:32	27:66	4	av_crc_get_table
arg	27:49	27:66	5	AV_CRC_32_IEEE_LE
water	27:49	0:0	6	AV_CRC_32_IEEE_LE
water	27:67	0:0	4	;
break	27:69	27:74	4	
label	28:4	28:16	4	case ADLER32 :
break	28:18	28:23	4	
water	29:4	0:0	4	}
if	30:4	33:4	2	(i != ADLER32 && i != CRC32 && ! res -> ctx)
cond	30:8	30:44	3	i != ADLER32 && i != CRC32 && ! res -> ctx
water	30:8	0:0	4	i
op	30:10	0:0	4	!=
water	30:13	0:0	4	ADLER32
op	30:21	0:0	4	&&
water	30:24	0:0	4	i
op	30:26	0:0	4	!=
water	30:29	0:0	4	CRC32
op	30:35	0:0	4	&&
op	30:38	0:0	4	!
water	30:39	0:0	4	res
op	30:42	0:0	4	->
water	30:44	0:0	4	ctx
stmts	30:49	33:4	3	
water	30:49	0:0	4	{
call	31:8	31:19	4	av_free
arg	31:16	31:19	5	res
water	31:16	0:0	6	res
water	31:20	0:0	4	;
return	32:8	32:30	4	AVERROR(ENOMEM)
call	32:15	32:29	5	AVERROR
arg	32:23	32:29	6	ENOMEM
water	32:23	0:0	7	ENOMEM
water	33:4	0:0	4	}
op	34:4	0:0	2	*
water	34:5	0:0	2	ctx
op	34:9	0:0	2	=
water	34:11	0:0	2	res
water	34:14	0:0	2	;
return	35:4	35:12	2	0
water	35:11	0:0	3	0

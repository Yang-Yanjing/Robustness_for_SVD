func	1:0	37:0	0	static int	check
params	1:16	0:0	1	
param	1:17	1:27	2	char *	file
stmnts	0:0	36:14	1	
decl	3:4	3:24	2	uint8_t	buffer[SIZE]
decl	4:4	4:28	2	int	fd
water	4:10	0:0	2	,
decl	4:4	4:28	2	int	flags
op	4:18	0:0	2	=
water	4:20	0:0	2	O_RDONLY
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
water	7:4	0:0	2	flags
op	7:10	0:0	2	|=
water	7:13	0:0	2	O_BINARY
water	7:21	0:0	2	;
if	9:4	9:36	2	(file)
cond	9:8	9:8	3	file
water	9:8	0:0	4	file
stmts	9:14	9:36	3	
water	9:14	0:0	4	fd
op	9:17	0:0	4	=
call	9:19	9:35	4	open
arg	9:24	9:28	5	file
water	9:24	0:0	6	file
arg	9:30	9:35	5	flags
water	9:30	0:0	6	flags
water	9:36	0:0	4	;
else	10:4	10:20	2
stmts	10:14	10:20	3	
water	10:14	0:0	4	fd
op	10:17	0:0	4	=
water	10:19	0:0	4	0
water	10:20	0:0	4	;
if	11:4	15:4	2	(fd == - 1)
cond	11:8	11:15	3	fd == - 1
water	11:8	0:0	4	fd
op	11:11	0:0	4	==
op	11:14	0:0	4	-
water	11:15	0:0	4	1
stmts	11:18	15:4	3	
water	11:18	0:0	4	{
call	12:8	12:77	4	printf
arg	12:15	12:36	5	"%s=OPEN-FAILED: %s:"
water	12:15	0:0	6	"%s=OPEN-FAILED: %s:"
arg	12:38	12:60	5	av_hash_get_name(hash)
call	12:38	12:59	6	av_hash_get_name
arg	12:55	12:59	7	hash
water	12:55	0:0	8	hash
arg	12:62	12:77	5	strerror(errno)
call	12:62	12:76	6	strerror
arg	12:71	12:76	7	errno
water	12:71	0:0	8	errno
water	12:78	0:0	4	;
water	13:8	0:0	4	ret
op	13:12	0:0	4	=
water	13:14	0:0	4	1
water	13:15	0:0	4	;
goto	14:8	14:16	4	end
water	14:13	0:0	5	end
water	15:4	0:0	4	}
call	16:4	16:21	2	av_hash_init
arg	16:17	16:21	3	hash
water	16:17	0:0	4	hash
water	16:22	0:0	2	;
for	17:4	29:4	2	(;;)
forinit	17:9	17:9	3	;
water	17:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	17:13	29:4	3	
water	17:13	0:0	4	{
decl	18:8	18:41	4	int	size
op	18:17	0:0	4	=
call	18:19	18:40	5	read
arg	18:24	18:26	6	fd
water	18:24	0:0	7	fd
arg	18:28	18:34	6	buffer
water	18:28	0:0	7	buffer
arg	18:36	18:40	6	SIZE
water	18:36	0:0	7	SIZE
if	19:8	26:8	4	(size < 0)
cond	19:12	19:19	5	size < 0
water	19:12	0:0	6	size
op	19:17	0:0	6	<
water	19:19	0:0	6	0
stmts	19:22	26:8	5	
water	19:22	0:0	6	{
decl	20:12	20:27	6	int	err
op	20:20	0:0	6	=
water	20:22	0:0	6	errno
call	21:12	21:20	6	close
arg	21:18	21:20	7	fd
water	21:18	0:0	8	fd
water	21:21	0:0	6	;
call	22:12	22:19	6	finish
water	22:20	0:0	6	;
call	23:12	23:52	6	printf
arg	23:19	23:37	7	"+READ-FAILED: %s"
water	23:19	0:0	8	"+READ-FAILED: %s"
arg	23:39	23:52	7	strerror(err)
call	23:39	23:51	8	strerror
arg	23:48	23:51	9	err
water	23:48	0:0	10	err
water	23:53	0:0	6	;
water	24:12	0:0	6	ret
op	24:16	0:0	6	=
water	24:18	0:0	6	2
water	24:19	0:0	6	;
goto	25:12	25:20	6	end
water	25:17	0:0	7	end
water	26:8	0:0	6	}
else	26:10	27:17	4
stmts	26:15	27:17	5	
if	26:15	27:17	6	(! size)
cond	26:18	26:19	7	! size
op	26:18	0:0	8	!
water	26:19	0:0	8	size
stmts	27:12	27:17	7	
break	27:12	27:17	8	
call	28:8	28:41	4	av_hash_update
arg	28:23	28:27	5	hash
water	28:23	0:0	6	hash
arg	28:29	28:35	5	buffer
water	28:29	0:0	6	buffer
arg	28:37	28:41	5	size
water	28:37	0:0	6	size
water	28:42	0:0	4	;
water	29:4	0:0	4	}
call	30:4	30:12	2	close
arg	30:10	30:12	3	fd
water	30:10	0:0	4	fd
water	30:13	0:0	2	;
call	31:4	31:11	2	finish
water	31:12	0:0	2	;
label	32:0	32:3	2	end :
if	33:4	34:28	2	(file)
cond	33:8	33:8	3	file
water	33:8	0:0	4	file
stmts	34:8	34:28	3	
call	34:8	34:27	4	printf
arg	34:15	34:21	5	" *%s"
water	34:15	0:0	6	" *%s"
arg	34:23	34:27	5	file
water	34:23	0:0	6	file
water	34:28	0:0	4	;
call	35:4	35:15	2	printf
arg	35:11	35:15	3	"\n"
water	35:11	0:0	4	"\n"
water	35:16	0:0	2	;
return	36:4	36:14	2	ret
water	36:11	0:0	3	ret

func	1:0	70:0	0	int	ff_load_image
params	1:17	0:0	1	
param	1:18	1:34	2	uint8_t *	data[4]
param	1:36	1:51	2	int	linesize[4]
param	2:18	2:24	2	int *	w
param	2:26	2:32	2	int *	h
param	2:34	2:61	2	enum AVPixelFormat *	pix_fmt
param	3:18	3:38	2	const char *	filename
param	3:40	3:53	2	void *	log_ctx
stmnts	0:0	69:14	1	
decl	5:4	5:33	2	AVInputFormat	*iformat
op	5:27	0:0	2	=
water	5:29	0:0	2	NULL
decl	6:4	6:38	2	AVFormatContext	*format_ctx
op	6:32	0:0	2	=
water	6:34	0:0	2	NULL
decl	7:4	7:18	2	AVCodec	*codec
decl	8:4	8:29	2	AVCodecContext	*codec_ctx
decl	9:4	9:18	2	AVFrame	*frame
decl	10:4	10:30	2	int	frame_decoded
water	10:21	0:0	2	,
decl	10:4	10:30	2	int	ret
op	10:27	0:0	2	=
water	10:29	0:0	2	0
decl	11:4	11:16	2	AVPacket	pkt
decl	12:4	12:26	2	AVDictionary	*opt
op	12:21	0:0	2	=
water	12:22	0:0	2	NULL
call	13:4	13:23	2	av_init_packet
arg	13:19	13:23	3	&pkt
op	13:19	0:0	4	&
water	13:20	0:0	4	pkt
water	13:24	0:0	2	;
call	14:4	14:20	2	av_register_all
water	14:21	0:0	2	;
water	15:4	0:0	2	iformat
op	15:12	0:0	2	=
call	15:14	15:43	2	av_find_input_format
arg	15:35	15:43	3	"image2"
water	15:35	0:0	4	"image2"
water	15:44	0:0	2	;
if	16:4	20:4	2	(( ret =avformat_open_input (& format_ctx ,filename ,iformat ,NULL ) ) < 0)
cond	16:8	16:76	3	( ret =avformat_open_input (& format_ctx ,filename ,iformat ,NULL ) ) < 0
water	16:8	0:0	4	(
water	16:9	0:0	4	ret
op	16:13	0:0	4	=
call	16:15	16:71	4	avformat_open_input
arg	16:35	16:46	5	&format_ctx
op	16:35	0:0	6	&
water	16:36	0:0	6	format_ctx
arg	16:48	16:56	5	filename
water	16:48	0:0	6	filename
arg	16:58	16:65	5	iformat
water	16:58	0:0	6	iformat
arg	16:67	16:71	5	NULL
water	16:67	0:0	6	NULL
water	16:72	0:0	4	)
op	16:74	0:0	4	<
water	16:76	0:0	4	0
stmts	16:79	20:4	3	
water	16:79	0:0	4	{
call	17:8	18:59	4	av_log
arg	17:15	17:22	5	log_ctx
water	17:15	0:0	6	log_ctx
arg	17:24	17:36	5	AV_LOG_ERROR
water	17:24	0:0	6	AV_LOG_ERROR
arg	18:15	18:49	5	"Failed to open input file '%s'\n"
water	18:15	0:0	6	"Failed to open input file '%s'\n"
arg	18:51	18:59	5	filename
water	18:51	0:0	6	filename
water	18:60	0:0	4	;
return	19:8	19:18	4	ret
water	19:15	0:0	5	ret
water	20:4	0:0	4	}
if	21:4	24:4	2	(( ret =avformat_find_stream_info (format_ctx ,NULL ) ) < 0)
cond	21:8	21:62	3	( ret =avformat_find_stream_info (format_ctx ,NULL ) ) < 0
water	21:8	0:0	4	(
water	21:9	0:0	4	ret
op	21:13	0:0	4	=
call	21:15	21:57	4	avformat_find_stream_info
arg	21:41	21:51	5	format_ctx
water	21:41	0:0	6	format_ctx
arg	21:53	21:57	5	NULL
water	21:53	0:0	6	NULL
water	21:58	0:0	4	)
op	21:60	0:0	4	<
water	21:62	0:0	4	0
stmts	21:65	24:4	3	
water	21:65	0:0	4	{
call	22:8	22:65	4	av_log
arg	22:15	22:22	5	log_ctx
water	22:15	0:0	6	log_ctx
arg	22:24	22:36	5	AV_LOG_ERROR
water	22:24	0:0	6	AV_LOG_ERROR
arg	22:38	22:65	5	"Find stream info failed\n"
water	22:38	0:0	6	"Find stream info failed\n"
water	22:66	0:0	4	;
return	23:8	23:18	4	ret
water	23:15	0:0	5	ret
water	24:4	0:0	4	}
water	25:4	0:0	2	codec_ctx
op	25:14	0:0	2	=
water	25:16	0:0	2	format_ctx
op	25:26	0:0	2	->
water	25:28	0:0	2	streams
op	25:35	0:0	2	[
water	25:36	0:0	2	0
op	25:37	0:0	2	]
op	25:38	0:0	2	->
water	25:40	0:0	2	codec
water	25:45	0:0	2	;
water	26:4	0:0	2	codec
op	26:10	0:0	2	=
call	26:12	26:52	2	avcodec_find_decoder
arg	26:33	26:52	3	codec_ctx->codec_id
water	26:33	0:0	4	codec_ctx
op	26:42	0:0	4	->
water	26:44	0:0	4	codec_id
water	26:53	0:0	2	;
if	27:4	31:4	2	(! codec)
cond	27:8	27:9	3	! codec
op	27:8	0:0	4	!
water	27:9	0:0	4	codec
stmts	27:16	31:4	3	
water	27:16	0:0	4	{
call	28:8	28:62	4	av_log
arg	28:15	28:22	5	log_ctx
water	28:15	0:0	6	log_ctx
arg	28:24	28:36	5	AV_LOG_ERROR
water	28:24	0:0	6	AV_LOG_ERROR
arg	28:38	28:62	5	"Failed to find codec\n"
water	28:38	0:0	6	"Failed to find codec\n"
water	28:63	0:0	4	;
water	29:8	0:0	4	ret
op	29:12	0:0	4	=
call	29:14	29:28	4	AVERROR
arg	29:22	29:28	5	EINVAL
water	29:22	0:0	6	EINVAL
water	29:29	0:0	4	;
goto	30:8	30:16	4	end
water	30:13	0:0	5	end
water	31:4	0:0	4	}
call	32:4	32:47	2	av_dict_set
arg	32:16	32:20	3	&opt
op	32:16	0:0	4	&
water	32:17	0:0	4	opt
arg	32:22	32:35	3	"thread_type"
water	32:22	0:0	4	"thread_type"
arg	32:37	32:44	3	"slice"
water	32:37	0:0	4	"slice"
arg	32:46	32:47	3	0
water	32:46	0:0	4	0
water	32:48	0:0	2	;
if	33:4	36:4	2	(( ret =avcodec_open2 (codec_ctx ,codec ,& opt ) ) < 0)
cond	33:8	33:56	3	( ret =avcodec_open2 (codec_ctx ,codec ,& opt ) ) < 0
water	33:8	0:0	4	(
water	33:9	0:0	4	ret
op	33:13	0:0	4	=
call	33:15	33:51	4	avcodec_open2
arg	33:29	33:38	5	codec_ctx
water	33:29	0:0	6	codec_ctx
arg	33:40	33:45	5	codec
water	33:40	0:0	6	codec
arg	33:47	33:51	5	&opt
op	33:47	0:0	6	&
water	33:48	0:0	6	opt
water	33:52	0:0	4	)
op	33:54	0:0	4	<
water	33:56	0:0	4	0
stmts	33:59	36:4	3	
water	33:59	0:0	4	{
call	34:8	34:62	4	av_log
arg	34:15	34:22	5	log_ctx
water	34:15	0:0	6	log_ctx
arg	34:24	34:36	5	AV_LOG_ERROR
water	34:24	0:0	6	AV_LOG_ERROR
arg	34:38	34:62	5	"Failed to open codec\n"
water	34:38	0:0	6	"Failed to open codec\n"
water	34:63	0:0	4	;
goto	35:8	35:16	4	end
water	35:13	0:0	5	end
water	36:4	0:0	4	}
if	37:4	41:4	2	(! ( frame =av_frame_alloc ( ) ))
cond	37:8	37:34	3	! ( frame =av_frame_alloc ( ) )
op	37:8	0:0	4	!
water	37:9	0:0	4	(
water	37:10	0:0	4	frame
op	37:16	0:0	4	=
call	37:18	37:33	4	av_frame_alloc
water	37:34	0:0	4	)
stmts	37:38	41:4	3	
water	37:38	0:0	4	{
call	38:8	38:63	4	av_log
arg	38:15	38:22	5	log_ctx
water	38:15	0:0	6	log_ctx
arg	38:24	38:36	5	AV_LOG_ERROR
water	38:24	0:0	6	AV_LOG_ERROR
arg	38:38	38:63	5	"Failed to alloc frame\n"
water	38:38	0:0	6	"Failed to alloc frame\n"
water	38:64	0:0	4	;
water	39:8	0:0	4	ret
op	39:12	0:0	4	=
call	39:14	39:28	4	AVERROR
arg	39:22	39:28	5	ENOMEM
water	39:22	0:0	6	ENOMEM
water	39:29	0:0	4	;
goto	40:8	40:16	4	end
water	40:13	0:0	5	end
water	41:4	0:0	4	}
water	42:4	0:0	2	ret
op	42:8	0:0	2	=
call	42:10	42:40	2	av_read_frame
arg	42:24	42:34	3	format_ctx
water	42:24	0:0	4	format_ctx
arg	42:36	42:40	3	&pkt
op	42:36	0:0	4	&
water	42:37	0:0	4	pkt
water	42:41	0:0	2	;
if	43:4	46:4	2	(ret < 0)
cond	43:8	43:14	3	ret < 0
water	43:8	0:0	4	ret
op	43:12	0:0	4	<
water	43:14	0:0	4	0
stmts	43:17	46:4	3	
water	43:17	0:0	4	{
call	44:8	44:72	4	av_log
arg	44:15	44:22	5	log_ctx
water	44:15	0:0	6	log_ctx
arg	44:24	44:36	5	AV_LOG_ERROR
water	44:24	0:0	6	AV_LOG_ERROR
arg	44:38	44:72	5	"Failed to read frame from file\n"
water	44:38	0:0	6	"Failed to read frame from file\n"
water	44:73	0:0	4	;
goto	45:8	45:16	4	end
water	45:13	0:0	5	end
water	46:4	0:0	4	}
water	47:4	0:0	2	ret
op	47:8	0:0	2	=
call	47:10	47:70	2	avcodec_decode_video2
arg	47:32	47:41	3	codec_ctx
water	47:32	0:0	4	codec_ctx
arg	47:43	47:48	3	frame
water	47:43	0:0	4	frame
arg	47:50	47:64	3	&frame_decoded
op	47:50	0:0	4	&
water	47:51	0:0	4	frame_decoded
arg	47:66	47:70	3	&pkt
op	47:66	0:0	4	&
water	47:67	0:0	4	pkt
water	47:71	0:0	2	;
if	48:4	53:4	2	(ret < 0 || ! frame_decoded)
cond	48:8	48:20	3	ret < 0 || ! frame_decoded
water	48:8	0:0	4	ret
op	48:12	0:0	4	<
water	48:14	0:0	4	0
op	48:16	0:0	4	||
op	48:19	0:0	4	!
water	48:20	0:0	4	frame_decoded
stmts	48:35	53:4	3	
water	48:35	0:0	4	{
call	49:8	49:74	4	av_log
arg	49:15	49:22	5	log_ctx
water	49:15	0:0	6	log_ctx
arg	49:24	49:36	5	AV_LOG_ERROR
water	49:24	0:0	6	AV_LOG_ERROR
arg	49:38	49:74	5	"Failed to decode image from file\n"
water	49:38	0:0	6	"Failed to decode image from file\n"
water	49:75	0:0	4	;
if	50:8	51:20	4	(ret >= 0)
cond	50:12	50:19	5	ret >= 0
water	50:12	0:0	6	ret
op	50:16	0:0	6	>=
water	50:19	0:0	6	0
stmts	51:12	51:20	5	
water	51:12	0:0	6	ret
op	51:16	0:0	6	=
op	51:18	0:0	6	-
water	51:19	0:0	6	1
water	51:20	0:0	6	;
goto	52:8	52:16	4	end
water	52:13	0:0	5	end
water	53:4	0:0	4	}
op	54:4	0:0	2	*
water	54:5	0:0	2	w
op	54:13	0:0	2	=
water	54:15	0:0	2	frame
op	54:20	0:0	2	->
water	54:22	0:0	2	width
water	54:27	0:0	2	;
op	55:4	0:0	2	*
water	55:5	0:0	2	h
op	55:13	0:0	2	=
water	55:15	0:0	2	frame
op	55:20	0:0	2	->
water	55:22	0:0	2	height
water	55:28	0:0	2	;
op	56:4	0:0	2	*
water	56:5	0:0	2	pix_fmt
op	56:13	0:0	2	=
water	56:15	0:0	2	frame
op	56:20	0:0	2	->
water	56:22	0:0	2	format
water	56:28	0:0	2	;
if	57:4	58:16	2	(( ret =av_image_alloc (data ,linesize ,* w ,* h ,* pix_fmt ,16 ) ) < 0)
cond	57:8	57:71	3	( ret =av_image_alloc (data ,linesize ,* w ,* h ,* pix_fmt ,16 ) ) < 0
water	57:8	0:0	4	(
water	57:9	0:0	4	ret
op	57:13	0:0	4	=
call	57:15	57:66	4	av_image_alloc
arg	57:30	57:34	5	data
water	57:30	0:0	6	data
arg	57:36	57:44	5	linesize
water	57:36	0:0	6	linesize
arg	57:46	57:48	5	*w
op	57:46	0:0	6	*
water	57:47	0:0	6	w
arg	57:50	57:52	5	*h
op	57:50	0:0	6	*
water	57:51	0:0	6	h
arg	57:54	57:62	5	*pix_fmt
op	57:54	0:0	6	*
water	57:55	0:0	6	pix_fmt
arg	57:64	57:66	5	16
water	57:64	0:0	6	16
water	57:67	0:0	4	)
op	57:69	0:0	4	<
water	57:71	0:0	4	0
stmts	58:8	58:16	3	
goto	58:8	58:16	4	end
water	58:13	0:0	5	end
water	59:4	0:0	2	ret
op	59:8	0:0	2	=
water	59:10	0:0	2	0
water	59:11	0:0	2	;
call	60:4	60:98	2	av_image_copy
arg	60:18	60:22	3	data
water	60:18	0:0	4	data
arg	60:24	60:32	3	linesize
water	60:24	0:0	4	linesize
arg	60:34	60:63	3	(constuint8_t**)frame->data
water	60:34	0:0	4	(
water	60:35	0:0	4	const
water	60:41	0:0	4	uint8_t
op	60:49	0:0	4	*
op	60:50	0:0	4	*
water	60:51	0:0	4	)
water	60:52	0:0	4	frame
op	60:57	0:0	4	->
water	60:59	0:0	4	data
arg	60:65	60:80	3	frame->linesize
water	60:65	0:0	4	frame
op	60:70	0:0	4	->
water	60:72	0:0	4	linesize
arg	60:82	60:90	3	*pix_fmt
op	60:82	0:0	4	*
water	60:83	0:0	4	pix_fmt
arg	60:92	60:94	3	*w
op	60:92	0:0	4	*
water	60:93	0:0	4	w
arg	60:96	60:98	3	*h
op	60:96	0:0	4	*
water	60:97	0:0	4	h
water	60:99	0:0	2	;
label	61:0	61:3	2	end :
call	62:4	62:23	2	av_free_packet
arg	62:19	62:23	3	&pkt
op	62:19	0:0	4	&
water	62:20	0:0	4	pkt
water	62:24	0:0	2	;
call	63:4	63:27	2	avcodec_close
arg	63:18	63:27	3	codec_ctx
water	63:18	0:0	4	codec_ctx
water	63:28	0:0	2	;
call	64:4	64:36	2	avformat_close_input
arg	64:25	64:36	3	&format_ctx
op	64:25	0:0	4	&
water	64:26	0:0	4	format_ctx
water	64:37	0:0	2	;
call	65:4	65:24	2	av_frame_free
arg	65:18	65:24	3	&frame
op	65:18	0:0	4	&
water	65:19	0:0	4	frame
water	65:25	0:0	2	;
call	66:4	66:21	2	av_dict_free
arg	66:17	66:21	3	&opt
op	66:17	0:0	4	&
water	66:18	0:0	4	opt
water	66:22	0:0	2	;
if	67:4	68:82	2	(ret < 0)
cond	67:8	67:14	3	ret < 0
water	67:8	0:0	4	ret
op	67:12	0:0	4	<
water	67:14	0:0	4	0
stmts	68:8	68:82	3	
call	68:8	68:81	4	av_log
arg	68:15	68:22	5	log_ctx
water	68:15	0:0	6	log_ctx
arg	68:24	68:36	5	AV_LOG_ERROR
water	68:24	0:0	6	AV_LOG_ERROR
arg	68:38	68:71	5	"Error loading image file '%s'\n"
water	68:38	0:0	6	"Error loading image file '%s'\n"
arg	68:73	68:81	5	filename
water	68:73	0:0	6	filename
water	68:82	0:0	4	;
return	69:4	69:14	2	ret
water	69:11	0:0	3	ret

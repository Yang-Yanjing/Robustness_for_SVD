func	1:0	37:0	0	static int	yae_overlap_add
params	1:26	0:0	1	
param	1:27	1:48	2	ATempoContext *	atempo
param	2:27	2:44	2	uint8_t * *	dst_ref
param	3:27	3:43	2	uint8_t *	dst_end
stmnts	0:0	36:65	1	
decl	6:4	6:53	2	const AudioFragment	*prev
op	6:30	0:0	2	=
call	6:32	6:52	3	yae_prev_frag
arg	6:46	6:52	4	atempo
water	6:46	0:0	5	atempo
decl	7:4	7:53	2	const AudioFragment	*frag
op	7:30	0:0	2	=
call	7:32	7:52	3	yae_curr_frag
arg	7:46	7:52	4	atempo
water	7:46	0:0	5	atempo
decl	8:4	9:55	2	const int64_t	start_here
op	8:29	0:0	2	=
call	8:31	9:54	3	FFMAX
arg	8:37	8:56	4	atempo->position[1]
water	8:37	0:0	5	atempo
op	8:43	0:0	5	->
water	8:45	0:0	5	position
op	8:53	0:0	5	[
water	8:54	0:0	5	1
op	8:55	0:0	5	]
arg	9:37	9:54	4	frag->position[1]
water	9:37	0:0	5	frag
op	9:41	0:0	5	->
water	9:43	0:0	5	position
op	9:51	0:0	5	[
water	9:52	0:0	5	1
op	9:53	0:0	5	]
decl	10:4	11:71	2	const int64_t	stop_here
op	10:28	0:0	2	=
call	10:30	11:70	3	FFMIN
arg	10:36	10:70	4	prev->position[1]+prev->nsamples
water	10:36	0:0	5	prev
op	10:40	0:0	5	->
water	10:42	0:0	5	position
op	10:50	0:0	5	[
water	10:51	0:0	5	1
op	10:52	0:0	5	]
op	10:54	0:0	5	+
water	10:56	0:0	5	prev
op	10:60	0:0	5	->
water	10:62	0:0	5	nsamples
arg	11:36	11:70	4	frag->position[1]+frag->nsamples
water	11:36	0:0	5	frag
op	11:40	0:0	5	->
water	11:42	0:0	5	position
op	11:50	0:0	5	[
water	11:51	0:0	5	1
op	11:52	0:0	5	]
op	11:54	0:0	5	+
water	11:56	0:0	5	frag
op	11:60	0:0	5	->
water	11:62	0:0	5	nsamples
decl	12:4	12:50	2	const int64_t	overlap
op	12:26	0:0	2	=
water	12:28	0:0	2	stop_here
op	12:38	0:0	2	-
water	12:40	0:0	2	start_here
decl	13:4	13:53	2	const int64_t	ia
op	13:21	0:0	2	=
water	13:23	0:0	2	start_here
op	13:34	0:0	2	-
water	13:36	0:0	2	prev
op	13:40	0:0	2	->
water	13:42	0:0	2	position
op	13:50	0:0	2	[
water	13:51	0:0	2	1
op	13:52	0:0	2	]
decl	14:4	14:53	2	const int64_t	ib
op	14:21	0:0	2	=
water	14:23	0:0	2	start_here
op	14:34	0:0	2	-
water	14:36	0:0	2	frag
op	14:40	0:0	2	->
water	14:42	0:0	2	position
op	14:50	0:0	2	[
water	14:51	0:0	2	1
op	14:52	0:0	2	]
decl	15:4	15:39	2	const float	*wa
op	15:20	0:0	2	=
water	15:22	0:0	2	atempo
op	15:28	0:0	2	->
water	15:30	0:0	2	hann
op	15:35	0:0	2	+
water	15:37	0:0	2	ia
decl	16:4	16:39	2	const float	*wb
op	16:20	0:0	2	=
water	16:22	0:0	2	atempo
op	16:28	0:0	2	->
water	16:30	0:0	2	hann
op	16:35	0:0	2	+
water	16:37	0:0	2	ib
decl	17:4	17:55	2	const uint8_t	*a
op	17:21	0:0	2	=
water	17:23	0:0	2	prev
op	17:27	0:0	2	->
water	17:29	0:0	2	data
op	17:34	0:0	2	+
water	17:36	0:0	2	ia
op	17:39	0:0	2	*
water	17:41	0:0	2	atempo
op	17:47	0:0	2	->
water	17:49	0:0	2	stride
decl	18:4	18:55	2	const uint8_t	*b
op	18:21	0:0	2	=
water	18:23	0:0	2	frag
op	18:27	0:0	2	->
water	18:29	0:0	2	data
op	18:34	0:0	2	+
water	18:36	0:0	2	ib
op	18:39	0:0	2	*
water	18:41	0:0	2	atempo
op	18:47	0:0	2	->
water	18:49	0:0	2	stride
decl	19:4	19:27	2	uint8_t	*dst
op	19:17	0:0	2	=
op	19:19	0:0	2	*
water	19:20	0:0	2	dst_ref
call	20:4	22:40	2	av_assert0
arg	20:15	22:40	3	start_here<=stop_here&&frag->position[1]<=start_here&&overlap<=frag->nsamples
water	20:15	0:0	4	start_here
op	20:26	0:0	4	<=
water	20:29	0:0	4	stop_here
op	20:39	0:0	4	&&
water	21:15	0:0	4	frag
op	21:19	0:0	4	->
water	21:21	0:0	4	position
op	21:29	0:0	4	[
water	21:30	0:0	4	1
op	21:31	0:0	4	]
op	21:33	0:0	4	<=
water	21:36	0:0	4	start_here
op	21:47	0:0	4	&&
water	22:15	0:0	4	overlap
op	22:23	0:0	4	<=
water	22:26	0:0	4	frag
op	22:30	0:0	4	->
water	22:32	0:0	4	nsamples
water	22:41	0:0	2	;
if	23:4	25:4	2	(atempo -> format == AV_SAMPLE_FMT_U8)
cond	23:8	23:26	3	atempo -> format == AV_SAMPLE_FMT_U8
water	23:8	0:0	4	atempo
op	23:14	0:0	4	->
water	23:16	0:0	4	format
op	23:23	0:0	4	==
water	23:26	0:0	4	AV_SAMPLE_FMT_U8
stmts	23:44	25:4	3	
water	23:44	0:0	4	{
call	24:8	24:25	4	yae_blend
arg	24:18	24:25	5	uint8_t
water	24:18	0:0	6	uint8_t
water	24:26	0:0	4	;
water	25:4	0:0	4	}
else	25:6	27:4	2
stmts	25:11	27:4	3	
if	25:11	27:4	4	(atempo -> format == AV_SAMPLE_FMT_S16)
cond	25:15	25:33	5	atempo -> format == AV_SAMPLE_FMT_S16
water	25:15	0:0	6	atempo
op	25:21	0:0	6	->
water	25:23	0:0	6	format
op	25:30	0:0	6	==
water	25:33	0:0	6	AV_SAMPLE_FMT_S16
stmts	25:52	27:4	5	
water	25:52	0:0	6	{
call	26:8	26:25	6	yae_blend
arg	26:18	26:25	7	int16_t
water	26:18	0:0	8	int16_t
water	26:26	0:0	6	;
water	27:4	0:0	6	}
else	27:6	29:4	2
stmts	27:11	29:4	3	
if	27:11	29:4	4	(atempo -> format == AV_SAMPLE_FMT_S32)
cond	27:15	27:33	5	atempo -> format == AV_SAMPLE_FMT_S32
water	27:15	0:0	6	atempo
op	27:21	0:0	6	->
water	27:23	0:0	6	format
op	27:30	0:0	6	==
water	27:33	0:0	6	AV_SAMPLE_FMT_S32
stmts	27:52	29:4	5	
water	27:52	0:0	6	{
call	28:8	28:21	6	yae_blend
arg	28:18	28:21	7	int
water	28:18	0:0	8	int
water	28:22	0:0	6	;
water	29:4	0:0	6	}
else	29:6	31:4	2
stmts	29:11	31:4	3	
if	29:11	31:4	4	(atempo -> format == AV_SAMPLE_FMT_FLT)
cond	29:15	29:33	5	atempo -> format == AV_SAMPLE_FMT_FLT
water	29:15	0:0	6	atempo
op	29:21	0:0	6	->
water	29:23	0:0	6	format
op	29:30	0:0	6	==
water	29:33	0:0	6	AV_SAMPLE_FMT_FLT
stmts	29:52	31:4	5	
water	29:52	0:0	6	{
call	30:8	30:23	6	yae_blend
arg	30:18	30:23	7	float
water	30:18	0:0	8	float
water	30:24	0:0	6	;
water	31:4	0:0	6	}
else	31:6	33:4	2
stmts	31:11	33:4	3	
if	31:11	33:4	4	(atempo -> format == AV_SAMPLE_FMT_DBL)
cond	31:15	31:33	5	atempo -> format == AV_SAMPLE_FMT_DBL
water	31:15	0:0	6	atempo
op	31:21	0:0	6	->
water	31:23	0:0	6	format
op	31:30	0:0	6	==
water	31:33	0:0	6	AV_SAMPLE_FMT_DBL
stmts	31:52	33:4	5	
water	31:52	0:0	6	{
call	32:8	32:24	6	yae_blend
arg	32:18	32:24	7	double
water	32:18	0:0	8	double
water	32:25	0:0	6	;
water	33:4	0:0	6	}
op	35:4	0:0	2	*
water	35:5	0:0	2	dst_ref
op	35:13	0:0	2	=
water	35:15	0:0	2	dst
water	35:18	0:0	2	;
return	36:4	36:65	2	atempo->position[1]==stop_here?0:AVERROR(EAGAIN)
water	36:11	0:0	3	atempo
op	36:17	0:0	3	->
water	36:19	0:0	3	position
op	36:27	0:0	3	[
water	36:28	0:0	3	1
op	36:29	0:0	3	]
op	36:31	0:0	3	==
water	36:34	0:0	3	stop_here
water	36:44	0:0	3	?
water	36:46	0:0	3	0
water	36:48	0:0	3	:
call	36:50	36:64	3	AVERROR
arg	36:58	36:64	4	EAGAIN
water	36:58	0:0	5	EAGAIN

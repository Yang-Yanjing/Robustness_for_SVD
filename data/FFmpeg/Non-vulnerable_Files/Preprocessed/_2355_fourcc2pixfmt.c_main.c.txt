func	1:0	56:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	55:12	1	
decl	3:4	3:60	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:60	2	int	list_fourcc_pix_fmt
op	3:31	0:0	2	=
water	3:33	0:0	2	0
water	3:34	0:0	2	,
decl	3:4	3:60	2	int	list_pix_fmt_fourccs
op	3:57	0:0	2	=
water	3:59	0:0	2	0
decl	4:4	4:70	2	const PixelFormatTag	*pix_fmt_tags
op	4:39	0:0	2	=
call	4:41	4:69	3	avpriv_get_raw_pix_fmt_tags
decl	5:4	5:35	2	const char	*pix_fmt_name
op	5:29	0:0	2	=
water	5:31	0:0	2	NULL
decl	6:4	6:10	2	char	c
if	7:4	10:4	2	(argc == 1)
cond	7:8	7:16	3	argc == 1
water	7:8	0:0	4	argc
op	7:13	0:0	4	==
water	7:16	0:0	4	1
stmts	7:19	10:4	3	
water	7:19	0:0	4	{
call	8:8	8:14	4	usage
water	8:15	0:0	4	;
return	9:8	9:16	4	0
water	9:15	0:0	5	0
water	10:4	0:0	4	}
while	11:4	29:4	2	(( c =getopt (argc ,argv ,"hp:lL" ) ) != - 1)
cond	11:11	11:49	3	( c =getopt (argc ,argv ,"hp:lL" ) ) != - 1
water	11:11	0:0	4	(
water	11:12	0:0	4	c
op	11:14	0:0	4	=
call	11:16	11:42	4	getopt
arg	11:23	11:27	5	argc
water	11:23	0:0	6	argc
arg	11:29	11:33	5	argv
water	11:29	0:0	6	argv
arg	11:35	11:42	5	"hp:lL"
water	11:35	0:0	6	"hp:lL"
water	11:43	0:0	4	)
op	11:45	0:0	4	!=
op	11:48	0:0	4	-
water	11:49	0:0	4	1
stmts	11:52	29:4	3	
water	11:52	0:0	4	{
switch	12:8	28:8	4	(c)
cond	12:16	12:16	5	c
water	12:16	0:0	6	c
stmts	12:19	28:8	5	
water	12:19	0:0	6	{
water	13:8	0:0	6	case
water	13:13	0:0	6	'h'
water	13:16	0:0	6	:
call	14:12	14:18	6	usage
water	14:19	0:0	6	;
return	15:12	15:20	6	0
water	15:19	0:0	7	0
water	16:8	0:0	6	case
water	16:13	0:0	6	'l'
water	16:16	0:0	6	:
water	17:12	0:0	6	list_fourcc_pix_fmt
op	17:32	0:0	6	=
water	17:34	0:0	6	1
water	17:35	0:0	6	;
break	18:12	18:17	6	
water	19:8	0:0	6	case
water	19:13	0:0	6	'L'
water	19:16	0:0	6	:
water	20:12	0:0	6	list_pix_fmt_fourccs
op	20:33	0:0	6	=
water	20:35	0:0	6	1
water	20:36	0:0	6	;
break	21:12	21:17	6	
water	22:8	0:0	6	case
water	22:13	0:0	6	'p'
water	22:16	0:0	6	:
water	23:12	0:0	6	pix_fmt_name
op	23:25	0:0	6	=
water	23:27	0:0	6	optarg
water	23:33	0:0	6	;
break	24:12	24:17	6	
water	25:8	0:0	6	case
water	25:13	0:0	6	'?'
water	25:16	0:0	6	:
call	26:12	26:18	6	usage
water	26:19	0:0	6	;
return	27:12	27:20	6	1
water	27:19	0:0	7	1
water	28:8	0:0	6	}
water	29:4	0:0	4	}
if	30:4	36:4	2	(list_fourcc_pix_fmt)
cond	30:8	30:8	3	list_fourcc_pix_fmt
water	30:8	0:0	4	list_fourcc_pix_fmt
stmts	30:29	36:4	3	
water	30:29	0:0	4	{
for	31:8	35:8	4	(i = 0 ;pix_fmt_tags [ i ] . pix_fmt != AV_PIX_FMT_NONE;i ++)
forinit	31:13	31:18	5	i = 0 ;
water	31:13	0:0	6	i
op	31:15	0:0	6	=
water	31:17	0:0	6	0
water	31:18	0:0	6	;
cond	31:20	31:47	5	pix_fmt_tags [ i ] . pix_fmt != AV_PIX_FMT_NONE
water	31:20	0:0	6	pix_fmt_tags
op	31:32	0:0	6	[
water	31:33	0:0	6	i
op	31:34	0:0	6	]
op	31:35	0:0	6	.
water	31:36	0:0	6	pix_fmt
op	31:44	0:0	6	!=
water	31:47	0:0	6	AV_PIX_FMT_NONE
forexpr	31:64	31:65	5	i ++
water	31:64	0:0	6	i
op	31:65	0:0	6	++
stmts	31:69	35:8	5	
water	31:69	0:0	6	{
decl	32:12	32:24	6	char	buf[32]
call	33:12	33:76	6	av_get_codec_tag_string
arg	33:36	33:39	7	buf
water	33:36	0:0	8	buf
arg	33:41	33:52	7	sizeof(buf)
op	33:41	0:0	8	sizeof
water	33:47	0:0	8	(
water	33:48	0:0	8	buf
water	33:51	0:0	8	)
arg	33:54	33:76	7	pix_fmt_tags[i].fourcc
water	33:54	0:0	8	pix_fmt_tags
op	33:66	0:0	8	[
water	33:67	0:0	8	i
op	33:68	0:0	8	]
op	33:69	0:0	8	.
water	33:70	0:0	8	fourcc
water	33:77	0:0	6	;
call	34:12	34:80	6	printf
arg	34:19	34:29	7	"%s: %s\n"
water	34:19	0:0	8	"%s: %s\n"
arg	34:31	34:34	7	buf
water	34:31	0:0	8	buf
arg	34:36	34:80	7	av_get_pix_fmt_name(pix_fmt_tags[i].pix_fmt)
call	34:36	34:79	8	av_get_pix_fmt_name
arg	34:56	34:79	9	pix_fmt_tags[i].pix_fmt
water	34:56	0:0	10	pix_fmt_tags
op	34:68	0:0	10	[
water	34:69	0:0	10	i
op	34:70	0:0	10	]
op	34:71	0:0	10	.
water	34:72	0:0	10	pix_fmt
water	34:81	0:0	6	;
water	35:8	0:0	6	}
water	36:4	0:0	4	}
if	37:4	46:4	2	(list_pix_fmt_fourccs)
cond	37:8	37:8	3	list_pix_fmt_fourccs
water	37:8	0:0	4	list_pix_fmt_fourccs
stmts	37:30	46:4	3	
water	37:30	0:0	4	{
for	38:8	45:8	4	(i = 0 ;av_pix_fmt_desc_get (i );i ++)
forinit	38:13	38:18	5	i = 0 ;
water	38:13	0:0	6	i
op	38:15	0:0	6	=
water	38:17	0:0	6	0
water	38:18	0:0	6	;
cond	38:20	38:41	5	av_pix_fmt_desc_get (i )
call	38:20	38:41	6	av_pix_fmt_desc_get
arg	38:40	38:41	7	i
water	38:40	0:0	8	i
forexpr	38:44	38:45	5	i ++
water	38:44	0:0	6	i
op	38:45	0:0	6	++
stmts	38:49	45:8	5	
water	38:49	0:0	6	{
decl	39:12	39:71	6	const AVPixFmtDescriptor	*pix_desc
op	39:47	0:0	6	=
call	39:49	39:70	7	av_pix_fmt_desc_get
arg	39:69	39:70	8	i
water	39:69	0:0	9	i
if	40:12	41:24	6	(! pix_desc -> name || pix_desc -> flags & AV_PIX_FMT_FLAG_HWACCEL)
cond	40:16	40:53	7	! pix_desc -> name || pix_desc -> flags & AV_PIX_FMT_FLAG_HWACCEL
op	40:16	0:0	8	!
water	40:17	0:0	8	pix_desc
op	40:25	0:0	8	->
water	40:27	0:0	8	name
op	40:32	0:0	8	||
water	40:35	0:0	8	pix_desc
op	40:43	0:0	8	->
water	40:45	0:0	8	flags
op	40:51	0:0	8	&
water	40:53	0:0	8	AV_PIX_FMT_FLAG_HWACCEL
stmts	41:16	41:24	7	
continue	41:16	41:24	8	
call	42:12	42:41	6	printf
arg	42:19	42:25	7	"%s: "
water	42:19	0:0	8	"%s: "
arg	42:27	42:41	7	pix_desc->name
water	42:27	0:0	8	pix_desc
op	42:35	0:0	8	->
water	42:37	0:0	8	name
water	42:42	0:0	6	;
call	43:12	43:54	6	print_pix_fmt_fourccs
arg	43:34	43:35	7	i
water	43:34	0:0	8	i
arg	43:37	43:49	7	pix_fmt_tags
water	43:37	0:0	8	pix_fmt_tags
arg	43:51	43:54	7	' '
water	43:51	0:0	8	' '
water	43:55	0:0	6	;
call	44:12	44:23	6	printf
arg	44:19	44:23	7	"\n"
water	44:19	0:0	8	"\n"
water	44:24	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}
if	47:4	54:4	2	(pix_fmt_name)
cond	47:8	47:8	3	pix_fmt_name
water	47:8	0:0	4	pix_fmt_name
stmts	47:22	54:4	3	
water	47:22	0:0	4	{
decl	48:8	48:65	4	enum AVPixelFormat	pix_fmt
op	48:35	0:0	4	=
call	48:37	48:64	5	av_get_pix_fmt
arg	48:52	48:64	6	pix_fmt_name
water	48:52	0:0	7	pix_fmt_name
if	49:8	52:8	4	(pix_fmt == AV_PIX_FMT_NONE)
cond	49:12	49:23	5	pix_fmt == AV_PIX_FMT_NONE
water	49:12	0:0	6	pix_fmt
op	49:20	0:0	6	==
water	49:23	0:0	6	AV_PIX_FMT_NONE
stmts	49:40	52:8	5	
water	49:40	0:0	6	{
call	50:12	50:80	6	fprintf
arg	50:20	50:26	7	stderr
water	50:20	0:0	8	stderr
arg	50:28	50:66	7	"Invalid pixel format selected '%s'\n"
water	50:28	0:0	8	"Invalid pixel format selected '%s'\n"
arg	50:68	50:80	7	pix_fmt_name
water	50:68	0:0	8	pix_fmt_name
water	50:81	0:0	6	;
return	51:12	51:20	6	1
water	51:19	0:0	7	1
water	52:8	0:0	6	}
call	53:8	53:57	4	print_pix_fmt_fourccs
arg	53:30	53:37	5	pix_fmt
water	53:30	0:0	6	pix_fmt
arg	53:39	53:51	5	pix_fmt_tags
water	53:39	0:0	6	pix_fmt_tags
arg	53:53	53:57	5	'\n'
water	53:53	0:0	6	'\n'
water	53:58	0:0	4	;
water	54:4	0:0	4	}
return	55:4	55:12	2	0
water	55:11	0:0	3	0

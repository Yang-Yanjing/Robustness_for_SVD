func	1:0	72:0	0	static int	sdl_write_header
params	1:27	0:0	1	
param	1:28	1:46	2	AVFormatContext *	s
stmnts	0:0	71:14	1	
decl	3:4	3:34	2	SDLContext	*sdl
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:32	2	AVStream	*st
op	4:17	0:0	2	=
water	4:19	0:0	2	s
op	4:20	0:0	2	->
water	4:22	0:0	2	streams
op	4:29	0:0	2	[
water	4:30	0:0	2	0
op	4:31	0:0	2	]
decl	5:4	5:38	2	AVCodecContext	*encctx
op	5:27	0:0	2	=
water	5:29	0:0	2	st
op	5:31	0:0	2	->
water	5:33	0:0	2	codec
decl	6:4	6:14	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:14	2	int	ret
if	7:4	8:50	2	(! sdl -> window_title)
cond	7:8	7:14	3	! sdl -> window_title
op	7:8	0:0	4	!
water	7:9	0:0	4	sdl
op	7:12	0:0	4	->
water	7:14	0:0	4	window_title
stmts	8:8	8:50	3	
water	8:8	0:0	4	sdl
op	8:11	0:0	4	->
water	8:13	0:0	4	window_title
op	8:26	0:0	4	=
call	8:28	8:49	4	av_strdup
arg	8:38	8:49	5	s->filename
water	8:38	0:0	6	s
op	8:39	0:0	6	->
water	8:41	0:0	6	filename
water	8:50	0:0	4	;
if	9:4	10:54	2	(! sdl -> icon_title)
cond	9:8	9:14	3	! sdl -> icon_title
op	9:8	0:0	4	!
water	9:9	0:0	4	sdl
op	9:12	0:0	4	->
water	9:14	0:0	4	icon_title
stmts	10:8	10:54	3	
water	10:8	0:0	4	sdl
op	10:11	0:0	4	->
water	10:13	0:0	4	icon_title
op	10:24	0:0	4	=
call	10:26	10:53	4	av_strdup
arg	10:36	10:53	5	sdl->window_title
water	10:36	0:0	6	sdl
op	10:39	0:0	6	->
water	10:41	0:0	6	window_title
water	10:54	0:0	4	;
if	11:4	17:4	2	(SDL_WasInit (SDL_INIT_VIDEO ))
cond	11:8	11:34	3	SDL_WasInit (SDL_INIT_VIDEO )
call	11:8	11:34	4	SDL_WasInit
arg	11:20	11:34	5	SDL_INIT_VIDEO
water	11:20	0:0	6	SDL_INIT_VIDEO
stmts	11:37	17:4	3	
water	11:37	0:0	4	{
call	12:8	13:67	4	av_log
arg	12:15	12:16	5	s
water	12:15	0:0	6	s
arg	12:18	12:30	5	AV_LOG_ERROR
water	12:18	0:0	6	AV_LOG_ERROR
arg	13:15	13:67	5	"SDL video subsystem was already inited, aborting\n"
water	13:15	0:0	6	"SDL video subsystem was already inited, aborting\n"
water	13:68	0:0	4	;
water	14:8	0:0	4	sdl
op	14:11	0:0	4	->
water	14:13	0:0	4	sdl_was_already_inited
op	14:36	0:0	4	=
water	14:38	0:0	4	1
water	14:39	0:0	4	;
water	15:8	0:0	4	ret
op	15:12	0:0	4	=
call	15:14	15:28	4	AVERROR
arg	15:22	15:28	5	EINVAL
water	15:22	0:0	6	EINVAL
water	15:29	0:0	4	;
goto	16:8	16:17	4	fail
water	16:13	0:0	5	fail
water	17:4	0:0	4	}
if	18:4	24:4	2	(s -> nb_streams > 1 || encctx -> codec_type != AVMEDIA_TYPE_VIDEO || encctx -> codec_id != AV_CODEC_ID_RAWVIDEO)
cond	18:11	20:33	3	s -> nb_streams > 1 || encctx -> codec_type != AVMEDIA_TYPE_VIDEO || encctx -> codec_id != AV_CODEC_ID_RAWVIDEO
water	18:11	0:0	4	s
op	18:12	0:0	4	->
water	18:14	0:0	4	nb_streams
op	18:25	0:0	4	>
water	18:27	0:0	4	1
op	19:8	0:0	4	||
water	19:11	0:0	4	encctx
op	19:17	0:0	4	->
water	19:19	0:0	4	codec_type
op	19:30	0:0	4	!=
water	19:33	0:0	4	AVMEDIA_TYPE_VIDEO
op	20:8	0:0	4	||
water	20:11	0:0	4	encctx
op	20:17	0:0	4	->
water	20:19	0:0	4	codec_id
op	20:30	0:0	4	!=
water	20:33	0:0	4	AV_CODEC_ID_RAWVIDEO
stmts	20:55	24:4	3	
water	20:55	0:0	4	{
call	21:8	21:69	4	av_log
arg	21:15	21:16	5	s
water	21:15	0:0	6	s
arg	21:18	21:30	5	AV_LOG_ERROR
water	21:18	0:0	6	AV_LOG_ERROR
arg	21:32	21:69	5	"Only supports one rawvideo stream\n"
water	21:32	0:0	6	"Only supports one rawvideo stream\n"
water	21:70	0:0	4	;
water	22:8	0:0	4	ret
op	22:12	0:0	4	=
call	22:14	22:28	4	AVERROR
arg	22:22	22:28	5	EINVAL
water	22:22	0:0	6	EINVAL
water	22:29	0:0	4	;
goto	23:8	23:17	4	fail
water	23:13	0:0	5	fail
water	24:4	0:0	4	}
for	25:4	30:4	2	(i = 0 ;sdl_overlay_pix_fmt_map [ i ] . pix_fmt != AV_PIX_FMT_NONE;i ++)
forinit	25:9	25:14	3	i = 0 ;
water	25:9	0:0	4	i
op	25:11	0:0	4	=
water	25:13	0:0	4	0
water	25:14	0:0	4	;
cond	25:16	25:54	3	sdl_overlay_pix_fmt_map [ i ] . pix_fmt != AV_PIX_FMT_NONE
water	25:16	0:0	4	sdl_overlay_pix_fmt_map
op	25:39	0:0	4	[
water	25:40	0:0	4	i
op	25:41	0:0	4	]
op	25:42	0:0	4	.
water	25:43	0:0	4	pix_fmt
op	25:51	0:0	4	!=
water	25:54	0:0	4	AV_PIX_FMT_NONE
forexpr	25:71	25:72	3	i ++
water	25:71	0:0	4	i
op	25:72	0:0	4	++
stmts	25:76	30:4	3	
water	25:76	0:0	4	{
if	26:8	29:8	4	(sdl_overlay_pix_fmt_map [ i ] . pix_fmt == encctx -> pix_fmt)
cond	26:12	26:58	5	sdl_overlay_pix_fmt_map [ i ] . pix_fmt == encctx -> pix_fmt
water	26:12	0:0	6	sdl_overlay_pix_fmt_map
op	26:35	0:0	6	[
water	26:36	0:0	6	i
op	26:37	0:0	6	]
op	26:38	0:0	6	.
water	26:39	0:0	6	pix_fmt
op	26:47	0:0	6	==
water	26:50	0:0	6	encctx
op	26:56	0:0	6	->
water	26:58	0:0	6	pix_fmt
stmts	26:67	29:8	5	
water	26:67	0:0	6	{
water	27:12	0:0	6	sdl
op	27:15	0:0	6	->
water	27:17	0:0	6	overlay_fmt
op	27:29	0:0	6	=
water	27:31	0:0	6	sdl_overlay_pix_fmt_map
op	27:54	0:0	6	[
water	27:55	0:0	6	i
op	27:56	0:0	6	]
op	27:57	0:0	6	.
water	27:58	0:0	6	overlay_fmt
water	27:69	0:0	6	;
break	28:12	28:17	6	
water	29:8	0:0	6	}
water	30:4	0:0	4	}
if	31:4	37:4	2	(! sdl -> overlay_fmt)
cond	31:8	31:14	3	! sdl -> overlay_fmt
op	31:8	0:0	4	!
water	31:9	0:0	4	sdl
op	31:12	0:0	4	->
water	31:14	0:0	4	overlay_fmt
stmts	31:27	37:4	3	
water	31:27	0:0	4	{
call	32:8	34:51	4	av_log
arg	32:15	32:16	5	s
water	32:15	0:0	6	s
arg	32:18	32:30	5	AV_LOG_ERROR
water	32:18	0:0	6	AV_LOG_ERROR
arg	33:15	33:92	5	"Unsupported pixel format '%s', choose one of yuv420p, yuyv422, or uyvy422\n"
water	33:15	0:0	6	"Unsupported pixel format '%s', choose one of yuv420p, yuyv422, or uyvy422\n"
arg	34:15	34:51	5	av_get_pix_fmt_name(encctx->pix_fmt)
call	34:15	34:50	6	av_get_pix_fmt_name
arg	34:35	34:50	7	encctx->pix_fmt
water	34:35	0:0	8	encctx
op	34:41	0:0	8	->
water	34:43	0:0	8	pix_fmt
water	34:52	0:0	4	;
water	35:8	0:0	4	ret
op	35:12	0:0	4	=
call	35:14	35:28	4	AVERROR
arg	35:22	35:28	5	EINVAL
water	35:22	0:0	6	EINVAL
water	35:29	0:0	4	;
goto	36:8	36:17	4	fail
water	36:13	0:0	5	fail
water	37:4	0:0	4	}
call	39:4	39:26	2	compute_overlay_rect
arg	39:25	39:26	3	s
water	39:25	0:0	4	s
water	39:27	0:0	2	;
water	40:4	0:0	2	sdl
op	40:7	0:0	2	->
water	40:9	0:0	2	init_cond
op	40:19	0:0	2	=
call	40:21	40:36	2	SDL_CreateCond
water	40:37	0:0	2	;
if	41:4	45:4	2	(! sdl -> init_cond)
cond	41:8	41:14	3	! sdl -> init_cond
op	41:8	0:0	4	!
water	41:9	0:0	4	sdl
op	41:12	0:0	4	->
water	41:14	0:0	4	init_cond
stmts	41:25	45:4	3	
water	41:25	0:0	4	{
call	42:8	42:95	4	av_log
arg	42:15	42:16	5	s
water	42:15	0:0	6	s
arg	42:18	42:30	5	AV_LOG_ERROR
water	42:18	0:0	6	AV_LOG_ERROR
arg	42:32	42:79	5	"Could not create SDL condition variable: %s\n"
water	42:32	0:0	6	"Could not create SDL condition variable: %s\n"
arg	42:81	42:95	5	SDL_GetError()
call	42:81	42:94	6	SDL_GetError
water	42:96	0:0	4	;
water	43:8	0:0	4	ret
op	43:12	0:0	4	=
water	43:14	0:0	4	AVERROR_EXTERNAL
water	43:30	0:0	4	;
goto	44:8	44:17	4	fail
water	44:13	0:0	5	fail
water	45:4	0:0	4	}
water	46:4	0:0	2	sdl
op	46:7	0:0	2	->
water	46:9	0:0	2	mutex
op	46:15	0:0	2	=
call	46:17	46:33	2	SDL_CreateMutex
water	46:34	0:0	2	;
if	47:4	51:4	2	(! sdl -> mutex)
cond	47:8	47:14	3	! sdl -> mutex
op	47:8	0:0	4	!
water	47:9	0:0	4	sdl
op	47:12	0:0	4	->
water	47:14	0:0	4	mutex
stmts	47:21	51:4	3	
water	47:21	0:0	4	{
call	48:8	48:82	4	av_log
arg	48:15	48:16	5	s
water	48:15	0:0	6	s
arg	48:18	48:30	5	AV_LOG_ERROR
water	48:18	0:0	6	AV_LOG_ERROR
arg	48:32	48:66	5	"Could not create SDL mutex: %s\n"
water	48:32	0:0	6	"Could not create SDL mutex: %s\n"
arg	48:68	48:82	5	SDL_GetError()
call	48:68	48:81	6	SDL_GetError
water	48:83	0:0	4	;
water	49:8	0:0	4	ret
op	49:12	0:0	4	=
water	49:14	0:0	4	AVERROR_EXTERNAL
water	49:30	0:0	4	;
goto	50:8	50:17	4	fail
water	50:13	0:0	5	fail
water	51:4	0:0	4	}
water	52:4	0:0	2	sdl
op	52:7	0:0	2	->
water	52:9	0:0	2	event_thread
op	52:22	0:0	2	=
call	52:24	52:56	2	SDL_CreateThread
arg	52:41	52:53	3	event_thread
water	52:41	0:0	4	event_thread
arg	52:55	52:56	3	s
water	52:55	0:0	4	s
water	52:57	0:0	2	;
if	53:4	57:4	2	(! sdl -> event_thread)
cond	53:8	53:14	3	! sdl -> event_thread
op	53:8	0:0	4	!
water	53:9	0:0	4	sdl
op	53:12	0:0	4	->
water	53:14	0:0	4	event_thread
stmts	53:28	57:4	3	
water	53:28	0:0	4	{
call	54:8	54:89	4	av_log
arg	54:15	54:16	5	s
water	54:15	0:0	6	s
arg	54:18	54:30	5	AV_LOG_ERROR
water	54:18	0:0	6	AV_LOG_ERROR
arg	54:32	54:73	5	"Could not create SDL event thread: %s\n"
water	54:32	0:0	6	"Could not create SDL event thread: %s\n"
arg	54:75	54:89	5	SDL_GetError()
call	54:75	54:88	6	SDL_GetError
water	54:90	0:0	4	;
water	55:8	0:0	4	ret
op	55:12	0:0	4	=
water	55:14	0:0	4	AVERROR_EXTERNAL
water	55:30	0:0	4	;
goto	56:8	56:17	4	fail
water	56:13	0:0	5	fail
water	57:4	0:0	4	}
call	59:4	59:28	2	SDL_LockMutex
arg	59:18	59:28	3	sdl->mutex
water	59:18	0:0	4	sdl
op	59:21	0:0	4	->
water	59:23	0:0	4	mutex
water	59:29	0:0	2	;
while	60:4	62:4	2	(! sdl -> inited)
cond	60:11	60:17	3	! sdl -> inited
op	60:11	0:0	4	!
water	60:12	0:0	4	sdl
op	60:15	0:0	4	->
water	60:17	0:0	4	inited
stmts	60:25	62:4	3	
water	60:25	0:0	4	{
call	61:8	61:47	4	SDL_CondWait
arg	61:21	61:35	5	sdl->init_cond
water	61:21	0:0	6	sdl
op	61:24	0:0	6	->
water	61:26	0:0	6	init_cond
arg	61:37	61:47	5	sdl->mutex
water	61:37	0:0	6	sdl
op	61:40	0:0	6	->
water	61:42	0:0	6	mutex
water	61:48	0:0	4	;
water	62:4	0:0	4	}
call	63:4	63:30	2	SDL_UnlockMutex
arg	63:20	63:30	3	sdl->mutex
water	63:20	0:0	4	sdl
op	63:23	0:0	4	->
water	63:25	0:0	4	mutex
water	63:31	0:0	2	;
if	64:4	67:4	2	(sdl -> init_ret < 0)
cond	64:8	64:24	3	sdl -> init_ret < 0
water	64:8	0:0	4	sdl
op	64:11	0:0	4	->
water	64:13	0:0	4	init_ret
op	64:22	0:0	4	<
water	64:24	0:0	4	0
stmts	64:27	67:4	3	
water	64:27	0:0	4	{
water	65:8	0:0	4	ret
op	65:12	0:0	4	=
water	65:14	0:0	4	sdl
op	65:17	0:0	4	->
water	65:19	0:0	4	init_ret
water	65:27	0:0	4	;
goto	66:8	66:17	4	fail
water	66:13	0:0	5	fail
water	67:4	0:0	4	}
return	68:4	68:12	2	0
water	68:11	0:0	3	0
label	69:0	69:4	2	fail :
call	70:4	70:23	2	sdl_write_trailer
arg	70:22	70:23	3	s
water	70:22	0:0	4	s
water	70:24	0:0	2	;
return	71:4	71:14	2	ret
water	71:11	0:0	3	ret

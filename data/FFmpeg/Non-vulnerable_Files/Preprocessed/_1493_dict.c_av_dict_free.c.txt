func	1:0	12:0	0	void	av_dict_free
params	1:17	0:0	1	
param	1:18	1:35	2	AVDictionary * *	pm
stmnts	0:0	11:16	1	
decl	3:4	3:25	2	AVDictionary	*m
op	3:20	0:0	2	=
op	3:22	0:0	2	*
water	3:23	0:0	2	pm
if	4:4	10:4	2	(m)
cond	4:8	4:8	3	m
water	4:8	0:0	4	m
stmts	4:11	10:4	3	
water	4:11	0:0	4	{
while	5:8	8:8	4	(m -> count --)
cond	5:15	5:23	5	m -> count --
water	5:15	0:0	6	m
op	5:16	0:0	6	->
water	5:18	0:0	6	count
op	5:23	0:0	6	--
stmts	5:27	8:8	5	
water	5:27	0:0	6	{
call	6:12	6:44	6	av_freep
arg	6:21	6:44	7	&m->elems[m->count].key
op	6:21	0:0	8	&
water	6:22	0:0	8	m
op	6:23	0:0	8	->
water	6:25	0:0	8	elems
op	6:30	0:0	8	[
water	6:31	0:0	8	m
op	6:32	0:0	8	->
water	6:34	0:0	8	count
op	6:39	0:0	8	]
op	6:40	0:0	8	.
water	6:41	0:0	8	key
water	6:45	0:0	6	;
call	7:12	7:46	6	av_freep
arg	7:21	7:46	7	&m->elems[m->count].value
op	7:21	0:0	8	&
water	7:22	0:0	8	m
op	7:23	0:0	8	->
water	7:25	0:0	8	elems
op	7:30	0:0	8	[
water	7:31	0:0	8	m
op	7:32	0:0	8	->
water	7:34	0:0	8	count
op	7:39	0:0	8	]
op	7:40	0:0	8	.
water	7:41	0:0	8	value
water	7:47	0:0	6	;
water	8:8	0:0	6	}
call	9:8	9:26	4	av_freep
arg	9:17	9:26	5	&m->elems
op	9:17	0:0	6	&
water	9:18	0:0	6	m
op	9:19	0:0	6	->
water	9:21	0:0	6	elems
water	9:27	0:0	4	;
water	10:4	0:0	4	}
call	11:4	11:15	2	av_freep
arg	11:13	11:15	3	pm
water	11:13	0:0	4	pm
water	11:16	0:0	2	;

func	1:0	21:0	0	static int	realloc_texture
params	1:26	0:0	1	
param	1:27	1:48	2	SDL_Texture * *	texture
param	1:50	1:67	2	Uint32	new_format
param	1:69	1:82	2	int	new_width
param	1:84	1:98	2	int	new_height
param	1:100	1:123	2	SDL_BlendMode	blendmode
param	1:125	1:141	2	int	init_texture
stmnts	0:0	20:12	1	
decl	3:4	3:17	2	Uint32	format
decl	4:4	4:20	2	int	access
water	4:14	0:0	2	,
decl	4:4	4:20	2	int	w
water	4:17	0:0	2	,
decl	4:4	4:20	2	int	h
if	5:4	19:4	2	(SDL_QueryTexture (* texture ,& format ,& access ,& w ,& h ) < 0 || new_width != w || new_height != h || new_format != format)
cond	5:8	5:119	3	SDL_QueryTexture (* texture ,& format ,& access ,& w ,& h ) < 0 || new_width != w || new_height != h || new_format != format
call	5:8	5:59	4	SDL_QueryTexture
arg	5:25	5:33	5	*texture
op	5:25	0:0	6	*
water	5:26	0:0	6	texture
arg	5:35	5:42	5	&format
op	5:35	0:0	6	&
water	5:36	0:0	6	format
arg	5:44	5:51	5	&access
op	5:44	0:0	6	&
water	5:45	0:0	6	access
arg	5:53	5:55	5	&w
op	5:53	0:0	6	&
water	5:54	0:0	6	w
arg	5:57	5:59	5	&h
op	5:57	0:0	6	&
water	5:58	0:0	6	h
op	5:61	0:0	4	<
water	5:63	0:0	4	0
op	5:65	0:0	4	||
water	5:68	0:0	4	new_width
op	5:78	0:0	4	!=
water	5:81	0:0	4	w
op	5:83	0:0	4	||
water	5:86	0:0	4	new_height
op	5:97	0:0	4	!=
water	5:100	0:0	4	h
op	5:102	0:0	4	||
water	5:105	0:0	4	new_format
op	5:116	0:0	4	!=
water	5:119	0:0	4	format
stmts	5:127	19:4	3	
water	5:127	0:0	4	{
decl	6:8	6:20	4	void	*pixels
decl	7:8	7:17	4	int	pitch
call	8:8	8:35	4	SDL_DestroyTexture
arg	8:27	8:35	5	*texture
op	8:27	0:0	6	*
water	8:28	0:0	6	texture
water	8:36	0:0	4	;
if	9:8	10:21	4	(! ( * texture =SDL_CreateTexture (renderer ,new_format ,SDL_TEXTUREACCESS_STREAMING ,new_width ,new_height ) ))
cond	9:12	9:116	5	! ( * texture =SDL_CreateTexture (renderer ,new_format ,SDL_TEXTUREACCESS_STREAMING ,new_width ,new_height ) )
op	9:12	0:0	6	!
water	9:13	0:0	6	(
op	9:14	0:0	6	*
water	9:15	0:0	6	texture
op	9:23	0:0	6	=
call	9:25	9:115	6	SDL_CreateTexture
arg	9:43	9:51	7	renderer
water	9:43	0:0	8	renderer
arg	9:53	9:63	7	new_format
water	9:53	0:0	8	new_format
arg	9:65	9:92	7	SDL_TEXTUREACCESS_STREAMING
water	9:65	0:0	8	SDL_TEXTUREACCESS_STREAMING
arg	9:94	9:103	7	new_width
water	9:94	0:0	8	new_width
arg	9:105	9:115	7	new_height
water	9:105	0:0	8	new_height
water	9:116	0:0	6	)
stmts	10:12	10:21	5	
return	10:12	10:21	6	-1
op	10:19	0:0	7	-
water	10:20	0:0	7	1
if	11:8	12:21	4	(SDL_SetTextureBlendMode (* texture ,blendmode ) < 0)
cond	11:12	11:59	5	SDL_SetTextureBlendMode (* texture ,blendmode ) < 0
call	11:12	11:55	6	SDL_SetTextureBlendMode
arg	11:36	11:44	7	*texture
op	11:36	0:0	8	*
water	11:37	0:0	8	texture
arg	11:46	11:55	7	blendmode
water	11:46	0:0	8	blendmode
op	11:57	0:0	6	<
water	11:59	0:0	6	0
stmts	12:12	12:21	5	
return	12:12	12:21	6	-1
op	12:19	0:0	7	-
water	12:20	0:0	7	1
if	13:8	18:8	4	(init_texture)
cond	13:12	13:12	5	init_texture
water	13:12	0:0	6	init_texture
stmts	13:26	18:8	5	
water	13:26	0:0	6	{
if	14:12	15:25	6	(SDL_LockTexture (* texture ,NULL ,& pixels ,& pitch ) < 0)
cond	14:16	14:67	7	SDL_LockTexture (* texture ,NULL ,& pixels ,& pitch ) < 0
call	14:16	14:63	8	SDL_LockTexture
arg	14:32	14:40	9	*texture
op	14:32	0:0	10	*
water	14:33	0:0	10	texture
arg	14:42	14:46	9	NULL
water	14:42	0:0	10	NULL
arg	14:48	14:55	9	&pixels
op	14:48	0:0	10	&
water	14:49	0:0	10	pixels
arg	14:57	14:63	9	&pitch
op	14:57	0:0	10	&
water	14:58	0:0	10	pitch
op	14:65	0:0	8	<
water	14:67	0:0	8	0
stmts	15:16	15:25	7	
return	15:16	15:25	8	-1
op	15:23	0:0	9	-
water	15:24	0:0	9	1
call	16:12	16:48	6	memset
arg	16:19	16:25	7	pixels
water	16:19	0:0	8	pixels
arg	16:27	16:28	7	0
water	16:27	0:0	8	0
arg	16:30	16:48	7	pitch*new_height
water	16:30	0:0	8	pitch
op	16:36	0:0	8	*
water	16:38	0:0	8	new_height
water	16:49	0:0	6	;
call	17:12	17:38	6	SDL_UnlockTexture
arg	17:30	17:38	7	*texture
op	17:30	0:0	8	*
water	17:31	0:0	8	texture
water	17:39	0:0	6	;
water	18:8	0:0	6	}
water	19:4	0:0	4	}
return	20:4	20:12	2	0
water	20:11	0:0	3	0

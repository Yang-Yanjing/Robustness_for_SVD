func	1:0	30:0	0	static void	update_gain_history
params	1:31	0:0	1	
param	1:32	1:64	2	DynamicAudioNormalizerContext *	s
param	1:66	1:77	2	int	channel
param	2:32	2:58	2	double	current_gain_factor
stmnts	4:4	29:4	1	
if	4:4	14:4	2	(cqueue_empty (s -> gain_history_original [ channel ] ) ||cqueue_empty (s -> gain_history_minimum [ channel ] ))
cond	4:8	5:53	3	cqueue_empty (s -> gain_history_original [ channel ] ) ||cqueue_empty (s -> gain_history_minimum [ channel ] )
call	4:8	4:54	4	cqueue_empty
arg	4:21	4:54	5	s->gain_history_original[channel]
water	4:21	0:0	6	s
op	4:22	0:0	6	->
water	4:24	0:0	6	gain_history_original
op	4:45	0:0	6	[
water	4:46	0:0	6	channel
op	4:53	0:0	6	]
op	4:56	0:0	4	||
call	5:8	5:53	4	cqueue_empty
arg	5:21	5:53	5	s->gain_history_minimum[channel]
water	5:21	0:0	6	s
op	5:22	0:0	6	->
water	5:24	0:0	6	gain_history_minimum
op	5:44	0:0	6	[
water	5:45	0:0	6	channel
op	5:52	0:0	6	]
stmts	5:56	14:4	3	
water	5:56	0:0	4	{
decl	6:8	6:52	4	const int	pre_fill_size
op	6:32	0:0	4	=
water	6:34	0:0	4	s
op	6:35	0:0	4	->
water	6:37	0:0	4	filter_size
op	6:49	0:0	4	/
water	6:51	0:0	4	2
water	7:8	0:0	4	s
op	7:9	0:0	4	->
water	7:11	0:0	4	prev_amplification_factor
op	7:36	0:0	4	[
water	7:37	0:0	4	channel
op	7:44	0:0	4	]
op	7:46	0:0	4	=
water	7:48	0:0	4	s
op	7:49	0:0	4	->
water	7:51	0:0	4	alt_boundary_mode
water	7:69	0:0	4	?
water	7:71	0:0	4	current_gain_factor
water	7:91	0:0	4	:
water	7:93	0:0	4	1
op	7:94	0:0	4	.
water	7:95	0:0	4	0
water	7:96	0:0	4	;
while	8:8	10:8	4	(cqueue_size (s -> gain_history_original [ channel ] ) < pre_fill_size)
cond	8:15	8:64	5	cqueue_size (s -> gain_history_original [ channel ] ) < pre_fill_size
call	8:15	8:60	6	cqueue_size
arg	8:27	8:60	7	s->gain_history_original[channel]
water	8:27	0:0	8	s
op	8:28	0:0	8	->
water	8:30	0:0	8	gain_history_original
op	8:51	0:0	8	[
water	8:52	0:0	8	channel
op	8:59	0:0	8	]
op	8:62	0:0	6	<
water	8:64	0:0	6	pre_fill_size
stmts	8:79	10:8	5	
water	8:79	0:0	6	{
call	9:12	9:110	6	cqueue_enqueue
arg	9:27	9:60	7	s->gain_history_original[channel]
water	9:27	0:0	8	s
op	9:28	0:0	8	->
water	9:30	0:0	8	gain_history_original
op	9:51	0:0	8	[
water	9:52	0:0	8	channel
op	9:59	0:0	8	]
arg	9:62	9:110	7	s->alt_boundary_mode?current_gain_factor:1.0
water	9:62	0:0	8	s
op	9:63	0:0	8	->
water	9:65	0:0	8	alt_boundary_mode
water	9:83	0:0	8	?
water	9:85	0:0	8	current_gain_factor
water	9:105	0:0	8	:
water	9:107	0:0	8	1
op	9:108	0:0	8	.
water	9:109	0:0	8	0
water	9:111	0:0	6	;
water	10:8	0:0	6	}
while	11:8	13:8	4	(cqueue_size (s -> gain_history_minimum [ channel ] ) < pre_fill_size)
cond	11:15	11:63	5	cqueue_size (s -> gain_history_minimum [ channel ] ) < pre_fill_size
call	11:15	11:59	6	cqueue_size
arg	11:27	11:59	7	s->gain_history_minimum[channel]
water	11:27	0:0	8	s
op	11:28	0:0	8	->
water	11:30	0:0	8	gain_history_minimum
op	11:50	0:0	8	[
water	11:51	0:0	8	channel
op	11:58	0:0	8	]
op	11:61	0:0	6	<
water	11:63	0:0	6	pre_fill_size
stmts	11:78	13:8	5	
water	11:78	0:0	6	{
call	12:12	12:109	6	cqueue_enqueue
arg	12:27	12:59	7	s->gain_history_minimum[channel]
water	12:27	0:0	8	s
op	12:28	0:0	8	->
water	12:30	0:0	8	gain_history_minimum
op	12:50	0:0	8	[
water	12:51	0:0	8	channel
op	12:58	0:0	8	]
arg	12:61	12:109	7	s->alt_boundary_mode?current_gain_factor:1.0
water	12:61	0:0	8	s
op	12:62	0:0	8	->
water	12:64	0:0	8	alt_boundary_mode
water	12:82	0:0	8	?
water	12:84	0:0	8	current_gain_factor
water	12:104	0:0	8	:
water	12:106	0:0	8	1
op	12:107	0:0	8	.
water	12:108	0:0	8	0
water	12:110	0:0	6	;
water	13:8	0:0	6	}
water	14:4	0:0	4	}
call	15:4	15:73	2	cqueue_enqueue
arg	15:19	15:52	3	s->gain_history_original[channel]
water	15:19	0:0	4	s
op	15:20	0:0	4	->
water	15:22	0:0	4	gain_history_original
op	15:43	0:0	4	[
water	15:44	0:0	4	channel
op	15:51	0:0	4	]
arg	15:54	15:73	3	current_gain_factor
water	15:54	0:0	4	current_gain_factor
water	15:74	0:0	2	;
while	16:4	22:4	2	(cqueue_size (s -> gain_history_original [ channel ] ) >= s -> filter_size)
cond	16:11	16:64	3	cqueue_size (s -> gain_history_original [ channel ] ) >= s -> filter_size
call	16:11	16:56	4	cqueue_size
arg	16:23	16:56	5	s->gain_history_original[channel]
water	16:23	0:0	6	s
op	16:24	0:0	6	->
water	16:26	0:0	6	gain_history_original
op	16:47	0:0	6	[
water	16:48	0:0	6	channel
op	16:55	0:0	6	]
op	16:58	0:0	4	>=
water	16:61	0:0	4	s
op	16:62	0:0	4	->
water	16:64	0:0	4	filter_size
stmts	16:77	22:4	3	
water	16:77	0:0	4	{
decl	17:8	17:22	4	double	minimum
call	18:8	18:83	4	av_assert0
arg	18:19	18:83	5	cqueue_size(s->gain_history_original[channel])==s->filter_size
call	18:19	18:64	6	cqueue_size
arg	18:31	18:64	7	s->gain_history_original[channel]
water	18:31	0:0	8	s
op	18:32	0:0	8	->
water	18:34	0:0	8	gain_history_original
op	18:55	0:0	8	[
water	18:56	0:0	8	channel
op	18:63	0:0	8	]
op	18:66	0:0	6	==
water	18:69	0:0	6	s
op	18:70	0:0	6	->
water	18:72	0:0	6	filter_size
water	18:84	0:0	4	;
water	19:8	0:0	4	minimum
op	19:16	0:0	4	=
call	19:18	19:66	4	minimum_filter
arg	19:33	19:66	5	s->gain_history_original[channel]
water	19:33	0:0	6	s
op	19:34	0:0	6	->
water	19:36	0:0	6	gain_history_original
op	19:57	0:0	6	[
water	19:58	0:0	6	channel
op	19:65	0:0	6	]
water	19:67	0:0	4	;
call	20:8	20:64	4	cqueue_enqueue
arg	20:23	20:55	5	s->gain_history_minimum[channel]
water	20:23	0:0	6	s
op	20:24	0:0	6	->
water	20:26	0:0	6	gain_history_minimum
op	20:46	0:0	6	[
water	20:47	0:0	6	channel
op	20:54	0:0	6	]
arg	20:57	20:64	5	minimum
water	20:57	0:0	6	minimum
water	20:65	0:0	4	;
call	21:8	21:52	4	cqueue_pop
arg	21:19	21:52	5	s->gain_history_original[channel]
water	21:19	0:0	6	s
op	21:20	0:0	6	->
water	21:22	0:0	6	gain_history_original
op	21:43	0:0	6	[
water	21:44	0:0	6	channel
op	21:51	0:0	6	]
water	21:53	0:0	4	;
water	22:4	0:0	4	}
while	23:4	29:4	2	(cqueue_size (s -> gain_history_minimum [ channel ] ) >= s -> filter_size)
cond	23:11	23:63	3	cqueue_size (s -> gain_history_minimum [ channel ] ) >= s -> filter_size
call	23:11	23:55	4	cqueue_size
arg	23:23	23:55	5	s->gain_history_minimum[channel]
water	23:23	0:0	6	s
op	23:24	0:0	6	->
water	23:26	0:0	6	gain_history_minimum
op	23:46	0:0	6	[
water	23:47	0:0	6	channel
op	23:54	0:0	6	]
op	23:57	0:0	4	>=
water	23:60	0:0	4	s
op	23:61	0:0	4	->
water	23:63	0:0	4	filter_size
stmts	23:76	29:4	3	
water	23:76	0:0	4	{
decl	24:8	24:23	4	double	smoothed
call	25:8	25:82	4	av_assert0
arg	25:19	25:82	5	cqueue_size(s->gain_history_minimum[channel])==s->filter_size
call	25:19	25:63	6	cqueue_size
arg	25:31	25:63	7	s->gain_history_minimum[channel]
water	25:31	0:0	8	s
op	25:32	0:0	8	->
water	25:34	0:0	8	gain_history_minimum
op	25:54	0:0	8	[
water	25:55	0:0	8	channel
op	25:62	0:0	8	]
op	25:65	0:0	6	==
water	25:68	0:0	6	s
op	25:69	0:0	6	->
water	25:71	0:0	6	filter_size
water	25:83	0:0	4	;
water	26:8	0:0	4	smoothed
op	26:17	0:0	4	=
call	26:19	26:70	4	gaussian_filter
arg	26:35	26:36	5	s
water	26:35	0:0	6	s
arg	26:38	26:70	5	s->gain_history_minimum[channel]
water	26:38	0:0	6	s
op	26:39	0:0	6	->
water	26:41	0:0	6	gain_history_minimum
op	26:61	0:0	6	[
water	26:62	0:0	6	channel
op	26:69	0:0	6	]
water	26:71	0:0	4	;
call	27:8	27:66	4	cqueue_enqueue
arg	27:23	27:56	5	s->gain_history_smoothed[channel]
water	27:23	0:0	6	s
op	27:24	0:0	6	->
water	27:26	0:0	6	gain_history_smoothed
op	27:47	0:0	6	[
water	27:48	0:0	6	channel
op	27:55	0:0	6	]
arg	27:58	27:66	5	smoothed
water	27:58	0:0	6	smoothed
water	27:67	0:0	4	;
call	28:8	28:51	4	cqueue_pop
arg	28:19	28:51	5	s->gain_history_minimum[channel]
water	28:19	0:0	6	s
op	28:20	0:0	6	->
water	28:22	0:0	6	gain_history_minimum
op	28:42	0:0	6	[
water	28:43	0:0	6	channel
op	28:50	0:0	6	]
water	28:52	0:0	4	;
water	29:4	0:0	4	}

func	1:0	36:0	0	static int	open_codec_context
params	1:29	0:0	1	
param	1:30	1:45	2	int *	stream_idx
param	2:30	2:54	2	AVFormatContext *	fmt_ctx
param	2:56	2:77	2	enum AVMediaType	type
stmnts	0:0	35:12	1	
decl	4:4	4:25	2	int	ret
water	4:11	0:0	2	,
decl	4:4	4:25	2	int	stream_index
decl	5:4	5:16	2	AVStream	*st
decl	6:4	6:34	2	AVCodecContext	*dec_ctx
op	6:28	0:0	2	=
water	6:30	0:0	2	NULL
decl	7:4	7:23	2	AVCodec	*dec
op	7:17	0:0	2	=
water	7:19	0:0	2	NULL
decl	8:4	8:29	2	AVDictionary	*opts
op	8:23	0:0	2	=
water	8:25	0:0	2	NULL
water	9:4	0:0	2	ret
op	9:8	0:0	2	=
call	9:10	9:60	2	av_find_best_stream
arg	9:30	9:37	3	fmt_ctx
water	9:30	0:0	4	fmt_ctx
arg	9:39	9:43	3	type
water	9:39	0:0	4	type
arg	9:45	9:47	3	-1
op	9:45	0:0	4	-
water	9:46	0:0	4	1
arg	9:49	9:51	3	-1
op	9:49	0:0	4	-
water	9:50	0:0	4	1
arg	9:53	9:57	3	NULL
water	9:53	0:0	4	NULL
arg	9:59	9:60	3	0
water	9:59	0:0	4	0
water	9:61	0:0	2	;
if	10:4	14:4	2	(ret < 0)
cond	10:8	10:14	3	ret < 0
water	10:8	0:0	4	ret
op	10:12	0:0	4	<
water	10:14	0:0	4	0
stmts	10:17	14:4	3	
water	10:17	0:0	4	{
call	11:8	12:60	4	fprintf
arg	11:16	11:22	5	stderr
water	11:16	0:0	6	stderr
arg	11:24	11:71	5	"Could not find %s stream in input file '%s'\n"
water	11:24	0:0	6	"Could not find %s stream in input file '%s'\n"
arg	12:16	12:46	5	av_get_media_type_string(type)
call	12:16	12:45	6	av_get_media_type_string
arg	12:41	12:45	7	type
water	12:41	0:0	8	type
arg	12:48	12:60	5	src_filename
water	12:48	0:0	6	src_filename
water	12:61	0:0	4	;
return	13:8	13:18	4	ret
water	13:15	0:0	5	ret
water	14:4	0:0	4	}
else	14:6	34:4	2
stmts	14:11	34:4	3	
water	14:11	0:0	4	{
water	15:8	0:0	4	stream_index
op	15:21	0:0	4	=
water	15:23	0:0	4	ret
water	15:26	0:0	4	;
water	16:8	0:0	4	st
op	16:11	0:0	4	=
water	16:13	0:0	4	fmt_ctx
op	16:20	0:0	4	->
water	16:22	0:0	4	streams
op	16:29	0:0	4	[
water	16:30	0:0	4	stream_index
op	16:42	0:0	4	]
water	16:43	0:0	4	;
water	18:8	0:0	4	dec_ctx
op	18:16	0:0	4	=
water	18:18	0:0	4	st
op	18:20	0:0	4	->
water	18:22	0:0	4	codec
water	18:27	0:0	4	;
water	19:8	0:0	4	dec
op	19:12	0:0	4	=
call	19:14	19:52	4	avcodec_find_decoder
arg	19:35	19:52	5	dec_ctx->codec_id
water	19:35	0:0	6	dec_ctx
op	19:42	0:0	6	->
water	19:44	0:0	6	codec_id
water	19:53	0:0	4	;
if	20:8	24:8	4	(! dec)
cond	20:12	20:13	5	! dec
op	20:12	0:0	6	!
water	20:13	0:0	6	dec
stmts	20:18	24:8	5	
water	20:18	0:0	6	{
call	21:12	22:50	6	fprintf
arg	21:20	21:26	7	stderr
water	21:20	0:0	8	stderr
arg	21:28	21:55	7	"Failed to find %s codec\n"
water	21:28	0:0	8	"Failed to find %s codec\n"
arg	22:20	22:50	7	av_get_media_type_string(type)
call	22:20	22:49	8	av_get_media_type_string
arg	22:45	22:49	9	type
water	22:45	0:0	10	type
water	22:51	0:0	6	;
return	23:12	23:34	6	AVERROR(EINVAL)
call	23:19	23:33	7	AVERROR
arg	23:27	23:33	8	EINVAL
water	23:27	0:0	9	EINVAL
water	24:8	0:0	6	}
if	26:8	27:59	4	(api_mode == API_MODE_NEW_API_REF_COUNT)
cond	26:12	26:24	5	api_mode == API_MODE_NEW_API_REF_COUNT
water	26:12	0:0	6	api_mode
op	26:21	0:0	6	==
water	26:24	0:0	6	API_MODE_NEW_API_REF_COUNT
stmts	27:12	27:59	5	
call	27:12	27:58	6	av_dict_set
arg	27:24	27:29	7	&opts
op	27:24	0:0	8	&
water	27:25	0:0	8	opts
arg	27:31	27:50	7	"refcounted_frames"
water	27:31	0:0	8	"refcounted_frames"
arg	27:52	27:55	7	"1"
water	27:52	0:0	8	"1"
arg	27:57	27:58	7	0
water	27:57	0:0	8	0
water	27:59	0:0	6	;
if	28:8	32:8	4	(( ret =avcodec_open2 (dec_ctx ,dec ,& opts ) ) < 0)
cond	28:12	28:57	5	( ret =avcodec_open2 (dec_ctx ,dec ,& opts ) ) < 0
water	28:12	0:0	6	(
water	28:13	0:0	6	ret
op	28:17	0:0	6	=
call	28:19	28:52	6	avcodec_open2
arg	28:33	28:40	7	dec_ctx
water	28:33	0:0	8	dec_ctx
arg	28:42	28:45	7	dec
water	28:42	0:0	8	dec
arg	28:47	28:52	7	&opts
op	28:47	0:0	8	&
water	28:48	0:0	8	opts
water	28:53	0:0	6	)
op	28:55	0:0	6	<
water	28:57	0:0	6	0
stmts	28:60	32:8	5	
water	28:60	0:0	6	{
call	29:12	30:50	6	fprintf
arg	29:20	29:26	7	stderr
water	29:20	0:0	8	stderr
arg	29:28	29:55	7	"Failed to open %s codec\n"
water	29:28	0:0	8	"Failed to open %s codec\n"
arg	30:20	30:50	7	av_get_media_type_string(type)
call	30:20	30:49	8	av_get_media_type_string
arg	30:45	30:49	9	type
water	30:45	0:0	10	type
water	30:51	0:0	6	;
return	31:12	31:22	6	ret
water	31:19	0:0	7	ret
water	32:8	0:0	6	}
op	33:8	0:0	4	*
water	33:9	0:0	4	stream_idx
op	33:20	0:0	4	=
water	33:22	0:0	4	stream_index
water	33:34	0:0	4	;
water	34:4	0:0	4	}
return	35:4	35:12	2	0
water	35:11	0:0	3	0

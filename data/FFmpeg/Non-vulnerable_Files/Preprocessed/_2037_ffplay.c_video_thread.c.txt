func	1:0	98:0	0	static int	video_thread
params	1:23	0:0	1	
param	1:24	1:33	2	void *	arg
stmnts	0:0	97:12	1	
decl	3:4	3:24	2	VideoState	*is
op	3:19	0:0	2	=
water	3:21	0:0	2	arg
decl	4:4	4:37	2	AVFrame	*frame
op	4:19	0:0	2	=
call	4:21	4:36	3	av_frame_alloc
decl	5:4	5:14	2	double	pts
decl	6:4	6:19	2	double	duration
decl	7:4	7:11	2	int	ret
decl	8:4	8:43	2	AVRational	tb
op	8:18	0:0	2	=
water	8:20	0:0	2	is
op	8:22	0:0	2	->
water	8:24	0:0	2	video_st
op	8:32	0:0	2	->
water	8:34	0:0	2	time_base
decl	9:4	9:75	2	AVRational	frame_rate
op	9:26	0:0	2	=
call	9:28	9:74	3	av_guess_frame_rate
arg	9:48	9:54	4	is->ic
water	9:48	0:0	5	is
op	9:50	0:0	5	->
water	9:52	0:0	5	ic
arg	9:56	9:68	4	is->video_st
water	9:56	0:0	5	is
op	9:58	0:0	5	->
water	9:60	0:0	5	video_st
arg	9:70	9:74	4	NULL
water	9:70	0:0	5	NULL
decl	11:4	11:49	2	AVFilterGraph	*graph
op	11:25	0:0	2	=
call	11:27	11:48	3	avfilter_graph_alloc
decl	12:4	12:53	2	AVFilterContext	*filt_out
op	12:30	0:0	2	=
water	12:32	0:0	2	NULL
water	12:36	0:0	2	,
decl	12:4	12:53	2	AVFilterContext	*filt_in
op	12:47	0:0	2	=
water	12:49	0:0	2	NULL
decl	13:4	13:18	2	int	last_w
op	13:15	0:0	2	=
water	13:17	0:0	2	0
decl	14:4	14:18	2	int	last_h
op	14:15	0:0	2	=
water	14:17	0:0	2	0
decl	15:4	15:39	2	enum AVPixelFormat	last_format
op	15:35	0:0	2	=
op	15:37	0:0	2	-
water	15:38	0:0	2	2
decl	16:4	16:24	2	int	last_serial
op	16:20	0:0	2	=
op	16:22	0:0	2	-
water	16:23	0:0	2	1
decl	17:4	17:28	2	int	last_vfilter_idx
op	17:25	0:0	2	=
water	17:27	0:0	2	0
if	18:4	21:4	2	(! graph)
cond	18:8	18:9	3	! graph
op	18:8	0:0	4	!
water	18:9	0:0	4	graph
stmts	18:16	21:4	3	
water	18:16	0:0	4	{
call	19:8	19:28	4	av_frame_free
arg	19:22	19:28	5	&frame
op	19:22	0:0	6	&
water	19:23	0:0	6	frame
water	19:29	0:0	4	;
return	20:8	20:30	4	AVERROR(ENOMEM)
call	20:15	20:29	5	AVERROR
arg	20:23	20:29	6	ENOMEM
water	20:23	0:0	7	ENOMEM
water	21:4	0:0	4	}
if	23:4	28:4	2	(! frame)
cond	23:8	23:9	3	! frame
op	23:8	0:0	4	!
water	23:9	0:0	4	frame
stmts	23:16	28:4	3	
water	23:16	0:0	4	{
call	25:8	25:34	4	avfilter_graph_free
arg	25:28	25:34	5	&graph
op	25:28	0:0	6	&
water	25:29	0:0	6	graph
water	25:35	0:0	4	;
return	27:8	27:30	4	AVERROR(ENOMEM)
call	27:15	27:29	5	AVERROR
arg	27:23	27:29	6	ENOMEM
water	27:23	0:0	7	ENOMEM
water	28:4	0:0	4	}
for	29:4	91:4	2	(;;)
forinit	29:9	29:9	3	;
water	29:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	29:13	91:4	3	
water	29:13	0:0	4	{
water	30:8	0:0	4	ret
op	30:12	0:0	4	=
call	30:14	30:39	4	get_video_frame
arg	30:30	30:32	5	is
water	30:30	0:0	6	is
arg	30:34	30:39	5	frame
water	30:34	0:0	6	frame
water	30:40	0:0	4	;
if	31:8	32:24	4	(ret < 0)
cond	31:12	31:18	5	ret < 0
water	31:12	0:0	6	ret
op	31:16	0:0	6	<
water	31:18	0:0	6	0
stmts	32:12	32:24	5	
goto	32:12	32:24	6	the_end
water	32:17	0:0	7	the_end
if	33:8	34:20	4	(! ret)
cond	33:12	33:13	5	! ret
op	33:12	0:0	6	!
water	33:13	0:0	6	ret
stmts	34:12	34:20	5	
continue	34:12	34:20	6	
if	36:8	64:8	4	(last_w != frame -> width || last_h != frame -> height || last_format != frame -> format || last_serial != is -> viddec . pkt_serial || last_vfilter_idx != is -> vfilter_idx)
cond	36:15	40:39	5	last_w != frame -> width || last_h != frame -> height || last_format != frame -> format || last_serial != is -> viddec . pkt_serial || last_vfilter_idx != is -> vfilter_idx
water	36:15	0:0	6	last_w
op	36:22	0:0	6	!=
water	36:25	0:0	6	frame
op	36:30	0:0	6	->
water	36:32	0:0	6	width
op	37:12	0:0	6	||
water	37:15	0:0	6	last_h
op	37:22	0:0	6	!=
water	37:25	0:0	6	frame
op	37:30	0:0	6	->
water	37:32	0:0	6	height
op	38:12	0:0	6	||
water	38:15	0:0	6	last_format
op	38:27	0:0	6	!=
water	38:30	0:0	6	frame
op	38:35	0:0	6	->
water	38:37	0:0	6	format
op	39:12	0:0	6	||
water	39:15	0:0	6	last_serial
op	39:27	0:0	6	!=
water	39:30	0:0	6	is
op	39:32	0:0	6	->
water	39:34	0:0	6	viddec
op	39:40	0:0	6	.
water	39:41	0:0	6	pkt_serial
op	40:12	0:0	6	||
water	40:15	0:0	6	last_vfilter_idx
op	40:32	0:0	6	!=
water	40:35	0:0	6	is
op	40:37	0:0	6	->
water	40:39	0:0	6	vfilter_idx
stmts	40:52	64:8	5	
water	40:52	0:0	6	{
call	41:12	46:112	6	av_log
arg	41:19	41:23	7	NULL
water	41:19	0:0	8	NULL
arg	41:25	41:37	7	AV_LOG_DEBUG
water	41:25	0:0	8	AV_LOG_DEBUG
arg	42:19	42:112	7	"Video frame changed from size:%dx%d format:%s serial:%d to size:%dx%d format:%s serial:%d\n"
water	42:19	0:0	8	"Video frame changed from size:%dx%d format:%s serial:%d to size:%dx%d format:%s serial:%d\n"
arg	43:19	43:25	7	last_w
water	43:19	0:0	8	last_w
arg	43:27	43:33	7	last_h
water	43:27	0:0	8	last_h
arg	44:19	44:87	7	(constchar*)av_x_if_null(av_get_pix_fmt_name(last_format),"none")
water	44:19	0:0	8	(
water	44:20	0:0	8	const
water	44:26	0:0	8	char
op	44:31	0:0	8	*
water	44:32	0:0	8	)
call	44:33	44:86	8	av_x_if_null
arg	44:46	44:78	9	av_get_pix_fmt_name(last_format)
call	44:46	44:77	10	av_get_pix_fmt_name
arg	44:66	44:77	11	last_format
water	44:66	0:0	12	last_format
arg	44:80	44:86	9	"none"
water	44:80	0:0	10	"none"
arg	44:89	44:100	7	last_serial
water	44:89	0:0	8	last_serial
arg	45:19	45:31	7	frame->width
water	45:19	0:0	8	frame
op	45:24	0:0	8	->
water	45:26	0:0	8	width
arg	45:33	45:46	7	frame->height
water	45:33	0:0	8	frame
op	45:38	0:0	8	->
water	45:40	0:0	8	height
arg	46:19	46:89	7	(constchar*)av_x_if_null(av_get_pix_fmt_name(frame->format),"none")
water	46:19	0:0	8	(
water	46:20	0:0	8	const
water	46:26	0:0	8	char
op	46:31	0:0	8	*
water	46:32	0:0	8	)
call	46:33	46:88	8	av_x_if_null
arg	46:46	46:80	9	av_get_pix_fmt_name(frame->format)
call	46:46	46:79	10	av_get_pix_fmt_name
arg	46:66	46:79	11	frame->format
water	46:66	0:0	12	frame
op	46:71	0:0	12	->
water	46:73	0:0	12	format
arg	46:82	46:88	9	"none"
water	46:82	0:0	10	"none"
arg	46:91	46:112	7	is->viddec.pkt_serial
water	46:91	0:0	8	is
op	46:93	0:0	8	->
water	46:95	0:0	8	viddec
op	46:101	0:0	8	.
water	46:102	0:0	8	pkt_serial
water	46:113	0:0	6	;
call	47:12	47:38	6	avfilter_graph_free
arg	47:32	47:38	7	&graph
op	47:32	0:0	8	&
water	47:33	0:0	8	graph
water	47:39	0:0	6	;
water	48:12	0:0	6	graph
op	48:18	0:0	6	=
call	48:20	48:41	6	avfilter_graph_alloc
water	48:42	0:0	6	;
if	49:12	55:12	6	(( ret =configure_video_filters (graph ,is ,vfilters_list ? vfilters_list [ is -> vfilter_idx ] : NULL ,frame ) ) < 0)
cond	49:16	49:123	7	( ret =configure_video_filters (graph ,is ,vfilters_list ? vfilters_list [ is -> vfilter_idx ] : NULL ,frame ) ) < 0
water	49:16	0:0	8	(
water	49:17	0:0	8	ret
op	49:21	0:0	8	=
call	49:23	49:118	8	configure_video_filters
arg	49:47	49:52	9	graph
water	49:47	0:0	10	graph
arg	49:54	49:56	9	is
water	49:54	0:0	10	is
arg	49:58	49:111	9	vfilters_list?vfilters_list[is->vfilter_idx]:NULL
water	49:58	0:0	10	vfilters_list
water	49:72	0:0	10	?
water	49:74	0:0	10	vfilters_list
op	49:87	0:0	10	[
water	49:88	0:0	10	is
op	49:90	0:0	10	->
water	49:92	0:0	10	vfilter_idx
op	49:103	0:0	10	]
water	49:105	0:0	10	:
water	49:107	0:0	10	NULL
arg	49:113	49:118	9	frame
water	49:113	0:0	10	frame
water	49:119	0:0	8	)
op	49:121	0:0	8	<
water	49:123	0:0	8	0
stmts	49:126	55:12	7	
water	49:126	0:0	8	{
decl	50:16	50:31	8	SDL_Event	event
water	51:16	0:0	8	event
op	51:21	0:0	8	.
water	51:22	0:0	8	type
op	51:27	0:0	8	=
water	51:29	0:0	8	FF_QUIT_EVENT
water	51:42	0:0	8	;
water	52:16	0:0	8	event
op	52:21	0:0	8	.
water	52:22	0:0	8	user
op	52:26	0:0	8	.
water	52:27	0:0	8	data1
op	52:33	0:0	8	=
water	52:35	0:0	8	is
water	52:37	0:0	8	;
call	53:16	53:36	8	SDL_PushEvent
arg	53:30	53:36	9	&event
op	53:30	0:0	10	&
water	53:31	0:0	10	event
water	53:37	0:0	8	;
goto	54:16	54:28	8	the_end
water	54:21	0:0	9	the_end
water	55:12	0:0	8	}
water	56:12	0:0	6	filt_in
op	56:21	0:0	6	=
water	56:23	0:0	6	is
op	56:25	0:0	6	->
water	56:27	0:0	6	in_video_filter
water	56:42	0:0	6	;
water	57:12	0:0	6	filt_out
op	57:21	0:0	6	=
water	57:23	0:0	6	is
op	57:25	0:0	6	->
water	57:27	0:0	6	out_video_filter
water	57:43	0:0	6	;
water	58:12	0:0	6	last_w
op	58:19	0:0	6	=
water	58:21	0:0	6	frame
op	58:26	0:0	6	->
water	58:28	0:0	6	width
water	58:33	0:0	6	;
water	59:12	0:0	6	last_h
op	59:19	0:0	6	=
water	59:21	0:0	6	frame
op	59:26	0:0	6	->
water	59:28	0:0	6	height
water	59:34	0:0	6	;
water	60:12	0:0	6	last_format
op	60:24	0:0	6	=
water	60:26	0:0	6	frame
op	60:31	0:0	6	->
water	60:33	0:0	6	format
water	60:39	0:0	6	;
water	61:12	0:0	6	last_serial
op	61:24	0:0	6	=
water	61:26	0:0	6	is
op	61:28	0:0	6	->
water	61:30	0:0	6	viddec
op	61:36	0:0	6	.
water	61:37	0:0	6	pkt_serial
water	61:47	0:0	6	;
water	62:12	0:0	6	last_vfilter_idx
op	62:29	0:0	6	=
water	62:31	0:0	6	is
op	62:33	0:0	6	->
water	62:35	0:0	6	vfilter_idx
water	62:46	0:0	6	;
water	63:12	0:0	6	frame_rate
op	63:23	0:0	6	=
call	63:25	63:62	6	av_buffersink_get_frame_rate
arg	63:54	63:62	7	filt_out
water	63:54	0:0	8	filt_out
water	63:63	0:0	6	;
water	64:8	0:0	6	}
water	65:8	0:0	4	ret
op	65:12	0:0	4	=
call	65:14	65:51	4	av_buffersrc_add_frame
arg	65:37	65:44	5	filt_in
water	65:37	0:0	6	filt_in
arg	65:46	65:51	5	frame
water	65:46	0:0	6	frame
water	65:52	0:0	4	;
if	66:8	67:24	4	(ret < 0)
cond	66:12	66:18	5	ret < 0
water	66:12	0:0	6	ret
op	66:16	0:0	6	<
water	66:18	0:0	6	0
stmts	67:12	67:24	5	
goto	67:12	67:24	6	the_end
water	67:17	0:0	7	the_end
while	68:8	87:8	4	(ret >= 0)
cond	68:15	68:22	5	ret >= 0
water	68:15	0:0	6	ret
op	68:19	0:0	6	>=
water	68:22	0:0	6	0
stmts	68:25	87:8	5	
water	68:25	0:0	6	{
water	69:12	0:0	6	is
op	69:14	0:0	6	->
water	69:16	0:0	6	frame_last_returned_time
op	69:41	0:0	6	=
call	69:43	69:63	6	av_gettime_relative
op	69:65	0:0	6	/
water	69:67	0:0	6	1000000
op	69:74	0:0	6	.
water	69:75	0:0	6	0
water	69:76	0:0	6	;
water	70:12	0:0	6	ret
op	70:16	0:0	6	=
call	70:18	70:66	6	av_buffersink_get_frame_flags
arg	70:48	70:56	7	filt_out
water	70:48	0:0	8	filt_out
arg	70:58	70:63	7	frame
water	70:58	0:0	8	frame
arg	70:65	70:66	7	0
water	70:65	0:0	8	0
water	70:67	0:0	6	;
if	71:12	76:12	6	(ret < 0)
cond	71:16	71:22	7	ret < 0
water	71:16	0:0	8	ret
op	71:20	0:0	8	<
water	71:22	0:0	8	0
stmts	71:25	76:12	7	
water	71:25	0:0	8	{
if	72:16	73:63	8	(ret == AVERROR_EOF)
cond	72:20	72:27	9	ret == AVERROR_EOF
water	72:20	0:0	10	ret
op	72:24	0:0	10	==
water	72:27	0:0	10	AVERROR_EOF
stmts	73:20	73:63	9	
water	73:20	0:0	10	is
op	73:22	0:0	10	->
water	73:24	0:0	10	viddec
op	73:30	0:0	10	.
water	73:31	0:0	10	finished
op	73:40	0:0	10	=
water	73:42	0:0	10	is
op	73:44	0:0	10	->
water	73:46	0:0	10	viddec
op	73:52	0:0	10	.
water	73:53	0:0	10	pkt_serial
water	73:63	0:0	10	;
water	74:16	0:0	8	ret
op	74:20	0:0	8	=
water	74:22	0:0	8	0
water	74:23	0:0	8	;
break	75:16	75:21	8	
water	76:12	0:0	8	}
water	77:12	0:0	6	is
op	77:14	0:0	6	->
water	77:16	0:0	6	frame_last_filter_delay
op	77:40	0:0	6	=
call	77:42	77:62	6	av_gettime_relative
op	77:64	0:0	6	/
water	77:66	0:0	6	1000000
op	77:73	0:0	6	.
water	77:74	0:0	6	0
op	77:76	0:0	6	-
water	77:78	0:0	6	is
op	77:80	0:0	6	->
water	77:82	0:0	6	frame_last_returned_time
water	77:106	0:0	6	;
if	78:12	79:47	6	(fabs (is -> frame_last_filter_delay ) > AV_NOSYNC_THRESHOLD / 10 . 0)
cond	78:16	78:77	7	fabs (is -> frame_last_filter_delay ) > AV_NOSYNC_THRESHOLD / 10 . 0
call	78:16	78:48	8	fabs
arg	78:21	78:48	9	is->frame_last_filter_delay
water	78:21	0:0	10	is
op	78:23	0:0	10	->
water	78:25	0:0	10	frame_last_filter_delay
op	78:50	0:0	8	>
water	78:52	0:0	8	AV_NOSYNC_THRESHOLD
op	78:72	0:0	8	/
water	78:74	0:0	8	10
op	78:76	0:0	8	.
water	78:77	0:0	8	0
stmts	79:16	79:47	7	
water	79:16	0:0	8	is
op	79:18	0:0	8	->
water	79:20	0:0	8	frame_last_filter_delay
op	79:44	0:0	8	=
water	79:46	0:0	8	0
water	79:47	0:0	8	;
water	80:12	0:0	6	tb
op	80:15	0:0	6	=
call	80:17	80:53	6	av_buffersink_get_time_base
arg	80:45	80:53	7	filt_out
water	80:45	0:0	8	filt_out
water	80:54	0:0	6	;
water	82:12	0:0	6	duration
op	82:21	0:0	6	=
water	82:23	0:0	6	(
water	82:24	0:0	6	frame_rate
op	82:34	0:0	6	.
water	82:35	0:0	6	num
op	82:39	0:0	6	&&
water	82:42	0:0	6	frame_rate
op	82:52	0:0	6	.
water	82:53	0:0	6	den
water	82:57	0:0	6	?
call	82:59	82:110	6	av_q2d
arg	82:66	82:110	7	(AVRational){frame_rate.den,frame_rate.num}
water	82:66	0:0	8	(
water	82:67	0:0	8	AVRational
water	82:77	0:0	8	)
water	82:78	0:0	8	{
water	82:79	0:0	8	frame_rate
op	82:89	0:0	8	.
water	82:90	0:0	8	den
water	82:93	0:0	8	,
water	82:95	0:0	8	frame_rate
op	82:105	0:0	8	.
water	82:106	0:0	8	num
water	82:109	0:0	8	}
water	82:112	0:0	6	:
water	82:114	0:0	6	0
water	82:115	0:0	6	)
water	82:116	0:0	6	;
water	83:12	0:0	6	pts
op	83:16	0:0	6	=
water	83:18	0:0	6	(
water	83:19	0:0	6	frame
op	83:24	0:0	6	->
water	83:26	0:0	6	pts
op	83:30	0:0	6	==
water	83:33	0:0	6	AV_NOPTS_VALUE
water	83:47	0:0	6	)
water	83:49	0:0	6	?
water	83:51	0:0	6	NAN
water	83:55	0:0	6	:
water	83:57	0:0	6	frame
op	83:62	0:0	6	->
water	83:64	0:0	6	pts
call	83:68	83:79	6	*av_q2d
arg	83:77	83:79	7	tb
water	83:77	0:0	8	tb
water	83:80	0:0	6	;
water	84:12	0:0	6	ret
op	84:16	0:0	6	=
call	84:18	84:108	6	queue_picture
arg	84:32	84:34	7	is
water	84:32	0:0	8	is
arg	84:36	84:41	7	frame
water	84:36	0:0	8	frame
arg	84:43	84:46	7	pts
water	84:43	0:0	8	pts
arg	84:48	84:56	7	duration
water	84:48	0:0	8	duration
arg	84:58	84:85	7	av_frame_get_pkt_pos(frame)
call	84:58	84:84	8	av_frame_get_pkt_pos
arg	84:79	84:84	9	frame
water	84:79	0:0	10	frame
arg	84:87	84:108	7	is->viddec.pkt_serial
water	84:87	0:0	8	is
op	84:89	0:0	8	->
water	84:91	0:0	8	viddec
op	84:97	0:0	8	.
water	84:98	0:0	8	pkt_serial
water	84:109	0:0	6	;
call	85:12	85:32	6	av_frame_unref
arg	85:27	85:32	7	frame
water	85:27	0:0	8	frame
water	85:33	0:0	6	;
water	87:8	0:0	6	}
if	89:8	90:24	4	(ret < 0)
cond	89:12	89:18	5	ret < 0
water	89:12	0:0	6	ret
op	89:16	0:0	6	<
water	89:18	0:0	6	0
stmts	90:12	90:24	5	
goto	90:12	90:24	6	the_end
water	90:17	0:0	7	the_end
water	91:4	0:0	4	}
label	92:1	92:8	2	the_end :
call	94:4	94:30	2	avfilter_graph_free
arg	94:24	94:30	3	&graph
op	94:24	0:0	4	&
water	94:25	0:0	4	graph
water	94:31	0:0	2	;
call	96:4	96:24	2	av_frame_free
arg	96:18	96:24	3	&frame
op	96:18	0:0	4	&
water	96:19	0:0	4	frame
water	96:25	0:0	2	;
return	97:4	97:12	2	0
water	97:11	0:0	3	0

func	1:0	66:0	0	static int	matroska_parse_wavpack
params	1:33	0:0	1	
param	1:34	1:54	2	MatroskaTrack *	track
param	1:56	1:68	2	uint8_t *	src
param	2:34	2:48	2	uint8_t * *	pdst
param	2:50	2:59	2	int *	size
stmnts	0:0	65:14	1	
decl	4:4	4:23	2	uint8_t	*dst
op	4:17	0:0	2	=
water	4:19	0:0	2	NULL
decl	5:4	5:20	2	int	dstlen
op	5:17	0:0	2	=
water	5:19	0:0	2	0
decl	6:4	6:24	2	int	srclen
op	6:17	0:0	2	=
op	6:19	0:0	2	*
water	6:20	0:0	2	size
decl	7:4	7:20	2	uint32_t	samples
decl	8:4	8:16	2	uint16_t	ver
decl	9:4	9:23	2	int	ret
water	9:11	0:0	2	,
decl	9:4	9:23	2	int	offset
op	9:20	0:0	2	=
water	9:22	0:0	2	0
if	10:4	11:34	2	(srclen < 12 || track -> stream -> codec -> extradata_size < 2)
cond	10:8	10:62	3	srclen < 12 || track -> stream -> codec -> extradata_size < 2
water	10:8	0:0	4	srclen
op	10:15	0:0	4	<
water	10:17	0:0	4	12
op	10:20	0:0	4	||
water	10:23	0:0	4	track
op	10:28	0:0	4	->
water	10:30	0:0	4	stream
op	10:36	0:0	4	->
water	10:38	0:0	4	codec
op	10:43	0:0	4	->
water	10:45	0:0	4	extradata_size
op	10:60	0:0	4	<
water	10:62	0:0	4	2
stmts	11:8	11:34	3	
return	11:8	11:34	4	AVERROR_INVALIDDATA
water	11:15	0:0	5	AVERROR_INVALIDDATA
water	12:4	0:0	2	ver
op	12:8	0:0	2	=
call	12:10	12:49	2	AV_RL16
arg	12:18	12:49	3	track->stream->codec->extradata
water	12:18	0:0	4	track
op	12:23	0:0	4	->
water	12:25	0:0	4	stream
op	12:31	0:0	4	->
water	12:33	0:0	4	codec
op	12:38	0:0	4	->
water	12:40	0:0	4	extradata
water	12:50	0:0	2	;
water	13:4	0:0	2	samples
op	13:12	0:0	2	=
call	13:14	13:25	2	AV_RL32
arg	13:22	13:25	3	src
water	13:22	0:0	4	src
water	13:26	0:0	2	;
water	14:4	0:0	2	src
op	14:11	0:0	2	+=
water	14:14	0:0	2	4
water	14:15	0:0	2	;
water	15:4	0:0	2	srclen
op	15:11	0:0	2	-=
water	15:14	0:0	2	4
water	15:15	0:0	2	;
while	16:4	59:4	2	(srclen >= 8)
cond	16:11	16:21	3	srclen >= 8
water	16:11	0:0	4	srclen
op	16:18	0:0	4	>=
water	16:21	0:0	4	8
stmts	16:24	59:4	3	
water	16:24	0:0	4	{
decl	17:8	17:22	4	int	multiblock
decl	18:8	18:26	4	uint32_t	blocksize
decl	19:8	19:20	4	uint8_t	*tmp
decl	20:8	20:37	4	uint32_t	flags
op	20:23	0:0	4	=
call	20:25	20:36	5	AV_RL32
arg	20:33	20:36	6	src
water	20:33	0:0	7	src
decl	21:8	21:41	4	uint32_t	crc
op	21:23	0:0	4	=
call	21:25	21:40	5	AV_RL32
arg	21:33	21:40	6	src+4
water	21:33	0:0	7	src
op	21:37	0:0	7	+
water	21:39	0:0	7	4
water	22:8	0:0	4	src
op	22:15	0:0	4	+=
water	22:18	0:0	4	8
water	22:19	0:0	4	;
water	23:8	0:0	4	srclen
op	23:15	0:0	4	-=
water	23:18	0:0	4	8
water	23:19	0:0	4	;
water	24:8	0:0	4	multiblock
op	24:19	0:0	4	=
water	24:21	0:0	4	(
water	24:22	0:0	4	flags
op	24:28	0:0	4	&
water	24:30	0:0	4	0
water	24:31	0:0	4	x1800
water	24:36	0:0	4	)
op	24:38	0:0	4	!=
water	24:41	0:0	4	0
water	24:42	0:0	4	x1800
water	24:47	0:0	4	;
if	25:8	33:8	4	(multiblock)
cond	25:12	25:12	5	multiblock
water	25:12	0:0	6	multiblock
stmts	25:24	33:8	5	
water	25:24	0:0	6	{
if	26:12	29:12	6	(srclen < 4)
cond	26:16	26:25	7	srclen < 4
water	26:16	0:0	8	srclen
op	26:23	0:0	8	<
water	26:25	0:0	8	4
stmts	26:28	29:12	7	
water	26:28	0:0	8	{
water	27:16	0:0	8	ret
op	27:20	0:0	8	=
water	27:22	0:0	8	AVERROR_INVALIDDATA
water	27:41	0:0	8	;
goto	28:16	28:25	8	fail
water	28:21	0:0	9	fail
water	29:12	0:0	8	}
water	30:12	0:0	6	blocksize
op	30:22	0:0	6	=
call	30:24	30:35	6	AV_RL32
arg	30:32	30:35	7	src
water	30:32	0:0	8	src
water	30:36	0:0	6	;
water	31:12	0:0	6	src
op	31:21	0:0	6	+=
water	31:24	0:0	6	4
water	31:25	0:0	6	;
water	32:12	0:0	6	srclen
op	32:21	0:0	6	-=
water	32:24	0:0	6	4
water	32:25	0:0	6	;
water	33:8	0:0	6	}
else	33:10	34:30	4
stmts	34:12	34:30	5	
water	34:12	0:0	6	blocksize
op	34:22	0:0	6	=
water	34:24	0:0	6	srclen
water	34:30	0:0	6	;
if	35:8	38:8	4	(blocksize > srclen)
cond	35:12	35:24	5	blocksize > srclen
water	35:12	0:0	6	blocksize
op	35:22	0:0	6	>
water	35:24	0:0	6	srclen
stmts	35:32	38:8	5	
water	35:32	0:0	6	{
water	36:12	0:0	6	ret
op	36:16	0:0	6	=
water	36:18	0:0	6	AVERROR_INVALIDDATA
water	36:37	0:0	6	;
goto	37:12	37:21	6	fail
water	37:17	0:0	7	fail
water	38:8	0:0	6	}
water	39:8	0:0	4	tmp
op	39:12	0:0	4	=
call	39:14	39:53	4	av_realloc
arg	39:25	39:28	5	dst
water	39:25	0:0	6	dst
arg	39:30	39:53	5	dstlen+blocksize+32
water	39:30	0:0	6	dstlen
op	39:37	0:0	6	+
water	39:39	0:0	6	blocksize
op	39:49	0:0	6	+
water	39:51	0:0	6	32
water	39:54	0:0	4	;
if	40:8	43:8	4	(! tmp)
cond	40:12	40:13	5	! tmp
op	40:12	0:0	6	!
water	40:13	0:0	6	tmp
stmts	40:18	43:8	5	
water	40:18	0:0	6	{
water	41:12	0:0	6	ret
op	41:16	0:0	6	=
call	41:18	41:32	6	AVERROR
arg	41:26	41:32	7	ENOMEM
water	41:26	0:0	8	ENOMEM
water	41:33	0:0	6	;
goto	42:12	42:21	6	fail
water	42:17	0:0	7	fail
water	43:8	0:0	6	}
water	44:8	0:0	4	dst
op	44:16	0:0	4	=
water	44:18	0:0	4	tmp
water	44:21	0:0	4	;
water	45:8	0:0	4	dstlen
op	45:15	0:0	4	+=
water	45:18	0:0	4	blocksize
op	45:28	0:0	4	+
water	45:30	0:0	4	32
water	45:32	0:0	4	;
call	46:8	46:55	4	AV_WL32
arg	46:16	46:28	5	dst+offset
water	46:16	0:0	6	dst
op	46:20	0:0	6	+
water	46:22	0:0	6	offset
arg	46:30	46:55	5	MKTAG('w','v','p','k')
call	46:30	46:54	6	MKTAG
arg	46:36	46:39	7	'w'
water	46:36	0:0	8	'w'
arg	46:41	46:44	7	'v'
water	46:41	0:0	8	'v'
arg	46:46	46:49	7	'p'
water	46:46	0:0	8	'p'
arg	46:51	46:54	7	'k'
water	46:51	0:0	8	'k'
water	46:56	0:0	4	;
call	47:8	47:49	4	AV_WL32
arg	47:16	47:33	5	dst+offset+4
water	47:16	0:0	6	dst
op	47:20	0:0	6	+
water	47:22	0:0	6	offset
op	47:29	0:0	6	+
water	47:32	0:0	6	4
arg	47:35	47:49	5	blocksize+24
water	47:35	0:0	6	blocksize
op	47:45	0:0	6	+
water	47:47	0:0	6	24
water	47:50	0:0	4	;
call	48:8	48:38	4	AV_WL16
arg	48:16	48:33	5	dst+offset+8
water	48:16	0:0	6	dst
op	48:20	0:0	6	+
water	48:22	0:0	6	offset
op	48:29	0:0	6	+
water	48:32	0:0	6	8
arg	48:35	48:38	5	ver
water	48:35	0:0	6	ver
water	48:39	0:0	4	;
call	49:8	49:36	4	AV_WL16
arg	49:16	49:33	5	dst+offset+10
water	49:16	0:0	6	dst
op	49:20	0:0	6	+
water	49:22	0:0	6	offset
op	49:29	0:0	6	+
water	49:31	0:0	6	10
arg	49:35	49:36	5	0
water	49:35	0:0	6	0
water	49:37	0:0	4	;
call	50:8	50:36	4	AV_WL32
arg	50:16	50:33	5	dst+offset+12
water	50:16	0:0	6	dst
op	50:20	0:0	6	+
water	50:22	0:0	6	offset
op	50:29	0:0	6	+
water	50:31	0:0	6	12
arg	50:35	50:36	5	0
water	50:35	0:0	6	0
water	50:37	0:0	4	;
call	51:8	51:36	4	AV_WL32
arg	51:16	51:33	5	dst+offset+16
water	51:16	0:0	6	dst
op	51:20	0:0	6	+
water	51:22	0:0	6	offset
op	51:29	0:0	6	+
water	51:31	0:0	6	16
arg	51:35	51:36	5	0
water	51:35	0:0	6	0
water	51:37	0:0	4	;
call	52:8	52:42	4	AV_WL32
arg	52:16	52:33	5	dst+offset+20
water	52:16	0:0	6	dst
op	52:20	0:0	6	+
water	52:22	0:0	6	offset
op	52:29	0:0	6	+
water	52:31	0:0	6	20
arg	52:35	52:42	5	samples
water	52:35	0:0	6	samples
water	52:43	0:0	4	;
call	53:8	53:40	4	AV_WL32
arg	53:16	53:33	5	dst+offset+24
water	53:16	0:0	6	dst
op	53:20	0:0	6	+
water	53:22	0:0	6	offset
op	53:29	0:0	6	+
water	53:31	0:0	6	24
arg	53:35	53:40	5	flags
water	53:35	0:0	6	flags
water	53:41	0:0	4	;
call	54:8	54:38	4	AV_WL32
arg	54:16	54:33	5	dst+offset+28
water	54:16	0:0	6	dst
op	54:20	0:0	6	+
water	54:22	0:0	6	offset
op	54:29	0:0	6	+
water	54:31	0:0	6	28
arg	54:35	54:38	5	crc
water	54:35	0:0	6	crc
water	54:39	0:0	4	;
call	55:8	55:48	4	memcpy
arg	55:15	55:32	5	dst+offset+32
water	55:15	0:0	6	dst
op	55:19	0:0	6	+
water	55:21	0:0	6	offset
op	55:28	0:0	6	+
water	55:30	0:0	6	32
arg	55:34	55:37	5	src
water	55:34	0:0	6	src
arg	55:39	55:48	5	blocksize
water	55:39	0:0	6	blocksize
water	55:49	0:0	4	;
water	56:8	0:0	4	src
op	56:15	0:0	4	+=
water	56:18	0:0	4	blocksize
water	56:27	0:0	4	;
water	57:8	0:0	4	srclen
op	57:15	0:0	4	-=
water	57:18	0:0	4	blocksize
water	57:27	0:0	4	;
water	58:8	0:0	4	offset
op	58:15	0:0	4	+=
water	58:18	0:0	4	blocksize
op	58:28	0:0	4	+
water	58:30	0:0	4	32
water	58:32	0:0	4	;
water	59:4	0:0	4	}
op	60:4	0:0	2	*
water	60:5	0:0	2	pdst
op	60:10	0:0	2	=
water	60:12	0:0	2	dst
water	60:15	0:0	2	;
op	61:4	0:0	2	*
water	61:5	0:0	2	size
op	61:10	0:0	2	=
water	61:12	0:0	2	dstlen
water	61:18	0:0	2	;
return	62:4	62:12	2	0
water	62:11	0:0	3	0
label	63:0	63:4	2	fail :
call	64:4	64:17	2	av_freep
arg	64:13	64:17	3	&dst
op	64:13	0:0	4	&
water	64:14	0:0	4	dst
water	64:18	0:0	2	;
return	65:4	65:14	2	ret
water	65:11	0:0	3	ret

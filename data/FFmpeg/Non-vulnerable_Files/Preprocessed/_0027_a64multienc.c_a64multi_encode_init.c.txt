func	1:15	41:0	0	int	a64multi_encode_init
params	1:39	0:0	1	
param	1:40	1:61	2	AVCodecContext *	avctx
stmnts	0:0	40:12	1	
decl	3:4	3:36	2	A64Context	*c
op	3:18	0:0	2	=
water	3:20	0:0	2	avctx
op	3:25	0:0	2	->
water	3:27	0:0	2	priv_data
decl	4:4	4:9	2	int	a
call	5:4	5:30	2	av_lfg_init
arg	5:16	5:27	3	&c->randctx
op	5:16	0:0	4	&
water	5:17	0:0	4	c
op	5:18	0:0	4	->
water	5:20	0:0	4	randctx
arg	5:29	5:30	3	1
water	5:29	0:0	4	1
water	5:31	0:0	2	;
if	6:4	8:4	2	(avctx -> global_quality < 1)
cond	6:8	6:32	3	avctx -> global_quality < 1
water	6:8	0:0	4	avctx
op	6:13	0:0	4	->
water	6:15	0:0	4	global_quality
op	6:30	0:0	4	<
water	6:32	0:0	4	1
stmts	6:35	8:4	3	
water	6:35	0:0	4	{
water	7:8	0:0	4	c
op	7:9	0:0	4	->
water	7:11	0:0	4	mc_lifetime
op	7:23	0:0	4	=
water	7:25	0:0	4	4
water	7:26	0:0	4	;
water	8:4	0:0	4	}
else	8:6	10:4	2
stmts	8:11	10:4	3	
water	8:11	0:0	4	{
water	9:8	0:0	4	c
op	9:9	0:0	4	->
water	9:11	0:0	4	mc_lifetime
op	9:23	0:0	4	=
water	9:25	0:0	4	avctx
op	9:30	0:0	4	->
water	9:32	0:0	4	global_quality
op	9:47	0:0	4	/=
water	9:50	0:0	4	FF_QP2LAMBDA
water	9:62	0:0	4	;
water	10:4	0:0	4	}
call	11:4	11:86	2	av_log
arg	11:11	11:16	3	avctx
water	11:11	0:0	4	avctx
arg	11:18	11:29	3	AV_LOG_INFO
water	11:18	0:0	4	AV_LOG_INFO
arg	11:31	11:70	3	"charset lifetime set to %d frame(s)\n"
water	11:31	0:0	4	"charset lifetime set to %d frame(s)\n"
arg	11:72	11:86	3	c->mc_lifetime
water	11:72	0:0	4	c
op	11:73	0:0	4	->
water	11:75	0:0	4	mc_lifetime
water	11:87	0:0	2	;
water	12:4	0:0	2	c
op	12:5	0:0	2	->
water	12:7	0:0	2	mc_frame_counter
op	12:24	0:0	2	=
water	12:26	0:0	2	0
water	12:27	0:0	2	;
water	13:4	0:0	2	c
op	13:5	0:0	2	->
water	13:7	0:0	2	mc_use_5col
op	13:24	0:0	2	=
water	13:26	0:0	2	avctx
op	13:31	0:0	2	->
water	13:33	0:0	2	codec
op	13:38	0:0	2	->
water	13:40	0:0	2	id
op	13:43	0:0	2	==
water	13:46	0:0	2	AV_CODEC_ID_A64_MULTI5
water	13:68	0:0	2	;
water	14:4	0:0	2	c
op	14:5	0:0	2	->
water	14:7	0:0	2	mc_pal_size
op	14:24	0:0	2	=
water	14:26	0:0	2	4
op	14:28	0:0	2	+
water	14:30	0:0	2	c
op	14:31	0:0	2	->
water	14:33	0:0	2	mc_use_5col
water	14:44	0:0	2	;
for	16:4	20:4	2	(a = 0 ;a < c -> mc_pal_size;a ++)
forinit	16:9	16:14	3	a = 0 ;
water	16:9	0:0	4	a
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:23	3	a < c -> mc_pal_size
water	16:16	0:0	4	a
op	16:18	0:0	4	<
water	16:20	0:0	4	c
op	16:21	0:0	4	->
water	16:23	0:0	4	mc_pal_size
forexpr	16:36	16:37	3	a ++
water	16:36	0:0	4	a
op	16:37	0:0	4	++
stmts	16:41	20:4	3	
water	16:41	0:0	4	{
water	17:8	0:0	4	c
op	17:9	0:0	4	->
water	17:11	0:0	4	mc_luma_vals
op	17:23	0:0	4	[
water	17:24	0:0	4	a
op	17:25	0:0	4	]
op	17:26	0:0	4	=
water	17:27	0:0	4	a64_palette
op	17:38	0:0	4	[
water	17:39	0:0	4	mc_colors
op	17:48	0:0	4	[
water	17:49	0:0	4	a
op	17:50	0:0	4	]
op	17:51	0:0	4	]
op	17:52	0:0	4	[
water	17:53	0:0	4	0
op	17:54	0:0	4	]
op	17:56	0:0	4	*
water	17:58	0:0	4	0
op	17:59	0:0	4	.
water	17:60	0:0	4	30
op	17:63	0:0	4	+
water	18:27	0:0	4	a64_palette
op	18:38	0:0	4	[
water	18:39	0:0	4	mc_colors
op	18:48	0:0	4	[
water	18:49	0:0	4	a
op	18:50	0:0	4	]
op	18:51	0:0	4	]
op	18:52	0:0	4	[
water	18:53	0:0	4	1
op	18:54	0:0	4	]
op	18:56	0:0	4	*
water	18:58	0:0	4	0
op	18:59	0:0	4	.
water	18:60	0:0	4	59
op	18:63	0:0	4	+
water	19:27	0:0	4	a64_palette
op	19:38	0:0	4	[
water	19:39	0:0	4	mc_colors
op	19:48	0:0	4	[
water	19:49	0:0	4	a
op	19:50	0:0	4	]
op	19:51	0:0	4	]
op	19:52	0:0	4	[
water	19:53	0:0	4	2
op	19:54	0:0	4	]
op	19:56	0:0	4	*
water	19:58	0:0	4	0
op	19:59	0:0	4	.
water	19:60	0:0	4	11
water	19:62	0:0	4	;
water	20:4	0:0	4	}
if	21:4	28:4	2	(! ( c -> mc_meta_charset =av_mallocz_array (c -> mc_lifetime ,32000 * sizeof ( int ) ) ) || ! ( c -> mc_best_cb =av_malloc (CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap =av_mallocz_array (c -> mc_lifetime ,1000 * sizeof ( int ) ) ) || ! ( c -> mc_colram =av_mallocz (CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset =av_malloc (0 x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) ))
cond	21:8	25:82	3	! ( c -> mc_meta_charset =av_mallocz_array (c -> mc_lifetime ,32000 * sizeof ( int ) ) ) || ! ( c -> mc_best_cb =av_malloc (CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap =av_mallocz_array (c -> mc_lifetime ,1000 * sizeof ( int ) ) ) || ! ( c -> mc_colram =av_mallocz (CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset =av_malloc (0 x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )
op	21:8	0:0	4	!
water	21:9	0:0	4	(
water	21:10	0:0	4	c
op	21:11	0:0	4	->
water	21:13	0:0	4	mc_meta_charset
op	21:29	0:0	4	=
call	21:31	21:83	4	av_mallocz_array
arg	21:48	21:62	5	c->mc_lifetime
water	21:48	0:0	6	c
op	21:49	0:0	6	->
water	21:51	0:0	6	mc_lifetime
arg	21:64	21:83	5	32000*sizeof(int)
water	21:64	0:0	6	32000
op	21:70	0:0	6	*
op	21:72	0:0	6	sizeof
water	21:78	0:0	6	(
water	21:79	0:0	6	int
water	21:82	0:0	6	)
water	21:84	0:0	4	)
op	21:86	0:0	4	||
op	22:7	0:0	4	!
water	22:8	0:0	4	(
water	22:9	0:0	4	c
op	22:10	0:0	4	->
water	22:12	0:0	4	mc_best_cb
op	22:29	0:0	4	=
call	22:31	22:73	4	av_malloc
arg	22:41	22:73	5	CHARSET_CHARS*32*sizeof(int)
water	22:41	0:0	6	CHARSET_CHARS
op	22:55	0:0	6	*
water	22:57	0:0	6	32
op	22:60	0:0	6	*
op	22:62	0:0	6	sizeof
water	22:68	0:0	6	(
water	22:69	0:0	6	int
water	22:72	0:0	6	)
water	22:74	0:0	4	)
op	22:80	0:0	4	||
op	23:7	0:0	4	!
water	23:8	0:0	4	(
water	23:9	0:0	4	c
op	23:10	0:0	4	->
water	23:12	0:0	4	mc_charmap
op	23:29	0:0	4	=
call	23:31	23:82	4	av_mallocz_array
arg	23:48	23:62	5	c->mc_lifetime
water	23:48	0:0	6	c
op	23:49	0:0	6	->
water	23:51	0:0	6	mc_lifetime
arg	23:64	23:82	5	1000*sizeof(int)
water	23:64	0:0	6	1000
op	23:69	0:0	6	*
op	23:71	0:0	6	sizeof
water	23:77	0:0	6	(
water	23:78	0:0	6	int
water	23:81	0:0	6	)
water	23:83	0:0	4	)
op	23:85	0:0	4	||
op	24:7	0:0	4	!
water	24:8	0:0	4	(
water	24:9	0:0	4	c
op	24:10	0:0	4	->
water	24:12	0:0	4	mc_colram
op	24:29	0:0	4	=
call	24:31	24:73	4	av_mallocz
arg	24:42	24:73	5	CHARSET_CHARS*sizeof(uint8_t)
water	24:42	0:0	6	CHARSET_CHARS
op	24:56	0:0	6	*
op	24:58	0:0	6	sizeof
water	24:64	0:0	6	(
water	24:65	0:0	6	uint8_t
water	24:72	0:0	6	)
water	24:74	0:0	4	)
op	24:80	0:0	4	||
op	25:7	0:0	4	!
water	25:8	0:0	4	(
water	25:9	0:0	4	c
op	25:10	0:0	4	->
water	25:12	0:0	4	mc_charset
op	25:29	0:0	4	=
call	25:31	25:81	4	av_malloc
arg	25:41	25:81	5	0x800*(INTERLACED+1)*sizeof(uint8_t)
water	25:41	0:0	6	0
water	25:42	0:0	6	x800
op	25:47	0:0	6	*
water	25:49	0:0	6	(
water	25:50	0:0	6	INTERLACED
op	25:60	0:0	6	+
water	25:61	0:0	6	1
water	25:62	0:0	6	)
op	25:64	0:0	6	*
op	25:66	0:0	6	sizeof
water	25:72	0:0	6	(
water	25:73	0:0	6	uint8_t
water	25:80	0:0	6	)
water	25:82	0:0	4	)
stmts	25:85	28:4	3	
water	25:85	0:0	4	{
call	26:8	26:73	4	av_log
arg	26:15	26:20	5	avctx
water	26:15	0:0	6	avctx
arg	26:22	26:34	5	AV_LOG_ERROR
water	26:22	0:0	6	AV_LOG_ERROR
arg	26:36	26:73	5	"Failed to allocate buffer memory.\n"
water	26:36	0:0	6	"Failed to allocate buffer memory.\n"
water	26:74	0:0	4	;
return	27:8	27:30	4	AVERROR(ENOMEM)
call	27:15	27:29	5	AVERROR
arg	27:23	27:29	6	ENOMEM
water	27:23	0:0	7	ENOMEM
water	28:4	0:0	4	}
if	30:4	33:4	2	(! ( avctx -> extradata =av_mallocz (8 * 4 + AV_INPUT_BUFFER_PADDING_SIZE ) ))
cond	30:8	30:77	3	! ( avctx -> extradata =av_mallocz (8 * 4 + AV_INPUT_BUFFER_PADDING_SIZE ) )
op	30:8	0:0	4	!
water	30:9	0:0	4	(
water	30:10	0:0	4	avctx
op	30:15	0:0	4	->
water	30:17	0:0	4	extradata
op	30:27	0:0	4	=
call	30:29	30:76	4	av_mallocz
arg	30:40	30:76	5	8*4+AV_INPUT_BUFFER_PADDING_SIZE
water	30:40	0:0	6	8
op	30:42	0:0	6	*
water	30:44	0:0	6	4
op	30:46	0:0	6	+
water	30:48	0:0	6	AV_INPUT_BUFFER_PADDING_SIZE
water	30:77	0:0	4	)
stmts	30:80	33:4	3	
water	30:80	0:0	4	{
call	31:8	31:80	4	av_log
arg	31:15	31:20	5	avctx
water	31:15	0:0	6	avctx
arg	31:22	31:34	5	AV_LOG_ERROR
water	31:22	0:0	6	AV_LOG_ERROR
arg	31:36	31:80	5	"Failed to allocate memory for extradata.\n"
water	31:36	0:0	6	"Failed to allocate memory for extradata.\n"
water	31:81	0:0	4	;
return	32:8	32:30	4	AVERROR(ENOMEM)
call	32:15	32:29	5	AVERROR
arg	32:23	32:29	6	ENOMEM
water	32:23	0:0	7	ENOMEM
water	33:4	0:0	4	}
water	34:4	0:0	2	avctx
op	34:9	0:0	2	->
water	34:11	0:0	2	extradata_size
op	34:26	0:0	2	=
water	34:28	0:0	2	8
op	34:30	0:0	2	*
water	34:32	0:0	2	4
water	34:33	0:0	2	;
call	35:4	35:44	2	AV_WB32
arg	35:12	35:28	3	avctx->extradata
water	35:12	0:0	4	avctx
op	35:17	0:0	4	->
water	35:19	0:0	4	extradata
arg	35:30	35:44	3	c->mc_lifetime
water	35:30	0:0	4	c
op	35:31	0:0	4	->
water	35:33	0:0	4	mc_lifetime
water	35:45	0:0	2	;
call	36:4	36:45	2	AV_WB32
arg	36:12	36:33	3	avctx->extradata+16
water	36:12	0:0	4	avctx
op	36:17	0:0	4	->
water	36:19	0:0	4	extradata
op	36:29	0:0	4	+
water	36:31	0:0	4	16
arg	36:35	36:45	3	INTERLACED
water	36:35	0:0	4	INTERLACED
water	36:46	0:0	2	;
if	37:4	38:43	2	(! avctx -> codec_tag)
cond	37:8	37:16	3	! avctx -> codec_tag
op	37:8	0:0	4	!
water	37:9	0:0	4	avctx
op	37:14	0:0	4	->
water	37:16	0:0	4	codec_tag
stmts	38:9	38:43	3	
water	38:9	0:0	4	avctx
op	38:14	0:0	4	->
water	38:16	0:0	4	codec_tag
op	38:26	0:0	4	=
call	38:28	38:42	4	AV_RL32
arg	38:36	38:42	5	"a64m"
water	38:36	0:0	6	"a64m"
water	38:43	0:0	4	;
water	39:4	0:0	2	c
op	39:5	0:0	2	->
water	39:7	0:0	2	next_pts
op	39:16	0:0	2	=
water	39:18	0:0	2	AV_NOPTS_VALUE
water	39:32	0:0	2	;
return	40:4	40:12	2	0
water	40:11	0:0	3	0

func	1:24	74:0	0	void	yuv2rgba64_X_c_template
params	2:23	0:0	1	
param	2:24	2:37	2	SwsContext *	c
param	2:39	2:63	2	const int16_t *	lumFilter
param	3:23	3:45	2	const int32_t * *	lumSrc
param	3:47	3:64	2	int	lumFilterSize
param	4:23	4:47	2	const int16_t *	chrFilter
param	4:49	4:72	2	const int32_t * *	chrUSrc
param	5:23	5:46	2	const int32_t * *	chrVSrc
param	5:48	5:65	2	int	chrFilterSize
param	6:23	6:45	2	const int32_t * *	alpSrc
param	6:47	6:61	2	uint16_t *	dest
param	6:63	6:71	2	int	dstW
param	7:23	7:28	2	int	y
param	7:30	7:55	2	enum AVPixelFormat	target
param	7:57	7:69	2	int	hasAlpha
param	7:71	7:85	2	int	eightbytes
stmnts	0:0	73:4	1	
decl	9:4	9:9	2	int	i
decl	10:4	10:40	2	int	A1
op	10:11	0:0	2	=
water	10:13	0:0	2	0
water	10:14	0:0	2	xffff
op	10:19	0:0	2	<<
water	10:21	0:0	2	14
water	10:23	0:0	2	,
decl	10:4	10:40	2	int	A2
op	10:28	0:0	2	=
water	10:30	0:0	2	0
water	10:31	0:0	2	xffff
op	10:36	0:0	2	<<
water	10:38	0:0	2	14
for	11:4	73:4	2	(i = 0 ;i < ( ( dstW + 1 ) >> 1 );i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:36	3	i < ( ( dstW + 1 ) >> 1 )
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	(
water	11:21	0:0	4	(
water	11:22	0:0	4	dstW
op	11:27	0:0	4	+
water	11:29	0:0	4	1
water	11:30	0:0	4	)
op	11:32	0:0	4	>>
water	11:35	0:0	4	1
water	11:36	0:0	4	)
forexpr	11:39	11:40	3	i ++
water	11:39	0:0	4	i
op	11:40	0:0	4	++
stmts	11:44	73:4	3	
water	11:44	0:0	4	{
decl	12:8	12:13	4	int	j
decl	13:8	13:28	4	int	Y1
op	13:15	0:0	4	=
op	13:17	0:0	4	-
water	13:18	0:0	4	0
water	13:19	0:0	4	x40000000
decl	14:8	14:28	4	int	Y2
op	14:15	0:0	4	=
op	14:17	0:0	4	-
water	14:18	0:0	4	0
water	14:19	0:0	4	x40000000
decl	15:8	15:27	4	int	U
op	15:15	0:0	4	=
op	15:17	0:0	4	-
water	15:18	0:0	4	128
op	15:22	0:0	4	<<
water	15:25	0:0	4	23
decl	16:8	16:27	4	int	V
op	16:15	0:0	4	=
op	16:17	0:0	4	-
water	16:18	0:0	4	128
op	16:22	0:0	4	<<
water	16:25	0:0	4	23
decl	17:8	17:19	4	int	R
water	17:13	0:0	4	,
decl	17:8	17:19	4	int	G
water	17:16	0:0	4	,
decl	17:8	17:19	4	int	B
for	18:8	21:8	4	(j = 0 ;j < lumFilterSize;j ++)
forinit	18:13	18:18	5	j = 0 ;
water	18:13	0:0	6	j
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:24	5	j < lumFilterSize
water	18:20	0:0	6	j
op	18:22	0:0	6	<
water	18:24	0:0	6	lumFilterSize
forexpr	18:39	18:40	5	j ++
water	18:39	0:0	6	j
op	18:40	0:0	6	++
stmts	18:44	21:8	5	
water	18:44	0:0	6	{
water	19:12	0:0	6	Y1
op	19:15	0:0	6	+=
water	19:18	0:0	6	lumSrc
op	19:24	0:0	6	[
water	19:25	0:0	6	j
op	19:26	0:0	6	]
op	19:27	0:0	6	[
water	19:28	0:0	6	i
op	19:30	0:0	6	*
water	19:32	0:0	6	2
op	19:33	0:0	6	]
op	19:39	0:0	6	*
water	19:41	0:0	6	(
water	19:42	0:0	6	unsigned
water	19:50	0:0	6	)
water	19:51	0:0	6	lumFilter
op	19:60	0:0	6	[
water	19:61	0:0	6	j
op	19:62	0:0	6	]
water	19:63	0:0	6	;
water	20:12	0:0	6	Y2
op	20:15	0:0	6	+=
water	20:18	0:0	6	lumSrc
op	20:24	0:0	6	[
water	20:25	0:0	6	j
op	20:26	0:0	6	]
op	20:27	0:0	6	[
water	20:28	0:0	6	i
op	20:30	0:0	6	*
water	20:32	0:0	6	2
op	20:34	0:0	6	+
water	20:36	0:0	6	1
op	20:37	0:0	6	]
op	20:39	0:0	6	*
water	20:41	0:0	6	(
water	20:42	0:0	6	unsigned
water	20:50	0:0	6	)
water	20:51	0:0	6	lumFilter
op	20:60	0:0	6	[
water	20:61	0:0	6	j
op	20:62	0:0	6	]
water	20:63	0:0	6	;
water	21:8	0:0	6	}
for	22:8	25:8	4	(j = 0 ;j < chrFilterSize;j ++)
forinit	22:13	22:18	5	j = 0 ;
water	22:13	0:0	6	j
op	22:15	0:0	6	=
water	22:17	0:0	6	0
water	22:18	0:0	6	;
cond	22:20	22:24	5	j < chrFilterSize
water	22:20	0:0	6	j
op	22:22	0:0	6	<
water	22:24	0:0	6	chrFilterSize
forexpr	22:39	22:40	5	j ++
water	22:39	0:0	6	j
op	22:40	0:0	6	++
stmts	22:44	25:8	5	
water	22:44	0:0	6	{
water	22:45	0:0	6	;
water	23:12	0:0	6	U
op	23:14	0:0	6	+=
water	23:17	0:0	6	chrUSrc
op	23:24	0:0	6	[
water	23:25	0:0	6	j
op	23:26	0:0	6	]
op	23:27	0:0	6	[
water	23:28	0:0	6	i
op	23:29	0:0	6	]
op	23:31	0:0	6	*
water	23:33	0:0	6	(
water	23:34	0:0	6	unsigned
water	23:42	0:0	6	)
water	23:43	0:0	6	chrFilter
op	23:52	0:0	6	[
water	23:53	0:0	6	j
op	23:54	0:0	6	]
water	23:55	0:0	6	;
water	24:12	0:0	6	V
op	24:14	0:0	6	+=
water	24:17	0:0	6	chrVSrc
op	24:24	0:0	6	[
water	24:25	0:0	6	j
op	24:26	0:0	6	]
op	24:27	0:0	6	[
water	24:28	0:0	6	i
op	24:29	0:0	6	]
op	24:31	0:0	6	*
water	24:33	0:0	6	(
water	24:34	0:0	6	unsigned
water	24:42	0:0	6	)
water	24:43	0:0	6	chrFilter
op	24:52	0:0	6	[
water	24:53	0:0	6	j
op	24:54	0:0	6	]
water	24:55	0:0	6	;
water	25:8	0:0	6	}
if	26:8	37:8	4	(hasAlpha)
cond	26:12	26:12	5	hasAlpha
water	26:12	0:0	6	hasAlpha
stmts	26:22	37:8	5	
water	26:22	0:0	6	{
water	27:12	0:0	6	A1
op	27:15	0:0	6	=
op	27:17	0:0	6	-
water	27:18	0:0	6	0
water	27:19	0:0	6	x40000000
water	27:28	0:0	6	;
water	28:12	0:0	6	A2
op	28:15	0:0	6	=
op	28:17	0:0	6	-
water	28:18	0:0	6	0
water	28:19	0:0	6	x40000000
water	28:28	0:0	6	;
for	29:12	32:12	6	(j = 0 ;j < lumFilterSize;j ++)
forinit	29:17	29:22	7	j = 0 ;
water	29:17	0:0	8	j
op	29:19	0:0	8	=
water	29:21	0:0	8	0
water	29:22	0:0	8	;
cond	29:24	29:28	7	j < lumFilterSize
water	29:24	0:0	8	j
op	29:26	0:0	8	<
water	29:28	0:0	8	lumFilterSize
forexpr	29:43	29:44	7	j ++
water	29:43	0:0	8	j
op	29:44	0:0	8	++
stmts	29:48	32:12	7	
water	29:48	0:0	8	{
water	30:16	0:0	8	A1
op	30:19	0:0	8	+=
water	30:22	0:0	8	alpSrc
op	30:28	0:0	8	[
water	30:29	0:0	8	j
op	30:30	0:0	8	]
op	30:31	0:0	8	[
water	30:32	0:0	8	i
op	30:34	0:0	8	*
water	30:36	0:0	8	2
op	30:37	0:0	8	]
op	30:43	0:0	8	*
water	30:45	0:0	8	(
water	30:46	0:0	8	unsigned
water	30:54	0:0	8	)
water	30:55	0:0	8	lumFilter
op	30:64	0:0	8	[
water	30:65	0:0	8	j
op	30:66	0:0	8	]
water	30:67	0:0	8	;
water	31:16	0:0	8	A2
op	31:19	0:0	8	+=
water	31:22	0:0	8	alpSrc
op	31:28	0:0	8	[
water	31:29	0:0	8	j
op	31:30	0:0	8	]
op	31:31	0:0	8	[
water	31:32	0:0	8	i
op	31:34	0:0	8	*
water	31:36	0:0	8	2
op	31:38	0:0	8	+
water	31:40	0:0	8	1
op	31:41	0:0	8	]
op	31:43	0:0	8	*
water	31:45	0:0	8	(
water	31:46	0:0	8	unsigned
water	31:54	0:0	8	)
water	31:55	0:0	8	lumFilter
op	31:64	0:0	8	[
water	31:65	0:0	8	j
op	31:66	0:0	8	]
water	31:67	0:0	8	;
water	32:12	0:0	8	}
water	33:12	0:0	6	A1
op	33:15	0:0	6	>>=
water	33:19	0:0	6	1
water	33:20	0:0	6	;
water	34:12	0:0	6	A1
op	34:15	0:0	6	+=
water	34:18	0:0	6	0
water	34:19	0:0	6	x20002000
water	34:28	0:0	6	;
water	35:12	0:0	6	A2
op	35:15	0:0	6	>>=
water	35:19	0:0	6	1
water	35:20	0:0	6	;
water	36:12	0:0	6	A2
op	36:15	0:0	6	+=
water	36:18	0:0	6	0
water	36:19	0:0	6	x20002000
water	36:28	0:0	6	;
water	37:8	0:0	6	}
water	39:8	0:0	4	Y1
op	39:11	0:0	4	>>=
water	39:15	0:0	4	14
water	39:17	0:0	4	;
water	40:8	0:0	4	Y1
op	40:11	0:0	4	+=
water	40:14	0:0	4	0
water	40:15	0:0	4	x10000
water	40:21	0:0	4	;
water	41:8	0:0	4	Y2
op	41:11	0:0	4	>>=
water	41:15	0:0	4	14
water	41:17	0:0	4	;
water	42:8	0:0	4	Y2
op	42:11	0:0	4	+=
water	42:14	0:0	4	0
water	42:15	0:0	4	x10000
water	42:21	0:0	4	;
water	43:8	0:0	4	U
op	43:11	0:0	4	>>=
water	43:15	0:0	4	14
water	43:17	0:0	4	;
water	44:8	0:0	4	V
op	44:11	0:0	4	>>=
water	44:15	0:0	4	14
water	44:17	0:0	4	;
water	46:8	0:0	4	Y1
op	46:11	0:0	4	-=
water	46:14	0:0	4	c
op	46:15	0:0	4	->
water	46:17	0:0	4	yuv2rgb_y_offset
water	46:33	0:0	4	;
water	47:8	0:0	4	Y2
op	47:11	0:0	4	-=
water	47:14	0:0	4	c
op	47:15	0:0	4	->
water	47:17	0:0	4	yuv2rgb_y_offset
water	47:33	0:0	4	;
water	48:8	0:0	4	Y1
op	48:11	0:0	4	*=
water	48:14	0:0	4	c
op	48:15	0:0	4	->
water	48:17	0:0	4	yuv2rgb_y_coeff
water	48:32	0:0	4	;
water	49:8	0:0	4	Y2
op	49:11	0:0	4	*=
water	49:14	0:0	4	c
op	49:15	0:0	4	->
water	49:17	0:0	4	yuv2rgb_y_coeff
water	49:32	0:0	4	;
water	50:8	0:0	4	Y1
op	50:11	0:0	4	+=
water	50:14	0:0	4	1
op	50:16	0:0	4	<<
water	50:19	0:0	4	13
water	50:21	0:0	4	;
water	51:8	0:0	4	Y2
op	51:11	0:0	4	+=
water	51:14	0:0	4	1
op	51:16	0:0	4	<<
water	51:19	0:0	4	13
water	51:21	0:0	4	;
water	53:8	0:0	4	R
op	53:10	0:0	4	=
water	53:12	0:0	4	V
op	53:14	0:0	4	*
water	53:16	0:0	4	c
op	53:17	0:0	4	->
water	53:19	0:0	4	yuv2rgb_v2r_coeff
water	53:36	0:0	4	;
water	54:8	0:0	4	G
op	54:10	0:0	4	=
water	54:12	0:0	4	V
op	54:14	0:0	4	*
water	54:16	0:0	4	c
op	54:17	0:0	4	->
water	54:19	0:0	4	yuv2rgb_v2g_coeff
op	54:37	0:0	4	+
water	54:39	0:0	4	U
op	54:41	0:0	4	*
water	54:43	0:0	4	c
op	54:44	0:0	4	->
water	54:46	0:0	4	yuv2rgb_u2g_coeff
water	54:63	0:0	4	;
water	55:8	0:0	4	B
op	55:10	0:0	4	=
water	55:39	0:0	4	U
op	55:41	0:0	4	*
water	55:43	0:0	4	c
op	55:44	0:0	4	->
water	55:46	0:0	4	yuv2rgb_u2b_coeff
water	55:63	0:0	4	;
call	57:8	57:65	4	output_pixel
arg	57:21	57:29	5	&dest[0]
op	57:21	0:0	6	&
water	57:22	0:0	6	dest
op	57:26	0:0	6	[
water	57:27	0:0	6	0
op	57:28	0:0	6	]
arg	57:31	57:65	5	av_clip_uintp2(R_B+Y1,30)>>14
call	57:31	57:58	6	av_clip_uintp2
arg	57:46	57:54	7	R_B+Y1
water	57:46	0:0	8	R_B
op	57:50	0:0	8	+
water	57:52	0:0	8	Y1
arg	57:56	57:58	7	30
water	57:56	0:0	8	30
op	57:60	0:0	6	>>
water	57:63	0:0	6	14
water	57:66	0:0	4	;
call	58:8	58:65	4	output_pixel
arg	58:21	58:29	5	&dest[1]
op	58:21	0:0	6	&
water	58:22	0:0	6	dest
op	58:26	0:0	6	[
water	58:27	0:0	6	1
op	58:28	0:0	6	]
arg	58:31	58:65	5	av_clip_uintp2(G+Y1,30)>>14
call	58:31	58:58	6	av_clip_uintp2
arg	58:48	58:54	7	G+Y1
water	58:48	0:0	8	G
op	58:50	0:0	8	+
water	58:52	0:0	8	Y1
arg	58:56	58:58	7	30
water	58:56	0:0	8	30
op	58:60	0:0	6	>>
water	58:63	0:0	6	14
water	58:66	0:0	4	;
call	59:8	59:65	4	output_pixel
arg	59:21	59:29	5	&dest[2]
op	59:21	0:0	6	&
water	59:22	0:0	6	dest
op	59:26	0:0	6	[
water	59:27	0:0	6	2
op	59:28	0:0	6	]
arg	59:31	59:65	5	av_clip_uintp2(B_R+Y1,30)>>14
call	59:31	59:58	6	av_clip_uintp2
arg	59:46	59:54	7	B_R+Y1
water	59:46	0:0	8	B_R
op	59:50	0:0	8	+
water	59:52	0:0	8	Y1
arg	59:56	59:58	7	30
water	59:56	0:0	8	30
op	59:60	0:0	6	>>
water	59:63	0:0	6	14
water	59:66	0:0	4	;
if	60:8	67:8	4	(eightbytes)
cond	60:12	60:12	5	eightbytes
water	60:12	0:0	6	eightbytes
stmts	60:24	67:8	5	
water	60:24	0:0	6	{
call	61:12	61:69	6	output_pixel
arg	61:25	61:33	7	&dest[3]
op	61:25	0:0	8	&
water	61:26	0:0	8	dest
op	61:30	0:0	8	[
water	61:31	0:0	8	3
op	61:32	0:0	8	]
arg	61:35	61:69	7	av_clip_uintp2(A1,30)>>14
call	61:35	61:62	8	av_clip_uintp2
arg	61:50	61:58	9	A1
water	61:50	0:0	10	A1
arg	61:60	61:62	9	30
water	61:60	0:0	10	30
op	61:64	0:0	8	>>
water	61:67	0:0	8	14
water	61:70	0:0	6	;
call	62:12	62:69	6	output_pixel
arg	62:25	62:33	7	&dest[4]
op	62:25	0:0	8	&
water	62:26	0:0	8	dest
op	62:30	0:0	8	[
water	62:31	0:0	8	4
op	62:32	0:0	8	]
arg	62:35	62:69	7	av_clip_uintp2(R_B+Y2,30)>>14
call	62:35	62:62	8	av_clip_uintp2
arg	62:50	62:58	9	R_B+Y2
water	62:50	0:0	10	R_B
op	62:54	0:0	10	+
water	62:56	0:0	10	Y2
arg	62:60	62:62	9	30
water	62:60	0:0	10	30
op	62:64	0:0	8	>>
water	62:67	0:0	8	14
water	62:70	0:0	6	;
call	63:12	63:69	6	output_pixel
arg	63:25	63:33	7	&dest[5]
op	63:25	0:0	8	&
water	63:26	0:0	8	dest
op	63:30	0:0	8	[
water	63:31	0:0	8	5
op	63:32	0:0	8	]
arg	63:35	63:69	7	av_clip_uintp2(G+Y2,30)>>14
call	63:35	63:62	8	av_clip_uintp2
arg	63:52	63:58	9	G+Y2
water	63:52	0:0	10	G
op	63:54	0:0	10	+
water	63:56	0:0	10	Y2
arg	63:60	63:62	9	30
water	63:60	0:0	10	30
op	63:64	0:0	8	>>
water	63:67	0:0	8	14
water	63:70	0:0	6	;
call	64:12	64:69	6	output_pixel
arg	64:25	64:33	7	&dest[6]
op	64:25	0:0	8	&
water	64:26	0:0	8	dest
op	64:30	0:0	8	[
water	64:31	0:0	8	6
op	64:32	0:0	8	]
arg	64:35	64:69	7	av_clip_uintp2(B_R+Y2,30)>>14
call	64:35	64:62	8	av_clip_uintp2
arg	64:50	64:58	9	B_R+Y2
water	64:50	0:0	10	B_R
op	64:54	0:0	10	+
water	64:56	0:0	10	Y2
arg	64:60	64:62	9	30
water	64:60	0:0	10	30
op	64:64	0:0	8	>>
water	64:67	0:0	8	14
water	64:70	0:0	6	;
call	65:12	65:69	6	output_pixel
arg	65:25	65:33	7	&dest[7]
op	65:25	0:0	8	&
water	65:26	0:0	8	dest
op	65:30	0:0	8	[
water	65:31	0:0	8	7
op	65:32	0:0	8	]
arg	65:35	65:69	7	av_clip_uintp2(A2,30)>>14
call	65:35	65:62	8	av_clip_uintp2
arg	65:50	65:58	9	A2
water	65:50	0:0	10	A2
arg	65:60	65:62	9	30
water	65:60	0:0	10	30
op	65:64	0:0	8	>>
water	65:67	0:0	8	14
water	65:70	0:0	6	;
water	66:12	0:0	6	dest
op	66:17	0:0	6	+=
water	66:20	0:0	6	8
water	66:21	0:0	6	;
water	67:8	0:0	6	}
else	67:10	72:8	4
stmts	67:15	72:8	5	
water	67:15	0:0	6	{
call	68:12	68:69	6	output_pixel
arg	68:25	68:33	7	&dest[3]
op	68:25	0:0	8	&
water	68:26	0:0	8	dest
op	68:30	0:0	8	[
water	68:31	0:0	8	3
op	68:32	0:0	8	]
arg	68:35	68:69	7	av_clip_uintp2(R_B+Y2,30)>>14
call	68:35	68:62	8	av_clip_uintp2
arg	68:50	68:58	9	R_B+Y2
water	68:50	0:0	10	R_B
op	68:54	0:0	10	+
water	68:56	0:0	10	Y2
arg	68:60	68:62	9	30
water	68:60	0:0	10	30
op	68:64	0:0	8	>>
water	68:67	0:0	8	14
water	68:70	0:0	6	;
call	69:12	69:69	6	output_pixel
arg	69:25	69:33	7	&dest[4]
op	69:25	0:0	8	&
water	69:26	0:0	8	dest
op	69:30	0:0	8	[
water	69:31	0:0	8	4
op	69:32	0:0	8	]
arg	69:35	69:69	7	av_clip_uintp2(G+Y2,30)>>14
call	69:35	69:62	8	av_clip_uintp2
arg	69:52	69:58	9	G+Y2
water	69:52	0:0	10	G
op	69:54	0:0	10	+
water	69:56	0:0	10	Y2
arg	69:60	69:62	9	30
water	69:60	0:0	10	30
op	69:64	0:0	8	>>
water	69:67	0:0	8	14
water	69:70	0:0	6	;
call	70:12	70:69	6	output_pixel
arg	70:25	70:33	7	&dest[5]
op	70:25	0:0	8	&
water	70:26	0:0	8	dest
op	70:30	0:0	8	[
water	70:31	0:0	8	5
op	70:32	0:0	8	]
arg	70:35	70:69	7	av_clip_uintp2(B_R+Y2,30)>>14
call	70:35	70:62	8	av_clip_uintp2
arg	70:50	70:58	9	B_R+Y2
water	70:50	0:0	10	B_R
op	70:54	0:0	10	+
water	70:56	0:0	10	Y2
arg	70:60	70:62	9	30
water	70:60	0:0	10	30
op	70:64	0:0	8	>>
water	70:67	0:0	8	14
water	70:70	0:0	6	;
water	71:12	0:0	6	dest
op	71:17	0:0	6	+=
water	71:20	0:0	6	6
water	71:21	0:0	6	;
water	72:8	0:0	6	}
water	73:4	0:0	4	}

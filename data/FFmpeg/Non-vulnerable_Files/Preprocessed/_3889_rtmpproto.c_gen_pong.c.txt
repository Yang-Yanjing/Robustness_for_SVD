func	1:0	18:0	0	static int	gen_pong
params	1:19	0:0	1	
param	1:20	1:33	2	URLContext *	s
param	1:35	1:50	2	RTMPContext *	rt
param	1:52	1:68	2	RTMPPacket *	ppkt
stmnts	0:0	17:40	1	
decl	3:4	3:18	2	RTMPPacket	pkt
decl	4:4	4:14	2	uint8_t	*p
decl	5:4	5:11	2	int	ret
if	6:4	10:4	2	(ppkt -> size < 6)
cond	6:8	6:21	3	ppkt -> size < 6
water	6:8	0:0	4	ppkt
op	6:12	0:0	4	->
water	6:14	0:0	4	size
op	6:19	0:0	4	<
water	6:21	0:0	4	6
stmts	6:24	10:4	3	
water	6:24	0:0	4	{
call	7:8	8:25	4	av_log
arg	7:15	7:16	5	s
water	7:15	0:0	6	s
arg	7:18	7:30	5	AV_LOG_ERROR
water	7:18	0:0	6	AV_LOG_ERROR
arg	7:32	7:62	5	"Too short ping packet (%d)\n"
water	7:32	0:0	6	"Too short ping packet (%d)\n"
arg	8:15	8:25	5	ppkt->size
water	8:15	0:0	6	ppkt
op	8:19	0:0	6	->
water	8:21	0:0	6	size
water	8:26	0:0	4	;
return	9:8	9:34	4	AVERROR_INVALIDDATA
water	9:15	0:0	5	AVERROR_INVALIDDATA
water	10:4	0:0	4	}
if	11:4	13:18	2	(( ret =ff_rtmp_packet_create (& pkt ,RTMP_NETWORK_CHANNEL ,RTMP_PT_PING ,ppkt -> timestamp + 1 ,6 ) ) < 0)
cond	11:8	12:64	3	( ret =ff_rtmp_packet_create (& pkt ,RTMP_NETWORK_CHANNEL ,RTMP_PT_PING ,ppkt -> timestamp + 1 ,6 ) ) < 0
water	11:8	0:0	4	(
water	11:9	0:0	4	ret
op	11:13	0:0	4	=
call	11:15	12:59	4	ff_rtmp_packet_create
arg	11:37	11:41	5	&pkt
op	11:37	0:0	6	&
water	11:38	0:0	6	pkt
arg	11:43	11:63	5	RTMP_NETWORK_CHANNEL
water	11:43	0:0	6	RTMP_NETWORK_CHANNEL
arg	11:65	11:77	5	RTMP_PT_PING
water	11:65	0:0	6	RTMP_PT_PING
arg	12:37	12:56	5	ppkt->timestamp+1
water	12:37	0:0	6	ppkt
op	12:41	0:0	6	->
water	12:43	0:0	6	timestamp
op	12:53	0:0	6	+
water	12:55	0:0	6	1
arg	12:58	12:59	5	6
water	12:58	0:0	6	6
water	12:60	0:0	4	)
op	12:62	0:0	4	<
water	12:64	0:0	4	0
stmts	13:8	13:18	3	
return	13:8	13:18	4	ret
water	13:15	0:0	5	ret
water	14:4	0:0	2	p
op	14:6	0:0	2	=
water	14:8	0:0	2	pkt
op	14:11	0:0	2	.
water	14:12	0:0	2	data
water	14:16	0:0	2	;
call	15:4	15:29	2	bytestream_put_be16
arg	15:24	15:26	3	&p
op	15:24	0:0	4	&
water	15:25	0:0	4	p
arg	15:28	15:29	3	7
water	15:28	0:0	4	7
water	15:30	0:0	2	;
call	16:4	16:49	2	bytestream_put_be32
arg	16:24	16:26	3	&p
op	16:24	0:0	4	&
water	16:25	0:0	4	p
arg	16:28	16:49	3	AV_RB32(ppkt->data+2)
call	16:28	16:48	4	AV_RB32
arg	16:36	16:48	5	ppkt->data+2
water	16:36	0:0	6	ppkt
op	16:40	0:0	6	->
water	16:42	0:0	6	data
op	16:46	0:0	6	+
water	16:47	0:0	6	2
water	16:50	0:0	2	;
return	17:4	17:40	2	rtmp_send_packet(rt,&pkt,0)
call	17:11	17:39	3	rtmp_send_packet
arg	17:28	17:30	4	rt
water	17:28	0:0	5	rt
arg	17:32	17:36	4	&pkt
op	17:32	0:0	5	&
water	17:33	0:0	5	pkt
arg	17:38	17:39	4	0
water	17:38	0:0	5	0

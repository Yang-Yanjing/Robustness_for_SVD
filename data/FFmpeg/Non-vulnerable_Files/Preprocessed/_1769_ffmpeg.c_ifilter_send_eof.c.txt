func	1:0	24:0	0	static int	ifilter_send_eof
params	1:27	0:0	1	
param	1:28	1:48	2	InputFilter *	ifilter
stmnts	0:0	23:12	1	
decl	3:4	3:17	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:17	2	int	j
water	3:12	0:0	2	,
decl	3:4	3:17	2	int	ret
water	4:4	0:0	2	ifilter
op	4:11	0:0	2	->
water	4:13	0:0	2	eof
op	4:17	0:0	2	=
water	4:19	0:0	2	1
water	4:20	0:0	2	;
if	5:4	9:4	2	(ifilter -> filter)
cond	5:8	5:17	3	ifilter -> filter
water	5:8	0:0	4	ifilter
op	5:15	0:0	4	->
water	5:17	0:0	4	filter
stmts	5:25	9:4	3	
water	5:25	0:0	4	{
water	6:8	0:0	4	ret
op	6:12	0:0	4	=
call	6:14	6:88	4	av_buffersrc_add_frame_flags
arg	6:43	6:58	5	ifilter->filter
water	6:43	0:0	6	ifilter
op	6:50	0:0	6	->
water	6:52	0:0	6	filter
arg	6:60	6:64	5	NULL
water	6:60	0:0	6	NULL
arg	6:66	6:88	5	AV_BUFFERSRC_FLAG_PUSH
water	6:66	0:0	6	AV_BUFFERSRC_FLAG_PUSH
water	6:89	0:0	4	;
if	7:8	8:22	4	(ret < 0)
cond	7:12	7:18	5	ret < 0
water	7:12	0:0	6	ret
op	7:16	0:0	6	<
water	7:18	0:0	6	0
stmts	8:12	8:22	5	
return	8:12	8:22	6	ret
water	8:19	0:0	7	ret
water	9:4	0:0	4	}
else	9:6	22:4	2
stmts	9:11	22:4	3	
water	9:11	0:0	4	{
decl	11:8	11:40	4	FilterGraph	*fg
op	11:24	0:0	4	=
water	11:26	0:0	4	ifilter
op	11:33	0:0	4	->
water	11:35	0:0	4	graph
for	12:8	14:21	4	(i = 0 ;i < fg -> nb_inputs;i ++)
forinit	12:13	12:18	5	i = 0 ;
water	12:13	0:0	6	i
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:28	5	i < fg -> nb_inputs
water	12:20	0:0	6	i
op	12:22	0:0	6	<
water	12:24	0:0	6	fg
op	12:26	0:0	6	->
water	12:28	0:0	6	nb_inputs
forexpr	12:39	12:40	5	i ++
water	12:39	0:0	6	i
op	12:40	0:0	6	++
stmts	13:12	14:21	5	
if	13:12	14:21	6	(! fg -> inputs [ i ] -> eof)
cond	13:16	13:32	7	! fg -> inputs [ i ] -> eof
op	13:16	0:0	8	!
water	13:17	0:0	8	fg
op	13:19	0:0	8	->
water	13:21	0:0	8	inputs
op	13:27	0:0	8	[
water	13:28	0:0	8	i
op	13:29	0:0	8	]
op	13:30	0:0	8	->
water	13:32	0:0	8	eof
stmts	14:16	14:21	7	
break	14:16	14:21	8	
if	15:8	21:8	4	(i == fg -> nb_inputs)
cond	15:12	15:21	5	i == fg -> nb_inputs
water	15:12	0:0	6	i
op	15:14	0:0	6	==
water	15:17	0:0	6	fg
op	15:19	0:0	6	->
water	15:21	0:0	6	nb_inputs
stmts	15:32	21:8	5	
water	15:32	0:0	6	{
for	19:12	20:57	6	(j = 0 ;j < fg -> nb_outputs;j ++)
forinit	19:17	19:22	7	j = 0 ;
water	19:17	0:0	8	j
op	19:19	0:0	8	=
water	19:21	0:0	8	0
water	19:22	0:0	8	;
cond	19:24	19:32	7	j < fg -> nb_outputs
water	19:24	0:0	8	j
op	19:26	0:0	8	<
water	19:28	0:0	8	fg
op	19:30	0:0	8	->
water	19:32	0:0	8	nb_outputs
forexpr	19:44	19:45	7	j ++
water	19:44	0:0	8	j
op	19:45	0:0	8	++
stmts	20:16	20:57	7	
call	20:16	20:56	8	finish_output_stream
arg	20:37	20:56	9	fg->outputs[j]->ost
water	20:37	0:0	10	fg
op	20:39	0:0	10	->
water	20:41	0:0	10	outputs
op	20:48	0:0	10	[
water	20:49	0:0	10	j
op	20:50	0:0	10	]
op	20:51	0:0	10	->
water	20:53	0:0	10	ost
water	20:57	0:0	8	;
water	21:8	0:0	6	}
water	22:4	0:0	4	}
return	23:4	23:12	2	0
water	23:11	0:0	3	0

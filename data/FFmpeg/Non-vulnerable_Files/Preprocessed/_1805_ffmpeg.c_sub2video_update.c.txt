func	1:0	32:0	0	void	sub2video_update
params	1:21	0:0	1	
param	1:22	1:38	2	InputStream *	ist
param	1:40	1:55	2	AVSubtitle *	sub
stmnts	0:0	31:36	1	
decl	3:4	3:41	2	AVFrame	*frame
op	3:19	0:0	2	=
water	3:21	0:0	2	ist
op	3:24	0:0	2	->
water	3:26	0:0	2	sub2video
op	3:35	0:0	2	.
water	3:36	0:0	2	frame
decl	4:4	4:15	2	int8_t	*dst
decl	5:4	5:24	2	int	dst_linesize
decl	6:4	6:20	2	int	num_rects
water	6:17	0:0	2	,
decl	6:4	6:20	2	int	i
decl	7:4	7:24	2	int64_t	pts
water	7:15	0:0	2	,
decl	7:4	7:24	2	int64_t	end_pts
if	8:4	9:14	2	(! frame)
cond	8:8	8:9	3	! frame
op	8:8	0:0	4	!
water	8:9	0:0	4	frame
stmts	9:8	9:14	3	
return	9:8	9:14	4	
if	10:4	16:4	2	(sub)
cond	10:8	10:8	3	sub
water	10:8	0:0	4	sub
stmts	10:13	16:4	3	
water	10:13	0:0	4	{
water	11:8	0:0	4	pts
op	11:18	0:0	4	=
call	11:20	12:67	4	av_rescale_q
arg	11:33	11:76	5	sub->pts+sub->start_display_time*1000LL
water	11:33	0:0	6	sub
op	11:36	0:0	6	->
water	11:38	0:0	6	pts
op	11:42	0:0	6	+
water	11:44	0:0	6	sub
op	11:47	0:0	6	->
water	11:49	0:0	6	start_display_time
op	11:68	0:0	6	*
water	11:70	0:0	6	1000
water	11:74	0:0	6	LL
arg	12:33	12:47	5	AV_TIME_BASE_Q
water	12:33	0:0	6	AV_TIME_BASE_Q
arg	12:49	12:67	5	ist->st->time_base
water	12:49	0:0	6	ist
op	12:52	0:0	6	->
water	12:54	0:0	6	st
op	12:56	0:0	6	->
water	12:58	0:0	6	time_base
water	12:68	0:0	4	;
water	13:8	0:0	4	end_pts
op	13:18	0:0	4	=
call	13:20	14:67	4	av_rescale_q
arg	13:33	13:76	5	sub->pts+sub->end_display_time*1000LL
water	13:33	0:0	6	sub
op	13:36	0:0	6	->
water	13:38	0:0	6	pts
op	13:42	0:0	6	+
water	13:44	0:0	6	sub
op	13:47	0:0	6	->
water	13:49	0:0	6	end_display_time
op	13:68	0:0	6	*
water	13:70	0:0	6	1000
water	13:74	0:0	6	LL
arg	14:33	14:47	5	AV_TIME_BASE_Q
water	14:33	0:0	6	AV_TIME_BASE_Q
arg	14:49	14:67	5	ist->st->time_base
water	14:49	0:0	6	ist
op	14:52	0:0	6	->
water	14:54	0:0	6	st
op	14:56	0:0	6	->
water	14:58	0:0	6	time_base
water	14:68	0:0	4	;
water	15:8	0:0	4	num_rects
op	15:18	0:0	4	=
water	15:20	0:0	4	sub
op	15:23	0:0	4	->
water	15:25	0:0	4	num_rects
water	15:34	0:0	4	;
water	16:4	0:0	4	}
else	16:6	20:4	2
stmts	16:11	20:4	3	
water	16:11	0:0	4	{
water	17:8	0:0	4	pts
op	17:18	0:0	4	=
water	17:20	0:0	4	ist
op	17:23	0:0	4	->
water	17:25	0:0	4	sub2video
op	17:34	0:0	4	.
water	17:35	0:0	4	end_pts
water	17:42	0:0	4	;
water	18:8	0:0	4	end_pts
op	18:18	0:0	4	=
water	18:20	0:0	4	INT64_MAX
water	18:29	0:0	4	;
water	19:8	0:0	4	num_rects
op	19:18	0:0	4	=
water	19:20	0:0	4	0
water	19:21	0:0	4	;
water	20:4	0:0	4	}
if	21:4	25:4	2	(sub2video_get_blank_frame (ist ) < 0)
cond	21:8	21:41	3	sub2video_get_blank_frame (ist ) < 0
call	21:8	21:37	4	sub2video_get_blank_frame
arg	21:34	21:37	5	ist
water	21:34	0:0	6	ist
op	21:39	0:0	4	<
water	21:41	0:0	4	0
stmts	21:44	25:4	3	
water	21:44	0:0	4	{
call	22:8	23:52	4	av_log
arg	22:15	22:27	5	ist->dec_ctx
water	22:15	0:0	6	ist
op	22:18	0:0	6	->
water	22:20	0:0	6	dec_ctx
arg	22:29	22:41	5	AV_LOG_ERROR
water	22:29	0:0	6	AV_LOG_ERROR
arg	23:15	23:52	5	"Impossible to get a blank canvas.\n"
water	23:15	0:0	6	"Impossible to get a blank canvas.\n"
water	23:53	0:0	4	;
return	24:8	24:14	4	
water	25:4	0:0	4	}
water	26:4	0:0	2	dst
op	26:17	0:0	2	=
water	26:19	0:0	2	frame
op	26:24	0:0	2	->
water	26:26	0:0	2	data
op	26:34	0:0	2	[
water	26:35	0:0	2	0
op	26:36	0:0	2	]
water	26:37	0:0	2	;
water	27:4	0:0	2	dst_linesize
op	27:17	0:0	2	=
water	27:19	0:0	2	frame
op	27:24	0:0	2	->
water	27:26	0:0	2	linesize
op	27:34	0:0	2	[
water	27:35	0:0	2	0
op	27:36	0:0	2	]
water	27:37	0:0	2	;
for	28:4	29:90	2	(i = 0 ;i < num_rects;i ++)
forinit	28:9	28:14	3	i = 0 ;
water	28:9	0:0	4	i
op	28:11	0:0	4	=
water	28:13	0:0	4	0
water	28:14	0:0	4	;
cond	28:16	28:20	3	i < num_rects
water	28:16	0:0	4	i
op	28:18	0:0	4	<
water	28:20	0:0	4	num_rects
forexpr	28:31	28:32	3	i ++
water	28:31	0:0	4	i
op	28:32	0:0	4	++
stmts	29:8	29:90	3	
call	29:8	29:89	4	sub2video_copy_rect
arg	29:28	29:31	5	dst
water	29:28	0:0	6	dst
arg	29:33	29:45	5	dst_linesize
water	29:33	0:0	6	dst_linesize
arg	29:47	29:59	5	frame->width
water	29:47	0:0	6	frame
op	29:52	0:0	6	->
water	29:54	0:0	6	width
arg	29:61	29:74	5	frame->height
water	29:61	0:0	6	frame
op	29:66	0:0	6	->
water	29:68	0:0	6	height
arg	29:76	29:89	5	sub->rects[i]
water	29:76	0:0	6	sub
op	29:79	0:0	6	->
water	29:81	0:0	6	rects
op	29:86	0:0	6	[
water	29:87	0:0	6	i
op	29:88	0:0	6	]
water	29:90	0:0	4	;
call	30:4	30:31	2	sub2video_push_ref
arg	30:23	30:26	3	ist
water	30:23	0:0	4	ist
arg	30:28	30:31	3	pts
water	30:28	0:0	4	pts
water	30:32	0:0	2	;
water	31:4	0:0	2	ist
op	31:7	0:0	2	->
water	31:9	0:0	2	sub2video
op	31:18	0:0	2	.
water	31:19	0:0	2	end_pts
op	31:27	0:0	2	=
water	31:29	0:0	2	end_pts
water	31:36	0:0	2	;

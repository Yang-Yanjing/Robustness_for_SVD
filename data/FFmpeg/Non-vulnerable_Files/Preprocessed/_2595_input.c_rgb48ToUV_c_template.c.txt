func	1:24	20:0	0	void	rgb48ToUV_c_template
params	1:49	0:0	1	
param	1:50	1:64	2	uint16_t *	dstU
param	2:50	2:64	2	uint16_t *	dstV
param	3:50	3:70	2	const uint16_t *	src1
param	4:50	4:70	2	const uint16_t *	src2
param	5:50	5:59	2	int	width
param	6:50	6:75	2	enum AVPixelFormat	origin
param	7:50	7:66	2	int32_t *	rgb2yuv
stmnts	0:0	19:4	1	
decl	9:4	9:9	2	int	i
decl	10:4	10:76	2	int32_t	ru
op	10:15	0:0	2	=
water	10:17	0:0	2	rgb2yuv
op	10:24	0:0	2	[
water	10:25	0:0	2	RU_IDX
op	10:31	0:0	2	]
water	10:32	0:0	2	,
decl	10:4	10:76	2	int32_t	gu
op	10:37	0:0	2	=
water	10:39	0:0	2	rgb2yuv
op	10:46	0:0	2	[
water	10:47	0:0	2	GU_IDX
op	10:53	0:0	2	]
water	10:54	0:0	2	,
decl	10:4	10:76	2	int32_t	bu
op	10:59	0:0	2	=
water	10:61	0:0	2	rgb2yuv
op	10:68	0:0	2	[
water	10:69	0:0	2	BU_IDX
op	10:75	0:0	2	]
decl	11:4	11:76	2	int32_t	rv
op	11:15	0:0	2	=
water	11:17	0:0	2	rgb2yuv
op	11:24	0:0	2	[
water	11:25	0:0	2	RV_IDX
op	11:31	0:0	2	]
water	11:32	0:0	2	,
decl	11:4	11:76	2	int32_t	gv
op	11:37	0:0	2	=
water	11:39	0:0	2	rgb2yuv
op	11:46	0:0	2	[
water	11:47	0:0	2	GV_IDX
op	11:53	0:0	2	]
water	11:54	0:0	2	,
decl	11:4	11:76	2	int32_t	bv
op	11:59	0:0	2	=
water	11:61	0:0	2	rgb2yuv
op	11:68	0:0	2	[
water	11:69	0:0	2	BV_IDX
op	11:75	0:0	2	]
call	12:4	12:27	2	av_assert1
arg	12:15	12:27	3	src1==src2
water	12:15	0:0	4	src1
op	12:20	0:0	4	==
water	12:23	0:0	4	src2
water	12:28	0:0	2	;
for	13:4	19:4	2	(i = 0 ;i < width;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	i < width
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	width
forexpr	13:27	13:28	3	i ++
water	13:27	0:0	4	i
op	13:28	0:0	4	++
stmts	13:32	19:4	3	
water	13:32	0:0	4	{
decl	14:8	14:47	4	int	r_b
op	14:16	0:0	4	=
call	14:18	14:46	5	input_pixel
arg	14:30	14:46	6	&src1[i*3+0]
op	14:30	0:0	7	&
water	14:31	0:0	7	src1
op	14:35	0:0	7	[
water	14:36	0:0	7	i
op	14:38	0:0	7	*
water	14:40	0:0	7	3
op	14:42	0:0	7	+
water	14:44	0:0	7	0
op	14:45	0:0	7	]
decl	15:8	15:47	4	int	g
op	15:16	0:0	4	=
call	15:18	15:46	5	input_pixel
arg	15:30	15:46	6	&src1[i*3+1]
op	15:30	0:0	7	&
water	15:31	0:0	7	src1
op	15:35	0:0	7	[
water	15:36	0:0	7	i
op	15:38	0:0	7	*
water	15:40	0:0	7	3
op	15:42	0:0	7	+
water	15:44	0:0	7	1
op	15:45	0:0	7	]
decl	16:8	16:47	4	int	b_r
op	16:16	0:0	4	=
call	16:18	16:46	5	input_pixel
arg	16:30	16:46	6	&src1[i*3+2]
op	16:30	0:0	7	&
water	16:31	0:0	7	src1
op	16:35	0:0	7	[
water	16:36	0:0	7	i
op	16:38	0:0	7	*
water	16:40	0:0	7	3
op	16:42	0:0	7	+
water	16:44	0:0	7	2
op	16:45	0:0	7	]
water	17:8	0:0	4	dstU
op	17:12	0:0	4	[
water	17:13	0:0	4	i
op	17:14	0:0	4	]
op	17:16	0:0	4	=
water	17:18	0:0	4	(
water	17:19	0:0	4	ru
op	17:21	0:0	4	*
water	17:22	0:0	4	r
op	17:24	0:0	4	+
water	17:26	0:0	4	gu
op	17:28	0:0	4	*
water	17:29	0:0	4	g
op	17:31	0:0	4	+
water	17:33	0:0	4	bu
op	17:35	0:0	4	*
water	17:36	0:0	4	b
op	17:38	0:0	4	+
water	17:40	0:0	4	(
water	17:41	0:0	4	0
water	17:42	0:0	4	x10001
op	17:49	0:0	4	<<
water	17:52	0:0	4	(
water	17:53	0:0	4	RGB2YUV_SHIFT
op	17:67	0:0	4	-
water	17:69	0:0	4	1
water	17:70	0:0	4	)
water	17:71	0:0	4	)
water	17:72	0:0	4	)
op	17:74	0:0	4	>>
water	17:77	0:0	4	RGB2YUV_SHIFT
water	17:90	0:0	4	;
water	18:8	0:0	4	dstV
op	18:12	0:0	4	[
water	18:13	0:0	4	i
op	18:14	0:0	4	]
op	18:16	0:0	4	=
water	18:18	0:0	4	(
water	18:19	0:0	4	rv
op	18:21	0:0	4	*
water	18:22	0:0	4	r
op	18:24	0:0	4	+
water	18:26	0:0	4	gv
op	18:28	0:0	4	*
water	18:29	0:0	4	g
op	18:31	0:0	4	+
water	18:33	0:0	4	bv
op	18:35	0:0	4	*
water	18:36	0:0	4	b
op	18:38	0:0	4	+
water	18:40	0:0	4	(
water	18:41	0:0	4	0
water	18:42	0:0	4	x10001
op	18:49	0:0	4	<<
water	18:52	0:0	4	(
water	18:53	0:0	4	RGB2YUV_SHIFT
op	18:67	0:0	4	-
water	18:69	0:0	4	1
water	18:70	0:0	4	)
water	18:71	0:0	4	)
water	18:72	0:0	4	)
op	18:74	0:0	4	>>
water	18:77	0:0	4	RGB2YUV_SHIFT
water	18:90	0:0	4	;
water	19:4	0:0	4	}

func	1:0	22:0	0	static int	aeval_config_output
params	1:30	0:0	1	
param	1:31	1:52	2	AVFilterLink *	outlink
stmnts	0:0	21:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:33	2	EvalContext	*eval
op	4:22	0:0	2	=
water	4:24	0:0	2	ctx
op	4:27	0:0	2	->
water	4:29	0:0	2	priv
decl	5:4	5:41	2	AVFilterLink	*inlink
op	5:25	0:0	2	=
water	5:27	0:0	2	ctx
op	5:30	0:0	2	->
water	5:32	0:0	2	inputs
op	5:38	0:0	2	[
water	5:39	0:0	2	0
op	5:40	0:0	2	]
decl	6:4	6:11	2	int	ret
if	7:4	11:4	2	(eval -> same_chlayout)
cond	7:8	7:14	3	eval -> same_chlayout
water	7:8	0:0	4	eval
op	7:12	0:0	4	->
water	7:14	0:0	4	same_chlayout
stmts	7:29	11:4	3	
water	7:29	0:0	4	{
water	8:8	0:0	4	eval
op	8:12	0:0	4	->
water	8:14	0:0	4	chlayout
op	8:23	0:0	4	=
water	8:25	0:0	4	inlink
op	8:31	0:0	4	->
water	8:33	0:0	4	channel_layout
water	8:47	0:0	4	;
if	9:8	10:22	4	(( ret =parse_channel_expressions (ctx ,inlink -> channels ) ) < 0)
cond	9:12	9:71	5	( ret =parse_channel_expressions (ctx ,inlink -> channels ) ) < 0
water	9:12	0:0	6	(
water	9:13	0:0	6	ret
op	9:17	0:0	6	=
call	9:19	9:66	6	parse_channel_expressions
arg	9:45	9:48	7	ctx
water	9:45	0:0	8	ctx
arg	9:50	9:66	7	inlink->channels
water	9:50	0:0	8	inlink
op	9:56	0:0	8	->
water	9:58	0:0	8	channels
water	9:67	0:0	6	)
op	9:69	0:0	6	<
water	9:71	0:0	6	0
stmts	10:12	10:22	5	
return	10:12	10:22	6	ret
water	10:19	0:0	7	ret
water	11:4	0:0	4	}
water	12:4	0:0	2	eval
op	12:8	0:0	2	->
water	12:10	0:0	2	n
op	12:12	0:0	2	=
water	12:14	0:0	2	0
water	12:15	0:0	2	;
water	13:4	0:0	2	eval
op	13:8	0:0	2	->
water	13:10	0:0	2	nb_in_channels
op	13:25	0:0	2	=
water	13:27	0:0	2	eval
op	13:31	0:0	2	->
water	13:33	0:0	2	var_values
op	13:43	0:0	2	[
water	13:44	0:0	2	VAR_NB_IN_CHANNELS
op	13:62	0:0	2	]
op	13:64	0:0	2	=
water	13:66	0:0	2	inlink
op	13:72	0:0	2	->
water	13:74	0:0	2	channels
water	13:82	0:0	2	;
water	14:4	0:0	2	eval
op	14:8	0:0	2	->
water	14:10	0:0	2	var_values
op	14:20	0:0	2	[
water	14:21	0:0	2	VAR_NB_OUT_CHANNELS
op	14:40	0:0	2	]
op	14:42	0:0	2	=
water	14:44	0:0	2	outlink
op	14:51	0:0	2	->
water	14:53	0:0	2	channels
water	14:61	0:0	2	;
water	15:4	0:0	2	eval
op	15:8	0:0	2	->
water	15:10	0:0	2	var_values
op	15:20	0:0	2	[
water	15:21	0:0	2	VAR_S
op	15:26	0:0	2	]
op	15:28	0:0	2	=
water	15:30	0:0	2	inlink
op	15:36	0:0	2	->
water	15:38	0:0	2	sample_rate
water	15:49	0:0	2	;
water	16:4	0:0	2	eval
op	16:8	0:0	2	->
water	16:10	0:0	2	var_values
op	16:20	0:0	2	[
water	16:21	0:0	2	VAR_T
op	16:26	0:0	2	]
op	16:28	0:0	2	=
water	16:30	0:0	2	NAN
water	16:33	0:0	2	;
water	17:4	0:0	2	eval
op	17:8	0:0	2	->
water	17:10	0:0	2	channel_values
op	17:25	0:0	2	=
call	17:27	18:87	2	av_realloc_f
arg	17:40	17:60	3	eval->channel_values
water	17:40	0:0	4	eval
op	17:44	0:0	4	->
water	17:46	0:0	4	channel_values
arg	18:40	18:56	3	inlink->channels
water	18:40	0:0	4	inlink
op	18:46	0:0	4	->
water	18:48	0:0	4	channels
arg	18:58	18:87	3	sizeof(*eval->channel_values)
op	18:58	0:0	4	sizeof
water	18:64	0:0	4	(
op	18:65	0:0	4	*
water	18:66	0:0	4	eval
op	18:70	0:0	4	->
water	18:72	0:0	4	channel_values
water	18:86	0:0	4	)
water	18:88	0:0	2	;
if	19:4	20:30	2	(! eval -> channel_values)
cond	19:8	19:15	3	! eval -> channel_values
op	19:8	0:0	4	!
water	19:9	0:0	4	eval
op	19:13	0:0	4	->
water	19:15	0:0	4	channel_values
stmts	20:8	20:30	3	
return	20:8	20:30	4	AVERROR(ENOMEM)
call	20:15	20:29	5	AVERROR
arg	20:23	20:29	6	ENOMEM
water	20:23	0:0	7	ENOMEM
return	21:4	21:12	2	0
water	21:11	0:0	3	0

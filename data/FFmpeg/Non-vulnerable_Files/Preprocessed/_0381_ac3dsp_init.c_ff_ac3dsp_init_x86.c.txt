func	1:8	57:0	0	void	ff_ac3dsp_init_x86
params	1:31	0:0	1	
param	1:32	1:48	2	AC3DSPContext *	c
param	1:50	1:63	2	int	bit_exact
stmnts	0:0	55:4	1	
decl	3:4	3:38	2	int	cpu_flags
op	3:18	0:0	2	=
call	3:20	3:37	3	av_get_cpu_flags
if	4:4	9:4	2	(EXTERNAL_MMX (cpu_flags ))
cond	4:8	4:30	3	EXTERNAL_MMX (cpu_flags )
call	4:8	4:30	4	EXTERNAL_MMX
arg	4:21	4:30	5	cpu_flags
water	4:21	0:0	6	cpu_flags
stmts	4:33	9:4	3	
water	4:33	0:0	4	{
water	5:8	0:0	4	c
op	5:9	0:0	4	->
water	5:11	0:0	4	ac3_exponent_min
op	5:28	0:0	4	=
water	5:30	0:0	4	ff_ac3_exponent_min_mmx
water	5:53	0:0	4	;
water	6:8	0:0	4	c
op	6:9	0:0	4	->
water	6:11	0:0	4	ac3_max_msb_abs_int16
op	6:33	0:0	4	=
water	6:35	0:0	4	ff_ac3_max_msb_abs_int16_mmx
water	6:63	0:0	4	;
water	7:8	0:0	4	c
op	7:9	0:0	4	->
water	7:11	0:0	4	ac3_lshift_int16
op	7:28	0:0	4	=
water	7:30	0:0	4	ff_ac3_lshift_int16_mmx
water	7:53	0:0	4	;
water	8:8	0:0	4	c
op	8:9	0:0	4	->
water	8:11	0:0	4	ac3_rshift_int32
op	8:28	0:0	4	=
water	8:30	0:0	4	ff_ac3_rshift_int32_mmx
water	8:53	0:0	4	;
water	9:4	0:0	4	}
if	10:4	14:4	2	(EXTERNAL_AMD3DNOW (cpu_flags ))
cond	10:8	10:35	3	EXTERNAL_AMD3DNOW (cpu_flags )
call	10:8	10:35	4	EXTERNAL_AMD3DNOW
arg	10:26	10:35	5	cpu_flags
water	10:26	0:0	6	cpu_flags
stmts	10:38	14:4	3	
water	10:38	0:0	4	{
if	11:8	13:8	4	(! bit_exact)
cond	11:12	11:13	5	! bit_exact
op	11:12	0:0	6	!
water	11:13	0:0	6	bit_exact
stmts	11:24	13:8	5	
water	11:24	0:0	6	{
water	12:12	0:0	6	c
op	12:13	0:0	6	->
water	12:15	0:0	6	float_to_fixed24
op	12:32	0:0	6	=
water	12:34	0:0	6	ff_float_to_fixed24_3dnow
water	12:59	0:0	6	;
water	13:8	0:0	6	}
water	14:4	0:0	4	}
if	15:4	23:4	2	(EXTERNAL_MMXEXT (cpu_flags ))
cond	15:8	15:33	3	EXTERNAL_MMXEXT (cpu_flags )
call	15:8	15:33	4	EXTERNAL_MMXEXT
arg	15:24	15:33	5	cpu_flags
water	15:24	0:0	6	cpu_flags
stmts	15:36	23:4	3	
water	15:36	0:0	4	{
water	16:8	0:0	4	c
op	16:9	0:0	4	->
water	16:11	0:0	4	ac3_exponent_min
op	16:28	0:0	4	=
water	16:30	0:0	4	ff_ac3_exponent_min_mmxext
water	16:56	0:0	4	;
water	17:8	0:0	4	c
op	17:9	0:0	4	->
water	17:11	0:0	4	ac3_max_msb_abs_int16
op	17:33	0:0	4	=
water	17:35	0:0	4	ff_ac3_max_msb_abs_int16_mmxext
water	17:66	0:0	4	;
if	18:8	20:8	4	(bit_exact)
cond	18:12	18:12	5	bit_exact
water	18:12	0:0	6	bit_exact
stmts	18:23	20:8	5	
water	18:23	0:0	6	{
water	19:12	0:0	6	c
op	19:13	0:0	6	->
water	19:15	0:0	6	apply_window_int16
op	19:34	0:0	6	=
water	19:36	0:0	6	ff_apply_window_int16_mmxext
water	19:64	0:0	6	;
water	20:8	0:0	6	}
else	20:10	22:8	4
stmts	20:15	22:8	5	
water	20:15	0:0	6	{
water	21:12	0:0	6	c
op	21:13	0:0	6	->
water	21:15	0:0	6	apply_window_int16
op	21:34	0:0	6	=
water	21:36	0:0	6	ff_apply_window_int16_round_mmxext
water	21:70	0:0	6	;
water	22:8	0:0	6	}
water	23:4	0:0	4	}
if	24:4	26:4	2	(EXTERNAL_SSE (cpu_flags ))
cond	24:8	24:30	3	EXTERNAL_SSE (cpu_flags )
call	24:8	24:30	4	EXTERNAL_SSE
arg	24:21	24:30	5	cpu_flags
water	24:21	0:0	6	cpu_flags
stmts	24:33	26:4	3	
water	24:33	0:0	4	{
water	25:8	0:0	4	c
op	25:9	0:0	4	->
water	25:11	0:0	4	float_to_fixed24
op	25:28	0:0	4	=
water	25:30	0:0	4	ff_float_to_fixed24_sse
water	25:53	0:0	4	;
water	26:4	0:0	4	}
if	27:4	42:4	2	(EXTERNAL_SSE2 (cpu_flags ))
cond	27:8	27:31	3	EXTERNAL_SSE2 (cpu_flags )
call	27:8	27:31	4	EXTERNAL_SSE2
arg	27:22	27:31	5	cpu_flags
water	27:22	0:0	6	cpu_flags
stmts	27:34	42:4	3	
water	27:34	0:0	4	{
water	28:8	0:0	4	c
op	28:9	0:0	4	->
water	28:11	0:0	4	ac3_exponent_min
op	28:28	0:0	4	=
water	28:30	0:0	4	ff_ac3_exponent_min_sse2
water	28:54	0:0	4	;
water	29:8	0:0	4	c
op	29:9	0:0	4	->
water	29:11	0:0	4	ac3_max_msb_abs_int16
op	29:33	0:0	4	=
water	29:35	0:0	4	ff_ac3_max_msb_abs_int16_sse2
water	29:64	0:0	4	;
water	30:8	0:0	4	c
op	30:9	0:0	4	->
water	30:11	0:0	4	float_to_fixed24
op	30:28	0:0	4	=
water	30:30	0:0	4	ff_float_to_fixed24_sse2
water	30:54	0:0	4	;
water	31:8	0:0	4	c
op	31:9	0:0	4	->
water	31:11	0:0	4	compute_mantissa_size
op	31:33	0:0	4	=
water	31:35	0:0	4	ff_ac3_compute_mantissa_size_sse2
water	31:68	0:0	4	;
water	32:8	0:0	4	c
op	32:9	0:0	4	->
water	32:11	0:0	4	extract_exponents
op	32:29	0:0	4	=
water	32:31	0:0	4	ff_ac3_extract_exponents_sse2
water	32:60	0:0	4	;
if	33:8	36:8	4	(! ( cpu_flags & AV_CPU_FLAG_SSE2SLOW ))
cond	33:12	33:46	5	! ( cpu_flags & AV_CPU_FLAG_SSE2SLOW )
op	33:12	0:0	6	!
water	33:13	0:0	6	(
water	33:14	0:0	6	cpu_flags
op	33:24	0:0	6	&
water	33:26	0:0	6	AV_CPU_FLAG_SSE2SLOW
water	33:46	0:0	6	)
stmts	33:49	36:8	5	
water	33:49	0:0	6	{
water	34:12	0:0	6	c
op	34:13	0:0	6	->
water	34:15	0:0	6	ac3_lshift_int16
op	34:32	0:0	6	=
water	34:34	0:0	6	ff_ac3_lshift_int16_sse2
water	34:58	0:0	6	;
water	35:12	0:0	6	c
op	35:13	0:0	6	->
water	35:15	0:0	6	ac3_rshift_int32
op	35:32	0:0	6	=
water	35:34	0:0	6	ff_ac3_rshift_int32_sse2
water	35:58	0:0	6	;
water	36:8	0:0	6	}
if	37:8	39:8	4	(bit_exact)
cond	37:12	37:12	5	bit_exact
water	37:12	0:0	6	bit_exact
stmts	37:23	39:8	5	
water	37:23	0:0	6	{
water	38:12	0:0	6	c
op	38:13	0:0	6	->
water	38:15	0:0	6	apply_window_int16
op	38:34	0:0	6	=
water	38:36	0:0	6	ff_apply_window_int16_sse2
water	38:62	0:0	6	;
water	39:8	0:0	6	}
else	39:10	41:8	4
stmts	39:15	41:8	5	
if	39:15	41:8	6	(! ( cpu_flags & AV_CPU_FLAG_SSE2SLOW ))
cond	39:19	39:53	7	! ( cpu_flags & AV_CPU_FLAG_SSE2SLOW )
op	39:19	0:0	8	!
water	39:20	0:0	8	(
water	39:21	0:0	8	cpu_flags
op	39:31	0:0	8	&
water	39:33	0:0	8	AV_CPU_FLAG_SSE2SLOW
water	39:53	0:0	8	)
stmts	39:56	41:8	7	
water	39:56	0:0	8	{
water	40:12	0:0	8	c
op	40:13	0:0	8	->
water	40:15	0:0	8	apply_window_int16
op	40:34	0:0	8	=
water	40:36	0:0	8	ff_apply_window_int16_round_sse2
water	40:68	0:0	8	;
water	41:8	0:0	8	}
water	42:4	0:0	4	}
if	43:4	51:4	2	(EXTERNAL_SSSE3 (cpu_flags ))
cond	43:8	43:32	3	EXTERNAL_SSSE3 (cpu_flags )
call	43:8	43:32	4	EXTERNAL_SSSE3
arg	43:23	43:32	5	cpu_flags
water	43:23	0:0	6	cpu_flags
stmts	43:35	51:4	3	
water	43:35	0:0	4	{
water	44:8	0:0	4	c
op	44:9	0:0	4	->
water	44:11	0:0	4	ac3_max_msb_abs_int16
op	44:33	0:0	4	=
water	44:35	0:0	4	ff_ac3_max_msb_abs_int16_ssse3
water	44:65	0:0	4	;
if	45:8	47:8	4	(cpu_flags & AV_CPU_FLAG_ATOM)
cond	45:12	45:24	5	cpu_flags & AV_CPU_FLAG_ATOM
water	45:12	0:0	6	cpu_flags
op	45:22	0:0	6	&
water	45:24	0:0	6	AV_CPU_FLAG_ATOM
stmts	45:42	47:8	5	
water	45:42	0:0	6	{
water	46:12	0:0	6	c
op	46:13	0:0	6	->
water	46:15	0:0	6	apply_window_int16
op	46:34	0:0	6	=
water	46:36	0:0	6	ff_apply_window_int16_ssse3_atom
water	46:68	0:0	6	;
water	47:8	0:0	6	}
else	47:10	50:8	4
stmts	47:15	50:8	5	
water	47:15	0:0	6	{
water	48:12	0:0	6	c
op	48:13	0:0	6	->
water	48:15	0:0	6	extract_exponents
op	48:33	0:0	6	=
water	48:35	0:0	6	ff_ac3_extract_exponents_ssse3
water	48:65	0:0	6	;
water	49:12	0:0	6	c
op	49:13	0:0	6	->
water	49:15	0:0	6	apply_window_int16
op	49:34	0:0	6	=
water	49:36	0:0	6	ff_apply_window_int16_ssse3
water	49:63	0:0	6	;
water	50:8	0:0	6	}
water	51:4	0:0	4	}
if	53:4	55:4	2	(INLINE_SSE (cpu_flags ))
cond	53:8	53:28	3	INLINE_SSE (cpu_flags )
call	53:8	53:28	4	INLINE_SSE
arg	53:19	53:28	5	cpu_flags
water	53:19	0:0	6	cpu_flags
stmts	53:31	55:4	3	
water	53:31	0:0	4	{
water	54:8	0:0	4	c
op	54:9	0:0	4	->
water	54:11	0:0	4	downmix
op	54:19	0:0	4	=
water	54:21	0:0	4	ac3_downmix_sse
water	54:36	0:0	4	;
water	55:4	0:0	4	}

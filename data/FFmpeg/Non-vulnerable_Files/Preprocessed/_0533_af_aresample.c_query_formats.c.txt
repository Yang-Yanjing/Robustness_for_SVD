func	1:0	50:0	0	static int	query_formats
params	1:24	0:0	1	
param	1:25	1:45	2	AVFilterContext *	ctx
stmnts	0:0	49:12	1	
decl	3:4	3:43	2	AResampleContext	*aresample
op	3:32	0:0	2	=
water	3:34	0:0	2	ctx
op	3:37	0:0	2	->
water	3:39	0:0	2	priv
decl	4:4	4:34	2	enum AVSampleFormat	out_format
decl	5:4	5:32	2	int64_t	out_rate
water	5:20	0:0	2	,
decl	5:4	5:32	2	int64_t	out_layout
decl	6:4	6:42	2	AVFilterLink	*inlink
op	6:26	0:0	2	=
water	6:28	0:0	2	ctx
op	6:31	0:0	2	->
water	6:33	0:0	2	inputs
op	6:39	0:0	2	[
water	6:40	0:0	2	0
op	6:41	0:0	2	]
decl	7:4	7:43	2	AVFilterLink	*outlink
op	7:26	0:0	2	=
water	7:28	0:0	2	ctx
op	7:31	0:0	2	->
water	7:33	0:0	2	outputs
op	7:40	0:0	2	[
water	7:41	0:0	2	0
op	7:42	0:0	2	]
decl	8:4	8:52	2	AVFilterFormats	*in_formats
water	8:38	0:0	2	,
decl	8:4	8:52	2	AVFilterFormats	*out_formats
decl	9:4	9:60	2	AVFilterFormats	*in_samplerates
water	9:42	0:0	2	,
decl	9:4	9:60	2	AVFilterFormats	*out_samplerates
decl	10:4	10:52	2	AVFilterChannelLayouts	*in_layouts
water	10:38	0:0	2	,
decl	10:4	10:52	2	AVFilterChannelLayouts	*out_layouts
call	11:4	11:63	2	av_opt_get_sample_fmt
arg	11:26	11:40	3	aresample->swr
water	11:26	0:0	4	aresample
op	11:35	0:0	4	->
water	11:37	0:0	4	swr
arg	11:42	11:47	3	"osf"
water	11:42	0:0	4	"osf"
arg	11:49	11:50	3	0
water	11:49	0:0	4	0
arg	11:52	11:63	3	&out_format
op	11:52	0:0	4	&
water	11:53	0:0	4	out_format
water	11:64	0:0	2	;
call	12:4	12:54	2	av_opt_get_int
arg	12:19	12:33	3	aresample->swr
water	12:19	0:0	4	aresample
op	12:28	0:0	4	->
water	12:30	0:0	4	swr
arg	12:35	12:40	3	"osr"
water	12:35	0:0	4	"osr"
arg	12:42	12:43	3	0
water	12:42	0:0	4	0
arg	12:45	12:54	3	&out_rate
op	12:45	0:0	4	&
water	12:46	0:0	4	out_rate
water	12:55	0:0	2	;
call	13:4	13:56	2	av_opt_get_int
arg	13:19	13:33	3	aresample->swr
water	13:19	0:0	4	aresample
op	13:28	0:0	4	->
water	13:30	0:0	4	swr
arg	13:35	13:40	3	"ocl"
water	13:35	0:0	4	"ocl"
arg	13:42	13:43	3	0
water	13:42	0:0	4	0
arg	13:45	13:56	3	&out_layout
op	13:45	0:0	4	&
water	13:46	0:0	4	out_layout
water	13:57	0:0	2	;
water	14:4	0:0	2	in_formats
op	14:20	0:0	2	=
call	14:22	14:55	2	ff_all_formats
arg	14:37	14:55	3	AVMEDIA_TYPE_AUDIO
water	14:37	0:0	4	AVMEDIA_TYPE_AUDIO
water	14:56	0:0	2	;
if	15:4	16:30	2	(! in_formats)
cond	15:8	15:9	3	! in_formats
op	15:8	0:0	4	!
water	15:9	0:0	4	in_formats
stmts	16:8	16:30	3	
return	16:8	16:30	4	AVERROR(ENOMEM)
call	16:15	16:29	5	AVERROR
arg	16:23	16:29	6	ENOMEM
water	16:23	0:0	7	ENOMEM
call	17:4	17:58	2	ff_formats_ref
arg	17:21	17:31	3	in_formats
water	17:21	0:0	4	in_formats
arg	17:38	17:58	3	&inlink->out_formats
op	17:38	0:0	4	&
water	17:39	0:0	4	inlink
op	17:45	0:0	4	->
water	17:47	0:0	4	out_formats
water	17:59	0:0	2	;
water	18:4	0:0	2	in_samplerates
op	18:20	0:0	2	=
call	18:22	18:41	2	ff_all_samplerates
water	18:42	0:0	2	;
if	19:4	20:30	2	(! in_samplerates)
cond	19:8	19:9	3	! in_samplerates
op	19:8	0:0	4	!
water	19:9	0:0	4	in_samplerates
stmts	20:8	20:30	3	
return	20:8	20:30	4	AVERROR(ENOMEM)
call	20:15	20:29	5	AVERROR
arg	20:23	20:29	6	ENOMEM
water	20:23	0:0	7	ENOMEM
call	21:4	21:62	2	ff_formats_ref
arg	21:21	21:35	3	in_samplerates
water	21:21	0:0	4	in_samplerates
arg	21:38	21:62	3	&inlink->out_samplerates
op	21:38	0:0	4	&
water	21:39	0:0	4	inlink
op	21:45	0:0	4	->
water	21:47	0:0	4	out_samplerates
water	21:63	0:0	2	;
water	22:4	0:0	2	in_layouts
op	22:20	0:0	2	=
call	22:22	22:44	2	ff_all_channel_counts
water	22:45	0:0	2	;
if	23:4	24:31	2	(! in_layouts)
cond	23:8	23:9	3	! in_layouts
op	23:8	0:0	4	!
water	23:9	0:0	4	in_layouts
stmts	24:9	24:31	3	
return	24:9	24:31	4	AVERROR(ENOMEM)
call	24:16	24:30	5	AVERROR
arg	24:24	24:30	6	ENOMEM
water	24:24	0:0	7	ENOMEM
call	25:4	25:72	2	ff_channel_layouts_ref
arg	25:27	25:37	3	in_layouts
water	25:27	0:0	4	in_layouts
arg	25:44	25:72	3	&inlink->out_channel_layouts
op	25:44	0:0	4	&
water	25:45	0:0	4	inlink
op	25:51	0:0	4	->
water	25:53	0:0	4	out_channel_layouts
water	25:73	0:0	2	;
if	26:4	29:4	2	(out_rate > 0)
cond	26:7	26:18	3	out_rate > 0
water	26:7	0:0	4	out_rate
op	26:16	0:0	4	>
water	26:18	0:0	4	0
stmts	26:21	29:4	3	
water	26:21	0:0	4	{
decl	27:8	27:41	4	int	ratelist[]
op	27:23	0:0	4	=
water	27:25	0:0	4	{
water	27:27	0:0	4	out_rate
water	27:35	0:0	4	,
op	27:37	0:0	4	-
water	27:38	0:0	4	1
water	27:40	0:0	4	}
water	28:8	0:0	4	out_samplerates
op	28:24	0:0	4	=
call	28:26	28:54	4	ff_make_format_list
arg	28:46	28:54	5	ratelist
water	28:46	0:0	6	ratelist
water	28:55	0:0	4	;
water	29:4	0:0	4	}
else	29:6	31:4	2
stmts	29:11	31:4	3	
water	29:11	0:0	4	{
water	30:8	0:0	4	out_samplerates
op	30:24	0:0	4	=
call	30:26	30:45	4	ff_all_samplerates
water	30:46	0:0	4	;
water	31:4	0:0	4	}
if	32:4	35:4	2	(! out_samplerates)
cond	32:8	32:9	3	! out_samplerates
op	32:8	0:0	4	!
water	32:9	0:0	4	out_samplerates
stmts	32:26	35:4	3	
water	32:26	0:0	4	{
call	33:8	33:73	4	av_log
arg	33:15	33:18	5	ctx
water	33:15	0:0	6	ctx
arg	33:20	33:32	5	AV_LOG_ERROR
water	33:20	0:0	6	AV_LOG_ERROR
arg	33:34	33:73	5	"Cannot allocate output samplerates.\n"
water	33:34	0:0	6	"Cannot allocate output samplerates.\n"
water	33:74	0:0	4	;
return	34:8	34:30	4	AVERROR(ENOMEM)
call	34:15	34:29	5	AVERROR
arg	34:23	34:29	6	ENOMEM
water	34:23	0:0	7	ENOMEM
water	35:4	0:0	4	}
call	36:4	36:60	2	ff_formats_ref
arg	36:19	36:34	3	out_samplerates
water	36:19	0:0	4	out_samplerates
arg	36:36	36:60	3	&outlink->in_samplerates
op	36:36	0:0	4	&
water	36:37	0:0	4	outlink
op	36:44	0:0	4	->
water	36:46	0:0	4	in_samplerates
water	36:61	0:0	2	;
if	37:4	40:4	2	(out_format != AV_SAMPLE_FMT_NONE)
cond	37:7	37:21	3	out_format != AV_SAMPLE_FMT_NONE
water	37:7	0:0	4	out_format
op	37:18	0:0	4	!=
water	37:21	0:0	4	AV_SAMPLE_FMT_NONE
stmts	37:41	40:4	3	
water	37:41	0:0	4	{
decl	38:8	38:45	4	int	formatlist[]
op	38:25	0:0	4	=
water	38:27	0:0	4	{
water	38:29	0:0	4	out_format
water	38:39	0:0	4	,
op	38:41	0:0	4	-
water	38:42	0:0	4	1
water	38:44	0:0	4	}
water	39:8	0:0	4	out_formats
op	39:20	0:0	4	=
call	39:22	39:52	4	ff_make_format_list
arg	39:42	39:52	5	formatlist
water	39:42	0:0	6	formatlist
water	39:53	0:0	4	;
water	40:4	0:0	4	}
else	40:6	41:56	2
stmts	41:8	41:56	3	
water	41:8	0:0	4	out_formats
op	41:20	0:0	4	=
call	41:22	41:55	4	ff_all_formats
arg	41:37	41:55	5	AVMEDIA_TYPE_AUDIO
water	41:37	0:0	6	AVMEDIA_TYPE_AUDIO
water	41:56	0:0	4	;
call	42:4	42:52	2	ff_formats_ref
arg	42:19	42:30	3	out_formats
water	42:19	0:0	4	out_formats
arg	42:32	42:52	3	&outlink->in_formats
op	42:32	0:0	4	&
water	42:33	0:0	4	outlink
op	42:40	0:0	4	->
water	42:42	0:0	4	in_formats
water	42:53	0:0	2	;
if	43:4	46:4	2	(out_layout)
cond	43:7	43:7	3	out_layout
water	43:7	0:0	4	out_layout
stmts	43:19	46:4	3	
water	43:19	0:0	4	{
decl	44:8	44:50	4	int64_t	layout_list[]
op	44:30	0:0	4	=
water	44:32	0:0	4	{
water	44:34	0:0	4	out_layout
water	44:44	0:0	4	,
op	44:46	0:0	4	-
water	44:47	0:0	4	1
water	44:49	0:0	4	}
water	45:8	0:0	4	out_layouts
op	45:20	0:0	4	=
call	45:22	45:61	4	avfilter_make_format64_list
arg	45:50	45:61	5	layout_list
water	45:50	0:0	6	layout_list
water	45:62	0:0	4	;
water	46:4	0:0	4	}
else	46:6	47:45	2
stmts	47:8	47:45	3	
water	47:8	0:0	4	out_layouts
op	47:20	0:0	4	=
call	47:22	47:44	4	ff_all_channel_counts
water	47:45	0:0	4	;
call	48:4	48:68	2	ff_channel_layouts_ref
arg	48:27	48:38	3	out_layouts
water	48:27	0:0	4	out_layouts
arg	48:40	48:68	3	&outlink->in_channel_layouts
op	48:40	0:0	4	&
water	48:41	0:0	4	outlink
op	48:48	0:0	4	->
water	48:50	0:0	4	in_channel_layouts
water	48:69	0:0	2	;
return	49:4	49:12	2	0
water	49:11	0:0	3	0

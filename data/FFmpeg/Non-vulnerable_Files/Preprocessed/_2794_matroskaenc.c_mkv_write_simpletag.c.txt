func	1:0	28:0	0	static int	mkv_write_simpletag
params	1:30	0:0	1	
param	1:31	1:46	2	AVIOContext *	pb
param	1:48	1:68	2	AVDictionaryEntry *	t
stmnts	0:0	27:12	1	
decl	3:4	3:36	2	uint8_t	*key
op	3:17	0:0	2	=
call	3:19	3:35	3	av_strdup
arg	3:29	3:35	4	t->key
water	3:29	0:0	5	t
op	3:30	0:0	5	->
water	3:32	0:0	5	key
decl	4:4	4:22	2	uint8_t	*p
op	4:17	0:0	2	=
water	4:19	0:0	2	key
decl	5:4	5:30	2	const uint8_t	*lang
op	5:24	0:0	2	=
water	5:26	0:0	2	NULL
decl	6:4	6:19	2	ebml_master	tag
if	7:4	8:30	2	(! key)
cond	7:8	7:9	3	! key
op	7:8	0:0	4	!
water	7:9	0:0	4	key
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(ENOMEM)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	ENOMEM
water	8:23	0:0	7	ENOMEM
if	9:4	11:14	2	(( p =strrchr (p ,'-' ) ) && ( lang =av_convert_lang_to (p + 1 ,AV_LANG_ISO639_2_BIBL ) ))
cond	9:8	10:64	3	( p =strrchr (p ,'-' ) ) && ( lang =av_convert_lang_to (p + 1 ,AV_LANG_ISO639_2_BIBL ) )
water	9:8	0:0	4	(
water	9:9	0:0	4	p
op	9:11	0:0	4	=
call	9:13	9:27	4	strrchr
arg	9:21	9:22	5	p
water	9:21	0:0	6	p
arg	9:24	9:27	5	'-'
water	9:24	0:0	6	'-'
water	9:28	0:0	4	)
op	9:30	0:0	4	&&
water	10:8	0:0	4	(
water	10:9	0:0	4	lang
op	10:14	0:0	4	=
call	10:16	10:63	4	av_convert_lang_to
arg	10:35	10:40	5	p+1
water	10:35	0:0	6	p
op	10:37	0:0	6	+
water	10:39	0:0	6	1
arg	10:42	10:63	5	AV_LANG_ISO639_2_BIBL
water	10:42	0:0	6	AV_LANG_ISO639_2_BIBL
water	10:64	0:0	4	)
stmts	11:8	11:14	3	
op	11:8	0:0	4	*
water	11:9	0:0	4	p
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
water	12:4	0:0	2	p
op	12:6	0:0	2	=
water	12:8	0:0	2	key
water	12:11	0:0	2	;
while	13:4	19:4	2	(* p)
cond	13:11	13:12	3	* p
op	13:11	0:0	4	*
water	13:12	0:0	4	p
stmts	13:15	19:4	3	
water	13:15	0:0	4	{
if	14:8	15:20	4	(* p == ' ')
cond	14:12	14:18	5	* p == ' '
op	14:12	0:0	6	*
water	14:13	0:0	6	p
op	14:15	0:0	6	==
water	14:18	0:0	6	' '
stmts	15:12	15:20	5	
op	15:12	0:0	6	*
water	15:13	0:0	6	p
op	15:15	0:0	6	=
water	15:17	0:0	6	'_'
water	15:20	0:0	6	;
else	16:8	17:27	4
stmts	16:13	17:27	5	
if	16:13	17:27	6	(* p >= 'a' && * p <= 'z')
cond	16:17	16:36	7	* p >= 'a' && * p <= 'z'
op	16:17	0:0	8	*
water	16:18	0:0	8	p
op	16:20	0:0	8	>=
water	16:23	0:0	8	'a'
op	16:27	0:0	8	&&
op	16:30	0:0	8	*
water	16:31	0:0	8	p
op	16:33	0:0	8	<=
water	16:36	0:0	8	'z'
stmts	17:12	17:27	7	
op	17:12	0:0	8	*
water	17:13	0:0	8	p
op	17:15	0:0	8	-=
water	17:18	0:0	8	'a'
op	17:22	0:0	8	-
water	17:24	0:0	8	'A'
water	17:27	0:0	8	;
water	18:8	0:0	4	p
op	18:9	0:0	4	++
water	18:11	0:0	4	;
water	19:4	0:0	4	}
water	20:4	0:0	2	tag
op	20:8	0:0	2	=
call	20:10	20:56	2	start_ebml_master
arg	20:28	20:30	3	pb
water	20:28	0:0	4	pb
arg	20:32	20:53	3	MATROSKA_ID_SIMPLETAG
water	20:32	0:0	4	MATROSKA_ID_SIMPLETAG
arg	20:55	20:56	3	0
water	20:55	0:0	4	0
water	20:57	0:0	2	;
call	21:4	21:48	2	put_ebml_string
arg	21:20	21:22	3	pb
water	21:20	0:0	4	pb
arg	21:24	21:43	3	MATROSKA_ID_TAGNAME
water	21:24	0:0	4	MATROSKA_ID_TAGNAME
arg	21:45	21:48	3	key
water	21:45	0:0	4	key
water	21:49	0:0	2	;
if	22:4	23:54	2	(lang)
cond	22:8	22:8	3	lang
water	22:8	0:0	4	lang
stmts	23:8	23:54	3	
call	23:8	23:53	4	put_ebml_string
arg	23:24	23:26	5	pb
water	23:24	0:0	6	pb
arg	23:28	23:47	5	MATROSKA_ID_TAGLANG
water	23:28	0:0	6	MATROSKA_ID_TAGLANG
arg	23:49	23:53	5	lang
water	23:49	0:0	6	lang
water	23:54	0:0	4	;
call	24:4	24:55	2	put_ebml_string
arg	24:20	24:22	3	pb
water	24:20	0:0	4	pb
arg	24:24	24:45	3	MATROSKA_ID_TAGSTRING
water	24:24	0:0	4	MATROSKA_ID_TAGSTRING
arg	24:47	24:55	3	t->value
water	24:47	0:0	4	t
op	24:48	0:0	4	->
water	24:50	0:0	4	value
water	24:56	0:0	2	;
call	25:4	25:27	2	end_ebml_master
arg	25:20	25:22	3	pb
water	25:20	0:0	4	pb
arg	25:24	25:27	3	tag
water	25:24	0:0	4	tag
water	25:28	0:0	2	;
call	26:4	26:17	2	av_freep
arg	26:13	26:17	3	&key
op	26:13	0:0	4	&
water	26:14	0:0	4	key
water	26:18	0:0	2	;
return	27:4	27:12	2	0
water	27:11	0:0	3	0

func	1:24	48:0	0	void	yuv2rgb_full_1_c_template
params	2:25	0:0	1	
param	2:26	2:39	2	SwsContext *	c
param	2:41	2:60	2	const int16_t *	buf0
param	3:21	3:43	2	const int16_t *	ubuf[2]
param	3:45	3:67	2	const int16_t *	vbuf[2]
param	4:21	4:41	2	const int16_t *	abuf0
param	4:43	4:56	2	uint8_t *	dest
param	4:58	4:66	2	int	dstW
param	5:21	5:32	2	int	uvalpha
param	5:34	5:39	2	int	y
param	5:41	5:66	2	enum AVPixelFormat	target
param	6:21	6:33	2	int	hasAlpha
stmnts	0:0	47:34	1	
decl	8:4	8:52	2	const int16_t	*ubuf0
op	8:25	0:0	2	=
water	8:27	0:0	2	ubuf
op	8:31	0:0	2	[
water	8:32	0:0	2	0
op	8:33	0:0	2	]
water	8:34	0:0	2	,
decl	8:4	8:52	2	const int16_t	*vbuf0
op	8:43	0:0	2	=
water	8:45	0:0	2	vbuf
op	8:49	0:0	2	[
water	8:50	0:0	2	0
op	8:51	0:0	2	]
decl	9:4	9:9	2	int	i
decl	10:4	10:81	2	int	step
op	10:13	0:0	2	=
water	10:15	0:0	2	(
water	10:16	0:0	2	target
op	10:23	0:0	2	==
water	10:26	0:0	2	AV_PIX_FMT_RGB24
op	10:43	0:0	2	||
water	10:46	0:0	2	target
op	10:53	0:0	2	==
water	10:56	0:0	2	AV_PIX_FMT_BGR24
water	10:72	0:0	2	)
water	10:74	0:0	2	?
water	10:76	0:0	2	3
water	10:78	0:0	2	:
water	10:80	0:0	2	4
decl	11:4	11:20	2	int	err[4]
op	11:15	0:0	2	=
water	11:17	0:0	2	{
water	11:18	0:0	2	0
water	11:19	0:0	2	}
if	12:4	14:16	2	(target == AV_PIX_FMT_BGR4_BYTE || target == AV_PIX_FMT_RGB4_BYTE || target == AV_PIX_FMT_BGR8 || target == AV_PIX_FMT_RGB8)
cond	12:10	13:54	3	target == AV_PIX_FMT_BGR4_BYTE || target == AV_PIX_FMT_RGB4_BYTE || target == AV_PIX_FMT_BGR8 || target == AV_PIX_FMT_RGB8
water	12:10	0:0	4	target
op	12:17	0:0	4	==
water	12:20	0:0	4	AV_PIX_FMT_BGR4_BYTE
op	12:41	0:0	4	||
water	12:44	0:0	4	target
op	12:51	0:0	4	==
water	12:54	0:0	4	AV_PIX_FMT_RGB4_BYTE
op	13:7	0:0	4	||
water	13:10	0:0	4	target
op	13:17	0:0	4	==
water	13:20	0:0	4	AV_PIX_FMT_BGR8
op	13:41	0:0	4	||
water	13:44	0:0	4	target
op	13:51	0:0	4	==
water	13:54	0:0	4	AV_PIX_FMT_RGB8
stmts	14:8	14:16	3	
water	14:8	0:0	4	step
op	14:13	0:0	4	=
water	14:15	0:0	4	1
water	14:16	0:0	4	;
if	15:4	29:4	2	(uvalpha < 2048)
cond	15:8	15:18	3	uvalpha < 2048
water	15:8	0:0	4	uvalpha
op	15:16	0:0	4	<
water	15:18	0:0	4	2048
stmts	15:24	29:4	3	
water	15:24	0:0	4	{
decl	16:8	16:17	4	int	A
op	16:14	0:0	4	=
water	16:16	0:0	4	0
for	17:8	28:8	4	(i = 0 ;i < dstW;i ++)
forinit	17:13	17:18	5	i = 0 ;
water	17:13	0:0	6	i
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:24	5	i < dstW
water	17:20	0:0	6	i
op	17:22	0:0	6	<
water	17:24	0:0	6	dstW
forexpr	17:30	17:31	5	i ++
water	17:30	0:0	6	i
op	17:31	0:0	6	++
stmts	17:35	28:8	5	
water	17:35	0:0	6	{
decl	18:12	18:32	6	int	Y
op	18:18	0:0	6	=
water	18:20	0:0	6	buf0
op	18:24	0:0	6	[
water	18:25	0:0	6	i
op	18:26	0:0	6	]
op	18:28	0:0	6	<<
water	18:31	0:0	6	2
decl	19:12	19:45	6	int	U
op	19:18	0:0	6	=
water	19:20	0:0	6	(
water	19:21	0:0	6	ubuf0
op	19:26	0:0	6	[
water	19:27	0:0	6	i
op	19:28	0:0	6	]
op	19:30	0:0	6	-
water	19:32	0:0	6	(
water	19:33	0:0	6	128
op	19:36	0:0	6	<<
water	19:38	0:0	6	7
water	19:39	0:0	6	)
water	19:40	0:0	6	)
op	19:42	0:0	6	*
water	19:44	0:0	6	4
decl	20:12	20:45	6	int	V
op	20:18	0:0	6	=
water	20:20	0:0	6	(
water	20:21	0:0	6	vbuf0
op	20:26	0:0	6	[
water	20:27	0:0	6	i
op	20:28	0:0	6	]
op	20:30	0:0	6	-
water	20:32	0:0	6	(
water	20:33	0:0	6	128
op	20:36	0:0	6	<<
water	20:38	0:0	6	7
water	20:39	0:0	6	)
water	20:40	0:0	6	)
op	20:42	0:0	6	*
water	20:44	0:0	6	4
if	21:12	25:12	6	(hasAlpha)
cond	21:16	21:16	7	hasAlpha
water	21:16	0:0	8	hasAlpha
stmts	21:26	25:12	7	
water	21:26	0:0	8	{
water	22:16	0:0	8	A
op	22:18	0:0	8	=
water	22:20	0:0	8	(
water	22:21	0:0	8	abuf0
op	22:26	0:0	8	[
water	22:27	0:0	8	i
op	22:28	0:0	8	]
op	22:30	0:0	8	+
water	22:32	0:0	8	64
water	22:34	0:0	8	)
op	22:36	0:0	8	>>
water	22:39	0:0	8	7
water	22:40	0:0	8	;
if	23:16	24:40	8	(A & 0 x100)
cond	23:20	23:25	9	A & 0 x100
water	23:20	0:0	10	A
op	23:22	0:0	10	&
water	23:24	0:0	10	0
water	23:25	0:0	10	x100
stmts	24:20	24:40	9	
water	24:20	0:0	10	A
op	24:22	0:0	10	=
call	24:24	24:39	10	av_clip_uint8
arg	24:38	24:39	11	A
water	24:38	0:0	12	A
water	24:40	0:0	10	;
water	25:12	0:0	8	}
call	26:12	26:79	6	yuv2rgb_write_full
arg	26:31	26:32	7	c
water	26:31	0:0	8	c
arg	26:34	26:38	7	dest
water	26:34	0:0	8	dest
arg	26:40	26:41	7	i
water	26:40	0:0	8	i
arg	26:43	26:44	7	Y
water	26:43	0:0	8	Y
arg	26:46	26:47	7	A
water	26:46	0:0	8	A
arg	26:49	26:50	7	U
water	26:49	0:0	8	U
arg	26:52	26:53	7	V
water	26:52	0:0	8	V
arg	26:55	26:56	7	y
water	26:55	0:0	8	y
arg	26:58	26:64	7	target
water	26:58	0:0	8	target
arg	26:66	26:74	7	hasAlpha
water	26:66	0:0	8	hasAlpha
arg	26:76	26:79	7	err
water	26:76	0:0	8	err
water	26:80	0:0	6	;
water	27:12	0:0	6	dest
op	27:17	0:0	6	+=
water	27:20	0:0	6	step
water	27:24	0:0	6	;
water	28:8	0:0	6	}
water	29:4	0:0	4	}
else	29:6	44:4	2
stmts	29:11	44:4	3	
water	29:11	0:0	4	{
decl	30:8	30:56	4	const int16_t	*ubuf1
op	30:29	0:0	4	=
water	30:31	0:0	4	ubuf
op	30:35	0:0	4	[
water	30:36	0:0	4	1
op	30:37	0:0	4	]
water	30:38	0:0	4	,
decl	30:8	30:56	4	const int16_t	*vbuf1
op	30:47	0:0	4	=
water	30:49	0:0	4	vbuf
op	30:53	0:0	4	[
water	30:54	0:0	4	1
op	30:55	0:0	4	]
decl	31:8	31:17	4	int	A
op	31:14	0:0	4	=
water	31:16	0:0	4	0
for	32:8	43:8	4	(i = 0 ;i < dstW;i ++)
forinit	32:13	32:18	5	i = 0 ;
water	32:13	0:0	6	i
op	32:15	0:0	6	=
water	32:17	0:0	6	0
water	32:18	0:0	6	;
cond	32:20	32:24	5	i < dstW
water	32:20	0:0	6	i
op	32:22	0:0	6	<
water	32:24	0:0	6	dstW
forexpr	32:30	32:31	5	i ++
water	32:30	0:0	6	i
op	32:31	0:0	6	++
stmts	32:35	43:8	5	
water	32:35	0:0	6	{
decl	33:12	33:32	6	int	Y
op	33:18	0:0	6	=
water	33:20	0:0	6	buf0
op	33:24	0:0	6	[
water	33:25	0:0	6	i
op	33:26	0:0	6	]
op	33:28	0:0	6	<<
water	33:31	0:0	6	2
decl	34:12	34:57	6	int	U
op	34:18	0:0	6	=
water	34:20	0:0	6	(
water	34:21	0:0	6	ubuf0
op	34:26	0:0	6	[
water	34:27	0:0	6	i
op	34:28	0:0	6	]
op	34:30	0:0	6	+
water	34:32	0:0	6	ubuf1
op	34:37	0:0	6	[
water	34:38	0:0	6	i
op	34:39	0:0	6	]
op	34:41	0:0	6	-
water	34:43	0:0	6	(
water	34:44	0:0	6	128
op	34:47	0:0	6	<<
water	34:49	0:0	6	8
water	34:50	0:0	6	)
water	34:51	0:0	6	)
op	34:53	0:0	6	<<
water	34:56	0:0	6	1
decl	35:12	35:57	6	int	V
op	35:18	0:0	6	=
water	35:20	0:0	6	(
water	35:21	0:0	6	vbuf0
op	35:26	0:0	6	[
water	35:27	0:0	6	i
op	35:28	0:0	6	]
op	35:30	0:0	6	+
water	35:32	0:0	6	vbuf1
op	35:37	0:0	6	[
water	35:38	0:0	6	i
op	35:39	0:0	6	]
op	35:41	0:0	6	-
water	35:43	0:0	6	(
water	35:44	0:0	6	128
op	35:47	0:0	6	<<
water	35:49	0:0	6	8
water	35:50	0:0	6	)
water	35:51	0:0	6	)
op	35:53	0:0	6	<<
water	35:56	0:0	6	1
if	36:12	40:12	6	(hasAlpha)
cond	36:16	36:16	7	hasAlpha
water	36:16	0:0	8	hasAlpha
stmts	36:26	40:12	7	
water	36:26	0:0	8	{
water	37:16	0:0	8	A
op	37:18	0:0	8	=
water	37:20	0:0	8	(
water	37:21	0:0	8	abuf0
op	37:26	0:0	8	[
water	37:27	0:0	8	i
op	37:28	0:0	8	]
op	37:30	0:0	8	+
water	37:32	0:0	8	64
water	37:34	0:0	8	)
op	37:36	0:0	8	>>
water	37:39	0:0	8	7
water	37:40	0:0	8	;
if	38:16	39:40	8	(A & 0 x100)
cond	38:20	38:25	9	A & 0 x100
water	38:20	0:0	10	A
op	38:22	0:0	10	&
water	38:24	0:0	10	0
water	38:25	0:0	10	x100
stmts	39:20	39:40	9	
water	39:20	0:0	10	A
op	39:22	0:0	10	=
call	39:24	39:39	10	av_clip_uint8
arg	39:38	39:39	11	A
water	39:38	0:0	12	A
water	39:40	0:0	10	;
water	40:12	0:0	8	}
call	41:12	41:79	6	yuv2rgb_write_full
arg	41:31	41:32	7	c
water	41:31	0:0	8	c
arg	41:34	41:38	7	dest
water	41:34	0:0	8	dest
arg	41:40	41:41	7	i
water	41:40	0:0	8	i
arg	41:43	41:44	7	Y
water	41:43	0:0	8	Y
arg	41:46	41:47	7	A
water	41:46	0:0	8	A
arg	41:49	41:50	7	U
water	41:49	0:0	8	U
arg	41:52	41:53	7	V
water	41:52	0:0	8	V
arg	41:55	41:56	7	y
water	41:55	0:0	8	y
arg	41:58	41:64	7	target
water	41:58	0:0	8	target
arg	41:66	41:74	7	hasAlpha
water	41:66	0:0	8	hasAlpha
arg	41:76	41:79	7	err
water	41:76	0:0	8	err
water	41:80	0:0	6	;
water	42:12	0:0	6	dest
op	42:17	0:0	6	+=
water	42:20	0:0	6	step
water	42:24	0:0	6	;
water	43:8	0:0	6	}
water	44:4	0:0	4	}
water	45:4	0:0	2	c
op	45:5	0:0	2	->
water	45:7	0:0	2	dither_error
op	45:19	0:0	2	[
water	45:20	0:0	2	0
op	45:21	0:0	2	]
op	45:22	0:0	2	[
water	45:23	0:0	2	i
op	45:24	0:0	2	]
op	45:26	0:0	2	=
water	45:28	0:0	2	err
op	45:31	0:0	2	[
water	45:32	0:0	2	0
op	45:33	0:0	2	]
water	45:34	0:0	2	;
water	46:4	0:0	2	c
op	46:5	0:0	2	->
water	46:7	0:0	2	dither_error
op	46:19	0:0	2	[
water	46:20	0:0	2	1
op	46:21	0:0	2	]
op	46:22	0:0	2	[
water	46:23	0:0	2	i
op	46:24	0:0	2	]
op	46:26	0:0	2	=
water	46:28	0:0	2	err
op	46:31	0:0	2	[
water	46:32	0:0	2	1
op	46:33	0:0	2	]
water	46:34	0:0	2	;
water	47:4	0:0	2	c
op	47:5	0:0	2	->
water	47:7	0:0	2	dither_error
op	47:19	0:0	2	[
water	47:20	0:0	2	2
op	47:21	0:0	2	]
op	47:22	0:0	2	[
water	47:23	0:0	2	i
op	47:24	0:0	2	]
op	47:26	0:0	2	=
water	47:28	0:0	2	err
op	47:31	0:0	2	[
water	47:32	0:0	2	2
op	47:33	0:0	2	]
water	47:34	0:0	2	;

func	1:0	32:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:13	2	void
stmnts	0:0	31:12	1	
decl	3:4	3:24	2	enum AVPixelFormat	f
decl	4:4	4:34	2	const AVPixFmtDescriptor	*desc
decl	5:4	5:22	2	FFDrawContext	draw
decl	6:4	6:21	2	FFDrawColor	color
decl	7:4	7:12	2	int	r
water	7:9	0:0	2	,
decl	7:4	7:12	2	int	i
for	8:4	30:4	2	(f = 0 ;av_pix_fmt_desc_get (f );f ++)
forinit	8:9	8:14	3	f = 0 ;
water	8:9	0:0	4	f
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:37	3	av_pix_fmt_desc_get (f )
call	8:16	8:37	4	av_pix_fmt_desc_get
arg	8:36	8:37	5	f
water	8:36	0:0	6	f
forexpr	8:40	8:41	3	f ++
water	8:40	0:0	4	f
op	8:41	0:0	4	++
stmts	8:45	30:4	3	
water	8:45	0:0	4	{
water	9:8	0:0	4	desc
op	9:13	0:0	4	=
call	9:15	9:36	4	av_pix_fmt_desc_get
arg	9:35	9:36	5	f
water	9:35	0:0	6	f
water	9:37	0:0	4	;
if	10:8	11:20	4	(! desc -> name)
cond	10:12	10:19	5	! desc -> name
op	10:12	0:0	6	!
water	10:13	0:0	6	desc
op	10:17	0:0	6	->
water	10:19	0:0	6	name
stmts	11:12	11:20	5	
continue	11:12	11:20	6	
call	12:8	13:49	4	printf
arg	12:15	12:33	5	"Testing %s...%*s"
water	12:15	0:0	6	"Testing %s...%*s"
arg	12:35	12:45	5	desc->name
water	12:35	0:0	6	desc
op	12:39	0:0	6	->
water	12:41	0:0	6	name
arg	13:15	13:45	5	(int)(16-strlen(desc->name))
call	13:15	13:44	6	(int)
arg	13:21	13:44	7	16-strlen(desc->name)
water	13:21	0:0	8	16
op	13:24	0:0	8	-
call	13:26	13:43	8	strlen
arg	13:33	13:43	9	desc->name
water	13:33	0:0	10	desc
op	13:37	0:0	10	->
water	13:39	0:0	10	name
arg	13:47	13:49	5	""
water	13:47	0:0	6	""
water	13:50	0:0	4	;
water	14:8	0:0	4	r
op	14:10	0:0	4	=
call	14:12	14:36	4	ff_draw_init
arg	14:25	14:30	5	&draw
op	14:25	0:0	6	&
water	14:26	0:0	6	draw
arg	14:32	14:33	5	f
water	14:32	0:0	6	f
arg	14:35	14:36	5	0
water	14:35	0:0	6	0
water	14:37	0:0	4	;
if	15:8	20:8	4	(r < 0)
cond	15:12	15:16	5	r < 0
water	15:12	0:0	6	r
op	15:14	0:0	6	<
water	15:16	0:0	6	0
stmts	15:19	20:8	5	
water	15:19	0:0	6	{
decl	16:12	16:25	6	char	buf[128]
call	17:12	17:43	6	av_strerror
arg	17:24	17:25	7	r
water	17:24	0:0	8	r
arg	17:27	17:30	7	buf
water	17:27	0:0	8	buf
arg	17:32	17:43	7	sizeof(buf)
op	17:32	0:0	8	sizeof
water	17:38	0:0	8	(
water	17:39	0:0	8	buf
water	17:42	0:0	8	)
water	17:44	0:0	6	;
call	18:12	18:34	6	printf
arg	18:19	18:29	7	"no: %s\n"
water	18:19	0:0	8	"no: %s\n"
arg	18:31	18:34	7	buf
water	18:31	0:0	8	buf
water	18:35	0:0	6	;
continue	19:12	19:20	6	
water	20:8	0:0	6	}
call	21:8	21:63	4	ff_draw_color
arg	21:22	21:27	5	&draw
op	21:22	0:0	6	&
water	21:23	0:0	6	draw
arg	21:29	21:35	5	&color
op	21:29	0:0	6	&
water	21:30	0:0	6	color
arg	21:37	21:63	5	(uint8_t[]){1,0,0,1}
water	21:37	0:0	6	(
water	21:38	0:0	6	uint8_t
op	21:45	0:0	6	[
op	21:46	0:0	6	]
water	21:47	0:0	6	)
water	21:49	0:0	6	{
water	21:51	0:0	6	1
water	21:52	0:0	6	,
water	21:54	0:0	6	0
water	21:55	0:0	6	,
water	21:57	0:0	6	0
water	21:58	0:0	6	,
water	21:60	0:0	6	1
water	21:62	0:0	6	}
water	21:64	0:0	4	;
for	22:8	24:21	4	(i = 0 ;i < sizeof ( color );i ++)
forinit	22:13	22:18	5	i = 0 ;
water	22:13	0:0	6	i
op	22:15	0:0	6	=
water	22:17	0:0	6	0
water	22:18	0:0	6	;
cond	22:20	22:36	5	i < sizeof ( color )
water	22:20	0:0	6	i
op	22:22	0:0	6	<
op	22:24	0:0	6	sizeof
water	22:30	0:0	6	(
water	22:31	0:0	6	color
water	22:36	0:0	6	)
forexpr	22:39	22:40	5	i ++
water	22:39	0:0	6	i
op	22:40	0:0	6	++
stmts	23:12	24:21	5	
if	23:12	24:21	6	(( ( uint8_t * ) & color ) [ i ] != 128)
cond	23:16	23:42	7	( ( uint8_t * ) & color ) [ i ] != 128
water	23:16	0:0	8	(
water	23:17	0:0	8	(
water	23:18	0:0	8	uint8_t
op	23:26	0:0	8	*
water	23:27	0:0	8	)
op	23:28	0:0	8	&
water	23:29	0:0	8	color
water	23:34	0:0	8	)
op	23:35	0:0	8	[
water	23:36	0:0	8	i
op	23:37	0:0	8	]
op	23:39	0:0	8	!=
water	23:42	0:0	8	128
stmts	24:16	24:21	7	
break	24:16	24:21	8	
if	25:8	28:8	4	(i == sizeof ( color ))
cond	25:12	25:29	5	i == sizeof ( color )
water	25:12	0:0	6	i
op	25:14	0:0	6	==
op	25:17	0:0	6	sizeof
water	25:23	0:0	6	(
water	25:24	0:0	6	color
water	25:29	0:0	6	)
stmts	25:32	28:8	5	
water	25:32	0:0	6	{
call	26:12	26:37	6	printf
arg	26:19	26:37	7	"fallback color\n"
water	26:19	0:0	8	"fallback color\n"
water	26:38	0:0	6	;
continue	27:12	27:20	6	
water	28:8	0:0	6	}
call	29:8	29:21	4	printf
arg	29:15	29:21	5	"ok\n"
water	29:15	0:0	6	"ok\n"
water	29:22	0:0	4	;
water	30:4	0:0	4	}
return	31:4	31:12	2	0
water	31:11	0:0	3	0

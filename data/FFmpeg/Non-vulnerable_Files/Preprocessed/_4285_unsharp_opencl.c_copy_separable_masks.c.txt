func	1:0	29:0	0	static int	copy_separable_masks
params	1:31	0:0	1	
param	1:32	1:48	2	cl_mem	cl_mask_x
param	1:50	1:66	2	cl_mem	cl_mask_y
param	1:68	1:78	2	int	step_x
param	1:80	1:90	2	int	step_y
stmnts	0:0	28:14	1	
decl	3:4	3:15	2	int	ret
op	3:12	0:0	2	=
water	3:14	0:0	2	0
decl	4:4	4:29	2	uint32_t	*mask_x
water	4:20	0:0	2	,
decl	4:4	4:29	2	uint32_t	*mask_y
decl	5:4	5:60	2	size_t	size_mask_x
op	5:23	0:0	2	=
op	5:25	0:0	2	sizeof
water	5:31	0:0	2	(
water	5:32	0:0	2	uint32_t
water	5:40	0:0	2	)
op	5:42	0:0	2	*
water	5:44	0:0	2	(
water	5:45	0:0	2	2
op	5:47	0:0	2	*
water	5:49	0:0	2	step_x
op	5:56	0:0	2	+
water	5:58	0:0	2	1
water	5:59	0:0	2	)
decl	6:4	6:60	2	size_t	size_mask_y
op	6:23	0:0	2	=
op	6:25	0:0	2	sizeof
water	6:31	0:0	2	(
water	6:32	0:0	2	uint32_t
water	6:40	0:0	2	)
op	6:42	0:0	2	*
water	6:44	0:0	2	(
water	6:45	0:0	2	2
op	6:47	0:0	2	*
water	6:49	0:0	2	step_y
op	6:56	0:0	2	+
water	6:58	0:0	2	1
water	6:59	0:0	2	)
water	7:4	0:0	2	mask_x
op	7:11	0:0	2	=
call	7:13	7:62	2	av_mallocz_array
arg	7:30	7:44	3	2*step_x+1
water	7:30	0:0	4	2
op	7:32	0:0	4	*
water	7:34	0:0	4	step_x
op	7:41	0:0	4	+
water	7:43	0:0	4	1
arg	7:46	7:62	3	sizeof(uint32_t)
op	7:46	0:0	4	sizeof
water	7:52	0:0	4	(
water	7:53	0:0	4	uint32_t
water	7:61	0:0	4	)
water	7:63	0:0	2	;
if	8:4	11:4	2	(! mask_x)
cond	8:8	8:9	3	! mask_x
op	8:8	0:0	4	!
water	8:9	0:0	4	mask_x
stmts	8:17	11:4	3	
water	8:17	0:0	4	{
water	9:8	0:0	4	ret
op	9:12	0:0	4	=
call	9:14	9:28	4	AVERROR
arg	9:22	9:28	5	ENOMEM
water	9:22	0:0	6	ENOMEM
water	9:29	0:0	4	;
goto	10:8	10:16	4	end
water	10:13	0:0	5	end
water	11:4	0:0	4	}
water	12:4	0:0	2	mask_y
op	12:11	0:0	2	=
call	12:13	12:62	2	av_mallocz_array
arg	12:30	12:44	3	2*step_y+1
water	12:30	0:0	4	2
op	12:32	0:0	4	*
water	12:34	0:0	4	step_y
op	12:41	0:0	4	+
water	12:43	0:0	4	1
arg	12:46	12:62	3	sizeof(uint32_t)
op	12:46	0:0	4	sizeof
water	12:52	0:0	4	(
water	12:53	0:0	4	uint32_t
water	12:61	0:0	4	)
water	12:63	0:0	2	;
if	13:4	16:4	2	(! mask_y)
cond	13:8	13:9	3	! mask_y
op	13:8	0:0	4	!
water	13:9	0:0	4	mask_y
stmts	13:17	16:4	3	
water	13:17	0:0	4	{
water	14:8	0:0	4	ret
op	14:12	0:0	4	=
call	14:14	14:28	4	AVERROR
arg	14:22	14:28	5	ENOMEM
water	14:22	0:0	6	ENOMEM
water	14:29	0:0	4	;
goto	15:8	15:16	4	end
water	15:13	0:0	5	end
water	16:4	0:0	4	}
water	17:4	0:0	2	ret
op	17:8	0:0	2	=
call	17:10	17:37	2	compute_mask
arg	17:23	17:29	3	step_x
water	17:23	0:0	4	step_x
arg	17:31	17:37	3	mask_x
water	17:31	0:0	4	mask_x
water	17:38	0:0	2	;
if	18:4	19:16	2	(ret < 0)
cond	18:8	18:14	3	ret < 0
water	18:8	0:0	4	ret
op	18:12	0:0	4	<
water	18:14	0:0	4	0
stmts	19:8	19:16	3	
goto	19:8	19:16	4	end
water	19:13	0:0	5	end
water	20:4	0:0	2	ret
op	20:8	0:0	2	=
call	20:10	20:37	2	compute_mask
arg	20:23	20:29	3	step_y
water	20:23	0:0	4	step_y
arg	20:31	20:37	3	mask_y
water	20:31	0:0	4	mask_y
water	20:38	0:0	2	;
if	21:4	22:16	2	(ret < 0)
cond	21:8	21:14	3	ret < 0
water	21:8	0:0	4	ret
op	21:12	0:0	4	<
water	21:14	0:0	4	0
stmts	22:8	22:16	3	
goto	22:8	22:16	4	end
water	22:13	0:0	5	end
water	23:4	0:0	2	ret
op	23:8	0:0	2	=
call	23:10	23:74	2	av_opencl_buffer_write
arg	23:33	23:42	3	cl_mask_x
water	23:33	0:0	4	cl_mask_x
arg	23:44	23:61	3	(uint8_t*)mask_x
water	23:44	0:0	4	(
water	23:45	0:0	4	uint8_t
op	23:53	0:0	4	*
water	23:54	0:0	4	)
water	23:55	0:0	4	mask_x
arg	23:63	23:74	3	size_mask_x
water	23:63	0:0	4	size_mask_x
water	23:75	0:0	2	;
water	24:4	0:0	2	ret
op	24:8	0:0	2	=
call	24:10	24:74	2	av_opencl_buffer_write
arg	24:33	24:42	3	cl_mask_y
water	24:33	0:0	4	cl_mask_y
arg	24:44	24:61	3	(uint8_t*)mask_y
water	24:44	0:0	4	(
water	24:45	0:0	4	uint8_t
op	24:53	0:0	4	*
water	24:54	0:0	4	)
water	24:55	0:0	4	mask_y
arg	24:63	24:74	3	size_mask_y
water	24:63	0:0	4	size_mask_y
water	24:75	0:0	2	;
label	25:0	25:3	2	end :
call	26:4	26:20	2	av_freep
arg	26:13	26:20	3	&mask_x
op	26:13	0:0	4	&
water	26:14	0:0	4	mask_x
water	26:21	0:0	2	;
call	27:4	27:20	2	av_freep
arg	27:13	27:20	3	&mask_y
op	27:13	0:0	4	&
water	27:14	0:0	4	mask_y
water	27:21	0:0	2	;
return	28:4	28:14	2	ret
water	28:11	0:0	3	ret

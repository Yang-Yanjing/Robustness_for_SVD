func	1:0	20:0	0	static int	filter_slice_luma
params	1:28	0:0	1	
param	1:29	1:49	2	AVFilterContext *	ctx
param	1:51	1:60	2	void *	arg
param	1:62	1:71	2	int	jobnr
param	2:29	2:40	2	int	nb_jobs
stmnts	0:0	19:12	1	
decl	4:4	4:30	2	FadeContext	*s
op	4:19	0:0	2	=
water	4:21	0:0	2	ctx
op	4:24	0:0	2	->
water	4:26	0:0	2	priv
decl	5:4	5:24	2	AVFrame	*frame
op	5:19	0:0	2	=
water	5:21	0:0	2	arg
decl	6:4	6:59	2	int	slice_start
op	6:20	0:0	2	=
water	6:22	0:0	2	(
water	6:23	0:0	2	frame
op	6:28	0:0	2	->
water	6:30	0:0	2	height
op	6:37	0:0	2	*
water	6:40	0:0	2	jobnr
water	6:48	0:0	2	)
op	6:50	0:0	2	/
water	6:52	0:0	2	nb_jobs
decl	7:4	7:59	2	int	slice_end
op	7:20	0:0	2	=
water	7:22	0:0	2	(
water	7:23	0:0	2	frame
op	7:28	0:0	2	->
water	7:30	0:0	2	height
op	7:37	0:0	2	*
water	7:39	0:0	2	(
water	7:40	0:0	2	jobnr
op	7:45	0:0	2	+
water	7:46	0:0	2	1
water	7:47	0:0	2	)
water	7:48	0:0	2	)
op	7:50	0:0	2	/
water	7:52	0:0	2	nb_jobs
decl	8:4	8:12	2	int	i
water	8:9	0:0	2	,
decl	8:4	8:12	2	int	j
for	9:4	18:4	2	(i = slice_start ;i < slice_end;i ++)
forinit	9:9	9:24	3	i = slice_start ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	slice_start
water	9:24	0:0	4	;
cond	9:26	9:30	3	i < slice_end
water	9:26	0:0	4	i
op	9:28	0:0	4	<
water	9:30	0:0	4	slice_end
forexpr	9:41	9:42	3	i ++
water	9:41	0:0	4	i
op	9:42	0:0	4	++
stmts	9:46	18:4	3	
water	9:46	0:0	4	{
decl	10:8	10:60	4	uint8_t	*p
op	10:19	0:0	4	=
water	10:21	0:0	4	frame
op	10:26	0:0	4	->
water	10:28	0:0	4	data
op	10:32	0:0	4	[
water	10:33	0:0	4	0
op	10:34	0:0	4	]
op	10:36	0:0	4	+
water	10:38	0:0	4	i
op	10:40	0:0	4	*
water	10:42	0:0	4	frame
op	10:47	0:0	4	->
water	10:49	0:0	4	linesize
op	10:57	0:0	4	[
water	10:58	0:0	4	0
op	10:59	0:0	4	]
for	11:8	17:8	4	(j = 0 ;j < frame -> width * s -> bpp;j ++)
forinit	11:13	11:18	5	j = 0 ;
water	11:13	0:0	6	j
op	11:15	0:0	6	=
water	11:17	0:0	6	0
water	11:18	0:0	6	;
cond	11:20	11:42	5	j < frame -> width * s -> bpp
water	11:20	0:0	6	j
op	11:22	0:0	6	<
water	11:24	0:0	6	frame
op	11:29	0:0	6	->
water	11:31	0:0	6	width
op	11:37	0:0	6	*
water	11:39	0:0	6	s
op	11:40	0:0	6	->
water	11:42	0:0	6	bpp
forexpr	11:47	11:48	5	j ++
water	11:47	0:0	6	j
op	11:48	0:0	6	++
stmts	11:52	17:8	5	
water	11:52	0:0	6	{
op	15:12	0:0	6	*
water	15:13	0:0	6	p
op	15:15	0:0	6	=
water	15:17	0:0	6	(
water	15:18	0:0	6	(
op	15:19	0:0	6	*
water	15:20	0:0	6	p
op	15:22	0:0	6	-
water	15:24	0:0	6	s
op	15:25	0:0	6	->
water	15:27	0:0	6	black_level
water	15:38	0:0	6	)
op	15:40	0:0	6	*
water	15:42	0:0	6	s
op	15:43	0:0	6	->
water	15:45	0:0	6	factor
op	15:52	0:0	6	+
water	15:54	0:0	6	s
op	15:55	0:0	6	->
water	15:57	0:0	6	black_level_scaled
water	15:75	0:0	6	)
op	15:77	0:0	6	>>
water	15:80	0:0	6	16
water	15:82	0:0	6	;
water	16:12	0:0	6	p
op	16:13	0:0	6	++
water	16:15	0:0	6	;
water	17:8	0:0	6	}
water	18:4	0:0	4	}
return	19:4	19:12	2	0
water	19:11	0:0	3	0

func	2:15	10:0	0	int	init
params	2:23	0:0	1	
param	2:24	2:44	2	AVFilterContext *	ctx
stmnts	0:0	9:12	1	
decl	4:4	4:48	2	DynamicAudioNormalizerContext	*s
op	4:37	0:0	2	=
water	4:39	0:0	2	ctx
op	4:42	0:0	2	->
water	4:44	0:0	2	priv
if	5:4	8:4	2	(! ( s -> filter_size & 1 ))
cond	5:8	5:28	3	! ( s -> filter_size & 1 )
op	5:8	0:0	4	!
water	5:9	0:0	4	(
water	5:10	0:0	4	s
op	5:11	0:0	4	->
water	5:13	0:0	4	filter_size
op	5:25	0:0	4	&
water	5:27	0:0	4	1
water	5:28	0:0	4	)
stmts	5:31	8:4	3	
water	5:31	0:0	4	{
call	6:8	6:102	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	6:34	6:86	5	"filter size %d is invalid. Must be an odd value.\n"
water	6:34	0:0	6	"filter size %d is invalid. Must be an odd value.\n"
arg	6:88	6:102	5	s->filter_size
water	6:88	0:0	6	s
op	6:89	0:0	6	->
water	6:91	0:0	6	filter_size
water	6:103	0:0	4	;
return	7:8	7:30	4	AVERROR(EINVAL)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	EINVAL
water	7:23	0:0	7	EINVAL
water	8:4	0:0	4	}
return	9:4	9:12	2	0
water	9:11	0:0	3	0

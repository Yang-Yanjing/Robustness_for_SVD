func	1:0	17:0	0	static int	get_fmt_score
params	1:24	0:0	1	
param	1:25	1:52	2	enum AVSampleFormat	dst_fmt
param	1:54	1:81	2	enum AVSampleFormat	src_fmt
stmnts	0:0	16:16	1	
decl	3:4	3:17	2	int	score
op	3:14	0:0	2	=
water	3:16	0:0	2	0
if	4:4	5:16	2	(av_sample_fmt_is_planar (dst_fmt ) !=av_sample_fmt_is_planar (src_fmt ))
cond	4:8	4:75	3	av_sample_fmt_is_planar (dst_fmt ) !=av_sample_fmt_is_planar (src_fmt )
call	4:8	4:39	4	av_sample_fmt_is_planar
arg	4:32	4:39	5	dst_fmt
water	4:32	0:0	6	dst_fmt
op	4:41	0:0	4	!=
call	4:44	4:75	4	av_sample_fmt_is_planar
arg	4:68	4:75	5	src_fmt
water	4:68	0:0	6	src_fmt
stmts	5:8	5:16	3	
water	5:8	0:0	4	score
op	5:14	0:0	4	++
water	5:16	0:0	4	;
if	6:4	8:4	2	(av_get_bytes_per_sample (dst_fmt ) <av_get_bytes_per_sample (src_fmt ))
cond	6:8	6:74	3	av_get_bytes_per_sample (dst_fmt ) <av_get_bytes_per_sample (src_fmt )
call	6:8	6:39	4	av_get_bytes_per_sample
arg	6:32	6:39	5	dst_fmt
water	6:32	0:0	6	dst_fmt
op	6:41	0:0	4	<
call	6:43	6:74	4	av_get_bytes_per_sample
arg	6:67	6:74	5	src_fmt
water	6:67	0:0	6	src_fmt
stmts	6:77	8:4	3	
water	6:77	0:0	4	{
water	7:8	0:0	4	score
op	7:14	0:0	4	+=
water	7:17	0:0	4	100
op	7:21	0:0	4	*
water	7:23	0:0	4	(
call	7:24	7:55	4	av_get_bytes_per_sample
arg	7:48	7:55	5	src_fmt
water	7:48	0:0	6	src_fmt
op	7:57	0:0	4	-
call	7:59	7:90	4	av_get_bytes_per_sample
arg	7:83	7:90	5	dst_fmt
water	7:83	0:0	6	dst_fmt
water	7:91	0:0	4	)
water	7:92	0:0	4	;
water	8:4	0:0	4	}
else	8:5	9:92	2
stmts	9:8	9:92	3	
water	9:8	0:0	4	score
op	9:14	0:0	4	+=
water	9:17	0:0	4	10
op	9:21	0:0	4	*
water	9:23	0:0	4	(
call	9:24	9:55	4	av_get_bytes_per_sample
arg	9:48	9:55	5	dst_fmt
water	9:48	0:0	6	dst_fmt
op	9:57	0:0	4	-
call	9:59	9:90	4	av_get_bytes_per_sample
arg	9:83	9:90	5	src_fmt
water	9:83	0:0	6	src_fmt
water	9:91	0:0	4	)
water	9:92	0:0	4	;
if	10:4	12:19	2	(av_get_packed_sample_fmt (dst_fmt ) == AV_SAMPLE_FMT_S32 &&av_get_packed_sample_fmt (src_fmt ) == AV_SAMPLE_FMT_FLT)
cond	10:8	11:45	3	av_get_packed_sample_fmt (dst_fmt ) == AV_SAMPLE_FMT_S32 &&av_get_packed_sample_fmt (src_fmt ) == AV_SAMPLE_FMT_FLT
call	10:8	10:40	4	av_get_packed_sample_fmt
arg	10:33	10:40	5	dst_fmt
water	10:33	0:0	6	dst_fmt
op	10:42	0:0	4	==
water	10:45	0:0	4	AV_SAMPLE_FMT_S32
op	10:63	0:0	4	&&
call	11:8	11:40	4	av_get_packed_sample_fmt
arg	11:33	11:40	5	src_fmt
water	11:33	0:0	6	src_fmt
op	11:42	0:0	4	==
water	11:45	0:0	4	AV_SAMPLE_FMT_FLT
stmts	12:8	12:19	3	
water	12:8	0:0	4	score
op	12:14	0:0	4	+=
water	12:17	0:0	4	20
water	12:19	0:0	4	;
if	13:4	15:18	2	(av_get_packed_sample_fmt (dst_fmt ) == AV_SAMPLE_FMT_FLT &&av_get_packed_sample_fmt (src_fmt ) == AV_SAMPLE_FMT_S32)
cond	13:8	14:45	3	av_get_packed_sample_fmt (dst_fmt ) == AV_SAMPLE_FMT_FLT &&av_get_packed_sample_fmt (src_fmt ) == AV_SAMPLE_FMT_S32
call	13:8	13:40	4	av_get_packed_sample_fmt
arg	13:33	13:40	5	dst_fmt
water	13:33	0:0	6	dst_fmt
op	13:42	0:0	4	==
water	13:45	0:0	4	AV_SAMPLE_FMT_FLT
op	13:63	0:0	4	&&
call	14:8	14:40	4	av_get_packed_sample_fmt
arg	14:33	14:40	5	src_fmt
water	14:33	0:0	6	src_fmt
op	14:42	0:0	4	==
water	14:45	0:0	4	AV_SAMPLE_FMT_S32
stmts	15:8	15:18	3	
water	15:8	0:0	4	score
op	15:14	0:0	4	+=
water	15:17	0:0	4	2
water	15:18	0:0	4	;
return	16:4	16:16	2	score
water	16:11	0:0	3	score

func	1:0	11:0	0	static double	clean_mean
params	1:24	0:0	1	
param	1:25	1:39	2	double *	values
param	1:41	1:50	2	int	count
stmnts	0:0	10:35	1	
decl	3:4	3:19	2	double	mean
op	3:16	0:0	2	=
water	3:18	0:0	2	0
decl	4:4	4:23	2	int	cut
op	4:12	0:0	2	=
water	4:14	0:0	2	count
op	4:20	0:0	2	/
water	4:22	0:0	2	5
decl	5:4	5:9	2	int	x
call	6:4	6:51	2	qsort
arg	6:10	6:16	3	values
water	6:10	0:0	4	values
arg	6:18	6:23	3	count
water	6:18	0:0	4	count
arg	6:25	6:39	3	sizeof(double)
op	6:25	0:0	4	sizeof
water	6:31	0:0	4	(
water	6:32	0:0	4	double
water	6:38	0:0	4	)
arg	6:41	6:51	3	(void*)cmp
water	6:41	0:0	4	(
water	6:42	0:0	4	void
op	6:46	0:0	4	*
water	6:47	0:0	4	)
water	6:48	0:0	4	cmp
water	6:52	0:0	2	;
for	7:4	9:4	2	(x = cut ;x < count - cut;x ++)
forinit	7:9	7:16	3	x = cut ;
water	7:9	0:0	4	x
op	7:11	0:0	4	=
water	7:13	0:0	4	cut
water	7:16	0:0	4	;
cond	7:18	7:30	3	x < count - cut
water	7:18	0:0	4	x
op	7:20	0:0	4	<
water	7:22	0:0	4	count
op	7:28	0:0	4	-
water	7:30	0:0	4	cut
forexpr	7:35	7:36	3	x ++
water	7:35	0:0	4	x
op	7:36	0:0	4	++
stmts	7:40	9:4	3	
water	7:40	0:0	4	{
water	8:8	0:0	4	mean
op	8:13	0:0	4	+=
water	8:16	0:0	4	values
op	8:22	0:0	4	[
water	8:23	0:0	4	x
op	8:24	0:0	4	]
water	8:25	0:0	4	;
water	9:4	0:0	4	}
return	10:4	10:35	2	mean/(count-cut*2)
water	10:11	0:0	3	mean
op	10:16	0:0	3	/
water	10:18	0:0	3	(
water	10:19	0:0	3	count
op	10:25	0:0	3	-
water	10:27	0:0	3	cut
op	10:31	0:0	3	*
water	10:33	0:0	3	2
water	10:34	0:0	3	)

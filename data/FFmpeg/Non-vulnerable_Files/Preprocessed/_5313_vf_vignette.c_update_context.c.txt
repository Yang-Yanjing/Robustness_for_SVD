func	1:0	34:0	0	static void	update_context
params	1:26	0:0	1	
param	1:27	1:45	2	VignetteContext *	s
param	1:47	1:67	2	AVFilterLink *	inlink
param	1:69	1:83	2	AVFrame *	frame
stmnts	0:0	33:4	1	
decl	3:4	3:12	2	int	x
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	y
decl	4:4	4:24	2	float	*dst
op	4:15	0:0	2	=
water	4:17	0:0	2	s
op	4:18	0:0	2	->
water	4:20	0:0	2	fmap
decl	5:4	5:39	2	int	dst_linesize
op	5:21	0:0	2	=
water	5:23	0:0	2	s
op	5:24	0:0	2	->
water	5:26	0:0	2	fmap_linesize
if	6:4	10:4	2	(frame)
cond	6:8	6:8	3	frame
water	6:8	0:0	4	frame
stmts	6:15	10:4	3	
water	6:15	0:0	4	{
water	7:8	0:0	4	s
op	7:9	0:0	4	->
water	7:11	0:0	4	var_values
op	7:21	0:0	4	[
water	7:22	0:0	4	VAR_N
op	7:27	0:0	4	]
op	7:31	0:0	4	=
water	7:33	0:0	4	inlink
op	7:39	0:0	4	->
water	7:41	0:0	4	frame_count
water	7:52	0:0	4	;
water	8:8	0:0	4	s
op	8:9	0:0	4	->
water	8:11	0:0	4	var_values
op	8:21	0:0	4	[
water	8:22	0:0	4	VAR_T
op	8:27	0:0	4	]
op	8:31	0:0	4	=
call	8:33	8:67	4	TS2T
arg	8:38	8:48	5	frame->pts
water	8:38	0:0	6	frame
op	8:43	0:0	6	->
water	8:45	0:0	6	pts
arg	8:50	8:67	5	inlink->time_base
water	8:50	0:0	6	inlink
op	8:56	0:0	6	->
water	8:58	0:0	6	time_base
water	8:68	0:0	4	;
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	var_values
op	9:21	0:0	4	[
water	9:22	0:0	4	VAR_PTS
op	9:29	0:0	4	]
op	9:31	0:0	4	=
call	9:33	9:48	4	TS2D
arg	9:38	9:48	5	frame->pts
water	9:38	0:0	6	frame
op	9:43	0:0	6	->
water	9:45	0:0	6	pts
water	9:49	0:0	4	;
water	10:4	0:0	4	}
else	10:6	14:4	2
stmts	10:11	14:4	3	
water	10:11	0:0	4	{
water	11:8	0:0	4	s
op	11:9	0:0	4	->
water	11:11	0:0	4	var_values
op	11:21	0:0	4	[
water	11:22	0:0	4	VAR_N
op	11:27	0:0	4	]
op	11:31	0:0	4	=
water	11:33	0:0	4	NAN
water	11:36	0:0	4	;
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	var_values
op	12:21	0:0	4	[
water	12:22	0:0	4	VAR_T
op	12:27	0:0	4	]
op	12:31	0:0	4	=
water	12:33	0:0	4	NAN
water	12:36	0:0	4	;
water	13:8	0:0	4	s
op	13:9	0:0	4	->
water	13:11	0:0	4	var_values
op	13:21	0:0	4	[
water	13:22	0:0	4	VAR_PTS
op	13:29	0:0	4	]
op	13:31	0:0	4	=
water	13:33	0:0	4	NAN
water	13:36	0:0	4	;
water	14:4	0:0	4	}
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	angle
op	15:13	0:0	2	=
call	15:15	15:63	2	av_expr_eval
arg	15:28	15:42	3	s->angle_pexpr
water	15:28	0:0	4	s
op	15:29	0:0	4	->
water	15:31	0:0	4	angle_pexpr
arg	15:44	15:57	3	s->var_values
water	15:44	0:0	4	s
op	15:45	0:0	4	->
water	15:47	0:0	4	var_values
arg	15:59	15:63	3	NULL
water	15:59	0:0	4	NULL
water	15:64	0:0	2	;
water	16:4	0:0	2	s
op	16:5	0:0	2	->
water	16:7	0:0	2	x0
op	16:10	0:0	2	=
call	16:12	16:57	2	av_expr_eval
arg	16:25	16:36	3	s->x0_pexpr
water	16:25	0:0	4	s
op	16:26	0:0	4	->
water	16:28	0:0	4	x0_pexpr
arg	16:38	16:51	3	s->var_values
water	16:38	0:0	4	s
op	16:39	0:0	4	->
water	16:41	0:0	4	var_values
arg	16:53	16:57	3	NULL
water	16:53	0:0	4	NULL
water	16:58	0:0	2	;
water	17:4	0:0	2	s
op	17:5	0:0	2	->
water	17:7	0:0	2	y0
op	17:10	0:0	2	=
call	17:12	17:57	2	av_expr_eval
arg	17:25	17:36	3	s->y0_pexpr
water	17:25	0:0	4	s
op	17:26	0:0	4	->
water	17:28	0:0	4	y0_pexpr
arg	17:38	17:51	3	s->var_values
water	17:38	0:0	4	s
op	17:39	0:0	4	->
water	17:41	0:0	4	var_values
arg	17:53	17:57	3	NULL
water	17:53	0:0	4	NULL
water	17:58	0:0	2	;
if	18:4	19:38	2	(isnan (s -> x0 ) ||isnan (s -> y0 ) ||isnan (s -> angle ))
cond	18:8	18:54	3	isnan (s -> x0 ) ||isnan (s -> y0 ) ||isnan (s -> angle )
call	18:8	18:19	4	isnan
arg	18:14	18:19	5	s->x0
water	18:14	0:0	6	s
op	18:15	0:0	6	->
water	18:17	0:0	6	x0
op	18:21	0:0	4	||
call	18:24	18:35	4	isnan
arg	18:30	18:35	5	s->y0
water	18:30	0:0	6	s
op	18:31	0:0	6	->
water	18:33	0:0	6	y0
op	18:37	0:0	4	||
call	18:40	18:54	4	isnan
arg	18:46	18:54	5	s->angle
water	18:46	0:0	6	s
op	18:47	0:0	6	->
water	18:49	0:0	6	angle
stmts	19:8	19:38	3	
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	eval_mode
op	19:21	0:0	4	=
water	19:23	0:0	4	EVAL_MODE_FRAME
water	19:38	0:0	4	;
water	20:4	0:0	2	s
op	20:5	0:0	2	->
water	20:7	0:0	2	angle
op	20:13	0:0	2	=
call	20:15	20:43	2	av_clipf
arg	20:24	20:32	3	s->angle
water	20:24	0:0	4	s
op	20:25	0:0	4	->
water	20:27	0:0	4	angle
arg	20:34	20:35	3	0
water	20:34	0:0	4	0
arg	20:37	20:43	3	M_PI_2
water	20:37	0:0	4	M_PI_2
water	20:44	0:0	2	;
if	21:4	27:4	2	(s -> backward)
cond	21:8	21:11	3	s -> backward
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	backward
stmts	21:21	27:4	3	
water	21:21	0:0	4	{
for	22:8	26:8	4	(y = 0 ;y < inlink -> h;y ++)
forinit	22:13	22:18	5	y = 0 ;
water	22:13	0:0	6	y
op	22:15	0:0	6	=
water	22:17	0:0	6	0
water	22:18	0:0	6	;
cond	22:20	22:32	5	y < inlink -> h
water	22:20	0:0	6	y
op	22:22	0:0	6	<
water	22:24	0:0	6	inlink
op	22:30	0:0	6	->
water	22:32	0:0	6	h
forexpr	22:35	22:36	5	y ++
water	22:35	0:0	6	y
op	22:36	0:0	6	++
stmts	22:40	26:8	5	
water	22:40	0:0	6	{
for	23:12	24:57	6	(x = 0 ;x < inlink -> w;x ++)
forinit	23:17	23:22	7	x = 0 ;
water	23:17	0:0	8	x
op	23:19	0:0	8	=
water	23:21	0:0	8	0
water	23:22	0:0	8	;
cond	23:24	23:36	7	x < inlink -> w
water	23:24	0:0	8	x
op	23:26	0:0	8	<
water	23:28	0:0	8	inlink
op	23:34	0:0	8	->
water	23:36	0:0	8	w
forexpr	23:39	23:40	7	x ++
water	23:39	0:0	8	x
op	23:40	0:0	8	++
stmts	24:16	24:57	7	
water	24:16	0:0	8	dst
op	24:19	0:0	8	[
water	24:20	0:0	8	x
op	24:21	0:0	8	]
op	24:23	0:0	8	=
water	24:25	0:0	8	1
op	24:26	0:0	8	.
op	24:28	0:0	8	/
call	24:30	24:56	8	get_natural_factor
arg	24:49	24:50	9	s
water	24:49	0:0	10	s
arg	24:52	24:53	9	x
water	24:52	0:0	10	x
arg	24:55	24:56	9	y
water	24:55	0:0	10	y
water	24:57	0:0	8	;
water	25:12	0:0	6	dst
op	25:16	0:0	6	+=
water	25:19	0:0	6	dst_linesize
water	25:31	0:0	6	;
water	26:8	0:0	6	}
water	27:4	0:0	4	}
else	27:6	33:4	2
stmts	27:11	33:4	3	
water	27:11	0:0	4	{
for	28:8	32:8	4	(y = 0 ;y < inlink -> h;y ++)
forinit	28:13	28:18	5	y = 0 ;
water	28:13	0:0	6	y
op	28:15	0:0	6	=
water	28:17	0:0	6	0
water	28:18	0:0	6	;
cond	28:20	28:32	5	y < inlink -> h
water	28:20	0:0	6	y
op	28:22	0:0	6	<
water	28:24	0:0	6	inlink
op	28:30	0:0	6	->
water	28:32	0:0	6	h
forexpr	28:35	28:36	5	y ++
water	28:35	0:0	6	y
op	28:36	0:0	6	++
stmts	28:40	32:8	5	
water	28:40	0:0	6	{
for	29:12	30:52	6	(x = 0 ;x < inlink -> w;x ++)
forinit	29:17	29:22	7	x = 0 ;
water	29:17	0:0	8	x
op	29:19	0:0	8	=
water	29:21	0:0	8	0
water	29:22	0:0	8	;
cond	29:24	29:36	7	x < inlink -> w
water	29:24	0:0	8	x
op	29:26	0:0	8	<
water	29:28	0:0	8	inlink
op	29:34	0:0	8	->
water	29:36	0:0	8	w
forexpr	29:39	29:40	7	x ++
water	29:39	0:0	8	x
op	29:40	0:0	8	++
stmts	30:16	30:52	7	
water	30:16	0:0	8	dst
op	30:19	0:0	8	[
water	30:20	0:0	8	x
op	30:21	0:0	8	]
op	30:23	0:0	8	=
call	30:25	30:51	8	get_natural_factor
arg	30:44	30:45	9	s
water	30:44	0:0	10	s
arg	30:47	30:48	9	x
water	30:47	0:0	10	x
arg	30:50	30:51	9	y
water	30:50	0:0	10	y
water	30:52	0:0	8	;
water	31:12	0:0	6	dst
op	31:16	0:0	6	+=
water	31:19	0:0	6	dst_linesize
water	31:31	0:0	6	;
water	32:8	0:0	6	}
water	33:4	0:0	4	}

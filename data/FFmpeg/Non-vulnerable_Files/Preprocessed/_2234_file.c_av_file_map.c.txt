func	1:0	71:0	0	int	av_file_map
params	1:15	0:0	1	
param	1:16	1:36	2	const char *	filename
param	1:38	1:54	2	uint8_t * *	bufptr
param	1:56	1:68	2	size_t *	size
param	2:16	2:30	2	int	log_offset
param	2:32	2:45	2	void *	log_ctx
stmnts	0:0	70:12	1	
decl	4:4	4:78	2	FileLogContext	file_log_ctx
op	4:32	0:0	2	=
water	4:34	0:0	2	{
op	4:36	0:0	2	&
water	4:37	0:0	2	file_log_ctx_class
water	4:55	0:0	2	,
water	4:57	0:0	2	log_offset
water	4:67	0:0	2	,
water	4:69	0:0	2	log_ctx
water	4:77	0:0	2	}
decl	5:4	5:49	2	int	err
water	5:11	0:0	2	,
decl	5:4	5:49	2	int	fd
op	5:16	0:0	2	=
call	5:18	5:48	3	avpriv_open
arg	5:30	5:38	4	filename
water	5:30	0:0	5	filename
arg	5:40	5:48	4	O_RDONLY
water	5:40	0:0	5	O_RDONLY
decl	6:4	6:18	2	struct stat	st
water	7:4	0:0	2	av_unused
water	7:14	0:0	2	void
op	7:19	0:0	2	*
water	7:20	0:0	2	ptr
water	7:23	0:0	2	;
decl	8:4	8:18	2	off_t	off_size
decl	9:4	9:20	2	char	errbuf[128]
op	10:4	0:0	2	*
water	10:5	0:0	2	bufptr
op	10:12	0:0	2	=
water	10:14	0:0	2	NULL
water	10:18	0:0	2	;
if	11:4	16:4	2	(fd < 0)
cond	11:8	11:13	3	fd < 0
water	11:8	0:0	4	fd
op	11:11	0:0	4	<
water	11:13	0:0	4	0
stmts	11:16	16:4	3	
water	11:16	0:0	4	{
water	12:8	0:0	4	err
op	12:12	0:0	4	=
call	12:14	12:27	4	AVERROR
arg	12:22	12:27	5	errno
water	12:22	0:0	6	errno
water	12:28	0:0	4	;
call	13:8	13:47	4	av_strerror
arg	13:20	13:23	5	err
water	13:20	0:0	6	err
arg	13:25	13:31	5	errbuf
water	13:25	0:0	6	errbuf
arg	13:33	13:47	5	sizeof(errbuf)
op	13:33	0:0	6	sizeof
water	13:39	0:0	6	(
water	13:40	0:0	6	errbuf
water	13:46	0:0	6	)
water	13:48	0:0	4	;
call	14:8	14:91	4	av_log
arg	14:15	14:28	5	&file_log_ctx
op	14:15	0:0	6	&
water	14:16	0:0	6	file_log_ctx
arg	14:30	14:42	5	AV_LOG_ERROR
water	14:30	0:0	6	AV_LOG_ERROR
arg	14:44	14:73	5	"Cannot read file '%s': %s\n"
water	14:44	0:0	6	"Cannot read file '%s': %s\n"
arg	14:75	14:83	5	filename
water	14:75	0:0	6	filename
arg	14:85	14:91	5	errbuf
water	14:85	0:0	6	errbuf
water	14:92	0:0	4	;
return	15:8	15:18	4	err
water	15:15	0:0	5	err
water	16:4	0:0	4	}
if	17:4	23:4	2	(fstat (fd ,& st ) < 0)
cond	17:8	17:25	3	fstat (fd ,& st ) < 0
call	17:8	17:21	4	fstat
arg	17:14	17:16	5	fd
water	17:14	0:0	6	fd
arg	17:18	17:21	5	&st
op	17:18	0:0	6	&
water	17:19	0:0	6	st
op	17:23	0:0	4	<
water	17:25	0:0	4	0
stmts	17:28	23:4	3	
water	17:28	0:0	4	{
water	18:8	0:0	4	err
op	18:12	0:0	4	=
call	18:14	18:27	4	AVERROR
arg	18:22	18:27	5	errno
water	18:22	0:0	6	errno
water	18:28	0:0	4	;
call	19:8	19:47	4	av_strerror
arg	19:20	19:23	5	err
water	19:20	0:0	6	err
arg	19:25	19:31	5	errbuf
water	19:25	0:0	6	errbuf
arg	19:33	19:47	5	sizeof(errbuf)
op	19:33	0:0	6	sizeof
water	19:39	0:0	6	(
water	19:40	0:0	6	errbuf
water	19:46	0:0	6	)
water	19:48	0:0	4	;
call	20:8	20:85	4	av_log
arg	20:15	20:28	5	&file_log_ctx
op	20:15	0:0	6	&
water	20:16	0:0	6	file_log_ctx
arg	20:30	20:42	5	AV_LOG_ERROR
water	20:30	0:0	6	AV_LOG_ERROR
arg	20:44	20:77	5	"Error occurred in fstat(): %s\n"
water	20:44	0:0	6	"Error occurred in fstat(): %s\n"
arg	20:79	20:85	5	errbuf
water	20:79	0:0	6	errbuf
water	20:86	0:0	4	;
call	21:8	21:16	4	close
arg	21:14	21:16	5	fd
water	21:14	0:0	6	fd
water	21:17	0:0	4	;
return	22:8	22:18	4	err
water	22:15	0:0	5	err
water	23:4	0:0	4	}
water	24:4	0:0	2	off_size
op	24:13	0:0	2	=
water	24:15	0:0	2	st
op	24:17	0:0	2	.
water	24:18	0:0	2	st_size
water	24:25	0:0	2	;
if	25:4	30:4	2	(off_size > SIZE_MAX)
cond	25:8	25:19	3	off_size > SIZE_MAX
water	25:8	0:0	4	off_size
op	25:17	0:0	4	>
water	25:19	0:0	4	SIZE_MAX
stmts	25:29	30:4	3	
water	25:29	0:0	4	{
call	26:8	27:63	4	av_log
arg	26:15	26:28	5	&file_log_ctx
op	26:15	0:0	6	&
water	26:16	0:0	6	file_log_ctx
arg	26:30	26:42	5	AV_LOG_ERROR
water	26:30	0:0	6	AV_LOG_ERROR
arg	27:15	27:53	5	"File size for file '%s' is too big\n"
water	27:15	0:0	6	"File size for file '%s' is too big\n"
arg	27:55	27:63	5	filename
water	27:55	0:0	6	filename
water	27:64	0:0	4	;
call	28:8	28:16	4	close
arg	28:14	28:16	5	fd
water	28:14	0:0	6	fd
water	28:17	0:0	4	;
return	29:8	29:30	4	AVERROR(EINVAL)
call	29:15	29:29	5	AVERROR
arg	29:23	29:29	6	EINVAL
water	29:23	0:0	7	EINVAL
water	30:4	0:0	4	}
op	31:4	0:0	2	*
water	31:5	0:0	2	size
op	31:10	0:0	2	=
water	31:12	0:0	2	off_size
water	31:20	0:0	2	;
water	33:4	0:0	2	ptr
op	33:8	0:0	2	=
call	33:10	33:68	2	mmap
arg	33:15	33:19	3	NULL
water	33:15	0:0	4	NULL
arg	33:21	33:26	3	*size
op	33:21	0:0	4	*
water	33:22	0:0	4	size
arg	33:28	33:48	3	PROT_READ|PROT_WRITE
water	33:28	0:0	4	PROT_READ
op	33:37	0:0	4	|
water	33:38	0:0	4	PROT_WRITE
arg	33:50	33:61	3	MAP_PRIVATE
water	33:50	0:0	4	MAP_PRIVATE
arg	33:63	33:65	3	fd
water	33:63	0:0	4	fd
arg	33:67	33:68	3	0
water	33:67	0:0	4	0
water	33:69	0:0	2	;
if	34:4	40:4	2	(ptr == MAP_FAILED)
cond	34:8	34:15	3	ptr == MAP_FAILED
water	34:8	0:0	4	ptr
op	34:12	0:0	4	==
water	34:15	0:0	4	MAP_FAILED
stmts	34:27	40:4	3	
water	34:27	0:0	4	{
water	35:8	0:0	4	err
op	35:12	0:0	4	=
call	35:14	35:27	4	AVERROR
arg	35:22	35:27	5	errno
water	35:22	0:0	6	errno
water	35:28	0:0	4	;
call	36:8	36:47	4	av_strerror
arg	36:20	36:23	5	err
water	36:20	0:0	6	err
arg	36:25	36:31	5	errbuf
water	36:25	0:0	6	errbuf
arg	36:33	36:47	5	sizeof(errbuf)
op	36:33	0:0	6	sizeof
water	36:39	0:0	6	(
water	36:40	0:0	6	errbuf
water	36:46	0:0	6	)
water	36:48	0:0	4	;
call	37:8	37:84	4	av_log
arg	37:15	37:28	5	&file_log_ctx
op	37:15	0:0	6	&
water	37:16	0:0	6	file_log_ctx
arg	37:30	37:42	5	AV_LOG_ERROR
water	37:30	0:0	6	AV_LOG_ERROR
arg	37:44	37:76	5	"Error occurred in mmap(): %s\n"
water	37:44	0:0	6	"Error occurred in mmap(): %s\n"
arg	37:78	37:84	5	errbuf
water	37:78	0:0	6	errbuf
water	37:85	0:0	4	;
call	38:8	38:16	4	close
arg	38:14	38:16	5	fd
water	38:14	0:0	6	fd
water	38:17	0:0	4	;
return	39:8	39:18	4	err
water	39:15	0:0	5	err
water	40:4	0:0	4	}
op	41:4	0:0	2	*
water	41:5	0:0	2	bufptr
op	41:12	0:0	2	=
water	41:14	0:0	2	ptr
water	41:17	0:0	2	;
water	43:4	0:0	2	{
decl	44:8	44:50	2	HANDLE	mh
water	44:17	0:0	2	,
decl	44:8	44:50	2	HANDLE	fh
op	44:22	0:0	2	=
water	44:24	0:0	2	(
water	44:25	0:0	2	HANDLE
water	44:31	0:0	2	)
call	44:32	44:49	3	_get_osfhandle
arg	44:47	44:49	4	fd
water	44:47	0:0	5	fd
water	45:8	0:0	2	mh
op	45:11	0:0	2	=
call	45:13	45:66	2	CreateFileMapping
arg	45:31	45:33	3	fh
water	45:31	0:0	4	fh
arg	45:35	45:39	3	NULL
water	45:35	0:0	4	NULL
arg	45:41	45:54	3	PAGE_READONLY
water	45:41	0:0	4	PAGE_READONLY
arg	45:56	45:57	3	0
water	45:56	0:0	4	0
arg	45:59	45:60	3	0
water	45:59	0:0	4	0
arg	45:62	45:66	3	NULL
water	45:62	0:0	4	NULL
water	45:67	0:0	2	;
if	46:8	50:8	2	(! mh)
cond	46:12	46:13	3	! mh
op	46:12	0:0	4	!
water	46:13	0:0	4	mh
stmts	46:17	50:8	3	
water	46:17	0:0	4	{
call	47:12	47:89	4	av_log
arg	47:19	47:32	5	&file_log_ctx
op	47:19	0:0	6	&
water	47:20	0:0	6	file_log_ctx
arg	47:34	47:46	5	AV_LOG_ERROR
water	47:34	0:0	6	AV_LOG_ERROR
arg	47:48	47:89	5	"Error occurred in CreateFileMapping()\n"
water	47:48	0:0	6	"Error occurred in CreateFileMapping()\n"
water	47:90	0:0	4	;
call	48:12	48:20	4	close
arg	48:18	48:20	5	fd
water	48:18	0:0	6	fd
water	48:21	0:0	4	;
return	49:12	49:21	4	-1
op	49:19	0:0	5	-
water	49:20	0:0	5	1
water	50:8	0:0	4	}
water	51:8	0:0	2	ptr
op	51:12	0:0	2	=
call	51:14	51:58	2	MapViewOfFile
arg	51:28	51:30	3	mh
water	51:28	0:0	4	mh
arg	51:32	51:45	3	FILE_MAP_READ
water	51:32	0:0	4	FILE_MAP_READ
arg	51:47	51:48	3	0
water	51:47	0:0	4	0
arg	51:50	51:51	3	0
water	51:50	0:0	4	0
arg	51:53	51:58	3	*size
op	51:53	0:0	4	*
water	51:54	0:0	4	size
water	51:59	0:0	2	;
call	52:8	52:22	2	CloseHandle
arg	52:20	52:22	3	mh
water	52:20	0:0	4	mh
water	52:23	0:0	2	;
if	53:8	57:8	2	(! ptr)
cond	53:12	53:13	3	! ptr
op	53:12	0:0	4	!
water	53:13	0:0	4	ptr
stmts	53:18	57:8	3	
water	53:18	0:0	4	{
call	54:12	54:85	4	av_log
arg	54:19	54:32	5	&file_log_ctx
op	54:19	0:0	6	&
water	54:20	0:0	6	file_log_ctx
arg	54:34	54:46	5	AV_LOG_ERROR
water	54:34	0:0	6	AV_LOG_ERROR
arg	54:48	54:85	5	"Error occurred in MapViewOfFile()\n"
water	54:48	0:0	6	"Error occurred in MapViewOfFile()\n"
water	54:86	0:0	4	;
call	55:12	55:20	4	close
arg	55:18	55:20	5	fd
water	55:18	0:0	6	fd
water	55:21	0:0	4	;
return	56:12	56:21	4	-1
op	56:19	0:0	5	-
water	56:20	0:0	5	1
water	57:8	0:0	4	}
op	58:8	0:0	2	*
water	58:9	0:0	2	bufptr
op	58:16	0:0	2	=
water	58:18	0:0	2	ptr
water	58:21	0:0	2	;
water	59:4	0:0	2	}
op	61:4	0:0	2	*
water	61:5	0:0	2	bufptr
op	61:12	0:0	2	=
call	61:14	61:29	2	av_malloc
arg	61:24	61:29	3	*size
op	61:24	0:0	4	*
water	61:25	0:0	4	size
water	61:30	0:0	2	;
if	62:4	66:4	2	(! * bufptr)
cond	62:8	62:10	3	! * bufptr
op	62:8	0:0	4	!
op	62:9	0:0	4	*
water	62:10	0:0	4	bufptr
stmts	62:18	66:4	3	
water	62:18	0:0	4	{
call	63:8	63:80	4	av_log
arg	63:15	63:28	5	&file_log_ctx
op	63:15	0:0	6	&
water	63:16	0:0	6	file_log_ctx
arg	63:30	63:42	5	AV_LOG_ERROR
water	63:30	0:0	6	AV_LOG_ERROR
arg	63:44	63:80	5	"Memory allocation error occurred\n"
water	63:44	0:0	6	"Memory allocation error occurred\n"
water	63:81	0:0	4	;
call	64:8	64:16	4	close
arg	64:14	64:16	5	fd
water	64:14	0:0	6	fd
water	64:17	0:0	4	;
return	65:8	65:30	4	AVERROR(ENOMEM)
call	65:15	65:29	5	AVERROR
arg	65:23	65:29	6	ENOMEM
water	65:23	0:0	7	ENOMEM
water	66:4	0:0	4	}
call	67:4	67:27	2	read
arg	67:9	67:11	3	fd
water	67:9	0:0	4	fd
arg	67:13	67:20	3	*bufptr
op	67:13	0:0	4	*
water	67:14	0:0	4	bufptr
arg	67:22	67:27	3	*size
op	67:22	0:0	4	*
water	67:23	0:0	4	size
water	67:28	0:0	2	;
call	69:4	69:12	2	close
arg	69:10	69:12	3	fd
water	69:10	0:0	4	fd
water	69:13	0:0	2	;
return	70:4	70:12	2	0
water	70:11	0:0	3	0

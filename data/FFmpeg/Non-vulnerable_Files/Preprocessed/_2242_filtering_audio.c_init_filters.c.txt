func	1:0	98:0	0	static int	init_filters
params	1:23	0:0	1	
param	1:24	1:49	2	const char *	filters_descr
stmnts	0:0	97:14	1	
decl	3:4	3:18	2	char	args[512]
decl	4:4	4:15	2	int	ret
op	4:12	0:0	2	=
water	4:14	0:0	2	0
decl	5:4	5:59	2	AVFilter	*abuffersrc
op	5:26	0:0	2	=
call	5:28	5:58	3	avfilter_get_by_name
arg	5:49	5:58	4	"abuffer"
water	5:49	0:0	5	"abuffer"
decl	6:4	6:63	2	AVFilter	*abuffersink
op	6:26	0:0	2	=
call	6:28	6:62	3	avfilter_get_by_name
arg	6:49	6:62	4	"abuffersink"
water	6:49	0:0	5	"abuffersink"
decl	7:4	7:51	2	AVFilterInOut	*outputs
op	7:27	0:0	2	=
call	7:29	7:50	3	avfilter_inout_alloc
decl	8:4	8:51	2	AVFilterInOut	*inputs
op	8:27	0:0	2	=
call	8:29	8:50	3	avfilter_inout_alloc
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	enum
water	9:22	0:0	2	AVSampleFormat
water	9:37	0:0	2	out_sample_fmts
op	9:52	0:0	2	[
op	9:53	0:0	2	]
op	9:55	0:0	2	=
water	9:57	0:0	2	{
water	9:59	0:0	2	AV_SAMPLE_FMT_S16
water	9:76	0:0	2	,
op	9:78	0:0	2	-
water	9:79	0:0	2	1
water	9:81	0:0	2	}
water	9:82	0:0	2	;
water	10:4	0:0	2	static
water	10:11	0:0	2	const
water	10:17	0:0	2	int64_t
water	10:25	0:0	2	out_channel_layouts
op	10:44	0:0	2	[
op	10:45	0:0	2	]
op	10:47	0:0	2	=
water	10:49	0:0	2	{
water	10:51	0:0	2	AV_CH_LAYOUT_MONO
water	10:68	0:0	2	,
op	10:70	0:0	2	-
water	10:71	0:0	2	1
water	10:73	0:0	2	}
water	10:74	0:0	2	;
water	11:4	0:0	2	static
water	11:11	0:0	2	const
water	11:17	0:0	2	int
water	11:21	0:0	2	out_sample_rates
op	11:37	0:0	2	[
op	11:38	0:0	2	]
op	11:40	0:0	2	=
water	11:42	0:0	2	{
water	11:44	0:0	2	8000
water	11:48	0:0	2	,
op	11:50	0:0	2	-
water	11:51	0:0	2	1
water	11:53	0:0	2	}
water	11:54	0:0	2	;
decl	12:4	12:31	2	const AVFilterLink	*outlink
decl	13:4	13:74	2	AVRational	time_base
op	13:25	0:0	2	=
water	13:27	0:0	2	fmt_ctx
op	13:34	0:0	2	->
water	13:36	0:0	2	streams
op	13:43	0:0	2	[
water	13:44	0:0	2	audio_stream_index
op	13:62	0:0	2	]
op	13:63	0:0	2	->
water	13:65	0:0	2	time_base
water	14:4	0:0	2	filter_graph
op	14:17	0:0	2	=
call	14:19	14:40	2	avfilter_graph_alloc
water	14:41	0:0	2	;
if	15:4	18:4	2	(! outputs || ! inputs || ! filter_graph)
cond	15:8	15:32	3	! outputs || ! inputs || ! filter_graph
op	15:8	0:0	4	!
water	15:9	0:0	4	outputs
op	15:17	0:0	4	||
op	15:20	0:0	4	!
water	15:21	0:0	4	inputs
op	15:28	0:0	4	||
op	15:31	0:0	4	!
water	15:32	0:0	4	filter_graph
stmts	15:46	18:4	3	
water	15:46	0:0	4	{
water	16:8	0:0	4	ret
op	16:12	0:0	4	=
call	16:14	16:28	4	AVERROR
arg	16:22	16:28	5	ENOMEM
water	16:22	0:0	6	ENOMEM
water	16:29	0:0	4	;
goto	17:8	17:16	4	end
water	17:13	0:0	5	end
water	18:4	0:0	4	}
if	20:4	21:82	2	(! dec_ctx -> channel_layout)
cond	20:8	20:18	3	! dec_ctx -> channel_layout
op	20:8	0:0	4	!
water	20:9	0:0	4	dec_ctx
op	20:16	0:0	4	->
water	20:18	0:0	4	channel_layout
stmts	21:8	21:82	3	
water	21:8	0:0	4	dec_ctx
op	21:15	0:0	4	->
water	21:17	0:0	4	channel_layout
op	21:32	0:0	4	=
call	21:34	21:81	4	av_get_default_channel_layout
arg	21:64	21:81	5	dec_ctx->channels
water	21:64	0:0	6	dec_ctx
op	21:71	0:0	6	->
water	21:73	0:0	6	channels
water	21:82	0:0	4	;
call	22:4	25:81	2	snprintf
arg	22:13	22:17	3	args
water	22:13	0:0	4	args
arg	22:19	22:31	3	sizeof(args)
op	22:19	0:0	4	sizeof
water	22:25	0:0	4	(
water	22:26	0:0	4	args
water	22:30	0:0	4	)
arg	23:12	23:83	3	"time_base=%d/%d:sample_rate=%d:sample_fmt=%s:channel_layout=0x%"PRIx64
water	23:12	0:0	4	"time_base=%d/%d:sample_rate=%d:sample_fmt=%s:channel_layout=0x%"
water	23:77	0:0	4	PRIx64
arg	24:13	24:26	3	time_base.num
water	24:13	0:0	4	time_base
op	24:22	0:0	4	.
water	24:23	0:0	4	num
arg	24:28	24:41	3	time_base.den
water	24:28	0:0	4	time_base
op	24:37	0:0	4	.
water	24:38	0:0	4	den
arg	24:43	24:63	3	dec_ctx->sample_rate
water	24:43	0:0	4	dec_ctx
op	24:50	0:0	4	->
water	24:52	0:0	4	sample_rate
arg	25:13	25:56	3	av_get_sample_fmt_name(dec_ctx->sample_fmt)
call	25:13	25:55	4	av_get_sample_fmt_name
arg	25:36	25:55	5	dec_ctx->sample_fmt
water	25:36	0:0	6	dec_ctx
op	25:43	0:0	6	->
water	25:45	0:0	6	sample_fmt
arg	25:58	25:81	3	dec_ctx->channel_layout
water	25:58	0:0	4	dec_ctx
op	25:65	0:0	4	->
water	25:67	0:0	4	channel_layout
water	25:82	0:0	2	;
water	26:4	0:0	2	ret
op	26:8	0:0	2	=
call	26:10	27:63	2	avfilter_graph_create_filter
arg	26:39	26:53	3	&buffersrc_ctx
op	26:39	0:0	4	&
water	26:40	0:0	4	buffersrc_ctx
arg	26:55	26:65	3	abuffersrc
water	26:55	0:0	4	abuffersrc
arg	26:67	26:71	3	"in"
water	26:67	0:0	4	"in"
arg	27:39	27:43	3	args
water	27:39	0:0	4	args
arg	27:45	27:49	3	NULL
water	27:45	0:0	4	NULL
arg	27:51	27:63	3	filter_graph
water	27:51	0:0	4	filter_graph
water	27:64	0:0	2	;
if	28:4	31:4	2	(ret < 0)
cond	28:8	28:14	3	ret < 0
water	28:8	0:0	4	ret
op	28:12	0:0	4	<
water	28:14	0:0	4	0
stmts	28:17	31:4	3	
water	28:17	0:0	4	{
call	29:8	29:72	4	av_log
arg	29:15	29:19	5	NULL
water	29:15	0:0	6	NULL
arg	29:21	29:33	5	AV_LOG_ERROR
water	29:21	0:0	6	AV_LOG_ERROR
arg	29:35	29:72	5	"Cannot create audio buffer source\n"
water	29:35	0:0	6	"Cannot create audio buffer source\n"
water	29:73	0:0	4	;
goto	30:8	30:16	4	end
water	30:13	0:0	5	end
water	31:4	0:0	4	}
water	33:4	0:0	2	ret
op	33:8	0:0	2	=
call	33:10	34:63	2	avfilter_graph_create_filter
arg	33:39	33:54	3	&buffersink_ctx
op	33:39	0:0	4	&
water	33:40	0:0	4	buffersink_ctx
arg	33:56	33:67	3	abuffersink
water	33:56	0:0	4	abuffersink
arg	33:69	33:74	3	"out"
water	33:69	0:0	4	"out"
arg	34:39	34:43	3	NULL
water	34:39	0:0	4	NULL
arg	34:45	34:49	3	NULL
water	34:45	0:0	4	NULL
arg	34:51	34:63	3	filter_graph
water	34:51	0:0	4	filter_graph
water	34:64	0:0	2	;
if	35:4	38:4	2	(ret < 0)
cond	35:8	35:14	3	ret < 0
water	35:8	0:0	4	ret
op	35:12	0:0	4	<
water	35:14	0:0	4	0
stmts	35:17	38:4	3	
water	35:17	0:0	4	{
call	36:8	36:70	4	av_log
arg	36:15	36:19	5	NULL
water	36:15	0:0	6	NULL
arg	36:21	36:33	5	AV_LOG_ERROR
water	36:21	0:0	6	AV_LOG_ERROR
arg	36:35	36:70	5	"Cannot create audio buffer sink\n"
water	36:35	0:0	6	"Cannot create audio buffer sink\n"
water	36:71	0:0	4	;
goto	37:8	37:16	4	end
water	37:13	0:0	5	end
water	38:4	0:0	4	}
water	39:4	0:0	2	ret
op	39:8	0:0	2	=
call	39:10	40:52	2	av_opt_set_int_list
arg	39:30	39:44	3	buffersink_ctx
water	39:30	0:0	4	buffersink_ctx
arg	39:46	39:59	3	"sample_fmts"
water	39:46	0:0	4	"sample_fmts"
arg	39:61	39:76	3	out_sample_fmts
water	39:61	0:0	4	out_sample_fmts
arg	39:78	39:80	3	-1
op	39:78	0:0	4	-
water	39:79	0:0	4	1
arg	40:30	40:52	3	AV_OPT_SEARCH_CHILDREN
water	40:30	0:0	4	AV_OPT_SEARCH_CHILDREN
water	40:53	0:0	2	;
if	41:4	44:4	2	(ret < 0)
cond	41:8	41:14	3	ret < 0
water	41:8	0:0	4	ret
op	41:12	0:0	4	<
water	41:14	0:0	4	0
stmts	41:17	44:4	3	
water	41:17	0:0	4	{
call	42:8	42:70	4	av_log
arg	42:15	42:19	5	NULL
water	42:15	0:0	6	NULL
arg	42:21	42:33	5	AV_LOG_ERROR
water	42:21	0:0	6	AV_LOG_ERROR
arg	42:35	42:70	5	"Cannot set output sample format\n"
water	42:35	0:0	6	"Cannot set output sample format\n"
water	42:71	0:0	4	;
goto	43:8	43:16	4	end
water	43:13	0:0	5	end
water	44:4	0:0	4	}
water	45:4	0:0	2	ret
op	45:8	0:0	2	=
call	45:10	46:52	2	av_opt_set_int_list
arg	45:30	45:44	3	buffersink_ctx
water	45:30	0:0	4	buffersink_ctx
arg	45:46	45:63	3	"channel_layouts"
water	45:46	0:0	4	"channel_layouts"
arg	45:65	45:84	3	out_channel_layouts
water	45:65	0:0	4	out_channel_layouts
arg	45:86	45:88	3	-1
op	45:86	0:0	4	-
water	45:87	0:0	4	1
arg	46:30	46:52	3	AV_OPT_SEARCH_CHILDREN
water	46:30	0:0	4	AV_OPT_SEARCH_CHILDREN
water	46:53	0:0	2	;
if	47:4	50:4	2	(ret < 0)
cond	47:8	47:14	3	ret < 0
water	47:8	0:0	4	ret
op	47:12	0:0	4	<
water	47:14	0:0	4	0
stmts	47:17	50:4	3	
water	47:17	0:0	4	{
call	48:8	48:71	4	av_log
arg	48:15	48:19	5	NULL
water	48:15	0:0	6	NULL
arg	48:21	48:33	5	AV_LOG_ERROR
water	48:21	0:0	6	AV_LOG_ERROR
arg	48:35	48:71	5	"Cannot set output channel layout\n"
water	48:35	0:0	6	"Cannot set output channel layout\n"
water	48:72	0:0	4	;
goto	49:8	49:16	4	end
water	49:13	0:0	5	end
water	50:4	0:0	4	}
water	51:4	0:0	2	ret
op	51:8	0:0	2	=
call	51:10	52:52	2	av_opt_set_int_list
arg	51:30	51:44	3	buffersink_ctx
water	51:30	0:0	4	buffersink_ctx
arg	51:46	51:60	3	"sample_rates"
water	51:46	0:0	4	"sample_rates"
arg	51:62	51:78	3	out_sample_rates
water	51:62	0:0	4	out_sample_rates
arg	51:80	51:82	3	-1
op	51:80	0:0	4	-
water	51:81	0:0	4	1
arg	52:30	52:52	3	AV_OPT_SEARCH_CHILDREN
water	52:30	0:0	4	AV_OPT_SEARCH_CHILDREN
water	52:53	0:0	2	;
if	53:4	56:4	2	(ret < 0)
cond	53:8	53:14	3	ret < 0
water	53:8	0:0	4	ret
op	53:12	0:0	4	<
water	53:14	0:0	4	0
stmts	53:17	56:4	3	
water	53:17	0:0	4	{
call	54:8	54:68	4	av_log
arg	54:15	54:19	5	NULL
water	54:15	0:0	6	NULL
arg	54:21	54:33	5	AV_LOG_ERROR
water	54:21	0:0	6	AV_LOG_ERROR
arg	54:35	54:68	5	"Cannot set output sample rate\n"
water	54:35	0:0	6	"Cannot set output sample rate\n"
water	54:69	0:0	4	;
goto	55:8	55:16	4	end
water	55:13	0:0	5	end
water	56:4	0:0	4	}
water	67:4	0:0	2	outputs
op	67:11	0:0	2	->
water	67:13	0:0	2	name
op	67:24	0:0	2	=
call	67:26	67:40	2	av_strdup
arg	67:36	67:40	3	"in"
water	67:36	0:0	4	"in"
water	67:41	0:0	2	;
water	68:4	0:0	2	outputs
op	68:11	0:0	2	->
water	68:13	0:0	2	filter_ctx
op	68:24	0:0	2	=
water	68:26	0:0	2	buffersrc_ctx
water	68:39	0:0	2	;
water	69:4	0:0	2	outputs
op	69:11	0:0	2	->
water	69:13	0:0	2	pad_idx
op	69:24	0:0	2	=
water	69:26	0:0	2	0
water	69:27	0:0	2	;
water	70:4	0:0	2	outputs
op	70:11	0:0	2	->
water	70:13	0:0	2	next
op	70:24	0:0	2	=
water	70:26	0:0	2	NULL
water	70:30	0:0	2	;
water	77:4	0:0	2	inputs
op	77:10	0:0	2	->
water	77:12	0:0	2	name
op	77:23	0:0	2	=
call	77:25	77:40	2	av_strdup
arg	77:35	77:40	3	"out"
water	77:35	0:0	4	"out"
water	77:41	0:0	2	;
water	78:4	0:0	2	inputs
op	78:10	0:0	2	->
water	78:12	0:0	2	filter_ctx
op	78:23	0:0	2	=
water	78:25	0:0	2	buffersink_ctx
water	78:39	0:0	2	;
water	79:4	0:0	2	inputs
op	79:10	0:0	2	->
water	79:12	0:0	2	pad_idx
op	79:23	0:0	2	=
water	79:25	0:0	2	0
water	79:26	0:0	2	;
water	80:4	0:0	2	inputs
op	80:10	0:0	2	->
water	80:12	0:0	2	next
op	80:23	0:0	2	=
water	80:25	0:0	2	NULL
water	80:29	0:0	2	;
if	81:4	83:16	2	(( ret =avfilter_graph_parse_ptr (filter_graph ,filters_descr ,& inputs ,& outputs ,NULL ) ) < 0)
cond	81:8	82:68	3	( ret =avfilter_graph_parse_ptr (filter_graph ,filters_descr ,& inputs ,& outputs ,NULL ) ) < 0
water	81:8	0:0	4	(
water	81:9	0:0	4	ret
op	81:13	0:0	4	=
call	81:15	82:63	4	avfilter_graph_parse_ptr
arg	81:40	81:52	5	filter_graph
water	81:40	0:0	6	filter_graph
arg	81:54	81:67	5	filters_descr
water	81:54	0:0	6	filters_descr
arg	82:40	82:47	5	&inputs
op	82:40	0:0	6	&
water	82:41	0:0	6	inputs
arg	82:49	82:57	5	&outputs
op	82:49	0:0	6	&
water	82:50	0:0	6	outputs
arg	82:59	82:63	5	NULL
water	82:59	0:0	6	NULL
water	82:64	0:0	4	)
op	82:66	0:0	4	<
water	82:68	0:0	4	0
stmts	83:8	83:16	3	
goto	83:8	83:16	4	end
water	83:13	0:0	5	end
if	84:4	85:16	2	(( ret =avfilter_graph_config (filter_graph ,NULL ) ) < 0)
cond	84:8	84:60	3	( ret =avfilter_graph_config (filter_graph ,NULL ) ) < 0
water	84:8	0:0	4	(
water	84:9	0:0	4	ret
op	84:13	0:0	4	=
call	84:15	84:55	4	avfilter_graph_config
arg	84:37	84:49	5	filter_graph
water	84:37	0:0	6	filter_graph
arg	84:51	84:55	5	NULL
water	84:51	0:0	6	NULL
water	84:56	0:0	4	)
op	84:58	0:0	4	<
water	84:60	0:0	4	0
stmts	85:8	85:16	3	
goto	85:8	85:16	4	end
water	85:13	0:0	5	end
water	88:4	0:0	2	outlink
op	88:12	0:0	2	=
water	88:14	0:0	2	buffersink_ctx
op	88:28	0:0	2	->
water	88:30	0:0	2	inputs
op	88:36	0:0	2	[
water	88:37	0:0	2	0
op	88:38	0:0	2	]
water	88:39	0:0	2	;
call	89:4	89:80	2	av_get_channel_layout_string
arg	89:33	89:37	3	args
water	89:33	0:0	4	args
arg	89:39	89:51	3	sizeof(args)
op	89:39	0:0	4	sizeof
water	89:45	0:0	4	(
water	89:46	0:0	4	args
water	89:50	0:0	4	)
arg	89:53	89:55	3	-1
op	89:53	0:0	4	-
water	89:54	0:0	4	1
arg	89:57	89:80	3	outlink->channel_layout
water	89:57	0:0	4	outlink
op	89:64	0:0	4	->
water	89:66	0:0	4	channel_layout
water	89:81	0:0	2	;
call	90:4	93:15	2	av_log
arg	90:11	90:15	3	NULL
water	90:11	0:0	4	NULL
arg	90:17	90:28	3	AV_LOG_INFO
water	90:17	0:0	4	AV_LOG_INFO
arg	90:30	90:71	3	"Output: srate:%dHz fmt:%s chlayout:%s\n"
water	90:30	0:0	4	"Output: srate:%dHz fmt:%s chlayout:%s\n"
arg	91:11	91:36	3	(int)outlink->sample_rate
water	91:11	0:0	4	(
water	91:12	0:0	4	int
water	91:15	0:0	4	)
water	91:16	0:0	4	outlink
op	91:23	0:0	4	->
water	91:25	0:0	4	sample_rate
arg	92:11	92:77	3	(char*)av_x_if_null(av_get_sample_fmt_name(outlink->format),"?")
water	92:11	0:0	4	(
water	92:12	0:0	4	char
op	92:17	0:0	4	*
water	92:18	0:0	4	)
call	92:19	92:76	4	av_x_if_null
arg	92:32	92:71	5	av_get_sample_fmt_name(outlink->format)
call	92:32	92:70	6	av_get_sample_fmt_name
arg	92:55	92:70	7	outlink->format
water	92:55	0:0	8	outlink
op	92:62	0:0	8	->
water	92:64	0:0	8	format
arg	92:73	92:76	5	"?"
water	92:73	0:0	6	"?"
arg	93:11	93:15	3	args
water	93:11	0:0	4	args
water	93:16	0:0	2	;
label	94:0	94:3	2	end :
call	95:4	95:31	2	avfilter_inout_free
arg	95:24	95:31	3	&inputs
op	95:24	0:0	4	&
water	95:25	0:0	4	inputs
water	95:32	0:0	2	;
call	96:4	96:32	2	avfilter_inout_free
arg	96:24	96:32	3	&outputs
op	96:24	0:0	4	&
water	96:25	0:0	4	outputs
water	96:33	0:0	2	;
return	97:4	97:14	2	ret
water	97:11	0:0	3	ret

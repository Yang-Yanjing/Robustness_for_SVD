func	1:0	72:0	0	static int	asf_read_header
params	1:26	0:0	1	
param	1:27	1:45	2	AVFormatContext *	s
stmnts	0:0	71:14	1	
decl	3:4	3:42	2	ASFContext	*asf
op	3:28	0:0	2	=
water	3:30	0:0	2	s
op	3:31	0:0	2	->
water	3:33	0:0	2	priv_data
decl	4:4	4:35	2	AVIOContext	*pb
op	4:28	0:0	2	=
water	4:30	0:0	2	s
op	4:31	0:0	2	->
water	4:33	0:0	2	pb
decl	5:4	5:34	2	const GUIDParseTable	*g
op	5:28	0:0	2	=
water	5:30	0:0	2	NULL
decl	6:4	6:20	2	ff_asf_guid	guid
decl	7:4	7:14	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:14	2	int	ret
decl	8:4	8:17	2	uint64_t	size
water	9:4	0:0	2	asf
op	9:7	0:0	2	->
water	9:9	0:0	2	preroll
op	9:25	0:0	2	=
water	9:27	0:0	2	0
water	9:28	0:0	2	;
water	10:4	0:0	2	asf
op	10:7	0:0	2	->
water	10:9	0:0	2	is_simple_index
op	10:25	0:0	2	=
water	10:27	0:0	2	0
water	10:28	0:0	2	;
call	11:4	11:25	2	ff_get_guid
arg	11:16	11:18	3	pb
water	11:16	0:0	4	pb
arg	11:20	11:25	3	&guid
op	11:20	0:0	4	&
water	11:21	0:0	4	guid
water	11:26	0:0	2	;
if	12:4	13:34	2	(ff_guidcmp (& guid ,& ff_asf_header ))
cond	12:8	12:40	3	ff_guidcmp (& guid ,& ff_asf_header )
call	12:8	12:40	4	ff_guidcmp
arg	12:19	12:24	5	&guid
op	12:19	0:0	6	&
water	12:20	0:0	6	guid
arg	12:26	12:40	5	&ff_asf_header
op	12:26	0:0	6	&
water	12:27	0:0	6	ff_asf_header
stmts	13:8	13:34	3	
return	13:8	13:34	4	AVERROR_INVALIDDATA
water	13:15	0:0	5	AVERROR_INVALIDDATA
call	14:4	14:19	2	avio_skip
arg	14:14	14:16	3	pb
water	14:14	0:0	4	pb
arg	14:18	14:19	3	8
water	14:18	0:0	4	8
water	14:20	0:0	2	;
call	15:4	15:19	2	avio_skip
arg	15:14	15:16	3	pb
water	15:14	0:0	4	pb
arg	15:18	15:19	3	6
water	15:18	0:0	4	6
water	15:20	0:0	2	;
water	16:4	0:0	2	asf
op	16:7	0:0	2	->
water	16:9	0:0	2	data_reached
op	16:22	0:0	2	=
water	16:24	0:0	2	0
water	16:25	0:0	2	;
while	21:4	44:4	2	(1)
cond	21:11	21:11	3	1
water	21:11	0:0	4	1
stmts	21:14	44:4	3	
water	21:14	0:0	4	{
if	23:8	24:17	4	(avio_tell (pb ) == asf -> offset)
cond	23:12	23:34	5	avio_tell (pb ) == asf -> offset
call	23:12	23:24	6	avio_tell
arg	23:22	23:24	7	pb
water	23:22	0:0	8	pb
op	23:26	0:0	6	==
water	23:29	0:0	6	asf
op	23:32	0:0	6	->
water	23:34	0:0	6	offset
stmts	24:12	24:17	5	
break	24:12	24:17	6	
water	25:8	0:0	4	asf
op	25:11	0:0	4	->
water	25:13	0:0	4	offset
op	25:20	0:0	4	=
call	25:22	25:34	4	avio_tell
arg	25:32	25:34	5	pb
water	25:32	0:0	6	pb
water	25:35	0:0	4	;
if	26:8	31:8	4	(( ret =ff_get_guid (pb ,& guid ) ) < 0)
cond	26:12	26:45	5	( ret =ff_get_guid (pb ,& guid ) ) < 0
water	26:12	0:0	6	(
water	26:13	0:0	6	ret
op	26:17	0:0	6	=
call	26:19	26:40	6	ff_get_guid
arg	26:31	26:33	7	pb
water	26:31	0:0	8	pb
arg	26:35	26:40	7	&guid
op	26:35	0:0	8	&
water	26:36	0:0	8	guid
water	26:41	0:0	6	)
op	26:43	0:0	6	<
water	26:45	0:0	6	0
stmts	26:48	31:8	5	
water	26:48	0:0	6	{
if	27:12	28:21	6	(ret == AVERROR_EOF && asf -> data_reached)
cond	27:16	27:43	7	ret == AVERROR_EOF && asf -> data_reached
water	27:16	0:0	8	ret
op	27:20	0:0	8	==
water	27:23	0:0	8	AVERROR_EOF
op	27:35	0:0	8	&&
water	27:38	0:0	8	asf
op	27:41	0:0	8	->
water	27:43	0:0	8	data_reached
stmts	28:16	28:21	7	
break	28:16	28:21	8	
else	29:12	30:27	6
stmts	30:16	30:27	7	
goto	30:16	30:27	8	failed
water	30:21	0:0	9	failed
water	31:8	0:0	6	}
water	32:8	0:0	4	g
op	32:10	0:0	4	=
call	32:12	32:26	4	find_guid
arg	32:22	32:26	5	guid
water	32:22	0:0	6	guid
water	32:27	0:0	4	;
if	33:8	38:8	4	(g)
cond	33:12	33:12	5	g
water	33:12	0:0	6	g
stmts	33:15	38:8	5	
water	33:15	0:0	6	{
water	34:12	0:0	6	asf
op	34:15	0:0	6	->
water	34:17	0:0	6	unknown_offset
op	34:32	0:0	6	=
water	34:34	0:0	6	asf
op	34:37	0:0	6	->
water	34:39	0:0	6	offset
water	34:45	0:0	6	;
water	35:12	0:0	6	asf
op	35:15	0:0	6	->
water	35:17	0:0	6	is_header
op	35:27	0:0	6	=
water	35:29	0:0	6	1
water	35:30	0:0	6	;
if	36:12	37:27	6	(( ret =g -> read_object (s ,g ) ) < 0)
cond	36:16	36:47	7	( ret =g -> read_object (s ,g ) ) < 0
water	36:16	0:0	8	(
water	36:17	0:0	8	ret
op	36:21	0:0	8	=
call	36:23	36:42	8	g->read_object
arg	36:38	36:39	9	s
water	36:38	0:0	10	s
arg	36:41	36:42	9	g
water	36:41	0:0	10	g
water	36:43	0:0	8	)
op	36:45	0:0	8	<
water	36:47	0:0	8	0
stmts	37:16	37:27	7	
goto	37:16	37:27	8	failed
water	37:21	0:0	9	failed
water	38:8	0:0	6	}
else	38:10	41:8	4
stmts	38:15	41:8	5	
water	38:15	0:0	6	{
water	39:12	0:0	6	size
op	39:17	0:0	6	=
call	39:19	39:31	6	avio_rl64
arg	39:29	39:31	7	pb
water	39:29	0:0	8	pb
water	39:32	0:0	6	;
call	40:12	40:48	6	align_position
arg	40:27	40:29	7	pb
water	40:27	0:0	8	pb
arg	40:31	40:42	7	asf->offset
water	40:31	0:0	8	asf
op	40:34	0:0	8	->
water	40:36	0:0	8	offset
arg	40:44	40:48	7	size
water	40:44	0:0	8	size
water	40:49	0:0	6	;
water	41:8	0:0	6	}
if	42:8	43:17	4	(asf -> data_reached && ( ! pb -> seekable || ( asf -> b_flags & ASF_FLAG_BROADCAST ) ))
cond	42:12	42:86	5	asf -> data_reached && ( ! pb -> seekable || ( asf -> b_flags & ASF_FLAG_BROADCAST ) )
water	42:12	0:0	6	asf
op	42:15	0:0	6	->
water	42:17	0:0	6	data_reached
op	42:30	0:0	6	&&
water	42:33	0:0	6	(
op	42:34	0:0	6	!
water	42:35	0:0	6	pb
op	42:37	0:0	6	->
water	42:39	0:0	6	seekable
op	42:48	0:0	6	||
water	42:51	0:0	6	(
water	42:52	0:0	6	asf
op	42:55	0:0	6	->
water	42:57	0:0	6	b_flags
op	42:65	0:0	6	&
water	42:67	0:0	6	ASF_FLAG_BROADCAST
water	42:85	0:0	6	)
water	42:86	0:0	6	)
stmts	43:12	43:17	5	
break	43:12	43:17	6	
water	44:4	0:0	4	}
if	45:4	49:4	2	(! asf -> data_reached)
cond	45:8	45:14	3	! asf -> data_reached
op	45:8	0:0	4	!
water	45:9	0:0	4	asf
op	45:12	0:0	4	->
water	45:14	0:0	4	data_reached
stmts	45:28	49:4	3	
water	45:28	0:0	4	{
call	46:8	46:62	4	av_log
arg	46:15	46:16	5	s
water	46:15	0:0	6	s
arg	46:18	46:30	5	AV_LOG_ERROR
water	46:18	0:0	6	AV_LOG_ERROR
arg	46:32	46:62	5	"Data Object was not found.\n"
water	46:32	0:0	6	"Data Object was not found.\n"
water	46:63	0:0	4	;
water	47:8	0:0	4	ret
op	47:12	0:0	4	=
water	47:14	0:0	4	AVERROR_INVALIDDATA
water	47:33	0:0	4	;
goto	48:8	48:19	4	failed
water	48:13	0:0	5	failed
water	49:4	0:0	4	}
if	50:4	51:57	2	(pb -> seekable)
cond	50:8	50:12	3	pb -> seekable
water	50:8	0:0	4	pb
op	50:10	0:0	4	->
water	50:12	0:0	4	seekable
stmts	51:8	51:57	3	
call	51:8	51:56	4	avio_seek
arg	51:18	51:20	5	pb
water	51:18	0:0	6	pb
arg	51:22	51:46	5	asf->first_packet_offset
water	51:22	0:0	6	asf
op	51:25	0:0	6	->
water	51:27	0:0	6	first_packet_offset
arg	51:48	51:56	5	SEEK_SET
water	51:48	0:0	6	SEEK_SET
water	51:57	0:0	4	;
for	52:4	56:4	2	(i = 0 ;i < asf -> nb_streams;i ++)
forinit	52:9	52:14	3	i = 0 ;
water	52:9	0:0	4	i
op	52:11	0:0	4	=
water	52:13	0:0	4	0
water	52:14	0:0	4	;
cond	52:16	52:25	3	i < asf -> nb_streams
water	52:16	0:0	4	i
op	52:18	0:0	4	<
water	52:20	0:0	4	asf
op	52:23	0:0	4	->
water	52:25	0:0	4	nb_streams
forexpr	52:37	52:38	3	i ++
water	52:37	0:0	4	i
op	52:38	0:0	4	++
stmts	52:42	56:4	3	
water	52:42	0:0	4	{
decl	53:8	53:73	4	const char	*rfc1766
op	53:28	0:0	4	=
water	53:30	0:0	4	asf
op	53:33	0:0	4	->
water	53:35	0:0	4	asf_sd
op	53:41	0:0	4	[
water	53:42	0:0	4	asf
op	53:45	0:0	4	->
water	53:47	0:0	4	asf_st
op	53:53	0:0	4	[
water	53:54	0:0	4	i
op	53:55	0:0	4	]
op	53:56	0:0	4	->
water	53:58	0:0	4	lang_idx
op	53:66	0:0	4	]
op	53:67	0:0	4	.
water	53:68	0:0	4	langs
decl	54:8	54:63	4	AVStream	*st
op	54:28	0:0	4	=
water	54:30	0:0	4	s
op	54:31	0:0	4	->
water	54:33	0:0	4	streams
op	54:40	0:0	4	[
water	54:41	0:0	4	asf
op	54:44	0:0	4	->
water	54:46	0:0	4	asf_st
op	54:52	0:0	4	[
water	54:53	0:0	4	i
op	54:54	0:0	4	]
op	54:55	0:0	4	->
water	54:57	0:0	4	index
op	54:62	0:0	4	]
call	55:8	55:46	4	set_language
arg	55:21	55:22	5	s
water	55:21	0:0	6	s
arg	55:24	55:31	5	rfc1766
water	55:24	0:0	6	rfc1766
arg	55:33	55:46	5	&st->metadata
op	55:33	0:0	6	&
water	55:34	0:0	6	st
op	55:36	0:0	6	->
water	55:38	0:0	6	metadata
water	55:47	0:0	4	;
water	56:4	0:0	4	}
for	57:4	67:4	2	(i = 0 ;i < ASF_MAX_STREAMS;i ++)
forinit	57:9	57:14	3	i = 0 ;
water	57:9	0:0	4	i
op	57:11	0:0	4	=
water	57:13	0:0	4	0
water	57:14	0:0	4	;
cond	57:16	57:20	3	i < ASF_MAX_STREAMS
water	57:16	0:0	4	i
op	57:18	0:0	4	<
water	57:20	0:0	4	ASF_MAX_STREAMS
forexpr	57:37	57:38	3	i ++
water	57:37	0:0	4	i
op	57:38	0:0	4	++
stmts	57:42	67:4	3	
water	57:42	0:0	4	{
decl	58:8	58:27	4	AVStream	*st
op	58:21	0:0	4	=
water	58:23	0:0	4	NULL
water	59:8	0:0	4	st
op	59:11	0:0	4	=
call	59:13	59:29	4	find_stream
arg	59:25	59:26	5	s
water	59:25	0:0	6	s
arg	59:28	59:29	5	i
water	59:28	0:0	6	i
water	59:30	0:0	4	;
if	60:8	66:8	4	(st)
cond	60:12	60:12	5	st
water	60:12	0:0	6	st
stmts	60:16	66:8	5	
water	60:16	0:0	6	{
call	61:12	61:85	6	av_dict_copy
arg	61:25	61:38	7	&st->metadata
op	61:25	0:0	8	&
water	61:26	0:0	8	st
op	61:28	0:0	8	->
water	61:30	0:0	8	metadata
arg	61:40	61:62	7	asf->asf_sd[i].asf_met
water	61:40	0:0	8	asf
op	61:43	0:0	8	->
water	61:45	0:0	8	asf_sd
op	61:51	0:0	8	[
water	61:52	0:0	8	i
op	61:53	0:0	8	]
op	61:54	0:0	8	.
water	61:55	0:0	8	asf_met
arg	61:64	61:85	7	AV_DICT_IGNORE_SUFFIX
water	61:64	0:0	8	AV_DICT_IGNORE_SUFFIX
water	61:86	0:0	6	;
if	62:12	65:12	6	(asf -> asf_sd [ i ] . aspect_ratio . num > 0 && asf -> asf_sd [ i ] . aspect_ratio . den > 0)
cond	62:16	62:89	7	asf -> asf_sd [ i ] . aspect_ratio . num > 0 && asf -> asf_sd [ i ] . aspect_ratio . den > 0
water	62:16	0:0	8	asf
op	62:19	0:0	8	->
water	62:21	0:0	8	asf_sd
op	62:27	0:0	8	[
water	62:28	0:0	8	i
op	62:29	0:0	8	]
op	62:30	0:0	8	.
water	62:31	0:0	8	aspect_ratio
op	62:43	0:0	8	.
water	62:44	0:0	8	num
op	62:48	0:0	8	>
water	62:50	0:0	8	0
op	62:52	0:0	8	&&
water	62:55	0:0	8	asf
op	62:58	0:0	8	->
water	62:60	0:0	8	asf_sd
op	62:66	0:0	8	[
water	62:67	0:0	8	i
op	62:68	0:0	8	]
op	62:69	0:0	8	.
water	62:70	0:0	8	aspect_ratio
op	62:82	0:0	8	.
water	62:83	0:0	8	den
op	62:87	0:0	8	>
water	62:89	0:0	8	0
stmts	62:92	65:12	7	
water	62:92	0:0	8	{
water	63:16	0:0	8	st
op	63:18	0:0	8	->
water	63:20	0:0	8	sample_aspect_ratio
op	63:39	0:0	8	.
water	63:40	0:0	8	num
op	63:44	0:0	8	=
water	63:46	0:0	8	asf
op	63:49	0:0	8	->
water	63:51	0:0	8	asf_sd
op	63:57	0:0	8	[
water	63:58	0:0	8	i
op	63:59	0:0	8	]
op	63:60	0:0	8	.
water	63:61	0:0	8	aspect_ratio
op	63:73	0:0	8	.
water	63:74	0:0	8	num
water	63:77	0:0	8	;
water	64:16	0:0	8	st
op	64:18	0:0	8	->
water	64:20	0:0	8	sample_aspect_ratio
op	64:39	0:0	8	.
water	64:40	0:0	8	den
op	64:44	0:0	8	=
water	64:46	0:0	8	asf
op	64:49	0:0	8	->
water	64:51	0:0	8	asf_sd
op	64:57	0:0	8	[
water	64:58	0:0	8	i
op	64:59	0:0	8	]
op	64:60	0:0	8	.
water	64:61	0:0	8	aspect_ratio
op	64:73	0:0	8	.
water	64:74	0:0	8	den
water	64:77	0:0	8	;
water	65:12	0:0	8	}
water	66:8	0:0	6	}
water	67:4	0:0	4	}
return	68:4	68:12	2	0
water	68:11	0:0	3	0
label	69:0	69:6	2	failed :
call	70:4	70:20	2	asf_read_close
arg	70:19	70:20	3	s
water	70:19	0:0	4	s
water	70:21	0:0	2	;
return	71:4	71:14	2	ret
water	71:11	0:0	3	ret

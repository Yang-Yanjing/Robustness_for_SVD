func	1:0	24:0	0	static int	mxf_write_opatom_packet
params	1:34	0:0	1	
param	1:35	1:53	2	AVFormatContext *	s
param	1:55	1:68	2	AVPacket *	pkt
param	1:70	1:87	2	MXFIndexEntry *	ie
stmnts	0:0	23:12	1	
decl	3:4	3:34	2	MXFContext	*mxf
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:27	2	AVIOContext	*pb
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	pb
decl	5:4	5:11	2	int	err
if	6:4	13:4	2	(! mxf -> header_written)
cond	6:8	6:14	3	! mxf -> header_written
op	6:8	0:0	4	!
water	6:9	0:0	4	mxf
op	6:12	0:0	4	->
water	6:14	0:0	4	header_written
stmts	6:30	13:4	3	
water	6:30	0:0	4	{
if	7:8	8:22	4	(( err =mxf_write_partition (s ,0 ,0 ,header_open_partition_key ,1 ) ) < 0)
cond	7:12	7:81	5	( err =mxf_write_partition (s ,0 ,0 ,header_open_partition_key ,1 ) ) < 0
water	7:12	0:0	6	(
water	7:13	0:0	6	err
op	7:17	0:0	6	=
call	7:19	7:76	6	mxf_write_partition
arg	7:39	7:40	7	s
water	7:39	0:0	8	s
arg	7:42	7:43	7	0
water	7:42	0:0	8	0
arg	7:45	7:46	7	0
water	7:45	0:0	8	0
arg	7:48	7:73	7	header_open_partition_key
water	7:48	0:0	8	header_open_partition_key
arg	7:75	7:76	7	1
water	7:75	0:0	8	1
water	7:77	0:0	6	)
op	7:79	0:0	6	<
water	7:81	0:0	6	0
stmts	8:12	8:22	5	
return	8:12	8:22	6	err
water	8:19	0:0	7	err
call	9:8	9:28	4	mxf_write_klv_fill
arg	9:27	9:28	5	s
water	9:27	0:0	6	s
water	9:29	0:0	4	;
if	10:8	11:22	4	(( err =mxf_write_opatom_body_partition (s ) ) < 0)
cond	10:12	10:57	5	( err =mxf_write_opatom_body_partition (s ) ) < 0
water	10:12	0:0	6	(
water	10:13	0:0	6	err
op	10:17	0:0	6	=
call	10:19	10:52	6	mxf_write_opatom_body_partition
arg	10:51	10:52	7	s
water	10:51	0:0	8	s
water	10:53	0:0	6	)
op	10:55	0:0	6	<
water	10:57	0:0	6	0
stmts	11:12	11:22	5	
return	11:12	11:22	6	err
water	11:19	0:0	7	err
water	12:8	0:0	4	mxf
op	12:11	0:0	4	->
water	12:13	0:0	4	header_written
op	12:28	0:0	4	=
water	12:30	0:0	4	1
water	12:31	0:0	4	;
water	13:4	0:0	4	}
if	14:4	18:4	2	(! mxf -> edit_unit_byte_count)
cond	14:8	14:14	3	! mxf -> edit_unit_byte_count
op	14:8	0:0	4	!
water	14:9	0:0	4	mxf
op	14:12	0:0	4	->
water	14:14	0:0	4	edit_unit_byte_count
stmts	14:36	18:4	3	
water	14:36	0:0	4	{
water	15:8	0:0	4	mxf
op	15:11	0:0	4	->
water	15:13	0:0	4	index_entries
op	15:26	0:0	4	[
water	15:27	0:0	4	mxf
op	15:30	0:0	4	->
water	15:32	0:0	4	edit_units_count
op	15:48	0:0	4	]
op	15:49	0:0	4	.
water	15:50	0:0	4	offset
op	15:57	0:0	4	=
water	15:59	0:0	4	mxf
op	15:62	0:0	4	->
water	15:64	0:0	4	body_offset
water	15:75	0:0	4	;
water	16:8	0:0	4	mxf
op	16:11	0:0	4	->
water	16:13	0:0	4	index_entries
op	16:26	0:0	4	[
water	16:27	0:0	4	mxf
op	16:30	0:0	4	->
water	16:32	0:0	4	edit_units_count
op	16:48	0:0	4	]
op	16:49	0:0	4	.
water	16:50	0:0	4	flags
op	16:56	0:0	4	=
water	16:58	0:0	4	ie
op	16:60	0:0	4	->
water	16:62	0:0	4	flags
water	16:67	0:0	4	;
water	17:8	0:0	4	mxf
op	17:11	0:0	4	->
water	17:13	0:0	4	index_entries
op	17:26	0:0	4	[
water	17:27	0:0	4	mxf
op	17:30	0:0	4	->
water	17:32	0:0	4	edit_units_count
op	17:48	0:0	4	]
op	17:49	0:0	4	.
water	17:50	0:0	4	temporal_ref
op	17:63	0:0	4	=
water	17:65	0:0	4	ie
op	17:67	0:0	4	->
water	17:69	0:0	4	temporal_ref
water	17:81	0:0	4	;
water	18:4	0:0	4	}
water	19:4	0:0	2	mxf
op	19:7	0:0	2	->
water	19:9	0:0	2	edit_units_count
op	19:25	0:0	2	++
water	19:27	0:0	2	;
call	20:4	20:39	2	avio_write
arg	20:15	20:17	3	pb
water	20:15	0:0	4	pb
arg	20:19	20:28	3	pkt->data
water	20:19	0:0	4	pkt
op	20:22	0:0	4	->
water	20:24	0:0	4	data
arg	20:30	20:39	3	pkt->size
water	20:30	0:0	4	pkt
op	20:33	0:0	4	->
water	20:35	0:0	4	size
water	20:40	0:0	2	;
water	21:4	0:0	2	mxf
op	21:7	0:0	2	->
water	21:9	0:0	2	body_offset
op	21:21	0:0	2	+=
water	21:24	0:0	2	pkt
op	21:27	0:0	2	->
water	21:29	0:0	2	size
water	21:33	0:0	2	;
call	22:4	22:17	2	avio_flush
arg	22:15	22:17	3	pb
water	22:15	0:0	4	pb
water	22:18	0:0	2	;
return	23:4	23:12	2	0
water	23:11	0:0	3	0

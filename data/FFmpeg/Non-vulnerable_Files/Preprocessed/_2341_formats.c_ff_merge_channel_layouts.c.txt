func	1:0	81:0	0	AVFilterChannelLayouts *	ff_merge_channel_layouts
params	1:48	0:0	1	
param	1:49	1:74	2	AVFilterChannelLayouts *	a
param	2:49	2:74	2	AVFilterChannelLayouts *	b
stmnts	0:0	80:15	1	
decl	4:4	4:38	2	AVFilterChannelLayouts	*ret
op	4:32	0:0	2	=
water	4:34	0:0	2	NULL
water	5:4	0:0	2	unsigned
water	5:13	0:0	2	a_all
op	5:19	0:0	2	=
water	5:21	0:0	2	a
op	5:22	0:0	2	->
water	5:24	0:0	2	all_layouts
op	5:36	0:0	2	+
water	5:38	0:0	2	a
op	5:39	0:0	2	->
water	5:41	0:0	2	all_counts
water	5:51	0:0	2	;
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	b_all
op	6:19	0:0	2	=
water	6:21	0:0	2	b
op	6:22	0:0	2	->
water	6:24	0:0	2	all_layouts
op	6:36	0:0	2	+
water	6:38	0:0	2	b
op	6:39	0:0	2	->
water	6:41	0:0	2	all_counts
water	6:51	0:0	2	;
decl	7:4	7:40	2	int	ret_max
water	7:15	0:0	2	,
decl	7:4	7:40	2	int	ret_nb
op	7:24	0:0	2	=
water	7:26	0:0	2	0
water	7:27	0:0	2	,
decl	7:4	7:40	2	int	i
water	7:30	0:0	2	,
decl	7:4	7:40	2	int	j
water	7:33	0:0	2	,
decl	7:4	7:40	2	int	round
if	8:4	8:24	2	(a == b)
cond	8:8	8:13	3	a == b
water	8:8	0:0	4	a
op	8:10	0:0	4	==
water	8:13	0:0	4	b
stmts	8:16	8:24	3	
return	8:16	8:24	4	a
water	8:23	0:0	5	a
if	10:4	13:4	2	(a_all < b_all)
cond	10:8	10:16	3	a_all < b_all
water	10:8	0:0	4	a_all
op	10:14	0:0	4	<
water	10:16	0:0	4	b_all
stmts	10:23	13:4	3	
water	10:23	0:0	4	{
call	11:8	11:45	4	FFSWAP
arg	11:15	11:39	5	AVFilterChannelLayouts*
water	11:15	0:0	6	AVFilterChannelLayouts
op	11:38	0:0	6	*
arg	11:41	11:42	5	a
water	11:41	0:0	6	a
arg	11:44	11:45	5	b
water	11:44	0:0	6	b
water	11:46	0:0	4	;
call	12:8	12:37	4	FFSWAP
arg	12:15	12:23	5	unsigned
water	12:15	0:0	6	unsigned
arg	12:25	12:30	5	a_all
water	12:25	0:0	6	a_all
arg	12:32	12:37	5	b_all
water	12:32	0:0	6	b_all
water	12:38	0:0	4	;
water	13:4	0:0	4	}
if	14:4	28:4	2	(a_all)
cond	14:8	14:8	3	a_all
water	14:8	0:0	4	a_all
stmts	14:15	28:4	3	
water	14:15	0:0	4	{
if	15:8	25:8	4	(a_all == 1 && ! b_all)
cond	15:12	15:27	5	a_all == 1 && ! b_all
water	15:12	0:0	6	a_all
op	15:18	0:0	6	==
water	15:21	0:0	6	1
op	15:23	0:0	6	&&
op	15:26	0:0	6	!
water	15:27	0:0	6	b_all
stmts	15:34	25:8	5	
water	15:34	0:0	6	{
for	17:12	19:67	6	(i = j = 0 ;i < b -> nb_channel_layouts;i ++)
forinit	17:17	17:26	7	i = j = 0 ;
water	17:17	0:0	8	i
op	17:19	0:0	8	=
water	17:21	0:0	8	j
op	17:23	0:0	8	=
water	17:25	0:0	8	0
water	17:26	0:0	8	;
cond	17:28	17:35	7	i < b -> nb_channel_layouts
water	17:28	0:0	8	i
op	17:30	0:0	8	<
water	17:32	0:0	8	b
op	17:33	0:0	8	->
water	17:35	0:0	8	nb_channel_layouts
forexpr	17:55	17:56	7	i ++
water	17:55	0:0	8	i
op	17:56	0:0	8	++
stmts	18:16	19:67	7	
if	18:16	19:67	8	(KNOWN (b -> channel_layouts [ i ] ))
cond	18:20	18:47	9	KNOWN (b -> channel_layouts [ i ] )
call	18:20	18:47	10	KNOWN
arg	18:26	18:47	11	b->channel_layouts[i]
water	18:26	0:0	12	b
op	18:27	0:0	12	->
water	18:29	0:0	12	channel_layouts
op	18:44	0:0	12	[
water	18:45	0:0	12	i
op	18:46	0:0	12	]
stmts	19:20	19:67	9	
water	19:20	0:0	10	b
op	19:21	0:0	10	->
water	19:23	0:0	10	channel_layouts
op	19:38	0:0	10	[
water	19:39	0:0	10	j
op	19:40	0:0	10	++
op	19:42	0:0	10	]
op	19:44	0:0	10	=
water	19:46	0:0	10	b
op	19:47	0:0	10	->
water	19:49	0:0	10	channel_layouts
op	19:64	0:0	10	[
water	19:65	0:0	10	i
op	19:66	0:0	10	]
water	19:67	0:0	10	;
if	22:12	23:27	6	(! j)
cond	22:16	22:17	7	! j
op	22:16	0:0	8	!
water	22:17	0:0	8	j
stmts	23:16	23:27	7	
return	23:16	23:27	8	NULL
water	23:23	0:0	9	NULL
water	24:12	0:0	6	b
op	24:13	0:0	6	->
water	24:15	0:0	6	nb_channel_layouts
op	24:34	0:0	6	=
water	24:36	0:0	6	j
water	24:37	0:0	6	;
water	25:8	0:0	6	}
call	26:8	26:69	4	MERGE_REF
arg	26:18	26:19	5	b
water	26:18	0:0	6	b
arg	26:21	26:22	5	a
water	26:21	0:0	6	a
arg	26:24	26:39	5	channel_layouts
water	26:24	0:0	6	channel_layouts
arg	26:41	26:63	5	AVFilterChannelLayouts
water	26:41	0:0	6	AVFilterChannelLayouts
arg	26:65	26:69	5	fail
water	26:65	0:0	6	fail
water	26:70	0:0	4	;
return	27:8	27:16	4	b
water	27:15	0:0	5	b
water	28:4	0:0	4	}
water	29:4	0:0	2	ret_max
op	29:12	0:0	2	=
water	29:14	0:0	2	a
op	29:15	0:0	2	->
water	29:17	0:0	2	nb_channel_layouts
op	29:36	0:0	2	+
water	29:38	0:0	2	b
op	29:39	0:0	2	->
water	29:41	0:0	2	nb_channel_layouts
water	29:59	0:0	2	;
if	30:4	33:17	2	(! ( ret =av_mallocz (sizeof ( * ret ) ) ) || ! ( ret -> channel_layouts =av_malloc_array (ret_max ,sizeof ( * ret -> channel_layouts ) ) ))
cond	30:8	32:79	3	! ( ret =av_mallocz (sizeof ( * ret ) ) ) || ! ( ret -> channel_layouts =av_malloc_array (ret_max ,sizeof ( * ret -> channel_layouts ) ) )
op	30:8	0:0	4	!
water	30:9	0:0	4	(
water	30:10	0:0	4	ret
op	30:14	0:0	4	=
call	30:16	30:39	4	av_mallocz
arg	30:27	30:39	5	sizeof(*ret)
op	30:27	0:0	6	sizeof
water	30:33	0:0	6	(
op	30:34	0:0	6	*
water	30:35	0:0	6	ret
water	30:38	0:0	6	)
water	30:40	0:0	4	)
op	30:42	0:0	4	||
op	31:8	0:0	4	!
water	31:9	0:0	4	(
water	31:10	0:0	4	ret
op	31:13	0:0	4	->
water	31:15	0:0	4	channel_layouts
op	31:31	0:0	4	=
call	31:33	32:78	4	av_malloc_array
arg	31:49	31:56	5	ret_max
water	31:49	0:0	6	ret_max
arg	32:49	32:78	5	sizeof(*ret->channel_layouts)
op	32:49	0:0	6	sizeof
water	32:55	0:0	6	(
op	32:56	0:0	6	*
water	32:57	0:0	6	ret
op	32:60	0:0	6	->
water	32:62	0:0	6	channel_layouts
water	32:77	0:0	6	)
water	32:79	0:0	4	)
stmts	33:8	33:17	3	
goto	33:8	33:17	4	fail
water	33:13	0:0	5	fail
for	35:4	44:4	2	(i = 0 ;i < a -> nb_channel_layouts;i ++)
forinit	35:9	35:14	3	i = 0 ;
water	35:9	0:0	4	i
op	35:11	0:0	4	=
water	35:13	0:0	4	0
water	35:14	0:0	4	;
cond	35:16	35:23	3	i < a -> nb_channel_layouts
water	35:16	0:0	4	i
op	35:18	0:0	4	<
water	35:20	0:0	4	a
op	35:21	0:0	4	->
water	35:23	0:0	4	nb_channel_layouts
forexpr	35:43	35:44	3	i ++
water	35:43	0:0	4	i
op	35:44	0:0	4	++
stmts	35:48	44:4	3	
water	35:48	0:0	4	{
if	36:8	37:20	4	(!KNOWN (a -> channel_layouts [ i ] ))
cond	36:12	36:40	5	!KNOWN (a -> channel_layouts [ i ] )
op	36:12	0:0	6	!
call	36:13	36:40	6	KNOWN
arg	36:19	36:40	7	a->channel_layouts[i]
water	36:19	0:0	8	a
op	36:20	0:0	8	->
water	36:22	0:0	8	channel_layouts
op	36:37	0:0	8	[
water	36:38	0:0	8	i
op	36:39	0:0	8	]
stmts	37:12	37:20	5	
continue	37:12	37:20	6	
for	38:8	43:8	4	(j = 0 ;j < b -> nb_channel_layouts;j ++)
forinit	38:13	38:18	5	j = 0 ;
water	38:13	0:0	6	j
op	38:15	0:0	6	=
water	38:17	0:0	6	0
water	38:18	0:0	6	;
cond	38:20	38:27	5	j < b -> nb_channel_layouts
water	38:20	0:0	6	j
op	38:22	0:0	6	<
water	38:24	0:0	6	b
op	38:25	0:0	6	->
water	38:27	0:0	6	nb_channel_layouts
forexpr	38:47	38:48	5	j ++
water	38:47	0:0	6	j
op	38:48	0:0	6	++
stmts	38:52	43:8	5	
water	38:52	0:0	6	{
if	39:12	42:12	6	(a -> channel_layouts [ i ] == b -> channel_layouts [ j ])
cond	39:16	39:61	7	a -> channel_layouts [ i ] == b -> channel_layouts [ j ]
water	39:16	0:0	8	a
op	39:17	0:0	8	->
water	39:19	0:0	8	channel_layouts
op	39:34	0:0	8	[
water	39:35	0:0	8	i
op	39:36	0:0	8	]
op	39:38	0:0	8	==
water	39:41	0:0	8	b
op	39:42	0:0	8	->
water	39:44	0:0	8	channel_layouts
op	39:59	0:0	8	[
water	39:60	0:0	8	j
op	39:61	0:0	8	]
stmts	39:64	42:12	7	
water	39:64	0:0	8	{
water	40:16	0:0	8	ret
op	40:19	0:0	8	->
water	40:21	0:0	8	channel_layouts
op	40:36	0:0	8	[
water	40:37	0:0	8	ret_nb
op	40:43	0:0	8	++
op	40:45	0:0	8	]
op	40:47	0:0	8	=
water	40:49	0:0	8	a
op	40:50	0:0	8	->
water	40:52	0:0	8	channel_layouts
op	40:67	0:0	8	[
water	40:68	0:0	8	i
op	40:69	0:0	8	]
water	40:70	0:0	8	;
water	41:16	0:0	8	a
op	41:17	0:0	8	->
water	41:19	0:0	8	channel_layouts
op	41:34	0:0	8	[
water	41:35	0:0	8	i
op	41:36	0:0	8	]
op	41:38	0:0	8	=
water	41:40	0:0	8	b
op	41:41	0:0	8	->
water	41:43	0:0	8	channel_layouts
op	41:58	0:0	8	[
water	41:59	0:0	8	j
op	41:60	0:0	8	]
op	41:62	0:0	8	=
water	41:64	0:0	8	0
water	41:65	0:0	8	;
water	42:12	0:0	8	}
water	43:8	0:0	6	}
water	44:4	0:0	4	}
for	47:4	59:4	2	(round = 0 ;round < 2;round ++)
forinit	47:9	47:18	3	round = 0 ;
water	47:9	0:0	4	round
op	47:15	0:0	4	=
water	47:17	0:0	4	0
water	47:18	0:0	4	;
cond	47:20	47:28	3	round < 2
water	47:20	0:0	4	round
op	47:26	0:0	4	<
water	47:28	0:0	4	2
forexpr	47:31	47:36	3	round ++
water	47:31	0:0	4	round
op	47:36	0:0	4	++
stmts	47:40	59:4	3	
water	47:40	0:0	4	{
for	48:8	56:8	4	(i = 0 ;i < a -> nb_channel_layouts;i ++)
forinit	48:13	48:18	5	i = 0 ;
water	48:13	0:0	6	i
op	48:15	0:0	6	=
water	48:17	0:0	6	0
water	48:18	0:0	6	;
cond	48:20	48:27	5	i < a -> nb_channel_layouts
water	48:20	0:0	6	i
op	48:22	0:0	6	<
water	48:24	0:0	6	a
op	48:25	0:0	6	->
water	48:27	0:0	6	nb_channel_layouts
forexpr	48:47	48:48	5	i ++
water	48:47	0:0	6	i
op	48:48	0:0	6	++
stmts	48:52	56:8	5	
water	48:52	0:0	6	{
decl	49:12	49:54	6	uint64_t	fmt
op	49:25	0:0	6	=
water	49:27	0:0	6	a
op	49:28	0:0	6	->
water	49:30	0:0	6	channel_layouts
op	49:45	0:0	6	[
water	49:46	0:0	6	i
op	49:47	0:0	6	]
water	49:48	0:0	6	,
decl	49:12	49:54	6	uint64_t	bfmt
if	50:12	51:24	6	(! fmt || !KNOWN (fmt ))
cond	50:16	50:34	7	! fmt || !KNOWN (fmt )
op	50:16	0:0	8	!
water	50:17	0:0	8	fmt
op	50:21	0:0	8	||
op	50:24	0:0	8	!
call	50:25	50:34	8	KNOWN
arg	50:31	50:34	9	fmt
water	50:31	0:0	10	fmt
stmts	51:16	51:24	7	
continue	51:16	51:24	8	
water	52:12	0:0	6	bfmt
op	52:17	0:0	6	=
call	52:19	52:73	6	FF_COUNT2LAYOUT
arg	52:35	52:73	7	av_get_channel_layout_nb_channels(fmt)
call	52:35	52:72	8	av_get_channel_layout_nb_channels
arg	52:69	52:72	9	fmt
water	52:69	0:0	10	fmt
water	52:74	0:0	6	;
for	53:12	55:74	6	(j = 0 ;j < b -> nb_channel_layouts;j ++)
forinit	53:17	53:22	7	j = 0 ;
water	53:17	0:0	8	j
op	53:19	0:0	8	=
water	53:21	0:0	8	0
water	53:22	0:0	8	;
cond	53:24	53:31	7	j < b -> nb_channel_layouts
water	53:24	0:0	8	j
op	53:26	0:0	8	<
water	53:28	0:0	8	b
op	53:29	0:0	8	->
water	53:31	0:0	8	nb_channel_layouts
forexpr	53:51	53:52	7	j ++
water	53:51	0:0	8	j
op	53:52	0:0	8	++
stmts	54:16	55:74	7	
if	54:16	55:74	8	(b -> channel_layouts [ j ] == bfmt)
cond	54:20	54:45	9	b -> channel_layouts [ j ] == bfmt
water	54:20	0:0	10	b
op	54:21	0:0	10	->
water	54:23	0:0	10	channel_layouts
op	54:38	0:0	10	[
water	54:39	0:0	10	j
op	54:40	0:0	10	]
op	54:42	0:0	10	==
water	54:45	0:0	10	bfmt
stmts	55:20	55:74	9	
water	55:20	0:0	10	ret
op	55:23	0:0	10	->
water	55:25	0:0	10	channel_layouts
op	55:40	0:0	10	[
water	55:41	0:0	10	ret_nb
op	55:47	0:0	10	++
op	55:49	0:0	10	]
op	55:51	0:0	10	=
water	55:53	0:0	10	a
op	55:54	0:0	10	->
water	55:56	0:0	10	channel_layouts
op	55:71	0:0	10	[
water	55:72	0:0	10	i
op	55:73	0:0	10	]
water	55:74	0:0	10	;
water	56:8	0:0	6	}
call	58:8	58:45	4	FFSWAP
arg	58:15	58:39	5	AVFilterChannelLayouts*
water	58:15	0:0	6	AVFilterChannelLayouts
op	58:38	0:0	6	*
arg	58:41	58:42	5	a
water	58:41	0:0	6	a
arg	58:44	58:45	5	b
water	58:44	0:0	6	b
water	58:46	0:0	4	;
water	59:4	0:0	4	}
for	61:4	67:4	2	(i = 0 ;i < a -> nb_channel_layouts;i ++)
forinit	61:9	61:14	3	i = 0 ;
water	61:9	0:0	4	i
op	61:11	0:0	4	=
water	61:13	0:0	4	0
water	61:14	0:0	4	;
cond	61:16	61:23	3	i < a -> nb_channel_layouts
water	61:16	0:0	4	i
op	61:18	0:0	4	<
water	61:20	0:0	4	a
op	61:21	0:0	4	->
water	61:23	0:0	4	nb_channel_layouts
forexpr	61:43	61:44	3	i ++
water	61:43	0:0	4	i
op	61:44	0:0	4	++
stmts	61:48	67:4	3	
water	61:48	0:0	4	{
if	62:8	63:20	4	(KNOWN (a -> channel_layouts [ i ] ))
cond	62:12	62:39	5	KNOWN (a -> channel_layouts [ i ] )
call	62:12	62:39	6	KNOWN
arg	62:18	62:39	7	a->channel_layouts[i]
water	62:18	0:0	8	a
op	62:19	0:0	8	->
water	62:21	0:0	8	channel_layouts
op	62:36	0:0	8	[
water	62:37	0:0	8	i
op	62:38	0:0	8	]
stmts	63:12	63:20	5	
continue	63:12	63:20	6	
for	64:8	66:70	4	(j = 0 ;j < b -> nb_channel_layouts;j ++)
forinit	64:13	64:18	5	j = 0 ;
water	64:13	0:0	6	j
op	64:15	0:0	6	=
water	64:17	0:0	6	0
water	64:18	0:0	6	;
cond	64:20	64:27	5	j < b -> nb_channel_layouts
water	64:20	0:0	6	j
op	64:22	0:0	6	<
water	64:24	0:0	6	b
op	64:25	0:0	6	->
water	64:27	0:0	6	nb_channel_layouts
forexpr	64:47	64:48	5	j ++
water	64:47	0:0	6	j
op	64:48	0:0	6	++
stmts	65:12	66:70	5	
if	65:12	66:70	6	(a -> channel_layouts [ i ] == b -> channel_layouts [ j ])
cond	65:16	65:61	7	a -> channel_layouts [ i ] == b -> channel_layouts [ j ]
water	65:16	0:0	8	a
op	65:17	0:0	8	->
water	65:19	0:0	8	channel_layouts
op	65:34	0:0	8	[
water	65:35	0:0	8	i
op	65:36	0:0	8	]
op	65:38	0:0	8	==
water	65:41	0:0	8	b
op	65:42	0:0	8	->
water	65:44	0:0	8	channel_layouts
op	65:59	0:0	8	[
water	65:60	0:0	8	j
op	65:61	0:0	8	]
stmts	66:16	66:70	7	
water	66:16	0:0	8	ret
op	66:19	0:0	8	->
water	66:21	0:0	8	channel_layouts
op	66:36	0:0	8	[
water	66:37	0:0	8	ret_nb
op	66:43	0:0	8	++
op	66:45	0:0	8	]
op	66:47	0:0	8	=
water	66:49	0:0	8	a
op	66:50	0:0	8	->
water	66:52	0:0	8	channel_layouts
op	66:67	0:0	8	[
water	66:68	0:0	8	i
op	66:69	0:0	8	]
water	66:70	0:0	8	;
water	67:4	0:0	4	}
water	68:4	0:0	2	ret
op	68:7	0:0	2	->
water	68:9	0:0	2	nb_channel_layouts
op	68:28	0:0	2	=
water	68:30	0:0	2	ret_nb
water	68:36	0:0	2	;
if	69:4	70:17	2	(! ret -> nb_channel_layouts)
cond	69:8	69:14	3	! ret -> nb_channel_layouts
op	69:8	0:0	4	!
water	69:9	0:0	4	ret
op	69:12	0:0	4	->
water	69:14	0:0	4	nb_channel_layouts
stmts	70:8	70:17	3	
goto	70:8	70:17	4	fail
water	70:13	0:0	5	fail
call	71:4	71:67	2	MERGE_REF
arg	71:14	71:17	3	ret
water	71:14	0:0	4	ret
arg	71:19	71:20	3	a
water	71:19	0:0	4	a
arg	71:22	71:37	3	channel_layouts
water	71:22	0:0	4	channel_layouts
arg	71:39	71:61	3	AVFilterChannelLayouts
water	71:39	0:0	4	AVFilterChannelLayouts
arg	71:63	71:67	3	fail
water	71:63	0:0	4	fail
water	71:68	0:0	2	;
call	72:4	72:67	2	MERGE_REF
arg	72:14	72:17	3	ret
water	72:14	0:0	4	ret
arg	72:19	72:20	3	b
water	72:19	0:0	4	b
arg	72:22	72:37	3	channel_layouts
water	72:22	0:0	4	channel_layouts
arg	72:39	72:61	3	AVFilterChannelLayouts
water	72:39	0:0	4	AVFilterChannelLayouts
arg	72:63	72:67	3	fail
water	72:63	0:0	4	fail
water	72:68	0:0	2	;
return	73:4	73:14	2	ret
water	73:11	0:0	3	ret
label	74:0	74:4	2	fail :
if	75:4	78:4	2	(ret)
cond	75:8	75:8	3	ret
water	75:8	0:0	4	ret
stmts	75:13	78:4	3	
water	75:13	0:0	4	{
call	76:8	76:27	4	av_freep
arg	76:17	76:27	5	&ret->refs
op	76:17	0:0	6	&
water	76:18	0:0	6	ret
op	76:21	0:0	6	->
water	76:23	0:0	6	refs
water	76:28	0:0	4	;
call	77:8	77:38	4	av_freep
arg	77:17	77:38	5	&ret->channel_layouts
op	77:17	0:0	6	&
water	77:18	0:0	6	ret
op	77:21	0:0	6	->
water	77:23	0:0	6	channel_layouts
water	77:39	0:0	4	;
water	78:4	0:0	4	}
call	79:4	79:17	2	av_freep
arg	79:13	79:17	3	&ret
op	79:13	0:0	4	&
water	79:14	0:0	4	ret
water	79:18	0:0	2	;
return	80:4	80:15	2	NULL
water	80:11	0:0	3	NULL

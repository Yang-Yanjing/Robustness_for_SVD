func	2:15	44:0	0	int	init_audio
params	2:29	0:0	1	
param	2:30	2:50	2	AVFilterContext *	ctx
stmnts	0:0	43:14	1	
decl	4:4	4:38	2	BufferSourceContext	*s
op	4:27	0:0	2	=
water	4:29	0:0	2	ctx
op	4:32	0:0	2	->
water	4:34	0:0	2	priv
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
if	6:4	9:4	2	(s -> sample_fmt == AV_SAMPLE_FMT_NONE)
cond	6:8	6:25	3	s -> sample_fmt == AV_SAMPLE_FMT_NONE
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	sample_fmt
op	6:22	0:0	4	==
water	6:25	0:0	4	AV_SAMPLE_FMT_NONE
stmts	6:45	9:4	3	
water	6:45	0:0	4	{
call	7:8	7:78	4	av_log
arg	7:15	7:18	5	ctx
water	7:15	0:0	6	ctx
arg	7:20	7:32	5	AV_LOG_ERROR
water	7:20	0:0	6	AV_LOG_ERROR
arg	7:34	7:78	5	"Sample format was not set or was invalid\n"
water	7:34	0:0	6	"Sample format was not set or was invalid\n"
water	7:79	0:0	4	;
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	4	}
if	10:4	29:4	2	(s -> channel_layout_str)
cond	10:8	10:11	3	s -> channel_layout_str
water	10:8	0:0	4	s
op	10:9	0:0	4	->
water	10:11	0:0	4	channel_layout_str
stmts	10:31	29:4	3	
water	10:31	0:0	4	{
decl	11:8	11:13	4	int	n
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	channel_layout
op	12:26	0:0	4	=
call	12:28	12:71	4	av_get_channel_layout
arg	12:50	12:71	5	s->channel_layout_str
water	12:50	0:0	6	s
op	12:51	0:0	6	->
water	12:53	0:0	6	channel_layout_str
water	12:72	0:0	4	;
if	13:8	17:8	4	(! s -> channel_layout)
cond	13:12	13:16	5	! s -> channel_layout
op	13:12	0:0	6	!
water	13:13	0:0	6	s
op	13:14	0:0	6	->
water	13:16	0:0	6	channel_layout
stmts	13:32	17:8	5	
water	13:32	0:0	6	{
call	14:12	15:40	6	av_log
arg	14:19	14:22	7	ctx
water	14:19	0:0	8	ctx
arg	14:24	14:36	7	AV_LOG_ERROR
water	14:24	0:0	8	AV_LOG_ERROR
arg	14:38	14:68	7	"Invalid channel layout %s.\n"
water	14:38	0:0	8	"Invalid channel layout %s.\n"
arg	15:19	15:40	7	s->channel_layout_str
water	15:19	0:0	8	s
op	15:20	0:0	8	->
water	15:22	0:0	8	channel_layout_str
water	15:41	0:0	6	;
return	16:12	16:34	6	AVERROR(EINVAL)
call	16:19	16:33	7	AVERROR
arg	16:27	16:33	8	EINVAL
water	16:27	0:0	9	EINVAL
water	17:8	0:0	6	}
water	18:8	0:0	4	n
op	18:10	0:0	4	=
call	18:12	18:63	4	av_get_channel_layout_nb_channels
arg	18:46	18:63	5	s->channel_layout
water	18:46	0:0	6	s
op	18:47	0:0	6	->
water	18:49	0:0	6	channel_layout
water	18:64	0:0	4	;
if	19:8	27:8	4	(s -> channels)
cond	19:12	19:15	5	s -> channels
water	19:12	0:0	6	s
op	19:13	0:0	6	->
water	19:15	0:0	6	channels
stmts	19:25	27:8	5	
water	19:25	0:0	6	{
if	20:12	26:12	6	(n != s -> channels)
cond	20:16	20:24	7	n != s -> channels
water	20:16	0:0	8	n
op	20:18	0:0	8	!=
water	20:21	0:0	8	s
op	20:22	0:0	8	->
water	20:24	0:0	8	channels
stmts	20:34	26:12	7	
water	20:34	0:0	8	{
call	21:16	24:60	8	av_log
arg	21:23	21:26	9	ctx
water	21:23	0:0	10	ctx
arg	21:28	21:40	9	AV_LOG_ERROR
water	21:28	0:0	10	AV_LOG_ERROR
arg	22:23	23:40	9	"Mismatching channel count %d and layout '%s' ""(%d channels)\n"
water	22:23	0:0	10	"Mismatching channel count %d and layout '%s' "
water	23:23	0:0	10	"(%d channels)\n"
arg	24:23	24:34	9	s->channels
water	24:23	0:0	10	s
op	24:24	0:0	10	->
water	24:26	0:0	10	channels
arg	24:36	24:57	9	s->channel_layout_str
water	24:36	0:0	10	s
op	24:37	0:0	10	->
water	24:39	0:0	10	channel_layout_str
arg	24:59	24:60	9	n
water	24:59	0:0	10	n
water	24:61	0:0	8	;
return	25:16	25:38	8	AVERROR(EINVAL)
call	25:23	25:37	9	AVERROR
arg	25:31	25:37	10	EINVAL
water	25:31	0:0	11	EINVAL
water	26:12	0:0	8	}
water	27:8	0:0	6	}
water	28:8	0:0	4	s
op	28:9	0:0	4	->
water	28:11	0:0	4	channels
op	28:20	0:0	4	=
water	28:22	0:0	4	n
water	28:23	0:0	4	;
water	29:4	0:0	4	}
else	29:6	33:4	2
stmts	29:11	33:4	3	
if	29:11	33:4	4	(! s -> channels)
cond	29:15	29:19	5	! s -> channels
op	29:15	0:0	6	!
water	29:16	0:0	6	s
op	29:17	0:0	6	->
water	29:19	0:0	6	channels
stmts	29:29	33:4	5	
water	29:29	0:0	6	{
call	30:8	31:62	6	av_log
arg	30:15	30:18	7	ctx
water	30:15	0:0	8	ctx
arg	30:20	30:32	7	AV_LOG_ERROR
water	30:20	0:0	8	AV_LOG_ERROR
arg	30:34	31:62	7	"Neither number of channels nor ""channel layout specified\n"
water	30:34	0:0	8	"Neither number of channels nor "
water	31:34	0:0	8	"channel layout specified\n"
water	31:63	0:0	6	;
return	32:8	32:30	6	AVERROR(EINVAL)
call	32:15	32:29	7	AVERROR
arg	32:23	32:29	8	EINVAL
water	32:23	0:0	9	EINVAL
water	33:4	0:0	6	}
if	34:4	35:30	2	(! ( s -> fifo =av_fifo_alloc (sizeof ( AVFrame * ) ) ))
cond	34:8	34:51	3	! ( s -> fifo =av_fifo_alloc (sizeof ( AVFrame * ) ) )
op	34:8	0:0	4	!
water	34:9	0:0	4	(
water	34:10	0:0	4	s
op	34:11	0:0	4	->
water	34:13	0:0	4	fifo
op	34:18	0:0	4	=
call	34:20	34:50	4	av_fifo_alloc
arg	34:34	34:50	5	sizeof(AVFrame*)
op	34:34	0:0	6	sizeof
water	34:40	0:0	6	(
water	34:41	0:0	6	AVFrame
op	34:48	0:0	6	*
water	34:49	0:0	6	)
water	34:51	0:0	4	)
stmts	35:8	35:30	3	
return	35:8	35:30	4	AVERROR(ENOMEM)
call	35:15	35:29	5	AVERROR
arg	35:23	35:29	6	ENOMEM
water	35:23	0:0	7	ENOMEM
if	36:4	37:54	2	(! s -> time_base . num)
cond	36:8	36:22	3	! s -> time_base . num
op	36:8	0:0	4	!
water	36:9	0:0	4	s
op	36:10	0:0	4	->
water	36:12	0:0	4	time_base
op	36:21	0:0	4	.
water	36:22	0:0	4	num
stmts	37:8	37:54	3	
water	37:8	0:0	4	s
op	37:9	0:0	4	->
water	37:11	0:0	4	time_base
op	37:21	0:0	4	=
water	37:23	0:0	4	(
water	37:24	0:0	4	AVRational
water	37:34	0:0	4	)
water	37:35	0:0	4	{
water	37:36	0:0	4	1
water	37:37	0:0	4	,
water	37:39	0:0	4	s
op	37:40	0:0	4	->
water	37:42	0:0	4	sample_rate
water	37:53	0:0	4	}
water	37:54	0:0	4	;
call	38:4	41:48	2	av_log
arg	38:11	38:14	3	ctx
water	38:11	0:0	4	ctx
arg	38:16	38:30	3	AV_LOG_VERBOSE
water	38:16	0:0	4	AV_LOG_VERBOSE
arg	39:11	39:62	3	"tb:%d/%d samplefmt:%s samplerate:%d chlayout:%s\n"
water	39:11	0:0	4	"tb:%d/%d samplefmt:%s samplerate:%d chlayout:%s\n"
arg	40:11	40:27	3	s->time_base.num
water	40:11	0:0	4	s
op	40:12	0:0	4	->
water	40:14	0:0	4	time_base
op	40:23	0:0	4	.
water	40:24	0:0	4	num
arg	40:29	40:45	3	s->time_base.den
water	40:29	0:0	4	s
op	40:30	0:0	4	->
water	40:32	0:0	4	time_base
op	40:41	0:0	4	.
water	40:42	0:0	4	den
arg	40:47	40:84	3	av_get_sample_fmt_name(s->sample_fmt)
call	40:47	40:83	4	av_get_sample_fmt_name
arg	40:70	40:83	5	s->sample_fmt
water	40:70	0:0	6	s
op	40:71	0:0	6	->
water	40:73	0:0	6	sample_fmt
arg	41:11	41:25	3	s->sample_rate
water	41:11	0:0	4	s
op	41:12	0:0	4	->
water	41:14	0:0	4	sample_rate
arg	41:27	41:48	3	s->channel_layout_str
water	41:27	0:0	4	s
op	41:28	0:0	4	->
water	41:30	0:0	4	channel_layout_str
water	41:49	0:0	2	;
water	42:4	0:0	2	s
op	42:5	0:0	2	->
water	42:7	0:0	2	warning_limit
op	42:21	0:0	2	=
water	42:23	0:0	2	100
water	42:26	0:0	2	;
return	43:4	43:14	2	ret
water	43:11	0:0	3	ret

func	1:8	18:0	0	int	av_cast5_init
params	1:25	0:0	1	
param	1:26	1:37	2	AVCAST5 *	cs
param	1:39	1:57	2	const uint8_t *	key
param	1:59	1:71	2	int	key_bits
stmnts	0:0	17:12	1	
decl	3:4	3:22	2	uint8_t	newKey[16]
decl	4:4	4:9	2	int	i
decl	5:4	5:23	2	uint32_t	p[4]
water	5:17	0:0	2	,
decl	5:4	5:23	2	uint32_t	q[4]
if	6:4	7:17	2	(key_bits % 8 || key_bits < 40 || key_bits > 128)
cond	6:8	6:52	3	key_bits % 8 || key_bits < 40 || key_bits > 128
water	6:8	0:0	4	key_bits
op	6:17	0:0	4	%
water	6:19	0:0	4	8
op	6:21	0:0	4	||
water	6:24	0:0	4	key_bits
op	6:33	0:0	4	<
water	6:35	0:0	4	40
op	6:38	0:0	4	||
water	6:41	0:0	4	key_bits
op	6:50	0:0	4	>
water	6:52	0:0	4	128
stmts	7:8	7:17	3	
return	7:8	7:17	4	-1
op	7:15	0:0	5	-
water	7:16	0:0	5	1
call	8:4	8:36	2	memset
arg	8:11	8:17	3	newKey
water	8:11	0:0	4	newKey
arg	8:19	8:20	3	0
water	8:19	0:0	4	0
arg	8:22	8:36	3	sizeof(newKey)
op	8:22	0:0	4	sizeof
water	8:28	0:0	4	(
water	8:29	0:0	4	newKey
water	8:35	0:0	4	)
water	8:37	0:0	2	;
call	9:4	9:37	2	memcpy
arg	9:11	9:17	3	newKey
water	9:11	0:0	4	newKey
arg	9:19	9:22	3	key
water	9:19	0:0	4	key
arg	9:24	9:37	3	key_bits>>3
water	9:24	0:0	4	key_bits
op	9:33	0:0	4	>>
water	9:36	0:0	4	3
water	9:38	0:0	2	;
water	10:4	0:0	2	cs
op	10:6	0:0	2	->
water	10:8	0:0	2	rounds
op	10:15	0:0	2	=
water	10:17	0:0	2	key_bits
op	10:26	0:0	2	<=
water	10:29	0:0	2	80
water	10:32	0:0	2	?
water	10:34	0:0	2	12
water	10:37	0:0	2	:
water	10:39	0:0	2	16
water	10:41	0:0	2	;
for	11:4	12:40	2	(i = 0 ;i < 4;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:20	3	i < 4
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	4
forexpr	11:23	11:24	3	i ++
water	11:23	0:0	4	i
op	11:24	0:0	4	++
stmts	12:8	12:40	3	
water	12:8	0:0	4	q
op	12:9	0:0	4	[
water	12:10	0:0	4	i
op	12:11	0:0	4	]
op	12:13	0:0	4	=
call	12:15	12:39	4	AV_RB32
arg	12:23	12:39	5	newKey+(4*i)
water	12:23	0:0	6	newKey
op	12:30	0:0	6	+
water	12:32	0:0	6	(
water	12:33	0:0	6	4
op	12:35	0:0	6	*
water	12:37	0:0	6	i
water	12:38	0:0	6	)
water	12:40	0:0	4	;
call	13:4	13:48	2	generate_round_keys
arg	13:24	13:34	3	cs->rounds
water	13:24	0:0	4	cs
op	13:26	0:0	4	->
water	13:28	0:0	4	rounds
arg	13:36	13:42	3	cs->Km
water	13:36	0:0	4	cs
op	13:38	0:0	4	->
water	13:40	0:0	4	Km
arg	13:44	13:45	3	q
water	13:44	0:0	4	q
arg	13:47	13:48	3	p
water	13:47	0:0	4	p
water	13:49	0:0	2	;
call	14:4	14:48	2	generate_round_keys
arg	14:24	14:34	3	cs->rounds
water	14:24	0:0	4	cs
op	14:26	0:0	4	->
water	14:28	0:0	4	rounds
arg	14:36	14:42	3	cs->Kr
water	14:36	0:0	4	cs
op	14:38	0:0	4	->
water	14:40	0:0	4	Kr
arg	14:44	14:45	3	q
water	14:44	0:0	4	q
arg	14:47	14:48	3	p
water	14:47	0:0	4	p
water	14:49	0:0	2	;
for	15:4	16:36	2	(i = 0 ;i <= cs -> rounds;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:25	3	i <= cs -> rounds
water	15:16	0:0	4	i
op	15:18	0:0	4	<=
water	15:21	0:0	4	cs
op	15:23	0:0	4	->
water	15:25	0:0	4	rounds
forexpr	15:33	15:34	3	i ++
water	15:33	0:0	4	i
op	15:34	0:0	4	++
stmts	16:8	16:36	3	
water	16:8	0:0	4	cs
op	16:10	0:0	4	->
water	16:12	0:0	4	Kr
op	16:14	0:0	4	[
water	16:15	0:0	4	i
op	16:16	0:0	4	]
op	16:18	0:0	4	=
water	16:20	0:0	4	cs
op	16:22	0:0	4	->
water	16:24	0:0	4	Kr
op	16:26	0:0	4	[
water	16:27	0:0	4	i
op	16:28	0:0	4	]
op	16:30	0:0	4	&
water	16:32	0:0	4	0
water	16:33	0:0	4	x1f
water	16:36	0:0	4	;
return	17:4	17:12	2	0
water	17:11	0:0	3	0

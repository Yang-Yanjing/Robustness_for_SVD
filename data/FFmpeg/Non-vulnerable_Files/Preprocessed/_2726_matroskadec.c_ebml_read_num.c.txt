func	1:0	35:0	0	static int	ebml_read_num
params	1:24	0:0	1	
param	1:25	1:55	2	MatroskaDemuxContext *	matroska
param	1:57	1:72	2	AVIOContext *	pb
param	2:25	2:37	2	int	max_size
param	2:39	2:55	2	uint64_t *	number
stmnts	0:0	34:15	1	
decl	4:4	4:23	2	int	read
op	4:13	0:0	2	=
water	4:15	0:0	2	1
water	4:16	0:0	2	,
decl	4:4	4:23	2	int	n
op	4:20	0:0	2	=
water	4:22	0:0	2	1
decl	5:4	5:22	2	uint64_t	total
op	5:19	0:0	2	=
water	5:21	0:0	2	0
if	9:4	19:4	2	(! ( total =avio_r8 (pb ) ))
cond	9:8	9:29	3	! ( total =avio_r8 (pb ) )
op	9:8	0:0	4	!
water	9:9	0:0	4	(
water	9:10	0:0	4	total
op	9:16	0:0	4	=
call	9:18	9:28	4	avio_r8
arg	9:26	9:28	5	pb
water	9:26	0:0	6	pb
water	9:29	0:0	4	)
stmts	9:32	19:4	3	
water	9:32	0:0	4	{
if	11:8	17:8	4	(!avio_feof (pb ))
cond	11:12	11:25	5	!avio_feof (pb )
op	11:12	0:0	6	!
call	11:13	11:25	6	avio_feof
arg	11:23	11:25	7	pb
water	11:23	0:0	8	pb
stmts	11:28	17:8	5	
water	11:28	0:0	6	{
decl	12:12	12:39	6	int64_t	pos
op	12:24	0:0	6	=
call	12:26	12:38	7	avio_tell
arg	12:36	12:38	8	pb
water	12:36	0:0	9	pb
call	13:12	15:27	6	av_log
arg	13:19	13:32	7	matroska->ctx
water	13:19	0:0	8	matroska
op	13:27	0:0	8	->
water	13:29	0:0	8	ctx
arg	13:34	13:46	7	AV_LOG_ERROR
water	13:34	0:0	8	AV_LOG_ERROR
arg	14:19	14:65	7	"Read error at pos. %"PRIu64" (0x%"PRIx64")\n"
water	14:19	0:0	8	"Read error at pos. %"
water	14:41	0:0	8	PRIu64
water	14:47	0:0	8	" (0x%"
water	14:54	0:0	8	PRIx64
water	14:60	0:0	8	")\n"
arg	15:19	15:22	7	pos
water	15:19	0:0	8	pos
arg	15:24	15:27	7	pos
water	15:24	0:0	8	pos
water	15:28	0:0	6	;
return	16:12	16:55	6	pb->error?pb->error:AVERROR(EIO)
water	16:19	0:0	7	pb
op	16:21	0:0	7	->
water	16:23	0:0	7	error
water	16:29	0:0	7	?
water	16:31	0:0	7	pb
op	16:33	0:0	7	->
water	16:35	0:0	7	error
water	16:41	0:0	7	:
call	16:43	16:54	7	AVERROR
arg	16:51	16:54	8	EIO
water	16:51	0:0	9	EIO
water	17:8	0:0	6	}
return	18:8	18:26	4	AVERROR_EOF
water	18:15	0:0	5	AVERROR_EOF
water	19:4	0:0	4	}
water	21:4	0:0	2	read
op	21:9	0:0	2	=
water	21:11	0:0	2	8
op	21:13	0:0	2	-
water	21:15	0:0	2	ff_log2_tab
op	21:26	0:0	2	[
water	21:27	0:0	2	total
op	21:32	0:0	2	]
water	21:33	0:0	2	;
if	22:4	28:4	2	(read > max_size)
cond	22:8	22:15	3	read > max_size
water	22:8	0:0	4	read
op	22:13	0:0	4	>
water	22:15	0:0	4	max_size
stmts	22:25	28:4	3	
water	22:25	0:0	4	{
decl	23:8	23:39	4	int64_t	pos
op	23:20	0:0	4	=
call	23:22	23:34	5	avio_tell
arg	23:32	23:34	6	pb
water	23:32	0:0	7	pb
op	23:36	0:0	4	-
water	23:38	0:0	4	1
call	24:8	26:40	4	av_log
arg	24:15	24:28	5	matroska->ctx
water	24:15	0:0	6	matroska
op	24:23	0:0	6	->
water	24:25	0:0	6	ctx
arg	24:30	24:42	5	AV_LOG_ERROR
water	24:30	0:0	6	AV_LOG_ERROR
arg	25:15	25:85	5	"Invalid EBML number size tag 0x%02x at pos %"PRIu64" (0x%"PRIx64")\n"
water	25:15	0:0	6	"Invalid EBML number size tag 0x%02x at pos %"
water	25:61	0:0	6	PRIu64
water	25:67	0:0	6	" (0x%"
water	25:74	0:0	6	PRIx64
water	25:80	0:0	6	")\n"
arg	26:15	26:30	5	(uint8_t)total
water	26:15	0:0	6	(
water	26:16	0:0	6	uint8_t
water	26:23	0:0	6	)
water	26:25	0:0	6	total
arg	26:32	26:35	5	pos
water	26:32	0:0	6	pos
arg	26:37	26:40	5	pos
water	26:37	0:0	6	pos
water	26:41	0:0	4	;
return	27:8	27:34	4	AVERROR_INVALIDDATA
water	27:15	0:0	5	AVERROR_INVALIDDATA
water	28:4	0:0	4	}
water	30:4	0:0	2	total
op	30:10	0:0	2	^=
water	30:13	0:0	2	1
op	30:15	0:0	2	<<
water	30:18	0:0	2	ff_log2_tab
op	30:29	0:0	2	[
water	30:30	0:0	2	total
op	30:35	0:0	2	]
water	30:36	0:0	2	;
while	31:4	32:42	2	(n ++ < read)
cond	31:11	31:17	3	n ++ < read
water	31:11	0:0	4	n
op	31:12	0:0	4	++
op	31:15	0:0	4	<
water	31:17	0:0	4	read
stmts	32:8	32:42	3	
water	32:8	0:0	4	total
op	32:14	0:0	4	=
water	32:16	0:0	4	(
water	32:17	0:0	4	total
op	32:23	0:0	4	<<
water	32:26	0:0	4	8
water	32:27	0:0	4	)
op	32:29	0:0	4	|
call	32:31	32:41	4	avio_r8
arg	32:39	32:41	5	pb
water	32:39	0:0	6	pb
water	32:42	0:0	4	;
op	33:4	0:0	2	*
water	33:5	0:0	2	number
op	33:12	0:0	2	=
water	33:14	0:0	2	total
water	33:19	0:0	2	;
return	34:4	34:15	2	read
water	34:11	0:0	3	read

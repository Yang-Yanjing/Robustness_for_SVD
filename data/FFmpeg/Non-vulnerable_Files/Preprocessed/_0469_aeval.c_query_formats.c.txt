func	1:0	26:0	0	static int	query_formats
params	1:24	0:0	1	
param	1:25	1:45	2	AVFilterContext *	ctx
stmnts	0:0	25:50	1	
decl	3:4	3:33	2	EvalContext	*eval
op	3:22	0:0	2	=
water	3:24	0:0	2	ctx
op	3:27	0:0	2	->
water	3:29	0:0	2	priv
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	enum
water	4:22	0:0	2	AVSampleFormat
water	4:37	0:0	2	sample_fmts
op	4:48	0:0	2	[
op	4:49	0:0	2	]
op	4:51	0:0	2	=
water	4:53	0:0	2	{
water	4:55	0:0	2	AV_SAMPLE_FMT_DBLP
water	4:73	0:0	2	,
water	4:75	0:0	2	AV_SAMPLE_FMT_NONE
water	4:94	0:0	2	}
water	4:95	0:0	2	;
decl	5:4	5:103	2	int64_t	chlayouts[]
op	5:24	0:0	2	=
water	5:26	0:0	2	{
water	5:28	0:0	2	eval
op	5:32	0:0	2	->
water	5:34	0:0	2	chlayout
water	5:43	0:0	2	?
water	5:45	0:0	2	eval
op	5:49	0:0	2	->
water	5:51	0:0	2	chlayout
water	5:60	0:0	2	:
call	5:62	5:95	3	FF_COUNT2LAYOUT
arg	5:78	5:95	4	eval->nb_channels
water	5:78	0:0	5	eval
op	5:82	0:0	5	->
water	5:84	0:0	5	nb_channels
water	5:97	0:0	2	,
op	5:99	0:0	2	-
water	5:100	0:0	2	1
water	5:102	0:0	2	}
decl	6:4	6:50	2	int	sample_rates[]
op	6:23	0:0	2	=
water	6:25	0:0	2	{
water	6:27	0:0	2	eval
op	6:31	0:0	2	->
water	6:33	0:0	2	sample_rate
water	6:44	0:0	2	,
op	6:46	0:0	2	-
water	6:47	0:0	2	1
water	6:49	0:0	2	}
decl	7:4	7:28	2	AVFilterFormats	*formats
decl	8:4	8:35	2	AVFilterChannelLayouts	*layouts
decl	9:4	9:11	2	int	ret
water	10:4	0:0	2	formats
op	10:12	0:0	2	=
call	10:14	10:45	2	ff_make_format_list
arg	10:34	10:45	3	sample_fmts
water	10:34	0:0	4	sample_fmts
water	10:46	0:0	2	;
if	11:4	12:30	2	(! formats)
cond	11:8	11:9	3	! formats
op	11:8	0:0	4	!
water	11:9	0:0	4	formats
stmts	12:8	12:30	3	
return	12:8	12:30	4	AVERROR(ENOMEM)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	ENOMEM
water	12:23	0:0	7	ENOMEM
water	13:4	0:0	2	ret
op	13:8	0:0	2	=
call	13:10	13:45	2	ff_set_common_formats
arg	13:33	13:36	3	ctx
water	13:33	0:0	4	ctx
arg	13:38	13:45	3	formats
water	13:38	0:0	4	formats
water	13:46	0:0	2	;
if	14:4	15:18	2	(ret < 0)
cond	14:8	14:14	3	ret < 0
water	14:8	0:0	4	ret
op	14:12	0:0	4	<
water	14:14	0:0	4	0
stmts	15:8	15:18	3	
return	15:8	15:18	4	ret
water	15:15	0:0	5	ret
water	16:4	0:0	2	layouts
op	16:12	0:0	2	=
call	16:14	16:51	2	avfilter_make_format64_list
arg	16:42	16:51	3	chlayouts
water	16:42	0:0	4	chlayouts
water	16:52	0:0	2	;
if	17:4	18:30	2	(! layouts)
cond	17:8	17:9	3	! layouts
op	17:8	0:0	4	!
water	17:9	0:0	4	layouts
stmts	18:8	18:30	3	
return	18:8	18:30	4	AVERROR(ENOMEM)
call	18:15	18:29	5	AVERROR
arg	18:23	18:29	6	ENOMEM
water	18:23	0:0	7	ENOMEM
water	19:4	0:0	2	ret
op	19:8	0:0	2	=
call	19:10	19:52	2	ff_set_common_channel_layouts
arg	19:40	19:43	3	ctx
water	19:40	0:0	4	ctx
arg	19:45	19:52	3	layouts
water	19:45	0:0	4	layouts
water	19:53	0:0	2	;
if	20:4	21:18	2	(ret < 0)
cond	20:8	20:14	3	ret < 0
water	20:8	0:0	4	ret
op	20:12	0:0	4	<
water	20:14	0:0	4	0
stmts	21:8	21:18	3	
return	21:8	21:18	4	ret
water	21:15	0:0	5	ret
water	22:4	0:0	2	formats
op	22:12	0:0	2	=
call	22:14	22:46	2	ff_make_format_list
arg	22:34	22:46	3	sample_rates
water	22:34	0:0	4	sample_rates
water	22:47	0:0	2	;
if	23:4	24:30	2	(! formats)
cond	23:8	23:9	3	! formats
op	23:8	0:0	4	!
water	23:9	0:0	4	formats
stmts	24:8	24:30	3	
return	24:8	24:30	4	AVERROR(ENOMEM)
call	24:15	24:29	5	AVERROR
arg	24:23	24:29	6	ENOMEM
water	24:23	0:0	7	ENOMEM
return	25:4	25:50	2	ff_set_common_samplerates(ctx,formats)
call	25:11	25:49	3	ff_set_common_samplerates
arg	25:37	25:40	4	ctx
water	25:37	0:0	5	ctx
arg	25:42	25:49	4	formats
water	25:42	0:0	5	formats

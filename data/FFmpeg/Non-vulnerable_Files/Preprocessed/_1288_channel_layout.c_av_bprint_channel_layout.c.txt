func	1:0	30:0	0	void	av_bprint_channel_layout
params	1:29	0:0	1	
param	1:30	1:49	2	struct AVBPrint *	bp
param	2:30	2:45	2	int	nb_channels
param	2:47	2:70	2	uint64_t	channel_layout
stmnts	0:0	29:4	1	
decl	4:4	4:9	2	int	i
if	5:4	6:71	2	(nb_channels <= 0)
cond	5:8	5:23	3	nb_channels <= 0
water	5:8	0:0	4	nb_channels
op	5:20	0:0	4	<=
water	5:23	0:0	4	0
stmts	6:8	6:71	3	
water	6:8	0:0	4	nb_channels
op	6:20	0:0	4	=
call	6:22	6:70	4	av_get_channel_layout_nb_channels
arg	6:56	6:70	5	channel_layout
water	6:56	0:0	6	channel_layout
water	6:71	0:0	4	;
for	7:4	12:8	2	(i = 0 ;i <FF_ARRAY_ELEMS (channel_layout_map );i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:53	3	i <FF_ARRAY_ELEMS (channel_layout_map )
water	7:16	0:0	4	i
op	7:18	0:0	4	<
call	7:20	7:53	4	FF_ARRAY_ELEMS
arg	7:35	7:53	5	channel_layout_map
water	7:35	0:0	6	channel_layout_map
forexpr	7:56	7:57	3	i ++
water	7:56	0:0	4	i
op	7:57	0:0	4	++
stmts	8:8	12:8	3	
if	8:8	12:8	4	(nb_channels == channel_layout_map [ i ] . nb_channels && channel_layout == channel_layout_map [ i ] . layout)
cond	8:12	9:52	5	nb_channels == channel_layout_map [ i ] . nb_channels && channel_layout == channel_layout_map [ i ] . layout
water	8:12	0:0	6	nb_channels
op	8:27	0:0	6	==
water	8:30	0:0	6	channel_layout_map
op	8:48	0:0	6	[
water	8:49	0:0	6	i
op	8:50	0:0	6	]
op	8:51	0:0	6	.
water	8:52	0:0	6	nb_channels
op	8:64	0:0	6	&&
water	9:12	0:0	6	channel_layout
op	9:27	0:0	6	==
water	9:30	0:0	6	channel_layout_map
op	9:48	0:0	6	[
water	9:49	0:0	6	i
op	9:50	0:0	6	]
op	9:51	0:0	6	.
water	9:52	0:0	6	layout
stmts	9:60	12:8	5	
water	9:60	0:0	6	{
call	10:12	10:59	6	av_bprintf
arg	10:23	10:25	7	bp
water	10:23	0:0	8	bp
arg	10:27	10:31	7	"%s"
water	10:27	0:0	8	"%s"
arg	10:33	10:59	7	channel_layout_map[i].name
water	10:33	0:0	8	channel_layout_map
op	10:51	0:0	8	[
water	10:52	0:0	8	i
op	10:53	0:0	8	]
op	10:54	0:0	8	.
water	10:55	0:0	8	name
water	10:60	0:0	6	;
return	11:12	11:18	6	
water	12:8	0:0	6	}
call	13:4	13:45	2	av_bprintf
arg	13:15	13:17	3	bp
water	13:15	0:0	4	bp
arg	13:19	13:32	3	"%d channels"
water	13:19	0:0	4	"%d channels"
arg	13:34	13:45	3	nb_channels
water	13:34	0:0	4	nb_channels
water	13:46	0:0	2	;
if	14:4	29:4	2	(channel_layout)
cond	14:8	14:8	3	channel_layout
water	14:8	0:0	4	channel_layout
stmts	14:24	29:4	3	
water	14:24	0:0	4	{
decl	15:8	15:17	4	int	i
water	15:13	0:0	4	,
decl	15:8	15:17	4	int	ch
call	16:8	16:27	4	av_bprintf
arg	16:19	16:21	5	bp
water	16:19	0:0	6	bp
arg	16:23	16:27	5	" ("
water	16:23	0:0	6	" ("
water	16:28	0:0	4	;
for	17:8	27:8	4	(i = 0 , ch = 0 ;i < 64;i ++)
forinit	17:13	17:26	5	i = 0 , ch = 0 ;
water	17:13	0:0	6	i
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	,
water	17:20	0:0	6	ch
op	17:23	0:0	6	=
water	17:25	0:0	6	0
water	17:26	0:0	6	;
cond	17:28	17:32	5	i < 64
water	17:28	0:0	6	i
op	17:30	0:0	6	<
water	17:32	0:0	6	64
forexpr	17:36	17:37	5	i ++
water	17:36	0:0	6	i
op	17:37	0:0	6	++
stmts	17:41	27:8	5	
water	17:41	0:0	6	{
if	18:12	26:12	6	(( channel_layout & (UINT64_C (1 ) << i ) ))
cond	18:16	18:52	7	( channel_layout & (UINT64_C (1 ) << i ) )
water	18:16	0:0	8	(
water	18:17	0:0	8	channel_layout
op	18:32	0:0	8	&
water	18:34	0:0	8	(
call	18:35	18:45	8	UINT64_C
arg	18:44	18:45	9	1
water	18:44	0:0	10	1
op	18:47	0:0	8	<<
water	18:50	0:0	8	i
water	18:51	0:0	8	)
water	18:52	0:0	8	)
stmts	18:55	26:12	7	
water	18:55	0:0	8	{
decl	19:16	19:54	8	const char	*name
op	19:33	0:0	8	=
call	19:35	19:53	9	get_channel_name
arg	19:52	19:53	10	i
water	19:52	0:0	11	i
if	20:16	24:16	8	(name)
cond	20:20	20:20	9	name
water	20:20	0:0	10	name
stmts	20:26	24:16	9	
water	20:26	0:0	10	{
if	21:20	22:43	10	(ch > 0)
cond	21:24	21:29	11	ch > 0
water	21:24	0:0	12	ch
op	21:27	0:0	12	>
water	21:29	0:0	12	0
stmts	22:24	22:43	11	
call	22:24	22:42	12	av_bprintf
arg	22:35	22:37	13	bp
water	22:35	0:0	14	bp
arg	22:39	22:42	13	"+"
water	22:39	0:0	14	"+"
water	22:43	0:0	12	;
call	23:20	23:45	10	av_bprintf
arg	23:31	23:33	11	bp
water	23:31	0:0	12	bp
arg	23:35	23:39	11	"%s"
water	23:35	0:0	12	"%s"
arg	23:41	23:45	11	name
water	23:41	0:0	12	name
water	23:46	0:0	10	;
water	24:16	0:0	10	}
water	25:16	0:0	8	ch
op	25:18	0:0	8	++
water	25:20	0:0	8	;
water	26:12	0:0	8	}
water	27:8	0:0	6	}
call	28:8	28:26	4	av_bprintf
arg	28:19	28:21	5	bp
water	28:19	0:0	6	bp
arg	28:23	28:26	5	")"
water	28:23	0:0	6	")"
water	28:27	0:0	4	;
water	29:4	0:0	4	}

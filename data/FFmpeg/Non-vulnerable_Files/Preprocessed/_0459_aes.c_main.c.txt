func	1:0	63:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	62:14	1	
decl	3:4	3:12	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	j
decl	4:4	4:11	2	AVAES	b
water	5:4	0:0	2	uint8_t
water	5:12	0:0	2	rkey
op	5:16	0:0	2	[
water	5:17	0:0	2	2
op	5:18	0:0	2	]
op	5:19	0:0	2	[
water	5:20	0:0	2	16
op	5:22	0:0	2	]
op	5:24	0:0	2	=
water	5:26	0:0	2	{
water	6:8	0:0	2	{
water	6:10	0:0	2	0
water	6:12	0:0	2	}
water	6:13	0:0	2	,
water	7:8	0:0	2	{
water	7:10	0:0	2	0
water	7:11	0:0	2	x10
water	7:14	0:0	2	,
water	7:16	0:0	2	0
water	7:17	0:0	2	xa5
water	7:20	0:0	2	,
water	7:22	0:0	2	0
water	7:23	0:0	2	x88
water	7:26	0:0	2	,
water	7:28	0:0	2	0
water	7:29	0:0	2	x69
water	7:32	0:0	2	,
water	7:34	0:0	2	0
water	7:35	0:0	2	xd7
water	7:38	0:0	2	,
water	7:40	0:0	2	0
water	7:41	0:0	2	x4b
water	7:44	0:0	2	,
water	7:46	0:0	2	0
water	7:47	0:0	2	xe5
water	7:50	0:0	2	,
water	7:52	0:0	2	0
water	7:53	0:0	2	xa3
water	7:56	0:0	2	,
water	8:10	0:0	2	0
water	8:11	0:0	2	x74
water	8:14	0:0	2	,
water	8:16	0:0	2	0
water	8:17	0:0	2	xcf
water	8:20	0:0	2	,
water	8:22	0:0	2	0
water	8:23	0:0	2	x86
water	8:26	0:0	2	,
water	8:28	0:0	2	0
water	8:29	0:0	2	x7c
water	8:32	0:0	2	,
water	8:34	0:0	2	0
water	8:35	0:0	2	xfb
water	8:38	0:0	2	,
water	8:40	0:0	2	0
water	8:41	0:0	2	x47
water	8:44	0:0	2	,
water	8:46	0:0	2	0
water	8:47	0:0	2	x38
water	8:50	0:0	2	,
water	8:52	0:0	2	0
water	8:53	0:0	2	x59
water	8:57	0:0	2	}
water	9:4	0:0	2	}
water	9:5	0:0	2	;
water	10:4	0:0	2	uint8_t
water	10:12	0:0	2	pt
op	10:14	0:0	2	[
water	10:15	0:0	2	16
op	10:17	0:0	2	]
water	10:18	0:0	2	,
water	10:20	0:0	2	rpt
op	10:23	0:0	2	[
water	10:24	0:0	2	2
op	10:25	0:0	2	]
op	10:26	0:0	2	[
water	10:27	0:0	2	16
op	10:29	0:0	2	]
op	10:30	0:0	2	=
water	10:32	0:0	2	{
water	11:8	0:0	2	{
water	11:10	0:0	2	0
water	11:11	0:0	2	x6a
water	11:14	0:0	2	,
water	11:16	0:0	2	0
water	11:17	0:0	2	x84
water	11:20	0:0	2	,
water	11:22	0:0	2	0
water	11:23	0:0	2	x86
water	11:26	0:0	2	,
water	11:28	0:0	2	0
water	11:29	0:0	2	x7c
water	11:32	0:0	2	,
water	11:34	0:0	2	0
water	11:35	0:0	2	xd7
water	11:38	0:0	2	,
water	11:40	0:0	2	0
water	11:41	0:0	2	x7e
water	11:44	0:0	2	,
water	11:46	0:0	2	0
water	11:47	0:0	2	x12
water	11:50	0:0	2	,
water	11:52	0:0	2	0
water	11:53	0:0	2	xad
water	11:56	0:0	2	,
water	12:10	0:0	2	0
water	12:11	0:0	2	x07
water	12:14	0:0	2	,
water	12:16	0:0	2	0
water	12:17	0:0	2	xea
water	12:20	0:0	2	,
water	12:22	0:0	2	0
water	12:23	0:0	2	x1b
water	12:26	0:0	2	,
water	12:28	0:0	2	0
water	12:29	0:0	2	xe8
water	12:32	0:0	2	,
water	12:34	0:0	2	0
water	12:35	0:0	2	x95
water	12:38	0:0	2	,
water	12:40	0:0	2	0
water	12:41	0:0	2	xc5
water	12:44	0:0	2	,
water	12:46	0:0	2	0
water	12:47	0:0	2	x3f
water	12:50	0:0	2	,
water	12:52	0:0	2	0
water	12:53	0:0	2	xa3
water	12:57	0:0	2	}
water	12:58	0:0	2	,
water	13:8	0:0	2	{
water	13:10	0:0	2	0
water	13:12	0:0	2	}
water	14:4	0:0	2	}
water	14:5	0:0	2	;
water	15:4	0:0	2	uint8_t
water	15:12	0:0	2	rct
op	15:15	0:0	2	[
water	15:16	0:0	2	2
op	15:17	0:0	2	]
op	15:18	0:0	2	[
water	15:19	0:0	2	16
op	15:21	0:0	2	]
op	15:22	0:0	2	=
water	15:24	0:0	2	{
water	16:8	0:0	2	{
water	16:10	0:0	2	0
water	16:11	0:0	2	x73
water	16:14	0:0	2	,
water	16:16	0:0	2	0
water	16:17	0:0	2	x22
water	16:20	0:0	2	,
water	16:22	0:0	2	0
water	16:23	0:0	2	x81
water	16:26	0:0	2	,
water	16:28	0:0	2	0
water	16:29	0:0	2	xc0
water	16:32	0:0	2	,
water	16:34	0:0	2	0
water	16:35	0:0	2	xa0
water	16:38	0:0	2	,
water	16:40	0:0	2	0
water	16:41	0:0	2	xaa
water	16:44	0:0	2	,
water	16:46	0:0	2	0
water	16:47	0:0	2	xb8
water	16:50	0:0	2	,
water	16:52	0:0	2	0
water	16:53	0:0	2	xf7
water	16:56	0:0	2	,
water	17:10	0:0	2	0
water	17:11	0:0	2	xa5
water	17:14	0:0	2	,
water	17:16	0:0	2	0
water	17:17	0:0	2	x4a
water	17:20	0:0	2	,
water	17:22	0:0	2	0
water	17:23	0:0	2	x0c
water	17:26	0:0	2	,
water	17:28	0:0	2	0
water	17:29	0:0	2	x67
water	17:32	0:0	2	,
water	17:34	0:0	2	0
water	17:35	0:0	2	xa0
water	17:38	0:0	2	,
water	17:40	0:0	2	0
water	17:41	0:0	2	xc4
water	17:44	0:0	2	,
water	17:46	0:0	2	0
water	17:47	0:0	2	x5e
water	17:50	0:0	2	,
water	17:52	0:0	2	0
water	17:53	0:0	2	xcf
water	17:57	0:0	2	}
water	17:58	0:0	2	,
water	18:8	0:0	2	{
water	18:10	0:0	2	0
water	18:11	0:0	2	x6d
water	18:14	0:0	2	,
water	18:16	0:0	2	0
water	18:17	0:0	2	x25
water	18:20	0:0	2	,
water	18:22	0:0	2	0
water	18:23	0:0	2	x1e
water	18:26	0:0	2	,
water	18:28	0:0	2	0
water	18:29	0:0	2	x69
water	18:32	0:0	2	,
water	18:34	0:0	2	0
water	18:35	0:0	2	x44
water	18:38	0:0	2	,
water	18:40	0:0	2	0
water	18:41	0:0	2	xb0
water	18:44	0:0	2	,
water	18:46	0:0	2	0
water	18:47	0:0	2	x51
water	18:50	0:0	2	,
water	18:52	0:0	2	0
water	18:53	0:0	2	xe0
water	18:56	0:0	2	,
water	19:10	0:0	2	0
water	19:11	0:0	2	x4e
water	19:14	0:0	2	,
water	19:16	0:0	2	0
water	19:17	0:0	2	xaa
water	19:20	0:0	2	,
water	19:22	0:0	2	0
water	19:23	0:0	2	x6f
water	19:26	0:0	2	,
water	19:28	0:0	2	0
water	19:29	0:0	2	xb4
water	19:32	0:0	2	,
water	19:34	0:0	2	0
water	19:35	0:0	2	xdb
water	19:38	0:0	2	,
water	19:40	0:0	2	0
water	19:41	0:0	2	xf7
water	19:44	0:0	2	,
water	19:46	0:0	2	0
water	19:47	0:0	2	x84
water	19:50	0:0	2	,
water	19:52	0:0	2	0
water	19:53	0:0	2	x65
water	19:57	0:0	2	}
water	20:4	0:0	2	}
water	20:5	0:0	2	;
decl	21:4	21:20	2	uint8_t	temp[16]
decl	22:4	22:15	2	int	err
op	22:12	0:0	2	=
water	22:14	0:0	2	0
call	23:4	23:33	2	av_log_set_level
arg	23:21	23:33	3	AV_LOG_DEBUG
water	23:21	0:0	4	AV_LOG_DEBUG
water	23:34	0:0	2	;
for	24:4	34:4	2	(i = 0 ;i < 2;i ++)
forinit	24:9	24:14	3	i = 0 ;
water	24:9	0:0	4	i
op	24:11	0:0	4	=
water	24:13	0:0	4	0
water	24:14	0:0	4	;
cond	24:16	24:20	3	i < 2
water	24:16	0:0	4	i
op	24:18	0:0	4	<
water	24:20	0:0	4	2
forexpr	24:23	24:24	3	i ++
water	24:23	0:0	4	i
op	24:24	0:0	4	++
stmts	24:28	34:4	3	
water	24:28	0:0	4	{
call	25:8	25:39	4	av_aes_init
arg	25:20	25:22	5	&b
op	25:20	0:0	6	&
water	25:21	0:0	6	b
arg	25:24	25:31	5	rkey[i]
water	25:24	0:0	6	rkey
op	25:28	0:0	6	[
water	25:29	0:0	6	i
op	25:30	0:0	6	]
arg	25:33	25:36	5	128
water	25:33	0:0	6	128
arg	25:38	25:39	5	1
water	25:38	0:0	6	1
water	25:40	0:0	4	;
call	26:8	26:49	4	av_aes_crypt
arg	26:21	26:23	5	&b
op	26:21	0:0	6	&
water	26:22	0:0	6	b
arg	26:25	26:29	5	temp
water	26:25	0:0	6	temp
arg	26:31	26:37	5	rct[i]
water	26:31	0:0	6	rct
op	26:34	0:0	6	[
water	26:35	0:0	6	i
op	26:36	0:0	6	]
arg	26:39	26:40	5	1
water	26:39	0:0	6	1
arg	26:42	26:46	5	NULL
water	26:42	0:0	6	NULL
arg	26:48	26:49	5	1
water	26:48	0:0	6	1
water	26:50	0:0	4	;
for	27:8	33:8	4	(j = 0 ;j < 16;j ++)
forinit	27:13	27:18	5	j = 0 ;
water	27:13	0:0	6	j
op	27:15	0:0	6	=
water	27:17	0:0	6	0
water	27:18	0:0	6	;
cond	27:20	27:24	5	j < 16
water	27:20	0:0	6	j
op	27:22	0:0	6	<
water	27:24	0:0	6	16
forexpr	27:28	27:29	5	j ++
water	27:28	0:0	6	j
op	27:29	0:0	6	++
stmts	27:33	33:8	5	
water	27:33	0:0	6	{
if	28:12	32:12	6	(rpt [ i ] [ j ] != temp [ j ])
cond	28:16	28:35	7	rpt [ i ] [ j ] != temp [ j ]
water	28:16	0:0	8	rpt
op	28:19	0:0	8	[
water	28:20	0:0	8	i
op	28:21	0:0	8	]
op	28:22	0:0	8	[
water	28:23	0:0	8	j
op	28:24	0:0	8	]
op	28:26	0:0	8	!=
water	28:29	0:0	8	temp
op	28:33	0:0	8	[
water	28:34	0:0	8	j
op	28:35	0:0	8	]
stmts	28:38	32:12	7	
water	28:38	0:0	8	{
call	29:16	30:44	8	av_log
arg	29:23	29:27	9	NULL
water	29:23	0:0	10	NULL
arg	29:29	29:41	9	AV_LOG_ERROR
water	29:29	0:0	10	AV_LOG_ERROR
arg	29:43	29:59	9	"%d %02X %02X\n"
water	29:43	0:0	10	"%d %02X %02X\n"
arg	30:23	30:24	9	j
water	30:23	0:0	10	j
arg	30:26	30:35	9	rpt[i][j]
water	30:26	0:0	10	rpt
op	30:29	0:0	10	[
water	30:30	0:0	10	i
op	30:31	0:0	10	]
op	30:32	0:0	10	[
water	30:33	0:0	10	j
op	30:34	0:0	10	]
arg	30:37	30:44	9	temp[j]
water	30:37	0:0	10	temp
op	30:41	0:0	10	[
water	30:42	0:0	10	j
op	30:43	0:0	10	]
water	30:45	0:0	8	;
water	31:16	0:0	8	err
op	31:20	0:0	8	=
water	31:22	0:0	8	1
water	31:23	0:0	8	;
water	32:12	0:0	8	}
water	33:8	0:0	6	}
water	34:4	0:0	4	}
if	35:4	61:4	2	(argc > 1 && !strcmp (argv [ 1 ] ,"-t" ))
cond	35:8	35:41	3	argc > 1 && !strcmp (argv [ 1 ] ,"-t" )
water	35:8	0:0	4	argc
op	35:13	0:0	4	>
water	35:15	0:0	4	1
op	35:17	0:0	4	&&
op	35:20	0:0	4	!
call	35:21	35:41	4	strcmp
arg	35:28	35:35	5	argv[1]
water	35:28	0:0	6	argv
op	35:32	0:0	6	[
water	35:33	0:0	6	1
op	35:34	0:0	6	]
arg	35:37	35:41	5	"-t"
water	35:37	0:0	6	"-t"
stmts	35:44	61:4	3	
water	35:44	0:0	4	{
decl	36:8	36:20	4	AVAES	ae
water	36:16	0:0	4	,
decl	36:8	36:20	4	AVAES	ad
decl	37:8	37:18	4	AVLFG	prng
call	38:8	38:67	4	av_aes_init
arg	38:20	38:23	5	&ae
op	38:20	0:0	6	&
water	38:21	0:0	6	ae
arg	38:25	38:59	5	(constuint8_t*)"PI=3.141592654.."
water	38:25	0:0	6	(
water	38:26	0:0	6	const
water	38:32	0:0	6	uint8_t
op	38:39	0:0	6	*
water	38:40	0:0	6	)
water	38:41	0:0	6	"PI=3.141592654.."
arg	38:61	38:64	5	128
water	38:61	0:0	6	128
arg	38:66	38:67	5	0
water	38:66	0:0	6	0
water	38:68	0:0	4	;
call	39:8	39:67	4	av_aes_init
arg	39:20	39:23	5	&ad
op	39:20	0:0	6	&
water	39:21	0:0	6	ad
arg	39:25	39:59	5	(constuint8_t*)"PI=3.141592654.."
water	39:25	0:0	6	(
water	39:26	0:0	6	const
water	39:32	0:0	6	uint8_t
op	39:39	0:0	6	*
water	39:40	0:0	6	)
water	39:41	0:0	6	"PI=3.141592654.."
arg	39:61	39:64	5	128
water	39:61	0:0	6	128
arg	39:66	39:67	5	1
water	39:66	0:0	6	1
water	39:68	0:0	4	;
call	40:8	40:28	4	av_lfg_init
arg	40:20	40:25	5	&prng
op	40:20	0:0	6	&
water	40:21	0:0	6	prng
arg	40:27	40:28	5	1
water	40:27	0:0	6	1
water	40:29	0:0	4	;
for	41:8	60:8	4	(i = 0 ;i < 10000;i ++)
forinit	41:13	41:18	5	i = 0 ;
water	41:13	0:0	6	i
op	41:15	0:0	6	=
water	41:17	0:0	6	0
water	41:18	0:0	6	;
cond	41:20	41:24	5	i < 10000
water	41:20	0:0	6	i
op	41:22	0:0	6	<
water	41:24	0:0	6	10000
forexpr	41:31	41:32	5	i ++
water	41:31	0:0	6	i
op	41:32	0:0	6	++
stmts	41:36	60:8	5	
water	41:36	0:0	6	{
for	42:12	44:12	6	(j = 0 ;j < 16;j ++)
forinit	42:17	42:22	7	j = 0 ;
water	42:17	0:0	8	j
op	42:19	0:0	8	=
water	42:21	0:0	8	0
water	42:22	0:0	8	;
cond	42:24	42:28	7	j < 16
water	42:24	0:0	8	j
op	42:26	0:0	8	<
water	42:28	0:0	8	16
forexpr	42:32	42:33	7	j ++
water	42:32	0:0	8	j
op	42:33	0:0	8	++
stmts	42:37	44:12	7	
water	42:37	0:0	8	{
water	43:16	0:0	8	pt
op	43:18	0:0	8	[
water	43:19	0:0	8	j
op	43:20	0:0	8	]
op	43:22	0:0	8	=
call	43:24	43:40	8	av_lfg_get
arg	43:35	43:40	9	&prng
op	43:35	0:0	10	&
water	43:36	0:0	10	prng
water	43:41	0:0	8	;
water	44:12	0:0	8	}
water	45:12	0:0	6	{
water	46:16	0:0	6	START_TIMER
water	46:27	0:0	6	;
call	47:16	47:54	6	av_aes_crypt
arg	47:29	47:32	7	&ae
op	47:29	0:0	8	&
water	47:30	0:0	8	ae
arg	47:34	47:38	7	temp
water	47:34	0:0	8	temp
arg	47:40	47:42	7	pt
water	47:40	0:0	8	pt
arg	47:44	47:45	7	1
water	47:44	0:0	8	1
arg	47:47	47:51	7	NULL
water	47:47	0:0	8	NULL
arg	47:53	47:54	7	0
water	47:53	0:0	8	0
water	47:55	0:0	6	;
if	48:16	50:64	6	(! ( i & ( i - 1 ) ))
cond	48:20	48:33	7	! ( i & ( i - 1 ) )
op	48:20	0:0	8	!
water	48:21	0:0	8	(
water	48:22	0:0	8	i
op	48:24	0:0	8	&
water	48:26	0:0	8	(
water	48:27	0:0	8	i
op	48:29	0:0	8	-
water	48:31	0:0	8	1
water	48:32	0:0	8	)
water	48:33	0:0	8	)
stmts	49:20	50:64	7	
call	49:20	50:63	8	av_log
arg	49:27	49:31	9	NULL
water	49:27	0:0	10	NULL
arg	49:33	49:45	9	AV_LOG_ERROR
water	49:33	0:0	10	AV_LOG_ERROR
arg	49:47	49:70	9	"%02X %02X %02X %02X\n"
water	49:47	0:0	10	"%02X %02X %02X %02X\n"
arg	50:27	50:34	9	temp[0]
water	50:27	0:0	10	temp
op	50:31	0:0	10	[
water	50:32	0:0	10	0
op	50:33	0:0	10	]
arg	50:36	50:43	9	temp[5]
water	50:36	0:0	10	temp
op	50:40	0:0	10	[
water	50:41	0:0	10	5
op	50:42	0:0	10	]
arg	50:45	50:53	9	temp[10]
water	50:45	0:0	10	temp
op	50:49	0:0	10	[
water	50:50	0:0	10	10
op	50:52	0:0	10	]
arg	50:55	50:63	9	temp[15]
water	50:55	0:0	10	temp
op	50:59	0:0	10	[
water	50:60	0:0	10	15
op	50:62	0:0	10	]
water	50:64	0:0	8	;
call	51:16	51:56	6	av_aes_crypt
arg	51:29	51:32	7	&ad
op	51:29	0:0	8	&
water	51:30	0:0	8	ad
arg	51:34	51:38	7	temp
water	51:34	0:0	8	temp
arg	51:40	51:44	7	temp
water	51:40	0:0	8	temp
arg	51:46	51:47	7	1
water	51:46	0:0	8	1
arg	51:49	51:53	7	NULL
water	51:49	0:0	8	NULL
arg	51:55	51:56	7	1
water	51:55	0:0	8	1
water	51:57	0:0	6	;
call	52:16	52:32	6	STOP_TIMER
arg	52:27	52:32	7	"aes"
water	52:27	0:0	8	"aes"
water	52:33	0:0	6	;
water	53:12	0:0	6	}
for	54:12	59:12	6	(j = 0 ;j < 16;j ++)
forinit	54:17	54:22	7	j = 0 ;
water	54:17	0:0	8	j
op	54:19	0:0	8	=
water	54:21	0:0	8	0
water	54:22	0:0	8	;
cond	54:24	54:28	7	j < 16
water	54:24	0:0	8	j
op	54:26	0:0	8	<
water	54:28	0:0	8	16
forexpr	54:32	54:33	7	j ++
water	54:32	0:0	8	j
op	54:33	0:0	8	++
stmts	54:37	59:12	7	
water	54:37	0:0	8	{
if	55:16	58:16	8	(pt [ j ] != temp [ j ])
cond	55:20	55:35	9	pt [ j ] != temp [ j ]
water	55:20	0:0	10	pt
op	55:22	0:0	10	[
water	55:23	0:0	10	j
op	55:24	0:0	10	]
op	55:26	0:0	10	!=
water	55:29	0:0	10	temp
op	55:33	0:0	10	[
water	55:34	0:0	10	j
op	55:35	0:0	10	]
stmts	55:38	58:16	9	
water	55:38	0:0	10	{
call	56:20	57:47	10	av_log
arg	56:27	56:31	11	NULL
water	56:27	0:0	12	NULL
arg	56:33	56:45	11	AV_LOG_ERROR
water	56:33	0:0	12	AV_LOG_ERROR
arg	56:47	56:66	11	"%d %d %02X %02X\n"
water	56:47	0:0	12	"%d %d %02X %02X\n"
arg	57:27	57:28	11	i
water	57:27	0:0	12	i
arg	57:30	57:31	11	j
water	57:30	0:0	12	j
arg	57:33	57:38	11	pt[j]
water	57:33	0:0	12	pt
op	57:35	0:0	12	[
water	57:36	0:0	12	j
op	57:37	0:0	12	]
arg	57:40	57:47	11	temp[j]
water	57:40	0:0	12	temp
op	57:44	0:0	12	[
water	57:45	0:0	12	j
op	57:46	0:0	12	]
water	57:48	0:0	10	;
water	58:16	0:0	10	}
water	59:12	0:0	8	}
water	60:8	0:0	6	}
water	61:4	0:0	4	}
return	62:4	62:14	2	err
water	62:11	0:0	3	err

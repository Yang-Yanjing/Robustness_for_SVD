func	1:0	57:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	56:12	1	
decl	3:4	3:31	2	int	opt
water	3:11	0:0	2	,
decl	3:4	3:31	2	int	ret
water	3:16	0:0	2	,
decl	3:4	3:31	2	int	stream
water	3:24	0:0	2	,
decl	3:4	3:31	2	int	flags
decl	4:4	4:24	2	const char	*filename
decl	5:4	5:31	2	AVFormatContext	*avf
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:4	6:30	2	int64_t	min_ts
water	6:18	0:0	2	,
decl	6:4	6:30	2	int64_t	max_ts
water	6:26	0:0	2	,
decl	6:4	6:30	2	int64_t	ts
decl	7:4	7:19	2	AVPacket	packet
while	8:4	15:4	2	(( opt =getopt (argc ,argv ,"h" ) ) != - 1)
cond	8:11	8:47	3	( opt =getopt (argc ,argv ,"h" ) ) != - 1
water	8:11	0:0	4	(
water	8:12	0:0	4	opt
op	8:16	0:0	4	=
call	8:18	8:40	4	getopt
arg	8:25	8:29	5	argc
water	8:25	0:0	6	argc
arg	8:31	8:35	5	argv
water	8:31	0:0	6	argv
arg	8:37	8:40	5	"h"
water	8:37	0:0	6	"h"
water	8:41	0:0	4	)
op	8:43	0:0	4	!=
op	8:46	0:0	4	-
water	8:47	0:0	4	1
stmts	8:50	15:4	3	
water	8:50	0:0	4	{
switch	9:8	14:8	4	(opt)
cond	9:16	9:16	5	opt
water	9:16	0:0	6	opt
stmts	9:21	14:8	5	
water	9:21	0:0	6	{
water	10:8	0:0	6	case
water	10:13	0:0	6	'h'
water	10:16	0:0	6	:
call	11:12	11:19	6	usage
arg	11:18	11:19	7	0
water	11:18	0:0	8	0
water	11:20	0:0	6	;
label	12:8	12:15	6	default :
call	13:12	13:19	6	usage
arg	13:18	13:19	7	1
water	13:18	0:0	8	1
water	13:20	0:0	6	;
water	14:8	0:0	6	}
water	15:4	0:0	4	}
water	16:4	0:0	2	argc
op	16:9	0:0	2	-=
water	16:12	0:0	2	optind
water	16:18	0:0	2	;
water	17:4	0:0	2	argv
op	17:9	0:0	2	+=
water	17:12	0:0	2	optind
water	17:18	0:0	2	;
if	18:4	19:16	2	(! argc)
cond	18:8	18:9	3	! argc
op	18:8	0:0	4	!
water	18:9	0:0	4	argc
stmts	19:8	19:16	3	
call	19:8	19:15	4	usage
arg	19:14	19:15	5	1
water	19:14	0:0	6	1
water	19:16	0:0	4	;
water	20:4	0:0	2	filename
op	20:13	0:0	2	=
op	20:15	0:0	2	*
water	20:16	0:0	2	argv
water	20:20	0:0	2	;
water	21:4	0:0	2	argv
op	21:8	0:0	2	++
water	21:10	0:0	2	;
water	22:4	0:0	2	argc
op	22:8	0:0	2	--
water	22:10	0:0	2	;
call	23:4	23:20	2	av_register_all
water	23:21	0:0	2	;
if	24:4	27:4	2	(( ret =avformat_open_input (& avf ,filename ,NULL ,NULL ) ) < 0)
cond	24:8	24:66	3	( ret =avformat_open_input (& avf ,filename ,NULL ,NULL ) ) < 0
water	24:8	0:0	4	(
water	24:9	0:0	4	ret
op	24:13	0:0	4	=
call	24:15	24:61	4	avformat_open_input
arg	24:35	24:39	5	&avf
op	24:35	0:0	6	&
water	24:36	0:0	6	avf
arg	24:41	24:49	5	filename
water	24:41	0:0	6	filename
arg	24:51	24:55	5	NULL
water	24:51	0:0	6	NULL
arg	24:57	24:61	5	NULL
water	24:57	0:0	6	NULL
water	24:62	0:0	4	)
op	24:64	0:0	4	<
water	24:66	0:0	4	0
stmts	24:69	27:4	3	
water	24:69	0:0	4	{
call	25:8	25:61	4	fprintf
arg	25:16	25:22	5	stderr
water	25:16	0:0	6	stderr
arg	25:24	25:34	5	"%s: %s\n"
water	25:24	0:0	6	"%s: %s\n"
arg	25:36	25:44	5	filename
water	25:36	0:0	6	filename
arg	25:46	25:61	5	av_err2str(ret)
call	25:46	25:60	6	av_err2str
arg	25:57	25:60	7	ret
water	25:57	0:0	8	ret
water	25:62	0:0	4	;
return	26:8	26:16	4	1
water	26:15	0:0	5	1
water	27:4	0:0	4	}
if	28:4	32:4	2	(( ret =avformat_find_stream_info (avf ,NULL ) ) < 0)
cond	28:8	28:55	3	( ret =avformat_find_stream_info (avf ,NULL ) ) < 0
water	28:8	0:0	4	(
water	28:9	0:0	4	ret
op	28:13	0:0	4	=
call	28:15	28:50	4	avformat_find_stream_info
arg	28:41	28:44	5	avf
water	28:41	0:0	6	avf
arg	28:46	28:50	5	NULL
water	28:46	0:0	6	NULL
water	28:51	0:0	4	)
op	28:53	0:0	4	<
water	28:55	0:0	4	0
stmts	28:58	32:4	3	
water	28:58	0:0	4	{
call	29:8	30:31	4	fprintf
arg	29:16	29:22	5	stderr
water	29:16	0:0	6	stderr
arg	29:24	29:67	5	"%s: could not find codec parameters: %s\n"
water	29:24	0:0	6	"%s: could not find codec parameters: %s\n"
arg	29:69	29:77	5	filename
water	29:69	0:0	6	filename
arg	30:16	30:31	5	av_err2str(ret)
call	30:16	30:30	6	av_err2str
arg	30:27	30:30	7	ret
water	30:27	0:0	8	ret
water	30:32	0:0	4	;
return	31:8	31:16	4	1
water	31:15	0:0	5	1
water	32:4	0:0	4	}
for	33:4	54:4	2	(;argc;argc -- , argv ++)
forinit	33:9	33:9	3	;
water	33:9	0:0	4	;
cond	33:11	33:11	3	argc
water	33:11	0:0	4	argc
forexpr	33:17	33:29	3	argc -- , argv ++
water	33:17	0:0	4	argc
op	33:21	0:0	4	--
water	33:23	0:0	4	,
water	33:25	0:0	4	argv
op	33:29	0:0	4	++
stmts	33:33	54:4	3	
water	33:33	0:0	4	{
if	34:8	46:8	4	(!strcmp (* argv ,"read" ))
cond	34:12	34:33	5	!strcmp (* argv ,"read" )
op	34:12	0:0	6	!
call	34:13	34:33	6	strcmp
arg	34:20	34:25	7	*argv
op	34:20	0:0	8	*
water	34:21	0:0	8	argv
arg	34:27	34:33	7	"read"
water	34:27	0:0	8	"read"
stmts	34:36	46:8	5	
water	34:36	0:0	6	{
water	35:12	0:0	6	ret
op	35:16	0:0	6	=
call	35:18	35:44	6	av_read_frame
arg	35:32	35:35	7	avf
water	35:32	0:0	8	avf
arg	35:37	35:44	7	&packet
op	35:37	0:0	8	&
water	35:38	0:0	8	packet
water	35:45	0:0	6	;
if	36:12	38:12	6	(ret < 0)
cond	36:16	36:22	7	ret < 0
water	36:16	0:0	8	ret
op	36:20	0:0	8	<
water	36:22	0:0	8	0
stmts	36:25	38:12	7	
water	36:25	0:0	8	{
call	37:16	37:62	8	printf
arg	37:23	37:40	9	"read: %d (%s)\n"
water	37:23	0:0	10	"read: %d (%s)\n"
arg	37:42	37:45	9	ret
water	37:42	0:0	10	ret
arg	37:47	37:62	9	av_err2str(ret)
call	37:47	37:61	10	av_err2str
arg	37:58	37:61	11	ret
water	37:58	0:0	12	ret
water	37:63	0:0	8	;
water	38:12	0:0	8	}
else	38:14	45:12	6
stmts	38:19	45:12	7	
water	38:19	0:0	8	{
decl	39:16	39:78	8	AVRational	*tb
op	39:31	0:0	8	=
op	39:33	0:0	8	&
water	39:34	0:0	8	avf
op	39:37	0:0	8	->
water	39:39	0:0	8	streams
op	39:46	0:0	8	[
water	39:47	0:0	8	packet
op	39:53	0:0	8	.
water	39:54	0:0	8	stream_index
op	39:66	0:0	8	]
op	39:67	0:0	8	->
water	39:69	0:0	8	time_base
call	40:16	43:75	8	printf
arg	40:23	40:77	9	"read: %d size=%d stream=%d dts=%s (%s) pts=%s (%s)\n"
water	40:23	0:0	10	"read: %d size=%d stream=%d dts=%s (%s) pts=%s (%s)\n"
arg	41:23	41:26	9	ret
water	41:23	0:0	10	ret
arg	41:28	41:39	9	packet.size
water	41:28	0:0	10	packet
op	41:34	0:0	10	.
water	41:35	0:0	10	size
arg	41:41	41:60	9	packet.stream_index
water	41:41	0:0	10	packet
op	41:47	0:0	10	.
water	41:48	0:0	10	stream_index
arg	42:23	42:44	9	av_ts2str(packet.dts)
call	42:23	42:43	10	av_ts2str
arg	42:33	42:43	11	packet.dts
water	42:33	0:0	12	packet
op	42:39	0:0	12	.
water	42:40	0:0	12	dts
arg	42:46	42:75	9	av_ts2timestr(packet.dts,tb)
call	42:46	42:74	10	av_ts2timestr
arg	42:60	42:70	11	packet.dts
water	42:60	0:0	12	packet
op	42:66	0:0	12	.
water	42:67	0:0	12	dts
arg	42:72	42:74	11	tb
water	42:72	0:0	12	tb
arg	43:23	43:44	9	av_ts2str(packet.pts)
call	43:23	43:43	10	av_ts2str
arg	43:33	43:43	11	packet.pts
water	43:33	0:0	12	packet
op	43:39	0:0	12	.
water	43:40	0:0	12	pts
arg	43:46	43:75	9	av_ts2timestr(packet.pts,tb)
call	43:46	43:74	10	av_ts2timestr
arg	43:60	43:70	11	packet.pts
water	43:60	0:0	12	packet
op	43:66	0:0	12	.
water	43:67	0:0	12	pts
arg	43:72	43:74	11	tb
water	43:72	0:0	12	tb
water	43:76	0:0	8	;
call	44:16	44:38	8	av_free_packet
arg	44:31	44:38	9	&packet
op	44:31	0:0	10	&
water	44:32	0:0	10	packet
water	44:39	0:0	8	;
water	45:12	0:0	8	}
water	46:8	0:0	6	}
else	46:10	50:8	4
stmts	46:15	50:8	5	
if	46:15	50:8	6	(sscanf (* argv ,"seek:%i:%" SCNi64 ":%" SCNi64 ":%" SCNi64 ":%i" ,& stream ,& min_ts ,& ts ,& max_ts ,& flags ) == 5)
cond	46:19	47:62	7	sscanf (* argv ,"seek:%i:%" SCNi64 ":%" SCNi64 ":%" SCNi64 ":%i" ,& stream ,& min_ts ,& ts ,& max_ts ,& flags ) == 5
call	46:19	47:57	8	sscanf
arg	46:26	46:31	9	*argv
op	46:26	0:0	10	*
water	46:27	0:0	10	argv
arg	46:33	46:75	9	"seek:%i:%"SCNi64":%"SCNi64":%"SCNi64":%i"
water	46:33	0:0	10	"seek:%i:%"
water	46:44	0:0	10	SCNi64
water	46:50	0:0	10	":%"
water	46:54	0:0	10	SCNi64
water	46:60	0:0	10	":%"
water	46:64	0:0	10	SCNi64
water	46:70	0:0	10	":%i"
arg	47:19	47:26	9	&stream
op	47:19	0:0	10	&
water	47:20	0:0	10	stream
arg	47:28	47:35	9	&min_ts
op	47:28	0:0	10	&
water	47:29	0:0	10	min_ts
arg	47:37	47:40	9	&ts
op	47:37	0:0	10	&
water	47:38	0:0	10	ts
arg	47:42	47:49	9	&max_ts
op	47:42	0:0	10	&
water	47:43	0:0	10	max_ts
arg	47:51	47:57	9	&flags
op	47:51	0:0	10	&
water	47:52	0:0	10	flags
op	47:59	0:0	8	==
water	47:62	0:0	8	5
stmts	47:65	50:8	7	
water	47:65	0:0	8	{
water	48:12	0:0	8	ret
op	48:16	0:0	8	=
call	48:18	48:75	8	avformat_seek_file
arg	48:37	48:40	9	avf
water	48:37	0:0	10	avf
arg	48:42	48:48	9	stream
water	48:42	0:0	10	stream
arg	48:50	48:56	9	min_ts
water	48:50	0:0	10	min_ts
arg	48:58	48:60	9	ts
water	48:58	0:0	10	ts
arg	48:62	48:68	9	max_ts
water	48:62	0:0	10	max_ts
arg	48:70	48:75	9	flags
water	48:70	0:0	10	flags
water	48:76	0:0	8	;
call	49:12	49:58	8	printf
arg	49:19	49:36	9	"seek: %d (%s)\n"
water	49:19	0:0	10	"seek: %d (%s)\n"
arg	49:38	49:41	9	ret
water	49:38	0:0	10	ret
arg	49:43	49:58	9	av_err2str(ret)
call	49:43	49:57	10	av_err2str
arg	49:54	49:57	11	ret
water	49:54	0:0	12	ret
water	49:59	0:0	8	;
water	50:8	0:0	8	}
else	50:10	53:8	4
stmts	50:15	53:8	5	
water	50:15	0:0	6	{
call	51:12	51:60	6	fprintf
arg	51:20	51:26	7	stderr
water	51:20	0:0	8	stderr
arg	51:28	51:53	7	"'%s': unknown command\n"
water	51:28	0:0	8	"'%s': unknown command\n"
arg	51:55	51:60	7	*argv
op	51:55	0:0	8	*
water	51:56	0:0	8	argv
water	51:61	0:0	6	;
return	52:12	52:20	6	1
water	52:19	0:0	7	1
water	53:8	0:0	6	}
water	54:4	0:0	4	}
call	55:4	55:29	2	avformat_close_input
arg	55:25	55:29	3	&avf
op	55:25	0:0	4	&
water	55:26	0:0	4	avf
water	55:30	0:0	2	;
return	56:4	56:12	2	0
water	56:11	0:0	3	0

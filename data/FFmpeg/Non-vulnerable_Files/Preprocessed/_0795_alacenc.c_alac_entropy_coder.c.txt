func	1:0	32:0	0	static void	alac_entropy_coder
params	1:30	0:0	1	
param	1:31	1:51	2	AlacEncodeContext *	s
param	1:53	1:59	2	int	ch
stmnts	0:0	31:4	1	
decl	3:4	3:48	2	unsigned int	history
op	3:25	0:0	2	=
water	3:27	0:0	2	s
op	3:28	0:0	2	->
water	3:30	0:0	2	rc
op	3:32	0:0	2	.
water	3:33	0:0	2	initial_history
decl	4:4	4:31	2	int	sign_modifier
op	4:22	0:0	2	=
water	4:24	0:0	2	0
water	4:25	0:0	2	,
decl	4:4	4:31	2	int	i
water	4:28	0:0	2	,
decl	4:4	4:31	2	int	k
decl	5:4	5:43	2	int32_t	*samples
op	5:21	0:0	2	=
water	5:23	0:0	2	s
op	5:24	0:0	2	->
water	5:26	0:0	2	predictor_buf
op	5:39	0:0	2	[
water	5:40	0:0	2	ch
op	5:42	0:0	2	]
for	6:4	31:4	2	(i = 0 ;i < s -> frame_size;)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:23	3	i < s -> frame_size
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	s
op	6:21	0:0	4	->
water	6:23	0:0	4	frame_size
forexpr	0:0	0:0	3	
stmts	6:36	31:4	3	
water	6:36	0:0	4	{
decl	7:8	7:13	4	int	x
water	8:8	0:0	4	k
op	8:10	0:0	4	=
call	8:12	8:38	4	av_log2
arg	8:20	8:38	5	(history>>9)+3
water	8:20	0:0	6	(
water	8:21	0:0	6	history
op	8:29	0:0	6	>>
water	8:32	0:0	6	9
water	8:33	0:0	6	)
op	8:35	0:0	6	+
water	8:37	0:0	6	3
water	8:39	0:0	4	;
water	9:8	0:0	4	x
op	9:11	0:0	4	=
op	9:13	0:0	4	-
water	9:14	0:0	4	2
op	9:16	0:0	4	*
water	9:18	0:0	4	(
op	9:19	0:0	4	*
water	9:20	0:0	4	samples
water	9:27	0:0	4	)
op	9:29	0:0	4	-
water	9:30	0:0	4	1
water	9:31	0:0	4	;
water	10:8	0:0	4	x
op	10:10	0:0	4	^=
water	10:13	0:0	4	x
op	10:15	0:0	4	>>
water	10:18	0:0	4	31
water	10:20	0:0	4	;
water	11:8	0:0	4	samples
op	11:15	0:0	4	++
water	11:17	0:0	4	;
water	12:8	0:0	4	i
op	12:9	0:0	4	++
water	12:11	0:0	4	;
call	13:8	13:67	4	encode_scalar
arg	13:22	13:23	5	s
water	13:22	0:0	6	s
arg	13:25	13:42	5	x-sign_modifier
water	13:25	0:0	6	x
op	13:27	0:0	6	-
water	13:29	0:0	6	sign_modifier
arg	13:44	13:45	5	k
water	13:44	0:0	6	k
arg	13:47	13:67	5	s->write_sample_size
water	13:47	0:0	6	s
op	13:48	0:0	6	->
water	13:50	0:0	6	write_sample_size
water	13:68	0:0	4	;
water	14:8	0:0	4	history
op	14:16	0:0	4	+=
water	14:19	0:0	4	x
op	14:21	0:0	4	*
water	14:23	0:0	4	s
op	14:24	0:0	4	->
water	14:26	0:0	4	rc
op	14:28	0:0	4	.
water	14:29	0:0	4	history_mult
op	14:42	0:0	4	-
water	15:19	0:0	4	(
water	15:20	0:0	4	(
water	15:21	0:0	4	history
op	15:29	0:0	4	*
water	15:31	0:0	4	s
op	15:32	0:0	4	->
water	15:34	0:0	4	rc
op	15:36	0:0	4	.
water	15:37	0:0	4	history_mult
water	15:49	0:0	4	)
op	15:51	0:0	4	>>
water	15:54	0:0	4	9
water	15:55	0:0	4	)
water	15:56	0:0	4	;
water	16:8	0:0	4	sign_modifier
op	16:22	0:0	4	=
water	16:24	0:0	4	0
water	16:25	0:0	4	;
if	17:8	18:28	4	(x > 0 xFFFF)
cond	17:12	17:17	5	x > 0 xFFFF
water	17:12	0:0	6	x
op	17:14	0:0	6	>
water	17:16	0:0	6	0
water	17:17	0:0	6	xFFFF
stmts	18:12	18:28	5	
water	18:12	0:0	6	history
op	18:20	0:0	6	=
water	18:22	0:0	6	0
water	18:23	0:0	6	xFFFF
water	18:28	0:0	6	;
if	19:8	30:8	4	(history < 128 && i < s -> frame_size)
cond	19:12	19:36	5	history < 128 && i < s -> frame_size
water	19:12	0:0	6	history
op	19:20	0:0	6	<
water	19:22	0:0	6	128
op	19:26	0:0	6	&&
water	19:29	0:0	6	i
op	19:31	0:0	6	<
water	19:33	0:0	6	s
op	19:34	0:0	6	->
water	19:36	0:0	6	frame_size
stmts	19:48	30:8	5	
water	19:48	0:0	6	{
decl	20:12	20:39	6	unsigned int	block_size
op	20:36	0:0	6	=
water	20:38	0:0	6	0
water	21:12	0:0	6	k
op	21:14	0:0	6	=
water	21:16	0:0	6	7
op	21:18	0:0	6	-
call	21:20	21:35	6	av_log2
arg	21:28	21:35	7	history
water	21:28	0:0	8	history
op	21:37	0:0	6	+
water	21:39	0:0	6	(
water	21:40	0:0	6	(
water	21:41	0:0	6	history
op	21:49	0:0	6	+
water	21:51	0:0	6	16
water	21:53	0:0	6	)
op	21:55	0:0	6	>>
water	21:58	0:0	6	6
water	21:59	0:0	6	)
water	21:60	0:0	6	;
while	22:12	26:12	6	(* samples == 0 && i < s -> frame_size)
cond	22:19	22:43	7	* samples == 0 && i < s -> frame_size
op	22:19	0:0	8	*
water	22:20	0:0	8	samples
op	22:28	0:0	8	==
water	22:31	0:0	8	0
op	22:33	0:0	8	&&
water	22:36	0:0	8	i
op	22:38	0:0	8	<
water	22:40	0:0	8	s
op	22:41	0:0	8	->
water	22:43	0:0	8	frame_size
stmts	22:55	26:12	7	
water	22:55	0:0	8	{
water	23:16	0:0	8	samples
op	23:23	0:0	8	++
water	23:25	0:0	8	;
water	24:16	0:0	8	i
op	24:17	0:0	8	++
water	24:19	0:0	8	;
water	25:16	0:0	8	block_size
op	25:26	0:0	8	++
water	25:28	0:0	8	;
water	26:12	0:0	8	}
call	27:12	27:46	6	encode_scalar
arg	27:26	27:27	7	s
water	27:26	0:0	8	s
arg	27:29	27:39	7	block_size
water	27:29	0:0	8	block_size
arg	27:41	27:42	7	k
water	27:41	0:0	8	k
arg	27:44	27:46	7	16
water	27:44	0:0	8	16
water	27:47	0:0	6	;
water	28:12	0:0	6	sign_modifier
op	28:26	0:0	6	=
water	28:28	0:0	6	(
water	28:29	0:0	6	block_size
op	28:40	0:0	6	<=
water	28:43	0:0	6	0
water	28:44	0:0	6	xFFFF
water	28:49	0:0	6	)
water	28:50	0:0	6	;
water	29:12	0:0	6	history
op	29:20	0:0	6	=
water	29:22	0:0	6	0
water	29:23	0:0	6	;
water	30:8	0:0	6	}
water	31:4	0:0	4	}

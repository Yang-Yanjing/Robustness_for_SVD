func	1:15	23:0	0	int	init_dict
params	1:28	0:0	1	
param	1:29	1:49	2	AVFilterContext *	ctx
param	1:51	1:70	2	AVDictionary * *	opts
stmnts	0:0	22:14	1	
decl	3:4	3:43	2	AResampleContext	*aresample
op	3:32	0:0	2	=
water	3:34	0:0	2	ctx
op	3:37	0:0	2	->
water	3:39	0:0	2	priv
decl	4:4	4:15	2	int	ret
op	4:12	0:0	2	=
water	4:14	0:0	2	0
water	5:4	0:0	2	aresample
op	5:13	0:0	2	->
water	5:15	0:0	2	next_pts
op	5:24	0:0	2	=
water	5:26	0:0	2	AV_NOPTS_VALUE
water	5:40	0:0	2	;
water	6:4	0:0	2	aresample
op	6:13	0:0	2	->
water	6:15	0:0	2	swr
op	6:19	0:0	2	=
call	6:21	6:31	2	swr_alloc
water	6:32	0:0	2	;
if	7:4	10:4	2	(! aresample -> swr)
cond	7:8	7:20	3	! aresample -> swr
op	7:8	0:0	4	!
water	7:9	0:0	4	aresample
op	7:18	0:0	4	->
water	7:20	0:0	4	swr
stmts	7:25	10:4	3	
water	7:25	0:0	4	{
water	8:8	0:0	4	ret
op	8:12	0:0	4	=
call	8:14	8:28	4	AVERROR
arg	8:22	8:28	5	ENOMEM
water	8:22	0:0	6	ENOMEM
water	8:29	0:0	4	;
goto	9:8	9:16	4	end
water	9:13	0:0	5	end
water	10:4	0:0	4	}
if	11:4	18:4	2	(opts)
cond	11:8	11:8	3	opts
water	11:8	0:0	4	opts
stmts	11:14	18:4	3	
water	11:14	0:0	4	{
decl	12:8	12:35	4	AVDictionaryEntry	*e
op	12:29	0:0	4	=
water	12:31	0:0	4	NULL
while	13:8	16:8	4	(( e =av_dict_get (* opts ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) ))
cond	13:15	13:68	5	( e =av_dict_get (* opts ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) )
water	13:15	0:0	6	(
water	13:16	0:0	6	e
op	13:18	0:0	6	=
call	13:20	13:67	6	av_dict_get
arg	13:32	13:37	7	*opts
op	13:32	0:0	8	*
water	13:33	0:0	8	opts
arg	13:39	13:41	7	""
water	13:39	0:0	8	""
arg	13:43	13:44	7	e
water	13:43	0:0	8	e
arg	13:46	13:67	7	AV_DICT_IGNORE_SUFFIX
water	13:46	0:0	8	AV_DICT_IGNORE_SUFFIX
water	13:68	0:0	6	)
stmts	13:71	16:8	5	
water	13:71	0:0	6	{
if	14:12	15:24	6	(( ret =av_opt_set (aresample -> swr ,e -> key ,e -> value ,0 ) ) < 0)
cond	14:16	14:74	7	( ret =av_opt_set (aresample -> swr ,e -> key ,e -> value ,0 ) ) < 0
water	14:16	0:0	8	(
water	14:17	0:0	8	ret
op	14:21	0:0	8	=
call	14:23	14:69	8	av_opt_set
arg	14:34	14:48	9	aresample->swr
water	14:34	0:0	10	aresample
op	14:43	0:0	10	->
water	14:45	0:0	10	swr
arg	14:50	14:56	9	e->key
water	14:50	0:0	10	e
op	14:51	0:0	10	->
water	14:53	0:0	10	key
arg	14:58	14:66	9	e->value
water	14:58	0:0	10	e
op	14:59	0:0	10	->
water	14:61	0:0	10	value
arg	14:68	14:69	9	0
water	14:68	0:0	10	0
water	14:70	0:0	8	)
op	14:72	0:0	8	<
water	14:74	0:0	8	0
stmts	15:16	15:24	7	
goto	15:16	15:24	8	end
water	15:21	0:0	9	end
water	16:8	0:0	6	}
call	17:8	17:25	4	av_dict_free
arg	17:21	17:25	5	opts
water	17:21	0:0	6	opts
water	17:26	0:0	4	;
water	18:4	0:0	4	}
if	19:4	20:76	2	(aresample -> sample_rate_arg > 0)
cond	19:8	19:37	3	aresample -> sample_rate_arg > 0
water	19:8	0:0	4	aresample
op	19:17	0:0	4	->
water	19:19	0:0	4	sample_rate_arg
op	19:35	0:0	4	>
water	19:37	0:0	4	0
stmts	20:8	20:76	3	
call	20:8	20:75	4	av_opt_set_int
arg	20:23	20:37	5	aresample->swr
water	20:23	0:0	6	aresample
op	20:32	0:0	6	->
water	20:34	0:0	6	swr
arg	20:39	20:44	5	"osr"
water	20:39	0:0	6	"osr"
arg	20:46	20:72	5	aresample->sample_rate_arg
water	20:46	0:0	6	aresample
op	20:55	0:0	6	->
water	20:57	0:0	6	sample_rate_arg
arg	20:74	20:75	5	0
water	20:74	0:0	6	0
water	20:76	0:0	4	;
label	21:0	21:3	2	end :
return	22:4	22:14	2	ret
water	22:11	0:0	3	ret

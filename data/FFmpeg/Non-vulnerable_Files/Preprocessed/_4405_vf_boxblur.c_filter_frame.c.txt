func	1:0	32:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	31:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:33	2	BoxBlurContext	*s
op	4:22	0:0	2	=
water	4:24	0:0	2	ctx
op	4:27	0:0	2	->
water	4:29	0:0	2	priv
decl	5:4	5:51	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	inlink
op	5:34	0:0	2	->
water	5:36	0:0	2	dst
op	5:39	0:0	2	->
water	5:41	0:0	2	outputs
op	5:48	0:0	2	[
water	5:49	0:0	2	0
op	5:50	0:0	2	]
decl	6:4	6:16	2	AVFrame	*out
decl	7:4	7:13	2	int	plane
decl	8:4	8:89	2	int	cw
op	8:11	0:0	2	=
call	8:13	8:46	3	FF_CEIL_RSHIFT
arg	8:28	8:37	4	inlink->w
water	8:28	0:0	5	inlink
op	8:34	0:0	5	->
water	8:36	0:0	5	w
arg	8:39	8:46	4	s->hsub
water	8:39	0:0	5	s
op	8:40	0:0	5	->
water	8:42	0:0	5	hsub
water	8:47	0:0	2	,
decl	8:4	8:89	2	int	ch
op	8:52	0:0	2	=
call	8:54	8:88	3	FF_CEIL_RSHIFT
arg	8:69	8:79	4	in->height
water	8:69	0:0	5	in
op	8:71	0:0	5	->
water	8:73	0:0	5	height
arg	8:81	8:88	4	s->vsub
water	8:81	0:0	5	s
op	8:82	0:0	5	->
water	8:84	0:0	5	vsub
decl	9:4	9:47	2	int	w[4]
op	9:13	0:0	2	=
water	9:15	0:0	2	{
water	9:17	0:0	2	inlink
op	9:23	0:0	2	->
water	9:25	0:0	2	w
water	9:26	0:0	2	,
water	9:28	0:0	2	cw
water	9:30	0:0	2	,
water	9:32	0:0	2	cw
water	9:34	0:0	2	,
water	9:36	0:0	2	inlink
op	9:42	0:0	2	->
water	9:44	0:0	2	w
water	9:46	0:0	2	}
decl	10:4	10:49	2	int	h[4]
op	10:13	0:0	2	=
water	10:15	0:0	2	{
water	10:17	0:0	2	in
op	10:19	0:0	2	->
water	10:21	0:0	2	height
water	10:27	0:0	2	,
water	10:29	0:0	2	ch
water	10:31	0:0	2	,
water	10:33	0:0	2	ch
water	10:35	0:0	2	,
water	10:37	0:0	2	in
op	10:39	0:0	2	->
water	10:41	0:0	2	height
water	10:48	0:0	2	}
decl	11:4	11:72	2	const AVPixFmtDescriptor	*desc
op	11:35	0:0	2	=
call	11:37	11:71	3	av_pix_fmt_desc_get
arg	11:57	11:71	4	inlink->format
water	11:57	0:0	5	inlink
op	11:63	0:0	5	->
water	11:65	0:0	5	format
decl	12:4	12:52	2	const int	depth
op	12:20	0:0	2	=
water	12:22	0:0	2	desc
op	12:26	0:0	2	->
water	12:28	0:0	2	comp
op	12:32	0:0	2	[
water	12:33	0:0	2	0
op	12:34	0:0	2	]
op	12:35	0:0	2	.
water	12:36	0:0	2	depth_minus1
op	12:49	0:0	2	+
water	12:51	0:0	2	1
decl	13:4	13:35	2	const int	pixsize
op	13:22	0:0	2	=
water	13:24	0:0	2	(
water	13:25	0:0	2	depth
op	13:30	0:0	2	+
water	13:31	0:0	2	7
water	13:32	0:0	2	)
op	13:33	0:0	2	/
water	13:34	0:0	2	8
water	14:4	0:0	2	out
op	14:8	0:0	2	=
call	14:10	14:61	2	ff_get_video_buffer
arg	14:30	14:37	3	outlink
water	14:30	0:0	4	outlink
arg	14:39	14:49	3	outlink->w
water	14:39	0:0	4	outlink
op	14:46	0:0	4	->
water	14:48	0:0	4	w
arg	14:51	14:61	3	outlink->h
water	14:51	0:0	4	outlink
op	14:58	0:0	4	->
water	14:60	0:0	4	h
water	14:62	0:0	2	;
if	15:4	18:4	2	(! out)
cond	15:8	15:9	3	! out
op	15:8	0:0	4	!
water	15:9	0:0	4	out
stmts	15:14	18:4	3	
water	15:14	0:0	4	{
call	16:8	16:25	4	av_frame_free
arg	16:22	16:25	5	&in
op	16:22	0:0	6	&
water	16:23	0:0	6	in
water	16:26	0:0	4	;
return	17:8	17:30	4	AVERROR(ENOMEM)
call	17:15	17:29	5	AVERROR
arg	17:23	17:29	6	ENOMEM
water	17:23	0:0	7	ENOMEM
water	18:4	0:0	4	}
call	19:4	19:31	2	av_frame_copy_props
arg	19:24	19:27	3	out
water	19:24	0:0	4	out
arg	19:29	19:31	3	in
water	19:29	0:0	4	in
water	19:32	0:0	2	;
for	20:4	24:31	2	(plane = 0 ;plane < 4 && in -> data [ plane ] && in -> linesize [ plane ];plane ++)
forinit	20:9	20:18	3	plane = 0 ;
water	20:9	0:0	4	plane
op	20:15	0:0	4	=
water	20:17	0:0	4	0
water	20:18	0:0	4	;
cond	20:20	20:70	3	plane < 4 && in -> data [ plane ] && in -> linesize [ plane ]
water	20:20	0:0	4	plane
op	20:26	0:0	4	<
water	20:28	0:0	4	4
op	20:30	0:0	4	&&
water	20:33	0:0	4	in
op	20:35	0:0	4	->
water	20:37	0:0	4	data
op	20:41	0:0	4	[
water	20:42	0:0	4	plane
op	20:47	0:0	4	]
op	20:49	0:0	4	&&
water	20:52	0:0	4	in
op	20:54	0:0	4	->
water	20:56	0:0	4	linesize
op	20:64	0:0	4	[
water	20:65	0:0	4	plane
op	20:70	0:0	4	]
forexpr	20:73	20:78	3	plane ++
water	20:73	0:0	4	plane
op	20:78	0:0	4	++
stmts	21:8	24:31	3	
call	21:8	24:30	4	hblur
arg	21:14	21:30	5	out->data[plane]
water	21:14	0:0	6	out
op	21:17	0:0	6	->
water	21:19	0:0	6	data
op	21:23	0:0	6	[
water	21:24	0:0	6	plane
op	21:29	0:0	6	]
arg	21:32	21:52	5	out->linesize[plane]
water	21:32	0:0	6	out
op	21:35	0:0	6	->
water	21:37	0:0	6	linesize
op	21:45	0:0	6	[
water	21:46	0:0	6	plane
op	21:51	0:0	6	]
arg	22:14	22:30	5	in->data[plane]
water	22:14	0:0	6	in
op	22:17	0:0	6	->
water	22:19	0:0	6	data
op	22:23	0:0	6	[
water	22:24	0:0	6	plane
op	22:29	0:0	6	]
arg	22:32	22:52	5	in->linesize[plane]
water	22:32	0:0	6	in
op	22:35	0:0	6	->
water	22:37	0:0	6	linesize
op	22:45	0:0	6	[
water	22:46	0:0	6	plane
op	22:51	0:0	6	]
arg	23:14	23:22	5	w[plane]
water	23:14	0:0	6	w
op	23:15	0:0	6	[
water	23:16	0:0	6	plane
op	23:21	0:0	6	]
arg	23:24	23:32	5	h[plane]
water	23:24	0:0	6	h
op	23:25	0:0	6	[
water	23:26	0:0	6	plane
op	23:31	0:0	6	]
arg	23:34	23:50	5	s->radius[plane]
water	23:34	0:0	6	s
op	23:35	0:0	6	->
water	23:37	0:0	6	radius
op	23:43	0:0	6	[
water	23:44	0:0	6	plane
op	23:49	0:0	6	]
arg	23:52	23:67	5	s->power[plane]
water	23:52	0:0	6	s
op	23:53	0:0	6	->
water	23:55	0:0	6	power
op	23:60	0:0	6	[
water	23:61	0:0	6	plane
op	23:66	0:0	6	]
arg	24:14	24:21	5	s->temp
water	24:14	0:0	6	s
op	24:15	0:0	6	->
water	24:17	0:0	6	temp
arg	24:23	24:30	5	pixsize
water	24:23	0:0	6	pixsize
water	24:31	0:0	4	;
for	25:4	29:31	2	(plane = 0 ;plane < 4 && in -> data [ plane ] && in -> linesize [ plane ];plane ++)
forinit	25:9	25:18	3	plane = 0 ;
water	25:9	0:0	4	plane
op	25:15	0:0	4	=
water	25:17	0:0	4	0
water	25:18	0:0	4	;
cond	25:20	25:70	3	plane < 4 && in -> data [ plane ] && in -> linesize [ plane ]
water	25:20	0:0	4	plane
op	25:26	0:0	4	<
water	25:28	0:0	4	4
op	25:30	0:0	4	&&
water	25:33	0:0	4	in
op	25:35	0:0	4	->
water	25:37	0:0	4	data
op	25:41	0:0	4	[
water	25:42	0:0	4	plane
op	25:47	0:0	4	]
op	25:49	0:0	4	&&
water	25:52	0:0	4	in
op	25:54	0:0	4	->
water	25:56	0:0	4	linesize
op	25:64	0:0	4	[
water	25:65	0:0	4	plane
op	25:70	0:0	4	]
forexpr	25:73	25:78	3	plane ++
water	25:73	0:0	4	plane
op	25:78	0:0	4	++
stmts	26:8	29:31	3	
call	26:8	29:30	4	vblur
arg	26:14	26:30	5	out->data[plane]
water	26:14	0:0	6	out
op	26:17	0:0	6	->
water	26:19	0:0	6	data
op	26:23	0:0	6	[
water	26:24	0:0	6	plane
op	26:29	0:0	6	]
arg	26:32	26:52	5	out->linesize[plane]
water	26:32	0:0	6	out
op	26:35	0:0	6	->
water	26:37	0:0	6	linesize
op	26:45	0:0	6	[
water	26:46	0:0	6	plane
op	26:51	0:0	6	]
arg	27:14	27:30	5	out->data[plane]
water	27:14	0:0	6	out
op	27:17	0:0	6	->
water	27:19	0:0	6	data
op	27:23	0:0	6	[
water	27:24	0:0	6	plane
op	27:29	0:0	6	]
arg	27:32	27:52	5	out->linesize[plane]
water	27:32	0:0	6	out
op	27:35	0:0	6	->
water	27:37	0:0	6	linesize
op	27:45	0:0	6	[
water	27:46	0:0	6	plane
op	27:51	0:0	6	]
arg	28:14	28:22	5	w[plane]
water	28:14	0:0	6	w
op	28:15	0:0	6	[
water	28:16	0:0	6	plane
op	28:21	0:0	6	]
arg	28:24	28:32	5	h[plane]
water	28:24	0:0	6	h
op	28:25	0:0	6	[
water	28:26	0:0	6	plane
op	28:31	0:0	6	]
arg	28:34	28:50	5	s->radius[plane]
water	28:34	0:0	6	s
op	28:35	0:0	6	->
water	28:37	0:0	6	radius
op	28:43	0:0	6	[
water	28:44	0:0	6	plane
op	28:49	0:0	6	]
arg	28:52	28:67	5	s->power[plane]
water	28:52	0:0	6	s
op	28:53	0:0	6	->
water	28:55	0:0	6	power
op	28:60	0:0	6	[
water	28:61	0:0	6	plane
op	28:66	0:0	6	]
arg	29:14	29:21	5	s->temp
water	29:14	0:0	6	s
op	29:15	0:0	6	->
water	29:17	0:0	6	temp
arg	29:23	29:30	5	pixsize
water	29:23	0:0	6	pixsize
water	29:31	0:0	4	;
call	30:4	30:21	2	av_frame_free
arg	30:18	30:21	3	&in
op	30:18	0:0	4	&
water	30:19	0:0	4	in
water	30:22	0:0	2	;
return	31:4	31:40	2	ff_filter_frame(outlink,out)
call	31:11	31:39	3	ff_filter_frame
arg	31:27	31:34	4	outlink
water	31:27	0:0	5	outlink
arg	31:36	31:39	4	out
water	31:36	0:0	5	out

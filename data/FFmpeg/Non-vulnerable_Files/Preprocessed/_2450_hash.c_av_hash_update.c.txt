func	1:0	20:0	0	void	av_hash_update
params	1:19	0:0	1	
param	1:20	1:38	2	AVHashContext *	ctx
param	1:40	1:58	2	const uint8_t *	src
param	1:60	1:67	2	int	len
stmnts	3:4	19:4	1	
switch	3:4	19:4	2	(ctx -> type)
cond	3:12	3:17	3	ctx -> type
water	3:12	0:0	4	ctx
op	3:15	0:0	4	->
water	3:17	0:0	4	type
stmts	3:23	19:4	3	
water	3:23	0:0	4	{
label	4:4	4:12	4	case MD5 :
call	4:18	4:50	4	av_md5_update
arg	4:32	4:40	5	ctx->ctx
water	4:32	0:0	6	ctx
op	4:35	0:0	6	->
water	4:37	0:0	6	ctx
arg	4:42	4:45	5	src
water	4:42	0:0	6	src
arg	4:47	4:50	5	len
water	4:47	0:0	6	len
water	4:51	0:0	4	;
break	4:53	4:58	4	
label	5:4	5:16	4	case MURMUR3 :
call	5:18	5:54	4	av_murmur3_update
arg	5:36	5:44	5	ctx->ctx
water	5:36	0:0	6	ctx
op	5:39	0:0	6	->
water	5:41	0:0	6	ctx
arg	5:46	5:49	5	src
water	5:46	0:0	6	src
arg	5:51	5:54	5	len
water	5:51	0:0	6	len
water	5:55	0:0	4	;
break	5:57	5:62	4	
label	6:4	6:18	4	case RIPEMD128 :
label	7:4	7:18	4	case RIPEMD160 :
label	8:4	8:18	4	case RIPEMD256 :
label	9:4	9:18	4	case RIPEMD320 :
call	9:20	9:55	4	av_ripemd_update
arg	9:37	9:45	5	ctx->ctx
water	9:37	0:0	6	ctx
op	9:40	0:0	6	->
water	9:42	0:0	6	ctx
arg	9:47	9:50	5	src
water	9:47	0:0	6	src
arg	9:52	9:55	5	len
water	9:52	0:0	6	len
water	9:56	0:0	4	;
break	9:58	9:63	4	
label	10:4	10:15	4	case SHA160 :
label	11:4	11:15	4	case SHA224 :
label	12:4	12:15	4	case SHA256 :
call	12:18	12:50	4	av_sha_update
arg	12:32	12:40	5	ctx->ctx
water	12:32	0:0	6	ctx
op	12:35	0:0	6	->
water	12:37	0:0	6	ctx
arg	12:42	12:45	5	src
water	12:42	0:0	6	src
arg	12:47	12:50	5	len
water	12:47	0:0	6	len
water	12:51	0:0	4	;
break	12:53	12:58	4	
label	13:4	13:19	4	case SHA512_224 :
label	14:4	14:19	4	case SHA512_256 :
label	15:4	15:15	4	case SHA384 :
label	16:4	16:15	4	case SHA512 :
call	16:18	16:53	4	av_sha512_update
arg	16:35	16:43	5	ctx->ctx
water	16:35	0:0	6	ctx
op	16:38	0:0	6	->
water	16:40	0:0	6	ctx
arg	16:45	16:48	5	src
water	16:45	0:0	6	src
arg	16:50	16:53	5	len
water	16:50	0:0	6	len
water	16:54	0:0	4	;
break	16:56	16:61	4	
label	17:4	17:14	4	case CRC32 :
water	17:18	0:0	4	ctx
op	17:21	0:0	4	->
water	17:23	0:0	4	crc
op	17:27	0:0	4	=
call	17:29	17:67	4	av_crc
arg	17:36	17:47	5	ctx->crctab
water	17:36	0:0	6	ctx
op	17:39	0:0	6	->
water	17:41	0:0	6	crctab
arg	17:49	17:57	5	ctx->crc
water	17:49	0:0	6	ctx
op	17:52	0:0	6	->
water	17:54	0:0	6	crc
arg	17:59	17:62	5	src
water	17:59	0:0	6	src
arg	17:64	17:67	5	len
water	17:64	0:0	6	len
water	17:68	0:0	4	;
break	17:70	17:75	4	
label	18:4	18:16	4	case ADLER32 :
water	18:18	0:0	4	ctx
op	18:21	0:0	4	->
water	18:23	0:0	4	crc
op	18:27	0:0	4	=
call	18:29	18:65	4	av_adler32_update
arg	18:47	18:55	5	ctx->crc
water	18:47	0:0	6	ctx
op	18:50	0:0	6	->
water	18:52	0:0	6	crc
arg	18:57	18:60	5	src
water	18:57	0:0	6	src
arg	18:62	18:65	5	len
water	18:62	0:0	6	len
water	18:66	0:0	4	;
break	18:68	18:73	4	
water	19:4	0:0	4	}

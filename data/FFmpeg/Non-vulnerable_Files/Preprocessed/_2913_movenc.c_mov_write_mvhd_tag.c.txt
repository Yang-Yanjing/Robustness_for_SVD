func	1:0	53:0	0	static int	mov_write_mvhd_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:65	2	MOVMuxContext *	mov
stmnts	0:0	52:15	1	
decl	3:4	3:27	2	int	max_track_id
op	3:21	0:0	2	=
water	3:23	0:0	2	1
water	3:24	0:0	2	,
decl	3:4	3:27	2	int	i
decl	4:4	4:29	2	int64_t	max_track_len
op	4:26	0:0	2	=
water	4:28	0:0	2	0
decl	5:4	5:15	2	int	version
for	6:4	17:4	2	(i = 0 ;i < mov -> nb_streams;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:25	3	i < mov -> nb_streams
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	mov
op	6:23	0:0	4	->
water	6:25	0:0	4	nb_streams
forexpr	6:37	6:38	3	i ++
water	6:37	0:0	4	i
op	6:38	0:0	4	++
stmts	6:42	17:4	3	
water	6:42	0:0	4	{
if	7:8	16:8	4	(mov -> tracks [ i ] . entry > 0 && mov -> tracks [ i ] . timescale)
cond	7:12	7:55	5	mov -> tracks [ i ] . entry > 0 && mov -> tracks [ i ] . timescale
water	7:12	0:0	6	mov
op	7:15	0:0	6	->
water	7:17	0:0	6	tracks
op	7:23	0:0	6	[
water	7:24	0:0	6	i
op	7:25	0:0	6	]
op	7:26	0:0	6	.
water	7:27	0:0	6	entry
op	7:33	0:0	6	>
water	7:35	0:0	6	0
op	7:37	0:0	6	&&
water	7:40	0:0	6	mov
op	7:43	0:0	6	->
water	7:45	0:0	6	tracks
op	7:51	0:0	6	[
water	7:52	0:0	6	i
op	7:53	0:0	6	]
op	7:54	0:0	6	.
water	7:55	0:0	6	timescale
stmts	7:66	16:8	5	
water	7:66	0:0	6	{
decl	8:12	11:60	6	int64_t	max_track_len_temp
op	8:39	0:0	6	=
call	8:41	11:59	7	av_rescale_rnd
arg	8:56	8:85	8	mov->tracks[i].track_duration
water	8:56	0:0	9	mov
op	8:59	0:0	9	->
water	8:61	0:0	9	tracks
op	8:67	0:0	9	[
water	8:68	0:0	9	i
op	8:69	0:0	9	]
op	8:70	0:0	9	.
water	8:71	0:0	9	track_duration
arg	9:48	9:61	8	MOV_TIMESCALE
water	9:48	0:0	9	MOV_TIMESCALE
arg	10:48	10:72	8	mov->tracks[i].timescale
water	10:48	0:0	9	mov
op	10:51	0:0	9	->
water	10:53	0:0	9	tracks
op	10:59	0:0	9	[
water	10:60	0:0	9	i
op	10:61	0:0	9	]
op	10:62	0:0	9	.
water	10:63	0:0	9	timescale
arg	11:48	11:59	8	AV_ROUND_UP
water	11:48	0:0	9	AV_ROUND_UP
if	12:12	13:50	6	(max_track_len < max_track_len_temp)
cond	12:16	12:32	7	max_track_len < max_track_len_temp
water	12:16	0:0	8	max_track_len
op	12:30	0:0	8	<
water	12:32	0:0	8	max_track_len_temp
stmts	13:16	13:50	7	
water	13:16	0:0	8	max_track_len
op	13:30	0:0	8	=
water	13:32	0:0	8	max_track_len_temp
water	13:50	0:0	8	;
if	14:12	15:54	6	(max_track_id < mov -> tracks [ i ] . track_id)
cond	14:16	14:46	7	max_track_id < mov -> tracks [ i ] . track_id
water	14:16	0:0	8	max_track_id
op	14:29	0:0	8	<
water	14:31	0:0	8	mov
op	14:34	0:0	8	->
water	14:36	0:0	8	tracks
op	14:42	0:0	8	[
water	14:43	0:0	8	i
op	14:44	0:0	8	]
op	14:45	0:0	8	.
water	14:46	0:0	8	track_id
stmts	15:16	15:54	7	
water	15:16	0:0	8	max_track_id
op	15:29	0:0	8	=
water	15:31	0:0	8	mov
op	15:34	0:0	8	->
water	15:36	0:0	8	tracks
op	15:42	0:0	8	[
water	15:43	0:0	8	i
op	15:44	0:0	8	]
op	15:45	0:0	8	.
water	15:46	0:0	8	track_id
water	15:54	0:0	8	;
water	16:8	0:0	6	}
water	17:4	0:0	4	}
if	20:4	23:4	2	(mov -> flags & FF_MOV_FLAG_EMPTY_MOOV)
cond	20:8	20:21	3	mov -> flags & FF_MOV_FLAG_EMPTY_MOOV
water	20:8	0:0	4	mov
op	20:11	0:0	4	->
water	20:13	0:0	4	flags
op	20:19	0:0	4	&
water	20:21	0:0	4	FF_MOV_FLAG_EMPTY_MOOV
stmts	20:45	23:4	3	
water	20:45	0:0	4	{
water	21:8	0:0	4	max_track_len
op	21:22	0:0	4	=
water	21:24	0:0	4	0
water	21:25	0:0	4	;
water	22:8	0:0	4	max_track_id
op	22:22	0:0	4	=
water	22:24	0:0	4	1
water	22:25	0:0	4	;
water	23:4	0:0	4	}
water	24:4	0:0	2	version
op	24:12	0:0	2	=
water	24:14	0:0	2	max_track_len
op	24:28	0:0	2	<
water	24:30	0:0	2	UINT32_MAX
water	24:41	0:0	2	?
water	24:43	0:0	2	0
water	24:45	0:0	2	:
water	24:47	0:0	2	1
water	24:48	0:0	2	;
call	25:4	25:42	2	avio_wb32
arg	25:14	25:16	3	pb
water	25:14	0:0	4	pb
arg	25:18	25:42	3	version==1?120:108
water	25:18	0:0	4	version
op	25:26	0:0	4	==
water	25:29	0:0	4	1
water	25:31	0:0	4	?
water	25:33	0:0	4	120
water	25:37	0:0	4	:
water	25:39	0:0	4	108
water	25:43	0:0	2	;
call	26:4	26:27	2	ffio_wfourcc
arg	26:17	26:19	3	pb
water	26:17	0:0	4	pb
arg	26:21	26:27	3	"mvhd"
water	26:21	0:0	4	"mvhd"
water	26:28	0:0	2	;
call	27:4	27:23	2	avio_w8
arg	27:12	27:14	3	pb
water	27:12	0:0	4	pb
arg	27:16	27:23	3	version
water	27:16	0:0	4	version
water	27:24	0:0	2	;
call	28:4	28:19	2	avio_wb24
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:19	3	0
water	28:18	0:0	4	0
water	28:20	0:0	2	;
if	29:4	32:4	2	(version == 1)
cond	29:8	29:19	3	version == 1
water	29:8	0:0	4	version
op	29:16	0:0	4	==
water	29:19	0:0	4	1
stmts	29:22	32:4	3	
water	29:22	0:0	4	{
call	30:8	30:31	4	avio_wb64
arg	30:18	30:20	5	pb
water	30:18	0:0	6	pb
arg	30:22	30:31	5	mov->time
water	30:22	0:0	6	mov
op	30:25	0:0	6	->
water	30:27	0:0	6	time
water	30:32	0:0	4	;
call	31:8	31:31	4	avio_wb64
arg	31:18	31:20	5	pb
water	31:18	0:0	6	pb
arg	31:22	31:31	5	mov->time
water	31:22	0:0	6	mov
op	31:25	0:0	6	->
water	31:27	0:0	6	time
water	31:32	0:0	4	;
water	32:4	0:0	4	}
else	32:6	35:4	2
stmts	32:11	35:4	3	
water	32:11	0:0	4	{
call	33:8	33:31	4	avio_wb32
arg	33:18	33:20	5	pb
water	33:18	0:0	6	pb
arg	33:22	33:31	5	mov->time
water	33:22	0:0	6	mov
op	33:25	0:0	6	->
water	33:27	0:0	6	time
water	33:32	0:0	4	;
call	34:8	34:31	4	avio_wb32
arg	34:18	34:20	5	pb
water	34:18	0:0	6	pb
arg	34:22	34:31	5	mov->time
water	34:22	0:0	6	mov
op	34:25	0:0	6	->
water	34:27	0:0	6	time
water	34:32	0:0	4	;
water	35:4	0:0	4	}
call	36:4	36:31	2	avio_wb32
arg	36:14	36:16	3	pb
water	36:14	0:0	4	pb
arg	36:18	36:31	3	MOV_TIMESCALE
water	36:18	0:0	4	MOV_TIMESCALE
water	36:32	0:0	2	;
water	37:4	0:0	2	(
water	37:5	0:0	2	version
op	37:13	0:0	2	==
water	37:16	0:0	2	1
water	37:17	0:0	2	)
water	37:19	0:0	2	?
call	37:21	37:48	2	avio_wb64
arg	37:31	37:33	3	pb
water	37:31	0:0	4	pb
arg	37:35	37:48	3	max_track_len
water	37:35	0:0	4	max_track_len
water	37:50	0:0	2	:
call	37:52	37:79	2	avio_wb32
arg	37:62	37:64	3	pb
water	37:62	0:0	4	pb
arg	37:66	37:79	3	max_track_len
water	37:66	0:0	4	max_track_len
water	37:80	0:0	2	;
call	38:4	38:28	2	avio_wb32
arg	38:14	38:16	3	pb
water	38:14	0:0	4	pb
arg	38:18	38:28	3	0x00010000
water	38:18	0:0	4	0
water	38:19	0:0	4	x00010000
water	38:29	0:0	2	;
call	39:4	39:24	2	avio_wb16
arg	39:14	39:16	3	pb
water	39:14	0:0	4	pb
arg	39:18	39:24	3	0x0100
water	39:18	0:0	4	0
water	39:19	0:0	4	x0100
water	39:25	0:0	2	;
call	40:4	40:19	2	avio_wb16
arg	40:14	40:16	3	pb
water	40:14	0:0	4	pb
arg	40:18	40:19	3	0
water	40:18	0:0	4	0
water	40:20	0:0	2	;
call	41:4	41:19	2	avio_wb32
arg	41:14	41:16	3	pb
water	41:14	0:0	4	pb
arg	41:18	41:19	3	0
water	41:18	0:0	4	0
water	41:20	0:0	2	;
call	42:4	42:19	2	avio_wb32
arg	42:14	42:16	3	pb
water	42:14	0:0	4	pb
arg	42:18	42:19	3	0
water	42:18	0:0	4	0
water	42:20	0:0	2	;
call	44:4	44:37	2	write_matrix
arg	44:17	44:19	3	pb
water	44:17	0:0	4	pb
arg	44:21	44:22	3	1
water	44:21	0:0	4	1
arg	44:24	44:25	3	0
water	44:24	0:0	4	0
arg	44:27	44:28	3	0
water	44:27	0:0	4	0
arg	44:30	44:31	3	1
water	44:30	0:0	4	1
arg	44:33	44:34	3	0
water	44:33	0:0	4	0
arg	44:36	44:37	3	0
water	44:36	0:0	4	0
water	44:38	0:0	2	;
call	45:4	45:19	2	avio_wb32
arg	45:14	45:16	3	pb
water	45:14	0:0	4	pb
arg	45:18	45:19	3	0
water	45:18	0:0	4	0
water	45:20	0:0	2	;
call	46:4	46:19	2	avio_wb32
arg	46:14	46:16	3	pb
water	46:14	0:0	4	pb
arg	46:18	46:19	3	0
water	46:18	0:0	4	0
water	46:20	0:0	2	;
call	47:4	47:19	2	avio_wb32
arg	47:14	47:16	3	pb
water	47:14	0:0	4	pb
arg	47:18	47:19	3	0
water	47:18	0:0	4	0
water	47:20	0:0	2	;
call	48:4	48:19	2	avio_wb32
arg	48:14	48:16	3	pb
water	48:14	0:0	4	pb
arg	48:18	48:19	3	0
water	48:18	0:0	4	0
water	48:20	0:0	2	;
call	49:4	49:19	2	avio_wb32
arg	49:14	49:16	3	pb
water	49:14	0:0	4	pb
arg	49:18	49:19	3	0
water	49:18	0:0	4	0
water	49:20	0:0	2	;
call	50:4	50:19	2	avio_wb32
arg	50:14	50:16	3	pb
water	50:14	0:0	4	pb
arg	50:18	50:19	3	0
water	50:18	0:0	4	0
water	50:20	0:0	2	;
call	51:4	51:34	2	avio_wb32
arg	51:14	51:16	3	pb
water	51:14	0:0	4	pb
arg	51:18	51:34	3	max_track_id+1
water	51:18	0:0	4	max_track_id
op	51:31	0:0	4	+
water	51:33	0:0	4	1
water	51:35	0:0	2	;
return	52:4	52:15	2	0x6c
water	52:11	0:0	3	0
water	52:12	0:0	3	x6c

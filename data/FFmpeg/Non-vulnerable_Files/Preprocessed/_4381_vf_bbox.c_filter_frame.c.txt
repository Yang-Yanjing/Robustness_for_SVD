func	2:0	34:0	0	static int	filter_frame
params	2:23	0:0	1	
param	2:24	2:44	2	AVFilterLink *	inlink
param	2:46	2:60	2	AVFrame *	frame
stmnts	0:0	33:58	1	
decl	4:4	4:38	2	AVFilterContext	*ctx
op	4:25	0:0	2	=
water	4:27	0:0	2	inlink
op	4:33	0:0	2	->
water	4:35	0:0	2	dst
decl	5:4	5:33	2	BBoxContext	*bbox
op	5:22	0:0	2	=
water	5:24	0:0	2	ctx
op	5:27	0:0	2	->
water	5:29	0:0	2	priv
decl	6:4	6:21	2	FFBoundingBox	box
decl	7:4	7:22	2	int	has_bbox
water	7:16	0:0	2	,
decl	7:4	7:22	2	int	w
water	7:19	0:0	2	,
decl	7:4	7:22	2	int	h
water	8:4	0:0	2	has_bbox
op	8:13	0:0	2	=
call	9:8	11:69	2	ff_calculate_bounding_box
arg	9:34	9:38	3	&box
op	9:34	0:0	4	&
water	9:35	0:0	4	box
arg	10:34	10:48	3	frame->data[0]
water	10:34	0:0	4	frame
op	10:39	0:0	4	->
water	10:41	0:0	4	data
op	10:45	0:0	4	[
water	10:46	0:0	4	0
op	10:47	0:0	4	]
arg	10:50	10:68	3	frame->linesize[0]
water	10:50	0:0	4	frame
op	10:55	0:0	4	->
water	10:57	0:0	4	linesize
op	10:65	0:0	4	[
water	10:66	0:0	4	0
op	10:67	0:0	4	]
arg	11:34	11:43	3	inlink->w
water	11:34	0:0	4	inlink
op	11:40	0:0	4	->
water	11:42	0:0	4	w
arg	11:45	11:54	3	inlink->h
water	11:45	0:0	4	inlink
op	11:51	0:0	4	->
water	11:53	0:0	4	h
arg	11:56	11:69	3	bbox->min_val
water	11:56	0:0	4	bbox
op	11:60	0:0	4	->
water	11:62	0:0	4	min_val
water	11:70	0:0	2	;
water	12:4	0:0	2	w
op	12:6	0:0	2	=
water	12:8	0:0	2	box
op	12:11	0:0	2	.
water	12:12	0:0	2	x2
op	12:15	0:0	2	-
water	12:17	0:0	2	box
op	12:20	0:0	2	.
water	12:21	0:0	2	x1
op	12:24	0:0	2	+
water	12:26	0:0	2	1
water	12:27	0:0	2	;
water	13:4	0:0	2	h
op	13:6	0:0	2	=
water	13:8	0:0	2	box
op	13:11	0:0	2	.
water	13:12	0:0	2	y2
op	13:15	0:0	2	-
water	13:17	0:0	2	box
op	13:20	0:0	2	.
water	13:21	0:0	2	y1
op	13:24	0:0	2	+
water	13:26	0:0	2	1
water	13:27	0:0	2	;
call	14:4	16:79	2	av_log
arg	14:11	14:14	3	ctx
water	14:11	0:0	4	ctx
arg	14:16	14:27	3	AV_LOG_INFO
water	14:16	0:0	4	AV_LOG_INFO
arg	15:11	15:43	3	"n:%"PRId64" pts:%s pts_time:%s"
water	15:11	0:0	4	"n:%"
water	15:16	0:0	4	PRId64
water	15:22	0:0	4	" pts:%s pts_time:%s"
arg	15:45	15:64	3	inlink->frame_count
water	15:45	0:0	4	inlink
op	15:51	0:0	4	->
water	15:53	0:0	4	frame_count
arg	16:11	16:32	3	av_ts2str(frame->pts)
call	16:11	16:31	4	av_ts2str
arg	16:21	16:31	5	frame->pts
water	16:21	0:0	6	frame
op	16:26	0:0	6	->
water	16:28	0:0	6	pts
arg	16:34	16:79	3	av_ts2timestr(frame->pts,&inlink->time_base)
call	16:34	16:78	4	av_ts2timestr
arg	16:48	16:58	5	frame->pts
water	16:48	0:0	6	frame
op	16:53	0:0	6	->
water	16:55	0:0	6	pts
arg	16:60	16:78	5	&inlink->time_base
op	16:60	0:0	6	&
water	16:61	0:0	6	inlink
op	16:67	0:0	6	->
water	16:69	0:0	6	time_base
water	16:80	0:0	2	;
if	17:4	31:4	2	(has_bbox)
cond	17:8	17:8	3	has_bbox
water	17:8	0:0	4	has_bbox
stmts	17:18	31:4	3	
water	17:18	0:0	4	{
decl	18:8	18:67	4	AVDictionary	**metadata
op	18:32	0:0	4	=
call	18:34	18:66	5	avpriv_frame_get_metadatap
arg	18:61	18:66	6	frame
water	18:61	0:0	7	frame
call	19:8	19:40	4	SET_META
arg	19:17	19:32	5	"lavfi.bbox.x1"
water	19:17	0:0	6	"lavfi.bbox.x1"
arg	19:34	19:40	5	box.x1
water	19:34	0:0	6	box
op	19:37	0:0	6	.
water	19:38	0:0	6	x1
call	20:8	20:40	4	SET_META
arg	20:17	20:32	5	"lavfi.bbox.x2"
water	20:17	0:0	6	"lavfi.bbox.x2"
arg	20:34	20:40	5	box.x2
water	20:34	0:0	6	box
op	20:37	0:0	6	.
water	20:38	0:0	6	x2
call	21:8	21:40	4	SET_META
arg	21:17	21:32	5	"lavfi.bbox.y1"
water	21:17	0:0	6	"lavfi.bbox.y1"
arg	21:34	21:40	5	box.y1
water	21:34	0:0	6	box
op	21:37	0:0	6	.
water	21:38	0:0	6	y1
call	22:8	22:40	4	SET_META
arg	22:17	22:32	5	"lavfi.bbox.y2"
water	22:17	0:0	6	"lavfi.bbox.y2"
arg	22:34	22:40	5	box.y2
water	22:34	0:0	6	box
op	22:37	0:0	6	.
water	22:38	0:0	6	y2
call	23:8	23:35	4	SET_META
arg	23:17	23:31	5	"lavfi.bbox.w"
water	23:17	0:0	6	"lavfi.bbox.w"
arg	23:34	23:35	5	w
water	23:34	0:0	6	w
call	24:8	24:35	4	SET_META
arg	24:17	24:31	5	"lavfi.bbox.h"
water	24:17	0:0	6	"lavfi.bbox.h"
arg	24:34	24:35	5	h
water	24:34	0:0	6	h
call	25:8	30:35	4	av_log
arg	25:15	25:18	5	ctx
water	25:15	0:0	6	ctx
arg	25:20	25:31	5	AV_LOG_INFO
water	25:20	0:0	6	AV_LOG_INFO
arg	26:15	27:54	5	" x1:%d x2:%d y1:%d y2:%d w:%d h:%d"" crop=%d:%d:%d:%d drawbox=%d:%d:%d:%d"
water	26:15	0:0	6	" x1:%d x2:%d y1:%d y2:%d w:%d h:%d"
water	27:15	0:0	6	" crop=%d:%d:%d:%d drawbox=%d:%d:%d:%d"
arg	28:15	28:21	5	box.x1
water	28:15	0:0	6	box
op	28:18	0:0	6	.
water	28:19	0:0	6	x1
arg	28:23	28:29	5	box.x2
water	28:23	0:0	6	box
op	28:26	0:0	6	.
water	28:27	0:0	6	x2
arg	28:31	28:37	5	box.y1
water	28:31	0:0	6	box
op	28:34	0:0	6	.
water	28:35	0:0	6	y1
arg	28:39	28:45	5	box.y2
water	28:39	0:0	6	box
op	28:42	0:0	6	.
water	28:43	0:0	6	y2
arg	28:47	28:48	5	w
water	28:47	0:0	6	w
arg	28:50	28:51	5	h
water	28:50	0:0	6	h
arg	29:15	29:16	5	w
water	29:15	0:0	6	w
arg	29:18	29:19	5	h
water	29:18	0:0	6	h
arg	29:21	29:27	5	box.x1
water	29:21	0:0	6	box
op	29:24	0:0	6	.
water	29:25	0:0	6	x1
arg	29:29	29:35	5	box.y1
water	29:29	0:0	6	box
op	29:32	0:0	6	.
water	29:33	0:0	6	y1
arg	30:15	30:21	5	box.x1
water	30:15	0:0	6	box
op	30:18	0:0	6	.
water	30:19	0:0	6	x1
arg	30:23	30:29	5	box.y1
water	30:23	0:0	6	box
op	30:26	0:0	6	.
water	30:27	0:0	6	y1
arg	30:31	30:32	5	w
water	30:31	0:0	6	w
arg	30:34	30:35	5	h
water	30:34	0:0	6	h
water	30:36	0:0	4	;
water	31:4	0:0	4	}
call	32:4	32:33	2	av_log
arg	32:11	32:14	3	ctx
water	32:11	0:0	4	ctx
arg	32:16	32:27	3	AV_LOG_INFO
water	32:16	0:0	4	AV_LOG_INFO
arg	32:29	32:33	3	"\n"
water	32:29	0:0	4	"\n"
water	32:34	0:0	2	;
return	33:4	33:58	2	ff_filter_frame(inlink->dst->outputs[0],frame)
call	33:11	33:57	3	ff_filter_frame
arg	33:27	33:50	4	inlink->dst->outputs[0]
water	33:27	0:0	5	inlink
op	33:33	0:0	5	->
water	33:35	0:0	5	dst
op	33:38	0:0	5	->
water	33:40	0:0	5	outputs
op	33:47	0:0	5	[
water	33:48	0:0	5	0
op	33:49	0:0	5	]
arg	33:52	33:57	4	frame
water	33:52	0:0	5	frame

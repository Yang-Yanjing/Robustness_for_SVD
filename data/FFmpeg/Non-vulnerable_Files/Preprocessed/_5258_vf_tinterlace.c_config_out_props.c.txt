func	1:0	64:0	0	static int	config_out_props
params	1:27	0:0	1	
param	1:28	1:49	2	AVFilterLink *	outlink
stmnts	0:0	63:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:50	2	AVFilterLink	*inlink
op	4:25	0:0	2	=
water	4:27	0:0	2	outlink
op	4:34	0:0	2	->
water	4:36	0:0	2	src
op	4:39	0:0	2	->
water	4:41	0:0	2	inputs
op	4:47	0:0	2	[
water	4:48	0:0	2	0
op	4:49	0:0	2	]
decl	5:4	5:73	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:72	3	av_pix_fmt_desc_get
arg	5:57	5:72	4	outlink->format
water	5:57	0:0	5	outlink
op	5:64	0:0	5	->
water	5:66	0:0	5	format
decl	6:4	6:45	2	TInterlaceContext	*tinterlace
op	6:34	0:0	2	=
water	6:36	0:0	2	ctx
op	6:39	0:0	2	->
water	6:41	0:0	2	priv
decl	7:4	7:9	2	int	i
water	8:4	0:0	2	tinterlace
op	8:14	0:0	2	->
water	8:16	0:0	2	vsub
op	8:21	0:0	2	=
water	8:23	0:0	2	desc
op	8:27	0:0	2	->
water	8:29	0:0	2	log2_chroma_h
water	8:42	0:0	2	;
water	9:4	0:0	2	outlink
op	9:11	0:0	2	->
water	9:13	0:0	2	flags
op	9:19	0:0	2	|=
water	9:22	0:0	2	FF_LINK_FLAG_REQUEST_LOOP
water	9:47	0:0	2	;
water	10:4	0:0	2	outlink
op	10:11	0:0	2	->
water	10:13	0:0	2	w
op	10:15	0:0	2	=
water	10:17	0:0	2	inlink
op	10:23	0:0	2	->
water	10:25	0:0	2	w
water	10:26	0:0	2	;
water	11:4	0:0	2	outlink
op	11:11	0:0	2	->
water	11:13	0:0	2	h
op	11:15	0:0	2	=
water	11:17	0:0	2	tinterlace
op	11:27	0:0	2	->
water	11:29	0:0	2	mode
op	11:34	0:0	2	==
water	11:37	0:0	2	MODE_MERGE
op	11:48	0:0	2	||
water	11:51	0:0	2	tinterlace
op	11:61	0:0	2	->
water	11:63	0:0	2	mode
op	11:68	0:0	2	==
water	11:71	0:0	2	MODE_PAD
water	11:80	0:0	2	?
water	12:8	0:0	2	inlink
op	12:14	0:0	2	->
water	12:16	0:0	2	h
op	12:17	0:0	2	*
water	12:18	0:0	2	2
water	12:20	0:0	2	:
water	12:22	0:0	2	inlink
op	12:28	0:0	2	->
water	12:30	0:0	2	h
water	12:31	0:0	2	;
if	13:4	15:64	2	(tinterlace -> mode == MODE_MERGE || tinterlace -> mode == MODE_PAD)
cond	13:8	13:62	3	tinterlace -> mode == MODE_MERGE || tinterlace -> mode == MODE_PAD
water	13:8	0:0	4	tinterlace
op	13:18	0:0	4	->
water	13:20	0:0	4	mode
op	13:25	0:0	4	==
water	13:28	0:0	4	MODE_MERGE
op	13:39	0:0	4	||
water	13:42	0:0	4	tinterlace
op	13:52	0:0	4	->
water	13:54	0:0	4	mode
op	13:59	0:0	4	==
water	13:62	0:0	4	MODE_PAD
stmts	14:8	15:64	3	
water	14:8	0:0	4	outlink
op	14:15	0:0	4	->
water	14:17	0:0	4	sample_aspect_ratio
op	14:37	0:0	4	=
call	14:39	15:63	4	av_mul_q
arg	14:48	14:75	5	inlink->sample_aspect_ratio
water	14:48	0:0	6	inlink
op	14:54	0:0	6	->
water	14:56	0:0	6	sample_aspect_ratio
arg	15:48	15:63	5	av_make_q(2,1)
call	15:48	15:62	6	av_make_q
arg	15:58	15:59	7	2
water	15:58	0:0	8	2
arg	15:61	15:62	7	1
water	15:61	0:0	8	1
water	15:64	0:0	4	;
if	16:4	31:4	2	(tinterlace -> mode == MODE_PAD)
cond	16:8	16:28	3	tinterlace -> mode == MODE_PAD
water	16:8	0:0	4	tinterlace
op	16:18	0:0	4	->
water	16:20	0:0	4	mode
op	16:25	0:0	4	==
water	16:28	0:0	4	MODE_PAD
stmts	16:38	31:4	3	
water	16:38	0:0	4	{
decl	17:8	17:47	4	uint8_t	black[4]
op	17:25	0:0	4	=
water	17:27	0:0	4	{
water	17:29	0:0	4	16
water	17:31	0:0	4	,
water	17:33	0:0	4	128
water	17:36	0:0	4	,
water	17:38	0:0	4	128
water	17:41	0:0	4	,
water	17:43	0:0	4	16
water	17:46	0:0	4	}
decl	18:8	18:18	4	int	i
water	18:13	0:0	4	,
decl	18:8	18:18	4	int	ret
if	19:8	20:35	4	(ff_fmt_is_in (outlink -> format ,full_scale_yuvj_pix_fmts ))
cond	19:12	19:66	5	ff_fmt_is_in (outlink -> format ,full_scale_yuvj_pix_fmts )
call	19:12	19:66	6	ff_fmt_is_in
arg	19:25	19:40	7	outlink->format
water	19:25	0:0	8	outlink
op	19:32	0:0	8	->
water	19:34	0:0	8	format
arg	19:42	19:66	7	full_scale_yuvj_pix_fmts
water	19:42	0:0	8	full_scale_yuvj_pix_fmts
stmts	20:12	20:35	5	
water	20:12	0:0	6	black
op	20:17	0:0	6	[
water	20:18	0:0	6	0
op	20:19	0:0	6	]
op	20:21	0:0	6	=
water	20:23	0:0	6	black
op	20:28	0:0	6	[
water	20:29	0:0	6	3
op	20:30	0:0	6	]
op	20:32	0:0	6	=
water	20:34	0:0	6	0
water	20:35	0:0	6	;
water	21:8	0:0	4	ret
op	21:12	0:0	4	=
call	21:14	22:71	4	av_image_alloc
arg	21:29	21:51	5	tinterlace->black_data
water	21:29	0:0	6	tinterlace
op	21:39	0:0	6	->
water	21:41	0:0	6	black_data
arg	21:53	21:79	5	tinterlace->black_linesize
water	21:53	0:0	6	tinterlace
op	21:63	0:0	6	->
water	21:65	0:0	6	black_linesize
arg	22:29	22:39	5	outlink->w
water	22:29	0:0	6	outlink
op	22:36	0:0	6	->
water	22:38	0:0	6	w
arg	22:41	22:51	5	outlink->h
water	22:41	0:0	6	outlink
op	22:48	0:0	6	->
water	22:50	0:0	6	h
arg	22:53	22:68	5	outlink->format
water	22:53	0:0	6	outlink
op	22:60	0:0	6	->
water	22:62	0:0	6	format
arg	22:70	22:71	5	1
water	22:70	0:0	6	1
water	22:72	0:0	4	;
if	23:8	24:22	4	(ret < 0)
cond	23:12	23:18	5	ret < 0
water	23:12	0:0	6	ret
op	23:16	0:0	6	<
water	23:18	0:0	6	0
stmts	24:12	24:22	5	
return	24:12	24:22	6	ret
water	24:19	0:0	7	ret
for	26:8	30:8	4	(i = 0 ;i < 4 && tinterlace -> black_data [ i ];i ++)
forinit	26:13	26:18	5	i = 0 ;
water	26:13	0:0	6	i
op	26:15	0:0	6	=
water	26:17	0:0	6	0
water	26:18	0:0	6	;
cond	26:20	26:53	5	i < 4 && tinterlace -> black_data [ i ]
water	26:20	0:0	6	i
op	26:22	0:0	6	<
water	26:24	0:0	6	4
op	26:26	0:0	6	&&
water	26:29	0:0	6	tinterlace
op	26:39	0:0	6	->
water	26:41	0:0	6	black_data
op	26:51	0:0	6	[
water	26:52	0:0	6	i
op	26:53	0:0	6	]
forexpr	26:56	26:57	5	i ++
water	26:56	0:0	6	i
op	26:57	0:0	6	++
stmts	26:61	30:8	5	
water	26:61	0:0	6	{
decl	27:12	27:99	6	int	h
op	27:18	0:0	6	=
water	27:20	0:0	6	i
op	27:22	0:0	6	==
water	27:25	0:0	6	1
op	27:27	0:0	6	||
water	27:30	0:0	6	i
op	27:32	0:0	6	==
water	27:35	0:0	6	2
water	27:37	0:0	6	?
call	27:39	27:85	7	FF_CEIL_RSHIFT
arg	27:54	27:64	8	outlink->h
water	27:54	0:0	9	outlink
op	27:61	0:0	9	->
water	27:63	0:0	9	h
arg	27:66	27:85	8	desc->log2_chroma_h
water	27:66	0:0	9	desc
op	27:70	0:0	9	->
water	27:72	0:0	9	log2_chroma_h
water	27:87	0:0	6	:
water	27:89	0:0	6	outlink
op	27:96	0:0	6	->
water	27:98	0:0	6	h
call	28:12	29:52	6	memset
arg	28:19	28:44	7	tinterlace->black_data[i]
water	28:19	0:0	8	tinterlace
op	28:29	0:0	8	->
water	28:31	0:0	8	black_data
op	28:41	0:0	8	[
water	28:42	0:0	8	i
op	28:43	0:0	8	]
arg	28:46	28:54	7	black[i]
water	28:46	0:0	8	black
op	28:51	0:0	8	[
water	28:52	0:0	8	i
op	28:53	0:0	8	]
arg	29:19	29:52	7	tinterlace->black_linesize[i]*h
water	29:19	0:0	8	tinterlace
op	29:29	0:0	8	->
water	29:31	0:0	8	black_linesize
op	29:45	0:0	8	[
water	29:46	0:0	8	i
op	29:47	0:0	8	]
op	29:49	0:0	8	*
water	29:51	0:0	8	h
water	29:53	0:0	6	;
water	30:8	0:0	6	}
water	31:4	0:0	4	}
if	32:4	38:4	2	(( tinterlace -> flags & TINTERLACE_FLAG_VLPF ) && ! ( tinterlace -> mode == MODE_INTERLEAVE_TOP || tinterlace -> mode == MODE_INTERLEAVE_BOTTOM ))
cond	32:8	34:59	3	( tinterlace -> flags & TINTERLACE_FLAG_VLPF ) && ! ( tinterlace -> mode == MODE_INTERLEAVE_TOP || tinterlace -> mode == MODE_INTERLEAVE_BOTTOM )
water	32:8	0:0	4	(
water	32:9	0:0	4	tinterlace
op	32:19	0:0	4	->
water	32:21	0:0	4	flags
op	32:27	0:0	4	&
water	32:29	0:0	4	TINTERLACE_FLAG_VLPF
water	32:49	0:0	4	)
op	33:12	0:0	4	&&
op	33:15	0:0	4	!
water	33:16	0:0	4	(
water	33:17	0:0	4	tinterlace
op	33:27	0:0	4	->
water	33:29	0:0	4	mode
op	33:34	0:0	4	==
water	33:37	0:0	4	MODE_INTERLEAVE_TOP
op	34:14	0:0	4	||
water	34:17	0:0	4	tinterlace
op	34:27	0:0	4	->
water	34:29	0:0	4	mode
op	34:34	0:0	4	==
water	34:37	0:0	4	MODE_INTERLEAVE_BOTTOM
water	34:59	0:0	4	)
stmts	34:62	38:4	3	
water	34:62	0:0	4	{
call	35:8	36:32	4	av_log
arg	35:15	35:18	5	ctx
water	35:15	0:0	6	ctx
arg	35:20	35:34	5	AV_LOG_WARNING
water	35:20	0:0	6	AV_LOG_WARNING
arg	35:36	35:81	5	"low_pass_filter flag ignored with mode %d\n"
water	35:36	0:0	6	"low_pass_filter flag ignored with mode %d\n"
arg	36:16	36:32	5	tinterlace->mode
water	36:16	0:0	6	tinterlace
op	36:26	0:0	6	->
water	36:28	0:0	6	mode
water	36:33	0:0	4	;
water	37:8	0:0	4	tinterlace
op	37:18	0:0	4	->
water	37:20	0:0	4	flags
op	37:26	0:0	4	&=
water	37:29	0:0	4	~TINTERLACE_FLAG_VLPF
water	37:50	0:0	4	;
water	38:4	0:0	4	}
water	39:4	0:0	2	tinterlace
op	39:14	0:0	2	->
water	39:16	0:0	2	preout_time_base
op	39:33	0:0	2	=
water	39:35	0:0	2	inlink
op	39:41	0:0	2	->
water	39:43	0:0	2	time_base
water	39:52	0:0	2	;
if	40:4	44:4	2	(tinterlace -> mode == MODE_INTERLACEX2)
cond	40:8	40:28	3	tinterlace -> mode == MODE_INTERLACEX2
water	40:8	0:0	4	tinterlace
op	40:18	0:0	4	->
water	40:20	0:0	4	mode
op	40:25	0:0	4	==
water	40:28	0:0	4	MODE_INTERLACEX2
stmts	40:46	44:4	3	
water	40:46	0:0	4	{
water	41:8	0:0	4	tinterlace
op	41:18	0:0	4	->
water	41:20	0:0	4	preout_time_base
op	41:36	0:0	4	.
water	41:37	0:0	4	den
op	41:41	0:0	4	*=
water	41:44	0:0	4	2
water	41:45	0:0	4	;
water	42:8	0:0	4	outlink
op	42:15	0:0	4	->
water	42:17	0:0	4	frame_rate
op	42:28	0:0	4	=
call	42:30	42:76	4	av_mul_q
arg	42:39	42:57	5	inlink->frame_rate
water	42:39	0:0	6	inlink
op	42:45	0:0	6	->
water	42:47	0:0	6	frame_rate
arg	42:59	42:76	5	(AVRational){2,1}
water	42:59	0:0	6	(
water	42:60	0:0	6	AVRational
water	42:70	0:0	6	)
water	42:71	0:0	6	{
water	42:72	0:0	6	2
water	42:73	0:0	6	,
water	42:74	0:0	6	1
water	42:75	0:0	6	}
water	42:77	0:0	4	;
water	43:8	0:0	4	outlink
op	43:15	0:0	4	->
water	43:17	0:0	4	time_base
op	43:28	0:0	4	=
call	43:30	43:76	4	av_mul_q
arg	43:39	43:57	5	inlink->time_base
water	43:39	0:0	6	inlink
op	43:45	0:0	6	->
water	43:47	0:0	6	time_base
arg	43:59	43:76	5	(AVRational){1,2}
water	43:59	0:0	6	(
water	43:60	0:0	6	AVRational
water	43:70	0:0	6	)
water	43:71	0:0	6	{
water	43:72	0:0	6	1
water	43:73	0:0	6	,
water	43:74	0:0	6	2
water	43:75	0:0	6	}
water	43:77	0:0	4	;
water	44:4	0:0	4	}
else	44:6	47:4	2
stmts	44:11	47:4	3	
if	44:11	47:4	4	(tinterlace -> mode != MODE_PAD)
cond	44:15	44:35	5	tinterlace -> mode != MODE_PAD
water	44:15	0:0	6	tinterlace
op	44:25	0:0	6	->
water	44:27	0:0	6	mode
op	44:32	0:0	6	!=
water	44:35	0:0	6	MODE_PAD
stmts	44:45	47:4	5	
water	44:45	0:0	6	{
water	45:8	0:0	6	outlink
op	45:15	0:0	6	->
water	45:17	0:0	6	frame_rate
op	45:28	0:0	6	=
call	45:30	45:76	6	av_mul_q
arg	45:39	45:57	7	inlink->frame_rate
water	45:39	0:0	8	inlink
op	45:45	0:0	8	->
water	45:47	0:0	8	frame_rate
arg	45:59	45:76	7	(AVRational){1,2}
water	45:59	0:0	8	(
water	45:60	0:0	8	AVRational
water	45:70	0:0	8	)
water	45:71	0:0	8	{
water	45:72	0:0	8	1
water	45:73	0:0	8	,
water	45:74	0:0	8	2
water	45:75	0:0	8	}
water	45:77	0:0	6	;
water	46:8	0:0	6	outlink
op	46:15	0:0	6	->
water	46:17	0:0	6	time_base
op	46:28	0:0	6	=
call	46:30	46:76	6	av_mul_q
arg	46:39	46:57	7	inlink->time_base
water	46:39	0:0	8	inlink
op	46:45	0:0	8	->
water	46:47	0:0	8	time_base
arg	46:59	46:76	7	(AVRational){2,1}
water	46:59	0:0	8	(
water	46:60	0:0	8	AVRational
water	46:70	0:0	8	)
water	46:71	0:0	8	{
water	46:72	0:0	8	2
water	46:73	0:0	8	,
water	46:74	0:0	8	1
water	46:75	0:0	8	}
water	46:77	0:0	6	;
water	47:4	0:0	6	}
for	48:4	51:4	2	(i = 0 ;i <FF_ARRAY_ELEMS (standard_tbs );i ++)
forinit	48:9	48:14	3	i = 0 ;
water	48:9	0:0	4	i
op	48:11	0:0	4	=
water	48:13	0:0	4	0
water	48:14	0:0	4	;
cond	48:16	48:45	3	i <FF_ARRAY_ELEMS (standard_tbs )
water	48:16	0:0	4	i
op	48:17	0:0	4	<
call	48:18	48:45	4	FF_ARRAY_ELEMS
arg	48:33	48:45	5	standard_tbs
water	48:33	0:0	6	standard_tbs
forexpr	48:48	48:49	3	i ++
water	48:48	0:0	4	i
op	48:49	0:0	4	++
stmts	48:52	51:4	3	
water	48:52	0:0	4	{
if	49:8	50:17	4	(!av_cmp_q (standard_tbs [ i ] ,outlink -> time_base ))
cond	49:12	49:57	5	!av_cmp_q (standard_tbs [ i ] ,outlink -> time_base )
op	49:12	0:0	6	!
call	49:13	49:57	6	av_cmp_q
arg	49:22	49:37	7	standard_tbs[i]
water	49:22	0:0	8	standard_tbs
op	49:34	0:0	8	[
water	49:35	0:0	8	i
op	49:36	0:0	8	]
arg	49:39	49:57	7	outlink->time_base
water	49:39	0:0	8	outlink
op	49:46	0:0	8	->
water	49:48	0:0	8	time_base
stmts	50:12	50:17	5	
break	50:12	50:17	6	
water	51:4	0:0	4	}
if	52:4	54:57	2	(i ==FF_ARRAY_ELEMS (standard_tbs ) || ( tinterlace -> flags & TINTERLACE_FLAG_EXACT_TB ))
cond	52:8	53:53	3	i ==FF_ARRAY_ELEMS (standard_tbs ) || ( tinterlace -> flags & TINTERLACE_FLAG_EXACT_TB )
water	52:8	0:0	4	i
op	52:10	0:0	4	==
call	52:13	52:40	4	FF_ARRAY_ELEMS
arg	52:28	52:40	5	standard_tbs
water	52:28	0:0	6	standard_tbs
op	52:42	0:0	4	||
water	53:8	0:0	4	(
water	53:9	0:0	4	tinterlace
op	53:19	0:0	4	->
water	53:21	0:0	4	flags
op	53:27	0:0	4	&
water	53:29	0:0	4	TINTERLACE_FLAG_EXACT_TB
water	53:53	0:0	4	)
stmts	54:8	54:57	3	
water	54:8	0:0	4	outlink
op	54:15	0:0	4	->
water	54:17	0:0	4	time_base
op	54:27	0:0	4	=
water	54:29	0:0	4	tinterlace
op	54:39	0:0	4	->
water	54:41	0:0	4	preout_time_base
water	54:57	0:0	4	;
if	55:4	59:4	2	(tinterlace -> flags & TINTERLACE_FLAG_VLPF)
cond	55:8	55:28	3	tinterlace -> flags & TINTERLACE_FLAG_VLPF
water	55:8	0:0	4	tinterlace
op	55:18	0:0	4	->
water	55:20	0:0	4	flags
op	55:26	0:0	4	&
water	55:28	0:0	4	TINTERLACE_FLAG_VLPF
stmts	55:50	59:4	3	
water	55:50	0:0	4	{
water	56:8	0:0	4	tinterlace
op	56:18	0:0	4	->
water	56:20	0:0	4	lowpass_line
op	56:33	0:0	4	=
water	56:35	0:0	4	lowpass_line_c
water	56:49	0:0	4	;
if	57:8	58:46	4	(ARCH_X86)
cond	57:12	57:12	5	ARCH_X86
water	57:12	0:0	6	ARCH_X86
stmts	58:12	58:46	5	
call	58:12	58:45	6	ff_tinterlace_init_x86
arg	58:35	58:45	7	tinterlace
water	58:35	0:0	8	tinterlace
water	58:46	0:0	6	;
water	59:4	0:0	4	}
call	60:4	62:32	2	av_log
arg	60:11	60:14	3	ctx
water	60:11	0:0	4	ctx
arg	60:16	60:30	3	AV_LOG_VERBOSE
water	60:16	0:0	4	AV_LOG_VERBOSE
arg	60:32	60:66	3	"mode:%d filter:%s h:%d -> h:%d\n"
water	60:32	0:0	4	"mode:%d filter:%s h:%d -> h:%d\n"
arg	61:11	61:27	3	tinterlace->mode
water	61:11	0:0	4	tinterlace
op	61:21	0:0	4	->
water	61:23	0:0	4	mode
arg	61:29	61:86	3	(tinterlace->flags&TINTERLACE_FLAG_VLPF)?"on":"off"
water	61:29	0:0	4	(
water	61:30	0:0	4	tinterlace
op	61:40	0:0	4	->
water	61:42	0:0	4	flags
op	61:48	0:0	4	&
water	61:50	0:0	4	TINTERLACE_FLAG_VLPF
water	61:70	0:0	4	)
water	61:72	0:0	4	?
water	61:74	0:0	4	"on"
water	61:79	0:0	4	:
water	61:81	0:0	4	"off"
arg	62:11	62:20	3	inlink->h
water	62:11	0:0	4	inlink
op	62:17	0:0	4	->
water	62:19	0:0	4	h
arg	62:22	62:32	3	outlink->h
water	62:22	0:0	4	outlink
op	62:29	0:0	4	->
water	62:31	0:0	4	h
water	62:33	0:0	2	;
return	63:4	63:12	2	0
water	63:11	0:0	3	0

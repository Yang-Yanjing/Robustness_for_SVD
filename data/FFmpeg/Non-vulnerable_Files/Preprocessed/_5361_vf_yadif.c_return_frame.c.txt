func	1:0	32:0	0	static int	return_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
param	1:46	1:59	2	int	is_second
stmnts	0:0	31:14	1	
decl	3:4	3:35	2	YADIFContext	*yadif
op	3:24	0:0	2	=
water	3:26	0:0	2	ctx
op	3:29	0:0	2	->
water	3:31	0:0	2	priv
decl	4:4	4:41	2	AVFilterLink	*link
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	outputs
op	4:38	0:0	2	[
water	4:39	0:0	2	0
op	4:40	0:0	2	]
decl	5:4	5:16	2	int	tff
water	5:11	0:0	2	,
decl	5:4	5:16	2	int	ret
if	6:4	9:4	2	(yadif -> parity == - 1)
cond	6:8	6:26	3	yadif -> parity == - 1
water	6:8	0:0	4	yadif
op	6:13	0:0	4	->
water	6:15	0:0	4	parity
op	6:22	0:0	4	==
op	6:25	0:0	4	-
water	6:26	0:0	4	1
stmts	6:29	9:4	3	
water	6:29	0:0	4	{
water	7:8	0:0	4	tff
op	7:12	0:0	4	=
water	7:14	0:0	4	yadif
op	7:19	0:0	4	->
water	7:21	0:0	4	cur
op	7:24	0:0	4	->
water	7:26	0:0	4	interlaced_frame
water	7:43	0:0	4	?
water	8:14	0:0	4	yadif
op	8:19	0:0	4	->
water	8:21	0:0	4	cur
op	8:24	0:0	4	->
water	8:26	0:0	4	top_field_first
water	8:42	0:0	4	:
water	8:44	0:0	4	1
water	8:45	0:0	4	;
water	9:4	0:0	4	}
else	9:6	11:4	2
stmts	9:11	11:4	3	
water	9:11	0:0	4	{
water	10:8	0:0	4	tff
op	10:12	0:0	4	=
water	10:14	0:0	4	yadif
op	10:19	0:0	4	->
water	10:21	0:0	4	parity
op	10:28	0:0	4	^
water	10:30	0:0	4	1
water	10:31	0:0	4	;
water	11:4	0:0	4	}
if	12:4	18:4	2	(is_second)
cond	12:8	12:8	3	is_second
water	12:8	0:0	4	is_second
stmts	12:19	18:4	3	
water	12:19	0:0	4	{
water	13:8	0:0	4	yadif
op	13:13	0:0	4	->
water	13:15	0:0	4	out
op	13:19	0:0	4	=
call	13:21	13:63	4	ff_get_video_buffer
arg	13:41	13:45	5	link
water	13:41	0:0	6	link
arg	13:47	13:54	5	link->w
water	13:47	0:0	6	link
op	13:51	0:0	6	->
water	13:53	0:0	6	w
arg	13:56	13:63	5	link->h
water	13:56	0:0	6	link
op	13:60	0:0	6	->
water	13:62	0:0	6	h
water	13:64	0:0	4	;
if	14:8	15:34	4	(! yadif -> out)
cond	14:12	14:20	5	! yadif -> out
op	14:12	0:0	6	!
water	14:13	0:0	6	yadif
op	14:18	0:0	6	->
water	14:20	0:0	6	out
stmts	15:12	15:34	5	
return	15:12	15:34	6	AVERROR(ENOMEM)
call	15:19	15:33	7	AVERROR
arg	15:27	15:33	8	ENOMEM
water	15:27	0:0	9	ENOMEM
call	16:8	16:50	4	av_frame_copy_props
arg	16:28	16:38	5	yadif->out
water	16:28	0:0	6	yadif
op	16:33	0:0	6	->
water	16:35	0:0	6	out
arg	16:40	16:50	5	yadif->cur
water	16:40	0:0	6	yadif
op	16:45	0:0	6	->
water	16:47	0:0	6	cur
water	16:51	0:0	4	;
water	17:8	0:0	4	yadif
op	17:13	0:0	4	->
water	17:15	0:0	4	out
op	17:18	0:0	4	->
water	17:20	0:0	4	interlaced_frame
op	17:37	0:0	4	=
water	17:39	0:0	4	0
water	17:40	0:0	4	;
water	18:4	0:0	4	}
call	19:4	19:49	2	filter
arg	19:11	19:14	3	ctx
water	19:11	0:0	4	ctx
arg	19:16	19:26	3	yadif->out
water	19:16	0:0	4	yadif
op	19:21	0:0	4	->
water	19:23	0:0	4	out
arg	19:28	19:44	3	tff^!is_second
water	19:28	0:0	4	tff
op	19:32	0:0	4	^
op	19:34	0:0	4	!
water	19:35	0:0	4	is_second
arg	19:46	19:49	3	tff
water	19:46	0:0	4	tff
water	19:50	0:0	2	;
if	20:4	28:4	2	(is_second)
cond	20:8	20:8	3	is_second
water	20:8	0:0	4	is_second
stmts	20:19	28:4	3	
water	20:19	0:0	4	{
decl	21:8	21:42	4	int64_t	cur_pts
op	21:25	0:0	4	=
water	21:27	0:0	4	yadif
op	21:32	0:0	4	->
water	21:34	0:0	4	cur
op	21:37	0:0	4	->
water	21:39	0:0	4	pts
decl	22:8	22:43	4	int64_t	next_pts
op	22:25	0:0	4	=
water	22:27	0:0	4	yadif
op	22:32	0:0	4	->
water	22:34	0:0	4	next
op	22:38	0:0	4	->
water	22:40	0:0	4	pts
if	23:8	25:8	4	(next_pts != AV_NOPTS_VALUE && cur_pts != AV_NOPTS_VALUE)
cond	23:12	23:53	5	next_pts != AV_NOPTS_VALUE && cur_pts != AV_NOPTS_VALUE
water	23:12	0:0	6	next_pts
op	23:21	0:0	6	!=
water	23:24	0:0	6	AV_NOPTS_VALUE
op	23:39	0:0	6	&&
water	23:42	0:0	6	cur_pts
op	23:50	0:0	6	!=
water	23:53	0:0	6	AV_NOPTS_VALUE
stmts	23:69	25:8	5	
water	23:69	0:0	6	{
water	24:12	0:0	6	yadif
op	24:17	0:0	6	->
water	24:19	0:0	6	out
op	24:22	0:0	6	->
water	24:24	0:0	6	pts
op	24:28	0:0	6	=
water	24:30	0:0	6	cur_pts
op	24:38	0:0	6	+
water	24:40	0:0	6	next_pts
water	24:48	0:0	6	;
water	25:8	0:0	6	}
else	25:10	27:8	4
stmts	25:15	27:8	5	
water	25:15	0:0	6	{
water	26:12	0:0	6	yadif
op	26:17	0:0	6	->
water	26:19	0:0	6	out
op	26:22	0:0	6	->
water	26:24	0:0	6	pts
op	26:28	0:0	6	=
water	26:30	0:0	6	AV_NOPTS_VALUE
water	26:44	0:0	6	;
water	27:8	0:0	6	}
water	28:4	0:0	4	}
water	29:4	0:0	2	ret
op	29:8	0:0	2	=
call	29:10	29:53	2	ff_filter_frame
arg	29:26	29:41	3	ctx->outputs[0]
water	29:26	0:0	4	ctx
op	29:29	0:0	4	->
water	29:31	0:0	4	outputs
op	29:38	0:0	4	[
water	29:39	0:0	4	0
op	29:40	0:0	4	]
arg	29:43	29:53	3	yadif->out
water	29:43	0:0	4	yadif
op	29:48	0:0	4	->
water	29:50	0:0	4	out
water	29:54	0:0	2	;
water	30:4	0:0	2	yadif
op	30:9	0:0	2	->
water	30:11	0:0	2	frame_pending
op	30:25	0:0	2	=
water	30:27	0:0	2	(
water	30:28	0:0	2	yadif
op	30:33	0:0	2	->
water	30:35	0:0	2	mode
op	30:39	0:0	2	&
water	30:40	0:0	2	1
water	30:41	0:0	2	)
op	30:43	0:0	2	&&
op	30:46	0:0	2	!
water	30:47	0:0	2	is_second
water	30:56	0:0	2	;
return	31:4	31:14	2	ret
water	31:11	0:0	3	ret

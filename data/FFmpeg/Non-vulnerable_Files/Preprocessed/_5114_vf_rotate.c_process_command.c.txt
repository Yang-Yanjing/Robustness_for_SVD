func	1:0	20:0	0	static int	process_command
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
param	1:49	1:64	2	const char *	cmd
param	1:66	1:82	2	const char *	args
param	2:27	2:36	2	char *	res
param	2:38	2:49	2	int	res_len
param	2:51	2:60	2	int	flags
stmnts	0:0	19:14	1	
decl	4:4	4:31	2	RotContext	*rot
op	4:20	0:0	2	=
water	4:22	0:0	2	ctx
op	4:25	0:0	2	->
water	4:27	0:0	2	priv
decl	5:4	5:11	2	int	ret
if	6:4	17:4	2	(!strcmp (cmd ,"angle" ) || !strcmp (cmd ,"a" ))
cond	6:8	6:49	3	!strcmp (cmd ,"angle" ) || !strcmp (cmd ,"a" )
op	6:8	0:0	4	!
call	6:9	6:28	4	strcmp
arg	6:16	6:19	5	cmd
water	6:16	0:0	6	cmd
arg	6:21	6:28	5	"angle"
water	6:21	0:0	6	"angle"
op	6:30	0:0	4	||
op	6:33	0:0	4	!
call	6:34	6:49	4	strcmp
arg	6:41	6:44	5	cmd
water	6:41	0:0	6	cmd
arg	6:46	6:49	5	"a"
water	6:46	0:0	6	"a"
stmts	6:52	17:4	3	
water	6:52	0:0	4	{
decl	7:8	7:37	4	AVExpr	*old
op	7:20	0:0	4	=
water	7:22	0:0	4	rot
op	7:25	0:0	4	->
water	7:27	0:0	4	angle_expr
water	8:8	0:0	4	ret
op	8:12	0:0	4	=
call	8:14	9:58	4	av_expr_parse
arg	8:28	8:44	5	&rot->angle_expr
op	8:28	0:0	6	&
water	8:29	0:0	6	rot
op	8:32	0:0	6	->
water	8:34	0:0	6	angle_expr
arg	8:46	8:50	5	args
water	8:46	0:0	6	args
arg	8:52	8:61	5	var_names
water	8:52	0:0	6	var_names
arg	9:28	9:32	5	NULL
water	9:28	0:0	6	NULL
arg	9:34	9:38	5	NULL
water	9:34	0:0	6	NULL
arg	9:40	9:44	5	NULL
water	9:40	0:0	6	NULL
arg	9:46	9:50	5	NULL
water	9:46	0:0	6	NULL
arg	9:52	9:53	5	0
water	9:52	0:0	6	0
arg	9:55	9:58	5	ctx
water	9:55	0:0	6	ctx
water	9:59	0:0	4	;
if	10:8	15:8	4	(ret < 0)
cond	10:12	10:18	5	ret < 0
water	10:12	0:0	6	ret
op	10:16	0:0	6	<
water	10:18	0:0	6	0
stmts	10:21	15:8	5	
water	10:21	0:0	6	{
call	11:12	12:85	6	av_log
arg	11:19	11:22	7	ctx
water	11:19	0:0	8	ctx
arg	11:24	11:36	7	AV_LOG_ERROR
water	11:24	0:0	8	AV_LOG_ERROR
arg	12:19	12:79	7	"Error when parsing the expression '%s' for angle command\n"
water	12:19	0:0	8	"Error when parsing the expression '%s' for angle command\n"
arg	12:81	12:85	7	args
water	12:81	0:0	8	args
water	12:86	0:0	6	;
water	13:12	0:0	6	rot
op	13:15	0:0	6	->
water	13:17	0:0	6	angle_expr
op	13:28	0:0	6	=
water	13:30	0:0	6	old
water	13:33	0:0	6	;
return	14:12	14:22	6	ret
water	14:19	0:0	7	ret
water	15:8	0:0	6	}
call	16:8	16:24	4	av_expr_free
arg	16:21	16:24	5	old
water	16:21	0:0	6	old
water	16:25	0:0	4	;
water	17:4	0:0	4	}
else	17:6	18:29	2
stmts	18:8	18:29	3	
water	18:8	0:0	4	ret
op	18:12	0:0	4	=
call	18:14	18:28	4	AVERROR
arg	18:22	18:28	5	ENOSYS
water	18:22	0:0	6	ENOSYS
water	18:29	0:0	4	;
return	19:4	19:14	2	ret
water	19:11	0:0	3	ret

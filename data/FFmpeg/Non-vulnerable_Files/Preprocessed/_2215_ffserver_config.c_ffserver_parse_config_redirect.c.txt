func	1:0	33:0	0	static int	ffserver_parse_config_redirect
params	1:41	0:0	1	
param	1:42	1:64	2	FFServerConfig *	config
param	2:42	2:57	2	const char *	cmd
param	2:59	2:73	2	const char * *	p
param	3:42	3:68	2	FFServerStream * *	predirect
stmnts	0:0	32:12	1	
decl	5:4	5:28	2	FFServerStream	*redirect
call	6:4	6:24	2	av_assert0
arg	6:15	6:24	3	predirect
water	6:15	0:0	4	predirect
water	6:25	0:0	2	;
water	7:4	0:0	2	redirect
op	7:13	0:0	2	=
op	7:15	0:0	2	*
water	7:16	0:0	2	predirect
water	7:25	0:0	2	;
if	8:4	20:4	2	(!av_strcasecmp (cmd ,"<Redirect" ))
cond	8:8	8:39	3	!av_strcasecmp (cmd ,"<Redirect" )
op	8:8	0:0	4	!
call	8:9	8:39	4	av_strcasecmp
arg	8:23	8:26	5	cmd
water	8:23	0:0	6	cmd
arg	8:28	8:39	5	"<Redirect"
water	8:28	0:0	6	"<Redirect"
stmts	8:42	20:4	3	
water	8:42	0:0	4	{
decl	9:8	9:15	4	char	*q
water	10:8	0:0	4	redirect
op	10:17	0:0	4	=
call	10:19	10:52	4	av_mallocz
arg	10:30	10:52	5	sizeof(FFServerStream)
op	10:30	0:0	6	sizeof
water	10:36	0:0	6	(
water	10:37	0:0	6	FFServerStream
water	10:51	0:0	6	)
water	10:53	0:0	4	;
if	11:8	12:34	4	(! redirect)
cond	11:12	11:13	5	! redirect
op	11:12	0:0	6	!
water	11:13	0:0	6	redirect
stmts	12:12	12:34	5	
return	12:12	12:34	6	AVERROR(ENOMEM)
call	12:19	12:33	7	AVERROR
arg	12:27	12:33	8	ENOMEM
water	12:27	0:0	9	ENOMEM
call	13:8	13:74	4	ffserver_get_arg
arg	13:25	13:43	5	redirect->filename
water	13:25	0:0	6	redirect
op	13:33	0:0	6	->
water	13:35	0:0	6	filename
arg	13:45	13:71	5	sizeof(redirect->filename)
op	13:45	0:0	6	sizeof
water	13:51	0:0	6	(
water	13:52	0:0	6	redirect
op	13:60	0:0	6	->
water	13:62	0:0	6	filename
water	13:70	0:0	6	)
arg	13:73	13:74	5	p
water	13:73	0:0	6	p
water	13:75	0:0	4	;
water	14:8	0:0	4	q
op	14:10	0:0	4	=
call	14:12	14:43	4	strrchr
arg	14:20	14:38	5	redirect->filename
water	14:20	0:0	6	redirect
op	14:28	0:0	6	->
water	14:30	0:0	6	filename
arg	14:40	14:43	5	'>'
water	14:40	0:0	6	'>'
water	14:44	0:0	4	;
if	15:8	16:21	4	(* q)
cond	15:12	15:13	5	* q
op	15:12	0:0	6	*
water	15:13	0:0	6	q
stmts	16:12	16:21	5	
op	16:12	0:0	6	*
water	16:13	0:0	6	q
op	16:15	0:0	6	=
water	16:17	0:0	6	'\0'
water	16:21	0:0	6	;
water	17:8	0:0	4	redirect
op	17:16	0:0	4	->
water	17:18	0:0	4	stream_type
op	17:30	0:0	4	=
water	17:32	0:0	4	STREAM_TYPE_REDIRECT
water	17:52	0:0	4	;
op	18:8	0:0	4	*
water	18:9	0:0	4	predirect
op	18:19	0:0	4	=
water	18:21	0:0	4	redirect
water	18:29	0:0	4	;
return	19:8	19:16	4	0
water	19:15	0:0	5	0
water	20:4	0:0	4	}
call	21:4	21:23	2	av_assert0
arg	21:15	21:23	3	redirect
water	21:15	0:0	4	redirect
water	21:24	0:0	2	;
if	22:4	25:4	2	(!av_strcasecmp (cmd ,"URL" ))
cond	22:8	22:33	3	!av_strcasecmp (cmd ,"URL" )
op	22:8	0:0	4	!
call	22:9	22:33	4	av_strcasecmp
arg	22:23	22:26	5	cmd
water	22:23	0:0	6	cmd
arg	22:28	22:33	5	"URL"
water	22:28	0:0	6	"URL"
stmts	22:36	25:4	3	
water	22:36	0:0	4	{
call	23:8	24:50	4	ffserver_get_arg
arg	23:25	23:48	5	redirect->feed_filename
water	23:25	0:0	6	redirect
op	23:33	0:0	6	->
water	23:35	0:0	6	feed_filename
arg	24:16	24:47	5	sizeof(redirect->feed_filename)
op	24:16	0:0	6	sizeof
water	24:22	0:0	6	(
water	24:23	0:0	6	redirect
op	24:31	0:0	6	->
water	24:33	0:0	6	feed_filename
water	24:46	0:0	6	)
arg	24:49	24:50	5	p
water	24:49	0:0	6	p
water	24:51	0:0	4	;
water	25:4	0:0	4	}
else	25:6	29:4	2
stmts	25:11	29:4	3	
if	25:11	29:4	4	(!av_strcasecmp (cmd ,"</Redirect>" ))
cond	25:15	25:48	5	!av_strcasecmp (cmd ,"</Redirect>" )
op	25:15	0:0	6	!
call	25:16	25:48	6	av_strcasecmp
arg	25:30	25:33	7	cmd
water	25:30	0:0	8	cmd
arg	25:35	25:48	7	"</Redirect>"
water	25:35	0:0	8	"</Redirect>"
stmts	25:51	29:4	5	
water	25:51	0:0	6	{
if	26:8	27:50	6	(! redirect -> feed_filename [ 0 ])
cond	26:12	26:38	7	! redirect -> feed_filename [ 0 ]
op	26:12	0:0	8	!
water	26:13	0:0	8	redirect
op	26:21	0:0	8	->
water	26:23	0:0	8	feed_filename
op	26:36	0:0	8	[
water	26:37	0:0	8	0
op	26:38	0:0	8	]
stmts	27:12	27:50	7	
call	27:12	27:49	8	ERROR
arg	27:18	27:49	9	"No URL found for <Redirect>\n"
water	27:18	0:0	10	"No URL found for <Redirect>\n"
water	27:50	0:0	8	;
op	28:8	0:0	6	*
water	28:9	0:0	6	predirect
op	28:19	0:0	6	=
water	28:21	0:0	6	NULL
water	28:25	0:0	6	;
water	29:4	0:0	6	}
else	29:6	31:4	2
stmts	29:11	31:4	3	
water	29:11	0:0	4	{
call	30:8	30:70	4	ERROR
arg	30:14	30:65	5	"Invalid entry '%s' inside <Redirect></Redirect>\n"
water	30:14	0:0	6	"Invalid entry '%s' inside <Redirect></Redirect>\n"
arg	30:67	30:70	5	cmd
water	30:67	0:0	6	cmd
water	30:71	0:0	4	;
water	31:4	0:0	4	}
return	32:4	32:12	2	0
water	32:11	0:0	3	0

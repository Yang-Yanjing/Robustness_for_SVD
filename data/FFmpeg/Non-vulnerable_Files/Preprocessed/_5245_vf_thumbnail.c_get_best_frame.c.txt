func	1:0	34:0	0	static AVFrame *	get_best_frame
params	1:30	0:0	1	
param	1:31	1:51	2	AVFilterContext *	ctx
stmnts	0:0	33:17	1	
decl	3:4	3:19	2	AVFrame	*picref
decl	4:4	4:35	2	ThumbContext	*thumb
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
decl	5:4	5:32	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:32	2	int	j
water	5:12	0:0	2	,
decl	5:4	5:32	2	int	best_frame_idx
op	5:29	0:0	2	=
water	5:31	0:0	2	0
decl	6:4	6:28	2	int	nb_frames
op	6:18	0:0	2	=
water	6:20	0:0	2	thumb
op	6:25	0:0	2	->
water	6:27	0:0	2	n
decl	7:4	7:61	2	double	avg_hist[HIST_SIZE]
op	7:31	0:0	2	=
water	7:33	0:0	2	{
water	7:34	0:0	2	0
water	7:35	0:0	2	}
water	7:36	0:0	2	,
decl	7:4	7:61	2	double	sq_err
water	7:44	0:0	2	,
decl	7:4	7:61	2	double	min_sq_err
op	7:57	0:0	2	=
op	7:59	0:0	2	-
water	7:60	0:0	2	1
for	9:4	13:4	2	(j = 0 ;j <FF_ARRAY_ELEMS (avg_hist );j ++)
forinit	9:9	9:14	3	j = 0 ;
water	9:9	0:0	4	j
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:43	3	j <FF_ARRAY_ELEMS (avg_hist )
water	9:16	0:0	4	j
op	9:18	0:0	4	<
call	9:20	9:43	4	FF_ARRAY_ELEMS
arg	9:35	9:43	5	avg_hist
water	9:35	0:0	6	avg_hist
forexpr	9:46	9:47	3	j ++
water	9:46	0:0	4	j
op	9:47	0:0	4	++
stmts	9:51	13:4	3	
water	9:51	0:0	4	{
for	10:8	11:64	4	(i = 0 ;i < nb_frames;i ++)
forinit	10:13	10:18	5	i = 0 ;
water	10:13	0:0	6	i
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:18	0:0	6	;
cond	10:20	10:24	5	i < nb_frames
water	10:20	0:0	6	i
op	10:22	0:0	6	<
water	10:24	0:0	6	nb_frames
forexpr	10:35	10:36	5	i ++
water	10:35	0:0	6	i
op	10:36	0:0	6	++
stmts	11:12	11:64	5	
water	11:12	0:0	6	avg_hist
op	11:20	0:0	6	[
water	11:21	0:0	6	j
op	11:22	0:0	6	]
op	11:24	0:0	6	+=
water	11:27	0:0	6	(
water	11:28	0:0	6	double
water	11:34	0:0	6	)
water	11:35	0:0	6	thumb
op	11:40	0:0	6	->
water	11:42	0:0	6	frames
op	11:48	0:0	6	[
water	11:49	0:0	6	i
op	11:50	0:0	6	]
op	11:51	0:0	6	.
water	11:52	0:0	6	histogram
op	11:61	0:0	6	[
water	11:62	0:0	6	j
op	11:63	0:0	6	]
water	11:64	0:0	6	;
water	12:8	0:0	4	avg_hist
op	12:16	0:0	4	[
water	12:17	0:0	4	j
op	12:18	0:0	4	]
op	12:20	0:0	4	/=
water	12:23	0:0	4	nb_frames
water	12:32	0:0	4	;
water	13:4	0:0	4	}
for	15:4	19:4	2	(i = 0 ;i < nb_frames;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:20	3	i < nb_frames
water	15:16	0:0	4	i
op	15:18	0:0	4	<
water	15:20	0:0	4	nb_frames
forexpr	15:31	15:32	3	i ++
water	15:31	0:0	4	i
op	15:32	0:0	4	++
stmts	15:36	19:4	3	
water	15:36	0:0	4	{
water	16:8	0:0	4	sq_err
op	16:15	0:0	4	=
call	16:17	16:74	4	frame_sum_square_err
arg	16:38	16:64	5	thumb->frames[i].histogram
water	16:38	0:0	6	thumb
op	16:43	0:0	6	->
water	16:45	0:0	6	frames
op	16:51	0:0	6	[
water	16:52	0:0	6	i
op	16:53	0:0	6	]
op	16:54	0:0	6	.
water	16:55	0:0	6	histogram
arg	16:66	16:74	5	avg_hist
water	16:66	0:0	6	avg_hist
water	16:75	0:0	4	;
if	17:8	18:51	4	(i == 0 || sq_err < min_sq_err)
cond	17:12	17:31	5	i == 0 || sq_err < min_sq_err
water	17:12	0:0	6	i
op	17:14	0:0	6	==
water	17:17	0:0	6	0
op	17:19	0:0	6	||
water	17:22	0:0	6	sq_err
op	17:29	0:0	6	<
water	17:31	0:0	6	min_sq_err
stmts	18:12	18:51	5	
water	18:12	0:0	6	best_frame_idx
op	18:27	0:0	6	=
water	18:29	0:0	6	i
water	18:30	0:0	6	,
water	18:32	0:0	6	min_sq_err
op	18:43	0:0	6	=
water	18:45	0:0	6	sq_err
water	18:51	0:0	6	;
water	19:4	0:0	4	}
for	21:4	25:4	2	(i = 0 ;i < nb_frames;i ++)
forinit	21:9	21:14	3	i = 0 ;
water	21:9	0:0	4	i
op	21:11	0:0	4	=
water	21:13	0:0	4	0
water	21:14	0:0	4	;
cond	21:16	21:20	3	i < nb_frames
water	21:16	0:0	4	i
op	21:18	0:0	4	<
water	21:20	0:0	4	nb_frames
forexpr	21:31	21:32	3	i ++
water	21:31	0:0	4	i
op	21:32	0:0	4	++
stmts	21:36	25:4	3	
water	21:36	0:0	4	{
call	22:8	22:80	4	memset
arg	22:15	22:41	5	thumb->frames[i].histogram
water	22:15	0:0	6	thumb
op	22:20	0:0	6	->
water	22:22	0:0	6	frames
op	22:28	0:0	6	[
water	22:29	0:0	6	i
op	22:30	0:0	6	]
op	22:31	0:0	6	.
water	22:32	0:0	6	histogram
arg	22:43	22:44	5	0
water	22:43	0:0	6	0
arg	22:46	22:80	5	sizeof(thumb->frames[i].histogram)
op	22:46	0:0	6	sizeof
water	22:52	0:0	6	(
water	22:53	0:0	6	thumb
op	22:58	0:0	6	->
water	22:60	0:0	6	frames
op	22:66	0:0	6	[
water	22:67	0:0	6	i
op	22:68	0:0	6	]
op	22:69	0:0	6	.
water	22:70	0:0	6	histogram
water	22:79	0:0	6	)
water	22:81	0:0	4	;
if	23:8	24:48	4	(i != best_frame_idx)
cond	23:12	23:17	5	i != best_frame_idx
water	23:12	0:0	6	i
op	23:14	0:0	6	!=
water	23:17	0:0	6	best_frame_idx
stmts	24:12	24:48	5	
call	24:12	24:47	6	av_frame_free
arg	24:26	24:47	7	&thumb->frames[i].buf
op	24:26	0:0	8	&
water	24:27	0:0	8	thumb
op	24:32	0:0	8	->
water	24:34	0:0	8	frames
op	24:40	0:0	8	[
water	24:41	0:0	8	i
op	24:42	0:0	8	]
op	24:43	0:0	8	.
water	24:44	0:0	8	buf
water	24:48	0:0	6	;
water	25:4	0:0	4	}
water	26:4	0:0	2	thumb
op	26:9	0:0	2	->
water	26:11	0:0	2	n
op	26:13	0:0	2	=
water	26:15	0:0	2	0
water	26:16	0:0	2	;
water	28:4	0:0	2	picref
op	28:11	0:0	2	=
water	28:13	0:0	2	thumb
op	28:18	0:0	2	->
water	28:20	0:0	2	frames
op	28:26	0:0	2	[
water	28:27	0:0	2	best_frame_idx
op	28:41	0:0	2	]
op	28:42	0:0	2	.
water	28:43	0:0	2	buf
water	28:46	0:0	2	;
call	29:4	31:53	2	av_log
arg	29:11	29:14	3	ctx
water	29:11	0:0	4	ctx
arg	29:16	29:27	3	AV_LOG_INFO
water	29:16	0:0	4	AV_LOG_INFO
arg	29:29	30:38	3	"frame id #%d (pts_time=%f) selected ""from a set of %d images\n"
water	29:29	0:0	4	"frame id #%d (pts_time=%f) selected "
water	30:11	0:0	4	"from a set of %d images\n"
arg	30:40	30:54	3	best_frame_idx
water	30:40	0:0	4	best_frame_idx
arg	31:11	31:42	3	picref->pts*av_q2d(thumb->tb)
water	31:11	0:0	4	picref
op	31:17	0:0	4	->
water	31:19	0:0	4	pts
call	31:23	31:41	4	*av_q2d
arg	31:32	31:41	5	thumb->tb
water	31:32	0:0	6	thumb
op	31:37	0:0	6	->
water	31:39	0:0	6	tb
arg	31:44	31:53	3	nb_frames
water	31:44	0:0	4	nb_frames
water	31:54	0:0	2	;
water	32:4	0:0	2	thumb
op	32:9	0:0	2	->
water	32:11	0:0	2	frames
op	32:17	0:0	2	[
water	32:18	0:0	2	best_frame_idx
op	32:32	0:0	2	]
op	32:33	0:0	2	.
water	32:34	0:0	2	buf
op	32:38	0:0	2	=
water	32:40	0:0	2	NULL
water	32:44	0:0	2	;
return	33:4	33:17	2	picref
water	33:11	0:0	3	picref

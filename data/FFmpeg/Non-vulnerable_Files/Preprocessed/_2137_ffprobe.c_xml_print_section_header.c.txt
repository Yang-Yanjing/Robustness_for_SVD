func	1:0	35:0	0	static void	xml_print_section_header
params	1:36	0:0	1	
param	1:37	1:56	2	WriterContext *	wctx
stmnts	0:0	34:4	1	
decl	3:4	3:32	2	XMLContext	*xml
op	3:20	0:0	2	=
water	3:22	0:0	2	wctx
op	3:26	0:0	2	->
water	3:28	0:0	2	priv
decl	4:4	4:62	2	const struct section	*section
op	4:34	0:0	2	=
water	4:36	0:0	2	wctx
op	4:40	0:0	2	->
water	4:42	0:0	2	section
op	4:49	0:0	2	[
water	4:50	0:0	2	wctx
op	4:54	0:0	2	->
water	4:56	0:0	2	level
op	4:61	0:0	2	]
decl	5:4	6:43	2	const struct section	*parent_section
op	5:41	0:0	2	=
water	5:43	0:0	2	wctx
op	5:47	0:0	2	->
water	5:49	0:0	2	level
water	5:55	0:0	2	?
water	6:8	0:0	2	wctx
op	6:12	0:0	2	->
water	6:14	0:0	2	section
op	6:21	0:0	2	[
water	6:22	0:0	2	wctx
op	6:26	0:0	2	->
water	6:28	0:0	2	level
op	6:33	0:0	2	-
water	6:34	0:0	2	1
op	6:35	0:0	2	]
water	6:37	0:0	2	:
water	6:39	0:0	2	NULL
if	7:4	16:4	2	(wctx -> level == 0)
cond	7:8	7:23	3	wctx -> level == 0
water	7:8	0:0	4	wctx
op	7:12	0:0	4	->
water	7:14	0:0	4	level
op	7:20	0:0	4	==
water	7:23	0:0	4	0
stmts	7:26	16:4	3	
water	7:26	0:0	4	{
decl	8:8	10:83	4	const char	*qual
op	8:25	0:0	4	=
water	8:27	0:0	4	" xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' "
water	9:12	0:0	4	"xmlns:ffprobe='http://www.ffmpeg.org/schema/ffprobe' "
water	10:12	0:0	4	"xsi:schemaLocation='http://www.ffmpeg.org/schema/ffprobe ffprobe.xsd'"
call	11:8	11:61	4	printf
arg	11:15	11:61	5	"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
water	11:15	0:0	6	"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
water	11:62	0:0	4	;
call	12:8	14:47	4	printf
arg	12:15	12:32	5	"<%sffprobe%s>\n"
water	12:15	0:0	6	"<%sffprobe%s>\n"
arg	13:15	13:53	5	xml->fully_qualified?"ffprobe:":""
water	13:15	0:0	6	xml
op	13:18	0:0	6	->
water	13:20	0:0	6	fully_qualified
water	13:36	0:0	6	?
water	13:38	0:0	6	"ffprobe:"
water	13:49	0:0	6	:
water	13:51	0:0	6	""
arg	14:15	14:47	5	xml->fully_qualified?qual:""
water	14:15	0:0	6	xml
op	14:18	0:0	6	->
water	14:20	0:0	6	fully_qualified
water	14:36	0:0	6	?
water	14:38	0:0	6	qual
water	14:43	0:0	6	:
water	14:45	0:0	6	""
water	14:48	0:0	4	;
return	15:8	15:14	4	
water	16:4	0:0	4	}
if	17:4	20:4	2	(xml -> within_tag)
cond	17:8	17:13	3	xml -> within_tag
water	17:8	0:0	4	xml
op	17:11	0:0	4	->
water	17:13	0:0	4	within_tag
stmts	17:25	20:4	3	
water	17:25	0:0	4	{
water	18:8	0:0	4	xml
op	18:11	0:0	4	->
water	18:13	0:0	4	within_tag
op	18:24	0:0	4	=
water	18:26	0:0	4	0
water	18:27	0:0	4	;
call	19:8	19:20	4	printf
arg	19:15	19:20	5	">\n"
water	19:15	0:0	6	">\n"
water	19:21	0:0	4	;
water	20:4	0:0	4	}
if	21:4	23:4	2	(section -> flags & SECTION_FLAG_HAS_VARIABLE_FIELDS)
cond	21:8	21:25	3	section -> flags & SECTION_FLAG_HAS_VARIABLE_FIELDS
water	21:8	0:0	4	section
op	21:15	0:0	4	->
water	21:17	0:0	4	flags
op	21:23	0:0	4	&
water	21:25	0:0	4	SECTION_FLAG_HAS_VARIABLE_FIELDS
stmts	21:59	23:4	3	
water	21:59	0:0	4	{
water	22:8	0:0	4	xml
op	22:11	0:0	4	->
water	22:13	0:0	4	indent_level
op	22:25	0:0	4	++
water	22:27	0:0	4	;
water	23:4	0:0	4	}
else	23:6	34:4	2
stmts	23:11	34:4	3	
water	23:11	0:0	4	{
if	24:8	26:24	4	(parent_section && ( parent_section -> flags & SECTION_FLAG_IS_WRAPPER ) && wctx -> level && wctx -> nb_item [ wctx -> level - 1 ])
cond	24:12	25:54	5	parent_section && ( parent_section -> flags & SECTION_FLAG_IS_WRAPPER ) && wctx -> level && wctx -> nb_item [ wctx -> level - 1 ]
water	24:12	0:0	6	parent_section
op	24:27	0:0	6	&&
water	24:30	0:0	6	(
water	24:31	0:0	6	parent_section
op	24:45	0:0	6	->
water	24:47	0:0	6	flags
op	24:53	0:0	6	&
water	24:55	0:0	6	SECTION_FLAG_IS_WRAPPER
water	24:78	0:0	6	)
op	24:80	0:0	6	&&
water	25:12	0:0	6	wctx
op	25:16	0:0	6	->
water	25:18	0:0	6	level
op	25:24	0:0	6	&&
water	25:27	0:0	6	wctx
op	25:31	0:0	6	->
water	25:33	0:0	6	nb_item
op	25:40	0:0	6	[
water	25:41	0:0	6	wctx
op	25:45	0:0	6	->
water	25:47	0:0	6	level
op	25:52	0:0	6	-
water	25:53	0:0	6	1
op	25:54	0:0	6	]
stmts	26:12	26:24	5	
call	26:12	26:23	6	printf
arg	26:19	26:23	7	"\n"
water	26:19	0:0	8	"\n"
water	26:24	0:0	6	;
water	27:8	0:0	4	xml
op	27:11	0:0	4	->
water	27:13	0:0	4	indent_level
op	27:25	0:0	4	++
water	27:27	0:0	4	;
if	28:8	30:8	4	(section -> flags & SECTION_FLAG_IS_ARRAY)
cond	28:12	28:29	5	section -> flags & SECTION_FLAG_IS_ARRAY
water	28:12	0:0	6	section
op	28:19	0:0	6	->
water	28:21	0:0	6	flags
op	28:27	0:0	6	&
water	28:29	0:0	6	SECTION_FLAG_IS_ARRAY
stmts	28:52	30:8	5	
water	28:52	0:0	6	{
call	29:12	29:23	6	XML_INDENT
water	29:24	0:0	6	;
call	29:26	29:56	6	printf
arg	29:33	29:41	7	"<%s>\n"
water	29:33	0:0	8	"<%s>\n"
arg	29:43	29:56	7	section->name
water	29:43	0:0	8	section
op	29:50	0:0	8	->
water	29:52	0:0	8	name
water	29:57	0:0	6	;
water	30:8	0:0	6	}
else	30:10	33:8	4
stmts	30:15	33:8	5	
water	30:15	0:0	6	{
call	31:12	31:23	6	XML_INDENT
water	31:24	0:0	6	;
call	31:26	31:54	6	printf
arg	31:33	31:39	7	"<%s "
water	31:33	0:0	8	"<%s "
arg	31:41	31:54	7	section->name
water	31:41	0:0	8	section
op	31:48	0:0	8	->
water	31:50	0:0	8	name
water	31:55	0:0	6	;
water	32:12	0:0	6	xml
op	32:15	0:0	6	->
water	32:17	0:0	6	within_tag
op	32:28	0:0	6	=
water	32:30	0:0	6	1
water	32:31	0:0	6	;
water	33:8	0:0	6	}
water	34:4	0:0	4	}

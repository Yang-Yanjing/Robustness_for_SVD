func	1:0	29:0	0	static int	mxf_write_header_metadata_sets
params	1:41	0:0	1	
param	1:42	1:60	2	AVFormatContext *	s
stmnts	0:0	28:12	1	
decl	3:4	3:44	2	const char	*material_package_name
op	3:38	0:0	2	=
water	3:40	0:0	2	NULL
decl	4:4	4:40	2	const char	*file_package_name
op	4:34	0:0	2	=
water	4:36	0:0	2	NULL
decl	5:4	5:35	2	AVDictionaryEntry	*entry
op	5:29	0:0	2	=
water	5:31	0:0	2	NULL
decl	6:4	6:23	2	AVStream	*st
op	6:17	0:0	2	=
water	6:19	0:0	2	NULL
decl	7:4	7:9	2	int	i
if	8:4	9:43	2	(entry =av_dict_get (s -> metadata ,"material_package_name" ,NULL ,0 ))
cond	8:8	8:73	3	entry =av_dict_get (s -> metadata ,"material_package_name" ,NULL ,0 )
water	8:8	0:0	4	entry
op	8:14	0:0	4	=
call	8:16	8:73	4	av_dict_get
arg	8:28	8:39	5	s->metadata
water	8:28	0:0	6	s
op	8:29	0:0	6	->
water	8:31	0:0	6	metadata
arg	8:41	8:64	5	"material_package_name"
water	8:41	0:0	6	"material_package_name"
arg	8:66	8:70	5	NULL
water	8:66	0:0	6	NULL
arg	8:72	8:73	5	0
water	8:72	0:0	6	0
stmts	9:7	9:43	3	
water	9:7	0:0	4	material_package_name
op	9:29	0:0	4	=
water	9:31	0:0	4	entry
op	9:36	0:0	4	->
water	9:38	0:0	4	value
water	9:43	0:0	4	;
if	10:4	12:4	2	(entry =av_dict_get (s -> metadata ,"file_package_name" ,NULL ,0 ))
cond	10:8	10:69	3	entry =av_dict_get (s -> metadata ,"file_package_name" ,NULL ,0 )
water	10:8	0:0	4	entry
op	10:14	0:0	4	=
call	10:16	10:69	4	av_dict_get
arg	10:28	10:39	5	s->metadata
water	10:28	0:0	6	s
op	10:29	0:0	6	->
water	10:31	0:0	6	metadata
arg	10:41	10:60	5	"file_package_name"
water	10:41	0:0	6	"file_package_name"
arg	10:62	10:66	5	NULL
water	10:62	0:0	6	NULL
arg	10:68	10:69	5	0
water	10:68	0:0	6	0
stmts	10:72	12:4	3	
water	10:72	0:0	4	{
water	11:8	0:0	4	file_package_name
op	11:26	0:0	4	=
water	11:28	0:0	4	entry
op	11:33	0:0	4	->
water	11:35	0:0	4	value
water	11:40	0:0	4	;
water	12:4	0:0	4	}
else	12:6	21:4	2
stmts	12:11	21:4	3	
water	12:11	0:0	4	{
for	14:8	20:8	4	(i = 0 ;i < s -> nb_streams;i ++)
forinit	14:13	14:18	5	i = 0 ;
water	14:13	0:0	6	i
op	14:15	0:0	6	=
water	14:17	0:0	6	0
water	14:18	0:0	6	;
cond	14:20	14:27	5	i < s -> nb_streams
water	14:20	0:0	6	i
op	14:22	0:0	6	<
water	14:24	0:0	6	s
op	14:25	0:0	6	->
water	14:27	0:0	6	nb_streams
forexpr	14:39	14:40	5	i ++
water	14:39	0:0	6	i
op	14:40	0:0	6	++
stmts	14:44	20:8	5	
water	14:44	0:0	6	{
water	15:12	0:0	6	st
op	15:15	0:0	6	=
water	15:17	0:0	6	s
op	15:18	0:0	6	->
water	15:20	0:0	6	streams
op	15:27	0:0	6	[
water	15:28	0:0	6	i
op	15:29	0:0	6	]
water	15:30	0:0	6	;
if	16:12	19:12	6	(entry =av_dict_get (st -> metadata ,"file_package_name" ,NULL ,0 ))
cond	16:16	16:78	7	entry =av_dict_get (st -> metadata ,"file_package_name" ,NULL ,0 )
water	16:16	0:0	8	entry
op	16:22	0:0	8	=
call	16:24	16:78	8	av_dict_get
arg	16:36	16:48	9	st->metadata
water	16:36	0:0	10	st
op	16:38	0:0	10	->
water	16:40	0:0	10	metadata
arg	16:50	16:69	9	"file_package_name"
water	16:50	0:0	10	"file_package_name"
arg	16:71	16:75	9	NULL
water	16:71	0:0	10	NULL
arg	16:77	16:78	9	0
water	16:77	0:0	10	0
stmts	16:81	19:12	7	
water	16:81	0:0	8	{
water	17:16	0:0	8	file_package_name
op	17:34	0:0	8	=
water	17:36	0:0	8	entry
op	17:41	0:0	8	->
water	17:43	0:0	8	value
water	17:48	0:0	8	;
break	18:16	18:21	8	
water	19:12	0:0	8	}
water	20:8	0:0	6	}
water	21:4	0:0	4	}
call	22:4	22:23	2	mxf_write_preface
arg	22:22	22:23	3	s
water	22:22	0:0	4	s
water	22:24	0:0	2	;
call	23:4	23:30	2	mxf_write_identification
arg	23:29	23:30	3	s
water	23:29	0:0	4	s
water	23:31	0:0	2	;
call	24:4	24:31	2	mxf_write_content_storage
arg	24:30	24:31	3	s
water	24:30	0:0	4	s
water	24:32	0:0	2	;
call	25:4	25:63	2	mxf_write_package
arg	25:22	25:23	3	s
water	25:22	0:0	4	s
arg	25:25	25:40	3	MaterialPackage
water	25:25	0:0	4	MaterialPackage
arg	25:42	25:63	3	material_package_name
water	25:42	0:0	4	material_package_name
water	25:64	0:0	2	;
call	26:4	26:57	2	mxf_write_package
arg	26:22	26:23	3	s
water	26:22	0:0	4	s
arg	26:25	26:38	3	SourcePackage
water	26:25	0:0	4	SourcePackage
arg	26:40	26:57	3	file_package_name
water	26:40	0:0	4	file_package_name
water	26:58	0:0	2	;
call	27:4	27:38	2	mxf_write_essence_container_data
arg	27:37	27:38	3	s
water	27:37	0:0	4	s
water	27:39	0:0	2	;
return	28:4	28:12	2	0
water	28:11	0:0	3	0

func	1:0	41:0	0	static int	parse_read_intervals
params	1:31	0:0	1	
param	1:32	1:58	2	const char *	intervals_spec
stmnts	0:0	40:14	1	
decl	3:4	3:17	2	int	ret
water	3:11	0:0	2	,
decl	3:4	3:17	2	int	n
water	3:14	0:0	2	,
decl	3:4	3:17	2	int	i
decl	4:4	4:46	2	char	*p
water	4:11	0:0	2	,
decl	4:4	4:46	2	char	*spec
op	4:19	0:0	2	=
call	4:21	4:45	3	av_strdup
arg	4:31	4:45	4	intervals_spec
water	4:31	0:0	5	intervals_spec
if	5:4	6:30	2	(! spec)
cond	5:8	5:9	3	! spec
op	5:8	0:0	4	!
water	5:9	0:0	4	spec
stmts	6:8	6:30	3	
return	6:8	6:30	4	AVERROR(ENOMEM)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	ENOMEM
water	6:23	0:0	7	ENOMEM
for	8:4	10:15	2	(n = 0 , p = spec ;* p;p ++)
forinit	8:9	8:24	3	n = 0 , p = spec ;
water	8:9	0:0	4	n
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	,
water	8:16	0:0	4	p
op	8:18	0:0	4	=
water	8:20	0:0	4	spec
water	8:24	0:0	4	;
cond	8:26	8:27	3	* p
op	8:26	0:0	4	*
water	8:27	0:0	4	p
forexpr	8:30	8:31	3	p ++
water	8:30	0:0	4	p
op	8:31	0:0	4	++
stmts	9:8	10:15	3	
if	9:8	10:15	4	(* p == ',')
cond	9:12	9:18	5	* p == ','
op	9:12	0:0	6	*
water	9:13	0:0	6	p
op	9:15	0:0	6	==
water	9:18	0:0	6	','
stmts	10:12	10:15	5	
water	10:12	0:0	6	n
op	10:13	0:0	6	++
water	10:15	0:0	6	;
water	11:4	0:0	2	n
op	11:5	0:0	2	++
water	11:7	0:0	2	;
water	12:4	0:0	2	read_intervals
op	12:19	0:0	2	=
call	12:21	12:63	2	av_malloc_array
arg	12:37	12:38	3	n
water	12:37	0:0	4	n
arg	12:40	12:63	3	sizeof(*read_intervals)
op	12:40	0:0	4	sizeof
water	12:46	0:0	4	(
op	12:47	0:0	4	*
water	12:48	0:0	4	read_intervals
water	12:62	0:0	4	)
water	12:64	0:0	2	;
if	13:4	16:4	2	(! read_intervals)
cond	13:8	13:9	3	! read_intervals
op	13:8	0:0	4	!
water	13:9	0:0	4	read_intervals
stmts	13:25	16:4	3	
water	13:25	0:0	4	{
water	14:8	0:0	4	ret
op	14:12	0:0	4	=
call	14:14	14:28	4	AVERROR
arg	14:22	14:28	5	ENOMEM
water	14:22	0:0	6	ENOMEM
water	14:29	0:0	4	;
goto	15:8	15:16	4	end
water	15:13	0:0	5	end
water	16:4	0:0	4	}
water	17:4	0:0	2	read_intervals_nb
op	17:22	0:0	2	=
water	17:24	0:0	2	n
water	17:25	0:0	2	;
water	19:4	0:0	2	p
op	19:6	0:0	2	=
water	19:8	0:0	2	spec
water	19:12	0:0	2	;
for	20:4	36:4	2	(i = 0 ;p;i ++)
forinit	20:9	20:14	3	i = 0 ;
water	20:9	0:0	4	i
op	20:11	0:0	4	=
water	20:13	0:0	4	0
water	20:14	0:0	4	;
cond	20:16	20:16	3	p
water	20:16	0:0	4	p
forexpr	20:19	20:20	3	i ++
water	20:19	0:0	4	i
op	20:20	0:0	4	++
stmts	20:24	36:4	3	
water	20:24	0:0	4	{
decl	21:8	21:18	4	char	*next
call	22:8	22:40	4	av_assert0
arg	22:19	22:40	5	i<read_intervals_nb
water	22:19	0:0	6	i
op	22:21	0:0	6	<
water	22:23	0:0	6	read_intervals_nb
water	22:41	0:0	4	;
water	23:8	0:0	4	next
op	23:13	0:0	4	=
call	23:15	23:28	4	strchr
arg	23:22	23:23	5	p
water	23:22	0:0	6	p
arg	23:25	23:28	5	','
water	23:25	0:0	6	','
water	23:29	0:0	4	;
if	24:8	25:23	4	(next)
cond	24:12	24:12	5	next
water	24:12	0:0	6	next
stmts	25:12	25:23	5	
op	25:12	0:0	6	*
water	25:13	0:0	6	next
op	25:17	0:0	6	++
op	25:20	0:0	6	=
water	25:22	0:0	6	0
water	25:23	0:0	6	;
water	26:8	0:0	4	read_intervals
op	26:22	0:0	4	[
water	26:23	0:0	4	i
op	26:24	0:0	4	]
op	26:25	0:0	4	.
water	26:26	0:0	4	id
op	26:29	0:0	4	=
water	26:31	0:0	4	i
water	26:32	0:0	4	;
water	27:8	0:0	4	ret
op	27:12	0:0	4	=
call	27:14	27:55	4	parse_read_interval
arg	27:34	27:35	5	p
water	27:34	0:0	6	p
arg	27:37	27:55	5	&read_intervals[i]
op	27:37	0:0	6	&
water	27:38	0:0	6	read_intervals
op	27:52	0:0	6	[
water	27:53	0:0	6	i
op	27:54	0:0	6	]
water	27:56	0:0	4	;
if	28:8	32:8	4	(ret < 0)
cond	28:12	28:18	5	ret < 0
water	28:12	0:0	6	ret
op	28:16	0:0	6	<
water	28:18	0:0	6	0
stmts	28:21	32:8	5	
water	28:21	0:0	6	{
call	29:12	30:23	6	av_log
arg	29:19	29:23	7	NULL
water	29:19	0:0	8	NULL
arg	29:25	29:37	7	AV_LOG_ERROR
water	29:25	0:0	8	AV_LOG_ERROR
arg	29:39	29:79	7	"Error parsing read interval #%d '%s'\n"
water	29:39	0:0	8	"Error parsing read interval #%d '%s'\n"
arg	30:19	30:20	7	i
water	30:19	0:0	8	i
arg	30:22	30:23	7	p
water	30:22	0:0	8	p
water	30:24	0:0	6	;
goto	31:12	31:20	6	end
water	31:17	0:0	7	end
water	32:8	0:0	6	}
call	33:8	33:59	4	av_log
arg	33:15	33:19	5	NULL
water	33:15	0:0	6	NULL
arg	33:21	33:35	5	AV_LOG_VERBOSE
water	33:21	0:0	6	AV_LOG_VERBOSE
arg	33:37	33:59	5	"Parsed log interval "
water	33:37	0:0	6	"Parsed log interval "
water	33:60	0:0	4	;
call	34:8	34:66	4	log_read_interval
arg	34:26	34:44	5	&read_intervals[i]
op	34:26	0:0	6	&
water	34:27	0:0	6	read_intervals
op	34:41	0:0	6	[
water	34:42	0:0	6	i
op	34:43	0:0	6	]
arg	34:46	34:50	5	NULL
water	34:46	0:0	6	NULL
arg	34:52	34:66	5	AV_LOG_VERBOSE
water	34:52	0:0	6	AV_LOG_VERBOSE
water	34:67	0:0	4	;
water	35:8	0:0	4	p
op	35:10	0:0	4	=
water	35:12	0:0	4	next
water	35:16	0:0	4	;
water	36:4	0:0	4	}
call	37:4	37:37	2	av_assert0
arg	37:15	37:37	3	i==read_intervals_nb
water	37:15	0:0	4	i
op	37:17	0:0	4	==
water	37:20	0:0	4	read_intervals_nb
water	37:38	0:0	2	;
label	38:0	38:3	2	end :
call	39:4	39:16	2	av_free
arg	39:12	39:16	3	spec
water	39:12	0:0	4	spec
water	39:17	0:0	2	;
return	40:4	40:14	2	ret
water	40:11	0:0	3	ret

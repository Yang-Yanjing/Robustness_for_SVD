func	1:0	19:0	0	static void	free_device_list
params	1:28	0:0	1	
param	1:29	1:60	2	AVOpenCLDeviceList *	device_list
stmnts	0:0	18:33	1	
decl	3:4	3:12	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	j
if	4:4	5:14	2	(! device_list)
cond	4:8	4:9	3	! device_list
op	4:8	0:0	4	!
water	4:9	0:0	4	device_list
stmts	5:8	5:14	3	
return	5:8	5:14	4	
for	6:4	16:4	2	(i = 0 ;i < device_list -> platform_num;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:33	3	i < device_list -> platform_num
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	device_list
op	6:31	0:0	4	->
water	6:33	0:0	4	platform_num
forexpr	6:47	6:48	3	i ++
water	6:47	0:0	4	i
op	6:48	0:0	4	++
stmts	6:52	16:4	3	
water	6:52	0:0	4	{
if	7:8	8:20	4	(! device_list -> platform_node [ i ])
cond	7:12	7:41	5	! device_list -> platform_node [ i ]
op	7:12	0:0	6	!
water	7:13	0:0	6	device_list
op	7:24	0:0	6	->
water	7:26	0:0	6	platform_node
op	7:39	0:0	6	[
water	7:40	0:0	6	i
op	7:41	0:0	6	]
stmts	8:12	8:20	5	
continue	8:12	8:20	6	
for	9:8	12:8	4	(j = 0 ;j < device_list -> platform_node [ i ] -> device_num;j ++)
forinit	9:13	9:18	5	j = 0 ;
water	9:13	0:0	6	j
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:55	5	j < device_list -> platform_node [ i ] -> device_num
water	9:20	0:0	6	j
op	9:22	0:0	6	<
water	9:24	0:0	6	device_list
op	9:35	0:0	6	->
water	9:37	0:0	6	platform_node
op	9:50	0:0	6	[
water	9:51	0:0	6	i
op	9:52	0:0	6	]
op	9:53	0:0	6	->
water	9:55	0:0	6	device_num
forexpr	9:67	9:68	5	j ++
water	9:67	0:0	6	j
op	9:68	0:0	6	++
stmts	9:72	12:8	5	
water	9:72	0:0	6	{
call	10:12	10:82	6	av_freep
arg	10:21	10:82	7	&(device_list->platform_node[i]->device_node[j]->device_name)
op	10:21	0:0	8	&
water	10:22	0:0	8	(
water	10:23	0:0	8	device_list
op	10:34	0:0	8	->
water	10:36	0:0	8	platform_node
op	10:49	0:0	8	[
water	10:50	0:0	8	i
op	10:51	0:0	8	]
op	10:52	0:0	8	->
water	10:54	0:0	8	device_node
op	10:65	0:0	8	[
water	10:66	0:0	8	j
op	10:67	0:0	8	]
op	10:68	0:0	8	->
water	10:70	0:0	8	device_name
water	10:81	0:0	8	)
water	10:83	0:0	6	;
call	11:12	11:69	6	av_freep
arg	11:21	11:69	7	&(device_list->platform_node[i]->device_node[j])
op	11:21	0:0	8	&
water	11:22	0:0	8	(
water	11:23	0:0	8	device_list
op	11:34	0:0	8	->
water	11:36	0:0	8	platform_node
op	11:49	0:0	8	[
water	11:50	0:0	8	i
op	11:51	0:0	8	]
op	11:52	0:0	8	->
water	11:54	0:0	8	device_node
op	11:65	0:0	8	[
water	11:66	0:0	8	j
op	11:67	0:0	8	]
water	11:68	0:0	8	)
water	11:70	0:0	6	;
water	12:8	0:0	6	}
call	13:8	13:60	4	av_freep
arg	13:17	13:60	5	&device_list->platform_node[i]->device_node
op	13:17	0:0	6	&
water	13:18	0:0	6	device_list
op	13:29	0:0	6	->
water	13:31	0:0	6	platform_node
op	13:44	0:0	6	[
water	13:45	0:0	6	i
op	13:46	0:0	6	]
op	13:47	0:0	6	->
water	13:49	0:0	6	device_node
water	13:61	0:0	4	;
call	14:8	14:64	4	av_freep
arg	14:17	14:64	5	&(device_list->platform_node[i]->platform_name)
op	14:17	0:0	6	&
water	14:18	0:0	6	(
water	14:19	0:0	6	device_list
op	14:30	0:0	6	->
water	14:32	0:0	6	platform_node
op	14:45	0:0	6	[
water	14:46	0:0	6	i
op	14:47	0:0	6	]
op	14:48	0:0	6	->
water	14:50	0:0	6	platform_name
water	14:63	0:0	6	)
water	14:65	0:0	4	;
call	15:8	15:47	4	av_freep
arg	15:17	15:47	5	&device_list->platform_node[i]
op	15:17	0:0	6	&
water	15:18	0:0	6	device_list
op	15:29	0:0	6	->
water	15:31	0:0	6	platform_node
op	15:44	0:0	6	[
water	15:45	0:0	6	i
op	15:46	0:0	6	]
water	15:48	0:0	4	;
water	16:4	0:0	4	}
call	17:4	17:40	2	av_freep
arg	17:13	17:40	3	&device_list->platform_node
op	17:13	0:0	4	&
water	17:14	0:0	4	device_list
op	17:25	0:0	4	->
water	17:27	0:0	4	platform_node
water	17:41	0:0	2	;
water	18:4	0:0	2	device_list
op	18:15	0:0	2	->
water	18:17	0:0	2	platform_num
op	18:30	0:0	2	=
water	18:32	0:0	2	0
water	18:33	0:0	2	;

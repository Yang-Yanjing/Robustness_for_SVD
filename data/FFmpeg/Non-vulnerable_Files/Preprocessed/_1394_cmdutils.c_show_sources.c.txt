func	1:0	34:0	0	int	show_sources
params	1:16	0:0	1	
param	1:17	1:29	2	void *	optctx
param	1:31	1:46	2	const char *	opt
param	1:48	1:63	2	const char *	arg
stmnts	0:0	33:14	1	
decl	3:4	3:29	2	AVInputFormat	*fmt
op	3:23	0:0	2	=
water	3:25	0:0	2	NULL
decl	4:4	4:20	2	char	*dev
op	4:14	0:0	2	=
water	4:16	0:0	2	NULL
decl	5:4	5:29	2	AVDictionary	*opts
op	5:23	0:0	2	=
water	5:25	0:0	2	NULL
decl	6:4	6:15	2	int	ret
op	6:12	0:0	2	=
water	6:14	0:0	2	0
decl	7:4	7:40	2	int	error_level
op	7:20	0:0	2	=
call	7:22	7:39	3	av_log_get_level
call	8:4	8:33	2	av_log_set_level
arg	8:21	8:33	3	AV_LOG_ERROR
water	8:21	0:0	4	AV_LOG_ERROR
water	8:34	0:0	2	;
if	9:4	10:17	2	(( ret =show_sinks_sources_parse_arg (arg ,& dev ,& opts ) ) < 0)
cond	9:8	9:65	3	( ret =show_sinks_sources_parse_arg (arg ,& dev ,& opts ) ) < 0
water	9:8	0:0	4	(
water	9:9	0:0	4	ret
op	9:13	0:0	4	=
call	9:15	9:60	4	show_sinks_sources_parse_arg
arg	9:44	9:47	5	arg
water	9:44	0:0	6	arg
arg	9:49	9:53	5	&dev
op	9:49	0:0	6	&
water	9:50	0:0	6	dev
arg	9:55	9:60	5	&opts
op	9:55	0:0	6	&
water	9:56	0:0	6	opts
water	9:61	0:0	4	)
op	9:63	0:0	4	<
water	9:65	0:0	4	0
stmts	10:8	10:17	3	
goto	10:8	10:17	4	fail
water	10:13	0:0	5	fail
do	11:4	20:4	2	(fmt)
cond	20:13	20:13	3	fmt
water	20:13	0:0	4	fmt
stmts	11:7	20:4	3	
water	11:7	0:0	4	{
water	12:8	0:0	4	fmt
op	12:12	0:0	4	=
call	12:14	12:44	4	av_input_audio_device_next
arg	12:41	12:44	5	fmt
water	12:41	0:0	6	fmt
water	12:45	0:0	4	;
if	13:8	19:8	4	(fmt)
cond	13:12	13:12	5	fmt
water	13:12	0:0	6	fmt
stmts	13:17	19:8	5	
water	13:17	0:0	6	{
if	14:12	15:24	6	(!strcmp (fmt -> name ,"lavfi" ))
cond	14:16	14:42	7	!strcmp (fmt -> name ,"lavfi" )
op	14:16	0:0	8	!
call	14:17	14:42	8	strcmp
arg	14:24	14:33	9	fmt->name
water	14:24	0:0	10	fmt
op	14:27	0:0	10	->
water	14:29	0:0	10	name
arg	14:35	14:42	9	"lavfi"
water	14:35	0:0	10	"lavfi"
stmts	15:16	15:24	7	
continue	15:16	15:24	8	
if	16:12	17:24	6	(dev && !av_match_name (dev ,fmt -> name ))
cond	16:16	16:52	7	dev && !av_match_name (dev ,fmt -> name )
water	16:16	0:0	8	dev
op	16:20	0:0	8	&&
op	16:23	0:0	8	!
call	16:24	16:52	8	av_match_name
arg	16:38	16:41	9	dev
water	16:38	0:0	10	dev
arg	16:43	16:52	9	fmt->name
water	16:43	0:0	10	fmt
op	16:46	0:0	10	->
water	16:48	0:0	10	name
stmts	17:16	17:24	7	
continue	17:16	17:24	8	
call	18:12	18:42	6	print_device_sources
arg	18:33	18:36	7	fmt
water	18:33	0:0	8	fmt
arg	18:38	18:42	7	opts
water	18:38	0:0	8	opts
water	18:43	0:0	6	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}
water	20:17	0:0	2	;
do	21:4	28:4	2	(fmt)
cond	28:13	28:13	3	fmt
water	28:13	0:0	4	fmt
stmts	21:7	28:4	3	
water	21:7	0:0	4	{
water	22:8	0:0	4	fmt
op	22:12	0:0	4	=
call	22:14	22:44	4	av_input_video_device_next
arg	22:41	22:44	5	fmt
water	22:41	0:0	6	fmt
water	22:45	0:0	4	;
if	23:8	27:8	4	(fmt)
cond	23:12	23:12	5	fmt
water	23:12	0:0	6	fmt
stmts	23:17	27:8	5	
water	23:17	0:0	6	{
if	24:12	25:24	6	(dev && !av_match_name (dev ,fmt -> name ))
cond	24:16	24:52	7	dev && !av_match_name (dev ,fmt -> name )
water	24:16	0:0	8	dev
op	24:20	0:0	8	&&
op	24:23	0:0	8	!
call	24:24	24:52	8	av_match_name
arg	24:38	24:41	9	dev
water	24:38	0:0	10	dev
arg	24:43	24:52	9	fmt->name
water	24:43	0:0	10	fmt
op	24:46	0:0	10	->
water	24:48	0:0	10	name
stmts	25:16	25:24	7	
continue	25:16	25:24	8	
call	26:12	26:42	6	print_device_sources
arg	26:33	26:36	7	fmt
water	26:33	0:0	8	fmt
arg	26:38	26:42	7	opts
water	26:38	0:0	8	opts
water	26:43	0:0	6	;
water	27:8	0:0	6	}
water	28:4	0:0	4	}
water	28:17	0:0	2	;
label	29:2	29:6	2	fail :
call	30:4	30:22	2	av_dict_free
arg	30:17	30:22	3	&opts
op	30:17	0:0	4	&
water	30:18	0:0	4	opts
water	30:23	0:0	2	;
call	31:4	31:15	2	av_free
arg	31:12	31:15	3	dev
water	31:12	0:0	4	dev
water	31:16	0:0	2	;
call	32:4	32:32	2	av_log_set_level
arg	32:21	32:32	3	error_level
water	32:21	0:0	4	error_level
water	32:33	0:0	2	;
return	33:4	33:14	2	ret
water	33:11	0:0	3	ret

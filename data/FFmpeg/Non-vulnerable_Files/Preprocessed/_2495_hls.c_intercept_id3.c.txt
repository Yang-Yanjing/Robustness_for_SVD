func	1:0	84:0	0	static void	intercept_id3
params	1:25	0:0	1	
param	1:26	1:46	2	struct playlist *	pls
param	1:48	1:60	2	uint8_t *	buf
param	2:25	2:37	2	int	buf_size
param	2:39	2:47	2	int *	len
stmnts	0:0	83:79	1	
decl	6:4	6:13	2	int	bytes
decl	7:4	7:23	2	int	id3_buf_pos
op	7:20	0:0	2	=
water	7:22	0:0	2	0
decl	8:4	8:20	2	int	fill_buf
op	8:17	0:0	2	=
water	8:19	0:0	2	0
while	10:4	66:4	2	(1)
cond	10:11	10:11	3	1
water	10:11	0:0	4	1
stmts	10:14	66:4	3	
water	10:14	0:0	4	{
if	12:8	25:8	4	(* len < ID3v2_HEADER_SIZE && buf_size >= ID3v2_HEADER_SIZE)
cond	12:12	12:52	5	* len < ID3v2_HEADER_SIZE && buf_size >= ID3v2_HEADER_SIZE
op	12:12	0:0	6	*
water	12:13	0:0	6	len
op	12:17	0:0	6	<
water	12:19	0:0	6	ID3v2_HEADER_SIZE
op	12:37	0:0	6	&&
water	12:40	0:0	6	buf_size
op	12:49	0:0	6	>=
water	12:52	0:0	6	ID3v2_HEADER_SIZE
stmts	12:71	25:8	5	
water	12:71	0:0	6	{
water	13:12	0:0	6	bytes
op	13:18	0:0	6	=
call	13:20	13:90	6	read_from_url
arg	13:34	13:37	7	pls
water	13:34	0:0	8	pls
arg	13:39	13:49	7	buf+*len
water	13:39	0:0	8	buf
op	13:43	0:0	8	+
op	13:45	0:0	8	*
water	13:46	0:0	8	len
arg	13:51	13:75	7	ID3v2_HEADER_SIZE-*len
water	13:51	0:0	8	ID3v2_HEADER_SIZE
op	13:69	0:0	8	-
op	13:71	0:0	8	*
water	13:72	0:0	8	len
arg	13:77	13:90	7	READ_COMPLETE
water	13:77	0:0	8	READ_COMPLETE
water	13:91	0:0	6	;
if	14:12	20:12	6	(bytes > 0)
cond	14:16	14:24	7	bytes > 0
water	14:16	0:0	8	bytes
op	14:22	0:0	8	>
water	14:24	0:0	8	0
stmts	14:27	20:12	7	
water	14:27	0:0	8	{
if	15:16	18:32	8	(bytes == ID3v2_HEADER_SIZE - * len)
cond	15:20	15:50	9	bytes == ID3v2_HEADER_SIZE - * len
water	15:20	0:0	10	bytes
op	15:26	0:0	10	==
water	15:29	0:0	10	ID3v2_HEADER_SIZE
op	15:47	0:0	10	-
op	15:49	0:0	10	*
water	15:50	0:0	10	len
stmts	18:20	18:32	9	
water	18:20	0:0	10	fill_buf
op	18:29	0:0	10	=
water	18:31	0:0	10	1
water	18:32	0:0	10	;
op	19:16	0:0	8	*
water	19:17	0:0	8	len
op	19:21	0:0	8	+=
water	19:24	0:0	8	bytes
water	19:29	0:0	8	;
water	20:12	0:0	8	}
else	20:14	24:12	6
stmts	20:19	24:12	7	
if	20:19	24:12	8	(* len <= 0)
cond	20:23	20:31	9	* len <= 0
op	20:23	0:0	10	*
water	20:24	0:0	10	len
op	20:28	0:0	10	<=
water	20:31	0:0	10	0
stmts	20:34	24:12	9	
water	20:34	0:0	10	{
op	22:16	0:0	10	*
water	22:17	0:0	10	len
op	22:21	0:0	10	=
water	22:23	0:0	10	bytes
water	22:28	0:0	10	;
water	23:16	0:0	10	fill_buf
op	23:25	0:0	10	=
water	23:27	0:0	10	0
water	23:28	0:0	10	;
water	24:12	0:0	10	}
water	25:8	0:0	6	}
if	26:8	27:17	4	(* len < ID3v2_HEADER_SIZE)
cond	26:12	26:19	5	* len < ID3v2_HEADER_SIZE
op	26:12	0:0	6	*
water	26:13	0:0	6	len
op	26:17	0:0	6	<
water	26:19	0:0	6	ID3v2_HEADER_SIZE
stmts	27:12	27:17	5	
break	27:12	27:17	6	
if	28:8	62:8	4	(ff_id3v2_match (buf ,ID3v2_DEFAULT_MAGIC ))
cond	28:12	28:51	5	ff_id3v2_match (buf ,ID3v2_DEFAULT_MAGIC )
call	28:12	28:51	6	ff_id3v2_match
arg	28:27	28:30	7	buf
water	28:27	0:0	8	buf
arg	28:32	28:51	7	ID3v2_DEFAULT_MAGIC
water	28:32	0:0	8	ID3v2_DEFAULT_MAGIC
stmts	28:54	62:8	5	
water	28:54	0:0	6	{
decl	29:12	29:84	6	struct segment	*seg
op	29:32	0:0	6	=
water	29:34	0:0	6	pls
op	29:37	0:0	6	->
water	29:39	0:0	6	segments
op	29:47	0:0	6	[
water	29:48	0:0	6	pls
op	29:51	0:0	6	->
water	29:53	0:0	6	cur_seq_no
op	29:64	0:0	6	-
water	29:66	0:0	6	pls
op	29:69	0:0	6	->
water	29:71	0:0	6	start_seq_no
op	29:83	0:0	6	]
decl	30:12	30:68	6	int64_t	maxsize
op	30:28	0:0	6	=
water	30:30	0:0	6	seg
op	30:33	0:0	6	->
water	30:35	0:0	6	size
op	30:40	0:0	6	>=
water	30:43	0:0	6	0
water	30:45	0:0	6	?
water	30:47	0:0	6	seg
op	30:50	0:0	6	->
water	30:52	0:0	6	size
water	30:57	0:0	6	:
water	30:59	0:0	6	1024
op	30:63	0:0	6	*
water	30:64	0:0	6	1024
decl	31:12	31:46	6	int	taglen
op	31:23	0:0	6	=
call	31:25	31:45	7	ff_id3v2_tag_len
arg	31:42	31:45	8	buf
water	31:42	0:0	9	buf
decl	32:12	32:51	6	int	tag_got_bytes
op	32:30	0:0	6	=
call	32:32	32:50	7	FFMIN
arg	32:38	32:44	8	taglen
water	32:38	0:0	9	taglen
arg	32:46	32:50	8	*len
op	32:46	0:0	9	*
water	32:47	0:0	9	len
decl	33:12	33:50	6	int	remaining
op	33:26	0:0	6	=
water	33:28	0:0	6	taglen
op	33:35	0:0	6	-
water	33:37	0:0	6	tag_got_bytes
if	34:12	38:12	6	(taglen > maxsize)
cond	34:16	34:25	7	taglen > maxsize
water	34:16	0:0	8	taglen
op	34:23	0:0	8	>
water	34:25	0:0	8	maxsize
stmts	34:34	38:12	7	
water	34:34	0:0	8	{
call	35:16	36:38	8	av_log
arg	35:23	35:31	9	pls->ctx
water	35:23	0:0	10	pls
op	35:26	0:0	10	->
water	35:28	0:0	10	ctx
arg	35:33	35:45	9	AV_LOG_ERROR
water	35:33	0:0	10	AV_LOG_ERROR
arg	35:47	35:95	9	"Too large HLS ID3 tag (%d > %"PRId64" bytes)\n"
water	35:47	0:0	10	"Too large HLS ID3 tag (%d > %"
water	35:78	0:0	10	PRId64
water	35:84	0:0	10	" bytes)\n"
arg	36:23	36:29	9	taglen
water	36:23	0:0	10	taglen
arg	36:31	36:38	9	maxsize
water	36:31	0:0	10	maxsize
water	36:39	0:0	8	;
break	37:16	37:21	8	
water	38:12	0:0	8	}
water	46:12	0:0	6	pls
op	46:15	0:0	6	->
water	46:17	0:0	6	id3_buf
op	46:25	0:0	6	=
call	46:27	46:97	6	av_fast_realloc
arg	46:43	46:55	7	pls->id3_buf
water	46:43	0:0	8	pls
op	46:46	0:0	8	->
water	46:48	0:0	8	id3_buf
arg	46:57	46:75	7	&pls->id3_buf_size
op	46:57	0:0	8	&
water	46:58	0:0	8	pls
op	46:61	0:0	8	->
water	46:63	0:0	8	id3_buf_size
arg	46:77	46:97	7	id3_buf_pos+taglen
water	46:77	0:0	8	id3_buf_pos
op	46:89	0:0	8	+
water	46:91	0:0	8	taglen
water	46:98	0:0	6	;
if	47:12	48:21	6	(! pls -> id3_buf)
cond	47:16	47:22	7	! pls -> id3_buf
op	47:16	0:0	8	!
water	47:17	0:0	8	pls
op	47:20	0:0	8	->
water	47:22	0:0	8	id3_buf
stmts	48:16	48:21	7	
break	48:16	48:21	8	
call	49:12	49:65	6	memcpy
arg	49:19	49:45	7	pls->id3_buf+id3_buf_pos
water	49:19	0:0	8	pls
op	49:22	0:0	8	->
water	49:24	0:0	8	id3_buf
op	49:32	0:0	8	+
water	49:34	0:0	8	id3_buf_pos
arg	49:47	49:50	7	buf
water	49:47	0:0	8	buf
arg	49:52	49:65	7	tag_got_bytes
water	49:52	0:0	8	tag_got_bytes
water	49:66	0:0	6	;
water	50:12	0:0	6	id3_buf_pos
op	50:24	0:0	6	+=
water	50:27	0:0	6	tag_got_bytes
water	50:40	0:0	6	;
op	52:12	0:0	6	*
water	52:13	0:0	6	len
op	52:17	0:0	6	-=
water	52:20	0:0	6	tag_got_bytes
water	52:33	0:0	6	;
call	53:12	53:50	6	memmove
arg	53:20	53:23	7	buf
water	53:20	0:0	8	buf
arg	53:25	53:44	7	buf+tag_got_bytes
water	53:25	0:0	8	buf
op	53:29	0:0	8	+
water	53:31	0:0	8	tag_got_bytes
arg	53:46	53:50	7	*len
op	53:46	0:0	8	*
water	53:47	0:0	8	len
water	53:51	0:0	6	;
call	54:12	54:87	6	av_log
arg	54:19	54:27	7	pls->ctx
water	54:19	0:0	8	pls
op	54:22	0:0	8	->
water	54:24	0:0	8	ctx
arg	54:29	54:41	7	AV_LOG_DEBUG
water	54:29	0:0	8	AV_LOG_DEBUG
arg	54:43	54:72	7	"Stripped %d HLS ID3 bytes\n"
water	54:43	0:0	8	"Stripped %d HLS ID3 bytes\n"
arg	54:74	54:87	7	tag_got_bytes
water	54:74	0:0	8	tag_got_bytes
water	54:88	0:0	6	;
if	55:12	61:12	6	(remaining > 0)
cond	55:16	55:28	7	remaining > 0
water	55:16	0:0	8	remaining
op	55:26	0:0	8	>
water	55:28	0:0	8	0
stmts	55:31	61:12	7	
water	55:31	0:0	8	{
if	57:16	58:25	8	(read_from_url (pls ,pls -> id3_buf + id3_buf_pos ,remaining ,READ_COMPLETE ) != remaining)
cond	57:20	57:96	9	read_from_url (pls ,pls -> id3_buf + id3_buf_pos ,remaining ,READ_COMPLETE ) != remaining
call	57:20	57:91	10	read_from_url
arg	57:34	57:37	11	pls
water	57:34	0:0	12	pls
arg	57:39	57:65	11	pls->id3_buf+id3_buf_pos
water	57:39	0:0	12	pls
op	57:42	0:0	12	->
water	57:44	0:0	12	id3_buf
op	57:52	0:0	12	+
water	57:54	0:0	12	id3_buf_pos
arg	57:67	57:76	11	remaining
water	57:67	0:0	12	remaining
arg	57:78	57:91	11	READ_COMPLETE
water	57:78	0:0	12	READ_COMPLETE
op	57:93	0:0	10	!=
water	57:96	0:0	10	remaining
stmts	58:20	58:25	9	
break	58:20	58:25	10	
water	59:16	0:0	8	id3_buf_pos
op	59:28	0:0	8	+=
water	59:31	0:0	8	remaining
water	59:40	0:0	8	;
call	60:16	60:98	8	av_log
arg	60:23	60:31	9	pls->ctx
water	60:23	0:0	10	pls
op	60:26	0:0	10	->
water	60:28	0:0	10	ctx
arg	60:33	60:45	9	AV_LOG_DEBUG
water	60:33	0:0	10	AV_LOG_DEBUG
arg	60:47	60:87	9	"Stripped additional %d HLS ID3 bytes\n"
water	60:47	0:0	10	"Stripped additional %d HLS ID3 bytes\n"
arg	60:89	60:98	9	remaining
water	60:89	0:0	10	remaining
water	60:99	0:0	8	;
water	61:12	0:0	8	}
water	62:8	0:0	6	}
else	62:10	65:8	4
stmts	62:15	65:8	5	
water	62:15	0:0	6	{
break	64:12	64:17	6	
water	65:8	0:0	6	}
water	66:4	0:0	4	}
if	68:4	75:4	2	(* len >= 0 && ( fill_buf || * len == 0 ))
cond	68:8	68:43	3	* len >= 0 && ( fill_buf || * len == 0 )
op	68:8	0:0	4	*
water	68:9	0:0	4	len
op	68:13	0:0	4	>=
water	68:16	0:0	4	0
op	68:18	0:0	4	&&
water	68:21	0:0	4	(
water	68:22	0:0	4	fill_buf
op	68:31	0:0	4	||
op	68:34	0:0	4	*
water	68:35	0:0	4	len
op	68:39	0:0	4	==
water	68:42	0:0	4	0
water	68:43	0:0	4	)
stmts	68:46	75:4	3	
water	68:46	0:0	4	{
water	69:8	0:0	4	bytes
op	69:14	0:0	4	=
call	69:16	69:75	4	read_from_url
arg	69:30	69:33	5	pls
water	69:30	0:0	6	pls
arg	69:35	69:45	5	buf+*len
water	69:35	0:0	6	buf
op	69:39	0:0	6	+
op	69:41	0:0	6	*
water	69:42	0:0	6	len
arg	69:47	69:62	5	buf_size-*len
water	69:47	0:0	6	buf_size
op	69:56	0:0	6	-
op	69:58	0:0	6	*
water	69:59	0:0	6	len
arg	69:64	69:75	5	READ_NORMAL
water	69:64	0:0	6	READ_NORMAL
water	69:76	0:0	4	;
if	71:8	72:25	4	(bytes >= 0)
cond	71:12	71:21	5	bytes >= 0
water	71:12	0:0	6	bytes
op	71:18	0:0	6	>=
water	71:21	0:0	6	0
stmts	72:12	72:25	5	
op	72:12	0:0	6	*
water	72:13	0:0	6	len
op	72:17	0:0	6	+=
water	72:20	0:0	6	bytes
water	72:25	0:0	6	;
else	73:8	74:24	4
stmts	73:13	74:24	5	
if	73:13	74:24	6	(* len == 0)
cond	73:17	73:25	7	* len == 0
op	73:17	0:0	8	*
water	73:18	0:0	8	len
op	73:22	0:0	8	==
water	73:25	0:0	8	0
stmts	74:12	74:24	7	
op	74:12	0:0	8	*
water	74:13	0:0	8	len
op	74:17	0:0	8	=
water	74:19	0:0	8	bytes
water	74:24	0:0	8	;
water	75:4	0:0	4	}
if	76:4	81:4	2	(pls -> id3_buf)
cond	76:8	76:13	3	pls -> id3_buf
water	76:8	0:0	4	pls
op	76:11	0:0	4	->
water	76:13	0:0	4	id3_buf
stmts	76:22	81:4	3	
water	76:22	0:0	4	{
decl	78:8	78:28	4	AVIOContext	id3ioctx
call	79:8	79:89	4	ffio_init_context
arg	79:26	79:35	5	&id3ioctx
op	79:26	0:0	6	&
water	79:27	0:0	6	id3ioctx
arg	79:37	79:49	5	pls->id3_buf
water	79:37	0:0	6	pls
op	79:40	0:0	6	->
water	79:42	0:0	6	id3_buf
arg	79:51	79:62	5	id3_buf_pos
water	79:51	0:0	6	id3_buf_pos
arg	79:64	79:65	5	0
water	79:64	0:0	6	0
arg	79:67	79:71	5	NULL
water	79:67	0:0	6	NULL
arg	79:73	79:77	5	NULL
water	79:73	0:0	6	NULL
arg	79:79	79:83	5	NULL
water	79:79	0:0	6	NULL
arg	79:85	79:89	5	NULL
water	79:85	0:0	6	NULL
water	79:90	0:0	4	;
call	80:8	80:33	4	handle_id3
arg	80:19	80:28	5	&id3ioctx
op	80:19	0:0	6	&
water	80:20	0:0	6	id3ioctx
arg	80:30	80:33	5	pls
water	80:30	0:0	6	pls
water	80:34	0:0	4	;
water	81:4	0:0	4	}
if	82:4	83:79	2	(pls -> is_id3_timestamped == - 1)
cond	82:8	82:36	3	pls -> is_id3_timestamped == - 1
water	82:8	0:0	4	pls
op	82:11	0:0	4	->
water	82:13	0:0	4	is_id3_timestamped
op	82:32	0:0	4	==
op	82:35	0:0	4	-
water	82:36	0:0	4	1
stmts	83:8	83:79	3	
water	83:8	0:0	4	pls
op	83:11	0:0	4	->
water	83:13	0:0	4	is_id3_timestamped
op	83:32	0:0	4	=
water	83:34	0:0	4	(
water	83:35	0:0	4	pls
op	83:38	0:0	4	->
water	83:40	0:0	4	id3_mpegts_timestamp
op	83:61	0:0	4	!=
water	83:64	0:0	4	AV_NOPTS_VALUE
water	83:78	0:0	4	)
water	83:79	0:0	4	;

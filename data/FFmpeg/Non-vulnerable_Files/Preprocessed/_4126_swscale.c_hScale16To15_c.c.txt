func	1:0	21:0	0	static void	hScale16To15_c
params	1:26	0:0	1	
param	1:27	1:40	2	SwsContext *	c
param	1:42	1:54	2	int16_t *	dst
param	1:56	1:64	2	int	dstW
param	2:27	2:46	2	const uint8_t *	_src
param	2:48	2:69	2	const int16_t *	filter
param	3:27	3:51	2	const int32_t *	filterPos
param	3:53	3:67	2	int	filterSize
stmnts	0:0	20:4	1	
decl	5:4	5:70	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:69	3	av_pix_fmt_desc_get
arg	5:57	5:69	4	c->srcFormat
water	5:57	0:0	5	c
op	5:58	0:0	5	->
water	5:60	0:0	5	srcFormat
decl	6:4	6:9	2	int	i
decl	7:4	7:49	2	const uint16_t	*src
op	7:24	0:0	2	=
water	7:26	0:0	2	(
water	7:27	0:0	2	const
water	7:33	0:0	2	uint16_t
op	7:42	0:0	2	*
water	7:43	0:0	2	)
water	7:45	0:0	2	_src
decl	8:4	8:52	2	int	sh
op	8:24	0:0	2	=
water	8:26	0:0	2	desc
op	8:30	0:0	2	->
water	8:32	0:0	2	comp
op	8:36	0:0	2	[
water	8:37	0:0	2	0
op	8:38	0:0	2	]
op	8:39	0:0	2	.
water	8:40	0:0	2	depth_minus1
if	9:4	10:101	2	(sh < 15)
cond	9:7	9:10	3	sh < 15
water	9:7	0:0	4	sh
op	9:9	0:0	4	<
water	9:10	0:0	4	15
stmts	10:8	10:101	3	
water	10:8	0:0	4	sh
op	10:10	0:0	4	=
call	10:12	10:33	4	isAnyRGB
arg	10:21	10:33	5	c->srcFormat
water	10:21	0:0	6	c
op	10:22	0:0	6	->
water	10:24	0:0	6	srcFormat
op	10:35	0:0	4	||
water	10:38	0:0	4	c
op	10:39	0:0	4	->
water	10:41	0:0	4	srcFormat
op	10:50	0:0	4	==
water	10:52	0:0	4	AV_PIX_FMT_PAL8
water	10:68	0:0	4	?
water	10:70	0:0	4	13
water	10:73	0:0	4	:
water	10:75	0:0	4	desc
op	10:79	0:0	4	->
water	10:81	0:0	4	comp
op	10:85	0:0	4	[
water	10:86	0:0	4	0
op	10:87	0:0	4	]
op	10:88	0:0	4	.
water	10:89	0:0	4	depth_minus1
water	10:101	0:0	4	;
for	11:4	20:4	2	(i = 0 ;i < dstW;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:20	3	i < dstW
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	dstW
forexpr	11:26	11:27	3	i ++
water	11:26	0:0	4	i
op	11:27	0:0	4	++
stmts	11:31	20:4	3	
water	11:31	0:0	4	{
decl	12:8	12:13	4	int	j
decl	13:8	13:33	4	int	srcPos
op	13:19	0:0	4	=
water	13:21	0:0	4	filterPos
op	13:30	0:0	4	[
water	13:31	0:0	4	i
op	13:32	0:0	4	]
decl	14:8	14:22	4	int	val
op	14:19	0:0	4	=
water	14:21	0:0	4	0
for	15:8	17:8	4	(j = 0 ;j < filterSize;j ++)
forinit	15:13	15:18	5	j = 0 ;
water	15:13	0:0	6	j
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:24	5	j < filterSize
water	15:20	0:0	6	j
op	15:22	0:0	6	<
water	15:24	0:0	6	filterSize
forexpr	15:36	15:37	5	j ++
water	15:36	0:0	6	j
op	15:37	0:0	6	++
stmts	15:41	17:8	5	
water	15:41	0:0	6	{
water	16:12	0:0	6	val
op	16:16	0:0	6	+=
water	16:19	0:0	6	src
op	16:22	0:0	6	[
water	16:23	0:0	6	srcPos
op	16:30	0:0	6	+
water	16:32	0:0	6	j
op	16:33	0:0	6	]
op	16:35	0:0	6	*
water	16:37	0:0	6	filter
op	16:43	0:0	6	[
water	16:44	0:0	6	filterSize
op	16:55	0:0	6	*
water	16:57	0:0	6	i
op	16:59	0:0	6	+
water	16:61	0:0	6	j
op	16:62	0:0	6	]
water	16:63	0:0	6	;
water	17:8	0:0	6	}
water	19:8	0:0	4	dst
op	19:11	0:0	4	[
water	19:12	0:0	4	i
op	19:13	0:0	4	]
op	19:15	0:0	4	=
call	19:17	19:47	4	FFMIN
arg	19:23	19:32	5	val>>sh
water	19:23	0:0	6	val
op	19:27	0:0	6	>>
water	19:30	0:0	6	sh
arg	19:34	19:47	5	(1<<15)-1
water	19:34	0:0	6	(
water	19:35	0:0	6	1
op	19:37	0:0	6	<<
water	19:40	0:0	6	15
water	19:42	0:0	6	)
op	19:44	0:0	6	-
water	19:46	0:0	6	1
water	19:48	0:0	4	;
water	20:4	0:0	4	}

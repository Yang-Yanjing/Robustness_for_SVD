func	1:0	22:0	0	static int	vfw_read_close
params	1:25	0:0	1	
param	1:26	1:44	2	AVFormatContext *	s
stmnts	0:0	21:12	1	
decl	3:4	3:38	2	struct vfw_ctx	*ctx
op	3:24	0:0	2	=
water	3:26	0:0	2	s
op	3:27	0:0	2	->
water	3:29	0:0	2	priv_data
decl	4:4	4:22	2	AVPacketList	*pktl
if	5:4	9:4	2	(ctx -> hwnd)
cond	5:7	5:12	3	ctx -> hwnd
water	5:7	0:0	4	ctx
op	5:10	0:0	4	->
water	5:12	0:0	4	hwnd
stmts	5:18	9:4	3	
water	5:18	0:0	4	{
call	6:8	6:68	4	SendMessage
arg	6:20	6:29	5	ctx->hwnd
water	6:20	0:0	6	ctx
op	6:23	0:0	6	->
water	6:25	0:0	6	hwnd
arg	6:31	6:62	5	WM_CAP_SET_CALLBACK_VIDEOSTREAM
water	6:31	0:0	6	WM_CAP_SET_CALLBACK_VIDEOSTREAM
arg	6:64	6:65	5	0
water	6:64	0:0	6	0
arg	6:67	6:68	5	0
water	6:67	0:0	6	0
water	6:69	0:0	4	;
call	7:8	7:61	4	SendMessage
arg	7:20	7:29	5	ctx->hwnd
water	7:20	0:0	6	ctx
op	7:23	0:0	6	->
water	7:25	0:0	6	hwnd
arg	7:31	7:55	5	WM_CAP_DRIVER_DISCONNECT
water	7:31	0:0	6	WM_CAP_DRIVER_DISCONNECT
arg	7:57	7:58	5	0
water	7:57	0:0	6	0
arg	7:60	7:61	5	0
water	7:60	0:0	6	0
water	7:62	0:0	4	;
call	8:8	8:31	4	DestroyWindow
arg	8:22	8:31	5	ctx->hwnd
water	8:22	0:0	6	ctx
op	8:25	0:0	6	->
water	8:27	0:0	6	hwnd
water	8:32	0:0	4	;
water	9:4	0:0	4	}
if	10:4	11:31	2	(ctx -> mutex)
cond	10:7	10:12	3	ctx -> mutex
water	10:7	0:0	4	ctx
op	10:10	0:0	4	->
water	10:12	0:0	4	mutex
stmts	11:8	11:31	3	
call	11:8	11:30	4	CloseHandle
arg	11:20	11:30	5	ctx->mutex
water	11:20	0:0	6	ctx
op	11:23	0:0	6	->
water	11:25	0:0	6	mutex
water	11:31	0:0	4	;
if	12:4	13:31	2	(ctx -> event)
cond	12:7	12:12	3	ctx -> event
water	12:7	0:0	4	ctx
op	12:10	0:0	4	->
water	12:12	0:0	4	event
stmts	13:8	13:31	3	
call	13:8	13:30	4	CloseHandle
arg	13:20	13:30	5	ctx->event
water	13:20	0:0	6	ctx
op	13:23	0:0	6	->
water	13:25	0:0	6	event
water	13:31	0:0	4	;
water	14:4	0:0	2	pktl
op	14:9	0:0	2	=
water	14:11	0:0	2	ctx
op	14:14	0:0	2	->
water	14:16	0:0	2	pktl
water	14:20	0:0	2	;
while	15:4	20:4	2	(pktl)
cond	15:11	15:11	3	pktl
water	15:11	0:0	4	pktl
stmts	15:17	20:4	3	
water	15:17	0:0	4	{
decl	16:8	16:39	4	AVPacketList	*next
op	16:27	0:0	4	=
water	16:29	0:0	4	pktl
op	16:33	0:0	4	->
water	16:35	0:0	4	next
call	17:8	17:33	4	av_free_packet
arg	17:23	17:33	5	&pktl->pkt
op	17:23	0:0	6	&
water	17:24	0:0	6	pktl
op	17:28	0:0	6	->
water	17:30	0:0	6	pkt
water	17:34	0:0	4	;
call	18:8	18:20	4	av_free
arg	18:16	18:20	5	pktl
water	18:16	0:0	6	pktl
water	18:21	0:0	4	;
water	19:8	0:0	4	pktl
op	19:13	0:0	4	=
water	19:15	0:0	4	next
water	19:19	0:0	4	;
water	20:4	0:0	4	}
return	21:4	21:12	2	0
water	21:11	0:0	3	0

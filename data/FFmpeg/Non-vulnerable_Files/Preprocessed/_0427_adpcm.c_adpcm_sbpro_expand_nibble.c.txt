func	1:0	15:0	0	static inline short	adpcm_sbpro_expand_nibble
params	1:45	0:0	1	
param	1:46	1:67	2	ADPCMChannelStatus *	c
param	1:69	1:80	2	char	nibble
param	1:82	1:90	2	int	size
param	1:92	1:101	2	int	shift
stmnts	0:0	14:31	1	
decl	3:4	3:25	2	int	sign
water	3:12	0:0	2	,
decl	3:4	3:25	2	int	delta
water	3:19	0:0	2	,
decl	3:4	3:25	2	int	diff
water	4:4	0:0	2	sign
op	4:9	0:0	2	=
water	4:11	0:0	2	nibble
op	4:18	0:0	2	&
water	4:20	0:0	2	(
water	4:21	0:0	2	1
op	4:22	0:0	2	<<
water	4:24	0:0	2	(
water	4:25	0:0	2	size
op	4:29	0:0	2	-
water	4:30	0:0	2	1
water	4:31	0:0	2	)
water	4:32	0:0	2	)
water	4:33	0:0	2	;
water	5:4	0:0	2	delta
op	5:10	0:0	2	=
water	5:12	0:0	2	nibble
op	5:19	0:0	2	&
water	5:21	0:0	2	(
water	5:22	0:0	2	(
water	5:23	0:0	2	1
op	5:24	0:0	2	<<
water	5:26	0:0	2	(
water	5:27	0:0	2	size
op	5:31	0:0	2	-
water	5:32	0:0	2	1
water	5:33	0:0	2	)
water	5:34	0:0	2	)
op	5:35	0:0	2	-
water	5:36	0:0	2	1
water	5:37	0:0	2	)
water	5:38	0:0	2	;
water	6:4	0:0	2	diff
op	6:9	0:0	2	=
water	6:11	0:0	2	delta
op	6:17	0:0	2	<<
water	6:20	0:0	2	(
water	6:21	0:0	2	7
op	6:23	0:0	2	+
water	6:25	0:0	2	c
op	6:26	0:0	2	->
water	6:28	0:0	2	step
op	6:33	0:0	2	+
water	6:35	0:0	2	shift
water	6:40	0:0	2	)
water	6:41	0:0	2	;
water	8:4	0:0	2	c
op	8:5	0:0	2	->
water	8:7	0:0	2	predictor
op	8:17	0:0	2	=
call	8:19	8:77	2	av_clip
arg	8:27	8:63	3	c->predictor+(sign?-diff:diff)
water	8:27	0:0	4	c
op	8:28	0:0	4	->
water	8:30	0:0	4	predictor
op	8:40	0:0	4	+
water	8:42	0:0	4	(
water	8:43	0:0	4	sign
water	8:48	0:0	4	?
op	8:50	0:0	4	-
water	8:51	0:0	4	diff
water	8:56	0:0	4	:
water	8:58	0:0	4	diff
water	8:62	0:0	4	)
arg	8:65	8:71	3	-16384
op	8:65	0:0	4	-
water	8:66	0:0	4	16384
arg	8:72	8:77	3	16256
water	8:72	0:0	4	16256
water	8:78	0:0	2	;
if	10:4	11:17	2	(delta >= ( 2 * size - 3 ) && c -> step < 3)
cond	10:8	10:43	3	delta >= ( 2 * size - 3 ) && c -> step < 3
water	10:8	0:0	4	delta
op	10:14	0:0	4	>=
water	10:17	0:0	4	(
water	10:18	0:0	4	2
op	10:19	0:0	4	*
water	10:20	0:0	4	size
op	10:25	0:0	4	-
water	10:27	0:0	4	3
water	10:28	0:0	4	)
op	10:30	0:0	4	&&
water	10:33	0:0	4	c
op	10:34	0:0	4	->
water	10:36	0:0	4	step
op	10:41	0:0	4	<
water	10:43	0:0	4	3
stmts	11:8	11:17	3	
water	11:8	0:0	4	c
op	11:9	0:0	4	->
water	11:11	0:0	4	step
op	11:15	0:0	4	++
water	11:17	0:0	4	;
else	12:4	13:17	2
stmts	12:9	13:17	3	
if	12:9	13:17	4	(delta == 0 && c -> step > 0)
cond	12:13	12:37	5	delta == 0 && c -> step > 0
water	12:13	0:0	6	delta
op	12:19	0:0	6	==
water	12:22	0:0	6	0
op	12:24	0:0	6	&&
water	12:27	0:0	6	c
op	12:28	0:0	6	->
water	12:30	0:0	6	step
op	12:35	0:0	6	>
water	12:37	0:0	6	0
stmts	13:8	13:17	5	
water	13:8	0:0	6	c
op	13:9	0:0	6	->
water	13:11	0:0	6	step
op	13:15	0:0	6	--
water	13:17	0:0	6	;
return	14:4	14:31	2	(short)c->predictor
water	14:11	0:0	3	(
water	14:12	0:0	3	short
water	14:17	0:0	3	)
water	14:19	0:0	3	c
op	14:20	0:0	3	->
water	14:22	0:0	3	predictor

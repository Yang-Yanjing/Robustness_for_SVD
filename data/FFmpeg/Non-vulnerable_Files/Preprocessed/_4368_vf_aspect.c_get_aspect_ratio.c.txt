func	1:0	35:0	0	static int	get_aspect_ratio
params	1:27	0:0	1	
param	1:28	1:48	2	AVFilterLink *	inlink
param	1:50	1:74	2	AVRational *	aspect_ratio
stmnts	0:0	34:12	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:40	2	AspectContext	*s
op	4:21	0:0	2	=
water	4:23	0:0	2	inlink
op	4:29	0:0	2	->
water	4:31	0:0	2	dst
op	4:34	0:0	2	->
water	4:36	0:0	2	priv
decl	5:4	5:72	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:71	3	av_pix_fmt_desc_get
arg	5:57	5:71	4	inlink->format
water	5:57	0:0	5	inlink
op	5:63	0:0	5	->
water	5:65	0:0	5	format
decl	6:4	6:35	2	double	var_values[VARS_NB]
water	6:30	0:0	2	,
decl	6:4	6:35	2	double	res
decl	7:4	7:11	2	int	ret
water	8:4	0:0	2	var_values
op	8:14	0:0	2	[
water	8:15	0:0	2	VAR_W
op	8:20	0:0	2	]
op	8:26	0:0	2	=
water	8:28	0:0	2	inlink
op	8:34	0:0	2	->
water	8:36	0:0	2	w
water	8:37	0:0	2	;
water	9:4	0:0	2	var_values
op	9:14	0:0	2	[
water	9:15	0:0	2	VAR_H
op	9:20	0:0	2	]
op	9:26	0:0	2	=
water	9:28	0:0	2	inlink
op	9:34	0:0	2	->
water	9:36	0:0	2	h
water	9:37	0:0	2	;
water	10:4	0:0	2	var_values
op	10:14	0:0	2	[
water	10:15	0:0	2	VAR_A
op	10:20	0:0	2	]
op	10:26	0:0	2	=
water	10:28	0:0	2	(
water	10:29	0:0	2	double
water	10:35	0:0	2	)
water	10:37	0:0	2	inlink
op	10:43	0:0	2	->
water	10:45	0:0	2	w
op	10:47	0:0	2	/
water	10:49	0:0	2	inlink
op	10:55	0:0	2	->
water	10:57	0:0	2	h
water	10:58	0:0	2	;
water	11:4	0:0	2	var_values
op	11:14	0:0	2	[
water	11:15	0:0	2	VAR_SAR
op	11:22	0:0	2	]
op	11:26	0:0	2	=
water	11:28	0:0	2	inlink
op	11:34	0:0	2	->
water	11:36	0:0	2	sample_aspect_ratio
op	11:55	0:0	2	.
water	11:56	0:0	2	num
water	11:60	0:0	2	?
water	12:8	0:0	2	(
water	12:9	0:0	2	double
water	12:15	0:0	2	)
water	12:17	0:0	2	inlink
op	12:23	0:0	2	->
water	12:25	0:0	2	sample_aspect_ratio
op	12:44	0:0	2	.
water	12:45	0:0	2	num
op	12:49	0:0	2	/
water	12:51	0:0	2	inlink
op	12:57	0:0	2	->
water	12:59	0:0	2	sample_aspect_ratio
op	12:78	0:0	2	.
water	12:79	0:0	2	den
water	12:83	0:0	2	:
water	12:85	0:0	2	1
water	12:86	0:0	2	;
water	13:4	0:0	2	var_values
op	13:14	0:0	2	[
water	13:15	0:0	2	VAR_DAR
op	13:22	0:0	2	]
op	13:26	0:0	2	=
water	13:28	0:0	2	var_values
op	13:38	0:0	2	[
water	13:39	0:0	2	VAR_A
op	13:44	0:0	2	]
op	13:46	0:0	2	*
water	13:48	0:0	2	var_values
op	13:58	0:0	2	[
water	13:59	0:0	2	VAR_SAR
op	13:66	0:0	2	]
water	13:67	0:0	2	;
water	14:4	0:0	2	var_values
op	14:14	0:0	2	[
water	14:15	0:0	2	VAR_HSUB
op	14:23	0:0	2	]
op	14:26	0:0	2	=
water	14:28	0:0	2	1
op	14:30	0:0	2	<<
water	14:33	0:0	2	desc
op	14:37	0:0	2	->
water	14:39	0:0	2	log2_chroma_w
water	14:52	0:0	2	;
water	15:4	0:0	2	var_values
op	15:14	0:0	2	[
water	15:15	0:0	2	VAR_VSUB
op	15:23	0:0	2	]
op	15:26	0:0	2	=
water	15:28	0:0	2	1
op	15:30	0:0	2	<<
water	15:33	0:0	2	desc
op	15:37	0:0	2	->
water	15:39	0:0	2	log2_chroma_h
water	15:52	0:0	2	;
water	17:4	0:0	2	ret
op	17:8	0:0	2	=
call	17:10	19:74	2	av_expr_parse_and_eval
arg	17:33	17:37	3	&res
op	17:33	0:0	4	&
water	17:34	0:0	4	res
arg	17:39	17:52	3	s->ratio_expr
water	17:39	0:0	4	s
op	17:40	0:0	4	->
water	17:42	0:0	4	ratio_expr
arg	18:38	18:47	3	var_names
water	18:38	0:0	4	var_names
arg	18:49	18:59	3	var_values
water	18:49	0:0	4	var_values
arg	19:38	19:42	3	NULL
water	19:38	0:0	4	NULL
arg	19:44	19:48	3	NULL
water	19:44	0:0	4	NULL
arg	19:50	19:54	3	NULL
water	19:50	0:0	4	NULL
arg	19:56	19:60	3	NULL
water	19:56	0:0	4	NULL
arg	19:62	19:66	3	NULL
water	19:62	0:0	4	NULL
arg	19:68	19:69	3	0
water	19:68	0:0	4	0
arg	19:71	19:74	3	ctx
water	19:71	0:0	4	ctx
water	19:75	0:0	2	;
if	20:4	22:4	2	(ret < 0)
cond	20:8	20:14	3	ret < 0
water	20:8	0:0	4	ret
op	20:12	0:0	4	<
water	20:14	0:0	4	0
stmts	20:17	22:4	3	
water	20:17	0:0	4	{
water	21:8	0:0	4	ret
op	21:12	0:0	4	=
call	21:14	21:72	4	av_parse_ratio
arg	21:29	21:41	5	aspect_ratio
water	21:29	0:0	6	aspect_ratio
arg	21:43	21:56	5	s->ratio_expr
water	21:43	0:0	6	s
op	21:44	0:0	6	->
water	21:46	0:0	6	ratio_expr
arg	21:58	21:64	5	s->max
water	21:58	0:0	6	s
op	21:59	0:0	6	->
water	21:61	0:0	6	max
arg	21:66	21:67	5	0
water	21:66	0:0	6	0
arg	21:69	21:72	5	ctx
water	21:69	0:0	6	ctx
water	21:73	0:0	4	;
water	22:4	0:0	4	}
else	22:6	23:43	2
stmts	23:8	23:43	3	
op	23:8	0:0	4	*
water	23:9	0:0	4	aspect_ratio
op	23:22	0:0	4	=
call	23:24	23:42	4	av_d2q
arg	23:31	23:34	5	res
water	23:31	0:0	6	res
arg	23:36	23:42	5	s->max
water	23:36	0:0	6	s
op	23:37	0:0	6	->
water	23:39	0:0	6	max
water	23:43	0:0	4	;
if	24:4	28:4	2	(ret < 0)
cond	24:8	24:14	3	ret < 0
water	24:8	0:0	4	ret
op	24:12	0:0	4	<
water	24:14	0:0	4	0
stmts	24:17	28:4	3	
water	24:17	0:0	4	{
call	25:8	26:75	4	av_log
arg	25:15	25:18	5	ctx
water	25:15	0:0	6	ctx
arg	25:20	25:32	5	AV_LOG_ERROR
water	25:20	0:0	6	AV_LOG_ERROR
arg	26:15	26:60	5	"Error when evaluating the expression '%s'\n"
water	26:15	0:0	6	"Error when evaluating the expression '%s'\n"
arg	26:62	26:75	5	s->ratio_expr
water	26:62	0:0	6	s
op	26:63	0:0	6	->
water	26:65	0:0	6	ratio_expr
water	26:76	0:0	4	;
return	27:8	27:18	4	ret
water	27:15	0:0	5	ret
water	28:4	0:0	4	}
if	29:4	33:4	2	(aspect_ratio -> num < 0 || aspect_ratio -> den <= 0)
cond	29:8	29:54	3	aspect_ratio -> num < 0 || aspect_ratio -> den <= 0
water	29:8	0:0	4	aspect_ratio
op	29:20	0:0	4	->
water	29:22	0:0	4	num
op	29:26	0:0	4	<
water	29:28	0:0	4	0
op	29:30	0:0	4	||
water	29:33	0:0	4	aspect_ratio
op	29:45	0:0	4	->
water	29:47	0:0	4	den
op	29:51	0:0	4	<=
water	29:54	0:0	4	0
stmts	29:57	33:4	3	
water	29:57	0:0	4	{
call	30:8	31:71	4	av_log
arg	30:15	30:18	5	ctx
water	30:15	0:0	6	ctx
arg	30:20	30:32	5	AV_LOG_ERROR
water	30:20	0:0	6	AV_LOG_ERROR
arg	31:16	31:56	5	"Invalid string '%s' for aspect ratio\n"
water	31:16	0:0	6	"Invalid string '%s' for aspect ratio\n"
arg	31:58	31:71	5	s->ratio_expr
water	31:58	0:0	6	s
op	31:59	0:0	6	->
water	31:61	0:0	6	ratio_expr
water	31:72	0:0	4	;
return	32:8	32:30	4	AVERROR(EINVAL)
call	32:15	32:29	5	AVERROR
arg	32:23	32:29	6	EINVAL
water	32:23	0:0	7	EINVAL
water	33:4	0:0	4	}
return	34:4	34:12	2	0
water	34:11	0:0	3	0

func	1:0	54:0	0	static int	mov_write_tfhd_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:65	2	MOVMuxContext *	mov
param	2:30	2:45	2	MOVTrack *	track
param	2:47	2:66	2	int64_t	moof_offset
stmnts	0:0	53:31	1	
decl	4:4	4:31	2	int64_t	pos
op	4:16	0:0	2	=
call	4:18	4:30	3	avio_tell
arg	4:28	4:30	4	pb
water	4:28	0:0	5	pb
decl	5:4	6:46	2	uint32_t	flags
op	5:19	0:0	2	=
water	5:21	0:0	2	MOV_TFHD_DEFAULT_SIZE
op	5:43	0:0	2	|
water	5:45	0:0	2	MOV_TFHD_DEFAULT_DURATION
op	5:71	0:0	2	|
water	6:21	0:0	2	MOV_TFHD_BASE_DATA_OFFSET
if	7:4	9:4	2	(! track -> entry)
cond	7:8	7:16	3	! track -> entry
op	7:8	0:0	4	!
water	7:9	0:0	4	track
op	7:14	0:0	4	->
water	7:16	0:0	4	entry
stmts	7:23	9:4	3	
water	7:23	0:0	4	{
water	8:8	0:0	4	flags
op	8:14	0:0	4	|=
water	8:17	0:0	4	MOV_TFHD_DURATION_IS_EMPTY
water	8:43	0:0	4	;
water	9:4	0:0	4	}
else	9:6	11:4	2
stmts	9:11	11:4	3	
water	9:11	0:0	4	{
water	10:8	0:0	4	flags
op	10:14	0:0	4	|=
water	10:17	0:0	4	MOV_TFHD_DEFAULT_FLAGS
water	10:39	0:0	4	;
water	11:4	0:0	4	}
if	12:4	13:43	2	(mov -> flags & FF_MOV_FLAG_OMIT_TFHD_OFFSET)
cond	12:8	12:21	3	mov -> flags & FF_MOV_FLAG_OMIT_TFHD_OFFSET
water	12:8	0:0	4	mov
op	12:11	0:0	4	->
water	12:13	0:0	4	flags
op	12:19	0:0	4	&
water	12:21	0:0	4	FF_MOV_FLAG_OMIT_TFHD_OFFSET
stmts	13:8	13:43	3	
water	13:8	0:0	4	flags
op	13:14	0:0	4	&=
water	13:17	0:0	4	~MOV_TFHD_BASE_DATA_OFFSET
water	13:43	0:0	4	;
if	14:4	17:4	2	(mov -> flags & FF_MOV_FLAG_DEFAULT_BASE_MOOF)
cond	14:8	14:21	3	mov -> flags & FF_MOV_FLAG_DEFAULT_BASE_MOOF
water	14:8	0:0	4	mov
op	14:11	0:0	4	->
water	14:13	0:0	4	flags
op	14:19	0:0	4	&
water	14:21	0:0	4	FF_MOV_FLAG_DEFAULT_BASE_MOOF
stmts	14:52	17:4	3	
water	14:52	0:0	4	{
water	15:8	0:0	4	flags
op	15:14	0:0	4	&=
water	15:17	0:0	4	~MOV_TFHD_BASE_DATA_OFFSET
water	15:43	0:0	4	;
water	16:8	0:0	4	flags
op	16:14	0:0	4	|=
water	16:17	0:0	4	MOV_TFHD_DEFAULT_BASE_IS_MOOF
water	16:46	0:0	4	;
water	17:4	0:0	4	}
if	22:4	24:45	2	(track -> mode == MODE_ISM)
cond	22:8	22:23	3	track -> mode == MODE_ISM
water	22:8	0:0	4	track
op	22:13	0:0	4	->
water	22:15	0:0	4	mode
op	22:20	0:0	4	==
water	22:23	0:0	4	MODE_ISM
stmts	23:8	24:45	3	
water	23:8	0:0	4	flags
op	23:14	0:0	4	&=
op	23:17	0:0	4	~
water	23:18	0:0	4	(
water	23:19	0:0	4	MOV_TFHD_DEFAULT_SIZE
op	23:41	0:0	4	|
water	23:43	0:0	4	MOV_TFHD_DEFAULT_DURATION
op	23:69	0:0	4	|
water	24:19	0:0	4	MOV_TFHD_BASE_DATA_OFFSET
water	24:44	0:0	4	)
water	24:45	0:0	4	;
call	25:4	25:19	2	avio_wb32
arg	25:14	25:16	3	pb
water	25:14	0:0	4	pb
arg	25:18	25:19	3	0
water	25:18	0:0	4	0
water	25:20	0:0	2	;
call	26:4	26:27	2	ffio_wfourcc
arg	26:17	26:19	3	pb
water	26:17	0:0	4	pb
arg	26:21	26:27	3	"tfhd"
water	26:21	0:0	4	"tfhd"
water	26:28	0:0	2	;
call	27:4	27:17	2	avio_w8
arg	27:12	27:14	3	pb
water	27:12	0:0	4	pb
arg	27:16	27:17	3	0
water	27:16	0:0	4	0
water	27:18	0:0	2	;
call	28:4	28:23	2	avio_wb24
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:23	3	flags
water	28:18	0:0	4	flags
water	28:24	0:0	2	;
call	29:4	29:33	2	avio_wb32
arg	29:14	29:16	3	pb
water	29:14	0:0	4	pb
arg	29:18	29:33	3	track->track_id
water	29:18	0:0	4	track
op	29:23	0:0	4	->
water	29:25	0:0	4	track_id
water	29:34	0:0	2	;
if	30:4	31:34	2	(flags & MOV_TFHD_BASE_DATA_OFFSET)
cond	30:8	30:16	3	flags & MOV_TFHD_BASE_DATA_OFFSET
water	30:8	0:0	4	flags
op	30:14	0:0	4	&
water	30:16	0:0	4	MOV_TFHD_BASE_DATA_OFFSET
stmts	31:8	31:34	3	
call	31:8	31:33	4	avio_wb64
arg	31:18	31:20	5	pb
water	31:18	0:0	6	pb
arg	31:22	31:33	5	moof_offset
water	31:22	0:0	6	moof_offset
water	31:34	0:0	4	;
if	32:4	35:4	2	(flags & MOV_TFHD_DEFAULT_DURATION)
cond	32:8	32:16	3	flags & MOV_TFHD_DEFAULT_DURATION
water	32:8	0:0	4	flags
op	32:14	0:0	4	&
water	32:16	0:0	4	MOV_TFHD_DEFAULT_DURATION
stmts	32:43	35:4	3	
water	32:43	0:0	4	{
water	33:8	0:0	4	track
op	33:13	0:0	4	->
water	33:15	0:0	4	default_duration
op	33:32	0:0	4	=
call	33:34	33:63	4	get_cluster_duration
arg	33:55	33:60	5	track
water	33:55	0:0	6	track
arg	33:62	33:63	5	0
water	33:62	0:0	6	0
water	33:64	0:0	4	;
call	34:8	34:45	4	avio_wb32
arg	34:18	34:20	5	pb
water	34:18	0:0	6	pb
arg	34:22	34:45	5	track->default_duration
water	34:22	0:0	6	track
op	34:27	0:0	6	->
water	34:29	0:0	6	default_duration
water	34:46	0:0	4	;
water	35:4	0:0	4	}
if	36:4	39:4	2	(flags & MOV_TFHD_DEFAULT_SIZE)
cond	36:8	36:16	3	flags & MOV_TFHD_DEFAULT_SIZE
water	36:8	0:0	4	flags
op	36:14	0:0	4	&
water	36:16	0:0	4	MOV_TFHD_DEFAULT_SIZE
stmts	36:39	39:4	3	
water	36:39	0:0	4	{
water	37:8	0:0	4	track
op	37:13	0:0	4	->
water	37:15	0:0	4	default_size
op	37:28	0:0	4	=
water	37:30	0:0	4	track
op	37:35	0:0	4	->
water	37:37	0:0	4	entry
water	37:43	0:0	4	?
water	37:45	0:0	4	track
op	37:50	0:0	4	->
water	37:52	0:0	4	cluster
op	37:59	0:0	4	[
water	37:60	0:0	4	0
op	37:61	0:0	4	]
op	37:62	0:0	4	.
water	37:63	0:0	4	size
water	37:68	0:0	4	:
water	37:70	0:0	4	1
water	37:71	0:0	4	;
call	38:8	38:41	4	avio_wb32
arg	38:18	38:20	5	pb
water	38:18	0:0	6	pb
arg	38:22	38:41	5	track->default_size
water	38:22	0:0	6	track
op	38:27	0:0	6	->
water	38:29	0:0	6	default_size
water	38:42	0:0	4	;
water	39:4	0:0	4	}
else	39:6	40:32	2
stmts	40:8	40:32	3	
water	40:8	0:0	4	track
op	40:13	0:0	4	->
water	40:15	0:0	4	default_size
op	40:28	0:0	4	=
op	40:30	0:0	4	-
water	40:31	0:0	4	1
water	40:32	0:0	4	;
if	41:4	52:4	2	(flags & MOV_TFHD_DEFAULT_FLAGS)
cond	41:8	41:16	3	flags & MOV_TFHD_DEFAULT_FLAGS
water	41:8	0:0	4	flags
op	41:14	0:0	4	&
water	41:16	0:0	4	MOV_TFHD_DEFAULT_FLAGS
stmts	41:40	52:4	3	
water	41:40	0:0	4	{
if	44:8	45:85	4	(track -> entry > 1)
cond	44:12	44:27	5	track -> entry > 1
water	44:12	0:0	6	track
op	44:17	0:0	6	->
water	44:19	0:0	6	entry
op	44:25	0:0	6	>
water	44:27	0:0	6	1
stmts	45:12	45:85	5	
water	45:12	0:0	6	track
op	45:17	0:0	6	->
water	45:19	0:0	6	default_sample_flags
op	45:40	0:0	6	=
call	45:42	45:84	6	get_sample_flags
arg	45:59	45:64	7	track
water	45:59	0:0	8	track
arg	45:66	45:84	7	&track->cluster[1]
op	45:66	0:0	8	&
water	45:67	0:0	8	track
op	45:72	0:0	8	->
water	45:74	0:0	8	cluster
op	45:81	0:0	8	[
water	45:82	0:0	8	1
op	45:83	0:0	8	]
water	45:85	0:0	6	;
else	46:8	50:47	4
stmts	47:12	50:47	5	
water	47:12	0:0	6	track
op	47:17	0:0	6	->
water	47:19	0:0	6	default_sample_flags
op	47:40	0:0	6	=
water	48:16	0:0	6	track
op	48:21	0:0	6	->
water	48:23	0:0	6	enc
op	48:26	0:0	6	->
water	48:28	0:0	6	codec_type
op	48:39	0:0	6	==
water	48:42	0:0	6	AVMEDIA_TYPE_VIDEO
water	48:61	0:0	6	?
water	49:16	0:0	6	(
water	49:17	0:0	6	MOV_FRAG_SAMPLE_FLAG_DEPENDS_YES
op	49:50	0:0	6	|
water	49:52	0:0	6	MOV_FRAG_SAMPLE_FLAG_IS_NON_SYNC
water	49:84	0:0	6	)
water	49:86	0:0	6	:
water	50:16	0:0	6	MOV_FRAG_SAMPLE_FLAG_DEPENDS_NO
water	50:47	0:0	6	;
call	51:8	51:49	4	avio_wb32
arg	51:18	51:20	5	pb
water	51:18	0:0	6	pb
arg	51:22	51:49	5	track->default_sample_flags
water	51:22	0:0	6	track
op	51:27	0:0	6	->
water	51:29	0:0	6	default_sample_flags
water	51:50	0:0	4	;
water	52:4	0:0	4	}
return	53:4	53:31	2	update_size(pb,pos)
call	53:11	53:30	3	update_size
arg	53:23	53:25	4	pb
water	53:23	0:0	5	pb
arg	53:27	53:30	4	pos
water	53:27	0:0	5	pos

func	1:0	28:0	0	static int	handle_invoke
params	1:24	0:0	1	
param	1:25	1:38	2	URLContext *	s
param	1:40	1:55	2	RTMPPacket *	pkt
stmnts	0:0	27:14	1	
decl	3:4	3:34	2	RTMPContext	*rt
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:15	2	int	ret
op	4:12	0:0	2	=
water	4:14	0:0	2	0
if	6:4	9:4	2	(ff_amf_match_string (pkt -> data ,pkt -> size ,"_error" ))
cond	6:8	6:58	3	ff_amf_match_string (pkt -> data ,pkt -> size ,"_error" )
call	6:8	6:58	4	ff_amf_match_string
arg	6:28	6:37	5	pkt->data
water	6:28	0:0	6	pkt
op	6:31	0:0	6	->
water	6:33	0:0	6	data
arg	6:39	6:48	5	pkt->size
water	6:39	0:0	6	pkt
op	6:42	0:0	6	->
water	6:44	0:0	6	size
arg	6:50	6:58	5	"_error"
water	6:50	0:0	6	"_error"
stmts	6:61	9:4	3	
water	6:61	0:0	4	{
if	7:8	8:22	4	(( ret =handle_invoke_error (s ,pkt ) ) < 0)
cond	7:12	7:50	5	( ret =handle_invoke_error (s ,pkt ) ) < 0
water	7:12	0:0	6	(
water	7:13	0:0	6	ret
op	7:17	0:0	6	=
call	7:19	7:45	6	handle_invoke_error
arg	7:39	7:40	7	s
water	7:39	0:0	8	s
arg	7:42	7:45	7	pkt
water	7:42	0:0	8	pkt
water	7:46	0:0	6	)
op	7:48	0:0	6	<
water	7:50	0:0	6	0
stmts	8:12	8:22	5	
return	8:12	8:22	6	ret
water	8:19	0:0	7	ret
water	9:4	0:0	4	}
else	9:6	12:4	2
stmts	9:11	12:4	3	
if	9:11	12:4	4	(ff_amf_match_string (pkt -> data ,pkt -> size ,"_result" ))
cond	9:15	9:66	5	ff_amf_match_string (pkt -> data ,pkt -> size ,"_result" )
call	9:15	9:66	6	ff_amf_match_string
arg	9:35	9:44	7	pkt->data
water	9:35	0:0	8	pkt
op	9:38	0:0	8	->
water	9:40	0:0	8	data
arg	9:46	9:55	7	pkt->size
water	9:46	0:0	8	pkt
op	9:49	0:0	8	->
water	9:51	0:0	8	size
arg	9:57	9:66	7	"_result"
water	9:57	0:0	8	"_result"
stmts	9:69	12:4	5	
water	9:69	0:0	6	{
if	10:8	11:22	6	(( ret =handle_invoke_result (s ,pkt ) ) < 0)
cond	10:12	10:51	7	( ret =handle_invoke_result (s ,pkt ) ) < 0
water	10:12	0:0	8	(
water	10:13	0:0	8	ret
op	10:17	0:0	8	=
call	10:19	10:46	8	handle_invoke_result
arg	10:40	10:41	9	s
water	10:40	0:0	10	s
arg	10:43	10:46	9	pkt
water	10:43	0:0	10	pkt
water	10:47	0:0	8	)
op	10:49	0:0	8	<
water	10:51	0:0	8	0
stmts	11:12	11:22	7	
return	11:12	11:22	8	ret
water	11:19	0:0	9	ret
water	12:4	0:0	6	}
else	12:6	15:4	2
stmts	12:11	15:4	3	
if	12:11	15:4	4	(ff_amf_match_string (pkt -> data ,pkt -> size ,"onStatus" ))
cond	12:15	12:67	5	ff_amf_match_string (pkt -> data ,pkt -> size ,"onStatus" )
call	12:15	12:67	6	ff_amf_match_string
arg	12:35	12:44	7	pkt->data
water	12:35	0:0	8	pkt
op	12:38	0:0	8	->
water	12:40	0:0	8	data
arg	12:46	12:55	7	pkt->size
water	12:46	0:0	8	pkt
op	12:49	0:0	8	->
water	12:51	0:0	8	size
arg	12:57	12:67	7	"onStatus"
water	12:57	0:0	8	"onStatus"
stmts	12:70	15:4	5	
water	12:70	0:0	6	{
if	13:8	14:22	6	(( ret =handle_invoke_status (s ,pkt ) ) < 0)
cond	13:12	13:51	7	( ret =handle_invoke_status (s ,pkt ) ) < 0
water	13:12	0:0	8	(
water	13:13	0:0	8	ret
op	13:17	0:0	8	=
call	13:19	13:46	8	handle_invoke_status
arg	13:40	13:41	9	s
water	13:40	0:0	10	s
arg	13:43	13:46	9	pkt
water	13:43	0:0	10	pkt
water	13:47	0:0	8	)
op	13:49	0:0	8	<
water	13:51	0:0	8	0
stmts	14:12	14:22	7	
return	14:12	14:22	8	ret
water	14:19	0:0	9	ret
water	15:4	0:0	6	}
else	15:6	18:4	2
stmts	15:11	18:4	3	
if	15:11	18:4	4	(ff_amf_match_string (pkt -> data ,pkt -> size ,"onBWDone" ))
cond	15:15	15:67	5	ff_amf_match_string (pkt -> data ,pkt -> size ,"onBWDone" )
call	15:15	15:67	6	ff_amf_match_string
arg	15:35	15:44	7	pkt->data
water	15:35	0:0	8	pkt
op	15:38	0:0	8	->
water	15:40	0:0	8	data
arg	15:46	15:55	7	pkt->size
water	15:46	0:0	8	pkt
op	15:49	0:0	8	->
water	15:51	0:0	8	size
arg	15:57	15:67	7	"onBWDone"
water	15:57	0:0	8	"onBWDone"
stmts	15:70	18:4	5	
water	15:70	0:0	6	{
if	16:8	17:22	6	(( ret =gen_check_bw (s ,rt ) ) < 0)
cond	16:12	16:42	7	( ret =gen_check_bw (s ,rt ) ) < 0
water	16:12	0:0	8	(
water	16:13	0:0	8	ret
op	16:17	0:0	8	=
call	16:19	16:37	8	gen_check_bw
arg	16:32	16:33	9	s
water	16:32	0:0	10	s
arg	16:35	16:37	9	rt
water	16:35	0:0	10	rt
water	16:38	0:0	8	)
op	16:40	0:0	8	<
water	16:42	0:0	8	0
stmts	17:12	17:22	7	
return	17:12	17:22	8	ret
water	17:19	0:0	9	ret
water	18:4	0:0	6	}
else	18:6	26:4	2
stmts	18:11	26:4	3	
if	18:11	26:4	4	(ff_amf_match_string (pkt -> data ,pkt -> size ,"releaseStream" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"FCPublish" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"publish" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"play" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"_checkbw" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"createStream" ))
cond	18:15	23:71	5	ff_amf_match_string (pkt -> data ,pkt -> size ,"releaseStream" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"FCPublish" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"publish" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"play" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"_checkbw" ) ||ff_amf_match_string (pkt -> data ,pkt -> size ,"createStream" )
call	18:15	18:72	6	ff_amf_match_string
arg	18:35	18:44	7	pkt->data
water	18:35	0:0	8	pkt
op	18:38	0:0	8	->
water	18:40	0:0	8	data
arg	18:46	18:55	7	pkt->size
water	18:46	0:0	8	pkt
op	18:49	0:0	8	->
water	18:51	0:0	8	size
arg	18:57	18:72	7	"releaseStream"
water	18:57	0:0	8	"releaseStream"
op	18:74	0:0	6	||
call	19:15	19:68	6	ff_amf_match_string
arg	19:35	19:44	7	pkt->data
water	19:35	0:0	8	pkt
op	19:38	0:0	8	->
water	19:40	0:0	8	data
arg	19:46	19:55	7	pkt->size
water	19:46	0:0	8	pkt
op	19:49	0:0	8	->
water	19:51	0:0	8	size
arg	19:57	19:68	7	"FCPublish"
water	19:57	0:0	8	"FCPublish"
op	19:74	0:0	6	||
call	20:15	20:66	6	ff_amf_match_string
arg	20:35	20:44	7	pkt->data
water	20:35	0:0	8	pkt
op	20:38	0:0	8	->
water	20:40	0:0	8	data
arg	20:46	20:55	7	pkt->size
water	20:46	0:0	8	pkt
op	20:49	0:0	8	->
water	20:51	0:0	8	size
arg	20:57	20:66	7	"publish"
water	20:57	0:0	8	"publish"
op	20:74	0:0	6	||
call	21:15	21:63	6	ff_amf_match_string
arg	21:35	21:44	7	pkt->data
water	21:35	0:0	8	pkt
op	21:38	0:0	8	->
water	21:40	0:0	8	data
arg	21:46	21:55	7	pkt->size
water	21:46	0:0	8	pkt
op	21:49	0:0	8	->
water	21:51	0:0	8	size
arg	21:57	21:63	7	"play"
water	21:57	0:0	8	"play"
op	21:74	0:0	6	||
call	22:15	22:67	6	ff_amf_match_string
arg	22:35	22:44	7	pkt->data
water	22:35	0:0	8	pkt
op	22:38	0:0	8	->
water	22:40	0:0	8	data
arg	22:46	22:55	7	pkt->size
water	22:46	0:0	8	pkt
op	22:49	0:0	8	->
water	22:51	0:0	8	size
arg	22:57	22:67	7	"_checkbw"
water	22:57	0:0	8	"_checkbw"
op	22:74	0:0	6	||
call	23:15	23:71	6	ff_amf_match_string
arg	23:35	23:44	7	pkt->data
water	23:35	0:0	8	pkt
op	23:38	0:0	8	->
water	23:40	0:0	8	data
arg	23:46	23:55	7	pkt->size
water	23:46	0:0	8	pkt
op	23:49	0:0	8	->
water	23:51	0:0	8	size
arg	23:57	23:71	7	"createStream"
water	23:57	0:0	8	"createStream"
stmts	23:74	26:4	5	
water	23:74	0:0	6	{
if	24:8	25:22	6	(( ret =send_invoke_response (s ,pkt ) ) < 0)
cond	24:12	24:51	7	( ret =send_invoke_response (s ,pkt ) ) < 0
water	24:12	0:0	8	(
water	24:13	0:0	8	ret
op	24:17	0:0	8	=
call	24:19	24:46	8	send_invoke_response
arg	24:40	24:41	9	s
water	24:40	0:0	10	s
arg	24:43	24:46	9	pkt
water	24:43	0:0	10	pkt
water	24:47	0:0	8	)
op	24:49	0:0	8	<
water	24:51	0:0	8	0
stmts	25:12	25:22	7	
return	25:12	25:22	8	ret
water	25:19	0:0	9	ret
water	26:4	0:0	6	}
return	27:4	27:14	2	ret
water	27:11	0:0	3	ret

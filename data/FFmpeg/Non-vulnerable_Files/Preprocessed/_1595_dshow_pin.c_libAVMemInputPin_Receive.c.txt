func	1:5	50:0	0	WINAPI	libAVMemInputPin_Receive
params	2:24	0:0	1	
param	2:25	2:47	2	libAVMemInputPin *	this
param	2:49	2:69	2	IMediaSample *	sample
stmnts	0:0	49:15	1	
decl	4:4	4:64	2	libAVPin	*pin
op	4:18	0:0	2	=
call	4:20	4:63	3	(libAVPin*)
arg	4:34	4:63	4	(uint8_t*)this-imemoffset
water	4:34	0:0	5	(
water	4:35	0:0	5	uint8_t
op	4:43	0:0	5	*
water	4:44	0:0	5	)
water	4:46	0:0	5	this
op	4:51	0:0	5	-
water	4:53	0:0	5	imemoffset
decl	5:4	5:52	2	enum dshowDeviceType	devtype
op	5:33	0:0	2	=
water	5:35	0:0	2	pin
op	5:38	0:0	2	->
water	5:40	0:0	2	filter
op	5:46	0:0	2	->
water	5:48	0:0	2	type
decl	6:4	6:19	2	void	*priv_data
decl	7:4	7:22	2	AVFormatContext	*s
decl	8:4	8:16	2	uint8_t	*buf
decl	9:4	9:16	2	int	buf_size
decl	10:4	10:13	2	int	index
decl	11:4	11:19	2	int64_t	curtime
decl	12:4	12:24	2	int64_t	orig_curtime
decl	13:4	13:21	2	int64_t	graphtime
decl	14:4	14:74	2	const char	*devtypename
op	14:28	0:0	2	=
water	14:30	0:0	2	(
water	14:31	0:0	2	devtype
op	14:39	0:0	2	==
water	14:42	0:0	2	VideoDevice
water	14:53	0:0	2	)
water	14:55	0:0	2	?
water	14:57	0:0	2	"video"
water	14:65	0:0	2	:
water	14:67	0:0	2	"audio"
decl	15:4	15:47	2	IReferenceClock	*clock
op	15:27	0:0	2	=
water	15:29	0:0	2	pin
op	15:32	0:0	2	->
water	15:34	0:0	2	filter
op	15:40	0:0	2	->
water	15:42	0:0	2	clock
decl	16:4	16:17	2	int64_t	dummy
decl	17:4	17:25	2	struct dshow_ctx	*ctx
call	18:4	18:53	2	dshowdebug
arg	18:15	18:47	3	"libAVMemInputPin_Receive(%p)\n"
water	18:15	0:0	4	"libAVMemInputPin_Receive(%p)\n"
arg	18:49	18:53	3	this
water	18:49	0:0	4	this
water	18:54	0:0	2	;
if	19:4	20:24	2	(! sample)
cond	19:8	19:9	3	! sample
op	19:8	0:0	4	!
water	19:9	0:0	4	sample
stmts	20:8	20:24	3	
return	20:8	20:24	4	E_POINTER
water	20:15	0:0	5	E_POINTER
call	21:4	21:54	2	IMediaSample_GetTime
arg	21:25	21:31	3	sample
water	21:25	0:0	4	sample
arg	21:33	21:46	3	&orig_curtime
op	21:33	0:0	4	&
water	21:34	0:0	4	orig_curtime
arg	21:48	21:54	3	&dummy
op	21:48	0:0	4	&
water	21:49	0:0	4	dummy
water	21:55	0:0	2	;
water	22:4	0:0	2	orig_curtime
op	22:17	0:0	2	+=
water	22:20	0:0	2	pin
op	22:23	0:0	2	->
water	22:25	0:0	2	filter
op	22:31	0:0	2	->
water	22:33	0:0	2	start_time
water	22:43	0:0	2	;
call	23:4	23:45	2	IReferenceClock_GetTime
arg	23:28	23:33	3	clock
water	23:28	0:0	4	clock
arg	23:35	23:45	3	&graphtime
op	23:35	0:0	4	&
water	23:36	0:0	4	graphtime
water	23:46	0:0	2	;
if	24:4	27:4	2	(devtype == VideoDevice)
cond	24:8	24:19	3	devtype == VideoDevice
water	24:8	0:0	4	devtype
op	24:16	0:0	4	==
water	24:19	0:0	4	VideoDevice
stmts	24:32	27:4	3	
water	24:32	0:0	4	{
call	26:8	26:47	4	IReferenceClock_GetTime
arg	26:32	26:37	5	clock
water	26:32	0:0	6	clock
arg	26:39	26:47	5	&curtime
op	26:39	0:0	6	&
water	26:40	0:0	6	curtime
water	26:48	0:0	4	;
water	27:4	0:0	4	}
else	27:6	38:4	2
stmts	27:11	38:4	3	
water	27:11	0:0	4	{
call	28:8	28:53	4	IMediaSample_GetTime
arg	28:29	28:35	5	sample
water	28:29	0:0	6	sample
arg	28:37	28:45	5	&curtime
op	28:37	0:0	6	&
water	28:38	0:0	6	curtime
arg	28:47	28:53	5	&dummy
op	28:47	0:0	6	&
water	28:48	0:0	6	dummy
water	28:54	0:0	4	;
if	29:8	36:8	4	(curtime > 400000000000000000 LL)
cond	29:11	29:39	5	curtime > 400000000000000000 LL
water	29:11	0:0	6	curtime
op	29:19	0:0	6	>
water	29:21	0:0	6	400000000000000000
water	29:39	0:0	6	LL
stmts	29:43	36:8	5	
water	29:43	0:0	6	{
call	33:12	34:107	6	av_log
arg	33:19	33:23	7	NULL
water	33:19	0:0	8	NULL
arg	33:25	33:37	7	AV_LOG_DEBUG
water	33:25	0:0	8	AV_LOG_DEBUG
arg	34:16	34:98	7	"dshow dropping initial (or ending) audio frame with odd PTS too high %"PRId64"\n"
water	34:16	0:0	8	"dshow dropping initial (or ending) audio frame with odd PTS too high %"
water	34:88	0:0	8	PRId64
water	34:94	0:0	8	"\n"
arg	34:100	34:107	7	curtime
water	34:100	0:0	8	curtime
water	34:108	0:0	6	;
return	35:12	35:23	6	S_OK
water	35:19	0:0	7	S_OK
water	36:8	0:0	6	}
water	37:8	0:0	4	curtime
op	37:16	0:0	4	+=
water	37:19	0:0	4	pin
op	37:22	0:0	4	->
water	37:24	0:0	4	filter
op	37:30	0:0	4	->
water	37:32	0:0	4	start_time
water	37:42	0:0	4	;
water	38:4	0:0	4	}
water	39:4	0:0	2	buf_size
op	39:13	0:0	2	=
call	39:15	39:54	2	IMediaSample_GetActualDataLength
arg	39:48	39:54	3	sample
water	39:48	0:0	4	sample
water	39:55	0:0	2	;
call	40:4	40:40	2	IMediaSample_GetPointer
arg	40:28	40:34	3	sample
water	40:28	0:0	4	sample
arg	40:36	40:40	3	&buf
op	40:36	0:0	4	&
water	40:37	0:0	4	buf
water	40:41	0:0	2	;
water	41:4	0:0	2	priv_data
op	41:14	0:0	2	=
water	41:16	0:0	2	pin
op	41:19	0:0	2	->
water	41:21	0:0	2	filter
op	41:27	0:0	2	->
water	41:29	0:0	2	priv_data
water	41:38	0:0	2	;
water	42:4	0:0	2	s
op	42:6	0:0	2	=
water	42:8	0:0	2	priv_data
water	42:17	0:0	2	;
water	43:4	0:0	2	ctx
op	43:8	0:0	2	=
water	43:10	0:0	2	s
op	43:11	0:0	2	->
water	43:13	0:0	2	priv_data
water	43:22	0:0	2	;
water	44:4	0:0	2	index
op	44:10	0:0	2	=
water	44:12	0:0	2	pin
op	44:15	0:0	2	->
water	44:17	0:0	2	filter
op	44:23	0:0	2	->
water	44:25	0:0	2	stream_index
water	44:37	0:0	2	;
call	45:4	47:116	2	av_log
arg	45:11	45:15	3	NULL
water	45:11	0:0	4	NULL
arg	45:17	45:31	3	AV_LOG_VERBOSE
water	45:17	0:0	4	AV_LOG_VERBOSE
arg	45:33	46:100	3	"dshow passing through packet of type %s size %8d ""timestamp %"PRId64" orig timestamp %"PRId64" graph timestamp %"PRId64" diff %"PRId64" %s\n"
water	45:33	0:0	4	"dshow passing through packet of type %s size %8d "
water	46:8	0:0	4	"timestamp %"
water	46:21	0:0	4	PRId64
water	46:27	0:0	4	" orig timestamp %"
water	46:46	0:0	4	PRId64
water	46:52	0:0	4	" graph timestamp %"
water	46:72	0:0	4	PRId64
water	46:78	0:0	4	" diff %"
water	46:87	0:0	4	PRId64
water	46:93	0:0	4	" %s\n"
arg	47:8	47:19	3	devtypename
water	47:8	0:0	4	devtypename
arg	47:21	47:29	3	buf_size
water	47:21	0:0	4	buf_size
arg	47:31	47:38	3	curtime
water	47:31	0:0	4	curtime
arg	47:40	47:52	3	orig_curtime
water	47:40	0:0	4	orig_curtime
arg	47:54	47:63	3	graphtime
water	47:54	0:0	4	graphtime
arg	47:65	47:89	3	graphtime-orig_curtime
water	47:65	0:0	4	graphtime
op	47:75	0:0	4	-
water	47:77	0:0	4	orig_curtime
arg	47:91	47:116	3	ctx->device_name[devtype]
water	47:91	0:0	4	ctx
op	47:94	0:0	4	->
water	47:96	0:0	4	device_name
op	47:107	0:0	4	[
water	47:108	0:0	4	devtype
op	47:115	0:0	4	]
water	47:117	0:0	2	;
call	48:4	48:75	2	pin->filter->callback
arg	48:26	48:35	3	priv_data
water	48:26	0:0	4	priv_data
arg	48:37	48:42	3	index
water	48:37	0:0	4	index
arg	48:44	48:47	3	buf
water	48:44	0:0	4	buf
arg	48:49	48:57	3	buf_size
water	48:49	0:0	4	buf_size
arg	48:59	48:66	3	curtime
water	48:59	0:0	4	curtime
arg	48:68	48:75	3	devtype
water	48:68	0:0	4	devtype
water	48:76	0:0	2	;
return	49:4	49:15	2	S_OK
water	49:11	0:0	3	S_OK

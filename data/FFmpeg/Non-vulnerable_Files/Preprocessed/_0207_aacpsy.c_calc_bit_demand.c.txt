func	1:0	30:0	0	static int	calc_bit_demand
params	1:26	0:0	1	
param	1:27	1:45	2	AacPsyContext *	ctx
param	1:47	1:55	2	float	pe
param	1:57	1:65	2	int	bits
param	1:67	1:75	2	int	size
param	2:27	2:43	2	int	short_window
stmnts	0:0	29:77	1	
decl	4:4	4:94	2	const float	bitsave_slope
op	4:31	0:0	2	=
water	4:33	0:0	2	short_window
water	4:46	0:0	2	?
water	4:48	0:0	2	PSY_3GPP_SAVE_SLOPE_S
water	4:71	0:0	2	:
water	4:73	0:0	2	PSY_3GPP_SAVE_SLOPE_L
decl	5:4	5:92	2	const float	bitsave_add
op	5:31	0:0	2	=
water	5:33	0:0	2	short_window
water	5:46	0:0	2	?
water	5:48	0:0	2	PSY_3GPP_SAVE_ADD_S
water	5:71	0:0	2	:
water	5:73	0:0	2	PSY_3GPP_SAVE_ADD_L
decl	6:4	6:95	2	const float	bitspend_slope
op	6:31	0:0	2	=
water	6:33	0:0	2	short_window
water	6:46	0:0	2	?
water	6:48	0:0	2	PSY_3GPP_SPEND_SLOPE_S
water	6:71	0:0	2	:
water	6:73	0:0	2	PSY_3GPP_SPEND_SLOPE_L
decl	7:4	7:93	2	const float	bitspend_add
op	7:31	0:0	2	=
water	7:33	0:0	2	short_window
water	7:46	0:0	2	?
water	7:48	0:0	2	PSY_3GPP_SPEND_ADD_S
water	7:71	0:0	2	:
water	7:73	0:0	2	PSY_3GPP_SPEND_ADD_L
decl	8:4	8:91	2	const float	clip_low
op	8:31	0:0	2	=
water	8:33	0:0	2	short_window
water	8:46	0:0	2	?
water	8:48	0:0	2	PSY_3GPP_CLIP_LO_S
water	8:71	0:0	2	:
water	8:73	0:0	2	PSY_3GPP_CLIP_LO_L
decl	9:4	9:91	2	const float	clip_high
op	9:31	0:0	2	=
water	9:33	0:0	2	short_window
water	9:46	0:0	2	?
water	9:48	0:0	2	PSY_3GPP_CLIP_HI_S
water	9:71	0:0	2	:
water	9:73	0:0	2	PSY_3GPP_CLIP_HI_L
decl	10:4	10:65	2	float	clipped_pe
water	10:20	0:0	2	,
decl	10:4	10:65	2	float	bit_save
water	10:30	0:0	2	,
decl	10:4	10:65	2	float	bit_spend
water	10:41	0:0	2	,
decl	10:4	10:65	2	float	bit_factor
water	10:53	0:0	2	,
decl	10:4	10:65	2	float	fill_level
water	11:4	0:0	2	ctx
op	11:7	0:0	2	->
water	11:9	0:0	2	fill_level
op	11:20	0:0	2	+=
water	11:23	0:0	2	ctx
op	11:26	0:0	2	->
water	11:28	0:0	2	frame_bits
op	11:39	0:0	2	-
water	11:41	0:0	2	bits
water	11:45	0:0	2	;
water	12:4	0:0	2	ctx
op	12:7	0:0	2	->
water	12:9	0:0	2	fill_level
op	12:21	0:0	2	=
call	12:23	12:55	2	av_clip
arg	12:31	12:46	3	ctx->fill_level
water	12:31	0:0	4	ctx
op	12:34	0:0	4	->
water	12:36	0:0	4	fill_level
arg	12:48	12:49	3	0
water	12:48	0:0	4	0
arg	12:51	12:55	3	size
water	12:51	0:0	4	size
water	12:56	0:0	2	;
water	13:4	0:0	2	fill_level
op	13:15	0:0	2	=
call	13:17	13:76	2	av_clipf
arg	13:26	13:55	3	(float)ctx->fill_level/size
water	13:26	0:0	4	(
water	13:27	0:0	4	float
water	13:32	0:0	4	)
water	13:33	0:0	4	ctx
op	13:36	0:0	4	->
water	13:38	0:0	4	fill_level
op	13:49	0:0	4	/
water	13:51	0:0	4	size
arg	13:57	13:65	3	clip_low
water	13:57	0:0	4	clip_low
arg	13:67	13:76	3	clip_high
water	13:67	0:0	4	clip_high
water	13:77	0:0	2	;
water	14:4	0:0	2	clipped_pe
op	14:15	0:0	2	=
call	14:17	14:54	2	av_clipf
arg	14:26	14:28	3	pe
water	14:26	0:0	4	pe
arg	14:30	14:41	3	ctx->pe.min
water	14:30	0:0	4	ctx
op	14:33	0:0	4	->
water	14:35	0:0	4	pe
op	14:37	0:0	4	.
water	14:38	0:0	4	min
arg	14:43	14:54	3	ctx->pe.max
water	14:43	0:0	4	ctx
op	14:46	0:0	4	->
water	14:48	0:0	4	pe
op	14:50	0:0	4	.
water	14:51	0:0	4	max
water	14:55	0:0	2	;
water	15:4	0:0	2	bit_save
op	15:15	0:0	2	=
water	15:17	0:0	2	(
water	15:18	0:0	2	fill_level
op	15:29	0:0	2	+
water	15:31	0:0	2	bitsave_add
water	15:42	0:0	2	)
op	15:44	0:0	2	*
water	15:46	0:0	2	bitsave_slope
water	15:59	0:0	2	;
call	16:4	16:55	2	assert
arg	16:11	16:55	3	bit_save<=0.3f&&bit_save>=-0.05000001f
water	16:11	0:0	4	bit_save
op	16:20	0:0	4	<=
water	16:23	0:0	4	0
op	16:24	0:0	4	.
water	16:25	0:0	4	3
water	16:26	0:0	4	f
op	16:28	0:0	4	&&
water	16:31	0:0	4	bit_save
op	16:40	0:0	4	>=
op	16:43	0:0	4	-
water	16:44	0:0	4	0
op	16:45	0:0	4	.
water	16:46	0:0	4	05000001
water	16:54	0:0	4	f
water	16:56	0:0	2	;
water	17:4	0:0	2	bit_spend
op	17:15	0:0	2	=
water	17:17	0:0	2	(
water	17:18	0:0	2	fill_level
op	17:29	0:0	2	+
water	17:31	0:0	2	bitspend_add
water	17:43	0:0	2	)
op	17:45	0:0	2	*
water	17:47	0:0	2	bitspend_slope
water	17:61	0:0	2	;
call	18:4	18:50	2	assert
arg	18:11	18:50	3	bit_spend<=0.5f&&bit_spend>=-0.1f
water	18:11	0:0	4	bit_spend
op	18:21	0:0	4	<=
water	18:24	0:0	4	0
op	18:25	0:0	4	.
water	18:26	0:0	4	5
water	18:27	0:0	4	f
op	18:29	0:0	4	&&
water	18:32	0:0	4	bit_spend
op	18:42	0:0	4	>=
op	18:45	0:0	4	-
water	18:46	0:0	4	0
op	18:47	0:0	4	.
water	18:48	0:0	4	1
water	18:49	0:0	4	f
water	18:51	0:0	2	;
water	25:4	0:0	2	bit_factor
op	25:15	0:0	2	=
water	25:17	0:0	2	1
op	25:18	0:0	2	.
water	25:19	0:0	2	0
water	25:20	0:0	2	f
op	25:22	0:0	2	-
water	25:24	0:0	2	bit_save
op	25:33	0:0	2	+
water	25:35	0:0	2	(
water	25:36	0:0	2	(
water	25:37	0:0	2	bit_spend
op	25:47	0:0	2	-
water	25:49	0:0	2	bit_save
water	25:57	0:0	2	)
op	25:59	0:0	2	/
water	25:61	0:0	2	(
water	25:62	0:0	2	ctx
op	25:65	0:0	2	->
water	25:67	0:0	2	pe
op	25:69	0:0	2	.
water	25:70	0:0	2	max
op	25:74	0:0	2	-
water	25:76	0:0	2	ctx
op	25:79	0:0	2	->
water	25:81	0:0	2	pe
op	25:83	0:0	2	.
water	25:84	0:0	2	min
water	25:87	0:0	2	)
water	25:88	0:0	2	)
op	25:90	0:0	2	*
water	25:92	0:0	2	(
water	25:93	0:0	2	clipped_pe
op	25:104	0:0	2	-
water	25:106	0:0	2	ctx
op	25:109	0:0	2	->
water	25:111	0:0	2	pe
op	25:113	0:0	2	.
water	25:114	0:0	2	min
water	25:117	0:0	2	)
water	25:118	0:0	2	;
water	27:4	0:0	2	ctx
op	27:7	0:0	2	->
water	27:9	0:0	2	pe
op	27:11	0:0	2	.
water	27:12	0:0	2	max
op	27:16	0:0	2	=
call	27:18	27:39	2	FFMAX
arg	27:24	27:26	3	pe
water	27:24	0:0	4	pe
arg	27:28	27:39	3	ctx->pe.max
water	27:28	0:0	4	ctx
op	27:31	0:0	4	->
water	27:33	0:0	4	pe
op	27:35	0:0	4	.
water	27:36	0:0	4	max
water	27:40	0:0	2	;
water	28:4	0:0	2	ctx
op	28:7	0:0	2	->
water	28:9	0:0	2	pe
op	28:11	0:0	2	.
water	28:12	0:0	2	min
op	28:16	0:0	2	=
call	28:18	28:39	2	FFMIN
arg	28:24	28:26	3	pe
water	28:24	0:0	4	pe
arg	28:28	28:39	3	ctx->pe.min
water	28:28	0:0	4	ctx
op	28:31	0:0	4	->
water	28:33	0:0	4	pe
op	28:35	0:0	4	.
water	28:36	0:0	4	min
water	28:40	0:0	2	;
return	29:4	29:77	2	FFMIN(ctx->frame_bits*bit_factor,ctx->frame_bits+size-bits)
call	29:11	29:76	3	FFMIN
arg	29:17	29:45	4	ctx->frame_bits*bit_factor
water	29:17	0:0	5	ctx
op	29:20	0:0	5	->
water	29:22	0:0	5	frame_bits
op	29:33	0:0	5	*
water	29:35	0:0	5	bit_factor
arg	29:47	29:76	4	ctx->frame_bits+size-bits
water	29:47	0:0	5	ctx
op	29:50	0:0	5	->
water	29:52	0:0	5	frame_bits
op	29:63	0:0	5	+
water	29:65	0:0	5	size
op	29:70	0:0	5	-
water	29:72	0:0	5	bits

func	1:0	68:0	0	static int	write_packet
params	1:23	0:0	1	
param	1:24	1:42	2	AVFormatContext *	s
param	1:44	1:57	2	AVPacket *	pkt
stmnts	0:0	67:14	1	
decl	3:4	3:22	2	int	ret
water	3:11	0:0	2	,
decl	3:4	3:22	2	int	did_split
if	4:4	11:4	2	(s -> output_ts_offset)
cond	4:8	4:11	3	s -> output_ts_offset
water	4:8	0:0	4	s
op	4:9	0:0	4	->
water	4:11	0:0	4	output_ts_offset
stmts	4:29	11:4	3	
water	4:29	0:0	4	{
decl	5:8	5:52	4	AVStream	*st
op	5:21	0:0	4	=
water	5:23	0:0	4	s
op	5:24	0:0	4	->
water	5:26	0:0	4	streams
op	5:33	0:0	4	[
water	5:34	0:0	4	pkt
op	5:37	0:0	4	->
water	5:39	0:0	4	stream_index
op	5:51	0:0	4	]
decl	6:8	6:89	4	int64_t	offset
op	6:23	0:0	4	=
call	6:25	6:88	5	av_rescale_q
arg	6:38	6:57	6	s->output_ts_offset
water	6:38	0:0	7	s
op	6:39	0:0	7	->
water	6:41	0:0	7	output_ts_offset
arg	6:59	6:73	6	AV_TIME_BASE_Q
water	6:59	0:0	7	AV_TIME_BASE_Q
arg	6:75	6:88	6	st->time_base
water	6:75	0:0	7	st
op	6:77	0:0	7	->
water	6:79	0:0	7	time_base
if	7:8	8:30	4	(pkt -> dts != AV_NOPTS_VALUE)
cond	7:12	7:24	5	pkt -> dts != AV_NOPTS_VALUE
water	7:12	0:0	6	pkt
op	7:15	0:0	6	->
water	7:17	0:0	6	dts
op	7:21	0:0	6	!=
water	7:24	0:0	6	AV_NOPTS_VALUE
stmts	8:12	8:30	5	
water	8:12	0:0	6	pkt
op	8:15	0:0	6	->
water	8:17	0:0	6	dts
op	8:21	0:0	6	+=
water	8:24	0:0	6	offset
water	8:30	0:0	6	;
if	9:8	10:30	4	(pkt -> pts != AV_NOPTS_VALUE)
cond	9:12	9:24	5	pkt -> pts != AV_NOPTS_VALUE
water	9:12	0:0	6	pkt
op	9:15	0:0	6	->
water	9:17	0:0	6	pts
op	9:21	0:0	6	!=
water	9:24	0:0	6	AV_NOPTS_VALUE
stmts	10:12	10:30	5	
water	10:12	0:0	6	pkt
op	10:15	0:0	6	->
water	10:17	0:0	6	pts
op	10:21	0:0	6	+=
water	10:24	0:0	6	offset
water	10:30	0:0	6	;
water	11:4	0:0	4	}
if	12:4	53:4	2	(s -> avoid_negative_ts > 0)
cond	12:8	12:31	3	s -> avoid_negative_ts > 0
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	avoid_negative_ts
op	12:29	0:0	4	>
water	12:31	0:0	4	0
stmts	12:34	53:4	3	
water	12:34	0:0	4	{
decl	13:8	13:52	4	AVStream	*st
op	13:21	0:0	4	=
water	13:23	0:0	4	s
op	13:24	0:0	4	->
water	13:26	0:0	4	streams
op	13:33	0:0	4	[
water	13:34	0:0	4	pkt
op	13:37	0:0	4	->
water	13:39	0:0	4	stream_index
op	13:51	0:0	4	]
decl	14:8	14:42	4	int64_t	offset
op	14:23	0:0	4	=
water	14:25	0:0	4	st
op	14:27	0:0	4	->
water	14:29	0:0	4	mux_ts_offset
decl	15:8	15:81	4	int64_t	ts
op	15:19	0:0	4	=
water	15:21	0:0	4	s
op	15:22	0:0	4	->
water	15:24	0:0	4	internal
op	15:32	0:0	4	->
water	15:34	0:0	4	avoid_negative_ts_use_pts
water	15:60	0:0	4	?
water	15:62	0:0	4	pkt
op	15:65	0:0	4	->
water	15:67	0:0	4	pts
water	15:71	0:0	4	:
water	15:73	0:0	4	pkt
op	15:76	0:0	4	->
water	15:78	0:0	4	dts
if	16:8	20:8	4	(s -> internal -> offset == AV_NOPTS_VALUE && ts != AV_NOPTS_VALUE && ( ts < 0 || s -> avoid_negative_ts == AVFMT_AVOID_NEG_TS_MAKE_ZERO ))
cond	16:12	17:75	5	s -> internal -> offset == AV_NOPTS_VALUE && ts != AV_NOPTS_VALUE && ( ts < 0 || s -> avoid_negative_ts == AVFMT_AVOID_NEG_TS_MAKE_ZERO )
water	16:12	0:0	6	s
op	16:13	0:0	6	->
water	16:15	0:0	6	internal
op	16:23	0:0	6	->
water	16:25	0:0	6	offset
op	16:32	0:0	6	==
water	16:35	0:0	6	AV_NOPTS_VALUE
op	16:50	0:0	6	&&
water	16:53	0:0	6	ts
op	16:56	0:0	6	!=
water	16:59	0:0	6	AV_NOPTS_VALUE
op	16:74	0:0	6	&&
water	17:12	0:0	6	(
water	17:13	0:0	6	ts
op	17:16	0:0	6	<
water	17:18	0:0	6	0
op	17:20	0:0	6	||
water	17:23	0:0	6	s
op	17:24	0:0	6	->
water	17:26	0:0	6	avoid_negative_ts
op	17:44	0:0	6	==
water	17:47	0:0	6	AVFMT_AVOID_NEG_TS_MAKE_ZERO
water	17:75	0:0	6	)
stmts	17:78	20:8	5	
water	17:78	0:0	6	{
water	18:12	0:0	6	s
op	18:13	0:0	6	->
water	18:15	0:0	6	internal
op	18:23	0:0	6	->
water	18:25	0:0	6	offset
op	18:32	0:0	6	=
op	18:34	0:0	6	-
water	18:35	0:0	6	ts
water	18:37	0:0	6	;
water	19:12	0:0	6	s
op	19:13	0:0	6	->
water	19:15	0:0	6	internal
op	19:23	0:0	6	->
water	19:25	0:0	6	offset_timebase
op	19:41	0:0	6	=
water	19:43	0:0	6	st
op	19:45	0:0	6	->
water	19:47	0:0	6	time_base
water	19:56	0:0	6	;
water	20:8	0:0	6	}
if	21:8	27:8	4	(s -> internal -> offset != AV_NOPTS_VALUE && ! offset)
cond	21:12	21:54	5	s -> internal -> offset != AV_NOPTS_VALUE && ! offset
water	21:12	0:0	6	s
op	21:13	0:0	6	->
water	21:15	0:0	6	internal
op	21:23	0:0	6	->
water	21:25	0:0	6	offset
op	21:32	0:0	6	!=
water	21:35	0:0	6	AV_NOPTS_VALUE
op	21:50	0:0	6	&&
op	21:53	0:0	6	!
water	21:54	0:0	6	offset
stmts	21:62	27:8	5	
water	21:62	0:0	6	{
water	22:12	0:0	6	offset
op	22:19	0:0	6	=
water	22:21	0:0	6	st
op	22:23	0:0	6	->
water	22:25	0:0	6	mux_ts_offset
op	22:39	0:0	6	=
call	23:16	26:44	6	av_rescale_q_rnd
arg	23:33	23:52	7	s->internal->offset
water	23:33	0:0	8	s
op	23:34	0:0	8	->
water	23:36	0:0	8	internal
op	23:44	0:0	8	->
water	23:46	0:0	8	offset
arg	24:33	24:61	7	s->internal->offset_timebase
water	24:33	0:0	8	s
op	24:34	0:0	8	->
water	24:36	0:0	8	internal
op	24:44	0:0	8	->
water	24:46	0:0	8	offset_timebase
arg	25:33	25:46	7	st->time_base
water	25:33	0:0	8	st
op	25:35	0:0	8	->
water	25:37	0:0	8	time_base
arg	26:33	26:44	7	AV_ROUND_UP
water	26:33	0:0	8	AV_ROUND_UP
water	26:45	0:0	6	;
water	27:8	0:0	6	}
if	28:8	29:30	4	(pkt -> dts != AV_NOPTS_VALUE)
cond	28:12	28:24	5	pkt -> dts != AV_NOPTS_VALUE
water	28:12	0:0	6	pkt
op	28:15	0:0	6	->
water	28:17	0:0	6	dts
op	28:21	0:0	6	!=
water	28:24	0:0	6	AV_NOPTS_VALUE
stmts	29:12	29:30	5	
water	29:12	0:0	6	pkt
op	29:15	0:0	6	->
water	29:17	0:0	6	dts
op	29:21	0:0	6	+=
water	29:24	0:0	6	offset
water	29:30	0:0	6	;
if	30:8	31:30	4	(pkt -> pts != AV_NOPTS_VALUE)
cond	30:12	30:24	5	pkt -> pts != AV_NOPTS_VALUE
water	30:12	0:0	6	pkt
op	30:15	0:0	6	->
water	30:17	0:0	6	pts
op	30:21	0:0	6	!=
water	30:24	0:0	6	AV_NOPTS_VALUE
stmts	31:12	31:30	5	
water	31:12	0:0	6	pkt
op	31:15	0:0	6	->
water	31:17	0:0	6	pts
op	31:21	0:0	6	+=
water	31:24	0:0	6	offset
water	31:30	0:0	6	;
if	32:8	41:8	4	(s -> internal -> avoid_negative_ts_use_pts)
cond	32:12	32:25	5	s -> internal -> avoid_negative_ts_use_pts
water	32:12	0:0	6	s
op	32:13	0:0	6	->
water	32:15	0:0	6	internal
op	32:23	0:0	6	->
water	32:25	0:0	6	avoid_negative_ts_use_pts
stmts	32:52	41:8	5	
water	32:52	0:0	6	{
if	33:12	40:12	6	(pkt -> pts != AV_NOPTS_VALUE && pkt -> pts < 0)
cond	33:16	33:57	7	pkt -> pts != AV_NOPTS_VALUE && pkt -> pts < 0
water	33:16	0:0	8	pkt
op	33:19	0:0	8	->
water	33:21	0:0	8	pts
op	33:25	0:0	8	!=
water	33:28	0:0	8	AV_NOPTS_VALUE
op	33:43	0:0	8	&&
water	33:46	0:0	8	pkt
op	33:49	0:0	8	->
water	33:51	0:0	8	pts
op	33:55	0:0	8	<
water	33:57	0:0	8	0
stmts	33:60	40:12	7	
water	33:60	0:0	8	{
call	34:16	39:16	8	av_log
arg	34:23	34:24	9	s
water	34:23	0:0	10	s
arg	34:26	34:40	9	AV_LOG_WARNING
water	34:26	0:0	10	AV_LOG_WARNING
arg	34:42	36:74	9	"failed to avoid negative ""pts %s in stream %d.\n""Try -avoid_negative_ts 1 as a possible workaround.\n"
water	34:42	0:0	10	"failed to avoid negative "
water	35:20	0:0	10	"pts %s in stream %d.\n"
water	36:20	0:0	10	"Try -avoid_negative_ts 1 as a possible workaround.\n"
arg	37:20	37:39	9	av_ts2str(pkt->dts)
call	37:20	37:38	10	av_ts2str
arg	37:30	37:38	11	pkt->dts
water	37:30	0:0	12	pkt
op	37:33	0:0	12	->
water	37:35	0:0	12	dts
arg	38:20	39:16	9	pkt->stream_index
water	38:20	0:0	10	pkt
op	38:23	0:0	10	->
water	38:25	0:0	10	stream_index
water	39:17	0:0	8	;
water	40:12	0:0	8	}
water	41:8	0:0	6	}
else	41:10	52:8	4
stmts	41:15	52:8	5	
water	41:15	0:0	6	{
call	42:12	42:97	6	av_assert2
arg	42:23	42:97	7	pkt->dts==AV_NOPTS_VALUE||pkt->dts>=0||s->max_interleave_delta>0
water	42:23	0:0	8	pkt
op	42:26	0:0	8	->
water	42:28	0:0	8	dts
op	42:32	0:0	8	==
water	42:35	0:0	8	AV_NOPTS_VALUE
op	42:50	0:0	8	||
water	42:53	0:0	8	pkt
op	42:56	0:0	8	->
water	42:58	0:0	8	dts
op	42:62	0:0	8	>=
water	42:65	0:0	8	0
op	42:67	0:0	8	||
water	42:70	0:0	8	s
op	42:71	0:0	8	->
water	42:73	0:0	8	max_interleave_delta
op	42:94	0:0	8	>
water	42:96	0:0	8	0
water	42:98	0:0	6	;
if	43:12	51:12	6	(pkt -> dts != AV_NOPTS_VALUE && pkt -> dts < 0)
cond	43:16	43:57	7	pkt -> dts != AV_NOPTS_VALUE && pkt -> dts < 0
water	43:16	0:0	8	pkt
op	43:19	0:0	8	->
water	43:21	0:0	8	dts
op	43:25	0:0	8	!=
water	43:28	0:0	8	AV_NOPTS_VALUE
op	43:43	0:0	8	&&
water	43:46	0:0	8	pkt
op	43:49	0:0	8	->
water	43:51	0:0	8	dts
op	43:55	0:0	8	<
water	43:57	0:0	8	0
stmts	43:60	51:12	7	
water	43:60	0:0	8	{
call	44:16	50:16	8	av_log
arg	44:23	44:24	9	s
water	44:23	0:0	10	s
arg	44:26	44:40	9	AV_LOG_WARNING
water	44:26	0:0	10	AV_LOG_WARNING
arg	45:20	47:77	9	"Packets poorly interleaved, failed to avoid negative ""timestamp %s in stream %d.\n""Try -max_interleave_delta 0 as a possible workaround.\n"
water	45:20	0:0	10	"Packets poorly interleaved, failed to avoid negative "
water	46:20	0:0	10	"timestamp %s in stream %d.\n"
water	47:20	0:0	10	"Try -max_interleave_delta 0 as a possible workaround.\n"
arg	48:20	48:39	9	av_ts2str(pkt->dts)
call	48:20	48:38	10	av_ts2str
arg	48:30	48:38	11	pkt->dts
water	48:30	0:0	12	pkt
op	48:33	0:0	12	->
water	48:35	0:0	12	dts
arg	49:20	50:16	9	pkt->stream_index
water	49:20	0:0	10	pkt
op	49:23	0:0	10	->
water	49:25	0:0	10	stream_index
water	50:17	0:0	8	;
water	51:12	0:0	8	}
water	52:8	0:0	6	}
water	53:4	0:0	4	}
water	54:4	0:0	2	did_split
op	54:14	0:0	2	=
call	54:16	54:45	2	av_packet_split_side_data
arg	54:42	54:45	3	pkt
water	54:42	0:0	4	pkt
water	54:46	0:0	2	;
if	55:4	60:4	2	(( pkt -> flags & AV_PKT_FLAG_UNCODED_FRAME ))
cond	55:8	55:47	3	( pkt -> flags & AV_PKT_FLAG_UNCODED_FRAME )
water	55:8	0:0	4	(
water	55:9	0:0	4	pkt
op	55:12	0:0	4	->
water	55:14	0:0	4	flags
op	55:20	0:0	4	&
water	55:22	0:0	4	AV_PKT_FLAG_UNCODED_FRAME
water	55:47	0:0	4	)
stmts	55:50	60:4	3	
water	55:50	0:0	4	{
decl	56:8	56:45	4	AVFrame	*frame
op	56:23	0:0	4	=
water	56:25	0:0	4	(
water	56:26	0:0	4	AVFrame
op	56:34	0:0	4	*
water	56:35	0:0	4	)
water	56:36	0:0	4	pkt
op	56:39	0:0	4	->
water	56:41	0:0	4	data
call	57:8	57:57	4	av_assert0
arg	57:19	57:57	5	pkt->size==UNCODED_FRAME_PACKET_SIZE
water	57:19	0:0	6	pkt
op	57:22	0:0	6	->
water	57:24	0:0	6	size
op	57:29	0:0	6	==
water	57:32	0:0	6	UNCODED_FRAME_PACKET_SIZE
water	57:58	0:0	4	;
water	58:8	0:0	4	ret
op	58:12	0:0	4	=
call	58:14	58:77	4	s->oformat->write_uncoded_frame
arg	58:46	58:47	5	s
water	58:46	0:0	6	s
arg	58:49	58:66	5	pkt->stream_index
water	58:49	0:0	6	pkt
op	58:52	0:0	6	->
water	58:54	0:0	6	stream_index
arg	58:68	58:74	5	&frame
op	58:68	0:0	6	&
water	58:69	0:0	6	frame
arg	58:76	58:77	5	0
water	58:76	0:0	6	0
water	58:78	0:0	4	;
call	59:8	59:28	4	av_frame_free
arg	59:22	59:28	5	&frame
op	59:22	0:0	6	&
water	59:23	0:0	6	frame
water	59:29	0:0	4	;
water	60:4	0:0	4	}
else	60:6	62:4	2
stmts	60:11	62:4	3	
water	60:11	0:0	4	{
water	61:8	0:0	4	ret
op	61:12	0:0	4	=
call	61:14	61:45	4	s->oformat->write_packet
arg	61:39	61:40	5	s
water	61:39	0:0	6	s
arg	61:42	61:45	5	pkt
water	61:42	0:0	6	pkt
water	61:46	0:0	4	;
water	62:4	0:0	4	}
if	63:4	64:25	2	(s -> flush_packets && s -> pb && ret >= 0 && s -> flags & AVFMT_FLAG_FLUSH_PACKETS)
cond	63:8	63:60	3	s -> flush_packets && s -> pb && ret >= 0 && s -> flags & AVFMT_FLAG_FLUSH_PACKETS
water	63:8	0:0	4	s
op	63:9	0:0	4	->
water	63:11	0:0	4	flush_packets
op	63:25	0:0	4	&&
water	63:28	0:0	4	s
op	63:29	0:0	4	->
water	63:31	0:0	4	pb
op	63:34	0:0	4	&&
water	63:37	0:0	4	ret
op	63:41	0:0	4	>=
water	63:44	0:0	4	0
op	63:46	0:0	4	&&
water	63:49	0:0	4	s
op	63:50	0:0	4	->
water	63:52	0:0	4	flags
op	63:58	0:0	4	&
water	63:60	0:0	4	AVFMT_FLAG_FLUSH_PACKETS
stmts	64:8	64:25	3	
call	64:8	64:24	4	avio_flush
arg	64:19	64:24	5	s->pb
water	64:19	0:0	6	s
op	64:20	0:0	6	->
water	64:22	0:0	6	pb
water	64:25	0:0	4	;
if	65:4	66:38	2	(did_split)
cond	65:8	65:8	3	did_split
water	65:8	0:0	4	did_split
stmts	66:8	66:38	3	
call	66:8	66:37	4	av_packet_merge_side_data
arg	66:34	66:37	5	pkt
water	66:34	0:0	6	pkt
water	66:38	0:0	4	;
return	67:4	67:14	2	ret
water	67:11	0:0	3	ret

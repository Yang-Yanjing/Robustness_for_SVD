func	1:0	84:0	0	static int	mxf_write_partition
params	1:30	0:0	1	
param	1:31	1:49	2	AVFormatContext *	s
param	1:51	1:62	2	int	bodysid
param	2:32	2:44	2	int	indexsid
param	3:32	3:50	2	const uint8_t *	key
param	3:52	3:70	2	int	write_metadata
stmnts	0:0	83:12	1	
decl	5:4	5:34	2	MXFContext	*mxf
op	5:20	0:0	2	=
water	5:22	0:0	2	s
op	5:23	0:0	2	->
water	5:25	0:0	2	priv_data
decl	6:4	6:27	2	AVIOContext	*pb
op	6:20	0:0	2	=
water	6:22	0:0	2	s
op	6:23	0:0	2	->
water	6:25	0:0	2	pb
decl	7:4	7:36	2	int64_t	header_byte_count_offset
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	index_byte_count
op	8:30	0:0	2	=
water	8:32	0:0	2	0
water	8:33	0:0	2	;
decl	9:4	9:45	2	uint64_t	partition_offset
op	9:30	0:0	2	=
call	9:32	9:44	3	avio_tell
arg	9:42	9:44	4	pb
water	9:42	0:0	5	pb
decl	10:4	10:11	2	int	err
if	11:4	13:60	2	(! mxf -> edit_unit_byte_count && mxf -> edit_units_count)
cond	11:8	11:43	3	! mxf -> edit_unit_byte_count && mxf -> edit_units_count
op	11:8	0:0	4	!
water	11:9	0:0	4	mxf
op	11:12	0:0	4	->
water	11:14	0:0	4	edit_unit_byte_count
op	11:35	0:0	4	&&
water	11:38	0:0	4	mxf
op	11:41	0:0	4	->
water	11:43	0:0	4	edit_units_count
stmts	12:8	13:60	3	
water	12:8	0:0	4	index_byte_count
op	12:25	0:0	4	=
water	12:27	0:0	4	85
op	12:30	0:0	4	+
water	12:32	0:0	4	12
op	12:34	0:0	4	+
water	12:35	0:0	4	(
water	12:36	0:0	4	s
op	12:37	0:0	4	->
water	12:39	0:0	4	nb_streams
op	12:49	0:0	4	+
water	12:50	0:0	4	1
water	12:51	0:0	4	)
op	12:52	0:0	4	*
water	12:53	0:0	4	6
op	12:55	0:0	4	+
water	13:12	0:0	4	12
op	13:14	0:0	4	+
water	13:15	0:0	4	mxf
op	13:18	0:0	4	->
water	13:20	0:0	4	edit_units_count
op	13:36	0:0	4	*
water	13:37	0:0	4	(
water	13:38	0:0	4	11
op	13:40	0:0	4	+
water	13:41	0:0	4	mxf
op	13:44	0:0	4	->
water	13:46	0:0	4	slice_count
op	13:57	0:0	4	*
water	13:58	0:0	4	4
water	13:59	0:0	4	)
water	13:60	0:0	4	;
else	14:4	15:29	2
stmts	14:9	15:29	3	
if	14:9	15:29	4	(mxf -> edit_unit_byte_count && indexsid)
cond	14:13	14:42	5	mxf -> edit_unit_byte_count && indexsid
water	14:13	0:0	6	mxf
op	14:16	0:0	6	->
water	14:18	0:0	6	edit_unit_byte_count
op	14:39	0:0	6	&&
water	14:42	0:0	6	indexsid
stmts	15:8	15:29	5	
water	15:8	0:0	6	index_byte_count
op	15:25	0:0	6	=
water	15:27	0:0	6	80
water	15:29	0:0	6	;
if	16:4	20:4	2	(index_byte_count)
cond	16:8	16:8	3	index_byte_count
water	16:8	0:0	4	index_byte_count
stmts	16:26	20:4	3	
water	16:26	0:0	4	{
water	18:8	0:0	4	index_byte_count
op	18:25	0:0	4	+=
water	18:28	0:0	4	16
op	18:31	0:0	4	+
call	18:33	18:64	4	klv_ber_length
arg	18:48	18:64	5	index_byte_count
water	18:48	0:0	6	index_byte_count
water	18:65	0:0	4	;
water	19:8	0:0	4	index_byte_count
op	19:25	0:0	4	+=
call	19:28	19:58	4	klv_fill_size
arg	19:42	19:58	5	index_byte_count
water	19:42	0:0	6	index_byte_count
water	19:59	0:0	4	;
water	20:4	0:0	4	}
if	21:4	28:4	2	(key && !memcmp (key ,body_partition_key ,16 ))
cond	21:8	21:50	3	key && !memcmp (key ,body_partition_key ,16 )
water	21:8	0:0	4	key
op	21:12	0:0	4	&&
op	21:15	0:0	4	!
call	21:16	21:50	4	memcmp
arg	21:23	21:26	5	key
water	21:23	0:0	6	key
arg	21:28	21:46	5	body_partition_key
water	21:28	0:0	6	body_partition_key
arg	21:48	21:50	5	16
water	21:48	0:0	6	16
stmts	21:53	28:4	3	
water	21:53	0:0	4	{
if	22:8	26:8	4	(( err =av_reallocp_array (& mxf -> body_partition_offset ,mxf -> body_partitions_count + 1 ,sizeof ( * mxf -> body_partition_offset ) ) ) < 0)
cond	22:12	23:77	5	( err =av_reallocp_array (& mxf -> body_partition_offset ,mxf -> body_partitions_count + 1 ,sizeof ( * mxf -> body_partition_offset ) ) ) < 0
water	22:12	0:0	6	(
water	22:13	0:0	6	err
op	22:17	0:0	6	=
call	22:19	23:72	6	av_reallocp_array
arg	22:37	22:64	7	&mxf->body_partition_offset
op	22:37	0:0	8	&
water	22:38	0:0	8	mxf
op	22:41	0:0	8	->
water	22:43	0:0	8	body_partition_offset
arg	22:66	22:96	7	mxf->body_partitions_count+1
water	22:66	0:0	8	mxf
op	22:69	0:0	8	->
water	22:71	0:0	8	body_partitions_count
op	22:93	0:0	8	+
water	22:95	0:0	8	1
arg	23:37	23:72	7	sizeof(*mxf->body_partition_offset)
op	23:37	0:0	8	sizeof
water	23:43	0:0	8	(
op	23:44	0:0	8	*
water	23:45	0:0	8	mxf
op	23:48	0:0	8	->
water	23:50	0:0	8	body_partition_offset
water	23:71	0:0	8	)
water	23:73	0:0	6	)
op	23:75	0:0	6	<
water	23:77	0:0	6	0
stmts	23:80	26:8	5	
water	23:80	0:0	6	{
water	24:12	0:0	6	mxf
op	24:15	0:0	6	->
water	24:17	0:0	6	body_partitions_count
op	24:39	0:0	6	=
water	24:41	0:0	6	0
water	24:42	0:0	6	;
return	25:12	25:22	6	err
water	25:19	0:0	7	err
water	26:8	0:0	6	}
water	27:8	0:0	4	mxf
op	27:11	0:0	4	->
water	27:13	0:0	4	body_partition_offset
op	27:34	0:0	4	[
water	27:35	0:0	4	mxf
op	27:38	0:0	4	->
water	27:40	0:0	4	body_partitions_count
op	27:61	0:0	4	++
op	27:63	0:0	4	]
op	27:65	0:0	4	=
water	27:67	0:0	4	partition_offset
water	27:83	0:0	4	;
water	28:4	0:0	4	}
if	30:4	31:31	2	(key)
cond	30:8	30:8	3	key
water	30:8	0:0	4	key
stmts	31:8	31:31	3	
call	31:8	31:30	4	avio_write
arg	31:19	31:21	5	pb
water	31:19	0:0	6	pb
arg	31:23	31:26	5	key
water	31:23	0:0	6	key
arg	31:28	31:30	5	16
water	31:28	0:0	6	16
water	31:31	0:0	4	;
else	32:4	33:46	2
stmts	33:8	33:46	3	
call	33:8	33:45	4	avio_write
arg	33:19	33:21	5	pb
water	33:19	0:0	6	pb
arg	33:23	33:41	5	body_partition_key
water	33:23	0:0	6	body_partition_key
arg	33:43	33:45	5	16
water	33:43	0:0	6	16
water	33:46	0:0	4	;
call	34:4	34:88	2	klv_encode_ber_length
arg	34:26	34:28	3	pb
water	34:26	0:0	4	pb
arg	34:30	34:88	3	88+16LL*DESCRIPTOR_COUNT(mxf->essence_container_count)
water	34:30	0:0	4	88
op	34:33	0:0	4	+
water	34:35	0:0	4	16
water	34:37	0:0	4	LL
call	34:40	34:87	4	*DESCRIPTOR_COUNT
arg	34:59	34:87	5	mxf->essence_container_count
water	34:59	0:0	6	mxf
op	34:62	0:0	6	->
water	34:64	0:0	6	essence_container_count
water	34:89	0:0	2	;
call	36:4	36:19	2	avio_wb16
arg	36:14	36:16	3	pb
water	36:14	0:0	4	pb
arg	36:18	36:19	3	1
water	36:18	0:0	4	1
water	36:20	0:0	2	;
call	37:4	37:19	2	avio_wb16
arg	37:14	37:16	3	pb
water	37:14	0:0	4	pb
arg	37:18	37:19	3	2
water	37:18	0:0	4	2
water	37:20	0:0	2	;
call	38:4	38:26	2	avio_wb32
arg	38:14	38:16	3	pb
water	38:14	0:0	4	pb
arg	38:18	38:26	3	KAG_SIZE
water	38:18	0:0	4	KAG_SIZE
water	38:27	0:0	2	;
call	39:4	39:34	2	avio_wb64
arg	39:14	39:16	3	pb
water	39:14	0:0	4	pb
arg	39:18	39:34	3	partition_offset
water	39:18	0:0	4	partition_offset
water	39:35	0:0	2	;
if	40:4	41:79	2	(key && !memcmp (key ,body_partition_key ,16 ) && mxf -> body_partitions_count > 1)
cond	40:8	40:84	3	key && !memcmp (key ,body_partition_key ,16 ) && mxf -> body_partitions_count > 1
water	40:8	0:0	4	key
op	40:12	0:0	4	&&
op	40:15	0:0	4	!
call	40:16	40:50	4	memcmp
arg	40:23	40:26	5	key
water	40:23	0:0	6	key
arg	40:28	40:46	5	body_partition_key
water	40:28	0:0	6	body_partition_key
arg	40:48	40:50	5	16
water	40:48	0:0	6	16
op	40:52	0:0	4	&&
water	40:55	0:0	4	mxf
op	40:58	0:0	4	->
water	40:60	0:0	4	body_partitions_count
op	40:82	0:0	4	>
water	40:84	0:0	4	1
stmts	41:8	41:79	3	
call	41:8	41:78	4	avio_wb64
arg	41:18	41:20	5	pb
water	41:18	0:0	6	pb
arg	41:22	41:78	5	mxf->body_partition_offset[mxf->body_partitions_count-2]
water	41:22	0:0	6	mxf
op	41:25	0:0	6	->
water	41:27	0:0	6	body_partition_offset
op	41:48	0:0	6	[
water	41:49	0:0	6	mxf
op	41:52	0:0	6	->
water	41:54	0:0	6	body_partitions_count
op	41:75	0:0	6	-
water	41:76	0:0	6	2
op	41:77	0:0	6	]
water	41:79	0:0	4	;
else	42:4	43:79	2
stmts	42:9	43:79	3	
if	42:9	43:79	4	(key && !memcmp (key ,footer_partition_key ,16 ) && mxf -> body_partitions_count)
cond	42:13	42:67	5	key && !memcmp (key ,footer_partition_key ,16 ) && mxf -> body_partitions_count
water	42:13	0:0	6	key
op	42:17	0:0	6	&&
op	42:20	0:0	6	!
call	42:21	42:57	6	memcmp
arg	42:28	42:31	7	key
water	42:28	0:0	8	key
arg	42:33	42:53	7	footer_partition_key
water	42:33	0:0	8	footer_partition_key
arg	42:55	42:57	7	16
water	42:55	0:0	8	16
op	42:59	0:0	6	&&
water	42:62	0:0	6	mxf
op	42:65	0:0	6	->
water	42:67	0:0	6	body_partitions_count
stmts	43:8	43:79	5	
call	43:8	43:78	6	avio_wb64
arg	43:18	43:20	7	pb
water	43:18	0:0	8	pb
arg	43:22	43:78	7	mxf->body_partition_offset[mxf->body_partitions_count-1]
water	43:22	0:0	8	mxf
op	43:25	0:0	8	->
water	43:27	0:0	8	body_partition_offset
op	43:48	0:0	8	[
water	43:49	0:0	8	mxf
op	43:52	0:0	8	->
water	43:54	0:0	8	body_partitions_count
op	43:75	0:0	8	-
water	43:76	0:0	8	1
op	43:77	0:0	8	]
water	43:79	0:0	6	;
else	44:4	45:24	2
stmts	45:8	45:24	3	
call	45:8	45:23	4	avio_wb64
arg	45:18	45:20	5	pb
water	45:18	0:0	6	pb
arg	45:22	45:23	5	0
water	45:22	0:0	6	0
water	45:24	0:0	4	;
call	46:4	46:46	2	avio_wb64
arg	46:14	46:16	3	pb
water	46:14	0:0	4	pb
arg	46:18	46:46	3	mxf->footer_partition_offset
water	46:18	0:0	4	mxf
op	46:21	0:0	4	->
water	46:23	0:0	4	footer_partition_offset
water	46:47	0:0	2	;
water	48:4	0:0	2	header_byte_count_offset
op	48:29	0:0	2	=
call	48:31	48:43	2	avio_tell
arg	48:41	48:43	3	pb
water	48:41	0:0	4	pb
water	48:44	0:0	2	;
call	49:4	49:19	2	avio_wb64
arg	49:14	49:16	3	pb
water	49:14	0:0	4	pb
arg	49:18	49:19	3	0
water	49:18	0:0	4	0
water	49:20	0:0	2	;
call	51:4	51:34	2	avio_wb64
arg	51:14	51:16	3	pb
water	51:14	0:0	4	pb
arg	51:18	51:34	3	index_byte_count
water	51:18	0:0	4	index_byte_count
water	51:35	0:0	2	;
call	52:4	52:49	2	avio_wb32
arg	52:14	52:16	3	pb
water	52:14	0:0	4	pb
arg	52:18	52:49	3	index_byte_count?indexsid:0
water	52:18	0:0	4	index_byte_count
water	52:35	0:0	4	?
water	52:37	0:0	4	indexsid
water	52:46	0:0	4	:
water	52:48	0:0	4	0
water	52:50	0:0	2	;
if	54:4	55:39	2	(bodysid && mxf -> edit_units_count && mxf -> body_partitions_count && s -> oformat != & ff_mxf_opatom_muxer)
cond	54:8	54:89	3	bodysid && mxf -> edit_units_count && mxf -> body_partitions_count && s -> oformat != & ff_mxf_opatom_muxer
water	54:8	0:0	4	bodysid
op	54:16	0:0	4	&&
water	54:19	0:0	4	mxf
op	54:22	0:0	4	->
water	54:24	0:0	4	edit_units_count
op	54:41	0:0	4	&&
water	54:44	0:0	4	mxf
op	54:47	0:0	4	->
water	54:49	0:0	4	body_partitions_count
op	54:71	0:0	4	&&
water	54:74	0:0	4	s
op	54:75	0:0	4	->
water	54:77	0:0	4	oformat
op	54:85	0:0	4	!=
op	54:88	0:0	4	&
water	54:89	0:0	4	ff_mxf_opatom_muxer
stmts	55:8	55:39	3	
call	55:8	55:38	4	avio_wb64
arg	55:18	55:20	5	pb
water	55:18	0:0	6	pb
arg	55:22	55:38	5	mxf->body_offset
water	55:22	0:0	6	mxf
op	55:25	0:0	6	->
water	55:27	0:0	6	body_offset
water	55:39	0:0	4	;
else	56:4	57:24	2
stmts	57:8	57:24	3	
call	57:8	57:23	4	avio_wb64
arg	57:18	57:20	5	pb
water	57:18	0:0	6	pb
arg	57:22	57:23	5	0
water	57:22	0:0	6	0
water	57:24	0:0	4	;
call	58:4	58:25	2	avio_wb32
arg	58:14	58:16	3	pb
water	58:14	0:0	4	pb
arg	58:18	58:25	3	bodysid
water	58:18	0:0	4	bodysid
water	58:26	0:0	2	;
if	60:4	61:37	2	(s -> oformat == & ff_mxf_opatom_muxer)
cond	60:8	60:23	3	s -> oformat == & ff_mxf_opatom_muxer
water	60:8	0:0	4	s
op	60:9	0:0	4	->
water	60:11	0:0	4	oformat
op	60:19	0:0	4	==
op	60:22	0:0	4	&
water	60:23	0:0	4	ff_mxf_opatom_muxer
stmts	61:8	61:37	3	
call	61:8	61:36	4	avio_write
arg	61:19	61:21	5	pb
water	61:19	0:0	6	pb
arg	61:23	61:32	5	opatom_ul
water	61:23	0:0	6	opatom_ul
arg	61:34	61:36	5	16
water	61:34	0:0	6	16
water	61:37	0:0	4	;
else	62:4	63:35	2
stmts	63:8	63:35	3	
call	63:8	63:34	4	avio_write
arg	63:19	63:21	5	pb
water	63:19	0:0	6	pb
arg	63:23	63:30	5	op1a_ul
water	63:23	0:0	6	op1a_ul
arg	63:32	63:34	5	16
water	63:32	0:0	6	16
water	63:35	0:0	4	;
call	65:4	65:38	2	mxf_write_essence_container_refs
arg	65:37	65:38	3	s
water	65:37	0:0	4	s
water	65:39	0:0	2	;
if	66:4	80:4	2	(write_metadata)
cond	66:8	66:8	3	write_metadata
water	66:8	0:0	4	write_metadata
stmts	66:24	80:4	3	
water	66:24	0:0	4	{
decl	68:8	68:26	4	int64_t	pos
water	68:19	0:0	4	,
decl	68:8	68:26	4	int64_t	start
water	69:8	0:0	4	unsigned
water	69:17	0:0	4	header_byte_count
water	69:34	0:0	4	;
call	70:8	70:28	4	mxf_write_klv_fill
arg	70:27	70:28	5	s
water	70:27	0:0	6	s
water	70:29	0:0	4	;
water	71:8	0:0	4	start
op	71:14	0:0	4	=
call	71:16	71:31	4	avio_tell
arg	71:26	71:31	5	s->pb
water	71:26	0:0	6	s
op	71:27	0:0	6	->
water	71:29	0:0	6	pb
water	71:32	0:0	4	;
call	72:8	72:31	4	mxf_write_primer_pack
arg	72:30	72:31	5	s
water	72:30	0:0	6	s
water	72:32	0:0	4	;
call	73:8	73:40	4	mxf_write_header_metadata_sets
arg	73:39	73:40	5	s
water	73:39	0:0	6	s
water	73:41	0:0	4	;
water	74:8	0:0	4	pos
op	74:12	0:0	4	=
call	74:14	74:29	4	avio_tell
arg	74:24	74:29	5	s->pb
water	74:24	0:0	6	s
op	74:25	0:0	6	->
water	74:27	0:0	6	pb
water	74:30	0:0	4	;
water	75:8	0:0	4	header_byte_count
op	75:26	0:0	4	=
water	75:28	0:0	4	pos
op	75:32	0:0	4	-
water	75:34	0:0	4	start
op	75:40	0:0	4	+
call	75:42	75:59	4	klv_fill_size
arg	75:56	75:59	5	pos
water	75:56	0:0	6	pos
water	75:60	0:0	4	;
call	77:8	77:56	4	avio_seek
arg	77:18	77:20	5	pb
water	77:18	0:0	6	pb
arg	77:22	77:46	5	header_byte_count_offset
water	77:22	0:0	6	header_byte_count_offset
arg	77:48	77:56	5	SEEK_SET
water	77:48	0:0	6	SEEK_SET
water	77:57	0:0	4	;
call	78:8	78:39	4	avio_wb64
arg	78:18	78:20	5	pb
water	78:18	0:0	6	pb
arg	78:22	78:39	5	header_byte_count
water	78:22	0:0	6	header_byte_count
water	78:40	0:0	4	;
call	79:8	79:35	4	avio_seek
arg	79:18	79:20	5	pb
water	79:18	0:0	6	pb
arg	79:22	79:25	5	pos
water	79:22	0:0	6	pos
arg	79:27	79:35	5	SEEK_SET
water	79:27	0:0	6	SEEK_SET
water	79:36	0:0	4	;
water	80:4	0:0	4	}
if	81:4	82:22	2	(key)
cond	81:7	81:7	3	key
water	81:7	0:0	4	key
stmts	82:8	82:22	3	
call	82:8	82:21	4	avio_flush
arg	82:19	82:21	5	pb
water	82:19	0:0	6	pb
water	82:22	0:0	4	;
return	83:4	83:12	2	0
water	83:11	0:0	3	0

func	1:15	13:0	0	int	adx_encode_init
params	1:34	0:0	1	
param	1:35	1:56	2	AVCodecContext *	avctx
stmnts	0:0	12:12	1	
decl	3:4	3:36	2	ADXContext	*c
op	3:18	0:0	2	=
water	3:20	0:0	2	avctx
op	3:25	0:0	2	->
water	3:27	0:0	2	priv_data
if	4:4	7:4	2	(avctx -> channels > 2)
cond	4:8	4:26	3	avctx -> channels > 2
water	4:8	0:0	4	avctx
op	4:13	0:0	4	->
water	4:15	0:0	4	channels
op	4:24	0:0	4	>
water	4:26	0:0	4	2
stmts	4:29	7:4	3	
water	4:29	0:0	4	{
call	5:8	5:66	4	av_log
arg	5:15	5:20	5	avctx
water	5:15	0:0	6	avctx
arg	5:22	5:34	5	AV_LOG_ERROR
water	5:22	0:0	6	AV_LOG_ERROR
arg	5:36	5:66	5	"Invalid number of channels\n"
water	5:36	0:0	6	"Invalid number of channels\n"
water	5:67	0:0	4	;
return	6:8	6:30	4	AVERROR(EINVAL)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	EINVAL
water	6:23	0:0	7	EINVAL
water	7:4	0:0	4	}
water	8:4	0:0	2	avctx
op	8:9	0:0	2	->
water	8:11	0:0	2	frame_size
op	8:22	0:0	2	=
water	8:24	0:0	2	BLOCK_SAMPLES
water	8:37	0:0	2	;
water	10:4	0:0	2	c
op	10:5	0:0	2	->
water	10:7	0:0	2	cutoff
op	10:14	0:0	2	=
water	10:16	0:0	2	500
water	10:19	0:0	2	;
call	11:4	11:79	2	ff_adx_calculate_coeffs
arg	11:28	11:37	3	c->cutoff
water	11:28	0:0	4	c
op	11:29	0:0	4	->
water	11:31	0:0	4	cutoff
arg	11:39	11:57	3	avctx->sample_rate
water	11:39	0:0	4	avctx
op	11:44	0:0	4	->
water	11:46	0:0	4	sample_rate
arg	11:59	11:69	3	COEFF_BITS
water	11:59	0:0	4	COEFF_BITS
arg	11:71	11:79	3	c->coeff
water	11:71	0:0	4	c
op	11:72	0:0	4	->
water	11:74	0:0	4	coeff
water	11:80	0:0	2	;
return	12:4	12:12	2	0
water	12:11	0:0	3	0

func	1:0	18:0	0	static void	mpegts_close_filter
params	1:31	0:0	1	
param	1:32	1:49	2	MpegTSContext *	ts
param	1:51	1:71	2	MpegTSFilter *	filter
stmnts	0:0	17:24	1	
decl	3:4	3:11	2	int	pid
water	4:4	0:0	2	pid
op	4:8	0:0	2	=
water	4:10	0:0	2	filter
op	4:16	0:0	2	->
water	4:18	0:0	2	pid
water	4:21	0:0	2	;
if	5:4	6:55	2	(filter -> type == MPEGTS_SECTION)
cond	5:8	5:24	3	filter -> type == MPEGTS_SECTION
water	5:8	0:0	4	filter
op	5:14	0:0	4	->
water	5:16	0:0	4	type
op	5:21	0:0	4	==
water	5:24	0:0	4	MPEGTS_SECTION
stmts	6:8	6:55	3	
call	6:8	6:54	4	av_freep
arg	6:17	6:54	5	&filter->u.section_filter.section_buf
op	6:17	0:0	6	&
water	6:18	0:0	6	filter
op	6:24	0:0	6	->
water	6:26	0:0	6	u
op	6:27	0:0	6	.
water	6:28	0:0	6	section_filter
op	6:42	0:0	6	.
water	6:43	0:0	6	section_buf
water	6:55	0:0	4	;
else	7:4	15:4	2
stmts	7:9	15:4	3	
if	7:9	15:4	4	(filter -> type == MPEGTS_PES)
cond	7:13	7:29	5	filter -> type == MPEGTS_PES
water	7:13	0:0	6	filter
op	7:19	0:0	6	->
water	7:21	0:0	6	type
op	7:26	0:0	6	==
water	7:29	0:0	6	MPEGTS_PES
stmts	7:41	15:4	5	
water	7:41	0:0	6	{
decl	8:8	8:53	6	PESContext	*pes
op	8:24	0:0	6	=
water	8:26	0:0	6	filter
op	8:32	0:0	6	->
water	8:34	0:0	6	u
op	8:35	0:0	6	.
water	8:36	0:0	6	pes_filter
op	8:46	0:0	6	.
water	8:47	0:0	6	opaque
call	9:8	9:36	6	av_buffer_unref
arg	9:24	9:36	7	&pes->buffer
op	9:24	0:0	8	&
water	9:25	0:0	8	pes
op	9:28	0:0	8	->
water	9:30	0:0	8	buffer
water	9:37	0:0	6	;
if	12:8	14:8	6	(! ( ( PESContext * ) filter -> u . pes_filter . opaque ) -> st)
cond	12:12	12:58	7	! ( ( PESContext * ) filter -> u . pes_filter . opaque ) -> st
op	12:12	0:0	8	!
water	12:13	0:0	8	(
water	12:14	0:0	8	(
water	12:15	0:0	8	PESContext
op	12:26	0:0	8	*
water	12:27	0:0	8	)
water	12:28	0:0	8	filter
op	12:34	0:0	8	->
water	12:36	0:0	8	u
op	12:37	0:0	8	.
water	12:38	0:0	8	pes_filter
op	12:48	0:0	8	.
water	12:49	0:0	8	opaque
water	12:55	0:0	8	)
op	12:56	0:0	8	->
water	12:58	0:0	8	st
stmts	12:62	14:8	7	
water	12:62	0:0	8	{
call	13:12	13:49	8	av_freep
arg	13:21	13:49	9	&filter->u.pes_filter.opaque
op	13:21	0:0	10	&
water	13:22	0:0	10	filter
op	13:28	0:0	10	->
water	13:30	0:0	10	u
op	13:31	0:0	10	.
water	13:32	0:0	10	pes_filter
op	13:42	0:0	10	.
water	13:43	0:0	10	opaque
water	13:50	0:0	8	;
water	14:8	0:0	8	}
water	15:4	0:0	6	}
call	16:4	16:18	2	av_free
arg	16:12	16:18	3	filter
water	16:12	0:0	4	filter
water	16:19	0:0	2	;
water	17:4	0:0	2	ts
op	17:6	0:0	2	->
water	17:8	0:0	2	pids
op	17:12	0:0	2	[
water	17:13	0:0	2	pid
op	17:16	0:0	2	]
op	17:18	0:0	2	=
water	17:20	0:0	2	NULL
water	17:24	0:0	2	;

func	1:0	35:0	0	static int	do_adobe_auth
params	1:24	0:0	1	
param	1:25	1:40	2	RTMPContext *	rt
param	1:42	1:58	2	const char *	user
param	1:60	1:76	2	const char *	salt
param	2:25	2:43	2	const char *	opaque
param	2:45	2:66	2	const char *	challenge
stmnts	0:0	34:12	1	
decl	4:4	4:20	2	uint8_t	hash[16]
decl	5:4	5:62	2	char	hashstr[AV_BASE64_SIZE(sizeof(hash))]
water	5:46	0:0	2	,
decl	5:4	5:62	2	char	challenge2[10]
decl	6:4	6:38	2	struct AVMD5	*md5
op	6:22	0:0	2	=
call	6:24	6:37	3	av_md5_alloc
if	7:4	8:30	2	(! md5)
cond	7:8	7:9	3	! md5
op	7:8	0:0	4	!
water	7:9	0:0	4	md5
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(ENOMEM)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	ENOMEM
water	8:23	0:0	7	ENOMEM
call	9:4	9:73	2	snprintf
arg	9:13	9:23	3	challenge2
water	9:13	0:0	4	challenge2
arg	9:25	9:43	3	sizeof(challenge2)
op	9:25	0:0	4	sizeof
water	9:31	0:0	4	(
water	9:32	0:0	4	challenge2
water	9:42	0:0	4	)
arg	9:45	9:51	3	"%08x"
water	9:45	0:0	4	"%08x"
arg	9:53	9:73	3	av_get_random_seed()
call	9:53	9:72	4	av_get_random_seed
water	9:74	0:0	2	;
call	10:4	10:19	2	av_md5_init
arg	10:16	10:19	3	md5
water	10:16	0:0	4	md5
water	10:20	0:0	2	;
call	11:4	11:41	2	av_md5_update
arg	11:18	11:21	3	md5
water	11:18	0:0	4	md5
arg	11:23	11:27	3	user
water	11:23	0:0	4	user
arg	11:29	11:41	3	strlen(user)
call	11:29	11:40	4	strlen
arg	11:36	11:40	5	user
water	11:36	0:0	6	user
water	11:42	0:0	2	;
call	12:4	12:41	2	av_md5_update
arg	12:18	12:21	3	md5
water	12:18	0:0	4	md5
arg	12:23	12:27	3	salt
water	12:23	0:0	4	salt
arg	12:29	12:41	3	strlen(salt)
call	12:29	12:40	4	strlen
arg	12:36	12:40	5	salt
water	12:36	0:0	6	salt
water	12:42	0:0	2	;
call	13:4	13:57	2	av_md5_update
arg	13:18	13:21	3	md5
water	13:18	0:0	4	md5
arg	13:23	13:35	3	rt->password
water	13:23	0:0	4	rt
op	13:25	0:0	4	->
water	13:27	0:0	4	password
arg	13:37	13:57	3	strlen(rt->password)
call	13:37	13:56	4	strlen
arg	13:44	13:56	5	rt->password
water	13:44	0:0	6	rt
op	13:46	0:0	6	->
water	13:48	0:0	6	password
water	13:58	0:0	2	;
call	14:4	14:26	2	av_md5_final
arg	14:17	14:20	3	md5
water	14:17	0:0	4	md5
arg	14:22	14:26	3	hash
water	14:22	0:0	4	hash
water	14:27	0:0	2	;
call	15:4	16:33	2	av_base64_encode
arg	15:21	15:28	3	hashstr
water	15:21	0:0	4	hashstr
arg	15:30	15:45	3	sizeof(hashstr)
op	15:30	0:0	4	sizeof
water	15:36	0:0	4	(
water	15:37	0:0	4	hashstr
water	15:44	0:0	4	)
arg	15:47	15:51	3	hash
water	15:47	0:0	4	hash
arg	16:21	16:33	3	sizeof(hash)
op	16:21	0:0	4	sizeof
water	16:27	0:0	4	(
water	16:28	0:0	4	hash
water	16:32	0:0	4	)
water	16:34	0:0	2	;
call	17:4	17:19	2	av_md5_init
arg	17:16	17:19	3	md5
water	17:16	0:0	4	md5
water	17:20	0:0	2	;
call	18:4	18:47	2	av_md5_update
arg	18:18	18:21	3	md5
water	18:18	0:0	4	md5
arg	18:23	18:30	3	hashstr
water	18:23	0:0	4	hashstr
arg	18:32	18:47	3	strlen(hashstr)
call	18:32	18:46	4	strlen
arg	18:39	18:46	5	hashstr
water	18:39	0:0	6	hashstr
water	18:48	0:0	2	;
if	19:4	20:50	2	(opaque)
cond	19:8	19:8	3	opaque
water	19:8	0:0	4	opaque
stmts	20:8	20:50	3	
call	20:8	20:49	4	av_md5_update
arg	20:22	20:25	5	md5
water	20:22	0:0	6	md5
arg	20:27	20:33	5	opaque
water	20:27	0:0	6	opaque
arg	20:35	20:49	5	strlen(opaque)
call	20:35	20:48	6	strlen
arg	20:42	20:48	7	opaque
water	20:42	0:0	8	opaque
water	20:50	0:0	4	;
else	21:4	22:56	2
stmts	21:9	22:56	3	
if	21:9	22:56	4	(challenge)
cond	21:13	21:13	5	challenge
water	21:13	0:0	6	challenge
stmts	22:8	22:56	5	
call	22:8	22:55	6	av_md5_update
arg	22:22	22:25	7	md5
water	22:22	0:0	8	md5
arg	22:27	22:36	7	challenge
water	22:27	0:0	8	challenge
arg	22:38	22:55	7	strlen(challenge)
call	22:38	22:54	8	strlen
arg	22:45	22:54	9	challenge
water	22:45	0:0	10	challenge
water	22:56	0:0	6	;
call	23:4	23:53	2	av_md5_update
arg	23:18	23:21	3	md5
water	23:18	0:0	4	md5
arg	23:23	23:33	3	challenge2
water	23:23	0:0	4	challenge2
arg	23:35	23:53	3	strlen(challenge2)
call	23:35	23:52	4	strlen
arg	23:42	23:52	5	challenge2
water	23:42	0:0	6	challenge2
water	23:54	0:0	2	;
call	24:4	24:26	2	av_md5_final
arg	24:17	24:20	3	md5
water	24:17	0:0	4	md5
arg	24:22	24:26	3	hash
water	24:22	0:0	4	hash
water	24:27	0:0	2	;
call	25:4	26:33	2	av_base64_encode
arg	25:21	25:28	3	hashstr
water	25:21	0:0	4	hashstr
arg	25:30	25:45	3	sizeof(hashstr)
op	25:30	0:0	4	sizeof
water	25:36	0:0	4	(
water	25:37	0:0	4	hashstr
water	25:44	0:0	4	)
arg	25:47	25:51	3	hash
water	25:47	0:0	4	hash
arg	26:21	26:33	3	sizeof(hash)
op	26:21	0:0	4	sizeof
water	26:27	0:0	4	(
water	26:28	0:0	4	hash
water	26:32	0:0	4	)
water	26:34	0:0	2	;
call	27:4	29:47	2	snprintf
arg	27:13	27:28	3	rt->auth_params
water	27:13	0:0	4	rt
op	27:15	0:0	4	->
water	27:17	0:0	4	auth_params
arg	27:30	27:53	3	sizeof(rt->auth_params)
op	27:30	0:0	4	sizeof
water	27:36	0:0	4	(
water	27:37	0:0	4	rt
op	27:39	0:0	4	->
water	27:41	0:0	4	auth_params
water	27:52	0:0	4	)
arg	28:13	28:59	3	"?authmod=%s&user=%s&challenge=%s&response=%s"
water	28:13	0:0	4	"?authmod=%s&user=%s&challenge=%s&response=%s"
arg	29:13	29:20	3	"adobe"
water	29:13	0:0	4	"adobe"
arg	29:22	29:26	3	user
water	29:22	0:0	4	user
arg	29:28	29:38	3	challenge2
water	29:28	0:0	4	challenge2
arg	29:40	29:47	3	hashstr
water	29:40	0:0	4	hashstr
water	29:48	0:0	2	;
if	30:4	32:41	2	(opaque)
cond	30:8	30:8	3	opaque
water	30:8	0:0	4	opaque
stmts	31:8	32:41	3	
call	31:8	32:40	4	av_strlcatf
arg	31:20	31:35	5	rt->auth_params
water	31:20	0:0	6	rt
op	31:22	0:0	6	->
water	31:24	0:0	6	auth_params
arg	31:37	31:60	5	sizeof(rt->auth_params)
op	31:37	0:0	6	sizeof
water	31:43	0:0	6	(
water	31:44	0:0	6	rt
op	31:46	0:0	6	->
water	31:48	0:0	6	auth_params
water	31:59	0:0	6	)
arg	32:20	32:32	5	"&opaque=%s"
water	32:20	0:0	6	"&opaque=%s"
arg	32:34	32:40	5	opaque
water	32:34	0:0	6	opaque
water	32:41	0:0	4	;
call	33:4	33:15	2	av_free
arg	33:12	33:15	3	md5
water	33:12	0:0	4	md5
water	33:16	0:0	2	;
return	34:4	34:12	2	0
water	34:11	0:0	3	0

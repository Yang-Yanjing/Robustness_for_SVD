func	1:0	14:0	0	static int	request_frame
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	13:14	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:33	2	ReverseContext	*s
op	4:22	0:0	2	=
water	4:24	0:0	2	ctx
op	4:27	0:0	2	->
water	4:29	0:0	2	priv
decl	5:4	5:11	2	int	ret
water	6:4	0:0	2	ret
op	6:8	0:0	2	=
call	6:10	6:41	2	ff_request_frame
arg	6:27	6:41	3	ctx->inputs[0]
water	6:27	0:0	4	ctx
op	6:30	0:0	4	->
water	6:32	0:0	4	inputs
op	6:38	0:0	4	[
water	6:39	0:0	4	0
op	6:40	0:0	4	]
water	6:42	0:0	2	;
if	7:4	12:4	2	(ret == AVERROR_EOF && s -> nb_frames > 0)
cond	7:8	7:45	3	ret == AVERROR_EOF && s -> nb_frames > 0
water	7:8	0:0	4	ret
op	7:12	0:0	4	==
water	7:15	0:0	4	AVERROR_EOF
op	7:27	0:0	4	&&
water	7:30	0:0	4	s
op	7:31	0:0	4	->
water	7:33	0:0	4	nb_frames
op	7:43	0:0	4	>
water	7:45	0:0	4	0
stmts	7:48	12:4	3	
water	7:48	0:0	4	{
decl	8:8	8:50	4	AVFrame	*out
op	8:21	0:0	4	=
water	8:23	0:0	4	s
op	8:24	0:0	4	->
water	8:26	0:0	4	frames
op	8:32	0:0	4	[
water	8:33	0:0	4	s
op	8:34	0:0	4	->
water	8:36	0:0	4	nb_frames
op	8:46	0:0	4	-
water	8:48	0:0	4	1
op	8:49	0:0	4	]
water	9:8	0:0	4	out
op	9:11	0:0	4	->
water	9:13	0:0	4	pts
op	9:21	0:0	4	=
water	9:23	0:0	4	s
op	9:24	0:0	4	->
water	9:26	0:0	4	pts
op	9:29	0:0	4	[
water	9:30	0:0	4	s
op	9:31	0:0	4	->
water	9:33	0:0	4	flush_idx
op	9:42	0:0	4	++
op	9:44	0:0	4	]
water	9:45	0:0	4	;
water	10:8	0:0	4	ret
op	10:21	0:0	4	=
call	10:23	10:51	4	ff_filter_frame
arg	10:39	10:46	5	outlink
water	10:39	0:0	6	outlink
arg	10:48	10:51	5	out
water	10:48	0:0	6	out
water	10:52	0:0	4	;
water	11:8	0:0	4	s
op	11:9	0:0	4	->
water	11:11	0:0	4	nb_frames
op	11:20	0:0	4	--
water	11:22	0:0	4	;
water	12:4	0:0	4	}
return	13:4	13:14	2	ret
water	13:11	0:0	3	ret

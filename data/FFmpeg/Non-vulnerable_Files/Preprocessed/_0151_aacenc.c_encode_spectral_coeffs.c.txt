func	1:0	23:0	0	static void	encode_spectral_coeffs
params	1:34	0:0	1	
param	1:35	1:51	2	AACEncContext *	s
param	1:53	1:78	2	SingleChannelElement *	sce
stmnts	0:0	22:4	1	
decl	3:4	3:23	2	int	start
water	3:13	0:0	2	,
decl	3:4	3:23	2	int	i
water	3:16	0:0	2	,
decl	3:4	3:23	2	int	w
water	3:19	0:0	2	,
decl	3:4	3:23	2	int	w2
for	4:4	22:4	2	(w = 0 ;w < sce -> ics . num_windows;w += sce -> ics . group_len [ w ])
forinit	4:9	4:14	3	w = 0 ;
water	4:9	0:0	4	w
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:29	3	w < sce -> ics . num_windows
water	4:16	0:0	4	w
op	4:18	0:0	4	<
water	4:20	0:0	4	sce
op	4:23	0:0	4	->
water	4:25	0:0	4	ics
op	4:28	0:0	4	.
water	4:29	0:0	4	num_windows
forexpr	4:42	4:67	3	w += sce -> ics . group_len [ w ]
water	4:42	0:0	4	w
op	4:44	0:0	4	+=
water	4:47	0:0	4	sce
op	4:50	0:0	4	->
water	4:52	0:0	4	ics
op	4:55	0:0	4	.
water	4:56	0:0	4	group_len
op	4:65	0:0	4	[
water	4:66	0:0	4	w
op	4:67	0:0	4	]
stmts	4:70	22:4	3	
water	4:70	0:0	4	{
water	5:8	0:0	4	start
op	5:14	0:0	4	=
water	5:16	0:0	4	0
water	5:17	0:0	4	;
for	6:8	21:8	4	(i = 0 ;i < sce -> ics . max_sfb;i ++)
forinit	6:13	6:18	5	i = 0 ;
water	6:13	0:0	6	i
op	6:15	0:0	6	=
water	6:17	0:0	6	0
water	6:18	0:0	6	;
cond	6:20	6:33	5	i < sce -> ics . max_sfb
water	6:20	0:0	6	i
op	6:22	0:0	6	<
water	6:24	0:0	6	sce
op	6:27	0:0	6	->
water	6:29	0:0	6	ics
op	6:32	0:0	6	.
water	6:33	0:0	6	max_sfb
forexpr	6:42	6:43	5	i ++
water	6:42	0:0	6	i
op	6:43	0:0	6	++
stmts	6:47	21:8	5	
water	6:47	0:0	6	{
if	7:12	10:12	6	(sce -> zeroes [ w * 16 + i ])
cond	7:16	7:36	7	sce -> zeroes [ w * 16 + i ]
water	7:16	0:0	8	sce
op	7:19	0:0	8	->
water	7:21	0:0	8	zeroes
op	7:27	0:0	8	[
water	7:28	0:0	8	w
op	7:29	0:0	8	*
water	7:30	0:0	8	16
op	7:33	0:0	8	+
water	7:35	0:0	8	i
op	7:36	0:0	8	]
stmts	7:39	10:12	7	
water	7:39	0:0	8	{
water	8:16	0:0	8	start
op	8:22	0:0	8	+=
water	8:25	0:0	8	sce
op	8:28	0:0	8	->
water	8:30	0:0	8	ics
op	8:33	0:0	8	.
water	8:34	0:0	8	swb_sizes
op	8:43	0:0	8	[
water	8:44	0:0	8	i
op	8:45	0:0	8	]
water	8:46	0:0	8	;
continue	9:16	9:24	8	
water	10:12	0:0	8	}
for	11:12	19:12	6	(w2 = w ;w2 < w + sce -> ics . group_len [ w ];w2 ++)
forinit	11:17	11:23	7	w2 = w ;
water	11:17	0:0	8	w2
op	11:20	0:0	8	=
water	11:22	0:0	8	w
water	11:23	0:0	8	;
cond	11:25	11:54	7	w2 < w + sce -> ics . group_len [ w ]
water	11:25	0:0	8	w2
op	11:28	0:0	8	<
water	11:30	0:0	8	w
op	11:32	0:0	8	+
water	11:34	0:0	8	sce
op	11:37	0:0	8	->
water	11:39	0:0	8	ics
op	11:42	0:0	8	.
water	11:43	0:0	8	group_len
op	11:52	0:0	8	[
water	11:53	0:0	8	w
op	11:54	0:0	8	]
forexpr	11:57	11:59	7	w2 ++
water	11:57	0:0	8	w2
op	11:59	0:0	8	++
stmts	11:63	19:12	7	
water	11:63	0:0	8	{
call	12:16	18:78	8	s->coder->quantize_and_encode_band
arg	12:51	12:52	9	s
water	12:51	0:0	10	s
arg	12:54	12:60	9	&s->pb
op	12:54	0:0	10	&
water	12:55	0:0	10	s
op	12:56	0:0	10	->
water	12:58	0:0	10	pb
arg	13:51	13:79	9	&sce->coeffs[start+w2*128]
op	13:51	0:0	10	&
water	13:52	0:0	10	sce
op	13:55	0:0	10	->
water	13:57	0:0	10	coeffs
op	13:63	0:0	10	[
water	13:64	0:0	10	start
op	13:70	0:0	10	+
water	13:72	0:0	10	w2
op	13:74	0:0	10	*
water	13:75	0:0	10	128
op	13:78	0:0	10	]
arg	14:51	14:55	9	NULL
water	14:51	0:0	10	NULL
arg	14:57	14:78	9	sce->ics.swb_sizes[i]
water	14:57	0:0	10	sce
op	14:60	0:0	10	->
water	14:62	0:0	10	ics
op	14:65	0:0	10	.
water	14:66	0:0	10	swb_sizes
op	14:75	0:0	10	[
water	14:76	0:0	10	i
op	14:77	0:0	10	]
arg	15:51	15:72	9	sce->sf_idx[w*16+i]
water	15:51	0:0	10	sce
op	15:54	0:0	10	->
water	15:56	0:0	10	sf_idx
op	15:62	0:0	10	[
water	15:63	0:0	10	w
op	15:64	0:0	10	*
water	15:65	0:0	10	16
op	15:68	0:0	10	+
water	15:70	0:0	10	i
op	15:71	0:0	10	]
arg	16:51	16:75	9	sce->band_type[w*16+i]
water	16:51	0:0	10	sce
op	16:54	0:0	10	->
water	16:56	0:0	10	band_type
op	16:65	0:0	10	[
water	16:66	0:0	10	w
op	16:67	0:0	10	*
water	16:68	0:0	10	16
op	16:71	0:0	10	+
water	16:73	0:0	10	i
op	16:74	0:0	10	]
arg	17:51	17:60	9	s->lambda
water	17:51	0:0	10	s
op	17:52	0:0	10	->
water	17:54	0:0	10	lambda
arg	18:51	18:78	9	sce->ics.window_clipping[w]
water	18:51	0:0	10	sce
op	18:54	0:0	10	->
water	18:56	0:0	10	ics
op	18:59	0:0	10	.
water	18:60	0:0	10	window_clipping
op	18:75	0:0	10	[
water	18:76	0:0	10	w
op	18:77	0:0	10	]
water	18:79	0:0	8	;
water	19:12	0:0	8	}
water	20:12	0:0	6	start
op	20:18	0:0	6	+=
water	20:21	0:0	6	sce
op	20:24	0:0	6	->
water	20:26	0:0	6	ics
op	20:29	0:0	6	.
water	20:30	0:0	6	swb_sizes
op	20:39	0:0	6	[
water	20:40	0:0	6	i
op	20:41	0:0	6	]
water	20:42	0:0	6	;
water	21:8	0:0	6	}
water	22:4	0:0	4	}

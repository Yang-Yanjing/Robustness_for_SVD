func	1:0	21:0	0	uint32_t	av_crc
params	1:15	0:0	1	
param	1:16	1:32	2	const AVCRC *	ctx
param	1:34	1:46	2	uint32_t	crc
param	2:16	2:37	2	const uint8_t *	buffer
param	2:39	2:52	2	size_t	length
stmnts	0:0	20:14	1	
decl	4:4	4:40	2	const uint8_t	*end
op	4:23	0:0	2	=
water	4:25	0:0	2	buffer
op	4:32	0:0	2	+
water	4:34	0:0	2	length
if	6:4	16:4	2	(! ctx [ 256 ])
cond	6:8	6:16	3	! ctx [ 256 ]
op	6:8	0:0	4	!
water	6:9	0:0	4	ctx
op	6:12	0:0	4	[
water	6:13	0:0	4	256
op	6:16	0:0	4	]
stmts	6:19	16:4	3	
water	6:19	0:0	4	{
while	7:8	8:63	4	(( ( intptr_t ) buffer & 3 ) && buffer < end)
cond	7:15	7:51	5	( ( intptr_t ) buffer & 3 ) && buffer < end
water	7:15	0:0	6	(
water	7:16	0:0	6	(
water	7:17	0:0	6	intptr_t
water	7:25	0:0	6	)
water	7:27	0:0	6	buffer
op	7:34	0:0	6	&
water	7:36	0:0	6	3
water	7:37	0:0	6	)
op	7:39	0:0	6	&&
water	7:42	0:0	6	buffer
op	7:49	0:0	6	<
water	7:51	0:0	6	end
stmts	8:12	8:63	5	
water	8:12	0:0	6	crc
op	8:16	0:0	6	=
water	8:18	0:0	6	ctx
op	8:21	0:0	6	[
water	8:22	0:0	6	(
water	8:23	0:0	6	(
water	8:24	0:0	6	uint8_t
water	8:31	0:0	6	)
water	8:33	0:0	6	crc
water	8:36	0:0	6	)
op	8:38	0:0	6	^
op	8:40	0:0	6	*
water	8:41	0:0	6	buffer
op	8:47	0:0	6	++
op	8:49	0:0	6	]
op	8:51	0:0	6	^
water	8:53	0:0	6	(
water	8:54	0:0	6	crc
op	8:58	0:0	6	>>
water	8:61	0:0	6	8
water	8:62	0:0	6	)
water	8:63	0:0	6	;
while	9:8	15:8	4	(buffer < end - 3)
cond	9:15	9:30	5	buffer < end - 3
water	9:15	0:0	6	buffer
op	9:22	0:0	6	<
water	9:24	0:0	6	end
op	9:28	0:0	6	-
water	9:30	0:0	6	3
stmts	9:33	15:8	5	
water	9:33	0:0	6	{
water	10:12	0:0	6	crc
op	10:16	0:0	6	^=
call	10:19	10:56	6	av_le2ne32
arg	10:30	10:56	7	*(constuint32_t*)buffer
op	10:30	0:0	8	*
water	10:31	0:0	8	(
water	10:32	0:0	8	const
water	10:38	0:0	8	uint32_t
op	10:47	0:0	8	*
water	10:48	0:0	8	)
water	10:50	0:0	8	buffer
water	10:57	0:0	6	;
water	10:59	0:0	6	buffer
op	10:66	0:0	6	+=
water	10:69	0:0	6	4
water	10:70	0:0	6	;
water	11:12	0:0	6	crc
op	11:16	0:0	6	=
water	11:18	0:0	6	ctx
op	11:21	0:0	6	[
water	11:22	0:0	6	3
op	11:24	0:0	6	*
water	11:26	0:0	6	256
op	11:30	0:0	6	+
water	11:32	0:0	6	(
water	11:34	0:0	6	crc
op	11:45	0:0	6	&
water	11:47	0:0	6	0
water	11:48	0:0	6	xFF
water	11:51	0:0	6	)
op	11:52	0:0	6	]
op	11:54	0:0	6	^
water	12:18	0:0	6	ctx
op	12:21	0:0	6	[
water	12:22	0:0	6	2
op	12:24	0:0	6	*
water	12:26	0:0	6	256
op	12:30	0:0	6	+
water	12:32	0:0	6	(
water	12:33	0:0	6	(
water	12:34	0:0	6	crc
op	12:38	0:0	6	>>
water	12:41	0:0	6	8
water	12:43	0:0	6	)
op	12:45	0:0	6	&
water	12:47	0:0	6	0
water	12:48	0:0	6	xFF
water	12:51	0:0	6	)
op	12:52	0:0	6	]
op	12:54	0:0	6	^
water	13:18	0:0	6	ctx
op	13:21	0:0	6	[
water	13:22	0:0	6	1
op	13:24	0:0	6	*
water	13:26	0:0	6	256
op	13:30	0:0	6	+
water	13:32	0:0	6	(
water	13:33	0:0	6	(
water	13:34	0:0	6	crc
op	13:38	0:0	6	>>
water	13:41	0:0	6	16
water	13:43	0:0	6	)
op	13:45	0:0	6	&
water	13:47	0:0	6	0
water	13:48	0:0	6	xFF
water	13:51	0:0	6	)
op	13:52	0:0	6	]
op	13:54	0:0	6	^
water	14:18	0:0	6	ctx
op	14:21	0:0	6	[
water	14:22	0:0	6	0
op	14:24	0:0	6	*
water	14:26	0:0	6	256
op	14:30	0:0	6	+
water	14:32	0:0	6	(
water	14:33	0:0	6	(
water	14:34	0:0	6	crc
op	14:38	0:0	6	>>
water	14:41	0:0	6	24
water	14:43	0:0	6	)
water	14:51	0:0	6	)
op	14:52	0:0	6	]
water	14:53	0:0	6	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}
while	18:4	19:59	2	(buffer < end)
cond	18:11	18:20	3	buffer < end
water	18:11	0:0	4	buffer
op	18:18	0:0	4	<
water	18:20	0:0	4	end
stmts	19:8	19:59	3	
water	19:8	0:0	4	crc
op	19:12	0:0	4	=
water	19:14	0:0	4	ctx
op	19:17	0:0	4	[
water	19:18	0:0	4	(
water	19:19	0:0	4	(
water	19:20	0:0	4	uint8_t
water	19:27	0:0	4	)
water	19:29	0:0	4	crc
water	19:32	0:0	4	)
op	19:34	0:0	4	^
op	19:36	0:0	4	*
water	19:37	0:0	4	buffer
op	19:43	0:0	4	++
op	19:45	0:0	4	]
op	19:47	0:0	4	^
water	19:49	0:0	4	(
water	19:50	0:0	4	crc
op	19:54	0:0	4	>>
water	19:57	0:0	4	8
water	19:58	0:0	4	)
water	19:59	0:0	4	;
return	20:4	20:14	2	crc
water	20:11	0:0	3	crc

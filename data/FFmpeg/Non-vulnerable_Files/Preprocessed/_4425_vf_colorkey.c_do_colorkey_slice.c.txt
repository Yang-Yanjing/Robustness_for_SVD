func	1:0	19:0	0	static int	do_colorkey_slice
params	1:28	0:0	1	
param	1:29	1:51	2	AVFilterContext *	avctx
param	1:53	1:62	2	void *	arg
param	1:64	1:73	2	int	jobnr
param	1:75	1:86	2	int	nb_jobs
stmnts	0:0	18:12	1	
decl	3:4	3:24	2	AVFrame	*frame
op	3:19	0:0	2	=
water	3:21	0:0	2	arg
decl	4:4	4:61	2	const int	slice_start
op	4:26	0:0	2	=
water	4:28	0:0	2	(
water	4:29	0:0	2	frame
op	4:34	0:0	2	->
water	4:36	0:0	2	height
op	4:43	0:0	2	*
water	4:45	0:0	2	jobnr
water	4:50	0:0	2	)
op	4:52	0:0	2	/
water	4:54	0:0	2	nb_jobs
decl	5:4	5:65	2	const int	slice_end
op	5:24	0:0	2	=
water	5:26	0:0	2	(
water	5:27	0:0	2	frame
op	5:32	0:0	2	->
water	5:34	0:0	2	height
op	5:41	0:0	2	*
water	5:43	0:0	2	(
water	5:44	0:0	2	jobnr
op	5:50	0:0	2	+
water	5:52	0:0	2	1
water	5:53	0:0	2	)
water	5:54	0:0	2	)
op	5:56	0:0	2	/
water	5:58	0:0	2	nb_jobs
decl	6:4	6:38	2	ColorkeyContext	*ctx
op	6:25	0:0	2	=
water	6:27	0:0	2	avctx
op	6:32	0:0	2	->
water	6:34	0:0	2	priv
decl	7:4	7:15	2	int	o
water	7:9	0:0	2	,
decl	7:4	7:15	2	int	x
water	7:12	0:0	2	,
decl	7:4	7:15	2	int	y
for	8:4	17:4	2	(y = slice_start ;y < slice_end;++ y)
forinit	8:9	8:24	3	y = slice_start ;
water	8:9	0:0	4	y
op	8:11	0:0	4	=
water	8:13	0:0	4	slice_start
water	8:24	0:0	4	;
cond	8:26	8:30	3	y < slice_end
water	8:26	0:0	4	y
op	8:28	0:0	4	<
water	8:30	0:0	4	slice_end
forexpr	8:41	8:43	3	++ y
op	8:41	0:0	4	++
water	8:43	0:0	4	y
stmts	8:46	17:4	3	
water	8:46	0:0	4	{
for	9:8	16:8	4	(x = 0 ;x < frame -> width;++ x)
forinit	9:13	9:18	5	x = 0 ;
water	9:13	0:0	6	x
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:31	5	x < frame -> width
water	9:20	0:0	6	x
op	9:22	0:0	6	<
water	9:24	0:0	6	frame
op	9:29	0:0	6	->
water	9:31	0:0	6	width
forexpr	9:38	9:40	5	++ x
op	9:38	0:0	6	++
water	9:40	0:0	6	x
stmts	9:43	16:8	5	
water	9:43	0:0	6	{
water	10:12	0:0	6	o
op	10:14	0:0	6	=
water	10:16	0:0	6	frame
op	10:21	0:0	6	->
water	10:23	0:0	6	linesize
op	10:31	0:0	6	[
water	10:32	0:0	6	0
op	10:33	0:0	6	]
op	10:35	0:0	6	*
water	10:37	0:0	6	y
op	10:39	0:0	6	+
water	10:41	0:0	6	x
op	10:43	0:0	6	*
water	10:45	0:0	6	4
water	10:46	0:0	6	;
water	11:12	0:0	6	frame
op	11:17	0:0	6	->
water	11:19	0:0	6	data
op	11:23	0:0	6	[
water	11:24	0:0	6	0
op	11:25	0:0	6	]
op	11:26	0:0	6	[
water	11:27	0:0	6	o
op	11:29	0:0	6	+
water	11:31	0:0	6	ctx
op	11:34	0:0	6	->
water	11:36	0:0	6	co
op	11:38	0:0	6	[
water	11:39	0:0	6	3
op	11:40	0:0	6	]
op	11:41	0:0	6	]
op	11:43	0:0	6	=
call	12:16	15:64	6	do_colorkey_pixel
arg	12:34	12:37	7	ctx
water	12:34	0:0	8	ctx
arg	13:34	13:64	7	frame->data[0][o+ctx->co[0]]
water	13:34	0:0	8	frame
op	13:39	0:0	8	->
water	13:41	0:0	8	data
op	13:45	0:0	8	[
water	13:46	0:0	8	0
op	13:47	0:0	8	]
op	13:48	0:0	8	[
water	13:49	0:0	8	o
op	13:51	0:0	8	+
water	13:53	0:0	8	ctx
op	13:56	0:0	8	->
water	13:58	0:0	8	co
op	13:60	0:0	8	[
water	13:61	0:0	8	0
op	13:62	0:0	8	]
op	13:63	0:0	8	]
arg	14:34	14:64	7	frame->data[0][o+ctx->co[1]]
water	14:34	0:0	8	frame
op	14:39	0:0	8	->
water	14:41	0:0	8	data
op	14:45	0:0	8	[
water	14:46	0:0	8	0
op	14:47	0:0	8	]
op	14:48	0:0	8	[
water	14:49	0:0	8	o
op	14:51	0:0	8	+
water	14:53	0:0	8	ctx
op	14:56	0:0	8	->
water	14:58	0:0	8	co
op	14:60	0:0	8	[
water	14:61	0:0	8	1
op	14:62	0:0	8	]
op	14:63	0:0	8	]
arg	15:34	15:64	7	frame->data[0][o+ctx->co[2]]
water	15:34	0:0	8	frame
op	15:39	0:0	8	->
water	15:41	0:0	8	data
op	15:45	0:0	8	[
water	15:46	0:0	8	0
op	15:47	0:0	8	]
op	15:48	0:0	8	[
water	15:49	0:0	8	o
op	15:51	0:0	8	+
water	15:53	0:0	8	ctx
op	15:56	0:0	8	->
water	15:58	0:0	8	co
op	15:60	0:0	8	[
water	15:61	0:0	8	2
op	15:62	0:0	8	]
op	15:63	0:0	8	]
water	15:65	0:0	6	;
water	16:8	0:0	6	}
water	17:4	0:0	4	}
return	18:4	18:12	2	0
water	18:11	0:0	3	0

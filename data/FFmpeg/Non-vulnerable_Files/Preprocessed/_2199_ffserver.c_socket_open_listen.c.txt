func	1:0	30:0	0	static int	socket_open_listen
params	1:29	0:0	1	
param	1:30	1:57	2	struct sockaddr_in *	my_addr
stmnts	0:0	29:13	1	
decl	3:4	3:22	2	int	server_fd
water	3:17	0:0	2	,
decl	3:4	3:22	2	int	tmp
water	4:4	0:0	2	server_fd
op	4:14	0:0	2	=
call	4:16	4:44	2	socket
arg	4:23	4:30	3	AF_INET
water	4:23	0:0	4	AF_INET
arg	4:31	4:42	3	SOCK_STREAM
water	4:31	0:0	4	SOCK_STREAM
arg	4:43	4:44	3	0
water	4:43	0:0	4	0
water	4:45	0:0	2	;
if	5:4	8:4	2	(server_fd < 0)
cond	5:8	5:20	3	server_fd < 0
water	5:8	0:0	4	server_fd
op	5:18	0:0	4	<
water	5:20	0:0	4	0
stmts	5:23	8:4	3	
water	5:23	0:0	4	{
call	6:8	6:24	4	perror
arg	6:16	6:24	5	"socket"
water	6:16	0:0	6	"socket"
water	6:25	0:0	4	;
return	7:8	7:17	4	-1
op	7:15	0:0	5	-
water	7:16	0:0	5	1
water	8:4	0:0	4	}
water	9:4	0:0	2	tmp
op	9:8	0:0	2	=
water	9:10	0:0	2	1
water	9:11	0:0	2	;
if	10:4	11:72	2	(setsockopt (server_fd ,SOL_SOCKET ,SO_REUSEADDR ,& tmp ,sizeof ( tmp ) ))
cond	10:8	10:73	3	setsockopt (server_fd ,SOL_SOCKET ,SO_REUSEADDR ,& tmp ,sizeof ( tmp ) )
call	10:8	10:73	4	setsockopt
arg	10:19	10:28	5	server_fd
water	10:19	0:0	6	server_fd
arg	10:30	10:40	5	SOL_SOCKET
water	10:30	0:0	6	SOL_SOCKET
arg	10:42	10:54	5	SO_REUSEADDR
water	10:42	0:0	6	SO_REUSEADDR
arg	10:56	10:60	5	&tmp
op	10:56	0:0	6	&
water	10:57	0:0	6	tmp
arg	10:62	10:73	5	sizeof(tmp)
op	10:62	0:0	6	sizeof
water	10:68	0:0	6	(
water	10:69	0:0	6	tmp
water	10:72	0:0	6	)
stmts	11:8	11:72	3	
call	11:8	11:71	4	av_log
arg	11:15	11:19	5	NULL
water	11:15	0:0	6	NULL
arg	11:21	11:35	5	AV_LOG_WARNING
water	11:21	0:0	6	AV_LOG_WARNING
arg	11:37	11:71	5	"setsockopt SO_REUSEADDR failed\n"
water	11:37	0:0	6	"setsockopt SO_REUSEADDR failed\n"
water	11:72	0:0	4	;
water	12:4	0:0	2	my_addr
op	12:11	0:0	2	->
water	12:13	0:0	2	sin_family
op	12:24	0:0	2	=
water	12:26	0:0	2	AF_INET
water	12:33	0:0	2	;
if	13:4	19:4	2	(bind (server_fd ,( struct sockaddr * ) my_addr ,sizeof ( * my_addr ) ) < 0)
cond	13:8	13:75	3	bind (server_fd ,( struct sockaddr * ) my_addr ,sizeof ( * my_addr ) ) < 0
call	13:8	13:71	4	bind
arg	13:14	13:23	5	server_fd
water	13:14	0:0	6	server_fd
arg	13:25	13:52	5	(structsockaddr*)my_addr
water	13:25	0:0	6	(
water	13:26	0:0	6	struct
water	13:33	0:0	6	sockaddr
op	13:42	0:0	6	*
water	13:43	0:0	6	)
water	13:45	0:0	6	my_addr
arg	13:54	13:71	5	sizeof(*my_addr)
op	13:54	0:0	6	sizeof
water	13:61	0:0	6	(
op	13:62	0:0	6	*
water	13:63	0:0	6	my_addr
water	13:70	0:0	6	)
op	13:73	0:0	4	<
water	13:75	0:0	4	0
stmts	13:78	19:4	3	
water	13:78	0:0	4	{
decl	14:8	14:24	4	char	bindmsg[32]
call	15:8	16:41	4	snprintf
arg	15:17	15:24	5	bindmsg
water	15:17	0:0	6	bindmsg
arg	15:26	15:41	5	sizeof(bindmsg)
op	15:26	0:0	6	sizeof
water	15:32	0:0	6	(
water	15:33	0:0	6	bindmsg
water	15:40	0:0	6	)
arg	15:43	15:58	5	"bind(port %d)"
water	15:43	0:0	6	"bind(port %d)"
arg	16:17	16:41	5	ntohs(my_addr->sin_port)
call	16:17	16:40	6	ntohs
arg	16:23	16:40	7	my_addr->sin_port
water	16:23	0:0	8	my_addr
op	16:30	0:0	8	->
water	16:32	0:0	8	sin_port
water	16:42	0:0	4	;
call	17:8	17:23	4	perror
arg	17:16	17:23	5	bindmsg
water	17:16	0:0	6	bindmsg
water	17:24	0:0	4	;
goto	18:8	18:17	4	fail
water	18:13	0:0	5	fail
water	19:4	0:0	4	}
if	20:4	23:4	2	(listen (server_fd ,5 ) < 0)
cond	20:8	20:32	3	listen (server_fd ,5 ) < 0
call	20:8	20:28	4	listen
arg	20:16	20:25	5	server_fd
water	20:16	0:0	6	server_fd
arg	20:27	20:28	5	5
water	20:27	0:0	6	5
op	20:30	0:0	4	<
water	20:32	0:0	4	0
stmts	20:35	23:4	3	
water	20:35	0:0	4	{
call	21:8	21:24	4	perror
arg	21:16	21:24	5	"listen"
water	21:16	0:0	6	"listen"
water	21:25	0:0	4	;
goto	22:8	22:17	4	fail
water	22:13	0:0	5	fail
water	23:4	0:0	4	}
if	24:4	25:67	2	(ff_socket_nonblock (server_fd ,1 ) < 0)
cond	24:8	24:43	3	ff_socket_nonblock (server_fd ,1 ) < 0
call	24:8	24:39	4	ff_socket_nonblock
arg	24:27	24:36	5	server_fd
water	24:27	0:0	6	server_fd
arg	24:38	24:39	5	1
water	24:38	0:0	6	1
op	24:41	0:0	4	<
water	24:43	0:0	4	0
stmts	25:8	25:67	3	
call	25:8	25:66	4	av_log
arg	25:15	25:19	5	NULL
water	25:15	0:0	6	NULL
arg	25:21	25:35	5	AV_LOG_WARNING
water	25:21	0:0	6	AV_LOG_WARNING
arg	25:37	25:66	5	"ff_socket_nonblock failed\n"
water	25:37	0:0	6	"ff_socket_nonblock failed\n"
water	25:67	0:0	4	;
return	26:4	26:20	2	server_fd
water	26:11	0:0	3	server_fd
label	27:0	27:4	2	fail :
call	28:4	28:25	2	closesocket
arg	28:16	28:25	3	server_fd
water	28:16	0:0	4	server_fd
water	28:26	0:0	2	;
return	29:4	29:13	2	-1
op	29:11	0:0	3	-
water	29:12	0:0	3	1

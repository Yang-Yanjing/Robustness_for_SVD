func	1:0	82:0	0	void	ff_hyscale_fast_mmxext
params	1:27	0:0	1	
param	1:28	1:41	2	SwsContext *	c
param	1:43	1:55	2	int16_t *	dst
param	2:33	2:45	2	int	dstWidth
param	2:47	2:65	2	const uint8_t *	src
param	3:33	3:41	2	int	srcW
param	3:43	3:51	2	int	xInc
stmnts	0:0	81:32	1	
decl	5:4	5:41	2	int32_t	*filterPos
op	5:23	0:0	2	=
water	5:25	0:0	2	c
op	5:26	0:0	2	->
water	5:28	0:0	2	hLumFilterPos
decl	6:4	6:38	2	int16_t	*filter
op	6:23	0:0	2	=
water	6:25	0:0	2	c
op	6:26	0:0	2	->
water	6:28	0:0	2	hLumFilter
decl	7:4	7:54	2	void	*mmxextFilterCode
op	7:30	0:0	2	=
water	7:32	0:0	2	c
op	7:33	0:0	2	->
water	7:35	0:0	2	lumMmxextFilterCode
decl	8:4	8:9	2	int	i
decl	10:4	10:20	2	uint64_t	retsave
decl	13:4	13:20	2	uint64_t	ebxsave
water	16:4	0:0	2	__asm__
water	16:12	0:0	2	volatile
water	16:20	0:0	2	(
water	18:8	0:0	2	"mov               -8(%%rsp), %%"
water	18:41	0:0	2	REG_a
water	18:46	0:0	2	" \n\t"
water	19:8	0:0	2	"mov               %%"
water	19:30	0:0	2	REG_a
water	19:35	0:0	2	", %5        \n\t"
water	22:8	0:0	2	"mov               %%"
water	22:30	0:0	2	REG_b
water	22:35	0:0	2	", %5        \n\t"
water	25:8	0:0	2	"pxor                  %%mm7, %%mm7     \n\t"
water	26:8	0:0	2	"mov                      %0, %%"
water	26:41	0:0	2	REG_c
water	26:46	0:0	2	" \n\t"
water	27:8	0:0	2	"mov                      %1, %%"
water	27:41	0:0	2	REG_D
water	27:46	0:0	2	" \n\t"
water	28:8	0:0	2	"mov                      %2, %%"
water	28:41	0:0	2	REG_d
water	28:46	0:0	2	" \n\t"
water	29:8	0:0	2	"mov                      %3, %%"
water	29:41	0:0	2	REG_b
water	29:46	0:0	2	" \n\t"
water	30:8	0:0	2	"xor               %%"
water	30:30	0:0	2	REG_a
water	30:35	0:0	2	", %%"
water	30:41	0:0	2	REG_a
water	30:46	0:0	2	" \n\t"
water	31:8	0:0	2	PREFETCH
water	31:16	0:0	2	"        (%%"
water	31:29	0:0	2	REG_c
water	31:34	0:0	2	")            \n\t"
water	32:8	0:0	2	PREFETCH
water	32:16	0:0	2	"      32(%%"
water	32:29	0:0	2	REG_c
water	32:34	0:0	2	")            \n\t"
water	33:8	0:0	2	PREFETCH
water	33:16	0:0	2	"      64(%%"
water	33:29	0:0	2	REG_c
water	33:34	0:0	2	")            \n\t"
water	36:8	0:0	2	"movl            (%%"
water	36:29	0:0	2	REG_b
water	36:34	0:0	2	"), %%esi     \n\t"
water	37:8	0:0	2	"call                    *%4            \n\t"
water	38:8	0:0	2	"movl (%%"
water	38:18	0:0	2	REG_b
water	38:23	0:0	2	", %%"
water	38:29	0:0	2	REG_a
water	38:34	0:0	2	"), %%esi     \n\t"
water	39:8	0:0	2	"add               %%"
water	39:30	0:0	2	REG_S
water	39:35	0:0	2	", %%"
water	39:41	0:0	2	REG_c
water	39:46	0:0	2	" \n\t"
water	40:8	0:0	2	"add               %%"
water	40:30	0:0	2	REG_a
water	40:35	0:0	2	", %%"
water	40:41	0:0	2	REG_D
water	40:46	0:0	2	" \n\t"
water	41:8	0:0	2	"xor               %%"
water	41:30	0:0	2	REG_a
water	41:35	0:0	2	", %%"
water	41:41	0:0	2	REG_a
water	41:46	0:0	2	" \n\t"
water	44:8	0:0	2	"movl (%%"
water	44:18	0:0	2	REG_b
water	44:23	0:0	2	"), %%esi        \n\t"
water	45:8	0:0	2	"call         *%4                       \n\t"
water	46:8	0:0	2	"addl (%%"
water	46:18	0:0	2	REG_b
water	46:23	0:0	2	", %%"
water	46:29	0:0	2	REG_a
water	46:34	0:0	2	"), %%"
water	46:41	0:0	2	REG_c
water	46:46	0:0	2	" \n\t"
water	47:8	0:0	2	"add               %%"
water	47:30	0:0	2	REG_a
water	47:35	0:0	2	", %%"
water	47:41	0:0	2	REG_D
water	47:46	0:0	2	" \n\t"
water	48:8	0:0	2	"xor               %%"
water	48:30	0:0	2	REG_a
water	48:35	0:0	2	", %%"
water	48:41	0:0	2	REG_a
water	48:46	0:0	2	" \n\t"
water	50:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	51:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	52:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	53:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	54:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	55:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	56:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	57:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	59:8	0:0	2	"mov                      %5, %%"
water	59:41	0:0	2	REG_a
water	59:46	0:0	2	" \n\t"
water	60:8	0:0	2	"mov               %%"
water	60:30	0:0	2	REG_a
water	60:35	0:0	2	", -8(%%rsp) \n\t"
water	63:8	0:0	2	"mov                      %5, %%"
water	63:41	0:0	2	REG_b
water	63:46	0:0	2	" \n\t"
op	66:8	0:0	2	::
water	66:11	0:0	2	"m"
water	66:15	0:0	2	(
water	66:16	0:0	2	src
water	66:19	0:0	2	)
water	66:20	0:0	2	,
water	66:22	0:0	2	"m"
water	66:26	0:0	2	(
water	66:27	0:0	2	dst
water	66:30	0:0	2	)
water	66:31	0:0	2	,
water	66:33	0:0	2	"m"
water	66:37	0:0	2	(
water	66:38	0:0	2	filter
water	66:44	0:0	2	)
water	66:45	0:0	2	,
water	66:47	0:0	2	"m"
water	66:51	0:0	2	(
water	66:52	0:0	2	filterPos
water	66:61	0:0	2	)
water	66:62	0:0	2	,
water	67:11	0:0	2	"m"
water	67:15	0:0	2	(
water	67:16	0:0	2	mmxextFilterCode
water	67:32	0:0	2	)
water	69:10	0:0	2	,
water	69:11	0:0	2	"m"
water	69:14	0:0	2	(
water	69:15	0:0	2	retsave
water	69:22	0:0	2	)
water	72:10	0:0	2	,
water	72:11	0:0	2	"m"
water	72:15	0:0	2	(
water	72:16	0:0	2	ebxsave
water	72:23	0:0	2	)
water	75:8	0:0	2	:
water	75:10	0:0	2	"%"
water	75:13	0:0	2	REG_a
water	75:18	0:0	2	,
water	75:20	0:0	2	"%"
water	75:23	0:0	2	REG_c
water	75:28	0:0	2	,
water	75:30	0:0	2	"%"
water	75:33	0:0	2	REG_d
water	75:38	0:0	2	,
water	75:40	0:0	2	"%"
water	75:43	0:0	2	REG_S
water	75:48	0:0	2	,
water	75:50	0:0	2	"%"
water	75:53	0:0	2	REG_D
water	77:9	0:0	2	,
water	77:10	0:0	2	"%"
water	77:13	0:0	2	REG_b
water	79:4	0:0	2	)
water	79:5	0:0	2	;
for	80:4	81:32	2	(i = dstWidth - 1 ;( i * xInc ) >> 16 >= srcW - 1;i --)
forinit	80:9	80:21	3	i = dstWidth - 1 ;
water	80:9	0:0	4	i
op	80:10	0:0	4	=
water	80:11	0:0	4	dstWidth
op	80:19	0:0	4	-
water	80:20	0:0	4	1
water	80:21	0:0	4	;
cond	80:23	80:43	3	( i * xInc ) >> 16 >= srcW - 1
water	80:23	0:0	4	(
water	80:24	0:0	4	i
op	80:25	0:0	4	*
water	80:26	0:0	4	xInc
water	80:30	0:0	4	)
op	80:31	0:0	4	>>
water	80:33	0:0	4	16
op	80:36	0:0	4	>=
water	80:38	0:0	4	srcW
op	80:42	0:0	4	-
water	80:43	0:0	4	1
forexpr	80:46	80:47	3	i --
water	80:46	0:0	4	i
op	80:47	0:0	4	--
stmts	81:8	81:32	3	
water	81:8	0:0	4	dst
op	81:11	0:0	4	[
water	81:12	0:0	4	i
op	81:13	0:0	4	]
op	81:15	0:0	4	=
water	81:17	0:0	4	src
op	81:20	0:0	4	[
water	81:21	0:0	4	srcW
op	81:25	0:0	4	-
water	81:26	0:0	4	1
op	81:27	0:0	4	]
op	81:28	0:0	4	*
water	81:29	0:0	4	128
water	81:32	0:0	4	;

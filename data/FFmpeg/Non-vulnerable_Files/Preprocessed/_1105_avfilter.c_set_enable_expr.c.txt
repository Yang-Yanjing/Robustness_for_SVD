func	1:0	34:0	0	static int	set_enable_expr
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
param	1:49	1:65	2	const char *	expr
stmnts	0:0	33:12	1	
decl	3:4	3:11	2	int	ret
decl	4:4	4:18	2	char	*expr_dup
decl	5:4	5:29	2	AVExpr	*old
op	5:16	0:0	2	=
water	5:18	0:0	2	ctx
op	5:21	0:0	2	->
water	5:23	0:0	2	enable
if	6:4	10:4	2	(! ( ctx -> filter -> flags & AVFILTER_FLAG_SUPPORT_TIMELINE ))
cond	6:8	6:61	3	! ( ctx -> filter -> flags & AVFILTER_FLAG_SUPPORT_TIMELINE )
op	6:8	0:0	4	!
water	6:9	0:0	4	(
water	6:10	0:0	4	ctx
op	6:13	0:0	4	->
water	6:15	0:0	4	filter
op	6:21	0:0	4	->
water	6:23	0:0	4	flags
op	6:29	0:0	4	&
water	6:31	0:0	4	AVFILTER_FLAG_SUPPORT_TIMELINE
water	6:61	0:0	4	)
stmts	6:64	10:4	3	
water	6:64	0:0	4	{
call	7:8	8:54	4	av_log
arg	7:15	7:18	5	ctx
water	7:15	0:0	6	ctx
arg	7:20	7:32	5	AV_LOG_ERROR
water	7:20	0:0	6	AV_LOG_ERROR
arg	7:34	8:35	5	"Timeline ('enable' option) not supported ""with filter '%s'\n"
water	7:34	0:0	6	"Timeline ('enable' option) not supported "
water	8:15	0:0	6	"with filter '%s'\n"
arg	8:37	8:54	5	ctx->filter->name
water	8:37	0:0	6	ctx
op	8:40	0:0	6	->
water	8:42	0:0	6	filter
op	8:48	0:0	6	->
water	8:50	0:0	6	name
water	8:55	0:0	4	;
return	9:8	9:35	4	AVERROR_PATCHWELCOME
water	9:15	0:0	5	AVERROR_PATCHWELCOME
water	10:4	0:0	4	}
water	11:4	0:0	2	expr_dup
op	11:13	0:0	2	=
call	11:15	11:29	2	av_strdup
arg	11:25	11:29	3	expr
water	11:25	0:0	4	expr
water	11:30	0:0	2	;
if	12:4	13:30	2	(! expr_dup)
cond	12:8	12:9	3	! expr_dup
op	12:8	0:0	4	!
water	12:9	0:0	4	expr_dup
stmts	13:8	13:30	3	
return	13:8	13:30	4	AVERROR(ENOMEM)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	ENOMEM
water	13:23	0:0	7	ENOMEM
if	14:4	20:4	2	(! ctx -> var_values)
cond	14:8	14:14	3	! ctx -> var_values
op	14:8	0:0	4	!
water	14:9	0:0	4	ctx
op	14:12	0:0	4	->
water	14:14	0:0	4	var_values
stmts	14:26	20:4	3	
water	14:26	0:0	4	{
water	15:8	0:0	4	ctx
op	15:11	0:0	4	->
water	15:13	0:0	4	var_values
op	15:24	0:0	4	=
call	15:26	15:73	4	av_calloc
arg	15:36	15:47	5	VAR_VARS_NB
water	15:36	0:0	6	VAR_VARS_NB
arg	15:49	15:73	5	sizeof(*ctx->var_values)
op	15:49	0:0	6	sizeof
water	15:55	0:0	6	(
op	15:56	0:0	6	*
water	15:57	0:0	6	ctx
op	15:60	0:0	6	->
water	15:62	0:0	6	var_values
water	15:72	0:0	6	)
water	15:74	0:0	4	;
if	16:8	19:8	4	(! ctx -> var_values)
cond	16:12	16:18	5	! ctx -> var_values
op	16:12	0:0	6	!
water	16:13	0:0	6	ctx
op	16:16	0:0	6	->
water	16:18	0:0	6	var_values
stmts	16:30	19:8	5	
water	16:30	0:0	6	{
call	17:12	17:28	6	av_free
arg	17:20	17:28	7	expr_dup
water	17:20	0:0	8	expr_dup
water	17:29	0:0	6	;
return	18:12	18:34	6	AVERROR(ENOMEM)
call	18:19	18:33	7	AVERROR
arg	18:27	18:33	8	ENOMEM
water	18:27	0:0	9	ENOMEM
water	19:8	0:0	6	}
water	20:4	0:0	4	}
water	21:4	0:0	2	ret
op	21:8	0:0	2	=
call	21:10	22:60	2	av_expr_parse
arg	21:24	21:46	3	(AVExpr**)&ctx->enable
water	21:24	0:0	4	(
water	21:25	0:0	4	AVExpr
op	21:31	0:0	4	*
op	21:32	0:0	4	*
water	21:33	0:0	4	)
op	21:34	0:0	4	&
water	21:35	0:0	4	ctx
op	21:38	0:0	4	->
water	21:40	0:0	4	enable
arg	21:48	21:56	3	expr_dup
water	21:48	0:0	4	expr_dup
arg	21:58	21:67	3	var_names
water	21:58	0:0	4	var_names
arg	22:24	22:28	3	NULL
water	22:24	0:0	4	NULL
arg	22:30	22:34	3	NULL
water	22:30	0:0	4	NULL
arg	22:36	22:40	3	NULL
water	22:36	0:0	4	NULL
arg	22:42	22:46	3	NULL
water	22:42	0:0	4	NULL
arg	22:48	22:49	3	0
water	22:48	0:0	4	0
arg	22:51	22:60	3	ctx->priv
water	22:51	0:0	4	ctx
op	22:54	0:0	4	->
water	22:56	0:0	4	priv
water	22:61	0:0	2	;
if	23:4	29:4	2	(ret < 0)
cond	23:8	23:14	3	ret < 0
water	23:8	0:0	4	ret
op	23:12	0:0	4	<
water	23:14	0:0	4	0
stmts	23:17	29:4	3	
water	23:17	0:0	4	{
call	24:8	26:23	4	av_log
arg	24:15	24:24	5	ctx->priv
water	24:15	0:0	6	ctx
op	24:18	0:0	6	->
water	24:20	0:0	6	priv
arg	24:26	24:38	5	AV_LOG_ERROR
water	24:26	0:0	6	AV_LOG_ERROR
arg	25:15	25:71	5	"Error when evaluating the expression '%s' for enable\n"
water	25:15	0:0	6	"Error when evaluating the expression '%s' for enable\n"
arg	26:15	26:23	5	expr_dup
water	26:15	0:0	6	expr_dup
water	26:24	0:0	4	;
call	27:8	27:24	4	av_free
arg	27:16	27:24	5	expr_dup
water	27:16	0:0	6	expr_dup
water	27:25	0:0	4	;
return	28:8	28:18	4	ret
water	28:15	0:0	5	ret
water	29:4	0:0	4	}
call	30:4	30:20	2	av_expr_free
arg	30:17	30:20	3	old
water	30:17	0:0	4	old
water	30:21	0:0	2	;
call	31:4	31:27	2	av_free
arg	31:12	31:27	3	ctx->enable_str
water	31:12	0:0	4	ctx
op	31:15	0:0	4	->
water	31:17	0:0	4	enable_str
water	31:28	0:0	2	;
water	32:4	0:0	2	ctx
op	32:7	0:0	2	->
water	32:9	0:0	2	enable_str
op	32:20	0:0	2	=
water	32:22	0:0	2	expr_dup
water	32:30	0:0	2	;
return	33:4	33:12	2	0
water	33:11	0:0	3	0

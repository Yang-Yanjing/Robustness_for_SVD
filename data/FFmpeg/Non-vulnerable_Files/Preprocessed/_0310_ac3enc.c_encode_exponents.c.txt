func	1:0	38:0	0	static void	encode_exponents
params	1:28	0:0	1	
param	1:29	1:48	2	AC3EncodeContext *	s
stmnts	0:0	37:22	1	
decl	3:4	3:26	2	int	blk
water	3:11	0:0	2	,
decl	3:4	3:26	2	int	blk1
water	3:17	0:0	2	,
decl	3:4	3:26	2	int	ch
water	3:21	0:0	2	,
decl	3:4	3:26	2	int	cpl
decl	4:4	4:31	2	uint8_t	*exp
water	4:16	0:0	2	,
decl	4:4	4:31	2	uint8_t	*exp_strategy
decl	5:4	5:34	2	int	nb_coefs
water	5:16	0:0	2	,
decl	5:4	5:34	2	int	num_reuse_blocks
for	6:4	35:4	2	(ch = ! s -> cpl_on ;ch <= s -> channels;ch ++)
forinit	6:9	6:24	3	ch = ! s -> cpl_on ;
water	6:9	0:0	4	ch
op	6:12	0:0	4	=
op	6:14	0:0	4	!
water	6:15	0:0	4	s
op	6:16	0:0	4	->
water	6:18	0:0	4	cpl_on
water	6:24	0:0	4	;
cond	6:26	6:35	3	ch <= s -> channels
water	6:26	0:0	4	ch
op	6:29	0:0	4	<=
water	6:32	0:0	4	s
op	6:33	0:0	4	->
water	6:35	0:0	4	channels
forexpr	6:45	6:47	3	ch ++
water	6:45	0:0	4	ch
op	6:47	0:0	4	++
stmts	6:51	35:4	3	
water	6:51	0:0	4	{
water	7:8	0:0	4	exp
op	7:21	0:0	4	=
water	7:23	0:0	4	s
op	7:24	0:0	4	->
water	7:26	0:0	4	blocks
op	7:32	0:0	4	[
water	7:33	0:0	4	0
op	7:34	0:0	4	]
op	7:35	0:0	4	.
water	7:36	0:0	4	exp
op	7:39	0:0	4	[
water	7:40	0:0	4	ch
op	7:42	0:0	4	]
op	7:44	0:0	4	+
water	7:46	0:0	4	s
op	7:47	0:0	4	->
water	7:49	0:0	4	start_freq
op	7:59	0:0	4	[
water	7:60	0:0	4	ch
op	7:62	0:0	4	]
water	7:63	0:0	4	;
water	8:8	0:0	4	exp_strategy
op	8:21	0:0	4	=
water	8:23	0:0	4	s
op	8:24	0:0	4	->
water	8:26	0:0	4	exp_strategy
op	8:38	0:0	4	[
water	8:39	0:0	4	ch
op	8:41	0:0	4	]
water	8:42	0:0	4	;
water	9:8	0:0	4	cpl
op	9:12	0:0	4	=
water	9:14	0:0	4	(
water	9:15	0:0	4	ch
op	9:18	0:0	4	==
water	9:21	0:0	4	CPL_CH
water	9:27	0:0	4	)
water	9:28	0:0	4	;
water	10:8	0:0	4	blk
op	10:12	0:0	4	=
water	10:14	0:0	4	0
water	10:15	0:0	4	;
while	11:8	34:8	4	(blk < s -> num_blocks)
cond	11:15	11:24	5	blk < s -> num_blocks
water	11:15	0:0	6	blk
op	11:19	0:0	6	<
water	11:21	0:0	6	s
op	11:22	0:0	6	->
water	11:24	0:0	6	num_blocks
stmts	11:36	34:8	5	
water	11:36	0:0	6	{
decl	12:12	12:45	6	AC3Block	*block
op	12:28	0:0	6	=
op	12:30	0:0	6	&
water	12:31	0:0	6	s
op	12:32	0:0	6	->
water	12:34	0:0	6	blocks
op	12:40	0:0	6	[
water	12:41	0:0	6	blk
op	12:44	0:0	6	]
if	13:12	17:12	6	(cpl && ! block -> cpl_in_use)
cond	13:16	13:31	7	cpl && ! block -> cpl_in_use
water	13:16	0:0	8	cpl
op	13:20	0:0	8	&&
op	13:23	0:0	8	!
water	13:24	0:0	8	block
op	13:29	0:0	8	->
water	13:31	0:0	8	cpl_in_use
stmts	13:43	17:12	7	
water	13:43	0:0	8	{
water	14:16	0:0	8	exp
op	14:20	0:0	8	+=
water	14:23	0:0	8	AC3_MAX_COEFS
water	14:36	0:0	8	;
water	15:16	0:0	8	blk
op	15:19	0:0	8	++
water	15:21	0:0	8	;
continue	16:16	16:24	8	
water	17:12	0:0	8	}
water	18:12	0:0	6	nb_coefs
op	18:21	0:0	6	=
water	18:23	0:0	6	block
op	18:28	0:0	6	->
water	18:30	0:0	6	end_freq
op	18:38	0:0	6	[
water	18:39	0:0	6	ch
op	18:41	0:0	6	]
op	18:43	0:0	6	-
water	18:45	0:0	6	s
op	18:46	0:0	6	->
water	18:48	0:0	6	start_freq
op	18:58	0:0	6	[
water	18:59	0:0	6	ch
op	18:61	0:0	6	]
water	18:62	0:0	6	;
water	19:12	0:0	6	blk1
op	19:17	0:0	6	=
water	19:19	0:0	6	blk
op	19:23	0:0	6	+
water	19:25	0:0	6	1
water	19:26	0:0	6	;
water	22:12	0:0	6	s
op	22:13	0:0	6	->
water	22:15	0:0	6	exp_ref_block
op	22:28	0:0	6	[
water	22:29	0:0	6	ch
op	22:31	0:0	6	]
op	22:32	0:0	6	[
water	22:33	0:0	6	blk
op	22:36	0:0	6	]
op	22:38	0:0	6	=
water	22:40	0:0	6	blk
water	22:43	0:0	6	;
while	23:12	26:12	6	(blk1 < s -> num_blocks && exp_strategy [ blk1 ] == EXP_REUSE)
cond	23:19	23:65	7	blk1 < s -> num_blocks && exp_strategy [ blk1 ] == EXP_REUSE
water	23:19	0:0	8	blk1
op	23:24	0:0	8	<
water	23:26	0:0	8	s
op	23:27	0:0	8	->
water	23:29	0:0	8	num_blocks
op	23:40	0:0	8	&&
water	23:43	0:0	8	exp_strategy
op	23:55	0:0	8	[
water	23:56	0:0	8	blk1
op	23:60	0:0	8	]
op	23:62	0:0	8	==
water	23:65	0:0	8	EXP_REUSE
stmts	23:76	26:12	7	
water	23:76	0:0	8	{
water	24:16	0:0	8	s
op	24:17	0:0	8	->
water	24:19	0:0	8	exp_ref_block
op	24:32	0:0	8	[
water	24:33	0:0	8	ch
op	24:35	0:0	8	]
op	24:36	0:0	8	[
water	24:37	0:0	8	blk1
op	24:41	0:0	8	]
op	24:43	0:0	8	=
water	24:45	0:0	8	blk
water	24:48	0:0	8	;
water	25:16	0:0	8	blk1
op	25:20	0:0	8	++
water	25:22	0:0	8	;
water	26:12	0:0	8	}
water	27:12	0:0	6	num_reuse_blocks
op	27:29	0:0	6	=
water	27:31	0:0	6	blk1
op	27:36	0:0	6	-
water	27:38	0:0	6	blk
op	27:42	0:0	6	-
water	27:44	0:0	6	1
water	27:45	0:0	6	;
call	29:12	30:52	6	s->ac3dsp.ac3_exponent_min
arg	29:39	29:60	7	exp-s->start_freq[ch]
water	29:39	0:0	8	exp
op	29:42	0:0	8	-
water	29:43	0:0	8	s
op	29:44	0:0	8	->
water	29:46	0:0	8	start_freq
op	29:56	0:0	8	[
water	29:57	0:0	8	ch
op	29:59	0:0	8	]
arg	29:62	29:78	7	num_reuse_blocks
water	29:62	0:0	8	num_reuse_blocks
arg	30:39	30:52	7	AC3_MAX_COEFS
water	30:39	0:0	8	AC3_MAX_COEFS
water	30:53	0:0	6	;
call	31:12	31:73	6	encode_exponents_blk_ch
arg	31:36	31:39	7	exp
water	31:36	0:0	8	exp
arg	31:41	31:49	7	nb_coefs
water	31:41	0:0	8	nb_coefs
arg	31:51	31:68	7	exp_strategy[blk]
water	31:51	0:0	8	exp_strategy
op	31:63	0:0	8	[
water	31:64	0:0	8	blk
op	31:67	0:0	8	]
arg	31:70	31:73	7	cpl
water	31:70	0:0	8	cpl
water	31:74	0:0	6	;
water	32:12	0:0	6	exp
op	32:16	0:0	6	+=
water	32:19	0:0	6	AC3_MAX_COEFS
op	32:33	0:0	6	*
water	32:35	0:0	6	(
water	32:36	0:0	6	num_reuse_blocks
op	32:53	0:0	6	+
water	32:55	0:0	6	1
water	32:56	0:0	6	)
water	32:57	0:0	6	;
water	33:12	0:0	6	blk
op	33:16	0:0	6	=
water	33:18	0:0	6	blk1
water	33:22	0:0	6	;
water	34:8	0:0	6	}
water	35:4	0:0	4	}
water	37:4	0:0	2	s
op	37:5	0:0	2	->
water	37:7	0:0	2	ref_bap_set
op	37:19	0:0	2	=
water	37:21	0:0	2	0
water	37:22	0:0	2	;

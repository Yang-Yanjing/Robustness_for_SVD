func	1:0	17:0	0	static int	asf_read_seek
params	1:24	0:0	1	
param	1:25	1:43	2	AVFormatContext *	s
param	1:45	1:61	2	int	stream_index
param	2:25	2:42	2	int64_t	timestamp
param	2:44	2:53	2	int	flags
stmnts	0:0	16:12	1	
decl	4:4	4:34	2	ASFContext	*asf
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	priv_data
decl	5:4	5:16	2	int	idx
water	5:11	0:0	2	,
decl	5:4	5:16	2	int	ret
if	6:4	11:4	2	(s -> streams [ stream_index ] -> nb_index_entries && asf -> is_simple_index)
cond	6:8	6:59	3	s -> streams [ stream_index ] -> nb_index_entries && asf -> is_simple_index
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	streams
op	6:18	0:0	4	[
water	6:19	0:0	4	stream_index
op	6:31	0:0	4	]
op	6:32	0:0	4	->
water	6:34	0:0	4	nb_index_entries
op	6:51	0:0	4	&&
water	6:54	0:0	4	asf
op	6:57	0:0	4	->
water	6:59	0:0	4	is_simple_index
stmts	6:76	11:4	3	
water	6:76	0:0	4	{
water	7:8	0:0	4	idx
op	7:12	0:0	4	=
call	7:14	7:82	4	av_index_search_timestamp
arg	7:40	7:64	5	s->streams[stream_index]
water	7:40	0:0	6	s
op	7:41	0:0	6	->
water	7:43	0:0	6	streams
op	7:50	0:0	6	[
water	7:51	0:0	6	stream_index
op	7:63	0:0	6	]
arg	7:66	7:75	5	timestamp
water	7:66	0:0	6	timestamp
arg	7:77	7:82	5	flags
water	7:77	0:0	6	flags
water	7:83	0:0	4	;
if	8:8	9:38	4	(idx < 0 || idx >= s -> streams [ stream_index ] -> nb_index_entries)
cond	8:12	8:56	5	idx < 0 || idx >= s -> streams [ stream_index ] -> nb_index_entries
water	8:12	0:0	6	idx
op	8:16	0:0	6	<
water	8:18	0:0	6	0
op	8:20	0:0	6	||
water	8:23	0:0	6	idx
op	8:27	0:0	6	>=
water	8:30	0:0	6	s
op	8:31	0:0	6	->
water	8:33	0:0	6	streams
op	8:40	0:0	6	[
water	8:41	0:0	6	stream_index
op	8:53	0:0	6	]
op	8:54	0:0	6	->
water	8:56	0:0	6	nb_index_entries
stmts	9:12	9:38	5	
return	9:12	9:38	6	AVERROR_INVALIDDATA
water	9:19	0:0	7	AVERROR_INVALIDDATA
call	10:8	10:83	4	avio_seek
arg	10:18	10:23	5	s->pb
water	10:18	0:0	6	s
op	10:19	0:0	6	->
water	10:21	0:0	6	pb
arg	10:25	10:73	5	s->streams[stream_index]->index_entries[idx].pos
water	10:25	0:0	6	s
op	10:26	0:0	6	->
water	10:28	0:0	6	streams
op	10:35	0:0	6	[
water	10:36	0:0	6	stream_index
op	10:48	0:0	6	]
op	10:49	0:0	6	->
water	10:51	0:0	6	index_entries
op	10:64	0:0	6	[
water	10:65	0:0	6	idx
op	10:68	0:0	6	]
op	10:69	0:0	6	.
water	10:70	0:0	6	pos
arg	10:75	10:83	5	SEEK_SET
water	10:75	0:0	6	SEEK_SET
water	10:84	0:0	4	;
water	11:4	0:0	4	}
else	11:6	14:4	2
stmts	11:11	14:4	3	
water	11:11	0:0	4	{
if	12:8	13:22	4	(( ret =ff_seek_frame_binary (s ,stream_index ,timestamp ,flags ) ) < 0)
cond	12:12	12:78	5	( ret =ff_seek_frame_binary (s ,stream_index ,timestamp ,flags ) ) < 0
water	12:12	0:0	6	(
water	12:13	0:0	6	ret
op	12:17	0:0	6	=
call	12:19	12:73	6	ff_seek_frame_binary
arg	12:40	12:41	7	s
water	12:40	0:0	8	s
arg	12:43	12:55	7	stream_index
water	12:43	0:0	8	stream_index
arg	12:57	12:66	7	timestamp
water	12:57	0:0	8	timestamp
arg	12:68	12:73	7	flags
water	12:68	0:0	8	flags
water	12:74	0:0	6	)
op	12:76	0:0	6	<
water	12:78	0:0	6	0
stmts	13:12	13:22	5	
return	13:12	13:22	6	ret
water	13:19	0:0	7	ret
water	14:4	0:0	4	}
call	15:4	15:24	2	reset_packet_state
arg	15:23	15:24	3	s
water	15:23	0:0	4	s
water	15:25	0:0	2	;
return	16:4	16:12	2	0
water	16:11	0:0	3	0

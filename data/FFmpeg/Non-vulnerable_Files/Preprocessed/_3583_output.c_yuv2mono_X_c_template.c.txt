func	1:24	48:0	0	void	yuv2mono_X_c_template
params	2:21	0:0	1	
param	2:22	2:35	2	SwsContext *	c
param	2:37	2:61	2	const int16_t *	lumFilter
param	3:22	3:44	2	const int16_t * *	lumSrc
param	3:46	3:63	2	int	lumFilterSize
param	4:22	4:46	2	const int16_t *	chrFilter
param	4:48	4:71	2	const int16_t * *	chrUSrc
param	5:22	5:45	2	const int16_t * *	chrVSrc
param	5:47	5:64	2	int	chrFilterSize
param	6:22	6:44	2	const int16_t * *	alpSrc
param	6:46	6:59	2	uint8_t *	dest
param	6:61	6:69	2	int	dstW
param	7:22	7:27	2	int	y
param	7:29	7:54	2	enum AVPixelFormat	target
stmnts	9:4	47:4	1	
water	9:4	0:0	2	const
water	9:10	0:0	2	uint8_t
op	9:18	0:0	2	*
water	9:20	0:0	2	const
water	9:26	0:0	2	d128
op	9:31	0:0	2	=
water	9:33	0:0	2	ff_dither_8x8_220
op	9:50	0:0	2	[
water	9:51	0:0	2	y
op	9:52	0:0	2	&
water	9:53	0:0	2	7
op	9:54	0:0	2	]
water	9:55	0:0	2	;
decl	10:4	10:9	2	int	i
water	11:4	0:0	2	unsigned
water	11:13	0:0	2	acc
op	11:17	0:0	2	=
water	11:19	0:0	2	0
water	11:20	0:0	2	;
decl	12:4	12:15	2	int	err
op	12:12	0:0	2	=
water	12:14	0:0	2	0
for	13:4	43:4	2	(i = 0 ;i < dstW;i += 2)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	i < dstW
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	dstW
forexpr	13:26	13:31	3	i += 2
water	13:26	0:0	4	i
op	13:28	0:0	4	+=
water	13:31	0:0	4	2
stmts	13:34	43:4	3	
water	13:34	0:0	4	{
decl	14:8	14:13	4	int	j
decl	15:8	15:24	4	int	Y1
op	15:15	0:0	4	=
water	15:17	0:0	4	1
op	15:19	0:0	4	<<
water	15:22	0:0	4	18
decl	16:8	16:24	4	int	Y2
op	16:15	0:0	4	=
water	16:17	0:0	4	1
op	16:19	0:0	4	<<
water	16:22	0:0	4	18
for	17:8	20:8	4	(j = 0 ;j < lumFilterSize;j ++)
forinit	17:13	17:18	5	j = 0 ;
water	17:13	0:0	6	j
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:24	5	j < lumFilterSize
water	17:20	0:0	6	j
op	17:22	0:0	6	<
water	17:24	0:0	6	lumFilterSize
forexpr	17:39	17:40	5	j ++
water	17:39	0:0	6	j
op	17:40	0:0	6	++
stmts	17:44	20:8	5	
water	17:44	0:0	6	{
water	18:12	0:0	6	Y1
op	18:15	0:0	6	+=
water	18:18	0:0	6	lumSrc
op	18:24	0:0	6	[
water	18:25	0:0	6	j
op	18:26	0:0	6	]
op	18:27	0:0	6	[
water	18:28	0:0	6	i
op	18:29	0:0	6	]
op	18:33	0:0	6	*
water	18:35	0:0	6	lumFilter
op	18:44	0:0	6	[
water	18:45	0:0	6	j
op	18:46	0:0	6	]
water	18:47	0:0	6	;
water	19:12	0:0	6	Y2
op	19:15	0:0	6	+=
water	19:18	0:0	6	lumSrc
op	19:24	0:0	6	[
water	19:25	0:0	6	j
op	19:26	0:0	6	]
op	19:27	0:0	6	[
water	19:28	0:0	6	i
op	19:29	0:0	6	+
water	19:30	0:0	6	1
op	19:31	0:0	6	]
op	19:33	0:0	6	*
water	19:35	0:0	6	lumFilter
op	19:44	0:0	6	[
water	19:45	0:0	6	j
op	19:46	0:0	6	]
water	19:47	0:0	6	;
water	20:8	0:0	6	}
water	21:8	0:0	4	Y1
op	21:11	0:0	4	>>=
water	21:15	0:0	4	19
water	21:17	0:0	4	;
water	22:8	0:0	4	Y2
op	22:11	0:0	4	>>=
water	22:15	0:0	4	19
water	22:17	0:0	4	;
if	23:8	26:8	4	(( Y1 | Y2 ) & 0 x100)
cond	23:12	23:25	5	( Y1 | Y2 ) & 0 x100
water	23:12	0:0	6	(
water	23:13	0:0	6	Y1
op	23:16	0:0	6	|
water	23:18	0:0	6	Y2
water	23:20	0:0	6	)
op	23:22	0:0	6	&
water	23:24	0:0	6	0
water	23:25	0:0	6	x100
stmts	23:31	26:8	5	
water	23:31	0:0	6	{
water	24:12	0:0	6	Y1
op	24:15	0:0	6	=
call	24:17	24:33	6	av_clip_uint8
arg	24:31	24:33	7	Y1
water	24:31	0:0	8	Y1
water	24:34	0:0	6	;
water	25:12	0:0	6	Y2
op	25:15	0:0	6	=
call	25:17	25:33	6	av_clip_uint8
arg	25:31	25:33	7	Y2
water	25:31	0:0	8	Y2
water	25:34	0:0	6	;
water	26:8	0:0	6	}
if	27:8	36:8	4	(c -> dither == SWS_DITHER_ED)
cond	27:12	27:25	5	c -> dither == SWS_DITHER_ED
water	27:12	0:0	6	c
op	27:13	0:0	6	->
water	27:15	0:0	6	dither
op	27:22	0:0	6	==
water	27:25	0:0	6	SWS_DITHER_ED
stmts	27:40	36:8	5	
water	27:40	0:0	6	{
water	28:12	0:0	6	Y1
op	28:15	0:0	6	+=
water	28:18	0:0	6	(
water	28:19	0:0	6	7
op	28:20	0:0	6	*
water	28:21	0:0	6	err
op	28:25	0:0	6	+
water	28:27	0:0	6	1
op	28:28	0:0	6	*
water	28:29	0:0	6	c
op	28:30	0:0	6	->
water	28:32	0:0	6	dither_error
op	28:44	0:0	6	[
water	28:45	0:0	6	0
op	28:46	0:0	6	]
op	28:47	0:0	6	[
water	28:48	0:0	6	i
op	28:49	0:0	6	]
op	28:51	0:0	6	+
water	28:53	0:0	6	5
op	28:54	0:0	6	*
water	28:55	0:0	6	c
op	28:56	0:0	6	->
water	28:58	0:0	6	dither_error
op	28:70	0:0	6	[
water	28:71	0:0	6	0
op	28:72	0:0	6	]
op	28:73	0:0	6	[
water	28:74	0:0	6	i
op	28:75	0:0	6	+
water	28:76	0:0	6	1
op	28:77	0:0	6	]
op	28:79	0:0	6	+
water	28:81	0:0	6	3
op	28:82	0:0	6	*
water	28:83	0:0	6	c
op	28:84	0:0	6	->
water	28:86	0:0	6	dither_error
op	28:98	0:0	6	[
water	28:99	0:0	6	0
op	28:100	0:0	6	]
op	28:101	0:0	6	[
water	28:102	0:0	6	i
op	28:103	0:0	6	+
water	28:104	0:0	6	2
op	28:105	0:0	6	]
op	28:107	0:0	6	+
water	28:109	0:0	6	8
op	28:111	0:0	6	-
water	28:113	0:0	6	256
water	28:116	0:0	6	)
op	28:117	0:0	6	>>
water	28:119	0:0	6	4
water	28:120	0:0	6	;
water	29:12	0:0	6	c
op	29:13	0:0	6	->
water	29:15	0:0	6	dither_error
op	29:27	0:0	6	[
water	29:28	0:0	6	0
op	29:29	0:0	6	]
op	29:30	0:0	6	[
water	29:31	0:0	6	i
op	29:32	0:0	6	]
op	29:34	0:0	6	=
water	29:36	0:0	6	err
water	29:39	0:0	6	;
water	30:12	0:0	6	acc
op	30:16	0:0	6	=
water	30:18	0:0	6	2
op	30:19	0:0	6	*
water	30:20	0:0	6	acc
op	30:24	0:0	6	+
water	30:26	0:0	6	(
water	30:27	0:0	6	Y1
op	30:30	0:0	6	>=
water	30:33	0:0	6	128
water	30:36	0:0	6	)
water	30:37	0:0	6	;
water	31:12	0:0	6	Y1
op	31:15	0:0	6	-=
water	31:18	0:0	6	220
op	31:21	0:0	6	*
water	31:22	0:0	6	(
water	31:23	0:0	6	acc
op	31:26	0:0	6	&
water	31:27	0:0	6	1
water	31:28	0:0	6	)
water	31:29	0:0	6	;
water	32:12	0:0	6	err
op	32:16	0:0	6	=
water	32:18	0:0	6	Y2
op	32:21	0:0	6	+
water	32:23	0:0	6	(
water	32:24	0:0	6	(
water	32:25	0:0	6	7
op	32:26	0:0	6	*
water	32:27	0:0	6	Y1
op	32:30	0:0	6	+
water	32:32	0:0	6	1
op	32:33	0:0	6	*
water	32:34	0:0	6	c
op	32:35	0:0	6	->
water	32:37	0:0	6	dither_error
op	32:49	0:0	6	[
water	32:50	0:0	6	0
op	32:51	0:0	6	]
op	32:52	0:0	6	[
water	32:53	0:0	6	i
op	32:54	0:0	6	+
water	32:55	0:0	6	1
op	32:56	0:0	6	]
op	32:58	0:0	6	+
water	32:60	0:0	6	5
op	32:61	0:0	6	*
water	32:62	0:0	6	c
op	32:63	0:0	6	->
water	32:65	0:0	6	dither_error
op	32:77	0:0	6	[
water	32:78	0:0	6	0
op	32:79	0:0	6	]
op	32:80	0:0	6	[
water	32:81	0:0	6	i
op	32:82	0:0	6	+
water	32:83	0:0	6	2
op	32:84	0:0	6	]
op	32:86	0:0	6	+
water	32:88	0:0	6	3
op	32:89	0:0	6	*
water	32:90	0:0	6	c
op	32:91	0:0	6	->
water	32:93	0:0	6	dither_error
op	32:105	0:0	6	[
water	32:106	0:0	6	0
op	32:107	0:0	6	]
op	32:108	0:0	6	[
water	32:109	0:0	6	i
op	32:110	0:0	6	+
water	32:111	0:0	6	3
op	32:112	0:0	6	]
op	32:114	0:0	6	+
water	32:116	0:0	6	8
op	32:118	0:0	6	-
water	32:120	0:0	6	256
water	32:123	0:0	6	)
op	32:124	0:0	6	>>
water	32:126	0:0	6	4
water	32:127	0:0	6	)
water	32:128	0:0	6	;
water	33:12	0:0	6	c
op	33:13	0:0	6	->
water	33:15	0:0	6	dither_error
op	33:27	0:0	6	[
water	33:28	0:0	6	0
op	33:29	0:0	6	]
op	33:30	0:0	6	[
water	33:31	0:0	6	i
op	33:32	0:0	6	+
water	33:33	0:0	6	1
op	33:34	0:0	6	]
op	33:36	0:0	6	=
water	33:38	0:0	6	Y1
water	33:40	0:0	6	;
water	34:12	0:0	6	acc
op	34:16	0:0	6	=
water	34:18	0:0	6	2
op	34:19	0:0	6	*
water	34:20	0:0	6	acc
op	34:24	0:0	6	+
water	34:26	0:0	6	(
water	34:27	0:0	6	err
op	34:31	0:0	6	>=
water	34:34	0:0	6	128
water	34:37	0:0	6	)
water	34:38	0:0	6	;
water	35:12	0:0	6	err
op	35:16	0:0	6	-=
water	35:19	0:0	6	220
op	35:22	0:0	6	*
water	35:23	0:0	6	(
water	35:24	0:0	6	acc
op	35:27	0:0	6	&
water	35:28	0:0	6	1
water	35:29	0:0	6	)
water	35:30	0:0	6	;
water	36:8	0:0	6	}
else	36:10	39:8	4
stmts	36:15	39:8	5	
water	36:15	0:0	6	{
call	37:12	37:54	6	accumulate_bit
arg	37:27	37:30	7	acc
water	37:27	0:0	8	acc
arg	37:32	37:54	7	Y1+d128[(i+0)&7]
water	37:32	0:0	8	Y1
op	37:35	0:0	8	+
water	37:37	0:0	8	d128
op	37:41	0:0	8	[
water	37:42	0:0	8	(
water	37:43	0:0	8	i
op	37:45	0:0	8	+
water	37:47	0:0	8	0
water	37:48	0:0	8	)
op	37:50	0:0	8	&
water	37:52	0:0	8	7
op	37:53	0:0	8	]
water	37:55	0:0	6	;
call	38:12	38:54	6	accumulate_bit
arg	38:27	38:30	7	acc
water	38:27	0:0	8	acc
arg	38:32	38:54	7	Y2+d128[(i+1)&7]
water	38:32	0:0	8	Y2
op	38:35	0:0	8	+
water	38:37	0:0	8	d128
op	38:41	0:0	8	[
water	38:42	0:0	8	(
water	38:43	0:0	8	i
op	38:45	0:0	8	+
water	38:47	0:0	8	1
water	38:48	0:0	8	)
op	38:50	0:0	8	&
water	38:52	0:0	8	7
op	38:53	0:0	8	]
water	38:55	0:0	6	;
water	39:8	0:0	6	}
if	40:8	42:8	4	(( i & 7 ) == 6)
cond	40:12	40:23	5	( i & 7 ) == 6
water	40:12	0:0	6	(
water	40:13	0:0	6	i
op	40:15	0:0	6	&
water	40:17	0:0	6	7
water	40:18	0:0	6	)
op	40:20	0:0	6	==
water	40:23	0:0	6	6
stmts	40:26	42:8	5	
water	40:26	0:0	6	{
call	41:12	41:37	6	output_pixel
arg	41:25	41:32	7	*dest++
op	41:25	0:0	8	*
water	41:26	0:0	8	dest
op	41:30	0:0	8	++
arg	41:34	41:37	7	acc
water	41:34	0:0	8	acc
water	41:38	0:0	6	;
water	42:8	0:0	6	}
water	43:4	0:0	4	}
water	44:4	0:0	2	c
op	44:5	0:0	2	->
water	44:7	0:0	2	dither_error
op	44:19	0:0	2	[
water	44:20	0:0	2	0
op	44:21	0:0	2	]
op	44:22	0:0	2	[
water	44:23	0:0	2	i
op	44:24	0:0	2	]
op	44:26	0:0	2	=
water	44:28	0:0	2	err
water	44:31	0:0	2	;
if	45:4	47:4	2	(i & 6)
cond	45:8	45:12	3	i & 6
water	45:8	0:0	4	i
op	45:10	0:0	4	&
water	45:12	0:0	4	6
stmts	45:15	47:4	3	
water	45:15	0:0	4	{
call	46:8	46:31	4	output_pixel
arg	46:21	46:26	5	*dest
op	46:21	0:0	6	*
water	46:22	0:0	6	dest
arg	46:28	46:31	5	acc
water	46:28	0:0	6	acc
water	46:32	0:0	4	;
water	47:4	0:0	4	}

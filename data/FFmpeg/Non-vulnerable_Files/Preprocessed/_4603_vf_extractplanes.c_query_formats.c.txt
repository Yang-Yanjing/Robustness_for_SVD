func	2:0	68:0	0	static int	query_formats
params	2:24	0:0	1	
param	2:25	2:45	2	AVFilterContext *	ctx
stmnts	4:4	67:12	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	enum
water	4:22	0:0	2	AVPixelFormat
water	4:36	0:0	2	in_pixfmts
op	4:46	0:0	2	[
op	4:47	0:0	2	]
op	4:49	0:0	2	=
water	4:51	0:0	2	{
water	5:8	0:0	2	AV_PIX_FMT_YUV410P
water	5:26	0:0	2	,
water	6:8	0:0	2	AV_PIX_FMT_YUV411P
water	6:26	0:0	2	,
water	7:8	0:0	2	AV_PIX_FMT_YUV440P
water	7:26	0:0	2	,
water	8:8	0:0	2	AV_PIX_FMT_YUV420P
water	8:26	0:0	2	,
water	8:28	0:0	2	AV_PIX_FMT_YUVA420P
water	8:47	0:0	2	,
water	9:8	0:0	2	AV_PIX_FMT_YUV422P
water	9:26	0:0	2	,
water	9:28	0:0	2	AV_PIX_FMT_YUVA422P
water	9:47	0:0	2	,
water	10:8	0:0	2	AV_PIX_FMT_YUVJ420P
water	10:27	0:0	2	,
water	10:29	0:0	2	AV_PIX_FMT_YUVJ422P
water	10:48	0:0	2	,
water	11:8	0:0	2	AV_PIX_FMT_YUVJ440P
water	11:27	0:0	2	,
water	11:29	0:0	2	AV_PIX_FMT_YUVJ444P
water	11:48	0:0	2	,
water	12:8	0:0	2	AV_PIX_FMT_YUVJ411P
water	12:27	0:0	2	,
water	13:8	0:0	2	AV_PIX_FMT_YUV444P
water	13:26	0:0	2	,
water	13:28	0:0	2	AV_PIX_FMT_YUVA444P
water	13:47	0:0	2	,
water	14:8	0:0	2	AV_PIX_FMT_YUV420P16LE
water	14:30	0:0	2	,
water	14:32	0:0	2	AV_PIX_FMT_YUVA420P16LE
water	14:55	0:0	2	,
water	15:8	0:0	2	AV_PIX_FMT_YUV420P16BE
water	15:30	0:0	2	,
water	15:32	0:0	2	AV_PIX_FMT_YUVA420P16BE
water	15:55	0:0	2	,
water	16:8	0:0	2	AV_PIX_FMT_YUV422P16LE
water	16:30	0:0	2	,
water	16:32	0:0	2	AV_PIX_FMT_YUVA422P16LE
water	16:55	0:0	2	,
water	17:8	0:0	2	AV_PIX_FMT_YUV422P16BE
water	17:30	0:0	2	,
water	17:32	0:0	2	AV_PIX_FMT_YUVA422P16BE
water	17:55	0:0	2	,
water	18:8	0:0	2	AV_PIX_FMT_YUV444P16LE
water	18:30	0:0	2	,
water	18:32	0:0	2	AV_PIX_FMT_YUVA444P16LE
water	18:55	0:0	2	,
water	19:8	0:0	2	AV_PIX_FMT_YUV444P16BE
water	19:30	0:0	2	,
water	19:32	0:0	2	AV_PIX_FMT_YUVA444P16BE
water	19:55	0:0	2	,
water	20:8	0:0	2	AV_PIX_FMT_GRAY8
water	20:24	0:0	2	,
water	20:26	0:0	2	AV_PIX_FMT_GRAY8A
water	20:43	0:0	2	,
water	21:8	0:0	2	AV_PIX_FMT_YA16LE
water	21:25	0:0	2	,
water	21:27	0:0	2	AV_PIX_FMT_YA16BE
water	21:44	0:0	2	,
water	22:8	0:0	2	AV_PIX_FMT_GRAY16LE
water	22:27	0:0	2	,
water	22:29	0:0	2	AV_PIX_FMT_GRAY16BE
water	22:48	0:0	2	,
water	23:8	0:0	2	AV_PIX_FMT_RGB24
water	23:24	0:0	2	,
water	23:26	0:0	2	AV_PIX_FMT_BGR24
water	23:42	0:0	2	,
water	24:8	0:0	2	AV_PIX_FMT_RGBA
water	24:23	0:0	2	,
water	24:25	0:0	2	AV_PIX_FMT_BGRA
water	24:40	0:0	2	,
water	25:8	0:0	2	AV_PIX_FMT_ARGB
water	25:23	0:0	2	,
water	25:25	0:0	2	AV_PIX_FMT_ABGR
water	25:40	0:0	2	,
water	26:8	0:0	2	AV_PIX_FMT_RGB48LE
water	26:26	0:0	2	,
water	26:28	0:0	2	AV_PIX_FMT_BGR48LE
water	26:46	0:0	2	,
water	27:8	0:0	2	AV_PIX_FMT_RGB48BE
water	27:26	0:0	2	,
water	27:28	0:0	2	AV_PIX_FMT_BGR48BE
water	27:46	0:0	2	,
water	28:8	0:0	2	AV_PIX_FMT_RGBA64LE
water	28:27	0:0	2	,
water	28:29	0:0	2	AV_PIX_FMT_BGRA64LE
water	28:48	0:0	2	,
water	29:8	0:0	2	AV_PIX_FMT_RGBA64BE
water	29:27	0:0	2	,
water	29:29	0:0	2	AV_PIX_FMT_BGRA64BE
water	29:48	0:0	2	,
water	30:8	0:0	2	AV_PIX_FMT_GBRP
water	30:23	0:0	2	,
water	30:25	0:0	2	AV_PIX_FMT_GBRAP
water	30:41	0:0	2	,
water	31:8	0:0	2	AV_PIX_FMT_GBRP16LE
water	31:27	0:0	2	,
water	31:29	0:0	2	AV_PIX_FMT_GBRP16BE
water	31:48	0:0	2	,
water	32:8	0:0	2	AV_PIX_FMT_GBRAP16LE
water	32:28	0:0	2	,
water	32:30	0:0	2	AV_PIX_FMT_GBRAP16BE
water	32:50	0:0	2	,
water	33:8	0:0	2	AV_PIX_FMT_NONE
water	33:23	0:0	2	,
water	34:4	0:0	2	}
water	34:5	0:0	2	;
water	35:4	0:0	2	static
water	35:11	0:0	2	const
water	35:17	0:0	2	enum
water	35:22	0:0	2	AVPixelFormat
water	35:36	0:0	2	out8_pixfmts
op	35:48	0:0	2	[
op	35:49	0:0	2	]
op	35:51	0:0	2	=
water	35:53	0:0	2	{
water	35:55	0:0	2	AV_PIX_FMT_GRAY8
water	35:71	0:0	2	,
water	35:73	0:0	2	AV_PIX_FMT_NONE
water	35:89	0:0	2	}
water	35:90	0:0	2	;
water	36:4	0:0	2	static
water	36:11	0:0	2	const
water	36:17	0:0	2	enum
water	36:22	0:0	2	AVPixelFormat
water	36:36	0:0	2	out16le_pixfmts
op	36:51	0:0	2	[
op	36:52	0:0	2	]
op	36:54	0:0	2	=
water	36:56	0:0	2	{
water	36:58	0:0	2	AV_PIX_FMT_GRAY16LE
water	36:77	0:0	2	,
water	36:79	0:0	2	AV_PIX_FMT_NONE
water	36:95	0:0	2	}
water	36:96	0:0	2	;
water	37:4	0:0	2	static
water	37:11	0:0	2	const
water	37:17	0:0	2	enum
water	37:22	0:0	2	AVPixelFormat
water	37:36	0:0	2	out16be_pixfmts
op	37:51	0:0	2	[
op	37:52	0:0	2	]
op	37:54	0:0	2	=
water	37:56	0:0	2	{
water	37:58	0:0	2	AV_PIX_FMT_GRAY16BE
water	37:77	0:0	2	,
water	37:79	0:0	2	AV_PIX_FMT_NONE
water	37:95	0:0	2	}
water	37:96	0:0	2	;
decl	38:4	38:41	2	const enum AVPixelFormat	*out_pixfmts
decl	39:4	39:34	2	const AVPixFmtDescriptor	*desc
decl	40:4	40:25	2	AVFilterFormats	*avff
decl	41:4	41:28	2	int	i
water	41:9	0:0	2	,
decl	41:4	41:28	2	int	depth
op	41:17	0:0	2	=
water	41:19	0:0	2	0
water	41:20	0:0	2	,
decl	41:4	41:28	2	int	be
op	41:25	0:0	2	=
water	41:27	0:0	2	0
if	42:4	45:4	2	(! ctx -> inputs [ 0 ] -> in_formats || ! ctx -> inputs [ 0 ] -> in_formats -> nb_formats)
cond	42:8	43:37	3	! ctx -> inputs [ 0 ] -> in_formats || ! ctx -> inputs [ 0 ] -> in_formats -> nb_formats
op	42:8	0:0	4	!
water	42:9	0:0	4	ctx
op	42:12	0:0	4	->
water	42:14	0:0	4	inputs
op	42:20	0:0	4	[
water	42:21	0:0	4	0
op	42:22	0:0	4	]
op	42:23	0:0	4	->
water	42:25	0:0	4	in_formats
op	42:36	0:0	4	||
op	43:8	0:0	4	!
water	43:9	0:0	4	ctx
op	43:12	0:0	4	->
water	43:14	0:0	4	inputs
op	43:20	0:0	4	[
water	43:21	0:0	4	0
op	43:22	0:0	4	]
op	43:23	0:0	4	->
water	43:25	0:0	4	in_formats
op	43:35	0:0	4	->
water	43:37	0:0	4	nb_formats
stmts	43:49	45:4	3	
water	43:49	0:0	4	{
return	44:8	44:30	4	AVERROR(EAGAIN)
call	44:15	44:29	5	AVERROR
arg	44:23	44:29	6	EAGAIN
water	44:23	0:0	7	EAGAIN
water	45:4	0:0	4	}
if	46:4	47:85	2	(! ctx -> inputs [ 0 ] -> out_formats)
cond	46:8	46:25	3	! ctx -> inputs [ 0 ] -> out_formats
op	46:8	0:0	4	!
water	46:9	0:0	4	ctx
op	46:12	0:0	4	->
water	46:14	0:0	4	inputs
op	46:20	0:0	4	[
water	46:21	0:0	4	0
op	46:22	0:0	4	]
op	46:23	0:0	4	->
water	46:25	0:0	4	out_formats
stmts	47:8	47:85	3	
call	47:8	47:84	4	ff_formats_ref
arg	47:23	47:54	5	ff_make_format_list(in_pixfmts)
call	47:23	47:53	6	ff_make_format_list
arg	47:43	47:53	7	in_pixfmts
water	47:43	0:0	8	in_pixfmts
arg	47:56	47:84	5	&ctx->inputs[0]->out_formats
op	47:56	0:0	6	&
water	47:57	0:0	6	ctx
op	47:60	0:0	6	->
water	47:62	0:0	6	inputs
op	47:68	0:0	6	[
water	47:69	0:0	6	0
op	47:70	0:0	6	]
op	47:71	0:0	6	->
water	47:73	0:0	6	out_formats
water	47:85	0:0	4	;
water	48:4	0:0	2	avff
op	48:9	0:0	2	=
water	48:11	0:0	2	ctx
op	48:14	0:0	2	->
water	48:16	0:0	2	inputs
op	48:22	0:0	2	[
water	48:23	0:0	2	0
op	48:24	0:0	2	]
op	48:25	0:0	2	->
water	48:27	0:0	2	in_formats
water	48:37	0:0	2	;
water	49:4	0:0	2	desc
op	49:9	0:0	2	=
call	49:11	49:47	2	av_pix_fmt_desc_get
arg	49:31	49:47	3	avff->formats[0]
water	49:31	0:0	4	avff
op	49:35	0:0	4	->
water	49:37	0:0	4	formats
op	49:44	0:0	4	[
water	49:45	0:0	4	0
op	49:46	0:0	4	]
water	49:48	0:0	2	;
water	50:4	0:0	2	depth
op	50:10	0:0	2	=
water	50:12	0:0	2	desc
op	50:16	0:0	2	->
water	50:18	0:0	2	comp
op	50:22	0:0	2	[
water	50:23	0:0	2	0
op	50:24	0:0	2	]
op	50:25	0:0	2	.
water	50:26	0:0	2	depth_minus1
water	50:38	0:0	2	;
water	51:4	0:0	2	be
op	51:7	0:0	2	=
water	51:9	0:0	2	desc
op	51:13	0:0	2	->
water	51:15	0:0	2	flags
op	51:21	0:0	2	&
water	51:23	0:0	2	AV_PIX_FMT_FLAG_BE
water	51:41	0:0	2	;
for	52:4	58:4	2	(i = 1 ;i < avff -> nb_formats;i ++)
forinit	52:9	52:14	3	i = 1 ;
water	52:9	0:0	4	i
op	52:11	0:0	4	=
water	52:13	0:0	4	1
water	52:14	0:0	4	;
cond	52:16	52:26	3	i < avff -> nb_formats
water	52:16	0:0	4	i
op	52:18	0:0	4	<
water	52:20	0:0	4	avff
op	52:24	0:0	4	->
water	52:26	0:0	4	nb_formats
forexpr	52:38	52:39	3	i ++
water	52:38	0:0	4	i
op	52:39	0:0	4	++
stmts	52:43	58:4	3	
water	52:43	0:0	4	{
water	53:8	0:0	4	desc
op	53:13	0:0	4	=
call	53:15	53:51	4	av_pix_fmt_desc_get
arg	53:35	53:51	5	avff->formats[i]
water	53:35	0:0	6	avff
op	53:39	0:0	6	->
water	53:41	0:0	6	formats
op	53:48	0:0	6	[
water	53:49	0:0	6	i
op	53:50	0:0	6	]
water	53:52	0:0	4	;
if	54:8	57:8	4	(depth != desc -> comp [ 0 ] . depth_minus1 || be != ( desc -> flags & AV_PIX_FMT_FLAG_BE ))
cond	54:12	55:54	5	depth != desc -> comp [ 0 ] . depth_minus1 || be != ( desc -> flags & AV_PIX_FMT_FLAG_BE )
water	54:12	0:0	6	depth
op	54:18	0:0	6	!=
water	54:21	0:0	6	desc
op	54:25	0:0	6	->
water	54:27	0:0	6	comp
op	54:31	0:0	6	[
water	54:32	0:0	6	0
op	54:33	0:0	6	]
op	54:34	0:0	6	.
water	54:35	0:0	6	depth_minus1
op	54:48	0:0	6	||
water	55:12	0:0	6	be
op	55:18	0:0	6	!=
water	55:21	0:0	6	(
water	55:22	0:0	6	desc
op	55:26	0:0	6	->
water	55:28	0:0	6	flags
op	55:34	0:0	6	&
water	55:36	0:0	6	AV_PIX_FMT_FLAG_BE
water	55:54	0:0	6	)
stmts	55:57	57:8	5	
water	55:57	0:0	6	{
return	56:12	56:34	6	AVERROR(EAGAIN)
call	56:19	56:33	7	AVERROR
arg	56:27	56:33	8	EAGAIN
water	56:27	0:0	9	EAGAIN
water	57:8	0:0	6	}
water	58:4	0:0	4	}
if	59:4	60:34	2	(depth == 7)
cond	59:8	59:17	3	depth == 7
water	59:8	0:0	4	depth
op	59:14	0:0	4	==
water	59:17	0:0	4	7
stmts	60:8	60:34	3	
water	60:8	0:0	4	out_pixfmts
op	60:20	0:0	4	=
water	60:22	0:0	4	out8_pixfmts
water	60:34	0:0	4	;
else	61:4	62:37	2
stmts	61:9	62:37	3	
if	61:9	62:37	4	(be)
cond	61:13	61:13	5	be
water	61:13	0:0	6	be
stmts	62:8	62:37	5	
water	62:8	0:0	6	out_pixfmts
op	62:20	0:0	6	=
water	62:22	0:0	6	out16be_pixfmts
water	62:37	0:0	6	;
else	63:4	64:37	2
stmts	64:8	64:37	3	
water	64:8	0:0	4	out_pixfmts
op	64:20	0:0	4	=
water	64:22	0:0	4	out16le_pixfmts
water	64:37	0:0	4	;
for	65:4	66:86	2	(i = 0 ;i < ctx -> nb_outputs;i ++)
forinit	65:9	65:14	3	i = 0 ;
water	65:9	0:0	4	i
op	65:11	0:0	4	=
water	65:13	0:0	4	0
water	65:14	0:0	4	;
cond	65:16	65:25	3	i < ctx -> nb_outputs
water	65:16	0:0	4	i
op	65:18	0:0	4	<
water	65:20	0:0	4	ctx
op	65:23	0:0	4	->
water	65:25	0:0	4	nb_outputs
forexpr	65:37	65:38	3	i ++
water	65:37	0:0	4	i
op	65:38	0:0	4	++
stmts	66:8	66:86	3	
call	66:8	66:85	4	ff_formats_ref
arg	66:23	66:55	5	ff_make_format_list(out_pixfmts)
call	66:23	66:54	6	ff_make_format_list
arg	66:43	66:54	7	out_pixfmts
water	66:43	0:0	8	out_pixfmts
arg	66:57	66:85	5	&ctx->outputs[i]->in_formats
op	66:57	0:0	6	&
water	66:58	0:0	6	ctx
op	66:61	0:0	6	->
water	66:63	0:0	6	outputs
op	66:70	0:0	6	[
water	66:71	0:0	6	i
op	66:72	0:0	6	]
op	66:73	0:0	6	->
water	66:75	0:0	6	in_formats
water	66:86	0:0	4	;
return	67:4	67:12	2	0
water	67:11	0:0	3	0

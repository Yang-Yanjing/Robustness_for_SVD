func	1:0	12:0	0	AVInteger	av_shr_i
params	1:18	0:0	1	
param	1:19	1:30	2	AVInteger	a
param	1:32	1:37	2	int	s
stmnts	0:0	11:14	1	
decl	2:4	2:17	2	AVInteger	out
decl	3:4	3:9	2	int	i
for	4:4	10:4	2	(i = 0 ;i < AV_INTEGER_SIZE;i ++)
forinit	4:8	4:11	3	i = 0 ;
water	4:8	0:0	4	i
op	4:9	0:0	4	=
water	4:10	0:0	4	0
water	4:11	0:0	4	;
cond	4:13	4:15	3	i < AV_INTEGER_SIZE
water	4:13	0:0	4	i
op	4:14	0:0	4	<
water	4:15	0:0	4	AV_INTEGER_SIZE
forexpr	4:32	4:33	3	i ++
water	4:32	0:0	4	i
op	4:33	0:0	4	++
stmts	4:36	10:4	3	
water	4:36	0:0	4	{
decl	5:8	5:38	4	unsigned int	index
op	5:26	0:0	4	=
water	5:28	0:0	4	i
op	5:30	0:0	4	+
water	5:32	0:0	4	(
water	5:33	0:0	4	s
op	5:34	0:0	4	>>
water	5:36	0:0	4	4
water	5:37	0:0	4	)
decl	6:8	6:24	4	unsigned int	v
op	6:22	0:0	4	=
water	6:23	0:0	4	0
if	7:8	7:56	4	(index + 1 < AV_INTEGER_SIZE)
cond	7:11	7:19	5	index + 1 < AV_INTEGER_SIZE
water	7:11	0:0	6	index
op	7:16	0:0	6	+
water	7:17	0:0	6	1
op	7:18	0:0	6	<
water	7:19	0:0	6	AV_INTEGER_SIZE
stmts	7:36	7:56	5	
water	7:36	0:0	6	v
op	7:38	0:0	6	=
water	7:40	0:0	6	a
op	7:41	0:0	6	.
water	7:42	0:0	6	v
op	7:43	0:0	6	[
water	7:44	0:0	6	index
op	7:49	0:0	6	+
water	7:50	0:0	6	1
op	7:51	0:0	6	]
op	7:52	0:0	6	<<
water	7:54	0:0	6	16
water	7:56	0:0	6	;
if	8:8	8:52	4	(index < AV_INTEGER_SIZE)
cond	8:11	8:19	5	index < AV_INTEGER_SIZE
water	8:11	0:0	6	index
op	8:18	0:0	6	<
water	8:19	0:0	6	AV_INTEGER_SIZE
stmts	8:36	8:52	5	
water	8:36	0:0	6	v
op	8:37	0:0	6	+=
water	8:40	0:0	6	a
op	8:41	0:0	6	.
water	8:42	0:0	6	v
op	8:43	0:0	6	[
water	8:44	0:0	6	index
op	8:51	0:0	6	]
water	8:52	0:0	6	;
water	9:8	0:0	4	out
op	9:11	0:0	4	.
water	9:12	0:0	4	v
op	9:13	0:0	4	[
water	9:14	0:0	4	i
op	9:15	0:0	4	]
op	9:16	0:0	4	=
water	9:18	0:0	4	v
op	9:20	0:0	4	>>
water	9:23	0:0	4	(
water	9:24	0:0	4	s
op	9:25	0:0	4	&
water	9:26	0:0	4	15
water	9:28	0:0	4	)
water	9:29	0:0	4	;
water	10:4	0:0	4	}
return	11:4	11:14	2	out
water	11:11	0:0	3	out

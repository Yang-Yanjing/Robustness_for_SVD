func	1:19	323:0	0	RENAME	(dering)
params	1:33	0:0	1	
param	1:34	1:47	2	uint8_t	src[]
param	1:49	1:59	2	int	stride
param	1:61	1:73	2	PPContext *	c
stmnts	4:4	320:4	1	
call	4:4	4:36	2	DECLARE_ALIGNED
arg	4:20	4:21	3	8
water	4:20	0:0	4	8
arg	4:23	4:31	3	uint64_t
water	4:23	0:0	4	uint64_t
arg	4:33	4:36	3	tmp
water	4:33	0:0	4	tmp
op	4:37	0:0	2	[
water	4:38	0:0	2	3
op	4:39	0:0	2	]
water	4:40	0:0	2	;
water	5:4	0:0	2	__asm__
water	5:12	0:0	2	volatile
water	5:20	0:0	2	(
water	6:8	0:0	2	"pxor %%mm6, %%mm6                      \n\t"
water	7:8	0:0	2	"pcmpeqb %%mm7, %%mm7                   \n\t"
water	8:8	0:0	2	"movq %2, %%mm0                         \n\t"
water	9:8	0:0	2	"punpcklbw %%mm6, %%mm0                 \n\t"
water	10:8	0:0	2	"psrlw $1, %%mm0                        \n\t"
water	11:8	0:0	2	"psubw %%mm7, %%mm0                     \n\t"
water	12:8	0:0	2	"packuswb %%mm0, %%mm0                  \n\t"
water	13:8	0:0	2	"movq %%mm0, %3                         \n\t"
water	14:8	0:0	2	"lea (%0, %1), %%"
water	14:26	0:0	2	REG_a
water	14:31	0:0	2	"                \n\t"
water	15:8	0:0	2	"lea (%%"
water	15:17	0:0	2	REG_a
water	15:22	0:0	2	", %1, 4), %%"
water	15:36	0:0	2	REG_d
water	15:41	0:0	2	"      \n\t"
water	22:8	0:0	2	"movq "
water	23:8	0:0	2	"pminub %%mm0, %%mm7                    \n\t"
water	24:8	0:0	2	"pmaxub %%mm0, %%mm6                    \n\t"
water	27:8	0:0	2	"movq "
water	28:8	0:0	2	"movq %%mm7, %%mm1                      \n\t"
water	29:8	0:0	2	"psubusb %%mm0, %%mm6                   \n\t"
water	30:8	0:0	2	"paddb %%mm0, %%mm6                     \n\t"
water	31:8	0:0	2	"psubusb %%mm0, %%mm1                   \n\t"
water	32:8	0:0	2	"psubb %%mm1, %%mm7                     \n\t"
call	35:0	35:21	2	FIND_MIN_MAX
arg	35:13	35:21	3	(%%REGa)
water	35:13	0:0	4	(
op	35:14	0:0	4	%
op	35:15	0:0	4	%
water	35:16	0:0	4	REGa
water	35:20	0:0	4	)
call	36:0	36:25	2	FIND_MIN_MAX
arg	36:13	36:25	3	(%%REGa,%1)
water	36:13	0:0	4	(
op	36:14	0:0	4	%
op	36:15	0:0	4	%
water	36:16	0:0	4	REGa
water	36:20	0:0	4	,
op	36:22	0:0	4	%
water	36:23	0:0	4	1
water	36:24	0:0	4	)
call	37:0	37:28	2	FIND_MIN_MAX
arg	37:13	37:28	3	(%%REGa,%1,2)
water	37:13	0:0	4	(
op	37:14	0:0	4	%
op	37:15	0:0	4	%
water	37:16	0:0	4	REGa
water	37:20	0:0	4	,
op	37:22	0:0	4	%
water	37:23	0:0	4	1
water	37:24	0:0	4	,
water	37:26	0:0	4	2
water	37:27	0:0	4	)
call	38:0	38:24	2	FIND_MIN_MAX
arg	38:13	38:24	3	(%0,%1,4)
water	38:13	0:0	4	(
op	38:14	0:0	4	%
water	38:15	0:0	4	0
water	38:16	0:0	4	,
op	38:18	0:0	4	%
water	38:19	0:0	4	1
water	38:20	0:0	4	,
water	38:22	0:0	4	4
water	38:23	0:0	4	)
call	39:0	39:21	2	FIND_MIN_MAX
arg	39:13	39:21	3	(%%REGd)
water	39:13	0:0	4	(
op	39:14	0:0	4	%
op	39:15	0:0	4	%
water	39:16	0:0	4	REGd
water	39:20	0:0	4	)
call	40:0	40:25	2	FIND_MIN_MAX
arg	40:13	40:25	3	(%%REGd,%1)
water	40:13	0:0	4	(
op	40:14	0:0	4	%
op	40:15	0:0	4	%
water	40:16	0:0	4	REGd
water	40:20	0:0	4	,
op	40:22	0:0	4	%
water	40:23	0:0	4	1
water	40:24	0:0	4	)
call	41:0	41:28	2	FIND_MIN_MAX
arg	41:13	41:28	3	(%%REGd,%1,2)
water	41:13	0:0	4	(
op	41:14	0:0	4	%
op	41:15	0:0	4	%
water	41:16	0:0	4	REGd
water	41:20	0:0	4	,
op	41:22	0:0	4	%
water	41:23	0:0	4	1
water	41:24	0:0	4	,
water	41:26	0:0	4	2
water	41:27	0:0	4	)
call	42:0	42:24	2	FIND_MIN_MAX
arg	42:13	42:24	3	(%0,%1,8)
water	42:13	0:0	4	(
op	42:14	0:0	4	%
water	42:15	0:0	4	0
water	42:16	0:0	4	,
op	42:18	0:0	4	%
water	42:19	0:0	4	1
water	42:20	0:0	4	,
water	42:22	0:0	4	8
water	42:23	0:0	4	)
water	43:8	0:0	2	"movq %%mm7, %%mm4                      \n\t"
water	44:8	0:0	2	"psrlq $8, %%mm7                        \n\t"
water	46:8	0:0	2	"pminub %%mm4, %%mm7                    \n\t"
water	47:8	0:0	2	"pshufw $0xF9, %%mm7, %%mm4             \n\t"
water	48:8	0:0	2	"pminub %%mm4, %%mm7                    \n\t"
water	49:8	0:0	2	"pshufw $0xFE, %%mm7, %%mm4             \n\t"
water	50:8	0:0	2	"pminub %%mm4, %%mm7                    \n\t"
water	52:8	0:0	2	"movq %%mm7, %%mm1                      \n\t"
water	53:8	0:0	2	"psubusb %%mm4, %%mm1                   \n\t"
water	54:8	0:0	2	"psubb %%mm1, %%mm7                     \n\t"
water	55:8	0:0	2	"movq %%mm7, %%mm4                      \n\t"
water	56:8	0:0	2	"psrlq $16, %%mm7                       \n\t"
water	57:8	0:0	2	"movq %%mm7, %%mm1                      \n\t"
water	58:8	0:0	2	"psubusb %%mm4, %%mm1                   \n\t"
water	59:8	0:0	2	"psubb %%mm1, %%mm7                     \n\t"
water	60:8	0:0	2	"movq %%mm7, %%mm4                      \n\t"
water	61:8	0:0	2	"psrlq $32, %%mm7                       \n\t"
water	62:8	0:0	2	"movq %%mm7, %%mm1                      \n\t"
water	63:8	0:0	2	"psubusb %%mm4, %%mm1                   \n\t"
water	64:8	0:0	2	"psubb %%mm1, %%mm7                     \n\t"
water	66:8	0:0	2	"movq %%mm6, %%mm4                      \n\t"
water	67:8	0:0	2	"psrlq $8, %%mm6                        \n\t"
water	69:8	0:0	2	"pmaxub %%mm4, %%mm6                    \n\t"
water	70:8	0:0	2	"pshufw $0xF9, %%mm6, %%mm4             \n\t"
water	71:8	0:0	2	"pmaxub %%mm4, %%mm6                    \n\t"
water	72:8	0:0	2	"pshufw $0xFE, %%mm6, %%mm4             \n\t"
water	73:8	0:0	2	"pmaxub %%mm4, %%mm6                    \n\t"
water	75:8	0:0	2	"psubusb %%mm4, %%mm6                   \n\t"
water	76:8	0:0	2	"paddb %%mm4, %%mm6                     \n\t"
water	77:8	0:0	2	"movq %%mm6, %%mm4                      \n\t"
water	78:8	0:0	2	"psrlq $16, %%mm6                       \n\t"
water	79:8	0:0	2	"psubusb %%mm4, %%mm6                   \n\t"
water	80:8	0:0	2	"paddb %%mm4, %%mm6                     \n\t"
water	81:8	0:0	2	"movq %%mm6, %%mm4                      \n\t"
water	82:8	0:0	2	"psrlq $32, %%mm6                       \n\t"
water	83:8	0:0	2	"psubusb %%mm4, %%mm6                   \n\t"
water	84:8	0:0	2	"paddb %%mm4, %%mm6                     \n\t"
water	86:8	0:0	2	"movq %%mm6, %%mm0                      \n\t"
water	87:8	0:0	2	"psubb %%mm7, %%mm6                     \n\t"
water	88:8	0:0	2	"push %4                              \n\t"
water	89:8	0:0	2	"movd %%mm6, %k4                        \n\t"
water	90:8	0:0	2	"cmpb "
call	90:15	90:37	2	MANGLE
arg	90:22	90:37	3	deringThreshold
water	90:22	0:0	4	deringThreshold
water	90:38	0:0	2	", %b4    \n\t"
water	91:8	0:0	2	"pop %4                               \n\t"
water	92:8	0:0	2	" jb 1f                                 \n\t"
call	93:8	93:26	2	PAVGB
arg	93:14	93:19	3	%%mm0
op	93:14	0:0	4	%
op	93:15	0:0	4	%
water	93:16	0:0	4	mm0
arg	93:21	93:26	3	%%mm7
op	93:21	0:0	4	%
op	93:22	0:0	4	%
water	93:23	0:0	4	mm7
water	94:8	0:0	2	"punpcklbw %%mm7, %%mm7                 \n\t"
water	95:8	0:0	2	"punpcklbw %%mm7, %%mm7                 \n\t"
water	96:8	0:0	2	"punpcklbw %%mm7, %%mm7                 \n\t"
water	97:8	0:0	2	"movq %%mm7, (%4)                       \n\t"
water	98:8	0:0	2	"movq (%0), %%mm0                       \n\t"
water	99:8	0:0	2	"movq %%mm0, %%mm1                      \n\t"
water	100:8	0:0	2	"movq %%mm0, %%mm2                      \n\t"
water	101:8	0:0	2	"psllq $8, %%mm1                        \n\t"
water	102:8	0:0	2	"psrlq $8, %%mm2                        \n\t"
water	103:8	0:0	2	"movd -4(%0), %%mm3                     \n\t"
water	104:8	0:0	2	"movd 8(%0), %%mm4                      \n\t"
water	105:8	0:0	2	"psrlq $24, %%mm3                       \n\t"
water	106:8	0:0	2	"psllq $56, %%mm4                       \n\t"
water	107:8	0:0	2	"por %%mm3, %%mm1                       \n\t"
water	108:8	0:0	2	"por %%mm4, %%mm2                       \n\t"
water	109:8	0:0	2	"movq %%mm1, %%mm3                      \n\t"
call	110:8	110:26	2	PAVGB
arg	110:14	110:19	3	%%mm2
op	110:14	0:0	4	%
op	110:15	0:0	4	%
water	110:16	0:0	4	mm2
arg	110:21	110:26	3	%%mm1
op	110:21	0:0	4	%
op	110:22	0:0	4	%
water	110:23	0:0	4	mm1
call	111:8	111:26	2	PAVGB
arg	111:14	111:19	3	%%mm0
op	111:14	0:0	4	%
op	111:15	0:0	4	%
water	111:16	0:0	4	mm0
arg	111:21	111:26	3	%%mm1
op	111:21	0:0	4	%
op	111:22	0:0	4	%
water	111:23	0:0	4	mm1
water	112:8	0:0	2	"psubusb %%mm7, %%mm0                   \n\t"
water	113:8	0:0	2	"psubusb %%mm7, %%mm2                   \n\t"
water	114:8	0:0	2	"psubusb %%mm7, %%mm3                   \n\t"
water	115:8	0:0	2	"pcmpeqb "
call	115:18	115:28	2	MANGLE
arg	115:25	115:28	3	b00
water	115:25	0:0	4	b00
water	115:29	0:0	2	", %%mm0           \n\t"
water	116:8	0:0	2	"pcmpeqb "
call	116:18	116:28	2	MANGLE
arg	116:25	116:28	3	b00
water	116:25	0:0	4	b00
water	116:29	0:0	2	", %%mm2           \n\t"
water	117:8	0:0	2	"pcmpeqb "
call	117:18	117:28	2	MANGLE
arg	117:25	117:28	3	b00
water	117:25	0:0	4	b00
water	117:29	0:0	2	", %%mm3           \n\t"
water	118:8	0:0	2	"paddb %%mm2, %%mm0                     \n\t"
water	119:8	0:0	2	"paddb %%mm3, %%mm0                     \n\t"
water	120:8	0:0	2	"movq (%%"
water	120:18	0:0	2	REG_a
water	120:23	0:0	2	"), %%mm2                \n\t"
water	121:8	0:0	2	"movq %%mm2, %%mm3                      \n\t"
water	122:8	0:0	2	"movq %%mm2, %%mm4                      \n\t"
water	123:8	0:0	2	"psllq $8, %%mm3                        \n\t"
water	124:8	0:0	2	"psrlq $8, %%mm4                        \n\t"
water	125:8	0:0	2	"movd -4(%%"
water	125:20	0:0	2	REG_a
water	125:25	0:0	2	"), %%mm5              \n\t"
water	126:8	0:0	2	"movd 8(%%"
water	126:19	0:0	2	REG_a
water	126:24	0:0	2	"), %%mm6               \n\t"
water	127:8	0:0	2	"psrlq $24, %%mm5                       \n\t"
water	128:8	0:0	2	"psllq $56, %%mm6                       \n\t"
water	129:8	0:0	2	"por %%mm5, %%mm3                       \n\t"
water	130:8	0:0	2	"por %%mm6, %%mm4                       \n\t"
water	131:8	0:0	2	"movq %%mm3, %%mm5                      \n\t"
call	132:8	132:26	2	PAVGB
arg	132:14	132:19	3	%%mm4
op	132:14	0:0	4	%
op	132:15	0:0	4	%
water	132:16	0:0	4	mm4
arg	132:21	132:26	3	%%mm3
op	132:21	0:0	4	%
op	132:22	0:0	4	%
water	132:23	0:0	4	mm3
call	133:8	133:26	2	PAVGB
arg	133:14	133:19	3	%%mm2
op	133:14	0:0	4	%
op	133:15	0:0	4	%
water	133:16	0:0	4	mm2
arg	133:21	133:26	3	%%mm3
op	133:21	0:0	4	%
op	133:22	0:0	4	%
water	133:23	0:0	4	mm3
water	134:8	0:0	2	"psubusb %%mm7, %%mm2                   \n\t"
water	135:8	0:0	2	"psubusb %%mm7, %%mm4                   \n\t"
water	136:8	0:0	2	"psubusb %%mm7, %%mm5                   \n\t"
water	137:8	0:0	2	"pcmpeqb "
call	137:18	137:28	2	MANGLE
arg	137:25	137:28	3	b00
water	137:25	0:0	4	b00
water	137:29	0:0	2	", %%mm2           \n\t"
water	138:8	0:0	2	"pcmpeqb "
call	138:18	138:28	2	MANGLE
arg	138:25	138:28	3	b00
water	138:25	0:0	4	b00
water	138:29	0:0	2	", %%mm4           \n\t"
water	139:8	0:0	2	"pcmpeqb "
call	139:18	139:28	2	MANGLE
arg	139:25	139:28	3	b00
water	139:25	0:0	4	b00
water	139:29	0:0	2	", %%mm5           \n\t"
water	140:8	0:0	2	"paddb %%mm4, %%mm2                     \n\t"
water	141:8	0:0	2	"paddb %%mm5, %%mm2                     \n\t"
water	144:8	0:0	2	"movq "
water	145:8	0:0	2	"movq "
water	146:8	0:0	2	"movq "
water	147:8	0:0	2	"psllq $8, "
water	148:8	0:0	2	"psrlq $8, "
water	149:8	0:0	2	"movd -4"
water	150:8	0:0	2	"psrlq $24, "
water	151:8	0:0	2	"por "
water	152:8	0:0	2	"movd 8"
water	153:8	0:0	2	"psllq $56, "
water	154:8	0:0	2	"por "
water	155:8	0:0	2	"movq "
call	156:8	156:20	2	PAVGB
arg	156:14	156:16	3	t0
water	156:14	0:0	4	t0
arg	156:18	156:20	3	lx
water	156:18	0:0	4	lx
call	157:8	157:20	2	PAVGB
arg	157:14	157:16	3	sx
water	157:14	0:0	4	sx
arg	157:18	157:20	3	lx
water	157:18	0:0	4	lx
call	158:8	158:22	2	PAVGB
arg	158:14	158:16	3	lx
water	158:14	0:0	4	lx
arg	158:18	158:22	3	pplx
water	158:18	0:0	4	pplx
water	159:8	0:0	2	"movq "
water	160:8	0:0	2	"movq (%4), "
water	161:8	0:0	2	"psubusb "
water	162:8	0:0	2	"psubusb "
water	163:8	0:0	2	"psubusb "
water	164:8	0:0	2	"movq "
call	164:15	164:25	2	MANGLE
arg	164:22	164:25	3	b00
water	164:22	0:0	4	b00
water	164:26	0:0	2	", "
water	165:8	0:0	2	"pcmpeqb "
water	166:8	0:0	2	"pcmpeqb "
water	167:8	0:0	2	"pcmpeqb "
water	168:8	0:0	2	"paddb "
water	169:8	0:0	2	"paddb "
call	171:8	171:23	2	PAVGB
arg	171:14	171:17	3	plx
water	171:14	0:0	4	plx
arg	171:19	171:23	3	pplx
water	171:19	0:0	4	pplx
water	172:8	0:0	2	"movq "
water	173:8	0:0	2	"movq "
water	174:8	0:0	2	"psubusb %3, "
water	175:8	0:0	2	"paddusb %3, "
call	176:8	176:23	2	PMAXUB
arg	176:15	176:17	3	t0
water	176:15	0:0	4	t0
arg	176:19	176:23	3	pplx
water	176:19	0:0	4	pplx
call	177:8	177:27	2	PMINUB
arg	177:15	177:17	3	t1
water	177:15	0:0	4	t1
arg	177:19	177:23	3	pplx
water	177:19	0:0	4	pplx
arg	177:25	177:27	3	t0
water	177:25	0:0	4	t0
water	178:8	0:0	2	"paddb "
water	179:8	0:0	2	"paddb "
water	180:8	0:0	2	"#paddb "
call	180:17	180:27	2	MANGLE
arg	180:24	180:27	3	b02
water	180:24	0:0	4	b02
water	180:28	0:0	2	", "
water	181:8	0:0	2	"pand "
call	181:15	181:25	2	MANGLE
arg	181:22	181:25	3	b08
water	181:22	0:0	4	b08
water	181:26	0:0	2	", "
water	182:8	0:0	2	"pcmpeqb "
water	183:8	0:0	2	"pand "
water	184:8	0:0	2	"pandn "
water	185:8	0:0	2	"por "
water	186:8	0:0	2	"movq "
water	187:8	0:0	2	"movq 8(%4), "
call	189:3	189:57	2	REAL_DERING_CORE
arg	189:20	189:23	3	dst
water	189:20	0:0	4	dst
arg	189:24	189:27	3	src
water	189:24	0:0	4	src
arg	189:28	189:32	3	ppsx
water	189:28	0:0	4	ppsx
arg	189:33	189:36	3	psx
water	189:33	0:0	4	psx
arg	189:37	189:39	3	sx
water	189:37	0:0	4	sx
arg	189:40	189:44	3	pplx
water	189:40	0:0	4	pplx
arg	189:45	189:48	3	plx
water	189:45	0:0	4	plx
arg	189:49	189:51	3	lx
water	189:49	0:0	4	lx
arg	189:52	189:54	3	t0
water	189:52	0:0	4	t0
arg	189:55	189:57	3	t1
water	189:55	0:0	4	t1
call	203:0	203:91	2	DERING_CORE
arg	203:12	203:27	3	(%%REGa)
water	203:12	0:0	4	(
op	203:13	0:0	4	%
op	203:14	0:0	4	%
water	203:15	0:0	4	REGa
water	203:19	0:0	4	)
arg	203:28	203:43	3	(%%REGa,%1)
water	203:28	0:0	4	(
op	203:29	0:0	4	%
op	203:30	0:0	4	%
water	203:31	0:0	4	REGa
water	203:35	0:0	4	,
op	203:37	0:0	4	%
water	203:38	0:0	4	1
water	203:39	0:0	4	)
arg	203:44	203:49	3	%%mm0
op	203:44	0:0	4	%
op	203:45	0:0	4	%
water	203:46	0:0	4	mm0
arg	203:50	203:55	3	%%mm2
op	203:50	0:0	4	%
op	203:51	0:0	4	%
water	203:52	0:0	4	mm2
arg	203:56	203:61	3	%%mm4
op	203:56	0:0	4	%
op	203:57	0:0	4	%
water	203:58	0:0	4	mm4
arg	203:62	203:67	3	%%mm1
op	203:62	0:0	4	%
op	203:63	0:0	4	%
water	203:64	0:0	4	mm1
arg	203:68	203:73	3	%%mm3
op	203:68	0:0	4	%
op	203:69	0:0	4	%
water	203:70	0:0	4	mm3
arg	203:74	203:79	3	%%mm5
op	203:74	0:0	4	%
op	203:75	0:0	4	%
water	203:76	0:0	4	mm5
arg	203:80	203:85	3	%%mm6
op	203:80	0:0	4	%
op	203:81	0:0	4	%
water	203:82	0:0	4	mm6
arg	203:86	203:91	3	%%mm7
op	203:86	0:0	4	%
op	203:87	0:0	4	%
water	203:88	0:0	4	mm7
call	204:0	204:91	2	DERING_CORE
arg	204:12	204:27	3	(%%REGa,%1)
water	204:12	0:0	4	(
op	204:13	0:0	4	%
op	204:14	0:0	4	%
water	204:15	0:0	4	REGa
water	204:19	0:0	4	,
op	204:21	0:0	4	%
water	204:22	0:0	4	1
water	204:23	0:0	4	)
arg	204:28	204:43	3	(%%REGa,%1,2)
water	204:28	0:0	4	(
op	204:29	0:0	4	%
op	204:30	0:0	4	%
water	204:31	0:0	4	REGa
water	204:35	0:0	4	,
op	204:37	0:0	4	%
water	204:38	0:0	4	1
water	204:39	0:0	4	,
water	204:41	0:0	4	2
water	204:42	0:0	4	)
arg	204:44	204:49	3	%%mm2
op	204:44	0:0	4	%
op	204:45	0:0	4	%
water	204:46	0:0	4	mm2
arg	204:50	204:55	3	%%mm4
op	204:50	0:0	4	%
op	204:51	0:0	4	%
water	204:52	0:0	4	mm4
arg	204:56	204:61	3	%%mm0
op	204:56	0:0	4	%
op	204:57	0:0	4	%
water	204:58	0:0	4	mm0
arg	204:62	204:67	3	%%mm3
op	204:62	0:0	4	%
op	204:63	0:0	4	%
water	204:64	0:0	4	mm3
arg	204:68	204:73	3	%%mm5
op	204:68	0:0	4	%
op	204:69	0:0	4	%
water	204:70	0:0	4	mm5
arg	204:74	204:79	3	%%mm1
op	204:74	0:0	4	%
op	204:75	0:0	4	%
water	204:76	0:0	4	mm1
arg	204:80	204:85	3	%%mm6
op	204:80	0:0	4	%
op	204:81	0:0	4	%
water	204:82	0:0	4	mm6
arg	204:86	204:91	3	%%mm7
op	204:86	0:0	4	%
op	204:87	0:0	4	%
water	204:88	0:0	4	mm7
call	205:0	205:91	2	DERING_CORE
arg	205:12	205:27	3	(%%REGa,%1,2)
water	205:12	0:0	4	(
op	205:13	0:0	4	%
op	205:14	0:0	4	%
water	205:15	0:0	4	REGa
water	205:19	0:0	4	,
op	205:21	0:0	4	%
water	205:22	0:0	4	1
water	205:23	0:0	4	,
water	205:25	0:0	4	2
water	205:26	0:0	4	)
arg	205:28	205:43	3	(%0,%1,4)
water	205:28	0:0	4	(
op	205:29	0:0	4	%
water	205:30	0:0	4	0
water	205:31	0:0	4	,
op	205:33	0:0	4	%
water	205:34	0:0	4	1
water	205:35	0:0	4	,
water	205:37	0:0	4	4
water	205:38	0:0	4	)
arg	205:44	205:49	3	%%mm4
op	205:44	0:0	4	%
op	205:45	0:0	4	%
water	205:46	0:0	4	mm4
arg	205:50	205:55	3	%%mm0
op	205:50	0:0	4	%
op	205:51	0:0	4	%
water	205:52	0:0	4	mm0
arg	205:56	205:61	3	%%mm2
op	205:56	0:0	4	%
op	205:57	0:0	4	%
water	205:58	0:0	4	mm2
arg	205:62	205:67	3	%%mm5
op	205:62	0:0	4	%
op	205:63	0:0	4	%
water	205:64	0:0	4	mm5
arg	205:68	205:73	3	%%mm1
op	205:68	0:0	4	%
op	205:69	0:0	4	%
water	205:70	0:0	4	mm1
arg	205:74	205:79	3	%%mm3
op	205:74	0:0	4	%
op	205:75	0:0	4	%
water	205:76	0:0	4	mm3
arg	205:80	205:85	3	%%mm6
op	205:80	0:0	4	%
op	205:81	0:0	4	%
water	205:82	0:0	4	mm6
arg	205:86	205:91	3	%%mm7
op	205:86	0:0	4	%
op	205:87	0:0	4	%
water	205:88	0:0	4	mm7
call	206:0	206:91	2	DERING_CORE
arg	206:12	206:27	3	(%0,%1,4)
water	206:12	0:0	4	(
op	206:13	0:0	4	%
water	206:14	0:0	4	0
water	206:15	0:0	4	,
op	206:17	0:0	4	%
water	206:18	0:0	4	1
water	206:19	0:0	4	,
water	206:21	0:0	4	4
water	206:22	0:0	4	)
arg	206:28	206:43	3	(%%REGd)
water	206:28	0:0	4	(
op	206:29	0:0	4	%
op	206:30	0:0	4	%
water	206:31	0:0	4	REGd
water	206:35	0:0	4	)
arg	206:44	206:49	3	%%mm0
op	206:44	0:0	4	%
op	206:45	0:0	4	%
water	206:46	0:0	4	mm0
arg	206:50	206:55	3	%%mm2
op	206:50	0:0	4	%
op	206:51	0:0	4	%
water	206:52	0:0	4	mm2
arg	206:56	206:61	3	%%mm4
op	206:56	0:0	4	%
op	206:57	0:0	4	%
water	206:58	0:0	4	mm4
arg	206:62	206:67	3	%%mm1
op	206:62	0:0	4	%
op	206:63	0:0	4	%
water	206:64	0:0	4	mm1
arg	206:68	206:73	3	%%mm3
op	206:68	0:0	4	%
op	206:69	0:0	4	%
water	206:70	0:0	4	mm3
arg	206:74	206:79	3	%%mm5
op	206:74	0:0	4	%
op	206:75	0:0	4	%
water	206:76	0:0	4	mm5
arg	206:80	206:85	3	%%mm6
op	206:80	0:0	4	%
op	206:81	0:0	4	%
water	206:82	0:0	4	mm6
arg	206:86	206:91	3	%%mm7
op	206:86	0:0	4	%
op	206:87	0:0	4	%
water	206:88	0:0	4	mm7
call	207:0	207:91	2	DERING_CORE
arg	207:12	207:27	3	(%%REGd)
water	207:12	0:0	4	(
op	207:13	0:0	4	%
op	207:14	0:0	4	%
water	207:15	0:0	4	REGd
water	207:19	0:0	4	)
arg	207:28	207:43	3	(%%REGd,%1)
water	207:28	0:0	4	(
op	207:29	0:0	4	%
op	207:30	0:0	4	%
water	207:31	0:0	4	REGd
water	207:35	0:0	4	,
op	207:37	0:0	4	%
water	207:38	0:0	4	1
water	207:39	0:0	4	)
arg	207:44	207:49	3	%%mm2
op	207:44	0:0	4	%
op	207:45	0:0	4	%
water	207:46	0:0	4	mm2
arg	207:50	207:55	3	%%mm4
op	207:50	0:0	4	%
op	207:51	0:0	4	%
water	207:52	0:0	4	mm4
arg	207:56	207:61	3	%%mm0
op	207:56	0:0	4	%
op	207:57	0:0	4	%
water	207:58	0:0	4	mm0
arg	207:62	207:67	3	%%mm3
op	207:62	0:0	4	%
op	207:63	0:0	4	%
water	207:64	0:0	4	mm3
arg	207:68	207:73	3	%%mm5
op	207:68	0:0	4	%
op	207:69	0:0	4	%
water	207:70	0:0	4	mm5
arg	207:74	207:79	3	%%mm1
op	207:74	0:0	4	%
op	207:75	0:0	4	%
water	207:76	0:0	4	mm1
arg	207:80	207:85	3	%%mm6
op	207:80	0:0	4	%
op	207:81	0:0	4	%
water	207:82	0:0	4	mm6
arg	207:86	207:91	3	%%mm7
op	207:86	0:0	4	%
op	207:87	0:0	4	%
water	207:88	0:0	4	mm7
call	208:0	208:91	2	DERING_CORE
arg	208:12	208:27	3	(%%REGd,%1)
water	208:12	0:0	4	(
op	208:13	0:0	4	%
op	208:14	0:0	4	%
water	208:15	0:0	4	REGd
water	208:19	0:0	4	,
op	208:21	0:0	4	%
water	208:22	0:0	4	1
water	208:23	0:0	4	)
arg	208:28	208:43	3	(%%REGd,%1,2)
water	208:28	0:0	4	(
op	208:29	0:0	4	%
op	208:30	0:0	4	%
water	208:31	0:0	4	REGd
water	208:35	0:0	4	,
op	208:37	0:0	4	%
water	208:38	0:0	4	1
water	208:39	0:0	4	,
water	208:41	0:0	4	2
water	208:42	0:0	4	)
arg	208:44	208:49	3	%%mm4
op	208:44	0:0	4	%
op	208:45	0:0	4	%
water	208:46	0:0	4	mm4
arg	208:50	208:55	3	%%mm0
op	208:50	0:0	4	%
op	208:51	0:0	4	%
water	208:52	0:0	4	mm0
arg	208:56	208:61	3	%%mm2
op	208:56	0:0	4	%
op	208:57	0:0	4	%
water	208:58	0:0	4	mm2
arg	208:62	208:67	3	%%mm5
op	208:62	0:0	4	%
op	208:63	0:0	4	%
water	208:64	0:0	4	mm5
arg	208:68	208:73	3	%%mm1
op	208:68	0:0	4	%
op	208:69	0:0	4	%
water	208:70	0:0	4	mm1
arg	208:74	208:79	3	%%mm3
op	208:74	0:0	4	%
op	208:75	0:0	4	%
water	208:76	0:0	4	mm3
arg	208:80	208:85	3	%%mm6
op	208:80	0:0	4	%
op	208:81	0:0	4	%
water	208:82	0:0	4	mm6
arg	208:86	208:91	3	%%mm7
op	208:86	0:0	4	%
op	208:87	0:0	4	%
water	208:88	0:0	4	mm7
call	209:0	209:91	2	DERING_CORE
arg	209:12	209:27	3	(%%REGd,%1,2)
water	209:12	0:0	4	(
op	209:13	0:0	4	%
op	209:14	0:0	4	%
water	209:15	0:0	4	REGd
water	209:19	0:0	4	,
op	209:21	0:0	4	%
water	209:22	0:0	4	1
water	209:23	0:0	4	,
water	209:25	0:0	4	2
water	209:26	0:0	4	)
arg	209:28	209:43	3	(%0,%1,8)
water	209:28	0:0	4	(
op	209:29	0:0	4	%
water	209:30	0:0	4	0
water	209:31	0:0	4	,
op	209:33	0:0	4	%
water	209:34	0:0	4	1
water	209:35	0:0	4	,
water	209:37	0:0	4	8
water	209:38	0:0	4	)
arg	209:44	209:49	3	%%mm0
op	209:44	0:0	4	%
op	209:45	0:0	4	%
water	209:46	0:0	4	mm0
arg	209:50	209:55	3	%%mm2
op	209:50	0:0	4	%
op	209:51	0:0	4	%
water	209:52	0:0	4	mm2
arg	209:56	209:61	3	%%mm4
op	209:56	0:0	4	%
op	209:57	0:0	4	%
water	209:58	0:0	4	mm4
arg	209:62	209:67	3	%%mm1
op	209:62	0:0	4	%
op	209:63	0:0	4	%
water	209:64	0:0	4	mm1
arg	209:68	209:73	3	%%mm3
op	209:68	0:0	4	%
op	209:69	0:0	4	%
water	209:70	0:0	4	mm3
arg	209:74	209:79	3	%%mm5
op	209:74	0:0	4	%
op	209:75	0:0	4	%
water	209:76	0:0	4	mm5
arg	209:80	209:85	3	%%mm6
op	209:80	0:0	4	%
op	209:81	0:0	4	%
water	209:82	0:0	4	mm6
arg	209:86	209:91	3	%%mm7
op	209:86	0:0	4	%
op	209:87	0:0	4	%
water	209:88	0:0	4	mm7
call	210:0	210:91	2	DERING_CORE
arg	210:12	210:27	3	(%0,%1,8)
water	210:12	0:0	4	(
op	210:13	0:0	4	%
water	210:14	0:0	4	0
water	210:15	0:0	4	,
op	210:17	0:0	4	%
water	210:18	0:0	4	1
water	210:19	0:0	4	,
water	210:21	0:0	4	8
water	210:22	0:0	4	)
arg	210:28	210:43	3	(%%REGd,%1,4)
water	210:28	0:0	4	(
op	210:29	0:0	4	%
op	210:30	0:0	4	%
water	210:31	0:0	4	REGd
water	210:35	0:0	4	,
op	210:37	0:0	4	%
water	210:38	0:0	4	1
water	210:39	0:0	4	,
water	210:41	0:0	4	4
water	210:42	0:0	4	)
arg	210:44	210:49	3	%%mm2
op	210:44	0:0	4	%
op	210:45	0:0	4	%
water	210:46	0:0	4	mm2
arg	210:50	210:55	3	%%mm4
op	210:50	0:0	4	%
op	210:51	0:0	4	%
water	210:52	0:0	4	mm4
arg	210:56	210:61	3	%%mm0
op	210:56	0:0	4	%
op	210:57	0:0	4	%
water	210:58	0:0	4	mm0
arg	210:62	210:67	3	%%mm3
op	210:62	0:0	4	%
op	210:63	0:0	4	%
water	210:64	0:0	4	mm3
arg	210:68	210:73	3	%%mm5
op	210:68	0:0	4	%
op	210:69	0:0	4	%
water	210:70	0:0	4	mm5
arg	210:74	210:79	3	%%mm1
op	210:74	0:0	4	%
op	210:75	0:0	4	%
water	210:76	0:0	4	mm1
arg	210:80	210:85	3	%%mm6
op	210:80	0:0	4	%
op	210:81	0:0	4	%
water	210:82	0:0	4	mm6
arg	210:86	210:91	3	%%mm7
op	210:86	0:0	4	%
op	210:87	0:0	4	%
water	210:88	0:0	4	mm7
water	211:8	0:0	2	"1:                        \n\t"
water	212:8	0:0	2	:
water	212:10	0:0	2	:
water	212:12	0:0	2	"r"
water	212:16	0:0	2	(
water	212:17	0:0	2	src
water	212:20	0:0	2	)
water	212:21	0:0	2	,
water	212:23	0:0	2	"r"
water	212:27	0:0	2	(
water	212:28	0:0	2	(
water	212:29	0:0	2	x86_reg
water	212:36	0:0	2	)
water	212:37	0:0	2	stride
water	212:43	0:0	2	)
water	212:44	0:0	2	,
water	212:46	0:0	2	"m"
water	212:50	0:0	2	(
water	212:51	0:0	2	c
op	212:52	0:0	2	->
water	212:54	0:0	2	pQPb
water	212:58	0:0	2	)
water	212:59	0:0	2	,
water	212:61	0:0	2	"m"
water	212:64	0:0	2	(
water	212:65	0:0	2	c
op	212:66	0:0	2	->
water	212:68	0:0	2	pQPb2
water	212:73	0:0	2	)
water	212:74	0:0	2	,
water	212:76	0:0	2	"q"
water	212:79	0:0	2	(
water	212:80	0:0	2	tmp
water	212:83	0:0	2	)
call	213:10	213:59	2	NAMED_CONSTRAINTS_ADD
arg	213:32	213:47	3	deringThreshold
water	213:32	0:0	4	deringThreshold
arg	213:48	213:51	3	b00
water	213:48	0:0	4	b00
arg	213:52	213:55	3	b02
water	213:52	0:0	4	b02
arg	213:56	213:59	3	b08
water	213:56	0:0	4	b08
water	214:8	0:0	2	:
water	214:10	0:0	2	"%"
water	214:13	0:0	2	REG_a
water	214:18	0:0	2	,
water	214:20	0:0	2	"%"
water	214:23	0:0	2	REG_d
water	214:28	0:0	2	,
water	214:30	0:0	2	"%"
water	214:33	0:0	2	REG_sp
water	215:4	0:0	2	)
water	215:5	0:0	2	;
decl	217:4	217:9	2	int	y
decl	218:4	218:15	2	int	min
op	218:11	0:0	2	=
water	218:12	0:0	2	255
decl	219:4	219:13	2	int	max
op	219:11	0:0	2	=
water	219:12	0:0	2	0
decl	220:4	220:11	2	int	avg
decl	221:4	221:14	2	uint8_t	*p
decl	222:4	222:13	2	int	s[10]
decl	223:4	223:30	2	const int	QP2
op	223:17	0:0	2	=
water	223:19	0:0	2	c
op	223:20	0:0	2	->
water	223:22	0:0	2	QP
op	223:24	0:0	2	/
water	223:25	0:0	2	2
op	223:27	0:0	2	+
water	223:29	0:0	2	1
water	224:4	0:0	2	src
op	224:8	0:0	2	--
water	224:10	0:0	2	;
for	225:4	233:4	2	(y = 1 ;y < 9;y ++)
forinit	225:8	225:11	3	y = 1 ;
water	225:8	0:0	4	y
op	225:9	0:0	4	=
water	225:10	0:0	4	1
water	225:11	0:0	4	;
cond	225:13	225:15	3	y < 9
water	225:13	0:0	4	y
op	225:14	0:0	4	<
water	225:15	0:0	4	9
forexpr	225:18	225:19	3	y ++
water	225:18	0:0	4	y
op	225:19	0:0	4	++
stmts	225:22	233:4	3	
water	225:22	0:0	4	{
decl	226:8	226:13	4	int	x
water	227:8	0:0	4	p
op	227:9	0:0	4	=
water	227:11	0:0	4	src
op	227:15	0:0	4	+
water	227:17	0:0	4	stride
op	227:23	0:0	4	*
water	227:24	0:0	4	y
water	227:25	0:0	4	;
for	228:8	232:8	4	(x = 1 ;x < 9;x ++)
forinit	228:12	228:15	5	x = 1 ;
water	228:12	0:0	6	x
op	228:13	0:0	6	=
water	228:14	0:0	6	1
water	228:15	0:0	6	;
cond	228:17	228:19	5	x < 9
water	228:17	0:0	6	x
op	228:18	0:0	6	<
water	228:19	0:0	6	9
forexpr	228:22	228:23	5	x ++
water	228:22	0:0	6	x
op	228:23	0:0	6	++
stmts	228:26	232:8	5	
water	228:26	0:0	6	{
water	229:12	0:0	6	p
op	229:13	0:0	6	++
water	229:15	0:0	6	;
if	230:12	230:32	6	(* p > max)
cond	230:15	230:20	7	* p > max
op	230:15	0:0	8	*
water	230:16	0:0	8	p
op	230:18	0:0	8	>
water	230:20	0:0	8	max
stmts	230:25	230:32	7	
water	230:25	0:0	8	max
op	230:28	0:0	8	=
op	230:30	0:0	8	*
water	230:31	0:0	8	p
water	230:32	0:0	8	;
if	231:12	231:32	6	(* p < min)
cond	231:15	231:20	7	* p < min
op	231:15	0:0	8	*
water	231:16	0:0	8	p
op	231:18	0:0	8	<
water	231:20	0:0	8	min
stmts	231:25	231:32	7	
water	231:25	0:0	8	min
op	231:28	0:0	8	=
op	231:30	0:0	8	*
water	231:31	0:0	8	p
water	231:32	0:0	8	;
water	232:8	0:0	6	}
water	233:4	0:0	4	}
water	234:4	0:0	2	avg
op	234:7	0:0	2	=
water	234:9	0:0	2	(
water	234:10	0:0	2	min
op	234:14	0:0	2	+
water	234:16	0:0	2	max
op	234:20	0:0	2	+
water	234:22	0:0	2	1
water	234:23	0:0	2	)
op	234:24	0:0	2	>>
water	234:26	0:0	2	1
water	234:27	0:0	2	;
if	235:4	235:41	2	(max - min < deringThreshold)
cond	235:7	235:18	3	max - min < deringThreshold
water	235:7	0:0	4	max
op	235:11	0:0	4	-
water	235:13	0:0	4	min
op	235:17	0:0	4	<
water	235:18	0:0	4	deringThreshold
stmts	235:35	235:41	3	
return	235:35	235:41	4	
for	236:4	251:4	2	(y = 0 ;y < 10;y ++)
forinit	236:8	236:11	3	y = 0 ;
water	236:8	0:0	4	y
op	236:9	0:0	4	=
water	236:10	0:0	4	0
water	236:11	0:0	4	;
cond	236:13	236:15	3	y < 10
water	236:13	0:0	4	y
op	236:14	0:0	4	<
water	236:15	0:0	4	10
forexpr	236:19	236:20	3	y ++
water	236:19	0:0	4	y
op	236:20	0:0	4	++
stmts	236:23	251:4	3	
water	236:23	0:0	4	{
decl	237:8	237:17	4	int	t
op	237:14	0:0	4	=
water	237:16	0:0	4	0
if	238:8	238:41	4	(src [ stride * y + 0 ] > avg)
cond	238:11	238:31	5	src [ stride * y + 0 ] > avg
water	238:11	0:0	6	src
op	238:14	0:0	6	[
water	238:15	0:0	6	stride
op	238:21	0:0	6	*
water	238:22	0:0	6	y
op	238:24	0:0	6	+
water	238:26	0:0	6	0
op	238:27	0:0	6	]
op	238:29	0:0	6	>
water	238:31	0:0	6	avg
stmts	238:36	238:41	5	
water	238:36	0:0	6	t
op	238:37	0:0	6	+=
water	238:40	0:0	6	1
water	238:41	0:0	6	;
if	239:8	239:41	4	(src [ stride * y + 1 ] > avg)
cond	239:11	239:31	5	src [ stride * y + 1 ] > avg
water	239:11	0:0	6	src
op	239:14	0:0	6	[
water	239:15	0:0	6	stride
op	239:21	0:0	6	*
water	239:22	0:0	6	y
op	239:24	0:0	6	+
water	239:26	0:0	6	1
op	239:27	0:0	6	]
op	239:29	0:0	6	>
water	239:31	0:0	6	avg
stmts	239:36	239:41	5	
water	239:36	0:0	6	t
op	239:37	0:0	6	+=
water	239:40	0:0	6	2
water	239:41	0:0	6	;
if	240:8	240:41	4	(src [ stride * y + 2 ] > avg)
cond	240:11	240:31	5	src [ stride * y + 2 ] > avg
water	240:11	0:0	6	src
op	240:14	0:0	6	[
water	240:15	0:0	6	stride
op	240:21	0:0	6	*
water	240:22	0:0	6	y
op	240:24	0:0	6	+
water	240:26	0:0	6	2
op	240:27	0:0	6	]
op	240:29	0:0	6	>
water	240:31	0:0	6	avg
stmts	240:36	240:41	5	
water	240:36	0:0	6	t
op	240:37	0:0	6	+=
water	240:40	0:0	6	4
water	240:41	0:0	6	;
if	241:8	241:41	4	(src [ stride * y + 3 ] > avg)
cond	241:11	241:31	5	src [ stride * y + 3 ] > avg
water	241:11	0:0	6	src
op	241:14	0:0	6	[
water	241:15	0:0	6	stride
op	241:21	0:0	6	*
water	241:22	0:0	6	y
op	241:24	0:0	6	+
water	241:26	0:0	6	3
op	241:27	0:0	6	]
op	241:29	0:0	6	>
water	241:31	0:0	6	avg
stmts	241:36	241:41	5	
water	241:36	0:0	6	t
op	241:37	0:0	6	+=
water	241:40	0:0	6	8
water	241:41	0:0	6	;
if	242:8	242:42	4	(src [ stride * y + 4 ] > avg)
cond	242:11	242:31	5	src [ stride * y + 4 ] > avg
water	242:11	0:0	6	src
op	242:14	0:0	6	[
water	242:15	0:0	6	stride
op	242:21	0:0	6	*
water	242:22	0:0	6	y
op	242:24	0:0	6	+
water	242:26	0:0	6	4
op	242:27	0:0	6	]
op	242:29	0:0	6	>
water	242:31	0:0	6	avg
stmts	242:36	242:42	5	
water	242:36	0:0	6	t
op	242:37	0:0	6	+=
water	242:40	0:0	6	16
water	242:42	0:0	6	;
if	243:8	243:42	4	(src [ stride * y + 5 ] > avg)
cond	243:11	243:31	5	src [ stride * y + 5 ] > avg
water	243:11	0:0	6	src
op	243:14	0:0	6	[
water	243:15	0:0	6	stride
op	243:21	0:0	6	*
water	243:22	0:0	6	y
op	243:24	0:0	6	+
water	243:26	0:0	6	5
op	243:27	0:0	6	]
op	243:29	0:0	6	>
water	243:31	0:0	6	avg
stmts	243:36	243:42	5	
water	243:36	0:0	6	t
op	243:37	0:0	6	+=
water	243:40	0:0	6	32
water	243:42	0:0	6	;
if	244:8	244:42	4	(src [ stride * y + 6 ] > avg)
cond	244:11	244:31	5	src [ stride * y + 6 ] > avg
water	244:11	0:0	6	src
op	244:14	0:0	6	[
water	244:15	0:0	6	stride
op	244:21	0:0	6	*
water	244:22	0:0	6	y
op	244:24	0:0	6	+
water	244:26	0:0	6	6
op	244:27	0:0	6	]
op	244:29	0:0	6	>
water	244:31	0:0	6	avg
stmts	244:36	244:42	5	
water	244:36	0:0	6	t
op	244:37	0:0	6	+=
water	244:40	0:0	6	64
water	244:42	0:0	6	;
if	245:8	245:43	4	(src [ stride * y + 7 ] > avg)
cond	245:11	245:31	5	src [ stride * y + 7 ] > avg
water	245:11	0:0	6	src
op	245:14	0:0	6	[
water	245:15	0:0	6	stride
op	245:21	0:0	6	*
water	245:22	0:0	6	y
op	245:24	0:0	6	+
water	245:26	0:0	6	7
op	245:27	0:0	6	]
op	245:29	0:0	6	>
water	245:31	0:0	6	avg
stmts	245:36	245:43	5	
water	245:36	0:0	6	t
op	245:37	0:0	6	+=
water	245:40	0:0	6	128
water	245:43	0:0	6	;
if	246:8	246:43	4	(src [ stride * y + 8 ] > avg)
cond	246:11	246:31	5	src [ stride * y + 8 ] > avg
water	246:11	0:0	6	src
op	246:14	0:0	6	[
water	246:15	0:0	6	stride
op	246:21	0:0	6	*
water	246:22	0:0	6	y
op	246:24	0:0	6	+
water	246:26	0:0	6	8
op	246:27	0:0	6	]
op	246:29	0:0	6	>
water	246:31	0:0	6	avg
stmts	246:36	246:43	5	
water	246:36	0:0	6	t
op	246:37	0:0	6	+=
water	246:40	0:0	6	256
water	246:43	0:0	6	;
if	247:8	247:43	4	(src [ stride * y + 9 ] > avg)
cond	247:11	247:31	5	src [ stride * y + 9 ] > avg
water	247:11	0:0	6	src
op	247:14	0:0	6	[
water	247:15	0:0	6	stride
op	247:21	0:0	6	*
water	247:22	0:0	6	y
op	247:24	0:0	6	+
water	247:26	0:0	6	9
op	247:27	0:0	6	]
op	247:29	0:0	6	>
water	247:31	0:0	6	avg
stmts	247:36	247:43	5	
water	247:36	0:0	6	t
op	247:37	0:0	6	+=
water	247:40	0:0	6	512
water	247:43	0:0	6	;
water	248:8	0:0	4	t
op	248:10	0:0	4	|=
water	248:13	0:0	4	(
water	248:14	0:0	4	~t
water	248:16	0:0	4	)
op	248:17	0:0	4	<<
water	248:19	0:0	4	16
water	248:21	0:0	4	;
water	249:8	0:0	4	t
op	249:10	0:0	4	&=
water	249:13	0:0	4	(
water	249:14	0:0	4	t
op	249:15	0:0	4	<<
water	249:17	0:0	4	1
water	249:18	0:0	4	)
op	249:20	0:0	4	&
water	249:22	0:0	4	(
water	249:23	0:0	4	t
op	249:24	0:0	4	>>
water	249:26	0:0	4	1
water	249:27	0:0	4	)
water	249:28	0:0	4	;
water	250:8	0:0	4	s
op	250:9	0:0	4	[
water	250:10	0:0	4	y
op	250:11	0:0	4	]
op	250:13	0:0	4	=
water	250:15	0:0	4	t
water	250:16	0:0	4	;
water	251:4	0:0	4	}
for	252:4	256:4	2	(y = 1 ;y < 9;y ++)
forinit	252:8	252:11	3	y = 1 ;
water	252:8	0:0	4	y
op	252:9	0:0	4	=
water	252:10	0:0	4	1
water	252:11	0:0	4	;
cond	252:13	252:15	3	y < 9
water	252:13	0:0	4	y
op	252:14	0:0	4	<
water	252:15	0:0	4	9
forexpr	252:18	252:19	3	y ++
water	252:18	0:0	4	y
op	252:19	0:0	4	++
stmts	252:22	256:4	3	
water	252:22	0:0	4	{
decl	253:8	253:38	4	int	t
op	253:14	0:0	4	=
water	253:16	0:0	4	s
op	253:17	0:0	4	[
water	253:18	0:0	4	y
op	253:19	0:0	4	-
water	253:20	0:0	4	1
op	253:21	0:0	4	]
op	253:23	0:0	4	&
water	253:25	0:0	4	s
op	253:26	0:0	4	[
water	253:27	0:0	4	y
op	253:28	0:0	4	]
op	253:30	0:0	4	&
water	253:32	0:0	4	s
op	253:33	0:0	4	[
water	253:34	0:0	4	y
op	253:35	0:0	4	+
water	253:36	0:0	4	1
op	253:37	0:0	4	]
water	254:8	0:0	4	t
op	254:9	0:0	4	|=
water	254:12	0:0	4	t
op	254:13	0:0	4	>>
water	254:15	0:0	4	16
water	254:17	0:0	4	;
water	255:8	0:0	4	s
op	255:9	0:0	4	[
water	255:10	0:0	4	y
op	255:11	0:0	4	-
water	255:12	0:0	4	1
op	255:13	0:0	4	]
op	255:14	0:0	4	=
water	255:16	0:0	4	t
water	255:17	0:0	4	;
water	256:4	0:0	4	}
for	257:4	307:4	2	(y = 1 ;y < 9;y ++)
forinit	257:8	257:11	3	y = 1 ;
water	257:8	0:0	4	y
op	257:9	0:0	4	=
water	257:10	0:0	4	1
water	257:11	0:0	4	;
cond	257:13	257:15	3	y < 9
water	257:13	0:0	4	y
op	257:14	0:0	4	<
water	257:15	0:0	4	9
forexpr	257:18	257:19	3	y ++
water	257:18	0:0	4	y
op	257:19	0:0	4	++
stmts	257:22	307:4	3	
water	257:22	0:0	4	{
decl	258:8	258:13	4	int	x
decl	259:8	259:22	4	int	t
op	259:14	0:0	4	=
water	259:16	0:0	4	s
op	259:17	0:0	4	[
water	259:18	0:0	4	y
op	259:19	0:0	4	-
water	259:20	0:0	4	1
op	259:21	0:0	4	]
water	260:8	0:0	4	p
op	260:9	0:0	4	=
water	260:11	0:0	4	src
op	260:15	0:0	4	+
water	260:17	0:0	4	stride
op	260:23	0:0	4	*
water	260:24	0:0	4	y
water	260:25	0:0	4	;
for	261:8	306:8	4	(x = 1 ;x < 9;x ++)
forinit	261:12	261:15	5	x = 1 ;
water	261:12	0:0	6	x
op	261:13	0:0	6	=
water	261:14	0:0	6	1
water	261:15	0:0	6	;
cond	261:17	261:19	5	x < 9
water	261:17	0:0	6	x
op	261:18	0:0	6	<
water	261:19	0:0	6	9
forexpr	261:22	261:23	5	x ++
water	261:22	0:0	6	x
op	261:23	0:0	6	++
stmts	261:26	306:8	5	
water	261:26	0:0	6	{
water	262:12	0:0	6	p
op	262:13	0:0	6	++
water	262:15	0:0	6	;
if	263:12	305:12	6	(t & ( 1 << x ))
cond	263:15	263:24	7	t & ( 1 << x )
water	263:15	0:0	8	t
op	263:17	0:0	8	&
water	263:19	0:0	8	(
water	263:20	0:0	8	1
op	263:21	0:0	8	<<
water	263:23	0:0	8	x
water	263:24	0:0	8	)
stmts	263:26	305:12	7	
water	263:26	0:0	8	{
decl	264:16	266:74	8	int	f
op	264:21	0:0	8	=
water	264:23	0:0	8	(
op	264:24	0:0	8	*
water	264:25	0:0	8	(
water	264:26	0:0	8	p
op	264:27	0:0	8	-
water	264:28	0:0	8	stride
op	264:34	0:0	8	-
water	264:35	0:0	8	1
water	264:36	0:0	8	)
water	264:37	0:0	8	)
op	264:39	0:0	8	+
water	264:41	0:0	8	2
op	264:42	0:0	8	*
water	264:43	0:0	8	(
op	264:44	0:0	8	*
water	264:45	0:0	8	(
water	264:46	0:0	8	p
op	264:47	0:0	8	-
water	264:48	0:0	8	stride
water	264:54	0:0	8	)
water	264:55	0:0	8	)
op	264:57	0:0	8	+
water	264:59	0:0	8	(
op	264:60	0:0	8	*
water	264:61	0:0	8	(
water	264:62	0:0	8	p
op	264:63	0:0	8	-
water	264:64	0:0	8	stride
op	264:70	0:0	8	+
water	264:71	0:0	8	1
water	264:72	0:0	8	)
water	264:73	0:0	8	)
op	265:22	0:0	8	+
water	265:23	0:0	8	2
op	265:24	0:0	8	*
water	265:25	0:0	8	(
op	265:26	0:0	8	*
water	265:27	0:0	8	(
water	265:28	0:0	8	p
op	265:34	0:0	8	-
water	265:35	0:0	8	1
water	265:36	0:0	8	)
water	265:37	0:0	8	)
op	265:39	0:0	8	+
water	265:41	0:0	8	4
op	265:42	0:0	8	*
water	265:43	0:0	8	(
op	265:44	0:0	8	*
water	265:45	0:0	8	p
water	265:55	0:0	8	)
op	265:57	0:0	8	+
water	265:59	0:0	8	2
op	265:60	0:0	8	*
water	265:61	0:0	8	(
op	265:62	0:0	8	*
water	265:63	0:0	8	(
water	265:64	0:0	8	p
op	265:70	0:0	8	+
water	265:71	0:0	8	1
water	265:72	0:0	8	)
water	265:73	0:0	8	)
op	266:22	0:0	8	+
water	266:23	0:0	8	(
op	266:24	0:0	8	*
water	266:25	0:0	8	(
water	266:26	0:0	8	p
op	266:27	0:0	8	+
water	266:28	0:0	8	stride
op	266:34	0:0	8	-
water	266:35	0:0	8	1
water	266:36	0:0	8	)
water	266:37	0:0	8	)
op	266:39	0:0	8	+
water	266:41	0:0	8	2
op	266:42	0:0	8	*
water	266:43	0:0	8	(
op	266:44	0:0	8	*
water	266:45	0:0	8	(
water	266:46	0:0	8	p
op	266:47	0:0	8	+
water	266:48	0:0	8	stride
water	266:54	0:0	8	)
water	266:55	0:0	8	)
op	266:57	0:0	8	+
water	266:59	0:0	8	(
op	266:60	0:0	8	*
water	266:61	0:0	8	(
water	266:62	0:0	8	p
op	266:63	0:0	8	+
water	266:64	0:0	8	stride
op	266:70	0:0	8	+
water	266:71	0:0	8	1
water	266:72	0:0	8	)
water	266:73	0:0	8	)
water	267:16	0:0	8	f
op	267:17	0:0	8	=
water	267:19	0:0	8	(
water	267:20	0:0	8	f
op	267:22	0:0	8	+
water	267:24	0:0	8	8
water	267:25	0:0	8	)
op	267:26	0:0	8	>>
water	267:28	0:0	8	4
water	267:29	0:0	8	;
water	269:20	0:0	8	__asm__
water	269:28	0:0	8	volatile
water	269:36	0:0	8	(
water	269:37	0:0	8	"emms\n\t"
water	269:47	0:0	8	:
water	269:48	0:0	8	)
water	269:49	0:0	8	;
water	270:20	0:0	8	{
water	271:20	0:0	8	static
water	271:27	0:0	8	uint64_t
water	271:36	0:0	8	numPixels
op	271:45	0:0	8	=
water	271:46	0:0	8	0
water	271:47	0:0	8	;
if	272:20	272:64	8	(x != 1 && x != 8 && y != 1 && y != 8)
cond	272:23	272:50	9	x != 1 && x != 8 && y != 1 && y != 8
water	272:23	0:0	10	x
op	272:24	0:0	10	!=
water	272:26	0:0	10	1
op	272:28	0:0	10	&&
water	272:31	0:0	10	x
op	272:32	0:0	10	!=
water	272:34	0:0	10	8
op	272:36	0:0	10	&&
water	272:39	0:0	10	y
op	272:40	0:0	10	!=
water	272:42	0:0	10	1
op	272:44	0:0	10	&&
water	272:47	0:0	10	y
op	272:48	0:0	10	!=
water	272:50	0:0	10	8
stmts	272:53	272:64	9	
water	272:53	0:0	10	numPixels
op	272:62	0:0	10	++
water	272:64	0:0	10	;
if	276:20	299:20	8	(max - min < 20)
cond	276:23	276:33	9	max - min < 20
water	276:23	0:0	10	max
op	276:26	0:0	10	-
water	276:27	0:0	10	min
op	276:31	0:0	10	<
water	276:33	0:0	10	20
stmts	276:36	299:20	9	
water	276:36	0:0	10	{
water	277:24	0:0	10	static
water	277:31	0:0	10	int
water	277:35	0:0	10	numSkipped
op	277:45	0:0	10	=
water	277:46	0:0	10	0
water	277:47	0:0	10	;
water	278:24	0:0	10	static
water	278:31	0:0	10	int
water	278:35	0:0	10	errorSum
op	278:43	0:0	10	=
water	278:44	0:0	10	0
water	278:45	0:0	10	;
water	279:24	0:0	10	static
water	279:31	0:0	10	int
water	279:35	0:0	10	worstQP
op	279:42	0:0	10	=
water	279:43	0:0	10	0
water	279:44	0:0	10	;
water	280:24	0:0	10	static
water	280:31	0:0	10	int
water	280:35	0:0	10	worstRange
op	280:45	0:0	10	=
water	280:46	0:0	10	0
water	280:47	0:0	10	;
water	281:24	0:0	10	static
water	281:31	0:0	10	int
water	281:35	0:0	10	worstDiff
op	281:44	0:0	10	=
water	281:45	0:0	10	0
water	281:46	0:0	10	;
decl	282:24	282:42	10	int	diff
op	282:32	0:0	10	=
water	282:34	0:0	10	(
water	282:35	0:0	10	f
op	282:37	0:0	10	-
op	282:39	0:0	10	*
water	282:40	0:0	10	p
water	282:41	0:0	10	)
decl	283:24	283:48	10	int	absDiff
op	283:35	0:0	10	=
call	283:37	283:47	11	FFABS
arg	283:43	283:47	12	diff
water	283:43	0:0	13	diff
decl	284:24	284:44	10	int	error
op	284:33	0:0	10	=
water	284:35	0:0	10	diff
op	284:39	0:0	10	*
water	284:40	0:0	10	diff
if	285:24	285:65	10	(x == 1 || x == 8 || y == 1 || y == 8)
cond	285:27	285:54	11	x == 1 || x == 8 || y == 1 || y == 8
water	285:27	0:0	12	x
op	285:28	0:0	12	==
water	285:30	0:0	12	1
op	285:32	0:0	12	||
water	285:35	0:0	12	x
op	285:36	0:0	12	==
water	285:38	0:0	12	8
op	285:40	0:0	12	||
water	285:43	0:0	12	y
op	285:44	0:0	12	==
water	285:46	0:0	12	1
op	285:48	0:0	12	||
water	285:51	0:0	12	y
op	285:52	0:0	12	==
water	285:54	0:0	12	8
stmts	285:57	285:65	11	
continue	285:57	285:65	12	
water	286:24	0:0	10	numSkipped
op	286:34	0:0	10	++
water	286:36	0:0	10	;
if	287:24	291:24	10	(absDiff > worstDiff)
cond	287:27	287:37	11	absDiff > worstDiff
water	287:27	0:0	12	absDiff
op	287:35	0:0	12	>
water	287:37	0:0	12	worstDiff
stmts	287:47	291:24	11	
water	287:47	0:0	12	{
water	288:28	0:0	12	worstDiff
op	288:37	0:0	12	=
water	288:39	0:0	12	absDiff
water	288:46	0:0	12	;
water	289:28	0:0	12	worstQP
op	289:35	0:0	12	=
water	289:37	0:0	12	QP
water	289:39	0:0	12	;
water	290:28	0:0	12	worstRange
op	290:38	0:0	12	=
water	290:40	0:0	12	max
op	290:43	0:0	12	-
water	290:44	0:0	12	min
water	290:47	0:0	12	;
water	291:24	0:0	12	}
water	292:24	0:0	10	errorSum
op	292:32	0:0	10	+=
water	292:35	0:0	10	error
water	292:40	0:0	10	;
if	293:24	298:24	10	(1024 LL * 1024 LL * 1024 LL % numSkipped == 0)
cond	293:27	293:64	11	1024 LL * 1024 LL * 1024 LL % numSkipped == 0
water	293:27	0:0	12	1024
water	293:31	0:0	12	LL
op	293:33	0:0	12	*
water	293:34	0:0	12	1024
water	293:38	0:0	12	LL
op	293:40	0:0	12	*
water	293:41	0:0	12	1024
water	293:45	0:0	12	LL
op	293:48	0:0	12	%
water	293:50	0:0	12	numSkipped
op	293:61	0:0	12	==
water	293:64	0:0	12	0
stmts	293:66	298:24	11	
water	293:66	0:0	12	{
call	294:28	297:73	12	av_log
arg	294:35	294:36	13	c
water	294:35	0:0	14	c
arg	294:38	294:49	13	AV_LOG_INFO
water	294:38	0:0	14	AV_LOG_INFO
arg	294:51	295:73	13	"sum:%1.3f, skip:%d, wQP:%d, ""wRange:%d, wDiff:%d, relSkip:%1.3f\n"
water	294:51	0:0	14	"sum:%1.3f, skip:%d, wQP:%d, "
water	295:35	0:0	14	"wRange:%d, wDiff:%d, relSkip:%1.3f\n"
arg	296:35	296:61	13	(float)errorSum/numSkipped
water	296:35	0:0	14	(
water	296:36	0:0	14	float
water	296:41	0:0	14	)
water	296:42	0:0	14	errorSum
op	296:50	0:0	14	/
water	296:51	0:0	14	numSkipped
arg	296:63	296:73	13	numSkipped
water	296:63	0:0	14	numSkipped
arg	296:75	296:82	13	worstQP
water	296:75	0:0	14	worstQP
arg	296:84	296:94	13	worstRange
water	296:84	0:0	14	worstRange
arg	297:35	297:44	13	worstDiff
water	297:35	0:0	14	worstDiff
arg	297:46	297:73	13	(float)numSkipped/numPixels
water	297:46	0:0	14	(
water	297:47	0:0	14	float
water	297:52	0:0	14	)
water	297:53	0:0	14	numSkipped
op	297:63	0:0	14	/
water	297:64	0:0	14	numPixels
water	297:74	0:0	12	;
water	298:24	0:0	12	}
water	299:20	0:0	10	}
water	300:20	0:0	8	}
if	302:20	302:54	8	(* p + QP2 < f)
cond	302:28	302:39	9	* p + QP2 < f
op	302:28	0:0	10	*
water	302:29	0:0	10	p
op	302:31	0:0	10	+
water	302:33	0:0	10	QP2
op	302:37	0:0	10	<
water	302:39	0:0	10	f
stmts	302:42	302:54	9	
op	302:42	0:0	10	*
water	302:43	0:0	10	p
op	302:44	0:0	10	=
op	302:46	0:0	10	*
water	302:47	0:0	10	p
op	302:49	0:0	10	+
water	302:51	0:0	10	QP2
water	302:54	0:0	10	;
else	303:20	303:54	8
stmts	303:25	303:54	9	
if	303:25	303:54	10	(* p - QP2 > f)
cond	303:28	303:39	11	* p - QP2 > f
op	303:28	0:0	12	*
water	303:29	0:0	12	p
op	303:31	0:0	12	-
water	303:33	0:0	12	QP2
op	303:37	0:0	12	>
water	303:39	0:0	12	f
stmts	303:42	303:54	11	
op	303:42	0:0	12	*
water	303:43	0:0	12	p
op	303:44	0:0	12	=
op	303:46	0:0	12	*
water	303:47	0:0	12	p
op	303:49	0:0	12	-
water	303:51	0:0	12	QP2
water	303:54	0:0	12	;
else	304:20	304:29	8
stmts	304:25	304:29	9	
op	304:25	0:0	10	*
water	304:26	0:0	10	p
op	304:27	0:0	10	=
water	304:28	0:0	10	f
water	304:29	0:0	10	;
water	305:12	0:0	8	}
water	306:8	0:0	6	}
water	307:4	0:0	4	}
if	309:4	320:4	2	(max - min < 20)
cond	309:7	309:17	3	max - min < 20
water	309:7	0:0	4	max
op	309:10	0:0	4	-
water	309:11	0:0	4	min
op	309:15	0:0	4	<
water	309:17	0:0	4	20
stmts	309:20	320:4	3	
water	309:20	0:0	4	{
for	310:8	318:8	4	(y = 1 ;y < 9;y ++)
forinit	310:12	310:15	5	y = 1 ;
water	310:12	0:0	6	y
op	310:13	0:0	6	=
water	310:14	0:0	6	1
water	310:15	0:0	6	;
cond	310:17	310:19	5	y < 9
water	310:17	0:0	6	y
op	310:18	0:0	6	<
water	310:19	0:0	6	9
forexpr	310:22	310:23	5	y ++
water	310:22	0:0	6	y
op	310:23	0:0	6	++
stmts	310:26	318:8	5	
water	310:26	0:0	6	{
decl	311:12	311:17	6	int	x
decl	312:12	312:21	6	int	t
op	312:18	0:0	6	=
water	312:20	0:0	6	0
water	313:12	0:0	6	p
op	313:13	0:0	6	=
water	313:15	0:0	6	src
op	313:19	0:0	6	+
water	313:21	0:0	6	stride
op	313:27	0:0	6	*
water	313:28	0:0	6	y
water	313:29	0:0	6	;
for	314:12	317:12	6	(x = 1 ;x < 9;x ++)
forinit	314:16	314:19	7	x = 1 ;
water	314:16	0:0	8	x
op	314:17	0:0	8	=
water	314:18	0:0	8	1
water	314:19	0:0	8	;
cond	314:21	314:23	7	x < 9
water	314:21	0:0	8	x
op	314:22	0:0	8	<
water	314:23	0:0	8	9
forexpr	314:26	314:27	7	x ++
water	314:26	0:0	8	x
op	314:27	0:0	8	++
stmts	314:30	317:12	7	
water	314:30	0:0	8	{
water	315:16	0:0	8	p
op	315:17	0:0	8	++
water	315:19	0:0	8	;
op	316:16	0:0	8	*
water	316:17	0:0	8	p
op	316:19	0:0	8	=
call	316:21	316:39	8	FFMIN
arg	316:27	316:34	9	*p+20
op	316:27	0:0	10	*
water	316:28	0:0	10	p
op	316:30	0:0	10	+
water	316:32	0:0	10	20
arg	316:36	316:39	9	255
water	316:36	0:0	10	255
water	316:40	0:0	8	;
water	317:12	0:0	8	}
water	318:8	0:0	6	}
water	320:4	0:0	4	}

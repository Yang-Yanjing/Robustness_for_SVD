func	1:0	70:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	69:14	1	
decl	3:4	3:20	2	AVFilter	*filter
decl	4:4	4:31	2	AVFilterContext	*filter_ctx
decl	5:4	5:28	2	AVFilterGraph	*graph_ctx
decl	6:4	6:27	2	const char	*filter_name
decl	7:4	7:34	2	const char	*filter_args
op	7:28	0:0	2	=
water	7:30	0:0	2	NULL
decl	8:4	8:9	2	int	i
decl	9:4	9:15	2	int	ret
op	9:12	0:0	2	=
water	9:14	0:0	2	0
call	10:4	10:33	2	av_log_set_level
arg	10:21	10:33	3	AV_LOG_DEBUG
water	10:21	0:0	4	AV_LOG_DEBUG
water	10:34	0:0	2	;
if	11:4	14:4	2	(argc < 2)
cond	11:8	11:15	3	argc < 2
water	11:8	0:0	4	argc
op	11:13	0:0	4	<
water	11:15	0:0	4	2
stmts	11:18	14:4	3	
water	11:18	0:0	4	{
call	12:8	12:59	4	fprintf
arg	12:16	12:22	5	stderr
water	12:16	0:0	6	stderr
arg	12:24	12:59	5	"Missing filter name as argument\n"
water	12:24	0:0	6	"Missing filter name as argument\n"
water	12:60	0:0	4	;
return	13:8	13:16	4	1
water	13:15	0:0	5	1
water	14:4	0:0	4	}
water	15:4	0:0	2	filter_name
op	15:16	0:0	2	=
water	15:18	0:0	2	argv
op	15:22	0:0	2	[
water	15:23	0:0	2	1
op	15:24	0:0	2	]
water	15:25	0:0	2	;
if	16:4	17:29	2	(argc > 2)
cond	16:8	16:15	3	argc > 2
water	16:8	0:0	4	argc
op	16:13	0:0	4	>
water	16:15	0:0	4	2
stmts	17:8	17:29	3	
water	17:8	0:0	4	filter_args
op	17:20	0:0	4	=
water	17:22	0:0	4	argv
op	17:26	0:0	4	[
water	17:27	0:0	4	2
op	17:28	0:0	4	]
water	17:29	0:0	4	;
water	19:4	0:0	2	graph_ctx
op	19:14	0:0	2	=
call	19:16	19:37	2	avfilter_graph_alloc
water	19:38	0:0	2	;
if	20:4	21:16	2	(! graph_ctx)
cond	20:8	20:9	3	! graph_ctx
op	20:8	0:0	4	!
water	20:9	0:0	4	graph_ctx
stmts	21:8	21:16	3	
return	21:8	21:16	4	1
water	21:15	0:0	5	1
call	22:4	22:26	2	avfilter_register_all
water	22:27	0:0	2	;
if	24:4	27:4	2	(! ( filter =avfilter_get_by_name (filter_name ) ))
cond	24:8	24:52	3	! ( filter =avfilter_get_by_name (filter_name ) )
op	24:8	0:0	4	!
water	24:9	0:0	4	(
water	24:10	0:0	4	filter
op	24:17	0:0	4	=
call	24:19	24:51	4	avfilter_get_by_name
arg	24:40	24:51	5	filter_name
water	24:40	0:0	6	filter_name
water	24:52	0:0	4	)
stmts	24:55	27:4	3	
water	24:55	0:0	4	{
call	25:8	25:75	4	fprintf
arg	25:16	25:22	5	stderr
water	25:16	0:0	6	stderr
arg	25:24	25:62	5	"Unrecognized filter with name '%s'\n"
water	25:24	0:0	6	"Unrecognized filter with name '%s'\n"
arg	25:64	25:75	5	filter_name
water	25:64	0:0	6	filter_name
water	25:76	0:0	4	;
return	26:8	26:16	4	1
water	26:15	0:0	5	1
water	27:4	0:0	4	}
if	29:4	33:4	2	(! ( filter_ctx =avfilter_graph_alloc_filter (graph_ctx ,filter ,filter_name ) ))
cond	29:8	29:82	3	! ( filter_ctx =avfilter_graph_alloc_filter (graph_ctx ,filter ,filter_name ) )
op	29:8	0:0	4	!
water	29:9	0:0	4	(
water	29:10	0:0	4	filter_ctx
op	29:21	0:0	4	=
call	29:23	29:81	4	avfilter_graph_alloc_filter
arg	29:51	29:60	5	graph_ctx
water	29:51	0:0	6	graph_ctx
arg	29:62	29:68	5	filter
water	29:62	0:0	6	filter
arg	29:70	29:81	5	filter_name
water	29:70	0:0	6	filter_name
water	29:82	0:0	4	)
stmts	29:85	33:4	3	
water	29:85	0:0	4	{
call	30:8	31:27	4	fprintf
arg	30:16	30:22	5	stderr
water	30:16	0:0	6	stderr
arg	30:24	30:68	5	"Impossible to open filter with name '%s'\n"
water	30:24	0:0	6	"Impossible to open filter with name '%s'\n"
arg	31:16	31:27	5	filter_name
water	31:16	0:0	6	filter_name
water	31:28	0:0	4	;
return	32:8	32:16	4	1
water	32:15	0:0	5	1
water	33:4	0:0	4	}
if	34:4	38:4	2	(avfilter_init_str (filter_ctx ,filter_args ) < 0)
cond	34:8	34:53	3	avfilter_init_str (filter_ctx ,filter_args ) < 0
call	34:8	34:49	4	avfilter_init_str
arg	34:26	34:36	5	filter_ctx
water	34:26	0:0	6	filter_ctx
arg	34:38	34:49	5	filter_args
water	34:38	0:0	6	filter_args
op	34:51	0:0	4	<
water	34:53	0:0	4	0
stmts	34:56	38:4	3	
water	34:56	0:0	4	{
call	35:8	36:40	4	fprintf
arg	35:16	35:22	5	stderr
water	35:16	0:0	6	stderr
arg	35:24	35:78	5	"Impossible to init filter '%s' with arguments '%s'\n"
water	35:24	0:0	6	"Impossible to init filter '%s' with arguments '%s'\n"
arg	36:16	36:27	5	filter_name
water	36:16	0:0	6	filter_name
arg	36:29	36:40	5	filter_args
water	36:29	0:0	6	filter_args
water	36:41	0:0	4	;
return	37:8	37:16	4	1
water	37:15	0:0	5	1
water	38:4	0:0	4	}
for	40:4	49:4	2	(i = 0 ;i < filter_ctx -> nb_inputs;i ++)
forinit	40:9	40:14	3	i = 0 ;
water	40:9	0:0	4	i
op	40:11	0:0	4	=
water	40:13	0:0	4	0
water	40:14	0:0	4	;
cond	40:16	40:32	3	i < filter_ctx -> nb_inputs
water	40:16	0:0	4	i
op	40:18	0:0	4	<
water	40:20	0:0	4	filter_ctx
op	40:30	0:0	4	->
water	40:32	0:0	4	nb_inputs
forexpr	40:43	40:44	3	i ++
water	40:43	0:0	4	i
op	40:44	0:0	4	++
stmts	40:48	49:4	3	
water	40:48	0:0	4	{
decl	41:8	41:61	4	AVFilterLink	*link
op	41:27	0:0	4	=
call	41:29	41:60	5	av_mallocz
arg	41:40	41:60	6	sizeof(AVFilterLink)
op	41:40	0:0	7	sizeof
water	41:46	0:0	7	(
water	41:47	0:0	7	AVFilterLink
water	41:59	0:0	7	)
if	42:8	46:8	4	(! link)
cond	42:12	42:13	5	! link
op	42:12	0:0	6	!
water	42:13	0:0	6	link
stmts	42:19	46:8	5	
water	42:19	0:0	6	{
call	43:12	43:79	6	fprintf
arg	43:20	43:26	7	stderr
water	43:20	0:0	8	stderr
arg	43:28	43:79	7	"Unable to allocate memory for filter input link\n"
water	43:28	0:0	8	"Unable to allocate memory for filter input link\n"
water	43:80	0:0	6	;
water	44:12	0:0	6	ret
op	44:16	0:0	6	=
water	44:18	0:0	6	1
water	44:19	0:0	6	;
goto	45:12	45:21	6	fail
water	45:17	0:0	7	fail
water	46:8	0:0	6	}
water	47:8	0:0	4	link
op	47:12	0:0	4	->
water	47:14	0:0	4	type
op	47:19	0:0	4	=
call	47:21	47:68	4	avfilter_pad_get_type
arg	47:43	47:65	5	filter_ctx->input_pads
water	47:43	0:0	6	filter_ctx
op	47:53	0:0	6	->
water	47:55	0:0	6	input_pads
arg	47:67	47:68	5	i
water	47:67	0:0	6	i
water	47:69	0:0	4	;
water	48:8	0:0	4	filter_ctx
op	48:18	0:0	4	->
water	48:20	0:0	4	inputs
op	48:26	0:0	4	[
water	48:27	0:0	4	i
op	48:28	0:0	4	]
op	48:30	0:0	4	=
water	48:32	0:0	4	link
water	48:36	0:0	4	;
water	49:4	0:0	4	}
for	50:4	59:4	2	(i = 0 ;i < filter_ctx -> nb_outputs;i ++)
forinit	50:9	50:14	3	i = 0 ;
water	50:9	0:0	4	i
op	50:11	0:0	4	=
water	50:13	0:0	4	0
water	50:14	0:0	4	;
cond	50:16	50:32	3	i < filter_ctx -> nb_outputs
water	50:16	0:0	4	i
op	50:18	0:0	4	<
water	50:20	0:0	4	filter_ctx
op	50:30	0:0	4	->
water	50:32	0:0	4	nb_outputs
forexpr	50:44	50:45	3	i ++
water	50:44	0:0	4	i
op	50:45	0:0	4	++
stmts	50:49	59:4	3	
water	50:49	0:0	4	{
decl	51:8	51:61	4	AVFilterLink	*link
op	51:27	0:0	4	=
call	51:29	51:60	5	av_mallocz
arg	51:40	51:60	6	sizeof(AVFilterLink)
op	51:40	0:0	7	sizeof
water	51:46	0:0	7	(
water	51:47	0:0	7	AVFilterLink
water	51:59	0:0	7	)
if	52:8	56:8	4	(! link)
cond	52:12	52:13	5	! link
op	52:12	0:0	6	!
water	52:13	0:0	6	link
stmts	52:19	56:8	5	
water	52:19	0:0	6	{
call	53:12	53:80	6	fprintf
arg	53:20	53:26	7	stderr
water	53:20	0:0	8	stderr
arg	53:28	53:80	7	"Unable to allocate memory for filter output link\n"
water	53:28	0:0	8	"Unable to allocate memory for filter output link\n"
water	53:81	0:0	6	;
water	54:12	0:0	6	ret
op	54:16	0:0	6	=
water	54:18	0:0	6	1
water	54:19	0:0	6	;
goto	55:12	55:21	6	fail
water	55:17	0:0	7	fail
water	56:8	0:0	6	}
water	57:8	0:0	4	link
op	57:12	0:0	4	->
water	57:14	0:0	4	type
op	57:19	0:0	4	=
call	57:21	57:69	4	avfilter_pad_get_type
arg	57:43	57:66	5	filter_ctx->output_pads
water	57:43	0:0	6	filter_ctx
op	57:53	0:0	6	->
water	57:55	0:0	6	output_pads
arg	57:68	57:69	5	i
water	57:68	0:0	6	i
water	57:70	0:0	4	;
water	58:8	0:0	4	filter_ctx
op	58:18	0:0	4	->
water	58:20	0:0	4	outputs
op	58:27	0:0	4	[
water	58:28	0:0	4	i
op	58:29	0:0	4	]
op	58:31	0:0	4	=
water	58:33	0:0	4	link
water	58:37	0:0	4	;
water	59:4	0:0	4	}
if	60:4	61:41	2	(filter -> query_formats)
cond	60:8	60:16	3	filter -> query_formats
water	60:8	0:0	4	filter
op	60:14	0:0	4	->
water	60:16	0:0	4	query_formats
stmts	61:8	61:41	3	
call	61:8	61:40	4	filter->query_formats
arg	61:30	61:40	5	filter_ctx
water	61:30	0:0	6	filter_ctx
water	61:41	0:0	4	;
else	62:4	63:44	2
stmts	63:8	63:44	3	
call	63:8	63:43	4	ff_default_query_formats
arg	63:33	63:43	5	filter_ctx
water	63:33	0:0	6	filter_ctx
water	63:44	0:0	4	;
call	64:4	64:28	2	print_formats
arg	64:18	64:28	3	filter_ctx
water	64:18	0:0	4	filter_ctx
water	64:29	0:0	2	;
label	65:0	65:4	2	fail :
call	66:4	66:28	2	avfilter_free
arg	66:18	66:28	3	filter_ctx
water	66:18	0:0	4	filter_ctx
water	66:29	0:0	2	;
call	67:4	67:34	2	avfilter_graph_free
arg	67:24	67:34	3	&graph_ctx
op	67:24	0:0	4	&
water	67:25	0:0	4	graph_ctx
water	67:35	0:0	2	;
call	68:4	68:17	2	fflush
arg	68:11	68:17	3	stdout
water	68:11	0:0	4	stdout
water	68:18	0:0	2	;
return	69:4	69:14	2	ret
water	69:11	0:0	3	ret

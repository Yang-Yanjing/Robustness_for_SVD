func	1:15	61:0	0	int	opengl_compile_shaders
params	1:41	0:0	1	
param	1:42	1:63	2	OpenGLContext *	opengl
param	1:65	1:91	2	enum AVPixelFormat	pix_fmt
stmnts	0:0	60:27	1	
decl	3:4	3:16	2	GLint	result
decl	4:4	4:79	2	const char	*fragment_shader_code
op	4:37	0:0	2	=
call	4:39	4:78	3	opengl_get_fragment_shader_code
arg	4:71	4:78	4	pix_fmt
water	4:71	0:0	5	pix_fmt
if	5:4	9:4	2	(! fragment_shader_code)
cond	5:8	5:9	3	! fragment_shader_code
op	5:8	0:0	4	!
water	5:9	0:0	4	fragment_shader_code
stmts	5:31	9:4	3	
water	5:31	0:0	4	{
call	6:8	7:43	4	av_log
arg	6:15	6:21	5	opengl
water	6:15	0:0	6	opengl
arg	6:23	6:35	5	AV_LOG_ERROR
water	6:23	0:0	6	AV_LOG_ERROR
arg	6:37	6:84	5	"Provided pixel format '%s' is not supported\n"
water	6:37	0:0	6	"Provided pixel format '%s' is not supported\n"
arg	7:15	7:43	5	av_get_pix_fmt_name(pix_fmt)
call	7:15	7:42	6	av_get_pix_fmt_name
arg	7:35	7:42	7	pix_fmt
water	7:35	0:0	8	pix_fmt
water	7:44	0:0	4	;
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	4	}
water	10:4	0:0	2	opengl
op	10:10	0:0	2	->
water	10:12	0:0	2	vertex_shader
op	10:26	0:0	2	=
call	10:28	11:70	2	opengl_load_shader
arg	10:47	10:53	3	opengl
water	10:47	0:0	4	opengl
arg	10:55	10:74	3	FF_GL_VERTEX_SHADER
water	10:55	0:0	4	FF_GL_VERTEX_SHADER
arg	11:47	11:70	3	FF_OPENGL_VERTEX_SHADER
water	11:47	0:0	4	FF_OPENGL_VERTEX_SHADER
water	11:71	0:0	2	;
if	12:4	15:4	2	(! opengl -> vertex_shader)
cond	12:8	12:17	3	! opengl -> vertex_shader
op	12:8	0:0	4	!
water	12:9	0:0	4	opengl
op	12:15	0:0	4	->
water	12:17	0:0	4	vertex_shader
stmts	12:32	15:4	3	
water	12:32	0:0	4	{
call	13:8	13:70	4	av_log
arg	13:15	13:21	5	opengl
water	13:15	0:0	6	opengl
arg	13:23	13:35	5	AV_LOG_ERROR
water	13:23	0:0	6	AV_LOG_ERROR
arg	13:37	13:70	5	"Vertex shader loading failed.\n"
water	13:37	0:0	6	"Vertex shader loading failed.\n"
water	13:71	0:0	4	;
goto	14:8	14:17	4	fail
water	14:13	0:0	5	fail
water	15:4	0:0	4	}
water	16:4	0:0	2	opengl
op	16:10	0:0	2	->
water	16:12	0:0	2	fragment_shader
op	16:28	0:0	2	=
call	16:30	17:69	2	opengl_load_shader
arg	16:49	16:55	3	opengl
water	16:49	0:0	4	opengl
arg	16:57	16:78	3	FF_GL_FRAGMENT_SHADER
water	16:57	0:0	4	FF_GL_FRAGMENT_SHADER
arg	17:49	17:69	3	fragment_shader_code
water	17:49	0:0	4	fragment_shader_code
water	17:70	0:0	2	;
if	18:4	21:4	2	(! opengl -> fragment_shader)
cond	18:8	18:17	3	! opengl -> fragment_shader
op	18:8	0:0	4	!
water	18:9	0:0	4	opengl
op	18:15	0:0	4	->
water	18:17	0:0	4	fragment_shader
stmts	18:34	21:4	3	
water	18:34	0:0	4	{
call	19:8	19:72	4	av_log
arg	19:15	19:21	5	opengl
water	19:15	0:0	6	opengl
arg	19:23	19:35	5	AV_LOG_ERROR
water	19:23	0:0	6	AV_LOG_ERROR
arg	19:37	19:72	5	"Fragment shader loading failed.\n"
water	19:37	0:0	6	"Fragment shader loading failed.\n"
water	19:73	0:0	4	;
goto	20:8	20:17	4	fail
water	20:13	0:0	5	fail
water	21:4	0:0	4	}
water	22:4	0:0	2	opengl
op	22:10	0:0	2	->
water	22:12	0:0	2	program
op	22:20	0:0	2	=
call	22:22	22:54	2	opengl->glprocs.glCreateProgram
water	22:55	0:0	2	;
if	23:4	24:17	2	(! opengl -> program)
cond	23:8	23:17	3	! opengl -> program
op	23:8	0:0	4	!
water	23:9	0:0	4	opengl
op	23:15	0:0	4	->
water	23:17	0:0	4	program
stmts	24:8	24:17	3	
goto	24:8	24:17	4	fail
water	24:13	0:0	5	fail
call	25:4	25:73	2	opengl->glprocs.glAttachShader
arg	25:35	25:50	3	opengl->program
water	25:35	0:0	4	opengl
op	25:41	0:0	4	->
water	25:43	0:0	4	program
arg	25:52	25:73	3	opengl->vertex_shader
water	25:52	0:0	4	opengl
op	25:58	0:0	4	->
water	25:60	0:0	4	vertex_shader
water	25:74	0:0	2	;
call	26:4	26:75	2	opengl->glprocs.glAttachShader
arg	26:35	26:50	3	opengl->program
water	26:35	0:0	4	opengl
op	26:41	0:0	4	->
water	26:43	0:0	4	program
arg	26:52	26:75	3	opengl->fragment_shader
water	26:52	0:0	4	opengl
op	26:58	0:0	4	->
water	26:60	0:0	4	fragment_shader
water	26:76	0:0	2	;
call	27:4	27:49	2	opengl->glprocs.glLinkProgram
arg	27:34	27:49	3	opengl->program
water	27:34	0:0	4	opengl
op	27:40	0:0	4	->
water	27:42	0:0	4	program
water	27:50	0:0	2	;
call	28:4	28:78	2	opengl->glprocs.glGetProgramiv
arg	28:35	28:50	3	opengl->program
water	28:35	0:0	4	opengl
op	28:41	0:0	4	->
water	28:43	0:0	4	program
arg	28:52	28:69	3	FF_GL_LINK_STATUS
water	28:52	0:0	4	FF_GL_LINK_STATUS
arg	28:71	28:78	3	&result
op	28:71	0:0	4	&
water	28:72	0:0	4	result
water	28:79	0:0	2	;
if	29:4	41:4	2	(! result)
cond	29:8	29:9	3	! result
op	29:8	0:0	4	!
water	29:9	0:0	4	result
stmts	29:17	41:4	3	
water	29:17	0:0	4	{
decl	30:8	30:17	4	char	*log
call	31:8	31:86	4	opengl->glprocs.glGetProgramiv
arg	31:39	31:54	5	opengl->program
water	31:39	0:0	6	opengl
op	31:45	0:0	6	->
water	31:47	0:0	6	program
arg	31:56	31:77	5	FF_GL_INFO_LOG_LENGTH
water	31:56	0:0	6	FF_GL_INFO_LOG_LENGTH
arg	31:79	31:86	5	&result
op	31:79	0:0	6	&
water	31:80	0:0	6	result
water	31:87	0:0	4	;
if	32:8	39:8	4	(result)
cond	32:12	32:12	5	result
water	32:12	0:0	6	result
stmts	32:20	39:8	5	
water	32:20	0:0	6	{
water	33:12	0:0	6	log
op	33:16	0:0	6	=
call	33:18	33:34	6	av_malloc
arg	33:28	33:34	7	result
water	33:28	0:0	8	result
water	33:35	0:0	6	;
if	34:12	35:25	6	(! log)
cond	34:16	34:17	7	! log
op	34:16	0:0	8	!
water	34:17	0:0	8	log
stmts	35:16	35:25	7	
goto	35:16	35:25	8	fail
water	35:21	0:0	9	fail
call	36:12	36:82	6	opengl->glprocs.glGetProgramInfoLog
arg	36:48	36:63	7	opengl->program
water	36:48	0:0	8	opengl
op	36:54	0:0	8	->
water	36:56	0:0	8	program
arg	36:65	36:71	7	result
water	36:65	0:0	8	result
arg	36:73	36:77	7	NULL
water	36:73	0:0	8	NULL
arg	36:79	36:82	7	log
water	36:79	0:0	8	log
water	36:83	0:0	6	;
call	37:12	37:64	6	av_log
arg	37:19	37:25	7	opengl
water	37:19	0:0	8	opengl
arg	37:27	37:39	7	AV_LOG_ERROR
water	37:27	0:0	8	AV_LOG_ERROR
arg	37:41	37:59	7	"Link error: %s\n"
water	37:41	0:0	8	"Link error: %s\n"
arg	37:61	37:64	7	log
water	37:61	0:0	8	log
water	37:65	0:0	6	;
call	38:12	38:23	6	av_free
arg	38:20	38:23	7	log
water	38:20	0:0	8	log
water	38:24	0:0	6	;
water	39:8	0:0	6	}
goto	40:8	40:17	4	fail
water	40:13	0:0	5	fail
water	41:4	0:0	4	}
water	42:4	0:0	2	opengl
op	42:10	0:0	2	->
water	42:12	0:0	2	position_attrib
op	42:28	0:0	2	=
call	42:30	42:95	2	opengl->glprocs.glGetAttribLocation
arg	42:66	42:81	3	opengl->program
water	42:66	0:0	4	opengl
op	42:72	0:0	4	->
water	42:74	0:0	4	program
arg	42:83	42:95	3	"a_position"
water	42:83	0:0	4	"a_position"
water	42:96	0:0	2	;
water	43:4	0:0	2	opengl
op	43:10	0:0	2	->
water	43:12	0:0	2	texture_coords_attrib
op	43:34	0:0	2	=
call	43:36	43:106	2	opengl->glprocs.glGetAttribLocation
arg	43:72	43:87	3	opengl->program
water	43:72	0:0	4	opengl
op	43:78	0:0	4	->
water	43:80	0:0	4	program
arg	43:89	43:106	3	"a_textureCoords"
water	43:89	0:0	4	"a_textureCoords"
water	43:107	0:0	2	;
water	44:4	0:0	2	opengl
op	44:10	0:0	2	->
water	44:12	0:0	2	projection_matrix_location
op	44:39	0:0	2	=
call	44:41	44:115	2	opengl->glprocs.glGetUniformLocation
arg	44:78	44:93	3	opengl->program
water	44:78	0:0	4	opengl
op	44:84	0:0	4	->
water	44:86	0:0	4	program
arg	44:95	44:115	3	"u_projectionMatrix"
water	44:95	0:0	4	"u_projectionMatrix"
water	44:116	0:0	2	;
water	45:4	0:0	2	opengl
op	45:10	0:0	2	->
water	45:12	0:0	2	model_view_matrix_location
op	45:39	0:0	2	=
call	45:41	45:114	2	opengl->glprocs.glGetUniformLocation
arg	45:78	45:93	3	opengl->program
water	45:78	0:0	4	opengl
op	45:84	0:0	4	->
water	45:86	0:0	4	program
arg	45:95	45:114	3	"u_modelViewMatrix"
water	45:95	0:0	4	"u_modelViewMatrix"
water	45:115	0:0	2	;
water	46:4	0:0	2	opengl
op	46:10	0:0	2	->
water	46:12	0:0	2	color_map_location
op	46:31	0:0	2	=
call	46:33	46:99	2	opengl->glprocs.glGetUniformLocation
arg	46:70	46:85	3	opengl->program
water	46:70	0:0	4	opengl
op	46:76	0:0	4	->
water	46:78	0:0	4	program
arg	46:87	46:99	3	"u_colorMap"
water	46:87	0:0	4	"u_colorMap"
water	46:100	0:0	2	;
water	47:4	0:0	2	opengl
op	47:10	0:0	2	->
water	47:12	0:0	2	texture_location
op	47:28	0:0	2	[
water	47:29	0:0	2	0
op	47:30	0:0	2	]
op	47:32	0:0	2	=
call	47:34	47:100	2	opengl->glprocs.glGetUniformLocation
arg	47:71	47:86	3	opengl->program
water	47:71	0:0	4	opengl
op	47:77	0:0	4	->
water	47:79	0:0	4	program
arg	47:88	47:100	3	"u_texture0"
water	47:88	0:0	4	"u_texture0"
water	47:101	0:0	2	;
water	48:4	0:0	2	opengl
op	48:10	0:0	2	->
water	48:12	0:0	2	texture_location
op	48:28	0:0	2	[
water	48:29	0:0	2	1
op	48:30	0:0	2	]
op	48:32	0:0	2	=
call	48:34	48:100	2	opengl->glprocs.glGetUniformLocation
arg	48:71	48:86	3	opengl->program
water	48:71	0:0	4	opengl
op	48:77	0:0	4	->
water	48:79	0:0	4	program
arg	48:88	48:100	3	"u_texture1"
water	48:88	0:0	4	"u_texture1"
water	48:101	0:0	2	;
water	49:4	0:0	2	opengl
op	49:10	0:0	2	->
water	49:12	0:0	2	texture_location
op	49:28	0:0	2	[
water	49:29	0:0	2	2
op	49:30	0:0	2	]
op	49:32	0:0	2	=
call	49:34	49:100	2	opengl->glprocs.glGetUniformLocation
arg	49:71	49:86	3	opengl->program
water	49:71	0:0	4	opengl
op	49:77	0:0	4	->
water	49:79	0:0	4	program
arg	49:88	49:100	3	"u_texture2"
water	49:88	0:0	4	"u_texture2"
water	49:101	0:0	2	;
water	50:4	0:0	2	opengl
op	50:10	0:0	2	->
water	50:12	0:0	2	texture_location
op	50:28	0:0	2	[
water	50:29	0:0	2	3
op	50:30	0:0	2	]
op	50:32	0:0	2	=
call	50:34	50:100	2	opengl->glprocs.glGetUniformLocation
arg	50:71	50:86	3	opengl->program
water	50:71	0:0	4	opengl
op	50:77	0:0	4	->
water	50:79	0:0	4	program
arg	50:88	50:100	3	"u_texture3"
water	50:88	0:0	4	"u_texture3"
water	50:101	0:0	2	;
water	51:4	0:0	2	opengl
op	51:10	0:0	2	->
water	51:12	0:0	2	chroma_div_w_location
op	51:34	0:0	2	=
call	51:36	51:106	2	opengl->glprocs.glGetUniformLocation
arg	51:73	51:88	3	opengl->program
water	51:73	0:0	4	opengl
op	51:79	0:0	4	->
water	51:81	0:0	4	program
arg	51:90	51:106	3	"u_chroma_div_w"
water	51:90	0:0	4	"u_chroma_div_w"
water	51:107	0:0	2	;
water	52:4	0:0	2	opengl
op	52:10	0:0	2	->
water	52:12	0:0	2	chroma_div_h_location
op	52:34	0:0	2	=
call	52:36	52:106	2	opengl->glprocs.glGetUniformLocation
arg	52:73	52:88	3	opengl->program
water	52:73	0:0	4	opengl
op	52:79	0:0	4	->
water	52:81	0:0	4	program
arg	52:90	52:106	3	"u_chroma_div_h"
water	52:90	0:0	4	"u_chroma_div_h"
water	52:107	0:0	2	;
call	53:4	53:29	2	OPENGL_ERROR_CHECK
arg	53:23	53:29	3	opengl
water	53:23	0:0	4	opengl
water	53:30	0:0	2	;
return	54:4	54:12	2	0
water	54:11	0:0	3	0
label	55:2	55:6	2	fail :
call	56:4	56:56	2	opengl->glprocs.glDeleteShader
arg	56:35	56:56	3	opengl->vertex_shader
water	56:35	0:0	4	opengl
op	56:41	0:0	4	->
water	56:43	0:0	4	vertex_shader
water	56:57	0:0	2	;
call	57:4	57:58	2	opengl->glprocs.glDeleteShader
arg	57:35	57:58	3	opengl->fragment_shader
water	57:35	0:0	4	opengl
op	57:41	0:0	4	->
water	57:43	0:0	4	fragment_shader
water	57:59	0:0	2	;
call	58:4	58:51	2	opengl->glprocs.glDeleteProgram
arg	58:36	58:51	3	opengl->program
water	58:36	0:0	4	opengl
op	58:42	0:0	4	->
water	58:44	0:0	4	program
water	58:52	0:0	2	;
water	59:4	0:0	2	opengl
op	59:10	0:0	2	->
water	59:12	0:0	2	fragment_shader
op	59:28	0:0	2	=
water	59:30	0:0	2	opengl
op	59:36	0:0	2	->
water	59:38	0:0	2	vertex_shader
op	59:52	0:0	2	=
water	59:54	0:0	2	opengl
op	59:60	0:0	2	->
water	59:62	0:0	2	program
op	59:70	0:0	2	=
water	59:72	0:0	2	0
water	59:73	0:0	2	;
return	60:4	60:27	2	AVERROR_EXTERNAL
water	60:11	0:0	3	AVERROR_EXTERNAL

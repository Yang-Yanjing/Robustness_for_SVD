func	1:0	104:0	0	int	avfilter_init_str
params	1:21	0:0	1	
param	1:22	1:45	2	AVFilterContext *	filter
param	1:47	1:63	2	const char *	args
stmnts	0:0	103:14	1	
decl	3:4	3:32	2	AVDictionary	*options
op	3:26	0:0	2	=
water	3:28	0:0	2	NULL
decl	4:4	4:24	2	AVDictionaryEntry	*e
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
if	6:4	92:4	2	(args && * args)
cond	6:8	6:17	3	args && * args
water	6:8	0:0	4	args
op	6:13	0:0	4	&&
op	6:16	0:0	4	*
water	6:17	0:0	4	args
stmts	6:23	92:4	3	
water	6:23	0:0	4	{
if	7:8	11:8	4	(! filter -> filter -> priv_class)
cond	7:12	7:29	5	! filter -> filter -> priv_class
op	7:12	0:0	6	!
water	7:13	0:0	6	filter
op	7:19	0:0	6	->
water	7:21	0:0	6	filter
op	7:27	0:0	6	->
water	7:29	0:0	6	priv_class
stmts	7:41	11:8	5	
water	7:41	0:0	6	{
call	8:12	9:68	6	av_log
arg	8:19	8:25	7	filter
water	8:19	0:0	8	filter
arg	8:27	8:39	7	AV_LOG_ERROR
water	8:27	0:0	8	AV_LOG_ERROR
arg	8:41	9:62	7	"This filter does not take any ""options, but options were provided: %s.\n"
water	8:41	0:0	8	"This filter does not take any "
water	9:19	0:0	8	"options, but options were provided: %s.\n"
arg	9:64	9:68	7	args
water	9:64	0:0	8	args
water	9:69	0:0	6	;
return	10:12	10:34	6	AVERROR(EINVAL)
call	10:19	10:33	7	AVERROR
arg	10:27	10:33	8	EINVAL
water	10:27	0:0	9	EINVAL
water	11:8	0:0	6	}
if	13:12	85:8	4	(!strcmp (filter -> filter -> name ,"format" ) || !strcmp (filter -> filter -> name ,"noformat" ) || !strcmp (filter -> filter -> name ,"frei0r" ) || !strcmp (filter -> filter -> name ,"frei0r_src" ) || !strcmp (filter -> filter -> name ,"ocv" ) || !strcmp (filter -> filter -> name ,"pan" ) || !strcmp (filter -> filter -> name ,"pp" ) || !strcmp (filter -> filter -> name ,"aevalsrc" ))
cond	13:19	20:59	5	!strcmp (filter -> filter -> name ,"format" ) || !strcmp (filter -> filter -> name ,"noformat" ) || !strcmp (filter -> filter -> name ,"frei0r" ) || !strcmp (filter -> filter -> name ,"frei0r_src" ) || !strcmp (filter -> filter -> name ,"ocv" ) || !strcmp (filter -> filter -> name ,"pan" ) || !strcmp (filter -> filter -> name ,"pp" ) || !strcmp (filter -> filter -> name ,"aevalsrc" )
op	13:19	0:0	6	!
call	13:20	13:57	6	strcmp
arg	13:27	13:47	7	filter->filter->name
water	13:27	0:0	8	filter
op	13:33	0:0	8	->
water	13:35	0:0	8	filter
op	13:41	0:0	8	->
water	13:43	0:0	8	name
arg	13:49	13:57	7	"format"
water	13:49	0:0	8	"format"
op	13:63	0:0	6	||
op	14:19	0:0	6	!
call	14:20	14:59	6	strcmp
arg	14:27	14:47	7	filter->filter->name
water	14:27	0:0	8	filter
op	14:33	0:0	8	->
water	14:35	0:0	8	filter
op	14:41	0:0	8	->
water	14:43	0:0	8	name
arg	14:49	14:59	7	"noformat"
water	14:49	0:0	8	"noformat"
op	14:63	0:0	6	||
op	15:19	0:0	6	!
call	15:20	15:57	6	strcmp
arg	15:27	15:47	7	filter->filter->name
water	15:27	0:0	8	filter
op	15:33	0:0	8	->
water	15:35	0:0	8	filter
op	15:41	0:0	8	->
water	15:43	0:0	8	name
arg	15:49	15:57	7	"frei0r"
water	15:49	0:0	8	"frei0r"
op	15:63	0:0	6	||
op	16:19	0:0	6	!
call	16:20	16:61	6	strcmp
arg	16:27	16:47	7	filter->filter->name
water	16:27	0:0	8	filter
op	16:33	0:0	8	->
water	16:35	0:0	8	filter
op	16:41	0:0	8	->
water	16:43	0:0	8	name
arg	16:49	16:61	7	"frei0r_src"
water	16:49	0:0	8	"frei0r_src"
op	16:63	0:0	6	||
op	17:19	0:0	6	!
call	17:20	17:54	6	strcmp
arg	17:27	17:47	7	filter->filter->name
water	17:27	0:0	8	filter
op	17:33	0:0	8	->
water	17:35	0:0	8	filter
op	17:41	0:0	8	->
water	17:43	0:0	8	name
arg	17:49	17:54	7	"ocv"
water	17:49	0:0	8	"ocv"
op	17:63	0:0	6	||
op	18:19	0:0	6	!
call	18:20	18:54	6	strcmp
arg	18:27	18:47	7	filter->filter->name
water	18:27	0:0	8	filter
op	18:33	0:0	8	->
water	18:35	0:0	8	filter
op	18:41	0:0	8	->
water	18:43	0:0	8	name
arg	18:49	18:54	7	"pan"
water	18:49	0:0	8	"pan"
op	18:63	0:0	6	||
op	19:19	0:0	6	!
call	19:20	19:53	6	strcmp
arg	19:27	19:47	7	filter->filter->name
water	19:27	0:0	8	filter
op	19:33	0:0	8	->
water	19:35	0:0	8	filter
op	19:41	0:0	8	->
water	19:43	0:0	8	name
arg	19:49	19:53	7	"pp"
water	19:49	0:0	8	"pp"
op	19:63	0:0	6	||
op	20:19	0:0	6	!
call	20:20	20:59	6	strcmp
arg	20:27	20:47	7	filter->filter->name
water	20:27	0:0	8	filter
op	20:33	0:0	8	->
water	20:35	0:0	8	filter
op	20:41	0:0	8	->
water	20:43	0:0	8	name
arg	20:49	20:59	7	"aevalsrc"
water	20:49	0:0	8	"aevalsrc"
stmts	20:62	85:8	5	
water	20:62	0:0	6	{
decl	23:12	23:40	6	char	*copy
op	23:23	0:0	6	=
call	23:25	23:39	7	av_strdup
arg	23:35	23:39	8	args
water	23:35	0:0	9	args
decl	24:12	24:29	6	char	*p
op	24:23	0:0	6	=
water	24:25	0:0	6	copy
decl	25:12	25:30	6	int	nb_leading
op	25:27	0:0	6	=
water	25:29	0:0	6	0
decl	26:12	26:30	6	int	deprecated
op	26:27	0:0	6	=
water	26:29	0:0	6	0
if	27:12	30:12	6	(! copy)
cond	27:16	27:17	7	! copy
op	27:16	0:0	8	!
water	27:17	0:0	8	copy
stmts	27:23	30:12	7	
water	27:23	0:0	8	{
water	28:16	0:0	8	ret
op	28:20	0:0	8	=
call	28:22	28:36	8	AVERROR
arg	28:30	28:36	9	ENOMEM
water	28:30	0:0	10	ENOMEM
water	28:37	0:0	8	;
goto	29:16	29:25	8	fail
water	29:21	0:0	9	fail
water	30:12	0:0	8	}
if	31:12	33:30	6	(!strcmp (filter -> filter -> name ,"frei0r" ) || !strcmp (filter -> filter -> name ,"ocv" ))
cond	31:16	32:51	7	!strcmp (filter -> filter -> name ,"frei0r" ) || !strcmp (filter -> filter -> name ,"ocv" )
op	31:16	0:0	8	!
call	31:17	31:54	8	strcmp
arg	31:24	31:44	9	filter->filter->name
water	31:24	0:0	10	filter
op	31:30	0:0	10	->
water	31:32	0:0	10	filter
op	31:38	0:0	10	->
water	31:40	0:0	10	name
arg	31:46	31:54	9	"frei0r"
water	31:46	0:0	10	"frei0r"
op	31:56	0:0	8	||
op	32:16	0:0	8	!
call	32:17	32:51	8	strcmp
arg	32:24	32:44	9	filter->filter->name
water	32:24	0:0	10	filter
op	32:30	0:0	10	->
water	32:32	0:0	10	filter
op	32:38	0:0	10	->
water	32:40	0:0	10	name
arg	32:46	32:51	9	"ocv"
water	32:46	0:0	10	"ocv"
stmts	33:16	33:30	7	
water	33:16	0:0	8	nb_leading
op	33:27	0:0	8	=
water	33:29	0:0	8	1
water	33:30	0:0	8	;
else	34:12	35:30	6
stmts	34:17	35:30	7	
if	34:17	35:30	8	(!strcmp (filter -> filter -> name ,"frei0r_src" ))
cond	34:21	34:63	9	!strcmp (filter -> filter -> name ,"frei0r_src" )
op	34:21	0:0	10	!
call	34:22	34:63	10	strcmp
arg	34:29	34:49	11	filter->filter->name
water	34:29	0:0	12	filter
op	34:35	0:0	12	->
water	34:37	0:0	12	filter
op	34:43	0:0	12	->
water	34:45	0:0	12	name
arg	34:51	34:63	11	"frei0r_src"
water	34:51	0:0	12	"frei0r_src"
stmts	35:16	35:30	9	
water	35:16	0:0	10	nb_leading
op	35:27	0:0	10	=
water	35:29	0:0	10	3
water	35:30	0:0	10	;
while	36:12	43:12	6	(nb_leading --)
cond	36:19	36:29	7	nb_leading --
water	36:19	0:0	8	nb_leading
op	36:29	0:0	8	--
stmts	36:33	43:12	7	
water	36:33	0:0	8	{
water	37:16	0:0	8	p
op	37:18	0:0	8	=
call	37:20	37:33	8	strchr
arg	37:27	37:28	9	p
water	37:27	0:0	10	p
arg	37:30	37:33	9	':'
water	37:30	0:0	10	':'
water	37:34	0:0	8	;
if	38:16	41:16	8	(! p)
cond	38:20	38:21	9	! p
op	38:20	0:0	10	!
water	38:21	0:0	10	p
stmts	38:24	41:16	9	
water	38:24	0:0	10	{
water	39:20	0:0	10	p
op	39:22	0:0	10	=
water	39:24	0:0	10	copy
op	39:29	0:0	10	+
call	39:31	39:42	10	strlen
arg	39:38	39:42	11	copy
water	39:38	0:0	12	copy
water	39:43	0:0	10	;
break	40:20	40:25	10	
water	41:16	0:0	10	}
water	42:16	0:0	8	p
op	42:17	0:0	8	++
water	42:19	0:0	8	;
water	43:12	0:0	8	}
water	44:12	0:0	6	deprecated
op	44:23	0:0	6	=
call	44:25	44:38	6	strchr
arg	44:32	44:33	7	p
water	44:32	0:0	8	p
arg	44:35	44:38	7	':'
water	44:35	0:0	8	':'
op	44:40	0:0	6	!=
water	44:43	0:0	6	NULL
water	44:47	0:0	6	;
if	45:12	63:12	6	(!strcmp (filter -> filter -> name ,"aevalsrc" ))
cond	45:16	45:56	7	!strcmp (filter -> filter -> name ,"aevalsrc" )
op	45:16	0:0	8	!
call	45:17	45:56	8	strcmp
arg	45:24	45:44	9	filter->filter->name
water	45:24	0:0	10	filter
op	45:30	0:0	10	->
water	45:32	0:0	10	filter
op	45:38	0:0	10	->
water	45:40	0:0	10	name
arg	45:46	45:56	9	"aevalsrc"
water	45:46	0:0	10	"aevalsrc"
stmts	45:59	63:12	7	
water	45:59	0:0	8	{
water	46:16	0:0	8	deprecated
op	46:27	0:0	8	=
water	46:29	0:0	8	0
water	46:30	0:0	8	;
while	47:16	58:16	8	(( p =strchr (p ,':' ) ) && p [ 1 ] != ':')
cond	47:23	47:55	9	( p =strchr (p ,':' ) ) && p [ 1 ] != ':'
water	47:23	0:0	10	(
water	47:24	0:0	10	p
op	47:26	0:0	10	=
call	47:28	47:41	10	strchr
arg	47:35	47:36	11	p
water	47:35	0:0	12	p
arg	47:38	47:41	11	':'
water	47:38	0:0	12	':'
water	47:42	0:0	10	)
op	47:44	0:0	10	&&
water	47:47	0:0	10	p
op	47:48	0:0	10	[
water	47:49	0:0	10	1
op	47:50	0:0	10	]
op	47:52	0:0	10	!=
water	47:55	0:0	10	':'
stmts	47:60	58:16	9	
water	47:60	0:0	10	{
decl	48:20	48:57	10	const char	*epos
op	48:37	0:0	10	=
call	48:39	48:56	11	strchr
arg	48:46	48:51	12	p+1
water	48:46	0:0	13	p
op	48:48	0:0	13	+
water	48:50	0:0	13	1
arg	48:53	48:56	12	'='
water	48:53	0:0	13	'='
decl	49:20	49:57	10	const char	*spos
op	49:37	0:0	10	=
call	49:39	49:56	11	strchr
arg	49:46	49:51	12	p+1
water	49:46	0:0	13	p
op	49:48	0:0	13	+
water	49:50	0:0	13	1
arg	49:53	49:56	12	':'
water	49:53	0:0	13	':'
decl	50:20	50:80	10	const int	next_token_is_opt
op	50:48	0:0	10	=
water	50:50	0:0	10	epos
op	50:55	0:0	10	&&
water	50:58	0:0	10	(
op	50:59	0:0	10	!
water	50:60	0:0	10	spos
op	50:65	0:0	10	||
water	50:68	0:0	10	epos
op	50:73	0:0	10	<
water	50:75	0:0	10	spos
water	50:79	0:0	10	)
if	51:20	54:20	10	(next_token_is_opt)
cond	51:24	51:24	11	next_token_is_opt
water	51:24	0:0	12	next_token_is_opt
stmts	51:43	54:20	11	
water	51:43	0:0	12	{
water	52:24	0:0	12	p
op	52:25	0:0	12	++
water	52:27	0:0	12	;
break	53:24	53:29	12	
water	54:20	0:0	12	}
water	56:20	0:0	10	deprecated
op	56:31	0:0	10	=
water	56:33	0:0	10	1
water	56:34	0:0	10	;
op	57:20	0:0	10	*
water	57:21	0:0	10	p
op	57:22	0:0	10	++
op	57:25	0:0	10	=
water	57:27	0:0	10	'|'
water	57:30	0:0	10	;
water	58:16	0:0	10	}
if	59:16	62:16	8	(p && * p == ':')
cond	59:20	59:31	9	p && * p == ':'
water	59:20	0:0	10	p
op	59:22	0:0	10	&&
op	59:25	0:0	10	*
water	59:26	0:0	10	p
op	59:28	0:0	10	==
water	59:31	0:0	10	':'
stmts	59:36	62:16	9	
water	59:36	0:0	10	{
water	60:20	0:0	10	deprecated
op	60:31	0:0	10	=
water	60:33	0:0	10	1
water	60:34	0:0	10	;
call	61:20	61:47	10	memmove
arg	61:28	61:29	11	p
water	61:28	0:0	12	p
arg	61:31	61:36	11	p+1
water	61:31	0:0	12	p
op	61:33	0:0	12	+
water	61:35	0:0	12	1
arg	61:38	61:47	11	strlen(p)
call	61:38	61:46	12	strlen
arg	61:45	61:46	13	p
water	61:45	0:0	14	p
water	61:48	0:0	10	;
water	62:16	0:0	10	}
water	63:12	0:0	8	}
else	63:14	65:26	6
stmts	64:12	65:26	7	
while	64:12	65:26	8	(( p =strchr (p ,':' ) ))
cond	64:19	64:38	9	( p =strchr (p ,':' ) )
water	64:19	0:0	10	(
water	64:20	0:0	10	p
op	64:22	0:0	10	=
call	64:24	64:37	10	strchr
arg	64:31	64:32	11	p
water	64:31	0:0	12	p
arg	64:34	64:37	11	':'
water	64:34	0:0	12	':'
water	64:38	0:0	10	)
stmts	65:16	65:26	9	
op	65:16	0:0	10	*
water	65:17	0:0	10	p
op	65:18	0:0	10	++
op	65:21	0:0	10	=
water	65:23	0:0	10	'|'
water	65:26	0:0	10	;
if	67:12	69:59	6	(deprecated)
cond	67:16	67:16	7	deprecated
water	67:16	0:0	8	deprecated
stmts	68:16	69:59	7	
call	68:16	69:58	8	av_log
arg	68:23	68:29	9	filter
water	68:23	0:0	10	filter
arg	68:31	68:45	9	AV_LOG_WARNING
water	68:31	0:0	10	AV_LOG_WARNING
arg	68:47	69:58	9	"This syntax is deprecated. Use ""'|' to separate the list items.\n"
water	68:47	0:0	10	"This syntax is deprecated. Use "
water	69:23	0:0	10	"'|' to separate the list items.\n"
water	69:59	0:0	8	;
call	70:12	70:80	6	av_log
arg	70:19	70:25	7	filter
water	70:19	0:0	8	filter
arg	70:27	70:39	7	AV_LOG_DEBUG
water	70:27	0:0	8	AV_LOG_DEBUG
arg	70:41	70:74	7	"compat: called with args=[%s]\n"
water	70:41	0:0	8	"compat: called with args=[%s]\n"
arg	70:76	70:80	7	copy
water	70:76	0:0	8	copy
water	70:81	0:0	6	;
water	71:12	0:0	6	ret
op	71:16	0:0	6	=
call	71:18	71:56	6	process_options
arg	71:34	71:40	7	filter
water	71:34	0:0	8	filter
arg	71:42	71:50	7	&options
op	71:42	0:0	8	&
water	71:43	0:0	8	options
arg	71:52	71:56	7	copy
water	71:52	0:0	8	copy
water	71:57	0:0	6	;
if	73:12	78:12	6	(deprecated)
cond	73:16	73:16	7	deprecated
water	73:16	0:0	8	deprecated
stmts	73:28	78:12	7	
water	73:28	0:0	8	{
call	74:16	76:33	8	av_log
arg	74:23	74:29	9	filter
water	74:23	0:0	10	filter
arg	74:31	74:43	9	AV_LOG_ERROR
water	74:31	0:0	10	AV_LOG_ERROR
arg	74:45	75:80	9	"This syntax is deprecated. Use ""'|' to separate the list items ('%s' instead of '%s')\n"
water	74:45	0:0	10	"This syntax is deprecated. Use "
water	75:23	0:0	10	"'|' to separate the list items ('%s' instead of '%s')\n"
arg	76:23	76:27	9	copy
water	76:23	0:0	10	copy
arg	76:29	76:33	9	args
water	76:29	0:0	10	args
water	76:34	0:0	8	;
water	77:16	0:0	8	ret
op	77:20	0:0	8	=
call	77:22	77:36	8	AVERROR
arg	77:30	77:36	9	EINVAL
water	77:30	0:0	10	EINVAL
water	77:37	0:0	8	;
water	78:12	0:0	8	}
else	78:14	80:12	6
stmts	78:19	80:12	7	
water	78:19	0:0	8	{
water	79:16	0:0	8	ret
op	79:20	0:0	8	=
call	79:22	79:60	8	process_options
arg	79:38	79:44	9	filter
water	79:38	0:0	10	filter
arg	79:46	79:54	9	&options
op	79:46	0:0	10	&
water	79:47	0:0	10	options
arg	79:56	79:60	9	copy
water	79:56	0:0	10	copy
water	79:61	0:0	8	;
water	80:12	0:0	8	}
call	82:12	82:26	6	av_freep
arg	82:21	82:26	7	&copy
op	82:21	0:0	8	&
water	82:22	0:0	8	copy
water	82:27	0:0	6	;
if	83:12	84:25	6	(ret < 0)
cond	83:16	83:22	7	ret < 0
water	83:16	0:0	8	ret
op	83:20	0:0	8	<
water	83:22	0:0	8	0
stmts	84:16	84:25	7	
goto	84:16	84:25	8	fail
water	84:21	0:0	9	fail
water	85:8	0:0	6	}
else	85:10	91:8	4
stmts	87:8	91:8	5	
water	87:8	0:0	6	{
water	88:12	0:0	6	ret
op	88:16	0:0	6	=
call	88:18	88:56	6	process_options
arg	88:34	88:40	7	filter
water	88:34	0:0	8	filter
arg	88:42	88:50	7	&options
op	88:42	0:0	8	&
water	88:43	0:0	8	options
arg	88:52	88:56	7	args
water	88:52	0:0	8	args
water	88:57	0:0	6	;
if	89:12	90:25	6	(ret < 0)
cond	89:16	89:22	7	ret < 0
water	89:16	0:0	8	ret
op	89:20	0:0	8	<
water	89:22	0:0	8	0
stmts	90:16	90:25	7	
goto	90:16	90:25	8	fail
water	90:21	0:0	9	fail
water	91:8	0:0	6	}
water	92:4	0:0	4	}
water	93:4	0:0	2	ret
op	93:8	0:0	2	=
call	93:10	93:45	2	avfilter_init_dict
arg	93:29	93:35	3	filter
water	93:29	0:0	4	filter
arg	93:37	93:45	3	&options
op	93:37	0:0	4	&
water	93:38	0:0	4	options
water	93:46	0:0	2	;
if	94:4	95:17	2	(ret < 0)
cond	94:8	94:14	3	ret < 0
water	94:8	0:0	4	ret
op	94:12	0:0	4	<
water	94:14	0:0	4	0
stmts	95:8	95:17	3	
goto	95:8	95:17	4	fail
water	95:13	0:0	5	fail
if	96:4	100:4	2	(( e =av_dict_get (options ,"" ,NULL ,AV_DICT_IGNORE_SUFFIX ) ))
cond	96:8	96:66	3	( e =av_dict_get (options ,"" ,NULL ,AV_DICT_IGNORE_SUFFIX ) )
water	96:8	0:0	4	(
water	96:9	0:0	4	e
op	96:11	0:0	4	=
call	96:13	96:65	4	av_dict_get
arg	96:25	96:32	5	options
water	96:25	0:0	6	options
arg	96:34	96:36	5	""
water	96:34	0:0	6	""
arg	96:38	96:42	5	NULL
water	96:38	0:0	6	NULL
arg	96:44	96:65	5	AV_DICT_IGNORE_SUFFIX
water	96:44	0:0	6	AV_DICT_IGNORE_SUFFIX
water	96:66	0:0	4	)
stmts	96:69	100:4	3	
water	96:69	0:0	4	{
call	97:8	97:68	4	av_log
arg	97:15	97:21	5	filter
water	97:15	0:0	6	filter
arg	97:23	97:35	5	AV_LOG_ERROR
water	97:23	0:0	6	AV_LOG_ERROR
arg	97:37	97:60	5	"No such option: %s.\n"
water	97:37	0:0	6	"No such option: %s.\n"
arg	97:62	97:68	5	e->key
water	97:62	0:0	6	e
op	97:63	0:0	6	->
water	97:65	0:0	6	key
water	97:69	0:0	4	;
water	98:8	0:0	4	ret
op	98:12	0:0	4	=
water	98:14	0:0	4	AVERROR_OPTION_NOT_FOUND
water	98:38	0:0	4	;
goto	99:8	99:17	4	fail
water	99:13	0:0	5	fail
water	100:4	0:0	4	}
label	101:0	101:4	2	fail :
call	102:4	102:25	2	av_dict_free
arg	102:17	102:25	3	&options
op	102:17	0:0	4	&
water	102:18	0:0	4	options
water	102:26	0:0	2	;
return	103:4	103:14	2	ret
water	103:11	0:0	3	ret

func	2:0	15:0	0	static int	config_output_props
params	2:30	0:0	1	
param	2:31	2:52	2	AVFilterLink *	outlink
stmnts	0:0	14:12	1	
decl	4:4	4:39	2	AVFilterContext	*ctx
op	4:25	0:0	2	=
water	4:27	0:0	2	outlink
op	4:34	0:0	2	->
water	4:36	0:0	2	src
decl	5:4	5:43	2	FrameStepContext	*framestep
op	5:32	0:0	2	=
water	5:34	0:0	2	ctx
op	5:37	0:0	2	->
water	5:39	0:0	2	priv
decl	6:4	6:41	2	AVFilterLink	*inlink
op	6:25	0:0	2	=
water	6:27	0:0	2	ctx
op	6:30	0:0	2	->
water	6:32	0:0	2	inputs
op	6:38	0:0	2	[
water	6:39	0:0	2	0
op	6:40	0:0	2	]
water	7:4	0:0	2	outlink
op	7:11	0:0	2	->
water	7:13	0:0	2	flags
op	7:19	0:0	2	|=
water	7:22	0:0	2	FF_LINK_FLAG_REQUEST_LOOP
water	7:47	0:0	2	;
water	8:4	0:0	2	outlink
op	8:11	0:0	2	->
water	8:13	0:0	2	frame_rate
op	8:24	0:0	2	=
call	9:8	9:75	2	av_div_q
arg	9:17	9:35	3	inlink->frame_rate
water	9:17	0:0	4	inlink
op	9:23	0:0	4	->
water	9:25	0:0	4	frame_rate
arg	9:37	9:75	3	(AVRational){framestep->frame_step,1}
water	9:37	0:0	4	(
water	9:38	0:0	4	AVRational
water	9:48	0:0	4	)
water	9:49	0:0	4	{
water	9:50	0:0	4	framestep
op	9:59	0:0	4	->
water	9:61	0:0	4	frame_step
water	9:71	0:0	4	,
water	9:73	0:0	4	1
water	9:74	0:0	4	}
water	9:76	0:0	2	;
call	10:4	13:88	2	av_log
arg	10:11	10:14	3	ctx
water	10:11	0:0	4	ctx
arg	10:16	10:30	3	AV_LOG_VERBOSE
water	10:16	0:0	4	AV_LOG_VERBOSE
arg	10:32	10:88	3	"step:%d frame_rate:%d/%d(%f) -> frame_rate:%d/%d(%f)\n"
water	10:32	0:0	4	"step:%d frame_rate:%d/%d(%f) -> frame_rate:%d/%d(%f)\n"
arg	11:11	11:32	3	framestep->frame_step
water	11:11	0:0	4	framestep
op	11:20	0:0	4	->
water	11:22	0:0	4	frame_step
arg	12:11	12:33	3	inlink->frame_rate.num
water	12:11	0:0	4	inlink
op	12:17	0:0	4	->
water	12:19	0:0	4	frame_rate
op	12:29	0:0	4	.
water	12:30	0:0	4	num
arg	12:35	12:57	3	inlink->frame_rate.den
water	12:35	0:0	4	inlink
op	12:41	0:0	4	->
water	12:43	0:0	4	frame_rate
op	12:53	0:0	4	.
water	12:54	0:0	4	den
arg	12:59	12:85	3	av_q2d(inlink->frame_rate)
call	12:59	12:84	4	av_q2d
arg	12:66	12:84	5	inlink->frame_rate
water	12:66	0:0	6	inlink
op	12:72	0:0	6	->
water	12:74	0:0	6	frame_rate
arg	13:11	13:34	3	outlink->frame_rate.num
water	13:11	0:0	4	outlink
op	13:18	0:0	4	->
water	13:20	0:0	4	frame_rate
op	13:30	0:0	4	.
water	13:31	0:0	4	num
arg	13:36	13:59	3	outlink->frame_rate.den
water	13:36	0:0	4	outlink
op	13:43	0:0	4	->
water	13:45	0:0	4	frame_rate
op	13:55	0:0	4	.
water	13:56	0:0	4	den
arg	13:61	13:88	3	av_q2d(outlink->frame_rate)
call	13:61	13:87	4	av_q2d
arg	13:68	13:87	5	outlink->frame_rate
water	13:68	0:0	6	outlink
op	13:75	0:0	6	->
water	13:77	0:0	6	frame_rate
water	13:89	0:0	2	;
return	14:4	14:12	2	0
water	14:11	0:0	3	0

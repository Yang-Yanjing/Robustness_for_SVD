func	1:0	14:0	0	static int	show_streams
params	1:23	0:0	1	
param	1:24	1:40	2	WriterContext *	w
param	1:42	1:58	2	InputFile *	ifile
stmnts	0:0	13:14	1	
decl	3:4	3:45	2	AVFormatContext	*fmt_ctx
op	3:29	0:0	2	=
water	3:31	0:0	2	ifile
op	3:36	0:0	2	->
water	3:38	0:0	2	fmt_ctx
decl	4:4	4:18	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:18	2	int	ret
op	4:15	0:0	2	=
water	4:17	0:0	2	0
call	5:4	5:53	2	writer_print_section_header
arg	5:32	5:33	3	w
water	5:32	0:0	4	w
arg	5:35	5:53	3	SECTION_ID_STREAMS
water	5:35	0:0	4	SECTION_ID_STREAMS
water	5:54	0:0	2	;
for	6:4	11:8	2	(i = 0 ;i < ifile -> nb_streams;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:27	3	i < ifile -> nb_streams
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	ifile
op	6:25	0:0	4	->
water	6:27	0:0	4	nb_streams
forexpr	6:39	6:40	3	i ++
water	6:39	0:0	4	i
op	6:40	0:0	4	++
stmts	7:8	11:8	3	
if	7:8	11:8	4	(selected_streams [ i ])
cond	7:12	7:30	5	selected_streams [ i ]
water	7:12	0:0	6	selected_streams
op	7:28	0:0	6	[
water	7:29	0:0	6	i
op	7:30	0:0	6	]
stmts	7:33	11:8	5	
water	7:33	0:0	6	{
water	8:12	0:0	6	ret
op	8:16	0:0	6	=
call	8:18	8:66	6	show_stream
arg	8:30	8:31	7	w
water	8:30	0:0	8	w
arg	8:33	8:40	7	fmt_ctx
water	8:33	0:0	8	fmt_ctx
arg	8:42	8:43	7	i
water	8:42	0:0	8	i
arg	8:45	8:63	7	&ifile->streams[i]
op	8:45	0:0	8	&
water	8:46	0:0	8	ifile
op	8:51	0:0	8	->
water	8:53	0:0	8	streams
op	8:60	0:0	8	[
water	8:61	0:0	8	i
op	8:62	0:0	8	]
arg	8:65	8:66	7	0
water	8:65	0:0	8	0
water	8:67	0:0	6	;
if	9:12	10:21	6	(ret < 0)
cond	9:16	9:22	7	ret < 0
water	9:16	0:0	8	ret
op	9:20	0:0	8	<
water	9:22	0:0	8	0
stmts	10:16	10:21	7	
break	10:16	10:21	8	
water	11:8	0:0	6	}
call	12:4	12:33	2	writer_print_section_footer
arg	12:32	12:33	3	w
water	12:32	0:0	4	w
water	12:34	0:0	2	;
return	13:4	13:14	2	ret
water	13:11	0:0	3	ret

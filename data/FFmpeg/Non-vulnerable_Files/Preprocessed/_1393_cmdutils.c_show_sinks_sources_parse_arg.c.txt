func	1:0	21:0	0	static int	show_sinks_sources_parse_arg
params	1:39	0:0	1	
param	1:40	1:55	2	const char *	arg
param	1:57	1:67	2	char * *	dev
param	1:69	1:88	2	AVDictionary * *	opts
stmnts	0:0	20:12	1	
decl	3:4	3:11	2	int	ret
if	4:4	17:4	2	(arg)
cond	4:8	4:8	3	arg
water	4:8	0:0	4	arg
stmts	4:13	17:4	3	
water	4:13	0:0	4	{
decl	5:8	5:29	4	char	*opts_str
op	5:23	0:0	4	=
water	5:25	0:0	4	NULL
call	6:8	6:30	4	av_assert0
arg	6:19	6:30	5	dev&&opts
water	6:19	0:0	6	dev
op	6:23	0:0	6	&&
water	6:26	0:0	6	opts
water	6:31	0:0	4	;
op	7:8	0:0	4	*
water	7:9	0:0	4	dev
op	7:13	0:0	4	=
call	7:15	7:28	4	av_strdup
arg	7:25	7:28	5	arg
water	7:25	0:0	6	arg
water	7:29	0:0	4	;
if	8:8	9:34	4	(! * dev)
cond	8:12	8:14	5	! * dev
op	8:12	0:0	6	!
op	8:13	0:0	6	*
water	8:14	0:0	6	dev
stmts	9:12	9:34	5	
return	9:12	9:34	6	AVERROR(ENOMEM)
call	9:19	9:33	7	AVERROR
arg	9:27	9:33	8	ENOMEM
water	9:27	0:0	9	ENOMEM
if	10:8	16:8	4	(( opts_str =strchr (* dev ,',' ) ))
cond	10:12	10:41	5	( opts_str =strchr (* dev ,',' ) )
water	10:12	0:0	6	(
water	10:13	0:0	6	opts_str
op	10:22	0:0	6	=
call	10:24	10:40	6	strchr
arg	10:31	10:35	7	*dev
op	10:31	0:0	8	*
water	10:32	0:0	8	dev
arg	10:37	10:40	7	','
water	10:37	0:0	8	','
water	10:41	0:0	6	)
stmts	10:44	16:8	5	
water	10:44	0:0	6	{
op	11:12	0:0	6	*
water	11:13	0:0	6	(
water	11:14	0:0	6	opts_str
op	11:22	0:0	6	++
water	11:24	0:0	6	)
op	11:26	0:0	6	=
water	11:28	0:0	6	'\0'
water	11:32	0:0	6	;
if	12:12	15:12	6	(opts_str [ 0 ] && ( ( ret =av_dict_parse_string (opts ,opts_str ,"=" ,":" ,0 ) ) < 0 ))
cond	12:16	12:93	7	opts_str [ 0 ] && ( ( ret =av_dict_parse_string (opts ,opts_str ,"=" ,":" ,0 ) ) < 0 )
water	12:16	0:0	8	opts_str
op	12:24	0:0	8	[
water	12:25	0:0	8	0
op	12:26	0:0	8	]
op	12:28	0:0	8	&&
water	12:31	0:0	8	(
water	12:32	0:0	8	(
water	12:33	0:0	8	ret
op	12:37	0:0	8	=
call	12:39	12:87	8	av_dict_parse_string
arg	12:60	12:64	9	opts
water	12:60	0:0	10	opts
arg	12:66	12:74	9	opts_str
water	12:66	0:0	10	opts_str
arg	12:76	12:79	9	"="
water	12:76	0:0	10	"="
arg	12:81	12:84	9	":"
water	12:81	0:0	10	":"
arg	12:86	12:87	9	0
water	12:86	0:0	10	0
water	12:88	0:0	8	)
op	12:90	0:0	8	<
water	12:92	0:0	8	0
water	12:93	0:0	8	)
stmts	12:96	15:12	7	
water	12:96	0:0	8	{
call	13:16	13:28	8	av_freep
arg	13:25	13:28	9	dev
water	13:25	0:0	10	dev
water	13:29	0:0	8	;
return	14:16	14:26	8	ret
water	14:23	0:0	9	ret
water	15:12	0:0	8	}
water	16:8	0:0	6	}
water	17:4	0:0	4	}
else	17:6	19:89	2
stmts	18:8	19:89	3	
call	18:8	19:88	4	printf
arg	18:15	19:88	5	"\nDevice name is not provided.\n""You can pass devicename[,opt1=val1[,opt2=val2...]] as an argument.\n\n"
water	18:15	0:0	6	"\nDevice name is not provided.\n"
water	19:16	0:0	6	"You can pass devicename[,opt1=val1[,opt2=val2...]] as an argument.\n\n"
water	19:89	0:0	4	;
return	20:4	20:12	2	0
water	20:11	0:0	3	0

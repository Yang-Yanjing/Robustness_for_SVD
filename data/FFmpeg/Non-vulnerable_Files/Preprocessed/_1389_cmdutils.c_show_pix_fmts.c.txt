func	1:0	29:0	0	int	show_pix_fmts
params	1:17	0:0	1	
param	1:18	1:30	2	void *	optctx
param	1:32	1:47	2	const char *	opt
param	1:49	1:64	2	const char *	arg
stmnts	0:0	28:12	1	
decl	3:4	3:45	2	const AVPixFmtDescriptor	*pix_desc
op	3:39	0:0	2	=
water	3:41	0:0	2	NULL
call	4:4	11:20	2	printf
arg	4:11	11:20	3	"Pixel formats:\n""I.... = Supported Input  format for conversion\n"".O... = Supported Output format for conversion\n""..H.. = Hardware accelerated format\n""...P. = Paletted format\n""....B = Bitstream format\n""FLAGS NAME            NB_COMPONENTS BITS_PER_PIXEL\n""-----\n"
water	4:11	0:0	4	"Pixel formats:\n"
water	5:11	0:0	4	"I.... = Supported Input  format for conversion\n"
water	6:11	0:0	4	".O... = Supported Output format for conversion\n"
water	7:11	0:0	4	"..H.. = Hardware accelerated format\n"
water	8:11	0:0	4	"...P. = Paletted format\n"
water	9:11	0:0	4	"....B = Bitstream format\n"
water	10:11	0:0	4	"FLAGS NAME            NB_COMPONENTS BITS_PER_PIXEL\n"
water	11:11	0:0	4	"-----\n"
water	11:21	0:0	2	;
while	16:4	27:4	2	(( pix_desc =av_pix_fmt_desc_next (pix_desc ) ))
cond	16:11	16:53	3	( pix_desc =av_pix_fmt_desc_next (pix_desc ) )
water	16:11	0:0	4	(
water	16:12	0:0	4	pix_desc
op	16:21	0:0	4	=
call	16:23	16:52	4	av_pix_fmt_desc_next
arg	16:44	16:52	5	pix_desc
water	16:44	0:0	6	pix_desc
water	16:53	0:0	4	)
stmts	16:56	27:4	3	
water	16:56	0:0	4	{
decl	17:8	17:69	4	enum AVPixelFormat	pix_fmt
op	17:35	0:0	4	=
call	17:37	17:68	5	av_pix_fmt_desc_get_id
arg	17:60	17:68	6	pix_desc
water	17:60	0:0	7	pix_desc
call	18:8	26:46	4	printf
arg	18:15	18:59	5	"%c%c%c%c%c %-16s       %d            %2d\n"
water	18:15	0:0	6	"%c%c%c%c%c %-16s       %d            %2d\n"
arg	19:15	19:70	5	sws_isSupportedInput(pix_fmt)?'I':'.'
call	19:15	19:44	6	sws_isSupportedInput
arg	19:37	19:44	7	pix_fmt
water	19:37	0:0	8	pix_fmt
water	19:59	0:0	6	?
water	19:61	0:0	6	'I'
water	19:65	0:0	6	:
water	19:67	0:0	6	'.'
arg	20:15	20:70	5	sws_isSupportedOutput(pix_fmt)?'O':'.'
call	20:15	20:44	6	sws_isSupportedOutput
arg	20:37	20:44	7	pix_fmt
water	20:37	0:0	8	pix_fmt
water	20:59	0:0	6	?
water	20:61	0:0	6	'O'
water	20:65	0:0	6	:
water	20:67	0:0	6	'.'
arg	21:15	21:70	5	pix_desc->flags&AV_PIX_FMT_FLAG_HWACCEL?'H':'.'
water	21:15	0:0	6	pix_desc
op	21:23	0:0	6	->
water	21:25	0:0	6	flags
op	21:31	0:0	6	&
water	21:33	0:0	6	AV_PIX_FMT_FLAG_HWACCEL
water	21:59	0:0	6	?
water	21:61	0:0	6	'H'
water	21:65	0:0	6	:
water	21:67	0:0	6	'.'
arg	22:15	22:70	5	pix_desc->flags&AV_PIX_FMT_FLAG_PAL?'P':'.'
water	22:15	0:0	6	pix_desc
op	22:23	0:0	6	->
water	22:25	0:0	6	flags
op	22:31	0:0	6	&
water	22:33	0:0	6	AV_PIX_FMT_FLAG_PAL
water	22:59	0:0	6	?
water	22:61	0:0	6	'P'
water	22:65	0:0	6	:
water	22:67	0:0	6	'.'
arg	23:15	23:70	5	pix_desc->flags&AV_PIX_FMT_FLAG_BITSTREAM?'B':'.'
water	23:15	0:0	6	pix_desc
op	23:23	0:0	6	->
water	23:25	0:0	6	flags
op	23:31	0:0	6	&
water	23:33	0:0	6	AV_PIX_FMT_FLAG_BITSTREAM
water	23:59	0:0	6	?
water	23:61	0:0	6	'B'
water	23:65	0:0	6	:
water	23:67	0:0	6	'.'
arg	24:15	24:29	5	pix_desc->name
water	24:15	0:0	6	pix_desc
op	24:23	0:0	6	->
water	24:25	0:0	6	name
arg	25:15	25:38	5	pix_desc->nb_components
water	25:15	0:0	6	pix_desc
op	25:23	0:0	6	->
water	25:25	0:0	6	nb_components
arg	26:15	26:46	5	av_get_bits_per_pixel(pix_desc)
call	26:15	26:45	6	av_get_bits_per_pixel
arg	26:37	26:45	7	pix_desc
water	26:37	0:0	8	pix_desc
water	26:47	0:0	4	;
water	27:4	0:0	4	}
return	28:4	28:12	2	0
water	28:11	0:0	3	0

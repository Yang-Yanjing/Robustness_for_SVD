func	1:0	27:0	0	static int	parse_video_info
params	1:27	0:0	1	
param	1:28	1:43	2	AVIOContext *	pb
param	1:45	1:57	2	AVStream *	st
stmnts	0:0	26:12	1	
decl	3:4	3:17	2	uint16_t	size
decl	4:4	4:20	2	unsigned int	tag
water	5:4	0:0	2	st
op	5:6	0:0	2	->
water	5:8	0:0	2	codec
op	5:13	0:0	2	->
water	5:15	0:0	2	width
op	5:22	0:0	2	=
call	5:24	5:36	2	avio_rl32
arg	5:34	5:36	3	pb
water	5:34	0:0	4	pb
water	5:37	0:0	2	;
water	6:4	0:0	2	st
op	6:6	0:0	2	->
water	6:8	0:0	2	codec
op	6:13	0:0	2	->
water	6:15	0:0	2	height
op	6:22	0:0	2	=
call	6:24	6:36	2	avio_rl32
arg	6:34	6:36	3	pb
water	6:34	0:0	4	pb
water	6:37	0:0	2	;
call	7:4	7:19	2	avio_skip
arg	7:14	7:16	3	pb
water	7:14	0:0	4	pb
arg	7:18	7:19	3	1
water	7:18	0:0	4	1
water	7:20	0:0	2	;
water	8:4	0:0	2	size
op	8:9	0:0	2	=
call	8:11	8:23	2	avio_rl16
arg	8:21	8:23	3	pb
water	8:21	0:0	4	pb
water	8:24	0:0	2	;
water	9:4	0:0	2	tag
op	9:9	0:0	2	=
call	9:11	9:41	2	ff_get_bmp_header
arg	9:29	9:31	3	pb
water	9:29	0:0	4	pb
arg	9:33	9:35	3	st
water	9:33	0:0	4	st
arg	9:37	9:41	3	NULL
water	9:37	0:0	4	NULL
water	9:42	0:0	2	;
water	10:4	0:0	2	st
op	10:6	0:0	2	->
water	10:8	0:0	2	codec
op	10:13	0:0	2	->
water	10:15	0:0	2	codec_tag
op	10:25	0:0	2	=
water	10:27	0:0	2	tag
water	10:30	0:0	2	;
water	11:4	0:0	2	st
op	11:6	0:0	2	->
water	11:8	0:0	2	codec
op	11:13	0:0	2	->
water	11:15	0:0	2	codec_id
op	11:25	0:0	2	=
call	11:27	11:65	2	ff_codec_get_id
arg	11:43	11:60	3	ff_codec_bmp_tags
water	11:43	0:0	4	ff_codec_bmp_tags
arg	11:62	11:65	3	tag
water	11:62	0:0	4	tag
water	11:66	0:0	2	;
if	12:4	25:4	2	(size > BMP_HEADER_SIZE)
cond	12:8	12:15	3	size > BMP_HEADER_SIZE
water	12:8	0:0	4	size
op	12:13	0:0	4	>
water	12:15	0:0	4	BMP_HEADER_SIZE
stmts	12:32	25:4	3	
water	12:32	0:0	4	{
decl	13:8	13:15	4	int	ret
water	14:8	0:0	4	st
op	14:10	0:0	4	->
water	14:12	0:0	4	codec
op	14:17	0:0	4	->
water	14:19	0:0	4	extradata_size
op	14:35	0:0	4	=
water	14:37	0:0	4	size
op	14:42	0:0	4	-
water	14:44	0:0	4	BMP_HEADER_SIZE
water	14:59	0:0	4	;
if	15:8	19:8	4	(! ( st -> codec -> extradata =av_malloc (st -> codec -> extradata_size + AV_INPUT_BUFFER_PADDING_SIZE ) ))
cond	15:12	16:76	5	! ( st -> codec -> extradata =av_malloc (st -> codec -> extradata_size + AV_INPUT_BUFFER_PADDING_SIZE ) )
op	15:12	0:0	6	!
water	15:13	0:0	6	(
water	15:14	0:0	6	st
op	15:16	0:0	6	->
water	15:18	0:0	6	codec
op	15:23	0:0	6	->
water	15:25	0:0	6	extradata
op	15:35	0:0	6	=
call	15:37	16:75	6	av_malloc
arg	15:47	16:75	7	st->codec->extradata_size+AV_INPUT_BUFFER_PADDING_SIZE
water	15:47	0:0	8	st
op	15:49	0:0	8	->
water	15:51	0:0	8	codec
op	15:56	0:0	8	->
water	15:58	0:0	8	extradata_size
op	15:73	0:0	8	+
water	16:47	0:0	8	AV_INPUT_BUFFER_PADDING_SIZE
water	16:76	0:0	6	)
stmts	16:79	19:8	5	
water	16:79	0:0	6	{
water	17:12	0:0	6	st
op	17:14	0:0	6	->
water	17:16	0:0	6	codec
op	17:21	0:0	6	->
water	17:23	0:0	6	extradata_size
op	17:38	0:0	6	=
water	17:40	0:0	6	0
water	17:41	0:0	6	;
return	18:12	18:34	6	AVERROR(ENOMEM)
call	18:19	18:33	7	AVERROR
arg	18:27	18:33	8	ENOMEM
water	18:27	0:0	9	ENOMEM
water	19:8	0:0	6	}
call	20:8	21:43	4	memset
arg	20:15	20:64	5	st->codec->extradata+st->codec->extradata_size
water	20:15	0:0	6	st
op	20:17	0:0	6	->
water	20:19	0:0	6	codec
op	20:24	0:0	6	->
water	20:26	0:0	6	extradata
op	20:36	0:0	6	+
water	20:38	0:0	6	st
op	20:40	0:0	6	->
water	20:42	0:0	6	codec
op	20:47	0:0	6	->
water	20:49	0:0	6	extradata_size
arg	20:66	20:67	5	0
water	20:66	0:0	6	0
arg	21:15	21:43	5	AV_INPUT_BUFFER_PADDING_SIZE
water	21:15	0:0	6	AV_INPUT_BUFFER_PADDING_SIZE
water	21:44	0:0	4	;
if	22:8	24:22	4	(( ret =avio_read (pb ,st -> codec -> extradata ,st -> codec -> extradata_size ) ) < 0)
cond	22:12	23:59	5	( ret =avio_read (pb ,st -> codec -> extradata ,st -> codec -> extradata_size ) ) < 0
water	22:12	0:0	6	(
water	22:13	0:0	6	ret
op	22:17	0:0	6	=
call	22:19	23:54	6	avio_read
arg	22:29	22:31	7	pb
water	22:29	0:0	8	pb
arg	22:33	22:53	7	st->codec->extradata
water	22:33	0:0	8	st
op	22:35	0:0	8	->
water	22:37	0:0	8	codec
op	22:42	0:0	8	->
water	22:44	0:0	8	extradata
arg	23:29	23:54	7	st->codec->extradata_size
water	23:29	0:0	8	st
op	23:31	0:0	8	->
water	23:33	0:0	8	codec
op	23:38	0:0	8	->
water	23:40	0:0	8	extradata_size
water	23:55	0:0	6	)
op	23:57	0:0	6	<
water	23:59	0:0	6	0
stmts	24:12	24:22	5	
return	24:12	24:22	6	ret
water	24:19	0:0	7	ret
water	25:4	0:0	4	}
return	26:4	26:12	2	0
water	26:11	0:0	3	0

func	1:0	55:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	54:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:59	2	LenscorrectionCtx	*rect
op	5:28	0:0	2	=
water	5:30	0:0	2	(
water	5:31	0:0	2	LenscorrectionCtx
op	5:48	0:0	2	*
water	5:49	0:0	2	)
water	5:50	0:0	2	ctx
op	5:53	0:0	2	->
water	5:55	0:0	2	priv
decl	6:4	6:71	2	AVFrame	*out
op	6:17	0:0	2	=
call	6:19	6:70	3	ff_get_video_buffer
arg	6:39	6:46	4	outlink
water	6:39	0:0	5	outlink
arg	6:48	6:58	4	outlink->w
water	6:48	0:0	5	outlink
op	6:55	0:0	5	->
water	6:57	0:0	5	w
arg	6:60	6:70	4	outlink->h
water	6:60	0:0	5	outlink
op	6:67	0:0	5	->
water	6:69	0:0	5	h
decl	7:4	7:13	2	int	plane
if	8:4	11:4	2	(! out)
cond	8:8	8:9	3	! out
op	8:8	0:0	4	!
water	8:9	0:0	4	out
stmts	8:14	11:4	3	
water	8:14	0:0	4	{
call	9:8	9:25	4	av_frame_free
arg	9:22	9:25	5	&in
op	9:22	0:0	6	&
water	9:23	0:0	6	in
water	9:26	0:0	4	;
return	10:8	10:30	4	AVERROR(ENOMEM)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	ENOMEM
water	10:23	0:0	7	ENOMEM
water	11:4	0:0	4	}
call	12:4	12:31	2	av_frame_copy_props
arg	12:24	12:27	3	out
water	12:24	0:0	4	out
arg	12:29	12:31	3	in
water	12:29	0:0	4	in
water	12:32	0:0	2	;
for	13:4	52:4	2	(plane = 0 ;plane < rect -> nb_planes;++ plane)
forinit	13:9	13:18	3	plane = 0 ;
water	13:9	0:0	4	plane
op	13:15	0:0	4	=
water	13:17	0:0	4	0
water	13:18	0:0	4	;
cond	13:20	13:34	3	plane < rect -> nb_planes
water	13:20	0:0	4	plane
op	13:26	0:0	4	<
water	13:28	0:0	4	rect
op	13:32	0:0	4	->
water	13:34	0:0	4	nb_planes
forexpr	13:45	13:47	3	++ plane
op	13:45	0:0	4	++
water	13:47	0:0	4	plane
stmts	13:54	52:4	3	
water	13:54	0:0	4	{
decl	14:8	14:60	4	int	hsub
op	14:17	0:0	4	=
water	14:19	0:0	4	plane
op	14:25	0:0	4	==
water	14:28	0:0	4	1
op	14:30	0:0	4	||
water	14:33	0:0	4	plane
op	14:39	0:0	4	==
water	14:42	0:0	4	2
water	14:44	0:0	4	?
water	14:46	0:0	4	rect
op	14:50	0:0	4	->
water	14:52	0:0	4	hsub
water	14:57	0:0	4	:
water	14:59	0:0	4	0
decl	15:8	15:60	4	int	vsub
op	15:17	0:0	4	=
water	15:19	0:0	4	plane
op	15:25	0:0	4	==
water	15:28	0:0	4	1
op	15:30	0:0	4	||
water	15:33	0:0	4	plane
op	15:39	0:0	4	==
water	15:42	0:0	4	2
water	15:44	0:0	4	?
water	15:46	0:0	4	rect
op	15:50	0:0	4	->
water	15:52	0:0	4	vsub
water	15:57	0:0	4	:
water	15:59	0:0	4	0
decl	16:8	16:28	4	int	hdiv
op	16:17	0:0	4	=
water	16:19	0:0	4	1
op	16:21	0:0	4	<<
water	16:24	0:0	4	hsub
decl	17:8	17:28	4	int	vdiv
op	17:17	0:0	4	=
water	17:19	0:0	4	1
op	17:21	0:0	4	<<
water	17:24	0:0	4	vsub
decl	18:8	18:34	4	int	w
op	18:14	0:0	4	=
water	18:16	0:0	4	rect
op	18:20	0:0	4	->
water	18:22	0:0	4	width
op	18:28	0:0	4	/
water	18:30	0:0	4	hdiv
decl	19:8	19:35	4	int	h
op	19:14	0:0	4	=
water	19:16	0:0	4	rect
op	19:20	0:0	4	->
water	19:22	0:0	4	height
op	19:29	0:0	4	/
water	19:31	0:0	4	vdiv
decl	20:8	20:34	4	int	xcenter
op	20:20	0:0	4	=
water	20:22	0:0	4	rect
op	20:26	0:0	4	->
water	20:28	0:0	4	cx
op	20:31	0:0	4	*
water	20:33	0:0	4	w
decl	21:8	21:34	4	int	ycenter
op	21:20	0:0	4	=
water	21:22	0:0	4	rect
op	21:26	0:0	4	->
water	21:28	0:0	4	cy
op	21:31	0:0	4	*
water	21:33	0:0	4	h
decl	22:8	22:35	4	int	k1
op	22:15	0:0	4	=
water	22:17	0:0	4	rect
op	22:21	0:0	4	->
water	22:23	0:0	4	k1
op	22:26	0:0	4	*
water	22:28	0:0	4	(
water	22:29	0:0	4	1
op	22:30	0:0	4	<<
water	22:32	0:0	4	24
water	22:34	0:0	4	)
decl	23:8	23:35	4	int	k2
op	23:15	0:0	4	=
water	23:17	0:0	4	rect
op	23:21	0:0	4	->
water	23:23	0:0	4	k2
op	23:26	0:0	4	*
water	23:28	0:0	4	(
water	23:29	0:0	4	1
op	23:30	0:0	4	<<
water	23:32	0:0	4	24
water	23:34	0:0	4	)
decl	24:8	31:27	4	ThreadData	td
op	24:22	0:0	4	=
water	24:24	0:0	4	{
op	25:12	0:0	4	.
water	25:13	0:0	4	in
op	25:16	0:0	4	=
water	25:18	0:0	4	in
water	25:20	0:0	4	,
op	26:12	0:0	4	.
water	26:13	0:0	4	out
op	26:18	0:0	4	=
water	26:20	0:0	4	out
water	26:23	0:0	4	,
op	27:12	0:0	4	.
water	27:13	0:0	4	w
op	27:16	0:0	4	=
water	27:18	0:0	4	w
water	27:19	0:0	4	,
op	28:12	0:0	4	.
water	28:13	0:0	4	h
op	28:16	0:0	4	=
water	28:18	0:0	4	h
water	28:19	0:0	4	,
op	29:12	0:0	4	.
water	29:13	0:0	4	xcenter
op	29:21	0:0	4	=
water	29:23	0:0	4	xcenter
water	29:30	0:0	4	,
op	30:12	0:0	4	.
water	30:13	0:0	4	ycenter
op	30:21	0:0	4	=
water	30:23	0:0	4	ycenter
water	30:30	0:0	4	,
op	31:12	0:0	4	.
water	31:13	0:0	4	plane
op	31:19	0:0	4	=
water	31:21	0:0	4	plane
water	31:26	0:0	4	}
if	32:8	49:8	4	(! rect -> correction [ plane ])
cond	32:12	32:35	5	! rect -> correction [ plane ]
op	32:12	0:0	6	!
water	32:13	0:0	6	rect
op	32:17	0:0	6	->
water	32:19	0:0	6	correction
op	32:29	0:0	6	[
water	32:30	0:0	6	plane
op	32:35	0:0	6	]
stmts	32:38	49:8	5	
water	32:38	0:0	6	{
decl	33:12	33:19	6	int	i
water	33:17	0:0	6	,
decl	33:12	33:19	6	int	j
decl	34:12	34:61	6	const int64_t	r2inv
op	34:32	0:0	6	=
water	34:34	0:0	6	(
water	34:35	0:0	6	4
water	34:36	0:0	6	LL
op	34:38	0:0	6	<<
water	34:40	0:0	6	60
water	34:42	0:0	6	)
op	34:44	0:0	6	/
water	34:46	0:0	6	(
water	34:47	0:0	6	w
op	34:49	0:0	6	*
water	34:51	0:0	6	w
op	34:53	0:0	6	+
water	34:55	0:0	6	h
op	34:57	0:0	6	*
water	34:59	0:0	6	h
water	34:60	0:0	6	)
water	35:12	0:0	6	rect
op	35:16	0:0	6	->
water	35:18	0:0	6	correction
op	35:28	0:0	6	[
water	35:29	0:0	6	plane
op	35:34	0:0	6	]
op	35:36	0:0	6	=
call	35:38	35:87	6	av_malloc_array
arg	35:54	35:55	7	w
water	35:54	0:0	8	w
arg	35:57	35:87	7	h*sizeof(**rect->correction)
water	35:57	0:0	8	h
op	35:59	0:0	8	*
op	35:61	0:0	8	sizeof
water	35:67	0:0	8	(
op	35:68	0:0	8	*
op	35:69	0:0	8	*
water	35:70	0:0	8	rect
op	35:74	0:0	8	->
water	35:76	0:0	8	correction
water	35:86	0:0	8	)
water	35:88	0:0	6	;
if	36:12	37:38	6	(! rect -> correction [ plane ])
cond	36:16	36:39	7	! rect -> correction [ plane ]
op	36:16	0:0	8	!
water	36:17	0:0	8	rect
op	36:21	0:0	8	->
water	36:23	0:0	8	correction
op	36:33	0:0	8	[
water	36:34	0:0	8	plane
op	36:39	0:0	8	]
stmts	37:16	37:38	7	
return	37:16	37:38	8	AVERROR(ENOMEM)
call	37:23	37:37	9	AVERROR
arg	37:31	37:37	10	ENOMEM
water	37:31	0:0	11	ENOMEM
for	38:12	48:12	6	(j = 0 ;j < h;j ++)
forinit	38:17	38:22	7	j = 0 ;
water	38:17	0:0	8	j
op	38:19	0:0	8	=
water	38:21	0:0	8	0
water	38:22	0:0	8	;
cond	38:24	38:28	7	j < h
water	38:24	0:0	8	j
op	38:26	0:0	8	<
water	38:28	0:0	8	h
forexpr	38:31	38:32	7	j ++
water	38:31	0:0	8	j
op	38:32	0:0	8	++
stmts	38:36	48:12	7	
water	38:36	0:0	8	{
decl	39:16	39:45	8	const int	off_y
op	39:32	0:0	8	=
water	39:34	0:0	8	j
op	39:36	0:0	8	-
water	39:38	0:0	8	ycenter
decl	40:16	40:48	8	const int	off_y2
op	40:33	0:0	8	=
water	40:35	0:0	8	off_y
op	40:41	0:0	8	*
water	40:43	0:0	8	off_y
for	41:16	47:16	8	(i = 0 ;i < w;i ++)
forinit	41:21	41:26	9	i = 0 ;
water	41:21	0:0	10	i
op	41:23	0:0	10	=
water	41:25	0:0	10	0
water	41:26	0:0	10	;
cond	41:28	41:32	9	i < w
water	41:28	0:0	10	i
op	41:30	0:0	10	<
water	41:32	0:0	10	w
forexpr	41:35	41:36	9	i ++
water	41:35	0:0	10	i
op	41:36	0:0	10	++
stmts	41:40	47:16	9	
water	41:40	0:0	10	{
decl	42:20	42:49	10	const int	off_x
op	42:36	0:0	10	=
water	42:38	0:0	10	i
op	42:40	0:0	10	-
water	42:42	0:0	10	xcenter
decl	43:20	43:91	10	const int64_t	r2
op	43:37	0:0	10	=
water	43:39	0:0	10	(
water	43:40	0:0	10	(
water	43:41	0:0	10	off_x
op	43:47	0:0	10	*
water	43:49	0:0	10	off_x
op	43:55	0:0	10	+
water	43:57	0:0	10	off_y2
water	43:63	0:0	10	)
op	43:65	0:0	10	*
water	43:67	0:0	10	r2inv
op	43:73	0:0	10	+
water	43:75	0:0	10	(
water	43:76	0:0	10	1
water	43:77	0:0	10	LL
op	43:79	0:0	10	<<
water	43:81	0:0	10	31
water	43:83	0:0	10	)
water	43:84	0:0	10	)
op	43:86	0:0	10	>>
water	43:89	0:0	10	32
decl	44:20	44:64	10	const int64_t	r4
op	44:37	0:0	10	=
water	44:39	0:0	10	(
water	44:40	0:0	10	r2
op	44:43	0:0	10	*
water	44:45	0:0	10	r2
op	44:48	0:0	10	+
water	44:50	0:0	10	(
water	44:51	0:0	10	1
op	44:52	0:0	10	<<
water	44:54	0:0	10	27
water	44:56	0:0	10	)
water	44:57	0:0	10	)
op	44:59	0:0	10	>>
water	44:62	0:0	10	28
decl	45:20	45:91	10	const int	radius_mult
op	45:42	0:0	10	=
water	45:44	0:0	10	(
water	45:45	0:0	10	r2
op	45:48	0:0	10	*
water	45:50	0:0	10	k1
op	45:53	0:0	10	+
water	45:55	0:0	10	r4
op	45:58	0:0	10	*
water	45:60	0:0	10	k2
op	45:63	0:0	10	+
water	45:65	0:0	10	(
water	45:66	0:0	10	1
water	45:67	0:0	10	LL
op	45:69	0:0	10	<<
water	45:71	0:0	10	27
water	45:73	0:0	10	)
op	45:75	0:0	10	+
water	45:77	0:0	10	(
water	45:78	0:0	10	1
water	45:79	0:0	10	LL
op	45:81	0:0	10	<<
water	45:83	0:0	10	52
water	45:85	0:0	10	)
water	45:86	0:0	10	)
op	45:87	0:0	10	>>
water	45:89	0:0	10	28
water	46:20	0:0	10	rect
op	46:24	0:0	10	->
water	46:26	0:0	10	correction
op	46:36	0:0	10	[
water	46:37	0:0	10	plane
op	46:42	0:0	10	]
op	46:43	0:0	10	[
water	46:44	0:0	10	j
op	46:46	0:0	10	*
water	46:48	0:0	10	w
op	46:50	0:0	10	+
water	46:52	0:0	10	i
op	46:53	0:0	10	]
op	46:55	0:0	10	=
water	46:57	0:0	10	radius_mult
water	46:68	0:0	10	;
water	47:16	0:0	10	}
water	48:12	0:0	8	}
water	49:8	0:0	6	}
water	50:8	0:0	4	td
op	50:10	0:0	4	.
water	50:11	0:0	4	correction
op	50:22	0:0	4	=
water	50:24	0:0	4	rect
op	50:28	0:0	4	->
water	50:30	0:0	4	correction
op	50:40	0:0	4	[
water	50:41	0:0	4	plane
op	50:46	0:0	4	]
water	50:47	0:0	4	;
call	51:8	51:93	4	ctx->internal->execute
arg	51:31	51:34	5	ctx
water	51:31	0:0	6	ctx
arg	51:36	51:48	5	filter_slice
water	51:36	0:0	6	filter_slice
arg	51:50	51:53	5	&td
op	51:50	0:0	6	&
water	51:51	0:0	6	td
arg	51:55	51:59	5	NULL
water	51:55	0:0	6	NULL
arg	51:61	51:93	5	FFMIN(h,ctx->graph->nb_threads)
call	51:61	51:92	6	FFMIN
arg	51:67	51:68	7	h
water	51:67	0:0	8	h
arg	51:70	51:92	7	ctx->graph->nb_threads
water	51:70	0:0	8	ctx
op	51:73	0:0	8	->
water	51:75	0:0	8	graph
op	51:80	0:0	8	->
water	51:82	0:0	8	nb_threads
water	51:94	0:0	4	;
water	52:4	0:0	4	}
call	53:4	53:21	2	av_frame_free
arg	53:18	53:21	3	&in
op	53:18	0:0	4	&
water	53:19	0:0	4	in
water	53:22	0:0	2	;
return	54:4	54:40	2	ff_filter_frame(outlink,out)
call	54:11	54:39	3	ff_filter_frame
arg	54:27	54:34	4	outlink
water	54:27	0:0	5	outlink
arg	54:36	54:39	4	out
water	54:36	0:0	5	out

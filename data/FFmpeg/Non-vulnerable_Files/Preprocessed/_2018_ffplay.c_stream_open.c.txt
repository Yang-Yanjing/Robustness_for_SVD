func	1:0	49:0	0	static VideoState *	stream_open
params	1:30	0:0	1	
param	1:31	1:51	2	const char *	filename
param	1:53	1:75	2	AVInputFormat *	iformat
stmnts	0:0	48:13	1	
decl	3:4	3:18	2	VideoState	*is
water	4:4	0:0	2	is
op	4:7	0:0	2	=
call	4:9	4:38	2	av_mallocz
arg	4:20	4:38	3	sizeof(VideoState)
op	4:20	0:0	4	sizeof
water	4:26	0:0	4	(
water	4:27	0:0	4	VideoState
water	4:37	0:0	4	)
water	4:39	0:0	2	;
if	5:4	6:19	2	(! is)
cond	5:8	5:9	3	! is
op	5:8	0:0	4	!
water	5:9	0:0	4	is
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
water	7:4	0:0	2	is
op	7:6	0:0	2	->
water	7:8	0:0	2	filename
op	7:17	0:0	2	=
call	7:19	7:37	2	av_strdup
arg	7:29	7:37	3	filename
water	7:29	0:0	4	filename
water	7:38	0:0	2	;
if	8:4	9:17	2	(! is -> filename)
cond	8:8	8:13	3	! is -> filename
op	8:8	0:0	4	!
water	8:9	0:0	4	is
op	8:11	0:0	4	->
water	8:13	0:0	4	filename
stmts	9:8	9:17	3	
goto	9:8	9:17	4	fail
water	9:13	0:0	5	fail
water	10:4	0:0	2	is
op	10:6	0:0	2	->
water	10:8	0:0	2	iformat
op	10:16	0:0	2	=
water	10:18	0:0	2	iformat
water	10:25	0:0	2	;
water	11:4	0:0	2	is
op	11:6	0:0	2	->
water	11:8	0:0	2	ytop
op	11:16	0:0	2	=
water	11:18	0:0	2	0
water	11:19	0:0	2	;
water	12:4	0:0	2	is
op	12:6	0:0	2	->
water	12:8	0:0	2	xleft
op	12:16	0:0	2	=
water	12:18	0:0	2	0
water	12:19	0:0	2	;
if	14:4	15:17	2	(frame_queue_init (& is -> pictq ,& is -> videoq ,VIDEO_PICTURE_QUEUE_SIZE ,1 ) < 0)
cond	14:8	14:81	3	frame_queue_init (& is -> pictq ,& is -> videoq ,VIDEO_PICTURE_QUEUE_SIZE ,1 ) < 0
call	14:8	14:77	4	frame_queue_init
arg	14:25	14:35	5	&is->pictq
op	14:25	0:0	6	&
water	14:26	0:0	6	is
op	14:28	0:0	6	->
water	14:30	0:0	6	pictq
arg	14:37	14:48	5	&is->videoq
op	14:37	0:0	6	&
water	14:38	0:0	6	is
op	14:40	0:0	6	->
water	14:42	0:0	6	videoq
arg	14:50	14:74	5	VIDEO_PICTURE_QUEUE_SIZE
water	14:50	0:0	6	VIDEO_PICTURE_QUEUE_SIZE
arg	14:76	14:77	5	1
water	14:76	0:0	6	1
op	14:79	0:0	4	<
water	14:81	0:0	4	0
stmts	15:8	15:17	3	
goto	15:8	15:17	4	fail
water	15:13	0:0	5	fail
if	16:4	17:17	2	(frame_queue_init (& is -> subpq ,& is -> subtitleq ,SUBPICTURE_QUEUE_SIZE ,0 ) < 0)
cond	16:8	16:81	3	frame_queue_init (& is -> subpq ,& is -> subtitleq ,SUBPICTURE_QUEUE_SIZE ,0 ) < 0
call	16:8	16:77	4	frame_queue_init
arg	16:25	16:35	5	&is->subpq
op	16:25	0:0	6	&
water	16:26	0:0	6	is
op	16:28	0:0	6	->
water	16:30	0:0	6	subpq
arg	16:37	16:51	5	&is->subtitleq
op	16:37	0:0	6	&
water	16:38	0:0	6	is
op	16:40	0:0	6	->
water	16:42	0:0	6	subtitleq
arg	16:53	16:74	5	SUBPICTURE_QUEUE_SIZE
water	16:53	0:0	6	SUBPICTURE_QUEUE_SIZE
arg	16:76	16:77	5	0
water	16:76	0:0	6	0
op	16:79	0:0	4	<
water	16:81	0:0	4	0
stmts	17:8	17:17	3	
goto	17:8	17:17	4	fail
water	17:13	0:0	5	fail
if	18:4	19:17	2	(frame_queue_init (& is -> sampq ,& is -> audioq ,SAMPLE_QUEUE_SIZE ,1 ) < 0)
cond	18:8	18:74	3	frame_queue_init (& is -> sampq ,& is -> audioq ,SAMPLE_QUEUE_SIZE ,1 ) < 0
call	18:8	18:70	4	frame_queue_init
arg	18:25	18:35	5	&is->sampq
op	18:25	0:0	6	&
water	18:26	0:0	6	is
op	18:28	0:0	6	->
water	18:30	0:0	6	sampq
arg	18:37	18:48	5	&is->audioq
op	18:37	0:0	6	&
water	18:38	0:0	6	is
op	18:40	0:0	6	->
water	18:42	0:0	6	audioq
arg	18:50	18:67	5	SAMPLE_QUEUE_SIZE
water	18:50	0:0	6	SAMPLE_QUEUE_SIZE
arg	18:69	18:70	5	1
water	18:69	0:0	6	1
op	18:72	0:0	4	<
water	18:74	0:0	4	0
stmts	19:8	19:17	3	
goto	19:8	19:17	4	fail
water	19:13	0:0	5	fail
if	20:4	23:17	2	(packet_queue_init (& is -> videoq ) < 0 ||packet_queue_init (& is -> audioq ) < 0 ||packet_queue_init (& is -> subtitleq ) < 0)
cond	20:8	22:44	3	packet_queue_init (& is -> videoq ) < 0 ||packet_queue_init (& is -> audioq ) < 0 ||packet_queue_init (& is -> subtitleq ) < 0
call	20:8	20:37	4	packet_queue_init
arg	20:26	20:37	5	&is->videoq
op	20:26	0:0	6	&
water	20:27	0:0	6	is
op	20:29	0:0	6	->
water	20:31	0:0	6	videoq
op	20:39	0:0	4	<
water	20:41	0:0	4	0
op	20:43	0:0	4	||
call	21:8	21:37	4	packet_queue_init
arg	21:26	21:37	5	&is->audioq
op	21:26	0:0	6	&
water	21:27	0:0	6	is
op	21:29	0:0	6	->
water	21:31	0:0	6	audioq
op	21:39	0:0	4	<
water	21:41	0:0	4	0
op	21:43	0:0	4	||
call	22:8	22:40	4	packet_queue_init
arg	22:26	22:40	5	&is->subtitleq
op	22:26	0:0	6	&
water	22:27	0:0	6	is
op	22:29	0:0	6	->
water	22:31	0:0	6	subtitleq
op	22:42	0:0	4	<
water	22:44	0:0	4	0
stmts	23:8	23:17	3	
goto	23:8	23:17	4	fail
water	23:13	0:0	5	fail
if	24:4	27:4	2	(! ( is -> continue_read_thread =SDL_CreateCond ( ) ))
cond	24:8	24:53	3	! ( is -> continue_read_thread =SDL_CreateCond ( ) )
op	24:8	0:0	4	!
water	24:9	0:0	4	(
water	24:10	0:0	4	is
op	24:12	0:0	4	->
water	24:14	0:0	4	continue_read_thread
op	24:35	0:0	4	=
call	24:37	24:52	4	SDL_CreateCond
water	24:53	0:0	4	)
stmts	24:56	27:4	3	
water	24:56	0:0	4	{
call	25:8	25:75	4	av_log
arg	25:15	25:19	5	NULL
water	25:15	0:0	6	NULL
arg	25:21	25:33	5	AV_LOG_FATAL
water	25:21	0:0	6	AV_LOG_FATAL
arg	25:35	25:59	5	"SDL_CreateCond(): %s\n"
water	25:35	0:0	6	"SDL_CreateCond(): %s\n"
arg	25:61	25:75	5	SDL_GetError()
call	25:61	25:74	6	SDL_GetError
water	25:76	0:0	4	;
goto	26:8	26:17	4	fail
water	26:13	0:0	5	fail
water	27:4	0:0	4	}
call	28:4	28:46	2	init_clock
arg	28:15	28:26	3	&is->vidclk
op	28:15	0:0	4	&
water	28:16	0:0	4	is
op	28:18	0:0	4	->
water	28:20	0:0	4	vidclk
arg	28:28	28:46	3	&is->videoq.serial
op	28:28	0:0	4	&
water	28:29	0:0	4	is
op	28:31	0:0	4	->
water	28:33	0:0	4	videoq
op	28:39	0:0	4	.
water	28:40	0:0	4	serial
water	28:47	0:0	2	;
call	29:4	29:46	2	init_clock
arg	29:15	29:26	3	&is->audclk
op	29:15	0:0	4	&
water	29:16	0:0	4	is
op	29:18	0:0	4	->
water	29:20	0:0	4	audclk
arg	29:28	29:46	3	&is->audioq.serial
op	29:28	0:0	4	&
water	29:29	0:0	4	is
op	29:31	0:0	4	->
water	29:33	0:0	4	audioq
op	29:39	0:0	4	.
water	29:40	0:0	4	serial
water	29:47	0:0	2	;
call	30:4	30:46	2	init_clock
arg	30:15	30:26	3	&is->extclk
op	30:15	0:0	4	&
water	30:16	0:0	4	is
op	30:18	0:0	4	->
water	30:20	0:0	4	extclk
arg	30:28	30:46	3	&is->extclk.serial
op	30:28	0:0	4	&
water	30:29	0:0	4	is
op	30:31	0:0	4	->
water	30:33	0:0	4	extclk
op	30:39	0:0	4	.
water	30:40	0:0	4	serial
water	30:47	0:0	2	;
water	31:4	0:0	2	is
op	31:6	0:0	2	->
water	31:8	0:0	2	audio_clock_serial
op	31:27	0:0	2	=
op	31:29	0:0	2	-
water	31:30	0:0	2	1
water	31:31	0:0	2	;
if	32:4	33:86	2	(startup_volume < 0)
cond	32:8	32:25	3	startup_volume < 0
water	32:8	0:0	4	startup_volume
op	32:23	0:0	4	<
water	32:25	0:0	4	0
stmts	33:8	33:86	3	
call	33:8	33:85	4	av_log
arg	33:15	33:19	5	NULL
water	33:15	0:0	6	NULL
arg	33:21	33:35	5	AV_LOG_WARNING
water	33:21	0:0	6	AV_LOG_WARNING
arg	33:37	33:69	5	"-volume=%d < 0, setting to 0\n"
water	33:37	0:0	6	"-volume=%d < 0, setting to 0\n"
arg	33:71	33:85	5	startup_volume
water	33:71	0:0	6	startup_volume
water	33:86	0:0	4	;
if	34:4	35:90	2	(startup_volume > 100)
cond	34:8	34:25	3	startup_volume > 100
water	34:8	0:0	4	startup_volume
op	34:23	0:0	4	>
water	34:25	0:0	4	100
stmts	35:8	35:90	3	
call	35:8	35:89	4	av_log
arg	35:15	35:19	5	NULL
water	35:15	0:0	6	NULL
arg	35:21	35:35	5	AV_LOG_WARNING
water	35:21	0:0	6	AV_LOG_WARNING
arg	35:37	35:73	5	"-volume=%d > 100, setting to 100\n"
water	35:37	0:0	6	"-volume=%d > 100, setting to 100\n"
arg	35:75	35:89	5	startup_volume
water	35:75	0:0	6	startup_volume
water	35:90	0:0	4	;
water	36:4	0:0	2	startup_volume
op	36:19	0:0	2	=
call	36:21	36:51	2	av_clip
arg	36:29	36:43	3	startup_volume
water	36:29	0:0	4	startup_volume
arg	36:45	36:46	3	0
water	36:45	0:0	4	0
arg	36:48	36:51	3	100
water	36:48	0:0	4	100
water	36:52	0:0	2	;
water	37:4	0:0	2	startup_volume
op	37:19	0:0	2	=
call	37:21	37:91	2	av_clip
arg	37:29	37:69	3	SDL_MIX_MAXVOLUME*startup_volume/100
water	37:29	0:0	4	SDL_MIX_MAXVOLUME
op	37:47	0:0	4	*
water	37:49	0:0	4	startup_volume
op	37:64	0:0	4	/
water	37:66	0:0	4	100
arg	37:71	37:72	3	0
water	37:71	0:0	4	0
arg	37:74	37:91	3	SDL_MIX_MAXVOLUME
water	37:74	0:0	4	SDL_MIX_MAXVOLUME
water	37:92	0:0	2	;
water	38:4	0:0	2	is
op	38:6	0:0	2	->
water	38:8	0:0	2	audio_volume
op	38:21	0:0	2	=
water	38:23	0:0	2	startup_volume
water	38:37	0:0	2	;
water	39:4	0:0	2	is
op	39:6	0:0	2	->
water	39:8	0:0	2	muted
op	39:14	0:0	2	=
water	39:16	0:0	2	0
water	39:17	0:0	2	;
water	40:4	0:0	2	is
op	40:6	0:0	2	->
water	40:8	0:0	2	av_sync_type
op	40:21	0:0	2	=
water	40:23	0:0	2	av_sync_type
water	40:35	0:0	2	;
water	41:4	0:0	2	is
op	41:6	0:0	2	->
water	41:8	0:0	2	read_tid
op	41:21	0:0	2	=
call	41:23	41:70	2	SDL_CreateThread
arg	41:40	41:51	3	read_thread
water	41:40	0:0	4	read_thread
arg	41:53	41:66	3	"read_thread"
water	41:53	0:0	4	"read_thread"
arg	41:68	41:70	3	is
water	41:68	0:0	4	is
water	41:71	0:0	2	;
if	42:4	47:4	2	(! is -> read_tid)
cond	42:8	42:13	3	! is -> read_tid
op	42:8	0:0	4	!
water	42:9	0:0	4	is
op	42:11	0:0	4	->
water	42:13	0:0	4	read_tid
stmts	42:23	47:4	3	
water	42:23	0:0	4	{
call	43:8	43:77	4	av_log
arg	43:15	43:19	5	NULL
water	43:15	0:0	6	NULL
arg	43:21	43:33	5	AV_LOG_FATAL
water	43:21	0:0	6	AV_LOG_FATAL
arg	43:35	43:61	5	"SDL_CreateThread(): %s\n"
water	43:35	0:0	6	"SDL_CreateThread(): %s\n"
arg	43:63	43:77	5	SDL_GetError()
call	43:63	43:76	6	SDL_GetError
water	43:78	0:0	4	;
label	44:0	44:4	4	fail :
call	45:8	45:23	4	stream_close
arg	45:21	45:23	5	is
water	45:21	0:0	6	is
water	45:24	0:0	4	;
return	46:8	46:19	4	NULL
water	46:15	0:0	5	NULL
water	47:4	0:0	4	}
return	48:4	48:13	2	is
water	48:11	0:0	3	is

func	1:0	21:0	0	static MXFDescriptor *	mxf_resolve_multidescriptor
params	1:49	0:0	1	
param	1:50	1:65	2	MXFContext *	mxf
param	1:67	1:92	2	MXFDescriptor *	descriptor
param	1:94	1:106	2	int	track_id
stmnts	0:0	20:15	1	
decl	3:4	3:40	2	MXFDescriptor	*sub_descriptor
op	3:34	0:0	2	=
water	3:36	0:0	2	NULL
decl	4:4	4:9	2	int	i
if	5:4	6:19	2	(! descriptor)
cond	5:8	5:9	3	! descriptor
op	5:8	0:0	4	!
water	5:9	0:0	4	descriptor
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
if	7:4	18:4	2	(descriptor -> type == MultipleDescriptor)
cond	7:8	7:28	3	descriptor -> type == MultipleDescriptor
water	7:8	0:0	4	descriptor
op	7:18	0:0	4	->
water	7:20	0:0	4	type
op	7:25	0:0	4	==
water	7:28	0:0	4	MultipleDescriptor
stmts	7:48	18:4	3	
water	7:48	0:0	4	{
for	8:8	17:8	4	(i = 0 ;i < descriptor -> sub_descriptors_count;i ++)
forinit	8:13	8:18	5	i = 0 ;
water	8:13	0:0	6	i
op	8:15	0:0	6	=
water	8:17	0:0	6	0
water	8:18	0:0	6	;
cond	8:20	8:36	5	i < descriptor -> sub_descriptors_count
water	8:20	0:0	6	i
op	8:22	0:0	6	<
water	8:24	0:0	6	descriptor
op	8:34	0:0	6	->
water	8:36	0:0	6	sub_descriptors_count
forexpr	8:59	8:60	5	i ++
water	8:59	0:0	6	i
op	8:60	0:0	6	++
stmts	8:64	17:8	5	
water	8:64	0:0	6	{
water	9:12	0:0	6	sub_descriptor
op	9:27	0:0	6	=
call	9:29	9:105	6	mxf_resolve_strong_ref
arg	9:52	9:55	7	mxf
water	9:52	0:0	8	mxf
arg	9:57	9:93	7	&descriptor->sub_descriptors_refs[i]
op	9:57	0:0	8	&
water	9:58	0:0	8	descriptor
op	9:68	0:0	8	->
water	9:70	0:0	8	sub_descriptors_refs
op	9:90	0:0	8	[
water	9:91	0:0	8	i
op	9:92	0:0	8	]
arg	9:95	9:105	7	Descriptor
water	9:95	0:0	8	Descriptor
water	9:106	0:0	6	;
if	10:12	13:12	6	(! sub_descriptor)
cond	10:16	10:17	7	! sub_descriptor
op	10:16	0:0	8	!
water	10:17	0:0	8	sub_descriptor
stmts	10:33	13:12	7	
water	10:33	0:0	8	{
call	11:16	11:93	8	av_log
arg	11:23	11:30	9	mxf->fc
water	11:23	0:0	10	mxf
op	11:26	0:0	10	->
water	11:28	0:0	10	fc
arg	11:32	11:44	9	AV_LOG_ERROR
water	11:32	0:0	10	AV_LOG_ERROR
arg	11:46	11:93	9	"could not resolve sub descriptor strong ref\n"
water	11:46	0:0	10	"could not resolve sub descriptor strong ref\n"
water	11:94	0:0	8	;
continue	12:16	12:24	8	
water	13:12	0:0	8	}
if	14:12	16:12	6	(sub_descriptor -> linked_track_id == track_id)
cond	14:16	14:51	7	sub_descriptor -> linked_track_id == track_id
water	14:16	0:0	8	sub_descriptor
op	14:30	0:0	8	->
water	14:32	0:0	8	linked_track_id
op	14:48	0:0	8	==
water	14:51	0:0	8	track_id
stmts	14:61	16:12	7	
water	14:61	0:0	8	{
return	15:16	15:37	8	sub_descriptor
water	15:23	0:0	9	sub_descriptor
water	16:12	0:0	8	}
water	17:8	0:0	6	}
water	18:4	0:0	4	}
else	18:6	19:25	2
stmts	18:11	19:25	3	
if	18:11	19:25	4	(descriptor -> type == Descriptor)
cond	18:15	18:35	5	descriptor -> type == Descriptor
water	18:15	0:0	6	descriptor
op	18:25	0:0	6	->
water	18:27	0:0	6	type
op	18:32	0:0	6	==
water	18:35	0:0	6	Descriptor
stmts	19:8	19:25	5	
return	19:8	19:25	6	descriptor
water	19:15	0:0	7	descriptor
return	20:4	20:15	2	NULL
water	20:11	0:0	3	NULL

func	1:0	77:0	0	static int	configure_output_video_filter
params	1:40	0:0	1	
param	1:41	1:56	2	FilterGraph *	fg
param	1:58	1:79	2	OutputFilter *	ofilter
param	1:81	1:99	2	AVFilterInOut *	out
stmnts	0:0	76:12	1	
decl	3:4	3:18	2	char	*pix_fmts
decl	4:4	4:36	2	OutputStream	*ost
op	4:22	0:0	2	=
water	4:24	0:0	2	ofilter
op	4:31	0:0	2	->
water	4:33	0:0	2	ost
decl	5:4	5:53	2	OutputFile	*of
op	5:22	0:0	2	=
water	5:24	0:0	2	output_files
op	5:36	0:0	2	[
water	5:37	0:0	2	ost
op	5:40	0:0	2	->
water	5:42	0:0	2	file_index
op	5:52	0:0	2	]
decl	6:4	6:50	2	AVFilterContext	*last_filter
op	6:33	0:0	2	=
water	6:35	0:0	2	out
op	6:38	0:0	2	->
water	6:40	0:0	2	filter_ctx
decl	7:4	7:30	2	int	pad_idx
op	7:16	0:0	2	=
water	7:18	0:0	2	out
op	7:21	0:0	2	->
water	7:23	0:0	2	pad_idx
decl	8:4	8:11	2	int	ret
decl	9:4	9:18	2	char	name[255]
call	10:4	10:73	2	snprintf
arg	10:13	10:17	3	name
water	10:13	0:0	4	name
arg	10:19	10:31	3	sizeof(name)
op	10:19	0:0	4	sizeof
water	10:25	0:0	4	(
water	10:26	0:0	4	name
water	10:30	0:0	4	)
arg	10:33	10:44	3	"out_%d_%d"
water	10:33	0:0	4	"out_%d_%d"
arg	10:46	10:61	3	ost->file_index
water	10:46	0:0	4	ost
op	10:49	0:0	4	->
water	10:51	0:0	4	file_index
arg	10:63	10:73	3	ost->index
water	10:63	0:0	4	ost
op	10:66	0:0	4	->
water	10:68	0:0	4	index
water	10:74	0:0	2	;
water	11:4	0:0	2	ret
op	11:8	0:0	2	=
call	11:10	13:66	2	avfilter_graph_create_filter
arg	11:39	11:55	3	&ofilter->filter
op	11:39	0:0	4	&
water	11:40	0:0	4	ofilter
op	11:47	0:0	4	->
water	11:49	0:0	4	filter
arg	12:39	12:73	3	avfilter_get_by_name("buffersink")
call	12:39	12:72	4	avfilter_get_by_name
arg	12:60	12:72	5	"buffersink"
water	12:60	0:0	6	"buffersink"
arg	13:39	13:43	3	name
water	13:39	0:0	4	name
arg	13:45	13:49	3	NULL
water	13:45	0:0	4	NULL
arg	13:51	13:55	3	NULL
water	13:51	0:0	4	NULL
arg	13:57	13:66	3	fg->graph
water	13:57	0:0	4	fg
op	13:59	0:0	4	->
water	13:61	0:0	4	graph
water	13:67	0:0	2	;
if	14:4	15:18	2	(ret < 0)
cond	14:8	14:14	3	ret < 0
water	14:8	0:0	4	ret
op	14:12	0:0	4	<
water	14:14	0:0	4	0
stmts	15:8	15:18	3	
return	15:8	15:18	4	ret
water	15:15	0:0	5	ret
if	16:4	35:4	2	(ofilter -> width || ofilter -> height)
cond	16:8	16:35	3	ofilter -> width || ofilter -> height
water	16:8	0:0	4	ofilter
op	16:15	0:0	4	->
water	16:17	0:0	4	width
op	16:23	0:0	4	||
water	16:26	0:0	4	ofilter
op	16:33	0:0	4	->
water	16:35	0:0	4	height
stmts	16:43	35:4	3	
water	16:43	0:0	4	{
decl	17:8	17:22	4	char	args[255]
decl	18:8	18:31	4	AVFilterContext	*filter
decl	19:8	19:35	4	AVDictionaryEntry	*e
op	19:29	0:0	4	=
water	19:31	0:0	4	NULL
call	20:8	21:48	4	snprintf
arg	20:17	20:21	5	args
water	20:17	0:0	6	args
arg	20:23	20:35	5	sizeof(args)
op	20:23	0:0	6	sizeof
water	20:29	0:0	6	(
water	20:30	0:0	6	args
water	20:34	0:0	6	)
arg	20:37	20:44	5	"%d:%d"
water	20:37	0:0	6	"%d:%d"
arg	21:17	21:31	5	ofilter->width
water	21:17	0:0	6	ofilter
op	21:24	0:0	6	->
water	21:26	0:0	6	width
arg	21:33	21:48	5	ofilter->height
water	21:33	0:0	6	ofilter
op	21:40	0:0	6	->
water	21:42	0:0	6	height
water	21:49	0:0	4	;
while	22:8	25:8	4	(( e =av_dict_get (ost -> sws_dict ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) ))
cond	22:15	23:54	5	( e =av_dict_get (ost -> sws_dict ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) )
water	22:15	0:0	6	(
water	22:16	0:0	6	e
op	22:18	0:0	6	=
call	22:20	23:53	6	av_dict_get
arg	22:32	22:45	7	ost->sws_dict
water	22:32	0:0	8	ost
op	22:35	0:0	8	->
water	22:37	0:0	8	sws_dict
arg	22:47	22:49	7	""
water	22:47	0:0	8	""
arg	22:51	22:52	7	e
water	22:51	0:0	8	e
arg	23:32	23:53	7	AV_DICT_IGNORE_SUFFIX
water	23:32	0:0	8	AV_DICT_IGNORE_SUFFIX
water	23:54	0:0	6	)
stmts	23:57	25:8	5	
water	23:57	0:0	6	{
call	24:12	24:70	6	av_strlcatf
arg	24:24	24:28	7	args
water	24:24	0:0	8	args
arg	24:30	24:42	7	sizeof(args)
op	24:30	0:0	8	sizeof
water	24:36	0:0	8	(
water	24:37	0:0	8	args
water	24:41	0:0	8	)
arg	24:44	24:52	7	":%s=%s"
water	24:44	0:0	8	":%s=%s"
arg	24:54	24:60	7	e->key
water	24:54	0:0	8	e
op	24:55	0:0	8	->
water	24:57	0:0	8	key
arg	24:62	24:70	7	e->value
water	24:62	0:0	8	e
op	24:63	0:0	8	->
water	24:65	0:0	8	value
water	24:71	0:0	6	;
water	25:8	0:0	6	}
call	26:8	27:44	4	snprintf
arg	26:17	26:21	5	name
water	26:17	0:0	6	name
arg	26:23	26:35	5	sizeof(name)
op	26:23	0:0	6	sizeof
water	26:29	0:0	6	(
water	26:30	0:0	6	name
water	26:34	0:0	6	)
arg	26:37	26:55	5	"scaler_out_%d_%d"
water	26:37	0:0	6	"scaler_out_%d_%d"
arg	27:17	27:32	5	ost->file_index
water	27:17	0:0	6	ost
op	27:20	0:0	6	->
water	27:22	0:0	6	file_index
arg	27:34	27:44	5	ost->index
water	27:34	0:0	6	ost
op	27:37	0:0	6	->
water	27:39	0:0	6	index
water	27:45	0:0	4	;
if	28:8	30:22	4	(( ret =avfilter_graph_create_filter (& filter ,avfilter_get_by_name ("scale" ) ,name ,args ,NULL ,fg -> graph ) ) < 0)
cond	28:12	29:80	5	( ret =avfilter_graph_create_filter (& filter ,avfilter_get_by_name ("scale" ) ,name ,args ,NULL ,fg -> graph ) ) < 0
water	28:12	0:0	6	(
water	28:13	0:0	6	ret
op	28:17	0:0	6	=
call	28:19	29:75	6	avfilter_graph_create_filter
arg	28:48	28:55	7	&filter
op	28:48	0:0	8	&
water	28:49	0:0	8	filter
arg	28:57	28:86	7	avfilter_get_by_name("scale")
call	28:57	28:85	8	avfilter_get_by_name
arg	28:78	28:85	9	"scale"
water	28:78	0:0	10	"scale"
arg	29:48	29:52	7	name
water	29:48	0:0	8	name
arg	29:54	29:58	7	args
water	29:54	0:0	8	args
arg	29:60	29:64	7	NULL
water	29:60	0:0	8	NULL
arg	29:66	29:75	7	fg->graph
water	29:66	0:0	8	fg
op	29:68	0:0	8	->
water	29:70	0:0	8	graph
water	29:76	0:0	6	)
op	29:78	0:0	6	<
water	29:80	0:0	6	0
stmts	30:12	30:22	5	
return	30:12	30:22	6	ret
water	30:19	0:0	7	ret
if	31:8	32:22	4	(( ret =avfilter_link (last_filter ,pad_idx ,filter ,0 ) ) < 0)
cond	31:12	31:69	5	( ret =avfilter_link (last_filter ,pad_idx ,filter ,0 ) ) < 0
water	31:12	0:0	6	(
water	31:13	0:0	6	ret
op	31:17	0:0	6	=
call	31:19	31:64	6	avfilter_link
arg	31:33	31:44	7	last_filter
water	31:33	0:0	8	last_filter
arg	31:46	31:53	7	pad_idx
water	31:46	0:0	8	pad_idx
arg	31:55	31:61	7	filter
water	31:55	0:0	8	filter
arg	31:63	31:64	7	0
water	31:63	0:0	8	0
water	31:65	0:0	6	)
op	31:67	0:0	6	<
water	31:69	0:0	6	0
stmts	32:12	32:22	5	
return	32:12	32:22	6	ret
water	32:19	0:0	7	ret
water	33:8	0:0	4	last_filter
op	33:20	0:0	4	=
water	33:22	0:0	4	filter
water	33:28	0:0	4	;
water	34:8	0:0	4	pad_idx
op	34:16	0:0	4	=
water	34:18	0:0	4	0
water	34:19	0:0	4	;
water	35:4	0:0	4	}
if	36:4	50:4	2	(( pix_fmts =choose_pix_fmts (ofilter ) ))
cond	36:8	36:44	3	( pix_fmts =choose_pix_fmts (ofilter ) )
water	36:8	0:0	4	(
water	36:9	0:0	4	pix_fmts
op	36:18	0:0	4	=
call	36:20	36:43	4	choose_pix_fmts
arg	36:36	36:43	5	ofilter
water	36:36	0:0	6	ofilter
water	36:44	0:0	4	)
stmts	36:47	50:4	3	
water	36:47	0:0	4	{
decl	37:8	37:31	4	AVFilterContext	*filter
call	38:8	39:44	4	snprintf
arg	38:17	38:21	5	name
water	38:17	0:0	6	name
arg	38:23	38:35	5	sizeof(name)
op	38:23	0:0	6	sizeof
water	38:29	0:0	6	(
water	38:30	0:0	6	name
water	38:34	0:0	6	)
arg	38:37	38:55	5	"format_out_%d_%d"
water	38:37	0:0	6	"format_out_%d_%d"
arg	39:17	39:32	5	ost->file_index
water	39:17	0:0	6	ost
op	39:20	0:0	6	->
water	39:22	0:0	6	file_index
arg	39:34	39:44	5	ost->index
water	39:34	0:0	6	ost
op	39:37	0:0	6	->
water	39:39	0:0	6	index
water	39:45	0:0	4	;
water	40:8	0:0	4	ret
op	40:12	0:0	4	=
call	40:14	42:78	4	avfilter_graph_create_filter
arg	40:43	40:50	5	&filter
op	40:43	0:0	6	&
water	40:44	0:0	6	filter
arg	41:43	41:73	5	avfilter_get_by_name("format")
call	41:43	41:72	6	avfilter_get_by_name
arg	41:64	41:72	7	"format"
water	41:64	0:0	8	"format"
arg	42:43	42:51	5	"format"
water	42:43	0:0	6	"format"
arg	42:53	42:61	5	pix_fmts
water	42:53	0:0	6	pix_fmts
arg	42:63	42:67	5	NULL
water	42:63	0:0	6	NULL
arg	42:69	42:78	5	fg->graph
water	42:69	0:0	6	fg
op	42:71	0:0	6	->
water	42:73	0:0	6	graph
water	42:79	0:0	4	;
call	43:8	43:26	4	av_freep
arg	43:17	43:26	5	&pix_fmts
op	43:17	0:0	6	&
water	43:18	0:0	6	pix_fmts
water	43:27	0:0	4	;
if	44:8	45:22	4	(ret < 0)
cond	44:12	44:18	5	ret < 0
water	44:12	0:0	6	ret
op	44:16	0:0	6	<
water	44:18	0:0	6	0
stmts	45:12	45:22	5	
return	45:12	45:22	6	ret
water	45:19	0:0	7	ret
if	46:8	47:22	4	(( ret =avfilter_link (last_filter ,pad_idx ,filter ,0 ) ) < 0)
cond	46:12	46:69	5	( ret =avfilter_link (last_filter ,pad_idx ,filter ,0 ) ) < 0
water	46:12	0:0	6	(
water	46:13	0:0	6	ret
op	46:17	0:0	6	=
call	46:19	46:64	6	avfilter_link
arg	46:33	46:44	7	last_filter
water	46:33	0:0	8	last_filter
arg	46:46	46:53	7	pad_idx
water	46:46	0:0	8	pad_idx
arg	46:55	46:61	7	filter
water	46:55	0:0	8	filter
arg	46:63	46:64	7	0
water	46:63	0:0	8	0
water	46:65	0:0	6	)
op	46:67	0:0	6	<
water	46:69	0:0	6	0
stmts	47:12	47:22	5	
return	47:12	47:22	6	ret
water	47:19	0:0	7	ret
water	48:8	0:0	4	last_filter
op	48:20	0:0	4	=
water	48:22	0:0	4	filter
water	48:28	0:0	4	;
water	49:8	0:0	4	pad_idx
op	49:20	0:0	4	=
water	49:22	0:0	4	0
water	49:23	0:0	4	;
water	50:4	0:0	4	}
if	51:4	67:4	2	(ost -> frame_rate . num && 0)
cond	51:8	51:31	3	ost -> frame_rate . num && 0
water	51:8	0:0	4	ost
op	51:11	0:0	4	->
water	51:13	0:0	4	frame_rate
op	51:23	0:0	4	.
water	51:24	0:0	4	num
op	51:28	0:0	4	&&
water	51:31	0:0	4	0
stmts	51:34	67:4	3	
water	51:34	0:0	4	{
decl	52:8	52:28	4	AVFilterContext	*fps
decl	53:8	53:22	4	char	args[255]
call	54:8	55:36	4	snprintf
arg	54:17	54:21	5	args
water	54:17	0:0	6	args
arg	54:23	54:35	5	sizeof(args)
op	54:23	0:0	6	sizeof
water	54:29	0:0	6	(
water	54:30	0:0	6	args
water	54:34	0:0	6	)
arg	54:37	54:48	5	"fps=%d/%d"
water	54:37	0:0	6	"fps=%d/%d"
arg	54:50	54:69	5	ost->frame_rate.num
water	54:50	0:0	6	ost
op	54:53	0:0	6	->
water	54:55	0:0	6	frame_rate
op	54:65	0:0	6	.
water	54:66	0:0	6	num
arg	55:17	55:36	5	ost->frame_rate.den
water	55:17	0:0	6	ost
op	55:20	0:0	6	->
water	55:22	0:0	6	frame_rate
op	55:32	0:0	6	.
water	55:33	0:0	6	den
water	55:37	0:0	4	;
call	56:8	57:44	4	snprintf
arg	56:17	56:21	5	name
water	56:17	0:0	6	name
arg	56:23	56:35	5	sizeof(name)
op	56:23	0:0	6	sizeof
water	56:29	0:0	6	(
water	56:30	0:0	6	name
water	56:34	0:0	6	)
arg	56:37	56:52	5	"fps_out_%d_%d"
water	56:37	0:0	6	"fps_out_%d_%d"
arg	57:17	57:32	5	ost->file_index
water	57:17	0:0	6	ost
op	57:20	0:0	6	->
water	57:22	0:0	6	file_index
arg	57:34	57:44	5	ost->index
water	57:34	0:0	6	ost
op	57:37	0:0	6	->
water	57:39	0:0	6	index
water	57:45	0:0	4	;
water	58:8	0:0	4	ret
op	58:12	0:0	4	=
call	58:14	59:70	4	avfilter_graph_create_filter
arg	58:43	58:47	5	&fps
op	58:43	0:0	6	&
water	58:44	0:0	6	fps
arg	58:49	58:76	5	avfilter_get_by_name("fps")
call	58:49	58:75	6	avfilter_get_by_name
arg	58:70	58:75	7	"fps"
water	58:70	0:0	8	"fps"
arg	59:43	59:47	5	name
water	59:43	0:0	6	name
arg	59:49	59:53	5	args
water	59:49	0:0	6	args
arg	59:55	59:59	5	NULL
water	59:55	0:0	6	NULL
arg	59:61	59:70	5	fg->graph
water	59:61	0:0	6	fg
op	59:63	0:0	6	->
water	59:65	0:0	6	graph
water	59:71	0:0	4	;
if	60:8	61:22	4	(ret < 0)
cond	60:12	60:18	5	ret < 0
water	60:12	0:0	6	ret
op	60:16	0:0	6	<
water	60:18	0:0	6	0
stmts	61:12	61:22	5	
return	61:12	61:22	6	ret
water	61:19	0:0	7	ret
water	62:8	0:0	4	ret
op	62:12	0:0	4	=
call	62:14	62:56	4	avfilter_link
arg	62:28	62:39	5	last_filter
water	62:28	0:0	6	last_filter
arg	62:41	62:48	5	pad_idx
water	62:41	0:0	6	pad_idx
arg	62:50	62:53	5	fps
water	62:50	0:0	6	fps
arg	62:55	62:56	5	0
water	62:55	0:0	6	0
water	62:57	0:0	4	;
if	63:8	64:22	4	(ret < 0)
cond	63:12	63:18	5	ret < 0
water	63:12	0:0	6	ret
op	63:16	0:0	6	<
water	63:18	0:0	6	0
stmts	64:12	64:22	5	
return	64:12	64:22	6	ret
water	64:19	0:0	7	ret
water	65:8	0:0	4	last_filter
op	65:20	0:0	4	=
water	65:22	0:0	4	fps
water	65:25	0:0	4	;
water	66:8	0:0	4	pad_idx
op	66:16	0:0	4	=
water	66:18	0:0	4	0
water	66:19	0:0	4	;
water	67:4	0:0	4	}
call	68:4	69:40	2	snprintf
arg	68:13	68:17	3	name
water	68:13	0:0	4	name
arg	68:19	68:31	3	sizeof(name)
op	68:19	0:0	4	sizeof
water	68:25	0:0	4	(
water	68:26	0:0	4	name
water	68:30	0:0	4	)
arg	68:33	68:49	3	"trim_out_%d_%d"
water	68:33	0:0	4	"trim_out_%d_%d"
arg	69:13	69:28	3	ost->file_index
water	69:13	0:0	4	ost
op	69:16	0:0	4	->
water	69:18	0:0	4	file_index
arg	69:30	69:40	3	ost->index
water	69:30	0:0	4	ost
op	69:33	0:0	4	->
water	69:35	0:0	4	index
water	69:41	0:0	2	;
water	70:4	0:0	2	ret
op	70:8	0:0	2	=
call	70:10	71:50	2	insert_trim
arg	70:22	70:36	3	of->start_time
water	70:22	0:0	4	of
op	70:24	0:0	4	->
water	70:26	0:0	4	start_time
arg	70:38	70:56	3	of->recording_time
water	70:38	0:0	4	of
op	70:40	0:0	4	->
water	70:42	0:0	4	recording_time
arg	71:22	71:34	3	&last_filter
op	71:22	0:0	4	&
water	71:23	0:0	4	last_filter
arg	71:36	71:44	3	&pad_idx
op	71:36	0:0	4	&
water	71:37	0:0	4	pad_idx
arg	71:46	71:50	3	name
water	71:46	0:0	4	name
water	71:51	0:0	2	;
if	72:4	73:18	2	(ret < 0)
cond	72:8	72:14	3	ret < 0
water	72:8	0:0	4	ret
op	72:12	0:0	4	<
water	72:14	0:0	4	0
stmts	73:8	73:18	3	
return	73:8	73:18	4	ret
water	73:15	0:0	5	ret
if	74:4	75:18	2	(( ret =avfilter_link (last_filter ,pad_idx ,ofilter -> filter ,0 ) ) < 0)
cond	74:8	74:74	3	( ret =avfilter_link (last_filter ,pad_idx ,ofilter -> filter ,0 ) ) < 0
water	74:8	0:0	4	(
water	74:9	0:0	4	ret
op	74:13	0:0	4	=
call	74:15	74:69	4	avfilter_link
arg	74:29	74:40	5	last_filter
water	74:29	0:0	6	last_filter
arg	74:42	74:49	5	pad_idx
water	74:42	0:0	6	pad_idx
arg	74:51	74:66	5	ofilter->filter
water	74:51	0:0	6	ofilter
op	74:58	0:0	6	->
water	74:60	0:0	6	filter
arg	74:68	74:69	5	0
water	74:68	0:0	6	0
water	74:70	0:0	4	)
op	74:72	0:0	4	<
water	74:74	0:0	4	0
stmts	75:8	75:18	3	
return	75:8	75:18	4	ret
water	75:15	0:0	5	ret
return	76:4	76:12	2	0
water	76:11	0:0	3	0

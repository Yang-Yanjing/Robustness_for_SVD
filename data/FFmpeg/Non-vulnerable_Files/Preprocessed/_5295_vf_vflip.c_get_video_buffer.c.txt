func	1:0	18:0	0	static AVFrame *	get_video_buffer
params	1:32	0:0	1	
param	1:33	1:51	2	AVFilterLink *	link
param	1:53	1:58	2	int	w
param	1:60	1:65	2	int	h
stmnts	0:0	17:16	1	
decl	3:4	3:39	2	FlipContext	*flip
op	3:22	0:0	2	=
water	3:24	0:0	2	link
op	3:28	0:0	2	->
water	3:30	0:0	2	dst
op	3:33	0:0	2	->
water	3:35	0:0	2	priv
decl	4:4	4:18	2	AVFrame	*frame
decl	5:4	5:9	2	int	i
water	6:4	0:0	2	frame
op	6:10	0:0	2	=
call	6:12	6:59	2	ff_get_video_buffer
arg	6:32	6:53	3	link->dst->outputs[0]
water	6:32	0:0	4	link
op	6:36	0:0	4	->
water	6:38	0:0	4	dst
op	6:41	0:0	4	->
water	6:43	0:0	4	outputs
op	6:50	0:0	4	[
water	6:51	0:0	4	0
op	6:52	0:0	4	]
arg	6:55	6:56	3	w
water	6:55	0:0	4	w
arg	6:58	6:59	3	h
water	6:58	0:0	4	h
water	6:60	0:0	2	;
if	7:4	8:19	2	(! frame)
cond	7:8	7:9	3	! frame
op	7:8	0:0	4	!
water	7:9	0:0	4	frame
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
for	9:4	16:4	2	(i = 0 ;i < 4;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:20	3	i < 4
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	4
forexpr	9:23	9:25	3	i ++
water	9:23	0:0	4	i
op	9:25	0:0	4	++
stmts	9:29	16:4	3	
water	9:29	0:0	4	{
decl	10:8	10:52	4	int	vsub
op	10:17	0:0	4	=
water	10:19	0:0	4	i
op	10:21	0:0	4	==
water	10:24	0:0	4	1
op	10:26	0:0	4	||
water	10:29	0:0	4	i
op	10:31	0:0	4	==
water	10:34	0:0	4	2
water	10:36	0:0	4	?
water	10:38	0:0	4	flip
op	10:42	0:0	4	->
water	10:44	0:0	4	vsub
water	10:49	0:0	4	:
water	10:51	0:0	4	0
decl	11:8	11:44	4	int	height
op	11:19	0:0	4	=
call	11:21	11:43	5	FF_CEIL_RSHIFT
arg	11:36	11:37	6	h
water	11:36	0:0	7	h
arg	11:39	11:43	6	vsub
water	11:39	0:0	7	vsub
if	12:8	15:8	4	(frame -> data [ i ])
cond	12:12	12:25	5	frame -> data [ i ]
water	12:12	0:0	6	frame
op	12:17	0:0	6	->
water	12:19	0:0	6	data
op	12:23	0:0	6	[
water	12:24	0:0	6	i
op	12:25	0:0	6	]
stmts	12:28	15:8	5	
water	12:28	0:0	6	{
water	13:12	0:0	6	frame
op	13:17	0:0	6	->
water	13:19	0:0	6	data
op	13:23	0:0	6	[
water	13:24	0:0	6	i
op	13:25	0:0	6	]
op	13:27	0:0	6	+=
water	13:30	0:0	6	(
water	13:31	0:0	6	height
op	13:38	0:0	6	-
water	13:40	0:0	6	1
water	13:41	0:0	6	)
op	13:43	0:0	6	*
water	13:45	0:0	6	frame
op	13:50	0:0	6	->
water	13:52	0:0	6	linesize
op	13:60	0:0	6	[
water	13:61	0:0	6	i
op	13:62	0:0	6	]
water	13:63	0:0	6	;
water	14:12	0:0	6	frame
op	14:17	0:0	6	->
water	14:19	0:0	6	linesize
op	14:27	0:0	6	[
water	14:28	0:0	6	i
op	14:29	0:0	6	]
op	14:31	0:0	6	=
op	14:33	0:0	6	-
water	14:34	0:0	6	frame
op	14:39	0:0	6	->
water	14:41	0:0	6	linesize
op	14:49	0:0	6	[
water	14:50	0:0	6	i
op	14:51	0:0	6	]
water	14:52	0:0	6	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}
return	17:4	17:16	2	frame
water	17:11	0:0	3	frame

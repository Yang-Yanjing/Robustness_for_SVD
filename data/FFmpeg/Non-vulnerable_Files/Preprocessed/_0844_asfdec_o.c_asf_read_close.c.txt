func	1:0	14:0	0	static int	asf_read_close
params	1:25	0:0	1	
param	1:26	1:44	2	AVFormatContext *	s
stmnts	0:0	13:12	1	
decl	3:4	3:34	2	ASFContext	*asf
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:9	2	int	i
for	5:4	11:4	2	(i = 0 ;i < ASF_MAX_STREAMS;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:20	3	i < ASF_MAX_STREAMS
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	ASF_MAX_STREAMS
forexpr	5:37	5:38	3	i ++
water	5:37	0:0	4	i
op	5:38	0:0	4	++
stmts	5:42	11:4	3	
water	5:42	0:0	4	{
call	6:8	6:44	4	av_dict_free
arg	6:21	6:44	5	&asf->asf_sd[i].asf_met
op	6:21	0:0	6	&
water	6:22	0:0	6	asf
op	6:25	0:0	6	->
water	6:27	0:0	6	asf_sd
op	6:33	0:0	6	[
water	6:34	0:0	6	i
op	6:35	0:0	6	]
op	6:36	0:0	6	.
water	6:37	0:0	6	asf_met
water	6:45	0:0	4	;
if	7:8	10:8	4	(i < asf -> nb_streams)
cond	7:12	7:21	5	i < asf -> nb_streams
water	7:12	0:0	6	i
op	7:14	0:0	6	<
water	7:16	0:0	6	asf
op	7:19	0:0	6	->
water	7:21	0:0	6	nb_streams
stmts	7:33	10:8	5	
water	7:33	0:0	6	{
call	8:12	8:53	6	av_free_packet
arg	8:27	8:53	7	&asf->asf_st[i]->pkt.avpkt
op	8:27	0:0	8	&
water	8:28	0:0	8	asf
op	8:31	0:0	8	->
water	8:33	0:0	8	asf_st
op	8:39	0:0	8	[
water	8:40	0:0	8	i
op	8:41	0:0	8	]
op	8:42	0:0	8	->
water	8:44	0:0	8	pkt
op	8:47	0:0	8	.
water	8:48	0:0	8	avpkt
water	8:54	0:0	6	;
call	9:12	9:36	6	av_freep
arg	9:21	9:36	7	&asf->asf_st[i]
op	9:21	0:0	8	&
water	9:22	0:0	8	asf
op	9:25	0:0	8	->
water	9:27	0:0	8	asf_st
op	9:33	0:0	8	[
water	9:34	0:0	8	i
op	9:35	0:0	8	]
water	9:37	0:0	6	;
water	10:8	0:0	6	}
water	11:4	0:0	4	}
water	12:4	0:0	2	asf
op	12:7	0:0	2	->
water	12:9	0:0	2	nb_streams
op	12:20	0:0	2	=
water	12:22	0:0	2	0
water	12:23	0:0	2	;
return	13:4	13:12	2	0
water	13:11	0:0	3	0

func	1:0	13:0	0	static void	check_external_clock_speed
params	1:38	0:0	1	
param	1:39	1:53	2	VideoState *	is
stmnts	2:3	12:3	1	
if	2:3	5:3	2	(is -> video_stream >= 0 && is -> videoq . nb_packets <= EXTERNAL_CLOCK_MIN_FRAMES || is -> audio_stream >= 0 && is -> audioq . nb_packets <= EXTERNAL_CLOCK_MIN_FRAMES)
cond	2:7	3:57	3	is -> video_stream >= 0 && is -> videoq . nb_packets <= EXTERNAL_CLOCK_MIN_FRAMES || is -> audio_stream >= 0 && is -> audioq . nb_packets <= EXTERNAL_CLOCK_MIN_FRAMES
water	2:7	0:0	4	is
op	2:9	0:0	4	->
water	2:11	0:0	4	video_stream
op	2:24	0:0	4	>=
water	2:27	0:0	4	0
op	2:29	0:0	4	&&
water	2:32	0:0	4	is
op	2:34	0:0	4	->
water	2:36	0:0	4	videoq
op	2:42	0:0	4	.
water	2:43	0:0	4	nb_packets
op	2:54	0:0	4	<=
water	2:57	0:0	4	EXTERNAL_CLOCK_MIN_FRAMES
op	2:83	0:0	4	||
water	3:7	0:0	4	is
op	3:9	0:0	4	->
water	3:11	0:0	4	audio_stream
op	3:24	0:0	4	>=
water	3:27	0:0	4	0
op	3:29	0:0	4	&&
water	3:32	0:0	4	is
op	3:34	0:0	4	->
water	3:36	0:0	4	audioq
op	3:42	0:0	4	.
water	3:43	0:0	4	nb_packets
op	3:54	0:0	4	<=
water	3:57	0:0	4	EXTERNAL_CLOCK_MIN_FRAMES
stmts	3:84	5:3	3	
water	3:84	0:0	4	{
call	4:7	4:113	4	set_clock_speed
arg	4:23	4:34	5	&is->extclk
op	4:23	0:0	6	&
water	4:24	0:0	6	is
op	4:26	0:0	6	->
water	4:28	0:0	6	extclk
arg	4:36	4:113	5	FFMAX(EXTERNAL_CLOCK_SPEED_MIN,is->extclk.speed-EXTERNAL_CLOCK_SPEED_STEP)
call	4:36	4:112	6	FFMAX
arg	4:42	4:66	7	EXTERNAL_CLOCK_SPEED_MIN
water	4:42	0:0	8	EXTERNAL_CLOCK_SPEED_MIN
arg	4:68	4:112	7	is->extclk.speed-EXTERNAL_CLOCK_SPEED_STEP
water	4:68	0:0	8	is
op	4:70	0:0	8	->
water	4:72	0:0	8	extclk
op	4:78	0:0	8	.
water	4:79	0:0	8	speed
op	4:85	0:0	8	-
water	4:87	0:0	8	EXTERNAL_CLOCK_SPEED_STEP
water	4:114	0:0	4	;
water	5:3	0:0	4	}
else	5:5	8:3	2
stmts	5:10	8:3	3	
if	5:10	8:3	4	(( is -> video_stream < 0 || is -> videoq . nb_packets > EXTERNAL_CLOCK_MAX_FRAMES ) && ( is -> audio_stream < 0 || is -> audioq . nb_packets > EXTERNAL_CLOCK_MAX_FRAMES ))
cond	5:14	6:88	5	( is -> video_stream < 0 || is -> videoq . nb_packets > EXTERNAL_CLOCK_MAX_FRAMES ) && ( is -> audio_stream < 0 || is -> audioq . nb_packets > EXTERNAL_CLOCK_MAX_FRAMES )
water	5:14	0:0	6	(
water	5:15	0:0	6	is
op	5:17	0:0	6	->
water	5:19	0:0	6	video_stream
op	5:32	0:0	6	<
water	5:34	0:0	6	0
op	5:36	0:0	6	||
water	5:39	0:0	6	is
op	5:41	0:0	6	->
water	5:43	0:0	6	videoq
op	5:49	0:0	6	.
water	5:50	0:0	6	nb_packets
op	5:61	0:0	6	>
water	5:63	0:0	6	EXTERNAL_CLOCK_MAX_FRAMES
water	5:88	0:0	6	)
op	5:90	0:0	6	&&
water	6:14	0:0	6	(
water	6:15	0:0	6	is
op	6:17	0:0	6	->
water	6:19	0:0	6	audio_stream
op	6:32	0:0	6	<
water	6:34	0:0	6	0
op	6:36	0:0	6	||
water	6:39	0:0	6	is
op	6:41	0:0	6	->
water	6:43	0:0	6	audioq
op	6:49	0:0	6	.
water	6:50	0:0	6	nb_packets
op	6:61	0:0	6	>
water	6:63	0:0	6	EXTERNAL_CLOCK_MAX_FRAMES
water	6:88	0:0	6	)
stmts	6:91	8:3	5	
water	6:91	0:0	6	{
call	7:7	7:113	6	set_clock_speed
arg	7:23	7:34	7	&is->extclk
op	7:23	0:0	8	&
water	7:24	0:0	8	is
op	7:26	0:0	8	->
water	7:28	0:0	8	extclk
arg	7:36	7:113	7	FFMIN(EXTERNAL_CLOCK_SPEED_MAX,is->extclk.speed+EXTERNAL_CLOCK_SPEED_STEP)
call	7:36	7:112	8	FFMIN
arg	7:42	7:66	9	EXTERNAL_CLOCK_SPEED_MAX
water	7:42	0:0	10	EXTERNAL_CLOCK_SPEED_MAX
arg	7:68	7:112	9	is->extclk.speed+EXTERNAL_CLOCK_SPEED_STEP
water	7:68	0:0	10	is
op	7:70	0:0	10	->
water	7:72	0:0	10	extclk
op	7:78	0:0	10	.
water	7:79	0:0	10	speed
op	7:85	0:0	10	+
water	7:87	0:0	10	EXTERNAL_CLOCK_SPEED_STEP
water	7:114	0:0	6	;
water	8:3	0:0	6	}
else	8:5	12:3	2
stmts	8:10	12:3	3	
water	8:10	0:0	4	{
decl	9:7	9:38	4	double	speed
op	9:20	0:0	4	=
water	9:22	0:0	4	is
op	9:24	0:0	4	->
water	9:26	0:0	4	extclk
op	9:32	0:0	4	.
water	9:33	0:0	4	speed
if	10:7	11:110	4	(speed != 1 . 0)
cond	10:11	10:22	5	speed != 1 . 0
water	10:11	0:0	6	speed
op	10:17	0:0	6	!=
water	10:20	0:0	6	1
op	10:21	0:0	6	.
water	10:22	0:0	6	0
stmts	11:11	11:110	5	
call	11:11	11:109	6	set_clock_speed
arg	11:27	11:38	7	&is->extclk
op	11:27	0:0	8	&
water	11:28	0:0	8	is
op	11:30	0:0	8	->
water	11:32	0:0	8	extclk
arg	11:40	11:109	7	speed+EXTERNAL_CLOCK_SPEED_STEP*(1.0-speed)/fabs(1.0-speed)
water	11:40	0:0	8	speed
op	11:46	0:0	8	+
water	11:48	0:0	8	EXTERNAL_CLOCK_SPEED_STEP
op	11:74	0:0	8	*
water	11:76	0:0	8	(
water	11:77	0:0	8	1
op	11:78	0:0	8	.
water	11:79	0:0	8	0
op	11:81	0:0	8	-
water	11:83	0:0	8	speed
water	11:88	0:0	8	)
op	11:90	0:0	8	/
call	11:92	11:108	8	fabs
arg	11:97	11:108	9	1.0-speed
water	11:97	0:0	10	1
op	11:98	0:0	10	.
water	11:99	0:0	10	0
op	11:101	0:0	10	-
water	11:103	0:0	10	speed
water	11:110	0:0	6	;
water	12:3	0:0	4	}

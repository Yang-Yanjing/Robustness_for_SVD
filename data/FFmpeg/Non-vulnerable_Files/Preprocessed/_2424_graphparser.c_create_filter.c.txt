func	1:0	44:0	0	static int	create_filter
params	1:24	0:0	1	
param	1:25	1:51	2	AVFilterContext * *	filt_ctx
param	1:53	1:71	2	AVFilterGraph *	ctx
param	1:73	1:82	2	int	index
param	2:25	2:46	2	const char *	filt_name
param	2:48	2:64	2	const char *	args
param	2:66	2:79	2	void *	log_ctx
stmnts	0:0	43:14	1	
decl	4:4	4:18	2	AVFilter	*filt
decl	5:4	5:22	2	char	inst_name[30]
decl	6:4	6:25	2	char	*tmp_args
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
decl	7:4	7:11	2	int	ret
call	8:4	8:75	2	snprintf
arg	8:13	8:22	3	inst_name
water	8:13	0:0	4	inst_name
arg	8:24	8:41	3	sizeof(inst_name)
op	8:24	0:0	4	sizeof
water	8:30	0:0	4	(
water	8:31	0:0	4	inst_name
water	8:40	0:0	4	)
arg	8:43	8:57	3	"Parsed_%s_%d"
water	8:43	0:0	4	"Parsed_%s_%d"
arg	8:59	8:68	3	filt_name
water	8:59	0:0	4	filt_name
arg	8:70	8:75	3	index
water	8:70	0:0	4	index
water	8:76	0:0	2	;
water	9:4	0:0	2	filt
op	9:9	0:0	2	=
call	9:11	9:41	2	avfilter_get_by_name
arg	9:32	9:41	3	filt_name
water	9:32	0:0	4	filt_name
water	9:42	0:0	2	;
if	10:4	14:4	2	(! filt)
cond	10:8	10:9	3	! filt
op	10:8	0:0	4	!
water	10:9	0:0	4	filt
stmts	10:15	14:4	3	
water	10:15	0:0	4	{
call	11:8	12:50	4	av_log
arg	11:15	11:22	5	log_ctx
water	11:15	0:0	6	log_ctx
arg	11:24	11:36	5	AV_LOG_ERROR
water	11:24	0:0	6	AV_LOG_ERROR
arg	12:15	12:39	5	"No such filter: '%s'\n"
water	12:15	0:0	6	"No such filter: '%s'\n"
arg	12:41	12:50	5	filt_name
water	12:41	0:0	6	filt_name
water	12:51	0:0	4	;
return	13:8	13:30	4	AVERROR(EINVAL)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	EINVAL
water	13:23	0:0	7	EINVAL
water	14:4	0:0	4	}
op	15:4	0:0	2	*
water	15:5	0:0	2	filt_ctx
op	15:14	0:0	2	=
call	15:16	15:64	2	avfilter_graph_alloc_filter
arg	15:44	15:47	3	ctx
water	15:44	0:0	4	ctx
arg	15:49	15:53	3	filt
water	15:49	0:0	4	filt
arg	15:55	15:64	3	inst_name
water	15:55	0:0	4	inst_name
water	15:65	0:0	2	;
if	16:4	20:4	2	(! * filt_ctx)
cond	16:8	16:10	3	! * filt_ctx
op	16:8	0:0	4	!
op	16:9	0:0	4	*
water	16:10	0:0	4	filt_ctx
stmts	16:20	20:4	3	
water	16:20	0:0	4	{
call	17:8	18:56	4	av_log
arg	17:15	17:22	5	log_ctx
water	17:15	0:0	6	log_ctx
arg	17:24	17:36	5	AV_LOG_ERROR
water	17:24	0:0	6	AV_LOG_ERROR
arg	18:15	18:45	5	"Error creating filter '%s'\n"
water	18:15	0:0	6	"Error creating filter '%s'\n"
arg	18:47	18:56	5	filt_name
water	18:47	0:0	6	filt_name
water	18:57	0:0	4	;
return	19:8	19:30	4	AVERROR(ENOMEM)
call	19:15	19:29	5	AVERROR
arg	19:23	19:29	6	ENOMEM
water	19:23	0:0	7	ENOMEM
water	20:4	0:0	4	}
if	21:4	31:4	2	(!strcmp (filt_name ,"scale" ) && ( ! args || !strstr (args ,"flags" ) ) && ctx -> scale_sws_opts)
cond	21:8	22:13	3	!strcmp (filt_name ,"scale" ) && ( ! args || !strstr (args ,"flags" ) ) && ctx -> scale_sws_opts
op	21:8	0:0	4	!
call	21:9	21:34	4	strcmp
arg	21:16	21:25	5	filt_name
water	21:16	0:0	6	filt_name
arg	21:27	21:34	5	"scale"
water	21:27	0:0	6	"scale"
op	21:36	0:0	4	&&
water	21:39	0:0	4	(
op	21:40	0:0	4	!
water	21:41	0:0	4	args
op	21:46	0:0	4	||
op	21:49	0:0	4	!
call	21:50	21:70	4	strstr
arg	21:57	21:61	5	args
water	21:57	0:0	6	args
arg	21:63	21:70	5	"flags"
water	21:63	0:0	6	"flags"
water	21:71	0:0	4	)
op	21:73	0:0	4	&&
water	22:8	0:0	4	ctx
op	22:11	0:0	4	->
water	22:13	0:0	4	scale_sws_opts
stmts	22:29	31:4	3	
water	22:29	0:0	4	{
if	23:8	29:8	4	(args)
cond	23:12	23:12	5	args
water	23:12	0:0	6	args
stmts	23:18	29:8	5	
water	23:18	0:0	6	{
water	24:12	0:0	6	tmp_args
op	24:21	0:0	6	=
call	24:23	25:45	6	av_asprintf
arg	24:35	24:42	7	"%s:%s"
water	24:35	0:0	8	"%s:%s"
arg	25:20	25:24	7	args
water	25:20	0:0	8	args
arg	25:26	25:45	7	ctx->scale_sws_opts
water	25:26	0:0	8	ctx
op	25:29	0:0	8	->
water	25:31	0:0	8	scale_sws_opts
water	25:46	0:0	6	;
if	26:12	27:38	6	(! tmp_args)
cond	26:16	26:17	7	! tmp_args
op	26:16	0:0	8	!
water	26:17	0:0	8	tmp_args
stmts	27:16	27:38	7	
return	27:16	27:38	8	AVERROR(ENOMEM)
call	27:23	27:37	9	AVERROR
arg	27:31	27:37	10	ENOMEM
water	27:31	0:0	11	ENOMEM
water	28:12	0:0	6	args
op	28:17	0:0	6	=
water	28:19	0:0	6	tmp_args
water	28:27	0:0	6	;
water	29:8	0:0	6	}
else	29:10	30:38	4
stmts	30:12	30:38	5	
water	30:12	0:0	6	args
op	30:17	0:0	6	=
water	30:19	0:0	6	ctx
op	30:22	0:0	6	->
water	30:24	0:0	6	scale_sws_opts
water	30:38	0:0	6	;
water	31:4	0:0	4	}
water	32:4	0:0	2	ret
op	32:8	0:0	2	=
call	32:10	32:43	2	avfilter_init_str
arg	32:28	32:37	3	*filt_ctx
op	32:28	0:0	4	*
water	32:29	0:0	4	filt_ctx
arg	32:39	32:43	3	args
water	32:39	0:0	4	args
water	32:44	0:0	2	;
if	33:4	41:4	2	(ret < 0)
cond	33:8	33:14	3	ret < 0
water	33:8	0:0	4	ret
op	33:12	0:0	4	<
water	33:14	0:0	4	0
stmts	33:17	41:4	3	
water	33:17	0:0	4	{
call	34:8	35:58	4	av_log
arg	34:15	34:22	5	log_ctx
water	34:15	0:0	6	log_ctx
arg	34:24	34:36	5	AV_LOG_ERROR
water	34:24	0:0	6	AV_LOG_ERROR
arg	35:15	35:47	5	"Error initializing filter '%s'"
water	35:15	0:0	6	"Error initializing filter '%s'"
arg	35:49	35:58	5	filt_name
water	35:49	0:0	6	filt_name
water	35:59	0:0	4	;
if	36:8	37:66	4	(args)
cond	36:12	36:12	5	args
water	36:12	0:0	6	args
stmts	37:12	37:66	5	
call	37:12	37:65	6	av_log
arg	37:19	37:26	7	log_ctx
water	37:19	0:0	8	log_ctx
arg	37:28	37:40	7	AV_LOG_ERROR
water	37:28	0:0	8	AV_LOG_ERROR
arg	37:42	37:59	7	" with args '%s'"
water	37:42	0:0	8	" with args '%s'"
arg	37:61	37:65	7	args
water	37:61	0:0	8	args
water	37:66	0:0	6	;
call	38:8	38:42	4	av_log
arg	38:15	38:22	5	log_ctx
water	38:15	0:0	6	log_ctx
arg	38:24	38:36	5	AV_LOG_ERROR
water	38:24	0:0	6	AV_LOG_ERROR
arg	38:38	38:42	5	"\n"
water	38:38	0:0	6	"\n"
water	38:43	0:0	4	;
call	39:8	39:31	4	avfilter_free
arg	39:22	39:31	5	*filt_ctx
op	39:22	0:0	6	*
water	39:23	0:0	6	filt_ctx
water	39:32	0:0	4	;
op	40:8	0:0	4	*
water	40:9	0:0	4	filt_ctx
op	40:18	0:0	4	=
water	40:20	0:0	4	NULL
water	40:24	0:0	4	;
water	41:4	0:0	4	}
call	42:4	42:20	2	av_free
arg	42:12	42:20	3	tmp_args
water	42:12	0:0	4	tmp_args
water	42:21	0:0	2	;
return	43:4	43:14	2	ret
water	43:11	0:0	3	ret

func	1:0	37:0	0	static int	mov_write_ac3_tag
params	1:28	0:0	1	
param	1:29	1:44	2	AVIOContext *	pb
param	1:46	1:61	2	MOVTrack *	track
stmnts	0:0	36:13	1	
decl	3:4	3:21	2	GetBitContext	gbc
decl	4:4	4:21	2	PutBitContext	pbc
decl	5:4	5:18	2	uint8_t	buf[3]
decl	6:4	6:52	2	int	fscod
water	6:13	0:0	2	,
decl	6:4	6:52	2	int	bsid
water	6:19	0:0	2	,
decl	6:4	6:52	2	int	bsmod
water	6:26	0:0	2	,
decl	6:4	6:52	2	int	acmod
water	6:33	0:0	2	,
decl	6:4	6:52	2	int	lfeon
water	6:40	0:0	2	,
decl	6:4	6:52	2	int	frmsizecod
if	7:4	8:17	2	(track -> vos_len < 7)
cond	7:8	7:25	3	track -> vos_len < 7
water	7:8	0:0	4	track
op	7:13	0:0	4	->
water	7:15	0:0	4	vos_len
op	7:23	0:0	4	<
water	7:25	0:0	4	7
stmts	8:8	8:17	3	
return	8:8	8:17	4	-1
op	8:15	0:0	5	-
water	8:16	0:0	5	1
call	9:4	9:20	2	avio_wb32
arg	9:14	9:16	3	pb
water	9:14	0:0	4	pb
arg	9:18	9:20	3	11
water	9:18	0:0	4	11
water	9:21	0:0	2	;
call	10:4	10:27	2	ffio_wfourcc
arg	10:17	10:19	3	pb
water	10:17	0:0	4	pb
arg	10:21	10:27	3	"dac3"
water	10:21	0:0	4	"dac3"
water	10:28	0:0	2	;
call	11:4	11:69	2	init_get_bits
arg	11:18	11:22	3	&gbc
op	11:18	0:0	4	&
water	11:19	0:0	4	gbc
arg	11:24	11:43	3	track->vos_data+4
water	11:24	0:0	4	track
op	11:29	0:0	4	->
water	11:31	0:0	4	vos_data
op	11:40	0:0	4	+
water	11:42	0:0	4	4
arg	11:45	11:69	3	(track->vos_len-4)*8
water	11:45	0:0	4	(
water	11:46	0:0	4	track
op	11:51	0:0	4	->
water	11:53	0:0	4	vos_len
op	11:61	0:0	4	-
water	11:63	0:0	4	4
water	11:64	0:0	4	)
op	11:66	0:0	4	*
water	11:68	0:0	4	8
water	11:70	0:0	2	;
water	12:4	0:0	2	fscod
op	12:15	0:0	2	=
call	12:17	12:33	2	get_bits
arg	12:26	12:30	3	&gbc
op	12:26	0:0	4	&
water	12:27	0:0	4	gbc
arg	12:32	12:33	3	2
water	12:32	0:0	4	2
water	12:34	0:0	2	;
water	13:4	0:0	2	frmsizecod
op	13:15	0:0	2	=
call	13:17	13:33	2	get_bits
arg	13:26	13:30	3	&gbc
op	13:26	0:0	4	&
water	13:27	0:0	4	gbc
arg	13:32	13:33	3	6
water	13:32	0:0	4	6
water	13:34	0:0	2	;
water	14:4	0:0	2	bsid
op	14:15	0:0	2	=
call	14:17	14:33	2	get_bits
arg	14:26	14:30	3	&gbc
op	14:26	0:0	4	&
water	14:27	0:0	4	gbc
arg	14:32	14:33	3	5
water	14:32	0:0	4	5
water	14:34	0:0	2	;
water	15:4	0:0	2	bsmod
op	15:15	0:0	2	=
call	15:17	15:33	2	get_bits
arg	15:26	15:30	3	&gbc
op	15:26	0:0	4	&
water	15:27	0:0	4	gbc
arg	15:32	15:33	3	3
water	15:32	0:0	4	3
water	15:34	0:0	2	;
water	16:4	0:0	2	acmod
op	16:15	0:0	2	=
call	16:17	16:33	2	get_bits
arg	16:26	16:30	3	&gbc
op	16:26	0:0	4	&
water	16:27	0:0	4	gbc
arg	16:32	16:33	3	3
water	16:32	0:0	4	3
water	16:34	0:0	2	;
if	17:4	19:4	2	(acmod == 2)
cond	17:8	17:17	3	acmod == 2
water	17:8	0:0	4	acmod
op	17:14	0:0	4	==
water	17:17	0:0	4	2
stmts	17:20	19:4	3	
water	17:20	0:0	4	{
call	18:8	18:25	4	skip_bits
arg	18:18	18:22	5	&gbc
op	18:18	0:0	6	&
water	18:19	0:0	6	gbc
arg	18:24	18:25	5	2
water	18:24	0:0	6	2
water	18:26	0:0	4	;
water	19:4	0:0	4	}
else	19:6	24:4	2
stmts	19:11	24:4	3	
water	19:11	0:0	4	{
if	20:8	21:30	4	(( acmod & 1 ) && acmod != 1)
cond	20:12	20:36	5	( acmod & 1 ) && acmod != 1
water	20:12	0:0	6	(
water	20:13	0:0	6	acmod
op	20:19	0:0	6	&
water	20:21	0:0	6	1
water	20:22	0:0	6	)
op	20:24	0:0	6	&&
water	20:27	0:0	6	acmod
op	20:33	0:0	6	!=
water	20:36	0:0	6	1
stmts	21:12	21:30	5	
call	21:12	21:29	6	skip_bits
arg	21:22	21:26	7	&gbc
op	21:22	0:0	8	&
water	21:23	0:0	8	gbc
arg	21:28	21:29	7	2
water	21:28	0:0	8	2
water	21:30	0:0	6	;
if	22:8	23:30	4	(acmod & 4)
cond	22:12	22:20	5	acmod & 4
water	22:12	0:0	6	acmod
op	22:18	0:0	6	&
water	22:20	0:0	6	4
stmts	23:12	23:30	5	
call	23:12	23:29	6	skip_bits
arg	23:22	23:26	7	&gbc
op	23:22	0:0	8	&
water	23:23	0:0	8	gbc
arg	23:28	23:29	7	2
water	23:28	0:0	8	2
water	23:30	0:0	6	;
water	24:4	0:0	4	}
water	25:4	0:0	2	lfeon
op	25:10	0:0	2	=
call	25:12	25:26	2	get_bits1
arg	25:22	25:26	3	&gbc
op	25:22	0:0	4	&
water	25:23	0:0	4	gbc
water	25:27	0:0	2	;
call	26:4	26:40	2	init_put_bits
arg	26:18	26:22	3	&pbc
op	26:18	0:0	4	&
water	26:19	0:0	4	pbc
arg	26:24	26:27	3	buf
water	26:24	0:0	4	buf
arg	26:29	26:40	3	sizeof(buf)
op	26:29	0:0	4	sizeof
water	26:35	0:0	4	(
water	26:36	0:0	4	buf
water	26:39	0:0	4	)
water	26:41	0:0	2	;
call	27:4	27:27	2	put_bits
arg	27:13	27:17	3	&pbc
op	27:13	0:0	4	&
water	27:14	0:0	4	pbc
arg	27:19	27:20	3	2
water	27:19	0:0	4	2
arg	27:22	27:27	3	fscod
water	27:22	0:0	4	fscod
water	27:28	0:0	2	;
call	28:4	28:26	2	put_bits
arg	28:13	28:17	3	&pbc
op	28:13	0:0	4	&
water	28:14	0:0	4	pbc
arg	28:19	28:20	3	5
water	28:19	0:0	4	5
arg	28:22	28:26	3	bsid
water	28:22	0:0	4	bsid
water	28:27	0:0	2	;
call	29:4	29:27	2	put_bits
arg	29:13	29:17	3	&pbc
op	29:13	0:0	4	&
water	29:14	0:0	4	pbc
arg	29:19	29:20	3	3
water	29:19	0:0	4	3
arg	29:22	29:27	3	bsmod
water	29:22	0:0	4	bsmod
water	29:28	0:0	2	;
call	30:4	30:27	2	put_bits
arg	30:13	30:17	3	&pbc
op	30:13	0:0	4	&
water	30:14	0:0	4	pbc
arg	30:19	30:20	3	3
water	30:19	0:0	4	3
arg	30:22	30:27	3	acmod
water	30:22	0:0	4	acmod
water	30:28	0:0	2	;
call	31:4	31:27	2	put_bits
arg	31:13	31:17	3	&pbc
op	31:13	0:0	4	&
water	31:14	0:0	4	pbc
arg	31:19	31:20	3	1
water	31:19	0:0	4	1
arg	31:22	31:27	3	lfeon
water	31:22	0:0	4	lfeon
water	31:28	0:0	2	;
call	32:4	32:37	2	put_bits
arg	32:13	32:17	3	&pbc
op	32:13	0:0	4	&
water	32:14	0:0	4	pbc
arg	32:19	32:20	3	5
water	32:19	0:0	4	5
arg	32:22	32:37	3	frmsizecod>>1
water	32:22	0:0	4	frmsizecod
op	32:33	0:0	4	>>
water	32:36	0:0	4	1
water	32:38	0:0	2	;
call	33:4	33:23	2	put_bits
arg	33:13	33:17	3	&pbc
op	33:13	0:0	4	&
water	33:14	0:0	4	pbc
arg	33:19	33:20	3	5
water	33:19	0:0	4	5
arg	33:22	33:23	3	0
water	33:22	0:0	4	0
water	33:24	0:0	2	;
call	34:4	34:23	2	flush_put_bits
arg	34:19	34:23	3	&pbc
op	34:19	0:0	4	&
water	34:20	0:0	4	pbc
water	34:24	0:0	2	;
call	35:4	35:35	2	avio_write
arg	35:15	35:17	3	pb
water	35:15	0:0	4	pb
arg	35:19	35:22	3	buf
water	35:19	0:0	4	buf
arg	35:24	35:35	3	sizeof(buf)
op	35:24	0:0	4	sizeof
water	35:30	0:0	4	(
water	35:31	0:0	4	buf
water	35:34	0:0	4	)
water	35:36	0:0	2	;
return	36:4	36:13	2	11
water	36:11	0:0	3	11

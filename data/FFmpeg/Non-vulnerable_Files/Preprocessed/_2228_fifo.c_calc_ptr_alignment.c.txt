func	1:0	15:0	0	static int	calc_ptr_alignment
params	1:29	0:0	1	
param	1:30	1:44	2	AVFrame *	frame
stmnts	0:0	14:20	1	
decl	3:4	4:77	2	int	planes
op	3:15	0:0	2	=
call	3:17	3:54	3	av_sample_fmt_is_planar
arg	3:41	3:54	4	frame->format
water	3:41	0:0	5	frame
op	3:46	0:0	5	->
water	3:48	0:0	5	format
water	3:56	0:0	2	?
call	4:17	4:72	3	av_get_channel_layout_nb_channels
arg	4:51	4:72	4	frame->channel_layout
water	4:51	0:0	5	frame
op	4:56	0:0	5	->
water	4:58	0:0	5	channel_layout
water	4:74	0:0	2	:
water	4:76	0:0	2	1
decl	5:4	5:23	2	int	min_align
op	5:18	0:0	2	=
water	5:20	0:0	2	128
decl	6:4	6:9	2	int	p
for	7:4	13:4	2	(p = 0 ;p < planes;p ++)
forinit	7:9	7:14	3	p = 0 ;
water	7:9	0:0	4	p
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	p < planes
water	7:16	0:0	4	p
op	7:18	0:0	4	<
water	7:20	0:0	4	planes
forexpr	7:28	7:29	3	p ++
water	7:28	0:0	4	p
op	7:29	0:0	4	++
stmts	7:33	13:4	3	
water	7:33	0:0	4	{
decl	8:8	8:27	4	int	cur_align
op	8:22	0:0	4	=
water	8:24	0:0	4	128
while	9:8	10:27	4	(( intptr_t ) frame -> extended_data [ p ] % cur_align)
cond	9:15	9:51	5	( intptr_t ) frame -> extended_data [ p ] % cur_align
water	9:15	0:0	6	(
water	9:16	0:0	6	intptr_t
water	9:24	0:0	6	)
water	9:25	0:0	6	frame
op	9:30	0:0	6	->
water	9:32	0:0	6	extended_data
op	9:45	0:0	6	[
water	9:46	0:0	6	p
op	9:47	0:0	6	]
op	9:49	0:0	6	%
water	9:51	0:0	6	cur_align
stmts	10:12	10:27	5	
water	10:12	0:0	6	cur_align
op	10:22	0:0	6	>>=
water	10:26	0:0	6	1
water	10:27	0:0	6	;
if	11:8	12:33	4	(cur_align < min_align)
cond	11:12	11:24	5	cur_align < min_align
water	11:12	0:0	6	cur_align
op	11:22	0:0	6	<
water	11:24	0:0	6	min_align
stmts	12:12	12:33	5	
water	12:12	0:0	6	min_align
op	12:22	0:0	6	=
water	12:24	0:0	6	cur_align
water	12:33	0:0	6	;
water	13:4	0:0	4	}
return	14:4	14:20	2	min_align
water	14:11	0:0	3	min_align

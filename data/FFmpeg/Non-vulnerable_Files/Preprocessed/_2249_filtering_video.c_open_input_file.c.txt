decl	1:7	1:40	0	int64_t	last_pts
op	1:24	0:0	0	=
water	1:26	0:0	0	AV_NOPTS_VALUE
func	2:0	29:0	0	static int	open_input_file
params	2:26	0:0	1	
param	2:27	2:47	2	const char *	filename
stmnts	0:0	28:12	1	
decl	4:4	4:11	2	int	ret
decl	5:4	5:16	2	AVCodec	*dec
if	6:4	9:4	2	(( ret =avformat_open_input (& fmt_ctx ,filename ,NULL ,NULL ) ) < 0)
cond	6:8	6:70	3	( ret =avformat_open_input (& fmt_ctx ,filename ,NULL ,NULL ) ) < 0
water	6:8	0:0	4	(
water	6:9	0:0	4	ret
op	6:13	0:0	4	=
call	6:15	6:65	4	avformat_open_input
arg	6:35	6:43	5	&fmt_ctx
op	6:35	0:0	6	&
water	6:36	0:0	6	fmt_ctx
arg	6:45	6:53	5	filename
water	6:45	0:0	6	filename
arg	6:55	6:59	5	NULL
water	6:55	0:0	6	NULL
arg	6:61	6:65	5	NULL
water	6:61	0:0	6	NULL
water	6:66	0:0	4	)
op	6:68	0:0	4	<
water	6:70	0:0	4	0
stmts	6:73	9:4	3	
water	6:73	0:0	4	{
call	7:8	7:61	4	av_log
arg	7:15	7:19	5	NULL
water	7:15	0:0	6	NULL
arg	7:21	7:33	5	AV_LOG_ERROR
water	7:21	0:0	6	AV_LOG_ERROR
arg	7:35	7:61	5	"Cannot open input file\n"
water	7:35	0:0	6	"Cannot open input file\n"
water	7:62	0:0	4	;
return	8:8	8:18	4	ret
water	8:15	0:0	5	ret
water	9:4	0:0	4	}
if	10:4	13:4	2	(( ret =avformat_find_stream_info (fmt_ctx ,NULL ) ) < 0)
cond	10:8	10:59	3	( ret =avformat_find_stream_info (fmt_ctx ,NULL ) ) < 0
water	10:8	0:0	4	(
water	10:9	0:0	4	ret
op	10:13	0:0	4	=
call	10:15	10:54	4	avformat_find_stream_info
arg	10:41	10:48	5	fmt_ctx
water	10:41	0:0	6	fmt_ctx
arg	10:50	10:54	5	NULL
water	10:50	0:0	6	NULL
water	10:55	0:0	4	)
op	10:57	0:0	4	<
water	10:59	0:0	4	0
stmts	10:62	13:4	3	
water	10:62	0:0	4	{
call	11:8	11:69	4	av_log
arg	11:15	11:19	5	NULL
water	11:15	0:0	6	NULL
arg	11:21	11:33	5	AV_LOG_ERROR
water	11:21	0:0	6	AV_LOG_ERROR
arg	11:35	11:69	5	"Cannot find stream information\n"
water	11:35	0:0	6	"Cannot find stream information\n"
water	11:70	0:0	4	;
return	12:8	12:18	4	ret
water	12:15	0:0	5	ret
water	13:4	0:0	4	}
water	15:4	0:0	2	ret
op	15:8	0:0	2	=
call	15:10	15:74	2	av_find_best_stream
arg	15:30	15:37	3	fmt_ctx
water	15:30	0:0	4	fmt_ctx
arg	15:39	15:57	3	AVMEDIA_TYPE_VIDEO
water	15:39	0:0	4	AVMEDIA_TYPE_VIDEO
arg	15:59	15:61	3	-1
op	15:59	0:0	4	-
water	15:60	0:0	4	1
arg	15:63	15:65	3	-1
op	15:63	0:0	4	-
water	15:64	0:0	4	1
arg	15:67	15:71	3	&dec
op	15:67	0:0	4	&
water	15:68	0:0	4	dec
arg	15:73	15:74	3	0
water	15:73	0:0	4	0
water	15:75	0:0	2	;
if	16:4	19:4	2	(ret < 0)
cond	16:8	16:14	3	ret < 0
water	16:8	0:0	4	ret
op	16:12	0:0	4	<
water	16:14	0:0	4	0
stmts	16:17	19:4	3	
water	16:17	0:0	4	{
call	17:8	17:83	4	av_log
arg	17:15	17:19	5	NULL
water	17:15	0:0	6	NULL
arg	17:21	17:33	5	AV_LOG_ERROR
water	17:21	0:0	6	AV_LOG_ERROR
arg	17:35	17:83	5	"Cannot find a video stream in the input file\n"
water	17:35	0:0	6	"Cannot find a video stream in the input file\n"
water	17:84	0:0	4	;
return	18:8	18:18	4	ret
water	18:15	0:0	5	ret
water	19:4	0:0	4	}
water	20:4	0:0	2	video_stream_index
op	20:23	0:0	2	=
water	20:25	0:0	2	ret
water	20:28	0:0	2	;
water	21:4	0:0	2	dec_ctx
op	21:12	0:0	2	=
water	21:14	0:0	2	fmt_ctx
op	21:21	0:0	2	->
water	21:23	0:0	2	streams
op	21:30	0:0	2	[
water	21:31	0:0	2	video_stream_index
op	21:49	0:0	2	]
op	21:50	0:0	2	->
water	21:52	0:0	2	codec
water	21:57	0:0	2	;
call	22:4	22:53	2	av_opt_set_int
arg	22:19	22:26	3	dec_ctx
water	22:19	0:0	4	dec_ctx
arg	22:28	22:47	3	"refcounted_frames"
water	22:28	0:0	4	"refcounted_frames"
arg	22:49	22:50	3	1
water	22:49	0:0	4	1
arg	22:52	22:53	3	0
water	22:52	0:0	4	0
water	22:54	0:0	2	;
if	24:4	27:4	2	(( ret =avcodec_open2 (dec_ctx ,dec ,NULL ) ) < 0)
cond	24:8	24:52	3	( ret =avcodec_open2 (dec_ctx ,dec ,NULL ) ) < 0
water	24:8	0:0	4	(
water	24:9	0:0	4	ret
op	24:13	0:0	4	=
call	24:15	24:47	4	avcodec_open2
arg	24:29	24:36	5	dec_ctx
water	24:29	0:0	6	dec_ctx
arg	24:38	24:41	5	dec
water	24:38	0:0	6	dec
arg	24:43	24:47	5	NULL
water	24:43	0:0	6	NULL
water	24:48	0:0	4	)
op	24:50	0:0	4	<
water	24:52	0:0	4	0
stmts	24:55	27:4	3	
water	24:55	0:0	4	{
call	25:8	25:64	4	av_log
arg	25:15	25:19	5	NULL
water	25:15	0:0	6	NULL
arg	25:21	25:33	5	AV_LOG_ERROR
water	25:21	0:0	6	AV_LOG_ERROR
arg	25:35	25:64	5	"Cannot open video decoder\n"
water	25:35	0:0	6	"Cannot open video decoder\n"
water	25:65	0:0	4	;
return	26:8	26:18	4	ret
water	26:15	0:0	5	ret
water	27:4	0:0	4	}
return	28:4	28:12	2	0
water	28:11	0:0	3	0

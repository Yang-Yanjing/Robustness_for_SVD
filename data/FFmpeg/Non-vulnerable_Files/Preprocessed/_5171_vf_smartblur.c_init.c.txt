func	2:15	20:0	0	int	init
params	2:23	0:0	1	
param	2:24	2:44	2	AVFilterContext *	ctx
stmnts	0:0	19:12	1	
decl	4:4	4:35	2	SmartblurContext	*s
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
if	6:4	7:41	2	(s -> chroma . radius < RADIUS_MIN)
cond	6:8	6:27	3	s -> chroma . radius < RADIUS_MIN
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	chroma
op	6:17	0:0	4	.
water	6:18	0:0	4	radius
op	6:25	0:0	4	<
water	6:27	0:0	4	RADIUS_MIN
stmts	7:8	7:41	3	
water	7:8	0:0	4	s
op	7:9	0:0	4	->
water	7:11	0:0	4	chroma
op	7:17	0:0	4	.
water	7:18	0:0	4	radius
op	7:25	0:0	4	=
water	7:27	0:0	4	s
op	7:28	0:0	4	->
water	7:30	0:0	4	luma
op	7:34	0:0	4	.
water	7:35	0:0	4	radius
water	7:41	0:0	4	;
if	8:4	9:46	2	(s -> chroma . strength < STRENGTH_MIN)
cond	8:8	8:29	3	s -> chroma . strength < STRENGTH_MIN
water	8:8	0:0	4	s
op	8:9	0:0	4	->
water	8:11	0:0	4	chroma
op	8:17	0:0	4	.
water	8:18	0:0	4	strength
op	8:27	0:0	4	<
water	8:29	0:0	4	STRENGTH_MIN
stmts	9:8	9:46	3	
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	chroma
op	9:17	0:0	4	.
water	9:18	0:0	4	strength
op	9:28	0:0	4	=
water	9:30	0:0	4	s
op	9:31	0:0	4	->
water	9:33	0:0	4	luma
op	9:37	0:0	4	.
water	9:38	0:0	4	strength
water	9:46	0:0	4	;
if	10:4	11:47	2	(s -> chroma . threshold < THRESHOLD_MIN)
cond	10:8	10:30	3	s -> chroma . threshold < THRESHOLD_MIN
water	10:8	0:0	4	s
op	10:9	0:0	4	->
water	10:11	0:0	4	chroma
op	10:17	0:0	4	.
water	10:18	0:0	4	threshold
op	10:28	0:0	4	<
water	10:30	0:0	4	THRESHOLD_MIN
stmts	11:8	11:47	3	
water	11:8	0:0	4	s
op	11:9	0:0	4	->
water	11:11	0:0	4	chroma
op	11:17	0:0	4	.
water	11:18	0:0	4	threshold
op	11:28	0:0	4	=
water	11:30	0:0	4	s
op	11:31	0:0	4	->
water	11:33	0:0	4	luma
op	11:37	0:0	4	.
water	11:38	0:0	4	threshold
water	11:47	0:0	4	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	luma
op	12:11	0:0	2	.
water	12:12	0:0	2	quality
op	12:20	0:0	2	=
water	12:22	0:0	2	s
op	12:23	0:0	2	->
water	12:25	0:0	2	chroma
op	12:31	0:0	2	.
water	12:32	0:0	2	quality
op	12:40	0:0	2	=
water	12:42	0:0	2	3
op	12:43	0:0	2	.
water	12:44	0:0	2	0
water	12:45	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	sws_flags
op	13:17	0:0	2	=
water	13:19	0:0	2	SWS_BICUBIC
water	13:30	0:0	2	;
call	14:4	18:68	2	av_log
arg	14:11	14:14	3	ctx
water	14:11	0:0	4	ctx
arg	14:16	14:30	3	AV_LOG_VERBOSE
water	14:16	0:0	4	AV_LOG_VERBOSE
arg	15:11	16:70	3	"luma_radius:%f luma_strength:%f luma_threshold:%d ""chroma_radius:%f chroma_strength:%f chroma_threshold:%d\n"
water	15:11	0:0	4	"luma_radius:%f luma_strength:%f luma_threshold:%d "
water	16:11	0:0	4	"chroma_radius:%f chroma_strength:%f chroma_threshold:%d\n"
arg	17:11	17:25	3	s->luma.radius
water	17:11	0:0	4	s
op	17:12	0:0	4	->
water	17:14	0:0	4	luma
op	17:18	0:0	4	.
water	17:19	0:0	4	radius
arg	17:27	17:43	3	s->luma.strength
water	17:27	0:0	4	s
op	17:28	0:0	4	->
water	17:30	0:0	4	luma
op	17:34	0:0	4	.
water	17:35	0:0	4	strength
arg	17:45	17:62	3	s->luma.threshold
water	17:45	0:0	4	s
op	17:46	0:0	4	->
water	17:48	0:0	4	luma
op	17:52	0:0	4	.
water	17:53	0:0	4	threshold
arg	18:11	18:27	3	s->chroma.radius
water	18:11	0:0	4	s
op	18:12	0:0	4	->
water	18:14	0:0	4	chroma
op	18:20	0:0	4	.
water	18:21	0:0	4	radius
arg	18:29	18:47	3	s->chroma.strength
water	18:29	0:0	4	s
op	18:30	0:0	4	->
water	18:32	0:0	4	chroma
op	18:38	0:0	4	.
water	18:39	0:0	4	strength
arg	18:49	18:68	3	s->chroma.threshold
water	18:49	0:0	4	s
op	18:50	0:0	4	->
water	18:52	0:0	4	chroma
op	18:58	0:0	4	.
water	18:59	0:0	4	threshold
water	18:69	0:0	2	;
return	19:4	19:12	2	0
water	19:11	0:0	3	0

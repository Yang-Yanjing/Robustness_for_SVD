func	1:0	26:0	0	static void	disp_node
params	1:21	0:0	1	
param	1:22	1:35	2	AVBPrint *	buf
param	2:22	2:50	2	const struct color_node *	map
param	3:22	3:35	2	int	parent_id
param	3:37	3:48	2	int	node_id
param	4:22	4:31	2	int	depth
stmnts	0:0	25:85	1	
decl	6:4	6:49	2	const struct color_node	*node
op	6:34	0:0	2	=
op	6:36	0:0	2	&
water	6:37	0:0	2	map
op	6:40	0:0	2	[
water	6:41	0:0	2	node_id
op	6:48	0:0	2	]
decl	7:4	9:65	2	const uint32_t	fontcolor
op	7:29	0:0	2	=
water	7:31	0:0	2	node
op	7:35	0:0	2	->
water	7:37	0:0	2	val
op	7:40	0:0	2	[
water	7:41	0:0	2	0
op	7:42	0:0	2	]
op	7:44	0:0	2	>
water	7:46	0:0	2	0
water	7:47	0:0	2	x50
op	7:51	0:0	2	&&
water	8:31	0:0	2	node
op	8:35	0:0	2	->
water	8:37	0:0	2	val
op	8:40	0:0	2	[
water	8:41	0:0	2	1
op	8:42	0:0	2	]
op	8:44	0:0	2	>
water	8:46	0:0	2	0
water	8:47	0:0	2	x50
op	8:51	0:0	2	&&
water	9:31	0:0	2	node
op	9:35	0:0	2	->
water	9:37	0:0	2	val
op	9:40	0:0	2	[
water	9:41	0:0	2	2
op	9:42	0:0	2	]
op	9:44	0:0	2	>
water	9:46	0:0	2	0
water	9:47	0:0	2	x50
water	9:51	0:0	2	?
water	9:53	0:0	2	0
water	9:55	0:0	2	:
water	9:57	0:0	2	0
water	9:58	0:0	2	xffffff
call	10:4	20:24	2	av_bprintf
arg	10:15	10:18	3	buf
water	10:15	0:0	4	buf
arg	10:20	13:39	3	"%*cnode%d [""label=\"%c%02X%c%02X%c%02X%c\" ""fillcolor=\"#%02x%02x%02x\" ""fontcolor=\"#%06X\"]\n"
water	10:20	0:0	4	"%*cnode%d ["
water	11:15	0:0	4	"label=\"%c%02X%c%02X%c%02X%c\" "
water	12:15	0:0	4	"fillcolor=\"#%02x%02x%02x\" "
water	13:15	0:0	4	"fontcolor=\"#%06X\"]\n"
arg	14:15	14:27	3	depth*INDENT
water	14:15	0:0	4	depth
op	14:20	0:0	4	*
water	14:21	0:0	4	INDENT
arg	14:29	14:32	3	' '
water	14:29	0:0	4	' '
arg	14:34	14:50	3	node->palette_id
water	14:34	0:0	4	node
op	14:38	0:0	4	->
water	14:40	0:0	4	palette_id
arg	15:15	15:33	3	"[  "[node->split]
water	15:15	0:0	4	"[  "
op	15:20	0:0	4	[
water	15:21	0:0	4	node
op	15:25	0:0	4	->
water	15:27	0:0	4	split
op	15:32	0:0	4	]
arg	15:35	15:47	3	node->val[0]
water	15:35	0:0	4	node
op	15:39	0:0	4	->
water	15:41	0:0	4	val
op	15:44	0:0	4	[
water	15:45	0:0	4	0
op	15:46	0:0	4	]
arg	16:15	16:33	3	"][ "[node->split]
water	16:15	0:0	4	"][ "
op	16:20	0:0	4	[
water	16:21	0:0	4	node
op	16:25	0:0	4	->
water	16:27	0:0	4	split
op	16:32	0:0	4	]
arg	16:35	16:47	3	node->val[1]
water	16:35	0:0	4	node
op	16:39	0:0	4	->
water	16:41	0:0	4	val
op	16:44	0:0	4	[
water	16:45	0:0	4	1
op	16:46	0:0	4	]
arg	17:15	17:33	3	" ]["[node->split]
water	17:15	0:0	4	" ]["
op	17:20	0:0	4	[
water	17:21	0:0	4	node
op	17:25	0:0	4	->
water	17:27	0:0	4	split
op	17:32	0:0	4	]
arg	17:35	17:47	3	node->val[2]
water	17:35	0:0	4	node
op	17:39	0:0	4	->
water	17:41	0:0	4	val
op	17:44	0:0	4	[
water	17:45	0:0	4	2
op	17:46	0:0	4	]
arg	18:15	18:33	3	"  ]"[node->split]
water	18:15	0:0	4	"  ]"
op	18:20	0:0	4	[
water	18:21	0:0	4	node
op	18:25	0:0	4	->
water	18:27	0:0	4	split
op	18:32	0:0	4	]
arg	19:15	19:27	3	node->val[0]
water	19:15	0:0	4	node
op	19:19	0:0	4	->
water	19:21	0:0	4	val
op	19:24	0:0	4	[
water	19:25	0:0	4	0
op	19:26	0:0	4	]
arg	19:29	19:41	3	node->val[1]
water	19:29	0:0	4	node
op	19:33	0:0	4	->
water	19:35	0:0	4	val
op	19:38	0:0	4	[
water	19:39	0:0	4	1
op	19:40	0:0	4	]
arg	19:43	19:55	3	node->val[2]
water	19:43	0:0	4	node
op	19:47	0:0	4	->
water	19:49	0:0	4	val
op	19:52	0:0	4	[
water	19:53	0:0	4	2
op	19:54	0:0	4	]
arg	20:15	20:24	3	fontcolor
water	20:15	0:0	4	fontcolor
water	20:25	0:0	2	;
if	21:4	23:63	2	(parent_id != - 1)
cond	21:8	21:22	3	parent_id != - 1
water	21:8	0:0	4	parent_id
op	21:18	0:0	4	!=
op	21:21	0:0	4	-
water	21:22	0:0	4	1
stmts	22:8	23:63	3	
call	22:8	23:62	4	av_bprintf
arg	22:19	22:22	5	buf
water	22:19	0:0	6	buf
arg	22:24	22:47	5	"%*cnode%d -> node%d\n"
water	22:24	0:0	6	"%*cnode%d -> node%d\n"
arg	22:49	22:61	5	depth*INDENT
water	22:49	0:0	6	depth
op	22:54	0:0	6	*
water	22:55	0:0	6	INDENT
arg	22:63	22:66	5	' '
water	22:63	0:0	6	' '
arg	23:19	23:44	5	map[parent_id].palette_id
water	23:19	0:0	6	map
op	23:22	0:0	6	[
water	23:23	0:0	6	parent_id
op	23:32	0:0	6	]
op	23:33	0:0	6	.
water	23:34	0:0	6	palette_id
arg	23:46	23:62	5	node->palette_id
water	23:46	0:0	6	node
op	23:50	0:0	6	->
water	23:52	0:0	6	palette_id
water	23:63	0:0	4	;
if	24:4	24:85	2	(node -> left_id != - 1)
cond	24:8	24:27	3	node -> left_id != - 1
water	24:8	0:0	4	node
op	24:12	0:0	4	->
water	24:14	0:0	4	left_id
op	24:23	0:0	4	!=
op	24:26	0:0	4	-
water	24:27	0:0	4	1
stmts	24:30	24:85	3	
call	24:30	24:84	4	disp_node
arg	24:40	24:43	5	buf
water	24:40	0:0	6	buf
arg	24:45	24:48	5	map
water	24:45	0:0	6	map
arg	24:50	24:57	5	node_id
water	24:50	0:0	6	node_id
arg	24:59	24:72	5	node->left_id
water	24:59	0:0	6	node
op	24:63	0:0	6	->
water	24:65	0:0	6	left_id
arg	24:75	24:84	5	depth+1
water	24:75	0:0	6	depth
op	24:81	0:0	6	+
water	24:83	0:0	6	1
water	24:85	0:0	4	;
if	25:4	25:85	2	(node -> right_id != - 1)
cond	25:8	25:27	3	node -> right_id != - 1
water	25:8	0:0	4	node
op	25:12	0:0	4	->
water	25:14	0:0	4	right_id
op	25:23	0:0	4	!=
op	25:26	0:0	4	-
water	25:27	0:0	4	1
stmts	25:30	25:85	3	
call	25:30	25:84	4	disp_node
arg	25:40	25:43	5	buf
water	25:40	0:0	6	buf
arg	25:45	25:48	5	map
water	25:45	0:0	6	map
arg	25:50	25:57	5	node_id
water	25:50	0:0	6	node_id
arg	25:59	25:73	5	node->right_id
water	25:59	0:0	6	node
op	25:63	0:0	6	->
water	25:65	0:0	6	right_id
arg	25:75	25:84	5	depth+1
water	25:75	0:0	6	depth
op	25:81	0:0	6	+
water	25:83	0:0	6	1
water	25:85	0:0	4	;

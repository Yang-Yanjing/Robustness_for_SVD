func	1:0	20:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:60	2	AVFrame *	frame
stmnts	0:0	19:14	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:28	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:28	2	int	ret
op	4:15	0:0	2	=
water	4:17	0:0	2	AVERROR_EOF
for	5:4	17:4	2	(i = 0 ;i < ctx -> nb_outputs;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:25	3	i < ctx -> nb_outputs
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	ctx
op	5:23	0:0	4	->
water	5:25	0:0	4	nb_outputs
forexpr	5:37	5:38	3	i ++
water	5:37	0:0	4	i
op	5:38	0:0	4	++
stmts	5:42	17:4	3	
water	5:42	0:0	4	{
decl	6:8	6:24	4	AVFrame	*buf_out
if	7:8	8:20	4	(ctx -> outputs [ i ] -> closed)
cond	7:12	7:29	5	ctx -> outputs [ i ] -> closed
water	7:12	0:0	6	ctx
op	7:15	0:0	6	->
water	7:17	0:0	6	outputs
op	7:24	0:0	6	[
water	7:25	0:0	6	i
op	7:26	0:0	6	]
op	7:27	0:0	6	->
water	7:29	0:0	6	closed
stmts	8:12	8:20	5	
continue	8:12	8:20	6	
water	9:8	0:0	4	buf_out
op	9:16	0:0	4	=
call	9:18	9:38	4	av_frame_clone
arg	9:33	9:38	5	frame
water	9:33	0:0	6	frame
water	9:39	0:0	4	;
if	10:8	13:8	4	(! buf_out)
cond	10:12	10:13	5	! buf_out
op	10:12	0:0	6	!
water	10:13	0:0	6	buf_out
stmts	10:22	13:8	5	
water	10:22	0:0	6	{
water	11:12	0:0	6	ret
op	11:16	0:0	6	=
call	11:18	11:32	6	AVERROR
arg	11:26	11:32	7	ENOMEM
water	11:26	0:0	8	ENOMEM
water	11:33	0:0	6	;
break	12:12	12:17	6	
water	13:8	0:0	6	}
water	14:8	0:0	4	ret
op	14:12	0:0	4	=
call	14:14	14:54	4	ff_filter_frame
arg	14:30	14:45	5	ctx->outputs[i]
water	14:30	0:0	6	ctx
op	14:33	0:0	6	->
water	14:35	0:0	6	outputs
op	14:42	0:0	6	[
water	14:43	0:0	6	i
op	14:44	0:0	6	]
arg	14:47	14:54	5	buf_out
water	14:47	0:0	6	buf_out
water	14:55	0:0	4	;
if	15:8	16:17	4	(ret < 0)
cond	15:12	15:18	5	ret < 0
water	15:12	0:0	6	ret
op	15:16	0:0	6	<
water	15:18	0:0	6	0
stmts	16:12	16:17	5	
break	16:12	16:17	6	
water	17:4	0:0	4	}
call	18:4	18:24	2	av_frame_free
arg	18:18	18:24	3	&frame
op	18:18	0:0	4	&
water	18:19	0:0	4	frame
water	18:25	0:0	2	;
return	19:4	19:14	2	ret
water	19:11	0:0	3	ret

func	1:0	25:0	0	static int	load_mask
params	1:20	0:0	1	
param	1:21	1:35	2	uint8_t * *	mask
param	1:37	1:43	2	int *	w
param	1:45	1:51	2	int *	h
param	2:21	2:41	2	const char *	filename
param	2:43	2:56	2	void *	log_ctx
stmnts	0:0	24:14	1	
decl	4:4	4:11	2	int	ret
decl	5:4	5:30	2	enum AVPixelFormat	pix_fmt
decl	6:4	6:39	2	uint8_t	*src_data[4]
water	6:24	0:0	2	,
decl	6:4	6:39	2	uint8_t	*gray_data[4]
decl	7:4	7:41	2	int	src_linesize[4]
water	7:23	0:0	2	,
decl	7:4	7:41	2	int	gray_linesize[4]
if	9:4	10:18	2	(( ret =ff_load_image (src_data ,src_linesize ,w ,h ,& pix_fmt ,filename ,log_ctx ) ) < 0)
cond	9:8	9:91	3	( ret =ff_load_image (src_data ,src_linesize ,w ,h ,& pix_fmt ,filename ,log_ctx ) ) < 0
water	9:8	0:0	4	(
water	9:9	0:0	4	ret
op	9:13	0:0	4	=
call	9:15	9:86	4	ff_load_image
arg	9:29	9:37	5	src_data
water	9:29	0:0	6	src_data
arg	9:39	9:51	5	src_linesize
water	9:39	0:0	6	src_linesize
arg	9:53	9:54	5	w
water	9:53	0:0	6	w
arg	9:56	9:57	5	h
water	9:56	0:0	6	h
arg	9:59	9:67	5	&pix_fmt
op	9:59	0:0	6	&
water	9:60	0:0	6	pix_fmt
arg	9:69	9:77	5	filename
water	9:69	0:0	6	filename
arg	9:79	9:86	5	log_ctx
water	9:79	0:0	6	log_ctx
water	9:87	0:0	4	)
op	9:89	0:0	4	<
water	9:91	0:0	4	0
stmts	10:8	10:18	3	
return	10:8	10:18	4	ret
water	10:15	0:0	5	ret
if	12:4	15:16	2	(( ret =ff_scale_image (gray_data ,gray_linesize ,* w ,* h ,AV_PIX_FMT_GRAY8 ,src_data ,src_linesize ,* w ,* h ,pix_fmt ,log_ctx ) ) < 0)
cond	12:8	14:42	3	( ret =ff_scale_image (gray_data ,gray_linesize ,* w ,* h ,AV_PIX_FMT_GRAY8 ,src_data ,src_linesize ,* w ,* h ,pix_fmt ,log_ctx ) ) < 0
water	12:8	0:0	4	(
water	12:9	0:0	4	ret
op	12:13	0:0	4	=
call	12:15	14:37	4	ff_scale_image
arg	12:30	12:39	5	gray_data
water	12:30	0:0	6	gray_data
arg	12:41	12:54	5	gray_linesize
water	12:41	0:0	6	gray_linesize
arg	12:56	12:58	5	*w
op	12:56	0:0	6	*
water	12:57	0:0	6	w
arg	12:60	12:62	5	*h
op	12:60	0:0	6	*
water	12:61	0:0	6	h
arg	12:64	12:80	5	AV_PIX_FMT_GRAY8
water	12:64	0:0	6	AV_PIX_FMT_GRAY8
arg	13:30	13:38	5	src_data
water	13:30	0:0	6	src_data
arg	13:40	13:52	5	src_linesize
water	13:40	0:0	6	src_linesize
arg	13:54	13:56	5	*w
op	13:54	0:0	6	*
water	13:55	0:0	6	w
arg	13:58	13:60	5	*h
op	13:58	0:0	6	*
water	13:59	0:0	6	h
arg	13:62	13:69	5	pix_fmt
water	13:62	0:0	6	pix_fmt
arg	14:30	14:37	5	log_ctx
water	14:30	0:0	6	log_ctx
water	14:38	0:0	4	)
op	14:40	0:0	4	<
water	14:42	0:0	4	0
stmts	15:8	15:16	3	
goto	15:8	15:16	4	end
water	15:13	0:0	5	end
op	17:4	0:0	2	*
water	17:5	0:0	2	mask
op	17:10	0:0	2	=
call	17:12	17:29	2	av_malloc
arg	17:22	17:29	3	*w**h
op	17:22	0:0	4	*
water	17:23	0:0	4	w
op	17:25	0:0	4	*
op	17:27	0:0	4	*
water	17:28	0:0	4	h
water	17:30	0:0	2	;
if	18:4	19:29	2	(! * mask)
cond	18:8	18:10	3	! * mask
op	18:8	0:0	4	!
op	18:9	0:0	4	*
water	18:10	0:0	4	mask
stmts	19:8	19:29	3	
water	19:8	0:0	4	ret
op	19:12	0:0	4	=
call	19:14	19:28	4	AVERROR
arg	19:22	19:28	5	ENOMEM
water	19:22	0:0	6	ENOMEM
water	19:29	0:0	4	;
call	20:4	20:73	2	av_image_copy_plane
arg	20:24	20:29	3	*mask
op	20:24	0:0	4	*
water	20:25	0:0	4	mask
arg	20:31	20:33	3	*w
op	20:31	0:0	4	*
water	20:32	0:0	4	w
arg	20:35	20:47	3	gray_data[0]
water	20:35	0:0	4	gray_data
op	20:44	0:0	4	[
water	20:45	0:0	4	0
op	20:46	0:0	4	]
arg	20:49	20:65	3	gray_linesize[0]
water	20:49	0:0	4	gray_linesize
op	20:62	0:0	4	[
water	20:63	0:0	4	0
op	20:64	0:0	4	]
arg	20:67	20:69	3	*w
op	20:67	0:0	4	*
water	20:68	0:0	4	w
arg	20:71	20:73	3	*h
op	20:71	0:0	4	*
water	20:72	0:0	4	h
water	20:74	0:0	2	;
label	21:0	21:3	2	end :
call	22:4	22:25	2	av_freep
arg	22:13	22:25	3	&src_data[0]
op	22:13	0:0	4	&
water	22:14	0:0	4	src_data
op	22:22	0:0	4	[
water	22:23	0:0	4	0
op	22:24	0:0	4	]
water	22:26	0:0	2	;
call	23:4	23:26	2	av_freep
arg	23:13	23:26	3	&gray_data[0]
op	23:13	0:0	4	&
water	23:14	0:0	4	gray_data
op	23:23	0:0	4	[
water	23:24	0:0	4	0
op	23:25	0:0	4	]
water	23:27	0:0	2	;
return	24:4	24:14	2	ret
water	24:11	0:0	3	ret

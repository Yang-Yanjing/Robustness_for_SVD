func	1:0	28:0	0	static inline void	create_chrominance_lut
params	1:41	0:0	1	
param	1:42	1:55	2	HueContext *	h
param	1:57	1:72	2	const int32_t	c
param	2:42	2:57	2	const int32_t	s
stmnts	0:0	27:4	1	
decl	4:4	4:36	2	int32_t	i
water	4:13	0:0	2	,
decl	4:4	4:36	2	int32_t	j
water	4:16	0:0	2	,
decl	4:4	4:36	2	int32_t	u
water	4:19	0:0	2	,
decl	4:4	4:36	2	int32_t	v
water	4:22	0:0	2	,
decl	4:4	4:36	2	int32_t	new_u
water	4:29	0:0	2	,
decl	4:4	4:36	2	int32_t	new_v
for	9:4	27:4	2	(i = 0 ;i < 256;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:20	3	i < 256
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	256
forexpr	9:25	9:26	3	i ++
water	9:25	0:0	4	i
op	9:26	0:0	4	++
stmts	9:30	27:4	3	
water	9:30	0:0	4	{
for	10:8	26:8	4	(j = 0 ;j < 256;j ++)
forinit	10:13	10:18	5	j = 0 ;
water	10:13	0:0	6	j
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:18	0:0	6	;
cond	10:20	10:24	5	j < 256
water	10:20	0:0	6	j
op	10:22	0:0	6	<
water	10:24	0:0	6	256
forexpr	10:29	10:30	5	j ++
water	10:29	0:0	6	j
op	10:30	0:0	6	++
stmts	10:34	26:8	5	
water	10:34	0:0	6	{
water	12:12	0:0	6	u
op	12:14	0:0	6	=
water	12:16	0:0	6	i
op	12:18	0:0	6	-
water	12:20	0:0	6	128
water	12:23	0:0	6	;
water	13:12	0:0	6	v
op	13:14	0:0	6	=
water	13:16	0:0	6	j
op	13:18	0:0	6	-
water	13:20	0:0	6	128
water	13:23	0:0	6	;
water	21:12	0:0	6	new_u
op	21:18	0:0	6	=
water	21:20	0:0	6	(
water	21:21	0:0	6	(
water	21:22	0:0	6	c
op	21:24	0:0	6	*
water	21:26	0:0	6	u
water	21:27	0:0	6	)
op	21:29	0:0	6	-
water	21:31	0:0	6	(
water	21:32	0:0	6	s
op	21:34	0:0	6	*
water	21:36	0:0	6	v
water	21:37	0:0	6	)
op	21:39	0:0	6	+
water	21:41	0:0	6	(
water	21:42	0:0	6	1
op	21:44	0:0	6	<<
water	21:47	0:0	6	15
water	21:49	0:0	6	)
op	21:51	0:0	6	+
water	21:53	0:0	6	(
water	21:54	0:0	6	128
op	21:58	0:0	6	<<
water	21:61	0:0	6	16
water	21:63	0:0	6	)
water	21:64	0:0	6	)
op	21:66	0:0	6	>>
water	21:69	0:0	6	16
water	21:71	0:0	6	;
water	22:12	0:0	6	new_v
op	22:18	0:0	6	=
water	22:20	0:0	6	(
water	22:21	0:0	6	(
water	22:22	0:0	6	s
op	22:24	0:0	6	*
water	22:26	0:0	6	u
water	22:27	0:0	6	)
op	22:29	0:0	6	+
water	22:31	0:0	6	(
water	22:32	0:0	6	c
op	22:34	0:0	6	*
water	22:36	0:0	6	v
water	22:37	0:0	6	)
op	22:39	0:0	6	+
water	22:41	0:0	6	(
water	22:42	0:0	6	1
op	22:44	0:0	6	<<
water	22:47	0:0	6	15
water	22:49	0:0	6	)
op	22:51	0:0	6	+
water	22:53	0:0	6	(
water	22:54	0:0	6	128
op	22:58	0:0	6	<<
water	22:61	0:0	6	16
water	22:63	0:0	6	)
water	22:64	0:0	6	)
op	22:66	0:0	6	>>
water	22:69	0:0	6	16
water	22:71	0:0	6	;
water	24:12	0:0	6	h
op	24:13	0:0	6	->
water	24:15	0:0	6	lut_u
op	24:20	0:0	6	[
water	24:21	0:0	6	i
op	24:22	0:0	6	]
op	24:23	0:0	6	[
water	24:24	0:0	6	j
op	24:25	0:0	6	]
op	24:27	0:0	6	=
call	24:29	24:48	6	av_clip_uint8
arg	24:43	24:48	7	new_u
water	24:43	0:0	8	new_u
water	24:49	0:0	6	;
water	25:12	0:0	6	h
op	25:13	0:0	6	->
water	25:15	0:0	6	lut_v
op	25:20	0:0	6	[
water	25:21	0:0	6	i
op	25:22	0:0	6	]
op	25:23	0:0	6	[
water	25:24	0:0	6	j
op	25:25	0:0	6	]
op	25:27	0:0	6	=
call	25:29	25:48	6	av_clip_uint8
arg	25:43	25:48	7	new_v
water	25:43	0:0	8	new_v
water	25:49	0:0	6	;
water	26:8	0:0	6	}
water	27:4	0:0	4	}

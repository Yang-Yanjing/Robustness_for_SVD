func	1:0	33:0	0	static int	shuffleplanes_filter_frame
params	1:37	0:0	1	
param	1:38	1:58	2	AVFilterLink *	inlink
param	1:60	1:74	2	AVFrame *	frame
stmnts	0:0	32:14	1	
decl	3:4	3:47	2	AVFilterContext	*ctx
op	3:34	0:0	2	=
water	3:36	0:0	2	inlink
op	3:42	0:0	2	->
water	3:44	0:0	2	dst
decl	4:4	4:45	2	ShufflePlanesContext	*s
op	4:34	0:0	2	=
water	4:36	0:0	2	ctx
op	4:39	0:0	2	->
water	4:41	0:0	2	priv
decl	5:4	5:44	2	uint8_t	*shuffled_data[4]
op	5:34	0:0	2	=
water	5:36	0:0	2	{
water	5:38	0:0	2	NULL
water	5:43	0:0	2	}
decl	6:4	6:41	2	int	shuffled_linesize[4]
op	6:34	0:0	2	=
water	6:36	0:0	2	{
water	6:38	0:0	2	0
water	6:40	0:0	2	}
decl	7:4	7:14	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:14	2	int	ret
for	8:4	11:4	2	(i = 0 ;i < s -> planes;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:23	3	i < s -> planes
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	s
op	8:21	0:0	4	->
water	8:23	0:0	4	planes
forexpr	8:31	8:32	3	i ++
water	8:31	0:0	4	i
op	8:32	0:0	4	++
stmts	8:36	11:4	3	
water	8:36	0:0	4	{
water	9:8	0:0	4	shuffled_data
op	9:21	0:0	4	[
water	9:22	0:0	4	i
op	9:23	0:0	4	]
op	9:29	0:0	4	=
water	9:31	0:0	4	frame
op	9:36	0:0	4	->
water	9:38	0:0	4	data
op	9:42	0:0	4	[
water	9:43	0:0	4	s
op	9:44	0:0	4	->
water	9:46	0:0	4	map
op	9:49	0:0	4	[
water	9:50	0:0	4	i
op	9:51	0:0	4	]
op	9:52	0:0	4	]
water	9:53	0:0	4	;
water	10:8	0:0	4	shuffled_linesize
op	10:25	0:0	4	[
water	10:26	0:0	4	i
op	10:27	0:0	4	]
op	10:29	0:0	4	=
water	10:31	0:0	4	frame
op	10:36	0:0	4	->
water	10:38	0:0	4	linesize
op	10:46	0:0	4	[
water	10:47	0:0	4	s
op	10:48	0:0	4	->
water	10:50	0:0	4	map
op	10:53	0:0	4	[
water	10:54	0:0	4	i
op	10:55	0:0	4	]
op	10:56	0:0	4	]
water	10:57	0:0	4	;
water	11:4	0:0	4	}
call	12:4	12:68	2	memcpy
arg	12:11	12:22	3	frame->data
water	12:11	0:0	4	frame
op	12:16	0:0	4	->
water	12:18	0:0	4	data
arg	12:28	12:41	3	shuffled_data
water	12:28	0:0	4	shuffled_data
arg	12:47	12:68	3	sizeof(shuffled_data)
op	12:47	0:0	4	sizeof
water	12:53	0:0	4	(
water	12:54	0:0	4	shuffled_data
water	12:67	0:0	4	)
water	12:69	0:0	2	;
call	13:4	13:72	2	memcpy
arg	13:11	13:26	3	frame->linesize
water	13:11	0:0	4	frame
op	13:16	0:0	4	->
water	13:18	0:0	4	linesize
arg	13:28	13:45	3	shuffled_linesize
water	13:28	0:0	4	shuffled_linesize
arg	13:47	13:72	3	sizeof(shuffled_linesize)
op	13:47	0:0	4	sizeof
water	13:53	0:0	4	(
water	13:54	0:0	4	shuffled_linesize
water	13:71	0:0	4	)
water	13:73	0:0	2	;
if	14:4	28:4	2	(s -> copy)
cond	14:8	14:11	3	s -> copy
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	copy
stmts	14:17	28:4	3	
water	14:17	0:0	4	{
decl	15:8	15:89	4	AVFrame	*copy
op	15:22	0:0	4	=
call	15:24	15:88	5	ff_get_video_buffer
arg	15:44	15:59	6	ctx->outputs[0]
water	15:44	0:0	7	ctx
op	15:47	0:0	7	->
water	15:49	0:0	7	outputs
op	15:56	0:0	7	[
water	15:57	0:0	7	0
op	15:58	0:0	7	]
arg	15:61	15:73	6	frame->width
water	15:61	0:0	7	frame
op	15:66	0:0	7	->
water	15:68	0:0	7	width
arg	15:75	15:88	6	frame->height
water	15:75	0:0	7	frame
op	15:80	0:0	7	->
water	15:82	0:0	7	height
if	16:8	19:8	4	(! copy)
cond	16:12	16:13	5	! copy
op	16:12	0:0	6	!
water	16:13	0:0	6	copy
stmts	16:19	19:8	5	
water	16:19	0:0	6	{
water	17:12	0:0	6	ret
op	17:16	0:0	6	=
call	17:18	17:32	6	AVERROR
arg	17:26	17:32	7	ENOMEM
water	17:26	0:0	8	ENOMEM
water	17:33	0:0	6	;
goto	18:12	18:21	6	fail
water	18:17	0:0	7	fail
water	19:8	0:0	6	}
call	20:8	20:33	4	av_frame_copy
arg	20:22	20:26	5	copy
water	20:22	0:0	6	copy
arg	20:28	20:33	5	frame
water	20:28	0:0	6	frame
water	20:34	0:0	4	;
water	21:8	0:0	4	ret
op	21:12	0:0	4	=
call	21:14	21:45	4	av_frame_copy_props
arg	21:34	21:38	5	copy
water	21:34	0:0	6	copy
arg	21:40	21:45	5	frame
water	21:40	0:0	6	frame
water	21:46	0:0	4	;
if	22:8	25:8	4	(ret < 0)
cond	22:12	22:18	5	ret < 0
water	22:12	0:0	6	ret
op	22:16	0:0	6	<
water	22:18	0:0	6	0
stmts	22:21	25:8	5	
water	22:21	0:0	6	{
call	23:12	23:31	6	av_frame_free
arg	23:26	23:31	7	&copy
op	23:26	0:0	8	&
water	23:27	0:0	8	copy
water	23:32	0:0	6	;
goto	24:12	24:21	6	fail
water	24:17	0:0	7	fail
water	25:8	0:0	6	}
call	26:8	26:28	4	av_frame_free
arg	26:22	26:28	5	&frame
op	26:22	0:0	6	&
water	26:23	0:0	6	frame
water	26:29	0:0	4	;
water	27:8	0:0	4	frame
op	27:14	0:0	4	=
water	27:16	0:0	4	copy
water	27:20	0:0	4	;
water	28:4	0:0	4	}
return	29:4	29:50	2	ff_filter_frame(ctx->outputs[0],frame)
call	29:11	29:49	3	ff_filter_frame
arg	29:27	29:42	4	ctx->outputs[0]
water	29:27	0:0	5	ctx
op	29:30	0:0	5	->
water	29:32	0:0	5	outputs
op	29:39	0:0	5	[
water	29:40	0:0	5	0
op	29:41	0:0	5	]
arg	29:44	29:49	4	frame
water	29:44	0:0	5	frame
label	30:0	30:4	2	fail :
call	31:4	31:24	2	av_frame_free
arg	31:18	31:24	3	&frame
op	31:18	0:0	4	&
water	31:19	0:0	4	frame
water	31:25	0:0	2	;
return	32:4	32:14	2	ret
water	32:11	0:0	3	ret

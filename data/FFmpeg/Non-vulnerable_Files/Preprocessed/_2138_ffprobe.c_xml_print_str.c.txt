func	1:0	19:0	0	static void	xml_print_str
params	1:25	0:0	1	
param	1:26	1:45	2	WriterContext *	wctx
param	1:47	1:62	2	const char *	key
param	1:64	1:81	2	const char *	value
stmnts	0:0	18:34	1	
decl	3:4	3:16	2	AVBPrint	buf
decl	4:4	4:32	2	XMLContext	*xml
op	4:20	0:0	2	=
water	4:22	0:0	2	wctx
op	4:26	0:0	2	->
water	4:28	0:0	2	priv
decl	5:4	5:62	2	const struct section	*section
op	5:34	0:0	2	=
water	5:36	0:0	2	wctx
op	5:40	0:0	2	->
water	5:42	0:0	2	section
op	5:49	0:0	2	[
water	5:50	0:0	2	wctx
op	5:54	0:0	2	->
water	5:56	0:0	2	level
op	5:61	0:0	2	]
call	6:4	6:52	2	av_bprint_init
arg	6:19	6:23	3	&buf
op	6:19	0:0	4	&
water	6:20	0:0	4	buf
arg	6:25	6:26	3	1
water	6:25	0:0	4	1
arg	6:28	6:52	3	AV_BPRINT_SIZE_UNLIMITED
water	6:28	0:0	4	AV_BPRINT_SIZE_UNLIMITED
water	6:53	0:0	2	;
if	7:4	13:4	2	(section -> flags & SECTION_FLAG_HAS_VARIABLE_FIELDS)
cond	7:8	7:25	3	section -> flags & SECTION_FLAG_HAS_VARIABLE_FIELDS
water	7:8	0:0	4	section
op	7:15	0:0	4	->
water	7:17	0:0	4	flags
op	7:23	0:0	4	&
water	7:25	0:0	4	SECTION_FLAG_HAS_VARIABLE_FIELDS
stmts	7:59	13:4	3	
water	7:59	0:0	4	{
call	8:8	8:19	4	XML_INDENT
water	8:20	0:0	4	;
call	9:8	10:69	4	printf
arg	9:15	9:31	5	"<%s key=\"%s\""
water	9:15	0:0	6	"<%s key=\"%s\""
arg	10:15	10:36	5	section->element_name
water	10:15	0:0	6	section
op	10:22	0:0	6	->
water	10:24	0:0	6	element_name
arg	10:38	10:69	5	xml_escape_str(&buf,key,wctx)
call	10:38	10:68	6	xml_escape_str
arg	10:53	10:57	7	&buf
op	10:53	0:0	8	&
water	10:54	0:0	8	buf
arg	10:59	10:62	7	key
water	10:59	0:0	8	key
arg	10:64	10:68	7	wctx
water	10:64	0:0	8	wctx
water	10:70	0:0	4	;
call	11:8	11:28	4	av_bprint_clear
arg	11:24	11:28	5	&buf
op	11:24	0:0	6	&
water	11:25	0:0	6	buf
water	11:29	0:0	4	;
call	12:8	12:69	4	printf
arg	12:15	12:34	5	" value=\"%s\"/>\n"
water	12:15	0:0	6	" value=\"%s\"/>\n"
arg	12:36	12:69	5	xml_escape_str(&buf,value,wctx)
call	12:36	12:68	6	xml_escape_str
arg	12:51	12:55	7	&buf
op	12:51	0:0	8	&
water	12:52	0:0	8	buf
arg	12:57	12:62	7	value
water	12:57	0:0	8	value
arg	12:64	12:68	7	wctx
water	12:64	0:0	8	wctx
water	12:70	0:0	4	;
water	13:4	0:0	4	}
else	13:6	17:4	2
stmts	13:11	17:4	3	
water	13:11	0:0	4	{
if	14:8	15:23	4	(wctx -> nb_item [ wctx -> level ])
cond	14:12	14:37	5	wctx -> nb_item [ wctx -> level ]
water	14:12	0:0	6	wctx
op	14:16	0:0	6	->
water	14:18	0:0	6	nb_item
op	14:25	0:0	6	[
water	14:26	0:0	6	wctx
op	14:30	0:0	6	->
water	14:32	0:0	6	level
op	14:37	0:0	6	]
stmts	15:12	15:23	5	
call	15:12	15:22	6	printf
arg	15:19	15:22	7	" "
water	15:19	0:0	8	" "
water	15:23	0:0	6	;
call	16:8	16:66	4	printf
arg	16:15	16:26	5	"%s=\"%s\""
water	16:15	0:0	6	"%s=\"%s\""
arg	16:28	16:31	5	key
water	16:28	0:0	6	key
arg	16:33	16:66	5	xml_escape_str(&buf,value,wctx)
call	16:33	16:65	6	xml_escape_str
arg	16:48	16:52	7	&buf
op	16:48	0:0	8	&
water	16:49	0:0	8	buf
arg	16:54	16:59	7	value
water	16:54	0:0	8	value
arg	16:61	16:65	7	wctx
water	16:61	0:0	8	wctx
water	16:67	0:0	4	;
water	17:4	0:0	4	}
call	18:4	18:33	2	av_bprint_finalize
arg	18:23	18:27	3	&buf
op	18:23	0:0	4	&
water	18:24	0:0	4	buf
arg	18:29	18:33	3	NULL
water	18:29	0:0	4	NULL
water	18:34	0:0	2	;

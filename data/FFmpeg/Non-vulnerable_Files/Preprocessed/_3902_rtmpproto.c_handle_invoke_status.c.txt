func	1:0	32:0	0	static int	handle_invoke_status
params	1:31	0:0	1	
param	1:32	1:45	2	URLContext *	s
param	1:47	1:62	2	RTMPPacket *	pkt
stmnts	0:0	31:12	1	
decl	3:4	3:34	2	RTMPContext	*rt
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:51	2	const uint8_t	*data_end
op	4:28	0:0	2	=
water	4:30	0:0	2	pkt
op	4:33	0:0	2	->
water	4:35	0:0	2	data
op	4:40	0:0	2	+
water	4:42	0:0	2	pkt
op	4:45	0:0	2	->
water	4:47	0:0	2	size
decl	5:4	5:48	2	const uint8_t	*ptr
op	5:23	0:0	2	=
water	5:25	0:0	2	pkt
op	5:28	0:0	2	->
water	5:30	0:0	2	data
op	5:35	0:0	2	+
water	5:37	0:0	2	RTMP_HEADER
decl	6:4	6:23	2	uint8_t	tmpstr[256]
decl	7:4	7:12	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:12	2	int	t
for	8:4	13:4	2	(i = 0 ;i < 2;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < 2
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	2
forexpr	8:23	8:24	3	i ++
water	8:23	0:0	4	i
op	8:24	0:0	4	++
stmts	8:28	13:4	3	
water	8:28	0:0	4	{
water	9:8	0:0	4	t
op	9:10	0:0	4	=
call	9:12	9:41	4	ff_amf_tag_size
arg	9:28	9:31	5	ptr
water	9:28	0:0	6	ptr
arg	9:33	9:41	5	data_end
water	9:33	0:0	6	data_end
water	9:42	0:0	4	;
if	10:8	11:20	4	(t < 0)
cond	10:12	10:16	5	t < 0
water	10:12	0:0	6	t
op	10:14	0:0	6	<
water	10:16	0:0	6	0
stmts	11:12	11:20	5	
return	11:12	11:20	6	1
water	11:19	0:0	7	1
water	12:8	0:0	4	ptr
op	12:12	0:0	4	+=
water	12:15	0:0	4	t
water	12:16	0:0	4	;
water	13:4	0:0	4	}
water	14:4	0:0	2	t
op	14:6	0:0	2	=
call	14:8	14:77	2	ff_amf_get_field_value
arg	14:31	14:34	3	ptr
water	14:31	0:0	4	ptr
arg	14:36	14:44	3	data_end
water	14:36	0:0	4	data_end
arg	14:46	14:53	3	"level"
water	14:46	0:0	4	"level"
arg	14:55	14:61	3	tmpstr
water	14:55	0:0	4	tmpstr
arg	14:63	14:77	3	sizeof(tmpstr)
op	14:63	0:0	4	sizeof
water	14:69	0:0	4	(
water	14:70	0:0	4	tmpstr
water	14:76	0:0	4	)
water	14:78	0:0	2	;
if	15:4	24:4	2	(! t && !strcmp (tmpstr ,"error" ))
cond	15:8	15:37	3	! t && !strcmp (tmpstr ,"error" )
op	15:8	0:0	4	!
water	15:9	0:0	4	t
op	15:11	0:0	4	&&
op	15:14	0:0	4	!
call	15:15	15:37	4	strcmp
arg	15:22	15:28	5	tmpstr
water	15:22	0:0	6	tmpstr
arg	15:30	15:37	5	"error"
water	15:30	0:0	6	"error"
stmts	15:40	24:4	3	
water	15:40	0:0	4	{
water	16:8	0:0	4	t
op	16:10	0:0	4	=
call	16:12	17:72	4	ff_amf_get_field_value
arg	16:35	16:38	5	ptr
water	16:35	0:0	6	ptr
arg	16:40	16:48	5	data_end
water	16:40	0:0	6	data_end
arg	17:35	17:48	5	"description"
water	17:35	0:0	6	"description"
arg	17:50	17:56	5	tmpstr
water	17:50	0:0	6	tmpstr
arg	17:58	17:72	5	sizeof(tmpstr)
op	17:58	0:0	6	sizeof
water	17:64	0:0	6	(
water	17:65	0:0	6	tmpstr
water	17:71	0:0	6	)
water	17:73	0:0	4	;
if	18:8	20:62	4	(t || ! tmpstr [ 0 ])
cond	18:12	18:26	5	t || ! tmpstr [ 0 ]
water	18:12	0:0	6	t
op	18:14	0:0	6	||
op	18:17	0:0	6	!
water	18:18	0:0	6	tmpstr
op	18:24	0:0	6	[
water	18:25	0:0	6	0
op	18:26	0:0	6	]
stmts	19:12	20:62	5	
water	19:12	0:0	6	t
op	19:14	0:0	6	=
call	19:16	20:61	6	ff_amf_get_field_value
arg	19:39	19:42	7	ptr
water	19:39	0:0	8	ptr
arg	19:44	19:52	7	data_end
water	19:44	0:0	8	data_end
arg	19:54	19:60	7	"code"
water	19:54	0:0	8	"code"
arg	20:39	20:45	7	tmpstr
water	20:39	0:0	8	tmpstr
arg	20:47	20:61	7	sizeof(tmpstr)
op	20:47	0:0	8	sizeof
water	20:53	0:0	8	(
water	20:54	0:0	8	tmpstr
water	20:60	0:0	8	)
water	20:62	0:0	6	;
if	21:8	22:65	4	(! t)
cond	21:12	21:13	5	! t
op	21:12	0:0	6	!
water	21:13	0:0	6	t
stmts	22:12	22:65	5	
call	22:12	22:64	6	av_log
arg	22:19	22:20	7	s
water	22:19	0:0	8	s
arg	22:22	22:34	7	AV_LOG_ERROR
water	22:22	0:0	8	AV_LOG_ERROR
arg	22:36	22:56	7	"Server error: %s\n"
water	22:36	0:0	8	"Server error: %s\n"
arg	22:58	22:64	7	tmpstr
water	22:58	0:0	8	tmpstr
water	22:65	0:0	6	;
return	23:8	23:17	4	-1
op	23:15	0:0	5	-
water	23:16	0:0	5	1
water	24:4	0:0	4	}
water	25:4	0:0	2	t
op	25:6	0:0	2	=
call	25:8	25:76	2	ff_amf_get_field_value
arg	25:31	25:34	3	ptr
water	25:31	0:0	4	ptr
arg	25:36	25:44	3	data_end
water	25:36	0:0	4	data_end
arg	25:46	25:52	3	"code"
water	25:46	0:0	4	"code"
arg	25:54	25:60	3	tmpstr
water	25:54	0:0	4	tmpstr
arg	25:62	25:76	3	sizeof(tmpstr)
op	25:62	0:0	4	sizeof
water	25:68	0:0	4	(
water	25:69	0:0	4	tmpstr
water	25:75	0:0	4	)
water	25:77	0:0	2	;
if	26:4	26:80	2	(! t && !strcmp (tmpstr ,"NetStream.Play.Start" ))
cond	26:8	26:52	3	! t && !strcmp (tmpstr ,"NetStream.Play.Start" )
op	26:8	0:0	4	!
water	26:9	0:0	4	t
op	26:11	0:0	4	&&
op	26:14	0:0	4	!
call	26:15	26:52	4	strcmp
arg	26:22	26:28	5	tmpstr
water	26:22	0:0	6	tmpstr
arg	26:30	26:52	5	"NetStream.Play.Start"
water	26:30	0:0	6	"NetStream.Play.Start"
stmts	26:55	26:80	3	
water	26:55	0:0	4	rt
op	26:57	0:0	4	->
water	26:59	0:0	4	state
op	26:65	0:0	4	=
water	26:67	0:0	4	STATE_PLAYING
water	26:80	0:0	4	;
if	27:4	27:79	2	(! t && !strcmp (tmpstr ,"NetStream.Play.Stop" ))
cond	27:8	27:51	3	! t && !strcmp (tmpstr ,"NetStream.Play.Stop" )
op	27:8	0:0	4	!
water	27:9	0:0	4	t
op	27:11	0:0	4	&&
op	27:14	0:0	4	!
call	27:15	27:51	4	strcmp
arg	27:22	27:28	5	tmpstr
water	27:22	0:0	6	tmpstr
arg	27:30	27:51	5	"NetStream.Play.Stop"
water	27:30	0:0	6	"NetStream.Play.Stop"
stmts	27:54	27:79	3	
water	27:54	0:0	4	rt
op	27:56	0:0	4	->
water	27:58	0:0	4	state
op	27:64	0:0	4	=
water	27:66	0:0	4	STATE_STOPPED
water	27:79	0:0	4	;
if	28:4	28:90	2	(! t && !strcmp (tmpstr ,"NetStream.Play.UnpublishNotify" ))
cond	28:8	28:62	3	! t && !strcmp (tmpstr ,"NetStream.Play.UnpublishNotify" )
op	28:8	0:0	4	!
water	28:9	0:0	4	t
op	28:11	0:0	4	&&
op	28:14	0:0	4	!
call	28:15	28:62	4	strcmp
arg	28:22	28:28	5	tmpstr
water	28:22	0:0	6	tmpstr
arg	28:30	28:62	5	"NetStream.Play.UnpublishNotify"
water	28:30	0:0	6	"NetStream.Play.UnpublishNotify"
stmts	28:65	28:90	3	
water	28:65	0:0	4	rt
op	28:67	0:0	4	->
water	28:69	0:0	4	state
op	28:75	0:0	4	=
water	28:77	0:0	4	STATE_STOPPED
water	28:90	0:0	4	;
if	29:4	29:86	2	(! t && !strcmp (tmpstr ,"NetStream.Publish.Start" ))
cond	29:8	29:55	3	! t && !strcmp (tmpstr ,"NetStream.Publish.Start" )
op	29:8	0:0	4	!
water	29:9	0:0	4	t
op	29:11	0:0	4	&&
op	29:14	0:0	4	!
call	29:15	29:55	4	strcmp
arg	29:22	29:28	5	tmpstr
water	29:22	0:0	6	tmpstr
arg	29:30	29:55	5	"NetStream.Publish.Start"
water	29:30	0:0	6	"NetStream.Publish.Start"
stmts	29:58	29:86	3	
water	29:58	0:0	4	rt
op	29:60	0:0	4	->
water	29:62	0:0	4	state
op	29:68	0:0	4	=
water	29:70	0:0	4	STATE_PUBLISHING
water	29:86	0:0	4	;
if	30:4	30:81	2	(! t && !strcmp (tmpstr ,"NetStream.Seek.Notify" ))
cond	30:8	30:53	3	! t && !strcmp (tmpstr ,"NetStream.Seek.Notify" )
op	30:8	0:0	4	!
water	30:9	0:0	4	t
op	30:11	0:0	4	&&
op	30:14	0:0	4	!
call	30:15	30:53	4	strcmp
arg	30:22	30:28	5	tmpstr
water	30:22	0:0	6	tmpstr
arg	30:30	30:53	5	"NetStream.Seek.Notify"
water	30:30	0:0	6	"NetStream.Seek.Notify"
stmts	30:56	30:81	3	
water	30:56	0:0	4	rt
op	30:58	0:0	4	->
water	30:60	0:0	4	state
op	30:66	0:0	4	=
water	30:68	0:0	4	STATE_PLAYING
water	30:81	0:0	4	;
return	31:4	31:12	2	0
water	31:11	0:0	3	0

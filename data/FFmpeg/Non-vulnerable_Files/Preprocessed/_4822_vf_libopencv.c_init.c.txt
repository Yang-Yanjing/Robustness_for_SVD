func	1:15	22:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	21:26	1	
decl	3:4	3:29	2	OCVContext	*s
op	3:18	0:0	2	=
water	3:20	0:0	2	ctx
op	3:23	0:0	2	->
water	3:25	0:0	2	priv
decl	4:4	4:9	2	int	i
if	5:4	8:4	2	(! s -> name)
cond	5:8	5:12	3	! s -> name
op	5:8	0:0	4	!
water	5:9	0:0	4	s
op	5:10	0:0	4	->
water	5:12	0:0	4	name
stmts	5:18	8:4	3	
water	5:18	0:0	4	{
call	6:8	6:72	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	6:34	6:72	5	"No libopencv filter name specified\n"
water	6:34	0:0	6	"No libopencv filter name specified\n"
water	6:73	0:0	4	;
return	7:8	7:30	4	AVERROR(EINVAL)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	EINVAL
water	7:23	0:0	7	EINVAL
water	8:4	0:0	4	}
for	9:4	19:4	2	(i = 0 ;i <FF_ARRAY_ELEMS (ocv_filter_entries );i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:53	3	i <FF_ARRAY_ELEMS (ocv_filter_entries )
water	9:16	0:0	4	i
op	9:18	0:0	4	<
call	9:20	9:53	4	FF_ARRAY_ELEMS
arg	9:35	9:53	5	ocv_filter_entries
water	9:35	0:0	6	ocv_filter_entries
forexpr	9:56	9:57	3	i ++
water	9:56	0:0	4	i
op	9:57	0:0	4	++
stmts	9:61	19:4	3	
water	9:61	0:0	4	{
decl	10:8	10:60	4	const OCVFilterEntry	*entry
op	10:36	0:0	4	=
op	10:38	0:0	4	&
water	10:39	0:0	4	ocv_filter_entries
op	10:57	0:0	4	[
water	10:58	0:0	4	i
op	10:59	0:0	4	]
if	11:8	18:8	4	(!strcmp (s -> name ,entry -> name ))
cond	11:12	11:40	5	!strcmp (s -> name ,entry -> name )
op	11:12	0:0	6	!
call	11:13	11:40	6	strcmp
arg	11:20	11:27	7	s->name
water	11:20	0:0	8	s
op	11:21	0:0	8	->
water	11:23	0:0	8	name
arg	11:29	11:40	7	entry->name
water	11:29	0:0	8	entry
op	11:34	0:0	8	->
water	11:36	0:0	8	name
stmts	11:43	18:8	5	
water	11:43	0:0	6	{
water	12:12	0:0	6	s
op	12:13	0:0	6	->
water	12:15	0:0	6	init
op	12:32	0:0	6	=
water	12:34	0:0	6	entry
op	12:39	0:0	6	->
water	12:41	0:0	6	init
water	12:45	0:0	6	;
water	13:12	0:0	6	s
op	13:13	0:0	6	->
water	13:15	0:0	6	uninit
op	13:32	0:0	6	=
water	13:34	0:0	6	entry
op	13:39	0:0	6	->
water	13:41	0:0	6	uninit
water	13:47	0:0	6	;
water	14:12	0:0	6	s
op	14:13	0:0	6	->
water	14:15	0:0	6	end_frame_filter
op	14:32	0:0	6	=
water	14:34	0:0	6	entry
op	14:39	0:0	6	->
water	14:41	0:0	6	end_frame_filter
water	14:57	0:0	6	;
if	15:12	16:38	6	(! ( s -> priv =av_mallocz (entry -> priv_size ) ))
cond	15:16	15:56	7	! ( s -> priv =av_mallocz (entry -> priv_size ) )
op	15:16	0:0	8	!
water	15:17	0:0	8	(
water	15:18	0:0	8	s
op	15:19	0:0	8	->
water	15:21	0:0	8	priv
op	15:26	0:0	8	=
call	15:28	15:55	8	av_mallocz
arg	15:39	15:55	9	entry->priv_size
water	15:39	0:0	10	entry
op	15:44	0:0	10	->
water	15:46	0:0	10	priv_size
water	15:56	0:0	8	)
stmts	16:16	16:38	7	
return	16:16	16:38	8	AVERROR(ENOMEM)
call	16:23	16:37	9	AVERROR
arg	16:31	16:37	10	ENOMEM
water	16:31	0:0	11	ENOMEM
return	17:12	17:42	6	s->init(ctx,s->params)
call	17:19	17:41	7	s->init
arg	17:27	17:30	8	ctx
water	17:27	0:0	9	ctx
arg	17:32	17:41	8	s->params
water	17:32	0:0	9	s
op	17:33	0:0	9	->
water	17:35	0:0	9	params
water	18:8	0:0	6	}
water	19:4	0:0	4	}
call	20:4	20:73	2	av_log
arg	20:11	20:14	3	ctx
water	20:11	0:0	4	ctx
arg	20:16	20:28	3	AV_LOG_ERROR
water	20:16	0:0	4	AV_LOG_ERROR
arg	20:30	20:64	3	"No libopencv filter named '%s'\n"
water	20:30	0:0	4	"No libopencv filter named '%s'\n"
arg	20:66	20:73	3	s->name
water	20:66	0:0	4	s
op	20:67	0:0	4	->
water	20:69	0:0	4	name
water	20:74	0:0	2	;
return	21:4	21:26	2	AVERROR(EINVAL)
call	21:11	21:25	3	AVERROR
arg	21:19	21:25	4	EINVAL
water	21:19	0:0	5	EINVAL

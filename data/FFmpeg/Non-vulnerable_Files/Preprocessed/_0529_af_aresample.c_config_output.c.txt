func	1:0	37:0	0	static int	config_output
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	36:12	1	
decl	3:4	3:11	2	int	ret
decl	4:4	4:39	2	AVFilterContext	*ctx
op	4:25	0:0	2	=
water	4:27	0:0	2	outlink
op	4:34	0:0	2	->
water	4:36	0:0	2	src
decl	5:4	5:41	2	AVFilterLink	*inlink
op	5:25	0:0	2	=
water	5:27	0:0	2	ctx
op	5:30	0:0	2	->
water	5:32	0:0	2	inputs
op	5:38	0:0	2	[
water	5:39	0:0	2	0
op	5:40	0:0	2	]
decl	6:4	6:43	2	AResampleContext	*aresample
op	6:32	0:0	2	=
water	6:34	0:0	2	ctx
op	6:37	0:0	2	->
water	6:39	0:0	2	priv
decl	7:4	7:32	2	int64_t	out_rate
water	7:20	0:0	2	,
decl	7:4	7:32	2	int64_t	out_layout
decl	8:4	8:34	2	enum AVSampleFormat	out_format
decl	9:4	9:40	2	char	inchl_buf[128]
water	9:23	0:0	2	,
decl	9:4	9:40	2	char	outchl_buf[128]
water	10:4	0:0	2	aresample
op	10:13	0:0	2	->
water	10:15	0:0	2	swr
op	10:19	0:0	2	=
call	10:21	13:46	2	swr_alloc_set_opts
arg	10:40	10:54	3	aresample->swr
water	10:40	0:0	4	aresample
op	10:49	0:0	4	->
water	10:51	0:0	4	swr
arg	11:40	11:63	3	outlink->channel_layout
water	11:40	0:0	4	outlink
op	11:47	0:0	4	->
water	11:49	0:0	4	channel_layout
arg	11:65	11:80	3	outlink->format
water	11:65	0:0	4	outlink
op	11:72	0:0	4	->
water	11:74	0:0	4	format
arg	11:82	11:102	3	outlink->sample_rate
water	11:82	0:0	4	outlink
op	11:89	0:0	4	->
water	11:91	0:0	4	sample_rate
arg	12:40	12:62	3	inlink->channel_layout
water	12:40	0:0	4	inlink
op	12:46	0:0	4	->
water	12:48	0:0	4	channel_layout
arg	12:64	12:78	3	inlink->format
water	12:64	0:0	4	inlink
op	12:70	0:0	4	->
water	12:72	0:0	4	format
arg	12:80	12:99	3	inlink->sample_rate
water	12:80	0:0	4	inlink
op	12:86	0:0	4	->
water	12:88	0:0	4	sample_rate
arg	13:40	13:41	3	0
water	13:40	0:0	4	0
arg	13:43	13:46	3	ctx
water	13:43	0:0	4	ctx
water	13:47	0:0	2	;
if	14:4	15:30	2	(! aresample -> swr)
cond	14:8	14:20	3	! aresample -> swr
op	14:8	0:0	4	!
water	14:9	0:0	4	aresample
op	14:18	0:0	4	->
water	14:20	0:0	4	swr
stmts	15:8	15:30	3	
return	15:8	15:30	4	AVERROR(ENOMEM)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	ENOMEM
water	15:23	0:0	7	ENOMEM
if	16:4	17:66	2	(! inlink -> channel_layout)
cond	16:8	16:17	3	! inlink -> channel_layout
op	16:8	0:0	4	!
water	16:9	0:0	4	inlink
op	16:15	0:0	4	->
water	16:17	0:0	4	channel_layout
stmts	17:8	17:66	3	
call	17:8	17:65	4	av_opt_set_int
arg	17:23	17:37	5	aresample->swr
water	17:23	0:0	6	aresample
op	17:32	0:0	6	->
water	17:34	0:0	6	swr
arg	17:39	17:44	5	"ich"
water	17:39	0:0	6	"ich"
arg	17:46	17:62	5	inlink->channels
water	17:46	0:0	6	inlink
op	17:52	0:0	6	->
water	17:54	0:0	6	channels
arg	17:64	17:65	5	0
water	17:64	0:0	6	0
water	17:66	0:0	4	;
if	18:4	19:67	2	(! outlink -> channel_layout)
cond	18:8	18:18	3	! outlink -> channel_layout
op	18:8	0:0	4	!
water	18:9	0:0	4	outlink
op	18:16	0:0	4	->
water	18:18	0:0	4	channel_layout
stmts	19:8	19:67	3	
call	19:8	19:66	4	av_opt_set_int
arg	19:23	19:37	5	aresample->swr
water	19:23	0:0	6	aresample
op	19:32	0:0	6	->
water	19:34	0:0	6	swr
arg	19:39	19:44	5	"och"
water	19:39	0:0	6	"och"
arg	19:46	19:63	5	outlink->channels
water	19:46	0:0	6	outlink
op	19:53	0:0	6	->
water	19:55	0:0	6	channels
arg	19:65	19:66	5	0
water	19:65	0:0	6	0
water	19:67	0:0	4	;
water	20:4	0:0	2	ret
op	20:8	0:0	2	=
call	20:10	20:33	2	swr_init
arg	20:19	20:33	3	aresample->swr
water	20:19	0:0	4	aresample
op	20:28	0:0	4	->
water	20:30	0:0	4	swr
water	20:34	0:0	2	;
if	21:4	22:18	2	(ret < 0)
cond	21:8	21:14	3	ret < 0
water	21:8	0:0	4	ret
op	21:12	0:0	4	<
water	21:14	0:0	4	0
stmts	22:8	22:18	3	
return	22:8	22:18	4	ret
water	22:15	0:0	5	ret
call	23:4	23:54	2	av_opt_get_int
arg	23:19	23:33	3	aresample->swr
water	23:19	0:0	4	aresample
op	23:28	0:0	4	->
water	23:30	0:0	4	swr
arg	23:35	23:40	3	"osr"
water	23:35	0:0	4	"osr"
arg	23:42	23:43	3	0
water	23:42	0:0	4	0
arg	23:45	23:54	3	&out_rate
op	23:45	0:0	4	&
water	23:46	0:0	4	out_rate
water	23:55	0:0	2	;
call	24:4	24:56	2	av_opt_get_int
arg	24:19	24:33	3	aresample->swr
water	24:19	0:0	4	aresample
op	24:28	0:0	4	->
water	24:30	0:0	4	swr
arg	24:35	24:40	3	"ocl"
water	24:35	0:0	4	"ocl"
arg	24:42	24:43	3	0
water	24:42	0:0	4	0
arg	24:45	24:56	3	&out_layout
op	24:45	0:0	4	&
water	24:46	0:0	4	out_layout
water	24:57	0:0	2	;
call	25:4	25:63	2	av_opt_get_sample_fmt
arg	25:26	25:40	3	aresample->swr
water	25:26	0:0	4	aresample
op	25:35	0:0	4	->
water	25:37	0:0	4	swr
arg	25:42	25:47	3	"osf"
water	25:42	0:0	4	"osf"
arg	25:49	25:50	3	0
water	25:49	0:0	4	0
arg	25:52	25:63	3	&out_format
op	25:52	0:0	4	&
water	25:53	0:0	4	out_format
water	25:64	0:0	2	;
water	26:4	0:0	2	outlink
op	26:11	0:0	2	->
water	26:13	0:0	2	time_base
op	26:23	0:0	2	=
water	26:25	0:0	2	(
water	26:26	0:0	2	AVRational
water	26:36	0:0	2	)
water	26:38	0:0	2	{
water	26:39	0:0	2	1
water	26:40	0:0	2	,
water	26:42	0:0	2	out_rate
water	26:50	0:0	2	}
water	26:51	0:0	2	;
call	27:4	27:47	2	av_assert0
arg	27:15	27:47	3	outlink->sample_rate==out_rate
water	27:15	0:0	4	outlink
op	27:22	0:0	4	->
water	27:24	0:0	4	sample_rate
op	27:36	0:0	4	==
water	27:39	0:0	4	out_rate
water	27:48	0:0	2	;
call	28:4	28:80	2	av_assert0
arg	28:15	28:80	3	outlink->channel_layout==out_layout||!outlink->channel_layout
water	28:15	0:0	4	outlink
op	28:22	0:0	4	->
water	28:24	0:0	4	channel_layout
op	28:39	0:0	4	==
water	28:42	0:0	4	out_layout
op	28:53	0:0	4	||
op	28:56	0:0	4	!
water	28:57	0:0	4	outlink
op	28:64	0:0	4	->
water	28:66	0:0	4	channel_layout
water	28:81	0:0	2	;
call	29:4	29:44	2	av_assert0
arg	29:15	29:44	3	outlink->format==out_format
water	29:15	0:0	4	outlink
op	29:22	0:0	4	->
water	29:24	0:0	4	format
op	29:31	0:0	4	==
water	29:34	0:0	4	out_format
water	29:45	0:0	2	;
water	30:4	0:0	2	aresample
op	30:13	0:0	2	->
water	30:15	0:0	2	ratio
op	30:21	0:0	2	=
water	30:23	0:0	2	(
water	30:24	0:0	2	double
water	30:30	0:0	2	)
water	30:31	0:0	2	outlink
op	30:38	0:0	2	->
water	30:40	0:0	2	sample_rate
op	30:52	0:0	2	/
water	30:54	0:0	2	inlink
op	30:60	0:0	2	->
water	30:62	0:0	2	sample_rate
water	30:73	0:0	2	;
call	31:4	31:107	2	av_get_channel_layout_string
arg	31:33	31:42	3	inchl_buf
water	31:33	0:0	4	inchl_buf
arg	31:45	31:62	3	sizeof(inchl_buf)
op	31:45	0:0	4	sizeof
water	31:51	0:0	4	(
water	31:52	0:0	4	inchl_buf
water	31:61	0:0	4	)
arg	31:65	31:82	3	inlink->channels
water	31:65	0:0	4	inlink
op	31:72	0:0	4	->
water	31:74	0:0	4	channels
arg	31:84	31:107	3	inlink->channel_layout
water	31:84	0:0	4	inlink
op	31:91	0:0	4	->
water	31:93	0:0	4	channel_layout
water	31:108	0:0	2	;
call	32:4	32:107	2	av_get_channel_layout_string
arg	32:33	32:43	3	outchl_buf
water	32:33	0:0	4	outchl_buf
arg	32:45	32:63	3	sizeof(outchl_buf)
op	32:45	0:0	4	sizeof
water	32:51	0:0	4	(
water	32:52	0:0	4	outchl_buf
water	32:62	0:0	4	)
arg	32:65	32:82	3	outlink->channels
water	32:65	0:0	4	outlink
op	32:72	0:0	4	->
water	32:74	0:0	4	channels
arg	32:84	32:107	3	outlink->channel_layout
water	32:84	0:0	4	outlink
op	32:91	0:0	4	->
water	32:93	0:0	4	channel_layout
water	32:108	0:0	2	;
call	33:4	35:103	2	av_log
arg	33:11	33:14	3	ctx
water	33:11	0:0	4	ctx
arg	33:16	33:30	3	AV_LOG_VERBOSE
water	33:16	0:0	4	AV_LOG_VERBOSE
arg	33:32	33:92	3	"ch:%d chl:%s fmt:%s r:%dHz -> ch:%d chl:%s fmt:%s r:%dHz\n"
water	33:32	0:0	4	"ch:%d chl:%s fmt:%s r:%dHz -> ch:%d chl:%s fmt:%s r:%dHz\n"
arg	34:11	34:28	3	inlink->channels
water	34:11	0:0	4	inlink
op	34:18	0:0	4	->
water	34:20	0:0	4	channels
arg	34:30	34:39	3	inchl_buf
water	34:30	0:0	4	inchl_buf
arg	34:42	34:80	3	av_get_sample_fmt_name(inlink->format)
call	34:42	34:79	4	av_get_sample_fmt_name
arg	34:65	34:79	5	inlink->format
water	34:65	0:0	6	inlink
op	34:71	0:0	6	->
water	34:73	0:0	6	format
arg	34:83	34:102	3	inlink->sample_rate
water	34:83	0:0	4	inlink
op	34:89	0:0	4	->
water	34:91	0:0	4	sample_rate
arg	35:11	35:28	3	outlink->channels
water	35:11	0:0	4	outlink
op	35:18	0:0	4	->
water	35:20	0:0	4	channels
arg	35:30	35:40	3	outchl_buf
water	35:30	0:0	4	outchl_buf
arg	35:42	35:81	3	av_get_sample_fmt_name(outlink->format)
call	35:42	35:80	4	av_get_sample_fmt_name
arg	35:65	35:80	5	outlink->format
water	35:65	0:0	6	outlink
op	35:72	0:0	6	->
water	35:74	0:0	6	format
arg	35:83	35:103	3	outlink->sample_rate
water	35:83	0:0	4	outlink
op	35:90	0:0	4	->
water	35:92	0:0	4	sample_rate
water	35:104	0:0	2	;
return	36:4	36:12	2	0
water	36:11	0:0	3	0

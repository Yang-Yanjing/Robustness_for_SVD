func	1:0	28:0	0	static int	print_link_prop
params	1:26	0:0	1	
param	1:27	1:40	2	AVBPrint *	buf
param	1:42	1:60	2	AVFilterLink *	link
stmnts	0:0	27:19	1	
decl	3:4	3:16	2	char	*format
decl	4:4	4:19	2	char	layout[64]
decl	5:4	5:33	2	AVBPrint	dummy_buffer
op	5:26	0:0	2	=
water	5:28	0:0	2	{
water	5:30	0:0	2	0
water	5:32	0:0	2	}
if	6:4	7:27	2	(! buf)
cond	6:8	6:9	3	! buf
op	6:8	0:0	4	!
water	6:9	0:0	4	buf
stmts	7:8	7:27	3	
water	7:8	0:0	4	buf
op	7:12	0:0	4	=
op	7:14	0:0	4	&
water	7:15	0:0	4	dummy_buffer
water	7:27	0:0	4	;
switch	8:4	26:4	2	(link -> type)
cond	8:12	8:18	3	link -> type
water	8:12	0:0	4	link
op	8:16	0:0	4	->
water	8:18	0:0	4	type
stmts	8:24	26:4	3	
water	8:24	0:0	4	{
label	9:8	9:31	4	case AVMEDIA_TYPE_VIDEO :
water	10:12	0:0	4	format
op	10:19	0:0	4	=
call	10:21	10:72	4	av_x_if_null
arg	10:34	10:67	5	av_get_pix_fmt_name(link->format)
call	10:34	10:66	6	av_get_pix_fmt_name
arg	10:54	10:66	7	link->format
water	10:54	0:0	8	link
op	10:58	0:0	8	->
water	10:60	0:0	8	format
arg	10:69	10:72	5	"?"
water	10:69	0:0	6	"?"
water	10:73	0:0	4	;
call	11:12	14:26	4	av_bprintf
arg	11:23	11:26	5	buf
water	11:23	0:0	6	buf
arg	11:28	11:46	5	"[%dx%d %d:%d %s]"
water	11:28	0:0	6	"[%dx%d %d:%d %s]"
arg	11:48	11:55	5	link->w
water	11:48	0:0	6	link
op	11:52	0:0	6	->
water	11:54	0:0	6	w
arg	11:57	11:64	5	link->h
water	11:57	0:0	6	link
op	11:61	0:0	6	->
water	11:63	0:0	6	h
arg	12:20	12:49	5	link->sample_aspect_ratio.num
water	12:20	0:0	6	link
op	12:24	0:0	6	->
water	12:26	0:0	6	sample_aspect_ratio
op	12:45	0:0	6	.
water	12:46	0:0	6	num
arg	13:20	13:49	5	link->sample_aspect_ratio.den
water	13:20	0:0	6	link
op	13:24	0:0	6	->
water	13:26	0:0	6	sample_aspect_ratio
op	13:45	0:0	6	.
water	13:46	0:0	6	den
arg	14:20	14:26	5	format
water	14:20	0:0	6	format
water	14:27	0:0	4	;
break	15:12	15:17	4	
label	16:8	16:31	4	case AVMEDIA_TYPE_AUDIO :
call	17:12	18:77	4	av_get_channel_layout_string
arg	17:41	17:47	5	layout
water	17:41	0:0	6	layout
arg	17:49	17:63	5	sizeof(layout)
op	17:49	0:0	6	sizeof
water	17:55	0:0	6	(
water	17:56	0:0	6	layout
water	17:62	0:0	6	)
arg	18:41	18:55	5	link->channels
water	18:41	0:0	6	link
op	18:45	0:0	6	->
water	18:47	0:0	6	channels
arg	18:57	18:77	5	link->channel_layout
water	18:57	0:0	6	link
op	18:61	0:0	6	->
water	18:63	0:0	6	channel_layout
water	18:78	0:0	4	;
water	19:12	0:0	4	format
op	19:19	0:0	4	=
call	19:21	19:75	4	av_x_if_null
arg	19:34	19:70	5	av_get_sample_fmt_name(link->format)
call	19:34	19:69	6	av_get_sample_fmt_name
arg	19:57	19:69	7	link->format
water	19:57	0:0	8	link
op	19:61	0:0	8	->
water	19:63	0:0	8	format
arg	19:72	19:75	5	"?"
water	19:72	0:0	6	"?"
water	19:76	0:0	4	;
call	20:12	21:61	4	av_bprintf
arg	20:23	20:26	5	buf
water	20:23	0:0	6	buf
arg	20:28	20:42	5	"[%dHz %s:%s]"
water	20:28	0:0	6	"[%dHz %s:%s]"
arg	21:23	21:45	5	(int)link->sample_rate
water	21:23	0:0	6	(
water	21:24	0:0	6	int
water	21:27	0:0	6	)
water	21:28	0:0	6	link
op	21:32	0:0	6	->
water	21:34	0:0	6	sample_rate
arg	21:47	21:53	5	format
water	21:47	0:0	6	format
arg	21:55	21:61	5	layout
water	21:55	0:0	6	layout
water	21:62	0:0	4	;
break	22:12	22:17	4	
label	23:8	23:15	4	default :
call	24:12	24:31	4	av_bprintf
arg	24:23	24:26	5	buf
water	24:23	0:0	6	buf
arg	24:28	24:31	5	"?"
water	24:28	0:0	6	"?"
water	24:32	0:0	4	;
break	25:12	25:17	4	
water	26:4	0:0	4	}
return	27:4	27:19	2	buf->len
water	27:11	0:0	3	buf
op	27:14	0:0	3	->
water	27:16	0:0	3	len

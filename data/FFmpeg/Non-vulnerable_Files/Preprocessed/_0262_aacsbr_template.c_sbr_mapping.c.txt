func	1:0	46:0	0	static int	sbr_mapping
params	1:22	0:0	1	
param	1:23	1:37	2	AACContext *	ac
param	1:39	1:67	2	SpectralBandReplication *	sbr
param	2:24	2:40	2	SBRData *	ch_data
param	2:42	2:52	2	int	e_a[2]
stmnts	0:0	45:12	1	
decl	4:4	4:15	2	int	e
water	4:9	0:0	2	,
decl	4:4	4:15	2	int	i
water	4:12	0:0	2	,
decl	4:4	4:15	2	int	m
call	5:4	5:76	2	memset
arg	5:11	5:36	3	ch_data->s_indexmapped[1]
water	5:11	0:0	4	ch_data
op	5:18	0:0	4	->
water	5:20	0:0	4	s_indexmapped
op	5:33	0:0	4	[
water	5:34	0:0	4	1
op	5:35	0:0	4	]
arg	5:38	5:39	3	0
water	5:38	0:0	4	0
arg	5:41	5:76	3	7*sizeof(ch_data->s_indexmapped[1])
water	5:41	0:0	4	7
op	5:42	0:0	4	*
op	5:43	0:0	4	sizeof
water	5:49	0:0	4	(
water	5:50	0:0	4	ch_data
op	5:57	0:0	4	->
water	5:59	0:0	4	s_indexmapped
op	5:72	0:0	4	[
water	5:73	0:0	4	1
op	5:74	0:0	4	]
water	5:75	0:0	4	)
water	5:77	0:0	2	;
for	6:4	43:4	2	(e = 0 ;e < ch_data -> bs_num_env;e ++)
forinit	6:9	6:14	3	e = 0 ;
water	6:9	0:0	4	e
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:29	3	e < ch_data -> bs_num_env
water	6:16	0:0	4	e
op	6:18	0:0	4	<
water	6:20	0:0	4	ch_data
op	6:27	0:0	4	->
water	6:29	0:0	4	bs_num_env
forexpr	6:41	6:42	3	e ++
water	6:41	0:0	4	e
op	6:42	0:0	4	++
stmts	6:46	43:4	3	
water	6:46	0:0	4	{
decl	7:8	7:69	4	const unsigned int	ilim
op	7:32	0:0	4	=
water	7:34	0:0	4	sbr
op	7:37	0:0	4	->
water	7:39	0:0	4	n
op	7:40	0:0	4	[
water	7:41	0:0	4	ch_data
op	7:48	0:0	4	->
water	7:50	0:0	4	bs_freq_res
op	7:61	0:0	4	[
water	7:62	0:0	4	e
op	7:64	0:0	4	+
water	7:66	0:0	4	1
op	7:67	0:0	4	]
op	7:68	0:0	4	]
decl	8:8	8:90	4	uint16_t	*table
op	8:24	0:0	4	=
water	8:26	0:0	4	ch_data
op	8:33	0:0	4	->
water	8:35	0:0	4	bs_freq_res
op	8:46	0:0	4	[
water	8:47	0:0	4	e
op	8:49	0:0	4	+
water	8:51	0:0	4	1
op	8:52	0:0	4	]
water	8:54	0:0	4	?
water	8:56	0:0	4	sbr
op	8:59	0:0	4	->
water	8:61	0:0	4	f_tablehigh
water	8:73	0:0	4	:
water	8:75	0:0	4	sbr
op	8:78	0:0	4	->
water	8:80	0:0	4	f_tablelow
decl	9:8	9:13	4	int	k
if	10:8	15:8	4	(sbr -> kx [ 1 ] != table [ 0 ])
cond	10:12	10:33	5	sbr -> kx [ 1 ] != table [ 0 ]
water	10:12	0:0	6	sbr
op	10:15	0:0	6	->
water	10:17	0:0	6	kx
op	10:19	0:0	6	[
water	10:20	0:0	6	1
op	10:21	0:0	6	]
op	10:23	0:0	6	!=
water	10:26	0:0	6	table
op	10:31	0:0	6	[
water	10:32	0:0	6	0
op	10:33	0:0	6	]
stmts	10:36	15:8	5	
water	10:36	0:0	6	{
call	11:12	12:69	6	av_log
arg	11:19	11:28	7	ac->avctx
water	11:19	0:0	8	ac
op	11:21	0:0	8	->
water	11:23	0:0	8	avctx
arg	11:30	11:42	7	AV_LOG_ERROR
water	11:30	0:0	8	AV_LOG_ERROR
arg	11:44	12:69	7	"kx != f_table{high,low}[0]. ""Derived frequency tables were not regenerated.\n"
water	11:44	0:0	8	"kx != f_table{high,low}[0]. "
water	12:19	0:0	8	"Derived frequency tables were not regenerated.\n"
water	12:70	0:0	6	;
call	13:12	13:27	6	sbr_turnoff
arg	13:24	13:27	7	sbr
water	13:24	0:0	8	sbr
water	13:28	0:0	6	;
return	14:12	14:30	6	AVERROR_BUG
water	14:19	0:0	7	AVERROR_BUG
water	15:8	0:0	6	}
for	16:8	18:80	4	(i = 0 ;i < ilim;i ++)
forinit	16:13	16:18	5	i = 0 ;
water	16:13	0:0	6	i
op	16:15	0:0	6	=
water	16:17	0:0	6	0
water	16:18	0:0	6	;
cond	16:20	16:24	5	i < ilim
water	16:20	0:0	6	i
op	16:22	0:0	6	<
water	16:24	0:0	6	ilim
forexpr	16:30	16:31	5	i ++
water	16:30	0:0	6	i
op	16:31	0:0	6	++
stmts	17:12	18:80	5	
for	17:12	18:80	6	(m = table [ i ] ;m < table [ i + 1 ];m ++)
forinit	17:17	17:29	7	m = table [ i ] ;
water	17:17	0:0	8	m
op	17:19	0:0	8	=
water	17:21	0:0	8	table
op	17:26	0:0	8	[
water	17:27	0:0	8	i
op	17:28	0:0	8	]
water	17:29	0:0	8	;
cond	17:31	17:46	7	m < table [ i + 1 ]
water	17:31	0:0	8	m
op	17:33	0:0	8	<
water	17:35	0:0	8	table
op	17:40	0:0	8	[
water	17:41	0:0	8	i
op	17:43	0:0	8	+
water	17:45	0:0	8	1
op	17:46	0:0	8	]
forexpr	17:49	17:50	7	m ++
water	17:49	0:0	8	m
op	17:50	0:0	8	++
stmts	18:16	18:80	7	
water	18:16	0:0	8	sbr
op	18:19	0:0	8	->
water	18:21	0:0	8	e_origmapped
op	18:33	0:0	8	[
water	18:34	0:0	8	e
op	18:35	0:0	8	]
op	18:36	0:0	8	[
water	18:37	0:0	8	m
op	18:39	0:0	8	-
water	18:41	0:0	8	sbr
op	18:44	0:0	8	->
water	18:46	0:0	8	kx
op	18:48	0:0	8	[
water	18:49	0:0	8	1
op	18:50	0:0	8	]
op	18:51	0:0	8	]
op	18:53	0:0	8	=
water	18:55	0:0	8	ch_data
op	18:62	0:0	8	->
water	18:64	0:0	8	env_facs
op	18:72	0:0	8	[
water	18:73	0:0	8	e
op	18:74	0:0	8	+
water	18:75	0:0	8	1
op	18:76	0:0	8	]
op	18:77	0:0	8	[
water	18:78	0:0	8	i
op	18:79	0:0	8	]
water	18:80	0:0	8	;
water	20:8	0:0	4	k
op	20:10	0:0	4	=
water	20:12	0:0	4	(
water	20:13	0:0	4	ch_data
op	20:20	0:0	4	->
water	20:22	0:0	4	bs_num_noise
op	20:35	0:0	4	>
water	20:37	0:0	4	1
water	20:38	0:0	4	)
op	20:40	0:0	4	&&
water	20:43	0:0	4	(
water	20:44	0:0	4	ch_data
op	20:51	0:0	4	->
water	20:53	0:0	4	t_env
op	20:58	0:0	4	[
water	20:59	0:0	4	e
op	20:60	0:0	4	]
op	20:62	0:0	4	>=
water	20:65	0:0	4	ch_data
op	20:72	0:0	4	->
water	20:74	0:0	4	t_q
op	20:77	0:0	4	[
water	20:78	0:0	4	1
op	20:79	0:0	4	]
water	20:80	0:0	4	)
water	20:81	0:0	4	;
for	21:8	23:78	4	(i = 0 ;i < sbr -> n_q;i ++)
forinit	21:13	21:18	5	i = 0 ;
water	21:13	0:0	6	i
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:29	5	i < sbr -> n_q
water	21:20	0:0	6	i
op	21:22	0:0	6	<
water	21:24	0:0	6	sbr
op	21:27	0:0	6	->
water	21:29	0:0	6	n_q
forexpr	21:34	21:35	5	i ++
water	21:34	0:0	6	i
op	21:35	0:0	6	++
stmts	22:12	23:78	5	
for	22:12	23:78	6	(m = sbr -> f_tablenoise [ i ] ;m < sbr -> f_tablenoise [ i + 1 ];m ++)
forinit	22:17	22:41	7	m = sbr -> f_tablenoise [ i ] ;
water	22:17	0:0	8	m
op	22:19	0:0	8	=
water	22:21	0:0	8	sbr
op	22:24	0:0	8	->
water	22:26	0:0	8	f_tablenoise
op	22:38	0:0	8	[
water	22:39	0:0	8	i
op	22:40	0:0	8	]
water	22:41	0:0	8	;
cond	22:43	22:70	7	m < sbr -> f_tablenoise [ i + 1 ]
water	22:43	0:0	8	m
op	22:45	0:0	8	<
water	22:47	0:0	8	sbr
op	22:50	0:0	8	->
water	22:52	0:0	8	f_tablenoise
op	22:64	0:0	8	[
water	22:65	0:0	8	i
op	22:67	0:0	8	+
water	22:69	0:0	8	1
op	22:70	0:0	8	]
forexpr	22:73	22:74	7	m ++
water	22:73	0:0	8	m
op	22:74	0:0	8	++
stmts	23:16	23:78	7	
water	23:16	0:0	8	sbr
op	23:19	0:0	8	->
water	23:21	0:0	8	q_mapped
op	23:29	0:0	8	[
water	23:30	0:0	8	e
op	23:31	0:0	8	]
op	23:32	0:0	8	[
water	23:33	0:0	8	m
op	23:35	0:0	8	-
water	23:37	0:0	8	sbr
op	23:40	0:0	8	->
water	23:42	0:0	8	kx
op	23:44	0:0	8	[
water	23:45	0:0	8	1
op	23:46	0:0	8	]
op	23:47	0:0	8	]
op	23:49	0:0	8	=
water	23:51	0:0	8	ch_data
op	23:58	0:0	8	->
water	23:60	0:0	8	noise_facs
op	23:70	0:0	8	[
water	23:71	0:0	8	k
op	23:72	0:0	8	+
water	23:73	0:0	8	1
op	23:74	0:0	8	]
op	23:75	0:0	8	[
water	23:76	0:0	8	i
op	23:77	0:0	8	]
water	23:78	0:0	8	;
for	24:8	31:8	4	(i = 0 ;i < sbr -> n [ 1 ];i ++)
forinit	24:13	24:18	5	i = 0 ;
water	24:13	0:0	6	i
op	24:15	0:0	6	=
water	24:17	0:0	6	0
water	24:18	0:0	6	;
cond	24:20	24:32	5	i < sbr -> n [ 1 ]
water	24:20	0:0	6	i
op	24:22	0:0	6	<
water	24:24	0:0	6	sbr
op	24:27	0:0	6	->
water	24:29	0:0	6	n
op	24:30	0:0	6	[
water	24:31	0:0	6	1
op	24:32	0:0	6	]
forexpr	24:35	24:36	5	i ++
water	24:35	0:0	6	i
op	24:36	0:0	6	++
stmts	24:40	31:8	5	
water	24:40	0:0	6	{
if	25:12	30:12	6	(ch_data -> bs_add_harmonic_flag)
cond	25:16	25:25	7	ch_data -> bs_add_harmonic_flag
water	25:16	0:0	8	ch_data
op	25:23	0:0	8	->
water	25:25	0:0	8	bs_add_harmonic_flag
stmts	25:47	30:12	7	
water	25:47	0:0	8	{
decl	26:16	27:72	8	const unsigned int	m_midpoint
op	26:46	0:0	8	=
water	27:20	0:0	8	(
water	27:21	0:0	8	sbr
op	27:24	0:0	8	->
water	27:26	0:0	8	f_tablehigh
op	27:37	0:0	8	[
water	27:38	0:0	8	i
op	27:39	0:0	8	]
op	27:41	0:0	8	+
water	27:43	0:0	8	sbr
op	27:46	0:0	8	->
water	27:48	0:0	8	f_tablehigh
op	27:59	0:0	8	[
water	27:60	0:0	8	i
op	27:62	0:0	8	+
water	27:64	0:0	8	1
op	27:65	0:0	8	]
water	27:66	0:0	8	)
op	27:68	0:0	8	>>
water	27:71	0:0	8	1
water	28:16	0:0	8	ch_data
op	28:23	0:0	8	->
water	28:25	0:0	8	s_indexmapped
op	28:38	0:0	8	[
water	28:39	0:0	8	e
op	28:41	0:0	8	+
water	28:43	0:0	8	1
op	28:44	0:0	8	]
op	28:45	0:0	8	[
water	28:46	0:0	8	m_midpoint
op	28:57	0:0	8	-
water	28:59	0:0	8	sbr
op	28:62	0:0	8	->
water	28:64	0:0	8	kx
op	28:66	0:0	8	[
water	28:67	0:0	8	1
op	28:68	0:0	8	]
op	28:69	0:0	8	]
op	28:71	0:0	8	=
water	28:73	0:0	8	ch_data
op	28:80	0:0	8	->
water	28:82	0:0	8	bs_add_harmonic
op	28:97	0:0	8	[
water	28:98	0:0	8	i
op	28:99	0:0	8	]
op	28:101	0:0	8	*
water	29:20	0:0	8	(
water	29:21	0:0	8	e
op	29:23	0:0	8	>=
water	29:26	0:0	8	e_a
op	29:29	0:0	8	[
water	29:30	0:0	8	1
op	29:31	0:0	8	]
op	29:33	0:0	8	||
water	29:36	0:0	8	(
water	29:37	0:0	8	ch_data
op	29:44	0:0	8	->
water	29:46	0:0	8	s_indexmapped
op	29:59	0:0	8	[
water	29:60	0:0	8	0
op	29:61	0:0	8	]
op	29:62	0:0	8	[
water	29:63	0:0	8	m_midpoint
op	29:74	0:0	8	-
water	29:76	0:0	8	sbr
op	29:79	0:0	8	->
water	29:81	0:0	8	kx
op	29:83	0:0	8	[
water	29:84	0:0	8	1
op	29:85	0:0	8	]
op	29:86	0:0	8	]
op	29:88	0:0	8	==
water	29:91	0:0	8	1
water	29:92	0:0	8	)
water	29:93	0:0	8	)
water	29:94	0:0	8	;
water	30:12	0:0	8	}
water	31:8	0:0	6	}
for	32:8	42:8	4	(i = 0 ;i < ilim;i ++)
forinit	32:13	32:18	5	i = 0 ;
water	32:13	0:0	6	i
op	32:15	0:0	6	=
water	32:17	0:0	6	0
water	32:18	0:0	6	;
cond	32:20	32:24	5	i < ilim
water	32:20	0:0	6	i
op	32:22	0:0	6	<
water	32:24	0:0	6	ilim
forexpr	32:30	32:31	5	i ++
water	32:30	0:0	6	i
op	32:31	0:0	6	++
stmts	32:35	42:8	5	
water	32:35	0:0	6	{
decl	33:12	33:47	6	int	additional_sinusoid_present
op	33:44	0:0	6	=
water	33:46	0:0	6	0
for	34:12	39:12	6	(m = table [ i ] ;m < table [ i + 1 ];m ++)
forinit	34:17	34:29	7	m = table [ i ] ;
water	34:17	0:0	8	m
op	34:19	0:0	8	=
water	34:21	0:0	8	table
op	34:26	0:0	8	[
water	34:27	0:0	8	i
op	34:28	0:0	8	]
water	34:29	0:0	8	;
cond	34:31	34:46	7	m < table [ i + 1 ]
water	34:31	0:0	8	m
op	34:33	0:0	8	<
water	34:35	0:0	8	table
op	34:40	0:0	8	[
water	34:41	0:0	8	i
op	34:43	0:0	8	+
water	34:45	0:0	8	1
op	34:46	0:0	8	]
forexpr	34:49	34:50	7	m ++
water	34:49	0:0	8	m
op	34:50	0:0	8	++
stmts	34:54	39:12	7	
water	34:54	0:0	8	{
if	35:16	38:16	8	(ch_data -> s_indexmapped [ e + 1 ] [ m - sbr -> kx [ 1 ] ])
cond	35:20	35:64	9	ch_data -> s_indexmapped [ e + 1 ] [ m - sbr -> kx [ 1 ] ]
water	35:20	0:0	10	ch_data
op	35:27	0:0	10	->
water	35:29	0:0	10	s_indexmapped
op	35:42	0:0	10	[
water	35:43	0:0	10	e
op	35:45	0:0	10	+
water	35:47	0:0	10	1
op	35:48	0:0	10	]
op	35:49	0:0	10	[
water	35:50	0:0	10	m
op	35:52	0:0	10	-
water	35:54	0:0	10	sbr
op	35:57	0:0	10	->
water	35:59	0:0	10	kx
op	35:61	0:0	10	[
water	35:62	0:0	10	1
op	35:63	0:0	10	]
op	35:64	0:0	10	]
stmts	35:67	38:16	9	
water	35:67	0:0	10	{
water	36:20	0:0	10	additional_sinusoid_present
op	36:48	0:0	10	=
water	36:50	0:0	10	1
water	36:51	0:0	10	;
break	37:20	37:25	10	
water	38:16	0:0	10	}
water	39:12	0:0	8	}
call	40:12	41:74	6	memset
arg	40:19	40:59	7	&sbr->s_mapped[e][table[i]-sbr->kx[1]]
op	40:19	0:0	8	&
water	40:20	0:0	8	sbr
op	40:23	0:0	8	->
water	40:25	0:0	8	s_mapped
op	40:33	0:0	8	[
water	40:34	0:0	8	e
op	40:35	0:0	8	]
op	40:36	0:0	8	[
water	40:37	0:0	8	table
op	40:42	0:0	8	[
water	40:43	0:0	8	i
op	40:44	0:0	8	]
op	40:46	0:0	8	-
water	40:48	0:0	8	sbr
op	40:51	0:0	8	->
water	40:53	0:0	8	kx
op	40:55	0:0	8	[
water	40:56	0:0	8	1
op	40:57	0:0	8	]
op	40:58	0:0	8	]
arg	40:61	40:88	7	additional_sinusoid_present
water	40:61	0:0	8	additional_sinusoid_present
arg	41:19	41:74	7	(table[i+1]-table[i])*sizeof(sbr->s_mapped[e][0])
water	41:19	0:0	8	(
water	41:20	0:0	8	table
op	41:25	0:0	8	[
water	41:26	0:0	8	i
op	41:28	0:0	8	+
water	41:30	0:0	8	1
op	41:31	0:0	8	]
op	41:33	0:0	8	-
water	41:35	0:0	8	table
op	41:40	0:0	8	[
water	41:41	0:0	8	i
op	41:42	0:0	8	]
water	41:43	0:0	8	)
op	41:45	0:0	8	*
op	41:47	0:0	8	sizeof
water	41:53	0:0	8	(
water	41:54	0:0	8	sbr
op	41:57	0:0	8	->
water	41:59	0:0	8	s_mapped
op	41:67	0:0	8	[
water	41:68	0:0	8	e
op	41:69	0:0	8	]
op	41:70	0:0	8	[
water	41:71	0:0	8	0
op	41:72	0:0	8	]
water	41:73	0:0	8	)
water	41:75	0:0	6	;
water	42:8	0:0	6	}
water	43:4	0:0	4	}
call	44:4	44:116	2	memcpy
arg	44:11	44:36	3	ch_data->s_indexmapped[0]
water	44:11	0:0	4	ch_data
op	44:18	0:0	4	->
water	44:20	0:0	4	s_indexmapped
op	44:33	0:0	4	[
water	44:34	0:0	4	0
op	44:35	0:0	4	]
arg	44:38	44:81	3	ch_data->s_indexmapped[ch_data->bs_num_env]
water	44:38	0:0	4	ch_data
op	44:45	0:0	4	->
water	44:47	0:0	4	s_indexmapped
op	44:60	0:0	4	[
water	44:61	0:0	4	ch_data
op	44:68	0:0	4	->
water	44:70	0:0	4	bs_num_env
op	44:80	0:0	4	]
arg	44:83	44:116	3	sizeof(ch_data->s_indexmapped[0])
op	44:83	0:0	4	sizeof
water	44:89	0:0	4	(
water	44:90	0:0	4	ch_data
op	44:97	0:0	4	->
water	44:99	0:0	4	s_indexmapped
op	44:112	0:0	4	[
water	44:113	0:0	4	0
op	44:114	0:0	4	]
water	44:115	0:0	4	)
water	44:117	0:0	2	;
return	45:4	45:12	2	0
water	45:11	0:0	3	0

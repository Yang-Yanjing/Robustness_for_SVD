func	1:0	39:0	0	static char *	xmlescape
params	1:22	0:0	1	
param	1:23	1:38	2	const char *	str
stmnts	0:0	38:14	1	
decl	2:4	2:36	2	int	outlen
op	2:15	0:0	2	=
call	2:17	2:27	3	strlen
arg	2:24	2:27	4	str
water	2:24	0:0	5	str
op	2:28	0:0	2	*
water	2:29	0:0	2	3
op	2:30	0:0	2	/
water	2:31	0:0	2	2
op	2:33	0:0	2	+
water	2:35	0:0	2	6
decl	3:4	3:44	2	char	*out
op	3:14	0:0	2	=
call	3:16	3:43	3	av_realloc
arg	3:27	3:31	4	NULL
water	3:27	0:0	5	NULL
arg	3:33	3:43	4	outlen+1
water	3:33	0:0	5	outlen
op	3:40	0:0	5	+
water	3:42	0:0	5	1
decl	4:4	4:15	2	int	pos
op	4:12	0:0	2	=
water	4:14	0:0	2	0
if	5:4	6:19	2	(! out)
cond	5:8	5:9	3	! out
op	5:8	0:0	4	!
water	5:9	0:0	4	out
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
for	7:4	36:4	2	(;* str;str ++)
forinit	7:9	7:9	3	;
water	7:9	0:0	4	;
cond	7:11	7:12	3	* str
op	7:11	0:0	4	*
water	7:12	0:0	4	str
forexpr	7:17	7:20	3	str ++
water	7:17	0:0	4	str
op	7:20	0:0	4	++
stmts	7:24	36:4	3	
water	7:24	0:0	4	{
if	8:8	17:8	4	(pos + 6 > outlen)
cond	8:12	8:22	5	pos + 6 > outlen
water	8:12	0:0	6	pos
op	8:16	0:0	6	+
water	8:18	0:0	6	6
op	8:20	0:0	6	>
water	8:22	0:0	6	outlen
stmts	8:30	17:8	5	
water	8:30	0:0	6	{
decl	9:12	9:21	6	char	*tmp
water	10:12	0:0	6	outlen
op	10:19	0:0	6	=
water	10:21	0:0	6	2
op	10:23	0:0	6	*
water	10:25	0:0	6	outlen
op	10:32	0:0	6	+
water	10:34	0:0	6	6
water	10:35	0:0	6	;
water	11:12	0:0	6	tmp
op	11:16	0:0	6	=
call	11:18	11:44	6	av_realloc
arg	11:29	11:32	7	out
water	11:29	0:0	8	out
arg	11:34	11:44	7	outlen+1
water	11:34	0:0	8	outlen
op	11:41	0:0	8	+
water	11:43	0:0	8	1
water	11:45	0:0	6	;
if	12:12	15:12	6	(! tmp)
cond	12:16	12:17	7	! tmp
op	12:16	0:0	8	!
water	12:17	0:0	8	tmp
stmts	12:22	15:12	7	
water	12:22	0:0	8	{
call	13:16	13:27	8	av_free
arg	13:24	13:27	9	out
water	13:24	0:0	10	out
water	13:28	0:0	8	;
return	14:16	14:27	8	NULL
water	14:23	0:0	9	NULL
water	15:12	0:0	8	}
water	16:12	0:0	6	out
op	16:16	0:0	6	=
water	16:18	0:0	6	tmp
water	16:21	0:0	6	;
water	17:8	0:0	6	}
if	18:8	21:8	4	(* str == '&')
cond	18:12	18:20	5	* str == '&'
op	18:12	0:0	6	*
water	18:13	0:0	6	str
op	18:17	0:0	6	==
water	18:20	0:0	6	'&'
stmts	18:25	21:8	5	
water	18:25	0:0	6	{
call	19:12	19:40	6	memcpy
arg	19:19	19:28	7	&out[pos]
op	19:19	0:0	8	&
water	19:20	0:0	8	out
op	19:23	0:0	8	[
water	19:24	0:0	8	pos
op	19:27	0:0	8	]
arg	19:30	19:37	7	"&amp;"
water	19:30	0:0	8	"&amp;"
arg	19:39	19:40	7	5
water	19:39	0:0	8	5
water	19:41	0:0	6	;
water	20:12	0:0	6	pos
op	20:16	0:0	6	+=
water	20:19	0:0	6	5
water	20:20	0:0	6	;
water	21:8	0:0	6	}
else	21:10	24:8	4
stmts	21:15	24:8	5	
if	21:15	24:8	6	(* str == '<')
cond	21:19	21:27	7	* str == '<'
op	21:19	0:0	8	*
water	21:20	0:0	8	str
op	21:24	0:0	8	==
water	21:27	0:0	8	'<'
stmts	21:32	24:8	7	
water	21:32	0:0	8	{
call	22:12	22:39	8	memcpy
arg	22:19	22:28	9	&out[pos]
op	22:19	0:0	10	&
water	22:20	0:0	10	out
op	22:23	0:0	10	[
water	22:24	0:0	10	pos
op	22:27	0:0	10	]
arg	22:30	22:36	9	"&lt;"
water	22:30	0:0	10	"&lt;"
arg	22:38	22:39	9	4
water	22:38	0:0	10	4
water	22:40	0:0	8	;
water	23:12	0:0	8	pos
op	23:16	0:0	8	+=
water	23:19	0:0	8	4
water	23:20	0:0	8	;
water	24:8	0:0	8	}
else	24:10	27:8	4
stmts	24:15	27:8	5	
if	24:15	27:8	6	(* str == '>')
cond	24:19	24:27	7	* str == '>'
op	24:19	0:0	8	*
water	24:20	0:0	8	str
op	24:24	0:0	8	==
water	24:27	0:0	8	'>'
stmts	24:32	27:8	7	
water	24:32	0:0	8	{
call	25:12	25:39	8	memcpy
arg	25:19	25:28	9	&out[pos]
op	25:19	0:0	10	&
water	25:20	0:0	10	out
op	25:23	0:0	10	[
water	25:24	0:0	10	pos
op	25:27	0:0	10	]
arg	25:30	25:36	9	"&gt;"
water	25:30	0:0	10	"&gt;"
arg	25:38	25:39	9	4
water	25:38	0:0	10	4
water	25:40	0:0	8	;
water	26:12	0:0	8	pos
op	26:16	0:0	8	+=
water	26:19	0:0	8	4
water	26:20	0:0	8	;
water	27:8	0:0	8	}
else	27:10	30:8	4
stmts	27:15	30:8	5	
if	27:15	30:8	6	(* str == '\'')
cond	27:19	27:27	7	* str == '\''
op	27:19	0:0	8	*
water	27:20	0:0	8	str
op	27:24	0:0	8	==
water	27:27	0:0	8	'\''
stmts	27:33	30:8	7	
water	27:33	0:0	8	{
call	28:12	28:41	8	memcpy
arg	28:19	28:28	9	&out[pos]
op	28:19	0:0	10	&
water	28:20	0:0	10	out
op	28:23	0:0	10	[
water	28:24	0:0	10	pos
op	28:27	0:0	10	]
arg	28:30	28:38	9	"&apos;"
water	28:30	0:0	10	"&apos;"
arg	28:40	28:41	9	6
water	28:40	0:0	10	6
water	28:42	0:0	8	;
water	29:12	0:0	8	pos
op	29:16	0:0	8	+=
water	29:19	0:0	8	6
water	29:20	0:0	8	;
water	30:8	0:0	8	}
else	30:10	33:8	4
stmts	30:15	33:8	5	
if	30:15	33:8	6	(* str == '\"')
cond	30:19	30:27	7	* str == '\"'
op	30:19	0:0	8	*
water	30:20	0:0	8	str
op	30:24	0:0	8	==
water	30:27	0:0	8	'\"'
stmts	30:33	33:8	7	
water	30:33	0:0	8	{
call	31:12	31:41	8	memcpy
arg	31:19	31:28	9	&out[pos]
op	31:19	0:0	10	&
water	31:20	0:0	10	out
op	31:23	0:0	10	[
water	31:24	0:0	10	pos
op	31:27	0:0	10	]
arg	31:30	31:38	9	"&quot;"
water	31:30	0:0	10	"&quot;"
arg	31:40	31:41	9	6
water	31:40	0:0	10	6
water	31:42	0:0	8	;
water	32:12	0:0	8	pos
op	32:16	0:0	8	+=
water	32:19	0:0	8	6
water	32:20	0:0	8	;
water	33:8	0:0	8	}
else	33:10	35:8	4
stmts	33:15	35:8	5	
water	33:15	0:0	6	{
water	34:12	0:0	6	out
op	34:15	0:0	6	[
water	34:16	0:0	6	pos
op	34:19	0:0	6	++
op	34:21	0:0	6	]
op	34:23	0:0	6	=
op	34:25	0:0	6	*
water	34:26	0:0	6	str
water	34:29	0:0	6	;
water	35:8	0:0	6	}
water	36:4	0:0	4	}
water	37:4	0:0	2	out
op	37:7	0:0	2	[
water	37:8	0:0	2	pos
op	37:11	0:0	2	]
op	37:13	0:0	2	=
water	37:15	0:0	2	'\0'
water	37:19	0:0	2	;
return	38:4	38:14	2	out
water	38:11	0:0	3	out

func	1:0	47:0	0	static int	mov_write_trun_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:65	2	MOVMuxContext *	mov
param	2:30	2:45	2	MOVTrack *	track
param	2:47	2:60	2	int	moof_size
param	3:30	3:39	2	int	first
param	3:41	3:48	2	int	end
stmnts	0:0	46:31	1	
decl	5:4	5:31	2	int64_t	pos
op	5:16	0:0	2	=
call	5:18	5:30	3	avio_tell
arg	5:28	5:30	4	pb
water	5:28	0:0	5	pb
decl	6:4	6:41	2	uint32_t	flags
op	6:19	0:0	2	=
water	6:21	0:0	2	MOV_TRUN_DATA_OFFSET
decl	7:4	7:9	2	int	i
for	8:4	15:4	2	(i = first ;i < end;i ++)
forinit	8:9	8:18	3	i = first ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	first
water	8:18	0:0	4	;
cond	8:20	8:24	3	i < end
water	8:20	0:0	4	i
op	8:22	0:0	4	<
water	8:24	0:0	4	end
forexpr	8:29	8:30	3	i ++
water	8:29	0:0	4	i
op	8:30	0:0	4	++
stmts	8:34	15:4	3	
water	8:34	0:0	4	{
if	9:8	10:45	4	(get_cluster_duration (track ,i ) != track -> default_duration)
cond	9:12	9:53	5	get_cluster_duration (track ,i ) != track -> default_duration
call	9:12	9:41	6	get_cluster_duration
arg	9:33	9:38	7	track
water	9:33	0:0	8	track
arg	9:40	9:41	7	i
water	9:40	0:0	8	i
op	9:43	0:0	6	!=
water	9:46	0:0	6	track
op	9:51	0:0	6	->
water	9:53	0:0	6	default_duration
stmts	10:12	10:45	5	
water	10:12	0:0	6	flags
op	10:18	0:0	6	|=
water	10:21	0:0	6	MOV_TRUN_SAMPLE_DURATION
water	10:45	0:0	6	;
if	11:8	12:41	4	(track -> cluster [ i ] . size != track -> default_size)
cond	11:12	11:45	5	track -> cluster [ i ] . size != track -> default_size
water	11:12	0:0	6	track
op	11:17	0:0	6	->
water	11:19	0:0	6	cluster
op	11:26	0:0	6	[
water	11:27	0:0	6	i
op	11:28	0:0	6	]
op	11:29	0:0	6	.
water	11:30	0:0	6	size
op	11:35	0:0	6	!=
water	11:38	0:0	6	track
op	11:43	0:0	6	->
water	11:45	0:0	6	default_size
stmts	12:12	12:41	5	
water	12:12	0:0	6	flags
op	12:18	0:0	6	|=
water	12:21	0:0	6	MOV_TRUN_SAMPLE_SIZE
water	12:41	0:0	6	;
if	13:8	14:42	4	(i > first &&get_sample_flags (track ,& track -> cluster [ i ] ) != track -> default_sample_flags)
cond	13:12	13:79	5	i > first &&get_sample_flags (track ,& track -> cluster [ i ] ) != track -> default_sample_flags
water	13:12	0:0	6	i
op	13:14	0:0	6	>
water	13:16	0:0	6	first
op	13:22	0:0	6	&&
call	13:25	13:67	6	get_sample_flags
arg	13:42	13:47	7	track
water	13:42	0:0	8	track
arg	13:49	13:67	7	&track->cluster[i]
op	13:49	0:0	8	&
water	13:50	0:0	8	track
op	13:55	0:0	8	->
water	13:57	0:0	8	cluster
op	13:64	0:0	8	[
water	13:65	0:0	8	i
op	13:66	0:0	8	]
op	13:69	0:0	6	!=
water	13:72	0:0	6	track
op	13:77	0:0	6	->
water	13:79	0:0	6	default_sample_flags
stmts	14:12	14:42	5	
water	14:12	0:0	6	flags
op	14:18	0:0	6	|=
water	14:21	0:0	6	MOV_TRUN_SAMPLE_FLAGS
water	14:42	0:0	6	;
water	15:4	0:0	4	}
if	16:4	18:44	2	(! ( flags & MOV_TRUN_SAMPLE_FLAGS ) && track -> entry > 0 &&get_sample_flags (track ,& track -> cluster [ 0 ] ) != track -> default_sample_flags)
cond	16:8	17:63	3	! ( flags & MOV_TRUN_SAMPLE_FLAGS ) && track -> entry > 0 &&get_sample_flags (track ,& track -> cluster [ 0 ] ) != track -> default_sample_flags
op	16:8	0:0	4	!
water	16:9	0:0	4	(
water	16:10	0:0	4	flags
op	16:16	0:0	4	&
water	16:18	0:0	4	MOV_TRUN_SAMPLE_FLAGS
water	16:39	0:0	4	)
op	16:41	0:0	4	&&
water	16:44	0:0	4	track
op	16:49	0:0	4	->
water	16:51	0:0	4	entry
op	16:57	0:0	4	>
water	16:59	0:0	4	0
op	16:61	0:0	4	&&
call	17:9	17:51	4	get_sample_flags
arg	17:26	17:31	5	track
water	17:26	0:0	6	track
arg	17:33	17:51	5	&track->cluster[0]
op	17:33	0:0	6	&
water	17:34	0:0	6	track
op	17:39	0:0	6	->
water	17:41	0:0	6	cluster
op	17:48	0:0	6	[
water	17:49	0:0	6	0
op	17:50	0:0	6	]
op	17:53	0:0	4	!=
water	17:56	0:0	4	track
op	17:61	0:0	4	->
water	17:63	0:0	4	default_sample_flags
stmts	18:8	18:44	3	
water	18:8	0:0	4	flags
op	18:14	0:0	4	|=
water	18:17	0:0	4	MOV_TRUN_FIRST_SAMPLE_FLAGS
water	18:44	0:0	4	;
if	19:4	20:36	2	(track -> flags & MOV_TRACK_CTTS)
cond	19:8	19:23	3	track -> flags & MOV_TRACK_CTTS
water	19:8	0:0	4	track
op	19:13	0:0	4	->
water	19:15	0:0	4	flags
op	19:21	0:0	4	&
water	19:23	0:0	4	MOV_TRACK_CTTS
stmts	20:8	20:36	3	
water	20:8	0:0	4	flags
op	20:14	0:0	4	|=
water	20:17	0:0	4	MOV_TRUN_SAMPLE_CTS
water	20:36	0:0	4	;
call	21:4	21:19	2	avio_wb32
arg	21:14	21:16	3	pb
water	21:14	0:0	4	pb
arg	21:18	21:19	3	0
water	21:18	0:0	4	0
water	21:20	0:0	2	;
call	22:4	22:27	2	ffio_wfourcc
arg	22:17	22:19	3	pb
water	22:17	0:0	4	pb
arg	22:21	22:27	3	"trun"
water	22:21	0:0	4	"trun"
water	22:28	0:0	2	;
call	23:4	23:17	2	avio_w8
arg	23:12	23:14	3	pb
water	23:12	0:0	4	pb
arg	23:16	23:17	3	0
water	23:16	0:0	4	0
water	23:18	0:0	2	;
call	24:4	24:23	2	avio_wb24
arg	24:14	24:16	3	pb
water	24:14	0:0	4	pb
arg	24:18	24:23	3	flags
water	24:18	0:0	4	flags
water	24:24	0:0	2	;
call	25:4	25:29	2	avio_wb32
arg	25:14	25:16	3	pb
water	25:14	0:0	4	pb
arg	25:18	25:29	3	end-first
water	25:18	0:0	4	end
op	25:22	0:0	4	-
water	25:24	0:0	4	first
water	25:30	0:0	2	;
if	26:4	29:24	2	(mov -> flags & FF_MOV_FLAG_OMIT_TFHD_OFFSET && ! ( mov -> flags & FF_MOV_FLAG_DEFAULT_BASE_MOOF ) && ! mov -> first_trun)
cond	26:8	28:14	3	mov -> flags & FF_MOV_FLAG_OMIT_TFHD_OFFSET && ! ( mov -> flags & FF_MOV_FLAG_DEFAULT_BASE_MOOF ) && ! mov -> first_trun
water	26:8	0:0	4	mov
op	26:11	0:0	4	->
water	26:13	0:0	4	flags
op	26:19	0:0	4	&
water	26:21	0:0	4	FF_MOV_FLAG_OMIT_TFHD_OFFSET
op	26:50	0:0	4	&&
op	27:8	0:0	4	!
water	27:9	0:0	4	(
water	27:10	0:0	4	mov
op	27:13	0:0	4	->
water	27:15	0:0	4	flags
op	27:21	0:0	4	&
water	27:23	0:0	4	FF_MOV_FLAG_DEFAULT_BASE_MOOF
water	27:52	0:0	4	)
op	27:54	0:0	4	&&
op	28:8	0:0	4	!
water	28:9	0:0	4	mov
op	28:12	0:0	4	->
water	28:14	0:0	4	first_trun
stmts	29:8	29:24	3	
call	29:8	29:23	4	avio_wb32
arg	29:18	29:20	5	pb
water	29:18	0:0	6	pb
arg	29:22	29:23	5	0
water	29:22	0:0	6	0
water	29:24	0:0	4	;
else	30:4	32:48	2
stmts	31:8	32:48	3	
call	31:8	32:47	4	avio_wb32
arg	31:18	31:20	5	pb
water	31:18	0:0	6	pb
arg	31:22	32:47	5	moof_size+8+track->data_offset+track->cluster[first].pos
water	31:22	0:0	6	moof_size
op	31:32	0:0	6	+
water	31:34	0:0	6	8
op	31:36	0:0	6	+
water	31:38	0:0	6	track
op	31:43	0:0	6	->
water	31:45	0:0	6	data_offset
op	31:57	0:0	6	+
water	32:22	0:0	6	track
op	32:27	0:0	6	->
water	32:29	0:0	6	cluster
op	32:36	0:0	6	[
water	32:37	0:0	6	first
op	32:42	0:0	6	]
op	32:43	0:0	6	.
water	32:44	0:0	6	pos
water	32:48	0:0	4	;
if	33:4	34:70	2	(flags & MOV_TRUN_FIRST_SAMPLE_FLAGS)
cond	33:8	33:16	3	flags & MOV_TRUN_FIRST_SAMPLE_FLAGS
water	33:8	0:0	4	flags
op	33:14	0:0	4	&
water	33:16	0:0	4	MOV_TRUN_FIRST_SAMPLE_FLAGS
stmts	34:8	34:70	3	
call	34:8	34:69	4	avio_wb32
arg	34:18	34:20	5	pb
water	34:18	0:0	6	pb
arg	34:22	34:69	5	get_sample_flags(track,&track->cluster[first])
call	34:22	34:68	6	get_sample_flags
arg	34:39	34:44	7	track
water	34:39	0:0	8	track
arg	34:46	34:68	7	&track->cluster[first]
op	34:46	0:0	8	&
water	34:47	0:0	8	track
op	34:52	0:0	8	->
water	34:54	0:0	8	cluster
op	34:61	0:0	8	[
water	34:62	0:0	8	first
op	34:67	0:0	8	]
water	34:70	0:0	4	;
for	35:4	44:4	2	(i = first ;i < end;i ++)
forinit	35:9	35:18	3	i = first ;
water	35:9	0:0	4	i
op	35:11	0:0	4	=
water	35:13	0:0	4	first
water	35:18	0:0	4	;
cond	35:20	35:24	3	i < end
water	35:20	0:0	4	i
op	35:22	0:0	4	<
water	35:24	0:0	4	end
forexpr	35:29	35:30	3	i ++
water	35:29	0:0	4	i
op	35:30	0:0	4	++
stmts	35:34	44:4	3	
water	35:34	0:0	4	{
if	36:8	37:57	4	(flags & MOV_TRUN_SAMPLE_DURATION)
cond	36:12	36:20	5	flags & MOV_TRUN_SAMPLE_DURATION
water	36:12	0:0	6	flags
op	36:18	0:0	6	&
water	36:20	0:0	6	MOV_TRUN_SAMPLE_DURATION
stmts	37:12	37:57	5	
call	37:12	37:56	6	avio_wb32
arg	37:22	37:24	7	pb
water	37:22	0:0	8	pb
arg	37:26	37:56	7	get_cluster_duration(track,i)
call	37:26	37:55	8	get_cluster_duration
arg	37:47	37:52	9	track
water	37:47	0:0	10	track
arg	37:54	37:55	9	i
water	37:54	0:0	10	i
water	37:57	0:0	6	;
if	38:8	39:49	4	(flags & MOV_TRUN_SAMPLE_SIZE)
cond	38:12	38:20	5	flags & MOV_TRUN_SAMPLE_SIZE
water	38:12	0:0	6	flags
op	38:18	0:0	6	&
water	38:20	0:0	6	MOV_TRUN_SAMPLE_SIZE
stmts	39:12	39:49	5	
call	39:12	39:48	6	avio_wb32
arg	39:22	39:24	7	pb
water	39:22	0:0	8	pb
arg	39:26	39:48	7	track->cluster[i].size
water	39:26	0:0	8	track
op	39:31	0:0	8	->
water	39:33	0:0	8	cluster
op	39:40	0:0	8	[
water	39:41	0:0	8	i
op	39:42	0:0	8	]
op	39:43	0:0	8	.
water	39:44	0:0	8	size
water	39:49	0:0	6	;
if	40:8	41:70	4	(flags & MOV_TRUN_SAMPLE_FLAGS)
cond	40:12	40:20	5	flags & MOV_TRUN_SAMPLE_FLAGS
water	40:12	0:0	6	flags
op	40:18	0:0	6	&
water	40:20	0:0	6	MOV_TRUN_SAMPLE_FLAGS
stmts	41:12	41:70	5	
call	41:12	41:69	6	avio_wb32
arg	41:22	41:24	7	pb
water	41:22	0:0	8	pb
arg	41:26	41:69	7	get_sample_flags(track,&track->cluster[i])
call	41:26	41:68	8	get_sample_flags
arg	41:43	41:48	9	track
water	41:43	0:0	10	track
arg	41:50	41:68	9	&track->cluster[i]
op	41:50	0:0	10	&
water	41:51	0:0	10	track
op	41:56	0:0	10	->
water	41:58	0:0	10	cluster
op	41:65	0:0	10	[
water	41:66	0:0	10	i
op	41:67	0:0	10	]
water	41:70	0:0	6	;
if	42:8	43:48	4	(flags & MOV_TRUN_SAMPLE_CTS)
cond	42:12	42:20	5	flags & MOV_TRUN_SAMPLE_CTS
water	42:12	0:0	6	flags
op	42:18	0:0	6	&
water	42:20	0:0	6	MOV_TRUN_SAMPLE_CTS
stmts	43:12	43:48	5	
call	43:12	43:47	6	avio_wb32
arg	43:22	43:24	7	pb
water	43:22	0:0	8	pb
arg	43:26	43:47	7	track->cluster[i].cts
water	43:26	0:0	8	track
op	43:31	0:0	8	->
water	43:33	0:0	8	cluster
op	43:40	0:0	8	[
water	43:41	0:0	8	i
op	43:42	0:0	8	]
op	43:43	0:0	8	.
water	43:44	0:0	8	cts
water	43:48	0:0	6	;
water	44:4	0:0	4	}
water	45:4	0:0	2	mov
op	45:7	0:0	2	->
water	45:9	0:0	2	first_trun
op	45:20	0:0	2	=
water	45:22	0:0	2	0
water	45:23	0:0	2	;
return	46:4	46:31	2	update_size(pb,pos)
call	46:11	46:30	3	update_size
arg	46:23	46:25	4	pb
water	46:23	0:0	5	pb
arg	46:27	46:30	4	pos
water	46:27	0:0	5	pos

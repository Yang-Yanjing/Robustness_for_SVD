func	1:0	18:0	0	static int64_t	luma_abs_diff
params	1:28	0:0	1	
param	1:29	1:46	2	const AVFrame *	f1
param	1:48	1:65	2	const AVFrame *	f2
stmnts	0:0	17:14	1	
decl	3:4	3:12	2	int	x
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	y
decl	4:4	4:38	2	const uint8_t	*srcp1
op	4:25	0:0	2	=
water	4:27	0:0	2	f1
op	4:29	0:0	2	->
water	4:31	0:0	2	data
op	4:35	0:0	2	[
water	4:36	0:0	2	0
op	4:37	0:0	2	]
decl	5:4	5:38	2	const uint8_t	*srcp2
op	5:25	0:0	2	=
water	5:27	0:0	2	f2
op	5:29	0:0	2	->
water	5:31	0:0	2	data
op	5:35	0:0	2	[
water	5:36	0:0	2	0
op	5:37	0:0	2	]
decl	6:4	6:45	2	const int	src1_linesize
op	6:28	0:0	2	=
water	6:30	0:0	2	f1
op	6:32	0:0	2	->
water	6:34	0:0	2	linesize
op	6:42	0:0	2	[
water	6:43	0:0	2	0
op	6:44	0:0	2	]
decl	7:4	7:45	2	const int	src2_linesize
op	7:28	0:0	2	=
water	7:30	0:0	2	f2
op	7:32	0:0	2	->
water	7:34	0:0	2	linesize
op	7:42	0:0	2	[
water	7:43	0:0	2	0
op	7:44	0:0	2	]
decl	8:4	8:32	2	const int	width
op	8:21	0:0	2	=
water	8:23	0:0	2	f1
op	8:25	0:0	2	->
water	8:27	0:0	2	width
decl	9:4	9:33	2	const int	height
op	9:21	0:0	2	=
water	9:23	0:0	2	f1
op	9:25	0:0	2	->
water	9:27	0:0	2	height
decl	10:4	10:19	2	int64_t	acc
op	10:16	0:0	2	=
water	10:18	0:0	2	0
for	11:4	16:4	2	(y = 0 ;y < height;y ++)
forinit	11:9	11:14	3	y = 0 ;
water	11:9	0:0	4	y
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:20	3	y < height
water	11:16	0:0	4	y
op	11:18	0:0	4	<
water	11:20	0:0	4	height
forexpr	11:28	11:29	3	y ++
water	11:28	0:0	4	y
op	11:29	0:0	4	++
stmts	11:33	16:4	3	
water	11:33	0:0	4	{
for	12:8	13:43	4	(x = 0 ;x < width;x ++)
forinit	12:13	12:18	5	x = 0 ;
water	12:13	0:0	6	x
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	x < width
water	12:20	0:0	6	x
op	12:22	0:0	6	<
water	12:24	0:0	6	width
forexpr	12:31	12:32	5	x ++
water	12:31	0:0	6	x
op	12:32	0:0	6	++
stmts	13:12	13:43	5	
water	13:12	0:0	6	acc
op	13:16	0:0	6	+=
call	13:19	13:42	6	abs
arg	13:23	13:42	7	srcp1[x]-srcp2[x]
water	13:23	0:0	8	srcp1
op	13:28	0:0	8	[
water	13:29	0:0	8	x
op	13:30	0:0	8	]
op	13:32	0:0	8	-
water	13:34	0:0	8	srcp2
op	13:39	0:0	8	[
water	13:40	0:0	8	x
op	13:41	0:0	8	]
water	13:43	0:0	6	;
water	14:8	0:0	4	srcp1
op	14:14	0:0	4	+=
water	14:17	0:0	4	src1_linesize
water	14:30	0:0	4	;
water	15:8	0:0	4	srcp2
op	15:14	0:0	4	+=
water	15:17	0:0	4	src2_linesize
water	15:30	0:0	4	;
water	16:4	0:0	4	}
return	17:4	17:14	2	acc
water	17:11	0:0	3	acc

func	1:0	55:0	0	void	ff_generate_wave_table
params	1:27	0:0	1	
param	1:28	1:51	2	enum WaveType	wave_type
param	2:28	2:58	2	enum AVSampleFormat	sample_fmt
param	3:28	3:39	2	void *	table
param	3:41	3:55	2	int	table_size
param	4:28	4:38	2	double	min
param	4:40	4:50	2	double	max
param	4:52	4:64	2	double	phase
stmnts	0:0	54:4	1	
decl	6:4	6:66	2	uint32_t	i
water	6:14	0:0	2	,
decl	6:4	6:66	2	uint32_t	phase_offset
op	6:29	0:0	2	=
water	6:31	0:0	2	phase
op	6:37	0:0	2	/
water	6:39	0:0	2	M_PI
op	6:44	0:0	2	/
water	6:46	0:0	2	2
op	6:48	0:0	2	*
water	6:50	0:0	2	table_size
op	6:61	0:0	2	+
water	6:63	0:0	2	0
op	6:64	0:0	2	.
water	6:65	0:0	2	5
for	7:4	54:4	2	(i = 0 ;i < table_size;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	i < table_size
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	table_size
forexpr	7:32	7:33	3	i ++
water	7:32	0:0	4	i
op	7:33	0:0	4	++
stmts	7:37	54:4	3	
water	7:37	0:0	4	{
decl	8:8	8:56	4	uint32_t	point
op	8:23	0:0	4	=
water	8:25	0:0	4	(
water	8:26	0:0	4	i
op	8:28	0:0	4	+
water	8:30	0:0	4	phase_offset
water	8:42	0:0	4	)
op	8:44	0:0	4	%
water	8:46	0:0	4	table_size
decl	9:8	9:16	4	double	d
switch	10:8	25:8	4	(wave_type)
cond	10:16	10:16	5	wave_type
water	10:16	0:0	6	wave_type
stmts	10:27	25:8	5	
water	10:27	0:0	6	{
label	11:8	11:21	6	case WAVE_SIN :
water	12:12	0:0	6	d
op	12:14	0:0	6	=
water	12:16	0:0	6	(
call	12:17	12:58	6	sin
arg	12:21	12:58	7	(double)point/table_size*2*M_PI
water	12:21	0:0	8	(
water	12:22	0:0	8	double
water	12:28	0:0	8	)
water	12:29	0:0	8	point
op	12:35	0:0	8	/
water	12:37	0:0	8	table_size
op	12:48	0:0	8	*
water	12:50	0:0	8	2
op	12:52	0:0	8	*
water	12:54	0:0	8	M_PI
op	12:60	0:0	6	+
water	12:62	0:0	6	1
water	12:63	0:0	6	)
op	12:65	0:0	6	/
water	12:67	0:0	6	2
water	12:68	0:0	6	;
break	13:12	13:17	6	
label	14:8	14:21	6	case WAVE_TRI :
water	15:12	0:0	6	d
op	15:14	0:0	6	=
water	15:16	0:0	6	(
water	15:17	0:0	6	double
water	15:23	0:0	6	)
water	15:24	0:0	6	point
op	15:30	0:0	6	*
water	15:32	0:0	6	2
op	15:34	0:0	6	/
water	15:36	0:0	6	table_size
water	15:46	0:0	6	;
switch	16:12	21:12	6	(4 * point / table_size)
cond	16:20	16:32	7	4 * point / table_size
water	16:20	0:0	8	4
op	16:22	0:0	8	*
water	16:24	0:0	8	point
op	16:30	0:0	8	/
water	16:32	0:0	8	table_size
stmts	16:44	21:12	7	
water	16:44	0:0	8	{
label	17:12	17:18	8	case 0 :
water	17:20	0:0	8	d
op	17:22	0:0	8	=
water	17:24	0:0	8	d
op	17:26	0:0	8	+
water	17:28	0:0	8	0
op	17:29	0:0	8	.
water	17:30	0:0	8	5
water	17:31	0:0	8	;
break	17:33	17:38	8	
label	18:12	18:18	8	case 1 :
label	19:12	19:18	8	case 2 :
water	19:20	0:0	8	d
op	19:22	0:0	8	=
water	19:24	0:0	8	1
op	19:25	0:0	8	.
water	19:26	0:0	8	5
op	19:28	0:0	8	-
water	19:30	0:0	8	d
water	19:31	0:0	8	;
break	19:33	19:38	8	
label	20:12	20:18	8	case 3 :
water	20:20	0:0	8	d
op	20:22	0:0	8	=
water	20:24	0:0	8	d
op	20:26	0:0	8	-
water	20:28	0:0	8	1
op	20:29	0:0	8	.
water	20:30	0:0	8	5
water	20:31	0:0	8	;
break	20:33	20:38	8	
water	21:12	0:0	8	}
break	22:12	22:17	6	
label	23:8	23:15	6	default :
call	24:12	24:24	6	av_assert0
arg	24:23	24:24	7	0
water	24:23	0:0	8	0
water	24:25	0:0	6	;
water	25:8	0:0	6	}
water	26:8	0:0	4	d
op	26:11	0:0	4	=
water	26:13	0:0	4	d
op	26:15	0:0	4	*
water	26:17	0:0	4	(
water	26:18	0:0	4	max
op	26:22	0:0	4	-
water	26:24	0:0	4	min
water	26:27	0:0	4	)
op	26:29	0:0	4	+
water	26:31	0:0	4	min
water	26:34	0:0	4	;
switch	27:8	38:8	4	(sample_fmt)
cond	27:16	27:16	5	sample_fmt
water	27:16	0:0	6	sample_fmt
stmts	27:28	38:8	5	
water	27:28	0:0	6	{
label	28:8	28:30	6	case AV_SAMPLE_FMT_FLT :
water	28:32	0:0	6	{
decl	29:12	29:38	6	float	*fp
op	29:22	0:0	6	=
water	29:24	0:0	6	(
water	29:25	0:0	6	float
op	29:31	0:0	6	*
water	29:32	0:0	6	)
water	29:33	0:0	6	table
op	30:12	0:0	6	*
water	30:13	0:0	6	fp
op	30:15	0:0	6	++
op	30:18	0:0	6	=
water	30:20	0:0	6	(
water	30:21	0:0	6	float
water	30:26	0:0	6	)
water	30:27	0:0	6	d
water	30:28	0:0	6	;
water	31:12	0:0	6	table
op	31:18	0:0	6	=
water	31:20	0:0	6	fp
water	31:22	0:0	6	;
continue	32:12	32:20	6	
water	32:22	0:0	6	}
label	33:8	33:30	6	case AV_SAMPLE_FMT_DBL :
water	33:32	0:0	6	{
decl	34:12	34:40	6	double	*dp
op	34:23	0:0	6	=
water	34:25	0:0	6	(
water	34:26	0:0	6	double
op	34:33	0:0	6	*
water	34:34	0:0	6	)
water	34:35	0:0	6	table
op	35:12	0:0	6	*
water	35:13	0:0	6	dp
op	35:15	0:0	6	++
op	35:18	0:0	6	=
water	35:20	0:0	6	d
water	35:21	0:0	6	;
water	36:12	0:0	6	table
op	36:18	0:0	6	=
water	36:20	0:0	6	dp
water	36:22	0:0	6	;
continue	37:12	37:20	6	
water	37:22	0:0	6	}
water	38:8	0:0	6	}
water	39:8	0:0	4	d
op	39:10	0:0	4	+=
water	39:13	0:0	4	d
op	39:15	0:0	4	<
water	39:17	0:0	4	0
water	39:19	0:0	4	?
op	39:21	0:0	4	-
water	39:22	0:0	4	0
op	39:23	0:0	4	.
water	39:24	0:0	4	5
water	39:26	0:0	4	:
water	39:28	0:0	4	0
op	39:29	0:0	4	.
water	39:30	0:0	4	5
water	39:31	0:0	4	;
switch	40:8	53:8	4	(sample_fmt)
cond	40:16	40:16	5	sample_fmt
water	40:16	0:0	6	sample_fmt
stmts	40:28	53:8	5	
water	40:28	0:0	6	{
label	41:8	41:30	6	case AV_SAMPLE_FMT_S16 :
water	41:32	0:0	6	{
decl	42:12	42:31	6	int16_t	*sp
op	42:24	0:0	6	=
water	42:26	0:0	6	table
op	43:12	0:0	6	*
water	43:13	0:0	6	sp
op	43:15	0:0	6	++
op	43:18	0:0	6	=
water	43:20	0:0	6	(
water	43:21	0:0	6	int16_t
water	43:28	0:0	6	)
water	43:29	0:0	6	d
water	43:30	0:0	6	;
water	44:12	0:0	6	table
op	44:18	0:0	6	=
water	44:20	0:0	6	sp
water	44:22	0:0	6	;
continue	45:12	45:20	6	
water	45:22	0:0	6	}
label	46:8	46:30	6	case AV_SAMPLE_FMT_S32 :
water	46:32	0:0	6	{
decl	47:12	47:31	6	int32_t	*ip
op	47:24	0:0	6	=
water	47:26	0:0	6	table
op	48:12	0:0	6	*
water	48:13	0:0	6	ip
op	48:15	0:0	6	++
op	48:18	0:0	6	=
water	48:20	0:0	6	(
water	48:21	0:0	6	int32_t
water	48:28	0:0	6	)
water	48:29	0:0	6	d
water	48:30	0:0	6	;
water	49:12	0:0	6	table
op	49:18	0:0	6	=
water	49:20	0:0	6	ip
water	49:22	0:0	6	;
continue	50:12	50:20	6	
water	50:22	0:0	6	}
label	51:8	51:15	6	default :
call	52:12	52:24	6	av_assert0
arg	52:23	52:24	7	0
water	52:23	0:0	8	0
water	52:25	0:0	6	;
water	53:8	0:0	6	}
water	54:4	0:0	4	}

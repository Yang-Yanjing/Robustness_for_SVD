func	1:0	56:0	0	static HTTPContext *	rtp_new_connection
params	1:38	0:0	1	
param	1:39	1:68	2	struct sockaddr_in *	from_addr
param	2:39	2:61	2	FFServerStream *	stream
param	3:39	3:61	2	const char *	session_id
param	4:39	4:75	2	enum RTSPLowerTransport	rtp_protocol
stmnts	0:0	55:15	1	
decl	6:4	6:25	2	HTTPContext	*c
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
decl	7:4	7:25	2	const char	*proto_str
if	10:4	11:17	2	(nb_connections >= config . nb_max_connections)
cond	10:8	10:33	3	nb_connections >= config . nb_max_connections
water	10:8	0:0	4	nb_connections
op	10:23	0:0	4	>=
water	10:26	0:0	4	config
op	10:32	0:0	4	.
water	10:33	0:0	4	nb_max_connections
stmts	11:8	11:17	3	
goto	11:8	11:17	4	fail
water	11:13	0:0	5	fail
water	13:4	0:0	2	c
op	13:6	0:0	2	=
call	13:8	13:38	2	av_mallocz
arg	13:19	13:38	3	sizeof(HTTPContext)
op	13:19	0:0	4	sizeof
water	13:25	0:0	4	(
water	13:26	0:0	4	HTTPContext
water	13:37	0:0	4	)
water	13:39	0:0	2	;
if	14:4	15:17	2	(! c)
cond	14:8	14:9	3	! c
op	14:8	0:0	4	!
water	14:9	0:0	4	c
stmts	15:8	15:17	3	
goto	15:8	15:17	4	fail
water	15:13	0:0	5	fail
water	16:4	0:0	2	c
op	16:5	0:0	2	->
water	16:7	0:0	2	fd
op	16:10	0:0	2	=
op	16:12	0:0	2	-
water	16:13	0:0	2	1
water	16:14	0:0	2	;
water	17:4	0:0	2	c
op	17:5	0:0	2	->
water	17:7	0:0	2	poll_entry
op	17:18	0:0	2	=
water	17:20	0:0	2	NULL
water	17:24	0:0	2	;
water	18:4	0:0	2	c
op	18:5	0:0	2	->
water	18:7	0:0	2	from_addr
op	18:17	0:0	2	=
op	18:19	0:0	2	*
water	18:20	0:0	2	from_addr
water	18:29	0:0	2	;
water	19:4	0:0	2	c
op	19:5	0:0	2	->
water	19:7	0:0	2	buffer_size
op	19:19	0:0	2	=
water	19:21	0:0	2	IOBUFFER_INIT_SIZE
water	19:39	0:0	2	;
water	20:4	0:0	2	c
op	20:5	0:0	2	->
water	20:7	0:0	2	buffer
op	20:14	0:0	2	=
call	20:16	20:40	2	av_malloc
arg	20:26	20:40	3	c->buffer_size
water	20:26	0:0	4	c
op	20:27	0:0	4	->
water	20:29	0:0	4	buffer_size
water	20:41	0:0	2	;
if	21:4	22:17	2	(! c -> buffer)
cond	21:8	21:12	3	! c -> buffer
op	21:8	0:0	4	!
water	21:9	0:0	4	c
op	21:10	0:0	4	->
water	21:12	0:0	4	buffer
stmts	22:8	22:17	3	
goto	22:8	22:17	4	fail
water	22:13	0:0	5	fail
water	23:4	0:0	2	nb_connections
op	23:18	0:0	2	++
water	23:20	0:0	2	;
water	24:4	0:0	2	c
op	24:5	0:0	2	->
water	24:7	0:0	2	stream
op	24:14	0:0	2	=
water	24:16	0:0	2	stream
water	24:22	0:0	2	;
call	25:4	25:63	2	av_strlcpy
arg	25:15	25:28	3	c->session_id
water	25:15	0:0	4	c
op	25:16	0:0	4	->
water	25:18	0:0	4	session_id
arg	25:30	25:40	3	session_id
water	25:30	0:0	4	session_id
arg	25:42	25:63	3	sizeof(c->session_id)
op	25:42	0:0	4	sizeof
water	25:48	0:0	4	(
water	25:49	0:0	4	c
op	25:50	0:0	4	->
water	25:52	0:0	4	session_id
water	25:62	0:0	4	)
water	25:64	0:0	2	;
water	26:4	0:0	2	c
op	26:5	0:0	2	->
water	26:7	0:0	2	state
op	26:13	0:0	2	=
water	26:15	0:0	2	HTTPSTATE_READY
water	26:30	0:0	2	;
water	27:4	0:0	2	c
op	27:5	0:0	2	->
water	27:7	0:0	2	is_packetized
op	27:21	0:0	2	=
water	27:23	0:0	2	1
water	27:24	0:0	2	;
water	28:4	0:0	2	c
op	28:5	0:0	2	->
water	28:7	0:0	2	rtp_protocol
op	28:20	0:0	2	=
water	28:22	0:0	2	rtp_protocol
water	28:34	0:0	2	;
switch	30:4	43:4	2	(c -> rtp_protocol)
cond	30:11	30:14	3	c -> rtp_protocol
water	30:11	0:0	4	c
op	30:12	0:0	4	->
water	30:14	0:0	4	rtp_protocol
stmts	30:28	43:4	3	
water	30:28	0:0	4	{
label	31:4	31:43	4	case RTSP_LOWER_TRANSPORT_UDP_MULTICAST :
water	32:8	0:0	4	proto_str
op	32:18	0:0	4	=
water	32:20	0:0	4	"MCAST"
water	32:27	0:0	4	;
break	33:8	33:13	4	
label	34:4	34:33	4	case RTSP_LOWER_TRANSPORT_UDP :
water	35:8	0:0	4	proto_str
op	35:18	0:0	4	=
water	35:20	0:0	4	"UDP"
water	35:25	0:0	4	;
break	36:8	36:13	4	
label	37:4	37:33	4	case RTSP_LOWER_TRANSPORT_TCP :
water	38:8	0:0	4	proto_str
op	38:18	0:0	4	=
water	38:20	0:0	4	"TCP"
water	38:25	0:0	4	;
break	39:8	39:13	4	
label	40:4	40:11	4	default :
water	41:8	0:0	4	proto_str
op	41:18	0:0	4	=
water	41:20	0:0	4	"???"
water	41:25	0:0	4	;
break	42:8	42:13	4	
water	43:4	0:0	4	}
call	44:4	44:55	2	av_strlcpy
arg	44:15	44:26	3	c->protocol
water	44:15	0:0	4	c
op	44:16	0:0	4	->
water	44:18	0:0	4	protocol
arg	44:28	44:34	3	"RTP/"
water	44:28	0:0	4	"RTP/"
arg	44:36	44:55	3	sizeof(c->protocol)
op	44:36	0:0	4	sizeof
water	44:42	0:0	4	(
water	44:43	0:0	4	c
op	44:44	0:0	4	->
water	44:46	0:0	4	protocol
water	44:54	0:0	4	)
water	44:56	0:0	2	;
call	45:4	45:58	2	av_strlcat
arg	45:15	45:26	3	c->protocol
water	45:15	0:0	4	c
op	45:16	0:0	4	->
water	45:18	0:0	4	protocol
arg	45:28	45:37	3	proto_str
water	45:28	0:0	4	proto_str
arg	45:39	45:58	3	sizeof(c->protocol)
op	45:39	0:0	4	sizeof
water	45:45	0:0	4	(
water	45:46	0:0	4	c
op	45:47	0:0	4	->
water	45:49	0:0	4	protocol
water	45:57	0:0	4	)
water	45:59	0:0	2	;
water	46:4	0:0	2	current_bandwidth
op	46:22	0:0	2	+=
water	46:25	0:0	2	stream
op	46:31	0:0	2	->
water	46:33	0:0	2	bandwidth
water	46:42	0:0	2	;
water	47:4	0:0	2	c
op	47:5	0:0	2	->
water	47:7	0:0	2	next
op	47:12	0:0	2	=
water	47:14	0:0	2	first_http_ctx
water	47:28	0:0	2	;
water	48:4	0:0	2	first_http_ctx
op	48:19	0:0	2	=
water	48:21	0:0	2	c
water	48:22	0:0	2	;
return	49:4	49:12	2	c
water	49:11	0:0	3	c
label	50:1	50:5	2	fail :
if	51:4	54:4	2	(c)
cond	51:8	51:8	3	c
water	51:8	0:0	4	c
stmts	51:11	54:4	3	
water	51:11	0:0	4	{
call	52:8	52:27	4	av_freep
arg	52:17	52:27	5	&c->buffer
op	52:17	0:0	6	&
water	52:18	0:0	6	c
op	52:19	0:0	6	->
water	52:21	0:0	6	buffer
water	52:28	0:0	4	;
call	53:8	53:17	4	av_free
arg	53:16	53:17	5	c
water	53:16	0:0	6	c
water	53:18	0:0	4	;
water	54:4	0:0	4	}
return	55:4	55:15	2	NULL
water	55:11	0:0	3	NULL

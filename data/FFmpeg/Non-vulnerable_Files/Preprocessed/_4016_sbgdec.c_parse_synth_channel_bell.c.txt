func	1:0	17:0	0	static int	parse_synth_channel_bell
params	1:35	0:0	1	
param	1:36	1:56	2	struct sbg_parser *	p
param	2:36	2:66	2	struct sbg_script_synth *	synth
stmnts	0:0	16:12	1	
decl	4:4	4:19	2	double	carrierf
decl	5:4	5:20	2	int	carrier
water	5:15	0:0	2	,
decl	5:4	5:20	2	int	vol
if	6:4	7:16	2	(!lex_fixed (p ,"bell" ,4 ))
cond	6:8	6:31	3	!lex_fixed (p ,"bell" ,4 )
op	6:8	0:0	4	!
call	6:9	6:31	4	lex_fixed
arg	6:19	6:20	5	p
water	6:19	0:0	6	p
arg	6:22	6:28	5	"bell"
water	6:22	0:0	6	"bell"
arg	6:30	6:31	5	4
water	6:30	0:0	6	4
stmts	7:8	7:16	3	
return	7:8	7:16	4	0
water	7:15	0:0	5	0
if	8:4	9:34	2	(!lex_double (p ,& carrierf ))
cond	8:8	8:32	3	!lex_double (p ,& carrierf )
op	8:8	0:0	4	!
call	8:9	8:32	4	lex_double
arg	8:20	8:21	5	p
water	8:20	0:0	6	p
arg	8:23	8:32	5	&carrierf
op	8:23	0:0	6	&
water	8:24	0:0	6	carrierf
stmts	9:8	9:34	3	
return	9:8	9:34	4	AVERROR_INVALIDDATA
water	9:15	0:0	5	AVERROR_INVALIDDATA
call	10:4	10:39	2	FORWARD_ERROR
arg	10:18	10:39	3	parse_volume(p,&vol)
call	10:18	10:38	4	parse_volume
arg	10:31	10:32	5	p
water	10:31	0:0	6	p
arg	10:34	10:38	5	&vol
op	10:34	0:0	6	&
water	10:35	0:0	6	vol
water	10:40	0:0	2	;
if	11:4	12:28	2	(scale_double (p -> log ,carrierf ,1 ,& carrier ) < 0)
cond	11:8	11:54	3	scale_double (p -> log ,carrierf ,1 ,& carrier ) < 0
call	11:8	11:50	4	scale_double
arg	11:21	11:27	5	p->log
water	11:21	0:0	6	p
op	11:22	0:0	6	->
water	11:24	0:0	6	log
arg	11:29	11:37	5	carrierf
water	11:29	0:0	6	carrierf
arg	11:39	11:40	5	1
water	11:39	0:0	6	1
arg	11:42	11:50	5	&carrier
op	11:42	0:0	6	&
water	11:43	0:0	6	carrier
op	11:52	0:0	4	<
water	11:54	0:0	4	0
stmts	12:8	12:28	3	
return	12:8	12:28	4	AVERROR(EDOM)
call	12:15	12:27	5	AVERROR
arg	12:23	12:27	6	EDOM
water	12:23	0:0	7	EDOM
water	13:4	0:0	2	synth
op	13:9	0:0	2	->
water	13:11	0:0	2	type
op	13:19	0:0	2	=
water	13:21	0:0	2	SBG_TYPE_BELL
water	13:34	0:0	2	;
water	14:4	0:0	2	synth
op	14:9	0:0	2	->
water	14:11	0:0	2	carrier
op	14:19	0:0	2	=
water	14:21	0:0	2	carrier
water	14:28	0:0	2	;
water	15:4	0:0	2	synth
op	15:9	0:0	2	->
water	15:11	0:0	2	vol
op	15:19	0:0	2	=
water	15:21	0:0	2	vol
water	15:24	0:0	2	;
return	16:4	16:12	2	1
water	16:11	0:0	3	1

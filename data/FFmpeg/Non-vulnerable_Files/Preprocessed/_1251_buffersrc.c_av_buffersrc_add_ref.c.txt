func	1:0	79:0	0	int	av_buffersrc_add_ref
params	1:24	0:0	1	
param	1:25	1:45	2	AVFilterContext *	ctx
param	1:47	1:69	2	AVFilterBufferRef *	buf
param	2:25	2:34	2	int	flags
stmnts	0:0	78:14	1	
decl	4:4	4:38	2	BufferSourceContext	*s
op	4:27	0:0	2	=
water	4:29	0:0	2	ctx
op	4:32	0:0	2	->
water	4:34	0:0	2	priv
decl	5:4	5:25	2	AVFrame	*frame
op	5:19	0:0	2	=
water	5:21	0:0	2	NULL
decl	6:4	6:33	2	AVBufferRef	*dummy_buf
op	6:27	0:0	2	=
water	6:29	0:0	2	NULL
decl	7:4	7:26	2	int	ret
op	7:12	0:0	2	=
water	7:14	0:0	2	0
water	7:15	0:0	2	,
decl	7:4	7:26	2	int	planes
water	7:23	0:0	2	,
decl	7:4	7:26	2	int	i
if	8:4	11:4	2	(! buf)
cond	8:8	8:9	3	! buf
op	8:8	0:0	4	!
water	8:9	0:0	4	buf
stmts	8:14	11:4	3	
water	8:14	0:0	4	{
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	eof
op	9:15	0:0	4	=
water	9:17	0:0	4	1
water	9:18	0:0	4	;
return	10:8	10:16	4	0
water	10:15	0:0	5	0
water	11:4	0:0	4	}
else	11:6	12:30	2
stmts	11:11	12:30	3	
if	11:11	12:30	4	(s -> eof)
cond	11:15	11:18	5	s -> eof
water	11:15	0:0	6	s
op	11:16	0:0	6	->
water	11:18	0:0	6	eof
stmts	12:8	12:30	5	
return	12:8	12:30	6	AVERROR(EINVAL)
call	12:15	12:29	7	AVERROR
arg	12:23	12:29	8	EINVAL
water	12:23	0:0	9	EINVAL
water	13:4	0:0	2	frame
op	13:10	0:0	2	=
call	13:12	13:27	2	av_frame_alloc
water	13:28	0:0	2	;
if	14:4	15:30	2	(! frame)
cond	14:8	14:9	3	! frame
op	14:8	0:0	4	!
water	14:9	0:0	4	frame
stmts	15:8	15:30	3	
return	15:8	15:30	4	AVERROR(ENOMEM)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	ENOMEM
water	15:23	0:0	7	ENOMEM
water	16:4	0:0	2	dummy_buf
op	16:14	0:0	2	=
call	16:16	17:91	2	av_buffer_create
arg	16:33	16:37	3	NULL
water	16:33	0:0	4	NULL
arg	16:39	16:40	3	0
water	16:39	0:0	4	0
arg	16:42	16:60	3	compat_free_buffer
water	16:42	0:0	4	compat_free_buffer
arg	16:62	16:65	3	buf
water	16:62	0:0	4	buf
arg	17:33	17:91	3	(buf->perms&AV_PERM_WRITE)?0:AV_BUFFER_FLAG_READONLY
water	17:33	0:0	4	(
water	17:34	0:0	4	buf
op	17:37	0:0	4	->
water	17:39	0:0	4	perms
op	17:45	0:0	4	&
water	17:47	0:0	4	AV_PERM_WRITE
water	17:60	0:0	4	)
water	17:62	0:0	4	?
water	17:64	0:0	4	0
water	17:66	0:0	4	:
water	17:68	0:0	4	AV_BUFFER_FLAG_READONLY
water	17:92	0:0	2	;
if	18:4	21:4	2	(! dummy_buf)
cond	18:8	18:9	3	! dummy_buf
op	18:8	0:0	4	!
water	18:9	0:0	4	dummy_buf
stmts	18:20	21:4	3	
water	18:20	0:0	4	{
water	19:8	0:0	4	ret
op	19:12	0:0	4	=
call	19:14	19:28	4	AVERROR
arg	19:22	19:28	5	ENOMEM
water	19:22	0:0	6	ENOMEM
water	19:29	0:0	4	;
goto	20:8	20:17	4	fail
water	20:13	0:0	5	fail
water	21:4	0:0	4	}
water	22:4	0:0	2	AV_NOWARN_DEPRECATED
water	22:24	0:0	2	(
water	23:4	0:0	2	if
water	23:7	0:0	2	(
water	23:8	0:0	2	(
water	23:9	0:0	2	ret
op	23:13	0:0	2	=
call	23:15	23:49	2	avfilter_copy_buf_props
arg	23:39	23:44	3	frame
water	23:39	0:0	4	frame
arg	23:46	23:49	3	buf
water	23:46	0:0	4	buf
water	23:50	0:0	2	)
op	23:52	0:0	2	<
water	23:54	0:0	2	0
water	23:55	0:0	2	)
water	24:8	0:0	2	goto
water	24:13	0:0	2	fail
water	24:17	0:0	2	;
water	25:4	0:0	2	)
water	27:0	0:0	2	do
water	27:3	0:0	2	{
water	28:4	0:0	2	AVBufferRef
op	28:16	0:0	2	*
water	28:17	0:0	2	dummy_ref
op	28:27	0:0	2	=
call	28:29	28:52	2	av_buffer_ref
arg	28:43	28:52	3	dummy_buf
water	28:43	0:0	4	dummy_buf
water	28:53	0:0	2	;
water	29:4	0:0	2	if
water	29:7	0:0	2	(
op	29:8	0:0	2	!
water	29:9	0:0	2	dummy_ref
water	29:18	0:0	2	)
water	29:20	0:0	2	{
water	30:8	0:0	2	ret
op	30:12	0:0	2	=
call	30:14	30:28	2	AVERROR
arg	30:22	30:28	3	ENOMEM
water	30:22	0:0	4	ENOMEM
water	30:29	0:0	2	;
water	31:8	0:0	2	goto
water	31:13	0:0	2	fail
water	31:17	0:0	2	;
water	32:4	0:0	2	}
water	33:4	0:0	2	ref_out
op	33:12	0:0	2	=
call	33:14	34:100	2	av_buffer_create
arg	33:31	33:35	3	data
water	33:31	0:0	4	data
arg	33:37	33:46	3	data_size
water	33:37	0:0	4	data_size
arg	33:48	33:67	3	compat_unref_buffer
water	33:48	0:0	4	compat_unref_buffer
arg	34:31	34:40	3	dummy_ref
water	34:31	0:0	4	dummy_ref
arg	34:42	34:100	3	(buf->perms&AV_PERM_WRITE)?0:AV_BUFFER_FLAG_READONLY
water	34:42	0:0	4	(
water	34:43	0:0	4	buf
op	34:46	0:0	4	->
water	34:48	0:0	4	perms
op	34:54	0:0	4	&
water	34:56	0:0	4	AV_PERM_WRITE
water	34:69	0:0	4	)
water	34:71	0:0	4	?
water	34:73	0:0	4	0
water	34:75	0:0	4	:
water	34:77	0:0	4	AV_BUFFER_FLAG_READONLY
water	34:101	0:0	2	;
water	35:4	0:0	2	if
water	35:7	0:0	2	(
op	35:8	0:0	2	!
water	35:9	0:0	2	ref_out
water	35:16	0:0	2	)
water	35:18	0:0	2	{
call	36:8	36:34	2	av_buffer_unref
arg	36:24	36:34	3	&dummy_ref
op	36:24	0:0	4	&
water	36:25	0:0	4	dummy_ref
water	36:35	0:0	2	;
call	37:8	37:28	2	av_frame_unref
arg	37:23	37:28	3	frame
water	37:23	0:0	4	frame
water	37:29	0:0	2	;
water	38:8	0:0	2	ret
op	38:12	0:0	2	=
call	38:14	38:28	2	AVERROR
arg	38:22	38:28	3	ENOMEM
water	38:22	0:0	4	ENOMEM
water	38:29	0:0	2	;
water	39:8	0:0	2	goto
water	39:13	0:0	2	fail
water	39:17	0:0	2	;
water	40:4	0:0	2	}
water	41:0	0:0	2	}
water	41:2	0:0	2	while
water	41:8	0:0	2	(
water	41:9	0:0	2	0
water	41:10	0:0	2	)
water	42:4	0:0	2	if
water	42:7	0:0	2	(
water	42:8	0:0	2	ctx
op	42:11	0:0	2	->
water	42:13	0:0	2	outputs
op	42:20	0:0	2	[
water	42:21	0:0	2	0
op	42:22	0:0	2	]
op	42:23	0:0	2	->
water	42:25	0:0	2	type
op	42:31	0:0	2	==
water	42:34	0:0	2	AVMEDIA_TYPE_VIDEO
water	42:52	0:0	2	)
water	42:54	0:0	2	{
water	43:8	0:0	2	const
water	43:14	0:0	2	AVPixFmtDescriptor
op	43:33	0:0	2	*
water	43:34	0:0	2	desc
op	43:39	0:0	2	=
call	43:41	43:74	2	av_pix_fmt_desc_get
arg	43:61	43:74	3	frame->format
water	43:61	0:0	4	frame
op	43:66	0:0	4	->
water	43:68	0:0	4	format
water	43:75	0:0	2	;
water	44:8	0:0	2	planes
op	44:15	0:0	2	=
call	44:17	44:54	2	av_pix_fmt_count_planes
arg	44:41	44:54	3	frame->format
water	44:41	0:0	4	frame
op	44:46	0:0	4	->
water	44:48	0:0	4	format
water	44:55	0:0	2	;
water	45:8	0:0	2	if
water	45:11	0:0	2	(
op	45:12	0:0	2	!
water	45:13	0:0	2	desc
op	45:18	0:0	2	||
water	45:21	0:0	2	planes
op	45:28	0:0	2	<=
water	45:31	0:0	2	0
water	45:32	0:0	2	)
water	45:34	0:0	2	{
water	46:12	0:0	2	ret
op	46:16	0:0	2	=
call	46:18	46:32	2	AVERROR
arg	46:26	46:32	3	EINVAL
water	46:26	0:0	4	EINVAL
water	46:33	0:0	2	;
water	47:12	0:0	2	goto
water	47:17	0:0	2	fail
water	47:21	0:0	2	;
water	48:8	0:0	2	}
water	49:8	0:0	2	for
water	49:12	0:0	2	(
water	49:13	0:0	2	i
op	49:15	0:0	2	=
water	49:17	0:0	2	0
water	49:18	0:0	2	;
water	49:20	0:0	2	i
op	49:22	0:0	2	<
water	49:24	0:0	2	planes
water	49:30	0:0	2	;
water	49:32	0:0	2	i
op	49:33	0:0	2	++
water	49:35	0:0	2	)
water	49:37	0:0	2	{
water	50:12	0:0	2	int
water	50:16	0:0	2	v_shift
op	50:27	0:0	2	=
water	50:29	0:0	2	(
water	50:30	0:0	2	i
op	50:32	0:0	2	==
water	50:35	0:0	2	1
op	50:37	0:0	2	||
water	50:40	0:0	2	i
op	50:42	0:0	2	==
water	50:45	0:0	2	2
water	50:46	0:0	2	)
water	50:48	0:0	2	?
water	50:50	0:0	2	desc
op	50:54	0:0	2	->
water	50:56	0:0	2	log2_chroma_h
water	50:70	0:0	2	:
water	50:72	0:0	2	0
water	50:73	0:0	2	;
water	51:12	0:0	2	int
water	51:16	0:0	2	plane_size
op	51:27	0:0	2	=
water	51:29	0:0	2	(
water	51:30	0:0	2	frame
op	51:35	0:0	2	->
water	51:37	0:0	2	height
op	51:44	0:0	2	>>
water	51:47	0:0	2	v_shift
water	51:54	0:0	2	)
op	51:56	0:0	2	*
water	51:58	0:0	2	frame
op	51:63	0:0	2	->
water	51:65	0:0	2	linesize
op	51:73	0:0	2	[
water	51:74	0:0	2	i
op	51:75	0:0	2	]
water	51:76	0:0	2	;
call	52:12	52:64	2	WRAP_PLANE
arg	52:23	52:36	3	frame->buf[i]
water	52:23	0:0	4	frame
op	52:28	0:0	4	->
water	52:30	0:0	4	buf
op	52:33	0:0	4	[
water	52:34	0:0	4	i
op	52:35	0:0	4	]
arg	52:38	52:52	3	frame->data[i]
water	52:38	0:0	4	frame
op	52:43	0:0	4	->
water	52:45	0:0	4	data
op	52:49	0:0	4	[
water	52:50	0:0	4	i
op	52:51	0:0	4	]
arg	52:54	52:64	3	plane_size
water	52:54	0:0	4	plane_size
water	52:65	0:0	2	;
water	53:8	0:0	2	}
water	54:4	0:0	2	}
water	54:6	0:0	2	else
water	54:11	0:0	2	{
water	55:8	0:0	2	int
water	55:12	0:0	2	planar
op	55:19	0:0	2	=
call	55:21	55:58	2	av_sample_fmt_is_planar
arg	55:45	55:58	3	frame->format
water	55:45	0:0	4	frame
op	55:50	0:0	4	->
water	55:52	0:0	4	format
water	55:59	0:0	2	;
water	56:8	0:0	2	int
water	56:12	0:0	2	channels
op	56:21	0:0	2	=
call	56:23	56:78	2	av_get_channel_layout_nb_channels
arg	56:57	56:78	3	frame->channel_layout
water	56:57	0:0	4	frame
op	56:62	0:0	4	->
water	56:64	0:0	4	channel_layout
water	56:79	0:0	2	;
water	57:8	0:0	2	planes
op	57:15	0:0	2	=
water	57:17	0:0	2	planar
water	57:24	0:0	2	?
water	57:26	0:0	2	channels
water	57:35	0:0	2	:
water	57:37	0:0	2	1
water	57:38	0:0	2	;
water	58:8	0:0	2	if
water	58:11	0:0	2	(
water	58:12	0:0	2	planes
op	58:19	0:0	2	>
call	58:21	58:46	2	FF_ARRAY_ELEMS
arg	58:36	58:46	3	frame->buf
water	58:36	0:0	4	frame
op	58:41	0:0	4	->
water	58:43	0:0	4	buf
water	58:47	0:0	2	)
water	58:49	0:0	2	{
water	59:12	0:0	2	frame
op	59:17	0:0	2	->
water	59:19	0:0	2	nb_extended_buf
op	59:35	0:0	2	=
water	59:37	0:0	2	planes
op	59:44	0:0	2	-
call	59:46	59:71	2	FF_ARRAY_ELEMS
arg	59:61	59:71	3	frame->buf
water	59:61	0:0	4	frame
op	59:66	0:0	4	->
water	59:68	0:0	4	buf
water	59:72	0:0	2	;
water	60:12	0:0	2	frame
op	60:17	0:0	2	->
water	60:19	0:0	2	extended_buf
op	60:32	0:0	2	=
call	60:34	61:67	2	av_mallocz_array
arg	60:51	60:79	3	sizeof(*frame->extended_buf)
op	60:51	0:0	4	sizeof
water	60:57	0:0	4	(
op	60:58	0:0	4	*
water	60:59	0:0	4	frame
op	60:64	0:0	4	->
water	60:66	0:0	4	extended_buf
water	60:78	0:0	4	)
arg	61:45	61:67	3	frame->nb_extended_buf
water	61:45	0:0	4	frame
op	61:50	0:0	4	->
water	61:52	0:0	4	nb_extended_buf
water	61:68	0:0	2	;
water	62:12	0:0	2	if
water	62:15	0:0	2	(
op	62:16	0:0	2	!
water	62:17	0:0	2	frame
op	62:22	0:0	2	->
water	62:24	0:0	2	extended_buf
water	62:36	0:0	2	)
water	62:38	0:0	2	{
water	63:16	0:0	2	ret
op	63:20	0:0	2	=
call	63:22	63:36	2	AVERROR
arg	63:30	63:36	3	ENOMEM
water	63:30	0:0	4	ENOMEM
water	63:37	0:0	2	;
water	64:16	0:0	2	goto
water	64:21	0:0	2	fail
water	64:25	0:0	2	;
water	65:12	0:0	2	}
water	66:8	0:0	2	}
water	67:8	0:0	2	for
water	67:12	0:0	2	(
water	67:13	0:0	2	i
op	67:15	0:0	2	=
water	67:17	0:0	2	0
water	67:18	0:0	2	;
water	67:20	0:0	2	i
op	67:22	0:0	2	<
call	67:24	67:64	2	FFMIN
arg	67:30	67:36	3	planes
water	67:30	0:0	4	planes
arg	67:38	67:64	3	FF_ARRAY_ELEMS(frame->buf)
call	67:38	67:63	4	FF_ARRAY_ELEMS
arg	67:53	67:63	5	frame->buf
water	67:53	0:0	6	frame
op	67:58	0:0	6	->
water	67:60	0:0	6	buf
water	67:65	0:0	2	;
water	67:67	0:0	2	i
op	67:68	0:0	2	++
water	67:70	0:0	2	)
call	68:12	68:81	2	WRAP_PLANE
arg	68:23	68:36	3	frame->buf[i]
water	68:23	0:0	4	frame
op	68:28	0:0	4	->
water	68:30	0:0	4	buf
op	68:33	0:0	4	[
water	68:34	0:0	4	i
op	68:35	0:0	4	]
arg	68:38	68:61	3	frame->extended_data[i]
water	68:38	0:0	4	frame
op	68:43	0:0	4	->
water	68:45	0:0	4	extended_data
op	68:58	0:0	4	[
water	68:59	0:0	4	i
op	68:60	0:0	4	]
arg	68:63	68:81	3	frame->linesize[0]
water	68:63	0:0	4	frame
op	68:68	0:0	4	->
water	68:70	0:0	4	linesize
op	68:78	0:0	4	[
water	68:79	0:0	4	0
op	68:80	0:0	4	]
water	68:82	0:0	2	;
water	69:8	0:0	2	for
water	69:12	0:0	2	(
water	69:13	0:0	2	i
op	69:15	0:0	2	=
water	69:17	0:0	2	0
water	69:18	0:0	2	;
water	69:20	0:0	2	i
op	69:22	0:0	2	<
water	69:24	0:0	2	planes
op	69:31	0:0	2	-
call	69:33	69:58	2	FF_ARRAY_ELEMS
arg	69:48	69:58	3	frame->buf
water	69:48	0:0	4	frame
op	69:53	0:0	4	->
water	69:55	0:0	4	buf
water	69:59	0:0	2	;
water	69:61	0:0	2	i
op	69:62	0:0	2	++
water	69:64	0:0	2	)
call	70:12	72:41	2	WRAP_PLANE
arg	70:23	70:45	3	frame->extended_buf[i]
water	70:23	0:0	4	frame
op	70:28	0:0	4	->
water	70:30	0:0	4	extended_buf
op	70:42	0:0	4	[
water	70:43	0:0	4	i
op	70:44	0:0	4	]
arg	71:23	71:75	3	frame->extended_data[i+FF_ARRAY_ELEMS(frame->buf)]
water	71:23	0:0	4	frame
op	71:28	0:0	4	->
water	71:30	0:0	4	extended_data
op	71:43	0:0	4	[
water	71:44	0:0	4	i
op	71:46	0:0	4	+
call	71:48	71:73	4	FF_ARRAY_ELEMS
arg	71:63	71:73	5	frame->buf
water	71:63	0:0	6	frame
op	71:68	0:0	6	->
water	71:70	0:0	6	buf
op	71:74	0:0	4	]
arg	72:23	72:41	3	frame->linesize[0]
water	72:23	0:0	4	frame
op	72:28	0:0	4	->
water	72:30	0:0	4	linesize
op	72:38	0:0	4	[
water	72:39	0:0	4	0
op	72:40	0:0	4	]
water	72:42	0:0	2	;
water	73:4	0:0	2	}
water	74:4	0:0	2	ret
op	74:8	0:0	2	=
call	74:10	74:56	2	av_buffersrc_add_frame_flags
arg	74:39	74:42	3	ctx
water	74:39	0:0	4	ctx
arg	74:44	74:49	3	frame
water	74:44	0:0	4	frame
arg	74:51	74:56	3	flags
water	74:51	0:0	4	flags
water	74:57	0:0	2	;
label	75:0	75:4	2	fail :
call	76:4	76:30	2	av_buffer_unref
arg	76:20	76:30	3	&dummy_buf
op	76:20	0:0	4	&
water	76:21	0:0	4	dummy_buf
water	76:31	0:0	2	;
call	77:4	77:24	2	av_frame_free
arg	77:18	77:24	3	&frame
op	77:18	0:0	4	&
water	77:19	0:0	4	frame
water	77:25	0:0	2	;
return	78:4	78:14	2	ret
water	78:11	0:0	3	ret

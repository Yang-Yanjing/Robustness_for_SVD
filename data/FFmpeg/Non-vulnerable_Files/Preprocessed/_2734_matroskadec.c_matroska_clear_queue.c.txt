func	1:0	13:0	0	static void	matroska_clear_queue
params	1:32	0:0	1	
param	1:33	1:63	2	MatroskaDemuxContext *	matroska
stmnts	3:4	12:4	1	
water	3:4	0:0	2	matroska
op	3:12	0:0	2	->
water	3:14	0:0	2	prev_pkt
op	3:23	0:0	2	=
water	3:25	0:0	2	NULL
water	3:29	0:0	2	;
if	4:4	12:4	2	(matroska -> packets)
cond	4:8	4:18	3	matroska -> packets
water	4:8	0:0	4	matroska
op	4:16	0:0	4	->
water	4:18	0:0	4	packets
stmts	4:27	12:4	3	
water	4:27	0:0	4	{
decl	5:8	5:13	4	int	n
for	6:8	9:8	4	(n = 0 ;n < matroska -> num_packets;n ++)
forinit	6:13	6:18	5	n = 0 ;
water	6:13	0:0	6	n
op	6:15	0:0	6	=
water	6:17	0:0	6	0
water	6:18	0:0	6	;
cond	6:20	6:34	5	n < matroska -> num_packets
water	6:20	0:0	6	n
op	6:22	0:0	6	<
water	6:24	0:0	6	matroska
op	6:32	0:0	6	->
water	6:34	0:0	6	num_packets
forexpr	6:47	6:48	5	n ++
water	6:47	0:0	6	n
op	6:48	0:0	6	++
stmts	6:52	9:8	5	
water	6:52	0:0	6	{
call	7:12	7:47	6	av_free_packet
arg	7:27	7:47	7	matroska->packets[n]
water	7:27	0:0	8	matroska
op	7:35	0:0	8	->
water	7:37	0:0	8	packets
op	7:44	0:0	8	[
water	7:45	0:0	8	n
op	7:46	0:0	8	]
water	7:48	0:0	6	;
call	8:12	8:42	6	av_freep
arg	8:21	8:42	7	&matroska->packets[n]
op	8:21	0:0	8	&
water	8:22	0:0	8	matroska
op	8:30	0:0	8	->
water	8:32	0:0	8	packets
op	8:39	0:0	8	[
water	8:40	0:0	8	n
op	8:41	0:0	8	]
water	8:43	0:0	6	;
water	9:8	0:0	6	}
call	10:8	10:35	4	av_freep
arg	10:17	10:35	5	&matroska->packets
op	10:17	0:0	6	&
water	10:18	0:0	6	matroska
op	10:26	0:0	6	->
water	10:28	0:0	6	packets
water	10:36	0:0	4	;
water	11:8	0:0	4	matroska
op	11:16	0:0	4	->
water	11:18	0:0	4	num_packets
op	11:30	0:0	4	=
water	11:32	0:0	4	0
water	11:33	0:0	4	;
water	12:4	0:0	4	}

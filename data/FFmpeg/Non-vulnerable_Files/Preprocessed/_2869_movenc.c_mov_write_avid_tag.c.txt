func	1:0	65:0	0	static int	mov_write_avid_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	64:12	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:18	2	int	interlaced
decl	5:4	5:11	2	int	cid
if	6:4	19:4	2	(track -> vos_data && track -> vos_len > 0 x29)
cond	6:8	6:45	3	track -> vos_data && track -> vos_len > 0 x29
water	6:8	0:0	4	track
op	6:13	0:0	4	->
water	6:15	0:0	4	vos_data
op	6:24	0:0	4	&&
water	6:27	0:0	4	track
op	6:32	0:0	4	->
water	6:34	0:0	4	vos_len
op	6:42	0:0	4	>
water	6:44	0:0	4	0
water	6:45	0:0	4	x29
stmts	6:50	19:4	3	
water	6:50	0:0	4	{
if	7:8	15:8	4	(track -> vos_data [ 0 ] == 0 x00 && track -> vos_data [ 1 ] == 0 x00 && track -> vos_data [ 2 ] == 0 x02 && track -> vos_data [ 3 ] == 0 x80 && ( track -> vos_data [ 4 ] == 0 x01 || track -> vos_data [ 4 ] == 0 x02 ))
cond	7:12	11:69	5	track -> vos_data [ 0 ] == 0 x00 && track -> vos_data [ 1 ] == 0 x00 && track -> vos_data [ 2 ] == 0 x02 && track -> vos_data [ 3 ] == 0 x80 && ( track -> vos_data [ 4 ] == 0 x01 || track -> vos_data [ 4 ] == 0 x02 )
water	7:12	0:0	6	track
op	7:17	0:0	6	->
water	7:19	0:0	6	vos_data
op	7:27	0:0	6	[
water	7:28	0:0	6	0
op	7:29	0:0	6	]
op	7:31	0:0	6	==
water	7:34	0:0	6	0
water	7:35	0:0	6	x00
op	7:39	0:0	6	&&
water	8:12	0:0	6	track
op	8:17	0:0	6	->
water	8:19	0:0	6	vos_data
op	8:27	0:0	6	[
water	8:28	0:0	6	1
op	8:29	0:0	6	]
op	8:31	0:0	6	==
water	8:34	0:0	6	0
water	8:35	0:0	6	x00
op	8:39	0:0	6	&&
water	9:12	0:0	6	track
op	9:17	0:0	6	->
water	9:19	0:0	6	vos_data
op	9:27	0:0	6	[
water	9:28	0:0	6	2
op	9:29	0:0	6	]
op	9:31	0:0	6	==
water	9:34	0:0	6	0
water	9:35	0:0	6	x02
op	9:39	0:0	6	&&
water	10:12	0:0	6	track
op	10:17	0:0	6	->
water	10:19	0:0	6	vos_data
op	10:27	0:0	6	[
water	10:28	0:0	6	3
op	10:29	0:0	6	]
op	10:31	0:0	6	==
water	10:34	0:0	6	0
water	10:35	0:0	6	x80
op	10:39	0:0	6	&&
water	11:12	0:0	6	(
water	11:13	0:0	6	track
op	11:18	0:0	6	->
water	11:20	0:0	6	vos_data
op	11:28	0:0	6	[
water	11:29	0:0	6	4
op	11:30	0:0	6	]
op	11:32	0:0	6	==
water	11:35	0:0	6	0
water	11:36	0:0	6	x01
op	11:40	0:0	6	||
water	11:43	0:0	6	track
op	11:48	0:0	6	->
water	11:50	0:0	6	vos_data
op	11:58	0:0	6	[
water	11:59	0:0	6	4
op	11:60	0:0	6	]
op	11:62	0:0	6	==
water	11:65	0:0	6	0
water	11:66	0:0	6	x02
water	11:69	0:0	6	)
stmts	11:72	15:8	5	
water	11:72	0:0	6	{
water	13:12	0:0	6	interlaced
op	13:23	0:0	6	=
water	13:25	0:0	6	(
water	13:26	0:0	6	track
op	13:31	0:0	6	->
water	13:33	0:0	6	vos_data
op	13:41	0:0	6	[
water	13:42	0:0	6	5
op	13:43	0:0	6	]
op	13:45	0:0	6	&
water	13:47	0:0	6	2
water	13:48	0:0	6	)
water	13:49	0:0	6	;
water	14:12	0:0	6	cid
op	14:16	0:0	6	=
call	14:18	14:48	6	AV_RB32
arg	14:26	14:48	7	track->vos_data+0x28
water	14:26	0:0	8	track
op	14:31	0:0	8	->
water	14:33	0:0	8	vos_data
op	14:42	0:0	8	+
water	14:44	0:0	8	0
water	14:45	0:0	8	x28
water	14:49	0:0	6	;
water	15:8	0:0	6	}
else	15:10	18:8	4
stmts	15:15	18:8	5	
water	15:15	0:0	6	{
call	16:12	16:90	6	av_log
arg	16:19	16:23	7	NULL
water	16:19	0:0	8	NULL
arg	16:25	16:39	7	AV_LOG_WARNING
water	16:25	0:0	8	AV_LOG_WARNING
arg	16:41	16:90	7	"Could not locate DNxHD bit stream in vos_data\n"
water	16:41	0:0	8	"Could not locate DNxHD bit stream in vos_data\n"
water	16:91	0:0	6	;
return	17:12	17:20	6	0
water	17:19	0:0	7	0
water	18:8	0:0	6	}
water	19:4	0:0	4	}
else	19:6	22:4	2
stmts	19:11	22:4	3	
water	19:11	0:0	4	{
call	20:8	20:94	4	av_log
arg	20:15	20:19	5	NULL
water	20:15	0:0	6	NULL
arg	20:21	20:35	5	AV_LOG_WARNING
water	20:21	0:0	6	AV_LOG_WARNING
arg	20:37	20:94	5	"Could not locate DNxHD bit stream, vos_data too small\n"
water	20:37	0:0	6	"Could not locate DNxHD bit stream, vos_data too small\n"
water	20:95	0:0	4	;
return	21:8	21:16	4	0
water	21:15	0:0	5	0
water	22:4	0:0	4	}
call	23:4	23:20	2	avio_wb32
arg	23:14	23:16	3	pb
water	23:14	0:0	4	pb
arg	23:18	23:20	3	24
water	23:18	0:0	4	24
water	23:21	0:0	2	;
call	24:4	24:27	2	ffio_wfourcc
arg	24:17	24:19	3	pb
water	24:17	0:0	4	pb
arg	24:21	24:27	3	"ACLR"
water	24:21	0:0	4	"ACLR"
water	24:28	0:0	2	;
call	25:4	25:27	2	ffio_wfourcc
arg	25:17	25:19	3	pb
water	25:17	0:0	4	pb
arg	25:21	25:27	3	"ACLR"
water	25:21	0:0	4	"ACLR"
water	25:28	0:0	2	;
call	26:4	26:27	2	ffio_wfourcc
arg	26:17	26:19	3	pb
water	26:17	0:0	4	pb
arg	26:21	26:27	3	"0001"
water	26:21	0:0	4	"0001"
water	26:28	0:0	2	;
if	27:4	30:4	2	(track -> enc -> color_range == AVCOL_RANGE_MPEG || track -> enc -> color_range == AVCOL_RANGE_UNSPECIFIED)
cond	27:8	28:35	3	track -> enc -> color_range == AVCOL_RANGE_MPEG || track -> enc -> color_range == AVCOL_RANGE_UNSPECIFIED
water	27:8	0:0	4	track
op	27:13	0:0	4	->
water	27:15	0:0	4	enc
op	27:18	0:0	4	->
water	27:20	0:0	4	color_range
op	27:32	0:0	4	==
water	27:35	0:0	4	AVCOL_RANGE_MPEG
op	27:52	0:0	4	||
water	28:8	0:0	4	track
op	28:13	0:0	4	->
water	28:15	0:0	4	enc
op	28:18	0:0	4	->
water	28:20	0:0	4	color_range
op	28:32	0:0	4	==
water	28:35	0:0	4	AVCOL_RANGE_UNSPECIFIED
stmts	28:60	30:4	3	
water	28:60	0:0	4	{
call	29:8	29:23	4	avio_wb32
arg	29:18	29:20	5	pb
water	29:18	0:0	6	pb
arg	29:22	29:23	5	1
water	29:22	0:0	6	1
water	29:24	0:0	4	;
water	30:4	0:0	4	}
else	30:6	32:4	2
stmts	30:11	32:4	3	
water	30:11	0:0	4	{
call	31:8	31:23	4	avio_wb32
arg	31:18	31:20	5	pb
water	31:18	0:0	6	pb
arg	31:22	31:23	5	2
water	31:22	0:0	6	2
water	31:24	0:0	4	;
water	32:4	0:0	4	}
call	33:4	33:19	2	avio_wb32
arg	33:14	33:16	3	pb
water	33:14	0:0	4	pb
arg	33:18	33:19	3	0
water	33:18	0:0	4	0
water	33:20	0:0	2	;
call	34:4	34:20	2	avio_wb32
arg	34:14	34:16	3	pb
water	34:14	0:0	4	pb
arg	34:18	34:20	3	24
water	34:18	0:0	4	24
water	34:21	0:0	2	;
call	35:4	35:27	2	ffio_wfourcc
arg	35:17	35:19	3	pb
water	35:17	0:0	4	pb
arg	35:21	35:27	3	"APRG"
water	35:21	0:0	4	"APRG"
water	35:28	0:0	2	;
call	36:4	36:27	2	ffio_wfourcc
arg	36:17	36:19	3	pb
water	36:17	0:0	4	pb
arg	36:21	36:27	3	"APRG"
water	36:21	0:0	4	"APRG"
water	36:28	0:0	2	;
call	37:4	37:27	2	ffio_wfourcc
arg	37:17	37:19	3	pb
water	37:17	0:0	4	pb
arg	37:21	37:27	3	"0001"
water	37:21	0:0	4	"0001"
water	37:28	0:0	2	;
call	38:4	38:19	2	avio_wb32
arg	38:14	38:16	3	pb
water	38:14	0:0	4	pb
arg	38:18	38:19	3	1
water	38:18	0:0	4	1
water	38:20	0:0	2	;
call	39:4	39:19	2	avio_wb32
arg	39:14	39:16	3	pb
water	39:14	0:0	4	pb
arg	39:18	39:19	3	0
water	39:18	0:0	4	0
water	39:20	0:0	2	;
call	40:4	40:21	2	avio_wb32
arg	40:14	40:16	3	pb
water	40:14	0:0	4	pb
arg	40:18	40:21	3	120
water	40:18	0:0	4	120
water	40:22	0:0	2	;
call	41:4	41:27	2	ffio_wfourcc
arg	41:17	41:19	3	pb
water	41:17	0:0	4	pb
arg	41:21	41:27	3	"ARES"
water	41:21	0:0	4	"ARES"
water	41:28	0:0	2	;
call	42:4	42:27	2	ffio_wfourcc
arg	42:17	42:19	3	pb
water	42:17	0:0	4	pb
arg	42:21	42:27	3	"ARES"
water	42:21	0:0	4	"ARES"
water	42:28	0:0	2	;
call	43:4	43:27	2	ffio_wfourcc
arg	43:17	43:19	3	pb
water	43:17	0:0	4	pb
arg	43:21	43:27	3	"0001"
water	43:21	0:0	4	"0001"
water	43:28	0:0	2	;
call	44:4	44:21	2	avio_wb32
arg	44:14	44:16	3	pb
water	44:14	0:0	4	pb
arg	44:18	44:21	3	cid
water	44:18	0:0	4	cid
water	44:22	0:0	2	;
call	45:4	45:35	2	avio_wb32
arg	45:14	45:16	3	pb
water	45:14	0:0	4	pb
arg	45:18	45:35	3	track->enc->width
water	45:18	0:0	4	track
op	45:23	0:0	4	->
water	45:25	0:0	4	enc
op	45:28	0:0	4	->
water	45:30	0:0	4	width
water	45:36	0:0	2	;
if	47:4	52:4	2	(interlaced)
cond	47:8	47:8	3	interlaced
water	47:8	0:0	4	interlaced
stmts	47:20	52:4	3	
water	47:20	0:0	4	{
call	48:8	48:44	4	avio_wb32
arg	48:18	48:20	5	pb
water	48:18	0:0	6	pb
arg	48:22	48:44	5	track->enc->height/2
water	48:22	0:0	6	track
op	48:27	0:0	6	->
water	48:29	0:0	6	enc
op	48:32	0:0	6	->
water	48:34	0:0	6	height
op	48:41	0:0	6	/
water	48:43	0:0	6	2
water	48:45	0:0	4	;
call	49:8	49:23	4	avio_wb32
arg	49:18	49:20	5	pb
water	49:18	0:0	6	pb
arg	49:22	49:23	5	2
water	49:22	0:0	6	2
water	49:24	0:0	4	;
call	50:8	50:23	4	avio_wb32
arg	50:18	50:20	5	pb
water	50:18	0:0	6	pb
arg	50:22	50:23	5	0
water	50:22	0:0	6	0
water	50:24	0:0	4	;
call	51:8	51:23	4	avio_wb32
arg	51:18	51:20	5	pb
water	51:18	0:0	6	pb
arg	51:22	51:23	5	4
water	51:22	0:0	6	4
water	51:24	0:0	4	;
water	52:4	0:0	4	}
else	52:6	60:4	2
stmts	52:11	60:4	3	
water	52:11	0:0	4	{
call	53:8	53:40	4	avio_wb32
arg	53:18	53:20	5	pb
water	53:18	0:0	6	pb
arg	53:22	53:40	5	track->enc->height
water	53:22	0:0	6	track
op	53:27	0:0	6	->
water	53:29	0:0	6	enc
op	53:32	0:0	6	->
water	53:34	0:0	6	height
water	53:41	0:0	4	;
call	54:8	54:23	4	avio_wb32
arg	54:18	54:20	5	pb
water	54:18	0:0	6	pb
arg	54:22	54:23	5	1
water	54:22	0:0	6	1
water	54:24	0:0	4	;
call	55:8	55:23	4	avio_wb32
arg	55:18	55:20	5	pb
water	55:18	0:0	6	pb
arg	55:22	55:23	5	0
water	55:22	0:0	6	0
water	55:24	0:0	4	;
if	56:8	57:28	4	(track -> enc -> height == 1080)
cond	56:12	56:34	5	track -> enc -> height == 1080
water	56:12	0:0	6	track
op	56:17	0:0	6	->
water	56:19	0:0	6	enc
op	56:22	0:0	6	->
water	56:24	0:0	6	height
op	56:31	0:0	6	==
water	56:34	0:0	6	1080
stmts	57:12	57:28	5	
call	57:12	57:27	6	avio_wb32
arg	57:22	57:24	7	pb
water	57:22	0:0	8	pb
arg	57:26	57:27	7	5
water	57:26	0:0	8	5
water	57:28	0:0	6	;
else	58:8	59:28	4
stmts	59:12	59:28	5	
call	59:12	59:27	6	avio_wb32
arg	59:22	59:24	7	pb
water	59:22	0:0	8	pb
arg	59:26	59:27	7	6
water	59:26	0:0	8	6
water	59:28	0:0	6	;
water	60:4	0:0	4	}
for	62:4	63:24	2	(i = 0 ;i < 10;i ++)
forinit	62:9	62:14	3	i = 0 ;
water	62:9	0:0	4	i
op	62:11	0:0	4	=
water	62:13	0:0	4	0
water	62:14	0:0	4	;
cond	62:16	62:20	3	i < 10
water	62:16	0:0	4	i
op	62:18	0:0	4	<
water	62:20	0:0	4	10
forexpr	62:24	62:25	3	i ++
water	62:24	0:0	4	i
op	62:25	0:0	4	++
stmts	63:8	63:24	3	
call	63:8	63:23	4	avio_wb64
arg	63:18	63:20	5	pb
water	63:18	0:0	6	pb
arg	63:22	63:23	5	0
water	63:22	0:0	6	0
water	63:24	0:0	4	;
return	64:4	64:12	2	0
water	64:11	0:0	3	0

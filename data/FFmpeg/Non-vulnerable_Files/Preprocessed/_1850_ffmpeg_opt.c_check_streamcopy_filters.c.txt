func	1:0	13:0	0	static void	check_streamcopy_filters
params	1:36	0:0	1	
param	1:37	1:54	2	OptionsContext *	o
param	1:56	1:75	2	AVFormatContext *	oc
param	2:37	2:60	2	const OutputStream *	ost
param	2:62	2:83	2	enum AVMediaType	type
stmnts	4:4	12:4	1	
if	4:4	12:4	2	(ost -> filters_script || ost -> filters)
cond	4:8	4:36	3	ost -> filters_script || ost -> filters
water	4:8	0:0	4	ost
op	4:11	0:0	4	->
water	4:13	0:0	4	filters_script
op	4:28	0:0	4	||
water	4:31	0:0	4	ost
op	4:34	0:0	4	->
water	4:36	0:0	4	filters
stmts	4:45	12:4	3	
water	4:45	0:0	4	{
call	5:8	10:74	4	av_log
arg	5:15	5:19	5	NULL
water	5:15	0:0	6	NULL
arg	5:21	5:33	5	AV_LOG_ERROR
water	5:21	0:0	6	AV_LOG_ERROR
arg	6:15	7:68	5	"%s '%s' was defined for %s output stream %d:%d but codec copy was selected.\n""Filtering and streamcopy cannot be used together.\n"
water	6:15	0:0	6	"%s '%s' was defined for %s output stream %d:%d but codec copy was selected.\n"
water	7:15	0:0	6	"Filtering and streamcopy cannot be used together.\n"
arg	8:15	8:66	5	ost->filters?"Filtergraph":"Filtergraph script"
water	8:15	0:0	6	ost
op	8:18	0:0	6	->
water	8:20	0:0	6	filters
water	8:28	0:0	6	?
water	8:30	0:0	6	"Filtergraph"
water	8:44	0:0	6	:
water	8:46	0:0	6	"Filtergraph script"
arg	9:15	9:64	5	ost->filters?ost->filters:ost->filters_script
water	9:15	0:0	6	ost
op	9:18	0:0	6	->
water	9:20	0:0	6	filters
water	9:28	0:0	6	?
water	9:30	0:0	6	ost
op	9:33	0:0	6	->
water	9:35	0:0	6	filters
water	9:43	0:0	6	:
water	9:45	0:0	6	ost
op	9:48	0:0	6	->
water	9:50	0:0	6	filters_script
arg	10:15	10:45	5	av_get_media_type_string(type)
call	10:15	10:44	6	av_get_media_type_string
arg	10:40	10:44	7	type
water	10:40	0:0	8	type
arg	10:47	10:62	5	ost->file_index
water	10:47	0:0	6	ost
op	10:50	0:0	6	->
water	10:52	0:0	6	file_index
arg	10:64	10:74	5	ost->index
water	10:64	0:0	6	ost
op	10:67	0:0	6	->
water	10:69	0:0	6	index
water	10:75	0:0	4	;
call	11:8	11:22	4	exit_program
arg	11:21	11:22	5	1
water	11:21	0:0	6	1
water	11:23	0:0	4	;
water	12:4	0:0	4	}

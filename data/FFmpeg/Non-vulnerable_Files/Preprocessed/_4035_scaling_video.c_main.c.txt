func	1:0	78:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	77:18	1	
decl	3:4	3:38	2	uint8_t	*src_data[4]
water	3:24	0:0	2	,
decl	3:4	3:38	2	uint8_t	*dst_data[4]
decl	4:4	4:40	2	int	src_linesize[4]
water	4:23	0:0	2	,
decl	4:4	4:40	2	int	dst_linesize[4]
decl	5:4	5:46	2	int	src_w
op	5:14	0:0	2	=
water	5:16	0:0	2	320
water	5:19	0:0	2	,
decl	5:4	5:46	2	int	src_h
op	5:27	0:0	2	=
water	5:29	0:0	2	240
water	5:32	0:0	2	,
decl	5:4	5:46	2	int	dst_w
water	5:39	0:0	2	,
decl	5:4	5:46	2	int	dst_h
decl	6:4	6:87	2	enum AVPixelFormat	src_pix_fmt
op	6:35	0:0	2	=
water	6:37	0:0	2	AV_PIX_FMT_YUV420P
water	6:55	0:0	2	,
decl	6:4	6:87	2	enum AVPixelFormat	dst_pix_fmt
op	6:69	0:0	2	=
water	6:71	0:0	2	AV_PIX_FMT_RGB24
decl	7:4	7:31	2	const char	*dst_size
op	7:25	0:0	2	=
water	7:27	0:0	2	NULL
decl	8:4	8:35	2	const char	*dst_filename
op	8:29	0:0	2	=
water	8:31	0:0	2	NULL
decl	9:4	9:18	2	FILE	*dst_file
decl	10:4	10:19	2	int	dst_bufsize
decl	11:4	11:30	2	struct SwsContext	*sws_ctx
decl	12:4	12:14	2	int	i
water	12:9	0:0	2	,
decl	12:4	12:14	2	int	ret
if	13:4	20:4	2	(argc != 3)
cond	13:8	13:16	3	argc != 3
water	13:8	0:0	4	argc
op	13:13	0:0	4	!=
water	13:16	0:0	4	3
stmts	13:19	20:4	3	
water	13:19	0:0	4	{
call	14:8	18:29	4	fprintf
arg	14:16	14:22	5	stderr
water	14:16	0:0	6	stderr
arg	14:24	18:20	5	"Usage: %s output_file output_size\n""API example program to show how to scale an image with libswscale.\n""This program generates a series of pictures, rescales them to the given ""output_size and saves them to an output file named output_file\n.""\n"
water	14:24	0:0	6	"Usage: %s output_file output_size\n"
water	15:16	0:0	6	"API example program to show how to scale an image with libswscale.\n"
water	16:16	0:0	6	"This program generates a series of pictures, rescales them to the given "
water	17:16	0:0	6	"output_size and saves them to an output file named output_file\n."
water	18:16	0:0	6	"\n"
arg	18:22	18:29	5	argv[0]
water	18:22	0:0	6	argv
op	18:26	0:0	6	[
water	18:27	0:0	6	0
op	18:28	0:0	6	]
water	18:30	0:0	4	;
call	19:8	19:14	4	exit
arg	19:13	19:14	5	1
water	19:13	0:0	6	1
water	19:15	0:0	4	;
water	20:4	0:0	4	}
water	21:4	0:0	2	dst_filename
op	21:17	0:0	2	=
water	21:19	0:0	2	argv
op	21:23	0:0	2	[
water	21:24	0:0	2	1
op	21:25	0:0	2	]
water	21:26	0:0	2	;
water	22:4	0:0	2	dst_size
op	22:17	0:0	2	=
water	22:19	0:0	2	argv
op	22:23	0:0	2	[
water	22:24	0:0	2	2
op	22:25	0:0	2	]
water	22:26	0:0	2	;
if	23:4	28:4	2	(av_parse_video_size (& dst_w ,& dst_h ,dst_size ) < 0)
cond	23:8	23:56	3	av_parse_video_size (& dst_w ,& dst_h ,dst_size ) < 0
call	23:8	23:52	4	av_parse_video_size
arg	23:28	23:34	5	&dst_w
op	23:28	0:0	6	&
water	23:29	0:0	6	dst_w
arg	23:36	23:42	5	&dst_h
op	23:36	0:0	6	&
water	23:37	0:0	6	dst_h
arg	23:44	23:52	5	dst_size
water	23:44	0:0	6	dst_size
op	23:54	0:0	4	<
water	23:56	0:0	4	0
stmts	23:59	28:4	3	
water	23:59	0:0	4	{
call	24:8	26:24	4	fprintf
arg	24:16	24:22	5	stderr
water	24:16	0:0	6	stderr
arg	25:16	25:91	5	"Invalid size '%s', must be in the form WxH or a valid size abbreviation\n"
water	25:16	0:0	6	"Invalid size '%s', must be in the form WxH or a valid size abbreviation\n"
arg	26:16	26:24	5	dst_size
water	26:16	0:0	6	dst_size
water	26:25	0:0	4	;
call	27:8	27:14	4	exit
arg	27:13	27:14	5	1
water	27:13	0:0	6	1
water	27:15	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	dst_file
op	29:13	0:0	2	=
call	29:15	29:39	2	fopen
arg	29:21	29:33	3	dst_filename
water	29:21	0:0	4	dst_filename
arg	29:35	29:39	3	"wb"
water	29:35	0:0	4	"wb"
water	29:40	0:0	2	;
if	30:4	33:4	2	(! dst_file)
cond	30:8	30:9	3	! dst_file
op	30:8	0:0	4	!
water	30:9	0:0	4	dst_file
stmts	30:19	33:4	3	
water	30:19	0:0	4	{
call	31:8	31:76	4	fprintf
arg	31:16	31:22	5	stderr
water	31:16	0:0	6	stderr
arg	31:24	31:62	5	"Could not open destination file %s\n"
water	31:24	0:0	6	"Could not open destination file %s\n"
arg	31:64	31:76	5	dst_filename
water	31:64	0:0	6	dst_filename
water	31:77	0:0	4	;
call	32:8	32:14	4	exit
arg	32:13	32:14	5	1
water	32:13	0:0	6	1
water	32:15	0:0	4	;
water	33:4	0:0	4	}
water	35:4	0:0	2	sws_ctx
op	35:12	0:0	2	=
call	35:14	37:59	2	sws_getContext
arg	35:29	35:34	3	src_w
water	35:29	0:0	4	src_w
arg	35:36	35:41	3	src_h
water	35:36	0:0	4	src_h
arg	35:43	35:54	3	src_pix_fmt
water	35:43	0:0	4	src_pix_fmt
arg	36:29	36:34	3	dst_w
water	36:29	0:0	4	dst_w
arg	36:36	36:41	3	dst_h
water	36:36	0:0	4	dst_h
arg	36:43	36:54	3	dst_pix_fmt
water	36:43	0:0	4	dst_pix_fmt
arg	37:29	37:41	3	SWS_BILINEAR
water	37:29	0:0	4	SWS_BILINEAR
arg	37:43	37:47	3	NULL
water	37:43	0:0	4	NULL
arg	37:49	37:53	3	NULL
water	37:49	0:0	4	NULL
arg	37:55	37:59	3	NULL
water	37:55	0:0	4	NULL
water	37:60	0:0	2	;
if	38:4	46:4	2	(! sws_ctx)
cond	38:8	38:9	3	! sws_ctx
op	38:8	0:0	4	!
water	38:9	0:0	4	sws_ctx
stmts	38:18	46:4	3	
water	38:18	0:0	4	{
call	39:8	43:62	4	fprintf
arg	39:16	39:22	5	stderr
water	39:16	0:0	6	stderr
arg	40:16	41:52	5	"Impossible to create scale context for the conversion ""fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n"
water	40:16	0:0	6	"Impossible to create scale context for the conversion "
water	41:16	0:0	6	"fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n"
arg	42:16	42:48	5	av_get_pix_fmt_name(src_pix_fmt)
call	42:16	42:47	6	av_get_pix_fmt_name
arg	42:36	42:47	7	src_pix_fmt
water	42:36	0:0	8	src_pix_fmt
arg	42:50	42:55	5	src_w
water	42:50	0:0	6	src_w
arg	42:57	42:62	5	src_h
water	42:57	0:0	6	src_h
arg	43:16	43:48	5	av_get_pix_fmt_name(dst_pix_fmt)
call	43:16	43:47	6	av_get_pix_fmt_name
arg	43:36	43:47	7	dst_pix_fmt
water	43:36	0:0	8	dst_pix_fmt
arg	43:50	43:55	5	dst_w
water	43:50	0:0	6	dst_w
arg	43:57	43:62	5	dst_h
water	43:57	0:0	6	dst_h
water	43:63	0:0	4	;
water	44:8	0:0	4	ret
op	44:12	0:0	4	=
call	44:14	44:28	4	AVERROR
arg	44:22	44:28	5	EINVAL
water	44:22	0:0	6	EINVAL
water	44:29	0:0	4	;
goto	45:8	45:16	4	end
water	45:13	0:0	5	end
water	46:4	0:0	4	}
if	48:4	52:4	2	(( ret =av_image_alloc (src_data ,src_linesize ,src_w ,src_h ,src_pix_fmt ,16 ) ) < 0)
cond	48:8	49:64	3	( ret =av_image_alloc (src_data ,src_linesize ,src_w ,src_h ,src_pix_fmt ,16 ) ) < 0
water	48:8	0:0	4	(
water	48:9	0:0	4	ret
op	48:13	0:0	4	=
call	48:15	49:59	4	av_image_alloc
arg	48:30	48:38	5	src_data
water	48:30	0:0	6	src_data
arg	48:40	48:52	5	src_linesize
water	48:40	0:0	6	src_linesize
arg	49:30	49:35	5	src_w
water	49:30	0:0	6	src_w
arg	49:37	49:42	5	src_h
water	49:37	0:0	6	src_h
arg	49:44	49:55	5	src_pix_fmt
water	49:44	0:0	6	src_pix_fmt
arg	49:57	49:59	5	16
water	49:57	0:0	6	16
water	49:60	0:0	4	)
op	49:62	0:0	4	<
water	49:64	0:0	4	0
stmts	49:67	52:4	3	
water	49:67	0:0	4	{
call	50:8	50:59	4	fprintf
arg	50:16	50:22	5	stderr
water	50:16	0:0	6	stderr
arg	50:24	50:59	5	"Could not allocate source image\n"
water	50:24	0:0	6	"Could not allocate source image\n"
water	50:60	0:0	4	;
goto	51:8	51:16	4	end
water	51:13	0:0	5	end
water	52:4	0:0	4	}
if	54:4	58:4	2	(( ret =av_image_alloc (dst_data ,dst_linesize ,dst_w ,dst_h ,dst_pix_fmt ,1 ) ) < 0)
cond	54:8	55:63	3	( ret =av_image_alloc (dst_data ,dst_linesize ,dst_w ,dst_h ,dst_pix_fmt ,1 ) ) < 0
water	54:8	0:0	4	(
water	54:9	0:0	4	ret
op	54:13	0:0	4	=
call	54:15	55:58	4	av_image_alloc
arg	54:30	54:38	5	dst_data
water	54:30	0:0	6	dst_data
arg	54:40	54:52	5	dst_linesize
water	54:40	0:0	6	dst_linesize
arg	55:30	55:35	5	dst_w
water	55:30	0:0	6	dst_w
arg	55:37	55:42	5	dst_h
water	55:37	0:0	6	dst_h
arg	55:44	55:55	5	dst_pix_fmt
water	55:44	0:0	6	dst_pix_fmt
arg	55:57	55:58	5	1
water	55:57	0:0	6	1
water	55:59	0:0	4	)
op	55:61	0:0	4	<
water	55:63	0:0	4	0
stmts	55:66	58:4	3	
water	55:66	0:0	4	{
call	56:8	56:64	4	fprintf
arg	56:16	56:22	5	stderr
water	56:16	0:0	6	stderr
arg	56:24	56:64	5	"Could not allocate destination image\n"
water	56:24	0:0	6	"Could not allocate destination image\n"
water	56:65	0:0	4	;
goto	57:8	57:16	4	end
water	57:13	0:0	5	end
water	58:4	0:0	4	}
water	59:4	0:0	2	dst_bufsize
op	59:16	0:0	2	=
water	59:18	0:0	2	ret
water	59:21	0:0	2	;
for	60:4	68:4	2	(i = 0 ;i < 100;i ++)
forinit	60:9	60:14	3	i = 0 ;
water	60:9	0:0	4	i
op	60:11	0:0	4	=
water	60:13	0:0	4	0
water	60:14	0:0	4	;
cond	60:16	60:20	3	i < 100
water	60:16	0:0	4	i
op	60:18	0:0	4	<
water	60:20	0:0	4	100
forexpr	60:25	60:26	3	i ++
water	60:25	0:0	4	i
op	60:26	0:0	4	++
stmts	60:30	68:4	3	
water	60:30	0:0	4	{
call	62:8	62:62	4	fill_yuv_image
arg	62:23	62:31	5	src_data
water	62:23	0:0	6	src_data
arg	62:33	62:45	5	src_linesize
water	62:33	0:0	6	src_linesize
arg	62:47	62:52	5	src_w
water	62:47	0:0	6	src_w
arg	62:54	62:59	5	src_h
water	62:54	0:0	6	src_h
arg	62:61	62:62	5	i
water	62:61	0:0	6	i
water	62:63	0:0	4	;
call	64:8	65:64	4	sws_scale
arg	64:18	64:25	5	sws_ctx
water	64:18	0:0	6	sws_ctx
arg	64:27	64:59	5	(constuint8_t*const*)src_data
water	64:27	0:0	6	(
water	64:28	0:0	6	const
water	64:34	0:0	6	uint8_t
op	64:42	0:0	6	*
water	64:44	0:0	6	const
op	64:49	0:0	6	*
water	64:50	0:0	6	)
water	64:51	0:0	6	src_data
arg	65:18	65:30	5	src_linesize
water	65:18	0:0	6	src_linesize
arg	65:32	65:33	5	0
water	65:32	0:0	6	0
arg	65:35	65:40	5	src_h
water	65:35	0:0	6	src_h
arg	65:42	65:50	5	dst_data
water	65:42	0:0	6	dst_data
arg	65:52	65:64	5	dst_linesize
water	65:52	0:0	6	dst_linesize
water	65:65	0:0	4	;
call	67:8	67:52	4	fwrite
arg	67:15	67:26	5	dst_data[0]
water	67:15	0:0	6	dst_data
op	67:23	0:0	6	[
water	67:24	0:0	6	0
op	67:25	0:0	6	]
arg	67:28	67:29	5	1
water	67:28	0:0	6	1
arg	67:31	67:42	5	dst_bufsize
water	67:31	0:0	6	dst_bufsize
arg	67:44	67:52	5	dst_file
water	67:44	0:0	6	dst_file
water	67:53	0:0	4	;
water	68:4	0:0	4	}
call	69:4	71:71	2	fprintf
arg	69:12	69:18	3	stderr
water	69:12	0:0	4	stderr
arg	69:20	70:66	3	"Scaling succeeded. Play the output file with the command:\n""ffplay -f rawvideo -pix_fmt %s -video_size %dx%d %s\n"
water	69:20	0:0	4	"Scaling succeeded. Play the output file with the command:\n"
water	70:11	0:0	4	"ffplay -f rawvideo -pix_fmt %s -video_size %dx%d %s\n"
arg	71:11	71:43	3	av_get_pix_fmt_name(dst_pix_fmt)
call	71:11	71:42	4	av_get_pix_fmt_name
arg	71:31	71:42	5	dst_pix_fmt
water	71:31	0:0	6	dst_pix_fmt
arg	71:45	71:50	3	dst_w
water	71:45	0:0	4	dst_w
arg	71:52	71:57	3	dst_h
water	71:52	0:0	4	dst_h
arg	71:59	71:71	3	dst_filename
water	71:59	0:0	4	dst_filename
water	71:72	0:0	2	;
label	72:0	72:3	2	end :
call	73:4	73:19	2	fclose
arg	73:11	73:19	3	dst_file
water	73:11	0:0	4	dst_file
water	73:20	0:0	2	;
call	74:4	74:25	2	av_freep
arg	74:13	74:25	3	&src_data[0]
op	74:13	0:0	4	&
water	74:14	0:0	4	src_data
op	74:22	0:0	4	[
water	74:23	0:0	4	0
op	74:24	0:0	4	]
water	74:26	0:0	2	;
call	75:4	75:25	2	av_freep
arg	75:13	75:25	3	&dst_data[0]
op	75:13	0:0	4	&
water	75:14	0:0	4	dst_data
op	75:22	0:0	4	[
water	75:23	0:0	4	0
op	75:24	0:0	4	]
water	75:26	0:0	2	;
call	76:4	76:27	2	sws_freeContext
arg	76:20	76:27	3	sws_ctx
water	76:20	0:0	4	sws_ctx
water	76:28	0:0	2	;
return	77:4	77:18	2	ret<0
water	77:11	0:0	3	ret
op	77:15	0:0	3	<
water	77:17	0:0	3	0

func	1:0	23:0	0		INTERPOLATE_METHOD
params	1:18	0:0	1	
param	1:19	1:42	2	interpolate_biquadratic
stmnts	0:0	22:4	1	
decl	3:4	3:30	2	int	x_c
water	3:15	0:0	2	,
decl	3:4	3:30	2	int	x_f
water	3:20	0:0	2	,
decl	3:4	3:30	2	int	y_c
water	3:25	0:0	2	,
decl	3:4	3:30	2	int	y_f
decl	4:4	4:29	2	uint8_t	v1
water	4:14	0:0	2	,
decl	4:4	4:29	2	uint8_t	v2
water	4:19	0:0	2	,
decl	4:4	4:29	2	uint8_t	v3
water	4:24	0:0	2	,
decl	4:4	4:29	2	uint8_t	v4
decl	5:4	5:29	2	float	f1
water	5:14	0:0	2	,
decl	5:4	5:29	2	float	f2
water	5:19	0:0	2	,
decl	5:4	5:29	2	float	f3
water	5:24	0:0	2	,
decl	5:4	5:29	2	float	f4
if	6:4	7:18	2	(x < - 1 || x > width || y < - 1 || y > height)
cond	6:8	6:46	3	x < - 1 || x > width || y < - 1 || y > height
water	6:8	0:0	4	x
op	6:10	0:0	4	<
op	6:12	0:0	4	-
water	6:14	0:0	4	1
op	6:16	0:0	4	||
water	6:19	0:0	4	x
op	6:21	0:0	4	>
water	6:23	0:0	4	width
op	6:29	0:0	4	||
water	6:32	0:0	4	y
op	6:34	0:0	4	<
op	6:36	0:0	4	-
water	6:37	0:0	4	1
op	6:39	0:0	4	||
water	6:42	0:0	4	y
op	6:44	0:0	4	>
water	6:46	0:0	4	height
stmts	7:8	7:18	3	
return	7:8	7:18	4	def
water	7:15	0:0	5	def
else	8:4	22:4	2
stmts	8:9	22:4	3	
water	8:9	0:0	4	{
water	9:8	0:0	4	x_f
op	9:12	0:0	4	=
water	9:14	0:0	4	(
water	9:15	0:0	4	int
water	9:18	0:0	4	)
water	9:19	0:0	4	x
water	9:20	0:0	4	;
water	10:8	0:0	4	x_c
op	10:12	0:0	4	=
water	10:14	0:0	4	x_f
op	10:18	0:0	4	+
water	10:20	0:0	4	1
water	10:21	0:0	4	;
water	11:8	0:0	4	y_f
op	11:12	0:0	4	=
water	11:14	0:0	4	(
water	11:15	0:0	4	int
water	11:18	0:0	4	)
water	11:19	0:0	4	y
water	11:20	0:0	4	;
water	12:8	0:0	4	y_c
op	12:12	0:0	4	=
water	12:14	0:0	4	y_f
op	12:18	0:0	4	+
water	12:20	0:0	4	1
water	12:21	0:0	4	;
water	13:8	0:0	4	v1
op	13:11	0:0	4	=
call	13:13	13:60	4	PIXEL
arg	13:19	13:22	5	src
water	13:19	0:0	6	src
arg	13:24	13:27	5	x_c
water	13:24	0:0	6	x_c
arg	13:29	13:32	5	y_c
water	13:29	0:0	6	y_c
arg	13:34	13:39	5	width
water	13:34	0:0	6	width
arg	13:41	13:47	5	height
water	13:41	0:0	6	height
arg	13:49	13:55	5	stride
water	13:49	0:0	6	stride
arg	13:57	13:60	5	def
water	13:57	0:0	6	def
water	13:61	0:0	4	;
water	14:8	0:0	4	v2
op	14:11	0:0	4	=
call	14:13	14:60	4	PIXEL
arg	14:19	14:22	5	src
water	14:19	0:0	6	src
arg	14:24	14:27	5	x_c
water	14:24	0:0	6	x_c
arg	14:29	14:32	5	y_f
water	14:29	0:0	6	y_f
arg	14:34	14:39	5	width
water	14:34	0:0	6	width
arg	14:41	14:47	5	height
water	14:41	0:0	6	height
arg	14:49	14:55	5	stride
water	14:49	0:0	6	stride
arg	14:57	14:60	5	def
water	14:57	0:0	6	def
water	14:61	0:0	4	;
water	15:8	0:0	4	v3
op	15:11	0:0	4	=
call	15:13	15:60	4	PIXEL
arg	15:19	15:22	5	src
water	15:19	0:0	6	src
arg	15:24	15:27	5	x_f
water	15:24	0:0	6	x_f
arg	15:29	15:32	5	y_c
water	15:29	0:0	6	y_c
arg	15:34	15:39	5	width
water	15:34	0:0	6	width
arg	15:41	15:47	5	height
water	15:41	0:0	6	height
arg	15:49	15:55	5	stride
water	15:49	0:0	6	stride
arg	15:57	15:60	5	def
water	15:57	0:0	6	def
water	15:61	0:0	4	;
water	16:8	0:0	4	v4
op	16:11	0:0	4	=
call	16:13	16:60	4	PIXEL
arg	16:19	16:22	5	src
water	16:19	0:0	6	src
arg	16:24	16:27	5	x_f
water	16:24	0:0	6	x_f
arg	16:29	16:32	5	y_f
water	16:29	0:0	6	y_f
arg	16:34	16:39	5	width
water	16:34	0:0	6	width
arg	16:41	16:47	5	height
water	16:41	0:0	6	height
arg	16:49	16:55	5	stride
water	16:49	0:0	6	stride
arg	16:57	16:60	5	def
water	16:57	0:0	6	def
water	16:61	0:0	4	;
water	17:8	0:0	4	f1
op	17:11	0:0	4	=
water	17:13	0:0	4	1
op	17:15	0:0	4	-
call	17:17	17:43	4	sqrt
arg	17:22	17:43	5	(x_c-x)*(y_c-y)
water	17:22	0:0	6	(
water	17:23	0:0	6	x_c
op	17:27	0:0	6	-
water	17:29	0:0	6	x
water	17:30	0:0	6	)
op	17:32	0:0	6	*
water	17:34	0:0	6	(
water	17:35	0:0	6	y_c
op	17:39	0:0	6	-
water	17:41	0:0	6	y
water	17:42	0:0	6	)
water	17:44	0:0	4	;
water	18:8	0:0	4	f2
op	18:11	0:0	4	=
water	18:13	0:0	4	1
op	18:15	0:0	4	-
call	18:17	18:43	4	sqrt
arg	18:22	18:43	5	(x_c-x)*(y-y_f)
water	18:22	0:0	6	(
water	18:23	0:0	6	x_c
op	18:27	0:0	6	-
water	18:29	0:0	6	x
water	18:30	0:0	6	)
op	18:32	0:0	6	*
water	18:34	0:0	6	(
water	18:35	0:0	6	y
op	18:37	0:0	6	-
water	18:39	0:0	6	y_f
water	18:42	0:0	6	)
water	18:44	0:0	4	;
water	19:8	0:0	4	f3
op	19:11	0:0	4	=
water	19:13	0:0	4	1
op	19:15	0:0	4	-
call	19:17	19:43	4	sqrt
arg	19:22	19:43	5	(x-x_f)*(y_c-y)
water	19:22	0:0	6	(
water	19:23	0:0	6	x
op	19:25	0:0	6	-
water	19:27	0:0	6	x_f
water	19:30	0:0	6	)
op	19:32	0:0	6	*
water	19:34	0:0	6	(
water	19:35	0:0	6	y_c
op	19:39	0:0	6	-
water	19:41	0:0	6	y
water	19:42	0:0	6	)
water	19:44	0:0	4	;
water	20:8	0:0	4	f4
op	20:11	0:0	4	=
water	20:13	0:0	4	1
op	20:15	0:0	4	-
call	20:17	20:43	4	sqrt
arg	20:22	20:43	5	(x-x_f)*(y-y_f)
water	20:22	0:0	6	(
water	20:23	0:0	6	x
op	20:25	0:0	6	-
water	20:27	0:0	6	x_f
water	20:30	0:0	6	)
op	20:32	0:0	6	*
water	20:34	0:0	6	(
water	20:35	0:0	6	y
op	20:37	0:0	6	-
water	20:39	0:0	6	y_f
water	20:42	0:0	6	)
water	20:44	0:0	4	;
return	21:8	21:76	4	(v1*f1+v2*f2+v3*f3+v4*f4)/(f1+f2+f3+f4)
water	21:15	0:0	5	(
water	21:16	0:0	5	v1
op	21:19	0:0	5	*
water	21:21	0:0	5	f1
op	21:24	0:0	5	+
water	21:26	0:0	5	v2
op	21:29	0:0	5	*
water	21:31	0:0	5	f2
op	21:34	0:0	5	+
water	21:36	0:0	5	v3
op	21:39	0:0	5	*
water	21:41	0:0	5	f3
op	21:44	0:0	5	+
water	21:46	0:0	5	v4
op	21:49	0:0	5	*
water	21:51	0:0	5	f4
water	21:53	0:0	5	)
op	21:55	0:0	5	/
water	21:57	0:0	5	(
water	21:58	0:0	5	f1
op	21:61	0:0	5	+
water	21:63	0:0	5	f2
op	21:66	0:0	5	+
water	21:68	0:0	5	f3
op	21:71	0:0	5	+
water	21:73	0:0	5	f4
water	21:75	0:0	5	)
water	22:4	0:0	4	}

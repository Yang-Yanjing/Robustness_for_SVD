func	1:0	23:0	0	int	av_timecode_init_from_string
params	1:32	0:0	1	
param	1:33	1:47	2	AVTimecode *	tc
param	1:49	1:64	2	AVRational	rate
param	1:66	1:81	2	const char *	str
param	1:83	1:96	2	void *	log_ctx
stmnts	0:0	22:12	1	
decl	3:4	3:10	2	char	c
decl	4:4	4:27	2	int	hh
water	4:10	0:0	2	,
decl	4:4	4:27	2	int	mm
water	4:14	0:0	2	,
decl	4:4	4:27	2	int	ss
water	4:18	0:0	2	,
decl	4:4	4:27	2	int	ff
water	4:22	0:0	2	,
decl	4:4	4:27	2	int	ret
if	5:4	9:4	2	(sscanf (str ,"%d:%d:%d%c%d" ,& hh ,& mm ,& ss ,& c ,& ff ) != 5)
cond	5:8	5:63	3	sscanf (str ,"%d:%d:%d%c%d" ,& hh ,& mm ,& ss ,& c ,& ff ) != 5
call	5:8	5:58	4	sscanf
arg	5:15	5:18	5	str
water	5:15	0:0	6	str
arg	5:20	5:34	5	"%d:%d:%d%c%d"
water	5:20	0:0	6	"%d:%d:%d%c%d"
arg	5:36	5:39	5	&hh
op	5:36	0:0	6	&
water	5:37	0:0	6	hh
arg	5:41	5:44	5	&mm
op	5:41	0:0	6	&
water	5:42	0:0	6	mm
arg	5:46	5:49	5	&ss
op	5:46	0:0	6	&
water	5:47	0:0	6	ss
arg	5:51	5:53	5	&c
op	5:51	0:0	6	&
water	5:52	0:0	6	c
arg	5:55	5:58	5	&ff
op	5:55	0:0	6	&
water	5:56	0:0	6	ff
op	5:60	0:0	4	!=
water	5:63	0:0	4	5
stmts	5:66	9:4	3	
water	5:66	0:0	4	{
call	6:8	7:65	4	av_log
arg	6:15	6:22	5	log_ctx
water	6:15	0:0	6	log_ctx
arg	6:24	6:36	5	AV_LOG_ERROR
water	6:24	0:0	6	AV_LOG_ERROR
arg	6:38	7:65	5	"Unable to parse timecode, ""syntax: hh:mm:ss[:;.]ff\n"
water	6:38	0:0	6	"Unable to parse timecode, "
water	7:38	0:0	6	"syntax: hh:mm:ss[:;.]ff\n"
water	7:66	0:0	4	;
return	8:8	8:34	4	AVERROR_INVALIDDATA
water	8:15	0:0	5	AVERROR_INVALIDDATA
water	9:4	0:0	4	}
call	10:4	10:29	2	memset
arg	10:11	10:13	3	tc
water	10:11	0:0	4	tc
arg	10:15	10:16	3	0
water	10:15	0:0	4	0
arg	10:18	10:29	3	sizeof(*tc)
op	10:18	0:0	4	sizeof
water	10:24	0:0	4	(
op	10:25	0:0	4	*
water	10:26	0:0	4	tc
water	10:28	0:0	4	)
water	10:30	0:0	2	;
water	11:4	0:0	2	tc
op	11:6	0:0	2	->
water	11:8	0:0	2	flags
op	11:14	0:0	2	=
water	11:16	0:0	2	c
op	11:18	0:0	2	!=
water	11:21	0:0	2	':'
water	11:25	0:0	2	?
water	11:27	0:0	2	AV_TIMECODE_FLAG_DROPFRAME
water	11:54	0:0	2	:
water	11:56	0:0	2	0
water	11:57	0:0	2	;
water	12:4	0:0	2	tc
op	12:6	0:0	2	->
water	12:8	0:0	2	rate
op	12:14	0:0	2	=
water	12:16	0:0	2	rate
water	12:20	0:0	2	;
water	13:4	0:0	2	tc
op	13:6	0:0	2	->
water	13:8	0:0	2	fps
op	13:14	0:0	2	=
call	13:16	13:40	2	fps_from_frame_rate
arg	13:36	13:40	3	rate
water	13:36	0:0	4	rate
water	13:41	0:0	2	;
water	14:4	0:0	2	ret
op	14:8	0:0	2	=
call	14:10	14:36	2	check_timecode
arg	14:25	14:32	3	log_ctx
water	14:25	0:0	4	log_ctx
arg	14:34	14:36	3	tc
water	14:34	0:0	4	tc
water	14:37	0:0	2	;
if	15:4	16:18	2	(ret < 0)
cond	15:8	15:14	3	ret < 0
water	15:8	0:0	4	ret
op	15:12	0:0	4	<
water	15:14	0:0	4	0
stmts	16:8	16:18	3	
return	16:8	16:18	4	ret
water	16:15	0:0	5	ret
water	17:4	0:0	2	tc
op	17:6	0:0	2	->
water	17:8	0:0	2	start
op	17:14	0:0	2	=
water	17:16	0:0	2	(
water	17:17	0:0	2	hh
op	17:19	0:0	2	*
water	17:20	0:0	2	3600
op	17:25	0:0	2	+
water	17:27	0:0	2	mm
op	17:29	0:0	2	*
water	17:30	0:0	2	60
op	17:33	0:0	2	+
water	17:35	0:0	2	ss
water	17:37	0:0	2	)
op	17:39	0:0	2	*
water	17:41	0:0	2	tc
op	17:43	0:0	2	->
water	17:45	0:0	2	fps
op	17:49	0:0	2	+
water	17:51	0:0	2	ff
water	17:53	0:0	2	;
if	18:4	21:4	2	(tc -> flags & AV_TIMECODE_FLAG_DROPFRAME)
cond	18:8	18:20	3	tc -> flags & AV_TIMECODE_FLAG_DROPFRAME
water	18:8	0:0	4	tc
op	18:10	0:0	4	->
water	18:12	0:0	4	flags
op	18:18	0:0	4	&
water	18:20	0:0	4	AV_TIMECODE_FLAG_DROPFRAME
stmts	18:48	21:4	3	
water	18:48	0:0	4	{
decl	19:8	19:30	4	int	tmins
op	19:18	0:0	4	=
water	19:20	0:0	4	60
op	19:22	0:0	4	*
water	19:23	0:0	4	hh
op	19:26	0:0	4	+
water	19:28	0:0	4	mm
water	20:8	0:0	4	tc
op	20:10	0:0	4	->
water	20:12	0:0	4	start
op	20:18	0:0	4	-=
water	20:21	0:0	4	2
op	20:23	0:0	4	*
water	20:25	0:0	4	(
water	20:26	0:0	4	tmins
op	20:32	0:0	4	-
water	20:34	0:0	4	tmins
op	20:39	0:0	4	/
water	20:40	0:0	4	10
water	20:42	0:0	4	)
water	20:43	0:0	4	;
water	21:4	0:0	4	}
return	22:4	22:12	2	0
water	22:11	0:0	3	0

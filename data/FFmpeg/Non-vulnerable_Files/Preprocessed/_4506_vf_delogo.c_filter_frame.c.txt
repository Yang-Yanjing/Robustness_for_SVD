func	1:0	45:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	44:40	1	
decl	3:4	3:40	2	DelogoContext	*s
op	3:21	0:0	2	=
water	3:23	0:0	2	inlink
op	3:29	0:0	2	->
water	3:31	0:0	2	dst
op	3:34	0:0	2	->
water	3:36	0:0	2	priv
decl	4:4	4:51	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	inlink
op	4:34	0:0	2	->
water	4:36	0:0	2	dst
op	4:39	0:0	2	->
water	4:41	0:0	2	outputs
op	4:48	0:0	2	[
water	4:49	0:0	2	0
op	4:50	0:0	2	]
decl	5:4	5:72	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:71	3	av_pix_fmt_desc_get
arg	5:57	5:71	4	inlink->format
water	5:57	0:0	5	inlink
op	5:63	0:0	5	->
water	5:65	0:0	5	format
decl	6:4	6:16	2	AVFrame	*out
decl	7:4	7:35	2	int	hsub0
op	7:14	0:0	2	=
water	7:16	0:0	2	desc
op	7:20	0:0	2	->
water	7:22	0:0	2	log2_chroma_w
decl	8:4	8:35	2	int	vsub0
op	8:14	0:0	2	=
water	8:16	0:0	2	desc
op	8:20	0:0	2	->
water	8:22	0:0	2	log2_chroma_h
decl	9:4	9:18	2	int	direct
op	9:15	0:0	2	=
water	9:17	0:0	2	0
decl	10:4	10:13	2	int	plane
decl	11:4	11:18	2	AVRational	sar
if	12:4	15:4	2	(av_frame_is_writable (in ))
cond	12:8	12:31	3	av_frame_is_writable (in )
call	12:8	12:31	4	av_frame_is_writable
arg	12:29	12:31	5	in
water	12:29	0:0	6	in
stmts	12:34	15:4	3	
water	12:34	0:0	4	{
water	13:8	0:0	4	direct
op	13:15	0:0	4	=
water	13:17	0:0	4	1
water	13:18	0:0	4	;
water	14:8	0:0	4	out
op	14:12	0:0	4	=
water	14:14	0:0	4	in
water	14:16	0:0	4	;
water	15:4	0:0	4	}
else	15:6	22:4	2
stmts	15:11	22:4	3	
water	15:11	0:0	4	{
water	16:8	0:0	4	out
op	16:12	0:0	4	=
call	16:14	16:65	4	ff_get_video_buffer
arg	16:34	16:41	5	outlink
water	16:34	0:0	6	outlink
arg	16:43	16:53	5	outlink->w
water	16:43	0:0	6	outlink
op	16:50	0:0	6	->
water	16:52	0:0	6	w
arg	16:55	16:65	5	outlink->h
water	16:55	0:0	6	outlink
op	16:62	0:0	6	->
water	16:64	0:0	6	h
water	16:66	0:0	4	;
if	17:8	20:8	4	(! out)
cond	17:12	17:13	5	! out
op	17:12	0:0	6	!
water	17:13	0:0	6	out
stmts	17:18	20:8	5	
water	17:18	0:0	6	{
call	18:12	18:29	6	av_frame_free
arg	18:26	18:29	7	&in
op	18:26	0:0	8	&
water	18:27	0:0	8	in
water	18:30	0:0	6	;
return	19:12	19:34	6	AVERROR(ENOMEM)
call	19:19	19:33	7	AVERROR
arg	19:27	19:33	8	ENOMEM
water	19:27	0:0	9	ENOMEM
water	20:8	0:0	6	}
call	21:8	21:35	4	av_frame_copy_props
arg	21:28	21:31	5	out
water	21:28	0:0	6	out
arg	21:33	21:35	5	in
water	21:33	0:0	6	in
water	21:36	0:0	4	;
water	22:4	0:0	4	}
water	23:4	0:0	2	sar
op	23:8	0:0	2	=
water	23:10	0:0	2	in
op	23:12	0:0	2	->
water	23:14	0:0	2	sample_aspect_ratio
water	23:33	0:0	2	;
if	25:4	26:29	2	(! sar . num)
cond	25:8	25:13	3	! sar . num
op	25:8	0:0	4	!
water	25:9	0:0	4	sar
op	25:12	0:0	4	.
water	25:13	0:0	4	num
stmts	26:8	26:29	3	
water	26:8	0:0	4	sar
op	26:11	0:0	4	.
water	26:12	0:0	4	num
op	26:16	0:0	4	=
water	26:18	0:0	4	sar
op	26:21	0:0	4	.
water	26:22	0:0	4	den
op	26:26	0:0	4	=
water	26:28	0:0	4	1
water	26:29	0:0	4	;
for	27:4	41:4	2	(plane = 0 ;plane < 4 && in -> data [ plane ] && in -> linesize [ plane ];plane ++)
forinit	27:9	27:18	3	plane = 0 ;
water	27:9	0:0	4	plane
op	27:15	0:0	4	=
water	27:17	0:0	4	0
water	27:18	0:0	4	;
cond	27:20	27:70	3	plane < 4 && in -> data [ plane ] && in -> linesize [ plane ]
water	27:20	0:0	4	plane
op	27:26	0:0	4	<
water	27:28	0:0	4	4
op	27:30	0:0	4	&&
water	27:33	0:0	4	in
op	27:35	0:0	4	->
water	27:37	0:0	4	data
op	27:41	0:0	4	[
water	27:42	0:0	4	plane
op	27:47	0:0	4	]
op	27:49	0:0	4	&&
water	27:52	0:0	4	in
op	27:54	0:0	4	->
water	27:56	0:0	4	linesize
op	27:64	0:0	4	[
water	27:65	0:0	4	plane
op	27:70	0:0	4	]
forexpr	27:73	27:78	3	plane ++
water	27:73	0:0	4	plane
op	27:78	0:0	4	++
stmts	27:82	41:4	3	
water	27:82	0:0	4	{
decl	28:8	28:55	4	int	hsub
op	28:17	0:0	4	=
water	28:19	0:0	4	plane
op	28:25	0:0	4	==
water	28:28	0:0	4	1
op	28:30	0:0	4	||
water	28:33	0:0	4	plane
op	28:39	0:0	4	==
water	28:42	0:0	4	2
water	28:44	0:0	4	?
water	28:46	0:0	4	hsub0
water	28:52	0:0	4	:
water	28:54	0:0	4	0
decl	29:8	29:55	4	int	vsub
op	29:17	0:0	4	=
water	29:19	0:0	4	plane
op	29:25	0:0	4	==
water	29:28	0:0	4	1
op	29:30	0:0	4	||
water	29:33	0:0	4	plane
op	29:39	0:0	4	==
water	29:42	0:0	4	2
water	29:44	0:0	4	?
water	29:46	0:0	4	vsub0
water	29:52	0:0	4	:
water	29:54	0:0	4	0
call	30:8	40:36	4	apply_delogo
arg	30:21	30:37	5	out->data[plane]
water	30:21	0:0	6	out
op	30:24	0:0	6	->
water	30:26	0:0	6	data
op	30:30	0:0	6	[
water	30:31	0:0	6	plane
op	30:36	0:0	6	]
arg	30:39	30:59	5	out->linesize[plane]
water	30:39	0:0	6	out
op	30:42	0:0	6	->
water	30:44	0:0	6	linesize
op	30:52	0:0	6	[
water	30:53	0:0	6	plane
op	30:58	0:0	6	]
arg	31:21	31:37	5	in->data[plane]
water	31:21	0:0	6	in
op	31:24	0:0	6	->
water	31:26	0:0	6	data
op	31:30	0:0	6	[
water	31:31	0:0	6	plane
op	31:36	0:0	6	]
arg	31:39	31:59	5	in->linesize[plane]
water	31:39	0:0	6	in
op	31:42	0:0	6	->
water	31:44	0:0	6	linesize
op	31:52	0:0	6	[
water	31:53	0:0	6	plane
op	31:58	0:0	6	]
arg	32:21	32:52	5	FF_CEIL_RSHIFT(inlink->w,hsub)
call	32:21	32:51	6	FF_CEIL_RSHIFT
arg	32:36	32:45	7	inlink->w
water	32:36	0:0	8	inlink
op	32:42	0:0	8	->
water	32:44	0:0	8	w
arg	32:47	32:51	7	hsub
water	32:47	0:0	8	hsub
arg	33:21	33:52	5	FF_CEIL_RSHIFT(inlink->h,vsub)
call	33:21	33:51	6	FF_CEIL_RSHIFT
arg	33:36	33:45	7	inlink->h
water	33:36	0:0	8	inlink
op	33:42	0:0	8	->
water	33:44	0:0	8	h
arg	33:47	33:51	7	vsub
water	33:47	0:0	8	vsub
arg	34:21	34:24	5	sar
water	34:21	0:0	6	sar
arg	34:26	34:36	5	s->x>>hsub
water	34:26	0:0	6	s
op	34:27	0:0	6	->
water	34:29	0:0	6	x
op	34:30	0:0	6	>>
water	34:32	0:0	6	hsub
arg	34:38	34:48	5	s->y>>vsub
water	34:38	0:0	6	s
op	34:39	0:0	6	->
water	34:41	0:0	6	y
op	34:42	0:0	6	>>
water	34:44	0:0	6	vsub
arg	37:21	37:72	5	FF_CEIL_RSHIFT(s->w+(s->x&((1<<hsub)-1)),hsub)
call	37:21	37:71	6	FF_CEIL_RSHIFT
arg	37:36	37:65	7	s->w+(s->x&((1<<hsub)-1))
water	37:36	0:0	8	s
op	37:37	0:0	8	->
water	37:39	0:0	8	w
op	37:41	0:0	8	+
water	37:43	0:0	8	(
water	37:44	0:0	8	s
op	37:45	0:0	8	->
water	37:47	0:0	8	x
op	37:49	0:0	8	&
water	37:51	0:0	8	(
water	37:52	0:0	8	(
water	37:53	0:0	8	1
op	37:54	0:0	8	<<
water	37:56	0:0	8	hsub
water	37:60	0:0	8	)
op	37:61	0:0	8	-
water	37:62	0:0	8	1
water	37:63	0:0	8	)
water	37:64	0:0	8	)
arg	37:67	37:71	7	hsub
water	37:67	0:0	8	hsub
arg	38:21	38:72	5	FF_CEIL_RSHIFT(s->h+(s->y&((1<<vsub)-1)),vsub)
call	38:21	38:71	6	FF_CEIL_RSHIFT
arg	38:36	38:65	7	s->h+(s->y&((1<<vsub)-1))
water	38:36	0:0	8	s
op	38:37	0:0	8	->
water	38:39	0:0	8	h
op	38:41	0:0	8	+
water	38:43	0:0	8	(
water	38:44	0:0	8	s
op	38:45	0:0	8	->
water	38:47	0:0	8	y
op	38:49	0:0	8	&
water	38:51	0:0	8	(
water	38:52	0:0	8	(
water	38:53	0:0	8	1
op	38:54	0:0	8	<<
water	38:56	0:0	8	vsub
water	38:60	0:0	8	)
op	38:61	0:0	8	-
water	38:62	0:0	8	1
water	38:63	0:0	8	)
water	38:64	0:0	8	)
arg	38:67	38:71	7	vsub
water	38:67	0:0	8	vsub
arg	39:21	39:47	5	s->band>>FFMIN(hsub,vsub)
water	39:21	0:0	6	s
op	39:22	0:0	6	->
water	39:24	0:0	6	band
op	39:28	0:0	6	>>
call	39:30	39:46	6	FFMIN
arg	39:36	39:40	7	hsub
water	39:36	0:0	8	hsub
arg	39:42	39:46	7	vsub
water	39:42	0:0	8	vsub
arg	40:21	40:28	5	s->show
water	40:21	0:0	6	s
op	40:22	0:0	6	->
water	40:24	0:0	6	show
arg	40:30	40:36	5	direct
water	40:30	0:0	6	direct
water	40:37	0:0	4	;
water	41:4	0:0	4	}
if	42:4	43:26	2	(! direct)
cond	42:8	42:9	3	! direct
op	42:8	0:0	4	!
water	42:9	0:0	4	direct
stmts	43:8	43:26	3	
call	43:8	43:25	4	av_frame_free
arg	43:22	43:25	5	&in
op	43:22	0:0	6	&
water	43:23	0:0	6	in
water	43:26	0:0	4	;
return	44:4	44:40	2	ff_filter_frame(outlink,out)
call	44:11	44:39	3	ff_filter_frame
arg	44:27	44:34	4	outlink
water	44:27	0:0	5	outlink
arg	44:36	44:39	4	out
water	44:36	0:0	5	out

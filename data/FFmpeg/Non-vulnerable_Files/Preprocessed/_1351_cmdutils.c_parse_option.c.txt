func	1:0	28:0	0	int	parse_option
params	1:16	0:0	1	
param	1:17	1:29	2	void *	optctx
param	1:31	1:46	2	const char *	opt
param	1:48	1:63	2	const char *	arg
param	2:17	2:41	2	const OptionDef *	options
stmnts	0:0	27:34	1	
decl	4:4	4:23	2	const OptionDef	*po
decl	5:4	5:11	2	int	ret
water	6:4	0:0	2	po
op	6:7	0:0	2	=
call	6:9	6:33	2	find_option
arg	6:21	6:28	3	options
water	6:21	0:0	4	options
arg	6:30	6:33	3	opt
water	6:30	0:0	4	opt
water	6:34	0:0	2	;
if	7:4	12:4	2	(! po -> name && opt [ 0 ] == 'n' && opt [ 1 ] == 'o')
cond	7:8	7:48	3	! po -> name && opt [ 0 ] == 'n' && opt [ 1 ] == 'o'
op	7:8	0:0	4	!
water	7:9	0:0	4	po
op	7:11	0:0	4	->
water	7:13	0:0	4	name
op	7:18	0:0	4	&&
water	7:21	0:0	4	opt
op	7:24	0:0	4	[
water	7:25	0:0	4	0
op	7:26	0:0	4	]
op	7:28	0:0	4	==
water	7:31	0:0	4	'n'
op	7:35	0:0	4	&&
water	7:38	0:0	4	opt
op	7:41	0:0	4	[
water	7:42	0:0	4	1
op	7:43	0:0	4	]
op	7:45	0:0	4	==
water	7:48	0:0	4	'o'
stmts	7:53	12:4	3	
water	7:53	0:0	4	{
water	9:8	0:0	4	po
op	9:11	0:0	4	=
call	9:13	9:41	4	find_option
arg	9:25	9:32	5	options
water	9:25	0:0	6	options
arg	9:34	9:41	5	opt+2
water	9:34	0:0	6	opt
op	9:38	0:0	6	+
water	9:40	0:0	6	2
water	9:42	0:0	4	;
if	10:8	11:21	4	(( po -> name && ( po -> flags & OPT_BOOL ) ))
cond	10:12	10:47	5	( po -> name && ( po -> flags & OPT_BOOL ) )
water	10:12	0:0	6	(
water	10:13	0:0	6	po
op	10:15	0:0	6	->
water	10:17	0:0	6	name
op	10:22	0:0	6	&&
water	10:25	0:0	6	(
water	10:26	0:0	6	po
op	10:28	0:0	6	->
water	10:30	0:0	6	flags
op	10:36	0:0	6	&
water	10:38	0:0	6	OPT_BOOL
water	10:46	0:0	6	)
water	10:47	0:0	6	)
stmts	11:12	11:21	5	
water	11:12	0:0	6	arg
op	11:16	0:0	6	=
water	11:18	0:0	6	"0"
water	11:21	0:0	6	;
water	12:4	0:0	4	}
else	12:6	13:17	2
stmts	12:11	13:17	3	
if	12:11	13:17	4	(po -> flags & OPT_BOOL)
cond	12:15	12:27	5	po -> flags & OPT_BOOL
water	12:15	0:0	6	po
op	12:17	0:0	6	->
water	12:19	0:0	6	flags
op	12:25	0:0	6	&
water	12:27	0:0	6	OPT_BOOL
stmts	13:8	13:17	5	
water	13:8	0:0	6	arg
op	13:12	0:0	6	=
water	13:14	0:0	6	"1"
water	13:17	0:0	6	;
if	14:4	15:44	2	(! po -> name)
cond	14:8	14:13	3	! po -> name
op	14:8	0:0	4	!
water	14:9	0:0	4	po
op	14:11	0:0	4	->
water	14:13	0:0	4	name
stmts	15:8	15:44	3	
water	15:8	0:0	4	po
op	15:11	0:0	4	=
call	15:13	15:43	4	find_option
arg	15:25	15:32	5	options
water	15:25	0:0	6	options
arg	15:34	15:43	5	"default"
water	15:34	0:0	6	"default"
water	15:44	0:0	4	;
if	16:4	19:4	2	(! po -> name)
cond	16:8	16:13	3	! po -> name
op	16:8	0:0	4	!
water	16:9	0:0	4	po
op	16:11	0:0	4	->
water	16:13	0:0	4	name
stmts	16:19	19:4	3	
water	16:19	0:0	4	{
call	17:8	17:68	4	av_log
arg	17:15	17:19	5	NULL
water	17:15	0:0	6	NULL
arg	17:21	17:33	5	AV_LOG_ERROR
water	17:21	0:0	6	AV_LOG_ERROR
arg	17:35	17:63	5	"Unrecognized option '%s'\n"
water	17:35	0:0	6	"Unrecognized option '%s'\n"
arg	17:65	17:68	5	opt
water	17:65	0:0	6	opt
water	17:69	0:0	4	;
return	18:8	18:30	4	AVERROR(EINVAL)
call	18:15	18:29	5	AVERROR
arg	18:23	18:29	6	EINVAL
water	18:23	0:0	7	EINVAL
water	19:4	0:0	4	}
if	20:4	23:4	2	(po -> flags & HAS_ARG && ! arg)
cond	20:8	20:32	3	po -> flags & HAS_ARG && ! arg
water	20:8	0:0	4	po
op	20:10	0:0	4	->
water	20:12	0:0	4	flags
op	20:18	0:0	4	&
water	20:20	0:0	4	HAS_ARG
op	20:28	0:0	4	&&
op	20:31	0:0	4	!
water	20:32	0:0	4	arg
stmts	20:37	23:4	3	
water	20:37	0:0	4	{
call	21:8	21:76	4	av_log
arg	21:15	21:19	5	NULL
water	21:15	0:0	6	NULL
arg	21:21	21:33	5	AV_LOG_ERROR
water	21:21	0:0	6	AV_LOG_ERROR
arg	21:35	21:71	5	"Missing argument for option '%s'\n"
water	21:35	0:0	6	"Missing argument for option '%s'\n"
arg	21:73	21:76	5	opt
water	21:73	0:0	6	opt
water	21:77	0:0	4	;
return	22:8	22:30	4	AVERROR(EINVAL)
call	22:15	22:29	5	AVERROR
arg	22:23	22:29	6	EINVAL
water	22:23	0:0	7	EINVAL
water	23:4	0:0	4	}
water	24:4	0:0	2	ret
op	24:8	0:0	2	=
call	24:10	24:43	2	write_option
arg	24:23	24:29	3	optctx
water	24:23	0:0	4	optctx
arg	24:31	24:33	3	po
water	24:31	0:0	4	po
arg	24:35	24:38	3	opt
water	24:35	0:0	4	opt
arg	24:40	24:43	3	arg
water	24:40	0:0	4	arg
water	24:44	0:0	2	;
if	25:4	26:18	2	(ret < 0)
cond	25:8	25:14	3	ret < 0
water	25:8	0:0	4	ret
op	25:12	0:0	4	<
water	25:14	0:0	4	0
stmts	26:8	26:18	3	
return	26:8	26:18	4	ret
water	26:15	0:0	5	ret
return	27:4	27:34	2	!!(po->flags&HAS_ARG)
op	27:11	0:0	3	!
op	27:12	0:0	3	!
water	27:13	0:0	3	(
water	27:14	0:0	3	po
op	27:16	0:0	3	->
water	27:18	0:0	3	flags
op	27:24	0:0	3	&
water	27:26	0:0	3	HAS_ARG
water	27:33	0:0	3	)

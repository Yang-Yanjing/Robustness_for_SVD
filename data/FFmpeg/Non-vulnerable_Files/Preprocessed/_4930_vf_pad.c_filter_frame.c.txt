func	1:0	55:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	54:56	1	
decl	3:4	3:37	2	PadContext	*s
op	3:18	0:0	2	=
water	3:20	0:0	2	inlink
op	3:26	0:0	2	->
water	3:28	0:0	2	dst
op	3:31	0:0	2	->
water	3:33	0:0	2	priv
decl	4:4	4:16	2	AVFrame	*out
decl	5:4	5:44	2	int	needs_copy
op	5:19	0:0	2	=
call	5:21	5:43	3	frame_needs_copy
arg	5:38	5:39	4	s
water	5:38	0:0	5	s
arg	5:41	5:43	4	in
water	5:41	0:0	5	in
if	6:4	16:4	2	(needs_copy)
cond	6:8	6:8	3	needs_copy
water	6:8	0:0	4	needs_copy
stmts	6:20	16:4	3	
water	6:20	0:0	4	{
call	7:8	7:92	4	av_log
arg	7:15	7:26	5	inlink->dst
water	7:15	0:0	6	inlink
op	7:21	0:0	6	->
water	7:23	0:0	6	dst
arg	7:28	7:40	5	AV_LOG_DEBUG
water	7:28	0:0	6	AV_LOG_DEBUG
arg	7:42	7:92	5	"Direct padding impossible allocating new frame\n"
water	7:42	0:0	6	"Direct padding impossible allocating new frame\n"
water	7:93	0:0	4	;
water	8:8	0:0	4	out
op	8:12	0:0	4	=
call	8:14	10:56	4	ff_get_video_buffer
arg	8:34	8:57	5	inlink->dst->outputs[0]
water	8:34	0:0	6	inlink
op	8:40	0:0	6	->
water	8:42	0:0	6	dst
op	8:45	0:0	6	->
water	8:47	0:0	6	outputs
op	8:54	0:0	6	[
water	8:55	0:0	6	0
op	8:56	0:0	6	]
arg	9:34	9:56	5	FFMAX(inlink->w,s->w)
call	9:34	9:55	6	FFMAX
arg	9:40	9:49	7	inlink->w
water	9:40	0:0	8	inlink
op	9:46	0:0	8	->
water	9:48	0:0	8	w
arg	9:51	9:55	7	s->w
water	9:51	0:0	8	s
op	9:52	0:0	8	->
water	9:54	0:0	8	w
arg	10:34	10:56	5	FFMAX(inlink->h,s->h)
call	10:34	10:55	6	FFMAX
arg	10:40	10:49	7	inlink->h
water	10:40	0:0	8	inlink
op	10:46	0:0	8	->
water	10:48	0:0	8	h
arg	10:51	10:55	7	s->h
water	10:51	0:0	8	s
op	10:52	0:0	8	->
water	10:54	0:0	8	h
water	10:57	0:0	4	;
if	11:8	14:8	4	(! out)
cond	11:12	11:13	5	! out
op	11:12	0:0	6	!
water	11:13	0:0	6	out
stmts	11:18	14:8	5	
water	11:18	0:0	6	{
call	12:12	12:29	6	av_frame_free
arg	12:26	12:29	7	&in
op	12:26	0:0	8	&
water	12:27	0:0	8	in
water	12:30	0:0	6	;
return	13:12	13:34	6	AVERROR(ENOMEM)
call	13:19	13:33	7	AVERROR
arg	13:27	13:33	8	ENOMEM
water	13:27	0:0	9	ENOMEM
water	14:8	0:0	6	}
call	15:8	15:35	4	av_frame_copy_props
arg	15:28	15:31	5	out
water	15:28	0:0	6	out
arg	15:33	15:35	5	in
water	15:33	0:0	6	in
water	15:36	0:0	4	;
water	16:4	0:0	4	}
else	16:6	25:4	2
stmts	16:11	25:4	3	
water	16:11	0:0	4	{
decl	17:8	17:13	4	int	i
water	18:8	0:0	4	out
op	18:12	0:0	4	=
water	18:14	0:0	4	in
water	18:16	0:0	4	;
for	19:8	24:8	4	(i = 0 ;i < 4 && out -> data [ i ] && out -> linesize [ i ];i ++)
forinit	19:13	19:18	5	i = 0 ;
water	19:13	0:0	6	i
op	19:15	0:0	6	=
water	19:17	0:0	6	0
water	19:18	0:0	6	;
cond	19:20	19:60	5	i < 4 && out -> data [ i ] && out -> linesize [ i ]
water	19:20	0:0	6	i
op	19:22	0:0	6	<
water	19:24	0:0	6	4
op	19:26	0:0	6	&&
water	19:29	0:0	6	out
op	19:32	0:0	6	->
water	19:34	0:0	6	data
op	19:38	0:0	6	[
water	19:39	0:0	6	i
op	19:40	0:0	6	]
op	19:42	0:0	6	&&
water	19:45	0:0	6	out
op	19:48	0:0	6	->
water	19:50	0:0	6	linesize
op	19:58	0:0	6	[
water	19:59	0:0	6	i
op	19:60	0:0	6	]
forexpr	19:63	19:64	5	i ++
water	19:63	0:0	6	i
op	19:64	0:0	6	++
stmts	19:68	24:8	5	
water	19:68	0:0	6	{
decl	20:12	20:38	6	int	hsub
op	20:21	0:0	6	=
water	20:23	0:0	6	s
op	20:24	0:0	6	->
water	20:26	0:0	6	draw
op	20:30	0:0	6	.
water	20:31	0:0	6	hsub
op	20:35	0:0	6	[
water	20:36	0:0	6	i
op	20:37	0:0	6	]
decl	21:12	21:38	6	int	vsub
op	21:21	0:0	6	=
water	21:23	0:0	6	s
op	21:24	0:0	6	->
water	21:26	0:0	6	draw
op	21:30	0:0	6	.
water	21:31	0:0	6	vsub
op	21:35	0:0	6	[
water	21:36	0:0	6	i
op	21:37	0:0	6	]
water	22:12	0:0	6	out
op	22:15	0:0	6	->
water	22:17	0:0	6	data
op	22:21	0:0	6	[
water	22:22	0:0	6	i
op	22:23	0:0	6	]
op	22:25	0:0	6	-=
water	22:28	0:0	6	(
water	22:29	0:0	6	s
op	22:30	0:0	6	->
water	22:32	0:0	6	x
op	22:34	0:0	6	>>
water	22:37	0:0	6	hsub
water	22:41	0:0	6	)
op	22:43	0:0	6	*
water	22:45	0:0	6	s
op	22:46	0:0	6	->
water	22:48	0:0	6	draw
op	22:52	0:0	6	.
water	22:53	0:0	6	pixelstep
op	22:62	0:0	6	[
water	22:63	0:0	6	i
op	22:64	0:0	6	]
op	22:66	0:0	6	+
water	23:28	0:0	6	(
water	23:29	0:0	6	s
op	23:30	0:0	6	->
water	23:32	0:0	6	y
op	23:34	0:0	6	>>
water	23:37	0:0	6	vsub
water	23:41	0:0	6	)
op	23:43	0:0	6	*
water	23:45	0:0	6	out
op	23:48	0:0	6	->
water	23:50	0:0	6	linesize
op	23:58	0:0	6	[
water	23:59	0:0	6	i
op	23:60	0:0	6	]
water	23:61	0:0	6	;
water	24:8	0:0	6	}
water	25:4	0:0	4	}
if	27:4	31:4	2	(s -> y)
cond	27:8	27:11	3	s -> y
water	27:8	0:0	4	s
op	27:9	0:0	4	->
water	27:11	0:0	4	y
stmts	27:14	31:4	3	
water	27:14	0:0	4	{
call	28:8	30:42	4	ff_fill_rectangle
arg	28:26	28:34	5	&s->draw
op	28:26	0:0	6	&
water	28:27	0:0	6	s
op	28:28	0:0	6	->
water	28:30	0:0	6	draw
arg	28:36	28:45	5	&s->color
op	28:36	0:0	6	&
water	28:37	0:0	6	s
op	28:38	0:0	6	->
water	28:40	0:0	6	color
arg	29:26	29:35	5	out->data
water	29:26	0:0	6	out
op	29:29	0:0	6	->
water	29:31	0:0	6	data
arg	29:37	29:50	5	out->linesize
water	29:37	0:0	6	out
op	29:40	0:0	6	->
water	29:42	0:0	6	linesize
arg	30:26	30:27	5	0
water	30:26	0:0	6	0
arg	30:29	30:30	5	0
water	30:29	0:0	6	0
arg	30:32	30:36	5	s->w
water	30:32	0:0	6	s
op	30:33	0:0	6	->
water	30:35	0:0	6	w
arg	30:38	30:42	5	s->y
water	30:38	0:0	6	s
op	30:39	0:0	6	->
water	30:41	0:0	6	y
water	30:43	0:0	4	;
water	31:4	0:0	4	}
if	33:4	37:4	2	(s -> h > s -> y + s -> in_h)
cond	33:8	33:25	3	s -> h > s -> y + s -> in_h
water	33:8	0:0	4	s
op	33:9	0:0	4	->
water	33:11	0:0	4	h
op	33:13	0:0	4	>
water	33:15	0:0	4	s
op	33:16	0:0	4	->
water	33:18	0:0	4	y
op	33:20	0:0	4	+
water	33:22	0:0	4	s
op	33:23	0:0	4	->
water	33:25	0:0	4	in_h
stmts	33:31	37:4	3	
water	33:31	0:0	4	{
call	34:8	36:72	4	ff_fill_rectangle
arg	34:26	34:34	5	&s->draw
op	34:26	0:0	6	&
water	34:27	0:0	6	s
op	34:28	0:0	6	->
water	34:30	0:0	6	draw
arg	34:36	34:45	5	&s->color
op	34:36	0:0	6	&
water	34:37	0:0	6	s
op	34:38	0:0	6	->
water	34:40	0:0	6	color
arg	35:26	35:35	5	out->data
water	35:26	0:0	6	out
op	35:29	0:0	6	->
water	35:31	0:0	6	data
arg	35:37	35:50	5	out->linesize
water	35:37	0:0	6	out
op	35:40	0:0	6	->
water	35:42	0:0	6	linesize
arg	36:26	36:27	5	0
water	36:26	0:0	6	0
arg	36:29	36:43	5	s->y+s->in_h
water	36:29	0:0	6	s
op	36:30	0:0	6	->
water	36:32	0:0	6	y
op	36:34	0:0	6	+
water	36:36	0:0	6	s
op	36:37	0:0	6	->
water	36:39	0:0	6	in_h
arg	36:45	36:49	5	s->w
water	36:45	0:0	6	s
op	36:46	0:0	6	->
water	36:48	0:0	6	w
arg	36:51	36:72	5	s->h-s->y-s->in_h
water	36:51	0:0	6	s
op	36:52	0:0	6	->
water	36:54	0:0	6	h
op	36:56	0:0	6	-
water	36:58	0:0	6	s
op	36:59	0:0	6	->
water	36:61	0:0	6	y
op	36:63	0:0	6	-
water	36:65	0:0	6	s
op	36:66	0:0	6	->
water	36:68	0:0	6	in_h
water	36:73	0:0	4	;
water	37:4	0:0	4	}
call	39:4	40:47	2	ff_fill_rectangle
arg	39:22	39:30	3	&s->draw
op	39:22	0:0	4	&
water	39:23	0:0	4	s
op	39:24	0:0	4	->
water	39:26	0:0	4	draw
arg	39:32	39:41	3	&s->color
op	39:32	0:0	4	&
water	39:33	0:0	4	s
op	39:34	0:0	4	->
water	39:36	0:0	4	color
arg	39:43	39:52	3	out->data
water	39:43	0:0	4	out
op	39:46	0:0	4	->
water	39:48	0:0	4	data
arg	39:54	39:67	3	out->linesize
water	39:54	0:0	4	out
op	39:57	0:0	4	->
water	39:59	0:0	4	linesize
arg	40:22	40:23	3	0
water	40:22	0:0	4	0
arg	40:25	40:29	3	s->y
water	40:25	0:0	4	s
op	40:26	0:0	4	->
water	40:28	0:0	4	y
arg	40:31	40:35	3	s->x
water	40:31	0:0	4	s
op	40:32	0:0	4	->
water	40:34	0:0	4	x
arg	40:37	40:47	3	in->height
water	40:37	0:0	4	in
op	40:39	0:0	4	->
water	40:41	0:0	4	height
water	40:48	0:0	2	;
if	41:4	45:4	2	(needs_copy)
cond	41:8	41:8	3	needs_copy
water	41:8	0:0	4	needs_copy
stmts	41:20	45:4	3	
water	41:20	0:0	4	{
call	42:8	44:65	4	ff_copy_rectangle2
arg	42:27	42:35	5	&s->draw
op	42:27	0:0	6	&
water	42:28	0:0	6	s
op	42:29	0:0	6	->
water	42:31	0:0	6	draw
arg	43:26	43:35	5	out->data
water	43:26	0:0	6	out
op	43:29	0:0	6	->
water	43:31	0:0	6	data
arg	43:37	43:50	5	out->linesize
water	43:37	0:0	6	out
op	43:40	0:0	6	->
water	43:42	0:0	6	linesize
arg	43:52	43:60	5	in->data
water	43:52	0:0	6	in
op	43:54	0:0	6	->
water	43:56	0:0	6	data
arg	43:62	43:74	5	in->linesize
water	43:62	0:0	6	in
op	43:64	0:0	6	->
water	43:66	0:0	6	linesize
arg	44:26	44:30	5	s->x
water	44:26	0:0	6	s
op	44:27	0:0	6	->
water	44:29	0:0	6	x
arg	44:32	44:36	5	s->y
water	44:32	0:0	6	s
op	44:33	0:0	6	->
water	44:35	0:0	6	y
arg	44:38	44:39	5	0
water	44:38	0:0	6	0
arg	44:41	44:42	5	0
water	44:41	0:0	6	0
arg	44:44	44:53	5	in->width
water	44:44	0:0	6	in
op	44:46	0:0	6	->
water	44:48	0:0	6	width
arg	44:55	44:65	5	in->height
water	44:55	0:0	6	in
op	44:57	0:0	6	->
water	44:59	0:0	6	height
water	44:66	0:0	4	;
water	45:4	0:0	4	}
call	47:4	49:32	2	ff_fill_rectangle
arg	47:22	47:30	3	&s->draw
op	47:22	0:0	4	&
water	47:23	0:0	4	s
op	47:24	0:0	4	->
water	47:26	0:0	4	draw
arg	47:32	47:41	3	&s->color
op	47:32	0:0	4	&
water	47:33	0:0	4	s
op	47:34	0:0	4	->
water	47:36	0:0	4	color
arg	47:43	47:52	3	out->data
water	47:43	0:0	4	out
op	47:46	0:0	4	->
water	47:48	0:0	4	data
arg	47:54	47:67	3	out->linesize
water	47:54	0:0	4	out
op	47:57	0:0	4	->
water	47:59	0:0	4	linesize
arg	48:22	48:36	3	s->x+s->in_w
water	48:22	0:0	4	s
op	48:23	0:0	4	->
water	48:25	0:0	4	x
op	48:27	0:0	4	+
water	48:29	0:0	4	s
op	48:30	0:0	4	->
water	48:32	0:0	4	in_w
arg	48:38	48:42	3	s->y
water	48:38	0:0	4	s
op	48:39	0:0	4	->
water	48:41	0:0	4	y
arg	48:44	48:65	3	s->w-s->x-s->in_w
water	48:44	0:0	4	s
op	48:45	0:0	4	->
water	48:47	0:0	4	w
op	48:49	0:0	4	-
water	48:51	0:0	4	s
op	48:52	0:0	4	->
water	48:54	0:0	4	x
op	48:56	0:0	4	-
water	48:58	0:0	4	s
op	48:59	0:0	4	->
water	48:61	0:0	4	in_w
arg	49:22	49:32	3	in->height
water	49:22	0:0	4	in
op	49:24	0:0	4	->
water	49:26	0:0	4	height
water	49:33	0:0	2	;
water	50:4	0:0	2	out
op	50:7	0:0	2	->
water	50:9	0:0	2	width
op	50:16	0:0	2	=
water	50:18	0:0	2	s
op	50:19	0:0	2	->
water	50:21	0:0	2	w
water	50:22	0:0	2	;
water	51:4	0:0	2	out
op	51:7	0:0	2	->
water	51:9	0:0	2	height
op	51:16	0:0	2	=
water	51:18	0:0	2	s
op	51:19	0:0	2	->
water	51:21	0:0	2	h
water	51:22	0:0	2	;
if	52:4	53:26	2	(in != out)
cond	52:8	52:14	3	in != out
water	52:8	0:0	4	in
op	52:11	0:0	4	!=
water	52:14	0:0	4	out
stmts	53:8	53:26	3	
call	53:8	53:25	4	av_frame_free
arg	53:22	53:25	5	&in
op	53:22	0:0	6	&
water	53:23	0:0	6	in
water	53:26	0:0	4	;
return	54:4	54:56	2	ff_filter_frame(inlink->dst->outputs[0],out)
call	54:11	54:55	3	ff_filter_frame
arg	54:27	54:50	4	inlink->dst->outputs[0]
water	54:27	0:0	5	inlink
op	54:33	0:0	5	->
water	54:35	0:0	5	dst
op	54:38	0:0	5	->
water	54:40	0:0	5	outputs
op	54:47	0:0	5	[
water	54:48	0:0	5	0
op	54:49	0:0	5	]
arg	54:52	54:55	4	out
water	54:52	0:0	5	out

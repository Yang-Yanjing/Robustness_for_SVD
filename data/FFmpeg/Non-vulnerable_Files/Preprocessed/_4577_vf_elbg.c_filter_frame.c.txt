func	1:0	69:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:60	2	AVFrame *	frame
stmnts	0:0	68:58	1	
decl	3:4	3:41	2	ELBGContext	*elbg
op	3:22	0:0	2	=
water	3:24	0:0	2	inlink
op	3:30	0:0	2	->
water	3:32	0:0	2	dst
op	3:35	0:0	2	->
water	3:37	0:0	2	priv
decl	4:4	4:15	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:15	2	int	j
water	4:12	0:0	2	,
decl	4:4	4:15	2	int	k
decl	5:4	5:19	2	uint8_t	*p
water	5:14	0:0	2	,
decl	5:4	5:19	2	uint8_t	*p0
decl	6:4	6:44	2	const uint8_t	r_idx
op	6:25	0:0	2	=
water	6:27	0:0	2	elbg
op	6:31	0:0	2	->
water	6:33	0:0	2	rgba_map
op	6:41	0:0	2	[
water	6:42	0:0	2	R
op	6:43	0:0	2	]
decl	7:4	7:44	2	const uint8_t	g_idx
op	7:25	0:0	2	=
water	7:27	0:0	2	elbg
op	7:31	0:0	2	->
water	7:33	0:0	2	rgba_map
op	7:41	0:0	2	[
water	7:42	0:0	2	G
op	7:43	0:0	2	]
decl	8:4	8:44	2	const uint8_t	b_idx
op	8:25	0:0	2	=
water	8:27	0:0	2	elbg
op	8:31	0:0	2	->
water	8:33	0:0	2	rgba_map
op	8:41	0:0	2	[
water	8:42	0:0	2	B
op	8:43	0:0	2	]
water	10:4	0:0	2	p0
op	10:7	0:0	2	=
water	10:9	0:0	2	frame
op	10:14	0:0	2	->
water	10:16	0:0	2	data
op	10:20	0:0	2	[
water	10:21	0:0	2	0
op	10:22	0:0	2	]
water	10:23	0:0	2	;
water	11:4	0:0	2	k
op	11:6	0:0	2	=
water	11:8	0:0	2	0
water	11:9	0:0	2	;
for	12:4	21:4	2	(i = 0 ;i < inlink -> h;i ++)
forinit	12:9	12:14	3	i = 0 ;
water	12:9	0:0	4	i
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	;
cond	12:16	12:28	3	i < inlink -> h
water	12:16	0:0	4	i
op	12:18	0:0	4	<
water	12:20	0:0	4	inlink
op	12:26	0:0	4	->
water	12:28	0:0	4	h
forexpr	12:31	12:32	3	i ++
water	12:31	0:0	4	i
op	12:32	0:0	4	++
stmts	12:36	21:4	3	
water	12:36	0:0	4	{
water	13:8	0:0	4	p
op	13:10	0:0	4	=
water	13:12	0:0	4	p0
water	13:14	0:0	4	;
for	14:8	19:8	4	(j = 0 ;j < inlink -> w;j ++)
forinit	14:13	14:18	5	j = 0 ;
water	14:13	0:0	6	j
op	14:15	0:0	6	=
water	14:17	0:0	6	0
water	14:18	0:0	6	;
cond	14:20	14:32	5	j < inlink -> w
water	14:20	0:0	6	j
op	14:22	0:0	6	<
water	14:24	0:0	6	inlink
op	14:30	0:0	6	->
water	14:32	0:0	6	w
forexpr	14:35	14:36	5	j ++
water	14:35	0:0	6	j
op	14:36	0:0	6	++
stmts	14:40	19:8	5	
water	14:40	0:0	6	{
water	15:12	0:0	6	elbg
op	15:16	0:0	6	->
water	15:18	0:0	6	codeword
op	15:26	0:0	6	[
water	15:27	0:0	6	k
op	15:28	0:0	6	++
op	15:30	0:0	6	]
op	15:32	0:0	6	=
water	15:34	0:0	6	p
op	15:35	0:0	6	[
water	15:36	0:0	6	r_idx
op	15:41	0:0	6	]
water	15:42	0:0	6	;
water	16:12	0:0	6	elbg
op	16:16	0:0	6	->
water	16:18	0:0	6	codeword
op	16:26	0:0	6	[
water	16:27	0:0	6	k
op	16:28	0:0	6	++
op	16:30	0:0	6	]
op	16:32	0:0	6	=
water	16:34	0:0	6	p
op	16:35	0:0	6	[
water	16:36	0:0	6	g_idx
op	16:41	0:0	6	]
water	16:42	0:0	6	;
water	17:12	0:0	6	elbg
op	17:16	0:0	6	->
water	17:18	0:0	6	codeword
op	17:26	0:0	6	[
water	17:27	0:0	6	k
op	17:28	0:0	6	++
op	17:30	0:0	6	]
op	17:32	0:0	6	=
water	17:34	0:0	6	p
op	17:35	0:0	6	[
water	17:36	0:0	6	b_idx
op	17:41	0:0	6	]
water	17:42	0:0	6	;
water	18:12	0:0	6	p
op	18:14	0:0	6	+=
water	18:17	0:0	6	elbg
op	18:21	0:0	6	->
water	18:23	0:0	6	pix_desc
op	18:31	0:0	6	->
water	18:33	0:0	6	nb_components
water	18:46	0:0	6	;
water	19:8	0:0	6	}
water	20:8	0:0	4	p0
op	20:11	0:0	4	+=
water	20:14	0:0	4	frame
op	20:19	0:0	4	->
water	20:21	0:0	4	linesize
op	20:29	0:0	4	[
water	20:30	0:0	4	0
op	20:31	0:0	4	]
water	20:32	0:0	4	;
water	21:4	0:0	4	}
call	23:4	25:69	2	avpriv_init_elbg
arg	23:21	23:35	3	elbg->codeword
water	23:21	0:0	4	elbg
op	23:25	0:0	4	->
water	23:27	0:0	4	codeword
arg	23:37	23:50	3	NB_COMPONENTS
water	23:37	0:0	4	NB_COMPONENTS
arg	23:52	23:73	3	elbg->codeword_length
water	23:52	0:0	4	elbg
op	23:56	0:0	4	->
water	23:58	0:0	4	codeword_length
arg	24:21	24:35	3	elbg->codebook
water	24:21	0:0	4	elbg
op	24:25	0:0	4	->
water	24:27	0:0	4	codebook
arg	24:37	24:58	3	elbg->codebook_length
water	24:37	0:0	4	elbg
op	24:41	0:0	4	->
water	24:43	0:0	4	codebook_length
arg	24:60	24:78	3	elbg->max_steps_nb
water	24:60	0:0	4	elbg
op	24:64	0:0	4	->
water	24:66	0:0	4	max_steps_nb
arg	25:21	25:57	3	elbg->codeword_closest_codebook_idxs
water	25:21	0:0	4	elbg
op	25:25	0:0	4	->
water	25:27	0:0	4	codeword_closest_codebook_idxs
arg	25:59	25:69	3	&elbg->lfg
op	25:59	0:0	4	&
water	25:60	0:0	4	elbg
op	25:64	0:0	4	->
water	25:66	0:0	4	lfg
water	25:70	0:0	2	;
call	26:4	28:67	2	avpriv_do_elbg
arg	26:19	26:33	3	elbg->codeword
water	26:19	0:0	4	elbg
op	26:23	0:0	4	->
water	26:25	0:0	4	codeword
arg	26:35	26:48	3	NB_COMPONENTS
water	26:35	0:0	4	NB_COMPONENTS
arg	26:50	26:71	3	elbg->codeword_length
water	26:50	0:0	4	elbg
op	26:54	0:0	4	->
water	26:56	0:0	4	codeword_length
arg	27:19	27:33	3	elbg->codebook
water	27:19	0:0	4	elbg
op	27:23	0:0	4	->
water	27:25	0:0	4	codebook
arg	27:35	27:56	3	elbg->codebook_length
water	27:35	0:0	4	elbg
op	27:39	0:0	4	->
water	27:41	0:0	4	codebook_length
arg	27:58	27:76	3	elbg->max_steps_nb
water	27:58	0:0	4	elbg
op	27:62	0:0	4	->
water	27:64	0:0	4	max_steps_nb
arg	28:19	28:55	3	elbg->codeword_closest_codebook_idxs
water	28:19	0:0	4	elbg
op	28:23	0:0	4	->
water	28:25	0:0	4	codeword_closest_codebook_idxs
arg	28:57	28:67	3	&elbg->lfg
op	28:57	0:0	4	&
water	28:58	0:0	4	elbg
op	28:62	0:0	4	->
water	28:64	0:0	4	lfg
water	28:68	0:0	2	;
if	29:4	53:4	2	(elbg -> pal8)
cond	29:8	29:14	3	elbg -> pal8
water	29:8	0:0	4	elbg
op	29:12	0:0	4	->
water	29:14	0:0	4	pal8
stmts	29:20	53:4	3	
water	29:20	0:0	4	{
decl	30:8	30:55	4	AVFilterLink	*outlink
op	30:30	0:0	4	=
water	30:32	0:0	4	inlink
op	30:38	0:0	4	->
water	30:40	0:0	4	dst
op	30:43	0:0	4	->
water	30:45	0:0	4	outputs
op	30:52	0:0	4	[
water	30:53	0:0	4	0
op	30:54	0:0	4	]
decl	31:8	31:75	4	AVFrame	*out
op	31:21	0:0	4	=
call	31:23	31:74	5	ff_get_video_buffer
arg	31:43	31:50	6	outlink
water	31:43	0:0	7	outlink
arg	31:52	31:62	6	outlink->w
water	31:52	0:0	7	outlink
op	31:59	0:0	7	->
water	31:61	0:0	7	w
arg	31:64	31:74	6	outlink->h
water	31:64	0:0	7	outlink
op	31:71	0:0	7	->
water	31:73	0:0	7	h
decl	32:8	32:21	4	uint32_t	*pal
if	33:8	34:34	4	(! out)
cond	33:12	33:13	5	! out
op	33:12	0:0	6	!
water	33:13	0:0	6	out
stmts	34:12	34:34	5	
return	34:12	34:34	6	AVERROR(ENOMEM)
call	34:19	34:33	7	AVERROR
arg	34:27	34:33	8	ENOMEM
water	34:27	0:0	9	ENOMEM
water	35:8	0:0	4	out
op	35:11	0:0	4	->
water	35:13	0:0	4	pts
op	35:17	0:0	4	=
water	35:19	0:0	4	frame
op	35:24	0:0	4	->
water	35:26	0:0	4	pts
water	35:29	0:0	4	;
call	36:8	36:28	4	av_frame_free
arg	36:22	36:28	5	&frame
op	36:22	0:0	6	&
water	36:23	0:0	6	frame
water	36:29	0:0	4	;
water	37:8	0:0	4	pal
op	37:12	0:0	4	=
water	37:14	0:0	4	(
water	37:15	0:0	4	uint32_t
op	37:24	0:0	4	*
water	37:25	0:0	4	)
water	37:26	0:0	4	out
op	37:29	0:0	4	->
water	37:31	0:0	4	data
op	37:35	0:0	4	[
water	37:36	0:0	4	1
op	37:37	0:0	4	]
water	37:38	0:0	4	;
water	38:8	0:0	4	p0
op	38:11	0:0	4	=
water	38:13	0:0	4	(
water	38:14	0:0	4	uint8_t
op	38:22	0:0	4	*
water	38:23	0:0	4	)
water	38:24	0:0	4	out
op	38:27	0:0	4	->
water	38:29	0:0	4	data
op	38:33	0:0	4	[
water	38:34	0:0	4	0
op	38:35	0:0	4	]
water	38:36	0:0	4	;
for	39:8	43:8	4	(i = 0 ;i < elbg -> codebook_length;i ++)
forinit	39:13	39:18	5	i = 0 ;
water	39:13	0:0	6	i
op	39:15	0:0	6	=
water	39:17	0:0	6	0
water	39:18	0:0	6	;
cond	39:20	39:30	5	i < elbg -> codebook_length
water	39:20	0:0	6	i
op	39:22	0:0	6	<
water	39:24	0:0	6	elbg
op	39:28	0:0	6	->
water	39:30	0:0	6	codebook_length
forexpr	39:47	39:48	5	i ++
water	39:47	0:0	6	i
op	39:48	0:0	6	++
stmts	39:52	43:8	5	
water	39:52	0:0	6	{
water	40:12	0:0	6	pal
op	40:15	0:0	6	[
water	40:16	0:0	6	i
op	40:17	0:0	6	]
op	40:19	0:0	6	=
water	40:21	0:0	6	(
water	40:22	0:0	6	elbg
op	40:26	0:0	6	->
water	40:28	0:0	6	codebook
op	40:36	0:0	6	[
water	40:37	0:0	6	i
op	40:38	0:0	6	*
water	40:39	0:0	6	3
op	40:42	0:0	6	]
op	40:44	0:0	6	<<
water	40:47	0:0	6	16
water	40:49	0:0	6	)
op	40:51	0:0	6	|
water	41:21	0:0	6	(
water	41:22	0:0	6	elbg
op	41:26	0:0	6	->
water	41:28	0:0	6	codebook
op	41:36	0:0	6	[
water	41:37	0:0	6	i
op	41:38	0:0	6	*
water	41:39	0:0	6	3
op	41:40	0:0	6	+
water	41:41	0:0	6	1
op	41:42	0:0	6	]
op	41:44	0:0	6	<<
water	41:48	0:0	6	8
water	41:49	0:0	6	)
op	41:51	0:0	6	|
water	42:22	0:0	6	elbg
op	42:26	0:0	6	->
water	42:28	0:0	6	codebook
op	42:36	0:0	6	[
water	42:37	0:0	6	i
op	42:38	0:0	6	*
water	42:39	0:0	6	3
op	42:40	0:0	6	+
water	42:41	0:0	6	2
op	42:42	0:0	6	]
water	42:43	0:0	6	;
water	43:8	0:0	6	}
water	44:8	0:0	4	k
op	44:10	0:0	4	=
water	44:12	0:0	4	0
water	44:13	0:0	4	;
for	45:8	51:8	4	(i = 0 ;i < inlink -> h;i ++)
forinit	45:13	45:18	5	i = 0 ;
water	45:13	0:0	6	i
op	45:15	0:0	6	=
water	45:17	0:0	6	0
water	45:18	0:0	6	;
cond	45:20	45:32	5	i < inlink -> h
water	45:20	0:0	6	i
op	45:22	0:0	6	<
water	45:24	0:0	6	inlink
op	45:30	0:0	6	->
water	45:32	0:0	6	h
forexpr	45:35	45:36	5	i ++
water	45:35	0:0	6	i
op	45:36	0:0	6	++
stmts	45:40	51:8	5	
water	45:40	0:0	6	{
water	46:12	0:0	6	p
op	46:14	0:0	6	=
water	46:16	0:0	6	p0
water	46:18	0:0	6	;
for	47:12	49:12	6	(j = 0 ;j < inlink -> w;j ++ , p ++)
forinit	47:17	47:22	7	j = 0 ;
water	47:17	0:0	8	j
op	47:19	0:0	8	=
water	47:21	0:0	8	0
water	47:22	0:0	8	;
cond	47:24	47:36	7	j < inlink -> w
water	47:24	0:0	8	j
op	47:26	0:0	8	<
water	47:28	0:0	8	inlink
op	47:34	0:0	8	->
water	47:36	0:0	8	w
forexpr	47:39	47:45	7	j ++ , p ++
water	47:39	0:0	8	j
op	47:40	0:0	8	++
water	47:42	0:0	8	,
water	47:44	0:0	8	p
op	47:45	0:0	8	++
stmts	47:49	49:12	7	
water	47:49	0:0	8	{
water	48:16	0:0	8	p
op	48:17	0:0	8	[
water	48:18	0:0	8	0
op	48:19	0:0	8	]
op	48:21	0:0	8	=
water	48:23	0:0	8	elbg
op	48:27	0:0	8	->
water	48:29	0:0	8	codeword_closest_codebook_idxs
op	48:59	0:0	8	[
water	48:60	0:0	8	k
op	48:61	0:0	8	++
op	48:63	0:0	8	]
water	48:64	0:0	8	;
water	49:12	0:0	8	}
water	50:12	0:0	6	p0
op	50:15	0:0	6	+=
water	50:18	0:0	6	out
op	50:21	0:0	6	->
water	50:23	0:0	6	linesize
op	50:31	0:0	6	[
water	50:32	0:0	6	0
op	50:33	0:0	6	]
water	50:34	0:0	6	;
water	51:8	0:0	6	}
return	52:8	52:44	4	ff_filter_frame(outlink,out)
call	52:15	52:43	5	ff_filter_frame
arg	52:31	52:38	6	outlink
water	52:31	0:0	7	outlink
arg	52:40	52:43	6	out
water	52:40	0:0	7	out
water	53:4	0:0	4	}
water	55:4	0:0	2	p0
op	55:7	0:0	2	=
water	55:9	0:0	2	frame
op	55:14	0:0	2	->
water	55:16	0:0	2	data
op	55:20	0:0	2	[
water	55:21	0:0	2	0
op	55:22	0:0	2	]
water	55:23	0:0	2	;
water	56:4	0:0	2	k
op	56:6	0:0	2	=
water	56:8	0:0	2	0
water	56:9	0:0	2	;
for	57:4	67:4	2	(i = 0 ;i < inlink -> h;i ++)
forinit	57:9	57:14	3	i = 0 ;
water	57:9	0:0	4	i
op	57:11	0:0	4	=
water	57:13	0:0	4	0
water	57:14	0:0	4	;
cond	57:16	57:28	3	i < inlink -> h
water	57:16	0:0	4	i
op	57:18	0:0	4	<
water	57:20	0:0	4	inlink
op	57:26	0:0	4	->
water	57:28	0:0	4	h
forexpr	57:31	57:32	3	i ++
water	57:31	0:0	4	i
op	57:32	0:0	4	++
stmts	57:36	67:4	3	
water	57:36	0:0	4	{
water	58:8	0:0	4	p
op	58:10	0:0	4	=
water	58:12	0:0	4	p0
water	58:14	0:0	4	;
for	59:8	65:8	4	(j = 0 ;j < inlink -> w;j ++)
forinit	59:13	59:18	5	j = 0 ;
water	59:13	0:0	6	j
op	59:15	0:0	6	=
water	59:17	0:0	6	0
water	59:18	0:0	6	;
cond	59:20	59:32	5	j < inlink -> w
water	59:20	0:0	6	j
op	59:22	0:0	6	<
water	59:24	0:0	6	inlink
op	59:30	0:0	6	->
water	59:32	0:0	6	w
forexpr	59:35	59:36	5	j ++
water	59:35	0:0	6	j
op	59:36	0:0	6	++
stmts	59:40	65:8	5	
water	59:40	0:0	6	{
decl	60:12	60:82	6	int	cb_idx
op	60:23	0:0	6	=
water	60:25	0:0	6	NB_COMPONENTS
op	60:39	0:0	6	*
water	60:41	0:0	6	elbg
op	60:45	0:0	6	->
water	60:47	0:0	6	codeword_closest_codebook_idxs
op	60:77	0:0	6	[
water	60:78	0:0	6	k
op	60:79	0:0	6	++
op	60:81	0:0	6	]
water	61:12	0:0	6	p
op	61:13	0:0	6	[
water	61:14	0:0	6	r_idx
op	61:19	0:0	6	]
op	61:21	0:0	6	=
water	61:23	0:0	6	elbg
op	61:27	0:0	6	->
water	61:29	0:0	6	codebook
op	61:37	0:0	6	[
water	61:38	0:0	6	cb_idx
op	61:44	0:0	6	]
water	61:45	0:0	6	;
water	62:12	0:0	6	p
op	62:13	0:0	6	[
water	62:14	0:0	6	g_idx
op	62:19	0:0	6	]
op	62:21	0:0	6	=
water	62:23	0:0	6	elbg
op	62:27	0:0	6	->
water	62:29	0:0	6	codebook
op	62:37	0:0	6	[
water	62:38	0:0	6	cb_idx
op	62:44	0:0	6	+
water	62:45	0:0	6	1
op	62:46	0:0	6	]
water	62:47	0:0	6	;
water	63:12	0:0	6	p
op	63:13	0:0	6	[
water	63:14	0:0	6	b_idx
op	63:19	0:0	6	]
op	63:21	0:0	6	=
water	63:23	0:0	6	elbg
op	63:27	0:0	6	->
water	63:29	0:0	6	codebook
op	63:37	0:0	6	[
water	63:38	0:0	6	cb_idx
op	63:44	0:0	6	+
water	63:45	0:0	6	2
op	63:46	0:0	6	]
water	63:47	0:0	6	;
water	64:12	0:0	6	p
op	64:14	0:0	6	+=
water	64:17	0:0	6	elbg
op	64:21	0:0	6	->
water	64:23	0:0	6	pix_desc
op	64:31	0:0	6	->
water	64:33	0:0	6	nb_components
water	64:46	0:0	6	;
water	65:8	0:0	6	}
water	66:8	0:0	4	p0
op	66:11	0:0	4	+=
water	66:14	0:0	4	frame
op	66:19	0:0	4	->
water	66:21	0:0	4	linesize
op	66:29	0:0	4	[
water	66:30	0:0	4	0
op	66:31	0:0	4	]
water	66:32	0:0	4	;
water	67:4	0:0	4	}
return	68:4	68:58	2	ff_filter_frame(inlink->dst->outputs[0],frame)
call	68:11	68:57	3	ff_filter_frame
arg	68:27	68:50	4	inlink->dst->outputs[0]
water	68:27	0:0	5	inlink
op	68:33	0:0	5	->
water	68:35	0:0	5	dst
op	68:38	0:0	5	->
water	68:40	0:0	5	outputs
op	68:47	0:0	5	[
water	68:48	0:0	5	0
op	68:49	0:0	5	]
arg	68:52	68:57	4	frame
water	68:52	0:0	5	frame

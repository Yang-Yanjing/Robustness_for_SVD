func	1:0	53:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:60	2	AVFrame *	frame
stmnts	0:0	52:58	1	
decl	3:4	3:45	2	SetPTSContext	*setpts
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
op	3:39	0:0	2	->
water	3:41	0:0	2	priv
decl	4:4	4:31	2	int64_t	in_pts
op	4:19	0:0	2	=
water	4:21	0:0	2	frame
op	4:26	0:0	2	->
water	4:28	0:0	2	pts
decl	5:4	5:12	2	double	d
if	6:4	9:4	2	(isnan (setpts -> var_values [ VAR_STARTPTS ] ))
cond	6:8	6:46	3	isnan (setpts -> var_values [ VAR_STARTPTS ] )
call	6:8	6:46	4	isnan
arg	6:14	6:46	5	setpts->var_values[VAR_STARTPTS]
water	6:14	0:0	6	setpts
op	6:20	0:0	6	->
water	6:22	0:0	6	var_values
op	6:32	0:0	6	[
water	6:33	0:0	6	VAR_STARTPTS
op	6:45	0:0	6	]
stmts	6:49	9:4	3	
water	6:49	0:0	4	{
water	7:8	0:0	4	setpts
op	7:14	0:0	4	->
water	7:16	0:0	4	var_values
op	7:26	0:0	4	[
water	7:27	0:0	4	VAR_STARTPTS
op	7:39	0:0	4	]
op	7:41	0:0	4	=
call	7:43	7:58	4	TS2D
arg	7:48	7:58	5	frame->pts
water	7:48	0:0	6	frame
op	7:53	0:0	6	->
water	7:55	0:0	6	pts
water	7:59	0:0	4	;
water	8:8	0:0	4	setpts
op	8:14	0:0	4	->
water	8:16	0:0	4	var_values
op	8:26	0:0	4	[
water	8:27	0:0	4	VAR_STARTT
op	8:39	0:0	4	]
op	8:41	0:0	4	=
call	8:43	8:77	4	TS2T
arg	8:48	8:58	5	frame->pts
water	8:48	0:0	6	frame
op	8:53	0:0	6	->
water	8:55	0:0	6	pts
arg	8:60	8:77	5	inlink->time_base
water	8:60	0:0	6	inlink
op	8:66	0:0	6	->
water	8:68	0:0	6	time_base
water	8:78	0:0	4	;
water	9:4	0:0	4	}
water	10:4	0:0	2	setpts
op	10:10	0:0	2	->
water	10:12	0:0	2	var_values
op	10:22	0:0	2	[
water	10:23	0:0	2	VAR_PTS
op	10:37	0:0	2	]
op	10:39	0:0	2	=
call	10:41	10:56	2	TS2D
arg	10:46	10:56	3	frame->pts
water	10:46	0:0	4	frame
op	10:51	0:0	4	->
water	10:53	0:0	4	pts
water	10:57	0:0	2	;
water	11:4	0:0	2	setpts
op	11:10	0:0	2	->
water	11:12	0:0	2	var_values
op	11:22	0:0	2	[
water	11:23	0:0	2	VAR_T
op	11:37	0:0	2	]
op	11:39	0:0	2	=
call	11:41	11:75	2	TS2T
arg	11:46	11:56	3	frame->pts
water	11:46	0:0	4	frame
op	11:51	0:0	4	->
water	11:53	0:0	4	pts
arg	11:58	11:75	3	inlink->time_base
water	11:58	0:0	4	inlink
op	11:64	0:0	4	->
water	11:66	0:0	4	time_base
water	11:76	0:0	2	;
water	12:4	0:0	2	setpts
op	12:10	0:0	2	->
water	12:12	0:0	2	var_values
op	12:22	0:0	2	[
water	12:23	0:0	2	VAR_POS
op	12:37	0:0	2	]
op	12:39	0:0	2	=
call	12:41	12:67	2	av_frame_get_pkt_pos
arg	12:62	12:67	3	frame
water	12:62	0:0	4	frame
op	12:69	0:0	2	==
op	12:72	0:0	2	-
water	12:73	0:0	2	1
water	12:75	0:0	2	?
water	12:77	0:0	2	NAN
water	12:81	0:0	2	:
call	12:83	12:109	2	av_frame_get_pkt_pos
arg	12:104	12:109	3	frame
water	12:104	0:0	4	frame
water	12:110	0:0	2	;
water	13:4	0:0	2	setpts
op	13:10	0:0	2	->
water	13:12	0:0	2	var_values
op	13:22	0:0	2	[
water	13:23	0:0	2	VAR_RTCTIME
op	13:37	0:0	2	]
op	13:39	0:0	2	=
call	13:41	13:52	2	av_gettime
water	13:53	0:0	2	;
if	14:4	16:4	2	(inlink -> type == AVMEDIA_TYPE_VIDEO)
cond	14:8	14:24	3	inlink -> type == AVMEDIA_TYPE_VIDEO
water	14:8	0:0	4	inlink
op	14:14	0:0	4	->
water	14:16	0:0	4	type
op	14:21	0:0	4	==
water	14:24	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	14:44	16:4	3	
water	14:44	0:0	4	{
water	15:8	0:0	4	setpts
op	15:14	0:0	4	->
water	15:16	0:0	4	var_values
op	15:26	0:0	4	[
water	15:27	0:0	4	VAR_INTERLACED
op	15:41	0:0	4	]
op	15:43	0:0	4	=
water	15:45	0:0	4	frame
op	15:50	0:0	4	->
water	15:52	0:0	4	interlaced_frame
water	15:68	0:0	4	;
water	16:4	0:0	4	}
else	16:6	19:4	2
stmts	16:11	19:4	3	
if	16:11	19:4	4	(inlink -> type == AVMEDIA_TYPE_AUDIO)
cond	16:15	16:31	5	inlink -> type == AVMEDIA_TYPE_AUDIO
water	16:15	0:0	6	inlink
op	16:21	0:0	6	->
water	16:23	0:0	6	type
op	16:28	0:0	6	==
water	16:31	0:0	6	AVMEDIA_TYPE_AUDIO
stmts	16:51	19:4	5	
water	16:51	0:0	6	{
water	17:8	0:0	6	setpts
op	17:14	0:0	6	->
water	17:16	0:0	6	var_values
op	17:26	0:0	6	[
water	17:27	0:0	6	VAR_S
op	17:32	0:0	6	]
op	17:34	0:0	6	=
water	17:36	0:0	6	frame
op	17:41	0:0	6	->
water	17:43	0:0	6	nb_samples
water	17:53	0:0	6	;
water	18:8	0:0	6	setpts
op	18:14	0:0	6	->
water	18:16	0:0	6	var_values
op	18:26	0:0	6	[
water	18:27	0:0	6	VAR_NB_SAMPLES
op	18:41	0:0	6	]
op	18:43	0:0	6	=
water	18:45	0:0	6	frame
op	18:50	0:0	6	->
water	18:52	0:0	6	nb_samples
water	18:62	0:0	6	;
water	19:4	0:0	6	}
water	20:4	0:0	2	d
op	20:6	0:0	2	=
call	20:8	20:59	2	av_expr_eval
arg	20:21	20:33	3	setpts->expr
water	20:21	0:0	4	setpts
op	20:27	0:0	4	->
water	20:29	0:0	4	expr
arg	20:35	20:53	3	setpts->var_values
water	20:35	0:0	4	setpts
op	20:41	0:0	4	->
water	20:43	0:0	4	var_values
arg	20:55	20:59	3	NULL
water	20:55	0:0	4	NULL
water	20:60	0:0	2	;
water	21:4	0:0	2	frame
op	21:9	0:0	2	->
water	21:11	0:0	2	pts
op	21:15	0:0	2	=
call	21:17	21:23	2	D2TS
arg	21:22	21:23	3	d
water	21:22	0:0	4	d
water	21:24	0:0	2	;
call	22:4	27:47	2	av_log
arg	22:11	22:22	3	inlink->dst
water	22:11	0:0	4	inlink
op	22:17	0:0	4	->
water	22:19	0:0	4	dst
arg	22:24	22:36	3	AV_LOG_TRACE
water	22:24	0:0	4	AV_LOG_TRACE
arg	23:12	23:44	3	"N:%"PRId64" PTS:%s T:%f POS:%s"
water	23:12	0:0	4	"N:%"
water	23:17	0:0	4	PRId64
water	23:23	0:0	4	" PTS:%s T:%f POS:%s"
arg	24:12	24:46	3	(int64_t)setpts->var_values[VAR_N]
water	24:12	0:0	4	(
water	24:13	0:0	4	int64_t
water	24:20	0:0	4	)
water	24:21	0:0	4	setpts
op	24:27	0:0	4	->
water	24:29	0:0	4	var_values
op	24:39	0:0	4	[
water	24:40	0:0	4	VAR_N
op	24:45	0:0	4	]
arg	25:12	25:47	3	d2istr(setpts->var_values[VAR_PTS])
call	25:12	25:46	4	d2istr
arg	25:19	25:46	5	setpts->var_values[VAR_PTS]
water	25:19	0:0	6	setpts
op	25:25	0:0	6	->
water	25:27	0:0	6	var_values
op	25:37	0:0	6	[
water	25:38	0:0	6	VAR_PTS
op	25:45	0:0	6	]
arg	26:12	26:37	3	setpts->var_values[VAR_T]
water	26:12	0:0	4	setpts
op	26:18	0:0	4	->
water	26:20	0:0	4	var_values
op	26:30	0:0	4	[
water	26:31	0:0	4	VAR_T
op	26:36	0:0	4	]
arg	27:12	27:47	3	d2istr(setpts->var_values[VAR_POS])
call	27:12	27:46	4	d2istr
arg	27:19	27:46	5	setpts->var_values[VAR_POS]
water	27:19	0:0	6	setpts
op	27:25	0:0	6	->
water	27:27	0:0	6	var_values
op	27:37	0:0	6	[
water	27:38	0:0	6	VAR_POS
op	27:45	0:0	6	]
water	27:48	0:0	2	;
switch	28:4	38:4	2	(inlink -> type)
cond	28:12	28:20	3	inlink -> type
water	28:12	0:0	4	inlink
op	28:18	0:0	4	->
water	28:20	0:0	4	type
stmts	28:26	38:4	3	
water	28:26	0:0	4	{
label	29:4	29:27	4	case AVMEDIA_TYPE_VIDEO :
call	30:8	31:59	4	av_log
arg	30:15	30:26	5	inlink->dst
water	30:15	0:0	6	inlink
op	30:21	0:0	6	->
water	30:23	0:0	6	dst
arg	30:28	30:40	5	AV_LOG_TRACE
water	30:28	0:0	6	AV_LOG_TRACE
arg	30:42	30:63	5	" INTERLACED:%"PRId64
water	30:42	0:0	6	" INTERLACED:%"
water	30:57	0:0	6	PRId64
arg	31:16	31:59	5	(int64_t)setpts->var_values[VAR_INTERLACED]
water	31:16	0:0	6	(
water	31:17	0:0	6	int64_t
water	31:24	0:0	6	)
water	31:25	0:0	6	setpts
op	31:31	0:0	6	->
water	31:33	0:0	6	var_values
op	31:43	0:0	6	[
water	31:44	0:0	6	VAR_INTERLACED
op	31:58	0:0	6	]
water	31:60	0:0	4	;
break	32:8	32:13	4	
label	33:4	33:27	4	case AVMEDIA_TYPE_AUDIO :
call	34:8	36:68	4	av_log
arg	34:15	34:26	5	inlink->dst
water	34:15	0:0	6	inlink
op	34:21	0:0	6	->
water	34:23	0:0	6	dst
arg	34:28	34:40	5	AV_LOG_TRACE
water	34:28	0:0	6	AV_LOG_TRACE
arg	34:42	34:93	5	" NB_SAMPLES:%"PRId64" NB_CONSUMED_SAMPLES:%"PRId64
water	34:42	0:0	6	" NB_SAMPLES:%"
water	34:57	0:0	6	PRId64
water	34:63	0:0	6	" NB_CONSUMED_SAMPLES:%"
water	34:87	0:0	6	PRId64
arg	35:16	35:59	5	(int64_t)setpts->var_values[VAR_NB_SAMPLES]
water	35:16	0:0	6	(
water	35:17	0:0	6	int64_t
water	35:24	0:0	6	)
water	35:25	0:0	6	setpts
op	35:31	0:0	6	->
water	35:33	0:0	6	var_values
op	35:43	0:0	6	[
water	35:44	0:0	6	VAR_NB_SAMPLES
op	35:58	0:0	6	]
arg	36:16	36:68	5	(int64_t)setpts->var_values[VAR_NB_CONSUMED_SAMPLES]
water	36:16	0:0	6	(
water	36:17	0:0	6	int64_t
water	36:24	0:0	6	)
water	36:25	0:0	6	setpts
op	36:31	0:0	6	->
water	36:33	0:0	6	var_values
op	36:43	0:0	6	[
water	36:44	0:0	6	VAR_NB_CONSUMED_SAMPLES
op	36:67	0:0	6	]
water	36:69	0:0	4	;
break	37:8	37:13	4	
water	38:4	0:0	4	}
call	39:4	39:96	2	av_log
arg	39:11	39:22	3	inlink->dst
water	39:11	0:0	4	inlink
op	39:17	0:0	4	->
water	39:19	0:0	4	dst
arg	39:24	39:36	3	AV_LOG_TRACE
water	39:24	0:0	4	AV_LOG_TRACE
arg	39:38	39:57	3	" -> PTS:%s T:%f\n"
water	39:38	0:0	4	" -> PTS:%s T:%f\n"
arg	39:59	39:68	3	d2istr(d)
call	39:59	39:67	4	d2istr
arg	39:66	39:67	5	d
water	39:66	0:0	6	d
arg	39:70	39:96	3	TS2T(d,inlink->time_base)
call	39:70	39:95	4	TS2T
arg	39:75	39:76	5	d
water	39:75	0:0	6	d
arg	39:78	39:95	5	inlink->time_base
water	39:78	0:0	6	inlink
op	39:84	0:0	6	->
water	39:86	0:0	6	time_base
water	39:97	0:0	2	;
if	40:4	42:4	2	(inlink -> type == AVMEDIA_TYPE_VIDEO)
cond	40:8	40:24	3	inlink -> type == AVMEDIA_TYPE_VIDEO
water	40:8	0:0	4	inlink
op	40:14	0:0	4	->
water	40:16	0:0	4	type
op	40:21	0:0	4	==
water	40:24	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	40:44	42:4	3	
water	40:44	0:0	4	{
water	41:8	0:0	4	setpts
op	41:14	0:0	4	->
water	41:16	0:0	4	var_values
op	41:26	0:0	4	[
water	41:27	0:0	4	VAR_N
op	41:32	0:0	4	]
op	41:34	0:0	4	+=
water	41:37	0:0	4	1
op	41:38	0:0	4	.
water	41:39	0:0	4	0
water	41:40	0:0	4	;
water	42:4	0:0	4	}
else	42:6	44:4	2
stmts	42:11	44:4	3	
water	42:11	0:0	4	{
water	43:8	0:0	4	setpts
op	43:14	0:0	4	->
water	43:16	0:0	4	var_values
op	43:26	0:0	4	[
water	43:27	0:0	4	VAR_N
op	43:32	0:0	4	]
op	43:34	0:0	4	+=
water	43:37	0:0	4	frame
op	43:42	0:0	4	->
water	43:44	0:0	4	nb_samples
water	43:54	0:0	4	;
water	44:4	0:0	4	}
water	45:4	0:0	2	setpts
op	45:10	0:0	2	->
water	45:12	0:0	2	var_values
op	45:22	0:0	2	[
water	45:23	0:0	2	VAR_PREV_INPTS
op	45:38	0:0	2	]
op	45:40	0:0	2	=
call	45:42	45:53	2	TS2D
arg	45:47	45:53	3	in_pts
water	45:47	0:0	4	in_pts
water	45:54	0:0	2	;
water	46:4	0:0	2	setpts
op	46:10	0:0	2	->
water	46:12	0:0	2	var_values
op	46:22	0:0	2	[
water	46:23	0:0	2	VAR_PREV_INT
op	46:38	0:0	2	]
op	46:40	0:0	2	=
call	46:42	46:72	2	TS2T
arg	46:47	46:53	3	in_pts
water	46:47	0:0	4	in_pts
arg	46:55	46:72	3	inlink->time_base
water	46:55	0:0	4	inlink
op	46:61	0:0	4	->
water	46:63	0:0	4	time_base
water	46:73	0:0	2	;
water	47:4	0:0	2	setpts
op	47:10	0:0	2	->
water	47:12	0:0	2	var_values
op	47:22	0:0	2	[
water	47:23	0:0	2	VAR_PREV_OUTPTS
op	47:38	0:0	2	]
op	47:40	0:0	2	=
call	47:42	47:57	2	TS2D
arg	47:47	47:57	3	frame->pts
water	47:47	0:0	4	frame
op	47:52	0:0	4	->
water	47:54	0:0	4	pts
water	47:58	0:0	2	;
water	48:4	0:0	2	setpts
op	48:10	0:0	2	->
water	48:12	0:0	2	var_values
op	48:22	0:0	2	[
water	48:23	0:0	2	VAR_PREV_OUTT
op	48:36	0:0	2	]
op	48:40	0:0	2	=
call	48:42	48:76	2	TS2T
arg	48:47	48:57	3	frame->pts
water	48:47	0:0	4	frame
op	48:52	0:0	4	->
water	48:54	0:0	4	pts
arg	48:59	48:76	3	inlink->time_base
water	48:59	0:0	4	inlink
op	48:65	0:0	4	->
water	48:67	0:0	4	time_base
water	48:77	0:0	2	;
if	49:4	51:4	2	(setpts -> type == AVMEDIA_TYPE_AUDIO)
cond	49:8	49:24	3	setpts -> type == AVMEDIA_TYPE_AUDIO
water	49:8	0:0	4	setpts
op	49:14	0:0	4	->
water	49:16	0:0	4	type
op	49:21	0:0	4	==
water	49:24	0:0	4	AVMEDIA_TYPE_AUDIO
stmts	49:44	51:4	3	
water	49:44	0:0	4	{
water	50:8	0:0	4	setpts
op	50:14	0:0	4	->
water	50:16	0:0	4	var_values
op	50:26	0:0	4	[
water	50:27	0:0	4	VAR_NB_CONSUMED_SAMPLES
op	50:50	0:0	4	]
op	50:52	0:0	4	+=
water	50:55	0:0	4	frame
op	50:60	0:0	4	->
water	50:62	0:0	4	nb_samples
water	50:72	0:0	4	;
water	51:4	0:0	4	}
return	52:4	52:58	2	ff_filter_frame(inlink->dst->outputs[0],frame)
call	52:11	52:57	3	ff_filter_frame
arg	52:27	52:50	4	inlink->dst->outputs[0]
water	52:27	0:0	5	inlink
op	52:33	0:0	5	->
water	52:35	0:0	5	dst
op	52:38	0:0	5	->
water	52:40	0:0	5	outputs
op	52:47	0:0	5	[
water	52:48	0:0	5	0
op	52:49	0:0	5	]
arg	52:52	52:57	4	frame
water	52:52	0:0	5	frame

func	1:0	40:0	0	static int	parse_outputs
params	1:24	0:0	1	
param	1:25	1:41	2	const char * *	buf
param	1:43	1:70	2	AVFilterInOut * *	curr_inputs
param	2:25	2:52	2	AVFilterInOut * *	open_inputs
param	3:25	3:53	2	AVFilterInOut * *	open_outputs
param	3:55	3:68	2	void *	log_ctx
stmnts	0:0	39:14	1	
decl	5:4	5:20	2	int	ret
water	5:11	0:0	2	,
decl	5:4	5:20	2	int	pad
op	5:17	0:0	2	=
water	5:19	0:0	2	0
while	6:4	38:4	2	(* * buf == '[')
cond	6:11	6:20	3	* * buf == '['
op	6:11	0:0	4	*
op	6:12	0:0	4	*
water	6:13	0:0	4	buf
op	6:17	0:0	4	==
water	6:20	0:0	4	'['
stmts	6:25	38:4	3	
water	6:25	0:0	4	{
decl	7:8	7:50	4	char	*name
op	7:19	0:0	4	=
call	7:21	7:49	5	parse_link_name
arg	7:37	7:40	6	buf
water	7:37	0:0	7	buf
arg	7:42	7:49	6	log_ctx
water	7:42	0:0	7	log_ctx
decl	8:8	8:28	4	AVFilterInOut	*match
decl	9:8	9:43	4	AVFilterInOut	*input
op	9:29	0:0	4	=
op	9:31	0:0	4	*
water	9:32	0:0	4	curr_inputs
if	10:8	11:34	4	(! name)
cond	10:12	10:13	5	! name
op	10:12	0:0	6	!
water	10:13	0:0	6	name
stmts	11:12	11:34	5	
return	11:12	11:34	6	AVERROR(EINVAL)
call	11:19	11:33	7	AVERROR
arg	11:27	11:33	8	EINVAL
water	11:27	0:0	9	EINVAL
if	12:8	17:8	4	(! input)
cond	12:12	12:13	5	! input
op	12:12	0:0	6	!
water	12:13	0:0	6	input
stmts	12:20	17:8	5	
water	12:20	0:0	6	{
call	13:12	14:80	6	av_log
arg	13:19	13:26	7	log_ctx
water	13:19	0:0	8	log_ctx
arg	13:28	13:40	7	AV_LOG_ERROR
water	13:28	0:0	8	AV_LOG_ERROR
arg	14:19	14:74	7	"No output pad can be associated to link label '%s'.\n"
water	14:19	0:0	8	"No output pad can be associated to link label '%s'.\n"
arg	14:76	14:80	7	name
water	14:76	0:0	8	name
water	14:81	0:0	6	;
call	15:12	15:24	6	av_free
arg	15:20	15:24	7	name
water	15:20	0:0	8	name
water	15:25	0:0	6	;
return	16:12	16:34	6	AVERROR(EINVAL)
call	16:19	16:33	7	AVERROR
arg	16:27	16:33	8	EINVAL
water	16:27	0:0	9	EINVAL
water	17:8	0:0	6	}
op	18:8	0:0	4	*
water	18:9	0:0	4	curr_inputs
op	18:21	0:0	4	=
water	18:23	0:0	4	(
op	18:24	0:0	4	*
water	18:25	0:0	4	curr_inputs
water	18:36	0:0	4	)
op	18:37	0:0	4	->
water	18:39	0:0	4	next
water	18:43	0:0	4	;
water	20:8	0:0	4	match
op	20:14	0:0	4	=
call	20:16	20:47	4	extract_inout
arg	20:30	20:34	5	name
water	20:30	0:0	6	name
arg	20:36	20:47	5	open_inputs
water	20:36	0:0	6	open_inputs
water	20:48	0:0	4	;
if	21:8	31:8	4	(match)
cond	21:12	21:12	5	match
water	21:12	0:0	6	match
stmts	21:19	31:8	5	
water	21:19	0:0	6	{
if	22:12	26:12	6	(( ret =link_filter (input -> filter_ctx ,input -> pad_idx ,match -> filter_ctx ,match -> pad_idx ,log_ctx ) ) < 0)
cond	22:16	23:82	7	( ret =link_filter (input -> filter_ctx ,input -> pad_idx ,match -> filter_ctx ,match -> pad_idx ,log_ctx ) ) < 0
water	22:16	0:0	8	(
water	22:17	0:0	8	ret
op	22:21	0:0	8	=
call	22:23	23:77	8	link_filter
arg	22:35	22:52	9	input->filter_ctx
water	22:35	0:0	10	input
op	22:40	0:0	10	->
water	22:42	0:0	10	filter_ctx
arg	22:54	22:68	9	input->pad_idx
water	22:54	0:0	10	input
op	22:59	0:0	10	->
water	22:61	0:0	10	pad_idx
arg	23:35	23:52	9	match->filter_ctx
water	23:35	0:0	10	match
op	23:40	0:0	10	->
water	23:42	0:0	10	filter_ctx
arg	23:54	23:68	9	match->pad_idx
water	23:54	0:0	10	match
op	23:59	0:0	10	->
water	23:61	0:0	10	pad_idx
arg	23:70	23:77	9	log_ctx
water	23:70	0:0	10	log_ctx
water	23:78	0:0	8	)
op	23:80	0:0	8	<
water	23:82	0:0	8	0
stmts	23:85	26:12	7	
water	23:85	0:0	8	{
call	24:16	24:28	8	av_free
arg	24:24	24:28	9	name
water	24:24	0:0	10	name
water	24:29	0:0	8	;
return	25:16	25:26	8	ret
water	25:23	0:0	9	ret
water	26:12	0:0	8	}
call	27:12	27:33	6	av_freep
arg	27:21	27:33	7	&match->name
op	27:21	0:0	8	&
water	27:22	0:0	8	match
op	27:27	0:0	8	->
water	27:29	0:0	8	name
water	27:34	0:0	6	;
call	28:12	28:26	6	av_freep
arg	28:21	28:26	7	&name
op	28:21	0:0	8	&
water	28:22	0:0	8	name
water	28:27	0:0	6	;
call	29:12	29:27	6	av_freep
arg	29:21	29:27	7	&match
op	29:21	0:0	8	&
water	29:22	0:0	8	match
water	29:28	0:0	6	;
call	30:12	30:27	6	av_freep
arg	30:21	30:27	7	&input
op	30:21	0:0	8	&
water	30:22	0:0	8	input
water	30:28	0:0	6	;
water	31:8	0:0	6	}
else	31:10	35:8	4
stmts	31:15	35:8	5	
water	31:15	0:0	6	{
water	33:12	0:0	6	input
op	33:17	0:0	6	->
water	33:19	0:0	6	name
op	33:24	0:0	6	=
water	33:26	0:0	6	name
water	33:30	0:0	6	;
call	34:12	34:44	6	insert_inout
arg	34:25	34:37	7	open_outputs
water	34:25	0:0	8	open_outputs
arg	34:39	34:44	7	input
water	34:39	0:0	8	input
water	34:45	0:0	6	;
water	35:8	0:0	6	}
op	36:8	0:0	4	*
water	36:9	0:0	4	buf
op	36:13	0:0	4	+=
call	36:16	36:40	4	strspn
arg	36:23	36:27	5	*buf
op	36:23	0:0	6	*
water	36:24	0:0	6	buf
arg	36:29	36:40	5	WHITESPACES
water	36:29	0:0	6	WHITESPACES
water	36:41	0:0	4	;
water	37:8	0:0	4	pad
op	37:11	0:0	4	++
water	37:13	0:0	4	;
water	38:4	0:0	4	}
return	39:4	39:14	2	pad
water	39:11	0:0	3	pad

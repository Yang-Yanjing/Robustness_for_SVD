func	1:0	28:0	0	static void	imdct_and_windowing_ld
params	1:34	0:0	1	
param	1:35	1:49	2	AACContext *	ac
param	1:51	1:76	2	SingleChannelElement *	sce
stmnts	0:0	27:50	1	
decl	3:4	3:44	2	IndividualChannelStream	*ics
op	3:33	0:0	2	=
op	3:35	0:0	2	&
water	3:36	0:0	2	sce
op	3:39	0:0	2	->
water	3:41	0:0	2	ics
decl	4:4	4:33	2	INTFLOAT	*in
op	4:20	0:0	2	=
water	4:22	0:0	2	sce
op	4:25	0:0	2	->
water	4:27	0:0	2	coeffs
decl	5:4	5:30	2	INTFLOAT	*out
op	5:20	0:0	2	=
water	5:22	0:0	2	sce
op	5:25	0:0	2	->
water	5:27	0:0	2	ret
decl	6:4	6:32	2	INTFLOAT	*saved
op	6:20	0:0	2	=
water	6:22	0:0	2	sce
op	6:25	0:0	2	->
water	6:27	0:0	2	saved
decl	7:4	7:33	2	INTFLOAT	*buf
op	7:19	0:0	2	=
water	7:21	0:0	2	ac
op	7:23	0:0	2	->
water	7:25	0:0	2	buf_mdct
decl	9:4	9:9	2	int	i
call	12:4	12:45	2	ac->mdct.imdct_half
arg	12:24	12:36	3	&ac->mdct_ld
op	12:24	0:0	4	&
water	12:25	0:0	4	ac
op	12:27	0:0	4	->
water	12:29	0:0	4	mdct_ld
arg	12:38	12:41	3	buf
water	12:38	0:0	4	buf
arg	12:43	12:45	3	in
water	12:43	0:0	4	in
water	12:46	0:0	2	;
for	14:4	15:34	2	(i = 0 ;i < 1024;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	i < 1024
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	1024
forexpr	14:26	14:27	3	i ++
water	14:26	0:0	4	i
op	14:27	0:0	4	++
stmts	15:8	15:34	3	
water	15:8	0:0	4	buf
op	15:11	0:0	4	[
water	15:12	0:0	4	i
op	15:13	0:0	4	]
op	15:15	0:0	4	=
water	15:17	0:0	4	(
water	15:18	0:0	4	buf
op	15:21	0:0	4	[
water	15:22	0:0	4	i
op	15:23	0:0	4	]
op	15:25	0:0	4	+
water	15:27	0:0	4	2
water	15:28	0:0	4	)
op	15:30	0:0	4	>>
water	15:33	0:0	4	2
water	15:34	0:0	4	;
if	18:4	23:4	2	(ics -> use_kb_window [ 1 ])
cond	18:8	18:28	3	ics -> use_kb_window [ 1 ]
water	18:8	0:0	4	ics
op	18:11	0:0	4	->
water	18:13	0:0	4	use_kb_window
op	18:26	0:0	4	[
water	18:27	0:0	4	1
op	18:28	0:0	4	]
stmts	18:31	23:4	3	
water	18:31	0:0	4	{
call	20:8	20:45	4	memcpy
arg	20:15	20:18	5	out
water	20:15	0:0	6	out
arg	20:20	20:25	5	saved
water	20:20	0:0	6	saved
arg	20:27	20:45	5	192*sizeof(*out)
water	20:27	0:0	6	192
op	20:31	0:0	6	*
op	20:33	0:0	6	sizeof
water	20:39	0:0	6	(
op	20:40	0:0	6	*
water	20:41	0:0	6	out
water	20:44	0:0	6	)
water	20:46	0:0	4	;
call	21:8	21:93	4	ac->fdsp->vector_fmul_window
arg	21:37	21:46	5	out+192
water	21:37	0:0	6	out
op	21:41	0:0	6	+
water	21:43	0:0	6	192
arg	21:48	21:59	5	saved+192
water	21:48	0:0	6	saved
op	21:54	0:0	6	+
water	21:56	0:0	6	192
arg	21:61	21:64	5	buf
water	21:61	0:0	6	buf
arg	21:66	21:89	5	AAC_RENAME(ff_sine_128)
call	21:66	21:88	6	AAC_RENAME
arg	21:77	21:88	7	ff_sine_128
water	21:77	0:0	8	ff_sine_128
arg	21:91	21:93	5	64
water	21:91	0:0	6	64
water	21:94	0:0	4	;
call	22:8	22:75	4	memcpy
arg	22:36	22:45	5	out+320
water	22:36	0:0	6	out
op	22:40	0:0	6	+
water	22:42	0:0	6	320
arg	22:47	22:55	5	buf+64
water	22:47	0:0	6	buf
op	22:51	0:0	6	+
water	22:53	0:0	6	64
arg	22:57	22:75	5	192*sizeof(*out)
water	22:57	0:0	6	192
op	22:61	0:0	6	*
op	22:63	0:0	6	sizeof
water	22:69	0:0	6	(
op	22:70	0:0	6	*
water	22:71	0:0	6	out
water	22:74	0:0	6	)
water	22:76	0:0	4	;
water	23:4	0:0	4	}
else	23:6	25:4	2
stmts	23:11	25:4	3	
water	23:11	0:0	4	{
call	24:8	24:82	4	ac->fdsp->vector_fmul_window
arg	24:37	24:40	5	out
water	24:37	0:0	6	out
arg	24:42	24:47	5	saved
water	24:42	0:0	6	saved
arg	24:49	24:52	5	buf
water	24:49	0:0	6	buf
arg	24:54	24:77	5	AAC_RENAME(ff_sine_512)
call	24:54	24:76	6	AAC_RENAME
arg	24:65	24:76	7	ff_sine_512
water	24:65	0:0	8	ff_sine_512
arg	24:79	24:82	5	256
water	24:79	0:0	6	256
water	24:83	0:0	4	;
water	25:4	0:0	4	}
call	27:4	27:49	2	memcpy
arg	27:11	27:16	3	saved
water	27:11	0:0	4	saved
arg	27:18	27:27	3	buf+256
water	27:18	0:0	4	buf
op	27:22	0:0	4	+
water	27:24	0:0	4	256
arg	27:29	27:49	3	256*sizeof(*saved)
water	27:29	0:0	4	256
op	27:33	0:0	4	*
op	27:35	0:0	4	sizeof
water	27:41	0:0	4	(
op	27:42	0:0	4	*
water	27:43	0:0	4	saved
water	27:48	0:0	4	)
water	27:50	0:0	2	;

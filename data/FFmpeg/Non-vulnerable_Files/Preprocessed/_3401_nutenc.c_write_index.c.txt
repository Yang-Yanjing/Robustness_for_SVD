func	1:0	41:0	0	static int	write_index
params	1:22	0:0	1	
param	1:23	1:38	2	NUTContext *	nut
param	1:40	1:55	2	AVIOContext *	bc
stmnts	0:0	40:12	1	
decl	2:4	2:9	2	int	i
decl	3:4	3:32	2	Syncpoint	dummy
op	3:19	0:0	2	=
water	3:21	0:0	2	{
op	3:23	0:0	2	.
water	3:24	0:0	2	pos
op	3:27	0:0	2	=
water	3:29	0:0	2	0
water	3:31	0:0	2	}
decl	4:4	4:38	2	Syncpoint	*next_node[2]
op	4:28	0:0	2	=
water	4:30	0:0	2	{
water	4:32	0:0	2	NULL
water	4:37	0:0	2	}
decl	5:4	5:36	2	int64_t	startpos
op	5:21	0:0	2	=
call	5:23	5:35	3	avio_tell
arg	5:33	5:35	4	bc
water	5:33	0:0	5	bc
decl	6:4	6:24	2	int64_t	payload_size
call	7:4	7:49	2	put_tt
arg	7:11	7:14	3	nut
water	7:11	0:0	4	nut
arg	7:16	7:31	3	nut->max_pts_tb
water	7:16	0:0	4	nut
op	7:19	0:0	4	->
water	7:21	0:0	4	max_pts_tb
arg	7:33	7:35	3	bc
water	7:33	0:0	4	bc
arg	7:37	7:49	3	nut->max_pts
water	7:37	0:0	4	nut
op	7:40	0:0	4	->
water	7:42	0:0	4	max_pts
water	7:50	0:0	2	;
call	8:4	8:30	2	ff_put_v
arg	8:13	8:15	3	bc
water	8:13	0:0	4	bc
arg	8:17	8:30	3	nut->sp_count
water	8:17	0:0	4	nut
op	8:20	0:0	4	->
water	8:22	0:0	4	sp_count
water	8:31	0:0	2	;
for	9:4	13:4	2	(i = 0 ;i < nut -> sp_count;i ++)
forinit	9:9	9:12	3	i = 0 ;
water	9:9	0:0	4	i
op	9:10	0:0	4	=
water	9:11	0:0	4	0
water	9:12	0:0	4	;
cond	9:14	9:21	3	i < nut -> sp_count
water	9:14	0:0	4	i
op	9:15	0:0	4	<
water	9:16	0:0	4	nut
op	9:19	0:0	4	->
water	9:21	0:0	4	sp_count
forexpr	9:31	9:32	3	i ++
water	9:31	0:0	4	i
op	9:32	0:0	4	++
stmts	9:36	13:4	3	
water	9:36	0:0	4	{
call	10:8	10:91	4	av_tree_find
arg	10:21	10:36	5	nut->syncpoints
water	10:21	0:0	6	nut
op	10:24	0:0	6	->
water	10:26	0:0	6	syncpoints
arg	10:38	10:44	5	&dummy
op	10:38	0:0	6	&
water	10:39	0:0	6	dummy
arg	10:46	10:72	5	(void*)ff_nut_sp_pos_cmp
water	10:46	0:0	6	(
water	10:47	0:0	6	void
op	10:52	0:0	6	*
water	10:53	0:0	6	)
water	10:55	0:0	6	ff_nut_sp_pos_cmp
arg	10:74	10:91	5	(void**)next_node
water	10:74	0:0	6	(
water	10:75	0:0	6	void
op	10:79	0:0	6	*
op	10:80	0:0	6	*
water	10:81	0:0	6	)
water	10:82	0:0	6	next_node
water	10:92	0:0	4	;
call	11:8	11:62	4	ff_put_v
arg	11:17	11:19	5	bc
water	11:17	0:0	6	bc
arg	11:21	11:62	5	(next_node[1]->pos>>4)-(dummy.pos>>4)
water	11:21	0:0	6	(
water	11:22	0:0	6	next_node
op	11:31	0:0	6	[
water	11:32	0:0	6	1
op	11:33	0:0	6	]
op	11:34	0:0	6	->
water	11:36	0:0	6	pos
op	11:40	0:0	6	>>
water	11:43	0:0	6	4
water	11:44	0:0	6	)
op	11:46	0:0	6	-
water	11:48	0:0	6	(
water	11:49	0:0	6	dummy
op	11:54	0:0	6	.
water	11:55	0:0	6	pos
op	11:58	0:0	6	>>
water	11:60	0:0	6	4
water	11:61	0:0	6	)
water	11:63	0:0	4	;
water	12:8	0:0	4	dummy
op	12:13	0:0	4	.
water	12:14	0:0	4	pos
op	12:18	0:0	4	=
water	12:20	0:0	4	next_node
op	12:29	0:0	4	[
water	12:30	0:0	4	1
op	12:31	0:0	4	]
op	12:32	0:0	4	->
water	12:34	0:0	4	pos
water	12:37	0:0	4	;
water	13:4	0:0	4	}
for	14:4	37:4	2	(i = 0 ;i < nut -> avf -> nb_streams;i ++)
forinit	14:9	14:12	3	i = 0 ;
water	14:9	0:0	4	i
op	14:10	0:0	4	=
water	14:11	0:0	4	0
water	14:12	0:0	4	;
cond	14:14	14:26	3	i < nut -> avf -> nb_streams
water	14:14	0:0	4	i
op	14:15	0:0	4	<
water	14:16	0:0	4	nut
op	14:19	0:0	4	->
water	14:21	0:0	4	avf
op	14:24	0:0	4	->
water	14:26	0:0	4	nb_streams
forexpr	14:38	14:39	3	i ++
water	14:38	0:0	4	i
op	14:39	0:0	4	++
stmts	14:43	37:4	3	
water	14:43	0:0	4	{
decl	15:8	15:43	4	StreamContext	*nus
op	15:26	0:0	4	=
op	15:28	0:0	4	&
water	15:29	0:0	4	nut
op	15:32	0:0	4	->
water	15:34	0:0	4	stream
op	15:40	0:0	4	[
water	15:41	0:0	4	i
op	15:42	0:0	4	]
decl	16:8	16:28	4	int64_t	last_pts
op	16:24	0:0	4	=
op	16:26	0:0	4	-
water	16:27	0:0	4	1
decl	17:8	17:16	4	int	j
water	17:13	0:0	4	,
decl	17:8	17:16	4	int	k
for	18:8	36:8	4	(j = 0 ;j < nut -> sp_count;j ++)
forinit	18:13	18:16	5	j = 0 ;
water	18:13	0:0	6	j
op	18:14	0:0	6	=
water	18:15	0:0	6	0
water	18:16	0:0	6	;
cond	18:18	18:25	5	j < nut -> sp_count
water	18:18	0:0	6	j
op	18:19	0:0	6	<
water	18:20	0:0	6	nut
op	18:23	0:0	6	->
water	18:25	0:0	6	sp_count
forexpr	18:35	18:36	5	j ++
water	18:35	0:0	6	j
op	18:36	0:0	6	++
stmts	18:40	36:8	5	
water	18:40	0:0	6	{
decl	19:12	19:20	6	int	flag
decl	20:12	20:21	6	int	n
op	20:18	0:0	6	=
water	20:20	0:0	6	0
if	21:12	24:12	6	(j && nus -> keyframe_pts [ j ] == nus -> keyframe_pts [ j - 1 ])
cond	21:16	21:66	7	j && nus -> keyframe_pts [ j ] == nus -> keyframe_pts [ j - 1 ]
water	21:16	0:0	8	j
op	21:18	0:0	8	&&
water	21:21	0:0	8	nus
op	21:24	0:0	8	->
water	21:26	0:0	8	keyframe_pts
op	21:38	0:0	8	[
water	21:39	0:0	8	j
op	21:40	0:0	8	]
op	21:42	0:0	8	==
water	21:45	0:0	8	nus
op	21:48	0:0	8	->
water	21:50	0:0	8	keyframe_pts
op	21:62	0:0	8	[
water	21:63	0:0	8	j
op	21:64	0:0	8	-
water	21:65	0:0	8	1
op	21:66	0:0	8	]
stmts	21:69	24:12	7	
water	21:69	0:0	8	{
call	22:16	22:85	8	av_log
arg	22:23	22:31	9	nut->avf
water	22:23	0:0	10	nut
op	22:26	0:0	10	->
water	22:28	0:0	10	avf
arg	22:33	22:47	9	AV_LOG_WARNING
water	22:33	0:0	10	AV_LOG_WARNING
arg	22:49	22:85	9	"Multiple keyframes with same PTS\n"
water	22:49	0:0	10	"Multiple keyframes with same PTS\n"
water	22:86	0:0	8	;
water	23:16	0:0	8	nus
op	23:19	0:0	8	->
water	23:21	0:0	8	keyframe_pts
op	23:33	0:0	8	[
water	23:34	0:0	8	j
op	23:35	0:0	8	]
op	23:37	0:0	8	=
water	23:39	0:0	8	AV_NOPTS_VALUE
water	23:53	0:0	8	;
water	24:12	0:0	8	}
water	25:12	0:0	6	flag
op	25:17	0:0	6	=
water	25:19	0:0	6	(
water	25:20	0:0	6	nus
op	25:23	0:0	6	->
water	25:25	0:0	6	keyframe_pts
op	25:37	0:0	6	[
water	25:38	0:0	6	j
op	25:39	0:0	6	]
op	25:41	0:0	6	!=
water	25:44	0:0	6	AV_NOPTS_VALUE
water	25:58	0:0	6	)
op	25:60	0:0	6	^
water	25:62	0:0	6	(
water	25:63	0:0	6	j
op	25:64	0:0	6	+
water	25:65	0:0	6	1
op	25:67	0:0	6	==
water	25:70	0:0	6	nut
op	25:73	0:0	6	->
water	25:75	0:0	6	sp_count
water	25:83	0:0	6	)
water	25:84	0:0	6	;
for	26:12	27:19	6	(;j < nut -> sp_count && ( nus -> keyframe_pts [ j ] != AV_NOPTS_VALUE ) == flag;j ++)
forinit	26:17	26:17	7	;
water	26:17	0:0	8	;
cond	26:19	26:82	7	j < nut -> sp_count && ( nus -> keyframe_pts [ j ] != AV_NOPTS_VALUE ) == flag
water	26:19	0:0	8	j
op	26:20	0:0	8	<
water	26:21	0:0	8	nut
op	26:24	0:0	8	->
water	26:26	0:0	8	sp_count
op	26:35	0:0	8	&&
water	26:38	0:0	8	(
water	26:39	0:0	8	nus
op	26:42	0:0	8	->
water	26:44	0:0	8	keyframe_pts
op	26:56	0:0	8	[
water	26:57	0:0	8	j
op	26:58	0:0	8	]
op	26:60	0:0	8	!=
water	26:63	0:0	8	AV_NOPTS_VALUE
water	26:77	0:0	8	)
op	26:79	0:0	8	==
water	26:82	0:0	8	flag
forexpr	26:88	26:89	7	j ++
water	26:88	0:0	8	j
op	26:89	0:0	8	++
stmts	27:16	27:19	7	
water	27:16	0:0	8	n
op	27:17	0:0	8	++
water	27:19	0:0	8	;
call	28:12	28:41	6	ff_put_v
arg	28:21	28:23	7	bc
water	28:21	0:0	8	bc
arg	28:25	28:41	7	1+2*flag+4*n
water	28:25	0:0	8	1
op	28:27	0:0	8	+
water	28:29	0:0	8	2
op	28:30	0:0	8	*
water	28:31	0:0	8	flag
op	28:36	0:0	8	+
water	28:38	0:0	8	4
op	28:39	0:0	8	*
water	28:40	0:0	8	n
water	28:42	0:0	6	;
for	29:12	35:12	6	(k = j - n ;k <= j && k < nut -> sp_count;k ++)
forinit	29:17	29:25	7	k = j - n ;
water	29:17	0:0	8	k
op	29:18	0:0	8	=
water	29:20	0:0	8	j
op	29:22	0:0	8	-
water	29:24	0:0	8	n
water	29:25	0:0	8	;
cond	29:27	29:42	7	k <= j && k < nut -> sp_count
water	29:27	0:0	8	k
op	29:28	0:0	8	<=
water	29:30	0:0	8	j
op	29:32	0:0	8	&&
water	29:35	0:0	8	k
op	29:36	0:0	8	<
water	29:37	0:0	8	nut
op	29:40	0:0	8	->
water	29:42	0:0	8	sp_count
forexpr	29:52	29:53	7	k ++
water	29:52	0:0	8	k
op	29:53	0:0	8	++
stmts	29:57	35:12	7	
water	29:57	0:0	8	{
if	30:16	31:28	8	(nus -> keyframe_pts [ k ] == AV_NOPTS_VALUE)
cond	30:20	30:44	9	nus -> keyframe_pts [ k ] == AV_NOPTS_VALUE
water	30:20	0:0	10	nus
op	30:23	0:0	10	->
water	30:25	0:0	10	keyframe_pts
op	30:37	0:0	10	[
water	30:38	0:0	10	k
op	30:39	0:0	10	]
op	30:41	0:0	10	==
water	30:44	0:0	10	AV_NOPTS_VALUE
stmts	31:20	31:28	9	
continue	31:20	31:28	10	
call	32:16	32:58	8	av_assert0
arg	32:27	32:58	9	nus->keyframe_pts[k]>last_pts
water	32:27	0:0	10	nus
op	32:30	0:0	10	->
water	32:32	0:0	10	keyframe_pts
op	32:44	0:0	10	[
water	32:45	0:0	10	k
op	32:46	0:0	10	]
op	32:48	0:0	10	>
water	32:50	0:0	10	last_pts
water	32:59	0:0	8	;
call	33:16	33:60	8	ff_put_v
arg	33:25	33:27	9	bc
water	33:25	0:0	10	bc
arg	33:29	33:60	9	nus->keyframe_pts[k]-last_pts
water	33:29	0:0	10	nus
op	33:32	0:0	10	->
water	33:34	0:0	10	keyframe_pts
op	33:46	0:0	10	[
water	33:47	0:0	10	k
op	33:48	0:0	10	]
op	33:50	0:0	10	-
water	33:52	0:0	10	last_pts
water	33:61	0:0	8	;
water	34:16	0:0	8	last_pts
op	34:25	0:0	8	=
water	34:27	0:0	8	nus
op	34:30	0:0	8	->
water	34:32	0:0	8	keyframe_pts
op	34:44	0:0	8	[
water	34:45	0:0	8	k
op	34:46	0:0	8	]
water	34:47	0:0	8	;
water	35:12	0:0	8	}
water	36:8	0:0	6	}
water	37:4	0:0	4	}
water	38:4	0:0	2	payload_size
op	38:17	0:0	2	=
call	38:19	38:31	2	avio_tell
arg	38:29	38:31	3	bc
water	38:29	0:0	4	bc
op	38:33	0:0	2	-
water	38:35	0:0	2	startpos
op	38:44	0:0	2	+
water	38:46	0:0	2	8
op	38:48	0:0	2	+
water	38:50	0:0	2	4
water	38:51	0:0	2	;
call	39:4	39:92	2	avio_wb64
arg	39:14	39:16	3	bc
water	39:14	0:0	4	bc
arg	39:18	39:92	3	8+payload_size+av_log2(payload_size)/7+1+4*(payload_size>4096)
water	39:18	0:0	4	8
op	39:20	0:0	4	+
water	39:22	0:0	4	payload_size
op	39:35	0:0	4	+
call	39:37	39:57	4	av_log2
arg	39:45	39:57	5	payload_size
water	39:45	0:0	6	payload_size
op	39:59	0:0	4	/
water	39:61	0:0	4	7
op	39:63	0:0	4	+
water	39:65	0:0	4	1
op	39:67	0:0	4	+
water	39:69	0:0	4	4
op	39:70	0:0	4	*
water	39:71	0:0	4	(
water	39:72	0:0	4	payload_size
op	39:85	0:0	4	>
water	39:87	0:0	4	4096
water	39:91	0:0	4	)
water	39:93	0:0	2	;
return	40:4	40:12	2	0
water	40:11	0:0	3	0

func	1:0	10:0	0	int	av_cmp_i
params	1:12	0:0	1	
param	1:13	1:24	2	AVInteger	a
param	1:26	1:37	2	AVInteger	b
stmnts	0:0	9:12	1	
decl	2:4	2:9	2	int	i
decl	3:4	3:76	2	int	v
op	3:9	0:0	2	=
water	3:11	0:0	2	(
water	3:12	0:0	2	int16_t
water	3:19	0:0	2	)
water	3:20	0:0	2	a
op	3:21	0:0	2	.
water	3:22	0:0	2	v
op	3:23	0:0	2	[
water	3:24	0:0	2	AV_INTEGER_SIZE
op	3:39	0:0	2	-
water	3:40	0:0	2	1
op	3:41	0:0	2	]
op	3:43	0:0	2	-
water	3:45	0:0	2	(
water	3:46	0:0	2	int16_t
water	3:53	0:0	2	)
water	3:54	0:0	2	b
op	3:55	0:0	2	.
water	3:56	0:0	2	v
op	3:57	0:0	2	[
water	3:58	0:0	2	AV_INTEGER_SIZE
op	3:73	0:0	2	-
water	3:74	0:0	2	1
op	3:75	0:0	2	]
if	4:4	4:26	2	(v)
cond	4:7	4:7	3	v
water	4:7	0:0	4	v
stmts	4:10	4:26	3	
return	4:10	4:26	4	(v>>16)|1
water	4:17	0:0	5	(
water	4:18	0:0	5	v
op	4:19	0:0	5	>>
water	4:21	0:0	5	16
water	4:23	0:0	5	)
op	4:24	0:0	5	|
water	4:25	0:0	5	1
for	5:4	8:4	2	(i = AV_INTEGER_SIZE - 2 ;i >= 0;i --)
forinit	5:8	5:27	3	i = AV_INTEGER_SIZE - 2 ;
water	5:8	0:0	4	i
op	5:9	0:0	4	=
water	5:10	0:0	4	AV_INTEGER_SIZE
op	5:25	0:0	4	-
water	5:26	0:0	4	2
water	5:27	0:0	4	;
cond	5:29	5:32	3	i >= 0
water	5:29	0:0	4	i
op	5:30	0:0	4	>=
water	5:32	0:0	4	0
forexpr	5:35	5:36	3	i --
water	5:35	0:0	4	i
op	5:36	0:0	4	--
stmts	5:39	8:4	3	
water	5:39	0:0	4	{
decl	6:8	6:30	4	int	v
op	6:13	0:0	4	=
water	6:15	0:0	4	a
op	6:16	0:0	4	.
water	6:17	0:0	4	v
op	6:18	0:0	4	[
water	6:19	0:0	4	i
op	6:20	0:0	4	]
op	6:22	0:0	4	-
water	6:24	0:0	4	b
op	6:25	0:0	4	.
water	6:26	0:0	4	v
op	6:27	0:0	4	[
water	6:28	0:0	4	i
op	6:29	0:0	4	]
if	7:8	7:30	4	(v)
cond	7:11	7:11	5	v
water	7:11	0:0	6	v
stmts	7:14	7:30	5	
return	7:14	7:30	6	(v>>16)|1
water	7:21	0:0	7	(
water	7:22	0:0	7	v
op	7:23	0:0	7	>>
water	7:25	0:0	7	16
water	7:27	0:0	7	)
op	7:28	0:0	7	|
water	7:29	0:0	7	1
water	8:4	0:0	4	}
return	9:4	9:12	2	0
water	9:11	0:0	3	0

func	1:0	22:0	0	static void	build_chunks
params	1:24	0:0	1	
param	1:25	1:38	2	MOVTrack *	trk
stmnts	0:0	21:4	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:39	2	MOVIentry	*chunk
op	4:21	0:0	2	=
op	4:23	0:0	2	&
water	4:24	0:0	2	trk
op	4:27	0:0	2	->
water	4:29	0:0	2	cluster
op	4:36	0:0	2	[
water	4:37	0:0	2	0
op	4:38	0:0	2	]
decl	5:4	5:36	2	uint64_t	chunkSize
op	5:23	0:0	2	=
water	5:25	0:0	2	chunk
op	5:30	0:0	2	->
water	5:32	0:0	2	size
water	6:4	0:0	2	chunk
op	6:9	0:0	2	->
water	6:11	0:0	2	chunkNum
op	6:20	0:0	2	=
water	6:22	0:0	2	1
water	6:23	0:0	2	;
if	7:4	8:14	2	(trk -> chunkCount)
cond	7:8	7:13	3	trk -> chunkCount
water	7:8	0:0	4	trk
op	7:11	0:0	4	->
water	7:13	0:0	4	chunkCount
stmts	8:8	8:14	3	
return	8:8	8:14	4	
water	9:4	0:0	2	trk
op	9:7	0:0	2	->
water	9:9	0:0	2	chunkCount
op	9:20	0:0	2	=
water	9:22	0:0	2	1
water	9:23	0:0	2	;
for	10:4	21:4	2	(i = 1 ;i < trk -> entry;i ++)
forinit	10:9	10:14	3	i = 1 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	1
water	10:14	0:0	4	;
cond	10:16	10:23	3	i < trk -> entry
water	10:16	0:0	4	i
op	10:17	0:0	4	<
water	10:18	0:0	4	trk
op	10:21	0:0	4	->
water	10:23	0:0	4	entry
forexpr	10:30	10:31	3	i ++
water	10:30	0:0	4	i
op	10:31	0:0	4	++
stmts	10:34	21:4	3	
water	10:34	0:0	4	{
if	11:8	15:8	4	(chunk -> pos + chunkSize == trk -> cluster [ i ] . pos && chunkSize + trk -> cluster [ i ] . size < ( 1 << 20 ))
cond	11:12	12:53	5	chunk -> pos + chunkSize == trk -> cluster [ i ] . pos && chunkSize + trk -> cluster [ i ] . size < ( 1 << 20 )
water	11:12	0:0	6	chunk
op	11:17	0:0	6	->
water	11:19	0:0	6	pos
op	11:23	0:0	6	+
water	11:25	0:0	6	chunkSize
op	11:35	0:0	6	==
water	11:38	0:0	6	trk
op	11:41	0:0	6	->
water	11:43	0:0	6	cluster
op	11:50	0:0	6	[
water	11:51	0:0	6	i
op	11:52	0:0	6	]
op	11:53	0:0	6	.
water	11:54	0:0	6	pos
op	11:58	0:0	6	&&
water	12:12	0:0	6	chunkSize
op	12:22	0:0	6	+
water	12:24	0:0	6	trk
op	12:27	0:0	6	->
water	12:29	0:0	6	cluster
op	12:36	0:0	6	[
water	12:37	0:0	6	i
op	12:38	0:0	6	]
op	12:39	0:0	6	.
water	12:40	0:0	6	size
op	12:45	0:0	6	<
water	12:47	0:0	6	(
water	12:48	0:0	6	1
op	12:49	0:0	6	<<
water	12:51	0:0	6	20
water	12:53	0:0	6	)
stmts	12:55	15:8	5	
water	12:55	0:0	6	{
water	13:12	0:0	6	chunkSize
op	13:34	0:0	6	+=
water	13:37	0:0	6	trk
op	13:40	0:0	6	->
water	13:42	0:0	6	cluster
op	13:49	0:0	6	[
water	13:50	0:0	6	i
op	13:51	0:0	6	]
op	13:52	0:0	6	.
water	13:53	0:0	6	size
water	13:57	0:0	6	;
water	14:12	0:0	6	chunk
op	14:17	0:0	6	->
water	14:19	0:0	6	samples_in_chunk
op	14:36	0:0	6	+=
water	14:39	0:0	6	trk
op	14:42	0:0	6	->
water	14:44	0:0	6	cluster
op	14:51	0:0	6	[
water	14:52	0:0	6	i
op	14:53	0:0	6	]
op	14:54	0:0	6	.
water	14:55	0:0	6	entries
water	14:62	0:0	6	;
water	15:8	0:0	6	}
else	15:10	20:8	4
stmts	15:15	20:8	5	
water	15:15	0:0	6	{
water	16:12	0:0	6	trk
op	16:15	0:0	6	->
water	16:17	0:0	6	cluster
op	16:24	0:0	6	[
water	16:25	0:0	6	i
op	16:26	0:0	6	]
op	16:27	0:0	6	.
water	16:28	0:0	6	chunkNum
op	16:37	0:0	6	=
water	16:39	0:0	6	chunk
op	16:44	0:0	6	->
water	16:46	0:0	6	chunkNum
op	16:54	0:0	6	+
water	16:55	0:0	6	1
water	16:56	0:0	6	;
water	17:12	0:0	6	chunk
op	17:17	0:0	6	=
op	17:18	0:0	6	&
water	17:19	0:0	6	trk
op	17:22	0:0	6	->
water	17:24	0:0	6	cluster
op	17:31	0:0	6	[
water	17:32	0:0	6	i
op	17:33	0:0	6	]
water	17:34	0:0	6	;
water	18:12	0:0	6	chunkSize
op	18:22	0:0	6	=
water	18:24	0:0	6	chunk
op	18:29	0:0	6	->
water	18:31	0:0	6	size
water	18:35	0:0	6	;
water	19:12	0:0	6	trk
op	19:15	0:0	6	->
water	19:17	0:0	6	chunkCount
op	19:27	0:0	6	++
water	19:29	0:0	6	;
water	20:8	0:0	6	}
water	21:4	0:0	4	}

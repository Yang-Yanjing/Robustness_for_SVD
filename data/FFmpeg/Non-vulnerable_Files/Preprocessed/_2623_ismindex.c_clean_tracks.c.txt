func	1:0	11:0	0	static void	clean_tracks
params	1:24	0:0	1	
param	1:25	1:46	2	struct Tracks *	tracks
stmnts	0:0	10:25	1	
decl	3:4	3:9	2	int	i
for	4:4	8:4	2	(i = 0 ;i < tracks -> nb_tracks;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:28	3	i < tracks -> nb_tracks
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	tracks
op	4:26	0:0	4	->
water	4:28	0:0	4	nb_tracks
forexpr	4:39	4:40	3	i ++
water	4:39	0:0	4	i
op	4:40	0:0	4	++
stmts	4:44	8:4	3	
water	4:44	0:0	4	{
call	5:8	5:50	4	av_freep
arg	5:17	5:50	5	&tracks->tracks[i]->codec_private
op	5:17	0:0	6	&
water	5:18	0:0	6	tracks
op	5:24	0:0	6	->
water	5:26	0:0	6	tracks
op	5:32	0:0	6	[
water	5:33	0:0	6	i
op	5:34	0:0	6	]
op	5:35	0:0	6	->
water	5:37	0:0	6	codec_private
water	5:51	0:0	4	;
call	6:8	6:44	4	av_freep
arg	6:17	6:44	5	&tracks->tracks[i]->offsets
op	6:17	0:0	6	&
water	6:18	0:0	6	tracks
op	6:24	0:0	6	->
water	6:26	0:0	6	tracks
op	6:32	0:0	6	[
water	6:33	0:0	6	i
op	6:34	0:0	6	]
op	6:35	0:0	6	->
water	6:37	0:0	6	offsets
water	6:45	0:0	4	;
call	7:8	7:35	4	av_freep
arg	7:17	7:35	5	&tracks->tracks[i]
op	7:17	0:0	6	&
water	7:18	0:0	6	tracks
op	7:24	0:0	6	->
water	7:26	0:0	6	tracks
op	7:32	0:0	6	[
water	7:33	0:0	6	i
op	7:34	0:0	6	]
water	7:36	0:0	4	;
water	8:4	0:0	4	}
call	9:4	9:28	2	av_freep
arg	9:13	9:28	3	&tracks->tracks
op	9:13	0:0	4	&
water	9:14	0:0	4	tracks
op	9:20	0:0	4	->
water	9:22	0:0	4	tracks
water	9:29	0:0	2	;
water	10:4	0:0	2	tracks
op	10:10	0:0	2	->
water	10:12	0:0	2	nb_tracks
op	10:22	0:0	2	=
water	10:24	0:0	2	0
water	10:25	0:0	2	;

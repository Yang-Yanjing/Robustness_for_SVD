func	1:0	43:0	0	static int	mkv_write_tags
params	1:25	0:0	1	
param	1:26	1:44	2	AVFormatContext *	s
stmnts	0:0	42:12	1	
decl	3:4	3:42	2	MatroskaMuxContext	*mkv
op	3:28	0:0	2	=
water	3:30	0:0	2	s
op	3:31	0:0	2	->
water	3:33	0:0	2	priv_data
decl	4:4	4:26	2	ebml_master	tags
op	4:21	0:0	2	=
water	4:23	0:0	2	{
water	4:24	0:0	2	0
water	4:25	0:0	2	}
decl	5:4	5:14	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:14	2	int	ret
call	6:4	6:54	2	ff_metadata_conv_ctx
arg	6:25	6:26	3	s
water	6:25	0:0	4	s
arg	6:28	6:48	3	ff_mkv_metadata_conv
water	6:28	0:0	4	ff_mkv_metadata_conv
arg	6:50	6:54	3	NULL
water	6:50	0:0	4	NULL
water	6:55	0:0	2	;
if	7:4	10:4	2	(mkv_check_tag (s -> metadata ))
cond	7:8	7:33	3	mkv_check_tag (s -> metadata )
call	7:8	7:33	4	mkv_check_tag
arg	7:22	7:33	5	s->metadata
water	7:22	0:0	6	s
op	7:23	0:0	6	->
water	7:25	0:0	6	metadata
stmts	7:36	10:4	3	
water	7:36	0:0	4	{
water	8:8	0:0	4	ret
op	8:12	0:0	4	=
call	8:14	8:55	4	mkv_write_tag
arg	8:28	8:29	5	s
water	8:28	0:0	6	s
arg	8:31	8:42	5	s->metadata
water	8:31	0:0	6	s
op	8:32	0:0	6	->
water	8:34	0:0	6	metadata
arg	8:44	8:45	5	0
water	8:44	0:0	6	0
arg	8:47	8:48	5	0
water	8:47	0:0	6	0
arg	8:50	8:55	5	&tags
op	8:50	0:0	6	&
water	8:51	0:0	6	tags
water	8:56	0:0	4	;
if	9:8	9:31	4	(ret < 0)
cond	9:12	9:18	5	ret < 0
water	9:12	0:0	6	ret
op	9:16	0:0	6	<
water	9:18	0:0	6	0
stmts	9:21	9:31	5	
return	9:21	9:31	6	ret
water	9:28	0:0	7	ret
water	10:4	0:0	4	}
for	11:4	17:4	2	(i = 0 ;i < s -> nb_streams;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:23	3	i < s -> nb_streams
water	11:16	0:0	4	i
op	11:18	0:0	4	<
water	11:20	0:0	4	s
op	11:21	0:0	4	->
water	11:23	0:0	4	nb_streams
forexpr	11:35	11:36	3	i ++
water	11:35	0:0	4	i
op	11:36	0:0	4	++
stmts	11:40	17:4	3	
water	11:40	0:0	4	{
decl	12:8	12:36	4	AVStream	*st
op	12:21	0:0	4	=
water	12:23	0:0	4	s
op	12:24	0:0	4	->
water	12:26	0:0	4	streams
op	12:33	0:0	4	[
water	12:34	0:0	4	i
op	12:35	0:0	4	]
if	13:8	14:20	4	(!mkv_check_tag (st -> metadata ))
cond	13:12	13:39	5	!mkv_check_tag (st -> metadata )
op	13:12	0:0	6	!
call	13:13	13:39	6	mkv_check_tag
arg	13:27	13:39	7	st->metadata
water	13:27	0:0	8	st
op	13:29	0:0	8	->
water	13:31	0:0	8	metadata
stmts	14:12	14:20	5	
continue	14:12	14:20	6	
water	15:8	0:0	4	ret
op	15:12	0:0	4	=
call	15:14	15:90	4	mkv_write_tag
arg	15:28	15:29	5	s
water	15:28	0:0	6	s
arg	15:31	15:43	5	st->metadata
water	15:31	0:0	6	st
op	15:33	0:0	6	->
water	15:35	0:0	6	metadata
arg	15:45	15:76	5	MATROSKA_ID_TAGTARGETS_TRACKUID
water	15:45	0:0	6	MATROSKA_ID_TAGTARGETS_TRACKUID
arg	15:78	15:83	5	i+1
water	15:78	0:0	6	i
op	15:80	0:0	6	+
water	15:82	0:0	6	1
arg	15:85	15:90	5	&tags
op	15:85	0:0	6	&
water	15:86	0:0	6	tags
water	15:91	0:0	4	;
if	16:8	16:31	4	(ret < 0)
cond	16:12	16:18	5	ret < 0
water	16:12	0:0	6	ret
op	16:16	0:0	6	<
water	16:18	0:0	6	0
stmts	16:21	16:31	5	
return	16:21	16:31	6	ret
water	16:28	0:0	7	ret
water	17:4	0:0	4	}
if	18:4	32:4	2	(! mkv -> is_live)
cond	18:8	18:14	3	! mkv -> is_live
op	18:8	0:0	4	!
water	18:9	0:0	4	mkv
op	18:12	0:0	4	->
water	18:14	0:0	4	is_live
stmts	18:23	32:4	3	
water	18:23	0:0	4	{
for	19:8	31:8	4	(i = 0 ;i < s -> nb_streams;i ++)
forinit	19:13	19:18	5	i = 0 ;
water	19:13	0:0	6	i
op	19:15	0:0	6	=
water	19:17	0:0	6	0
water	19:18	0:0	6	;
cond	19:20	19:27	5	i < s -> nb_streams
water	19:20	0:0	6	i
op	19:22	0:0	6	<
water	19:24	0:0	6	s
op	19:25	0:0	6	->
water	19:27	0:0	6	nb_streams
forexpr	19:39	19:40	5	i ++
water	19:39	0:0	6	i
op	19:40	0:0	6	++
stmts	19:44	31:8	5	
water	19:44	0:0	6	{
decl	20:12	20:34	6	ebml_master	tag_target
decl	21:12	21:27	6	ebml_master	tag
call	22:12	22:95	6	mkv_write_tag_targets
arg	22:34	22:35	7	s
water	22:34	0:0	8	s
arg	22:37	22:68	7	MATROSKA_ID_TAGTARGETS_TRACKUID
water	22:37	0:0	8	MATROSKA_ID_TAGTARGETS_TRACKUID
arg	22:70	22:75	7	i+1
water	22:70	0:0	8	i
op	22:72	0:0	8	+
water	22:74	0:0	8	1
arg	22:77	22:82	7	&tags
op	22:77	0:0	8	&
water	22:78	0:0	8	tags
arg	22:84	22:95	7	&tag_target
op	22:84	0:0	8	&
water	22:85	0:0	8	tag_target
water	22:96	0:0	6	;
water	23:12	0:0	6	tag
op	23:16	0:0	6	=
call	23:18	23:67	6	start_ebml_master
arg	23:36	23:41	7	s->pb
water	23:36	0:0	8	s
op	23:37	0:0	8	->
water	23:39	0:0	8	pb
arg	23:43	23:64	7	MATROSKA_ID_SIMPLETAG
water	23:43	0:0	8	MATROSKA_ID_SIMPLETAG
arg	23:66	23:67	7	0
water	23:66	0:0	8	0
water	23:68	0:0	6	;
call	24:12	24:66	6	put_ebml_string
arg	24:28	24:33	7	s->pb
water	24:28	0:0	8	s
op	24:29	0:0	8	->
water	24:31	0:0	8	pb
arg	24:35	24:54	7	MATROSKA_ID_TAGNAME
water	24:35	0:0	8	MATROSKA_ID_TAGNAME
arg	24:56	24:66	7	"DURATION"
water	24:56	0:0	8	"DURATION"
water	24:67	0:0	6	;
water	25:12	0:0	6	mkv
op	25:15	0:0	6	->
water	25:17	0:0	6	stream_duration_offsets
op	25:40	0:0	6	[
water	25:41	0:0	6	i
op	25:42	0:0	6	]
op	25:44	0:0	6	=
call	25:46	25:61	6	avio_tell
arg	25:56	25:61	7	s->pb
water	25:56	0:0	8	s
op	25:57	0:0	8	->
water	25:59	0:0	8	pb
water	25:62	0:0	6	;
call	28:12	28:35	6	put_ebml_void
arg	28:26	28:31	7	s->pb
water	28:26	0:0	8	s
op	28:27	0:0	8	->
water	28:29	0:0	8	pb
arg	28:33	28:35	7	23
water	28:33	0:0	8	23
water	28:36	0:0	6	;
call	29:12	29:38	6	end_ebml_master
arg	29:28	29:33	7	s->pb
water	29:28	0:0	8	s
op	29:29	0:0	8	->
water	29:31	0:0	8	pb
arg	29:35	29:38	7	tag
water	29:35	0:0	8	tag
water	29:39	0:0	6	;
call	30:12	30:45	6	end_ebml_master
arg	30:28	30:33	7	s->pb
water	30:28	0:0	8	s
op	30:29	0:0	8	->
water	30:31	0:0	8	pb
arg	30:35	30:45	7	tag_target
water	30:35	0:0	8	tag_target
water	30:46	0:0	6	;
water	31:8	0:0	6	}
water	32:4	0:0	4	}
for	33:4	39:4	2	(i = 0 ;i < s -> nb_chapters;i ++)
forinit	33:9	33:14	3	i = 0 ;
water	33:9	0:0	4	i
op	33:11	0:0	4	=
water	33:13	0:0	4	0
water	33:14	0:0	4	;
cond	33:16	33:23	3	i < s -> nb_chapters
water	33:16	0:0	4	i
op	33:18	0:0	4	<
water	33:20	0:0	4	s
op	33:21	0:0	4	->
water	33:23	0:0	4	nb_chapters
forexpr	33:36	33:37	3	i ++
water	33:36	0:0	4	i
op	33:37	0:0	4	++
stmts	33:41	39:4	3	
water	33:41	0:0	4	{
decl	34:8	34:38	4	AVChapter	*ch
op	34:22	0:0	4	=
water	34:24	0:0	4	s
op	34:25	0:0	4	->
water	34:27	0:0	4	chapters
op	34:35	0:0	4	[
water	34:36	0:0	4	i
op	34:37	0:0	4	]
if	35:8	36:20	4	(!mkv_check_tag (ch -> metadata ))
cond	35:12	35:39	5	!mkv_check_tag (ch -> metadata )
op	35:12	0:0	6	!
call	35:13	35:39	6	mkv_check_tag
arg	35:27	35:39	7	ch->metadata
water	35:27	0:0	8	ch
op	35:29	0:0	8	->
water	35:31	0:0	8	metadata
stmts	36:12	36:20	5	
continue	36:12	36:20	6	
water	37:8	0:0	4	ret
op	37:12	0:0	4	=
call	37:14	37:118	4	mkv_write_tag
arg	37:28	37:29	5	s
water	37:28	0:0	6	s
arg	37:31	37:43	5	ch->metadata
water	37:31	0:0	6	ch
op	37:33	0:0	6	->
water	37:35	0:0	6	metadata
arg	37:45	37:78	5	MATROSKA_ID_TAGTARGETS_CHAPTERUID
water	37:45	0:0	6	MATROSKA_ID_TAGTARGETS_CHAPTERUID
arg	37:80	37:111	5	ch->id+mkv->chapter_id_offset
water	37:80	0:0	6	ch
op	37:82	0:0	6	->
water	37:84	0:0	6	id
op	37:87	0:0	6	+
water	37:89	0:0	6	mkv
op	37:92	0:0	6	->
water	37:94	0:0	6	chapter_id_offset
arg	37:113	37:118	5	&tags
op	37:113	0:0	6	&
water	37:114	0:0	6	tags
water	37:119	0:0	4	;
if	38:8	38:31	4	(ret < 0)
cond	38:12	38:18	5	ret < 0
water	38:12	0:0	6	ret
op	38:16	0:0	6	<
water	38:18	0:0	6	0
stmts	38:21	38:31	5	
return	38:21	38:31	6	ret
water	38:28	0:0	7	ret
water	39:4	0:0	4	}
if	40:4	41:36	2	(tags . pos)
cond	40:8	40:13	3	tags . pos
water	40:8	0:0	4	tags
op	40:12	0:0	4	.
water	40:13	0:0	4	pos
stmts	41:8	41:36	3	
call	41:8	41:35	4	end_ebml_master
arg	41:24	41:29	5	s->pb
water	41:24	0:0	6	s
op	41:25	0:0	6	->
water	41:27	0:0	6	pb
arg	41:31	41:35	5	tags
water	41:31	0:0	6	tags
water	41:36	0:0	4	;
return	42:4	42:12	2	0
water	42:11	0:0	3	0

func	1:0	45:0	0	static inline int	validate_string
params	1:33	0:0	1	
param	1:34	1:53	2	WriterContext *	wctx
param	1:55	1:66	2	char * *	dstp
param	1:68	1:83	2	const char *	src
stmnts	0:0	44:14	1	
decl	3:4	3:27	2	const uint8_t	*p
water	3:20	0:0	2	,
decl	3:4	3:27	2	const uint8_t	*endp
decl	4:4	4:19	2	AVBPrint	dstbuf
decl	5:4	5:37	2	int	invalid_chars_nb
op	5:25	0:0	2	=
water	5:27	0:0	2	0
water	5:28	0:0	2	,
decl	5:4	5:37	2	int	ret
op	5:34	0:0	2	=
water	5:36	0:0	2	0
call	6:4	6:55	2	av_bprint_init
arg	6:19	6:26	3	&dstbuf
op	6:19	0:0	4	&
water	6:20	0:0	4	dstbuf
arg	6:28	6:29	3	0
water	6:28	0:0	4	0
arg	6:31	6:55	3	AV_BPRINT_SIZE_UNLIMITED
water	6:31	0:0	4	AV_BPRINT_SIZE_UNLIMITED
water	6:56	0:0	2	;
water	7:4	0:0	2	endp
op	7:9	0:0	2	=
water	7:11	0:0	2	src
op	7:15	0:0	2	+
call	7:17	7:27	2	strlen
arg	7:24	7:27	3	src
water	7:24	0:0	4	src
water	7:28	0:0	2	;
for	8:4	36:4	2	(p = ( uint8_t * ) src ;* p;)
forinit	8:9	8:27	3	p = ( uint8_t * ) src ;
water	8:9	0:0	4	p
op	8:11	0:0	4	=
water	8:13	0:0	4	(
water	8:14	0:0	4	uint8_t
op	8:22	0:0	4	*
water	8:23	0:0	4	)
water	8:24	0:0	4	src
water	8:27	0:0	4	;
cond	8:29	8:30	3	* p
op	8:29	0:0	4	*
water	8:30	0:0	4	p
forexpr	0:0	0:0	3	
stmts	8:34	36:4	3	
water	8:34	0:0	4	{
decl	9:8	9:21	4	uint32_t	code
decl	10:8	10:23	4	int	invalid
op	10:20	0:0	4	=
water	10:22	0:0	4	0
decl	11:8	11:29	4	const uint8_t	*p0
op	11:26	0:0	4	=
water	11:28	0:0	4	p
if	12:8	19:8	4	(av_utf8_decode (& code ,& p ,endp ,wctx -> string_validation_utf8_flags ) < 0)
cond	12:12	12:82	5	av_utf8_decode (& code ,& p ,endp ,wctx -> string_validation_utf8_flags ) < 0
call	12:12	12:78	6	av_utf8_decode
arg	12:27	12:32	7	&code
op	12:27	0:0	8	&
water	12:28	0:0	8	code
arg	12:34	12:36	7	&p
op	12:34	0:0	8	&
water	12:35	0:0	8	p
arg	12:38	12:42	7	endp
water	12:38	0:0	8	endp
arg	12:44	12:78	7	wctx->string_validation_utf8_flags
water	12:44	0:0	8	wctx
op	12:48	0:0	8	->
water	12:50	0:0	8	string_validation_utf8_flags
op	12:80	0:0	6	<
water	12:82	0:0	6	0
stmts	12:85	19:8	5	
water	12:85	0:0	6	{
decl	13:12	13:23	6	AVBPrint	bp
call	14:12	14:59	6	av_bprint_init
arg	14:27	14:30	7	&bp
op	14:27	0:0	8	&
water	14:28	0:0	8	bp
arg	14:32	14:33	7	0
water	14:32	0:0	8	0
arg	14:35	14:59	7	AV_BPRINT_SIZE_AUTOMATIC
water	14:35	0:0	8	AV_BPRINT_SIZE_AUTOMATIC
water	14:60	0:0	6	;
call	15:12	15:38	6	bprint_bytes
arg	15:25	15:28	7	&bp
op	15:25	0:0	8	&
water	15:26	0:0	8	bp
arg	15:30	15:32	7	p0
water	15:30	0:0	8	p0
arg	15:34	15:38	7	p-p0
water	15:34	0:0	8	p
op	15:35	0:0	8	-
water	15:36	0:0	8	p0
water	15:39	0:0	6	;
call	16:12	17:82	6	av_log
arg	16:19	16:23	7	wctx
water	16:19	0:0	8	wctx
arg	16:25	16:37	7	AV_LOG_DEBUG
water	16:25	0:0	8	AV_LOG_DEBUG
arg	17:19	17:69	7	"Invalid UTF-8 sequence %s found in string '%s'\n"
water	17:19	0:0	8	"Invalid UTF-8 sequence %s found in string '%s'\n"
arg	17:71	17:77	7	bp.str
water	17:71	0:0	8	bp
op	17:73	0:0	8	.
water	17:74	0:0	8	str
arg	17:79	17:82	7	src
water	17:79	0:0	8	src
water	17:83	0:0	6	;
water	18:12	0:0	6	invalid
op	18:20	0:0	6	=
water	18:22	0:0	6	1
water	18:23	0:0	6	;
water	19:8	0:0	6	}
if	20:8	33:8	4	(invalid)
cond	20:12	20:12	5	invalid
water	20:12	0:0	6	invalid
stmts	20:21	33:8	5	
water	20:21	0:0	6	{
water	21:12	0:0	6	invalid_chars_nb
op	21:28	0:0	6	++
water	21:30	0:0	6	;
switch	22:12	32:12	6	(wctx -> string_validation)
cond	22:20	22:26	7	wctx -> string_validation
water	22:20	0:0	8	wctx
op	22:24	0:0	8	->
water	22:26	0:0	8	string_validation
stmts	22:45	32:12	7	
water	22:45	0:0	8	{
label	23:12	23:46	8	case WRITER_STRING_VALIDATION_FAIL :
call	24:16	25:75	8	av_log
arg	24:23	24:27	9	wctx
water	24:23	0:0	10	wctx
arg	24:29	24:41	9	AV_LOG_ERROR
water	24:29	0:0	10	AV_LOG_ERROR
arg	25:23	25:70	9	"Invalid UTF-8 sequence found in string '%s'\n"
water	25:23	0:0	10	"Invalid UTF-8 sequence found in string '%s'\n"
arg	25:72	25:75	9	src
water	25:72	0:0	10	src
water	25:76	0:0	8	;
water	26:16	0:0	8	ret
op	26:20	0:0	8	=
water	26:22	0:0	8	AVERROR_INVALIDDATA
water	26:41	0:0	8	;
goto	27:16	27:24	8	end
water	27:21	0:0	9	end
break	28:16	28:21	8	
label	29:12	29:49	8	case WRITER_STRING_VALIDATION_REPLACE :
call	30:16	30:77	8	av_bprintf
arg	30:27	30:34	9	&dstbuf
op	30:27	0:0	10	&
water	30:28	0:0	10	dstbuf
arg	30:36	30:40	9	"%s"
water	30:36	0:0	10	"%s"
arg	30:42	30:77	9	wctx->string_validation_replacement
water	30:42	0:0	10	wctx
op	30:46	0:0	10	->
water	30:48	0:0	10	string_validation_replacement
water	30:78	0:0	8	;
break	31:16	31:21	8	
water	32:12	0:0	8	}
water	33:8	0:0	6	}
if	34:8	35:52	4	(! invalid || wctx -> string_validation == WRITER_STRING_VALIDATION_IGNORE)
cond	34:12	34:51	5	! invalid || wctx -> string_validation == WRITER_STRING_VALIDATION_IGNORE
op	34:12	0:0	6	!
water	34:13	0:0	6	invalid
op	34:21	0:0	6	||
water	34:24	0:0	6	wctx
op	34:28	0:0	6	->
water	34:30	0:0	6	string_validation
op	34:48	0:0	6	==
water	34:51	0:0	6	WRITER_STRING_VALIDATION_IGNORE
stmts	35:12	35:52	5	
call	35:12	35:51	6	av_bprint_append_data
arg	35:34	35:41	7	&dstbuf
op	35:34	0:0	8	&
water	35:35	0:0	8	dstbuf
arg	35:43	35:45	7	p0
water	35:43	0:0	8	p0
arg	35:47	35:51	7	p-p0
water	35:47	0:0	8	p
op	35:48	0:0	8	-
water	35:49	0:0	8	p0
water	35:52	0:0	6	;
water	36:4	0:0	4	}
if	37:4	41:4	2	(invalid_chars_nb && wctx -> string_validation == WRITER_STRING_VALIDATION_REPLACE)
cond	37:8	37:55	3	invalid_chars_nb && wctx -> string_validation == WRITER_STRING_VALIDATION_REPLACE
water	37:8	0:0	4	invalid_chars_nb
op	37:25	0:0	4	&&
water	37:28	0:0	4	wctx
op	37:32	0:0	4	->
water	37:34	0:0	4	string_validation
op	37:52	0:0	4	==
water	37:55	0:0	4	WRITER_STRING_VALIDATION_REPLACE
stmts	37:89	41:4	3	
water	37:89	0:0	4	{
call	38:8	40:73	4	av_log
arg	38:15	38:19	5	wctx
water	38:15	0:0	6	wctx
arg	38:21	38:35	5	AV_LOG_WARNING
water	38:21	0:0	6	AV_LOG_WARNING
arg	39:15	39:88	5	"%d invalid UTF-8 sequence(s) found in string '%s', replaced with '%s'\n"
water	39:15	0:0	6	"%d invalid UTF-8 sequence(s) found in string '%s', replaced with '%s'\n"
arg	40:15	40:31	5	invalid_chars_nb
water	40:15	0:0	6	invalid_chars_nb
arg	40:33	40:36	5	src
water	40:33	0:0	6	src
arg	40:38	40:73	5	wctx->string_validation_replacement
water	40:38	0:0	6	wctx
op	40:42	0:0	6	->
water	40:44	0:0	6	string_validation_replacement
water	40:74	0:0	4	;
water	41:4	0:0	4	}
label	42:0	42:3	2	end :
call	43:4	43:36	2	av_bprint_finalize
arg	43:23	43:30	3	&dstbuf
op	43:23	0:0	4	&
water	43:24	0:0	4	dstbuf
arg	43:32	43:36	3	dstp
water	43:32	0:0	4	dstp
water	43:37	0:0	2	;
return	44:4	44:14	2	ret
water	44:11	0:0	3	ret

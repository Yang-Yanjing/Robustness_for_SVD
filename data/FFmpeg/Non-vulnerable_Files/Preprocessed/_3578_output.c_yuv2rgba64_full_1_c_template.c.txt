func	1:24	65:0	0	void	yuv2rgba64_full_1_c_template
params	2:28	0:0	1	
param	2:29	2:42	2	SwsContext *	c
param	2:44	2:63	2	const int32_t *	buf0
param	3:23	3:45	2	const int32_t *	ubuf[2]
param	3:47	3:69	2	const int32_t *	vbuf[2]
param	4:23	4:43	2	const int32_t *	abuf0
param	4:45	4:59	2	uint16_t *	dest
param	4:61	4:69	2	int	dstW
param	5:23	5:34	2	int	uvalpha
param	5:36	5:41	2	int	y
param	5:43	5:68	2	enum AVPixelFormat	target
param	5:70	5:82	2	int	hasAlpha
param	5:84	5:98	2	int	eightbytes
stmnts	0:0	64:4	1	
decl	7:4	7:52	2	const int32_t	*ubuf0
op	7:25	0:0	2	=
water	7:27	0:0	2	ubuf
op	7:31	0:0	2	[
water	7:32	0:0	2	0
op	7:33	0:0	2	]
water	7:34	0:0	2	,
decl	7:4	7:52	2	const int32_t	*vbuf0
op	7:43	0:0	2	=
water	7:45	0:0	2	vbuf
op	7:49	0:0	2	[
water	7:50	0:0	2	0
op	7:51	0:0	2	]
decl	8:4	8:9	2	int	i
decl	9:4	9:22	2	int	A
op	9:10	0:0	2	=
water	9:12	0:0	2	0
water	9:13	0:0	2	xffff
op	9:18	0:0	2	<<
water	9:20	0:0	2	14
if	10:4	36:4	2	(uvalpha < 2048)
cond	10:8	10:18	3	uvalpha < 2048
water	10:8	0:0	4	uvalpha
op	10:16	0:0	4	<
water	10:18	0:0	4	2048
stmts	10:24	36:4	3	
water	10:24	0:0	4	{
for	11:8	35:8	4	(i = 0 ;i < dstW;i ++)
forinit	11:13	11:18	5	i = 0 ;
water	11:13	0:0	6	i
op	11:15	0:0	6	=
water	11:17	0:0	6	0
water	11:18	0:0	6	;
cond	11:20	11:24	5	i < dstW
water	11:20	0:0	6	i
op	11:22	0:0	6	<
water	11:24	0:0	6	dstW
forexpr	11:30	11:31	5	i ++
water	11:30	0:0	6	i
op	11:31	0:0	6	++
stmts	11:35	35:8	5	
water	11:35	0:0	6	{
decl	12:12	12:35	6	int	Y
op	12:19	0:0	6	=
water	12:21	0:0	6	(
water	12:22	0:0	6	buf0
op	12:26	0:0	6	[
water	12:27	0:0	6	i
op	12:28	0:0	6	]
water	12:29	0:0	6	)
op	12:31	0:0	6	>>
water	12:34	0:0	6	2
decl	13:12	13:51	6	int	U
op	13:19	0:0	6	=
water	13:21	0:0	6	(
water	13:22	0:0	6	ubuf0
op	13:27	0:0	6	[
water	13:28	0:0	6	i
op	13:29	0:0	6	]
op	13:31	0:0	6	+
water	13:33	0:0	6	(
op	13:34	0:0	6	-
water	13:35	0:0	6	128
op	13:39	0:0	6	<<
water	13:42	0:0	6	11
water	13:44	0:0	6	)
water	13:45	0:0	6	)
op	13:47	0:0	6	>>
water	13:50	0:0	6	2
decl	14:12	14:51	6	int	V
op	14:19	0:0	6	=
water	14:21	0:0	6	(
water	14:22	0:0	6	vbuf0
op	14:27	0:0	6	[
water	14:28	0:0	6	i
op	14:29	0:0	6	]
op	14:31	0:0	6	+
water	14:33	0:0	6	(
op	14:34	0:0	6	-
water	14:35	0:0	6	128
op	14:39	0:0	6	<<
water	14:42	0:0	6	11
water	14:44	0:0	6	)
water	14:45	0:0	6	)
op	14:47	0:0	6	>>
water	14:50	0:0	6	2
decl	15:12	15:23	6	int	R
water	15:17	0:0	6	,
decl	15:12	15:23	6	int	G
water	15:20	0:0	6	,
decl	15:12	15:23	6	int	B
water	16:12	0:0	6	Y
op	16:14	0:0	6	-=
water	16:17	0:0	6	c
op	16:18	0:0	6	->
water	16:20	0:0	6	yuv2rgb_y_offset
water	16:36	0:0	6	;
water	17:12	0:0	6	Y
op	17:14	0:0	6	*=
water	17:17	0:0	6	c
op	17:18	0:0	6	->
water	17:20	0:0	6	yuv2rgb_y_coeff
water	17:35	0:0	6	;
water	18:12	0:0	6	Y
op	18:14	0:0	6	+=
water	18:17	0:0	6	1
op	18:19	0:0	6	<<
water	18:22	0:0	6	13
water	18:24	0:0	6	;
if	19:12	22:12	6	(hasAlpha)
cond	19:16	19:16	7	hasAlpha
water	19:16	0:0	8	hasAlpha
stmts	19:26	22:12	7	
water	19:26	0:0	8	{
water	20:16	0:0	8	A
op	20:18	0:0	8	=
water	20:20	0:0	8	abuf0
op	20:25	0:0	8	[
water	20:26	0:0	8	i
op	20:27	0:0	8	]
op	20:29	0:0	8	<<
water	20:32	0:0	8	11
water	20:34	0:0	8	;
water	21:16	0:0	8	A
op	21:18	0:0	8	+=
water	21:21	0:0	8	1
op	21:23	0:0	8	<<
water	21:26	0:0	8	13
water	21:28	0:0	8	;
water	22:12	0:0	8	}
water	23:12	0:0	6	R
op	23:14	0:0	6	=
water	23:16	0:0	6	V
op	23:18	0:0	6	*
water	23:20	0:0	6	c
op	23:21	0:0	6	->
water	23:23	0:0	6	yuv2rgb_v2r_coeff
water	23:40	0:0	6	;
water	24:12	0:0	6	G
op	24:14	0:0	6	=
water	24:16	0:0	6	V
op	24:18	0:0	6	*
water	24:20	0:0	6	c
op	24:21	0:0	6	->
water	24:23	0:0	6	yuv2rgb_v2g_coeff
op	24:41	0:0	6	+
water	24:43	0:0	6	U
op	24:45	0:0	6	*
water	24:47	0:0	6	c
op	24:48	0:0	6	->
water	24:50	0:0	6	yuv2rgb_u2g_coeff
water	24:67	0:0	6	;
water	25:12	0:0	6	B
op	25:14	0:0	6	=
water	25:43	0:0	6	U
op	25:45	0:0	6	*
water	25:47	0:0	6	c
op	25:48	0:0	6	->
water	25:50	0:0	6	yuv2rgb_u2b_coeff
water	25:67	0:0	6	;
call	26:12	26:68	6	output_pixel
arg	26:25	26:33	7	&dest[0]
op	26:25	0:0	8	&
water	26:26	0:0	8	dest
op	26:30	0:0	8	[
water	26:31	0:0	8	0
op	26:32	0:0	8	]
arg	26:35	26:68	7	av_clip_uintp2(R_B+Y,30)>>14
call	26:35	26:61	8	av_clip_uintp2
arg	26:50	26:57	9	R_B+Y
water	26:50	0:0	10	R_B
op	26:54	0:0	10	+
water	26:56	0:0	10	Y
arg	26:59	26:61	9	30
water	26:59	0:0	10	30
op	26:63	0:0	8	>>
water	26:66	0:0	8	14
water	26:69	0:0	6	;
call	27:12	27:68	6	output_pixel
arg	27:25	27:33	7	&dest[1]
op	27:25	0:0	8	&
water	27:26	0:0	8	dest
op	27:30	0:0	8	[
water	27:31	0:0	8	1
op	27:32	0:0	8	]
arg	27:35	27:68	7	av_clip_uintp2(G+Y,30)>>14
call	27:35	27:61	8	av_clip_uintp2
arg	27:52	27:57	9	G+Y
water	27:52	0:0	10	G
op	27:54	0:0	10	+
water	27:56	0:0	10	Y
arg	27:59	27:61	9	30
water	27:59	0:0	10	30
op	27:63	0:0	8	>>
water	27:66	0:0	8	14
water	27:69	0:0	6	;
call	28:12	28:68	6	output_pixel
arg	28:25	28:33	7	&dest[2]
op	28:25	0:0	8	&
water	28:26	0:0	8	dest
op	28:30	0:0	8	[
water	28:31	0:0	8	2
op	28:32	0:0	8	]
arg	28:35	28:68	7	av_clip_uintp2(B_R+Y,30)>>14
call	28:35	28:61	8	av_clip_uintp2
arg	28:50	28:57	9	B_R+Y
water	28:50	0:0	10	B_R
op	28:54	0:0	10	+
water	28:56	0:0	10	Y
arg	28:59	28:61	9	30
water	28:59	0:0	10	30
op	28:63	0:0	8	>>
water	28:66	0:0	8	14
water	28:69	0:0	6	;
if	29:12	32:12	6	(eightbytes)
cond	29:16	29:16	7	eightbytes
water	29:16	0:0	8	eightbytes
stmts	29:28	32:12	7	
water	29:28	0:0	8	{
call	30:16	30:66	8	output_pixel
arg	30:29	30:37	9	&dest[3]
op	30:29	0:0	10	&
water	30:30	0:0	10	dest
op	30:34	0:0	10	[
water	30:35	0:0	10	3
op	30:36	0:0	10	]
arg	30:39	30:66	9	av_clip_uintp2(A,30)>>14
call	30:39	30:59	10	av_clip_uintp2
arg	30:54	30:55	11	A
water	30:54	0:0	12	A
arg	30:57	30:59	11	30
water	30:57	0:0	12	30
op	30:61	0:0	10	>>
water	30:64	0:0	10	14
water	30:67	0:0	8	;
water	31:16	0:0	8	dest
op	31:21	0:0	8	+=
water	31:24	0:0	8	4
water	31:25	0:0	8	;
water	32:12	0:0	8	}
else	32:14	34:12	6
stmts	32:19	34:12	7	
water	32:19	0:0	8	{
water	33:16	0:0	8	dest
op	33:21	0:0	8	+=
water	33:24	0:0	8	3
water	33:25	0:0	8	;
water	34:12	0:0	8	}
water	35:8	0:0	6	}
water	36:4	0:0	4	}
else	36:6	64:4	2
stmts	36:11	64:4	3	
water	36:11	0:0	4	{
decl	37:8	37:56	4	const int32_t	*ubuf1
op	37:29	0:0	4	=
water	37:31	0:0	4	ubuf
op	37:35	0:0	4	[
water	37:36	0:0	4	1
op	37:37	0:0	4	]
water	37:38	0:0	4	,
decl	37:8	37:56	4	const int32_t	*vbuf1
op	37:47	0:0	4	=
water	37:49	0:0	4	vbuf
op	37:53	0:0	4	[
water	37:54	0:0	4	1
op	37:55	0:0	4	]
decl	38:8	38:26	4	int	A
op	38:14	0:0	4	=
water	38:16	0:0	4	0
water	38:17	0:0	4	xffff
op	38:22	0:0	4	<<
water	38:24	0:0	4	14
for	39:8	63:8	4	(i = 0 ;i < dstW;i ++)
forinit	39:13	39:18	5	i = 0 ;
water	39:13	0:0	6	i
op	39:15	0:0	6	=
water	39:17	0:0	6	0
water	39:18	0:0	6	;
cond	39:20	39:24	5	i < dstW
water	39:20	0:0	6	i
op	39:22	0:0	6	<
water	39:24	0:0	6	dstW
forexpr	39:30	39:31	5	i ++
water	39:30	0:0	6	i
op	39:31	0:0	6	++
stmts	39:35	63:8	5	
water	39:35	0:0	6	{
decl	40:12	40:39	6	int	Y
op	40:19	0:0	6	=
water	40:21	0:0	6	(
water	40:22	0:0	6	buf0
op	40:26	0:0	6	[
water	40:27	0:0	6	i
op	40:28	0:0	6	]
water	40:33	0:0	6	)
op	40:35	0:0	6	>>
water	40:38	0:0	6	2
decl	41:12	41:62	6	int	U
op	41:19	0:0	6	=
water	41:21	0:0	6	(
water	41:22	0:0	6	ubuf0
op	41:27	0:0	6	[
water	41:28	0:0	6	i
op	41:29	0:0	6	]
op	41:31	0:0	6	+
water	41:33	0:0	6	ubuf1
op	41:38	0:0	6	[
water	41:39	0:0	6	i
op	41:40	0:0	6	]
op	41:42	0:0	6	+
water	41:44	0:0	6	(
op	41:45	0:0	6	-
water	41:46	0:0	6	128
op	41:50	0:0	6	<<
water	41:53	0:0	6	12
water	41:55	0:0	6	)
water	41:56	0:0	6	)
op	41:58	0:0	6	>>
water	41:61	0:0	6	3
decl	42:12	42:62	6	int	V
op	42:19	0:0	6	=
water	42:21	0:0	6	(
water	42:22	0:0	6	vbuf0
op	42:27	0:0	6	[
water	42:28	0:0	6	i
op	42:29	0:0	6	]
op	42:31	0:0	6	+
water	42:33	0:0	6	vbuf1
op	42:38	0:0	6	[
water	42:39	0:0	6	i
op	42:40	0:0	6	]
op	42:42	0:0	6	+
water	42:44	0:0	6	(
op	42:45	0:0	6	-
water	42:46	0:0	6	128
op	42:50	0:0	6	<<
water	42:53	0:0	6	12
water	42:55	0:0	6	)
water	42:56	0:0	6	)
op	42:58	0:0	6	>>
water	42:61	0:0	6	3
decl	43:12	43:23	6	int	R
water	43:17	0:0	6	,
decl	43:12	43:23	6	int	G
water	43:20	0:0	6	,
decl	43:12	43:23	6	int	B
water	44:12	0:0	6	Y
op	44:14	0:0	6	-=
water	44:17	0:0	6	c
op	44:18	0:0	6	->
water	44:20	0:0	6	yuv2rgb_y_offset
water	44:36	0:0	6	;
water	45:12	0:0	6	Y
op	45:14	0:0	6	*=
water	45:17	0:0	6	c
op	45:18	0:0	6	->
water	45:20	0:0	6	yuv2rgb_y_coeff
water	45:35	0:0	6	;
water	46:12	0:0	6	Y
op	46:14	0:0	6	+=
water	46:17	0:0	6	1
op	46:19	0:0	6	<<
water	46:22	0:0	6	13
water	46:24	0:0	6	;
if	47:12	50:12	6	(hasAlpha)
cond	47:16	47:16	7	hasAlpha
water	47:16	0:0	8	hasAlpha
stmts	47:26	50:12	7	
water	47:26	0:0	8	{
water	48:16	0:0	8	A
op	48:18	0:0	8	=
water	48:20	0:0	8	abuf0
op	48:25	0:0	8	[
water	48:26	0:0	8	i
op	48:27	0:0	8	]
op	48:29	0:0	8	<<
water	48:32	0:0	8	11
water	48:34	0:0	8	;
water	49:16	0:0	8	A
op	49:18	0:0	8	+=
water	49:21	0:0	8	1
op	49:23	0:0	8	<<
water	49:26	0:0	8	13
water	49:28	0:0	8	;
water	50:12	0:0	8	}
water	51:12	0:0	6	R
op	51:14	0:0	6	=
water	51:16	0:0	6	V
op	51:18	0:0	6	*
water	51:20	0:0	6	c
op	51:21	0:0	6	->
water	51:23	0:0	6	yuv2rgb_v2r_coeff
water	51:40	0:0	6	;
water	52:12	0:0	6	G
op	52:14	0:0	6	=
water	52:16	0:0	6	V
op	52:18	0:0	6	*
water	52:20	0:0	6	c
op	52:21	0:0	6	->
water	52:23	0:0	6	yuv2rgb_v2g_coeff
op	52:41	0:0	6	+
water	52:43	0:0	6	U
op	52:45	0:0	6	*
water	52:47	0:0	6	c
op	52:48	0:0	6	->
water	52:50	0:0	6	yuv2rgb_u2g_coeff
water	52:67	0:0	6	;
water	53:12	0:0	6	B
op	53:14	0:0	6	=
water	53:43	0:0	6	U
op	53:45	0:0	6	*
water	53:47	0:0	6	c
op	53:48	0:0	6	->
water	53:50	0:0	6	yuv2rgb_u2b_coeff
water	53:67	0:0	6	;
call	54:12	54:68	6	output_pixel
arg	54:25	54:33	7	&dest[0]
op	54:25	0:0	8	&
water	54:26	0:0	8	dest
op	54:30	0:0	8	[
water	54:31	0:0	8	0
op	54:32	0:0	8	]
arg	54:35	54:68	7	av_clip_uintp2(R_B+Y,30)>>14
call	54:35	54:61	8	av_clip_uintp2
arg	54:50	54:57	9	R_B+Y
water	54:50	0:0	10	R_B
op	54:54	0:0	10	+
water	54:56	0:0	10	Y
arg	54:59	54:61	9	30
water	54:59	0:0	10	30
op	54:63	0:0	8	>>
water	54:66	0:0	8	14
water	54:69	0:0	6	;
call	55:12	55:68	6	output_pixel
arg	55:25	55:33	7	&dest[1]
op	55:25	0:0	8	&
water	55:26	0:0	8	dest
op	55:30	0:0	8	[
water	55:31	0:0	8	1
op	55:32	0:0	8	]
arg	55:35	55:68	7	av_clip_uintp2(G+Y,30)>>14
call	55:35	55:61	8	av_clip_uintp2
arg	55:52	55:57	9	G+Y
water	55:52	0:0	10	G
op	55:54	0:0	10	+
water	55:56	0:0	10	Y
arg	55:59	55:61	9	30
water	55:59	0:0	10	30
op	55:63	0:0	8	>>
water	55:66	0:0	8	14
water	55:69	0:0	6	;
call	56:12	56:68	6	output_pixel
arg	56:25	56:33	7	&dest[2]
op	56:25	0:0	8	&
water	56:26	0:0	8	dest
op	56:30	0:0	8	[
water	56:31	0:0	8	2
op	56:32	0:0	8	]
arg	56:35	56:68	7	av_clip_uintp2(B_R+Y,30)>>14
call	56:35	56:61	8	av_clip_uintp2
arg	56:50	56:57	9	B_R+Y
water	56:50	0:0	10	B_R
op	56:54	0:0	10	+
water	56:56	0:0	10	Y
arg	56:59	56:61	9	30
water	56:59	0:0	10	30
op	56:63	0:0	8	>>
water	56:66	0:0	8	14
water	56:69	0:0	6	;
if	57:12	60:12	6	(eightbytes)
cond	57:16	57:16	7	eightbytes
water	57:16	0:0	8	eightbytes
stmts	57:28	60:12	7	
water	57:28	0:0	8	{
call	58:16	58:66	8	output_pixel
arg	58:29	58:37	9	&dest[3]
op	58:29	0:0	10	&
water	58:30	0:0	10	dest
op	58:34	0:0	10	[
water	58:35	0:0	10	3
op	58:36	0:0	10	]
arg	58:39	58:66	9	av_clip_uintp2(A,30)>>14
call	58:39	58:59	10	av_clip_uintp2
arg	58:54	58:55	11	A
water	58:54	0:0	12	A
arg	58:57	58:59	11	30
water	58:57	0:0	12	30
op	58:61	0:0	10	>>
water	58:64	0:0	10	14
water	58:67	0:0	8	;
water	59:16	0:0	8	dest
op	59:21	0:0	8	+=
water	59:24	0:0	8	4
water	59:25	0:0	8	;
water	60:12	0:0	8	}
else	60:14	62:12	6
stmts	60:19	62:12	7	
water	60:19	0:0	8	{
water	61:16	0:0	8	dest
op	61:21	0:0	8	+=
water	61:24	0:0	8	3
water	61:25	0:0	8	;
water	62:12	0:0	8	}
water	63:8	0:0	6	}
water	64:4	0:0	4	}

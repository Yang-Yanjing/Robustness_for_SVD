func	1:0	64:0	0	static int	ifilter_send_frame
params	1:29	0:0	1	
param	1:30	1:50	2	InputFilter *	ifilter
param	1:52	1:66	2	AVFrame *	frame
stmnts	0:0	63:12	1	
decl	3:4	3:36	2	FilterGraph	*fg
op	3:20	0:0	2	=
water	3:22	0:0	2	ifilter
op	3:29	0:0	2	->
water	3:31	0:0	2	graph
decl	4:4	4:27	2	int	need_reinit
water	4:19	0:0	2	,
decl	4:4	4:27	2	int	ret
water	4:24	0:0	2	,
decl	4:4	4:27	2	int	i
water	6:4	0:0	2	need_reinit
op	6:16	0:0	2	=
water	6:18	0:0	2	ifilter
op	6:25	0:0	2	->
water	6:27	0:0	2	format
op	6:34	0:0	2	!=
water	6:37	0:0	2	frame
op	6:42	0:0	2	->
water	6:44	0:0	2	format
water	6:50	0:0	2	;
if	7:4	9:23	2	(! ! ifilter -> hw_frames_ctx != ! ! frame -> hw_frames_ctx || ( ifilter -> hw_frames_ctx && ifilter -> hw_frames_ctx -> data != frame -> hw_frames_ctx -> data ))
cond	7:8	8:93	3	! ! ifilter -> hw_frames_ctx != ! ! frame -> hw_frames_ctx || ( ifilter -> hw_frames_ctx && ifilter -> hw_frames_ctx -> data != frame -> hw_frames_ctx -> data )
op	7:8	0:0	4	!
op	7:9	0:0	4	!
water	7:10	0:0	4	ifilter
op	7:17	0:0	4	->
water	7:19	0:0	4	hw_frames_ctx
op	7:33	0:0	4	!=
op	7:36	0:0	4	!
op	7:37	0:0	4	!
water	7:38	0:0	4	frame
op	7:43	0:0	4	->
water	7:45	0:0	4	hw_frames_ctx
op	7:59	0:0	4	||
water	8:8	0:0	4	(
water	8:9	0:0	4	ifilter
op	8:16	0:0	4	->
water	8:18	0:0	4	hw_frames_ctx
op	8:32	0:0	4	&&
water	8:35	0:0	4	ifilter
op	8:42	0:0	4	->
water	8:44	0:0	4	hw_frames_ctx
op	8:57	0:0	4	->
water	8:59	0:0	4	data
op	8:64	0:0	4	!=
water	8:67	0:0	4	frame
op	8:72	0:0	4	->
water	8:74	0:0	4	hw_frames_ctx
op	8:87	0:0	4	->
water	8:89	0:0	4	data
water	8:93	0:0	4	)
stmts	9:8	9:23	3	
water	9:8	0:0	4	need_reinit
op	9:20	0:0	4	=
water	9:22	0:0	4	1
water	9:23	0:0	4	;
switch	10:4	20:4	2	(ifilter -> ist -> st -> codecpar -> codec_type)
cond	10:12	10:40	3	ifilter -> ist -> st -> codecpar -> codec_type
water	10:12	0:0	4	ifilter
op	10:19	0:0	4	->
water	10:21	0:0	4	ist
op	10:24	0:0	4	->
water	10:26	0:0	4	st
op	10:28	0:0	4	->
water	10:30	0:0	4	codecpar
op	10:38	0:0	4	->
water	10:40	0:0	4	codec_type
stmts	10:52	20:4	3	
water	10:52	0:0	4	{
label	11:4	11:27	4	case AVMEDIA_TYPE_AUDIO :
water	12:8	0:0	4	need_reinit
op	12:20	0:0	4	|=
water	12:23	0:0	4	ifilter
op	12:30	0:0	4	->
water	12:32	0:0	4	sample_rate
op	12:47	0:0	4	!=
water	12:50	0:0	4	frame
op	12:55	0:0	4	->
water	12:57	0:0	4	sample_rate
op	12:69	0:0	4	||
water	13:23	0:0	4	ifilter
op	13:30	0:0	4	->
water	13:32	0:0	4	channels
op	13:47	0:0	4	!=
water	13:50	0:0	4	frame
op	13:55	0:0	4	->
water	13:57	0:0	4	channels
op	13:66	0:0	4	||
water	14:23	0:0	4	ifilter
op	14:30	0:0	4	->
water	14:32	0:0	4	channel_layout
op	14:47	0:0	4	!=
water	14:50	0:0	4	frame
op	14:55	0:0	4	->
water	14:57	0:0	4	channel_layout
water	14:71	0:0	4	;
break	15:8	15:13	4	
label	16:4	16:27	4	case AVMEDIA_TYPE_VIDEO :
water	17:8	0:0	4	need_reinit
op	17:20	0:0	4	|=
water	17:23	0:0	4	ifilter
op	17:30	0:0	4	->
water	17:32	0:0	4	width
op	17:39	0:0	4	!=
water	17:42	0:0	4	frame
op	17:47	0:0	4	->
water	17:49	0:0	4	width
op	17:55	0:0	4	||
water	18:23	0:0	4	ifilter
op	18:30	0:0	4	->
water	18:32	0:0	4	height
op	18:39	0:0	4	!=
water	18:42	0:0	4	frame
op	18:47	0:0	4	->
water	18:49	0:0	4	height
water	18:55	0:0	4	;
break	19:8	19:13	4	
water	20:4	0:0	4	}
if	21:4	25:4	2	(need_reinit)
cond	21:8	21:8	3	need_reinit
water	21:8	0:0	4	need_reinit
stmts	21:21	25:4	3	
water	21:21	0:0	4	{
water	22:8	0:0	4	ret
op	22:12	0:0	4	=
call	22:14	22:58	4	ifilter_parameters_from_frame
arg	22:44	22:51	5	ifilter
water	22:44	0:0	6	ifilter
arg	22:53	22:58	5	frame
water	22:53	0:0	6	frame
water	22:59	0:0	4	;
if	23:8	24:22	4	(ret < 0)
cond	23:12	23:18	5	ret < 0
water	23:12	0:0	6	ret
op	23:16	0:0	6	<
water	23:18	0:0	6	0
stmts	24:12	24:22	5	
return	24:12	24:22	6	ret
water	24:19	0:0	7	ret
water	25:4	0:0	4	}
if	27:4	57:4	2	(need_reinit || ! fg -> graph)
cond	27:8	27:28	3	need_reinit || ! fg -> graph
water	27:8	0:0	4	need_reinit
op	27:20	0:0	4	||
op	27:23	0:0	4	!
water	27:24	0:0	4	fg
op	27:26	0:0	4	->
water	27:28	0:0	4	graph
stmts	27:35	57:4	3	
water	27:35	0:0	4	{
for	28:8	44:8	4	(i = 0 ;i < fg -> nb_inputs;i ++)
forinit	28:13	28:18	5	i = 0 ;
water	28:13	0:0	6	i
op	28:15	0:0	6	=
water	28:17	0:0	6	0
water	28:18	0:0	6	;
cond	28:20	28:28	5	i < fg -> nb_inputs
water	28:20	0:0	6	i
op	28:22	0:0	6	<
water	28:24	0:0	6	fg
op	28:26	0:0	6	->
water	28:28	0:0	6	nb_inputs
forexpr	28:39	28:40	5	i ++
water	28:39	0:0	6	i
op	28:40	0:0	6	++
stmts	28:44	44:8	5	
water	28:44	0:0	6	{
if	29:12	43:12	6	(!ifilter_has_all_input_formats (fg ))
cond	29:16	29:49	7	!ifilter_has_all_input_formats (fg )
op	29:16	0:0	8	!
call	29:17	29:49	8	ifilter_has_all_input_formats
arg	29:47	29:49	9	fg
water	29:47	0:0	10	fg
stmts	29:52	43:12	7	
water	29:52	0:0	8	{
decl	30:16	30:52	8	AVFrame	*tmp
op	30:29	0:0	8	=
call	30:31	30:51	9	av_frame_clone
arg	30:46	30:51	10	frame
water	30:46	0:0	11	frame
if	31:16	32:42	8	(! tmp)
cond	31:20	31:21	9	! tmp
op	31:20	0:0	10	!
water	31:21	0:0	10	tmp
stmts	32:20	32:42	9	
return	32:20	32:42	10	AVERROR(ENOMEM)
call	32:27	32:41	11	AVERROR
arg	32:35	32:41	12	ENOMEM
water	32:35	0:0	13	ENOMEM
call	33:16	33:36	8	av_frame_unref
arg	33:31	33:36	9	frame
water	33:31	0:0	10	frame
water	33:37	0:0	8	;
if	34:16	40:16	8	(!av_fifo_space (ifilter -> frame_queue ))
cond	34:20	34:55	9	!av_fifo_space (ifilter -> frame_queue )
op	34:20	0:0	10	!
call	34:21	34:55	10	av_fifo_space
arg	34:35	34:55	11	ifilter->frame_queue
water	34:35	0:0	12	ifilter
op	34:42	0:0	12	->
water	34:44	0:0	12	frame_queue
stmts	34:58	40:16	9	
water	34:58	0:0	10	{
water	35:20	0:0	10	ret
op	35:24	0:0	10	=
call	35:26	35:103	10	av_fifo_realloc2
arg	35:43	35:63	11	ifilter->frame_queue
water	35:43	0:0	12	ifilter
op	35:50	0:0	12	->
water	35:52	0:0	12	frame_queue
arg	35:65	35:103	11	2*av_fifo_size(ifilter->frame_queue)
water	35:65	0:0	12	2
call	35:67	35:102	12	*av_fifo_size
arg	35:82	35:102	13	ifilter->frame_queue
water	35:82	0:0	14	ifilter
op	35:89	0:0	14	->
water	35:91	0:0	14	frame_queue
water	35:104	0:0	10	;
if	36:20	39:20	10	(ret < 0)
cond	36:24	36:30	11	ret < 0
water	36:24	0:0	12	ret
op	36:28	0:0	12	<
water	36:30	0:0	12	0
stmts	36:33	39:20	11	
water	36:33	0:0	12	{
call	37:24	37:42	12	av_frame_free
arg	37:38	37:42	13	&tmp
op	37:38	0:0	14	&
water	37:39	0:0	14	tmp
water	37:43	0:0	12	;
return	38:24	38:34	12	ret
water	38:31	0:0	13	ret
water	39:20	0:0	12	}
water	40:16	0:0	10	}
call	41:16	41:83	8	av_fifo_generic_write
arg	41:38	41:58	9	ifilter->frame_queue
water	41:38	0:0	10	ifilter
op	41:45	0:0	10	->
water	41:47	0:0	10	frame_queue
arg	41:60	41:64	9	&tmp
op	41:60	0:0	10	&
water	41:61	0:0	10	tmp
arg	41:66	41:77	9	sizeof(tmp)
op	41:66	0:0	10	sizeof
water	41:72	0:0	10	(
water	41:73	0:0	10	tmp
water	41:76	0:0	10	)
arg	41:79	41:83	9	NULL
water	41:79	0:0	10	NULL
water	41:84	0:0	8	;
return	42:16	42:24	8	0
water	42:23	0:0	9	0
water	43:12	0:0	8	}
water	44:8	0:0	6	}
water	45:8	0:0	4	ret
op	45:12	0:0	4	=
call	45:14	45:28	4	reap_filters
arg	45:27	45:28	5	1
water	45:27	0:0	6	1
water	45:29	0:0	4	;
if	46:8	51:8	4	(ret < 0 && ret != AVERROR_EOF)
cond	46:12	46:30	5	ret < 0 && ret != AVERROR_EOF
water	46:12	0:0	6	ret
op	46:16	0:0	6	<
water	46:18	0:0	6	0
op	46:20	0:0	6	&&
water	46:23	0:0	6	ret
op	46:27	0:0	6	!=
water	46:30	0:0	6	AVERROR_EOF
stmts	46:43	51:8	5	
water	46:43	0:0	6	{
decl	47:12	47:28	6	char	errbuf[128]
call	48:12	48:51	6	av_strerror
arg	48:24	48:27	7	ret
water	48:24	0:0	8	ret
arg	48:29	48:35	7	errbuf
water	48:29	0:0	8	errbuf
arg	48:37	48:51	7	sizeof(errbuf)
op	48:37	0:0	8	sizeof
water	48:43	0:0	8	(
water	48:44	0:0	8	errbuf
water	48:50	0:0	8	)
water	48:52	0:0	6	;
call	49:12	49:76	6	av_log
arg	49:19	49:23	7	NULL
water	49:19	0:0	8	NULL
arg	49:25	49:37	7	AV_LOG_ERROR
water	49:25	0:0	8	AV_LOG_ERROR
arg	49:39	49:68	7	"Error while filtering: %s\n"
water	49:39	0:0	8	"Error while filtering: %s\n"
arg	49:70	49:76	7	errbuf
water	49:70	0:0	8	errbuf
water	49:77	0:0	6	;
return	50:12	50:22	6	ret
water	50:19	0:0	7	ret
water	51:8	0:0	6	}
water	52:8	0:0	4	ret
op	52:12	0:0	4	=
call	52:14	52:38	4	configure_filtergraph
arg	52:36	52:38	5	fg
water	52:36	0:0	6	fg
water	52:39	0:0	4	;
if	53:8	56:8	4	(ret < 0)
cond	53:12	53:18	5	ret < 0
water	53:12	0:0	6	ret
op	53:16	0:0	6	<
water	53:18	0:0	6	0
stmts	53:21	56:8	5	
water	53:21	0:0	6	{
call	54:12	54:72	6	av_log
arg	54:19	54:23	7	NULL
water	54:19	0:0	8	NULL
arg	54:25	54:37	7	AV_LOG_ERROR
water	54:25	0:0	8	AV_LOG_ERROR
arg	54:39	54:72	7	"Error reinitializing filters!\n"
water	54:39	0:0	8	"Error reinitializing filters!\n"
water	54:73	0:0	6	;
return	55:12	55:22	6	ret
water	55:19	0:0	7	ret
water	56:8	0:0	6	}
water	57:4	0:0	4	}
water	58:4	0:0	2	ret
op	58:8	0:0	2	=
call	58:10	58:85	2	av_buffersrc_add_frame_flags
arg	58:39	58:54	3	ifilter->filter
water	58:39	0:0	4	ifilter
op	58:46	0:0	4	->
water	58:48	0:0	4	filter
arg	58:56	58:61	3	frame
water	58:56	0:0	4	frame
arg	58:63	58:85	3	AV_BUFFERSRC_FLAG_PUSH
water	58:63	0:0	4	AV_BUFFERSRC_FLAG_PUSH
water	58:86	0:0	2	;
if	59:4	62:4	2	(ret < 0)
cond	59:8	59:14	3	ret < 0
water	59:8	0:0	4	ret
op	59:12	0:0	4	<
water	59:14	0:0	4	0
stmts	59:17	62:4	3	
water	59:17	0:0	4	{
call	60:8	60:60	4	av_log
arg	60:15	60:19	5	NULL
water	60:15	0:0	6	NULL
arg	60:21	60:33	5	AV_LOG_ERROR
water	60:21	0:0	6	AV_LOG_ERROR
arg	60:35	60:60	5	"Error while filtering\n"
water	60:35	0:0	6	"Error while filtering\n"
water	60:61	0:0	4	;
return	61:8	61:18	4	ret
water	61:15	0:0	5	ret
water	62:4	0:0	4	}
return	63:4	63:12	2	0
water	63:11	0:0	3	0

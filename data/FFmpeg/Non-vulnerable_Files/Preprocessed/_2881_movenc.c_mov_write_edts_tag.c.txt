func	2:0	77:0	0	static int	mov_write_edts_tag
params	2:29	0:0	1	
param	2:30	2:45	2	AVIOContext *	pb
param	2:47	2:65	2	MOVMuxContext *	mov
param	3:30	3:45	2	MOVTrack *	track
stmnts	0:0	76:15	1	
decl	5:4	6:68	2	int64_t	duration
op	5:21	0:0	2	=
call	5:23	6:67	3	av_rescale_rnd
arg	5:38	5:59	4	track->track_duration
water	5:38	0:0	5	track
op	5:43	0:0	5	->
water	5:45	0:0	5	track_duration
arg	5:61	5:74	4	MOV_TIMESCALE
water	5:61	0:0	5	MOV_TIMESCALE
arg	6:38	6:54	4	track->timescale
water	6:38	0:0	5	track
op	6:43	0:0	5	->
water	6:45	0:0	5	timescale
arg	6:56	6:67	4	AV_ROUND_UP
water	6:56	0:0	5	AV_ROUND_UP
decl	7:4	7:46	2	int	version
op	7:16	0:0	2	=
water	7:18	0:0	2	duration
op	7:27	0:0	2	<
water	7:29	0:0	2	INT32_MAX
water	7:39	0:0	2	?
water	7:41	0:0	2	0
water	7:43	0:0	2	:
water	7:45	0:0	2	1
decl	8:4	8:37	2	int	entry_size
water	8:18	0:0	2	,
decl	8:4	8:37	2	int	entry_count
water	8:31	0:0	2	,
decl	8:4	8:37	2	int	size
decl	9:4	9:46	2	int64_t	delay
water	9:17	0:0	2	,
decl	9:4	9:46	2	int64_t	start_ct
op	9:28	0:0	2	=
water	9:30	0:0	2	track
op	9:35	0:0	2	->
water	9:37	0:0	2	start_cts
decl	10:4	10:40	2	int64_t	start_dts
op	10:22	0:0	2	=
water	10:24	0:0	2	track
op	10:29	0:0	2	->
water	10:31	0:0	2	start_dts
if	11:4	20:4	2	(track -> entry)
cond	11:8	11:15	3	track -> entry
water	11:8	0:0	4	track
op	11:13	0:0	4	->
water	11:15	0:0	4	entry
stmts	11:22	20:4	3	
water	11:22	0:0	4	{
if	12:8	19:8	4	(start_dts != track -> cluster [ 0 ] . dts || start_ct != track -> cluster [ 0 ] . cts)
cond	12:12	12:80	5	start_dts != track -> cluster [ 0 ] . dts || start_ct != track -> cluster [ 0 ] . cts
water	12:12	0:0	6	start_dts
op	12:22	0:0	6	!=
water	12:25	0:0	6	track
op	12:30	0:0	6	->
water	12:32	0:0	6	cluster
op	12:39	0:0	6	[
water	12:40	0:0	6	0
op	12:41	0:0	6	]
op	12:42	0:0	6	.
water	12:43	0:0	6	dts
op	12:47	0:0	6	||
water	12:50	0:0	6	start_ct
op	12:59	0:0	6	!=
water	12:62	0:0	6	track
op	12:67	0:0	6	->
water	12:69	0:0	6	cluster
op	12:76	0:0	6	[
water	12:77	0:0	6	0
op	12:78	0:0	6	]
op	12:79	0:0	6	.
water	12:80	0:0	6	cts
stmts	12:85	19:8	5	
water	12:85	0:0	6	{
call	13:12	16:55	6	av_log
arg	13:19	13:26	7	mov->fc
water	13:19	0:0	8	mov
op	13:22	0:0	8	->
water	13:24	0:0	8	fc
arg	13:28	13:40	7	AV_LOG_DEBUG
water	13:28	0:0	8	AV_LOG_DEBUG
arg	14:19	14:100	7	"EDTS using dts:%"PRId64" cts:%d instead of dts:%"PRId64" cts:%"PRId64" tid:%d\n"
water	14:19	0:0	8	"EDTS using dts:%"
water	14:37	0:0	8	PRId64
water	14:43	0:0	8	" cts:%d instead of dts:%"
water	14:69	0:0	8	PRId64
water	14:75	0:0	8	" cts:%"
water	14:83	0:0	8	PRId64
water	14:89	0:0	8	" tid:%d\n"
arg	15:19	15:40	7	track->cluster[0].dts
water	15:19	0:0	8	track
op	15:24	0:0	8	->
water	15:26	0:0	8	cluster
op	15:33	0:0	8	[
water	15:34	0:0	8	0
op	15:35	0:0	8	]
op	15:36	0:0	8	.
water	15:37	0:0	8	dts
arg	15:42	15:63	7	track->cluster[0].cts
water	15:42	0:0	8	track
op	15:47	0:0	8	->
water	15:49	0:0	8	cluster
op	15:56	0:0	8	[
water	15:57	0:0	8	0
op	15:58	0:0	8	]
op	15:59	0:0	8	.
water	15:60	0:0	8	cts
arg	16:19	16:28	7	start_dts
water	16:19	0:0	8	start_dts
arg	16:30	16:38	7	start_ct
water	16:30	0:0	8	start_ct
arg	16:40	16:55	7	track->track_id
water	16:40	0:0	8	track
op	16:45	0:0	8	->
water	16:47	0:0	8	track_id
water	16:56	0:0	6	;
water	17:12	0:0	6	start_dts
op	17:22	0:0	6	=
water	17:24	0:0	6	track
op	17:29	0:0	6	->
water	17:31	0:0	6	cluster
op	17:38	0:0	6	[
water	17:39	0:0	6	0
op	17:40	0:0	6	]
op	17:41	0:0	6	.
water	17:42	0:0	6	dts
water	17:45	0:0	6	;
water	18:12	0:0	6	start_ct
op	18:22	0:0	6	=
water	18:24	0:0	6	track
op	18:29	0:0	6	->
water	18:31	0:0	6	cluster
op	18:38	0:0	6	[
water	18:39	0:0	6	0
op	18:40	0:0	6	]
op	18:41	0:0	6	.
water	18:42	0:0	6	cts
water	18:45	0:0	6	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}
water	21:4	0:0	2	delay
op	21:10	0:0	2	=
call	21:12	22:58	2	av_rescale_rnd
arg	21:27	21:47	3	start_dts+start_ct
water	21:27	0:0	4	start_dts
op	21:37	0:0	4	+
water	21:39	0:0	4	start_ct
arg	21:49	21:62	3	MOV_TIMESCALE
water	21:49	0:0	4	MOV_TIMESCALE
arg	22:27	22:43	3	track->timescale
water	22:27	0:0	4	track
op	22:32	0:0	4	->
water	22:34	0:0	4	timescale
arg	22:45	22:58	3	AV_ROUND_DOWN
water	22:45	0:0	4	AV_ROUND_DOWN
water	22:59	0:0	2	;
water	23:4	0:0	2	version
op	23:12	0:0	2	|=
water	23:15	0:0	2	delay
op	23:21	0:0	2	<
water	23:23	0:0	2	INT32_MAX
water	23:33	0:0	2	?
water	23:35	0:0	2	0
water	23:37	0:0	2	:
water	23:39	0:0	2	1
water	23:40	0:0	2	;
water	24:4	0:0	2	entry_size
op	24:15	0:0	2	=
water	24:17	0:0	2	(
water	24:18	0:0	2	version
op	24:26	0:0	2	==
water	24:29	0:0	2	1
water	24:30	0:0	2	)
water	24:32	0:0	2	?
water	24:34	0:0	2	20
water	24:37	0:0	2	:
water	24:39	0:0	2	12
water	24:41	0:0	2	;
water	25:4	0:0	2	entry_count
op	25:16	0:0	2	=
water	25:18	0:0	2	1
op	25:20	0:0	2	+
water	25:22	0:0	2	(
water	25:23	0:0	2	delay
op	25:29	0:0	2	>
water	25:31	0:0	2	0
water	25:32	0:0	2	)
water	25:33	0:0	2	;
water	26:4	0:0	2	size
op	26:9	0:0	2	=
water	26:11	0:0	2	24
op	26:14	0:0	2	+
water	26:16	0:0	2	entry_count
op	26:28	0:0	2	*
water	26:30	0:0	2	entry_size
water	26:40	0:0	2	;
call	28:4	28:22	2	avio_wb32
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:22	3	size
water	28:18	0:0	4	size
water	28:23	0:0	2	;
call	29:4	29:27	2	ffio_wfourcc
arg	29:17	29:19	3	pb
water	29:17	0:0	4	pb
arg	29:21	29:27	3	"edts"
water	29:21	0:0	4	"edts"
water	29:28	0:0	2	;
call	30:4	30:26	2	avio_wb32
arg	30:14	30:16	3	pb
water	30:14	0:0	4	pb
arg	30:18	30:26	3	size-8
water	30:18	0:0	4	size
op	30:23	0:0	4	-
water	30:25	0:0	4	8
water	30:27	0:0	2	;
call	31:4	31:27	2	ffio_wfourcc
arg	31:17	31:19	3	pb
water	31:17	0:0	4	pb
arg	31:21	31:27	3	"elst"
water	31:21	0:0	4	"elst"
water	31:28	0:0	2	;
call	32:4	32:23	2	avio_w8
arg	32:12	32:14	3	pb
water	32:12	0:0	4	pb
arg	32:16	32:23	3	version
water	32:16	0:0	4	version
water	32:24	0:0	2	;
call	33:4	33:19	2	avio_wb24
arg	33:14	33:16	3	pb
water	33:14	0:0	4	pb
arg	33:18	33:19	3	0
water	33:18	0:0	4	0
water	33:20	0:0	2	;
call	34:4	34:29	2	avio_wb32
arg	34:14	34:16	3	pb
water	34:14	0:0	4	pb
arg	34:18	34:29	3	entry_count
water	34:18	0:0	4	entry_count
water	34:30	0:0	2	;
if	35:4	49:4	2	(delay > 0)
cond	35:8	35:16	3	delay > 0
water	35:8	0:0	4	delay
op	35:14	0:0	4	>
water	35:16	0:0	4	0
stmts	35:19	49:4	3	
water	35:19	0:0	4	{
if	41:8	44:8	4	(version == 1)
cond	41:12	41:23	5	version == 1
water	41:12	0:0	6	version
op	41:20	0:0	6	==
water	41:23	0:0	6	1
stmts	41:26	44:8	5	
water	41:26	0:0	6	{
call	42:12	42:31	6	avio_wb64
arg	42:22	42:24	7	pb
water	42:22	0:0	8	pb
arg	42:26	42:31	7	delay
water	42:26	0:0	8	delay
water	42:32	0:0	6	;
call	43:12	43:28	6	avio_wb64
arg	43:22	43:24	7	pb
water	43:22	0:0	8	pb
arg	43:26	43:28	7	-1
op	43:26	0:0	8	-
water	43:27	0:0	8	1
water	43:29	0:0	6	;
water	44:8	0:0	6	}
else	44:10	47:8	4
stmts	44:15	47:8	5	
water	44:15	0:0	6	{
call	45:12	45:31	6	avio_wb32
arg	45:22	45:24	7	pb
water	45:22	0:0	8	pb
arg	45:26	45:31	7	delay
water	45:26	0:0	8	delay
water	45:32	0:0	6	;
call	46:12	46:28	6	avio_wb32
arg	46:22	46:24	7	pb
water	46:22	0:0	8	pb
arg	46:26	46:28	7	-1
op	46:26	0:0	8	-
water	46:27	0:0	8	1
water	46:29	0:0	6	;
water	47:8	0:0	6	}
call	48:8	48:32	4	avio_wb32
arg	48:18	48:20	5	pb
water	48:18	0:0	6	pb
arg	48:22	48:32	5	0x00010000
water	48:22	0:0	6	0
water	48:23	0:0	6	x00010000
water	48:33	0:0	4	;
water	49:4	0:0	4	}
else	49:6	60:4	2
stmts	49:11	60:4	3	
water	49:11	0:0	4	{
call	54:8	54:97	4	av_assert0
arg	54:19	54:97	5	av_rescale_rnd(start_dts,MOV_TIMESCALE,track->timescale,AV_ROUND_DOWN)<=0
call	54:19	54:91	6	av_rescale_rnd
arg	54:34	54:43	7	start_dts
water	54:34	0:0	8	start_dts
arg	54:45	54:58	7	MOV_TIMESCALE
water	54:45	0:0	8	MOV_TIMESCALE
arg	54:60	54:76	7	track->timescale
water	54:60	0:0	8	track
op	54:65	0:0	8	->
water	54:67	0:0	8	timescale
arg	54:78	54:91	7	AV_ROUND_DOWN
water	54:78	0:0	8	AV_ROUND_DOWN
op	54:93	0:0	6	<=
water	54:96	0:0	6	0
water	54:98	0:0	4	;
water	55:8	0:0	4	start_ct
op	55:18	0:0	4	=
op	55:20	0:0	4	-
call	55:21	55:39	4	FFMIN
arg	55:27	55:36	5	start_dts
water	55:27	0:0	6	start_dts
arg	55:38	55:39	5	0
water	55:38	0:0	6	0
water	55:40	0:0	4	;
water	59:8	0:0	4	duration
op	59:17	0:0	4	+=
water	59:20	0:0	4	delay
water	59:25	0:0	4	;
water	60:4	0:0	4	}
if	65:4	66:20	2	(mov -> flags & FF_MOV_FLAG_FRAGMENT)
cond	65:8	65:21	3	mov -> flags & FF_MOV_FLAG_FRAGMENT
water	65:8	0:0	4	mov
op	65:11	0:0	4	->
water	65:13	0:0	4	flags
op	65:19	0:0	4	&
water	65:21	0:0	4	FF_MOV_FLAG_FRAGMENT
stmts	66:8	66:20	3	
water	66:8	0:0	4	duration
op	66:17	0:0	4	=
water	66:19	0:0	4	0
water	66:20	0:0	4	;
if	68:4	71:4	2	(version == 1)
cond	68:8	68:19	3	version == 1
water	68:8	0:0	4	version
op	68:16	0:0	4	==
water	68:19	0:0	4	1
stmts	68:22	71:4	3	
water	68:22	0:0	4	{
call	69:8	69:30	4	avio_wb64
arg	69:18	69:20	5	pb
water	69:18	0:0	6	pb
arg	69:22	69:30	5	duration
water	69:22	0:0	6	duration
water	69:31	0:0	4	;
call	70:8	70:30	4	avio_wb64
arg	70:18	70:20	5	pb
water	70:18	0:0	6	pb
arg	70:22	70:30	5	start_ct
water	70:22	0:0	6	start_ct
water	70:31	0:0	4	;
water	71:4	0:0	4	}
else	71:6	74:4	2
stmts	71:11	74:4	3	
water	71:11	0:0	4	{
call	72:8	72:30	4	avio_wb32
arg	72:18	72:20	5	pb
water	72:18	0:0	6	pb
arg	72:22	72:30	5	duration
water	72:22	0:0	6	duration
water	72:31	0:0	4	;
call	73:8	73:30	4	avio_wb32
arg	73:18	73:20	5	pb
water	73:18	0:0	6	pb
arg	73:22	73:30	5	start_ct
water	73:22	0:0	6	start_ct
water	73:31	0:0	4	;
water	74:4	0:0	4	}
call	75:4	75:28	2	avio_wb32
arg	75:14	75:16	3	pb
water	75:14	0:0	4	pb
arg	75:18	75:28	3	0x00010000
water	75:18	0:0	4	0
water	75:19	0:0	4	x00010000
water	75:29	0:0	2	;
return	76:4	76:15	2	size
water	76:11	0:0	3	size

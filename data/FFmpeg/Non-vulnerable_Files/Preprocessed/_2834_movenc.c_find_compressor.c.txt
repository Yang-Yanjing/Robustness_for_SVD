func	1:0	24:0	0	static void	find_compressor
params	1:27	0:0	1	
param	1:28	1:50	2	char *	compressor_name
param	1:52	1:59	2	int	len
param	1:61	1:76	2	MOVTrack *	track
stmnts	0:0	23:4	1	
decl	3:4	3:30	2	AVDictionaryEntry	*encoder
decl	4:4	6:78	2	int	xdcam_res
op	4:18	0:0	2	=
water	4:21	0:0	2	(
water	4:22	0:0	2	track
op	4:27	0:0	2	->
water	4:29	0:0	2	enc
op	4:32	0:0	2	->
water	4:34	0:0	2	width
op	4:40	0:0	2	==
water	4:43	0:0	2	1280
op	4:48	0:0	2	&&
water	4:51	0:0	2	track
op	4:56	0:0	2	->
water	4:58	0:0	2	enc
op	4:61	0:0	2	->
water	4:63	0:0	2	height
op	4:70	0:0	2	==
water	4:73	0:0	2	720
water	4:76	0:0	2	)
op	5:18	0:0	2	||
water	5:21	0:0	2	(
water	5:22	0:0	2	track
op	5:27	0:0	2	->
water	5:29	0:0	2	enc
op	5:32	0:0	2	->
water	5:34	0:0	2	width
op	5:40	0:0	2	==
water	5:43	0:0	2	1440
op	5:48	0:0	2	&&
water	5:51	0:0	2	track
op	5:56	0:0	2	->
water	5:58	0:0	2	enc
op	5:61	0:0	2	->
water	5:63	0:0	2	height
op	5:70	0:0	2	==
water	5:73	0:0	2	1080
water	5:77	0:0	2	)
op	6:18	0:0	2	||
water	6:21	0:0	2	(
water	6:22	0:0	2	track
op	6:27	0:0	2	->
water	6:29	0:0	2	enc
op	6:32	0:0	2	->
water	6:34	0:0	2	width
op	6:40	0:0	2	==
water	6:43	0:0	2	1920
op	6:48	0:0	2	&&
water	6:51	0:0	2	track
op	6:56	0:0	2	->
water	6:58	0:0	2	enc
op	6:61	0:0	2	->
water	6:63	0:0	2	height
op	6:70	0:0	2	==
water	6:73	0:0	2	1080
water	6:77	0:0	2	)
if	7:4	10:4	2	(track -> mode == MODE_MOV && ( encoder =av_dict_get (track -> st -> metadata ,"encoder" ,NULL ,0 ) ))
cond	7:8	8:71	3	track -> mode == MODE_MOV && ( encoder =av_dict_get (track -> st -> metadata ,"encoder" ,NULL ,0 ) )
water	7:8	0:0	4	track
op	7:13	0:0	4	->
water	7:15	0:0	4	mode
op	7:20	0:0	4	==
water	7:23	0:0	4	MODE_MOV
op	7:32	0:0	4	&&
water	8:8	0:0	4	(
water	8:9	0:0	4	encoder
op	8:17	0:0	4	=
call	8:19	8:70	4	av_dict_get
arg	8:31	8:50	5	track->st->metadata
water	8:31	0:0	6	track
op	8:36	0:0	6	->
water	8:38	0:0	6	st
op	8:40	0:0	6	->
water	8:42	0:0	6	metadata
arg	8:52	8:61	5	"encoder"
water	8:52	0:0	6	"encoder"
arg	8:63	8:67	5	NULL
water	8:63	0:0	6	NULL
arg	8:69	8:70	5	0
water	8:69	0:0	6	0
water	8:71	0:0	4	)
stmts	8:74	10:4	3	
water	8:74	0:0	4	{
call	9:8	9:54	4	av_strlcpy
arg	9:19	9:34	5	compressor_name
water	9:19	0:0	6	compressor_name
arg	9:36	9:50	5	encoder->value
water	9:36	0:0	6	encoder
op	9:43	0:0	6	->
water	9:45	0:0	6	value
arg	9:52	9:54	5	32
water	9:52	0:0	6	32
water	9:55	0:0	4	;
water	10:4	0:0	4	}
else	10:6	23:4	2
stmts	10:11	23:4	3	
if	10:11	23:4	4	(track -> enc -> codec_id == AV_CODEC_ID_MPEG2VIDEO && xdcam_res)
cond	10:15	10:65	5	track -> enc -> codec_id == AV_CODEC_ID_MPEG2VIDEO && xdcam_res
water	10:15	0:0	6	track
op	10:20	0:0	6	->
water	10:22	0:0	6	enc
op	10:25	0:0	6	->
water	10:27	0:0	6	codec_id
op	10:36	0:0	6	==
water	10:39	0:0	6	AV_CODEC_ID_MPEG2VIDEO
op	10:62	0:0	6	&&
water	10:65	0:0	6	xdcam_res
stmts	10:76	23:4	5	
water	10:76	0:0	6	{
decl	11:8	11:71	6	int	interlaced
op	11:23	0:0	6	=
water	11:25	0:0	6	track
op	11:30	0:0	6	->
water	11:32	0:0	6	enc
op	11:35	0:0	6	->
water	11:37	0:0	6	field_order
op	11:49	0:0	6	>
water	11:51	0:0	6	AV_FIELD_PROGRESSIVE
decl	12:8	12:32	6	AVStream	*st
op	12:21	0:0	6	=
water	12:23	0:0	6	track
op	12:28	0:0	6	->
water	12:30	0:0	6	st
decl	13:8	13:45	6	int	rate
op	13:17	0:0	6	=
call	13:19	13:44	7	av_q2d
arg	13:26	13:44	8	find_fps(NULL,st)
call	13:26	13:43	9	find_fps
arg	13:35	13:39	10	NULL
water	13:35	0:0	11	NULL
arg	13:41	13:43	10	st
water	13:41	0:0	11	st
call	14:8	14:49	6	av_strlcatf
arg	14:20	14:35	7	compressor_name
water	14:20	0:0	8	compressor_name
arg	14:37	14:40	7	len
water	14:37	0:0	8	len
arg	14:42	14:49	7	"XDCAM"
water	14:42	0:0	8	"XDCAM"
water	14:50	0:0	6	;
if	15:8	17:8	6	(track -> enc -> pix_fmt == AV_PIX_FMT_YUV422P)
cond	15:12	15:35	7	track -> enc -> pix_fmt == AV_PIX_FMT_YUV422P
water	15:12	0:0	8	track
op	15:17	0:0	8	->
water	15:19	0:0	8	enc
op	15:22	0:0	8	->
water	15:24	0:0	8	pix_fmt
op	15:32	0:0	8	==
water	15:35	0:0	8	AV_PIX_FMT_YUV422P
stmts	15:55	17:8	7	
water	15:55	0:0	8	{
call	16:12	16:54	8	av_strlcatf
arg	16:24	16:39	9	compressor_name
water	16:24	0:0	10	compressor_name
arg	16:41	16:44	9	len
water	16:41	0:0	10	len
arg	16:46	16:54	9	" HD422"
water	16:46	0:0	10	" HD422"
water	16:55	0:0	8	;
water	17:8	0:0	8	}
else	17:10	19:8	6
stmts	17:15	19:8	7	
if	17:15	19:8	8	(track -> enc -> width == 1440)
cond	17:18	17:39	9	track -> enc -> width == 1440
water	17:18	0:0	10	track
op	17:23	0:0	10	->
water	17:25	0:0	10	enc
op	17:28	0:0	10	->
water	17:30	0:0	10	width
op	17:36	0:0	10	==
water	17:39	0:0	10	1440
stmts	17:45	19:8	9	
water	17:45	0:0	10	{
call	18:12	18:51	10	av_strlcatf
arg	18:24	18:39	11	compressor_name
water	18:24	0:0	12	compressor_name
arg	18:41	18:44	11	len
water	18:41	0:0	12	len
arg	18:46	18:51	11	" HD"
water	18:46	0:0	12	" HD"
water	18:52	0:0	10	;
water	19:8	0:0	10	}
else	19:10	20:52	6
stmts	20:12	20:52	7	
call	20:12	20:51	8	av_strlcatf
arg	20:24	20:39	9	compressor_name
water	20:24	0:0	10	compressor_name
arg	20:41	20:44	9	len
water	20:41	0:0	10	len
arg	20:46	20:51	9	" EX"
water	20:46	0:0	10	" EX"
water	20:52	0:0	8	;
call	21:8	21:93	6	av_strlcatf
arg	21:20	21:35	7	compressor_name
water	21:20	0:0	8	compressor_name
arg	21:37	21:40	7	len
water	21:37	0:0	8	len
arg	21:42	21:49	7	" %d%c"
water	21:42	0:0	8	" %d%c"
arg	21:51	21:69	7	track->enc->height
water	21:51	0:0	8	track
op	21:56	0:0	8	->
water	21:58	0:0	8	enc
op	21:61	0:0	8	->
water	21:63	0:0	8	height
arg	21:71	21:93	7	interlaced?'i':'p'
water	21:71	0:0	8	interlaced
water	21:82	0:0	8	?
water	21:84	0:0	8	'i'
water	21:88	0:0	8	:
water	21:90	0:0	8	'p'
water	21:94	0:0	6	;
call	22:8	22:71	6	av_strlcatf
arg	22:20	22:35	7	compressor_name
water	22:20	0:0	8	compressor_name
arg	22:37	22:40	7	len
water	22:37	0:0	8	len
arg	22:42	22:46	7	"%d"
water	22:42	0:0	8	"%d"
arg	22:48	22:71	7	rate*(interlaced+1)
water	22:48	0:0	8	rate
op	22:53	0:0	8	*
water	22:55	0:0	8	(
water	22:56	0:0	8	interlaced
op	22:67	0:0	8	+
water	22:69	0:0	8	1
water	22:70	0:0	8	)
water	22:72	0:0	6	;
water	23:4	0:0	6	}

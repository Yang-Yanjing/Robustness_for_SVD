func	1:0	28:0	0	static int	matroska_parse_cluster
params	1:33	0:0	1	
param	1:34	1:64	2	MatroskaDemuxContext *	matroska
stmnts	0:0	27:14	1	
decl	3:4	3:35	2	MatroskaCluster	cluster
op	3:28	0:0	2	=
water	3:30	0:0	2	{
water	3:32	0:0	2	0
water	3:34	0:0	2	}
decl	4:4	4:25	2	EbmlList	*blocks_list
decl	5:4	5:25	2	MatroskaBlock	*blocks
decl	6:4	6:14	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:14	2	int	res
decl	7:4	7:15	2	int64_t	pos
if	8:4	9:59	2	(! matroska -> contains_ssa)
cond	8:8	8:19	3	! matroska -> contains_ssa
op	8:8	0:0	4	!
water	8:9	0:0	4	matroska
op	8:17	0:0	4	->
water	8:19	0:0	4	contains_ssa
stmts	9:8	9:59	3	
return	9:8	9:59	4	matroska_parse_cluster_incremental(matroska)
call	9:15	9:58	5	matroska_parse_cluster_incremental
arg	9:50	9:58	6	matroska
water	9:50	0:0	7	matroska
water	10:4	0:0	2	pos
op	10:8	0:0	2	=
call	10:10	10:37	2	avio_tell
arg	10:20	10:37	3	matroska->ctx->pb
water	10:20	0:0	4	matroska
op	10:28	0:0	4	->
water	10:30	0:0	4	ctx
op	10:33	0:0	4	->
water	10:35	0:0	4	pb
water	10:38	0:0	2	;
water	11:4	0:0	2	matroska
op	11:12	0:0	2	->
water	11:14	0:0	2	prev_pkt
op	11:23	0:0	2	=
water	11:25	0:0	2	NULL
water	11:29	0:0	2	;
if	12:4	13:16	2	(matroska -> current_id)
cond	12:8	12:18	3	matroska -> current_id
water	12:8	0:0	4	matroska
op	12:16	0:0	4	->
water	12:18	0:0	4	current_id
stmts	13:8	13:16	3	
water	13:8	0:0	4	pos
op	13:12	0:0	4	-=
water	13:15	0:0	4	4
water	13:16	0:0	4	;
water	14:4	0:0	2	res
op	14:16	0:0	2	=
call	14:18	14:66	2	ebml_parse
arg	14:29	14:37	3	matroska
water	14:29	0:0	4	matroska
arg	14:39	14:56	3	matroska_clusters
water	14:39	0:0	4	matroska_clusters
arg	14:58	14:66	3	&cluster
op	14:58	0:0	4	&
water	14:59	0:0	4	cluster
water	14:67	0:0	2	;
water	15:4	0:0	2	blocks_list
op	15:16	0:0	2	=
op	15:18	0:0	2	&
water	15:19	0:0	2	cluster
op	15:26	0:0	2	.
water	15:27	0:0	2	blocks
water	15:33	0:0	2	;
water	16:4	0:0	2	blocks
op	16:16	0:0	2	=
water	16:18	0:0	2	blocks_list
op	16:29	0:0	2	->
water	16:31	0:0	2	elem
water	16:35	0:0	2	;
for	17:4	25:8	2	(i = 0 ;i < blocks_list -> nb_elem;i ++)
forinit	17:9	17:14	3	i = 0 ;
water	17:9	0:0	4	i
op	17:11	0:0	4	=
water	17:13	0:0	4	0
water	17:14	0:0	4	;
cond	17:16	17:33	3	i < blocks_list -> nb_elem
water	17:16	0:0	4	i
op	17:18	0:0	4	<
water	17:20	0:0	4	blocks_list
op	17:31	0:0	4	->
water	17:33	0:0	4	nb_elem
forexpr	17:42	17:43	3	i ++
water	17:42	0:0	4	i
op	17:43	0:0	4	++
stmts	18:8	25:8	3	
if	18:8	25:8	4	(blocks [ i ] . bin . size > 0 && blocks [ i ] . bin . data)
cond	18:12	18:52	5	blocks [ i ] . bin . size > 0 && blocks [ i ] . bin . data
water	18:12	0:0	6	blocks
op	18:18	0:0	6	[
water	18:19	0:0	6	i
op	18:20	0:0	6	]
op	18:21	0:0	6	.
water	18:22	0:0	6	bin
op	18:25	0:0	6	.
water	18:26	0:0	6	size
op	18:31	0:0	6	>
water	18:33	0:0	6	0
op	18:35	0:0	6	&&
water	18:38	0:0	6	blocks
op	18:44	0:0	6	[
water	18:45	0:0	6	i
op	18:46	0:0	6	]
op	18:47	0:0	6	.
water	18:48	0:0	6	bin
op	18:51	0:0	6	.
water	18:52	0:0	6	data
stmts	18:58	25:8	5	
water	18:58	0:0	6	{
decl	19:12	19:78	6	int	is_keyframe
op	19:28	0:0	6	=
water	19:30	0:0	6	blocks
op	19:36	0:0	6	[
water	19:37	0:0	6	i
op	19:38	0:0	6	]
op	19:39	0:0	6	.
water	19:40	0:0	6	non_simple
water	19:51	0:0	6	?
op	19:53	0:0	6	!
water	19:54	0:0	6	blocks
op	19:60	0:0	6	[
water	19:61	0:0	6	i
op	19:62	0:0	6	]
op	19:63	0:0	6	.
water	19:64	0:0	6	reference
water	19:74	0:0	6	:
op	19:76	0:0	6	-
water	19:77	0:0	6	1
water	20:12	0:0	6	res
op	20:16	0:0	6	=
call	20:18	24:64	6	matroska_parse_block
arg	20:39	20:47	7	matroska
water	20:39	0:0	8	matroska
arg	20:49	20:67	7	blocks[i].bin.data
water	20:49	0:0	8	blocks
op	20:55	0:0	8	[
water	20:56	0:0	8	i
op	20:57	0:0	8	]
op	20:58	0:0	8	.
water	20:59	0:0	8	bin
op	20:62	0:0	8	.
water	20:63	0:0	8	data
arg	21:39	21:57	7	blocks[i].bin.size
water	21:39	0:0	8	blocks
op	21:45	0:0	8	[
water	21:46	0:0	8	i
op	21:47	0:0	8	]
op	21:48	0:0	8	.
water	21:49	0:0	8	bin
op	21:52	0:0	8	.
water	21:53	0:0	8	size
arg	21:59	21:76	7	blocks[i].bin.pos
water	21:59	0:0	8	blocks
op	21:65	0:0	8	[
water	21:66	0:0	8	i
op	21:67	0:0	8	]
op	21:68	0:0	8	.
water	21:69	0:0	8	bin
op	21:72	0:0	8	.
water	21:73	0:0	8	pos
arg	22:39	22:55	7	cluster.timecode
water	22:39	0:0	8	cluster
op	22:46	0:0	8	.
water	22:47	0:0	8	timecode
arg	22:57	22:75	7	blocks[i].duration
water	22:57	0:0	8	blocks
op	22:63	0:0	8	[
water	22:64	0:0	8	i
op	22:65	0:0	8	]
op	22:66	0:0	8	.
water	22:67	0:0	8	duration
arg	23:39	23:50	7	is_keyframe
water	23:39	0:0	8	is_keyframe
arg	23:52	23:56	7	NULL
water	23:52	0:0	8	NULL
arg	23:58	23:59	7	0
water	23:58	0:0	8	0
arg	23:61	23:62	7	0
water	23:61	0:0	8	0
arg	23:64	23:67	7	pos
water	23:64	0:0	8	pos
arg	24:39	24:64	7	blocks[i].discard_padding
water	24:39	0:0	8	blocks
op	24:45	0:0	8	[
water	24:46	0:0	8	i
op	24:47	0:0	8	]
op	24:48	0:0	8	.
water	24:49	0:0	8	discard_padding
water	24:65	0:0	6	;
water	25:8	0:0	6	}
call	26:4	26:40	2	ebml_free
arg	26:14	26:30	3	matroska_cluster
water	26:14	0:0	4	matroska_cluster
arg	26:32	26:40	3	&cluster
op	26:32	0:0	4	&
water	26:33	0:0	4	cluster
water	26:41	0:0	2	;
return	27:4	27:14	2	res
water	27:11	0:0	3	res

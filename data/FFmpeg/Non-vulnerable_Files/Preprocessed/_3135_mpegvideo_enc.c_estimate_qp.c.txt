func	1:0	33:0	0	static int	estimate_qp
params	1:22	0:0	1	
param	1:23	1:40	2	MpegEncContext *	s
param	1:42	1:53	2	int	dry_run
stmnts	2:4	32:12	1	
if	2:4	6:4	2	(s -> next_lambda)
cond	2:8	2:11	3	s -> next_lambda
water	2:8	0:0	4	s
op	2:9	0:0	4	->
water	2:11	0:0	4	next_lambda
stmts	2:23	6:4	3	
water	2:23	0:0	4	{
water	3:8	0:0	4	s
op	3:9	0:0	4	->
water	3:11	0:0	4	current_picture_ptr
op	3:30	0:0	4	->
water	3:32	0:0	4	f
op	3:33	0:0	4	->
water	3:35	0:0	4	quality
op	3:43	0:0	4	=
water	4:8	0:0	4	s
op	4:9	0:0	4	->
water	4:11	0:0	4	current_picture
op	4:26	0:0	4	.
water	4:27	0:0	4	f
op	4:28	0:0	4	->
water	4:30	0:0	4	quality
op	4:38	0:0	4	=
water	4:40	0:0	4	s
op	4:41	0:0	4	->
water	4:43	0:0	4	next_lambda
water	4:54	0:0	4	;
if	5:8	5:38	4	(! dry_run)
cond	5:11	5:12	5	! dry_run
op	5:11	0:0	6	!
water	5:12	0:0	6	dry_run
stmts	5:21	5:38	5	
water	5:21	0:0	6	s
op	5:22	0:0	6	->
water	5:24	0:0	6	next_lambda
op	5:35	0:0	6	=
water	5:37	0:0	6	0
water	5:38	0:0	6	;
water	6:4	0:0	4	}
else	6:6	11:4	2
stmts	6:11	11:4	3	
if	6:11	11:4	4	(! s -> fixed_qscale)
cond	6:15	6:19	5	! s -> fixed_qscale
op	6:15	0:0	6	!
water	6:16	0:0	6	s
op	6:17	0:0	6	->
water	6:19	0:0	6	fixed_qscale
stmts	6:33	11:4	5	
water	6:33	0:0	6	{
water	7:8	0:0	6	s
op	7:9	0:0	6	->
water	7:11	0:0	6	current_picture_ptr
op	7:30	0:0	6	->
water	7:32	0:0	6	f
op	7:33	0:0	6	->
water	7:35	0:0	6	quality
op	7:43	0:0	6	=
water	8:8	0:0	6	s
op	8:9	0:0	6	->
water	8:11	0:0	6	current_picture
op	8:26	0:0	6	.
water	8:27	0:0	6	f
op	8:28	0:0	6	->
water	8:30	0:0	6	quality
op	8:38	0:0	6	=
call	8:40	8:74	6	ff_rate_estimate_qscale
arg	8:64	8:65	7	s
water	8:64	0:0	8	s
arg	8:67	8:74	7	dry_run
water	8:67	0:0	8	dry_run
water	8:75	0:0	6	;
if	9:8	10:21	6	(s -> current_picture . f -> quality < 0)
cond	9:12	9:44	7	s -> current_picture . f -> quality < 0
water	9:12	0:0	8	s
op	9:13	0:0	8	->
water	9:15	0:0	8	current_picture
op	9:30	0:0	8	.
water	9:31	0:0	8	f
op	9:32	0:0	8	->
water	9:34	0:0	8	quality
op	9:42	0:0	8	<
water	9:44	0:0	8	0
stmts	10:12	10:21	7	
return	10:12	10:21	8	-1
op	10:19	0:0	9	-
water	10:20	0:0	9	1
water	11:4	0:0	6	}
if	12:4	29:4	2	(s -> adaptive_quant)
cond	12:7	12:10	3	s -> adaptive_quant
water	12:7	0:0	4	s
op	12:8	0:0	4	->
water	12:10	0:0	4	adaptive_quant
stmts	12:25	29:4	3	
water	12:25	0:0	4	{
switch	13:8	26:8	4	(s -> codec_id)
cond	13:15	13:18	5	s -> codec_id
water	13:15	0:0	6	s
op	13:16	0:0	6	->
water	13:18	0:0	6	codec_id
stmts	13:27	26:8	5	
water	13:27	0:0	6	{
label	14:8	14:30	6	case AV_CODEC_ID_MPEG4 :
if	15:12	16:41	6	(CONFIG_MPEG4_ENCODER)
cond	15:16	15:16	7	CONFIG_MPEG4_ENCODER
water	15:16	0:0	8	CONFIG_MPEG4_ENCODER
stmts	16:16	16:41	7	
call	16:16	16:40	8	ff_clean_mpeg4_qscales
arg	16:39	16:40	9	s
water	16:39	0:0	10	s
water	16:41	0:0	8	;
break	17:12	17:17	6	
label	18:8	18:29	6	case AV_CODEC_ID_H263 :
label	19:8	19:30	6	case AV_CODEC_ID_H263P :
label	20:8	20:29	6	case AV_CODEC_ID_FLV1 :
if	21:12	22:40	6	(CONFIG_H263_ENCODER)
cond	21:16	21:16	7	CONFIG_H263_ENCODER
water	21:16	0:0	8	CONFIG_H263_ENCODER
stmts	22:16	22:40	7	
call	22:16	22:39	8	ff_clean_h263_qscales
arg	22:38	22:39	9	s
water	22:38	0:0	10	s
water	22:40	0:0	8	;
break	23:12	23:17	6	
label	24:8	24:15	6	default :
call	25:12	25:32	6	ff_init_qscale_tab
arg	25:31	25:32	7	s
water	25:31	0:0	8	s
water	25:33	0:0	6	;
water	26:8	0:0	6	}
water	27:8	0:0	4	s
op	27:9	0:0	4	->
water	27:11	0:0	4	lambda
op	27:17	0:0	4	=
water	27:19	0:0	4	s
op	27:20	0:0	4	->
water	27:22	0:0	4	lambda_table
op	27:34	0:0	4	[
water	27:35	0:0	4	0
op	27:36	0:0	4	]
water	27:37	0:0	4	;
water	29:4	0:0	4	}
else	29:5	30:49	2
stmts	30:8	30:49	3	
water	30:8	0:0	4	s
op	30:9	0:0	4	->
water	30:11	0:0	4	lambda
op	30:18	0:0	4	=
water	30:20	0:0	4	s
op	30:21	0:0	4	->
water	30:23	0:0	4	current_picture
op	30:38	0:0	4	.
water	30:39	0:0	4	f
op	30:40	0:0	4	->
water	30:42	0:0	4	quality
water	30:49	0:0	4	;
call	31:4	31:19	2	update_qscale
arg	31:18	31:19	3	s
water	31:18	0:0	4	s
water	31:20	0:0	2	;
return	32:4	32:12	2	0
water	32:11	0:0	3	0
func	35:0	67:0	0	static int	estimate_qp
params	35:22	0:0	1	
param	35:23	35:40	2	MpegEncContext *	s
param	35:42	35:53	2	int	dry_run
stmnts	36:4	66:12	1	
if	36:4	40:4	2	(s -> next_lambda)
cond	36:8	36:11	3	s -> next_lambda
water	36:8	0:0	4	s
op	36:9	0:0	4	->
water	36:11	0:0	4	next_lambda
stmts	36:23	40:4	3	
water	36:23	0:0	4	{
water	37:8	0:0	4	s
op	37:9	0:0	4	->
water	37:11	0:0	4	current_picture_ptr
op	37:30	0:0	4	->
water	37:32	0:0	4	f
op	37:33	0:0	4	->
water	37:35	0:0	4	quality
op	37:43	0:0	4	=
water	38:8	0:0	4	s
op	38:9	0:0	4	->
water	38:11	0:0	4	current_picture
op	38:26	0:0	4	.
water	38:27	0:0	4	f
op	38:28	0:0	4	->
water	38:30	0:0	4	quality
op	38:38	0:0	4	=
water	38:40	0:0	4	s
op	38:41	0:0	4	->
water	38:43	0:0	4	next_lambda
water	38:54	0:0	4	;
if	39:8	39:38	4	(! dry_run)
cond	39:11	39:12	5	! dry_run
op	39:11	0:0	6	!
water	39:12	0:0	6	dry_run
stmts	39:21	39:38	5	
water	39:21	0:0	6	s
op	39:22	0:0	6	->
water	39:24	0:0	6	next_lambda
op	39:35	0:0	6	=
water	39:37	0:0	6	0
water	39:38	0:0	6	;
water	40:4	0:0	4	}
else	40:6	45:4	2
stmts	40:11	45:4	3	
if	40:11	45:4	4	(! s -> fixed_qscale)
cond	40:15	40:19	5	! s -> fixed_qscale
op	40:15	0:0	6	!
water	40:16	0:0	6	s
op	40:17	0:0	6	->
water	40:19	0:0	6	fixed_qscale
stmts	40:33	45:4	5	
water	40:33	0:0	6	{
water	41:8	0:0	6	s
op	41:9	0:0	6	->
water	41:11	0:0	6	current_picture_ptr
op	41:30	0:0	6	->
water	41:32	0:0	6	f
op	41:33	0:0	6	->
water	41:35	0:0	6	quality
op	41:43	0:0	6	=
water	42:8	0:0	6	s
op	42:9	0:0	6	->
water	42:11	0:0	6	current_picture
op	42:26	0:0	6	.
water	42:27	0:0	6	f
op	42:28	0:0	6	->
water	42:30	0:0	6	quality
op	42:38	0:0	6	=
call	42:40	42:74	6	ff_rate_estimate_qscale
arg	42:64	42:65	7	s
water	42:64	0:0	8	s
arg	42:67	42:74	7	dry_run
water	42:67	0:0	8	dry_run
water	42:75	0:0	6	;
if	43:8	44:21	6	(s -> current_picture . f -> quality < 0)
cond	43:12	43:44	7	s -> current_picture . f -> quality < 0
water	43:12	0:0	8	s
op	43:13	0:0	8	->
water	43:15	0:0	8	current_picture
op	43:30	0:0	8	.
water	43:31	0:0	8	f
op	43:32	0:0	8	->
water	43:34	0:0	8	quality
op	43:42	0:0	8	<
water	43:44	0:0	8	0
stmts	44:12	44:21	7	
return	44:12	44:21	8	-1
op	44:19	0:0	9	-
water	44:20	0:0	9	1
water	45:4	0:0	6	}
if	46:4	63:4	2	(s -> adaptive_quant)
cond	46:7	46:10	3	s -> adaptive_quant
water	46:7	0:0	4	s
op	46:8	0:0	4	->
water	46:10	0:0	4	adaptive_quant
stmts	46:25	63:4	3	
water	46:25	0:0	4	{
switch	47:8	60:8	4	(s -> codec_id)
cond	47:15	47:18	5	s -> codec_id
water	47:15	0:0	6	s
op	47:16	0:0	6	->
water	47:18	0:0	6	codec_id
stmts	47:27	60:8	5	
water	47:27	0:0	6	{
label	48:8	48:30	6	case AV_CODEC_ID_MPEG4 :
if	49:12	50:41	6	(CONFIG_MPEG4_ENCODER)
cond	49:16	49:16	7	CONFIG_MPEG4_ENCODER
water	49:16	0:0	8	CONFIG_MPEG4_ENCODER
stmts	50:16	50:41	7	
call	50:16	50:40	8	ff_clean_mpeg4_qscales
arg	50:39	50:40	9	s
water	50:39	0:0	10	s
water	50:41	0:0	8	;
break	51:12	51:17	6	
label	52:8	52:29	6	case AV_CODEC_ID_H263 :
label	53:8	53:30	6	case AV_CODEC_ID_H263P :
label	54:8	54:29	6	case AV_CODEC_ID_FLV1 :
if	55:12	56:40	6	(CONFIG_H263_ENCODER)
cond	55:16	55:16	7	CONFIG_H263_ENCODER
water	55:16	0:0	8	CONFIG_H263_ENCODER
stmts	56:16	56:40	7	
call	56:16	56:39	8	ff_clean_h263_qscales
arg	56:38	56:39	9	s
water	56:38	0:0	10	s
water	56:40	0:0	8	;
break	57:12	57:17	6	
label	58:8	58:15	6	default :
call	59:12	59:32	6	ff_init_qscale_tab
arg	59:31	59:32	7	s
water	59:31	0:0	8	s
water	59:33	0:0	6	;
water	60:8	0:0	6	}
water	61:8	0:0	4	s
op	61:9	0:0	4	->
water	61:11	0:0	4	lambda
op	61:17	0:0	4	=
water	61:19	0:0	4	s
op	61:20	0:0	4	->
water	61:22	0:0	4	lambda_table
op	61:34	0:0	4	[
water	61:35	0:0	4	0
op	61:36	0:0	4	]
water	61:37	0:0	4	;
water	63:4	0:0	4	}
else	63:5	64:49	2
stmts	64:8	64:49	3	
water	64:8	0:0	4	s
op	64:9	0:0	4	->
water	64:11	0:0	4	lambda
op	64:18	0:0	4	=
water	64:20	0:0	4	s
op	64:21	0:0	4	->
water	64:23	0:0	4	current_picture
op	64:38	0:0	4	.
water	64:39	0:0	4	f
op	64:40	0:0	4	->
water	64:42	0:0	4	quality
water	64:49	0:0	4	;
call	65:4	65:19	2	update_qscale
arg	65:18	65:19	3	s
water	65:18	0:0	4	s
water	65:20	0:0	2	;
return	66:4	66:12	2	0
water	66:11	0:0	3	0

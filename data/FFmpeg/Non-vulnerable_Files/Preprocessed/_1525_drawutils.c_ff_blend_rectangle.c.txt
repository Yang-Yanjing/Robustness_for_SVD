func	1:0	48:0	0	void	ff_blend_rectangle
params	1:23	0:0	1	
param	1:24	1:43	2	FFDrawContext *	draw
param	1:45	1:63	2	FFDrawColor *	color
param	2:24	2:38	2	uint8_t *	dst[]
param	2:40	2:58	2	int	dst_linesize[]
param	3:24	3:33	2	int	dst_w
param	3:35	3:44	2	int	dst_h
param	4:24	4:30	2	int	x0
param	4:32	4:38	2	int	y0
param	4:40	4:45	2	int	w
param	4:47	4:52	2	int	h
stmnts	6:4	47:4	1	
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	alpha
water	6:18	0:0	2	,
water	6:20	0:0	2	nb_planes
water	6:29	0:0	2	,
water	6:31	0:0	2	nb_comp
water	6:38	0:0	2	,
water	6:40	0:0	2	plane
water	6:45	0:0	2	,
water	6:47	0:0	2	comp
water	6:51	0:0	2	;
decl	7:4	7:63	2	int	w_sub
water	7:13	0:0	2	,
decl	7:4	7:63	2	int	h_sub
water	7:20	0:0	2	,
decl	7:4	7:63	2	int	x_sub
water	7:27	0:0	2	,
decl	7:4	7:63	2	int	y_sub
water	7:34	0:0	2	,
decl	7:4	7:63	2	int	left
water	7:40	0:0	2	,
decl	7:4	7:63	2	int	right
water	7:47	0:0	2	,
decl	7:4	7:63	2	int	top
water	7:52	0:0	2	,
decl	7:4	7:63	2	int	bottom
water	7:60	0:0	2	,
decl	7:4	7:63	2	int	y
decl	8:4	8:19	2	uint8_t	*p0
water	8:15	0:0	2	,
decl	8:4	8:19	2	uint8_t	*p
call	10:4	10:38	2	clip_interval
arg	10:18	10:23	3	dst_w
water	10:18	0:0	4	dst_w
arg	10:25	10:28	3	&x0
op	10:25	0:0	4	&
water	10:26	0:0	4	x0
arg	10:30	10:32	3	&w
op	10:30	0:0	4	&
water	10:31	0:0	4	w
arg	10:34	10:38	3	NULL
water	10:34	0:0	4	NULL
water	10:39	0:0	2	;
call	11:4	11:38	2	clip_interval
arg	11:18	11:23	3	dst_h
water	11:18	0:0	4	dst_h
arg	11:25	11:28	3	&y0
op	11:25	0:0	4	&
water	11:26	0:0	4	y0
arg	11:30	11:32	3	&h
op	11:30	0:0	4	&
water	11:31	0:0	4	h
arg	11:34	11:38	3	NULL
water	11:34	0:0	4	NULL
water	11:39	0:0	2	;
if	12:4	13:14	2	(w <= 0 || h <= 0 || ! color -> rgba [ 3 ])
cond	12:8	12:42	3	w <= 0 || h <= 0 || ! color -> rgba [ 3 ]
water	12:8	0:0	4	w
op	12:10	0:0	4	<=
water	12:13	0:0	4	0
op	12:15	0:0	4	||
water	12:18	0:0	4	h
op	12:20	0:0	4	<=
water	12:23	0:0	4	0
op	12:25	0:0	4	||
op	12:28	0:0	4	!
water	12:29	0:0	4	color
op	12:34	0:0	4	->
water	12:36	0:0	4	rgba
op	12:40	0:0	4	[
water	12:41	0:0	4	3
op	12:42	0:0	4	]
stmts	13:8	13:14	3	
return	13:8	13:14	4	
water	15:4	0:0	2	alpha
op	15:10	0:0	2	=
water	15:12	0:0	2	0
water	15:13	0:0	2	x10203
op	15:20	0:0	2	*
water	15:22	0:0	2	color
op	15:27	0:0	2	->
water	15:29	0:0	2	rgba
op	15:33	0:0	2	[
water	15:34	0:0	2	3
op	15:35	0:0	2	]
op	15:37	0:0	2	+
water	15:39	0:0	2	0
water	15:40	0:0	2	x2
water	15:42	0:0	2	;
water	16:4	0:0	2	nb_planes
op	16:14	0:0	2	=
water	16:16	0:0	2	(
water	16:17	0:0	2	draw
op	16:21	0:0	2	->
water	16:23	0:0	2	nb_planes
op	16:33	0:0	2	-
water	16:35	0:0	2	1
water	16:36	0:0	2	)
op	16:38	0:0	2	|
water	16:40	0:0	2	1
water	16:41	0:0	2	;
for	17:4	47:4	2	(plane = 0 ;plane < nb_planes;plane ++)
forinit	17:9	17:18	3	plane = 0 ;
water	17:9	0:0	4	plane
op	17:15	0:0	4	=
water	17:17	0:0	4	0
water	17:18	0:0	4	;
cond	17:20	17:28	3	plane < nb_planes
water	17:20	0:0	4	plane
op	17:26	0:0	4	<
water	17:28	0:0	4	nb_planes
forexpr	17:39	17:44	3	plane ++
water	17:39	0:0	4	plane
op	17:44	0:0	4	++
stmts	17:48	47:4	3	
water	17:48	0:0	4	{
water	18:8	0:0	4	nb_comp
op	18:16	0:0	4	=
water	18:18	0:0	4	draw
op	18:22	0:0	4	->
water	18:24	0:0	4	pixelstep
op	18:33	0:0	4	[
water	18:34	0:0	4	plane
op	18:39	0:0	4	]
water	18:40	0:0	4	;
water	19:8	0:0	4	p0
op	19:11	0:0	4	=
call	19:13	19:62	4	pointer_at
arg	19:24	19:28	5	draw
water	19:24	0:0	6	draw
arg	19:30	19:33	5	dst
water	19:30	0:0	6	dst
arg	19:35	19:47	5	dst_linesize
water	19:35	0:0	6	dst_linesize
arg	19:49	19:54	5	plane
water	19:49	0:0	6	plane
arg	19:56	19:58	5	x0
water	19:56	0:0	6	x0
arg	19:60	19:62	5	y0
water	19:60	0:0	6	y0
water	19:63	0:0	4	;
water	20:8	0:0	4	w_sub
op	20:14	0:0	4	=
water	20:16	0:0	4	w
water	20:17	0:0	4	;
water	21:8	0:0	4	h_sub
op	21:14	0:0	4	=
water	21:16	0:0	4	h
water	21:17	0:0	4	;
water	22:8	0:0	4	x_sub
op	22:14	0:0	4	=
water	22:16	0:0	4	x0
water	22:18	0:0	4	;
water	23:8	0:0	4	y_sub
op	23:14	0:0	4	=
water	23:16	0:0	4	y0
water	23:18	0:0	4	;
call	24:8	24:75	4	subsampling_bounds
arg	24:27	24:44	5	draw->hsub[plane]
water	24:27	0:0	6	draw
op	24:31	0:0	6	->
water	24:33	0:0	6	hsub
op	24:37	0:0	6	[
water	24:38	0:0	6	plane
op	24:43	0:0	6	]
arg	24:46	24:52	5	&x_sub
op	24:46	0:0	6	&
water	24:47	0:0	6	x_sub
arg	24:54	24:60	5	&w_sub
op	24:54	0:0	6	&
water	24:55	0:0	6	w_sub
arg	24:62	24:67	5	&left
op	24:62	0:0	6	&
water	24:63	0:0	6	left
arg	24:69	24:75	5	&right
op	24:69	0:0	6	&
water	24:70	0:0	6	right
water	24:76	0:0	4	;
call	25:8	25:75	4	subsampling_bounds
arg	25:27	25:44	5	draw->vsub[plane]
water	25:27	0:0	6	draw
op	25:31	0:0	6	->
water	25:33	0:0	6	vsub
op	25:37	0:0	6	[
water	25:38	0:0	6	plane
op	25:43	0:0	6	]
arg	25:46	25:52	5	&y_sub
op	25:46	0:0	6	&
water	25:47	0:0	6	y_sub
arg	25:54	25:60	5	&h_sub
op	25:54	0:0	6	&
water	25:55	0:0	6	h_sub
arg	25:62	25:66	5	&top
op	25:62	0:0	6	&
water	25:63	0:0	6	top
arg	25:68	25:75	5	&bottom
op	25:68	0:0	6	&
water	25:69	0:0	6	bottom
water	25:76	0:0	4	;
for	26:8	46:8	4	(comp = 0 ;comp < nb_comp;comp ++)
forinit	26:13	26:21	5	comp = 0 ;
water	26:13	0:0	6	comp
op	26:18	0:0	6	=
water	26:20	0:0	6	0
water	26:21	0:0	6	;
cond	26:23	26:30	5	comp < nb_comp
water	26:23	0:0	6	comp
op	26:28	0:0	6	<
water	26:30	0:0	6	nb_comp
forexpr	26:39	26:43	5	comp ++
water	26:39	0:0	6	comp
op	26:43	0:0	6	++
stmts	26:47	46:8	5	
water	26:47	0:0	6	{
if	27:12	28:24	6	(!component_used (draw ,plane ,comp ))
cond	27:16	27:49	7	!component_used (draw ,plane ,comp )
op	27:16	0:0	8	!
call	27:17	27:49	8	component_used
arg	27:32	27:36	9	draw
water	27:32	0:0	10	draw
arg	27:38	27:43	9	plane
water	27:38	0:0	10	plane
arg	27:45	27:49	9	comp
water	27:45	0:0	10	comp
stmts	28:16	28:24	7	
continue	28:16	28:24	8	
water	29:12	0:0	6	p
op	29:14	0:0	6	=
water	29:16	0:0	6	p0
op	29:19	0:0	6	+
water	29:21	0:0	6	comp
water	29:25	0:0	6	;
if	30:12	35:12	6	(top)
cond	30:16	30:16	7	top
water	30:16	0:0	8	top
stmts	30:21	35:12	7	
water	30:21	0:0	8	{
call	31:16	33:57	8	blend_line
arg	31:27	31:28	9	p
water	31:27	0:0	10	p
arg	31:30	31:57	9	color->comp[plane].u8[comp]
water	31:30	0:0	10	color
op	31:35	0:0	10	->
water	31:37	0:0	10	comp
op	31:41	0:0	10	[
water	31:42	0:0	10	plane
op	31:47	0:0	10	]
op	31:48	0:0	10	.
water	31:49	0:0	10	u8
op	31:51	0:0	10	[
water	31:52	0:0	10	comp
op	31:56	0:0	10	]
arg	31:59	31:69	9	alpha>>1
water	31:59	0:0	10	alpha
op	31:65	0:0	10	>>
water	31:68	0:0	10	1
arg	32:27	32:49	9	draw->pixelstep[plane]
water	32:27	0:0	10	draw
op	32:31	0:0	10	->
water	32:33	0:0	10	pixelstep
op	32:42	0:0	10	[
water	32:43	0:0	10	plane
op	32:48	0:0	10	]
arg	32:51	32:56	9	w_sub
water	32:51	0:0	10	w_sub
arg	33:27	33:44	9	draw->hsub[plane]
water	33:27	0:0	10	draw
op	33:31	0:0	10	->
water	33:33	0:0	10	hsub
op	33:37	0:0	10	[
water	33:38	0:0	10	plane
op	33:43	0:0	10	]
arg	33:46	33:50	9	left
water	33:46	0:0	10	left
arg	33:52	33:57	9	right
water	33:52	0:0	10	right
water	33:58	0:0	8	;
water	34:16	0:0	8	p
op	34:18	0:0	8	+=
water	34:21	0:0	8	dst_linesize
op	34:33	0:0	8	[
water	34:34	0:0	8	plane
op	34:39	0:0	8	]
water	34:40	0:0	8	;
water	35:12	0:0	8	}
for	36:12	41:12	6	(y = 0 ;y < h_sub;y ++)
forinit	36:17	36:22	7	y = 0 ;
water	36:17	0:0	8	y
op	36:19	0:0	8	=
water	36:21	0:0	8	0
water	36:22	0:0	8	;
cond	36:24	36:28	7	y < h_sub
water	36:24	0:0	8	y
op	36:26	0:0	8	<
water	36:28	0:0	8	h_sub
forexpr	36:35	36:36	7	y ++
water	36:35	0:0	8	y
op	36:36	0:0	8	++
stmts	36:40	41:12	7	
water	36:40	0:0	8	{
call	37:16	39:57	8	blend_line
arg	37:27	37:28	9	p
water	37:27	0:0	10	p
arg	37:30	37:57	9	color->comp[plane].u8[comp]
water	37:30	0:0	10	color
op	37:35	0:0	10	->
water	37:37	0:0	10	comp
op	37:41	0:0	10	[
water	37:42	0:0	10	plane
op	37:47	0:0	10	]
op	37:48	0:0	10	.
water	37:49	0:0	10	u8
op	37:51	0:0	10	[
water	37:52	0:0	10	comp
op	37:56	0:0	10	]
arg	37:59	37:64	9	alpha
water	37:59	0:0	10	alpha
arg	38:27	38:49	9	draw->pixelstep[plane]
water	38:27	0:0	10	draw
op	38:31	0:0	10	->
water	38:33	0:0	10	pixelstep
op	38:42	0:0	10	[
water	38:43	0:0	10	plane
op	38:48	0:0	10	]
arg	38:51	38:56	9	w_sub
water	38:51	0:0	10	w_sub
arg	39:27	39:44	9	draw->hsub[plane]
water	39:27	0:0	10	draw
op	39:31	0:0	10	->
water	39:33	0:0	10	hsub
op	39:37	0:0	10	[
water	39:38	0:0	10	plane
op	39:43	0:0	10	]
arg	39:46	39:50	9	left
water	39:46	0:0	10	left
arg	39:52	39:57	9	right
water	39:52	0:0	10	right
water	39:58	0:0	8	;
water	40:16	0:0	8	p
op	40:18	0:0	8	+=
water	40:21	0:0	8	dst_linesize
op	40:33	0:0	8	[
water	40:34	0:0	8	plane
op	40:39	0:0	8	]
water	40:40	0:0	8	;
water	41:12	0:0	8	}
if	42:12	45:58	6	(bottom)
cond	42:16	42:16	7	bottom
water	42:16	0:0	8	bottom
stmts	43:16	45:58	7	
call	43:16	45:57	8	blend_line
arg	43:27	43:28	9	p
water	43:27	0:0	10	p
arg	43:30	43:57	9	color->comp[plane].u8[comp]
water	43:30	0:0	10	color
op	43:35	0:0	10	->
water	43:37	0:0	10	comp
op	43:41	0:0	10	[
water	43:42	0:0	10	plane
op	43:47	0:0	10	]
op	43:48	0:0	10	.
water	43:49	0:0	10	u8
op	43:51	0:0	10	[
water	43:52	0:0	10	comp
op	43:56	0:0	10	]
arg	43:59	43:69	9	alpha>>1
water	43:59	0:0	10	alpha
op	43:65	0:0	10	>>
water	43:68	0:0	10	1
arg	44:27	44:49	9	draw->pixelstep[plane]
water	44:27	0:0	10	draw
op	44:31	0:0	10	->
water	44:33	0:0	10	pixelstep
op	44:42	0:0	10	[
water	44:43	0:0	10	plane
op	44:48	0:0	10	]
arg	44:51	44:56	9	w_sub
water	44:51	0:0	10	w_sub
arg	45:27	45:44	9	draw->hsub[plane]
water	45:27	0:0	10	draw
op	45:31	0:0	10	->
water	45:33	0:0	10	hsub
op	45:37	0:0	10	[
water	45:38	0:0	10	plane
op	45:43	0:0	10	]
arg	45:46	45:50	9	left
water	45:46	0:0	10	left
arg	45:52	45:57	9	right
water	45:52	0:0	10	right
water	45:58	0:0	8	;
water	46:8	0:0	6	}
water	47:4	0:0	4	}

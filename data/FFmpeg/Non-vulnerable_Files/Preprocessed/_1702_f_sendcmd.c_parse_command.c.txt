func	1:0	72:0	0	static int	parse_command
params	1:24	0:0	1	
param	1:25	1:37	2	Command *	cmd
param	1:39	1:52	2	int	cmd_count
param	1:54	1:72	2	int	interval_count
param	2:25	2:41	2	const char * *	buf
param	2:43	2:56	2	void *	log_ctx
stmnts	0:0	71:14	1	
decl	4:4	4:11	2	int	ret
call	5:4	5:34	2	memset
arg	5:11	5:14	3	cmd
water	5:11	0:0	4	cmd
arg	5:16	5:17	3	0
water	5:16	0:0	4	0
arg	5:19	5:34	3	sizeof(Command)
op	5:19	0:0	4	sizeof
water	5:25	0:0	4	(
water	5:26	0:0	4	Command
water	5:33	0:0	4	)
water	5:35	0:0	2	;
water	6:4	0:0	2	cmd
op	6:7	0:0	2	->
water	6:9	0:0	2	index
op	6:15	0:0	2	=
water	6:17	0:0	2	cmd_count
water	6:26	0:0	2	;
op	8:4	0:0	2	*
water	8:5	0:0	2	buf
op	8:9	0:0	2	+=
call	8:12	8:31	2	strspn
arg	8:19	8:23	3	*buf
op	8:19	0:0	4	*
water	8:20	0:0	4	buf
arg	8:25	8:31	3	SPACES
water	8:25	0:0	4	SPACES
water	8:32	0:0	2	;
if	10:4	43:4	2	(* * buf == '[')
cond	10:8	10:17	3	* * buf == '['
op	10:8	0:0	4	*
op	10:9	0:0	4	*
water	10:10	0:0	4	buf
op	10:14	0:0	4	==
water	10:17	0:0	4	'['
stmts	10:22	43:4	3	
water	10:22	0:0	4	{
water	11:8	0:0	4	(
op	11:9	0:0	4	*
water	11:10	0:0	4	buf
water	11:13	0:0	4	)
op	11:14	0:0	4	++
water	11:16	0:0	4	;
while	12:8	35:8	4	(* * buf)
cond	12:15	12:17	5	* * buf
op	12:15	0:0	6	*
op	12:16	0:0	6	*
water	12:17	0:0	6	buf
stmts	12:22	35:8	5	
water	12:22	0:0	6	{
decl	13:12	13:42	6	int	len
op	13:20	0:0	6	=
call	13:22	13:41	7	strcspn
arg	13:30	13:34	8	*buf
op	13:30	0:0	9	*
water	13:31	0:0	9	buf
arg	13:36	13:41	8	"|+]"
water	13:36	0:0	9	"|+]"
if	14:12	14:95	6	(!strncmp (* buf ,"enter" ,strlen ("enter" ) ))
cond	14:21	14:60	7	!strncmp (* buf ,"enter" ,strlen ("enter" ) )
op	14:21	0:0	8	!
call	14:22	14:60	8	strncmp
arg	14:30	14:34	9	*buf
op	14:30	0:0	10	*
water	14:31	0:0	10	buf
arg	14:36	14:43	9	"enter"
water	14:36	0:0	10	"enter"
arg	14:45	14:60	9	strlen("enter")
call	14:45	14:59	10	strlen
arg	14:52	14:59	11	"enter"
water	14:52	0:0	12	"enter"
stmts	14:63	14:95	7	
water	14:63	0:0	8	cmd
op	14:66	0:0	8	->
water	14:68	0:0	8	flags
op	14:74	0:0	8	|=
water	14:77	0:0	8	COMMAND_FLAG_ENTER
water	14:95	0:0	8	;
else	15:12	15:95	6
stmts	15:17	15:95	7	
if	15:17	15:95	8	(!strncmp (* buf ,"leave" ,strlen ("leave" ) ))
cond	15:21	15:60	9	!strncmp (* buf ,"leave" ,strlen ("leave" ) )
op	15:21	0:0	10	!
call	15:22	15:60	10	strncmp
arg	15:30	15:34	11	*buf
op	15:30	0:0	12	*
water	15:31	0:0	12	buf
arg	15:36	15:43	11	"leave"
water	15:36	0:0	12	"leave"
arg	15:45	15:60	11	strlen("leave")
call	15:45	15:59	12	strlen
arg	15:52	15:59	13	"leave"
water	15:52	0:0	14	"leave"
stmts	15:63	15:95	9	
water	15:63	0:0	10	cmd
op	15:66	0:0	10	->
water	15:68	0:0	10	flags
op	15:74	0:0	10	|=
water	15:77	0:0	10	COMMAND_FLAG_LEAVE
water	15:95	0:0	10	;
else	16:12	23:12	6
stmts	16:17	23:12	7	
water	16:17	0:0	8	{
decl	17:16	17:33	8	char	flag_buf[64]
call	18:16	18:59	8	av_strlcpy
arg	18:27	18:35	9	flag_buf
water	18:27	0:0	10	flag_buf
arg	18:37	18:41	9	*buf
op	18:37	0:0	10	*
water	18:38	0:0	10	buf
arg	18:43	18:59	9	sizeof(flag_buf)
op	18:43	0:0	10	sizeof
water	18:49	0:0	10	(
water	18:50	0:0	10	flag_buf
water	18:58	0:0	10	)
water	18:60	0:0	8	;
call	19:16	21:58	8	av_log
arg	19:23	19:30	9	log_ctx
water	19:23	0:0	10	log_ctx
arg	19:32	19:44	9	AV_LOG_ERROR
water	19:32	0:0	10	AV_LOG_ERROR
arg	20:23	20:73	9	"Unknown flag '%s' in interval #%d, command #%d\n"
water	20:23	0:0	10	"Unknown flag '%s' in interval #%d, command #%d\n"
arg	21:23	21:31	9	flag_buf
water	21:23	0:0	10	flag_buf
arg	21:33	21:47	9	interval_count
water	21:33	0:0	10	interval_count
arg	21:49	21:58	9	cmd_count
water	21:49	0:0	10	cmd_count
water	21:59	0:0	8	;
return	22:16	22:38	8	AVERROR(EINVAL)
call	22:23	22:37	9	AVERROR
arg	22:31	22:37	10	EINVAL
water	22:31	0:0	11	EINVAL
water	23:12	0:0	8	}
op	24:12	0:0	6	*
water	24:13	0:0	6	buf
op	24:17	0:0	6	+=
water	24:20	0:0	6	len
water	24:23	0:0	6	;
if	25:12	26:21	6	(* * buf == ']')
cond	25:16	25:25	7	* * buf == ']'
op	25:16	0:0	8	*
op	25:17	0:0	8	*
water	25:18	0:0	8	buf
op	25:22	0:0	8	==
water	25:25	0:0	8	']'
stmts	26:16	26:21	7	
break	26:16	26:21	8	
if	27:12	32:12	6	(!strspn (* buf ,"+|" ))
cond	27:16	27:34	7	!strspn (* buf ,"+|" )
op	27:16	0:0	8	!
call	27:17	27:34	8	strspn
arg	27:24	27:28	9	*buf
op	27:24	0:0	10	*
water	27:25	0:0	10	buf
arg	27:30	27:34	9	"+|"
water	27:30	0:0	10	"+|"
stmts	27:37	32:12	7	
water	27:37	0:0	8	{
call	28:16	30:55	8	av_log
arg	28:23	28:30	9	log_ctx
water	28:23	0:0	10	log_ctx
arg	28:32	28:44	9	AV_LOG_ERROR
water	28:32	0:0	10	AV_LOG_ERROR
arg	29:23	29:79	9	"Invalid flags char '%c' in interval #%d, command #%d\n"
water	29:23	0:0	10	"Invalid flags char '%c' in interval #%d, command #%d\n"
arg	30:23	30:28	9	**buf
op	30:23	0:0	10	*
op	30:24	0:0	10	*
water	30:25	0:0	10	buf
arg	30:30	30:44	9	interval_count
water	30:30	0:0	10	interval_count
arg	30:46	30:55	9	cmd_count
water	30:46	0:0	10	cmd_count
water	30:56	0:0	8	;
return	31:16	31:38	8	AVERROR(EINVAL)
call	31:23	31:37	9	AVERROR
arg	31:31	31:37	10	EINVAL
water	31:31	0:0	11	EINVAL
water	32:12	0:0	8	}
if	33:12	34:24	6	(* * buf)
cond	33:16	33:18	7	* * buf
op	33:16	0:0	8	*
op	33:17	0:0	8	*
water	33:18	0:0	8	buf
stmts	34:16	34:24	7	
water	34:16	0:0	8	(
op	34:17	0:0	8	*
water	34:18	0:0	8	buf
water	34:21	0:0	8	)
op	34:22	0:0	8	++
water	34:24	0:0	8	;
water	35:8	0:0	6	}
if	36:8	41:8	4	(* * buf != ']')
cond	36:12	36:21	5	* * buf != ']'
op	36:12	0:0	6	*
op	36:13	0:0	6	*
water	36:14	0:0	6	buf
op	36:18	0:0	6	!=
water	36:21	0:0	6	']'
stmts	36:26	41:8	5	
water	36:26	0:0	6	{
call	37:12	39:78	6	av_log
arg	37:19	37:26	7	log_ctx
water	37:19	0:0	8	log_ctx
arg	37:28	37:40	7	AV_LOG_ERROR
water	37:28	0:0	8	AV_LOG_ERROR
arg	38:19	39:51	7	"Missing flag terminator or extraneous data found at the end of flags ""in interval #%d, command #%d\n"
water	38:19	0:0	8	"Missing flag terminator or extraneous data found at the end of flags "
water	39:19	0:0	8	"in interval #%d, command #%d\n"
arg	39:53	39:67	7	interval_count
water	39:53	0:0	8	interval_count
arg	39:69	39:78	7	cmd_count
water	39:69	0:0	8	cmd_count
water	39:79	0:0	6	;
return	40:12	40:34	6	AVERROR(EINVAL)
call	40:19	40:33	7	AVERROR
arg	40:27	40:33	8	EINVAL
water	40:27	0:0	9	EINVAL
water	41:8	0:0	6	}
water	42:8	0:0	4	(
op	42:9	0:0	4	*
water	42:10	0:0	4	buf
water	42:13	0:0	4	)
op	42:14	0:0	4	++
water	42:16	0:0	4	;
water	43:4	0:0	4	}
else	43:6	45:4	2
stmts	43:11	45:4	3	
water	43:11	0:0	4	{
water	44:8	0:0	4	cmd
op	44:11	0:0	4	->
water	44:13	0:0	4	flags
op	44:19	0:0	4	=
water	44:21	0:0	4	COMMAND_FLAG_ENTER
water	44:39	0:0	4	;
water	45:4	0:0	4	}
op	46:4	0:0	2	*
water	46:5	0:0	2	buf
op	46:9	0:0	2	+=
call	46:12	46:31	2	strspn
arg	46:19	46:23	3	*buf
op	46:19	0:0	4	*
water	46:20	0:0	4	buf
arg	46:25	46:31	3	SPACES
water	46:25	0:0	4	SPACES
water	46:32	0:0	2	;
water	47:4	0:0	2	cmd
op	47:7	0:0	2	->
water	47:9	0:0	2	target
op	47:16	0:0	2	=
call	47:18	47:50	2	av_get_token
arg	47:31	47:34	3	buf
water	47:31	0:0	4	buf
arg	47:36	47:50	3	COMMAND_DELIMS
water	47:36	0:0	4	COMMAND_DELIMS
water	47:51	0:0	2	;
if	48:4	54:4	2	(! cmd -> target || ! cmd -> target [ 0 ])
cond	48:8	48:38	3	! cmd -> target || ! cmd -> target [ 0 ]
op	48:8	0:0	4	!
water	48:9	0:0	4	cmd
op	48:12	0:0	4	->
water	48:14	0:0	4	target
op	48:21	0:0	4	||
op	48:24	0:0	4	!
water	48:25	0:0	4	cmd
op	48:28	0:0	4	->
water	48:30	0:0	4	target
op	48:36	0:0	4	[
water	48:37	0:0	4	0
op	48:38	0:0	4	]
stmts	48:41	54:4	3	
water	48:41	0:0	4	{
call	49:8	51:40	4	av_log
arg	49:15	49:22	5	log_ctx
water	49:15	0:0	6	log_ctx
arg	49:24	49:36	5	AV_LOG_ERROR
water	49:24	0:0	6	AV_LOG_ERROR
arg	50:15	50:67	5	"No target specified in interval #%d, command #%d\n"
water	50:15	0:0	6	"No target specified in interval #%d, command #%d\n"
arg	51:15	51:29	5	interval_count
water	51:15	0:0	6	interval_count
arg	51:31	51:40	5	cmd_count
water	51:31	0:0	6	cmd_count
water	51:41	0:0	4	;
water	52:8	0:0	4	ret
op	52:12	0:0	4	=
call	52:14	52:28	4	AVERROR
arg	52:22	52:28	5	EINVAL
water	52:22	0:0	6	EINVAL
water	52:29	0:0	4	;
goto	53:8	53:17	4	fail
water	53:13	0:0	5	fail
water	54:4	0:0	4	}
op	55:4	0:0	2	*
water	55:5	0:0	2	buf
op	55:9	0:0	2	+=
call	55:12	55:31	2	strspn
arg	55:19	55:23	3	*buf
op	55:19	0:0	4	*
water	55:20	0:0	4	buf
arg	55:25	55:31	3	SPACES
water	55:25	0:0	4	SPACES
water	55:32	0:0	2	;
water	56:4	0:0	2	cmd
op	56:7	0:0	2	->
water	56:9	0:0	2	command
op	56:17	0:0	2	=
call	56:19	56:51	2	av_get_token
arg	56:32	56:35	3	buf
water	56:32	0:0	4	buf
arg	56:37	56:51	3	COMMAND_DELIMS
water	56:37	0:0	4	COMMAND_DELIMS
water	56:52	0:0	2	;
if	57:4	63:4	2	(! cmd -> command || ! cmd -> command [ 0 ])
cond	57:8	57:40	3	! cmd -> command || ! cmd -> command [ 0 ]
op	57:8	0:0	4	!
water	57:9	0:0	4	cmd
op	57:12	0:0	4	->
water	57:14	0:0	4	command
op	57:22	0:0	4	||
op	57:25	0:0	4	!
water	57:26	0:0	4	cmd
op	57:29	0:0	4	->
water	57:31	0:0	4	command
op	57:38	0:0	4	[
water	57:39	0:0	4	0
op	57:40	0:0	4	]
stmts	57:43	63:4	3	
water	57:43	0:0	4	{
call	58:8	60:40	4	av_log
arg	58:15	58:22	5	log_ctx
water	58:15	0:0	6	log_ctx
arg	58:24	58:36	5	AV_LOG_ERROR
water	58:24	0:0	6	AV_LOG_ERROR
arg	59:15	59:68	5	"No command specified in interval #%d, command #%d\n"
water	59:15	0:0	6	"No command specified in interval #%d, command #%d\n"
arg	60:15	60:29	5	interval_count
water	60:15	0:0	6	interval_count
arg	60:31	60:40	5	cmd_count
water	60:31	0:0	6	cmd_count
water	60:41	0:0	4	;
water	61:8	0:0	4	ret
op	61:12	0:0	4	=
call	61:14	61:28	4	AVERROR
arg	61:22	61:28	5	EINVAL
water	61:22	0:0	6	EINVAL
water	61:29	0:0	4	;
goto	62:8	62:17	4	fail
water	62:13	0:0	5	fail
water	63:4	0:0	4	}
op	64:4	0:0	2	*
water	64:5	0:0	2	buf
op	64:9	0:0	2	+=
call	64:12	64:31	2	strspn
arg	64:19	64:23	3	*buf
op	64:19	0:0	4	*
water	64:20	0:0	4	buf
arg	64:25	64:31	3	SPACES
water	64:25	0:0	4	SPACES
water	64:32	0:0	2	;
water	65:4	0:0	2	cmd
op	65:7	0:0	2	->
water	65:9	0:0	2	arg
op	65:13	0:0	2	=
call	65:15	65:47	2	av_get_token
arg	65:28	65:31	3	buf
water	65:28	0:0	4	buf
arg	65:33	65:47	3	COMMAND_DELIMS
water	65:33	0:0	4	COMMAND_DELIMS
water	65:48	0:0	2	;
return	66:4	66:12	2	1
water	66:11	0:0	3	1
label	67:0	67:4	2	fail :
call	68:4	68:25	2	av_freep
arg	68:13	68:25	3	&cmd->target
op	68:13	0:0	4	&
water	68:14	0:0	4	cmd
op	68:17	0:0	4	->
water	68:19	0:0	4	target
water	68:26	0:0	2	;
call	69:4	69:26	2	av_freep
arg	69:13	69:26	3	&cmd->command
op	69:13	0:0	4	&
water	69:14	0:0	4	cmd
op	69:17	0:0	4	->
water	69:19	0:0	4	command
water	69:27	0:0	2	;
call	70:4	70:22	2	av_freep
arg	70:13	70:22	3	&cmd->arg
op	70:13	0:0	4	&
water	70:14	0:0	4	cmd
op	70:17	0:0	4	->
water	70:19	0:0	4	arg
water	70:23	0:0	2	;
return	71:4	71:14	2	ret
water	71:11	0:0	3	ret

func	1:0	22:0	0	static int	asf_read_language_list
params	1:33	0:0	1	
param	1:34	1:52	2	AVFormatContext *	s
param	1:54	1:77	2	const GUIDParseTable *	g
stmnts	0:0	21:12	1	
decl	3:4	3:36	2	ASFContext	*asf
op	3:22	0:0	2	=
water	3:24	0:0	2	s
op	3:25	0:0	2	->
water	3:27	0:0	2	priv_data
decl	4:4	4:29	2	AVIOContext	*pb
op	4:22	0:0	2	=
water	4:24	0:0	2	s
op	4:25	0:0	2	->
water	4:27	0:0	2	pb
decl	5:4	5:14	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:14	2	int	ret
decl	6:4	6:37	2	uint64_t	size
op	6:22	0:0	2	=
call	6:24	6:36	3	avio_rl64
arg	6:34	6:36	4	pb
water	6:34	0:0	5	pb
decl	7:4	7:37	2	uint16_t	nb_langs
op	7:22	0:0	2	=
call	7:24	7:36	3	avio_rl16
arg	7:34	7:36	4	pb
water	7:34	0:0	5	pb
if	8:4	19:4	2	(nb_langs < ASF_MAX_STREAMS)
cond	8:8	8:19	3	nb_langs < ASF_MAX_STREAMS
water	8:8	0:0	4	nb_langs
op	8:17	0:0	4	<
water	8:19	0:0	4	ASF_MAX_STREAMS
stmts	8:36	19:4	3	
water	8:36	0:0	4	{
for	9:8	18:8	4	(i = 0 ;i < nb_langs;i ++)
forinit	9:13	9:18	5	i = 0 ;
water	9:13	0:0	6	i
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:24	5	i < nb_langs
water	9:20	0:0	6	i
op	9:22	0:0	6	<
water	9:24	0:0	6	nb_langs
forexpr	9:34	9:35	5	i ++
water	9:34	0:0	6	i
op	9:35	0:0	6	++
stmts	9:39	18:8	5	
water	9:39	0:0	6	{
decl	10:12	10:22	6	size_t	len
water	11:12	0:0	6	len
op	11:16	0:0	6	=
call	11:18	11:28	6	avio_r8
arg	11:26	11:28	7	pb
water	11:26	0:0	8	pb
water	11:29	0:0	6	;
if	12:12	13:23	6	(! len)
cond	12:16	12:17	7	! len
op	12:16	0:0	8	!
water	12:17	0:0	8	len
stmts	13:16	13:23	7	
water	13:16	0:0	8	len
op	13:20	0:0	8	=
water	13:22	0:0	8	6
water	13:23	0:0	8	;
if	14:12	17:12	6	(( ret =get_asf_string (pb ,len ,asf -> asf_sd [ i ] . langs ,sizeof ( asf -> asf_sd [ i ] . langs ) ) ) < 0)
cond	14:16	15:71	7	( ret =get_asf_string (pb ,len ,asf -> asf_sd [ i ] . langs ,sizeof ( asf -> asf_sd [ i ] . langs ) ) ) < 0
water	14:16	0:0	8	(
water	14:17	0:0	8	ret
op	14:21	0:0	8	=
call	14:23	15:66	8	get_asf_string
arg	14:38	14:40	9	pb
water	14:38	0:0	10	pb
arg	14:42	14:45	9	len
water	14:42	0:0	10	len
arg	14:47	14:67	9	asf->asf_sd[i].langs
water	14:47	0:0	10	asf
op	14:50	0:0	10	->
water	14:52	0:0	10	asf_sd
op	14:58	0:0	10	[
water	14:59	0:0	10	i
op	14:60	0:0	10	]
op	14:61	0:0	10	.
water	14:62	0:0	10	langs
arg	15:38	15:66	9	sizeof(asf->asf_sd[i].langs)
op	15:38	0:0	10	sizeof
water	15:44	0:0	10	(
water	15:45	0:0	10	asf
op	15:48	0:0	10	->
water	15:50	0:0	10	asf_sd
op	15:56	0:0	10	[
water	15:57	0:0	10	i
op	15:58	0:0	10	]
op	15:59	0:0	10	.
water	15:60	0:0	10	langs
water	15:65	0:0	10	)
water	15:67	0:0	8	)
op	15:69	0:0	8	<
water	15:71	0:0	8	0
stmts	15:74	17:12	7	
water	15:74	0:0	8	{
return	16:16	16:26	8	ret
water	16:23	0:0	9	ret
water	17:12	0:0	8	}
water	18:8	0:0	6	}
water	19:4	0:0	4	}
call	20:4	20:40	2	align_position
arg	20:19	20:21	3	pb
water	20:19	0:0	4	pb
arg	20:23	20:34	3	asf->offset
water	20:23	0:0	4	asf
op	20:26	0:0	4	->
water	20:28	0:0	4	offset
arg	20:36	20:40	3	size
water	20:36	0:0	4	size
water	20:41	0:0	2	;
return	21:4	21:12	2	0
water	21:11	0:0	3	0

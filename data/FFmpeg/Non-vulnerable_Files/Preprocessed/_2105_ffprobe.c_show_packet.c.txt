func	1:0	46:0	0	static void	show_packet
params	1:23	0:0	1	
param	1:24	1:40	2	WriterContext *	w
param	1:42	1:58	2	InputFile *	ifile
param	1:60	1:73	2	AVPacket *	pkt
param	1:75	1:89	2	int	packet_idx
stmnts	0:0	45:18	1	
decl	3:4	3:21	2	char	val_str[128]
decl	4:4	4:55	2	AVStream	*st
op	4:17	0:0	2	=
water	4:19	0:0	2	ifile
op	4:24	0:0	2	->
water	4:26	0:0	2	streams
op	4:33	0:0	2	[
water	4:34	0:0	2	pkt
op	4:37	0:0	2	->
water	4:39	0:0	2	stream_index
op	4:51	0:0	2	]
op	4:52	0:0	2	.
water	4:53	0:0	2	st
decl	5:4	5:17	2	AVBPrint	pbuf
decl	6:4	6:17	2	const char	*s
call	7:4	7:53	2	av_bprint_init
arg	7:19	7:24	3	&pbuf
op	7:19	0:0	4	&
water	7:20	0:0	4	pbuf
arg	7:26	7:27	3	1
water	7:26	0:0	4	1
arg	7:29	7:53	3	AV_BPRINT_SIZE_UNLIMITED
water	7:29	0:0	4	AV_BPRINT_SIZE_UNLIMITED
water	7:54	0:0	2	;
call	8:4	8:52	2	writer_print_section_header
arg	8:32	8:33	3	w
water	8:32	0:0	4	w
arg	8:35	8:52	3	SECTION_ID_PACKET
water	8:35	0:0	4	SECTION_ID_PACKET
water	8:53	0:0	2	;
water	9:4	0:0	2	s
op	9:6	0:0	2	=
call	9:8	9:57	2	av_get_media_type_string
arg	9:33	9:57	3	st->codecpar->codec_type
water	9:33	0:0	4	st
op	9:35	0:0	4	->
water	9:37	0:0	4	codecpar
op	9:45	0:0	4	->
water	9:47	0:0	4	codec_type
water	9:58	0:0	2	;
if	10:4	10:41	2	(s)
cond	10:8	10:8	3	s
water	10:8	0:0	4	s
stmts	10:11	10:41	3	
call	10:11	10:40	4	print_str
arg	10:25	10:37	5	"codec_type"
water	10:25	0:0	6	"codec_type"
arg	10:39	10:40	5	s
water	10:39	0:0	6	s
water	10:41	0:0	4	;
else	11:4	11:49	2
stmts	11:11	11:49	3	
call	11:11	11:48	4	print_str_opt
arg	11:25	11:37	5	"codec_type"
water	11:25	0:0	6	"codec_type"
arg	11:39	11:48	5	"unknown"
water	11:39	0:0	6	"unknown"
water	11:49	0:0	4	;
call	12:4	12:51	2	print_int
arg	12:14	12:28	3	"stream_index"
water	12:14	0:0	4	"stream_index"
arg	12:34	12:51	3	pkt->stream_index
water	12:34	0:0	4	pkt
op	12:37	0:0	4	->
water	12:39	0:0	4	stream_index
water	12:52	0:0	2	;
call	13:4	13:42	2	print_ts
arg	13:15	13:20	3	"pts"
water	13:15	0:0	4	"pts"
arg	13:34	13:42	3	pkt->pts
water	13:34	0:0	4	pkt
op	13:37	0:0	4	->
water	13:39	0:0	4	pts
water	13:43	0:0	2	;
call	14:4	14:58	2	print_time
arg	14:15	14:25	3	"pts_time"
water	14:15	0:0	4	"pts_time"
arg	14:34	14:42	3	pkt->pts
water	14:34	0:0	4	pkt
op	14:37	0:0	4	->
water	14:39	0:0	4	pts
arg	14:44	14:58	3	&st->time_base
op	14:44	0:0	4	&
water	14:45	0:0	4	st
op	14:47	0:0	4	->
water	14:49	0:0	4	time_base
water	14:59	0:0	2	;
call	15:4	15:42	2	print_ts
arg	15:15	15:20	3	"dts"
water	15:15	0:0	4	"dts"
arg	15:34	15:42	3	pkt->dts
water	15:34	0:0	4	pkt
op	15:37	0:0	4	->
water	15:39	0:0	4	dts
water	15:43	0:0	2	;
call	16:4	16:58	2	print_time
arg	16:15	16:25	3	"dts_time"
water	16:15	0:0	4	"dts_time"
arg	16:34	16:42	3	pkt->dts
water	16:34	0:0	4	pkt
op	16:37	0:0	4	->
water	16:39	0:0	4	dts
arg	16:44	16:58	3	&st->time_base
op	16:44	0:0	4	&
water	16:45	0:0	4	st
op	16:47	0:0	4	->
water	16:49	0:0	4	time_base
water	16:59	0:0	2	;
call	17:4	17:54	2	print_duration_ts
arg	17:22	17:32	3	"duration"
water	17:22	0:0	4	"duration"
arg	17:41	17:54	3	pkt->duration
water	17:41	0:0	4	pkt
op	17:44	0:0	4	->
water	17:46	0:0	4	duration
water	17:55	0:0	2	;
call	18:4	18:70	2	print_duration_time
arg	18:24	18:39	3	"duration_time"
water	18:24	0:0	4	"duration_time"
arg	18:41	18:54	3	pkt->duration
water	18:41	0:0	4	pkt
op	18:44	0:0	4	->
water	18:46	0:0	4	duration
arg	18:56	18:70	3	&st->time_base
op	18:56	0:0	4	&
water	18:57	0:0	4	st
op	18:59	0:0	4	->
water	18:61	0:0	4	time_base
water	18:71	0:0	2	;
call	19:4	19:71	2	print_duration_ts
arg	19:22	19:44	3	"convergence_duration"
water	19:22	0:0	4	"convergence_duration"
arg	19:46	19:71	3	pkt->convergence_duration
water	19:46	0:0	4	pkt
op	19:49	0:0	4	->
water	19:51	0:0	4	convergence_duration
water	19:72	0:0	2	;
call	20:4	20:94	2	print_duration_time
arg	20:24	20:51	3	"convergence_duration_time"
water	20:24	0:0	4	"convergence_duration_time"
arg	20:53	20:78	3	pkt->convergence_duration
water	20:53	0:0	4	pkt
op	20:56	0:0	4	->
water	20:58	0:0	4	convergence_duration
arg	20:80	20:94	3	&st->time_base
op	20:80	0:0	4	&
water	20:81	0:0	4	st
op	20:83	0:0	4	->
water	20:85	0:0	4	time_base
water	20:95	0:0	2	;
call	21:4	21:58	2	print_val
arg	21:14	21:20	3	"size"
water	21:14	0:0	4	"size"
arg	21:34	21:43	3	pkt->size
water	21:34	0:0	4	pkt
op	21:37	0:0	4	->
water	21:39	0:0	4	size
arg	21:45	21:58	3	unit_byte_str
water	21:45	0:0	4	unit_byte_str
water	21:59	0:0	2	;
if	22:4	22:65	2	(pkt -> pos != - 1)
cond	22:8	22:21	3	pkt -> pos != - 1
water	22:8	0:0	4	pkt
op	22:11	0:0	4	->
water	22:13	0:0	4	pos
op	22:17	0:0	4	!=
op	22:20	0:0	4	-
water	22:21	0:0	4	1
stmts	22:24	22:65	3	
call	22:24	22:64	4	print_fmt
arg	22:38	22:43	5	"pos"
water	22:38	0:0	6	"pos"
arg	22:45	22:54	5	"%"PRId64
water	22:45	0:0	6	"%"
water	22:48	0:0	6	PRId64
arg	22:56	22:64	5	pkt->pos
water	22:56	0:0	6	pkt
op	22:59	0:0	6	->
water	22:61	0:0	6	pos
water	22:65	0:0	4	;
else	23:4	23:51	2
stmts	23:24	23:51	3	
call	23:24	23:50	4	print_str_opt
arg	23:38	23:43	5	"pos"
water	23:38	0:0	6	"pos"
arg	23:45	23:50	5	"N/A"
water	23:45	0:0	6	"N/A"
water	23:51	0:0	4	;
call	24:4	25:58	2	print_fmt
arg	24:14	24:21	3	"flags"
water	24:14	0:0	4	"flags"
arg	24:23	24:29	3	"%c%c"
water	24:23	0:0	4	"%c%c"
arg	24:36	24:76	3	pkt->flags&AV_PKT_FLAG_KEY?'K':'_'
water	24:36	0:0	4	pkt
op	24:39	0:0	4	->
water	24:41	0:0	4	flags
op	24:47	0:0	4	&
water	24:49	0:0	4	AV_PKT_FLAG_KEY
water	24:65	0:0	4	?
water	24:67	0:0	4	'K'
water	24:71	0:0	4	:
water	24:73	0:0	4	'_'
arg	25:14	25:58	3	pkt->flags&AV_PKT_FLAG_DISCARD?'D':'_'
water	25:14	0:0	4	pkt
op	25:17	0:0	4	->
water	25:19	0:0	4	flags
op	25:25	0:0	4	&
water	25:27	0:0	4	AV_PKT_FLAG_DISCARD
water	25:47	0:0	4	?
water	25:49	0:0	4	'D'
water	25:53	0:0	4	:
water	25:55	0:0	4	'_'
water	25:59	0:0	2	;
if	26:4	39:4	2	(pkt -> side_data_elems)
cond	26:8	26:13	3	pkt -> side_data_elems
water	26:8	0:0	4	pkt
op	26:11	0:0	4	->
water	26:13	0:0	4	side_data_elems
stmts	26:30	39:4	3	
water	26:30	0:0	4	{
decl	27:8	27:16	4	int	size
decl	28:8	28:36	4	const uint8_t	*side_metadata
water	29:8	0:0	4	side_metadata
op	29:22	0:0	4	=
call	29:24	29:88	4	av_packet_get_side_data
arg	29:48	29:51	5	pkt
water	29:48	0:0	6	pkt
arg	29:53	29:81	5	AV_PKT_DATA_STRINGS_METADATA
water	29:53	0:0	6	AV_PKT_DATA_STRINGS_METADATA
arg	29:83	29:88	5	&size
op	29:83	0:0	6	&
water	29:84	0:0	6	size
water	29:89	0:0	4	;
if	30:8	35:8	4	(side_metadata && size && do_show_packet_tags)
cond	30:12	30:37	5	side_metadata && size && do_show_packet_tags
water	30:12	0:0	6	side_metadata
op	30:26	0:0	6	&&
water	30:29	0:0	6	size
op	30:34	0:0	6	&&
water	30:37	0:0	6	do_show_packet_tags
stmts	30:58	35:8	5	
water	30:58	0:0	6	{
decl	31:12	31:37	6	AVDictionary	*dict
op	31:31	0:0	6	=
water	31:33	0:0	6	NULL
if	32:12	33:58	6	(av_packet_unpack_dictionary (side_metadata ,size ,& dict ) >= 0)
cond	32:16	32:75	7	av_packet_unpack_dictionary (side_metadata ,size ,& dict ) >= 0
call	32:16	32:70	8	av_packet_unpack_dictionary
arg	32:44	32:57	9	side_metadata
water	32:44	0:0	10	side_metadata
arg	32:59	32:63	9	size
water	32:59	0:0	10	size
arg	32:65	32:70	9	&dict
op	32:65	0:0	10	&
water	32:66	0:0	10	dict
op	32:72	0:0	8	>=
water	32:75	0:0	8	0
stmts	33:16	33:58	7	
call	33:16	33:57	8	show_tags
arg	33:26	33:27	9	w
water	33:26	0:0	10	w
arg	33:29	33:33	9	dict
water	33:29	0:0	10	dict
arg	33:35	33:57	9	SECTION_ID_PACKET_TAGS
water	33:35	0:0	10	SECTION_ID_PACKET_TAGS
water	33:58	0:0	8	;
call	34:12	34:30	6	av_dict_free
arg	34:25	34:30	7	&dict
op	34:25	0:0	8	&
water	34:26	0:0	8	dict
water	34:31	0:0	6	;
water	35:8	0:0	6	}
call	36:8	38:55	4	print_pkt_side_data
arg	36:28	36:29	5	w
water	36:28	0:0	6	w
arg	36:31	36:43	5	st->codecpar
water	36:31	0:0	6	st
op	36:33	0:0	6	->
water	36:35	0:0	6	codecpar
arg	36:45	36:59	5	pkt->side_data
water	36:45	0:0	6	pkt
op	36:48	0:0	6	->
water	36:50	0:0	6	side_data
arg	36:61	36:81	5	pkt->side_data_elems
water	36:61	0:0	6	pkt
op	36:64	0:0	6	->
water	36:66	0:0	6	side_data_elems
arg	37:28	37:60	5	SECTION_ID_PACKET_SIDE_DATA_LIST
water	37:28	0:0	6	SECTION_ID_PACKET_SIDE_DATA_LIST
arg	38:28	38:55	5	SECTION_ID_PACKET_SIDE_DATA
water	38:28	0:0	6	SECTION_ID_PACKET_SIDE_DATA
water	38:56	0:0	4	;
water	39:4	0:0	4	}
if	40:4	41:58	2	(do_show_data)
cond	40:8	40:8	3	do_show_data
water	40:8	0:0	4	do_show_data
stmts	41:8	41:58	3	
call	41:8	41:57	4	writer_print_data
arg	41:26	41:27	5	w
water	41:26	0:0	6	w
arg	41:29	41:35	5	"data"
water	41:29	0:0	6	"data"
arg	41:37	41:46	5	pkt->data
water	41:37	0:0	6	pkt
op	41:40	0:0	6	->
water	41:42	0:0	6	data
arg	41:48	41:57	5	pkt->size
water	41:48	0:0	6	pkt
op	41:51	0:0	6	->
water	41:53	0:0	6	size
water	41:58	0:0	4	;
call	42:4	42:63	2	writer_print_data_hash
arg	42:27	42:28	3	w
water	42:27	0:0	4	w
arg	42:30	42:41	3	"data_hash"
water	42:30	0:0	4	"data_hash"
arg	42:43	42:52	3	pkt->data
water	42:43	0:0	4	pkt
op	42:46	0:0	4	->
water	42:48	0:0	4	data
arg	42:54	42:63	3	pkt->size
water	42:54	0:0	4	pkt
op	42:57	0:0	4	->
water	42:59	0:0	4	size
water	42:64	0:0	2	;
call	43:4	43:33	2	writer_print_section_footer
arg	43:32	43:33	3	w
water	43:32	0:0	4	w
water	43:34	0:0	2	;
call	44:4	44:34	2	av_bprint_finalize
arg	44:23	44:28	3	&pbuf
op	44:23	0:0	4	&
water	44:24	0:0	4	pbuf
arg	44:30	44:34	3	NULL
water	44:30	0:0	4	NULL
water	44:35	0:0	2	;
call	45:4	45:17	2	fflush
arg	45:11	45:17	3	stdout
water	45:11	0:0	4	stdout
water	45:18	0:0	2	;

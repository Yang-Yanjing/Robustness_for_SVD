func	1:0	24:0	0	static int	init_encoder
params	1:23	0:0	1	
param	1:24	1:36	2	AVCodec *	enc
param	1:38	1:62	2	AVCodecContext * *	enc_ctx
param	2:24	2:41	2	int64_t	ch_layout
param	2:43	2:58	2	int	sample_rate
stmnts	0:0	23:12	1	
decl	4:4	4:23	2	AVCodecContext	*ctx
decl	5:4	5:14	2	int	result
decl	6:4	6:34	2	char	name_buff[NAME_BUFF_SIZE]
call	7:4	7:72	2	av_get_channel_layout_string
arg	7:33	7:42	3	name_buff
water	7:33	0:0	4	name_buff
arg	7:44	7:58	3	NAME_BUFF_SIZE
water	7:44	0:0	4	NAME_BUFF_SIZE
arg	7:60	7:61	3	0
water	7:60	0:0	4	0
arg	7:63	7:72	3	ch_layout
water	7:63	0:0	4	ch_layout
water	7:73	0:0	2	;
call	8:4	8:93	2	av_log
arg	8:11	8:15	3	NULL
water	8:11	0:0	4	NULL
arg	8:17	8:28	3	AV_LOG_INFO
water	8:17	0:0	4	AV_LOG_INFO
arg	8:30	8:69	3	"channel layout: %s, sample rate: %i\n"
water	8:30	0:0	4	"channel layout: %s, sample rate: %i\n"
arg	8:71	8:80	3	name_buff
water	8:71	0:0	4	name_buff
arg	8:82	8:93	3	sample_rate
water	8:82	0:0	4	sample_rate
water	8:94	0:0	2	;
water	9:4	0:0	2	ctx
op	9:8	0:0	2	=
call	9:10	9:36	2	avcodec_alloc_context3
arg	9:33	9:36	3	enc
water	9:33	0:0	4	enc
water	9:37	0:0	2	;
if	10:4	13:4	2	(! ctx)
cond	10:8	10:9	3	! ctx
op	10:8	0:0	4	!
water	10:9	0:0	4	ctx
stmts	10:14	13:4	3	
water	10:14	0:0	4	{
call	11:8	11:69	4	av_log
arg	11:15	11:19	5	NULL
water	11:15	0:0	6	NULL
arg	11:21	11:33	5	AV_LOG_ERROR
water	11:21	0:0	6	AV_LOG_ERROR
arg	11:35	11:69	5	"Can't allocate encoder context\n"
water	11:35	0:0	6	"Can't allocate encoder context\n"
water	11:70	0:0	4	;
return	12:8	12:30	4	AVERROR(ENOMEM)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	ENOMEM
water	12:23	0:0	7	ENOMEM
water	13:4	0:0	4	}
water	14:4	0:0	2	ctx
op	14:7	0:0	2	->
water	14:9	0:0	2	sample_fmt
op	14:20	0:0	2	=
water	14:22	0:0	2	AV_SAMPLE_FMT_S16
water	14:39	0:0	2	;
water	15:4	0:0	2	ctx
op	15:7	0:0	2	->
water	15:9	0:0	2	sample_rate
op	15:21	0:0	2	=
water	15:23	0:0	2	sample_rate
water	15:34	0:0	2	;
water	16:4	0:0	2	ctx
op	16:7	0:0	2	->
water	16:9	0:0	2	channel_layout
op	16:24	0:0	2	=
water	16:26	0:0	2	ch_layout
water	16:35	0:0	2	;
water	17:4	0:0	2	result
op	17:11	0:0	2	=
call	17:13	17:41	2	avcodec_open2
arg	17:27	17:30	3	ctx
water	17:27	0:0	4	ctx
arg	17:32	17:35	3	enc
water	17:32	0:0	4	enc
arg	17:37	17:41	3	NULL
water	17:37	0:0	4	NULL
water	17:42	0:0	2	;
if	18:4	21:4	2	(result < 0)
cond	18:8	18:17	3	result < 0
water	18:8	0:0	4	result
op	18:15	0:0	4	<
water	18:17	0:0	4	0
stmts	18:20	21:4	3	
water	18:20	0:0	4	{
call	19:8	19:56	4	av_log
arg	19:15	19:18	5	ctx
water	19:15	0:0	6	ctx
arg	19:20	19:32	5	AV_LOG_ERROR
water	19:20	0:0	6	AV_LOG_ERROR
arg	19:34	19:56	5	"Can't open encoder\n"
water	19:34	0:0	6	"Can't open encoder\n"
water	19:57	0:0	4	;
return	20:8	20:21	4	result
water	20:15	0:0	5	result
water	21:4	0:0	4	}
op	22:4	0:0	2	*
water	22:5	0:0	2	enc_ctx
op	22:13	0:0	2	=
water	22:15	0:0	2	ctx
water	22:18	0:0	2	;
return	23:4	23:12	2	0
water	23:11	0:0	3	0

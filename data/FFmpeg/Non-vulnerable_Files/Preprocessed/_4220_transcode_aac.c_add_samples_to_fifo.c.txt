func	1:0	21:0	0	static int	add_samples_to_fifo
params	1:30	0:0	1	
param	1:31	1:48	2	AVAudioFifo *	fifo
param	2:31	2:64	2	uint8_t * *	converted_input_samples
param	3:31	3:51	2	const int	frame_size
stmnts	0:0	20:12	1	
decl	5:4	5:13	2	int	error
if	10:4	13:4	2	(( error =av_audio_fifo_realloc (fifo ,av_audio_fifo_size (fifo ) + frame_size ) ) < 0)
cond	10:8	10:87	3	( error =av_audio_fifo_realloc (fifo ,av_audio_fifo_size (fifo ) + frame_size ) ) < 0
water	10:8	0:0	4	(
water	10:9	0:0	4	error
op	10:15	0:0	4	=
call	10:17	10:82	4	av_audio_fifo_realloc
arg	10:39	10:43	5	fifo
water	10:39	0:0	6	fifo
arg	10:45	10:82	5	av_audio_fifo_size(fifo)+frame_size
call	10:45	10:68	6	av_audio_fifo_size
arg	10:64	10:68	7	fifo
water	10:64	0:0	8	fifo
op	10:70	0:0	6	+
water	10:72	0:0	6	frame_size
water	10:83	0:0	4	)
op	10:85	0:0	4	<
water	10:87	0:0	4	0
stmts	10:90	13:4	3	
water	10:90	0:0	4	{
call	11:8	11:53	4	fprintf
arg	11:16	11:22	5	stderr
water	11:16	0:0	6	stderr
arg	11:24	11:53	5	"Could not reallocate FIFO\n"
water	11:24	0:0	6	"Could not reallocate FIFO\n"
water	11:54	0:0	4	;
return	12:8	12:20	4	error
water	12:15	0:0	5	error
water	13:4	0:0	4	}
if	15:4	19:4	2	(av_audio_fifo_write (fifo ,( void * * ) converted_input_samples ,frame_size ) < frame_size)
cond	15:8	16:42	3	av_audio_fifo_write (fifo ,( void * * ) converted_input_samples ,frame_size ) < frame_size
call	15:8	16:38	4	av_audio_fifo_write
arg	15:28	15:32	5	fifo
water	15:28	0:0	6	fifo
arg	15:34	15:66	5	(void**)converted_input_samples
water	15:34	0:0	6	(
water	15:35	0:0	6	void
op	15:40	0:0	6	*
op	15:41	0:0	6	*
water	15:42	0:0	6	)
water	15:43	0:0	6	converted_input_samples
arg	16:28	16:38	5	frame_size
water	16:28	0:0	6	frame_size
op	16:40	0:0	4	<
water	16:42	0:0	4	frame_size
stmts	16:54	19:4	3	
water	16:54	0:0	4	{
call	17:8	17:56	4	fprintf
arg	17:16	17:22	5	stderr
water	17:16	0:0	6	stderr
arg	17:24	17:56	5	"Could not write data to FIFO\n"
water	17:24	0:0	6	"Could not write data to FIFO\n"
water	17:57	0:0	4	;
return	18:8	18:27	4	AVERROR_EXIT
water	18:15	0:0	5	AVERROR_EXIT
water	19:4	0:0	4	}
return	20:4	20:12	2	0
water	20:11	0:0	3	0

func	1:0	14:0	0	static int	gen_buffer_time
params	1:26	0:0	1	
param	1:27	1:40	2	URLContext *	s
param	1:42	1:57	2	RTMPContext *	rt
stmnts	0:0	13:40	1	
decl	3:4	3:18	2	RTMPPacket	pkt
decl	4:4	4:14	2	uint8_t	*p
decl	5:4	5:11	2	int	ret
if	6:4	8:18	2	(( ret =ff_rtmp_packet_create (& pkt ,RTMP_NETWORK_CHANNEL ,RTMP_PT_PING ,1 ,10 ) ) < 0)
cond	6:8	7:47	3	( ret =ff_rtmp_packet_create (& pkt ,RTMP_NETWORK_CHANNEL ,RTMP_PT_PING ,1 ,10 ) ) < 0
water	6:8	0:0	4	(
water	6:9	0:0	4	ret
op	6:13	0:0	4	=
call	6:15	7:42	4	ff_rtmp_packet_create
arg	6:37	6:41	5	&pkt
op	6:37	0:0	6	&
water	6:38	0:0	6	pkt
arg	6:43	6:63	5	RTMP_NETWORK_CHANNEL
water	6:43	0:0	6	RTMP_NETWORK_CHANNEL
arg	6:65	6:77	5	RTMP_PT_PING
water	6:65	0:0	6	RTMP_PT_PING
arg	7:37	7:38	5	1
water	7:37	0:0	6	1
arg	7:40	7:42	5	10
water	7:40	0:0	6	10
water	7:43	0:0	4	)
op	7:45	0:0	4	<
water	7:47	0:0	4	0
stmts	8:8	8:18	3	
return	8:8	8:18	4	ret
water	8:15	0:0	5	ret
water	9:4	0:0	2	p
op	9:6	0:0	2	=
water	9:8	0:0	2	pkt
op	9:11	0:0	2	.
water	9:12	0:0	2	data
water	9:16	0:0	2	;
call	10:4	10:29	2	bytestream_put_be16
arg	10:24	10:26	3	&p
op	10:24	0:0	4	&
water	10:25	0:0	4	p
arg	10:28	10:29	3	3
water	10:28	0:0	4	3
water	10:30	0:0	2	;
call	11:4	11:41	2	bytestream_put_be32
arg	11:24	11:26	3	&p
op	11:24	0:0	4	&
water	11:25	0:0	4	p
arg	11:28	11:41	3	rt->stream_id
water	11:28	0:0	4	rt
op	11:30	0:0	4	->
water	11:32	0:0	4	stream_id
water	11:42	0:0	2	;
call	12:4	12:50	2	bytestream_put_be32
arg	12:24	12:26	3	&p
op	12:24	0:0	4	&
water	12:25	0:0	4	p
arg	12:28	12:50	3	rt->client_buffer_time
water	12:28	0:0	4	rt
op	12:30	0:0	4	->
water	12:32	0:0	4	client_buffer_time
water	12:51	0:0	2	;
return	13:4	13:40	2	rtmp_send_packet(rt,&pkt,0)
call	13:11	13:39	3	rtmp_send_packet
arg	13:28	13:30	4	rt
water	13:28	0:0	5	rt
arg	13:32	13:36	4	&pkt
op	13:32	0:0	5	&
water	13:33	0:0	5	pkt
arg	13:38	13:39	4	0
water	13:38	0:0	5	0

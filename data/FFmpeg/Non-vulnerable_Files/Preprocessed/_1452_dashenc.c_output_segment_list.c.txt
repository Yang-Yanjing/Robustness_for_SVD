func	1:0	60:0	0	static void	output_segment_list
params	1:31	0:0	1	
param	1:32	1:48	2	OutputStream *	os
param	1:50	1:66	2	AVIOContext *	out
param	1:68	1:82	2	DASHContext *	c
stmnts	0:0	59:4	1	
decl	3:4	3:44	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:44	2	int	start_index
op	3:23	0:0	2	=
water	3:25	0:0	2	0
water	3:26	0:0	2	,
decl	3:4	3:44	2	int	start_number
op	3:41	0:0	2	=
water	3:43	0:0	2	1
if	4:4	7:4	2	(c -> window_size)
cond	4:8	4:11	3	c -> window_size
water	4:8	0:0	4	c
op	4:9	0:0	4	->
water	4:11	0:0	4	window_size
stmts	4:24	7:4	3	
water	4:24	0:0	4	{
water	5:8	0:0	4	start_index
op	5:21	0:0	4	=
call	5:23	5:66	4	FFMAX
arg	5:29	5:63	5	os->nb_segments-c->window_size
water	5:29	0:0	6	os
op	5:31	0:0	6	->
water	5:33	0:0	6	nb_segments
op	5:47	0:0	6	-
water	5:49	0:0	6	c
op	5:50	0:0	6	->
water	5:52	0:0	6	window_size
arg	5:65	5:66	5	0
water	5:65	0:0	6	0
water	5:67	0:0	4	;
water	6:8	0:0	4	start_number
op	6:21	0:0	4	=
call	6:23	6:66	4	FFMAX
arg	6:29	6:63	5	os->segment_index-c->window_size
water	6:29	0:0	6	os
op	6:31	0:0	6	->
water	6:33	0:0	6	segment_index
op	6:47	0:0	6	-
water	6:49	0:0	6	c
op	6:50	0:0	6	->
water	6:52	0:0	6	window_size
arg	6:65	6:66	5	1
water	6:65	0:0	6	1
water	6:67	0:0	4	;
water	7:4	0:0	4	}
if	8:4	39:4	2	(c -> use_template)
cond	8:8	8:11	3	c -> use_template
water	8:8	0:0	4	c
op	8:9	0:0	4	->
water	8:11	0:0	4	use_template
stmts	8:25	39:4	3	
water	8:25	0:0	4	{
decl	9:8	9:91	4	int	timescale
op	9:22	0:0	4	=
water	9:24	0:0	4	c
op	9:25	0:0	4	->
water	9:27	0:0	4	use_timeline
water	9:40	0:0	4	?
water	9:42	0:0	4	os
op	9:44	0:0	4	->
water	9:46	0:0	4	ctx
op	9:49	0:0	4	->
water	9:51	0:0	4	streams
op	9:58	0:0	4	[
water	9:59	0:0	4	0
op	9:60	0:0	4	]
op	9:61	0:0	4	->
water	9:63	0:0	4	time_base
op	9:72	0:0	4	.
water	9:73	0:0	4	den
water	9:77	0:0	4	:
water	9:79	0:0	4	AV_TIME_BASE
call	10:8	10:80	4	avio_printf
arg	10:20	10:23	5	out
water	10:20	0:0	6	out
arg	10:25	10:69	5	"\t\t\t\t<SegmentTemplate timescale=\"%d\" "
water	10:25	0:0	6	"\t\t\t\t<SegmentTemplate timescale=\"%d\" "
arg	10:71	10:80	5	timescale
water	10:71	0:0	6	timescale
water	10:81	0:0	4	;
if	11:8	12:73	4	(! c -> use_timeline)
cond	11:12	11:16	5	! c -> use_timeline
op	11:12	0:0	6	!
water	11:13	0:0	6	c
op	11:14	0:0	6	->
water	11:16	0:0	6	use_timeline
stmts	12:12	12:73	5	
call	12:12	12:72	6	avio_printf
arg	12:24	12:27	7	out
water	12:24	0:0	8	out
arg	12:29	12:54	7	"duration=\"%"PRId64"\" "
water	12:29	0:0	8	"duration=\"%"
water	12:43	0:0	8	PRId64
water	12:49	0:0	8	"\" "
arg	12:56	12:72	7	c->last_duration
water	12:56	0:0	8	c
op	12:57	0:0	8	->
water	12:59	0:0	8	last_duration
water	12:73	0:0	6	;
call	13:8	13:156	4	avio_printf
arg	13:20	13:23	5	out
water	13:20	0:0	6	out
arg	13:25	13:83	5	"initialization=\"%s\" media=\"%s\" startNumber=\"%d\">\n"
water	13:25	0:0	6	"initialization=\"%s\" media=\"%s\" startNumber=\"%d\">\n"
arg	13:85	13:101	5	c->init_seg_name
water	13:85	0:0	6	c
op	13:86	0:0	6	->
water	13:88	0:0	6	init_seg_name
arg	13:103	13:120	5	c->media_seg_name
water	13:103	0:0	6	c
op	13:104	0:0	6	->
water	13:106	0:0	6	media_seg_name
arg	13:122	13:156	5	c->use_timeline?start_number:1
water	13:122	0:0	6	c
op	13:123	0:0	6	->
water	13:125	0:0	6	use_timeline
water	13:138	0:0	6	?
water	13:140	0:0	6	start_number
water	13:153	0:0	6	:
water	13:155	0:0	6	1
water	13:157	0:0	4	;
if	14:8	37:8	4	(c -> use_timeline)
cond	14:12	14:15	5	c -> use_timeline
water	14:12	0:0	6	c
op	14:13	0:0	6	->
water	14:15	0:0	6	use_timeline
stmts	14:29	37:8	5	
water	14:29	0:0	6	{
decl	15:12	15:32	6	int64_t	cur_time
op	15:29	0:0	6	=
water	15:31	0:0	6	0
call	16:12	16:60	6	avio_printf
arg	16:24	16:27	7	out
water	16:24	0:0	8	out
arg	16:29	16:60	7	"\t\t\t\t\t<SegmentTimeline>\n"
water	16:29	0:0	8	"\t\t\t\t\t<SegmentTimeline>\n"
water	16:61	0:0	6	;
for	17:12	35:12	6	(i = start_index ;i < os -> nb_segments;)
forinit	17:17	17:32	7	i = start_index ;
water	17:17	0:0	8	i
op	17:19	0:0	8	=
water	17:21	0:0	8	start_index
water	17:32	0:0	8	;
cond	17:34	17:42	7	i < os -> nb_segments
water	17:34	0:0	8	i
op	17:36	0:0	8	<
water	17:38	0:0	8	os
op	17:40	0:0	8	->
water	17:42	0:0	8	nb_segments
forexpr	0:0	0:0	7	
stmts	17:57	35:12	7	
water	17:57	0:0	8	{
decl	18:16	18:46	8	Segment	*seg
op	18:29	0:0	8	=
water	18:31	0:0	8	os
op	18:33	0:0	8	->
water	18:35	0:0	8	segments
op	18:43	0:0	8	[
water	18:44	0:0	8	i
op	18:45	0:0	8	]
decl	19:16	19:30	8	int	repeat
op	19:27	0:0	8	=
water	19:29	0:0	8	0
call	20:16	20:50	8	avio_printf
arg	20:28	20:31	9	out
water	20:28	0:0	10	out
arg	20:33	20:50	9	"\t\t\t\t\t\t<S "
water	20:33	0:0	10	"\t\t\t\t\t\t<S "
water	20:51	0:0	8	;
if	21:16	24:16	8	(i == start_index || seg -> time != cur_time)
cond	21:20	21:53	9	i == start_index || seg -> time != cur_time
water	21:20	0:0	10	i
op	21:22	0:0	10	==
water	21:25	0:0	10	start_index
op	21:37	0:0	10	||
water	21:40	0:0	10	seg
op	21:43	0:0	10	->
water	21:45	0:0	10	time
op	21:50	0:0	10	!=
water	21:53	0:0	10	cur_time
stmts	21:63	24:16	9	
water	21:63	0:0	10	{
water	22:20	0:0	10	cur_time
op	22:29	0:0	10	=
water	22:31	0:0	10	seg
op	22:34	0:0	10	->
water	22:36	0:0	10	time
water	22:40	0:0	10	;
call	23:20	23:66	10	avio_printf
arg	23:32	23:35	11	out
water	23:32	0:0	12	out
arg	23:37	23:55	11	"t=\"%"PRId64"\" "
water	23:37	0:0	12	"t=\"%"
water	23:44	0:0	12	PRId64
water	23:50	0:0	12	"\" "
arg	23:57	23:66	11	seg->time
water	23:57	0:0	12	seg
op	23:60	0:0	12	->
water	23:62	0:0	12	time
water	23:67	0:0	10	;
water	24:16	0:0	10	}
call	25:16	25:59	8	avio_printf
arg	25:28	25:31	9	out
water	25:28	0:0	10	out
arg	25:33	25:44	9	"d=\"%d\" "
water	25:33	0:0	10	"d=\"%d\" "
arg	25:46	25:59	9	seg->duration
water	25:46	0:0	10	seg
op	25:49	0:0	10	->
water	25:51	0:0	10	duration
water	25:60	0:0	8	;
while	26:16	29:28	8	(i + repeat + 1 < os -> nb_segments && os -> segments [ i + repeat + 1 ] -> duration == seg -> duration && os -> segments [ i + repeat + 1 ] -> time == os -> segments [ i + repeat ] -> time + os -> segments [ i + repeat ] -> duration)
cond	26:23	28:120	9	i + repeat + 1 < os -> nb_segments && os -> segments [ i + repeat + 1 ] -> duration == seg -> duration && os -> segments [ i + repeat + 1 ] -> time == os -> segments [ i + repeat ] -> time + os -> segments [ i + repeat ] -> duration
water	26:23	0:0	10	i
op	26:25	0:0	10	+
water	26:27	0:0	10	repeat
op	26:34	0:0	10	+
water	26:36	0:0	10	1
op	26:38	0:0	10	<
water	26:40	0:0	10	os
op	26:42	0:0	10	->
water	26:44	0:0	10	nb_segments
op	26:56	0:0	10	&&
water	27:23	0:0	10	os
op	27:25	0:0	10	->
water	27:27	0:0	10	segments
op	27:35	0:0	10	[
water	27:36	0:0	10	i
op	27:38	0:0	10	+
water	27:40	0:0	10	repeat
op	27:47	0:0	10	+
water	27:49	0:0	10	1
op	27:50	0:0	10	]
op	27:51	0:0	10	->
water	27:53	0:0	10	duration
op	27:62	0:0	10	==
water	27:65	0:0	10	seg
op	27:68	0:0	10	->
water	27:70	0:0	10	duration
op	27:79	0:0	10	&&
water	28:23	0:0	10	os
op	28:25	0:0	10	->
water	28:27	0:0	10	segments
op	28:35	0:0	10	[
water	28:36	0:0	10	i
op	28:38	0:0	10	+
water	28:40	0:0	10	repeat
op	28:47	0:0	10	+
water	28:49	0:0	10	1
op	28:50	0:0	10	]
op	28:51	0:0	10	->
water	28:53	0:0	10	time
op	28:58	0:0	10	==
water	28:61	0:0	10	os
op	28:63	0:0	10	->
water	28:65	0:0	10	segments
op	28:73	0:0	10	[
water	28:74	0:0	10	i
op	28:76	0:0	10	+
water	28:78	0:0	10	repeat
op	28:84	0:0	10	]
op	28:85	0:0	10	->
water	28:87	0:0	10	time
op	28:92	0:0	10	+
water	28:94	0:0	10	os
op	28:96	0:0	10	->
water	28:98	0:0	10	segments
op	28:106	0:0	10	[
water	28:107	0:0	10	i
op	28:109	0:0	10	+
water	28:111	0:0	10	repeat
op	28:117	0:0	10	]
op	28:118	0:0	10	->
water	28:120	0:0	10	duration
stmts	29:20	29:28	9	
water	29:20	0:0	10	repeat
op	29:26	0:0	10	++
water	29:28	0:0	10	;
if	30:16	31:57	8	(repeat > 0)
cond	30:20	30:29	9	repeat > 0
water	30:20	0:0	10	repeat
op	30:27	0:0	10	>
water	30:29	0:0	10	0
stmts	31:20	31:57	9	
call	31:20	31:56	10	avio_printf
arg	31:32	31:35	11	out
water	31:32	0:0	12	out
arg	31:37	31:48	11	"r=\"%d\" "
water	31:37	0:0	12	"r=\"%d\" "
arg	31:50	31:56	11	repeat
water	31:50	0:0	12	repeat
water	31:57	0:0	10	;
call	32:16	32:39	8	avio_printf
arg	32:28	32:31	9	out
water	32:28	0:0	10	out
arg	32:33	32:39	9	"/>\n"
water	32:33	0:0	10	"/>\n"
water	32:40	0:0	8	;
water	33:16	0:0	8	i
op	33:18	0:0	8	+=
water	33:21	0:0	8	1
op	33:23	0:0	8	+
water	33:25	0:0	8	repeat
water	33:31	0:0	8	;
water	34:16	0:0	8	cur_time
op	34:25	0:0	8	+=
water	34:28	0:0	8	(
water	34:29	0:0	8	1
op	34:31	0:0	8	+
water	34:33	0:0	8	repeat
water	34:39	0:0	8	)
op	34:41	0:0	8	*
water	34:43	0:0	8	seg
op	34:46	0:0	8	->
water	34:48	0:0	8	duration
water	34:56	0:0	8	;
water	35:12	0:0	8	}
call	36:12	36:61	6	avio_printf
arg	36:24	36:27	7	out
water	36:24	0:0	8	out
arg	36:29	36:61	7	"\t\t\t\t\t</SegmentTimeline>\n"
water	36:29	0:0	8	"\t\t\t\t\t</SegmentTimeline>\n"
water	36:62	0:0	6	;
water	37:8	0:0	6	}
call	38:8	38:55	4	avio_printf
arg	38:20	38:23	5	out
water	38:20	0:0	6	out
arg	38:25	38:55	5	"\t\t\t\t</SegmentTemplate>\n"
water	38:25	0:0	6	"\t\t\t\t</SegmentTemplate>\n"
water	38:56	0:0	4	;
water	39:4	0:0	4	}
else	39:6	51:4	2
stmts	39:11	51:4	3	
if	39:11	51:4	4	(c -> single_file)
cond	39:15	39:18	5	c -> single_file
water	39:15	0:0	6	c
op	39:16	0:0	6	->
water	39:18	0:0	6	single_file
stmts	39:31	51:4	5	
water	39:31	0:0	6	{
call	40:8	40:72	6	avio_printf
arg	40:20	40:23	7	out
water	40:20	0:0	8	out
arg	40:25	40:58	7	"\t\t\t\t<BaseURL>%s</BaseURL>\n"
water	40:25	0:0	8	"\t\t\t\t<BaseURL>%s</BaseURL>\n"
arg	40:60	40:72	7	os->initfile
water	40:60	0:0	8	os
op	40:62	0:0	8	->
water	40:64	0:0	8	initfile
water	40:73	0:0	6	;
call	41:8	41:155	6	avio_printf
arg	41:20	41:23	7	out
water	41:20	0:0	8	out
arg	41:25	41:109	7	"\t\t\t\t<SegmentList timescale=\"%d\" duration=\"%"PRId64"\" startNumber=\"%d\">\n"
water	41:25	0:0	8	"\t\t\t\t<SegmentList timescale=\"%d\" duration=\"%"
water	41:77	0:0	8	PRId64
water	41:83	0:0	8	"\" startNumber=\"%d\">\n"
arg	41:111	41:123	7	AV_TIME_BASE
water	41:111	0:0	8	AV_TIME_BASE
arg	41:125	41:141	7	c->last_duration
water	41:125	0:0	8	c
op	41:126	0:0	8	->
water	41:128	0:0	8	last_duration
arg	41:143	41:155	7	start_number
water	41:143	0:0	8	start_number
water	41:156	0:0	6	;
call	42:8	42:155	6	avio_printf
arg	42:20	42:23	7	out
water	42:20	0:0	8	out
arg	42:25	42:87	7	"\t\t\t\t\t<Initialization range=\"%"PRId64"-%"PRId64"\" />\n"
water	42:25	0:0	8	"\t\t\t\t\t<Initialization range=\"%"
water	42:62	0:0	8	PRId64
water	42:68	0:0	8	"-%"
water	42:72	0:0	8	PRId64
water	42:78	0:0	8	"\" />\n"
arg	42:89	42:107	7	os->init_start_pos
water	42:89	0:0	8	os
op	42:91	0:0	8	->
water	42:93	0:0	8	init_start_pos
arg	42:109	42:155	7	os->init_start_pos+os->init_range_length-1
water	42:109	0:0	8	os
op	42:111	0:0	8	->
water	42:113	0:0	8	init_start_pos
op	42:128	0:0	8	+
water	42:130	0:0	8	os
op	42:132	0:0	8	->
water	42:134	0:0	8	init_range_length
op	42:152	0:0	8	-
water	42:154	0:0	8	1
water	42:156	0:0	6	;
for	43:8	49:8	6	(i = start_index ;i < os -> nb_segments;i ++)
forinit	43:13	43:28	7	i = start_index ;
water	43:13	0:0	8	i
op	43:15	0:0	8	=
water	43:17	0:0	8	start_index
water	43:28	0:0	8	;
cond	43:30	43:38	7	i < os -> nb_segments
water	43:30	0:0	8	i
op	43:32	0:0	8	<
water	43:34	0:0	8	os
op	43:36	0:0	8	->
water	43:38	0:0	8	nb_segments
forexpr	43:51	43:52	7	i ++
water	43:51	0:0	8	i
op	43:52	0:0	8	++
stmts	43:56	49:8	7	
water	43:56	0:0	8	{
decl	44:12	44:42	8	Segment	*seg
op	44:25	0:0	8	=
water	44:27	0:0	8	os
op	44:29	0:0	8	->
water	44:31	0:0	8	segments
op	44:39	0:0	8	[
water	44:40	0:0	8	i
op	44:41	0:0	8	]
call	45:12	45:144	8	avio_printf
arg	45:24	45:27	9	out
water	45:24	0:0	10	out
arg	45:29	45:88	9	"\t\t\t\t\t<SegmentURL mediaRange=\"%"PRId64"-%"PRId64"\" "
water	45:29	0:0	10	"\t\t\t\t\t<SegmentURL mediaRange=\"%"
water	45:67	0:0	10	PRId64
water	45:73	0:0	10	"-%"
water	45:77	0:0	10	PRId64
water	45:83	0:0	10	"\" "
arg	45:90	45:104	9	seg->start_pos
water	45:90	0:0	10	seg
op	45:93	0:0	10	->
water	45:95	0:0	10	start_pos
arg	45:106	45:144	9	seg->start_pos+seg->range_length-1
water	45:106	0:0	10	seg
op	45:109	0:0	10	->
water	45:111	0:0	10	start_pos
op	45:121	0:0	10	+
water	45:123	0:0	10	seg
op	45:126	0:0	10	->
water	45:128	0:0	10	range_length
op	45:141	0:0	10	-
water	45:143	0:0	10	1
water	45:145	0:0	8	;
if	46:12	47:127	8	(seg -> index_length)
cond	46:16	46:21	9	seg -> index_length
water	46:16	0:0	10	seg
op	46:19	0:0	10	->
water	46:21	0:0	10	index_length
stmts	47:16	47:127	9	
call	47:16	47:126	10	avio_printf
arg	47:28	47:31	11	out
water	47:28	0:0	12	out
arg	47:33	47:70	11	"indexRange=\"%"PRId64"-%"PRId64"\" "
water	47:33	0:0	12	"indexRange=\"%"
water	47:49	0:0	12	PRId64
water	47:55	0:0	12	"-%"
water	47:59	0:0	12	PRId64
water	47:65	0:0	12	"\" "
arg	47:72	47:86	11	seg->start_pos
water	47:72	0:0	12	seg
op	47:75	0:0	12	->
water	47:77	0:0	12	start_pos
arg	47:88	47:126	11	seg->start_pos+seg->index_length-1
water	47:88	0:0	12	seg
op	47:91	0:0	12	->
water	47:93	0:0	12	start_pos
op	47:103	0:0	12	+
water	47:105	0:0	12	seg
op	47:108	0:0	12	->
water	47:110	0:0	12	index_length
op	47:123	0:0	12	-
water	47:125	0:0	12	1
water	47:127	0:0	10	;
call	48:12	48:35	8	avio_printf
arg	48:24	48:27	9	out
water	48:24	0:0	10	out
arg	48:29	48:35	9	"/>\n"
water	48:29	0:0	10	"/>\n"
water	48:36	0:0	8	;
water	49:8	0:0	8	}
call	50:8	50:51	6	avio_printf
arg	50:20	50:23	7	out
water	50:20	0:0	8	out
arg	50:25	50:51	7	"\t\t\t\t</SegmentList>\n"
water	50:25	0:0	8	"\t\t\t\t</SegmentList>\n"
water	50:52	0:0	6	;
water	51:4	0:0	6	}
else	51:6	59:4	2
stmts	51:11	59:4	3	
water	51:11	0:0	4	{
call	52:8	52:155	4	avio_printf
arg	52:20	52:23	5	out
water	52:20	0:0	6	out
arg	52:25	52:109	5	"\t\t\t\t<SegmentList timescale=\"%d\" duration=\"%"PRId64"\" startNumber=\"%d\">\n"
water	52:25	0:0	6	"\t\t\t\t<SegmentList timescale=\"%d\" duration=\"%"
water	52:77	0:0	6	PRId64
water	52:83	0:0	6	"\" startNumber=\"%d\">\n"
arg	52:111	52:123	5	AV_TIME_BASE
water	52:111	0:0	6	AV_TIME_BASE
arg	52:125	52:141	5	c->last_duration
water	52:125	0:0	6	c
op	52:126	0:0	6	->
water	52:128	0:0	6	last_duration
arg	52:143	52:155	5	start_number
water	52:143	0:0	6	start_number
water	52:156	0:0	4	;
call	53:8	53:88	4	avio_printf
arg	53:20	53:23	5	out
water	53:20	0:0	6	out
arg	53:25	53:74	5	"\t\t\t\t\t<Initialization sourceURL=\"%s\" />\n"
water	53:25	0:0	6	"\t\t\t\t\t<Initialization sourceURL=\"%s\" />\n"
arg	53:76	53:88	5	os->initfile
water	53:76	0:0	6	os
op	53:78	0:0	6	->
water	53:80	0:0	6	initfile
water	53:89	0:0	4	;
for	54:8	57:8	4	(i = start_index ;i < os -> nb_segments;i ++)
forinit	54:13	54:28	5	i = start_index ;
water	54:13	0:0	6	i
op	54:15	0:0	6	=
water	54:17	0:0	6	start_index
water	54:28	0:0	6	;
cond	54:30	54:38	5	i < os -> nb_segments
water	54:30	0:0	6	i
op	54:32	0:0	6	<
water	54:34	0:0	6	os
op	54:36	0:0	6	->
water	54:38	0:0	6	nb_segments
forexpr	54:51	54:52	5	i ++
water	54:51	0:0	6	i
op	54:52	0:0	6	++
stmts	54:56	57:8	5	
water	54:56	0:0	6	{
decl	55:12	55:42	6	Segment	*seg
op	55:25	0:0	6	=
water	55:27	0:0	6	os
op	55:29	0:0	6	->
water	55:31	0:0	6	segments
op	55:39	0:0	6	[
water	55:40	0:0	6	i
op	55:41	0:0	6	]
call	56:12	56:81	6	avio_printf
arg	56:24	56:27	7	out
water	56:24	0:0	8	out
arg	56:29	56:70	7	"\t\t\t\t\t<SegmentURL media=\"%s\" />\n"
water	56:29	0:0	8	"\t\t\t\t\t<SegmentURL media=\"%s\" />\n"
arg	56:72	56:81	7	seg->file
water	56:72	0:0	8	seg
op	56:75	0:0	8	->
water	56:77	0:0	8	file
water	56:82	0:0	6	;
water	57:8	0:0	6	}
call	58:8	58:51	4	avio_printf
arg	58:20	58:23	5	out
water	58:20	0:0	6	out
arg	58:25	58:51	5	"\t\t\t\t</SegmentList>\n"
water	58:25	0:0	6	"\t\t\t\t</SegmentList>\n"
water	58:52	0:0	4	;
water	59:4	0:0	4	}

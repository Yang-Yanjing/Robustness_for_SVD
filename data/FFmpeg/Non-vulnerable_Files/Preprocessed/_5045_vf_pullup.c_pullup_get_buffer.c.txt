func	1:0	31:0	0	static PullupBuffer *	pullup_get_buffer
params	1:38	0:0	1	
param	1:39	1:55	2	PullupContext *	s
param	1:57	1:67	2	int	parity
stmnts	0:0	30:15	1	
decl	3:4	3:9	2	int	i
if	5:4	9:4	2	(parity < 2 && s -> last && parity != s -> last -> parity && ! s -> last -> buffer -> lock [ parity ])
cond	5:8	6:40	3	parity < 2 && s -> last && parity != s -> last -> parity && ! s -> last -> buffer -> lock [ parity ]
water	5:8	0:0	4	parity
op	5:15	0:0	4	<
water	5:17	0:0	4	2
op	5:19	0:0	4	&&
water	5:22	0:0	4	s
op	5:23	0:0	4	->
water	5:25	0:0	4	last
op	5:30	0:0	4	&&
water	5:33	0:0	4	parity
op	5:40	0:0	4	!=
water	5:43	0:0	4	s
op	5:44	0:0	4	->
water	5:46	0:0	4	last
op	5:50	0:0	4	->
water	5:52	0:0	4	parity
op	6:8	0:0	4	&&
op	6:11	0:0	4	!
water	6:12	0:0	4	s
op	6:13	0:0	4	->
water	6:15	0:0	4	last
op	6:19	0:0	4	->
water	6:21	0:0	4	buffer
op	6:27	0:0	4	->
water	6:29	0:0	4	lock
op	6:33	0:0	4	[
water	6:34	0:0	4	parity
op	6:40	0:0	4	]
stmts	6:43	9:4	3	
water	6:43	0:0	4	{
call	7:8	7:39	4	alloc_buffer
arg	7:21	7:22	5	s
water	7:21	0:0	6	s
arg	7:24	7:39	5	s->last->buffer
water	7:24	0:0	6	s
op	7:25	0:0	6	->
water	7:27	0:0	6	last
op	7:31	0:0	6	->
water	7:33	0:0	6	buffer
water	7:40	0:0	4	;
return	8:8	8:58	4	pullup_lock_buffer(s->last->buffer,parity)
call	8:15	8:57	5	pullup_lock_buffer
arg	8:34	8:49	6	s->last->buffer
water	8:34	0:0	7	s
op	8:35	0:0	7	->
water	8:37	0:0	7	last
op	8:41	0:0	7	->
water	8:43	0:0	7	buffer
arg	8:51	8:57	6	parity
water	8:51	0:0	7	parity
water	9:4	0:0	4	}
for	11:4	18:4	2	(i = 0 ;i <FF_ARRAY_ELEMS (s -> buffers );i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:45	3	i <FF_ARRAY_ELEMS (s -> buffers )
water	11:16	0:0	4	i
op	11:18	0:0	4	<
call	11:20	11:45	4	FF_ARRAY_ELEMS
arg	11:35	11:45	5	s->buffers
water	11:35	0:0	6	s
op	11:36	0:0	6	->
water	11:38	0:0	6	buffers
forexpr	11:48	11:49	3	i ++
water	11:48	0:0	4	i
op	11:49	0:0	4	++
stmts	11:53	18:4	3	
water	11:53	0:0	4	{
if	12:8	13:20	4	(s -> buffers [ i ] . lock [ 0 ])
cond	12:12	12:32	5	s -> buffers [ i ] . lock [ 0 ]
water	12:12	0:0	6	s
op	12:13	0:0	6	->
water	12:15	0:0	6	buffers
op	12:22	0:0	6	[
water	12:23	0:0	6	i
op	12:24	0:0	6	]
op	12:25	0:0	6	.
water	12:26	0:0	6	lock
op	12:30	0:0	6	[
water	12:31	0:0	6	0
op	12:32	0:0	6	]
stmts	13:12	13:20	5	
continue	13:12	13:20	6	
if	14:8	15:20	4	(s -> buffers [ i ] . lock [ 1 ])
cond	14:12	14:32	5	s -> buffers [ i ] . lock [ 1 ]
water	14:12	0:0	6	s
op	14:13	0:0	6	->
water	14:15	0:0	6	buffers
op	14:22	0:0	6	[
water	14:23	0:0	6	i
op	14:24	0:0	6	]
op	14:25	0:0	6	.
water	14:26	0:0	6	lock
op	14:30	0:0	6	[
water	14:31	0:0	6	1
op	14:32	0:0	6	]
stmts	15:12	15:20	5	
continue	15:12	15:20	6	
call	16:8	16:38	4	alloc_buffer
arg	16:21	16:22	5	s
water	16:21	0:0	6	s
arg	16:24	16:38	5	&s->buffers[i]
op	16:24	0:0	6	&
water	16:25	0:0	6	s
op	16:26	0:0	6	->
water	16:28	0:0	6	buffers
op	16:35	0:0	6	[
water	16:36	0:0	6	i
op	16:37	0:0	6	]
water	16:39	0:0	4	;
return	17:8	17:57	4	pullup_lock_buffer(&s->buffers[i],parity)
call	17:15	17:56	5	pullup_lock_buffer
arg	17:34	17:48	6	&s->buffers[i]
op	17:34	0:0	7	&
water	17:35	0:0	7	s
op	17:36	0:0	7	->
water	17:38	0:0	7	buffers
op	17:45	0:0	7	[
water	17:46	0:0	7	i
op	17:47	0:0	7	]
arg	17:50	17:56	6	parity
water	17:50	0:0	7	parity
water	18:4	0:0	4	}
if	19:4	20:16	2	(parity == 2)
cond	19:8	19:18	3	parity == 2
water	19:8	0:0	4	parity
op	19:15	0:0	4	==
water	19:18	0:0	4	2
stmts	20:8	20:16	3	
return	20:8	20:16	4	0
water	20:15	0:0	5	0
for	22:4	29:4	2	(i = 0 ;i <FF_ARRAY_ELEMS (s -> buffers );i ++)
forinit	22:9	22:14	3	i = 0 ;
water	22:9	0:0	4	i
op	22:11	0:0	4	=
water	22:13	0:0	4	0
water	22:14	0:0	4	;
cond	22:16	22:45	3	i <FF_ARRAY_ELEMS (s -> buffers )
water	22:16	0:0	4	i
op	22:18	0:0	4	<
call	22:20	22:45	4	FF_ARRAY_ELEMS
arg	22:35	22:45	5	s->buffers
water	22:35	0:0	6	s
op	22:36	0:0	6	->
water	22:38	0:0	6	buffers
forexpr	22:48	22:49	3	i ++
water	22:48	0:0	4	i
op	22:49	0:0	4	++
stmts	22:53	29:4	3	
water	22:53	0:0	4	{
if	23:8	24:20	4	(( ( parity + 1 ) & 1 ) && s -> buffers [ i ] . lock [ 0 ])
cond	23:12	23:54	5	( ( parity + 1 ) & 1 ) && s -> buffers [ i ] . lock [ 0 ]
water	23:12	0:0	6	(
water	23:13	0:0	6	(
water	23:14	0:0	6	parity
op	23:21	0:0	6	+
water	23:23	0:0	6	1
water	23:24	0:0	6	)
op	23:26	0:0	6	&
water	23:28	0:0	6	1
water	23:29	0:0	6	)
op	23:31	0:0	6	&&
water	23:34	0:0	6	s
op	23:35	0:0	6	->
water	23:37	0:0	6	buffers
op	23:44	0:0	6	[
water	23:45	0:0	6	i
op	23:46	0:0	6	]
op	23:47	0:0	6	.
water	23:48	0:0	6	lock
op	23:52	0:0	6	[
water	23:53	0:0	6	0
op	23:54	0:0	6	]
stmts	24:12	24:20	5	
continue	24:12	24:20	6	
if	25:8	26:20	4	(( ( parity + 1 ) & 2 ) && s -> buffers [ i ] . lock [ 1 ])
cond	25:12	25:54	5	( ( parity + 1 ) & 2 ) && s -> buffers [ i ] . lock [ 1 ]
water	25:12	0:0	6	(
water	25:13	0:0	6	(
water	25:14	0:0	6	parity
op	25:21	0:0	6	+
water	25:23	0:0	6	1
water	25:24	0:0	6	)
op	25:26	0:0	6	&
water	25:28	0:0	6	2
water	25:29	0:0	6	)
op	25:31	0:0	6	&&
water	25:34	0:0	6	s
op	25:35	0:0	6	->
water	25:37	0:0	6	buffers
op	25:44	0:0	6	[
water	25:45	0:0	6	i
op	25:46	0:0	6	]
op	25:47	0:0	6	.
water	25:48	0:0	6	lock
op	25:52	0:0	6	[
water	25:53	0:0	6	1
op	25:54	0:0	6	]
stmts	26:12	26:20	5	
continue	26:12	26:20	6	
call	27:8	27:38	4	alloc_buffer
arg	27:21	27:22	5	s
water	27:21	0:0	6	s
arg	27:24	27:38	5	&s->buffers[i]
op	27:24	0:0	6	&
water	27:25	0:0	6	s
op	27:26	0:0	6	->
water	27:28	0:0	6	buffers
op	27:35	0:0	6	[
water	27:36	0:0	6	i
op	27:37	0:0	6	]
water	27:39	0:0	4	;
return	28:8	28:57	4	pullup_lock_buffer(&s->buffers[i],parity)
call	28:15	28:56	5	pullup_lock_buffer
arg	28:34	28:48	6	&s->buffers[i]
op	28:34	0:0	7	&
water	28:35	0:0	7	s
op	28:36	0:0	7	->
water	28:38	0:0	7	buffers
op	28:45	0:0	7	[
water	28:46	0:0	7	i
op	28:47	0:0	7	]
arg	28:50	28:56	6	parity
water	28:50	0:0	7	parity
water	29:4	0:0	4	}
return	30:4	30:15	2	NULL
water	30:11	0:0	3	NULL

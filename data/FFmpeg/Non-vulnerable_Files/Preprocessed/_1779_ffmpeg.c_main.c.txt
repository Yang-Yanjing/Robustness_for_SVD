func	1:0	59:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	58:27	1	
decl	3:4	3:14	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:14	2	int	ret
decl	4:4	4:14	2	int64_t	ti
call	5:4	5:17	2	init_dynload
water	5:18	0:0	2	;
call	6:4	6:32	2	register_exit
arg	6:18	6:32	3	ffmpeg_cleanup
water	6:18	0:0	4	ffmpeg_cleanup
water	6:33	0:0	2	;
call	7:4	7:32	2	setvbuf
arg	7:12	7:18	3	stderr
water	7:12	0:0	4	stderr
arg	7:19	7:23	3	NULL
water	7:19	0:0	4	NULL
arg	7:24	7:30	3	_IONBF
water	7:24	0:0	4	_IONBF
arg	7:31	7:32	3	0
water	7:31	0:0	4	0
water	7:33	0:0	2	;
call	8:4	8:41	2	av_log_set_flags
arg	8:21	8:41	3	AV_LOG_SKIP_REPEATED
water	8:21	0:0	4	AV_LOG_SKIP_REPEATED
water	8:42	0:0	2	;
call	9:4	9:38	2	parse_loglevel
arg	9:19	9:23	3	argc
water	9:19	0:0	4	argc
arg	9:25	9:29	3	argv
water	9:25	0:0	4	argv
arg	9:31	9:38	3	options
water	9:31	0:0	4	options
water	9:39	0:0	2	;
if	10:4	15:4	2	(argc > 1 && !strcmp (argv [ 1 ] ,"-d" ))
cond	10:7	10:38	3	argc > 1 && !strcmp (argv [ 1 ] ,"-d" )
water	10:7	0:0	4	argc
op	10:11	0:0	4	>
water	10:12	0:0	4	1
op	10:14	0:0	4	&&
op	10:17	0:0	4	!
call	10:18	10:38	4	strcmp
arg	10:25	10:32	5	argv[1]
water	10:25	0:0	6	argv
op	10:29	0:0	6	[
water	10:30	0:0	6	1
op	10:31	0:0	6	]
arg	10:34	10:38	5	"-d"
water	10:34	0:0	6	"-d"
stmts	10:40	15:4	3	
water	10:40	0:0	4	{
water	11:8	0:0	4	run_as_daemon
op	11:21	0:0	4	=
water	11:22	0:0	4	1
water	11:23	0:0	4	;
call	12:8	12:45	4	av_log_set_callback
arg	12:28	12:45	5	log_callback_null
water	12:28	0:0	6	log_callback_null
water	12:46	0:0	4	;
water	13:8	0:0	4	argc
op	13:12	0:0	4	--
water	13:14	0:0	4	;
water	14:8	0:0	4	argv
op	14:12	0:0	4	++
water	14:14	0:0	4	;
water	15:4	0:0	4	}
call	16:4	16:25	2	avcodec_register_all
water	16:26	0:0	2	;
call	18:4	18:26	2	avdevice_register_all
water	18:27	0:0	2	;
call	20:4	20:26	2	avfilter_register_all
water	20:27	0:0	2	;
call	21:4	21:20	2	av_register_all
water	21:21	0:0	2	;
call	22:4	22:26	2	avformat_network_init
water	22:27	0:0	2	;
call	23:4	23:35	2	show_banner
arg	23:16	23:20	3	argc
water	23:16	0:0	4	argc
arg	23:22	23:26	3	argv
water	23:22	0:0	4	argv
arg	23:28	23:35	3	options
water	23:28	0:0	4	options
water	23:36	0:0	2	;
water	25:4	0:0	2	ret
op	25:8	0:0	2	=
call	25:10	25:41	2	ffmpeg_parse_options
arg	25:31	25:35	3	argc
water	25:31	0:0	4	argc
arg	25:37	25:41	3	argv
water	25:37	0:0	4	argv
water	25:42	0:0	2	;
if	26:4	27:23	2	(ret < 0)
cond	26:8	26:14	3	ret < 0
water	26:8	0:0	4	ret
op	26:12	0:0	4	<
water	26:14	0:0	4	0
stmts	27:8	27:23	3	
call	27:8	27:22	4	exit_program
arg	27:21	27:22	5	1
water	27:21	0:0	6	1
water	27:23	0:0	4	;
if	28:4	32:4	2	(nb_output_files <= 0 && nb_input_files == 0)
cond	28:8	28:50	3	nb_output_files <= 0 && nb_input_files == 0
water	28:8	0:0	4	nb_output_files
op	28:24	0:0	4	<=
water	28:27	0:0	4	0
op	28:29	0:0	4	&&
water	28:32	0:0	4	nb_input_files
op	28:47	0:0	4	==
water	28:50	0:0	4	0
stmts	28:53	32:4	3	
water	28:53	0:0	4	{
call	29:8	29:19	4	show_usage
water	29:20	0:0	4	;
call	30:8	30:108	4	av_log
arg	30:15	30:19	5	NULL
water	30:15	0:0	6	NULL
arg	30:21	30:35	5	AV_LOG_WARNING
water	30:21	0:0	6	AV_LOG_WARNING
arg	30:37	30:94	5	"Use -h to get full help or, even better, run 'man %s'\n"
water	30:37	0:0	6	"Use -h to get full help or, even better, run 'man %s'\n"
arg	30:96	30:108	5	program_name
water	30:96	0:0	6	program_name
water	30:109	0:0	4	;
call	31:8	31:22	4	exit_program
arg	31:21	31:22	5	1
water	31:21	0:0	6	1
water	31:23	0:0	4	;
water	32:4	0:0	4	}
if	34:4	37:4	2	(nb_output_files <= 0)
cond	34:8	34:27	3	nb_output_files <= 0
water	34:8	0:0	4	nb_output_files
op	34:24	0:0	4	<=
water	34:27	0:0	4	0
stmts	34:30	37:4	3	
water	34:30	0:0	4	{
call	35:8	35:81	4	av_log
arg	35:15	35:19	5	NULL
water	35:15	0:0	6	NULL
arg	35:21	35:33	5	AV_LOG_FATAL
water	35:21	0:0	6	AV_LOG_FATAL
arg	35:35	35:81	5	"At least one output file must be specified\n"
water	35:35	0:0	6	"At least one output file must be specified\n"
water	35:82	0:0	4	;
call	36:8	36:22	4	exit_program
arg	36:21	36:22	5	1
water	36:21	0:0	6	1
water	36:23	0:0	4	;
water	37:4	0:0	4	}
for	42:4	45:4	2	(i = 0 ;i < nb_output_files;i ++)
forinit	42:9	42:14	3	i = 0 ;
water	42:9	0:0	4	i
op	42:11	0:0	4	=
water	42:13	0:0	4	0
water	42:14	0:0	4	;
cond	42:16	42:20	3	i < nb_output_files
water	42:16	0:0	4	i
op	42:18	0:0	4	<
water	42:20	0:0	4	nb_output_files
forexpr	42:37	42:38	3	i ++
water	42:37	0:0	4	i
op	42:38	0:0	4	++
stmts	42:42	45:4	3	
water	42:42	0:0	4	{
if	43:8	44:24	4	(strcmp (output_files [ i ] -> ctx -> oformat -> name ,"rtp" ))
cond	43:12	43:61	5	strcmp (output_files [ i ] -> ctx -> oformat -> name ,"rtp" )
call	43:12	43:61	6	strcmp
arg	43:19	43:54	7	output_files[i]->ctx->oformat->name
water	43:19	0:0	8	output_files
op	43:31	0:0	8	[
water	43:32	0:0	8	i
op	43:33	0:0	8	]
op	43:34	0:0	8	->
water	43:36	0:0	8	ctx
op	43:39	0:0	8	->
water	43:41	0:0	8	oformat
op	43:48	0:0	8	->
water	43:50	0:0	8	name
arg	43:56	43:61	7	"rtp"
water	43:56	0:0	8	"rtp"
stmts	44:12	44:24	5	
water	44:12	0:0	6	want_sdp
op	44:21	0:0	6	=
water	44:23	0:0	6	0
water	44:24	0:0	6	;
water	45:4	0:0	4	}
water	46:4	0:0	2	current_time
op	46:17	0:0	2	=
water	46:19	0:0	2	ti
op	46:22	0:0	2	=
call	46:24	46:33	2	getutime
water	46:34	0:0	2	;
if	47:4	48:23	2	(transcode ( ) < 0)
cond	47:8	47:22	3	transcode ( ) < 0
call	47:8	47:18	4	transcode
op	47:20	0:0	4	<
water	47:22	0:0	4	0
stmts	48:8	48:23	3	
call	48:8	48:22	4	exit_program
arg	48:21	48:22	5	1
water	48:21	0:0	6	1
water	48:23	0:0	4	;
water	49:4	0:0	2	ti
op	49:7	0:0	2	=
call	49:9	49:18	2	getutime
op	49:20	0:0	2	-
water	49:22	0:0	2	ti
water	49:24	0:0	2	;
if	50:4	52:4	2	(do_benchmark)
cond	50:8	50:8	3	do_benchmark
water	50:8	0:0	4	do_benchmark
stmts	50:22	52:4	3	
water	50:22	0:0	4	{
call	51:8	51:73	4	av_log
arg	51:15	51:19	5	NULL
water	51:15	0:0	6	NULL
arg	51:21	51:32	5	AV_LOG_INFO
water	51:21	0:0	6	AV_LOG_INFO
arg	51:34	51:57	5	"bench: utime=%0.3fs\n"
water	51:34	0:0	6	"bench: utime=%0.3fs\n"
arg	51:59	51:73	5	ti/1000000.0
water	51:59	0:0	6	ti
op	51:62	0:0	6	/
water	51:64	0:0	6	1000000
op	51:71	0:0	6	.
water	51:72	0:0	6	0
water	51:74	0:0	4	;
water	52:4	0:0	4	}
call	53:4	54:53	2	av_log
arg	53:11	53:15	3	NULL
water	53:11	0:0	4	NULL
arg	53:17	53:29	3	AV_LOG_DEBUG
water	53:17	0:0	4	AV_LOG_DEBUG
arg	53:31	53:99	3	"%"PRIu64" frames successfully decoded, %"PRIu64" decoding errors\n"
water	53:31	0:0	4	"%"
water	53:34	0:0	4	PRIu64
water	53:40	0:0	4	" frames successfully decoded, %"
water	53:73	0:0	4	PRIu64
water	53:79	0:0	4	" decoding errors\n"
arg	54:11	54:31	3	decode_error_stat[0]
water	54:11	0:0	4	decode_error_stat
op	54:28	0:0	4	[
water	54:29	0:0	4	0
op	54:30	0:0	4	]
arg	54:33	54:53	3	decode_error_stat[1]
water	54:33	0:0	4	decode_error_stat
op	54:50	0:0	4	[
water	54:51	0:0	4	1
op	54:52	0:0	4	]
water	54:54	0:0	2	;
if	55:4	56:24	2	(( decode_error_stat [ 0 ] + decode_error_stat [ 1 ] ) * max_error_rate < decode_error_stat [ 1 ])
cond	55:8	55:92	3	( decode_error_stat [ 0 ] + decode_error_stat [ 1 ] ) * max_error_rate < decode_error_stat [ 1 ]
water	55:8	0:0	4	(
water	55:9	0:0	4	decode_error_stat
op	55:26	0:0	4	[
water	55:27	0:0	4	0
op	55:28	0:0	4	]
op	55:30	0:0	4	+
water	55:32	0:0	4	decode_error_stat
op	55:49	0:0	4	[
water	55:50	0:0	4	1
op	55:51	0:0	4	]
water	55:52	0:0	4	)
op	55:54	0:0	4	*
water	55:56	0:0	4	max_error_rate
op	55:71	0:0	4	<
water	55:73	0:0	4	decode_error_stat
op	55:90	0:0	4	[
water	55:91	0:0	4	1
op	55:92	0:0	4	]
stmts	56:8	56:24	3	
call	56:8	56:23	4	exit_program
arg	56:21	56:23	5	69
water	56:21	0:0	6	69
water	56:24	0:0	4	;
call	57:4	57:61	2	exit_program
arg	57:17	57:61	3	received_nb_signals?255:main_return_code
water	57:17	0:0	4	received_nb_signals
water	57:37	0:0	4	?
water	57:39	0:0	4	255
water	57:43	0:0	4	:
water	57:45	0:0	4	main_return_code
water	57:62	0:0	2	;
return	58:4	58:27	2	main_return_code
water	58:11	0:0	3	main_return_code

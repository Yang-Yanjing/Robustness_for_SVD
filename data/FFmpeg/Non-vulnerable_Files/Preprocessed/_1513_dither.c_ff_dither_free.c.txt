func	1:0	15:0	0	void	ff_dither_free
params	1:19	0:0	1	
param	1:20	1:38	2	DitherContext * *	cp
stmnts	0:0	14:16	1	
decl	3:4	3:26	2	DitherContext	*c
op	3:21	0:0	2	=
op	3:23	0:0	2	*
water	3:24	0:0	2	cp
decl	4:4	4:10	2	int	ch
if	5:4	6:14	2	(! c)
cond	5:8	5:9	3	! c
op	5:8	0:0	4	!
water	5:9	0:0	4	c
stmts	6:8	6:14	3	
return	6:8	6:14	4	
call	7:4	7:35	2	ff_audio_data_free
arg	7:23	7:35	3	&c->flt_data
op	7:23	0:0	4	&
water	7:24	0:0	4	c
op	7:25	0:0	4	->
water	7:27	0:0	4	flt_data
water	7:36	0:0	2	;
call	8:4	8:35	2	ff_audio_data_free
arg	8:23	8:35	3	&c->s16_data
op	8:23	0:0	4	&
water	8:24	0:0	4	c
op	8:25	0:0	4	->
water	8:27	0:0	4	s16_data
water	8:36	0:0	2	;
call	9:4	9:35	2	ff_audio_convert_free
arg	9:26	9:35	3	&c->ac_in
op	9:26	0:0	4	&
water	9:27	0:0	4	c
op	9:28	0:0	4	->
water	9:30	0:0	4	ac_in
water	9:36	0:0	2	;
call	10:4	10:36	2	ff_audio_convert_free
arg	10:26	10:36	3	&c->ac_out
op	10:26	0:0	4	&
water	10:27	0:0	4	c
op	10:28	0:0	4	->
water	10:30	0:0	4	ac_out
water	10:37	0:0	2	;
for	11:4	12:39	2	(ch = 0 ;ch < c -> channels;ch ++)
forinit	11:9	11:15	3	ch = 0 ;
water	11:9	0:0	4	ch
op	11:12	0:0	4	=
water	11:14	0:0	4	0
water	11:15	0:0	4	;
cond	11:17	11:25	3	ch < c -> channels
water	11:17	0:0	4	ch
op	11:20	0:0	4	<
water	11:22	0:0	4	c
op	11:23	0:0	4	->
water	11:25	0:0	4	channels
forexpr	11:35	11:37	3	ch ++
water	11:35	0:0	4	ch
op	11:37	0:0	4	++
stmts	12:8	12:39	3	
call	12:8	12:38	4	av_free
arg	12:16	12:38	5	c->state[ch].noise_buf
water	12:16	0:0	6	c
op	12:17	0:0	6	->
water	12:19	0:0	6	state
op	12:24	0:0	6	[
water	12:25	0:0	6	ch
op	12:27	0:0	6	]
op	12:28	0:0	6	.
water	12:29	0:0	6	noise_buf
water	12:39	0:0	4	;
call	13:4	13:20	2	av_free
arg	13:12	13:20	3	c->state
water	13:12	0:0	4	c
op	13:13	0:0	4	->
water	13:15	0:0	4	state
water	13:21	0:0	2	;
call	14:4	14:15	2	av_freep
arg	14:13	14:15	3	cp
water	14:13	0:0	4	cp
water	14:16	0:0	2	;

func	1:15	105:0	0	int	bktr_init
params	1:28	0:0	1	
param	1:29	1:53	2	const char *	video_device
param	1:55	1:64	2	int	width
param	1:66	1:76	2	int	height
param	2:4	2:14	2	int	format
param	2:16	2:29	2	int *	video_fd
param	2:31	2:44	2	int *	tuner_fd
param	2:46	2:54	2	int	idev
param	2:56	2:72	2	double	frequency
stmnts	0:0	104:12	1	
decl	4:4	4:28	2	struct meteor_geomet	geo
decl	5:4	5:13	2	int	h_max
decl	6:4	6:24	2	long	ioctl_frequency
decl	7:4	7:13	2	char	*arg
decl	8:4	8:9	2	int	c
decl	9:4	9:39	2	struct sigaction	act
op	9:25	0:0	2	=
water	9:27	0:0	2	{
water	9:29	0:0	2	{
water	9:30	0:0	2	0
water	9:31	0:0	2	}
water	9:33	0:0	2	}
water	9:34	0:0	2	,
decl	9:4	9:39	2	struct sigaction	old
decl	10:4	10:11	2	int	ret
decl	11:4	11:20	2	char	errbuf[128]
if	12:4	19:4	2	(idev < 0 || idev > 4)
cond	12:8	12:27	3	idev < 0 || idev > 4
water	12:8	0:0	4	idev
op	12:13	0:0	4	<
water	12:15	0:0	4	0
op	12:17	0:0	4	||
water	12:20	0:0	4	idev
op	12:25	0:0	4	>
water	12:27	0:0	4	4
stmts	13:4	19:4	3	
water	13:4	0:0	4	{
water	14:8	0:0	4	arg
op	14:12	0:0	4	=
call	14:14	14:32	4	getenv
arg	14:22	14:32	5	"BKTR_DEV"
water	14:22	0:0	6	"BKTR_DEV"
water	14:33	0:0	4	;
if	15:8	16:29	4	(arg)
cond	15:12	15:12	5	arg
water	15:12	0:0	6	arg
stmts	16:12	16:29	5	
water	16:12	0:0	6	idev
op	16:17	0:0	6	=
call	16:19	16:28	6	atoi
arg	16:25	16:28	7	arg
water	16:25	0:0	8	arg
water	16:29	0:0	6	;
if	17:8	18:20	4	(idev < 0 || idev > 4)
cond	17:12	17:31	5	idev < 0 || idev > 4
water	17:12	0:0	6	idev
op	17:17	0:0	6	<
water	17:19	0:0	6	0
op	17:21	0:0	6	||
water	17:24	0:0	6	idev
op	17:29	0:0	6	>
water	17:31	0:0	6	4
stmts	18:12	18:20	5	
water	18:12	0:0	6	idev
op	18:17	0:0	6	=
water	18:19	0:0	6	1
water	18:20	0:0	6	;
water	19:4	0:0	4	}
if	20:4	27:4	2	(format < 1 || format > 6)
cond	20:8	20:31	3	format < 1 || format > 6
water	20:8	0:0	4	format
op	20:15	0:0	4	<
water	20:17	0:0	4	1
op	20:19	0:0	4	||
water	20:22	0:0	4	format
op	20:29	0:0	4	>
water	20:31	0:0	4	6
stmts	21:4	27:4	3	
water	21:4	0:0	4	{
water	22:8	0:0	4	arg
op	22:12	0:0	4	=
call	22:14	22:35	4	getenv
arg	22:22	22:35	5	"BKTR_FORMAT"
water	22:22	0:0	6	"BKTR_FORMAT"
water	22:36	0:0	4	;
if	23:8	24:31	4	(arg)
cond	23:12	23:12	5	arg
water	23:12	0:0	6	arg
stmts	24:12	24:31	5	
water	24:12	0:0	6	format
op	24:19	0:0	6	=
call	24:21	24:30	6	atoi
arg	24:27	24:30	7	arg
water	24:27	0:0	8	arg
water	24:31	0:0	6	;
if	25:8	26:33	4	(format < 1 || format > 6)
cond	25:12	25:35	5	format < 1 || format > 6
water	25:12	0:0	6	format
op	25:19	0:0	6	<
water	25:21	0:0	6	1
op	25:23	0:0	6	||
water	25:26	0:0	6	format
op	25:33	0:0	6	>
water	25:35	0:0	6	6
stmts	26:12	26:33	5	
water	26:12	0:0	6	format
op	26:19	0:0	6	=
water	26:21	0:0	6	VIDEO_FORMAT
water	26:33	0:0	6	;
water	27:4	0:0	4	}
if	28:4	35:4	2	(frequency <= 0)
cond	28:8	28:21	3	frequency <= 0
water	28:8	0:0	4	frequency
op	28:18	0:0	4	<=
water	28:21	0:0	4	0
stmts	29:4	35:4	3	
water	29:4	0:0	4	{
water	30:8	0:0	4	arg
op	30:12	0:0	4	=
call	30:14	30:38	4	getenv
arg	30:22	30:38	5	"BKTR_FREQUENCY"
water	30:22	0:0	6	"BKTR_FREQUENCY"
water	30:39	0:0	4	;
if	31:8	32:34	4	(arg)
cond	31:12	31:12	5	arg
water	31:12	0:0	6	arg
stmts	32:12	32:34	5	
water	32:12	0:0	6	frequency
op	32:22	0:0	6	=
call	32:24	32:33	6	atof
arg	32:30	32:33	7	arg
water	32:30	0:0	8	arg
water	32:34	0:0	6	;
if	33:8	34:27	4	(frequency <= 0)
cond	33:12	33:25	5	frequency <= 0
water	33:12	0:0	6	frequency
op	33:22	0:0	6	<=
water	33:25	0:0	6	0
stmts	34:12	34:27	5	
water	34:12	0:0	6	frequency
op	34:22	0:0	6	=
water	34:24	0:0	6	0
op	34:25	0:0	6	.
water	34:26	0:0	6	0
water	34:27	0:0	6	;
water	35:4	0:0	4	}
call	36:4	36:28	2	sigemptyset
arg	36:16	36:28	3	&act.sa_mask
op	36:16	0:0	4	&
water	36:17	0:0	4	act
op	36:20	0:0	4	.
water	36:21	0:0	4	sa_mask
water	36:29	0:0	2	;
water	37:4	0:0	2	act
op	37:7	0:0	2	.
water	37:8	0:0	2	sa_handler
op	37:19	0:0	2	=
water	37:21	0:0	2	catchsignal
water	37:32	0:0	2	;
call	38:4	38:33	2	sigaction
arg	38:14	38:21	3	SIGUSR1
water	38:14	0:0	4	SIGUSR1
arg	38:23	38:27	3	&act
op	38:23	0:0	4	&
water	38:24	0:0	4	act
arg	38:29	38:33	3	&old
op	38:29	0:0	4	&
water	38:30	0:0	4	old
water	38:34	0:0	2	;
op	39:4	0:0	2	*
water	39:5	0:0	2	tuner_fd
op	39:14	0:0	2	=
call	39:16	39:51	2	avpriv_open
arg	39:28	39:41	3	"/dev/tuner0"
water	39:28	0:0	4	"/dev/tuner0"
arg	39:43	39:51	3	O_RDONLY
water	39:43	0:0	4	O_RDONLY
water	39:52	0:0	2	;
if	40:4	41:98	2	(* tuner_fd < 0)
cond	40:8	40:20	3	* tuner_fd < 0
op	40:8	0:0	4	*
water	40:9	0:0	4	tuner_fd
op	40:18	0:0	4	<
water	40:20	0:0	4	0
stmts	41:8	41:98	3	
call	41:8	41:97	4	av_log
arg	41:15	41:19	5	NULL
water	41:15	0:0	6	NULL
arg	41:21	41:33	5	AV_LOG_ERROR
water	41:21	0:0	6	AV_LOG_ERROR
arg	41:35	41:80	5	"Warning. Tuner not opened, continuing: %s\n"
water	41:35	0:0	6	"Warning. Tuner not opened, continuing: %s\n"
arg	41:82	41:97	5	strerror(errno)
call	41:82	41:96	6	strerror
arg	41:91	41:96	7	errno
water	41:91	0:0	8	errno
water	41:98	0:0	4	;
op	42:4	0:0	2	*
water	42:5	0:0	2	video_fd
op	42:14	0:0	2	=
call	42:16	42:50	2	avpriv_open
arg	42:28	42:40	3	video_device
water	42:28	0:0	4	video_device
arg	42:42	42:50	3	O_RDONLY
water	42:42	0:0	4	O_RDONLY
water	42:51	0:0	2	;
if	43:4	48:4	2	(* video_fd < 0)
cond	43:8	43:20	3	* video_fd < 0
op	43:8	0:0	4	*
water	43:9	0:0	4	video_fd
op	43:18	0:0	4	<
water	43:20	0:0	4	0
stmts	43:23	48:4	3	
water	43:23	0:0	4	{
water	44:8	0:0	4	ret
op	44:12	0:0	4	=
call	44:14	44:27	4	AVERROR
arg	44:22	44:27	5	errno
water	44:22	0:0	6	errno
water	44:28	0:0	4	;
call	45:8	45:47	4	av_strerror
arg	45:20	45:23	5	ret
water	45:20	0:0	6	ret
arg	45:25	45:31	5	errbuf
water	45:25	0:0	6	errbuf
arg	45:33	45:47	5	sizeof(errbuf)
op	45:33	0:0	6	sizeof
water	45:39	0:0	6	(
water	45:40	0:0	6	errbuf
water	45:46	0:0	6	)
water	45:48	0:0	4	;
call	46:8	46:67	4	av_log
arg	46:15	46:19	5	NULL
water	46:15	0:0	6	NULL
arg	46:21	46:33	5	AV_LOG_ERROR
water	46:21	0:0	6	AV_LOG_ERROR
arg	46:35	46:45	5	"%s: %s\n"
water	46:35	0:0	6	"%s: %s\n"
arg	46:47	46:59	5	video_device
water	46:47	0:0	6	video_device
arg	46:61	46:67	5	errbuf
water	46:61	0:0	6	errbuf
water	46:68	0:0	4	;
return	47:8	47:18	4	ret
water	47:15	0:0	5	ret
water	48:4	0:0	4	}
water	49:4	0:0	2	geo
op	49:7	0:0	2	.
water	49:8	0:0	2	rows
op	49:13	0:0	2	=
water	49:15	0:0	2	height
water	49:21	0:0	2	;
water	50:4	0:0	2	geo
op	50:7	0:0	2	.
water	50:8	0:0	2	columns
op	50:16	0:0	2	=
water	50:18	0:0	2	width
water	50:23	0:0	2	;
water	51:4	0:0	2	geo
op	51:7	0:0	2	.
water	51:8	0:0	2	frames
op	51:15	0:0	2	=
water	51:17	0:0	2	1
water	51:18	0:0	2	;
water	52:4	0:0	2	geo
op	52:7	0:0	2	.
water	52:8	0:0	2	oformat
op	52:16	0:0	2	=
water	52:18	0:0	2	METEOR_GEO_YUV_422
op	52:37	0:0	2	|
water	52:39	0:0	2	METEOR_GEO_YUV_12
water	52:56	0:0	2	;
switch	53:4	61:4	2	(format)
cond	53:12	53:12	3	format
water	53:12	0:0	4	format
stmts	53:20	61:4	3	
water	53:20	0:0	4	{
label	54:4	54:12	4	case PAL :
water	54:16	0:0	4	h_max
op	54:22	0:0	4	=
water	54:24	0:0	4	PAL_HEIGHT
water	54:34	0:0	4	;
water	54:38	0:0	4	c
op	54:40	0:0	4	=
water	54:42	0:0	4	BT848_IFORM_F_PALBDGHI
water	54:64	0:0	4	;
break	54:66	54:71	4	
label	55:4	55:13	4	case PALN :
water	55:16	0:0	4	h_max
op	55:22	0:0	4	=
water	55:24	0:0	4	PAL_HEIGHT
water	55:34	0:0	4	;
water	55:38	0:0	4	c
op	55:40	0:0	4	=
water	55:42	0:0	4	BT848_IFORM_F_PALN
water	55:60	0:0	4	;
break	55:66	55:71	4	
label	56:4	56:13	4	case PALM :
water	56:16	0:0	4	h_max
op	56:22	0:0	4	=
water	56:24	0:0	4	PAL_HEIGHT
water	56:34	0:0	4	;
water	56:38	0:0	4	c
op	56:40	0:0	4	=
water	56:42	0:0	4	BT848_IFORM_F_PALM
water	56:60	0:0	4	;
break	56:66	56:71	4	
label	57:4	57:14	4	case SECAM :
water	57:16	0:0	4	h_max
op	57:22	0:0	4	=
water	57:24	0:0	4	SECAM_HEIGHT
water	57:36	0:0	4	;
water	57:38	0:0	4	c
op	57:40	0:0	4	=
water	57:42	0:0	4	BT848_IFORM_F_SECAM
water	57:61	0:0	4	;
break	57:66	57:71	4	
label	58:4	58:13	4	case NTSC :
water	58:16	0:0	4	h_max
op	58:22	0:0	4	=
water	58:24	0:0	4	NTSC_HEIGHT
water	58:35	0:0	4	;
water	58:38	0:0	4	c
op	58:40	0:0	4	=
water	58:42	0:0	4	BT848_IFORM_F_NTSCM
water	58:61	0:0	4	;
break	58:66	58:71	4	
label	59:4	59:14	4	case NTSCJ :
water	59:16	0:0	4	h_max
op	59:22	0:0	4	=
water	59:24	0:0	4	NTSC_HEIGHT
water	59:35	0:0	4	;
water	59:38	0:0	4	c
op	59:40	0:0	4	=
water	59:42	0:0	4	BT848_IFORM_F_NTSCJ
water	59:61	0:0	4	;
break	59:66	59:71	4	
label	60:4	60:11	4	default :
water	60:16	0:0	4	h_max
op	60:22	0:0	4	=
water	60:24	0:0	4	PAL_HEIGHT
water	60:34	0:0	4	;
water	60:38	0:0	4	c
op	60:40	0:0	4	=
water	60:42	0:0	4	BT848_IFORM_F_PALBDGHI
water	60:64	0:0	4	;
break	60:66	60:71	4	
water	61:4	0:0	4	}
if	62:4	63:43	2	(height <= h_max / 2)
cond	62:8	62:26	3	height <= h_max / 2
water	62:8	0:0	4	height
op	62:15	0:0	4	<=
water	62:18	0:0	4	h_max
op	62:24	0:0	4	/
water	62:26	0:0	4	2
stmts	63:8	63:43	3	
water	63:8	0:0	4	geo
op	63:11	0:0	4	.
water	63:12	0:0	4	oformat
op	63:20	0:0	4	|=
water	63:23	0:0	4	METEOR_GEO_EVEN_ONLY
water	63:43	0:0	4	;
if	64:4	69:4	2	(ioctl (* video_fd ,METEORSETGEO ,& geo ) < 0)
cond	64:8	64:47	3	ioctl (* video_fd ,METEORSETGEO ,& geo ) < 0
call	64:8	64:43	4	ioctl
arg	64:14	64:23	5	*video_fd
op	64:14	0:0	6	*
water	64:15	0:0	6	video_fd
arg	64:25	64:37	5	METEORSETGEO
water	64:25	0:0	6	METEORSETGEO
arg	64:39	64:43	5	&geo
op	64:39	0:0	6	&
water	64:40	0:0	6	geo
op	64:45	0:0	4	<
water	64:47	0:0	4	0
stmts	64:50	69:4	3	
water	64:50	0:0	4	{
water	65:8	0:0	4	ret
op	65:12	0:0	4	=
call	65:14	65:27	4	AVERROR
arg	65:22	65:27	5	errno
water	65:22	0:0	6	errno
water	65:28	0:0	4	;
call	66:8	66:47	4	av_strerror
arg	66:20	66:23	5	ret
water	66:20	0:0	6	ret
arg	66:25	66:31	5	errbuf
water	66:25	0:0	6	errbuf
arg	66:33	66:47	5	sizeof(errbuf)
op	66:33	0:0	6	sizeof
water	66:39	0:0	6	(
water	66:40	0:0	6	errbuf
water	66:46	0:0	6	)
water	66:48	0:0	4	;
call	67:8	67:63	4	av_log
arg	67:15	67:19	5	NULL
water	67:15	0:0	6	NULL
arg	67:21	67:33	5	AV_LOG_ERROR
water	67:21	0:0	6	AV_LOG_ERROR
arg	67:35	67:55	5	"METEORSETGEO: %s\n"
water	67:35	0:0	6	"METEORSETGEO: %s\n"
arg	67:57	67:63	5	errbuf
water	67:57	0:0	6	errbuf
water	67:64	0:0	4	;
return	68:8	68:18	4	ret
water	68:15	0:0	5	ret
water	69:4	0:0	4	}
if	70:4	75:4	2	(ioctl (* video_fd ,BT848SFMT ,& c ) < 0)
cond	70:8	70:42	3	ioctl (* video_fd ,BT848SFMT ,& c ) < 0
call	70:8	70:38	4	ioctl
arg	70:14	70:23	5	*video_fd
op	70:14	0:0	6	*
water	70:15	0:0	6	video_fd
arg	70:25	70:34	5	BT848SFMT
water	70:25	0:0	6	BT848SFMT
arg	70:36	70:38	5	&c
op	70:36	0:0	6	&
water	70:37	0:0	6	c
op	70:40	0:0	4	<
water	70:42	0:0	4	0
stmts	70:45	75:4	3	
water	70:45	0:0	4	{
water	71:8	0:0	4	ret
op	71:12	0:0	4	=
call	71:14	71:27	4	AVERROR
arg	71:22	71:27	5	errno
water	71:22	0:0	6	errno
water	71:28	0:0	4	;
call	72:8	72:47	4	av_strerror
arg	72:20	72:23	5	ret
water	72:20	0:0	6	ret
arg	72:25	72:31	5	errbuf
water	72:25	0:0	6	errbuf
arg	72:33	72:47	5	sizeof(errbuf)
op	72:33	0:0	6	sizeof
water	72:39	0:0	6	(
water	72:40	0:0	6	errbuf
water	72:46	0:0	6	)
water	72:48	0:0	4	;
call	73:8	73:60	4	av_log
arg	73:15	73:19	5	NULL
water	73:15	0:0	6	NULL
arg	73:21	73:33	5	AV_LOG_ERROR
water	73:21	0:0	6	AV_LOG_ERROR
arg	73:35	73:52	5	"BT848SFMT: %s\n"
water	73:35	0:0	6	"BT848SFMT: %s\n"
arg	73:54	73:60	5	errbuf
water	73:54	0:0	6	errbuf
water	73:61	0:0	4	;
return	74:8	74:18	4	ret
water	74:15	0:0	5	ret
water	75:4	0:0	4	}
water	76:4	0:0	2	c
op	76:6	0:0	2	=
water	76:8	0:0	2	bktr_dev
op	76:16	0:0	2	[
water	76:17	0:0	2	idev
op	76:21	0:0	2	]
water	76:22	0:0	2	;
if	77:4	82:4	2	(ioctl (* video_fd ,METEORSINPUT ,& c ) < 0)
cond	77:8	77:45	3	ioctl (* video_fd ,METEORSINPUT ,& c ) < 0
call	77:8	77:41	4	ioctl
arg	77:14	77:23	5	*video_fd
op	77:14	0:0	6	*
water	77:15	0:0	6	video_fd
arg	77:25	77:37	5	METEORSINPUT
water	77:25	0:0	6	METEORSINPUT
arg	77:39	77:41	5	&c
op	77:39	0:0	6	&
water	77:40	0:0	6	c
op	77:43	0:0	4	<
water	77:45	0:0	4	0
stmts	77:48	82:4	3	
water	77:48	0:0	4	{
water	78:8	0:0	4	ret
op	78:12	0:0	4	=
call	78:14	78:27	4	AVERROR
arg	78:22	78:27	5	errno
water	78:22	0:0	6	errno
water	78:28	0:0	4	;
call	79:8	79:47	4	av_strerror
arg	79:20	79:23	5	ret
water	79:20	0:0	6	ret
arg	79:25	79:31	5	errbuf
water	79:25	0:0	6	errbuf
arg	79:33	79:47	5	sizeof(errbuf)
op	79:33	0:0	6	sizeof
water	79:39	0:0	6	(
water	79:40	0:0	6	errbuf
water	79:46	0:0	6	)
water	79:48	0:0	4	;
call	80:8	80:63	4	av_log
arg	80:15	80:19	5	NULL
water	80:15	0:0	6	NULL
arg	80:21	80:33	5	AV_LOG_ERROR
water	80:21	0:0	6	AV_LOG_ERROR
arg	80:35	80:55	5	"METEORSINPUT: %s\n"
water	80:35	0:0	6	"METEORSINPUT: %s\n"
arg	80:57	80:63	5	errbuf
water	80:57	0:0	6	errbuf
water	80:64	0:0	4	;
return	81:8	81:18	4	ret
water	81:15	0:0	5	ret
water	82:4	0:0	4	}
water	83:4	0:0	2	video_buf_size
op	83:19	0:0	2	=
water	83:21	0:0	2	width
op	83:27	0:0	2	*
water	83:29	0:0	2	height
op	83:36	0:0	2	*
water	83:38	0:0	2	12
op	83:41	0:0	2	/
water	83:43	0:0	2	8
water	83:44	0:0	2	;
water	84:4	0:0	2	video_buf
op	84:14	0:0	2	=
water	84:16	0:0	2	(
water	84:17	0:0	2	uint8_t
op	84:25	0:0	2	*
water	84:26	0:0	2	)
call	84:27	85:50	2	mmap
arg	84:32	84:42	3	(caddr_t)0
water	84:32	0:0	4	(
water	84:33	0:0	4	caddr_t
water	84:40	0:0	4	)
water	84:41	0:0	4	0
arg	84:44	84:58	3	video_buf_size
water	84:44	0:0	4	video_buf_size
arg	85:8	85:17	3	PROT_READ
water	85:8	0:0	4	PROT_READ
arg	85:19	85:29	3	MAP_SHARED
water	85:19	0:0	4	MAP_SHARED
arg	85:31	85:40	3	*video_fd
op	85:31	0:0	4	*
water	85:32	0:0	4	video_fd
arg	85:42	85:50	3	(off_t)0
water	85:42	0:0	4	(
water	85:43	0:0	4	off_t
water	85:48	0:0	4	)
water	85:49	0:0	4	0
water	85:51	0:0	2	;
if	86:4	91:4	2	(video_buf == MAP_FAILED)
cond	86:8	86:21	3	video_buf == MAP_FAILED
water	86:8	0:0	4	video_buf
op	86:18	0:0	4	==
water	86:21	0:0	4	MAP_FAILED
stmts	86:33	91:4	3	
water	86:33	0:0	4	{
water	87:8	0:0	4	ret
op	87:12	0:0	4	=
call	87:14	87:27	4	AVERROR
arg	87:22	87:27	5	errno
water	87:22	0:0	6	errno
water	87:28	0:0	4	;
call	88:8	88:47	4	av_strerror
arg	88:20	88:23	5	ret
water	88:20	0:0	6	ret
arg	88:25	88:31	5	errbuf
water	88:25	0:0	6	errbuf
arg	88:33	88:47	5	sizeof(errbuf)
op	88:33	0:0	6	sizeof
water	88:39	0:0	6	(
water	88:40	0:0	6	errbuf
water	88:46	0:0	6	)
water	88:48	0:0	4	;
call	89:8	89:55	4	av_log
arg	89:15	89:19	5	NULL
water	89:15	0:0	6	NULL
arg	89:21	89:33	5	AV_LOG_ERROR
water	89:21	0:0	6	AV_LOG_ERROR
arg	89:35	89:47	5	"mmap: %s\n"
water	89:35	0:0	6	"mmap: %s\n"
arg	89:49	89:55	5	errbuf
water	89:49	0:0	6	errbuf
water	89:56	0:0	4	;
return	90:8	90:18	4	ret
water	90:15	0:0	5	ret
water	91:4	0:0	4	}
if	92:4	96:4	2	(frequency != 0 . 0)
cond	92:8	92:23	3	frequency != 0 . 0
water	92:8	0:0	4	frequency
op	92:18	0:0	4	!=
water	92:21	0:0	4	0
op	92:22	0:0	4	.
water	92:23	0:0	4	0
stmts	92:26	96:4	3	
water	92:26	0:0	4	{
water	93:8	0:0	4	ioctl_frequency
op	93:25	0:0	4	=
call	93:27	93:55	4	(unsignedlong)
arg	93:43	93:55	5	frequency*16
water	93:43	0:0	6	frequency
op	93:52	0:0	6	*
water	93:53	0:0	6	16
water	93:56	0:0	4	;
if	94:8	95:80	4	(ioctl (* tuner_fd ,TVTUNER_SETFREQ ,& ioctl_frequency ) < 0)
cond	94:12	94:66	5	ioctl (* tuner_fd ,TVTUNER_SETFREQ ,& ioctl_frequency ) < 0
call	94:12	94:62	6	ioctl
arg	94:18	94:27	7	*tuner_fd
op	94:18	0:0	8	*
water	94:19	0:0	8	tuner_fd
arg	94:29	94:44	7	TVTUNER_SETFREQ
water	94:29	0:0	8	TVTUNER_SETFREQ
arg	94:46	94:62	7	&ioctl_frequency
op	94:46	0:0	8	&
water	94:47	0:0	8	ioctl_frequency
op	94:64	0:0	6	<
water	94:66	0:0	6	0
stmts	95:12	95:80	5	
call	95:12	95:79	6	av_log
arg	95:19	95:23	7	NULL
water	95:19	0:0	8	NULL
arg	95:25	95:37	7	AV_LOG_ERROR
water	95:25	0:0	8	AV_LOG_ERROR
arg	95:39	95:62	7	"TVTUNER_SETFREQ: %s\n"
water	95:39	0:0	8	"TVTUNER_SETFREQ: %s\n"
arg	95:64	95:79	7	strerror(errno)
call	95:64	95:78	8	strerror
arg	95:73	95:78	9	errno
water	95:73	0:0	10	errno
water	95:80	0:0	6	;
water	96:4	0:0	4	}
water	97:4	0:0	2	c
op	97:6	0:0	2	=
water	97:8	0:0	2	AUDIO_UNMUTE
water	97:20	0:0	2	;
if	98:4	99:75	2	(ioctl (* tuner_fd ,BT848_SAUDIO ,& c ) < 0)
cond	98:8	98:45	3	ioctl (* tuner_fd ,BT848_SAUDIO ,& c ) < 0
call	98:8	98:41	4	ioctl
arg	98:14	98:23	5	*tuner_fd
op	98:14	0:0	6	*
water	98:15	0:0	6	tuner_fd
arg	98:25	98:37	5	BT848_SAUDIO
water	98:25	0:0	6	BT848_SAUDIO
arg	98:39	98:41	5	&c
op	98:39	0:0	6	&
water	98:40	0:0	6	c
op	98:43	0:0	4	<
water	98:45	0:0	4	0
stmts	99:8	99:75	3	
call	99:8	99:74	4	av_log
arg	99:15	99:19	5	NULL
water	99:15	0:0	6	NULL
arg	99:21	99:33	5	AV_LOG_ERROR
water	99:21	0:0	6	AV_LOG_ERROR
arg	99:35	99:57	5	"TVTUNER_SAUDIO: %s\n"
water	99:35	0:0	6	"TVTUNER_SAUDIO: %s\n"
arg	99:59	99:74	5	strerror(errno)
call	99:59	99:73	6	strerror
arg	99:68	99:73	7	errno
water	99:68	0:0	8	errno
water	99:75	0:0	4	;
water	100:4	0:0	2	c
op	100:6	0:0	2	=
water	100:8	0:0	2	METEOR_CAP_CONTINOUS
water	100:28	0:0	2	;
call	101:4	101:37	2	ioctl
arg	101:10	101:19	3	*video_fd
op	101:10	0:0	4	*
water	101:11	0:0	4	video_fd
arg	101:21	101:33	3	METEORCAPTUR
water	101:21	0:0	4	METEORCAPTUR
arg	101:35	101:37	3	&c
op	101:35	0:0	4	&
water	101:36	0:0	4	c
water	101:38	0:0	2	;
water	102:4	0:0	2	c
op	102:6	0:0	2	=
water	102:8	0:0	2	SIGUSR1
water	102:15	0:0	2	;
call	103:4	103:38	2	ioctl
arg	103:10	103:19	3	*video_fd
op	103:10	0:0	4	*
water	103:11	0:0	4	video_fd
arg	103:21	103:34	3	METEORSSIGNAL
water	103:21	0:0	4	METEORSSIGNAL
arg	103:36	103:38	3	&c
op	103:36	0:0	4	&
water	103:37	0:0	4	c
water	103:39	0:0	2	;
return	104:4	104:12	2	0
water	104:11	0:0	3	0

func	1:0	37:0	0	int	av_reduce
params	1:13	0:0	1	
param	1:14	1:26	2	int *	dst_num
param	1:28	1:40	2	int *	dst_den
param	2:14	2:25	2	int64_t	num
param	2:27	2:38	2	int64_t	den
param	2:40	2:51	2	int64_t	max
stmnts	0:0	36:19	1	
decl	4:4	4:43	2	AVRational	a0
op	4:18	0:0	2	=
water	4:20	0:0	2	{
water	4:22	0:0	2	0
water	4:23	0:0	2	,
water	4:25	0:0	2	1
water	4:27	0:0	2	}
water	4:28	0:0	2	,
decl	4:4	4:43	2	AVRational	a1
op	4:33	0:0	2	=
water	4:35	0:0	2	{
water	4:37	0:0	2	1
water	4:38	0:0	2	,
water	4:40	0:0	2	0
water	4:42	0:0	2	}
decl	5:4	5:36	2	int	sign
op	5:13	0:0	2	=
water	5:15	0:0	2	(
water	5:16	0:0	2	num
op	5:20	0:0	2	<
water	5:22	0:0	2	0
water	5:23	0:0	2	)
op	5:25	0:0	2	^
water	5:27	0:0	2	(
water	5:28	0:0	2	den
op	5:32	0:0	2	<
water	5:34	0:0	2	0
water	5:35	0:0	2	)
decl	6:4	6:48	2	int64_t	gcd
op	6:16	0:0	2	=
call	6:18	6:47	3	av_gcd
arg	6:25	6:35	4	FFABS(num)
call	6:25	6:34	5	FFABS
arg	6:31	6:34	6	num
water	6:31	0:0	7	num
arg	6:37	6:47	4	FFABS(den)
call	6:37	6:46	5	FFABS
arg	6:43	6:46	6	den
water	6:43	0:0	7	den
if	7:4	10:4	2	(gcd)
cond	7:8	7:8	3	gcd
water	7:8	0:0	4	gcd
stmts	7:13	10:4	3	
water	7:13	0:0	4	{
water	8:8	0:0	4	num
op	8:12	0:0	4	=
call	8:14	8:23	4	FFABS
arg	8:20	8:23	5	num
water	8:20	0:0	6	num
op	8:25	0:0	4	/
water	8:27	0:0	4	gcd
water	8:30	0:0	4	;
water	9:8	0:0	4	den
op	9:12	0:0	4	=
call	9:14	9:23	4	FFABS
arg	9:20	9:23	5	den
water	9:20	0:0	6	den
op	9:25	0:0	4	/
water	9:27	0:0	4	gcd
water	9:30	0:0	4	;
water	10:4	0:0	4	}
if	11:4	14:4	2	(num <= max && den <= max)
cond	11:8	11:29	3	num <= max && den <= max
water	11:8	0:0	4	num
op	11:12	0:0	4	<=
water	11:15	0:0	4	max
op	11:19	0:0	4	&&
water	11:22	0:0	4	den
op	11:26	0:0	4	<=
water	11:29	0:0	4	max
stmts	11:34	14:4	3	
water	11:34	0:0	4	{
water	12:8	0:0	4	a1
op	12:11	0:0	4	=
water	12:13	0:0	4	(
water	12:14	0:0	4	AVRational
water	12:24	0:0	4	)
water	12:26	0:0	4	{
water	12:28	0:0	4	num
water	12:31	0:0	4	,
water	12:33	0:0	4	den
water	12:37	0:0	4	}
water	12:38	0:0	4	;
water	13:8	0:0	4	den
op	13:12	0:0	4	=
water	13:14	0:0	4	0
water	13:15	0:0	4	;
water	14:4	0:0	4	}
while	15:4	31:4	2	(den)
cond	15:11	15:11	3	den
water	15:11	0:0	4	den
stmts	15:16	31:4	3	
water	15:16	0:0	4	{
decl	16:8	16:37	4	uint64_t	x
op	16:26	0:0	4	=
water	16:28	0:0	4	num
op	16:32	0:0	4	/
water	16:34	0:0	4	den
decl	17:8	17:41	4	int64_t	next_den
op	17:26	0:0	4	=
water	17:28	0:0	4	num
op	17:32	0:0	4	-
water	17:34	0:0	4	den
op	17:38	0:0	4	*
water	17:40	0:0	4	x
decl	18:8	18:47	4	int64_t	a2n
op	18:26	0:0	4	=
water	18:28	0:0	4	x
op	18:30	0:0	4	*
water	18:32	0:0	4	a1
op	18:34	0:0	4	.
water	18:35	0:0	4	num
op	18:39	0:0	4	+
water	18:41	0:0	4	a0
op	18:43	0:0	4	.
water	18:44	0:0	4	num
decl	19:8	19:47	4	int64_t	a2d
op	19:26	0:0	4	=
water	19:28	0:0	4	x
op	19:30	0:0	4	*
water	19:32	0:0	4	a1
op	19:34	0:0	4	.
water	19:35	0:0	4	den
op	19:39	0:0	4	+
water	19:41	0:0	4	a0
op	19:43	0:0	4	.
water	19:44	0:0	4	den
if	20:8	26:8	4	(a2n > max || a2d > max)
cond	20:12	20:31	5	a2n > max || a2d > max
water	20:12	0:0	6	a2n
op	20:16	0:0	6	>
water	20:18	0:0	6	max
op	20:22	0:0	6	||
water	20:25	0:0	6	a2d
op	20:29	0:0	6	>
water	20:31	0:0	6	max
stmts	20:36	26:8	5	
water	20:36	0:0	6	{
if	21:12	21:60	6	(a1 . num)
cond	21:16	21:19	7	a1 . num
water	21:16	0:0	8	a1
op	21:18	0:0	8	.
water	21:19	0:0	8	num
stmts	21:24	21:60	7	
water	21:24	0:0	8	x
op	21:26	0:0	8	=
water	21:37	0:0	8	(
water	21:38	0:0	8	max
op	21:42	0:0	8	-
water	21:44	0:0	8	a0
op	21:46	0:0	8	.
water	21:47	0:0	8	num
water	21:50	0:0	8	)
op	21:52	0:0	8	/
water	21:54	0:0	8	a1
op	21:56	0:0	8	.
water	21:57	0:0	8	num
water	21:60	0:0	8	;
if	22:12	22:61	6	(a1 . den)
cond	22:16	22:19	7	a1 . den
water	22:16	0:0	8	a1
op	22:18	0:0	8	.
water	22:19	0:0	8	den
stmts	22:24	22:61	7	
water	22:24	0:0	8	x
op	22:26	0:0	8	=
call	22:28	22:60	8	FFMIN
arg	22:34	22:35	9	x
water	22:34	0:0	10	x
arg	22:37	22:60	9	(max-a0.den)/a1.den
water	22:37	0:0	10	(
water	22:38	0:0	10	max
op	22:42	0:0	10	-
water	22:44	0:0	10	a0
op	22:46	0:0	10	.
water	22:47	0:0	10	den
water	22:50	0:0	10	)
op	22:52	0:0	10	/
water	22:54	0:0	10	a1
op	22:56	0:0	10	.
water	22:57	0:0	10	den
water	22:61	0:0	8	;
if	23:12	24:78	6	(den * ( 2 * x * a1 . den + a0 . den ) > num * a1 . den)
cond	23:16	23:59	7	den * ( 2 * x * a1 . den + a0 . den ) > num * a1 . den
water	23:16	0:0	8	den
op	23:20	0:0	8	*
water	23:22	0:0	8	(
water	23:23	0:0	8	2
op	23:25	0:0	8	*
water	23:27	0:0	8	x
op	23:29	0:0	8	*
water	23:31	0:0	8	a1
op	23:33	0:0	8	.
water	23:34	0:0	8	den
op	23:38	0:0	8	+
water	23:40	0:0	8	a0
op	23:42	0:0	8	.
water	23:43	0:0	8	den
water	23:46	0:0	8	)
op	23:48	0:0	8	>
water	23:50	0:0	8	num
op	23:54	0:0	8	*
water	23:56	0:0	8	a1
op	23:58	0:0	8	.
water	23:59	0:0	8	den
stmts	24:16	24:78	7	
water	24:16	0:0	8	a1
op	24:19	0:0	8	=
water	24:21	0:0	8	(
water	24:22	0:0	8	AVRational
water	24:32	0:0	8	)
water	24:34	0:0	8	{
water	24:36	0:0	8	x
op	24:38	0:0	8	*
water	24:40	0:0	8	a1
op	24:42	0:0	8	.
water	24:43	0:0	8	num
op	24:47	0:0	8	+
water	24:49	0:0	8	a0
op	24:51	0:0	8	.
water	24:52	0:0	8	num
water	24:55	0:0	8	,
water	24:57	0:0	8	x
op	24:59	0:0	8	*
water	24:61	0:0	8	a1
op	24:63	0:0	8	.
water	24:64	0:0	8	den
op	24:68	0:0	8	+
water	24:70	0:0	8	a0
op	24:72	0:0	8	.
water	24:73	0:0	8	den
water	24:77	0:0	8	}
water	24:78	0:0	8	;
break	25:12	25:17	6	
water	26:8	0:0	6	}
water	27:8	0:0	4	a0
op	27:12	0:0	4	=
water	27:14	0:0	4	a1
water	27:16	0:0	4	;
water	28:8	0:0	4	a1
op	28:12	0:0	4	=
water	28:14	0:0	4	(
water	28:15	0:0	4	AVRational
water	28:25	0:0	4	)
water	28:27	0:0	4	{
water	28:29	0:0	4	a2n
water	28:32	0:0	4	,
water	28:34	0:0	4	a2d
water	28:38	0:0	4	}
water	28:39	0:0	4	;
water	29:8	0:0	4	num
op	29:12	0:0	4	=
water	29:14	0:0	4	den
water	29:17	0:0	4	;
water	30:8	0:0	4	den
op	30:12	0:0	4	=
water	30:14	0:0	4	next_den
water	30:22	0:0	4	;
water	31:4	0:0	4	}
call	32:4	32:43	2	av_assert2
arg	32:15	32:43	3	av_gcd(a1.num,a1.den)<=1U
call	32:15	32:36	4	av_gcd
arg	32:22	32:28	5	a1.num
water	32:22	0:0	6	a1
op	32:24	0:0	6	.
water	32:25	0:0	6	num
arg	32:30	32:36	5	a1.den
water	32:30	0:0	6	a1
op	32:32	0:0	6	.
water	32:33	0:0	6	den
op	32:38	0:0	4	<=
water	32:41	0:0	4	1
water	32:42	0:0	4	U
water	32:44	0:0	2	;
call	33:4	33:45	2	av_assert2
arg	33:15	33:45	3	a1.num<=max&&a1.den<=max
water	33:15	0:0	4	a1
op	33:17	0:0	4	.
water	33:18	0:0	4	num
op	33:22	0:0	4	<=
water	33:25	0:0	4	max
op	33:29	0:0	4	&&
water	33:32	0:0	4	a1
op	33:34	0:0	4	.
water	33:35	0:0	4	den
op	33:39	0:0	4	<=
water	33:42	0:0	4	max
water	33:46	0:0	2	;
op	34:4	0:0	2	*
water	34:5	0:0	2	dst_num
op	34:13	0:0	2	=
water	34:15	0:0	2	sign
water	34:20	0:0	2	?
op	34:22	0:0	2	-
water	34:23	0:0	2	a1
op	34:25	0:0	2	.
water	34:26	0:0	2	num
water	34:30	0:0	2	:
water	34:32	0:0	2	a1
op	34:34	0:0	2	.
water	34:35	0:0	2	num
water	34:38	0:0	2	;
op	35:4	0:0	2	*
water	35:5	0:0	2	dst_den
op	35:13	0:0	2	=
water	35:15	0:0	2	a1
op	35:17	0:0	2	.
water	35:18	0:0	2	den
water	35:21	0:0	2	;
return	36:4	36:19	2	den==0
water	36:11	0:0	3	den
op	36:15	0:0	3	==
water	36:18	0:0	3	0

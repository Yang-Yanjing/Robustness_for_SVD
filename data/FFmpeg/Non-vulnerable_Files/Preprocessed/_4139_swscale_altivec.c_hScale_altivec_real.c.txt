func	1:0	108:0	0	static void	hScale_altivec_real
params	1:31	0:0	1	
param	1:32	1:45	2	SwsContext *	c
param	1:47	1:59	2	int16_t *	dst
param	1:61	1:69	2	int	dstW
param	2:32	2:50	2	const uint8_t *	src
param	2:52	2:73	2	const int16_t *	filter
param	3:32	3:56	2	const int32_t *	filterPos
param	3:58	3:72	2	int	filterSize
stmnts	5:4	107:8	1	
water	5:4	0:0	2	register
water	5:13	0:0	2	int
water	5:17	0:0	2	i
water	5:18	0:0	2	;
call	6:4	6:37	2	LOCAL_ALIGNED
arg	6:18	6:20	3	16
water	6:18	0:0	4	16
arg	6:22	6:25	3	int
water	6:22	0:0	4	int
arg	6:27	6:32	3	tempo
water	6:27	0:0	4	tempo
arg	6:34	6:37	3	[4]
op	6:34	0:0	4	[
water	6:35	0:0	4	4
op	6:36	0:0	4	]
water	6:38	0:0	2	;
if	7:4	16:4	2	(filterSize % 4)
cond	7:8	7:21	3	filterSize % 4
water	7:8	0:0	4	filterSize
op	7:19	0:0	4	%
water	7:21	0:0	4	4
stmts	7:24	16:4	3	
water	7:24	0:0	4	{
for	8:8	15:8	4	(i = 0 ;i < dstW;i ++)
forinit	8:13	8:18	5	i = 0 ;
water	8:13	0:0	6	i
op	8:15	0:0	6	=
water	8:17	0:0	6	0
water	8:18	0:0	6	;
cond	8:20	8:24	5	i < dstW
water	8:20	0:0	6	i
op	8:22	0:0	6	<
water	8:24	0:0	6	dstW
forexpr	8:30	8:31	5	i ++
water	8:30	0:0	6	i
op	8:31	0:0	6	++
stmts	8:35	15:8	5	
water	8:35	0:0	6	{
water	9:12	0:0	6	register
water	9:21	0:0	6	int
water	9:25	0:0	6	j
water	9:26	0:0	6	;
water	10:12	0:0	6	register
water	10:21	0:0	6	int
water	10:25	0:0	6	srcPos
op	10:32	0:0	6	=
water	10:34	0:0	6	filterPos
op	10:43	0:0	6	[
water	10:44	0:0	6	i
op	10:45	0:0	6	]
water	10:46	0:0	6	;
water	11:12	0:0	6	register
water	11:21	0:0	6	int
water	11:25	0:0	6	val
op	11:32	0:0	6	=
water	11:34	0:0	6	0
water	11:35	0:0	6	;
for	12:12	13:74	6	(j = 0 ;j < filterSize;j ++)
forinit	12:17	12:22	7	j = 0 ;
water	12:17	0:0	8	j
op	12:19	0:0	8	=
water	12:21	0:0	8	0
water	12:22	0:0	8	;
cond	12:24	12:28	7	j < filterSize
water	12:24	0:0	8	j
op	12:26	0:0	8	<
water	12:28	0:0	8	filterSize
forexpr	12:40	12:41	7	j ++
water	12:40	0:0	8	j
op	12:41	0:0	8	++
stmts	13:16	13:74	7	
water	13:16	0:0	8	val
op	13:20	0:0	8	+=
water	13:23	0:0	8	(
water	13:24	0:0	8	(
water	13:25	0:0	8	int
water	13:28	0:0	8	)
water	13:29	0:0	8	src
op	13:32	0:0	8	[
water	13:33	0:0	8	srcPos
op	13:40	0:0	8	+
water	13:42	0:0	8	j
op	13:43	0:0	8	]
water	13:44	0:0	8	)
op	13:46	0:0	8	*
water	13:48	0:0	8	filter
op	13:54	0:0	8	[
water	13:55	0:0	8	filterSize
op	13:66	0:0	8	*
water	13:68	0:0	8	i
op	13:70	0:0	8	+
water	13:72	0:0	8	j
op	13:73	0:0	8	]
water	13:74	0:0	8	;
water	14:12	0:0	6	dst
op	14:15	0:0	6	[
water	14:16	0:0	6	i
op	14:17	0:0	6	]
op	14:19	0:0	6	=
call	14:21	14:50	6	FFMIN
arg	14:27	14:35	7	val>>7
water	14:27	0:0	8	val
op	14:31	0:0	8	>>
water	14:34	0:0	8	7
arg	14:37	14:50	7	(1<<15)-1
water	14:37	0:0	8	(
water	14:38	0:0	8	1
op	14:40	0:0	8	<<
water	14:43	0:0	8	15
water	14:45	0:0	8	)
op	14:47	0:0	8	-
water	14:49	0:0	8	1
water	14:51	0:0	6	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}
else	16:6	107:8	2
stmts	17:8	107:8	3	
switch	17:8	107:8	4	(filterSize)
cond	17:16	17:16	5	filterSize
water	17:16	0:0	6	filterSize
stmts	17:28	107:8	5	
water	17:28	0:0	6	{
label	18:8	18:14	6	case 4 :
for	19:12	33:12	6	(i = 0 ;i < dstW;i ++)
forinit	19:17	19:22	7	i = 0 ;
water	19:17	0:0	8	i
op	19:19	0:0	8	=
water	19:21	0:0	8	0
water	19:22	0:0	8	;
cond	19:24	19:28	7	i < dstW
water	19:24	0:0	8	i
op	19:26	0:0	8	<
water	19:28	0:0	8	dstW
forexpr	19:34	19:35	7	i ++
water	19:34	0:0	8	i
op	19:35	0:0	8	++
stmts	19:39	33:12	7	
water	19:39	0:0	8	{
water	20:16	0:0	8	register
water	20:25	0:0	8	int
water	20:29	0:0	8	srcPos
op	20:36	0:0	8	=
water	20:38	0:0	8	filterPos
op	20:47	0:0	8	[
water	20:48	0:0	8	i
op	20:49	0:0	8	]
water	20:50	0:0	8	;
water	21:16	0:0	8	vector
water	21:23	0:0	8	unsigned
water	21:32	0:0	8	char
water	21:37	0:0	8	src_vF
op	21:44	0:0	8	=
call	21:46	21:72	8	unaligned_load
arg	21:61	21:67	9	srcPos
water	21:61	0:0	10	srcPos
arg	21:69	21:72	9	src
water	21:69	0:0	10	src
water	21:73	0:0	8	;
water	22:16	0:0	8	vector
water	22:23	0:0	8	signed
water	22:30	0:0	8	short
water	22:36	0:0	8	src_v
water	22:41	0:0	8	,
water	22:43	0:0	8	filter_v
water	22:51	0:0	8	;
water	23:16	0:0	8	vector
water	23:23	0:0	8	signed
water	23:30	0:0	8	int
water	23:34	0:0	8	val_vEven
water	23:43	0:0	8	,
water	23:45	0:0	8	val_s
water	23:50	0:0	8	;
water	24:16	0:0	8	src_v
op	24:22	0:0	8	=
call	25:24	25:93	8	(vectorsignedshort)
arg	25:46	25:93	9	VEC_MERGEH((vectorunsignedchar)vzero,src_vF)
call	25:46	25:92	10	VEC_MERGEH
arg	25:57	25:84	11	(vectorunsignedchar)vzero
water	25:57	0:0	12	(
water	25:58	0:0	12	vector
water	25:65	0:0	12	unsigned
water	25:74	0:0	12	char
water	25:78	0:0	12	)
water	25:79	0:0	12	vzero
arg	25:86	25:92	11	src_vF
water	25:86	0:0	12	src_vF
water	25:94	0:0	8	;
water	27:16	0:0	8	src_v
op	27:22	0:0	8	=
call	27:24	27:68	8	vec_mergeh
arg	27:35	27:40	9	src_v
water	27:35	0:0	10	src_v
arg	27:42	27:68	9	(vectorsignedshort)vzero
water	27:42	0:0	10	(
water	27:43	0:0	10	vector
water	27:50	0:0	10	signed
water	27:57	0:0	10	short
water	27:62	0:0	10	)
water	27:63	0:0	10	vzero
water	27:69	0:0	8	;
call	28:16	28:43	8	GET_VF4
arg	28:24	28:25	9	i
water	28:24	0:0	10	i
arg	28:27	28:35	9	filter_v
water	28:27	0:0	10	filter_v
arg	28:37	28:43	9	filter
water	28:37	0:0	10	filter
water	28:44	0:0	8	;
water	29:16	0:0	8	val_vEven
op	29:26	0:0	8	=
call	29:28	29:52	8	vec_mule
arg	29:37	29:42	9	src_v
water	29:37	0:0	10	src_v
arg	29:44	29:52	9	filter_v
water	29:44	0:0	10	filter_v
water	29:53	0:0	8	;
water	30:16	0:0	8	val_s
op	30:26	0:0	8	=
call	30:28	30:53	8	vec_sums
arg	30:37	30:46	9	val_vEven
water	30:37	0:0	10	val_vEven
arg	30:48	30:53	9	vzero
water	30:48	0:0	10	vzero
water	30:54	0:0	8	;
call	31:16	31:38	8	vec_st
arg	31:23	31:28	9	val_s
water	31:23	0:0	10	val_s
arg	31:30	31:31	9	0
water	31:30	0:0	10	0
arg	31:33	31:38	9	tempo
water	31:33	0:0	10	tempo
water	31:39	0:0	8	;
water	32:16	0:0	8	dst
op	32:19	0:0	8	[
water	32:20	0:0	8	i
op	32:21	0:0	8	]
op	32:23	0:0	8	=
call	32:25	32:59	8	FFMIN
arg	32:31	32:44	9	tempo[3]>>7
water	32:31	0:0	10	tempo
op	32:36	0:0	10	[
water	32:37	0:0	10	3
op	32:38	0:0	10	]
op	32:40	0:0	10	>>
water	32:43	0:0	10	7
arg	32:46	32:59	9	(1<<15)-1
water	32:46	0:0	10	(
water	32:47	0:0	10	1
op	32:49	0:0	10	<<
water	32:52	0:0	10	15
water	32:54	0:0	10	)
op	32:56	0:0	10	-
water	32:58	0:0	10	1
water	32:60	0:0	8	;
water	33:12	0:0	8	}
break	34:8	34:13	6	
label	35:8	35:14	6	case 8 :
for	36:12	51:12	6	(i = 0 ;i < dstW;i ++)
forinit	36:17	36:22	7	i = 0 ;
water	36:17	0:0	8	i
op	36:19	0:0	8	=
water	36:21	0:0	8	0
water	36:22	0:0	8	;
cond	36:24	36:28	7	i < dstW
water	36:24	0:0	8	i
op	36:26	0:0	8	<
water	36:28	0:0	8	dstW
forexpr	36:34	36:35	7	i ++
water	36:34	0:0	8	i
op	36:35	0:0	8	++
stmts	36:39	51:12	7	
water	36:39	0:0	8	{
water	37:16	0:0	8	register
water	37:25	0:0	8	int
water	37:29	0:0	8	srcPos
op	37:36	0:0	8	=
water	37:38	0:0	8	filterPos
op	37:47	0:0	8	[
water	37:48	0:0	8	i
op	37:49	0:0	8	]
water	37:50	0:0	8	;
water	38:16	0:0	8	vector
water	38:23	0:0	8	unsigned
water	38:32	0:0	8	char
water	38:37	0:0	8	src_vF
water	38:43	0:0	8	,
water	38:45	0:0	8	src_v0
water	38:51	0:0	8	,
water	38:53	0:0	8	src_v1
water	38:59	0:0	8	;
water	39:16	0:0	8	vector
water	39:23	0:0	8	unsigned
water	39:32	0:0	8	char
water	39:37	0:0	8	permS
water	39:42	0:0	8	;
water	40:16	0:0	8	vector
water	40:23	0:0	8	signed
water	40:30	0:0	8	short
water	40:36	0:0	8	src_v
water	40:41	0:0	8	,
water	40:43	0:0	8	filter_v
water	40:51	0:0	8	;
water	41:16	0:0	8	vector
water	41:23	0:0	8	signed
water	41:30	0:0	8	int
water	41:34	0:0	8	val_v
water	41:39	0:0	8	,
water	41:41	0:0	8	val_s
water	41:46	0:0	8	;
call	42:16	42:53	8	FIRST_LOAD
arg	42:27	42:33	9	src_v0
water	42:27	0:0	10	src_v0
arg	42:35	42:41	9	srcPos
water	42:35	0:0	10	srcPos
arg	42:43	42:46	9	src
water	42:43	0:0	10	src
arg	42:48	42:53	9	permS
water	42:48	0:0	10	permS
water	42:54	0:0	8	;
call	43:16	43:72	8	LOAD_SRCV8
arg	43:27	43:33	9	srcPos
water	43:27	0:0	10	srcPos
arg	43:35	43:36	9	0
water	43:35	0:0	10	0
arg	43:38	43:41	9	src
water	43:38	0:0	10	src
arg	43:43	43:48	9	permS
water	43:43	0:0	10	permS
arg	43:50	43:56	9	src_v0
water	43:50	0:0	10	src_v0
arg	43:58	43:64	9	src_v1
water	43:58	0:0	10	src_v1
arg	43:66	43:72	9	src_vF
water	43:66	0:0	10	src_vF
water	43:73	0:0	8	;
water	44:16	0:0	8	src_v
op	44:22	0:0	8	=
call	45:24	45:93	8	(vectorsignedshort)
arg	45:46	45:93	9	VEC_MERGEH((vectorunsignedchar)vzero,src_vF)
call	45:46	45:92	10	VEC_MERGEH
arg	45:57	45:84	11	(vectorunsignedchar)vzero
water	45:57	0:0	12	(
water	45:58	0:0	12	vector
water	45:65	0:0	12	unsigned
water	45:74	0:0	12	char
water	45:78	0:0	12	)
water	45:79	0:0	12	vzero
arg	45:86	45:92	11	src_vF
water	45:86	0:0	12	src_vF
water	45:94	0:0	8	;
water	46:16	0:0	8	filter_v
op	46:25	0:0	8	=
call	46:27	46:48	8	vec_ld
arg	46:34	46:40	9	i<<4
water	46:34	0:0	10	i
op	46:36	0:0	10	<<
water	46:39	0:0	10	4
arg	46:42	46:48	9	filter
water	46:42	0:0	10	filter
water	46:49	0:0	8	;
water	47:16	0:0	8	val_v
op	47:22	0:0	8	=
call	47:24	47:75	8	vec_msums
arg	47:34	47:39	9	src_v
water	47:34	0:0	10	src_v
arg	47:41	47:49	9	filter_v
water	47:41	0:0	10	filter_v
arg	47:51	47:75	9	(vectorsignedint)vzero
water	47:51	0:0	10	(
water	47:52	0:0	10	vector
water	47:59	0:0	10	signed
water	47:66	0:0	10	int
water	47:69	0:0	10	)
water	47:70	0:0	10	vzero
water	47:76	0:0	8	;
water	48:16	0:0	8	val_s
op	48:22	0:0	8	=
call	48:24	48:45	8	vec_sums
arg	48:33	48:38	9	val_v
water	48:33	0:0	10	val_v
arg	48:40	48:45	9	vzero
water	48:40	0:0	10	vzero
water	48:46	0:0	8	;
call	49:16	49:38	8	vec_st
arg	49:23	49:28	9	val_s
water	49:23	0:0	10	val_s
arg	49:30	49:31	9	0
water	49:30	0:0	10	0
arg	49:33	49:38	9	tempo
water	49:33	0:0	10	tempo
water	49:39	0:0	8	;
water	50:16	0:0	8	dst
op	50:19	0:0	8	[
water	50:20	0:0	8	i
op	50:21	0:0	8	]
op	50:23	0:0	8	=
call	50:25	50:59	8	FFMIN
arg	50:31	50:44	9	tempo[3]>>7
water	50:31	0:0	10	tempo
op	50:36	0:0	10	[
water	50:37	0:0	10	3
op	50:38	0:0	10	]
op	50:40	0:0	10	>>
water	50:43	0:0	10	7
arg	50:46	50:59	9	(1<<15)-1
water	50:46	0:0	10	(
water	50:47	0:0	10	1
op	50:49	0:0	10	<<
water	50:52	0:0	10	15
water	50:54	0:0	10	)
op	50:56	0:0	10	-
water	50:58	0:0	10	1
water	50:60	0:0	8	;
water	51:12	0:0	8	}
break	52:8	52:13	6	
label	53:8	53:15	6	case 16 :
for	54:12	68:12	6	(i = 0 ;i < dstW;i ++)
forinit	54:17	54:22	7	i = 0 ;
water	54:17	0:0	8	i
op	54:19	0:0	8	=
water	54:21	0:0	8	0
water	54:22	0:0	8	;
cond	54:24	54:28	7	i < dstW
water	54:24	0:0	8	i
op	54:26	0:0	8	<
water	54:28	0:0	8	dstW
forexpr	54:34	54:35	7	i ++
water	54:34	0:0	8	i
op	54:35	0:0	8	++
stmts	54:39	68:12	7	
water	54:39	0:0	8	{
water	55:16	0:0	8	register
water	55:25	0:0	8	int
water	55:29	0:0	8	srcPos
op	55:36	0:0	8	=
water	55:38	0:0	8	filterPos
op	55:47	0:0	8	[
water	55:48	0:0	8	i
op	55:49	0:0	8	]
water	55:50	0:0	8	;
water	56:16	0:0	8	vector
water	56:23	0:0	8	unsigned
water	56:32	0:0	8	char
water	56:37	0:0	8	src_vF
op	56:44	0:0	8	=
call	56:46	56:72	8	unaligned_load
arg	56:61	56:67	9	srcPos
water	56:61	0:0	10	srcPos
arg	56:69	56:72	9	src
water	56:69	0:0	10	src
water	56:73	0:0	8	;
water	57:16	0:0	8	vector
water	57:23	0:0	8	signed
water	57:30	0:0	8	short
water	57:36	0:0	8	src_vA
op	57:43	0:0	8	=
call	58:45	58:114	8	(vectorsignedshort)
arg	58:67	58:114	9	VEC_MERGEH((vectorunsignedchar)vzero,src_vF)
call	58:67	58:113	10	VEC_MERGEH
arg	58:78	58:105	11	(vectorunsignedchar)vzero
water	58:78	0:0	12	(
water	58:79	0:0	12	vector
water	58:86	0:0	12	unsigned
water	58:95	0:0	12	char
water	58:99	0:0	12	)
water	58:100	0:0	12	vzero
arg	58:107	58:113	11	src_vF
water	58:107	0:0	12	src_vF
water	58:115	0:0	8	;
water	59:16	0:0	8	vector
water	59:23	0:0	8	signed
water	59:30	0:0	8	short
water	59:36	0:0	8	src_vB
op	59:43	0:0	8	=
call	60:45	60:114	8	(vectorsignedshort)
arg	60:67	60:114	9	VEC_MERGEL((vectorunsignedchar)vzero,src_vF)
call	60:67	60:113	10	VEC_MERGEL
arg	60:78	60:105	11	(vectorunsignedchar)vzero
water	60:78	0:0	12	(
water	60:79	0:0	12	vector
water	60:86	0:0	12	unsigned
water	60:95	0:0	12	char
water	60:99	0:0	12	)
water	60:100	0:0	12	vzero
arg	60:107	60:113	11	src_vF
water	60:107	0:0	12	src_vF
water	60:115	0:0	8	;
water	61:16	0:0	8	vector
water	61:23	0:0	8	signed
water	61:30	0:0	8	short
water	61:36	0:0	8	filter_v0
op	61:46	0:0	8	=
call	61:48	61:69	8	vec_ld
arg	61:55	61:61	9	i<<5
water	61:55	0:0	10	i
op	61:57	0:0	10	<<
water	61:60	0:0	10	5
arg	61:63	61:69	9	filter
water	61:63	0:0	10	filter
water	61:70	0:0	8	;
water	62:16	0:0	8	vector
water	62:23	0:0	8	signed
water	62:30	0:0	8	short
water	62:36	0:0	8	filter_v1
op	62:46	0:0	8	=
call	62:48	62:76	8	vec_ld
arg	62:55	62:68	9	(i<<5)+16
water	62:55	0:0	10	(
water	62:56	0:0	10	i
op	62:58	0:0	10	<<
water	62:61	0:0	10	5
water	62:62	0:0	10	)
op	62:64	0:0	10	+
water	62:66	0:0	10	16
arg	62:70	62:76	9	filter
water	62:70	0:0	10	filter
water	62:77	0:0	8	;
water	63:16	0:0	8	vector
water	63:23	0:0	8	signed
water	63:30	0:0	8	int
water	63:34	0:0	8	val_acc
op	63:42	0:0	8	=
call	63:44	63:97	8	vec_msums
arg	63:54	63:60	9	src_vA
water	63:54	0:0	10	src_vA
arg	63:62	63:71	9	filter_v0
water	63:62	0:0	10	filter_v0
arg	63:73	63:97	9	(vectorsignedint)vzero
water	63:73	0:0	10	(
water	63:74	0:0	10	vector
water	63:81	0:0	10	signed
water	63:88	0:0	10	int
water	63:91	0:0	10	)
water	63:92	0:0	10	vzero
water	63:98	0:0	8	;
water	64:16	0:0	8	vector
water	64:23	0:0	8	signed
water	64:30	0:0	8	int
water	64:34	0:0	8	val_v
op	64:42	0:0	8	=
call	64:44	64:80	8	vec_msums
arg	64:54	64:60	9	src_vB
water	64:54	0:0	10	src_vB
arg	64:62	64:71	9	filter_v1
water	64:62	0:0	10	filter_v1
arg	64:73	64:80	9	val_acc
water	64:73	0:0	10	val_acc
water	64:81	0:0	8	;
water	65:16	0:0	8	vector
water	65:23	0:0	8	signed
water	65:30	0:0	8	int
water	65:34	0:0	8	val_s
op	65:40	0:0	8	=
call	65:42	65:63	8	vec_sums
arg	65:51	65:56	9	val_v
water	65:51	0:0	10	val_v
arg	65:58	65:63	9	vzero
water	65:58	0:0	10	vzero
water	65:64	0:0	8	;
call	66:16	66:38	8	VEC_ST
arg	66:23	66:28	9	val_s
water	66:23	0:0	10	val_s
arg	66:30	66:31	9	0
water	66:30	0:0	10	0
arg	66:33	66:38	9	tempo
water	66:33	0:0	10	tempo
water	66:39	0:0	8	;
water	67:16	0:0	8	dst
op	67:19	0:0	8	[
water	67:20	0:0	8	i
op	67:21	0:0	8	]
op	67:23	0:0	8	=
call	67:25	67:59	8	FFMIN
arg	67:31	67:44	9	tempo[3]>>7
water	67:31	0:0	10	tempo
op	67:36	0:0	10	[
water	67:37	0:0	10	3
op	67:38	0:0	10	]
op	67:40	0:0	10	>>
water	67:43	0:0	10	7
arg	67:46	67:59	9	(1<<15)-1
water	67:46	0:0	10	(
water	67:47	0:0	10	1
op	67:49	0:0	10	<<
water	67:52	0:0	10	15
water	67:54	0:0	10	)
op	67:56	0:0	10	-
water	67:58	0:0	10	1
water	67:60	0:0	8	;
water	68:12	0:0	8	}
break	69:8	69:13	6	
label	70:8	70:15	6	default :
for	71:12	106:12	6	(i = 0 ;i < dstW;i ++)
forinit	71:17	71:22	7	i = 0 ;
water	71:17	0:0	8	i
op	71:19	0:0	8	=
water	71:21	0:0	8	0
water	71:22	0:0	8	;
cond	71:24	71:28	7	i < dstW
water	71:24	0:0	8	i
op	71:26	0:0	8	<
water	71:28	0:0	8	dstW
forexpr	71:34	71:35	7	i ++
water	71:34	0:0	8	i
op	71:35	0:0	8	++
stmts	71:39	106:12	7	
water	71:39	0:0	8	{
water	72:16	0:0	8	register
water	72:25	0:0	8	int
water	72:29	0:0	8	j
water	72:30	0:0	8	,
water	72:32	0:0	8	offset
op	72:39	0:0	8	=
water	72:41	0:0	8	i
op	72:43	0:0	8	*
water	72:45	0:0	8	2
op	72:47	0:0	8	*
water	72:49	0:0	8	filterSize
water	72:59	0:0	8	;
water	73:16	0:0	8	register
water	73:25	0:0	8	int
water	73:29	0:0	8	srcPos
op	73:36	0:0	8	=
water	73:38	0:0	8	filterPos
op	73:47	0:0	8	[
water	73:48	0:0	8	i
op	73:49	0:0	8	]
water	73:50	0:0	8	;
water	74:16	0:0	8	vector
water	74:23	0:0	8	signed
water	74:30	0:0	8	int
water	74:34	0:0	8	val_s
water	74:39	0:0	8	,
water	74:41	0:0	8	val_v
op	74:47	0:0	8	=
water	74:49	0:0	8	(
water	74:50	0:0	8	vector
water	74:57	0:0	8	signed
water	74:64	0:0	8	int
water	74:67	0:0	8	)
water	74:68	0:0	8	vzero
water	74:73	0:0	8	;
water	75:16	0:0	8	vector
water	75:23	0:0	8	signed
water	75:30	0:0	8	short
water	75:36	0:0	8	filter_v0R
water	75:46	0:0	8	;
water	76:16	0:0	8	vector
water	76:23	0:0	8	unsigned
water	76:32	0:0	8	char
water	76:37	0:0	8	permF
water	76:42	0:0	8	,
water	76:44	0:0	8	src_v0
water	76:50	0:0	8	,
water	76:52	0:0	8	permS
water	76:57	0:0	8	;
call	77:16	77:60	8	FIRST_LOAD
arg	77:27	77:37	9	filter_v0R
water	77:27	0:0	10	filter_v0R
arg	77:39	77:45	9	offset
water	77:39	0:0	10	offset
arg	77:47	77:53	9	filter
water	77:47	0:0	10	filter
arg	77:55	77:60	9	permF
water	77:55	0:0	10	permF
water	77:61	0:0	8	;
call	78:16	78:53	8	FIRST_LOAD
arg	78:27	78:33	9	src_v0
water	78:27	0:0	10	src_v0
arg	78:35	78:41	9	srcPos
water	78:35	0:0	10	srcPos
arg	78:43	78:46	9	src
water	78:43	0:0	10	src
arg	78:48	78:53	9	permS
water	78:48	0:0	10	permS
water	78:54	0:0	8	;
for	79:16	92:16	8	(j = 0 ;j < filterSize - 15;j += 16)
forinit	79:21	79:26	9	j = 0 ;
water	79:21	0:0	10	j
op	79:23	0:0	10	=
water	79:25	0:0	10	0
water	79:26	0:0	10	;
cond	79:28	79:45	9	j < filterSize - 15
water	79:28	0:0	10	j
op	79:30	0:0	10	<
water	79:32	0:0	10	filterSize
op	79:43	0:0	10	-
water	79:45	0:0	10	15
forexpr	79:49	79:54	9	j += 16
water	79:49	0:0	10	j
op	79:51	0:0	10	+=
water	79:54	0:0	10	16
stmts	79:58	92:16	9	
water	79:58	0:0	10	{
water	80:20	0:0	10	vector
water	80:27	0:0	10	unsigned
water	80:36	0:0	10	char
water	80:41	0:0	10	src_v1
water	80:47	0:0	10	,
water	80:49	0:0	10	src_vF
water	80:55	0:0	10	;
water	81:20	0:0	10	vector
water	81:27	0:0	10	signed
water	81:34	0:0	10	short
water	81:40	0:0	10	filter_v1R
water	81:50	0:0	10	,
water	81:52	0:0	10	filter_v2R
water	81:62	0:0	10	,
water	81:64	0:0	10	filter_v0
water	81:73	0:0	10	,
water	81:75	0:0	10	filter_v1
water	81:84	0:0	10	;
call	82:20	82:75	10	LOAD_SRCV
arg	82:30	82:36	11	srcPos
water	82:30	0:0	12	srcPos
arg	82:38	82:39	11	j
water	82:38	0:0	12	j
arg	82:41	82:44	11	src
water	82:41	0:0	12	src
arg	82:46	82:51	11	permS
water	82:46	0:0	12	permS
arg	82:53	82:59	11	src_v0
water	82:53	0:0	12	src_v0
arg	82:61	82:67	11	src_v1
water	82:61	0:0	12	src_v1
arg	82:69	82:75	11	src_vF
water	82:69	0:0	12	src_vF
water	82:76	0:0	10	;
water	83:20	0:0	10	vector
water	83:27	0:0	10	signed
water	83:34	0:0	10	short
water	83:40	0:0	10	src_vA
op	83:47	0:0	10	=
call	84:49	84:118	10	(vectorsignedshort)
arg	84:71	84:118	11	VEC_MERGEH((vectorunsignedchar)vzero,src_vF)
call	84:71	84:117	12	VEC_MERGEH
arg	84:82	84:109	13	(vectorunsignedchar)vzero
water	84:82	0:0	14	(
water	84:83	0:0	14	vector
water	84:90	0:0	14	unsigned
water	84:99	0:0	14	char
water	84:103	0:0	14	)
water	84:104	0:0	14	vzero
arg	84:111	84:117	13	src_vF
water	84:111	0:0	14	src_vF
water	84:119	0:0	10	;
water	85:20	0:0	10	vector
water	85:27	0:0	10	signed
water	85:34	0:0	10	short
water	85:40	0:0	10	src_vB
op	85:47	0:0	10	=
call	86:49	86:118	10	(vectorsignedshort)
arg	86:71	86:118	11	VEC_MERGEL((vectorunsignedchar)vzero,src_vF)
call	86:71	86:117	12	VEC_MERGEL
arg	86:82	86:109	13	(vectorunsignedchar)vzero
water	86:82	0:0	14	(
water	86:83	0:0	14	vector
water	86:90	0:0	14	unsigned
water	86:99	0:0	14	char
water	86:103	0:0	14	)
water	86:104	0:0	14	vzero
arg	86:111	86:117	13	src_vF
water	86:111	0:0	14	src_vF
water	86:119	0:0	10	;
call	87:20	87:85	10	GET_VFD
arg	87:28	87:29	11	i
water	87:28	0:0	12	i
arg	87:31	87:32	11	j
water	87:31	0:0	12	j
arg	87:34	87:40	11	filter
water	87:34	0:0	12	filter
arg	87:42	87:52	11	filter_v0R
water	87:42	0:0	12	filter_v0R
arg	87:54	87:64	11	filter_v1R
water	87:54	0:0	12	filter_v1R
arg	87:66	87:71	11	permF
water	87:66	0:0	12	permF
arg	87:73	87:82	11	filter_v0
water	87:73	0:0	12	filter_v0
arg	87:84	87:85	11	0
water	87:84	0:0	12	0
water	87:86	0:0	10	;
call	88:20	88:86	10	GET_VFD
arg	88:28	88:29	11	i
water	88:28	0:0	12	i
arg	88:31	88:32	11	j
water	88:31	0:0	12	j
arg	88:34	88:40	11	filter
water	88:34	0:0	12	filter
arg	88:42	88:52	11	filter_v1R
water	88:42	0:0	12	filter_v1R
arg	88:54	88:64	11	filter_v2R
water	88:54	0:0	12	filter_v2R
arg	88:66	88:71	11	permF
water	88:66	0:0	12	permF
arg	88:73	88:82	11	filter_v1
water	88:73	0:0	12	filter_v1
arg	88:84	88:86	11	16
water	88:84	0:0	12	16
water	88:87	0:0	10	;
water	89:20	0:0	10	vector
water	89:27	0:0	10	signed
water	89:34	0:0	10	int
water	89:38	0:0	10	val_acc
op	89:46	0:0	10	=
call	89:48	89:82	10	vec_msums
arg	89:58	89:64	11	src_vA
water	89:58	0:0	12	src_vA
arg	89:66	89:75	11	filter_v0
water	89:66	0:0	12	filter_v0
arg	89:77	89:82	11	val_v
water	89:77	0:0	12	val_v
water	89:83	0:0	10	;
water	90:20	0:0	10	val_v
op	90:26	0:0	10	=
call	90:28	90:64	10	vec_msums
arg	90:38	90:44	11	src_vB
water	90:38	0:0	12	src_vB
arg	90:46	90:55	11	filter_v1
water	90:46	0:0	12	filter_v1
arg	90:57	90:64	11	val_acc
water	90:57	0:0	12	val_acc
water	90:65	0:0	10	;
call	91:20	91:69	10	UPDATE_PTR
arg	91:31	91:41	11	filter_v2R
water	91:31	0:0	12	filter_v2R
arg	91:43	91:53	11	filter_v0R
water	91:43	0:0	12	filter_v0R
arg	91:55	91:61	11	src_v1
water	91:55	0:0	12	src_v1
arg	91:63	91:69	11	src_v0
water	91:63	0:0	12	src_v0
water	91:70	0:0	10	;
water	92:16	0:0	10	}
if	93:16	102:16	8	(j < filterSize - 7)
cond	93:20	93:37	9	j < filterSize - 7
water	93:20	0:0	10	j
op	93:22	0:0	10	<
water	93:24	0:0	10	filterSize
op	93:35	0:0	10	-
water	93:37	0:0	10	7
stmts	93:40	102:16	9	
water	93:40	0:0	10	{
water	95:20	0:0	10	vector
water	95:27	0:0	10	unsigned
water	95:36	0:0	10	char
water	95:41	0:0	10	src_v1
water	95:47	0:0	10	,
water	95:49	0:0	10	src_vF
water	95:55	0:0	10	;
water	96:20	0:0	10	vector
water	96:27	0:0	10	signed
water	96:34	0:0	10	short
water	96:40	0:0	10	src_v
water	96:45	0:0	10	,
water	96:47	0:0	10	filter_v1R
water	96:57	0:0	10	,
water	96:59	0:0	10	filter_v
water	96:67	0:0	10	;
call	97:20	97:76	10	LOAD_SRCV8
arg	97:31	97:37	11	srcPos
water	97:31	0:0	12	srcPos
arg	97:39	97:40	11	j
water	97:39	0:0	12	j
arg	97:42	97:45	11	src
water	97:42	0:0	12	src
arg	97:47	97:52	11	permS
water	97:47	0:0	12	permS
arg	97:54	97:60	11	src_v0
water	97:54	0:0	12	src_v0
arg	97:62	97:68	11	src_v1
water	97:62	0:0	12	src_v1
arg	97:70	97:76	11	src_vF
water	97:70	0:0	12	src_vF
water	97:77	0:0	10	;
water	98:20	0:0	10	src_v
op	98:26	0:0	10	=
call	99:28	99:97	10	(vectorsignedshort)
arg	99:50	99:97	11	VEC_MERGEH((vectorunsignedchar)vzero,src_vF)
call	99:50	99:96	12	VEC_MERGEH
arg	99:61	99:88	13	(vectorunsignedchar)vzero
water	99:61	0:0	14	(
water	99:62	0:0	14	vector
water	99:69	0:0	14	unsigned
water	99:78	0:0	14	char
water	99:82	0:0	14	)
water	99:83	0:0	14	vzero
arg	99:90	99:96	13	src_vF
water	99:90	0:0	14	src_vF
water	99:98	0:0	10	;
call	100:20	100:84	10	GET_VFD
arg	100:28	100:29	11	i
water	100:28	0:0	12	i
arg	100:31	100:32	11	j
water	100:31	0:0	12	j
arg	100:34	100:40	11	filter
water	100:34	0:0	12	filter
arg	100:42	100:52	11	filter_v0R
water	100:42	0:0	12	filter_v0R
arg	100:54	100:64	11	filter_v1R
water	100:54	0:0	12	filter_v1R
arg	100:66	100:71	11	permF
water	100:66	0:0	12	permF
arg	100:73	100:81	11	filter_v
water	100:73	0:0	12	filter_v
arg	100:83	100:84	11	0
water	100:83	0:0	12	0
water	100:85	0:0	10	;
water	101:20	0:0	10	val_v
op	101:26	0:0	10	=
call	101:28	101:60	10	vec_msums
arg	101:38	101:43	11	src_v
water	101:38	0:0	12	src_v
arg	101:45	101:53	11	filter_v
water	101:45	0:0	12	filter_v
arg	101:55	101:60	11	val_v
water	101:55	0:0	12	val_v
water	101:61	0:0	10	;
water	102:16	0:0	10	}
water	103:16	0:0	8	val_s
op	103:22	0:0	8	=
call	103:24	103:45	8	vec_sums
arg	103:33	103:38	9	val_v
water	103:33	0:0	10	val_v
arg	103:40	103:45	9	vzero
water	103:40	0:0	10	vzero
water	103:46	0:0	8	;
call	104:16	104:38	8	VEC_ST
arg	104:23	104:28	9	val_s
water	104:23	0:0	10	val_s
arg	104:30	104:31	9	0
water	104:30	0:0	10	0
arg	104:33	104:38	9	tempo
water	104:33	0:0	10	tempo
water	104:39	0:0	8	;
water	105:16	0:0	8	dst
op	105:19	0:0	8	[
water	105:20	0:0	8	i
op	105:21	0:0	8	]
op	105:23	0:0	8	=
call	105:25	105:59	8	FFMIN
arg	105:31	105:44	9	tempo[3]>>7
water	105:31	0:0	10	tempo
op	105:36	0:0	10	[
water	105:37	0:0	10	3
op	105:38	0:0	10	]
op	105:40	0:0	10	>>
water	105:43	0:0	10	7
arg	105:46	105:59	9	(1<<15)-1
water	105:46	0:0	10	(
water	105:47	0:0	10	1
op	105:49	0:0	10	<<
water	105:52	0:0	10	15
water	105:54	0:0	10	)
op	105:56	0:0	10	-
water	105:58	0:0	10	1
water	105:60	0:0	8	;
water	106:12	0:0	8	}
water	107:8	0:0	6	}
decl	114:13	114:18	0	int	i
decl	118:21	118:26	0	int	j
decl	119:21	119:46	0	int	srcPos
op	119:32	0:0	0	=
water	119:34	0:0	0	filterPos
op	119:43	0:0	0	[
water	119:44	0:0	0	i
op	119:45	0:0	0	]
decl	120:21	120:35	0	int	val
op	120:32	0:0	0	=
water	120:34	0:0	0	0
decl	131:13	131:18	0	int	i
decl	135:21	135:26	0	int	j
decl	136:21	136:46	0	int	srcPos
op	136:32	0:0	0	=
water	136:34	0:0	0	filterPos
op	136:43	0:0	0	[
water	136:44	0:0	0	i
op	136:45	0:0	0	]
decl	137:21	137:35	0	int	val
op	137:32	0:0	0	=
water	137:34	0:0	0	0

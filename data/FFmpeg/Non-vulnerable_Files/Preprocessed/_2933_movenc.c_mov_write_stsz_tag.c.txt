func	1:0	32:0	0	static int	mov_write_stsz_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	31:31	1	
decl	3:4	3:23	2	int	equalChunks
op	3:20	0:0	2	=
water	3:22	0:0	2	1
decl	4:4	4:48	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:48	2	int	j
water	4:12	0:0	2	,
decl	4:4	4:48	2	int	entries
op	4:22	0:0	2	=
water	4:24	0:0	2	0
water	4:25	0:0	2	,
decl	4:4	4:48	2	int	tst
op	4:31	0:0	2	=
op	4:33	0:0	2	-
water	4:34	0:0	2	1
water	4:35	0:0	2	,
decl	4:4	4:48	2	int	oldtst
op	4:44	0:0	2	=
op	4:46	0:0	2	-
water	4:47	0:0	2	1
decl	5:4	5:31	2	int64_t	pos
op	5:16	0:0	2	=
call	5:18	5:30	3	avio_tell
arg	5:28	5:30	4	pb
water	5:28	0:0	5	pb
call	6:4	6:19	2	avio_wb32
arg	6:14	6:16	3	pb
water	6:14	0:0	4	pb
arg	6:18	6:19	3	0
water	6:18	0:0	4	0
water	6:20	0:0	2	;
call	7:4	7:27	2	ffio_wfourcc
arg	7:17	7:19	3	pb
water	7:17	0:0	4	pb
arg	7:21	7:27	3	"stsz"
water	7:21	0:0	4	"stsz"
water	7:28	0:0	2	;
call	8:4	8:19	2	avio_wb32
arg	8:14	8:16	3	pb
water	8:14	0:0	4	pb
arg	8:18	8:19	3	0
water	8:18	0:0	4	0
water	8:20	0:0	2	;
for	9:4	15:4	2	(i = 0 ;i < track -> entry;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:27	3	i < track -> entry
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	track
op	9:25	0:0	4	->
water	9:27	0:0	4	entry
forexpr	9:34	9:35	3	i ++
water	9:34	0:0	4	i
op	9:35	0:0	4	++
stmts	9:39	15:4	3	
water	9:39	0:0	4	{
water	10:8	0:0	4	tst
op	10:12	0:0	4	=
water	10:14	0:0	4	track
op	10:19	0:0	4	->
water	10:21	0:0	4	cluster
op	10:28	0:0	4	[
water	10:29	0:0	4	i
op	10:30	0:0	4	]
op	10:31	0:0	4	.
water	10:32	0:0	4	size
op	10:37	0:0	4	/
water	10:39	0:0	4	track
op	10:44	0:0	4	->
water	10:46	0:0	4	cluster
op	10:53	0:0	4	[
water	10:54	0:0	4	i
op	10:55	0:0	4	]
op	10:56	0:0	4	.
water	10:57	0:0	4	entries
water	10:64	0:0	4	;
if	11:8	12:27	4	(oldtst != - 1 && tst != oldtst)
cond	11:12	11:35	5	oldtst != - 1 && tst != oldtst
water	11:12	0:0	6	oldtst
op	11:19	0:0	6	!=
op	11:22	0:0	6	-
water	11:23	0:0	6	1
op	11:25	0:0	6	&&
water	11:28	0:0	6	tst
op	11:32	0:0	6	!=
water	11:35	0:0	6	oldtst
stmts	12:12	12:27	5	
water	12:12	0:0	6	equalChunks
op	12:24	0:0	6	=
water	12:26	0:0	6	0
water	12:27	0:0	6	;
water	13:8	0:0	4	oldtst
op	13:15	0:0	4	=
water	13:17	0:0	4	tst
water	13:20	0:0	4	;
water	14:8	0:0	4	entries
op	14:16	0:0	4	+=
water	14:19	0:0	4	track
op	14:24	0:0	4	->
water	14:26	0:0	4	cluster
op	14:33	0:0	4	[
water	14:34	0:0	4	i
op	14:35	0:0	4	]
op	14:36	0:0	4	.
water	14:37	0:0	4	entries
water	14:44	0:0	4	;
water	15:4	0:0	4	}
if	16:4	21:4	2	(equalChunks && track -> entry)
cond	16:8	16:30	3	equalChunks && track -> entry
water	16:8	0:0	4	equalChunks
op	16:20	0:0	4	&&
water	16:23	0:0	4	track
op	16:28	0:0	4	->
water	16:30	0:0	4	entry
stmts	16:37	21:4	3	
water	16:37	0:0	4	{
decl	17:8	17:89	4	int	sSize
op	17:18	0:0	4	=
water	17:20	0:0	4	track
op	17:25	0:0	4	->
water	17:27	0:0	4	entry
water	17:33	0:0	4	?
water	17:35	0:0	4	track
op	17:40	0:0	4	->
water	17:42	0:0	4	cluster
op	17:49	0:0	4	[
water	17:50	0:0	4	0
op	17:51	0:0	4	]
op	17:52	0:0	4	.
water	17:53	0:0	4	size
op	17:58	0:0	4	/
water	17:60	0:0	4	track
op	17:65	0:0	4	->
water	17:67	0:0	4	cluster
op	17:74	0:0	4	[
water	17:75	0:0	4	0
op	17:76	0:0	4	]
op	17:77	0:0	4	.
water	17:78	0:0	4	entries
water	17:86	0:0	4	:
water	17:88	0:0	4	0
water	18:8	0:0	4	sSize
op	18:14	0:0	4	=
call	18:16	18:30	4	FFMAX
arg	18:22	18:23	5	1
water	18:22	0:0	6	1
arg	18:25	18:30	5	sSize
water	18:25	0:0	6	sSize
water	18:31	0:0	4	;
call	19:8	19:27	4	avio_wb32
arg	19:18	19:20	5	pb
water	19:18	0:0	6	pb
arg	19:22	19:27	5	sSize
water	19:22	0:0	6	sSize
water	19:28	0:0	4	;
call	20:8	20:29	4	avio_wb32
arg	20:18	20:20	5	pb
water	20:18	0:0	6	pb
arg	20:22	20:29	5	entries
water	20:22	0:0	6	entries
water	20:30	0:0	4	;
water	21:4	0:0	4	}
else	21:6	30:4	2
stmts	21:11	30:4	3	
water	21:11	0:0	4	{
call	22:8	22:23	4	avio_wb32
arg	22:18	22:20	5	pb
water	22:18	0:0	6	pb
arg	22:22	22:23	5	0
water	22:22	0:0	6	0
water	22:24	0:0	4	;
call	23:8	23:29	4	avio_wb32
arg	23:18	23:20	5	pb
water	23:18	0:0	6	pb
arg	23:22	23:29	5	entries
water	23:22	0:0	6	entries
water	23:30	0:0	4	;
for	24:8	29:8	4	(i = 0 ;i < track -> entry;i ++)
forinit	24:13	24:18	5	i = 0 ;
water	24:13	0:0	6	i
op	24:15	0:0	6	=
water	24:17	0:0	6	0
water	24:18	0:0	6	;
cond	24:20	24:31	5	i < track -> entry
water	24:20	0:0	6	i
op	24:22	0:0	6	<
water	24:24	0:0	6	track
op	24:29	0:0	6	->
water	24:31	0:0	6	entry
forexpr	24:38	24:39	5	i ++
water	24:38	0:0	6	i
op	24:39	0:0	6	++
stmts	24:43	29:8	5	
water	24:43	0:0	6	{
for	25:12	28:12	6	(j = 0 ;j < track -> cluster [ i ] . entries;j ++)
forinit	25:17	25:22	7	j = 0 ;
water	25:17	0:0	8	j
op	25:19	0:0	8	=
water	25:21	0:0	8	0
water	25:22	0:0	8	;
cond	25:24	25:46	7	j < track -> cluster [ i ] . entries
water	25:24	0:0	8	j
op	25:26	0:0	8	<
water	25:28	0:0	8	track
op	25:33	0:0	8	->
water	25:35	0:0	8	cluster
op	25:42	0:0	8	[
water	25:43	0:0	8	i
op	25:44	0:0	8	]
op	25:45	0:0	8	.
water	25:46	0:0	8	entries
forexpr	25:55	25:56	7	j ++
water	25:55	0:0	8	j
op	25:56	0:0	8	++
stmts	25:60	28:12	7	
water	25:60	0:0	8	{
call	26:16	27:51	8	avio_wb32
arg	26:26	26:28	9	pb
water	26:26	0:0	10	pb
arg	26:30	27:51	9	track->cluster[i].size/track->cluster[i].entries
water	26:30	0:0	10	track
op	26:35	0:0	10	->
water	26:37	0:0	10	cluster
op	26:44	0:0	10	[
water	26:45	0:0	10	i
op	26:46	0:0	10	]
op	26:47	0:0	10	.
water	26:48	0:0	10	size
op	26:53	0:0	10	/
water	27:26	0:0	10	track
op	27:31	0:0	10	->
water	27:33	0:0	10	cluster
op	27:40	0:0	10	[
water	27:41	0:0	10	i
op	27:42	0:0	10	]
op	27:43	0:0	10	.
water	27:44	0:0	10	entries
water	27:52	0:0	8	;
water	28:12	0:0	8	}
water	29:8	0:0	6	}
water	30:4	0:0	4	}
return	31:4	31:31	2	update_size(pb,pos)
call	31:11	31:30	3	update_size
arg	31:23	31:25	4	pb
water	31:23	0:0	5	pb
arg	31:27	31:30	4	pos
water	31:27	0:0	5	pos

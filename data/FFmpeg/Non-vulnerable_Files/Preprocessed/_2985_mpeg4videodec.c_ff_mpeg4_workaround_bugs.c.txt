func	1:0	86:0	0	int	ff_mpeg4_workaround_bugs
params	1:28	0:0	1	
param	1:29	1:50	2	AVCodecContext *	avctx
stmnts	0:0	85:12	1	
decl	3:4	3:43	2	Mpeg4DecContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	avctx
op	3:32	0:0	2	->
water	3:34	0:0	2	priv_data
decl	4:4	4:31	2	MpegEncContext	*s
op	4:22	0:0	2	=
op	4:24	0:0	2	&
water	4:25	0:0	2	ctx
op	4:28	0:0	2	->
water	4:30	0:0	2	m
if	5:4	12:4	2	(ctx -> xvid_build == - 1 && ctx -> divx_version == - 1 && ctx -> lavc_build == - 1)
cond	5:8	5:80	3	ctx -> xvid_build == - 1 && ctx -> divx_version == - 1 && ctx -> lavc_build == - 1
water	5:8	0:0	4	ctx
op	5:11	0:0	4	->
water	5:13	0:0	4	xvid_build
op	5:24	0:0	4	==
op	5:27	0:0	4	-
water	5:28	0:0	4	1
op	5:30	0:0	4	&&
water	5:33	0:0	4	ctx
op	5:36	0:0	4	->
water	5:38	0:0	4	divx_version
op	5:51	0:0	4	==
op	5:54	0:0	4	-
water	5:55	0:0	4	1
op	5:57	0:0	4	&&
water	5:60	0:0	4	ctx
op	5:63	0:0	4	->
water	5:65	0:0	4	lavc_build
op	5:76	0:0	4	==
op	5:79	0:0	4	-
water	5:80	0:0	4	1
stmts	5:83	12:4	3	
water	5:83	0:0	4	{
if	6:8	11:31	4	(s -> codec_tag ==AV_RL32 ("XVID" ) || s -> codec_tag ==AV_RL32 ("XVIX" ) || s -> codec_tag ==AV_RL32 ("RMP4" ) || s -> codec_tag ==AV_RL32 ("ZMP4" ) || s -> codec_tag ==AV_RL32 ("SIPP" ))
cond	6:12	10:49	5	s -> codec_tag ==AV_RL32 ("XVID" ) || s -> codec_tag ==AV_RL32 ("XVIX" ) || s -> codec_tag ==AV_RL32 ("RMP4" ) || s -> codec_tag ==AV_RL32 ("ZMP4" ) || s -> codec_tag ==AV_RL32 ("SIPP" )
water	6:12	0:0	6	s
op	6:13	0:0	6	->
water	6:15	0:0	6	codec_tag
op	6:32	0:0	6	==
call	6:35	6:49	6	AV_RL32
arg	6:43	6:49	7	"XVID"
water	6:43	0:0	8	"XVID"
op	6:51	0:0	6	||
water	7:12	0:0	6	s
op	7:13	0:0	6	->
water	7:15	0:0	6	codec_tag
op	7:32	0:0	6	==
call	7:35	7:49	6	AV_RL32
arg	7:43	7:49	7	"XVIX"
water	7:43	0:0	8	"XVIX"
op	7:51	0:0	6	||
water	8:12	0:0	6	s
op	8:13	0:0	6	->
water	8:15	0:0	6	codec_tag
op	8:32	0:0	6	==
call	8:35	8:49	6	AV_RL32
arg	8:43	8:49	7	"RMP4"
water	8:43	0:0	8	"RMP4"
op	8:51	0:0	6	||
water	9:12	0:0	6	s
op	9:13	0:0	6	->
water	9:15	0:0	6	codec_tag
op	9:32	0:0	6	==
call	9:35	9:49	6	AV_RL32
arg	9:43	9:49	7	"ZMP4"
water	9:43	0:0	8	"ZMP4"
op	9:51	0:0	6	||
water	10:12	0:0	6	s
op	10:13	0:0	6	->
water	10:15	0:0	6	codec_tag
op	10:32	0:0	6	==
call	10:35	10:49	6	AV_RL32
arg	10:43	10:49	7	"SIPP"
water	10:43	0:0	8	"SIPP"
stmts	11:12	11:31	5	
water	11:12	0:0	6	ctx
op	11:15	0:0	6	->
water	11:17	0:0	6	xvid_build
op	11:28	0:0	6	=
water	11:30	0:0	6	0
water	11:31	0:0	6	;
water	12:4	0:0	4	}
if	13:4	16:35	2	(ctx -> xvid_build == - 1 && ctx -> divx_version == - 1 && ctx -> lavc_build == - 1)
cond	13:8	13:80	3	ctx -> xvid_build == - 1 && ctx -> divx_version == - 1 && ctx -> lavc_build == - 1
water	13:8	0:0	4	ctx
op	13:11	0:0	4	->
water	13:13	0:0	4	xvid_build
op	13:24	0:0	4	==
op	13:27	0:0	4	-
water	13:28	0:0	4	1
op	13:30	0:0	4	&&
water	13:33	0:0	4	ctx
op	13:36	0:0	4	->
water	13:38	0:0	4	divx_version
op	13:51	0:0	4	==
op	13:54	0:0	4	-
water	13:55	0:0	4	1
op	13:57	0:0	4	&&
water	13:60	0:0	4	ctx
op	13:63	0:0	4	->
water	13:65	0:0	4	lavc_build
op	13:76	0:0	4	==
op	13:79	0:0	4	-
water	13:80	0:0	4	1
stmts	14:8	16:35	3	
if	14:8	16:35	4	(s -> codec_tag ==AV_RL32 ("DIVX" ) && s -> vo_type == 0 && ctx -> vol_control_parameters == 0)
cond	14:12	15:43	5	s -> codec_tag ==AV_RL32 ("DIVX" ) && s -> vo_type == 0 && ctx -> vol_control_parameters == 0
water	14:12	0:0	6	s
op	14:13	0:0	6	->
water	14:15	0:0	6	codec_tag
op	14:25	0:0	6	==
call	14:28	14:42	6	AV_RL32
arg	14:36	14:42	7	"DIVX"
water	14:36	0:0	8	"DIVX"
op	14:44	0:0	6	&&
water	14:47	0:0	6	s
op	14:48	0:0	6	->
water	14:50	0:0	6	vo_type
op	14:58	0:0	6	==
water	14:61	0:0	6	0
op	14:63	0:0	6	&&
water	15:12	0:0	6	ctx
op	15:15	0:0	6	->
water	15:17	0:0	6	vol_control_parameters
op	15:40	0:0	6	==
water	15:43	0:0	6	0
stmts	16:12	16:35	5	
water	16:12	0:0	6	ctx
op	16:15	0:0	6	->
water	16:17	0:0	6	divx_version
op	16:30	0:0	6	=
water	16:32	0:0	6	400
water	16:35	0:0	6	;
if	17:4	20:4	2	(ctx -> xvid_build >= 0 && ctx -> divx_version >= 0)
cond	17:8	17:53	3	ctx -> xvid_build >= 0 && ctx -> divx_version >= 0
water	17:8	0:0	4	ctx
op	17:11	0:0	4	->
water	17:13	0:0	4	xvid_build
op	17:24	0:0	4	>=
water	17:27	0:0	4	0
op	17:29	0:0	4	&&
water	17:32	0:0	4	ctx
op	17:35	0:0	4	->
water	17:37	0:0	4	divx_version
op	17:50	0:0	4	>=
water	17:53	0:0	4	0
stmts	17:56	20:4	3	
water	17:56	0:0	4	{
water	18:8	0:0	4	ctx
op	18:11	0:0	4	->
water	18:13	0:0	4	divx_version
op	18:26	0:0	4	=
water	19:8	0:0	4	ctx
op	19:11	0:0	4	->
water	19:13	0:0	4	divx_build
op	19:26	0:0	4	=
op	19:28	0:0	4	-
water	19:29	0:0	4	1
water	19:30	0:0	4	;
water	20:4	0:0	4	}
if	21:4	58:4	2	(s -> workaround_bugs & FF_BUG_AUTODETECT)
cond	21:8	21:29	3	s -> workaround_bugs & FF_BUG_AUTODETECT
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	workaround_bugs
op	21:27	0:0	4	&
water	21:29	0:0	4	FF_BUG_AUTODETECT
stmts	21:48	58:4	3	
water	21:48	0:0	4	{
if	22:8	23:51	4	(s -> codec_tag ==AV_RL32 ("XVIX" ))
cond	22:12	22:42	5	s -> codec_tag ==AV_RL32 ("XVIX" )
water	22:12	0:0	6	s
op	22:13	0:0	6	->
water	22:15	0:0	6	codec_tag
op	22:25	0:0	6	==
call	22:28	22:42	6	AV_RL32
arg	22:36	22:42	7	"XVIX"
water	22:36	0:0	8	"XVIX"
stmts	23:12	23:51	5	
water	23:12	0:0	6	s
op	23:13	0:0	6	->
water	23:15	0:0	6	workaround_bugs
op	23:31	0:0	6	|=
water	23:34	0:0	6	FF_BUG_XVID_ILACE
water	23:51	0:0	6	;
if	24:8	25:45	4	(s -> codec_tag ==AV_RL32 ("UMP4" ))
cond	24:12	24:42	5	s -> codec_tag ==AV_RL32 ("UMP4" )
water	24:12	0:0	6	s
op	24:13	0:0	6	->
water	24:15	0:0	6	codec_tag
op	24:25	0:0	6	==
call	24:28	24:42	6	AV_RL32
arg	24:36	24:42	7	"UMP4"
water	24:36	0:0	8	"UMP4"
stmts	25:12	25:45	5	
water	25:12	0:0	6	s
op	25:13	0:0	6	->
water	25:15	0:0	6	workaround_bugs
op	25:31	0:0	6	|=
water	25:34	0:0	6	FF_BUG_UMP4
water	25:45	0:0	6	;
if	26:8	27:52	4	(ctx -> divx_version >= 500 && ctx -> divx_build < 1814)
cond	26:12	26:58	5	ctx -> divx_version >= 500 && ctx -> divx_build < 1814
water	26:12	0:0	6	ctx
op	26:15	0:0	6	->
water	26:17	0:0	6	divx_version
op	26:30	0:0	6	>=
water	26:33	0:0	6	500
op	26:37	0:0	6	&&
water	26:40	0:0	6	ctx
op	26:43	0:0	6	->
water	26:45	0:0	6	divx_build
op	26:56	0:0	6	<
water	26:58	0:0	6	1814
stmts	27:12	27:52	5	
water	27:12	0:0	6	s
op	27:13	0:0	6	->
water	27:15	0:0	6	workaround_bugs
op	27:31	0:0	6	|=
water	27:34	0:0	6	FF_BUG_QPEL_CHROMA
water	27:52	0:0	6	;
if	28:8	29:53	4	(ctx -> divx_version > 502 && ctx -> divx_build < 1814)
cond	28:12	28:57	5	ctx -> divx_version > 502 && ctx -> divx_build < 1814
water	28:12	0:0	6	ctx
op	28:15	0:0	6	->
water	28:17	0:0	6	divx_version
op	28:30	0:0	6	>
water	28:32	0:0	6	502
op	28:36	0:0	6	&&
water	28:39	0:0	6	ctx
op	28:42	0:0	6	->
water	28:44	0:0	6	divx_build
op	28:55	0:0	6	<
water	28:57	0:0	6	1814
stmts	29:12	29:53	5	
water	29:12	0:0	6	s
op	29:13	0:0	6	->
water	29:15	0:0	6	workaround_bugs
op	29:31	0:0	6	|=
water	29:34	0:0	6	FF_BUG_QPEL_CHROMA2
water	29:53	0:0	6	;
if	30:8	31:55	4	(ctx -> xvid_build <= 3 U)
cond	30:12	30:32	5	ctx -> xvid_build <= 3 U
water	30:12	0:0	6	ctx
op	30:15	0:0	6	->
water	30:17	0:0	6	xvid_build
op	30:28	0:0	6	<=
water	30:31	0:0	6	3
water	30:32	0:0	6	U
stmts	31:12	31:55	5	
water	31:12	0:0	6	s
op	31:13	0:0	6	->
water	31:15	0:0	6	padding_bug_score
op	31:33	0:0	6	=
water	31:35	0:0	6	256
op	31:39	0:0	6	*
water	31:41	0:0	6	256
op	31:45	0:0	6	*
water	31:47	0:0	6	256
op	31:51	0:0	6	*
water	31:53	0:0	6	64
water	31:55	0:0	6	;
if	32:8	33:52	4	(ctx -> xvid_build <= 1 U)
cond	32:12	32:32	5	ctx -> xvid_build <= 1 U
water	32:12	0:0	6	ctx
op	32:15	0:0	6	->
water	32:17	0:0	6	xvid_build
op	32:28	0:0	6	<=
water	32:31	0:0	6	1
water	32:32	0:0	6	U
stmts	33:12	33:52	5	
water	33:12	0:0	6	s
op	33:13	0:0	6	->
water	33:15	0:0	6	workaround_bugs
op	33:31	0:0	6	|=
water	33:34	0:0	6	FF_BUG_QPEL_CHROMA
water	33:52	0:0	6	;
if	34:8	35:45	4	(ctx -> xvid_build <= 12 U)
cond	34:12	34:33	5	ctx -> xvid_build <= 12 U
water	34:12	0:0	6	ctx
op	34:15	0:0	6	->
water	34:17	0:0	6	xvid_build
op	34:28	0:0	6	<=
water	34:31	0:0	6	12
water	34:33	0:0	6	U
stmts	35:12	35:45	5	
water	35:12	0:0	6	s
op	35:13	0:0	6	->
water	35:15	0:0	6	workaround_bugs
op	35:31	0:0	6	|=
water	35:34	0:0	6	FF_BUG_EDGE
water	35:45	0:0	6	;
if	36:8	37:48	4	(ctx -> xvid_build <= 32 U)
cond	36:12	36:33	5	ctx -> xvid_build <= 32 U
water	36:12	0:0	6	ctx
op	36:15	0:0	6	->
water	36:17	0:0	6	xvid_build
op	36:28	0:0	6	<=
water	36:31	0:0	6	32
water	36:33	0:0	6	U
stmts	37:12	37:48	5	
water	37:12	0:0	6	s
op	37:13	0:0	6	->
water	37:15	0:0	6	workaround_bugs
op	37:31	0:0	6	|=
water	37:34	0:0	6	FF_BUG_DC_CLIP
water	37:48	0:0	6	;
water	39:4	0:0	4	s
op	39:5	0:0	4	->
water	39:7	0:0	4	qdsp
op	39:11	0:0	4	.
water	39:12	0:0	4	put_
water	40:4	0:0	4	s
op	40:5	0:0	4	->
water	40:7	0:0	4	qdsp
op	40:11	0:0	4	.
water	40:12	0:0	4	put_no_rnd_
water	41:4	0:0	4	s
op	41:5	0:0	4	->
water	41:7	0:0	4	qdsp
op	41:11	0:0	4	.
water	41:12	0:0	4	avg_
water	42:8	0:0	4	if
water	42:11	0:0	4	(
water	42:12	0:0	4	ctx
op	42:15	0:0	4	->
water	42:17	0:0	4	lavc_build
op	42:28	0:0	4	<
water	42:30	0:0	4	4653
water	42:34	0:0	4	U
water	42:35	0:0	4	)
water	43:12	0:0	4	s
op	43:13	0:0	4	->
water	43:15	0:0	4	workaround_bugs
op	43:31	0:0	4	|=
water	43:34	0:0	4	FF_BUG_STD_QPEL
water	43:49	0:0	4	;
if	44:8	45:57	4	(ctx -> lavc_build < 4655 U)
cond	44:12	44:34	5	ctx -> lavc_build < 4655 U
water	44:12	0:0	6	ctx
op	44:15	0:0	6	->
water	44:17	0:0	6	lavc_build
op	44:28	0:0	6	<
water	44:30	0:0	6	4655
water	44:34	0:0	6	U
stmts	45:12	45:57	5	
water	45:12	0:0	6	s
op	45:13	0:0	6	->
water	45:15	0:0	6	workaround_bugs
op	45:31	0:0	6	|=
water	45:34	0:0	6	FF_BUG_DIRECT_BLOCKSIZE
water	45:57	0:0	6	;
if	46:8	47:45	4	(ctx -> lavc_build < 4670 U)
cond	46:12	46:34	5	ctx -> lavc_build < 4670 U
water	46:12	0:0	6	ctx
op	46:15	0:0	6	->
water	46:17	0:0	6	lavc_build
op	46:28	0:0	6	<
water	46:30	0:0	6	4670
water	46:34	0:0	6	U
stmts	47:12	47:45	5	
water	47:12	0:0	6	s
op	47:13	0:0	6	->
water	47:15	0:0	6	workaround_bugs
op	47:31	0:0	6	|=
water	47:34	0:0	6	FF_BUG_EDGE
water	47:45	0:0	6	;
if	48:8	49:48	4	(ctx -> lavc_build <= 4712 U)
cond	48:12	48:35	5	ctx -> lavc_build <= 4712 U
water	48:12	0:0	6	ctx
op	48:15	0:0	6	->
water	48:17	0:0	6	lavc_build
op	48:28	0:0	6	<=
water	48:31	0:0	6	4712
water	48:35	0:0	6	U
stmts	49:12	49:48	5	
water	49:12	0:0	6	s
op	49:13	0:0	6	->
water	49:15	0:0	6	workaround_bugs
op	49:31	0:0	6	|=
water	49:34	0:0	6	FF_BUG_DC_CLIP
water	49:48	0:0	6	;
if	50:8	51:57	4	(ctx -> divx_version >= 0)
cond	50:12	50:33	5	ctx -> divx_version >= 0
water	50:12	0:0	6	ctx
op	50:15	0:0	6	->
water	50:17	0:0	6	divx_version
op	50:30	0:0	6	>=
water	50:33	0:0	6	0
stmts	51:12	51:57	5	
water	51:12	0:0	6	s
op	51:13	0:0	6	->
water	51:15	0:0	6	workaround_bugs
op	51:31	0:0	6	|=
water	51:34	0:0	6	FF_BUG_DIRECT_BLOCKSIZE
water	51:57	0:0	6	;
if	52:8	53:55	4	(ctx -> divx_version == 501 && ctx -> divx_build == 20020416)
cond	52:12	52:59	5	ctx -> divx_version == 501 && ctx -> divx_build == 20020416
water	52:12	0:0	6	ctx
op	52:15	0:0	6	->
water	52:17	0:0	6	divx_version
op	52:30	0:0	6	==
water	52:33	0:0	6	501
op	52:37	0:0	6	&&
water	52:40	0:0	6	ctx
op	52:43	0:0	6	->
water	52:45	0:0	6	divx_build
op	52:56	0:0	6	==
water	52:59	0:0	6	20020416
stmts	53:12	53:55	5	
water	53:12	0:0	6	s
op	53:13	0:0	6	->
water	53:15	0:0	6	padding_bug_score
op	53:33	0:0	6	=
water	53:35	0:0	6	256
op	53:39	0:0	6	*
water	53:41	0:0	6	256
op	53:45	0:0	6	*
water	53:47	0:0	6	256
op	53:51	0:0	6	*
water	53:53	0:0	6	64
water	53:55	0:0	6	;
if	54:8	55:45	4	(ctx -> divx_version < 500 U)
cond	54:12	54:35	5	ctx -> divx_version < 500 U
water	54:12	0:0	6	ctx
op	54:15	0:0	6	->
water	54:17	0:0	6	divx_version
op	54:30	0:0	6	<
water	54:32	0:0	6	500
water	54:35	0:0	6	U
stmts	55:12	55:45	5	
water	55:12	0:0	6	s
op	55:13	0:0	6	->
water	55:15	0:0	6	workaround_bugs
op	55:31	0:0	6	|=
water	55:34	0:0	6	FF_BUG_EDGE
water	55:45	0:0	6	;
if	56:8	57:52	4	(ctx -> divx_version >= 0)
cond	56:12	56:33	5	ctx -> divx_version >= 0
water	56:12	0:0	6	ctx
op	56:15	0:0	6	->
water	56:17	0:0	6	divx_version
op	56:30	0:0	6	>=
water	56:33	0:0	6	0
stmts	57:12	57:52	5	
water	57:12	0:0	6	s
op	57:13	0:0	6	->
water	57:15	0:0	6	workaround_bugs
op	57:31	0:0	6	|=
water	57:34	0:0	6	FF_BUG_HPEL_CHROMA
water	57:52	0:0	6	;
water	58:4	0:0	4	}
if	59:4	72:4	2	(s -> workaround_bugs & FF_BUG_STD_QPEL)
cond	59:8	59:29	3	s -> workaround_bugs & FF_BUG_STD_QPEL
water	59:8	0:0	4	s
op	59:9	0:0	4	->
water	59:11	0:0	4	workaround_bugs
op	59:27	0:0	4	&
water	59:29	0:0	4	FF_BUG_STD_QPEL
stmts	59:46	72:4	3	
water	59:46	0:0	4	{
water	60:8	0:0	4	SET_QPEL_FUNC
water	60:21	0:0	4	(
water	60:22	0:0	4	qpel_pixels_tab
op	60:37	0:0	4	[
water	60:38	0:0	4	0
op	60:39	0:0	4	]
op	60:40	0:0	4	[
water	60:41	0:0	4	5
op	60:42	0:0	4	]
water	60:43	0:0	4	,
water	60:45	0:0	4	qpel16_mc11_old_c
water	60:62	0:0	4	)
water	61:8	0:0	4	SET_QPEL_FUNC
water	61:21	0:0	4	(
water	61:22	0:0	4	qpel_pixels_tab
op	61:37	0:0	4	[
water	61:38	0:0	4	0
op	61:39	0:0	4	]
op	61:40	0:0	4	[
water	61:41	0:0	4	7
op	61:42	0:0	4	]
water	61:43	0:0	4	,
water	61:45	0:0	4	qpel16_mc31_old_c
water	61:62	0:0	4	)
water	62:8	0:0	4	SET_QPEL_FUNC
water	62:21	0:0	4	(
water	62:22	0:0	4	qpel_pixels_tab
op	62:37	0:0	4	[
water	62:38	0:0	4	0
op	62:39	0:0	4	]
op	62:40	0:0	4	[
water	62:41	0:0	4	9
op	62:42	0:0	4	]
water	62:43	0:0	4	,
water	62:45	0:0	4	qpel16_mc12_old_c
water	62:62	0:0	4	)
water	63:8	0:0	4	SET_QPEL_FUNC
water	63:21	0:0	4	(
water	63:22	0:0	4	qpel_pixels_tab
op	63:37	0:0	4	[
water	63:38	0:0	4	0
op	63:39	0:0	4	]
op	63:40	0:0	4	[
water	63:41	0:0	4	11
op	63:43	0:0	4	]
water	63:44	0:0	4	,
water	63:46	0:0	4	qpel16_mc32_old_c
water	63:63	0:0	4	)
water	64:8	0:0	4	SET_QPEL_FUNC
water	64:21	0:0	4	(
water	64:22	0:0	4	qpel_pixels_tab
op	64:37	0:0	4	[
water	64:38	0:0	4	0
op	64:39	0:0	4	]
op	64:40	0:0	4	[
water	64:41	0:0	4	13
op	64:43	0:0	4	]
water	64:44	0:0	4	,
water	64:46	0:0	4	qpel16_mc13_old_c
water	64:63	0:0	4	)
water	65:8	0:0	4	SET_QPEL_FUNC
water	65:21	0:0	4	(
water	65:22	0:0	4	qpel_pixels_tab
op	65:37	0:0	4	[
water	65:38	0:0	4	0
op	65:39	0:0	4	]
op	65:40	0:0	4	[
water	65:41	0:0	4	15
op	65:43	0:0	4	]
water	65:44	0:0	4	,
water	65:46	0:0	4	qpel16_mc33_old_c
water	65:63	0:0	4	)
water	66:8	0:0	4	SET_QPEL_FUNC
water	66:21	0:0	4	(
water	66:22	0:0	4	qpel_pixels_tab
op	66:37	0:0	4	[
water	66:38	0:0	4	1
op	66:39	0:0	4	]
op	66:40	0:0	4	[
water	66:41	0:0	4	5
op	66:42	0:0	4	]
water	66:43	0:0	4	,
water	66:45	0:0	4	qpel8_mc11_old_c
water	66:61	0:0	4	)
water	67:8	0:0	4	SET_QPEL_FUNC
water	67:21	0:0	4	(
water	67:22	0:0	4	qpel_pixels_tab
op	67:37	0:0	4	[
water	67:38	0:0	4	1
op	67:39	0:0	4	]
op	67:40	0:0	4	[
water	67:41	0:0	4	7
op	67:42	0:0	4	]
water	67:43	0:0	4	,
water	67:45	0:0	4	qpel8_mc31_old_c
water	67:61	0:0	4	)
water	68:8	0:0	4	SET_QPEL_FUNC
water	68:21	0:0	4	(
water	68:22	0:0	4	qpel_pixels_tab
op	68:37	0:0	4	[
water	68:38	0:0	4	1
op	68:39	0:0	4	]
op	68:40	0:0	4	[
water	68:41	0:0	4	9
op	68:42	0:0	4	]
water	68:43	0:0	4	,
water	68:45	0:0	4	qpel8_mc12_old_c
water	68:61	0:0	4	)
water	69:8	0:0	4	SET_QPEL_FUNC
water	69:21	0:0	4	(
water	69:22	0:0	4	qpel_pixels_tab
op	69:37	0:0	4	[
water	69:38	0:0	4	1
op	69:39	0:0	4	]
op	69:40	0:0	4	[
water	69:41	0:0	4	11
op	69:43	0:0	4	]
water	69:44	0:0	4	,
water	69:46	0:0	4	qpel8_mc32_old_c
water	69:62	0:0	4	)
water	70:8	0:0	4	SET_QPEL_FUNC
water	70:21	0:0	4	(
water	70:22	0:0	4	qpel_pixels_tab
op	70:37	0:0	4	[
water	70:38	0:0	4	1
op	70:39	0:0	4	]
op	70:40	0:0	4	[
water	70:41	0:0	4	13
op	70:43	0:0	4	]
water	70:44	0:0	4	,
water	70:46	0:0	4	qpel8_mc13_old_c
water	70:62	0:0	4	)
water	71:8	0:0	4	SET_QPEL_FUNC
water	71:21	0:0	4	(
water	71:22	0:0	4	qpel_pixels_tab
op	71:37	0:0	4	[
water	71:38	0:0	4	1
op	71:39	0:0	4	]
op	71:40	0:0	4	[
water	71:41	0:0	4	15
op	71:43	0:0	4	]
water	71:44	0:0	4	,
water	71:46	0:0	4	qpel8_mc33_old_c
water	71:62	0:0	4	)
water	72:4	0:0	4	}
if	73:4	77:77	2	(avctx -> debug & FF_DEBUG_BUGS)
cond	73:8	73:23	3	avctx -> debug & FF_DEBUG_BUGS
water	73:8	0:0	4	avctx
op	73:13	0:0	4	->
water	73:15	0:0	4	debug
op	73:21	0:0	4	&
water	73:23	0:0	4	FF_DEBUG_BUGS
stmts	74:8	77:77	3	
call	74:8	77:76	4	av_log
arg	74:15	74:23	5	s->avctx
water	74:15	0:0	6	s
op	74:16	0:0	6	->
water	74:18	0:0	6	avctx
arg	74:25	74:37	5	AV_LOG_DEBUG
water	74:25	0:0	6	AV_LOG_DEBUG
arg	75:15	75:88	5	"bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n"
water	75:15	0:0	6	"bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n"
arg	76:15	76:33	5	s->workaround_bugs
water	76:15	0:0	6	s
op	76:16	0:0	6	->
water	76:18	0:0	6	workaround_bugs
arg	76:35	76:50	5	ctx->lavc_build
water	76:35	0:0	6	ctx
op	76:38	0:0	6	->
water	76:40	0:0	6	lavc_build
arg	76:52	76:67	5	ctx->xvid_build
water	76:52	0:0	6	ctx
op	76:55	0:0	6	->
water	76:57	0:0	6	xvid_build
arg	77:15	77:32	5	ctx->divx_version
water	77:15	0:0	6	ctx
op	77:18	0:0	6	->
water	77:20	0:0	6	divx_version
arg	77:34	77:49	5	ctx->divx_build
water	77:34	0:0	6	ctx
op	77:37	0:0	6	->
water	77:39	0:0	6	divx_build
arg	77:51	77:76	5	s->divx_packed?"p":""
water	77:51	0:0	6	s
op	77:52	0:0	6	->
water	77:54	0:0	6	divx_packed
water	77:66	0:0	6	?
water	77:68	0:0	6	"p"
water	77:72	0:0	6	:
water	77:74	0:0	6	""
water	77:77	0:0	4	;
if	78:4	84:4	2	(CONFIG_MPEG4_DECODER && ctx -> xvid_build >= 0 && s -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> idct_algo == FF_IDCT_AUTO)
cond	78:8	80:28	3	CONFIG_MPEG4_DECODER && ctx -> xvid_build >= 0 && s -> codec_id == AV_CODEC_ID_MPEG4 && avctx -> idct_algo == FF_IDCT_AUTO
water	78:8	0:0	4	CONFIG_MPEG4_DECODER
op	78:29	0:0	4	&&
water	78:32	0:0	4	ctx
op	78:35	0:0	4	->
water	78:37	0:0	4	xvid_build
op	78:48	0:0	4	>=
water	78:51	0:0	4	0
op	78:53	0:0	4	&&
water	79:8	0:0	4	s
op	79:9	0:0	4	->
water	79:11	0:0	4	codec_id
op	79:20	0:0	4	==
water	79:23	0:0	4	AV_CODEC_ID_MPEG4
op	79:41	0:0	4	&&
water	80:8	0:0	4	avctx
op	80:13	0:0	4	->
water	80:15	0:0	4	idct_algo
op	80:25	0:0	4	==
water	80:28	0:0	4	FF_IDCT_AUTO
stmts	80:42	84:4	3	
water	80:42	0:0	4	{
water	81:8	0:0	4	avctx
op	81:13	0:0	4	->
water	81:15	0:0	4	idct_algo
op	81:25	0:0	4	=
water	81:27	0:0	4	FF_IDCT_XVID
water	81:39	0:0	4	;
call	82:8	82:26	4	ff_mpv_idct_init
arg	82:25	82:26	5	s
water	82:25	0:0	6	s
water	82:27	0:0	4	;
return	83:8	83:16	4	1
water	83:15	0:0	5	1
water	84:4	0:0	4	}
return	85:4	85:12	2	0
water	85:11	0:0	3	0

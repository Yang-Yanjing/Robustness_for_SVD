func	1:0	56:0	0	int	ff_fbdev_get_device_list
params	1:28	0:0	1	
param	1:29	1:58	2	AVDeviceInfoList *	device_list
stmnts	0:0	55:12	1	
decl	3:4	3:36	2	struct fb_var_screeninfo	varinfo
decl	4:4	4:36	2	struct fb_fix_screeninfo	fixinfo
decl	5:4	5:24	2	char	device_file[12]
decl	6:4	6:31	2	AVDeviceInfo	*device
op	6:25	0:0	2	=
water	6:27	0:0	2	NULL
decl	7:4	7:22	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:22	2	int	fd
water	7:13	0:0	2	,
decl	7:4	7:22	2	int	ret
op	7:19	0:0	2	=
water	7:21	0:0	2	0
decl	8:4	8:58	2	const char	*default_device
op	8:31	0:0	2	=
call	8:33	8:57	3	ff_fbdev_default_device
if	9:4	10:30	2	(! device_list)
cond	9:8	9:9	3	! device_list
op	9:8	0:0	4	!
water	9:9	0:0	4	device_list
stmts	10:8	10:30	3	
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
for	11:4	54:4	2	(i = 0 ;i <= 31;i ++)
forinit	11:9	11:14	3	i = 0 ;
water	11:9	0:0	4	i
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:21	3	i <= 31
water	11:16	0:0	4	i
op	11:18	0:0	4	<=
water	11:21	0:0	4	31
forexpr	11:25	11:26	3	i ++
water	11:25	0:0	4	i
op	11:26	0:0	4	++
stmts	11:30	54:4	3	
water	11:30	0:0	4	{
call	12:8	12:65	4	snprintf
arg	12:17	12:28	5	device_file
water	12:17	0:0	6	device_file
arg	12:30	12:49	5	sizeof(device_file)
op	12:30	0:0	6	sizeof
water	12:36	0:0	6	(
water	12:37	0:0	6	device_file
water	12:48	0:0	6	)
arg	12:51	12:62	5	"/dev/fb%d"
water	12:51	0:0	6	"/dev/fb%d"
arg	12:64	12:65	5	i
water	12:64	0:0	6	i
water	12:66	0:0	4	;
if	13:8	19:8	4	(( fd =avpriv_open (device_file ,O_RDWR ) ) < 0)
cond	13:12	13:54	5	( fd =avpriv_open (device_file ,O_RDWR ) ) < 0
water	13:12	0:0	6	(
water	13:13	0:0	6	fd
op	13:16	0:0	6	=
call	13:18	13:49	6	avpriv_open
arg	13:30	13:41	7	device_file
water	13:30	0:0	8	device_file
arg	13:43	13:49	7	O_RDWR
water	13:43	0:0	8	O_RDWR
water	13:50	0:0	6	)
op	13:52	0:0	6	<
water	13:54	0:0	6	0
stmts	13:57	19:8	5	
water	13:57	0:0	6	{
decl	14:12	14:36	6	int	err
op	14:20	0:0	6	=
call	14:22	14:35	7	AVERROR
arg	14:30	14:35	8	errno
water	14:30	0:0	9	errno
if	15:12	17:52	6	(err !=AVERROR (ENOENT ))
cond	15:16	15:37	7	err !=AVERROR (ENOENT )
water	15:16	0:0	8	err
op	15:20	0:0	8	!=
call	15:23	15:37	8	AVERROR
arg	15:31	15:37	9	ENOENT
water	15:31	0:0	10	ENOENT
stmts	16:16	17:52	7	
call	16:16	17:51	8	av_log
arg	16:23	16:27	9	NULL
water	16:23	0:0	10	NULL
arg	16:29	16:41	9	AV_LOG_ERROR
water	16:29	0:0	10	AV_LOG_ERROR
arg	16:43	16:89	9	"Could not open framebuffer device '%s': %s\n"
water	16:43	0:0	10	"Could not open framebuffer device '%s': %s\n"
arg	17:23	17:34	9	device_file
water	17:23	0:0	10	device_file
arg	17:36	17:51	9	av_err2str(err)
call	17:36	17:50	10	av_err2str
arg	17:47	17:50	11	err
water	17:47	0:0	12	err
water	17:52	0:0	8	;
continue	18:12	18:20	6	
water	19:8	0:0	6	}
if	20:8	21:28	4	(ioctl (fd ,FBIOGET_VSCREENINFO ,& varinfo ) == - 1)
cond	20:12	20:57	5	ioctl (fd ,FBIOGET_VSCREENINFO ,& varinfo ) == - 1
call	20:12	20:51	6	ioctl
arg	20:18	20:20	7	fd
water	20:18	0:0	8	fd
arg	20:22	20:41	7	FBIOGET_VSCREENINFO
water	20:22	0:0	8	FBIOGET_VSCREENINFO
arg	20:43	20:51	7	&varinfo
op	20:43	0:0	8	&
water	20:44	0:0	8	varinfo
op	20:53	0:0	6	==
op	20:56	0:0	6	-
water	20:57	0:0	6	1
stmts	21:12	21:28	5	
goto	21:12	21:28	6	fail_device
water	21:17	0:0	7	fail_device
if	22:8	23:28	4	(ioctl (fd ,FBIOGET_FSCREENINFO ,& fixinfo ) == - 1)
cond	22:12	22:57	5	ioctl (fd ,FBIOGET_FSCREENINFO ,& fixinfo ) == - 1
call	22:12	22:51	6	ioctl
arg	22:18	22:20	7	fd
water	22:18	0:0	8	fd
arg	22:22	22:41	7	FBIOGET_FSCREENINFO
water	22:22	0:0	8	FBIOGET_FSCREENINFO
arg	22:43	22:51	7	&fixinfo
op	22:43	0:0	8	&
water	22:44	0:0	8	fixinfo
op	22:53	0:0	6	==
op	22:56	0:0	6	-
water	22:57	0:0	6	1
stmts	23:12	23:28	5	
goto	23:12	23:28	6	fail_device
water	23:17	0:0	7	fail_device
water	24:8	0:0	4	device
op	24:15	0:0	4	=
call	24:17	24:48	4	av_mallocz
arg	24:28	24:48	5	sizeof(AVDeviceInfo)
op	24:28	0:0	6	sizeof
water	24:34	0:0	6	(
water	24:35	0:0	6	AVDeviceInfo
water	24:47	0:0	6	)
water	24:49	0:0	4	;
if	25:8	28:8	4	(! device)
cond	25:12	25:13	5	! device
op	25:12	0:0	6	!
water	25:13	0:0	6	device
stmts	25:21	28:8	5	
water	25:21	0:0	6	{
water	26:12	0:0	6	ret
op	26:16	0:0	6	=
call	26:18	26:32	6	AVERROR
arg	26:26	26:32	7	ENOMEM
water	26:26	0:0	8	ENOMEM
water	26:33	0:0	6	;
goto	27:12	27:28	6	fail_device
water	27:17	0:0	7	fail_device
water	28:8	0:0	6	}
water	29:8	0:0	4	device
op	29:14	0:0	4	->
water	29:16	0:0	4	device_name
op	29:28	0:0	4	=
call	29:30	29:51	4	av_strdup
arg	29:40	29:51	5	device_file
water	29:40	0:0	6	device_file
water	29:52	0:0	4	;
water	30:8	0:0	4	device
op	30:14	0:0	4	->
water	30:16	0:0	4	device_description
op	30:35	0:0	4	=
call	30:37	30:57	4	av_strdup
arg	30:47	30:57	5	fixinfo.id
water	30:47	0:0	6	fixinfo
op	30:54	0:0	6	.
water	30:55	0:0	6	id
water	30:58	0:0	4	;
if	31:8	34:8	4	(! device -> device_name || ! device -> device_description)
cond	31:12	31:45	5	! device -> device_name || ! device -> device_description
op	31:12	0:0	6	!
water	31:13	0:0	6	device
op	31:19	0:0	6	->
water	31:21	0:0	6	device_name
op	31:33	0:0	6	||
op	31:36	0:0	6	!
water	31:37	0:0	6	device
op	31:43	0:0	6	->
water	31:45	0:0	6	device_description
stmts	31:65	34:8	5	
water	31:65	0:0	6	{
water	32:12	0:0	6	ret
op	32:16	0:0	6	=
call	32:18	32:32	6	AVERROR
arg	32:26	32:32	7	ENOMEM
water	32:26	0:0	8	ENOMEM
water	32:33	0:0	6	;
goto	33:12	33:28	6	fail_device
water	33:17	0:0	7	fail_device
water	34:8	0:0	6	}
if	35:8	37:28	4	(( ret =av_dynarray_add_nofree (& device_list -> devices ,& device_list -> nb_devices ,device ) ) < 0)
cond	35:12	36:79	5	( ret =av_dynarray_add_nofree (& device_list -> devices ,& device_list -> nb_devices ,device ) ) < 0
water	35:12	0:0	6	(
water	35:13	0:0	6	ret
op	35:17	0:0	6	=
call	35:19	36:74	6	av_dynarray_add_nofree
arg	35:42	35:63	7	&device_list->devices
op	35:42	0:0	8	&
water	35:43	0:0	8	device_list
op	35:54	0:0	8	->
water	35:56	0:0	8	devices
arg	36:42	36:66	7	&device_list->nb_devices
op	36:42	0:0	8	&
water	36:43	0:0	8	device_list
op	36:54	0:0	8	->
water	36:56	0:0	8	nb_devices
arg	36:68	36:74	7	device
water	36:68	0:0	8	device
water	36:75	0:0	6	)
op	36:77	0:0	6	<
water	36:79	0:0	6	0
stmts	37:12	37:28	5	
goto	37:12	37:28	6	fail_device
water	37:17	0:0	7	fail_device
if	38:8	41:8	4	(default_device && !strcmp (device -> device_name ,default_device ))
cond	38:12	38:73	5	default_device && !strcmp (device -> device_name ,default_device )
water	38:12	0:0	6	default_device
op	38:27	0:0	6	&&
op	38:30	0:0	6	!
call	38:31	38:73	6	strcmp
arg	38:38	38:57	7	device->device_name
water	38:38	0:0	8	device
op	38:44	0:0	8	->
water	38:46	0:0	8	device_name
arg	38:59	38:73	7	default_device
water	38:59	0:0	8	default_device
stmts	38:76	41:8	5	
water	38:76	0:0	6	{
water	39:12	0:0	6	device_list
op	39:23	0:0	6	->
water	39:25	0:0	6	default_device
op	39:40	0:0	6	=
water	39:42	0:0	6	device_list
op	39:53	0:0	6	->
water	39:55	0:0	6	nb_devices
op	39:66	0:0	6	-
water	39:68	0:0	6	1
water	39:69	0:0	6	;
water	40:12	0:0	6	default_device
op	40:27	0:0	6	=
water	40:29	0:0	6	NULL
water	40:33	0:0	6	;
water	41:8	0:0	6	}
call	42:8	42:16	4	close
arg	42:14	42:16	5	fd
water	42:14	0:0	6	fd
water	42:17	0:0	4	;
continue	43:8	43:16	4	
label	44:6	44:17	4	fail_device :
if	45:8	49:8	4	(device)
cond	45:12	45:12	5	device
water	45:12	0:0	6	device
stmts	45:20	49:8	5	
water	45:20	0:0	6	{
call	46:12	46:41	6	av_freep
arg	46:21	46:41	7	&device->device_name
op	46:21	0:0	8	&
water	46:22	0:0	8	device
op	46:28	0:0	8	->
water	46:30	0:0	8	device_name
water	46:42	0:0	6	;
call	47:12	47:48	6	av_freep
arg	47:21	47:48	7	&device->device_description
op	47:21	0:0	8	&
water	47:22	0:0	8	device
op	47:28	0:0	8	->
water	47:30	0:0	8	device_description
water	47:49	0:0	6	;
call	48:12	48:28	6	av_freep
arg	48:21	48:28	7	&device
op	48:21	0:0	8	&
water	48:22	0:0	8	device
water	48:29	0:0	6	;
water	49:8	0:0	6	}
if	50:8	51:21	4	(fd >= 0)
cond	50:12	50:18	5	fd >= 0
water	50:12	0:0	6	fd
op	50:15	0:0	6	>=
water	50:18	0:0	6	0
stmts	51:12	51:21	5	
call	51:12	51:20	6	close
arg	51:18	51:20	7	fd
water	51:18	0:0	8	fd
water	51:21	0:0	6	;
if	52:8	53:22	4	(ret < 0)
cond	52:12	52:18	5	ret < 0
water	52:12	0:0	6	ret
op	52:16	0:0	6	<
water	52:18	0:0	6	0
stmts	53:12	53:22	5	
return	53:12	53:22	6	ret
water	53:19	0:0	7	ret
water	54:4	0:0	4	}
return	55:4	55:12	2	0
water	55:11	0:0	3	0

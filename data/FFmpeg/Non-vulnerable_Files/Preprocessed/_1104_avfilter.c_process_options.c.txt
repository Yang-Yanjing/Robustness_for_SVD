func	1:0	69:0	0	static int	process_options
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
param	1:49	1:71	2	AVDictionary * *	options
param	2:27	2:43	2	const char *	args
stmnts	0:0	68:16	1	
decl	4:4	4:28	2	const AVOption	*o
op	4:22	0:0	2	=
water	4:24	0:0	2	NULL
decl	5:4	5:22	2	int	ret
water	5:11	0:0	2	,
decl	5:4	5:22	2	int	count
op	5:19	0:0	2	=
water	5:21	0:0	2	0
decl	6:4	6:50	2	char	*av_uninit
water	6:19	0:0	2	(
water	6:20	0:0	2	parsed_key
water	6:30	0:0	2	)
water	6:31	0:0	2	,
decl	6:4	6:50	2	char	*av_uninit
water	6:43	0:0	2	(
water	6:44	0:0	2	value
water	6:49	0:0	2	)
decl	7:4	7:19	2	const char	*key
decl	8:4	8:18	2	int	offset
op	8:14	0:0	2	=
op	8:16	0:0	2	-
water	8:17	0:0	2	1
if	9:4	10:16	2	(! args)
cond	9:8	9:9	3	! args
op	9:8	0:0	4	!
water	9:9	0:0	4	args
stmts	10:8	10:16	3	
return	10:8	10:16	4	0
water	10:15	0:0	5	0
while	11:4	62:4	2	(* args)
cond	11:11	11:12	3	* args
op	11:11	0:0	4	*
water	11:12	0:0	4	args
stmts	11:18	62:4	3	
water	11:18	0:0	4	{
decl	12:8	12:36	4	const char	*shorthand
op	12:30	0:0	4	=
water	12:32	0:0	4	NULL
water	13:8	0:0	4	o
op	13:10	0:0	4	=
call	13:12	13:36	4	av_opt_next
arg	13:24	13:33	5	ctx->priv
water	13:24	0:0	6	ctx
op	13:27	0:0	6	->
water	13:29	0:0	6	priv
arg	13:35	13:36	5	o
water	13:35	0:0	6	o
water	13:37	0:0	4	;
if	14:8	19:8	4	(o)
cond	14:12	14:12	5	o
water	14:12	0:0	6	o
stmts	14:15	19:8	5	
water	14:15	0:0	6	{
if	15:12	16:24	6	(o -> type == AV_OPT_TYPE_CONST || o -> offset == offset)
cond	15:16	15:61	7	o -> type == AV_OPT_TYPE_CONST || o -> offset == offset
water	15:16	0:0	8	o
op	15:17	0:0	8	->
water	15:19	0:0	8	type
op	15:24	0:0	8	==
water	15:27	0:0	8	AV_OPT_TYPE_CONST
op	15:45	0:0	8	||
water	15:48	0:0	8	o
op	15:49	0:0	8	->
water	15:51	0:0	8	offset
op	15:58	0:0	8	==
water	15:61	0:0	8	offset
stmts	16:16	16:24	7	
continue	16:16	16:24	8	
water	17:12	0:0	6	offset
op	17:19	0:0	6	=
water	17:21	0:0	6	o
op	17:22	0:0	6	->
water	17:24	0:0	6	offset
water	17:30	0:0	6	;
water	18:12	0:0	6	shorthand
op	18:22	0:0	6	=
water	18:24	0:0	6	o
op	18:25	0:0	6	->
water	18:27	0:0	6	name
water	18:31	0:0	6	;
water	19:8	0:0	6	}
water	20:8	0:0	4	ret
op	20:12	0:0	4	=
call	20:14	22:54	4	av_opt_get_key_value
arg	20:35	20:40	5	&args
op	20:35	0:0	6	&
water	20:36	0:0	6	args
arg	20:42	20:45	5	"="
water	20:42	0:0	6	"="
arg	20:47	20:50	5	":"
water	20:47	0:0	6	":"
arg	21:35	21:75	5	shorthand?AV_OPT_FLAG_IMPLICIT_KEY:0
water	21:35	0:0	6	shorthand
water	21:45	0:0	6	?
water	21:47	0:0	6	AV_OPT_FLAG_IMPLICIT_KEY
water	21:72	0:0	6	:
water	21:74	0:0	6	0
arg	22:35	22:46	5	&parsed_key
op	22:35	0:0	6	&
water	22:36	0:0	6	parsed_key
arg	22:48	22:54	5	&value
op	22:48	0:0	6	&
water	22:49	0:0	6	value
water	22:55	0:0	4	;
if	23:8	30:8	4	(ret < 0)
cond	23:12	23:18	5	ret < 0
water	23:12	0:0	6	ret
op	23:16	0:0	6	<
water	23:18	0:0	6	0
stmts	23:21	30:8	5	
water	23:21	0:0	6	{
if	24:12	25:77	6	(ret ==AVERROR (EINVAL ))
cond	24:16	24:37	7	ret ==AVERROR (EINVAL )
water	24:16	0:0	8	ret
op	24:20	0:0	8	==
call	24:23	24:37	8	AVERROR
arg	24:31	24:37	9	EINVAL
water	24:31	0:0	10	EINVAL
stmts	25:16	25:77	7	
call	25:16	25:76	8	av_log
arg	25:23	25:26	9	ctx
water	25:23	0:0	10	ctx
arg	25:28	25:40	9	AV_LOG_ERROR
water	25:28	0:0	10	AV_LOG_ERROR
arg	25:42	25:70	9	"No option name near '%s'\n"
water	25:42	0:0	10	"No option name near '%s'\n"
arg	25:72	25:76	9	args
water	25:72	0:0	10	args
water	25:77	0:0	8	;
else	26:12	28:39	6
stmts	27:16	28:39	7	
call	27:16	28:38	8	av_log
arg	27:23	27:26	9	ctx
water	27:23	0:0	10	ctx
arg	27:28	27:40	9	AV_LOG_ERROR
water	27:28	0:0	10	AV_LOG_ERROR
arg	27:42	27:70	9	"Unable to parse '%s': %s\n"
water	27:42	0:0	10	"Unable to parse '%s': %s\n"
arg	27:72	27:76	9	args
water	27:72	0:0	10	args
arg	28:23	28:38	9	av_err2str(ret)
call	28:23	28:37	10	av_err2str
arg	28:34	28:37	11	ret
water	28:34	0:0	12	ret
water	28:39	0:0	8	;
return	29:12	29:22	6	ret
water	29:19	0:0	7	ret
water	30:8	0:0	6	}
if	31:8	32:18	4	(* args)
cond	31:12	31:13	5	* args
op	31:12	0:0	6	*
water	31:13	0:0	6	args
stmts	32:12	32:18	5	
water	32:12	0:0	6	args
op	32:16	0:0	6	++
water	32:18	0:0	6	;
if	33:8	36:8	4	(parsed_key)
cond	33:12	33:12	5	parsed_key
water	33:12	0:0	6	parsed_key
stmts	33:24	36:8	5	
water	33:24	0:0	6	{
water	34:12	0:0	6	key
op	34:16	0:0	6	=
water	34:18	0:0	6	parsed_key
water	34:28	0:0	6	;
while	35:12	35:51	6	(( o =av_opt_next (ctx -> priv ,o ) ))
cond	35:19	35:49	7	( o =av_opt_next (ctx -> priv ,o ) )
water	35:19	0:0	8	(
water	35:20	0:0	8	o
op	35:22	0:0	8	=
call	35:24	35:48	8	av_opt_next
arg	35:36	35:45	9	ctx->priv
water	35:36	0:0	10	ctx
op	35:39	0:0	10	->
water	35:41	0:0	10	priv
arg	35:47	35:48	9	o
water	35:47	0:0	10	o
water	35:49	0:0	8	)
stmts	35:51	35:51	7	
water	35:51	0:0	8	;
water	36:8	0:0	6	}
else	36:10	38:8	4
stmts	36:15	38:8	5	
water	36:15	0:0	6	{
water	37:12	0:0	6	key
op	37:16	0:0	6	=
water	37:18	0:0	6	shorthand
water	37:27	0:0	6	;
water	38:8	0:0	6	}
call	39:8	39:76	4	av_log
arg	39:15	39:18	5	ctx
water	39:15	0:0	6	ctx
arg	39:20	39:32	5	AV_LOG_DEBUG
water	39:20	0:0	6	AV_LOG_DEBUG
arg	39:34	39:64	5	"Setting '%s' to value '%s'\n"
water	39:34	0:0	6	"Setting '%s' to value '%s'\n"
arg	39:66	39:69	5	key
water	39:66	0:0	6	key
arg	39:71	39:76	5	value
water	39:71	0:0	6	value
water	39:77	0:0	4	;
if	40:8	47:8	4	(av_opt_find (ctx ,key ,NULL ,0 ,0 ))
cond	40:12	40:44	5	av_opt_find (ctx ,key ,NULL ,0 ,0 )
call	40:12	40:44	6	av_opt_find
arg	40:24	40:27	7	ctx
water	40:24	0:0	8	ctx
arg	40:29	40:32	7	key
water	40:29	0:0	8	key
arg	40:34	40:38	7	NULL
water	40:34	0:0	8	NULL
arg	40:40	40:41	7	0
water	40:40	0:0	8	0
arg	40:43	40:44	7	0
water	40:43	0:0	8	0
stmts	40:47	47:8	5	
water	40:47	0:0	6	{
water	41:12	0:0	6	ret
op	41:16	0:0	6	=
call	41:18	41:47	6	av_opt_set
arg	41:29	41:32	7	ctx
water	41:29	0:0	8	ctx
arg	41:34	41:37	7	key
water	41:34	0:0	8	key
arg	41:39	41:44	7	value
water	41:39	0:0	8	value
arg	41:46	41:47	7	0
water	41:46	0:0	8	0
water	41:48	0:0	6	;
if	42:12	46:12	6	(ret < 0)
cond	42:16	42:22	7	ret < 0
water	42:16	0:0	8	ret
op	42:20	0:0	8	<
water	42:22	0:0	8	0
stmts	42:25	46:12	7	
water	42:25	0:0	8	{
call	43:16	43:29	8	av_free
arg	43:24	43:29	9	value
water	43:24	0:0	10	value
water	43:30	0:0	8	;
call	44:16	44:34	8	av_free
arg	44:24	44:34	9	parsed_key
water	44:24	0:0	10	parsed_key
water	44:35	0:0	8	;
return	45:16	45:26	8	ret
water	45:23	0:0	9	ret
water	46:12	0:0	8	}
water	47:8	0:0	6	}
else	47:10	58:8	4
stmts	47:15	58:8	5	
water	47:15	0:0	6	{
call	48:8	48:42	6	av_dict_set
arg	48:20	48:27	7	options
water	48:20	0:0	8	options
arg	48:29	48:32	7	key
water	48:29	0:0	8	key
arg	48:34	48:39	7	value
water	48:34	0:0	8	value
arg	48:41	48:42	7	0
water	48:41	0:0	8	0
water	48:43	0:0	6	;
if	49:8	57:8	6	(( ret =av_opt_set (ctx -> priv ,key ,value ,0 ) ) < 0)
cond	49:12	49:59	7	( ret =av_opt_set (ctx -> priv ,key ,value ,0 ) ) < 0
water	49:12	0:0	8	(
water	49:13	0:0	8	ret
op	49:17	0:0	8	=
call	49:19	49:54	8	av_opt_set
arg	49:30	49:39	9	ctx->priv
water	49:30	0:0	10	ctx
op	49:33	0:0	10	->
water	49:35	0:0	10	priv
arg	49:41	49:44	9	key
water	49:41	0:0	10	key
arg	49:46	49:51	9	value
water	49:46	0:0	10	value
arg	49:53	49:54	9	0
water	49:53	0:0	10	0
water	49:55	0:0	8	)
op	49:57	0:0	8	<
water	49:59	0:0	8	0
stmts	49:62	57:8	7	
water	49:62	0:0	8	{
if	50:12	56:12	8	(!av_opt_find (ctx -> priv ,key ,NULL ,0 ,AV_OPT_SEARCH_CHILDREN | AV_OPT_SEARCH_FAKE_OBJ ))
cond	50:16	50:101	9	!av_opt_find (ctx -> priv ,key ,NULL ,0 ,AV_OPT_SEARCH_CHILDREN | AV_OPT_SEARCH_FAKE_OBJ )
op	50:16	0:0	10	!
call	50:17	50:101	10	av_opt_find
arg	50:29	50:38	11	ctx->priv
water	50:29	0:0	12	ctx
op	50:32	0:0	12	->
water	50:34	0:0	12	priv
arg	50:40	50:43	11	key
water	50:40	0:0	12	key
arg	50:45	50:49	11	NULL
water	50:45	0:0	12	NULL
arg	50:51	50:52	11	0
water	50:51	0:0	12	0
arg	50:54	50:101	11	AV_OPT_SEARCH_CHILDREN|AV_OPT_SEARCH_FAKE_OBJ
water	50:54	0:0	12	AV_OPT_SEARCH_CHILDREN
op	50:77	0:0	12	|
water	50:79	0:0	12	AV_OPT_SEARCH_FAKE_OBJ
stmts	50:104	56:12	9	
water	50:104	0:0	10	{
if	51:12	52:73	10	(ret == AVERROR_OPTION_NOT_FOUND)
cond	51:16	51:23	11	ret == AVERROR_OPTION_NOT_FOUND
water	51:16	0:0	12	ret
op	51:20	0:0	12	==
water	51:23	0:0	12	AVERROR_OPTION_NOT_FOUND
stmts	52:16	52:73	11	
call	52:16	52:72	12	av_log
arg	52:23	52:26	13	ctx
water	52:23	0:0	14	ctx
arg	52:28	52:40	13	AV_LOG_ERROR
water	52:28	0:0	14	AV_LOG_ERROR
arg	52:42	52:67	13	"Option '%s' not found\n"
water	52:42	0:0	14	"Option '%s' not found\n"
arg	52:69	52:72	13	key
water	52:69	0:0	14	key
water	52:73	0:0	12	;
call	53:12	53:25	10	av_free
arg	53:20	53:25	11	value
water	53:20	0:0	12	value
water	53:26	0:0	10	;
call	54:12	54:30	10	av_free
arg	54:20	54:30	11	parsed_key
water	54:20	0:0	12	parsed_key
water	54:31	0:0	10	;
return	55:12	55:22	10	ret
water	55:19	0:0	11	ret
water	56:12	0:0	10	}
water	57:8	0:0	8	}
water	58:8	0:0	6	}
call	59:8	59:21	4	av_free
arg	59:16	59:21	5	value
water	59:16	0:0	6	value
water	59:22	0:0	4	;
call	60:8	60:26	4	av_free
arg	60:16	60:26	5	parsed_key
water	60:16	0:0	6	parsed_key
water	60:27	0:0	4	;
water	61:8	0:0	4	count
op	61:13	0:0	4	++
water	61:15	0:0	4	;
water	62:4	0:0	4	}
if	63:4	67:4	2	(ctx -> enable_str)
cond	63:8	63:13	3	ctx -> enable_str
water	63:8	0:0	4	ctx
op	63:11	0:0	4	->
water	63:13	0:0	4	enable_str
stmts	63:25	67:4	3	
water	63:25	0:0	4	{
water	64:8	0:0	4	ret
op	64:12	0:0	4	=
call	64:14	64:50	4	set_enable_expr
arg	64:30	64:33	5	ctx
water	64:30	0:0	6	ctx
arg	64:35	64:50	5	ctx->enable_str
water	64:35	0:0	6	ctx
op	64:38	0:0	6	->
water	64:40	0:0	6	enable_str
water	64:51	0:0	4	;
if	65:8	66:22	4	(ret < 0)
cond	65:12	65:18	5	ret < 0
water	65:12	0:0	6	ret
op	65:16	0:0	6	<
water	65:18	0:0	6	0
stmts	66:12	66:22	5	
return	66:12	66:22	6	ret
water	66:19	0:0	7	ret
water	67:4	0:0	4	}
return	68:4	68:16	2	count
water	68:11	0:0	3	count

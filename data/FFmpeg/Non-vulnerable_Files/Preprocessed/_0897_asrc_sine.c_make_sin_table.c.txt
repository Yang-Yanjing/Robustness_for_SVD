func	1:0	38:0	0	static void	make_sin_table
params	1:26	0:0	1	
param	1:27	1:39	2	int16_t *	sin
stmnts	3:4	37:38	1	
water	3:4	0:0	2	unsigned
water	3:13	0:0	2	half_pi
op	3:21	0:0	2	=
water	3:23	0:0	2	1
op	3:25	0:0	2	<<
water	3:28	0:0	2	(
water	3:29	0:0	2	LOG_PERIOD
op	3:40	0:0	2	-
water	3:42	0:0	2	2
water	3:43	0:0	2	)
water	3:44	0:0	2	;
water	4:4	0:0	2	unsigned
water	4:13	0:0	2	ampls
op	4:19	0:0	2	=
water	4:21	0:0	2	AMPLITUDE
op	4:31	0:0	2	<<
water	4:34	0:0	2	AMPLITUDE_SHIFT
water	4:49	0:0	2	;
decl	5:4	5:52	2	uint64_t	unit2
op	5:19	0:0	2	=
call	5:21	5:45	3	(uint64_t)
arg	5:32	5:45	4	ampls*ampls
water	5:32	0:0	5	ampls
op	5:38	0:0	5	*
water	5:40	0:0	5	ampls
op	5:47	0:0	2	<<
water	5:50	0:0	2	32
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	step
water	6:17	0:0	2	,
water	6:19	0:0	2	i
water	6:20	0:0	2	,
water	6:22	0:0	2	c
water	6:23	0:0	2	,
water	6:25	0:0	2	s
water	6:26	0:0	2	,
water	6:28	0:0	2	k
water	6:29	0:0	2	,
water	6:31	0:0	2	new_k
water	6:36	0:0	2	,
water	6:38	0:0	2	n2
water	6:40	0:0	2	;
water	9:4	0:0	2	sin
op	9:7	0:0	2	[
water	9:8	0:0	2	0
op	9:9	0:0	2	]
op	9:11	0:0	2	=
water	9:13	0:0	2	0
water	9:14	0:0	2	;
water	10:4	0:0	2	sin
op	10:7	0:0	2	[
water	10:8	0:0	2	half_pi
op	10:15	0:0	2	]
op	10:17	0:0	2	=
water	10:19	0:0	2	ampls
water	10:24	0:0	2	;
for	11:4	29:4	2	(step = half_pi ;step > 1;step /= 2)
forinit	11:9	11:23	3	step = half_pi ;
water	11:9	0:0	4	step
op	11:14	0:0	4	=
water	11:16	0:0	4	half_pi
water	11:23	0:0	4	;
cond	11:25	11:32	3	step > 1
water	11:25	0:0	4	step
op	11:30	0:0	4	>
water	11:32	0:0	4	1
forexpr	11:35	11:43	3	step /= 2
water	11:35	0:0	4	step
op	11:40	0:0	4	/=
water	11:43	0:0	4	2
stmts	11:46	29:4	3	
water	11:46	0:0	4	{
water	14:8	0:0	4	k
op	14:10	0:0	4	=
water	14:12	0:0	4	0
water	14:13	0:0	4	x10000
water	14:19	0:0	4	;
for	15:8	28:8	4	(i = 0 ;i < half_pi / 2;i += step)
forinit	15:13	15:18	5	i = 0 ;
water	15:13	0:0	6	i
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:34	5	i < half_pi / 2
water	15:20	0:0	6	i
op	15:22	0:0	6	<
water	15:24	0:0	6	half_pi
op	15:32	0:0	6	/
water	15:34	0:0	6	2
forexpr	15:37	15:42	5	i += step
water	15:37	0:0	6	i
op	15:39	0:0	6	+=
water	15:42	0:0	6	step
stmts	15:48	28:8	5	
water	15:48	0:0	6	{
water	16:12	0:0	6	s
op	16:14	0:0	6	=
water	16:16	0:0	6	sin
op	16:19	0:0	6	[
water	16:20	0:0	6	i
op	16:21	0:0	6	]
op	16:23	0:0	6	+
water	16:25	0:0	6	sin
op	16:28	0:0	6	[
water	16:29	0:0	6	i
op	16:31	0:0	6	+
water	16:33	0:0	6	step
op	16:37	0:0	6	]
water	16:38	0:0	6	;
water	17:12	0:0	6	c
op	17:14	0:0	6	=
water	17:16	0:0	6	sin
op	17:19	0:0	6	[
water	17:20	0:0	6	half_pi
op	17:28	0:0	6	-
water	17:30	0:0	6	i
op	17:31	0:0	6	]
op	17:33	0:0	6	+
water	17:35	0:0	6	sin
op	17:38	0:0	6	[
water	17:39	0:0	6	half_pi
op	17:47	0:0	6	-
water	17:49	0:0	6	i
op	17:51	0:0	6	-
water	17:53	0:0	6	step
op	17:57	0:0	6	]
water	17:58	0:0	6	;
water	18:12	0:0	6	n2
op	18:15	0:0	6	=
water	18:17	0:0	6	s
op	18:19	0:0	6	*
water	18:21	0:0	6	s
op	18:23	0:0	6	+
water	18:25	0:0	6	c
op	18:27	0:0	6	*
water	18:29	0:0	6	c
water	18:30	0:0	6	;
while	20:12	25:12	6	(1)
cond	20:19	20:19	7	1
water	20:19	0:0	8	1
stmts	20:22	25:12	7	
water	20:22	0:0	8	{
water	21:16	0:0	8	new_k
op	21:22	0:0	8	=
water	21:24	0:0	8	(
water	21:25	0:0	8	k
op	21:27	0:0	8	+
water	21:29	0:0	8	unit2
op	21:35	0:0	8	/
water	21:37	0:0	8	(
water	21:38	0:0	8	(
water	21:39	0:0	8	uint64_t
water	21:47	0:0	8	)
water	21:48	0:0	8	k
op	21:50	0:0	8	*
water	21:52	0:0	8	n2
water	21:54	0:0	8	)
op	21:56	0:0	8	+
water	21:58	0:0	8	1
water	21:59	0:0	8	)
op	21:61	0:0	8	>>
water	21:64	0:0	8	1
water	21:65	0:0	8	;
if	22:16	23:25	8	(k == new_k)
cond	22:20	22:25	9	k == new_k
water	22:20	0:0	10	k
op	22:22	0:0	10	==
water	22:25	0:0	10	new_k
stmts	23:20	23:25	9	
break	23:20	23:25	10	
water	24:16	0:0	8	k
op	24:18	0:0	8	=
water	24:20	0:0	8	new_k
water	24:25	0:0	8	;
water	25:12	0:0	8	}
water	26:12	0:0	6	sin
op	26:15	0:0	6	[
water	26:16	0:0	6	i
op	26:18	0:0	6	+
water	26:20	0:0	6	step
op	26:25	0:0	6	/
water	26:27	0:0	6	2
op	26:28	0:0	6	]
op	26:30	0:0	6	=
water	26:32	0:0	6	(
water	26:33	0:0	6	k
op	26:35	0:0	6	*
water	26:37	0:0	6	s
op	26:39	0:0	6	+
water	26:41	0:0	6	0
water	26:42	0:0	6	x7FFF
water	26:47	0:0	6	)
op	26:49	0:0	6	>>
water	26:52	0:0	6	16
water	26:54	0:0	6	;
water	27:12	0:0	6	sin
op	27:15	0:0	6	[
water	27:16	0:0	6	half_pi
op	27:24	0:0	6	-
water	27:26	0:0	6	i
op	27:28	0:0	6	-
water	27:30	0:0	6	step
op	27:35	0:0	6	/
water	27:37	0:0	6	2
op	27:38	0:0	6	]
op	27:40	0:0	6	=
water	27:42	0:0	6	(
water	27:43	0:0	6	k
op	27:45	0:0	6	*
water	27:47	0:0	6	c
op	27:49	0:0	6	+
water	27:51	0:0	6	0
water	27:52	0:0	6	x8000
water	27:57	0:0	6	)
op	27:59	0:0	6	>>
water	27:62	0:0	6	16
water	27:64	0:0	6	;
water	28:8	0:0	6	}
water	29:4	0:0	4	}
for	31:4	32:75	2	(i = 0 ;i <= half_pi;i ++)
forinit	31:9	31:14	3	i = 0 ;
water	31:9	0:0	4	i
op	31:11	0:0	4	=
water	31:13	0:0	4	0
water	31:14	0:0	4	;
cond	31:16	31:21	3	i <= half_pi
water	31:16	0:0	4	i
op	31:18	0:0	4	<=
water	31:21	0:0	4	half_pi
forexpr	31:30	31:31	3	i ++
water	31:30	0:0	4	i
op	31:31	0:0	4	++
stmts	32:8	32:75	3	
water	32:8	0:0	4	sin
op	32:11	0:0	4	[
water	32:12	0:0	4	i
op	32:13	0:0	4	]
op	32:15	0:0	4	=
water	32:17	0:0	4	(
water	32:18	0:0	4	sin
op	32:21	0:0	4	[
water	32:22	0:0	4	i
op	32:23	0:0	4	]
op	32:25	0:0	4	+
water	32:27	0:0	4	(
water	32:28	0:0	4	1
op	32:30	0:0	4	<<
water	32:33	0:0	4	(
water	32:34	0:0	4	AMPLITUDE_SHIFT
op	32:50	0:0	4	-
water	32:52	0:0	4	1
water	32:53	0:0	4	)
water	32:54	0:0	4	)
water	32:55	0:0	4	)
op	32:57	0:0	4	>>
water	32:60	0:0	4	AMPLITUDE_SHIFT
water	32:75	0:0	4	;
for	34:4	35:37	2	(i = 0 ;i < half_pi;i ++)
forinit	34:9	34:14	3	i = 0 ;
water	34:9	0:0	4	i
op	34:11	0:0	4	=
water	34:13	0:0	4	0
water	34:14	0:0	4	;
cond	34:16	34:20	3	i < half_pi
water	34:16	0:0	4	i
op	34:18	0:0	4	<
water	34:20	0:0	4	half_pi
forexpr	34:29	34:30	3	i ++
water	34:29	0:0	4	i
op	34:30	0:0	4	++
stmts	35:8	35:37	3	
water	35:8	0:0	4	sin
op	35:11	0:0	4	[
water	35:12	0:0	4	half_pi
op	35:20	0:0	4	*
water	35:22	0:0	4	2
op	35:24	0:0	4	-
water	35:26	0:0	4	i
op	35:27	0:0	4	]
op	35:29	0:0	4	=
water	35:31	0:0	4	sin
op	35:34	0:0	4	[
water	35:35	0:0	4	i
op	35:36	0:0	4	]
water	35:37	0:0	4	;
for	36:4	37:38	2	(i = 0 ;i < 2 * half_pi;i ++)
forinit	36:9	36:14	3	i = 0 ;
water	36:9	0:0	4	i
op	36:11	0:0	4	=
water	36:13	0:0	4	0
water	36:14	0:0	4	;
cond	36:16	36:24	3	i < 2 * half_pi
water	36:16	0:0	4	i
op	36:18	0:0	4	<
water	36:20	0:0	4	2
op	36:22	0:0	4	*
water	36:24	0:0	4	half_pi
forexpr	36:33	36:34	3	i ++
water	36:33	0:0	4	i
op	36:34	0:0	4	++
stmts	37:8	37:38	3	
water	37:8	0:0	4	sin
op	37:11	0:0	4	[
water	37:12	0:0	4	i
op	37:14	0:0	4	+
water	37:16	0:0	4	2
op	37:18	0:0	4	*
water	37:20	0:0	4	half_pi
op	37:27	0:0	4	]
op	37:29	0:0	4	=
op	37:31	0:0	4	-
water	37:32	0:0	4	sin
op	37:35	0:0	4	[
water	37:36	0:0	4	i
op	37:37	0:0	4	]
water	37:38	0:0	4	;

func	1:0	22:0	0	static int	write_chapter
params	1:24	0:0	1	
param	1:25	1:40	2	NUTContext *	nut
param	1:42	1:57	2	AVIOContext *	bc
param	1:59	1:65	2	int	id
stmnts	0:0	21:12	1	
decl	3:4	3:23	2	AVIOContext	*dyn_bc
decl	4:4	4:31	2	uint8_t	*dyn_buf
op	4:25	0:0	2	=
water	4:27	0:0	2	NULL
decl	5:4	5:31	2	AVDictionaryEntry	*t
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:4	6:49	2	AVChapter	*ch
op	6:25	0:0	2	=
water	6:27	0:0	2	nut
op	6:30	0:0	2	->
water	6:32	0:0	2	avf
op	6:35	0:0	2	->
water	6:37	0:0	2	chapters
op	6:45	0:0	2	[
water	6:46	0:0	2	id
op	6:48	0:0	2	]
decl	7:4	7:32	2	int	ret
water	7:11	0:0	2	,
decl	7:4	7:32	2	int	dyn_size
water	7:21	0:0	2	,
decl	7:4	7:32	2	int	count
op	7:29	0:0	2	=
water	7:31	0:0	2	0
water	8:4	0:0	2	ret
op	8:8	0:0	2	=
call	8:10	8:35	2	avio_open_dyn_buf
arg	8:28	8:35	3	&dyn_bc
op	8:28	0:0	4	&
water	8:29	0:0	4	dyn_bc
water	8:36	0:0	2	;
if	9:4	10:18	2	(ret < 0)
cond	9:8	9:14	3	ret < 0
water	9:8	0:0	4	ret
op	9:12	0:0	4	<
water	9:14	0:0	4	0
stmts	10:8	10:18	3	
return	10:8	10:18	4	ret
water	10:15	0:0	5	ret
call	11:4	11:18	2	ff_put_v
arg	11:13	11:15	3	bc
water	11:13	0:0	4	bc
arg	11:17	11:18	3	0
water	11:17	0:0	4	0
water	11:19	0:0	2	;
call	12:4	12:20	2	put_s
arg	12:10	12:12	3	bc
water	12:10	0:0	4	bc
arg	12:14	12:20	3	id+1
water	12:14	0:0	4	id
op	12:17	0:0	4	+
water	12:19	0:0	4	1
water	12:21	0:0	2	;
call	13:4	13:57	2	put_tt
arg	13:11	13:14	3	nut
water	13:11	0:0	4	nut
arg	13:16	13:42	3	nut->chapter[id].time_base
water	13:16	0:0	4	nut
op	13:19	0:0	4	->
water	13:21	0:0	4	chapter
op	13:28	0:0	4	[
water	13:29	0:0	4	id
op	13:31	0:0	4	]
op	13:32	0:0	4	.
water	13:33	0:0	4	time_base
arg	13:44	13:46	3	bc
water	13:44	0:0	4	bc
arg	13:48	13:57	3	ch->start
water	13:48	0:0	4	ch
op	13:50	0:0	4	->
water	13:52	0:0	4	start
water	13:58	0:0	2	;
call	14:4	14:36	2	ff_put_v
arg	14:13	14:15	3	bc
water	14:13	0:0	4	bc
arg	14:17	14:36	3	ch->end-ch->start
water	14:17	0:0	4	ch
op	14:19	0:0	4	->
water	14:21	0:0	4	end
op	14:25	0:0	4	-
water	14:27	0:0	4	ch
op	14:29	0:0	4	->
water	14:31	0:0	4	start
water	14:37	0:0	2	;
while	15:4	16:51	2	(( t =av_dict_get (ch -> metadata ,"" ,t ,AV_DICT_IGNORE_SUFFIX ) ))
cond	15:11	15:71	3	( t =av_dict_get (ch -> metadata ,"" ,t ,AV_DICT_IGNORE_SUFFIX ) )
water	15:11	0:0	4	(
water	15:12	0:0	4	t
op	15:14	0:0	4	=
call	15:16	15:70	4	av_dict_get
arg	15:28	15:40	5	ch->metadata
water	15:28	0:0	6	ch
op	15:30	0:0	6	->
water	15:32	0:0	6	metadata
arg	15:42	15:44	5	""
water	15:42	0:0	6	""
arg	15:46	15:47	5	t
water	15:46	0:0	6	t
arg	15:49	15:70	5	AV_DICT_IGNORE_SUFFIX
water	15:49	0:0	6	AV_DICT_IGNORE_SUFFIX
water	15:71	0:0	4	)
stmts	16:8	16:51	3	
water	16:8	0:0	4	count
op	16:14	0:0	4	+=
call	16:17	16:50	4	add_info
arg	16:26	16:32	5	dyn_bc
water	16:26	0:0	6	dyn_bc
arg	16:34	16:40	5	t->key
water	16:34	0:0	6	t
op	16:35	0:0	6	->
water	16:37	0:0	6	key
arg	16:42	16:50	5	t->value
water	16:42	0:0	6	t
op	16:43	0:0	6	->
water	16:45	0:0	6	value
water	16:51	0:0	4	;
call	17:4	17:22	2	ff_put_v
arg	17:13	17:15	3	bc
water	17:13	0:0	4	bc
arg	17:17	17:22	3	count
water	17:17	0:0	4	count
water	17:23	0:0	2	;
water	18:4	0:0	2	dyn_size
op	18:13	0:0	2	=
call	18:15	18:50	2	avio_close_dyn_buf
arg	18:34	18:40	3	dyn_bc
water	18:34	0:0	4	dyn_bc
arg	18:42	18:50	3	&dyn_buf
op	18:42	0:0	4	&
water	18:43	0:0	4	dyn_buf
water	18:51	0:0	2	;
call	19:4	19:36	2	avio_write
arg	19:15	19:17	3	bc
water	19:15	0:0	4	bc
arg	19:19	19:26	3	dyn_buf
water	19:19	0:0	4	dyn_buf
arg	19:28	19:36	3	dyn_size
water	19:28	0:0	4	dyn_size
water	19:37	0:0	2	;
call	20:4	20:21	2	av_freep
arg	20:13	20:21	3	&dyn_buf
op	20:13	0:0	4	&
water	20:14	0:0	4	dyn_buf
water	20:22	0:0	2	;
return	21:4	21:12	2	0
water	21:11	0:0	3	0

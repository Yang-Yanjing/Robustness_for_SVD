func	1:0	112:0	0	int	ff_opencl_apply_unsharp
params	1:27	0:0	1	
param	1:28	1:48	2	AVFilterContext *	ctx
param	1:50	1:61	2	AVFrame *	in
param	1:63	1:75	2	AVFrame *	out
stmnts	0:0	111:74	1	
decl	3:4	3:11	2	int	ret
decl	4:4	4:39	2	AVFilterLink	*link
op	4:23	0:0	2	=
water	4:25	0:0	2	ctx
op	4:28	0:0	2	->
water	4:30	0:0	2	inputs
op	4:36	0:0	2	[
water	4:37	0:0	2	0
op	4:38	0:0	2	]
decl	5:4	5:39	2	UnsharpContext	*unsharp
op	5:28	0:0	2	=
water	5:30	0:0	2	ctx
op	5:33	0:0	2	->
water	5:35	0:0	2	priv
decl	6:4	6:17	2	cl_int	status
decl	7:4	7:31	2	FFOpenclParam	kernel1
op	7:26	0:0	2	=
water	7:28	0:0	2	{
water	7:29	0:0	2	0
water	7:30	0:0	2	}
decl	8:4	8:31	2	FFOpenclParam	kernel2
op	8:26	0:0	2	=
water	8:28	0:0	2	{
water	8:29	0:0	2	0
water	8:30	0:0	2	}
decl	9:4	9:23	2	int	width
op	9:14	0:0	2	=
water	9:16	0:0	2	link
op	9:20	0:0	2	->
water	9:22	0:0	2	w
decl	10:4	10:24	2	int	height
op	10:15	0:0	2	=
water	10:17	0:0	2	link
op	10:21	0:0	2	->
water	10:23	0:0	2	h
decl	11:4	11:51	2	int	cw
op	11:11	0:0	2	=
call	11:13	11:50	3	FF_CEIL_RSHIFT
arg	11:28	11:35	4	link->w
water	11:28	0:0	5	link
op	11:32	0:0	5	->
water	11:34	0:0	5	w
arg	11:37	11:50	4	unsharp->hsub
water	11:37	0:0	5	unsharp
op	11:44	0:0	5	->
water	11:46	0:0	5	hsub
decl	12:4	12:51	2	int	ch
op	12:11	0:0	2	=
call	12:13	12:50	3	FF_CEIL_RSHIFT
arg	12:28	12:35	4	link->h
water	12:28	0:0	5	link
op	12:32	0:0	5	->
water	12:34	0:0	5	h
arg	12:37	12:50	4	unsharp->vsub
water	12:37	0:0	5	unsharp
op	12:44	0:0	5	->
water	12:46	0:0	5	vsub
decl	13:4	13:58	2	size_t	globalWorkSize1d
op	13:28	0:0	2	=
water	13:30	0:0	2	width
op	13:36	0:0	2	*
water	13:38	0:0	2	height
op	13:45	0:0	2	+
water	13:47	0:0	2	2
op	13:49	0:0	2	*
water	13:51	0:0	2	ch
op	13:54	0:0	2	*
water	13:56	0:0	2	cw
decl	14:4	14:34	2	size_t	globalWorkSize2dLuma[2]
decl	15:4	15:36	2	size_t	globalWorkSize2dChroma[2]
decl	16:4	16:40	2	size_t	localWorkSize2d[2]
op	16:30	0:0	2	=
water	16:32	0:0	2	{
water	16:33	0:0	2	16
water	16:35	0:0	2	,
water	16:37	0:0	2	16
water	16:39	0:0	2	}
if	17:4	70:4	2	(unsharp -> opencl_ctx . use_fast_kernels)
cond	17:8	17:28	3	unsharp -> opencl_ctx . use_fast_kernels
water	17:8	0:0	4	unsharp
op	17:15	0:0	4	->
water	17:17	0:0	4	opencl_ctx
op	17:27	0:0	4	.
water	17:28	0:0	4	use_fast_kernels
stmts	17:46	70:4	3	
water	17:46	0:0	4	{
water	18:8	0:0	4	globalWorkSize2dLuma
op	18:28	0:0	4	[
water	18:29	0:0	4	0
op	18:30	0:0	4	]
op	18:32	0:0	4	=
water	18:34	0:0	4	(
water	18:35	0:0	4	size_t
water	18:41	0:0	4	)
call	18:42	18:59	4	ROUND_TO_16
arg	18:54	18:59	5	width
water	18:54	0:0	6	width
water	18:60	0:0	4	;
water	19:8	0:0	4	globalWorkSize2dLuma
op	19:28	0:0	4	[
water	19:29	0:0	4	1
op	19:30	0:0	4	]
op	19:32	0:0	4	=
water	19:34	0:0	4	(
water	19:35	0:0	4	size_t
water	19:41	0:0	4	)
call	19:42	19:60	4	ROUND_TO_16
arg	19:54	19:60	5	height
water	19:54	0:0	6	height
water	19:61	0:0	4	;
water	20:8	0:0	4	globalWorkSize2dChroma
op	20:30	0:0	4	[
water	20:31	0:0	4	0
op	20:32	0:0	4	]
op	20:34	0:0	4	=
water	20:36	0:0	4	(
water	20:37	0:0	4	size_t
water	20:43	0:0	4	)
call	20:44	20:58	4	ROUND_TO_16
arg	20:56	20:58	5	cw
water	20:56	0:0	6	cw
water	20:59	0:0	4	;
water	21:8	0:0	4	globalWorkSize2dChroma
op	21:30	0:0	4	[
water	21:31	0:0	4	1
op	21:32	0:0	4	]
op	21:34	0:0	4	=
call	21:36	21:62	4	(size_t)
arg	21:45	21:62	5	2*ROUND_TO_16(ch)
water	21:45	0:0	6	2
call	21:46	21:61	6	*ROUND_TO_16
arg	21:59	21:61	7	ch
water	21:59	0:0	8	ch
water	21:63	0:0	4	;
water	22:8	0:0	4	kernel1
op	22:15	0:0	4	.
water	22:16	0:0	4	ctx
op	22:20	0:0	4	=
water	22:22	0:0	4	ctx
water	22:25	0:0	4	;
water	23:8	0:0	4	kernel1
op	23:15	0:0	4	.
water	23:16	0:0	4	kernel
op	23:23	0:0	4	=
water	23:25	0:0	4	unsharp
op	23:32	0:0	4	->
water	23:34	0:0	4	opencl_ctx
op	23:44	0:0	4	.
water	23:45	0:0	4	kernel_luma
water	23:56	0:0	4	;
water	24:8	0:0	4	ret
op	24:12	0:0	4	=
call	24:14	36:42	4	avpriv_opencl_set_parameter
arg	24:42	24:50	5	&kernel1
op	24:42	0:0	6	&
water	24:43	0:0	6	kernel1
arg	25:38	25:88	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_inbuf)
call	25:38	25:87	6	FF_OPENCL_PARAM_INFO
arg	25:59	25:87	7	unsharp->opencl_ctx.cl_inbuf
water	25:59	0:0	8	unsharp
op	25:66	0:0	8	->
water	25:68	0:0	8	opencl_ctx
op	25:78	0:0	8	.
water	25:79	0:0	8	cl_inbuf
arg	26:38	26:89	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_outbuf)
call	26:38	26:88	6	FF_OPENCL_PARAM_INFO
arg	26:59	26:88	7	unsharp->opencl_ctx.cl_outbuf
water	26:59	0:0	8	unsharp
op	26:66	0:0	8	->
water	26:68	0:0	8	opencl_ctx
op	26:78	0:0	8	.
water	26:79	0:0	8	cl_outbuf
arg	27:38	27:94	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_luma_mask_x)
call	27:38	27:93	6	FF_OPENCL_PARAM_INFO
arg	27:59	27:93	7	unsharp->opencl_ctx.cl_luma_mask_x
water	27:59	0:0	8	unsharp
op	27:66	0:0	8	->
water	27:68	0:0	8	opencl_ctx
op	27:78	0:0	8	.
water	27:79	0:0	8	cl_luma_mask_x
arg	28:38	28:94	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_luma_mask_y)
call	28:38	28:93	6	FF_OPENCL_PARAM_INFO
arg	28:59	28:93	7	unsharp->opencl_ctx.cl_luma_mask_y
water	28:59	0:0	8	unsharp
op	28:66	0:0	8	->
water	28:68	0:0	8	opencl_ctx
op	28:78	0:0	8	.
water	28:79	0:0	8	cl_luma_mask_y
arg	29:38	29:80	5	FF_OPENCL_PARAM_INFO(unsharp->luma.amount)
call	29:38	29:79	6	FF_OPENCL_PARAM_INFO
arg	29:59	29:79	7	unsharp->luma.amount
water	29:59	0:0	8	unsharp
op	29:66	0:0	8	->
water	29:68	0:0	8	luma
op	29:72	0:0	8	.
water	29:73	0:0	8	amount
arg	30:38	30:83	5	FF_OPENCL_PARAM_INFO(unsharp->luma.scalebits)
call	30:38	30:82	6	FF_OPENCL_PARAM_INFO
arg	30:59	30:82	7	unsharp->luma.scalebits
water	30:59	0:0	8	unsharp
op	30:66	0:0	8	->
water	30:68	0:0	8	luma
op	30:72	0:0	8	.
water	30:73	0:0	8	scalebits
arg	31:38	31:83	5	FF_OPENCL_PARAM_INFO(unsharp->luma.halfscale)
call	31:38	31:82	6	FF_OPENCL_PARAM_INFO
arg	31:59	31:82	7	unsharp->luma.halfscale
water	31:59	0:0	8	unsharp
op	31:66	0:0	8	->
water	31:68	0:0	8	luma
op	31:72	0:0	8	.
water	31:73	0:0	8	halfscale
arg	32:38	32:75	5	FF_OPENCL_PARAM_INFO(in->linesize[0])
call	32:38	32:74	6	FF_OPENCL_PARAM_INFO
arg	32:59	32:74	7	in->linesize[0]
water	32:59	0:0	8	in
op	32:61	0:0	8	->
water	32:63	0:0	8	linesize
op	32:71	0:0	8	[
water	32:72	0:0	8	0
op	32:73	0:0	8	]
arg	33:38	33:76	5	FF_OPENCL_PARAM_INFO(out->linesize[0])
call	33:38	33:75	6	FF_OPENCL_PARAM_INFO
arg	33:59	33:75	7	out->linesize[0]
water	33:59	0:0	8	out
op	33:62	0:0	8	->
water	33:64	0:0	8	linesize
op	33:72	0:0	8	[
water	33:73	0:0	8	0
op	33:74	0:0	8	]
arg	34:38	34:65	5	FF_OPENCL_PARAM_INFO(width)
call	34:38	34:64	6	FF_OPENCL_PARAM_INFO
arg	34:59	34:64	7	width
water	34:59	0:0	8	width
arg	35:38	35:66	5	FF_OPENCL_PARAM_INFO(height)
call	35:38	35:65	6	FF_OPENCL_PARAM_INFO
arg	35:59	35:65	7	height
water	35:59	0:0	8	height
arg	36:38	36:42	5	NULL
water	36:38	0:0	6	NULL
water	36:43	0:0	4	;
if	37:8	38:22	4	(ret < 0)
cond	37:12	37:18	5	ret < 0
water	37:12	0:0	6	ret
op	37:16	0:0	6	<
water	37:18	0:0	6	0
stmts	38:12	38:22	5	
return	38:12	38:22	6	ret
water	38:19	0:0	7	ret
water	39:8	0:0	4	kernel2
op	39:15	0:0	4	.
water	39:16	0:0	4	ctx
op	39:20	0:0	4	=
water	39:22	0:0	4	ctx
water	39:25	0:0	4	;
water	40:8	0:0	4	kernel2
op	40:15	0:0	4	.
water	40:16	0:0	4	kernel
op	40:23	0:0	4	=
water	40:25	0:0	4	unsharp
op	40:32	0:0	4	->
water	40:34	0:0	4	opencl_ctx
op	40:44	0:0	4	.
water	40:45	0:0	4	kernel_chroma
water	40:58	0:0	4	;
water	41:8	0:0	4	ret
op	41:12	0:0	4	=
call	41:14	57:42	4	avpriv_opencl_set_parameter
arg	41:42	41:50	5	&kernel2
op	41:42	0:0	6	&
water	41:43	0:0	6	kernel2
arg	42:38	42:88	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_inbuf)
call	42:38	42:87	6	FF_OPENCL_PARAM_INFO
arg	42:59	42:87	7	unsharp->opencl_ctx.cl_inbuf
water	42:59	0:0	8	unsharp
op	42:66	0:0	8	->
water	42:68	0:0	8	opencl_ctx
op	42:78	0:0	8	.
water	42:79	0:0	8	cl_inbuf
arg	43:38	43:89	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_outbuf)
call	43:38	43:88	6	FF_OPENCL_PARAM_INFO
arg	43:59	43:88	7	unsharp->opencl_ctx.cl_outbuf
water	43:59	0:0	8	unsharp
op	43:66	0:0	8	->
water	43:68	0:0	8	opencl_ctx
op	43:78	0:0	8	.
water	43:79	0:0	8	cl_outbuf
arg	44:38	44:96	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_chroma_mask_x)
call	44:38	44:95	6	FF_OPENCL_PARAM_INFO
arg	44:59	44:95	7	unsharp->opencl_ctx.cl_chroma_mask_x
water	44:59	0:0	8	unsharp
op	44:66	0:0	8	->
water	44:68	0:0	8	opencl_ctx
op	44:78	0:0	8	.
water	44:79	0:0	8	cl_chroma_mask_x
arg	45:38	45:96	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_chroma_mask_y)
call	45:38	45:95	6	FF_OPENCL_PARAM_INFO
arg	45:59	45:95	7	unsharp->opencl_ctx.cl_chroma_mask_y
water	45:59	0:0	8	unsharp
op	45:66	0:0	8	->
water	45:68	0:0	8	opencl_ctx
op	45:78	0:0	8	.
water	45:79	0:0	8	cl_chroma_mask_y
arg	46:38	46:82	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.amount)
call	46:38	46:81	6	FF_OPENCL_PARAM_INFO
arg	46:59	46:81	7	unsharp->chroma.amount
water	46:59	0:0	8	unsharp
op	46:66	0:0	8	->
water	46:68	0:0	8	chroma
op	46:74	0:0	8	.
water	46:75	0:0	8	amount
arg	47:38	47:85	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.scalebits)
call	47:38	47:84	6	FF_OPENCL_PARAM_INFO
arg	47:59	47:84	7	unsharp->chroma.scalebits
water	47:59	0:0	8	unsharp
op	47:66	0:0	8	->
water	47:68	0:0	8	chroma
op	47:74	0:0	8	.
water	47:75	0:0	8	scalebits
arg	48:38	48:85	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.halfscale)
call	48:38	48:84	6	FF_OPENCL_PARAM_INFO
arg	48:59	48:84	7	unsharp->chroma.halfscale
water	48:59	0:0	8	unsharp
op	48:66	0:0	8	->
water	48:68	0:0	8	chroma
op	48:74	0:0	8	.
water	48:75	0:0	8	halfscale
arg	49:38	49:75	5	FF_OPENCL_PARAM_INFO(in->linesize[0])
call	49:38	49:74	6	FF_OPENCL_PARAM_INFO
arg	49:59	49:74	7	in->linesize[0]
water	49:59	0:0	8	in
op	49:61	0:0	8	->
water	49:63	0:0	8	linesize
op	49:71	0:0	8	[
water	49:72	0:0	8	0
op	49:73	0:0	8	]
arg	50:38	50:75	5	FF_OPENCL_PARAM_INFO(in->linesize[1])
call	50:38	50:74	6	FF_OPENCL_PARAM_INFO
arg	50:59	50:74	7	in->linesize[1]
water	50:59	0:0	8	in
op	50:61	0:0	8	->
water	50:63	0:0	8	linesize
op	50:71	0:0	8	[
water	50:72	0:0	8	1
op	50:73	0:0	8	]
arg	51:38	51:76	5	FF_OPENCL_PARAM_INFO(out->linesize[0])
call	51:38	51:75	6	FF_OPENCL_PARAM_INFO
arg	51:59	51:75	7	out->linesize[0]
water	51:59	0:0	8	out
op	51:62	0:0	8	->
water	51:64	0:0	8	linesize
op	51:72	0:0	8	[
water	51:73	0:0	8	0
op	51:74	0:0	8	]
arg	52:38	52:76	5	FF_OPENCL_PARAM_INFO(out->linesize[1])
call	52:38	52:75	6	FF_OPENCL_PARAM_INFO
arg	52:59	52:75	7	out->linesize[1]
water	52:59	0:0	8	out
op	52:62	0:0	8	->
water	52:64	0:0	8	linesize
op	52:72	0:0	8	[
water	52:73	0:0	8	1
op	52:74	0:0	8	]
arg	53:38	53:67	5	FF_OPENCL_PARAM_INFO(link->w)
call	53:38	53:66	6	FF_OPENCL_PARAM_INFO
arg	53:59	53:66	7	link->w
water	53:59	0:0	8	link
op	53:63	0:0	8	->
water	53:65	0:0	8	w
arg	54:38	54:67	5	FF_OPENCL_PARAM_INFO(link->h)
call	54:38	54:66	6	FF_OPENCL_PARAM_INFO
arg	54:59	54:66	7	link->h
water	54:59	0:0	8	link
op	54:63	0:0	8	->
water	54:65	0:0	8	h
arg	55:38	55:62	5	FF_OPENCL_PARAM_INFO(cw)
call	55:38	55:61	6	FF_OPENCL_PARAM_INFO
arg	55:59	55:61	7	cw
water	55:59	0:0	8	cw
arg	56:38	56:62	5	FF_OPENCL_PARAM_INFO(ch)
call	56:38	56:61	6	FF_OPENCL_PARAM_INFO
arg	56:59	56:61	7	ch
water	56:59	0:0	8	ch
arg	57:38	57:42	5	NULL
water	57:38	0:0	6	NULL
water	57:43	0:0	4	;
if	58:8	59:22	4	(ret < 0)
cond	58:12	58:18	5	ret < 0
water	58:12	0:0	6	ret
op	58:16	0:0	6	<
water	58:18	0:0	6	0
stmts	59:12	59:22	5	
return	59:12	59:22	6	ret
water	59:19	0:0	7	ret
water	60:8	0:0	4	status
op	60:15	0:0	4	=
call	60:17	62:92	4	clEnqueueNDRangeKernel
arg	60:40	60:73	5	unsharp->opencl_ctx.command_queue
water	60:40	0:0	6	unsharp
op	60:47	0:0	6	->
water	60:49	0:0	6	opencl_ctx
op	60:59	0:0	6	.
water	60:60	0:0	6	command_queue
arg	61:40	61:71	5	unsharp->opencl_ctx.kernel_luma
water	61:40	0:0	6	unsharp
op	61:47	0:0	6	->
water	61:49	0:0	6	opencl_ctx
op	61:59	0:0	6	.
water	61:60	0:0	6	kernel_luma
arg	61:73	61:74	5	2
water	61:73	0:0	6	2
arg	61:76	61:80	5	NULL
water	61:76	0:0	6	NULL
arg	62:40	62:60	5	globalWorkSize2dLuma
water	62:40	0:0	6	globalWorkSize2dLuma
arg	62:62	62:77	5	localWorkSize2d
water	62:62	0:0	6	localWorkSize2d
arg	62:79	62:80	5	0
water	62:79	0:0	6	0
arg	62:82	62:86	5	NULL
water	62:82	0:0	6	NULL
arg	62:88	62:92	5	NULL
water	62:88	0:0	6	NULL
water	62:93	0:0	4	;
water	63:8	0:0	4	status
op	63:15	0:0	4	|=
call	63:17	65:94	4	clEnqueueNDRangeKernel
arg	63:40	63:73	5	unsharp->opencl_ctx.command_queue
water	63:40	0:0	6	unsharp
op	63:47	0:0	6	->
water	63:49	0:0	6	opencl_ctx
op	63:59	0:0	6	.
water	63:60	0:0	6	command_queue
arg	64:40	64:73	5	unsharp->opencl_ctx.kernel_chroma
water	64:40	0:0	6	unsharp
op	64:47	0:0	6	->
water	64:49	0:0	6	opencl_ctx
op	64:59	0:0	6	.
water	64:60	0:0	6	kernel_chroma
arg	64:75	64:76	5	2
water	64:75	0:0	6	2
arg	64:78	64:82	5	NULL
water	64:78	0:0	6	NULL
arg	65:40	65:62	5	globalWorkSize2dChroma
water	65:40	0:0	6	globalWorkSize2dChroma
arg	65:64	65:79	5	localWorkSize2d
water	65:64	0:0	6	localWorkSize2d
arg	65:81	65:82	5	0
water	65:81	0:0	6	0
arg	65:84	65:88	5	NULL
water	65:84	0:0	6	NULL
arg	65:90	65:94	5	NULL
water	65:90	0:0	6	NULL
water	65:95	0:0	4	;
if	66:8	69:8	4	(status != CL_SUCCESS)
cond	66:12	66:22	5	status != CL_SUCCESS
water	66:12	0:0	6	status
op	66:19	0:0	6	!=
water	66:22	0:0	6	CL_SUCCESS
stmts	66:34	69:8	5	
water	66:34	0:0	6	{
call	67:12	67:104	6	av_log
arg	67:19	67:22	7	ctx
water	67:19	0:0	8	ctx
arg	67:24	67:36	7	AV_LOG_ERROR
water	67:24	0:0	8	AV_LOG_ERROR
arg	67:38	67:78	7	"OpenCL run kernel error occurred: %s\n"
water	67:38	0:0	8	"OpenCL run kernel error occurred: %s\n"
arg	67:80	67:104	7	av_opencl_errstr(status)
call	67:80	67:103	8	av_opencl_errstr
arg	67:97	67:103	9	status
water	67:97	0:0	10	status
water	67:105	0:0	6	;
return	68:12	68:35	6	AVERROR_EXTERNAL
water	68:19	0:0	7	AVERROR_EXTERNAL
water	69:8	0:0	6	}
water	70:4	0:0	4	}
else	70:6	106:4	2
stmts	70:11	106:4	3	
water	70:11	0:0	4	{
water	71:8	0:0	4	kernel1
op	71:15	0:0	4	.
water	71:16	0:0	4	ctx
op	71:20	0:0	4	=
water	71:22	0:0	4	ctx
water	71:25	0:0	4	;
water	72:8	0:0	4	kernel1
op	72:15	0:0	4	.
water	72:16	0:0	4	kernel
op	72:23	0:0	4	=
water	72:25	0:0	4	unsharp
op	72:32	0:0	4	->
water	72:34	0:0	4	opencl_ctx
op	72:44	0:0	4	.
water	72:45	0:0	4	kernel_default
water	72:59	0:0	4	;
water	73:8	0:0	4	ret
op	73:12	0:0	4	=
call	73:14	96:42	4	avpriv_opencl_set_parameter
arg	73:42	73:50	5	&kernel1
op	73:42	0:0	6	&
water	73:43	0:0	6	kernel1
arg	74:38	74:88	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_inbuf)
call	74:38	74:87	6	FF_OPENCL_PARAM_INFO
arg	74:59	74:87	7	unsharp->opencl_ctx.cl_inbuf
water	74:59	0:0	8	unsharp
op	74:66	0:0	8	->
water	74:68	0:0	8	opencl_ctx
op	74:78	0:0	8	.
water	74:79	0:0	8	cl_inbuf
arg	75:38	75:89	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_outbuf)
call	75:38	75:88	6	FF_OPENCL_PARAM_INFO
arg	75:59	75:88	7	unsharp->opencl_ctx.cl_outbuf
water	75:59	0:0	8	unsharp
op	75:66	0:0	8	->
water	75:68	0:0	8	opencl_ctx
op	75:78	0:0	8	.
water	75:79	0:0	8	cl_outbuf
arg	76:38	76:92	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_luma_mask)
call	76:38	76:91	6	FF_OPENCL_PARAM_INFO
arg	76:59	76:91	7	unsharp->opencl_ctx.cl_luma_mask
water	76:59	0:0	8	unsharp
op	76:66	0:0	8	->
water	76:68	0:0	8	opencl_ctx
op	76:78	0:0	8	.
water	76:79	0:0	8	cl_luma_mask
arg	77:38	77:94	5	FF_OPENCL_PARAM_INFO(unsharp->opencl_ctx.cl_chroma_mask)
call	77:38	77:93	6	FF_OPENCL_PARAM_INFO
arg	77:59	77:93	7	unsharp->opencl_ctx.cl_chroma_mask
water	77:59	0:0	8	unsharp
op	77:66	0:0	8	->
water	77:68	0:0	8	opencl_ctx
op	77:78	0:0	8	.
water	77:79	0:0	8	cl_chroma_mask
arg	78:38	78:80	5	FF_OPENCL_PARAM_INFO(unsharp->luma.amount)
call	78:38	78:79	6	FF_OPENCL_PARAM_INFO
arg	78:59	78:79	7	unsharp->luma.amount
water	78:59	0:0	8	unsharp
op	78:66	0:0	8	->
water	78:68	0:0	8	luma
op	78:72	0:0	8	.
water	78:73	0:0	8	amount
arg	79:38	79:82	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.amount)
call	79:38	79:81	6	FF_OPENCL_PARAM_INFO
arg	79:59	79:81	7	unsharp->chroma.amount
water	79:59	0:0	8	unsharp
op	79:66	0:0	8	->
water	79:68	0:0	8	chroma
op	79:74	0:0	8	.
water	79:75	0:0	8	amount
arg	80:38	80:81	5	FF_OPENCL_PARAM_INFO(unsharp->luma.steps_x)
call	80:38	80:80	6	FF_OPENCL_PARAM_INFO
arg	80:59	80:80	7	unsharp->luma.steps_x
water	80:59	0:0	8	unsharp
op	80:66	0:0	8	->
water	80:68	0:0	8	luma
op	80:72	0:0	8	.
water	80:73	0:0	8	steps_x
arg	81:38	81:81	5	FF_OPENCL_PARAM_INFO(unsharp->luma.steps_y)
call	81:38	81:80	6	FF_OPENCL_PARAM_INFO
arg	81:59	81:80	7	unsharp->luma.steps_y
water	81:59	0:0	8	unsharp
op	81:66	0:0	8	->
water	81:68	0:0	8	luma
op	81:72	0:0	8	.
water	81:73	0:0	8	steps_y
arg	82:38	82:83	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.steps_x)
call	82:38	82:82	6	FF_OPENCL_PARAM_INFO
arg	82:59	82:82	7	unsharp->chroma.steps_x
water	82:59	0:0	8	unsharp
op	82:66	0:0	8	->
water	82:68	0:0	8	chroma
op	82:74	0:0	8	.
water	82:75	0:0	8	steps_x
arg	83:38	83:83	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.steps_y)
call	83:38	83:82	6	FF_OPENCL_PARAM_INFO
arg	83:59	83:82	7	unsharp->chroma.steps_y
water	83:59	0:0	8	unsharp
op	83:66	0:0	8	->
water	83:68	0:0	8	chroma
op	83:74	0:0	8	.
water	83:75	0:0	8	steps_y
arg	84:38	84:83	5	FF_OPENCL_PARAM_INFO(unsharp->luma.scalebits)
call	84:38	84:82	6	FF_OPENCL_PARAM_INFO
arg	84:59	84:82	7	unsharp->luma.scalebits
water	84:59	0:0	8	unsharp
op	84:66	0:0	8	->
water	84:68	0:0	8	luma
op	84:72	0:0	8	.
water	84:73	0:0	8	scalebits
arg	85:38	85:85	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.scalebits)
call	85:38	85:84	6	FF_OPENCL_PARAM_INFO
arg	85:59	85:84	7	unsharp->chroma.scalebits
water	85:59	0:0	8	unsharp
op	85:66	0:0	8	->
water	85:68	0:0	8	chroma
op	85:74	0:0	8	.
water	85:75	0:0	8	scalebits
arg	86:38	86:83	5	FF_OPENCL_PARAM_INFO(unsharp->luma.halfscale)
call	86:38	86:82	6	FF_OPENCL_PARAM_INFO
arg	86:59	86:82	7	unsharp->luma.halfscale
water	86:59	0:0	8	unsharp
op	86:66	0:0	8	->
water	86:68	0:0	8	luma
op	86:72	0:0	8	.
water	86:73	0:0	8	halfscale
arg	87:38	87:85	5	FF_OPENCL_PARAM_INFO(unsharp->chroma.halfscale)
call	87:38	87:84	6	FF_OPENCL_PARAM_INFO
arg	87:59	87:84	7	unsharp->chroma.halfscale
water	87:59	0:0	8	unsharp
op	87:66	0:0	8	->
water	87:68	0:0	8	chroma
op	87:74	0:0	8	.
water	87:75	0:0	8	halfscale
arg	88:38	88:75	5	FF_OPENCL_PARAM_INFO(in->linesize[0])
call	88:38	88:74	6	FF_OPENCL_PARAM_INFO
arg	88:59	88:74	7	in->linesize[0]
water	88:59	0:0	8	in
op	88:61	0:0	8	->
water	88:63	0:0	8	linesize
op	88:71	0:0	8	[
water	88:72	0:0	8	0
op	88:73	0:0	8	]
arg	89:38	89:75	5	FF_OPENCL_PARAM_INFO(in->linesize[1])
call	89:38	89:74	6	FF_OPENCL_PARAM_INFO
arg	89:59	89:74	7	in->linesize[1]
water	89:59	0:0	8	in
op	89:61	0:0	8	->
water	89:63	0:0	8	linesize
op	89:71	0:0	8	[
water	89:72	0:0	8	1
op	89:73	0:0	8	]
arg	90:38	90:76	5	FF_OPENCL_PARAM_INFO(out->linesize[0])
call	90:38	90:75	6	FF_OPENCL_PARAM_INFO
arg	90:59	90:75	7	out->linesize[0]
water	90:59	0:0	8	out
op	90:62	0:0	8	->
water	90:64	0:0	8	linesize
op	90:72	0:0	8	[
water	90:73	0:0	8	0
op	90:74	0:0	8	]
arg	91:38	91:76	5	FF_OPENCL_PARAM_INFO(out->linesize[1])
call	91:38	91:75	6	FF_OPENCL_PARAM_INFO
arg	91:59	91:75	7	out->linesize[1]
water	91:59	0:0	8	out
op	91:62	0:0	8	->
water	91:64	0:0	8	linesize
op	91:72	0:0	8	[
water	91:73	0:0	8	1
op	91:74	0:0	8	]
arg	92:38	92:67	5	FF_OPENCL_PARAM_INFO(link->h)
call	92:38	92:66	6	FF_OPENCL_PARAM_INFO
arg	92:59	92:66	7	link->h
water	92:59	0:0	8	link
op	92:63	0:0	8	->
water	92:65	0:0	8	h
arg	93:38	93:67	5	FF_OPENCL_PARAM_INFO(link->w)
call	93:38	93:66	6	FF_OPENCL_PARAM_INFO
arg	93:59	93:66	7	link->w
water	93:59	0:0	8	link
op	93:63	0:0	8	->
water	93:65	0:0	8	w
arg	94:38	94:62	5	FF_OPENCL_PARAM_INFO(ch)
call	94:38	94:61	6	FF_OPENCL_PARAM_INFO
arg	94:59	94:61	7	ch
water	94:59	0:0	8	ch
arg	95:38	95:62	5	FF_OPENCL_PARAM_INFO(cw)
call	95:38	95:61	6	FF_OPENCL_PARAM_INFO
arg	95:59	95:61	7	cw
water	95:59	0:0	8	cw
arg	96:38	96:42	5	NULL
water	96:38	0:0	6	NULL
water	96:43	0:0	4	;
if	97:8	98:22	4	(ret < 0)
cond	97:12	97:18	5	ret < 0
water	97:12	0:0	6	ret
op	97:16	0:0	6	<
water	97:18	0:0	6	0
stmts	98:12	98:22	5	
return	98:12	98:22	6	ret
water	98:19	0:0	7	ret
water	99:8	0:0	4	status
op	99:15	0:0	4	=
call	99:17	101:78	4	clEnqueueNDRangeKernel
arg	99:40	99:73	5	unsharp->opencl_ctx.command_queue
water	99:40	0:0	6	unsharp
op	99:47	0:0	6	->
water	99:49	0:0	6	opencl_ctx
op	99:59	0:0	6	.
water	99:60	0:0	6	command_queue
arg	100:40	100:74	5	unsharp->opencl_ctx.kernel_default
water	100:40	0:0	6	unsharp
op	100:47	0:0	6	->
water	100:49	0:0	6	opencl_ctx
op	100:59	0:0	6	.
water	100:60	0:0	6	kernel_default
arg	100:76	100:77	5	1
water	100:76	0:0	6	1
arg	100:79	100:83	5	NULL
water	100:79	0:0	6	NULL
arg	101:40	101:57	5	&globalWorkSize1d
op	101:40	0:0	6	&
water	101:41	0:0	6	globalWorkSize1d
arg	101:59	101:63	5	NULL
water	101:59	0:0	6	NULL
arg	101:65	101:66	5	0
water	101:65	0:0	6	0
arg	101:68	101:72	5	NULL
water	101:68	0:0	6	NULL
arg	101:74	101:78	5	NULL
water	101:74	0:0	6	NULL
water	101:79	0:0	4	;
if	102:8	105:8	4	(status != CL_SUCCESS)
cond	102:12	102:22	5	status != CL_SUCCESS
water	102:12	0:0	6	status
op	102:19	0:0	6	!=
water	102:22	0:0	6	CL_SUCCESS
stmts	102:34	105:8	5	
water	102:34	0:0	6	{
call	103:12	103:104	6	av_log
arg	103:19	103:22	7	ctx
water	103:19	0:0	8	ctx
arg	103:24	103:36	7	AV_LOG_ERROR
water	103:24	0:0	8	AV_LOG_ERROR
arg	103:38	103:78	7	"OpenCL run kernel error occurred: %s\n"
water	103:38	0:0	8	"OpenCL run kernel error occurred: %s\n"
arg	103:80	103:104	7	av_opencl_errstr(status)
call	103:80	103:103	8	av_opencl_errstr
arg	103:97	103:103	9	status
water	103:97	0:0	10	status
water	103:105	0:0	6	;
return	104:12	104:35	6	AVERROR_EXTERNAL
water	104:19	0:0	7	AVERROR_EXTERNAL
water	105:8	0:0	6	}
water	106:4	0:0	4	}
return	109:4	111:74	2	av_opencl_buffer_read_image(out->data,unsharp->opencl_ctx.out_plane_size,unsharp->opencl_ctx.plane_num,unsharp->opencl_ctx.cl_outbuf,unsharp->opencl_ctx.cl_outbuf_size)
call	109:11	111:73	3	av_opencl_buffer_read_image
arg	109:39	109:48	4	out->data
water	109:39	0:0	5	out
op	109:42	0:0	5	->
water	109:44	0:0	5	data
arg	109:50	109:84	4	unsharp->opencl_ctx.out_plane_size
water	109:50	0:0	5	unsharp
op	109:57	0:0	5	->
water	109:59	0:0	5	opencl_ctx
op	109:69	0:0	5	.
water	109:70	0:0	5	out_plane_size
arg	110:39	110:68	4	unsharp->opencl_ctx.plane_num
water	110:39	0:0	5	unsharp
op	110:46	0:0	5	->
water	110:48	0:0	5	opencl_ctx
op	110:58	0:0	5	.
water	110:59	0:0	5	plane_num
arg	110:70	110:99	4	unsharp->opencl_ctx.cl_outbuf
water	110:70	0:0	5	unsharp
op	110:77	0:0	5	->
water	110:79	0:0	5	opencl_ctx
op	110:89	0:0	5	.
water	110:90	0:0	5	cl_outbuf
arg	111:39	111:73	4	unsharp->opencl_ctx.cl_outbuf_size
water	111:39	0:0	5	unsharp
op	111:46	0:0	5	->
water	111:48	0:0	5	opencl_ctx
op	111:58	0:0	5	.
water	111:59	0:0	5	cl_outbuf_size

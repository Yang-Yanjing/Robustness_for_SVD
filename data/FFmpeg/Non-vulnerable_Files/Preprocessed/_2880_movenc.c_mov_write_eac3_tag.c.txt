func	1:0	45:0	0	static int	mov_write_eac3_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	44:15	1	
decl	3:4	3:21	2	PutBitContext	pbc
decl	4:4	4:16	2	uint8_t	*buf
decl	5:4	5:26	2	struct eac3_info	*info
decl	6:4	6:15	2	int	size
water	6:12	0:0	2	,
decl	6:4	6:15	2	int	i
if	7:4	8:30	2	(! track -> eac3_priv)
cond	7:8	7:16	3	! track -> eac3_priv
op	7:8	0:0	4	!
water	7:9	0:0	4	track
op	7:14	0:0	4	->
water	7:16	0:0	4	eac3_priv
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	2	info
op	9:9	0:0	2	=
water	9:11	0:0	2	track
op	9:16	0:0	2	->
water	9:18	0:0	2	eac3_priv
water	9:27	0:0	2	;
water	10:4	0:0	2	size
op	10:9	0:0	2	=
water	10:11	0:0	2	2
op	10:13	0:0	2	+
water	10:15	0:0	2	4
op	10:17	0:0	2	*
water	10:19	0:0	2	(
water	10:20	0:0	2	info
op	10:24	0:0	2	->
water	10:26	0:0	2	num_ind_sub
op	10:38	0:0	2	+
water	10:40	0:0	2	1
water	10:41	0:0	2	)
water	10:42	0:0	2	;
water	11:4	0:0	2	buf
op	11:8	0:0	2	=
call	11:10	11:24	2	av_malloc
arg	11:20	11:24	3	size
water	11:20	0:0	4	size
water	11:25	0:0	2	;
if	12:4	15:4	2	(! buf)
cond	12:8	12:9	3	! buf
op	12:8	0:0	4	!
water	12:9	0:0	4	buf
stmts	12:14	15:4	3	
water	12:14	0:0	4	{
water	13:8	0:0	4	size
op	13:13	0:0	4	=
call	13:15	13:29	4	AVERROR
arg	13:23	13:29	5	ENOMEM
water	13:23	0:0	6	ENOMEM
water	13:30	0:0	4	;
goto	14:8	14:16	4	end
water	14:13	0:0	5	end
water	15:4	0:0	4	}
call	16:4	16:33	2	init_put_bits
arg	16:18	16:22	3	&pbc
op	16:18	0:0	4	&
water	16:19	0:0	4	pbc
arg	16:24	16:27	3	buf
water	16:24	0:0	4	buf
arg	16:29	16:33	3	size
water	16:29	0:0	4	size
water	16:34	0:0	2	;
call	17:4	17:38	2	put_bits
arg	17:13	17:17	3	&pbc
op	17:13	0:0	4	&
water	17:14	0:0	4	pbc
arg	17:19	17:21	3	13
water	17:19	0:0	4	13
arg	17:23	17:38	3	info->data_rate
water	17:23	0:0	4	info
op	17:27	0:0	4	->
water	17:29	0:0	4	data_rate
water	17:39	0:0	2	;
call	18:4	18:40	2	put_bits
arg	18:13	18:17	3	&pbc
op	18:13	0:0	4	&
water	18:14	0:0	4	pbc
arg	18:20	18:21	3	3
water	18:20	0:0	4	3
arg	18:23	18:40	3	info->num_ind_sub
water	18:23	0:0	4	info
op	18:27	0:0	4	->
water	18:29	0:0	4	num_ind_sub
water	18:41	0:0	2	;
for	19:4	35:4	2	(i = 0 ;i <= info -> num_ind_sub;i ++)
forinit	19:9	19:14	3	i = 0 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:27	3	i <= info -> num_ind_sub
water	19:16	0:0	4	i
op	19:18	0:0	4	<=
water	19:21	0:0	4	info
op	19:25	0:0	4	->
water	19:27	0:0	4	num_ind_sub
forexpr	19:40	19:41	3	i ++
water	19:40	0:0	4	i
op	19:41	0:0	4	++
stmts	19:45	35:4	3	
water	19:45	0:0	4	{
call	20:8	20:50	4	put_bits
arg	20:17	20:21	5	&pbc
op	20:17	0:0	6	&
water	20:18	0:0	6	pbc
arg	20:23	20:24	5	2
water	20:23	0:0	6	2
arg	20:26	20:50	5	info->substream[i].fscod
water	20:26	0:0	6	info
op	20:30	0:0	6	->
water	20:32	0:0	6	substream
op	20:41	0:0	6	[
water	20:42	0:0	6	i
op	20:43	0:0	6	]
op	20:44	0:0	6	.
water	20:45	0:0	6	fscod
water	20:51	0:0	4	;
call	21:8	21:49	4	put_bits
arg	21:17	21:21	5	&pbc
op	21:17	0:0	6	&
water	21:18	0:0	6	pbc
arg	21:23	21:24	5	5
water	21:23	0:0	6	5
arg	21:26	21:49	5	info->substream[i].bsid
water	21:26	0:0	6	info
op	21:30	0:0	6	->
water	21:32	0:0	6	substream
op	21:41	0:0	6	[
water	21:42	0:0	6	i
op	21:43	0:0	6	]
op	21:44	0:0	6	.
water	21:45	0:0	6	bsid
water	21:50	0:0	4	;
call	22:8	22:27	4	put_bits
arg	22:17	22:21	5	&pbc
op	22:17	0:0	6	&
water	22:18	0:0	6	pbc
arg	22:23	22:24	5	1
water	22:23	0:0	6	1
arg	22:26	22:27	5	0
water	22:26	0:0	6	0
water	22:28	0:0	4	;
call	23:8	23:27	4	put_bits
arg	23:17	23:21	5	&pbc
op	23:17	0:0	6	&
water	23:18	0:0	6	pbc
arg	23:23	23:24	5	1
water	23:23	0:0	6	1
arg	23:26	23:27	5	0
water	23:26	0:0	6	0
water	23:28	0:0	4	;
call	24:8	24:50	4	put_bits
arg	24:17	24:21	5	&pbc
op	24:17	0:0	6	&
water	24:18	0:0	6	pbc
arg	24:23	24:24	5	3
water	24:23	0:0	6	3
arg	24:26	24:50	5	info->substream[i].bsmod
water	24:26	0:0	6	info
op	24:30	0:0	6	->
water	24:32	0:0	6	substream
op	24:41	0:0	6	[
water	24:42	0:0	6	i
op	24:43	0:0	6	]
op	24:44	0:0	6	.
water	24:45	0:0	6	bsmod
water	24:51	0:0	4	;
call	25:8	25:50	4	put_bits
arg	25:17	25:21	5	&pbc
op	25:17	0:0	6	&
water	25:18	0:0	6	pbc
arg	25:23	25:24	5	3
water	25:23	0:0	6	3
arg	25:26	25:50	5	info->substream[i].acmod
water	25:26	0:0	6	info
op	25:30	0:0	6	->
water	25:32	0:0	6	substream
op	25:41	0:0	6	[
water	25:42	0:0	6	i
op	25:43	0:0	6	]
op	25:44	0:0	6	.
water	25:45	0:0	6	acmod
water	25:51	0:0	4	;
call	26:8	26:50	4	put_bits
arg	26:17	26:21	5	&pbc
op	26:17	0:0	6	&
water	26:18	0:0	6	pbc
arg	26:23	26:24	5	1
water	26:23	0:0	6	1
arg	26:26	26:50	5	info->substream[i].lfeon
water	26:26	0:0	6	info
op	26:30	0:0	6	->
water	26:32	0:0	6	substream
op	26:41	0:0	6	[
water	26:42	0:0	6	i
op	26:43	0:0	6	]
op	26:44	0:0	6	.
water	26:45	0:0	6	lfeon
water	26:51	0:0	4	;
call	27:8	27:27	4	put_bits
arg	27:17	27:21	5	&pbc
op	27:17	0:0	6	&
water	27:18	0:0	6	pbc
arg	27:23	27:24	5	5
water	27:23	0:0	6	5
arg	27:26	27:27	5	0
water	27:26	0:0	6	0
water	27:28	0:0	4	;
call	28:8	28:56	4	put_bits
arg	28:17	28:21	5	&pbc
op	28:17	0:0	6	&
water	28:18	0:0	6	pbc
arg	28:23	28:24	5	4
water	28:23	0:0	6	4
arg	28:26	28:56	5	info->substream[i].num_dep_sub
water	28:26	0:0	6	info
op	28:30	0:0	6	->
water	28:32	0:0	6	substream
op	28:41	0:0	6	[
water	28:42	0:0	6	i
op	28:43	0:0	6	]
op	28:44	0:0	6	.
water	28:45	0:0	6	num_dep_sub
water	28:57	0:0	4	;
if	29:8	32:8	4	(! info -> substream [ i ] . num_dep_sub)
cond	29:12	29:32	5	! info -> substream [ i ] . num_dep_sub
op	29:12	0:0	6	!
water	29:13	0:0	6	info
op	29:17	0:0	6	->
water	29:19	0:0	6	substream
op	29:28	0:0	6	[
water	29:29	0:0	6	i
op	29:30	0:0	6	]
op	29:31	0:0	6	.
water	29:32	0:0	6	num_dep_sub
stmts	29:45	32:8	5	
water	29:45	0:0	6	{
call	30:12	30:31	6	put_bits
arg	30:21	30:25	7	&pbc
op	30:21	0:0	8	&
water	30:22	0:0	8	pbc
arg	30:27	30:28	7	1
water	30:27	0:0	8	1
arg	30:30	30:31	7	0
water	30:30	0:0	8	0
water	30:32	0:0	6	;
water	31:12	0:0	6	size
op	31:16	0:0	6	--
water	31:18	0:0	6	;
water	32:8	0:0	6	}
else	32:10	34:8	4
stmts	32:15	34:8	5	
water	32:15	0:0	6	{
call	33:12	33:57	6	put_bits
arg	33:21	33:25	7	&pbc
op	33:21	0:0	8	&
water	33:22	0:0	8	pbc
arg	33:27	33:28	7	9
water	33:27	0:0	8	9
arg	33:30	33:57	7	info->substream[i].chan_loc
water	33:30	0:0	8	info
op	33:34	0:0	8	->
water	33:36	0:0	8	substream
op	33:45	0:0	8	[
water	33:46	0:0	8	i
op	33:47	0:0	8	]
op	33:48	0:0	8	.
water	33:49	0:0	8	chan_loc
water	33:58	0:0	6	;
water	34:8	0:0	6	}
water	35:4	0:0	4	}
call	36:4	36:23	2	flush_put_bits
arg	36:19	36:23	3	&pbc
op	36:19	0:0	4	&
water	36:20	0:0	4	pbc
water	36:24	0:0	2	;
call	37:4	37:26	2	avio_wb32
arg	37:14	37:16	3	pb
water	37:14	0:0	4	pb
arg	37:18	37:26	3	size+8
water	37:18	0:0	4	size
op	37:23	0:0	4	+
water	37:25	0:0	4	8
water	37:27	0:0	2	;
call	38:4	38:27	2	ffio_wfourcc
arg	38:17	38:19	3	pb
water	38:17	0:0	4	pb
arg	38:21	38:27	3	"dec3"
water	38:21	0:0	4	"dec3"
water	38:28	0:0	2	;
call	39:4	39:28	2	avio_write
arg	39:15	39:17	3	pb
water	39:15	0:0	4	pb
arg	39:19	39:22	3	buf
water	39:19	0:0	4	buf
arg	39:24	39:28	3	size
water	39:24	0:0	4	size
water	39:29	0:0	2	;
call	40:4	40:15	2	av_free
arg	40:12	40:15	3	buf
water	40:12	0:0	4	buf
water	40:16	0:0	2	;
label	41:0	41:3	2	end :
call	42:4	42:29	2	av_free_packet
arg	42:19	42:29	3	&info->pkt
op	42:19	0:0	4	&
water	42:20	0:0	4	info
op	42:24	0:0	4	->
water	42:26	0:0	4	pkt
water	42:30	0:0	2	;
call	43:4	43:30	2	av_freep
arg	43:13	43:30	3	&track->eac3_priv
op	43:13	0:0	4	&
water	43:14	0:0	4	track
op	43:19	0:0	4	->
water	43:21	0:0	4	eac3_priv
water	43:31	0:0	2	;
return	44:4	44:15	2	size
water	44:11	0:0	3	size

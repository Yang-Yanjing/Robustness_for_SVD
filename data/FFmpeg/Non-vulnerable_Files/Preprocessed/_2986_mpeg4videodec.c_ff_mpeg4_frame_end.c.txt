func	1:0	42:0	0	int	ff_mpeg4_frame_end
params	1:22	0:0	1	
param	1:23	1:44	2	AVCodecContext *	avctx
param	1:46	1:64	2	const uint8_t *	buf
param	1:66	1:78	2	int	buf_size
stmnts	0:0	41:12	1	
decl	3:4	3:43	2	Mpeg4DecContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	avctx
op	3:32	0:0	2	->
water	3:34	0:0	2	priv_data
decl	4:4	4:34	2	MpegEncContext	*s
op	4:25	0:0	2	=
op	4:27	0:0	2	&
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	m
if	8:4	40:4	2	(s -> divx_packed)
cond	8:8	8:11	3	s -> divx_packed
water	8:8	0:0	4	s
op	8:9	0:0	4	->
water	8:11	0:0	4	divx_packed
stmts	8:24	40:4	3	
water	8:24	0:0	4	{
decl	9:8	9:101	4	int	current_pos
op	9:28	0:0	4	=
water	9:30	0:0	4	s
op	9:31	0:0	4	->
water	9:33	0:0	4	gb
op	9:35	0:0	4	.
water	9:36	0:0	4	buffer
op	9:43	0:0	4	==
water	9:46	0:0	4	s
op	9:47	0:0	4	->
water	9:49	0:0	4	bitstream_buffer
water	9:66	0:0	4	?
water	9:68	0:0	4	0
water	9:70	0:0	4	:
water	9:72	0:0	4	(
call	9:73	9:94	5	get_bits_count
arg	9:88	9:94	6	&s->gb
op	9:88	0:0	7	&
water	9:89	0:0	7	s
op	9:90	0:0	7	->
water	9:92	0:0	7	gb
op	9:96	0:0	4	>>
water	9:99	0:0	4	3
water	9:100	0:0	4	)
decl	10:8	10:31	4	int	startcode_found
op	10:28	0:0	4	=
water	10:30	0:0	4	0
if	11:8	21:8	4	(buf_size - current_pos > 7)
cond	11:12	11:37	5	buf_size - current_pos > 7
water	11:12	0:0	6	buf_size
op	11:21	0:0	6	-
water	11:23	0:0	6	current_pos
op	11:35	0:0	6	>
water	11:37	0:0	6	7
stmts	11:40	21:8	5	
water	11:40	0:0	6	{
decl	12:12	12:17	6	int	i
for	13:12	20:16	6	(i = current_pos ;i < buf_size - 4;i ++)
forinit	13:17	13:32	7	i = current_pos ;
water	13:17	0:0	8	i
op	13:19	0:0	8	=
water	13:21	0:0	8	current_pos
water	13:32	0:0	8	;
cond	13:34	13:49	7	i < buf_size - 4
water	13:34	0:0	8	i
op	13:36	0:0	8	<
water	13:38	0:0	8	buf_size
op	13:47	0:0	8	-
water	13:49	0:0	8	4
forexpr	13:52	13:53	7	i ++
water	13:52	0:0	8	i
op	13:53	0:0	8	++
stmts	14:16	20:16	7	
if	14:16	20:16	8	(buf [ i ] == 0 && buf [ i + 1 ] == 0 && buf [ i + 2 ] == 1 && buf [ i + 3 ] == 0 xB6)
cond	14:20	17:35	9	buf [ i ] == 0 && buf [ i + 1 ] == 0 && buf [ i + 2 ] == 1 && buf [ i + 3 ] == 0 xB6
water	14:20	0:0	10	buf
op	14:23	0:0	10	[
water	14:24	0:0	10	i
op	14:25	0:0	10	]
op	14:31	0:0	10	==
water	14:34	0:0	10	0
op	14:36	0:0	10	&&
water	15:20	0:0	10	buf
op	15:23	0:0	10	[
water	15:24	0:0	10	i
op	15:26	0:0	10	+
water	15:28	0:0	10	1
op	15:29	0:0	10	]
op	15:31	0:0	10	==
water	15:34	0:0	10	0
op	15:36	0:0	10	&&
water	16:20	0:0	10	buf
op	16:23	0:0	10	[
water	16:24	0:0	10	i
op	16:26	0:0	10	+
water	16:28	0:0	10	2
op	16:29	0:0	10	]
op	16:31	0:0	10	==
water	16:34	0:0	10	1
op	16:36	0:0	10	&&
water	17:20	0:0	10	buf
op	17:23	0:0	10	[
water	17:24	0:0	10	i
op	17:26	0:0	10	+
water	17:28	0:0	10	3
op	17:29	0:0	10	]
op	17:31	0:0	10	==
water	17:34	0:0	10	0
water	17:35	0:0	10	xB6
stmts	17:40	20:16	9	
water	17:40	0:0	10	{
water	18:20	0:0	10	startcode_found
op	18:36	0:0	10	=
op	18:38	0:0	10	!
water	18:39	0:0	10	(
water	18:40	0:0	10	buf
op	18:43	0:0	10	[
water	18:44	0:0	10	i
op	18:46	0:0	10	+
water	18:48	0:0	10	4
op	18:49	0:0	10	]
op	18:51	0:0	10	&
water	18:53	0:0	10	0
water	18:54	0:0	10	x40
water	18:57	0:0	10	)
water	18:58	0:0	10	;
break	19:20	19:25	10	
water	20:16	0:0	10	}
water	21:8	0:0	6	}
if	22:8	39:8	4	(startcode_found)
cond	22:12	22:12	5	startcode_found
water	22:12	0:0	6	startcode_found
stmts	22:29	39:8	5	
water	22:29	0:0	6	{
if	23:12	28:12	6	(! ctx -> showed_packed_warning)
cond	23:16	23:22	7	! ctx -> showed_packed_warning
op	23:16	0:0	8	!
water	23:17	0:0	8	ctx
op	23:20	0:0	8	->
water	23:22	0:0	8	showed_packed_warning
stmts	23:45	28:12	7	
water	23:45	0:0	8	{
call	24:16	26:127	8	av_log
arg	24:23	24:31	9	s->avctx
water	24:23	0:0	10	s
op	24:24	0:0	10	->
water	24:26	0:0	10	avctx
arg	24:33	24:44	9	AV_LOG_INFO
water	24:33	0:0	10	AV_LOG_INFO
arg	24:46	26:127	9	"Video uses a non-standard and ""wasteful way to store B-frames ('packed B-frames'). ""Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n"
water	24:46	0:0	10	"Video uses a non-standard and "
water	25:23	0:0	10	"wasteful way to store B-frames ('packed B-frames'). "
water	26:23	0:0	10	"Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n"
water	26:128	0:0	8	;
water	27:16	0:0	8	ctx
op	27:19	0:0	8	->
water	27:21	0:0	8	showed_packed_warning
op	27:43	0:0	8	=
water	27:45	0:0	8	1
water	27:46	0:0	8	;
water	28:12	0:0	8	}
call	29:12	31:49	6	av_fast_padded_malloc
arg	29:34	29:54	7	&s->bitstream_buffer
op	29:34	0:0	8	&
water	29:35	0:0	8	s
op	29:36	0:0	8	->
water	29:38	0:0	8	bitstream_buffer
arg	30:27	30:62	7	&s->allocated_bitstream_buffer_size
op	30:27	0:0	8	&
water	30:28	0:0	8	s
op	30:29	0:0	8	->
water	30:31	0:0	8	allocated_bitstream_buffer_size
arg	31:27	31:49	7	buf_size-current_pos
water	31:27	0:0	8	buf_size
op	31:36	0:0	8	-
water	31:38	0:0	8	current_pos
water	31:50	0:0	6	;
if	32:12	35:12	6	(! s -> bitstream_buffer)
cond	32:16	32:20	7	! s -> bitstream_buffer
op	32:16	0:0	8	!
water	32:17	0:0	8	s
op	32:18	0:0	8	->
water	32:20	0:0	8	bitstream_buffer
stmts	32:38	35:12	7	
water	32:38	0:0	8	{
water	33:16	0:0	8	s
op	33:17	0:0	8	->
water	33:19	0:0	8	bitstream_buffer_size
op	33:41	0:0	8	=
water	33:43	0:0	8	0
water	33:44	0:0	8	;
return	34:16	34:38	8	AVERROR(ENOMEM)
call	34:23	34:37	9	AVERROR
arg	34:31	34:37	10	ENOMEM
water	34:31	0:0	11	ENOMEM
water	35:12	0:0	8	}
call	36:12	37:41	6	memcpy
arg	36:19	36:38	7	s->bitstream_buffer
water	36:19	0:0	8	s
op	36:20	0:0	8	->
water	36:22	0:0	8	bitstream_buffer
arg	36:40	36:57	7	buf+current_pos
water	36:40	0:0	8	buf
op	36:44	0:0	8	+
water	36:46	0:0	8	current_pos
arg	37:19	37:41	7	buf_size-current_pos
water	37:19	0:0	8	buf_size
op	37:28	0:0	8	-
water	37:30	0:0	8	current_pos
water	37:42	0:0	6	;
water	38:12	0:0	6	s
op	38:13	0:0	6	->
water	38:15	0:0	6	bitstream_buffer_size
op	38:37	0:0	6	=
water	38:39	0:0	6	buf_size
op	38:48	0:0	6	-
water	38:50	0:0	6	current_pos
water	38:61	0:0	6	;
water	39:8	0:0	6	}
water	40:4	0:0	4	}
return	41:4	41:12	2	0
water	41:11	0:0	3	0

func	2:0	60:0	0	static int	sbr_make_f_derived
params	2:29	0:0	1	
param	2:30	2:44	2	AACContext *	ac
param	2:46	2:74	2	SpectralBandReplication *	sbr
stmnts	0:0	59:12	1	
decl	4:4	4:15	2	int	k
water	4:9	0:0	2	,
decl	4:4	4:15	2	int	temp
decl	6:4	6:14	2	int	nz
op	6:11	0:0	2	=
water	6:13	0:0	2	0
water	8:4	0:0	2	sbr
op	8:7	0:0	2	->
water	8:9	0:0	2	n
op	8:10	0:0	2	[
water	8:11	0:0	2	1
op	8:12	0:0	2	]
op	8:14	0:0	2	=
water	8:16	0:0	2	sbr
op	8:19	0:0	2	->
water	8:21	0:0	2	n_master
op	8:30	0:0	2	-
water	8:32	0:0	2	sbr
op	8:35	0:0	2	->
water	8:37	0:0	2	spectrum_params
op	8:52	0:0	2	.
water	8:53	0:0	2	bs_xover_band
water	8:66	0:0	2	;
water	9:4	0:0	2	sbr
op	9:7	0:0	2	->
water	9:9	0:0	2	n
op	9:10	0:0	2	[
water	9:11	0:0	2	0
op	9:12	0:0	2	]
op	9:14	0:0	2	=
water	9:16	0:0	2	(
water	9:17	0:0	2	sbr
op	9:20	0:0	2	->
water	9:22	0:0	2	n
op	9:23	0:0	2	[
water	9:24	0:0	2	1
op	9:25	0:0	2	]
op	9:27	0:0	2	+
water	9:29	0:0	2	1
water	9:30	0:0	2	)
op	9:32	0:0	2	>>
water	9:35	0:0	2	1
water	9:36	0:0	2	;
call	10:4	11:53	2	memcpy
arg	10:11	10:27	3	sbr->f_tablehigh
water	10:11	0:0	4	sbr
op	10:14	0:0	4	->
water	10:16	0:0	4	f_tablehigh
arg	10:29	10:79	3	&sbr->f_master[sbr->spectrum_params.bs_xover_band]
op	10:29	0:0	4	&
water	10:30	0:0	4	sbr
op	10:33	0:0	4	->
water	10:35	0:0	4	f_master
op	10:43	0:0	4	[
water	10:44	0:0	4	sbr
op	10:47	0:0	4	->
water	10:49	0:0	4	spectrum_params
op	10:64	0:0	4	.
water	10:65	0:0	4	bs_xover_band
op	10:78	0:0	4	]
arg	11:11	11:53	3	(sbr->n[1]+1)*sizeof(sbr->f_master[0])
water	11:11	0:0	4	(
water	11:12	0:0	4	sbr
op	11:15	0:0	4	->
water	11:17	0:0	4	n
op	11:18	0:0	4	[
water	11:19	0:0	4	1
op	11:20	0:0	4	]
op	11:22	0:0	4	+
water	11:24	0:0	4	1
water	11:25	0:0	4	)
op	11:27	0:0	4	*
op	11:29	0:0	4	sizeof
water	11:35	0:0	4	(
water	11:36	0:0	4	sbr
op	11:39	0:0	4	->
water	11:41	0:0	4	f_master
op	11:49	0:0	4	[
water	11:50	0:0	4	0
op	11:51	0:0	4	]
water	11:52	0:0	4	)
water	11:54	0:0	2	;
water	12:4	0:0	2	sbr
op	12:7	0:0	2	->
water	12:9	0:0	2	m
op	12:10	0:0	2	[
water	12:11	0:0	2	1
op	12:12	0:0	2	]
op	12:14	0:0	2	=
water	12:16	0:0	2	sbr
op	12:19	0:0	2	->
water	12:21	0:0	2	f_tablehigh
op	12:32	0:0	2	[
water	12:33	0:0	2	sbr
op	12:36	0:0	2	->
water	12:38	0:0	2	n
op	12:39	0:0	2	[
water	12:40	0:0	2	1
op	12:41	0:0	2	]
op	12:42	0:0	2	]
op	12:44	0:0	2	-
water	12:46	0:0	2	sbr
op	12:49	0:0	2	->
water	12:51	0:0	2	f_tablehigh
op	12:62	0:0	2	[
water	12:63	0:0	2	0
op	12:64	0:0	2	]
water	12:65	0:0	2	;
water	13:4	0:0	2	sbr
op	13:7	0:0	2	->
water	13:9	0:0	2	kx
op	13:11	0:0	2	[
water	13:12	0:0	2	1
op	13:13	0:0	2	]
op	13:15	0:0	2	=
water	13:17	0:0	2	sbr
op	13:20	0:0	2	->
water	13:22	0:0	2	f_tablehigh
op	13:33	0:0	2	[
water	13:34	0:0	2	0
op	13:35	0:0	2	]
water	13:36	0:0	2	;
if	15:4	19:4	2	(sbr -> kx [ 1 ] + sbr -> m [ 1 ] > 64)
cond	15:8	15:33	3	sbr -> kx [ 1 ] + sbr -> m [ 1 ] > 64
water	15:8	0:0	4	sbr
op	15:11	0:0	4	->
water	15:13	0:0	4	kx
op	15:15	0:0	4	[
water	15:16	0:0	4	1
op	15:17	0:0	4	]
op	15:19	0:0	4	+
water	15:21	0:0	4	sbr
op	15:24	0:0	4	->
water	15:26	0:0	4	m
op	15:27	0:0	4	[
water	15:28	0:0	4	1
op	15:29	0:0	4	]
op	15:31	0:0	4	>
water	15:33	0:0	4	64
stmts	15:37	19:4	3	
water	15:37	0:0	4	{
call	16:8	17:77	4	av_log
arg	16:15	16:24	5	ac->avctx
water	16:15	0:0	6	ac
op	16:17	0:0	6	->
water	16:19	0:0	6	avctx
arg	16:26	16:38	5	AV_LOG_ERROR
water	16:26	0:0	6	AV_LOG_ERROR
arg	17:15	17:53	5	"Stop frequency border too high: %d\n"
water	17:15	0:0	6	"Stop frequency border too high: %d\n"
arg	17:55	17:77	5	sbr->kx[1]+sbr->m[1]
water	17:55	0:0	6	sbr
op	17:58	0:0	6	->
water	17:60	0:0	6	kx
op	17:62	0:0	6	[
water	17:63	0:0	6	1
op	17:64	0:0	6	]
op	17:66	0:0	6	+
water	17:68	0:0	6	sbr
op	17:71	0:0	6	->
water	17:73	0:0	6	m
op	17:74	0:0	6	[
water	17:75	0:0	6	1
op	17:76	0:0	6	]
water	17:78	0:0	4	;
return	18:8	18:17	4	-1
op	18:15	0:0	5	-
water	18:16	0:0	5	1
water	19:4	0:0	4	}
if	20:4	23:4	2	(sbr -> kx [ 1 ] > 32)
cond	20:8	20:21	3	sbr -> kx [ 1 ] > 32
water	20:8	0:0	4	sbr
op	20:11	0:0	4	->
water	20:13	0:0	4	kx
op	20:15	0:0	4	[
water	20:16	0:0	4	1
op	20:17	0:0	4	]
op	20:19	0:0	4	>
water	20:21	0:0	4	32
stmts	20:25	23:4	3	
water	20:25	0:0	4	{
call	21:8	21:91	4	av_log
arg	21:15	21:24	5	ac->avctx
water	21:15	0:0	6	ac
op	21:17	0:0	6	->
water	21:19	0:0	6	avctx
arg	21:26	21:38	5	AV_LOG_ERROR
water	21:26	0:0	6	AV_LOG_ERROR
arg	21:40	21:79	5	"Start frequency border too high: %d\n"
water	21:40	0:0	6	"Start frequency border too high: %d\n"
arg	21:81	21:91	5	sbr->kx[1]
water	21:81	0:0	6	sbr
op	21:84	0:0	6	->
water	21:86	0:0	6	kx
op	21:88	0:0	6	[
water	21:89	0:0	6	1
op	21:90	0:0	6	]
water	21:92	0:0	4	;
return	22:8	22:17	4	-1
op	22:15	0:0	5	-
water	22:16	0:0	5	1
water	23:4	0:0	4	}
water	24:4	0:0	2	sbr
op	24:7	0:0	2	->
water	24:9	0:0	2	f_tablelow
op	24:19	0:0	2	[
water	24:20	0:0	2	0
op	24:21	0:0	2	]
op	24:23	0:0	2	=
water	24:25	0:0	2	sbr
op	24:28	0:0	2	->
water	24:30	0:0	2	f_tablehigh
op	24:41	0:0	2	[
water	24:42	0:0	2	0
op	24:43	0:0	2	]
water	24:44	0:0	2	;
water	25:4	0:0	2	temp
op	25:9	0:0	2	=
water	25:11	0:0	2	sbr
op	25:14	0:0	2	->
water	25:16	0:0	2	n
op	25:17	0:0	2	[
water	25:18	0:0	2	1
op	25:19	0:0	2	]
op	25:21	0:0	2	&
water	25:23	0:0	2	1
water	25:24	0:0	2	;
for	26:4	27:59	2	(k = 1 ;k <= sbr -> n [ 0 ];k ++)
forinit	26:9	26:14	3	k = 1 ;
water	26:9	0:0	4	k
op	26:11	0:0	4	=
water	26:13	0:0	4	1
water	26:14	0:0	4	;
cond	26:16	26:29	3	k <= sbr -> n [ 0 ]
water	26:16	0:0	4	k
op	26:18	0:0	4	<=
water	26:21	0:0	4	sbr
op	26:24	0:0	4	->
water	26:26	0:0	4	n
op	26:27	0:0	4	[
water	26:28	0:0	4	0
op	26:29	0:0	4	]
forexpr	26:32	26:33	3	k ++
water	26:32	0:0	4	k
op	26:33	0:0	4	++
stmts	27:8	27:59	3	
water	27:8	0:0	4	sbr
op	27:11	0:0	4	->
water	27:13	0:0	4	f_tablelow
op	27:23	0:0	4	[
water	27:24	0:0	4	k
op	27:25	0:0	4	]
op	27:27	0:0	4	=
water	27:29	0:0	4	sbr
op	27:32	0:0	4	->
water	27:34	0:0	4	f_tablehigh
op	27:45	0:0	4	[
water	27:46	0:0	4	2
op	27:48	0:0	4	*
water	27:50	0:0	4	k
op	27:52	0:0	4	-
water	27:54	0:0	4	temp
op	27:58	0:0	4	]
water	27:59	0:0	4	;
water	29:4	0:0	2	temp
op	29:9	0:0	2	=
water	29:11	0:0	2	(
water	29:12	0:0	2	sbr
op	29:15	0:0	2	->
water	29:17	0:0	2	k
op	29:18	0:0	2	[
water	29:19	0:0	2	2
op	29:20	0:0	2	]
op	29:22	0:0	2	<<
water	29:25	0:0	2	23
water	29:27	0:0	2	)
op	29:29	0:0	2	/
water	29:31	0:0	2	sbr
op	29:34	0:0	2	->
water	29:36	0:0	2	kx
op	29:38	0:0	2	[
water	29:39	0:0	2	1
op	29:40	0:0	2	]
water	29:41	0:0	2	;
while	30:4	33:4	2	(temp < 0 x40000000)
cond	30:11	30:19	3	temp < 0 x40000000
water	30:11	0:0	4	temp
op	30:16	0:0	4	<
water	30:18	0:0	4	0
water	30:19	0:0	4	x40000000
stmts	30:30	33:4	3	
water	30:30	0:0	4	{
water	31:8	0:0	4	temp
op	31:13	0:0	4	<<=
water	31:17	0:0	4	1
water	31:18	0:0	4	;
water	32:8	0:0	4	nz
op	32:10	0:0	4	++
water	32:12	0:0	4	;
water	33:4	0:0	4	}
water	34:4	0:0	2	temp
op	34:9	0:0	2	=
call	34:11	34:38	2	fixed_log
arg	34:21	34:38	3	temp-0x80000000
water	34:21	0:0	4	temp
op	34:26	0:0	4	-
water	34:28	0:0	4	0
water	34:29	0:0	4	x80000000
water	34:39	0:0	2	;
water	35:4	0:0	2	temp
op	35:9	0:0	2	=
call	35:11	35:69	2	(int)
arg	35:17	35:69	3	((int64_t)temp*CONST_RECIP_LN2+0x20000000)>>30
water	35:17	0:0	4	(
water	35:18	0:0	4	(
water	35:19	0:0	4	int64_t
water	35:26	0:0	4	)
water	35:27	0:0	4	temp
op	35:32	0:0	4	*
water	35:34	0:0	4	CONST_RECIP_LN2
op	35:50	0:0	4	+
water	35:52	0:0	4	0
water	35:53	0:0	4	x20000000
water	35:62	0:0	4	)
op	35:64	0:0	4	>>
water	35:67	0:0	4	30
water	35:70	0:0	2	;
water	36:4	0:0	2	temp
op	36:9	0:0	2	=
water	36:11	0:0	2	(
water	36:12	0:0	2	(
water	36:13	0:0	2	(
water	36:14	0:0	2	temp
op	36:19	0:0	2	+
water	36:21	0:0	2	0
water	36:22	0:0	2	x80
water	36:25	0:0	2	)
op	36:27	0:0	2	>>
water	36:30	0:0	2	8
water	36:31	0:0	2	)
op	36:33	0:0	2	+
water	36:35	0:0	2	(
water	36:36	0:0	2	(
water	36:37	0:0	2	8
op	36:39	0:0	2	-
water	36:41	0:0	2	nz
water	36:43	0:0	2	)
op	36:45	0:0	2	<<
water	36:48	0:0	2	23
water	36:50	0:0	2	)
water	36:51	0:0	2	)
op	36:53	0:0	2	*
water	36:55	0:0	2	sbr
op	36:58	0:0	2	->
water	36:60	0:0	2	spectrum_params
op	36:75	0:0	2	.
water	36:76	0:0	2	bs_noise_bands
water	36:90	0:0	2	;
water	37:4	0:0	2	sbr
op	37:7	0:0	2	->
water	37:9	0:0	2	n_q
op	37:13	0:0	2	=
water	37:15	0:0	2	(
water	37:16	0:0	2	temp
op	37:21	0:0	2	+
water	37:23	0:0	2	0
water	37:24	0:0	2	x400000
water	37:31	0:0	2	)
op	37:33	0:0	2	>>
water	37:36	0:0	2	23
water	37:38	0:0	2	;
if	38:4	39:20	2	(sbr -> n_q < 1)
cond	38:8	38:19	3	sbr -> n_q < 1
water	38:8	0:0	4	sbr
op	38:11	0:0	4	->
water	38:13	0:0	4	n_q
op	38:17	0:0	4	<
water	38:19	0:0	4	1
stmts	39:8	39:20	3	
water	39:8	0:0	4	sbr
op	39:11	0:0	4	->
water	39:13	0:0	4	n_q
op	39:17	0:0	4	=
water	39:19	0:0	4	1
water	39:20	0:0	4	;
water	41:4	0:0	2	sbr
op	41:7	0:0	2	->
water	41:9	0:0	2	n_q
op	41:13	0:0	2	=
call	41:15	42:68	2	FFMAX
arg	41:21	41:22	3	1
water	41:21	0:0	4	1
arg	41:24	42:68	3	lrintf(sbr->spectrum_params.bs_noise_bands*log2f(sbr->k[2]/(float)sbr->kx[1]))
call	41:24	42:67	4	lrintf
arg	41:31	42:67	5	sbr->spectrum_params.bs_noise_bands*log2f(sbr->k[2]/(float)sbr->kx[1])
water	41:31	0:0	6	sbr
op	41:34	0:0	6	->
water	41:36	0:0	6	spectrum_params
op	41:51	0:0	6	.
water	41:52	0:0	6	bs_noise_bands
call	41:67	42:66	6	*log2f
arg	42:37	42:66	7	sbr->k[2]/(float)sbr->kx[1]
water	42:37	0:0	8	sbr
op	42:40	0:0	8	->
water	42:42	0:0	8	k
op	42:43	0:0	8	[
water	42:44	0:0	8	2
op	42:45	0:0	8	]
op	42:47	0:0	8	/
water	42:49	0:0	8	(
water	42:50	0:0	8	float
water	42:55	0:0	8	)
water	42:56	0:0	8	sbr
op	42:59	0:0	8	->
water	42:61	0:0	8	kx
op	42:63	0:0	8	[
water	42:64	0:0	8	1
op	42:65	0:0	8	]
water	42:69	0:0	2	;
if	44:4	47:4	2	(sbr -> n_q > 5)
cond	44:8	44:19	3	sbr -> n_q > 5
water	44:8	0:0	4	sbr
op	44:11	0:0	4	->
water	44:13	0:0	4	n_q
op	44:17	0:0	4	>
water	44:19	0:0	4	5
stmts	44:22	47:4	3	
water	44:22	0:0	4	{
call	45:8	45:92	4	av_log
arg	45:15	45:24	5	ac->avctx
water	45:15	0:0	6	ac
op	45:17	0:0	6	->
water	45:19	0:0	6	avctx
arg	45:26	45:38	5	AV_LOG_ERROR
water	45:26	0:0	6	AV_LOG_ERROR
arg	45:40	45:82	5	"Too many noise floor scale factors: %d\n"
water	45:40	0:0	6	"Too many noise floor scale factors: %d\n"
arg	45:84	45:92	5	sbr->n_q
water	45:84	0:0	6	sbr
op	45:87	0:0	6	->
water	45:89	0:0	6	n_q
water	45:93	0:0	4	;
return	46:8	46:17	4	-1
op	46:15	0:0	5	-
water	46:16	0:0	5	1
water	47:4	0:0	4	}
water	48:4	0:0	2	sbr
op	48:7	0:0	2	->
water	48:9	0:0	2	f_tablenoise
op	48:21	0:0	2	[
water	48:22	0:0	2	0
op	48:23	0:0	2	]
op	48:25	0:0	2	=
water	48:27	0:0	2	sbr
op	48:30	0:0	2	->
water	48:32	0:0	2	f_tablelow
op	48:42	0:0	2	[
water	48:43	0:0	2	0
op	48:44	0:0	2	]
water	48:45	0:0	2	;
water	49:4	0:0	2	temp
op	49:9	0:0	2	=
water	49:11	0:0	2	0
water	49:12	0:0	2	;
for	50:4	53:4	2	(k = 1 ;k <= sbr -> n_q;k ++)
forinit	50:9	50:14	3	k = 1 ;
water	50:9	0:0	4	k
op	50:11	0:0	4	=
water	50:13	0:0	4	1
water	50:14	0:0	4	;
cond	50:16	50:26	3	k <= sbr -> n_q
water	50:16	0:0	4	k
op	50:18	0:0	4	<=
water	50:21	0:0	4	sbr
op	50:24	0:0	4	->
water	50:26	0:0	4	n_q
forexpr	50:31	50:32	3	k ++
water	50:31	0:0	4	k
op	50:32	0:0	4	++
stmts	50:36	53:4	3	
water	50:36	0:0	4	{
water	51:8	0:0	4	temp
op	51:13	0:0	4	+=
water	51:16	0:0	4	(
water	51:17	0:0	4	sbr
op	51:20	0:0	4	->
water	51:22	0:0	4	n
op	51:23	0:0	4	[
water	51:24	0:0	4	0
op	51:25	0:0	4	]
op	51:27	0:0	4	-
water	51:29	0:0	4	temp
water	51:33	0:0	4	)
op	51:35	0:0	4	/
water	51:37	0:0	4	(
water	51:38	0:0	4	sbr
op	51:41	0:0	4	->
water	51:43	0:0	4	n_q
op	51:47	0:0	4	+
water	51:49	0:0	4	1
op	51:51	0:0	4	-
water	51:53	0:0	4	k
water	51:54	0:0	4	)
water	51:55	0:0	4	;
water	52:8	0:0	4	sbr
op	52:11	0:0	4	->
water	52:13	0:0	4	f_tablenoise
op	52:25	0:0	4	[
water	52:26	0:0	4	k
op	52:27	0:0	4	]
op	52:29	0:0	4	=
water	52:31	0:0	4	sbr
op	52:34	0:0	4	->
water	52:36	0:0	4	f_tablelow
op	52:46	0:0	4	[
water	52:47	0:0	4	temp
op	52:51	0:0	4	]
water	52:52	0:0	4	;
water	53:4	0:0	4	}
if	54:4	55:17	2	(sbr_hf_calc_npatches (ac ,sbr ) < 0)
cond	54:8	54:40	3	sbr_hf_calc_npatches (ac ,sbr ) < 0
call	54:8	54:36	4	sbr_hf_calc_npatches
arg	54:29	54:31	5	ac
water	54:29	0:0	6	ac
arg	54:33	54:36	5	sbr
water	54:33	0:0	6	sbr
op	54:38	0:0	4	<
water	54:40	0:0	4	0
stmts	55:8	55:17	3	
return	55:8	55:17	4	-1
op	55:15	0:0	5	-
water	55:16	0:0	5	1
call	56:4	56:27	2	sbr_make_f_tablelim
arg	56:24	56:27	3	sbr
water	56:24	0:0	4	sbr
water	56:28	0:0	2	;
water	57:4	0:0	2	sbr
op	57:7	0:0	2	->
water	57:9	0:0	2	data
op	57:13	0:0	2	[
water	57:14	0:0	2	0
op	57:15	0:0	2	]
op	57:16	0:0	2	.
water	57:17	0:0	2	f_indexnoise
op	57:30	0:0	2	=
water	57:32	0:0	2	0
water	57:33	0:0	2	;
water	58:4	0:0	2	sbr
op	58:7	0:0	2	->
water	58:9	0:0	2	data
op	58:13	0:0	2	[
water	58:14	0:0	2	1
op	58:15	0:0	2	]
op	58:16	0:0	2	.
water	58:17	0:0	2	f_indexnoise
op	58:30	0:0	2	=
water	58:32	0:0	2	0
water	58:33	0:0	2	;
return	59:4	59:12	2	0
water	59:11	0:0	3	0

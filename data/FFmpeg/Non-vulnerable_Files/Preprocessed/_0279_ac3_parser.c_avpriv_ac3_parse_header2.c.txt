func	1:0	84:0	0	int	avpriv_ac3_parse_header2
params	1:28	0:0	1	
param	1:29	1:47	2	GetBitContext *	gbc
param	1:49	1:69	2	AC3HeaderInfo * *	phdr
stmnts	0:0	83:12	1	
decl	3:4	3:23	2	int	frame_size_code
decl	4:4	4:22	2	AC3HeaderInfo	*hdr
if	5:4	6:49	2	(! * phdr)
cond	5:8	5:10	3	! * phdr
op	5:8	0:0	4	!
op	5:9	0:0	4	*
water	5:10	0:0	4	phdr
stmts	6:8	6:49	3	
op	6:8	0:0	4	*
water	6:9	0:0	4	phdr
op	6:14	0:0	4	=
call	6:16	6:48	4	av_mallocz
arg	6:27	6:48	5	sizeof(AC3HeaderInfo)
op	6:27	0:0	6	sizeof
water	6:33	0:0	6	(
water	6:34	0:0	6	AC3HeaderInfo
water	6:47	0:0	6	)
water	6:49	0:0	4	;
if	7:4	8:30	2	(! * phdr)
cond	7:8	7:10	3	! * phdr
op	7:8	0:0	4	!
op	7:9	0:0	4	*
water	7:10	0:0	4	phdr
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(ENOMEM)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	ENOMEM
water	8:23	0:0	7	ENOMEM
water	9:4	0:0	2	hdr
op	9:8	0:0	2	=
op	9:10	0:0	2	*
water	9:11	0:0	2	phdr
water	9:15	0:0	2	;
call	10:4	10:31	2	memset
arg	10:11	10:14	3	hdr
water	10:11	0:0	4	hdr
arg	10:16	10:17	3	0
water	10:16	0:0	4	0
arg	10:19	10:31	3	sizeof(*hdr)
op	10:19	0:0	4	sizeof
water	10:25	0:0	4	(
op	10:26	0:0	4	*
water	10:27	0:0	4	hdr
water	10:30	0:0	4	)
water	10:32	0:0	2	;
water	11:4	0:0	2	hdr
op	11:7	0:0	2	->
water	11:9	0:0	2	sync_word
op	11:19	0:0	2	=
call	11:21	11:37	2	get_bits
arg	11:30	11:33	3	gbc
water	11:30	0:0	4	gbc
arg	11:35	11:37	3	16
water	11:35	0:0	4	16
water	11:38	0:0	2	;
if	12:4	13:39	2	(hdr -> sync_word != 0 x0B77)
cond	12:7	12:26	3	hdr -> sync_word != 0 x0B77
water	12:7	0:0	4	hdr
op	12:10	0:0	4	->
water	12:12	0:0	4	sync_word
op	12:22	0:0	4	!=
water	12:25	0:0	4	0
water	12:26	0:0	4	x0B77
stmts	13:8	13:39	3	
return	13:8	13:39	4	AAC_AC3_PARSE_ERROR_SYNC
water	13:15	0:0	5	AAC_AC3_PARSE_ERROR_SYNC
water	15:4	0:0	2	hdr
op	15:7	0:0	2	->
water	15:9	0:0	2	bitstream_id
op	15:22	0:0	2	=
call	15:24	15:46	2	show_bits_long
arg	15:39	15:42	3	gbc
water	15:39	0:0	4	gbc
arg	15:44	15:46	3	29
water	15:44	0:0	4	29
op	15:48	0:0	2	&
water	15:50	0:0	2	0
water	15:51	0:0	2	x1F
water	15:54	0:0	2	;
if	16:4	17:39	2	(hdr -> bitstream_id > 16)
cond	16:7	16:27	3	hdr -> bitstream_id > 16
water	16:7	0:0	4	hdr
op	16:10	0:0	4	->
water	16:12	0:0	4	bitstream_id
op	16:25	0:0	4	>
water	16:27	0:0	4	16
stmts	17:8	17:39	3	
return	17:8	17:39	4	AAC_AC3_PARSE_ERROR_BSID
water	17:15	0:0	5	AAC_AC3_PARSE_ERROR_BSID
water	18:4	0:0	2	hdr
op	18:7	0:0	2	->
water	18:9	0:0	2	num_blocks
op	18:20	0:0	2	=
water	18:22	0:0	2	6
water	18:23	0:0	2	;
water	20:4	0:0	2	hdr
op	20:7	0:0	2	->
water	20:9	0:0	2	center_mix_level
op	20:28	0:0	2	=
water	20:30	0:0	2	5
water	20:31	0:0	2	;
water	21:4	0:0	2	hdr
op	21:7	0:0	2	->
water	21:9	0:0	2	surround_mix_level
op	21:28	0:0	2	=
water	21:30	0:0	2	6
water	21:31	0:0	2	;
water	23:4	0:0	2	hdr
op	23:7	0:0	2	->
water	23:9	0:0	2	dolby_surround_mode
op	23:29	0:0	2	=
water	23:31	0:0	2	AC3_DSURMOD_NOTINDICATED
water	23:55	0:0	2	;
if	24:4	52:4	2	(hdr -> bitstream_id <= 10)
cond	24:7	24:28	3	hdr -> bitstream_id <= 10
water	24:7	0:0	4	hdr
op	24:10	0:0	4	->
water	24:12	0:0	4	bitstream_id
op	24:25	0:0	4	<=
water	24:28	0:0	4	10
stmts	24:32	52:4	3	
water	24:32	0:0	4	{
water	26:8	0:0	4	hdr
op	26:11	0:0	4	->
water	26:13	0:0	4	crc1
op	26:18	0:0	4	=
call	26:20	26:36	4	get_bits
arg	26:29	26:32	5	gbc
water	26:29	0:0	6	gbc
arg	26:34	26:36	5	16
water	26:34	0:0	6	16
water	26:37	0:0	4	;
water	27:8	0:0	4	hdr
op	27:11	0:0	4	->
water	27:13	0:0	4	sr_code
op	27:21	0:0	4	=
call	27:23	27:38	4	get_bits
arg	27:32	27:35	5	gbc
water	27:32	0:0	6	gbc
arg	27:37	27:38	5	2
water	27:37	0:0	6	2
water	27:39	0:0	4	;
if	28:8	29:50	4	(hdr -> sr_code == 3)
cond	28:11	28:27	5	hdr -> sr_code == 3
water	28:11	0:0	6	hdr
op	28:14	0:0	6	->
water	28:16	0:0	6	sr_code
op	28:24	0:0	6	==
water	28:27	0:0	6	3
stmts	29:12	29:50	5	
return	29:12	29:50	6	AAC_AC3_PARSE_ERROR_SAMPLE_RATE
water	29:19	0:0	7	AAC_AC3_PARSE_ERROR_SAMPLE_RATE
water	30:8	0:0	4	frame_size_code
op	30:24	0:0	4	=
call	30:26	30:41	4	get_bits
arg	30:35	30:38	5	gbc
water	30:35	0:0	6	gbc
arg	30:40	30:41	5	6
water	30:40	0:0	6	6
water	30:42	0:0	4	;
if	31:8	32:49	4	(frame_size_code > 37)
cond	31:11	31:29	5	frame_size_code > 37
water	31:11	0:0	6	frame_size_code
op	31:27	0:0	6	>
water	31:29	0:0	6	37
stmts	32:12	32:49	5	
return	32:12	32:49	6	AAC_AC3_PARSE_ERROR_FRAME_SIZE
water	32:19	0:0	7	AAC_AC3_PARSE_ERROR_FRAME_SIZE
call	33:8	33:24	4	skip_bits
arg	33:18	33:21	5	gbc
water	33:18	0:0	6	gbc
arg	33:23	33:24	5	5
water	33:23	0:0	6	5
water	33:25	0:0	4	;
water	34:8	0:0	4	hdr
op	34:11	0:0	4	->
water	34:13	0:0	4	bitstream_mode
op	34:28	0:0	4	=
call	34:30	34:45	4	get_bits
arg	34:39	34:42	5	gbc
water	34:39	0:0	6	gbc
arg	34:44	34:45	5	3
water	34:44	0:0	6	3
water	34:46	0:0	4	;
water	35:8	0:0	4	hdr
op	35:11	0:0	4	->
water	35:13	0:0	4	channel_mode
op	35:26	0:0	4	=
call	35:28	35:43	4	get_bits
arg	35:37	35:40	5	gbc
water	35:37	0:0	6	gbc
arg	35:42	35:43	5	3
water	35:42	0:0	6	3
water	35:44	0:0	4	;
if	36:8	38:8	4	(hdr -> channel_mode == AC3_CHMODE_STEREO)
cond	36:11	36:32	5	hdr -> channel_mode == AC3_CHMODE_STEREO
water	36:11	0:0	6	hdr
op	36:14	0:0	6	->
water	36:16	0:0	6	channel_mode
op	36:29	0:0	6	==
water	36:32	0:0	6	AC3_CHMODE_STEREO
stmts	36:51	38:8	5	
water	36:51	0:0	6	{
water	37:12	0:0	6	hdr
op	37:15	0:0	6	->
water	37:17	0:0	6	dolby_surround_mode
op	37:37	0:0	6	=
call	37:39	37:54	6	get_bits
arg	37:48	37:51	7	gbc
water	37:48	0:0	8	gbc
arg	37:53	37:54	7	2
water	37:53	0:0	8	2
water	37:55	0:0	6	;
water	38:8	0:0	6	}
else	38:10	43:8	4
stmts	38:15	43:8	5	
water	38:15	0:0	6	{
if	39:12	40:75	6	(( hdr -> channel_mode & 1 ) && hdr -> channel_mode != AC3_CHMODE_MONO)
cond	39:15	39:63	7	( hdr -> channel_mode & 1 ) && hdr -> channel_mode != AC3_CHMODE_MONO
water	39:15	0:0	8	(
water	39:16	0:0	8	hdr
op	39:19	0:0	8	->
water	39:21	0:0	8	channel_mode
op	39:34	0:0	8	&
water	39:36	0:0	8	1
water	39:37	0:0	8	)
op	39:39	0:0	8	&&
water	39:42	0:0	8	hdr
op	39:45	0:0	8	->
water	39:47	0:0	8	channel_mode
op	39:60	0:0	8	!=
water	39:63	0:0	8	AC3_CHMODE_MONO
stmts	40:16	40:75	7	
water	40:16	0:0	8	hdr
op	40:19	0:0	8	->
water	40:23	0:0	8	center_mix_level
op	40:40	0:0	8	=
water	40:44	0:0	8	center_levels
op	40:57	0:0	8	[
call	40:58	40:73	8	get_bits
arg	40:67	40:70	9	gbc
water	40:67	0:0	10	gbc
arg	40:72	40:73	9	2
water	40:72	0:0	10	2
op	40:74	0:0	8	]
water	40:75	0:0	8	;
if	41:12	42:75	6	(hdr -> channel_mode & 4)
cond	41:15	41:35	7	hdr -> channel_mode & 4
water	41:15	0:0	8	hdr
op	41:18	0:0	8	->
water	41:20	0:0	8	channel_mode
op	41:33	0:0	8	&
water	41:35	0:0	8	4
stmts	42:16	42:75	7	
water	42:16	0:0	8	hdr
op	42:19	0:0	8	->
water	42:21	0:0	8	surround_mix_level
op	42:40	0:0	8	=
water	42:42	0:0	8	surround_levels
op	42:57	0:0	8	[
call	42:58	42:73	8	get_bits
arg	42:67	42:70	9	gbc
water	42:67	0:0	10	gbc
arg	42:72	42:73	9	2
water	42:72	0:0	10	2
op	42:74	0:0	8	]
water	42:75	0:0	8	;
water	43:8	0:0	6	}
water	44:8	0:0	4	hdr
op	44:11	0:0	4	->
water	44:13	0:0	4	lfe_on
op	44:20	0:0	4	=
call	44:22	44:35	4	get_bits1
arg	44:32	44:35	5	gbc
water	44:32	0:0	6	gbc
water	44:36	0:0	4	;
water	45:8	0:0	4	hdr
op	45:11	0:0	4	->
water	45:13	0:0	4	sr_shift
op	45:22	0:0	4	=
call	45:24	45:50	4	FFMAX
arg	45:30	45:47	5	hdr->bitstream_id
water	45:30	0:0	6	hdr
op	45:33	0:0	6	->
water	45:35	0:0	6	bitstream_id
arg	45:49	45:50	5	8
water	45:49	0:0	6	8
op	45:52	0:0	4	-
water	45:54	0:0	4	8
water	45:55	0:0	4	;
water	46:8	0:0	4	hdr
op	46:11	0:0	4	->
water	46:13	0:0	4	sample_rate
op	46:25	0:0	4	=
water	46:27	0:0	4	ff_ac3_sample_rate_tab
op	46:49	0:0	4	[
water	46:50	0:0	4	hdr
op	46:53	0:0	4	->
water	46:55	0:0	4	sr_code
op	46:62	0:0	4	]
op	46:64	0:0	4	>>
water	46:67	0:0	4	hdr
op	46:70	0:0	4	->
water	46:72	0:0	4	sr_shift
water	46:80	0:0	4	;
water	47:8	0:0	4	hdr
op	47:11	0:0	4	->
water	47:13	0:0	4	bit_rate
op	47:22	0:0	4	=
water	47:24	0:0	4	(
water	47:25	0:0	4	ff_ac3_bitrate_tab
op	47:43	0:0	4	[
water	47:44	0:0	4	frame_size_code
op	47:59	0:0	4	>>
water	47:61	0:0	4	1
op	47:62	0:0	4	]
op	47:64	0:0	4	*
water	47:66	0:0	4	1000
water	47:70	0:0	4	)
op	47:72	0:0	4	>>
water	47:75	0:0	4	hdr
op	47:78	0:0	4	->
water	47:80	0:0	4	sr_shift
water	47:88	0:0	4	;
water	48:8	0:0	4	hdr
op	48:11	0:0	4	->
water	48:13	0:0	4	channels
op	48:22	0:0	4	=
water	48:24	0:0	4	ff_ac3_channels_tab
op	48:43	0:0	4	[
water	48:44	0:0	4	hdr
op	48:47	0:0	4	->
water	48:49	0:0	4	channel_mode
op	48:61	0:0	4	]
op	48:63	0:0	4	+
water	48:65	0:0	4	hdr
op	48:68	0:0	4	->
water	48:70	0:0	4	lfe_on
water	48:76	0:0	4	;
water	49:8	0:0	4	hdr
op	49:11	0:0	4	->
water	49:13	0:0	4	frame_size
op	49:24	0:0	4	=
water	49:26	0:0	4	ff_ac3_frame_size_tab
op	49:47	0:0	4	[
water	49:48	0:0	4	frame_size_code
op	49:63	0:0	4	]
op	49:64	0:0	4	[
water	49:65	0:0	4	hdr
op	49:68	0:0	4	->
water	49:70	0:0	4	sr_code
op	49:77	0:0	4	]
op	49:79	0:0	4	*
water	49:81	0:0	4	2
water	49:82	0:0	4	;
water	50:8	0:0	4	hdr
op	50:11	0:0	4	->
water	50:13	0:0	4	frame_type
op	50:24	0:0	4	=
water	50:26	0:0	4	EAC3_FRAME_TYPE_AC3_CONVERT
water	50:53	0:0	4	;
water	51:8	0:0	4	hdr
op	51:11	0:0	4	->
water	51:13	0:0	4	substreamid
op	51:25	0:0	4	=
water	51:27	0:0	4	0
water	51:28	0:0	4	;
water	52:4	0:0	4	}
else	52:6	79:4	2
stmts	52:11	79:4	3	
water	52:11	0:0	4	{
water	54:8	0:0	4	hdr
op	54:11	0:0	4	->
water	54:13	0:0	4	crc1
op	54:18	0:0	4	=
water	54:20	0:0	4	0
water	54:21	0:0	4	;
water	55:8	0:0	4	hdr
op	55:11	0:0	4	->
water	55:13	0:0	4	frame_type
op	55:24	0:0	4	=
call	55:26	55:41	4	get_bits
arg	55:35	55:38	5	gbc
water	55:35	0:0	6	gbc
arg	55:40	55:41	5	2
water	55:40	0:0	6	2
water	55:42	0:0	4	;
if	56:8	57:49	4	(hdr -> frame_type == EAC3_FRAME_TYPE_RESERVED)
cond	56:11	56:30	5	hdr -> frame_type == EAC3_FRAME_TYPE_RESERVED
water	56:11	0:0	6	hdr
op	56:14	0:0	6	->
water	56:16	0:0	6	frame_type
op	56:27	0:0	6	==
water	56:30	0:0	6	EAC3_FRAME_TYPE_RESERVED
stmts	57:12	57:49	5	
return	57:12	57:49	6	AAC_AC3_PARSE_ERROR_FRAME_TYPE
water	57:19	0:0	7	AAC_AC3_PARSE_ERROR_FRAME_TYPE
water	58:8	0:0	4	hdr
op	58:11	0:0	4	->
water	58:13	0:0	4	substreamid
op	58:25	0:0	4	=
call	58:27	58:42	4	get_bits
arg	58:36	58:39	5	gbc
water	58:36	0:0	6	gbc
arg	58:41	58:42	5	3
water	58:41	0:0	6	3
water	58:43	0:0	4	;
water	59:8	0:0	4	hdr
op	59:11	0:0	4	->
water	59:13	0:0	4	frame_size
op	59:24	0:0	4	=
water	59:26	0:0	4	(
call	59:27	59:43	4	get_bits
arg	59:36	59:39	5	gbc
water	59:36	0:0	6	gbc
arg	59:41	59:43	5	11
water	59:41	0:0	6	11
op	59:45	0:0	4	+
water	59:47	0:0	4	1
water	59:48	0:0	4	)
op	59:50	0:0	4	<<
water	59:53	0:0	4	1
water	59:54	0:0	4	;
if	60:8	61:49	4	(hdr -> frame_size < AC3_HEADER_SIZE)
cond	60:11	60:29	5	hdr -> frame_size < AC3_HEADER_SIZE
water	60:11	0:0	6	hdr
op	60:14	0:0	6	->
water	60:16	0:0	6	frame_size
op	60:27	0:0	6	<
water	60:29	0:0	6	AC3_HEADER_SIZE
stmts	61:12	61:49	5	
return	61:12	61:49	6	AAC_AC3_PARSE_ERROR_FRAME_SIZE
water	61:19	0:0	7	AAC_AC3_PARSE_ERROR_FRAME_SIZE
water	62:8	0:0	4	hdr
op	62:11	0:0	4	->
water	62:13	0:0	4	sr_code
op	62:21	0:0	4	=
call	62:23	62:38	4	get_bits
arg	62:32	62:35	5	gbc
water	62:32	0:0	6	gbc
arg	62:37	62:38	5	2
water	62:37	0:0	6	2
water	62:39	0:0	4	;
if	63:8	69:8	4	(hdr -> sr_code == 3)
cond	63:12	63:28	5	hdr -> sr_code == 3
water	63:12	0:0	6	hdr
op	63:15	0:0	6	->
water	63:17	0:0	6	sr_code
op	63:25	0:0	6	==
water	63:28	0:0	6	3
stmts	63:31	69:8	5	
water	63:31	0:0	6	{
decl	64:12	64:43	6	int	sr_code2
op	64:25	0:0	6	=
call	64:27	64:42	7	get_bits
arg	64:36	64:39	8	gbc
water	64:36	0:0	9	gbc
arg	64:41	64:42	8	2
water	64:41	0:0	9	2
if	65:12	66:54	6	(sr_code2 == 3)
cond	65:15	65:27	7	sr_code2 == 3
water	65:15	0:0	8	sr_code2
op	65:24	0:0	8	==
water	65:27	0:0	8	3
stmts	66:16	66:54	7	
return	66:16	66:54	8	AAC_AC3_PARSE_ERROR_SAMPLE_RATE
water	66:23	0:0	9	AAC_AC3_PARSE_ERROR_SAMPLE_RATE
water	67:12	0:0	6	hdr
op	67:15	0:0	6	->
water	67:17	0:0	6	sample_rate
op	67:29	0:0	6	=
water	67:31	0:0	6	ff_ac3_sample_rate_tab
op	67:53	0:0	6	[
water	67:54	0:0	6	sr_code2
op	67:62	0:0	6	]
op	67:64	0:0	6	/
water	67:66	0:0	6	2
water	67:67	0:0	6	;
water	68:12	0:0	6	hdr
op	68:15	0:0	6	->
water	68:17	0:0	6	sr_shift
op	68:26	0:0	6	=
water	68:28	0:0	6	1
water	68:29	0:0	6	;
water	69:8	0:0	6	}
else	69:10	73:8	4
stmts	69:15	73:8	5	
water	69:15	0:0	6	{
water	70:12	0:0	6	hdr
op	70:15	0:0	6	->
water	70:17	0:0	6	num_blocks
op	70:28	0:0	6	=
water	70:30	0:0	6	eac3_blocks
op	70:41	0:0	6	[
call	70:42	70:57	6	get_bits
arg	70:51	70:54	7	gbc
water	70:51	0:0	8	gbc
arg	70:56	70:57	7	2
water	70:56	0:0	8	2
op	70:58	0:0	6	]
water	70:59	0:0	6	;
water	71:12	0:0	6	hdr
op	71:15	0:0	6	->
water	71:17	0:0	6	sample_rate
op	71:29	0:0	6	=
water	71:31	0:0	6	ff_ac3_sample_rate_tab
op	71:53	0:0	6	[
water	71:54	0:0	6	hdr
op	71:57	0:0	6	->
water	71:59	0:0	6	sr_code
op	71:66	0:0	6	]
water	71:67	0:0	6	;
water	72:12	0:0	6	hdr
op	72:15	0:0	6	->
water	72:17	0:0	6	sr_shift
op	72:26	0:0	6	=
water	72:28	0:0	6	0
water	72:29	0:0	6	;
water	73:8	0:0	6	}
water	74:8	0:0	4	hdr
op	74:11	0:0	4	->
water	74:13	0:0	4	channel_mode
op	74:26	0:0	4	=
call	74:28	74:43	4	get_bits
arg	74:37	74:40	5	gbc
water	74:37	0:0	6	gbc
arg	74:42	74:43	5	3
water	74:42	0:0	6	3
water	74:44	0:0	4	;
water	75:8	0:0	4	hdr
op	75:11	0:0	4	->
water	75:13	0:0	4	lfe_on
op	75:20	0:0	4	=
call	75:22	75:35	4	get_bits1
arg	75:32	75:35	5	gbc
water	75:32	0:0	6	gbc
water	75:36	0:0	4	;
water	76:8	0:0	4	hdr
op	76:11	0:0	4	->
water	76:13	0:0	4	bit_rate
op	76:22	0:0	4	=
water	76:24	0:0	4	8
water	76:25	0:0	4	LL
op	76:28	0:0	4	*
water	76:30	0:0	4	hdr
op	76:33	0:0	4	->
water	76:35	0:0	4	frame_size
op	76:46	0:0	4	*
water	76:48	0:0	4	hdr
op	76:51	0:0	4	->
water	76:53	0:0	4	sample_rate
op	76:65	0:0	4	/
water	77:24	0:0	4	(
water	77:25	0:0	4	hdr
op	77:28	0:0	4	->
water	77:30	0:0	4	num_blocks
op	77:41	0:0	4	*
water	77:43	0:0	4	256
water	77:46	0:0	4	)
water	77:47	0:0	4	;
water	78:8	0:0	4	hdr
op	78:11	0:0	4	->
water	78:13	0:0	4	channels
op	78:22	0:0	4	=
water	78:24	0:0	4	ff_ac3_channels_tab
op	78:43	0:0	4	[
water	78:44	0:0	4	hdr
op	78:47	0:0	4	->
water	78:49	0:0	4	channel_mode
op	78:61	0:0	4	]
op	78:63	0:0	4	+
water	78:65	0:0	4	hdr
op	78:68	0:0	4	->
water	78:70	0:0	4	lfe_on
water	78:76	0:0	4	;
water	79:4	0:0	4	}
water	80:4	0:0	2	hdr
op	80:7	0:0	2	->
water	80:9	0:0	2	channel_layout
op	80:24	0:0	2	=
water	80:26	0:0	2	avpriv_ac3_channel_layout_tab
op	80:55	0:0	2	[
water	80:56	0:0	2	hdr
op	80:59	0:0	2	->
water	80:61	0:0	2	channel_mode
op	80:73	0:0	2	]
water	80:74	0:0	2	;
if	81:4	82:50	2	(hdr -> lfe_on)
cond	81:8	81:13	3	hdr -> lfe_on
water	81:8	0:0	4	hdr
op	81:11	0:0	4	->
water	81:13	0:0	4	lfe_on
stmts	82:8	82:50	3	
water	82:8	0:0	4	hdr
op	82:11	0:0	4	->
water	82:13	0:0	4	channel_layout
op	82:28	0:0	4	|=
water	82:31	0:0	4	AV_CH_LOW_FREQUENCY
water	82:50	0:0	4	;
return	83:4	83:12	2	0
water	83:11	0:0	3	0

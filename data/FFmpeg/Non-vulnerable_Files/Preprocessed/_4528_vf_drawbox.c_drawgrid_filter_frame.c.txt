func	1:0	27:0	0	static int	drawgrid_filter_frame
params	1:32	0:0	1	
param	1:33	1:53	2	AVFilterLink *	inlink
param	1:55	1:69	2	AVFrame *	frame
stmnts	0:0	26:58	1	
decl	3:4	3:48	2	DrawBoxContext	*drawgrid
op	3:29	0:0	2	=
water	3:31	0:0	2	inlink
op	3:37	0:0	2	->
water	3:39	0:0	2	dst
op	3:42	0:0	2	->
water	3:44	0:0	2	priv
decl	4:4	4:19	2	int	plane
water	4:13	0:0	2	,
decl	4:4	4:19	2	int	x
water	4:16	0:0	2	,
decl	4:4	4:19	2	int	y
decl	5:4	5:19	2	uint8_t	*row[4]
for	6:4	25:4	2	(y = 0 ;y < frame -> height;y ++)
forinit	6:9	6:14	3	y = 0 ;
water	6:9	0:0	4	y
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:27	3	y < frame -> height
water	6:16	0:0	4	y
op	6:18	0:0	4	<
water	6:20	0:0	4	frame
op	6:25	0:0	4	->
water	6:27	0:0	4	height
forexpr	6:35	6:36	3	y ++
water	6:35	0:0	4	y
op	6:36	0:0	4	++
stmts	6:40	25:4	3	
water	6:40	0:0	4	{
water	7:8	0:0	4	row
op	7:11	0:0	4	[
water	7:12	0:0	4	0
op	7:13	0:0	4	]
op	7:15	0:0	4	=
water	7:17	0:0	4	frame
op	7:22	0:0	4	->
water	7:24	0:0	4	data
op	7:28	0:0	4	[
water	7:29	0:0	4	0
op	7:30	0:0	4	]
op	7:32	0:0	4	+
water	7:34	0:0	4	y
op	7:36	0:0	4	*
water	7:38	0:0	4	frame
op	7:43	0:0	4	->
water	7:45	0:0	4	linesize
op	7:53	0:0	4	[
water	7:54	0:0	4	0
op	7:55	0:0	4	]
water	7:56	0:0	4	;
for	8:8	10:63	4	(plane = 1 ;plane < 3;plane ++)
forinit	8:13	8:22	5	plane = 1 ;
water	8:13	0:0	6	plane
op	8:19	0:0	6	=
water	8:21	0:0	6	1
water	8:22	0:0	6	;
cond	8:24	8:32	5	plane < 3
water	8:24	0:0	6	plane
op	8:30	0:0	6	<
water	8:32	0:0	6	3
forexpr	8:35	8:40	5	plane ++
water	8:35	0:0	6	plane
op	8:40	0:0	6	++
stmts	9:12	10:63	5	
water	9:12	0:0	6	row
op	9:15	0:0	6	[
water	9:16	0:0	6	plane
op	9:21	0:0	6	]
op	9:23	0:0	6	=
water	9:25	0:0	6	frame
op	9:30	0:0	6	->
water	9:32	0:0	6	data
op	9:36	0:0	6	[
water	9:37	0:0	6	plane
op	9:42	0:0	6	]
op	9:44	0:0	6	+
water	10:17	0:0	6	frame
op	10:22	0:0	6	->
water	10:24	0:0	6	linesize
op	10:32	0:0	6	[
water	10:33	0:0	6	plane
op	10:38	0:0	6	]
op	10:40	0:0	6	*
water	10:42	0:0	6	(
water	10:43	0:0	6	y
op	10:45	0:0	6	>>
water	10:48	0:0	6	drawgrid
op	10:56	0:0	6	->
water	10:58	0:0	6	vsub
water	10:62	0:0	6	)
water	10:63	0:0	6	;
if	11:8	15:8	4	(drawgrid -> invert_color)
cond	11:12	11:22	5	drawgrid -> invert_color
water	11:12	0:0	6	drawgrid
op	11:20	0:0	6	->
water	11:22	0:0	6	invert_color
stmts	11:36	15:8	5	
water	11:36	0:0	6	{
for	12:12	14:48	6	(x = 0 ;x < frame -> width;x ++)
forinit	12:17	12:22	7	x = 0 ;
water	12:17	0:0	8	x
op	12:19	0:0	8	=
water	12:21	0:0	8	0
water	12:22	0:0	8	;
cond	12:24	12:35	7	x < frame -> width
water	12:24	0:0	8	x
op	12:26	0:0	8	<
water	12:28	0:0	8	frame
op	12:33	0:0	8	->
water	12:35	0:0	8	width
forexpr	12:42	12:43	7	x ++
water	12:42	0:0	8	x
op	12:43	0:0	8	++
stmts	13:16	14:48	7	
if	13:16	14:48	8	(pixel_belongs_to_grid (drawgrid ,x ,y ))
cond	13:20	13:56	9	pixel_belongs_to_grid (drawgrid ,x ,y )
call	13:20	13:56	10	pixel_belongs_to_grid
arg	13:42	13:50	11	drawgrid
water	13:42	0:0	12	drawgrid
arg	13:52	13:53	11	x
water	13:52	0:0	12	x
arg	13:55	13:56	11	y
water	13:55	0:0	12	y
stmts	14:20	14:48	9	
water	14:20	0:0	10	row
op	14:23	0:0	10	[
water	14:24	0:0	10	0
op	14:25	0:0	10	]
op	14:26	0:0	10	[
water	14:27	0:0	10	x
op	14:28	0:0	10	]
op	14:30	0:0	10	=
water	14:32	0:0	10	0
water	14:33	0:0	10	xff
op	14:37	0:0	10	-
water	14:39	0:0	10	row
op	14:42	0:0	10	[
water	14:43	0:0	10	0
op	14:44	0:0	10	]
op	14:45	0:0	10	[
water	14:46	0:0	10	x
op	14:47	0:0	10	]
water	14:48	0:0	10	;
water	15:8	0:0	6	}
else	15:10	24:8	4
stmts	15:15	24:8	5	
water	15:15	0:0	6	{
for	16:12	23:12	6	(x = 0 ;x < frame -> width;x ++)
forinit	16:17	16:22	7	x = 0 ;
water	16:17	0:0	8	x
op	16:19	0:0	8	=
water	16:21	0:0	8	0
water	16:22	0:0	8	;
cond	16:24	16:35	7	x < frame -> width
water	16:24	0:0	8	x
op	16:26	0:0	8	<
water	16:28	0:0	8	frame
op	16:33	0:0	8	->
water	16:35	0:0	8	width
forexpr	16:42	16:43	7	x ++
water	16:42	0:0	8	x
op	16:43	0:0	8	++
stmts	16:47	23:12	7	
water	16:47	0:0	8	{
decl	17:16	17:67	8	double	alpha
op	17:29	0:0	8	=
water	17:31	0:0	8	(
water	17:32	0:0	8	double
water	17:38	0:0	8	)
water	17:39	0:0	8	drawgrid
op	17:47	0:0	8	->
water	17:49	0:0	8	yuv_color
op	17:58	0:0	8	[
water	17:59	0:0	8	A
op	17:60	0:0	8	]
op	17:62	0:0	8	/
water	17:64	0:0	8	255
if	18:16	22:16	8	(pixel_belongs_to_grid (drawgrid ,x ,y ))
cond	18:20	18:56	9	pixel_belongs_to_grid (drawgrid ,x ,y )
call	18:20	18:56	10	pixel_belongs_to_grid
arg	18:42	18:50	11	drawgrid
water	18:42	0:0	12	drawgrid
arg	18:52	18:53	11	x
water	18:52	0:0	12	x
arg	18:55	18:56	11	y
water	18:55	0:0	12	y
stmts	18:59	22:16	9	
water	18:59	0:0	10	{
water	19:20	0:0	10	row
op	19:23	0:0	10	[
water	19:24	0:0	10	0
op	19:25	0:0	10	]
op	19:26	0:0	10	[
water	19:27	0:0	10	x
op	19:46	0:0	10	]
op	19:48	0:0	10	=
water	19:50	0:0	10	(
water	19:51	0:0	10	1
op	19:53	0:0	10	-
water	19:55	0:0	10	alpha
water	19:60	0:0	10	)
op	19:62	0:0	10	*
water	19:64	0:0	10	row
op	19:67	0:0	10	[
water	19:68	0:0	10	0
op	19:69	0:0	10	]
op	19:70	0:0	10	[
water	19:71	0:0	10	x
op	19:90	0:0	10	]
op	19:92	0:0	10	+
water	19:94	0:0	10	alpha
op	19:100	0:0	10	*
water	19:102	0:0	10	drawgrid
op	19:110	0:0	10	->
water	19:112	0:0	10	yuv_color
op	19:121	0:0	10	[
water	19:122	0:0	10	Y
op	19:123	0:0	10	]
water	19:124	0:0	10	;
water	20:20	0:0	10	row
op	20:23	0:0	10	[
water	20:24	0:0	10	1
op	20:25	0:0	10	]
op	20:26	0:0	10	[
water	20:27	0:0	10	x
op	20:29	0:0	10	>>
water	20:32	0:0	10	drawgrid
op	20:40	0:0	10	->
water	20:42	0:0	10	hsub
op	20:46	0:0	10	]
op	20:48	0:0	10	=
water	20:50	0:0	10	(
water	20:51	0:0	10	1
op	20:53	0:0	10	-
water	20:55	0:0	10	alpha
water	20:60	0:0	10	)
op	20:62	0:0	10	*
water	20:64	0:0	10	row
op	20:67	0:0	10	[
water	20:68	0:0	10	1
op	20:69	0:0	10	]
op	20:70	0:0	10	[
water	20:71	0:0	10	x
op	20:73	0:0	10	>>
water	20:76	0:0	10	drawgrid
op	20:84	0:0	10	->
water	20:86	0:0	10	hsub
op	20:90	0:0	10	]
op	20:92	0:0	10	+
water	20:94	0:0	10	alpha
op	20:100	0:0	10	*
water	20:102	0:0	10	drawgrid
op	20:110	0:0	10	->
water	20:112	0:0	10	yuv_color
op	20:121	0:0	10	[
water	20:122	0:0	10	U
op	20:123	0:0	10	]
water	20:124	0:0	10	;
water	21:20	0:0	10	row
op	21:23	0:0	10	[
water	21:24	0:0	10	2
op	21:25	0:0	10	]
op	21:26	0:0	10	[
water	21:27	0:0	10	x
op	21:29	0:0	10	>>
water	21:32	0:0	10	drawgrid
op	21:40	0:0	10	->
water	21:42	0:0	10	hsub
op	21:46	0:0	10	]
op	21:48	0:0	10	=
water	21:50	0:0	10	(
water	21:51	0:0	10	1
op	21:53	0:0	10	-
water	21:55	0:0	10	alpha
water	21:60	0:0	10	)
op	21:62	0:0	10	*
water	21:64	0:0	10	row
op	21:67	0:0	10	[
water	21:68	0:0	10	2
op	21:69	0:0	10	]
op	21:70	0:0	10	[
water	21:71	0:0	10	x
op	21:73	0:0	10	>>
water	21:76	0:0	10	drawgrid
op	21:84	0:0	10	->
water	21:86	0:0	10	hsub
op	21:90	0:0	10	]
op	21:92	0:0	10	+
water	21:94	0:0	10	alpha
op	21:100	0:0	10	*
water	21:102	0:0	10	drawgrid
op	21:110	0:0	10	->
water	21:112	0:0	10	yuv_color
op	21:121	0:0	10	[
water	21:122	0:0	10	V
op	21:123	0:0	10	]
water	21:124	0:0	10	;
water	22:16	0:0	10	}
water	23:12	0:0	8	}
water	24:8	0:0	6	}
water	25:4	0:0	4	}
return	26:4	26:58	2	ff_filter_frame(inlink->dst->outputs[0],frame)
call	26:11	26:57	3	ff_filter_frame
arg	26:27	26:50	4	inlink->dst->outputs[0]
water	26:27	0:0	5	inlink
op	26:33	0:0	5	->
water	26:35	0:0	5	dst
op	26:38	0:0	5	->
water	26:40	0:0	5	outputs
op	26:47	0:0	5	[
water	26:48	0:0	5	0
op	26:49	0:0	5	]
arg	26:52	26:57	4	frame
water	26:52	0:0	5	frame

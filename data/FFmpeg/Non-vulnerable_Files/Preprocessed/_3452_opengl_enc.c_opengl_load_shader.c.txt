func	1:15	29:0	0	GLuint	opengl_load_shader
params	1:40	0:0	1	
param	1:41	1:62	2	OpenGLContext *	opengl
param	1:64	1:75	2	GLenum	type
param	1:77	1:95	2	const char *	source
stmnts	0:0	28:12	1	
decl	3:4	3:56	2	GLuint	shader
op	3:18	0:0	2	=
call	3:20	3:55	3	opengl->glprocs.glCreateShader
arg	3:51	3:55	4	type
water	3:51	0:0	5	type
decl	4:4	4:16	2	GLint	result
if	5:4	8:4	2	(! shader)
cond	5:8	5:9	3	! shader
op	5:8	0:0	4	!
water	5:9	0:0	4	shader
stmts	5:17	8:4	3	
water	5:17	0:0	4	{
call	6:8	6:64	4	av_log
arg	6:15	6:21	5	opengl
water	6:15	0:0	6	opengl
arg	6:23	6:35	5	AV_LOG_ERROR
water	6:23	0:0	6	AV_LOG_ERROR
arg	6:37	6:64	5	"glCreateShader() failed\n"
water	6:37	0:0	6	"glCreateShader() failed\n"
water	6:65	0:0	4	;
return	7:8	7:16	4	0
water	7:15	0:0	5	0
water	8:4	0:0	4	}
call	9:4	9:59	2	opengl->glprocs.glShaderSource
arg	9:35	9:41	3	shader
water	9:35	0:0	4	shader
arg	9:43	9:44	3	1
water	9:43	0:0	4	1
arg	9:46	9:53	3	&source
op	9:46	0:0	4	&
water	9:47	0:0	4	source
arg	9:55	9:59	3	NULL
water	9:55	0:0	4	NULL
water	9:60	0:0	2	;
call	10:4	10:42	2	opengl->glprocs.glCompileShader
arg	10:36	10:42	3	shader
water	10:36	0:0	4	shader
water	10:43	0:0	2	;
call	11:4	11:71	2	opengl->glprocs.glGetShaderiv
arg	11:34	11:40	3	shader
water	11:34	0:0	4	shader
arg	11:42	11:62	3	FF_GL_COMPILE_STATUS
water	11:42	0:0	4	FF_GL_COMPILE_STATUS
arg	11:64	11:71	3	&result
op	11:64	0:0	4	&
water	11:65	0:0	4	result
water	11:72	0:0	2	;
if	12:4	23:4	2	(! result)
cond	12:8	12:9	3	! result
op	12:8	0:0	4	!
water	12:9	0:0	4	result
stmts	12:17	23:4	3	
water	12:17	0:0	4	{
decl	13:8	13:17	4	char	*log
call	14:8	14:76	4	opengl->glprocs.glGetShaderiv
arg	14:38	14:44	5	shader
water	14:38	0:0	6	shader
arg	14:46	14:67	5	FF_GL_INFO_LOG_LENGTH
water	14:46	0:0	6	FF_GL_INFO_LOG_LENGTH
arg	14:69	14:76	5	&result
op	14:69	0:0	6	&
water	14:70	0:0	6	result
water	14:77	0:0	4	;
if	15:8	21:8	4	(result)
cond	15:12	15:12	5	result
water	15:12	0:0	6	result
stmts	15:20	21:8	5	
water	15:20	0:0	6	{
if	16:12	20:12	6	(( log =av_malloc (result ) ))
cond	16:16	16:40	7	( log =av_malloc (result ) )
water	16:16	0:0	8	(
water	16:17	0:0	8	log
op	16:21	0:0	8	=
call	16:23	16:39	8	av_malloc
arg	16:33	16:39	9	result
water	16:33	0:0	10	result
water	16:40	0:0	8	)
stmts	16:43	20:12	7	
water	16:43	0:0	8	{
call	17:16	17:76	8	opengl->glprocs.glGetShaderInfoLog
arg	17:51	17:57	9	shader
water	17:51	0:0	10	shader
arg	17:59	17:65	9	result
water	17:59	0:0	10	result
arg	17:67	17:71	9	NULL
water	17:67	0:0	10	NULL
arg	17:73	17:76	9	log
water	17:73	0:0	10	log
water	17:77	0:0	8	;
call	18:16	18:71	8	av_log
arg	18:23	18:29	9	opengl
water	18:23	0:0	10	opengl
arg	18:31	18:43	9	AV_LOG_ERROR
water	18:31	0:0	10	AV_LOG_ERROR
arg	18:45	18:66	9	"Compile error: %s\n"
water	18:45	0:0	10	"Compile error: %s\n"
arg	18:68	18:71	9	log
water	18:68	0:0	10	log
water	18:72	0:0	8	;
call	19:16	19:27	8	av_free
arg	19:24	19:27	9	log
water	19:24	0:0	10	log
water	19:28	0:0	8	;
water	20:12	0:0	8	}
water	21:8	0:0	6	}
goto	22:8	22:17	4	fail
water	22:13	0:0	5	fail
water	23:4	0:0	4	}
call	24:4	24:29	2	OPENGL_ERROR_CHECK
arg	24:23	24:29	3	opengl
water	24:23	0:0	4	opengl
water	24:30	0:0	2	;
return	25:4	25:17	2	shader
water	25:11	0:0	3	shader
label	26:2	26:6	2	fail :
call	27:4	27:41	2	opengl->glprocs.glDeleteShader
arg	27:35	27:41	3	shader
water	27:35	0:0	4	shader
water	27:42	0:0	2	;
return	28:4	28:12	2	0
water	28:11	0:0	3	0

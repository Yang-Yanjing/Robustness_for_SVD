func	1:0	61:0	0	static int	config_audio_output
params	1:30	0:0	1	
param	1:31	1:52	2	AVFilterLink *	outlink
stmnts	0:0	60:12	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:39	2	AVFilterContext	*ctx
op	4:25	0:0	2	=
water	4:27	0:0	2	outlink
op	4:34	0:0	2	->
water	4:36	0:0	2	src
decl	5:4	5:39	2	EBUR128Context	*ebur128
op	5:28	0:0	2	=
water	5:30	0:0	2	ctx
op	5:33	0:0	2	->
water	5:35	0:0	2	priv
decl	6:4	6:86	2	const int	nb_channels
op	6:26	0:0	2	=
call	6:28	6:85	3	av_get_channel_layout_nb_channels
arg	6:62	6:85	4	outlink->channel_layout
water	6:62	0:0	5	outlink
op	6:69	0:0	5	->
water	6:71	0:0	5	channel_layout
water	8:19	0:0	2	AV_CH_TOP_BACK_LEFT
op	8:38	0:0	2	|
water	8:39	0:0	2	AV_CH_TOP_BACK_CENTER
op	8:60	0:0	2	|
water	8:61	0:0	2	AV_CH_TOP_BACK_RIGHT
op	8:81	0:0	2	|
water	9:19	0:0	2	AV_CH_SIDE_LEFT
op	9:60	0:0	2	|
water	9:61	0:0	2	AV_CH_SIDE_RIGHT
op	9:77	0:0	2	|
water	10:19	0:0	2	AV_CH_SURROUND_DIRECT_LEFT
op	10:60	0:0	2	|
water	10:61	0:0	2	AV_CH_SURROUND_DIRECT_RIGHT
water	10:88	0:0	2	)
water	11:4	0:0	2	ebur128
op	11:11	0:0	2	->
water	11:13	0:0	2	nb_channels
op	11:26	0:0	2	=
water	11:28	0:0	2	nb_channels
water	11:39	0:0	2	;
water	12:4	0:0	2	ebur128
op	12:11	0:0	2	->
water	12:13	0:0	2	ch_weighting
op	12:26	0:0	2	=
call	12:28	12:81	2	av_calloc
arg	12:38	12:49	3	nb_channels
water	12:38	0:0	4	nb_channels
arg	12:51	12:81	3	sizeof(*ebur128->ch_weighting)
op	12:51	0:0	4	sizeof
water	12:57	0:0	4	(
op	12:58	0:0	4	*
water	12:59	0:0	4	ebur128
op	12:66	0:0	4	->
water	12:68	0:0	4	ch_weighting
water	12:80	0:0	4	)
water	12:82	0:0	2	;
if	13:4	14:30	2	(! ebur128 -> ch_weighting)
cond	13:8	13:18	3	! ebur128 -> ch_weighting
op	13:8	0:0	4	!
water	13:9	0:0	4	ebur128
op	13:16	0:0	4	->
water	13:18	0:0	4	ch_weighting
stmts	14:8	14:30	3	
return	14:8	14:30	4	AVERROR(ENOMEM)
call	14:15	14:29	5	AVERROR
arg	14:23	14:29	6	ENOMEM
water	14:23	0:0	7	ENOMEM
for	15:4	32:4	2	(i = 0 ;i < nb_channels;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:20	3	i < nb_channels
water	15:16	0:0	4	i
op	15:18	0:0	4	<
water	15:20	0:0	4	nb_channels
forexpr	15:33	15:34	3	i ++
water	15:33	0:0	4	i
op	15:34	0:0	4	++
stmts	15:38	32:4	3	
water	15:38	0:0	4	{
decl	17:8	17:90	4	const uint16_t	chl
op	17:27	0:0	4	=
call	17:29	17:89	5	av_channel_layout_extract_channel
arg	17:63	17:86	6	outlink->channel_layout
water	17:63	0:0	7	outlink
op	17:70	0:0	7	->
water	17:72	0:0	7	channel_layout
arg	17:88	17:89	6	i
water	17:88	0:0	7	i
if	18:8	20:8	4	(chl & ( AV_CH_LOW_FREQUENCY | AV_CH_LOW_FREQUENCY_2 ))
cond	18:12	18:60	5	chl & ( AV_CH_LOW_FREQUENCY | AV_CH_LOW_FREQUENCY_2 )
water	18:12	0:0	6	chl
op	18:16	0:0	6	&
water	18:18	0:0	6	(
water	18:19	0:0	6	AV_CH_LOW_FREQUENCY
op	18:38	0:0	6	|
water	18:39	0:0	6	AV_CH_LOW_FREQUENCY_2
water	18:60	0:0	6	)
stmts	18:63	20:8	5	
water	18:63	0:0	6	{
water	19:12	0:0	6	ebur128
op	19:19	0:0	6	->
water	19:21	0:0	6	ch_weighting
op	19:33	0:0	6	[
water	19:34	0:0	6	i
op	19:35	0:0	6	]
op	19:37	0:0	6	=
water	19:39	0:0	6	0
water	19:40	0:0	6	;
water	20:8	0:0	6	}
else	20:10	22:8	4
stmts	20:15	22:8	5	
if	20:15	22:8	6	(chl & BACK_MASK)
cond	20:19	20:25	7	chl & BACK_MASK
water	20:19	0:0	8	chl
op	20:23	0:0	8	&
water	20:25	0:0	8	BACK_MASK
stmts	20:36	22:8	7	
water	20:36	0:0	8	{
water	21:12	0:0	8	ebur128
op	21:19	0:0	8	->
water	21:21	0:0	8	ch_weighting
op	21:33	0:0	8	[
water	21:34	0:0	8	i
op	21:35	0:0	8	]
op	21:37	0:0	8	=
water	21:39	0:0	8	1
op	21:40	0:0	8	.
water	21:41	0:0	8	41
water	21:43	0:0	8	;
water	22:8	0:0	8	}
else	22:10	24:8	4
stmts	22:15	24:8	5	
water	22:15	0:0	6	{
water	23:12	0:0	6	ebur128
op	23:19	0:0	6	->
water	23:21	0:0	6	ch_weighting
op	23:33	0:0	6	[
water	23:34	0:0	6	i
op	23:35	0:0	6	]
op	23:37	0:0	6	=
water	23:39	0:0	6	1
op	23:40	0:0	6	.
water	23:41	0:0	6	0
water	23:42	0:0	6	;
water	24:8	0:0	6	}
if	25:8	26:20	4	(! ebur128 -> ch_weighting [ i ])
cond	25:12	25:36	5	! ebur128 -> ch_weighting [ i ]
op	25:12	0:0	6	!
water	25:13	0:0	6	ebur128
op	25:20	0:0	6	->
water	25:22	0:0	6	ch_weighting
op	25:34	0:0	6	[
water	25:35	0:0	6	i
op	25:36	0:0	6	]
stmts	26:12	26:20	5	
continue	26:12	26:20	6	
water	28:8	0:0	4	ebur128
op	28:15	0:0	4	->
water	28:17	0:0	4	i400
op	28:21	0:0	4	.
water	28:22	0:0	4	cache
op	28:27	0:0	4	[
water	28:28	0:0	4	i
op	28:29	0:0	4	]
op	28:32	0:0	4	=
call	28:34	28:87	4	av_calloc
arg	28:44	28:53	5	I400_BINS
water	28:44	0:0	6	I400_BINS
arg	28:56	28:87	5	sizeof(*ebur128->i400.cache[0])
op	28:56	0:0	6	sizeof
water	28:62	0:0	6	(
op	28:63	0:0	6	*
water	28:64	0:0	6	ebur128
op	28:71	0:0	6	->
water	28:73	0:0	6	i400
op	28:77	0:0	6	.
water	28:78	0:0	6	cache
op	28:83	0:0	6	[
water	28:84	0:0	6	0
op	28:85	0:0	6	]
water	28:86	0:0	6	)
water	28:88	0:0	4	;
water	29:8	0:0	4	ebur128
op	29:15	0:0	4	->
water	29:17	0:0	4	i3000
op	29:22	0:0	4	.
water	29:23	0:0	4	cache
op	29:28	0:0	4	[
water	29:29	0:0	4	i
op	29:30	0:0	4	]
op	29:32	0:0	4	=
call	29:34	29:88	4	av_calloc
arg	29:44	29:54	5	I3000_BINS
water	29:44	0:0	6	I3000_BINS
arg	29:56	29:88	5	sizeof(*ebur128->i3000.cache[0])
op	29:56	0:0	6	sizeof
water	29:62	0:0	6	(
op	29:63	0:0	6	*
water	29:64	0:0	6	ebur128
op	29:71	0:0	6	->
water	29:73	0:0	6	i3000
op	29:78	0:0	6	.
water	29:79	0:0	6	cache
op	29:84	0:0	6	[
water	29:85	0:0	6	0
op	29:86	0:0	6	]
water	29:87	0:0	6	)
water	29:89	0:0	4	;
if	30:8	31:34	4	(! ebur128 -> i400 . cache [ i ] || ! ebur128 -> i3000 . cache [ i ])
cond	30:12	30:62	5	! ebur128 -> i400 . cache [ i ] || ! ebur128 -> i3000 . cache [ i ]
op	30:12	0:0	6	!
water	30:13	0:0	6	ebur128
op	30:20	0:0	6	->
water	30:22	0:0	6	i400
op	30:26	0:0	6	.
water	30:27	0:0	6	cache
op	30:32	0:0	6	[
water	30:33	0:0	6	i
op	30:34	0:0	6	]
op	30:36	0:0	6	||
op	30:39	0:0	6	!
water	30:40	0:0	6	ebur128
op	30:47	0:0	6	->
water	30:49	0:0	6	i3000
op	30:54	0:0	6	.
water	30:55	0:0	6	cache
op	30:60	0:0	6	[
water	30:61	0:0	6	i
op	30:62	0:0	6	]
stmts	31:12	31:34	5	
return	31:12	31:34	6	AVERROR(ENOMEM)
call	31:19	31:33	7	AVERROR
arg	31:27	31:33	8	ENOMEM
water	31:27	0:0	9	ENOMEM
water	32:4	0:0	4	}
water	33:4	0:0	2	outlink
op	33:11	0:0	2	->
water	33:13	0:0	2	flags
op	33:19	0:0	2	|=
water	33:22	0:0	2	FF_LINK_FLAG_REQUEST_LOOP
water	33:47	0:0	2	;
if	35:4	53:4	2	(ebur128 -> peak_mode & PEAK_MODE_TRUE_PEAKS)
cond	35:8	35:29	3	ebur128 -> peak_mode & PEAK_MODE_TRUE_PEAKS
water	35:8	0:0	4	ebur128
op	35:15	0:0	4	->
water	35:17	0:0	4	peak_mode
op	35:27	0:0	4	&
water	35:29	0:0	4	PEAK_MODE_TRUE_PEAKS
stmts	35:51	53:4	3	
water	35:51	0:0	4	{
decl	36:8	36:15	4	int	ret
water	37:8	0:0	4	ebur128
op	37:15	0:0	4	->
water	37:17	0:0	4	swr_buf
op	37:28	0:0	4	=
call	37:30	37:81	4	av_malloc_array
arg	37:46	37:57	5	nb_channels
water	37:46	0:0	6	nb_channels
arg	37:59	37:81	5	19200*sizeof(double)
water	37:59	0:0	6	19200
op	37:65	0:0	6	*
op	37:67	0:0	6	sizeof
water	37:73	0:0	6	(
water	37:74	0:0	6	double
water	37:80	0:0	6	)
water	37:82	0:0	4	;
water	38:8	0:0	4	ebur128
op	38:15	0:0	4	->
water	38:17	0:0	4	true_peaks
op	38:28	0:0	4	=
call	38:30	38:81	4	av_calloc
arg	38:40	38:51	5	nb_channels
water	38:40	0:0	6	nb_channels
arg	38:53	38:81	5	sizeof(*ebur128->true_peaks)
op	38:53	0:0	6	sizeof
water	38:59	0:0	6	(
op	38:60	0:0	6	*
water	38:61	0:0	6	ebur128
op	38:68	0:0	6	->
water	38:70	0:0	6	true_peaks
water	38:80	0:0	6	)
water	38:82	0:0	4	;
water	39:8	0:0	4	ebur128
op	39:15	0:0	4	->
water	39:17	0:0	4	true_peaks_per_frame
op	39:38	0:0	4	=
call	39:40	39:101	4	av_calloc
arg	39:50	39:61	5	nb_channels
water	39:50	0:0	6	nb_channels
arg	39:63	39:101	5	sizeof(*ebur128->true_peaks_per_frame)
op	39:63	0:0	6	sizeof
water	39:69	0:0	6	(
op	39:70	0:0	6	*
water	39:71	0:0	6	ebur128
op	39:78	0:0	6	->
water	39:80	0:0	6	true_peaks_per_frame
water	39:100	0:0	6	)
water	39:102	0:0	4	;
water	40:8	0:0	4	ebur128
op	40:15	0:0	4	->
water	40:17	0:0	4	swr_ctx
op	40:28	0:0	4	=
call	40:30	40:40	4	swr_alloc
water	40:41	0:0	4	;
if	41:8	43:34	4	(! ebur128 -> swr_buf || ! ebur128 -> true_peaks || ! ebur128 -> true_peaks_per_frame || ! ebur128 -> swr_ctx)
cond	41:12	42:56	5	! ebur128 -> swr_buf || ! ebur128 -> true_peaks || ! ebur128 -> true_peaks_per_frame || ! ebur128 -> swr_ctx
op	41:12	0:0	6	!
water	41:13	0:0	6	ebur128
op	41:20	0:0	6	->
water	41:22	0:0	6	swr_buf
op	41:30	0:0	6	||
op	41:33	0:0	6	!
water	41:34	0:0	6	ebur128
op	41:41	0:0	6	->
water	41:43	0:0	6	true_peaks
op	41:54	0:0	6	||
op	42:12	0:0	6	!
water	42:13	0:0	6	ebur128
op	42:20	0:0	6	->
water	42:22	0:0	6	true_peaks_per_frame
op	42:43	0:0	6	||
op	42:46	0:0	6	!
water	42:47	0:0	6	ebur128
op	42:54	0:0	6	->
water	42:56	0:0	6	swr_ctx
stmts	43:12	43:34	5	
return	43:12	43:34	6	AVERROR(ENOMEM)
call	43:19	43:33	7	AVERROR
arg	43:27	43:33	8	ENOMEM
water	43:27	0:0	9	ENOMEM
call	44:8	44:91	4	av_opt_set_int
arg	44:23	44:39	5	ebur128->swr_ctx
water	44:23	0:0	6	ebur128
op	44:30	0:0	6	->
water	44:32	0:0	6	swr_ctx
arg	44:41	44:60	5	"in_channel_layout"
water	44:41	0:0	6	"in_channel_layout"
arg	44:65	44:88	5	outlink->channel_layout
water	44:65	0:0	6	outlink
op	44:72	0:0	6	->
water	44:74	0:0	6	channel_layout
arg	44:90	44:91	5	0
water	44:90	0:0	6	0
water	44:92	0:0	4	;
call	45:8	45:88	4	av_opt_set_int
arg	45:23	45:39	5	ebur128->swr_ctx
water	45:23	0:0	6	ebur128
op	45:30	0:0	6	->
water	45:32	0:0	6	swr_ctx
arg	45:41	45:57	5	"in_sample_rate"
water	45:41	0:0	6	"in_sample_rate"
arg	45:65	45:85	5	outlink->sample_rate
water	45:65	0:0	6	outlink
op	45:72	0:0	6	->
water	45:74	0:0	6	sample_rate
arg	45:87	45:88	5	0
water	45:87	0:0	6	0
water	45:89	0:0	4	;
call	46:8	46:83	4	av_opt_set_sample_fmt
arg	46:30	46:46	5	ebur128->swr_ctx
water	46:30	0:0	6	ebur128
op	46:37	0:0	6	->
water	46:39	0:0	6	swr_ctx
arg	46:48	46:63	5	"in_sample_fmt"
water	46:48	0:0	6	"in_sample_fmt"
arg	46:65	46:80	5	outlink->format
water	46:65	0:0	6	outlink
op	46:72	0:0	6	->
water	46:74	0:0	6	format
arg	46:82	46:83	5	0
water	46:82	0:0	6	0
water	46:84	0:0	4	;
call	47:8	47:92	4	av_opt_set_int
arg	47:23	47:39	5	ebur128->swr_ctx
water	47:23	0:0	6	ebur128
op	47:30	0:0	6	->
water	47:32	0:0	6	swr_ctx
arg	47:41	47:61	5	"out_channel_layout"
water	47:41	0:0	6	"out_channel_layout"
arg	47:66	47:89	5	outlink->channel_layout
water	47:66	0:0	6	outlink
op	47:73	0:0	6	->
water	47:75	0:0	6	channel_layout
arg	47:91	47:92	5	0
water	47:91	0:0	6	0
water	47:93	0:0	4	;
call	48:8	48:75	4	av_opt_set_int
arg	48:23	48:39	5	ebur128->swr_ctx
water	48:23	0:0	6	ebur128
op	48:30	0:0	6	->
water	48:32	0:0	6	swr_ctx
arg	48:41	48:58	5	"out_sample_rate"
water	48:41	0:0	6	"out_sample_rate"
arg	48:66	48:72	5	192000
water	48:66	0:0	6	192000
arg	48:74	48:75	5	0
water	48:74	0:0	6	0
water	48:76	0:0	4	;
call	49:8	49:84	4	av_opt_set_sample_fmt
arg	49:30	49:46	5	ebur128->swr_ctx
water	49:30	0:0	6	ebur128
op	49:37	0:0	6	->
water	49:39	0:0	6	swr_ctx
arg	49:48	49:64	5	"out_sample_fmt"
water	49:48	0:0	6	"out_sample_fmt"
arg	49:66	49:81	5	outlink->format
water	49:66	0:0	6	outlink
op	49:73	0:0	6	->
water	49:75	0:0	6	format
arg	49:83	49:84	5	0
water	49:83	0:0	6	0
water	49:85	0:0	4	;
water	50:8	0:0	4	ret
op	50:12	0:0	4	=
call	50:14	50:39	4	swr_init
arg	50:23	50:39	5	ebur128->swr_ctx
water	50:23	0:0	6	ebur128
op	50:30	0:0	6	->
water	50:32	0:0	6	swr_ctx
water	50:40	0:0	4	;
if	51:8	52:22	4	(ret < 0)
cond	51:12	51:18	5	ret < 0
water	51:12	0:0	6	ret
op	51:16	0:0	6	<
water	51:18	0:0	6	0
stmts	52:12	52:22	5	
return	52:12	52:22	6	ret
water	52:19	0:0	7	ret
water	53:4	0:0	4	}
if	55:4	59:4	2	(ebur128 -> peak_mode & PEAK_MODE_SAMPLES_PEAKS)
cond	55:8	55:29	3	ebur128 -> peak_mode & PEAK_MODE_SAMPLES_PEAKS
water	55:8	0:0	4	ebur128
op	55:15	0:0	4	->
water	55:17	0:0	4	peak_mode
op	55:27	0:0	4	&
water	55:29	0:0	4	PEAK_MODE_SAMPLES_PEAKS
stmts	55:54	59:4	3	
water	55:54	0:0	4	{
water	56:8	0:0	4	ebur128
op	56:15	0:0	4	->
water	56:17	0:0	4	sample_peaks
op	56:30	0:0	4	=
call	56:32	56:85	4	av_calloc
arg	56:42	56:53	5	nb_channels
water	56:42	0:0	6	nb_channels
arg	56:55	56:85	5	sizeof(*ebur128->sample_peaks)
op	56:55	0:0	6	sizeof
water	56:61	0:0	6	(
op	56:62	0:0	6	*
water	56:63	0:0	6	ebur128
op	56:70	0:0	6	->
water	56:72	0:0	6	sample_peaks
water	56:84	0:0	6	)
water	56:86	0:0	4	;
if	57:8	58:34	4	(! ebur128 -> sample_peaks)
cond	57:12	57:22	5	! ebur128 -> sample_peaks
op	57:12	0:0	6	!
water	57:13	0:0	6	ebur128
op	57:20	0:0	6	->
water	57:22	0:0	6	sample_peaks
stmts	58:12	58:34	5	
return	58:12	58:34	6	AVERROR(ENOMEM)
call	58:19	58:33	7	AVERROR
arg	58:27	58:33	8	ENOMEM
water	58:27	0:0	9	ENOMEM
water	59:4	0:0	4	}
return	60:4	60:12	2	0
water	60:11	0:0	3	0

func	1:0	57:0	0	static int	read_decode_convert_and_store
params	1:40	0:0	1	
param	1:41	1:58	2	AVAudioFifo *	fifo
param	2:41	2:78	2	AVFormatContext *	input_format_context
param	3:41	3:76	2	AVCodecContext *	input_codec_context
param	4:41	4:77	2	AVCodecContext *	output_codec_context
param	5:41	5:70	2	SwrContext *	resampler_context
param	6:41	6:54	2	int *	finished
stmnts	0:0	56:14	1	
decl	9:4	9:31	2	AVFrame	*input_frame
op	9:25	0:0	2	=
water	9:27	0:0	2	NULL
decl	11:4	11:44	2	uint8_t	**converted_input_samples
op	11:38	0:0	2	=
water	11:40	0:0	2	NULL
decl	12:4	12:20	2	int	data_present
decl	13:4	13:26	2	int	ret
op	13:12	0:0	2	=
water	13:14	0:0	2	AVERROR_EXIT
if	15:4	16:20	2	(init_input_frame (& input_frame ))
cond	15:8	15:37	3	init_input_frame (& input_frame )
call	15:8	15:37	4	init_input_frame
arg	15:25	15:37	5	&input_frame
op	15:25	0:0	6	&
water	15:26	0:0	6	input_frame
stmts	16:8	16:20	3	
goto	16:8	16:20	4	cleanup
water	16:13	0:0	5	cleanup
if	18:4	20:20	2	(decode_audio_frame (input_frame ,input_format_context ,input_codec_context ,& data_present ,finished ))
cond	18:8	19:71	3	decode_audio_frame (input_frame ,input_format_context ,input_codec_context ,& data_present ,finished )
call	18:8	19:71	4	decode_audio_frame
arg	18:27	18:38	5	input_frame
water	18:27	0:0	6	input_frame
arg	18:40	18:60	5	input_format_context
water	18:40	0:0	6	input_format_context
arg	19:27	19:46	5	input_codec_context
water	19:27	0:0	6	input_codec_context
arg	19:48	19:61	5	&data_present
op	19:48	0:0	6	&
water	19:49	0:0	6	data_present
arg	19:63	19:71	5	finished
water	19:63	0:0	6	finished
stmts	20:8	20:20	3	
goto	20:8	20:20	4	cleanup
water	20:13	0:0	5	cleanup
if	26:4	29:4	2	(* finished && ! data_present)
cond	26:8	26:22	3	* finished && ! data_present
op	26:8	0:0	4	*
water	26:9	0:0	4	finished
op	26:18	0:0	4	&&
op	26:21	0:0	4	!
water	26:22	0:0	4	data_present
stmts	26:36	29:4	3	
water	26:36	0:0	4	{
water	27:8	0:0	4	ret
op	27:12	0:0	4	=
water	27:14	0:0	4	0
water	27:15	0:0	4	;
goto	28:8	28:20	4	cleanup
water	28:13	0:0	5	cleanup
water	29:4	0:0	4	}
if	31:4	48:4	2	(data_present)
cond	31:8	31:8	3	data_present
water	31:8	0:0	4	data_present
stmts	31:22	48:4	3	
water	31:22	0:0	4	{
if	33:8	35:24	4	(init_converted_samples (& converted_input_samples ,output_codec_context ,input_frame -> nb_samples ))
cond	33:12	34:58	5	init_converted_samples (& converted_input_samples ,output_codec_context ,input_frame -> nb_samples )
call	33:12	34:58	6	init_converted_samples
arg	33:35	33:59	7	&converted_input_samples
op	33:35	0:0	8	&
water	33:36	0:0	8	converted_input_samples
arg	33:61	33:81	7	output_codec_context
water	33:61	0:0	8	output_codec_context
arg	34:35	34:58	7	input_frame->nb_samples
water	34:35	0:0	8	input_frame
op	34:46	0:0	8	->
water	34:48	0:0	8	nb_samples
stmts	35:12	35:24	5	
goto	35:12	35:24	6	cleanup
water	35:17	0:0	7	cleanup
if	40:8	42:24	4	(convert_samples (( const uint8_t * * ) input_frame -> extended_data ,converted_input_samples ,input_frame -> nb_samples ,resampler_context ))
cond	40:12	41:70	5	convert_samples (( const uint8_t * * ) input_frame -> extended_data ,converted_input_samples ,input_frame -> nb_samples ,resampler_context )
call	40:12	41:70	6	convert_samples
arg	40:28	40:71	7	(constuint8_t**)input_frame->extended_data
water	40:28	0:0	8	(
water	40:29	0:0	8	const
water	40:35	0:0	8	uint8_t
op	40:42	0:0	8	*
op	40:43	0:0	8	*
water	40:44	0:0	8	)
water	40:45	0:0	8	input_frame
op	40:56	0:0	8	->
water	40:58	0:0	8	extended_data
arg	40:73	40:96	7	converted_input_samples
water	40:73	0:0	8	converted_input_samples
arg	41:28	41:51	7	input_frame->nb_samples
water	41:28	0:0	8	input_frame
op	41:39	0:0	8	->
water	41:41	0:0	8	nb_samples
arg	41:53	41:70	7	resampler_context
water	41:53	0:0	8	resampler_context
stmts	42:12	42:24	5	
goto	42:12	42:24	6	cleanup
water	42:17	0:0	7	cleanup
if	44:8	46:24	4	(add_samples_to_fifo (fifo ,converted_input_samples ,input_frame -> nb_samples ))
cond	44:12	45:55	5	add_samples_to_fifo (fifo ,converted_input_samples ,input_frame -> nb_samples )
call	44:12	45:55	6	add_samples_to_fifo
arg	44:32	44:36	7	fifo
water	44:32	0:0	8	fifo
arg	44:38	44:61	7	converted_input_samples
water	44:38	0:0	8	converted_input_samples
arg	45:32	45:55	7	input_frame->nb_samples
water	45:32	0:0	8	input_frame
op	45:43	0:0	8	->
water	45:45	0:0	8	nb_samples
stmts	46:12	46:24	5	
goto	46:12	46:24	6	cleanup
water	46:17	0:0	7	cleanup
water	47:8	0:0	4	ret
op	47:12	0:0	4	=
water	47:14	0:0	4	0
water	47:15	0:0	4	;
water	48:4	0:0	4	}
water	49:4	0:0	2	ret
op	49:8	0:0	2	=
water	49:10	0:0	2	0
water	49:11	0:0	2	;
label	50:0	50:7	2	cleanup :
if	51:4	54:4	2	(converted_input_samples)
cond	51:8	51:8	3	converted_input_samples
water	51:8	0:0	4	converted_input_samples
stmts	51:33	54:4	3	
water	51:33	0:0	4	{
call	52:8	52:44	4	av_freep
arg	52:17	52:44	5	&converted_input_samples[0]
op	52:17	0:0	6	&
water	52:18	0:0	6	converted_input_samples
op	52:41	0:0	6	[
water	52:42	0:0	6	0
op	52:43	0:0	6	]
water	52:45	0:0	4	;
call	53:8	53:36	4	free
arg	53:13	53:36	5	converted_input_samples
water	53:13	0:0	6	converted_input_samples
water	53:37	0:0	4	;
water	54:4	0:0	4	}
call	55:4	55:30	2	av_frame_free
arg	55:18	55:30	3	&input_frame
op	55:18	0:0	4	&
water	55:19	0:0	4	input_frame
water	55:31	0:0	2	;
return	56:4	56:14	2	ret
water	56:11	0:0	3	ret

func	1:0	45:0	0	static int	pixfmt_from_pixmap_format
params	1:36	0:0	1	
param	1:37	1:55	2	AVFormatContext *	s
param	1:57	1:66	2	int	depth
param	2:37	2:49	2	int *	pix_fmt
stmnts	0:0	44:31	1	
decl	4:4	4:43	2	XCBGrabContext	*c
op	4:29	0:0	2	=
water	4:31	0:0	2	s
op	4:32	0:0	2	->
water	4:34	0:0	2	priv_data
decl	5:4	5:53	2	const xcb_setup_t	*setup
op	5:29	0:0	2	=
call	5:31	5:52	3	xcb_get_setup
arg	5:45	5:52	4	c->conn
water	5:45	0:0	5	c
op	5:46	0:0	5	->
water	5:48	0:0	5	conn
decl	6:4	6:62	2	const xcb_format_t	*fmt
op	6:29	0:0	2	=
call	6:31	6:61	3	xcb_setup_pixmap_formats
arg	6:56	6:61	4	setup
water	6:56	0:0	5	setup
decl	7:4	7:69	2	int	length
op	7:29	0:0	2	=
call	7:31	7:68	3	xcb_setup_pixmap_formats_length
arg	7:63	7:68	4	setup
water	7:63	0:0	5	setup
op	8:4	0:0	2	*
water	8:5	0:0	2	pix_fmt
op	8:13	0:0	2	=
water	8:15	0:0	2	0
water	8:16	0:0	2	;
while	9:4	42:4	2	(length --)
cond	9:11	9:17	3	length --
water	9:11	0:0	4	length
op	9:17	0:0	4	--
stmts	9:21	42:4	3	
water	9:21	0:0	4	{
if	10:8	35:8	4	(fmt -> depth == depth)
cond	10:12	10:26	5	fmt -> depth == depth
water	10:12	0:0	6	fmt
op	10:15	0:0	6	->
water	10:17	0:0	6	depth
op	10:23	0:0	6	==
water	10:26	0:0	6	depth
stmts	10:33	35:8	5	
water	10:33	0:0	6	{
switch	11:12	34:12	6	(depth)
cond	11:20	11:20	7	depth
water	11:20	0:0	8	depth
stmts	11:27	34:12	7	
water	11:27	0:0	8	{
label	12:12	12:19	8	case 32 :
if	13:16	14:46	8	(fmt -> bits_per_pixel == 32)
cond	13:20	13:43	9	fmt -> bits_per_pixel == 32
water	13:20	0:0	10	fmt
op	13:23	0:0	10	->
water	13:25	0:0	10	bits_per_pixel
op	13:40	0:0	10	==
water	13:43	0:0	10	32
stmts	14:20	14:46	9	
op	14:20	0:0	10	*
water	14:21	0:0	10	pix_fmt
op	14:29	0:0	10	=
water	14:31	0:0	10	AV_PIX_FMT_0RGB
water	14:46	0:0	10	;
break	15:16	15:21	8	
label	16:12	16:19	8	case 24 :
if	17:16	18:48	8	(fmt -> bits_per_pixel == 32)
cond	17:20	17:43	9	fmt -> bits_per_pixel == 32
water	17:20	0:0	10	fmt
op	17:23	0:0	10	->
water	17:25	0:0	10	bits_per_pixel
op	17:40	0:0	10	==
water	17:43	0:0	10	32
stmts	18:20	18:48	9	
op	18:20	0:0	10	*
water	18:21	0:0	10	pix_fmt
op	18:29	0:0	10	=
water	18:31	0:0	10	AV_PIX_FMT_0RGB32
water	18:48	0:0	10	;
else	19:16	20:47	8
stmts	19:21	20:47	9	
if	19:21	20:47	10	(fmt -> bits_per_pixel == 24)
cond	19:25	19:48	11	fmt -> bits_per_pixel == 24
water	19:25	0:0	12	fmt
op	19:28	0:0	12	->
water	19:30	0:0	12	bits_per_pixel
op	19:45	0:0	12	==
water	19:48	0:0	12	24
stmts	20:20	20:47	11	
op	20:20	0:0	12	*
water	20:21	0:0	12	pix_fmt
op	20:29	0:0	12	=
water	20:31	0:0	12	AV_PIX_FMT_RGB24
water	20:47	0:0	12	;
break	21:16	21:21	8	
label	22:12	22:19	8	case 16 :
if	23:16	24:48	8	(fmt -> bits_per_pixel == 16)
cond	23:20	23:43	9	fmt -> bits_per_pixel == 16
water	23:20	0:0	10	fmt
op	23:23	0:0	10	->
water	23:25	0:0	10	bits_per_pixel
op	23:40	0:0	10	==
water	23:43	0:0	10	16
stmts	24:20	24:48	9	
op	24:20	0:0	10	*
water	24:21	0:0	10	pix_fmt
op	24:29	0:0	10	=
water	24:31	0:0	10	AV_PIX_FMT_RGB565
water	24:48	0:0	10	;
break	25:16	25:21	8	
label	26:12	26:19	8	case 15 :
if	27:16	28:48	8	(fmt -> bits_per_pixel == 16)
cond	27:20	27:43	9	fmt -> bits_per_pixel == 16
water	27:20	0:0	10	fmt
op	27:23	0:0	10	->
water	27:25	0:0	10	bits_per_pixel
op	27:40	0:0	10	==
water	27:43	0:0	10	16
stmts	28:20	28:48	9	
op	28:20	0:0	10	*
water	28:21	0:0	10	pix_fmt
op	28:29	0:0	10	=
water	28:31	0:0	10	AV_PIX_FMT_RGB555
water	28:48	0:0	10	;
break	29:16	29:21	8	
label	30:12	30:18	8	case 8 :
if	31:16	32:46	8	(fmt -> bits_per_pixel == 8)
cond	31:20	31:43	9	fmt -> bits_per_pixel == 8
water	31:20	0:0	10	fmt
op	31:23	0:0	10	->
water	31:25	0:0	10	bits_per_pixel
op	31:40	0:0	10	==
water	31:43	0:0	10	8
stmts	32:20	32:46	9	
op	32:20	0:0	10	*
water	32:21	0:0	10	pix_fmt
op	32:29	0:0	10	=
water	32:31	0:0	10	AV_PIX_FMT_RGB8
water	32:46	0:0	10	;
break	33:16	33:21	8	
water	34:12	0:0	8	}
water	35:8	0:0	6	}
if	36:8	40:8	4	(* pix_fmt)
cond	36:12	36:13	5	* pix_fmt
op	36:12	0:0	6	*
water	36:13	0:0	6	pix_fmt
stmts	36:22	40:8	5	
water	36:22	0:0	6	{
water	37:12	0:0	6	c
op	37:13	0:0	6	->
water	37:15	0:0	6	bpp
op	37:26	0:0	6	=
water	37:28	0:0	6	fmt
op	37:31	0:0	6	->
water	37:33	0:0	6	bits_per_pixel
water	37:47	0:0	6	;
water	38:12	0:0	6	c
op	38:13	0:0	6	->
water	38:15	0:0	6	frame_size
op	38:26	0:0	6	=
water	38:28	0:0	6	c
op	38:29	0:0	6	->
water	38:31	0:0	6	width
op	38:37	0:0	6	*
water	38:39	0:0	6	c
op	38:40	0:0	6	->
water	38:42	0:0	6	height
op	38:49	0:0	6	*
water	38:51	0:0	6	fmt
op	38:54	0:0	6	->
water	38:56	0:0	6	bits_per_pixel
op	38:71	0:0	6	/
water	38:73	0:0	6	8
water	38:74	0:0	6	;
return	39:12	39:20	6	0
water	39:19	0:0	7	0
water	40:8	0:0	6	}
water	41:8	0:0	4	fmt
op	41:11	0:0	4	++
water	41:13	0:0	4	;
water	42:4	0:0	4	}
call	43:4	43:59	2	av_log
arg	43:11	43:12	3	s
water	43:11	0:0	4	s
arg	43:14	43:26	3	AV_LOG_ERROR
water	43:14	0:0	4	AV_LOG_ERROR
arg	43:28	43:59	3	"Pixmap format not mappable.\n"
water	43:28	0:0	4	"Pixmap format not mappable.\n"
water	43:60	0:0	2	;
return	44:4	44:31	2	AVERROR_PATCHWELCOME
water	44:11	0:0	3	AVERROR_PATCHWELCOME

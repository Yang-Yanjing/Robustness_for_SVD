func	1:15	71:0	0	int	adpcm_decode_init
params	1:36	0:0	1	
param	1:37	1:59	2	AVCodecContext *	avctx
stmnts	0:0	70:12	1	
decl	3:4	3:44	2	ADPCMDecodeContext	*c
op	3:26	0:0	2	=
water	3:28	0:0	2	avctx
op	3:33	0:0	2	->
water	3:35	0:0	2	priv_data
decl	4:4	4:33	2	unsigned int	min_channels
op	4:30	0:0	2	=
water	4:32	0:0	2	1
decl	5:4	5:33	2	unsigned int	max_channels
op	5:30	0:0	2	=
water	5:32	0:0	2	2
switch	6:4	22:4	2	(avctx -> codec -> id)
cond	6:11	6:25	3	avctx -> codec -> id
water	6:11	0:0	4	avctx
op	6:16	0:0	4	->
water	6:18	0:0	4	codec
op	6:23	0:0	4	->
water	6:25	0:0	4	id
stmts	6:29	22:4	3	
water	6:29	0:0	4	{
label	7:4	7:30	4	case AV_CODEC_ID_ADPCM_DTK :
label	8:4	8:29	4	case AV_CODEC_ID_ADPCM_EA :
water	9:8	0:0	4	min_channels
op	9:21	0:0	4	=
water	9:23	0:0	4	2
water	9:24	0:0	4	;
break	10:8	10:13	4	
label	11:4	11:30	4	case AV_CODEC_ID_ADPCM_AFC :
label	12:4	12:32	4	case AV_CODEC_ID_ADPCM_EA_R1 :
label	13:4	13:32	4	case AV_CODEC_ID_ADPCM_EA_R2 :
label	14:4	14:32	4	case AV_CODEC_ID_ADPCM_EA_R3 :
label	15:4	15:33	4	case AV_CODEC_ID_ADPCM_EA_XAS :
water	16:8	0:0	4	max_channels
op	16:21	0:0	4	=
water	16:23	0:0	4	6
water	16:24	0:0	4	;
break	17:8	17:13	4	
label	18:4	18:30	4	case AV_CODEC_ID_ADPCM_THP :
label	19:4	19:33	4	case AV_CODEC_ID_ADPCM_THP_LE :
water	20:8	0:0	4	max_channels
op	20:21	0:0	4	=
water	20:23	0:0	4	10
water	20:25	0:0	4	;
break	21:8	21:13	4	
water	22:4	0:0	4	}
if	23:4	26:4	2	(avctx -> channels < min_channels || avctx -> channels > max_channels)
cond	23:8	23:60	3	avctx -> channels < min_channels || avctx -> channels > max_channels
water	23:8	0:0	4	avctx
op	23:13	0:0	4	->
water	23:15	0:0	4	channels
op	23:24	0:0	4	<
water	23:26	0:0	4	min_channels
op	23:39	0:0	4	||
water	23:42	0:0	4	avctx
op	23:47	0:0	4	->
water	23:49	0:0	4	channels
op	23:58	0:0	4	>
water	23:60	0:0	4	max_channels
stmts	23:74	26:4	3	
water	23:74	0:0	4	{
call	24:8	24:66	4	av_log
arg	24:15	24:20	5	avctx
water	24:15	0:0	6	avctx
arg	24:22	24:34	5	AV_LOG_ERROR
water	24:22	0:0	6	AV_LOG_ERROR
arg	24:36	24:66	5	"Invalid number of channels\n"
water	24:36	0:0	6	"Invalid number of channels\n"
water	24:67	0:0	4	;
return	25:8	25:30	4	AVERROR(EINVAL)
call	25:15	25:29	5	AVERROR
arg	25:23	25:29	6	EINVAL
water	25:23	0:0	7	EINVAL
water	26:4	0:0	4	}
switch	27:4	47:4	2	(avctx -> codec -> id)
cond	27:11	27:25	3	avctx -> codec -> id
water	27:11	0:0	4	avctx
op	27:16	0:0	4	->
water	27:18	0:0	4	codec
op	27:23	0:0	4	->
water	27:25	0:0	4	id
stmts	27:29	47:4	3	
water	27:29	0:0	4	{
label	28:4	28:29	4	case AV_CODEC_ID_ADPCM_CT :
water	29:8	0:0	4	c
op	29:9	0:0	4	->
water	29:11	0:0	4	status
op	29:17	0:0	4	[
water	29:18	0:0	4	0
op	29:19	0:0	4	]
op	29:20	0:0	4	.
water	29:21	0:0	4	step
op	29:26	0:0	4	=
water	29:28	0:0	4	c
op	29:29	0:0	4	->
water	29:31	0:0	4	status
op	29:37	0:0	4	[
water	29:38	0:0	4	1
op	29:39	0:0	4	]
op	29:40	0:0	4	.
water	29:41	0:0	4	step
op	29:46	0:0	4	=
water	29:48	0:0	4	511
water	29:51	0:0	4	;
break	30:8	30:13	4	
label	31:4	31:34	4	case AV_CODEC_ID_ADPCM_IMA_WAV :
if	32:8	33:38	4	(avctx -> bits_per_coded_sample < 2 || avctx -> bits_per_coded_sample > 5)
cond	32:12	32:79	5	avctx -> bits_per_coded_sample < 2 || avctx -> bits_per_coded_sample > 5
water	32:12	0:0	6	avctx
op	32:17	0:0	6	->
water	32:19	0:0	6	bits_per_coded_sample
op	32:41	0:0	6	<
water	32:43	0:0	6	2
op	32:45	0:0	6	||
water	32:48	0:0	6	avctx
op	32:53	0:0	6	->
water	32:55	0:0	6	bits_per_coded_sample
op	32:77	0:0	6	>
water	32:79	0:0	6	5
stmts	33:12	33:38	5	
return	33:12	33:38	6	AVERROR_INVALIDDATA
water	33:19	0:0	7	AVERROR_INVALIDDATA
break	34:8	34:13	4	
label	35:4	35:34	4	case AV_CODEC_ID_ADPCM_IMA_APC :
if	36:8	39:8	4	(avctx -> extradata && avctx -> extradata_size >= 8)
cond	36:12	36:57	5	avctx -> extradata && avctx -> extradata_size >= 8
water	36:12	0:0	6	avctx
op	36:17	0:0	6	->
water	36:19	0:0	6	extradata
op	36:29	0:0	6	&&
water	36:32	0:0	6	avctx
op	36:37	0:0	6	->
water	36:39	0:0	6	extradata_size
op	36:54	0:0	6	>=
water	36:57	0:0	6	8
stmts	36:60	39:8	5	
water	36:60	0:0	6	{
water	37:12	0:0	6	c
op	37:13	0:0	6	->
water	37:15	0:0	6	status
op	37:21	0:0	6	[
water	37:22	0:0	6	0
op	37:23	0:0	6	]
op	37:24	0:0	6	.
water	37:25	0:0	6	predictor
op	37:35	0:0	6	=
call	37:37	37:61	6	AV_RL32
arg	37:45	37:61	7	avctx->extradata
water	37:45	0:0	8	avctx
op	37:50	0:0	8	->
water	37:52	0:0	8	extradata
water	37:62	0:0	6	;
water	38:12	0:0	6	c
op	38:13	0:0	6	->
water	38:15	0:0	6	status
op	38:21	0:0	6	[
water	38:22	0:0	6	1
op	38:23	0:0	6	]
op	38:24	0:0	6	.
water	38:25	0:0	6	predictor
op	38:35	0:0	6	=
call	38:37	38:65	6	AV_RL32
arg	38:45	38:65	7	avctx->extradata+4
water	38:45	0:0	8	avctx
op	38:50	0:0	8	->
water	38:52	0:0	8	extradata
op	38:62	0:0	8	+
water	38:64	0:0	8	4
water	38:66	0:0	6	;
water	39:8	0:0	6	}
break	40:8	40:13	4	
label	41:4	41:33	4	case AV_CODEC_ID_ADPCM_IMA_WS :
if	42:8	43:54	4	(avctx -> extradata && avctx -> extradata_size >= 2)
cond	42:12	42:57	5	avctx -> extradata && avctx -> extradata_size >= 2
water	42:12	0:0	6	avctx
op	42:17	0:0	6	->
water	42:19	0:0	6	extradata
op	42:29	0:0	6	&&
water	42:32	0:0	6	avctx
op	42:37	0:0	6	->
water	42:39	0:0	6	extradata_size
op	42:54	0:0	6	>=
water	42:57	0:0	6	2
stmts	43:12	43:54	5	
water	43:12	0:0	6	c
op	43:13	0:0	6	->
water	43:15	0:0	6	vqa_version
op	43:27	0:0	6	=
call	43:29	43:53	6	AV_RL16
arg	43:37	43:53	7	avctx->extradata
water	43:37	0:0	8	avctx
op	43:42	0:0	8	->
water	43:44	0:0	8	extradata
water	43:54	0:0	6	;
break	44:8	44:13	4	
label	45:4	45:11	4	default :
break	46:8	46:13	4	
water	47:4	0:0	4	}
switch	48:4	69:4	2	(avctx -> codec -> id)
cond	48:11	48:25	3	avctx -> codec -> id
water	48:11	0:0	4	avctx
op	48:16	0:0	4	->
water	48:18	0:0	4	codec
op	48:23	0:0	4	->
water	48:25	0:0	4	id
stmts	48:29	69:4	3	
water	48:29	0:0	4	{
label	49:8	49:37	4	case AV_CODEC_ID_ADPCM_IMA_QT :
label	50:8	50:38	4	case AV_CODEC_ID_ADPCM_IMA_WAV :
label	51:8	51:34	4	case AV_CODEC_ID_ADPCM_4XM :
label	52:8	52:33	4	case AV_CODEC_ID_ADPCM_XA :
label	53:8	53:36	4	case AV_CODEC_ID_ADPCM_EA_R1 :
label	54:8	54:36	4	case AV_CODEC_ID_ADPCM_EA_R2 :
label	55:8	55:36	4	case AV_CODEC_ID_ADPCM_EA_R3 :
label	56:8	56:37	4	case AV_CODEC_ID_ADPCM_EA_XAS :
label	57:8	57:34	4	case AV_CODEC_ID_ADPCM_THP :
label	58:8	58:37	4	case AV_CODEC_ID_ADPCM_THP_LE :
label	59:8	59:34	4	case AV_CODEC_ID_ADPCM_AFC :
label	60:8	60:34	4	case AV_CODEC_ID_ADPCM_DTK :
water	61:12	0:0	4	avctx
op	61:17	0:0	4	->
water	61:19	0:0	4	sample_fmt
op	61:30	0:0	4	=
water	61:32	0:0	4	AV_SAMPLE_FMT_S16P
water	61:50	0:0	4	;
break	62:12	62:17	4	
label	63:8	63:37	4	case AV_CODEC_ID_ADPCM_IMA_WS :
water	64:12	0:0	4	avctx
op	64:17	0:0	4	->
water	64:19	0:0	4	sample_fmt
op	64:30	0:0	4	=
water	64:32	0:0	4	c
op	64:33	0:0	4	->
water	64:35	0:0	4	vqa_version
op	64:47	0:0	4	==
water	64:50	0:0	4	3
water	64:52	0:0	4	?
water	64:54	0:0	4	AV_SAMPLE_FMT_S16P
water	64:73	0:0	4	:
water	65:54	0:0	4	AV_SAMPLE_FMT_S16
water	65:71	0:0	4	;
break	66:12	66:17	4	
label	67:8	67:15	4	default :
water	68:12	0:0	4	avctx
op	68:17	0:0	4	->
water	68:19	0:0	4	sample_fmt
op	68:30	0:0	4	=
water	68:32	0:0	4	AV_SAMPLE_FMT_S16
water	68:49	0:0	4	;
water	69:4	0:0	4	}
return	70:4	70:12	2	0
water	70:11	0:0	3	0

func	1:0	34:0	0	int	ff_init_slice_from_src
params	1:26	0:0	1	
param	1:27	1:39	2	SwsSlice *	s
param	1:41	1:56	2	uint8_t *	src[4]
param	1:58	1:71	2	int	stride[4]
param	1:73	1:81	2	int	srcW
param	1:83	1:91	2	int	lumY
param	1:93	1:101	2	int	lumH
param	1:103	1:111	2	int	chrY
param	1:113	1:121	2	int	chrH
stmnts	0:0	33:12	1	
decl	3:4	3:13	2	int	i
op	3:10	0:0	2	=
water	3:12	0:0	2	0
decl	4:4	7:25	2	const int	start[4]
op	4:23	0:0	2	=
water	4:25	0:0	2	{
water	4:26	0:0	2	lumY
water	4:30	0:0	2	,
water	5:20	0:0	2	chrY
water	5:24	0:0	2	,
water	6:20	0:0	2	chrY
water	6:24	0:0	2	,
water	7:20	0:0	2	lumY
water	7:24	0:0	2	}
decl	8:4	11:36	2	const int	end[4]
op	8:21	0:0	2	=
water	8:23	0:0	2	{
water	8:24	0:0	2	lumY
op	8:29	0:0	2	+
water	8:30	0:0	2	lumH
water	8:34	0:0	2	,
water	9:24	0:0	2	chrY
op	9:29	0:0	2	+
water	9:31	0:0	2	chrH
water	9:35	0:0	2	,
water	10:24	0:0	2	chrY
op	10:29	0:0	2	+
water	10:31	0:0	2	chrH
water	10:35	0:0	2	,
water	11:24	0:0	2	lumY
op	11:29	0:0	2	+
water	11:31	0:0	2	lumH
water	11:35	0:0	2	}
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	width
op	12:13	0:0	2	=
water	12:15	0:0	2	srcW
water	12:19	0:0	2	;
for	13:4	32:4	2	(i = 0 ;i < 4;++ i)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	i < 4
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	4
forexpr	13:23	13:25	3	++ i
op	13:23	0:0	4	++
water	13:25	0:0	4	i
stmts	13:28	32:4	3	
water	13:28	0:0	4	{
decl	14:8	14:13	4	int	j
decl	15:8	15:26	4	int	lines
op	15:18	0:0	4	=
water	15:20	0:0	4	end
op	15:23	0:0	4	[
water	15:24	0:0	4	i
op	15:25	0:0	4	]
water	16:8	0:0	4	lines
op	16:14	0:0	4	=
water	16:16	0:0	4	s
op	16:17	0:0	4	->
water	16:19	0:0	4	plane
op	16:24	0:0	4	[
water	16:25	0:0	4	i
op	16:26	0:0	4	]
op	16:27	0:0	4	.
water	16:28	0:0	4	available_lines
op	16:44	0:0	4	<
water	16:46	0:0	4	lines
water	16:52	0:0	4	?
water	16:54	0:0	4	s
op	16:55	0:0	4	->
water	16:57	0:0	4	plane
op	16:62	0:0	4	[
water	16:63	0:0	4	i
op	16:64	0:0	4	]
op	16:65	0:0	4	.
water	16:66	0:0	4	available_lines
water	16:82	0:0	4	:
water	16:84	0:0	4	lines
water	16:89	0:0	4	;
if	17:8	23:8	4	(end [ i ] > s -> plane [ i ] . sliceY + s -> plane [ i ] . sliceH)
cond	17:12	17:52	5	end [ i ] > s -> plane [ i ] . sliceY + s -> plane [ i ] . sliceH
water	17:12	0:0	6	end
op	17:15	0:0	6	[
water	17:16	0:0	6	i
op	17:17	0:0	6	]
op	17:19	0:0	6	>
water	17:21	0:0	6	s
op	17:22	0:0	6	->
water	17:24	0:0	6	plane
op	17:29	0:0	6	[
water	17:30	0:0	6	i
op	17:31	0:0	6	]
op	17:32	0:0	6	.
water	17:33	0:0	6	sliceY
op	17:39	0:0	6	+
water	17:40	0:0	6	s
op	17:41	0:0	6	->
water	17:43	0:0	6	plane
op	17:48	0:0	6	[
water	17:49	0:0	6	i
op	17:50	0:0	6	]
op	17:51	0:0	6	.
water	17:52	0:0	6	sliceH
stmts	17:60	23:8	5	
water	17:60	0:0	6	{
if	18:12	19:72	6	(start [ i ] <= s -> plane [ i ] . sliceY + 1)
cond	18:16	18:47	7	start [ i ] <= s -> plane [ i ] . sliceY + 1
water	18:16	0:0	8	start
op	18:21	0:0	8	[
water	18:22	0:0	8	i
op	18:23	0:0	8	]
op	18:25	0:0	8	<=
water	18:28	0:0	8	s
op	18:29	0:0	8	->
water	18:31	0:0	8	plane
op	18:36	0:0	8	[
water	18:37	0:0	8	i
op	18:38	0:0	8	]
op	18:39	0:0	8	.
water	18:40	0:0	8	sliceY
op	18:46	0:0	8	+
water	18:47	0:0	8	1
stmts	19:16	19:72	7	
water	19:16	0:0	8	s
op	19:17	0:0	8	->
water	19:19	0:0	8	plane
op	19:24	0:0	8	[
water	19:25	0:0	8	i
op	19:26	0:0	8	]
op	19:27	0:0	8	.
water	19:28	0:0	8	sliceY
op	19:35	0:0	8	=
call	19:37	19:71	8	FFMIN
arg	19:43	19:51	9	start[i]
water	19:43	0:0	10	start
op	19:48	0:0	10	[
water	19:49	0:0	10	i
op	19:50	0:0	10	]
arg	19:53	19:71	9	s->plane[i].sliceY
water	19:53	0:0	10	s
op	19:54	0:0	10	->
water	19:56	0:0	10	plane
op	19:61	0:0	10	[
water	19:62	0:0	10	i
op	19:63	0:0	10	]
op	19:64	0:0	10	.
water	19:65	0:0	10	sliceY
water	19:72	0:0	8	;
else	20:12	21:45	6
stmts	21:16	21:45	7	
water	21:16	0:0	8	s
op	21:17	0:0	8	->
water	21:19	0:0	8	plane
op	21:24	0:0	8	[
water	21:25	0:0	8	i
op	21:26	0:0	8	]
op	21:27	0:0	8	.
water	21:28	0:0	8	sliceY
op	21:35	0:0	8	=
water	21:37	0:0	8	start
op	21:42	0:0	8	[
water	21:43	0:0	8	i
op	21:44	0:0	8	]
water	21:45	0:0	8	;
water	22:12	0:0	6	s
op	22:13	0:0	6	->
water	22:15	0:0	6	plane
op	22:20	0:0	6	[
water	22:21	0:0	6	i
op	22:22	0:0	6	]
op	22:23	0:0	6	.
water	22:24	0:0	6	sliceH
op	22:31	0:0	6	=
water	22:33	0:0	6	end
op	22:36	0:0	6	[
water	22:37	0:0	6	i
op	22:38	0:0	6	]
op	22:40	0:0	6	-
water	22:42	0:0	6	s
op	22:43	0:0	6	->
water	22:45	0:0	6	plane
op	22:50	0:0	6	[
water	22:51	0:0	6	i
op	22:52	0:0	6	]
op	22:53	0:0	6	.
water	22:54	0:0	6	sliceY
water	22:60	0:0	6	;
water	23:8	0:0	6	}
else	23:10	29:8	4
stmts	23:15	29:8	5	
water	23:15	0:0	6	{
if	24:12	25:87	6	(end [ i ] >= s -> plane [ i ] . sliceY)
cond	24:16	24:38	7	end [ i ] >= s -> plane [ i ] . sliceY
water	24:16	0:0	8	end
op	24:19	0:0	8	[
water	24:20	0:0	8	i
op	24:21	0:0	8	]
op	24:23	0:0	8	>=
water	24:26	0:0	8	s
op	24:27	0:0	8	->
water	24:29	0:0	8	plane
op	24:34	0:0	8	[
water	24:35	0:0	8	i
op	24:36	0:0	8	]
op	24:37	0:0	8	.
water	24:38	0:0	8	sliceY
stmts	25:16	25:87	7	
water	25:16	0:0	8	s
op	25:17	0:0	8	->
water	25:19	0:0	8	plane
op	25:24	0:0	8	[
water	25:25	0:0	8	i
op	25:26	0:0	8	]
op	25:27	0:0	8	.
water	25:28	0:0	8	sliceH
op	25:35	0:0	8	=
water	25:37	0:0	8	s
op	25:38	0:0	8	->
water	25:40	0:0	8	plane
op	25:45	0:0	8	[
water	25:46	0:0	8	i
op	25:47	0:0	8	]
op	25:48	0:0	8	.
water	25:49	0:0	8	sliceY
op	25:56	0:0	8	+
water	25:58	0:0	8	s
op	25:59	0:0	8	->
water	25:61	0:0	8	plane
op	25:66	0:0	8	[
water	25:67	0:0	8	i
op	25:68	0:0	8	]
op	25:69	0:0	8	.
water	25:70	0:0	8	sliceH
op	25:77	0:0	8	-
water	25:79	0:0	8	start
op	25:84	0:0	8	[
water	25:85	0:0	8	i
op	25:86	0:0	8	]
water	25:87	0:0	8	;
else	26:12	27:54	6
stmts	27:16	27:54	7	
water	27:16	0:0	8	s
op	27:17	0:0	8	->
water	27:19	0:0	8	plane
op	27:24	0:0	8	[
water	27:25	0:0	8	i
op	27:26	0:0	8	]
op	27:27	0:0	8	.
water	27:28	0:0	8	sliceH
op	27:35	0:0	8	=
water	27:37	0:0	8	end
op	27:40	0:0	8	[
water	27:41	0:0	8	i
op	27:42	0:0	8	]
op	27:44	0:0	8	-
water	27:46	0:0	8	start
op	27:51	0:0	8	[
water	27:52	0:0	8	i
op	27:53	0:0	8	]
water	27:54	0:0	8	;
water	28:12	0:0	6	s
op	28:13	0:0	6	->
water	28:15	0:0	6	plane
op	28:20	0:0	6	[
water	28:21	0:0	6	i
op	28:22	0:0	6	]
op	28:23	0:0	6	.
water	28:24	0:0	6	sliceY
op	28:31	0:0	6	=
water	28:33	0:0	6	start
op	28:38	0:0	6	[
water	28:39	0:0	6	i
op	28:40	0:0	6	]
water	28:41	0:0	6	;
water	29:8	0:0	6	}
for	30:8	31:69	4	(j = start [ i ] ;j < lines;j += 1)
forinit	30:13	30:25	5	j = start [ i ] ;
water	30:13	0:0	6	j
op	30:15	0:0	6	=
water	30:17	0:0	6	start
op	30:22	0:0	6	[
water	30:23	0:0	6	i
op	30:24	0:0	6	]
water	30:25	0:0	6	;
cond	30:27	30:31	5	j < lines
water	30:27	0:0	6	j
op	30:29	0:0	6	<
water	30:31	0:0	6	lines
forexpr	30:38	30:42	5	j += 1
water	30:38	0:0	6	j
op	30:39	0:0	6	+=
water	30:42	0:0	6	1
stmts	31:12	31:69	5	
water	31:12	0:0	6	s
op	31:13	0:0	6	->
water	31:15	0:0	6	plane
op	31:20	0:0	6	[
water	31:21	0:0	6	i
op	31:22	0:0	6	]
op	31:23	0:0	6	.
water	31:24	0:0	6	line
op	31:28	0:0	6	[
water	31:29	0:0	6	j
op	31:30	0:0	6	]
op	31:32	0:0	6	=
water	31:34	0:0	6	src
op	31:37	0:0	6	[
water	31:38	0:0	6	i
op	31:39	0:0	6	]
op	31:41	0:0	6	+
water	31:43	0:0	6	(
water	31:44	0:0	6	start
op	31:49	0:0	6	[
water	31:50	0:0	6	i
op	31:51	0:0	6	]
op	31:53	0:0	6	+
water	31:55	0:0	6	j
water	31:56	0:0	6	)
op	31:58	0:0	6	*
water	31:60	0:0	6	stride
op	31:66	0:0	6	[
water	31:67	0:0	6	i
op	31:68	0:0	6	]
water	31:69	0:0	6	;
water	32:4	0:0	4	}
return	33:4	33:12	2	0
water	33:11	0:0	3	0

func	1:0	37:0	0	static char *	choose_pix_fmts
params	1:28	0:0	1	
param	1:29	1:50	2	OutputFilter *	ofilter
stmnts	0:0	36:19	1	
decl	3:4	3:36	2	OutputStream	*ost
op	3:22	0:0	2	=
water	3:24	0:0	2	ofilter
op	3:31	0:0	2	->
water	3:33	0:0	2	ost
decl	4:4	4:86	2	AVDictionaryEntry	*strict_dict
op	4:35	0:0	2	=
call	4:37	4:85	3	av_dict_get
arg	4:49	4:66	4	ost->encoder_opts
water	4:49	0:0	5	ost
op	4:52	0:0	5	->
water	4:54	0:0	5	encoder_opts
arg	4:68	4:76	4	"strict"
water	4:68	0:0	5	"strict"
arg	4:78	4:82	4	NULL
water	4:78	0:0	5	NULL
arg	4:84	4:85	4	0
water	4:84	0:0	5	0
if	5:4	7:65	2	(strict_dict)
cond	5:8	5:8	3	strict_dict
water	5:8	0:0	4	strict_dict
stmts	7:8	7:65	3	
call	7:8	7:64	4	av_opt_set
arg	7:19	7:31	5	ost->enc_ctx
water	7:19	0:0	6	ost
op	7:22	0:0	6	->
water	7:24	0:0	6	enc_ctx
arg	7:33	7:41	5	"strict"
water	7:33	0:0	6	"strict"
arg	7:43	7:61	5	strict_dict->value
water	7:43	0:0	6	strict_dict
op	7:54	0:0	6	->
water	7:56	0:0	6	value
arg	7:63	7:64	5	0
water	7:63	0:0	6	0
water	7:65	0:0	4	;
if	8:5	14:4	2	(ost -> keep_pix_fmt)
cond	8:9	8:14	3	ost -> keep_pix_fmt
water	8:9	0:0	4	ost
op	8:12	0:0	4	->
water	8:14	0:0	4	keep_pix_fmt
stmts	8:28	14:4	3	
water	8:28	0:0	4	{
call	9:8	10:70	4	avfilter_graph_set_auto_convert
arg	9:40	9:61	5	ofilter->graph->graph
water	9:40	0:0	6	ofilter
op	9:47	0:0	6	->
water	9:49	0:0	6	graph
op	9:54	0:0	6	->
water	9:56	0:0	6	graph
arg	10:44	10:70	5	AVFILTER_AUTO_CONVERT_NONE
water	10:44	0:0	6	AVFILTER_AUTO_CONVERT_NONE
water	10:71	0:0	4	;
if	11:8	12:23	4	(ost -> enc_ctx -> pix_fmt == AV_PIX_FMT_NONE)
cond	11:12	11:37	5	ost -> enc_ctx -> pix_fmt == AV_PIX_FMT_NONE
water	11:12	0:0	6	ost
op	11:15	0:0	6	->
water	11:17	0:0	6	enc_ctx
op	11:24	0:0	6	->
water	11:26	0:0	6	pix_fmt
op	11:34	0:0	6	==
water	11:37	0:0	6	AV_PIX_FMT_NONE
stmts	12:12	12:23	5	
return	12:12	12:23	6	NULL
water	12:19	0:0	7	NULL
return	13:8	13:68	4	av_strdup(av_get_pix_fmt_name(ost->enc_ctx->pix_fmt))
call	13:15	13:67	5	av_strdup
arg	13:25	13:67	6	av_get_pix_fmt_name(ost->enc_ctx->pix_fmt)
call	13:25	13:66	7	av_get_pix_fmt_name
arg	13:45	13:66	8	ost->enc_ctx->pix_fmt
water	13:45	0:0	9	ost
op	13:48	0:0	9	->
water	13:50	0:0	9	enc_ctx
op	13:57	0:0	9	->
water	13:59	0:0	9	pix_fmt
water	14:4	0:0	4	}
if	15:4	17:4	2	(ost -> enc_ctx -> pix_fmt != AV_PIX_FMT_NONE)
cond	15:8	15:33	3	ost -> enc_ctx -> pix_fmt != AV_PIX_FMT_NONE
water	15:8	0:0	4	ost
op	15:11	0:0	4	->
water	15:13	0:0	4	enc_ctx
op	15:20	0:0	4	->
water	15:22	0:0	4	pix_fmt
op	15:30	0:0	4	!=
water	15:33	0:0	4	AV_PIX_FMT_NONE
stmts	15:50	17:4	3	
water	15:50	0:0	4	{
return	16:8	16:119	4	av_strdup(av_get_pix_fmt_name(choose_pixel_fmt(ost->st,ost->enc_ctx,ost->enc,ost->enc_ctx->pix_fmt)))
call	16:15	16:118	5	av_strdup
arg	16:25	16:118	6	av_get_pix_fmt_name(choose_pixel_fmt(ost->st,ost->enc_ctx,ost->enc,ost->enc_ctx->pix_fmt))
call	16:25	16:117	7	av_get_pix_fmt_name
arg	16:45	16:117	8	choose_pixel_fmt(ost->st,ost->enc_ctx,ost->enc,ost->enc_ctx->pix_fmt)
call	16:45	16:116	9	choose_pixel_fmt
arg	16:62	16:69	10	ost->st
water	16:62	0:0	11	ost
op	16:65	0:0	11	->
water	16:67	0:0	11	st
arg	16:71	16:83	10	ost->enc_ctx
water	16:71	0:0	11	ost
op	16:74	0:0	11	->
water	16:76	0:0	11	enc_ctx
arg	16:85	16:93	10	ost->enc
water	16:85	0:0	11	ost
op	16:88	0:0	11	->
water	16:90	0:0	11	enc
arg	16:95	16:116	10	ost->enc_ctx->pix_fmt
water	16:95	0:0	11	ost
op	16:98	0:0	11	->
water	16:100	0:0	11	enc_ctx
op	16:107	0:0	11	->
water	16:109	0:0	11	pix_fmt
water	17:4	0:0	4	}
else	17:6	35:4	2
stmts	17:11	35:4	3	
if	17:11	35:4	4	(ost -> enc && ost -> enc -> pix_fmts)
cond	17:15	17:37	5	ost -> enc && ost -> enc -> pix_fmts
water	17:15	0:0	6	ost
op	17:18	0:0	6	->
water	17:20	0:0	6	enc
op	17:24	0:0	6	&&
water	17:27	0:0	6	ost
op	17:30	0:0	6	->
water	17:32	0:0	6	enc
op	17:35	0:0	6	->
water	17:37	0:0	6	pix_fmts
stmts	17:47	35:4	5	
water	17:47	0:0	6	{
decl	18:8	18:35	6	const enum AVPixelFormat	*p
decl	19:8	19:29	6	AVIOContext	*s
op	19:23	0:0	6	=
water	19:25	0:0	6	NULL
decl	20:8	20:20	6	uint8_t	*ret
decl	21:8	21:15	6	int	len
if	22:8	23:27	6	(avio_open_dyn_buf (& s ) < 0)
cond	22:12	22:36	7	avio_open_dyn_buf (& s ) < 0
call	22:12	22:32	8	avio_open_dyn_buf
arg	22:30	22:32	9	&s
op	22:30	0:0	10	&
water	22:31	0:0	10	s
op	22:34	0:0	8	<
water	22:36	0:0	8	0
stmts	23:12	23:27	7	
call	23:12	23:26	8	exit_program
arg	23:25	23:26	9	1
water	23:25	0:0	10	1
water	23:27	0:0	8	;
water	24:8	0:0	6	p
op	24:10	0:0	6	=
water	24:12	0:0	6	ost
op	24:15	0:0	6	->
water	24:17	0:0	6	enc
op	24:20	0:0	6	->
water	24:22	0:0	6	pix_fmts
water	24:30	0:0	6	;
if	25:8	27:8	6	(ost -> enc_ctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL)
cond	25:12	25:51	7	ost -> enc_ctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL
water	25:12	0:0	8	ost
op	25:15	0:0	8	->
water	25:17	0:0	8	enc_ctx
op	25:24	0:0	8	->
water	25:26	0:0	8	strict_std_compliance
op	25:48	0:0	8	<=
water	25:51	0:0	8	FF_COMPLIANCE_UNOFFICIAL
stmts	25:77	27:8	7	
water	25:77	0:0	8	{
water	26:12	0:0	8	p
op	26:14	0:0	8	=
call	26:16	26:76	8	get_compliance_unofficial_pix_fmts
arg	26:51	26:73	9	ost->enc_ctx->codec_id
water	26:51	0:0	10	ost
op	26:54	0:0	10	->
water	26:56	0:0	10	enc_ctx
op	26:63	0:0	10	->
water	26:65	0:0	10	codec_id
arg	26:75	26:76	9	p
water	26:75	0:0	10	p
water	26:77	0:0	8	;
water	27:8	0:0	8	}
for	28:8	31:8	6	(;* p != AV_PIX_FMT_NONE;p ++)
forinit	28:13	28:13	7	;
water	28:13	0:0	8	;
cond	28:15	28:21	7	* p != AV_PIX_FMT_NONE
op	28:15	0:0	8	*
water	28:16	0:0	8	p
op	28:18	0:0	8	!=
water	28:21	0:0	8	AV_PIX_FMT_NONE
forexpr	28:38	28:39	7	p ++
water	28:38	0:0	8	p
op	28:39	0:0	8	++
stmts	28:43	31:8	7	
water	28:43	0:0	8	{
decl	29:12	29:54	8	const char	*name
op	29:29	0:0	8	=
call	29:31	29:53	9	av_get_pix_fmt_name
arg	29:51	29:53	10	*p
op	29:51	0:0	11	*
water	29:52	0:0	11	p
call	30:12	30:38	8	avio_printf
arg	30:24	30:25	9	s
water	30:24	0:0	10	s
arg	30:27	30:32	9	"%s|"
water	30:27	0:0	10	"%s|"
arg	30:34	30:38	9	name
water	30:34	0:0	10	name
water	30:39	0:0	8	;
water	31:8	0:0	8	}
water	32:8	0:0	6	len
op	32:12	0:0	6	=
call	32:14	32:40	6	avio_close_dyn_buf
arg	32:33	32:34	7	s
water	32:33	0:0	8	s
arg	32:36	32:40	7	&ret
op	32:36	0:0	8	&
water	32:37	0:0	8	ret
water	32:41	0:0	6	;
water	33:8	0:0	6	ret
op	33:11	0:0	6	[
water	33:12	0:0	6	len
op	33:16	0:0	6	-
water	33:18	0:0	6	1
op	33:19	0:0	6	]
op	33:21	0:0	6	=
water	33:23	0:0	6	0
water	33:24	0:0	6	;
return	34:8	34:18	6	ret
water	34:15	0:0	7	ret
water	35:4	0:0	6	}
else	35:6	36:19	2
stmts	36:8	36:19	3	
return	36:8	36:19	4	NULL
water	36:15	0:0	5	NULL

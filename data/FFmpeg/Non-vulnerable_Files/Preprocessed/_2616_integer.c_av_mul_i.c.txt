func	1:0	16:0	0	AVInteger	av_mul_i
params	1:18	0:0	1	
param	1:19	1:30	2	AVInteger	a
param	1:32	1:43	2	AVInteger	b
stmnts	0:0	15:14	1	
decl	2:4	2:17	2	AVInteger	out
decl	3:4	3:12	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	j
decl	4:4	4:34	2	int	na
op	4:10	0:0	2	=
water	4:12	0:0	2	(
call	4:13	4:24	3	av_log2_i
arg	4:23	4:24	4	a
water	4:23	0:0	5	a
op	4:25	0:0	2	+
water	4:26	0:0	2	16
water	4:28	0:0	2	)
op	4:30	0:0	2	>>
water	4:33	0:0	2	4
decl	5:4	5:34	2	int	nb
op	5:10	0:0	2	=
water	5:12	0:0	2	(
call	5:13	5:24	3	av_log2_i
arg	5:23	5:24	4	b
water	5:23	0:0	5	b
op	5:25	0:0	2	+
water	5:26	0:0	2	16
water	5:28	0:0	2	)
op	5:30	0:0	2	>>
water	5:33	0:0	2	4
call	6:4	6:31	2	memset
arg	6:11	6:15	3	&out
op	6:11	0:0	4	&
water	6:12	0:0	4	out
arg	6:17	6:18	3	0
water	6:17	0:0	4	0
arg	6:20	6:31	3	sizeof(out)
op	6:20	0:0	4	sizeof
water	6:26	0:0	4	(
water	6:27	0:0	4	out
water	6:30	0:0	4	)
water	6:32	0:0	2	;
for	7:4	14:4	2	(i = 0 ;i < na;i ++)
forinit	7:8	7:11	3	i = 0 ;
water	7:8	0:0	4	i
op	7:9	0:0	4	=
water	7:10	0:0	4	0
water	7:11	0:0	4	;
cond	7:13	7:15	3	i < na
water	7:13	0:0	4	i
op	7:14	0:0	4	<
water	7:15	0:0	4	na
forexpr	7:19	7:20	3	i ++
water	7:19	0:0	4	i
op	7:20	0:0	4	++
stmts	7:23	14:4	3	
water	7:23	0:0	4	{
decl	8:8	8:28	4	unsigned int	carry
op	8:26	0:0	4	=
water	8:27	0:0	4	0
if	9:8	13:12	4	(a . v [ i ])
cond	9:11	9:16	5	a . v [ i ]
water	9:11	0:0	6	a
op	9:12	0:0	6	.
water	9:13	0:0	6	v
op	9:14	0:0	6	[
water	9:15	0:0	6	i
op	9:16	0:0	6	]
stmts	10:12	13:12	5	
for	10:12	13:12	6	(j = i ;j < AV_INTEGER_SIZE && j - i <= nb;j ++)
forinit	10:16	10:19	7	j = i ;
water	10:16	0:0	8	j
op	10:17	0:0	8	=
water	10:18	0:0	8	i
water	10:19	0:0	8	;
cond	10:21	10:47	7	j < AV_INTEGER_SIZE && j - i <= nb
water	10:21	0:0	8	j
op	10:22	0:0	8	<
water	10:23	0:0	8	AV_INTEGER_SIZE
op	10:39	0:0	8	&&
water	10:42	0:0	8	j
op	10:43	0:0	8	-
water	10:44	0:0	8	i
op	10:45	0:0	8	<=
water	10:47	0:0	8	nb
forexpr	10:51	10:52	7	j ++
water	10:51	0:0	8	j
op	10:52	0:0	8	++
stmts	10:55	13:12	7	
water	10:55	0:0	8	{
water	11:16	0:0	8	carry
op	11:21	0:0	8	=
water	11:23	0:0	8	(
water	11:24	0:0	8	carry
op	11:29	0:0	8	>>
water	11:31	0:0	8	16
water	11:33	0:0	8	)
op	11:35	0:0	8	+
water	11:37	0:0	8	out
op	11:40	0:0	8	.
water	11:41	0:0	8	v
op	11:42	0:0	8	[
water	11:43	0:0	8	j
op	11:44	0:0	8	]
op	11:46	0:0	8	+
water	11:48	0:0	8	a
op	11:49	0:0	8	.
water	11:50	0:0	8	v
op	11:51	0:0	8	[
water	11:52	0:0	8	i
op	11:53	0:0	8	]
op	11:54	0:0	8	*
water	11:55	0:0	8	b
op	11:56	0:0	8	.
water	11:57	0:0	8	v
op	11:58	0:0	8	[
water	11:59	0:0	8	j
op	11:60	0:0	8	-
water	11:61	0:0	8	i
op	11:62	0:0	8	]
water	11:63	0:0	8	;
water	12:16	0:0	8	out
op	12:19	0:0	8	.
water	12:20	0:0	8	v
op	12:21	0:0	8	[
water	12:22	0:0	8	j
op	12:23	0:0	8	]
op	12:24	0:0	8	=
water	12:26	0:0	8	carry
water	12:31	0:0	8	;
water	13:12	0:0	8	}
water	14:4	0:0	4	}
return	15:4	15:14	2	out
water	15:11	0:0	3	out

func	1:0	145:0	0	static int	parse_primary
params	1:24	0:0	1	
param	1:25	1:35	2	AVExpr * *	e
param	1:37	1:46	2	Parser *	p
stmnts	0:0	144:12	1	
decl	3:4	3:42	2	AVExpr	*d
op	3:14	0:0	2	=
call	3:16	3:41	3	av_mallocz
arg	3:27	3:41	4	sizeof(AVExpr)
op	3:27	0:0	5	sizeof
water	3:33	0:0	5	(
water	3:34	0:0	5	AVExpr
water	3:40	0:0	5	)
decl	4:4	4:33	2	char	*next
op	4:15	0:0	2	=
water	4:17	0:0	2	p
op	4:18	0:0	2	->
water	4:20	0:0	2	s
water	4:21	0:0	2	,
decl	4:4	4:33	2	char	*s0
op	4:27	0:0	2	=
water	4:29	0:0	2	p
op	4:30	0:0	2	->
water	4:32	0:0	2	s
decl	5:4	5:14	2	int	ret
water	5:11	0:0	2	,
decl	5:4	5:14	2	int	i
if	6:4	7:30	2	(! d)
cond	6:8	6:9	3	! d
op	6:8	0:0	4	!
water	6:9	0:0	4	d
stmts	7:8	7:30	3	
return	7:8	7:30	4	AVERROR(ENOMEM)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	ENOMEM
water	7:23	0:0	7	ENOMEM
water	9:4	0:0	2	d
op	9:5	0:0	2	->
water	9:7	0:0	2	value
op	9:13	0:0	2	=
call	9:15	9:36	2	av_strtod
arg	9:25	9:29	3	p->s
water	9:25	0:0	4	p
op	9:26	0:0	4	->
water	9:28	0:0	4	s
arg	9:31	9:36	3	&next
op	9:31	0:0	4	&
water	9:32	0:0	4	next
water	9:37	0:0	2	;
if	10:4	15:4	2	(next != p -> s)
cond	10:8	10:19	3	next != p -> s
water	10:8	0:0	4	next
op	10:13	0:0	4	!=
water	10:16	0:0	4	p
op	10:17	0:0	4	->
water	10:19	0:0	4	s
stmts	10:22	15:4	3	
water	10:22	0:0	4	{
water	11:8	0:0	4	d
op	11:9	0:0	4	->
water	11:11	0:0	4	type
op	11:16	0:0	4	=
water	11:18	0:0	4	e_value
water	11:25	0:0	4	;
water	12:8	0:0	4	p
op	12:9	0:0	4	->
water	12:11	0:0	4	s
op	12:12	0:0	4	=
water	12:14	0:0	4	next
water	12:18	0:0	4	;
op	13:8	0:0	4	*
water	13:9	0:0	4	e
op	13:11	0:0	4	=
water	13:13	0:0	4	d
water	13:14	0:0	4	;
return	14:8	14:16	4	0
water	14:15	0:0	5	0
water	15:4	0:0	4	}
water	16:4	0:0	2	d
op	16:5	0:0	2	->
water	16:7	0:0	2	value
op	16:13	0:0	2	=
water	16:15	0:0	2	1
water	16:16	0:0	2	;
for	18:4	26:4	2	(i = 0 ;p -> const_names && p -> const_names [ i ];i ++)
forinit	18:9	18:12	3	i = 0 ;
water	18:9	0:0	4	i
op	18:10	0:0	4	=
water	18:11	0:0	4	0
water	18:12	0:0	4	;
cond	18:14	18:48	3	p -> const_names && p -> const_names [ i ]
water	18:14	0:0	4	p
op	18:15	0:0	4	->
water	18:17	0:0	4	const_names
op	18:29	0:0	4	&&
water	18:32	0:0	4	p
op	18:33	0:0	4	->
water	18:35	0:0	4	const_names
op	18:46	0:0	4	[
water	18:47	0:0	4	i
op	18:48	0:0	4	]
forexpr	18:51	18:52	3	i ++
water	18:51	0:0	4	i
op	18:52	0:0	4	++
stmts	18:56	26:4	3	
water	18:56	0:0	4	{
if	19:8	25:8	4	(strmatch (p -> s ,p -> const_names [ i ] ))
cond	19:12	19:44	5	strmatch (p -> s ,p -> const_names [ i ] )
call	19:12	19:44	6	strmatch
arg	19:21	19:25	7	p->s
water	19:21	0:0	8	p
op	19:22	0:0	8	->
water	19:24	0:0	8	s
arg	19:27	19:44	7	p->const_names[i]
water	19:27	0:0	8	p
op	19:28	0:0	8	->
water	19:30	0:0	8	const_names
op	19:41	0:0	8	[
water	19:42	0:0	8	i
op	19:43	0:0	8	]
stmts	19:47	25:8	5	
water	19:47	0:0	6	{
water	20:12	0:0	6	p
op	20:13	0:0	6	->
water	20:15	0:0	6	s
op	20:16	0:0	6	+=
call	20:19	20:43	6	strlen
arg	20:26	20:43	7	p->const_names[i]
water	20:26	0:0	8	p
op	20:27	0:0	8	->
water	20:29	0:0	8	const_names
op	20:40	0:0	8	[
water	20:41	0:0	8	i
op	20:42	0:0	8	]
water	20:44	0:0	6	;
water	21:12	0:0	6	d
op	21:13	0:0	6	->
water	21:15	0:0	6	type
op	21:20	0:0	6	=
water	21:22	0:0	6	e_const
water	21:29	0:0	6	;
water	22:12	0:0	6	d
op	22:13	0:0	6	->
water	22:15	0:0	6	a
op	22:16	0:0	6	.
water	22:17	0:0	6	const_index
op	22:29	0:0	6	=
water	22:31	0:0	6	i
water	22:32	0:0	6	;
op	23:12	0:0	6	*
water	23:13	0:0	6	e
op	23:15	0:0	6	=
water	23:17	0:0	6	d
water	23:18	0:0	6	;
return	24:12	24:20	6	0
water	24:19	0:0	7	0
water	25:8	0:0	6	}
water	26:4	0:0	4	}
for	27:4	35:4	2	(i = 0 ;i <FF_ARRAY_ELEMS (constants );i ++)
forinit	27:9	27:14	3	i = 0 ;
water	27:9	0:0	4	i
op	27:11	0:0	4	=
water	27:13	0:0	4	0
water	27:14	0:0	4	;
cond	27:16	27:44	3	i <FF_ARRAY_ELEMS (constants )
water	27:16	0:0	4	i
op	27:18	0:0	4	<
call	27:20	27:44	4	FF_ARRAY_ELEMS
arg	27:35	27:44	5	constants
water	27:35	0:0	6	constants
forexpr	27:47	27:48	3	i ++
water	27:47	0:0	4	i
op	27:48	0:0	4	++
stmts	27:52	35:4	3	
water	27:52	0:0	4	{
if	28:8	34:8	4	(strmatch (p -> s ,constants [ i ] . name ))
cond	28:12	28:44	5	strmatch (p -> s ,constants [ i ] . name )
call	28:12	28:44	6	strmatch
arg	28:21	28:25	7	p->s
water	28:21	0:0	8	p
op	28:22	0:0	8	->
water	28:24	0:0	8	s
arg	28:27	28:44	7	constants[i].name
water	28:27	0:0	8	constants
op	28:36	0:0	8	[
water	28:37	0:0	8	i
op	28:38	0:0	8	]
op	28:39	0:0	8	.
water	28:40	0:0	8	name
stmts	28:47	34:8	5	
water	28:47	0:0	6	{
water	29:12	0:0	6	p
op	29:13	0:0	6	->
water	29:15	0:0	6	s
op	29:17	0:0	6	+=
call	29:20	29:44	6	strlen
arg	29:27	29:44	7	constants[i].name
water	29:27	0:0	8	constants
op	29:36	0:0	8	[
water	29:37	0:0	8	i
op	29:38	0:0	8	]
op	29:39	0:0	8	.
water	29:40	0:0	8	name
water	29:45	0:0	6	;
water	30:12	0:0	6	d
op	30:13	0:0	6	->
water	30:15	0:0	6	type
op	30:20	0:0	6	=
water	30:22	0:0	6	e_value
water	30:29	0:0	6	;
water	31:12	0:0	6	d
op	31:13	0:0	6	->
water	31:15	0:0	6	value
op	31:21	0:0	6	=
water	31:23	0:0	6	constants
op	31:32	0:0	6	[
water	31:33	0:0	6	i
op	31:34	0:0	6	]
op	31:35	0:0	6	.
water	31:36	0:0	6	value
water	31:41	0:0	6	;
op	32:12	0:0	6	*
water	32:13	0:0	6	e
op	32:15	0:0	6	=
water	32:17	0:0	6	d
water	32:18	0:0	6	;
return	33:12	33:20	6	0
water	33:19	0:0	7	0
water	34:8	0:0	6	}
water	35:4	0:0	4	}
water	36:4	0:0	2	p
op	36:5	0:0	2	->
water	36:7	0:0	2	s
op	36:8	0:0	2	=
call	36:10	36:26	2	strchr
arg	36:17	36:21	3	p->s
water	36:17	0:0	4	p
op	36:18	0:0	4	->
water	36:20	0:0	4	s
arg	36:23	36:26	3	'('
water	36:23	0:0	4	'('
water	36:27	0:0	2	;
if	37:4	42:4	2	(! p -> s)
cond	37:8	37:12	3	! p -> s
op	37:8	0:0	4	!
water	37:9	0:0	4	p
op	37:10	0:0	4	->
water	37:12	0:0	4	s
stmts	37:15	42:4	3	
water	37:15	0:0	4	{
call	38:8	38:81	4	av_log
arg	38:15	38:16	5	p
water	38:15	0:0	6	p
arg	38:18	38:30	5	AV_LOG_ERROR
water	38:18	0:0	6	AV_LOG_ERROR
arg	38:32	38:77	5	"Undefined constant or missing '(' in '%s'\n"
water	38:32	0:0	6	"Undefined constant or missing '(' in '%s'\n"
arg	38:79	38:81	5	s0
water	38:79	0:0	6	s0
water	38:82	0:0	4	;
water	39:8	0:0	4	p
op	39:9	0:0	4	->
water	39:11	0:0	4	s
op	39:12	0:0	4	=
water	39:14	0:0	4	next
water	39:18	0:0	4	;
call	40:8	40:22	4	av_expr_free
arg	40:21	40:22	5	d
water	40:21	0:0	6	d
water	40:23	0:0	4	;
return	41:8	41:30	4	AVERROR(EINVAL)
call	41:15	41:29	5	AVERROR
arg	41:23	41:29	6	EINVAL
water	41:23	0:0	7	EINVAL
water	42:4	0:0	4	}
water	43:4	0:0	2	p
op	43:5	0:0	2	->
water	43:7	0:0	2	s
op	43:8	0:0	2	++
water	43:10	0:0	2	;
if	44:4	56:4	2	(* next == '(')
cond	44:8	44:17	3	* next == '('
op	44:8	0:0	4	*
water	44:9	0:0	4	next
op	44:14	0:0	4	==
water	44:17	0:0	4	'('
stmts	44:22	56:4	3	
water	44:22	0:0	4	{
call	45:8	45:19	4	av_freep
arg	45:17	45:19	5	&d
op	45:17	0:0	6	&
water	45:18	0:0	6	d
water	45:20	0:0	4	;
if	46:8	47:22	4	(( ret =parse_expr (& d ,p ) ) < 0)
cond	46:12	46:40	5	( ret =parse_expr (& d ,p ) ) < 0
water	46:12	0:0	6	(
water	46:13	0:0	6	ret
op	46:17	0:0	6	=
call	46:19	46:35	6	parse_expr
arg	46:30	46:32	7	&d
op	46:30	0:0	8	&
water	46:31	0:0	8	d
arg	46:34	46:35	7	p
water	46:34	0:0	8	p
water	46:36	0:0	6	)
op	46:38	0:0	6	<
water	46:40	0:0	6	0
stmts	47:12	47:22	5	
return	47:12	47:22	6	ret
water	47:19	0:0	7	ret
if	48:8	52:8	4	(p -> s [ 0 ] != ')')
cond	48:12	48:23	5	p -> s [ 0 ] != ')'
water	48:12	0:0	6	p
op	48:13	0:0	6	->
water	48:15	0:0	6	s
op	48:16	0:0	6	[
water	48:17	0:0	6	0
op	48:18	0:0	6	]
op	48:20	0:0	6	!=
water	48:23	0:0	6	')'
stmts	48:28	52:8	5	
water	48:28	0:0	6	{
call	49:12	49:63	6	av_log
arg	49:19	49:20	7	p
water	49:19	0:0	8	p
arg	49:22	49:34	7	AV_LOG_ERROR
water	49:22	0:0	8	AV_LOG_ERROR
arg	49:36	49:59	7	"Missing ')' in '%s'\n"
water	49:36	0:0	8	"Missing ')' in '%s'\n"
arg	49:61	49:63	7	s0
water	49:61	0:0	8	s0
water	49:64	0:0	6	;
call	50:12	50:26	6	av_expr_free
arg	50:25	50:26	7	d
water	50:25	0:0	8	d
water	50:27	0:0	6	;
return	51:12	51:34	6	AVERROR(EINVAL)
call	51:19	51:33	7	AVERROR
arg	51:27	51:33	8	EINVAL
water	51:27	0:0	9	EINVAL
water	52:8	0:0	6	}
water	53:8	0:0	4	p
op	53:9	0:0	4	->
water	53:11	0:0	4	s
op	53:12	0:0	4	++
water	53:14	0:0	4	;
op	54:8	0:0	4	*
water	54:9	0:0	4	e
op	54:11	0:0	4	=
water	54:13	0:0	4	d
water	54:14	0:0	4	;
return	55:8	55:16	4	0
water	55:15	0:0	5	0
water	56:4	0:0	4	}
if	57:4	60:4	2	(( ret =parse_expr (& ( d -> param [ 0 ] ) ,p ) ) < 0)
cond	57:8	57:48	3	( ret =parse_expr (& ( d -> param [ 0 ] ) ,p ) ) < 0
water	57:8	0:0	4	(
water	57:9	0:0	4	ret
op	57:13	0:0	4	=
call	57:15	57:43	4	parse_expr
arg	57:26	57:40	5	&(d->param[0])
op	57:26	0:0	6	&
water	57:27	0:0	6	(
water	57:28	0:0	6	d
op	57:29	0:0	6	->
water	57:31	0:0	6	param
op	57:36	0:0	6	[
water	57:37	0:0	6	0
op	57:38	0:0	6	]
water	57:39	0:0	6	)
arg	57:42	57:43	5	p
water	57:42	0:0	6	p
water	57:44	0:0	4	)
op	57:46	0:0	4	<
water	57:48	0:0	4	0
stmts	57:51	60:4	3	
water	57:51	0:0	4	{
call	58:8	58:22	4	av_expr_free
arg	58:21	58:22	5	d
water	58:21	0:0	6	d
water	58:23	0:0	4	;
return	59:8	59:18	4	ret
water	59:15	0:0	5	ret
water	60:4	0:0	4	}
if	61:4	64:4	2	(p -> s [ 0 ] == ',')
cond	61:8	61:18	3	p -> s [ 0 ] == ','
water	61:8	0:0	4	p
op	61:9	0:0	4	->
water	61:11	0:0	4	s
op	61:12	0:0	4	[
water	61:13	0:0	4	0
op	61:14	0:0	4	]
op	61:15	0:0	4	==
water	61:18	0:0	4	','
stmts	61:23	64:4	3	
water	61:23	0:0	4	{
water	62:8	0:0	4	p
op	62:9	0:0	4	->
water	62:11	0:0	4	s
op	62:12	0:0	4	++
water	62:14	0:0	4	;
call	63:8	63:34	4	parse_expr
arg	63:19	63:31	5	&d->param[1]
op	63:19	0:0	6	&
water	63:20	0:0	6	d
op	63:21	0:0	6	->
water	63:23	0:0	6	param
op	63:28	0:0	6	[
water	63:29	0:0	6	1
op	63:30	0:0	6	]
arg	63:33	63:34	5	p
water	63:33	0:0	6	p
water	63:35	0:0	4	;
water	64:4	0:0	4	}
if	65:4	68:4	2	(p -> s [ 0 ] == ',')
cond	65:8	65:18	3	p -> s [ 0 ] == ','
water	65:8	0:0	4	p
op	65:9	0:0	4	->
water	65:11	0:0	4	s
op	65:12	0:0	4	[
water	65:13	0:0	4	0
op	65:14	0:0	4	]
op	65:15	0:0	4	==
water	65:18	0:0	4	','
stmts	65:23	68:4	3	
water	65:23	0:0	4	{
water	66:8	0:0	4	p
op	66:9	0:0	4	->
water	66:11	0:0	4	s
op	66:12	0:0	4	++
water	66:14	0:0	4	;
call	67:8	67:34	4	parse_expr
arg	67:19	67:31	5	&d->param[2]
op	67:19	0:0	6	&
water	67:20	0:0	6	d
op	67:21	0:0	6	->
water	67:23	0:0	6	param
op	67:28	0:0	6	[
water	67:29	0:0	6	2
op	67:30	0:0	6	]
arg	67:33	67:34	5	p
water	67:33	0:0	6	p
water	67:35	0:0	4	;
water	68:4	0:0	4	}
if	69:4	73:4	2	(p -> s [ 0 ] != ')')
cond	69:8	69:19	3	p -> s [ 0 ] != ')'
water	69:8	0:0	4	p
op	69:9	0:0	4	->
water	69:11	0:0	4	s
op	69:12	0:0	4	[
water	69:13	0:0	4	0
op	69:14	0:0	4	]
op	69:16	0:0	4	!=
water	69:19	0:0	4	')'
stmts	69:24	73:4	3	
water	69:24	0:0	4	{
call	70:8	70:76	4	av_log
arg	70:15	70:16	5	p
water	70:15	0:0	6	p
arg	70:18	70:30	5	AV_LOG_ERROR
water	70:18	0:0	6	AV_LOG_ERROR
arg	70:32	70:72	5	"Missing ')' or too many args in '%s'\n"
water	70:32	0:0	6	"Missing ')' or too many args in '%s'\n"
arg	70:74	70:76	5	s0
water	70:74	0:0	6	s0
water	70:77	0:0	4	;
call	71:8	71:22	4	av_expr_free
arg	71:21	71:22	5	d
water	71:21	0:0	6	d
water	71:23	0:0	4	;
return	72:8	72:30	4	AVERROR(EINVAL)
call	72:15	72:29	5	AVERROR
arg	72:23	72:29	6	EINVAL
water	72:23	0:0	7	EINVAL
water	73:4	0:0	4	}
water	74:4	0:0	2	p
op	74:5	0:0	2	->
water	74:7	0:0	2	s
op	74:8	0:0	2	++
water	74:10	0:0	2	;
water	75:4	0:0	2	d
op	75:5	0:0	2	->
water	75:7	0:0	2	type
op	75:12	0:0	2	=
water	75:14	0:0	2	e_func0
water	75:21	0:0	2	;
if	76:9	76:56	2	(strmatch (next ,"sinh" ))
cond	76:13	76:36	3	strmatch (next ,"sinh" )
call	76:13	76:36	4	strmatch
arg	76:22	76:26	5	next
water	76:22	0:0	6	next
arg	76:28	76:36	5	"sinh"
water	76:28	0:0	6	"sinh"
stmts	76:39	76:56	3	
water	76:39	0:0	4	d
op	76:40	0:0	4	->
water	76:42	0:0	4	a
op	76:43	0:0	4	.
water	76:44	0:0	4	func0
op	76:50	0:0	4	=
water	76:52	0:0	4	sinh
water	76:56	0:0	4	;
else	77:4	77:56	2
stmts	77:9	77:56	3	
if	77:9	77:56	4	(strmatch (next ,"cosh" ))
cond	77:13	77:36	5	strmatch (next ,"cosh" )
call	77:13	77:36	6	strmatch
arg	77:22	77:26	7	next
water	77:22	0:0	8	next
arg	77:28	77:36	7	"cosh"
water	77:28	0:0	8	"cosh"
stmts	77:39	77:56	5	
water	77:39	0:0	6	d
op	77:40	0:0	6	->
water	77:42	0:0	6	a
op	77:43	0:0	6	.
water	77:44	0:0	6	func0
op	77:50	0:0	6	=
water	77:52	0:0	6	cosh
water	77:56	0:0	6	;
else	78:4	78:56	2
stmts	78:9	78:56	3	
if	78:9	78:56	4	(strmatch (next ,"tanh" ))
cond	78:13	78:36	5	strmatch (next ,"tanh" )
call	78:13	78:36	6	strmatch
arg	78:22	78:26	7	next
water	78:22	0:0	8	next
arg	78:28	78:36	7	"tanh"
water	78:28	0:0	8	"tanh"
stmts	78:39	78:56	5	
water	78:39	0:0	6	d
op	78:40	0:0	6	->
water	78:42	0:0	6	a
op	78:43	0:0	6	.
water	78:44	0:0	6	func0
op	78:50	0:0	6	=
water	78:52	0:0	6	tanh
water	78:56	0:0	6	;
else	79:4	79:55	2
stmts	79:9	79:55	3	
if	79:9	79:55	4	(strmatch (next ,"sin" ))
cond	79:13	79:36	5	strmatch (next ,"sin" )
call	79:13	79:36	6	strmatch
arg	79:22	79:26	7	next
water	79:22	0:0	8	next
arg	79:28	79:36	7	"sin"
water	79:28	0:0	8	"sin"
stmts	79:39	79:55	5	
water	79:39	0:0	6	d
op	79:40	0:0	6	->
water	79:42	0:0	6	a
op	79:43	0:0	6	.
water	79:44	0:0	6	func0
op	79:50	0:0	6	=
water	79:52	0:0	6	sin
water	79:55	0:0	6	;
else	80:4	80:55	2
stmts	80:9	80:55	3	
if	80:9	80:55	4	(strmatch (next ,"cos" ))
cond	80:13	80:36	5	strmatch (next ,"cos" )
call	80:13	80:36	6	strmatch
arg	80:22	80:26	7	next
water	80:22	0:0	8	next
arg	80:28	80:36	7	"cos"
water	80:28	0:0	8	"cos"
stmts	80:39	80:55	5	
water	80:39	0:0	6	d
op	80:40	0:0	6	->
water	80:42	0:0	6	a
op	80:43	0:0	6	.
water	80:44	0:0	6	func0
op	80:50	0:0	6	=
water	80:52	0:0	6	cos
water	80:55	0:0	6	;
else	81:4	81:55	2
stmts	81:9	81:55	3	
if	81:9	81:55	4	(strmatch (next ,"tan" ))
cond	81:13	81:36	5	strmatch (next ,"tan" )
call	81:13	81:36	6	strmatch
arg	81:22	81:26	7	next
water	81:22	0:0	8	next
arg	81:28	81:36	7	"tan"
water	81:28	0:0	8	"tan"
stmts	81:39	81:55	5	
water	81:39	0:0	6	d
op	81:40	0:0	6	->
water	81:42	0:0	6	a
op	81:43	0:0	6	.
water	81:44	0:0	6	func0
op	81:50	0:0	6	=
water	81:52	0:0	6	tan
water	81:55	0:0	6	;
else	82:4	82:56	2
stmts	82:9	82:56	3	
if	82:9	82:56	4	(strmatch (next ,"atan" ))
cond	82:13	82:36	5	strmatch (next ,"atan" )
call	82:13	82:36	6	strmatch
arg	82:22	82:26	7	next
water	82:22	0:0	8	next
arg	82:28	82:36	7	"atan"
water	82:28	0:0	8	"atan"
stmts	82:39	82:56	5	
water	82:39	0:0	6	d
op	82:40	0:0	6	->
water	82:42	0:0	6	a
op	82:43	0:0	6	.
water	82:44	0:0	6	func0
op	82:50	0:0	6	=
water	82:52	0:0	6	atan
water	82:56	0:0	6	;
else	83:4	83:56	2
stmts	83:9	83:56	3	
if	83:9	83:56	4	(strmatch (next ,"asin" ))
cond	83:13	83:36	5	strmatch (next ,"asin" )
call	83:13	83:36	6	strmatch
arg	83:22	83:26	7	next
water	83:22	0:0	8	next
arg	83:28	83:36	7	"asin"
water	83:28	0:0	8	"asin"
stmts	83:39	83:56	5	
water	83:39	0:0	6	d
op	83:40	0:0	6	->
water	83:42	0:0	6	a
op	83:43	0:0	6	.
water	83:44	0:0	6	func0
op	83:50	0:0	6	=
water	83:52	0:0	6	asin
water	83:56	0:0	6	;
else	84:4	84:56	2
stmts	84:9	84:56	3	
if	84:9	84:56	4	(strmatch (next ,"acos" ))
cond	84:13	84:36	5	strmatch (next ,"acos" )
call	84:13	84:36	6	strmatch
arg	84:22	84:26	7	next
water	84:22	0:0	8	next
arg	84:28	84:36	7	"acos"
water	84:28	0:0	8	"acos"
stmts	84:39	84:56	5	
water	84:39	0:0	6	d
op	84:40	0:0	6	->
water	84:42	0:0	6	a
op	84:43	0:0	6	.
water	84:44	0:0	6	func0
op	84:50	0:0	6	=
water	84:52	0:0	6	acos
water	84:56	0:0	6	;
else	85:4	85:55	2
stmts	85:9	85:55	3	
if	85:9	85:55	4	(strmatch (next ,"exp" ))
cond	85:13	85:36	5	strmatch (next ,"exp" )
call	85:13	85:36	6	strmatch
arg	85:22	85:26	7	next
water	85:22	0:0	8	next
arg	85:28	85:36	7	"exp"
water	85:28	0:0	8	"exp"
stmts	85:39	85:55	5	
water	85:39	0:0	6	d
op	85:40	0:0	6	->
water	85:42	0:0	6	a
op	85:43	0:0	6	.
water	85:44	0:0	6	func0
op	85:50	0:0	6	=
water	85:52	0:0	6	exp
water	85:55	0:0	6	;
else	86:4	86:55	2
stmts	86:9	86:55	3	
if	86:9	86:55	4	(strmatch (next ,"log" ))
cond	86:13	86:36	5	strmatch (next ,"log" )
call	86:13	86:36	6	strmatch
arg	86:22	86:26	7	next
water	86:22	0:0	8	next
arg	86:28	86:36	7	"log"
water	86:28	0:0	8	"log"
stmts	86:39	86:55	5	
water	86:39	0:0	6	d
op	86:40	0:0	6	->
water	86:42	0:0	6	a
op	86:43	0:0	6	.
water	86:44	0:0	6	func0
op	86:50	0:0	6	=
water	86:52	0:0	6	log
water	86:55	0:0	6	;
else	87:4	87:56	2
stmts	87:9	87:56	3	
if	87:9	87:56	4	(strmatch (next ,"abs" ))
cond	87:13	87:36	5	strmatch (next ,"abs" )
call	87:13	87:36	6	strmatch
arg	87:22	87:26	7	next
water	87:22	0:0	8	next
arg	87:28	87:36	7	"abs"
water	87:28	0:0	8	"abs"
stmts	87:39	87:56	5	
water	87:39	0:0	6	d
op	87:40	0:0	6	->
water	87:42	0:0	6	a
op	87:43	0:0	6	.
water	87:44	0:0	6	func0
op	87:50	0:0	6	=
water	87:52	0:0	6	fabs
water	87:56	0:0	6	;
else	88:4	88:57	2
stmts	88:9	88:57	3	
if	88:9	88:57	4	(strmatch (next ,"time" ))
cond	88:13	88:36	5	strmatch (next ,"time" )
call	88:13	88:36	6	strmatch
arg	88:22	88:26	7	next
water	88:22	0:0	8	next
arg	88:28	88:36	7	"time"
water	88:28	0:0	8	"time"
stmts	88:39	88:57	5	
water	88:39	0:0	6	d
op	88:40	0:0	6	->
water	88:42	0:0	6	a
op	88:43	0:0	6	.
water	88:44	0:0	6	func0
op	88:50	0:0	6	=
water	88:52	0:0	6	etime
water	88:57	0:0	6	;
else	89:4	89:57	2
stmts	89:9	89:57	3	
if	89:9	89:57	4	(strmatch (next ,"squish" ))
cond	89:13	89:36	5	strmatch (next ,"squish" )
call	89:13	89:36	6	strmatch
arg	89:22	89:26	7	next
water	89:22	0:0	8	next
arg	89:28	89:36	7	"squish"
water	89:28	0:0	8	"squish"
stmts	89:39	89:57	5	
water	89:39	0:0	6	d
op	89:40	0:0	6	->
water	89:42	0:0	6	type
op	89:47	0:0	6	=
water	89:49	0:0	6	e_squish
water	89:57	0:0	6	;
else	90:4	90:56	2
stmts	90:9	90:56	3	
if	90:9	90:56	4	(strmatch (next ,"gauss" ))
cond	90:13	90:36	5	strmatch (next ,"gauss" )
call	90:13	90:36	6	strmatch
arg	90:22	90:26	7	next
water	90:22	0:0	8	next
arg	90:28	90:36	7	"gauss"
water	90:28	0:0	8	"gauss"
stmts	90:39	90:56	5	
water	90:39	0:0	6	d
op	90:40	0:0	6	->
water	90:42	0:0	6	type
op	90:47	0:0	6	=
water	90:49	0:0	6	e_gauss
water	90:56	0:0	6	;
else	91:4	91:54	2
stmts	91:9	91:54	3	
if	91:9	91:54	4	(strmatch (next ,"mod" ))
cond	91:13	91:36	5	strmatch (next ,"mod" )
call	91:13	91:36	6	strmatch
arg	91:22	91:26	7	next
water	91:22	0:0	8	next
arg	91:28	91:36	7	"mod"
water	91:28	0:0	8	"mod"
stmts	91:39	91:54	5	
water	91:39	0:0	6	d
op	91:40	0:0	6	->
water	91:42	0:0	6	type
op	91:47	0:0	6	=
water	91:49	0:0	6	e_mod
water	91:54	0:0	6	;
else	92:4	92:54	2
stmts	92:9	92:54	3	
if	92:9	92:54	4	(strmatch (next ,"max" ))
cond	92:13	92:36	5	strmatch (next ,"max" )
call	92:13	92:36	6	strmatch
arg	92:22	92:26	7	next
water	92:22	0:0	8	next
arg	92:28	92:36	7	"max"
water	92:28	0:0	8	"max"
stmts	92:39	92:54	5	
water	92:39	0:0	6	d
op	92:40	0:0	6	->
water	92:42	0:0	6	type
op	92:47	0:0	6	=
water	92:49	0:0	6	e_max
water	92:54	0:0	6	;
else	93:4	93:54	2
stmts	93:9	93:54	3	
if	93:9	93:54	4	(strmatch (next ,"min" ))
cond	93:13	93:36	5	strmatch (next ,"min" )
call	93:13	93:36	6	strmatch
arg	93:22	93:26	7	next
water	93:22	0:0	8	next
arg	93:28	93:36	7	"min"
water	93:28	0:0	8	"min"
stmts	93:39	93:54	5	
water	93:39	0:0	6	d
op	93:40	0:0	6	->
water	93:42	0:0	6	type
op	93:47	0:0	6	=
water	93:49	0:0	6	e_min
water	93:54	0:0	6	;
else	94:4	94:53	2
stmts	94:9	94:53	3	
if	94:9	94:53	4	(strmatch (next ,"eq" ))
cond	94:13	94:36	5	strmatch (next ,"eq" )
call	94:13	94:36	6	strmatch
arg	94:22	94:26	7	next
water	94:22	0:0	8	next
arg	94:28	94:36	7	"eq"
water	94:28	0:0	8	"eq"
stmts	94:39	94:53	5	
water	94:39	0:0	6	d
op	94:40	0:0	6	->
water	94:42	0:0	6	type
op	94:47	0:0	6	=
water	94:49	0:0	6	e_eq
water	94:53	0:0	6	;
else	95:4	95:54	2
stmts	95:9	95:54	3	
if	95:9	95:54	4	(strmatch (next ,"gte" ))
cond	95:13	95:36	5	strmatch (next ,"gte" )
call	95:13	95:36	6	strmatch
arg	95:22	95:26	7	next
water	95:22	0:0	8	next
arg	95:28	95:36	7	"gte"
water	95:28	0:0	8	"gte"
stmts	95:39	95:54	5	
water	95:39	0:0	6	d
op	95:40	0:0	6	->
water	95:42	0:0	6	type
op	95:47	0:0	6	=
water	95:49	0:0	6	e_gte
water	95:54	0:0	6	;
else	96:4	96:53	2
stmts	96:9	96:53	3	
if	96:9	96:53	4	(strmatch (next ,"gt" ))
cond	96:13	96:36	5	strmatch (next ,"gt" )
call	96:13	96:36	6	strmatch
arg	96:22	96:26	7	next
water	96:22	0:0	8	next
arg	96:28	96:36	7	"gt"
water	96:28	0:0	8	"gt"
stmts	96:39	96:53	5	
water	96:39	0:0	6	d
op	96:40	0:0	6	->
water	96:42	0:0	6	type
op	96:47	0:0	6	=
water	96:49	0:0	6	e_gt
water	96:53	0:0	6	;
else	97:4	97:54	2
stmts	97:9	97:54	3	
if	97:9	97:54	4	(strmatch (next ,"lte" ))
cond	97:13	97:36	5	strmatch (next ,"lte" )
call	97:13	97:36	6	strmatch
arg	97:22	97:26	7	next
water	97:22	0:0	8	next
arg	97:28	97:36	7	"lte"
water	97:28	0:0	8	"lte"
stmts	97:39	97:54	5	
water	97:39	0:0	6	d
op	97:40	0:0	6	->
water	97:42	0:0	6	type
op	97:47	0:0	6	=
water	97:49	0:0	6	e_lte
water	97:54	0:0	6	;
else	98:4	98:53	2
stmts	98:9	98:53	3	
if	98:9	98:53	4	(strmatch (next ,"lt" ))
cond	98:13	98:36	5	strmatch (next ,"lt" )
call	98:13	98:36	6	strmatch
arg	98:22	98:26	7	next
water	98:22	0:0	8	next
arg	98:28	98:36	7	"lt"
water	98:28	0:0	8	"lt"
stmts	98:39	98:53	5	
water	98:39	0:0	6	d
op	98:40	0:0	6	->
water	98:42	0:0	6	type
op	98:47	0:0	6	=
water	98:49	0:0	6	e_lt
water	98:53	0:0	6	;
else	99:4	99:53	2
stmts	99:9	99:53	3	
if	99:9	99:53	4	(strmatch (next ,"ld" ))
cond	99:13	99:36	5	strmatch (next ,"ld" )
call	99:13	99:36	6	strmatch
arg	99:22	99:26	7	next
water	99:22	0:0	8	next
arg	99:28	99:36	7	"ld"
water	99:28	0:0	8	"ld"
stmts	99:39	99:53	5	
water	99:39	0:0	6	d
op	99:40	0:0	6	->
water	99:42	0:0	6	type
op	99:47	0:0	6	=
water	99:49	0:0	6	e_ld
water	99:53	0:0	6	;
else	100:4	100:56	2
stmts	100:9	100:56	3	
if	100:9	100:56	4	(strmatch (next ,"isnan" ))
cond	100:13	100:36	5	strmatch (next ,"isnan" )
call	100:13	100:36	6	strmatch
arg	100:22	100:26	7	next
water	100:22	0:0	8	next
arg	100:28	100:36	7	"isnan"
water	100:28	0:0	8	"isnan"
stmts	100:39	100:56	5	
water	100:39	0:0	6	d
op	100:40	0:0	6	->
water	100:42	0:0	6	type
op	100:47	0:0	6	=
water	100:49	0:0	6	e_isnan
water	100:56	0:0	6	;
else	101:4	101:56	2
stmts	101:9	101:56	3	
if	101:9	101:56	4	(strmatch (next ,"isinf" ))
cond	101:13	101:36	5	strmatch (next ,"isinf" )
call	101:13	101:36	6	strmatch
arg	101:22	101:26	7	next
water	101:22	0:0	8	next
arg	101:28	101:36	7	"isinf"
water	101:28	0:0	8	"isinf"
stmts	101:39	101:56	5	
water	101:39	0:0	6	d
op	101:40	0:0	6	->
water	101:42	0:0	6	type
op	101:47	0:0	6	=
water	101:49	0:0	6	e_isinf
water	101:56	0:0	6	;
else	102:4	102:53	2
stmts	102:9	102:53	3	
if	102:9	102:53	4	(strmatch (next ,"st" ))
cond	102:13	102:36	5	strmatch (next ,"st" )
call	102:13	102:36	6	strmatch
arg	102:22	102:26	7	next
water	102:22	0:0	8	next
arg	102:28	102:36	7	"st"
water	102:28	0:0	8	"st"
stmts	102:39	102:53	5	
water	102:39	0:0	6	d
op	102:40	0:0	6	->
water	102:42	0:0	6	type
op	102:47	0:0	6	=
water	102:49	0:0	6	e_st
water	102:53	0:0	6	;
else	103:4	103:56	2
stmts	103:9	103:56	3	
if	103:9	103:56	4	(strmatch (next ,"while" ))
cond	103:13	103:36	5	strmatch (next ,"while" )
call	103:13	103:36	6	strmatch
arg	103:22	103:26	7	next
water	103:22	0:0	8	next
arg	103:28	103:36	7	"while"
water	103:28	0:0	8	"while"
stmts	103:39	103:56	5	
water	103:39	0:0	6	d
op	103:40	0:0	6	->
water	103:42	0:0	6	type
op	103:47	0:0	6	=
water	103:49	0:0	6	e_while
water	103:56	0:0	6	;
else	104:4	104:57	2
stmts	104:9	104:57	3	
if	104:9	104:57	4	(strmatch (next ,"taylor" ))
cond	104:13	104:36	5	strmatch (next ,"taylor" )
call	104:13	104:36	6	strmatch
arg	104:22	104:26	7	next
water	104:22	0:0	8	next
arg	104:28	104:36	7	"taylor"
water	104:28	0:0	8	"taylor"
stmts	104:39	104:57	5	
water	104:39	0:0	6	d
op	104:40	0:0	6	->
water	104:42	0:0	6	type
op	104:47	0:0	6	=
water	104:49	0:0	6	e_taylor
water	104:57	0:0	6	;
else	105:4	105:55	2
stmts	105:9	105:55	3	
if	105:9	105:55	4	(strmatch (next ,"root" ))
cond	105:13	105:36	5	strmatch (next ,"root" )
call	105:13	105:36	6	strmatch
arg	105:22	105:26	7	next
water	105:22	0:0	8	next
arg	105:28	105:36	7	"root"
water	105:28	0:0	8	"root"
stmts	105:39	105:55	5	
water	105:39	0:0	6	d
op	105:40	0:0	6	->
water	105:42	0:0	6	type
op	105:47	0:0	6	=
water	105:49	0:0	6	e_root
water	105:55	0:0	6	;
else	106:4	106:56	2
stmts	106:9	106:56	3	
if	106:9	106:56	4	(strmatch (next ,"floor" ))
cond	106:13	106:36	5	strmatch (next ,"floor" )
call	106:13	106:36	6	strmatch
arg	106:22	106:26	7	next
water	106:22	0:0	8	next
arg	106:28	106:36	7	"floor"
water	106:28	0:0	8	"floor"
stmts	106:39	106:56	5	
water	106:39	0:0	6	d
op	106:40	0:0	6	->
water	106:42	0:0	6	type
op	106:47	0:0	6	=
water	106:49	0:0	6	e_floor
water	106:56	0:0	6	;
else	107:4	107:55	2
stmts	107:9	107:55	3	
if	107:9	107:55	4	(strmatch (next ,"ceil" ))
cond	107:13	107:36	5	strmatch (next ,"ceil" )
call	107:13	107:36	6	strmatch
arg	107:22	107:26	7	next
water	107:22	0:0	8	next
arg	107:28	107:36	7	"ceil"
water	107:28	0:0	8	"ceil"
stmts	107:39	107:55	5	
water	107:39	0:0	6	d
op	107:40	0:0	6	->
water	107:42	0:0	6	type
op	107:47	0:0	6	=
water	107:49	0:0	6	e_ceil
water	107:55	0:0	6	;
else	108:4	108:56	2
stmts	108:9	108:56	3	
if	108:9	108:56	4	(strmatch (next ,"trunc" ))
cond	108:13	108:36	5	strmatch (next ,"trunc" )
call	108:13	108:36	6	strmatch
arg	108:22	108:26	7	next
water	108:22	0:0	8	next
arg	108:28	108:36	7	"trunc"
water	108:28	0:0	8	"trunc"
stmts	108:39	108:56	5	
water	108:39	0:0	6	d
op	108:40	0:0	6	->
water	108:42	0:0	6	type
op	108:47	0:0	6	=
water	108:49	0:0	6	e_trunc
water	108:56	0:0	6	;
else	109:4	109:55	2
stmts	109:9	109:55	3	
if	109:9	109:55	4	(strmatch (next ,"sqrt" ))
cond	109:13	109:36	5	strmatch (next ,"sqrt" )
call	109:13	109:36	6	strmatch
arg	109:22	109:26	7	next
water	109:22	0:0	8	next
arg	109:28	109:36	7	"sqrt"
water	109:28	0:0	8	"sqrt"
stmts	109:39	109:55	5	
water	109:39	0:0	6	d
op	109:40	0:0	6	->
water	109:42	0:0	6	type
op	109:47	0:0	6	=
water	109:49	0:0	6	e_sqrt
water	109:55	0:0	6	;
else	110:4	110:54	2
stmts	110:9	110:54	3	
if	110:9	110:54	4	(strmatch (next ,"not" ))
cond	110:13	110:36	5	strmatch (next ,"not" )
call	110:13	110:36	6	strmatch
arg	110:22	110:26	7	next
water	110:22	0:0	8	next
arg	110:28	110:36	7	"not"
water	110:28	0:0	8	"not"
stmts	110:39	110:54	5	
water	110:39	0:0	6	d
op	110:40	0:0	6	->
water	110:42	0:0	6	type
op	110:47	0:0	6	=
water	110:49	0:0	6	e_not
water	110:54	0:0	6	;
else	111:4	111:54	2
stmts	111:9	111:54	3	
if	111:9	111:54	4	(strmatch (next ,"pow" ))
cond	111:13	111:36	5	strmatch (next ,"pow" )
call	111:13	111:36	6	strmatch
arg	111:22	111:26	7	next
water	111:22	0:0	8	next
arg	111:28	111:36	7	"pow"
water	111:28	0:0	8	"pow"
stmts	111:39	111:54	5	
water	111:39	0:0	6	d
op	111:40	0:0	6	->
water	111:42	0:0	6	type
op	111:47	0:0	6	=
water	111:49	0:0	6	e_pow
water	111:54	0:0	6	;
else	112:4	112:56	2
stmts	112:9	112:56	3	
if	112:9	112:56	4	(strmatch (next ,"print" ))
cond	112:13	112:36	5	strmatch (next ,"print" )
call	112:13	112:36	6	strmatch
arg	112:22	112:26	7	next
water	112:22	0:0	8	next
arg	112:28	112:36	7	"print"
water	112:28	0:0	8	"print"
stmts	112:39	112:56	5	
water	112:39	0:0	6	d
op	112:40	0:0	6	->
water	112:42	0:0	6	type
op	112:47	0:0	6	=
water	112:49	0:0	6	e_print
water	112:56	0:0	6	;
else	113:4	113:57	2
stmts	113:9	113:57	3	
if	113:9	113:57	4	(strmatch (next ,"random" ))
cond	113:13	113:36	5	strmatch (next ,"random" )
call	113:13	113:36	6	strmatch
arg	113:22	113:26	7	next
water	113:22	0:0	8	next
arg	113:28	113:36	7	"random"
water	113:28	0:0	8	"random"
stmts	113:39	113:57	5	
water	113:39	0:0	6	d
op	113:40	0:0	6	->
water	113:42	0:0	6	type
op	113:47	0:0	6	=
water	113:49	0:0	6	e_random
water	113:57	0:0	6	;
else	114:4	114:56	2
stmts	114:9	114:56	3	
if	114:9	114:56	4	(strmatch (next ,"hypot" ))
cond	114:13	114:36	5	strmatch (next ,"hypot" )
call	114:13	114:36	6	strmatch
arg	114:22	114:26	7	next
water	114:22	0:0	8	next
arg	114:28	114:36	7	"hypot"
water	114:28	0:0	8	"hypot"
stmts	114:39	114:56	5	
water	114:39	0:0	6	d
op	114:40	0:0	6	->
water	114:42	0:0	6	type
op	114:47	0:0	6	=
water	114:49	0:0	6	e_hypot
water	114:56	0:0	6	;
else	115:4	115:54	2
stmts	115:9	115:54	3	
if	115:9	115:54	4	(strmatch (next ,"gcd" ))
cond	115:13	115:36	5	strmatch (next ,"gcd" )
call	115:13	115:36	6	strmatch
arg	115:22	115:26	7	next
water	115:22	0:0	8	next
arg	115:28	115:36	7	"gcd"
water	115:28	0:0	8	"gcd"
stmts	115:39	115:54	5	
water	115:39	0:0	6	d
op	115:40	0:0	6	->
water	115:42	0:0	6	type
op	115:47	0:0	6	=
water	115:49	0:0	6	e_gcd
water	115:54	0:0	6	;
else	116:4	116:53	2
stmts	116:9	116:53	3	
if	116:9	116:53	4	(strmatch (next ,"if" ))
cond	116:13	116:36	5	strmatch (next ,"if" )
call	116:13	116:36	6	strmatch
arg	116:22	116:26	7	next
water	116:22	0:0	8	next
arg	116:28	116:36	7	"if"
water	116:28	0:0	8	"if"
stmts	116:39	116:53	5	
water	116:39	0:0	6	d
op	116:40	0:0	6	->
water	116:42	0:0	6	type
op	116:47	0:0	6	=
water	116:49	0:0	6	e_if
water	116:53	0:0	6	;
else	117:4	117:56	2
stmts	117:9	117:56	3	
if	117:9	117:56	4	(strmatch (next ,"ifnot" ))
cond	117:13	117:36	5	strmatch (next ,"ifnot" )
call	117:13	117:36	6	strmatch
arg	117:22	117:26	7	next
water	117:22	0:0	8	next
arg	117:28	117:36	7	"ifnot"
water	117:28	0:0	8	"ifnot"
stmts	117:39	117:56	5	
water	117:39	0:0	6	d
op	117:40	0:0	6	->
water	117:42	0:0	6	type
op	117:47	0:0	6	=
water	117:49	0:0	6	e_ifnot
water	117:56	0:0	6	;
else	118:4	118:57	2
stmts	118:9	118:57	3	
if	118:9	118:57	4	(strmatch (next ,"bitand" ))
cond	118:13	118:36	5	strmatch (next ,"bitand" )
call	118:13	118:36	6	strmatch
arg	118:22	118:26	7	next
water	118:22	0:0	8	next
arg	118:28	118:36	7	"bitand"
water	118:28	0:0	8	"bitand"
stmts	118:39	118:57	5	
water	118:39	0:0	6	d
op	118:40	0:0	6	->
water	118:42	0:0	6	type
op	118:47	0:0	6	=
water	118:49	0:0	6	e_bitand
water	118:57	0:0	6	;
else	119:4	119:56	2
stmts	119:9	119:56	3	
if	119:9	119:56	4	(strmatch (next ,"bitor" ))
cond	119:13	119:36	5	strmatch (next ,"bitor" )
call	119:13	119:36	6	strmatch
arg	119:22	119:26	7	next
water	119:22	0:0	8	next
arg	119:28	119:36	7	"bitor"
water	119:28	0:0	8	"bitor"
stmts	119:39	119:56	5	
water	119:39	0:0	6	d
op	119:40	0:0	6	->
water	119:42	0:0	6	type
op	119:47	0:0	6	=
water	119:49	0:0	6	e_bitor
water	119:56	0:0	6	;
else	120:4	120:58	2
stmts	120:9	120:58	3	
if	120:9	120:58	4	(strmatch (next ,"between" ))
cond	120:13	120:37	5	strmatch (next ,"between" )
call	120:13	120:37	6	strmatch
arg	120:22	120:26	7	next
water	120:22	0:0	8	next
arg	120:28	120:37	7	"between"
water	120:28	0:0	8	"between"
stmts	120:39	120:58	5	
water	120:39	0:0	6	d
op	120:40	0:0	6	->
water	120:42	0:0	6	type
op	120:47	0:0	6	=
water	120:49	0:0	6	e_between
water	120:58	0:0	6	;
else	121:4	121:55	2
stmts	121:9	121:55	3	
if	121:9	121:55	4	(strmatch (next ,"clip" ))
cond	121:13	121:36	5	strmatch (next ,"clip" )
call	121:13	121:36	6	strmatch
arg	121:22	121:26	7	next
water	121:22	0:0	8	next
arg	121:28	121:36	7	"clip"
water	121:28	0:0	8	"clip"
stmts	121:39	121:55	5	
water	121:39	0:0	6	d
op	121:40	0:0	6	->
water	121:42	0:0	6	type
op	121:47	0:0	6	=
water	121:49	0:0	6	e_clip
water	121:55	0:0	6	;
else	122:4	142:4	2
stmts	122:9	142:4	3	
water	122:9	0:0	4	{
for	123:8	130:8	4	(i = 0 ;p -> func1_names && p -> func1_names [ i ];i ++)
forinit	123:13	123:16	5	i = 0 ;
water	123:13	0:0	6	i
op	123:14	0:0	6	=
water	123:15	0:0	6	0
water	123:16	0:0	6	;
cond	123:18	123:52	5	p -> func1_names && p -> func1_names [ i ]
water	123:18	0:0	6	p
op	123:19	0:0	6	->
water	123:21	0:0	6	func1_names
op	123:33	0:0	6	&&
water	123:36	0:0	6	p
op	123:37	0:0	6	->
water	123:39	0:0	6	func1_names
op	123:50	0:0	6	[
water	123:51	0:0	6	i
op	123:52	0:0	6	]
forexpr	123:55	123:56	5	i ++
water	123:55	0:0	6	i
op	123:56	0:0	6	++
stmts	123:60	130:8	5	
water	123:60	0:0	6	{
if	124:12	129:12	6	(strmatch (next ,p -> func1_names [ i ] ))
cond	124:16	124:48	7	strmatch (next ,p -> func1_names [ i ] )
call	124:16	124:48	8	strmatch
arg	124:25	124:29	9	next
water	124:25	0:0	10	next
arg	124:31	124:48	9	p->func1_names[i]
water	124:31	0:0	10	p
op	124:32	0:0	10	->
water	124:34	0:0	10	func1_names
op	124:45	0:0	10	[
water	124:46	0:0	10	i
op	124:47	0:0	10	]
stmts	124:51	129:12	7	
water	124:51	0:0	8	{
water	125:16	0:0	8	d
op	125:17	0:0	8	->
water	125:19	0:0	8	a
op	125:20	0:0	8	.
water	125:21	0:0	8	func1
op	125:27	0:0	8	=
water	125:29	0:0	8	p
op	125:30	0:0	8	->
water	125:32	0:0	8	funcs1
op	125:38	0:0	8	[
water	125:39	0:0	8	i
op	125:40	0:0	8	]
water	125:41	0:0	8	;
water	126:16	0:0	8	d
op	126:17	0:0	8	->
water	126:19	0:0	8	type
op	126:24	0:0	8	=
water	126:26	0:0	8	e_func1
water	126:33	0:0	8	;
op	127:16	0:0	8	*
water	127:17	0:0	8	e
op	127:19	0:0	8	=
water	127:21	0:0	8	d
water	127:22	0:0	8	;
return	128:16	128:24	8	0
water	128:23	0:0	9	0
water	129:12	0:0	8	}
water	130:8	0:0	6	}
for	131:8	138:8	4	(i = 0 ;p -> func2_names && p -> func2_names [ i ];i ++)
forinit	131:13	131:16	5	i = 0 ;
water	131:13	0:0	6	i
op	131:14	0:0	6	=
water	131:15	0:0	6	0
water	131:16	0:0	6	;
cond	131:18	131:52	5	p -> func2_names && p -> func2_names [ i ]
water	131:18	0:0	6	p
op	131:19	0:0	6	->
water	131:21	0:0	6	func2_names
op	131:33	0:0	6	&&
water	131:36	0:0	6	p
op	131:37	0:0	6	->
water	131:39	0:0	6	func2_names
op	131:50	0:0	6	[
water	131:51	0:0	6	i
op	131:52	0:0	6	]
forexpr	131:55	131:56	5	i ++
water	131:55	0:0	6	i
op	131:56	0:0	6	++
stmts	131:60	138:8	5	
water	131:60	0:0	6	{
if	132:12	137:12	6	(strmatch (next ,p -> func2_names [ i ] ))
cond	132:16	132:48	7	strmatch (next ,p -> func2_names [ i ] )
call	132:16	132:48	8	strmatch
arg	132:25	132:29	9	next
water	132:25	0:0	10	next
arg	132:31	132:48	9	p->func2_names[i]
water	132:31	0:0	10	p
op	132:32	0:0	10	->
water	132:34	0:0	10	func2_names
op	132:45	0:0	10	[
water	132:46	0:0	10	i
op	132:47	0:0	10	]
stmts	132:51	137:12	7	
water	132:51	0:0	8	{
water	133:16	0:0	8	d
op	133:17	0:0	8	->
water	133:19	0:0	8	a
op	133:20	0:0	8	.
water	133:21	0:0	8	func2
op	133:27	0:0	8	=
water	133:29	0:0	8	p
op	133:30	0:0	8	->
water	133:32	0:0	8	funcs2
op	133:38	0:0	8	[
water	133:39	0:0	8	i
op	133:40	0:0	8	]
water	133:41	0:0	8	;
water	134:16	0:0	8	d
op	134:17	0:0	8	->
water	134:19	0:0	8	type
op	134:24	0:0	8	=
water	134:26	0:0	8	e_func2
water	134:33	0:0	8	;
op	135:16	0:0	8	*
water	135:17	0:0	8	e
op	135:19	0:0	8	=
water	135:21	0:0	8	d
water	135:22	0:0	8	;
return	136:16	136:24	8	0
water	136:23	0:0	9	0
water	137:12	0:0	8	}
water	138:8	0:0	6	}
call	139:8	139:64	4	av_log
arg	139:15	139:16	5	p
water	139:15	0:0	6	p
arg	139:18	139:30	5	AV_LOG_ERROR
water	139:18	0:0	6	AV_LOG_ERROR
arg	139:32	139:60	5	"Unknown function in '%s'\n"
water	139:32	0:0	6	"Unknown function in '%s'\n"
arg	139:62	139:64	5	s0
water	139:62	0:0	6	s0
water	139:65	0:0	4	;
call	140:8	140:22	4	av_expr_free
arg	140:21	140:22	5	d
water	140:21	0:0	6	d
water	140:23	0:0	4	;
return	141:8	141:30	4	AVERROR(EINVAL)
call	141:15	141:29	5	AVERROR
arg	141:23	141:29	6	EINVAL
water	141:23	0:0	7	EINVAL
water	142:4	0:0	4	}
op	143:4	0:0	2	*
water	143:5	0:0	2	e
op	143:7	0:0	2	=
water	143:9	0:0	2	d
water	143:10	0:0	2	;
return	144:4	144:12	2	0
water	144:11	0:0	3	0

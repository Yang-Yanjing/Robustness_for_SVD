func	1:0	43:0	0	void	ff_ac3_group_exponents
params	1:27	0:0	1	
param	1:28	1:47	2	AC3EncodeContext *	s
stmnts	0:0	42:4	1	
decl	3:4	3:23	2	int	blk
water	3:11	0:0	2	,
decl	3:4	3:23	2	int	ch
water	3:15	0:0	2	,
decl	3:4	3:23	2	int	i
water	3:18	0:0	2	,
decl	3:4	3:23	2	int	cpl
decl	4:4	4:29	2	int	group_size
water	4:18	0:0	2	,
decl	4:4	4:29	2	int	nb_groups
decl	5:4	5:14	2	uint8_t	*p
decl	6:4	6:30	2	int	delta0
water	6:14	0:0	2	,
decl	6:4	6:30	2	int	delta1
water	6:22	0:0	2	,
decl	6:4	6:30	2	int	delta2
decl	7:4	7:18	2	int	exp0
water	7:12	0:0	2	,
decl	7:4	7:18	2	int	exp1
for	8:4	42:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	8:9	8:16	3	blk = 0 ;
water	8:9	0:0	4	blk
op	8:13	0:0	4	=
water	8:15	0:0	4	0
water	8:16	0:0	4	;
cond	8:18	8:27	3	blk < s -> num_blocks
water	8:18	0:0	4	blk
op	8:22	0:0	4	<
water	8:24	0:0	4	s
op	8:25	0:0	4	->
water	8:27	0:0	4	num_blocks
forexpr	8:39	8:42	3	blk ++
water	8:39	0:0	4	blk
op	8:42	0:0	4	++
stmts	8:46	42:4	3	
water	8:46	0:0	4	{
decl	9:8	9:41	4	AC3Block	*block
op	9:24	0:0	4	=
op	9:26	0:0	4	&
water	9:27	0:0	4	s
op	9:28	0:0	4	->
water	9:30	0:0	4	blocks
op	9:36	0:0	4	[
water	9:37	0:0	4	blk
op	9:40	0:0	4	]
for	10:8	41:8	4	(ch = ! block -> cpl_in_use ;ch <= s -> channels;ch ++)
forinit	10:13	10:36	5	ch = ! block -> cpl_in_use ;
water	10:13	0:0	6	ch
op	10:16	0:0	6	=
op	10:18	0:0	6	!
water	10:19	0:0	6	block
op	10:24	0:0	6	->
water	10:26	0:0	6	cpl_in_use
water	10:36	0:0	6	;
cond	10:38	10:47	5	ch <= s -> channels
water	10:38	0:0	6	ch
op	10:41	0:0	6	<=
water	10:44	0:0	6	s
op	10:45	0:0	6	->
water	10:47	0:0	6	channels
forexpr	10:57	10:59	5	ch ++
water	10:57	0:0	6	ch
op	10:59	0:0	6	++
stmts	10:63	41:8	5	
water	10:63	0:0	6	{
decl	11:12	11:55	6	int	exp_strategy
op	11:29	0:0	6	=
water	11:31	0:0	6	s
op	11:32	0:0	6	->
water	11:34	0:0	6	exp_strategy
op	11:46	0:0	6	[
water	11:47	0:0	6	ch
op	11:49	0:0	6	]
op	11:50	0:0	6	[
water	11:51	0:0	6	blk
op	11:54	0:0	6	]
if	12:12	13:24	6	(exp_strategy == EXP_REUSE)
cond	12:16	12:32	7	exp_strategy == EXP_REUSE
water	12:16	0:0	8	exp_strategy
op	12:29	0:0	8	==
water	12:32	0:0	8	EXP_REUSE
stmts	13:16	13:24	7	
continue	13:16	13:24	8	
water	14:12	0:0	6	cpl
op	14:16	0:0	6	=
water	14:18	0:0	6	(
water	14:19	0:0	6	ch
op	14:22	0:0	6	==
water	14:25	0:0	6	CPL_CH
water	14:31	0:0	6	)
water	14:32	0:0	6	;
water	15:12	0:0	6	group_size
op	15:23	0:0	6	=
water	15:25	0:0	6	exp_strategy
op	15:38	0:0	6	+
water	15:40	0:0	6	(
water	15:41	0:0	6	exp_strategy
op	15:54	0:0	6	==
water	15:57	0:0	6	EXP_D45
water	15:64	0:0	6	)
water	15:65	0:0	6	;
water	16:12	0:0	6	nb_groups
op	16:22	0:0	6	=
water	16:24	0:0	6	exponent_group_tab
op	16:42	0:0	6	[
water	16:43	0:0	6	cpl
op	16:46	0:0	6	]
op	16:47	0:0	6	[
water	16:48	0:0	6	exp_strategy
op	16:60	0:0	6	-
water	16:61	0:0	6	1
op	16:62	0:0	6	]
op	16:63	0:0	6	[
water	16:64	0:0	6	block
op	16:69	0:0	6	->
water	16:71	0:0	6	end_freq
op	16:79	0:0	6	[
water	16:80	0:0	6	ch
op	16:82	0:0	6	]
op	16:83	0:0	6	-
water	16:84	0:0	6	s
op	16:85	0:0	6	->
water	16:87	0:0	6	start_freq
op	16:97	0:0	6	[
water	16:98	0:0	6	ch
op	16:100	0:0	6	]
op	16:101	0:0	6	]
water	16:102	0:0	6	;
water	17:12	0:0	6	p
op	17:14	0:0	6	=
water	17:16	0:0	6	block
op	17:21	0:0	6	->
water	17:23	0:0	6	exp
op	17:26	0:0	6	[
water	17:27	0:0	6	ch
op	17:29	0:0	6	]
op	17:31	0:0	6	+
water	17:33	0:0	6	s
op	17:34	0:0	6	->
water	17:36	0:0	6	start_freq
op	17:46	0:0	6	[
water	17:47	0:0	6	ch
op	17:49	0:0	6	]
op	17:51	0:0	6	-
water	17:53	0:0	6	cpl
water	17:56	0:0	6	;
water	19:12	0:0	6	exp1
op	19:17	0:0	6	=
op	19:19	0:0	6	*
water	19:20	0:0	6	p
op	19:21	0:0	6	++
water	19:23	0:0	6	;
water	20:12	0:0	6	block
op	20:17	0:0	6	->
water	20:19	0:0	6	grouped_exp
op	20:30	0:0	6	[
water	20:31	0:0	6	ch
op	20:33	0:0	6	]
op	20:34	0:0	6	[
water	20:35	0:0	6	0
op	20:36	0:0	6	]
op	20:38	0:0	6	=
water	20:40	0:0	6	exp1
water	20:44	0:0	6	;
for	22:12	40:12	6	(i = 1 ;i <= nb_groups;i ++)
forinit	22:17	22:22	7	i = 1 ;
water	22:17	0:0	8	i
op	22:19	0:0	8	=
water	22:21	0:0	8	1
water	22:22	0:0	8	;
cond	22:24	22:29	7	i <= nb_groups
water	22:24	0:0	8	i
op	22:26	0:0	8	<=
water	22:29	0:0	8	nb_groups
forexpr	22:40	22:41	7	i ++
water	22:40	0:0	8	i
op	22:41	0:0	8	++
stmts	22:45	40:12	7	
water	22:45	0:0	8	{
water	24:16	0:0	8	exp0
op	24:23	0:0	8	=
water	24:25	0:0	8	exp1
water	24:29	0:0	8	;
water	25:16	0:0	8	exp1
op	25:23	0:0	8	=
water	25:25	0:0	8	p
op	25:26	0:0	8	[
water	25:27	0:0	8	0
op	25:28	0:0	8	]
water	25:29	0:0	8	;
water	26:16	0:0	8	p
op	26:22	0:0	8	+=
water	26:25	0:0	8	group_size
water	26:35	0:0	8	;
water	27:16	0:0	8	delta0
op	27:23	0:0	8	=
water	27:25	0:0	8	exp1
op	27:30	0:0	8	-
water	27:32	0:0	8	exp0
op	27:37	0:0	8	+
water	27:39	0:0	8	2
water	27:40	0:0	8	;
call	28:16	28:53	8	av_assert2
arg	28:27	28:53	9	delta0>=0&&delta0<=4
water	28:27	0:0	10	delta0
op	28:34	0:0	10	>=
water	28:37	0:0	10	0
op	28:39	0:0	10	&&
water	28:42	0:0	10	delta0
op	28:49	0:0	10	<=
water	28:52	0:0	10	4
water	28:54	0:0	8	;
water	29:16	0:0	8	exp0
op	29:23	0:0	8	=
water	29:25	0:0	8	exp1
water	29:29	0:0	8	;
water	30:16	0:0	8	exp1
op	30:23	0:0	8	=
water	30:25	0:0	8	p
op	30:26	0:0	8	[
water	30:27	0:0	8	0
op	30:28	0:0	8	]
water	30:29	0:0	8	;
water	31:16	0:0	8	p
op	31:22	0:0	8	+=
water	31:25	0:0	8	group_size
water	31:35	0:0	8	;
water	32:16	0:0	8	delta1
op	32:23	0:0	8	=
water	32:25	0:0	8	exp1
op	32:30	0:0	8	-
water	32:32	0:0	8	exp0
op	32:37	0:0	8	+
water	32:39	0:0	8	2
water	32:40	0:0	8	;
call	33:16	33:53	8	av_assert2
arg	33:27	33:53	9	delta1>=0&&delta1<=4
water	33:27	0:0	10	delta1
op	33:34	0:0	10	>=
water	33:37	0:0	10	0
op	33:39	0:0	10	&&
water	33:42	0:0	10	delta1
op	33:49	0:0	10	<=
water	33:52	0:0	10	4
water	33:54	0:0	8	;
water	34:16	0:0	8	exp0
op	34:23	0:0	8	=
water	34:25	0:0	8	exp1
water	34:29	0:0	8	;
water	35:16	0:0	8	exp1
op	35:23	0:0	8	=
water	35:25	0:0	8	p
op	35:26	0:0	8	[
water	35:27	0:0	8	0
op	35:28	0:0	8	]
water	35:29	0:0	8	;
water	36:16	0:0	8	p
op	36:22	0:0	8	+=
water	36:25	0:0	8	group_size
water	36:35	0:0	8	;
water	37:16	0:0	8	delta2
op	37:23	0:0	8	=
water	37:25	0:0	8	exp1
op	37:30	0:0	8	-
water	37:32	0:0	8	exp0
op	37:37	0:0	8	+
water	37:39	0:0	8	2
water	37:40	0:0	8	;
call	38:16	38:53	8	av_assert2
arg	38:27	38:53	9	delta2>=0&&delta2<=4
water	38:27	0:0	10	delta2
op	38:34	0:0	10	>=
water	38:37	0:0	10	0
op	38:39	0:0	10	&&
water	38:42	0:0	10	delta2
op	38:49	0:0	10	<=
water	38:52	0:0	10	4
water	38:54	0:0	8	;
water	39:16	0:0	8	block
op	39:21	0:0	8	->
water	39:23	0:0	8	grouped_exp
op	39:34	0:0	8	[
water	39:35	0:0	8	ch
op	39:37	0:0	8	]
op	39:38	0:0	8	[
water	39:39	0:0	8	i
op	39:40	0:0	8	]
op	39:42	0:0	8	=
water	39:44	0:0	8	(
water	39:45	0:0	8	(
water	39:46	0:0	8	delta0
op	39:53	0:0	8	*
water	39:55	0:0	8	5
op	39:57	0:0	8	+
water	39:59	0:0	8	delta1
water	39:65	0:0	8	)
op	39:67	0:0	8	*
water	39:69	0:0	8	5
water	39:70	0:0	8	)
op	39:72	0:0	8	+
water	39:74	0:0	8	delta2
water	39:80	0:0	8	;
water	40:12	0:0	8	}
water	41:8	0:0	6	}
water	42:4	0:0	4	}

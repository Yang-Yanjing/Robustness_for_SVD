func	1:15	34:0	0	int	audio_read_header
params	1:36	0:0	1	
param	1:37	1:56	2	AVFormatContext *	s1
stmnts	0:0	33:23	1	
decl	3:4	3:31	2	AlsaData	*s
op	3:16	0:0	2	=
water	3:18	0:0	2	s1
op	3:20	0:0	2	->
water	3:22	0:0	2	priv_data
decl	4:4	4:16	2	AVStream	*st
decl	5:4	5:11	2	int	ret
decl	6:4	6:27	2	enum AVCodecID	codec_id
water	7:4	0:0	2	st
op	7:7	0:0	2	=
call	7:9	7:37	2	avformat_new_stream
arg	7:29	7:31	3	s1
water	7:29	0:0	4	s1
arg	7:33	7:37	3	NULL
water	7:33	0:0	4	NULL
water	7:38	0:0	2	;
if	8:4	11:4	2	(! st)
cond	8:8	8:9	3	! st
op	8:8	0:0	4	!
water	8:9	0:0	4	st
stmts	8:13	11:4	3	
water	8:13	0:0	4	{
call	9:8	9:54	4	av_log
arg	9:15	9:17	5	s1
water	9:15	0:0	6	s1
arg	9:19	9:31	5	AV_LOG_ERROR
water	9:19	0:0	6	AV_LOG_ERROR
arg	9:33	9:54	5	"Cannot add stream\n"
water	9:33	0:0	6	"Cannot add stream\n"
water	9:55	0:0	4	;
return	10:8	10:30	4	AVERROR(ENOMEM)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	ENOMEM
water	10:23	0:0	7	ENOMEM
water	11:4	0:0	4	}
water	12:4	0:0	2	codec_id
op	12:16	0:0	2	=
water	12:18	0:0	2	s1
op	12:20	0:0	2	->
water	12:22	0:0	2	audio_codec_id
water	12:36	0:0	2	;
water	13:4	0:0	2	ret
op	13:8	0:0	2	=
call	13:10	14:17	2	ff_alsa_open
arg	13:23	13:25	3	s1
water	13:23	0:0	4	s1
arg	13:27	13:49	3	SND_PCM_STREAM_CAPTURE
water	13:27	0:0	4	SND_PCM_STREAM_CAPTURE
arg	13:51	13:66	3	&s->sample_rate
op	13:51	0:0	4	&
water	13:52	0:0	4	s
op	13:53	0:0	4	->
water	13:55	0:0	4	sample_rate
arg	13:68	13:79	3	s->channels
water	13:68	0:0	4	s
op	13:69	0:0	4	->
water	13:71	0:0	4	channels
arg	14:8	14:17	3	&codec_id
op	14:8	0:0	4	&
water	14:9	0:0	4	codec_id
water	14:18	0:0	2	;
if	15:4	17:4	2	(ret < 0)
cond	15:8	15:14	3	ret < 0
water	15:8	0:0	4	ret
op	15:12	0:0	4	<
water	15:14	0:0	4	0
stmts	15:17	17:4	3	
water	15:17	0:0	4	{
return	16:8	16:27	4	AVERROR(EIO)
call	16:15	16:26	5	AVERROR
arg	16:23	16:26	6	EIO
water	16:23	0:0	7	EIO
water	17:4	0:0	4	}
water	19:4	0:0	2	st
op	19:6	0:0	2	->
water	19:8	0:0	2	codec
op	19:13	0:0	2	->
water	19:15	0:0	2	codec_type
op	19:27	0:0	2	=
water	19:29	0:0	2	AVMEDIA_TYPE_AUDIO
water	19:47	0:0	2	;
water	20:4	0:0	2	st
op	20:6	0:0	2	->
water	20:8	0:0	2	codec
op	20:13	0:0	2	->
water	20:15	0:0	2	codec_id
op	20:27	0:0	2	=
water	20:29	0:0	2	codec_id
water	20:37	0:0	2	;
water	21:4	0:0	2	st
op	21:6	0:0	2	->
water	21:8	0:0	2	codec
op	21:13	0:0	2	->
water	21:15	0:0	2	sample_rate
op	21:27	0:0	2	=
water	21:29	0:0	2	s
op	21:30	0:0	2	->
water	21:32	0:0	2	sample_rate
water	21:43	0:0	2	;
water	22:4	0:0	2	st
op	22:6	0:0	2	->
water	22:8	0:0	2	codec
op	22:13	0:0	2	->
water	22:15	0:0	2	channels
op	22:27	0:0	2	=
water	22:29	0:0	2	s
op	22:30	0:0	2	->
water	22:32	0:0	2	channels
water	22:40	0:0	2	;
water	23:4	0:0	2	st
op	23:6	0:0	2	->
water	23:8	0:0	2	codec
op	23:13	0:0	2	->
water	23:15	0:0	2	frame_size
op	23:26	0:0	2	=
water	23:28	0:0	2	s
op	23:29	0:0	2	->
water	23:31	0:0	2	frame_size
water	23:41	0:0	2	;
call	24:4	24:42	2	avpriv_set_pts_info
arg	24:24	24:26	3	st
water	24:24	0:0	4	st
arg	24:28	24:30	3	64
water	24:28	0:0	4	64
arg	24:32	24:33	3	1
water	24:32	0:0	4	1
arg	24:35	24:42	3	1000000
water	24:35	0:0	4	1000000
water	24:43	0:0	2	;
water	26:4	0:0	2	s
op	26:5	0:0	2	->
water	26:7	0:0	2	timefilter
op	26:18	0:0	2	=
call	26:20	27:60	2	ff_timefilter_new
arg	26:38	26:64	3	1000000.0/s->sample_rate
water	26:38	0:0	4	1000000
op	26:45	0:0	4	.
water	26:46	0:0	4	0
op	26:48	0:0	4	/
water	26:50	0:0	4	s
op	26:51	0:0	4	->
water	26:53	0:0	4	sample_rate
arg	27:38	27:52	3	s->period_size
water	27:38	0:0	4	s
op	27:39	0:0	4	->
water	27:41	0:0	4	period_size
arg	27:54	27:60	3	1.5E-6
water	27:54	0:0	4	1
op	27:55	0:0	4	.
water	27:56	0:0	4	5
water	27:57	0:0	4	E
op	27:58	0:0	4	-
water	27:59	0:0	4	6
water	27:61	0:0	2	;
if	28:4	29:17	2	(! s -> timefilter)
cond	28:8	28:12	3	! s -> timefilter
op	28:8	0:0	4	!
water	28:9	0:0	4	s
op	28:10	0:0	4	->
water	28:12	0:0	4	timefilter
stmts	29:8	29:17	3	
goto	29:8	29:17	4	fail
water	29:13	0:0	5	fail
return	30:4	30:12	2	0
water	30:11	0:0	3	0
label	31:0	31:4	2	fail :
call	32:4	32:22	2	snd_pcm_close
arg	32:18	32:22	3	s->h
water	32:18	0:0	4	s
op	32:19	0:0	4	->
water	32:21	0:0	4	h
water	32:23	0:0	2	;
return	33:4	33:23	2	AVERROR(EIO)
call	33:11	33:22	3	AVERROR
arg	33:19	33:22	4	EIO
water	33:19	0:0	5	EIO

func	1:0	9:0	0	static void	close_output_stream
params	1:31	0:0	1	
param	1:32	1:49	2	OutputStream *	ost
stmnts	0:0	8:4	1	
decl	3:4	3:50	2	OutputFile	*of
op	3:19	0:0	2	=
water	3:21	0:0	2	output_files
op	3:33	0:0	2	[
water	3:34	0:0	2	ost
op	3:37	0:0	2	->
water	3:39	0:0	2	file_index
op	3:49	0:0	2	]
water	4:4	0:0	2	ost
op	4:7	0:0	2	->
water	4:9	0:0	2	finished
op	4:18	0:0	2	|=
water	4:21	0:0	2	ENCODER_FINISHED
water	4:37	0:0	2	;
if	5:4	8:4	2	(of -> shortest)
cond	5:8	5:12	3	of -> shortest
water	5:8	0:0	4	of
op	5:10	0:0	4	->
water	5:12	0:0	4	shortest
stmts	5:22	8:4	3	
water	5:22	0:0	4	{
decl	6:8	6:108	4	int64_t	end
op	6:20	0:0	4	=
call	6:22	6:107	5	av_rescale_q
arg	6:35	6:66	6	ost->sync_opts-ost->first_pts
water	6:35	0:0	7	ost
op	6:38	0:0	7	->
water	6:40	0:0	7	sync_opts
op	6:50	0:0	7	-
water	6:52	0:0	7	ost
op	6:55	0:0	7	->
water	6:57	0:0	7	first_pts
arg	6:68	6:91	6	ost->enc_ctx->time_base
water	6:68	0:0	7	ost
op	6:71	0:0	7	->
water	6:73	0:0	7	enc_ctx
op	6:80	0:0	7	->
water	6:82	0:0	7	time_base
arg	6:93	6:107	6	AV_TIME_BASE_Q
water	6:93	0:0	7	AV_TIME_BASE_Q
water	7:8	0:0	4	of
op	7:10	0:0	4	->
water	7:12	0:0	4	recording_time
op	7:27	0:0	4	=
call	7:29	7:58	4	FFMIN
arg	7:35	7:53	5	of->recording_time
water	7:35	0:0	6	of
op	7:37	0:0	6	->
water	7:39	0:0	6	recording_time
arg	7:55	7:58	5	end
water	7:55	0:0	6	end
water	7:59	0:0	4	;
water	8:4	0:0	4	}

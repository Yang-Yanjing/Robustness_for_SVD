func	1:15	35:0	0	int	join_init
params	1:28	0:0	1	
param	1:29	1:49	2	AVFilterContext *	ctx
stmnts	0:0	34:12	1	
decl	3:4	3:30	2	JoinContext	*s
op	3:19	0:0	2	=
water	3:21	0:0	2	ctx
op	3:24	0:0	2	->
water	3:26	0:0	2	priv
decl	4:4	4:14	2	int	ret
water	4:11	0:0	2	,
decl	4:4	4:14	2	int	i
if	5:4	9:4	2	(! ( s -> channel_layout =av_get_channel_layout (s -> channel_layout_str ) ))
cond	5:8	5:74	3	! ( s -> channel_layout =av_get_channel_layout (s -> channel_layout_str ) )
op	5:8	0:0	4	!
water	5:9	0:0	4	(
water	5:10	0:0	4	s
op	5:11	0:0	4	->
water	5:13	0:0	4	channel_layout
op	5:28	0:0	4	=
call	5:30	5:73	4	av_get_channel_layout
arg	5:52	5:73	5	s->channel_layout_str
water	5:52	0:0	6	s
op	5:53	0:0	6	->
water	5:55	0:0	6	channel_layout_str
water	5:74	0:0	4	)
stmts	5:77	9:4	3	
water	5:77	0:0	4	{
call	6:8	7:36	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	6:34	6:72	5	"Error parsing channel layout '%s'.\n"
water	6:34	0:0	6	"Error parsing channel layout '%s'.\n"
arg	7:15	7:36	5	s->channel_layout_str
water	7:15	0:0	6	s
op	7:16	0:0	6	->
water	7:18	0:0	6	channel_layout_str
water	7:37	0:0	4	;
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	4	}
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	nb_channels
op	10:20	0:0	2	=
call	10:22	10:73	2	av_get_channel_layout_nb_channels
arg	10:56	10:73	3	s->channel_layout
water	10:56	0:0	4	s
op	10:57	0:0	4	->
water	10:59	0:0	4	channel_layout
water	10:74	0:0	2	;
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	channels
op	11:20	0:0	2	=
call	11:22	11:75	2	av_mallocz_array
arg	11:39	11:53	3	s->nb_channels
water	11:39	0:0	4	s
op	11:40	0:0	4	->
water	11:42	0:0	4	nb_channels
arg	11:55	11:75	3	sizeof(*s->channels)
op	11:55	0:0	4	sizeof
water	11:61	0:0	4	(
op	11:62	0:0	4	*
water	11:63	0:0	4	s
op	11:64	0:0	4	->
water	11:66	0:0	4	channels
water	11:74	0:0	4	)
water	11:76	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	buffers
op	12:20	0:0	2	=
call	12:22	12:74	2	av_mallocz_array
arg	12:39	12:53	3	s->nb_channels
water	12:39	0:0	4	s
op	12:40	0:0	4	->
water	12:42	0:0	4	nb_channels
arg	12:55	12:74	3	sizeof(*s->buffers)
op	12:55	0:0	4	sizeof
water	12:61	0:0	4	(
op	12:62	0:0	4	*
water	12:63	0:0	4	s
op	12:64	0:0	4	->
water	12:66	0:0	4	buffers
water	12:73	0:0	4	)
water	12:75	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	input_frames
op	13:20	0:0	2	=
call	13:22	13:74	2	av_mallocz_array
arg	13:39	13:48	3	s->inputs
water	13:39	0:0	4	s
op	13:40	0:0	4	->
water	13:42	0:0	4	inputs
arg	13:50	13:74	3	sizeof(*s->input_frames)
op	13:50	0:0	4	sizeof
water	13:56	0:0	4	(
op	13:57	0:0	4	*
water	13:58	0:0	4	s
op	13:59	0:0	4	->
water	13:61	0:0	4	input_frames
water	13:73	0:0	4	)
water	13:75	0:0	2	;
if	14:4	15:30	2	(! s -> channels || ! s -> buffers || ! s -> input_frames)
cond	14:8	14:42	3	! s -> channels || ! s -> buffers || ! s -> input_frames
op	14:8	0:0	4	!
water	14:9	0:0	4	s
op	14:10	0:0	4	->
water	14:12	0:0	4	channels
op	14:21	0:0	4	||
op	14:24	0:0	4	!
water	14:25	0:0	4	s
op	14:26	0:0	4	->
water	14:28	0:0	4	buffers
op	14:35	0:0	4	||
op	14:38	0:0	4	!
water	14:39	0:0	4	s
op	14:40	0:0	4	->
water	14:42	0:0	4	input_frames
stmts	15:8	15:30	3	
return	15:8	15:30	4	AVERROR(ENOMEM)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	ENOMEM
water	15:23	0:0	7	ENOMEM
for	16:4	19:4	2	(i = 0 ;i < s -> nb_channels;i ++)
forinit	16:9	16:14	3	i = 0 ;
water	16:9	0:0	4	i
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:23	3	i < s -> nb_channels
water	16:16	0:0	4	i
op	16:18	0:0	4	<
water	16:20	0:0	4	s
op	16:21	0:0	4	->
water	16:23	0:0	4	nb_channels
forexpr	16:36	16:37	3	i ++
water	16:36	0:0	4	i
op	16:37	0:0	4	++
stmts	16:41	19:4	3	
water	16:41	0:0	4	{
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	channels
op	17:19	0:0	4	[
water	17:20	0:0	4	i
op	17:21	0:0	4	]
op	17:22	0:0	4	.
water	17:23	0:0	4	out_channel
op	17:35	0:0	4	=
call	17:37	17:91	4	av_channel_layout_extract_channel
arg	17:71	17:88	5	s->channel_layout
water	17:71	0:0	6	s
op	17:72	0:0	6	->
water	17:74	0:0	6	channel_layout
arg	17:90	17:91	5	i
water	17:90	0:0	6	i
water	17:92	0:0	4	;
water	18:8	0:0	4	s
op	18:9	0:0	4	->
water	18:11	0:0	4	channels
op	18:19	0:0	4	[
water	18:20	0:0	4	i
op	18:21	0:0	4	]
op	18:22	0:0	4	.
water	18:23	0:0	4	input
op	18:35	0:0	4	=
op	18:37	0:0	4	-
water	18:38	0:0	4	1
water	18:39	0:0	4	;
water	19:4	0:0	4	}
if	20:4	21:18	2	(( ret =parse_maps (ctx ) ) < 0)
cond	20:8	20:34	3	( ret =parse_maps (ctx ) ) < 0
water	20:8	0:0	4	(
water	20:9	0:0	4	ret
op	20:13	0:0	4	=
call	20:15	20:29	4	parse_maps
arg	20:26	20:29	5	ctx
water	20:26	0:0	6	ctx
water	20:30	0:0	4	)
op	20:32	0:0	4	<
water	20:34	0:0	4	0
stmts	21:8	21:18	3	
return	21:8	21:18	4	ret
water	21:15	0:0	5	ret
for	22:4	33:4	2	(i = 0 ;i < s -> inputs;i ++)
forinit	22:9	22:14	3	i = 0 ;
water	22:9	0:0	4	i
op	22:11	0:0	4	=
water	22:13	0:0	4	0
water	22:14	0:0	4	;
cond	22:16	22:23	3	i < s -> inputs
water	22:16	0:0	4	i
op	22:18	0:0	4	<
water	22:20	0:0	4	s
op	22:21	0:0	4	->
water	22:23	0:0	4	inputs
forexpr	22:31	22:32	3	i ++
water	22:31	0:0	4	i
op	22:32	0:0	4	++
stmts	22:36	33:4	3	
water	22:36	0:0	4	{
decl	23:8	23:21	4	char	name[32]
decl	24:8	24:31	4	AVFilterPad	pad
op	24:24	0:0	4	=
water	24:26	0:0	4	{
water	24:28	0:0	4	0
water	24:30	0:0	4	}
call	25:8	25:49	4	snprintf
arg	25:17	25:21	5	name
water	25:17	0:0	6	name
arg	25:23	25:35	5	sizeof(name)
op	25:23	0:0	6	sizeof
water	25:29	0:0	6	(
water	25:30	0:0	6	name
water	25:34	0:0	6	)
arg	25:37	25:46	5	"input%d"
water	25:37	0:0	6	"input%d"
arg	25:48	25:49	5	i
water	25:48	0:0	6	i
water	25:50	0:0	4	;
water	26:8	0:0	4	pad
op	26:11	0:0	4	.
water	26:12	0:0	4	type
op	26:27	0:0	4	=
water	26:29	0:0	4	AVMEDIA_TYPE_AUDIO
water	26:47	0:0	4	;
water	27:8	0:0	4	pad
op	27:11	0:0	4	.
water	27:12	0:0	4	name
op	27:27	0:0	4	=
call	27:29	27:43	4	av_strdup
arg	27:39	27:43	5	name
water	27:39	0:0	6	name
water	27:44	0:0	4	;
if	28:8	29:34	4	(! pad . name)
cond	28:12	28:17	5	! pad . name
op	28:12	0:0	6	!
water	28:13	0:0	6	pad
op	28:16	0:0	6	.
water	28:17	0:0	6	name
stmts	29:12	29:34	5	
return	29:12	29:34	6	AVERROR(ENOMEM)
call	29:19	29:33	7	AVERROR
arg	29:27	29:33	8	ENOMEM
water	29:27	0:0	9	ENOMEM
water	30:8	0:0	4	pad
op	30:11	0:0	4	.
water	30:12	0:0	4	filter_frame
op	30:27	0:0	4	=
water	30:29	0:0	4	filter_frame
water	30:41	0:0	4	;
water	31:8	0:0	4	pad
op	31:11	0:0	4	.
water	31:12	0:0	4	needs_fifo
op	31:23	0:0	4	=
water	31:25	0:0	4	1
water	31:26	0:0	4	;
call	32:8	32:36	4	ff_insert_inpad
arg	32:24	32:27	5	ctx
water	32:24	0:0	6	ctx
arg	32:29	32:30	5	i
water	32:29	0:0	6	i
arg	32:32	32:36	5	&pad
op	32:32	0:0	6	&
water	32:33	0:0	6	pad
water	32:37	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:12	2	0
water	34:11	0:0	3	0

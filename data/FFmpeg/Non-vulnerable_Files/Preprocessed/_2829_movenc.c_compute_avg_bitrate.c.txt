func	1:16	10:0	0		compute_avg_bitrate
params	1:35	0:0	1	
param	1:36	1:51	2	MOVTrack *	track
stmnts	0:0	9:62	1	
decl	3:4	3:21	2	uint64_t	size
op	3:18	0:0	2	=
water	3:20	0:0	2	0
decl	4:4	4:9	2	int	i
if	5:4	6:16	2	(! track -> track_duration)
cond	5:8	5:16	3	! track -> track_duration
op	5:8	0:0	4	!
water	5:9	0:0	4	track
op	5:14	0:0	4	->
water	5:16	0:0	4	track_duration
stmts	6:8	6:16	3	
return	6:8	6:16	4	0
water	6:15	0:0	5	0
for	7:4	8:38	2	(i = 0 ;i < track -> entry;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:27	3	i < track -> entry
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	track
op	7:25	0:0	4	->
water	7:27	0:0	4	entry
forexpr	7:34	7:35	3	i ++
water	7:34	0:0	4	i
op	7:35	0:0	4	++
stmts	8:8	8:38	3	
water	8:8	0:0	4	size
op	8:13	0:0	4	+=
water	8:16	0:0	4	track
op	8:21	0:0	4	->
water	8:23	0:0	4	cluster
op	8:30	0:0	4	[
water	8:31	0:0	4	i
op	8:32	0:0	4	]
op	8:33	0:0	4	.
water	8:34	0:0	4	size
water	8:38	0:0	4	;
return	9:4	9:62	2	size*8*track->timescale/track->track_duration
water	9:11	0:0	3	size
op	9:16	0:0	3	*
water	9:18	0:0	3	8
op	9:20	0:0	3	*
water	9:22	0:0	3	track
op	9:27	0:0	3	->
water	9:29	0:0	3	timescale
op	9:39	0:0	3	/
water	9:41	0:0	3	track
op	9:46	0:0	3	->
water	9:48	0:0	3	track_duration

func	1:0	34:0	0	static int	query_formats
params	1:24	0:0	1	
param	1:25	1:45	2	AVFilterContext *	ctx
stmnts	0:0	33:12	1	
decl	3:4	3:37	2	VectorscopeContext	*s
op	3:26	0:0	2	=
water	3:28	0:0	2	ctx
op	3:31	0:0	2	->
water	3:33	0:0	2	priv
decl	4:4	4:42	2	const enum AVPixelFormat	*out_pix_fmts
decl	5:4	5:34	2	const AVPixFmtDescriptor	*desc
decl	6:4	6:25	2	AVFilterFormats	*avff
decl	7:4	7:14	2	int	rgb
water	7:11	0:0	2	,
decl	7:4	7:14	2	int	i
if	8:4	11:4	2	(! ctx -> inputs [ 0 ] -> in_formats || ! ctx -> inputs [ 0 ] -> in_formats -> nb_formats)
cond	8:8	9:37	3	! ctx -> inputs [ 0 ] -> in_formats || ! ctx -> inputs [ 0 ] -> in_formats -> nb_formats
op	8:8	0:0	4	!
water	8:9	0:0	4	ctx
op	8:12	0:0	4	->
water	8:14	0:0	4	inputs
op	8:20	0:0	4	[
water	8:21	0:0	4	0
op	8:22	0:0	4	]
op	8:23	0:0	4	->
water	8:25	0:0	4	in_formats
op	8:36	0:0	4	||
op	9:8	0:0	4	!
water	9:9	0:0	4	ctx
op	9:12	0:0	4	->
water	9:14	0:0	4	inputs
op	9:20	0:0	4	[
water	9:21	0:0	4	0
op	9:22	0:0	4	]
op	9:23	0:0	4	->
water	9:25	0:0	4	in_formats
op	9:35	0:0	4	->
water	9:37	0:0	4	nb_formats
stmts	9:49	11:4	3	
water	9:49	0:0	4	{
return	10:8	10:30	4	AVERROR(EAGAIN)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EAGAIN
water	10:23	0:0	7	EAGAIN
water	11:4	0:0	4	}
if	12:4	19:4	2	(! ctx -> inputs [ 0 ] -> out_formats)
cond	12:8	12:25	3	! ctx -> inputs [ 0 ] -> out_formats
op	12:8	0:0	4	!
water	12:9	0:0	4	ctx
op	12:12	0:0	4	->
water	12:14	0:0	4	inputs
op	12:20	0:0	4	[
water	12:21	0:0	4	0
op	12:22	0:0	4	]
op	12:23	0:0	4	->
water	12:25	0:0	4	out_formats
stmts	12:38	19:4	3	
water	12:38	0:0	4	{
decl	13:8	13:45	4	const enum AVPixelFormat	*in_pix_fmts
if	14:8	15:38	4	(( s -> x == 1 && s -> y == 2 ) || ( s -> x == 2 && s -> y == 1 ))
cond	14:12	14:63	5	( s -> x == 1 && s -> y == 2 ) || ( s -> x == 2 && s -> y == 1 )
water	14:12	0:0	6	(
water	14:13	0:0	6	s
op	14:14	0:0	6	->
water	14:16	0:0	6	x
op	14:18	0:0	6	==
water	14:21	0:0	6	1
op	14:23	0:0	6	&&
water	14:26	0:0	6	s
op	14:27	0:0	6	->
water	14:29	0:0	6	y
op	14:31	0:0	6	==
water	14:34	0:0	6	2
water	14:35	0:0	6	)
op	14:37	0:0	6	||
water	14:40	0:0	6	(
water	14:41	0:0	6	s
op	14:42	0:0	6	->
water	14:44	0:0	6	x
op	14:46	0:0	6	==
water	14:49	0:0	6	2
op	14:51	0:0	6	&&
water	14:54	0:0	6	s
op	14:55	0:0	6	->
water	14:57	0:0	6	y
op	14:59	0:0	6	==
water	14:62	0:0	6	1
water	14:63	0:0	6	)
stmts	15:12	15:38	5	
water	15:12	0:0	6	in_pix_fmts
op	15:24	0:0	6	=
water	15:26	0:0	6	in2_pix_fmts
water	15:38	0:0	6	;
else	16:8	17:38	4
stmts	17:12	17:38	5	
water	17:12	0:0	6	in_pix_fmts
op	17:24	0:0	6	=
water	17:26	0:0	6	in1_pix_fmts
water	17:38	0:0	6	;
call	18:8	18:85	4	ff_formats_ref
arg	18:23	18:55	5	ff_make_format_list(in_pix_fmts)
call	18:23	18:54	6	ff_make_format_list
arg	18:43	18:54	7	in_pix_fmts
water	18:43	0:0	8	in_pix_fmts
arg	18:57	18:85	5	&ctx->inputs[0]->out_formats
op	18:57	0:0	6	&
water	18:58	0:0	6	ctx
op	18:61	0:0	6	->
water	18:63	0:0	6	inputs
op	18:69	0:0	6	[
water	18:70	0:0	6	0
op	18:71	0:0	6	]
op	18:72	0:0	6	->
water	18:74	0:0	6	out_formats
water	18:86	0:0	4	;
water	19:4	0:0	4	}
water	20:4	0:0	2	avff
op	20:9	0:0	2	=
water	20:11	0:0	2	ctx
op	20:14	0:0	2	->
water	20:16	0:0	2	inputs
op	20:22	0:0	2	[
water	20:23	0:0	2	0
op	20:24	0:0	2	]
op	20:25	0:0	2	->
water	20:27	0:0	2	in_formats
water	20:37	0:0	2	;
water	21:4	0:0	2	desc
op	21:9	0:0	2	=
call	21:11	21:47	2	av_pix_fmt_desc_get
arg	21:31	21:47	3	avff->formats[0]
water	21:31	0:0	4	avff
op	21:35	0:0	4	->
water	21:37	0:0	4	formats
op	21:44	0:0	4	[
water	21:45	0:0	4	0
op	21:46	0:0	4	]
water	21:48	0:0	2	;
water	22:4	0:0	2	rgb
op	22:8	0:0	2	=
water	22:10	0:0	2	desc
op	22:14	0:0	2	->
water	22:16	0:0	2	flags
op	22:22	0:0	2	&
water	22:24	0:0	2	AV_PIX_FMT_FLAG_RGB
water	22:43	0:0	2	;
for	23:4	27:4	2	(i = 1 ;i < avff -> nb_formats;i ++)
forinit	23:9	23:14	3	i = 1 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	1
water	23:14	0:0	4	;
cond	23:16	23:26	3	i < avff -> nb_formats
water	23:16	0:0	4	i
op	23:18	0:0	4	<
water	23:20	0:0	4	avff
op	23:24	0:0	4	->
water	23:26	0:0	4	nb_formats
forexpr	23:38	23:39	3	i ++
water	23:38	0:0	4	i
op	23:39	0:0	4	++
stmts	23:43	27:4	3	
water	23:43	0:0	4	{
water	24:8	0:0	4	desc
op	24:13	0:0	4	=
call	24:15	24:51	4	av_pix_fmt_desc_get
arg	24:35	24:51	5	avff->formats[i]
water	24:35	0:0	6	avff
op	24:39	0:0	6	->
water	24:41	0:0	6	formats
op	24:48	0:0	6	[
water	24:49	0:0	6	i
op	24:50	0:0	6	]
water	24:52	0:0	4	;
if	25:8	26:34	4	(rgb != ( desc -> flags & AV_PIX_FMT_FLAG_RGB ))
cond	25:12	25:53	5	rgb != ( desc -> flags & AV_PIX_FMT_FLAG_RGB )
water	25:12	0:0	6	rgb
op	25:16	0:0	6	!=
water	25:19	0:0	6	(
water	25:20	0:0	6	desc
op	25:24	0:0	6	->
water	25:26	0:0	6	flags
op	25:32	0:0	6	&
water	25:34	0:0	6	AV_PIX_FMT_FLAG_RGB
water	25:53	0:0	6	)
stmts	26:12	26:34	5	
return	26:12	26:34	6	AVERROR(EAGAIN)
call	26:19	26:33	7	AVERROR
arg	26:27	26:33	8	EAGAIN
water	26:27	0:0	9	EAGAIN
water	27:4	0:0	4	}
if	28:4	29:39	2	(rgb)
cond	28:8	28:8	3	rgb
water	28:8	0:0	4	rgb
stmts	29:8	29:39	3	
water	29:8	0:0	4	out_pix_fmts
op	29:21	0:0	4	=
water	29:23	0:0	4	out_rgb_pix_fmts
water	29:39	0:0	4	;
else	30:4	31:39	2
stmts	31:8	31:39	3	
water	31:8	0:0	4	out_pix_fmts
op	31:21	0:0	4	=
water	31:23	0:0	4	out_yuv_pix_fmts
water	31:39	0:0	4	;
call	32:4	32:82	2	ff_formats_ref
arg	32:19	32:52	3	ff_make_format_list(out_pix_fmts)
call	32:19	32:51	4	ff_make_format_list
arg	32:39	32:51	5	out_pix_fmts
water	32:39	0:0	6	out_pix_fmts
arg	32:54	32:82	3	&ctx->outputs[0]->in_formats
op	32:54	0:0	4	&
water	32:55	0:0	4	ctx
op	32:58	0:0	4	->
water	32:60	0:0	4	outputs
op	32:67	0:0	4	[
water	32:68	0:0	4	0
op	32:69	0:0	4	]
op	32:70	0:0	4	->
water	32:72	0:0	4	in_formats
water	32:83	0:0	2	;
return	33:4	33:12	2	0
water	33:11	0:0	3	0

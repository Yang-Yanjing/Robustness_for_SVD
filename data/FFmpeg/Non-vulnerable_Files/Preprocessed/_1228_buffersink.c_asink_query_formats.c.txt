func	1:0	51:0	0	static int	asink_query_formats
params	1:30	0:0	1	
param	1:31	1:51	2	AVFilterContext *	ctx
stmnts	0:0	50:12	1	
decl	3:4	3:38	2	BufferSinkContext	*buf
op	3:27	0:0	2	=
water	3:29	0:0	2	ctx
op	3:32	0:0	2	->
water	3:34	0:0	2	priv
decl	4:4	4:35	2	AVFilterFormats	*formats
op	4:29	0:0	2	=
water	4:31	0:0	2	NULL
decl	5:4	5:42	2	AVFilterChannelLayouts	*layouts
op	5:36	0:0	2	=
water	5:38	0:0	2	NULL
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	i
water	6:14	0:0	2	;
decl	7:4	7:11	2	int	ret
call	8:4	8:31	2	CHECK_LIST_SIZE
arg	8:20	8:31	3	sample_fmts
water	8:20	0:0	4	sample_fmts
call	9:4	9:32	2	CHECK_LIST_SIZE
arg	9:20	9:32	3	sample_rates
water	9:20	0:0	4	sample_rates
call	10:4	10:35	2	CHECK_LIST_SIZE
arg	10:20	10:35	3	channel_layouts
water	10:20	0:0	4	channel_layouts
call	11:4	11:34	2	CHECK_LIST_SIZE
arg	11:20	11:34	3	channel_counts
water	11:20	0:0	4	channel_counts
water	12:4	0:0	2	if
water	12:7	0:0	2	(
water	12:8	0:0	2	buf
op	12:11	0:0	2	->
water	12:13	0:0	2	sample_fmts_size
water	12:29	0:0	2	)
water	12:31	0:0	2	{
water	13:8	0:0	2	for
water	13:12	0:0	2	(
water	13:13	0:0	2	i
op	13:15	0:0	2	=
water	13:17	0:0	2	0
water	13:18	0:0	2	;
water	13:20	0:0	2	i
op	13:22	0:0	2	<
call	13:24	13:49	2	NB_ITEMS
arg	13:33	13:49	3	buf->sample_fmts
water	13:33	0:0	4	buf
op	13:36	0:0	4	->
water	13:38	0:0	4	sample_fmts
water	13:50	0:0	2	;
water	13:52	0:0	2	i
op	13:53	0:0	2	++
water	13:55	0:0	2	)
water	14:12	0:0	2	if
water	14:15	0:0	2	(
water	14:16	0:0	2	(
water	14:17	0:0	2	ret
op	14:21	0:0	2	=
call	14:23	14:66	2	ff_add_format
arg	14:37	14:45	3	&formats
op	14:37	0:0	4	&
water	14:38	0:0	4	formats
arg	14:47	14:66	3	buf->sample_fmts[i]
water	14:47	0:0	4	buf
op	14:50	0:0	4	->
water	14:52	0:0	4	sample_fmts
op	14:63	0:0	4	[
water	14:64	0:0	4	i
op	14:65	0:0	4	]
water	14:67	0:0	2	)
op	14:69	0:0	2	<
water	14:71	0:0	2	0
water	14:72	0:0	2	)
water	14:74	0:0	2	{
call	15:16	15:41	2	ff_formats_unref
arg	15:33	15:41	3	&formats
op	15:33	0:0	4	&
water	15:34	0:0	4	formats
water	15:42	0:0	2	;
water	16:16	0:0	2	return
water	16:23	0:0	2	ret
water	16:26	0:0	2	;
water	17:12	0:0	2	}
call	18:8	18:42	2	ff_set_common_formats
arg	18:30	18:33	3	ctx
water	18:30	0:0	4	ctx
arg	18:35	18:42	3	formats
water	18:35	0:0	4	formats
water	18:43	0:0	2	;
water	19:4	0:0	2	}
water	20:4	0:0	2	if
water	20:7	0:0	2	(
water	20:8	0:0	2	buf
op	20:11	0:0	2	->
water	20:13	0:0	2	channel_layouts_size
op	20:34	0:0	2	||
water	20:37	0:0	2	buf
op	20:40	0:0	2	->
water	20:42	0:0	2	channel_counts_size
op	20:62	0:0	2	||
water	21:8	0:0	2	buf
op	21:11	0:0	2	->
water	21:13	0:0	2	all_channel_counts
water	21:31	0:0	2	)
water	21:33	0:0	2	{
water	22:8	0:0	2	for
water	22:12	0:0	2	(
water	22:13	0:0	2	i
op	22:15	0:0	2	=
water	22:17	0:0	2	0
water	22:18	0:0	2	;
water	22:20	0:0	2	i
op	22:22	0:0	2	<
call	22:24	22:53	2	NB_ITEMS
arg	22:33	22:53	3	buf->channel_layouts
water	22:33	0:0	4	buf
op	22:36	0:0	4	->
water	22:38	0:0	4	channel_layouts
water	22:54	0:0	2	;
water	22:56	0:0	2	i
op	22:57	0:0	2	++
water	22:59	0:0	2	)
water	23:12	0:0	2	if
water	23:15	0:0	2	(
water	23:16	0:0	2	(
water	23:17	0:0	2	ret
op	23:21	0:0	2	=
call	23:23	23:78	2	ff_add_channel_layout
arg	23:45	23:53	3	&layouts
op	23:45	0:0	4	&
water	23:46	0:0	4	layouts
arg	23:55	23:78	3	buf->channel_layouts[i]
water	23:55	0:0	4	buf
op	23:58	0:0	4	->
water	23:60	0:0	4	channel_layouts
op	23:75	0:0	4	[
water	23:76	0:0	4	i
op	23:77	0:0	4	]
water	23:79	0:0	2	)
op	23:81	0:0	2	<
water	23:83	0:0	2	0
water	23:84	0:0	2	)
water	23:86	0:0	2	{
call	24:16	24:49	2	ff_channel_layouts_unref
arg	24:41	24:49	3	&layouts
op	24:41	0:0	4	&
water	24:42	0:0	4	layouts
water	24:50	0:0	2	;
water	25:16	0:0	2	return
water	25:23	0:0	2	ret
water	25:26	0:0	2	;
water	26:12	0:0	2	}
water	27:8	0:0	2	for
water	27:12	0:0	2	(
water	27:13	0:0	2	i
op	27:15	0:0	2	=
water	27:17	0:0	2	0
water	27:18	0:0	2	;
water	27:20	0:0	2	i
op	27:22	0:0	2	<
call	27:24	27:52	2	NB_ITEMS
arg	27:33	27:52	3	buf->channel_counts
water	27:33	0:0	4	buf
op	27:36	0:0	4	->
water	27:38	0:0	4	channel_counts
water	27:53	0:0	2	;
water	27:55	0:0	2	i
op	27:56	0:0	2	++
water	27:58	0:0	2	)
water	28:12	0:0	2	if
water	28:15	0:0	2	(
water	28:16	0:0	2	(
water	28:17	0:0	2	ret
op	28:21	0:0	2	=
call	28:23	28:94	2	ff_add_channel_layout
arg	28:45	28:53	3	&layouts
op	28:45	0:0	4	&
water	28:46	0:0	4	layouts
arg	28:55	28:94	3	FF_COUNT2LAYOUT(buf->channel_counts[i])
call	28:55	28:93	4	FF_COUNT2LAYOUT
arg	28:71	28:93	5	buf->channel_counts[i]
water	28:71	0:0	6	buf
op	28:74	0:0	6	->
water	28:76	0:0	6	channel_counts
op	28:90	0:0	6	[
water	28:91	0:0	6	i
op	28:92	0:0	6	]
water	28:95	0:0	2	)
op	28:97	0:0	2	<
water	28:99	0:0	2	0
water	28:100	0:0	2	)
water	28:102	0:0	2	{
call	29:16	29:49	2	ff_channel_layouts_unref
arg	29:41	29:49	3	&layouts
op	29:41	0:0	4	&
water	29:42	0:0	4	layouts
water	29:50	0:0	2	;
water	30:16	0:0	2	return
water	30:23	0:0	2	ret
water	30:26	0:0	2	;
water	31:12	0:0	2	}
water	32:8	0:0	2	if
water	32:11	0:0	2	(
water	32:12	0:0	2	buf
op	32:15	0:0	2	->
water	32:17	0:0	2	all_channel_counts
water	32:35	0:0	2	)
water	32:37	0:0	2	{
water	33:12	0:0	2	if
water	33:15	0:0	2	(
water	33:16	0:0	2	layouts
water	33:23	0:0	2	)
call	34:16	35:77	2	av_log
arg	34:23	34:26	3	ctx
water	34:23	0:0	4	ctx
arg	34:28	34:42	3	AV_LOG_WARNING
water	34:28	0:0	4	AV_LOG_WARNING
arg	35:23	35:77	3	"Conflicting all_channel_counts and list in options\n"
water	35:23	0:0	4	"Conflicting all_channel_counts and list in options\n"
water	35:78	0:0	2	;
water	36:12	0:0	2	else
water	36:17	0:0	2	if
water	36:20	0:0	2	(
op	36:21	0:0	2	!
water	36:22	0:0	2	(
water	36:23	0:0	2	layouts
op	36:31	0:0	2	=
call	36:33	36:55	2	ff_all_channel_counts
water	36:56	0:0	2	)
water	36:57	0:0	2	)
water	37:16	0:0	2	return
call	37:23	37:37	2	AVERROR
arg	37:31	37:37	3	ENOMEM
water	37:31	0:0	4	ENOMEM
water	37:38	0:0	2	;
water	38:8	0:0	2	}
call	39:8	39:50	2	ff_set_common_channel_layouts
arg	39:38	39:41	3	ctx
water	39:38	0:0	4	ctx
arg	39:43	39:50	3	layouts
water	39:43	0:0	4	layouts
water	39:51	0:0	2	;
water	40:4	0:0	2	}
water	41:4	0:0	2	if
water	41:7	0:0	2	(
water	41:8	0:0	2	buf
op	41:11	0:0	2	->
water	41:13	0:0	2	sample_rates_size
water	41:30	0:0	2	)
water	41:32	0:0	2	{
water	42:8	0:0	2	formats
op	42:16	0:0	2	=
water	42:18	0:0	2	NULL
water	42:22	0:0	2	;
water	43:8	0:0	2	for
water	43:12	0:0	2	(
water	43:13	0:0	2	i
op	43:15	0:0	2	=
water	43:17	0:0	2	0
water	43:18	0:0	2	;
water	43:20	0:0	2	i
op	43:22	0:0	2	<
call	43:24	43:50	2	NB_ITEMS
arg	43:33	43:50	3	buf->sample_rates
water	43:33	0:0	4	buf
op	43:36	0:0	4	->
water	43:38	0:0	4	sample_rates
water	43:51	0:0	2	;
water	43:53	0:0	2	i
op	43:54	0:0	2	++
water	43:56	0:0	2	)
water	44:12	0:0	2	if
water	44:15	0:0	2	(
water	44:16	0:0	2	(
water	44:17	0:0	2	ret
op	44:21	0:0	2	=
call	44:23	44:67	2	ff_add_format
arg	44:37	44:45	3	&formats
op	44:37	0:0	4	&
water	44:38	0:0	4	formats
arg	44:47	44:67	3	buf->sample_rates[i]
water	44:47	0:0	4	buf
op	44:50	0:0	4	->
water	44:52	0:0	4	sample_rates
op	44:64	0:0	4	[
water	44:65	0:0	4	i
op	44:66	0:0	4	]
water	44:68	0:0	2	)
op	44:70	0:0	2	<
water	44:72	0:0	2	0
water	44:73	0:0	2	)
water	44:75	0:0	2	{
call	45:16	45:41	2	ff_formats_unref
arg	45:33	45:41	3	&formats
op	45:33	0:0	4	&
water	45:34	0:0	4	formats
water	45:42	0:0	2	;
water	46:16	0:0	2	return
water	46:23	0:0	2	ret
water	46:26	0:0	2	;
water	47:12	0:0	2	}
call	48:8	48:46	2	ff_set_common_samplerates
arg	48:34	48:37	3	ctx
water	48:34	0:0	4	ctx
arg	48:39	48:46	3	formats
water	48:39	0:0	4	formats
water	48:47	0:0	2	;
water	49:4	0:0	2	}
water	50:4	0:0	2	return
water	50:11	0:0	2	0
water	50:12	0:0	2	;

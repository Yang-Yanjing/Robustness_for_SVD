func	1:0	47:0	0	static int	config_output
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	46:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:41	2	AVFilterLink	*inlink
op	4:25	0:0	2	=
water	4:27	0:0	2	ctx
op	4:30	0:0	2	->
water	4:32	0:0	2	inputs
op	4:38	0:0	2	[
water	4:39	0:0	2	0
op	4:40	0:0	2	]
decl	5:4	5:34	2	WaveformContext	*s
op	5:23	0:0	2	=
water	5:25	0:0	2	ctx
op	5:28	0:0	2	->
water	5:30	0:0	2	priv
decl	6:4	6:45	2	int	comp
op	6:13	0:0	2	=
water	6:15	0:0	2	0
water	6:16	0:0	2	,
decl	6:4	6:45	2	int	i
water	6:19	0:0	2	,
decl	6:4	6:45	2	int	j
op	6:23	0:0	2	=
water	6:25	0:0	2	0
water	6:26	0:0	2	,
decl	6:4	6:45	2	int	k
water	6:29	0:0	2	,
decl	6:4	6:45	2	int	p
water	6:32	0:0	2	,
decl	6:4	6:45	2	int	size
water	6:38	0:0	2	,
decl	6:4	6:45	2	int	shift
for	7:4	10:4	2	(i = 0 ;i < s -> ncomp;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:23	3	i < s -> ncomp
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	s
op	7:21	0:0	4	->
water	7:23	0:0	4	ncomp
forexpr	7:30	7:31	3	i ++
water	7:30	0:0	4	i
op	7:31	0:0	4	++
stmts	7:35	10:4	3	
water	7:35	0:0	4	{
if	8:8	9:18	4	(( 1 << i ) & s -> pcomp)
cond	8:12	8:26	5	( 1 << i ) & s -> pcomp
water	8:12	0:0	6	(
water	8:13	0:0	6	1
op	8:15	0:0	6	<<
water	8:18	0:0	6	i
water	8:19	0:0	6	)
op	8:21	0:0	6	&
water	8:23	0:0	6	s
op	8:24	0:0	6	->
water	8:26	0:0	6	pcomp
stmts	9:12	9:18	5	
water	9:12	0:0	6	comp
op	9:16	0:0	6	++
water	9:18	0:0	6	;
water	10:4	0:0	4	}
call	11:4	11:21	2	av_freep
arg	11:13	11:21	3	&s->peak
op	11:13	0:0	4	&
water	11:14	0:0	4	s
op	11:15	0:0	4	->
water	11:17	0:0	4	peak
water	11:22	0:0	2	;
if	12:4	15:4	2	(s -> mode)
cond	12:8	12:11	3	s -> mode
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	mode
stmts	12:17	15:4	3	
water	12:17	0:0	4	{
water	13:8	0:0	4	outlink
op	13:15	0:0	4	->
water	13:17	0:0	4	h
op	13:19	0:0	4	=
water	13:21	0:0	4	s
op	13:22	0:0	4	->
water	13:24	0:0	4	size
call	13:29	13:57	4	*FFMAX
arg	13:37	13:54	5	comp*s->display
water	13:37	0:0	6	comp
op	13:42	0:0	6	*
water	13:44	0:0	6	s
op	13:45	0:0	6	->
water	13:47	0:0	6	display
arg	13:56	13:57	5	1
water	13:56	0:0	6	1
water	13:58	0:0	4	;
water	14:8	0:0	4	size
op	14:13	0:0	4	=
water	14:15	0:0	4	inlink
op	14:21	0:0	4	->
water	14:23	0:0	4	w
water	14:24	0:0	4	;
water	15:4	0:0	4	}
else	15:6	18:4	2
stmts	15:11	18:4	3	
water	15:11	0:0	4	{
water	16:8	0:0	4	outlink
op	16:15	0:0	4	->
water	16:17	0:0	4	w
op	16:19	0:0	4	=
water	16:21	0:0	4	s
op	16:22	0:0	4	->
water	16:24	0:0	4	size
call	16:29	16:57	4	*FFMAX
arg	16:37	16:54	5	comp*s->display
water	16:37	0:0	6	comp
op	16:42	0:0	6	*
water	16:44	0:0	6	s
op	16:45	0:0	6	->
water	16:47	0:0	6	display
arg	16:56	16:57	5	1
water	16:56	0:0	6	1
water	16:58	0:0	4	;
water	17:8	0:0	4	size
op	17:13	0:0	4	=
water	17:15	0:0	4	inlink
op	17:21	0:0	4	->
water	17:23	0:0	4	h
water	17:24	0:0	4	;
water	18:4	0:0	4	}
water	19:4	0:0	2	s
op	19:5	0:0	2	->
water	19:7	0:0	2	peak
op	19:12	0:0	2	=
call	19:14	19:57	2	av_malloc_array
arg	19:30	19:34	3	size
water	19:30	0:0	4	size
arg	19:36	19:57	3	32*sizeof(*s->peak)
water	19:36	0:0	4	32
op	19:39	0:0	4	*
op	19:41	0:0	4	sizeof
water	19:47	0:0	4	(
op	19:48	0:0	4	*
water	19:49	0:0	4	s
op	19:50	0:0	4	->
water	19:52	0:0	4	peak
water	19:56	0:0	4	)
water	19:58	0:0	2	;
if	20:4	21:30	2	(! s -> peak)
cond	20:8	20:12	3	! s -> peak
op	20:8	0:0	4	!
water	20:9	0:0	4	s
op	20:10	0:0	4	->
water	20:12	0:0	4	peak
stmts	21:8	21:30	3	
return	21:8	21:30	4	AVERROR(ENOMEM)
call	21:15	21:29	5	AVERROR
arg	21:23	21:29	6	ENOMEM
water	21:23	0:0	7	ENOMEM
for	22:4	44:4	2	(p = 0 ;p < 4;p ++)
forinit	22:9	22:14	3	p = 0 ;
water	22:9	0:0	4	p
op	22:11	0:0	4	=
water	22:13	0:0	4	0
water	22:14	0:0	4	;
cond	22:16	22:20	3	p < 4
water	22:16	0:0	4	p
op	22:18	0:0	4	<
water	22:20	0:0	4	4
forexpr	22:23	22:24	3	p ++
water	22:23	0:0	4	p
op	22:24	0:0	4	++
stmts	22:28	44:4	3	
water	22:28	0:0	4	{
decl	23:8	23:48	4	const int	is_chroma
op	23:28	0:0	4	=
water	23:30	0:0	4	(
water	23:31	0:0	4	p
op	23:33	0:0	4	==
water	23:36	0:0	4	1
op	23:38	0:0	4	||
water	23:41	0:0	4	p
op	23:43	0:0	4	==
water	23:46	0:0	4	2
water	23:47	0:0	4	)
decl	24:8	24:68	4	const int	shift_w
op	24:26	0:0	4	=
water	24:28	0:0	4	(
water	24:29	0:0	4	is_chroma
water	24:39	0:0	4	?
water	24:41	0:0	4	s
op	24:42	0:0	4	->
water	24:44	0:0	4	desc
op	24:48	0:0	4	->
water	24:50	0:0	4	log2_chroma_w
water	24:64	0:0	4	:
water	24:66	0:0	4	0
water	24:67	0:0	4	)
decl	25:8	25:68	4	const int	shift_h
op	25:26	0:0	4	=
water	25:28	0:0	4	(
water	25:29	0:0	4	is_chroma
water	25:39	0:0	4	?
water	25:41	0:0	4	s
op	25:42	0:0	4	->
water	25:44	0:0	4	desc
op	25:48	0:0	4	->
water	25:50	0:0	4	log2_chroma_h
water	25:64	0:0	4	:
water	25:66	0:0	4	0
water	25:67	0:0	4	)
decl	26:8	26:48	4	const int	plane
op	26:24	0:0	4	=
water	26:26	0:0	4	s
op	26:27	0:0	4	->
water	26:29	0:0	4	desc
op	26:33	0:0	4	->
water	26:35	0:0	4	comp
op	26:39	0:0	4	[
water	26:40	0:0	4	p
op	26:41	0:0	4	]
op	26:42	0:0	4	.
water	26:43	0:0	4	plane
decl	27:8	27:18	4	int	offset
if	28:8	29:20	4	(! ( ( 1 << p ) & s -> pcomp ))
cond	28:12	28:33	5	! ( ( 1 << p ) & s -> pcomp )
op	28:12	0:0	6	!
water	28:13	0:0	6	(
water	28:14	0:0	6	(
water	28:15	0:0	6	1
op	28:17	0:0	6	<<
water	28:20	0:0	6	p
water	28:21	0:0	6	)
op	28:23	0:0	6	&
water	28:25	0:0	6	s
op	28:26	0:0	6	->
water	28:28	0:0	6	pcomp
water	28:33	0:0	6	)
stmts	29:12	29:20	5	
continue	29:12	29:20	6	
water	30:8	0:0	4	shift
op	30:14	0:0	4	=
water	30:16	0:0	4	s
op	30:17	0:0	4	->
water	30:19	0:0	4	mode
water	30:24	0:0	4	?
water	30:26	0:0	4	shift_h
water	30:34	0:0	4	:
water	30:36	0:0	4	shift_w
water	30:43	0:0	4	;
for	31:8	34:8	4	(k = 0 ;k < 4;k ++)
forinit	31:13	31:18	5	k = 0 ;
water	31:13	0:0	6	k
op	31:15	0:0	6	=
water	31:17	0:0	6	0
water	31:18	0:0	6	;
cond	31:20	31:24	5	k < 4
water	31:20	0:0	6	k
op	31:22	0:0	6	<
water	31:24	0:0	6	4
forexpr	31:27	31:28	5	k ++
water	31:27	0:0	6	k
op	31:28	0:0	6	++
stmts	31:32	34:8	5	
water	31:32	0:0	6	{
water	32:12	0:0	6	s
op	32:13	0:0	6	->
water	32:15	0:0	6	emax
op	32:19	0:0	6	[
water	32:20	0:0	6	plane
op	32:25	0:0	6	]
op	32:26	0:0	6	[
water	32:27	0:0	6	k
op	32:28	0:0	6	]
op	32:30	0:0	6	=
water	32:32	0:0	6	s
op	32:33	0:0	6	->
water	32:35	0:0	6	peak
op	32:40	0:0	6	+
water	32:42	0:0	6	size
op	32:47	0:0	6	*
water	32:49	0:0	6	(
water	32:50	0:0	6	plane
op	32:56	0:0	6	*
water	32:58	0:0	6	4
op	32:60	0:0	6	+
water	32:62	0:0	6	k
op	32:64	0:0	6	+
water	32:66	0:0	6	0
water	32:67	0:0	6	)
water	32:68	0:0	6	;
water	33:12	0:0	6	s
op	33:13	0:0	6	->
water	33:15	0:0	6	emin
op	33:19	0:0	6	[
water	33:20	0:0	6	plane
op	33:25	0:0	6	]
op	33:26	0:0	6	[
water	33:27	0:0	6	k
op	33:28	0:0	6	]
op	33:30	0:0	6	=
water	33:32	0:0	6	s
op	33:33	0:0	6	->
water	33:35	0:0	6	peak
op	33:40	0:0	6	+
water	33:42	0:0	6	size
op	33:47	0:0	6	*
water	33:49	0:0	6	(
water	33:50	0:0	6	plane
op	33:56	0:0	6	*
water	33:58	0:0	6	4
op	33:60	0:0	6	+
water	33:62	0:0	6	k
op	33:64	0:0	6	+
water	33:66	0:0	6	16
water	33:68	0:0	6	)
water	33:69	0:0	6	;
water	34:8	0:0	6	}
water	35:8	0:0	4	offset
op	35:15	0:0	4	=
water	35:17	0:0	4	j
op	35:18	0:0	4	++
op	35:21	0:0	4	*
water	35:23	0:0	4	s
op	35:24	0:0	4	->
water	35:26	0:0	4	size
op	35:31	0:0	4	*
water	35:33	0:0	4	s
op	35:34	0:0	4	->
water	35:36	0:0	4	display
water	35:43	0:0	4	;
water	36:8	0:0	4	s
op	36:9	0:0	4	->
water	36:11	0:0	4	estart
op	36:17	0:0	4	[
water	36:18	0:0	4	plane
op	36:23	0:0	4	]
op	36:25	0:0	4	=
water	36:27	0:0	4	offset
op	36:34	0:0	4	>>
water	36:37	0:0	4	shift
water	36:42	0:0	4	;
water	37:8	0:0	4	s
op	37:9	0:0	4	->
water	37:11	0:0	4	eend
op	37:15	0:0	4	[
water	37:16	0:0	4	plane
op	37:21	0:0	4	]
op	37:25	0:0	4	=
water	37:27	0:0	4	(
water	37:28	0:0	4	offset
op	37:35	0:0	4	+
water	37:37	0:0	4	s
op	37:38	0:0	4	->
water	37:40	0:0	4	size
op	37:45	0:0	4	-
water	37:47	0:0	4	1
water	37:48	0:0	4	)
op	37:50	0:0	4	>>
water	37:53	0:0	4	shift
water	37:58	0:0	4	;
for	38:8	43:8	4	(i = 0 ;i < size;i ++)
forinit	38:13	38:18	5	i = 0 ;
water	38:13	0:0	6	i
op	38:15	0:0	6	=
water	38:17	0:0	6	0
water	38:18	0:0	6	;
cond	38:20	38:24	5	i < size
water	38:20	0:0	6	i
op	38:22	0:0	6	<
water	38:24	0:0	6	size
forexpr	38:30	38:31	5	i ++
water	38:30	0:0	6	i
op	38:31	0:0	6	++
stmts	38:35	43:8	5	
water	38:35	0:0	6	{
for	39:12	42:12	6	(k = 0 ;k < 4;k ++)
forinit	39:17	39:22	7	k = 0 ;
water	39:17	0:0	8	k
op	39:19	0:0	8	=
water	39:21	0:0	8	0
water	39:22	0:0	8	;
cond	39:24	39:28	7	k < 4
water	39:24	0:0	8	k
op	39:26	0:0	8	<
water	39:28	0:0	8	4
forexpr	39:31	39:32	7	k ++
water	39:31	0:0	8	k
op	39:32	0:0	8	++
stmts	39:36	42:12	7	
water	39:36	0:0	8	{
water	40:16	0:0	8	s
op	40:17	0:0	8	->
water	40:19	0:0	8	emax
op	40:23	0:0	8	[
water	40:24	0:0	8	plane
op	40:29	0:0	8	]
op	40:30	0:0	8	[
water	40:31	0:0	8	k
op	40:32	0:0	8	]
op	40:33	0:0	8	[
water	40:34	0:0	8	i
op	40:35	0:0	8	]
op	40:37	0:0	8	=
water	40:39	0:0	8	s
op	40:40	0:0	8	->
water	40:42	0:0	8	estart
op	40:48	0:0	8	[
water	40:49	0:0	8	plane
op	40:54	0:0	8	]
water	40:55	0:0	8	;
water	41:16	0:0	8	s
op	41:17	0:0	8	->
water	41:19	0:0	8	emin
op	41:23	0:0	8	[
water	41:24	0:0	8	plane
op	41:29	0:0	8	]
op	41:30	0:0	8	[
water	41:31	0:0	8	k
op	41:32	0:0	8	]
op	41:33	0:0	8	[
water	41:34	0:0	8	i
op	41:35	0:0	8	]
op	41:37	0:0	8	=
water	41:39	0:0	8	s
op	41:40	0:0	8	->
water	41:42	0:0	8	eend
op	41:46	0:0	8	[
water	41:47	0:0	8	plane
op	41:52	0:0	8	]
water	41:53	0:0	8	;
water	42:12	0:0	8	}
water	43:8	0:0	6	}
water	44:4	0:0	4	}
water	45:4	0:0	2	outlink
op	45:11	0:0	2	->
water	45:13	0:0	2	sample_aspect_ratio
op	45:33	0:0	2	=
water	45:35	0:0	2	(
water	45:36	0:0	2	AVRational
water	45:46	0:0	2	)
water	45:47	0:0	2	{
water	45:48	0:0	2	1
water	45:49	0:0	2	,
water	45:50	0:0	2	1
water	45:51	0:0	2	}
water	45:52	0:0	2	;
return	46:4	46:12	2	0
water	46:11	0:0	3	0

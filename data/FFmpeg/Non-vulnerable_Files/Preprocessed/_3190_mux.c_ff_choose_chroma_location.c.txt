func	1:0	25:0	0	enum AVChromaLocation	ff_choose_chroma_location
params	1:47	0:0	1	
param	1:48	1:66	2	AVFormatContext *	s
param	1:68	1:80	2	AVStream *	st
stmnts	0:0	24:35	1	
decl	3:4	3:37	2	AVCodecContext	*avctx
op	3:26	0:0	2	=
water	3:28	0:0	2	st
op	3:30	0:0	2	->
water	3:32	0:0	2	codec
decl	4:4	4:76	2	const AVPixFmtDescriptor	*pix_desc
op	4:39	0:0	2	=
call	4:41	4:75	3	av_pix_fmt_desc_get
arg	4:61	4:75	4	avctx->pix_fmt
water	4:61	0:0	5	avctx
op	4:66	0:0	5	->
water	4:68	0:0	5	pix_fmt
if	5:4	6:44	2	(avctx -> chroma_sample_location != AVCHROMA_LOC_UNSPECIFIED)
cond	5:8	5:41	3	avctx -> chroma_sample_location != AVCHROMA_LOC_UNSPECIFIED
water	5:8	0:0	4	avctx
op	5:13	0:0	4	->
water	5:15	0:0	4	chroma_sample_location
op	5:38	0:0	4	!=
water	5:41	0:0	4	AVCHROMA_LOC_UNSPECIFIED
stmts	6:8	6:44	3	
return	6:8	6:44	4	avctx->chroma_sample_location
water	6:15	0:0	5	avctx
op	6:20	0:0	5	->
water	6:22	0:0	5	chroma_sample_location
if	7:4	23:4	2	(pix_desc)
cond	7:8	7:8	3	pix_desc
water	7:8	0:0	4	pix_desc
stmts	7:18	23:4	3	
water	7:18	0:0	4	{
if	8:8	10:8	4	(pix_desc -> log2_chroma_h == 0)
cond	8:12	8:39	5	pix_desc -> log2_chroma_h == 0
water	8:12	0:0	6	pix_desc
op	8:20	0:0	6	->
water	8:22	0:0	6	log2_chroma_h
op	8:36	0:0	6	==
water	8:39	0:0	6	0
stmts	8:42	10:8	5	
water	8:42	0:0	6	{
return	9:12	9:39	6	AVCHROMA_LOC_TOPLEFT
water	9:19	0:0	7	AVCHROMA_LOC_TOPLEFT
water	10:8	0:0	6	}
else	10:10	22:8	4
stmts	10:15	22:8	5	
if	10:15	22:8	6	(pix_desc -> log2_chroma_w == 1 && pix_desc -> log2_chroma_h == 1)
cond	10:19	10:78	7	pix_desc -> log2_chroma_w == 1 && pix_desc -> log2_chroma_h == 1
water	10:19	0:0	8	pix_desc
op	10:27	0:0	8	->
water	10:29	0:0	8	log2_chroma_w
op	10:43	0:0	8	==
water	10:46	0:0	8	1
op	10:48	0:0	8	&&
water	10:51	0:0	8	pix_desc
op	10:59	0:0	8	->
water	10:61	0:0	8	log2_chroma_h
op	10:75	0:0	8	==
water	10:78	0:0	8	1
stmts	10:81	22:8	7	
water	10:81	0:0	8	{
if	11:12	16:12	8	(avctx -> field_order == AV_FIELD_UNKNOWN || avctx -> field_order == AV_FIELD_PROGRESSIVE)
cond	11:16	11:80	9	avctx -> field_order == AV_FIELD_UNKNOWN || avctx -> field_order == AV_FIELD_PROGRESSIVE
water	11:16	0:0	10	avctx
op	11:21	0:0	10	->
water	11:23	0:0	10	field_order
op	11:35	0:0	10	==
water	11:38	0:0	10	AV_FIELD_UNKNOWN
op	11:55	0:0	10	||
water	11:58	0:0	10	avctx
op	11:63	0:0	10	->
water	11:65	0:0	10	field_order
op	11:77	0:0	10	==
water	11:80	0:0	10	AV_FIELD_PROGRESSIVE
stmts	11:102	16:12	9	
water	11:102	0:0	10	{
switch	12:16	15:16	10	(avctx -> codec_id)
cond	12:24	12:31	11	avctx -> codec_id
water	12:24	0:0	12	avctx
op	12:29	0:0	12	->
water	12:31	0:0	12	codec_id
stmts	12:41	15:16	11	
water	12:41	0:0	12	{
label	13:16	13:38	12	case AV_CODEC_ID_MJPEG :
label	14:16	14:43	12	case AV_CODEC_ID_MPEG1VIDEO :
return	14:45	14:71	12	AVCHROMA_LOC_CENTER
water	14:52	0:0	13	AVCHROMA_LOC_CENTER
water	15:16	0:0	12	}
water	16:12	0:0	10	}
if	17:12	21:12	8	(avctx -> field_order == AV_FIELD_UNKNOWN || avctx -> field_order != AV_FIELD_PROGRESSIVE)
cond	17:16	17:80	9	avctx -> field_order == AV_FIELD_UNKNOWN || avctx -> field_order != AV_FIELD_PROGRESSIVE
water	17:16	0:0	10	avctx
op	17:21	0:0	10	->
water	17:23	0:0	10	field_order
op	17:35	0:0	10	==
water	17:38	0:0	10	AV_FIELD_UNKNOWN
op	17:55	0:0	10	||
water	17:58	0:0	10	avctx
op	17:63	0:0	10	->
water	17:65	0:0	10	field_order
op	17:77	0:0	10	!=
water	17:80	0:0	10	AV_FIELD_PROGRESSIVE
stmts	17:102	21:12	9	
water	17:102	0:0	10	{
switch	18:16	20:16	10	(avctx -> codec_id)
cond	18:24	18:31	11	avctx -> codec_id
water	18:24	0:0	12	avctx
op	18:29	0:0	12	->
water	18:31	0:0	12	codec_id
stmts	18:41	20:16	11	
water	18:41	0:0	12	{
label	19:16	19:43	12	case AV_CODEC_ID_MPEG2VIDEO :
return	19:45	19:69	12	AVCHROMA_LOC_LEFT
water	19:52	0:0	13	AVCHROMA_LOC_LEFT
water	20:16	0:0	12	}
water	21:12	0:0	10	}
water	22:8	0:0	8	}
water	23:4	0:0	4	}
return	24:4	24:35	2	AVCHROMA_LOC_UNSPECIFIED
water	24:11	0:0	3	AVCHROMA_LOC_UNSPECIFIED

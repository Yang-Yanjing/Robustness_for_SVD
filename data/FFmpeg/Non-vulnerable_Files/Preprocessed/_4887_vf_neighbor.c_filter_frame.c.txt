func	1:0	48:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	47:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:27	2	NContext	*s
op	5:16	0:0	2	=
water	5:18	0:0	2	ctx
op	5:21	0:0	2	->
water	5:23	0:0	2	priv
decl	6:4	6:16	2	AVFrame	*out
decl	7:4	7:16	2	int	plane
water	7:13	0:0	2	,
decl	7:4	7:16	2	int	y
water	8:4	0:0	2	out
op	8:8	0:0	2	=
call	8:10	8:61	2	ff_get_video_buffer
arg	8:30	8:37	3	outlink
water	8:30	0:0	4	outlink
arg	8:39	8:49	3	outlink->w
water	8:39	0:0	4	outlink
op	8:46	0:0	4	->
water	8:48	0:0	4	w
arg	8:51	8:61	3	outlink->h
water	8:51	0:0	4	outlink
op	8:58	0:0	4	->
water	8:60	0:0	4	h
water	8:62	0:0	2	;
if	9:4	12:4	2	(! out)
cond	9:8	9:9	3	! out
op	9:8	0:0	4	!
water	9:9	0:0	4	out
stmts	9:14	12:4	3	
water	9:14	0:0	4	{
call	10:8	10:25	4	av_frame_free
arg	10:22	10:25	5	&in
op	10:22	0:0	6	&
water	10:23	0:0	6	in
water	10:26	0:0	4	;
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
water	12:4	0:0	4	}
call	13:4	13:31	2	av_frame_copy_props
arg	13:24	13:27	3	out
water	13:24	0:0	4	out
arg	13:29	13:31	3	in
water	13:29	0:0	4	in
water	13:32	0:0	2	;
for	14:4	45:4	2	(plane = 0 ;plane < s -> nb_planes;plane ++)
forinit	14:9	14:18	3	plane = 0 ;
water	14:9	0:0	4	plane
op	14:15	0:0	4	=
water	14:17	0:0	4	0
water	14:18	0:0	4	;
cond	14:20	14:31	3	plane < s -> nb_planes
water	14:20	0:0	4	plane
op	14:26	0:0	4	<
water	14:28	0:0	4	s
op	14:29	0:0	4	->
water	14:31	0:0	4	nb_planes
forexpr	14:42	14:47	3	plane ++
water	14:42	0:0	4	plane
op	14:47	0:0	4	++
stmts	14:51	45:4	3	
water	14:51	0:0	4	{
decl	15:8	15:49	4	const int	threshold
op	15:28	0:0	4	=
water	15:30	0:0	4	s
op	15:31	0:0	4	->
water	15:33	0:0	4	threshold
op	15:42	0:0	4	[
water	15:43	0:0	4	plane
op	15:48	0:0	4	]
if	16:8	40:8	4	(threshold)
cond	16:12	16:12	5	threshold
water	16:12	0:0	6	threshold
stmts	16:23	40:8	5	
water	16:23	0:0	6	{
decl	17:12	17:48	6	const uint8_t	*src
op	17:31	0:0	6	=
water	17:33	0:0	6	in
op	17:35	0:0	6	->
water	17:37	0:0	6	data
op	17:41	0:0	6	[
water	17:42	0:0	6	plane
op	17:47	0:0	6	]
decl	18:12	18:43	6	uint8_t	*dst
op	18:25	0:0	6	=
water	18:27	0:0	6	out
op	18:30	0:0	6	->
water	18:32	0:0	6	data
op	18:36	0:0	6	[
water	18:37	0:0	6	plane
op	18:42	0:0	6	]
decl	19:12	19:44	6	int	stride
op	19:23	0:0	6	=
water	19:25	0:0	6	in
op	19:27	0:0	6	->
water	19:29	0:0	6	linesize
op	19:37	0:0	6	[
water	19:38	0:0	6	plane
op	19:43	0:0	6	]
decl	20:12	20:46	6	int	height
op	20:23	0:0	6	=
water	20:25	0:0	6	s
op	20:26	0:0	6	->
water	20:28	0:0	6	planeheight
op	20:39	0:0	6	[
water	20:40	0:0	6	plane
op	20:45	0:0	6	]
decl	21:12	21:45	6	int	width
op	21:23	0:0	6	=
water	21:25	0:0	6	s
op	21:26	0:0	6	->
water	21:28	0:0	6	planewidth
op	21:38	0:0	6	[
water	21:39	0:0	6	plane
op	21:44	0:0	6	]
decl	22:12	22:40	6	uint8_t	*p0
op	22:24	0:0	6	=
water	22:26	0:0	6	s
op	22:27	0:0	6	->
water	22:29	0:0	6	buffer
op	22:36	0:0	6	+
water	22:38	0:0	6	16
decl	23:12	23:47	6	uint8_t	*p1
op	23:24	0:0	6	=
water	23:26	0:0	6	p0
op	23:29	0:0	6	+
water	23:31	0:0	6	s
op	23:32	0:0	6	->
water	23:34	0:0	6	planewidth
op	23:44	0:0	6	[
water	23:45	0:0	6	0
op	23:46	0:0	6	]
decl	24:12	24:47	6	uint8_t	*p2
op	24:24	0:0	6	=
water	24:26	0:0	6	p1
op	24:29	0:0	6	+
water	24:31	0:0	6	s
op	24:32	0:0	6	->
water	24:34	0:0	6	planewidth
op	24:44	0:0	6	[
water	24:45	0:0	6	0
op	24:46	0:0	6	]
decl	25:12	25:41	6	uint8_t	*orig
op	25:26	0:0	6	=
water	25:28	0:0	6	p0
water	25:30	0:0	6	,
decl	25:12	25:41	6	uint8_t	*end
op	25:37	0:0	6	=
water	25:39	0:0	6	p2
call	26:12	26:49	6	line_copy8
arg	26:23	26:25	7	p0
water	26:23	0:0	8	p0
arg	26:27	26:39	7	src+stride
water	26:27	0:0	8	src
op	26:31	0:0	8	+
water	26:33	0:0	8	stride
arg	26:41	26:46	7	width
water	26:41	0:0	8	width
arg	26:48	26:49	7	1
water	26:48	0:0	8	1
water	26:50	0:0	6	;
call	27:12	27:40	6	line_copy8
arg	27:23	27:25	7	p1
water	27:23	0:0	8	p1
arg	27:27	27:30	7	src
water	27:27	0:0	8	src
arg	27:32	27:37	7	width
water	27:32	0:0	8	width
arg	27:39	27:40	7	1
water	27:39	0:0	8	1
water	27:41	0:0	6	;
for	28:12	39:12	6	(y = 0 ;y < height;y ++)
forinit	28:17	28:22	7	y = 0 ;
water	28:17	0:0	8	y
op	28:19	0:0	8	=
water	28:21	0:0	8	0
water	28:22	0:0	8	;
cond	28:24	28:28	7	y < height
water	28:24	0:0	8	y
op	28:26	0:0	8	<
water	28:28	0:0	8	height
forexpr	28:36	28:37	7	y ++
water	28:36	0:0	8	y
op	28:37	0:0	8	++
stmts	28:41	39:12	7	
water	28:41	0:0	8	{
decl	29:16	31:68	8	const uint8_t	*coordinates[]
op	29:45	0:0	8	=
water	29:47	0:0	8	{
water	29:49	0:0	8	p0
op	29:52	0:0	8	-
water	29:54	0:0	8	1
water	29:55	0:0	8	,
water	29:57	0:0	8	p0
water	29:59	0:0	8	,
water	29:61	0:0	8	p0
op	29:64	0:0	8	+
water	29:66	0:0	8	1
water	29:67	0:0	8	,
water	30:49	0:0	8	p1
op	30:52	0:0	8	-
water	30:54	0:0	8	1
water	30:55	0:0	8	,
water	30:61	0:0	8	p1
op	30:64	0:0	8	+
water	30:66	0:0	8	1
water	30:67	0:0	8	,
water	31:49	0:0	8	p2
op	31:52	0:0	8	-
water	31:54	0:0	8	1
water	31:55	0:0	8	,
water	31:57	0:0	8	p2
water	31:59	0:0	8	,
water	31:61	0:0	8	p2
op	31:64	0:0	8	+
water	31:66	0:0	8	1
water	31:67	0:0	8	}
water	32:16	0:0	8	src
op	32:20	0:0	8	+=
water	32:23	0:0	8	stride
op	32:30	0:0	8	*
water	32:32	0:0	8	(
water	32:33	0:0	8	y
op	32:35	0:0	8	<
water	32:37	0:0	8	height
op	32:44	0:0	8	-
water	32:46	0:0	8	1
water	32:48	0:0	8	?
water	32:50	0:0	8	1
water	32:52	0:0	8	:
op	32:54	0:0	8	-
water	32:55	0:0	8	1
water	32:56	0:0	8	)
water	32:57	0:0	8	;
call	33:16	33:44	8	line_copy8
arg	33:27	33:29	9	p2
water	33:27	0:0	10	p2
arg	33:31	33:34	9	src
water	33:31	0:0	10	src
arg	33:36	33:41	9	width
water	33:36	0:0	10	width
arg	33:43	33:44	9	1
water	33:43	0:0	10	1
water	33:45	0:0	8	;
call	34:16	34:80	8	s->filter
arg	34:26	34:29	9	dst
water	34:26	0:0	10	dst
arg	34:31	34:33	9	p1
water	34:31	0:0	10	p1
arg	34:35	34:40	9	width
water	34:35	0:0	10	width
arg	34:42	34:51	9	threshold
water	34:42	0:0	10	threshold
arg	34:53	34:64	9	coordinates
water	34:53	0:0	10	coordinates
arg	34:66	34:80	9	s->coordinates
water	34:66	0:0	10	s
op	34:67	0:0	10	->
water	34:69	0:0	10	coordinates
water	34:81	0:0	8	;
water	35:16	0:0	8	p0
op	35:19	0:0	8	=
water	35:21	0:0	8	p1
water	35:23	0:0	8	;
water	36:16	0:0	8	p1
op	36:19	0:0	8	=
water	36:21	0:0	8	p2
water	36:23	0:0	8	;
water	37:16	0:0	8	p2
op	37:19	0:0	8	=
water	37:21	0:0	8	(
water	37:22	0:0	8	p2
op	37:25	0:0	8	==
water	37:28	0:0	8	end
water	37:31	0:0	8	)
water	37:33	0:0	8	?
water	37:35	0:0	8	orig
water	37:39	0:0	8	:
water	37:41	0:0	8	p2
op	37:44	0:0	8	+
water	37:46	0:0	8	s
op	37:47	0:0	8	->
water	37:49	0:0	8	planewidth
op	37:59	0:0	8	[
water	37:60	0:0	8	0
op	37:61	0:0	8	]
water	37:62	0:0	8	;
water	38:16	0:0	8	dst
op	38:20	0:0	8	+=
water	38:23	0:0	8	out
op	38:26	0:0	8	->
water	38:28	0:0	8	linesize
op	38:36	0:0	8	[
water	38:37	0:0	8	plane
op	38:42	0:0	8	]
water	38:43	0:0	8	;
water	39:12	0:0	8	}
water	40:8	0:0	6	}
else	40:10	44:8	4
stmts	40:15	44:8	5	
water	40:15	0:0	6	{
call	41:12	43:75	6	av_image_copy_plane
arg	41:32	41:48	7	out->data[plane]
water	41:32	0:0	8	out
op	41:35	0:0	8	->
water	41:37	0:0	8	data
op	41:41	0:0	8	[
water	41:42	0:0	8	plane
op	41:47	0:0	8	]
arg	41:50	41:70	7	out->linesize[plane]
water	41:50	0:0	8	out
op	41:53	0:0	8	->
water	41:55	0:0	8	linesize
op	41:63	0:0	8	[
water	41:64	0:0	8	plane
op	41:69	0:0	8	]
arg	42:32	42:47	7	in->data[plane]
water	42:32	0:0	8	in
op	42:34	0:0	8	->
water	42:36	0:0	8	data
op	42:40	0:0	8	[
water	42:41	0:0	8	plane
op	42:46	0:0	8	]
arg	42:49	42:68	7	in->linesize[plane]
water	42:49	0:0	8	in
op	42:51	0:0	8	->
water	42:53	0:0	8	linesize
op	42:61	0:0	8	[
water	42:62	0:0	8	plane
op	42:67	0:0	8	]
arg	43:32	43:52	7	s->planewidth[plane]
water	43:32	0:0	8	s
op	43:33	0:0	8	->
water	43:35	0:0	8	planewidth
op	43:45	0:0	8	[
water	43:46	0:0	8	plane
op	43:51	0:0	8	]
arg	43:54	43:75	7	s->planeheight[plane]
water	43:54	0:0	8	s
op	43:55	0:0	8	->
water	43:57	0:0	8	planeheight
op	43:68	0:0	8	[
water	43:69	0:0	8	plane
op	43:74	0:0	8	]
water	43:76	0:0	6	;
water	44:8	0:0	6	}
water	45:4	0:0	4	}
call	46:4	46:21	2	av_frame_free
arg	46:18	46:21	3	&in
op	46:18	0:0	4	&
water	46:19	0:0	4	in
water	46:22	0:0	2	;
return	47:4	47:40	2	ff_filter_frame(outlink,out)
call	47:11	47:39	3	ff_filter_frame
arg	47:27	47:34	4	outlink
water	47:27	0:0	5	outlink
arg	47:36	47:39	4	out
water	47:36	0:0	5	out

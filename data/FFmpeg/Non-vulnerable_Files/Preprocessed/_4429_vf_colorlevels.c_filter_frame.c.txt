func	1:0	107:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	106:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:37	2	ColorLevelsContext	*s
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:28	2	const int	step
op	6:19	0:0	2	=
water	6:21	0:0	2	s
op	6:22	0:0	2	->
water	6:24	0:0	2	step
decl	7:4	7:16	2	AVFrame	*out
decl	8:4	8:15	2	int	x
water	8:9	0:0	2	,
decl	8:4	8:15	2	int	y
water	8:12	0:0	2	,
decl	8:4	8:15	2	int	i
if	9:4	11:4	2	(av_frame_is_writable (in ))
cond	9:8	9:31	3	av_frame_is_writable (in )
call	9:8	9:31	4	av_frame_is_writable
arg	9:29	9:31	5	in
water	9:29	0:0	6	in
stmts	9:34	11:4	3	
water	9:34	0:0	4	{
water	10:8	0:0	4	out
op	10:12	0:0	4	=
water	10:14	0:0	4	in
water	10:16	0:0	4	;
water	11:4	0:0	4	}
else	11:6	18:4	2
stmts	11:11	18:4	3	
water	11:11	0:0	4	{
water	12:8	0:0	4	out
op	12:12	0:0	4	=
call	12:14	12:65	4	ff_get_video_buffer
arg	12:34	12:41	5	outlink
water	12:34	0:0	6	outlink
arg	12:43	12:53	5	outlink->w
water	12:43	0:0	6	outlink
op	12:50	0:0	6	->
water	12:52	0:0	6	w
arg	12:55	12:65	5	outlink->h
water	12:55	0:0	6	outlink
op	12:62	0:0	6	->
water	12:64	0:0	6	h
water	12:66	0:0	4	;
if	13:8	16:8	4	(! out)
cond	13:12	13:13	5	! out
op	13:12	0:0	6	!
water	13:13	0:0	6	out
stmts	13:18	16:8	5	
water	13:18	0:0	6	{
call	14:12	14:29	6	av_frame_free
arg	14:26	14:29	7	&in
op	14:26	0:0	8	&
water	14:27	0:0	8	in
water	14:30	0:0	6	;
return	15:12	15:34	6	AVERROR(ENOMEM)
call	15:19	15:33	7	AVERROR
arg	15:27	15:33	8	ENOMEM
water	15:27	0:0	9	ENOMEM
water	16:8	0:0	6	}
call	17:8	17:35	4	av_frame_copy_props
arg	17:28	17:31	5	out
water	17:28	0:0	6	out
arg	17:33	17:35	5	in
water	17:33	0:0	6	in
water	17:36	0:0	4	;
water	18:4	0:0	4	}
switch	19:4	103:4	2	(s -> bpp)
cond	19:12	19:15	3	s -> bpp
water	19:12	0:0	4	s
op	19:13	0:0	4	->
water	19:15	0:0	4	bpp
stmts	19:20	103:4	3	
water	19:20	0:0	4	{
label	20:4	20:10	4	case 1 :
for	21:8	60:8	4	(i = 0 ;i < s -> nb_comp;i ++)
forinit	21:13	21:18	5	i = 0 ;
water	21:13	0:0	6	i
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:27	5	i < s -> nb_comp
water	21:20	0:0	6	i
op	21:22	0:0	6	<
water	21:24	0:0	6	s
op	21:25	0:0	6	->
water	21:27	0:0	6	nb_comp
forexpr	21:36	21:37	5	i ++
water	21:36	0:0	6	i
op	21:37	0:0	6	++
stmts	21:41	60:8	5	
water	21:41	0:0	6	{
decl	22:12	22:35	6	Range	*r
op	22:21	0:0	6	=
op	22:23	0:0	6	&
water	22:24	0:0	6	s
op	22:25	0:0	6	->
water	22:27	0:0	6	range
op	22:32	0:0	6	[
water	22:33	0:0	6	i
op	22:34	0:0	6	]
decl	23:12	23:49	6	const uint8_t	offset
op	23:33	0:0	6	=
water	23:35	0:0	6	s
op	23:36	0:0	6	->
water	23:38	0:0	6	rgba_map
op	23:46	0:0	6	[
water	23:47	0:0	6	i
op	23:48	0:0	6	]
decl	24:12	24:47	6	const uint8_t	*srcrow
op	24:34	0:0	6	=
water	24:36	0:0	6	in
op	24:38	0:0	6	->
water	24:40	0:0	6	data
op	24:44	0:0	6	[
water	24:45	0:0	6	0
op	24:46	0:0	6	]
decl	25:12	25:42	6	uint8_t	*dstrow
op	25:28	0:0	6	=
water	25:30	0:0	6	out
op	25:33	0:0	6	->
water	25:35	0:0	6	data
op	25:39	0:0	6	[
water	25:40	0:0	6	0
op	25:41	0:0	6	]
decl	26:12	26:52	6	int	imin
op	26:21	0:0	6	=
call	26:23	26:51	7	round
arg	26:29	26:51	8	r->in_min*UINT8_MAX
water	26:29	0:0	9	r
op	26:30	0:0	9	->
water	26:32	0:0	9	in_min
op	26:40	0:0	9	*
water	26:42	0:0	9	UINT8_MAX
decl	27:12	27:52	6	int	imax
op	27:21	0:0	6	=
call	27:23	27:51	7	round
arg	27:29	27:51	8	r->in_max*UINT8_MAX
water	27:29	0:0	9	r
op	27:30	0:0	9	->
water	27:32	0:0	9	in_max
op	27:40	0:0	9	*
water	27:42	0:0	9	UINT8_MAX
decl	28:12	28:52	6	int	omin
op	28:21	0:0	6	=
call	28:23	28:51	7	round
arg	28:29	28:51	8	r->out_min*UINT8_MAX
water	28:29	0:0	9	r
op	28:30	0:0	9	->
water	28:32	0:0	9	out_min
op	28:40	0:0	9	*
water	28:42	0:0	9	UINT8_MAX
decl	29:12	29:52	6	int	omax
op	29:21	0:0	6	=
call	29:23	29:51	7	round
arg	29:29	29:51	8	r->out_max*UINT8_MAX
water	29:29	0:0	9	r
op	29:30	0:0	9	->
water	29:32	0:0	9	out_max
op	29:40	0:0	9	*
water	29:42	0:0	9	UINT8_MAX
decl	30:12	30:24	6	double	coeff
if	31:12	39:12	6	(imin < 0)
cond	31:16	31:23	7	imin < 0
water	31:16	0:0	8	imin
op	31:21	0:0	8	<
water	31:23	0:0	8	0
stmts	31:26	39:12	7	
water	31:26	0:0	8	{
water	32:16	0:0	8	imin
op	32:21	0:0	8	=
water	32:23	0:0	8	UINT8_MAX
water	32:32	0:0	8	;
for	33:16	38:16	8	(y = 0 ;y < inlink -> h;y ++)
forinit	33:21	33:26	9	y = 0 ;
water	33:21	0:0	10	y
op	33:23	0:0	10	=
water	33:25	0:0	10	0
water	33:26	0:0	10	;
cond	33:28	33:40	9	y < inlink -> h
water	33:28	0:0	10	y
op	33:30	0:0	10	<
water	33:32	0:0	10	inlink
op	33:38	0:0	10	->
water	33:40	0:0	10	h
forexpr	33:43	33:44	9	y ++
water	33:43	0:0	10	y
op	33:44	0:0	10	++
stmts	33:48	38:16	9	
water	33:48	0:0	10	{
decl	34:20	34:47	10	const uint8_t	*src
op	34:39	0:0	10	=
water	34:41	0:0	10	srcrow
for	35:20	36:59	10	(x = 0 ;x < s -> linesize;x += step)
forinit	35:25	35:30	11	x = 0 ;
water	35:25	0:0	12	x
op	35:27	0:0	12	=
water	35:29	0:0	12	0
water	35:30	0:0	12	;
cond	35:32	35:39	11	x < s -> linesize
water	35:32	0:0	12	x
op	35:34	0:0	12	<
water	35:36	0:0	12	s
op	35:37	0:0	12	->
water	35:39	0:0	12	linesize
forexpr	35:49	35:54	11	x += step
water	35:49	0:0	12	x
op	35:51	0:0	12	+=
water	35:54	0:0	12	step
stmts	36:24	36:59	11	
water	36:24	0:0	12	imin
op	36:29	0:0	12	=
call	36:31	36:58	12	FFMIN
arg	36:37	36:41	13	imin
water	36:37	0:0	14	imin
arg	36:43	36:58	13	src[x+offset]
water	36:43	0:0	14	src
op	36:46	0:0	14	[
water	36:47	0:0	14	x
op	36:49	0:0	14	+
water	36:51	0:0	14	offset
op	36:57	0:0	14	]
water	36:59	0:0	12	;
water	37:20	0:0	10	srcrow
op	37:27	0:0	10	+=
water	37:30	0:0	10	in
op	37:32	0:0	10	->
water	37:34	0:0	10	linesize
op	37:42	0:0	10	[
water	37:43	0:0	10	0
op	37:44	0:0	10	]
water	37:45	0:0	10	;
water	38:16	0:0	10	}
water	39:12	0:0	8	}
if	40:12	49:12	6	(imax < 0)
cond	40:16	40:23	7	imax < 0
water	40:16	0:0	8	imax
op	40:21	0:0	8	<
water	40:23	0:0	8	0
stmts	40:26	49:12	7	
water	40:26	0:0	8	{
water	41:16	0:0	8	srcrow
op	41:23	0:0	8	=
water	41:25	0:0	8	in
op	41:27	0:0	8	->
water	41:29	0:0	8	data
op	41:33	0:0	8	[
water	41:34	0:0	8	0
op	41:35	0:0	8	]
water	41:36	0:0	8	;
water	42:16	0:0	8	imax
op	42:21	0:0	8	=
water	42:23	0:0	8	0
water	42:24	0:0	8	;
for	43:16	48:16	8	(y = 0 ;y < inlink -> h;y ++)
forinit	43:21	43:26	9	y = 0 ;
water	43:21	0:0	10	y
op	43:23	0:0	10	=
water	43:25	0:0	10	0
water	43:26	0:0	10	;
cond	43:28	43:40	9	y < inlink -> h
water	43:28	0:0	10	y
op	43:30	0:0	10	<
water	43:32	0:0	10	inlink
op	43:38	0:0	10	->
water	43:40	0:0	10	h
forexpr	43:43	43:44	9	y ++
water	43:43	0:0	10	y
op	43:44	0:0	10	++
stmts	43:48	48:16	9	
water	43:48	0:0	10	{
decl	44:20	44:47	10	const uint8_t	*src
op	44:39	0:0	10	=
water	44:41	0:0	10	srcrow
for	45:20	46:59	10	(x = 0 ;x < s -> linesize;x += step)
forinit	45:25	45:30	11	x = 0 ;
water	45:25	0:0	12	x
op	45:27	0:0	12	=
water	45:29	0:0	12	0
water	45:30	0:0	12	;
cond	45:32	45:39	11	x < s -> linesize
water	45:32	0:0	12	x
op	45:34	0:0	12	<
water	45:36	0:0	12	s
op	45:37	0:0	12	->
water	45:39	0:0	12	linesize
forexpr	45:49	45:54	11	x += step
water	45:49	0:0	12	x
op	45:51	0:0	12	+=
water	45:54	0:0	12	step
stmts	46:24	46:59	11	
water	46:24	0:0	12	imax
op	46:29	0:0	12	=
call	46:31	46:58	12	FFMAX
arg	46:37	46:41	13	imax
water	46:37	0:0	14	imax
arg	46:43	46:58	13	src[x+offset]
water	46:43	0:0	14	src
op	46:46	0:0	14	[
water	46:47	0:0	14	x
op	46:49	0:0	14	+
water	46:51	0:0	14	offset
op	46:57	0:0	14	]
water	46:59	0:0	12	;
water	47:20	0:0	10	srcrow
op	47:27	0:0	10	+=
water	47:30	0:0	10	in
op	47:32	0:0	10	->
water	47:34	0:0	10	linesize
op	47:42	0:0	10	[
water	47:43	0:0	10	0
op	47:44	0:0	10	]
water	47:45	0:0	10	;
water	48:16	0:0	10	}
water	49:12	0:0	8	}
water	50:12	0:0	6	srcrow
op	50:19	0:0	6	=
water	50:21	0:0	6	in
op	50:23	0:0	6	->
water	50:25	0:0	6	data
op	50:29	0:0	6	[
water	50:30	0:0	6	0
op	50:31	0:0	6	]
water	50:32	0:0	6	;
water	51:12	0:0	6	coeff
op	51:18	0:0	6	=
water	51:20	0:0	6	(
water	51:21	0:0	6	omax
op	51:26	0:0	6	-
water	51:28	0:0	6	omin
water	51:32	0:0	6	)
op	51:34	0:0	6	/
call	51:36	51:56	6	(double)
arg	51:45	51:56	7	imax-imin
water	51:45	0:0	8	imax
op	51:50	0:0	8	-
water	51:52	0:0	8	imin
water	51:57	0:0	6	;
for	52:12	59:12	6	(y = 0 ;y < inlink -> h;y ++)
forinit	52:17	52:22	7	y = 0 ;
water	52:17	0:0	8	y
op	52:19	0:0	8	=
water	52:21	0:0	8	0
water	52:22	0:0	8	;
cond	52:24	52:36	7	y < inlink -> h
water	52:24	0:0	8	y
op	52:26	0:0	8	<
water	52:28	0:0	8	inlink
op	52:34	0:0	8	->
water	52:36	0:0	8	h
forexpr	52:39	52:40	7	y ++
water	52:39	0:0	8	y
op	52:40	0:0	8	++
stmts	52:44	59:12	7	
water	52:44	0:0	8	{
decl	53:16	53:43	8	const uint8_t	*src
op	53:35	0:0	8	=
water	53:37	0:0	8	srcrow
decl	54:16	54:37	8	uint8_t	*dst
op	54:29	0:0	8	=
water	54:31	0:0	8	dstrow
for	55:16	56:92	8	(x = 0 ;x < s -> linesize;x += step)
forinit	55:21	55:26	9	x = 0 ;
water	55:21	0:0	10	x
op	55:23	0:0	10	=
water	55:25	0:0	10	0
water	55:26	0:0	10	;
cond	55:28	55:35	9	x < s -> linesize
water	55:28	0:0	10	x
op	55:30	0:0	10	<
water	55:32	0:0	10	s
op	55:33	0:0	10	->
water	55:35	0:0	10	linesize
forexpr	55:45	55:50	9	x += step
water	55:45	0:0	10	x
op	55:47	0:0	10	+=
water	55:50	0:0	10	step
stmts	56:20	56:92	9	
water	56:20	0:0	10	dst
op	56:23	0:0	10	[
water	56:24	0:0	10	x
op	56:26	0:0	10	+
water	56:28	0:0	10	offset
op	56:34	0:0	10	]
op	56:36	0:0	10	=
call	56:38	56:91	10	av_clip_uint8
arg	56:52	56:91	11	(src[x+offset]-imin)*coeff+omin
water	56:52	0:0	12	(
water	56:53	0:0	12	src
op	56:56	0:0	12	[
water	56:57	0:0	12	x
op	56:59	0:0	12	+
water	56:61	0:0	12	offset
op	56:67	0:0	12	]
op	56:69	0:0	12	-
water	56:71	0:0	12	imin
water	56:75	0:0	12	)
op	56:77	0:0	12	*
water	56:79	0:0	12	coeff
op	56:85	0:0	12	+
water	56:87	0:0	12	omin
water	56:92	0:0	10	;
water	57:16	0:0	8	dstrow
op	57:23	0:0	8	+=
water	57:26	0:0	8	out
op	57:29	0:0	8	->
water	57:31	0:0	8	linesize
op	57:39	0:0	8	[
water	57:40	0:0	8	0
op	57:41	0:0	8	]
water	57:42	0:0	8	;
water	58:16	0:0	8	srcrow
op	58:23	0:0	8	+=
water	58:26	0:0	8	in
op	58:28	0:0	8	->
water	58:30	0:0	8	linesize
op	58:38	0:0	8	[
water	58:39	0:0	8	0
op	58:40	0:0	8	]
water	58:41	0:0	8	;
water	59:12	0:0	8	}
water	60:8	0:0	6	}
break	61:8	61:13	4	
label	62:4	62:10	4	case 2 :
for	63:8	102:8	4	(i = 0 ;i < s -> nb_comp;i ++)
forinit	63:13	63:18	5	i = 0 ;
water	63:13	0:0	6	i
op	63:15	0:0	6	=
water	63:17	0:0	6	0
water	63:18	0:0	6	;
cond	63:20	63:27	5	i < s -> nb_comp
water	63:20	0:0	6	i
op	63:22	0:0	6	<
water	63:24	0:0	6	s
op	63:25	0:0	6	->
water	63:27	0:0	6	nb_comp
forexpr	63:36	63:37	5	i ++
water	63:36	0:0	6	i
op	63:37	0:0	6	++
stmts	63:41	102:8	5	
water	63:41	0:0	6	{
decl	64:12	64:35	6	Range	*r
op	64:21	0:0	6	=
op	64:23	0:0	6	&
water	64:24	0:0	6	s
op	64:25	0:0	6	->
water	64:27	0:0	6	range
op	64:32	0:0	6	[
water	64:33	0:0	6	i
op	64:34	0:0	6	]
decl	65:12	65:49	6	const uint8_t	offset
op	65:33	0:0	6	=
water	65:35	0:0	6	s
op	65:36	0:0	6	->
water	65:38	0:0	6	rgba_map
op	65:46	0:0	6	[
water	65:47	0:0	6	i
op	65:48	0:0	6	]
decl	66:12	66:47	6	const uint8_t	*srcrow
op	66:34	0:0	6	=
water	66:36	0:0	6	in
op	66:38	0:0	6	->
water	66:40	0:0	6	data
op	66:44	0:0	6	[
water	66:45	0:0	6	0
op	66:46	0:0	6	]
decl	67:12	67:42	6	uint8_t	*dstrow
op	67:28	0:0	6	=
water	67:30	0:0	6	out
op	67:33	0:0	6	->
water	67:35	0:0	6	data
op	67:39	0:0	6	[
water	67:40	0:0	6	0
op	67:41	0:0	6	]
decl	68:12	68:53	6	int	imin
op	68:21	0:0	6	=
call	68:23	68:52	7	round
arg	68:29	68:52	8	r->in_min*UINT16_MAX
water	68:29	0:0	9	r
op	68:30	0:0	9	->
water	68:32	0:0	9	in_min
op	68:40	0:0	9	*
water	68:42	0:0	9	UINT16_MAX
decl	69:12	69:53	6	int	imax
op	69:21	0:0	6	=
call	69:23	69:52	7	round
arg	69:29	69:52	8	r->in_max*UINT16_MAX
water	69:29	0:0	9	r
op	69:30	0:0	9	->
water	69:32	0:0	9	in_max
op	69:40	0:0	9	*
water	69:42	0:0	9	UINT16_MAX
decl	70:12	70:53	6	int	omin
op	70:21	0:0	6	=
call	70:23	70:52	7	round
arg	70:29	70:52	8	r->out_min*UINT16_MAX
water	70:29	0:0	9	r
op	70:30	0:0	9	->
water	70:32	0:0	9	out_min
op	70:40	0:0	9	*
water	70:42	0:0	9	UINT16_MAX
decl	71:12	71:53	6	int	omax
op	71:21	0:0	6	=
call	71:23	71:52	7	round
arg	71:29	71:52	8	r->out_max*UINT16_MAX
water	71:29	0:0	9	r
op	71:30	0:0	9	->
water	71:32	0:0	9	out_max
op	71:40	0:0	9	*
water	71:42	0:0	9	UINT16_MAX
decl	72:12	72:24	6	double	coeff
if	73:12	81:12	6	(imin < 0)
cond	73:16	73:23	7	imin < 0
water	73:16	0:0	8	imin
op	73:21	0:0	8	<
water	73:23	0:0	8	0
stmts	73:26	81:12	7	
water	73:26	0:0	8	{
water	74:16	0:0	8	imin
op	74:21	0:0	8	=
water	74:23	0:0	8	UINT16_MAX
water	74:33	0:0	8	;
for	75:16	80:16	8	(y = 0 ;y < inlink -> h;y ++)
forinit	75:21	75:26	9	y = 0 ;
water	75:21	0:0	10	y
op	75:23	0:0	10	=
water	75:25	0:0	10	0
water	75:26	0:0	10	;
cond	75:28	75:40	9	y < inlink -> h
water	75:28	0:0	10	y
op	75:30	0:0	10	<
water	75:32	0:0	10	inlink
op	75:38	0:0	10	->
water	75:40	0:0	10	h
forexpr	75:43	75:44	9	y ++
water	75:43	0:0	10	y
op	75:44	0:0	10	++
stmts	75:48	80:16	9	
water	75:48	0:0	10	{
decl	76:20	76:66	10	const uint16_t	*src
op	76:40	0:0	10	=
water	76:42	0:0	10	(
water	76:43	0:0	10	const
water	76:49	0:0	10	uint16_t
op	76:58	0:0	10	*
water	76:59	0:0	10	)
water	76:60	0:0	10	srcrow
for	77:20	78:59	10	(x = 0 ;x < s -> linesize;x += step)
forinit	77:25	77:30	11	x = 0 ;
water	77:25	0:0	12	x
op	77:27	0:0	12	=
water	77:29	0:0	12	0
water	77:30	0:0	12	;
cond	77:32	77:39	11	x < s -> linesize
water	77:32	0:0	12	x
op	77:34	0:0	12	<
water	77:36	0:0	12	s
op	77:37	0:0	12	->
water	77:39	0:0	12	linesize
forexpr	77:49	77:54	11	x += step
water	77:49	0:0	12	x
op	77:51	0:0	12	+=
water	77:54	0:0	12	step
stmts	78:24	78:59	11	
water	78:24	0:0	12	imin
op	78:29	0:0	12	=
call	78:31	78:58	12	FFMIN
arg	78:37	78:41	13	imin
water	78:37	0:0	14	imin
arg	78:43	78:58	13	src[x+offset]
water	78:43	0:0	14	src
op	78:46	0:0	14	[
water	78:47	0:0	14	x
op	78:49	0:0	14	+
water	78:51	0:0	14	offset
op	78:57	0:0	14	]
water	78:59	0:0	12	;
water	79:20	0:0	10	srcrow
op	79:27	0:0	10	+=
water	79:30	0:0	10	in
op	79:32	0:0	10	->
water	79:34	0:0	10	linesize
op	79:42	0:0	10	[
water	79:43	0:0	10	0
op	79:44	0:0	10	]
water	79:45	0:0	10	;
water	80:16	0:0	10	}
water	81:12	0:0	8	}
if	82:12	91:12	6	(imax < 0)
cond	82:16	82:23	7	imax < 0
water	82:16	0:0	8	imax
op	82:21	0:0	8	<
water	82:23	0:0	8	0
stmts	82:26	91:12	7	
water	82:26	0:0	8	{
water	83:16	0:0	8	srcrow
op	83:23	0:0	8	=
water	83:25	0:0	8	in
op	83:27	0:0	8	->
water	83:29	0:0	8	data
op	83:33	0:0	8	[
water	83:34	0:0	8	0
op	83:35	0:0	8	]
water	83:36	0:0	8	;
water	84:16	0:0	8	imax
op	84:21	0:0	8	=
water	84:23	0:0	8	0
water	84:24	0:0	8	;
for	85:16	90:16	8	(y = 0 ;y < inlink -> h;y ++)
forinit	85:21	85:26	9	y = 0 ;
water	85:21	0:0	10	y
op	85:23	0:0	10	=
water	85:25	0:0	10	0
water	85:26	0:0	10	;
cond	85:28	85:40	9	y < inlink -> h
water	85:28	0:0	10	y
op	85:30	0:0	10	<
water	85:32	0:0	10	inlink
op	85:38	0:0	10	->
water	85:40	0:0	10	h
forexpr	85:43	85:44	9	y ++
water	85:43	0:0	10	y
op	85:44	0:0	10	++
stmts	85:48	90:16	9	
water	85:48	0:0	10	{
decl	86:20	86:66	10	const uint16_t	*src
op	86:40	0:0	10	=
water	86:42	0:0	10	(
water	86:43	0:0	10	const
water	86:49	0:0	10	uint16_t
op	86:58	0:0	10	*
water	86:59	0:0	10	)
water	86:60	0:0	10	srcrow
for	87:20	88:59	10	(x = 0 ;x < s -> linesize;x += step)
forinit	87:25	87:30	11	x = 0 ;
water	87:25	0:0	12	x
op	87:27	0:0	12	=
water	87:29	0:0	12	0
water	87:30	0:0	12	;
cond	87:32	87:39	11	x < s -> linesize
water	87:32	0:0	12	x
op	87:34	0:0	12	<
water	87:36	0:0	12	s
op	87:37	0:0	12	->
water	87:39	0:0	12	linesize
forexpr	87:49	87:54	11	x += step
water	87:49	0:0	12	x
op	87:51	0:0	12	+=
water	87:54	0:0	12	step
stmts	88:24	88:59	11	
water	88:24	0:0	12	imax
op	88:29	0:0	12	=
call	88:31	88:58	12	FFMAX
arg	88:37	88:41	13	imax
water	88:37	0:0	14	imax
arg	88:43	88:58	13	src[x+offset]
water	88:43	0:0	14	src
op	88:46	0:0	14	[
water	88:47	0:0	14	x
op	88:49	0:0	14	+
water	88:51	0:0	14	offset
op	88:57	0:0	14	]
water	88:59	0:0	12	;
water	89:20	0:0	10	srcrow
op	89:27	0:0	10	+=
water	89:30	0:0	10	in
op	89:32	0:0	10	->
water	89:34	0:0	10	linesize
op	89:42	0:0	10	[
water	89:43	0:0	10	0
op	89:44	0:0	10	]
water	89:45	0:0	10	;
water	90:16	0:0	10	}
water	91:12	0:0	8	}
water	92:12	0:0	6	srcrow
op	92:19	0:0	6	=
water	92:21	0:0	6	in
op	92:23	0:0	6	->
water	92:25	0:0	6	data
op	92:29	0:0	6	[
water	92:30	0:0	6	0
op	92:31	0:0	6	]
water	92:32	0:0	6	;
water	93:12	0:0	6	coeff
op	93:18	0:0	6	=
water	93:20	0:0	6	(
water	93:21	0:0	6	omax
op	93:26	0:0	6	-
water	93:28	0:0	6	omin
water	93:32	0:0	6	)
op	93:34	0:0	6	/
call	93:36	93:56	6	(double)
arg	93:45	93:56	7	imax-imin
water	93:45	0:0	8	imax
op	93:50	0:0	8	-
water	93:52	0:0	8	imin
water	93:57	0:0	6	;
for	94:12	101:12	6	(y = 0 ;y < inlink -> h;y ++)
forinit	94:17	94:22	7	y = 0 ;
water	94:17	0:0	8	y
op	94:19	0:0	8	=
water	94:21	0:0	8	0
water	94:22	0:0	8	;
cond	94:24	94:36	7	y < inlink -> h
water	94:24	0:0	8	y
op	94:26	0:0	8	<
water	94:28	0:0	8	inlink
op	94:34	0:0	8	->
water	94:36	0:0	8	h
forexpr	94:39	94:40	7	y ++
water	94:39	0:0	8	y
op	94:40	0:0	8	++
stmts	94:44	101:12	7	
water	94:44	0:0	8	{
decl	95:16	95:61	8	const uint16_t	*src
op	95:36	0:0	8	=
water	95:38	0:0	8	(
water	95:39	0:0	8	const
water	95:45	0:0	8	uint16_t
op	95:53	0:0	8	*
water	95:54	0:0	8	)
water	95:55	0:0	8	srcrow
decl	96:16	96:50	8	uint16_t	*dst
op	96:30	0:0	8	=
water	96:32	0:0	8	(
water	96:33	0:0	8	uint16_t
op	96:42	0:0	8	*
water	96:43	0:0	8	)
water	96:44	0:0	8	dstrow
for	97:16	98:93	8	(x = 0 ;x < s -> linesize;x += step)
forinit	97:21	97:26	9	x = 0 ;
water	97:21	0:0	10	x
op	97:23	0:0	10	=
water	97:25	0:0	10	0
water	97:26	0:0	10	;
cond	97:28	97:35	9	x < s -> linesize
water	97:28	0:0	10	x
op	97:30	0:0	10	<
water	97:32	0:0	10	s
op	97:33	0:0	10	->
water	97:35	0:0	10	linesize
forexpr	97:45	97:50	9	x += step
water	97:45	0:0	10	x
op	97:47	0:0	10	+=
water	97:50	0:0	10	step
stmts	98:20	98:93	9	
water	98:20	0:0	10	dst
op	98:23	0:0	10	[
water	98:24	0:0	10	x
op	98:26	0:0	10	+
water	98:28	0:0	10	offset
op	98:34	0:0	10	]
op	98:36	0:0	10	=
call	98:38	98:92	10	av_clip_uint16
arg	98:53	98:92	11	(src[x+offset]-imin)*coeff+omin
water	98:53	0:0	12	(
water	98:54	0:0	12	src
op	98:57	0:0	12	[
water	98:58	0:0	12	x
op	98:60	0:0	12	+
water	98:62	0:0	12	offset
op	98:68	0:0	12	]
op	98:70	0:0	12	-
water	98:72	0:0	12	imin
water	98:76	0:0	12	)
op	98:78	0:0	12	*
water	98:80	0:0	12	coeff
op	98:86	0:0	12	+
water	98:88	0:0	12	omin
water	98:93	0:0	10	;
water	99:16	0:0	8	dstrow
op	99:23	0:0	8	+=
water	99:26	0:0	8	out
op	99:29	0:0	8	->
water	99:31	0:0	8	linesize
op	99:39	0:0	8	[
water	99:40	0:0	8	0
op	99:41	0:0	8	]
water	99:42	0:0	8	;
water	100:16	0:0	8	srcrow
op	100:23	0:0	8	+=
water	100:26	0:0	8	in
op	100:28	0:0	8	->
water	100:30	0:0	8	linesize
op	100:38	0:0	8	[
water	100:39	0:0	8	0
op	100:40	0:0	8	]
water	100:41	0:0	8	;
water	101:12	0:0	8	}
water	102:8	0:0	6	}
water	103:4	0:0	4	}
if	104:4	105:26	2	(in != out)
cond	104:8	104:14	3	in != out
water	104:8	0:0	4	in
op	104:11	0:0	4	!=
water	104:14	0:0	4	out
stmts	105:8	105:26	3	
call	105:8	105:25	4	av_frame_free
arg	105:22	105:25	5	&in
op	105:22	0:0	6	&
water	105:23	0:0	6	in
water	105:26	0:0	4	;
return	106:4	106:40	2	ff_filter_frame(outlink,out)
call	106:11	106:39	3	ff_filter_frame
arg	106:27	106:34	4	outlink
water	106:27	0:0	5	outlink
arg	106:36	106:39	4	out
water	106:36	0:0	5	out

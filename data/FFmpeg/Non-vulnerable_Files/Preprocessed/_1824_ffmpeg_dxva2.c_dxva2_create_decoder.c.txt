func	1:0	122:0	0	static int	dxva2_create_decoder
params	1:31	0:0	1	
param	1:32	1:49	2	AVCodecContext *	s
stmnts	0:0	121:26	1	
decl	3:4	3:33	2	InputStream	*ist
op	3:22	0:0	2	=
water	3:24	0:0	2	s
op	3:25	0:0	2	->
water	3:27	0:0	2	opaque
decl	4:4	4:84	2	int	loglevel
op	4:17	0:0	2	=
water	4:19	0:0	2	(
water	4:20	0:0	2	ist
op	4:23	0:0	2	->
water	4:25	0:0	2	hwaccel_id
op	4:36	0:0	2	==
water	4:39	0:0	2	HWACCEL_AUTO
water	4:51	0:0	2	)
water	4:53	0:0	2	?
water	4:55	0:0	2	AV_LOG_VERBOSE
water	4:70	0:0	2	:
water	4:72	0:0	2	AV_LOG_ERROR
decl	5:4	5:40	2	DXVA2Context	*ctx
op	5:22	0:0	2	=
water	5:24	0:0	2	ist
op	5:27	0:0	2	->
water	5:29	0:0	2	hwaccel_ctx
decl	6:4	6:54	2	struct dxva_context	*dxva_ctx
op	6:34	0:0	2	=
water	6:36	0:0	2	s
op	6:37	0:0	2	->
water	6:39	0:0	2	hwaccel_context
decl	7:4	7:26	2	GUID	*guid_list
op	7:20	0:0	2	=
water	7:22	0:0	2	NULL
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	guid_count
op	8:24	0:0	2	=
water	8:26	0:0	2	0
water	8:27	0:0	2	,
water	8:29	0:0	2	i
water	8:30	0:0	2	,
water	8:32	0:0	2	j
water	8:33	0:0	2	;
decl	9:4	9:32	2	GUID	device_guid
op	9:21	0:0	2	=
water	9:23	0:0	2	GUID_NULL
decl	10:4	10:126	2	const D3DFORMAT	surface_format
op	10:35	0:0	2	=
water	10:37	0:0	2	(
water	10:38	0:0	2	s
op	10:39	0:0	2	->
water	10:41	0:0	2	sw_pix_fmt
op	10:52	0:0	2	==
water	10:55	0:0	2	AV_PIX_FMT_YUV420P10
water	10:75	0:0	2	)
water	10:77	0:0	2	?
call	10:79	10:100	3	MKTAG
arg	10:85	10:88	4	'P'
water	10:85	0:0	5	'P'
arg	10:89	10:92	4	'0'
water	10:89	0:0	5	'0'
arg	10:93	10:96	4	'1'
water	10:93	0:0	5	'1'
arg	10:97	10:100	4	'0'
water	10:97	0:0	5	'0'
water	10:102	0:0	2	:
call	10:104	10:125	3	MKTAG
arg	10:110	10:113	4	'N'
water	10:110	0:0	5	'N'
arg	10:114	10:117	4	'V'
water	10:114	0:0	5	'V'
arg	10:118	10:121	4	'1'
water	10:118	0:0	5	'1'
arg	10:122	10:125	4	'2'
water	10:122	0:0	5	'2'
decl	11:4	11:31	2	D3DFORMAT	target_format
op	11:28	0:0	2	=
water	11:30	0:0	2	0
decl	12:4	12:32	2	DXVA2_VideoDesc	desc
op	12:25	0:0	2	=
water	12:27	0:0	2	{
water	12:29	0:0	2	0
water	12:31	0:0	2	}
decl	13:4	13:36	2	DXVA2_ConfigPictureDecode	config
decl	14:4	14:14	2	HRESULT	hr
decl	15:4	15:39	2	int	surface_alignment
water	15:25	0:0	2	,
decl	15:4	15:39	2	int	num_surfaces
decl	16:4	16:11	2	int	ret
decl	17:4	17:38	2	AVDXVA2FramesContext	*frames_hwctx
decl	18:4	18:33	2	AVHWFramesContext	*frames_ctx
water	19:4	0:0	2	hr
op	19:7	0:0	2	=
call	19:9	19:104	2	IDirectXVideoDecoderService_GetDecoderDeviceGuids
arg	19:59	19:79	3	ctx->decoder_service
water	19:59	0:0	4	ctx
op	19:62	0:0	4	->
water	19:64	0:0	4	decoder_service
arg	19:81	19:92	3	&guid_count
op	19:81	0:0	4	&
water	19:82	0:0	4	guid_count
arg	19:94	19:104	3	&guid_list
op	19:94	0:0	4	&
water	19:95	0:0	4	guid_list
water	19:105	0:0	2	;
if	20:4	23:4	2	(FAILED (hr ))
cond	20:8	20:17	3	FAILED (hr )
call	20:8	20:17	4	FAILED
arg	20:15	20:17	5	hr
water	20:15	0:0	6	hr
stmts	20:20	23:4	3	
water	20:20	0:0	4	{
call	21:8	21:74	4	av_log
arg	21:15	21:19	5	NULL
water	21:15	0:0	6	NULL
arg	21:21	21:29	5	loglevel
water	21:21	0:0	6	loglevel
arg	21:31	21:74	5	"Failed to retrieve decoder device GUIDs\n"
water	21:31	0:0	6	"Failed to retrieve decoder device GUIDs\n"
water	21:75	0:0	4	;
goto	22:8	22:17	4	fail
water	22:13	0:0	5	fail
water	23:4	0:0	4	}
for	24:4	52:4	2	(i = 0 ;dxva2_modes [ i ] . guid;i ++)
forinit	24:9	24:14	3	i = 0 ;
water	24:9	0:0	4	i
op	24:11	0:0	4	=
water	24:13	0:0	4	0
water	24:14	0:0	4	;
cond	24:16	24:31	3	dxva2_modes [ i ] . guid
water	24:16	0:0	4	dxva2_modes
op	24:27	0:0	4	[
water	24:28	0:0	4	i
op	24:29	0:0	4	]
op	24:30	0:0	4	.
water	24:31	0:0	4	guid
forexpr	24:37	24:38	3	i ++
water	24:37	0:0	4	i
op	24:38	0:0	4	++
stmts	24:42	52:4	3	
water	24:42	0:0	4	{
decl	25:8	25:37	4	D3DFORMAT	*target_list
op	25:31	0:0	4	=
water	25:33	0:0	4	NULL
water	26:8	0:0	4	unsigned
water	26:17	0:0	4	target_count
op	26:30	0:0	4	=
water	26:32	0:0	4	0
water	26:33	0:0	4	;
decl	27:8	27:48	4	const dxva2_mode	*mode
op	27:31	0:0	4	=
op	27:33	0:0	4	&
water	27:34	0:0	4	dxva2_modes
op	27:45	0:0	4	[
water	27:46	0:0	4	i
op	27:47	0:0	4	]
if	28:8	29:20	4	(mode -> codec != s -> codec_id)
cond	28:12	28:30	5	mode -> codec != s -> codec_id
water	28:12	0:0	6	mode
op	28:16	0:0	6	->
water	28:18	0:0	6	codec
op	28:24	0:0	6	!=
water	28:27	0:0	6	s
op	28:28	0:0	6	->
water	28:30	0:0	6	codec_id
stmts	29:12	29:20	5	
continue	29:12	29:20	6	
for	30:8	33:8	4	(j = 0 ;j < guid_count;j ++)
forinit	30:13	30:18	5	j = 0 ;
water	30:13	0:0	6	j
op	30:15	0:0	6	=
water	30:17	0:0	6	0
water	30:18	0:0	6	;
cond	30:20	30:24	5	j < guid_count
water	30:20	0:0	6	j
op	30:22	0:0	6	<
water	30:24	0:0	6	guid_count
forexpr	30:36	30:37	5	j ++
water	30:36	0:0	6	j
op	30:37	0:0	6	++
stmts	30:41	33:8	5	
water	30:41	0:0	6	{
if	31:12	32:21	6	(IsEqualGUID (mode -> guid ,& guid_list [ j ] ))
cond	31:16	31:53	7	IsEqualGUID (mode -> guid ,& guid_list [ j ] )
call	31:16	31:53	8	IsEqualGUID
arg	31:28	31:38	9	mode->guid
water	31:28	0:0	10	mode
op	31:32	0:0	10	->
water	31:34	0:0	10	guid
arg	31:40	31:53	9	&guid_list[j]
op	31:40	0:0	10	&
water	31:41	0:0	10	guid_list
op	31:50	0:0	10	[
water	31:51	0:0	10	j
op	31:52	0:0	10	]
stmts	32:16	32:21	7	
break	32:16	32:21	8	
water	33:8	0:0	6	}
if	34:8	35:20	4	(j == guid_count)
cond	34:12	34:17	5	j == guid_count
water	34:12	0:0	6	j
op	34:14	0:0	6	==
water	34:17	0:0	6	guid_count
stmts	35:12	35:20	5	
continue	35:12	35:20	6	
water	36:8	0:0	4	hr
op	36:11	0:0	4	=
call	36:13	36:126	4	IDirectXVideoDecoderService_GetDecoderRenderTargets
arg	36:65	36:85	5	ctx->decoder_service
water	36:65	0:0	6	ctx
op	36:68	0:0	6	->
water	36:70	0:0	6	decoder_service
arg	36:87	36:97	5	mode->guid
water	36:87	0:0	6	mode
op	36:91	0:0	6	->
water	36:93	0:0	6	guid
arg	36:99	36:112	5	&target_count
op	36:99	0:0	6	&
water	36:100	0:0	6	target_count
arg	36:114	36:126	5	&target_list
op	36:114	0:0	6	&
water	36:115	0:0	6	target_list
water	36:127	0:0	4	;
if	37:8	39:8	4	(FAILED (hr ))
cond	37:12	37:21	5	FAILED (hr )
call	37:12	37:21	6	FAILED
arg	37:19	37:21	7	hr
water	37:19	0:0	8	hr
stmts	37:24	39:8	5	
water	37:24	0:0	6	{
continue	38:12	38:20	6	
water	39:8	0:0	6	}
for	40:8	46:8	4	(j = 0 ;j < target_count;j ++)
forinit	40:13	40:18	5	j = 0 ;
water	40:13	0:0	6	j
op	40:15	0:0	6	=
water	40:17	0:0	6	0
water	40:18	0:0	6	;
cond	40:20	40:24	5	j < target_count
water	40:20	0:0	6	j
op	40:22	0:0	6	<
water	40:24	0:0	6	target_count
forexpr	40:38	40:39	5	j ++
water	40:38	0:0	6	j
op	40:39	0:0	6	++
stmts	40:43	46:8	5	
water	40:43	0:0	6	{
decl	41:12	41:51	6	const D3DFORMAT	format
op	41:35	0:0	6	=
water	41:37	0:0	6	target_list
op	41:48	0:0	6	[
water	41:49	0:0	6	j
op	41:50	0:0	6	]
if	42:12	45:12	6	(format == surface_format)
cond	42:16	42:26	7	format == surface_format
water	42:16	0:0	8	format
op	42:23	0:0	8	==
water	42:26	0:0	8	surface_format
stmts	42:42	45:12	7	
water	42:42	0:0	8	{
water	43:16	0:0	8	target_format
op	43:30	0:0	8	=
water	43:32	0:0	8	format
water	43:38	0:0	8	;
break	44:16	44:21	8	
water	45:12	0:0	8	}
water	46:8	0:0	6	}
call	47:8	47:33	4	CoTaskMemFree
arg	47:22	47:33	5	target_list
water	47:22	0:0	6	target_list
water	47:34	0:0	4	;
if	48:8	51:8	4	(target_format)
cond	48:12	48:12	5	target_format
water	48:12	0:0	6	target_format
stmts	48:27	51:8	5	
water	48:27	0:0	6	{
water	49:12	0:0	6	device_guid
op	49:24	0:0	6	=
op	49:26	0:0	6	*
water	49:27	0:0	6	mode
op	49:31	0:0	6	->
water	49:33	0:0	6	guid
water	49:37	0:0	6	;
break	50:12	50:17	6	
water	51:8	0:0	6	}
water	52:4	0:0	4	}
call	53:4	53:27	2	CoTaskMemFree
arg	53:18	53:27	3	guid_list
water	53:18	0:0	4	guid_list
water	53:28	0:0	2	;
if	54:4	57:4	2	(IsEqualGUID (& device_guid ,& GUID_NULL ))
cond	54:8	54:44	3	IsEqualGUID (& device_guid ,& GUID_NULL )
call	54:8	54:44	4	IsEqualGUID
arg	54:20	54:32	5	&device_guid
op	54:20	0:0	6	&
water	54:21	0:0	6	device_guid
arg	54:34	54:44	5	&GUID_NULL
op	54:34	0:0	6	&
water	54:35	0:0	6	GUID_NULL
stmts	54:47	57:4	3	
water	54:47	0:0	4	{
call	55:8	55:68	4	av_log
arg	55:15	55:19	5	NULL
water	55:15	0:0	6	NULL
arg	55:21	55:29	5	loglevel
water	55:21	0:0	6	loglevel
arg	55:31	55:68	5	"No decoder device for codec found\n"
water	55:31	0:0	6	"No decoder device for codec found\n"
water	55:69	0:0	4	;
goto	56:8	56:17	4	fail
water	56:13	0:0	5	fail
water	57:4	0:0	4	}
water	58:4	0:0	2	desc
op	58:8	0:0	2	.
water	58:9	0:0	2	SampleWidth
op	58:22	0:0	2	=
water	58:24	0:0	2	s
op	58:25	0:0	2	->
water	58:27	0:0	2	coded_width
water	58:38	0:0	2	;
water	59:4	0:0	2	desc
op	59:8	0:0	2	.
water	59:9	0:0	2	SampleHeight
op	59:22	0:0	2	=
water	59:24	0:0	2	s
op	59:25	0:0	2	->
water	59:27	0:0	2	coded_height
water	59:39	0:0	2	;
water	60:4	0:0	2	desc
op	60:8	0:0	2	.
water	60:9	0:0	2	Format
op	60:22	0:0	2	=
water	60:24	0:0	2	target_format
water	60:37	0:0	2	;
water	61:4	0:0	2	ret
op	61:8	0:0	2	=
call	61:10	61:73	2	dxva2_get_decoder_configuration
arg	61:42	61:43	3	s
water	61:42	0:0	4	s
arg	61:45	61:57	3	&device_guid
op	61:45	0:0	4	&
water	61:46	0:0	4	device_guid
arg	61:59	61:64	3	&desc
op	61:59	0:0	4	&
water	61:60	0:0	4	desc
arg	61:66	61:73	3	&config
op	61:66	0:0	4	&
water	61:67	0:0	4	config
water	61:74	0:0	2	;
if	62:4	64:4	2	(ret < 0)
cond	62:8	62:14	3	ret < 0
water	62:8	0:0	4	ret
op	62:12	0:0	4	<
water	62:14	0:0	4	0
stmts	62:17	64:4	3	
water	62:17	0:0	4	{
goto	63:8	63:17	4	fail
water	63:13	0:0	5	fail
water	64:4	0:0	4	}
if	67:4	68:30	2	(s -> codec_id == AV_CODEC_ID_MPEG2VIDEO)
cond	67:8	67:23	3	s -> codec_id == AV_CODEC_ID_MPEG2VIDEO
water	67:8	0:0	4	s
op	67:9	0:0	4	->
water	67:11	0:0	4	codec_id
op	67:20	0:0	4	==
water	67:23	0:0	4	AV_CODEC_ID_MPEG2VIDEO
stmts	68:8	68:30	3	
water	68:8	0:0	4	surface_alignment
op	68:26	0:0	4	=
water	68:28	0:0	4	32
water	68:30	0:0	4	;
else	71:4	72:31	2
stmts	71:9	72:31	3	
if	71:9	72:31	4	(s -> codec_id == AV_CODEC_ID_HEVC)
cond	71:14	71:29	5	s -> codec_id == AV_CODEC_ID_HEVC
water	71:14	0:0	6	s
op	71:15	0:0	6	->
water	71:17	0:0	6	codec_id
op	71:26	0:0	6	==
water	71:29	0:0	6	AV_CODEC_ID_HEVC
stmts	72:8	72:31	5	
water	72:8	0:0	6	surface_alignment
op	72:26	0:0	6	=
water	72:28	0:0	6	128
water	72:31	0:0	6	;
else	73:4	74:30	2
stmts	74:8	74:30	3	
water	74:8	0:0	4	surface_alignment
op	74:26	0:0	4	=
water	74:28	0:0	4	16
water	74:30	0:0	4	;
water	76:4	0:0	2	num_surfaces
op	76:17	0:0	2	=
water	76:19	0:0	2	4
water	76:20	0:0	2	;
if	78:4	79:26	2	(s -> codec_id == AV_CODEC_ID_H264 || s -> codec_id == AV_CODEC_ID_HEVC)
cond	78:8	78:58	3	s -> codec_id == AV_CODEC_ID_H264 || s -> codec_id == AV_CODEC_ID_HEVC
water	78:8	0:0	4	s
op	78:9	0:0	4	->
water	78:11	0:0	4	codec_id
op	78:20	0:0	4	==
water	78:23	0:0	4	AV_CODEC_ID_H264
op	78:40	0:0	4	||
water	78:43	0:0	4	s
op	78:44	0:0	4	->
water	78:46	0:0	4	codec_id
op	78:55	0:0	4	==
water	78:58	0:0	4	AV_CODEC_ID_HEVC
stmts	79:8	79:26	3	
water	79:8	0:0	4	num_surfaces
op	79:21	0:0	4	+=
water	79:24	0:0	4	16
water	79:26	0:0	4	;
else	80:4	81:25	2
stmts	80:9	81:25	3	
if	80:9	81:25	4	(s -> codec_id == AV_CODEC_ID_VP9)
cond	80:13	80:28	5	s -> codec_id == AV_CODEC_ID_VP9
water	80:13	0:0	6	s
op	80:14	0:0	6	->
water	80:16	0:0	6	codec_id
op	80:25	0:0	6	==
water	80:28	0:0	6	AV_CODEC_ID_VP9
stmts	81:8	81:25	5	
water	81:8	0:0	6	num_surfaces
op	81:21	0:0	6	+=
water	81:24	0:0	6	8
water	81:25	0:0	6	;
else	82:4	83:25	2
stmts	83:8	83:25	3	
water	83:8	0:0	4	num_surfaces
op	83:21	0:0	4	+=
water	83:24	0:0	4	2
water	83:25	0:0	4	;
if	85:4	86:39	2	(s -> active_thread_type & FF_THREAD_FRAME)
cond	85:8	85:32	3	s -> active_thread_type & FF_THREAD_FRAME
water	85:8	0:0	4	s
op	85:9	0:0	4	->
water	85:11	0:0	4	active_thread_type
op	85:30	0:0	4	&
water	85:32	0:0	4	FF_THREAD_FRAME
stmts	86:8	86:39	3	
water	86:8	0:0	4	num_surfaces
op	86:21	0:0	4	+=
water	86:24	0:0	4	s
op	86:25	0:0	4	->
water	86:27	0:0	4	thread_count
water	86:39	0:0	4	;
water	87:4	0:0	2	ctx
op	87:7	0:0	2	->
water	87:9	0:0	2	hw_frames_ctx
op	87:23	0:0	2	=
call	87:25	87:64	2	av_hwframe_ctx_alloc
arg	87:46	87:64	3	ctx->hw_device_ctx
water	87:46	0:0	4	ctx
op	87:49	0:0	4	->
water	87:51	0:0	4	hw_device_ctx
water	87:65	0:0	2	;
if	88:4	89:17	2	(! ctx -> hw_frames_ctx)
cond	88:8	88:14	3	! ctx -> hw_frames_ctx
op	88:8	0:0	4	!
water	88:9	0:0	4	ctx
op	88:12	0:0	4	->
water	88:14	0:0	4	hw_frames_ctx
stmts	89:8	89:17	3	
goto	89:8	89:17	4	fail
water	89:13	0:0	5	fail
water	90:4	0:0	2	frames_ctx
op	90:17	0:0	2	=
water	90:19	0:0	2	(
water	90:20	0:0	2	AVHWFramesContext
op	90:37	0:0	2	*
water	90:38	0:0	2	)
water	90:39	0:0	2	ctx
op	90:42	0:0	2	->
water	90:44	0:0	2	hw_frames_ctx
op	90:57	0:0	2	->
water	90:59	0:0	2	data
water	90:63	0:0	2	;
water	91:4	0:0	2	frames_hwctx
op	91:17	0:0	2	=
water	91:19	0:0	2	frames_ctx
op	91:29	0:0	2	->
water	91:31	0:0	2	hwctx
water	91:36	0:0	2	;
water	92:4	0:0	2	frames_ctx
op	92:14	0:0	2	->
water	92:16	0:0	2	format
op	92:34	0:0	2	=
water	92:36	0:0	2	AV_PIX_FMT_DXVA2_VLD
water	92:56	0:0	2	;
water	93:4	0:0	2	frames_ctx
op	93:14	0:0	2	->
water	93:16	0:0	2	sw_format
op	93:34	0:0	2	=
water	93:36	0:0	2	(
water	93:37	0:0	2	target_format
op	93:51	0:0	2	==
call	93:54	93:75	2	MKTAG
arg	93:60	93:63	3	'P'
water	93:60	0:0	4	'P'
arg	93:64	93:67	3	'0'
water	93:64	0:0	4	'0'
arg	93:68	93:71	3	'1'
water	93:68	0:0	4	'1'
arg	93:72	93:75	3	'0'
water	93:72	0:0	4	'0'
water	93:77	0:0	2	?
water	93:79	0:0	2	AV_PIX_FMT_P010
water	93:95	0:0	2	:
water	93:97	0:0	2	AV_PIX_FMT_NV12
water	93:112	0:0	2	)
water	93:113	0:0	2	;
water	94:4	0:0	2	frames_ctx
op	94:14	0:0	2	->
water	94:16	0:0	2	width
op	94:34	0:0	2	=
call	94:36	94:77	2	FFALIGN
arg	94:44	94:58	3	s->coded_width
water	94:44	0:0	4	s
op	94:45	0:0	4	->
water	94:47	0:0	4	coded_width
arg	94:60	94:77	3	surface_alignment
water	94:60	0:0	4	surface_alignment
water	94:78	0:0	2	;
water	95:4	0:0	2	frames_ctx
op	95:14	0:0	2	->
water	95:16	0:0	2	height
op	95:34	0:0	2	=
call	95:36	95:78	2	FFALIGN
arg	95:44	95:59	3	s->coded_height
water	95:44	0:0	4	s
op	95:45	0:0	4	->
water	95:47	0:0	4	coded_height
arg	95:61	95:78	3	surface_alignment
water	95:61	0:0	4	surface_alignment
water	95:79	0:0	2	;
water	96:4	0:0	2	frames_ctx
op	96:14	0:0	2	->
water	96:16	0:0	2	initial_pool_size
op	96:34	0:0	2	=
water	96:36	0:0	2	num_surfaces
water	96:48	0:0	2	;
water	97:4	0:0	2	frames_hwctx
op	97:16	0:0	2	->
water	97:18	0:0	2	surface_type
op	97:31	0:0	2	=
water	97:33	0:0	2	DXVA2_VideoDecoderRenderTarget
water	97:63	0:0	2	;
water	98:4	0:0	2	ret
op	98:8	0:0	2	=
call	98:10	98:48	2	av_hwframe_ctx_init
arg	98:30	98:48	3	ctx->hw_frames_ctx
water	98:30	0:0	4	ctx
op	98:33	0:0	4	->
water	98:35	0:0	4	hw_frames_ctx
water	98:49	0:0	2	;
if	99:4	102:4	2	(ret < 0)
cond	99:8	99:14	3	ret < 0
water	99:8	0:0	4	ret
op	99:12	0:0	4	<
water	99:14	0:0	4	0
stmts	99:17	102:4	3	
water	99:17	0:0	4	{
call	100:8	100:77	4	av_log
arg	100:15	100:19	5	NULL
water	100:15	0:0	6	NULL
arg	100:21	100:29	5	loglevel
water	100:21	0:0	6	loglevel
arg	100:31	100:77	5	"Failed to initialize the HW frames context\n"
water	100:31	0:0	6	"Failed to initialize the HW frames context\n"
water	100:78	0:0	4	;
goto	101:8	101:17	4	fail
water	101:13	0:0	5	fail
water	102:4	0:0	4	}
water	103:4	0:0	2	hr
op	103:7	0:0	2	=
call	103:9	105:116	2	IDirectXVideoDecoderService_CreateVideoDecoder
arg	103:56	103:76	3	ctx->decoder_service
water	103:56	0:0	4	ctx
op	103:59	0:0	4	->
water	103:61	0:0	4	decoder_service
arg	103:78	103:90	3	&device_guid
op	103:78	0:0	4	&
water	103:79	0:0	4	device_guid
arg	104:56	104:61	3	&desc
op	104:56	0:0	4	&
water	104:57	0:0	4	desc
arg	104:63	104:70	3	&config
op	104:63	0:0	4	&
water	104:64	0:0	4	config
arg	104:72	104:94	3	frames_hwctx->surfaces
water	104:72	0:0	4	frames_hwctx
op	104:84	0:0	4	->
water	104:86	0:0	4	surfaces
arg	105:56	105:81	3	frames_hwctx->nb_surfaces
water	105:56	0:0	4	frames_hwctx
op	105:68	0:0	4	->
water	105:70	0:0	4	nb_surfaces
arg	105:83	105:116	3	&frames_hwctx->decoder_to_release
op	105:83	0:0	4	&
water	105:84	0:0	4	frames_hwctx
op	105:96	0:0	4	->
water	105:98	0:0	4	decoder_to_release
water	105:117	0:0	2	;
if	106:4	109:4	2	(FAILED (hr ))
cond	106:8	106:17	3	FAILED (hr )
call	106:8	106:17	4	FAILED
arg	106:15	106:17	5	hr
water	106:15	0:0	6	hr
stmts	106:20	109:4	3	
water	106:20	0:0	4	{
call	107:8	107:71	4	av_log
arg	107:15	107:19	5	NULL
water	107:15	0:0	6	NULL
arg	107:21	107:29	5	loglevel
water	107:21	0:0	6	loglevel
arg	107:31	107:71	5	"Failed to create DXVA2 video decoder\n"
water	107:31	0:0	6	"Failed to create DXVA2 video decoder\n"
water	107:72	0:0	4	;
goto	108:8	108:17	4	fail
water	108:13	0:0	5	fail
water	109:4	0:0	4	}
water	110:4	0:0	2	ctx
op	110:7	0:0	2	->
water	110:9	0:0	2	decoder_guid
op	110:24	0:0	2	=
water	110:26	0:0	2	device_guid
water	110:37	0:0	2	;
water	111:4	0:0	2	ctx
op	111:7	0:0	2	->
water	111:9	0:0	2	decoder_config
op	111:24	0:0	2	=
water	111:26	0:0	2	config
water	111:32	0:0	2	;
water	112:4	0:0	2	dxva_ctx
op	112:12	0:0	2	->
water	112:14	0:0	2	cfg
op	112:28	0:0	2	=
op	112:30	0:0	2	&
water	112:31	0:0	2	ctx
op	112:34	0:0	2	->
water	112:36	0:0	2	decoder_config
water	112:50	0:0	2	;
water	113:4	0:0	2	dxva_ctx
op	113:12	0:0	2	->
water	113:14	0:0	2	decoder
op	113:28	0:0	2	=
water	113:30	0:0	2	frames_hwctx
op	113:42	0:0	2	->
water	113:44	0:0	2	decoder_to_release
water	113:62	0:0	2	;
water	114:4	0:0	2	dxva_ctx
op	114:12	0:0	2	->
water	114:14	0:0	2	surface
op	114:28	0:0	2	=
water	114:30	0:0	2	frames_hwctx
op	114:42	0:0	2	->
water	114:44	0:0	2	surfaces
water	114:52	0:0	2	;
water	115:4	0:0	2	dxva_ctx
op	115:12	0:0	2	->
water	115:14	0:0	2	surface_count
op	115:28	0:0	2	=
water	115:30	0:0	2	frames_hwctx
op	115:42	0:0	2	->
water	115:44	0:0	2	nb_surfaces
water	115:55	0:0	2	;
if	116:4	117:68	2	(IsEqualGUID (& ctx -> decoder_guid ,& DXVADDI_Intel_ModeH264_E ))
cond	116:8	116:65	3	IsEqualGUID (& ctx -> decoder_guid ,& DXVADDI_Intel_ModeH264_E )
call	116:8	116:65	4	IsEqualGUID
arg	116:20	116:38	5	&ctx->decoder_guid
op	116:20	0:0	6	&
water	116:21	0:0	6	ctx
op	116:24	0:0	6	->
water	116:26	0:0	6	decoder_guid
arg	116:40	116:65	5	&DXVADDI_Intel_ModeH264_E
op	116:40	0:0	6	&
water	116:41	0:0	6	DXVADDI_Intel_ModeH264_E
stmts	117:8	117:68	3	
water	117:8	0:0	4	dxva_ctx
op	117:16	0:0	4	->
water	117:18	0:0	4	workaround
op	117:29	0:0	4	|=
water	117:32	0:0	4	FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO
water	117:68	0:0	4	;
return	118:4	118:12	2	0
water	118:11	0:0	3	0
label	119:0	119:4	2	fail :
call	120:4	120:39	2	av_buffer_unref
arg	120:20	120:39	3	&ctx->hw_frames_ctx
op	120:20	0:0	4	&
water	120:21	0:0	4	ctx
op	120:24	0:0	4	->
water	120:26	0:0	4	hw_frames_ctx
water	120:40	0:0	2	;
return	121:4	121:26	2	AVERROR(EINVAL)
call	121:11	121:25	3	AVERROR
arg	121:19	121:25	4	EINVAL
water	121:19	0:0	5	EINVAL

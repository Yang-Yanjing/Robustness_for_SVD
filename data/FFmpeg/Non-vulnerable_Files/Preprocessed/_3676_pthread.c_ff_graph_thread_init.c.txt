func	1:0	24:0	0	int	ff_graph_thread_init
params	1:24	0:0	1	
param	1:25	1:45	2	AVFilterGraph *	graph
stmnts	0:0	23:12	1	
decl	3:4	3:11	2	int	ret
call	5:4	5:19	2	w32thread_init
water	5:20	0:0	2	;
if	7:4	10:4	2	(graph -> nb_threads == 1)
cond	7:8	7:29	3	graph -> nb_threads == 1
water	7:8	0:0	4	graph
op	7:13	0:0	4	->
water	7:15	0:0	4	nb_threads
op	7:26	0:0	4	==
water	7:29	0:0	4	1
stmts	7:32	10:4	3	
water	7:32	0:0	4	{
water	8:8	0:0	4	graph
op	8:13	0:0	4	->
water	8:15	0:0	4	thread_type
op	8:27	0:0	4	=
water	8:29	0:0	4	0
water	8:30	0:0	4	;
return	9:8	9:16	4	0
water	9:15	0:0	5	0
water	10:4	0:0	4	}
water	11:4	0:0	2	graph
op	11:9	0:0	2	->
water	11:11	0:0	2	internal
op	11:19	0:0	2	->
water	11:21	0:0	2	thread
op	11:28	0:0	2	=
call	11:30	11:62	2	av_mallocz
arg	11:41	11:62	3	sizeof(ThreadContext)
op	11:41	0:0	4	sizeof
water	11:47	0:0	4	(
water	11:48	0:0	4	ThreadContext
water	11:61	0:0	4	)
water	11:63	0:0	2	;
if	12:4	13:30	2	(! graph -> internal -> thread)
cond	12:8	12:26	3	! graph -> internal -> thread
op	12:8	0:0	4	!
water	12:9	0:0	4	graph
op	12:14	0:0	4	->
water	12:16	0:0	4	internal
op	12:24	0:0	4	->
water	12:26	0:0	4	thread
stmts	13:8	13:30	3	
return	13:8	13:30	4	AVERROR(ENOMEM)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	ENOMEM
water	13:23	0:0	7	ENOMEM
water	14:4	0:0	2	ret
op	14:8	0:0	2	=
call	14:10	14:73	2	thread_init_internal
arg	14:31	14:54	3	graph->internal->thread
water	14:31	0:0	4	graph
op	14:36	0:0	4	->
water	14:38	0:0	4	internal
op	14:46	0:0	4	->
water	14:48	0:0	4	thread
arg	14:56	14:73	3	graph->nb_threads
water	14:56	0:0	4	graph
op	14:61	0:0	4	->
water	14:63	0:0	4	nb_threads
water	14:74	0:0	2	;
if	15:4	20:4	2	(ret <= 1)
cond	15:8	15:15	3	ret <= 1
water	15:8	0:0	4	ret
op	15:12	0:0	4	<=
water	15:15	0:0	4	1
stmts	15:18	20:4	3	
water	15:18	0:0	4	{
call	16:8	16:41	4	av_freep
arg	16:17	16:41	5	&graph->internal->thread
op	16:17	0:0	6	&
water	16:18	0:0	6	graph
op	16:23	0:0	6	->
water	16:25	0:0	6	internal
op	16:33	0:0	6	->
water	16:35	0:0	6	thread
water	16:42	0:0	4	;
water	17:8	0:0	4	graph
op	17:13	0:0	4	->
water	17:15	0:0	4	thread_type
op	17:27	0:0	4	=
water	17:29	0:0	4	0
water	17:30	0:0	4	;
water	18:8	0:0	4	graph
op	18:13	0:0	4	->
water	18:15	0:0	4	nb_threads
op	18:27	0:0	4	=
water	18:29	0:0	4	1
water	18:30	0:0	4	;
return	19:8	19:34	4	(ret<0)?ret:0
water	19:15	0:0	5	(
water	19:16	0:0	5	ret
op	19:20	0:0	5	<
water	19:22	0:0	5	0
water	19:23	0:0	5	)
water	19:25	0:0	5	?
water	19:27	0:0	5	ret
water	19:31	0:0	5	:
water	19:33	0:0	5	0
water	20:4	0:0	4	}
water	21:4	0:0	2	graph
op	21:9	0:0	2	->
water	21:11	0:0	2	nb_threads
op	21:22	0:0	2	=
water	21:24	0:0	2	ret
water	21:27	0:0	2	;
water	22:4	0:0	2	graph
op	22:9	0:0	2	->
water	22:11	0:0	2	internal
op	22:19	0:0	2	->
water	22:21	0:0	2	thread_execute
op	22:36	0:0	2	=
water	22:38	0:0	2	thread_execute
water	22:52	0:0	2	;
return	23:4	23:12	2	0
water	23:11	0:0	3	0

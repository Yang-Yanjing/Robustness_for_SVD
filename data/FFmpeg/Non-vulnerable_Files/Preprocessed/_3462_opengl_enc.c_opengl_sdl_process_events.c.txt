func	1:0	39:0	0	static int	opengl_sdl_process_events
params	1:36	0:0	1	
param	1:37	1:55	2	AVFormatContext *	h
stmnts	0:0	38:12	1	
decl	3:4	3:11	2	int	ret
decl	4:4	4:40	2	OpenGLContext	*opengl
op	4:26	0:0	2	=
water	4:28	0:0	2	h
op	4:29	0:0	2	->
water	4:31	0:0	2	priv_data
decl	5:4	5:19	2	SDL_Event	event
call	6:4	6:19	2	SDL_PumpEvents
water	6:20	0:0	2	;
while	7:4	37:4	2	(SDL_PeepEvents (& event ,1 ,SDL_GETEVENT ,SDL_ALLEVENTS ) > 0)
cond	7:11	7:68	3	SDL_PeepEvents (& event ,1 ,SDL_GETEVENT ,SDL_ALLEVENTS ) > 0
call	7:11	7:64	4	SDL_PeepEvents
arg	7:26	7:32	5	&event
op	7:26	0:0	6	&
water	7:27	0:0	6	event
arg	7:34	7:35	5	1
water	7:34	0:0	6	1
arg	7:37	7:49	5	SDL_GETEVENT
water	7:37	0:0	6	SDL_GETEVENT
arg	7:51	7:64	5	SDL_ALLEVENTS
water	7:51	0:0	6	SDL_ALLEVENTS
op	7:66	0:0	4	>
water	7:68	0:0	4	0
stmts	7:71	37:4	3	
water	7:71	0:0	4	{
switch	8:8	36:8	4	(event . type)
cond	8:16	8:22	5	event . type
water	8:16	0:0	6	event
op	8:21	0:0	6	.
water	8:22	0:0	6	type
stmts	8:28	36:8	5	
water	8:28	0:0	6	{
label	9:8	9:21	6	case SDL_QUIT :
return	10:12	10:31	6	AVERROR(EIO)
call	10:19	10:30	7	AVERROR
arg	10:27	10:30	8	EIO
water	10:27	0:0	9	EIO
label	11:8	11:24	6	case SDL_KEYDOWN :
switch	12:12	16:12	6	(event . key . keysym . sym)
cond	12:20	12:37	7	event . key . keysym . sym
water	12:20	0:0	8	event
op	12:25	0:0	8	.
water	12:26	0:0	8	key
op	12:29	0:0	8	.
water	12:30	0:0	8	keysym
op	12:36	0:0	8	.
water	12:37	0:0	8	sym
stmts	12:42	16:12	7	
water	12:42	0:0	8	{
label	13:12	13:28	8	case SDLK_ESCAPE :
label	14:12	14:23	8	case SDLK_q :
return	15:16	15:35	8	AVERROR(EIO)
call	15:23	15:34	9	AVERROR
arg	15:31	15:34	10	EIO
water	15:31	0:0	11	EIO
water	16:12	0:0	8	}
return	17:12	17:20	6	0
water	17:19	0:0	7	0
label	18:8	18:28	6	case SDL_VIDEORESIZE :
water	18:30	0:0	6	{
decl	19:12	19:28	6	char	buffer[100]
decl	20:12	20:22	6	int	reinit
decl	21:12	21:32	6	AVDeviceRect	message
call	23:12	23:54	6	SDL_VideoDriverName
arg	23:32	23:38	7	buffer
water	23:32	0:0	8	buffer
arg	23:40	23:54	7	sizeof(buffer)
op	23:40	0:0	8	sizeof
water	23:46	0:0	8	(
water	23:47	0:0	8	buffer
water	23:53	0:0	8	)
water	23:55	0:0	6	;
water	24:12	0:0	6	reinit
op	24:19	0:0	6	=
op	24:21	0:0	6	!
call	24:22	24:69	6	av_strncasecmp
arg	24:37	24:43	7	buffer
water	24:37	0:0	8	buffer
arg	24:45	24:53	7	"quartz"
water	24:45	0:0	8	"quartz"
arg	24:55	24:69	7	sizeof(buffer)
op	24:55	0:0	8	sizeof
water	24:61	0:0	8	(
water	24:62	0:0	8	buffer
water	24:68	0:0	8	)
water	24:70	0:0	6	;
if	25:12	27:12	6	(reinit)
cond	25:16	25:16	7	reinit
water	25:16	0:0	8	reinit
stmts	25:24	27:12	7	
water	25:24	0:0	8	{
call	26:16	26:44	8	opengl_deinit_context
arg	26:38	26:44	9	opengl
water	26:38	0:0	10	opengl
water	26:45	0:0	8	;
water	27:12	0:0	8	}
if	28:12	29:26	6	(( ret =opengl_sdl_recreate_window (opengl ,event . resize . w ,event . resize . h ) ) < 0)
cond	28:16	28:93	7	( ret =opengl_sdl_recreate_window (opengl ,event . resize . w ,event . resize . h ) ) < 0
water	28:16	0:0	8	(
water	28:17	0:0	8	ret
op	28:21	0:0	8	=
call	28:23	28:88	8	opengl_sdl_recreate_window
arg	28:50	28:56	9	opengl
water	28:50	0:0	10	opengl
arg	28:58	28:72	9	event.resize.w
water	28:58	0:0	10	event
op	28:63	0:0	10	.
water	28:64	0:0	10	resize
op	28:70	0:0	10	.
water	28:71	0:0	10	w
arg	28:74	28:88	9	event.resize.h
water	28:74	0:0	10	event
op	28:79	0:0	10	.
water	28:80	0:0	10	resize
op	28:86	0:0	10	.
water	28:87	0:0	10	h
water	28:89	0:0	8	)
op	28:91	0:0	8	<
water	28:93	0:0	8	0
stmts	29:16	29:26	7	
return	29:16	29:26	8	ret
water	29:23	0:0	9	ret
if	30:12	31:26	6	(reinit && ( ret =opengl_init_context (opengl ) ) < 0)
cond	30:16	30:64	7	reinit && ( ret =opengl_init_context (opengl ) ) < 0
water	30:16	0:0	8	reinit
op	30:23	0:0	8	&&
water	30:26	0:0	8	(
water	30:27	0:0	8	ret
op	30:31	0:0	8	=
call	30:33	30:59	8	opengl_init_context
arg	30:53	30:59	9	opengl
water	30:53	0:0	10	opengl
water	30:60	0:0	8	)
op	30:62	0:0	8	<
water	30:64	0:0	8	0
stmts	31:16	31:26	7	
return	31:16	31:26	8	ret
water	31:23	0:0	9	ret
water	32:12	0:0	6	message
op	32:19	0:0	6	.
water	32:20	0:0	6	width
op	32:26	0:0	6	=
water	32:28	0:0	6	opengl
op	32:34	0:0	6	->
water	32:36	0:0	6	surface
op	32:43	0:0	6	->
water	32:45	0:0	6	w
water	32:46	0:0	6	;
water	33:12	0:0	6	message
op	33:19	0:0	6	.
water	33:20	0:0	6	height
op	33:27	0:0	6	=
water	33:29	0:0	6	opengl
op	33:35	0:0	6	->
water	33:37	0:0	6	surface
op	33:44	0:0	6	->
water	33:46	0:0	6	h
water	33:47	0:0	6	;
return	34:12	34:103	6	opengl_control_message(h,AV_APP_TO_DEV_WINDOW_SIZE,&message,sizeof(AVDeviceRect))
call	34:19	34:102	7	opengl_control_message
arg	34:42	34:43	8	h
water	34:42	0:0	9	h
arg	34:45	34:70	8	AV_APP_TO_DEV_WINDOW_SIZE
water	34:45	0:0	9	AV_APP_TO_DEV_WINDOW_SIZE
arg	34:72	34:80	8	&message
op	34:72	0:0	9	&
water	34:73	0:0	9	message
arg	34:82	34:102	8	sizeof(AVDeviceRect)
op	34:82	0:0	9	sizeof
water	34:88	0:0	9	(
water	34:89	0:0	9	AVDeviceRect
water	34:101	0:0	9	)
water	35:12	0:0	6	}
water	36:8	0:0	6	}
water	37:4	0:0	4	}
return	38:4	38:12	2	0
water	38:11	0:0	3	0

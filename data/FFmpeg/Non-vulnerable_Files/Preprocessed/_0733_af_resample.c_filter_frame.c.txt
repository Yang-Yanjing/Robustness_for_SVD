func	1:0	72:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	71:14	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
decl	4:4	4:37	2	ResampleContext	*s
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:11	2	int	ret
if	7:4	66:4	2	(s -> avr)
cond	7:8	7:11	3	s -> avr
water	7:8	0:0	4	s
op	7:9	0:0	4	->
water	7:11	0:0	4	avr
stmts	7:16	66:4	3	
water	7:16	0:0	4	{
decl	8:8	8:20	4	AVFrame	*out
decl	9:8	9:29	4	int	delay
water	9:17	0:0	4	,
decl	9:8	9:29	4	int	nb_samples
water	11:8	0:0	4	delay
op	11:19	0:0	4	=
call	11:21	11:48	4	avresample_get_delay
arg	11:42	11:48	5	s->avr
water	11:42	0:0	6	s
op	11:43	0:0	6	->
water	11:45	0:0	6	avr
water	11:49	0:0	4	;
water	12:8	0:0	4	nb_samples
op	12:19	0:0	4	=
call	12:21	12:70	4	avresample_get_out_samples
arg	12:48	12:54	5	s->avr
water	12:48	0:0	6	s
op	12:49	0:0	6	->
water	12:51	0:0	6	avr
arg	12:56	12:70	5	in->nb_samples
water	12:56	0:0	6	in
op	12:58	0:0	6	->
water	12:60	0:0	6	nb_samples
water	12:71	0:0	4	;
water	13:8	0:0	4	out
op	13:12	0:0	4	=
call	13:14	13:53	4	ff_get_audio_buffer
arg	13:34	13:41	5	outlink
water	13:34	0:0	6	outlink
arg	13:43	13:53	5	nb_samples
water	13:43	0:0	6	nb_samples
water	13:54	0:0	4	;
if	14:8	17:8	4	(! out)
cond	14:12	14:13	5	! out
op	14:12	0:0	6	!
water	14:13	0:0	6	out
stmts	14:18	17:8	5	
water	14:18	0:0	6	{
water	15:12	0:0	6	ret
op	15:16	0:0	6	=
call	15:18	15:32	6	AVERROR
arg	15:26	15:32	7	ENOMEM
water	15:26	0:0	8	ENOMEM
water	15:33	0:0	6	;
goto	16:12	16:21	6	fail
water	16:17	0:0	7	fail
water	17:8	0:0	6	}
water	18:8	0:0	4	ret
op	18:12	0:0	4	=
call	18:14	20:47	4	avresample_convert
arg	18:33	18:39	5	s->avr
water	18:33	0:0	6	s
op	18:34	0:0	6	->
water	18:36	0:0	6	avr
arg	18:41	18:59	5	out->extended_data
water	18:41	0:0	6	out
op	18:44	0:0	6	->
water	18:46	0:0	6	extended_data
arg	18:61	18:77	5	out->linesize[0]
water	18:61	0:0	6	out
op	18:64	0:0	6	->
water	18:66	0:0	6	linesize
op	18:74	0:0	6	[
water	18:75	0:0	6	0
op	18:76	0:0	6	]
arg	19:33	19:43	5	nb_samples
water	19:33	0:0	6	nb_samples
arg	19:45	19:62	5	in->extended_data
water	19:45	0:0	6	in
op	19:47	0:0	6	->
water	19:49	0:0	6	extended_data
arg	19:64	19:79	5	in->linesize[0]
water	19:64	0:0	6	in
op	19:66	0:0	6	->
water	19:68	0:0	6	linesize
op	19:76	0:0	6	[
water	19:77	0:0	6	0
op	19:78	0:0	6	]
arg	20:33	20:47	5	in->nb_samples
water	20:33	0:0	6	in
op	20:35	0:0	6	->
water	20:37	0:0	6	nb_samples
water	20:48	0:0	4	;
if	21:8	25:8	4	(ret <= 0)
cond	21:12	21:19	5	ret <= 0
water	21:12	0:0	6	ret
op	21:16	0:0	6	<=
water	21:19	0:0	6	0
stmts	21:22	25:8	5	
water	21:22	0:0	6	{
call	22:12	22:30	6	av_frame_free
arg	22:26	22:30	7	&out
op	22:26	0:0	8	&
water	22:27	0:0	8	out
water	22:31	0:0	6	;
if	23:12	24:25	6	(ret < 0)
cond	23:16	23:22	7	ret < 0
water	23:16	0:0	8	ret
op	23:20	0:0	8	<
water	23:22	0:0	8	0
stmts	24:16	24:25	7	
goto	24:16	24:25	8	fail
water	24:21	0:0	9	fail
water	25:8	0:0	6	}
call	26:8	26:48	4	av_assert0
arg	26:19	26:48	5	!avresample_available(s->avr)
op	26:19	0:0	6	!
call	26:20	26:47	6	avresample_available
arg	26:41	26:47	7	s->avr
water	26:41	0:0	8	s
op	26:42	0:0	8	->
water	26:44	0:0	8	avr
water	26:49	0:0	4	;
if	27:8	35:8	4	(s -> resampling && s -> next_pts == AV_NOPTS_VALUE)
cond	27:12	27:44	5	s -> resampling && s -> next_pts == AV_NOPTS_VALUE
water	27:12	0:0	6	s
op	27:13	0:0	6	->
water	27:15	0:0	6	resampling
op	27:26	0:0	6	&&
water	27:29	0:0	6	s
op	27:30	0:0	6	->
water	27:32	0:0	6	next_pts
op	27:41	0:0	6	==
water	27:44	0:0	6	AV_NOPTS_VALUE
stmts	27:60	35:8	5	
water	27:60	0:0	6	{
if	28:12	32:12	6	(in -> pts == AV_NOPTS_VALUE)
cond	28:16	28:27	7	in -> pts == AV_NOPTS_VALUE
water	28:16	0:0	8	in
op	28:18	0:0	8	->
water	28:20	0:0	8	pts
op	28:24	0:0	8	==
water	28:27	0:0	8	AV_NOPTS_VALUE
stmts	28:43	32:12	7	
water	28:43	0:0	8	{
call	29:16	30:38	8	av_log
arg	29:23	29:26	9	ctx
water	29:23	0:0	10	ctx
arg	29:28	29:42	9	AV_LOG_WARNING
water	29:28	0:0	10	AV_LOG_WARNING
arg	29:44	30:38	9	"First timestamp is missing, ""assuming 0.\n"
water	29:44	0:0	10	"First timestamp is missing, "
water	30:23	0:0	10	"assuming 0.\n"
water	30:39	0:0	8	;
water	31:16	0:0	8	s
op	31:17	0:0	8	->
water	31:19	0:0	8	next_pts
op	31:28	0:0	8	=
water	31:30	0:0	8	0
water	31:31	0:0	8	;
water	32:12	0:0	8	}
else	32:14	34:62	6
stmts	33:16	34:62	7	
water	33:16	0:0	8	s
op	33:17	0:0	8	->
water	33:19	0:0	8	next_pts
op	33:28	0:0	8	=
call	33:30	34:61	8	av_rescale_q
arg	33:43	33:50	9	in->pts
water	33:43	0:0	10	in
op	33:45	0:0	10	->
water	33:47	0:0	10	pts
arg	33:52	33:69	9	inlink->time_base
water	33:52	0:0	10	inlink
op	33:58	0:0	10	->
water	33:60	0:0	10	time_base
arg	34:43	34:61	9	outlink->time_base
water	34:43	0:0	10	outlink
op	34:50	0:0	10	->
water	34:52	0:0	10	time_base
water	34:62	0:0	8	;
water	35:8	0:0	6	}
if	36:8	63:8	4	(ret > 0)
cond	36:12	36:18	5	ret > 0
water	36:12	0:0	6	ret
op	36:16	0:0	6	>
water	36:18	0:0	6	0
stmts	36:21	63:8	5	
water	36:21	0:0	6	{
water	37:12	0:0	6	out
op	37:15	0:0	6	->
water	37:17	0:0	6	nb_samples
op	37:28	0:0	6	=
water	37:30	0:0	6	ret
water	37:33	0:0	6	;
water	38:12	0:0	6	ret
op	38:16	0:0	6	=
call	38:18	38:45	6	av_frame_copy_props
arg	38:38	38:41	7	out
water	38:38	0:0	8	out
arg	38:43	38:45	7	in
water	38:43	0:0	8	in
water	38:46	0:0	6	;
if	39:12	42:12	6	(ret < 0)
cond	39:16	39:22	7	ret < 0
water	39:16	0:0	8	ret
op	39:20	0:0	8	<
water	39:22	0:0	8	0
stmts	39:25	42:12	7	
water	39:25	0:0	8	{
call	40:16	40:34	8	av_frame_free
arg	40:30	40:34	9	&out
op	40:30	0:0	10	&
water	40:31	0:0	10	out
water	40:35	0:0	8	;
goto	41:16	41:25	8	fail
water	41:21	0:0	9	fail
water	42:12	0:0	8	}
if	43:12	59:12	6	(s -> resampling)
cond	43:16	43:19	7	s -> resampling
water	43:16	0:0	8	s
op	43:17	0:0	8	->
water	43:19	0:0	8	resampling
stmts	43:31	59:12	7	
water	43:31	0:0	8	{
water	44:16	0:0	8	out
op	44:19	0:0	8	->
water	44:21	0:0	8	sample_rate
op	44:33	0:0	8	=
water	44:35	0:0	8	outlink
op	44:42	0:0	8	->
water	44:44	0:0	8	sample_rate
water	44:55	0:0	8	;
if	50:16	55:16	8	(in -> pts != AV_NOPTS_VALUE && in -> pts != s -> next_in_pts)
cond	50:20	50:63	9	in -> pts != AV_NOPTS_VALUE && in -> pts != s -> next_in_pts
water	50:20	0:0	10	in
op	50:22	0:0	10	->
water	50:24	0:0	10	pts
op	50:28	0:0	10	!=
water	50:31	0:0	10	AV_NOPTS_VALUE
op	50:46	0:0	10	&&
water	50:49	0:0	10	in
op	50:51	0:0	10	->
water	50:53	0:0	10	pts
op	50:57	0:0	10	!=
water	50:60	0:0	10	s
op	50:61	0:0	10	->
water	50:63	0:0	10	next_in_pts
stmts	50:76	55:16	9	
water	50:76	0:0	10	{
water	51:20	0:0	10	out
op	51:23	0:0	10	->
water	51:25	0:0	10	pts
op	51:29	0:0	10	=
call	51:31	52:66	10	av_rescale_q
arg	51:44	51:51	11	in->pts
water	51:44	0:0	12	in
op	51:46	0:0	12	->
water	51:48	0:0	12	pts
arg	51:53	51:70	11	inlink->time_base
water	51:53	0:0	12	inlink
op	51:59	0:0	12	->
water	51:61	0:0	12	time_base
arg	52:48	52:66	11	outlink->time_base
water	52:48	0:0	12	outlink
op	52:55	0:0	12	->
water	52:57	0:0	12	time_base
op	52:68	0:0	10	-
call	53:35	54:65	10	av_rescale
arg	53:46	53:51	11	delay
water	53:46	0:0	12	delay
arg	53:53	53:73	11	outlink->sample_rate
water	53:53	0:0	12	outlink
op	53:60	0:0	12	->
water	53:62	0:0	12	sample_rate
arg	54:46	54:65	11	inlink->sample_rate
water	54:46	0:0	12	inlink
op	54:52	0:0	12	->
water	54:54	0:0	12	sample_rate
water	54:66	0:0	10	;
water	55:16	0:0	10	}
else	55:18	56:42	8
stmts	56:20	56:42	9	
water	56:20	0:0	10	out
op	56:23	0:0	10	->
water	56:25	0:0	10	pts
op	56:29	0:0	10	=
water	56:31	0:0	10	s
op	56:32	0:0	10	->
water	56:34	0:0	10	next_pts
water	56:42	0:0	10	;
water	57:16	0:0	8	s
op	57:17	0:0	8	->
water	57:19	0:0	8	next_pts
op	57:28	0:0	8	=
water	57:30	0:0	8	out
op	57:33	0:0	8	->
water	57:35	0:0	8	pts
op	57:39	0:0	8	+
water	57:41	0:0	8	out
op	57:44	0:0	8	->
water	57:46	0:0	8	nb_samples
water	57:56	0:0	8	;
water	58:16	0:0	8	s
op	58:17	0:0	8	->
water	58:19	0:0	8	next_in_pts
op	58:31	0:0	8	=
water	58:33	0:0	8	in
op	58:35	0:0	8	->
water	58:37	0:0	8	pts
op	58:41	0:0	8	+
water	58:43	0:0	8	in
op	58:45	0:0	8	->
water	58:47	0:0	8	nb_samples
water	58:57	0:0	8	;
water	59:12	0:0	8	}
else	59:14	60:34	6
stmts	60:16	60:34	7	
water	60:16	0:0	8	out
op	60:19	0:0	8	->
water	60:21	0:0	8	pts
op	60:25	0:0	8	=
water	60:27	0:0	8	in
op	60:29	0:0	8	->
water	60:31	0:0	8	pts
water	60:34	0:0	8	;
water	61:12	0:0	6	ret
op	61:16	0:0	6	=
call	61:18	61:46	6	ff_filter_frame
arg	61:34	61:41	7	outlink
water	61:34	0:0	8	outlink
arg	61:43	61:46	7	out
water	61:43	0:0	8	out
water	61:47	0:0	6	;
water	62:12	0:0	6	s
op	62:13	0:0	6	->
water	62:15	0:0	6	got_output
op	62:26	0:0	6	=
water	62:28	0:0	6	1
water	62:29	0:0	6	;
water	63:8	0:0	6	}
label	64:0	64:4	4	fail :
call	65:8	65:25	4	av_frame_free
arg	65:22	65:25	5	&in
op	65:22	0:0	6	&
water	65:23	0:0	6	in
water	65:26	0:0	4	;
water	66:4	0:0	4	}
else	66:6	70:4	2
stmts	66:11	70:4	3	
water	66:11	0:0	4	{
water	67:8	0:0	4	in
op	67:10	0:0	4	->
water	67:12	0:0	4	format
op	67:19	0:0	4	=
water	67:21	0:0	4	outlink
op	67:28	0:0	4	->
water	67:30	0:0	4	format
water	67:36	0:0	4	;
water	68:8	0:0	4	ret
op	68:12	0:0	4	=
call	68:14	68:41	4	ff_filter_frame
arg	68:30	68:37	5	outlink
water	68:30	0:0	6	outlink
arg	68:39	68:41	5	in
water	68:39	0:0	6	in
water	68:42	0:0	4	;
water	69:8	0:0	4	s
op	69:9	0:0	4	->
water	69:11	0:0	4	got_output
op	69:22	0:0	4	=
water	69:24	0:0	4	1
water	69:25	0:0	4	;
water	70:4	0:0	4	}
return	71:4	71:14	2	ret
water	71:11	0:0	3	ret

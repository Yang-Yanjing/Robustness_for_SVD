func	1:15	38:0	0	int	set_channel_info
params	1:35	0:0	1	
param	1:36	1:55	2	AC3EncodeContext *	s
param	1:57	1:69	2	int	channels
param	2:36	2:60	2	uint64_t *	channel_layout
stmnts	0:0	37:12	1	
decl	4:4	4:17	2	int	ch_layout
if	5:4	6:30	2	(channels < 1 || channels > AC3_MAX_CHANNELS)
cond	5:8	5:35	3	channels < 1 || channels > AC3_MAX_CHANNELS
water	5:8	0:0	4	channels
op	5:17	0:0	4	<
water	5:19	0:0	4	1
op	5:21	0:0	4	||
water	5:24	0:0	4	channels
op	5:33	0:0	4	>
water	5:35	0:0	4	AC3_MAX_CHANNELS
stmts	6:8	6:30	3	
return	6:8	6:30	4	AVERROR(EINVAL)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	EINVAL
water	6:23	0:0	7	EINVAL
if	7:4	8:30	2	(* channel_layout > 0 x7FF)
cond	7:8	7:27	3	* channel_layout > 0 x7FF
op	7:8	0:0	4	*
water	7:9	0:0	4	channel_layout
op	7:24	0:0	4	>
water	7:26	0:0	4	0
water	7:27	0:0	4	x7FF
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	2	ch_layout
op	9:14	0:0	2	=
op	9:16	0:0	2	*
water	9:17	0:0	2	channel_layout
water	9:31	0:0	2	;
if	10:4	11:59	2	(! ch_layout)
cond	10:8	10:9	3	! ch_layout
op	10:8	0:0	4	!
water	10:9	0:0	4	ch_layout
stmts	11:8	11:59	3	
water	11:8	0:0	4	ch_layout
op	11:18	0:0	4	=
call	11:20	11:58	4	av_get_default_channel_layout
arg	11:50	11:58	5	channels
water	11:50	0:0	6	channels
water	11:59	0:0	4	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	lfe_on
op	12:20	0:0	2	=
op	12:22	0:0	2	!
op	12:23	0:0	2	!
water	12:24	0:0	2	(
water	12:25	0:0	2	ch_layout
op	12:35	0:0	2	&
water	12:37	0:0	2	AV_CH_LOW_FREQUENCY
water	12:56	0:0	2	)
water	12:57	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	channels
op	13:20	0:0	2	=
water	13:22	0:0	2	channels
water	13:30	0:0	2	;
water	14:4	0:0	2	s
op	14:5	0:0	2	->
water	14:7	0:0	2	fbw_channels
op	14:20	0:0	2	=
water	14:22	0:0	2	channels
op	14:31	0:0	2	-
water	14:33	0:0	2	s
op	14:34	0:0	2	->
water	14:36	0:0	2	lfe_on
water	14:42	0:0	2	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	lfe_channel
op	15:20	0:0	2	=
water	15:22	0:0	2	s
op	15:23	0:0	2	->
water	15:25	0:0	2	lfe_on
water	15:32	0:0	2	?
water	15:34	0:0	2	s
op	15:35	0:0	2	->
water	15:37	0:0	2	fbw_channels
op	15:50	0:0	2	+
water	15:52	0:0	2	1
water	15:54	0:0	2	:
op	15:56	0:0	2	-
water	15:57	0:0	2	1
water	15:58	0:0	2	;
if	16:4	17:40	2	(s -> lfe_on)
cond	16:8	16:11	3	s -> lfe_on
water	16:8	0:0	4	s
op	16:9	0:0	4	->
water	16:11	0:0	4	lfe_on
stmts	17:8	17:40	3	
water	17:8	0:0	4	ch_layout
op	17:18	0:0	4	-=
water	17:21	0:0	4	AV_CH_LOW_FREQUENCY
water	17:40	0:0	4	;
switch	18:4	30:4	2	(ch_layout)
cond	18:12	18:12	3	ch_layout
water	18:12	0:0	4	ch_layout
stmts	18:23	30:4	3	
water	18:23	0:0	4	{
label	19:4	19:26	4	case AV_CH_LAYOUT_MONO :
water	19:38	0:0	4	s
op	19:39	0:0	4	->
water	19:41	0:0	4	channel_mode
op	19:54	0:0	4	=
water	19:56	0:0	4	AC3_CHMODE_MONO
water	19:71	0:0	4	;
break	19:75	19:80	4	
label	20:4	20:28	4	case AV_CH_LAYOUT_STEREO :
water	20:38	0:0	4	s
op	20:39	0:0	4	->
water	20:41	0:0	4	channel_mode
op	20:54	0:0	4	=
water	20:56	0:0	4	AC3_CHMODE_STEREO
water	20:73	0:0	4	;
break	20:75	20:80	4	
label	21:4	21:30	4	case AV_CH_LAYOUT_SURROUND :
water	21:38	0:0	4	s
op	21:39	0:0	4	->
water	21:41	0:0	4	channel_mode
op	21:54	0:0	4	=
water	21:56	0:0	4	AC3_CHMODE_3F
water	21:69	0:0	4	;
break	21:75	21:80	4	
label	22:4	22:25	4	case AV_CH_LAYOUT_2_1 :
water	22:38	0:0	4	s
op	22:39	0:0	4	->
water	22:41	0:0	4	channel_mode
op	22:54	0:0	4	=
water	22:56	0:0	4	AC3_CHMODE_2F1R
water	22:71	0:0	4	;
break	22:75	22:80	4	
label	23:4	23:29	4	case AV_CH_LAYOUT_4POINT0 :
water	23:38	0:0	4	s
op	23:39	0:0	4	->
water	23:41	0:0	4	channel_mode
op	23:54	0:0	4	=
water	23:56	0:0	4	AC3_CHMODE_3F1R
water	23:71	0:0	4	;
break	23:75	23:80	4	
label	24:4	24:26	4	case AV_CH_LAYOUT_QUAD :
label	25:4	25:25	4	case AV_CH_LAYOUT_2_2 :
water	25:38	0:0	4	s
op	25:39	0:0	4	->
water	25:41	0:0	4	channel_mode
op	25:54	0:0	4	=
water	25:56	0:0	4	AC3_CHMODE_2F2R
water	25:71	0:0	4	;
break	25:75	25:80	4	
label	26:4	26:29	4	case AV_CH_LAYOUT_5POINT0 :
label	27:4	27:34	4	case AV_CH_LAYOUT_5POINT0_BACK :
water	27:38	0:0	4	s
op	27:39	0:0	4	->
water	27:41	0:0	4	channel_mode
op	27:54	0:0	4	=
water	27:56	0:0	4	AC3_CHMODE_3F2R
water	27:71	0:0	4	;
break	27:75	27:80	4	
label	28:4	28:11	4	default :
return	29:8	29:30	4	AVERROR(EINVAL)
call	29:15	29:29	5	AVERROR
arg	29:23	29:29	6	EINVAL
water	29:23	0:0	7	EINVAL
water	30:4	0:0	4	}
water	31:4	0:0	2	s
op	31:5	0:0	2	->
water	31:7	0:0	2	has_center
op	31:20	0:0	2	=
water	31:22	0:0	2	(
water	31:23	0:0	2	s
op	31:24	0:0	2	->
water	31:26	0:0	2	channel_mode
op	31:39	0:0	2	&
water	31:41	0:0	2	0
water	31:42	0:0	2	x01
water	31:45	0:0	2	)
op	31:47	0:0	2	&&
water	31:50	0:0	2	s
op	31:51	0:0	2	->
water	31:53	0:0	2	channel_mode
op	31:66	0:0	2	!=
water	31:69	0:0	2	AC3_CHMODE_MONO
water	31:84	0:0	2	;
water	32:4	0:0	2	s
op	32:5	0:0	2	->
water	32:7	0:0	2	has_surround
op	32:20	0:0	2	=
water	32:23	0:0	2	s
op	32:24	0:0	2	->
water	32:26	0:0	2	channel_mode
op	32:39	0:0	2	&
water	32:41	0:0	2	0
water	32:42	0:0	2	x04
water	32:45	0:0	2	;
water	33:4	0:0	2	s
op	33:5	0:0	2	->
water	33:7	0:0	2	channel_map
op	33:20	0:0	2	=
water	33:22	0:0	2	ff_ac3_enc_channel_map
op	33:44	0:0	2	[
water	33:45	0:0	2	s
op	33:46	0:0	2	->
water	33:48	0:0	2	channel_mode
op	33:60	0:0	2	]
op	33:61	0:0	2	[
water	33:62	0:0	2	s
op	33:63	0:0	2	->
water	33:65	0:0	2	lfe_on
op	33:71	0:0	2	]
water	33:72	0:0	2	;
op	34:4	0:0	2	*
water	34:5	0:0	2	channel_layout
op	34:20	0:0	2	=
water	34:22	0:0	2	ch_layout
water	34:31	0:0	2	;
if	35:4	36:46	2	(s -> lfe_on)
cond	35:8	35:11	3	s -> lfe_on
water	35:8	0:0	4	s
op	35:9	0:0	4	->
water	35:11	0:0	4	lfe_on
stmts	36:8	36:46	3	
op	36:8	0:0	4	*
water	36:9	0:0	4	channel_layout
op	36:24	0:0	4	|=
water	36:27	0:0	4	AV_CH_LOW_FREQUENCY
water	36:46	0:0	4	;
return	37:4	37:12	2	0
water	37:11	0:0	3	0

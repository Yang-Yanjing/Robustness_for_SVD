func	1:0	34:0	0	static int	config_output
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	33:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:42	2	AVFilterLink	*inlink0
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	inputs
op	4:39	0:0	2	[
water	4:40	0:0	2	0
op	4:41	0:0	2	]
decl	5:4	5:9	2	int	i
if	6:4	31:4	2	(outlink -> type == AVMEDIA_TYPE_VIDEO)
cond	6:8	6:25	3	outlink -> type == AVMEDIA_TYPE_VIDEO
water	6:8	0:0	4	outlink
op	6:15	0:0	4	->
water	6:17	0:0	4	type
op	6:22	0:0	4	==
water	6:25	0:0	4	AVMEDIA_TYPE_VIDEO
stmts	6:45	31:4	3	
water	6:45	0:0	4	{
water	7:8	0:0	4	outlink
op	7:15	0:0	4	->
water	7:17	0:0	4	time_base
op	7:37	0:0	4	=
water	7:39	0:0	4	AV_TIME_BASE_Q
water	7:53	0:0	4	;
water	8:8	0:0	4	outlink
op	8:15	0:0	4	->
water	8:17	0:0	4	w
op	8:37	0:0	4	=
water	8:39	0:0	4	inlink0
op	8:46	0:0	4	->
water	8:48	0:0	4	w
water	8:49	0:0	4	;
water	9:8	0:0	4	outlink
op	9:15	0:0	4	->
water	9:17	0:0	4	h
op	9:37	0:0	4	=
water	9:39	0:0	4	inlink0
op	9:46	0:0	4	->
water	9:48	0:0	4	h
water	9:49	0:0	4	;
water	10:8	0:0	4	outlink
op	10:15	0:0	4	->
water	10:17	0:0	4	sample_aspect_ratio
op	10:37	0:0	4	=
water	10:39	0:0	4	inlink0
op	10:46	0:0	4	->
water	10:48	0:0	4	sample_aspect_ratio
water	10:67	0:0	4	;
water	11:8	0:0	4	outlink
op	11:15	0:0	4	->
water	11:17	0:0	4	format
op	11:37	0:0	4	=
water	11:39	0:0	4	inlink0
op	11:46	0:0	4	->
water	11:48	0:0	4	format
water	11:54	0:0	4	;
water	12:8	0:0	4	outlink
op	12:15	0:0	4	->
water	12:17	0:0	4	frame_rate
op	12:28	0:0	4	=
water	12:30	0:0	4	(
water	12:31	0:0	4	AVRational
water	12:41	0:0	4	)
water	12:43	0:0	4	{
water	12:44	0:0	4	1
water	12:45	0:0	4	,
water	12:47	0:0	4	0
water	12:48	0:0	4	}
water	12:49	0:0	4	;
for	13:8	30:8	4	(i = 1 ;i < ctx -> nb_inputs;i ++)
forinit	13:13	13:18	5	i = 1 ;
water	13:13	0:0	6	i
op	13:15	0:0	6	=
water	13:17	0:0	6	1
water	13:18	0:0	6	;
cond	13:20	13:29	5	i < ctx -> nb_inputs
water	13:20	0:0	6	i
op	13:22	0:0	6	<
water	13:24	0:0	6	ctx
op	13:27	0:0	6	->
water	13:29	0:0	6	nb_inputs
forexpr	13:40	13:41	5	i ++
water	13:40	0:0	6	i
op	13:41	0:0	6	++
stmts	13:45	30:8	5	
water	13:45	0:0	6	{
decl	14:12	14:49	6	AVFilterLink	*inlink
op	14:33	0:0	6	=
water	14:35	0:0	6	ctx
op	14:38	0:0	6	->
water	14:40	0:0	6	inputs
op	14:46	0:0	6	[
water	14:47	0:0	6	i
op	14:48	0:0	6	]
if	15:12	29:12	6	(outlink -> w != inlink -> w || outlink -> h != inlink -> h || outlink -> sample_aspect_ratio . num != inlink -> sample_aspect_ratio . num || outlink -> sample_aspect_ratio . den != inlink -> sample_aspect_ratio . den)
cond	15:16	18:80	7	outlink -> w != inlink -> w || outlink -> h != inlink -> h || outlink -> sample_aspect_ratio . num != inlink -> sample_aspect_ratio . num || outlink -> sample_aspect_ratio . den != inlink -> sample_aspect_ratio . den
water	15:16	0:0	8	outlink
op	15:23	0:0	8	->
water	15:25	0:0	8	w
op	15:49	0:0	8	!=
water	15:52	0:0	8	inlink
op	15:58	0:0	8	->
water	15:60	0:0	8	w
op	15:84	0:0	8	||
water	16:16	0:0	8	outlink
op	16:23	0:0	8	->
water	16:25	0:0	8	h
op	16:49	0:0	8	!=
water	16:52	0:0	8	inlink
op	16:58	0:0	8	->
water	16:60	0:0	8	h
op	16:84	0:0	8	||
water	17:16	0:0	8	outlink
op	17:23	0:0	8	->
water	17:25	0:0	8	sample_aspect_ratio
op	17:44	0:0	8	.
water	17:45	0:0	8	num
op	17:49	0:0	8	!=
water	17:52	0:0	8	inlink
op	17:58	0:0	8	->
water	17:60	0:0	8	sample_aspect_ratio
op	17:79	0:0	8	.
water	17:80	0:0	8	num
op	17:84	0:0	8	||
water	18:16	0:0	8	outlink
op	18:23	0:0	8	->
water	18:25	0:0	8	sample_aspect_ratio
op	18:44	0:0	8	.
water	18:45	0:0	8	den
op	18:49	0:0	8	!=
water	18:52	0:0	8	inlink
op	18:58	0:0	8	->
water	18:60	0:0	8	sample_aspect_ratio
op	18:79	0:0	8	.
water	18:80	0:0	8	den
stmts	18:85	29:12	7	
water	18:85	0:0	8	{
call	19:16	27:55	8	av_log
arg	19:23	19:26	9	ctx
water	19:23	0:0	10	ctx
arg	19:28	19:40	9	AV_LOG_ERROR
water	19:28	0:0	10	AV_LOG_ERROR
arg	19:42	21:68	9	"Parameters for input link %s ""(size %dx%d, SAR %d:%d) do not match the corresponding ""output link parameters (%dx%d, SAR %d:%d)\n"
water	19:42	0:0	10	"Parameters for input link %s "
water	20:23	0:0	10	"(size %dx%d, SAR %d:%d) do not match the corresponding "
water	21:23	0:0	10	"output link parameters (%dx%d, SAR %d:%d)\n"
arg	22:23	22:46	9	ctx->input_pads[i].name
water	22:23	0:0	10	ctx
op	22:26	0:0	10	->
water	22:28	0:0	10	input_pads
op	22:38	0:0	10	[
water	22:39	0:0	10	i
op	22:40	0:0	10	]
op	22:41	0:0	10	.
water	22:42	0:0	10	name
arg	22:48	22:57	9	inlink->w
water	22:48	0:0	10	inlink
op	22:54	0:0	10	->
water	22:56	0:0	10	w
arg	22:59	22:68	9	inlink->h
water	22:59	0:0	10	inlink
op	22:65	0:0	10	->
water	22:67	0:0	10	h
arg	23:23	23:54	9	inlink->sample_aspect_ratio.num
water	23:23	0:0	10	inlink
op	23:29	0:0	10	->
water	23:31	0:0	10	sample_aspect_ratio
op	23:50	0:0	10	.
water	23:51	0:0	10	num
arg	24:23	24:54	9	inlink->sample_aspect_ratio.den
water	24:23	0:0	10	inlink
op	24:29	0:0	10	->
water	24:31	0:0	10	sample_aspect_ratio
op	24:50	0:0	10	.
water	24:51	0:0	10	den
arg	25:23	25:33	9	outlink->w
water	25:23	0:0	10	outlink
op	25:30	0:0	10	->
water	25:32	0:0	10	w
arg	25:35	25:45	9	outlink->h
water	25:35	0:0	10	outlink
op	25:42	0:0	10	->
water	25:44	0:0	10	h
arg	26:23	26:55	9	outlink->sample_aspect_ratio.num
water	26:23	0:0	10	outlink
op	26:30	0:0	10	->
water	26:32	0:0	10	sample_aspect_ratio
op	26:51	0:0	10	.
water	26:52	0:0	10	num
arg	27:23	27:55	9	outlink->sample_aspect_ratio.den
water	27:23	0:0	10	outlink
op	27:30	0:0	10	->
water	27:32	0:0	10	sample_aspect_ratio
op	27:51	0:0	10	.
water	27:52	0:0	10	den
water	27:56	0:0	8	;
return	28:16	28:38	8	AVERROR(EINVAL)
call	28:23	28:37	9	AVERROR
arg	28:31	28:37	10	EINVAL
water	28:31	0:0	11	EINVAL
water	29:12	0:0	8	}
water	30:8	0:0	6	}
water	31:4	0:0	4	}
water	32:4	0:0	2	outlink
op	32:11	0:0	2	->
water	32:13	0:0	2	flags
op	32:19	0:0	2	|=
water	32:22	0:0	2	FF_LINK_FLAG_REQUEST_LOOP
water	32:47	0:0	2	;
return	33:4	33:12	2	0
water	33:11	0:0	3	0

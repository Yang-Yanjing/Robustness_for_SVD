func	1:0	33:0	0	static void	quantize_triangular_ns
params	1:34	0:0	1	
param	1:35	1:51	2	DitherContext *	c
param	1:53	1:71	2	DitherState *	state
param	2:35	2:47	2	int16_t *	dst
param	2:49	2:65	2	const float *	src
param	3:35	3:49	2	int	nb_samples
stmnts	0:0	32:4	1	
decl	5:4	5:12	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	j
decl	6:4	6:59	2	float	*dither
op	6:18	0:0	2	=
op	6:20	0:0	2	&
water	6:21	0:0	2	state
op	6:26	0:0	2	->
water	6:28	0:0	2	noise_buf
op	6:37	0:0	2	[
water	6:38	0:0	2	state
op	6:43	0:0	2	->
water	6:45	0:0	2	noise_buf_ptr
op	6:58	0:0	2	]
if	7:4	8:59	2	(state -> mute > c -> mute_reset_threshold)
cond	7:8	7:25	3	state -> mute > c -> mute_reset_threshold
water	7:8	0:0	4	state
op	7:13	0:0	4	->
water	7:15	0:0	4	mute
op	7:20	0:0	4	>
water	7:22	0:0	4	c
op	7:23	0:0	4	->
water	7:25	0:0	4	mute_reset_threshold
stmts	8:8	8:59	3	
call	8:8	8:58	4	memset
arg	8:15	8:30	5	state->dither_a
water	8:15	0:0	6	state
op	8:20	0:0	6	->
water	8:22	0:0	6	dither_a
arg	8:32	8:33	5	0
water	8:32	0:0	6	0
arg	8:35	8:58	5	sizeof(state->dither_a)
op	8:35	0:0	6	sizeof
water	8:41	0:0	6	(
water	8:42	0:0	6	state
op	8:47	0:0	6	->
water	8:49	0:0	6	dither_a
water	8:57	0:0	6	)
water	8:59	0:0	4	;
for	9:4	32:4	2	(i = 0 ;i < nb_samples;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:20	3	i < nb_samples
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	nb_samples
forexpr	9:32	9:33	3	i ++
water	9:32	0:0	4	i
op	9:33	0:0	4	++
stmts	9:37	32:4	3	
water	9:37	0:0	4	{
decl	10:8	10:21	4	float	err
op	10:18	0:0	4	=
water	10:20	0:0	4	0
decl	11:8	11:41	4	float	sample
op	11:21	0:0	4	=
water	11:23	0:0	4	src
op	11:26	0:0	4	[
water	11:27	0:0	4	i
op	11:28	0:0	4	]
op	11:30	0:0	4	*
water	11:32	0:0	4	S16_SCALE
for	12:8	15:8	4	(j = 0 ;j < 4;j ++)
forinit	12:13	12:18	5	j = 0 ;
water	12:13	0:0	6	j
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	j < 4
water	12:20	0:0	6	j
op	12:22	0:0	6	<
water	12:24	0:0	6	4
forexpr	12:27	12:28	5	j ++
water	12:27	0:0	6	j
op	12:28	0:0	6	++
stmts	12:32	15:8	5	
water	12:32	0:0	6	{
water	13:12	0:0	6	err
op	13:16	0:0	6	+=
water	13:19	0:0	6	c
op	13:20	0:0	6	->
water	13:22	0:0	6	ns_coef_b
op	13:31	0:0	6	[
water	13:32	0:0	6	j
op	13:33	0:0	6	]
op	13:35	0:0	6	*
water	13:37	0:0	6	state
op	13:42	0:0	6	->
water	13:44	0:0	6	dither_b
op	13:52	0:0	6	[
water	13:53	0:0	6	j
op	13:54	0:0	6	]
op	13:56	0:0	6	-
water	14:19	0:0	6	c
op	14:20	0:0	6	->
water	14:22	0:0	6	ns_coef_a
op	14:31	0:0	6	[
water	14:32	0:0	6	j
op	14:33	0:0	6	]
op	14:35	0:0	6	*
water	14:37	0:0	6	state
op	14:42	0:0	6	->
water	14:44	0:0	6	dither_a
op	14:52	0:0	6	[
water	14:53	0:0	6	j
op	14:54	0:0	6	]
water	14:55	0:0	6	;
water	15:8	0:0	6	}
for	16:8	19:8	4	(j = 3 ;j > 0;j --)
forinit	16:13	16:18	5	j = 3 ;
water	16:13	0:0	6	j
op	16:15	0:0	6	=
water	16:17	0:0	6	3
water	16:18	0:0	6	;
cond	16:20	16:24	5	j > 0
water	16:20	0:0	6	j
op	16:22	0:0	6	>
water	16:24	0:0	6	0
forexpr	16:27	16:28	5	j --
water	16:27	0:0	6	j
op	16:28	0:0	6	--
stmts	16:32	19:8	5	
water	16:32	0:0	6	{
water	17:12	0:0	6	state
op	17:17	0:0	6	->
water	17:19	0:0	6	dither_a
op	17:27	0:0	6	[
water	17:28	0:0	6	j
op	17:29	0:0	6	]
op	17:31	0:0	6	=
water	17:33	0:0	6	state
op	17:38	0:0	6	->
water	17:40	0:0	6	dither_a
op	17:48	0:0	6	[
water	17:49	0:0	6	j
op	17:51	0:0	6	-
water	17:53	0:0	6	1
op	17:54	0:0	6	]
water	17:55	0:0	6	;
water	18:12	0:0	6	state
op	18:17	0:0	6	->
water	18:19	0:0	6	dither_b
op	18:27	0:0	6	[
water	18:28	0:0	6	j
op	18:29	0:0	6	]
op	18:31	0:0	6	=
water	18:33	0:0	6	state
op	18:38	0:0	6	->
water	18:40	0:0	6	dither_b
op	18:48	0:0	6	[
water	18:49	0:0	6	j
op	18:51	0:0	6	-
water	18:53	0:0	6	1
op	18:54	0:0	6	]
water	18:55	0:0	6	;
water	19:8	0:0	6	}
water	20:8	0:0	4	state
op	20:13	0:0	4	->
water	20:15	0:0	4	dither_a
op	20:23	0:0	4	[
water	20:24	0:0	4	0
op	20:25	0:0	4	]
op	20:27	0:0	4	=
water	20:29	0:0	4	err
water	20:32	0:0	4	;
water	21:8	0:0	4	sample
op	21:15	0:0	4	-=
water	21:18	0:0	4	err
water	21:21	0:0	4	;
if	22:8	25:8	4	(state -> mute > c -> mute_dither_threshold)
cond	22:12	22:29	5	state -> mute > c -> mute_dither_threshold
water	22:12	0:0	6	state
op	22:17	0:0	6	->
water	22:19	0:0	6	mute
op	22:24	0:0	6	>
water	22:26	0:0	6	c
op	22:27	0:0	6	->
water	22:29	0:0	6	mute_dither_threshold
stmts	22:52	25:8	5	
water	22:52	0:0	6	{
water	23:12	0:0	6	dst
op	23:15	0:0	6	[
water	23:16	0:0	6	i
op	23:17	0:0	6	]
op	23:31	0:0	6	=
call	23:33	23:61	6	av_clip_int16
arg	23:47	23:61	7	lrintf(sample)
call	23:47	23:60	8	lrintf
arg	23:54	23:60	9	sample
water	23:54	0:0	10	sample
water	23:62	0:0	6	;
water	24:12	0:0	6	state
op	24:17	0:0	6	->
water	24:19	0:0	6	dither_b
op	24:27	0:0	6	[
water	24:28	0:0	6	0
op	24:29	0:0	6	]
op	24:31	0:0	6	=
water	24:33	0:0	6	0
water	24:34	0:0	6	;
water	25:8	0:0	6	}
else	25:10	28:8	4
stmts	25:15	28:8	5	
water	25:15	0:0	6	{
water	26:12	0:0	6	dst
op	26:15	0:0	6	[
water	26:16	0:0	6	i
op	26:17	0:0	6	]
op	26:31	0:0	6	=
call	26:33	26:73	6	av_clip_int16
arg	26:47	26:73	7	lrintf(sample+dither[i])
call	26:47	26:72	8	lrintf
arg	26:54	26:72	9	sample+dither[i]
water	26:54	0:0	10	sample
op	26:61	0:0	10	+
water	26:63	0:0	10	dither
op	26:69	0:0	10	[
water	26:70	0:0	10	i
op	26:71	0:0	10	]
water	26:74	0:0	6	;
water	27:12	0:0	6	state
op	27:17	0:0	6	->
water	27:19	0:0	6	dither_b
op	27:27	0:0	6	[
water	27:28	0:0	6	0
op	27:29	0:0	6	]
op	27:31	0:0	6	=
call	27:33	27:70	6	av_clipf
arg	27:42	27:57	7	dst[i]-sample
water	27:42	0:0	8	dst
op	27:45	0:0	8	[
water	27:46	0:0	8	i
op	27:47	0:0	8	]
op	27:49	0:0	8	-
water	27:51	0:0	8	sample
arg	27:59	27:64	7	-1.5f
op	27:59	0:0	8	-
water	27:60	0:0	8	1
op	27:61	0:0	8	.
water	27:62	0:0	8	5
water	27:63	0:0	8	f
arg	27:66	27:70	7	1.5f
water	27:66	0:0	8	1
op	27:67	0:0	8	.
water	27:68	0:0	8	5
water	27:69	0:0	8	f
water	27:71	0:0	6	;
water	28:8	0:0	6	}
water	29:8	0:0	4	state
op	29:13	0:0	4	->
water	29:15	0:0	4	mute
op	29:19	0:0	4	++
water	29:21	0:0	4	;
if	30:8	31:27	4	(src [ i ])
cond	30:12	30:17	5	src [ i ]
water	30:12	0:0	6	src
op	30:15	0:0	6	[
water	30:16	0:0	6	i
op	30:17	0:0	6	]
stmts	31:12	31:27	5	
water	31:12	0:0	6	state
op	31:17	0:0	6	->
water	31:19	0:0	6	mute
op	31:24	0:0	6	=
water	31:26	0:0	6	0
water	31:27	0:0	6	;
water	32:4	0:0	4	}

func	1:0	17:0	0	static double	setup_compress_thresh
params	1:35	0:0	1	
param	1:36	1:52	2	double	threshold
stmnts	3:4	16:4	1	
if	3:4	14:4	2	(( threshold > DBL_EPSILON ) && ( threshold < ( 1 . 0 - DBL_EPSILON ) ))
cond	3:8	3:69	3	( threshold > DBL_EPSILON ) && ( threshold < ( 1 . 0 - DBL_EPSILON ) )
water	3:8	0:0	4	(
water	3:9	0:0	4	threshold
op	3:19	0:0	4	>
water	3:21	0:0	4	DBL_EPSILON
water	3:32	0:0	4	)
op	3:34	0:0	4	&&
water	3:37	0:0	4	(
water	3:38	0:0	4	threshold
op	3:48	0:0	4	<
water	3:50	0:0	4	(
water	3:51	0:0	4	1
op	3:52	0:0	4	.
water	3:53	0:0	4	0
op	3:55	0:0	4	-
water	3:57	0:0	4	DBL_EPSILON
water	3:68	0:0	4	)
water	3:69	0:0	4	)
stmts	3:72	14:4	3	
water	3:72	0:0	4	{
decl	4:8	4:44	4	double	current_threshold
op	4:33	0:0	4	=
water	4:35	0:0	4	threshold
decl	5:8	5:30	4	double	step_size
op	5:25	0:0	4	=
water	5:27	0:0	4	1
op	5:28	0:0	4	.
water	5:29	0:0	4	0
while	6:8	12:8	4	(step_size > DBL_EPSILON)
cond	6:15	6:27	5	step_size > DBL_EPSILON
water	6:15	0:0	6	step_size
op	6:25	0:0	6	>
water	6:27	0:0	6	DBL_EPSILON
stmts	6:40	12:8	5	
water	6:40	0:0	6	{
while	7:12	10:12	6	(( current_threshold + step_size > current_threshold ) && (bound (current_threshold + step_size ,1 . 0 ) <= threshold ))
cond	7:19	8:74	7	( current_threshold + step_size > current_threshold ) && (bound (current_threshold + step_size ,1 . 0 ) <= threshold )
water	7:19	0:0	8	(
water	7:20	0:0	8	current_threshold
op	7:38	0:0	8	+
water	7:40	0:0	8	step_size
op	7:50	0:0	8	>
water	7:52	0:0	8	current_threshold
water	7:69	0:0	8	)
op	7:71	0:0	8	&&
water	8:19	0:0	8	(
call	8:20	8:60	8	bound
arg	8:26	8:55	9	current_threshold+step_size
water	8:26	0:0	10	current_threshold
op	8:44	0:0	10	+
water	8:46	0:0	10	step_size
arg	8:57	8:60	9	1.0
water	8:57	0:0	10	1
op	8:58	0:0	10	.
water	8:59	0:0	10	0
op	8:62	0:0	8	<=
water	8:65	0:0	8	threshold
water	8:74	0:0	8	)
stmts	8:77	10:12	7	
water	8:77	0:0	8	{
water	9:16	0:0	8	current_threshold
op	9:34	0:0	8	+=
water	9:37	0:0	8	step_size
water	9:46	0:0	8	;
water	10:12	0:0	8	}
water	11:12	0:0	6	step_size
op	11:22	0:0	6	/=
water	11:25	0:0	6	2
op	11:26	0:0	6	.
water	11:27	0:0	6	0
water	11:28	0:0	6	;
water	12:8	0:0	6	}
return	13:8	13:32	4	current_threshold
water	13:15	0:0	5	current_threshold
water	14:4	0:0	4	}
else	14:6	16:4	2
stmts	14:11	16:4	3	
water	14:11	0:0	4	{
return	15:8	15:24	4	threshold
water	15:15	0:0	5	threshold
water	16:4	0:0	4	}

decl	1:0	1:36	0	double	strtod
water	1:13	0:0	0	(
water	1:14	0:0	0	const
water	1:20	0:0	0	char
op	1:25	0:0	0	*
water	1:26	0:0	0	,
water	1:28	0:0	0	char
op	1:33	0:0	0	*
op	1:34	0:0	0	*
water	1:35	0:0	0	)
func	2:0	46:0	0	double	avpriv_strtod
params	2:20	0:0	1	
param	2:21	2:37	2	const char *	nptr
param	2:39	2:52	2	char * *	endptr
stmnts	0:0	45:14	1	
decl	4:4	4:13	2	char	*end
decl	5:4	5:14	2	double	res
while	7:4	8:14	2	(av_isspace (* nptr ))
cond	7:11	7:27	3	av_isspace (* nptr )
call	7:11	7:27	4	av_isspace
arg	7:22	7:27	5	*nptr
op	7:22	0:0	6	*
water	7:23	0:0	6	nptr
stmts	8:8	8:14	3	
water	8:8	0:0	4	nptr
op	8:12	0:0	4	++
water	8:14	0:0	4	;
if	9:4	12:4	2	(!av_strncasecmp (nptr ,"infinity" ,8 ))
cond	9:8	9:43	3	!av_strncasecmp (nptr ,"infinity" ,8 )
op	9:8	0:0	4	!
call	9:9	9:43	4	av_strncasecmp
arg	9:24	9:28	5	nptr
water	9:24	0:0	6	nptr
arg	9:30	9:40	5	"infinity"
water	9:30	0:0	6	"infinity"
arg	9:42	9:43	5	8
water	9:42	0:0	6	8
stmts	9:46	12:4	3	
water	9:46	0:0	4	{
water	10:8	0:0	4	end
op	10:12	0:0	4	=
water	10:14	0:0	4	nptr
op	10:19	0:0	4	+
water	10:21	0:0	4	8
water	10:22	0:0	4	;
water	11:8	0:0	4	res
op	11:12	0:0	4	=
water	11:14	0:0	4	INFINITY
water	11:22	0:0	4	;
water	12:4	0:0	4	}
else	12:6	15:4	2
stmts	12:11	15:4	3	
if	12:11	15:4	4	(!av_strncasecmp (nptr ,"inf" ,3 ))
cond	12:15	12:45	5	!av_strncasecmp (nptr ,"inf" ,3 )
op	12:15	0:0	6	!
call	12:16	12:45	6	av_strncasecmp
arg	12:31	12:35	7	nptr
water	12:31	0:0	8	nptr
arg	12:37	12:42	7	"inf"
water	12:37	0:0	8	"inf"
arg	12:44	12:45	7	3
water	12:44	0:0	8	3
stmts	12:48	15:4	5	
water	12:48	0:0	6	{
water	13:8	0:0	6	end
op	13:12	0:0	6	=
water	13:14	0:0	6	nptr
op	13:19	0:0	6	+
water	13:21	0:0	6	3
water	13:22	0:0	6	;
water	14:8	0:0	6	res
op	14:12	0:0	6	=
water	14:14	0:0	6	INFINITY
water	14:22	0:0	6	;
water	15:4	0:0	6	}
else	15:6	18:4	2
stmts	15:11	18:4	3	
if	15:11	18:4	4	(!av_strncasecmp (nptr ,"+infinity" ,9 ))
cond	15:15	15:51	5	!av_strncasecmp (nptr ,"+infinity" ,9 )
op	15:15	0:0	6	!
call	15:16	15:51	6	av_strncasecmp
arg	15:31	15:35	7	nptr
water	15:31	0:0	8	nptr
arg	15:37	15:48	7	"+infinity"
water	15:37	0:0	8	"+infinity"
arg	15:50	15:51	7	9
water	15:50	0:0	8	9
stmts	15:54	18:4	5	
water	15:54	0:0	6	{
water	16:8	0:0	6	end
op	16:12	0:0	6	=
water	16:14	0:0	6	nptr
op	16:19	0:0	6	+
water	16:21	0:0	6	9
water	16:22	0:0	6	;
water	17:8	0:0	6	res
op	17:12	0:0	6	=
water	17:14	0:0	6	INFINITY
water	17:22	0:0	6	;
water	18:4	0:0	6	}
else	18:6	21:4	2
stmts	18:11	21:4	3	
if	18:11	21:4	4	(!av_strncasecmp (nptr ,"+inf" ,4 ))
cond	18:15	18:46	5	!av_strncasecmp (nptr ,"+inf" ,4 )
op	18:15	0:0	6	!
call	18:16	18:46	6	av_strncasecmp
arg	18:31	18:35	7	nptr
water	18:31	0:0	8	nptr
arg	18:37	18:43	7	"+inf"
water	18:37	0:0	8	"+inf"
arg	18:45	18:46	7	4
water	18:45	0:0	8	4
stmts	18:49	21:4	5	
water	18:49	0:0	6	{
water	19:8	0:0	6	end
op	19:12	0:0	6	=
water	19:14	0:0	6	nptr
op	19:19	0:0	6	+
water	19:21	0:0	6	4
water	19:22	0:0	6	;
water	20:8	0:0	6	res
op	20:12	0:0	6	=
water	20:14	0:0	6	INFINITY
water	20:22	0:0	6	;
water	21:4	0:0	6	}
else	21:6	24:4	2
stmts	21:11	24:4	3	
if	21:11	24:4	4	(!av_strncasecmp (nptr ,"-infinity" ,9 ))
cond	21:15	21:51	5	!av_strncasecmp (nptr ,"-infinity" ,9 )
op	21:15	0:0	6	!
call	21:16	21:51	6	av_strncasecmp
arg	21:31	21:35	7	nptr
water	21:31	0:0	8	nptr
arg	21:37	21:48	7	"-infinity"
water	21:37	0:0	8	"-infinity"
arg	21:50	21:51	7	9
water	21:50	0:0	8	9
stmts	21:54	24:4	5	
water	21:54	0:0	6	{
water	22:8	0:0	6	end
op	22:12	0:0	6	=
water	22:14	0:0	6	nptr
op	22:19	0:0	6	+
water	22:21	0:0	6	9
water	22:22	0:0	6	;
water	23:8	0:0	6	res
op	23:12	0:0	6	=
op	23:14	0:0	6	-
water	23:15	0:0	6	INFINITY
water	23:23	0:0	6	;
water	24:4	0:0	6	}
else	24:6	27:4	2
stmts	24:11	27:4	3	
if	24:11	27:4	4	(!av_strncasecmp (nptr ,"-inf" ,4 ))
cond	24:15	24:46	5	!av_strncasecmp (nptr ,"-inf" ,4 )
op	24:15	0:0	6	!
call	24:16	24:46	6	av_strncasecmp
arg	24:31	24:35	7	nptr
water	24:31	0:0	8	nptr
arg	24:37	24:43	7	"-inf"
water	24:37	0:0	8	"-inf"
arg	24:45	24:46	7	4
water	24:45	0:0	8	4
stmts	24:49	27:4	5	
water	24:49	0:0	6	{
water	25:8	0:0	6	end
op	25:12	0:0	6	=
water	25:14	0:0	6	nptr
op	25:19	0:0	6	+
water	25:21	0:0	6	4
water	25:22	0:0	6	;
water	26:8	0:0	6	res
op	26:12	0:0	6	=
op	26:14	0:0	6	-
water	26:15	0:0	6	INFINITY
water	26:23	0:0	6	;
water	27:4	0:0	6	}
else	27:6	30:4	2
stmts	27:11	30:4	3	
if	27:11	30:4	4	(!av_strncasecmp (nptr ,"nan" ,3 ))
cond	27:15	27:45	5	!av_strncasecmp (nptr ,"nan" ,3 )
op	27:15	0:0	6	!
call	27:16	27:45	6	av_strncasecmp
arg	27:31	27:35	7	nptr
water	27:31	0:0	8	nptr
arg	27:37	27:42	7	"nan"
water	27:37	0:0	8	"nan"
arg	27:44	27:45	7	3
water	27:44	0:0	8	3
stmts	27:48	30:4	5	
water	27:48	0:0	6	{
water	28:8	0:0	6	end
op	28:12	0:0	6	=
call	28:14	28:39	6	check_nan_suffix
arg	28:31	28:39	7	nptr+3
water	28:31	0:0	8	nptr
op	28:36	0:0	8	+
water	28:38	0:0	8	3
water	28:40	0:0	6	;
water	29:8	0:0	6	res
op	29:12	0:0	6	=
water	29:14	0:0	6	NAN
water	29:17	0:0	6	;
water	30:4	0:0	6	}
else	30:6	34:4	2
stmts	30:11	34:4	3	
if	30:11	34:4	4	(!av_strncasecmp (nptr ,"+nan" ,4 ) || !av_strncasecmp (nptr ,"-nan" ,4 ))
cond	30:15	31:46	5	!av_strncasecmp (nptr ,"+nan" ,4 ) || !av_strncasecmp (nptr ,"-nan" ,4 )
op	30:15	0:0	6	!
call	30:16	30:46	6	av_strncasecmp
arg	30:31	30:35	7	nptr
water	30:31	0:0	8	nptr
arg	30:37	30:43	7	"+nan"
water	30:37	0:0	8	"+nan"
arg	30:45	30:46	7	4
water	30:45	0:0	8	4
op	30:48	0:0	6	||
op	31:15	0:0	6	!
call	31:16	31:46	6	av_strncasecmp
arg	31:31	31:35	7	nptr
water	31:31	0:0	8	nptr
arg	31:37	31:43	7	"-nan"
water	31:37	0:0	8	"-nan"
arg	31:45	31:46	7	4
water	31:45	0:0	8	4
stmts	31:49	34:4	5	
water	31:49	0:0	6	{
water	32:8	0:0	6	end
op	32:12	0:0	6	=
call	32:14	32:39	6	check_nan_suffix
arg	32:31	32:39	7	nptr+4
water	32:31	0:0	8	nptr
op	32:36	0:0	8	+
water	32:38	0:0	8	4
water	32:40	0:0	6	;
water	33:8	0:0	6	res
op	33:12	0:0	6	=
water	33:14	0:0	6	NAN
water	33:17	0:0	6	;
water	34:4	0:0	6	}
else	34:6	40:4	2
stmts	34:11	40:4	3	
if	34:11	40:4	4	(!av_strncasecmp (nptr ,"0x" ,2 ) || !av_strncasecmp (nptr ,"-0x" ,3 ) || !av_strncasecmp (nptr ,"+0x" ,3 ))
cond	34:15	36:45	5	!av_strncasecmp (nptr ,"0x" ,2 ) || !av_strncasecmp (nptr ,"-0x" ,3 ) || !av_strncasecmp (nptr ,"+0x" ,3 )
op	34:15	0:0	6	!
call	34:16	34:44	6	av_strncasecmp
arg	34:31	34:35	7	nptr
water	34:31	0:0	8	nptr
arg	34:37	34:41	7	"0x"
water	34:37	0:0	8	"0x"
arg	34:43	34:44	7	2
water	34:43	0:0	8	2
op	34:46	0:0	6	||
op	35:15	0:0	6	!
call	35:16	35:45	6	av_strncasecmp
arg	35:31	35:35	7	nptr
water	35:31	0:0	8	nptr
arg	35:37	35:42	7	"-0x"
water	35:37	0:0	8	"-0x"
arg	35:44	35:45	7	3
water	35:44	0:0	8	3
op	35:47	0:0	6	||
op	36:15	0:0	6	!
call	36:16	36:45	6	av_strncasecmp
arg	36:31	36:35	7	nptr
water	36:31	0:0	8	nptr
arg	36:37	36:42	7	"+0x"
water	36:37	0:0	8	"+0x"
arg	36:44	36:45	7	3
water	36:44	0:0	8	3
stmts	36:48	40:4	5	
water	36:48	0:0	6	{
water	39:8	0:0	6	res
op	39:12	0:0	6	=
call	39:14	39:36	6	strtoll
arg	39:22	39:26	7	nptr
water	39:22	0:0	8	nptr
arg	39:28	39:32	7	&end
op	39:28	0:0	8	&
water	39:29	0:0	8	end
arg	39:34	39:36	7	16
water	39:34	0:0	8	16
water	39:37	0:0	6	;
water	40:4	0:0	6	}
else	40:6	42:4	2
stmts	40:11	42:4	3	
water	40:11	0:0	4	{
water	41:8	0:0	4	res
op	41:12	0:0	4	=
call	41:14	41:31	4	strtod
arg	41:21	41:25	5	nptr
water	41:21	0:0	6	nptr
arg	41:27	41:31	5	&end
op	41:27	0:0	6	&
water	41:28	0:0	6	end
water	41:32	0:0	4	;
water	42:4	0:0	4	}
if	43:4	44:21	2	(endptr)
cond	43:8	43:8	3	endptr
water	43:8	0:0	4	endptr
stmts	44:8	44:21	3	
op	44:8	0:0	4	*
water	44:9	0:0	4	endptr
op	44:16	0:0	4	=
water	44:18	0:0	4	end
water	44:21	0:0	4	;
return	45:4	45:14	2	res
water	45:11	0:0	3	res

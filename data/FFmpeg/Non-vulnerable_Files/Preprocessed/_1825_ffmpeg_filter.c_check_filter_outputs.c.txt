func	1:0	14:0	0	void	check_filter_outputs
params	1:25	0:0	1	
param	1:26	1:30	2	void
stmnts	0:0	13:4	1	
decl	3:4	3:9	2	int	i
for	4:4	13:4	2	(i = 0 ;i < nb_filtergraphs;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:20	3	i < nb_filtergraphs
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	nb_filtergraphs
forexpr	4:37	4:38	3	i ++
water	4:37	0:0	4	i
op	4:38	0:0	4	++
stmts	4:42	13:4	3	
water	4:42	0:0	4	{
decl	5:8	5:13	4	int	n
for	6:8	12:8	4	(n = 0 ;n < filtergraphs [ i ] -> nb_outputs;n ++)
forinit	6:13	6:18	5	n = 0 ;
water	6:13	0:0	6	n
op	6:15	0:0	6	=
water	6:17	0:0	6	0
water	6:18	0:0	6	;
cond	6:20	6:41	5	n < filtergraphs [ i ] -> nb_outputs
water	6:20	0:0	6	n
op	6:22	0:0	6	<
water	6:24	0:0	6	filtergraphs
op	6:36	0:0	6	[
water	6:37	0:0	6	i
op	6:38	0:0	6	]
op	6:39	0:0	6	->
water	6:41	0:0	6	nb_outputs
forexpr	6:53	6:54	5	n ++
water	6:53	0:0	6	n
op	6:54	0:0	6	++
stmts	6:58	12:8	5	
water	6:58	0:0	6	{
decl	7:12	7:62	6	OutputFilter	*output
op	7:33	0:0	6	=
water	7:35	0:0	6	filtergraphs
op	7:47	0:0	6	[
water	7:48	0:0	6	i
op	7:49	0:0	6	]
op	7:50	0:0	6	->
water	7:52	0:0	6	outputs
op	7:59	0:0	6	[
water	7:60	0:0	6	n
op	7:61	0:0	6	]
if	8:12	11:12	6	(! output -> ost)
cond	8:16	8:25	7	! output -> ost
op	8:16	0:0	8	!
water	8:17	0:0	8	output
op	8:23	0:0	8	->
water	8:25	0:0	8	ost
stmts	8:30	11:12	7	
water	8:30	0:0	8	{
call	9:16	9:96	8	av_log
arg	9:23	9:27	9	NULL
water	9:23	0:0	10	NULL
arg	9:29	9:41	9	AV_LOG_FATAL
water	9:29	0:0	10	AV_LOG_FATAL
arg	9:43	9:82	9	"Filter %s has an unconnected output\n"
water	9:43	0:0	10	"Filter %s has an unconnected output\n"
arg	9:84	9:96	9	output->name
water	9:84	0:0	10	output
op	9:90	0:0	10	->
water	9:92	0:0	10	name
water	9:97	0:0	8	;
call	10:16	10:30	8	exit_program
arg	10:29	10:30	9	1
water	10:29	0:0	10	1
water	10:31	0:0	8	;
water	11:12	0:0	8	}
water	12:8	0:0	6	}
water	13:4	0:0	4	}

func	1:0	19:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:63	2	AVFrame *	inpicref
stmnts	0:0	18:37	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:35	2	FrameRateContext	*s
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
water	6:4	0:0	2	s
op	6:5	0:0	2	->
water	6:7	0:0	2	pending_srce_frames
op	6:26	0:0	2	++
water	6:28	0:0	2	;
if	7:4	8:97	2	(inpicref -> interlaced_frame)
cond	7:8	7:18	3	inpicref -> interlaced_frame
water	7:8	0:0	4	inpicref
op	7:16	0:0	4	->
water	7:18	0:0	4	interlaced_frame
stmts	8:8	8:97	3	
call	8:8	8:96	4	av_log
arg	8:15	8:18	5	ctx
water	8:15	0:0	6	ctx
arg	8:20	8:34	5	AV_LOG_WARNING
water	8:20	0:0	6	AV_LOG_WARNING
arg	8:36	8:96	5	"Interlaced frame found - the output will not be correct.\n"
water	8:36	0:0	6	"Interlaced frame found - the output will not be correct.\n"
water	8:97	0:0	4	;
call	10:4	10:35	2	av_frame_free
arg	10:18	10:35	3	&s->srce[s->frst]
op	10:18	0:0	4	&
water	10:19	0:0	4	s
op	10:20	0:0	4	->
water	10:22	0:0	4	srce
op	10:26	0:0	4	[
water	10:27	0:0	4	s
op	10:28	0:0	4	->
water	10:30	0:0	4	frst
op	10:34	0:0	4	]
water	10:36	0:0	2	;
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	srce
op	11:11	0:0	2	[
water	11:12	0:0	2	s
op	11:13	0:0	2	->
water	11:15	0:0	2	frst
op	11:19	0:0	2	]
op	11:21	0:0	2	=
water	11:23	0:0	2	inpicref
water	11:31	0:0	2	;
if	12:4	15:4	2	(! s -> pending_end_frame && s -> srce [ s -> crnt ])
cond	12:8	12:48	3	! s -> pending_end_frame && s -> srce [ s -> crnt ]
op	12:8	0:0	4	!
water	12:9	0:0	4	s
op	12:10	0:0	4	->
water	12:12	0:0	4	pending_end_frame
op	12:30	0:0	4	&&
water	12:33	0:0	4	s
op	12:34	0:0	4	->
water	12:36	0:0	4	srce
op	12:40	0:0	4	[
water	12:41	0:0	4	s
op	12:42	0:0	4	->
water	12:44	0:0	4	crnt
op	12:48	0:0	4	]
stmts	12:51	15:4	3	
water	12:51	0:0	4	{
call	13:8	13:30	4	set_work_frame_pts
arg	13:27	13:30	5	ctx
water	13:27	0:0	6	ctx
water	13:31	0:0	4	;
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	pending_end_frame
op	14:29	0:0	4	=
water	14:31	0:0	4	1
water	14:32	0:0	4	;
water	15:4	0:0	4	}
else	15:6	17:4	2
stmts	15:11	17:4	3	
water	15:11	0:0	4	{
call	16:8	16:35	4	set_srce_frame_dest_pts
arg	16:32	16:35	5	ctx
water	16:32	0:0	6	ctx
water	16:36	0:0	4	;
water	17:4	0:0	4	}
return	18:4	18:37	2	process_work_frame(ctx,1)
call	18:11	18:36	3	process_work_frame
arg	18:30	18:33	4	ctx
water	18:30	0:0	5	ctx
arg	18:35	18:36	4	1
water	18:35	0:0	5	1

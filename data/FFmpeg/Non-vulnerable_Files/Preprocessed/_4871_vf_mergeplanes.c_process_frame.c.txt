func	1:0	25:0	0	static int	process_frame
params	1:24	0:0	1	
param	1:25	1:40	2	FFFrameSync *	fs
stmnts	0:0	24:40	1	
decl	3:4	3:37	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	fs
op	3:29	0:0	2	->
water	3:31	0:0	2	parent
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:38	2	MergePlanesContext	*s
op	5:26	0:0	2	=
water	5:28	0:0	2	fs
op	5:30	0:0	2	->
water	5:32	0:0	2	opaque
decl	6:4	6:29	2	AVFrame	*in[4]
op	6:19	0:0	2	=
water	6:21	0:0	2	{
water	6:23	0:0	2	NULL
water	6:28	0:0	2	}
decl	7:4	7:16	2	AVFrame	*out
decl	8:4	8:14	2	int	i
water	8:9	0:0	2	,
decl	8:4	8:14	2	int	ret
for	9:4	12:4	2	(i = 0 ;i < s -> nb_inputs;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:23	3	i < s -> nb_inputs
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	s
op	9:21	0:0	4	->
water	9:23	0:0	4	nb_inputs
forexpr	9:34	9:35	3	i ++
water	9:34	0:0	4	i
op	9:35	0:0	4	++
stmts	9:39	12:4	3	
water	9:39	0:0	4	{
if	10:8	11:22	4	(( ret =ff_framesync_get_frame (& s -> fs ,i ,& in [ i ] ,0 ) ) < 0)
cond	10:12	10:67	5	( ret =ff_framesync_get_frame (& s -> fs ,i ,& in [ i ] ,0 ) ) < 0
water	10:12	0:0	6	(
water	10:13	0:0	6	ret
op	10:17	0:0	6	=
call	10:19	10:62	6	ff_framesync_get_frame
arg	10:42	10:48	7	&s->fs
op	10:42	0:0	8	&
water	10:43	0:0	8	s
op	10:44	0:0	8	->
water	10:46	0:0	8	fs
arg	10:50	10:51	7	i
water	10:50	0:0	8	i
arg	10:53	10:59	7	&in[i]
op	10:53	0:0	8	&
water	10:54	0:0	8	in
op	10:56	0:0	8	[
water	10:57	0:0	8	i
op	10:58	0:0	8	]
arg	10:61	10:62	7	0
water	10:61	0:0	8	0
water	10:63	0:0	6	)
op	10:65	0:0	6	<
water	10:67	0:0	6	0
stmts	11:12	11:22	5	
return	11:12	11:22	6	ret
water	11:19	0:0	7	ret
water	12:4	0:0	4	}
water	13:4	0:0	2	out
op	13:8	0:0	2	=
call	13:10	13:61	2	ff_get_video_buffer
arg	13:30	13:37	3	outlink
water	13:30	0:0	4	outlink
arg	13:39	13:49	3	outlink->w
water	13:39	0:0	4	outlink
op	13:46	0:0	4	->
water	13:48	0:0	4	w
arg	13:51	13:61	3	outlink->h
water	13:51	0:0	4	outlink
op	13:58	0:0	4	->
water	13:60	0:0	4	h
water	13:62	0:0	2	;
if	14:4	15:30	2	(! out)
cond	14:8	14:9	3	! out
op	14:8	0:0	4	!
water	14:9	0:0	4	out
stmts	15:8	15:30	3	
return	15:8	15:30	4	AVERROR(ENOMEM)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	ENOMEM
water	15:23	0:0	7	ENOMEM
water	16:4	0:0	2	out
op	16:7	0:0	2	->
water	16:9	0:0	2	pts
op	16:13	0:0	2	=
call	16:15	16:74	2	av_rescale_q
arg	16:28	16:37	3	s->fs.pts
water	16:28	0:0	4	s
op	16:29	0:0	4	->
water	16:31	0:0	4	fs
op	16:33	0:0	4	.
water	16:34	0:0	4	pts
arg	16:39	16:54	3	s->fs.time_base
water	16:39	0:0	4	s
op	16:40	0:0	4	->
water	16:42	0:0	4	fs
op	16:44	0:0	4	.
water	16:45	0:0	4	time_base
arg	16:56	16:74	3	outlink->time_base
water	16:56	0:0	4	outlink
op	16:63	0:0	4	->
water	16:65	0:0	4	time_base
water	16:75	0:0	2	;
for	17:4	23:4	2	(i = 0 ;i < s -> nb_planes;i ++)
forinit	17:9	17:14	3	i = 0 ;
water	17:9	0:0	4	i
op	17:11	0:0	4	=
water	17:13	0:0	4	0
water	17:14	0:0	4	;
cond	17:16	17:23	3	i < s -> nb_planes
water	17:16	0:0	4	i
op	17:18	0:0	4	<
water	17:20	0:0	4	s
op	17:21	0:0	4	->
water	17:23	0:0	4	nb_planes
forexpr	17:34	17:35	3	i ++
water	17:34	0:0	4	i
op	17:35	0:0	4	++
stmts	17:39	23:4	3	
water	17:39	0:0	4	{
decl	18:8	18:38	4	const int	input
op	18:24	0:0	4	=
water	18:26	0:0	4	s
op	18:27	0:0	4	->
water	18:29	0:0	4	map
op	18:32	0:0	4	[
water	18:33	0:0	4	i
op	18:34	0:0	4	]
op	18:35	0:0	4	[
water	18:36	0:0	4	1
op	18:37	0:0	4	]
decl	19:8	19:38	4	const int	plane
op	19:24	0:0	4	=
water	19:26	0:0	4	s
op	19:27	0:0	4	->
water	19:29	0:0	4	map
op	19:32	0:0	4	[
water	19:33	0:0	4	i
op	19:34	0:0	4	]
op	19:35	0:0	4	[
water	19:36	0:0	4	0
op	19:37	0:0	4	]
call	20:8	22:63	4	av_image_copy_plane
arg	20:28	20:40	5	out->data[i]
water	20:28	0:0	6	out
op	20:31	0:0	6	->
water	20:33	0:0	6	data
op	20:37	0:0	6	[
water	20:38	0:0	6	i
op	20:39	0:0	6	]
arg	20:42	20:58	5	out->linesize[i]
water	20:42	0:0	6	out
op	20:45	0:0	6	->
water	20:47	0:0	6	linesize
op	20:55	0:0	6	[
water	20:56	0:0	6	i
op	20:57	0:0	6	]
arg	21:28	21:50	5	in[input]->data[plane]
water	21:28	0:0	6	in
op	21:30	0:0	6	[
water	21:31	0:0	6	input
op	21:36	0:0	6	]
op	21:37	0:0	6	->
water	21:39	0:0	6	data
op	21:43	0:0	6	[
water	21:44	0:0	6	plane
op	21:49	0:0	6	]
arg	21:52	21:78	5	in[input]->linesize[plane]
water	21:52	0:0	6	in
op	21:54	0:0	6	[
water	21:55	0:0	6	input
op	21:60	0:0	6	]
op	21:61	0:0	6	->
water	21:63	0:0	6	linesize
op	21:71	0:0	6	[
water	21:72	0:0	6	plane
op	21:77	0:0	6	]
arg	22:28	22:44	5	s->planewidth[i]
water	22:28	0:0	6	s
op	22:29	0:0	6	->
water	22:31	0:0	6	planewidth
op	22:41	0:0	6	[
water	22:42	0:0	6	i
op	22:43	0:0	6	]
arg	22:46	22:63	5	s->planeheight[i]
water	22:46	0:0	6	s
op	22:47	0:0	6	->
water	22:49	0:0	6	planeheight
op	22:60	0:0	6	[
water	22:61	0:0	6	i
op	22:62	0:0	6	]
water	22:64	0:0	4	;
water	23:4	0:0	4	}
return	24:4	24:40	2	ff_filter_frame(outlink,out)
call	24:11	24:39	3	ff_filter_frame
arg	24:27	24:34	4	outlink
water	24:27	0:0	5	outlink
arg	24:36	24:39	4	out
water	24:36	0:0	5	out

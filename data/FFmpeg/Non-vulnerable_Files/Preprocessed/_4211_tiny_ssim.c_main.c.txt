func	1:0	59:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:31	2	char *	argv[]
stmnts	0:0	58:12	1	
decl	3:4	3:14	2	FILE	*f[2]
water	4:4	0:0	2	uint8_t
op	4:12	0:0	2	*
water	4:13	0:0	2	buf
op	4:16	0:0	2	[
water	4:17	0:0	2	2
op	4:18	0:0	2	]
water	4:19	0:0	2	,
op	4:21	0:0	2	*
water	4:22	0:0	2	plane
op	4:27	0:0	2	[
water	4:28	0:0	2	2
op	4:29	0:0	2	]
op	4:30	0:0	2	[
water	4:31	0:0	2	3
op	4:32	0:0	2	]
water	4:33	0:0	2	;
decl	5:4	5:13	2	int	*temp
decl	6:4	6:29	2	uint64_t	ssd[3]
op	6:20	0:0	2	=
water	6:22	0:0	2	{
water	6:23	0:0	2	0
water	6:24	0:0	2	,
water	6:25	0:0	2	0
water	6:26	0:0	2	,
water	6:27	0:0	2	0
water	6:28	0:0	2	}
decl	7:4	7:28	2	double	ssim[3]
op	7:19	0:0	2	=
water	7:21	0:0	2	{
water	7:22	0:0	2	0
water	7:23	0:0	2	,
water	7:24	0:0	2	0
water	7:25	0:0	2	,
water	7:26	0:0	2	0
water	7:27	0:0	2	}
decl	8:4	8:24	2	int	frame_size
water	8:18	0:0	2	,
decl	8:4	8:24	2	int	w
water	8:21	0:0	2	,
decl	8:4	8:24	2	int	h
decl	9:4	9:20	2	int	frames
water	9:14	0:0	2	,
decl	9:4	9:20	2	int	seek
decl	10:4	10:9	2	int	i
if	11:4	15:4	2	(argc < 4 || 2 !=sscanf (argv [ 3 ] ,"%dx%d" ,& w ,& h ))
cond	11:8	11:54	3	argc < 4 || 2 !=sscanf (argv [ 3 ] ,"%dx%d" ,& w ,& h )
water	11:8	0:0	4	argc
op	11:12	0:0	4	<
water	11:13	0:0	4	4
op	11:15	0:0	4	||
water	11:18	0:0	4	2
op	11:20	0:0	4	!=
call	11:23	11:54	4	sscanf
arg	11:30	11:37	5	argv[3]
water	11:30	0:0	6	argv
op	11:34	0:0	6	[
water	11:35	0:0	6	3
op	11:36	0:0	6	]
arg	11:39	11:46	5	"%dx%d"
water	11:39	0:0	6	"%dx%d"
arg	11:48	11:50	5	&w
op	11:48	0:0	6	&
water	11:49	0:0	6	w
arg	11:52	11:54	5	&h
op	11:52	0:0	6	&
water	11:53	0:0	6	h
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:78	4	printf
arg	13:15	13:78	5	"tiny_ssim <file1.yuv> <file2.yuv> <width>x<height> [<seek>]\n"
water	13:15	0:0	6	"tiny_ssim <file1.yuv> <file2.yuv> <width>x<height> [<seek>]\n"
water	13:79	0:0	4	;
return	14:8	14:17	4	-1
op	14:15	0:0	5	-
water	14:16	0:0	5	1
water	15:4	0:0	4	}
water	16:4	0:0	2	f
op	16:5	0:0	2	[
water	16:6	0:0	2	0
op	16:7	0:0	2	]
op	16:9	0:0	2	=
call	16:11	16:30	2	fopen
arg	16:17	16:24	3	argv[1]
water	16:17	0:0	4	argv
op	16:21	0:0	4	[
water	16:22	0:0	4	1
op	16:23	0:0	4	]
arg	16:26	16:30	3	"rb"
water	16:26	0:0	4	"rb"
water	16:31	0:0	2	;
water	17:4	0:0	2	f
op	17:5	0:0	2	[
water	17:6	0:0	2	1
op	17:7	0:0	2	]
op	17:9	0:0	2	=
call	17:11	17:30	2	fopen
arg	17:17	17:24	3	argv[2]
water	17:17	0:0	4	argv
op	17:21	0:0	4	[
water	17:22	0:0	4	2
op	17:23	0:0	4	]
arg	17:26	17:30	3	"rb"
water	17:26	0:0	4	"rb"
water	17:31	0:0	2	;
call	18:4	18:35	2	sscanf
arg	18:11	18:18	3	argv[3]
water	18:11	0:0	4	argv
op	18:15	0:0	4	[
water	18:16	0:0	4	3
op	18:17	0:0	4	]
arg	18:20	18:27	3	"%dx%d"
water	18:20	0:0	4	"%dx%d"
arg	18:29	18:31	3	&w
op	18:29	0:0	4	&
water	18:30	0:0	4	w
arg	18:33	18:35	3	&h
op	18:33	0:0	4	&
water	18:34	0:0	4	h
water	18:36	0:0	2	;
if	19:4	22:4	2	(w <= 0 || h <= 0 || w * ( int64_t ) h >= INT_MAX / 3 || 2 LL * w + 12 >= INT_MAX / sizeof ( * temp ))
cond	19:8	19:87	3	w <= 0 || h <= 0 || w * ( int64_t ) h >= INT_MAX / 3 || 2 LL * w + 12 >= INT_MAX / sizeof ( * temp )
water	19:8	0:0	4	w
op	19:9	0:0	4	<=
water	19:11	0:0	4	0
op	19:13	0:0	4	||
water	19:16	0:0	4	h
op	19:17	0:0	4	<=
water	19:19	0:0	4	0
op	19:21	0:0	4	||
water	19:24	0:0	4	w
op	19:25	0:0	4	*
water	19:26	0:0	4	(
water	19:27	0:0	4	int64_t
water	19:34	0:0	4	)
water	19:35	0:0	4	h
op	19:37	0:0	4	>=
water	19:40	0:0	4	INT_MAX
op	19:47	0:0	4	/
water	19:48	0:0	4	3
op	19:50	0:0	4	||
water	19:53	0:0	4	2
water	19:54	0:0	4	LL
op	19:56	0:0	4	*
water	19:57	0:0	4	w
op	19:58	0:0	4	+
water	19:59	0:0	4	12
op	19:62	0:0	4	>=
water	19:65	0:0	4	INT_MAX
op	19:73	0:0	4	/
op	19:75	0:0	4	sizeof
water	19:81	0:0	4	(
op	19:82	0:0	4	*
water	19:83	0:0	4	temp
water	19:87	0:0	4	)
stmts	19:90	22:4	3	
water	19:90	0:0	4	{
call	20:8	20:64	4	fprintf
arg	20:16	20:22	5	stderr
water	20:16	0:0	6	stderr
arg	20:24	20:64	5	"Dimensions are too large, or invalid\n"
water	20:24	0:0	6	"Dimensions are too large, or invalid\n"
water	20:65	0:0	4	;
return	21:8	21:17	4	-2
op	21:15	0:0	5	-
water	21:16	0:0	5	2
water	22:4	0:0	4	}
water	23:4	0:0	2	frame_size
op	23:15	0:0	2	=
water	23:17	0:0	2	w
op	23:18	0:0	2	*
water	23:19	0:0	2	h
op	23:20	0:0	2	*
water	23:21	0:0	2	3
water	23:22	0:0	2	LL
op	23:24	0:0	2	/
water	23:25	0:0	2	2
water	23:26	0:0	2	;
for	24:4	30:4	2	(i = 0 ;i < 2;i ++)
forinit	24:9	24:12	3	i = 0 ;
water	24:9	0:0	4	i
op	24:10	0:0	4	=
water	24:11	0:0	4	0
water	24:12	0:0	4	;
cond	24:14	24:16	3	i < 2
water	24:14	0:0	4	i
op	24:15	0:0	4	<
water	24:16	0:0	4	2
forexpr	24:19	24:20	3	i ++
water	24:19	0:0	4	i
op	24:20	0:0	4	++
stmts	25:4	30:4	3	
water	25:4	0:0	4	{
water	26:8	0:0	4	buf
op	26:11	0:0	4	[
water	26:12	0:0	4	i
op	26:13	0:0	4	]
op	26:15	0:0	4	=
call	26:17	26:34	4	malloc
arg	26:24	26:34	5	frame_size
water	26:24	0:0	6	frame_size
water	26:35	0:0	4	;
water	27:8	0:0	4	plane
op	27:13	0:0	4	[
water	27:14	0:0	4	i
op	27:15	0:0	4	]
op	27:16	0:0	4	[
water	27:17	0:0	4	0
op	27:18	0:0	4	]
op	27:20	0:0	4	=
water	27:22	0:0	4	buf
op	27:25	0:0	4	[
water	27:26	0:0	4	i
op	27:27	0:0	4	]
water	27:28	0:0	4	;
water	28:8	0:0	4	plane
op	28:13	0:0	4	[
water	28:14	0:0	4	i
op	28:15	0:0	4	]
op	28:16	0:0	4	[
water	28:17	0:0	4	1
op	28:18	0:0	4	]
op	28:20	0:0	4	=
water	28:22	0:0	4	plane
op	28:27	0:0	4	[
water	28:28	0:0	4	i
op	28:29	0:0	4	]
op	28:30	0:0	4	[
water	28:31	0:0	4	0
op	28:32	0:0	4	]
op	28:34	0:0	4	+
water	28:36	0:0	4	w
op	28:37	0:0	4	*
water	28:38	0:0	4	h
water	28:39	0:0	4	;
water	29:8	0:0	4	plane
op	29:13	0:0	4	[
water	29:14	0:0	4	i
op	29:15	0:0	4	]
op	29:16	0:0	4	[
water	29:17	0:0	4	2
op	29:18	0:0	4	]
op	29:20	0:0	4	=
water	29:22	0:0	4	plane
op	29:27	0:0	4	[
water	29:28	0:0	4	i
op	29:29	0:0	4	]
op	29:30	0:0	4	[
water	29:31	0:0	4	1
op	29:32	0:0	4	]
op	29:34	0:0	4	+
water	29:36	0:0	4	w
op	29:37	0:0	4	*
water	29:38	0:0	4	h
op	29:39	0:0	4	/
water	29:40	0:0	4	4
water	29:41	0:0	4	;
water	30:4	0:0	4	}
water	31:4	0:0	2	temp
op	31:9	0:0	2	=
call	31:11	31:40	2	malloc
arg	31:18	31:40	3	(2*w+12)*sizeof(*temp)
water	31:18	0:0	4	(
water	31:19	0:0	4	2
op	31:20	0:0	4	*
water	31:21	0:0	4	w
op	31:22	0:0	4	+
water	31:23	0:0	4	12
water	31:25	0:0	4	)
op	31:26	0:0	4	*
op	31:27	0:0	4	sizeof
water	31:33	0:0	4	(
op	31:34	0:0	4	*
water	31:35	0:0	4	temp
water	31:39	0:0	4	)
water	31:41	0:0	2	;
water	32:4	0:0	2	seek
op	32:9	0:0	2	=
water	32:11	0:0	2	argc
op	32:15	0:0	2	<
water	32:16	0:0	2	5
water	32:18	0:0	2	?
water	32:20	0:0	2	0
water	32:22	0:0	2	:
call	32:24	32:36	2	atoi
arg	32:29	32:36	3	argv[4]
water	32:29	0:0	4	argv
op	32:33	0:0	4	[
water	32:34	0:0	4	4
op	32:35	0:0	4	]
water	32:37	0:0	2	;
call	33:4	33:54	2	fseek
arg	33:10	33:19	3	f[seek<0]
water	33:10	0:0	4	f
op	33:11	0:0	4	[
water	33:12	0:0	4	seek
op	33:16	0:0	4	<
water	33:17	0:0	4	0
op	33:18	0:0	4	]
arg	33:21	33:44	3	seek<0?-seek:seek
water	33:21	0:0	4	seek
op	33:26	0:0	4	<
water	33:28	0:0	4	0
water	33:30	0:0	4	?
op	33:32	0:0	4	-
water	33:33	0:0	4	seek
water	33:38	0:0	4	:
water	33:40	0:0	4	seek
arg	33:46	33:54	3	SEEK_SET
water	33:46	0:0	4	SEEK_SET
water	33:55	0:0	2	;
for	34:4	53:4	2	(frames = 0 ;;frames ++)
forinit	34:9	34:17	3	frames = 0 ;
water	34:9	0:0	4	frames
op	34:15	0:0	4	=
water	34:16	0:0	4	0
water	34:17	0:0	4	;
cond	0:0	0:0	3	
forexpr	34:20	34:26	3	frames ++
water	34:20	0:0	4	frames
op	34:26	0:0	4	++
stmts	35:4	53:4	3	
water	35:4	0:0	4	{
decl	36:8	36:27	4	uint64_t	ssd_one[3]
decl	37:8	37:26	4	double	ssim_one[3]
if	38:8	38:58	4	(fread (buf [ 0 ] ,frame_size ,1 ,f [ 0 ] ) != 1)
cond	38:12	38:50	5	fread (buf [ 0 ] ,frame_size ,1 ,f [ 0 ] ) != 1
call	38:12	38:45	6	fread
arg	38:18	38:24	7	buf[0]
water	38:18	0:0	8	buf
op	38:21	0:0	8	[
water	38:22	0:0	8	0
op	38:23	0:0	8	]
arg	38:26	38:36	7	frame_size
water	38:26	0:0	8	frame_size
arg	38:38	38:39	7	1
water	38:38	0:0	8	1
arg	38:41	38:45	7	f[0]
water	38:41	0:0	8	f
op	38:42	0:0	8	[
water	38:43	0:0	8	0
op	38:44	0:0	8	]
op	38:47	0:0	6	!=
water	38:50	0:0	6	1
stmts	38:53	38:58	5	
break	38:53	38:58	6	
if	39:8	39:58	4	(fread (buf [ 1 ] ,frame_size ,1 ,f [ 1 ] ) != 1)
cond	39:12	39:50	5	fread (buf [ 1 ] ,frame_size ,1 ,f [ 1 ] ) != 1
call	39:12	39:45	6	fread
arg	39:18	39:24	7	buf[1]
water	39:18	0:0	8	buf
op	39:21	0:0	8	[
water	39:22	0:0	8	1
op	39:23	0:0	8	]
arg	39:26	39:36	7	frame_size
water	39:26	0:0	8	frame_size
arg	39:38	39:39	7	1
water	39:38	0:0	8	1
arg	39:41	39:45	7	f[1]
water	39:41	0:0	8	f
op	39:42	0:0	8	[
water	39:43	0:0	8	1
op	39:44	0:0	8	]
op	39:47	0:0	6	!=
water	39:50	0:0	6	1
stmts	39:53	39:58	5	
break	39:53	39:58	6	
for	40:8	48:8	4	(i = 0 ;i < 3;i ++)
forinit	40:13	40:16	5	i = 0 ;
water	40:13	0:0	6	i
op	40:14	0:0	6	=
water	40:15	0:0	6	0
water	40:16	0:0	6	;
cond	40:18	40:20	5	i < 3
water	40:18	0:0	6	i
op	40:19	0:0	6	<
water	40:20	0:0	6	3
forexpr	40:23	40:24	5	i ++
water	40:23	0:0	6	i
op	40:24	0:0	6	++
stmts	41:8	48:8	5	
water	41:8	0:0	6	{
water	42:12	0:0	6	ssd_one
op	42:19	0:0	6	[
water	42:20	0:0	6	i
op	42:21	0:0	6	]
op	42:24	0:0	6	=
call	42:26	42:75	6	ssd_plane
arg	42:38	42:49	7	plane[0][i]
water	42:38	0:0	8	plane
op	42:43	0:0	8	[
water	42:44	0:0	8	0
op	42:45	0:0	8	]
op	42:46	0:0	8	[
water	42:47	0:0	8	i
op	42:48	0:0	8	]
arg	42:51	42:62	7	plane[1][i]
water	42:51	0:0	8	plane
op	42:56	0:0	8	[
water	42:57	0:0	8	1
op	42:58	0:0	8	]
op	42:59	0:0	8	[
water	42:60	0:0	8	i
op	42:61	0:0	8	]
arg	42:64	42:75	7	w*h>>2*!!i
water	42:64	0:0	8	w
op	42:65	0:0	8	*
water	42:66	0:0	8	h
op	42:67	0:0	8	>>
water	42:69	0:0	8	2
op	42:70	0:0	8	*
op	42:71	0:0	8	!
op	42:72	0:0	8	!
water	42:73	0:0	8	i
water	42:76	0:0	6	;
water	43:12	0:0	6	ssim_one
op	43:20	0:0	6	[
water	43:21	0:0	6	i
op	43:22	0:0	6	]
op	43:24	0:0	6	=
call	43:26	45:64	6	ssim_plane
arg	43:38	43:49	7	plane[0][i]
water	43:38	0:0	8	plane
op	43:43	0:0	8	[
water	43:44	0:0	8	0
op	43:45	0:0	8	]
op	43:46	0:0	8	[
water	43:47	0:0	8	i
op	43:48	0:0	8	]
arg	43:51	43:57	7	w>>!!i
water	43:51	0:0	8	w
op	43:52	0:0	8	>>
op	43:54	0:0	8	!
op	43:55	0:0	8	!
water	43:56	0:0	8	i
arg	44:37	44:48	7	plane[1][i]
water	44:37	0:0	8	plane
op	44:42	0:0	8	[
water	44:43	0:0	8	1
op	44:44	0:0	8	]
op	44:45	0:0	8	[
water	44:46	0:0	8	i
op	44:47	0:0	8	]
arg	44:50	44:56	7	w>>!!i
water	44:50	0:0	8	w
op	44:51	0:0	8	>>
op	44:53	0:0	8	!
op	44:54	0:0	8	!
water	44:55	0:0	8	i
arg	45:37	45:43	7	w>>!!i
water	45:37	0:0	8	w
op	45:38	0:0	8	>>
op	45:40	0:0	8	!
op	45:41	0:0	8	!
water	45:42	0:0	8	i
arg	45:45	45:51	7	h>>!!i
water	45:45	0:0	8	h
op	45:46	0:0	8	>>
op	45:48	0:0	8	!
op	45:49	0:0	8	!
water	45:50	0:0	8	i
arg	45:53	45:57	7	temp
water	45:53	0:0	8	temp
arg	45:59	45:64	7	NULL
water	45:59	0:0	8	NULL
water	45:65	0:0	6	;
water	46:12	0:0	6	ssd
op	46:15	0:0	6	[
water	46:16	0:0	6	i
op	46:17	0:0	6	]
op	46:19	0:0	6	+=
water	46:22	0:0	6	ssd_one
op	46:29	0:0	6	[
water	46:30	0:0	6	i
op	46:31	0:0	6	]
water	46:32	0:0	6	;
water	47:12	0:0	6	ssim
op	47:16	0:0	6	[
water	47:17	0:0	6	i
op	47:18	0:0	6	]
op	47:20	0:0	6	+=
water	47:23	0:0	6	ssim_one
op	47:31	0:0	6	[
water	47:32	0:0	6	i
op	47:33	0:0	6	]
water	47:34	0:0	6	;
water	48:8	0:0	6	}
call	49:8	49:36	4	printf
arg	49:15	49:28	5	"Frame %d | "
water	49:15	0:0	6	"Frame %d | "
arg	49:30	49:36	5	frames
water	49:30	0:0	6	frames
water	49:37	0:0	4	;
call	50:8	50:48	4	print_results
arg	50:22	50:29	5	ssd_one
water	50:22	0:0	6	ssd_one
arg	50:31	50:39	5	ssim_one
water	50:31	0:0	6	ssim_one
arg	50:41	50:42	5	1
water	50:41	0:0	6	1
arg	50:44	50:45	5	w
water	50:44	0:0	6	w
arg	50:47	50:48	5	h
water	50:47	0:0	6	h
water	50:49	0:0	4	;
call	51:8	51:35	4	printf
arg	51:15	51:35	5	"                \r"
water	51:15	0:0	6	"                \r"
water	51:36	0:0	4	;
call	52:8	52:21	4	fflush
arg	52:15	52:21	5	stdout
water	52:15	0:0	6	stdout
water	52:22	0:0	4	;
water	53:4	0:0	4	}
if	54:4	54:26	2	(! frames)
cond	54:8	54:9	3	! frames
op	54:8	0:0	4	!
water	54:9	0:0	4	frames
stmts	54:18	54:26	3	
return	54:18	54:26	4	0
water	54:25	0:0	5	0
call	55:4	55:39	2	printf
arg	55:11	55:31	3	"Total %d frames | "
water	55:11	0:0	4	"Total %d frames | "
arg	55:33	55:39	3	frames
water	55:33	0:0	4	frames
water	55:40	0:0	2	;
call	56:4	56:41	2	print_results
arg	56:18	56:21	3	ssd
water	56:18	0:0	4	ssd
arg	56:23	56:27	3	ssim
water	56:23	0:0	4	ssim
arg	56:29	56:35	3	frames
water	56:29	0:0	4	frames
arg	56:37	56:38	3	w
water	56:37	0:0	4	w
arg	56:40	56:41	3	h
water	56:40	0:0	4	h
water	56:42	0:0	2	;
call	57:4	57:15	2	printf
arg	57:11	57:15	3	"\n"
water	57:11	0:0	4	"\n"
water	57:16	0:0	2	;
return	58:4	58:12	2	0
water	58:11	0:0	3	0

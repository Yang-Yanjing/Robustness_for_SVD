func	1:0	27:0	0	int	show_layouts
params	1:16	0:0	1	
param	1:17	1:29	2	void *	optctx
param	1:31	1:46	2	const char *	opt
param	1:48	1:63	2	const char *	arg
stmnts	0:0	26:12	1	
decl	3:4	3:13	2	int	i
op	3:10	0:0	2	=
water	3:12	0:0	2	0
decl	4:4	4:22	2	uint64_t	layout
water	4:19	0:0	2	,
decl	4:4	4:22	2	uint64_t	j
decl	5:4	5:28	2	const char	*name
water	5:20	0:0	2	,
decl	5:4	5:28	2	const char	*descr
call	6:4	7:41	2	printf
arg	6:11	7:41	3	"Individual channels:\n""NAME           DESCRIPTION\n"
water	6:11	0:0	4	"Individual channels:\n"
water	7:11	0:0	4	"NAME           DESCRIPTION\n"
water	7:42	0:0	2	;
for	8:4	14:4	2	(i = 0 ;i < 63;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < 63
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	63
forexpr	8:24	8:25	3	i ++
water	8:24	0:0	4	i
op	8:25	0:0	4	++
stmts	8:29	14:4	3	
water	8:29	0:0	4	{
water	9:8	0:0	4	name
op	9:13	0:0	4	=
call	9:15	9:51	4	av_get_channel_name
arg	9:35	9:51	5	(uint64_t)1<<i
water	9:35	0:0	6	(
water	9:36	0:0	6	uint64_t
water	9:44	0:0	6	)
water	9:45	0:0	6	1
op	9:47	0:0	6	<<
water	9:50	0:0	6	i
water	9:52	0:0	4	;
if	10:8	11:20	4	(! name)
cond	10:12	10:13	5	! name
op	10:12	0:0	6	!
water	10:13	0:0	6	name
stmts	11:12	11:20	5	
continue	11:12	11:20	6	
water	12:8	0:0	4	descr
op	12:14	0:0	4	=
call	12:16	12:59	4	av_get_channel_description
arg	12:43	12:59	5	(uint64_t)1<<i
water	12:43	0:0	6	(
water	12:44	0:0	6	uint64_t
water	12:52	0:0	6	)
water	12:53	0:0	6	1
op	12:55	0:0	6	<<
water	12:58	0:0	6	i
water	12:60	0:0	4	;
call	13:8	13:40	4	printf
arg	13:15	13:27	5	"%-14s %s\n"
water	13:15	0:0	6	"%-14s %s\n"
arg	13:29	13:33	5	name
water	13:29	0:0	6	name
arg	13:35	13:40	5	descr
water	13:35	0:0	6	descr
water	13:41	0:0	4	;
water	14:4	0:0	4	}
call	15:4	16:43	2	printf
arg	15:11	16:43	3	"\nStandard channel layouts:\n""NAME           DECOMPOSITION\n"
water	15:11	0:0	4	"\nStandard channel layouts:\n"
water	16:11	0:0	4	"NAME           DECOMPOSITION\n"
water	16:44	0:0	2	;
for	17:4	25:4	2	(i = 0 ;!av_get_standard_channel_layout (i ,& layout ,& name );i ++)
forinit	17:9	17:14	3	i = 0 ;
water	17:9	0:0	4	i
op	17:11	0:0	4	=
water	17:13	0:0	4	0
water	17:14	0:0	4	;
cond	17:16	17:65	3	!av_get_standard_channel_layout (i ,& layout ,& name )
op	17:16	0:0	4	!
call	17:17	17:65	4	av_get_standard_channel_layout
arg	17:48	17:49	5	i
water	17:48	0:0	6	i
arg	17:51	17:58	5	&layout
op	17:51	0:0	6	&
water	17:52	0:0	6	layout
arg	17:60	17:65	5	&name
op	17:60	0:0	6	&
water	17:61	0:0	6	name
forexpr	17:68	17:69	3	i ++
water	17:68	0:0	4	i
op	17:69	0:0	4	++
stmts	17:73	25:4	3	
water	17:73	0:0	4	{
if	18:8	24:8	4	(name)
cond	18:12	18:12	5	name
water	18:12	0:0	6	name
stmts	18:18	24:8	5	
water	18:18	0:0	6	{
call	19:12	19:33	6	printf
arg	19:19	19:27	7	"%-14s "
water	19:19	0:0	8	"%-14s "
arg	19:29	19:33	7	name
water	19:29	0:0	8	name
water	19:34	0:0	6	;
for	20:12	22:89	6	(j = 1 ;j;j <<= 1)
forinit	20:17	20:22	7	j = 1 ;
water	20:17	0:0	8	j
op	20:19	0:0	8	=
water	20:21	0:0	8	1
water	20:22	0:0	8	;
cond	20:24	20:24	7	j
water	20:24	0:0	8	j
forexpr	20:27	20:33	7	j <<= 1
water	20:27	0:0	8	j
op	20:29	0:0	8	<<=
water	20:33	0:0	8	1
stmts	21:16	22:89	7	
if	21:16	22:89	8	(( layout & j ))
cond	21:20	21:31	9	( layout & j )
water	21:20	0:0	10	(
water	21:21	0:0	10	layout
op	21:28	0:0	10	&
water	21:30	0:0	10	j
water	21:31	0:0	10	)
stmts	22:20	22:89	9	
call	22:20	22:88	10	printf
arg	22:27	22:33	11	"%s%s"
water	22:27	0:0	12	"%s%s"
arg	22:35	22:64	11	(layout&(j-1))?"+":""
water	22:35	0:0	12	(
water	22:36	0:0	12	layout
op	22:43	0:0	12	&
water	22:45	0:0	12	(
water	22:46	0:0	12	j
op	22:48	0:0	12	-
water	22:50	0:0	12	1
water	22:51	0:0	12	)
water	22:52	0:0	12	)
water	22:54	0:0	12	?
water	22:56	0:0	12	"+"
water	22:60	0:0	12	:
water	22:62	0:0	12	""
arg	22:66	22:88	11	av_get_channel_name(j)
call	22:66	22:87	12	av_get_channel_name
arg	22:86	22:87	13	j
water	22:86	0:0	14	j
water	22:89	0:0	10	;
call	23:12	23:23	6	printf
arg	23:19	23:23	7	"\n"
water	23:19	0:0	8	"\n"
water	23:24	0:0	6	;
water	24:8	0:0	6	}
water	25:4	0:0	4	}
return	26:4	26:12	2	0
water	26:11	0:0	3	0

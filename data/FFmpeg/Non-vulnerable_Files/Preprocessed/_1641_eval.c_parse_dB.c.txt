func	1:0	14:0	0	static int	parse_dB
params	1:19	0:0	1	
param	1:20	1:30	2	AVExpr * *	e
param	1:32	1:41	2	Parser *	p
param	1:43	1:52	2	int *	sign
stmnts	5:4	13:32	1	
if	5:4	12:4	2	(* p -> s == '-')
cond	5:8	5:17	3	* p -> s == '-'
op	5:8	0:0	4	*
water	5:9	0:0	4	p
op	5:10	0:0	4	->
water	5:12	0:0	4	s
op	5:14	0:0	4	==
water	5:17	0:0	4	'-'
stmts	5:22	12:4	3	
water	5:22	0:0	4	{
decl	6:8	6:18	4	char	*next
water	7:8	0:0	4	double
water	7:15	0:0	4	av_unused
water	7:25	0:0	4	ignored
op	7:33	0:0	4	=
call	7:35	7:53	4	strtod
arg	7:42	7:46	5	p->s
water	7:42	0:0	6	p
op	7:43	0:0	6	->
water	7:45	0:0	6	s
arg	7:48	7:53	5	&next
op	7:48	0:0	6	&
water	7:49	0:0	6	next
water	7:54	0:0	4	;
if	8:8	11:8	4	(next != p -> s && next [ 0 ] == 'd' && next [ 1 ] == 'B')
cond	8:12	8:57	5	next != p -> s && next [ 0 ] == 'd' && next [ 1 ] == 'B'
water	8:12	0:0	6	next
op	8:17	0:0	6	!=
water	8:20	0:0	6	p
op	8:21	0:0	6	->
water	8:23	0:0	6	s
op	8:25	0:0	6	&&
water	8:28	0:0	6	next
op	8:32	0:0	6	[
water	8:33	0:0	6	0
op	8:34	0:0	6	]
op	8:36	0:0	6	==
water	8:39	0:0	6	'd'
op	8:43	0:0	6	&&
water	8:46	0:0	6	next
op	8:50	0:0	6	[
water	8:51	0:0	6	1
op	8:52	0:0	6	]
op	8:54	0:0	6	==
water	8:57	0:0	6	'B'
stmts	8:62	11:8	5	
water	8:62	0:0	6	{
op	9:12	0:0	6	*
water	9:13	0:0	6	sign
op	9:18	0:0	6	=
water	9:20	0:0	6	0
water	9:21	0:0	6	;
return	10:12	10:38	6	parse_primary(e,p)
call	10:19	10:37	7	parse_primary
arg	10:33	10:34	8	e
water	10:33	0:0	9	e
arg	10:36	10:37	8	p
water	10:36	0:0	9	p
water	11:8	0:0	6	}
water	12:4	0:0	4	}
return	13:4	13:32	2	parse_pow(e,p,sign)
call	13:11	13:31	3	parse_pow
arg	13:21	13:22	4	e
water	13:21	0:0	5	e
arg	13:24	13:25	4	p
water	13:24	0:0	5	p
arg	13:27	13:31	4	sign
water	13:27	0:0	5	sign

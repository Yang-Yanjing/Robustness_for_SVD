func	1:0	30:0	0	static int	ac3_sync
params	1:19	0:0	1	
param	1:20	1:34	2	uint64_t	state
param	1:36	1:64	2	AACAC3ParseContext *	hdr_info
param	2:8	2:29	2	int *	need_next_header
param	2:31	2:51	2	int *	new_frame_start
stmnts	0:0	29:25	1	
decl	4:4	4:11	2	int	err
union	5:4	8:4	2	<anonymous_5:4>
decl	6:8	6:20	3	uint64_t	u64
decl	7:8	7:53	3	uint8_t	u8[8+AV_INPUT_BUFFER_PADDING_SIZE]
decl	5:4	8:33	2	<anonymous_5:4>	tmp
op	8:10	0:0	2	=
water	8:12	0:0	2	{
call	8:14	8:30	3	av_be2ne64
arg	8:25	8:30	4	state
water	8:25	0:0	5	state
water	8:32	0:0	2	}
decl	9:4	9:35	2	AC3HeaderInfo	hdr
water	9:21	0:0	2	,
decl	9:4	9:35	2	AC3HeaderInfo	*phdr
op	9:29	0:0	2	=
op	9:31	0:0	2	&
water	9:32	0:0	2	hdr
decl	10:4	10:21	2	GetBitContext	gbc
call	11:4	11:52	2	init_get_bits
arg	11:18	11:22	3	&gbc
op	11:18	0:0	4	&
water	11:19	0:0	4	gbc
arg	11:24	11:48	3	tmp.u8+8-AC3_HEADER_SIZE
water	11:24	0:0	4	tmp
op	11:27	0:0	4	.
water	11:28	0:0	4	u8
op	11:30	0:0	4	+
water	11:31	0:0	4	8
op	11:32	0:0	4	-
water	11:33	0:0	4	AC3_HEADER_SIZE
arg	11:50	11:52	3	54
water	11:50	0:0	4	54
water	11:53	0:0	2	;
water	12:4	0:0	2	err
op	12:8	0:0	2	=
call	12:10	12:46	2	avpriv_ac3_parse_header2
arg	12:35	12:39	3	&gbc
op	12:35	0:0	4	&
water	12:36	0:0	4	gbc
arg	12:41	12:46	3	&phdr
op	12:41	0:0	4	&
water	12:42	0:0	4	phdr
water	12:47	0:0	2	;
if	13:4	14:16	2	(err < 0)
cond	13:7	13:13	3	err < 0
water	13:7	0:0	4	err
op	13:11	0:0	4	<
water	13:13	0:0	4	0
stmts	14:8	14:16	3	
return	14:8	14:16	4	0
water	14:15	0:0	5	0
water	15:4	0:0	2	hdr_info
op	15:12	0:0	2	->
water	15:14	0:0	2	sample_rate
op	15:26	0:0	2	=
water	15:28	0:0	2	hdr
op	15:31	0:0	2	.
water	15:32	0:0	2	sample_rate
water	15:43	0:0	2	;
water	16:4	0:0	2	hdr_info
op	16:12	0:0	2	->
water	16:14	0:0	2	bit_rate
op	16:23	0:0	2	=
water	16:25	0:0	2	hdr
op	16:28	0:0	2	.
water	16:29	0:0	2	bit_rate
water	16:37	0:0	2	;
water	17:4	0:0	2	hdr_info
op	17:12	0:0	2	->
water	17:14	0:0	2	channels
op	17:23	0:0	2	=
water	17:25	0:0	2	hdr
op	17:28	0:0	2	.
water	17:29	0:0	2	channels
water	17:37	0:0	2	;
water	18:4	0:0	2	hdr_info
op	18:12	0:0	2	->
water	18:14	0:0	2	channel_layout
op	18:29	0:0	2	=
water	18:31	0:0	2	hdr
op	18:34	0:0	2	.
water	18:35	0:0	2	channel_layout
water	18:49	0:0	2	;
water	19:4	0:0	2	hdr_info
op	19:12	0:0	2	->
water	19:14	0:0	2	samples
op	19:22	0:0	2	=
water	19:24	0:0	2	hdr
op	19:27	0:0	2	.
water	19:28	0:0	2	num_blocks
op	19:39	0:0	2	*
water	19:41	0:0	2	256
water	19:44	0:0	2	;
water	20:4	0:0	2	hdr_info
op	20:12	0:0	2	->
water	20:14	0:0	2	service_type
op	20:27	0:0	2	=
water	20:29	0:0	2	hdr
op	20:32	0:0	2	.
water	20:33	0:0	2	bitstream_mode
water	20:47	0:0	2	;
if	21:4	22:62	2	(hdr . bitstream_mode == 0 x7 && hdr . channels > 1)
cond	21:8	21:52	3	hdr . bitstream_mode == 0 x7 && hdr . channels > 1
water	21:8	0:0	4	hdr
op	21:11	0:0	4	.
water	21:12	0:0	4	bitstream_mode
op	21:27	0:0	4	==
water	21:30	0:0	4	0
water	21:31	0:0	4	x7
op	21:34	0:0	4	&&
water	21:37	0:0	4	hdr
op	21:40	0:0	4	.
water	21:41	0:0	4	channels
op	21:50	0:0	4	>
water	21:52	0:0	4	1
stmts	22:8	22:62	3	
water	22:8	0:0	4	hdr_info
op	22:16	0:0	4	->
water	22:18	0:0	4	service_type
op	22:31	0:0	4	=
water	22:33	0:0	4	AV_AUDIO_SERVICE_TYPE_KARAOKE
water	22:62	0:0	4	;
if	23:4	24:45	2	(hdr . bitstream_id > 10)
cond	23:7	23:24	3	hdr . bitstream_id > 10
water	23:7	0:0	4	hdr
op	23:10	0:0	4	.
water	23:11	0:0	4	bitstream_id
op	23:23	0:0	4	>
water	23:24	0:0	4	10
stmts	24:8	24:45	3	
water	24:8	0:0	4	hdr_info
op	24:16	0:0	4	->
water	24:18	0:0	4	codec_id
op	24:27	0:0	4	=
water	24:29	0:0	4	AV_CODEC_ID_EAC3
water	24:45	0:0	4	;
else	25:4	26:44	2
stmts	25:9	26:44	3	
if	25:9	26:44	4	(hdr_info -> codec_id == AV_CODEC_ID_NONE)
cond	25:13	25:35	5	hdr_info -> codec_id == AV_CODEC_ID_NONE
water	25:13	0:0	6	hdr_info
op	25:21	0:0	6	->
water	25:23	0:0	6	codec_id
op	25:32	0:0	6	==
water	25:35	0:0	6	AV_CODEC_ID_NONE
stmts	26:8	26:44	5	
water	26:8	0:0	6	hdr_info
op	26:16	0:0	6	->
water	26:18	0:0	6	codec_id
op	26:27	0:0	6	=
water	26:29	0:0	6	AV_CODEC_ID_AC3
water	26:44	0:0	6	;
op	27:4	0:0	2	*
water	27:5	0:0	2	need_next_header
op	27:22	0:0	2	=
water	27:24	0:0	2	(
water	27:25	0:0	2	hdr
op	27:28	0:0	2	.
water	27:29	0:0	2	frame_type
op	27:40	0:0	2	!=
water	27:43	0:0	2	EAC3_FRAME_TYPE_AC3_CONVERT
water	27:70	0:0	2	)
water	27:71	0:0	2	;
op	28:4	0:0	2	*
water	28:5	0:0	2	new_frame_start
op	28:22	0:0	2	=
water	28:24	0:0	2	(
water	28:25	0:0	2	hdr
op	28:28	0:0	2	.
water	28:29	0:0	2	frame_type
op	28:40	0:0	2	!=
water	28:43	0:0	2	EAC3_FRAME_TYPE_DEPENDENT
water	28:68	0:0	2	)
water	28:69	0:0	2	;
return	29:4	29:25	2	hdr.frame_size
water	29:11	0:0	3	hdr
op	29:14	0:0	3	.
water	29:15	0:0	3	frame_size
func	31:15	37:0	0	int	ac3_parse_init
params	31:33	0:0	1	
param	31:34	31:58	2	AVCodecParserContext *	s1
stmnts	0:0	36:12	1	
decl	33:4	33:41	2	AACAC3ParseContext	*s
op	33:26	0:0	2	=
water	33:28	0:0	2	s1
op	33:30	0:0	2	->
water	33:32	0:0	2	priv_data
water	34:4	0:0	2	s
op	34:5	0:0	2	->
water	34:7	0:0	2	header_size
op	34:19	0:0	2	=
water	34:21	0:0	2	AC3_HEADER_SIZE
water	34:36	0:0	2	;
water	35:4	0:0	2	s
op	35:5	0:0	2	->
water	35:7	0:0	2	sync
op	35:12	0:0	2	=
water	35:14	0:0	2	ac3_sync
water	35:22	0:0	2	;
return	36:4	36:12	2	0
water	36:11	0:0	3	0
decl	38:0	44:1	0	AVCodecParser	ff_ac3_parser
op	38:28	0:0	0	=
water	38:30	0:0	0	{
op	39:4	0:0	0	.
water	39:5	0:0	0	codec_ids
op	39:20	0:0	0	=
water	39:22	0:0	0	{
water	39:24	0:0	0	AV_CODEC_ID_AC3
water	39:39	0:0	0	,
water	39:41	0:0	0	AV_CODEC_ID_EAC3
water	39:58	0:0	0	}
water	39:59	0:0	0	,
op	40:4	0:0	0	.
water	40:5	0:0	0	priv_data_size
op	40:20	0:0	0	=
op	40:22	0:0	0	sizeof
water	40:28	0:0	0	(
water	40:29	0:0	0	AACAC3ParseContext
water	40:47	0:0	0	)
water	40:48	0:0	0	,
op	41:4	0:0	0	.
water	41:5	0:0	0	parser_init
op	41:20	0:0	0	=
water	41:22	0:0	0	ac3_parse_init
water	41:36	0:0	0	,
op	42:4	0:0	0	.
water	42:5	0:0	0	parser_parse
op	42:20	0:0	0	=
water	42:22	0:0	0	ff_aac_ac3_parse
water	42:38	0:0	0	,
op	43:4	0:0	0	.
water	43:5	0:0	0	parser_close
op	43:20	0:0	0	=
water	43:22	0:0	0	ff_parse_close
water	43:36	0:0	0	,
water	44:0	0:0	0	}

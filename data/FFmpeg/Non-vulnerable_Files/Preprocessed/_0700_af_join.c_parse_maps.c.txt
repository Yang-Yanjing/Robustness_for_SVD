func	1:0	74:0	0	static int	parse_maps
params	1:21	0:0	1	
param	1:22	1:42	2	AVFilterContext *	ctx
stmnts	0:0	73:12	1	
decl	3:4	3:30	2	JoinContext	*s
op	3:19	0:0	2	=
water	3:21	0:0	2	ctx
op	3:24	0:0	2	->
water	3:26	0:0	2	priv
decl	4:4	4:24	2	char	separator
op	4:19	0:0	2	=
water	4:21	0:0	2	'|'
decl	5:4	5:27	2	char	*cur
op	5:19	0:0	2	=
water	5:21	0:0	2	s
op	5:22	0:0	2	->
water	5:24	0:0	2	map
if	7:4	11:4	2	(cur &&strchr (cur ,',' ))
cond	7:8	7:30	3	cur &&strchr (cur ,',' )
water	7:8	0:0	4	cur
op	7:12	0:0	4	&&
call	7:15	7:30	4	strchr
arg	7:22	7:25	5	cur
water	7:22	0:0	6	cur
arg	7:27	7:30	5	','
water	7:27	0:0	6	','
stmts	7:33	11:4	3	
water	7:33	0:0	4	{
call	8:8	9:41	4	av_log
arg	8:15	8:18	5	ctx
water	8:15	0:0	6	ctx
arg	8:20	8:34	5	AV_LOG_WARNING
water	8:20	0:0	6	AV_LOG_WARNING
arg	8:36	9:41	5	"This syntax is deprecated, use '|' to ""separate the mappings.\n"
water	8:36	0:0	6	"This syntax is deprecated, use '|' to "
water	9:15	0:0	6	"separate the mappings.\n"
water	9:42	0:0	4	;
water	10:8	0:0	4	separator
op	10:18	0:0	4	=
water	10:20	0:0	4	','
water	10:23	0:0	4	;
water	11:4	0:0	4	}
while	13:4	72:4	2	(cur && * cur)
cond	13:11	13:19	3	cur && * cur
water	13:11	0:0	4	cur
op	13:15	0:0	4	&&
op	13:18	0:0	4	*
water	13:19	0:0	4	cur
stmts	13:24	72:4	3	
water	13:24	0:0	4	{
decl	14:8	14:28	4	char	*sep
water	14:17	0:0	4	,
decl	14:8	14:28	4	char	*next
water	14:24	0:0	4	,
decl	14:8	14:28	4	char	*p
decl	15:8	15:48	4	uint64_t	in_channel
op	15:28	0:0	4	=
water	15:30	0:0	4	0
water	15:31	0:0	4	,
decl	15:8	15:48	4	uint64_t	out_channel
op	15:45	0:0	4	=
water	15:47	0:0	4	0
decl	16:8	16:44	4	int	input_idx
water	16:21	0:0	4	,
decl	16:8	16:44	4	int	out_ch_idx
water	16:33	0:0	4	,
decl	16:8	16:44	4	int	in_ch_idx
water	17:8	0:0	4	next
op	17:13	0:0	4	=
call	17:15	17:36	4	strchr
arg	17:22	17:25	5	cur
water	17:22	0:0	6	cur
arg	17:27	17:36	5	separator
water	17:27	0:0	6	separator
water	17:37	0:0	4	;
if	18:8	19:23	4	(next)
cond	18:12	18:12	5	next
water	18:12	0:0	6	next
stmts	19:12	19:23	5	
op	19:12	0:0	6	*
water	19:13	0:0	6	next
op	19:17	0:0	6	++
op	19:20	0:0	6	=
water	19:22	0:0	6	0
water	19:23	0:0	6	;
if	21:8	25:8	4	(! ( sep =strchr (cur ,'-' ) ))
cond	21:12	21:36	5	! ( sep =strchr (cur ,'-' ) )
op	21:12	0:0	6	!
water	21:13	0:0	6	(
water	21:14	0:0	6	sep
op	21:18	0:0	6	=
call	21:20	21:35	6	strchr
arg	21:27	21:30	7	cur
water	21:27	0:0	8	cur
arg	21:32	21:35	7	'-'
water	21:32	0:0	8	'-'
water	21:36	0:0	6	)
stmts	21:39	25:8	5	
water	21:39	0:0	6	{
call	22:12	23:36	6	av_log
arg	22:19	22:22	7	ctx
water	22:19	0:0	8	ctx
arg	22:24	22:36	7	AV_LOG_ERROR
water	22:24	0:0	8	AV_LOG_ERROR
arg	22:38	23:31	7	"Missing separator '-' in channel ""map '%s'\n"
water	22:38	0:0	8	"Missing separator '-' in channel "
water	23:19	0:0	8	"map '%s'\n"
arg	23:33	23:36	7	cur
water	23:33	0:0	8	cur
water	23:37	0:0	6	;
return	24:12	24:34	6	AVERROR(EINVAL)
call	24:19	24:33	7	AVERROR
arg	24:27	24:33	8	EINVAL
water	24:27	0:0	9	EINVAL
water	25:8	0:0	6	}
op	26:8	0:0	4	*
water	26:9	0:0	4	sep
op	26:12	0:0	4	++
op	26:15	0:0	4	=
water	26:17	0:0	4	0
water	26:18	0:0	4	;
if	28:8	31:8	4	(! ( var =av_get_channel_layout (str ) ))
cond	28:12	28:46	5	! ( var =av_get_channel_layout (str ) )
op	28:12	0:0	6	!
water	28:13	0:0	6	(
water	28:14	0:0	6	var
op	28:18	0:0	6	=
call	28:20	28:45	6	av_get_channel_layout
arg	28:42	28:45	7	str
water	28:42	0:0	8	str
water	28:46	0:0	6	)
stmts	28:49	31:8	5	
water	28:49	0:0	6	{
call	29:12	29:77	6	av_log
arg	29:19	29:22	7	ctx
water	29:19	0:0	8	ctx
arg	29:24	29:36	7	AV_LOG_ERROR
water	29:24	0:0	8	AV_LOG_ERROR
arg	29:38	29:72	7	"Invalid "inout" channel: %s.\n"
water	29:38	0:0	8	"Invalid "
water	29:49	0:0	8	inout
water	29:55	0:0	8	" channel: %s.\n"
arg	29:74	29:77	7	str
water	29:74	0:0	8	str
water	29:78	0:0	6	;
return	30:12	30:34	6	AVERROR(EINVAL)
call	30:19	30:33	7	AVERROR
arg	30:27	30:33	8	EINVAL
water	30:27	0:0	9	EINVAL
water	31:8	0:0	6	}
if	32:8	36:8	4	(av_get_channel_layout_nb_channels (var ) != 1)
cond	32:12	32:54	5	av_get_channel_layout_nb_channels (var ) != 1
call	32:12	32:49	6	av_get_channel_layout_nb_channels
arg	32:46	32:49	7	var
water	32:46	0:0	8	var
op	32:51	0:0	6	!=
water	32:54	0:0	6	1
stmts	32:57	36:8	5	
water	32:57	0:0	6	{
call	33:12	34:38	6	av_log
arg	33:19	33:22	7	ctx
water	33:19	0:0	8	ctx
arg	33:24	33:36	7	AV_LOG_ERROR
water	33:24	0:0	8	AV_LOG_ERROR
arg	33:38	34:38	7	"Channel map describes more than one "inout" channel.\n"
water	33:38	0:0	8	"Channel map describes more than one "
water	34:19	0:0	8	inout
water	34:25	0:0	8	" channel.\n"
water	34:39	0:0	6	;
return	35:12	35:34	6	AVERROR(EINVAL)
call	35:19	35:33	7	AVERROR
arg	35:27	35:33	8	EINVAL
water	35:27	0:0	9	EINVAL
water	36:8	0:0	6	}
call	38:8	38:48	4	PARSE_CHANNEL
arg	38:22	38:25	5	sep
water	38:22	0:0	6	sep
arg	38:27	38:38	5	out_channel
water	38:27	0:0	6	out_channel
arg	38:40	38:48	5	"output"
water	38:40	0:0	6	"output"
water	38:49	0:0	4	;
if	39:8	43:8	4	(! ( out_channel & s -> channel_layout ))
cond	39:12	39:45	5	! ( out_channel & s -> channel_layout )
op	39:12	0:0	6	!
water	39:13	0:0	6	(
water	39:14	0:0	6	out_channel
op	39:26	0:0	6	&
water	39:28	0:0	6	s
op	39:29	0:0	6	->
water	39:31	0:0	6	channel_layout
water	39:45	0:0	6	)
stmts	39:48	43:8	5	
water	39:48	0:0	6	{
call	40:12	41:53	6	av_log
arg	40:19	40:22	7	ctx
water	40:19	0:0	8	ctx
arg	40:24	40:36	7	AV_LOG_ERROR
water	40:24	0:0	8	AV_LOG_ERROR
arg	40:38	41:48	7	"Output channel '%s' is not present in ""requested channel layout.\n"
water	40:38	0:0	8	"Output channel '%s' is not present in "
water	41:19	0:0	8	"requested channel layout.\n"
arg	41:50	41:53	7	sep
water	41:50	0:0	8	sep
water	41:54	0:0	6	;
return	42:12	42:34	6	AVERROR(EINVAL)
call	42:19	42:33	7	AVERROR
arg	42:27	42:33	8	EINVAL
water	42:27	0:0	9	EINVAL
water	43:8	0:0	6	}
water	44:8	0:0	4	out_ch_idx
op	44:19	0:0	4	=
call	44:21	45:68	4	av_get_channel_layout_channel_index
arg	44:57	44:74	5	s->channel_layout
water	44:57	0:0	6	s
op	44:58	0:0	6	->
water	44:60	0:0	6	channel_layout
arg	45:57	45:68	5	out_channel
water	45:57	0:0	6	out_channel
water	45:69	0:0	4	;
if	46:8	50:8	4	(s -> channels [ out_ch_idx ] . input >= 0)
cond	46:12	46:45	5	s -> channels [ out_ch_idx ] . input >= 0
water	46:12	0:0	6	s
op	46:13	0:0	6	->
water	46:15	0:0	6	channels
op	46:23	0:0	6	[
water	46:24	0:0	6	out_ch_idx
op	46:34	0:0	6	]
op	46:35	0:0	6	.
water	46:36	0:0	6	input
op	46:42	0:0	6	>=
water	46:45	0:0	6	0
stmts	46:48	50:8	5	
water	46:48	0:0	6	{
call	47:12	48:33	6	av_log
arg	47:19	47:22	7	ctx
water	47:19	0:0	8	ctx
arg	47:24	47:36	7	AV_LOG_ERROR
water	47:24	0:0	8	AV_LOG_ERROR
arg	47:38	48:28	7	"Multiple maps for output channel ""'%s'.\n"
water	47:38	0:0	8	"Multiple maps for output channel "
water	48:19	0:0	8	"'%s'.\n"
arg	48:30	48:33	7	sep
water	48:30	0:0	8	sep
water	48:34	0:0	6	;
return	49:12	49:34	6	AVERROR(EINVAL)
call	49:19	49:33	7	AVERROR
arg	49:27	49:33	8	EINVAL
water	49:27	0:0	9	EINVAL
water	50:8	0:0	6	}
water	52:8	0:0	4	input_idx
op	52:18	0:0	4	=
call	52:20	52:39	4	strtol
arg	52:27	52:30	5	cur
water	52:27	0:0	6	cur
arg	52:32	52:36	5	&cur
op	52:32	0:0	6	&
water	52:33	0:0	6	cur
arg	52:38	52:39	5	0
water	52:38	0:0	6	0
water	52:40	0:0	4	;
if	53:8	57:8	4	(input_idx < 0 || input_idx >= s -> inputs)
cond	53:12	53:45	5	input_idx < 0 || input_idx >= s -> inputs
water	53:12	0:0	6	input_idx
op	53:22	0:0	6	<
water	53:24	0:0	6	0
op	53:26	0:0	6	||
water	53:29	0:0	6	input_idx
op	53:39	0:0	6	>=
water	53:42	0:0	6	s
op	53:43	0:0	6	->
water	53:45	0:0	6	inputs
stmts	53:53	57:8	5	
water	53:53	0:0	6	{
call	54:12	55:28	6	av_log
arg	54:19	54:22	7	ctx
water	54:19	0:0	8	ctx
arg	54:24	54:36	7	AV_LOG_ERROR
water	54:24	0:0	8	AV_LOG_ERROR
arg	54:38	54:73	7	"Invalid input stream index: %d.\n"
water	54:38	0:0	8	"Invalid input stream index: %d.\n"
arg	55:19	55:28	7	input_idx
water	55:19	0:0	8	input_idx
water	55:29	0:0	6	;
return	56:12	56:34	6	AVERROR(EINVAL)
call	56:19	56:33	7	AVERROR
arg	56:27	56:33	8	EINVAL
water	56:27	0:0	9	EINVAL
water	57:8	0:0	6	}
if	58:8	59:17	4	(* cur)
cond	58:12	58:13	5	* cur
op	58:12	0:0	6	*
water	58:13	0:0	6	cur
stmts	59:12	59:17	5	
water	59:12	0:0	6	cur
op	59:15	0:0	6	++
water	59:17	0:0	6	;
water	60:8	0:0	4	in_ch_idx
op	60:18	0:0	4	=
call	60:20	60:37	4	strtol
arg	60:27	60:30	5	cur
water	60:27	0:0	6	cur
arg	60:32	60:34	5	&p
op	60:32	0:0	6	&
water	60:33	0:0	6	p
arg	60:36	60:37	5	0
water	60:36	0:0	6	0
water	60:38	0:0	4	;
if	61:8	65:8	4	(p == cur)
cond	61:12	61:17	5	p == cur
water	61:12	0:0	6	p
op	61:14	0:0	6	==
water	61:17	0:0	6	cur
stmts	61:22	65:8	5	
water	61:22	0:0	6	{
call	64:12	64:50	6	PARSE_CHANNEL
arg	64:26	64:29	7	cur
water	64:26	0:0	8	cur
arg	64:31	64:41	7	in_channel
water	64:31	0:0	8	in_channel
arg	64:43	64:50	7	"input"
water	64:43	0:0	8	"input"
water	64:51	0:0	6	;
water	65:8	0:0	6	}
water	66:8	0:0	4	s
op	66:9	0:0	4	->
water	66:11	0:0	4	channels
op	66:19	0:0	4	[
water	66:20	0:0	4	out_ch_idx
op	66:30	0:0	4	]
op	66:31	0:0	4	.
water	66:32	0:0	4	input
op	66:43	0:0	4	=
water	66:45	0:0	4	input_idx
water	66:54	0:0	4	;
if	67:8	68:59	4	(in_channel)
cond	67:12	67:12	5	in_channel
water	67:12	0:0	6	in_channel
stmts	68:12	68:59	5	
water	68:12	0:0	6	s
op	68:13	0:0	6	->
water	68:15	0:0	6	channels
op	68:23	0:0	6	[
water	68:24	0:0	6	out_ch_idx
op	68:34	0:0	6	]
op	68:35	0:0	6	.
water	68:36	0:0	6	in_channel
op	68:47	0:0	6	=
water	68:49	0:0	6	in_channel
water	68:59	0:0	6	;
else	69:8	70:62	4
stmts	70:12	70:62	5	
water	70:12	0:0	6	s
op	70:13	0:0	6	->
water	70:15	0:0	6	channels
op	70:23	0:0	6	[
water	70:24	0:0	6	out_ch_idx
op	70:34	0:0	6	]
op	70:35	0:0	6	.
water	70:36	0:0	6	in_channel_idx
op	70:51	0:0	6	=
water	70:53	0:0	6	in_ch_idx
water	70:62	0:0	6	;
water	71:8	0:0	4	cur
op	71:12	0:0	4	=
water	71:14	0:0	4	next
water	71:18	0:0	4	;
water	72:4	0:0	4	}
return	73:4	73:12	2	0
water	73:11	0:0	3	0

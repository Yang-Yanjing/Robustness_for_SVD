func	1:0	54:0	0	static int	rtmp_write_amf_data
params	1:30	0:0	1	
param	1:31	1:44	2	URLContext *	s
param	1:46	1:57	2	char *	param
param	1:59	1:70	2	uint8_t * *	p
stmnts	0:0	53:26	1	
decl	3:4	3:23	2	char	*field
water	3:15	0:0	2	,
decl	3:4	3:23	2	char	*value
decl	4:4	4:13	2	char	type
if	12:4	15:4	2	(param [ 0 ] && param [ 1 ] == ':')
cond	12:8	12:32	3	param [ 0 ] && param [ 1 ] == ':'
water	12:8	0:0	4	param
op	12:13	0:0	4	[
water	12:14	0:0	4	0
op	12:15	0:0	4	]
op	12:17	0:0	4	&&
water	12:20	0:0	4	param
op	12:25	0:0	4	[
water	12:26	0:0	4	1
op	12:27	0:0	4	]
op	12:29	0:0	4	==
water	12:32	0:0	4	':'
stmts	12:37	15:4	3	
water	12:37	0:0	4	{
water	13:8	0:0	4	type
op	13:13	0:0	4	=
water	13:15	0:0	4	param
op	13:20	0:0	4	[
water	13:21	0:0	4	0
op	13:22	0:0	4	]
water	13:23	0:0	4	;
water	14:8	0:0	4	value
op	14:14	0:0	4	=
water	14:16	0:0	4	param
op	14:22	0:0	4	+
water	14:24	0:0	4	2
water	14:25	0:0	4	;
water	15:4	0:0	4	}
else	15:6	24:4	2
stmts	15:11	24:4	3	
if	15:11	24:4	4	(param [ 0 ] == 'N' && param [ 1 ] && param [ 2 ] == ':')
cond	15:15	15:58	5	param [ 0 ] == 'N' && param [ 1 ] && param [ 2 ] == ':'
water	15:15	0:0	6	param
op	15:20	0:0	6	[
water	15:21	0:0	6	0
op	15:22	0:0	6	]
op	15:24	0:0	6	==
water	15:27	0:0	6	'N'
op	15:31	0:0	6	&&
water	15:34	0:0	6	param
op	15:39	0:0	6	[
water	15:40	0:0	6	1
op	15:41	0:0	6	]
op	15:43	0:0	6	&&
water	15:46	0:0	6	param
op	15:51	0:0	6	[
water	15:52	0:0	6	2
op	15:53	0:0	6	]
op	15:55	0:0	6	==
water	15:58	0:0	6	':'
stmts	15:63	24:4	5	
water	15:63	0:0	6	{
water	16:8	0:0	6	type
op	16:13	0:0	6	=
water	16:15	0:0	6	param
op	16:20	0:0	6	[
water	16:21	0:0	6	1
op	16:22	0:0	6	]
water	16:23	0:0	6	;
water	17:8	0:0	6	field
op	17:14	0:0	6	=
water	17:16	0:0	6	param
op	17:22	0:0	6	+
water	17:24	0:0	6	3
water	17:25	0:0	6	;
water	18:8	0:0	6	value
op	18:14	0:0	6	=
call	18:16	18:33	6	strchr
arg	18:23	18:28	7	field
water	18:23	0:0	8	field
arg	18:30	18:33	7	':'
water	18:30	0:0	8	':'
water	18:34	0:0	6	;
if	19:8	20:21	6	(! value)
cond	19:12	19:13	7	! value
op	19:12	0:0	8	!
water	19:13	0:0	8	value
stmts	20:12	20:21	7	
goto	20:12	20:21	8	fail
water	20:17	0:0	9	fail
op	21:8	0:0	6	*
water	21:9	0:0	6	value
op	21:15	0:0	6	=
water	21:17	0:0	6	'\0'
water	21:21	0:0	6	;
water	22:8	0:0	6	value
op	22:13	0:0	6	++
water	22:15	0:0	6	;
call	23:8	23:40	6	ff_amf_write_field_name
arg	23:32	23:33	7	p
water	23:32	0:0	8	p
arg	23:35	23:40	7	field
water	23:35	0:0	8	field
water	23:41	0:0	6	;
water	24:4	0:0	6	}
else	24:6	26:4	2
stmts	24:11	26:4	3	
water	24:11	0:0	4	{
goto	25:8	25:17	4	fail
water	25:13	0:0	5	fail
water	26:4	0:0	4	}
switch	27:4	49:4	2	(type)
cond	27:12	27:12	3	type
water	27:12	0:0	4	type
stmts	27:18	49:4	3	
water	27:18	0:0	4	{
water	28:4	0:0	4	case
water	28:9	0:0	4	'B'
water	28:12	0:0	4	:
call	29:8	29:44	4	ff_amf_write_bool
arg	29:26	29:27	5	p
water	29:26	0:0	6	p
arg	29:29	29:44	5	value[0]!='0'
water	29:29	0:0	6	value
op	29:34	0:0	6	[
water	29:35	0:0	6	0
op	29:36	0:0	6	]
op	29:38	0:0	6	!=
water	29:41	0:0	6	'0'
water	29:45	0:0	4	;
break	30:8	30:13	4	
water	31:4	0:0	4	case
water	31:9	0:0	4	'S'
water	31:12	0:0	4	:
call	32:8	32:36	4	ff_amf_write_string
arg	32:28	32:29	5	p
water	32:28	0:0	6	p
arg	32:31	32:36	5	value
water	32:31	0:0	6	value
water	32:37	0:0	4	;
break	33:8	33:13	4	
water	34:4	0:0	4	case
water	34:9	0:0	4	'N'
water	34:12	0:0	4	:
call	35:8	35:50	4	ff_amf_write_number
arg	35:28	35:29	5	p
water	35:28	0:0	6	p
arg	35:31	35:50	5	strtod(value,NULL)
call	35:31	35:49	6	strtod
arg	35:38	35:43	7	value
water	35:38	0:0	8	value
arg	35:45	35:49	7	NULL
water	35:45	0:0	8	NULL
water	35:51	0:0	4	;
break	36:8	36:13	4	
water	37:4	0:0	4	case
water	37:9	0:0	4	'Z'
water	37:12	0:0	4	:
call	38:8	38:27	4	ff_amf_write_null
arg	38:26	38:27	5	p
water	38:26	0:0	6	p
water	38:28	0:0	4	;
break	39:8	39:13	4	
water	40:4	0:0	4	case
water	40:9	0:0	4	'O'
water	40:12	0:0	4	:
water	41:8	0:0	4	if
water	41:11	0:0	4	(
water	41:12	0:0	4	value
op	41:17	0:0	4	[
water	41:18	0:0	4	0
op	41:19	0:0	4	]
op	41:21	0:0	4	!=
water	41:24	0:0	4	'0'
water	41:27	0:0	4	)
call	42:12	42:39	4	ff_amf_write_object_start
arg	42:38	42:39	5	p
water	42:38	0:0	6	p
water	42:40	0:0	4	;
else	43:8	44:38	4
stmts	44:12	44:38	5	
call	44:12	44:37	6	ff_amf_write_object_end
arg	44:36	44:37	7	p
water	44:36	0:0	8	p
water	44:38	0:0	6	;
break	45:8	45:13	4	
label	46:4	46:11	4	default :
goto	47:8	47:17	4	fail
water	47:13	0:0	5	fail
break	48:8	48:13	4	
water	49:4	0:0	4	}
return	50:4	50:12	2	0
water	50:11	0:0	3	0
label	51:0	51:4	2	fail :
call	52:4	52:64	2	av_log
arg	52:11	52:12	3	s
water	52:11	0:0	4	s
arg	52:14	52:26	3	AV_LOG_ERROR
water	52:14	0:0	4	AV_LOG_ERROR
arg	52:28	52:57	3	"Invalid AMF parameter: %s\n"
water	52:28	0:0	4	"Invalid AMF parameter: %s\n"
arg	52:59	52:64	3	param
water	52:59	0:0	4	param
water	52:65	0:0	2	;
return	53:4	53:26	2	AVERROR(EINVAL)
call	53:11	53:25	3	AVERROR
arg	53:19	53:25	4	EINVAL
water	53:19	0:0	5	EINVAL

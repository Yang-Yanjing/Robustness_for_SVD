func	1:0	140:0	0	static int	dshow_open_device
params	2:17	0:0	1	
param	2:18	2:40	2	AVFormatContext *	avctx
param	2:42	2:65	2	ICreateDevEnum *	devenum
param	3:18	3:46	2	enum dshowDeviceType	devtype
param	3:48	3:85	2	enum dshowSourceFilterType	sourcetype
stmnts	0:0	139:14	1	
decl	5:4	5:44	2	struct dshow_ctx	*ctx
op	5:26	0:0	2	=
water	5:28	0:0	2	avctx
op	5:33	0:0	2	->
water	5:35	0:0	2	priv_data
decl	6:4	6:37	2	IBaseFilter	*device_filter
op	6:31	0:0	2	=
water	6:33	0:0	2	NULL
decl	7:4	7:37	2	IGraphBuilder	*graph
op	7:25	0:0	2	=
water	7:27	0:0	2	ctx
op	7:30	0:0	2	->
water	7:32	0:0	2	graph
decl	8:4	8:27	2	IPin	*device_pin
op	8:21	0:0	2	=
water	8:23	0:0	2	NULL
decl	9:4	9:32	2	libAVPin	*capture_pin
op	9:26	0:0	2	=
water	9:28	0:0	2	NULL
decl	10:4	10:38	2	libAVFilter	*capture_filter
op	10:32	0:0	2	=
water	10:34	0:0	2	NULL
decl	11:4	11:48	2	ICaptureGraphBuilder2	*graph_builder2
op	11:42	0:0	2	=
water	11:44	0:0	2	NULL
decl	12:4	12:26	2	int	ret
op	12:12	0:0	2	=
call	12:14	12:25	3	AVERROR
arg	12:22	12:25	4	EIO
water	12:22	0:0	5	EIO
decl	13:4	13:9	2	int	r
decl	14:4	14:32	2	IStream	*ifile_stream
op	14:26	0:0	2	=
water	14:28	0:0	2	NULL
decl	15:4	15:32	2	IStream	*ofile_stream
op	15:26	0:0	2	=
water	15:28	0:0	2	NULL
decl	16:4	16:38	2	IPersistStream	*pers_stream
op	16:32	0:0	2	=
water	16:34	0:0	2	NULL
decl	17:4	17:88	2	const wchar_t	*filter_name[2]
op	17:34	0:0	2	=
water	17:36	0:0	2	{
water	17:38	0:0	2	L
water	17:39	0:0	2	"Audio capture filter"
water	17:61	0:0	2	,
water	17:63	0:0	2	L
water	17:64	0:0	2	"Video capture filter"
water	17:87	0:0	2	}
if	18:4	41:4	2	(( ( ctx -> audio_filter_load_file ) && (strlen (ctx -> audio_filter_load_file ) > 0 ) && ( sourcetype == AudioSourceDevice ) ) || ( ( ctx -> video_filter_load_file ) && (strlen (ctx -> video_filter_load_file ) > 0 ) && ( sourcetype == VideoSourceDevice ) ))
cond	18:9	19:122	3	( ( ctx -> audio_filter_load_file ) && (strlen (ctx -> audio_filter_load_file ) > 0 ) && ( sourcetype == AudioSourceDevice ) ) || ( ( ctx -> video_filter_load_file ) && (strlen (ctx -> video_filter_load_file ) > 0 ) && ( sourcetype == VideoSourceDevice ) )
water	18:9	0:0	4	(
water	18:10	0:0	4	(
water	18:11	0:0	4	ctx
op	18:14	0:0	4	->
water	18:16	0:0	4	audio_filter_load_file
water	18:38	0:0	4	)
op	18:40	0:0	4	&&
water	18:43	0:0	4	(
call	18:44	18:78	4	strlen
arg	18:51	18:78	5	ctx->audio_filter_load_file
water	18:51	0:0	6	ctx
op	18:54	0:0	6	->
water	18:56	0:0	6	audio_filter_load_file
op	18:79	0:0	4	>
water	18:80	0:0	4	0
water	18:81	0:0	4	)
op	18:83	0:0	4	&&
water	18:86	0:0	4	(
water	18:87	0:0	4	sourcetype
op	18:98	0:0	4	==
water	18:101	0:0	4	AudioSourceDevice
water	18:118	0:0	4	)
water	18:119	0:0	4	)
op	18:121	0:0	4	||
water	19:12	0:0	4	(
water	19:13	0:0	4	(
water	19:14	0:0	4	ctx
op	19:17	0:0	4	->
water	19:19	0:0	4	video_filter_load_file
water	19:41	0:0	4	)
op	19:43	0:0	4	&&
water	19:46	0:0	4	(
call	19:47	19:81	4	strlen
arg	19:54	19:81	5	ctx->video_filter_load_file
water	19:54	0:0	6	ctx
op	19:57	0:0	6	->
water	19:59	0:0	6	video_filter_load_file
op	19:82	0:0	4	>
water	19:83	0:0	4	0
water	19:84	0:0	4	)
op	19:86	0:0	4	&&
water	19:89	0:0	4	(
water	19:90	0:0	4	sourcetype
op	19:101	0:0	4	==
water	19:104	0:0	4	VideoSourceDevice
water	19:121	0:0	4	)
water	19:122	0:0	4	)
stmts	19:126	41:4	3	
water	19:126	0:0	4	{
decl	20:8	20:18	4	HRESULT	hr
decl	21:8	21:29	4	char	*filename
op	21:23	0:0	4	=
water	21:25	0:0	4	NULL
if	22:8	23:50	4	(sourcetype == AudioSourceDevice)
cond	22:12	22:26	5	sourcetype == AudioSourceDevice
water	22:12	0:0	6	sourcetype
op	22:23	0:0	6	==
water	22:26	0:0	6	AudioSourceDevice
stmts	23:12	23:50	5	
water	23:12	0:0	6	filename
op	23:21	0:0	6	=
water	23:23	0:0	6	ctx
op	23:26	0:0	6	->
water	23:28	0:0	6	audio_filter_load_file
water	23:50	0:0	6	;
else	24:8	25:50	4
stmts	25:12	25:50	5	
water	25:12	0:0	6	filename
op	25:21	0:0	6	=
water	25:23	0:0	6	ctx
op	25:26	0:0	6	->
water	25:28	0:0	6	video_filter_load_file
water	25:50	0:0	6	;
water	26:8	0:0	4	hr
op	26:11	0:0	4	=
call	26:13	26:78	4	SHCreateStreamOnFile
arg	26:35	26:52	5	(LPCSTR)filename
water	26:35	0:0	6	(
water	26:36	0:0	6	LPCSTR
water	26:42	0:0	6	)
water	26:44	0:0	6	filename
arg	26:54	26:63	5	STGM_READ
water	26:54	0:0	6	STGM_READ
arg	26:65	26:78	5	&ifile_stream
op	26:65	0:0	6	&
water	26:66	0:0	6	ifile_stream
water	26:79	0:0	4	;
if	27:8	30:8	4	(S_OK != hr)
cond	27:12	27:20	5	S_OK != hr
water	27:12	0:0	6	S_OK
op	27:17	0:0	6	!=
water	27:20	0:0	6	hr
stmts	27:24	30:8	5	
water	27:24	0:0	6	{
call	28:12	28:91	6	av_log
arg	28:19	28:24	7	avctx
water	28:19	0:0	8	avctx
arg	28:26	28:38	7	AV_LOG_ERROR
water	28:26	0:0	8	AV_LOG_ERROR
arg	28:40	28:91	7	"Could not open capture filter description file.\n"
water	28:40	0:0	8	"Could not open capture filter description file.\n"
water	28:92	0:0	6	;
goto	29:12	29:22	6	error
water	29:17	0:0	7	error
water	30:8	0:0	6	}
water	31:8	0:0	4	hr
op	31:11	0:0	4	=
call	31:13	31:87	4	OleLoadFromStream
arg	31:31	31:43	5	ifile_stream
water	31:31	0:0	6	ifile_stream
arg	31:45	31:61	5	&IID_IBaseFilter
op	31:45	0:0	6	&
water	31:46	0:0	6	IID_IBaseFilter
arg	31:63	31:87	5	(void**)&device_filter
water	31:63	0:0	6	(
water	31:64	0:0	6	void
op	31:69	0:0	6	*
op	31:70	0:0	6	*
water	31:71	0:0	6	)
op	31:73	0:0	6	&
water	31:74	0:0	6	device_filter
water	31:88	0:0	4	;
if	32:8	35:8	4	(hr != S_OK)
cond	32:12	32:18	5	hr != S_OK
water	32:12	0:0	6	hr
op	32:15	0:0	6	!=
water	32:18	0:0	6	S_OK
stmts	32:24	35:8	5	
water	32:24	0:0	6	{
call	33:12	33:84	6	av_log
arg	33:19	33:24	7	avctx
water	33:19	0:0	8	avctx
arg	33:26	33:38	7	AV_LOG_ERROR
water	33:26	0:0	8	AV_LOG_ERROR
arg	33:40	33:84	7	"Could not load capture filter from file.\n"
water	33:40	0:0	8	"Could not load capture filter from file.\n"
water	33:85	0:0	6	;
goto	34:12	34:22	6	error
water	34:17	0:0	7	error
water	35:8	0:0	6	}
if	36:8	37:48	4	(sourcetype == AudioSourceDevice)
cond	36:12	36:26	5	sourcetype == AudioSourceDevice
water	36:12	0:0	6	sourcetype
op	36:23	0:0	6	==
water	36:26	0:0	6	AudioSourceDevice
stmts	37:12	37:48	5	
call	37:12	37:47	6	av_log
arg	37:19	37:24	7	avctx
water	37:19	0:0	8	avctx
arg	37:26	37:37	7	AV_LOG_INFO
water	37:26	0:0	8	AV_LOG_INFO
arg	37:39	37:47	7	"Audio-"
water	37:39	0:0	8	"Audio-"
water	37:48	0:0	6	;
else	38:8	39:48	4
stmts	39:12	39:48	5	
call	39:12	39:47	6	av_log
arg	39:19	39:24	7	avctx
water	39:19	0:0	8	avctx
arg	39:26	39:37	7	AV_LOG_INFO
water	39:26	0:0	8	AV_LOG_INFO
arg	39:39	39:47	7	"Video-"
water	39:39	0:0	8	"Video-"
water	39:48	0:0	6	;
call	40:8	40:101	4	av_log
arg	40:15	40:20	5	avctx
water	40:15	0:0	6	avctx
arg	40:22	40:33	5	AV_LOG_INFO
water	40:22	0:0	6	AV_LOG_INFO
arg	40:35	40:91	5	"Capture filter loaded successfully from file \"%s\".\n"
water	40:35	0:0	6	"Capture filter loaded successfully from file \"%s\".\n"
arg	40:93	40:101	5	filename
water	40:93	0:0	6	filename
water	40:102	0:0	4	;
water	41:4	0:0	4	}
else	41:6	46:4	2
stmts	41:11	46:4	3	
water	41:11	0:0	4	{
if	42:8	45:8	4	(( r =dshow_cycle_devices (avctx ,devenum ,devtype ,sourcetype ,& device_filter ) ) < 0)
cond	42:12	42:93	5	( r =dshow_cycle_devices (avctx ,devenum ,devtype ,sourcetype ,& device_filter ) ) < 0
water	42:12	0:0	6	(
water	42:13	0:0	6	r
op	42:15	0:0	6	=
call	42:17	42:88	6	dshow_cycle_devices
arg	42:37	42:42	7	avctx
water	42:37	0:0	8	avctx
arg	42:44	42:51	7	devenum
water	42:44	0:0	8	devenum
arg	42:53	42:60	7	devtype
water	42:53	0:0	8	devtype
arg	42:62	42:72	7	sourcetype
water	42:62	0:0	8	sourcetype
arg	42:74	42:88	7	&device_filter
op	42:74	0:0	8	&
water	42:75	0:0	8	device_filter
water	42:89	0:0	6	)
op	42:91	0:0	6	<
water	42:93	0:0	6	0
stmts	42:96	45:8	5	
water	42:96	0:0	6	{
water	43:12	0:0	6	ret
op	43:16	0:0	6	=
water	43:18	0:0	6	r
water	43:19	0:0	6	;
goto	44:12	44:22	6	error
water	44:17	0:0	7	error
water	45:8	0:0	6	}
water	46:4	0:0	4	}
water	47:4	0:0	2	ctx
op	47:7	0:0	2	->
water	47:9	0:0	2	device_filter
op	47:23	0:0	2	[
water	47:24	0:0	2	devtype
op	47:31	0:0	2	]
op	47:33	0:0	2	=
water	47:35	0:0	2	device_filter
water	47:48	0:0	2	;
water	48:4	0:0	2	r
op	48:6	0:0	2	=
call	48:8	48:58	2	IGraphBuilder_AddFilter
arg	48:32	48:37	3	graph
water	48:32	0:0	4	graph
arg	48:39	48:52	3	device_filter
water	48:39	0:0	4	device_filter
arg	48:54	48:58	3	NULL
water	48:54	0:0	4	NULL
water	48:59	0:0	2	;
if	49:4	52:4	2	(r != S_OK)
cond	49:8	49:13	3	r != S_OK
water	49:8	0:0	4	r
op	49:10	0:0	4	!=
water	49:13	0:0	4	S_OK
stmts	49:19	52:4	3	
water	49:19	0:0	4	{
call	50:8	50:77	4	av_log
arg	50:15	50:20	5	avctx
water	50:15	0:0	6	avctx
arg	50:22	50:34	5	AV_LOG_ERROR
water	50:22	0:0	6	AV_LOG_ERROR
arg	50:36	50:77	5	"Could not add device filter to graph.\n"
water	50:36	0:0	6	"Could not add device filter to graph.\n"
water	50:78	0:0	4	;
goto	51:8	51:18	4	error
water	51:13	0:0	5	error
water	52:4	0:0	4	}
if	53:4	56:4	2	(( r =dshow_cycle_pins (avctx ,devtype ,sourcetype ,device_filter ,& device_pin ) ) < 0)
cond	53:8	53:89	3	( r =dshow_cycle_pins (avctx ,devtype ,sourcetype ,device_filter ,& device_pin ) ) < 0
water	53:8	0:0	4	(
water	53:9	0:0	4	r
op	53:11	0:0	4	=
call	53:13	53:84	4	dshow_cycle_pins
arg	53:30	53:35	5	avctx
water	53:30	0:0	6	avctx
arg	53:37	53:44	5	devtype
water	53:37	0:0	6	devtype
arg	53:46	53:56	5	sourcetype
water	53:46	0:0	6	sourcetype
arg	53:58	53:71	5	device_filter
water	53:58	0:0	6	device_filter
arg	53:73	53:84	5	&device_pin
op	53:73	0:0	6	&
water	53:74	0:0	6	device_pin
water	53:85	0:0	4	)
op	53:87	0:0	4	<
water	53:89	0:0	4	0
stmts	53:92	56:4	3	
water	53:92	0:0	4	{
water	54:8	0:0	4	ret
op	54:12	0:0	4	=
water	54:14	0:0	4	r
water	54:15	0:0	4	;
goto	55:8	55:18	4	error
water	55:13	0:0	5	error
water	56:4	0:0	4	}
water	57:4	0:0	2	ctx
op	57:7	0:0	2	->
water	57:9	0:0	2	device_pin
op	57:19	0:0	2	[
water	57:20	0:0	2	devtype
op	57:27	0:0	2	]
op	57:29	0:0	2	=
water	57:31	0:0	2	device_pin
water	57:41	0:0	2	;
water	58:4	0:0	2	capture_filter
op	58:19	0:0	2	=
call	58:21	58:64	2	libAVFilter_Create
arg	58:40	58:45	3	avctx
water	58:40	0:0	4	avctx
arg	58:47	58:55	3	callback
water	58:47	0:0	4	callback
arg	58:57	58:64	3	devtype
water	58:57	0:0	4	devtype
water	58:65	0:0	2	;
if	59:4	62:4	2	(! capture_filter)
cond	59:8	59:9	3	! capture_filter
op	59:8	0:0	4	!
water	59:9	0:0	4	capture_filter
stmts	59:25	62:4	3	
water	59:25	0:0	4	{
call	60:8	60:72	4	av_log
arg	60:15	60:20	5	avctx
water	60:15	0:0	6	avctx
arg	60:22	60:34	5	AV_LOG_ERROR
water	60:22	0:0	6	AV_LOG_ERROR
arg	60:36	60:72	5	"Could not create grabber filter.\n"
water	60:36	0:0	6	"Could not create grabber filter.\n"
water	60:73	0:0	4	;
goto	61:8	61:18	4	error
water	61:13	0:0	5	error
water	62:4	0:0	4	}
water	63:4	0:0	2	ctx
op	63:7	0:0	2	->
water	63:9	0:0	2	capture_filter
op	63:23	0:0	2	[
water	63:24	0:0	2	devtype
op	63:31	0:0	2	]
op	63:33	0:0	2	=
water	63:35	0:0	2	capture_filter
water	63:49	0:0	2	;
if	64:4	97:4	2	(( ( ctx -> audio_filter_save_file ) && (strlen (ctx -> audio_filter_save_file ) > 0 ) && ( sourcetype == AudioSourceDevice ) ) || ( ( ctx -> video_filter_save_file ) && (strlen (ctx -> video_filter_save_file ) > 0 ) && ( sourcetype == VideoSourceDevice ) ))
cond	64:9	65:122	3	( ( ctx -> audio_filter_save_file ) && (strlen (ctx -> audio_filter_save_file ) > 0 ) && ( sourcetype == AudioSourceDevice ) ) || ( ( ctx -> video_filter_save_file ) && (strlen (ctx -> video_filter_save_file ) > 0 ) && ( sourcetype == VideoSourceDevice ) )
water	64:9	0:0	4	(
water	64:10	0:0	4	(
water	64:11	0:0	4	ctx
op	64:14	0:0	4	->
water	64:16	0:0	4	audio_filter_save_file
water	64:38	0:0	4	)
op	64:40	0:0	4	&&
water	64:43	0:0	4	(
call	64:44	64:78	4	strlen
arg	64:51	64:78	5	ctx->audio_filter_save_file
water	64:51	0:0	6	ctx
op	64:54	0:0	6	->
water	64:56	0:0	6	audio_filter_save_file
op	64:79	0:0	4	>
water	64:80	0:0	4	0
water	64:81	0:0	4	)
op	64:83	0:0	4	&&
water	64:86	0:0	4	(
water	64:87	0:0	4	sourcetype
op	64:98	0:0	4	==
water	64:101	0:0	4	AudioSourceDevice
water	64:118	0:0	4	)
water	64:119	0:0	4	)
op	64:121	0:0	4	||
water	65:12	0:0	4	(
water	65:13	0:0	4	(
water	65:14	0:0	4	ctx
op	65:17	0:0	4	->
water	65:19	0:0	4	video_filter_save_file
water	65:41	0:0	4	)
op	65:43	0:0	4	&&
water	65:46	0:0	4	(
call	65:47	65:81	4	strlen
arg	65:54	65:81	5	ctx->video_filter_save_file
water	65:54	0:0	6	ctx
op	65:57	0:0	6	->
water	65:59	0:0	6	video_filter_save_file
op	65:82	0:0	4	>
water	65:83	0:0	4	0
water	65:84	0:0	4	)
op	65:86	0:0	4	&&
water	65:89	0:0	4	(
water	65:90	0:0	4	sourcetype
op	65:101	0:0	4	==
water	65:104	0:0	4	VideoSourceDevice
water	65:121	0:0	4	)
water	65:122	0:0	4	)
stmts	65:126	97:4	3	
water	65:126	0:0	4	{
decl	66:8	66:18	4	HRESULT	hr
decl	67:8	67:29	4	char	*filename
op	67:23	0:0	4	=
water	67:25	0:0	4	NULL
if	68:8	69:50	4	(sourcetype == AudioSourceDevice)
cond	68:12	68:26	5	sourcetype == AudioSourceDevice
water	68:12	0:0	6	sourcetype
op	68:23	0:0	6	==
water	68:26	0:0	6	AudioSourceDevice
stmts	69:12	69:50	5	
water	69:12	0:0	6	filename
op	69:21	0:0	6	=
water	69:23	0:0	6	ctx
op	69:26	0:0	6	->
water	69:28	0:0	6	audio_filter_save_file
water	69:50	0:0	6	;
else	70:8	71:50	4
stmts	71:12	71:50	5	
water	71:12	0:0	6	filename
op	71:21	0:0	6	=
water	71:23	0:0	6	ctx
op	71:26	0:0	6	->
water	71:28	0:0	6	video_filter_save_file
water	71:50	0:0	6	;
water	72:8	0:0	4	hr
op	72:11	0:0	4	=
call	72:13	72:97	4	SHCreateStreamOnFile
arg	72:35	72:52	5	(LPCSTR)filename
water	72:35	0:0	6	(
water	72:36	0:0	6	LPCSTR
water	72:42	0:0	6	)
water	72:44	0:0	6	filename
arg	72:54	72:82	5	STGM_CREATE|STGM_READWRITE
water	72:54	0:0	6	STGM_CREATE
op	72:66	0:0	6	|
water	72:68	0:0	6	STGM_READWRITE
arg	72:84	72:97	5	&ofile_stream
op	72:84	0:0	6	&
water	72:85	0:0	6	ofile_stream
water	72:98	0:0	4	;
if	73:8	76:8	4	(S_OK != hr)
cond	73:12	73:20	5	S_OK != hr
water	73:12	0:0	6	S_OK
op	73:17	0:0	6	!=
water	73:20	0:0	6	hr
stmts	73:24	76:8	5	
water	73:24	0:0	6	{
call	74:12	74:93	6	av_log
arg	74:19	74:24	7	avctx
water	74:19	0:0	8	avctx
arg	74:26	74:38	7	AV_LOG_ERROR
water	74:26	0:0	8	AV_LOG_ERROR
arg	74:40	74:93	7	"Could not create capture filter description file.\n"
water	74:40	0:0	8	"Could not create capture filter description file.\n"
water	74:94	0:0	6	;
goto	75:12	75:22	6	error
water	75:17	0:0	7	error
water	76:8	0:0	6	}
water	77:8	0:0	4	hr
op	77:12	0:0	4	=
call	77:14	77:99	4	IBaseFilter_QueryInterface
arg	77:41	77:54	5	device_filter
water	77:41	0:0	6	device_filter
arg	77:56	77:75	5	&IID_IPersistStream
op	77:56	0:0	6	&
water	77:57	0:0	6	IID_IPersistStream
arg	77:77	77:99	5	(void**)&pers_stream
water	77:77	0:0	6	(
water	77:78	0:0	6	void
op	77:83	0:0	6	*
op	77:84	0:0	6	*
water	77:85	0:0	6	)
op	77:87	0:0	6	&
water	77:88	0:0	6	pers_stream
water	77:100	0:0	4	;
if	78:8	81:8	4	(hr != S_OK)
cond	78:12	78:18	5	hr != S_OK
water	78:12	0:0	6	hr
op	78:15	0:0	6	!=
water	78:18	0:0	6	S_OK
stmts	78:24	81:8	5	
water	78:24	0:0	6	{
call	79:12	79:76	6	av_log
arg	79:19	79:24	7	avctx
water	79:19	0:0	8	avctx
arg	79:26	79:38	7	AV_LOG_ERROR
water	79:26	0:0	8	AV_LOG_ERROR
arg	79:40	79:76	7	"Query for IPersistStream failed.\n"
water	79:40	0:0	8	"Query for IPersistStream failed.\n"
water	79:77	0:0	6	;
goto	80:12	80:22	6	error
water	80:17	0:0	7	error
water	81:8	0:0	6	}
water	82:8	0:0	4	hr
op	82:11	0:0	4	=
call	82:13	82:54	4	OleSaveToStream
arg	82:29	82:40	5	pers_stream
water	82:29	0:0	6	pers_stream
arg	82:42	82:54	5	ofile_stream
water	82:42	0:0	6	ofile_stream
water	82:55	0:0	4	;
if	83:8	86:8	4	(hr != S_OK)
cond	83:12	83:18	5	hr != S_OK
water	83:12	0:0	6	hr
op	83:15	0:0	6	!=
water	83:18	0:0	6	S_OK
stmts	83:24	86:8	5	
water	83:24	0:0	6	{
call	84:12	84:74	6	av_log
arg	84:19	84:24	7	avctx
water	84:19	0:0	8	avctx
arg	84:26	84:38	7	AV_LOG_ERROR
water	84:26	0:0	8	AV_LOG_ERROR
arg	84:40	84:74	7	"Could not save capture filter \n"
water	84:40	0:0	8	"Could not save capture filter \n"
water	84:75	0:0	6	;
goto	85:12	85:22	6	error
water	85:17	0:0	7	error
water	86:8	0:0	6	}
water	87:8	0:0	4	hr
op	87:11	0:0	4	=
call	87:13	87:54	4	IStream_Commit
arg	87:28	87:40	5	ofile_stream
water	87:28	0:0	6	ofile_stream
arg	87:42	87:54	5	STGC_DEFAULT
water	87:42	0:0	6	STGC_DEFAULT
water	87:55	0:0	4	;
if	88:8	91:8	4	(S_OK != hr)
cond	88:12	88:20	5	S_OK != hr
water	88:12	0:0	6	S_OK
op	88:17	0:0	6	!=
water	88:20	0:0	6	hr
stmts	88:24	91:8	5	
water	88:24	0:0	6	{
call	89:12	89:89	6	av_log
arg	89:19	89:24	7	avctx
water	89:19	0:0	8	avctx
arg	89:26	89:38	7	AV_LOG_ERROR
water	89:26	0:0	8	AV_LOG_ERROR
arg	89:40	89:89	7	"Could not commit capture filter data to file.\n"
water	89:40	0:0	8	"Could not commit capture filter data to file.\n"
water	89:90	0:0	6	;
goto	90:12	90:22	6	error
water	90:17	0:0	7	error
water	91:8	0:0	6	}
if	92:8	93:48	4	(sourcetype == AudioSourceDevice)
cond	92:12	92:26	5	sourcetype == AudioSourceDevice
water	92:12	0:0	6	sourcetype
op	92:23	0:0	6	==
water	92:26	0:0	6	AudioSourceDevice
stmts	93:12	93:48	5	
call	93:12	93:47	6	av_log
arg	93:19	93:24	7	avctx
water	93:19	0:0	8	avctx
arg	93:26	93:37	7	AV_LOG_INFO
water	93:26	0:0	8	AV_LOG_INFO
arg	93:39	93:47	7	"Audio-"
water	93:39	0:0	8	"Audio-"
water	93:48	0:0	6	;
else	94:8	95:48	4
stmts	95:12	95:48	5	
call	95:12	95:47	6	av_log
arg	95:19	95:24	7	avctx
water	95:19	0:0	8	avctx
arg	95:26	95:37	7	AV_LOG_INFO
water	95:26	0:0	8	AV_LOG_INFO
arg	95:39	95:47	7	"Video-"
water	95:39	0:0	8	"Video-"
water	95:48	0:0	6	;
call	96:8	96:98	4	av_log
arg	96:15	96:20	5	avctx
water	96:15	0:0	6	avctx
arg	96:22	96:33	5	AV_LOG_INFO
water	96:22	0:0	6	AV_LOG_INFO
arg	96:35	96:88	5	"Capture filter saved successfully to file \"%s\".\n"
water	96:35	0:0	6	"Capture filter saved successfully to file \"%s\".\n"
arg	96:90	96:98	5	filename
water	96:90	0:0	6	filename
water	96:99	0:0	4	;
water	97:4	0:0	4	}
water	98:4	0:0	2	r
op	98:6	0:0	2	=
call	98:8	99:52	2	IGraphBuilder_AddFilter
arg	98:32	98:37	3	graph
water	98:32	0:0	4	graph
arg	98:39	98:69	3	(IBaseFilter*)capture_filter
water	98:39	0:0	4	(
water	98:40	0:0	4	IBaseFilter
op	98:52	0:0	4	*
water	98:53	0:0	4	)
water	98:55	0:0	4	capture_filter
arg	99:32	99:52	3	filter_name[devtype]
water	99:32	0:0	4	filter_name
op	99:43	0:0	4	[
water	99:44	0:0	4	devtype
op	99:51	0:0	4	]
water	99:53	0:0	2	;
if	100:4	103:4	2	(r != S_OK)
cond	100:8	100:13	3	r != S_OK
water	100:8	0:0	4	r
op	100:10	0:0	4	!=
water	100:13	0:0	4	S_OK
stmts	100:19	103:4	3	
water	100:19	0:0	4	{
call	101:8	101:77	4	av_log
arg	101:15	101:20	5	avctx
water	101:15	0:0	6	avctx
arg	101:22	101:34	5	AV_LOG_ERROR
water	101:22	0:0	6	AV_LOG_ERROR
arg	101:36	101:77	5	"Could not add capture filter to graph\n"
water	101:36	0:0	6	"Could not add capture filter to graph\n"
water	101:78	0:0	4	;
goto	102:8	102:18	4	error
water	102:13	0:0	5	error
water	103:4	0:0	4	}
call	104:4	104:39	2	libAVPin_AddRef
arg	104:20	104:39	3	capture_filter->pin
water	104:20	0:0	4	capture_filter
op	104:34	0:0	4	->
water	104:36	0:0	4	pin
water	104:40	0:0	2	;
water	105:4	0:0	2	capture_pin
op	105:16	0:0	2	=
water	105:18	0:0	2	capture_filter
op	105:32	0:0	2	->
water	105:34	0:0	2	pin
water	105:37	0:0	2	;
water	106:4	0:0	2	ctx
op	106:7	0:0	2	->
water	106:9	0:0	2	capture_pin
op	106:20	0:0	2	[
water	106:21	0:0	2	devtype
op	106:28	0:0	2	]
op	106:30	0:0	2	=
water	106:32	0:0	2	capture_pin
water	106:43	0:0	2	;
water	107:4	0:0	2	r
op	107:6	0:0	2	=
call	107:8	108:78	2	CoCreateInstance
arg	107:25	107:52	3	&CLSID_CaptureGraphBuilder2
op	107:25	0:0	4	&
water	107:26	0:0	4	CLSID_CaptureGraphBuilder2
arg	107:54	107:58	3	NULL
water	107:54	0:0	4	NULL
arg	107:60	107:80	3	CLSCTX_INPROC_SERVER
water	107:60	0:0	4	CLSCTX_INPROC_SERVER
arg	108:25	108:51	3	&IID_ICaptureGraphBuilder2
op	108:25	0:0	4	&
water	108:26	0:0	4	IID_ICaptureGraphBuilder2
arg	108:53	108:78	3	(void**)&graph_builder2
water	108:53	0:0	4	(
water	108:54	0:0	4	void
op	108:59	0:0	4	*
op	108:60	0:0	4	*
water	108:61	0:0	4	)
op	108:63	0:0	4	&
water	108:64	0:0	4	graph_builder2
water	108:79	0:0	2	;
if	109:4	112:4	2	(r != S_OK)
cond	109:8	109:13	3	r != S_OK
water	109:8	0:0	4	r
op	109:10	0:0	4	!=
water	109:13	0:0	4	S_OK
stmts	109:19	112:4	3	
water	109:19	0:0	4	{
call	110:8	110:77	4	av_log
arg	110:15	110:20	5	avctx
water	110:15	0:0	6	avctx
arg	110:22	110:34	5	AV_LOG_ERROR
water	110:22	0:0	6	AV_LOG_ERROR
arg	110:36	110:77	5	"Could not create CaptureGraphBuilder2\n"
water	110:36	0:0	6	"Could not create CaptureGraphBuilder2\n"
water	110:78	0:0	4	;
goto	111:8	111:18	4	error
water	111:13	0:0	5	error
water	112:4	0:0	4	}
call	113:4	113:62	2	ICaptureGraphBuilder2_SetFiltergraph
arg	113:41	113:55	3	graph_builder2
water	113:41	0:0	4	graph_builder2
arg	113:57	113:62	3	graph
water	113:57	0:0	4	graph
water	113:63	0:0	2	;
if	114:4	117:4	2	(r != S_OK)
cond	114:8	114:13	3	r != S_OK
water	114:8	0:0	4	r
op	114:10	0:0	4	!=
water	114:13	0:0	4	S_OK
stmts	114:19	117:4	3	
water	114:19	0:0	4	{
call	115:8	115:84	4	av_log
arg	115:15	115:20	5	avctx
water	115:15	0:0	6	avctx
arg	115:22	115:34	5	AV_LOG_ERROR
water	115:22	0:0	6	AV_LOG_ERROR
arg	115:36	115:84	5	"Could not set graph for CaptureGraphBuilder2\n"
water	115:36	0:0	6	"Could not set graph for CaptureGraphBuilder2\n"
water	115:85	0:0	4	;
goto	116:8	116:18	4	error
water	116:13	0:0	5	error
water	117:4	0:0	4	}
water	118:4	0:0	2	r
op	118:6	0:0	2	=
call	118:8	119:38	2	ICaptureGraphBuilder2_RenderStream
arg	118:43	118:57	3	graph_builder2
water	118:43	0:0	4	graph_builder2
arg	118:59	118:63	3	NULL
water	118:59	0:0	4	NULL
arg	118:65	118:69	3	NULL
water	118:65	0:0	4	NULL
arg	118:71	118:94	3	(IUnknown*)device_pin
water	118:71	0:0	4	(
water	118:72	0:0	4	IUnknown
op	118:81	0:0	4	*
water	118:82	0:0	4	)
water	118:84	0:0	4	device_pin
arg	118:96	118:101	3	NULL
water	118:96	0:0	4	NULL
arg	119:8	119:38	3	(IBaseFilter*)capture_filter
water	119:8	0:0	4	(
water	119:9	0:0	4	IBaseFilter
op	119:21	0:0	4	*
water	119:22	0:0	4	)
water	119:24	0:0	4	capture_filter
water	119:39	0:0	2	;
if	120:4	123:4	2	(r != S_OK)
cond	120:8	120:13	3	r != S_OK
water	120:8	0:0	4	r
op	120:10	0:0	4	!=
water	120:13	0:0	4	S_OK
stmts	120:19	123:4	3	
water	120:19	0:0	4	{
call	121:8	121:78	4	av_log
arg	121:15	121:20	5	avctx
water	121:15	0:0	6	avctx
arg	121:22	121:34	5	AV_LOG_ERROR
water	121:22	0:0	6	AV_LOG_ERROR
arg	121:36	121:78	5	"Could not RenderStream to connect pins\n"
water	121:36	0:0	6	"Could not RenderStream to connect pins\n"
water	121:79	0:0	4	;
goto	122:8	122:18	4	error
water	122:13	0:0	5	error
water	123:4	0:0	4	}
water	124:4	0:0	2	r
op	124:6	0:0	2	=
call	124:8	124:86	2	dshow_try_setup_crossbar_options
arg	124:41	124:55	3	graph_builder2
water	124:41	0:0	4	graph_builder2
arg	124:57	124:70	3	device_filter
water	124:57	0:0	4	device_filter
arg	124:72	124:79	3	devtype
water	124:72	0:0	4	devtype
arg	124:81	124:86	3	avctx
water	124:81	0:0	4	avctx
water	124:87	0:0	2	;
if	125:4	128:4	2	(r != S_OK)
cond	125:8	125:13	3	r != S_OK
water	125:8	0:0	4	r
op	125:10	0:0	4	!=
water	125:13	0:0	4	S_OK
stmts	125:19	128:4	3	
water	125:19	0:0	4	{
call	126:8	126:64	4	av_log
arg	126:15	126:20	5	avctx
water	126:15	0:0	6	avctx
arg	126:22	126:34	5	AV_LOG_ERROR
water	126:22	0:0	6	AV_LOG_ERROR
arg	126:36	126:64	5	"Could not setup CrossBar\n"
water	126:36	0:0	6	"Could not setup CrossBar\n"
water	126:65	0:0	4	;
goto	127:8	127:18	4	error
water	127:13	0:0	5	error
water	128:4	0:0	4	}
water	129:4	0:0	2	ret
op	129:8	0:0	2	=
water	129:10	0:0	2	0
water	129:11	0:0	2	;
label	130:0	130:5	2	error :
if	131:4	132:53	2	(graph_builder2 != NULL)
cond	131:8	131:26	3	graph_builder2 != NULL
water	131:8	0:0	4	graph_builder2
op	131:23	0:0	4	!=
water	131:26	0:0	4	NULL
stmts	132:8	132:53	3	
call	132:8	132:52	4	ICaptureGraphBuilder2_Release
arg	132:38	132:52	5	graph_builder2
water	132:38	0:0	6	graph_builder2
water	132:53	0:0	4	;
if	133:4	134:43	2	(pers_stream)
cond	133:8	133:8	3	pers_stream
water	133:8	0:0	4	pers_stream
stmts	134:8	134:43	3	
call	134:8	134:42	4	IPersistStream_Release
arg	134:31	134:42	5	pers_stream
water	134:31	0:0	6	pers_stream
water	134:43	0:0	4	;
if	135:4	136:37	2	(ifile_stream)
cond	135:8	135:8	3	ifile_stream
water	135:8	0:0	4	ifile_stream
stmts	136:8	136:37	3	
call	136:8	136:36	4	IStream_Release
arg	136:24	136:36	5	ifile_stream
water	136:24	0:0	6	ifile_stream
water	136:37	0:0	4	;
if	137:4	138:37	2	(ofile_stream)
cond	137:8	137:8	3	ofile_stream
water	137:8	0:0	4	ofile_stream
stmts	138:8	138:37	3	
call	138:8	138:36	4	IStream_Release
arg	138:24	138:36	5	ofile_stream
water	138:24	0:0	6	ofile_stream
water	138:37	0:0	4	;
return	139:4	139:14	2	ret
water	139:11	0:0	3	ret

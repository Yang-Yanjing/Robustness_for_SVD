func	1:0	25:0	0	static void	fill_picture_rgb
params	1:28	0:0	1	
param	1:29	1:49	2	AVFilterContext *	ctx
param	1:51	1:66	2	AVFrame *	picref
stmnts	0:0	24:4	1	
decl	3:4	3:33	2	LifeContext	*life
op	3:22	0:0	2	=
water	3:24	0:0	2	ctx
op	3:27	0:0	2	->
water	3:29	0:0	2	priv
decl	4:4	4:43	2	uint8_t	*buf
op	4:17	0:0	2	=
water	4:19	0:0	2	life
op	4:23	0:0	2	->
water	4:25	0:0	2	buf
op	4:28	0:0	2	[
water	4:29	0:0	2	life
op	4:33	0:0	2	->
water	4:35	0:0	2	buf_idx
op	4:42	0:0	2	]
decl	5:4	5:12	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	j
for	7:4	24:4	2	(i = 0 ;i < life -> h;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:26	3	i < life -> h
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	life
op	7:24	0:0	4	->
water	7:26	0:0	4	h
forexpr	7:29	7:30	3	i ++
water	7:29	0:0	4	i
op	7:30	0:0	4	++
stmts	7:34	24:4	3	
water	7:34	0:0	4	{
decl	8:8	8:62	4	uint8_t	*p
op	8:19	0:0	4	=
water	8:21	0:0	4	picref
op	8:27	0:0	4	->
water	8:29	0:0	4	data
op	8:33	0:0	4	[
water	8:34	0:0	4	0
op	8:35	0:0	4	]
op	8:37	0:0	4	+
water	8:39	0:0	4	i
op	8:41	0:0	4	*
water	8:43	0:0	4	picref
op	8:49	0:0	4	->
water	8:51	0:0	4	linesize
op	8:59	0:0	4	[
water	8:60	0:0	4	0
op	8:61	0:0	4	]
for	9:8	23:8	4	(j = 0 ;j < life -> w;j ++)
forinit	9:13	9:18	5	j = 0 ;
water	9:13	0:0	6	j
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:30	5	j < life -> w
water	9:20	0:0	6	j
op	9:22	0:0	6	<
water	9:24	0:0	6	life
op	9:28	0:0	6	->
water	9:30	0:0	6	w
forexpr	9:33	9:34	5	j ++
water	9:33	0:0	6	j
op	9:34	0:0	6	++
stmts	9:38	23:8	5	
water	9:38	0:0	6	{
decl	10:12	10:42	6	uint8_t	v
op	10:22	0:0	6	=
water	10:24	0:0	6	buf
op	10:27	0:0	6	[
water	10:28	0:0	6	i
op	10:29	0:0	6	*
water	10:30	0:0	6	life
op	10:34	0:0	6	->
water	10:36	0:0	6	w
op	10:38	0:0	6	+
water	10:40	0:0	6	j
op	10:41	0:0	6	]
if	11:12	18:12	6	(life -> mold && v != ALIVE_CELL)
cond	11:16	11:35	7	life -> mold && v != ALIVE_CELL
water	11:16	0:0	8	life
op	11:20	0:0	8	->
water	11:22	0:0	8	mold
op	11:27	0:0	8	&&
water	11:30	0:0	8	v
op	11:32	0:0	8	!=
water	11:35	0:0	8	ALIVE_CELL
stmts	11:47	18:12	7	
water	11:47	0:0	8	{
decl	12:16	12:53	8	const uint8_t	*c1
op	12:34	0:0	8	=
water	12:36	0:0	8	life
op	12:40	0:0	8	->
water	12:43	0:0	8	mold_color
decl	13:16	13:53	8	const uint8_t	*c2
op	13:34	0:0	8	=
water	13:36	0:0	8	life
op	13:40	0:0	8	->
water	13:42	0:0	8	death_color
decl	14:16	14:68	8	int	death_age
op	14:30	0:0	8	=
call	14:32	14:67	9	FFMIN
arg	14:38	14:61	10	(0xff-v)*life->mold
water	14:38	0:0	11	(
water	14:39	0:0	11	0
water	14:40	0:0	11	xff
op	14:44	0:0	11	-
water	14:46	0:0	11	v
water	14:47	0:0	11	)
op	14:49	0:0	11	*
water	14:51	0:0	11	life
op	14:55	0:0	11	->
water	14:57	0:0	11	mold
arg	14:63	14:67	10	0xff
water	14:63	0:0	11	0
water	14:64	0:0	11	xff
op	15:16	0:0	8	*
water	15:17	0:0	8	p
op	15:18	0:0	8	++
op	15:21	0:0	8	=
call	15:23	15:87	8	FAST_DIV255
arg	15:35	15:87	9	(c2[0]<<8)+((int)c1[0]-(int)c2[0])*death_age
water	15:35	0:0	10	(
water	15:36	0:0	10	c2
op	15:38	0:0	10	[
water	15:39	0:0	10	0
op	15:40	0:0	10	]
op	15:42	0:0	10	<<
water	15:45	0:0	10	8
water	15:46	0:0	10	)
op	15:48	0:0	10	+
water	15:50	0:0	10	(
water	15:51	0:0	10	(
water	15:52	0:0	10	int
water	15:55	0:0	10	)
water	15:56	0:0	10	c1
op	15:58	0:0	10	[
water	15:59	0:0	10	0
op	15:60	0:0	10	]
op	15:62	0:0	10	-
water	15:64	0:0	10	(
water	15:65	0:0	10	int
water	15:68	0:0	10	)
water	15:69	0:0	10	c2
op	15:71	0:0	10	[
water	15:72	0:0	10	0
op	15:73	0:0	10	]
water	15:74	0:0	10	)
op	15:76	0:0	10	*
water	15:78	0:0	10	death_age
water	15:88	0:0	8	;
op	16:16	0:0	8	*
water	16:17	0:0	8	p
op	16:18	0:0	8	++
op	16:21	0:0	8	=
call	16:23	16:87	8	FAST_DIV255
arg	16:35	16:87	9	(c2[1]<<8)+((int)c1[1]-(int)c2[1])*death_age
water	16:35	0:0	10	(
water	16:36	0:0	10	c2
op	16:38	0:0	10	[
water	16:39	0:0	10	1
op	16:40	0:0	10	]
op	16:42	0:0	10	<<
water	16:45	0:0	10	8
water	16:46	0:0	10	)
op	16:48	0:0	10	+
water	16:50	0:0	10	(
water	16:51	0:0	10	(
water	16:52	0:0	10	int
water	16:55	0:0	10	)
water	16:56	0:0	10	c1
op	16:58	0:0	10	[
water	16:59	0:0	10	1
op	16:60	0:0	10	]
op	16:62	0:0	10	-
water	16:64	0:0	10	(
water	16:65	0:0	10	int
water	16:68	0:0	10	)
water	16:69	0:0	10	c2
op	16:71	0:0	10	[
water	16:72	0:0	10	1
op	16:73	0:0	10	]
water	16:74	0:0	10	)
op	16:76	0:0	10	*
water	16:78	0:0	10	death_age
water	16:88	0:0	8	;
op	17:16	0:0	8	*
water	17:17	0:0	8	p
op	17:18	0:0	8	++
op	17:21	0:0	8	=
call	17:23	17:87	8	FAST_DIV255
arg	17:35	17:87	9	(c2[2]<<8)+((int)c1[2]-(int)c2[2])*death_age
water	17:35	0:0	10	(
water	17:36	0:0	10	c2
op	17:38	0:0	10	[
water	17:39	0:0	10	2
op	17:40	0:0	10	]
op	17:42	0:0	10	<<
water	17:45	0:0	10	8
water	17:46	0:0	10	)
op	17:48	0:0	10	+
water	17:50	0:0	10	(
water	17:51	0:0	10	(
water	17:52	0:0	10	int
water	17:55	0:0	10	)
water	17:56	0:0	10	c1
op	17:58	0:0	10	[
water	17:59	0:0	10	2
op	17:60	0:0	10	]
op	17:62	0:0	10	-
water	17:64	0:0	10	(
water	17:65	0:0	10	int
water	17:68	0:0	10	)
water	17:69	0:0	10	c2
op	17:71	0:0	10	[
water	17:72	0:0	10	2
op	17:73	0:0	10	]
water	17:74	0:0	10	)
op	17:76	0:0	10	*
water	17:78	0:0	10	death_age
water	17:88	0:0	8	;
water	18:12	0:0	8	}
else	18:14	22:12	6
stmts	18:19	22:12	7	
water	18:19	0:0	8	{
decl	19:16	19:89	8	const uint8_t	*c
op	19:33	0:0	8	=
water	19:35	0:0	8	v
op	19:37	0:0	8	==
water	19:40	0:0	8	ALIVE_CELL
water	19:51	0:0	8	?
water	19:53	0:0	8	life
op	19:57	0:0	8	->
water	19:59	0:0	8	life_color
water	19:70	0:0	8	:
water	19:72	0:0	8	life
op	19:76	0:0	8	->
water	19:78	0:0	8	death_color
call	20:16	20:52	8	AV_WB24
arg	20:24	20:25	9	p
water	20:24	0:0	10	p
arg	20:27	20:52	9	c[0]<<16|c[1]<<8|c[2]
water	20:27	0:0	10	c
op	20:28	0:0	10	[
water	20:29	0:0	10	0
op	20:30	0:0	10	]
op	20:31	0:0	10	<<
water	20:33	0:0	10	16
op	20:36	0:0	10	|
water	20:38	0:0	10	c
op	20:39	0:0	10	[
water	20:40	0:0	10	1
op	20:41	0:0	10	]
op	20:42	0:0	10	<<
water	20:44	0:0	10	8
op	20:46	0:0	10	|
water	20:48	0:0	10	c
op	20:49	0:0	10	[
water	20:50	0:0	10	2
op	20:51	0:0	10	]
water	20:53	0:0	8	;
water	21:16	0:0	8	p
op	21:18	0:0	8	+=
water	21:21	0:0	8	3
water	21:22	0:0	8	;
water	22:12	0:0	8	}
water	23:8	0:0	6	}
water	24:4	0:0	4	}

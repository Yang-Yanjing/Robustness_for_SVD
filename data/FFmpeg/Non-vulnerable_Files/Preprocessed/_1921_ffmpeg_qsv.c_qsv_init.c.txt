func	1:0	32:0	0	int	qsv_init
params	1:12	0:0	1	
param	1:13	1:30	2	AVCodecContext *	s
stmnts	0:0	31:12	1	
decl	3:4	3:32	2	InputStream	*ist
op	3:21	0:0	2	=
water	3:23	0:0	2	s
op	3:24	0:0	2	->
water	3:26	0:0	2	opaque
decl	4:4	4:33	2	AVHWFramesContext	*frames_ctx
decl	5:4	5:36	2	AVQSVFramesContext	*frames_hwctx
decl	6:4	6:11	2	int	ret
if	7:4	11:4	2	(! hw_device_ctx)
cond	7:8	7:9	3	! hw_device_ctx
op	7:8	0:0	4	!
water	7:9	0:0	4	hw_device_ctx
stmts	7:24	11:4	3	
water	7:24	0:0	4	{
water	8:8	0:0	4	ret
op	8:12	0:0	4	=
call	8:14	8:33	4	qsv_device_init
arg	8:30	8:33	5	ist
water	8:30	0:0	6	ist
water	8:34	0:0	4	;
if	9:8	10:22	4	(ret < 0)
cond	9:12	9:18	5	ret < 0
water	9:12	0:0	6	ret
op	9:16	0:0	6	<
water	9:18	0:0	6	0
stmts	10:12	10:22	5	
return	10:12	10:22	6	ret
water	10:19	0:0	7	ret
water	11:4	0:0	4	}
call	12:4	12:39	2	av_buffer_unref
arg	12:20	12:39	3	&ist->hw_frames_ctx
op	12:20	0:0	4	&
water	12:21	0:0	4	ist
op	12:24	0:0	4	->
water	12:26	0:0	4	hw_frames_ctx
water	12:40	0:0	2	;
water	13:4	0:0	2	ist
op	13:7	0:0	2	->
water	13:9	0:0	2	hw_frames_ctx
op	13:23	0:0	2	=
call	13:25	13:59	2	av_hwframe_ctx_alloc
arg	13:46	13:59	3	hw_device_ctx
water	13:46	0:0	4	hw_device_ctx
water	13:60	0:0	2	;
if	14:4	15:30	2	(! ist -> hw_frames_ctx)
cond	14:8	14:14	3	! ist -> hw_frames_ctx
op	14:8	0:0	4	!
water	14:9	0:0	4	ist
op	14:12	0:0	4	->
water	14:14	0:0	4	hw_frames_ctx
stmts	15:8	15:30	3	
return	15:8	15:30	4	AVERROR(ENOMEM)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	ENOMEM
water	15:23	0:0	7	ENOMEM
water	16:4	0:0	2	frames_ctx
op	16:17	0:0	2	=
water	16:19	0:0	2	(
water	16:20	0:0	2	AVHWFramesContext
op	16:37	0:0	2	*
water	16:38	0:0	2	)
water	16:39	0:0	2	ist
op	16:42	0:0	2	->
water	16:44	0:0	2	hw_frames_ctx
op	16:57	0:0	2	->
water	16:59	0:0	2	data
water	16:63	0:0	2	;
water	17:4	0:0	2	frames_hwctx
op	17:17	0:0	2	=
water	17:19	0:0	2	frames_ctx
op	17:29	0:0	2	->
water	17:31	0:0	2	hwctx
water	17:36	0:0	2	;
water	18:4	0:0	2	frames_ctx
op	18:14	0:0	2	->
water	18:16	0:0	2	width
op	18:34	0:0	2	=
call	18:36	18:63	2	FFALIGN
arg	18:44	18:58	3	s->coded_width
water	18:44	0:0	4	s
op	18:45	0:0	4	->
water	18:47	0:0	4	coded_width
arg	18:61	18:63	3	32
water	18:61	0:0	4	32
water	18:64	0:0	2	;
water	19:4	0:0	2	frames_ctx
op	19:14	0:0	2	->
water	19:16	0:0	2	height
op	19:34	0:0	2	=
call	19:36	19:63	2	FFALIGN
arg	19:44	19:59	3	s->coded_height
water	19:44	0:0	4	s
op	19:45	0:0	4	->
water	19:47	0:0	4	coded_height
arg	19:61	19:63	3	32
water	19:61	0:0	4	32
water	19:64	0:0	2	;
water	20:4	0:0	2	frames_ctx
op	20:14	0:0	2	->
water	20:16	0:0	2	format
op	20:34	0:0	2	=
water	20:36	0:0	2	AV_PIX_FMT_QSV
water	20:50	0:0	2	;
water	21:4	0:0	2	frames_ctx
op	21:14	0:0	2	->
water	21:16	0:0	2	sw_format
op	21:34	0:0	2	=
water	21:36	0:0	2	s
op	21:37	0:0	2	->
water	21:39	0:0	2	sw_pix_fmt
water	21:49	0:0	2	;
water	22:4	0:0	2	frames_ctx
op	22:14	0:0	2	->
water	22:16	0:0	2	initial_pool_size
op	22:34	0:0	2	=
water	22:36	0:0	2	64
water	22:38	0:0	2	;
water	23:4	0:0	2	frames_hwctx
op	23:16	0:0	2	->
water	23:18	0:0	2	frame_type
op	23:34	0:0	2	=
water	23:36	0:0	2	MFX_MEMTYPE_VIDEO_MEMORY_DECODER_TARGET
water	23:75	0:0	2	;
water	24:4	0:0	2	ret
op	24:8	0:0	2	=
call	24:10	24:48	2	av_hwframe_ctx_init
arg	24:30	24:48	3	ist->hw_frames_ctx
water	24:30	0:0	4	ist
op	24:33	0:0	4	->
water	24:35	0:0	4	hw_frames_ctx
water	24:49	0:0	2	;
if	25:4	28:4	2	(ret < 0)
cond	25:8	25:14	3	ret < 0
water	25:8	0:0	4	ret
op	25:12	0:0	4	<
water	25:14	0:0	4	0
stmts	25:17	28:4	3	
water	25:17	0:0	4	{
call	26:8	26:74	4	av_log
arg	26:15	26:19	5	NULL
water	26:15	0:0	6	NULL
arg	26:21	26:33	5	AV_LOG_ERROR
water	26:21	0:0	6	AV_LOG_ERROR
arg	26:35	26:74	5	"Error initializing a QSV frame pool\n"
water	26:35	0:0	6	"Error initializing a QSV frame pool\n"
water	26:75	0:0	4	;
return	27:8	27:18	4	ret
water	27:15	0:0	5	ret
water	28:4	0:0	4	}
water	29:4	0:0	2	ist
op	29:7	0:0	2	->
water	29:9	0:0	2	hwaccel_get_buffer
op	29:28	0:0	2	=
water	29:30	0:0	2	qsv_get_buffer
water	29:44	0:0	2	;
water	30:4	0:0	2	ist
op	30:7	0:0	2	->
water	30:9	0:0	2	hwaccel_uninit
op	30:28	0:0	2	=
water	30:30	0:0	2	qsv_uninit
water	30:40	0:0	2	;
return	31:4	31:12	2	0
water	31:11	0:0	3	0

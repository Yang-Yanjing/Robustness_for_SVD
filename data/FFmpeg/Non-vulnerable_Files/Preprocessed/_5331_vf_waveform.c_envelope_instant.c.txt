func	1:0	48:0	0	static void	envelope_instant
params	1:28	0:0	1	
param	1:29	1:47	2	WaveformContext *	s
param	1:49	1:61	2	AVFrame *	out
param	1:63	1:72	2	int	plane
param	1:74	1:87	2	int	component
stmnts	0:0	47:4	1	
decl	3:4	3:53	2	const int	dst_linesize
op	3:27	0:0	2	=
water	3:29	0:0	2	out
op	3:32	0:0	2	->
water	3:34	0:0	2	linesize
op	3:42	0:0	2	[
water	3:43	0:0	2	component
op	3:52	0:0	2	]
decl	4:4	4:45	2	const uint8_t	bg
op	4:21	0:0	2	=
water	4:23	0:0	2	s
op	4:24	0:0	2	->
water	4:26	0:0	2	bg_color
op	4:34	0:0	2	[
water	4:35	0:0	2	component
op	4:44	0:0	2	]
decl	5:4	5:60	2	const int	is_chroma
op	5:24	0:0	2	=
water	5:26	0:0	2	(
water	5:27	0:0	2	component
op	5:37	0:0	2	==
water	5:40	0:0	2	1
op	5:42	0:0	2	||
water	5:45	0:0	2	component
op	5:55	0:0	2	==
water	5:58	0:0	2	2
water	5:59	0:0	2	)
decl	6:4	6:64	2	const int	shift_w
op	6:22	0:0	2	=
water	6:24	0:0	2	(
water	6:25	0:0	2	is_chroma
water	6:35	0:0	2	?
water	6:37	0:0	2	s
op	6:38	0:0	2	->
water	6:40	0:0	2	desc
op	6:44	0:0	2	->
water	6:46	0:0	2	log2_chroma_w
water	6:60	0:0	2	:
water	6:62	0:0	2	0
water	6:63	0:0	2	)
decl	7:4	7:64	2	const int	shift_h
op	7:22	0:0	2	=
water	7:24	0:0	2	(
water	7:25	0:0	2	is_chroma
water	7:35	0:0	2	?
water	7:37	0:0	2	s
op	7:38	0:0	2	->
water	7:40	0:0	2	desc
op	7:44	0:0	2	->
water	7:46	0:0	2	log2_chroma_h
water	7:60	0:0	2	:
water	7:62	0:0	2	0
water	7:63	0:0	2	)
decl	8:4	8:58	2	const int	dst_h
op	8:20	0:0	2	=
call	8:22	8:57	3	FF_CEIL_RSHIFT
arg	8:37	8:48	4	out->height
water	8:37	0:0	5	out
op	8:40	0:0	5	->
water	8:42	0:0	5	height
arg	8:50	8:57	4	shift_h
water	8:50	0:0	5	shift_h
decl	9:4	9:57	2	const int	dst_w
op	9:20	0:0	2	=
call	9:22	9:56	3	FF_CEIL_RSHIFT
arg	9:37	9:47	4	out->width
water	9:37	0:0	5	out
op	9:40	0:0	5	->
water	9:42	0:0	5	width
arg	9:49	9:56	4	shift_w
water	9:49	0:0	5	shift_w
decl	10:4	10:38	2	const int	start
op	10:20	0:0	2	=
water	10:22	0:0	2	s
op	10:23	0:0	2	->
water	10:25	0:0	2	estart
op	10:31	0:0	2	[
water	10:32	0:0	2	plane
op	10:37	0:0	2	]
decl	11:4	11:34	2	const int	end
op	11:18	0:0	2	=
water	11:20	0:0	2	s
op	11:21	0:0	2	->
water	11:23	0:0	2	eend
op	11:27	0:0	2	[
water	11:28	0:0	2	plane
op	11:33	0:0	2	]
decl	12:4	12:16	2	uint8_t	*dst
decl	13:4	13:12	2	int	x
water	13:9	0:0	2	,
decl	13:4	13:12	2	int	y
if	14:4	31:4	2	(s -> mode)
cond	14:8	14:11	3	s -> mode
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	mode
stmts	14:17	31:4	3	
water	14:17	0:0	4	{
for	15:8	30:8	4	(x = 0 ;x < dst_w;x ++)
forinit	15:13	15:18	5	x = 0 ;
water	15:13	0:0	6	x
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:24	5	x < dst_w
water	15:20	0:0	6	x
op	15:22	0:0	6	<
water	15:24	0:0	6	dst_w
forexpr	15:31	15:32	5	x ++
water	15:31	0:0	6	x
op	15:32	0:0	6	++
stmts	15:36	30:8	5	
water	15:36	0:0	6	{
for	16:12	22:12	6	(y = start ;y < end;y ++)
forinit	16:17	16:26	7	y = start ;
water	16:17	0:0	8	y
op	16:19	0:0	8	=
water	16:21	0:0	8	start
water	16:26	0:0	8	;
cond	16:28	16:32	7	y < end
water	16:28	0:0	8	y
op	16:30	0:0	8	<
water	16:32	0:0	8	end
forexpr	16:37	16:38	7	y ++
water	16:37	0:0	8	y
op	16:38	0:0	8	++
stmts	16:42	22:12	7	
water	16:42	0:0	8	{
water	17:16	0:0	8	dst
op	17:20	0:0	8	=
water	17:22	0:0	8	out
op	17:25	0:0	8	->
water	17:27	0:0	8	data
op	17:31	0:0	8	[
water	17:32	0:0	8	component
op	17:41	0:0	8	]
op	17:43	0:0	8	+
water	17:45	0:0	8	y
op	17:47	0:0	8	*
water	17:49	0:0	8	dst_linesize
op	17:62	0:0	8	+
water	17:64	0:0	8	x
water	17:65	0:0	8	;
if	18:16	21:16	8	(dst [ 0 ] != bg)
cond	18:20	18:30	9	dst [ 0 ] != bg
water	18:20	0:0	10	dst
op	18:23	0:0	10	[
water	18:24	0:0	10	0
op	18:25	0:0	10	]
op	18:27	0:0	10	!=
water	18:30	0:0	10	bg
stmts	18:34	21:16	9	
water	18:34	0:0	10	{
water	19:20	0:0	10	dst
op	19:23	0:0	10	[
water	19:24	0:0	10	0
op	19:25	0:0	10	]
op	19:27	0:0	10	=
water	19:29	0:0	10	255
water	19:32	0:0	10	;
break	20:20	20:25	10	
water	21:16	0:0	10	}
water	22:12	0:0	8	}
for	23:12	29:12	6	(y = end - 1 ;y >= start;y --)
forinit	23:17	23:28	7	y = end - 1 ;
water	23:17	0:0	8	y
op	23:19	0:0	8	=
water	23:21	0:0	8	end
op	23:25	0:0	8	-
water	23:27	0:0	8	1
water	23:28	0:0	8	;
cond	23:30	23:35	7	y >= start
water	23:30	0:0	8	y
op	23:32	0:0	8	>=
water	23:35	0:0	8	start
forexpr	23:42	23:43	7	y --
water	23:42	0:0	8	y
op	23:43	0:0	8	--
stmts	23:47	29:12	7	
water	23:47	0:0	8	{
water	24:16	0:0	8	dst
op	24:20	0:0	8	=
water	24:22	0:0	8	out
op	24:25	0:0	8	->
water	24:27	0:0	8	data
op	24:31	0:0	8	[
water	24:32	0:0	8	component
op	24:41	0:0	8	]
op	24:43	0:0	8	+
water	24:45	0:0	8	y
op	24:47	0:0	8	*
water	24:49	0:0	8	dst_linesize
op	24:62	0:0	8	+
water	24:64	0:0	8	x
water	24:65	0:0	8	;
if	25:16	28:16	8	(dst [ 0 ] != bg)
cond	25:20	25:30	9	dst [ 0 ] != bg
water	25:20	0:0	10	dst
op	25:23	0:0	10	[
water	25:24	0:0	10	0
op	25:25	0:0	10	]
op	25:27	0:0	10	!=
water	25:30	0:0	10	bg
stmts	25:34	28:16	9	
water	25:34	0:0	10	{
water	26:20	0:0	10	dst
op	26:23	0:0	10	[
water	26:24	0:0	10	0
op	26:25	0:0	10	]
op	26:27	0:0	10	=
water	26:29	0:0	10	255
water	26:32	0:0	10	;
break	27:20	27:25	10	
water	28:16	0:0	10	}
water	29:12	0:0	8	}
water	30:8	0:0	6	}
water	31:4	0:0	4	}
else	31:6	47:4	2
stmts	31:11	47:4	3	
water	31:11	0:0	4	{
for	32:8	46:8	4	(y = 0 ;y < dst_h;y ++)
forinit	32:13	32:18	5	y = 0 ;
water	32:13	0:0	6	y
op	32:15	0:0	6	=
water	32:17	0:0	6	0
water	32:18	0:0	6	;
cond	32:20	32:24	5	y < dst_h
water	32:20	0:0	6	y
op	32:22	0:0	6	<
water	32:24	0:0	6	dst_h
forexpr	32:31	32:32	5	y ++
water	32:31	0:0	6	y
op	32:32	0:0	6	++
stmts	32:36	46:8	5	
water	32:36	0:0	6	{
water	33:12	0:0	6	dst
op	33:16	0:0	6	=
water	33:18	0:0	6	out
op	33:21	0:0	6	->
water	33:23	0:0	6	data
op	33:27	0:0	6	[
water	33:28	0:0	6	component
op	33:37	0:0	6	]
op	33:39	0:0	6	+
water	33:41	0:0	6	y
op	33:43	0:0	6	*
water	33:45	0:0	6	dst_linesize
water	33:57	0:0	6	;
for	34:12	39:12	6	(x = start ;x < end;x ++)
forinit	34:17	34:26	7	x = start ;
water	34:17	0:0	8	x
op	34:19	0:0	8	=
water	34:21	0:0	8	start
water	34:26	0:0	8	;
cond	34:28	34:32	7	x < end
water	34:28	0:0	8	x
op	34:30	0:0	8	<
water	34:32	0:0	8	end
forexpr	34:37	34:38	7	x ++
water	34:37	0:0	8	x
op	34:38	0:0	8	++
stmts	34:42	39:12	7	
water	34:42	0:0	8	{
if	35:16	38:16	8	(dst [ x ] != bg)
cond	35:20	35:30	9	dst [ x ] != bg
water	35:20	0:0	10	dst
op	35:23	0:0	10	[
water	35:24	0:0	10	x
op	35:25	0:0	10	]
op	35:27	0:0	10	!=
water	35:30	0:0	10	bg
stmts	35:34	38:16	9	
water	35:34	0:0	10	{
water	36:20	0:0	10	dst
op	36:23	0:0	10	[
water	36:24	0:0	10	x
op	36:25	0:0	10	]
op	36:27	0:0	10	=
water	36:29	0:0	10	255
water	36:32	0:0	10	;
break	37:20	37:25	10	
water	38:16	0:0	10	}
water	39:12	0:0	8	}
for	40:12	45:12	6	(x = end - 1 ;x >= start;x --)
forinit	40:17	40:28	7	x = end - 1 ;
water	40:17	0:0	8	x
op	40:19	0:0	8	=
water	40:21	0:0	8	end
op	40:25	0:0	8	-
water	40:27	0:0	8	1
water	40:28	0:0	8	;
cond	40:30	40:35	7	x >= start
water	40:30	0:0	8	x
op	40:32	0:0	8	>=
water	40:35	0:0	8	start
forexpr	40:42	40:43	7	x --
water	40:42	0:0	8	x
op	40:43	0:0	8	--
stmts	40:47	45:12	7	
water	40:47	0:0	8	{
if	41:16	44:16	8	(dst [ x ] != bg)
cond	41:20	41:30	9	dst [ x ] != bg
water	41:20	0:0	10	dst
op	41:23	0:0	10	[
water	41:24	0:0	10	x
op	41:25	0:0	10	]
op	41:27	0:0	10	!=
water	41:30	0:0	10	bg
stmts	41:34	44:16	9	
water	41:34	0:0	10	{
water	42:20	0:0	10	dst
op	42:23	0:0	10	[
water	42:24	0:0	10	x
op	42:25	0:0	10	]
op	42:27	0:0	10	=
water	42:29	0:0	10	255
water	42:32	0:0	10	;
break	43:20	43:25	10	
water	44:16	0:0	10	}
water	45:12	0:0	8	}
water	46:8	0:0	6	}
water	47:4	0:0	4	}

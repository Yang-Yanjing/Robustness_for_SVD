func	1:0	32:0	0	int	show_sinks
params	1:14	0:0	1	
param	1:15	1:27	2	void *	optctx
param	1:29	1:44	2	const char *	opt
param	1:46	1:61	2	const char *	arg
stmnts	0:0	31:14	1	
decl	3:4	3:30	2	AVOutputFormat	*fmt
op	3:24	0:0	2	=
water	3:26	0:0	2	NULL
decl	4:4	4:20	2	char	*dev
op	4:14	0:0	2	=
water	4:16	0:0	2	NULL
decl	5:4	5:29	2	AVDictionary	*opts
op	5:23	0:0	2	=
water	5:25	0:0	2	NULL
decl	6:4	6:15	2	int	ret
op	6:12	0:0	2	=
water	6:14	0:0	2	0
decl	7:4	7:40	2	int	error_level
op	7:20	0:0	2	=
call	7:22	7:39	3	av_log_get_level
call	8:4	8:33	2	av_log_set_level
arg	8:21	8:33	3	AV_LOG_ERROR
water	8:21	0:0	4	AV_LOG_ERROR
water	8:34	0:0	2	;
if	9:4	10:17	2	(( ret =show_sinks_sources_parse_arg (arg ,& dev ,& opts ) ) < 0)
cond	9:8	9:65	3	( ret =show_sinks_sources_parse_arg (arg ,& dev ,& opts ) ) < 0
water	9:8	0:0	4	(
water	9:9	0:0	4	ret
op	9:13	0:0	4	=
call	9:15	9:60	4	show_sinks_sources_parse_arg
arg	9:44	9:47	5	arg
water	9:44	0:0	6	arg
arg	9:49	9:53	5	&dev
op	9:49	0:0	6	&
water	9:50	0:0	6	dev
arg	9:55	9:60	5	&opts
op	9:55	0:0	6	&
water	9:56	0:0	6	opts
water	9:61	0:0	4	)
op	9:63	0:0	4	<
water	9:65	0:0	4	0
stmts	10:8	10:17	3	
goto	10:8	10:17	4	fail
water	10:13	0:0	5	fail
do	11:4	18:4	2	(fmt)
cond	18:13	18:13	3	fmt
water	18:13	0:0	4	fmt
stmts	11:7	18:4	3	
water	11:7	0:0	4	{
water	12:8	0:0	4	fmt
op	12:12	0:0	4	=
call	12:14	12:45	4	av_output_audio_device_next
arg	12:42	12:45	5	fmt
water	12:42	0:0	6	fmt
water	12:46	0:0	4	;
if	13:8	17:8	4	(fmt)
cond	13:12	13:12	5	fmt
water	13:12	0:0	6	fmt
stmts	13:17	17:8	5	
water	13:17	0:0	6	{
if	14:12	15:24	6	(dev && !av_match_name (dev ,fmt -> name ))
cond	14:16	14:52	7	dev && !av_match_name (dev ,fmt -> name )
water	14:16	0:0	8	dev
op	14:20	0:0	8	&&
op	14:23	0:0	8	!
call	14:24	14:52	8	av_match_name
arg	14:38	14:41	9	dev
water	14:38	0:0	10	dev
arg	14:43	14:52	9	fmt->name
water	14:43	0:0	10	fmt
op	14:46	0:0	10	->
water	14:48	0:0	10	name
stmts	15:16	15:24	7	
continue	15:16	15:24	8	
call	16:12	16:40	6	print_device_sinks
arg	16:31	16:34	7	fmt
water	16:31	0:0	8	fmt
arg	16:36	16:40	7	opts
water	16:36	0:0	8	opts
water	16:41	0:0	6	;
water	17:8	0:0	6	}
water	18:4	0:0	4	}
water	18:17	0:0	2	;
do	19:4	26:4	2	(fmt)
cond	26:13	26:13	3	fmt
water	26:13	0:0	4	fmt
stmts	19:7	26:4	3	
water	19:7	0:0	4	{
water	20:8	0:0	4	fmt
op	20:12	0:0	4	=
call	20:14	20:45	4	av_output_video_device_next
arg	20:42	20:45	5	fmt
water	20:42	0:0	6	fmt
water	20:46	0:0	4	;
if	21:8	25:8	4	(fmt)
cond	21:12	21:12	5	fmt
water	21:12	0:0	6	fmt
stmts	21:17	25:8	5	
water	21:17	0:0	6	{
if	22:12	23:24	6	(dev && !av_match_name (dev ,fmt -> name ))
cond	22:16	22:52	7	dev && !av_match_name (dev ,fmt -> name )
water	22:16	0:0	8	dev
op	22:20	0:0	8	&&
op	22:23	0:0	8	!
call	22:24	22:52	8	av_match_name
arg	22:38	22:41	9	dev
water	22:38	0:0	10	dev
arg	22:43	22:52	9	fmt->name
water	22:43	0:0	10	fmt
op	22:46	0:0	10	->
water	22:48	0:0	10	name
stmts	23:16	23:24	7	
continue	23:16	23:24	8	
call	24:12	24:40	6	print_device_sinks
arg	24:31	24:34	7	fmt
water	24:31	0:0	8	fmt
arg	24:36	24:40	7	opts
water	24:36	0:0	8	opts
water	24:41	0:0	6	;
water	25:8	0:0	6	}
water	26:4	0:0	4	}
water	26:17	0:0	2	;
label	27:2	27:6	2	fail :
call	28:4	28:22	2	av_dict_free
arg	28:17	28:22	3	&opts
op	28:17	0:0	4	&
water	28:18	0:0	4	opts
water	28:23	0:0	2	;
call	29:4	29:15	2	av_free
arg	29:12	29:15	3	dev
water	29:12	0:0	4	dev
water	29:16	0:0	2	;
call	30:4	30:32	2	av_log_set_level
arg	30:21	30:32	3	error_level
water	30:21	0:0	4	error_level
water	30:33	0:0	2	;
return	31:4	31:14	2	ret
water	31:11	0:0	3	ret

func	1:0	13:0	0	static void	show_codec_opts
params	1:27	0:0	1	
param	1:28	1:32	2	void
stmnts	0:0	12:4	1	
decl	3:4	3:21	2	AVCodec	*c
op	3:15	0:0	2	=
water	3:17	0:0	2	NULL
call	4:4	4:47	2	printf
arg	4:11	4:47	3	"@section Generic codec AVOptions\n"
water	4:11	0:0	4	"@section Generic codec AVOptions\n"
water	4:48	0:0	2	;
call	5:4	5:33	2	show_opts
arg	5:14	5:33	3	avcodec_get_class()
call	5:14	5:32	4	avcodec_get_class
water	5:34	0:0	2	;
call	6:4	6:48	2	printf
arg	6:11	6:48	3	"@section Codec-specific AVOptions\n"
water	6:11	0:0	4	"@section Codec-specific AVOptions\n"
water	6:49	0:0	2	;
while	7:4	12:4	2	(( c =av_codec_next (c ) ))
cond	7:11	7:32	3	( c =av_codec_next (c ) )
water	7:11	0:0	4	(
water	7:12	0:0	4	c
op	7:14	0:0	4	=
call	7:16	7:31	4	av_codec_next
arg	7:30	7:31	5	c
water	7:30	0:0	6	c
water	7:32	0:0	4	)
stmts	7:35	12:4	3	
water	7:35	0:0	4	{
if	8:8	9:20	4	(! c -> priv_class)
cond	8:12	8:16	5	! c -> priv_class
op	8:12	0:0	6	!
water	8:13	0:0	6	c
op	8:14	0:0	6	->
water	8:16	0:0	6	priv_class
stmts	9:12	9:20	5	
continue	9:12	9:20	6	
call	10:8	10:70	4	printf
arg	10:15	10:43	5	"@subsection %s AVOptions\n"
water	10:15	0:0	6	"@subsection %s AVOptions\n"
arg	10:45	10:70	5	c->priv_class->class_name
water	10:45	0:0	6	c
op	10:46	0:0	6	->
water	10:48	0:0	6	priv_class
op	10:58	0:0	6	->
water	10:60	0:0	6	class_name
water	10:71	0:0	4	;
call	11:8	11:31	4	show_opts
arg	11:18	11:31	5	c->priv_class
water	11:18	0:0	6	c
op	11:19	0:0	6	->
water	11:21	0:0	6	priv_class
water	11:32	0:0	4	;
water	12:4	0:0	4	}

func	1:12	67:0	0	RENAME	(yuv2rgb32_1)
params	1:31	0:0	1	
param	1:32	1:45	2	SwsContext *	c
param	1:47	1:66	2	const int16_t *	buf0
param	2:32	2:54	2	const int16_t *	ubuf[2]
param	2:56	2:78	2	const int16_t *	vbuf[2]
param	3:32	3:52	2	const int16_t *	abuf0
param	3:54	3:67	2	uint8_t *	dest
param	4:32	4:40	2	int	dstW
param	4:42	4:53	2	int	uvalpha
param	4:55	4:60	2	int	y
stmnts	0:0	66:4	1	
decl	6:4	6:34	2	const int16_t	*ubuf0
op	6:25	0:0	2	=
water	6:27	0:0	2	ubuf
op	6:31	0:0	2	[
water	6:32	0:0	2	0
op	6:33	0:0	2	]
decl	7:4	7:29	2	const int16_t	*buf1
op	7:23	0:0	2	=
water	7:25	0:0	2	buf0
if	8:4	37:4	2	(uvalpha < 2048)
cond	8:8	8:18	3	uvalpha < 2048
water	8:8	0:0	4	uvalpha
op	8:16	0:0	4	<
water	8:18	0:0	4	2048
stmts	8:24	37:4	3	
water	8:24	0:0	4	{
decl	9:8	9:38	4	const int16_t	*ubuf1
op	9:29	0:0	4	=
water	9:31	0:0	4	ubuf
op	9:35	0:0	4	[
water	9:36	0:0	4	0
op	9:37	0:0	4	]
if	10:8	23:8	4	(CONFIG_SWSCALE_ALPHA && c -> alpPixBuf)
cond	10:12	10:39	5	CONFIG_SWSCALE_ALPHA && c -> alpPixBuf
water	10:12	0:0	6	CONFIG_SWSCALE_ALPHA
op	10:33	0:0	6	&&
water	10:36	0:0	6	c
op	10:37	0:0	6	->
water	10:39	0:0	6	alpPixBuf
stmts	10:50	23:8	5	
water	10:50	0:0	6	{
water	11:12	0:0	6	__asm__
water	11:20	0:0	6	volatile
water	11:28	0:0	6	(
water	12:16	0:0	6	"mov %%"
water	12:24	0:0	6	REG_b
water	12:29	0:0	6	", "
water	12:33	0:0	6	ESP_OFFSET
water	12:43	0:0	6	"(%5)        \n\t"
water	13:16	0:0	6	"mov        %4, %%"
water	13:35	0:0	6	REG_b
water	13:40	0:0	6	"               \n\t"
water	14:16	0:0	6	"push %%"
water	14:25	0:0	6	REG_BP
water	14:31	0:0	6	"                        \n\t"
call	15:16	15:42	6	YSCALEYUV2RGB1
arg	15:31	15:38	7	%%REGBP
op	15:31	0:0	8	%
op	15:32	0:0	8	%
water	15:33	0:0	8	REGBP
arg	15:40	15:42	7	%5
op	15:40	0:0	8	%
water	15:41	0:0	8	5
call	16:16	16:44	6	YSCALEYUV2RGB1_ALPHA
arg	16:37	16:44	7	%%REGBP
op	16:37	0:0	8	%
op	16:38	0:0	8	%
water	16:39	0:0	8	REGBP
call	17:16	17:117	6	WRITEBGR32
arg	17:27	17:33	7	%%REGb
op	17:27	0:0	8	%
op	17:28	0:0	8	%
water	17:29	0:0	8	REGb
arg	17:35	17:52	7	DSTW_OFFSET"(%5)"
water	17:35	0:0	8	DSTW_OFFSET
water	17:46	0:0	8	"(%5)"
arg	17:54	17:61	7	%%REGBP
op	17:54	0:0	8	%
op	17:55	0:0	8	%
water	17:56	0:0	8	REGBP
arg	17:63	17:68	7	%%mm2
op	17:63	0:0	8	%
op	17:64	0:0	8	%
water	17:65	0:0	8	mm2
arg	17:70	17:75	7	%%mm4
op	17:70	0:0	8	%
op	17:71	0:0	8	%
water	17:72	0:0	8	mm4
arg	17:77	17:82	7	%%mm5
op	17:77	0:0	8	%
op	17:78	0:0	8	%
water	17:79	0:0	8	mm5
arg	17:84	17:89	7	%%mm7
op	17:84	0:0	8	%
op	17:85	0:0	8	%
water	17:86	0:0	8	mm7
arg	17:91	17:96	7	%%mm0
op	17:91	0:0	8	%
op	17:92	0:0	8	%
water	17:93	0:0	8	mm0
arg	17:98	17:103	7	%%mm1
op	17:98	0:0	8	%
op	17:99	0:0	8	%
water	17:100	0:0	8	mm1
arg	17:105	17:110	7	%%mm3
op	17:105	0:0	8	%
op	17:106	0:0	8	%
water	17:107	0:0	8	mm3
arg	17:112	17:117	7	%%mm6
op	17:112	0:0	8	%
op	17:113	0:0	8	%
water	17:114	0:0	8	mm6
water	18:16	0:0	6	"pop %%"
water	18:24	0:0	6	REG_BP
water	18:30	0:0	6	"                         \n\t"
water	19:16	0:0	6	"mov "
water	19:22	0:0	6	ESP_OFFSET
water	19:32	0:0	6	"(%5), %%"
water	19:42	0:0	6	REG_b
water	19:47	0:0	6	"        \n\t"
op	20:16	0:0	6	::
water	20:19	0:0	6	"c"
water	20:23	0:0	6	(
water	20:24	0:0	6	buf0
water	20:28	0:0	6	)
water	20:29	0:0	6	,
water	20:31	0:0	6	"d"
water	20:35	0:0	6	(
water	20:36	0:0	6	abuf0
water	20:41	0:0	6	)
water	20:42	0:0	6	,
water	20:44	0:0	6	"S"
water	20:48	0:0	6	(
water	20:49	0:0	6	ubuf0
water	20:54	0:0	6	)
water	20:55	0:0	6	,
water	20:57	0:0	6	"D"
water	20:61	0:0	6	(
water	20:62	0:0	6	ubuf1
water	20:67	0:0	6	)
water	20:68	0:0	6	,
water	20:70	0:0	6	"m"
water	20:74	0:0	6	(
water	20:75	0:0	6	dest
water	20:79	0:0	6	)
water	20:80	0:0	6	,
water	21:19	0:0	6	"a"
water	21:23	0:0	6	(
op	21:24	0:0	6	&
water	21:25	0:0	6	c
op	21:26	0:0	6	->
water	21:28	0:0	6	redDither
water	21:37	0:0	6	)
water	22:12	0:0	6	)
water	22:13	0:0	6	;
water	23:8	0:0	6	}
else	23:10	36:8	4
stmts	23:15	36:8	5	
water	23:15	0:0	6	{
water	24:12	0:0	6	__asm__
water	24:20	0:0	6	volatile
water	24:28	0:0	6	(
water	25:16	0:0	6	"mov %%"
water	25:24	0:0	6	REG_b
water	25:29	0:0	6	", "
water	25:33	0:0	6	ESP_OFFSET
water	25:43	0:0	6	"(%5)        \n\t"
water	26:16	0:0	6	"mov        %4, %%"
water	26:35	0:0	6	REG_b
water	26:40	0:0	6	"               \n\t"
water	27:16	0:0	6	"push %%"
water	27:25	0:0	6	REG_BP
water	27:31	0:0	6	"                        \n\t"
call	28:16	28:42	6	YSCALEYUV2RGB1
arg	28:31	28:38	7	%%REGBP
op	28:31	0:0	8	%
op	28:32	0:0	8	%
water	28:33	0:0	8	REGBP
arg	28:40	28:42	7	%5
op	28:40	0:0	8	%
water	28:41	0:0	8	5
water	29:16	0:0	6	"pcmpeqd %%mm7, %%mm7                   \n\t"
call	30:16	30:117	6	WRITEBGR32
arg	30:27	30:33	7	%%REGb
op	30:27	0:0	8	%
op	30:28	0:0	8	%
water	30:29	0:0	8	REGb
arg	30:35	30:52	7	DSTW_OFFSET"(%5)"
water	30:35	0:0	8	DSTW_OFFSET
water	30:46	0:0	8	"(%5)"
arg	30:54	30:61	7	%%REGBP
op	30:54	0:0	8	%
op	30:55	0:0	8	%
water	30:56	0:0	8	REGBP
arg	30:63	30:68	7	%%mm2
op	30:63	0:0	8	%
op	30:64	0:0	8	%
water	30:65	0:0	8	mm2
arg	30:70	30:75	7	%%mm4
op	30:70	0:0	8	%
op	30:71	0:0	8	%
water	30:72	0:0	8	mm4
arg	30:77	30:82	7	%%mm5
op	30:77	0:0	8	%
op	30:78	0:0	8	%
water	30:79	0:0	8	mm5
arg	30:84	30:89	7	%%mm7
op	30:84	0:0	8	%
op	30:85	0:0	8	%
water	30:86	0:0	8	mm7
arg	30:91	30:96	7	%%mm0
op	30:91	0:0	8	%
op	30:92	0:0	8	%
water	30:93	0:0	8	mm0
arg	30:98	30:103	7	%%mm1
op	30:98	0:0	8	%
op	30:99	0:0	8	%
water	30:100	0:0	8	mm1
arg	30:105	30:110	7	%%mm3
op	30:105	0:0	8	%
op	30:106	0:0	8	%
water	30:107	0:0	8	mm3
arg	30:112	30:117	7	%%mm6
op	30:112	0:0	8	%
op	30:113	0:0	8	%
water	30:114	0:0	8	mm6
water	31:16	0:0	6	"pop %%"
water	31:24	0:0	6	REG_BP
water	31:30	0:0	6	"                         \n\t"
water	32:16	0:0	6	"mov "
water	32:22	0:0	6	ESP_OFFSET
water	32:32	0:0	6	"(%5), %%"
water	32:42	0:0	6	REG_b
water	32:47	0:0	6	"        \n\t"
op	33:16	0:0	6	::
water	33:19	0:0	6	"c"
water	33:23	0:0	6	(
water	33:24	0:0	6	buf0
water	33:28	0:0	6	)
water	33:29	0:0	6	,
water	33:31	0:0	6	"d"
water	33:35	0:0	6	(
water	33:36	0:0	6	buf1
water	33:40	0:0	6	)
water	33:41	0:0	6	,
water	33:43	0:0	6	"S"
water	33:47	0:0	6	(
water	33:48	0:0	6	ubuf0
water	33:53	0:0	6	)
water	33:54	0:0	6	,
water	33:56	0:0	6	"D"
water	33:60	0:0	6	(
water	33:61	0:0	6	ubuf1
water	33:66	0:0	6	)
water	33:67	0:0	6	,
water	33:69	0:0	6	"m"
water	33:73	0:0	6	(
water	33:74	0:0	6	dest
water	33:78	0:0	6	)
water	33:79	0:0	6	,
water	34:19	0:0	6	"a"
water	34:23	0:0	6	(
op	34:24	0:0	6	&
water	34:25	0:0	6	c
op	34:26	0:0	6	->
water	34:28	0:0	6	redDither
water	34:37	0:0	6	)
water	35:12	0:0	6	)
water	35:13	0:0	6	;
water	36:8	0:0	6	}
water	37:4	0:0	4	}
else	37:6	66:4	2
stmts	37:11	66:4	3	
water	37:11	0:0	4	{
decl	38:8	38:38	4	const int16_t	*ubuf1
op	38:29	0:0	4	=
water	38:31	0:0	4	ubuf
op	38:35	0:0	4	[
water	38:36	0:0	4	1
op	38:37	0:0	4	]
if	39:8	52:8	4	(CONFIG_SWSCALE_ALPHA && c -> alpPixBuf)
cond	39:12	39:39	5	CONFIG_SWSCALE_ALPHA && c -> alpPixBuf
water	39:12	0:0	6	CONFIG_SWSCALE_ALPHA
op	39:33	0:0	6	&&
water	39:36	0:0	6	c
op	39:37	0:0	6	->
water	39:39	0:0	6	alpPixBuf
stmts	39:50	52:8	5	
water	39:50	0:0	6	{
water	40:12	0:0	6	__asm__
water	40:20	0:0	6	volatile
water	40:28	0:0	6	(
water	41:16	0:0	6	"mov %%"
water	41:24	0:0	6	REG_b
water	41:29	0:0	6	", "
water	41:33	0:0	6	ESP_OFFSET
water	41:43	0:0	6	"(%5)        \n\t"
water	42:16	0:0	6	"mov        %4, %%"
water	42:35	0:0	6	REG_b
water	42:40	0:0	6	"               \n\t"
water	43:16	0:0	6	"push %%"
water	43:25	0:0	6	REG_BP
water	43:31	0:0	6	"                        \n\t"
call	44:16	44:43	6	YSCALEYUV2RGB1b
arg	44:32	44:39	7	%%REGBP
op	44:32	0:0	8	%
op	44:33	0:0	8	%
water	44:34	0:0	8	REGBP
arg	44:41	44:43	7	%5
op	44:41	0:0	8	%
water	44:42	0:0	8	5
call	45:16	45:44	6	YSCALEYUV2RGB1_ALPHA
arg	45:37	45:44	7	%%REGBP
op	45:37	0:0	8	%
op	45:38	0:0	8	%
water	45:39	0:0	8	REGBP
call	46:16	46:117	6	WRITEBGR32
arg	46:27	46:33	7	%%REGb
op	46:27	0:0	8	%
op	46:28	0:0	8	%
water	46:29	0:0	8	REGb
arg	46:35	46:52	7	DSTW_OFFSET"(%5)"
water	46:35	0:0	8	DSTW_OFFSET
water	46:46	0:0	8	"(%5)"
arg	46:54	46:61	7	%%REGBP
op	46:54	0:0	8	%
op	46:55	0:0	8	%
water	46:56	0:0	8	REGBP
arg	46:63	46:68	7	%%mm2
op	46:63	0:0	8	%
op	46:64	0:0	8	%
water	46:65	0:0	8	mm2
arg	46:70	46:75	7	%%mm4
op	46:70	0:0	8	%
op	46:71	0:0	8	%
water	46:72	0:0	8	mm4
arg	46:77	46:82	7	%%mm5
op	46:77	0:0	8	%
op	46:78	0:0	8	%
water	46:79	0:0	8	mm5
arg	46:84	46:89	7	%%mm7
op	46:84	0:0	8	%
op	46:85	0:0	8	%
water	46:86	0:0	8	mm7
arg	46:91	46:96	7	%%mm0
op	46:91	0:0	8	%
op	46:92	0:0	8	%
water	46:93	0:0	8	mm0
arg	46:98	46:103	7	%%mm1
op	46:98	0:0	8	%
op	46:99	0:0	8	%
water	46:100	0:0	8	mm1
arg	46:105	46:110	7	%%mm3
op	46:105	0:0	8	%
op	46:106	0:0	8	%
water	46:107	0:0	8	mm3
arg	46:112	46:117	7	%%mm6
op	46:112	0:0	8	%
op	46:113	0:0	8	%
water	46:114	0:0	8	mm6
water	47:16	0:0	6	"pop %%"
water	47:24	0:0	6	REG_BP
water	47:30	0:0	6	"                         \n\t"
water	48:16	0:0	6	"mov "
water	48:22	0:0	6	ESP_OFFSET
water	48:32	0:0	6	"(%5), %%"
water	48:42	0:0	6	REG_b
water	48:47	0:0	6	"        \n\t"
op	49:16	0:0	6	::
water	49:19	0:0	6	"c"
water	49:23	0:0	6	(
water	49:24	0:0	6	buf0
water	49:28	0:0	6	)
water	49:29	0:0	6	,
water	49:31	0:0	6	"d"
water	49:35	0:0	6	(
water	49:36	0:0	6	abuf0
water	49:41	0:0	6	)
water	49:42	0:0	6	,
water	49:44	0:0	6	"S"
water	49:48	0:0	6	(
water	49:49	0:0	6	ubuf0
water	49:54	0:0	6	)
water	49:55	0:0	6	,
water	49:57	0:0	6	"D"
water	49:61	0:0	6	(
water	49:62	0:0	6	ubuf1
water	49:67	0:0	6	)
water	49:68	0:0	6	,
water	49:70	0:0	6	"m"
water	49:74	0:0	6	(
water	49:75	0:0	6	dest
water	49:79	0:0	6	)
water	49:80	0:0	6	,
water	50:19	0:0	6	"a"
water	50:23	0:0	6	(
op	50:24	0:0	6	&
water	50:25	0:0	6	c
op	50:26	0:0	6	->
water	50:28	0:0	6	redDither
water	50:37	0:0	6	)
water	51:12	0:0	6	)
water	51:13	0:0	6	;
water	52:8	0:0	6	}
else	52:10	65:8	4
stmts	52:15	65:8	5	
water	52:15	0:0	6	{
water	53:12	0:0	6	__asm__
water	53:20	0:0	6	volatile
water	53:28	0:0	6	(
water	54:16	0:0	6	"mov %%"
water	54:24	0:0	6	REG_b
water	54:29	0:0	6	", "
water	54:33	0:0	6	ESP_OFFSET
water	54:43	0:0	6	"(%5)        \n\t"
water	55:16	0:0	6	"mov        %4, %%"
water	55:35	0:0	6	REG_b
water	55:40	0:0	6	"               \n\t"
water	56:16	0:0	6	"push %%"
water	56:25	0:0	6	REG_BP
water	56:31	0:0	6	"                        \n\t"
call	57:16	57:43	6	YSCALEYUV2RGB1b
arg	57:32	57:39	7	%%REGBP
op	57:32	0:0	8	%
op	57:33	0:0	8	%
water	57:34	0:0	8	REGBP
arg	57:41	57:43	7	%5
op	57:41	0:0	8	%
water	57:42	0:0	8	5
water	58:16	0:0	6	"pcmpeqd %%mm7, %%mm7                   \n\t"
call	59:16	59:117	6	WRITEBGR32
arg	59:27	59:33	7	%%REGb
op	59:27	0:0	8	%
op	59:28	0:0	8	%
water	59:29	0:0	8	REGb
arg	59:35	59:52	7	DSTW_OFFSET"(%5)"
water	59:35	0:0	8	DSTW_OFFSET
water	59:46	0:0	8	"(%5)"
arg	59:54	59:61	7	%%REGBP
op	59:54	0:0	8	%
op	59:55	0:0	8	%
water	59:56	0:0	8	REGBP
arg	59:63	59:68	7	%%mm2
op	59:63	0:0	8	%
op	59:64	0:0	8	%
water	59:65	0:0	8	mm2
arg	59:70	59:75	7	%%mm4
op	59:70	0:0	8	%
op	59:71	0:0	8	%
water	59:72	0:0	8	mm4
arg	59:77	59:82	7	%%mm5
op	59:77	0:0	8	%
op	59:78	0:0	8	%
water	59:79	0:0	8	mm5
arg	59:84	59:89	7	%%mm7
op	59:84	0:0	8	%
op	59:85	0:0	8	%
water	59:86	0:0	8	mm7
arg	59:91	59:96	7	%%mm0
op	59:91	0:0	8	%
op	59:92	0:0	8	%
water	59:93	0:0	8	mm0
arg	59:98	59:103	7	%%mm1
op	59:98	0:0	8	%
op	59:99	0:0	8	%
water	59:100	0:0	8	mm1
arg	59:105	59:110	7	%%mm3
op	59:105	0:0	8	%
op	59:106	0:0	8	%
water	59:107	0:0	8	mm3
arg	59:112	59:117	7	%%mm6
op	59:112	0:0	8	%
op	59:113	0:0	8	%
water	59:114	0:0	8	mm6
water	60:16	0:0	6	"pop %%"
water	60:24	0:0	6	REG_BP
water	60:30	0:0	6	"                         \n\t"
water	61:16	0:0	6	"mov "
water	61:22	0:0	6	ESP_OFFSET
water	61:32	0:0	6	"(%5), %%"
water	61:42	0:0	6	REG_b
water	61:47	0:0	6	"        \n\t"
op	62:16	0:0	6	::
water	62:19	0:0	6	"c"
water	62:23	0:0	6	(
water	62:24	0:0	6	buf0
water	62:28	0:0	6	)
water	62:29	0:0	6	,
water	62:31	0:0	6	"d"
water	62:35	0:0	6	(
water	62:36	0:0	6	buf1
water	62:40	0:0	6	)
water	62:41	0:0	6	,
water	62:43	0:0	6	"S"
water	62:47	0:0	6	(
water	62:48	0:0	6	ubuf0
water	62:53	0:0	6	)
water	62:54	0:0	6	,
water	62:56	0:0	6	"D"
water	62:60	0:0	6	(
water	62:61	0:0	6	ubuf1
water	62:66	0:0	6	)
water	62:67	0:0	6	,
water	62:69	0:0	6	"m"
water	62:73	0:0	6	(
water	62:74	0:0	6	dest
water	62:78	0:0	6	)
water	62:79	0:0	6	,
water	63:19	0:0	6	"a"
water	63:23	0:0	6	(
op	63:24	0:0	6	&
water	63:25	0:0	6	c
op	63:26	0:0	6	->
water	63:28	0:0	6	redDither
water	63:37	0:0	6	)
water	64:12	0:0	6	)
water	64:13	0:0	6	;
water	65:8	0:0	6	}
water	66:4	0:0	4	}

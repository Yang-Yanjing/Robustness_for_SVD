func	1:0	55:0	0	void	av_log_default_callback
params	1:28	0:0	1	
param	1:29	1:38	2	void *	ptr
param	1:40	1:49	2	int	level
param	1:51	1:66	2	const char *	fmt
param	1:68	1:78	2	va_list	vl
stmnts	3:4	53:32	1	
water	3:4	0:0	2	static
water	3:11	0:0	2	int
water	3:15	0:0	2	print_prefix
op	3:28	0:0	2	=
water	3:30	0:0	2	1
water	3:31	0:0	2	;
water	4:4	0:0	2	static
water	4:11	0:0	2	int
water	4:15	0:0	2	count
water	4:20	0:0	2	;
water	5:4	0:0	2	static
water	5:11	0:0	2	char
water	5:16	0:0	2	prev
op	5:20	0:0	2	[
water	5:21	0:0	2	LINE_SZ
op	5:28	0:0	2	]
water	5:29	0:0	2	;
decl	6:4	6:20	2	AVBPrint	part[4]
decl	7:4	7:22	2	char	line[LINE_SZ]
water	8:4	0:0	2	static
water	8:11	0:0	2	int
water	8:15	0:0	2	is_atty
water	8:22	0:0	2	;
decl	9:4	9:15	2	int	type[2]
water	10:4	0:0	2	unsigned
water	10:13	0:0	2	tint
op	10:18	0:0	2	=
water	10:20	0:0	2	0
water	10:21	0:0	2	;
if	11:4	14:4	2	(level >= 0)
cond	11:8	11:17	3	level >= 0
water	11:8	0:0	4	level
op	11:14	0:0	4	>=
water	11:17	0:0	4	0
stmts	11:20	14:4	3	
water	11:20	0:0	4	{
water	12:8	0:0	4	tint
op	12:13	0:0	4	=
water	12:15	0:0	4	level
op	12:21	0:0	4	&
water	12:23	0:0	4	0
water	12:24	0:0	4	xff00
water	12:29	0:0	4	;
water	13:8	0:0	4	level
op	13:14	0:0	4	&=
water	13:17	0:0	4	0
water	13:18	0:0	4	xff
water	13:21	0:0	4	;
water	14:4	0:0	4	}
if	15:4	16:14	2	(level > av_log_level)
cond	15:8	15:16	3	level > av_log_level
water	15:8	0:0	4	level
op	15:14	0:0	4	>
water	15:16	0:0	4	av_log_level
stmts	16:8	16:14	3	
return	16:8	16:14	4	
call	18:4	18:29	2	pthread_mutex_lock
arg	18:23	18:29	3	&mutex
op	18:23	0:0	4	&
water	18:24	0:0	4	mutex
water	18:30	0:0	2	;
call	20:4	20:62	2	format_line
arg	20:16	20:19	3	ptr
water	20:16	0:0	4	ptr
arg	20:21	20:26	3	level
water	20:21	0:0	4	level
arg	20:28	20:31	3	fmt
water	20:28	0:0	4	fmt
arg	20:33	20:35	3	vl
water	20:33	0:0	4	vl
arg	20:37	20:41	3	part
water	20:37	0:0	4	part
arg	20:43	20:56	3	&print_prefix
op	20:43	0:0	4	&
water	20:44	0:0	4	print_prefix
arg	20:58	20:62	3	type
water	20:58	0:0	4	type
water	20:63	0:0	2	;
call	21:4	21:95	2	snprintf
arg	21:13	21:17	3	line
water	21:13	0:0	4	line
arg	21:19	21:31	3	sizeof(line)
op	21:19	0:0	4	sizeof
water	21:25	0:0	4	(
water	21:26	0:0	4	line
water	21:30	0:0	4	)
arg	21:33	21:43	3	"%s%s%s%s"
water	21:33	0:0	4	"%s%s%s%s"
arg	21:45	21:56	3	part[0].str
water	21:45	0:0	4	part
op	21:49	0:0	4	[
water	21:50	0:0	4	0
op	21:51	0:0	4	]
op	21:52	0:0	4	.
water	21:53	0:0	4	str
arg	21:58	21:69	3	part[1].str
water	21:58	0:0	4	part
op	21:62	0:0	4	[
water	21:63	0:0	4	1
op	21:64	0:0	4	]
op	21:65	0:0	4	.
water	21:66	0:0	4	str
arg	21:71	21:82	3	part[2].str
water	21:71	0:0	4	part
op	21:75	0:0	4	[
water	21:76	0:0	4	2
op	21:77	0:0	4	]
op	21:78	0:0	4	.
water	21:79	0:0	4	str
arg	21:84	21:95	3	part[3].str
water	21:84	0:0	4	part
op	21:88	0:0	4	[
water	21:89	0:0	4	3
op	21:90	0:0	4	]
op	21:91	0:0	4	.
water	21:92	0:0	4	str
water	21:96	0:0	2	;
if	23:4	24:36	2	(! is_atty)
cond	23:8	23:9	3	! is_atty
op	23:8	0:0	4	!
water	23:9	0:0	4	is_atty
stmts	24:8	24:36	3	
water	24:8	0:0	4	is_atty
op	24:16	0:0	4	=
call	24:18	24:26	4	isatty
arg	24:25	24:26	5	2
water	24:25	0:0	6	2
water	24:28	0:0	4	?
water	24:30	0:0	4	1
water	24:32	0:0	4	:
op	24:34	0:0	4	-
water	24:35	0:0	4	1
water	24:36	0:0	4	;
if	26:4	32:4	2	(print_prefix && ( flags & AV_LOG_SKIP_REPEATED ) && !strcmp (line ,prev ) && * line && line [strlen (line ) - 1 ] != '\r')
cond	26:8	27:43	3	print_prefix && ( flags & AV_LOG_SKIP_REPEATED ) && !strcmp (line ,prev ) && * line && line [strlen (line ) - 1 ] != '\r'
water	26:8	0:0	4	print_prefix
op	26:21	0:0	4	&&
water	26:24	0:0	4	(
water	26:25	0:0	4	flags
op	26:31	0:0	4	&
water	26:33	0:0	4	AV_LOG_SKIP_REPEATED
water	26:53	0:0	4	)
op	26:55	0:0	4	&&
op	26:58	0:0	4	!
call	26:59	26:76	4	strcmp
arg	26:66	26:70	5	line
water	26:66	0:0	6	line
arg	26:72	26:76	5	prev
water	26:72	0:0	6	prev
op	26:78	0:0	4	&&
op	27:8	0:0	4	*
water	27:9	0:0	4	line
op	27:14	0:0	4	&&
water	27:17	0:0	4	line
op	27:21	0:0	4	[
call	27:22	27:33	4	strlen
arg	27:29	27:33	5	line
water	27:29	0:0	6	line
op	27:35	0:0	4	-
water	27:37	0:0	4	1
op	27:38	0:0	4	]
op	27:40	0:0	4	!=
water	27:43	0:0	4	'\r'
stmts	27:48	32:4	3	
water	27:48	0:0	4	{
water	28:8	0:0	4	count
op	28:13	0:0	4	++
water	28:15	0:0	4	;
if	29:8	30:74	4	(is_atty == 1)
cond	29:12	29:23	5	is_atty == 1
water	29:12	0:0	6	is_atty
op	29:20	0:0	6	==
water	29:23	0:0	6	1
stmts	30:12	30:74	5	
call	30:12	30:73	6	fprintf
arg	30:20	30:26	7	stderr
water	30:20	0:0	8	stderr
arg	30:28	30:66	7	"    Last message repeated %d times\r"
water	30:28	0:0	8	"    Last message repeated %d times\r"
arg	30:68	30:73	7	count
water	30:68	0:0	8	count
water	30:74	0:0	6	;
goto	31:8	31:16	4	end
water	31:13	0:0	5	end
water	32:4	0:0	4	}
if	33:4	36:4	2	(count > 0)
cond	33:8	33:16	3	count > 0
water	33:8	0:0	4	count
op	33:14	0:0	4	>
water	33:16	0:0	4	0
stmts	33:19	36:4	3	
water	33:19	0:0	4	{
call	34:8	34:69	4	fprintf
arg	34:16	34:22	5	stderr
water	34:16	0:0	6	stderr
arg	34:24	34:62	5	"    Last message repeated %d times\n"
water	34:24	0:0	6	"    Last message repeated %d times\n"
arg	34:64	34:69	5	count
water	34:64	0:0	6	count
water	34:70	0:0	4	;
water	35:8	0:0	4	count
op	35:14	0:0	4	=
water	35:16	0:0	4	0
water	35:17	0:0	4	;
water	36:4	0:0	4	}
call	37:4	37:21	2	strcpy
arg	37:11	37:15	3	prev
water	37:11	0:0	4	prev
arg	37:17	37:21	3	line
water	37:17	0:0	4	line
water	37:22	0:0	2	;
call	38:4	38:24	2	sanitize
arg	38:13	38:24	3	part[0].str
water	38:13	0:0	4	part
op	38:17	0:0	4	[
water	38:18	0:0	4	0
op	38:19	0:0	4	]
op	38:20	0:0	4	.
water	38:21	0:0	4	str
water	38:25	0:0	2	;
call	39:4	39:41	2	colored_fputs
arg	39:18	39:25	3	type[0]
water	39:18	0:0	4	type
op	39:22	0:0	4	[
water	39:23	0:0	4	0
op	39:24	0:0	4	]
arg	39:27	39:28	3	0
water	39:27	0:0	4	0
arg	39:30	39:41	3	part[0].str
water	39:30	0:0	4	part
op	39:34	0:0	4	[
water	39:35	0:0	4	0
op	39:36	0:0	4	]
op	39:37	0:0	4	.
water	39:38	0:0	4	str
water	39:42	0:0	2	;
call	40:4	40:24	2	sanitize
arg	40:13	40:24	3	part[1].str
water	40:13	0:0	4	part
op	40:17	0:0	4	[
water	40:18	0:0	4	1
op	40:19	0:0	4	]
op	40:20	0:0	4	.
water	40:21	0:0	4	str
water	40:25	0:0	2	;
call	41:4	41:41	2	colored_fputs
arg	41:18	41:25	3	type[1]
water	41:18	0:0	4	type
op	41:22	0:0	4	[
water	41:23	0:0	4	1
op	41:24	0:0	4	]
arg	41:27	41:28	3	0
water	41:27	0:0	4	0
arg	41:30	41:41	3	part[1].str
water	41:30	0:0	4	part
op	41:34	0:0	4	[
water	41:35	0:0	4	1
op	41:36	0:0	4	]
op	41:37	0:0	4	.
water	41:38	0:0	4	str
water	41:42	0:0	2	;
call	42:4	42:24	2	sanitize
arg	42:13	42:24	3	part[2].str
water	42:13	0:0	4	part
op	42:17	0:0	4	[
water	42:18	0:0	4	2
op	42:19	0:0	4	]
op	42:20	0:0	4	.
water	42:21	0:0	4	str
water	42:25	0:0	2	;
call	43:4	43:79	2	colored_fputs
arg	43:18	43:55	3	av_clip(level>>3,0,NB_LEVELS-1)
call	43:18	43:54	4	av_clip
arg	43:26	43:36	5	level>>3
water	43:26	0:0	6	level
op	43:32	0:0	6	>>
water	43:35	0:0	6	3
arg	43:38	43:39	5	0
water	43:38	0:0	6	0
arg	43:41	43:54	5	NB_LEVELS-1
water	43:41	0:0	6	NB_LEVELS
op	43:51	0:0	6	-
water	43:53	0:0	6	1
arg	43:57	43:66	3	tint>>8
water	43:57	0:0	4	tint
op	43:62	0:0	4	>>
water	43:65	0:0	4	8
arg	43:68	43:79	3	part[2].str
water	43:68	0:0	4	part
op	43:72	0:0	4	[
water	43:73	0:0	4	2
op	43:74	0:0	4	]
op	43:75	0:0	4	.
water	43:76	0:0	4	str
water	43:80	0:0	2	;
call	44:4	44:24	2	sanitize
arg	44:13	44:24	3	part[3].str
water	44:13	0:0	4	part
op	44:17	0:0	4	[
water	44:18	0:0	4	3
op	44:19	0:0	4	]
op	44:20	0:0	4	.
water	44:21	0:0	4	str
water	44:25	0:0	2	;
call	45:4	45:79	2	colored_fputs
arg	45:18	45:55	3	av_clip(level>>3,0,NB_LEVELS-1)
call	45:18	45:54	4	av_clip
arg	45:26	45:36	5	level>>3
water	45:26	0:0	6	level
op	45:32	0:0	6	>>
water	45:35	0:0	6	3
arg	45:38	45:39	5	0
water	45:38	0:0	6	0
arg	45:41	45:54	5	NB_LEVELS-1
water	45:41	0:0	6	NB_LEVELS
op	45:51	0:0	6	-
water	45:53	0:0	6	1
arg	45:57	45:66	3	tint>>8
water	45:57	0:0	4	tint
op	45:62	0:0	4	>>
water	45:65	0:0	4	8
arg	45:68	45:79	3	part[3].str
water	45:68	0:0	4	part
op	45:72	0:0	4	[
water	45:73	0:0	4	3
op	45:74	0:0	4	]
op	45:75	0:0	4	.
water	45:76	0:0	4	str
water	45:80	0:0	2	;
if	47:4	48:37	2	(level <= BACKTRACE_LOGLEVEL)
cond	47:8	47:17	3	level <= BACKTRACE_LOGLEVEL
water	47:8	0:0	4	level
op	47:14	0:0	4	<=
water	47:17	0:0	4	BACKTRACE_LOGLEVEL
stmts	48:8	48:37	3	
call	48:8	48:36	4	VALGRIND_PRINTF_BACKTRACE
arg	48:34	48:36	5	""
water	48:34	0:0	6	""
water	48:37	0:0	4	;
label	50:0	50:3	2	end :
call	51:4	51:35	2	av_bprint_finalize
arg	51:23	51:29	3	part+3
water	51:23	0:0	4	part
op	51:27	0:0	4	+
water	51:28	0:0	4	3
arg	51:31	51:35	3	NULL
water	51:31	0:0	4	NULL
water	51:36	0:0	2	;
call	53:4	53:31	2	pthread_mutex_unlock
arg	53:25	53:31	3	&mutex
op	53:25	0:0	4	&
water	53:26	0:0	4	mutex
water	53:32	0:0	2	;

func	1:0	107:0	0	int	av_parse_time
params	1:17	0:0	1	
param	1:18	1:34	2	int64_t *	timeval
param	1:36	1:55	2	const char *	timestr
param	1:57	1:69	2	int	duration
stmnts	0:0	106:12	1	
decl	3:4	3:21	2	const char	*p
water	3:17	0:0	2	,
decl	3:4	3:21	2	const char	*q
decl	4:4	4:13	2	int64_t	t
decl	5:4	5:14	2	time_t	now
decl	6:4	6:31	2	struct tm	dt
op	6:17	0:0	2	=
water	6:19	0:0	2	{
water	6:21	0:0	2	0
water	6:23	0:0	2	}
water	6:24	0:0	2	,
decl	6:4	6:31	2	struct tm	tmbuf
decl	7:4	7:49	2	int	today
op	7:14	0:0	2	=
water	7:16	0:0	2	0
water	7:17	0:0	2	,
decl	7:4	7:49	2	int	negative
op	7:28	0:0	2	=
water	7:30	0:0	2	0
water	7:31	0:0	2	,
decl	7:4	7:49	2	int	microseconds
op	7:46	0:0	2	=
water	7:48	0:0	2	0
decl	8:4	8:9	2	int	i
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	char
op	9:22	0:0	2	*
water	9:24	0:0	2	const
water	9:30	0:0	2	date_fmt
op	9:38	0:0	2	[
op	9:39	0:0	2	]
op	9:41	0:0	2	=
water	9:43	0:0	2	{
water	10:8	0:0	2	"%Y-%m-%d"
water	10:18	0:0	2	,
water	11:8	0:0	2	"%Y%m%d"
water	11:16	0:0	2	,
water	12:4	0:0	2	}
water	12:5	0:0	2	;
water	13:4	0:0	2	static
water	13:11	0:0	2	const
water	13:17	0:0	2	char
op	13:22	0:0	2	*
water	13:24	0:0	2	const
water	13:30	0:0	2	time_fmt
op	13:38	0:0	2	[
op	13:39	0:0	2	]
op	13:41	0:0	2	=
water	13:43	0:0	2	{
water	14:8	0:0	2	"%H:%M:%S"
water	14:18	0:0	2	,
water	15:8	0:0	2	"%H%M%S"
water	15:16	0:0	2	,
water	16:4	0:0	2	}
water	16:5	0:0	2	;
water	17:4	0:0	2	p
op	17:6	0:0	2	=
water	17:8	0:0	2	timestr
water	17:15	0:0	2	;
water	18:4	0:0	2	q
op	18:6	0:0	2	=
water	18:8	0:0	2	NULL
water	18:12	0:0	2	;
op	19:4	0:0	2	*
water	19:5	0:0	2	timeval
op	19:13	0:0	2	=
water	19:15	0:0	2	INT64_MIN
water	19:24	0:0	2	;
if	20:4	47:4	2	(! duration)
cond	20:8	20:9	3	! duration
op	20:8	0:0	4	!
water	20:9	0:0	4	duration
stmts	20:19	47:4	3	
water	20:19	0:0	4	{
water	21:8	0:0	4	now
op	21:12	0:0	4	=
call	21:14	21:20	4	time
arg	21:19	21:20	5	0
water	21:19	0:0	6	0
water	21:21	0:0	4	;
if	22:8	25:8	4	(!av_strcasecmp (timestr ,"now" ))
cond	22:12	22:41	5	!av_strcasecmp (timestr ,"now" )
op	22:12	0:0	6	!
call	22:13	22:41	6	av_strcasecmp
arg	22:27	22:34	7	timestr
water	22:27	0:0	8	timestr
arg	22:36	22:41	7	"now"
water	22:36	0:0	8	"now"
stmts	22:44	25:8	5	
water	22:44	0:0	6	{
op	23:12	0:0	6	*
water	23:13	0:0	6	timeval
op	23:21	0:0	6	=
water	23:23	0:0	6	(
water	23:24	0:0	6	int64_t
water	23:31	0:0	6	)
water	23:33	0:0	6	now
op	23:37	0:0	6	*
water	23:39	0:0	6	1000000
water	23:46	0:0	6	;
return	24:12	24:20	6	0
water	24:19	0:0	7	0
water	25:8	0:0	6	}
for	27:8	31:8	4	(i = 0 ;i <FF_ARRAY_ELEMS (date_fmt );i ++)
forinit	27:13	27:18	5	i = 0 ;
water	27:13	0:0	6	i
op	27:15	0:0	6	=
water	27:17	0:0	6	0
water	27:18	0:0	6	;
cond	27:20	27:47	5	i <FF_ARRAY_ELEMS (date_fmt )
water	27:20	0:0	6	i
op	27:22	0:0	6	<
call	27:24	27:47	6	FF_ARRAY_ELEMS
arg	27:39	27:47	7	date_fmt
water	27:39	0:0	8	date_fmt
forexpr	27:50	27:51	5	i ++
water	27:50	0:0	6	i
op	27:51	0:0	6	++
stmts	27:55	31:8	5	
water	27:55	0:0	6	{
water	28:12	0:0	6	q
op	28:14	0:0	6	=
call	28:16	28:53	6	av_small_strptime
arg	28:34	28:35	7	p
water	28:34	0:0	8	p
arg	28:37	28:48	7	date_fmt[i]
water	28:37	0:0	8	date_fmt
op	28:45	0:0	8	[
water	28:46	0:0	8	i
op	28:47	0:0	8	]
arg	28:50	28:53	7	&dt
op	28:50	0:0	8	&
water	28:51	0:0	8	dt
water	28:54	0:0	6	;
if	29:12	30:21	6	(q)
cond	29:16	29:16	7	q
water	29:16	0:0	8	q
stmts	30:16	30:21	7	
break	30:16	30:21	8	
water	31:8	0:0	6	}
if	34:8	37:8	4	(! q)
cond	34:12	34:13	5	! q
op	34:12	0:0	6	!
water	34:13	0:0	6	q
stmts	34:16	37:8	5	
water	34:16	0:0	6	{
water	35:12	0:0	6	today
op	35:18	0:0	6	=
water	35:20	0:0	6	1
water	35:21	0:0	6	;
water	36:12	0:0	6	q
op	36:14	0:0	6	=
water	36:16	0:0	6	p
water	36:17	0:0	6	;
water	37:8	0:0	6	}
water	38:8	0:0	4	p
op	38:10	0:0	4	=
water	38:12	0:0	4	q
water	38:13	0:0	4	;
if	39:8	40:15	4	(* p == 'T' || * p == 't' || * p == ' ')
cond	39:12	39:44	5	* p == 'T' || * p == 't' || * p == ' '
op	39:12	0:0	6	*
water	39:13	0:0	6	p
op	39:15	0:0	6	==
water	39:18	0:0	6	'T'
op	39:22	0:0	6	||
op	39:25	0:0	6	*
water	39:26	0:0	6	p
op	39:28	0:0	6	==
water	39:31	0:0	6	't'
op	39:35	0:0	6	||
op	39:38	0:0	6	*
water	39:39	0:0	6	p
op	39:41	0:0	6	==
water	39:44	0:0	6	' '
stmts	40:12	40:15	5	
water	40:12	0:0	6	p
op	40:13	0:0	6	++
water	40:15	0:0	6	;
for	42:8	46:8	4	(i = 0 ;i <FF_ARRAY_ELEMS (time_fmt );i ++)
forinit	42:13	42:18	5	i = 0 ;
water	42:13	0:0	6	i
op	42:15	0:0	6	=
water	42:17	0:0	6	0
water	42:18	0:0	6	;
cond	42:20	42:47	5	i <FF_ARRAY_ELEMS (time_fmt )
water	42:20	0:0	6	i
op	42:22	0:0	6	<
call	42:24	42:47	6	FF_ARRAY_ELEMS
arg	42:39	42:47	7	time_fmt
water	42:39	0:0	8	time_fmt
forexpr	42:50	42:51	5	i ++
water	42:50	0:0	6	i
op	42:51	0:0	6	++
stmts	42:55	46:8	5	
water	42:55	0:0	6	{
water	43:12	0:0	6	q
op	43:14	0:0	6	=
call	43:16	43:53	6	av_small_strptime
arg	43:34	43:35	7	p
water	43:34	0:0	8	p
arg	43:37	43:48	7	time_fmt[i]
water	43:37	0:0	8	time_fmt
op	43:45	0:0	8	[
water	43:46	0:0	8	i
op	43:47	0:0	8	]
arg	43:50	43:53	7	&dt
op	43:50	0:0	8	&
water	43:51	0:0	8	dt
water	43:54	0:0	6	;
if	44:12	45:21	6	(q)
cond	44:16	44:16	7	q
water	44:16	0:0	8	q
stmts	45:16	45:21	7	
break	45:16	45:21	8	
water	46:8	0:0	6	}
water	47:4	0:0	4	}
else	47:6	70:4	2
stmts	47:11	70:4	3	
water	47:11	0:0	4	{
if	49:8	52:8	4	(p [ 0 ] == '-')
cond	49:12	49:20	5	p [ 0 ] == '-'
water	49:12	0:0	6	p
op	49:13	0:0	6	[
water	49:14	0:0	6	0
op	49:15	0:0	6	]
op	49:17	0:0	6	==
water	49:20	0:0	6	'-'
stmts	49:25	52:8	5	
water	49:25	0:0	6	{
water	50:12	0:0	6	negative
op	50:21	0:0	6	=
water	50:23	0:0	6	1
water	50:24	0:0	6	;
op	51:12	0:0	6	++
water	51:14	0:0	6	p
water	51:15	0:0	6	;
water	52:8	0:0	6	}
water	54:8	0:0	4	q
op	54:10	0:0	4	=
call	54:12	54:48	4	av_small_strptime
arg	54:30	54:31	5	p
water	54:30	0:0	6	p
arg	54:33	54:43	5	"%J:%M:%S"
water	54:33	0:0	6	"%J:%M:%S"
arg	54:45	54:48	5	&dt
op	54:45	0:0	6	&
water	54:46	0:0	6	dt
water	54:49	0:0	4	;
if	55:8	59:8	4	(! q)
cond	55:12	55:13	5	! q
op	55:12	0:0	6	!
water	55:13	0:0	6	q
stmts	55:16	59:8	5	
water	55:16	0:0	6	{
water	57:12	0:0	6	q
op	57:14	0:0	6	=
call	57:16	57:49	6	av_small_strptime
arg	57:34	57:35	7	p
water	57:34	0:0	8	p
arg	57:37	57:44	7	"%M:%S"
water	57:37	0:0	8	"%M:%S"
arg	57:46	57:49	7	&dt
op	57:46	0:0	8	&
water	57:47	0:0	8	dt
water	57:50	0:0	6	;
water	58:12	0:0	6	dt
op	58:14	0:0	6	.
water	58:15	0:0	6	tm_hour
op	58:23	0:0	6	=
water	58:25	0:0	6	0
water	58:26	0:0	6	;
water	59:8	0:0	6	}
if	60:8	69:8	4	(! q)
cond	60:12	60:13	5	! q
op	60:12	0:0	6	!
water	60:13	0:0	6	q
stmts	60:16	69:8	5	
water	60:16	0:0	6	{
decl	61:12	61:19	6	char	*o
water	63:12	0:0	6	dt
op	63:14	0:0	6	.
water	63:15	0:0	6	tm_sec
op	63:22	0:0	6	=
call	63:24	63:40	6	strtol
arg	63:31	63:32	7	p
water	63:31	0:0	8	p
arg	63:34	63:36	7	&o
op	63:34	0:0	8	&
water	63:35	0:0	8	o
arg	63:38	63:40	7	10
water	63:38	0:0	8	10
water	63:41	0:0	6	;
if	64:12	65:38	6	(o == p)
cond	64:16	64:21	7	o == p
water	64:16	0:0	8	o
op	64:18	0:0	8	==
water	64:21	0:0	8	p
stmts	65:16	65:38	7	
return	65:16	65:38	8	AVERROR(EINVAL)
call	65:23	65:37	9	AVERROR
arg	65:31	65:37	10	EINVAL
water	65:31	0:0	11	EINVAL
water	66:12	0:0	6	dt
op	66:14	0:0	6	.
water	66:15	0:0	6	tm_min
op	66:22	0:0	6	=
water	66:24	0:0	6	0
water	66:25	0:0	6	;
water	67:12	0:0	6	dt
op	67:14	0:0	6	.
water	67:15	0:0	6	tm_hour
op	67:23	0:0	6	=
water	67:25	0:0	6	0
water	67:26	0:0	6	;
water	68:12	0:0	6	q
op	68:14	0:0	6	=
water	68:16	0:0	6	o
water	68:17	0:0	6	;
water	69:8	0:0	6	}
water	70:4	0:0	4	}
if	72:4	73:30	2	(! q)
cond	72:8	72:9	3	! q
op	72:8	0:0	4	!
water	72:9	0:0	4	q
stmts	73:8	73:30	3	
return	73:8	73:30	4	AVERROR(EINVAL)
call	73:15	73:29	5	AVERROR
arg	73:23	73:29	6	EINVAL
water	73:23	0:0	7	EINVAL
if	75:4	85:4	2	(* q == '.')
cond	75:8	75:14	3	* q == '.'
op	75:8	0:0	4	*
water	75:9	0:0	4	q
op	75:11	0:0	4	==
water	75:14	0:0	4	'.'
stmts	75:19	85:4	3	
water	75:19	0:0	4	{
decl	76:8	76:13	4	int	n
water	77:8	0:0	4	q
op	77:9	0:0	4	++
water	77:11	0:0	4	;
for	78:8	82:8	4	(n = 100000 ;n >= 1;n /= 10 , q ++)
forinit	78:13	78:23	5	n = 100000 ;
water	78:13	0:0	6	n
op	78:15	0:0	6	=
water	78:17	0:0	6	100000
water	78:23	0:0	6	;
cond	78:25	78:30	5	n >= 1
water	78:25	0:0	6	n
op	78:27	0:0	6	>=
water	78:30	0:0	6	1
forexpr	78:33	78:43	5	n /= 10 , q ++
water	78:33	0:0	6	n
op	78:35	0:0	6	/=
water	78:38	0:0	6	10
water	78:40	0:0	6	,
water	78:42	0:0	6	q
op	78:43	0:0	6	++
stmts	78:47	82:8	5	
water	78:47	0:0	6	{
if	79:12	80:21	6	(!av_isdigit (* q ))
cond	79:16	79:30	7	!av_isdigit (* q )
op	79:16	0:0	8	!
call	79:17	79:30	8	av_isdigit
arg	79:28	79:30	9	*q
op	79:28	0:0	10	*
water	79:29	0:0	10	q
stmts	80:16	80:21	7	
break	80:16	80:21	8	
water	81:12	0:0	6	microseconds
op	81:25	0:0	6	+=
water	81:28	0:0	6	n
op	81:30	0:0	6	*
water	81:32	0:0	6	(
op	81:33	0:0	6	*
water	81:34	0:0	6	q
op	81:36	0:0	6	-
water	81:38	0:0	6	'0'
water	81:41	0:0	6	)
water	81:42	0:0	6	;
water	82:8	0:0	6	}
while	83:8	84:15	4	(av_isdigit (* q ))
cond	83:15	83:28	5	av_isdigit (* q )
call	83:15	83:28	6	av_isdigit
arg	83:26	83:28	7	*q
op	83:26	0:0	8	*
water	83:27	0:0	8	q
stmts	84:12	84:15	5	
water	84:12	0:0	6	q
op	84:13	0:0	6	++
water	84:15	0:0	6	;
water	85:4	0:0	4	}
if	86:4	88:4	2	(duration)
cond	86:8	86:8	3	duration
water	86:8	0:0	4	duration
stmts	86:18	88:4	3	
water	86:18	0:0	4	{
water	87:8	0:0	4	t
op	87:10	0:0	4	=
water	87:12	0:0	4	dt
op	87:14	0:0	4	.
water	87:15	0:0	4	tm_hour
op	87:23	0:0	4	*
water	87:25	0:0	4	3600
op	87:30	0:0	4	+
water	87:32	0:0	4	dt
op	87:34	0:0	4	.
water	87:35	0:0	4	tm_min
op	87:42	0:0	4	*
water	87:44	0:0	4	60
op	87:47	0:0	4	+
water	87:49	0:0	4	dt
op	87:51	0:0	4	.
water	87:52	0:0	4	tm_sec
water	87:58	0:0	4	;
water	88:4	0:0	4	}
else	88:6	99:4	2
stmts	88:11	99:4	3	
water	88:11	0:0	4	{
decl	89:8	89:43	4	int	is_utc
op	89:19	0:0	4	=
op	89:21	0:0	4	*
water	89:22	0:0	4	q
op	89:24	0:0	4	==
water	89:27	0:0	4	'Z'
op	89:31	0:0	4	||
op	89:34	0:0	4	*
water	89:35	0:0	4	q
op	89:37	0:0	4	==
water	89:40	0:0	4	'z'
water	90:8	0:0	4	q
op	90:10	0:0	4	+=
water	90:13	0:0	4	is_utc
water	90:19	0:0	4	;
if	91:8	97:8	4	(today)
cond	91:12	91:12	5	today
water	91:12	0:0	6	today
stmts	91:19	97:8	5	
water	91:19	0:0	6	{
decl	92:12	92:89	6	struct tm	dt2
op	92:26	0:0	6	=
water	92:28	0:0	6	is_utc
water	92:35	0:0	6	?
call	92:37	92:59	7	*gmtime_r
arg	92:47	92:51	8	&now
op	92:47	0:0	9	&
water	92:48	0:0	9	now
arg	92:53	92:59	8	&tmbuf
op	92:53	0:0	9	&
water	92:54	0:0	9	tmbuf
water	92:61	0:0	6	:
call	92:63	92:88	7	*localtime_r
arg	92:76	92:80	8	&now
op	92:76	0:0	9	&
water	92:77	0:0	9	now
arg	92:82	92:88	8	&tmbuf
op	92:82	0:0	9	&
water	92:83	0:0	9	tmbuf
water	93:12	0:0	6	dt2
op	93:15	0:0	6	.
water	93:16	0:0	6	tm_hour
op	93:24	0:0	6	=
water	93:26	0:0	6	dt
op	93:28	0:0	6	.
water	93:29	0:0	6	tm_hour
water	93:36	0:0	6	;
water	94:12	0:0	6	dt2
op	94:15	0:0	6	.
water	94:16	0:0	6	tm_min
op	94:24	0:0	6	=
water	94:26	0:0	6	dt
op	94:28	0:0	6	.
water	94:29	0:0	6	tm_min
water	94:35	0:0	6	;
water	95:12	0:0	6	dt2
op	95:15	0:0	6	.
water	95:16	0:0	6	tm_sec
op	95:24	0:0	6	=
water	95:26	0:0	6	dt
op	95:28	0:0	6	.
water	95:29	0:0	6	tm_sec
water	95:35	0:0	6	;
water	96:12	0:0	6	dt
op	96:15	0:0	6	=
water	96:17	0:0	6	dt2
water	96:20	0:0	6	;
water	97:8	0:0	6	}
water	98:8	0:0	4	t
op	98:10	0:0	4	=
water	98:12	0:0	4	is_utc
water	98:19	0:0	4	?
call	98:21	98:34	4	av_timegm
arg	98:31	98:34	5	&dt
op	98:31	0:0	6	&
water	98:32	0:0	6	dt
water	98:36	0:0	4	:
call	98:38	98:48	4	mktime
arg	98:45	98:48	5	&dt
op	98:45	0:0	6	&
water	98:46	0:0	6	dt
water	98:49	0:0	4	;
water	99:4	0:0	4	}
if	101:4	102:30	2	(* q)
cond	101:8	101:9	3	* q
op	101:8	0:0	4	*
water	101:9	0:0	4	q
stmts	102:8	102:30	3	
return	102:8	102:30	4	AVERROR(EINVAL)
call	102:15	102:29	5	AVERROR
arg	102:23	102:29	6	EINVAL
water	102:23	0:0	7	EINVAL
water	103:4	0:0	2	t
op	103:6	0:0	2	*=
water	103:9	0:0	2	1000000
water	103:16	0:0	2	;
water	104:4	0:0	2	t
op	104:6	0:0	2	+=
water	104:9	0:0	2	microseconds
water	104:21	0:0	2	;
op	105:4	0:0	2	*
water	105:5	0:0	2	timeval
op	105:13	0:0	2	=
water	105:15	0:0	2	negative
water	105:24	0:0	2	?
op	105:26	0:0	2	-
water	105:27	0:0	2	t
water	105:29	0:0	2	:
water	105:31	0:0	2	t
water	105:32	0:0	2	;
return	106:4	106:12	2	0
water	106:11	0:0	3	0

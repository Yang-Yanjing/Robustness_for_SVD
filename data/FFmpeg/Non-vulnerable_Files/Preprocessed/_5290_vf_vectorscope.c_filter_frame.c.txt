func	1:0	23:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	22:40	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
decl	4:4	4:37	2	VectorscopeContext	*s
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:16	2	AVFrame	*out
decl	7:4	7:17	2	uint8_t	**dst
decl	8:4	8:12	2	int	i
water	8:9	0:0	2	,
decl	8:4	8:12	2	int	k
water	9:4	0:0	2	out
op	9:8	0:0	2	=
call	9:10	9:61	2	ff_get_video_buffer
arg	9:30	9:37	3	outlink
water	9:30	0:0	4	outlink
arg	9:39	9:49	3	outlink->w
water	9:39	0:0	4	outlink
op	9:46	0:0	4	->
water	9:48	0:0	4	w
arg	9:51	9:61	3	outlink->h
water	9:51	0:0	4	outlink
op	9:58	0:0	4	->
water	9:60	0:0	4	h
water	9:62	0:0	2	;
if	10:4	13:4	2	(! out)
cond	10:8	10:9	3	! out
op	10:8	0:0	4	!
water	10:9	0:0	4	out
stmts	10:14	13:4	3	
water	10:14	0:0	4	{
call	11:8	11:25	4	av_frame_free
arg	11:22	11:25	5	&in
op	11:22	0:0	6	&
water	11:23	0:0	6	in
water	11:26	0:0	4	;
return	12:8	12:30	4	AVERROR(ENOMEM)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	ENOMEM
water	12:23	0:0	7	ENOMEM
water	13:4	0:0	4	}
water	14:4	0:0	2	out
op	14:7	0:0	2	->
water	14:9	0:0	2	pts
op	14:13	0:0	2	=
water	14:15	0:0	2	in
op	14:17	0:0	2	->
water	14:19	0:0	2	pts
water	14:22	0:0	2	;
water	15:4	0:0	2	dst
op	15:8	0:0	2	=
water	15:10	0:0	2	out
op	15:13	0:0	2	->
water	15:15	0:0	2	data
water	15:19	0:0	2	;
for	16:4	19:83	2	(k = 0 ;k < 4 && dst [ k ];k ++)
forinit	16:9	16:14	3	k = 0 ;
water	16:9	0:0	4	k
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:30	3	k < 4 && dst [ k ]
water	16:16	0:0	4	k
op	16:18	0:0	4	<
water	16:20	0:0	4	4
op	16:22	0:0	4	&&
water	16:25	0:0	4	dst
op	16:28	0:0	4	[
water	16:29	0:0	4	k
op	16:30	0:0	4	]
forexpr	16:33	16:34	3	k ++
water	16:33	0:0	4	k
op	16:34	0:0	4	++
stmts	17:8	19:83	3	
for	17:8	19:83	4	(i = 0 ;i < outlink -> h;i ++)
forinit	17:13	17:18	5	i = 0 ;
water	17:13	0:0	6	i
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:33	5	i < outlink -> h
water	17:20	0:0	6	i
op	17:22	0:0	6	<
water	17:24	0:0	6	outlink
op	17:31	0:0	6	->
water	17:33	0:0	6	h
forexpr	17:37	17:38	5	i ++
water	17:37	0:0	6	i
op	17:38	0:0	6	++
stmts	18:12	19:83	5	
call	18:12	19:82	6	memset
arg	18:19	18:48	7	dst[k]+i*out->linesize[k]
water	18:19	0:0	8	dst
op	18:22	0:0	8	[
water	18:23	0:0	8	k
op	18:24	0:0	8	]
op	18:26	0:0	8	+
water	18:28	0:0	8	i
op	18:30	0:0	8	*
water	18:32	0:0	8	out
op	18:35	0:0	8	->
water	18:37	0:0	8	linesize
op	18:45	0:0	8	[
water	18:46	0:0	8	k
op	18:47	0:0	8	]
arg	19:19	19:70	7	s->mode==COLOR&&k==s->pd?0:s->bg_color[k]
water	19:19	0:0	8	s
op	19:20	0:0	8	->
water	19:22	0:0	8	mode
op	19:27	0:0	8	==
water	19:30	0:0	8	COLOR
op	19:36	0:0	8	&&
water	19:39	0:0	8	k
op	19:41	0:0	8	==
water	19:44	0:0	8	s
op	19:45	0:0	8	->
water	19:47	0:0	8	pd
water	19:50	0:0	8	?
water	19:52	0:0	8	0
water	19:54	0:0	8	:
water	19:56	0:0	8	s
op	19:57	0:0	8	->
water	19:59	0:0	8	bg_color
op	19:67	0:0	8	[
water	19:68	0:0	8	k
op	19:69	0:0	8	]
arg	19:72	19:82	7	outlink->w
water	19:72	0:0	8	outlink
op	19:79	0:0	8	->
water	19:81	0:0	8	w
water	19:83	0:0	6	;
call	20:4	20:33	2	vectorscope
arg	20:16	20:17	3	s
water	20:16	0:0	4	s
arg	20:19	20:21	3	in
water	20:19	0:0	4	in
arg	20:23	20:26	3	out
water	20:23	0:0	4	out
arg	20:28	20:33	3	s->pd
water	20:28	0:0	4	s
op	20:29	0:0	4	->
water	20:31	0:0	4	pd
water	20:34	0:0	2	;
call	21:4	21:21	2	av_frame_free
arg	21:18	21:21	3	&in
op	21:18	0:0	4	&
water	21:19	0:0	4	in
water	21:22	0:0	2	;
return	22:4	22:40	2	ff_filter_frame(outlink,out)
call	22:11	22:39	3	ff_filter_frame
arg	22:27	22:34	4	outlink
water	22:27	0:0	5	outlink
arg	22:36	22:39	4	out
water	22:36	0:0	5	out

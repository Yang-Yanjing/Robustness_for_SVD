func	1:15	27:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	26:12	1	
decl	3:4	3:36	2	InterleaveContext	*s
op	3:25	0:0	2	=
water	3:27	0:0	2	ctx
op	3:30	0:0	2	->
water	3:32	0:0	2	priv
decl	4:4	4:56	2	const AVFilterPad	*outpad
op	4:30	0:0	2	=
op	4:32	0:0	2	&
water	4:33	0:0	2	ctx
op	4:36	0:0	2	->
water	4:38	0:0	2	filter
op	4:44	0:0	2	->
water	4:46	0:0	2	outputs
op	4:53	0:0	2	[
water	4:54	0:0	2	0
op	4:55	0:0	2	]
decl	5:4	5:9	2	int	i
water	6:4	0:0	2	s
op	6:5	0:0	2	->
water	6:7	0:0	2	queues
op	6:14	0:0	2	=
call	6:16	6:60	2	av_calloc
arg	6:26	6:38	3	s->nb_inputs
water	6:26	0:0	4	s
op	6:27	0:0	4	->
water	6:29	0:0	4	nb_inputs
arg	6:40	6:60	3	sizeof(s->queues[0])
op	6:40	0:0	4	sizeof
water	6:46	0:0	4	(
water	6:47	0:0	4	s
op	6:48	0:0	4	->
water	6:50	0:0	4	queues
op	6:56	0:0	4	[
water	6:57	0:0	4	0
op	6:58	0:0	4	]
water	6:59	0:0	4	)
water	6:61	0:0	2	;
if	7:4	8:30	2	(! s -> queues)
cond	7:8	7:12	3	! s -> queues
op	7:8	0:0	4	!
water	7:9	0:0	4	s
op	7:10	0:0	4	->
water	7:12	0:0	4	queues
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(ENOMEM)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	ENOMEM
water	8:23	0:0	7	ENOMEM
for	9:4	25:4	2	(i = 0 ;i < s -> nb_inputs;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:23	3	i < s -> nb_inputs
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	s
op	9:21	0:0	4	->
water	9:23	0:0	4	nb_inputs
forexpr	9:34	9:35	3	i ++
water	9:34	0:0	4	i
op	9:35	0:0	4	++
stmts	9:39	25:4	3	
water	9:39	0:0	4	{
decl	10:8	10:33	4	AVFilterPad	inpad
op	10:26	0:0	4	=
water	10:28	0:0	4	{
water	10:30	0:0	4	0
water	10:32	0:0	4	}
water	11:8	0:0	4	inpad
op	11:13	0:0	4	.
water	11:14	0:0	4	name
op	11:19	0:0	4	=
call	11:21	11:45	4	av_asprintf
arg	11:33	11:42	5	"input%d"
water	11:33	0:0	6	"input%d"
arg	11:44	11:45	5	i
water	11:44	0:0	6	i
water	11:46	0:0	4	;
if	12:8	13:34	4	(! inpad . name)
cond	12:12	12:19	5	! inpad . name
op	12:12	0:0	6	!
water	12:13	0:0	6	inpad
op	12:18	0:0	6	.
water	12:19	0:0	6	name
stmts	13:12	13:34	5	
return	13:12	13:34	6	AVERROR(ENOMEM)
call	13:19	13:33	7	AVERROR
arg	13:27	13:33	8	ENOMEM
water	13:27	0:0	9	ENOMEM
water	14:8	0:0	4	inpad
op	14:13	0:0	4	.
water	14:14	0:0	4	type
op	14:27	0:0	4	=
water	14:29	0:0	4	outpad
op	14:35	0:0	4	->
water	14:37	0:0	4	type
water	14:41	0:0	4	;
water	15:8	0:0	4	inpad
op	15:13	0:0	4	.
water	15:14	0:0	4	filter_frame
op	15:27	0:0	4	=
water	15:29	0:0	4	filter_frame
water	15:41	0:0	4	;
switch	16:8	23:8	4	(outpad -> type)
cond	16:16	16:24	5	outpad -> type
water	16:16	0:0	6	outpad
op	16:22	0:0	6	->
water	16:24	0:0	6	type
stmts	16:30	23:8	5	
water	16:30	0:0	6	{
label	17:8	17:31	6	case AVMEDIA_TYPE_VIDEO :
water	18:12	0:0	6	inpad
op	18:17	0:0	6	.
water	18:18	0:0	6	get_video_buffer
op	18:35	0:0	6	=
water	18:37	0:0	6	ff_null_get_video_buffer
water	18:61	0:0	6	;
break	18:63	18:68	6	
label	19:8	19:31	6	case AVMEDIA_TYPE_AUDIO :
water	20:12	0:0	6	inpad
op	20:17	0:0	6	.
water	20:18	0:0	6	get_audio_buffer
op	20:35	0:0	6	=
water	20:37	0:0	6	ff_null_get_audio_buffer
water	20:61	0:0	6	;
break	20:63	20:68	6	
label	21:8	21:15	6	default :
call	22:12	22:24	6	av_assert0
arg	22:23	22:24	7	0
water	22:23	0:0	8	0
water	22:25	0:0	6	;
water	23:8	0:0	6	}
call	24:8	24:38	4	ff_insert_inpad
arg	24:24	24:27	5	ctx
water	24:24	0:0	6	ctx
arg	24:29	24:30	5	i
water	24:29	0:0	6	i
arg	24:32	24:38	5	&inpad
op	24:32	0:0	6	&
water	24:33	0:0	6	inpad
water	24:39	0:0	4	;
water	25:4	0:0	4	}
return	26:4	26:12	2	0
water	26:11	0:0	3	0

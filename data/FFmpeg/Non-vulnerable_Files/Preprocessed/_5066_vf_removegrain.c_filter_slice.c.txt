func	1:0	56:0	0	static int	filter_slice
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
param	1:46	1:55	2	void *	arg
param	1:57	1:66	2	int	jobnr
param	1:68	1:79	2	int	nb_jobs
stmnts	0:0	55:12	1	
decl	3:4	3:37	2	RemoveGrainContext	*s
op	3:26	0:0	2	=
water	3:28	0:0	2	ctx
op	3:31	0:0	2	->
water	3:33	0:0	2	priv
decl	4:4	4:24	2	ThreadData	*td
op	4:19	0:0	2	=
water	4:21	0:0	2	arg
decl	5:4	5:24	2	AVFrame	*in
op	5:16	0:0	2	=
water	5:18	0:0	2	td
op	5:20	0:0	2	->
water	5:22	0:0	2	in
decl	6:4	6:26	2	AVFrame	*out
op	6:17	0:0	2	=
water	6:19	0:0	2	td
op	6:21	0:0	2	->
water	6:23	0:0	2	out
decl	7:4	7:27	2	const int	i
op	7:16	0:0	2	=
water	7:18	0:0	2	td
op	7:20	0:0	2	->
water	7:22	0:0	2	plane
decl	8:4	8:40	2	const int	height
op	8:21	0:0	2	=
water	8:23	0:0	2	s
op	8:24	0:0	2	->
water	8:26	0:0	2	planeheight
op	8:37	0:0	2	[
water	8:38	0:0	2	i
op	8:39	0:0	2	]
decl	9:4	9:38	2	const int	om
op	9:17	0:0	2	=
water	9:19	0:0	2	in
op	9:21	0:0	2	->
water	9:23	0:0	2	linesize
op	9:31	0:0	2	[
water	9:32	0:0	2	i
op	9:33	0:0	2	]
op	9:35	0:0	2	-
water	9:37	0:0	2	1
decl	10:4	10:38	2	const int	o0
op	10:17	0:0	2	=
water	10:19	0:0	2	in
op	10:21	0:0	2	->
water	10:23	0:0	2	linesize
op	10:31	0:0	2	[
water	10:32	0:0	2	i
op	10:33	0:0	2	]
decl	11:4	11:38	2	const int	op
op	11:17	0:0	2	=
water	11:19	0:0	2	in
op	11:21	0:0	2	->
water	11:23	0:0	2	linesize
op	11:31	0:0	2	[
water	11:32	0:0	2	i
op	11:33	0:0	2	]
op	11:35	0:0	2	+
water	11:37	0:0	2	1
decl	12:4	12:46	2	int	start
op	12:14	0:0	2	=
water	12:16	0:0	2	(
water	12:17	0:0	2	height
op	12:24	0:0	2	*
water	12:27	0:0	2	jobnr
water	12:35	0:0	2	)
op	12:37	0:0	2	/
water	12:39	0:0	2	nb_jobs
decl	13:4	13:46	2	int	end
op	13:14	0:0	2	=
water	13:16	0:0	2	(
water	13:17	0:0	2	height
op	13:24	0:0	2	*
water	13:26	0:0	2	(
water	13:27	0:0	2	jobnr
op	13:32	0:0	2	+
water	13:33	0:0	2	1
water	13:34	0:0	2	)
water	13:35	0:0	2	)
op	13:37	0:0	2	/
water	13:39	0:0	2	nb_jobs
decl	14:4	14:12	2	int	x
water	14:9	0:0	2	,
decl	14:4	14:12	2	int	y
water	15:4	0:0	2	start
op	15:10	0:0	2	=
call	15:12	15:26	2	FFMAX
arg	15:18	15:19	3	1
water	15:18	0:0	4	1
arg	15:21	15:26	3	start
water	15:21	0:0	4	start
water	15:27	0:0	2	;
water	16:4	0:0	2	end
op	16:10	0:0	2	=
call	16:12	16:31	2	FFMIN
arg	16:18	16:26	3	height-1
water	16:18	0:0	4	height
op	16:24	0:0	4	-
water	16:25	0:0	4	1
arg	16:28	16:31	3	end
water	16:28	0:0	4	end
water	16:32	0:0	2	;
for	17:4	54:4	2	(y = start ;y < end;y ++)
forinit	17:9	17:18	3	y = start ;
water	17:9	0:0	4	y
op	17:11	0:0	4	=
water	17:13	0:0	4	start
water	17:18	0:0	4	;
cond	17:20	17:24	3	y < end
water	17:20	0:0	4	y
op	17:22	0:0	4	<
water	17:24	0:0	4	end
forexpr	17:29	17:30	3	y ++
water	17:29	0:0	4	y
op	17:30	0:0	4	++
stmts	17:34	54:4	3	
water	17:34	0:0	4	{
decl	18:8	18:35	4	uint8_t	*dst
op	18:21	0:0	4	=
water	18:23	0:0	4	out
op	18:26	0:0	4	->
water	18:28	0:0	4	data
op	18:32	0:0	4	[
water	18:33	0:0	4	i
op	18:34	0:0	4	]
decl	19:8	19:34	4	uint8_t	*src
op	19:21	0:0	4	=
water	19:23	0:0	4	in
op	19:25	0:0	4	->
water	19:27	0:0	4	data
op	19:31	0:0	4	[
water	19:32	0:0	4	i
op	19:33	0:0	4	]
water	20:8	0:0	4	src
op	20:12	0:0	4	=
water	20:14	0:0	4	in
op	20:16	0:0	4	->
water	20:18	0:0	4	data
op	20:22	0:0	4	[
water	20:23	0:0	4	i
op	20:24	0:0	4	]
op	20:26	0:0	4	+
water	20:28	0:0	4	y
op	20:30	0:0	4	*
water	20:32	0:0	4	in
op	20:34	0:0	4	->
water	20:36	0:0	4	linesize
op	20:44	0:0	4	[
water	20:45	0:0	4	i
op	20:46	0:0	4	]
water	20:47	0:0	4	;
water	21:8	0:0	4	dst
op	21:12	0:0	4	=
water	21:14	0:0	4	out
op	21:17	0:0	4	->
water	21:19	0:0	4	data
op	21:23	0:0	4	[
water	21:24	0:0	4	i
op	21:25	0:0	4	]
op	21:27	0:0	4	+
water	21:29	0:0	4	y
op	21:31	0:0	4	*
water	21:33	0:0	4	out
op	21:36	0:0	4	->
water	21:38	0:0	4	linesize
op	21:46	0:0	4	[
water	21:47	0:0	4	i
op	21:48	0:0	4	]
water	21:49	0:0	4	;
if	22:8	25:8	4	(s -> skip_even && ! ( y & 1 ))
cond	22:12	22:35	5	s -> skip_even && ! ( y & 1 )
water	22:12	0:0	6	s
op	22:13	0:0	6	->
water	22:15	0:0	6	skip_even
op	22:25	0:0	6	&&
op	22:28	0:0	6	!
water	22:29	0:0	6	(
water	22:30	0:0	6	y
op	22:32	0:0	6	&
water	22:34	0:0	6	1
water	22:35	0:0	6	)
stmts	22:38	25:8	5	
water	22:38	0:0	6	{
call	23:12	23:45	6	memcpy
arg	23:19	23:22	7	dst
water	23:19	0:0	8	dst
arg	23:24	23:27	7	src
water	23:24	0:0	8	src
arg	23:29	23:45	7	s->planewidth[i]
water	23:29	0:0	8	s
op	23:30	0:0	8	->
water	23:32	0:0	8	planewidth
op	23:42	0:0	8	[
water	23:43	0:0	8	i
op	23:44	0:0	8	]
water	23:46	0:0	6	;
continue	24:12	24:20	6	
water	25:8	0:0	6	}
if	26:8	29:8	4	(s -> skip_odd && y & 1)
cond	26:12	26:31	5	s -> skip_odd && y & 1
water	26:12	0:0	6	s
op	26:13	0:0	6	->
water	26:15	0:0	6	skip_odd
op	26:24	0:0	6	&&
water	26:27	0:0	6	y
op	26:29	0:0	6	&
water	26:31	0:0	6	1
stmts	26:34	29:8	5	
water	26:34	0:0	6	{
call	27:12	27:45	6	memcpy
arg	27:19	27:22	7	dst
water	27:19	0:0	8	dst
arg	27:24	27:27	7	src
water	27:24	0:0	8	src
arg	27:29	27:45	7	s->planewidth[i]
water	27:29	0:0	8	s
op	27:30	0:0	8	->
water	27:32	0:0	8	planewidth
op	27:42	0:0	8	[
water	27:43	0:0	8	i
op	27:44	0:0	8	]
water	27:46	0:0	6	;
continue	28:12	28:20	6	
water	29:8	0:0	6	}
op	30:8	0:0	4	*
water	30:9	0:0	4	dst
op	30:12	0:0	4	++
op	30:15	0:0	4	=
op	30:17	0:0	4	*
water	30:18	0:0	4	src
op	30:21	0:0	4	++
water	30:23	0:0	4	;
if	31:8	37:8	4	(s -> fl [ i ])
cond	31:12	31:19	5	s -> fl [ i ]
water	31:12	0:0	6	s
op	31:13	0:0	6	->
water	31:15	0:0	6	fl
op	31:17	0:0	6	[
water	31:18	0:0	6	i
op	31:19	0:0	6	]
stmts	31:22	37:8	5	
water	31:22	0:0	6	{
decl	32:12	32:52	6	int	w_asm
op	32:22	0:0	6	=
water	32:24	0:0	6	(
water	32:25	0:0	6	s
op	32:26	0:0	6	->
water	32:28	0:0	6	planewidth
op	32:38	0:0	6	[
water	32:39	0:0	6	i
op	32:40	0:0	6	]
op	32:42	0:0	6	-
water	32:44	0:0	6	2
water	32:45	0:0	6	)
op	32:47	0:0	6	&
water	32:49	0:0	6	~15
water	33:12	0:0	6	s
op	33:13	0:0	6	->
water	33:15	0:0	6	fl
op	33:17	0:0	6	[
water	33:18	0:0	6	i
op	33:19	0:0	6	]
water	33:20	0:0	6	(
water	33:21	0:0	6	dst
water	33:24	0:0	6	,
water	33:26	0:0	6	src
water	33:29	0:0	6	,
water	33:31	0:0	6	in
op	33:33	0:0	6	->
water	33:35	0:0	6	linesize
op	33:43	0:0	6	[
water	33:44	0:0	6	i
op	33:45	0:0	6	]
water	33:46	0:0	6	,
water	33:48	0:0	6	w_asm
water	33:53	0:0	6	)
water	33:54	0:0	6	;
water	34:12	0:0	6	x
op	34:14	0:0	6	=
water	34:16	0:0	6	1
op	34:18	0:0	6	+
water	34:20	0:0	6	w_asm
water	34:25	0:0	6	;
water	35:12	0:0	6	dst
op	35:16	0:0	6	+=
water	35:19	0:0	6	w_asm
water	35:24	0:0	6	;
water	36:12	0:0	6	src
op	36:16	0:0	6	+=
water	36:19	0:0	6	w_asm
water	36:24	0:0	6	;
water	37:8	0:0	6	}
else	37:10	38:17	4
stmts	38:12	38:17	5	
water	38:12	0:0	6	x
op	38:14	0:0	6	=
water	38:16	0:0	6	1
water	38:17	0:0	6	;
for	39:8	52:8	4	(;x < s -> planewidth [ i ] - 1;x ++)
forinit	39:13	39:13	5	;
water	39:13	0:0	6	;
cond	39:15	39:38	5	x < s -> planewidth [ i ] - 1
water	39:15	0:0	6	x
op	39:17	0:0	6	<
water	39:19	0:0	6	s
op	39:20	0:0	6	->
water	39:22	0:0	6	planewidth
op	39:32	0:0	6	[
water	39:33	0:0	6	i
op	39:34	0:0	6	]
op	39:36	0:0	6	-
water	39:38	0:0	6	1
forexpr	39:41	39:42	5	x ++
water	39:41	0:0	6	x
op	39:42	0:0	6	++
stmts	39:46	52:8	5	
water	39:46	0:0	6	{
decl	40:12	40:35	6	const int	a1
op	40:25	0:0	6	=
water	40:27	0:0	6	src
op	40:30	0:0	6	[
op	40:31	0:0	6	-
water	40:32	0:0	6	op
op	40:34	0:0	6	]
decl	41:12	41:35	6	const int	a2
op	41:25	0:0	6	=
water	41:27	0:0	6	src
op	41:30	0:0	6	[
op	41:31	0:0	6	-
water	41:32	0:0	6	o0
op	41:34	0:0	6	]
decl	42:12	42:35	6	const int	a3
op	42:25	0:0	6	=
water	42:27	0:0	6	src
op	42:30	0:0	6	[
op	42:31	0:0	6	-
water	42:32	0:0	6	om
op	42:34	0:0	6	]
decl	43:12	43:35	6	const int	a4
op	43:25	0:0	6	=
water	43:27	0:0	6	src
op	43:30	0:0	6	[
op	43:31	0:0	6	-
water	43:32	0:0	6	1
op	43:34	0:0	6	]
decl	44:12	44:35	6	const int	c
op	44:25	0:0	6	=
water	44:27	0:0	6	src
op	44:30	0:0	6	[
water	44:32	0:0	6	0
op	44:34	0:0	6	]
decl	45:12	45:35	6	const int	a5
op	45:25	0:0	6	=
water	45:27	0:0	6	src
op	45:30	0:0	6	[
water	45:32	0:0	6	1
op	45:34	0:0	6	]
decl	46:12	46:35	6	const int	a6
op	46:25	0:0	6	=
water	46:27	0:0	6	src
op	46:30	0:0	6	[
water	46:32	0:0	6	om
op	46:34	0:0	6	]
decl	47:12	47:35	6	const int	a7
op	47:25	0:0	6	=
water	47:27	0:0	6	src
op	47:30	0:0	6	[
water	47:32	0:0	6	o0
op	47:34	0:0	6	]
decl	48:12	48:35	6	const int	a8
op	48:25	0:0	6	=
water	48:27	0:0	6	src
op	48:30	0:0	6	[
water	48:32	0:0	6	op
op	48:34	0:0	6	]
decl	49:12	49:71	6	const int	res
op	49:26	0:0	6	=
water	49:28	0:0	6	s
op	49:29	0:0	6	->
water	49:31	0:0	6	rg
op	49:33	0:0	6	[
water	49:34	0:0	6	i
op	49:35	0:0	6	]
water	49:36	0:0	6	(
water	49:37	0:0	6	c
water	49:38	0:0	6	,
water	49:40	0:0	6	a1
water	49:42	0:0	6	,
water	49:44	0:0	6	a2
water	49:46	0:0	6	,
water	49:48	0:0	6	a3
water	49:50	0:0	6	,
water	49:52	0:0	6	a4
water	49:54	0:0	6	,
water	49:56	0:0	6	a5
water	49:58	0:0	6	,
water	49:60	0:0	6	a6
water	49:62	0:0	6	,
water	49:64	0:0	6	a7
water	49:66	0:0	6	,
water	49:68	0:0	6	a8
water	49:70	0:0	6	)
op	50:12	0:0	6	*
water	50:13	0:0	6	dst
op	50:17	0:0	6	=
water	50:19	0:0	6	res
water	50:22	0:0	6	;
water	51:12	0:0	6	dst
op	51:15	0:0	6	++
water	51:17	0:0	6	,
water	51:19	0:0	6	src
op	51:22	0:0	6	++
water	51:24	0:0	6	;
water	52:8	0:0	6	}
water	53:8	0:0	4	dst
op	53:11	0:0	4	[
water	53:12	0:0	4	0
op	53:13	0:0	4	]
op	53:15	0:0	4	=
water	53:17	0:0	4	src
op	53:20	0:0	4	[
water	53:21	0:0	4	0
op	53:22	0:0	4	]
water	53:23	0:0	4	;
water	54:4	0:0	4	}
return	55:4	55:12	2	0
water	55:11	0:0	3	0

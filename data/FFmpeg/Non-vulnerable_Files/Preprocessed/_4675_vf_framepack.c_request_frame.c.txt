func	1:0	55:0	0	static int	request_frame
params	1:24	0:0	1	
param	1:25	1:46	2	AVFilterLink *	outlink
stmnts	0:0	54:4	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:35	2	FramepackContext	*s
op	4:24	0:0	2	=
water	4:26	0:0	2	ctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv
decl	5:4	5:22	2	AVStereo3D	*stereo
decl	6:4	6:14	2	int	ret
water	6:11	0:0	2	,
decl	6:4	6:14	2	int	i
for	8:4	14:4	2	(i = 0 ;i < 2;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < 2
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	2
forexpr	8:23	8:24	3	i ++
water	8:23	0:0	4	i
op	8:24	0:0	4	++
stmts	8:28	14:4	3	
water	8:28	0:0	4	{
if	9:8	13:8	4	(! s -> input_views [ i ])
cond	9:12	9:29	5	! s -> input_views [ i ]
op	9:12	0:0	6	!
water	9:13	0:0	6	s
op	9:14	0:0	6	->
water	9:16	0:0	6	input_views
op	9:27	0:0	6	[
water	9:28	0:0	6	i
op	9:29	0:0	6	]
stmts	9:32	13:8	5	
water	9:32	0:0	6	{
water	10:12	0:0	6	ret
op	10:16	0:0	6	=
call	10:18	10:49	6	ff_request_frame
arg	10:35	10:49	7	ctx->inputs[i]
water	10:35	0:0	8	ctx
op	10:38	0:0	8	->
water	10:40	0:0	8	inputs
op	10:46	0:0	8	[
water	10:47	0:0	8	i
op	10:48	0:0	8	]
water	10:50	0:0	6	;
if	11:12	12:26	6	(ret < 0)
cond	11:16	11:22	7	ret < 0
water	11:16	0:0	8	ret
op	11:20	0:0	8	<
water	11:22	0:0	8	0
stmts	12:16	12:26	7	
return	12:16	12:26	8	ret
water	12:23	0:0	9	ret
water	13:8	0:0	6	}
water	14:4	0:0	4	}
if	15:4	33:4	2	(s -> format == AV_STEREO3D_FRAMESEQUENCE)
cond	15:8	15:21	3	s -> format == AV_STEREO3D_FRAMESEQUENCE
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	format
op	15:18	0:0	4	==
water	15:21	0:0	4	AV_STEREO3D_FRAMESEQUENCE
stmts	15:48	33:4	3	
water	15:48	0:0	4	{
if	16:8	17:53	4	(s -> double_pts == AV_NOPTS_VALUE)
cond	16:12	16:29	5	s -> double_pts == AV_NOPTS_VALUE
water	16:12	0:0	6	s
op	16:13	0:0	6	->
water	16:15	0:0	6	double_pts
op	16:26	0:0	6	==
water	16:29	0:0	6	AV_NOPTS_VALUE
stmts	17:12	17:53	5	
water	17:12	0:0	6	s
op	17:13	0:0	6	->
water	17:15	0:0	6	double_pts
op	17:26	0:0	6	=
water	17:28	0:0	6	s
op	17:29	0:0	6	->
water	17:31	0:0	6	input_views
op	17:42	0:0	6	[
water	17:43	0:0	6	LEFT
op	17:47	0:0	6	]
op	17:48	0:0	6	->
water	17:50	0:0	6	pts
water	17:53	0:0	6	;
for	18:8	31:8	4	(i = 0 ;i < 2;i ++)
forinit	18:13	18:18	5	i = 0 ;
water	18:13	0:0	6	i
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:24	5	i < 2
water	18:20	0:0	6	i
op	18:22	0:0	6	<
water	18:24	0:0	6	2
forexpr	18:27	18:28	5	i ++
water	18:27	0:0	6	i
op	18:28	0:0	6	++
stmts	18:32	31:8	5	
water	18:32	0:0	6	{
water	20:12	0:0	6	s
op	20:13	0:0	6	->
water	20:15	0:0	6	input_views
op	20:26	0:0	6	[
water	20:27	0:0	6	i
op	20:28	0:0	6	]
op	20:29	0:0	6	->
water	20:31	0:0	6	pts
op	20:35	0:0	6	=
water	20:37	0:0	6	s
op	20:38	0:0	6	->
water	20:40	0:0	6	double_pts
op	20:50	0:0	6	++
water	20:52	0:0	6	;
water	22:12	0:0	6	stereo
op	22:19	0:0	6	=
call	22:21	22:67	6	av_stereo3d_create_side_data
arg	22:50	22:67	7	s->input_views[i]
water	22:50	0:0	8	s
op	22:51	0:0	8	->
water	22:53	0:0	8	input_views
op	22:64	0:0	8	[
water	22:65	0:0	8	i
op	22:66	0:0	8	]
water	22:68	0:0	6	;
if	23:12	24:38	6	(! stereo)
cond	23:16	23:17	7	! stereo
op	23:16	0:0	8	!
water	23:17	0:0	8	stereo
stmts	24:16	24:38	7	
return	24:16	24:38	8	AVERROR(ENOMEM)
call	24:23	24:37	9	AVERROR
arg	24:31	24:37	10	ENOMEM
water	24:31	0:0	11	ENOMEM
water	25:12	0:0	6	stereo
op	25:18	0:0	6	->
water	25:20	0:0	6	type
op	25:25	0:0	6	=
water	25:27	0:0	6	s
op	25:28	0:0	6	->
water	25:30	0:0	6	format
water	25:36	0:0	6	;
water	27:12	0:0	6	ret
op	27:16	0:0	6	=
call	27:18	27:60	6	ff_filter_frame
arg	27:34	27:41	7	outlink
water	27:34	0:0	8	outlink
arg	27:43	27:60	7	s->input_views[i]
water	27:43	0:0	8	s
op	27:44	0:0	8	->
water	27:46	0:0	8	input_views
op	27:57	0:0	8	[
water	27:58	0:0	8	i
op	27:59	0:0	8	]
water	27:61	0:0	6	;
water	28:12	0:0	6	s
op	28:13	0:0	6	->
water	28:15	0:0	6	input_views
op	28:26	0:0	6	[
water	28:27	0:0	6	i
op	28:28	0:0	6	]
op	28:30	0:0	6	=
water	28:32	0:0	6	NULL
water	28:36	0:0	6	;
if	29:12	30:26	6	(ret < 0)
cond	29:16	29:22	7	ret < 0
water	29:16	0:0	8	ret
op	29:20	0:0	8	<
water	29:22	0:0	8	0
stmts	30:16	30:26	7	
return	30:16	30:26	8	ret
water	30:23	0:0	9	ret
water	31:8	0:0	6	}
return	32:8	32:18	4	ret
water	32:15	0:0	5	ret
water	33:4	0:0	4	}
else	33:6	54:4	2
stmts	33:11	54:4	3	
water	33:11	0:0	4	{
decl	34:8	34:75	4	AVFrame	*dst
op	34:21	0:0	4	=
call	34:23	34:74	5	ff_get_video_buffer
arg	34:43	34:50	6	outlink
water	34:43	0:0	7	outlink
arg	34:52	34:62	6	outlink->w
water	34:52	0:0	7	outlink
op	34:59	0:0	7	->
water	34:61	0:0	7	w
arg	34:64	34:74	6	outlink->h
water	34:64	0:0	7	outlink
op	34:71	0:0	7	->
water	34:73	0:0	7	h
if	35:8	36:34	4	(! dst)
cond	35:12	35:13	5	! dst
op	35:12	0:0	6	!
water	35:13	0:0	6	dst
stmts	36:12	36:34	5	
return	36:12	36:34	6	AVERROR(ENOMEM)
call	36:19	36:33	7	AVERROR
arg	36:27	36:33	8	ENOMEM
water	36:27	0:0	9	ENOMEM
call	37:8	37:33	4	spatial_frame_pack
arg	37:27	37:28	5	s
water	37:27	0:0	6	s
arg	37:30	37:33	5	dst
water	37:30	0:0	6	dst
water	37:34	0:0	4	;
water	39:8	0:0	4	ret
op	39:12	0:0	4	=
call	39:14	39:59	4	av_frame_copy_props
arg	39:34	39:37	5	dst
water	39:34	0:0	6	dst
arg	39:39	39:59	5	s->input_views[LEFT]
water	39:39	0:0	6	s
op	39:40	0:0	6	->
water	39:42	0:0	6	input_views
op	39:53	0:0	6	[
water	39:54	0:0	6	LEFT
op	39:58	0:0	6	]
water	39:60	0:0	4	;
if	40:8	43:8	4	(ret < 0)
cond	40:12	40:18	5	ret < 0
water	40:12	0:0	6	ret
op	40:16	0:0	6	<
water	40:18	0:0	6	0
stmts	40:21	43:8	5	
water	40:21	0:0	6	{
call	41:12	41:30	6	av_frame_free
arg	41:26	41:30	7	&dst
op	41:26	0:0	8	&
water	41:27	0:0	8	dst
water	41:31	0:0	6	;
return	42:12	42:22	6	ret
water	42:19	0:0	7	ret
water	43:8	0:0	6	}
for	44:8	45:45	4	(i = 0 ;i < 2;i ++)
forinit	44:13	44:18	5	i = 0 ;
water	44:13	0:0	6	i
op	44:15	0:0	6	=
water	44:17	0:0	6	0
water	44:18	0:0	6	;
cond	44:20	44:24	5	i < 2
water	44:20	0:0	6	i
op	44:22	0:0	6	<
water	44:24	0:0	6	2
forexpr	44:27	44:28	5	i ++
water	44:27	0:0	6	i
op	44:28	0:0	6	++
stmts	45:12	45:45	5	
call	45:12	45:44	6	av_frame_free
arg	45:26	45:44	7	&s->input_views[i]
op	45:26	0:0	8	&
water	45:27	0:0	8	s
op	45:28	0:0	8	->
water	45:30	0:0	8	input_views
op	45:41	0:0	8	[
water	45:42	0:0	8	i
op	45:43	0:0	8	]
water	45:45	0:0	6	;
water	47:8	0:0	4	stereo
op	47:15	0:0	4	=
call	47:17	47:49	4	av_stereo3d_create_side_data
arg	47:46	47:49	5	dst
water	47:46	0:0	6	dst
water	47:50	0:0	4	;
if	48:8	51:8	4	(! stereo)
cond	48:12	48:13	5	! stereo
op	48:12	0:0	6	!
water	48:13	0:0	6	stereo
stmts	48:21	51:8	5	
water	48:21	0:0	6	{
call	49:12	49:30	6	av_frame_free
arg	49:26	49:30	7	&dst
op	49:26	0:0	8	&
water	49:27	0:0	8	dst
water	49:31	0:0	6	;
return	50:12	50:34	6	AVERROR(ENOMEM)
call	50:19	50:33	7	AVERROR
arg	50:27	50:33	8	ENOMEM
water	50:27	0:0	9	ENOMEM
water	51:8	0:0	6	}
water	52:8	0:0	4	stereo
op	52:14	0:0	4	->
water	52:16	0:0	4	type
op	52:21	0:0	4	=
water	52:23	0:0	4	s
op	52:24	0:0	4	->
water	52:26	0:0	4	format
water	52:32	0:0	4	;
return	53:8	53:44	4	ff_filter_frame(outlink,dst)
call	53:15	53:43	5	ff_filter_frame
arg	53:31	53:38	6	outlink
water	53:31	0:0	7	outlink
arg	53:40	53:43	6	dst
water	53:40	0:0	7	dst
water	54:4	0:0	4	}

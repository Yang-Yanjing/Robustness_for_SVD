func	1:0	44:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	43:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:16	2	AVFrame	*out
decl	6:4	6:31	2	RotContext	*rot
op	6:20	0:0	2	=
water	6:22	0:0	2	ctx
op	6:25	0:0	2	->
water	6:27	0:0	2	priv
decl	7:4	7:30	2	int	angle_int
water	7:17	0:0	2	,
decl	7:4	7:30	2	int	s
water	7:20	0:0	2	,
decl	7:4	7:30	2	int	c
water	7:23	0:0	2	,
decl	7:4	7:30	2	int	plane
decl	8:4	8:14	2	double	res
water	9:4	0:0	2	out
op	9:8	0:0	2	=
call	9:10	9:61	2	ff_get_video_buffer
arg	9:30	9:37	3	outlink
water	9:30	0:0	4	outlink
arg	9:39	9:49	3	outlink->w
water	9:39	0:0	4	outlink
op	9:46	0:0	4	->
water	9:48	0:0	4	w
arg	9:51	9:61	3	outlink->h
water	9:51	0:0	4	outlink
op	9:58	0:0	4	->
water	9:60	0:0	4	h
water	9:62	0:0	2	;
if	10:4	13:4	2	(! out)
cond	10:8	10:9	3	! out
op	10:8	0:0	4	!
water	10:9	0:0	4	out
stmts	10:14	13:4	3	
water	10:14	0:0	4	{
call	11:8	11:25	4	av_frame_free
arg	11:22	11:25	5	&in
op	11:22	0:0	6	&
water	11:23	0:0	6	in
water	11:26	0:0	4	;
return	12:8	12:30	4	AVERROR(ENOMEM)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	ENOMEM
water	12:23	0:0	7	ENOMEM
water	13:4	0:0	4	}
call	14:4	14:31	2	av_frame_copy_props
arg	14:24	14:27	3	out
water	14:24	0:0	4	out
arg	14:29	14:31	3	in
water	14:29	0:0	4	in
water	14:32	0:0	2	;
water	15:4	0:0	2	rot
op	15:7	0:0	2	->
water	15:9	0:0	2	var_values
op	15:19	0:0	2	[
water	15:20	0:0	2	VAR_N
op	15:25	0:0	2	]
op	15:27	0:0	2	=
water	15:29	0:0	2	inlink
op	15:35	0:0	2	->
water	15:37	0:0	2	frame_count
water	15:48	0:0	2	;
water	16:4	0:0	2	rot
op	16:7	0:0	2	->
water	16:9	0:0	2	var_values
op	16:19	0:0	2	[
water	16:20	0:0	2	VAR_T
op	16:25	0:0	2	]
op	16:27	0:0	2	=
call	16:29	16:60	2	TS2T
arg	16:34	16:41	3	in->pts
water	16:34	0:0	4	in
op	16:36	0:0	4	->
water	16:38	0:0	4	pts
arg	16:43	16:60	3	inlink->time_base
water	16:43	0:0	4	inlink
op	16:49	0:0	4	->
water	16:51	0:0	4	time_base
water	16:61	0:0	2	;
water	17:4	0:0	2	rot
op	17:7	0:0	2	->
water	17:9	0:0	2	angle
op	17:15	0:0	2	=
water	17:17	0:0	2	res
op	17:21	0:0	2	=
call	17:23	17:73	2	av_expr_eval
arg	17:36	17:51	3	rot->angle_expr
water	17:36	0:0	4	rot
op	17:39	0:0	4	->
water	17:41	0:0	4	angle_expr
arg	17:53	17:68	3	rot->var_values
water	17:53	0:0	4	rot
op	17:56	0:0	4	->
water	17:58	0:0	4	var_values
arg	17:70	17:73	3	rot
water	17:70	0:0	4	rot
water	17:74	0:0	2	;
call	18:4	19:74	2	av_log
arg	18:11	18:14	3	ctx
water	18:11	0:0	4	ctx
arg	18:16	18:28	3	AV_LOG_DEBUG
water	18:16	0:0	4	AV_LOG_DEBUG
arg	18:30	18:58	3	"n:%f time:%f angle:%f/PI\n"
water	18:30	0:0	4	"n:%f time:%f angle:%f/PI\n"
arg	19:11	19:33	3	rot->var_values[VAR_N]
water	19:11	0:0	4	rot
op	19:14	0:0	4	->
water	19:16	0:0	4	var_values
op	19:26	0:0	4	[
water	19:27	0:0	4	VAR_N
op	19:32	0:0	4	]
arg	19:35	19:57	3	rot->var_values[VAR_T]
water	19:35	0:0	4	rot
op	19:38	0:0	4	->
water	19:40	0:0	4	var_values
op	19:50	0:0	4	[
water	19:51	0:0	4	VAR_T
op	19:56	0:0	4	]
arg	19:59	19:74	3	rot->angle/M_PI
water	19:59	0:0	4	rot
op	19:62	0:0	4	->
water	19:64	0:0	4	angle
op	19:69	0:0	4	/
water	19:70	0:0	4	M_PI
water	19:75	0:0	2	;
water	20:4	0:0	2	angle_int
op	20:14	0:0	2	=
water	20:16	0:0	2	res
op	20:20	0:0	2	*
water	20:22	0:0	2	FIXP
op	20:27	0:0	2	*
water	20:29	0:0	2	16
water	20:31	0:0	2	;
water	21:4	0:0	2	s
op	21:6	0:0	2	=
call	21:8	21:25	2	int_sin
arg	21:16	21:25	3	angle_int
water	21:16	0:0	4	angle_int
water	21:26	0:0	2	;
water	22:4	0:0	2	c
op	22:6	0:0	2	=
call	22:8	22:36	2	int_sin
arg	22:16	22:36	3	angle_int+INT_PI/2
water	22:16	0:0	4	angle_int
op	22:26	0:0	4	+
water	22:28	0:0	4	INT_PI
op	22:34	0:0	4	/
water	22:35	0:0	4	2
water	22:37	0:0	2	;
if	24:4	26:55	2	(rot -> fillcolor_enable)
cond	24:8	24:13	3	rot -> fillcolor_enable
water	24:8	0:0	4	rot
op	24:11	0:0	4	->
water	24:13	0:0	4	fillcolor_enable
stmts	25:8	26:55	3	
call	25:8	26:54	4	ff_fill_rectangle
arg	25:26	25:36	5	&rot->draw
op	25:26	0:0	6	&
water	25:27	0:0	6	rot
op	25:30	0:0	6	->
water	25:32	0:0	6	draw
arg	25:38	25:49	5	&rot->color
op	25:38	0:0	6	&
water	25:39	0:0	6	rot
op	25:42	0:0	6	->
water	25:44	0:0	6	color
arg	25:51	25:60	5	out->data
water	25:51	0:0	6	out
op	25:54	0:0	6	->
water	25:56	0:0	6	data
arg	25:62	25:75	5	out->linesize
water	25:62	0:0	6	out
op	25:65	0:0	6	->
water	25:67	0:0	6	linesize
arg	26:26	26:27	5	0
water	26:26	0:0	6	0
arg	26:29	26:30	5	0
water	26:29	0:0	6	0
arg	26:32	26:42	5	outlink->w
water	26:32	0:0	6	outlink
op	26:39	0:0	6	->
water	26:41	0:0	6	w
arg	26:44	26:54	5	outlink->h
water	26:44	0:0	6	outlink
op	26:51	0:0	6	->
water	26:53	0:0	6	h
water	26:55	0:0	4	;
for	27:4	41:4	2	(plane = 0 ;plane < rot -> nb_planes;plane ++)
forinit	27:9	27:18	3	plane = 0 ;
water	27:9	0:0	4	plane
op	27:15	0:0	4	=
water	27:17	0:0	4	0
water	27:18	0:0	4	;
cond	27:20	27:33	3	plane < rot -> nb_planes
water	27:20	0:0	4	plane
op	27:26	0:0	4	<
water	27:28	0:0	4	rot
op	27:31	0:0	4	->
water	27:33	0:0	4	nb_planes
forexpr	27:44	27:49	3	plane ++
water	27:44	0:0	4	plane
op	27:49	0:0	4	++
stmts	27:53	41:4	3	
water	27:53	0:0	4	{
decl	28:8	28:59	4	int	hsub
op	28:17	0:0	4	=
water	28:19	0:0	4	plane
op	28:25	0:0	4	==
water	28:28	0:0	4	1
op	28:30	0:0	4	||
water	28:33	0:0	4	plane
op	28:39	0:0	4	==
water	28:42	0:0	4	2
water	28:44	0:0	4	?
water	28:46	0:0	4	rot
op	28:49	0:0	4	->
water	28:51	0:0	4	hsub
water	28:56	0:0	4	:
water	28:58	0:0	4	0
decl	29:8	29:59	4	int	vsub
op	29:17	0:0	4	=
water	29:19	0:0	4	plane
op	29:25	0:0	4	==
water	29:28	0:0	4	1
op	29:30	0:0	4	||
water	29:33	0:0	4	plane
op	29:39	0:0	4	==
water	29:42	0:0	4	2
water	29:44	0:0	4	?
water	29:46	0:0	4	rot
op	29:49	0:0	4	->
water	29:51	0:0	4	vsub
water	29:56	0:0	4	:
water	29:58	0:0	4	0
decl	30:8	30:57	4	const int	outw
op	30:23	0:0	4	=
call	30:25	30:56	5	FF_CEIL_RSHIFT
arg	30:40	30:50	6	outlink->w
water	30:40	0:0	7	outlink
op	30:47	0:0	7	->
water	30:49	0:0	7	w
arg	30:52	30:56	6	hsub
water	30:52	0:0	7	hsub
decl	31:8	31:57	4	const int	outh
op	31:23	0:0	4	=
call	31:25	31:56	5	FF_CEIL_RSHIFT
arg	31:40	31:50	6	outlink->h
water	31:40	0:0	7	outlink
op	31:47	0:0	7	->
water	31:49	0:0	7	h
arg	31:52	31:56	6	vsub
water	31:52	0:0	7	vsub
decl	32:8	39:58	4	ThreadData	td
op	32:22	0:0	4	=
water	32:24	0:0	4	{
op	32:26	0:0	4	.
water	32:27	0:0	4	in
op	32:30	0:0	4	=
water	32:32	0:0	4	in
water	32:34	0:0	4	,
op	32:38	0:0	4	.
water	32:39	0:0	4	out
op	32:44	0:0	4	=
water	32:46	0:0	4	out
water	32:49	0:0	4	,
op	33:26	0:0	4	.
water	33:27	0:0	4	inw
op	33:32	0:0	4	=
call	33:34	33:64	5	FF_CEIL_RSHIFT
arg	33:49	33:58	6	inlink->w
water	33:49	0:0	7	inlink
op	33:55	0:0	7	->
water	33:57	0:0	7	w
arg	33:60	33:64	6	hsub
water	33:60	0:0	7	hsub
water	33:65	0:0	4	,
op	34:26	0:0	4	.
water	34:27	0:0	4	inh
op	34:32	0:0	4	=
call	34:34	34:64	5	FF_CEIL_RSHIFT
arg	34:49	34:58	6	inlink->h
water	34:49	0:0	7	inlink
op	34:55	0:0	7	->
water	34:57	0:0	7	h
arg	34:60	34:64	6	vsub
water	34:60	0:0	7	vsub
water	34:65	0:0	4	,
op	35:26	0:0	4	.
water	35:27	0:0	4	outh
op	35:32	0:0	4	=
water	35:34	0:0	4	outh
water	35:38	0:0	4	,
op	35:40	0:0	4	.
water	35:41	0:0	4	outw
op	35:46	0:0	4	=
water	35:48	0:0	4	outw
water	35:52	0:0	4	,
op	36:26	0:0	4	.
water	36:27	0:0	4	xi
op	36:30	0:0	4	=
op	36:32	0:0	4	-
water	36:33	0:0	4	(
water	36:34	0:0	4	outw
op	36:38	0:0	4	-
water	36:39	0:0	4	1
water	36:40	0:0	4	)
op	36:42	0:0	4	*
water	36:44	0:0	4	c
op	36:46	0:0	4	/
water	36:48	0:0	4	2
water	36:49	0:0	4	,
op	36:51	0:0	4	.
water	36:52	0:0	4	yi
op	36:55	0:0	4	=
water	36:58	0:0	4	(
water	36:59	0:0	4	outw
op	36:63	0:0	4	-
water	36:64	0:0	4	1
water	36:65	0:0	4	)
op	36:67	0:0	4	*
water	36:69	0:0	4	s
op	36:71	0:0	4	/
water	36:73	0:0	4	2
water	36:74	0:0	4	,
op	37:26	0:0	4	.
water	37:27	0:0	4	xprime
op	37:34	0:0	4	=
op	37:36	0:0	4	-
water	37:37	0:0	4	(
water	37:38	0:0	4	outh
op	37:42	0:0	4	-
water	37:43	0:0	4	1
water	37:44	0:0	4	)
op	37:46	0:0	4	*
water	37:48	0:0	4	s
op	37:50	0:0	4	/
water	37:52	0:0	4	2
water	37:53	0:0	4	,
op	38:26	0:0	4	.
water	38:27	0:0	4	yprime
op	38:34	0:0	4	=
op	38:36	0:0	4	-
water	38:37	0:0	4	(
water	38:38	0:0	4	outh
op	38:42	0:0	4	-
water	38:43	0:0	4	1
water	38:44	0:0	4	)
op	38:46	0:0	4	*
water	38:48	0:0	4	c
op	38:50	0:0	4	/
water	38:52	0:0	4	2
water	38:53	0:0	4	,
op	39:26	0:0	4	.
water	39:27	0:0	4	plane
op	39:33	0:0	4	=
water	39:35	0:0	4	plane
water	39:40	0:0	4	,
op	39:42	0:0	4	.
water	39:43	0:0	4	c
op	39:45	0:0	4	=
water	39:47	0:0	4	c
water	39:48	0:0	4	,
op	39:50	0:0	4	.
water	39:51	0:0	4	s
op	39:53	0:0	4	=
water	39:55	0:0	4	s
water	39:57	0:0	4	}
call	40:8	40:96	4	ctx->internal->execute
arg	40:31	40:34	5	ctx
water	40:31	0:0	6	ctx
arg	40:36	40:48	5	filter_slice
water	40:36	0:0	6	filter_slice
arg	40:50	40:53	5	&td
op	40:50	0:0	6	&
water	40:51	0:0	6	td
arg	40:55	40:59	5	NULL
water	40:55	0:0	6	NULL
arg	40:61	40:96	5	FFMIN(outh,ctx->graph->nb_threads)
call	40:61	40:95	6	FFMIN
arg	40:67	40:71	7	outh
water	40:67	0:0	8	outh
arg	40:73	40:95	7	ctx->graph->nb_threads
water	40:73	0:0	8	ctx
op	40:76	0:0	8	->
water	40:78	0:0	8	graph
op	40:83	0:0	8	->
water	40:85	0:0	8	nb_threads
water	40:97	0:0	4	;
water	41:4	0:0	4	}
call	42:4	42:21	2	av_frame_free
arg	42:18	42:21	3	&in
op	42:18	0:0	4	&
water	42:19	0:0	4	in
water	42:22	0:0	2	;
return	43:4	43:40	2	ff_filter_frame(outlink,out)
call	43:11	43:39	3	ff_filter_frame
arg	43:27	43:34	4	outlink
water	43:27	0:0	5	outlink
arg	43:36	43:39	4	out
water	43:36	0:0	5	out

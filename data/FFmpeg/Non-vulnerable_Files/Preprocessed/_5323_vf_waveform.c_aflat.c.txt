func	1:0	129:0	0	static void	aflat
params	1:17	0:0	1	
param	1:18	1:36	2	WaveformContext *	s
param	1:38	1:49	2	AVFrame *	in
param	1:51	1:63	2	AVFrame *	out
param	2:18	2:31	2	int	component
param	2:33	2:46	2	int	intensity
param	2:48	2:58	2	int	offset
param	2:60	2:70	2	int	column
stmnts	0:0	128:51	1	
decl	4:4	4:52	2	const int	plane
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	desc
op	4:29	0:0	2	->
water	4:31	0:0	2	comp
op	4:35	0:0	2	[
water	4:36	0:0	2	component
op	4:45	0:0	2	]
op	4:46	0:0	2	.
water	4:47	0:0	2	plane
decl	5:4	5:32	2	const int	mirror
op	5:21	0:0	2	=
water	5:23	0:0	2	s
op	5:24	0:0	2	->
water	5:26	0:0	2	mirror
decl	6:4	6:53	2	const int	c0_linesize
op	6:26	0:0	2	=
water	6:28	0:0	2	in
op	6:30	0:0	2	->
water	6:32	0:0	2	linesize
op	6:40	0:0	2	[
water	6:42	0:0	2	plane
op	6:48	0:0	2	+
water	6:50	0:0	2	0
op	6:52	0:0	2	]
decl	7:4	7:64	2	const int	c1_linesize
op	7:26	0:0	2	=
water	7:28	0:0	2	in
op	7:30	0:0	2	->
water	7:32	0:0	2	linesize
op	7:40	0:0	2	[
water	7:41	0:0	2	(
water	7:42	0:0	2	plane
op	7:48	0:0	2	+
water	7:50	0:0	2	1
water	7:51	0:0	2	)
op	7:53	0:0	2	%
water	7:55	0:0	2	s
op	7:56	0:0	2	->
water	7:58	0:0	2	ncomp
op	7:63	0:0	2	]
decl	8:4	8:64	2	const int	c2_linesize
op	8:26	0:0	2	=
water	8:28	0:0	2	in
op	8:30	0:0	2	->
water	8:32	0:0	2	linesize
op	8:40	0:0	2	[
water	8:41	0:0	2	(
water	8:42	0:0	2	plane
op	8:48	0:0	2	+
water	8:50	0:0	2	2
water	8:51	0:0	2	)
op	8:53	0:0	2	%
water	8:55	0:0	2	s
op	8:56	0:0	2	->
water	8:58	0:0	2	ncomp
op	8:63	0:0	2	]
decl	9:4	9:54	2	const int	d0_linesize
op	9:26	0:0	2	=
water	9:28	0:0	2	out
op	9:31	0:0	2	->
water	9:33	0:0	2	linesize
op	9:41	0:0	2	[
water	9:43	0:0	2	plane
op	9:49	0:0	2	+
water	9:51	0:0	2	0
op	9:53	0:0	2	]
decl	10:4	10:65	2	const int	d1_linesize
op	10:26	0:0	2	=
water	10:28	0:0	2	out
op	10:31	0:0	2	->
water	10:33	0:0	2	linesize
op	10:41	0:0	2	[
water	10:42	0:0	2	(
water	10:43	0:0	2	plane
op	10:49	0:0	2	+
water	10:51	0:0	2	1
water	10:52	0:0	2	)
op	10:54	0:0	2	%
water	10:56	0:0	2	s
op	10:57	0:0	2	->
water	10:59	0:0	2	ncomp
op	10:64	0:0	2	]
decl	11:4	11:65	2	const int	d2_linesize
op	11:26	0:0	2	=
water	11:28	0:0	2	out
op	11:31	0:0	2	->
water	11:33	0:0	2	linesize
op	11:41	0:0	2	[
water	11:42	0:0	2	(
water	11:43	0:0	2	plane
op	11:49	0:0	2	+
water	11:51	0:0	2	2
water	11:52	0:0	2	)
op	11:54	0:0	2	%
water	11:56	0:0	2	s
op	11:57	0:0	2	->
water	11:59	0:0	2	ncomp
op	11:64	0:0	2	]
decl	12:4	12:35	2	const int	max
op	12:18	0:0	2	=
water	12:20	0:0	2	255
op	12:24	0:0	2	-
water	12:26	0:0	2	intensity
decl	13:4	13:32	2	const int	src_h
op	13:20	0:0	2	=
water	13:22	0:0	2	in
op	13:24	0:0	2	->
water	13:26	0:0	2	height
decl	14:4	14:31	2	const int	src_w
op	14:20	0:0	2	=
water	14:22	0:0	2	in
op	14:24	0:0	2	->
water	14:26	0:0	2	width
decl	15:4	15:12	2	int	x
water	15:9	0:0	2	,
decl	15:4	15:12	2	int	y
if	16:4	65:4	2	(column)
cond	16:8	16:8	3	column
water	16:8	0:0	4	column
stmts	16:16	65:4	3	
water	16:16	0:0	4	{
decl	17:8	17:75	4	const int	d0_signed_linesize
op	17:37	0:0	4	=
water	17:39	0:0	4	d0_linesize
op	17:51	0:0	4	*
water	17:53	0:0	4	(
water	17:54	0:0	4	mirror
op	17:61	0:0	4	==
water	17:64	0:0	4	1
water	17:66	0:0	4	?
op	17:68	0:0	4	-
water	17:69	0:0	4	1
water	17:71	0:0	4	:
water	17:73	0:0	4	1
water	17:74	0:0	4	)
decl	18:8	18:75	4	const int	d1_signed_linesize
op	18:37	0:0	4	=
water	18:39	0:0	4	d1_linesize
op	18:51	0:0	4	*
water	18:53	0:0	4	(
water	18:54	0:0	4	mirror
op	18:61	0:0	4	==
water	18:64	0:0	4	1
water	18:66	0:0	4	?
op	18:68	0:0	4	-
water	18:69	0:0	4	1
water	18:71	0:0	4	:
water	18:73	0:0	4	1
water	18:74	0:0	4	)
decl	19:8	19:75	4	const int	d2_signed_linesize
op	19:37	0:0	4	=
water	19:39	0:0	4	d2_linesize
op	19:51	0:0	4	*
water	19:53	0:0	4	(
water	19:54	0:0	4	mirror
op	19:61	0:0	4	==
water	19:64	0:0	4	1
water	19:66	0:0	4	?
op	19:68	0:0	4	-
water	19:69	0:0	4	1
water	19:71	0:0	4	:
water	19:73	0:0	4	1
water	19:74	0:0	4	)
for	20:8	64:8	4	(x = 0 ;x < src_w;x ++)
forinit	20:13	20:18	5	x = 0 ;
water	20:13	0:0	6	x
op	20:15	0:0	6	=
water	20:17	0:0	6	0
water	20:18	0:0	6	;
cond	20:20	20:24	5	x < src_w
water	20:20	0:0	6	x
op	20:22	0:0	6	<
water	20:24	0:0	6	src_w
forexpr	20:31	20:32	5	x ++
water	20:31	0:0	6	x
op	20:32	0:0	6	++
stmts	20:36	64:8	5	
water	20:36	0:0	6	{
decl	21:12	21:56	6	const uint8_t	*c0_data
op	21:35	0:0	6	=
water	21:37	0:0	6	in
op	21:39	0:0	6	->
water	21:41	0:0	6	data
op	21:45	0:0	6	[
water	21:46	0:0	6	plane
op	21:52	0:0	6	+
water	21:54	0:0	6	0
op	21:55	0:0	6	]
decl	22:12	22:69	6	const uint8_t	*c1_data
op	22:35	0:0	6	=
water	22:37	0:0	6	in
op	22:39	0:0	6	->
water	22:41	0:0	6	data
op	22:45	0:0	6	[
water	22:46	0:0	6	(
water	22:47	0:0	6	plane
op	22:53	0:0	6	+
water	22:55	0:0	6	1
water	22:56	0:0	6	)
op	22:58	0:0	6	%
water	22:60	0:0	6	s
op	22:61	0:0	6	->
water	22:63	0:0	6	ncomp
op	22:68	0:0	6	]
decl	23:12	23:69	6	const uint8_t	*c2_data
op	23:35	0:0	6	=
water	23:37	0:0	6	in
op	23:39	0:0	6	->
water	23:41	0:0	6	data
op	23:45	0:0	6	[
water	23:46	0:0	6	(
water	23:47	0:0	6	plane
op	23:53	0:0	6	+
water	23:55	0:0	6	2
water	23:56	0:0	6	)
op	23:58	0:0	6	%
water	23:60	0:0	6	s
op	23:61	0:0	6	->
water	23:63	0:0	6	ncomp
op	23:68	0:0	6	]
decl	24:12	24:70	6	uint8_t	*d0_data
op	24:29	0:0	6	=
water	24:31	0:0	6	out
op	24:34	0:0	6	->
water	24:36	0:0	6	data
op	24:40	0:0	6	[
water	24:41	0:0	6	plane
op	24:46	0:0	6	]
op	24:48	0:0	6	+
water	24:50	0:0	6	offset
op	24:57	0:0	6	*
water	24:59	0:0	6	d0_linesize
decl	25:12	25:87	6	uint8_t	*d1_data
op	25:29	0:0	6	=
water	25:31	0:0	6	out
op	25:34	0:0	6	->
water	25:36	0:0	6	data
op	25:40	0:0	6	[
water	25:41	0:0	6	(
water	25:42	0:0	6	plane
op	25:48	0:0	6	+
water	25:50	0:0	6	1
water	25:51	0:0	6	)
op	25:53	0:0	6	%
water	25:55	0:0	6	s
op	25:56	0:0	6	->
water	25:58	0:0	6	ncomp
op	25:63	0:0	6	]
op	25:65	0:0	6	+
water	25:67	0:0	6	offset
op	25:74	0:0	6	*
water	25:76	0:0	6	d1_linesize
decl	26:12	26:87	6	uint8_t	*d2_data
op	26:29	0:0	6	=
water	26:31	0:0	6	out
op	26:34	0:0	6	->
water	26:36	0:0	6	data
op	26:40	0:0	6	[
water	26:41	0:0	6	(
water	26:42	0:0	6	plane
op	26:48	0:0	6	+
water	26:50	0:0	6	2
water	26:51	0:0	6	)
op	26:53	0:0	6	%
water	26:55	0:0	6	s
op	26:56	0:0	6	->
water	26:58	0:0	6	ncomp
op	26:63	0:0	6	]
op	26:65	0:0	6	+
water	26:67	0:0	6	offset
op	26:74	0:0	6	*
water	26:76	0:0	6	d2_linesize
water	27:12	0:0	6	uint8_t
op	27:20	0:0	6	*
water	27:22	0:0	6	const
water	27:28	0:0	6	d0_bottom_line
op	27:43	0:0	6	=
water	27:45	0:0	6	d0_data
op	27:53	0:0	6	+
water	27:55	0:0	6	d0_linesize
op	27:67	0:0	6	*
water	27:69	0:0	6	(
water	27:70	0:0	6	s
op	27:71	0:0	6	->
water	27:73	0:0	6	size
op	27:78	0:0	6	-
water	27:80	0:0	6	1
water	27:81	0:0	6	)
water	27:82	0:0	6	;
water	28:12	0:0	6	uint8_t
op	28:20	0:0	6	*
water	28:22	0:0	6	const
water	28:28	0:0	6	d0
op	28:31	0:0	6	=
water	28:33	0:0	6	(
water	28:34	0:0	6	mirror
water	28:41	0:0	6	?
water	28:43	0:0	6	d0_bottom_line
water	28:58	0:0	6	:
water	28:60	0:0	6	d0_data
water	28:67	0:0	6	)
water	28:68	0:0	6	;
water	29:12	0:0	6	uint8_t
op	29:20	0:0	6	*
water	29:22	0:0	6	const
water	29:28	0:0	6	d1_bottom_line
op	29:43	0:0	6	=
water	29:45	0:0	6	d1_data
op	29:53	0:0	6	+
water	29:55	0:0	6	d1_linesize
op	29:67	0:0	6	*
water	29:69	0:0	6	(
water	29:70	0:0	6	s
op	29:71	0:0	6	->
water	29:73	0:0	6	size
op	29:78	0:0	6	-
water	29:80	0:0	6	1
water	29:81	0:0	6	)
water	29:82	0:0	6	;
water	30:12	0:0	6	uint8_t
op	30:20	0:0	6	*
water	30:22	0:0	6	const
water	30:28	0:0	6	d1
op	30:31	0:0	6	=
water	30:33	0:0	6	(
water	30:34	0:0	6	mirror
water	30:41	0:0	6	?
water	30:43	0:0	6	d1_bottom_line
water	30:58	0:0	6	:
water	30:60	0:0	6	d1_data
water	30:67	0:0	6	)
water	30:68	0:0	6	;
water	31:12	0:0	6	uint8_t
op	31:20	0:0	6	*
water	31:22	0:0	6	const
water	31:28	0:0	6	d2_bottom_line
op	31:43	0:0	6	=
water	31:45	0:0	6	d2_data
op	31:53	0:0	6	+
water	31:55	0:0	6	d2_linesize
op	31:67	0:0	6	*
water	31:69	0:0	6	(
water	31:70	0:0	6	s
op	31:71	0:0	6	->
water	31:73	0:0	6	size
op	31:78	0:0	6	-
water	31:80	0:0	6	1
water	31:81	0:0	6	)
water	31:82	0:0	6	;
water	32:12	0:0	6	uint8_t
op	32:20	0:0	6	*
water	32:22	0:0	6	const
water	32:28	0:0	6	d2
op	32:31	0:0	6	=
water	32:33	0:0	6	(
water	32:34	0:0	6	mirror
water	32:41	0:0	6	?
water	32:43	0:0	6	d2_bottom_line
water	32:58	0:0	6	:
water	32:60	0:0	6	d2_data
water	32:67	0:0	6	)
water	32:68	0:0	6	;
for	33:12	63:12	6	(y = 0 ;y < src_h;y ++)
forinit	33:17	33:22	7	y = 0 ;
water	33:17	0:0	8	y
op	33:19	0:0	8	=
water	33:21	0:0	8	0
water	33:22	0:0	8	;
cond	33:24	33:28	7	y < src_h
water	33:24	0:0	8	y
op	33:26	0:0	8	<
water	33:28	0:0	8	src_h
forexpr	33:35	33:36	7	y ++
water	33:35	0:0	8	y
op	33:36	0:0	8	++
stmts	33:40	63:12	7	
water	33:40	0:0	8	{
decl	34:16	34:47	8	const int	c0
op	34:29	0:0	8	=
water	34:31	0:0	8	c0_data
op	34:38	0:0	8	[
water	34:39	0:0	8	x
op	34:40	0:0	8	]
op	34:42	0:0	8	+
water	34:44	0:0	8	128
decl	35:16	35:47	8	const int	c1
op	35:29	0:0	8	=
water	35:31	0:0	8	c1_data
op	35:38	0:0	8	[
water	35:39	0:0	8	x
op	35:40	0:0	8	]
op	35:42	0:0	8	-
water	35:44	0:0	8	128
decl	36:16	36:47	8	const int	c2
op	36:29	0:0	8	=
water	36:31	0:0	8	c2_data
op	36:38	0:0	8	[
water	36:39	0:0	8	x
op	36:40	0:0	8	]
op	36:42	0:0	8	-
water	36:44	0:0	8	128
decl	37:16	37:31	8	uint8_t	*target
decl	38:16	38:21	8	int	p
water	39:16	0:0	8	target
op	39:23	0:0	8	=
water	39:25	0:0	8	d0
op	39:28	0:0	8	+
water	39:30	0:0	8	x
op	39:32	0:0	8	+
water	39:34	0:0	8	d0_signed_linesize
op	39:53	0:0	8	*
water	39:55	0:0	8	c0
water	39:57	0:0	8	;
call	40:16	40:45	8	update
arg	40:23	40:29	9	target
water	40:23	0:0	10	target
arg	40:31	40:34	9	max
water	40:31	0:0	10	max
arg	40:36	40:45	9	intensity
water	40:36	0:0	10	intensity
water	40:46	0:0	8	;
for	41:16	44:16	8	(p = c0 + c1 ;p < c0;p ++)
forinit	41:21	41:32	9	p = c0 + c1 ;
water	41:21	0:0	10	p
op	41:23	0:0	10	=
water	41:25	0:0	10	c0
op	41:28	0:0	10	+
water	41:30	0:0	10	c1
water	41:32	0:0	10	;
cond	41:34	41:38	9	p < c0
water	41:34	0:0	10	p
op	41:36	0:0	10	<
water	41:38	0:0	10	c0
forexpr	41:42	41:43	9	p ++
water	41:42	0:0	10	p
op	41:43	0:0	10	++
stmts	41:47	44:16	9	
water	41:47	0:0	10	{
water	42:20	0:0	10	target
op	42:27	0:0	10	=
water	42:29	0:0	10	d1
op	42:32	0:0	10	+
water	42:34	0:0	10	x
op	42:36	0:0	10	+
water	42:38	0:0	10	d1_signed_linesize
op	42:57	0:0	10	*
water	42:59	0:0	10	p
water	42:60	0:0	10	;
call	43:20	43:41	10	update
arg	43:27	43:33	11	target
water	43:27	0:0	12	target
arg	43:35	43:38	11	max
water	43:35	0:0	12	max
arg	43:40	43:41	11	1
water	43:40	0:0	12	1
water	43:42	0:0	10	;
water	44:16	0:0	10	}
for	45:16	48:16	8	(p = c0 + c1 - 1 ;p > c0;p --)
forinit	45:21	45:36	9	p = c0 + c1 - 1 ;
water	45:21	0:0	10	p
op	45:23	0:0	10	=
water	45:25	0:0	10	c0
op	45:28	0:0	10	+
water	45:30	0:0	10	c1
op	45:33	0:0	10	-
water	45:35	0:0	10	1
water	45:36	0:0	10	;
cond	45:38	45:42	9	p > c0
water	45:38	0:0	10	p
op	45:40	0:0	10	>
water	45:42	0:0	10	c0
forexpr	45:46	45:47	9	p --
water	45:46	0:0	10	p
op	45:47	0:0	10	--
stmts	45:51	48:16	9	
water	45:51	0:0	10	{
water	46:20	0:0	10	target
op	46:27	0:0	10	=
water	46:29	0:0	10	d1
op	46:32	0:0	10	+
water	46:34	0:0	10	x
op	46:36	0:0	10	+
water	46:38	0:0	10	d1_signed_linesize
op	46:57	0:0	10	*
water	46:59	0:0	10	p
water	46:60	0:0	10	;
call	47:20	47:41	10	update
arg	47:27	47:33	11	target
water	47:27	0:0	12	target
arg	47:35	47:38	11	max
water	47:35	0:0	12	max
arg	47:40	47:41	11	1
water	47:40	0:0	12	1
water	47:42	0:0	10	;
water	48:16	0:0	10	}
for	49:16	52:16	8	(p = c0 + c2 ;p < c0;p ++)
forinit	49:21	49:32	9	p = c0 + c2 ;
water	49:21	0:0	10	p
op	49:23	0:0	10	=
water	49:25	0:0	10	c0
op	49:28	0:0	10	+
water	49:30	0:0	10	c2
water	49:32	0:0	10	;
cond	49:34	49:38	9	p < c0
water	49:34	0:0	10	p
op	49:36	0:0	10	<
water	49:38	0:0	10	c0
forexpr	49:42	49:43	9	p ++
water	49:42	0:0	10	p
op	49:43	0:0	10	++
stmts	49:47	52:16	9	
water	49:47	0:0	10	{
water	50:20	0:0	10	target
op	50:27	0:0	10	=
water	50:29	0:0	10	d2
op	50:32	0:0	10	+
water	50:34	0:0	10	x
op	50:36	0:0	10	+
water	50:38	0:0	10	d2_signed_linesize
op	50:57	0:0	10	*
water	50:59	0:0	10	p
water	50:60	0:0	10	;
call	51:20	51:41	10	update
arg	51:27	51:33	11	target
water	51:27	0:0	12	target
arg	51:35	51:38	11	max
water	51:35	0:0	12	max
arg	51:40	51:41	11	1
water	51:40	0:0	12	1
water	51:42	0:0	10	;
water	52:16	0:0	10	}
for	53:16	56:16	8	(p = c0 + c2 - 1 ;p > c0;p --)
forinit	53:21	53:36	9	p = c0 + c2 - 1 ;
water	53:21	0:0	10	p
op	53:23	0:0	10	=
water	53:25	0:0	10	c0
op	53:28	0:0	10	+
water	53:30	0:0	10	c2
op	53:33	0:0	10	-
water	53:35	0:0	10	1
water	53:36	0:0	10	;
cond	53:38	53:42	9	p > c0
water	53:38	0:0	10	p
op	53:40	0:0	10	>
water	53:42	0:0	10	c0
forexpr	53:46	53:47	9	p --
water	53:46	0:0	10	p
op	53:47	0:0	10	--
stmts	53:51	56:16	9	
water	53:51	0:0	10	{
water	54:20	0:0	10	target
op	54:27	0:0	10	=
water	54:29	0:0	10	d2
op	54:32	0:0	10	+
water	54:34	0:0	10	x
op	54:36	0:0	10	+
water	54:38	0:0	10	d2_signed_linesize
op	54:57	0:0	10	*
water	54:59	0:0	10	p
water	54:60	0:0	10	;
call	55:20	55:41	10	update
arg	55:27	55:33	11	target
water	55:27	0:0	12	target
arg	55:35	55:38	11	max
water	55:35	0:0	12	max
arg	55:40	55:41	11	1
water	55:40	0:0	12	1
water	55:42	0:0	10	;
water	56:16	0:0	10	}
water	57:16	0:0	8	c0_data
op	57:24	0:0	8	+=
water	57:27	0:0	8	c0_linesize
water	57:38	0:0	8	;
water	58:16	0:0	8	c1_data
op	58:24	0:0	8	+=
water	58:27	0:0	8	c1_linesize
water	58:38	0:0	8	;
water	59:16	0:0	8	c2_data
op	59:24	0:0	8	+=
water	59:27	0:0	8	c2_linesize
water	59:38	0:0	8	;
water	60:16	0:0	8	d0_data
op	60:24	0:0	8	+=
water	60:27	0:0	8	d0_linesize
water	60:38	0:0	8	;
water	61:16	0:0	8	d1_data
op	61:24	0:0	8	+=
water	61:27	0:0	8	d1_linesize
water	61:38	0:0	8	;
water	62:16	0:0	8	d2_data
op	62:24	0:0	8	+=
water	62:27	0:0	8	d2_linesize
water	62:38	0:0	8	;
water	63:12	0:0	8	}
water	64:8	0:0	6	}
water	65:4	0:0	4	}
else	65:6	125:4	2
stmts	65:11	125:4	3	
water	65:11	0:0	4	{
decl	66:8	66:48	4	const uint8_t	*c0_data
op	66:31	0:0	4	=
water	66:33	0:0	4	in
op	66:35	0:0	4	->
water	66:37	0:0	4	data
op	66:41	0:0	4	[
water	66:42	0:0	4	plane
op	66:47	0:0	4	]
decl	67:8	67:65	4	const uint8_t	*c1_data
op	67:31	0:0	4	=
water	67:33	0:0	4	in
op	67:35	0:0	4	->
water	67:37	0:0	4	data
op	67:41	0:0	4	[
water	67:42	0:0	4	(
water	67:43	0:0	4	plane
op	67:49	0:0	4	+
water	67:51	0:0	4	1
water	67:52	0:0	4	)
op	67:54	0:0	4	%
water	67:56	0:0	4	s
op	67:57	0:0	4	->
water	67:59	0:0	4	ncomp
op	67:64	0:0	4	]
decl	68:8	68:65	4	const uint8_t	*c2_data
op	68:31	0:0	4	=
water	68:33	0:0	4	in
op	68:35	0:0	4	->
water	68:37	0:0	4	data
op	68:41	0:0	4	[
water	68:42	0:0	4	(
water	68:43	0:0	4	plane
op	68:49	0:0	4	+
water	68:51	0:0	4	2
water	68:52	0:0	4	)
op	68:54	0:0	4	%
water	68:56	0:0	4	s
op	68:57	0:0	4	->
water	68:59	0:0	4	ncomp
op	68:64	0:0	4	]
decl	69:8	69:52	4	uint8_t	*d0_data
op	69:25	0:0	4	=
water	69:27	0:0	4	out
op	69:30	0:0	4	->
water	69:32	0:0	4	data
op	69:36	0:0	4	[
water	69:37	0:0	4	plane
op	69:42	0:0	4	]
op	69:44	0:0	4	+
water	69:46	0:0	4	offset
decl	70:8	70:69	4	uint8_t	*d1_data
op	70:25	0:0	4	=
water	70:27	0:0	4	out
op	70:30	0:0	4	->
water	70:32	0:0	4	data
op	70:36	0:0	4	[
water	70:37	0:0	4	(
water	70:38	0:0	4	plane
op	70:44	0:0	4	+
water	70:46	0:0	4	1
water	70:47	0:0	4	)
op	70:49	0:0	4	%
water	70:51	0:0	4	s
op	70:52	0:0	4	->
water	70:54	0:0	4	ncomp
op	70:59	0:0	4	]
op	70:61	0:0	4	+
water	70:63	0:0	4	offset
decl	71:8	71:69	4	uint8_t	*d2_data
op	71:25	0:0	4	=
water	71:27	0:0	4	out
op	71:30	0:0	4	->
water	71:32	0:0	4	data
op	71:36	0:0	4	[
water	71:37	0:0	4	(
water	71:38	0:0	4	plane
op	71:44	0:0	4	+
water	71:46	0:0	4	2
water	71:47	0:0	4	)
op	71:49	0:0	4	%
water	71:51	0:0	4	s
op	71:52	0:0	4	->
water	71:54	0:0	4	ncomp
op	71:59	0:0	4	]
op	71:61	0:0	4	+
water	71:63	0:0	4	offset
if	72:8	76:8	4	(mirror)
cond	72:12	72:12	5	mirror
water	72:12	0:0	6	mirror
stmts	72:20	76:8	5	
water	72:20	0:0	6	{
water	73:12	0:0	6	d0_data
op	73:20	0:0	6	+=
water	73:23	0:0	6	s
op	73:24	0:0	6	->
water	73:26	0:0	6	size
op	73:31	0:0	6	-
water	73:33	0:0	6	1
water	73:34	0:0	6	;
water	74:12	0:0	6	d1_data
op	74:20	0:0	6	+=
water	74:23	0:0	6	s
op	74:24	0:0	6	->
water	74:26	0:0	6	size
op	74:31	0:0	6	-
water	74:33	0:0	6	1
water	74:34	0:0	6	;
water	75:12	0:0	6	d2_data
op	75:20	0:0	6	+=
water	75:23	0:0	6	s
op	75:24	0:0	6	->
water	75:26	0:0	6	size
op	75:31	0:0	6	-
water	75:33	0:0	6	1
water	75:34	0:0	6	;
water	76:8	0:0	6	}
for	77:8	124:8	4	(y = 0 ;y < src_h;y ++)
forinit	77:13	77:18	5	y = 0 ;
water	77:13	0:0	6	y
op	77:15	0:0	6	=
water	77:17	0:0	6	0
water	77:18	0:0	6	;
cond	77:20	77:24	5	y < src_h
water	77:20	0:0	6	y
op	77:22	0:0	6	<
water	77:24	0:0	6	src_h
forexpr	77:31	77:32	5	y ++
water	77:31	0:0	6	y
op	77:32	0:0	6	++
stmts	77:36	124:8	5	
water	77:36	0:0	6	{
for	78:12	117:12	6	(x = 0 ;x < src_w;x ++)
forinit	78:17	78:22	7	x = 0 ;
water	78:17	0:0	8	x
op	78:19	0:0	8	=
water	78:21	0:0	8	0
water	78:22	0:0	8	;
cond	78:24	78:28	7	x < src_w
water	78:24	0:0	8	x
op	78:26	0:0	8	<
water	78:28	0:0	8	src_w
forexpr	78:35	78:36	7	x ++
water	78:35	0:0	8	x
op	78:36	0:0	8	++
stmts	78:40	117:12	7	
water	78:40	0:0	8	{
decl	79:16	79:47	8	const int	c0
op	79:29	0:0	8	=
water	79:31	0:0	8	c0_data
op	79:38	0:0	8	[
water	79:39	0:0	8	x
op	79:40	0:0	8	]
op	79:42	0:0	8	+
water	79:44	0:0	8	128
decl	80:16	80:47	8	const int	c1
op	80:29	0:0	8	=
water	80:31	0:0	8	c1_data
op	80:38	0:0	8	[
water	80:39	0:0	8	x
op	80:40	0:0	8	]
op	80:42	0:0	8	-
water	80:44	0:0	8	128
decl	81:16	81:47	8	const int	c2
op	81:29	0:0	8	=
water	81:31	0:0	8	c2_data
op	81:38	0:0	8	[
water	81:39	0:0	8	x
op	81:40	0:0	8	]
op	81:42	0:0	8	-
water	81:44	0:0	8	128
decl	82:16	82:31	8	uint8_t	*target
decl	83:16	83:21	8	int	p
if	84:16	85:41	8	(mirror)
cond	84:20	84:20	9	mirror
water	84:20	0:0	10	mirror
stmts	85:20	85:41	9	
water	85:20	0:0	10	target
op	85:27	0:0	10	=
water	85:29	0:0	10	d0_data
op	85:37	0:0	10	-
water	85:39	0:0	10	c0
water	85:41	0:0	10	;
else	86:16	87:41	8
stmts	87:20	87:41	9	
water	87:20	0:0	10	target
op	87:27	0:0	10	=
water	87:29	0:0	10	d0_data
op	87:37	0:0	10	+
water	87:39	0:0	10	c0
water	87:41	0:0	10	;
call	88:16	88:45	8	update
arg	88:23	88:29	9	target
water	88:23	0:0	10	target
arg	88:31	88:34	9	max
water	88:31	0:0	10	max
arg	88:36	88:45	9	intensity
water	88:36	0:0	10	intensity
water	88:46	0:0	8	;
for	89:16	95:16	8	(p = c0 + c1 ;p < c0;p ++)
forinit	89:21	89:32	9	p = c0 + c1 ;
water	89:21	0:0	10	p
op	89:23	0:0	10	=
water	89:25	0:0	10	c0
op	89:28	0:0	10	+
water	89:30	0:0	10	c1
water	89:32	0:0	10	;
cond	89:34	89:38	9	p < c0
water	89:34	0:0	10	p
op	89:36	0:0	10	<
water	89:38	0:0	10	c0
forexpr	89:42	89:43	9	p ++
water	89:42	0:0	10	p
op	89:43	0:0	10	++
stmts	89:47	95:16	9	
water	89:47	0:0	10	{
if	90:20	91:44	10	(mirror)
cond	90:24	90:24	11	mirror
water	90:24	0:0	12	mirror
stmts	91:24	91:44	11	
water	91:24	0:0	12	target
op	91:31	0:0	12	=
water	91:33	0:0	12	d1_data
op	91:41	0:0	12	-
water	91:43	0:0	12	p
water	91:44	0:0	12	;
else	92:20	93:44	10
stmts	93:24	93:44	11	
water	93:24	0:0	12	target
op	93:31	0:0	12	=
water	93:33	0:0	12	d1_data
op	93:41	0:0	12	+
water	93:43	0:0	12	p
water	93:44	0:0	12	;
call	94:20	94:41	10	update
arg	94:27	94:33	11	target
water	94:27	0:0	12	target
arg	94:35	94:38	11	max
water	94:35	0:0	12	max
arg	94:40	94:41	11	1
water	94:40	0:0	12	1
water	94:42	0:0	10	;
water	95:16	0:0	10	}
for	96:16	102:16	8	(p = c0 + 1 ;p < c0 + c1;p ++)
forinit	96:21	96:31	9	p = c0 + 1 ;
water	96:21	0:0	10	p
op	96:23	0:0	10	=
water	96:25	0:0	10	c0
op	96:28	0:0	10	+
water	96:30	0:0	10	1
water	96:31	0:0	10	;
cond	96:33	96:42	9	p < c0 + c1
water	96:33	0:0	10	p
op	96:35	0:0	10	<
water	96:37	0:0	10	c0
op	96:40	0:0	10	+
water	96:42	0:0	10	c1
forexpr	96:46	96:47	9	p ++
water	96:46	0:0	10	p
op	96:47	0:0	10	++
stmts	96:51	102:16	9	
water	96:51	0:0	10	{
if	97:20	98:44	10	(mirror)
cond	97:24	97:24	11	mirror
water	97:24	0:0	12	mirror
stmts	98:24	98:44	11	
water	98:24	0:0	12	target
op	98:31	0:0	12	=
water	98:33	0:0	12	d1_data
op	98:41	0:0	12	-
water	98:43	0:0	12	p
water	98:44	0:0	12	;
else	99:20	100:44	10
stmts	100:24	100:44	11	
water	100:24	0:0	12	target
op	100:31	0:0	12	=
water	100:33	0:0	12	d1_data
op	100:41	0:0	12	+
water	100:43	0:0	12	p
water	100:44	0:0	12	;
call	101:20	101:41	10	update
arg	101:27	101:33	11	target
water	101:27	0:0	12	target
arg	101:35	101:38	11	max
water	101:35	0:0	12	max
arg	101:40	101:41	11	1
water	101:40	0:0	12	1
water	101:42	0:0	10	;
water	102:16	0:0	10	}
for	103:16	109:16	8	(p = c0 + c2 ;p < c0;p ++)
forinit	103:21	103:32	9	p = c0 + c2 ;
water	103:21	0:0	10	p
op	103:23	0:0	10	=
water	103:25	0:0	10	c0
op	103:28	0:0	10	+
water	103:30	0:0	10	c2
water	103:32	0:0	10	;
cond	103:34	103:38	9	p < c0
water	103:34	0:0	10	p
op	103:36	0:0	10	<
water	103:38	0:0	10	c0
forexpr	103:42	103:43	9	p ++
water	103:42	0:0	10	p
op	103:43	0:0	10	++
stmts	103:47	109:16	9	
water	103:47	0:0	10	{
if	104:20	105:44	10	(mirror)
cond	104:24	104:24	11	mirror
water	104:24	0:0	12	mirror
stmts	105:24	105:44	11	
water	105:24	0:0	12	target
op	105:31	0:0	12	=
water	105:33	0:0	12	d2_data
op	105:41	0:0	12	-
water	105:43	0:0	12	p
water	105:44	0:0	12	;
else	106:20	107:44	10
stmts	107:24	107:44	11	
water	107:24	0:0	12	target
op	107:31	0:0	12	=
water	107:33	0:0	12	d2_data
op	107:41	0:0	12	+
water	107:43	0:0	12	p
water	107:44	0:0	12	;
call	108:20	108:41	10	update
arg	108:27	108:33	11	target
water	108:27	0:0	12	target
arg	108:35	108:38	11	max
water	108:35	0:0	12	max
arg	108:40	108:41	11	1
water	108:40	0:0	12	1
water	108:42	0:0	10	;
water	109:16	0:0	10	}
for	110:16	116:16	8	(p = c0 + 1 ;p < c0 + c2;p ++)
forinit	110:21	110:31	9	p = c0 + 1 ;
water	110:21	0:0	10	p
op	110:23	0:0	10	=
water	110:25	0:0	10	c0
op	110:28	0:0	10	+
water	110:30	0:0	10	1
water	110:31	0:0	10	;
cond	110:33	110:42	9	p < c0 + c2
water	110:33	0:0	10	p
op	110:35	0:0	10	<
water	110:37	0:0	10	c0
op	110:40	0:0	10	+
water	110:42	0:0	10	c2
forexpr	110:46	110:47	9	p ++
water	110:46	0:0	10	p
op	110:47	0:0	10	++
stmts	110:51	116:16	9	
water	110:51	0:0	10	{
if	111:20	112:44	10	(mirror)
cond	111:24	111:24	11	mirror
water	111:24	0:0	12	mirror
stmts	112:24	112:44	11	
water	112:24	0:0	12	target
op	112:31	0:0	12	=
water	112:33	0:0	12	d2_data
op	112:41	0:0	12	-
water	112:43	0:0	12	p
water	112:44	0:0	12	;
else	113:20	114:44	10
stmts	114:24	114:44	11	
water	114:24	0:0	12	target
op	114:31	0:0	12	=
water	114:33	0:0	12	d2_data
op	114:41	0:0	12	+
water	114:43	0:0	12	p
water	114:44	0:0	12	;
call	115:20	115:41	10	update
arg	115:27	115:33	11	target
water	115:27	0:0	12	target
arg	115:35	115:38	11	max
water	115:35	0:0	12	max
arg	115:40	115:41	11	1
water	115:40	0:0	12	1
water	115:42	0:0	10	;
water	116:16	0:0	10	}
water	117:12	0:0	8	}
water	118:12	0:0	6	c0_data
op	118:20	0:0	6	+=
water	118:23	0:0	6	c0_linesize
water	118:34	0:0	6	;
water	119:12	0:0	6	c1_data
op	119:20	0:0	6	+=
water	119:23	0:0	6	c1_linesize
water	119:34	0:0	6	;
water	120:12	0:0	6	c2_data
op	120:20	0:0	6	+=
water	120:23	0:0	6	c2_linesize
water	120:34	0:0	6	;
water	121:12	0:0	6	d0_data
op	121:20	0:0	6	+=
water	121:23	0:0	6	d0_linesize
water	121:34	0:0	6	;
water	122:12	0:0	6	d1_data
op	122:20	0:0	6	+=
water	122:23	0:0	6	d1_linesize
water	122:34	0:0	6	;
water	123:12	0:0	6	d2_data
op	123:20	0:0	6	+=
water	123:23	0:0	6	d2_linesize
water	123:34	0:0	6	;
water	124:8	0:0	6	}
water	125:4	0:0	4	}
call	126:4	126:50	2	envelope
arg	126:13	126:14	3	s
water	126:13	0:0	4	s
arg	126:16	126:19	3	out
water	126:16	0:0	4	out
arg	126:21	126:26	3	plane
water	126:21	0:0	4	plane
arg	126:28	126:50	3	(plane+0)%s->ncomp
water	126:28	0:0	4	(
water	126:29	0:0	4	plane
op	126:35	0:0	4	+
water	126:37	0:0	4	0
water	126:38	0:0	4	)
op	126:40	0:0	4	%
water	126:42	0:0	4	s
op	126:43	0:0	4	->
water	126:45	0:0	4	ncomp
water	126:51	0:0	2	;
call	127:4	127:50	2	envelope
arg	127:13	127:14	3	s
water	127:13	0:0	4	s
arg	127:16	127:19	3	out
water	127:16	0:0	4	out
arg	127:21	127:26	3	plane
water	127:21	0:0	4	plane
arg	127:28	127:50	3	(plane+1)%s->ncomp
water	127:28	0:0	4	(
water	127:29	0:0	4	plane
op	127:35	0:0	4	+
water	127:37	0:0	4	1
water	127:38	0:0	4	)
op	127:40	0:0	4	%
water	127:42	0:0	4	s
op	127:43	0:0	4	->
water	127:45	0:0	4	ncomp
water	127:51	0:0	2	;
call	128:4	128:50	2	envelope
arg	128:13	128:14	3	s
water	128:13	0:0	4	s
arg	128:16	128:19	3	out
water	128:16	0:0	4	out
arg	128:21	128:26	3	plane
water	128:21	0:0	4	plane
arg	128:28	128:50	3	(plane+2)%s->ncomp
water	128:28	0:0	4	(
water	128:29	0:0	4	plane
op	128:35	0:0	4	+
water	128:37	0:0	4	2
water	128:38	0:0	4	)
op	128:40	0:0	4	%
water	128:42	0:0	4	s
op	128:43	0:0	4	->
water	128:45	0:0	4	ncomp
water	128:51	0:0	2	;

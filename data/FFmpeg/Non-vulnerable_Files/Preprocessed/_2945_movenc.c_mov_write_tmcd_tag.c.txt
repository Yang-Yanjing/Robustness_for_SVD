func	1:0	37:0	0	static int	mov_write_tmcd_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	36:31	1	
decl	3:4	3:31	2	int64_t	pos
op	3:16	0:0	2	=
call	3:18	3:30	3	avio_tell
arg	3:28	3:30	4	pb
water	3:28	0:0	5	pb
decl	5:4	5:107	2	int	frame_duration
op	5:23	0:0	2	=
call	5:25	5:106	3	av_rescale
arg	5:36	5:52	4	track->timescale
water	5:36	0:0	5	track
op	5:41	0:0	5	->
water	5:43	0:0	5	timescale
arg	5:54	5:79	4	track->enc->time_base.num
water	5:54	0:0	5	track
op	5:59	0:0	5	->
water	5:61	0:0	5	enc
op	5:64	0:0	5	->
water	5:66	0:0	5	time_base
op	5:75	0:0	5	.
water	5:76	0:0	5	num
arg	5:81	5:106	4	track->enc->time_base.den
water	5:81	0:0	5	track
op	5:86	0:0	5	->
water	5:88	0:0	5	enc
op	5:91	0:0	5	->
water	5:93	0:0	5	time_base
op	5:102	0:0	5	.
water	5:103	0:0	5	den
decl	6:4	6:85	2	int	nb_frames
op	6:18	0:0	2	=
call	6:20	6:84	3	ROUNDED_DIV
arg	6:32	6:57	4	track->enc->time_base.den
water	6:32	0:0	5	track
op	6:37	0:0	5	->
water	6:39	0:0	5	enc
op	6:42	0:0	5	->
water	6:44	0:0	5	time_base
op	6:53	0:0	5	.
water	6:54	0:0	5	den
arg	6:59	6:84	4	track->enc->time_base.num
water	6:59	0:0	5	track
op	6:64	0:0	5	->
water	6:66	0:0	5	enc
op	6:69	0:0	5	->
water	6:71	0:0	5	time_base
op	6:80	0:0	5	.
water	6:81	0:0	5	num
decl	7:4	7:31	2	AVDictionaryEntry	*t
op	7:25	0:0	2	=
water	7:27	0:0	2	NULL
if	8:4	11:4	2	(nb_frames > 255)
cond	8:8	8:20	3	nb_frames > 255
water	8:8	0:0	4	nb_frames
op	8:18	0:0	4	>
water	8:20	0:0	4	255
stmts	8:25	11:4	3	
water	8:25	0:0	4	{
call	9:8	9:69	4	av_log
arg	9:15	9:19	5	NULL
water	9:15	0:0	6	NULL
arg	9:21	9:33	5	AV_LOG_ERROR
water	9:21	0:0	6	AV_LOG_ERROR
arg	9:35	9:58	5	"fps %d is too large\n"
water	9:35	0:0	6	"fps %d is too large\n"
arg	9:60	9:69	5	nb_frames
water	9:60	0:0	6	nb_frames
water	9:70	0:0	4	;
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
water	11:4	0:0	4	}
call	12:4	12:19	2	avio_wb32
arg	12:14	12:16	3	pb
water	12:14	0:0	4	pb
arg	12:18	12:19	3	0
water	12:18	0:0	4	0
water	12:20	0:0	2	;
call	13:4	13:27	2	ffio_wfourcc
arg	13:17	13:19	3	pb
water	13:17	0:0	4	pb
arg	13:21	13:27	3	"tmcd"
water	13:21	0:0	4	"tmcd"
water	13:28	0:0	2	;
call	14:4	14:19	2	avio_wb32
arg	14:14	14:16	3	pb
water	14:14	0:0	4	pb
arg	14:18	14:19	3	0
water	14:18	0:0	4	0
water	14:20	0:0	2	;
call	15:4	15:19	2	avio_wb32
arg	15:14	15:16	3	pb
water	15:14	0:0	4	pb
arg	15:18	15:19	3	1
water	15:18	0:0	4	1
water	15:20	0:0	2	;
call	16:4	16:19	2	avio_wb32
arg	16:14	16:16	3	pb
water	16:14	0:0	4	pb
arg	16:18	16:19	3	0
water	16:18	0:0	4	0
water	16:20	0:0	2	;
call	17:4	17:39	2	avio_wb32
arg	17:14	17:16	3	pb
water	17:14	0:0	4	pb
arg	17:18	17:39	3	track->timecode_flags
water	17:18	0:0	4	track
op	17:23	0:0	4	->
water	17:25	0:0	4	timecode_flags
water	17:40	0:0	2	;
call	18:4	18:34	2	avio_wb32
arg	18:14	18:16	3	pb
water	18:14	0:0	4	pb
arg	18:18	18:34	3	track->timescale
water	18:18	0:0	4	track
op	18:23	0:0	4	->
water	18:25	0:0	4	timescale
water	18:35	0:0	2	;
call	19:4	19:32	2	avio_wb32
arg	19:14	19:16	3	pb
water	19:14	0:0	4	pb
arg	19:18	19:32	3	frame_duration
water	19:18	0:0	4	frame_duration
water	19:33	0:0	2	;
call	20:4	20:25	2	avio_w8
arg	20:12	20:14	3	pb
water	20:12	0:0	4	pb
arg	20:16	20:25	3	nb_frames
water	20:16	0:0	4	nb_frames
water	20:26	0:0	2	;
call	21:4	21:17	2	avio_w8
arg	21:12	21:14	3	pb
water	21:12	0:0	4	pb
arg	21:16	21:17	3	0
water	21:16	0:0	4	0
water	21:18	0:0	2	;
if	22:4	23:66	2	(track -> st)
cond	22:8	22:15	3	track -> st
water	22:8	0:0	4	track
op	22:13	0:0	4	->
water	22:15	0:0	4	st
stmts	23:8	23:66	3	
water	23:8	0:0	4	t
op	23:10	0:0	4	=
call	23:12	23:65	4	av_dict_get
arg	23:24	23:43	5	track->st->metadata
water	23:24	0:0	6	track
op	23:29	0:0	6	->
water	23:31	0:0	6	st
op	23:33	0:0	6	->
water	23:35	0:0	6	metadata
arg	23:45	23:56	5	"reel_name"
water	23:45	0:0	6	"reel_name"
arg	23:58	23:62	5	NULL
water	23:58	0:0	6	NULL
arg	23:64	23:65	5	0
water	23:64	0:0	6	0
water	23:66	0:0	4	;
if	24:4	25:59	2	(t &&utf8len (t -> value ))
cond	24:8	24:29	3	t &&utf8len (t -> value )
water	24:8	0:0	4	t
op	24:10	0:0	4	&&
call	24:13	24:29	4	utf8len
arg	24:21	24:29	5	t->value
water	24:21	0:0	6	t
op	24:22	0:0	6	->
water	24:24	0:0	6	value
stmts	25:8	25:59	3	
call	25:8	25:58	4	mov_write_source_reference_tag
arg	25:39	25:41	5	pb
water	25:39	0:0	6	pb
arg	25:43	25:48	5	track
water	25:43	0:0	6	track
arg	25:50	25:58	5	t->value
water	25:50	0:0	6	t
op	25:51	0:0	6	->
water	25:53	0:0	6	value
water	25:59	0:0	4	;
else	26:4	27:24	2
stmts	27:8	27:24	3	
call	27:8	27:23	4	avio_wb16
arg	27:18	27:20	5	pb
water	27:18	0:0	6	pb
arg	27:22	27:23	5	0
water	27:22	0:0	6	0
water	27:24	0:0	4	;
call	29:4	29:19	2	avio_wb32
arg	29:14	29:16	3	pb
water	29:14	0:0	4	pb
arg	29:18	29:19	3	0
water	29:18	0:0	4	0
water	29:20	0:0	2	;
call	30:4	30:27	2	ffio_wfourcc
arg	30:17	30:19	3	pb
water	30:17	0:0	4	pb
arg	30:21	30:27	3	"tmcd"
water	30:21	0:0	4	"tmcd"
water	30:28	0:0	2	;
call	31:4	31:19	2	avio_wb32
arg	31:14	31:16	3	pb
water	31:14	0:0	4	pb
arg	31:18	31:19	3	0
water	31:18	0:0	4	0
water	31:20	0:0	2	;
call	32:4	32:19	2	avio_wb32
arg	32:14	32:16	3	pb
water	32:14	0:0	4	pb
arg	32:18	32:19	3	1
water	32:18	0:0	4	1
water	32:20	0:0	2	;
if	33:4	34:73	2	(track -> enc -> extradata_size)
cond	33:8	33:20	3	track -> enc -> extradata_size
water	33:8	0:0	4	track
op	33:13	0:0	4	->
water	33:15	0:0	4	enc
op	33:18	0:0	4	->
water	33:20	0:0	4	extradata_size
stmts	34:8	34:73	3	
call	34:8	34:72	4	avio_write
arg	34:19	34:21	5	pb
water	34:19	0:0	6	pb
arg	34:23	34:44	5	track->enc->extradata
water	34:23	0:0	6	track
op	34:28	0:0	6	->
water	34:30	0:0	6	enc
op	34:33	0:0	6	->
water	34:35	0:0	6	extradata
arg	34:46	34:72	5	track->enc->extradata_size
water	34:46	0:0	6	track
op	34:51	0:0	6	->
water	34:53	0:0	6	enc
op	34:56	0:0	6	->
water	34:58	0:0	6	extradata_size
water	34:73	0:0	4	;
return	36:4	36:31	2	update_size(pb,pos)
call	36:11	36:30	3	update_size
arg	36:23	36:25	4	pb
water	36:23	0:0	5	pb
arg	36:27	36:30	4	pos
water	36:27	0:0	5	pos

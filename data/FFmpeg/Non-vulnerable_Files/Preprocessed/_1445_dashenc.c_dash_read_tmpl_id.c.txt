func	1:0	49:0	0	static DASHTmplId	dash_read_tmpl_id
params	1:35	0:0	1	
param	1:36	1:58	2	const char *	identifier
param	1:60	1:76	2	char *	format_tag
param	2:36	2:58	2	size_t	format_tag_size
param	2:60	2:76	2	const char * *	ptr
stmnts	0:0	48:18	1	
decl	3:4	3:24	2	const char	*next_ptr
decl	4:4	4:47	2	DASHTmplId	id_type
op	4:23	0:0	2	=
water	4:25	0:0	2	DASH_TMPL_ID_UNDEFINED
if	5:4	8:4	2	(av_strstart (identifier ,"$$" ,& next_ptr ))
cond	5:8	5:47	3	av_strstart (identifier ,"$$" ,& next_ptr )
call	5:8	5:47	4	av_strstart
arg	5:20	5:30	5	identifier
water	5:20	0:0	6	identifier
arg	5:32	5:36	5	"$$"
water	5:32	0:0	6	"$$"
arg	5:38	5:47	5	&next_ptr
op	5:38	0:0	6	&
water	5:39	0:0	6	next_ptr
stmts	5:50	8:4	3	
water	5:50	0:0	4	{
water	6:8	0:0	4	id_type
op	6:16	0:0	4	=
water	6:18	0:0	4	DASH_TMPL_ID_ESCAPE
water	6:37	0:0	4	;
op	7:8	0:0	4	*
water	7:9	0:0	4	ptr
op	7:13	0:0	4	=
water	7:15	0:0	4	next_ptr
water	7:23	0:0	4	;
water	8:4	0:0	4	}
else	8:6	14:4	2
stmts	8:11	14:4	3	
if	8:11	14:4	4	(av_strstart (identifier ,"$RepresentationID$" ,& next_ptr ))
cond	8:15	8:70	5	av_strstart (identifier ,"$RepresentationID$" ,& next_ptr )
call	8:15	8:70	6	av_strstart
arg	8:27	8:37	7	identifier
water	8:27	0:0	8	identifier
arg	8:39	8:59	7	"$RepresentationID$"
water	8:39	0:0	8	"$RepresentationID$"
arg	8:61	8:70	7	&next_ptr
op	8:61	0:0	8	&
water	8:62	0:0	8	next_ptr
stmts	8:73	14:4	5	
water	8:73	0:0	6	{
water	9:8	0:0	6	id_type
op	9:16	0:0	6	=
water	9:18	0:0	6	DASH_TMPL_ID_REP_ID
water	9:37	0:0	6	;
call	12:8	12:52	6	av_strlcpy
arg	12:19	12:29	7	format_tag
water	12:19	0:0	8	format_tag
arg	12:31	12:35	7	"%d"
water	12:31	0:0	8	"%d"
arg	12:37	12:52	7	format_tag_size
water	12:37	0:0	8	format_tag_size
water	12:53	0:0	6	;
op	13:8	0:0	6	*
water	13:9	0:0	6	ptr
op	13:13	0:0	6	=
water	13:15	0:0	6	next_ptr
water	13:23	0:0	6	;
water	14:4	0:0	6	}
else	14:6	47:4	2
stmts	14:11	47:4	3	
water	14:11	0:0	4	{
if	15:8	16:41	4	(av_strstart (identifier ,"$Number" ,& next_ptr ))
cond	15:12	15:56	5	av_strstart (identifier ,"$Number" ,& next_ptr )
call	15:12	15:56	6	av_strstart
arg	15:24	15:34	7	identifier
water	15:24	0:0	8	identifier
arg	15:36	15:45	7	"$Number"
water	15:36	0:0	8	"$Number"
arg	15:47	15:56	7	&next_ptr
op	15:47	0:0	8	&
water	15:48	0:0	8	next_ptr
stmts	16:12	16:41	5	
water	16:12	0:0	6	id_type
op	16:20	0:0	6	=
water	16:22	0:0	6	DASH_TMPL_ID_NUMBER
water	16:41	0:0	6	;
else	17:8	18:44	4
stmts	17:13	18:44	5	
if	17:13	18:44	6	(av_strstart (identifier ,"$Bandwidth" ,& next_ptr ))
cond	17:17	17:64	7	av_strstart (identifier ,"$Bandwidth" ,& next_ptr )
call	17:17	17:64	8	av_strstart
arg	17:29	17:39	9	identifier
water	17:29	0:0	10	identifier
arg	17:41	17:53	9	"$Bandwidth"
water	17:41	0:0	10	"$Bandwidth"
arg	17:55	17:64	9	&next_ptr
op	17:55	0:0	10	&
water	17:56	0:0	10	next_ptr
stmts	18:12	18:44	7	
water	18:12	0:0	8	id_type
op	18:20	0:0	8	=
water	18:22	0:0	8	DASH_TMPL_ID_BANDWIDTH
water	18:44	0:0	8	;
else	19:8	20:39	4
stmts	19:13	20:39	5	
if	19:13	20:39	6	(av_strstart (identifier ,"$Time" ,& next_ptr ))
cond	19:17	19:59	7	av_strstart (identifier ,"$Time" ,& next_ptr )
call	19:17	19:59	8	av_strstart
arg	19:29	19:39	9	identifier
water	19:29	0:0	10	identifier
arg	19:41	19:48	9	"$Time"
water	19:41	0:0	10	"$Time"
arg	19:50	19:59	9	&next_ptr
op	19:50	0:0	10	&
water	19:51	0:0	10	next_ptr
stmts	20:12	20:39	7	
water	20:12	0:0	8	id_type
op	20:20	0:0	8	=
water	20:22	0:0	8	DASH_TMPL_ID_TIME
water	20:39	0:0	8	;
else	21:8	22:44	4
stmts	22:12	22:44	5	
water	22:12	0:0	6	id_type
op	22:20	0:0	6	=
water	22:22	0:0	6	DASH_TMPL_ID_UNDEFINED
water	22:44	0:0	6	;
if	25:8	46:8	4	(id_type != DASH_TMPL_ID_UNDEFINED)
cond	25:12	25:23	5	id_type != DASH_TMPL_ID_UNDEFINED
water	25:12	0:0	6	id_type
op	25:20	0:0	6	!=
water	25:23	0:0	6	DASH_TMPL_ID_UNDEFINED
stmts	25:47	46:8	5	
water	25:47	0:0	6	{
decl	26:12	26:85	6	const char	*number_format
op	26:38	0:0	6	=
water	26:40	0:0	6	(
water	26:41	0:0	6	id_type
op	26:49	0:0	6	==
water	26:52	0:0	6	DASH_TMPL_ID_TIME
water	26:69	0:0	6	)
water	26:71	0:0	6	?
water	26:73	0:0	6	PRId64
water	26:80	0:0	6	:
water	26:82	0:0	6	"d"
if	27:12	30:12	6	(next_ptr [ 0 ] == '$')
cond	27:16	27:31	7	next_ptr [ 0 ] == '$'
water	27:16	0:0	8	next_ptr
op	27:24	0:0	8	[
water	27:25	0:0	8	0
op	27:26	0:0	8	]
op	27:28	0:0	8	==
water	27:31	0:0	8	'$'
stmts	27:36	30:12	7	
water	27:36	0:0	8	{
call	28:16	28:75	8	snprintf
arg	28:25	28:35	9	format_tag
water	28:25	0:0	10	format_tag
arg	28:37	28:52	9	format_tag_size
water	28:37	0:0	10	format_tag_size
arg	28:54	28:60	9	"%%%s"
water	28:54	0:0	10	"%%%s"
arg	28:62	28:75	9	number_format
water	28:62	0:0	10	number_format
water	28:76	0:0	8	;
op	29:16	0:0	8	*
water	29:17	0:0	8	ptr
op	29:21	0:0	8	=
op	29:23	0:0	8	&
water	29:24	0:0	8	next_ptr
op	29:32	0:0	8	[
water	29:33	0:0	8	1
op	29:34	0:0	8	]
water	29:35	0:0	8	;
water	30:12	0:0	8	}
else	30:14	45:12	6
stmts	30:19	45:12	7	
water	30:19	0:0	8	{
decl	31:16	31:37	8	const char	*width_ptr
if	33:16	39:16	8	(av_strstart (next_ptr ,"%0" ,& width_ptr ) &&av_isdigit (width_ptr [ 0 ] ) &&av_strstart (& width_ptr [ 1 ] ,"d$" ,& next_ptr ))
cond	33:20	35:62	9	av_strstart (next_ptr ,"%0" ,& width_ptr ) &&av_isdigit (width_ptr [ 0 ] ) &&av_strstart (& width_ptr [ 1 ] ,"d$" ,& next_ptr )
call	33:20	33:58	10	av_strstart
arg	33:32	33:40	11	next_ptr
water	33:32	0:0	12	next_ptr
arg	33:42	33:46	11	"%0"
water	33:42	0:0	12	"%0"
arg	33:48	33:58	11	&width_ptr
op	33:48	0:0	12	&
water	33:49	0:0	12	width_ptr
op	33:60	0:0	10	&&
call	34:20	34:43	10	av_isdigit
arg	34:31	34:43	11	width_ptr[0]
water	34:31	0:0	12	width_ptr
op	34:40	0:0	12	[
water	34:41	0:0	12	0
op	34:42	0:0	12	]
op	34:45	0:0	10	&&
call	35:20	35:62	10	av_strstart
arg	35:32	35:45	11	&width_ptr[1]
op	35:32	0:0	12	&
water	35:33	0:0	12	width_ptr
op	35:42	0:0	12	[
water	35:43	0:0	12	1
op	35:44	0:0	12	]
arg	35:47	35:51	11	"d$"
water	35:47	0:0	12	"d$"
arg	35:53	35:62	11	&next_ptr
op	35:53	0:0	12	&
water	35:54	0:0	12	next_ptr
stmts	35:65	39:16	9	
water	35:65	0:0	10	{
call	37:20	37:101	10	snprintf
arg	37:29	37:39	11	format_tag
water	37:29	0:0	12	format_tag
arg	37:41	37:56	11	format_tag_size
water	37:41	0:0	12	format_tag_size
arg	37:58	37:66	11	"%s%c%s"
water	37:58	0:0	12	"%s%c%s"
arg	37:68	37:72	11	"%0"
water	37:68	0:0	12	"%0"
arg	37:74	37:86	11	width_ptr[0]
water	37:74	0:0	12	width_ptr
op	37:83	0:0	12	[
water	37:84	0:0	12	0
op	37:85	0:0	12	]
arg	37:88	37:101	11	number_format
water	37:88	0:0	12	number_format
water	37:102	0:0	10	;
op	38:20	0:0	10	*
water	38:21	0:0	10	ptr
op	38:25	0:0	10	=
water	38:27	0:0	10	next_ptr
water	38:35	0:0	10	;
water	39:16	0:0	10	}
else	39:18	44:16	8
stmts	39:23	44:16	9	
water	39:23	0:0	10	{
call	40:20	42:97	10	av_log
arg	40:27	40:31	11	NULL
water	40:27	0:0	12	NULL
arg	40:33	40:47	11	AV_LOG_WARNING
water	40:33	0:0	12	AV_LOG_WARNING
arg	40:49	42:87	11	"Failed to parse format-tag beginning with %s. Expected either a ""closing '$' character or a format-string like '%%0[width]d', ""where width must be a single digit\n"
water	40:49	0:0	12	"Failed to parse format-tag beginning with %s. Expected either a "
water	41:49	0:0	12	"closing '$' character or a format-string like '%%0[width]d', "
water	42:49	0:0	12	"where width must be a single digit\n"
arg	42:89	42:97	11	next_ptr
water	42:89	0:0	12	next_ptr
water	42:98	0:0	10	;
water	43:20	0:0	10	id_type
op	43:28	0:0	10	=
water	43:30	0:0	10	DASH_TMPL_ID_UNDEFINED
water	43:52	0:0	10	;
water	44:16	0:0	10	}
water	45:12	0:0	8	}
water	46:8	0:0	6	}
water	47:4	0:0	4	}
return	48:4	48:18	2	id_type
water	48:11	0:0	3	id_type

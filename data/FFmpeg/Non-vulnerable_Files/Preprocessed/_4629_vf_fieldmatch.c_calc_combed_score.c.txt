func	1:0	137:0	0	static int	calc_combed_score
params	1:28	0:0	1	
param	1:29	1:56	2	const FieldMatchContext *	fm
param	1:58	1:76	2	const AVFrame *	src
stmnts	0:0	136:4	1	
decl	3:4	3:30	2	int	x
water	3:9	0:0	2	,
decl	3:4	3:30	2	int	y
water	3:12	0:0	2	,
decl	3:4	3:30	2	int	plane
water	3:19	0:0	2	,
decl	3:4	3:30	2	int	max_v
op	3:27	0:0	2	=
water	3:29	0:0	2	0
decl	4:4	4:35	2	const int	cthresh
op	4:22	0:0	2	=
water	4:24	0:0	2	fm
op	4:26	0:0	2	->
water	4:28	0:0	2	cthresh
decl	5:4	5:36	2	const int	cthresh6
op	5:23	0:0	2	=
water	5:25	0:0	2	cthresh
op	5:33	0:0	2	*
water	5:35	0:0	2	6
for	6:4	66:4	2	(plane = 0 ;plane < ( fm -> chroma ? 3 : 1 );plane ++)
forinit	6:9	6:18	3	plane = 0 ;
water	6:9	0:0	4	plane
op	6:15	0:0	4	=
water	6:17	0:0	4	0
water	6:18	0:0	4	;
cond	6:20	6:47	3	plane < ( fm -> chroma ? 3 : 1 )
water	6:20	0:0	4	plane
op	6:26	0:0	4	<
water	6:28	0:0	4	(
water	6:29	0:0	4	fm
op	6:31	0:0	4	->
water	6:33	0:0	4	chroma
water	6:40	0:0	4	?
water	6:42	0:0	4	3
water	6:44	0:0	4	:
water	6:46	0:0	4	1
water	6:47	0:0	4	)
forexpr	6:50	6:55	3	plane ++
water	6:50	0:0	4	plane
op	6:55	0:0	4	++
stmts	6:59	66:4	3	
water	6:59	0:0	4	{
decl	7:8	7:46	4	const uint8_t	*srcp
op	7:28	0:0	4	=
water	7:30	0:0	4	src
op	7:33	0:0	4	->
water	7:35	0:0	4	data
op	7:39	0:0	4	[
water	7:40	0:0	4	plane
op	7:45	0:0	4	]
decl	8:8	8:53	4	const int	src_linesize
op	8:31	0:0	4	=
water	8:33	0:0	4	src
op	8:36	0:0	4	->
water	8:38	0:0	4	linesize
op	8:46	0:0	4	[
water	8:47	0:0	4	plane
op	8:52	0:0	4	]
decl	9:8	9:53	4	const int	width
op	9:25	0:0	4	=
call	9:27	9:52	5	get_width
arg	9:38	9:40	6	fm
water	9:38	0:0	7	fm
arg	9:42	9:45	6	src
water	9:42	0:0	7	src
arg	9:47	9:52	6	plane
water	9:47	0:0	7	plane
decl	10:8	10:53	4	const int	height
op	10:25	0:0	4	=
call	10:27	10:52	5	get_height
arg	10:38	10:40	6	fm
water	10:38	0:0	7	fm
arg	10:42	10:45	6	src
water	10:42	0:0	7	src
arg	10:47	10:52	6	plane
water	10:47	0:0	7	plane
decl	11:8	11:45	4	uint8_t	*cmkp
op	11:22	0:0	4	=
water	11:24	0:0	4	fm
op	11:26	0:0	4	->
water	11:28	0:0	4	cmask_data
op	11:38	0:0	4	[
water	11:39	0:0	4	plane
op	11:44	0:0	4	]
decl	12:8	12:58	4	const int	cmk_linesize
op	12:31	0:0	4	=
water	12:33	0:0	4	fm
op	12:35	0:0	4	->
water	12:37	0:0	4	cmask_linesize
op	12:51	0:0	4	[
water	12:52	0:0	4	plane
op	12:57	0:0	4	]
if	13:8	16:8	4	(cthresh < 0)
cond	13:12	13:22	5	cthresh < 0
water	13:12	0:0	6	cthresh
op	13:20	0:0	6	<
water	13:22	0:0	6	0
stmts	13:25	16:8	5	
water	13:25	0:0	6	{
call	14:12	14:60	6	fill_buf
arg	14:21	14:25	7	cmkp
water	14:21	0:0	8	cmkp
arg	14:27	14:32	7	width
water	14:27	0:0	8	width
arg	14:34	14:40	7	height
water	14:34	0:0	8	height
arg	14:42	14:54	7	cmk_linesize
water	14:42	0:0	8	cmk_linesize
arg	14:56	14:60	7	0xff
water	14:56	0:0	8	0
water	14:57	0:0	8	xff
water	14:61	0:0	6	;
continue	15:12	15:20	6	
water	16:8	0:0	6	}
call	17:8	17:53	4	fill_buf
arg	17:17	17:21	5	cmkp
water	17:17	0:0	6	cmkp
arg	17:23	17:28	5	width
water	17:23	0:0	6	width
arg	17:30	17:36	5	height
water	17:30	0:0	6	height
arg	17:38	17:50	5	cmk_linesize
water	17:38	0:0	6	cmk_linesize
arg	17:52	17:53	5	0
water	17:52	0:0	6	0
water	17:54	0:0	4	;
call	20:8	22:79	4	abs
arg	20:14	22:79	5	4*srcp[x]-3*(srcp[x+(xm1)*src_linesize]+srcp[x+(xp1)*src_linesize])+(srcp[x+(xm2)*src_linesize]+srcp[x+(xp2)*src_linesize])
water	20:14	0:0	6	4
op	20:16	0:0	6	*
water	20:18	0:0	6	srcp
op	20:22	0:0	6	[
water	20:23	0:0	6	x
op	20:24	0:0	6	]
op	21:13	0:0	6	-
water	21:14	0:0	6	3
op	21:16	0:0	6	*
water	21:18	0:0	6	(
water	21:19	0:0	6	srcp
op	21:23	0:0	6	[
water	21:24	0:0	6	x
op	21:26	0:0	6	+
water	21:28	0:0	6	(
water	21:29	0:0	6	xm1
water	21:32	0:0	6	)
op	21:33	0:0	6	*
water	21:34	0:0	6	src_linesize
op	21:46	0:0	6	]
op	21:48	0:0	6	+
water	21:50	0:0	6	srcp
op	21:54	0:0	6	[
water	21:55	0:0	6	x
op	21:57	0:0	6	+
water	21:59	0:0	6	(
water	21:60	0:0	6	xp1
water	21:63	0:0	6	)
op	21:64	0:0	6	*
water	21:65	0:0	6	src_linesize
op	21:77	0:0	6	]
water	21:78	0:0	6	)
op	22:13	0:0	6	+
water	22:18	0:0	6	(
water	22:19	0:0	6	srcp
op	22:23	0:0	6	[
water	22:24	0:0	6	x
op	22:26	0:0	6	+
water	22:28	0:0	6	(
water	22:29	0:0	6	xm2
water	22:32	0:0	6	)
op	22:33	0:0	6	*
water	22:34	0:0	6	src_linesize
op	22:46	0:0	6	]
op	22:48	0:0	6	+
water	22:50	0:0	6	srcp
op	22:54	0:0	6	[
water	22:55	0:0	6	x
op	22:57	0:0	6	+
water	22:59	0:0	6	(
water	22:60	0:0	6	xp2
water	22:63	0:0	6	)
op	22:64	0:0	6	*
water	22:65	0:0	6	src_linesize
op	22:77	0:0	6	]
water	22:78	0:0	6	)
op	22:81	0:0	4	>
water	22:83	0:0	4	cthresh6
water	24:8	0:0	4	for
water	24:12	0:0	4	(
water	24:13	0:0	4	x
op	24:15	0:0	4	=
water	24:17	0:0	4	0
water	24:18	0:0	4	;
water	24:20	0:0	4	x
op	24:22	0:0	4	<
water	24:24	0:0	4	width
water	24:29	0:0	4	;
water	24:31	0:0	4	x
op	24:32	0:0	4	++
water	24:34	0:0	4	)
water	24:36	0:0	4	{
water	25:12	0:0	4	const
water	25:18	0:0	4	int
water	25:22	0:0	4	s1
op	25:25	0:0	4	=
call	25:27	25:63	4	abs
arg	25:31	25:63	5	srcp[x]-srcp[x+src_linesize]
water	25:31	0:0	6	srcp
op	25:35	0:0	6	[
water	25:36	0:0	6	x
op	25:37	0:0	6	]
op	25:39	0:0	6	-
water	25:41	0:0	6	srcp
op	25:45	0:0	6	[
water	25:46	0:0	6	x
op	25:48	0:0	6	+
water	25:50	0:0	6	src_linesize
op	25:62	0:0	6	]
water	25:64	0:0	4	;
water	26:12	0:0	4	if
water	26:15	0:0	4	(
water	26:16	0:0	4	s1
op	26:19	0:0	4	>
water	26:21	0:0	4	cthresh
op	26:29	0:0	4	&&
call	26:32	26:49	4	FILTER
arg	26:39	26:40	5	2
water	26:39	0:0	6	2
arg	26:42	26:43	5	1
water	26:42	0:0	6	1
arg	26:45	26:46	5	1
water	26:45	0:0	6	1
arg	26:48	26:49	5	2
water	26:48	0:0	6	2
water	26:50	0:0	4	)
water	27:16	0:0	4	cmkp
op	27:20	0:0	4	[
water	27:21	0:0	4	x
op	27:22	0:0	4	]
op	27:24	0:0	4	=
water	27:26	0:0	4	0
water	27:27	0:0	4	xff
water	27:30	0:0	4	;
water	28:8	0:0	4	}
water	29:8	0:0	4	srcp
op	29:13	0:0	4	+=
water	29:16	0:0	4	src_linesize
water	29:28	0:0	4	;
water	30:8	0:0	4	cmkp
op	30:13	0:0	4	+=
water	30:16	0:0	4	cmk_linesize
water	30:28	0:0	4	;
for	32:8	37:8	4	(x = 0 ;x < width;x ++)
forinit	32:13	32:18	5	x = 0 ;
water	32:13	0:0	6	x
op	32:15	0:0	6	=
water	32:17	0:0	6	0
water	32:18	0:0	6	;
cond	32:20	32:24	5	x < width
water	32:20	0:0	6	x
op	32:22	0:0	6	<
water	32:24	0:0	6	width
forexpr	32:31	32:32	5	x ++
water	32:31	0:0	6	x
op	32:32	0:0	6	++
stmts	32:36	37:8	5	
water	32:36	0:0	6	{
decl	33:12	33:64	6	const int	s1
op	33:25	0:0	6	=
call	33:27	33:63	7	abs
arg	33:31	33:63	8	srcp[x]-srcp[x-src_linesize]
water	33:31	0:0	9	srcp
op	33:35	0:0	9	[
water	33:36	0:0	9	x
op	33:37	0:0	9	]
op	33:39	0:0	9	-
water	33:41	0:0	9	srcp
op	33:45	0:0	9	[
water	33:46	0:0	9	x
op	33:48	0:0	9	-
water	33:50	0:0	9	src_linesize
op	33:62	0:0	9	]
decl	34:12	34:64	6	const int	s2
op	34:25	0:0	6	=
call	34:27	34:63	7	abs
arg	34:31	34:63	8	srcp[x]-srcp[x+src_linesize]
water	34:31	0:0	9	srcp
op	34:35	0:0	9	[
water	34:36	0:0	9	x
op	34:37	0:0	9	]
op	34:39	0:0	9	-
water	34:41	0:0	9	srcp
op	34:45	0:0	9	[
water	34:46	0:0	9	x
op	34:48	0:0	9	+
water	34:50	0:0	9	src_linesize
op	34:62	0:0	9	]
if	35:12	36:30	6	(s1 > cthresh && s2 > cthresh &&FILTER (2 ,- 1 ,1 ,2 ))
cond	35:16	35:66	7	s1 > cthresh && s2 > cthresh &&FILTER (2 ,- 1 ,1 ,2 )
water	35:16	0:0	8	s1
op	35:19	0:0	8	>
water	35:21	0:0	8	cthresh
op	35:29	0:0	8	&&
water	35:32	0:0	8	s2
op	35:35	0:0	8	>
water	35:37	0:0	8	cthresh
op	35:45	0:0	8	&&
call	35:48	35:66	8	FILTER
arg	35:55	35:56	9	2
water	35:55	0:0	10	2
arg	35:58	35:60	9	-1
op	35:58	0:0	10	-
water	35:59	0:0	10	1
arg	35:62	35:63	9	1
water	35:62	0:0	10	1
arg	35:65	35:66	9	2
water	35:65	0:0	10	2
stmts	36:16	36:30	7	
water	36:16	0:0	8	cmkp
op	36:20	0:0	8	[
water	36:21	0:0	8	x
op	36:22	0:0	8	]
op	36:24	0:0	8	=
water	36:26	0:0	8	0
water	36:27	0:0	8	xff
water	36:30	0:0	8	;
water	37:8	0:0	6	}
water	38:8	0:0	4	srcp
op	38:13	0:0	4	+=
water	38:16	0:0	4	src_linesize
water	38:28	0:0	4	;
water	39:8	0:0	4	cmkp
op	39:13	0:0	4	+=
water	39:16	0:0	4	cmk_linesize
water	39:28	0:0	4	;
for	41:8	50:8	4	(y = 2 ;y < height - 2;y ++)
forinit	41:13	41:18	5	y = 2 ;
water	41:13	0:0	6	y
op	41:15	0:0	6	=
water	41:17	0:0	6	2
water	41:18	0:0	6	;
cond	41:20	41:31	5	y < height - 2
water	41:20	0:0	6	y
op	41:22	0:0	6	<
water	41:24	0:0	6	height
op	41:30	0:0	6	-
water	41:31	0:0	6	2
forexpr	41:34	41:35	5	y ++
water	41:34	0:0	6	y
op	41:35	0:0	6	++
stmts	41:39	50:8	5	
water	41:39	0:0	6	{
for	42:12	47:12	6	(x = 0 ;x < width;x ++)
forinit	42:17	42:22	7	x = 0 ;
water	42:17	0:0	8	x
op	42:19	0:0	8	=
water	42:21	0:0	8	0
water	42:22	0:0	8	;
cond	42:24	42:28	7	x < width
water	42:24	0:0	8	x
op	42:26	0:0	8	<
water	42:28	0:0	8	width
forexpr	42:35	42:36	7	x ++
water	42:35	0:0	8	x
op	42:36	0:0	8	++
stmts	42:40	47:12	7	
water	42:40	0:0	8	{
decl	43:16	43:68	8	const int	s1
op	43:29	0:0	8	=
call	43:31	43:67	9	abs
arg	43:35	43:67	10	srcp[x]-srcp[x-src_linesize]
water	43:35	0:0	11	srcp
op	43:39	0:0	11	[
water	43:40	0:0	11	x
op	43:41	0:0	11	]
op	43:43	0:0	11	-
water	43:45	0:0	11	srcp
op	43:49	0:0	11	[
water	43:50	0:0	11	x
op	43:52	0:0	11	-
water	43:54	0:0	11	src_linesize
op	43:66	0:0	11	]
decl	44:16	44:68	8	const int	s2
op	44:29	0:0	8	=
call	44:31	44:67	9	abs
arg	44:35	44:67	10	srcp[x]-srcp[x+src_linesize]
water	44:35	0:0	11	srcp
op	44:39	0:0	11	[
water	44:40	0:0	11	x
op	44:41	0:0	11	]
op	44:43	0:0	11	-
water	44:45	0:0	11	srcp
op	44:49	0:0	11	[
water	44:50	0:0	11	x
op	44:52	0:0	11	+
water	44:54	0:0	11	src_linesize
op	44:66	0:0	11	]
if	45:16	46:34	8	(s1 > cthresh && s2 > cthresh &&FILTER (- 2 ,- 1 ,1 ,2 ))
cond	45:20	45:71	9	s1 > cthresh && s2 > cthresh &&FILTER (- 2 ,- 1 ,1 ,2 )
water	45:20	0:0	10	s1
op	45:23	0:0	10	>
water	45:25	0:0	10	cthresh
op	45:33	0:0	10	&&
water	45:36	0:0	10	s2
op	45:39	0:0	10	>
water	45:41	0:0	10	cthresh
op	45:49	0:0	10	&&
call	45:52	45:71	10	FILTER
arg	45:59	45:61	11	-2
op	45:59	0:0	12	-
water	45:60	0:0	12	2
arg	45:63	45:65	11	-1
op	45:63	0:0	12	-
water	45:64	0:0	12	1
arg	45:67	45:68	11	1
water	45:67	0:0	12	1
arg	45:70	45:71	11	2
water	45:70	0:0	12	2
stmts	46:20	46:34	9	
water	46:20	0:0	10	cmkp
op	46:24	0:0	10	[
water	46:25	0:0	10	x
op	46:26	0:0	10	]
op	46:28	0:0	10	=
water	46:30	0:0	10	0
water	46:31	0:0	10	xff
water	46:34	0:0	10	;
water	47:12	0:0	8	}
water	48:12	0:0	6	srcp
op	48:17	0:0	6	+=
water	48:20	0:0	6	src_linesize
water	48:32	0:0	6	;
water	49:12	0:0	6	cmkp
op	49:17	0:0	6	+=
water	49:20	0:0	6	cmk_linesize
water	49:32	0:0	6	;
water	50:8	0:0	6	}
for	52:8	57:8	4	(x = 0 ;x < width;x ++)
forinit	52:13	52:18	5	x = 0 ;
water	52:13	0:0	6	x
op	52:15	0:0	6	=
water	52:17	0:0	6	0
water	52:18	0:0	6	;
cond	52:20	52:24	5	x < width
water	52:20	0:0	6	x
op	52:22	0:0	6	<
water	52:24	0:0	6	width
forexpr	52:31	52:32	5	x ++
water	52:31	0:0	6	x
op	52:32	0:0	6	++
stmts	52:36	57:8	5	
water	52:36	0:0	6	{
decl	53:12	53:64	6	const int	s1
op	53:25	0:0	6	=
call	53:27	53:63	7	abs
arg	53:31	53:63	8	srcp[x]-srcp[x-src_linesize]
water	53:31	0:0	9	srcp
op	53:35	0:0	9	[
water	53:36	0:0	9	x
op	53:37	0:0	9	]
op	53:39	0:0	9	-
water	53:41	0:0	9	srcp
op	53:45	0:0	9	[
water	53:46	0:0	9	x
op	53:48	0:0	9	-
water	53:50	0:0	9	src_linesize
op	53:62	0:0	9	]
decl	54:12	54:64	6	const int	s2
op	54:25	0:0	6	=
call	54:27	54:63	7	abs
arg	54:31	54:63	8	srcp[x]-srcp[x+src_linesize]
water	54:31	0:0	9	srcp
op	54:35	0:0	9	[
water	54:36	0:0	9	x
op	54:37	0:0	9	]
op	54:39	0:0	9	-
water	54:41	0:0	9	srcp
op	54:45	0:0	9	[
water	54:46	0:0	9	x
op	54:48	0:0	9	+
water	54:50	0:0	9	src_linesize
op	54:62	0:0	9	]
if	55:12	56:30	6	(s1 > cthresh && s2 > cthresh &&FILTER (- 2 ,- 1 ,1 ,- 2 ))
cond	55:16	55:68	7	s1 > cthresh && s2 > cthresh &&FILTER (- 2 ,- 1 ,1 ,- 2 )
water	55:16	0:0	8	s1
op	55:19	0:0	8	>
water	55:21	0:0	8	cthresh
op	55:29	0:0	8	&&
water	55:32	0:0	8	s2
op	55:35	0:0	8	>
water	55:37	0:0	8	cthresh
op	55:45	0:0	8	&&
call	55:48	55:68	8	FILTER
arg	55:55	55:57	9	-2
op	55:55	0:0	10	-
water	55:56	0:0	10	2
arg	55:59	55:61	9	-1
op	55:59	0:0	10	-
water	55:60	0:0	10	1
arg	55:63	55:64	9	1
water	55:63	0:0	10	1
arg	55:66	55:68	9	-2
op	55:66	0:0	10	-
water	55:67	0:0	10	2
stmts	56:16	56:30	7	
water	56:16	0:0	8	cmkp
op	56:20	0:0	8	[
water	56:21	0:0	8	x
op	56:22	0:0	8	]
op	56:24	0:0	8	=
water	56:26	0:0	8	0
water	56:27	0:0	8	xff
water	56:30	0:0	8	;
water	57:8	0:0	6	}
water	58:8	0:0	4	srcp
op	58:13	0:0	4	+=
water	58:16	0:0	4	src_linesize
water	58:28	0:0	4	;
water	59:8	0:0	4	cmkp
op	59:13	0:0	4	+=
water	59:16	0:0	4	cmk_linesize
water	59:28	0:0	4	;
for	61:8	65:8	4	(x = 0 ;x < width;x ++)
forinit	61:13	61:18	5	x = 0 ;
water	61:13	0:0	6	x
op	61:15	0:0	6	=
water	61:17	0:0	6	0
water	61:18	0:0	6	;
cond	61:20	61:24	5	x < width
water	61:20	0:0	6	x
op	61:22	0:0	6	<
water	61:24	0:0	6	width
forexpr	61:31	61:32	5	x ++
water	61:31	0:0	6	x
op	61:32	0:0	6	++
stmts	61:36	65:8	5	
water	61:36	0:0	6	{
decl	62:12	62:64	6	const int	s1
op	62:25	0:0	6	=
call	62:27	62:63	7	abs
arg	62:31	62:63	8	srcp[x]-srcp[x-src_linesize]
water	62:31	0:0	9	srcp
op	62:35	0:0	9	[
water	62:36	0:0	9	x
op	62:37	0:0	9	]
op	62:39	0:0	9	-
water	62:41	0:0	9	srcp
op	62:45	0:0	9	[
water	62:46	0:0	9	x
op	62:48	0:0	9	-
water	62:50	0:0	9	src_linesize
op	62:62	0:0	9	]
if	63:12	64:30	6	(s1 > cthresh &&FILTER (- 2 ,- 1 ,- 1 ,- 2 ))
cond	63:16	63:53	7	s1 > cthresh &&FILTER (- 2 ,- 1 ,- 1 ,- 2 )
water	63:16	0:0	8	s1
op	63:19	0:0	8	>
water	63:21	0:0	8	cthresh
op	63:29	0:0	8	&&
call	63:32	63:53	8	FILTER
arg	63:39	63:41	9	-2
op	63:39	0:0	10	-
water	63:40	0:0	10	2
arg	63:43	63:45	9	-1
op	63:43	0:0	10	-
water	63:44	0:0	10	1
arg	63:47	63:49	9	-1
op	63:47	0:0	10	-
water	63:48	0:0	10	1
arg	63:51	63:53	9	-2
op	63:51	0:0	10	-
water	63:52	0:0	10	2
stmts	64:16	64:30	7	
water	64:16	0:0	8	cmkp
op	64:20	0:0	8	[
water	64:21	0:0	8	x
op	64:22	0:0	8	]
op	64:24	0:0	8	=
water	64:26	0:0	8	0
water	64:27	0:0	8	xff
water	64:30	0:0	8	;
water	65:8	0:0	6	}
water	66:4	0:0	4	}
if	67:4	98:4	2	(fm -> chroma)
cond	67:8	67:12	3	fm -> chroma
water	67:8	0:0	4	fm
op	67:10	0:0	4	->
water	67:12	0:0	4	chroma
stmts	67:20	98:4	3	
water	67:20	0:0	4	{
decl	68:8	68:42	4	uint8_t	*cmkp
op	68:23	0:0	4	=
water	68:25	0:0	4	fm
op	68:27	0:0	4	->
water	68:29	0:0	4	cmask_data
op	68:39	0:0	4	[
water	68:40	0:0	4	0
op	68:41	0:0	4	]
decl	69:8	69:42	4	uint8_t	*cmkpU
op	69:23	0:0	4	=
water	69:25	0:0	4	fm
op	69:27	0:0	4	->
water	69:29	0:0	4	cmask_data
op	69:39	0:0	4	[
water	69:40	0:0	4	1
op	69:41	0:0	4	]
decl	70:8	70:42	4	uint8_t	*cmkpV
op	70:23	0:0	4	=
water	70:25	0:0	4	fm
op	70:27	0:0	4	->
water	70:29	0:0	4	cmask_data
op	70:39	0:0	4	[
water	70:40	0:0	4	2
op	70:41	0:0	4	]
decl	71:8	71:64	4	const int	width
op	71:25	0:0	4	=
call	71:27	71:63	5	FF_CEIL_RSHIFT
arg	71:42	71:52	6	src->width
water	71:42	0:0	7	src
op	71:45	0:0	7	->
water	71:47	0:0	7	width
arg	71:55	71:63	6	fm->hsub
water	71:55	0:0	7	fm
op	71:57	0:0	7	->
water	71:59	0:0	7	hsub
decl	72:8	72:64	4	const int	height
op	72:25	0:0	4	=
call	72:27	72:63	5	FF_CEIL_RSHIFT
arg	72:42	72:53	6	src->height
water	72:42	0:0	7	src
op	72:45	0:0	7	->
water	72:47	0:0	7	height
arg	72:55	72:63	6	fm->vsub
water	72:55	0:0	7	fm
op	72:57	0:0	7	->
water	72:59	0:0	7	vsub
decl	73:8	73:61	4	const int	cmk_linesize
op	73:33	0:0	4	=
water	73:35	0:0	4	fm
op	73:37	0:0	4	->
water	73:39	0:0	4	cmask_linesize
op	73:53	0:0	4	[
water	73:54	0:0	4	0
op	73:55	0:0	4	]
op	73:57	0:0	4	<<
water	73:60	0:0	4	1
decl	74:8	74:56	4	const int	cmk_linesizeUV
op	74:33	0:0	4	=
water	74:35	0:0	4	fm
op	74:37	0:0	4	->
water	74:39	0:0	4	cmask_linesize
op	74:53	0:0	4	[
water	74:54	0:0	4	2
op	74:55	0:0	4	]
decl	75:8	75:50	4	uint8_t	*cmkpp
op	75:24	0:0	4	=
water	75:26	0:0	4	cmkp
op	75:31	0:0	4	-
water	75:33	0:0	4	(
water	75:34	0:0	4	cmk_linesize
op	75:46	0:0	4	>>
water	75:48	0:0	4	1
water	75:49	0:0	4	)
decl	76:8	76:50	4	uint8_t	*cmkpn
op	76:24	0:0	4	=
water	76:26	0:0	4	cmkp
op	76:31	0:0	4	+
water	76:33	0:0	4	(
water	76:34	0:0	4	cmk_linesize
op	76:46	0:0	4	>>
water	76:48	0:0	4	1
water	76:49	0:0	4	)
decl	77:8	77:46	4	uint8_t	*cmkpnn
op	77:24	0:0	4	=
water	77:26	0:0	4	cmkp
op	77:31	0:0	4	+
water	77:34	0:0	4	cmk_linesize
for	78:8	97:8	4	(y = 1 ;y < height - 1;y ++)
forinit	78:13	78:18	5	y = 1 ;
water	78:13	0:0	6	y
op	78:15	0:0	6	=
water	78:17	0:0	6	1
water	78:18	0:0	6	;
cond	78:20	78:33	5	y < height - 1
water	78:20	0:0	6	y
op	78:22	0:0	6	<
water	78:24	0:0	6	height
op	78:31	0:0	6	-
water	78:33	0:0	6	1
forexpr	78:36	78:37	5	y ++
water	78:36	0:0	6	y
op	78:37	0:0	6	++
stmts	78:41	97:8	5	
water	78:41	0:0	6	{
water	79:12	0:0	6	cmkpp
op	79:19	0:0	6	+=
water	79:22	0:0	6	cmk_linesize
water	79:34	0:0	6	;
water	80:12	0:0	6	cmkp
op	80:19	0:0	6	+=
water	80:22	0:0	6	cmk_linesize
water	80:34	0:0	6	;
water	81:12	0:0	6	cmkpn
op	81:19	0:0	6	+=
water	81:22	0:0	6	cmk_linesize
water	81:34	0:0	6	;
water	82:12	0:0	6	cmkpnn
op	82:19	0:0	6	+=
water	82:22	0:0	6	cmk_linesize
water	82:34	0:0	6	;
water	83:12	0:0	6	cmkpV
op	83:19	0:0	6	+=
water	83:22	0:0	6	cmk_linesizeUV
water	83:36	0:0	6	;
water	84:12	0:0	6	cmkpU
op	84:19	0:0	6	+=
water	84:22	0:0	6	cmk_linesizeUV
water	84:36	0:0	6	;
for	85:12	96:12	6	(x = 1 ;x < width - 1;x ++)
forinit	85:17	85:22	7	x = 1 ;
water	85:17	0:0	8	x
op	85:19	0:0	8	=
water	85:21	0:0	8	1
water	85:22	0:0	8	;
cond	85:24	85:36	7	x < width - 1
water	85:24	0:0	8	x
op	85:26	0:0	8	<
water	85:28	0:0	8	width
op	85:34	0:0	8	-
water	85:36	0:0	8	1
forexpr	85:39	85:40	7	x ++
water	85:39	0:0	8	x
op	85:40	0:0	8	++
stmts	85:44	96:12	7	
water	85:44	0:0	8	{
water	87:30	0:0	8	p
op	87:31	0:0	8	[
water	87:32	0:0	8	(
water	87:33	0:0	8	x
water	87:34	0:0	8	)
op	87:35	0:0	8	-
water	87:36	0:0	8	1
op	87:44	0:0	8	]
op	87:46	0:0	8	==
water	87:49	0:0	8	0
water	87:50	0:0	8	xff
op	87:54	0:0	8	||
water	87:82	0:0	8	p
op	87:83	0:0	8	[
water	87:84	0:0	8	(
water	87:85	0:0	8	x
water	87:86	0:0	8	)
op	87:87	0:0	8	+
water	87:88	0:0	8	1
op	87:96	0:0	8	]
op	87:98	0:0	8	==
water	87:101	0:0	8	0
water	87:102	0:0	8	xff
op	87:106	0:0	8	||
water	88:30	0:0	8	p
op	88:31	0:0	8	[
water	88:32	0:0	8	(
water	88:33	0:0	8	x
water	88:34	0:0	8	)
op	88:35	0:0	8	-
water	88:36	0:0	8	1
op	88:38	0:0	8	+
water	88:40	0:0	8	(
water	88:41	0:0	8	lz
water	88:43	0:0	8	)
op	88:44	0:0	8	]
op	88:46	0:0	8	==
water	88:49	0:0	8	0
water	88:50	0:0	8	xff
op	88:54	0:0	8	||
water	88:57	0:0	8	p
op	88:58	0:0	8	[
water	88:59	0:0	8	(
water	88:60	0:0	8	x
water	88:61	0:0	8	)
op	88:63	0:0	8	+
water	88:65	0:0	8	(
water	88:66	0:0	8	lz
water	88:68	0:0	8	)
op	88:69	0:0	8	]
op	88:71	0:0	8	==
water	88:74	0:0	8	0
water	88:75	0:0	8	xff
op	88:79	0:0	8	||
water	88:82	0:0	8	p
op	88:83	0:0	8	[
water	88:84	0:0	8	(
water	88:85	0:0	8	x
water	88:86	0:0	8	)
op	88:87	0:0	8	+
water	88:88	0:0	8	1
op	88:90	0:0	8	+
water	88:92	0:0	8	(
water	88:93	0:0	8	lz
water	88:95	0:0	8	)
op	88:96	0:0	8	]
op	88:98	0:0	8	==
water	88:101	0:0	8	0
water	88:102	0:0	8	xff
water	88:105	0:0	8	)
if	89:16	95:16	8	(( cmkpV [ x ] == 0 xff &&HAS_FF_AROUND (cmkpV ,cmk_linesizeUV ) ) || ( cmkpU [ x ] == 0 xff &&HAS_FF_AROUND (cmkpU ,cmk_linesizeUV ) ))
cond	89:20	90:77	9	( cmkpV [ x ] == 0 xff &&HAS_FF_AROUND (cmkpV ,cmk_linesizeUV ) ) || ( cmkpU [ x ] == 0 xff &&HAS_FF_AROUND (cmkpU ,cmk_linesizeUV ) )
water	89:20	0:0	10	(
water	89:21	0:0	10	cmkpV
op	89:26	0:0	10	[
water	89:27	0:0	10	x
op	89:28	0:0	10	]
op	89:30	0:0	10	==
water	89:33	0:0	10	0
water	89:34	0:0	10	xff
op	89:38	0:0	10	&&
call	89:41	89:76	10	HAS_FF_AROUND
arg	89:55	89:60	11	cmkpV
water	89:55	0:0	12	cmkpV
arg	89:62	89:76	11	cmk_linesizeUV
water	89:62	0:0	12	cmk_linesizeUV
water	89:77	0:0	10	)
op	89:79	0:0	10	||
water	90:20	0:0	10	(
water	90:21	0:0	10	cmkpU
op	90:26	0:0	10	[
water	90:27	0:0	10	x
op	90:28	0:0	10	]
op	90:30	0:0	10	==
water	90:33	0:0	10	0
water	90:34	0:0	10	xff
op	90:38	0:0	10	&&
call	90:41	90:76	10	HAS_FF_AROUND
arg	90:55	90:60	11	cmkpU
water	90:55	0:0	12	cmkpU
arg	90:62	90:76	11	cmk_linesizeUV
water	90:62	0:0	12	cmk_linesizeUV
water	90:77	0:0	10	)
stmts	90:80	95:16	9	
water	90:80	0:0	10	{
water	91:20	0:0	10	(
water	91:21	0:0	10	(
water	91:22	0:0	10	uint16_t
op	91:30	0:0	10	*
water	91:31	0:0	10	)
water	91:32	0:0	10	cmkp
water	91:36	0:0	10	)
op	91:37	0:0	10	[
water	91:38	0:0	10	x
op	91:39	0:0	10	]
op	91:42	0:0	10	=
water	91:44	0:0	10	0
water	91:45	0:0	10	xffff
water	91:50	0:0	10	;
water	92:20	0:0	10	(
water	92:21	0:0	10	(
water	92:22	0:0	10	uint16_t
op	92:30	0:0	10	*
water	92:31	0:0	10	)
water	92:32	0:0	10	cmkpn
water	92:37	0:0	10	)
op	92:38	0:0	10	[
water	92:39	0:0	10	x
op	92:40	0:0	10	]
op	92:42	0:0	10	=
water	92:44	0:0	10	0
water	92:45	0:0	10	xffff
water	92:50	0:0	10	;
if	93:20	93:60	10	(y & 1)
cond	93:24	93:26	11	y & 1
water	93:24	0:0	12	y
op	93:25	0:0	12	&
water	93:26	0:0	12	1
stmts	93:29	93:60	11	
water	93:29	0:0	12	(
water	93:30	0:0	12	(
water	93:31	0:0	12	uint16_t
op	93:39	0:0	12	*
water	93:40	0:0	12	)
water	93:41	0:0	12	cmkpp
water	93:46	0:0	12	)
op	93:47	0:0	12	[
water	93:48	0:0	12	x
op	93:49	0:0	12	]
op	93:52	0:0	12	=
water	93:54	0:0	12	0
water	93:55	0:0	12	xffff
water	93:60	0:0	12	;
else	94:20	94:60	10
stmts	94:29	94:60	11	
water	94:29	0:0	12	(
water	94:30	0:0	12	(
water	94:31	0:0	12	uint16_t
op	94:39	0:0	12	*
water	94:40	0:0	12	)
water	94:41	0:0	12	cmkpnn
water	94:47	0:0	12	)
op	94:48	0:0	12	[
water	94:49	0:0	12	x
op	94:50	0:0	12	]
op	94:52	0:0	12	=
water	94:54	0:0	12	0
water	94:55	0:0	12	xffff
water	94:60	0:0	12	;
water	95:16	0:0	10	}
water	96:12	0:0	8	}
water	97:8	0:0	6	}
water	98:4	0:0	4	}
water	99:4	0:0	2	{
decl	100:8	100:37	2	const int	blockx
op	100:25	0:0	2	=
water	100:27	0:0	2	fm
op	100:29	0:0	2	->
water	100:31	0:0	2	blockx
decl	101:8	101:37	2	const int	blocky
op	101:25	0:0	2	=
water	101:27	0:0	2	fm
op	101:29	0:0	2	->
water	101:31	0:0	2	blocky
decl	102:8	102:34	2	const int	xhalf
op	102:24	0:0	2	=
water	102:26	0:0	2	blockx
op	102:32	0:0	2	/
water	102:33	0:0	2	2
decl	103:8	103:34	2	const int	yhalf
op	103:24	0:0	2	=
water	103:26	0:0	2	blocky
op	103:32	0:0	2	/
water	103:33	0:0	2	2
decl	104:8	104:54	2	const int	cmk_linesize
op	104:31	0:0	2	=
water	104:33	0:0	2	fm
op	104:35	0:0	2	->
water	104:37	0:0	2	cmask_linesize
op	104:51	0:0	2	[
water	104:52	0:0	2	0
op	104:53	0:0	2	]
decl	105:8	105:65	2	const uint8_t	*cmkp
op	105:31	0:0	2	=
water	105:33	0:0	2	fm
op	105:35	0:0	2	->
water	105:37	0:0	2	cmask_data
op	105:47	0:0	2	[
water	105:48	0:0	2	0
op	105:49	0:0	2	]
op	105:51	0:0	2	+
water	105:53	0:0	2	cmk_linesize
decl	106:8	106:37	2	const int	width
op	106:25	0:0	2	=
water	106:27	0:0	2	src
op	106:30	0:0	2	->
water	106:32	0:0	2	width
decl	107:8	107:38	2	const int	height
op	107:25	0:0	2	=
water	107:27	0:0	2	src
op	107:30	0:0	2	->
water	107:32	0:0	2	height
decl	108:8	108:54	2	const int	xblocks
op	108:26	0:0	2	=
water	108:28	0:0	2	(
water	108:29	0:0	2	(
water	108:30	0:0	2	width
op	108:35	0:0	2	+
water	108:36	0:0	2	xhalf
water	108:41	0:0	2	)
op	108:42	0:0	2	/
water	108:43	0:0	2	blockx
water	108:49	0:0	2	)
op	108:51	0:0	2	+
water	108:53	0:0	2	1
decl	109:8	109:39	2	const int	xblocks4
op	109:27	0:0	2	=
water	109:29	0:0	2	xblocks
op	109:36	0:0	2	<<
water	109:38	0:0	2	2
decl	110:8	110:55	2	const int	yblocks
op	110:26	0:0	2	=
water	110:28	0:0	2	(
water	110:29	0:0	2	(
water	110:30	0:0	2	height
op	110:36	0:0	2	+
water	110:37	0:0	2	yhalf
water	110:42	0:0	2	)
op	110:43	0:0	2	/
water	110:44	0:0	2	blocky
water	110:50	0:0	2	)
op	110:52	0:0	2	+
water	110:54	0:0	2	1
decl	111:8	111:34	2	int	*c_array
op	111:21	0:0	2	=
water	111:23	0:0	2	fm
op	111:25	0:0	2	->
water	111:27	0:0	2	c_array
decl	112:8	112:50	2	const int	arraysize
op	112:28	0:0	2	=
water	112:30	0:0	2	(
water	112:31	0:0	2	xblocks
op	112:38	0:0	2	*
water	112:39	0:0	2	yblocks
water	112:46	0:0	2	)
op	112:47	0:0	2	<<
water	112:49	0:0	2	2
decl	113:8	113:57	2	int	heighta
op	113:25	0:0	2	=
water	113:27	0:0	2	(
water	113:28	0:0	2	height
op	113:34	0:0	2	/
water	113:35	0:0	2	(
water	113:36	0:0	2	blocky
op	113:42	0:0	2	/
water	113:43	0:0	2	2
water	113:44	0:0	2	)
water	113:45	0:0	2	)
op	113:46	0:0	2	*
water	113:47	0:0	2	(
water	113:48	0:0	2	blocky
op	113:54	0:0	2	/
water	113:55	0:0	2	2
water	113:56	0:0	2	)
decl	114:8	114:57	2	const int	widtha
op	114:25	0:0	2	=
water	114:27	0:0	2	(
water	114:28	0:0	2	width
op	114:34	0:0	2	/
water	114:35	0:0	2	(
water	114:36	0:0	2	blockx
op	114:42	0:0	2	/
water	114:43	0:0	2	2
water	114:44	0:0	2	)
water	114:45	0:0	2	)
op	114:46	0:0	2	*
water	114:47	0:0	2	(
water	114:48	0:0	2	blockx
op	114:54	0:0	2	/
water	114:55	0:0	2	2
water	114:56	0:0	2	)
if	115:8	116:36	2	(heighta == height)
cond	115:12	115:23	3	heighta == height
water	115:12	0:0	4	heighta
op	115:20	0:0	4	==
water	115:23	0:0	4	height
stmts	116:12	116:36	3	
water	116:12	0:0	4	heighta
op	116:20	0:0	4	=
water	116:22	0:0	4	height
op	116:29	0:0	4	-
water	116:31	0:0	4	yhalf
water	116:36	0:0	4	;
call	117:8	117:55	2	memset
arg	117:15	117:22	3	c_array
water	117:15	0:0	4	c_array
arg	117:24	117:25	3	0
water	117:24	0:0	4	0
arg	117:27	117:55	3	arraysize*sizeof(*c_array)
water	117:27	0:0	4	arraysize
op	117:37	0:0	4	*
op	117:39	0:0	4	sizeof
water	117:45	0:0	4	(
op	117:46	0:0	4	*
water	117:47	0:0	4	c_array
water	117:54	0:0	4	)
water	117:56	0:0	2	;
decl	119:4	119:37	2	const int	box1
op	119:19	0:0	2	=
water	119:21	0:0	2	(
water	119:22	0:0	2	x
op	119:24	0:0	2	/
water	119:26	0:0	2	blockx
water	119:32	0:0	2	)
op	119:34	0:0	2	*
water	119:36	0:0	2	4
decl	120:4	120:47	2	const int	box2
op	120:19	0:0	2	=
water	120:21	0:0	2	(
water	120:22	0:0	2	(
water	120:23	0:0	2	x
op	120:25	0:0	2	+
water	120:27	0:0	2	xhalf
water	120:32	0:0	2	)
op	120:34	0:0	2	/
water	120:36	0:0	2	blockx
water	120:42	0:0	2	)
op	120:44	0:0	2	*
water	120:46	0:0	2	4
water	121:4	0:0	2	c_array
op	121:11	0:0	2	[
water	121:12	0:0	2	temp1
op	121:18	0:0	2	+
water	121:20	0:0	2	box1
op	121:28	0:0	2	]
op	121:30	0:0	2	+=
water	121:33	0:0	2	v
water	121:34	0:0	2	;
water	122:4	0:0	2	c_array
op	122:11	0:0	2	[
water	122:12	0:0	2	temp1
op	122:18	0:0	2	+
water	122:20	0:0	2	box2
op	122:25	0:0	2	+
water	122:27	0:0	2	1
op	122:28	0:0	2	]
op	122:30	0:0	2	+=
water	122:33	0:0	2	v
water	122:34	0:0	2	;
water	123:4	0:0	2	c_array
op	123:11	0:0	2	[
water	123:12	0:0	2	temp2
op	123:18	0:0	2	+
water	123:20	0:0	2	box1
op	123:25	0:0	2	+
water	123:27	0:0	2	2
op	123:28	0:0	2	]
op	123:30	0:0	2	+=
water	123:33	0:0	2	v
water	123:34	0:0	2	;
water	124:4	0:0	2	c_array
op	124:11	0:0	2	[
water	124:12	0:0	2	temp2
op	124:18	0:0	2	+
water	124:20	0:0	2	box2
op	124:25	0:0	2	+
water	124:27	0:0	2	3
op	124:28	0:0	2	]
op	124:30	0:0	2	+=
water	124:33	0:0	2	v
water	124:34	0:0	2	;
water	125:0	0:0	2	}
while	125:2	136:4	2	(0)
cond	125:9	125:9	3	0
water	125:9	0:0	4	0
stmts	127:4	136:4	3	
for	127:4	136:4	4	(y = y_start ;y < y_end;y ++)
forinit	127:9	127:20	5	y = y_start ;
water	127:9	0:0	6	y
op	127:11	0:0	6	=
water	127:13	0:0	6	y_start
water	127:20	0:0	6	;
cond	127:22	127:26	5	y < y_end
water	127:22	0:0	6	y
op	127:24	0:0	6	<
water	127:26	0:0	6	y_end
forexpr	127:33	127:34	5	y ++
water	127:33	0:0	6	y
op	127:34	0:0	6	++
stmts	127:38	136:4	5	
water	127:38	0:0	6	{
decl	128:8	128:49	6	const int	temp1
op	128:24	0:0	6	=
water	128:26	0:0	6	(
water	128:27	0:0	6	y
op	128:29	0:0	6	/
water	128:31	0:0	6	blocky
water	128:37	0:0	6	)
op	128:39	0:0	6	*
water	128:41	0:0	6	xblocks4
decl	129:8	129:59	6	const int	temp2
op	129:24	0:0	6	=
water	129:26	0:0	6	(
water	129:27	0:0	6	(
water	129:28	0:0	6	y
op	129:30	0:0	6	+
water	129:32	0:0	6	yhalf
water	129:37	0:0	6	)
op	129:39	0:0	6	/
water	129:41	0:0	6	blocky
water	129:47	0:0	6	)
op	129:49	0:0	6	*
water	129:51	0:0	6	xblocks4
for	130:8	134:30	6	(x = 0 ;x < width;x ++)
forinit	130:13	130:18	7	x = 0 ;
water	130:13	0:0	8	x
op	130:15	0:0	8	=
water	130:17	0:0	8	0
water	130:18	0:0	8	;
cond	130:20	130:24	7	x < width
water	130:20	0:0	8	x
op	130:22	0:0	8	<
water	130:24	0:0	8	width
forexpr	130:31	130:32	7	x ++
water	130:31	0:0	8	x
op	130:32	0:0	8	++
stmts	131:12	134:30	7	
if	131:12	134:30	8	(cmkp [ x - cmk_linesize ] == 0 xff && cmkp [ x ] == 0 xff && cmkp [ x + cmk_linesize ] == 0 xff)
cond	131:16	133:43	9	cmkp [ x - cmk_linesize ] == 0 xff && cmkp [ x ] == 0 xff && cmkp [ x + cmk_linesize ] == 0 xff
water	131:16	0:0	10	cmkp
op	131:20	0:0	10	[
water	131:21	0:0	10	x
op	131:23	0:0	10	-
water	131:25	0:0	10	cmk_linesize
op	131:37	0:0	10	]
op	131:39	0:0	10	==
water	131:42	0:0	10	0
water	131:43	0:0	10	xff
op	131:47	0:0	10	&&
water	132:16	0:0	10	cmkp
op	132:20	0:0	10	[
water	132:21	0:0	10	x
op	132:37	0:0	10	]
op	132:39	0:0	10	==
water	132:42	0:0	10	0
water	132:43	0:0	10	xff
op	132:47	0:0	10	&&
water	133:16	0:0	10	cmkp
op	133:20	0:0	10	[
water	133:21	0:0	10	x
op	133:23	0:0	10	+
water	133:25	0:0	10	cmk_linesize
op	133:37	0:0	10	]
op	133:39	0:0	10	==
water	133:42	0:0	10	0
water	133:43	0:0	10	xff
stmts	134:16	134:30	9	
call	134:16	134:29	10	C_ARRAY_ADD
arg	134:28	134:29	11	1
water	134:28	0:0	12	1
water	134:30	0:0	10	;
water	135:8	0:0	6	cmkp
op	135:13	0:0	6	+=
water	135:16	0:0	6	cmk_linesize
water	135:28	0:0	6	;
water	136:4	0:0	6	}
decl	140:12	140:53	0	const int	temp1
op	140:28	0:0	0	=
water	140:30	0:0	0	(
water	140:31	0:0	0	y
op	140:33	0:0	0	/
water	140:35	0:0	0	blocky
water	140:41	0:0	0	)
op	140:43	0:0	0	*
water	140:45	0:0	0	xblocks4
decl	141:12	141:63	0	const int	temp2
op	141:28	0:0	0	=
water	141:30	0:0	0	(
water	141:31	0:0	0	(
water	141:32	0:0	0	y
op	141:34	0:0	0	+
water	141:36	0:0	0	yhalf
water	141:41	0:0	0	)
op	141:43	0:0	0	/
water	141:45	0:0	0	blocky
water	141:51	0:0	0	)
op	141:53	0:0	0	*
water	141:55	0:0	0	xblocks4
decl	143:16	143:50	0	const uint8_t	*cmkp_tmp
op	143:40	0:0	0	=
water	143:42	0:0	0	cmkp
op	143:47	0:0	0	+
water	143:49	0:0	0	x
decl	144:16	144:33	0	int	u
water	144:21	0:0	0	,
decl	144:16	144:33	0	int	v
water	144:24	0:0	0	,
decl	144:16	144:33	0	int	sum
op	144:30	0:0	0	=
water	144:32	0:0	0	0
decl	157:16	157:50	0	const uint8_t	*cmkp_tmp
op	157:40	0:0	0	=
water	157:42	0:0	0	cmkp
op	157:47	0:0	0	+
water	157:49	0:0	0	x
decl	158:16	158:30	0	int	u
water	158:21	0:0	0	,
decl	158:16	158:30	0	int	sum
op	158:27	0:0	0	=
water	158:29	0:0	0	0
decl	169:20	169:40	0	cmk_linesize	*yhalf

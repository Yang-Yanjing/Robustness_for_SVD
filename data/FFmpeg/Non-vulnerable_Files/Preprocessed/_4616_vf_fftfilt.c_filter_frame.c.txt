func	1:0	34:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	33:40	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:51	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	inlink
op	4:34	0:0	2	->
water	4:36	0:0	2	dst
op	4:39	0:0	2	->
water	4:41	0:0	2	outputs
op	4:48	0:0	2	[
water	4:49	0:0	2	0
op	4:50	0:0	2	]
decl	5:4	5:34	2	const AVPixFmtDescriptor	*desc
decl	6:4	6:39	2	FFTFILTContext	*fftfilt
op	6:28	0:0	2	=
water	6:30	0:0	2	ctx
op	6:33	0:0	2	->
water	6:35	0:0	2	priv
decl	7:4	7:16	2	AVFrame	*out
decl	8:4	8:19	2	int	i
water	8:9	0:0	2	,
decl	8:4	8:19	2	int	j
water	8:12	0:0	2	,
decl	8:4	8:19	2	int	plane
water	9:4	0:0	2	out
op	9:8	0:0	2	=
call	9:10	9:59	2	ff_get_video_buffer
arg	9:30	9:37	3	outlink
water	9:30	0:0	4	outlink
arg	9:39	9:48	3	inlink->w
water	9:39	0:0	4	inlink
op	9:45	0:0	4	->
water	9:47	0:0	4	w
arg	9:50	9:59	3	inlink->h
water	9:50	0:0	4	inlink
op	9:56	0:0	4	->
water	9:58	0:0	4	h
water	9:60	0:0	2	;
if	10:4	11:30	2	(! out)
cond	10:8	10:9	3	! out
op	10:8	0:0	4	!
water	10:9	0:0	4	out
stmts	11:8	11:30	3	
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
call	12:4	12:31	2	av_frame_copy_props
arg	12:24	12:27	3	out
water	12:24	0:0	4	out
arg	12:29	12:31	3	in
water	12:29	0:0	4	in
water	12:32	0:0	2	;
water	13:4	0:0	2	desc
op	13:9	0:0	2	=
call	13:11	13:45	2	av_pix_fmt_desc_get
arg	13:31	13:45	3	inlink->format
water	13:31	0:0	4	inlink
op	13:37	0:0	4	->
water	13:39	0:0	4	format
water	13:46	0:0	2	;
for	14:4	31:4	2	(plane = 0 ;plane < desc -> nb_components;plane ++)
forinit	14:9	14:18	3	plane = 0 ;
water	14:9	0:0	4	plane
op	14:15	0:0	4	=
water	14:17	0:0	4	0
water	14:18	0:0	4	;
cond	14:20	14:34	3	plane < desc -> nb_components
water	14:20	0:0	4	plane
op	14:26	0:0	4	<
water	14:28	0:0	4	desc
op	14:32	0:0	4	->
water	14:34	0:0	4	nb_components
forexpr	14:49	14:54	3	plane ++
water	14:49	0:0	4	plane
op	14:54	0:0	4	++
stmts	14:58	31:4	3	
water	14:58	0:0	4	{
decl	15:8	15:25	4	int	w
op	15:14	0:0	4	=
water	15:16	0:0	4	inlink
op	15:22	0:0	4	->
water	15:24	0:0	4	w
decl	16:8	16:25	4	int	h
op	16:14	0:0	4	=
water	16:16	0:0	4	inlink
op	16:22	0:0	4	->
water	16:24	0:0	4	h
if	17:8	20:8	4	(plane == 1 || plane == 2)
cond	17:12	17:35	5	plane == 1 || plane == 2
water	17:12	0:0	6	plane
op	17:18	0:0	6	==
water	17:21	0:0	6	1
op	17:23	0:0	6	||
water	17:26	0:0	6	plane
op	17:32	0:0	6	==
water	17:35	0:0	6	2
stmts	17:38	20:8	5	
water	17:38	0:0	6	{
water	18:12	0:0	6	w
op	18:14	0:0	6	=
call	18:16	18:53	6	FF_CEIL_RSHIFT
arg	18:31	18:32	7	w
water	18:31	0:0	8	w
arg	18:34	18:53	7	desc->log2_chroma_w
water	18:34	0:0	8	desc
op	18:38	0:0	8	->
water	18:40	0:0	8	log2_chroma_w
water	18:54	0:0	6	;
water	19:12	0:0	6	h
op	19:14	0:0	6	=
call	19:16	19:53	6	FF_CEIL_RSHIFT
arg	19:31	19:32	7	h
water	19:31	0:0	8	h
arg	19:34	19:53	7	desc->log2_chroma_h
water	19:34	0:0	8	desc
op	19:38	0:0	8	->
water	19:40	0:0	8	log2_chroma_h
water	19:54	0:0	6	;
water	20:8	0:0	6	}
call	21:8	21:48	4	rdft_horizontal
arg	21:24	21:31	5	fftfilt
water	21:24	0:0	6	fftfilt
arg	21:33	21:35	5	in
water	21:33	0:0	6	in
arg	21:37	21:38	5	w
water	21:37	0:0	6	w
arg	21:40	21:41	5	h
water	21:40	0:0	6	h
arg	21:43	21:48	5	plane
water	21:43	0:0	6	plane
water	21:49	0:0	4	;
call	22:8	22:39	4	rdft_vertical
arg	22:22	22:29	5	fftfilt
water	22:22	0:0	6	fftfilt
arg	22:31	22:32	5	h
water	22:31	0:0	6	h
arg	22:34	22:39	5	plane
water	22:34	0:0	6	plane
water	22:40	0:0	4	;
for	24:8	27:75	4	(i = 0 ;i < fftfilt -> rdft_hlen [ plane ];i ++)
forinit	24:13	24:18	5	i = 0 ;
water	24:13	0:0	6	i
op	24:15	0:0	6	=
water	24:17	0:0	6	0
water	24:18	0:0	6	;
cond	24:20	24:48	5	i < fftfilt -> rdft_hlen [ plane ]
water	24:20	0:0	6	i
op	24:22	0:0	6	<
water	24:24	0:0	6	fftfilt
op	24:31	0:0	6	->
water	24:33	0:0	6	rdft_hlen
op	24:42	0:0	6	[
water	24:43	0:0	6	plane
op	24:48	0:0	6	]
forexpr	24:51	24:52	5	i ++
water	24:51	0:0	6	i
op	24:52	0:0	6	++
stmts	25:12	27:75	5	
for	25:12	27:75	6	(j = 0 ;j < fftfilt -> rdft_vlen [ plane ];j ++)
forinit	25:17	25:22	7	j = 0 ;
water	25:17	0:0	8	j
op	25:19	0:0	8	=
water	25:21	0:0	8	0
water	25:22	0:0	8	;
cond	25:24	25:52	7	j < fftfilt -> rdft_vlen [ plane ]
water	25:24	0:0	8	j
op	25:26	0:0	8	<
water	25:28	0:0	8	fftfilt
op	25:35	0:0	8	->
water	25:37	0:0	8	rdft_vlen
op	25:46	0:0	8	[
water	25:47	0:0	8	plane
op	25:52	0:0	8	]
forexpr	25:55	25:56	7	j ++
water	25:55	0:0	8	j
op	25:56	0:0	8	++
stmts	26:16	27:75	7	
water	26:16	0:0	8	fftfilt
op	26:23	0:0	8	->
water	26:25	0:0	8	rdft_vdata
op	26:35	0:0	8	[
water	26:36	0:0	8	plane
op	26:41	0:0	8	]
op	26:42	0:0	8	[
water	26:43	0:0	8	i
op	26:45	0:0	8	*
water	26:47	0:0	8	fftfilt
op	26:54	0:0	8	->
water	26:56	0:0	8	rdft_vlen
op	26:65	0:0	8	[
water	26:66	0:0	8	plane
op	26:71	0:0	8	]
op	26:73	0:0	8	+
water	26:75	0:0	8	j
op	26:76	0:0	8	]
op	26:78	0:0	8	*=
water	27:18	0:0	8	fftfilt
op	27:25	0:0	8	->
water	27:27	0:0	8	weight
op	27:33	0:0	8	[
water	27:34	0:0	8	plane
op	27:39	0:0	8	]
op	27:40	0:0	8	[
water	27:41	0:0	8	i
op	27:43	0:0	8	*
water	27:45	0:0	8	fftfilt
op	27:52	0:0	8	->
water	27:54	0:0	8	rdft_vlen
op	27:63	0:0	8	[
water	27:64	0:0	8	plane
op	27:69	0:0	8	]
op	27:71	0:0	8	+
water	27:73	0:0	8	j
op	27:74	0:0	8	]
water	27:75	0:0	8	;
water	28:8	0:0	4	fftfilt
op	28:15	0:0	4	->
water	28:17	0:0	4	rdft_vdata
op	28:27	0:0	4	[
water	28:28	0:0	4	plane
op	28:33	0:0	4	]
op	28:34	0:0	4	[
water	28:35	0:0	4	0
op	28:36	0:0	4	]
op	28:38	0:0	4	+=
water	28:41	0:0	4	fftfilt
op	28:48	0:0	4	->
water	28:50	0:0	4	rdft_hlen
op	28:59	0:0	4	[
water	28:60	0:0	4	plane
op	28:65	0:0	4	]
op	28:67	0:0	4	*
water	28:69	0:0	4	fftfilt
op	28:76	0:0	4	->
water	28:78	0:0	4	rdft_vlen
op	28:87	0:0	4	[
water	28:88	0:0	4	plane
op	28:93	0:0	4	]
op	28:95	0:0	4	*
water	28:97	0:0	4	fftfilt
op	28:104	0:0	4	->
water	28:106	0:0	4	dc
op	28:108	0:0	4	[
water	28:109	0:0	4	plane
op	28:114	0:0	4	]
water	28:115	0:0	4	;
call	29:8	29:40	4	irdft_vertical
arg	29:23	29:30	5	fftfilt
water	29:23	0:0	6	fftfilt
arg	29:32	29:33	5	h
water	29:32	0:0	6	h
arg	29:35	29:40	5	plane
water	29:35	0:0	6	plane
water	29:41	0:0	4	;
call	30:8	30:50	4	irdft_horizontal
arg	30:25	30:32	5	fftfilt
water	30:25	0:0	6	fftfilt
arg	30:34	30:37	5	out
water	30:34	0:0	6	out
arg	30:39	30:40	5	w
water	30:39	0:0	6	w
arg	30:42	30:43	5	h
water	30:42	0:0	6	h
arg	30:45	30:50	5	plane
water	30:45	0:0	6	plane
water	30:51	0:0	4	;
water	31:4	0:0	4	}
call	32:4	32:21	2	av_frame_free
arg	32:18	32:21	3	&in
op	32:18	0:0	4	&
water	32:19	0:0	4	in
water	32:22	0:0	2	;
return	33:4	33:40	2	ff_filter_frame(outlink,out)
call	33:11	33:39	3	ff_filter_frame
arg	33:27	33:34	4	outlink
water	33:27	0:0	5	outlink
arg	33:36	33:39	4	out
water	33:36	0:0	5	out

func	1:0	132:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	131:12	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:12	2	double	d
water	5:4	0:0	2	const
water	5:10	0:0	2	char
op	5:15	0:0	2	*
water	5:16	0:0	2	const
op	5:22	0:0	2	*
water	5:23	0:0	2	expr
water	5:27	0:0	2	;
water	6:4	0:0	2	static
water	6:11	0:0	2	const
water	6:17	0:0	2	char
op	6:22	0:0	2	*
water	6:23	0:0	2	const
water	6:29	0:0	2	exprs
op	6:34	0:0	2	[
op	6:35	0:0	2	]
op	6:37	0:0	2	=
water	6:39	0:0	2	{
water	7:8	0:0	2	""
water	7:10	0:0	2	,
water	8:8	0:0	2	"1;2"
water	8:13	0:0	2	,
water	9:8	0:0	2	"-20"
water	9:13	0:0	2	,
water	10:8	0:0	2	"-PI"
water	10:13	0:0	2	,
water	11:8	0:0	2	"+PI"
water	11:13	0:0	2	,
water	12:8	0:0	2	"1+(5-2)^(3-1)+1/2+sin(PI)-max(-2.2,-3.1)"
water	12:50	0:0	2	,
water	13:8	0:0	2	"80G/80Gi"
water	13:18	0:0	2	,
water	14:8	0:0	2	"1k"
water	14:12	0:0	2	,
water	15:8	0:0	2	"1Gi"
water	15:13	0:0	2	,
water	16:8	0:0	2	"1gi"
water	16:13	0:0	2	,
water	17:8	0:0	2	"1GiFoo"
water	17:16	0:0	2	,
water	18:8	0:0	2	"1k+1k"
water	18:15	0:0	2	,
water	19:8	0:0	2	"1Gi*3foo"
water	19:18	0:0	2	,
water	20:8	0:0	2	"foo"
water	20:13	0:0	2	,
water	21:8	0:0	2	"foo("
water	21:14	0:0	2	,
water	22:8	0:0	2	"foo()"
water	22:15	0:0	2	,
water	23:8	0:0	2	"foo)"
water	23:14	0:0	2	,
water	24:8	0:0	2	"sin"
water	24:13	0:0	2	,
water	25:8	0:0	2	"sin("
water	25:14	0:0	2	,
water	26:8	0:0	2	"sin()"
water	26:15	0:0	2	,
water	27:8	0:0	2	"sin)"
water	27:14	0:0	2	,
water	28:8	0:0	2	"sin 10"
water	28:16	0:0	2	,
water	29:8	0:0	2	"sin(1,2,3)"
water	29:20	0:0	2	,
water	30:8	0:0	2	"sin(1 )"
water	30:17	0:0	2	,
water	31:8	0:0	2	"1"
water	31:11	0:0	2	,
water	32:8	0:0	2	"1foo"
water	32:14	0:0	2	,
water	33:8	0:0	2	"bar + PI + E + 100f*2 + foo"
water	33:37	0:0	2	,
water	34:8	0:0	2	"13k + 12f - foo(1, 2)"
water	34:31	0:0	2	,
water	35:8	0:0	2	"1gi"
water	35:13	0:0	2	,
water	36:8	0:0	2	"1Gi"
water	36:13	0:0	2	,
water	37:8	0:0	2	"st(0, 123)"
water	37:20	0:0	2	,
water	38:8	0:0	2	"st(1, 123); ld(1)"
water	38:27	0:0	2	,
water	39:8	0:0	2	"lte(0, 1)"
water	39:19	0:0	2	,
water	40:8	0:0	2	"lte(1, 1)"
water	40:19	0:0	2	,
water	41:8	0:0	2	"lte(1, 0)"
water	41:19	0:0	2	,
water	42:8	0:0	2	"lt(0, 1)"
water	42:18	0:0	2	,
water	43:8	0:0	2	"lt(1, 1)"
water	43:18	0:0	2	,
water	44:8	0:0	2	"gt(1, 0)"
water	44:18	0:0	2	,
water	45:8	0:0	2	"gt(2, 7)"
water	45:18	0:0	2	,
water	46:8	0:0	2	"gte(122, 122)"
water	46:23	0:0	2	,
water	48:8	0:0	2	"st(0, 1); while(lte(ld(0), 100), st(1, ld(1)+ld(0));st(0, ld(0)+1)); ld(1)"
water	48:84	0:0	2	,
water	50:8	0:0	2	"st(1, 1); st(2, 2); st(0, 1); while(lte(ld(0),10), st(3, ld(1)+ld(2)); st(1, ld(2)); st(2, ld(3)); st(0, ld(0)+1)); ld(3)"
water	50:131	0:0	2	,
water	51:8	0:0	2	"while(0, 10)"
water	51:22	0:0	2	,
water	52:8	0:0	2	"st(0, 1); while(lte(ld(0),100), st(1, ld(1)+ld(0)); st(0, ld(0)+1))"
water	52:77	0:0	2	,
water	53:8	0:0	2	"isnan(1)"
water	53:18	0:0	2	,
water	54:8	0:0	2	"isnan(NAN)"
water	54:20	0:0	2	,
water	55:8	0:0	2	"isnan(INF)"
water	55:20	0:0	2	,
water	56:8	0:0	2	"isinf(1)"
water	56:18	0:0	2	,
water	57:8	0:0	2	"isinf(NAN)"
water	57:20	0:0	2	,
water	58:8	0:0	2	"isinf(INF)"
water	58:20	0:0	2	,
water	59:8	0:0	2	"floor(NAN)"
water	59:20	0:0	2	,
water	60:8	0:0	2	"floor(123.123)"
water	60:24	0:0	2	,
water	61:8	0:0	2	"floor(-123.123)"
water	61:25	0:0	2	,
water	62:8	0:0	2	"trunc(123.123)"
water	62:24	0:0	2	,
water	63:8	0:0	2	"trunc(-123.123)"
water	63:25	0:0	2	,
water	64:8	0:0	2	"ceil(123.123)"
water	64:23	0:0	2	,
water	65:8	0:0	2	"ceil(-123.123)"
water	65:24	0:0	2	,
water	66:8	0:0	2	"sqrt(1764)"
water	66:20	0:0	2	,
water	67:8	0:0	2	"isnan(sqrt(-1))"
water	67:25	0:0	2	,
water	68:8	0:0	2	"not(1)"
water	68:16	0:0	2	,
water	69:8	0:0	2	"not(NAN)"
water	69:18	0:0	2	,
water	70:8	0:0	2	"not(0)"
water	70:16	0:0	2	,
water	71:8	0:0	2	"6.0206dB"
water	71:18	0:0	2	,
water	72:8	0:0	2	"-3.0103dB"
water	72:19	0:0	2	,
water	73:8	0:0	2	"pow(0,1.23)"
water	73:21	0:0	2	,
water	74:8	0:0	2	"pow(PI,1.23)"
water	74:22	0:0	2	,
water	75:8	0:0	2	"PI^1.23"
water	75:17	0:0	2	,
water	76:8	0:0	2	"pow(-1,1.23)"
water	76:22	0:0	2	,
water	77:8	0:0	2	"if(1, 2)"
water	77:18	0:0	2	,
water	78:8	0:0	2	"if(1, 1, 2)"
water	78:21	0:0	2	,
water	79:8	0:0	2	"if(0, 1, 2)"
water	79:21	0:0	2	,
water	80:8	0:0	2	"ifnot(0, 23)"
water	80:22	0:0	2	,
water	81:8	0:0	2	"ifnot(1, NaN) + if(0, 1)"
water	81:34	0:0	2	,
water	82:8	0:0	2	"ifnot(1, 1, 2)"
water	82:24	0:0	2	,
water	83:8	0:0	2	"ifnot(0, 1, 2)"
water	83:24	0:0	2	,
water	84:8	0:0	2	"taylor(1, 1)"
water	84:22	0:0	2	,
water	85:8	0:0	2	"taylor(eq(mod(ld(1),4),1)-eq(mod(ld(1),4),3), PI/2, 1)"
water	85:64	0:0	2	,
water	86:8	0:0	2	"root(sin(ld(0))-1, 2)"
water	86:31	0:0	2	,
water	87:8	0:0	2	"root(sin(ld(0))+6+sin(ld(0)/12)-log(ld(0)), 100)"
water	87:58	0:0	2	,
water	88:8	0:0	2	"7000000B*random(0)"
water	88:28	0:0	2	,
water	89:8	0:0	2	"squish(2)"
water	89:19	0:0	2	,
water	90:8	0:0	2	"gauss(0.1)"
water	90:20	0:0	2	,
water	91:8	0:0	2	"hypot(4,3)"
water	91:20	0:0	2	,
water	92:8	0:0	2	"gcd(30,55)*print(min(9,1))"
water	92:36	0:0	2	,
water	93:8	0:0	2	"bitor(42, 12)"
water	93:23	0:0	2	,
water	94:8	0:0	2	"bitand(42, 12)"
water	94:24	0:0	2	,
water	95:8	0:0	2	"bitand(NAN, 1)"
water	95:24	0:0	2	,
water	96:8	0:0	2	"between(10, -3, 10)"
water	96:29	0:0	2	,
water	97:8	0:0	2	"between(-4, -2, -1)"
water	97:29	0:0	2	,
water	98:8	0:0	2	"between(1,2)"
water	98:22	0:0	2	,
water	99:8	0:0	2	"clip(0, 2, 1)"
water	99:23	0:0	2	,
water	100:8	0:0	2	"clip(0/0, 1, 2)"
water	100:25	0:0	2	,
water	101:8	0:0	2	"clip(0, 0/0, 1)"
water	101:25	0:0	2	,
water	102:8	0:0	2	NULL
water	103:4	0:0	2	}
water	103:5	0:0	2	;
for	104:4	113:4	2	(expr = exprs ;* expr;expr ++)
forinit	104:9	104:21	3	expr = exprs ;
water	104:9	0:0	4	expr
op	104:14	0:0	4	=
water	104:16	0:0	4	exprs
water	104:21	0:0	4	;
cond	104:23	104:24	3	* expr
op	104:23	0:0	4	*
water	104:24	0:0	4	expr
forexpr	104:30	104:34	3	expr ++
water	104:30	0:0	4	expr
op	104:34	0:0	4	++
stmts	104:38	113:4	3	
water	104:38	0:0	4	{
call	105:8	105:41	4	printf
arg	105:15	105:34	5	"Evaluating '%s'\n"
water	105:15	0:0	6	"Evaluating '%s'\n"
arg	105:36	105:41	5	*expr
op	105:36	0:0	6	*
water	105:37	0:0	6	expr
water	105:42	0:0	4	;
call	106:8	108:68	4	av_expr_parse_and_eval
arg	106:31	106:33	5	&d
op	106:31	0:0	6	&
water	106:32	0:0	6	d
arg	106:35	106:40	5	*expr
op	106:35	0:0	6	*
water	106:36	0:0	6	expr
arg	107:31	107:42	5	const_names
water	107:31	0:0	6	const_names
arg	107:44	107:56	5	const_values
water	107:44	0:0	6	const_values
arg	108:31	108:35	5	NULL
water	108:31	0:0	6	NULL
arg	108:37	108:41	5	NULL
water	108:37	0:0	6	NULL
arg	108:43	108:47	5	NULL
water	108:43	0:0	6	NULL
arg	108:49	108:53	5	NULL
water	108:49	0:0	6	NULL
arg	108:55	108:59	5	NULL
water	108:55	0:0	6	NULL
arg	108:61	108:62	5	0
water	108:61	0:0	6	0
arg	108:64	108:68	5	NULL
water	108:64	0:0	6	NULL
water	108:69	0:0	4	;
if	109:8	110:44	4	(isnan (d ))
cond	109:12	109:19	5	isnan (d )
call	109:12	109:19	6	isnan
arg	109:18	109:19	7	d
water	109:18	0:0	8	d
stmts	110:12	110:44	5	
call	110:12	110:43	6	printf
arg	110:19	110:36	7	"'%s' -> nan\n\n"
water	110:19	0:0	8	"'%s' -> nan\n\n"
arg	110:38	110:43	7	*expr
op	110:38	0:0	8	*
water	110:39	0:0	8	expr
water	110:44	0:0	6	;
else	111:8	112:46	4
stmts	112:12	112:46	5	
call	112:12	112:45	6	printf
arg	112:19	112:35	7	"'%s' -> %f\n\n"
water	112:19	0:0	8	"'%s' -> %f\n\n"
arg	112:37	112:42	7	*expr
op	112:37	0:0	8	*
water	112:38	0:0	8	expr
arg	112:44	112:45	7	d
water	112:44	0:0	8	d
water	112:46	0:0	6	;
water	113:4	0:0	4	}
call	114:4	116:64	2	av_expr_parse_and_eval
arg	114:27	114:29	3	&d
op	114:27	0:0	4	&
water	114:28	0:0	4	d
arg	114:31	114:73	3	"1+(5-2)^(3-1)+1/2+sin(PI)-max(-2.2,-3.1)"
water	114:31	0:0	4	"1+(5-2)^(3-1)+1/2+sin(PI)-max(-2.2,-3.1)"
arg	115:27	115:38	3	const_names
water	115:27	0:0	4	const_names
arg	115:40	115:52	3	const_values
water	115:40	0:0	4	const_values
arg	116:27	116:31	3	NULL
water	116:27	0:0	4	NULL
arg	116:33	116:37	3	NULL
water	116:33	0:0	4	NULL
arg	116:39	116:43	3	NULL
water	116:39	0:0	4	NULL
arg	116:45	116:49	3	NULL
water	116:45	0:0	4	NULL
arg	116:51	116:55	3	NULL
water	116:51	0:0	4	NULL
arg	116:57	116:58	3	0
water	116:57	0:0	4	0
arg	116:60	116:64	3	NULL
water	116:60	0:0	4	NULL
water	116:65	0:0	2	;
call	117:4	117:28	2	printf
arg	117:11	117:25	3	"%f == 12.7\n"
water	117:11	0:0	4	"%f == 12.7\n"
arg	117:27	117:28	3	d
water	117:27	0:0	4	d
water	117:29	0:0	2	;
call	118:4	120:64	2	av_expr_parse_and_eval
arg	118:27	118:29	3	&d
op	118:27	0:0	4	&
water	118:28	0:0	4	d
arg	118:31	118:41	3	"80G/80Gi"
water	118:31	0:0	4	"80G/80Gi"
arg	119:27	119:38	3	const_names
water	119:27	0:0	4	const_names
arg	119:40	119:52	3	const_values
water	119:40	0:0	4	const_values
arg	120:27	120:31	3	NULL
water	120:27	0:0	4	NULL
arg	120:33	120:37	3	NULL
water	120:33	0:0	4	NULL
arg	120:39	120:43	3	NULL
water	120:39	0:0	4	NULL
arg	120:45	120:49	3	NULL
water	120:45	0:0	4	NULL
arg	120:51	120:55	3	NULL
water	120:51	0:0	4	NULL
arg	120:57	120:58	3	0
water	120:57	0:0	4	0
arg	120:60	120:64	3	NULL
water	120:60	0:0	4	NULL
water	120:65	0:0	2	;
call	121:4	121:35	2	printf
arg	121:11	121:32	3	"%f == 0.931322575\n"
water	121:11	0:0	4	"%f == 0.931322575\n"
arg	121:34	121:35	3	d
water	121:34	0:0	4	d
water	121:36	0:0	2	;
if	122:4	130:4	2	(argc > 1 && !strcmp (argv [ 1 ] ,"-t" ))
cond	122:8	122:41	3	argc > 1 && !strcmp (argv [ 1 ] ,"-t" )
water	122:8	0:0	4	argc
op	122:13	0:0	4	>
water	122:15	0:0	4	1
op	122:17	0:0	4	&&
op	122:20	0:0	4	!
call	122:21	122:41	4	strcmp
arg	122:28	122:35	5	argv[1]
water	122:28	0:0	6	argv
op	122:32	0:0	6	[
water	122:33	0:0	6	1
op	122:34	0:0	6	]
arg	122:37	122:41	5	"-t"
water	122:37	0:0	6	"-t"
stmts	122:44	130:4	3	
water	122:44	0:0	4	{
for	123:8	129:8	4	(i = 0 ;i < 1050;i ++)
forinit	123:13	123:18	5	i = 0 ;
water	123:13	0:0	6	i
op	123:15	0:0	6	=
water	123:17	0:0	6	0
water	123:18	0:0	6	;
cond	123:20	123:24	5	i < 1050
water	123:20	0:0	6	i
op	123:22	0:0	6	<
water	123:24	0:0	6	1050
forexpr	123:30	123:31	5	i ++
water	123:30	0:0	6	i
op	123:31	0:0	6	++
stmts	123:35	129:8	5	
water	123:35	0:0	6	{
water	124:12	0:0	6	START_TIMER
water	124:23	0:0	6	;
call	125:12	127:72	6	av_expr_parse_and_eval
arg	125:35	125:37	7	&d
op	125:35	0:0	8	&
water	125:36	0:0	8	d
arg	125:39	125:81	7	"1+(5-2)^(3-1)+1/2+sin(PI)-max(-2.2,-3.1)"
water	125:39	0:0	8	"1+(5-2)^(3-1)+1/2+sin(PI)-max(-2.2,-3.1)"
arg	126:35	126:46	7	const_names
water	126:35	0:0	8	const_names
arg	126:48	126:60	7	const_values
water	126:48	0:0	8	const_values
arg	127:35	127:39	7	NULL
water	127:35	0:0	8	NULL
arg	127:41	127:45	7	NULL
water	127:41	0:0	8	NULL
arg	127:47	127:51	7	NULL
water	127:47	0:0	8	NULL
arg	127:53	127:57	7	NULL
water	127:53	0:0	8	NULL
arg	127:59	127:63	7	NULL
water	127:59	0:0	8	NULL
arg	127:65	127:66	7	0
water	127:65	0:0	8	0
arg	127:68	127:72	7	NULL
water	127:68	0:0	8	NULL
water	127:73	0:0	6	;
call	128:12	128:47	6	STOP_TIMER
arg	128:23	128:47	7	"av_expr_parse_and_eval"
water	128:23	0:0	8	"av_expr_parse_and_eval"
water	128:48	0:0	6	;
water	129:8	0:0	6	}
water	130:4	0:0	4	}
return	131:4	131:12	2	0
water	131:11	0:0	3	0

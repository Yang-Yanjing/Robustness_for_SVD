func	1:0	36:0	0	int	avpriv_set_systematic_pal2
params	1:30	0:0	1	
param	1:31	1:48	2	uint32_t	pal[256]
param	1:50	1:76	2	enum AVPixelFormat	pix_fmt
stmnts	0:0	35:12	1	
decl	3:4	3:9	2	int	i
for	4:4	34:4	2	(i = 0 ;i < 256;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:20	3	i < 256
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	256
forexpr	4:25	4:26	3	i ++
water	4:25	0:0	4	i
op	4:26	0:0	4	++
stmts	4:30	34:4	3	
water	4:30	0:0	4	{
decl	5:8	5:19	4	int	r
water	5:13	0:0	4	,
decl	5:8	5:19	4	int	g
water	5:16	0:0	4	,
decl	5:8	5:19	4	int	b
switch	6:8	32:8	4	(pix_fmt)
cond	6:16	6:16	5	pix_fmt
water	6:16	0:0	6	pix_fmt
stmts	6:25	32:8	5	
water	6:25	0:0	6	{
label	7:8	7:28	6	case AV_PIX_FMT_RGB8 :
water	8:12	0:0	6	r
op	8:14	0:0	6	=
water	8:16	0:0	6	(
water	8:17	0:0	6	i
op	8:18	0:0	6	>>
water	8:20	0:0	6	5
water	8:25	0:0	6	)
op	8:26	0:0	6	*
water	8:27	0:0	6	36
water	8:29	0:0	6	;
water	9:12	0:0	6	g
op	9:14	0:0	6	=
water	9:16	0:0	6	(
water	9:17	0:0	6	(
water	9:18	0:0	6	i
op	9:19	0:0	6	>>
water	9:21	0:0	6	2
water	9:22	0:0	6	)
op	9:23	0:0	6	&
water	9:24	0:0	6	7
water	9:25	0:0	6	)
op	9:26	0:0	6	*
water	9:27	0:0	6	36
water	9:29	0:0	6	;
water	10:12	0:0	6	b
op	10:14	0:0	6	=
water	10:16	0:0	6	(
water	10:17	0:0	6	i
op	10:18	0:0	6	&
water	10:19	0:0	6	3
water	10:25	0:0	6	)
op	10:26	0:0	6	*
water	10:27	0:0	6	85
water	10:29	0:0	6	;
break	11:12	11:17	6	
label	12:8	12:28	6	case AV_PIX_FMT_BGR8 :
water	13:12	0:0	6	b
op	13:14	0:0	6	=
water	13:16	0:0	6	(
water	13:17	0:0	6	i
op	13:18	0:0	6	>>
water	13:20	0:0	6	6
water	13:25	0:0	6	)
op	13:26	0:0	6	*
water	13:27	0:0	6	85
water	13:29	0:0	6	;
water	14:12	0:0	6	g
op	14:14	0:0	6	=
water	14:16	0:0	6	(
water	14:17	0:0	6	(
water	14:18	0:0	6	i
op	14:19	0:0	6	>>
water	14:21	0:0	6	3
water	14:22	0:0	6	)
op	14:23	0:0	6	&
water	14:24	0:0	6	7
water	14:25	0:0	6	)
op	14:26	0:0	6	*
water	14:27	0:0	6	36
water	14:29	0:0	6	;
water	15:12	0:0	6	r
op	15:14	0:0	6	=
water	15:16	0:0	6	(
water	15:17	0:0	6	i
op	15:18	0:0	6	&
water	15:19	0:0	6	7
water	15:25	0:0	6	)
op	15:26	0:0	6	*
water	15:27	0:0	6	36
water	15:29	0:0	6	;
break	16:12	16:17	6	
label	17:8	17:33	6	case AV_PIX_FMT_RGB4_BYTE :
water	18:12	0:0	6	r
op	18:14	0:0	6	=
water	18:16	0:0	6	(
water	18:17	0:0	6	i
op	18:18	0:0	6	>>
water	18:20	0:0	6	3
water	18:25	0:0	6	)
op	18:26	0:0	6	*
water	18:27	0:0	6	255
water	18:30	0:0	6	;
water	19:12	0:0	6	g
op	19:14	0:0	6	=
water	19:16	0:0	6	(
water	19:17	0:0	6	(
water	19:18	0:0	6	i
op	19:19	0:0	6	>>
water	19:21	0:0	6	1
water	19:22	0:0	6	)
op	19:23	0:0	6	&
water	19:24	0:0	6	3
water	19:25	0:0	6	)
op	19:26	0:0	6	*
water	19:27	0:0	6	85
water	19:29	0:0	6	;
water	20:12	0:0	6	b
op	20:14	0:0	6	=
water	20:16	0:0	6	(
water	20:17	0:0	6	i
op	20:18	0:0	6	&
water	20:19	0:0	6	1
water	20:25	0:0	6	)
op	20:26	0:0	6	*
water	20:27	0:0	6	255
water	20:30	0:0	6	;
break	21:12	21:17	6	
label	22:8	22:33	6	case AV_PIX_FMT_BGR4_BYTE :
water	23:12	0:0	6	b
op	23:14	0:0	6	=
water	23:16	0:0	6	(
water	23:17	0:0	6	i
op	23:18	0:0	6	>>
water	23:20	0:0	6	3
water	23:25	0:0	6	)
op	23:26	0:0	6	*
water	23:27	0:0	6	255
water	23:30	0:0	6	;
water	24:12	0:0	6	g
op	24:14	0:0	6	=
water	24:16	0:0	6	(
water	24:17	0:0	6	(
water	24:18	0:0	6	i
op	24:19	0:0	6	>>
water	24:21	0:0	6	1
water	24:22	0:0	6	)
op	24:23	0:0	6	&
water	24:24	0:0	6	3
water	24:25	0:0	6	)
op	24:26	0:0	6	*
water	24:27	0:0	6	85
water	24:29	0:0	6	;
water	25:12	0:0	6	r
op	25:14	0:0	6	=
water	25:16	0:0	6	(
water	25:17	0:0	6	i
op	25:18	0:0	6	&
water	25:19	0:0	6	1
water	25:25	0:0	6	)
op	25:26	0:0	6	*
water	25:27	0:0	6	255
water	25:30	0:0	6	;
break	26:12	26:17	6	
label	27:8	27:29	6	case AV_PIX_FMT_GRAY8 :
water	28:12	0:0	6	r
op	28:14	0:0	6	=
water	28:16	0:0	6	b
op	28:18	0:0	6	=
water	28:20	0:0	6	g
op	28:22	0:0	6	=
water	28:24	0:0	6	i
water	28:25	0:0	6	;
break	29:12	29:17	6	
label	30:8	30:15	6	default :
return	31:12	31:34	6	AVERROR(EINVAL)
call	31:19	31:33	7	AVERROR
arg	31:27	31:33	8	EINVAL
water	31:27	0:0	9	EINVAL
water	32:8	0:0	6	}
water	33:8	0:0	4	pal
op	33:11	0:0	4	[
water	33:12	0:0	4	i
op	33:13	0:0	4	]
op	33:15	0:0	4	=
water	33:17	0:0	4	b
op	33:19	0:0	4	+
water	33:21	0:0	4	(
water	33:22	0:0	4	g
op	33:24	0:0	4	<<
water	33:27	0:0	4	8
water	33:28	0:0	4	)
op	33:30	0:0	4	+
water	33:32	0:0	4	(
water	33:33	0:0	4	r
op	33:35	0:0	4	<<
water	33:38	0:0	4	16
water	33:40	0:0	4	)
op	33:42	0:0	4	+
water	33:44	0:0	4	(
water	33:45	0:0	4	0
water	33:46	0:0	4	xFFU
op	33:51	0:0	4	<<
water	33:54	0:0	4	24
water	33:56	0:0	4	)
water	33:57	0:0	4	;
water	34:4	0:0	4	}
return	35:4	35:12	2	0
water	35:11	0:0	3	0

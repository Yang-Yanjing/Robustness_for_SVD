func	1:0	62:0	0	static void	imdct_and_windowing_eld
params	1:35	0:0	1	
param	1:36	1:50	2	AACContext *	ac
param	1:52	1:77	2	SingleChannelElement *	sce
stmnts	0:0	61:53	1	
decl	3:4	3:33	2	INTFLOAT	*in
op	3:20	0:0	2	=
water	3:22	0:0	2	sce
op	3:25	0:0	2	->
water	3:27	0:0	2	coeffs
decl	4:4	4:30	2	INTFLOAT	*out
op	4:20	0:0	2	=
water	4:22	0:0	2	sce
op	4:25	0:0	2	->
water	4:27	0:0	2	ret
decl	5:4	5:32	2	INTFLOAT	*saved
op	5:20	0:0	2	=
water	5:22	0:0	2	sce
op	5:25	0:0	2	->
water	5:27	0:0	2	saved
decl	6:4	6:33	2	INTFLOAT	*buf
op	6:19	0:0	2	=
water	6:21	0:0	2	ac
op	6:23	0:0	2	->
water	6:25	0:0	2	buf_mdct
decl	7:4	7:9	2	int	i
decl	8:4	8:64	2	const int	n
op	8:17	0:0	2	=
water	8:19	0:0	2	ac
op	8:21	0:0	2	->
water	8:23	0:0	2	oc
op	8:25	0:0	2	[
water	8:26	0:0	2	1
op	8:27	0:0	2	]
op	8:28	0:0	2	.
water	8:29	0:0	2	m4ac
op	8:33	0:0	2	.
water	8:34	0:0	2	frame_length_short
water	8:53	0:0	2	?
water	8:55	0:0	2	480
water	8:59	0:0	2	:
water	8:61	0:0	2	512
decl	9:4	9:25	2	const int	n2
op	9:17	0:0	2	=
water	9:19	0:0	2	n
op	9:21	0:0	2	>>
water	9:24	0:0	2	1
decl	10:4	10:25	2	const int	n4
op	10:17	0:0	2	=
water	10:19	0:0	2	n
op	10:21	0:0	2	>>
water	10:24	0:0	2	2
water	11:4	0:0	2	const
water	11:10	0:0	2	INTFLOAT
op	11:19	0:0	2	*
water	11:20	0:0	2	const
water	11:26	0:0	2	window
op	11:33	0:0	2	=
water	11:35	0:0	2	n
op	11:37	0:0	2	==
water	11:40	0:0	2	480
water	11:44	0:0	2	?
call	11:46	11:78	2	AAC_RENAME
arg	11:57	11:78	3	ff_aac_eld_window_480
water	11:57	0:0	4	ff_aac_eld_window_480
water	11:80	0:0	2	:
call	12:43	12:75	2	AAC_RENAME
arg	12:54	12:75	3	ff_aac_eld_window_512
water	12:54	0:0	4	ff_aac_eld_window_512
water	12:76	0:0	2	;
for	18:4	22:4	2	(i = 0 ;i < n2;i += 2)
forinit	18:9	18:14	3	i = 0 ;
water	18:9	0:0	4	i
op	18:11	0:0	4	=
water	18:13	0:0	4	0
water	18:14	0:0	4	;
cond	18:16	18:20	3	i < n2
water	18:16	0:0	4	i
op	18:18	0:0	4	<
water	18:20	0:0	4	n2
forexpr	18:24	18:27	3	i += 2
water	18:24	0:0	4	i
op	18:25	0:0	4	+=
water	18:27	0:0	4	2
stmts	18:30	22:4	3	
water	18:30	0:0	4	{
decl	19:8	19:21	4	INTFLOAT	temp
water	20:8	0:0	4	temp
op	20:13	0:0	4	=
water	20:16	0:0	4	in
op	20:18	0:0	4	[
water	20:19	0:0	4	i
op	20:24	0:0	4	]
water	20:25	0:0	4	;
water	20:27	0:0	4	in
op	20:29	0:0	4	[
water	20:30	0:0	4	i
op	20:35	0:0	4	]
op	20:37	0:0	4	=
op	20:39	0:0	4	-
water	20:40	0:0	4	in
op	20:42	0:0	4	[
water	20:43	0:0	4	n
op	20:45	0:0	4	-
water	20:47	0:0	4	1
op	20:49	0:0	4	-
water	20:51	0:0	4	i
op	20:52	0:0	4	]
water	20:53	0:0	4	;
water	20:55	0:0	4	in
op	20:57	0:0	4	[
water	20:58	0:0	4	n
op	20:60	0:0	4	-
water	20:62	0:0	4	1
op	20:64	0:0	4	-
water	20:66	0:0	4	i
op	20:67	0:0	4	]
op	20:69	0:0	4	=
water	20:71	0:0	4	temp
water	20:75	0:0	4	;
water	21:8	0:0	4	temp
op	21:13	0:0	4	=
op	21:15	0:0	4	-
water	21:16	0:0	4	in
op	21:18	0:0	4	[
water	21:19	0:0	4	i
op	21:21	0:0	4	+
water	21:23	0:0	4	1
op	21:24	0:0	4	]
water	21:25	0:0	4	;
water	21:27	0:0	4	in
op	21:29	0:0	4	[
water	21:30	0:0	4	i
op	21:32	0:0	4	+
water	21:34	0:0	4	1
op	21:35	0:0	4	]
op	21:37	0:0	4	=
water	21:40	0:0	4	in
op	21:42	0:0	4	[
water	21:43	0:0	4	n
op	21:45	0:0	4	-
water	21:47	0:0	4	2
op	21:49	0:0	4	-
water	21:51	0:0	4	i
op	21:52	0:0	4	]
water	21:53	0:0	4	;
water	21:55	0:0	4	in
op	21:57	0:0	4	[
water	21:58	0:0	4	n
op	21:60	0:0	4	-
water	21:62	0:0	4	2
op	21:64	0:0	4	-
water	21:66	0:0	4	i
op	21:67	0:0	4	]
op	21:69	0:0	4	=
water	21:71	0:0	4	temp
water	21:75	0:0	4	;
water	22:4	0:0	4	}
if	24:4	25:76	2	(n == 480)
cond	24:8	24:13	3	n == 480
water	24:8	0:0	4	n
op	24:10	0:0	4	==
water	24:13	0:0	4	480
stmts	25:8	25:76	3	
call	25:8	25:75	4	ac->mdct480->imdct_half
arg	25:32	25:43	5	ac->mdct480
water	25:32	0:0	6	ac
op	25:34	0:0	6	->
water	25:36	0:0	6	mdct480
arg	25:45	25:48	5	buf
water	25:45	0:0	6	buf
arg	25:50	25:52	5	in
water	25:50	0:0	6	in
arg	25:54	25:55	5	1
water	25:54	0:0	6	1
arg	25:57	25:75	5	-1.f/(16*1024*960)
op	25:57	0:0	6	-
water	25:58	0:0	6	1
op	25:59	0:0	6	.
water	25:60	0:0	6	f
op	25:61	0:0	6	/
water	25:62	0:0	6	(
water	25:63	0:0	6	16
op	25:65	0:0	6	*
water	25:66	0:0	6	1024
op	25:70	0:0	6	*
water	25:71	0:0	6	960
water	25:74	0:0	6	)
water	25:76	0:0	4	;
else	26:4	28:50	2
stmts	28:8	28:50	3	
call	28:8	28:49	4	ac->mdct.imdct_half
arg	28:28	28:40	5	&ac->mdct_ld
op	28:28	0:0	6	&
water	28:29	0:0	6	ac
op	28:31	0:0	6	->
water	28:33	0:0	6	mdct_ld
arg	28:42	28:45	5	buf
water	28:42	0:0	6	buf
arg	28:47	28:49	5	in
water	28:47	0:0	6	in
water	28:50	0:0	4	;
for	30:4	31:32	2	(i = 0 ;i < 1024;i ++)
forinit	30:9	30:14	3	i = 0 ;
water	30:9	0:0	4	i
op	30:11	0:0	4	=
water	30:13	0:0	4	0
water	30:14	0:0	4	;
cond	30:16	30:20	3	i < 1024
water	30:16	0:0	4	i
op	30:18	0:0	4	<
water	30:20	0:0	4	1024
forexpr	30:26	30:27	3	i ++
water	30:26	0:0	4	i
op	30:27	0:0	4	++
stmts	31:6	31:32	3	
water	31:6	0:0	4	buf
op	31:9	0:0	4	[
water	31:10	0:0	4	i
op	31:11	0:0	4	]
op	31:13	0:0	4	=
water	31:15	0:0	4	(
water	31:16	0:0	4	buf
op	31:19	0:0	4	[
water	31:20	0:0	4	i
op	31:21	0:0	4	]
op	31:23	0:0	4	+
water	31:25	0:0	4	1
water	31:26	0:0	4	)
op	31:28	0:0	4	>>
water	31:31	0:0	4	1
water	31:32	0:0	4	;
for	33:4	35:4	2	(i = 0 ;i < n;i += 2)
forinit	33:9	33:14	3	i = 0 ;
water	33:9	0:0	4	i
op	33:11	0:0	4	=
water	33:13	0:0	4	0
water	33:14	0:0	4	;
cond	33:16	33:20	3	i < n
water	33:16	0:0	4	i
op	33:18	0:0	4	<
water	33:20	0:0	4	n
forexpr	33:23	33:26	3	i += 2
water	33:23	0:0	4	i
op	33:24	0:0	4	+=
water	33:26	0:0	4	2
stmts	33:29	35:4	3	
water	33:29	0:0	4	{
water	34:8	0:0	4	buf
op	34:11	0:0	4	[
water	34:12	0:0	4	i
op	34:13	0:0	4	]
op	34:15	0:0	4	=
op	34:17	0:0	4	-
water	34:18	0:0	4	buf
op	34:21	0:0	4	[
water	34:22	0:0	4	i
op	34:23	0:0	4	]
water	34:24	0:0	4	;
water	35:4	0:0	4	}
for	42:4	47:4	2	(i = n4 ;i < n2;i ++)
forinit	42:9	42:15	3	i = n4 ;
water	42:9	0:0	4	i
op	42:11	0:0	4	=
water	42:13	0:0	4	n4
water	42:15	0:0	4	;
cond	42:17	42:21	3	i < n2
water	42:17	0:0	4	i
op	42:19	0:0	4	<
water	42:21	0:0	4	n2
forexpr	42:25	42:27	3	i ++
water	42:25	0:0	4	i
op	42:27	0:0	4	++
stmts	42:31	47:4	3	
water	42:31	0:0	4	{
water	43:8	0:0	4	out
op	43:11	0:0	4	[
water	43:12	0:0	4	i
op	43:14	0:0	4	-
water	43:16	0:0	4	n4
op	43:18	0:0	4	]
op	43:20	0:0	4	=
call	43:22	43:77	4	AAC_MUL31
arg	43:35	43:55	5	buf[n2-1-i]
water	43:35	0:0	6	buf
op	43:38	0:0	6	[
water	43:43	0:0	6	n2
op	43:46	0:0	6	-
water	43:48	0:0	6	1
op	43:50	0:0	6	-
water	43:52	0:0	6	i
op	43:53	0:0	6	]
arg	43:57	43:77	5	window[i-n4]
water	43:57	0:0	6	window
op	43:63	0:0	6	[
water	43:64	0:0	6	i
op	43:72	0:0	6	-
water	43:74	0:0	6	n4
op	43:76	0:0	6	]
op	43:79	0:0	4	+
call	44:22	44:77	4	AAC_MUL31
arg	44:33	44:55	5	saved[i+n2]
water	44:33	0:0	6	saved
op	44:38	0:0	6	[
water	44:47	0:0	6	i
op	44:49	0:0	6	+
water	44:51	0:0	6	n2
op	44:53	0:0	6	]
arg	44:57	44:77	5	window[i+n-n4]
water	44:57	0:0	6	window
op	44:63	0:0	6	[
water	44:64	0:0	6	i
op	44:66	0:0	6	+
water	44:70	0:0	6	n
op	44:72	0:0	6	-
water	44:74	0:0	6	n4
op	44:76	0:0	6	]
op	44:79	0:0	4	+
call	45:22	45:77	4	AAC_MUL31
arg	45:32	45:55	5	-saved[n+n2-1-i]
op	45:32	0:0	6	-
water	45:33	0:0	6	saved
op	45:38	0:0	6	[
water	45:39	0:0	6	n
op	45:41	0:0	6	+
water	45:43	0:0	6	n2
op	45:46	0:0	6	-
water	45:48	0:0	6	1
op	45:50	0:0	6	-
water	45:52	0:0	6	i
op	45:53	0:0	6	]
arg	45:57	45:77	5	window[i+2*n-n4]
water	45:57	0:0	6	window
op	45:63	0:0	6	[
water	45:64	0:0	6	i
op	45:66	0:0	6	+
water	45:68	0:0	6	2
op	45:69	0:0	6	*
water	45:70	0:0	6	n
op	45:72	0:0	6	-
water	45:74	0:0	6	n4
op	45:76	0:0	6	]
op	45:79	0:0	4	+
call	46:22	46:77	4	AAC_MUL31
arg	46:32	46:55	5	-saved[2*n+n2+i]
op	46:32	0:0	6	-
water	46:33	0:0	6	saved
op	46:38	0:0	6	[
water	46:41	0:0	6	2
op	46:42	0:0	6	*
water	46:43	0:0	6	n
op	46:45	0:0	6	+
water	46:47	0:0	6	n2
op	46:50	0:0	6	+
water	46:52	0:0	6	i
op	46:53	0:0	6	]
arg	46:57	46:77	5	window[i+3*n-n4]
water	46:57	0:0	6	window
op	46:63	0:0	6	[
water	46:64	0:0	6	i
op	46:66	0:0	6	+
water	46:68	0:0	6	3
op	46:69	0:0	6	*
water	46:70	0:0	6	n
op	46:72	0:0	6	-
water	46:74	0:0	6	n4
op	46:76	0:0	6	]
water	46:78	0:0	4	;
water	47:4	0:0	4	}
for	48:4	53:4	2	(i = 0 ;i < n2;i ++)
forinit	48:9	48:14	3	i = 0 ;
water	48:9	0:0	4	i
op	48:11	0:0	4	=
water	48:13	0:0	4	0
water	48:14	0:0	4	;
cond	48:16	48:20	3	i < n2
water	48:16	0:0	4	i
op	48:18	0:0	4	<
water	48:20	0:0	4	n2
forexpr	48:24	48:26	3	i ++
water	48:24	0:0	4	i
op	48:26	0:0	4	++
stmts	48:30	53:4	3	
water	48:30	0:0	4	{
water	49:8	0:0	4	out
op	49:11	0:0	4	[
water	49:12	0:0	4	n4
op	49:15	0:0	4	+
water	49:17	0:0	4	i
op	49:18	0:0	4	]
op	49:20	0:0	4	=
call	49:22	49:83	4	AAC_MUL31
arg	49:35	49:56	5	buf[i]
water	49:35	0:0	6	buf
op	49:38	0:0	6	[
water	49:53	0:0	6	i
op	49:54	0:0	6	]
arg	49:58	49:83	5	window[i+n2-n4]
water	49:58	0:0	6	window
op	49:64	0:0	6	[
water	49:65	0:0	6	i
op	49:67	0:0	6	+
water	49:69	0:0	6	n2
op	49:78	0:0	6	-
water	49:80	0:0	6	n4
op	49:82	0:0	6	]
op	49:85	0:0	4	+
call	50:22	50:83	4	AAC_MUL31
arg	50:32	50:56	5	-saved[n-1-i]
op	50:32	0:0	6	-
water	50:33	0:0	6	saved
op	50:38	0:0	6	[
water	50:45	0:0	6	n
op	50:47	0:0	6	-
water	50:49	0:0	6	1
op	50:51	0:0	6	-
water	50:53	0:0	6	i
op	50:54	0:0	6	]
arg	50:58	50:83	5	window[i+n2+n-n4]
water	50:58	0:0	6	window
op	50:64	0:0	6	[
water	50:65	0:0	6	i
op	50:67	0:0	6	+
water	50:69	0:0	6	n2
op	50:72	0:0	6	+
water	50:76	0:0	6	n
op	50:78	0:0	6	-
water	50:80	0:0	6	n4
op	50:82	0:0	6	]
op	50:85	0:0	4	+
call	51:22	51:83	4	AAC_MUL31
arg	51:32	51:56	5	-saved[n+i]
op	51:32	0:0	6	-
water	51:33	0:0	6	saved
op	51:38	0:0	6	[
water	51:49	0:0	6	n
op	51:51	0:0	6	+
water	51:53	0:0	6	i
op	51:54	0:0	6	]
arg	51:58	51:83	5	window[i+n2+2*n-n4]
water	51:58	0:0	6	window
op	51:64	0:0	6	[
water	51:65	0:0	6	i
op	51:67	0:0	6	+
water	51:69	0:0	6	n2
op	51:72	0:0	6	+
water	51:74	0:0	6	2
op	51:75	0:0	6	*
water	51:76	0:0	6	n
op	51:78	0:0	6	-
water	51:80	0:0	6	n4
op	51:82	0:0	6	]
op	51:85	0:0	4	+
call	52:22	52:83	4	AAC_MUL31
arg	52:33	52:56	5	saved[2*n+n-1-i]
water	52:33	0:0	6	saved
op	52:38	0:0	6	[
water	52:39	0:0	6	2
op	52:40	0:0	6	*
water	52:41	0:0	6	n
op	52:43	0:0	6	+
water	52:45	0:0	6	n
op	52:47	0:0	6	-
water	52:49	0:0	6	1
op	52:51	0:0	6	-
water	52:53	0:0	6	i
op	52:54	0:0	6	]
arg	52:58	52:83	5	window[i+n2+3*n-n4]
water	52:58	0:0	6	window
op	52:64	0:0	6	[
water	52:65	0:0	6	i
op	52:67	0:0	6	+
water	52:69	0:0	6	n2
op	52:72	0:0	6	+
water	52:74	0:0	6	3
op	52:75	0:0	6	*
water	52:76	0:0	6	n
op	52:78	0:0	6	-
water	52:80	0:0	6	n4
op	52:82	0:0	6	]
water	52:84	0:0	4	;
water	53:4	0:0	4	}
for	54:4	58:4	2	(i = 0 ;i < n4;i ++)
forinit	54:9	54:14	3	i = 0 ;
water	54:9	0:0	4	i
op	54:11	0:0	4	=
water	54:13	0:0	4	0
water	54:14	0:0	4	;
cond	54:16	54:20	3	i < n4
water	54:16	0:0	4	i
op	54:18	0:0	4	<
water	54:20	0:0	4	n4
forexpr	54:24	54:26	3	i ++
water	54:24	0:0	4	i
op	54:26	0:0	4	++
stmts	54:30	58:4	3	
water	54:30	0:0	4	{
water	55:8	0:0	4	out
op	55:11	0:0	4	[
water	55:12	0:0	4	n2
op	55:15	0:0	4	+
water	55:17	0:0	4	n4
op	55:20	0:0	4	+
water	55:22	0:0	4	i
op	55:23	0:0	4	]
op	55:25	0:0	4	=
call	55:27	55:78	4	AAC_MUL31
arg	55:40	55:56	5	buf[i+n2]
water	55:40	0:0	6	buf
op	55:43	0:0	6	[
water	55:48	0:0	6	i
op	55:50	0:0	6	+
water	55:52	0:0	6	n2
op	55:54	0:0	6	]
arg	55:58	55:78	5	window[i+n-n4]
water	55:58	0:0	6	window
op	55:64	0:0	6	[
water	55:65	0:0	6	i
op	55:67	0:0	6	+
water	55:71	0:0	6	n
op	55:73	0:0	6	-
water	55:75	0:0	6	n4
op	55:77	0:0	6	]
op	55:80	0:0	4	+
call	56:27	56:78	4	AAC_MUL31
arg	56:37	56:56	5	-saved[n2-1-i]
op	56:37	0:0	6	-
water	56:38	0:0	6	saved
op	56:43	0:0	6	[
water	56:44	0:0	6	n2
op	56:47	0:0	6	-
water	56:49	0:0	6	1
op	56:51	0:0	6	-
water	56:53	0:0	6	i
op	56:54	0:0	6	]
arg	56:58	56:78	5	window[i+2*n-n4]
water	56:58	0:0	6	window
op	56:64	0:0	6	[
water	56:65	0:0	6	i
op	56:67	0:0	6	+
water	56:69	0:0	6	2
op	56:70	0:0	6	*
water	56:71	0:0	6	n
op	56:73	0:0	6	-
water	56:75	0:0	6	n4
op	56:77	0:0	6	]
op	56:80	0:0	4	+
call	57:27	57:78	4	AAC_MUL31
arg	57:37	57:56	5	-saved[n+n2+i]
op	57:37	0:0	6	-
water	57:38	0:0	6	saved
op	57:43	0:0	6	[
water	57:44	0:0	6	n
op	57:46	0:0	6	+
water	57:48	0:0	6	n2
op	57:51	0:0	6	+
water	57:53	0:0	6	i
op	57:54	0:0	6	]
arg	57:58	57:78	5	window[i+3*n-n4]
water	57:58	0:0	6	window
op	57:64	0:0	6	[
water	57:65	0:0	6	i
op	57:67	0:0	6	+
water	57:69	0:0	6	3
op	57:70	0:0	6	*
water	57:71	0:0	6	n
op	57:73	0:0	6	-
water	57:75	0:0	6	n4
op	57:77	0:0	6	]
water	57:79	0:0	4	;
water	58:4	0:0	4	}
call	60:4	60:52	2	memmove
arg	60:12	60:21	3	saved+n
water	60:12	0:0	4	saved
op	60:18	0:0	4	+
water	60:20	0:0	4	n
arg	60:23	60:28	3	saved
water	60:23	0:0	4	saved
arg	60:30	60:52	3	2*n*sizeof(*saved)
water	60:30	0:0	4	2
op	60:32	0:0	4	*
water	60:34	0:0	4	n
op	60:36	0:0	4	*
op	60:38	0:0	4	sizeof
water	60:44	0:0	4	(
op	60:45	0:0	4	*
water	60:46	0:0	4	saved
water	60:51	0:0	4	)
water	60:53	0:0	2	;
call	61:4	61:52	2	memcpy
arg	61:12	61:17	3	saved
water	61:12	0:0	4	saved
arg	61:25	61:28	3	buf
water	61:25	0:0	4	buf
arg	61:34	61:52	3	n*sizeof(*saved)
water	61:34	0:0	4	n
op	61:36	0:0	4	*
op	61:38	0:0	4	sizeof
water	61:44	0:0	4	(
op	61:45	0:0	4	*
water	61:46	0:0	4	saved
water	61:51	0:0	4	)
water	61:53	0:0	2	;

func	1:0	59:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:42	2	AVFilterLink *	link
param	1:44	1:55	2	AVFrame *	in
stmnts	0:0	58:40	1	
decl	3:4	3:36	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	link
op	3:31	0:0	2	->
water	3:33	0:0	2	dst
decl	4:4	4:41	2	ColorMatrixContext	*color
op	4:30	0:0	2	=
water	4:32	0:0	2	ctx
op	4:35	0:0	2	->
water	4:37	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:16	2	AVFrame	*out
decl	7:4	7:23	2	ThreadData	td
op	7:18	0:0	2	=
water	7:20	0:0	2	{
water	7:21	0:0	2	0
water	7:22	0:0	2	}
water	8:4	0:0	2	out
op	8:8	0:0	2	=
call	8:10	8:61	2	ff_get_video_buffer
arg	8:30	8:37	3	outlink
water	8:30	0:0	4	outlink
arg	8:39	8:49	3	outlink->w
water	8:39	0:0	4	outlink
op	8:46	0:0	4	->
water	8:48	0:0	4	w
arg	8:51	8:61	3	outlink->h
water	8:51	0:0	4	outlink
op	8:58	0:0	4	->
water	8:60	0:0	4	h
water	8:62	0:0	2	;
if	9:4	12:4	2	(! out)
cond	9:8	9:9	3	! out
op	9:8	0:0	4	!
water	9:9	0:0	4	out
stmts	9:14	12:4	3	
water	9:14	0:0	4	{
call	10:8	10:25	4	av_frame_free
arg	10:22	10:25	5	&in
op	10:22	0:0	6	&
water	10:23	0:0	6	in
water	10:26	0:0	4	;
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
water	12:4	0:0	4	}
call	13:4	13:31	2	av_frame_copy_props
arg	13:24	13:27	3	out
water	13:24	0:0	4	out
arg	13:29	13:31	3	in
water	13:29	0:0	4	in
water	13:32	0:0	2	;
if	14:4	29:4	2	(color -> source == COLOR_MODE_NONE)
cond	14:8	14:25	3	color -> source == COLOR_MODE_NONE
water	14:8	0:0	4	color
op	14:13	0:0	4	->
water	14:15	0:0	4	source
op	14:22	0:0	4	==
water	14:25	0:0	4	COLOR_MODE_NONE
stmts	14:42	29:4	3	
water	14:42	0:0	4	{
decl	15:8	15:58	4	enum AVColorSpace	cs
op	15:29	0:0	4	=
call	15:31	15:57	5	av_frame_get_colorspace
arg	15:55	15:57	6	in
water	15:55	0:0	7	in
decl	16:8	16:29	4	enum ColorMode	source
switch	17:8	27:8	4	(cs)
cond	17:15	17:15	5	cs
water	17:15	0:0	6	cs
stmts	17:19	27:8	5	
water	17:19	0:0	6	{
label	18:8	18:33	6	case AVCOL_SPC_BT709 :
water	18:35	0:0	6	source
op	18:42	0:0	6	=
water	18:44	0:0	6	COLOR_MODE_BT709
water	18:65	0:0	6	;
break	18:67	18:72	6	
label	19:8	19:33	6	case AVCOL_SPC_FCC :
water	19:35	0:0	6	source
op	19:42	0:0	6	=
water	19:44	0:0	6	COLOR_MODE_FCC
water	19:65	0:0	6	;
break	19:67	19:72	6	
label	20:8	20:33	6	case AVCOL_SPC_SMPTE240M :
water	20:35	0:0	6	source
op	20:42	0:0	6	=
water	20:44	0:0	6	COLOR_MODE_SMPTE240M
water	20:65	0:0	6	;
break	20:67	20:72	6	
label	21:8	21:33	6	case AVCOL_SPC_BT470BG :
water	21:35	0:0	6	source
op	21:42	0:0	6	=
water	21:44	0:0	6	COLOR_MODE_BT601
water	21:65	0:0	6	;
break	21:67	21:72	6	
label	22:8	22:33	6	case AVCOL_SPC_SMPTE170M :
water	22:35	0:0	6	source
op	22:42	0:0	6	=
water	22:44	0:0	6	COLOR_MODE_BT601
water	22:65	0:0	6	;
break	22:67	22:72	6	
label	23:8	23:16	6	default :
call	24:12	24:139	6	av_log
arg	24:19	24:22	7	ctx
water	24:19	0:0	8	ctx
arg	24:24	24:36	7	AV_LOG_ERROR
water	24:24	0:0	8	AV_LOG_ERROR
arg	24:38	24:139	7	"Input frame does not specify a supported colorspace, and none has been specified as source either\n"
water	24:38	0:0	8	"Input frame does not specify a supported colorspace, and none has been specified as source either\n"
water	24:140	0:0	6	;
call	25:12	25:30	6	av_frame_free
arg	25:26	25:30	7	&out
op	25:26	0:0	8	&
water	25:27	0:0	8	out
water	25:31	0:0	6	;
return	26:12	26:34	6	AVERROR(EINVAL)
call	26:19	26:33	7	AVERROR
arg	26:27	26:33	8	EINVAL
water	26:27	0:0	9	EINVAL
water	27:8	0:0	6	}
water	28:8	0:0	4	color
op	28:13	0:0	4	->
water	28:15	0:0	4	mode
op	28:20	0:0	4	=
water	28:22	0:0	4	source
op	28:29	0:0	4	*
water	28:31	0:0	4	4
op	28:33	0:0	4	+
water	28:35	0:0	4	color
op	28:40	0:0	4	->
water	28:42	0:0	4	dest
water	28:46	0:0	4	;
water	29:4	0:0	4	}
else	29:6	30:53	2
stmts	30:8	30:53	3	
water	30:8	0:0	4	color
op	30:13	0:0	4	->
water	30:15	0:0	4	mode
op	30:20	0:0	4	=
water	30:22	0:0	4	color
op	30:27	0:0	4	->
water	30:29	0:0	4	source
op	30:36	0:0	4	*
water	30:38	0:0	4	4
op	30:40	0:0	4	+
water	30:42	0:0	4	color
op	30:47	0:0	4	->
water	30:49	0:0	4	dest
water	30:53	0:0	4	;
switch	31:4	36:4	2	(color -> dest)
cond	31:11	31:18	3	color -> dest
water	31:11	0:0	4	color
op	31:16	0:0	4	->
water	31:18	0:0	4	dest
stmts	31:24	36:4	3	
water	31:24	0:0	4	{
label	32:4	32:29	4	case COLOR_MODE_BT709 :
call	32:31	32:75	4	av_frame_set_colorspace
arg	32:55	32:58	5	out
water	32:55	0:0	6	out
arg	32:60	32:75	5	AVCOL_SPC_BT709
water	32:60	0:0	6	AVCOL_SPC_BT709
water	32:80	0:0	4	;
break	32:82	32:87	4	
label	33:4	33:29	4	case COLOR_MODE_FCC :
call	33:31	33:73	4	av_frame_set_colorspace
arg	33:55	33:58	5	out
water	33:55	0:0	6	out
arg	33:60	33:73	5	AVCOL_SPC_FCC
water	33:60	0:0	6	AVCOL_SPC_FCC
water	33:80	0:0	4	;
break	33:82	33:87	4	
label	34:4	34:29	4	case COLOR_MODE_SMPTE240M :
call	34:31	34:79	4	av_frame_set_colorspace
arg	34:55	34:58	5	out
water	34:55	0:0	6	out
arg	34:60	34:79	5	AVCOL_SPC_SMPTE240M
water	34:60	0:0	6	AVCOL_SPC_SMPTE240M
water	34:80	0:0	4	;
break	34:82	34:87	4	
label	35:4	35:29	4	case COLOR_MODE_BT601 :
call	35:31	35:77	4	av_frame_set_colorspace
arg	35:55	35:58	5	out
water	35:55	0:0	6	out
arg	35:60	35:77	5	AVCOL_SPC_BT470BG
water	35:60	0:0	6	AVCOL_SPC_BT470BG
water	35:80	0:0	4	;
break	35:82	35:87	4	
water	36:4	0:0	4	}
water	37:4	0:0	2	td
op	37:6	0:0	2	.
water	37:7	0:0	2	src
op	37:11	0:0	2	=
water	37:13	0:0	2	in
water	37:15	0:0	2	;
water	38:4	0:0	2	td
op	38:6	0:0	2	.
water	38:7	0:0	2	dst
op	38:11	0:0	2	=
water	38:13	0:0	2	out
water	38:16	0:0	2	;
water	39:4	0:0	2	td
op	39:6	0:0	2	.
water	39:7	0:0	2	c2
op	39:10	0:0	2	=
water	39:12	0:0	2	color
op	39:17	0:0	2	->
water	39:19	0:0	2	yuv_convert
op	39:30	0:0	2	[
water	39:31	0:0	2	color
op	39:36	0:0	2	->
water	39:38	0:0	2	mode
op	39:42	0:0	2	]
op	39:43	0:0	2	[
water	39:44	0:0	2	0
op	39:45	0:0	2	]
op	39:46	0:0	2	[
water	39:47	0:0	2	1
op	39:48	0:0	2	]
water	39:49	0:0	2	;
water	40:4	0:0	2	td
op	40:6	0:0	2	.
water	40:7	0:0	2	c3
op	40:10	0:0	2	=
water	40:12	0:0	2	color
op	40:17	0:0	2	->
water	40:19	0:0	2	yuv_convert
op	40:30	0:0	2	[
water	40:31	0:0	2	color
op	40:36	0:0	2	->
water	40:38	0:0	2	mode
op	40:42	0:0	2	]
op	40:43	0:0	2	[
water	40:44	0:0	2	0
op	40:45	0:0	2	]
op	40:46	0:0	2	[
water	40:47	0:0	2	2
op	40:48	0:0	2	]
water	40:49	0:0	2	;
water	41:4	0:0	2	td
op	41:6	0:0	2	.
water	41:7	0:0	2	c4
op	41:10	0:0	2	=
water	41:12	0:0	2	color
op	41:17	0:0	2	->
water	41:19	0:0	2	yuv_convert
op	41:30	0:0	2	[
water	41:31	0:0	2	color
op	41:36	0:0	2	->
water	41:38	0:0	2	mode
op	41:42	0:0	2	]
op	41:43	0:0	2	[
water	41:44	0:0	2	1
op	41:45	0:0	2	]
op	41:46	0:0	2	[
water	41:47	0:0	2	1
op	41:48	0:0	2	]
water	41:49	0:0	2	;
water	42:4	0:0	2	td
op	42:6	0:0	2	.
water	42:7	0:0	2	c5
op	42:10	0:0	2	=
water	42:12	0:0	2	color
op	42:17	0:0	2	->
water	42:19	0:0	2	yuv_convert
op	42:30	0:0	2	[
water	42:31	0:0	2	color
op	42:36	0:0	2	->
water	42:38	0:0	2	mode
op	42:42	0:0	2	]
op	42:43	0:0	2	[
water	42:44	0:0	2	1
op	42:45	0:0	2	]
op	42:46	0:0	2	[
water	42:47	0:0	2	2
op	42:48	0:0	2	]
water	42:49	0:0	2	;
water	43:4	0:0	2	td
op	43:6	0:0	2	.
water	43:7	0:0	2	c6
op	43:10	0:0	2	=
water	43:12	0:0	2	color
op	43:17	0:0	2	->
water	43:19	0:0	2	yuv_convert
op	43:30	0:0	2	[
water	43:31	0:0	2	color
op	43:36	0:0	2	->
water	43:38	0:0	2	mode
op	43:42	0:0	2	]
op	43:43	0:0	2	[
water	43:44	0:0	2	2
op	43:45	0:0	2	]
op	43:46	0:0	2	[
water	43:47	0:0	2	1
op	43:48	0:0	2	]
water	43:49	0:0	2	;
water	44:4	0:0	2	td
op	44:6	0:0	2	.
water	44:7	0:0	2	c7
op	44:10	0:0	2	=
water	44:12	0:0	2	color
op	44:17	0:0	2	->
water	44:19	0:0	2	yuv_convert
op	44:30	0:0	2	[
water	44:31	0:0	2	color
op	44:36	0:0	2	->
water	44:38	0:0	2	mode
op	44:42	0:0	2	]
op	44:43	0:0	2	[
water	44:44	0:0	2	2
op	44:45	0:0	2	]
op	44:46	0:0	2	[
water	44:47	0:0	2	2
op	44:48	0:0	2	]
water	44:49	0:0	2	;
if	45:4	47:73	2	(in -> format == AV_PIX_FMT_YUV444P)
cond	45:8	45:22	3	in -> format == AV_PIX_FMT_YUV444P
water	45:8	0:0	4	in
op	45:10	0:0	4	->
water	45:12	0:0	4	format
op	45:19	0:0	4	==
water	45:22	0:0	4	AV_PIX_FMT_YUV444P
stmts	46:8	47:73	3	
call	46:8	47:72	4	ctx->internal->execute
arg	46:31	46:34	5	ctx
water	46:31	0:0	6	ctx
arg	46:36	46:57	5	process_slice_yuv444p
water	46:36	0:0	6	process_slice_yuv444p
arg	46:59	46:62	5	&td
op	46:59	0:0	6	&
water	46:60	0:0	6	td
arg	46:64	46:68	5	NULL
water	46:64	0:0	6	NULL
arg	47:31	47:72	5	FFMIN(in->height,ctx->graph->nb_threads)
call	47:31	47:71	6	FFMIN
arg	47:37	47:47	7	in->height
water	47:37	0:0	8	in
op	47:39	0:0	8	->
water	47:41	0:0	8	height
arg	47:49	47:71	7	ctx->graph->nb_threads
water	47:49	0:0	8	ctx
op	47:52	0:0	8	->
water	47:54	0:0	8	graph
op	47:59	0:0	8	->
water	47:61	0:0	8	nb_threads
water	47:73	0:0	4	;
else	48:4	50:73	2
stmts	48:9	50:73	3	
if	48:9	50:73	4	(in -> format == AV_PIX_FMT_YUV422P)
cond	48:13	48:27	5	in -> format == AV_PIX_FMT_YUV422P
water	48:13	0:0	6	in
op	48:15	0:0	6	->
water	48:17	0:0	6	format
op	48:24	0:0	6	==
water	48:27	0:0	6	AV_PIX_FMT_YUV422P
stmts	49:8	50:73	5	
call	49:8	50:72	6	ctx->internal->execute
arg	49:31	49:34	7	ctx
water	49:31	0:0	8	ctx
arg	49:36	49:57	7	process_slice_yuv422p
water	49:36	0:0	8	process_slice_yuv422p
arg	49:59	49:62	7	&td
op	49:59	0:0	8	&
water	49:60	0:0	8	td
arg	49:64	49:68	7	NULL
water	49:64	0:0	8	NULL
arg	50:31	50:72	7	FFMIN(in->height,ctx->graph->nb_threads)
call	50:31	50:71	8	FFMIN
arg	50:37	50:47	9	in->height
water	50:37	0:0	10	in
op	50:39	0:0	10	->
water	50:41	0:0	10	height
arg	50:49	50:71	9	ctx->graph->nb_threads
water	50:49	0:0	10	ctx
op	50:52	0:0	10	->
water	50:54	0:0	10	graph
op	50:59	0:0	10	->
water	50:61	0:0	10	nb_threads
water	50:73	0:0	6	;
else	51:4	53:77	2
stmts	51:9	53:77	3	
if	51:9	53:77	4	(in -> format == AV_PIX_FMT_YUV420P)
cond	51:13	51:27	5	in -> format == AV_PIX_FMT_YUV420P
water	51:13	0:0	6	in
op	51:15	0:0	6	->
water	51:17	0:0	6	format
op	51:24	0:0	6	==
water	51:27	0:0	6	AV_PIX_FMT_YUV420P
stmts	52:8	53:77	5	
call	52:8	53:76	6	ctx->internal->execute
arg	52:31	52:34	7	ctx
water	52:31	0:0	8	ctx
arg	52:36	52:57	7	process_slice_yuv420p
water	52:36	0:0	8	process_slice_yuv420p
arg	52:59	52:62	7	&td
op	52:59	0:0	8	&
water	52:60	0:0	8	td
arg	52:64	52:68	7	NULL
water	52:64	0:0	8	NULL
arg	53:31	53:76	7	FFMIN(in->height/2,ctx->graph->nb_threads)
call	53:31	53:75	8	FFMIN
arg	53:37	53:51	9	in->height/2
water	53:37	0:0	10	in
op	53:39	0:0	10	->
water	53:41	0:0	10	height
op	53:48	0:0	10	/
water	53:50	0:0	10	2
arg	53:53	53:75	9	ctx->graph->nb_threads
water	53:53	0:0	10	ctx
op	53:56	0:0	10	->
water	53:58	0:0	10	graph
op	53:63	0:0	10	->
water	53:65	0:0	10	nb_threads
water	53:77	0:0	6	;
else	54:4	56:73	2
stmts	55:8	56:73	3	
call	55:8	56:72	4	ctx->internal->execute
arg	55:31	55:34	5	ctx
water	55:31	0:0	6	ctx
arg	55:36	55:57	5	process_slice_uyvy422
water	55:36	0:0	6	process_slice_uyvy422
arg	55:59	55:62	5	&td
op	55:59	0:0	6	&
water	55:60	0:0	6	td
arg	55:64	55:68	5	NULL
water	55:64	0:0	6	NULL
arg	56:31	56:72	5	FFMIN(in->height,ctx->graph->nb_threads)
call	56:31	56:71	6	FFMIN
arg	56:37	56:47	7	in->height
water	56:37	0:0	8	in
op	56:39	0:0	8	->
water	56:41	0:0	8	height
arg	56:49	56:71	7	ctx->graph->nb_threads
water	56:49	0:0	8	ctx
op	56:52	0:0	8	->
water	56:54	0:0	8	graph
op	56:59	0:0	8	->
water	56:61	0:0	8	nb_threads
water	56:73	0:0	4	;
call	57:4	57:21	2	av_frame_free
arg	57:18	57:21	3	&in
op	57:18	0:0	4	&
water	57:19	0:0	4	in
water	57:22	0:0	2	;
return	58:4	58:40	2	ff_filter_frame(outlink,out)
call	58:11	58:39	3	ff_filter_frame
arg	58:27	58:34	4	outlink
water	58:27	0:0	5	outlink
arg	58:36	58:39	4	out
water	58:36	0:0	5	out

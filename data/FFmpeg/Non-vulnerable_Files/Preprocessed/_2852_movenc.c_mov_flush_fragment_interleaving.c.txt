func	1:0	22:0	0	static int	mov_flush_fragment_interleaving
params	1:42	0:0	1	
param	1:43	1:61	2	AVFormatContext *	s
param	1:63	1:78	2	MOVTrack *	track
stmnts	0:0	21:12	1	
decl	3:4	3:37	2	MOVMuxContext	*mov
op	3:23	0:0	2	=
water	3:25	0:0	2	s
op	3:26	0:0	2	->
water	3:28	0:0	2	priv_data
decl	4:4	4:21	2	int	ret
water	4:11	0:0	2	,
decl	4:4	4:21	2	int	buf_size
decl	5:4	5:16	2	uint8_t	*buf
decl	6:4	6:17	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:17	2	int	offset
if	7:4	8:16	2	(! track -> mdat_buf)
cond	7:8	7:16	3	! track -> mdat_buf
op	7:8	0:0	4	!
water	7:9	0:0	4	track
op	7:14	0:0	4	->
water	7:16	0:0	4	mdat_buf
stmts	8:8	8:16	3	
return	8:8	8:16	4	0
water	8:15	0:0	5	0
if	9:4	12:4	2	(! mov -> mdat_buf)
cond	9:8	9:14	3	! mov -> mdat_buf
op	9:8	0:0	4	!
water	9:9	0:0	4	mov
op	9:12	0:0	4	->
water	9:14	0:0	4	mdat_buf
stmts	9:24	12:4	3	
water	9:24	0:0	4	{
if	10:8	11:22	4	(( ret =avio_open_dyn_buf (& mov -> mdat_buf ) ) < 0)
cond	10:12	10:56	5	( ret =avio_open_dyn_buf (& mov -> mdat_buf ) ) < 0
water	10:12	0:0	6	(
water	10:13	0:0	6	ret
op	10:17	0:0	6	=
call	10:19	10:51	6	avio_open_dyn_buf
arg	10:37	10:51	7	&mov->mdat_buf
op	10:37	0:0	8	&
water	10:38	0:0	8	mov
op	10:41	0:0	8	->
water	10:43	0:0	8	mdat_buf
water	10:52	0:0	6	)
op	10:54	0:0	6	<
water	10:56	0:0	6	0
stmts	11:12	11:22	5	
return	11:12	11:22	6	ret
water	11:19	0:0	7	ret
water	12:4	0:0	4	}
water	13:4	0:0	2	buf_size
op	13:13	0:0	2	=
call	13:15	13:55	2	avio_close_dyn_buf
arg	13:34	13:49	3	track->mdat_buf
water	13:34	0:0	4	track
op	13:39	0:0	4	->
water	13:41	0:0	4	mdat_buf
arg	13:51	13:55	3	&buf
op	13:51	0:0	4	&
water	13:52	0:0	4	buf
water	13:56	0:0	2	;
water	14:4	0:0	2	track
op	14:9	0:0	2	->
water	14:11	0:0	2	mdat_buf
op	14:20	0:0	2	=
water	14:22	0:0	2	NULL
water	14:26	0:0	2	;
water	15:4	0:0	2	offset
op	15:11	0:0	2	=
call	15:13	15:36	2	avio_tell
arg	15:23	15:36	3	mov->mdat_buf
water	15:23	0:0	4	mov
op	15:26	0:0	4	->
water	15:28	0:0	4	mdat_buf
water	15:37	0:0	2	;
call	16:4	16:43	2	avio_write
arg	16:15	16:28	3	mov->mdat_buf
water	16:15	0:0	4	mov
op	16:18	0:0	4	->
water	16:20	0:0	4	mdat_buf
arg	16:30	16:33	3	buf
water	16:30	0:0	4	buf
arg	16:35	16:43	3	buf_size
water	16:35	0:0	4	buf_size
water	16:44	0:0	2	;
call	17:4	17:15	2	av_free
arg	17:12	17:15	3	buf
water	17:12	0:0	4	buf
water	17:16	0:0	2	;
for	18:4	19:39	2	(i = track -> entries_flushed ;i < track -> entry;i ++)
forinit	18:9	18:35	3	i = track -> entries_flushed ;
water	18:9	0:0	4	i
op	18:11	0:0	4	=
water	18:13	0:0	4	track
op	18:18	0:0	4	->
water	18:20	0:0	4	entries_flushed
water	18:35	0:0	4	;
cond	18:37	18:48	3	i < track -> entry
water	18:37	0:0	4	i
op	18:39	0:0	4	<
water	18:41	0:0	4	track
op	18:46	0:0	4	->
water	18:48	0:0	4	entry
forexpr	18:55	18:56	3	i ++
water	18:55	0:0	4	i
op	18:56	0:0	4	++
stmts	19:8	19:39	3	
water	19:8	0:0	4	track
op	19:13	0:0	4	->
water	19:15	0:0	4	cluster
op	19:22	0:0	4	[
water	19:23	0:0	4	i
op	19:24	0:0	4	]
op	19:25	0:0	4	.
water	19:26	0:0	4	pos
op	19:30	0:0	4	+=
water	19:33	0:0	4	offset
water	19:39	0:0	4	;
water	20:4	0:0	2	track
op	20:9	0:0	2	->
water	20:11	0:0	2	entries_flushed
op	20:27	0:0	2	=
water	20:29	0:0	2	track
op	20:34	0:0	2	->
water	20:36	0:0	2	entry
water	20:41	0:0	2	;
return	21:4	21:12	2	0
water	21:11	0:0	3	0

func	1:0	48:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:42	2	AVFilterLink *	link
param	1:44	1:58	2	AVFrame *	frame
stmnts	0:0	47:56	1	
decl	3:4	3:36	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	link
op	3:31	0:0	2	->
water	3:33	0:0	2	dst
decl	4:4	4:30	2	CropContext	*s
op	4:19	0:0	2	=
water	4:21	0:0	2	ctx
op	4:24	0:0	2	->
water	4:26	0:0	2	priv
decl	5:4	5:70	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:69	3	av_pix_fmt_desc_get
arg	5:57	5:69	4	link->format
water	5:57	0:0	5	link
op	5:61	0:0	5	->
water	5:63	0:0	5	format
decl	6:4	6:9	2	int	i
water	7:4	0:0	2	frame
op	7:9	0:0	2	->
water	7:11	0:0	2	width
op	7:18	0:0	2	=
water	7:20	0:0	2	s
op	7:21	0:0	2	->
water	7:23	0:0	2	w
water	7:24	0:0	2	;
water	8:4	0:0	2	frame
op	8:9	0:0	2	->
water	8:11	0:0	2	height
op	8:18	0:0	2	=
water	8:20	0:0	2	s
op	8:21	0:0	2	->
water	8:23	0:0	2	h
water	8:24	0:0	2	;
water	9:4	0:0	2	s
op	9:5	0:0	2	->
water	9:7	0:0	2	var_values
op	9:17	0:0	2	[
water	9:18	0:0	2	VAR_N
op	9:23	0:0	2	]
op	9:25	0:0	2	=
water	9:27	0:0	2	link
op	9:31	0:0	2	->
water	9:33	0:0	2	frame_count
water	9:44	0:0	2	;
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	var_values
op	10:17	0:0	2	[
water	10:18	0:0	2	VAR_T
op	10:23	0:0	2	]
op	10:25	0:0	2	=
water	10:27	0:0	2	frame
op	10:32	0:0	2	->
water	10:34	0:0	2	pts
op	10:38	0:0	2	==
water	10:41	0:0	2	AV_NOPTS_VALUE
water	10:56	0:0	2	?
water	11:8	0:0	2	NAN
water	11:12	0:0	2	:
water	11:14	0:0	2	frame
op	11:19	0:0	2	->
water	11:21	0:0	2	pts
call	11:25	11:49	2	*av_q2d
arg	11:34	11:49	3	link->time_base
water	11:34	0:0	4	link
op	11:38	0:0	4	->
water	11:40	0:0	4	time_base
water	11:50	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	var_values
op	12:17	0:0	2	[
water	12:18	0:0	2	VAR_POS
op	12:25	0:0	2	]
op	12:27	0:0	2	=
call	12:29	12:55	2	av_frame_get_pkt_pos
arg	12:50	12:55	3	frame
water	12:50	0:0	4	frame
op	12:57	0:0	2	==
op	12:60	0:0	2	-
water	12:61	0:0	2	1
water	12:63	0:0	2	?
water	13:8	0:0	2	NAN
water	13:12	0:0	2	:
call	13:14	13:40	2	av_frame_get_pkt_pos
arg	13:35	13:40	3	frame
water	13:35	0:0	4	frame
water	13:41	0:0	2	;
water	14:4	0:0	2	s
op	14:5	0:0	2	->
water	14:7	0:0	2	var_values
op	14:17	0:0	2	[
water	14:18	0:0	2	VAR_X
op	14:23	0:0	2	]
op	14:25	0:0	2	=
call	14:27	14:71	2	av_expr_eval
arg	14:40	14:50	3	s->x_pexpr
water	14:40	0:0	4	s
op	14:41	0:0	4	->
water	14:43	0:0	4	x_pexpr
arg	14:52	14:65	3	s->var_values
water	14:52	0:0	4	s
op	14:53	0:0	4	->
water	14:55	0:0	4	var_values
arg	14:67	14:71	3	NULL
water	14:67	0:0	4	NULL
water	14:72	0:0	2	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	var_values
op	15:17	0:0	2	[
water	15:18	0:0	2	VAR_Y
op	15:23	0:0	2	]
op	15:25	0:0	2	=
call	15:27	15:71	2	av_expr_eval
arg	15:40	15:50	3	s->y_pexpr
water	15:40	0:0	4	s
op	15:41	0:0	4	->
water	15:43	0:0	4	y_pexpr
arg	15:52	15:65	3	s->var_values
water	15:52	0:0	4	s
op	15:53	0:0	4	->
water	15:55	0:0	4	var_values
arg	15:67	15:71	3	NULL
water	15:67	0:0	4	NULL
water	15:72	0:0	2	;
water	16:4	0:0	2	s
op	16:5	0:0	2	->
water	16:7	0:0	2	var_values
op	16:17	0:0	2	[
water	16:18	0:0	2	VAR_X
op	16:23	0:0	2	]
op	16:25	0:0	2	=
call	16:27	16:71	2	av_expr_eval
arg	16:40	16:50	3	s->x_pexpr
water	16:40	0:0	4	s
op	16:41	0:0	4	->
water	16:43	0:0	4	x_pexpr
arg	16:52	16:65	3	s->var_values
water	16:52	0:0	4	s
op	16:53	0:0	4	->
water	16:55	0:0	4	var_values
arg	16:67	16:71	3	NULL
water	16:67	0:0	4	NULL
water	16:72	0:0	2	;
call	17:4	17:48	2	normalize_double
arg	17:21	17:26	3	&s->x
op	17:21	0:0	4	&
water	17:22	0:0	4	s
op	17:23	0:0	4	->
water	17:25	0:0	4	x
arg	17:28	17:48	3	s->var_values[VAR_X]
water	17:28	0:0	4	s
op	17:29	0:0	4	->
water	17:31	0:0	4	var_values
op	17:41	0:0	4	[
water	17:42	0:0	4	VAR_X
op	17:47	0:0	4	]
water	17:49	0:0	2	;
call	18:4	18:48	2	normalize_double
arg	18:21	18:26	3	&s->y
op	18:21	0:0	4	&
water	18:22	0:0	4	s
op	18:23	0:0	4	->
water	18:25	0:0	4	y
arg	18:28	18:48	3	s->var_values[VAR_Y]
water	18:28	0:0	4	s
op	18:29	0:0	4	->
water	18:31	0:0	4	var_values
op	18:41	0:0	4	[
water	18:42	0:0	4	VAR_Y
op	18:47	0:0	4	]
water	18:49	0:0	2	;
if	19:4	20:16	2	(s -> x < 0)
cond	19:8	19:15	3	s -> x < 0
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	x
op	19:13	0:0	4	<
water	19:15	0:0	4	0
stmts	20:8	20:16	3	
water	20:8	0:0	4	s
op	20:9	0:0	4	->
water	20:11	0:0	4	x
op	20:13	0:0	4	=
water	20:15	0:0	4	0
water	20:16	0:0	4	;
if	21:4	22:16	2	(s -> y < 0)
cond	21:8	21:15	3	s -> y < 0
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	y
op	21:13	0:0	4	<
water	21:15	0:0	4	0
stmts	22:8	22:16	3	
water	22:8	0:0	4	s
op	22:9	0:0	4	->
water	22:11	0:0	4	y
op	22:13	0:0	4	=
water	22:15	0:0	4	0
water	22:16	0:0	4	;
if	23:4	24:29	2	(( unsigned ) s -> x + ( unsigned ) s -> w > link -> w)
cond	23:8	23:48	3	( unsigned ) s -> x + ( unsigned ) s -> w > link -> w
water	23:8	0:0	4	(
water	23:9	0:0	4	unsigned
water	23:17	0:0	4	)
water	23:18	0:0	4	s
op	23:19	0:0	4	->
water	23:21	0:0	4	x
op	23:23	0:0	4	+
water	23:25	0:0	4	(
water	23:26	0:0	4	unsigned
water	23:34	0:0	4	)
water	23:35	0:0	4	s
op	23:36	0:0	4	->
water	23:38	0:0	4	w
op	23:40	0:0	4	>
water	23:42	0:0	4	link
op	23:46	0:0	4	->
water	23:48	0:0	4	w
stmts	24:8	24:29	3	
water	24:8	0:0	4	s
op	24:9	0:0	4	->
water	24:11	0:0	4	x
op	24:13	0:0	4	=
water	24:15	0:0	4	link
op	24:19	0:0	4	->
water	24:21	0:0	4	w
op	24:23	0:0	4	-
water	24:25	0:0	4	s
op	24:26	0:0	4	->
water	24:28	0:0	4	w
water	24:29	0:0	4	;
if	25:4	26:29	2	(( unsigned ) s -> y + ( unsigned ) s -> h > link -> h)
cond	25:8	25:48	3	( unsigned ) s -> y + ( unsigned ) s -> h > link -> h
water	25:8	0:0	4	(
water	25:9	0:0	4	unsigned
water	25:17	0:0	4	)
water	25:18	0:0	4	s
op	25:19	0:0	4	->
water	25:21	0:0	4	y
op	25:23	0:0	4	+
water	25:25	0:0	4	(
water	25:26	0:0	4	unsigned
water	25:34	0:0	4	)
water	25:35	0:0	4	s
op	25:36	0:0	4	->
water	25:38	0:0	4	h
op	25:40	0:0	4	>
water	25:42	0:0	4	link
op	25:46	0:0	4	->
water	25:48	0:0	4	h
stmts	26:8	26:29	3	
water	26:8	0:0	4	s
op	26:9	0:0	4	->
water	26:11	0:0	4	y
op	26:13	0:0	4	=
water	26:15	0:0	4	link
op	26:19	0:0	4	->
water	26:21	0:0	4	h
op	26:23	0:0	4	-
water	26:25	0:0	4	s
op	26:26	0:0	4	->
water	26:28	0:0	4	h
water	26:29	0:0	4	;
water	27:4	0:0	2	s
op	27:5	0:0	2	->
water	27:7	0:0	2	x
op	27:9	0:0	2	&=
op	27:12	0:0	2	~
water	27:13	0:0	2	(
water	27:14	0:0	2	(
water	27:15	0:0	2	1
op	27:17	0:0	2	<<
water	27:20	0:0	2	s
op	27:21	0:0	2	->
water	27:23	0:0	2	hsub
water	27:27	0:0	2	)
op	27:29	0:0	2	-
water	27:31	0:0	2	1
water	27:32	0:0	2	)
water	27:33	0:0	2	;
water	28:4	0:0	2	s
op	28:5	0:0	2	->
water	28:7	0:0	2	y
op	28:9	0:0	2	&=
op	28:12	0:0	2	~
water	28:13	0:0	2	(
water	28:14	0:0	2	(
water	28:15	0:0	2	1
op	28:17	0:0	2	<<
water	28:20	0:0	2	s
op	28:21	0:0	2	->
water	28:23	0:0	2	vsub
water	28:27	0:0	2	)
op	28:29	0:0	2	-
water	28:31	0:0	2	1
water	28:32	0:0	2	)
water	28:33	0:0	2	;
call	29:4	31:44	2	av_log
arg	29:11	29:14	3	ctx
water	29:11	0:0	4	ctx
arg	29:16	29:28	3	AV_LOG_TRACE
water	29:16	0:0	4	AV_LOG_TRACE
arg	29:30	29:74	3	"n:%d t:%f pos:%f x:%d y:%d x+w:%d y+h:%d\n"
water	29:30	0:0	4	"n:%d t:%f pos:%f x:%d y:%d x+w:%d y+h:%d\n"
arg	30:12	30:37	3	(int)s->var_values[VAR_N]
water	30:12	0:0	4	(
water	30:13	0:0	4	int
water	30:16	0:0	4	)
water	30:17	0:0	4	s
op	30:18	0:0	4	->
water	30:20	0:0	4	var_values
op	30:30	0:0	4	[
water	30:31	0:0	4	VAR_N
op	30:36	0:0	4	]
arg	30:39	30:59	3	s->var_values[VAR_T]
water	30:39	0:0	4	s
op	30:40	0:0	4	->
water	30:42	0:0	4	var_values
op	30:52	0:0	4	[
water	30:53	0:0	4	VAR_T
op	30:58	0:0	4	]
arg	30:61	30:83	3	s->var_values[VAR_POS]
water	30:61	0:0	4	s
op	30:62	0:0	4	->
water	30:64	0:0	4	var_values
op	30:74	0:0	4	[
water	30:75	0:0	4	VAR_POS
op	30:82	0:0	4	]
arg	31:12	31:16	3	s->x
water	31:12	0:0	4	s
op	31:13	0:0	4	->
water	31:15	0:0	4	x
arg	31:18	31:22	3	s->y
water	31:18	0:0	4	s
op	31:19	0:0	4	->
water	31:21	0:0	4	y
arg	31:24	31:33	3	s->x+s->w
water	31:24	0:0	4	s
op	31:25	0:0	4	->
water	31:27	0:0	4	x
op	31:28	0:0	4	+
water	31:29	0:0	4	s
op	31:30	0:0	4	->
water	31:32	0:0	4	w
arg	31:35	31:44	3	s->y+s->h
water	31:35	0:0	4	s
op	31:36	0:0	4	->
water	31:38	0:0	4	y
op	31:39	0:0	4	+
water	31:40	0:0	4	s
op	31:41	0:0	4	->
water	31:43	0:0	4	h
water	31:45	0:0	2	;
water	32:4	0:0	2	frame
op	32:9	0:0	2	->
water	32:11	0:0	2	data
op	32:15	0:0	2	[
water	32:16	0:0	2	0
op	32:17	0:0	2	]
op	32:19	0:0	2	+=
water	32:22	0:0	2	s
op	32:23	0:0	2	->
water	32:25	0:0	2	y
op	32:27	0:0	2	*
water	32:29	0:0	2	frame
op	32:34	0:0	2	->
water	32:36	0:0	2	linesize
op	32:44	0:0	2	[
water	32:45	0:0	2	0
op	32:46	0:0	2	]
water	32:47	0:0	2	;
water	33:4	0:0	2	frame
op	33:9	0:0	2	->
water	33:11	0:0	2	data
op	33:15	0:0	2	[
water	33:16	0:0	2	0
op	33:17	0:0	2	]
op	33:19	0:0	2	+=
water	33:22	0:0	2	s
op	33:23	0:0	2	->
water	33:25	0:0	2	x
op	33:27	0:0	2	*
water	33:29	0:0	2	s
op	33:30	0:0	2	->
water	33:32	0:0	2	max_step
op	33:40	0:0	2	[
water	33:41	0:0	2	0
op	33:42	0:0	2	]
water	33:43	0:0	2	;
if	34:4	41:4	2	(! ( desc -> flags & AV_PIX_FMT_FLAG_PAL || desc -> flags & AV_PIX_FMT_FLAG_PSEUDOPAL ))
cond	34:8	34:86	3	! ( desc -> flags & AV_PIX_FMT_FLAG_PAL || desc -> flags & AV_PIX_FMT_FLAG_PSEUDOPAL )
op	34:8	0:0	4	!
water	34:9	0:0	4	(
water	34:10	0:0	4	desc
op	34:14	0:0	4	->
water	34:16	0:0	4	flags
op	34:22	0:0	4	&
water	34:24	0:0	4	AV_PIX_FMT_FLAG_PAL
op	34:44	0:0	4	||
water	34:47	0:0	4	desc
op	34:51	0:0	4	->
water	34:53	0:0	4	flags
op	34:59	0:0	4	&
water	34:61	0:0	4	AV_PIX_FMT_FLAG_PSEUDOPAL
water	34:86	0:0	4	)
stmts	34:89	41:4	3	
water	34:89	0:0	4	{
for	35:8	40:8	4	(i = 1 ;i < 3;i ++)
forinit	35:13	35:18	5	i = 1 ;
water	35:13	0:0	6	i
op	35:15	0:0	6	=
water	35:17	0:0	6	1
water	35:18	0:0	6	;
cond	35:20	35:24	5	i < 3
water	35:20	0:0	6	i
op	35:22	0:0	6	<
water	35:24	0:0	6	3
forexpr	35:27	35:29	5	i ++
water	35:27	0:0	6	i
op	35:29	0:0	6	++
stmts	35:33	40:8	5	
water	35:33	0:0	6	{
if	36:12	39:12	6	(frame -> data [ i ])
cond	36:16	36:29	7	frame -> data [ i ]
water	36:16	0:0	8	frame
op	36:21	0:0	8	->
water	36:23	0:0	8	data
op	36:27	0:0	8	[
water	36:28	0:0	8	i
op	36:29	0:0	8	]
stmts	36:32	39:12	7	
water	36:32	0:0	8	{
water	37:16	0:0	8	frame
op	37:21	0:0	8	->
water	37:23	0:0	8	data
op	37:27	0:0	8	[
water	37:28	0:0	8	i
op	37:29	0:0	8	]
op	37:31	0:0	8	+=
water	37:34	0:0	8	(
water	37:35	0:0	8	s
op	37:36	0:0	8	->
water	37:38	0:0	8	y
op	37:40	0:0	8	>>
water	37:43	0:0	8	s
op	37:44	0:0	8	->
water	37:46	0:0	8	vsub
water	37:50	0:0	8	)
op	37:52	0:0	8	*
water	37:54	0:0	8	frame
op	37:59	0:0	8	->
water	37:61	0:0	8	linesize
op	37:69	0:0	8	[
water	37:70	0:0	8	i
op	37:71	0:0	8	]
water	37:72	0:0	8	;
water	38:16	0:0	8	frame
op	38:21	0:0	8	->
water	38:23	0:0	8	data
op	38:27	0:0	8	[
water	38:28	0:0	8	i
op	38:29	0:0	8	]
op	38:31	0:0	8	+=
water	38:34	0:0	8	(
water	38:35	0:0	8	s
op	38:36	0:0	8	->
water	38:38	0:0	8	x
op	38:40	0:0	8	*
water	38:42	0:0	8	s
op	38:43	0:0	8	->
water	38:45	0:0	8	max_step
op	38:53	0:0	8	[
water	38:54	0:0	8	i
op	38:55	0:0	8	]
water	38:56	0:0	8	)
op	38:58	0:0	8	>>
water	38:61	0:0	8	s
op	38:62	0:0	8	->
water	38:64	0:0	8	hsub
water	38:68	0:0	8	;
water	39:12	0:0	8	}
water	40:8	0:0	6	}
water	41:4	0:0	4	}
if	43:4	46:4	2	(frame -> data [ 3 ])
cond	43:8	43:21	3	frame -> data [ 3 ]
water	43:8	0:0	4	frame
op	43:13	0:0	4	->
water	43:15	0:0	4	data
op	43:19	0:0	4	[
water	43:20	0:0	4	3
op	43:21	0:0	4	]
stmts	43:24	46:4	3	
water	43:24	0:0	4	{
water	44:8	0:0	4	frame
op	44:13	0:0	4	->
water	44:15	0:0	4	data
op	44:19	0:0	4	[
water	44:20	0:0	4	3
op	44:21	0:0	4	]
op	44:23	0:0	4	+=
water	44:26	0:0	4	s
op	44:27	0:0	4	->
water	44:29	0:0	4	y
op	44:31	0:0	4	*
water	44:33	0:0	4	frame
op	44:38	0:0	4	->
water	44:40	0:0	4	linesize
op	44:48	0:0	4	[
water	44:49	0:0	4	3
op	44:50	0:0	4	]
water	44:51	0:0	4	;
water	45:8	0:0	4	frame
op	45:13	0:0	4	->
water	45:15	0:0	4	data
op	45:19	0:0	4	[
water	45:20	0:0	4	3
op	45:21	0:0	4	]
op	45:23	0:0	4	+=
water	45:26	0:0	4	s
op	45:27	0:0	4	->
water	45:29	0:0	4	x
op	45:31	0:0	4	*
water	45:33	0:0	4	s
op	45:34	0:0	4	->
water	45:36	0:0	4	max_step
op	45:44	0:0	4	[
water	45:45	0:0	4	3
op	45:46	0:0	4	]
water	45:47	0:0	4	;
water	46:4	0:0	4	}
return	47:4	47:56	2	ff_filter_frame(link->dst->outputs[0],frame)
call	47:11	47:55	3	ff_filter_frame
arg	47:27	47:48	4	link->dst->outputs[0]
water	47:27	0:0	5	link
op	47:31	0:0	5	->
water	47:33	0:0	5	dst
op	47:36	0:0	5	->
water	47:38	0:0	5	outputs
op	47:45	0:0	5	[
water	47:46	0:0	5	0
op	47:47	0:0	5	]
arg	47:50	47:55	4	frame
water	47:50	0:0	5	frame

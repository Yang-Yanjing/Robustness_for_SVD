func	1:0	35:0	0	static void	mpeg_decode_sequence_extension
params	1:42	0:0	1	
param	1:43	1:59	2	Mpeg1Context *	s1
stmnts	0:0	34:53	1	
decl	3:4	3:41	2	MpegEncContext	*s
op	3:22	0:0	2	=
op	3:24	0:0	2	&
water	3:25	0:0	2	s1
op	3:27	0:0	2	->
water	3:29	0:0	2	mpeg_enc_ctx
decl	4:4	4:37	2	int	horiz_size_ext
water	4:22	0:0	2	,
decl	4:4	4:37	2	int	vert_size_ext
decl	5:4	5:20	2	int	bit_rate_ext
call	6:4	6:23	2	skip_bits
arg	6:14	6:20	3	&s->gb
op	6:14	0:0	4	&
water	6:15	0:0	4	s
op	6:16	0:0	4	->
water	6:18	0:0	4	gb
arg	6:22	6:23	3	1
water	6:22	0:0	4	1
water	6:24	0:0	2	;
water	7:4	0:0	2	s
op	7:5	0:0	2	->
water	7:7	0:0	2	avctx
op	7:12	0:0	2	->
water	7:14	0:0	2	profile
op	7:28	0:0	2	=
call	7:30	7:48	2	get_bits
arg	7:39	7:45	3	&s->gb
op	7:39	0:0	4	&
water	7:40	0:0	4	s
op	7:41	0:0	4	->
water	7:43	0:0	4	gb
arg	7:47	7:48	3	3
water	7:47	0:0	4	3
water	7:49	0:0	2	;
water	8:4	0:0	2	s
op	8:5	0:0	2	->
water	8:7	0:0	2	avctx
op	8:12	0:0	2	->
water	8:14	0:0	2	level
op	8:28	0:0	2	=
call	8:30	8:48	2	get_bits
arg	8:39	8:45	3	&s->gb
op	8:39	0:0	4	&
water	8:40	0:0	4	s
op	8:41	0:0	4	->
water	8:43	0:0	4	gb
arg	8:47	8:48	3	4
water	8:47	0:0	4	4
water	8:49	0:0	2	;
water	9:4	0:0	2	s
op	9:5	0:0	2	->
water	9:7	0:0	2	progressive_sequence
op	9:28	0:0	2	=
call	9:30	9:46	2	get_bits1
arg	9:40	9:46	3	&s->gb
op	9:40	0:0	4	&
water	9:41	0:0	4	s
op	9:42	0:0	4	->
water	9:44	0:0	4	gb
water	9:47	0:0	2	;
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	chroma_format
op	10:28	0:0	2	=
call	10:30	10:48	2	get_bits
arg	10:39	10:45	3	&s->gb
op	10:39	0:0	4	&
water	10:40	0:0	4	s
op	10:41	0:0	4	->
water	10:43	0:0	4	gb
arg	10:47	10:48	3	2
water	10:47	0:0	4	2
water	10:49	0:0	2	;
if	11:4	14:4	2	(! s -> chroma_format)
cond	11:8	11:12	3	! s -> chroma_format
op	11:8	0:0	4	!
water	11:9	0:0	4	s
op	11:10	0:0	4	->
water	11:12	0:0	4	chroma_format
stmts	11:27	14:4	3	
water	11:27	0:0	4	{
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	chroma_format
op	12:25	0:0	4	=
water	12:27	0:0	4	1
water	12:28	0:0	4	;
call	13:8	13:66	4	av_log
arg	13:15	13:23	5	s->avctx
water	13:15	0:0	6	s
op	13:16	0:0	6	->
water	13:18	0:0	6	avctx
arg	13:25	13:39	5	AV_LOG_WARNING
water	13:25	0:0	6	AV_LOG_WARNING
arg	13:41	13:66	5	"Chroma format invalid\n"
water	13:41	0:0	6	"Chroma format invalid\n"
water	13:67	0:0	4	;
water	14:4	0:0	4	}
water	15:4	0:0	2	horiz_size_ext
op	15:28	0:0	2	=
call	15:30	15:48	2	get_bits
arg	15:39	15:45	3	&s->gb
op	15:39	0:0	4	&
water	15:40	0:0	4	s
op	15:41	0:0	4	->
water	15:43	0:0	4	gb
arg	15:47	15:48	3	2
water	15:47	0:0	4	2
water	15:49	0:0	2	;
water	16:4	0:0	2	vert_size_ext
op	16:28	0:0	2	=
call	16:30	16:48	2	get_bits
arg	16:39	16:45	3	&s->gb
op	16:39	0:0	4	&
water	16:40	0:0	4	s
op	16:41	0:0	4	->
water	16:43	0:0	4	gb
arg	16:47	16:48	3	2
water	16:47	0:0	4	2
water	16:49	0:0	2	;
water	17:4	0:0	2	s
op	17:5	0:0	2	->
water	17:7	0:0	2	width
op	17:14	0:0	2	|=
water	17:17	0:0	2	(
water	17:18	0:0	2	horiz_size_ext
op	17:33	0:0	2	<<
water	17:36	0:0	2	12
water	17:38	0:0	2	)
water	17:39	0:0	2	;
water	18:4	0:0	2	s
op	18:5	0:0	2	->
water	18:7	0:0	2	height
op	18:14	0:0	2	|=
water	18:17	0:0	2	(
water	18:18	0:0	2	vert_size_ext
op	18:33	0:0	2	<<
water	18:36	0:0	2	12
water	18:38	0:0	2	)
water	18:39	0:0	2	;
water	19:4	0:0	2	bit_rate_ext
op	19:17	0:0	2	=
call	19:19	19:38	2	get_bits
arg	19:28	19:34	3	&s->gb
op	19:28	0:0	4	&
water	19:29	0:0	4	s
op	19:30	0:0	4	->
water	19:32	0:0	4	gb
arg	19:36	19:38	3	12
water	19:36	0:0	4	12
water	19:39	0:0	2	;
water	20:4	0:0	2	s
op	20:5	0:0	2	->
water	20:7	0:0	2	bit_rate
op	20:16	0:0	2	+=
water	20:19	0:0	2	(
water	20:20	0:0	2	bit_rate_ext
op	20:33	0:0	2	<<
water	20:36	0:0	2	18
water	20:38	0:0	2	)
op	20:40	0:0	2	*
water	20:42	0:0	2	400
water	20:45	0:0	2	LL
water	20:47	0:0	2	;
call	21:4	21:51	2	check_marker
arg	21:17	21:23	3	&s->gb
op	21:17	0:0	4	&
water	21:18	0:0	4	s
op	21:19	0:0	4	->
water	21:21	0:0	4	gb
arg	21:25	21:51	3	"after bit rate extension"
water	21:25	0:0	4	"after bit rate extension"
water	21:52	0:0	2	;
water	22:4	0:0	2	s
op	22:5	0:0	2	->
water	22:7	0:0	2	avctx
op	22:12	0:0	2	->
water	22:14	0:0	2	rc_buffer_size
op	22:29	0:0	2	+=
call	22:32	22:50	2	get_bits
arg	22:41	22:47	3	&s->gb
op	22:41	0:0	4	&
water	22:42	0:0	4	s
op	22:43	0:0	4	->
water	22:45	0:0	4	gb
arg	22:49	22:50	3	8
water	22:49	0:0	4	8
op	22:52	0:0	2	*
water	22:54	0:0	2	1024
op	22:59	0:0	2	*
water	22:61	0:0	2	16
op	22:64	0:0	2	<<
water	22:67	0:0	2	10
water	22:69	0:0	2	;
water	23:4	0:0	2	s
op	23:5	0:0	2	->
water	23:7	0:0	2	low_delay
op	23:17	0:0	2	=
call	23:19	23:35	2	get_bits1
arg	23:29	23:35	3	&s->gb
op	23:29	0:0	4	&
water	23:30	0:0	4	s
op	23:31	0:0	4	->
water	23:33	0:0	4	gb
water	23:36	0:0	2	;
if	24:4	25:24	2	(s -> avctx -> flags & AV_CODEC_FLAG_LOW_DELAY)
cond	24:8	24:26	3	s -> avctx -> flags & AV_CODEC_FLAG_LOW_DELAY
water	24:8	0:0	4	s
op	24:9	0:0	4	->
water	24:11	0:0	4	avctx
op	24:16	0:0	4	->
water	24:18	0:0	4	flags
op	24:24	0:0	4	&
water	24:26	0:0	4	AV_CODEC_FLAG_LOW_DELAY
stmts	25:8	25:24	3	
water	25:8	0:0	4	s
op	25:9	0:0	4	->
water	25:11	0:0	4	low_delay
op	25:21	0:0	4	=
water	25:23	0:0	4	1
water	25:24	0:0	4	;
water	26:4	0:0	2	s1
op	26:6	0:0	2	->
water	26:8	0:0	2	frame_rate_ext
op	26:22	0:0	2	.
water	26:23	0:0	2	num
op	26:27	0:0	2	=
call	26:29	26:47	2	get_bits
arg	26:38	26:44	3	&s->gb
op	26:38	0:0	4	&
water	26:39	0:0	4	s
op	26:40	0:0	4	->
water	26:42	0:0	4	gb
arg	26:46	26:47	3	2
water	26:46	0:0	4	2
op	26:49	0:0	2	+
water	26:51	0:0	2	1
water	26:52	0:0	2	;
water	27:4	0:0	2	s1
op	27:6	0:0	2	->
water	27:8	0:0	2	frame_rate_ext
op	27:22	0:0	2	.
water	27:23	0:0	2	den
op	27:27	0:0	2	=
call	27:29	27:47	2	get_bits
arg	27:38	27:44	3	&s->gb
op	27:38	0:0	4	&
water	27:39	0:0	4	s
op	27:40	0:0	4	->
water	27:42	0:0	4	gb
arg	27:46	27:47	3	5
water	27:46	0:0	4	5
op	27:49	0:0	2	+
water	27:51	0:0	2	1
water	27:52	0:0	2	;
call	28:4	28:44	2	ff_dlog
arg	28:12	28:20	3	s->avctx
water	28:12	0:0	4	s
op	28:13	0:0	4	->
water	28:15	0:0	4	avctx
arg	28:22	28:44	3	"sequence extension\n"
water	28:22	0:0	4	"sequence extension\n"
water	28:45	0:0	2	;
water	29:4	0:0	2	s
op	29:5	0:0	2	->
water	29:7	0:0	2	codec_id
op	29:16	0:0	2	=
water	29:18	0:0	2	s
op	29:19	0:0	2	->
water	29:21	0:0	2	avctx
op	29:26	0:0	2	->
water	29:28	0:0	2	codec_id
op	29:37	0:0	2	=
water	29:39	0:0	2	AV_CODEC_ID_MPEG2VIDEO
water	29:61	0:0	2	;
if	30:4	34:53	2	(s -> avctx -> debug & FF_DEBUG_PICT_INFO)
cond	30:8	30:26	3	s -> avctx -> debug & FF_DEBUG_PICT_INFO
water	30:8	0:0	4	s
op	30:9	0:0	4	->
water	30:11	0:0	4	avctx
op	30:16	0:0	4	->
water	30:18	0:0	4	debug
op	30:24	0:0	4	&
water	30:26	0:0	4	FF_DEBUG_PICT_INFO
stmts	31:8	34:53	3	
call	31:8	34:52	4	av_log
arg	31:15	31:23	5	s->avctx
water	31:15	0:0	6	s
op	31:16	0:0	6	->
water	31:18	0:0	6	avctx
arg	31:25	31:37	5	AV_LOG_DEBUG
water	31:25	0:0	6	AV_LOG_DEBUG
arg	32:15	32:88	5	"profile: %d, level: %d ps: %d cf:%d vbv buffer: %d, bitrate:%"PRId64"\n"
water	32:15	0:0	6	"profile: %d, level: %d ps: %d cf:%d vbv buffer: %d, bitrate:%"
water	32:78	0:0	6	PRId64
water	32:84	0:0	6	"\n"
arg	33:15	33:32	5	s->avctx->profile
water	33:15	0:0	6	s
op	33:16	0:0	6	->
water	33:18	0:0	6	avctx
op	33:23	0:0	6	->
water	33:25	0:0	6	profile
arg	33:34	33:49	5	s->avctx->level
water	33:34	0:0	6	s
op	33:35	0:0	6	->
water	33:37	0:0	6	avctx
op	33:42	0:0	6	->
water	33:44	0:0	6	level
arg	33:51	33:74	5	s->progressive_sequence
water	33:51	0:0	6	s
op	33:52	0:0	6	->
water	33:54	0:0	6	progressive_sequence
arg	33:76	33:92	5	s->chroma_format
water	33:76	0:0	6	s
op	33:77	0:0	6	->
water	33:79	0:0	6	chroma_format
arg	34:15	34:39	5	s->avctx->rc_buffer_size
water	34:15	0:0	6	s
op	34:16	0:0	6	->
water	34:18	0:0	6	avctx
op	34:23	0:0	6	->
water	34:25	0:0	6	rc_buffer_size
arg	34:41	34:52	5	s->bit_rate
water	34:41	0:0	6	s
op	34:42	0:0	6	->
water	34:44	0:0	6	bit_rate
water	34:53	0:0	4	;

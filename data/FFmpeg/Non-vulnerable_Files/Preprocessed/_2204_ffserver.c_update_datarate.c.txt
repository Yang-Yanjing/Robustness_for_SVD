func	1:0	12:0	0	static void	update_datarate
params	1:27	0:0	1	
param	1:28	1:45	2	DataRateData *	drd
param	1:47	1:60	2	int64_t	count
stmnts	3:4	11:4	1	
if	3:4	6:4	2	(! drd -> time1 && ! drd -> count1)
cond	3:8	3:29	3	! drd -> time1 && ! drd -> count1
op	3:8	0:0	4	!
water	3:9	0:0	4	drd
op	3:12	0:0	4	->
water	3:14	0:0	4	time1
op	3:20	0:0	4	&&
op	3:23	0:0	4	!
water	3:24	0:0	4	drd
op	3:27	0:0	4	->
water	3:29	0:0	4	count1
stmts	3:37	6:4	3	
water	3:37	0:0	4	{
water	4:8	0:0	4	drd
op	4:11	0:0	4	->
water	4:13	0:0	4	time1
op	4:19	0:0	4	=
water	4:21	0:0	4	drd
op	4:24	0:0	4	->
water	4:26	0:0	4	time2
op	4:32	0:0	4	=
water	4:34	0:0	4	cur_time
water	4:42	0:0	4	;
water	5:8	0:0	4	drd
op	5:11	0:0	4	->
water	5:13	0:0	4	count1
op	5:20	0:0	4	=
water	5:22	0:0	4	drd
op	5:25	0:0	4	->
water	5:27	0:0	4	count2
op	5:34	0:0	4	=
water	5:36	0:0	4	count
water	5:41	0:0	4	;
water	6:4	0:0	4	}
else	6:6	11:4	2
stmts	6:11	11:4	3	
if	6:11	11:4	4	(cur_time - drd -> time2 > 5000)
cond	6:15	6:39	5	cur_time - drd -> time2 > 5000
water	6:15	0:0	6	cur_time
op	6:24	0:0	6	-
water	6:26	0:0	6	drd
op	6:29	0:0	6	->
water	6:31	0:0	6	time2
op	6:37	0:0	6	>
water	6:39	0:0	6	5000
stmts	6:45	11:4	5	
water	6:45	0:0	6	{
water	7:8	0:0	6	drd
op	7:11	0:0	6	->
water	7:13	0:0	6	time1
op	7:19	0:0	6	=
water	7:21	0:0	6	drd
op	7:24	0:0	6	->
water	7:26	0:0	6	time2
water	7:31	0:0	6	;
water	8:8	0:0	6	drd
op	8:11	0:0	6	->
water	8:13	0:0	6	count1
op	8:20	0:0	6	=
water	8:22	0:0	6	drd
op	8:25	0:0	6	->
water	8:27	0:0	6	count2
water	8:33	0:0	6	;
water	9:8	0:0	6	drd
op	9:11	0:0	6	->
water	9:13	0:0	6	time2
op	9:19	0:0	6	=
water	9:21	0:0	6	cur_time
water	9:29	0:0	6	;
water	10:8	0:0	6	drd
op	10:11	0:0	6	->
water	10:13	0:0	6	count2
op	10:20	0:0	6	=
water	10:22	0:0	6	count
water	10:27	0:0	6	;
water	11:4	0:0	6	}

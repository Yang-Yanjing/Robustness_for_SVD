func	1:0	35:0	0	static int	load_encode_and_write
params	1:32	0:0	1	
param	1:33	1:50	2	AVAudioFifo *	fifo
param	2:33	2:71	2	AVFormatContext *	output_format_context
param	3:33	3:69	2	AVCodecContext *	output_codec_context
stmnts	0:0	34:12	1	
decl	6:4	6:25	2	AVFrame	*output_frame
decl	12:4	13:66	2	const int	frame_size
op	12:25	0:0	2	=
call	12:27	13:65	3	FFMIN
arg	12:33	12:57	4	av_audio_fifo_size(fifo)
call	12:33	12:56	5	av_audio_fifo_size
arg	12:52	12:56	6	fifo
water	12:52	0:0	7	fifo
arg	13:33	13:65	4	output_codec_context->frame_size
water	13:33	0:0	5	output_codec_context
op	13:53	0:0	5	->
water	13:55	0:0	5	frame_size
decl	14:4	14:20	2	int	data_written
if	16:4	17:27	2	(init_output_frame (& output_frame ,output_codec_context ,frame_size ))
cond	16:8	16:73	3	init_output_frame (& output_frame ,output_codec_context ,frame_size )
call	16:8	16:73	4	init_output_frame
arg	16:26	16:39	5	&output_frame
op	16:26	0:0	6	&
water	16:27	0:0	6	output_frame
arg	16:41	16:61	5	output_codec_context
water	16:41	0:0	6	output_codec_context
arg	16:63	16:73	5	frame_size
water	16:63	0:0	6	frame_size
stmts	17:8	17:27	3	
return	17:8	17:27	4	AVERROR_EXIT
water	17:15	0:0	5	AVERROR_EXIT
if	22:4	26:4	2	(av_audio_fifo_read (fifo ,( void * * ) output_frame -> data ,frame_size ) < frame_size)
cond	22:8	22:76	3	av_audio_fifo_read (fifo ,( void * * ) output_frame -> data ,frame_size ) < frame_size
call	22:8	22:72	4	av_audio_fifo_read
arg	22:27	22:31	5	fifo
water	22:27	0:0	6	fifo
arg	22:33	22:60	5	(void**)output_frame->data
water	22:33	0:0	6	(
water	22:34	0:0	6	void
op	22:39	0:0	6	*
op	22:40	0:0	6	*
water	22:41	0:0	6	)
water	22:42	0:0	6	output_frame
op	22:54	0:0	6	->
water	22:56	0:0	6	data
arg	22:62	22:72	5	frame_size
water	22:62	0:0	6	frame_size
op	22:74	0:0	4	<
water	22:76	0:0	4	frame_size
stmts	22:88	26:4	3	
water	22:88	0:0	4	{
call	23:8	23:57	4	fprintf
arg	23:16	23:22	5	stderr
water	23:16	0:0	6	stderr
arg	23:24	23:57	5	"Could not read data from FIFO\n"
water	23:24	0:0	6	"Could not read data from FIFO\n"
water	23:58	0:0	4	;
call	24:8	24:35	4	av_frame_free
arg	24:22	24:35	5	&output_frame
op	24:22	0:0	6	&
water	24:23	0:0	6	output_frame
water	24:36	0:0	4	;
return	25:8	25:27	4	AVERROR_EXIT
water	25:15	0:0	5	AVERROR_EXIT
water	26:4	0:0	4	}
if	28:4	32:4	2	(encode_audio_frame (output_frame ,output_format_context ,output_codec_context ,& data_written ))
cond	28:8	29:62	3	encode_audio_frame (output_frame ,output_format_context ,output_codec_context ,& data_written )
call	28:8	29:62	4	encode_audio_frame
arg	28:27	28:39	5	output_frame
water	28:27	0:0	6	output_frame
arg	28:41	28:62	5	output_format_context
water	28:41	0:0	6	output_format_context
arg	29:27	29:47	5	output_codec_context
water	29:27	0:0	6	output_codec_context
arg	29:49	29:62	5	&data_written
op	29:49	0:0	6	&
water	29:50	0:0	6	data_written
stmts	29:65	32:4	3	
water	29:65	0:0	4	{
call	30:8	30:35	4	av_frame_free
arg	30:22	30:35	5	&output_frame
op	30:22	0:0	6	&
water	30:23	0:0	6	output_frame
water	30:36	0:0	4	;
return	31:8	31:27	4	AVERROR_EXIT
water	31:15	0:0	5	AVERROR_EXIT
water	32:4	0:0	4	}
call	33:4	33:31	2	av_frame_free
arg	33:18	33:31	3	&output_frame
op	33:18	0:0	4	&
water	33:19	0:0	4	output_frame
water	33:32	0:0	2	;
return	34:4	34:12	2	0
water	34:11	0:0	3	0

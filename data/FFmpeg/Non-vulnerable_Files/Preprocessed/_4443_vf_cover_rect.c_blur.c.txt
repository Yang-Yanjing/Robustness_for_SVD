func	1:0	41:0	0	static void	blur
params	1:16	0:0	1	
param	1:17	1:36	2	CoverContext *	cover
param	1:38	1:49	2	AVFrame *	in
param	1:51	1:59	2	int	offx
param	1:61	1:69	2	int	offy
stmnts	0:0	40:4	1	
decl	3:4	3:15	2	int	x
water	3:9	0:0	2	,
decl	3:4	3:15	2	int	y
water	3:12	0:0	2	,
decl	3:4	3:15	2	int	p
for	4:4	40:4	2	(p = 0 ;p < 3;p ++)
forinit	4:9	4:12	3	p = 0 ;
water	4:9	0:0	4	p
op	4:10	0:0	4	=
water	4:11	0:0	4	0
water	4:12	0:0	4	;
cond	4:14	4:16	3	p < 3
water	4:14	0:0	4	p
op	4:15	0:0	4	<
water	4:16	0:0	4	3
forexpr	4:19	4:20	3	p ++
water	4:19	0:0	4	p
op	4:20	0:0	4	++
stmts	4:24	40:4	3	
water	4:24	0:0	4	{
decl	5:8	5:26	4	int	ox
op	5:15	0:0	4	=
water	5:17	0:0	4	offx
op	5:21	0:0	4	>>
op	5:23	0:0	4	!
op	5:24	0:0	4	!
water	5:25	0:0	4	p
decl	6:8	6:26	4	int	oy
op	6:15	0:0	4	=
water	6:17	0:0	4	offy
op	6:21	0:0	4	>>
op	6:23	0:0	4	!
op	6:24	0:0	4	!
water	6:25	0:0	4	p
decl	7:8	7:36	4	int	stride
op	7:19	0:0	4	=
water	7:21	0:0	4	in
op	7:23	0:0	4	->
water	7:25	0:0	4	linesize
op	7:33	0:0	4	[
water	7:34	0:0	4	p
op	7:35	0:0	4	]
decl	8:8	8:54	4	uint8_t	*data
op	8:22	0:0	4	=
water	8:24	0:0	4	in
op	8:26	0:0	4	->
water	8:28	0:0	4	data
op	8:32	0:0	4	[
water	8:33	0:0	4	p
op	8:34	0:0	4	]
op	8:36	0:0	4	+
water	8:38	0:0	4	ox
op	8:41	0:0	4	+
water	8:43	0:0	4	oy
op	8:46	0:0	4	*
water	8:48	0:0	4	stride
decl	9:8	9:50	4	int	w
op	9:14	0:0	4	=
call	9:16	9:49	5	FF_CEIL_RSHIFT
arg	9:31	9:44	6	cover->width
water	9:31	0:0	7	cover
op	9:36	0:0	7	->
water	9:38	0:0	7	width
arg	9:46	9:49	6	!!p
op	9:46	0:0	7	!
op	9:47	0:0	7	!
water	9:48	0:0	7	p
decl	10:8	10:50	4	int	h
op	10:14	0:0	4	=
call	10:16	10:49	5	FF_CEIL_RSHIFT
arg	10:31	10:44	6	cover->height
water	10:31	0:0	7	cover
op	10:36	0:0	7	->
water	10:38	0:0	7	height
arg	10:46	10:49	6	!!p
op	10:46	0:0	7	!
op	10:47	0:0	7	!
water	10:48	0:0	7	p
decl	11:8	11:48	4	int	iw
op	11:15	0:0	4	=
call	11:17	11:47	5	FF_CEIL_RSHIFT
arg	11:32	11:42	6	in->width
water	11:32	0:0	7	in
op	11:34	0:0	7	->
water	11:36	0:0	7	width
arg	11:44	11:47	6	!!p
op	11:44	0:0	7	!
op	11:45	0:0	7	!
water	11:46	0:0	7	p
decl	12:8	12:48	4	int	ih
op	12:15	0:0	4	=
call	12:17	12:47	5	FF_CEIL_RSHIFT
arg	12:32	12:42	6	in->height
water	12:32	0:0	7	in
op	12:34	0:0	7	->
water	12:36	0:0	7	height
arg	12:44	12:47	6	!!p
op	12:44	0:0	7	!
op	12:45	0:0	7	!
water	12:46	0:0	7	p
for	13:8	39:8	4	(y = 0 ;y < h;y ++)
forinit	13:13	13:18	5	y = 0 ;
water	13:13	0:0	6	y
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:24	5	y < h
water	13:20	0:0	6	y
op	13:22	0:0	6	<
water	13:24	0:0	6	h
forexpr	13:27	13:28	5	y ++
water	13:27	0:0	6	y
op	13:28	0:0	6	++
stmts	13:32	39:8	5	
water	13:32	0:0	6	{
for	14:12	38:12	6	(x = 0 ;x < w;x ++)
forinit	14:17	14:22	7	x = 0 ;
water	14:17	0:0	8	x
op	14:19	0:0	8	=
water	14:21	0:0	8	0
water	14:22	0:0	8	;
cond	14:24	14:28	7	x < w
water	14:24	0:0	8	x
op	14:26	0:0	8	<
water	14:28	0:0	8	w
forexpr	14:31	14:32	7	x ++
water	14:31	0:0	8	x
op	14:32	0:0	8	++
stmts	14:36	38:12	7	
water	14:36	0:0	8	{
decl	15:16	15:25	8	int	c
op	15:22	0:0	8	=
water	15:24	0:0	8	0
decl	16:16	16:25	8	int	s
op	16:22	0:0	8	=
water	16:24	0:0	8	0
if	17:16	21:16	8	(ox)
cond	17:20	17:20	9	ox
water	17:20	0:0	10	ox
stmts	17:24	21:16	9	
water	17:24	0:0	10	{
decl	18:20	18:47	10	int	scale
op	18:30	0:0	10	=
water	18:32	0:0	10	65536
op	18:38	0:0	10	/
water	18:40	0:0	10	(
water	18:41	0:0	10	x
op	18:43	0:0	10	+
water	18:45	0:0	10	1
water	18:46	0:0	10	)
water	19:20	0:0	10	s
op	19:22	0:0	10	+=
water	19:25	0:0	10	data
op	19:29	0:0	10	[
op	19:30	0:0	10	-
water	19:31	0:0	10	1
op	19:33	0:0	10	+
water	19:35	0:0	10	y
op	19:36	0:0	10	*
water	19:37	0:0	10	stride
op	19:43	0:0	10	]
op	19:45	0:0	10	*
water	19:47	0:0	10	scale
water	19:52	0:0	10	;
water	20:20	0:0	10	c
op	20:22	0:0	10	+=
water	20:25	0:0	10	scale
water	20:30	0:0	10	;
water	21:16	0:0	10	}
if	22:16	26:16	8	(oy)
cond	22:20	22:20	9	oy
water	22:20	0:0	10	oy
stmts	22:24	26:16	9	
water	22:24	0:0	10	{
decl	23:20	23:47	10	int	scale
op	23:30	0:0	10	=
water	23:32	0:0	10	65536
op	23:38	0:0	10	/
water	23:40	0:0	10	(
water	23:41	0:0	10	y
op	23:43	0:0	10	+
water	23:45	0:0	10	1
water	23:46	0:0	10	)
water	24:20	0:0	10	s
op	24:22	0:0	10	+=
water	24:25	0:0	10	data
op	24:29	0:0	10	[
water	24:30	0:0	10	x
op	24:32	0:0	10	-
water	24:34	0:0	10	stride
op	24:40	0:0	10	]
op	24:42	0:0	10	*
water	24:44	0:0	10	scale
water	24:49	0:0	10	;
water	25:20	0:0	10	c
op	25:22	0:0	10	+=
water	25:25	0:0	10	scale
water	25:30	0:0	10	;
water	26:16	0:0	10	}
if	27:16	31:16	8	(ox + w < iw)
cond	27:20	27:29	9	ox + w < iw
water	27:20	0:0	10	ox
op	27:23	0:0	10	+
water	27:25	0:0	10	w
op	27:27	0:0	10	<
water	27:29	0:0	10	iw
stmts	27:33	31:16	9	
water	27:33	0:0	10	{
decl	28:20	28:47	10	int	scale
op	28:30	0:0	10	=
water	28:32	0:0	10	65536
op	28:38	0:0	10	/
water	28:40	0:0	10	(
water	28:41	0:0	10	w
op	28:43	0:0	10	-
water	28:45	0:0	10	x
water	28:46	0:0	10	)
water	29:20	0:0	10	s
op	29:22	0:0	10	+=
water	29:25	0:0	10	data
op	29:29	0:0	10	[
water	29:30	0:0	10	w
op	29:32	0:0	10	+
water	29:34	0:0	10	y
op	29:35	0:0	10	*
water	29:36	0:0	10	stride
op	29:42	0:0	10	]
op	29:44	0:0	10	*
water	29:46	0:0	10	scale
water	29:51	0:0	10	;
water	30:20	0:0	10	c
op	30:22	0:0	10	+=
water	30:25	0:0	10	scale
water	30:30	0:0	10	;
water	31:16	0:0	10	}
if	32:16	36:16	8	(oy + h < ih)
cond	32:20	32:29	9	oy + h < ih
water	32:20	0:0	10	oy
op	32:23	0:0	10	+
water	32:25	0:0	10	h
op	32:27	0:0	10	<
water	32:29	0:0	10	ih
stmts	32:33	36:16	9	
water	32:33	0:0	10	{
decl	33:20	33:47	10	int	scale
op	33:30	0:0	10	=
water	33:32	0:0	10	65536
op	33:38	0:0	10	/
water	33:40	0:0	10	(
water	33:41	0:0	10	h
op	33:43	0:0	10	-
water	33:45	0:0	10	y
water	33:46	0:0	10	)
water	34:20	0:0	10	s
op	34:22	0:0	10	+=
water	34:25	0:0	10	data
op	34:29	0:0	10	[
water	34:30	0:0	10	x
op	34:32	0:0	10	+
water	34:34	0:0	10	h
op	34:35	0:0	10	*
water	34:36	0:0	10	stride
op	34:42	0:0	10	]
op	34:44	0:0	10	*
water	34:46	0:0	10	scale
water	34:51	0:0	10	;
water	35:20	0:0	10	c
op	35:22	0:0	10	+=
water	35:25	0:0	10	scale
water	35:30	0:0	10	;
water	36:16	0:0	10	}
water	37:16	0:0	8	data
op	37:20	0:0	8	[
water	37:21	0:0	8	x
op	37:23	0:0	8	+
water	37:25	0:0	8	y
op	37:26	0:0	8	*
water	37:27	0:0	8	stride
op	37:33	0:0	8	]
op	37:35	0:0	8	=
water	37:37	0:0	8	c
water	37:39	0:0	8	?
water	37:41	0:0	8	(
water	37:42	0:0	8	s
op	37:44	0:0	8	+
water	37:46	0:0	8	(
water	37:47	0:0	8	c
op	37:48	0:0	8	>>
water	37:50	0:0	8	1
water	37:51	0:0	8	)
water	37:52	0:0	8	)
op	37:54	0:0	8	/
water	37:56	0:0	8	c
water	37:58	0:0	8	:
water	37:60	0:0	8	0
water	37:61	0:0	8	;
water	38:12	0:0	8	}
water	39:8	0:0	6	}
water	40:4	0:0	4	}

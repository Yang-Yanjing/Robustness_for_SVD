func	1:0	23:0	0	static void	subband_scale
params	1:25	0:0	1	
param	1:26	1:34	2	int *	dst
param	1:36	1:44	2	int *	src
param	1:46	1:55	2	int	scale
param	1:57	1:67	2	int	offset
param	1:69	1:76	2	int	len
stmnts	0:0	22:4	1	
decl	3:4	3:34	2	int	ssign
op	3:14	0:0	2	=
water	3:16	0:0	2	scale
op	3:22	0:0	2	<
water	3:24	0:0	2	0
water	3:26	0:0	2	?
op	3:28	0:0	2	-
water	3:29	0:0	2	1
water	3:31	0:0	2	:
water	3:33	0:0	2	1
decl	4:4	4:24	2	int	s
op	4:10	0:0	2	=
call	4:12	4:23	3	FFABS
arg	4:18	4:23	4	scale
water	4:18	0:0	5	scale
decl	5:4	5:22	2	unsigned int	round
decl	6:4	6:34	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:34	2	int	out
water	6:14	0:0	2	,
decl	6:4	6:34	2	int	c
op	6:18	0:0	2	=
water	6:20	0:0	2	exp2tab
op	6:27	0:0	2	[
water	6:28	0:0	2	s
op	6:30	0:0	2	&
water	6:32	0:0	2	3
op	6:33	0:0	2	]
water	7:4	0:0	2	s
op	7:6	0:0	2	=
water	7:8	0:0	2	offset
op	7:15	0:0	2	-
water	7:17	0:0	2	(
water	7:18	0:0	2	s
op	7:20	0:0	2	>>
water	7:23	0:0	2	2
water	7:24	0:0	2	)
water	7:25	0:0	2	;
if	8:4	14:4	2	(s > 0)
cond	8:8	8:12	3	s > 0
water	8:8	0:0	4	s
op	8:10	0:0	4	>
water	8:12	0:0	4	0
stmts	8:15	14:4	3	
water	8:15	0:0	4	{
water	9:8	0:0	4	round
op	9:14	0:0	4	=
water	9:16	0:0	4	1
op	9:18	0:0	4	<<
water	9:21	0:0	4	(
water	9:22	0:0	4	s
op	9:23	0:0	4	-
water	9:24	0:0	4	1
water	9:25	0:0	4	)
water	9:26	0:0	4	;
for	10:8	13:8	4	(i = 0 ;i < len;i ++)
forinit	10:13	10:16	5	i = 0 ;
water	10:13	0:0	6	i
op	10:14	0:0	6	=
water	10:15	0:0	6	0
water	10:16	0:0	6	;
cond	10:18	10:20	5	i < len
water	10:18	0:0	6	i
op	10:19	0:0	6	<
water	10:20	0:0	6	len
forexpr	10:25	10:26	5	i ++
water	10:25	0:0	6	i
op	10:26	0:0	6	++
stmts	10:30	13:8	5	
water	10:30	0:0	6	{
water	11:12	0:0	6	out
op	11:16	0:0	6	=
call	11:18	11:51	6	(int)
arg	11:24	11:51	7	((int64_t)src[i]*c)>>32
water	11:24	0:0	8	(
water	11:25	0:0	8	(
water	11:26	0:0	8	int64_t
water	11:33	0:0	8	)
water	11:34	0:0	8	src
op	11:37	0:0	8	[
water	11:38	0:0	8	i
op	11:39	0:0	8	]
op	11:41	0:0	8	*
water	11:43	0:0	8	c
water	11:44	0:0	8	)
op	11:46	0:0	8	>>
water	11:49	0:0	8	32
water	11:52	0:0	6	;
water	12:12	0:0	6	dst
op	12:15	0:0	6	[
water	12:16	0:0	6	i
op	12:17	0:0	6	]
op	12:19	0:0	6	=
water	12:21	0:0	6	(
call	12:22	12:37	6	(int)
arg	12:28	12:37	7	out+round
water	12:28	0:0	8	out
op	12:31	0:0	8	+
water	12:32	0:0	8	round
op	12:39	0:0	6	>>
water	12:42	0:0	6	s
water	12:43	0:0	6	)
op	12:45	0:0	6	*
water	12:47	0:0	6	ssign
water	12:52	0:0	6	;
water	13:8	0:0	6	}
water	14:4	0:0	4	}
else	15:4	22:4	2
stmts	15:9	22:4	3	
water	15:9	0:0	4	{
water	16:8	0:0	4	s
op	16:10	0:0	4	=
water	16:12	0:0	4	s
op	16:14	0:0	4	+
water	16:16	0:0	4	32
water	16:18	0:0	4	;
water	17:8	0:0	4	round
op	17:14	0:0	4	=
water	17:16	0:0	4	1
op	17:18	0:0	4	<<
water	17:21	0:0	4	(
water	17:22	0:0	4	s
op	17:23	0:0	4	-
water	17:24	0:0	4	1
water	17:25	0:0	4	)
water	17:26	0:0	4	;
for	18:8	21:8	4	(i = 0 ;i < len;i ++)
forinit	18:13	18:16	5	i = 0 ;
water	18:13	0:0	6	i
op	18:14	0:0	6	=
water	18:15	0:0	6	0
water	18:16	0:0	6	;
cond	18:18	18:20	5	i < len
water	18:18	0:0	6	i
op	18:19	0:0	6	<
water	18:20	0:0	6	len
forexpr	18:25	18:26	5	i ++
water	18:25	0:0	6	i
op	18:26	0:0	6	++
stmts	18:30	21:8	5	
water	18:30	0:0	6	{
water	19:12	0:0	6	out
op	19:16	0:0	6	=
call	19:18	19:67	6	(int)
arg	19:24	19:67	7	(int64_t)((int64_t)src[i]*c+round)>>s
call	19:24	19:61	8	(int64_t)
arg	19:34	19:61	9	(int64_t)src[i]*c+round
water	19:34	0:0	10	(
water	19:35	0:0	10	int64_t
water	19:42	0:0	10	)
water	19:43	0:0	10	src
op	19:46	0:0	10	[
water	19:47	0:0	10	i
op	19:48	0:0	10	]
op	19:50	0:0	10	*
water	19:52	0:0	10	c
op	19:54	0:0	10	+
water	19:56	0:0	10	round
op	19:63	0:0	8	>>
water	19:66	0:0	8	s
water	19:68	0:0	6	;
water	20:12	0:0	6	dst
op	20:15	0:0	6	[
water	20:16	0:0	6	i
op	20:17	0:0	6	]
op	20:19	0:0	6	=
water	20:21	0:0	6	out
op	20:25	0:0	6	*
water	20:27	0:0	6	ssign
water	20:32	0:0	6	;
water	21:8	0:0	6	}
water	22:4	0:0	4	}

func	1:0	38:0	0	int	ff_audio_data_init
params	1:22	0:0	1	
param	1:23	1:35	2	AudioData *	a
param	1:37	1:50	2	uint8_t * *	src
param	1:52	1:66	2	int	plane_size
param	1:68	1:80	2	int	channels
param	2:23	2:37	2	int	nb_samples
param	2:39	2:69	2	enum AVSampleFormat	sample_fmt
param	3:23	3:36	2	int	read_only
param	3:38	3:54	2	const char *	name
stmnts	0:0	37:12	1	
decl	5:4	5:9	2	int	p
call	6:4	6:27	2	memset
arg	6:11	6:12	3	a
water	6:11	0:0	4	a
arg	6:14	6:15	3	0
water	6:14	0:0	4	0
arg	6:17	6:27	3	sizeof(*a)
op	6:17	0:0	4	sizeof
water	6:23	0:0	4	(
op	6:24	0:0	4	*
water	6:25	0:0	4	a
water	6:26	0:0	4	)
water	6:28	0:0	2	;
water	7:4	0:0	2	a
op	7:5	0:0	2	->
water	7:7	0:0	2	class
op	7:13	0:0	2	=
op	7:15	0:0	2	&
water	7:16	0:0	2	audio_data_class
water	7:32	0:0	2	;
if	8:4	11:4	2	(channels < 1 || channels > AVRESAMPLE_MAX_CHANNELS)
cond	8:8	8:35	3	channels < 1 || channels > AVRESAMPLE_MAX_CHANNELS
water	8:8	0:0	4	channels
op	8:17	0:0	4	<
water	8:19	0:0	4	1
op	8:21	0:0	4	||
water	8:24	0:0	4	channels
op	8:33	0:0	4	>
water	8:35	0:0	4	AVRESAMPLE_MAX_CHANNELS
stmts	8:60	11:4	3	
water	8:60	0:0	4	{
call	9:8	9:71	4	av_log
arg	9:15	9:16	5	a
water	9:15	0:0	6	a
arg	9:18	9:30	5	AV_LOG_ERROR
water	9:18	0:0	6	AV_LOG_ERROR
arg	9:32	9:61	5	"invalid channel count: %d\n"
water	9:32	0:0	6	"invalid channel count: %d\n"
arg	9:63	9:71	5	channels
water	9:63	0:0	6	channels
water	9:72	0:0	4	;
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
water	11:4	0:0	4	}
water	12:4	0:0	2	a
op	12:5	0:0	2	->
water	12:7	0:0	2	sample_size
op	12:19	0:0	2	=
call	12:21	12:55	2	av_get_bytes_per_sample
arg	12:45	12:55	3	sample_fmt
water	12:45	0:0	4	sample_fmt
water	12:56	0:0	2	;
if	13:4	16:4	2	(! a -> sample_size)
cond	13:8	13:12	3	! a -> sample_size
op	13:8	0:0	4	!
water	13:9	0:0	4	a
op	13:10	0:0	4	->
water	13:12	0:0	4	sample_size
stmts	13:25	16:4	3	
water	13:25	0:0	4	{
call	14:8	14:57	4	av_log
arg	14:15	14:16	5	a
water	14:15	0:0	6	a
arg	14:18	14:30	5	AV_LOG_ERROR
water	14:18	0:0	6	AV_LOG_ERROR
arg	14:32	14:57	5	"invalid sample format\n"
water	14:32	0:0	6	"invalid sample format\n"
water	14:58	0:0	4	;
return	15:8	15:30	4	AVERROR(EINVAL)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	EINVAL
water	15:23	0:0	7	EINVAL
water	16:4	0:0	4	}
water	17:4	0:0	2	a
op	17:5	0:0	2	->
water	17:7	0:0	2	is_planar
op	17:17	0:0	2	=
call	17:19	17:63	2	ff_sample_fmt_is_planar
arg	17:43	17:53	3	sample_fmt
water	17:43	0:0	4	sample_fmt
arg	17:55	17:63	3	channels
water	17:55	0:0	4	channels
water	17:64	0:0	2	;
water	18:4	0:0	2	a
op	18:5	0:0	2	->
water	18:7	0:0	2	planes
op	18:17	0:0	2	=
water	18:19	0:0	2	a
op	18:20	0:0	2	->
water	18:22	0:0	2	is_planar
water	18:32	0:0	2	?
water	18:34	0:0	2	channels
water	18:43	0:0	2	:
water	18:45	0:0	2	1
water	18:46	0:0	2	;
water	19:4	0:0	2	a
op	19:5	0:0	2	->
water	19:7	0:0	2	stride
op	19:17	0:0	2	=
water	19:19	0:0	2	a
op	19:20	0:0	2	->
water	19:22	0:0	2	sample_size
op	19:34	0:0	2	*
water	19:36	0:0	2	(
water	19:37	0:0	2	a
op	19:38	0:0	2	->
water	19:40	0:0	2	is_planar
water	19:50	0:0	2	?
water	19:52	0:0	2	1
water	19:54	0:0	2	:
water	19:56	0:0	2	channels
water	19:64	0:0	2	)
water	19:65	0:0	2	;
for	20:4	26:4	2	(p = 0 ;p < ( a -> is_planar ? channels : 1 );p ++)
forinit	20:9	20:14	3	p = 0 ;
water	20:9	0:0	4	p
op	20:11	0:0	4	=
water	20:13	0:0	4	0
water	20:14	0:0	4	;
cond	20:16	20:48	3	p < ( a -> is_planar ? channels : 1 )
water	20:16	0:0	4	p
op	20:18	0:0	4	<
water	20:20	0:0	4	(
water	20:21	0:0	4	a
op	20:22	0:0	4	->
water	20:24	0:0	4	is_planar
water	20:34	0:0	4	?
water	20:36	0:0	4	channels
water	20:45	0:0	4	:
water	20:47	0:0	4	1
water	20:48	0:0	4	)
forexpr	20:51	20:52	3	p ++
water	20:51	0:0	4	p
op	20:52	0:0	4	++
stmts	20:56	26:4	3	
water	20:56	0:0	4	{
if	21:8	24:8	4	(! src [ p ])
cond	21:12	21:18	5	! src [ p ]
op	21:12	0:0	6	!
water	21:13	0:0	6	src
op	21:16	0:0	6	[
water	21:17	0:0	6	p
op	21:18	0:0	6	]
stmts	21:21	24:8	5	
water	21:21	0:0	6	{
call	22:12	22:75	6	av_log
arg	22:19	22:20	7	a
water	22:19	0:0	8	a
arg	22:22	22:34	7	AV_LOG_ERROR
water	22:22	0:0	8	AV_LOG_ERROR
arg	22:36	22:72	7	"invalid NULL pointer for src[%d]\n"
water	22:36	0:0	8	"invalid NULL pointer for src[%d]\n"
arg	22:74	22:75	7	p
water	22:74	0:0	8	p
water	22:76	0:0	6	;
return	23:12	23:34	6	AVERROR(EINVAL)
call	23:19	23:33	7	AVERROR
arg	23:27	23:33	8	EINVAL
water	23:27	0:0	9	EINVAL
water	24:8	0:0	6	}
water	25:8	0:0	4	a
op	25:9	0:0	4	->
water	25:11	0:0	4	data
op	25:15	0:0	4	[
water	25:16	0:0	4	p
op	25:17	0:0	4	]
op	25:19	0:0	4	=
water	25:21	0:0	4	src
op	25:24	0:0	4	[
water	25:25	0:0	4	p
op	25:26	0:0	4	]
water	25:27	0:0	4	;
water	26:4	0:0	4	}
water	27:4	0:0	2	a
op	27:5	0:0	2	->
water	27:7	0:0	2	allocated_samples
op	27:26	0:0	2	=
water	27:28	0:0	2	nb_samples
op	27:39	0:0	2	*
op	27:41	0:0	2	!
water	27:42	0:0	2	read_only
water	27:51	0:0	2	;
water	28:4	0:0	2	a
op	28:5	0:0	2	->
water	28:7	0:0	2	nb_samples
op	28:26	0:0	2	=
water	28:28	0:0	2	nb_samples
water	28:38	0:0	2	;
water	29:4	0:0	2	a
op	29:5	0:0	2	->
water	29:7	0:0	2	sample_fmt
op	29:26	0:0	2	=
water	29:28	0:0	2	sample_fmt
water	29:38	0:0	2	;
water	30:4	0:0	2	a
op	30:5	0:0	2	->
water	30:7	0:0	2	channels
op	30:26	0:0	2	=
water	30:28	0:0	2	channels
water	30:36	0:0	2	;
water	31:4	0:0	2	a
op	31:5	0:0	2	->
water	31:7	0:0	2	allocated_channels
op	31:26	0:0	2	=
water	31:28	0:0	2	channels
water	31:36	0:0	2	;
water	32:4	0:0	2	a
op	32:5	0:0	2	->
water	32:7	0:0	2	read_only
op	32:26	0:0	2	=
water	32:28	0:0	2	read_only
water	32:37	0:0	2	;
water	33:4	0:0	2	a
op	33:5	0:0	2	->
water	33:7	0:0	2	allow_realloc
op	33:26	0:0	2	=
water	33:28	0:0	2	0
water	33:29	0:0	2	;
water	34:4	0:0	2	a
op	34:5	0:0	2	->
water	34:7	0:0	2	name
op	34:26	0:0	2	=
water	34:28	0:0	2	name
water	34:33	0:0	2	?
water	34:35	0:0	2	name
water	34:40	0:0	2	:
water	34:42	0:0	2	"{no name}"
water	34:53	0:0	2	;
call	35:4	35:24	2	calc_ptr_alignment
arg	35:23	35:24	3	a
water	35:23	0:0	4	a
water	35:25	0:0	2	;
water	36:4	0:0	2	a
op	36:5	0:0	2	->
water	36:7	0:0	2	samples_align
op	36:21	0:0	2	=
water	36:23	0:0	2	plane_size
op	36:34	0:0	2	/
water	36:36	0:0	2	a
op	36:37	0:0	2	->
water	36:39	0:0	2	stride
water	36:45	0:0	2	;
return	37:4	37:12	2	0
water	37:11	0:0	3	0

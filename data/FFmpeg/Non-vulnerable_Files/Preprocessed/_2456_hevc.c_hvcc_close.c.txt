func	1:0	11:0	0	static void	hvcc_close
params	1:22	0:0	1	
param	1:23	1:59	2	HEVCDecoderConfigurationRecord *	hvcc
stmnts	0:0	10:26	1	
decl	3:4	3:13	2	uint8_t	i
for	4:4	8:4	2	(i = 0 ;i < hvcc -> numOfArrays;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:26	3	i < hvcc -> numOfArrays
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	hvcc
op	4:24	0:0	4	->
water	4:26	0:0	4	numOfArrays
forexpr	4:39	4:40	3	i ++
water	4:39	0:0	4	i
op	4:40	0:0	4	++
stmts	4:44	8:4	3	
water	4:44	0:0	4	{
water	5:8	0:0	4	hvcc
op	5:12	0:0	4	->
water	5:14	0:0	4	array
op	5:19	0:0	4	[
water	5:20	0:0	4	i
op	5:21	0:0	4	]
op	5:22	0:0	4	.
water	5:23	0:0	4	numNalus
op	5:32	0:0	4	=
water	5:34	0:0	4	0
water	5:35	0:0	4	;
call	6:8	6:40	4	av_freep
arg	6:17	6:40	5	&hvcc->array[i].nalUnit
op	6:17	0:0	6	&
water	6:18	0:0	6	hvcc
op	6:22	0:0	6	->
water	6:24	0:0	6	array
op	6:29	0:0	6	[
water	6:30	0:0	6	i
op	6:31	0:0	6	]
op	6:32	0:0	6	.
water	6:33	0:0	6	nalUnit
water	6:41	0:0	4	;
call	7:8	7:46	4	av_freep
arg	7:17	7:46	5	&hvcc->array[i].nalUnitLength
op	7:17	0:0	6	&
water	7:18	0:0	6	hvcc
op	7:22	0:0	6	->
water	7:24	0:0	6	array
op	7:29	0:0	6	[
water	7:30	0:0	6	i
op	7:31	0:0	6	]
op	7:32	0:0	6	.
water	7:33	0:0	6	nalUnitLength
water	7:47	0:0	4	;
water	8:4	0:0	4	}
water	9:4	0:0	2	hvcc
op	9:8	0:0	2	->
water	9:10	0:0	2	numOfArrays
op	9:22	0:0	2	=
water	9:24	0:0	2	0
water	9:25	0:0	2	;
call	10:4	10:25	2	av_freep
arg	10:13	10:25	3	&hvcc->array
op	10:13	0:0	4	&
water	10:14	0:0	4	hvcc
op	10:18	0:0	4	->
water	10:20	0:0	4	array
water	10:26	0:0	2	;

func	1:0	15:0	0	static int	shall_we_drop
params	1:24	0:0	1	
param	1:25	1:43	2	AVFormatContext *	s
param	1:45	1:54	2	int	index
param	1:56	1:84	2	enum dshowDeviceType	devtype
stmnts	0:0	14:12	1	
decl	3:4	3:40	2	struct dshow_ctx	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	s
op	3:29	0:0	2	->
water	3:31	0:0	2	priv_data
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	uint8_t
water	4:25	0:0	2	dropscore
op	4:34	0:0	2	[
op	4:35	0:0	2	]
op	4:37	0:0	2	=
water	4:39	0:0	2	{
water	4:40	0:0	2	62
water	4:42	0:0	2	,
water	4:44	0:0	2	75
water	4:46	0:0	2	,
water	4:48	0:0	2	87
water	4:50	0:0	2	,
water	4:52	0:0	2	100
water	4:55	0:0	2	}
water	4:56	0:0	2	;
decl	5:4	5:53	2	const int	ndropscores
op	5:26	0:0	2	=
call	5:28	5:52	3	FF_ARRAY_ELEMS
arg	5:43	5:52	4	dropscore
water	5:43	0:0	5	dropscore
decl	6:4	6:85	2	unsigned int	buffer_fullness
op	6:33	0:0	2	=
water	6:35	0:0	2	(
water	6:36	0:0	2	ctx
op	6:39	0:0	2	->
water	6:41	0:0	2	curbufsize
op	6:51	0:0	2	[
water	6:52	0:0	2	index
op	6:57	0:0	2	]
op	6:58	0:0	2	*
water	6:59	0:0	2	100
water	6:62	0:0	2	)
op	6:63	0:0	2	/
water	6:64	0:0	2	s
op	6:65	0:0	2	->
water	6:67	0:0	2	max_picture_buffer
decl	7:4	7:74	2	const char	*devtypename
op	7:28	0:0	2	=
water	7:30	0:0	2	(
water	7:31	0:0	2	devtype
op	7:39	0:0	2	==
water	7:42	0:0	2	VideoDevice
water	7:53	0:0	2	)
water	7:55	0:0	2	?
water	7:57	0:0	2	"video"
water	7:65	0:0	2	:
water	7:67	0:0	2	"audio"
if	8:4	13:4	2	(dropscore [ ++ ctx -> video_frame_num % ndropscores ] <= buffer_fullness)
cond	8:7	8:56	3	dropscore [ ++ ctx -> video_frame_num % ndropscores ] <= buffer_fullness
water	8:7	0:0	4	dropscore
op	8:16	0:0	4	[
op	8:17	0:0	4	++
water	8:19	0:0	4	ctx
op	8:22	0:0	4	->
water	8:24	0:0	4	video_frame_num
op	8:39	0:0	4	%
water	8:40	0:0	4	ndropscores
op	8:51	0:0	4	]
op	8:53	0:0	4	<=
water	8:56	0:0	4	buffer_fullness
stmts	8:73	13:4	3	
water	8:73	0:0	4	{
call	9:8	11:92	4	av_log
arg	9:15	9:16	5	s
water	9:15	0:0	6	s
arg	9:18	9:30	5	AV_LOG_ERROR
water	9:18	0:0	6	AV_LOG_ERROR
arg	10:14	10:133	5	"real-time buffer [%s] [%s input] too full or near too full (%d%% of size: %d [rtbufsize parameter])! frame dropped!\n"
water	10:14	0:0	6	"real-time buffer [%s] [%s input] too full or near too full (%d%% of size: %d [rtbufsize parameter])! frame dropped!\n"
arg	11:14	11:39	5	ctx->device_name[devtype]
water	11:14	0:0	6	ctx
op	11:17	0:0	6	->
water	11:19	0:0	6	device_name
op	11:30	0:0	6	[
water	11:31	0:0	6	devtype
op	11:38	0:0	6	]
arg	11:41	11:52	5	devtypename
water	11:41	0:0	6	devtypename
arg	11:54	11:69	5	buffer_fullness
water	11:54	0:0	6	buffer_fullness
arg	11:71	11:92	5	s->max_picture_buffer
water	11:71	0:0	6	s
op	11:72	0:0	6	->
water	11:74	0:0	6	max_picture_buffer
water	11:93	0:0	4	;
return	12:8	12:16	4	1
water	12:15	0:0	5	1
water	13:4	0:0	4	}
return	14:4	14:12	2	0
water	14:11	0:0	3	0

func	1:0	28:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	27:12	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:39	2	ExtractPlanesContext	*s
op	4:28	0:0	2	=
water	4:30	0:0	2	ctx
op	4:33	0:0	2	->
water	4:35	0:0	2	priv
decl	5:4	5:72	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:71	3	av_pix_fmt_desc_get
arg	5:57	5:71	4	inlink->format
water	5:57	0:0	5	inlink
op	5:63	0:0	5	->
water	5:65	0:0	5	format
decl	6:4	6:27	2	int	plane_avail
water	6:19	0:0	2	,
decl	6:4	6:27	2	int	ret
water	6:24	0:0	2	,
decl	6:4	6:27	2	int	i
decl	7:4	7:23	2	uint8_t	rgba_map[4]
water	8:4	0:0	2	plane_avail
op	8:16	0:0	2	=
water	8:18	0:0	2	(
water	8:19	0:0	2	(
water	8:20	0:0	2	desc
op	8:24	0:0	2	->
water	8:26	0:0	2	flags
op	8:32	0:0	2	&
water	8:34	0:0	2	AV_PIX_FMT_FLAG_RGB
water	8:53	0:0	2	)
water	8:55	0:0	2	?
water	8:57	0:0	2	PLANE_R
op	8:64	0:0	2	|
water	8:65	0:0	2	PLANE_G
op	8:72	0:0	2	|
water	8:73	0:0	2	PLANE_B
water	8:81	0:0	2	:
water	9:49	0:0	2	PLANE_Y
op	9:57	0:0	2	|
water	10:32	0:0	2	(
water	10:33	0:0	2	(
water	10:34	0:0	2	desc
op	10:38	0:0	2	->
water	10:40	0:0	2	nb_components
op	10:54	0:0	2	>
water	10:56	0:0	2	2
water	10:57	0:0	2	)
water	10:59	0:0	2	?
water	10:61	0:0	2	PLANE_U
op	10:68	0:0	2	|
water	10:69	0:0	2	PLANE_V
water	10:77	0:0	2	:
water	10:79	0:0	2	0
water	10:80	0:0	2	)
water	10:81	0:0	2	)
op	10:83	0:0	2	|
water	11:18	0:0	2	(
water	11:19	0:0	2	(
water	11:20	0:0	2	desc
op	11:24	0:0	2	->
water	11:26	0:0	2	flags
op	11:32	0:0	2	&
water	11:34	0:0	2	AV_PIX_FMT_FLAG_ALPHA
water	11:55	0:0	2	)
water	11:57	0:0	2	?
water	11:59	0:0	2	PLANE_A
water	11:67	0:0	2	:
water	11:69	0:0	2	0
water	11:70	0:0	2	)
water	11:71	0:0	2	;
if	12:4	15:4	2	(s -> requested_planes & ~plane_avail)
cond	12:8	12:30	3	s -> requested_planes & ~plane_avail
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	requested_planes
op	12:28	0:0	4	&
water	12:30	0:0	4	~plane_avail
stmts	12:44	15:4	3	
water	12:44	0:0	4	{
call	13:8	13:69	4	av_log
arg	13:15	13:18	5	ctx
water	13:15	0:0	6	ctx
arg	13:20	13:32	5	AV_LOG_ERROR
water	13:20	0:0	6	AV_LOG_ERROR
arg	13:34	13:69	5	"Requested planes not available.\n"
water	13:34	0:0	6	"Requested planes not available.\n"
water	13:70	0:0	4	;
return	14:8	14:30	4	AVERROR(EINVAL)
call	14:15	14:29	5	AVERROR
arg	14:23	14:29	6	EINVAL
water	14:23	0:0	7	EINVAL
water	15:4	0:0	4	}
if	16:4	17:18	2	(( ret =av_image_fill_linesizes (s -> linesize ,inlink -> format ,inlink -> w ) ) < 0)
cond	16:8	16:82	3	( ret =av_image_fill_linesizes (s -> linesize ,inlink -> format ,inlink -> w ) ) < 0
water	16:8	0:0	4	(
water	16:9	0:0	4	ret
op	16:13	0:0	4	=
call	16:15	16:77	4	av_image_fill_linesizes
arg	16:39	16:50	5	s->linesize
water	16:39	0:0	6	s
op	16:40	0:0	6	->
water	16:42	0:0	6	linesize
arg	16:52	16:66	5	inlink->format
water	16:52	0:0	6	inlink
op	16:58	0:0	6	->
water	16:60	0:0	6	format
arg	16:68	16:77	5	inlink->w
water	16:68	0:0	6	inlink
op	16:74	0:0	6	->
water	16:76	0:0	6	w
water	16:78	0:0	4	)
op	16:80	0:0	4	<
water	16:82	0:0	4	0
stmts	17:8	17:18	3	
return	17:8	17:18	4	ret
water	17:15	0:0	5	ret
water	18:4	0:0	2	s
op	18:5	0:0	2	->
water	18:7	0:0	2	depth
op	18:13	0:0	2	=
water	18:15	0:0	2	(
water	18:16	0:0	2	desc
op	18:20	0:0	2	->
water	18:22	0:0	2	comp
op	18:26	0:0	2	[
water	18:27	0:0	2	0
op	18:28	0:0	2	]
op	18:29	0:0	2	.
water	18:30	0:0	2	depth_minus1
op	18:43	0:0	2	+
water	18:45	0:0	2	1
water	18:46	0:0	2	)
op	18:48	0:0	2	>>
water	18:51	0:0	2	3
water	18:52	0:0	2	;
water	19:4	0:0	2	s
op	19:5	0:0	2	->
water	19:7	0:0	2	step
op	19:12	0:0	2	=
call	19:14	19:47	2	av_get_padded_bits_per_pixel
arg	19:43	19:47	3	desc
water	19:43	0:0	4	desc
op	19:49	0:0	2	>>
water	19:52	0:0	2	3
water	19:53	0:0	2	;
water	20:4	0:0	2	s
op	20:5	0:0	2	->
water	20:7	0:0	2	is_packed
op	20:17	0:0	2	=
op	20:19	0:0	2	!
water	20:20	0:0	2	(
water	20:21	0:0	2	desc
op	20:25	0:0	2	->
water	20:27	0:0	2	flags
op	20:33	0:0	2	&
water	20:35	0:0	2	AV_PIX_FMT_FLAG_PLANAR
water	20:57	0:0	2	)
op	20:59	0:0	2	&&
water	21:20	0:0	2	(
water	21:21	0:0	2	desc
op	21:25	0:0	2	->
water	21:27	0:0	2	nb_components
op	21:41	0:0	2	>
water	21:43	0:0	2	1
water	21:44	0:0	2	)
water	21:45	0:0	2	;
if	22:4	26:4	2	(desc -> flags & AV_PIX_FMT_FLAG_RGB)
cond	22:8	22:22	3	desc -> flags & AV_PIX_FMT_FLAG_RGB
water	22:8	0:0	4	desc
op	22:12	0:0	4	->
water	22:14	0:0	4	flags
op	22:20	0:0	4	&
water	22:22	0:0	4	AV_PIX_FMT_FLAG_RGB
stmts	22:43	26:4	3	
water	22:43	0:0	4	{
call	23:8	23:49	4	ff_fill_rgba_map
arg	23:25	23:33	5	rgba_map
water	23:25	0:0	6	rgba_map
arg	23:35	23:49	5	inlink->format
water	23:35	0:0	6	inlink
op	23:41	0:0	6	->
water	23:43	0:0	6	format
water	23:50	0:0	4	;
for	24:8	25:43	4	(i = 0 ;i < 4;i ++)
forinit	24:13	24:18	5	i = 0 ;
water	24:13	0:0	6	i
op	24:15	0:0	6	=
water	24:17	0:0	6	0
water	24:18	0:0	6	;
cond	24:20	24:24	5	i < 4
water	24:20	0:0	6	i
op	24:22	0:0	6	<
water	24:24	0:0	6	4
forexpr	24:27	24:28	5	i ++
water	24:27	0:0	6	i
op	24:28	0:0	6	++
stmts	25:12	25:43	5	
water	25:12	0:0	6	s
op	25:13	0:0	6	->
water	25:15	0:0	6	map
op	25:18	0:0	6	[
water	25:19	0:0	6	i
op	25:20	0:0	6	]
op	25:22	0:0	6	=
water	25:24	0:0	6	rgba_map
op	25:32	0:0	6	[
water	25:33	0:0	6	s
op	25:34	0:0	6	->
water	25:36	0:0	6	map
op	25:39	0:0	6	[
water	25:40	0:0	6	i
op	25:41	0:0	6	]
op	25:42	0:0	6	]
water	25:43	0:0	6	;
water	26:4	0:0	4	}
return	27:4	27:12	2	0
water	27:11	0:0	3	0

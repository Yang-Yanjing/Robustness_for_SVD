func	1:0	197:0	0	int	avresample_build_matrix
params	1:27	0:0	1	
param	1:28	1:46	2	uint64_t	in_layout
param	1:48	1:67	2	uint64_t	out_layout
param	2:28	2:51	2	double	center_mix_level
param	2:53	2:78	2	double	surround_mix_level
param	3:28	3:48	2	double	lfe_mix_level
param	3:50	3:63	2	int	normalize
param	4:28	4:46	2	double *	matrix_out
param	4:48	4:58	2	int	stride
param	5:28	5:65	2	enum AVMatrixEncoding	matrix_encoding
stmnts	0:0	196:12	1	
decl	7:4	7:26	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:26	2	int	j
water	7:12	0:0	2	,
decl	7:4	7:26	2	int	out_i
water	7:19	0:0	2	,
decl	7:4	7:26	2	int	out_j
water	8:4	0:0	2	double
water	8:11	0:0	2	matrix
op	8:17	0:0	2	[
water	8:18	0:0	2	64
op	8:20	0:0	2	]
op	8:21	0:0	2	[
water	8:22	0:0	2	64
op	8:24	0:0	2	]
op	8:26	0:0	2	=
water	8:28	0:0	2	{
water	8:29	0:0	2	{
water	8:30	0:0	2	0
water	8:31	0:0	2	}
water	8:32	0:0	2	}
water	8:33	0:0	2	;
decl	9:4	9:23	2	int64_t	unaccounted
decl	10:4	10:22	2	double	maxcoef
op	10:19	0:0	2	=
water	10:21	0:0	2	0
decl	11:4	11:33	2	int	in_channels
water	11:19	0:0	2	,
decl	11:4	11:33	2	int	out_channels
if	12:4	14:4	2	(( out_layout & AV_CH_LAYOUT_STEREO_DOWNMIX ) == AV_CH_LAYOUT_STEREO_DOWNMIX)
cond	12:8	12:54	3	( out_layout & AV_CH_LAYOUT_STEREO_DOWNMIX ) == AV_CH_LAYOUT_STEREO_DOWNMIX
water	12:8	0:0	4	(
water	12:9	0:0	4	out_layout
op	12:20	0:0	4	&
water	12:22	0:0	4	AV_CH_LAYOUT_STEREO_DOWNMIX
water	12:49	0:0	4	)
op	12:51	0:0	4	==
water	12:54	0:0	4	AV_CH_LAYOUT_STEREO_DOWNMIX
stmts	12:83	14:4	3	
water	12:83	0:0	4	{
water	13:8	0:0	4	out_layout
op	13:19	0:0	4	=
water	13:21	0:0	4	AV_CH_LAYOUT_STEREO
water	13:40	0:0	4	;
water	14:4	0:0	4	}
water	15:4	0:0	2	unaccounted
op	15:16	0:0	2	=
water	15:18	0:0	2	in_layout
op	15:28	0:0	2	&
water	15:30	0:0	2	~out_layout
water	15:41	0:0	2	;
water	16:4	0:0	2	in_channels
op	16:17	0:0	2	=
call	16:19	16:63	2	av_get_channel_layout_nb_channels
arg	16:54	16:63	3	in_layout
water	16:54	0:0	4	in_layout
water	16:64	0:0	2	;
water	17:4	0:0	2	out_channels
op	17:17	0:0	2	=
call	17:19	17:63	2	av_get_channel_layout_nb_channels
arg	17:53	17:63	3	out_layout
water	17:53	0:0	4	out_layout
water	17:64	0:0	2	;
call	18:4	18:69	2	memset
arg	18:11	18:21	3	matrix_out
water	18:11	0:0	4	matrix_out
arg	18:23	18:24	3	0
water	18:23	0:0	4	0
arg	18:26	18:69	3	out_channels*stride*sizeof(*matrix_out)
water	18:26	0:0	4	out_channels
op	18:39	0:0	4	*
water	18:41	0:0	4	stride
op	18:48	0:0	4	*
op	18:50	0:0	4	sizeof
water	18:56	0:0	4	(
op	18:57	0:0	4	*
water	18:58	0:0	4	matrix_out
water	18:68	0:0	4	)
water	18:70	0:0	2	;
if	20:4	21:30	2	(! in_layout || in_channels > AVRESAMPLE_MAX_CHANNELS)
cond	20:8	20:36	3	! in_layout || in_channels > AVRESAMPLE_MAX_CHANNELS
op	20:8	0:0	4	!
water	20:9	0:0	4	in_layout
op	20:19	0:0	4	||
water	20:22	0:0	4	in_channels
op	20:34	0:0	4	>
water	20:36	0:0	4	AVRESAMPLE_MAX_CHANNELS
stmts	21:8	21:30	3	
return	21:8	21:30	4	AVERROR(EINVAL)
call	21:15	21:29	5	AVERROR
arg	21:23	21:29	6	EINVAL
water	21:23	0:0	7	EINVAL
if	22:4	23:30	2	(! out_layout || out_channels > AVRESAMPLE_MAX_CHANNELS)
cond	22:8	22:38	3	! out_layout || out_channels > AVRESAMPLE_MAX_CHANNELS
op	22:8	0:0	4	!
water	22:9	0:0	4	out_layout
op	22:20	0:0	4	||
water	22:23	0:0	4	out_channels
op	22:36	0:0	4	>
water	22:38	0:0	4	AVRESAMPLE_MAX_CHANNELS
stmts	23:8	23:30	3	
return	23:8	23:30	4	AVERROR(EINVAL)
call	23:15	23:29	5	AVERROR
arg	23:23	23:29	6	EINVAL
water	23:23	0:0	7	EINVAL
if	25:4	26:35	2	(!sane_layout (in_layout ) || !sane_layout (out_layout ))
cond	25:8	25:58	3	!sane_layout (in_layout ) || !sane_layout (out_layout )
op	25:8	0:0	4	!
call	25:9	25:30	4	sane_layout
arg	25:21	25:30	5	in_layout
water	25:21	0:0	6	in_layout
op	25:32	0:0	4	||
op	25:35	0:0	4	!
call	25:36	25:58	4	sane_layout
arg	25:48	25:58	5	out_layout
water	25:48	0:0	6	out_layout
stmts	26:8	26:35	3	
return	26:8	26:35	4	AVERROR_PATCHWELCOME
water	26:15	0:0	5	AVERROR_PATCHWELCOME
for	28:4	31:4	2	(i = 0 ;i < 64;i ++)
forinit	28:9	28:14	3	i = 0 ;
water	28:9	0:0	4	i
op	28:11	0:0	4	=
water	28:13	0:0	4	0
water	28:14	0:0	4	;
cond	28:16	28:20	3	i < 64
water	28:16	0:0	4	i
op	28:18	0:0	4	<
water	28:20	0:0	4	64
forexpr	28:24	28:25	3	i ++
water	28:24	0:0	4	i
op	28:25	0:0	4	++
stmts	28:29	31:4	3	
water	28:29	0:0	4	{
if	29:8	30:30	4	(in_layout & out_layout & ( 1 ULL << i ))
cond	29:12	29:47	5	in_layout & out_layout & ( 1 ULL << i )
water	29:12	0:0	6	in_layout
op	29:22	0:0	6	&
water	29:24	0:0	6	out_layout
op	29:35	0:0	6	&
water	29:37	0:0	6	(
water	29:38	0:0	6	1
water	29:39	0:0	6	ULL
op	29:43	0:0	6	<<
water	29:46	0:0	6	i
water	29:47	0:0	6	)
stmts	30:12	30:30	5	
water	30:12	0:0	6	matrix
op	30:18	0:0	6	[
water	30:19	0:0	6	i
op	30:20	0:0	6	]
op	30:21	0:0	6	[
water	30:22	0:0	6	i
op	30:23	0:0	6	]
op	30:25	0:0	6	=
water	30:27	0:0	6	1
op	30:28	0:0	6	.
water	30:29	0:0	6	0
water	30:30	0:0	6	;
water	31:4	0:0	4	}
if	33:4	44:4	2	(unaccounted & AV_CH_FRONT_CENTER)
cond	33:8	33:22	3	unaccounted & AV_CH_FRONT_CENTER
water	33:8	0:0	4	unaccounted
op	33:20	0:0	4	&
water	33:22	0:0	4	AV_CH_FRONT_CENTER
stmts	33:42	44:4	3	
water	33:42	0:0	4	{
if	34:8	42:8	4	(( out_layout & AV_CH_LAYOUT_STEREO ) == AV_CH_LAYOUT_STEREO)
cond	34:12	34:50	5	( out_layout & AV_CH_LAYOUT_STEREO ) == AV_CH_LAYOUT_STEREO
water	34:12	0:0	6	(
water	34:13	0:0	6	out_layout
op	34:24	0:0	6	&
water	34:26	0:0	6	AV_CH_LAYOUT_STEREO
water	34:45	0:0	6	)
op	34:47	0:0	6	==
water	34:50	0:0	6	AV_CH_LAYOUT_STEREO
stmts	34:71	42:8	5	
water	34:71	0:0	6	{
if	35:12	38:12	6	(( in_layout & AV_CH_LAYOUT_STEREO ) == AV_CH_LAYOUT_STEREO)
cond	35:16	35:53	7	( in_layout & AV_CH_LAYOUT_STEREO ) == AV_CH_LAYOUT_STEREO
water	35:16	0:0	8	(
water	35:17	0:0	8	in_layout
op	35:27	0:0	8	&
water	35:29	0:0	8	AV_CH_LAYOUT_STEREO
water	35:48	0:0	8	)
op	35:50	0:0	8	==
water	35:53	0:0	8	AV_CH_LAYOUT_STEREO
stmts	35:74	38:12	7	
water	35:74	0:0	8	{
water	36:16	0:0	8	matrix
op	36:22	0:0	8	[
water	36:23	0:0	8	FRONT_LEFT
op	36:34	0:0	8	]
op	36:35	0:0	8	[
water	36:36	0:0	8	FRONT_CENTER
op	36:48	0:0	8	]
op	36:50	0:0	8	+=
water	36:53	0:0	8	center_mix_level
water	36:69	0:0	8	;
water	37:16	0:0	8	matrix
op	37:22	0:0	8	[
water	37:23	0:0	8	FRONT_RIGHT
op	37:34	0:0	8	]
op	37:35	0:0	8	[
water	37:36	0:0	8	FRONT_CENTER
op	37:48	0:0	8	]
op	37:50	0:0	8	+=
water	37:53	0:0	8	center_mix_level
water	37:69	0:0	8	;
water	38:12	0:0	8	}
else	38:14	41:12	6
stmts	38:19	41:12	7	
water	38:19	0:0	8	{
water	39:16	0:0	8	matrix
op	39:22	0:0	8	[
water	39:23	0:0	8	FRONT_LEFT
op	39:34	0:0	8	]
op	39:35	0:0	8	[
water	39:36	0:0	8	FRONT_CENTER
op	39:48	0:0	8	]
op	39:50	0:0	8	+=
water	39:53	0:0	8	M_SQRT1_2
water	39:62	0:0	8	;
water	40:16	0:0	8	matrix
op	40:22	0:0	8	[
water	40:23	0:0	8	FRONT_RIGHT
op	40:34	0:0	8	]
op	40:35	0:0	8	[
water	40:36	0:0	8	FRONT_CENTER
op	40:48	0:0	8	]
op	40:50	0:0	8	+=
water	40:53	0:0	8	M_SQRT1_2
water	40:62	0:0	8	;
water	41:12	0:0	8	}
water	42:8	0:0	6	}
else	42:10	43:39	4
stmts	43:12	43:39	5	
return	43:12	43:39	6	AVERROR_PATCHWELCOME
water	43:19	0:0	7	AVERROR_PATCHWELCOME
water	44:4	0:0	4	}
if	46:4	55:4	2	(unaccounted & AV_CH_LAYOUT_STEREO)
cond	46:8	46:22	3	unaccounted & AV_CH_LAYOUT_STEREO
water	46:8	0:0	4	unaccounted
op	46:20	0:0	4	&
water	46:22	0:0	4	AV_CH_LAYOUT_STEREO
stmts	46:43	55:4	3	
water	46:43	0:0	4	{
if	47:8	53:8	4	(out_layout & AV_CH_FRONT_CENTER)
cond	47:12	47:25	5	out_layout & AV_CH_FRONT_CENTER
water	47:12	0:0	6	out_layout
op	47:23	0:0	6	&
water	47:25	0:0	6	AV_CH_FRONT_CENTER
stmts	47:45	53:8	5	
water	47:45	0:0	6	{
water	48:12	0:0	6	matrix
op	48:18	0:0	6	[
water	48:19	0:0	6	FRONT_CENTER
op	48:31	0:0	6	]
op	48:32	0:0	6	[
water	48:33	0:0	6	FRONT_LEFT
op	48:44	0:0	6	]
op	48:46	0:0	6	+=
water	48:49	0:0	6	M_SQRT1_2
water	48:58	0:0	6	;
water	49:12	0:0	6	matrix
op	49:18	0:0	6	[
water	49:19	0:0	6	FRONT_CENTER
op	49:31	0:0	6	]
op	49:32	0:0	6	[
water	49:33	0:0	6	FRONT_RIGHT
op	49:44	0:0	6	]
op	49:46	0:0	6	+=
water	49:49	0:0	6	M_SQRT1_2
water	49:58	0:0	6	;
if	51:12	52:79	6	(in_layout & AV_CH_FRONT_CENTER)
cond	51:16	51:28	7	in_layout & AV_CH_FRONT_CENTER
water	51:16	0:0	8	in_layout
op	51:26	0:0	8	&
water	51:28	0:0	8	AV_CH_FRONT_CENTER
stmts	52:16	52:79	7	
water	52:16	0:0	8	matrix
op	52:22	0:0	8	[
water	52:23	0:0	8	FRONT_CENTER
op	52:35	0:0	8	]
op	52:36	0:0	8	[
water	52:37	0:0	8	FRONT_CENTER
op	52:49	0:0	8	]
op	52:51	0:0	8	=
water	52:53	0:0	8	center_mix_level
op	52:70	0:0	8	*
water	52:72	0:0	8	M_SQRT2
water	52:79	0:0	8	;
water	53:8	0:0	6	}
else	53:10	54:39	4
stmts	54:12	54:39	5	
return	54:12	54:39	6	AVERROR_PATCHWELCOME
water	54:19	0:0	7	AVERROR_PATCHWELCOME
water	55:4	0:0	4	}
if	57:4	82:4	2	(unaccounted & AV_CH_BACK_CENTER)
cond	57:8	57:22	3	unaccounted & AV_CH_BACK_CENTER
water	57:8	0:0	4	unaccounted
op	57:20	0:0	4	&
water	57:22	0:0	4	AV_CH_BACK_CENTER
stmts	57:41	82:4	3	
water	57:41	0:0	4	{
if	58:8	61:8	4	(out_layout & AV_CH_BACK_LEFT)
cond	58:12	58:25	5	out_layout & AV_CH_BACK_LEFT
water	58:12	0:0	6	out_layout
op	58:23	0:0	6	&
water	58:25	0:0	6	AV_CH_BACK_LEFT
stmts	58:42	61:8	5	
water	58:42	0:0	6	{
water	59:12	0:0	6	matrix
op	59:18	0:0	6	[
water	59:19	0:0	6	BACK_LEFT
op	59:29	0:0	6	]
op	59:30	0:0	6	[
water	59:31	0:0	6	BACK_CENTER
op	59:42	0:0	6	]
op	59:44	0:0	6	+=
water	59:47	0:0	6	M_SQRT1_2
water	59:56	0:0	6	;
water	60:12	0:0	6	matrix
op	60:18	0:0	6	[
water	60:19	0:0	6	BACK_RIGHT
op	60:29	0:0	6	]
op	60:30	0:0	6	[
water	60:31	0:0	6	BACK_CENTER
op	60:42	0:0	6	]
op	60:44	0:0	6	+=
water	60:47	0:0	6	M_SQRT1_2
water	60:56	0:0	6	;
water	61:8	0:0	6	}
else	61:10	64:8	4
stmts	61:15	64:8	5	
if	61:15	64:8	6	(out_layout & AV_CH_SIDE_LEFT)
cond	61:19	61:32	7	out_layout & AV_CH_SIDE_LEFT
water	61:19	0:0	8	out_layout
op	61:30	0:0	8	&
water	61:32	0:0	8	AV_CH_SIDE_LEFT
stmts	61:49	64:8	7	
water	61:49	0:0	8	{
water	62:12	0:0	8	matrix
op	62:18	0:0	8	[
water	62:19	0:0	8	SIDE_LEFT
op	62:29	0:0	8	]
op	62:30	0:0	8	[
water	62:31	0:0	8	BACK_CENTER
op	62:42	0:0	8	]
op	62:44	0:0	8	+=
water	62:47	0:0	8	M_SQRT1_2
water	62:56	0:0	8	;
water	63:12	0:0	8	matrix
op	63:18	0:0	8	[
water	63:19	0:0	8	SIDE_RIGHT
op	63:29	0:0	8	]
op	63:30	0:0	8	[
water	63:31	0:0	8	BACK_CENTER
op	63:42	0:0	8	]
op	63:44	0:0	8	+=
water	63:47	0:0	8	M_SQRT1_2
water	63:56	0:0	8	;
water	64:8	0:0	8	}
else	64:10	78:8	4
stmts	64:15	78:8	5	
if	64:15	78:8	6	(out_layout & AV_CH_FRONT_LEFT)
cond	64:19	64:32	7	out_layout & AV_CH_FRONT_LEFT
water	64:19	0:0	8	out_layout
op	64:30	0:0	8	&
water	64:32	0:0	8	AV_CH_FRONT_LEFT
stmts	64:50	78:8	7	
water	64:50	0:0	8	{
if	65:12	74:12	8	(matrix_encoding == AV_MATRIX_ENCODING_DOLBY || matrix_encoding == AV_MATRIX_ENCODING_DPLII)
cond	65:16	66:35	9	matrix_encoding == AV_MATRIX_ENCODING_DOLBY || matrix_encoding == AV_MATRIX_ENCODING_DPLII
water	65:16	0:0	10	matrix_encoding
op	65:32	0:0	10	==
water	65:35	0:0	10	AV_MATRIX_ENCODING_DOLBY
op	65:60	0:0	10	||
water	66:16	0:0	10	matrix_encoding
op	66:32	0:0	10	==
water	66:35	0:0	10	AV_MATRIX_ENCODING_DPLII
stmts	66:61	74:12	9	
water	66:61	0:0	10	{
if	67:16	70:16	10	(unaccounted & ( AV_CH_BACK_LEFT | AV_CH_SIDE_LEFT ))
cond	67:20	67:68	11	unaccounted & ( AV_CH_BACK_LEFT | AV_CH_SIDE_LEFT )
water	67:20	0:0	12	unaccounted
op	67:32	0:0	12	&
water	67:34	0:0	12	(
water	67:35	0:0	12	AV_CH_BACK_LEFT
op	67:51	0:0	12	|
water	67:53	0:0	12	AV_CH_SIDE_LEFT
water	67:68	0:0	12	)
stmts	67:71	70:16	11	
water	67:71	0:0	12	{
water	68:20	0:0	12	matrix
op	68:26	0:0	12	[
water	68:27	0:0	12	FRONT_LEFT
op	68:38	0:0	12	]
op	68:39	0:0	12	[
water	68:40	0:0	12	BACK_CENTER
op	68:51	0:0	12	]
op	68:53	0:0	12	-=
water	68:56	0:0	12	surround_mix_level
op	68:75	0:0	12	*
water	68:77	0:0	12	M_SQRT1_2
water	68:86	0:0	12	;
water	69:20	0:0	12	matrix
op	69:26	0:0	12	[
water	69:27	0:0	12	FRONT_RIGHT
op	69:38	0:0	12	]
op	69:39	0:0	12	[
water	69:40	0:0	12	BACK_CENTER
op	69:51	0:0	12	]
op	69:53	0:0	12	+=
water	69:56	0:0	12	surround_mix_level
op	69:75	0:0	12	*
water	69:77	0:0	12	M_SQRT1_2
water	69:86	0:0	12	;
water	70:16	0:0	12	}
else	70:18	73:16	10
stmts	70:23	73:16	11	
water	70:23	0:0	12	{
water	71:20	0:0	12	matrix
op	71:26	0:0	12	[
water	71:27	0:0	12	FRONT_LEFT
op	71:38	0:0	12	]
op	71:39	0:0	12	[
water	71:40	0:0	12	BACK_CENTER
op	71:51	0:0	12	]
op	71:53	0:0	12	-=
water	71:56	0:0	12	surround_mix_level
water	71:74	0:0	12	;
water	72:20	0:0	12	matrix
op	72:26	0:0	12	[
water	72:27	0:0	12	FRONT_RIGHT
op	72:38	0:0	12	]
op	72:39	0:0	12	[
water	72:40	0:0	12	BACK_CENTER
op	72:51	0:0	12	]
op	72:53	0:0	12	+=
water	72:56	0:0	12	surround_mix_level
water	72:74	0:0	12	;
water	73:16	0:0	12	}
water	74:12	0:0	10	}
else	74:14	77:12	8
stmts	74:19	77:12	9	
water	74:19	0:0	10	{
water	75:16	0:0	10	matrix
op	75:22	0:0	10	[
water	75:23	0:0	10	FRONT_LEFT
op	75:34	0:0	10	]
op	75:35	0:0	10	[
water	75:36	0:0	10	BACK_CENTER
op	75:47	0:0	10	]
op	75:49	0:0	10	+=
water	75:52	0:0	10	surround_mix_level
op	75:71	0:0	10	*
water	75:73	0:0	10	M_SQRT1_2
water	75:82	0:0	10	;
water	76:16	0:0	10	matrix
op	76:22	0:0	10	[
water	76:23	0:0	10	FRONT_RIGHT
op	76:34	0:0	10	]
op	76:35	0:0	10	[
water	76:36	0:0	10	BACK_CENTER
op	76:47	0:0	10	]
op	76:49	0:0	10	+=
water	76:52	0:0	10	surround_mix_level
op	76:71	0:0	10	*
water	76:73	0:0	10	M_SQRT1_2
water	76:82	0:0	10	;
water	77:12	0:0	10	}
water	78:8	0:0	8	}
else	78:10	80:8	4
stmts	78:15	80:8	5	
if	78:15	80:8	6	(out_layout & AV_CH_FRONT_CENTER)
cond	78:19	78:32	7	out_layout & AV_CH_FRONT_CENTER
water	78:19	0:0	8	out_layout
op	78:30	0:0	8	&
water	78:32	0:0	8	AV_CH_FRONT_CENTER
stmts	78:52	80:8	7	
water	78:52	0:0	8	{
water	79:12	0:0	8	matrix
op	79:18	0:0	8	[
water	79:19	0:0	8	FRONT_CENTER
op	79:31	0:0	8	]
op	79:32	0:0	8	[
water	79:33	0:0	8	BACK_CENTER
op	79:44	0:0	8	]
op	79:46	0:0	8	+=
water	79:49	0:0	8	surround_mix_level
op	79:68	0:0	8	*
water	79:70	0:0	8	M_SQRT1_2
water	79:79	0:0	8	;
water	80:8	0:0	8	}
else	80:10	81:39	4
stmts	81:12	81:39	5	
return	81:12	81:39	6	AVERROR_PATCHWELCOME
water	81:19	0:0	7	AVERROR_PATCHWELCOME
water	82:4	0:0	4	}
if	84:4	118:4	2	(unaccounted & AV_CH_BACK_LEFT)
cond	84:8	84:22	3	unaccounted & AV_CH_BACK_LEFT
water	84:8	0:0	4	unaccounted
op	84:20	0:0	4	&
water	84:22	0:0	4	AV_CH_BACK_LEFT
stmts	84:39	118:4	3	
water	84:39	0:0	4	{
if	85:8	88:8	4	(out_layout & AV_CH_BACK_CENTER)
cond	85:12	85:25	5	out_layout & AV_CH_BACK_CENTER
water	85:12	0:0	6	out_layout
op	85:23	0:0	6	&
water	85:25	0:0	6	AV_CH_BACK_CENTER
stmts	85:44	88:8	5	
water	85:44	0:0	6	{
water	86:12	0:0	6	matrix
op	86:18	0:0	6	[
water	86:19	0:0	6	BACK_CENTER
op	86:30	0:0	6	]
op	86:31	0:0	6	[
water	86:32	0:0	6	BACK_LEFT
op	86:42	0:0	6	]
op	86:44	0:0	6	+=
water	86:47	0:0	6	M_SQRT1_2
water	86:56	0:0	6	;
water	87:12	0:0	6	matrix
op	87:18	0:0	6	[
water	87:19	0:0	6	BACK_CENTER
op	87:30	0:0	6	]
op	87:31	0:0	6	[
water	87:32	0:0	6	BACK_RIGHT
op	87:42	0:0	6	]
op	87:44	0:0	6	+=
water	87:47	0:0	6	M_SQRT1_2
water	87:56	0:0	6	;
water	88:8	0:0	6	}
else	88:10	98:8	4
stmts	88:15	98:8	5	
if	88:15	98:8	6	(out_layout & AV_CH_SIDE_LEFT)
cond	88:19	88:32	7	out_layout & AV_CH_SIDE_LEFT
water	88:19	0:0	8	out_layout
op	88:30	0:0	8	&
water	88:32	0:0	8	AV_CH_SIDE_LEFT
stmts	88:49	98:8	7	
water	88:49	0:0	8	{
if	91:12	94:12	8	(in_layout & AV_CH_SIDE_LEFT)
cond	91:16	91:28	9	in_layout & AV_CH_SIDE_LEFT
water	91:16	0:0	10	in_layout
op	91:26	0:0	10	&
water	91:28	0:0	10	AV_CH_SIDE_LEFT
stmts	91:45	94:12	9	
water	91:45	0:0	10	{
water	92:16	0:0	10	matrix
op	92:22	0:0	10	[
water	92:23	0:0	10	SIDE_LEFT
op	92:33	0:0	10	]
op	92:34	0:0	10	[
water	92:35	0:0	10	BACK_LEFT
op	92:45	0:0	10	]
op	92:47	0:0	10	+=
water	92:50	0:0	10	M_SQRT1_2
water	92:59	0:0	10	;
water	93:16	0:0	10	matrix
op	93:22	0:0	10	[
water	93:23	0:0	10	SIDE_RIGHT
op	93:33	0:0	10	]
op	93:34	0:0	10	[
water	93:35	0:0	10	BACK_RIGHT
op	93:45	0:0	10	]
op	93:47	0:0	10	+=
water	93:50	0:0	10	M_SQRT1_2
water	93:59	0:0	10	;
water	94:12	0:0	10	}
else	94:14	97:12	8
stmts	94:19	97:12	9	
water	94:19	0:0	10	{
water	95:16	0:0	10	matrix
op	95:22	0:0	10	[
water	95:23	0:0	10	SIDE_LEFT
op	95:33	0:0	10	]
op	95:34	0:0	10	[
water	95:35	0:0	10	BACK_LEFT
op	95:45	0:0	10	]
op	95:47	0:0	10	+=
water	95:50	0:0	10	1
op	95:51	0:0	10	.
water	95:52	0:0	10	0
water	95:53	0:0	10	;
water	96:16	0:0	10	matrix
op	96:22	0:0	10	[
water	96:23	0:0	10	SIDE_RIGHT
op	96:33	0:0	10	]
op	96:34	0:0	10	[
water	96:35	0:0	10	BACK_RIGHT
op	96:45	0:0	10	]
op	96:47	0:0	10	+=
water	96:50	0:0	10	1
op	96:51	0:0	10	.
water	96:52	0:0	10	0
water	96:53	0:0	10	;
water	97:12	0:0	10	}
water	98:8	0:0	8	}
else	98:10	113:8	4
stmts	98:15	113:8	5	
if	98:15	113:8	6	(out_layout & AV_CH_FRONT_LEFT)
cond	98:19	98:32	7	out_layout & AV_CH_FRONT_LEFT
water	98:19	0:0	8	out_layout
op	98:30	0:0	8	&
water	98:32	0:0	8	AV_CH_FRONT_LEFT
stmts	98:50	113:8	7	
water	98:50	0:0	8	{
if	99:12	104:12	8	(matrix_encoding == AV_MATRIX_ENCODING_DOLBY)
cond	99:16	99:35	9	matrix_encoding == AV_MATRIX_ENCODING_DOLBY
water	99:16	0:0	10	matrix_encoding
op	99:32	0:0	10	==
water	99:35	0:0	10	AV_MATRIX_ENCODING_DOLBY
stmts	99:61	104:12	9	
water	99:61	0:0	10	{
water	100:16	0:0	10	matrix
op	100:22	0:0	10	[
water	100:23	0:0	10	FRONT_LEFT
op	100:34	0:0	10	]
op	100:35	0:0	10	[
water	100:36	0:0	10	BACK_LEFT
op	100:46	0:0	10	]
op	100:48	0:0	10	-=
water	100:51	0:0	10	surround_mix_level
op	100:70	0:0	10	*
water	100:72	0:0	10	M_SQRT1_2
water	100:81	0:0	10	;
water	101:16	0:0	10	matrix
op	101:22	0:0	10	[
water	101:23	0:0	10	FRONT_LEFT
op	101:34	0:0	10	]
op	101:35	0:0	10	[
water	101:36	0:0	10	BACK_RIGHT
op	101:46	0:0	10	]
op	101:48	0:0	10	-=
water	101:51	0:0	10	surround_mix_level
op	101:70	0:0	10	*
water	101:72	0:0	10	M_SQRT1_2
water	101:81	0:0	10	;
water	102:16	0:0	10	matrix
op	102:22	0:0	10	[
water	102:23	0:0	10	FRONT_RIGHT
op	102:34	0:0	10	]
op	102:35	0:0	10	[
water	102:36	0:0	10	BACK_LEFT
op	102:46	0:0	10	]
op	102:48	0:0	10	+=
water	102:51	0:0	10	surround_mix_level
op	102:70	0:0	10	*
water	102:72	0:0	10	M_SQRT1_2
water	102:81	0:0	10	;
water	103:16	0:0	10	matrix
op	103:22	0:0	10	[
water	103:23	0:0	10	FRONT_RIGHT
op	103:34	0:0	10	]
op	103:35	0:0	10	[
water	103:36	0:0	10	BACK_RIGHT
op	103:46	0:0	10	]
op	103:48	0:0	10	+=
water	103:51	0:0	10	surround_mix_level
op	103:70	0:0	10	*
water	103:72	0:0	10	M_SQRT1_2
water	103:81	0:0	10	;
water	104:12	0:0	10	}
else	104:14	109:12	8
stmts	104:19	109:12	9	
if	104:19	109:12	10	(matrix_encoding == AV_MATRIX_ENCODING_DPLII)
cond	104:23	104:42	11	matrix_encoding == AV_MATRIX_ENCODING_DPLII
water	104:23	0:0	12	matrix_encoding
op	104:39	0:0	12	==
water	104:42	0:0	12	AV_MATRIX_ENCODING_DPLII
stmts	104:68	109:12	11	
water	104:68	0:0	12	{
water	105:16	0:0	12	matrix
op	105:22	0:0	12	[
water	105:23	0:0	12	FRONT_LEFT
op	105:34	0:0	12	]
op	105:35	0:0	12	[
water	105:36	0:0	12	BACK_LEFT
op	105:46	0:0	12	]
op	105:48	0:0	12	-=
water	105:51	0:0	12	surround_mix_level
op	105:70	0:0	12	*
water	105:72	0:0	12	SQRT3_2
water	105:79	0:0	12	;
water	106:16	0:0	12	matrix
op	106:22	0:0	12	[
water	106:23	0:0	12	FRONT_LEFT
op	106:34	0:0	12	]
op	106:35	0:0	12	[
water	106:36	0:0	12	BACK_RIGHT
op	106:46	0:0	12	]
op	106:48	0:0	12	-=
water	106:51	0:0	12	surround_mix_level
op	106:70	0:0	12	*
water	106:72	0:0	12	M_SQRT1_2
water	106:81	0:0	12	;
water	107:16	0:0	12	matrix
op	107:22	0:0	12	[
water	107:23	0:0	12	FRONT_RIGHT
op	107:34	0:0	12	]
op	107:35	0:0	12	[
water	107:36	0:0	12	BACK_LEFT
op	107:46	0:0	12	]
op	107:48	0:0	12	+=
water	107:51	0:0	12	surround_mix_level
op	107:70	0:0	12	*
water	107:72	0:0	12	M_SQRT1_2
water	107:81	0:0	12	;
water	108:16	0:0	12	matrix
op	108:22	0:0	12	[
water	108:23	0:0	12	FRONT_RIGHT
op	108:34	0:0	12	]
op	108:35	0:0	12	[
water	108:36	0:0	12	BACK_RIGHT
op	108:46	0:0	12	]
op	108:48	0:0	12	+=
water	108:51	0:0	12	surround_mix_level
op	108:70	0:0	12	*
water	108:72	0:0	12	SQRT3_2
water	108:79	0:0	12	;
water	109:12	0:0	12	}
else	109:14	112:12	8
stmts	109:19	112:12	9	
water	109:19	0:0	10	{
water	110:16	0:0	10	matrix
op	110:22	0:0	10	[
water	110:23	0:0	10	FRONT_LEFT
op	110:34	0:0	10	]
op	110:35	0:0	10	[
water	110:36	0:0	10	BACK_LEFT
op	110:46	0:0	10	]
op	110:48	0:0	10	+=
water	110:51	0:0	10	surround_mix_level
water	110:69	0:0	10	;
water	111:16	0:0	10	matrix
op	111:22	0:0	10	[
water	111:23	0:0	10	FRONT_RIGHT
op	111:34	0:0	10	]
op	111:35	0:0	10	[
water	111:36	0:0	10	BACK_RIGHT
op	111:46	0:0	10	]
op	111:48	0:0	10	+=
water	111:51	0:0	10	surround_mix_level
water	111:69	0:0	10	;
water	112:12	0:0	10	}
water	113:8	0:0	8	}
else	113:10	116:8	4
stmts	113:15	116:8	5	
if	113:15	116:8	6	(out_layout & AV_CH_FRONT_CENTER)
cond	113:19	113:32	7	out_layout & AV_CH_FRONT_CENTER
water	113:19	0:0	8	out_layout
op	113:30	0:0	8	&
water	113:32	0:0	8	AV_CH_FRONT_CENTER
stmts	113:52	116:8	7	
water	113:52	0:0	8	{
water	114:12	0:0	8	matrix
op	114:18	0:0	8	[
water	114:19	0:0	8	FRONT_CENTER
op	114:31	0:0	8	]
op	114:32	0:0	8	[
water	114:33	0:0	8	BACK_LEFT
op	114:43	0:0	8	]
op	114:45	0:0	8	+=
water	114:48	0:0	8	surround_mix_level
op	114:67	0:0	8	*
water	114:69	0:0	8	M_SQRT1_2
water	114:78	0:0	8	;
water	115:12	0:0	8	matrix
op	115:18	0:0	8	[
water	115:19	0:0	8	FRONT_CENTER
op	115:31	0:0	8	]
op	115:32	0:0	8	[
water	115:33	0:0	8	BACK_RIGHT
op	115:43	0:0	8	]
op	115:45	0:0	8	+=
water	115:48	0:0	8	surround_mix_level
op	115:67	0:0	8	*
water	115:69	0:0	8	M_SQRT1_2
water	115:78	0:0	8	;
water	116:8	0:0	8	}
else	116:10	117:39	4
stmts	117:12	117:39	5	
return	117:12	117:39	6	AVERROR_PATCHWELCOME
water	117:19	0:0	7	AVERROR_PATCHWELCOME
water	118:4	0:0	4	}
if	120:4	154:4	2	(unaccounted & AV_CH_SIDE_LEFT)
cond	120:8	120:22	3	unaccounted & AV_CH_SIDE_LEFT
water	120:8	0:0	4	unaccounted
op	120:20	0:0	4	&
water	120:22	0:0	4	AV_CH_SIDE_LEFT
stmts	120:39	154:4	3	
water	120:39	0:0	4	{
if	121:8	131:8	4	(out_layout & AV_CH_BACK_LEFT)
cond	121:12	121:25	5	out_layout & AV_CH_BACK_LEFT
water	121:12	0:0	6	out_layout
op	121:23	0:0	6	&
water	121:25	0:0	6	AV_CH_BACK_LEFT
stmts	121:42	131:8	5	
water	121:42	0:0	6	{
if	124:12	127:12	6	(in_layout & AV_CH_BACK_LEFT)
cond	124:16	124:28	7	in_layout & AV_CH_BACK_LEFT
water	124:16	0:0	8	in_layout
op	124:26	0:0	8	&
water	124:28	0:0	8	AV_CH_BACK_LEFT
stmts	124:45	127:12	7	
water	124:45	0:0	8	{
water	125:16	0:0	8	matrix
op	125:22	0:0	8	[
water	125:23	0:0	8	BACK_LEFT
op	125:33	0:0	8	]
op	125:34	0:0	8	[
water	125:35	0:0	8	SIDE_LEFT
op	125:45	0:0	8	]
op	125:47	0:0	8	+=
water	125:50	0:0	8	M_SQRT1_2
water	125:59	0:0	8	;
water	126:16	0:0	8	matrix
op	126:22	0:0	8	[
water	126:23	0:0	8	BACK_RIGHT
op	126:33	0:0	8	]
op	126:34	0:0	8	[
water	126:35	0:0	8	SIDE_RIGHT
op	126:45	0:0	8	]
op	126:47	0:0	8	+=
water	126:50	0:0	8	M_SQRT1_2
water	126:59	0:0	8	;
water	127:12	0:0	8	}
else	127:14	130:12	6
stmts	127:19	130:12	7	
water	127:19	0:0	8	{
water	128:16	0:0	8	matrix
op	128:22	0:0	8	[
water	128:23	0:0	8	BACK_LEFT
op	128:33	0:0	8	]
op	128:34	0:0	8	[
water	128:35	0:0	8	SIDE_LEFT
op	128:45	0:0	8	]
op	128:47	0:0	8	+=
water	128:50	0:0	8	1
op	128:51	0:0	8	.
water	128:52	0:0	8	0
water	128:53	0:0	8	;
water	129:16	0:0	8	matrix
op	129:22	0:0	8	[
water	129:23	0:0	8	BACK_RIGHT
op	129:33	0:0	8	]
op	129:34	0:0	8	[
water	129:35	0:0	8	SIDE_RIGHT
op	129:45	0:0	8	]
op	129:47	0:0	8	+=
water	129:50	0:0	8	1
op	129:51	0:0	8	.
water	129:52	0:0	8	0
water	129:53	0:0	8	;
water	130:12	0:0	8	}
water	131:8	0:0	6	}
else	131:10	134:8	4
stmts	131:15	134:8	5	
if	131:15	134:8	6	(out_layout & AV_CH_BACK_CENTER)
cond	131:19	131:32	7	out_layout & AV_CH_BACK_CENTER
water	131:19	0:0	8	out_layout
op	131:30	0:0	8	&
water	131:32	0:0	8	AV_CH_BACK_CENTER
stmts	131:51	134:8	7	
water	131:51	0:0	8	{
water	132:12	0:0	8	matrix
op	132:18	0:0	8	[
water	132:19	0:0	8	BACK_CENTER
op	132:30	0:0	8	]
op	132:31	0:0	8	[
water	132:32	0:0	8	SIDE_LEFT
op	132:42	0:0	8	]
op	132:44	0:0	8	+=
water	132:47	0:0	8	M_SQRT1_2
water	132:56	0:0	8	;
water	133:12	0:0	8	matrix
op	133:18	0:0	8	[
water	133:19	0:0	8	BACK_CENTER
op	133:30	0:0	8	]
op	133:31	0:0	8	[
water	133:32	0:0	8	SIDE_RIGHT
op	133:42	0:0	8	]
op	133:44	0:0	8	+=
water	133:47	0:0	8	M_SQRT1_2
water	133:56	0:0	8	;
water	134:8	0:0	8	}
else	134:10	149:8	4
stmts	134:15	149:8	5	
if	134:15	149:8	6	(out_layout & AV_CH_FRONT_LEFT)
cond	134:19	134:32	7	out_layout & AV_CH_FRONT_LEFT
water	134:19	0:0	8	out_layout
op	134:30	0:0	8	&
water	134:32	0:0	8	AV_CH_FRONT_LEFT
stmts	134:50	149:8	7	
water	134:50	0:0	8	{
if	135:12	140:12	8	(matrix_encoding == AV_MATRIX_ENCODING_DOLBY)
cond	135:16	135:35	9	matrix_encoding == AV_MATRIX_ENCODING_DOLBY
water	135:16	0:0	10	matrix_encoding
op	135:32	0:0	10	==
water	135:35	0:0	10	AV_MATRIX_ENCODING_DOLBY
stmts	135:61	140:12	9	
water	135:61	0:0	10	{
water	136:16	0:0	10	matrix
op	136:22	0:0	10	[
water	136:23	0:0	10	FRONT_LEFT
op	136:34	0:0	10	]
op	136:35	0:0	10	[
water	136:36	0:0	10	SIDE_LEFT
op	136:46	0:0	10	]
op	136:48	0:0	10	-=
water	136:51	0:0	10	surround_mix_level
op	136:70	0:0	10	*
water	136:72	0:0	10	M_SQRT1_2
water	136:81	0:0	10	;
water	137:16	0:0	10	matrix
op	137:22	0:0	10	[
water	137:23	0:0	10	FRONT_LEFT
op	137:34	0:0	10	]
op	137:35	0:0	10	[
water	137:36	0:0	10	SIDE_RIGHT
op	137:46	0:0	10	]
op	137:48	0:0	10	-=
water	137:51	0:0	10	surround_mix_level
op	137:70	0:0	10	*
water	137:72	0:0	10	M_SQRT1_2
water	137:81	0:0	10	;
water	138:16	0:0	10	matrix
op	138:22	0:0	10	[
water	138:23	0:0	10	FRONT_RIGHT
op	138:34	0:0	10	]
op	138:35	0:0	10	[
water	138:36	0:0	10	SIDE_LEFT
op	138:46	0:0	10	]
op	138:48	0:0	10	+=
water	138:51	0:0	10	surround_mix_level
op	138:70	0:0	10	*
water	138:72	0:0	10	M_SQRT1_2
water	138:81	0:0	10	;
water	139:16	0:0	10	matrix
op	139:22	0:0	10	[
water	139:23	0:0	10	FRONT_RIGHT
op	139:34	0:0	10	]
op	139:35	0:0	10	[
water	139:36	0:0	10	SIDE_RIGHT
op	139:46	0:0	10	]
op	139:48	0:0	10	+=
water	139:51	0:0	10	surround_mix_level
op	139:70	0:0	10	*
water	139:72	0:0	10	M_SQRT1_2
water	139:81	0:0	10	;
water	140:12	0:0	10	}
else	140:14	145:12	8
stmts	140:19	145:12	9	
if	140:19	145:12	10	(matrix_encoding == AV_MATRIX_ENCODING_DPLII)
cond	140:23	140:42	11	matrix_encoding == AV_MATRIX_ENCODING_DPLII
water	140:23	0:0	12	matrix_encoding
op	140:39	0:0	12	==
water	140:42	0:0	12	AV_MATRIX_ENCODING_DPLII
stmts	140:68	145:12	11	
water	140:68	0:0	12	{
water	141:16	0:0	12	matrix
op	141:22	0:0	12	[
water	141:23	0:0	12	FRONT_LEFT
op	141:34	0:0	12	]
op	141:35	0:0	12	[
water	141:36	0:0	12	SIDE_LEFT
op	141:46	0:0	12	]
op	141:48	0:0	12	-=
water	141:51	0:0	12	surround_mix_level
op	141:70	0:0	12	*
water	141:72	0:0	12	SQRT3_2
water	141:79	0:0	12	;
water	142:16	0:0	12	matrix
op	142:22	0:0	12	[
water	142:23	0:0	12	FRONT_LEFT
op	142:34	0:0	12	]
op	142:35	0:0	12	[
water	142:36	0:0	12	SIDE_RIGHT
op	142:46	0:0	12	]
op	142:48	0:0	12	-=
water	142:51	0:0	12	surround_mix_level
op	142:70	0:0	12	*
water	142:72	0:0	12	M_SQRT1_2
water	142:81	0:0	12	;
water	143:16	0:0	12	matrix
op	143:22	0:0	12	[
water	143:23	0:0	12	FRONT_RIGHT
op	143:34	0:0	12	]
op	143:35	0:0	12	[
water	143:36	0:0	12	SIDE_LEFT
op	143:46	0:0	12	]
op	143:48	0:0	12	+=
water	143:51	0:0	12	surround_mix_level
op	143:70	0:0	12	*
water	143:72	0:0	12	M_SQRT1_2
water	143:81	0:0	12	;
water	144:16	0:0	12	matrix
op	144:22	0:0	12	[
water	144:23	0:0	12	FRONT_RIGHT
op	144:34	0:0	12	]
op	144:35	0:0	12	[
water	144:36	0:0	12	SIDE_RIGHT
op	144:46	0:0	12	]
op	144:48	0:0	12	+=
water	144:51	0:0	12	surround_mix_level
op	144:70	0:0	12	*
water	144:72	0:0	12	SQRT3_2
water	144:79	0:0	12	;
water	145:12	0:0	12	}
else	145:14	148:12	8
stmts	145:19	148:12	9	
water	145:19	0:0	10	{
water	146:16	0:0	10	matrix
op	146:22	0:0	10	[
water	146:23	0:0	10	FRONT_LEFT
op	146:34	0:0	10	]
op	146:35	0:0	10	[
water	146:36	0:0	10	SIDE_LEFT
op	146:46	0:0	10	]
op	146:48	0:0	10	+=
water	146:51	0:0	10	surround_mix_level
water	146:69	0:0	10	;
water	147:16	0:0	10	matrix
op	147:22	0:0	10	[
water	147:23	0:0	10	FRONT_RIGHT
op	147:34	0:0	10	]
op	147:35	0:0	10	[
water	147:36	0:0	10	SIDE_RIGHT
op	147:46	0:0	10	]
op	147:48	0:0	10	+=
water	147:51	0:0	10	surround_mix_level
water	147:69	0:0	10	;
water	148:12	0:0	10	}
water	149:8	0:0	8	}
else	149:10	152:8	4
stmts	149:15	152:8	5	
if	149:15	152:8	6	(out_layout & AV_CH_FRONT_CENTER)
cond	149:19	149:32	7	out_layout & AV_CH_FRONT_CENTER
water	149:19	0:0	8	out_layout
op	149:30	0:0	8	&
water	149:32	0:0	8	AV_CH_FRONT_CENTER
stmts	149:52	152:8	7	
water	149:52	0:0	8	{
water	150:12	0:0	8	matrix
op	150:18	0:0	8	[
water	150:19	0:0	8	FRONT_CENTER
op	150:31	0:0	8	]
op	150:32	0:0	8	[
water	150:33	0:0	8	SIDE_LEFT
op	150:43	0:0	8	]
op	150:45	0:0	8	+=
water	150:48	0:0	8	surround_mix_level
op	150:67	0:0	8	*
water	150:69	0:0	8	M_SQRT1_2
water	150:78	0:0	8	;
water	151:12	0:0	8	matrix
op	151:18	0:0	8	[
water	151:19	0:0	8	FRONT_CENTER
op	151:31	0:0	8	]
op	151:32	0:0	8	[
water	151:33	0:0	8	SIDE_RIGHT
op	151:43	0:0	8	]
op	151:45	0:0	8	+=
water	151:48	0:0	8	surround_mix_level
op	151:67	0:0	8	*
water	151:69	0:0	8	M_SQRT1_2
water	151:78	0:0	8	;
water	152:8	0:0	8	}
else	152:10	153:39	4
stmts	153:12	153:39	5	
return	153:12	153:39	6	AVERROR_PATCHWELCOME
water	153:19	0:0	7	AVERROR_PATCHWELCOME
water	154:4	0:0	4	}
if	156:4	165:4	2	(unaccounted & AV_CH_FRONT_LEFT_OF_CENTER)
cond	156:8	156:22	3	unaccounted & AV_CH_FRONT_LEFT_OF_CENTER
water	156:8	0:0	4	unaccounted
op	156:20	0:0	4	&
water	156:22	0:0	4	AV_CH_FRONT_LEFT_OF_CENTER
stmts	156:50	165:4	3	
water	156:50	0:0	4	{
if	157:8	160:8	4	(out_layout & AV_CH_FRONT_LEFT)
cond	157:12	157:25	5	out_layout & AV_CH_FRONT_LEFT
water	157:12	0:0	6	out_layout
op	157:23	0:0	6	&
water	157:25	0:0	6	AV_CH_FRONT_LEFT
stmts	157:43	160:8	5	
water	157:43	0:0	6	{
water	158:12	0:0	6	matrix
op	158:18	0:0	6	[
water	158:19	0:0	6	FRONT_LEFT
op	158:30	0:0	6	]
op	158:31	0:0	6	[
water	158:32	0:0	6	FRONT_LEFT_OF_CENTER
op	158:53	0:0	6	]
op	158:55	0:0	6	+=
water	158:58	0:0	6	1
op	158:59	0:0	6	.
water	158:60	0:0	6	0
water	158:61	0:0	6	;
water	159:12	0:0	6	matrix
op	159:18	0:0	6	[
water	159:19	0:0	6	FRONT_RIGHT
op	159:30	0:0	6	]
op	159:31	0:0	6	[
water	159:32	0:0	6	FRONT_RIGHT_OF_CENTER
op	159:53	0:0	6	]
op	159:55	0:0	6	+=
water	159:58	0:0	6	1
op	159:59	0:0	6	.
water	159:60	0:0	6	0
water	159:61	0:0	6	;
water	160:8	0:0	6	}
else	160:10	163:8	4
stmts	160:15	163:8	5	
if	160:15	163:8	6	(out_layout & AV_CH_FRONT_CENTER)
cond	160:19	160:32	7	out_layout & AV_CH_FRONT_CENTER
water	160:19	0:0	8	out_layout
op	160:30	0:0	8	&
water	160:32	0:0	8	AV_CH_FRONT_CENTER
stmts	160:52	163:8	7	
water	160:52	0:0	8	{
water	161:12	0:0	8	matrix
op	161:18	0:0	8	[
water	161:19	0:0	8	FRONT_CENTER
op	161:31	0:0	8	]
op	161:32	0:0	8	[
water	161:33	0:0	8	FRONT_LEFT_OF_CENTER
op	161:54	0:0	8	]
op	161:56	0:0	8	+=
water	161:59	0:0	8	M_SQRT1_2
water	161:68	0:0	8	;
water	162:12	0:0	8	matrix
op	162:18	0:0	8	[
water	162:19	0:0	8	FRONT_CENTER
op	162:31	0:0	8	]
op	162:32	0:0	8	[
water	162:33	0:0	8	FRONT_RIGHT_OF_CENTER
op	162:54	0:0	8	]
op	162:56	0:0	8	+=
water	162:59	0:0	8	M_SQRT1_2
water	162:68	0:0	8	;
water	163:8	0:0	8	}
else	163:10	164:39	4
stmts	164:12	164:39	5	
return	164:12	164:39	6	AVERROR_PATCHWELCOME
water	164:19	0:0	7	AVERROR_PATCHWELCOME
water	165:4	0:0	4	}
if	167:4	175:4	2	(unaccounted & AV_CH_LOW_FREQUENCY)
cond	167:8	167:22	3	unaccounted & AV_CH_LOW_FREQUENCY
water	167:8	0:0	4	unaccounted
op	167:20	0:0	4	&
water	167:22	0:0	4	AV_CH_LOW_FREQUENCY
stmts	167:43	175:4	3	
water	167:43	0:0	4	{
if	168:8	170:8	4	(out_layout & AV_CH_FRONT_CENTER)
cond	168:12	168:25	5	out_layout & AV_CH_FRONT_CENTER
water	168:12	0:0	6	out_layout
op	168:23	0:0	6	&
water	168:25	0:0	6	AV_CH_FRONT_CENTER
stmts	168:45	170:8	5	
water	168:45	0:0	6	{
water	169:12	0:0	6	matrix
op	169:18	0:0	6	[
water	169:19	0:0	6	FRONT_CENTER
op	169:31	0:0	6	]
op	169:32	0:0	6	[
water	169:33	0:0	6	LOW_FREQUENCY
op	169:46	0:0	6	]
op	169:48	0:0	6	+=
water	169:51	0:0	6	lfe_mix_level
water	169:64	0:0	6	;
water	170:8	0:0	6	}
else	170:10	173:8	4
stmts	170:15	173:8	5	
if	170:15	173:8	6	(out_layout & AV_CH_FRONT_LEFT)
cond	170:19	170:32	7	out_layout & AV_CH_FRONT_LEFT
water	170:19	0:0	8	out_layout
op	170:30	0:0	8	&
water	170:32	0:0	8	AV_CH_FRONT_LEFT
stmts	170:50	173:8	7	
water	170:50	0:0	8	{
water	171:12	0:0	8	matrix
op	171:18	0:0	8	[
water	171:19	0:0	8	FRONT_LEFT
op	171:30	0:0	8	]
op	171:31	0:0	8	[
water	171:32	0:0	8	LOW_FREQUENCY
op	171:45	0:0	8	]
op	171:47	0:0	8	+=
water	171:50	0:0	8	lfe_mix_level
op	171:64	0:0	8	*
water	171:66	0:0	8	M_SQRT1_2
water	171:75	0:0	8	;
water	172:12	0:0	8	matrix
op	172:18	0:0	8	[
water	172:19	0:0	8	FRONT_RIGHT
op	172:30	0:0	8	]
op	172:31	0:0	8	[
water	172:32	0:0	8	LOW_FREQUENCY
op	172:45	0:0	8	]
op	172:47	0:0	8	+=
water	172:50	0:0	8	lfe_mix_level
op	172:64	0:0	8	*
water	172:66	0:0	8	M_SQRT1_2
water	172:75	0:0	8	;
water	173:8	0:0	8	}
else	173:10	174:39	4
stmts	174:12	174:39	5	
return	174:12	174:39	6	AVERROR_PATCHWELCOME
water	174:19	0:0	7	AVERROR_PATCHWELCOME
water	175:4	0:0	4	}
for	178:4	189:4	2	(out_i = i = 0 ;out_i < out_channels && i < 64;i ++)
forinit	178:9	178:22	3	out_i = i = 0 ;
water	178:9	0:0	4	out_i
op	178:15	0:0	4	=
water	178:17	0:0	4	i
op	178:19	0:0	4	=
water	178:21	0:0	4	0
water	178:22	0:0	4	;
cond	178:24	178:52	3	out_i < out_channels && i < 64
water	178:24	0:0	4	out_i
op	178:30	0:0	4	<
water	178:32	0:0	4	out_channels
op	178:45	0:0	4	&&
water	178:48	0:0	4	i
op	178:50	0:0	4	<
water	178:52	0:0	4	64
forexpr	178:56	178:57	3	i ++
water	178:56	0:0	4	i
op	178:57	0:0	4	++
stmts	178:61	189:4	3	
water	178:61	0:0	4	{
decl	179:8	179:22	4	double	sum
op	179:19	0:0	4	=
water	179:21	0:0	4	0
for	180:8	185:8	4	(out_j = j = 0 ;out_j < in_channels && j < 64;j ++)
forinit	180:13	180:26	5	out_j = j = 0 ;
water	180:13	0:0	6	out_j
op	180:19	0:0	6	=
water	180:21	0:0	6	j
op	180:23	0:0	6	=
water	180:25	0:0	6	0
water	180:26	0:0	6	;
cond	180:28	180:55	5	out_j < in_channels && j < 64
water	180:28	0:0	6	out_j
op	180:34	0:0	6	<
water	180:36	0:0	6	in_channels
op	180:48	0:0	6	&&
water	180:51	0:0	6	j
op	180:53	0:0	6	<
water	180:55	0:0	6	64
forexpr	180:59	180:60	5	j ++
water	180:59	0:0	6	j
op	180:60	0:0	6	++
stmts	180:64	185:8	5	
water	180:64	0:0	6	{
water	181:12	0:0	6	matrix_out
op	181:22	0:0	6	[
water	181:23	0:0	6	out_i
op	181:29	0:0	6	*
water	181:31	0:0	6	stride
op	181:38	0:0	6	+
water	181:40	0:0	6	out_j
op	181:45	0:0	6	]
op	181:47	0:0	6	=
water	181:49	0:0	6	matrix
op	181:55	0:0	6	[
water	181:56	0:0	6	i
op	181:57	0:0	6	]
op	181:58	0:0	6	[
water	181:59	0:0	6	j
op	181:60	0:0	6	]
water	181:61	0:0	6	;
water	182:12	0:0	6	sum
op	182:16	0:0	6	+=
call	182:19	182:36	6	fabs
arg	182:24	182:36	7	matrix[i][j]
water	182:24	0:0	8	matrix
op	182:30	0:0	8	[
water	182:31	0:0	8	i
op	182:32	0:0	8	]
op	182:33	0:0	8	[
water	182:34	0:0	8	j
op	182:35	0:0	8	]
water	182:37	0:0	6	;
if	183:12	184:23	6	(in_layout & ( 1 ULL << j ))
cond	183:16	183:38	7	in_layout & ( 1 ULL << j )
water	183:16	0:0	8	in_layout
op	183:26	0:0	8	&
water	183:28	0:0	8	(
water	183:29	0:0	8	1
water	183:30	0:0	8	ULL
op	183:34	0:0	8	<<
water	183:37	0:0	8	j
water	183:38	0:0	8	)
stmts	184:16	184:23	7	
water	184:16	0:0	8	out_j
op	184:21	0:0	8	++
water	184:23	0:0	8	;
water	185:8	0:0	6	}
water	186:8	0:0	4	maxcoef
op	186:16	0:0	4	=
call	186:18	186:36	4	FFMAX
arg	186:24	186:31	5	maxcoef
water	186:24	0:0	6	maxcoef
arg	186:33	186:36	5	sum
water	186:33	0:0	6	sum
water	186:37	0:0	4	;
if	187:8	188:19	4	(out_layout & ( 1 ULL << i ))
cond	187:12	187:35	5	out_layout & ( 1 ULL << i )
water	187:12	0:0	6	out_layout
op	187:23	0:0	6	&
water	187:25	0:0	6	(
water	187:26	0:0	6	1
water	187:27	0:0	6	ULL
op	187:31	0:0	6	<<
water	187:34	0:0	6	i
water	187:35	0:0	6	)
stmts	188:12	188:19	5	
water	188:12	0:0	6	out_i
op	188:17	0:0	6	++
water	188:19	0:0	6	;
water	189:4	0:0	4	}
if	191:4	195:4	2	(normalize && maxcoef > 1 . 0)
cond	191:8	191:33	3	normalize && maxcoef > 1 . 0
water	191:8	0:0	4	normalize
op	191:18	0:0	4	&&
water	191:21	0:0	4	maxcoef
op	191:29	0:0	4	>
water	191:31	0:0	4	1
op	191:32	0:0	4	.
water	191:33	0:0	4	0
stmts	191:36	195:4	3	
water	191:36	0:0	4	{
for	192:8	194:53	4	(i = 0 ;i < out_channels;i ++)
forinit	192:13	192:18	5	i = 0 ;
water	192:13	0:0	6	i
op	192:15	0:0	6	=
water	192:17	0:0	6	0
water	192:18	0:0	6	;
cond	192:20	192:24	5	i < out_channels
water	192:20	0:0	6	i
op	192:22	0:0	6	<
water	192:24	0:0	6	out_channels
forexpr	192:38	192:39	5	i ++
water	192:38	0:0	6	i
op	192:39	0:0	6	++
stmts	193:12	194:53	5	
for	193:12	194:53	6	(j = 0 ;j < in_channels;j ++)
forinit	193:17	193:22	7	j = 0 ;
water	193:17	0:0	8	j
op	193:19	0:0	8	=
water	193:21	0:0	8	0
water	193:22	0:0	8	;
cond	193:24	193:28	7	j < in_channels
water	193:24	0:0	8	j
op	193:26	0:0	8	<
water	193:28	0:0	8	in_channels
forexpr	193:41	193:42	7	j ++
water	193:41	0:0	8	j
op	193:42	0:0	8	++
stmts	194:16	194:53	7	
water	194:16	0:0	8	matrix_out
op	194:26	0:0	8	[
water	194:27	0:0	8	i
op	194:29	0:0	8	*
water	194:31	0:0	8	stride
op	194:38	0:0	8	+
water	194:40	0:0	8	j
op	194:41	0:0	8	]
op	194:43	0:0	8	/=
water	194:46	0:0	8	maxcoef
water	194:53	0:0	8	;
water	195:4	0:0	4	}
return	196:4	196:12	2	0
water	196:11	0:0	3	0

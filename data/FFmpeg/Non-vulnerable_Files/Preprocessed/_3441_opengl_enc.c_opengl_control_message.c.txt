func	1:0	15:0	0	static int	opengl_control_message
params	1:33	0:0	1	
param	1:34	1:52	2	AVFormatContext *	h
param	1:54	1:62	2	int	type
param	1:64	1:74	2	void *	data
param	1:76	1:92	2	size_t	data_size
stmnts	0:0	14:26	1	
decl	3:4	3:40	2	OpenGLContext	*opengl
op	3:26	0:0	2	=
water	3:28	0:0	2	h
op	3:29	0:0	2	->
water	3:31	0:0	2	priv_data
switch	4:4	13:4	2	(type)
cond	4:11	4:11	3	type
water	4:11	0:0	4	type
stmts	4:17	13:4	3	
water	4:17	0:0	4	{
label	5:4	5:34	4	case AV_APP_TO_DEV_WINDOW_SIZE :
if	6:8	9:8	4	(data)
cond	6:12	6:12	5	data
water	6:12	0:0	6	data
stmts	6:18	9:8	5	
water	6:18	0:0	6	{
decl	7:12	7:40	6	AVDeviceRect	*message
op	7:34	0:0	6	=
water	7:36	0:0	6	data
return	8:12	8:68	6	opengl_resize(h,message->width,message->height)
call	8:19	8:67	7	opengl_resize
arg	8:33	8:34	8	h
water	8:33	0:0	9	h
arg	8:36	8:50	8	message->width
water	8:36	0:0	9	message
op	8:43	0:0	9	->
water	8:45	0:0	9	width
arg	8:52	8:67	8	message->height
water	8:52	0:0	9	message
op	8:59	0:0	9	->
water	8:61	0:0	9	height
water	9:8	0:0	6	}
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
label	11:4	11:37	4	case AV_APP_TO_DEV_WINDOW_REPAINT :
return	12:8	12:76	4	opengl_resize(h,opengl->window_width,opengl->window_height)
call	12:15	12:75	5	opengl_resize
arg	12:29	12:30	6	h
water	12:29	0:0	7	h
arg	12:32	12:52	6	opengl->window_width
water	12:32	0:0	7	opengl
op	12:38	0:0	7	->
water	12:40	0:0	7	window_width
arg	12:54	12:75	6	opengl->window_height
water	12:54	0:0	7	opengl
op	12:60	0:0	7	->
water	12:62	0:0	7	window_height
water	13:4	0:0	4	}
return	14:4	14:26	2	AVERROR(ENOSYS)
call	14:11	14:25	3	AVERROR
arg	14:19	14:25	4	ENOSYS
water	14:19	0:0	5	ENOSYS

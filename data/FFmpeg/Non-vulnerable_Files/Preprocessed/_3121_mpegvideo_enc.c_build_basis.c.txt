func	2:0	19:0	0	static void	build_basis
params	2:23	0:0	1	
param	2:24	2:37	2	uint8_t *	perm
stmnts	0:0	18:4	1	
decl	3:4	3:18	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:18	2	int	j
water	3:12	0:0	2	,
decl	3:4	3:18	2	int	x
water	3:15	0:0	2	,
decl	3:4	3:18	2	int	y
call	4:4	4:11	2	emms_c
water	4:12	0:0	2	;
for	5:4	18:4	2	(i = 0 ;i < 8;i ++)
forinit	5:8	5:11	3	i = 0 ;
water	5:8	0:0	4	i
op	5:9	0:0	4	=
water	5:10	0:0	4	0
water	5:11	0:0	4	;
cond	5:13	5:15	3	i < 8
water	5:13	0:0	4	i
op	5:14	0:0	4	<
water	5:15	0:0	4	8
forexpr	5:18	5:19	3	i ++
water	5:18	0:0	4	i
op	5:19	0:0	4	++
stmts	5:22	18:4	3	
water	5:22	0:0	4	{
for	6:8	17:8	4	(j = 0 ;j < 8;j ++)
forinit	6:12	6:15	5	j = 0 ;
water	6:12	0:0	6	j
op	6:13	0:0	6	=
water	6:14	0:0	6	0
water	6:15	0:0	6	;
cond	6:17	6:19	5	j < 8
water	6:17	0:0	6	j
op	6:18	0:0	6	<
water	6:19	0:0	6	8
forexpr	6:22	6:23	5	j ++
water	6:22	0:0	6	j
op	6:23	0:0	6	++
stmts	6:26	17:8	5	
water	6:26	0:0	6	{
for	7:12	16:12	6	(y = 0 ;y < 8;y ++)
forinit	7:16	7:19	7	y = 0 ;
water	7:16	0:0	8	y
op	7:17	0:0	8	=
water	7:18	0:0	8	0
water	7:19	0:0	8	;
cond	7:21	7:23	7	y < 8
water	7:21	0:0	8	y
op	7:22	0:0	8	<
water	7:23	0:0	8	8
forexpr	7:26	7:27	7	y ++
water	7:26	0:0	8	y
op	7:27	0:0	8	++
stmts	7:30	16:12	7	
water	7:30	0:0	8	{
for	8:16	15:16	8	(x = 0 ;x < 8;x ++)
forinit	8:20	8:23	9	x = 0 ;
water	8:20	0:0	10	x
op	8:21	0:0	10	=
water	8:22	0:0	10	0
water	8:23	0:0	10	;
cond	8:25	8:27	9	x < 8
water	8:25	0:0	10	x
op	8:26	0:0	10	<
water	8:27	0:0	10	8
forexpr	8:30	8:31	9	x ++
water	8:30	0:0	10	x
op	8:31	0:0	10	++
stmts	8:34	15:16	9	
water	8:34	0:0	10	{
decl	9:20	9:51	10	double	s
op	9:28	0:0	10	=
water	9:30	0:0	10	0
op	9:31	0:0	10	.
water	9:32	0:0	10	25
op	9:34	0:0	10	*
water	9:35	0:0	10	(
water	9:36	0:0	10	1
op	9:37	0:0	10	<<
water	9:39	0:0	10	BASIS_SHIFT
water	9:50	0:0	10	)
decl	10:20	10:38	10	int	index
op	10:29	0:0	10	=
water	10:31	0:0	10	8
op	10:32	0:0	10	*
water	10:33	0:0	10	i
op	10:35	0:0	10	+
water	10:37	0:0	10	j
decl	11:20	11:47	10	int	perm_index
op	11:34	0:0	10	=
water	11:36	0:0	10	perm
op	11:40	0:0	10	[
water	11:41	0:0	10	index
op	11:46	0:0	10	]
if	12:20	12:42	10	(i == 0)
cond	12:23	12:26	11	i == 0
water	12:23	0:0	12	i
op	12:24	0:0	12	==
water	12:26	0:0	12	0
stmts	12:29	12:42	11	
water	12:29	0:0	12	s
op	12:30	0:0	12	*=
call	12:33	12:41	12	sqrt
arg	12:38	12:41	13	0.5
water	12:38	0:0	14	0
op	12:39	0:0	14	.
water	12:40	0:0	14	5
water	12:42	0:0	12	;
if	13:20	13:42	10	(j == 0)
cond	13:23	13:26	11	j == 0
water	13:23	0:0	12	j
op	13:24	0:0	12	==
water	13:26	0:0	12	0
stmts	13:29	13:42	11	
water	13:29	0:0	12	s
op	13:30	0:0	12	*=
call	13:33	13:41	12	sqrt
arg	13:38	13:41	13	0.5
water	13:38	0:0	14	0
op	13:39	0:0	14	.
water	13:40	0:0	14	5
water	13:42	0:0	12	;
water	14:20	0:0	10	basis
op	14:25	0:0	10	[
water	14:26	0:0	10	perm_index
op	14:36	0:0	10	]
op	14:37	0:0	10	[
water	14:38	0:0	10	8
op	14:39	0:0	10	*
water	14:40	0:0	10	x
op	14:42	0:0	10	+
water	14:44	0:0	10	y
op	14:45	0:0	10	]
op	14:46	0:0	10	=
call	14:48	14:112	10	lrintf
arg	14:55	14:112	11	s*cos((M_PI/8.0)*i*(x+0.5))*cos((M_PI/8.0)*j*(y+0.5))
water	14:55	0:0	12	s
call	14:57	14:83	12	*cos
arg	14:63	14:83	13	(M_PI/8.0)*i*(x+0.5)
water	14:63	0:0	14	(
water	14:64	0:0	14	M_PI
op	14:68	0:0	14	/
water	14:69	0:0	14	8
op	14:70	0:0	14	.
water	14:71	0:0	14	0
water	14:72	0:0	14	)
op	14:73	0:0	14	*
water	14:74	0:0	14	i
op	14:75	0:0	14	*
water	14:76	0:0	14	(
water	14:77	0:0	14	x
op	14:78	0:0	14	+
water	14:79	0:0	14	0
op	14:80	0:0	14	.
water	14:81	0:0	14	5
water	14:82	0:0	14	)
call	14:85	14:111	12	*cos
arg	14:91	14:111	13	(M_PI/8.0)*j*(y+0.5)
water	14:91	0:0	14	(
water	14:92	0:0	14	M_PI
op	14:96	0:0	14	/
water	14:97	0:0	14	8
op	14:98	0:0	14	.
water	14:99	0:0	14	0
water	14:100	0:0	14	)
op	14:101	0:0	14	*
water	14:102	0:0	14	j
op	14:103	0:0	14	*
water	14:104	0:0	14	(
water	14:105	0:0	14	y
op	14:106	0:0	14	+
water	14:107	0:0	14	0
op	14:108	0:0	14	.
water	14:109	0:0	14	5
water	14:110	0:0	14	)
water	14:113	0:0	10	;
water	15:16	0:0	10	}
water	16:12	0:0	8	}
water	17:8	0:0	6	}
water	18:4	0:0	4	}

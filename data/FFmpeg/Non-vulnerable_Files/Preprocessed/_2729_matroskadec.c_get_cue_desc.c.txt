func	1:0	28:0	0	static CueDesc	get_cue_desc
params	1:27	0:0	1	
param	1:28	1:46	2	AVFormatContext *	s
param	1:48	1:58	2	int64_t	ts
param	1:60	1:78	2	int64_t	cues_start
stmnts	0:0	27:19	1	
decl	2:4	2:49	2	MatroskaDemuxContext	*matroska
op	2:35	0:0	2	=
water	2:37	0:0	2	s
op	2:38	0:0	2	->
water	2:40	0:0	2	priv_data
decl	3:4	3:20	2	CueDesc	cue_desc
decl	4:4	4:9	2	int	i
decl	5:4	5:58	2	int	nb_index_entries
op	5:25	0:0	2	=
water	5:27	0:0	2	s
op	5:28	0:0	2	->
water	5:30	0:0	2	streams
op	5:37	0:0	2	[
water	5:38	0:0	2	0
op	5:39	0:0	2	]
op	5:40	0:0	2	->
water	5:42	0:0	2	nb_index_entries
decl	6:4	6:62	2	AVIndexEntry	*index_entries
op	6:32	0:0	2	=
water	6:34	0:0	2	s
op	6:35	0:0	2	->
water	6:37	0:0	2	streams
op	6:44	0:0	2	[
water	6:45	0:0	2	0
op	6:46	0:0	2	]
op	6:47	0:0	2	->
water	6:49	0:0	2	index_entries
if	7:4	7:90	2	(ts >= matroska -> duration * matroska -> time_scale)
cond	7:8	7:45	3	ts >= matroska -> duration * matroska -> time_scale
water	7:8	0:0	4	ts
op	7:11	0:0	4	>=
water	7:14	0:0	4	matroska
op	7:22	0:0	4	->
water	7:24	0:0	4	duration
op	7:33	0:0	4	*
water	7:35	0:0	4	matroska
op	7:43	0:0	4	->
water	7:45	0:0	4	time_scale
stmts	7:57	7:90	3	
return	7:57	7:90	4	(CueDesc){-1,-1,-1,-1}
water	7:64	0:0	5	(
water	7:65	0:0	5	CueDesc
water	7:72	0:0	5	)
water	7:74	0:0	5	{
op	7:75	0:0	5	-
water	7:76	0:0	5	1
water	7:77	0:0	5	,
op	7:79	0:0	5	-
water	7:80	0:0	5	1
water	7:81	0:0	5	,
op	7:83	0:0	5	-
water	7:84	0:0	5	1
water	7:85	0:0	5	,
op	7:87	0:0	5	-
water	7:88	0:0	5	1
water	7:89	0:0	5	}
for	8:4	13:4	2	(i = 1 ;i < nb_index_entries;i ++)
forinit	8:9	8:14	3	i = 1 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	1
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < nb_index_entries
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	nb_index_entries
forexpr	8:38	8:39	3	i ++
water	8:38	0:0	4	i
op	8:39	0:0	4	++
stmts	8:43	13:4	3	
water	8:43	0:0	4	{
if	9:8	12:8	4	(index_entries [ i - 1 ] . timestamp * matroska -> time_scale <= ts && index_entries [ i ] . timestamp * matroska -> time_scale > ts)
cond	9:12	10:64	5	index_entries [ i - 1 ] . timestamp * matroska -> time_scale <= ts && index_entries [ i ] . timestamp * matroska -> time_scale > ts
water	9:12	0:0	6	index_entries
op	9:25	0:0	6	[
water	9:26	0:0	6	i
op	9:28	0:0	6	-
water	9:30	0:0	6	1
op	9:31	0:0	6	]
op	9:32	0:0	6	.
water	9:33	0:0	6	timestamp
op	9:43	0:0	6	*
water	9:45	0:0	6	matroska
op	9:53	0:0	6	->
water	9:55	0:0	6	time_scale
op	9:66	0:0	6	<=
water	9:69	0:0	6	ts
op	9:72	0:0	6	&&
water	10:12	0:0	6	index_entries
op	10:25	0:0	6	[
water	10:26	0:0	6	i
op	10:27	0:0	6	]
op	10:28	0:0	6	.
water	10:29	0:0	6	timestamp
op	10:39	0:0	6	*
water	10:41	0:0	6	matroska
op	10:49	0:0	6	->
water	10:51	0:0	6	time_scale
op	10:62	0:0	6	>
water	10:64	0:0	6	ts
stmts	10:68	12:8	5	
water	10:68	0:0	6	{
break	11:12	11:17	6	
water	12:8	0:0	6	}
water	13:4	0:0	4	}
op	14:4	0:0	2	--
water	14:6	0:0	2	i
water	14:7	0:0	2	;
water	15:4	0:0	2	cue_desc
op	15:12	0:0	2	.
water	15:13	0:0	2	start_time_ns
op	15:27	0:0	2	=
water	15:29	0:0	2	index_entries
op	15:42	0:0	2	[
water	15:43	0:0	2	i
op	15:44	0:0	2	]
op	15:45	0:0	2	.
water	15:46	0:0	2	timestamp
op	15:56	0:0	2	*
water	15:58	0:0	2	matroska
op	15:66	0:0	2	->
water	15:68	0:0	2	time_scale
water	15:78	0:0	2	;
water	16:4	0:0	2	cue_desc
op	16:12	0:0	2	.
water	16:13	0:0	2	start_offset
op	16:26	0:0	2	=
water	16:28	0:0	2	index_entries
op	16:41	0:0	2	[
water	16:42	0:0	2	i
op	16:43	0:0	2	]
op	16:44	0:0	2	.
water	16:45	0:0	2	pos
op	16:49	0:0	2	-
water	16:51	0:0	2	matroska
op	16:59	0:0	2	->
water	16:61	0:0	2	segment_start
water	16:74	0:0	2	;
if	17:4	20:4	2	(i != nb_index_entries - 1)
cond	17:8	17:32	3	i != nb_index_entries - 1
water	17:8	0:0	4	i
op	17:10	0:0	4	!=
water	17:13	0:0	4	nb_index_entries
op	17:30	0:0	4	-
water	17:32	0:0	4	1
stmts	17:35	20:4	3	
water	17:35	0:0	4	{
water	18:8	0:0	4	cue_desc
op	18:16	0:0	4	.
water	18:17	0:0	4	end_time_ns
op	18:29	0:0	4	=
water	18:31	0:0	4	index_entries
op	18:44	0:0	4	[
water	18:45	0:0	4	i
op	18:47	0:0	4	+
water	18:49	0:0	4	1
op	18:50	0:0	4	]
op	18:51	0:0	4	.
water	18:52	0:0	4	timestamp
op	18:62	0:0	4	*
water	18:64	0:0	4	matroska
op	18:72	0:0	4	->
water	18:74	0:0	4	time_scale
water	18:84	0:0	4	;
water	19:8	0:0	4	cue_desc
op	19:16	0:0	4	.
water	19:17	0:0	4	end_offset
op	19:28	0:0	4	=
water	19:30	0:0	4	index_entries
op	19:43	0:0	4	[
water	19:44	0:0	4	i
op	19:46	0:0	4	+
water	19:48	0:0	4	1
op	19:49	0:0	4	]
op	19:50	0:0	4	.
water	19:51	0:0	4	pos
op	19:55	0:0	4	-
water	19:57	0:0	4	matroska
op	19:65	0:0	4	->
water	19:67	0:0	4	segment_start
water	19:80	0:0	4	;
water	20:4	0:0	4	}
else	20:6	26:4	2
stmts	20:11	26:4	3	
water	20:11	0:0	4	{
water	21:8	0:0	4	cue_desc
op	21:16	0:0	4	.
water	21:17	0:0	4	end_time_ns
op	21:29	0:0	4	=
water	21:31	0:0	4	matroska
op	21:39	0:0	4	->
water	21:41	0:0	4	duration
op	21:50	0:0	4	*
water	21:52	0:0	4	matroska
op	21:60	0:0	4	->
water	21:62	0:0	4	time_scale
water	21:72	0:0	4	;
water	25:8	0:0	4	cue_desc
op	25:16	0:0	4	.
water	25:17	0:0	4	end_offset
op	25:28	0:0	4	=
water	25:30	0:0	4	cues_start
op	25:41	0:0	4	-
water	25:43	0:0	4	matroska
op	25:51	0:0	4	->
water	25:53	0:0	4	segment_start
water	25:66	0:0	4	;
water	26:4	0:0	4	}
return	27:4	27:19	2	cue_desc
water	27:11	0:0	3	cue_desc

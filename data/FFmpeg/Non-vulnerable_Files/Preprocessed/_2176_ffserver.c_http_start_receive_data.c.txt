func	1:0	55:0	0	static int	http_start_receive_data
params	1:34	0:0	1	
param	1:35	1:49	2	HTTPContext *	c
stmnts	0:0	54:12	1	
decl	3:4	3:10	2	int	fd
decl	4:4	4:11	2	int	ret
decl	5:4	5:17	2	int64_t	ret64
if	6:4	10:4	2	(c -> stream -> feed_opened)
cond	6:8	6:19	3	c -> stream -> feed_opened
water	6:8	0:0	4	c
op	6:9	0:0	4	->
water	6:11	0:0	4	stream
op	6:17	0:0	4	->
water	6:19	0:0	4	feed_opened
stmts	6:32	10:4	3	
water	6:32	0:0	4	{
call	7:8	8:41	4	http_log
arg	7:17	7:52	5	"Stream feed '%s' was not opened\n"
water	7:17	0:0	6	"Stream feed '%s' was not opened\n"
arg	8:17	8:41	5	c->stream->feed_filename
water	8:17	0:0	6	c
op	8:18	0:0	6	->
water	8:20	0:0	6	stream
op	8:26	0:0	6	->
water	8:28	0:0	6	feed_filename
water	8:42	0:0	4	;
return	9:8	9:30	4	AVERROR(EINVAL)
call	9:15	9:29	5	AVERROR
arg	9:23	9:29	6	EINVAL
water	9:23	0:0	7	EINVAL
water	10:4	0:0	4	}
if	12:4	16:4	2	(c -> stream -> readonly)
cond	12:8	12:19	3	c -> stream -> readonly
water	12:8	0:0	4	c
op	12:9	0:0	4	->
water	12:11	0:0	4	stream
op	12:17	0:0	4	->
water	12:19	0:0	4	readonly
stmts	12:29	16:4	3	
water	12:29	0:0	4	{
call	13:8	14:41	4	http_log
arg	13:17	13:56	5	"Cannot write to read-only file '%s'\n"
water	13:17	0:0	6	"Cannot write to read-only file '%s'\n"
arg	14:17	14:41	5	c->stream->feed_filename
water	14:17	0:0	6	c
op	14:18	0:0	6	->
water	14:20	0:0	6	stream
op	14:26	0:0	6	->
water	14:28	0:0	6	feed_filename
water	14:42	0:0	4	;
return	15:8	15:30	4	AVERROR(EINVAL)
call	15:15	15:29	5	AVERROR
arg	15:23	15:29	6	EINVAL
water	15:23	0:0	7	EINVAL
water	16:4	0:0	4	}
water	18:4	0:0	2	fd
op	18:7	0:0	2	=
call	18:9	18:46	2	open
arg	18:14	18:38	3	c->stream->feed_filename
water	18:14	0:0	4	c
op	18:15	0:0	4	->
water	18:17	0:0	4	stream
op	18:23	0:0	4	->
water	18:25	0:0	4	feed_filename
arg	18:40	18:46	3	O_RDWR
water	18:40	0:0	4	O_RDWR
water	18:47	0:0	2	;
if	19:4	24:4	2	(fd < 0)
cond	19:8	19:13	3	fd < 0
water	19:8	0:0	4	fd
op	19:11	0:0	4	<
water	19:13	0:0	4	0
stmts	19:16	24:4	3	
water	19:16	0:0	4	{
water	20:8	0:0	4	ret
op	20:12	0:0	4	=
call	20:14	20:27	4	AVERROR
arg	20:22	20:27	5	errno
water	20:22	0:0	6	errno
water	20:28	0:0	4	;
call	21:8	22:58	4	http_log
arg	21:17	21:54	5	"Could not open feed file '%s': %s\n"
water	21:17	0:0	6	"Could not open feed file '%s': %s\n"
arg	22:17	22:41	5	c->stream->feed_filename
water	22:17	0:0	6	c
op	22:18	0:0	6	->
water	22:20	0:0	6	stream
op	22:26	0:0	6	->
water	22:28	0:0	6	feed_filename
arg	22:43	22:58	5	strerror(errno)
call	22:43	22:57	6	strerror
arg	22:52	22:57	7	errno
water	22:52	0:0	8	errno
water	22:59	0:0	4	;
return	23:8	23:18	4	ret
water	23:15	0:0	5	ret
water	24:4	0:0	4	}
water	25:4	0:0	2	c
op	25:5	0:0	2	->
water	25:7	0:0	2	feed_fd
op	25:15	0:0	2	=
water	25:17	0:0	2	fd
water	25:19	0:0	2	;
if	26:4	36:4	2	(c -> stream -> truncate)
cond	26:8	26:19	3	c -> stream -> truncate
water	26:8	0:0	4	c
op	26:9	0:0	4	->
water	26:11	0:0	4	stream
op	26:17	0:0	4	->
water	26:19	0:0	4	truncate
stmts	26:29	36:4	3	
water	26:29	0:0	4	{
call	28:8	28:57	4	ffm_write_write_index
arg	28:30	28:40	5	c->feed_fd
water	28:30	0:0	6	c
op	28:31	0:0	6	->
water	28:33	0:0	6	feed_fd
arg	28:42	28:57	5	FFM_PACKET_SIZE
water	28:42	0:0	6	FFM_PACKET_SIZE
water	28:58	0:0	4	;
call	29:8	29:72	4	http_log
arg	29:17	29:46	5	"Truncating feed file '%s'\n"
water	29:17	0:0	6	"Truncating feed file '%s'\n"
arg	29:48	29:72	5	c->stream->feed_filename
water	29:48	0:0	6	c
op	29:49	0:0	6	->
water	29:51	0:0	6	stream
op	29:57	0:0	6	->
water	29:59	0:0	6	feed_filename
water	29:73	0:0	4	;
if	30:8	35:8	4	(ftruncate (c -> feed_fd ,FFM_PACKET_SIZE ) < 0)
cond	30:12	30:53	5	ftruncate (c -> feed_fd ,FFM_PACKET_SIZE ) < 0
call	30:12	30:49	6	ftruncate
arg	30:22	30:32	7	c->feed_fd
water	30:22	0:0	8	c
op	30:23	0:0	8	->
water	30:25	0:0	8	feed_fd
arg	30:34	30:49	7	FFM_PACKET_SIZE
water	30:34	0:0	8	FFM_PACKET_SIZE
op	30:51	0:0	6	<
water	30:53	0:0	6	0
stmts	30:56	35:8	5	
water	30:56	0:0	6	{
water	31:12	0:0	6	ret
op	31:16	0:0	6	=
call	31:18	31:31	6	AVERROR
arg	31:26	31:31	7	errno
water	31:26	0:0	8	errno
water	31:32	0:0	6	;
call	32:12	33:62	6	http_log
arg	32:21	32:60	7	"Error truncating feed file '%s': %s\n"
water	32:21	0:0	8	"Error truncating feed file '%s': %s\n"
arg	33:21	33:45	7	c->stream->feed_filename
water	33:21	0:0	8	c
op	33:22	0:0	8	->
water	33:24	0:0	8	stream
op	33:30	0:0	8	->
water	33:32	0:0	8	feed_filename
arg	33:47	33:62	7	strerror(errno)
call	33:47	33:61	8	strerror
arg	33:56	33:61	9	errno
water	33:56	0:0	10	errno
water	33:63	0:0	6	;
return	34:12	34:22	6	ret
water	34:19	0:0	7	ret
water	35:8	0:0	6	}
water	36:4	0:0	4	}
else	36:6	44:4	2
stmts	36:11	44:4	3	
water	36:11	0:0	4	{
water	37:8	0:0	4	ret64
op	37:14	0:0	4	=
call	37:16	37:39	4	ffm_read_write_index
arg	37:37	37:39	5	fd
water	37:37	0:0	6	fd
water	37:40	0:0	4	;
if	38:8	42:8	4	(ret64 < 0)
cond	38:12	38:20	5	ret64 < 0
water	38:12	0:0	6	ret64
op	38:18	0:0	6	<
water	38:20	0:0	6	0
stmts	38:23	42:8	5	
water	38:23	0:0	6	{
call	39:12	40:62	6	http_log
arg	39:21	39:74	7	"Error reading write index from feed file '%s': %s\n"
water	39:21	0:0	8	"Error reading write index from feed file '%s': %s\n"
arg	40:21	40:45	7	c->stream->feed_filename
water	40:21	0:0	8	c
op	40:22	0:0	8	->
water	40:24	0:0	8	stream
op	40:30	0:0	8	->
water	40:32	0:0	8	feed_filename
arg	40:47	40:62	7	strerror(errno)
call	40:47	40:61	8	strerror
arg	40:56	40:61	9	errno
water	40:56	0:0	10	errno
water	40:63	0:0	6	;
return	41:12	41:24	6	ret64
water	41:19	0:0	7	ret64
water	42:8	0:0	6	}
water	43:8	0:0	4	c
op	43:9	0:0	4	->
water	43:11	0:0	4	stream
op	43:17	0:0	4	->
water	43:19	0:0	4	feed_write_index
op	43:36	0:0	4	=
water	43:38	0:0	4	ret64
water	43:43	0:0	4	;
water	44:4	0:0	4	}
water	45:4	0:0	2	c
op	45:5	0:0	2	->
water	45:7	0:0	2	stream
op	45:13	0:0	2	->
water	45:15	0:0	2	feed_write_index
op	45:32	0:0	2	=
call	45:34	46:55	2	FFMAX
arg	45:40	45:64	3	ffm_read_write_index(fd)
call	45:40	45:63	4	ffm_read_write_index
arg	45:61	45:63	5	fd
water	45:61	0:0	6	fd
arg	46:40	46:55	3	FFM_PACKET_SIZE
water	46:40	0:0	4	FFM_PACKET_SIZE
water	46:56	0:0	2	;
water	47:4	0:0	2	c
op	47:5	0:0	2	->
water	47:7	0:0	2	stream
op	47:13	0:0	2	->
water	47:15	0:0	2	feed_size
op	47:25	0:0	2	=
call	47:27	47:48	2	lseek
arg	47:33	47:35	3	fd
water	47:33	0:0	4	fd
arg	47:37	47:38	3	0
water	47:37	0:0	4	0
arg	47:40	47:48	3	SEEK_END
water	47:40	0:0	4	SEEK_END
water	47:49	0:0	2	;
call	48:4	48:25	2	lseek
arg	48:10	48:12	3	fd
water	48:10	0:0	4	fd
arg	48:14	48:15	3	0
water	48:14	0:0	4	0
arg	48:17	48:25	3	SEEK_SET
water	48:17	0:0	4	SEEK_SET
water	48:26	0:0	2	;
water	50:4	0:0	2	c
op	50:5	0:0	2	->
water	50:7	0:0	2	buffer_ptr
op	50:18	0:0	2	=
water	50:20	0:0	2	c
op	50:21	0:0	2	->
water	50:23	0:0	2	buffer
water	50:29	0:0	2	;
water	51:4	0:0	2	c
op	51:5	0:0	2	->
water	51:7	0:0	2	buffer_end
op	51:18	0:0	2	=
water	51:20	0:0	2	c
op	51:21	0:0	2	->
water	51:23	0:0	2	buffer
op	51:30	0:0	2	+
water	51:32	0:0	2	FFM_PACKET_SIZE
water	51:47	0:0	2	;
water	52:4	0:0	2	c
op	52:5	0:0	2	->
water	52:7	0:0	2	stream
op	52:13	0:0	2	->
water	52:15	0:0	2	feed_opened
op	52:27	0:0	2	=
water	52:29	0:0	2	1
water	52:30	0:0	2	;
water	53:4	0:0	2	c
op	53:5	0:0	2	->
water	53:7	0:0	2	chunked_encoding
op	53:24	0:0	2	=
op	53:26	0:0	2	!
op	53:27	0:0	2	!
call	53:28	53:78	2	av_stristr
arg	53:39	53:48	3	c->buffer
water	53:39	0:0	4	c
op	53:40	0:0	4	->
water	53:42	0:0	4	buffer
arg	53:50	53:78	3	"Transfer-Encoding: chunked"
water	53:50	0:0	4	"Transfer-Encoding: chunked"
water	53:79	0:0	2	;
return	54:4	54:12	2	0
water	54:11	0:0	3	0

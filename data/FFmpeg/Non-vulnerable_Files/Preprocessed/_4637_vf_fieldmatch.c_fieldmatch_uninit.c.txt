func	1:15	16:0	0	void	fieldmatch_uninit
params	1:37	0:0	1	
param	1:38	1:58	2	AVFilterContext *	ctx
stmnts	0:0	15:42	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:37	2	FieldMatchContext	*fm
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
if	5:4	6:31	2	(fm -> prv != fm -> src)
cond	5:8	5:23	3	fm -> prv != fm -> src
water	5:8	0:0	4	fm
op	5:10	0:0	4	->
water	5:12	0:0	4	prv
op	5:16	0:0	4	!=
water	5:19	0:0	4	fm
op	5:21	0:0	4	->
water	5:23	0:0	4	src
stmts	6:8	6:31	3	
call	6:8	6:30	4	av_frame_free
arg	6:22	6:30	5	&fm->prv
op	6:22	0:0	6	&
water	6:23	0:0	6	fm
op	6:25	0:0	6	->
water	6:27	0:0	6	prv
water	6:31	0:0	4	;
if	7:4	8:31	2	(fm -> nxt != fm -> src)
cond	7:8	7:23	3	fm -> nxt != fm -> src
water	7:8	0:0	4	fm
op	7:10	0:0	4	->
water	7:12	0:0	4	nxt
op	7:16	0:0	4	!=
water	7:19	0:0	4	fm
op	7:21	0:0	4	->
water	7:23	0:0	4	src
stmts	8:8	8:31	3	
call	8:8	8:30	4	av_frame_free
arg	8:22	8:30	5	&fm->nxt
op	8:22	0:0	6	&
water	8:23	0:0	6	fm
op	8:25	0:0	6	->
water	8:27	0:0	6	nxt
water	8:31	0:0	4	;
call	9:4	9:26	2	av_frame_free
arg	9:18	9:26	3	&fm->src
op	9:18	0:0	4	&
water	9:19	0:0	4	fm
op	9:21	0:0	4	->
water	9:23	0:0	4	src
water	9:27	0:0	2	;
call	10:4	10:29	2	av_freep
arg	10:13	10:29	3	&fm->map_data[0]
op	10:13	0:0	4	&
water	10:14	0:0	4	fm
op	10:16	0:0	4	->
water	10:18	0:0	4	map_data
op	10:26	0:0	4	[
water	10:27	0:0	4	0
op	10:28	0:0	4	]
water	10:30	0:0	2	;
call	11:4	11:31	2	av_freep
arg	11:13	11:31	3	&fm->cmask_data[0]
op	11:13	0:0	4	&
water	11:14	0:0	4	fm
op	11:16	0:0	4	->
water	11:18	0:0	4	cmask_data
op	11:28	0:0	4	[
water	11:29	0:0	4	0
op	11:30	0:0	4	]
water	11:32	0:0	2	;
call	12:4	12:25	2	av_freep
arg	12:13	12:25	3	&fm->tbuffer
op	12:13	0:0	4	&
water	12:14	0:0	4	fm
op	12:16	0:0	4	->
water	12:18	0:0	4	tbuffer
water	12:26	0:0	2	;
call	13:4	13:25	2	av_freep
arg	13:13	13:25	3	&fm->c_array
op	13:13	0:0	4	&
water	13:14	0:0	4	fm
op	13:16	0:0	4	->
water	13:18	0:0	4	c_array
water	13:26	0:0	2	;
for	14:4	15:42	2	(i = 0 ;i < ctx -> nb_inputs;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:25	3	i < ctx -> nb_inputs
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	ctx
op	14:23	0:0	4	->
water	14:25	0:0	4	nb_inputs
forexpr	14:36	14:37	3	i ++
water	14:36	0:0	4	i
op	14:37	0:0	4	++
stmts	15:8	15:42	3	
call	15:8	15:41	4	av_freep
arg	15:17	15:41	5	&ctx->input_pads[i].name
op	15:17	0:0	6	&
water	15:18	0:0	6	ctx
op	15:21	0:0	6	->
water	15:23	0:0	6	input_pads
op	15:33	0:0	6	[
water	15:34	0:0	6	i
op	15:35	0:0	6	]
op	15:36	0:0	6	.
water	15:37	0:0	6	name
water	15:42	0:0	4	;

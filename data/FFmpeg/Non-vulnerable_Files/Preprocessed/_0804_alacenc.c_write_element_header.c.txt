func	1:0	16:0	0	static void	write_element_header
params	1:32	0:0	1	
param	1:33	1:53	2	AlacEncodeContext *	s
param	2:33	2:66	2	enum AlacRawDataBlockType	element
param	3:33	3:45	2	int	instance
stmnts	0:0	15:44	1	
decl	5:4	5:21	2	int	encode_fs
op	5:18	0:0	2	=
water	5:20	0:0	2	0
if	6:4	7:21	2	(s -> frame_size < DEFAULT_FRAME_SIZE)
cond	6:8	6:24	3	s -> frame_size < DEFAULT_FRAME_SIZE
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	frame_size
op	6:22	0:0	4	<
water	6:24	0:0	4	DEFAULT_FRAME_SIZE
stmts	7:8	7:21	3	
water	7:8	0:0	4	encode_fs
op	7:18	0:0	4	=
water	7:20	0:0	4	1
water	7:21	0:0	4	;
call	8:4	8:35	2	put_bits
arg	8:13	8:22	3	&s->pbctx
op	8:13	0:0	4	&
water	8:14	0:0	4	s
op	8:15	0:0	4	->
water	8:17	0:0	4	pbctx
arg	8:24	8:25	3	3
water	8:24	0:0	4	3
arg	8:28	8:35	3	element
water	8:28	0:0	4	element
water	8:36	0:0	2	;
call	9:4	9:36	2	put_bits
arg	9:13	9:22	3	&s->pbctx
op	9:13	0:0	4	&
water	9:14	0:0	4	s
op	9:15	0:0	4	->
water	9:17	0:0	4	pbctx
arg	9:24	9:25	3	4
water	9:24	0:0	4	4
arg	9:28	9:36	3	instance
water	9:28	0:0	4	instance
water	9:37	0:0	2	;
call	10:4	10:29	2	put_bits
arg	10:13	10:22	3	&s->pbctx
op	10:13	0:0	4	&
water	10:14	0:0	4	s
op	10:15	0:0	4	->
water	10:17	0:0	4	pbctx
arg	10:24	10:26	3	12
water	10:24	0:0	4	12
arg	10:28	10:29	3	0
water	10:28	0:0	4	0
water	10:30	0:0	2	;
call	11:4	11:37	2	put_bits
arg	11:13	11:22	3	&s->pbctx
op	11:13	0:0	4	&
water	11:14	0:0	4	s
op	11:15	0:0	4	->
water	11:17	0:0	4	pbctx
arg	11:24	11:25	3	1
water	11:24	0:0	4	1
arg	11:28	11:37	3	encode_fs
water	11:28	0:0	4	encode_fs
water	11:38	0:0	2	;
call	12:4	12:46	2	put_bits
arg	12:13	12:22	3	&s->pbctx
op	12:13	0:0	4	&
water	12:14	0:0	4	s
op	12:15	0:0	4	->
water	12:17	0:0	4	pbctx
arg	12:24	12:25	3	2
water	12:24	0:0	4	2
arg	12:28	12:46	3	s->extra_bits>>3
water	12:28	0:0	4	s
op	12:29	0:0	4	->
water	12:31	0:0	4	extra_bits
op	12:42	0:0	4	>>
water	12:45	0:0	4	3
water	12:47	0:0	2	;
call	13:4	13:39	2	put_bits
arg	13:13	13:22	3	&s->pbctx
op	13:13	0:0	4	&
water	13:14	0:0	4	s
op	13:15	0:0	4	->
water	13:17	0:0	4	pbctx
arg	13:24	13:25	3	1
water	13:24	0:0	4	1
arg	13:28	13:39	3	s->verbatim
water	13:28	0:0	4	s
op	13:29	0:0	4	->
water	13:31	0:0	4	verbatim
water	13:40	0:0	2	;
if	14:4	15:44	2	(encode_fs)
cond	14:8	14:8	3	encode_fs
water	14:8	0:0	4	encode_fs
stmts	15:8	15:44	3	
call	15:8	15:43	4	put_bits32
arg	15:19	15:28	5	&s->pbctx
op	15:19	0:0	6	&
water	15:20	0:0	6	s
op	15:21	0:0	6	->
water	15:23	0:0	6	pbctx
arg	15:30	15:43	5	s->frame_size
water	15:30	0:0	6	s
op	15:31	0:0	6	->
water	15:33	0:0	6	frame_size
water	15:44	0:0	4	;

func	1:0	37:0	0	AudioData *	ff_audio_data_alloc
params	1:30	0:0	1	
param	1:31	1:43	2	int	channels
param	1:45	1:59	2	int	nb_samples
param	2:31	2:61	2	enum AVSampleFormat	sample_fmt
param	2:63	2:79	2	const char *	name
stmnts	0:0	36:4	1	
decl	4:4	4:16	2	AudioData	*a
decl	5:4	5:11	2	int	ret
if	6:4	7:19	2	(channels < 1 || channels > AVRESAMPLE_MAX_CHANNELS)
cond	6:8	6:35	3	channels < 1 || channels > AVRESAMPLE_MAX_CHANNELS
water	6:8	0:0	4	channels
op	6:17	0:0	4	<
water	6:19	0:0	4	1
op	6:21	0:0	4	||
water	6:24	0:0	4	channels
op	6:33	0:0	4	>
water	6:35	0:0	4	AVRESAMPLE_MAX_CHANNELS
stmts	7:8	7:19	3	
return	7:8	7:19	4	NULL
water	7:15	0:0	5	NULL
water	8:4	0:0	2	a
op	8:6	0:0	2	=
call	8:8	8:29	2	av_mallocz
arg	8:19	8:29	3	sizeof(*a)
op	8:19	0:0	4	sizeof
water	8:25	0:0	4	(
op	8:26	0:0	4	*
water	8:27	0:0	4	a
water	8:28	0:0	4	)
water	8:30	0:0	2	;
if	9:4	10:19	2	(! a)
cond	9:8	9:9	3	! a
op	9:8	0:0	4	!
water	9:9	0:0	4	a
stmts	10:8	10:19	3	
return	10:8	10:19	4	NULL
water	10:15	0:0	5	NULL
water	11:4	0:0	2	a
op	11:5	0:0	2	->
water	11:7	0:0	2	sample_size
op	11:19	0:0	2	=
call	11:21	11:55	2	av_get_bytes_per_sample
arg	11:45	11:55	3	sample_fmt
water	11:45	0:0	4	sample_fmt
water	11:56	0:0	2	;
if	12:4	15:4	2	(! a -> sample_size)
cond	12:8	12:12	3	! a -> sample_size
op	12:8	0:0	4	!
water	12:9	0:0	4	a
op	12:10	0:0	4	->
water	12:12	0:0	4	sample_size
stmts	12:25	15:4	3	
water	12:25	0:0	4	{
call	13:8	13:17	4	av_free
arg	13:16	13:17	5	a
water	13:16	0:0	6	a
water	13:18	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
water	16:4	0:0	2	a
op	16:5	0:0	2	->
water	16:7	0:0	2	is_planar
op	16:17	0:0	2	=
call	16:19	16:63	2	ff_sample_fmt_is_planar
arg	16:43	16:53	3	sample_fmt
water	16:43	0:0	4	sample_fmt
arg	16:55	16:63	3	channels
water	16:55	0:0	4	channels
water	16:64	0:0	2	;
water	17:4	0:0	2	a
op	17:5	0:0	2	->
water	17:7	0:0	2	planes
op	17:17	0:0	2	=
water	17:19	0:0	2	a
op	17:20	0:0	2	->
water	17:22	0:0	2	is_planar
water	17:32	0:0	2	?
water	17:34	0:0	2	channels
water	17:43	0:0	2	:
water	17:45	0:0	2	1
water	17:46	0:0	2	;
water	18:4	0:0	2	a
op	18:5	0:0	2	->
water	18:7	0:0	2	stride
op	18:17	0:0	2	=
water	18:19	0:0	2	a
op	18:20	0:0	2	->
water	18:22	0:0	2	sample_size
op	18:34	0:0	2	*
water	18:36	0:0	2	(
water	18:37	0:0	2	a
op	18:38	0:0	2	->
water	18:40	0:0	2	is_planar
water	18:50	0:0	2	?
water	18:52	0:0	2	1
water	18:54	0:0	2	:
water	18:56	0:0	2	channels
water	18:64	0:0	2	)
water	18:65	0:0	2	;
water	19:4	0:0	2	a
op	19:5	0:0	2	->
water	19:7	0:0	2	class
op	19:26	0:0	2	=
op	19:28	0:0	2	&
water	19:29	0:0	2	audio_data_class
water	19:45	0:0	2	;
water	20:4	0:0	2	a
op	20:5	0:0	2	->
water	20:7	0:0	2	sample_fmt
op	20:26	0:0	2	=
water	20:28	0:0	2	sample_fmt
water	20:38	0:0	2	;
water	21:4	0:0	2	a
op	21:5	0:0	2	->
water	21:7	0:0	2	channels
op	21:26	0:0	2	=
water	21:28	0:0	2	channels
water	21:36	0:0	2	;
water	22:4	0:0	2	a
op	22:5	0:0	2	->
water	22:7	0:0	2	allocated_channels
op	22:26	0:0	2	=
water	22:28	0:0	2	channels
water	22:36	0:0	2	;
water	23:4	0:0	2	a
op	23:5	0:0	2	->
water	23:7	0:0	2	read_only
op	23:26	0:0	2	=
water	23:28	0:0	2	0
water	23:29	0:0	2	;
water	24:4	0:0	2	a
op	24:5	0:0	2	->
water	24:7	0:0	2	allow_realloc
op	24:26	0:0	2	=
water	24:28	0:0	2	1
water	24:29	0:0	2	;
water	25:4	0:0	2	a
op	25:5	0:0	2	->
water	25:7	0:0	2	name
op	25:26	0:0	2	=
water	25:28	0:0	2	name
water	25:33	0:0	2	?
water	25:35	0:0	2	name
water	25:40	0:0	2	:
water	25:42	0:0	2	"{no name}"
water	25:53	0:0	2	;
if	26:4	33:4	2	(nb_samples > 0)
cond	26:8	26:21	3	nb_samples > 0
water	26:8	0:0	4	nb_samples
op	26:19	0:0	4	>
water	26:21	0:0	4	0
stmts	26:24	33:4	3	
water	26:24	0:0	4	{
water	27:8	0:0	4	ret
op	27:12	0:0	4	=
call	27:14	27:49	4	ff_audio_data_realloc
arg	27:36	27:37	5	a
water	27:36	0:0	6	a
arg	27:39	27:49	5	nb_samples
water	27:39	0:0	6	nb_samples
water	27:50	0:0	4	;
if	28:8	31:8	4	(ret < 0)
cond	28:12	28:18	5	ret < 0
water	28:12	0:0	6	ret
op	28:16	0:0	6	<
water	28:18	0:0	6	0
stmts	28:21	31:8	5	
water	28:21	0:0	6	{
call	29:12	29:21	6	av_free
arg	29:20	29:21	7	a
water	29:20	0:0	8	a
water	29:22	0:0	6	;
return	30:12	30:23	6	NULL
water	30:19	0:0	7	NULL
water	31:8	0:0	6	}
return	32:8	32:16	4	a
water	32:15	0:0	5	a
water	33:4	0:0	4	}
else	33:6	36:4	2
stmts	33:11	36:4	3	
water	33:11	0:0	4	{
call	34:8	34:28	4	calc_ptr_alignment
arg	34:27	34:28	5	a
water	34:27	0:0	6	a
water	34:29	0:0	4	;
return	35:8	35:16	4	a
water	35:15	0:0	5	a
water	36:4	0:0	4	}

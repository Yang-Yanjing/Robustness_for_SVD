func	1:0	56:0	0	static int	nut_read_header
params	1:26	0:0	1	
param	1:27	1:45	2	AVFormatContext *	s
stmnts	0:0	55:30	1	
decl	3:4	3:34	2	NUTContext	*nut
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:27	2	AVIOContext	*bc
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	pb
decl	5:4	5:15	2	int64_t	pos
decl	6:4	6:32	2	int	initialized_stream_count
water	7:4	0:0	2	nut
op	7:7	0:0	2	->
water	7:9	0:0	2	avf
op	7:13	0:0	2	=
water	7:15	0:0	2	s
water	7:16	0:0	2	;
water	9:4	0:0	2	pos
op	9:8	0:0	2	=
water	9:10	0:0	2	0
water	9:11	0:0	2	;
do	10:4	16:4	2	(decode_main_header (nut ) < 0)
cond	16:13	16:39	3	decode_main_header (nut ) < 0
call	16:13	16:35	4	decode_main_header
arg	16:32	16:35	5	nut
water	16:32	0:0	6	nut
op	16:37	0:0	4	<
water	16:39	0:0	4	0
stmts	10:7	16:4	3	
water	10:7	0:0	4	{
water	11:8	0:0	4	pos
op	11:12	0:0	4	=
call	11:14	11:52	4	find_startcode
arg	11:29	11:31	5	bc
water	11:29	0:0	6	bc
arg	11:33	11:47	5	MAIN_STARTCODE
water	11:33	0:0	6	MAIN_STARTCODE
arg	11:49	11:52	5	pos
water	11:49	0:0	6	pos
op	11:54	0:0	4	+
water	11:56	0:0	4	1
water	11:57	0:0	4	;
if	12:8	15:8	4	(pos < 0 + 1)
cond	12:12	12:22	5	pos < 0 + 1
water	12:12	0:0	6	pos
op	12:16	0:0	6	<
water	12:18	0:0	6	0
op	12:20	0:0	6	+
water	12:22	0:0	6	1
stmts	12:25	15:8	5	
water	12:25	0:0	6	{
call	13:12	13:64	6	av_log
arg	13:19	13:20	7	s
water	13:19	0:0	8	s
arg	13:22	13:34	7	AV_LOG_ERROR
water	13:22	0:0	8	AV_LOG_ERROR
arg	13:36	13:64	7	"No main startcode found.\n"
water	13:36	0:0	8	"No main startcode found.\n"
water	13:65	0:0	6	;
goto	14:12	14:21	6	fail
water	14:17	0:0	7	fail
water	15:8	0:0	6	}
water	16:4	0:0	4	}
water	16:41	0:0	2	;
water	18:4	0:0	2	pos
op	18:8	0:0	2	=
water	18:10	0:0	2	0
water	18:11	0:0	2	;
for	19:4	27:4	2	(initialized_stream_count = 0 ;initialized_stream_count < s -> nb_streams;)
forinit	19:9	19:37	3	initialized_stream_count = 0 ;
water	19:9	0:0	4	initialized_stream_count
op	19:34	0:0	4	=
water	19:36	0:0	4	0
water	19:37	0:0	4	;
cond	19:39	19:69	3	initialized_stream_count < s -> nb_streams
water	19:39	0:0	4	initialized_stream_count
op	19:64	0:0	4	<
water	19:66	0:0	4	s
op	19:67	0:0	4	->
water	19:69	0:0	4	nb_streams
forexpr	0:0	0:0	3	
stmts	19:82	27:4	3	
water	19:82	0:0	4	{
water	20:8	0:0	4	pos
op	20:12	0:0	4	=
call	20:14	20:54	4	find_startcode
arg	20:29	20:31	5	bc
water	20:29	0:0	6	bc
arg	20:33	20:49	5	STREAM_STARTCODE
water	20:33	0:0	6	STREAM_STARTCODE
arg	20:51	20:54	5	pos
water	20:51	0:0	6	pos
op	20:56	0:0	4	+
water	20:58	0:0	4	1
water	20:59	0:0	4	;
if	21:8	24:8	4	(pos < 0 + 1)
cond	21:12	21:22	5	pos < 0 + 1
water	21:12	0:0	6	pos
op	21:16	0:0	6	<
water	21:18	0:0	6	0
op	21:20	0:0	6	+
water	21:22	0:0	6	1
stmts	21:25	24:8	5	
water	21:25	0:0	6	{
call	22:12	22:69	6	av_log
arg	22:19	22:20	7	s
water	22:19	0:0	8	s
arg	22:22	22:34	7	AV_LOG_ERROR
water	22:22	0:0	8	AV_LOG_ERROR
arg	22:36	22:69	7	"Not all stream headers found.\n"
water	22:36	0:0	8	"Not all stream headers found.\n"
water	22:70	0:0	6	;
goto	23:12	23:21	6	fail
water	23:17	0:0	7	fail
water	24:8	0:0	6	}
if	25:8	26:38	4	(decode_stream_header (nut ) >= 0)
cond	25:12	25:41	5	decode_stream_header (nut ) >= 0
call	25:12	25:36	6	decode_stream_header
arg	25:33	25:36	7	nut
water	25:33	0:0	8	nut
op	25:38	0:0	6	>=
water	25:41	0:0	6	0
stmts	26:12	26:38	5	
water	26:12	0:0	6	initialized_stream_count
op	26:36	0:0	6	++
water	26:38	0:0	6	;
water	27:4	0:0	4	}
water	29:4	0:0	2	pos
op	29:8	0:0	2	=
water	29:10	0:0	2	0
water	29:11	0:0	2	;
for	30:4	43:4	2	(;;)
forinit	30:9	30:9	3	;
water	30:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	30:13	43:4	3	
water	30:13	0:0	4	{
decl	31:8	31:56	4	uint64_t	startcode
op	31:27	0:0	4	=
call	31:29	31:55	5	find_any_startcode
arg	31:48	31:50	6	bc
water	31:48	0:0	7	bc
arg	31:52	31:55	6	pos
water	31:52	0:0	7	pos
water	32:8	0:0	4	pos
op	32:12	0:0	4	=
call	32:14	32:26	4	avio_tell
arg	32:24	32:26	5	bc
water	32:24	0:0	6	bc
water	32:27	0:0	4	;
if	33:8	36:8	4	(startcode == 0)
cond	33:12	33:25	5	startcode == 0
water	33:12	0:0	6	startcode
op	33:22	0:0	6	==
water	33:25	0:0	6	0
stmts	33:28	36:8	5	
water	33:28	0:0	6	{
call	34:12	34:63	6	av_log
arg	34:19	34:20	7	s
water	34:19	0:0	8	s
arg	34:22	34:34	7	AV_LOG_ERROR
water	34:22	0:0	8	AV_LOG_ERROR
arg	34:36	34:63	7	"EOF before video frames\n"
water	34:36	0:0	8	"EOF before video frames\n"
water	34:64	0:0	6	;
goto	35:12	35:21	6	fail
water	35:17	0:0	7	fail
water	36:8	0:0	6	}
else	36:10	39:8	4
stmts	36:15	39:8	5	
if	36:15	39:8	6	(startcode == SYNCPOINT_STARTCODE)
cond	36:19	36:32	7	startcode == SYNCPOINT_STARTCODE
water	36:19	0:0	8	startcode
op	36:29	0:0	8	==
water	36:32	0:0	8	SYNCPOINT_STARTCODE
stmts	36:53	39:8	7	
water	36:53	0:0	8	{
water	37:12	0:0	8	nut
op	37:15	0:0	8	->
water	37:17	0:0	8	next_startcode
op	37:32	0:0	8	=
water	37:34	0:0	8	startcode
water	37:43	0:0	8	;
break	38:12	38:17	8	
water	39:8	0:0	8	}
else	39:10	41:8	4
stmts	39:15	41:8	5	
if	39:15	41:8	6	(startcode != INFO_STARTCODE)
cond	39:19	39:32	7	startcode != INFO_STARTCODE
water	39:19	0:0	8	startcode
op	39:29	0:0	8	!=
water	39:32	0:0	8	INFO_STARTCODE
stmts	39:48	41:8	7	
water	39:48	0:0	8	{
continue	40:12	40:20	8	
water	41:8	0:0	8	}
call	42:8	42:30	4	decode_info_header
arg	42:27	42:30	5	nut
water	42:27	0:0	6	nut
water	42:31	0:0	4	;
water	43:4	0:0	4	}
water	44:4	0:0	2	s
op	44:5	0:0	2	->
water	44:7	0:0	2	internal
op	44:15	0:0	2	->
water	44:17	0:0	2	data_offset
op	44:29	0:0	2	=
water	44:31	0:0	2	pos
op	44:35	0:0	2	-
water	44:37	0:0	2	8
water	44:38	0:0	2	;
if	45:4	49:4	2	(bc -> seekable)
cond	45:8	45:12	3	bc -> seekable
water	45:8	0:0	4	bc
op	45:10	0:0	4	->
water	45:12	0:0	4	seekable
stmts	45:22	49:4	3	
water	45:22	0:0	4	{
decl	46:8	46:40	4	int64_t	orig_pos
op	46:25	0:0	4	=
call	46:27	46:39	5	avio_tell
arg	46:37	46:39	6	bc
water	46:37	0:0	7	bc
call	47:8	47:33	4	find_and_decode_index
arg	47:30	47:33	5	nut
water	47:30	0:0	6	nut
water	47:34	0:0	4	;
call	48:8	48:40	4	avio_seek
arg	48:18	48:20	5	bc
water	48:18	0:0	6	bc
arg	48:22	48:30	5	orig_pos
water	48:22	0:0	6	orig_pos
arg	48:32	48:40	5	SEEK_SET
water	48:32	0:0	6	SEEK_SET
water	48:41	0:0	4	;
water	49:4	0:0	4	}
call	50:4	50:57	2	av_assert0
arg	50:15	50:57	3	nut->next_startcode==SYNCPOINT_STARTCODE
water	50:15	0:0	4	nut
op	50:18	0:0	4	->
water	50:20	0:0	4	next_startcode
op	50:35	0:0	4	==
water	50:38	0:0	4	SYNCPOINT_STARTCODE
water	50:58	0:0	2	;
call	51:4	51:54	2	ff_metadata_conv_ctx
arg	51:25	51:26	3	s
water	51:25	0:0	4	s
arg	51:28	51:32	3	NULL
water	51:28	0:0	4	NULL
arg	51:34	51:54	3	ff_nut_metadata_conv
water	51:34	0:0	4	ff_nut_metadata_conv
water	51:55	0:0	2	;
return	52:4	52:12	2	0
water	52:11	0:0	3	0
label	53:0	53:4	2	fail :
call	54:4	54:20	2	nut_read_close
arg	54:19	54:20	3	s
water	54:19	0:0	4	s
water	54:21	0:0	2	;
return	55:4	55:30	2	AVERROR_INVALIDDATA
water	55:11	0:0	3	AVERROR_INVALIDDATA

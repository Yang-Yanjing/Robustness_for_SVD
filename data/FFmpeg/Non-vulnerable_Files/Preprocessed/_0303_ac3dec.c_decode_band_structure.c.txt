func	1:0	44:0	0	static void	decode_band_structure
params	1:33	0:0	1	
param	1:34	1:52	2	GetBitContext *	gbc
param	1:54	1:61	2	int	blk
param	1:63	1:71	2	int	eac3
param	2:34	2:42	2	int	ecpl
param	2:44	2:61	2	int	start_subband
param	2:63	2:78	2	int	end_subband
param	3:34	3:68	2	const uint8_t *	default_band_struct
param	4:34	4:48	2	int *	num_bands
param	4:50	4:69	2	uint8_t *	band_sizes
stmnts	0:0	43:43	1	
decl	6:4	6:42	2	int	subbnd
water	6:14	0:0	2	,
decl	6:4	6:42	2	int	bnd
water	6:19	0:0	2	,
decl	6:4	6:42	2	int	n_subbands
water	6:31	0:0	2	,
decl	6:4	6:42	2	int	n_bands
op	6:40	0:0	2	=
water	6:41	0:0	2	0
decl	7:4	7:22	2	uint8_t	bnd_sz[22]
decl	8:4	8:33	2	uint8_t	coded_band_struct[22]
decl	9:4	9:30	2	const uint8_t	*band_struct
water	10:4	0:0	2	n_subbands
op	10:15	0:0	2	=
water	10:17	0:0	2	end_subband
op	10:29	0:0	2	-
water	10:31	0:0	2	start_subband
water	10:44	0:0	2	;
if	12:4	17:4	2	(! eac3 ||get_bits1 (gbc ))
cond	12:8	12:30	3	! eac3 ||get_bits1 (gbc )
op	12:8	0:0	4	!
water	12:9	0:0	4	eac3
op	12:14	0:0	4	||
call	12:17	12:30	4	get_bits1
arg	12:27	12:30	5	gbc
water	12:27	0:0	6	gbc
stmts	12:33	17:4	3	
water	12:33	0:0	4	{
for	13:8	15:8	4	(subbnd = 0 ;subbnd < n_subbands - 1;subbnd ++)
forinit	13:13	13:23	5	subbnd = 0 ;
water	13:13	0:0	6	subbnd
op	13:20	0:0	6	=
water	13:22	0:0	6	0
water	13:23	0:0	6	;
cond	13:25	13:47	5	subbnd < n_subbands - 1
water	13:25	0:0	6	subbnd
op	13:32	0:0	6	<
water	13:34	0:0	6	n_subbands
op	13:45	0:0	6	-
water	13:47	0:0	6	1
forexpr	13:50	13:56	5	subbnd ++
water	13:50	0:0	6	subbnd
op	13:56	0:0	6	++
stmts	13:60	15:8	5	
water	13:60	0:0	6	{
water	14:12	0:0	6	coded_band_struct
op	14:29	0:0	6	[
water	14:30	0:0	6	subbnd
op	14:36	0:0	6	]
op	14:38	0:0	6	=
call	14:40	14:53	6	get_bits1
arg	14:50	14:53	7	gbc
water	14:50	0:0	8	gbc
water	14:54	0:0	6	;
water	15:8	0:0	6	}
water	16:8	0:0	4	band_struct
op	16:20	0:0	4	=
water	16:22	0:0	4	coded_band_struct
water	16:39	0:0	4	;
water	17:4	0:0	4	}
else	17:6	19:4	2
stmts	17:11	19:4	3	
if	17:11	19:4	4	(! blk)
cond	17:15	17:16	5	! blk
op	17:15	0:0	6	!
water	17:16	0:0	6	blk
stmts	17:21	19:4	5	
water	17:21	0:0	6	{
water	18:8	0:0	6	band_struct
op	18:20	0:0	6	=
op	18:22	0:0	6	&
water	18:23	0:0	6	default_band_struct
op	18:42	0:0	6	[
water	18:43	0:0	6	start_subband
op	18:56	0:0	6	+
water	18:57	0:0	6	1
op	18:58	0:0	6	]
water	18:59	0:0	6	;
water	19:4	0:0	6	}
else	19:6	22:4	2
stmts	19:11	22:4	3	
water	19:11	0:0	4	{
return	21:8	21:14	4	
water	22:4	0:0	4	}
if	26:4	38:4	2	(num_bands || band_sizes)
cond	26:8	26:21	3	num_bands || band_sizes
water	26:8	0:0	4	num_bands
op	26:18	0:0	4	||
water	26:21	0:0	4	band_sizes
stmts	26:34	38:4	3	
water	26:34	0:0	4	{
water	27:8	0:0	4	n_bands
op	27:16	0:0	4	=
water	27:18	0:0	4	n_subbands
water	27:28	0:0	4	;
water	28:8	0:0	4	bnd_sz
op	28:14	0:0	4	[
water	28:15	0:0	4	0
op	28:16	0:0	4	]
op	28:18	0:0	4	=
water	28:20	0:0	4	ecpl
water	28:25	0:0	4	?
water	28:27	0:0	4	6
water	28:29	0:0	4	:
water	28:31	0:0	4	12
water	28:33	0:0	4	;
for	29:8	37:8	4	(bnd = 0 , subbnd = 1 ;subbnd < n_subbands;subbnd ++)
forinit	29:13	29:32	5	bnd = 0 , subbnd = 1 ;
water	29:13	0:0	6	bnd
op	29:17	0:0	6	=
water	29:19	0:0	6	0
water	29:20	0:0	6	,
water	29:22	0:0	6	subbnd
op	29:29	0:0	6	=
water	29:31	0:0	6	1
water	29:32	0:0	6	;
cond	29:34	29:43	5	subbnd < n_subbands
water	29:34	0:0	6	subbnd
op	29:41	0:0	6	<
water	29:43	0:0	6	n_subbands
forexpr	29:55	29:61	5	subbnd ++
water	29:55	0:0	6	subbnd
op	29:61	0:0	6	++
stmts	29:65	37:8	5	
water	29:65	0:0	6	{
decl	30:12	30:59	6	int	subbnd_size
op	30:28	0:0	6	=
water	30:30	0:0	6	(
water	30:31	0:0	6	ecpl
op	30:36	0:0	6	&&
water	30:39	0:0	6	subbnd
op	30:46	0:0	6	<
water	30:48	0:0	6	4
water	30:49	0:0	6	)
water	30:51	0:0	6	?
water	30:53	0:0	6	6
water	30:55	0:0	6	:
water	30:57	0:0	6	12
if	31:12	34:12	6	(band_struct [ subbnd - 1 ])
cond	31:16	31:38	7	band_struct [ subbnd - 1 ]
water	31:16	0:0	8	band_struct
op	31:27	0:0	8	[
water	31:28	0:0	8	subbnd
op	31:35	0:0	8	-
water	31:37	0:0	8	1
op	31:38	0:0	8	]
stmts	31:41	34:12	7	
water	31:41	0:0	8	{
water	32:16	0:0	8	n_bands
op	32:23	0:0	8	--
water	32:25	0:0	8	;
water	33:16	0:0	8	bnd_sz
op	33:22	0:0	8	[
water	33:23	0:0	8	bnd
op	33:26	0:0	8	]
op	33:28	0:0	8	+=
water	33:31	0:0	8	subbnd_size
water	33:42	0:0	8	;
water	34:12	0:0	8	}
else	34:14	36:12	6
stmts	34:19	36:12	7	
water	34:19	0:0	8	{
water	35:16	0:0	8	bnd_sz
op	35:22	0:0	8	[
op	35:23	0:0	8	++
water	35:25	0:0	8	bnd
op	35:28	0:0	8	]
op	35:30	0:0	8	=
water	35:32	0:0	8	subbnd_size
water	35:43	0:0	8	;
water	36:12	0:0	8	}
water	37:8	0:0	6	}
water	38:4	0:0	4	}
if	40:4	41:28	2	(num_bands)
cond	40:8	40:8	3	num_bands
water	40:8	0:0	4	num_bands
stmts	41:8	41:28	3	
op	41:8	0:0	4	*
water	41:9	0:0	4	num_bands
op	41:19	0:0	4	=
water	41:21	0:0	4	n_bands
water	41:28	0:0	4	;
if	42:4	43:43	2	(band_sizes)
cond	42:8	42:8	3	band_sizes
water	42:8	0:0	4	band_sizes
stmts	43:8	43:43	3	
call	43:8	43:42	4	memcpy
arg	43:15	43:25	5	band_sizes
water	43:15	0:0	6	band_sizes
arg	43:27	43:33	5	bnd_sz
water	43:27	0:0	6	bnd_sz
arg	43:35	43:42	5	n_bands
water	43:35	0:0	6	n_bands
water	43:43	0:0	4	;

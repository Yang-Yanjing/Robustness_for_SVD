func	1:0	15:0	0	static void	put_ics_info
params	1:24	0:0	1	
param	1:25	1:41	2	AACEncContext *	s
param	1:43	1:72	2	IndividualChannelStream *	info
stmnts	0:0	14:4	1	
decl	3:4	3:9	2	int	w
call	4:4	4:25	2	put_bits
arg	4:13	4:19	3	&s->pb
op	4:13	0:0	4	&
water	4:14	0:0	4	s
op	4:15	0:0	4	->
water	4:17	0:0	4	pb
arg	4:21	4:22	3	1
water	4:21	0:0	4	1
arg	4:24	4:25	3	0
water	4:24	0:0	4	0
water	4:26	0:0	2	;
call	5:4	5:48	2	put_bits
arg	5:13	5:19	3	&s->pb
op	5:13	0:0	4	&
water	5:14	0:0	4	s
op	5:15	0:0	4	->
water	5:17	0:0	4	pb
arg	5:21	5:22	3	2
water	5:21	0:0	4	2
arg	5:24	5:48	3	info->window_sequence[0]
water	5:24	0:0	4	info
op	5:28	0:0	4	->
water	5:30	0:0	4	window_sequence
op	5:45	0:0	4	[
water	5:46	0:0	4	0
op	5:47	0:0	4	]
water	5:49	0:0	2	;
call	6:4	6:46	2	put_bits
arg	6:13	6:19	3	&s->pb
op	6:13	0:0	4	&
water	6:14	0:0	4	s
op	6:15	0:0	4	->
water	6:17	0:0	4	pb
arg	6:21	6:22	3	1
water	6:21	0:0	4	1
arg	6:24	6:46	3	info->use_kb_window[0]
water	6:24	0:0	4	info
op	6:28	0:0	4	->
water	6:30	0:0	4	use_kb_window
op	6:43	0:0	4	[
water	6:44	0:0	4	0
op	6:45	0:0	4	]
water	6:47	0:0	2	;
if	7:4	10:4	2	(info -> window_sequence [ 0 ] != EIGHT_SHORT_SEQUENCE)
cond	7:8	7:36	3	info -> window_sequence [ 0 ] != EIGHT_SHORT_SEQUENCE
water	7:8	0:0	4	info
op	7:12	0:0	4	->
water	7:14	0:0	4	window_sequence
op	7:29	0:0	4	[
water	7:30	0:0	4	0
op	7:31	0:0	4	]
op	7:33	0:0	4	!=
water	7:36	0:0	4	EIGHT_SHORT_SEQUENCE
stmts	7:58	10:4	3	
water	7:58	0:0	4	{
call	8:8	8:41	4	put_bits
arg	8:17	8:23	5	&s->pb
op	8:17	0:0	6	&
water	8:18	0:0	6	s
op	8:19	0:0	6	->
water	8:21	0:0	6	pb
arg	8:25	8:26	5	6
water	8:25	0:0	6	6
arg	8:28	8:41	5	info->max_sfb
water	8:28	0:0	6	info
op	8:32	0:0	6	->
water	8:34	0:0	6	max_sfb
water	8:42	0:0	4	;
call	9:8	9:53	4	put_bits
arg	9:17	9:23	5	&s->pb
op	9:17	0:0	6	&
water	9:18	0:0	6	s
op	9:19	0:0	6	->
water	9:21	0:0	6	pb
arg	9:25	9:26	5	1
water	9:25	0:0	6	1
arg	9:28	9:53	5	!!info->predictor_present
op	9:28	0:0	6	!
op	9:29	0:0	6	!
water	9:30	0:0	6	info
op	9:34	0:0	6	->
water	9:36	0:0	6	predictor_present
water	9:54	0:0	4	;
water	10:4	0:0	4	}
else	10:6	14:4	2
stmts	10:11	14:4	3	
water	10:11	0:0	4	{
call	11:8	11:41	4	put_bits
arg	11:17	11:23	5	&s->pb
op	11:17	0:0	6	&
water	11:18	0:0	6	s
op	11:19	0:0	6	->
water	11:21	0:0	6	pb
arg	11:25	11:26	5	4
water	11:25	0:0	6	4
arg	11:28	11:41	5	info->max_sfb
water	11:28	0:0	6	info
op	11:32	0:0	6	->
water	11:34	0:0	6	max_sfb
water	11:42	0:0	4	;
for	12:8	13:52	4	(w = 1 ;w < 8;w ++)
forinit	12:13	12:18	5	w = 1 ;
water	12:13	0:0	6	w
op	12:15	0:0	6	=
water	12:17	0:0	6	1
water	12:18	0:0	6	;
cond	12:20	12:24	5	w < 8
water	12:20	0:0	6	w
op	12:22	0:0	6	<
water	12:24	0:0	6	8
forexpr	12:27	12:28	5	w ++
water	12:27	0:0	6	w
op	12:28	0:0	6	++
stmts	13:12	13:52	5	
call	13:12	13:51	6	put_bits
arg	13:21	13:27	7	&s->pb
op	13:21	0:0	8	&
water	13:22	0:0	8	s
op	13:23	0:0	8	->
water	13:25	0:0	8	pb
arg	13:29	13:30	7	1
water	13:29	0:0	8	1
arg	13:32	13:51	7	!info->group_len[w]
op	13:32	0:0	8	!
water	13:33	0:0	8	info
op	13:37	0:0	8	->
water	13:39	0:0	8	group_len
op	13:48	0:0	8	[
water	13:49	0:0	8	w
op	13:50	0:0	8	]
water	13:52	0:0	6	;
water	14:4	0:0	4	}

func	1:0	8:0	0	int	av_image_check_size
params	1:23	0:0	1	
param	1:24	1:38	2	unsigned int	w
param	1:40	1:54	2	unsigned int	h
param	1:56	1:70	2	int	log_offset
param	1:72	1:85	2	void *	log_ctx
stmnts	0:0	7:26	1	
decl	3:4	3:64	2	ImgUtils	imgutils
op	3:22	0:0	2	=
water	3:24	0:0	2	{
op	3:26	0:0	2	&
water	3:27	0:0	2	imgutils_class
water	3:41	0:0	2	,
water	3:43	0:0	2	log_offset
water	3:53	0:0	2	,
water	3:55	0:0	2	log_ctx
water	3:63	0:0	2	}
if	4:4	5:16	2	(( int ) w > 0 && ( int ) h > 0 && ( w + 128 )* ( uint64_t ) (h + 128 ) < INT_MAX / 8)
cond	4:8	4:68	3	( int ) w > 0 && ( int ) h > 0 && ( w + 128 )* ( uint64_t ) (h + 128 ) < INT_MAX / 8
water	4:8	0:0	4	(
water	4:9	0:0	4	int
water	4:12	0:0	4	)
water	4:13	0:0	4	w
op	4:14	0:0	4	>
water	4:15	0:0	4	0
op	4:17	0:0	4	&&
water	4:20	0:0	4	(
water	4:21	0:0	4	int
water	4:24	0:0	4	)
water	4:25	0:0	4	h
op	4:26	0:0	4	>
water	4:27	0:0	4	0
op	4:29	0:0	4	&&
water	4:32	0:0	4	(
water	4:33	0:0	4	w
op	4:34	0:0	4	+
water	4:35	0:0	4	128
water	4:38	0:0	4	)
call	4:39	4:56	4	*(uint64_t)
arg	4:51	4:56	5	h+128
water	4:51	0:0	6	h
op	4:52	0:0	6	+
water	4:53	0:0	6	128
op	4:58	0:0	4	<
water	4:60	0:0	4	INT_MAX
op	4:67	0:0	4	/
water	4:68	0:0	4	8
stmts	5:8	5:16	3	
return	5:8	5:16	4	0
water	5:15	0:0	5	0
call	6:4	6:75	2	av_log
arg	6:11	6:20	3	&imgutils
op	6:11	0:0	4	&
water	6:12	0:0	4	imgutils
arg	6:22	6:34	3	AV_LOG_ERROR
water	6:22	0:0	4	AV_LOG_ERROR
arg	6:36	6:69	3	"Picture size %ux%u is invalid\n"
water	6:36	0:0	4	"Picture size %ux%u is invalid\n"
arg	6:71	6:72	3	w
water	6:71	0:0	4	w
arg	6:74	6:75	3	h
water	6:74	0:0	4	h
water	6:76	0:0	2	;
return	7:4	7:26	2	AVERROR(EINVAL)
call	7:11	7:25	3	AVERROR
arg	7:19	7:25	4	EINVAL
water	7:19	0:0	5	EINVAL

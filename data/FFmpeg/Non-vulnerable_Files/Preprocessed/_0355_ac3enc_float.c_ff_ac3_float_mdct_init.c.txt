func	1:8	17:0	0	int	ff_ac3_float_mdct_init
params	1:34	0:0	1	
param	1:35	1:54	2	AC3EncodeContext *	s
stmnts	0:0	16:49	1	
decl	3:4	3:17	2	float	*window
decl	4:4	4:16	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:16	2	int	n
water	4:12	0:0	2	,
decl	4:4	4:16	2	int	n2
water	5:4	0:0	2	n
op	5:7	0:0	2	=
water	5:9	0:0	2	1
op	5:11	0:0	2	<<
water	5:14	0:0	2	9
water	5:15	0:0	2	;
water	6:4	0:0	2	n2
op	6:7	0:0	2	=
water	6:9	0:0	2	n
op	6:11	0:0	2	>>
water	6:14	0:0	2	1
water	6:15	0:0	2	;
water	7:4	0:0	2	window
op	7:11	0:0	2	=
call	7:13	7:47	2	av_malloc_array
arg	7:29	7:30	3	n
water	7:29	0:0	4	n
arg	7:32	7:47	3	sizeof(*window)
op	7:32	0:0	4	sizeof
water	7:38	0:0	4	(
op	7:39	0:0	4	*
water	7:40	0:0	4	window
water	7:46	0:0	4	)
water	7:48	0:0	2	;
if	8:4	11:4	2	(! window)
cond	8:8	8:9	3	! window
op	8:8	0:0	4	!
water	8:9	0:0	4	window
stmts	8:17	11:4	3	
water	8:17	0:0	4	{
call	9:8	9:66	4	av_log
arg	9:15	9:23	5	s->avctx
water	9:15	0:0	6	s
op	9:16	0:0	6	->
water	9:18	0:0	6	avctx
arg	9:25	9:37	5	AV_LOG_ERROR
water	9:25	0:0	6	AV_LOG_ERROR
arg	9:39	9:66	5	"Cannot allocate memory.\n"
water	9:39	0:0	6	"Cannot allocate memory.\n"
water	9:67	0:0	4	;
return	10:8	10:30	4	AVERROR(ENOMEM)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	ENOMEM
water	10:23	0:0	7	ENOMEM
water	11:4	0:0	4	}
call	12:4	12:38	2	ff_kbd_window_init
arg	12:23	12:29	3	window
water	12:23	0:0	4	window
arg	12:31	12:34	3	5.0
water	12:31	0:0	4	5
op	12:32	0:0	4	.
water	12:33	0:0	4	0
arg	12:36	12:38	3	n2
water	12:36	0:0	4	n2
water	12:39	0:0	2	;
for	13:4	14:33	2	(i = 0 ;i < n2;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	i < n2
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	n2
forexpr	13:24	13:25	3	i ++
water	13:24	0:0	4	i
op	13:25	0:0	4	++
stmts	14:8	14:33	3	
water	14:8	0:0	4	window
op	14:14	0:0	4	[
water	14:15	0:0	4	n
op	14:16	0:0	4	-
water	14:17	0:0	4	1
op	14:18	0:0	4	-
water	14:19	0:0	4	i
op	14:20	0:0	4	]
op	14:22	0:0	4	=
water	14:24	0:0	4	window
op	14:30	0:0	4	[
water	14:31	0:0	4	i
op	14:32	0:0	4	]
water	14:33	0:0	4	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	mdct_window
op	15:19	0:0	2	=
water	15:21	0:0	2	window
water	15:27	0:0	2	;
return	16:4	16:49	2	ff_mdct_init(&s->mdct,9,0,-2.0/n)
call	16:11	16:48	3	ff_mdct_init
arg	16:24	16:32	4	&s->mdct
op	16:24	0:0	5	&
water	16:25	0:0	5	s
op	16:26	0:0	5	->
water	16:28	0:0	5	mdct
arg	16:34	16:35	4	9
water	16:34	0:0	5	9
arg	16:37	16:38	4	0
water	16:37	0:0	5	0
arg	16:40	16:48	4	-2.0/n
op	16:40	0:0	5	-
water	16:41	0:0	5	2
op	16:42	0:0	5	.
water	16:43	0:0	5	0
op	16:45	0:0	5	/
water	16:47	0:0	5	n

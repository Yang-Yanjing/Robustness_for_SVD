func	1:15	23:0	0	void	uninit
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
stmnts	0:0	22:42	1	
decl	3:4	3:32	2	LADSPAContext	*s
op	3:21	0:0	2	=
water	3:23	0:0	2	ctx
op	3:26	0:0	2	->
water	3:28	0:0	2	priv
decl	4:4	4:9	2	int	i
for	5:4	10:4	2	(i = 0 ;i < s -> nb_handles;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:23	3	i < s -> nb_handles
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	s
op	5:21	0:0	4	->
water	5:23	0:0	4	nb_handles
forexpr	5:35	5:36	3	i ++
water	5:35	0:0	4	i
op	5:36	0:0	4	++
stmts	5:40	10:4	3	
water	5:40	0:0	4	{
if	6:8	7:46	4	(s -> desc -> deactivate)
cond	6:12	6:21	5	s -> desc -> deactivate
water	6:12	0:0	6	s
op	6:13	0:0	6	->
water	6:15	0:0	6	desc
op	6:19	0:0	6	->
water	6:21	0:0	6	deactivate
stmts	7:12	7:46	5	
call	7:12	7:45	6	s->desc->deactivate
arg	7:32	7:45	7	s->handles[i]
water	7:32	0:0	8	s
op	7:33	0:0	8	->
water	7:35	0:0	8	handles
op	7:42	0:0	8	[
water	7:43	0:0	8	i
op	7:44	0:0	8	]
water	7:46	0:0	6	;
if	8:8	9:43	4	(s -> desc -> cleanup)
cond	8:12	8:21	5	s -> desc -> cleanup
water	8:12	0:0	6	s
op	8:13	0:0	6	->
water	8:15	0:0	6	desc
op	8:19	0:0	6	->
water	8:21	0:0	6	cleanup
stmts	9:12	9:43	5	
call	9:12	9:42	6	s->desc->cleanup
arg	9:29	9:42	7	s->handles[i]
water	9:29	0:0	8	s
op	9:30	0:0	8	->
water	9:32	0:0	8	handles
op	9:39	0:0	8	[
water	9:40	0:0	8	i
op	9:41	0:0	8	]
water	9:43	0:0	6	;
water	10:4	0:0	4	}
if	11:4	12:29	2	(s -> dl_handle)
cond	11:8	11:11	3	s -> dl_handle
water	11:8	0:0	4	s
op	11:9	0:0	4	->
water	11:11	0:0	4	dl_handle
stmts	12:8	12:29	3	
call	12:8	12:28	4	dlclose
arg	12:16	12:28	5	s->dl_handle
water	12:16	0:0	6	s
op	12:17	0:0	6	->
water	12:19	0:0	6	dl_handle
water	12:29	0:0	4	;
call	13:4	13:22	2	av_freep
arg	13:13	13:22	3	&s->ipmap
op	13:13	0:0	4	&
water	13:14	0:0	4	s
op	13:15	0:0	4	->
water	13:17	0:0	4	ipmap
water	13:23	0:0	2	;
call	14:4	14:22	2	av_freep
arg	14:13	14:22	3	&s->opmap
op	14:13	0:0	4	&
water	14:14	0:0	4	s
op	14:15	0:0	4	->
water	14:17	0:0	4	opmap
water	14:23	0:0	2	;
call	15:4	15:22	2	av_freep
arg	15:13	15:22	3	&s->icmap
op	15:13	0:0	4	&
water	15:14	0:0	4	s
op	15:15	0:0	4	->
water	15:17	0:0	4	icmap
water	15:23	0:0	2	;
call	16:4	16:22	2	av_freep
arg	16:13	16:22	3	&s->ocmap
op	16:13	0:0	4	&
water	16:14	0:0	4	s
op	16:15	0:0	4	->
water	16:17	0:0	4	ocmap
water	16:23	0:0	2	;
call	17:4	17:22	2	av_freep
arg	17:13	17:22	3	&s->ictlv
op	17:13	0:0	4	&
water	17:14	0:0	4	s
op	17:15	0:0	4	->
water	17:17	0:0	4	ictlv
water	17:23	0:0	2	;
call	18:4	18:22	2	av_freep
arg	18:13	18:22	3	&s->octlv
op	18:13	0:0	4	&
water	18:14	0:0	4	s
op	18:15	0:0	4	->
water	18:17	0:0	4	octlv
water	18:23	0:0	2	;
call	19:4	19:24	2	av_freep
arg	19:13	19:24	3	&s->handles
op	19:13	0:0	4	&
water	19:14	0:0	4	s
op	19:15	0:0	4	->
water	19:17	0:0	4	handles
water	19:25	0:0	2	;
call	20:4	20:32	2	av_freep
arg	20:13	20:32	3	&s->ctl_needs_value
op	20:13	0:0	4	&
water	20:14	0:0	4	s
op	20:15	0:0	4	->
water	20:17	0:0	4	ctl_needs_value
water	20:33	0:0	2	;
if	21:4	22:42	2	(ctx -> nb_inputs)
cond	21:8	21:13	3	ctx -> nb_inputs
water	21:8	0:0	4	ctx
op	21:11	0:0	4	->
water	21:13	0:0	4	nb_inputs
stmts	22:8	22:42	3	
call	22:8	22:41	4	av_freep
arg	22:17	22:41	5	&ctx->input_pads[0].name
op	22:17	0:0	6	&
water	22:18	0:0	6	ctx
op	22:21	0:0	6	->
water	22:23	0:0	6	input_pads
op	22:33	0:0	6	[
water	22:34	0:0	6	0
op	22:35	0:0	6	]
op	22:36	0:0	6	.
water	22:37	0:0	6	name
water	22:42	0:0	4	;

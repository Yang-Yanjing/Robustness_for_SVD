func	1:0	51:0	0	static int	asf_read_subpayload
params	1:30	0:0	1	
param	1:31	1:49	2	AVFormatContext *	s
param	1:51	1:64	2	AVPacket *	pkt
param	1:66	1:79	2	int	is_header
stmnts	0:0	50:12	1	
decl	3:4	3:34	2	ASFContext	*asf
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:27	2	AVIOContext	*pb
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	pb
decl	5:4	5:19	2	uint8_t	sub_len
decl	6:4	6:14	2	int	ret
water	6:11	0:0	2	,
decl	6:4	6:14	2	int	i
if	7:4	15:4	2	(is_header)
cond	7:8	7:8	3	is_header
water	7:8	0:0	4	is_header
stmts	7:19	15:4	3	
water	7:19	0:0	4	{
water	8:8	0:0	4	asf
op	8:11	0:0	4	->
water	8:13	0:0	4	dts_delta
op	8:23	0:0	4	=
call	8:25	8:35	4	avio_r8
arg	8:33	8:35	5	pb
water	8:33	0:0	6	pb
water	8:36	0:0	4	;
if	9:8	11:8	4	(asf -> nb_mult_left)
cond	9:12	9:17	5	asf -> nb_mult_left
water	9:12	0:0	6	asf
op	9:15	0:0	6	->
water	9:17	0:0	6	nb_mult_left
stmts	9:31	11:8	5	
water	9:31	0:0	6	{
water	10:12	0:0	6	asf
op	10:15	0:0	6	->
water	10:17	0:0	6	mult_sub_len
op	10:30	0:0	6	=
call	10:32	10:44	6	avio_rl16
arg	10:42	10:44	7	pb
water	10:42	0:0	8	pb
water	10:45	0:0	6	;
water	11:8	0:0	6	}
water	12:8	0:0	4	asf
op	12:11	0:0	4	->
water	12:13	0:0	4	sub_header_offset
op	12:31	0:0	4	=
call	12:33	12:45	4	avio_tell
arg	12:43	12:45	5	pb
water	12:43	0:0	6	pb
water	12:46	0:0	4	;
water	13:8	0:0	4	asf
op	13:11	0:0	4	->
water	13:13	0:0	4	nb_sub
op	13:20	0:0	4	=
water	13:22	0:0	4	0
water	13:23	0:0	4	;
water	14:8	0:0	4	asf
op	14:11	0:0	4	->
water	14:13	0:0	4	sub_left
op	14:22	0:0	4	=
water	14:24	0:0	4	1
water	14:25	0:0	4	;
water	15:4	0:0	4	}
water	16:4	0:0	2	sub_len
op	16:12	0:0	2	=
call	16:14	16:24	2	avio_r8
arg	16:22	16:24	3	pb
water	16:22	0:0	4	pb
water	16:25	0:0	2	;
if	17:4	18:18	2	(( ret =av_get_packet (pb ,pkt ,sub_len ) ) < 0)
cond	17:8	17:50	3	( ret =av_get_packet (pb ,pkt ,sub_len ) ) < 0
water	17:8	0:0	4	(
water	17:9	0:0	4	ret
op	17:13	0:0	4	=
call	17:15	17:45	4	av_get_packet
arg	17:29	17:31	5	pb
water	17:29	0:0	6	pb
arg	17:33	17:36	5	pkt
water	17:33	0:0	6	pkt
arg	17:38	17:45	5	sub_len
water	17:38	0:0	6	sub_len
water	17:46	0:0	4	)
op	17:48	0:0	4	<
water	17:50	0:0	4	0
stmts	18:8	18:18	3	
return	18:8	18:18	4	ret
water	18:15	0:0	5	ret
for	19:4	24:4	2	(i = 0 ;i < asf -> nb_streams;i ++)
forinit	19:9	19:14	3	i = 0 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:25	3	i < asf -> nb_streams
water	19:16	0:0	4	i
op	19:18	0:0	4	<
water	19:20	0:0	4	asf
op	19:23	0:0	4	->
water	19:25	0:0	4	nb_streams
forexpr	19:37	19:38	3	i ++
water	19:37	0:0	4	i
op	19:38	0:0	4	++
stmts	19:42	24:4	3	
water	19:42	0:0	4	{
if	20:8	23:8	4	(asf -> stream_index == asf -> asf_st [ i ] -> stream_index)
cond	20:12	20:49	5	asf -> stream_index == asf -> asf_st [ i ] -> stream_index
water	20:12	0:0	6	asf
op	20:15	0:0	6	->
water	20:17	0:0	6	stream_index
op	20:30	0:0	6	==
water	20:33	0:0	6	asf
op	20:36	0:0	6	->
water	20:38	0:0	6	asf_st
op	20:44	0:0	6	[
water	20:45	0:0	6	i
op	20:46	0:0	6	]
op	20:47	0:0	6	->
water	20:49	0:0	6	stream_index
stmts	20:63	23:8	5	
water	20:63	0:0	6	{
water	21:12	0:0	6	pkt
op	21:15	0:0	6	->
water	21:17	0:0	6	stream_index
op	21:31	0:0	6	=
water	21:33	0:0	6	asf
op	21:36	0:0	6	->
water	21:38	0:0	6	asf_st
op	21:44	0:0	6	[
water	21:45	0:0	6	i
op	21:46	0:0	6	]
op	21:47	0:0	6	->
water	21:49	0:0	6	index
water	21:54	0:0	6	;
break	22:12	22:17	6	
water	23:8	0:0	6	}
water	24:4	0:0	4	}
water	25:4	0:0	2	asf
op	25:7	0:0	2	->
water	25:9	0:0	2	return_subpayload
op	25:27	0:0	2	=
water	25:29	0:0	2	1
water	25:30	0:0	2	;
if	26:4	27:34	2	(! sub_len)
cond	26:8	26:9	3	! sub_len
op	26:8	0:0	4	!
water	26:9	0:0	4	sub_len
stmts	27:8	27:34	3	
water	27:8	0:0	4	asf
op	27:11	0:0	4	->
water	27:13	0:0	4	return_subpayload
op	27:31	0:0	4	=
water	27:33	0:0	4	0
water	27:34	0:0	4	;
if	28:4	29:21	2	(sub_len)
cond	28:8	28:8	3	sub_len
water	28:8	0:0	4	sub_len
stmts	29:8	29:21	3	
water	29:8	0:0	4	asf
op	29:11	0:0	4	->
water	29:13	0:0	4	nb_sub
op	29:19	0:0	4	++
water	29:21	0:0	4	;
water	30:4	0:0	2	pkt
op	30:7	0:0	2	->
water	30:9	0:0	2	dts
op	30:13	0:0	2	=
water	30:15	0:0	2	asf
op	30:18	0:0	2	->
water	30:20	0:0	2	sub_dts
op	30:28	0:0	2	+
water	30:30	0:0	2	(
water	30:31	0:0	2	asf
op	30:34	0:0	2	->
water	30:36	0:0	2	nb_sub
op	30:43	0:0	2	-
water	30:45	0:0	2	1
water	30:46	0:0	2	)
op	30:48	0:0	2	*
water	30:50	0:0	2	asf
op	30:53	0:0	2	->
water	30:55	0:0	2	dts_delta
op	30:65	0:0	2	-
water	30:67	0:0	2	asf
op	30:70	0:0	2	->
water	30:72	0:0	2	preroll
water	30:79	0:0	2	;
if	31:4	35:4	2	(asf -> nb_mult_left && (avio_tell (pb ) >= ( asf -> sub_header_offset + asf -> mult_sub_len ) ))
cond	31:8	32:74	3	asf -> nb_mult_left && (avio_tell (pb ) >= ( asf -> sub_header_offset + asf -> mult_sub_len ) )
water	31:8	0:0	4	asf
op	31:11	0:0	4	->
water	31:13	0:0	4	nb_mult_left
op	31:26	0:0	4	&&
water	31:29	0:0	4	(
call	31:30	31:42	4	avio_tell
arg	31:40	31:42	5	pb
water	31:40	0:0	6	pb
op	31:44	0:0	4	>=
water	32:30	0:0	4	(
water	32:31	0:0	4	asf
op	32:34	0:0	4	->
water	32:36	0:0	4	sub_header_offset
op	32:54	0:0	4	+
water	32:56	0:0	4	asf
op	32:59	0:0	4	->
water	32:61	0:0	4	mult_sub_len
water	32:73	0:0	4	)
water	32:74	0:0	4	)
stmts	32:77	35:4	3	
water	32:77	0:0	4	{
water	33:8	0:0	4	asf
op	33:11	0:0	4	->
water	33:13	0:0	4	sub_left
op	33:22	0:0	4	=
water	33:24	0:0	4	0
water	33:25	0:0	4	;
water	34:8	0:0	4	asf
op	34:11	0:0	4	->
water	34:13	0:0	4	nb_mult_left
op	34:25	0:0	4	--
water	34:27	0:0	4	;
water	35:4	0:0	4	}
if	36:4	49:4	2	(avio_tell (pb ) >= asf -> packet_offset + asf -> packet_size - asf -> pad_len)
cond	36:8	36:70	3	avio_tell (pb ) >= asf -> packet_offset + asf -> packet_size - asf -> pad_len
call	36:8	36:20	4	avio_tell
arg	36:18	36:20	5	pb
water	36:18	0:0	6	pb
op	36:22	0:0	4	>=
water	36:25	0:0	4	asf
op	36:28	0:0	4	->
water	36:30	0:0	4	packet_offset
op	36:44	0:0	4	+
water	36:46	0:0	4	asf
op	36:49	0:0	4	->
water	36:51	0:0	4	packet_size
op	36:63	0:0	4	-
water	36:65	0:0	4	asf
op	36:68	0:0	4	->
water	36:70	0:0	4	pad_len
stmts	36:79	49:4	3	
water	36:79	0:0	4	{
water	37:8	0:0	4	asf
op	37:11	0:0	4	->
water	37:13	0:0	4	sub_left
op	37:22	0:0	4	=
water	37:24	0:0	4	0
water	37:25	0:0	4	;
if	38:8	48:8	4	(! asf -> nb_mult_left)
cond	38:12	38:18	5	! asf -> nb_mult_left
op	38:12	0:0	6	!
water	38:13	0:0	6	asf
op	38:16	0:0	6	->
water	38:18	0:0	6	nb_mult_left
stmts	38:32	48:8	5	
water	38:32	0:0	6	{
call	39:12	39:38	6	avio_skip
arg	39:22	39:24	7	pb
water	39:22	0:0	8	pb
arg	39:26	39:38	7	asf->pad_len
water	39:26	0:0	8	asf
op	39:29	0:0	8	->
water	39:31	0:0	8	pad_len
water	39:39	0:0	6	;
if	40:12	47:12	6	(avio_tell (pb ) != asf -> packet_offset + asf -> packet_size)
cond	40:16	40:59	7	avio_tell (pb ) != asf -> packet_offset + asf -> packet_size
call	40:16	40:28	8	avio_tell
arg	40:26	40:28	9	pb
water	40:26	0:0	10	pb
op	40:30	0:0	8	!=
water	40:33	0:0	8	asf
op	40:36	0:0	8	->
water	40:38	0:0	8	packet_offset
op	40:52	0:0	8	+
water	40:54	0:0	8	asf
op	40:57	0:0	8	->
water	40:59	0:0	8	packet_size
stmts	40:72	47:12	7	
water	40:72	0:0	8	{
if	41:16	42:46	8	(! asf -> packet_size)
cond	41:20	41:26	9	! asf -> packet_size
op	41:20	0:0	10	!
water	41:21	0:0	10	asf
op	41:24	0:0	10	->
water	41:26	0:0	10	packet_size
stmts	42:20	42:46	9	
return	42:20	42:46	10	AVERROR_INVALIDDATA
water	42:27	0:0	11	AVERROR_INVALIDDATA
call	43:16	45:75	8	av_log
arg	43:23	43:24	9	s
water	43:23	0:0	10	s
arg	43:26	43:40	9	AV_LOG_WARNING
water	43:26	0:0	10	AV_LOG_WARNING
arg	44:23	44:72	9	"Position %"PRId64" wrong, should be %"PRId64"\n"
water	44:23	0:0	10	"Position %"
water	44:35	0:0	10	PRId64
water	44:41	0:0	10	" wrong, should be %"
water	44:62	0:0	10	PRId64
water	44:68	0:0	10	"\n"
arg	45:23	45:36	9	avio_tell(pb)
call	45:23	45:35	10	avio_tell
arg	45:33	45:35	11	pb
water	45:33	0:0	12	pb
arg	45:38	45:75	9	asf->packet_offset+asf->packet_size
water	45:38	0:0	10	asf
op	45:41	0:0	10	->
water	45:43	0:0	10	packet_offset
op	45:57	0:0	10	+
water	45:59	0:0	10	asf
op	45:62	0:0	10	->
water	45:64	0:0	10	packet_size
water	45:76	0:0	8	;
call	46:16	46:77	8	avio_seek
arg	46:26	46:28	9	pb
water	46:26	0:0	10	pb
arg	46:30	46:67	9	asf->packet_offset+asf->packet_size
water	46:30	0:0	10	asf
op	46:33	0:0	10	->
water	46:35	0:0	10	packet_offset
op	46:49	0:0	10	+
water	46:51	0:0	10	asf
op	46:54	0:0	10	->
water	46:56	0:0	10	packet_size
arg	46:69	46:77	9	SEEK_SET
water	46:69	0:0	10	SEEK_SET
water	46:78	0:0	8	;
water	47:12	0:0	8	}
water	48:8	0:0	6	}
water	49:4	0:0	4	}
return	50:4	50:12	2	0
water	50:11	0:0	3	0

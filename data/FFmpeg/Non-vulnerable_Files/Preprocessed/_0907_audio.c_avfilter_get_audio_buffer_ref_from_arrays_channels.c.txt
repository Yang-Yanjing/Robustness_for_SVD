func	2:0	60:0	0	AVFilterBufferRef *	avfilter_get_audio_buffer_ref_from_arrays_channels
params	2:69	0:0	1	
param	2:70	2:84	2	uint8_t * *	data
param	3:70	3:82	2	int	linesize
param	3:83	3:92	2	int	perms
param	4:70	4:84	2	int	nb_samples
param	5:70	5:100	2	enum AVSampleFormat	sample_fmt
param	6:70	6:82	2	int	channels
param	7:70	7:93	2	uint64_t	channel_layout
stmnts	0:0	59:15	1	
decl	9:4	9:14	2	int	planes
decl	10:4	10:64	2	AVFilterBuffer	*samples
op	10:34	0:0	2	=
call	10:36	10:63	3	av_mallocz
arg	10:47	10:63	4	sizeof(*samples)
op	10:47	0:0	5	sizeof
water	10:53	0:0	5	(
op	10:54	0:0	5	*
water	10:55	0:0	5	samples
water	10:62	0:0	5	)
decl	11:4	11:67	2	AVFilterBufferRef	*samplesref
op	11:34	0:0	2	=
call	11:36	11:66	3	av_mallocz
arg	11:47	11:66	4	sizeof(*samplesref)
op	11:47	0:0	5	sizeof
water	11:53	0:0	5	(
op	11:54	0:0	5	*
water	11:55	0:0	5	samplesref
water	11:65	0:0	5	)
if	12:4	13:17	2	(! samples || ! samplesref)
cond	12:8	12:21	3	! samples || ! samplesref
op	12:8	0:0	4	!
water	12:9	0:0	4	samples
op	12:17	0:0	4	||
op	12:20	0:0	4	!
water	12:21	0:0	4	samplesref
stmts	13:8	13:17	3	
goto	13:8	13:17	4	fail
water	13:13	0:0	5	fail
call	14:4	14:23	2	av_assert0
arg	14:15	14:23	3	channels
water	14:15	0:0	4	channels
water	14:24	0:0	2	;
call	15:4	16:76	2	av_assert0
arg	15:15	16:76	3	channel_layout==0||channels==av_get_channel_layout_nb_channels(channel_layout)
water	15:15	0:0	4	channel_layout
op	15:30	0:0	4	==
water	15:33	0:0	4	0
op	15:35	0:0	4	||
water	16:15	0:0	4	channels
op	16:24	0:0	4	==
call	16:27	16:75	4	av_get_channel_layout_nb_channels
arg	16:61	16:75	5	channel_layout
water	16:61	0:0	6	channel_layout
water	16:77	0:0	2	;
water	17:4	0:0	2	samplesref
op	17:14	0:0	2	->
water	17:16	0:0	2	buf
op	17:28	0:0	2	=
water	17:30	0:0	2	samples
water	17:37	0:0	2	;
water	18:4	0:0	2	samplesref
op	18:14	0:0	2	->
water	18:16	0:0	2	buf
op	18:19	0:0	2	->
water	18:21	0:0	2	free
op	18:28	0:0	2	=
water	18:30	0:0	2	ff_avfilter_default_free_buffer
water	18:61	0:0	2	;
if	19:4	20:17	2	(! ( samplesref -> audio =av_mallocz (sizeof ( * samplesref -> audio ) ) ))
cond	19:8	19:68	3	! ( samplesref -> audio =av_mallocz (sizeof ( * samplesref -> audio ) ) )
op	19:8	0:0	4	!
water	19:9	0:0	4	(
water	19:10	0:0	4	samplesref
op	19:20	0:0	4	->
water	19:22	0:0	4	audio
op	19:28	0:0	4	=
call	19:30	19:67	4	av_mallocz
arg	19:41	19:67	5	sizeof(*samplesref->audio)
op	19:41	0:0	6	sizeof
water	19:47	0:0	6	(
op	19:48	0:0	6	*
water	19:49	0:0	6	samplesref
op	19:59	0:0	6	->
water	19:61	0:0	6	audio
water	19:66	0:0	6	)
water	19:68	0:0	4	)
stmts	20:8	20:17	3	
goto	20:8	20:17	4	fail
water	20:13	0:0	5	fail
water	21:4	0:0	2	samplesref
op	21:14	0:0	2	->
water	21:16	0:0	2	audio
op	21:21	0:0	2	->
water	21:23	0:0	2	nb_samples
op	21:38	0:0	2	=
water	21:40	0:0	2	nb_samples
water	21:50	0:0	2	;
water	22:4	0:0	2	samplesref
op	22:14	0:0	2	->
water	22:16	0:0	2	audio
op	22:21	0:0	2	->
water	22:23	0:0	2	channel_layout
op	22:38	0:0	2	=
water	22:40	0:0	2	channel_layout
water	22:54	0:0	2	;
water	23:4	0:0	2	samplesref
op	23:14	0:0	2	->
water	23:16	0:0	2	audio
op	23:21	0:0	2	->
water	23:23	0:0	2	channels
op	23:38	0:0	2	=
water	23:40	0:0	2	channels
water	23:48	0:0	2	;
water	24:4	0:0	2	planes
op	24:11	0:0	2	=
call	24:13	24:47	2	av_sample_fmt_is_planar
arg	24:37	24:47	3	sample_fmt
water	24:37	0:0	4	sample_fmt
water	24:49	0:0	2	?
water	24:51	0:0	2	channels
water	24:60	0:0	2	:
water	24:62	0:0	2	1
water	24:63	0:0	2	;
water	26:4	0:0	2	samplesref
op	26:14	0:0	2	->
water	26:16	0:0	2	perms
op	26:22	0:0	2	=
water	26:24	0:0	2	perms
op	26:30	0:0	2	|
water	26:32	0:0	2	AV_PERM_READ
water	26:44	0:0	2	;
water	27:4	0:0	2	samples
op	27:11	0:0	2	->
water	27:13	0:0	2	refcount
op	27:23	0:0	2	=
water	27:25	0:0	2	1
water	27:26	0:0	2	;
water	28:4	0:0	2	samplesref
op	28:14	0:0	2	->
water	28:16	0:0	2	type
op	28:23	0:0	2	=
water	28:25	0:0	2	AVMEDIA_TYPE_AUDIO
water	28:43	0:0	2	;
water	29:4	0:0	2	samplesref
op	29:14	0:0	2	->
water	29:16	0:0	2	format
op	29:23	0:0	2	=
water	29:25	0:0	2	sample_fmt
water	29:35	0:0	2	;
call	30:4	31:80	2	memcpy
arg	30:11	30:24	3	samples->data
water	30:11	0:0	4	samples
op	30:18	0:0	4	->
water	30:20	0:0	4	data
arg	30:26	30:30	3	data
water	30:26	0:0	4	data
arg	31:11	31:80	3	FFMIN(FF_ARRAY_ELEMS(samples->data),planes)*sizeof(samples->data[0])
call	31:11	31:54	4	FFMIN
arg	31:17	31:46	5	FF_ARRAY_ELEMS(samples->data)
call	31:17	31:45	6	FF_ARRAY_ELEMS
arg	31:32	31:45	7	samples->data
water	31:32	0:0	8	samples
op	31:39	0:0	8	->
water	31:41	0:0	8	data
arg	31:48	31:54	5	planes
water	31:48	0:0	6	planes
op	31:55	0:0	4	*
op	31:56	0:0	4	sizeof
water	31:62	0:0	4	(
water	31:63	0:0	4	samples
op	31:70	0:0	4	->
water	31:72	0:0	4	data
op	31:76	0:0	4	[
water	31:77	0:0	4	0
op	31:78	0:0	4	]
water	31:79	0:0	4	)
water	31:81	0:0	2	;
call	32:4	32:65	2	memcpy
arg	32:11	32:27	3	samplesref->data
water	32:11	0:0	4	samplesref
op	32:21	0:0	4	->
water	32:23	0:0	4	data
arg	32:29	32:42	3	samples->data
water	32:29	0:0	4	samples
op	32:36	0:0	4	->
water	32:38	0:0	4	data
arg	32:44	32:65	3	sizeof(samples->data)
op	32:44	0:0	4	sizeof
water	32:50	0:0	4	(
water	32:51	0:0	4	samples
op	32:58	0:0	4	->
water	32:60	0:0	4	data
water	32:64	0:0	4	)
water	32:66	0:0	2	;
water	33:4	0:0	2	samples
op	33:11	0:0	2	->
water	33:13	0:0	2	linesize
op	33:21	0:0	2	[
water	33:22	0:0	2	0
op	33:23	0:0	2	]
op	33:25	0:0	2	=
water	33:27	0:0	2	samplesref
op	33:37	0:0	2	->
water	33:39	0:0	2	linesize
op	33:47	0:0	2	[
water	33:48	0:0	2	0
op	33:49	0:0	2	]
op	33:51	0:0	2	=
water	33:53	0:0	2	linesize
water	33:61	0:0	2	;
if	34:4	43:4	2	(planes >FF_ARRAY_ELEMS (samples -> data ))
cond	34:8	34:45	3	planes >FF_ARRAY_ELEMS (samples -> data )
water	34:8	0:0	4	planes
op	34:15	0:0	4	>
call	34:17	34:45	4	FF_ARRAY_ELEMS
arg	34:32	34:45	5	samples->data
water	34:32	0:0	6	samples
op	34:39	0:0	6	->
water	34:41	0:0	6	data
stmts	34:48	43:4	3	
water	34:48	0:0	4	{
water	35:8	0:0	4	samples
op	35:15	0:0	4	->
water	35:20	0:0	4	extended_data
op	35:34	0:0	4	=
call	35:36	36:53	4	av_mallocz_array
arg	35:53	35:84	5	sizeof(*samples->extended_data)
op	35:53	0:0	6	sizeof
water	35:59	0:0	6	(
op	35:60	0:0	6	*
water	35:61	0:0	6	samples
op	35:68	0:0	6	->
water	35:70	0:0	6	extended_data
water	35:83	0:0	6	)
arg	36:47	36:53	5	planes
water	36:47	0:0	6	planes
water	36:54	0:0	4	;
water	37:8	0:0	4	samplesref
op	37:18	0:0	4	->
water	37:20	0:0	4	extended_data
op	37:34	0:0	4	=
call	37:36	38:53	4	av_mallocz_array
arg	37:53	37:87	5	sizeof(*samplesref->extended_data)
op	37:53	0:0	6	sizeof
water	37:59	0:0	6	(
op	37:60	0:0	6	*
water	37:61	0:0	6	samplesref
op	37:71	0:0	6	->
water	37:73	0:0	6	extended_data
water	37:86	0:0	6	)
arg	38:47	38:53	5	planes
water	38:47	0:0	6	planes
water	38:54	0:0	4	;
if	39:8	40:21	4	(! samples -> extended_data || ! samplesref -> extended_data)
cond	39:12	39:52	5	! samples -> extended_data || ! samplesref -> extended_data
op	39:12	0:0	6	!
water	39:13	0:0	6	samples
op	39:20	0:0	6	->
water	39:22	0:0	6	extended_data
op	39:36	0:0	6	||
op	39:39	0:0	6	!
water	39:40	0:0	6	samplesref
op	39:50	0:0	6	->
water	39:52	0:0	6	extended_data
stmts	40:12	40:21	5	
goto	40:12	40:21	6	fail
water	40:17	0:0	7	fail
call	41:8	41:68	4	memcpy
arg	41:15	41:40	5	samples->extended_data
water	41:15	0:0	6	samples
op	41:22	0:0	6	->
water	41:27	0:0	6	extended_data
arg	41:42	41:46	5	data
water	41:42	0:0	6	data
arg	41:48	41:68	5	sizeof(*data)*planes
op	41:48	0:0	6	sizeof
water	41:54	0:0	6	(
op	41:55	0:0	6	*
water	41:56	0:0	6	data
water	41:60	0:0	6	)
op	41:61	0:0	6	*
water	41:62	0:0	6	planes
water	41:69	0:0	4	;
call	42:8	42:68	4	memcpy
arg	42:15	42:40	5	samplesref->extended_data
water	42:15	0:0	6	samplesref
op	42:25	0:0	6	->
water	42:27	0:0	6	extended_data
arg	42:42	42:46	5	data
water	42:42	0:0	6	data
arg	42:48	42:68	5	sizeof(*data)*planes
op	42:48	0:0	6	sizeof
water	42:54	0:0	6	(
op	42:55	0:0	6	*
water	42:56	0:0	6	data
water	42:60	0:0	6	)
op	42:61	0:0	6	*
water	42:62	0:0	6	planes
water	42:69	0:0	4	;
water	43:4	0:0	4	}
else	43:6	46:4	2
stmts	43:11	46:4	3	
water	43:11	0:0	4	{
water	44:8	0:0	4	samples
op	44:15	0:0	4	->
water	44:17	0:0	4	extended_data
op	44:34	0:0	4	=
water	44:36	0:0	4	samples
op	44:43	0:0	4	->
water	44:45	0:0	4	data
water	44:49	0:0	4	;
water	45:8	0:0	4	samplesref
op	45:18	0:0	4	->
water	45:20	0:0	4	extended_data
op	45:34	0:0	4	=
water	45:36	0:0	4	samplesref
op	45:46	0:0	4	->
water	45:48	0:0	4	data
water	45:52	0:0	4	;
water	46:4	0:0	4	}
water	47:4	0:0	2	samplesref
op	47:14	0:0	2	->
water	47:16	0:0	2	pts
op	47:20	0:0	2	=
water	47:22	0:0	2	AV_NOPTS_VALUE
water	47:36	0:0	2	;
return	48:4	48:21	2	samplesref
water	48:11	0:0	3	samplesref
label	49:0	49:4	2	fail :
if	50:4	51:41	2	(samples && samples -> extended_data != samples -> data)
cond	50:8	50:54	3	samples && samples -> extended_data != samples -> data
water	50:8	0:0	4	samples
op	50:16	0:0	4	&&
water	50:19	0:0	4	samples
op	50:26	0:0	4	->
water	50:28	0:0	4	extended_data
op	50:42	0:0	4	!=
water	50:45	0:0	4	samples
op	50:52	0:0	4	->
water	50:54	0:0	4	data
stmts	51:8	51:41	3	
call	51:8	51:40	4	av_freep
arg	51:17	51:40	5	&samples->extended_data
op	51:17	0:0	6	&
water	51:18	0:0	6	samples
op	51:25	0:0	6	->
water	51:27	0:0	6	extended_data
water	51:41	0:0	4	;
if	52:4	56:4	2	(samplesref)
cond	52:8	52:8	3	samplesref
water	52:8	0:0	4	samplesref
stmts	52:20	56:4	3	
water	52:20	0:0	4	{
call	53:8	53:35	4	av_freep
arg	53:17	53:35	5	&samplesref->audio
op	53:17	0:0	6	&
water	53:18	0:0	6	samplesref
op	53:28	0:0	6	->
water	53:30	0:0	6	audio
water	53:36	0:0	4	;
if	54:8	55:48	4	(samplesref -> extended_data != samplesref -> data)
cond	54:12	54:53	5	samplesref -> extended_data != samplesref -> data
water	54:12	0:0	6	samplesref
op	54:22	0:0	6	->
water	54:24	0:0	6	extended_data
op	54:38	0:0	6	!=
water	54:41	0:0	6	samplesref
op	54:51	0:0	6	->
water	54:53	0:0	6	data
stmts	55:12	55:48	5	
call	55:12	55:47	6	av_freep
arg	55:21	55:47	7	&samplesref->extended_data
op	55:21	0:0	8	&
water	55:22	0:0	8	samplesref
op	55:32	0:0	8	->
water	55:34	0:0	8	extended_data
water	55:48	0:0	6	;
water	56:4	0:0	4	}
call	57:4	57:24	2	av_freep
arg	57:13	57:24	3	&samplesref
op	57:13	0:0	4	&
water	57:14	0:0	4	samplesref
water	57:25	0:0	2	;
call	58:4	58:21	2	av_freep
arg	58:13	58:21	3	&samples
op	58:13	0:0	4	&
water	58:14	0:0	4	samples
water	58:22	0:0	2	;
return	59:4	59:15	2	NULL
water	59:11	0:0	3	NULL

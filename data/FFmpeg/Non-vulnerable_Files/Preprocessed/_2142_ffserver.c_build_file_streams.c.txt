func	1:0	47:0	0	static void	build_file_streams
params	1:30	0:0	1	
param	1:31	1:35	2	void
stmnts	0:0	46:4	1	
decl	3:4	3:26	2	FFServerStream	*stream
decl	4:4	4:27	2	AVFormatContext	*infile
decl	5:4	5:14	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:14	2	int	ret
for	7:4	46:4	2	(stream = config . first_stream ;stream;stream = stream -> next)
forinit	7:8	7:36	3	stream = config . first_stream ;
water	7:8	0:0	4	stream
op	7:15	0:0	4	=
water	7:17	0:0	4	config
op	7:23	0:0	4	.
water	7:24	0:0	4	first_stream
water	7:36	0:0	4	;
cond	7:38	7:38	3	stream
water	7:38	0:0	4	stream
forexpr	7:46	7:63	3	stream = stream -> next
water	7:46	0:0	4	stream
op	7:53	0:0	4	=
water	7:55	0:0	4	stream
op	7:61	0:0	4	->
water	7:63	0:0	4	next
stmts	7:69	46:4	3	
water	7:69	0:0	4	{
water	8:8	0:0	4	infile
op	8:15	0:0	4	=
water	8:17	0:0	4	NULL
water	8:21	0:0	4	;
if	9:8	10:20	4	(stream -> stream_type != STREAM_TYPE_LIVE || stream -> feed)
cond	9:12	9:63	5	stream -> stream_type != STREAM_TYPE_LIVE || stream -> feed
water	9:12	0:0	6	stream
op	9:18	0:0	6	->
water	9:20	0:0	6	stream_type
op	9:32	0:0	6	!=
water	9:35	0:0	6	STREAM_TYPE_LIVE
op	9:52	0:0	6	||
water	9:55	0:0	6	stream
op	9:61	0:0	6	->
water	9:63	0:0	6	feed
stmts	10:12	10:20	5	
continue	10:12	10:20	6	
if	16:8	17:72	4	(stream -> fmt && !strcmp (stream -> fmt -> name ,"rtp" ))
cond	16:12	16:59	5	stream -> fmt && !strcmp (stream -> fmt -> name ,"rtp" )
water	16:12	0:0	6	stream
op	16:18	0:0	6	->
water	16:20	0:0	6	fmt
op	16:24	0:0	6	&&
op	16:27	0:0	6	!
call	16:28	16:59	6	strcmp
arg	16:35	16:52	7	stream->fmt->name
water	16:35	0:0	8	stream
op	16:41	0:0	8	->
water	16:43	0:0	8	fmt
op	16:46	0:0	8	->
water	16:48	0:0	8	name
arg	16:54	16:59	7	"rtp"
water	16:54	0:0	8	"rtp"
stmts	17:12	17:72	5	
call	17:12	17:71	6	av_dict_set
arg	17:24	17:40	7	&stream->in_opts
op	17:24	0:0	8	&
water	17:25	0:0	8	stream
op	17:31	0:0	8	->
water	17:33	0:0	8	in_opts
arg	17:42	17:63	7	"mpeg2ts_compute_pcr"
water	17:42	0:0	8	"mpeg2ts_compute_pcr"
arg	17:65	17:68	7	"1"
water	17:65	0:0	8	"1"
arg	17:70	17:71	7	0
water	17:70	0:0	8	0
water	17:72	0:0	6	;
if	18:8	22:8	4	(! stream -> feed_filename [ 0 ])
cond	18:12	18:36	5	! stream -> feed_filename [ 0 ]
op	18:12	0:0	6	!
water	18:13	0:0	6	stream
op	18:19	0:0	6	->
water	18:21	0:0	6	feed_filename
op	18:34	0:0	6	[
water	18:35	0:0	6	0
op	18:36	0:0	6	]
stmts	18:39	22:8	5	
water	18:39	0:0	6	{
call	19:12	20:37	6	http_log
arg	19:21	19:62	7	"Unspecified feed file for stream '%s'\n"
water	19:21	0:0	8	"Unspecified feed file for stream '%s'\n"
arg	20:21	20:37	7	stream->filename
water	20:21	0:0	8	stream
op	20:27	0:0	8	->
water	20:29	0:0	8	filename
water	20:38	0:0	6	;
goto	21:12	21:21	6	fail
water	21:17	0:0	7	fail
water	22:8	0:0	6	}
call	23:8	24:56	4	http_log
arg	23:17	23:59	5	"Opening feed file '%s' for stream '%s'\n"
water	23:17	0:0	6	"Opening feed file '%s' for stream '%s'\n"
arg	24:17	24:38	5	stream->feed_filename
water	24:17	0:0	6	stream
op	24:23	0:0	6	->
water	24:25	0:0	6	feed_filename
arg	24:40	24:56	5	stream->filename
water	24:40	0:0	6	stream
op	24:46	0:0	6	->
water	24:48	0:0	6	filename
water	24:57	0:0	4	;
water	25:8	0:0	4	ret
op	25:12	0:0	4	=
call	25:14	26:64	4	avformat_open_input
arg	25:34	25:41	5	&infile
op	25:34	0:0	6	&
water	25:35	0:0	6	infile
arg	25:43	25:64	5	stream->feed_filename
water	25:43	0:0	6	stream
op	25:49	0:0	6	->
water	25:51	0:0	6	feed_filename
arg	26:34	26:46	5	stream->ifmt
water	26:34	0:0	6	stream
op	26:40	0:0	6	->
water	26:42	0:0	6	ifmt
arg	26:48	26:64	5	&stream->in_opts
op	26:48	0:0	6	&
water	26:49	0:0	6	stream
op	26:55	0:0	6	->
water	26:57	0:0	6	in_opts
water	26:65	0:0	4	;
if	27:8	33:8	4	(ret < 0)
cond	27:12	27:18	5	ret < 0
water	27:12	0:0	6	ret
op	27:16	0:0	6	<
water	27:18	0:0	6	0
stmts	27:21	33:8	5	
water	27:21	0:0	6	{
call	28:12	29:36	6	http_log
arg	28:21	28:48	7	"Could not open '%s': %s\n"
water	28:21	0:0	8	"Could not open '%s': %s\n"
arg	28:50	28:71	7	stream->feed_filename
water	28:50	0:0	8	stream
op	28:56	0:0	8	->
water	28:58	0:0	8	feed_filename
arg	29:21	29:36	7	av_err2str(ret)
call	29:21	29:35	8	av_err2str
arg	29:32	29:35	9	ret
water	29:32	0:0	10	ret
water	29:37	0:0	6	;
label	31:8	31:12	6	fail :
call	32:12	32:32	6	remove_stream
arg	32:26	32:32	7	stream
water	32:26	0:0	8	stream
water	32:33	0:0	6	;
water	33:8	0:0	6	}
else	33:10	45:8	4
stmts	33:15	45:8	5	
water	33:15	0:0	6	{
if	36:12	41:12	6	(avformat_find_stream_info (infile ,NULL ) < 0)
cond	36:16	36:58	7	avformat_find_stream_info (infile ,NULL ) < 0
call	36:16	36:54	8	avformat_find_stream_info
arg	36:42	36:48	9	infile
water	36:42	0:0	10	infile
arg	36:50	36:54	9	NULL
water	36:50	0:0	10	NULL
op	36:56	0:0	8	<
water	36:58	0:0	8	0
stmts	36:61	41:12	7	
water	36:61	0:0	8	{
call	37:16	38:46	8	http_log
arg	37:25	37:70	9	"Could not find codec parameters from '%s'\n"
water	37:25	0:0	10	"Could not find codec parameters from '%s'\n"
arg	38:25	38:46	9	stream->feed_filename
water	38:25	0:0	10	stream
op	38:31	0:0	10	->
water	38:33	0:0	10	feed_filename
water	38:47	0:0	8	;
call	39:16	39:44	8	avformat_close_input
arg	39:37	39:44	9	&infile
op	39:37	0:0	10	&
water	39:38	0:0	10	infile
water	39:45	0:0	8	;
goto	40:16	40:25	8	fail
water	40:21	0:0	9	fail
water	41:12	0:0	8	}
for	42:12	43:68	6	(i = 0 ;i < infile -> nb_streams;i ++)
forinit	42:16	42:19	7	i = 0 ;
water	42:16	0:0	8	i
op	42:17	0:0	8	=
water	42:18	0:0	8	0
water	42:19	0:0	8	;
cond	42:20	42:30	7	i < infile -> nb_streams
water	42:20	0:0	8	i
op	42:21	0:0	8	<
water	42:22	0:0	8	infile
op	42:28	0:0	8	->
water	42:30	0:0	8	nb_streams
forexpr	42:41	42:42	7	i ++
water	42:41	0:0	8	i
op	42:42	0:0	8	++
stmts	43:16	43:68	7	
call	43:16	43:67	8	add_av_stream1
arg	43:31	43:37	9	stream
water	43:31	0:0	10	stream
arg	43:39	43:64	9	infile->streams[i]->codec
water	43:39	0:0	10	infile
op	43:45	0:0	10	->
water	43:47	0:0	10	streams
op	43:54	0:0	10	[
water	43:55	0:0	10	i
op	43:56	0:0	10	]
op	43:57	0:0	10	->
water	43:59	0:0	10	codec
arg	43:66	43:67	9	1
water	43:66	0:0	10	1
water	43:68	0:0	8	;
call	44:12	44:40	6	avformat_close_input
arg	44:33	44:40	7	&infile
op	44:33	0:0	8	&
water	44:34	0:0	8	infile
water	44:41	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}

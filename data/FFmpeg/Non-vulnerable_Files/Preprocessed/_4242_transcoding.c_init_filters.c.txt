func	1:0	26:0	0	static int	init_filters
params	1:23	0:0	1	
param	1:24	1:28	2	void
stmnts	0:0	25:12	1	
decl	3:4	3:27	2	const char	*filter_spec
decl	4:4	4:18	2	unsigned int	i
decl	5:4	5:11	2	int	ret
water	6:4	0:0	2	filter_ctx
op	6:15	0:0	2	=
call	6:17	6:74	2	av_malloc_array
arg	6:33	6:53	3	ifmt_ctx->nb_streams
water	6:33	0:0	4	ifmt_ctx
op	6:41	0:0	4	->
water	6:43	0:0	4	nb_streams
arg	6:55	6:74	3	sizeof(*filter_ctx)
op	6:55	0:0	4	sizeof
water	6:61	0:0	4	(
op	6:62	0:0	4	*
water	6:63	0:0	4	filter_ctx
water	6:73	0:0	4	)
water	6:75	0:0	2	;
if	7:4	8:30	2	(! filter_ctx)
cond	7:8	7:9	3	! filter_ctx
op	7:8	0:0	4	!
water	7:9	0:0	4	filter_ctx
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(ENOMEM)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	ENOMEM
water	8:23	0:0	7	ENOMEM
for	9:4	24:4	2	(i = 0 ;i < ifmt_ctx -> nb_streams;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:30	3	i < ifmt_ctx -> nb_streams
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	ifmt_ctx
op	9:28	0:0	4	->
water	9:30	0:0	4	nb_streams
forexpr	9:42	9:43	3	i ++
water	9:42	0:0	4	i
op	9:43	0:0	4	++
stmts	9:47	24:4	3	
water	9:47	0:0	4	{
water	10:8	0:0	4	filter_ctx
op	10:18	0:0	4	[
water	10:19	0:0	4	i
op	10:20	0:0	4	]
op	10:21	0:0	4	.
water	10:22	0:0	4	buffersrc_ctx
op	10:37	0:0	4	=
water	10:39	0:0	4	NULL
water	10:43	0:0	4	;
water	11:8	0:0	4	filter_ctx
op	11:18	0:0	4	[
water	11:19	0:0	4	i
op	11:20	0:0	4	]
op	11:21	0:0	4	.
water	11:22	0:0	4	buffersink_ctx
op	11:37	0:0	4	=
water	11:39	0:0	4	NULL
water	11:43	0:0	4	;
water	12:8	0:0	4	filter_ctx
op	12:18	0:0	4	[
water	12:19	0:0	4	i
op	12:20	0:0	4	]
op	12:21	0:0	4	.
water	12:22	0:0	4	filter_graph
op	12:37	0:0	4	=
water	12:39	0:0	4	NULL
water	12:43	0:0	4	;
if	13:8	15:20	4	(! ( ifmt_ctx -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_AUDIO || ifmt_ctx -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_VIDEO ))
cond	13:12	14:80	5	! ( ifmt_ctx -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_AUDIO || ifmt_ctx -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_VIDEO )
op	13:12	0:0	6	!
water	13:13	0:0	6	(
water	13:14	0:0	6	ifmt_ctx
op	13:22	0:0	6	->
water	13:24	0:0	6	streams
op	13:31	0:0	6	[
water	13:32	0:0	6	i
op	13:33	0:0	6	]
op	13:34	0:0	6	->
water	13:36	0:0	6	codec
op	13:41	0:0	6	->
water	13:43	0:0	6	codec_type
op	13:54	0:0	6	==
water	13:57	0:0	6	AVMEDIA_TYPE_AUDIO
op	14:16	0:0	6	||
water	14:19	0:0	6	ifmt_ctx
op	14:27	0:0	6	->
water	14:29	0:0	6	streams
op	14:36	0:0	6	[
water	14:37	0:0	6	i
op	14:38	0:0	6	]
op	14:39	0:0	6	->
water	14:41	0:0	6	codec
op	14:46	0:0	6	->
water	14:48	0:0	6	codec_type
op	14:59	0:0	6	==
water	14:62	0:0	6	AVMEDIA_TYPE_VIDEO
water	14:80	0:0	6	)
stmts	15:12	15:20	5	
continue	15:12	15:20	6	
if	16:8	17:32	4	(ifmt_ctx -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_VIDEO)
cond	16:12	16:55	5	ifmt_ctx -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_VIDEO
water	16:12	0:0	6	ifmt_ctx
op	16:20	0:0	6	->
water	16:22	0:0	6	streams
op	16:29	0:0	6	[
water	16:30	0:0	6	i
op	16:31	0:0	6	]
op	16:32	0:0	6	->
water	16:34	0:0	6	codec
op	16:39	0:0	6	->
water	16:41	0:0	6	codec_type
op	16:52	0:0	6	==
water	16:55	0:0	6	AVMEDIA_TYPE_VIDEO
stmts	17:12	17:32	5	
water	17:12	0:0	6	filter_spec
op	17:24	0:0	6	=
water	17:26	0:0	6	"null"
water	17:32	0:0	6	;
else	18:8	19:33	4
stmts	19:12	19:33	5	
water	19:12	0:0	6	filter_spec
op	19:24	0:0	6	=
water	19:26	0:0	6	"anull"
water	19:33	0:0	6	;
water	20:8	0:0	4	ret
op	20:12	0:0	4	=
call	20:14	21:56	4	init_filter
arg	20:26	20:40	5	&filter_ctx[i]
op	20:26	0:0	6	&
water	20:27	0:0	6	filter_ctx
op	20:37	0:0	6	[
water	20:38	0:0	6	i
op	20:39	0:0	6	]
arg	20:42	20:69	5	ifmt_ctx->streams[i]->codec
water	20:42	0:0	6	ifmt_ctx
op	20:50	0:0	6	->
water	20:52	0:0	6	streams
op	20:59	0:0	6	[
water	20:60	0:0	6	i
op	20:61	0:0	6	]
op	20:62	0:0	6	->
water	20:64	0:0	6	codec
arg	21:16	21:43	5	ofmt_ctx->streams[i]->codec
water	21:16	0:0	6	ofmt_ctx
op	21:24	0:0	6	->
water	21:26	0:0	6	streams
op	21:33	0:0	6	[
water	21:34	0:0	6	i
op	21:35	0:0	6	]
op	21:36	0:0	6	->
water	21:38	0:0	6	codec
arg	21:45	21:56	5	filter_spec
water	21:45	0:0	6	filter_spec
water	21:57	0:0	4	;
if	22:8	23:22	4	(ret)
cond	22:12	22:12	5	ret
water	22:12	0:0	6	ret
stmts	23:12	23:22	5	
return	23:12	23:22	6	ret
water	23:19	0:0	7	ret
water	24:4	0:0	4	}
return	25:4	25:12	2	0
water	25:11	0:0	3	0

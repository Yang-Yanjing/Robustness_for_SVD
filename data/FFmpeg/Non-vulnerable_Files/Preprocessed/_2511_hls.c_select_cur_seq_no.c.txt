func	1:0	33:0	0	static int	select_cur_seq_no
params	1:28	0:0	1	
param	1:29	1:42	2	HLSContext *	c
param	1:44	1:64	2	struct playlist *	pls
stmnts	0:0	32:28	1	
decl	3:4	3:14	2	int	seq_no
if	4:4	7:46	2	(! pls -> finished && ! c -> first_packet &&av_gettime_relative ( ) - pls -> last_load_time >=default_reload_interval (pls ))
cond	4:8	5:82	3	! pls -> finished && ! c -> first_packet &&av_gettime_relative ( ) - pls -> last_load_time >=default_reload_interval (pls )
op	4:8	0:0	4	!
water	4:9	0:0	4	pls
op	4:12	0:0	4	->
water	4:14	0:0	4	finished
op	4:23	0:0	4	&&
op	4:26	0:0	4	!
water	4:27	0:0	4	c
op	4:28	0:0	4	->
water	4:30	0:0	4	first_packet
op	4:43	0:0	4	&&
call	5:8	5:28	4	av_gettime_relative
op	5:30	0:0	4	-
water	5:32	0:0	4	pls
op	5:35	0:0	4	->
water	5:37	0:0	4	last_load_time
op	5:52	0:0	4	>=
call	5:55	5:82	4	default_reload_interval
arg	5:79	5:82	5	pls
water	5:79	0:0	6	pls
stmts	7:8	7:46	3	
call	7:8	7:45	4	parse_playlist
arg	7:23	7:24	5	c
water	7:23	0:0	6	c
arg	7:26	7:34	5	pls->url
water	7:26	0:0	6	pls
op	7:29	0:0	6	->
water	7:31	0:0	6	url
arg	7:36	7:39	5	pls
water	7:36	0:0	6	pls
arg	7:41	7:45	5	NULL
water	7:41	0:0	6	NULL
water	7:46	0:0	4	;
if	11:4	14:4	2	(pls -> finished && c -> cur_timestamp != AV_NOPTS_VALUE)
cond	11:8	11:45	3	pls -> finished && c -> cur_timestamp != AV_NOPTS_VALUE
water	11:8	0:0	4	pls
op	11:11	0:0	4	->
water	11:13	0:0	4	finished
op	11:22	0:0	4	&&
water	11:25	0:0	4	c
op	11:26	0:0	4	->
water	11:28	0:0	4	cur_timestamp
op	11:42	0:0	4	!=
water	11:45	0:0	4	AV_NOPTS_VALUE
stmts	11:61	14:4	3	
water	11:61	0:0	4	{
call	12:8	12:68	4	find_timestamp_in_playlist
arg	12:35	12:36	5	c
water	12:35	0:0	6	c
arg	12:38	12:41	5	pls
water	12:38	0:0	6	pls
arg	12:43	12:59	5	c->cur_timestamp
water	12:43	0:0	6	c
op	12:44	0:0	6	->
water	12:46	0:0	6	cur_timestamp
arg	12:61	12:68	5	&seq_no
op	12:61	0:0	6	&
water	12:62	0:0	6	seq_no
water	12:69	0:0	4	;
return	13:8	13:21	4	seq_no
water	13:15	0:0	5	seq_no
water	14:4	0:0	4	}
if	15:4	30:4	2	(! pls -> finished)
cond	15:8	15:14	3	! pls -> finished
op	15:8	0:0	4	!
water	15:9	0:0	4	pls
op	15:12	0:0	4	->
water	15:14	0:0	4	finished
stmts	15:24	30:4	3	
water	15:24	0:0	4	{
if	16:8	23:32	4	(! c -> first_packet && c -> cur_seq_no >= pls -> start_seq_no && c -> cur_seq_no < pls -> start_seq_no + pls -> n_segments)
cond	16:12	18:53	5	! c -> first_packet && c -> cur_seq_no >= pls -> start_seq_no && c -> cur_seq_no < pls -> start_seq_no + pls -> n_segments
op	16:12	0:0	6	!
water	16:13	0:0	6	c
op	16:14	0:0	6	->
water	16:16	0:0	6	first_packet
op	16:29	0:0	6	&&
water	17:12	0:0	6	c
op	17:13	0:0	6	->
water	17:15	0:0	6	cur_seq_no
op	17:26	0:0	6	>=
water	17:29	0:0	6	pls
op	17:32	0:0	6	->
water	17:34	0:0	6	start_seq_no
op	17:47	0:0	6	&&
water	18:12	0:0	6	c
op	18:13	0:0	6	->
water	18:15	0:0	6	cur_seq_no
op	18:26	0:0	6	<
water	18:28	0:0	6	pls
op	18:31	0:0	6	->
water	18:33	0:0	6	start_seq_no
op	18:46	0:0	6	+
water	18:48	0:0	6	pls
op	18:51	0:0	6	->
water	18:53	0:0	6	n_segments
stmts	23:12	23:32	5	
return	23:12	23:32	6	c->cur_seq_no
water	23:19	0:0	7	c
op	23:20	0:0	7	->
water	23:22	0:0	7	cur_seq_no
if	26:8	27:86	4	(c -> live_start_index < 0)
cond	26:12	26:34	5	c -> live_start_index < 0
water	26:12	0:0	6	c
op	26:13	0:0	6	->
water	26:15	0:0	6	live_start_index
op	26:32	0:0	6	<
water	26:34	0:0	6	0
stmts	27:12	27:86	5	
return	27:12	27:86	6	pls->start_seq_no+FFMAX(pls->n_segments+c->live_start_index,0)
water	27:19	0:0	7	pls
op	27:22	0:0	7	->
water	27:24	0:0	7	start_seq_no
op	27:37	0:0	7	+
call	27:39	27:85	7	FFMAX
arg	27:45	27:82	8	pls->n_segments+c->live_start_index
water	27:45	0:0	9	pls
op	27:48	0:0	9	->
water	27:50	0:0	9	n_segments
op	27:61	0:0	9	+
water	27:63	0:0	9	c
op	27:64	0:0	9	->
water	27:66	0:0	9	live_start_index
arg	27:84	27:85	8	0
water	27:84	0:0	9	0
else	28:8	29:86	4
stmts	29:12	29:86	5	
return	29:12	29:86	6	pls->start_seq_no+FFMIN(c->live_start_index,pls->n_segments-1)
water	29:19	0:0	7	pls
op	29:22	0:0	7	->
water	29:24	0:0	7	start_seq_no
op	29:37	0:0	7	+
call	29:39	29:85	7	FFMIN
arg	29:45	29:64	8	c->live_start_index
water	29:45	0:0	9	c
op	29:46	0:0	9	->
water	29:48	0:0	9	live_start_index
arg	29:66	29:85	8	pls->n_segments-1
water	29:66	0:0	9	pls
op	29:69	0:0	9	->
water	29:71	0:0	9	n_segments
op	29:82	0:0	9	-
water	29:84	0:0	9	1
water	30:4	0:0	4	}
return	32:4	32:28	2	pls->start_seq_no
water	32:11	0:0	3	pls
op	32:14	0:0	3	->
water	32:16	0:0	3	start_seq_no

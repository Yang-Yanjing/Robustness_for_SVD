func	1:0	78:0	0	static int	ffserver_parse_config_global
params	1:39	0:0	1	
param	1:40	1:62	2	FFServerConfig *	config
param	1:64	1:79	2	const char *	cmd
param	2:40	2:54	2	const char * *	p
stmnts	0:0	77:12	1	
decl	4:4	4:11	2	int	val
decl	5:4	5:18	2	char	arg[1024]
if	6:4	15:4	2	(!av_strcasecmp (cmd ,"Port" ) || !av_strcasecmp (cmd ,"HTTPPort" ))
cond	6:8	6:69	3	!av_strcasecmp (cmd ,"Port" ) || !av_strcasecmp (cmd ,"HTTPPort" )
op	6:8	0:0	4	!
call	6:9	6:34	4	av_strcasecmp
arg	6:23	6:26	5	cmd
water	6:23	0:0	6	cmd
arg	6:28	6:34	5	"Port"
water	6:28	0:0	6	"Port"
op	6:36	0:0	4	||
op	6:39	0:0	4	!
call	6:40	6:69	4	av_strcasecmp
arg	6:54	6:57	5	cmd
water	6:54	0:0	6	cmd
arg	6:59	6:69	5	"HTTPPort"
water	6:59	0:0	6	"HTTPPort"
stmts	6:72	15:4	3	
water	6:72	0:0	4	{
if	7:8	8:73	4	(!av_strcasecmp (cmd ,"Port" ))
cond	7:12	7:38	5	!av_strcasecmp (cmd ,"Port" )
op	7:12	0:0	6	!
call	7:13	7:38	6	av_strcasecmp
arg	7:27	7:30	7	cmd
water	7:27	0:0	8	cmd
arg	7:32	7:38	7	"Port"
water	7:32	0:0	8	"Port"
stmts	8:12	8:73	5	
call	8:12	8:72	6	WARNING
arg	8:20	8:72	7	"Port option is deprecated. Use HTTPPort instead.\n"
water	8:20	0:0	8	"Port option is deprecated. Use HTTPPort instead.\n"
water	8:73	0:0	6	;
call	9:8	9:44	4	ffserver_get_arg
arg	9:25	9:28	5	arg
water	9:25	0:0	6	arg
arg	9:30	9:41	5	sizeof(arg)
op	9:30	0:0	6	sizeof
water	9:36	0:0	6	(
water	9:37	0:0	6	arg
water	9:40	0:0	6	)
arg	9:43	9:44	5	p
water	9:43	0:0	6	p
water	9:45	0:0	4	;
call	10:8	11:41	4	ffserver_set_int_param
arg	10:31	10:35	5	&val
op	10:31	0:0	6	&
water	10:32	0:0	6	val
arg	10:37	10:40	5	arg
water	10:37	0:0	6	arg
arg	10:42	10:43	5	0
water	10:42	0:0	6	0
arg	10:45	10:46	5	1
water	10:45	0:0	6	1
arg	10:48	10:53	5	65535
water	10:48	0:0	6	65535
arg	10:55	10:61	5	config
water	10:55	0:0	6	config
arg	11:16	11:36	5	"Invalid port: %s\n"
water	11:16	0:0	6	"Invalid port: %s\n"
arg	11:38	11:41	5	arg
water	11:38	0:0	6	arg
water	11:42	0:0	4	;
if	12:8	13:75	4	(val < 1024)
cond	12:12	12:18	5	val < 1024
water	12:12	0:0	6	val
op	12:16	0:0	6	<
water	12:18	0:0	6	1024
stmts	13:12	13:75	5	
call	13:12	13:74	6	WARNING
arg	13:20	13:69	7	"Trying to use IETF assigned system port: '%d'\n"
water	13:20	0:0	8	"Trying to use IETF assigned system port: '%d'\n"
arg	13:71	13:74	7	val
water	13:71	0:0	8	val
water	13:75	0:0	6	;
water	14:8	0:0	4	config
op	14:14	0:0	4	->
water	14:16	0:0	4	http_addr
op	14:25	0:0	4	.
water	14:26	0:0	4	sin_port
op	14:35	0:0	4	=
call	14:37	14:46	4	htons
arg	14:43	14:46	5	val
water	14:43	0:0	6	val
water	14:47	0:0	4	;
water	15:4	0:0	4	}
else	15:6	23:4	2
stmts	15:11	23:4	3	
if	15:11	23:4	4	(!av_strcasecmp (cmd ,"HTTPBindAddress" ) || !av_strcasecmp (cmd ,"BindAddress" ))
cond	15:15	16:48	5	!av_strcasecmp (cmd ,"HTTPBindAddress" ) || !av_strcasecmp (cmd ,"BindAddress" )
op	15:15	0:0	6	!
call	15:16	15:52	6	av_strcasecmp
arg	15:30	15:33	7	cmd
water	15:30	0:0	8	cmd
arg	15:35	15:52	7	"HTTPBindAddress"
water	15:35	0:0	8	"HTTPBindAddress"
op	15:54	0:0	6	||
op	16:15	0:0	6	!
call	16:16	16:48	6	av_strcasecmp
arg	16:30	16:33	7	cmd
water	16:30	0:0	8	cmd
arg	16:35	16:48	7	"BindAddress"
water	16:35	0:0	8	"BindAddress"
stmts	16:51	23:4	5	
water	16:51	0:0	6	{
if	17:8	19:33	6	(!av_strcasecmp (cmd ,"BindAddress" ))
cond	17:12	17:45	7	!av_strcasecmp (cmd ,"BindAddress" )
op	17:12	0:0	8	!
call	17:13	17:45	8	av_strcasecmp
arg	17:27	17:30	9	cmd
water	17:27	0:0	10	cmd
arg	17:32	17:45	9	"BindAddress"
water	17:32	0:0	10	"BindAddress"
stmts	18:12	19:33	7	
call	18:12	19:32	8	WARNING
arg	18:20	19:32	9	"BindAddress option is deprecated. Use HTTPBindAddress ""instead.\n"
water	18:20	0:0	10	"BindAddress option is deprecated. Use HTTPBindAddress "
water	19:20	0:0	10	"instead.\n"
water	19:33	0:0	8	;
call	20:8	20:44	6	ffserver_get_arg
arg	20:25	20:28	7	arg
water	20:25	0:0	8	arg
arg	20:30	20:41	7	sizeof(arg)
op	20:30	0:0	8	sizeof
water	20:36	0:0	8	(
water	20:37	0:0	8	arg
water	20:40	0:0	8	)
arg	20:43	20:44	7	p
water	20:43	0:0	8	p
water	20:45	0:0	6	;
if	21:8	22:57	6	(resolve_host (& config -> http_addr . sin_addr ,arg ))
cond	21:12	21:57	7	resolve_host (& config -> http_addr . sin_addr ,arg )
call	21:12	21:57	8	resolve_host
arg	21:25	21:52	9	&config->http_addr.sin_addr
op	21:25	0:0	10	&
water	21:26	0:0	10	config
op	21:32	0:0	10	->
water	21:34	0:0	10	http_addr
op	21:43	0:0	10	.
water	21:44	0:0	10	sin_addr
arg	21:54	21:57	9	arg
water	21:54	0:0	10	arg
stmts	22:12	22:57	7	
call	22:12	22:56	8	ERROR
arg	22:18	22:51	9	"Invalid host/IP address: '%s'\n"
water	22:18	0:0	10	"Invalid host/IP address: '%s'\n"
arg	22:53	22:56	9	arg
water	22:53	0:0	10	arg
water	22:57	0:0	8	;
water	23:4	0:0	6	}
else	23:6	25:4	2
stmts	23:11	25:4	3	
if	23:11	25:4	4	(!av_strcasecmp (cmd ,"NoDaemon" ))
cond	23:15	23:45	5	!av_strcasecmp (cmd ,"NoDaemon" )
op	23:15	0:0	6	!
call	23:16	23:45	6	av_strcasecmp
arg	23:30	23:33	7	cmd
water	23:30	0:0	8	cmd
arg	23:35	23:45	7	"NoDaemon"
water	23:35	0:0	8	"NoDaemon"
stmts	23:48	25:4	5	
water	23:48	0:0	6	{
call	24:8	24:72	6	WARNING
arg	24:16	24:72	7	"NoDaemon option has no effect. You should remove it.\n"
water	24:16	0:0	8	"NoDaemon option has no effect. You should remove it.\n"
water	24:73	0:0	6	;
water	25:4	0:0	6	}
else	25:6	30:4	2
stmts	25:11	30:4	3	
if	25:11	30:4	4	(!av_strcasecmp (cmd ,"RTSPPort" ))
cond	25:15	25:45	5	!av_strcasecmp (cmd ,"RTSPPort" )
op	25:15	0:0	6	!
call	25:16	25:45	6	av_strcasecmp
arg	25:30	25:33	7	cmd
water	25:30	0:0	8	cmd
arg	25:35	25:45	7	"RTSPPort"
water	25:35	0:0	8	"RTSPPort"
stmts	25:48	30:4	5	
water	25:48	0:0	6	{
call	26:8	26:44	6	ffserver_get_arg
arg	26:25	26:28	7	arg
water	26:25	0:0	8	arg
arg	26:30	26:41	7	sizeof(arg)
op	26:30	0:0	8	sizeof
water	26:36	0:0	8	(
water	26:37	0:0	8	arg
water	26:40	0:0	8	)
arg	26:43	26:44	7	p
water	26:43	0:0	8	p
water	26:45	0:0	6	;
call	27:8	28:41	6	ffserver_set_int_param
arg	27:31	27:35	7	&val
op	27:31	0:0	8	&
water	27:32	0:0	8	val
arg	27:37	27:40	7	arg
water	27:37	0:0	8	arg
arg	27:42	27:43	7	0
water	27:42	0:0	8	0
arg	27:45	27:46	7	1
water	27:45	0:0	8	1
arg	27:48	27:53	7	65535
water	27:48	0:0	8	65535
arg	27:55	27:61	7	config
water	27:55	0:0	8	config
arg	28:16	28:36	7	"Invalid port: %s\n"
water	28:16	0:0	8	"Invalid port: %s\n"
arg	28:38	28:41	7	arg
water	28:38	0:0	8	arg
water	28:42	0:0	6	;
water	29:8	0:0	6	config
op	29:14	0:0	6	->
water	29:16	0:0	6	rtsp_addr
op	29:25	0:0	6	.
water	29:26	0:0	6	sin_port
op	29:35	0:0	6	=
call	29:37	29:46	6	htons
arg	29:43	29:46	7	val
water	29:43	0:0	8	val
water	29:47	0:0	6	;
water	30:4	0:0	6	}
else	30:6	34:4	2
stmts	30:11	34:4	3	
if	30:11	34:4	4	(!av_strcasecmp (cmd ,"RTSPBindAddress" ))
cond	30:15	30:52	5	!av_strcasecmp (cmd ,"RTSPBindAddress" )
op	30:15	0:0	6	!
call	30:16	30:52	6	av_strcasecmp
arg	30:30	30:33	7	cmd
water	30:30	0:0	8	cmd
arg	30:35	30:52	7	"RTSPBindAddress"
water	30:35	0:0	8	"RTSPBindAddress"
stmts	30:55	34:4	5	
water	30:55	0:0	6	{
call	31:8	31:44	6	ffserver_get_arg
arg	31:25	31:28	7	arg
water	31:25	0:0	8	arg
arg	31:30	31:41	7	sizeof(arg)
op	31:30	0:0	8	sizeof
water	31:36	0:0	8	(
water	31:37	0:0	8	arg
water	31:40	0:0	8	)
arg	31:43	31:44	7	p
water	31:43	0:0	8	p
water	31:45	0:0	6	;
if	32:8	33:55	6	(resolve_host (& config -> rtsp_addr . sin_addr ,arg ))
cond	32:12	32:57	7	resolve_host (& config -> rtsp_addr . sin_addr ,arg )
call	32:12	32:57	8	resolve_host
arg	32:25	32:52	9	&config->rtsp_addr.sin_addr
op	32:25	0:0	10	&
water	32:26	0:0	10	config
op	32:32	0:0	10	->
water	32:34	0:0	10	rtsp_addr
op	32:43	0:0	10	.
water	32:44	0:0	10	sin_addr
arg	32:54	32:57	9	arg
water	32:54	0:0	10	arg
stmts	33:12	33:55	7	
call	33:12	33:54	8	ERROR
arg	33:18	33:49	9	"Invalid host/IP address: %s\n"
water	33:18	0:0	10	"Invalid host/IP address: %s\n"
arg	33:51	33:54	9	arg
water	33:51	0:0	10	arg
water	33:55	0:0	8	;
water	34:4	0:0	6	}
else	34:6	44:4	2
stmts	34:11	44:4	3	
if	34:11	44:4	4	(!av_strcasecmp (cmd ,"MaxHTTPConnections" ))
cond	34:15	34:55	5	!av_strcasecmp (cmd ,"MaxHTTPConnections" )
op	34:15	0:0	6	!
call	34:16	34:55	6	av_strcasecmp
arg	34:30	34:33	7	cmd
water	34:30	0:0	8	cmd
arg	34:35	34:55	7	"MaxHTTPConnections"
water	34:35	0:0	8	"MaxHTTPConnections"
stmts	34:58	44:4	5	
water	34:58	0:0	6	{
call	35:8	35:44	6	ffserver_get_arg
arg	35:25	35:28	7	arg
water	35:25	0:0	8	arg
arg	35:30	35:41	7	sizeof(arg)
op	35:30	0:0	8	sizeof
water	35:36	0:0	8	(
water	35:37	0:0	8	arg
water	35:40	0:0	8	)
arg	35:43	35:44	7	p
water	35:43	0:0	8	p
water	35:45	0:0	6	;
call	36:8	37:55	6	ffserver_set_int_param
arg	36:31	36:35	7	&val
op	36:31	0:0	8	&
water	36:32	0:0	8	val
arg	36:37	36:40	7	arg
water	36:37	0:0	8	arg
arg	36:42	36:43	7	0
water	36:42	0:0	8	0
arg	36:45	36:46	7	1
water	36:45	0:0	8	1
arg	36:48	36:53	7	65535
water	36:48	0:0	8	65535
arg	36:55	36:61	7	config
water	36:55	0:0	8	config
arg	37:16	37:50	7	"Invalid MaxHTTPConnections: %s\n"
water	37:16	0:0	8	"Invalid MaxHTTPConnections: %s\n"
arg	37:52	37:55	7	arg
water	37:52	0:0	8	arg
water	37:56	0:0	6	;
water	38:8	0:0	6	config
op	38:14	0:0	6	->
water	38:16	0:0	6	nb_max_http_connections
op	38:40	0:0	6	=
water	38:42	0:0	6	val
water	38:45	0:0	6	;
if	39:8	43:8	6	(config -> nb_max_connections > config -> nb_max_http_connections)
cond	39:12	39:49	7	config -> nb_max_connections > config -> nb_max_http_connections
water	39:12	0:0	8	config
op	39:18	0:0	8	->
water	39:20	0:0	8	nb_max_connections
op	39:39	0:0	8	>
water	39:41	0:0	8	config
op	39:47	0:0	8	->
water	39:49	0:0	8	nb_max_http_connections
stmts	39:74	43:8	7	
water	39:74	0:0	8	{
call	40:12	42:49	8	ERROR
arg	40:18	41:44	9	"Inconsistent configuration: MaxClients(%d) > ""MaxHTTPConnections(%d)\n"
water	40:18	0:0	10	"Inconsistent configuration: MaxClients(%d) > "
water	41:18	0:0	10	"MaxHTTPConnections(%d)\n"
arg	41:46	41:72	9	config->nb_max_connections
water	41:46	0:0	10	config
op	41:52	0:0	10	->
water	41:54	0:0	10	nb_max_connections
arg	42:18	42:49	9	config->nb_max_http_connections
water	42:18	0:0	10	config
op	42:24	0:0	10	->
water	42:26	0:0	10	nb_max_http_connections
water	42:50	0:0	8	;
water	43:8	0:0	8	}
water	44:4	0:0	6	}
else	44:6	54:4	2
stmts	44:11	54:4	3	
if	44:11	54:4	4	(!av_strcasecmp (cmd ,"MaxClients" ))
cond	44:15	44:47	5	!av_strcasecmp (cmd ,"MaxClients" )
op	44:15	0:0	6	!
call	44:16	44:47	6	av_strcasecmp
arg	44:30	44:33	7	cmd
water	44:30	0:0	8	cmd
arg	44:35	44:47	7	"MaxClients"
water	44:35	0:0	8	"MaxClients"
stmts	44:50	54:4	5	
water	44:50	0:0	6	{
call	45:8	45:44	6	ffserver_get_arg
arg	45:25	45:28	7	arg
water	45:25	0:0	8	arg
arg	45:30	45:41	7	sizeof(arg)
op	45:30	0:0	8	sizeof
water	45:36	0:0	8	(
water	45:37	0:0	8	arg
water	45:40	0:0	8	)
arg	45:43	45:44	7	p
water	45:43	0:0	8	p
water	45:45	0:0	6	;
call	46:8	47:49	6	ffserver_set_int_param
arg	46:31	46:35	7	&val
op	46:31	0:0	8	&
water	46:32	0:0	8	val
arg	46:37	46:40	7	arg
water	46:37	0:0	8	arg
arg	46:42	46:43	7	0
water	46:42	0:0	8	0
arg	46:45	46:46	7	1
water	46:45	0:0	8	1
arg	46:48	46:53	7	65535
water	46:48	0:0	8	65535
arg	46:55	46:61	7	config
water	46:55	0:0	8	config
arg	47:16	47:44	7	"Invalid MaxClients: '%s'\n"
water	47:16	0:0	8	"Invalid MaxClients: '%s'\n"
arg	47:46	47:49	7	arg
water	47:46	0:0	8	arg
water	47:50	0:0	6	;
water	48:8	0:0	6	config
op	48:14	0:0	6	->
water	48:16	0:0	6	nb_max_connections
op	48:35	0:0	6	=
water	48:37	0:0	6	val
water	48:40	0:0	6	;
if	49:8	53:8	6	(config -> nb_max_connections > config -> nb_max_http_connections)
cond	49:12	49:49	7	config -> nb_max_connections > config -> nb_max_http_connections
water	49:12	0:0	8	config
op	49:18	0:0	8	->
water	49:20	0:0	8	nb_max_connections
op	49:39	0:0	8	>
water	49:41	0:0	8	config
op	49:47	0:0	8	->
water	49:49	0:0	8	nb_max_http_connections
stmts	49:74	53:8	7	
water	49:74	0:0	8	{
call	50:12	52:49	8	ERROR
arg	50:18	51:44	9	"Inconsistent configuration: MaxClients(%d) > ""MaxHTTPConnections(%d)\n"
water	50:18	0:0	10	"Inconsistent configuration: MaxClients(%d) > "
water	51:18	0:0	10	"MaxHTTPConnections(%d)\n"
arg	51:46	51:72	9	config->nb_max_connections
water	51:46	0:0	10	config
op	51:52	0:0	10	->
water	51:54	0:0	10	nb_max_connections
arg	52:18	52:49	9	config->nb_max_http_connections
water	52:18	0:0	10	config
op	52:24	0:0	10	->
water	52:26	0:0	10	nb_max_http_connections
water	52:50	0:0	8	;
water	53:8	0:0	8	}
water	54:4	0:0	6	}
else	54:6	64:4	2
stmts	54:11	64:4	3	
if	54:11	64:4	4	(!av_strcasecmp (cmd ,"MaxBandwidth" ))
cond	54:15	54:49	5	!av_strcasecmp (cmd ,"MaxBandwidth" )
op	54:15	0:0	6	!
call	54:16	54:49	6	av_strcasecmp
arg	54:30	54:33	7	cmd
water	54:30	0:0	8	cmd
arg	54:35	54:49	7	"MaxBandwidth"
water	54:35	0:0	8	"MaxBandwidth"
stmts	54:52	64:4	5	
water	54:52	0:0	6	{
decl	55:8	55:21	6	int64_t	llval
decl	56:8	56:19	6	char	*tailp
call	57:8	57:44	6	ffserver_get_arg
arg	57:25	57:28	7	arg
water	57:25	0:0	8	arg
arg	57:30	57:41	7	sizeof(arg)
op	57:30	0:0	8	sizeof
water	57:36	0:0	8	(
water	57:37	0:0	8	arg
water	57:40	0:0	8	)
arg	57:43	57:44	7	p
water	57:43	0:0	8	p
water	57:45	0:0	6	;
water	58:8	0:0	6	errno
op	58:14	0:0	6	=
water	58:16	0:0	6	0
water	58:17	0:0	6	;
water	59:8	0:0	6	llval
op	59:14	0:0	6	=
call	59:16	59:39	6	strtoll
arg	59:24	59:27	7	arg
water	59:24	0:0	8	arg
arg	59:29	59:35	7	&tailp
op	59:29	0:0	8	&
water	59:30	0:0	8	tailp
arg	59:37	59:39	7	10
water	59:37	0:0	8	10
water	59:40	0:0	6	;
if	60:8	61:54	6	(llval < 10 || llval > 10000000 || tailp [ 0 ] || errno)
cond	60:12	60:58	7	llval < 10 || llval > 10000000 || tailp [ 0 ] || errno
water	60:12	0:0	8	llval
op	60:18	0:0	8	<
water	60:20	0:0	8	10
op	60:23	0:0	8	||
water	60:26	0:0	8	llval
op	60:32	0:0	8	>
water	60:34	0:0	8	10000000
op	60:43	0:0	8	||
water	60:46	0:0	8	tailp
op	60:51	0:0	8	[
water	60:52	0:0	8	0
op	60:53	0:0	8	]
op	60:55	0:0	8	||
water	60:58	0:0	8	errno
stmts	61:12	61:54	7	
call	61:12	61:53	8	ERROR
arg	61:18	61:48	9	"Invalid MaxBandwidth: '%s'\n"
water	61:18	0:0	10	"Invalid MaxBandwidth: '%s'\n"
arg	61:50	61:53	9	arg
water	61:50	0:0	10	arg
water	61:54	0:0	8	;
else	62:8	63:41	6
stmts	63:12	63:41	7	
water	63:12	0:0	8	config
op	63:18	0:0	8	->
water	63:20	0:0	8	max_bandwidth
op	63:34	0:0	8	=
water	63:36	0:0	8	llval
water	63:41	0:0	8	;
water	64:4	0:0	6	}
else	64:6	69:4	2
stmts	64:11	69:4	3	
if	64:11	69:4	4	(!av_strcasecmp (cmd ,"CustomLog" ))
cond	64:15	64:46	5	!av_strcasecmp (cmd ,"CustomLog" )
op	64:15	0:0	6	!
call	64:16	64:46	6	av_strcasecmp
arg	64:30	64:33	7	cmd
water	64:30	0:0	8	cmd
arg	64:35	64:46	7	"CustomLog"
water	64:35	0:0	8	"CustomLog"
stmts	64:49	69:4	5	
water	64:49	0:0	6	{
if	65:8	68:8	6	(! config -> debug)
cond	65:12	65:21	7	! config -> debug
op	65:12	0:0	8	!
water	65:13	0:0	8	config
op	65:19	0:0	8	->
water	65:21	0:0	8	debug
stmts	65:28	68:8	7	
water	65:28	0:0	8	{
call	66:12	67:30	8	ffserver_get_arg
arg	66:29	66:48	9	config->logfilename
water	66:29	0:0	10	config
op	66:35	0:0	10	->
water	66:37	0:0	10	logfilename
arg	66:50	66:77	9	sizeof(config->logfilename)
op	66:50	0:0	10	sizeof
water	66:56	0:0	10	(
water	66:57	0:0	10	config
op	66:63	0:0	10	->
water	66:65	0:0	10	logfilename
water	66:76	0:0	10	)
arg	67:29	67:30	9	p
water	67:29	0:0	10	p
water	67:31	0:0	8	;
water	68:8	0:0	8	}
water	69:4	0:0	6	}
else	69:6	71:4	2
stmts	69:11	71:4	3	
if	69:11	71:4	4	(!av_strcasecmp (cmd ,"LoadModule" ))
cond	69:15	69:47	5	!av_strcasecmp (cmd ,"LoadModule" )
op	69:15	0:0	6	!
call	69:16	69:47	6	av_strcasecmp
arg	69:30	69:33	7	cmd
water	69:30	0:0	8	cmd
arg	69:35	69:47	7	"LoadModule"
water	69:35	0:0	8	"LoadModule"
stmts	69:50	71:4	5	
water	69:50	0:0	6	{
call	70:8	70:58	6	ERROR
arg	70:14	70:58	7	"Loadable modules are no longer supported\n"
water	70:14	0:0	8	"Loadable modules are no longer supported\n"
water	70:59	0:0	6	;
water	71:4	0:0	6	}
else	71:6	73:4	2
stmts	71:11	73:4	3	
if	71:11	73:4	4	(!av_strcasecmp (cmd ,"NoDefaults" ))
cond	71:15	71:47	5	!av_strcasecmp (cmd ,"NoDefaults" )
op	71:15	0:0	6	!
call	71:16	71:47	6	av_strcasecmp
arg	71:30	71:33	7	cmd
water	71:30	0:0	8	cmd
arg	71:35	71:47	7	"NoDefaults"
water	71:35	0:0	8	"NoDefaults"
stmts	71:50	73:4	5	
water	71:50	0:0	6	{
water	72:8	0:0	6	config
op	72:14	0:0	6	->
water	72:16	0:0	6	use_defaults
op	72:29	0:0	6	=
water	72:31	0:0	6	0
water	72:32	0:0	6	;
water	73:4	0:0	6	}
else	73:6	75:4	2
stmts	73:11	75:4	3	
if	73:11	75:4	4	(!av_strcasecmp (cmd ,"UseDefaults" ))
cond	73:15	73:48	5	!av_strcasecmp (cmd ,"UseDefaults" )
op	73:15	0:0	6	!
call	73:16	73:48	6	av_strcasecmp
arg	73:30	73:33	7	cmd
water	73:30	0:0	8	cmd
arg	73:35	73:48	7	"UseDefaults"
water	73:35	0:0	8	"UseDefaults"
stmts	73:51	75:4	5	
water	73:51	0:0	6	{
water	74:8	0:0	6	config
op	74:14	0:0	6	->
water	74:16	0:0	6	use_defaults
op	74:29	0:0	6	=
water	74:31	0:0	6	1
water	74:32	0:0	6	;
water	75:4	0:0	6	}
else	75:6	76:47	2
stmts	76:8	76:47	3	
call	76:8	76:46	4	ERROR
arg	76:14	76:41	5	"Incorrect keyword: '%s'\n"
water	76:14	0:0	6	"Incorrect keyword: '%s'\n"
arg	76:43	76:46	5	cmd
water	76:43	0:0	6	cmd
water	76:47	0:0	4	;
return	77:4	77:12	2	0
water	77:11	0:0	3	0

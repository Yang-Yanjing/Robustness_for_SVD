func	1:0	37:0	0	static void	output_frame_end
params	1:28	0:0	1	
param	1:29	1:48	2	AC3EncodeContext *	s
stmnts	0:0	36:44	1	
decl	3:4	3:59	2	const AVCRC	*crc_ctx
op	3:25	0:0	2	=
call	3:27	3:58	3	av_crc_get_table
arg	3:44	3:58	4	AV_CRC_16_ANSI
water	3:44	0:0	5	AV_CRC_16_ANSI
decl	4:4	4:67	2	int	frame_size_58
water	4:21	0:0	2	,
decl	4:4	4:67	2	int	pad_bytes
water	4:32	0:0	2	,
decl	4:4	4:67	2	int	crc1
water	4:38	0:0	2	,
decl	4:4	4:67	2	int	crc2_partial
water	4:52	0:0	2	,
decl	4:4	4:67	2	int	crc2
water	4:58	0:0	2	,
decl	4:4	4:67	2	int	crc_inv
decl	5:4	5:18	2	uint8_t	*frame
water	6:4	0:0	2	frame_size_58
op	6:18	0:0	2	=
water	6:20	0:0	2	(
water	6:21	0:0	2	(
water	6:22	0:0	2	s
op	6:23	0:0	2	->
water	6:25	0:0	2	frame_size
op	6:36	0:0	2	>>
water	6:39	0:0	2	2
water	6:40	0:0	2	)
op	6:42	0:0	2	+
water	6:44	0:0	2	(
water	6:45	0:0	2	s
op	6:46	0:0	2	->
water	6:48	0:0	2	frame_size
op	6:59	0:0	2	>>
water	6:62	0:0	2	4
water	6:63	0:0	2	)
water	6:64	0:0	2	)
op	6:66	0:0	2	<<
water	6:69	0:0	2	1
water	6:70	0:0	2	;
call	8:4	8:63	2	av_assert2
arg	8:15	8:63	3	s->frame_size*8-put_bits_count(&s->pb)>=18
water	8:15	0:0	4	s
op	8:16	0:0	4	->
water	8:18	0:0	4	frame_size
op	8:29	0:0	4	*
water	8:31	0:0	4	8
op	8:33	0:0	4	-
call	8:35	8:56	4	put_bits_count
arg	8:50	8:56	5	&s->pb
op	8:50	0:0	6	&
water	8:51	0:0	6	s
op	8:52	0:0	6	->
water	8:54	0:0	6	pb
op	8:58	0:0	4	>=
water	8:61	0:0	4	18
water	8:64	0:0	2	;
call	9:4	9:25	2	flush_put_bits
arg	9:19	9:25	3	&s->pb
op	9:19	0:0	4	&
water	9:20	0:0	4	s
op	9:21	0:0	4	->
water	9:23	0:0	4	pb
water	9:26	0:0	2	;
water	10:4	0:0	2	frame
op	10:10	0:0	2	=
water	10:12	0:0	2	s
op	10:13	0:0	2	->
water	10:15	0:0	2	pb
op	10:17	0:0	2	.
water	10:18	0:0	2	buf
water	10:21	0:0	2	;
water	11:4	0:0	2	pad_bytes
op	11:14	0:0	2	=
water	11:16	0:0	2	s
op	11:17	0:0	2	->
water	11:19	0:0	2	frame_size
op	11:30	0:0	2	-
water	11:32	0:0	2	(
call	11:33	11:52	2	put_bits_ptr
arg	11:46	11:52	3	&s->pb
op	11:46	0:0	4	&
water	11:47	0:0	4	s
op	11:48	0:0	4	->
water	11:50	0:0	4	pb
op	11:54	0:0	2	-
water	11:56	0:0	2	frame
water	11:61	0:0	2	)
op	11:63	0:0	2	-
water	11:65	0:0	2	2
water	11:66	0:0	2	;
call	12:4	12:29	2	av_assert2
arg	12:15	12:29	3	pad_bytes>=0
water	12:15	0:0	4	pad_bytes
op	12:25	0:0	4	>=
water	12:28	0:0	4	0
water	12:30	0:0	2	;
if	13:4	14:50	2	(pad_bytes > 0)
cond	13:8	13:20	3	pad_bytes > 0
water	13:8	0:0	4	pad_bytes
op	13:18	0:0	4	>
water	13:20	0:0	4	0
stmts	14:8	14:50	3	
call	14:8	14:49	4	memset
arg	14:15	14:35	5	put_bits_ptr(&s->pb)
call	14:15	14:34	6	put_bits_ptr
arg	14:28	14:34	7	&s->pb
op	14:28	0:0	8	&
water	14:29	0:0	8	s
op	14:30	0:0	8	->
water	14:32	0:0	8	pb
arg	14:37	14:38	5	0
water	14:37	0:0	6	0
arg	14:40	14:49	5	pad_bytes
water	14:40	0:0	6	pad_bytes
water	14:50	0:0	4	;
if	15:4	18:4	2	(s -> eac3)
cond	15:8	15:11	3	s -> eac3
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	eac3
stmts	15:17	18:4	3	
water	15:17	0:0	4	{
water	17:8	0:0	4	crc2_partial
op	17:21	0:0	4	=
call	17:23	17:70	4	av_crc
arg	17:30	17:37	5	crc_ctx
water	17:30	0:0	6	crc_ctx
arg	17:39	17:40	5	0
water	17:39	0:0	6	0
arg	17:42	17:51	5	frame+2
water	17:42	0:0	6	frame
op	17:48	0:0	6	+
water	17:50	0:0	6	2
arg	17:53	17:70	5	s->frame_size-5
water	17:53	0:0	6	s
op	17:54	0:0	6	->
water	17:56	0:0	6	frame_size
op	17:67	0:0	6	-
water	17:69	0:0	6	5
water	17:71	0:0	4	;
water	18:4	0:0	4	}
else	18:6	28:4	2
stmts	18:11	28:4	3	
water	18:11	0:0	4	{
water	21:4	0:0	4	crc1
op	21:12	0:0	4	=
call	21:14	21:73	4	av_bswap16
arg	21:25	21:73	5	av_crc(crc_ctx,0,frame+4,frame_size_58-4)
call	21:25	21:72	6	av_crc
arg	21:32	21:39	7	crc_ctx
water	21:32	0:0	8	crc_ctx
arg	21:41	21:42	7	0
water	21:41	0:0	8	0
arg	21:44	21:53	7	frame+4
water	21:44	0:0	8	frame
op	21:50	0:0	8	+
water	21:52	0:0	8	4
arg	21:55	21:72	7	frame_size_58-4
water	21:55	0:0	8	frame_size_58
op	21:69	0:0	8	-
water	21:71	0:0	8	4
water	21:74	0:0	4	;
water	22:4	0:0	4	crc_inv
op	22:12	0:0	4	=
water	22:14	0:0	4	s
op	22:15	0:0	4	->
water	22:17	0:0	4	crc_inv
op	22:24	0:0	4	[
water	22:25	0:0	4	s
op	22:26	0:0	4	->
water	22:28	0:0	4	frame_size
op	22:39	0:0	4	>
water	22:41	0:0	4	s
op	22:42	0:0	4	->
water	22:44	0:0	4	frame_size_min
op	22:58	0:0	4	]
water	22:59	0:0	4	;
water	23:4	0:0	4	crc1
op	23:12	0:0	4	=
call	23:14	23:48	4	mul_poly
arg	23:23	23:30	5	crc_inv
water	23:23	0:0	6	crc_inv
arg	23:32	23:36	5	crc1
water	23:32	0:0	6	crc1
arg	23:38	23:48	5	CRC16_POLY
water	23:38	0:0	6	CRC16_POLY
water	23:49	0:0	4	;
call	24:4	24:27	4	AV_WB16
arg	24:12	24:21	5	frame+2
water	24:12	0:0	6	frame
op	24:18	0:0	6	+
water	24:20	0:0	6	2
arg	24:23	24:27	5	crc1
water	24:23	0:0	6	crc1
water	24:28	0:0	4	;
water	26:4	0:0	4	crc2_partial
op	26:17	0:0	4	=
call	26:19	27:59	4	av_crc
arg	26:26	26:33	5	crc_ctx
water	26:26	0:0	6	crc_ctx
arg	26:35	26:36	5	0
water	26:35	0:0	6	0
arg	26:38	26:59	5	frame+frame_size_58
water	26:38	0:0	6	frame
op	26:44	0:0	6	+
water	26:46	0:0	6	frame_size_58
arg	27:26	27:59	5	s->frame_size-frame_size_58-3
water	27:26	0:0	6	s
op	27:27	0:0	6	->
water	27:29	0:0	6	frame_size
op	27:40	0:0	6	-
water	27:42	0:0	6	frame_size_58
op	27:56	0:0	6	-
water	27:58	0:0	6	3
water	27:60	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	crc2
op	29:9	0:0	2	=
call	29:11	29:69	2	av_crc
arg	29:18	29:25	3	crc_ctx
water	29:18	0:0	4	crc_ctx
arg	29:27	29:39	3	crc2_partial
water	29:27	0:0	4	crc2_partial
arg	29:41	29:66	3	frame+s->frame_size-3
water	29:41	0:0	4	frame
op	29:47	0:0	4	+
water	29:49	0:0	4	s
op	29:50	0:0	4	->
water	29:52	0:0	4	frame_size
op	29:63	0:0	4	-
water	29:65	0:0	4	3
arg	29:68	29:69	3	1
water	29:68	0:0	4	1
water	29:70	0:0	2	;
if	31:4	34:4	2	(crc2 == 0 x770B)
cond	31:8	31:17	3	crc2 == 0 x770B
water	31:8	0:0	4	crc2
op	31:13	0:0	4	==
water	31:16	0:0	4	0
water	31:17	0:0	4	x770B
stmts	31:24	34:4	3	
water	31:24	0:0	4	{
water	32:8	0:0	4	frame
op	32:13	0:0	4	[
water	32:14	0:0	4	s
op	32:15	0:0	4	->
water	32:17	0:0	4	frame_size
op	32:28	0:0	4	-
water	32:30	0:0	4	3
op	32:31	0:0	4	]
op	32:33	0:0	4	^=
water	32:36	0:0	4	0
water	32:37	0:0	4	x1
water	32:39	0:0	4	;
water	33:8	0:0	4	crc2
op	33:13	0:0	4	=
call	33:15	33:73	4	av_crc
arg	33:22	33:29	5	crc_ctx
water	33:22	0:0	6	crc_ctx
arg	33:31	33:43	5	crc2_partial
water	33:31	0:0	6	crc2_partial
arg	33:45	33:70	5	frame+s->frame_size-3
water	33:45	0:0	6	frame
op	33:51	0:0	6	+
water	33:53	0:0	6	s
op	33:54	0:0	6	->
water	33:56	0:0	6	frame_size
op	33:67	0:0	6	-
water	33:69	0:0	6	3
arg	33:72	33:73	5	1
water	33:72	0:0	6	1
water	33:74	0:0	4	;
water	34:4	0:0	4	}
water	35:4	0:0	2	crc2
op	35:9	0:0	2	=
call	35:11	35:26	2	av_bswap16
arg	35:22	35:26	3	crc2
water	35:22	0:0	4	crc2
water	35:27	0:0	2	;
call	36:4	36:43	2	AV_WB16
arg	36:12	36:37	3	frame+s->frame_size-2
water	36:12	0:0	4	frame
op	36:18	0:0	4	+
water	36:20	0:0	4	s
op	36:21	0:0	4	->
water	36:23	0:0	4	frame_size
op	36:34	0:0	4	-
water	36:36	0:0	4	2
arg	36:39	36:43	3	crc2
water	36:39	0:0	4	crc2
water	36:44	0:0	2	;

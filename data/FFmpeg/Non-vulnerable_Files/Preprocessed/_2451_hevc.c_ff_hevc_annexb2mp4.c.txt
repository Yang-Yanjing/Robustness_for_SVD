func	1:0	39:0	0	int	ff_hevc_annexb2mp4
params	1:22	0:0	1	
param	1:23	1:38	2	AVIOContext *	pb
param	1:40	1:61	2	const uint8_t *	buf_in
param	2:23	2:31	2	int	size
param	2:33	2:46	2	int	filter_ps
param	2:48	2:61	2	int *	ps_count
stmnts	0:0	38:14	1	
decl	4:4	4:27	2	int	num_ps
op	4:15	0:0	2	=
water	4:17	0:0	2	0
water	4:18	0:0	2	,
decl	4:4	4:27	2	int	ret
op	4:24	0:0	2	=
water	4:26	0:0	2	0
decl	5:4	5:37	2	uint8_t	*buf
water	5:16	0:0	2	,
decl	5:4	5:37	2	uint8_t	*end
water	5:22	0:0	2	,
decl	5:4	5:37	2	uint8_t	*start
op	5:31	0:0	2	=
water	5:33	0:0	2	NULL
if	6:4	9:4	2	(! filter_ps)
cond	6:8	6:9	3	! filter_ps
op	6:8	0:0	4	!
water	6:9	0:0	4	filter_ps
stmts	6:20	9:4	3	
water	6:20	0:0	4	{
water	7:8	0:0	4	ret
op	7:12	0:0	4	=
call	7:14	7:53	4	ff_avc_parse_nal_units
arg	7:37	7:39	5	pb
water	7:37	0:0	6	pb
arg	7:41	7:47	5	buf_in
water	7:41	0:0	6	buf_in
arg	7:49	7:53	5	size
water	7:49	0:0	6	size
water	7:54	0:0	4	;
goto	8:8	8:16	4	end
water	8:13	0:0	5	end
water	9:4	0:0	4	}
water	10:4	0:0	2	ret
op	10:8	0:0	2	=
call	10:10	10:58	2	ff_avc_parse_nal_units_buf
arg	10:37	10:43	3	buf_in
water	10:37	0:0	4	buf_in
arg	10:45	10:51	3	&start
op	10:45	0:0	4	&
water	10:46	0:0	4	start
arg	10:53	10:58	3	&size
op	10:53	0:0	4	&
water	10:54	0:0	4	size
water	10:59	0:0	2	;
if	11:4	12:16	2	(ret < 0)
cond	11:8	11:14	3	ret < 0
water	11:8	0:0	4	ret
op	11:12	0:0	4	<
water	11:14	0:0	4	0
stmts	12:8	12:16	3	
goto	12:8	12:16	4	end
water	12:13	0:0	5	end
water	13:4	0:0	2	ret
op	13:8	0:0	2	=
water	13:10	0:0	2	0
water	13:11	0:0	2	;
water	14:4	0:0	2	buf
op	14:8	0:0	2	=
water	14:10	0:0	2	start
water	14:15	0:0	2	;
water	15:4	0:0	2	end
op	15:8	0:0	2	=
water	15:10	0:0	2	start
op	15:16	0:0	2	+
water	15:18	0:0	2	size
water	15:22	0:0	2	;
while	16:4	33:4	2	(end - buf > 4)
cond	16:11	16:23	3	end - buf > 4
water	16:11	0:0	4	end
op	16:15	0:0	4	-
water	16:17	0:0	4	buf
op	16:21	0:0	4	>
water	16:23	0:0	4	4
stmts	16:26	33:4	3	
water	16:26	0:0	4	{
decl	17:8	17:57	4	uint32_t	len
op	17:21	0:0	4	=
call	17:23	17:56	5	FFMIN
arg	17:29	17:41	6	AV_RB32(buf)
call	17:29	17:40	7	AV_RB32
arg	17:37	17:40	8	buf
water	17:37	0:0	9	buf
arg	17:43	17:56	6	end-buf-4
water	17:43	0:0	7	end
op	17:47	0:0	7	-
water	17:49	0:0	7	buf
op	17:53	0:0	7	-
water	17:55	0:0	7	4
decl	18:8	18:43	4	uint8_t	type
op	18:21	0:0	4	=
water	18:23	0:0	4	(
water	18:24	0:0	4	buf
op	18:27	0:0	4	[
water	18:28	0:0	4	4
op	18:29	0:0	4	]
op	18:31	0:0	4	>>
water	18:34	0:0	4	1
water	18:35	0:0	4	)
op	18:37	0:0	4	&
water	18:39	0:0	4	0
water	18:40	0:0	4	x3f
water	19:8	0:0	4	buf
op	19:12	0:0	4	+=
water	19:15	0:0	4	4
water	19:16	0:0	4	;
switch	20:8	31:8	4	(type)
cond	20:16	20:16	5	type
water	20:16	0:0	6	type
stmts	20:22	31:8	5	
water	20:22	0:0	6	{
label	21:8	21:20	6	case NAL_VPS :
label	22:8	22:20	6	case NAL_SPS :
label	23:8	23:20	6	case NAL_PPS :
water	24:12	0:0	6	num_ps
op	24:18	0:0	6	++
water	24:20	0:0	6	;
break	25:12	25:17	6	
label	26:8	26:15	6	default :
water	27:12	0:0	6	ret
op	27:16	0:0	6	+=
water	27:19	0:0	6	4
op	27:21	0:0	6	+
water	27:23	0:0	6	len
water	27:26	0:0	6	;
call	28:12	28:29	6	avio_wb32
arg	28:22	28:24	7	pb
water	28:22	0:0	8	pb
arg	28:26	28:29	7	len
water	28:26	0:0	8	len
water	28:30	0:0	6	;
call	29:12	29:35	6	avio_write
arg	29:23	29:25	7	pb
water	29:23	0:0	8	pb
arg	29:27	29:30	7	buf
water	29:27	0:0	8	buf
arg	29:32	29:35	7	len
water	29:32	0:0	8	len
water	29:36	0:0	6	;
break	30:12	30:17	6	
water	31:8	0:0	6	}
water	32:8	0:0	4	buf
op	32:12	0:0	4	+=
water	32:15	0:0	4	len
water	32:18	0:0	4	;
water	33:4	0:0	4	}
label	34:0	34:3	2	end :
call	35:4	35:17	2	av_free
arg	35:12	35:17	3	start
water	35:12	0:0	4	start
water	35:18	0:0	2	;
if	36:4	37:26	2	(ps_count)
cond	36:8	36:8	3	ps_count
water	36:8	0:0	4	ps_count
stmts	37:8	37:26	3	
op	37:8	0:0	4	*
water	37:9	0:0	4	ps_count
op	37:18	0:0	4	=
water	37:20	0:0	4	num_ps
water	37:26	0:0	4	;
return	38:4	38:14	2	ret
water	38:11	0:0	3	ret

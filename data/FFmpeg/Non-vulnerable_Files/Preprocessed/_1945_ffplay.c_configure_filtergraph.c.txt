func	1:0	36:0	0	static int	configure_filtergraph
params	1:32	0:0	1	
param	1:33	1:53	2	AVFilterGraph *	graph
param	1:55	1:78	2	const char *	filtergraph
param	2:33	2:60	2	AVFilterContext *	source_ctx
param	2:62	2:87	2	AVFilterContext *	sink_ctx
stmnts	0:0	35:14	1	
decl	4:4	4:14	2	int	ret
water	4:11	0:0	2	,
decl	4:4	4:14	2	int	i
decl	5:4	5:38	2	int	nb_filters
op	5:19	0:0	2	=
water	5:21	0:0	2	graph
op	5:26	0:0	2	->
water	5:28	0:0	2	nb_filters
decl	6:4	6:49	2	AVFilterInOut	*outputs
op	6:27	0:0	2	=
water	6:29	0:0	2	NULL
water	6:33	0:0	2	,
decl	6:4	6:49	2	AVFilterInOut	*inputs
op	6:43	0:0	2	=
water	6:45	0:0	2	NULL
if	7:4	24:4	2	(filtergraph)
cond	7:8	7:8	3	filtergraph
water	7:8	0:0	4	filtergraph
stmts	7:21	24:4	3	
water	7:21	0:0	4	{
water	8:8	0:0	4	outputs
op	8:16	0:0	4	=
call	8:18	8:39	4	avfilter_inout_alloc
water	8:40	0:0	4	;
water	9:8	0:0	4	inputs
op	9:16	0:0	4	=
call	9:18	9:39	4	avfilter_inout_alloc
water	9:40	0:0	4	;
if	10:8	13:8	4	(! outputs || ! inputs)
cond	10:12	10:25	5	! outputs || ! inputs
op	10:12	0:0	6	!
water	10:13	0:0	6	outputs
op	10:21	0:0	6	||
op	10:24	0:0	6	!
water	10:25	0:0	6	inputs
stmts	10:33	13:8	5	
water	10:33	0:0	6	{
water	11:12	0:0	6	ret
op	11:16	0:0	6	=
call	11:18	11:32	6	AVERROR
arg	11:26	11:32	7	ENOMEM
water	11:26	0:0	8	ENOMEM
water	11:33	0:0	6	;
goto	12:12	12:21	6	fail
water	12:17	0:0	7	fail
water	13:8	0:0	6	}
water	14:8	0:0	4	outputs
op	14:15	0:0	4	->
water	14:17	0:0	4	name
op	14:28	0:0	4	=
call	14:30	14:44	4	av_strdup
arg	14:40	14:44	5	"in"
water	14:40	0:0	6	"in"
water	14:45	0:0	4	;
water	15:8	0:0	4	outputs
op	15:15	0:0	4	->
water	15:17	0:0	4	filter_ctx
op	15:28	0:0	4	=
water	15:30	0:0	4	source_ctx
water	15:40	0:0	4	;
water	16:8	0:0	4	outputs
op	16:15	0:0	4	->
water	16:17	0:0	4	pad_idx
op	16:28	0:0	4	=
water	16:30	0:0	4	0
water	16:31	0:0	4	;
water	17:8	0:0	4	outputs
op	17:15	0:0	4	->
water	17:17	0:0	4	next
op	17:28	0:0	4	=
water	17:30	0:0	4	NULL
water	17:34	0:0	4	;
water	18:8	0:0	4	inputs
op	18:14	0:0	4	->
water	18:16	0:0	4	name
op	18:28	0:0	4	=
call	18:30	18:45	4	av_strdup
arg	18:40	18:45	5	"out"
water	18:40	0:0	6	"out"
water	18:46	0:0	4	;
water	19:8	0:0	4	inputs
op	19:14	0:0	4	->
water	19:16	0:0	4	filter_ctx
op	19:28	0:0	4	=
water	19:30	0:0	4	sink_ctx
water	19:38	0:0	4	;
water	20:8	0:0	4	inputs
op	20:14	0:0	4	->
water	20:16	0:0	4	pad_idx
op	20:28	0:0	4	=
water	20:30	0:0	4	0
water	20:31	0:0	4	;
water	21:8	0:0	4	inputs
op	21:14	0:0	4	->
water	21:16	0:0	4	next
op	21:28	0:0	4	=
water	21:30	0:0	4	NULL
water	21:34	0:0	4	;
if	22:8	23:21	4	(( ret =avfilter_graph_parse_ptr (graph ,filtergraph ,& inputs ,& outputs ,NULL ) ) < 0)
cond	22:12	22:92	5	( ret =avfilter_graph_parse_ptr (graph ,filtergraph ,& inputs ,& outputs ,NULL ) ) < 0
water	22:12	0:0	6	(
water	22:13	0:0	6	ret
op	22:17	0:0	6	=
call	22:19	22:87	6	avfilter_graph_parse_ptr
arg	22:44	22:49	7	graph
water	22:44	0:0	8	graph
arg	22:51	22:62	7	filtergraph
water	22:51	0:0	8	filtergraph
arg	22:64	22:71	7	&inputs
op	22:64	0:0	8	&
water	22:65	0:0	8	inputs
arg	22:73	22:81	7	&outputs
op	22:73	0:0	8	&
water	22:74	0:0	8	outputs
arg	22:83	22:87	7	NULL
water	22:83	0:0	8	NULL
water	22:88	0:0	6	)
op	22:90	0:0	6	<
water	22:92	0:0	6	0
stmts	23:12	23:21	5	
goto	23:12	23:21	6	fail
water	23:17	0:0	7	fail
water	24:4	0:0	4	}
else	24:6	27:4	2
stmts	24:11	27:4	3	
water	24:11	0:0	4	{
if	25:8	26:21	4	(( ret =avfilter_link (source_ctx ,0 ,sink_ctx ,0 ) ) < 0)
cond	25:12	25:64	5	( ret =avfilter_link (source_ctx ,0 ,sink_ctx ,0 ) ) < 0
water	25:12	0:0	6	(
water	25:13	0:0	6	ret
op	25:17	0:0	6	=
call	25:19	25:59	6	avfilter_link
arg	25:33	25:43	7	source_ctx
water	25:33	0:0	8	source_ctx
arg	25:45	25:46	7	0
water	25:45	0:0	8	0
arg	25:48	25:56	7	sink_ctx
water	25:48	0:0	8	sink_ctx
arg	25:58	25:59	7	0
water	25:58	0:0	8	0
water	25:60	0:0	6	)
op	25:62	0:0	6	<
water	25:64	0:0	6	0
stmts	26:12	26:21	5	
goto	26:12	26:21	6	fail
water	26:17	0:0	7	fail
water	27:4	0:0	4	}
for	29:4	30:83	2	(i = 0 ;i < graph -> nb_filters - nb_filters;i ++)
forinit	29:9	29:14	3	i = 0 ;
water	29:9	0:0	4	i
op	29:11	0:0	4	=
water	29:13	0:0	4	0
water	29:14	0:0	4	;
cond	29:16	29:40	3	i < graph -> nb_filters - nb_filters
water	29:16	0:0	4	i
op	29:18	0:0	4	<
water	29:20	0:0	4	graph
op	29:25	0:0	4	->
water	29:27	0:0	4	nb_filters
op	29:38	0:0	4	-
water	29:40	0:0	4	nb_filters
forexpr	29:52	29:53	3	i ++
water	29:52	0:0	4	i
op	29:53	0:0	4	++
stmts	30:8	30:83	3	
call	30:8	30:82	4	FFSWAP
arg	30:15	30:31	5	AVFilterContext*
water	30:15	0:0	6	AVFilterContext
op	30:30	0:0	6	*
arg	30:33	30:50	5	graph->filters[i]
water	30:33	0:0	6	graph
op	30:38	0:0	6	->
water	30:40	0:0	6	filters
op	30:47	0:0	6	[
water	30:48	0:0	6	i
op	30:49	0:0	6	]
arg	30:52	30:82	5	graph->filters[i+nb_filters]
water	30:52	0:0	6	graph
op	30:57	0:0	6	->
water	30:59	0:0	6	filters
op	30:66	0:0	6	[
water	30:67	0:0	6	i
op	30:69	0:0	6	+
water	30:71	0:0	6	nb_filters
op	30:81	0:0	6	]
water	30:83	0:0	4	;
water	31:4	0:0	2	ret
op	31:8	0:0	2	=
call	31:10	31:43	2	avfilter_graph_config
arg	31:32	31:37	3	graph
water	31:32	0:0	4	graph
arg	31:39	31:43	3	NULL
water	31:39	0:0	4	NULL
water	31:44	0:0	2	;
label	32:0	32:4	2	fail :
call	33:4	33:32	2	avfilter_inout_free
arg	33:24	33:32	3	&outputs
op	33:24	0:0	4	&
water	33:25	0:0	4	outputs
water	33:33	0:0	2	;
call	34:4	34:31	2	avfilter_inout_free
arg	34:24	34:31	3	&inputs
op	34:24	0:0	4	&
water	34:25	0:0	4	inputs
water	34:32	0:0	2	;
return	35:4	35:14	2	ret
water	35:11	0:0	3	ret

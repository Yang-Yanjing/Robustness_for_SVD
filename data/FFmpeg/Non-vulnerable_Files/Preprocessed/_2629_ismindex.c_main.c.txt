func	1:0	50:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:17	2	int	argc
param	1:19	1:30	2	char * *	argv
stmnts	0:0	49:12	1	
decl	3:4	3:31	2	const char	*basename
op	3:25	0:0	2	=
water	3:27	0:0	2	NULL
decl	4:4	4:51	2	const char	*path_prefix
op	4:28	0:0	2	=
water	4:30	0:0	2	""
water	4:32	0:0	2	,
decl	4:4	4:51	2	const char	*ismc_prefix
op	4:47	0:0	2	=
water	4:49	0:0	2	""
decl	5:4	5:34	2	const char	*output_prefix
op	5:30	0:0	2	=
water	5:32	0:0	2	""
decl	6:4	6:32	2	char	output_prefix_buf[2048]
decl	7:4	7:30	2	int	split
op	7:14	0:0	2	=
water	7:16	0:0	2	0
water	7:17	0:0	2	,
decl	7:4	7:30	2	int	ismf
op	7:24	0:0	2	=
water	7:26	0:0	2	0
water	7:27	0:0	2	,
decl	7:4	7:30	2	int	i
decl	8:4	8:70	2	struct Tracks	tracks
op	8:25	0:0	2	=
water	8:27	0:0	2	{
water	8:29	0:0	2	0
water	8:30	0:0	2	,
op	8:32	0:0	2	.
water	8:33	0:0	2	video_track
op	8:45	0:0	2	=
op	8:47	0:0	2	-
water	8:48	0:0	2	1
water	8:49	0:0	2	,
op	8:51	0:0	2	.
water	8:52	0:0	2	audio_track
op	8:64	0:0	2	=
op	8:66	0:0	2	-
water	8:67	0:0	2	1
water	8:69	0:0	2	}
call	9:4	9:20	2	av_register_all
water	9:21	0:0	2	;
for	10:4	41:4	2	(i = 1 ;i < argc;i ++)
forinit	10:9	10:14	3	i = 1 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	1
water	10:14	0:0	4	;
cond	10:16	10:20	3	i < argc
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	argc
forexpr	10:26	10:27	3	i ++
water	10:26	0:0	4	i
op	10:27	0:0	4	++
stmts	10:31	41:4	3	
water	10:31	0:0	4	{
if	11:8	14:8	4	(!strcmp (argv [ i ] ,"-n" ))
cond	11:12	11:33	5	!strcmp (argv [ i ] ,"-n" )
op	11:12	0:0	6	!
call	11:13	11:33	6	strcmp
arg	11:20	11:27	7	argv[i]
water	11:20	0:0	8	argv
op	11:24	0:0	8	[
water	11:25	0:0	8	i
op	11:26	0:0	8	]
arg	11:29	11:33	7	"-n"
water	11:29	0:0	8	"-n"
stmts	11:36	14:8	5	
water	11:36	0:0	6	{
water	12:12	0:0	6	basename
op	12:21	0:0	6	=
water	12:23	0:0	6	argv
op	12:27	0:0	6	[
water	12:28	0:0	6	i
op	12:30	0:0	6	+
water	12:32	0:0	6	1
op	12:33	0:0	6	]
water	12:34	0:0	6	;
water	13:12	0:0	6	i
op	13:13	0:0	6	++
water	13:15	0:0	6	;
water	14:8	0:0	6	}
else	14:10	17:8	4
stmts	14:15	17:8	5	
if	14:15	17:8	6	(!strcmp (argv [ i ] ,"-path-prefix" ))
cond	14:19	14:50	7	!strcmp (argv [ i ] ,"-path-prefix" )
op	14:19	0:0	8	!
call	14:20	14:50	8	strcmp
arg	14:27	14:34	9	argv[i]
water	14:27	0:0	10	argv
op	14:31	0:0	10	[
water	14:32	0:0	10	i
op	14:33	0:0	10	]
arg	14:36	14:50	9	"-path-prefix"
water	14:36	0:0	10	"-path-prefix"
stmts	14:53	17:8	7	
water	14:53	0:0	8	{
water	15:12	0:0	8	path_prefix
op	15:24	0:0	8	=
water	15:26	0:0	8	argv
op	15:30	0:0	8	[
water	15:31	0:0	8	i
op	15:33	0:0	8	+
water	15:35	0:0	8	1
op	15:36	0:0	8	]
water	15:37	0:0	8	;
water	16:12	0:0	8	i
op	16:13	0:0	8	++
water	16:15	0:0	8	;
water	17:8	0:0	8	}
else	17:10	20:8	4
stmts	17:15	20:8	5	
if	17:15	20:8	6	(!strcmp (argv [ i ] ,"-ismc-prefix" ))
cond	17:19	17:50	7	!strcmp (argv [ i ] ,"-ismc-prefix" )
op	17:19	0:0	8	!
call	17:20	17:50	8	strcmp
arg	17:27	17:34	9	argv[i]
water	17:27	0:0	10	argv
op	17:31	0:0	10	[
water	17:32	0:0	10	i
op	17:33	0:0	10	]
arg	17:36	17:50	9	"-ismc-prefix"
water	17:36	0:0	10	"-ismc-prefix"
stmts	17:53	20:8	7	
water	17:53	0:0	8	{
water	18:12	0:0	8	ismc_prefix
op	18:24	0:0	8	=
water	18:26	0:0	8	argv
op	18:30	0:0	8	[
water	18:31	0:0	8	i
op	18:33	0:0	8	+
water	18:35	0:0	8	1
op	18:36	0:0	8	]
water	18:37	0:0	8	;
water	19:12	0:0	8	i
op	19:13	0:0	8	++
water	19:15	0:0	8	;
water	20:8	0:0	8	}
else	20:10	28:8	4
stmts	20:15	28:8	5	
if	20:15	28:8	6	(!strcmp (argv [ i ] ,"-output" ))
cond	20:19	20:45	7	!strcmp (argv [ i ] ,"-output" )
op	20:19	0:0	8	!
call	20:20	20:45	8	strcmp
arg	20:27	20:34	9	argv[i]
water	20:27	0:0	10	argv
op	20:31	0:0	10	[
water	20:32	0:0	10	i
op	20:33	0:0	10	]
arg	20:36	20:45	9	"-output"
water	20:36	0:0	10	"-output"
stmts	20:48	28:8	7	
water	20:48	0:0	8	{
water	21:12	0:0	8	output_prefix
op	21:26	0:0	8	=
water	21:28	0:0	8	argv
op	21:32	0:0	8	[
water	21:33	0:0	8	i
op	21:35	0:0	8	+
water	21:37	0:0	8	1
op	21:38	0:0	8	]
water	21:39	0:0	8	;
water	22:12	0:0	8	i
op	22:13	0:0	8	++
water	22:15	0:0	8	;
if	23:12	27:12	8	(output_prefix [strlen (output_prefix ) - 1 ] != '/')
cond	23:16	23:60	9	output_prefix [strlen (output_prefix ) - 1 ] != '/'
water	23:16	0:0	10	output_prefix
op	23:29	0:0	10	[
call	23:30	23:50	10	strlen
arg	23:37	23:50	11	output_prefix
water	23:37	0:0	12	output_prefix
op	23:52	0:0	10	-
water	23:54	0:0	10	1
op	23:55	0:0	10	]
op	23:57	0:0	10	!=
water	23:60	0:0	10	'/'
stmts	23:65	27:12	9	
water	23:65	0:0	10	{
call	24:16	25:45	10	snprintf
arg	24:25	24:42	11	output_prefix_buf
water	24:25	0:0	12	output_prefix_buf
arg	24:44	24:69	11	sizeof(output_prefix_buf)
op	24:44	0:0	12	sizeof
water	24:50	0:0	12	(
water	24:51	0:0	12	output_prefix_buf
water	24:68	0:0	12	)
arg	25:25	25:30	11	"%s/"
water	25:25	0:0	12	"%s/"
arg	25:32	25:45	11	output_prefix
water	25:32	0:0	12	output_prefix
water	25:46	0:0	10	;
water	26:16	0:0	10	output_prefix
op	26:30	0:0	10	=
water	26:32	0:0	10	output_prefix_buf
water	26:49	0:0	10	;
water	27:12	0:0	10	}
water	28:8	0:0	8	}
else	28:10	30:8	4
stmts	28:15	30:8	5	
if	28:15	30:8	6	(!strcmp (argv [ i ] ,"-split" ))
cond	28:19	28:44	7	!strcmp (argv [ i ] ,"-split" )
op	28:19	0:0	8	!
call	28:20	28:44	8	strcmp
arg	28:27	28:34	9	argv[i]
water	28:27	0:0	10	argv
op	28:31	0:0	10	[
water	28:32	0:0	10	i
op	28:33	0:0	10	]
arg	28:36	28:44	9	"-split"
water	28:36	0:0	10	"-split"
stmts	28:47	30:8	7	
water	28:47	0:0	8	{
water	29:12	0:0	8	split
op	29:18	0:0	8	=
water	29:20	0:0	8	1
water	29:21	0:0	8	;
water	30:8	0:0	8	}
else	30:10	32:8	4
stmts	30:15	32:8	5	
if	30:15	32:8	6	(!strcmp (argv [ i ] ,"-ismf" ))
cond	30:19	30:43	7	!strcmp (argv [ i ] ,"-ismf" )
op	30:19	0:0	8	!
call	30:20	30:43	8	strcmp
arg	30:27	30:34	9	argv[i]
water	30:27	0:0	10	argv
op	30:31	0:0	10	[
water	30:32	0:0	10	i
op	30:33	0:0	10	]
arg	30:36	30:43	9	"-ismf"
water	30:36	0:0	10	"-ismf"
stmts	30:46	32:8	7	
water	30:46	0:0	8	{
water	31:12	0:0	8	ismf
op	31:17	0:0	8	=
water	31:19	0:0	8	1
water	31:20	0:0	8	;
water	32:8	0:0	8	}
else	32:10	34:8	4
stmts	32:15	34:8	5	
if	32:15	34:8	6	(argv [ i ] [ 0 ] == '-')
cond	32:19	32:33	7	argv [ i ] [ 0 ] == '-'
water	32:19	0:0	8	argv
op	32:23	0:0	8	[
water	32:24	0:0	8	i
op	32:25	0:0	8	]
op	32:26	0:0	8	[
water	32:27	0:0	8	0
op	32:28	0:0	8	]
op	32:30	0:0	8	==
water	32:33	0:0	8	'-'
stmts	32:38	34:8	7	
water	32:38	0:0	8	{
return	33:12	33:36	8	usage(argv[0],1)
call	33:19	33:35	9	usage
arg	33:25	33:32	10	argv[0]
water	33:25	0:0	11	argv
op	33:29	0:0	11	[
water	33:30	0:0	11	0
op	33:31	0:0	11	]
arg	33:34	33:35	10	1
water	33:34	0:0	11	1
water	34:8	0:0	8	}
else	34:10	40:8	4
stmts	34:15	40:8	5	
water	34:15	0:0	6	{
if	35:12	36:24	6	(! basename)
cond	35:16	35:17	7	! basename
op	35:16	0:0	8	!
water	35:17	0:0	8	basename
stmts	36:16	36:24	7	
water	36:16	0:0	8	ismf
op	36:21	0:0	8	=
water	36:23	0:0	8	0
water	36:24	0:0	8	;
if	37:12	39:24	6	(handle_file (& tracks ,argv [ i ] ,split ,ismf ,basename ,output_prefix ))
cond	37:16	38:51	7	handle_file (& tracks ,argv [ i ] ,split ,ismf ,basename ,output_prefix )
call	37:16	38:51	8	handle_file
arg	37:28	37:35	9	&tracks
op	37:28	0:0	10	&
water	37:29	0:0	10	tracks
arg	37:37	37:44	9	argv[i]
water	37:37	0:0	10	argv
op	37:41	0:0	10	[
water	37:42	0:0	10	i
op	37:43	0:0	10	]
arg	37:46	37:51	9	split
water	37:46	0:0	10	split
arg	37:53	37:57	9	ismf
water	37:53	0:0	10	ismf
arg	38:28	38:36	9	basename
water	38:28	0:0	10	basename
arg	38:38	38:51	9	output_prefix
water	38:38	0:0	10	output_prefix
stmts	39:16	39:24	7	
return	39:16	39:24	8	1
water	39:23	0:0	9	1
water	40:8	0:0	6	}
water	41:4	0:0	4	}
if	42:4	43:32	2	(! tracks . nb_tracks || ( ! basename && ! split ))
cond	42:8	42:49	3	! tracks . nb_tracks || ( ! basename && ! split )
op	42:8	0:0	4	!
water	42:9	0:0	4	tracks
op	42:15	0:0	4	.
water	42:16	0:0	4	nb_tracks
op	42:26	0:0	4	||
water	42:29	0:0	4	(
op	42:30	0:0	4	!
water	42:31	0:0	4	basename
op	42:40	0:0	4	&&
op	42:43	0:0	4	!
water	42:44	0:0	4	split
water	42:49	0:0	4	)
stmts	43:8	43:32	3	
return	43:8	43:32	4	usage(argv[0],1)
call	43:15	43:31	5	usage
arg	43:21	43:28	6	argv[0]
water	43:21	0:0	7	argv
op	43:25	0:0	7	[
water	43:26	0:0	7	0
op	43:27	0:0	7	]
arg	43:30	43:31	6	1
water	43:30	0:0	7	1
if	44:4	46:56	2	(! split)
cond	44:8	44:9	3	! split
op	44:8	0:0	4	!
water	44:9	0:0	4	split
stmts	45:8	46:56	3	
call	45:8	46:55	4	output_server_manifest
arg	45:31	45:38	5	&tracks
op	45:31	0:0	6	&
water	45:32	0:0	6	tracks
arg	45:40	45:48	5	basename
water	45:40	0:0	6	basename
arg	45:50	45:63	5	output_prefix
water	45:50	0:0	6	output_prefix
arg	46:31	46:42	5	path_prefix
water	46:31	0:0	6	path_prefix
arg	46:44	46:55	5	ismc_prefix
water	46:44	0:0	6	ismc_prefix
water	46:56	0:0	4	;
call	47:4	47:66	2	output_client_manifest
arg	47:27	47:34	3	&tracks
op	47:27	0:0	4	&
water	47:28	0:0	4	tracks
arg	47:36	47:44	3	basename
water	47:36	0:0	4	basename
arg	47:46	47:59	3	output_prefix
water	47:46	0:0	4	output_prefix
arg	47:61	47:66	3	split
water	47:61	0:0	4	split
water	47:67	0:0	2	;
call	48:4	48:24	2	clean_tracks
arg	48:17	48:24	3	&tracks
op	48:17	0:0	4	&
water	48:18	0:0	4	tracks
water	48:25	0:0	2	;
return	49:4	49:12	2	0
water	49:11	0:0	3	0

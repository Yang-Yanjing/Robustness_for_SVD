func	1:0	27:0	0	void	ff_ac3_apply_rematrixing
params	1:29	0:0	1	
param	1:30	1:49	2	AC3EncodeContext *	s
stmnts	0:0	26:4	1	
decl	3:4	3:16	2	int	nb_coefs
decl	4:4	4:19	2	int	blk
water	4:11	0:0	2	,
decl	4:4	4:19	2	int	bnd
water	4:16	0:0	2	,
decl	4:4	4:19	2	int	i
decl	5:4	5:18	2	int	start
water	5:13	0:0	2	,
decl	5:4	5:18	2	int	end
decl	6:4	6:25	2	uint8_t	*flags
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
if	7:4	8:14	2	(! s -> rematrixing_enabled)
cond	7:8	7:12	3	! s -> rematrixing_enabled
op	7:8	0:0	4	!
water	7:9	0:0	4	s
op	7:10	0:0	4	->
water	7:12	0:0	4	rematrixing_enabled
stmts	8:8	8:14	3	
return	8:8	8:14	4	
for	9:4	26:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	9:9	9:16	3	blk = 0 ;
water	9:9	0:0	4	blk
op	9:13	0:0	4	=
water	9:15	0:0	4	0
water	9:16	0:0	4	;
cond	9:18	9:27	3	blk < s -> num_blocks
water	9:18	0:0	4	blk
op	9:22	0:0	4	<
water	9:24	0:0	4	s
op	9:25	0:0	4	->
water	9:27	0:0	4	num_blocks
forexpr	9:39	9:42	3	blk ++
water	9:39	0:0	4	blk
op	9:42	0:0	4	++
stmts	9:46	26:4	3	
water	9:46	0:0	4	{
decl	10:8	10:41	4	AC3Block	*block
op	10:24	0:0	4	=
op	10:26	0:0	4	&
water	10:27	0:0	4	s
op	10:28	0:0	4	->
water	10:30	0:0	4	blocks
op	10:36	0:0	4	[
water	10:37	0:0	4	blk
op	10:40	0:0	4	]
if	11:8	12:44	4	(block -> new_rematrixing_strategy)
cond	11:12	11:19	5	block -> new_rematrixing_strategy
water	11:12	0:0	6	block
op	11:17	0:0	6	->
water	11:19	0:0	6	new_rematrixing_strategy
stmts	12:12	12:44	5	
water	12:12	0:0	6	flags
op	12:18	0:0	6	=
water	12:20	0:0	6	block
op	12:25	0:0	6	->
water	12:27	0:0	6	rematrixing_flags
water	12:44	0:0	6	;
water	13:8	0:0	4	nb_coefs
op	13:17	0:0	4	=
call	13:19	13:63	4	FFMIN
arg	13:25	13:43	5	block->end_freq[1]
water	13:25	0:0	6	block
op	13:30	0:0	6	->
water	13:32	0:0	6	end_freq
op	13:40	0:0	6	[
water	13:41	0:0	6	1
op	13:42	0:0	6	]
arg	13:45	13:63	5	block->end_freq[2]
water	13:45	0:0	6	block
op	13:50	0:0	6	->
water	13:52	0:0	6	end_freq
op	13:60	0:0	6	[
water	13:61	0:0	6	2
op	13:62	0:0	6	]
water	13:64	0:0	4	;
for	14:8	25:8	4	(bnd = 0 ;bnd < block -> num_rematrixing_bands;bnd ++)
forinit	14:13	14:20	5	bnd = 0 ;
water	14:13	0:0	6	bnd
op	14:17	0:0	6	=
water	14:19	0:0	6	0
water	14:20	0:0	6	;
cond	14:22	14:35	5	bnd < block -> num_rematrixing_bands
water	14:22	0:0	6	bnd
op	14:26	0:0	6	<
water	14:28	0:0	6	block
op	14:33	0:0	6	->
water	14:35	0:0	6	num_rematrixing_bands
forexpr	14:58	14:61	5	bnd ++
water	14:58	0:0	6	bnd
op	14:61	0:0	6	++
stmts	14:65	25:8	5	
water	14:65	0:0	6	{
if	15:12	24:12	6	(flags [ bnd ])
cond	15:16	15:25	7	flags [ bnd ]
water	15:16	0:0	8	flags
op	15:21	0:0	8	[
water	15:22	0:0	8	bnd
op	15:25	0:0	8	]
stmts	15:28	24:12	7	
water	15:28	0:0	8	{
water	16:16	0:0	8	start
op	16:22	0:0	8	=
water	16:24	0:0	8	ff_ac3_rematrix_band_tab
op	16:48	0:0	8	[
water	16:49	0:0	8	bnd
op	16:52	0:0	8	]
water	16:53	0:0	8	;
water	17:16	0:0	8	end
op	17:22	0:0	8	=
call	17:24	17:71	8	FFMIN
arg	17:30	17:38	9	nb_coefs
water	17:30	0:0	10	nb_coefs
arg	17:40	17:71	9	ff_ac3_rematrix_band_tab[bnd+1]
water	17:40	0:0	10	ff_ac3_rematrix_band_tab
op	17:64	0:0	10	[
water	17:65	0:0	10	bnd
op	17:68	0:0	10	+
water	17:69	0:0	10	1
op	17:70	0:0	10	]
water	17:72	0:0	8	;
for	18:16	23:16	8	(i = start ;i < end;i ++)
forinit	18:21	18:30	9	i = start ;
water	18:21	0:0	10	i
op	18:23	0:0	10	=
water	18:25	0:0	10	start
water	18:30	0:0	10	;
cond	18:32	18:36	9	i < end
water	18:32	0:0	10	i
op	18:34	0:0	10	<
water	18:36	0:0	10	end
forexpr	18:41	18:42	9	i ++
water	18:41	0:0	10	i
op	18:42	0:0	10	++
stmts	18:46	23:16	9	
water	18:46	0:0	10	{
decl	19:20	19:56	10	int32_t	lt
op	19:31	0:0	10	=
water	19:33	0:0	10	block
op	19:38	0:0	10	->
water	19:40	0:0	10	fixed_coef
op	19:50	0:0	10	[
water	19:51	0:0	10	1
op	19:52	0:0	10	]
op	19:53	0:0	10	[
water	19:54	0:0	10	i
op	19:55	0:0	10	]
decl	20:20	20:56	10	int32_t	rt
op	20:31	0:0	10	=
water	20:33	0:0	10	block
op	20:38	0:0	10	->
water	20:40	0:0	10	fixed_coef
op	20:50	0:0	10	[
water	20:51	0:0	10	2
op	20:52	0:0	10	]
op	20:53	0:0	10	[
water	20:54	0:0	10	i
op	20:55	0:0	10	]
water	21:20	0:0	10	block
op	21:25	0:0	10	->
water	21:27	0:0	10	fixed_coef
op	21:37	0:0	10	[
water	21:38	0:0	10	1
op	21:39	0:0	10	]
op	21:40	0:0	10	[
water	21:41	0:0	10	i
op	21:42	0:0	10	]
op	21:44	0:0	10	=
water	21:46	0:0	10	(
water	21:47	0:0	10	lt
op	21:50	0:0	10	+
water	21:52	0:0	10	rt
water	21:54	0:0	10	)
op	21:56	0:0	10	>>
water	21:59	0:0	10	1
water	21:60	0:0	10	;
water	22:20	0:0	10	block
op	22:25	0:0	10	->
water	22:27	0:0	10	fixed_coef
op	22:37	0:0	10	[
water	22:38	0:0	10	2
op	22:39	0:0	10	]
op	22:40	0:0	10	[
water	22:41	0:0	10	i
op	22:42	0:0	10	]
op	22:44	0:0	10	=
water	22:46	0:0	10	(
water	22:47	0:0	10	lt
op	22:50	0:0	10	-
water	22:52	0:0	10	rt
water	22:54	0:0	10	)
op	22:56	0:0	10	>>
water	22:59	0:0	10	1
water	22:60	0:0	10	;
water	23:16	0:0	10	}
water	24:12	0:0	8	}
water	25:8	0:0	6	}
water	26:4	0:0	4	}

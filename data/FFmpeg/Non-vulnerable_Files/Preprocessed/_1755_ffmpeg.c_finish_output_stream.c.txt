decl	1:7	1:76	0	int	init_output_stream
water	1:29	0:0	0	(
water	1:30	0:0	0	OutputStream
op	1:43	0:0	0	*
water	1:44	0:0	0	ost
water	1:47	0:0	0	,
water	1:49	0:0	0	char
op	1:54	0:0	0	*
water	1:55	0:0	0	error
water	1:60	0:0	0	,
water	1:62	0:0	0	int
water	1:66	0:0	0	error_len
water	1:75	0:0	0	)
func	2:0	11:0	0	static void	finish_output_stream
params	2:32	0:0	1	
param	2:33	2:50	2	OutputStream *	ost
stmnts	0:0	10:4	1	
decl	4:4	4:50	2	OutputFile	*of
op	4:19	0:0	2	=
water	4:21	0:0	2	output_files
op	4:33	0:0	2	[
water	4:34	0:0	2	ost
op	4:37	0:0	2	->
water	4:39	0:0	2	file_index
op	4:49	0:0	2	]
decl	5:4	5:9	2	int	i
water	6:4	0:0	2	ost
op	6:7	0:0	2	->
water	6:9	0:0	2	finished
op	6:18	0:0	2	=
water	6:20	0:0	2	ENCODER_FINISHED
op	6:37	0:0	2	|
water	6:39	0:0	2	MUXER_FINISHED
water	6:53	0:0	2	;
if	7:4	10:4	2	(of -> shortest)
cond	7:8	7:12	3	of -> shortest
water	7:8	0:0	4	of
op	7:10	0:0	4	->
water	7:12	0:0	4	shortest
stmts	7:22	10:4	3	
water	7:22	0:0	4	{
for	8:8	9:91	4	(i = 0 ;i < of -> ctx -> nb_streams;i ++)
forinit	8:13	8:18	5	i = 0 ;
water	8:13	0:0	6	i
op	8:15	0:0	6	=
water	8:17	0:0	6	0
water	8:18	0:0	6	;
cond	8:20	8:33	5	i < of -> ctx -> nb_streams
water	8:20	0:0	6	i
op	8:22	0:0	6	<
water	8:24	0:0	6	of
op	8:26	0:0	6	->
water	8:28	0:0	6	ctx
op	8:31	0:0	6	->
water	8:33	0:0	6	nb_streams
forexpr	8:45	8:46	5	i ++
water	8:45	0:0	6	i
op	8:46	0:0	6	++
stmts	9:12	9:91	5	
water	9:12	0:0	6	output_streams
op	9:26	0:0	6	[
water	9:27	0:0	6	of
op	9:29	0:0	6	->
water	9:31	0:0	6	ost_index
op	9:41	0:0	6	+
water	9:43	0:0	6	i
op	9:44	0:0	6	]
op	9:45	0:0	6	->
water	9:47	0:0	6	finished
op	9:56	0:0	6	=
water	9:58	0:0	6	ENCODER_FINISHED
op	9:75	0:0	6	|
water	9:77	0:0	6	MUXER_FINISHED
water	9:91	0:0	6	;
water	10:4	0:0	4	}

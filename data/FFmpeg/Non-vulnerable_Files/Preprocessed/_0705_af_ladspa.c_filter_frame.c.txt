func	1:0	35:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	34:48	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:32	2	LADSPAContext	*s
op	4:21	0:0	2	=
water	4:23	0:0	2	ctx
op	4:26	0:0	2	->
water	4:28	0:0	2	priv
decl	5:4	5:16	2	AVFrame	*out
decl	6:4	6:12	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:12	2	int	h
if	7:4	11:4	2	(! s -> nb_outputs || (av_frame_is_writable (in ) && s -> nb_inputs == s -> nb_outputs && ! ( s -> desc -> Properties & LADSPA_PROPERTY_INPLACE_BROKEN ) ))
cond	7:8	9:63	3	! s -> nb_outputs || (av_frame_is_writable (in ) && s -> nb_inputs == s -> nb_outputs && ! ( s -> desc -> Properties & LADSPA_PROPERTY_INPLACE_BROKEN ) )
op	7:8	0:0	4	!
water	7:9	0:0	4	s
op	7:10	0:0	4	->
water	7:12	0:0	4	nb_outputs
op	7:23	0:0	4	||
water	8:8	0:0	4	(
call	8:9	8:32	4	av_frame_is_writable
arg	8:30	8:32	5	in
water	8:30	0:0	6	in
op	8:34	0:0	4	&&
water	8:37	0:0	4	s
op	8:38	0:0	4	->
water	8:40	0:0	4	nb_inputs
op	8:50	0:0	4	==
water	8:53	0:0	4	s
op	8:54	0:0	4	->
water	8:56	0:0	4	nb_outputs
op	8:67	0:0	4	&&
op	9:8	0:0	4	!
water	9:9	0:0	4	(
water	9:10	0:0	4	s
op	9:11	0:0	4	->
water	9:13	0:0	4	desc
op	9:17	0:0	4	->
water	9:19	0:0	4	Properties
op	9:30	0:0	4	&
water	9:32	0:0	4	LADSPA_PROPERTY_INPLACE_BROKEN
water	9:62	0:0	4	)
water	9:63	0:0	4	)
stmts	9:66	11:4	3	
water	9:66	0:0	4	{
water	10:8	0:0	4	out
op	10:12	0:0	4	=
water	10:14	0:0	4	in
water	10:16	0:0	4	;
water	11:4	0:0	4	}
else	11:6	18:4	2
stmts	11:11	18:4	3	
water	11:11	0:0	4	{
water	12:8	0:0	4	out
op	12:12	0:0	4	=
call	12:14	12:65	4	ff_get_audio_buffer
arg	12:34	12:49	5	ctx->outputs[0]
water	12:34	0:0	6	ctx
op	12:37	0:0	6	->
water	12:39	0:0	6	outputs
op	12:46	0:0	6	[
water	12:47	0:0	6	0
op	12:48	0:0	6	]
arg	12:51	12:65	5	in->nb_samples
water	12:51	0:0	6	in
op	12:53	0:0	6	->
water	12:55	0:0	6	nb_samples
water	12:66	0:0	4	;
if	13:8	16:8	4	(! out)
cond	13:12	13:13	5	! out
op	13:12	0:0	6	!
water	13:13	0:0	6	out
stmts	13:18	16:8	5	
water	13:18	0:0	6	{
call	14:12	14:29	6	av_frame_free
arg	14:26	14:29	7	&in
op	14:26	0:0	8	&
water	14:27	0:0	8	in
water	14:30	0:0	6	;
return	15:12	15:34	6	AVERROR(ENOMEM)
call	15:19	15:33	7	AVERROR
arg	15:27	15:33	8	ENOMEM
water	15:27	0:0	9	ENOMEM
water	16:8	0:0	6	}
call	17:8	17:35	4	av_frame_copy_props
arg	17:28	17:31	5	out
water	17:28	0:0	6	out
arg	17:33	17:35	5	in
water	17:33	0:0	6	in
water	17:36	0:0	4	;
water	18:4	0:0	4	}
for	19:4	29:4	2	(h = 0 ;h < s -> nb_handles;h ++)
forinit	19:9	19:14	3	h = 0 ;
water	19:9	0:0	4	h
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:23	3	h < s -> nb_handles
water	19:16	0:0	4	h
op	19:18	0:0	4	<
water	19:20	0:0	4	s
op	19:21	0:0	4	->
water	19:23	0:0	4	nb_handles
forexpr	19:35	19:36	3	h ++
water	19:35	0:0	4	h
op	19:36	0:0	4	++
stmts	19:40	29:4	3	
water	19:40	0:0	4	{
for	20:8	23:8	4	(i = 0 ;i < s -> nb_inputs;i ++)
forinit	20:13	20:18	5	i = 0 ;
water	20:13	0:0	6	i
op	20:15	0:0	6	=
water	20:17	0:0	6	0
water	20:18	0:0	6	;
cond	20:20	20:27	5	i < s -> nb_inputs
water	20:20	0:0	6	i
op	20:22	0:0	6	<
water	20:24	0:0	6	s
op	20:25	0:0	6	->
water	20:27	0:0	6	nb_inputs
forexpr	20:38	20:39	5	i ++
water	20:38	0:0	6	i
op	20:39	0:0	6	++
stmts	20:43	23:8	5	
water	20:43	0:0	6	{
call	21:12	22:68	6	s->desc->connect_port
arg	21:34	21:47	7	s->handles[h]
water	21:34	0:0	8	s
op	21:35	0:0	8	->
water	21:37	0:0	8	handles
op	21:44	0:0	8	[
water	21:45	0:0	8	h
op	21:46	0:0	8	]
arg	21:49	21:60	7	s->ipmap[i]
water	21:49	0:0	8	s
op	21:50	0:0	8	->
water	21:52	0:0	8	ipmap
op	21:57	0:0	8	[
water	21:58	0:0	8	i
op	21:59	0:0	8	]
arg	22:34	22:68	7	(LADSPA_Data*)in->extended_data[i]
water	22:34	0:0	8	(
water	22:35	0:0	8	LADSPA_Data
op	22:46	0:0	8	*
water	22:47	0:0	8	)
water	22:48	0:0	8	in
op	22:50	0:0	8	->
water	22:52	0:0	8	extended_data
op	22:65	0:0	8	[
water	22:66	0:0	8	i
op	22:67	0:0	8	]
water	22:69	0:0	6	;
water	23:8	0:0	6	}
for	24:8	27:8	4	(i = 0 ;i < s -> nb_outputs;i ++)
forinit	24:13	24:18	5	i = 0 ;
water	24:13	0:0	6	i
op	24:15	0:0	6	=
water	24:17	0:0	6	0
water	24:18	0:0	6	;
cond	24:20	24:27	5	i < s -> nb_outputs
water	24:20	0:0	6	i
op	24:22	0:0	6	<
water	24:24	0:0	6	s
op	24:25	0:0	6	->
water	24:27	0:0	6	nb_outputs
forexpr	24:39	24:40	5	i ++
water	24:39	0:0	6	i
op	24:40	0:0	6	++
stmts	24:44	27:8	5	
water	24:44	0:0	6	{
call	25:12	26:69	6	s->desc->connect_port
arg	25:34	25:47	7	s->handles[h]
water	25:34	0:0	8	s
op	25:35	0:0	8	->
water	25:37	0:0	8	handles
op	25:44	0:0	8	[
water	25:45	0:0	8	h
op	25:46	0:0	8	]
arg	25:49	25:60	7	s->opmap[i]
water	25:49	0:0	8	s
op	25:50	0:0	8	->
water	25:52	0:0	8	opmap
op	25:57	0:0	8	[
water	25:58	0:0	8	i
op	25:59	0:0	8	]
arg	26:34	26:69	7	(LADSPA_Data*)out->extended_data[i]
water	26:34	0:0	8	(
water	26:35	0:0	8	LADSPA_Data
op	26:46	0:0	8	*
water	26:47	0:0	8	)
water	26:48	0:0	8	out
op	26:51	0:0	8	->
water	26:53	0:0	8	extended_data
op	26:66	0:0	8	[
water	26:67	0:0	8	i
op	26:68	0:0	8	]
water	26:70	0:0	6	;
water	27:8	0:0	6	}
call	28:8	28:50	4	s->desc->run
arg	28:21	28:34	5	s->handles[h]
water	28:21	0:0	6	s
op	28:22	0:0	6	->
water	28:24	0:0	6	handles
op	28:31	0:0	6	[
water	28:32	0:0	6	h
op	28:33	0:0	6	]
arg	28:36	28:50	5	in->nb_samples
water	28:36	0:0	6	in
op	28:38	0:0	6	->
water	28:40	0:0	6	nb_samples
water	28:51	0:0	4	;
water	29:4	0:0	4	}
for	30:4	31:72	2	(i = 0 ;i < s -> nb_outputcontrols;i ++)
forinit	30:9	30:14	3	i = 0 ;
water	30:9	0:0	4	i
op	30:11	0:0	4	=
water	30:13	0:0	4	0
water	30:14	0:0	4	;
cond	30:16	30:23	3	i < s -> nb_outputcontrols
water	30:16	0:0	4	i
op	30:18	0:0	4	<
water	30:20	0:0	4	s
op	30:21	0:0	4	->
water	30:23	0:0	4	nb_outputcontrols
forexpr	30:42	30:43	3	i ++
water	30:42	0:0	4	i
op	30:43	0:0	4	++
stmts	31:8	31:72	3	
call	31:8	31:71	4	print_ctl_info
arg	31:23	31:26	5	ctx
water	31:23	0:0	6	ctx
arg	31:28	31:42	5	AV_LOG_VERBOSE
water	31:28	0:0	6	AV_LOG_VERBOSE
arg	31:44	31:45	5	s
water	31:44	0:0	6	s
arg	31:47	31:48	5	i
water	31:47	0:0	6	i
arg	31:50	31:58	5	s->ocmap
water	31:50	0:0	6	s
op	31:51	0:0	6	->
water	31:53	0:0	6	ocmap
arg	31:60	31:68	5	s->octlv
water	31:60	0:0	6	s
op	31:61	0:0	6	->
water	31:63	0:0	6	octlv
arg	31:70	31:71	5	1
water	31:70	0:0	6	1
water	31:72	0:0	4	;
if	32:4	33:26	2	(out != in)
cond	32:8	32:15	3	out != in
water	32:8	0:0	4	out
op	32:12	0:0	4	!=
water	32:15	0:0	4	in
stmts	33:8	33:26	3	
call	33:8	33:25	4	av_frame_free
arg	33:22	33:25	5	&in
op	33:22	0:0	6	&
water	33:23	0:0	6	in
water	33:26	0:0	4	;
return	34:4	34:48	2	ff_filter_frame(ctx->outputs[0],out)
call	34:11	34:47	3	ff_filter_frame
arg	34:27	34:42	4	ctx->outputs[0]
water	34:27	0:0	5	ctx
op	34:30	0:0	5	->
water	34:32	0:0	5	outputs
op	34:39	0:0	5	[
water	34:40	0:0	5	0
op	34:41	0:0	5	]
arg	34:44	34:47	4	out
water	34:44	0:0	5	out

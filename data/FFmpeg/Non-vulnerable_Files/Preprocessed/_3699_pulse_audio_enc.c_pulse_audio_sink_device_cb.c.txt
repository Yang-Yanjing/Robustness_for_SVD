func	1:0	16:0	0	static void	pulse_audio_sink_device_cb
params	1:38	0:0	1	
param	1:39	1:54	2	pa_context *	ctx
param	1:56	1:79	2	const pa_sink_info *	dev
param	2:39	2:46	2	int	eol
param	2:48	2:62	2	void *	userdata
stmnts	0:0	15:4	1	
decl	4:4	4:27	2	PulseData	*s
op	4:17	0:0	2	=
water	4:19	0:0	2	userdata
if	5:4	6:14	2	(s -> ctx != ctx)
cond	5:8	5:18	3	s -> ctx != ctx
water	5:8	0:0	4	s
op	5:9	0:0	4	->
water	5:11	0:0	4	ctx
op	5:15	0:0	4	!=
water	5:18	0:0	4	ctx
stmts	6:8	6:14	3	
return	6:8	6:14	4	
if	7:4	9:4	2	(eol)
cond	7:8	7:8	3	eol
water	7:8	0:0	4	eol
stmts	7:13	9:4	3	
water	7:13	0:0	4	{
call	8:8	8:50	4	pa_threaded_mainloop_signal
arg	8:36	8:47	5	s->mainloop
water	8:36	0:0	6	s
op	8:37	0:0	6	->
water	8:39	0:0	6	mainloop
arg	8:49	8:50	5	0
water	8:49	0:0	6	0
water	8:51	0:0	4	;
water	9:4	0:0	4	}
else	9:6	15:4	2
stmts	9:11	15:4	3	
water	9:11	0:0	4	{
if	10:8	11:45	4	(dev -> flags & PA_SINK_FLAT_VOLUME)
cond	10:12	10:25	5	dev -> flags & PA_SINK_FLAT_VOLUME
water	10:12	0:0	6	dev
op	10:15	0:0	6	->
water	10:17	0:0	6	flags
op	10:23	0:0	6	&
water	10:25	0:0	6	PA_SINK_FLAT_VOLUME
stmts	11:12	11:45	5	
water	11:12	0:0	6	s
op	11:13	0:0	6	->
water	11:15	0:0	6	base_volume
op	11:27	0:0	6	=
water	11:29	0:0	6	dev
op	11:32	0:0	6	->
water	11:34	0:0	6	base_volume
water	11:45	0:0	6	;
else	12:8	13:43	4
stmts	13:12	13:43	5	
water	13:12	0:0	6	s
op	13:13	0:0	6	->
water	13:15	0:0	6	base_volume
op	13:27	0:0	6	=
water	13:29	0:0	6	PA_VOLUME_NORM
water	13:43	0:0	6	;
call	14:8	14:67	4	av_log
arg	14:15	14:16	5	s
water	14:15	0:0	6	s
arg	14:18	14:30	5	AV_LOG_DEBUG
water	14:18	0:0	6	AV_LOG_DEBUG
arg	14:32	14:51	5	"base volume: %u\n"
water	14:32	0:0	6	"base volume: %u\n"
arg	14:53	14:67	5	s->base_volume
water	14:53	0:0	6	s
op	14:54	0:0	6	->
water	14:56	0:0	6	base_volume
water	14:68	0:0	4	;
water	15:4	0:0	4	}

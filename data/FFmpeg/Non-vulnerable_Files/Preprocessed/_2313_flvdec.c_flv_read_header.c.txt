func	1:0	20:0	0	static int	flv_read_header
params	1:26	0:0	1	
param	1:27	1:45	2	AVFormatContext *	s
stmnts	0:0	19:12	1	
decl	3:4	3:21	2	int	offset
water	3:14	0:0	2	,
decl	3:4	3:21	2	int	flags
call	4:4	4:22	2	avio_skip
arg	4:14	4:19	3	s->pb
water	4:14	0:0	4	s
op	4:15	0:0	4	->
water	4:17	0:0	4	pb
arg	4:21	4:22	3	4
water	4:21	0:0	4	4
water	4:23	0:0	2	;
water	5:4	0:0	2	flags
op	5:10	0:0	2	=
call	5:12	5:25	2	avio_r8
arg	5:20	5:25	3	s->pb
water	5:20	0:0	4	s
op	5:21	0:0	4	->
water	5:23	0:0	4	pb
water	5:26	0:0	2	;
water	6:4	0:0	2	s
op	6:5	0:0	2	->
water	6:7	0:0	2	ctx_flags
op	6:17	0:0	2	|=
water	6:20	0:0	2	AVFMTCTX_NOHEADER
water	6:37	0:0	2	;
if	7:4	9:34	2	(flags & FLV_HEADER_FLAG_HASVIDEO)
cond	7:8	7:16	3	flags & FLV_HEADER_FLAG_HASVIDEO
water	7:8	0:0	4	flags
op	7:14	0:0	4	&
water	7:16	0:0	4	FLV_HEADER_FLAG_HASVIDEO
stmts	8:8	9:34	3	
if	8:8	9:34	4	(!create_stream (s ,AVMEDIA_TYPE_VIDEO ))
cond	8:12	8:48	5	!create_stream (s ,AVMEDIA_TYPE_VIDEO )
op	8:12	0:0	6	!
call	8:13	8:48	6	create_stream
arg	8:27	8:28	7	s
water	8:27	0:0	8	s
arg	8:30	8:48	7	AVMEDIA_TYPE_VIDEO
water	8:30	0:0	8	AVMEDIA_TYPE_VIDEO
stmts	9:12	9:34	5	
return	9:12	9:34	6	AVERROR(ENOMEM)
call	9:19	9:33	7	AVERROR
arg	9:27	9:33	8	ENOMEM
water	9:27	0:0	9	ENOMEM
if	10:4	12:34	2	(flags & FLV_HEADER_FLAG_HASAUDIO)
cond	10:8	10:16	3	flags & FLV_HEADER_FLAG_HASAUDIO
water	10:8	0:0	4	flags
op	10:14	0:0	4	&
water	10:16	0:0	4	FLV_HEADER_FLAG_HASAUDIO
stmts	11:8	12:34	3	
if	11:8	12:34	4	(!create_stream (s ,AVMEDIA_TYPE_AUDIO ))
cond	11:12	11:48	5	!create_stream (s ,AVMEDIA_TYPE_AUDIO )
op	11:12	0:0	6	!
call	11:13	11:48	6	create_stream
arg	11:27	11:28	7	s
water	11:27	0:0	8	s
arg	11:30	11:48	7	AVMEDIA_TYPE_AUDIO
water	11:30	0:0	8	AVMEDIA_TYPE_AUDIO
stmts	12:12	12:34	5	
return	12:12	12:34	6	AVERROR(ENOMEM)
call	12:19	12:33	7	AVERROR
arg	12:27	12:33	8	ENOMEM
water	12:27	0:0	9	ENOMEM
water	15:4	0:0	2	offset
op	15:11	0:0	2	=
call	15:13	15:28	2	avio_rb32
arg	15:23	15:28	3	s->pb
water	15:23	0:0	4	s
op	15:24	0:0	4	->
water	15:26	0:0	4	pb
water	15:29	0:0	2	;
call	16:4	16:37	2	avio_seek
arg	16:14	16:19	3	s->pb
water	16:14	0:0	4	s
op	16:15	0:0	4	->
water	16:17	0:0	4	pb
arg	16:21	16:27	3	offset
water	16:21	0:0	4	offset
arg	16:29	16:37	3	SEEK_SET
water	16:29	0:0	4	SEEK_SET
water	16:38	0:0	2	;
call	17:4	17:22	2	avio_skip
arg	17:14	17:19	3	s->pb
water	17:14	0:0	4	s
op	17:15	0:0	4	->
water	17:17	0:0	4	pb
arg	17:21	17:22	3	4
water	17:21	0:0	4	4
water	17:23	0:0	2	;
water	18:4	0:0	2	s
op	18:5	0:0	2	->
water	18:7	0:0	2	start_time
op	18:18	0:0	2	=
water	18:20	0:0	2	0
water	18:21	0:0	2	;
return	19:4	19:12	2	0
water	19:11	0:0	3	0

func	1:0	14:0	0	void	ff_audio_data_drain
params	1:24	0:0	1	
param	1:25	1:37	2	AudioData *	a
param	1:39	1:53	2	int	nb_samples
stmnts	3:4	13:4	1	
if	3:4	6:4	2	(a -> nb_samples <= nb_samples)
cond	3:8	3:25	3	a -> nb_samples <= nb_samples
water	3:8	0:0	4	a
op	3:9	0:0	4	->
water	3:11	0:0	4	nb_samples
op	3:22	0:0	4	<=
water	3:25	0:0	4	nb_samples
stmts	3:37	6:4	3	
water	3:37	0:0	4	{
water	5:8	0:0	4	a
op	5:9	0:0	4	->
water	5:11	0:0	4	nb_samples
op	5:22	0:0	4	=
water	5:24	0:0	4	0
water	5:25	0:0	4	;
water	6:4	0:0	4	}
else	6:6	13:4	2
stmts	6:11	13:4	3	
water	6:11	0:0	4	{
decl	7:8	7:13	4	int	p
decl	8:8	8:48	4	int	move_offset
op	8:24	0:0	4	=
water	8:26	0:0	4	a
op	8:27	0:0	4	->
water	8:29	0:0	4	stride
op	8:36	0:0	4	*
water	8:38	0:0	4	nb_samples
decl	9:8	9:66	4	int	move_size
op	9:24	0:0	4	=
water	9:26	0:0	4	a
op	9:27	0:0	4	->
water	9:29	0:0	4	stride
op	9:36	0:0	4	*
water	9:38	0:0	4	(
water	9:39	0:0	4	a
op	9:40	0:0	4	->
water	9:42	0:0	4	nb_samples
op	9:53	0:0	4	-
water	9:55	0:0	4	nb_samples
water	9:65	0:0	4	)
for	10:8	11:68	4	(p = 0 ;p < a -> planes;p ++)
forinit	10:13	10:18	5	p = 0 ;
water	10:13	0:0	6	p
op	10:15	0:0	6	=
water	10:17	0:0	6	0
water	10:18	0:0	6	;
cond	10:20	10:27	5	p < a -> planes
water	10:20	0:0	6	p
op	10:22	0:0	6	<
water	10:24	0:0	6	a
op	10:25	0:0	6	->
water	10:27	0:0	6	planes
forexpr	10:35	10:36	5	p ++
water	10:35	0:0	6	p
op	10:36	0:0	6	++
stmts	11:12	11:68	5	
call	11:12	11:67	6	memmove
arg	11:20	11:30	7	a->data[p]
water	11:20	0:0	8	a
op	11:21	0:0	8	->
water	11:23	0:0	8	data
op	11:27	0:0	8	[
water	11:28	0:0	8	p
op	11:29	0:0	8	]
arg	11:32	11:56	7	a->data[p]+move_offset
water	11:32	0:0	8	a
op	11:33	0:0	8	->
water	11:35	0:0	8	data
op	11:39	0:0	8	[
water	11:40	0:0	8	p
op	11:41	0:0	8	]
op	11:43	0:0	8	+
water	11:45	0:0	8	move_offset
arg	11:58	11:67	7	move_size
water	11:58	0:0	8	move_size
water	11:68	0:0	6	;
water	12:8	0:0	4	a
op	12:9	0:0	4	->
water	12:11	0:0	4	nb_samples
op	12:22	0:0	4	-=
water	12:25	0:0	4	nb_samples
water	12:35	0:0	4	;
water	13:4	0:0	4	}

func	1:0	30:0	0	static int	discard_pid
params	1:22	0:0	1	
param	1:23	1:40	2	MpegTSContext *	ts
param	1:42	1:58	2	unsigned int	pid
stmnts	0:0	29:29	1	
decl	3:4	3:15	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:15	2	int	j
water	3:12	0:0	2	,
decl	3:4	3:15	2	int	k
decl	4:4	4:31	2	int	used
op	4:13	0:0	2	=
water	4:15	0:0	2	0
water	4:16	0:0	2	,
decl	4:4	4:31	2	int	discarded
op	4:28	0:0	2	=
water	4:30	0:0	2	0
decl	5:4	5:21	2	struct Program	*p
for	8:4	10:17	2	(k = 0 ;k < ts -> stream -> nb_programs;k ++)
forinit	8:9	8:14	3	k = 0 ;
water	8:9	0:0	4	k
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:32	3	k < ts -> stream -> nb_programs
water	8:16	0:0	4	k
op	8:18	0:0	4	<
water	8:20	0:0	4	ts
op	8:22	0:0	4	->
water	8:24	0:0	4	stream
op	8:30	0:0	4	->
water	8:32	0:0	4	nb_programs
forexpr	8:45	8:46	3	k ++
water	8:45	0:0	4	k
op	8:46	0:0	4	++
stmts	9:8	10:17	3	
if	9:8	10:17	4	(ts -> stream -> programs [ k ] -> discard == AVDISCARD_ALL)
cond	9:12	9:48	5	ts -> stream -> programs [ k ] -> discard == AVDISCARD_ALL
water	9:12	0:0	6	ts
op	9:14	0:0	6	->
water	9:16	0:0	6	stream
op	9:22	0:0	6	->
water	9:24	0:0	6	programs
op	9:32	0:0	6	[
water	9:33	0:0	6	k
op	9:34	0:0	6	]
op	9:35	0:0	6	->
water	9:37	0:0	6	discard
op	9:45	0:0	6	==
water	9:48	0:0	6	AVDISCARD_ALL
stmts	10:12	10:17	5	
break	10:12	10:17	6	
if	11:4	12:16	2	(k == ts -> stream -> nb_programs)
cond	11:8	11:25	3	k == ts -> stream -> nb_programs
water	11:8	0:0	4	k
op	11:10	0:0	4	==
water	11:13	0:0	4	ts
op	11:15	0:0	4	->
water	11:17	0:0	4	stream
op	11:23	0:0	4	->
water	11:25	0:0	4	nb_programs
stmts	12:8	12:16	3	
return	12:8	12:16	4	0
water	12:15	0:0	5	0
for	13:4	28:4	2	(i = 0 ;i < ts -> nb_prg;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:24	3	i < ts -> nb_prg
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	ts
op	13:22	0:0	4	->
water	13:24	0:0	4	nb_prg
forexpr	13:32	13:33	3	i ++
water	13:32	0:0	4	i
op	13:33	0:0	4	++
stmts	13:37	28:4	3	
water	13:37	0:0	4	{
water	14:8	0:0	4	p
op	14:10	0:0	4	=
op	14:12	0:0	4	&
water	14:13	0:0	4	ts
op	14:15	0:0	4	->
water	14:17	0:0	4	prg
op	14:20	0:0	4	[
water	14:21	0:0	4	i
op	14:22	0:0	4	]
water	14:23	0:0	4	;
for	15:8	27:8	4	(j = 0 ;j < p -> nb_pids;j ++)
forinit	15:13	15:18	5	j = 0 ;
water	15:13	0:0	6	j
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:27	5	j < p -> nb_pids
water	15:20	0:0	6	j
op	15:22	0:0	6	<
water	15:24	0:0	6	p
op	15:25	0:0	6	->
water	15:27	0:0	6	nb_pids
forexpr	15:36	15:37	5	j ++
water	15:36	0:0	6	j
op	15:37	0:0	6	++
stmts	15:41	27:8	5	
water	15:41	0:0	6	{
if	16:12	17:24	6	(p -> pids [ j ] != pid)
cond	16:16	16:30	7	p -> pids [ j ] != pid
water	16:16	0:0	8	p
op	16:17	0:0	8	->
water	16:19	0:0	8	pids
op	16:23	0:0	8	[
water	16:24	0:0	8	j
op	16:25	0:0	8	]
op	16:27	0:0	8	!=
water	16:30	0:0	8	pid
stmts	17:16	17:24	7	
continue	17:16	17:24	8	
for	19:12	26:12	6	(k = 0 ;k < ts -> stream -> nb_programs;k ++)
forinit	19:17	19:22	7	k = 0 ;
water	19:17	0:0	8	k
op	19:19	0:0	8	=
water	19:21	0:0	8	0
water	19:22	0:0	8	;
cond	19:24	19:40	7	k < ts -> stream -> nb_programs
water	19:24	0:0	8	k
op	19:26	0:0	8	<
water	19:28	0:0	8	ts
op	19:30	0:0	8	->
water	19:32	0:0	8	stream
op	19:38	0:0	8	->
water	19:40	0:0	8	nb_programs
forexpr	19:53	19:54	7	k ++
water	19:53	0:0	8	k
op	19:54	0:0	8	++
stmts	19:58	26:12	7	
water	19:58	0:0	8	{
if	20:16	25:16	8	(ts -> stream -> programs [ k ] -> id == p -> id)
cond	20:20	20:54	9	ts -> stream -> programs [ k ] -> id == p -> id
water	20:20	0:0	10	ts
op	20:22	0:0	10	->
water	20:24	0:0	10	stream
op	20:30	0:0	10	->
water	20:32	0:0	10	programs
op	20:40	0:0	10	[
water	20:41	0:0	10	k
op	20:42	0:0	10	]
op	20:43	0:0	10	->
water	20:45	0:0	10	id
op	20:48	0:0	10	==
water	20:51	0:0	10	p
op	20:52	0:0	10	->
water	20:54	0:0	10	id
stmts	20:58	25:16	9	
water	20:58	0:0	10	{
if	21:20	22:35	10	(ts -> stream -> programs [ k ] -> discard == AVDISCARD_ALL)
cond	21:24	21:60	11	ts -> stream -> programs [ k ] -> discard == AVDISCARD_ALL
water	21:24	0:0	12	ts
op	21:26	0:0	12	->
water	21:28	0:0	12	stream
op	21:34	0:0	12	->
water	21:36	0:0	12	programs
op	21:44	0:0	12	[
water	21:45	0:0	12	k
op	21:46	0:0	12	]
op	21:47	0:0	12	->
water	21:49	0:0	12	discard
op	21:57	0:0	12	==
water	21:60	0:0	12	AVDISCARD_ALL
stmts	22:24	22:35	11	
water	22:24	0:0	12	discarded
op	22:33	0:0	12	++
water	22:35	0:0	12	;
else	23:20	24:30	10
stmts	24:24	24:30	11	
water	24:24	0:0	12	used
op	24:28	0:0	12	++
water	24:30	0:0	12	;
water	25:16	0:0	10	}
water	26:12	0:0	8	}
water	27:8	0:0	6	}
water	28:4	0:0	4	}
return	29:4	29:29	2	!used&&discarded
op	29:11	0:0	3	!
water	29:12	0:0	3	used
op	29:17	0:0	3	&&
water	29:20	0:0	3	discarded

func	1:0	44:0	0	int	av_interleaved_write_frame
params	1:30	0:0	1	
param	1:31	1:49	2	AVFormatContext *	s
param	1:51	1:64	2	AVPacket *	pkt
stmnts	0:0	43:14	1	
decl	3:4	3:22	2	int	ret
water	3:11	0:0	2	,
decl	3:4	3:22	2	int	flush
op	3:19	0:0	2	=
water	3:21	0:0	2	0
water	4:4	0:0	2	ret
op	4:8	0:0	2	=
call	4:10	4:29	2	check_packet
arg	4:23	4:24	3	s
water	4:23	0:0	4	s
arg	4:26	4:29	3	pkt
water	4:26	0:0	4	pkt
water	4:30	0:0	2	;
if	5:4	6:17	2	(ret < 0)
cond	5:8	5:14	3	ret < 0
water	5:8	0:0	4	ret
op	5:12	0:0	4	<
water	5:14	0:0	4	0
stmts	6:8	6:17	3	
goto	6:8	6:17	4	fail
water	6:13	0:0	5	fail
if	7:4	18:4	2	(pkt)
cond	7:8	7:8	3	pkt
water	7:8	0:0	4	pkt
stmts	7:13	18:4	3	
water	7:13	0:0	4	{
decl	8:8	8:52	4	AVStream	*st
op	8:21	0:0	4	=
water	8:23	0:0	4	s
op	8:24	0:0	4	->
water	8:26	0:0	4	streams
op	8:33	0:0	4	[
water	8:34	0:0	4	pkt
op	8:37	0:0	4	->
water	8:39	0:0	4	stream_index
op	8:51	0:0	4	]
if	9:8	11:68	4	(s -> debug & FF_FDEBUG_TS)
cond	9:12	9:23	5	s -> debug & FF_FDEBUG_TS
water	9:12	0:0	6	s
op	9:13	0:0	6	->
water	9:15	0:0	6	debug
op	9:21	0:0	6	&
water	9:23	0:0	6	FF_FDEBUG_TS
stmts	10:12	11:68	5	
call	10:12	11:67	6	av_log
arg	10:19	10:20	7	s
water	10:19	0:0	8	s
arg	10:22	10:34	7	AV_LOG_TRACE
water	10:22	0:0	8	AV_LOG_TRACE
arg	10:36	10:88	7	"av_interleaved_write_frame size:%d dts:%s pts:%s\n"
water	10:36	0:0	8	"av_interleaved_write_frame size:%d dts:%s pts:%s\n"
arg	11:16	11:25	7	pkt->size
water	11:16	0:0	8	pkt
op	11:19	0:0	8	->
water	11:21	0:0	8	size
arg	11:27	11:46	7	av_ts2str(pkt->dts)
call	11:27	11:45	8	av_ts2str
arg	11:37	11:45	9	pkt->dts
water	11:37	0:0	10	pkt
op	11:40	0:0	10	->
water	11:42	0:0	10	dts
arg	11:48	11:67	7	av_ts2str(pkt->pts)
call	11:48	11:66	8	av_ts2str
arg	11:58	11:66	9	pkt->pts
water	11:58	0:0	10	pkt
op	11:61	0:0	10	->
water	11:63	0:0	10	pts
water	11:68	0:0	6	;
if	12:8	13:21	4	(( ret =compute_pkt_fields2 (s ,st ,pkt ) ) < 0 && ! ( s -> oformat -> flags & AVFMT_NOTIMESTAMPS ))
cond	12:12	12:99	5	( ret =compute_pkt_fields2 (s ,st ,pkt ) ) < 0 && ! ( s -> oformat -> flags & AVFMT_NOTIMESTAMPS )
water	12:12	0:0	6	(
water	12:13	0:0	6	ret
op	12:17	0:0	6	=
call	12:19	12:49	6	compute_pkt_fields2
arg	12:39	12:40	7	s
water	12:39	0:0	8	s
arg	12:42	12:44	7	st
water	12:42	0:0	8	st
arg	12:46	12:49	7	pkt
water	12:46	0:0	8	pkt
water	12:50	0:0	6	)
op	12:52	0:0	6	<
water	12:54	0:0	6	0
op	12:56	0:0	6	&&
op	12:59	0:0	6	!
water	12:60	0:0	6	(
water	12:61	0:0	6	s
op	12:62	0:0	6	->
water	12:64	0:0	6	oformat
op	12:71	0:0	6	->
water	12:73	0:0	6	flags
op	12:79	0:0	6	&
water	12:81	0:0	6	AVFMT_NOTIMESTAMPS
water	12:99	0:0	6	)
stmts	13:12	13:21	5	
goto	13:12	13:21	6	fail
water	13:17	0:0	7	fail
if	14:8	17:8	4	(pkt -> dts == AV_NOPTS_VALUE && ! ( s -> oformat -> flags & AVFMT_NOTIMESTAMPS ))
cond	14:12	14:82	5	pkt -> dts == AV_NOPTS_VALUE && ! ( s -> oformat -> flags & AVFMT_NOTIMESTAMPS )
water	14:12	0:0	6	pkt
op	14:15	0:0	6	->
water	14:17	0:0	6	dts
op	14:21	0:0	6	==
water	14:24	0:0	6	AV_NOPTS_VALUE
op	14:39	0:0	6	&&
op	14:42	0:0	6	!
water	14:43	0:0	6	(
water	14:44	0:0	6	s
op	14:45	0:0	6	->
water	14:47	0:0	6	oformat
op	14:54	0:0	6	->
water	14:56	0:0	6	flags
op	14:62	0:0	6	&
water	14:64	0:0	6	AVFMT_NOTIMESTAMPS
water	14:82	0:0	6	)
stmts	14:85	17:8	5	
water	14:85	0:0	6	{
water	15:12	0:0	6	ret
op	15:16	0:0	6	=
call	15:18	15:32	6	AVERROR
arg	15:26	15:32	7	EINVAL
water	15:26	0:0	8	EINVAL
water	15:33	0:0	6	;
goto	16:12	16:21	6	fail
water	16:17	0:0	7	fail
water	17:8	0:0	6	}
water	18:4	0:0	4	}
else	18:6	21:4	2
stmts	18:11	21:4	3	
water	18:11	0:0	4	{
call	19:8	19:68	4	av_log
arg	19:15	19:16	5	s
water	19:15	0:0	6	s
arg	19:18	19:30	5	AV_LOG_TRACE
water	19:18	0:0	6	AV_LOG_TRACE
arg	19:32	19:68	5	"av_interleaved_write_frame FLUSH\n"
water	19:32	0:0	6	"av_interleaved_write_frame FLUSH\n"
water	19:69	0:0	4	;
water	20:8	0:0	4	flush
op	20:14	0:0	4	=
water	20:16	0:0	4	1
water	20:17	0:0	4	;
water	21:4	0:0	4	}
for	22:4	40:4	2	(;;)
forinit	22:9	22:9	3	;
water	22:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	22:14	40:4	3	
water	22:14	0:0	4	{
decl	23:8	23:21	4	AVPacket	opkt
decl	24:8	24:57	4	int	ret
op	24:16	0:0	4	=
call	24:18	24:56	5	interleave_packet
arg	24:36	24:37	6	s
water	24:36	0:0	7	s
arg	24:39	24:44	6	&opkt
op	24:39	0:0	7	&
water	24:40	0:0	7	opkt
arg	24:46	24:49	6	pkt
water	24:46	0:0	7	pkt
arg	24:51	24:56	6	flush
water	24:51	0:0	7	flush
if	25:8	29:8	4	(pkt)
cond	25:12	25:12	5	pkt
water	25:12	0:0	6	pkt
stmts	25:17	29:8	5	
water	25:17	0:0	6	{
call	26:12	26:39	6	memset
arg	26:19	26:22	7	pkt
water	26:19	0:0	8	pkt
arg	26:24	26:25	7	0
water	26:24	0:0	8	0
arg	26:27	26:39	7	sizeof(*pkt)
op	26:27	0:0	8	sizeof
water	26:33	0:0	8	(
op	26:34	0:0	8	*
water	26:35	0:0	8	pkt
water	26:38	0:0	8	)
water	26:40	0:0	6	;
call	27:12	27:30	6	av_init_packet
arg	27:27	27:30	7	pkt
water	27:27	0:0	8	pkt
water	27:31	0:0	6	;
water	28:12	0:0	6	pkt
op	28:16	0:0	6	=
water	28:18	0:0	6	NULL
water	28:22	0:0	6	;
water	29:8	0:0	6	}
if	30:8	31:22	4	(ret <= 0)
cond	30:12	30:19	5	ret <= 0
water	30:12	0:0	6	ret
op	30:16	0:0	6	<=
water	30:19	0:0	6	0
stmts	31:12	31:22	5	
return	31:12	31:22	6	ret
water	31:19	0:0	7	ret
water	32:8	0:0	4	ret
op	32:12	0:0	4	=
call	32:14	32:35	4	write_packet
arg	32:27	32:28	5	s
water	32:27	0:0	6	s
arg	32:30	32:35	5	&opkt
op	32:30	0:0	6	&
water	32:31	0:0	6	opkt
water	32:36	0:0	4	;
if	33:8	34:54	4	(ret >= 0)
cond	33:12	33:19	5	ret >= 0
water	33:12	0:0	6	ret
op	33:16	0:0	6	>=
water	33:19	0:0	6	0
stmts	34:12	34:54	5	
water	34:12	0:0	6	s
op	34:13	0:0	6	->
water	34:15	0:0	6	streams
op	34:22	0:0	6	[
water	34:23	0:0	6	opkt
op	34:27	0:0	6	.
water	34:28	0:0	6	stream_index
op	34:40	0:0	6	]
op	34:41	0:0	6	->
water	34:43	0:0	6	nb_frames
op	34:52	0:0	6	++
water	34:54	0:0	6	;
call	35:8	35:28	4	av_free_packet
arg	35:23	35:28	5	&opkt
op	35:23	0:0	6	&
water	35:24	0:0	6	opkt
water	35:29	0:0	4	;
if	36:8	37:22	4	(ret < 0)
cond	36:12	36:18	5	ret < 0
water	36:12	0:0	6	ret
op	36:16	0:0	6	<
water	36:18	0:0	6	0
stmts	37:12	37:22	5	
return	37:12	37:22	6	ret
water	37:19	0:0	7	ret
if	38:8	39:31	4	(s -> pb && s -> pb -> error)
cond	38:11	38:27	5	s -> pb && s -> pb -> error
water	38:11	0:0	6	s
op	38:12	0:0	6	->
water	38:14	0:0	6	pb
op	38:17	0:0	6	&&
water	38:20	0:0	6	s
op	38:21	0:0	6	->
water	38:23	0:0	6	pb
op	38:25	0:0	6	->
water	38:27	0:0	6	error
stmts	39:12	39:31	5	
return	39:12	39:31	6	s->pb->error
water	39:19	0:0	7	s
op	39:20	0:0	7	->
water	39:22	0:0	7	pb
op	39:24	0:0	7	->
water	39:26	0:0	7	error
water	40:4	0:0	4	}
label	41:0	41:4	2	fail :
call	42:4	42:23	2	av_packet_unref
arg	42:20	42:23	3	pkt
water	42:20	0:0	4	pkt
water	42:24	0:0	2	;
return	43:4	43:14	2	ret
water	43:11	0:0	3	ret

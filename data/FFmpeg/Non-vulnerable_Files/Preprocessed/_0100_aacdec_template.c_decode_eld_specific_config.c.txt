func	1:0	56:0	0	static int	decode_eld_specific_config
params	1:37	0:0	1	
param	1:38	1:52	2	AACContext *	ac
param	1:54	1:75	2	AVCodecContext *	avctx
param	2:37	2:54	2	GetBitContext *	gb
param	3:37	3:59	2	MPEG4AudioConfig *	m4ac
param	4:37	4:55	2	int	channel_config
stmnts	0:0	55:12	1	
decl	6:4	6:33	2	int	ret
water	6:11	0:0	2	,
decl	6:4	6:33	2	int	ep_config
water	6:22	0:0	2	,
decl	6:4	6:33	2	int	res_flags
water	7:4	0:0	2	uint8_t
water	7:12	0:0	2	layout_map
op	7:22	0:0	2	[
water	7:23	0:0	2	MAX_ELEM_ID
op	7:34	0:0	2	*
water	7:35	0:0	2	4
op	7:36	0:0	2	]
op	7:37	0:0	2	[
water	7:38	0:0	2	3
op	7:39	0:0	2	]
water	7:40	0:0	2	;
decl	8:4	8:16	2	int	tags
op	8:13	0:0	2	=
water	8:15	0:0	2	0
decl	9:4	9:29	2	const int	ELDEXT_TERM
op	9:26	0:0	2	=
water	9:28	0:0	2	0
water	10:4	0:0	2	m4ac
op	10:8	0:0	2	->
water	10:10	0:0	2	ps
op	10:14	0:0	2	=
water	10:16	0:0	2	0
water	10:17	0:0	2	;
water	11:4	0:0	2	m4ac
op	11:8	0:0	2	->
water	11:10	0:0	2	sbr
op	11:14	0:0	2	=
water	11:16	0:0	2	0
water	11:17	0:0	2	;
if	13:4	16:4	2	(get_bits1 (gb ))
cond	13:8	13:20	3	get_bits1 (gb )
call	13:8	13:20	4	get_bits1
arg	13:18	13:20	5	gb
water	13:18	0:0	6	gb
stmts	13:23	16:4	3	
water	13:23	0:0	4	{
call	14:8	14:58	4	avpriv_request_sample
arg	14:30	14:35	5	avctx
water	14:30	0:0	6	avctx
arg	14:37	14:58	5	"960/120 MDCT window"
water	14:37	0:0	6	"960/120 MDCT window"
water	14:59	0:0	4	;
return	15:8	15:35	4	AVERROR_PATCHWELCOME
water	15:15	0:0	5	AVERROR_PATCHWELCOME
water	16:4	0:0	4	}
water	18:4	0:0	2	m4ac
op	18:8	0:0	2	->
water	18:10	0:0	2	frame_length_short
op	18:29	0:0	2	=
call	18:31	18:43	2	get_bits1
arg	18:41	18:43	3	gb
water	18:41	0:0	4	gb
water	18:44	0:0	2	;
water	20:4	0:0	2	res_flags
op	20:14	0:0	2	=
call	20:16	20:30	2	get_bits
arg	20:25	20:27	3	gb
water	20:25	0:0	4	gb
arg	20:29	20:30	3	3
water	20:29	0:0	4	3
water	20:31	0:0	2	;
if	21:4	26:4	2	(res_flags)
cond	21:8	21:8	3	res_flags
water	21:8	0:0	4	res_flags
stmts	21:19	26:4	3	
water	21:19	0:0	4	{
call	22:8	24:47	4	avpriv_report_missing_feature
arg	22:38	22:43	5	avctx
water	22:38	0:0	6	avctx
arg	23:38	23:70	5	"AAC data resilience (flags %x)"
water	23:38	0:0	6	"AAC data resilience (flags %x)"
arg	24:38	24:47	5	res_flags
water	24:38	0:0	6	res_flags
water	24:48	0:0	4	;
return	25:8	25:35	4	AVERROR_PATCHWELCOME
water	25:15	0:0	5	AVERROR_PATCHWELCOME
water	26:4	0:0	4	}
if	27:4	31:4	2	(get_bits1 (gb ))
cond	27:8	27:20	3	get_bits1 (gb )
call	27:8	27:20	4	get_bits1
arg	27:18	27:20	5	gb
water	27:18	0:0	6	gb
stmts	27:23	31:4	3	
water	27:23	0:0	4	{
call	28:8	29:53	4	avpriv_report_missing_feature
arg	28:38	28:43	5	avctx
water	28:38	0:0	6	avctx
arg	29:38	29:53	5	"Low Delay SBR"
water	29:38	0:0	6	"Low Delay SBR"
water	29:54	0:0	4	;
return	30:8	30:35	4	AVERROR_PATCHWELCOME
water	30:15	0:0	5	AVERROR_PATCHWELCOME
water	31:4	0:0	4	}
while	32:4	43:4	2	(get_bits (gb ,4 ) != ELDEXT_TERM)
cond	32:11	32:30	3	get_bits (gb ,4 ) != ELDEXT_TERM
call	32:11	32:25	4	get_bits
arg	32:20	32:22	5	gb
water	32:20	0:0	6	gb
arg	32:24	32:25	5	4
water	32:24	0:0	6	4
op	32:27	0:0	4	!=
water	32:30	0:0	4	ELDEXT_TERM
stmts	32:43	43:4	3	
water	32:43	0:0	4	{
decl	33:8	33:33	4	int	len
op	33:16	0:0	4	=
call	33:18	33:32	5	get_bits
arg	33:27	33:29	6	gb
water	33:27	0:0	7	gb
arg	33:31	33:32	6	4
water	33:31	0:0	7	4
if	34:8	35:34	4	(len == 15)
cond	34:12	34:19	5	len == 15
water	34:12	0:0	6	len
op	34:16	0:0	6	==
water	34:19	0:0	6	15
stmts	35:12	35:34	5	
water	35:12	0:0	6	len
op	35:16	0:0	6	+=
call	35:19	35:33	6	get_bits
arg	35:28	35:30	7	gb
water	35:28	0:0	8	gb
arg	35:32	35:33	7	8
water	35:32	0:0	8	8
water	35:34	0:0	6	;
if	36:8	37:35	4	(len == 15 + 255)
cond	36:12	36:24	5	len == 15 + 255
water	36:12	0:0	6	len
op	36:16	0:0	6	==
water	36:19	0:0	6	15
op	36:22	0:0	6	+
water	36:24	0:0	6	255
stmts	37:12	37:35	5	
water	37:12	0:0	6	len
op	37:16	0:0	6	+=
call	37:19	37:34	6	get_bits
arg	37:28	37:30	7	gb
water	37:28	0:0	8	gb
arg	37:32	37:34	7	16
water	37:32	0:0	8	16
water	37:35	0:0	6	;
if	38:8	41:8	4	(get_bits_left (gb ) < len * 8 + 4)
cond	38:12	38:42	5	get_bits_left (gb ) < len * 8 + 4
call	38:12	38:28	6	get_bits_left
arg	38:26	38:28	7	gb
water	38:26	0:0	8	gb
op	38:30	0:0	6	<
water	38:32	0:0	6	len
op	38:36	0:0	6	*
water	38:38	0:0	6	8
op	38:40	0:0	6	+
water	38:42	0:0	6	4
stmts	38:45	41:8	5	
water	38:45	0:0	6	{
call	39:12	39:52	6	av_log
arg	39:19	39:24	7	avctx
water	39:19	0:0	8	avctx
arg	39:26	39:38	7	AV_LOG_ERROR
water	39:26	0:0	8	AV_LOG_ERROR
arg	39:40	39:52	7	overread_err
water	39:40	0:0	8	overread_err
water	39:53	0:0	6	;
return	40:12	40:38	6	AVERROR_INVALIDDATA
water	40:19	0:0	7	AVERROR_INVALIDDATA
water	41:8	0:0	6	}
call	42:8	42:34	4	skip_bits_long
arg	42:23	42:25	5	gb
water	42:23	0:0	6	gb
arg	42:27	42:34	5	8*len
water	42:27	0:0	6	8
op	42:29	0:0	6	*
water	42:31	0:0	6	len
water	42:35	0:0	4	;
water	43:4	0:0	4	}
if	44:4	46:18	2	(( ret =set_default_channel_config (avctx ,layout_map ,& tags ,channel_config ) ))
cond	44:8	45:64	3	( ret =set_default_channel_config (avctx ,layout_map ,& tags ,channel_config ) )
water	44:8	0:0	4	(
water	44:9	0:0	4	ret
op	44:13	0:0	4	=
call	44:15	45:63	4	set_default_channel_config
arg	44:42	44:47	5	avctx
water	44:42	0:0	6	avctx
arg	44:49	44:59	5	layout_map
water	44:49	0:0	6	layout_map
arg	45:42	45:47	5	&tags
op	45:42	0:0	6	&
water	45:43	0:0	6	tags
arg	45:49	45:63	5	channel_config
water	45:49	0:0	6	channel_config
water	45:64	0:0	4	)
stmts	46:8	46:18	3	
return	46:8	46:18	4	ret
water	46:15	0:0	5	ret
if	47:4	48:18	2	(ac && ( ret =output_configure (ac ,layout_map ,tags ,OC_GLOBAL_HDR ,0 ) ))
cond	47:8	47:77	3	ac && ( ret =output_configure (ac ,layout_map ,tags ,OC_GLOBAL_HDR ,0 ) )
water	47:8	0:0	4	ac
op	47:11	0:0	4	&&
water	47:14	0:0	4	(
water	47:15	0:0	4	ret
op	47:19	0:0	4	=
call	47:21	47:76	4	output_configure
arg	47:38	47:40	5	ac
water	47:38	0:0	6	ac
arg	47:42	47:52	5	layout_map
water	47:42	0:0	6	layout_map
arg	47:54	47:58	5	tags
water	47:54	0:0	6	tags
arg	47:60	47:73	5	OC_GLOBAL_HDR
water	47:60	0:0	6	OC_GLOBAL_HDR
arg	47:75	47:76	5	0
water	47:75	0:0	6	0
water	47:77	0:0	4	)
stmts	48:8	48:18	3	
return	48:8	48:18	4	ret
water	48:15	0:0	5	ret
water	49:4	0:0	2	ep_config
op	49:14	0:0	2	=
call	49:16	49:30	2	get_bits
arg	49:25	49:27	3	gb
water	49:25	0:0	4	gb
arg	49:29	49:30	3	2
water	49:29	0:0	4	2
water	49:31	0:0	2	;
if	50:4	54:4	2	(ep_config)
cond	50:8	50:8	3	ep_config
water	50:8	0:0	4	ep_config
stmts	50:19	54:4	3	
water	50:19	0:0	4	{
call	51:8	52:62	4	avpriv_report_missing_feature
arg	51:38	51:43	5	avctx
water	51:38	0:0	6	avctx
arg	52:38	52:51	5	"epConfig %d"
water	52:38	0:0	6	"epConfig %d"
arg	52:53	52:62	5	ep_config
water	52:53	0:0	6	ep_config
water	52:63	0:0	4	;
return	53:8	53:35	4	AVERROR_PATCHWELCOME
water	53:15	0:0	5	AVERROR_PATCHWELCOME
water	54:4	0:0	4	}
return	55:4	55:12	2	0
water	55:11	0:0	3	0

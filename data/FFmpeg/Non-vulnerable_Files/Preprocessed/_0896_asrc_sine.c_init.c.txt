func	1:15	15:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	14:12	1	
decl	3:4	3:33	2	SineContext	*sine
op	3:22	0:0	2	=
water	3:24	0:0	2	ctx
op	3:27	0:0	2	->
water	3:29	0:0	2	priv
if	4:4	5:30	2	(! ( sine -> sin =av_malloc (sizeof ( * sine -> sin ) << LOG_PERIOD ) ))
cond	4:8	4:65	3	! ( sine -> sin =av_malloc (sizeof ( * sine -> sin ) << LOG_PERIOD ) )
op	4:8	0:0	4	!
water	4:9	0:0	4	(
water	4:10	0:0	4	sine
op	4:14	0:0	4	->
water	4:16	0:0	4	sin
op	4:20	0:0	4	=
call	4:22	4:64	4	av_malloc
arg	4:32	4:64	5	sizeof(*sine->sin)<<LOG_PERIOD
op	4:32	0:0	6	sizeof
water	4:38	0:0	6	(
op	4:39	0:0	6	*
water	4:40	0:0	6	sine
op	4:44	0:0	6	->
water	4:46	0:0	6	sin
water	4:49	0:0	6	)
op	4:51	0:0	6	<<
water	4:54	0:0	6	LOG_PERIOD
water	4:65	0:0	4	)
stmts	5:8	5:30	3	
return	5:8	5:30	4	AVERROR(ENOMEM)
call	5:15	5:29	5	AVERROR
arg	5:23	5:29	6	ENOMEM
water	5:23	0:0	7	ENOMEM
water	6:4	0:0	2	sine
op	6:8	0:0	2	->
water	6:10	0:0	2	dphi
op	6:15	0:0	2	=
call	6:17	6:42	2	ldexp
arg	6:23	6:38	3	sine->frequency
water	6:23	0:0	4	sine
op	6:27	0:0	4	->
water	6:29	0:0	4	frequency
arg	6:40	6:42	3	32
water	6:40	0:0	4	32
op	6:44	0:0	2	/
water	6:46	0:0	2	sine
op	6:50	0:0	2	->
water	6:52	0:0	2	sample_rate
op	6:64	0:0	2	+
water	6:66	0:0	2	0
op	6:67	0:0	2	.
water	6:68	0:0	2	5
water	6:69	0:0	2	;
call	7:4	7:28	2	make_sin_table
arg	7:19	7:28	3	sine->sin
water	7:19	0:0	4	sine
op	7:23	0:0	4	->
water	7:25	0:0	4	sin
water	7:29	0:0	2	;
if	8:4	13:4	2	(sine -> beep_factor)
cond	8:8	8:14	3	sine -> beep_factor
water	8:8	0:0	4	sine
op	8:12	0:0	4	->
water	8:14	0:0	4	beep_factor
stmts	8:27	13:4	3	
water	8:27	0:0	4	{
water	9:8	0:0	4	sine
op	9:12	0:0	4	->
water	9:14	0:0	4	beep_period
op	9:26	0:0	4	=
water	9:28	0:0	4	sine
op	9:32	0:0	4	->
water	9:34	0:0	4	sample_rate
water	9:45	0:0	4	;
water	10:8	0:0	4	sine
op	10:12	0:0	4	->
water	10:14	0:0	4	beep_length
op	10:26	0:0	4	=
water	10:28	0:0	4	sine
op	10:32	0:0	4	->
water	10:34	0:0	4	beep_period
op	10:46	0:0	4	/
water	10:48	0:0	4	25
water	10:50	0:0	4	;
water	11:8	0:0	4	sine
op	11:12	0:0	4	->
water	11:14	0:0	4	dphi_beep
op	11:24	0:0	4	=
call	11:26	11:71	4	ldexp
arg	11:32	11:67	5	sine->beep_factor*sine->frequency
water	11:32	0:0	6	sine
op	11:36	0:0	6	->
water	11:38	0:0	6	beep_factor
op	11:50	0:0	6	*
water	11:52	0:0	6	sine
op	11:56	0:0	6	->
water	11:58	0:0	6	frequency
arg	11:69	11:71	5	32
water	11:69	0:0	6	32
op	11:73	0:0	4	/
water	12:26	0:0	4	sine
op	12:30	0:0	4	->
water	12:32	0:0	4	sample_rate
op	12:44	0:0	4	+
water	12:46	0:0	4	0
op	12:47	0:0	4	.
water	12:48	0:0	4	5
water	12:49	0:0	4	;
water	13:4	0:0	4	}
return	14:4	14:12	2	0
water	14:11	0:0	3	0

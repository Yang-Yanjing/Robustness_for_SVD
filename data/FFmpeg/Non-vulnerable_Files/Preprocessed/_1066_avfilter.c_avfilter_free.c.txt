func	1:0	33:0	0	void	avfilter_free
params	1:18	0:0	1	
param	1:19	1:42	2	AVFilterContext *	filter
stmnts	0:0	32:19	1	
decl	3:4	3:9	2	int	i
if	4:4	5:14	2	(! filter)
cond	4:8	4:9	3	! filter
op	4:8	0:0	4	!
water	4:9	0:0	4	filter
stmts	5:8	5:14	3	
return	5:8	5:14	4	
if	6:4	7:60	2	(filter -> graph)
cond	6:8	6:16	3	filter -> graph
water	6:8	0:0	4	filter
op	6:14	0:0	4	->
water	6:16	0:0	4	graph
stmts	7:8	7:60	3	
call	7:8	7:59	4	ff_filter_graph_remove_filter
arg	7:38	7:51	5	filter->graph
water	7:38	0:0	6	filter
op	7:44	0:0	6	->
water	7:46	0:0	6	graph
arg	7:53	7:59	5	filter
water	7:53	0:0	6	filter
water	7:60	0:0	4	;
if	8:4	9:38	2	(filter -> filter -> uninit)
cond	8:8	8:24	3	filter -> filter -> uninit
water	8:8	0:0	4	filter
op	8:14	0:0	4	->
water	8:16	0:0	4	filter
op	8:22	0:0	4	->
water	8:24	0:0	4	uninit
stmts	9:8	9:38	3	
call	9:8	9:37	4	filter->filter->uninit
arg	9:31	9:37	5	filter
water	9:31	0:0	6	filter
water	9:38	0:0	4	;
for	10:4	12:4	2	(i = 0 ;i < filter -> nb_inputs;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:28	3	i < filter -> nb_inputs
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	filter
op	10:26	0:0	4	->
water	10:28	0:0	4	nb_inputs
forexpr	10:39	10:40	3	i ++
water	10:39	0:0	4	i
op	10:40	0:0	4	++
stmts	10:44	12:4	3	
water	10:44	0:0	4	{
call	11:8	11:35	4	free_link
arg	11:18	11:35	5	filter->inputs[i]
water	11:18	0:0	6	filter
op	11:24	0:0	6	->
water	11:26	0:0	6	inputs
op	11:32	0:0	6	[
water	11:33	0:0	6	i
op	11:34	0:0	6	]
water	11:36	0:0	4	;
water	12:4	0:0	4	}
for	13:4	15:4	2	(i = 0 ;i < filter -> nb_outputs;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:28	3	i < filter -> nb_outputs
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	filter
op	13:26	0:0	4	->
water	13:28	0:0	4	nb_outputs
forexpr	13:40	13:41	3	i ++
water	13:40	0:0	4	i
op	13:41	0:0	4	++
stmts	13:45	15:4	3	
water	13:45	0:0	4	{
call	14:8	14:36	4	free_link
arg	14:18	14:36	5	filter->outputs[i]
water	14:18	0:0	6	filter
op	14:24	0:0	6	->
water	14:26	0:0	6	outputs
op	14:33	0:0	6	[
water	14:34	0:0	6	i
op	14:35	0:0	6	]
water	14:37	0:0	4	;
water	15:4	0:0	4	}
if	16:4	17:33	2	(filter -> filter -> priv_class)
cond	16:8	16:24	3	filter -> filter -> priv_class
water	16:8	0:0	4	filter
op	16:14	0:0	4	->
water	16:16	0:0	4	filter
op	16:22	0:0	4	->
water	16:24	0:0	4	priv_class
stmts	17:8	17:33	3	
call	17:8	17:32	4	av_opt_free
arg	17:20	17:32	5	filter->priv
water	17:20	0:0	6	filter
op	17:26	0:0	6	->
water	17:28	0:0	6	priv
water	17:33	0:0	4	;
call	18:4	18:26	2	av_freep
arg	18:13	18:26	3	&filter->name
op	18:13	0:0	4	&
water	18:14	0:0	4	filter
op	18:20	0:0	4	->
water	18:22	0:0	4	name
water	18:27	0:0	2	;
call	19:4	19:32	2	av_freep
arg	19:13	19:32	3	&filter->input_pads
op	19:13	0:0	4	&
water	19:14	0:0	4	filter
op	19:20	0:0	4	->
water	19:22	0:0	4	input_pads
water	19:33	0:0	2	;
call	20:4	20:33	2	av_freep
arg	20:13	20:33	3	&filter->output_pads
op	20:13	0:0	4	&
water	20:14	0:0	4	filter
op	20:20	0:0	4	->
water	20:22	0:0	4	output_pads
water	20:34	0:0	2	;
call	21:4	21:28	2	av_freep
arg	21:13	21:28	3	&filter->inputs
op	21:13	0:0	4	&
water	21:14	0:0	4	filter
op	21:20	0:0	4	->
water	21:22	0:0	4	inputs
water	21:29	0:0	2	;
call	22:4	22:29	2	av_freep
arg	22:13	22:29	3	&filter->outputs
op	22:13	0:0	4	&
water	22:14	0:0	4	filter
op	22:20	0:0	4	->
water	22:22	0:0	4	outputs
water	22:30	0:0	2	;
call	23:4	23:26	2	av_freep
arg	23:13	23:26	3	&filter->priv
op	23:13	0:0	4	&
water	23:14	0:0	4	filter
op	23:20	0:0	4	->
water	23:22	0:0	4	priv
water	23:27	0:0	2	;
while	24:4	26:4	2	(filter -> command_queue)
cond	24:10	24:18	3	filter -> command_queue
water	24:10	0:0	4	filter
op	24:16	0:0	4	->
water	24:18	0:0	4	command_queue
stmts	24:32	26:4	3	
water	24:32	0:0	4	{
call	25:8	25:35	4	ff_command_queue_pop
arg	25:29	25:35	5	filter
water	25:29	0:0	6	filter
water	25:36	0:0	4	;
water	26:4	0:0	4	}
call	27:4	27:22	2	av_opt_free
arg	27:16	27:22	3	filter
water	27:16	0:0	4	filter
water	27:23	0:0	2	;
call	28:4	28:31	2	av_expr_free
arg	28:17	28:31	3	filter->enable
water	28:17	0:0	4	filter
op	28:23	0:0	4	->
water	28:25	0:0	4	enable
water	28:32	0:0	2	;
water	29:4	0:0	2	filter
op	29:10	0:0	2	->
water	29:12	0:0	2	enable
op	29:19	0:0	2	=
water	29:21	0:0	2	NULL
water	29:25	0:0	2	;
call	30:4	30:32	2	av_freep
arg	30:13	30:32	3	&filter->var_values
op	30:13	0:0	4	&
water	30:14	0:0	4	filter
op	30:20	0:0	4	->
water	30:22	0:0	4	var_values
water	30:33	0:0	2	;
call	31:4	31:30	2	av_freep
arg	31:13	31:30	3	&filter->internal
op	31:13	0:0	4	&
water	31:14	0:0	4	filter
op	31:20	0:0	4	->
water	31:22	0:0	4	internal
water	31:31	0:0	2	;
call	32:4	32:18	2	av_free
arg	32:12	32:18	3	filter
water	32:12	0:0	4	filter
water	32:19	0:0	2	;

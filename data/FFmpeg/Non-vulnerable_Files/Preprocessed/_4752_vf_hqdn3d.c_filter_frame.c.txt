func	1:0	34:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	33:40	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
decl	4:4	4:32	2	HQDN3DContext	*s
op	4:21	0:0	2	=
water	4:23	0:0	2	ctx
op	4:26	0:0	2	->
water	4:28	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:16	2	AVFrame	*out
decl	7:4	7:65	2	int	c
water	7:9	0:0	2	,
decl	7:4	7:65	2	int	direct
op	7:18	0:0	2	=
call	7:20	7:43	3	av_frame_is_writable
arg	7:41	7:43	4	in
water	7:41	0:0	5	in
op	7:45	0:0	2	&&
op	7:48	0:0	2	!
water	7:49	0:0	2	ctx
op	7:52	0:0	2	->
water	7:54	0:0	2	is_disabled
if	8:4	10:4	2	(direct)
cond	8:8	8:8	3	direct
water	8:8	0:0	4	direct
stmts	8:16	10:4	3	
water	8:16	0:0	4	{
water	9:8	0:0	4	out
op	9:12	0:0	4	=
water	9:14	0:0	4	in
water	9:16	0:0	4	;
water	10:4	0:0	4	}
else	10:6	17:4	2
stmts	10:11	17:4	3	
water	10:11	0:0	4	{
water	11:8	0:0	4	out
op	11:12	0:0	4	=
call	11:14	11:65	4	ff_get_video_buffer
arg	11:34	11:41	5	outlink
water	11:34	0:0	6	outlink
arg	11:43	11:53	5	outlink->w
water	11:43	0:0	6	outlink
op	11:50	0:0	6	->
water	11:52	0:0	6	w
arg	11:55	11:65	5	outlink->h
water	11:55	0:0	6	outlink
op	11:62	0:0	6	->
water	11:64	0:0	6	h
water	11:66	0:0	4	;
if	12:8	15:8	4	(! out)
cond	12:12	12:13	5	! out
op	12:12	0:0	6	!
water	12:13	0:0	6	out
stmts	12:18	15:8	5	
water	12:18	0:0	6	{
call	13:12	13:29	6	av_frame_free
arg	13:26	13:29	7	&in
op	13:26	0:0	8	&
water	13:27	0:0	8	in
water	13:30	0:0	6	;
return	14:12	14:34	6	AVERROR(ENOMEM)
call	14:19	14:33	7	AVERROR
arg	14:27	14:33	8	ENOMEM
water	14:27	0:0	9	ENOMEM
water	15:8	0:0	6	}
call	16:8	16:35	4	av_frame_copy_props
arg	16:28	16:31	5	out
water	16:28	0:0	6	out
arg	16:33	16:35	5	in
water	16:33	0:0	6	in
water	16:36	0:0	4	;
water	17:4	0:0	4	}
for	18:4	26:4	2	(c = 0 ;c < 3;c ++)
forinit	18:9	18:14	3	c = 0 ;
water	18:9	0:0	4	c
op	18:11	0:0	4	=
water	18:13	0:0	4	0
water	18:14	0:0	4	;
cond	18:16	18:20	3	c < 3
water	18:16	0:0	4	c
op	18:18	0:0	4	<
water	18:20	0:0	4	3
forexpr	18:23	18:24	3	c ++
water	18:23	0:0	4	c
op	18:24	0:0	4	++
stmts	18:28	26:4	3	
water	18:28	0:0	4	{
call	19:8	25:55	4	denoise
arg	19:16	19:17	5	s
water	19:16	0:0	6	s
arg	19:19	19:30	5	in->data[c]
water	19:19	0:0	6	in
op	19:21	0:0	6	->
water	19:23	0:0	6	data
op	19:27	0:0	6	[
water	19:28	0:0	6	c
op	19:29	0:0	6	]
arg	19:32	19:44	5	out->data[c]
water	19:32	0:0	6	out
op	19:35	0:0	6	->
water	19:37	0:0	6	data
op	19:41	0:0	6	[
water	19:42	0:0	6	c
op	19:43	0:0	6	]
arg	20:16	20:23	5	s->line
water	20:16	0:0	6	s
op	20:17	0:0	6	->
water	20:19	0:0	6	line
arg	20:25	20:42	5	&s->frame_prev[c]
op	20:25	0:0	6	&
water	20:26	0:0	6	s
op	20:27	0:0	6	->
water	20:29	0:0	6	frame_prev
op	20:39	0:0	6	[
water	20:40	0:0	6	c
op	20:41	0:0	6	]
arg	21:16	21:59	5	FF_CEIL_RSHIFT(in->width,(!!c*s->hsub))
call	21:16	21:58	6	FF_CEIL_RSHIFT
arg	21:31	21:40	7	in->width
water	21:31	0:0	8	in
op	21:33	0:0	8	->
water	21:35	0:0	8	width
arg	21:43	21:58	7	(!!c*s->hsub)
water	21:43	0:0	8	(
op	21:44	0:0	8	!
op	21:45	0:0	8	!
water	21:46	0:0	8	c
op	21:48	0:0	8	*
water	21:50	0:0	8	s
op	21:51	0:0	8	->
water	21:53	0:0	8	hsub
water	21:57	0:0	8	)
arg	22:16	22:59	5	FF_CEIL_RSHIFT(in->height,(!!c*s->vsub))
call	22:16	22:58	6	FF_CEIL_RSHIFT
arg	22:31	22:41	7	in->height
water	22:31	0:0	8	in
op	22:33	0:0	8	->
water	22:35	0:0	8	height
arg	22:43	22:58	7	(!!c*s->vsub)
water	22:43	0:0	8	(
op	22:44	0:0	8	!
op	22:45	0:0	8	!
water	22:46	0:0	8	c
op	22:48	0:0	8	*
water	22:50	0:0	8	s
op	22:51	0:0	8	->
water	22:53	0:0	8	vsub
water	22:57	0:0	8	)
arg	23:16	23:31	5	in->linesize[c]
water	23:16	0:0	6	in
op	23:18	0:0	6	->
water	23:20	0:0	6	linesize
op	23:28	0:0	6	[
water	23:29	0:0	6	c
op	23:30	0:0	6	]
arg	23:33	23:49	5	out->linesize[c]
water	23:33	0:0	6	out
op	23:36	0:0	6	->
water	23:38	0:0	6	linesize
op	23:46	0:0	6	[
water	23:47	0:0	6	c
op	23:48	0:0	6	]
arg	24:16	24:59	5	s->coefs[c?CHROMA_SPATIAL:LUMA_SPATIAL]
water	24:16	0:0	6	s
op	24:17	0:0	6	->
water	24:19	0:0	6	coefs
op	24:24	0:0	6	[
water	24:25	0:0	6	c
water	24:27	0:0	6	?
water	24:29	0:0	6	CHROMA_SPATIAL
water	24:44	0:0	6	:
water	24:46	0:0	6	LUMA_SPATIAL
op	24:58	0:0	6	]
arg	25:16	25:55	5	s->coefs[c?CHROMA_TMP:LUMA_TMP]
water	25:16	0:0	6	s
op	25:17	0:0	6	->
water	25:19	0:0	6	coefs
op	25:24	0:0	6	[
water	25:25	0:0	6	c
water	25:27	0:0	6	?
water	25:29	0:0	6	CHROMA_TMP
water	25:44	0:0	6	:
water	25:46	0:0	6	LUMA_TMP
op	25:54	0:0	6	]
water	25:56	0:0	4	;
water	26:4	0:0	4	}
if	27:4	30:4	2	(ctx -> is_disabled)
cond	27:8	27:13	3	ctx -> is_disabled
water	27:8	0:0	4	ctx
op	27:11	0:0	4	->
water	27:13	0:0	4	is_disabled
stmts	27:26	30:4	3	
water	27:26	0:0	4	{
call	28:8	28:26	4	av_frame_free
arg	28:22	28:26	5	&out
op	28:22	0:0	6	&
water	28:23	0:0	6	out
water	28:27	0:0	4	;
return	29:8	29:43	4	ff_filter_frame(outlink,in)
call	29:15	29:42	5	ff_filter_frame
arg	29:31	29:38	6	outlink
water	29:31	0:0	7	outlink
arg	29:40	29:42	6	in
water	29:40	0:0	7	in
water	30:4	0:0	4	}
if	31:4	32:26	2	(! direct)
cond	31:8	31:9	3	! direct
op	31:8	0:0	4	!
water	31:9	0:0	4	direct
stmts	32:8	32:26	3	
call	32:8	32:25	4	av_frame_free
arg	32:22	32:25	5	&in
op	32:22	0:0	6	&
water	32:23	0:0	6	in
water	32:26	0:0	4	;
return	33:4	33:40	2	ff_filter_frame(outlink,out)
call	33:11	33:39	3	ff_filter_frame
arg	33:27	33:34	4	outlink
water	33:27	0:0	5	outlink
arg	33:36	33:39	4	out
water	33:36	0:0	5	out

func	1:5	78:0	0	AAC_RENAME	(ff_sbr_apply)
params	1:29	0:0	1	
param	1:30	1:44	2	AACContext *	ac
param	1:46	1:74	2	SpectralBandReplication *	sbr
param	1:76	1:86	2	int	id_aac
param	2:18	2:29	2	INTFLOAT *	L
param	2:31	2:42	2	INTFLOAT *	R
stmnts	0:0	77:38	1	
decl	4:4	4:71	2	int	downsampled
op	4:20	0:0	2	=
water	4:22	0:0	2	ac
op	4:24	0:0	2	->
water	4:26	0:0	2	oc
op	4:28	0:0	2	[
water	4:29	0:0	2	1
op	4:30	0:0	2	]
op	4:31	0:0	2	.
water	4:32	0:0	2	m4ac
op	4:36	0:0	2	.
water	4:37	0:0	2	ext_sample_rate
op	4:53	0:0	2	<
water	4:55	0:0	2	sbr
op	4:58	0:0	2	->
water	4:60	0:0	2	sample_rate
decl	5:4	5:10	2	int	ch
decl	6:4	6:42	2	int	nch
op	6:12	0:0	2	=
water	6:14	0:0	2	(
water	6:15	0:0	2	id_aac
op	6:22	0:0	2	==
water	6:25	0:0	2	TYPE_CPE
water	6:33	0:0	2	)
water	6:35	0:0	2	?
water	6:37	0:0	2	2
water	6:39	0:0	2	:
water	6:41	0:0	2	1
decl	7:4	7:11	2	int	err
if	8:4	12:4	2	(id_aac != sbr -> id_aac)
cond	8:8	8:23	3	id_aac != sbr -> id_aac
water	8:8	0:0	4	id_aac
op	8:15	0:0	4	!=
water	8:18	0:0	4	sbr
op	8:21	0:0	4	->
water	8:23	0:0	4	id_aac
stmts	8:31	12:4	3	
water	8:31	0:0	4	{
call	9:8	10:67	4	av_log
arg	9:15	9:24	5	ac->avctx
water	9:15	0:0	6	ac
op	9:17	0:0	6	->
water	9:19	0:0	6	avctx
arg	9:26	9:38	5	AV_LOG_ERROR
water	9:26	0:0	6	AV_LOG_ERROR
arg	10:12	10:46	5	"element type mismatch %d != %d\n"
water	10:12	0:0	6	"element type mismatch %d != %d\n"
arg	10:48	10:54	5	id_aac
water	10:48	0:0	6	id_aac
arg	10:56	10:67	5	sbr->id_aac
water	10:56	0:0	6	sbr
op	10:59	0:0	6	->
water	10:61	0:0	6	id_aac
water	10:68	0:0	4	;
call	11:8	11:23	4	sbr_turnoff
arg	11:20	11:23	5	sbr
water	11:20	0:0	6	sbr
water	11:24	0:0	4	;
water	12:4	0:0	4	}
if	13:4	16:4	2	(! sbr -> kx_and_m_pushed)
cond	13:8	13:14	3	! sbr -> kx_and_m_pushed
op	13:8	0:0	4	!
water	13:9	0:0	4	sbr
op	13:12	0:0	4	->
water	13:14	0:0	4	kx_and_m_pushed
stmts	13:31	16:4	3	
water	13:31	0:0	4	{
water	14:8	0:0	4	sbr
op	14:11	0:0	4	->
water	14:13	0:0	4	kx
op	14:15	0:0	4	[
water	14:16	0:0	4	0
op	14:17	0:0	4	]
op	14:19	0:0	4	=
water	14:21	0:0	4	sbr
op	14:24	0:0	4	->
water	14:26	0:0	4	kx
op	14:28	0:0	4	[
water	14:29	0:0	4	1
op	14:30	0:0	4	]
water	14:31	0:0	4	;
water	15:8	0:0	4	sbr
op	15:11	0:0	4	->
water	15:13	0:0	4	m
op	15:14	0:0	4	[
water	15:15	0:0	4	0
op	15:16	0:0	4	]
op	15:18	0:0	4	=
water	15:20	0:0	4	sbr
op	15:23	0:0	4	->
water	15:25	0:0	4	m
op	15:26	0:0	4	[
water	15:27	0:0	4	1
op	15:28	0:0	4	]
water	15:29	0:0	4	;
water	16:4	0:0	4	}
else	16:6	18:4	2
stmts	16:11	18:4	3	
water	16:11	0:0	4	{
water	17:8	0:0	4	sbr
op	17:11	0:0	4	->
water	17:13	0:0	4	kx_and_m_pushed
op	17:29	0:0	4	=
water	17:31	0:0	4	0
water	17:32	0:0	4	;
water	18:4	0:0	4	}
if	19:4	21:4	2	(sbr -> start)
cond	19:8	19:13	3	sbr -> start
water	19:8	0:0	4	sbr
op	19:11	0:0	4	->
water	19:13	0:0	4	start
stmts	19:20	21:4	3	
water	19:20	0:0	4	{
call	20:8	20:31	4	sbr_dequant
arg	20:20	20:23	5	sbr
water	20:20	0:0	6	sbr
arg	20:25	20:31	5	id_aac
water	20:25	0:0	6	id_aac
water	20:32	0:0	4	;
water	21:4	0:0	4	}
for	22:4	58:4	2	(ch = 0 ;ch < nch;ch ++)
forinit	22:9	22:15	3	ch = 0 ;
water	22:9	0:0	4	ch
op	22:12	0:0	4	=
water	22:14	0:0	4	0
water	22:15	0:0	4	;
cond	22:17	22:22	3	ch < nch
water	22:17	0:0	4	ch
op	22:20	0:0	4	<
water	22:22	0:0	4	nch
forexpr	22:27	22:29	3	ch ++
water	22:27	0:0	4	ch
op	22:29	0:0	4	++
stmts	22:33	58:4	3	
water	22:33	0:0	4	{
call	24:8	26:60	4	sbr_qmf_analysis
arg	24:25	24:33	5	ac->fdsp
water	24:25	0:0	6	ac
op	24:27	0:0	6	->
water	24:29	0:0	6	fdsp
arg	24:35	24:49	5	&sbr->mdct_ana
op	24:35	0:0	6	&
water	24:36	0:0	6	sbr
op	24:39	0:0	6	->
water	24:41	0:0	6	mdct_ana
arg	24:51	24:60	5	&sbr->dsp
op	24:51	0:0	6	&
water	24:52	0:0	6	sbr
op	24:55	0:0	6	->
water	24:57	0:0	6	dsp
arg	24:62	24:72	5	ch?R:L
water	24:62	0:0	6	ch
water	24:65	0:0	6	?
water	24:67	0:0	6	R
water	24:69	0:0	6	:
water	24:71	0:0	6	L
arg	24:74	24:115	5	sbr->data[ch].analysis_filterbank_samples
water	24:74	0:0	6	sbr
op	24:77	0:0	6	->
water	24:79	0:0	6	data
op	24:83	0:0	6	[
water	24:84	0:0	6	ch
op	24:86	0:0	6	]
op	24:87	0:0	6	.
water	24:88	0:0	6	analysis_filterbank_samples
arg	25:25	25:59	5	(INTFLOAT*)sbr->qmf_filter_scratch
water	25:25	0:0	6	(
water	25:26	0:0	6	INTFLOAT
op	25:34	0:0	6	*
water	25:35	0:0	6	)
water	25:36	0:0	6	sbr
op	25:39	0:0	6	->
water	25:41	0:0	6	qmf_filter_scratch
arg	26:25	26:40	5	sbr->data[ch].W
water	26:25	0:0	6	sbr
op	26:28	0:0	6	->
water	26:30	0:0	6	data
op	26:34	0:0	6	[
water	26:35	0:0	6	ch
op	26:37	0:0	6	]
op	26:38	0:0	6	.
water	26:39	0:0	6	W
arg	26:42	26:60	5	sbr->data[ch].Ypos
water	26:42	0:0	6	sbr
op	26:45	0:0	6	->
water	26:47	0:0	6	data
op	26:51	0:0	6	[
water	26:52	0:0	6	ch
op	26:54	0:0	6	]
op	26:55	0:0	6	.
water	26:56	0:0	6	Ypos
water	26:61	0:0	4	;
call	27:8	29:44	4	sbr->c.sbr_lf_gen
arg	27:26	27:28	5	ac
water	27:26	0:0	6	ac
arg	27:30	27:33	5	sbr
water	27:30	0:0	6	sbr
arg	27:35	27:45	5	sbr->X_low
water	27:35	0:0	6	sbr
op	27:38	0:0	6	->
water	27:40	0:0	6	X_low
arg	28:26	28:73	5	(constINTFLOAT(*)[32][32][2])sbr->data[ch].W
water	28:26	0:0	6	(
water	28:27	0:0	6	const
call	28:33	28:44	6	INTFLOAT
arg	28:43	28:44	7	*
op	28:43	0:0	8	*
op	28:45	0:0	6	[
water	28:46	0:0	6	32
op	28:48	0:0	6	]
op	28:49	0:0	6	[
water	28:50	0:0	6	32
op	28:52	0:0	6	]
op	28:53	0:0	6	[
water	28:54	0:0	6	2
op	28:55	0:0	6	]
water	28:56	0:0	6	)
water	28:58	0:0	6	sbr
op	28:61	0:0	6	->
water	28:63	0:0	6	data
op	28:67	0:0	6	[
water	28:68	0:0	6	ch
op	28:70	0:0	6	]
op	28:71	0:0	6	.
water	28:72	0:0	6	W
arg	29:26	29:44	5	sbr->data[ch].Ypos
water	29:26	0:0	6	sbr
op	29:29	0:0	6	->
water	29:31	0:0	6	data
op	29:35	0:0	6	[
water	29:36	0:0	6	ch
op	29:38	0:0	6	]
op	29:39	0:0	6	.
water	29:40	0:0	6	Ypos
water	29:45	0:0	4	;
water	30:8	0:0	4	sbr
op	30:11	0:0	4	->
water	30:13	0:0	4	data
op	30:17	0:0	4	[
water	30:18	0:0	4	ch
op	30:20	0:0	4	]
op	30:21	0:0	4	.
water	30:22	0:0	4	Ypos
op	30:27	0:0	4	^=
water	30:30	0:0	4	1
water	30:31	0:0	4	;
if	31:8	52:8	4	(sbr -> start)
cond	31:12	31:17	5	sbr -> start
water	31:12	0:0	6	sbr
op	31:15	0:0	6	->
water	31:17	0:0	6	start
stmts	31:24	52:8	5	
water	31:24	0:0	6	{
call	32:12	33:90	6	sbr->c.sbr_hf_inverse_filter
arg	32:41	32:50	7	&sbr->dsp
op	32:41	0:0	8	&
water	32:42	0:0	8	sbr
op	32:45	0:0	8	->
water	32:47	0:0	8	dsp
arg	32:52	32:63	7	sbr->alpha0
water	32:52	0:0	8	sbr
op	32:55	0:0	8	->
water	32:57	0:0	8	alpha0
arg	32:65	32:76	7	sbr->alpha1
water	32:65	0:0	8	sbr
op	32:68	0:0	8	->
water	32:70	0:0	8	alpha1
arg	33:41	33:79	7	(constINTFLOAT(*)[40][2])sbr->X_low
water	33:41	0:0	8	(
water	33:42	0:0	8	const
call	33:48	33:59	8	INTFLOAT
arg	33:58	33:59	9	*
op	33:58	0:0	10	*
op	33:60	0:0	8	[
water	33:61	0:0	8	40
op	33:63	0:0	8	]
op	33:64	0:0	8	[
water	33:65	0:0	8	2
op	33:66	0:0	8	]
water	33:67	0:0	8	)
water	33:69	0:0	8	sbr
op	33:72	0:0	8	->
water	33:74	0:0	8	X_low
arg	33:81	33:90	7	sbr->k[0]
water	33:81	0:0	8	sbr
op	33:84	0:0	8	->
water	33:86	0:0	8	k
op	33:87	0:0	8	[
water	33:88	0:0	8	0
op	33:89	0:0	8	]
water	33:91	0:0	6	;
call	34:12	34:41	6	sbr_chirp
arg	34:22	34:25	7	sbr
water	34:22	0:0	8	sbr
arg	34:27	34:41	7	&sbr->data[ch]
op	34:27	0:0	8	&
water	34:28	0:0	8	sbr
op	34:31	0:0	8	->
water	34:33	0:0	8	data
op	34:37	0:0	8	[
water	34:38	0:0	8	ch
op	34:40	0:0	8	]
water	34:42	0:0	6	;
call	35:12	35:51	6	av_assert0
arg	35:23	35:51	7	sbr->data[ch].bs_num_env>0
water	35:23	0:0	8	sbr
op	35:26	0:0	8	->
water	35:28	0:0	8	data
op	35:32	0:0	8	[
water	35:33	0:0	8	ch
op	35:35	0:0	8	]
op	35:36	0:0	8	.
water	35:37	0:0	8	bs_num_env
op	35:48	0:0	8	>
water	35:50	0:0	8	0
water	35:52	0:0	6	;
call	36:12	41:47	6	sbr_hf_gen
arg	36:23	36:25	7	ac
water	36:23	0:0	8	ac
arg	36:27	36:30	7	sbr
water	36:27	0:0	8	sbr
arg	36:32	36:43	7	sbr->X_high
water	36:32	0:0	8	sbr
op	36:35	0:0	8	->
water	36:37	0:0	8	X_high
arg	37:23	37:61	7	(constINTFLOAT(*)[40][2])sbr->X_low
water	37:23	0:0	8	(
water	37:24	0:0	8	const
call	37:30	37:41	8	INTFLOAT
arg	37:40	37:41	9	*
op	37:40	0:0	10	*
op	37:42	0:0	8	[
water	37:43	0:0	8	40
op	37:45	0:0	8	]
op	37:46	0:0	8	[
water	37:47	0:0	8	2
op	37:48	0:0	8	]
water	37:49	0:0	8	)
water	37:51	0:0	8	sbr
op	37:54	0:0	8	->
water	37:56	0:0	8	X_low
arg	38:23	38:58	7	(constINTFLOAT(*)[2])sbr->alpha0
water	38:23	0:0	8	(
water	38:24	0:0	8	const
call	38:30	38:41	8	INTFLOAT
arg	38:40	38:41	9	*
op	38:40	0:0	10	*
op	38:42	0:0	8	[
water	38:43	0:0	8	2
op	38:44	0:0	8	]
water	38:45	0:0	8	)
water	38:47	0:0	8	sbr
op	38:50	0:0	8	->
water	38:52	0:0	8	alpha0
arg	39:23	39:58	7	(constINTFLOAT(*)[2])sbr->alpha1
water	39:23	0:0	8	(
water	39:24	0:0	8	const
call	39:30	39:41	8	INTFLOAT
arg	39:40	39:41	9	*
op	39:40	0:0	10	*
op	39:42	0:0	8	[
water	39:43	0:0	8	2
op	39:44	0:0	8	]
water	39:45	0:0	8	)
water	39:47	0:0	8	sbr
op	39:50	0:0	8	->
water	39:52	0:0	8	alpha1
arg	40:23	40:45	7	sbr->data[ch].bw_array
water	40:23	0:0	8	sbr
op	40:26	0:0	8	->
water	40:28	0:0	8	data
op	40:32	0:0	8	[
water	40:33	0:0	8	ch
op	40:35	0:0	8	]
op	40:36	0:0	8	.
water	40:37	0:0	8	bw_array
arg	40:47	40:66	7	sbr->data[ch].t_env
water	40:47	0:0	8	sbr
op	40:50	0:0	8	->
water	40:52	0:0	8	data
op	40:56	0:0	8	[
water	40:57	0:0	8	ch
op	40:59	0:0	8	]
op	40:60	0:0	8	.
water	40:61	0:0	8	t_env
arg	41:23	41:47	7	sbr->data[ch].bs_num_env
water	41:23	0:0	8	sbr
op	41:26	0:0	8	->
water	41:28	0:0	8	data
op	41:32	0:0	8	[
water	41:33	0:0	8	ch
op	41:35	0:0	8	]
op	41:36	0:0	8	.
water	41:37	0:0	8	bs_num_env
water	41:48	0:0	6	;
water	43:12	0:0	6	err
op	43:16	0:0	6	=
call	43:18	43:72	6	sbr_mapping
arg	43:30	43:32	7	ac
water	43:30	0:0	8	ac
arg	43:34	43:37	7	sbr
water	43:34	0:0	8	sbr
arg	43:39	43:53	7	&sbr->data[ch]
op	43:39	0:0	8	&
water	43:40	0:0	8	sbr
op	43:43	0:0	8	->
water	43:45	0:0	8	data
op	43:49	0:0	8	[
water	43:50	0:0	8	ch
op	43:52	0:0	8	]
arg	43:55	43:72	7	sbr->data[ch].e_a
water	43:55	0:0	8	sbr
op	43:58	0:0	8	->
water	43:60	0:0	8	data
op	43:64	0:0	8	[
water	43:65	0:0	8	ch
op	43:67	0:0	8	]
op	43:68	0:0	8	.
water	43:69	0:0	8	e_a
water	43:73	0:0	6	;
if	44:12	51:12	6	(! err)
cond	44:16	44:17	7	! err
op	44:16	0:0	8	!
water	44:17	0:0	8	err
stmts	44:22	51:12	7	
water	44:22	0:0	8	{
call	45:16	45:78	8	sbr_env_estimate
arg	45:33	45:44	9	sbr->e_curr
water	45:33	0:0	10	sbr
op	45:36	0:0	10	->
water	45:38	0:0	10	e_curr
arg	45:46	45:57	9	sbr->X_high
water	45:46	0:0	10	sbr
op	45:49	0:0	10	->
water	45:51	0:0	10	X_high
arg	45:59	45:62	9	sbr
water	45:59	0:0	10	sbr
arg	45:64	45:78	9	&sbr->data[ch]
op	45:64	0:0	10	&
water	45:65	0:0	10	sbr
op	45:68	0:0	10	->
water	45:70	0:0	10	data
op	45:74	0:0	10	[
water	45:75	0:0	10	ch
op	45:77	0:0	10	]
water	45:79	0:0	8	;
call	46:16	46:72	8	sbr_gain_calc
arg	46:30	46:32	9	ac
water	46:30	0:0	10	ac
arg	46:34	46:37	9	sbr
water	46:34	0:0	10	sbr
arg	46:39	46:53	9	&sbr->data[ch]
op	46:39	0:0	10	&
water	46:40	0:0	10	sbr
op	46:43	0:0	10	->
water	46:45	0:0	10	data
op	46:49	0:0	10	[
water	46:50	0:0	10	ch
op	46:52	0:0	10	]
arg	46:55	46:72	9	sbr->data[ch].e_a
water	46:55	0:0	10	sbr
op	46:58	0:0	10	->
water	46:60	0:0	10	data
op	46:64	0:0	10	[
water	46:65	0:0	10	ch
op	46:67	0:0	10	]
op	46:68	0:0	10	.
water	46:69	0:0	10	e_a
water	46:73	0:0	8	;
call	47:16	50:49	8	sbr->c.sbr_hf_assemble
arg	47:39	47:74	9	sbr->data[ch].Y[sbr->data[ch].Ypos]
water	47:39	0:0	10	sbr
op	47:42	0:0	10	->
water	47:44	0:0	10	data
op	47:48	0:0	10	[
water	47:49	0:0	10	ch
op	47:51	0:0	10	]
op	47:52	0:0	10	.
water	47:53	0:0	10	Y
op	47:54	0:0	10	[
water	47:55	0:0	10	sbr
op	47:58	0:0	10	->
water	47:60	0:0	10	data
op	47:64	0:0	10	[
water	47:65	0:0	10	ch
op	47:67	0:0	10	]
op	47:68	0:0	10	.
water	47:69	0:0	10	Ypos
op	47:73	0:0	10	]
arg	48:32	48:71	9	(constINTFLOAT(*)[40][2])sbr->X_high
water	48:32	0:0	10	(
water	48:33	0:0	10	const
call	48:39	48:50	10	INTFLOAT
arg	48:49	48:50	11	*
op	48:49	0:0	12	*
op	48:51	0:0	10	[
water	48:52	0:0	10	40
op	48:54	0:0	10	]
op	48:55	0:0	10	[
water	48:56	0:0	10	2
op	48:57	0:0	10	]
water	48:58	0:0	10	)
water	48:60	0:0	10	sbr
op	48:63	0:0	10	->
water	48:65	0:0	10	X_high
arg	49:32	49:35	9	sbr
water	49:32	0:0	10	sbr
arg	49:37	49:51	9	&sbr->data[ch]
op	49:37	0:0	10	&
water	49:38	0:0	10	sbr
op	49:41	0:0	10	->
water	49:43	0:0	10	data
op	49:47	0:0	10	[
water	49:48	0:0	10	ch
op	49:50	0:0	10	]
arg	50:32	50:49	9	sbr->data[ch].e_a
water	50:32	0:0	10	sbr
op	50:35	0:0	10	->
water	50:37	0:0	10	data
op	50:41	0:0	10	[
water	50:42	0:0	10	ch
op	50:44	0:0	10	]
op	50:45	0:0	10	.
water	50:46	0:0	10	e_a
water	50:50	0:0	8	;
water	51:12	0:0	8	}
water	52:8	0:0	6	}
call	54:8	57:60	4	sbr->c.sbr_x_gen
arg	54:25	54:28	5	sbr
water	54:25	0:0	6	sbr
arg	54:30	54:40	5	sbr->X[ch]
water	54:30	0:0	6	sbr
op	54:33	0:0	6	->
water	54:35	0:0	6	X
op	54:36	0:0	6	[
water	54:37	0:0	6	ch
op	54:39	0:0	6	]
arg	55:18	55:83	5	(constINTFLOAT(*)[64][2])sbr->data[ch].Y[1-sbr->data[ch].Ypos]
water	55:18	0:0	6	(
water	55:19	0:0	6	const
call	55:25	55:36	6	INTFLOAT
arg	55:35	55:36	7	*
op	55:35	0:0	8	*
op	55:37	0:0	6	[
water	55:38	0:0	6	64
op	55:40	0:0	6	]
op	55:41	0:0	6	[
water	55:42	0:0	6	2
op	55:43	0:0	6	]
water	55:44	0:0	6	)
water	55:46	0:0	6	sbr
op	55:49	0:0	6	->
water	55:51	0:0	6	data
op	55:55	0:0	6	[
water	55:56	0:0	6	ch
op	55:58	0:0	6	]
op	55:59	0:0	6	.
water	55:60	0:0	6	Y
op	55:61	0:0	6	[
water	55:62	0:0	6	1
op	55:63	0:0	6	-
water	55:64	0:0	6	sbr
op	55:67	0:0	6	->
water	55:69	0:0	6	data
op	55:73	0:0	6	[
water	55:74	0:0	6	ch
op	55:76	0:0	6	]
op	55:77	0:0	6	.
water	55:78	0:0	6	Ypos
op	55:82	0:0	6	]
arg	56:18	56:83	5	(constINTFLOAT(*)[64][2])sbr->data[ch].Y[sbr->data[ch].Ypos]
water	56:18	0:0	6	(
water	56:19	0:0	6	const
call	56:25	56:36	6	INTFLOAT
arg	56:35	56:36	7	*
op	56:35	0:0	8	*
op	56:37	0:0	6	[
water	56:38	0:0	6	64
op	56:40	0:0	6	]
op	56:41	0:0	6	[
water	56:42	0:0	6	2
op	56:43	0:0	6	]
water	56:44	0:0	6	)
water	56:46	0:0	6	sbr
op	56:49	0:0	6	->
water	56:51	0:0	6	data
op	56:55	0:0	6	[
water	56:56	0:0	6	ch
op	56:58	0:0	6	]
op	56:59	0:0	6	.
water	56:60	0:0	6	Y
op	56:61	0:0	6	[
water	56:64	0:0	6	sbr
op	56:67	0:0	6	->
water	56:69	0:0	6	data
op	56:73	0:0	6	[
water	56:74	0:0	6	ch
op	56:76	0:0	6	]
op	56:77	0:0	6	.
water	56:78	0:0	6	Ypos
op	56:82	0:0	6	]
arg	57:18	57:56	5	(constINTFLOAT(*)[40][2])sbr->X_low
water	57:18	0:0	6	(
water	57:19	0:0	6	const
call	57:25	57:36	6	INTFLOAT
arg	57:35	57:36	7	*
op	57:35	0:0	8	*
op	57:37	0:0	6	[
water	57:38	0:0	6	40
op	57:40	0:0	6	]
op	57:41	0:0	6	[
water	57:42	0:0	6	2
op	57:43	0:0	6	]
water	57:44	0:0	6	)
water	57:46	0:0	6	sbr
op	57:49	0:0	6	->
water	57:51	0:0	6	X_low
arg	57:58	57:60	5	ch
water	57:58	0:0	6	ch
water	57:61	0:0	4	;
water	58:4	0:0	4	}
if	59:4	66:4	2	(ac -> oc [ 1 ] . m4ac . ps == 1)
cond	59:8	59:29	3	ac -> oc [ 1 ] . m4ac . ps == 1
water	59:8	0:0	4	ac
op	59:10	0:0	4	->
water	59:12	0:0	4	oc
op	59:14	0:0	4	[
water	59:15	0:0	4	1
op	59:16	0:0	4	]
op	59:17	0:0	4	.
water	59:18	0:0	4	m4ac
op	59:22	0:0	4	.
water	59:23	0:0	4	ps
op	59:26	0:0	4	==
water	59:29	0:0	4	1
stmts	59:32	66:4	3	
water	59:32	0:0	4	{
if	60:8	62:8	4	(sbr -> ps . start)
cond	60:12	60:20	5	sbr -> ps . start
water	60:12	0:0	6	sbr
op	60:15	0:0	6	->
water	60:17	0:0	6	ps
op	60:19	0:0	6	.
water	60:20	0:0	6	start
stmts	60:27	62:8	5	
water	60:27	0:0	6	{
call	61:12	61:34	6	AAC_RENAME
arg	61:23	61:34	7	ff_ps_apply
water	61:23	0:0	8	ff_ps_apply
water	61:35	0:0	6	(
water	61:36	0:0	6	ac
op	61:38	0:0	6	->
water	61:40	0:0	6	avctx
water	61:45	0:0	6	,
op	61:47	0:0	6	&
water	61:48	0:0	6	sbr
op	61:51	0:0	6	->
water	61:53	0:0	6	ps
water	61:55	0:0	6	,
water	61:57	0:0	6	sbr
op	61:60	0:0	6	->
water	61:62	0:0	6	X
op	61:63	0:0	6	[
water	61:64	0:0	6	0
op	61:65	0:0	6	]
water	61:66	0:0	6	,
water	61:68	0:0	6	sbr
op	61:71	0:0	6	->
water	61:73	0:0	6	X
op	61:74	0:0	6	[
water	61:75	0:0	6	1
op	61:76	0:0	6	]
water	61:77	0:0	6	,
water	61:79	0:0	6	sbr
op	61:82	0:0	6	->
water	61:84	0:0	6	kx
op	61:86	0:0	6	[
water	61:87	0:0	6	1
op	61:88	0:0	6	]
op	61:90	0:0	6	+
water	61:92	0:0	6	sbr
op	61:95	0:0	6	->
water	61:97	0:0	6	m
op	61:98	0:0	6	[
water	61:99	0:0	6	1
op	61:100	0:0	6	]
water	61:101	0:0	6	)
water	61:102	0:0	6	;
water	62:8	0:0	6	}
else	62:10	64:8	4
stmts	62:15	64:8	5	
water	62:15	0:0	6	{
call	63:12	63:58	6	memcpy
arg	63:19	63:28	7	sbr->X[1]
water	63:19	0:0	8	sbr
op	63:22	0:0	8	->
water	63:24	0:0	8	X
op	63:25	0:0	8	[
water	63:26	0:0	8	1
op	63:27	0:0	8	]
arg	63:30	63:39	7	sbr->X[0]
water	63:30	0:0	8	sbr
op	63:33	0:0	8	->
water	63:35	0:0	8	X
op	63:36	0:0	8	[
water	63:37	0:0	8	0
op	63:38	0:0	8	]
arg	63:41	63:58	7	sizeof(sbr->X[0])
op	63:41	0:0	8	sizeof
water	63:47	0:0	8	(
water	63:48	0:0	8	sbr
op	63:51	0:0	8	->
water	63:53	0:0	8	X
op	63:54	0:0	8	[
water	63:55	0:0	8	0
op	63:56	0:0	8	]
water	63:57	0:0	8	)
water	63:59	0:0	6	;
water	64:8	0:0	6	}
water	65:8	0:0	4	nch
op	65:12	0:0	4	=
water	65:14	0:0	4	2
water	65:15	0:0	4	;
water	66:4	0:0	4	}
call	67:4	71:33	2	sbr_qmf_synthesis
arg	67:22	67:32	3	&sbr->mdct
op	67:22	0:0	4	&
water	67:23	0:0	4	sbr
op	67:26	0:0	4	->
water	67:28	0:0	4	mdct
arg	67:34	67:43	3	&sbr->dsp
op	67:34	0:0	4	&
water	67:35	0:0	4	sbr
op	67:38	0:0	4	->
water	67:40	0:0	4	dsp
arg	67:45	67:53	3	ac->fdsp
water	67:45	0:0	4	ac
op	67:47	0:0	4	->
water	67:49	0:0	4	fdsp
arg	68:22	68:23	3	L
water	68:22	0:0	4	L
arg	68:25	68:34	3	sbr->X[0]
water	68:25	0:0	4	sbr
op	68:28	0:0	4	->
water	68:30	0:0	4	X
op	68:31	0:0	4	[
water	68:32	0:0	4	0
op	68:33	0:0	4	]
arg	68:36	68:59	3	sbr->qmf_filter_scratch
water	68:36	0:0	4	sbr
op	68:39	0:0	4	->
water	68:41	0:0	4	qmf_filter_scratch
arg	69:22	69:63	3	sbr->data[0].synthesis_filterbank_samples
water	69:22	0:0	4	sbr
op	69:25	0:0	4	->
water	69:27	0:0	4	data
op	69:31	0:0	4	[
water	69:32	0:0	4	0
op	69:33	0:0	4	]
op	69:34	0:0	4	.
water	69:35	0:0	4	synthesis_filterbank_samples
arg	70:22	70:71	3	&sbr->data[0].synthesis_filterbank_samples_offset
op	70:22	0:0	4	&
water	70:23	0:0	4	sbr
op	70:26	0:0	4	->
water	70:28	0:0	4	data
op	70:32	0:0	4	[
water	70:33	0:0	4	0
op	70:34	0:0	4	]
op	70:35	0:0	4	.
water	70:36	0:0	4	synthesis_filterbank_samples_offset
arg	71:22	71:33	3	downsampled
water	71:22	0:0	4	downsampled
water	71:34	0:0	2	;
if	72:4	77:38	2	(nch == 2)
cond	72:8	72:15	3	nch == 2
water	72:8	0:0	4	nch
op	72:12	0:0	4	==
water	72:15	0:0	4	2
stmts	73:8	77:38	3	
call	73:8	77:37	4	sbr_qmf_synthesis
arg	73:26	73:36	5	&sbr->mdct
op	73:26	0:0	6	&
water	73:27	0:0	6	sbr
op	73:30	0:0	6	->
water	73:32	0:0	6	mdct
arg	73:38	73:47	5	&sbr->dsp
op	73:38	0:0	6	&
water	73:39	0:0	6	sbr
op	73:42	0:0	6	->
water	73:44	0:0	6	dsp
arg	73:49	73:57	5	ac->fdsp
water	73:49	0:0	6	ac
op	73:51	0:0	6	->
water	73:53	0:0	6	fdsp
arg	74:26	74:27	5	R
water	74:26	0:0	6	R
arg	74:29	74:38	5	sbr->X[1]
water	74:29	0:0	6	sbr
op	74:32	0:0	6	->
water	74:34	0:0	6	X
op	74:35	0:0	6	[
water	74:36	0:0	6	1
op	74:37	0:0	6	]
arg	74:40	74:63	5	sbr->qmf_filter_scratch
water	74:40	0:0	6	sbr
op	74:43	0:0	6	->
water	74:45	0:0	6	qmf_filter_scratch
arg	75:26	75:67	5	sbr->data[1].synthesis_filterbank_samples
water	75:26	0:0	6	sbr
op	75:29	0:0	6	->
water	75:31	0:0	6	data
op	75:35	0:0	6	[
water	75:36	0:0	6	1
op	75:37	0:0	6	]
op	75:38	0:0	6	.
water	75:39	0:0	6	synthesis_filterbank_samples
arg	76:26	76:75	5	&sbr->data[1].synthesis_filterbank_samples_offset
op	76:26	0:0	6	&
water	76:27	0:0	6	sbr
op	76:30	0:0	6	->
water	76:32	0:0	6	data
op	76:36	0:0	6	[
water	76:37	0:0	6	1
op	76:38	0:0	6	]
op	76:39	0:0	6	.
water	76:40	0:0	6	synthesis_filterbank_samples_offset
arg	77:26	77:37	5	downsampled
water	77:26	0:0	6	downsampled
water	77:38	0:0	4	;

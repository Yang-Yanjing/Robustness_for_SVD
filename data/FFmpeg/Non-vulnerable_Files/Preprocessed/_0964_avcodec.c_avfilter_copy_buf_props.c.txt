func	1:0	45:0	0	int	avfilter_copy_buf_props
params	1:27	0:0	1	
param	1:28	1:40	2	AVFrame *	dst
param	1:42	1:70	2	const AVFilterBufferRef *	src
stmnts	0:0	44:12	1	
decl	3:4	3:27	2	int	planes
water	3:14	0:0	2	,
decl	3:4	3:27	2	int	nb_channels
if	4:4	5:30	2	(! dst)
cond	4:8	4:9	3	! dst
op	4:8	0:0	4	!
water	4:9	0:0	4	dst
stmts	5:8	5:30	3	
return	5:8	5:30	4	AVERROR(EINVAL)
call	5:15	5:29	5	AVERROR
arg	5:23	5:29	6	EINVAL
water	5:23	0:0	7	EINVAL
call	7:4	7:18	2	av_assert0
arg	7:15	7:18	3	src
water	7:15	0:0	4	src
water	7:19	0:0	2	;
call	8:4	8:50	2	memcpy
arg	8:11	8:20	3	dst->data
water	8:11	0:0	4	dst
op	8:14	0:0	4	->
water	8:16	0:0	4	data
arg	8:22	8:31	3	src->data
water	8:22	0:0	4	src
op	8:25	0:0	4	->
water	8:27	0:0	4	data
arg	8:33	8:50	3	sizeof(dst->data)
op	8:33	0:0	4	sizeof
water	8:39	0:0	4	(
water	8:40	0:0	4	dst
op	8:43	0:0	4	->
water	8:45	0:0	4	data
water	8:49	0:0	4	)
water	8:51	0:0	2	;
call	9:4	9:62	2	memcpy
arg	9:11	9:24	3	dst->linesize
water	9:11	0:0	4	dst
op	9:14	0:0	4	->
water	9:16	0:0	4	linesize
arg	9:26	9:39	3	src->linesize
water	9:26	0:0	4	src
op	9:29	0:0	4	->
water	9:31	0:0	4	linesize
arg	9:41	9:62	3	sizeof(dst->linesize)
op	9:41	0:0	4	sizeof
water	9:47	0:0	4	(
water	9:48	0:0	4	dst
op	9:51	0:0	4	->
water	9:53	0:0	4	linesize
water	9:61	0:0	4	)
water	9:63	0:0	2	;
water	10:4	0:0	2	dst
op	10:7	0:0	2	->
water	10:9	0:0	2	pts
op	10:17	0:0	2	=
water	10:19	0:0	2	src
op	10:22	0:0	2	->
water	10:24	0:0	2	pts
water	10:27	0:0	2	;
water	11:4	0:0	2	dst
op	11:7	0:0	2	->
water	11:9	0:0	2	format
op	11:17	0:0	2	=
water	11:19	0:0	2	src
op	11:22	0:0	2	->
water	11:24	0:0	2	format
water	11:30	0:0	2	;
call	12:4	12:38	2	av_frame_set_pkt_pos
arg	12:25	12:28	3	dst
water	12:25	0:0	4	dst
arg	12:30	12:38	3	src->pos
water	12:30	0:0	4	src
op	12:33	0:0	4	->
water	12:35	0:0	4	pos
water	12:39	0:0	2	;
switch	13:4	43:4	2	(src -> type)
cond	13:12	13:17	3	src -> type
water	13:12	0:0	4	src
op	13:15	0:0	4	->
water	13:17	0:0	4	type
stmts	13:23	43:4	3	
water	13:23	0:0	4	{
label	14:4	14:27	4	case AVMEDIA_TYPE_VIDEO :
call	15:8	15:29	4	av_assert0
arg	15:19	15:29	5	src->video
water	15:19	0:0	6	src
op	15:22	0:0	6	->
water	15:24	0:0	6	video
water	15:30	0:0	4	;
water	16:8	0:0	4	dst
op	16:11	0:0	4	->
water	16:13	0:0	4	width
op	16:33	0:0	4	=
water	16:35	0:0	4	src
op	16:38	0:0	4	->
water	16:40	0:0	4	video
op	16:45	0:0	4	->
water	16:47	0:0	4	w
water	16:48	0:0	4	;
water	17:8	0:0	4	dst
op	17:11	0:0	4	->
water	17:13	0:0	4	height
op	17:33	0:0	4	=
water	17:35	0:0	4	src
op	17:38	0:0	4	->
water	17:40	0:0	4	video
op	17:45	0:0	4	->
water	17:47	0:0	4	h
water	17:48	0:0	4	;
water	18:8	0:0	4	dst
op	18:11	0:0	4	->
water	18:13	0:0	4	sample_aspect_ratio
op	18:33	0:0	4	=
water	18:35	0:0	4	src
op	18:38	0:0	4	->
water	18:40	0:0	4	video
op	18:45	0:0	4	->
water	18:47	0:0	4	sample_aspect_ratio
water	18:66	0:0	4	;
water	19:8	0:0	4	dst
op	19:11	0:0	4	->
water	19:13	0:0	4	interlaced_frame
op	19:33	0:0	4	=
water	19:35	0:0	4	src
op	19:38	0:0	4	->
water	19:40	0:0	4	video
op	19:45	0:0	4	->
water	19:47	0:0	4	interlaced
water	19:57	0:0	4	;
water	20:8	0:0	4	dst
op	20:11	0:0	4	->
water	20:13	0:0	4	top_field_first
op	20:33	0:0	4	=
water	20:35	0:0	4	src
op	20:38	0:0	4	->
water	20:40	0:0	4	video
op	20:45	0:0	4	->
water	20:47	0:0	4	top_field_first
water	20:62	0:0	4	;
water	21:8	0:0	4	dst
op	21:11	0:0	4	->
water	21:13	0:0	4	key_frame
op	21:33	0:0	4	=
water	21:35	0:0	4	src
op	21:38	0:0	4	->
water	21:40	0:0	4	video
op	21:45	0:0	4	->
water	21:47	0:0	4	key_frame
water	21:56	0:0	4	;
water	22:8	0:0	4	dst
op	22:11	0:0	4	->
water	22:13	0:0	4	pict_type
op	22:33	0:0	4	=
water	22:35	0:0	4	src
op	22:38	0:0	4	->
water	22:40	0:0	4	video
op	22:45	0:0	4	->
water	22:47	0:0	4	pict_type
water	22:56	0:0	4	;
break	23:8	23:13	4	
label	24:4	24:27	4	case AVMEDIA_TYPE_AUDIO :
call	25:8	25:29	4	av_assert0
arg	25:19	25:29	5	src->audio
water	25:19	0:0	6	src
op	25:22	0:0	6	->
water	25:24	0:0	6	audio
water	25:30	0:0	4	;
water	26:8	0:0	4	nb_channels
op	26:20	0:0	4	=
call	26:22	26:82	4	av_get_channel_layout_nb_channels
arg	26:56	26:82	5	src->audio->channel_layout
water	26:56	0:0	6	src
op	26:59	0:0	6	->
water	26:61	0:0	6	audio
op	26:66	0:0	6	->
water	26:68	0:0	6	channel_layout
water	26:83	0:0	4	;
water	27:8	0:0	4	planes
op	27:20	0:0	4	=
call	27:22	27:57	4	av_sample_fmt_is_planar
arg	27:46	27:57	5	src->format
water	27:46	0:0	6	src
op	27:49	0:0	6	->
water	27:51	0:0	6	format
water	27:59	0:0	4	?
water	27:61	0:0	4	nb_channels
water	27:73	0:0	4	:
water	27:75	0:0	4	1
water	27:76	0:0	4	;
if	28:8	34:8	4	(planes >FF_ARRAY_ELEMS (dst -> data ))
cond	28:12	28:45	5	planes >FF_ARRAY_ELEMS (dst -> data )
water	28:12	0:0	6	planes
op	28:19	0:0	6	>
call	28:21	28:45	6	FF_ARRAY_ELEMS
arg	28:36	28:45	7	dst->data
water	28:36	0:0	8	dst
op	28:39	0:0	8	->
water	28:41	0:0	8	data
stmts	28:48	34:8	5	
water	28:48	0:0	6	{
water	29:12	0:0	6	dst
op	29:15	0:0	6	->
water	29:17	0:0	6	extended_data
op	29:31	0:0	6	=
call	29:33	29:85	6	av_mallocz_array
arg	29:50	29:56	7	planes
water	29:50	0:0	8	planes
arg	29:58	29:85	7	sizeof(*dst->extended_data)
op	29:58	0:0	8	sizeof
water	29:64	0:0	8	(
op	29:65	0:0	8	*
water	29:66	0:0	8	dst
op	29:69	0:0	8	->
water	29:71	0:0	8	extended_data
water	29:84	0:0	8	)
water	29:86	0:0	6	;
if	30:12	31:38	6	(! dst -> extended_data)
cond	30:16	30:22	7	! dst -> extended_data
op	30:16	0:0	8	!
water	30:17	0:0	8	dst
op	30:20	0:0	8	->
water	30:22	0:0	8	extended_data
stmts	31:16	31:38	7	
return	31:16	31:38	8	AVERROR(ENOMEM)
call	31:23	31:37	9	AVERROR
arg	31:31	31:37	10	ENOMEM
water	31:31	0:0	11	ENOMEM
call	32:12	33:55	6	memcpy
arg	32:19	32:37	7	dst->extended_data
water	32:19	0:0	8	dst
op	32:22	0:0	8	->
water	32:24	0:0	8	extended_data
arg	32:39	32:57	7	src->extended_data
water	32:39	0:0	8	src
op	32:42	0:0	8	->
water	32:44	0:0	8	extended_data
arg	33:19	33:55	7	planes*sizeof(*dst->extended_data)
water	33:19	0:0	8	planes
op	33:26	0:0	8	*
op	33:28	0:0	8	sizeof
water	33:34	0:0	8	(
op	33:35	0:0	8	*
water	33:36	0:0	8	dst
op	33:39	0:0	8	->
water	33:41	0:0	8	extended_data
water	33:54	0:0	8	)
water	33:56	0:0	6	;
water	34:8	0:0	6	}
else	34:10	35:42	4
stmts	35:12	35:42	5	
water	35:12	0:0	6	dst
op	35:15	0:0	6	->
water	35:17	0:0	6	extended_data
op	35:31	0:0	6	=
water	35:33	0:0	6	dst
op	35:36	0:0	6	->
water	35:38	0:0	6	data
water	35:42	0:0	6	;
water	36:8	0:0	4	dst
op	36:11	0:0	4	->
water	36:13	0:0	4	nb_samples
op	36:33	0:0	4	=
water	36:35	0:0	4	src
op	36:38	0:0	4	->
water	36:40	0:0	4	audio
op	36:45	0:0	4	->
water	36:47	0:0	4	nb_samples
water	36:57	0:0	4	;
call	37:8	37:64	4	av_frame_set_sample_rate
arg	37:36	37:39	5	dst
water	37:36	0:0	6	dst
arg	37:41	37:64	5	src->audio->sample_rate
water	37:41	0:0	6	src
op	37:44	0:0	6	->
water	37:46	0:0	6	audio
op	37:51	0:0	6	->
water	37:53	0:0	6	sample_rate
water	37:65	0:0	4	;
call	38:8	38:67	4	av_frame_set_channel_layout
arg	38:36	38:39	5	dst
water	38:36	0:0	6	dst
arg	38:41	38:67	5	src->audio->channel_layout
water	38:41	0:0	6	src
op	38:44	0:0	6	->
water	38:46	0:0	6	audio
op	38:51	0:0	6	->
water	38:53	0:0	6	channel_layout
water	38:68	0:0	4	;
call	39:8	39:61	4	av_frame_set_channels
arg	39:36	39:39	5	dst
water	39:36	0:0	6	dst
arg	39:41	39:61	5	src->audio->channels
water	39:41	0:0	6	src
op	39:44	0:0	6	->
water	39:46	0:0	6	audio
op	39:51	0:0	6	->
water	39:53	0:0	6	channels
water	39:62	0:0	4	;
break	40:8	40:13	4	
label	41:4	41:11	4	default :
return	42:8	42:30	4	AVERROR(EINVAL)
call	42:15	42:29	5	AVERROR
arg	42:23	42:29	6	EINVAL
water	42:23	0:0	7	EINVAL
water	43:4	0:0	4	}
return	44:4	44:12	2	0
water	44:11	0:0	3	0

func	1:15	23:0	0	int	init_dict
params	1:28	0:0	1	
param	1:29	1:49	2	AVFilterContext *	ctx
param	1:51	1:70	2	AVDictionary * *	opts
stmnts	0:0	22:12	1	
decl	3:4	3:29	2	SPPContext	*s
op	3:18	0:0	2	=
water	3:20	0:0	2	ctx
op	3:23	0:0	2	->
water	3:25	0:0	2	priv
decl	4:4	4:11	2	int	ret
water	5:4	0:0	2	s
op	5:5	0:0	2	->
water	5:7	0:0	2	avctx
op	5:13	0:0	2	=
call	5:15	5:42	2	avcodec_alloc_context3
arg	5:38	5:42	3	NULL
water	5:38	0:0	4	NULL
water	5:43	0:0	2	;
water	6:4	0:0	2	s
op	6:5	0:0	2	->
water	6:7	0:0	2	dct
op	6:11	0:0	2	=
call	6:13	6:31	2	avcodec_dct_alloc
water	6:32	0:0	2	;
if	7:4	8:30	2	(! s -> avctx || ! s -> dct)
cond	7:8	7:25	3	! s -> avctx || ! s -> dct
op	7:8	0:0	4	!
water	7:9	0:0	4	s
op	7:10	0:0	4	->
water	7:12	0:0	4	avctx
op	7:18	0:0	4	||
op	7:21	0:0	4	!
water	7:22	0:0	4	s
op	7:23	0:0	4	->
water	7:25	0:0	4	dct
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(ENOMEM)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	ENOMEM
water	8:23	0:0	7	ENOMEM
if	9:4	16:4	2	(opts)
cond	9:8	9:8	3	opts
water	9:8	0:0	4	opts
stmts	9:14	16:4	3	
water	9:14	0:0	4	{
decl	10:8	10:35	4	AVDictionaryEntry	*e
op	10:29	0:0	4	=
water	10:31	0:0	4	NULL
while	11:8	14:8	4	(( e =av_dict_get (* opts ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) ))
cond	11:15	11:68	5	( e =av_dict_get (* opts ,"" ,e ,AV_DICT_IGNORE_SUFFIX ) )
water	11:15	0:0	6	(
water	11:16	0:0	6	e
op	11:18	0:0	6	=
call	11:20	11:67	6	av_dict_get
arg	11:32	11:37	7	*opts
op	11:32	0:0	8	*
water	11:33	0:0	8	opts
arg	11:39	11:41	7	""
water	11:39	0:0	8	""
arg	11:43	11:44	7	e
water	11:43	0:0	8	e
arg	11:46	11:67	7	AV_DICT_IGNORE_SUFFIX
water	11:46	0:0	8	AV_DICT_IGNORE_SUFFIX
water	11:68	0:0	6	)
stmts	11:71	14:8	5	
water	11:71	0:0	6	{
if	12:12	13:26	6	(( ret =av_opt_set (s -> dct ,e -> key ,e -> value ,0 ) ) < 0)
cond	12:16	12:66	7	( ret =av_opt_set (s -> dct ,e -> key ,e -> value ,0 ) ) < 0
water	12:16	0:0	8	(
water	12:17	0:0	8	ret
op	12:21	0:0	8	=
call	12:23	12:61	8	av_opt_set
arg	12:34	12:40	9	s->dct
water	12:34	0:0	10	s
op	12:35	0:0	10	->
water	12:37	0:0	10	dct
arg	12:42	12:48	9	e->key
water	12:42	0:0	10	e
op	12:43	0:0	10	->
water	12:45	0:0	10	key
arg	12:50	12:58	9	e->value
water	12:50	0:0	10	e
op	12:51	0:0	10	->
water	12:53	0:0	10	value
arg	12:60	12:61	9	0
water	12:60	0:0	10	0
water	12:62	0:0	8	)
op	12:64	0:0	8	<
water	12:66	0:0	8	0
stmts	13:16	13:26	7	
return	13:16	13:26	8	ret
water	13:23	0:0	9	ret
water	14:8	0:0	6	}
call	15:8	15:25	4	av_dict_free
arg	15:21	15:25	5	opts
water	15:21	0:0	6	opts
water	15:26	0:0	4	;
water	16:4	0:0	4	}
water	17:4	0:0	2	s
op	17:5	0:0	2	->
water	17:7	0:0	2	store_slice
op	17:19	0:0	2	=
water	17:21	0:0	2	store_slice_c
water	17:34	0:0	2	;
switch	18:4	21:4	2	(s -> mode)
cond	18:12	18:15	3	s -> mode
water	18:12	0:0	4	s
op	18:13	0:0	4	->
water	18:15	0:0	4	mode
stmts	18:21	21:4	3	
water	18:21	0:0	4	{
label	19:4	19:18	4	case MODE_HARD :
water	19:20	0:0	4	s
op	19:21	0:0	4	->
water	19:23	0:0	4	requantize
op	19:34	0:0	4	=
water	19:36	0:0	4	hardthresh_c
water	19:48	0:0	4	;
break	19:50	19:55	4	
label	20:4	20:18	4	case MODE_SOFT :
water	20:20	0:0	4	s
op	20:21	0:0	4	->
water	20:23	0:0	4	requantize
op	20:34	0:0	4	=
water	20:36	0:0	4	softthresh_c
water	20:48	0:0	4	;
break	20:50	20:55	4	
water	21:4	0:0	4	}
return	22:4	22:12	2	0
water	22:11	0:0	3	0

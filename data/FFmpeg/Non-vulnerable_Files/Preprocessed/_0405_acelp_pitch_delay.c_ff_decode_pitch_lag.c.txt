func	1:0	39:0	0	void	ff_decode_pitch_lag
params	1:24	0:0	1	
param	1:25	1:37	2	int *	lag_int
param	1:39	1:52	2	int *	lag_frac
param	1:54	1:69	2	int	pitch_index
param	2:25	2:47	2	const int	prev_lag_int
param	2:49	2:67	2	const int	subframe
param	3:25	3:43	2	int	third_as_first
param	3:45	3:59	2	int	resolution
stmnts	6:4	38:46	1	
if	6:4	11:4	2	(subframe == 0 || ( subframe == 2 && third_as_first ))
cond	6:8	6:57	3	subframe == 0 || ( subframe == 2 && third_as_first )
water	6:8	0:0	4	subframe
op	6:17	0:0	4	==
water	6:20	0:0	4	0
op	6:22	0:0	4	||
water	6:25	0:0	4	(
water	6:26	0:0	4	subframe
op	6:35	0:0	4	==
water	6:38	0:0	4	2
op	6:40	0:0	4	&&
water	6:43	0:0	4	third_as_first
water	6:57	0:0	4	)
stmts	6:60	11:4	3	
water	6:60	0:0	4	{
if	7:8	8:29	4	(pitch_index < 197)
cond	7:12	7:26	5	pitch_index < 197
water	7:12	0:0	6	pitch_index
op	7:24	0:0	6	<
water	7:26	0:0	6	197
stmts	8:12	8:29	5	
water	8:12	0:0	6	pitch_index
op	8:24	0:0	6	+=
water	8:27	0:0	6	59
water	8:29	0:0	6	;
else	9:8	10:47	4
stmts	10:12	10:47	5	
water	10:12	0:0	6	pitch_index
op	10:24	0:0	6	=
water	10:26	0:0	6	3
op	10:28	0:0	6	*
water	10:30	0:0	6	pitch_index
op	10:42	0:0	6	-
water	10:44	0:0	6	335
water	10:47	0:0	6	;
water	11:4	0:0	4	}
else	11:6	36:4	2
stmts	11:11	36:4	3	
water	11:11	0:0	4	{
if	12:8	26:8	4	(resolution == 4)
cond	12:12	12:26	5	resolution == 4
water	12:12	0:0	6	resolution
op	12:23	0:0	6	==
water	12:26	0:0	6	4
stmts	12:29	26:8	5	
water	12:29	0:0	6	{
decl	13:12	14:63	6	int	search_range_min
op	13:33	0:0	6	=
call	13:35	14:62	7	av_clip
arg	13:43	13:59	8	prev_lag_int-5
water	13:43	0:0	9	prev_lag_int
op	13:56	0:0	9	-
water	13:58	0:0	9	5
arg	13:61	13:76	8	PITCH_DELAY_MIN
water	13:61	0:0	9	PITCH_DELAY_MIN
arg	14:43	14:62	8	PITCH_DELAY_MAX-9
water	14:43	0:0	9	PITCH_DELAY_MAX
op	14:59	0:0	9	-
water	14:61	0:0	9	9
if	16:12	19:12	6	(pitch_index < 4)
cond	16:16	16:30	7	pitch_index < 4
water	16:16	0:0	8	pitch_index
op	16:28	0:0	8	<
water	16:30	0:0	8	4
stmts	16:33	19:12	7	
water	16:33	0:0	8	{
water	18:16	0:0	8	pitch_index
op	18:28	0:0	8	=
water	18:30	0:0	8	3
op	18:32	0:0	8	*
water	18:34	0:0	8	(
water	18:35	0:0	8	pitch_index
op	18:47	0:0	8	+
water	18:49	0:0	8	search_range_min
water	18:65	0:0	8	)
op	18:67	0:0	8	+
water	18:69	0:0	8	1
water	18:70	0:0	8	;
water	19:12	0:0	8	}
else	19:14	22:12	6
stmts	19:19	22:12	7	
if	19:19	22:12	8	(pitch_index < 12)
cond	19:23	19:37	9	pitch_index < 12
water	19:23	0:0	10	pitch_index
op	19:35	0:0	10	<
water	19:37	0:0	10	12
stmts	19:41	22:12	9	
water	19:41	0:0	10	{
water	21:16	0:0	10	pitch_index
op	21:28	0:0	10	+=
water	21:31	0:0	10	3
op	21:33	0:0	10	*
water	21:35	0:0	10	search_range_min
op	21:52	0:0	10	+
water	21:54	0:0	10	7
water	21:55	0:0	10	;
water	22:12	0:0	10	}
else	22:14	25:12	6
stmts	22:19	25:12	7	
water	22:19	0:0	8	{
water	24:16	0:0	8	pitch_index
op	24:28	0:0	8	=
water	24:30	0:0	8	3
op	24:32	0:0	8	*
water	24:34	0:0	8	(
water	24:35	0:0	8	pitch_index
op	24:47	0:0	8	+
water	24:49	0:0	8	search_range_min
op	24:66	0:0	8	-
water	24:68	0:0	8	6
water	24:69	0:0	8	)
op	24:71	0:0	8	+
water	24:73	0:0	8	1
water	24:74	0:0	8	;
water	25:12	0:0	8	}
water	26:8	0:0	6	}
else	26:10	35:8	4
stmts	26:15	35:8	5	
water	26:15	0:0	6	{
water	28:12	0:0	6	pitch_index
op	28:23	0:0	6	--
water	28:25	0:0	6	;
if	29:12	32:12	6	(resolution == 5)
cond	29:16	29:30	7	resolution == 5
water	29:16	0:0	8	resolution
op	29:27	0:0	8	==
water	29:30	0:0	8	5
stmts	29:33	32:12	7	
water	29:33	0:0	8	{
water	30:16	0:0	8	pitch_index
op	30:28	0:0	8	+=
water	30:31	0:0	8	3
call	30:33	31:63	8	*av_clip
arg	30:43	30:60	9	prev_lag_int-10
water	30:43	0:0	10	prev_lag_int
op	30:56	0:0	10	-
water	30:58	0:0	10	10
arg	30:62	30:77	9	PITCH_DELAY_MIN
water	30:62	0:0	10	PITCH_DELAY_MIN
arg	31:43	31:63	9	PITCH_DELAY_MAX-19
water	31:43	0:0	10	PITCH_DELAY_MAX
op	31:59	0:0	10	-
water	31:61	0:0	10	19
water	31:64	0:0	8	;
water	32:12	0:0	8	}
else	32:14	34:63	6
stmts	33:16	34:63	7	
water	33:16	0:0	8	pitch_index
op	33:28	0:0	8	+=
water	33:31	0:0	8	3
call	33:33	34:62	8	*av_clip
arg	33:43	33:59	9	prev_lag_int-5
water	33:43	0:0	10	prev_lag_int
op	33:56	0:0	10	-
water	33:58	0:0	10	5
arg	33:61	33:76	9	PITCH_DELAY_MIN
water	33:61	0:0	10	PITCH_DELAY_MIN
arg	34:43	34:62	9	PITCH_DELAY_MAX-9
water	34:43	0:0	10	PITCH_DELAY_MAX
op	34:59	0:0	10	-
water	34:61	0:0	10	9
water	34:63	0:0	8	;
water	35:8	0:0	6	}
water	36:4	0:0	4	}
op	37:4	0:0	2	*
water	37:5	0:0	2	lag_int
op	37:14	0:0	2	=
water	37:16	0:0	2	pitch_index
op	37:28	0:0	2	*
water	37:30	0:0	2	10923
op	37:36	0:0	2	>>
water	37:39	0:0	2	15
water	37:41	0:0	2	;
op	38:4	0:0	2	*
water	38:5	0:0	2	lag_frac
op	38:14	0:0	2	=
water	38:16	0:0	2	pitch_index
op	38:28	0:0	2	-
water	38:30	0:0	2	3
op	38:32	0:0	2	*
op	38:34	0:0	2	*
water	38:35	0:0	2	lag_int
op	38:43	0:0	2	-
water	38:45	0:0	2	1
water	38:46	0:0	2	;
decl	53:12	54:63	0	int	search_range_min
op	53:33	0:0	0	=
call	53:35	54:62	1	av_clip
arg	53:43	53:59	2	prev_lag_int-5
water	53:43	0:0	3	prev_lag_int
op	53:56	0:0	3	-
water	53:58	0:0	3	5
arg	53:61	53:76	2	PITCH_DELAY_MIN
water	53:61	0:0	3	PITCH_DELAY_MIN
arg	54:43	54:62	2	PITCH_DELAY_MAX-9
water	54:43	0:0	3	PITCH_DELAY_MAX
op	54:59	0:0	3	-
water	54:61	0:0	3	9

func	1:0	13:0	0	static int	graph_config_links
params	1:29	0:0	1	
param	1:30	1:50	2	AVFilterGraph *	graph
param	1:52	1:68	2	AVClass *	log_ctx
stmnts	0:0	12:12	1	
decl	3:4	3:25	2	AVFilterContext	*filt
decl	4:4	4:14	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:14	2	int	ret
for	5:4	11:4	2	(i = 0 ;i < graph -> nb_filters;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:27	3	i < graph -> nb_filters
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	graph
op	5:25	0:0	4	->
water	5:27	0:0	4	nb_filters
forexpr	5:39	5:40	3	i ++
water	5:39	0:0	4	i
op	5:40	0:0	4	++
stmts	5:44	11:4	3	
water	5:44	0:0	4	{
water	6:8	0:0	4	filt
op	6:13	0:0	4	=
water	6:15	0:0	4	graph
op	6:20	0:0	4	->
water	6:22	0:0	4	filters
op	6:29	0:0	4	[
water	6:30	0:0	4	i
op	6:31	0:0	4	]
water	6:32	0:0	4	;
if	7:8	10:8	4	(! filt -> nb_outputs)
cond	7:12	7:19	5	! filt -> nb_outputs
op	7:12	0:0	6	!
water	7:13	0:0	6	filt
op	7:17	0:0	6	->
water	7:19	0:0	6	nb_outputs
stmts	7:31	10:8	5	
water	7:31	0:0	6	{
if	8:12	9:26	6	(( ret =avfilter_config_links (filt ) ))
cond	8:16	8:50	7	( ret =avfilter_config_links (filt ) )
water	8:16	0:0	8	(
water	8:17	0:0	8	ret
op	8:21	0:0	8	=
call	8:23	8:49	8	avfilter_config_links
arg	8:45	8:49	9	filt
water	8:45	0:0	10	filt
water	8:50	0:0	8	)
stmts	9:16	9:26	7	
return	9:16	9:26	8	ret
water	9:23	0:0	9	ret
water	10:8	0:0	6	}
water	11:4	0:0	4	}
return	12:4	12:12	2	0
water	12:11	0:0	3	0

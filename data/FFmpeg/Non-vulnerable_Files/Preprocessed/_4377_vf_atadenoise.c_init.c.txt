func	1:15	10:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	9:12	1	
decl	3:4	3:36	2	ATADenoiseContext	*s
op	3:25	0:0	2	=
water	3:27	0:0	2	ctx
op	3:30	0:0	2	->
water	3:32	0:0	2	priv
if	4:4	7:4	2	(! ( s -> size & 1 ))
cond	4:8	4:21	3	! ( s -> size & 1 )
op	4:8	0:0	4	!
water	4:9	0:0	4	(
water	4:10	0:0	4	s
op	4:11	0:0	4	->
water	4:13	0:0	4	size
op	4:18	0:0	4	&
water	4:20	0:0	4	1
water	4:21	0:0	4	)
stmts	4:24	7:4	3	
water	4:24	0:0	4	{
call	5:8	5:88	4	av_log
arg	5:15	5:18	5	ctx
water	5:15	0:0	6	ctx
arg	5:20	5:32	5	AV_LOG_ERROR
water	5:20	0:0	6	AV_LOG_ERROR
arg	5:34	5:79	5	"size %d is invalid. Must be an odd value.\n"
water	5:34	0:0	6	"size %d is invalid. Must be an odd value.\n"
arg	5:81	5:88	5	s->size
water	5:81	0:0	6	s
op	5:82	0:0	6	->
water	5:84	0:0	6	size
water	5:89	0:0	4	;
return	6:8	6:30	4	AVERROR(EINVAL)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	EINVAL
water	6:23	0:0	7	EINVAL
water	7:4	0:0	4	}
water	8:4	0:0	2	s
op	8:5	0:0	2	->
water	8:7	0:0	2	mid
op	8:11	0:0	2	=
water	8:13	0:0	2	s
op	8:14	0:0	2	->
water	8:16	0:0	2	size
op	8:21	0:0	2	/
water	8:23	0:0	2	2
op	8:25	0:0	2	+
water	8:27	0:0	2	1
water	8:28	0:0	2	;
return	9:4	9:12	2	0
water	9:11	0:0	3	0

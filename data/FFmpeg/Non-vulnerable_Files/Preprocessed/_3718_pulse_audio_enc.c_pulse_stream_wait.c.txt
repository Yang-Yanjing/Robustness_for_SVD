func	1:0	10:0	0	static int	pulse_stream_wait
params	1:28	0:0	1	
param	1:29	1:41	2	PulseData *	s
stmnts	0:0	9:12	1	
decl	3:4	3:27	2	pa_stream_state_t	state
while	4:4	8:4	2	(( state =pa_stream_get_state (s -> stream ) ) != PA_STREAM_READY)
cond	4:11	4:55	3	( state =pa_stream_get_state (s -> stream ) ) != PA_STREAM_READY
water	4:11	0:0	4	(
water	4:12	0:0	4	state
op	4:18	0:0	4	=
call	4:20	4:49	4	pa_stream_get_state
arg	4:40	4:49	5	s->stream
water	4:40	0:0	6	s
op	4:41	0:0	6	->
water	4:43	0:0	6	stream
water	4:50	0:0	4	)
op	4:52	0:0	4	!=
water	4:55	0:0	4	PA_STREAM_READY
stmts	4:72	8:4	3	
water	4:72	0:0	4	{
if	5:8	6:35	4	(state == PA_STREAM_FAILED || state == PA_STREAM_TERMINATED)
cond	5:12	5:50	5	state == PA_STREAM_FAILED || state == PA_STREAM_TERMINATED
water	5:12	0:0	6	state
op	5:18	0:0	6	==
water	5:21	0:0	6	PA_STREAM_FAILED
op	5:38	0:0	6	||
water	5:41	0:0	6	state
op	5:47	0:0	6	==
water	5:50	0:0	6	PA_STREAM_TERMINATED
stmts	6:12	6:35	5	
return	6:12	6:35	6	AVERROR_EXTERNAL
water	6:19	0:0	7	AVERROR_EXTERNAL
call	7:8	7:45	4	pa_threaded_mainloop_wait
arg	7:34	7:45	5	s->mainloop
water	7:34	0:0	6	s
op	7:35	0:0	6	->
water	7:37	0:0	6	mainloop
water	7:46	0:0	4	;
water	8:4	0:0	4	}
return	9:4	9:12	2	0
water	9:11	0:0	3	0

func	1:0	12:0	0	static AVFilterFormats *	clone_filter_formats
params	1:44	0:0	1	
param	1:45	1:65	2	AVFilterFormats *	arg
stmnts	0:0	11:12	1	
decl	3:4	3:53	2	AVFilterFormats	*a
op	3:23	0:0	2	=
call	3:25	3:52	3	av_memdup
arg	3:35	3:38	4	arg
water	3:35	0:0	5	arg
arg	3:40	3:52	4	sizeof(*arg)
op	3:40	0:0	5	sizeof
water	3:46	0:0	5	(
op	3:47	0:0	5	*
water	3:48	0:0	5	arg
water	3:51	0:0	5	)
if	4:4	10:4	2	(a)
cond	4:8	4:8	3	a
water	4:8	0:0	4	a
stmts	4:11	10:4	3	
water	4:11	0:0	4	{
water	5:8	0:0	4	a
op	5:9	0:0	4	->
water	5:11	0:0	4	refcount
op	5:20	0:0	4	=
water	5:22	0:0	4	0
water	5:23	0:0	4	;
water	6:8	0:0	4	a
op	6:9	0:0	4	->
water	6:11	0:0	4	refs
op	6:20	0:0	4	=
water	6:22	0:0	4	NULL
water	6:26	0:0	4	;
water	7:8	0:0	4	a
op	7:9	0:0	4	->
water	7:11	0:0	4	formats
op	7:20	0:0	4	=
call	7:22	7:79	4	av_memdup
arg	7:32	7:42	5	a->formats
water	7:32	0:0	6	a
op	7:33	0:0	6	->
water	7:35	0:0	6	formats
arg	7:44	7:79	5	sizeof(*a->formats)*a->nb_formats
op	7:44	0:0	6	sizeof
water	7:50	0:0	6	(
op	7:51	0:0	6	*
water	7:52	0:0	6	a
op	7:53	0:0	6	->
water	7:55	0:0	6	formats
water	7:62	0:0	6	)
op	7:64	0:0	6	*
water	7:66	0:0	6	a
op	7:67	0:0	6	->
water	7:69	0:0	6	nb_formats
water	7:80	0:0	4	;
if	8:8	9:24	4	(! a -> formats && arg -> formats)
cond	8:12	8:32	5	! a -> formats && arg -> formats
op	8:12	0:0	6	!
water	8:13	0:0	6	a
op	8:14	0:0	6	->
water	8:16	0:0	6	formats
op	8:24	0:0	6	&&
water	8:27	0:0	6	arg
op	8:30	0:0	6	->
water	8:32	0:0	6	formats
stmts	9:12	9:24	5	
call	9:12	9:23	6	av_freep
arg	9:21	9:23	7	&a
op	9:21	0:0	8	&
water	9:22	0:0	8	a
water	9:24	0:0	6	;
water	10:4	0:0	4	}
return	11:4	11:12	2	a
water	11:11	0:0	3	a

func	1:0	23:0	0	int	ff_parse_channel_layout
params	1:27	0:0	1	
param	1:28	1:40	2	int64_t *	ret
param	1:42	1:51	2	int *	nret
param	1:53	1:68	2	const char *	arg
param	2:28	2:41	2	void *	log_ctx
stmnts	0:0	22:12	1	
decl	4:4	4:14	2	char	*tail
decl	5:4	5:20	2	int64_t	chlayout
water	6:4	0:0	2	chlayout
op	6:13	0:0	2	=
call	6:15	6:40	2	av_get_channel_layout
arg	6:37	6:40	3	arg
water	6:37	0:0	4	arg
water	6:41	0:0	2	;
if	7:4	18:4	2	(chlayout == 0)
cond	7:8	7:20	3	chlayout == 0
water	7:8	0:0	4	chlayout
op	7:17	0:0	4	==
water	7:20	0:0	4	0
stmts	7:23	18:4	3	
water	7:23	0:0	4	{
water	8:8	0:0	4	chlayout
op	8:17	0:0	4	=
call	8:19	8:40	4	strtol
arg	8:26	8:29	5	arg
water	8:26	0:0	6	arg
arg	8:31	8:36	5	&tail
op	8:31	0:0	6	&
water	8:32	0:0	6	tail
arg	8:38	8:40	5	10
water	8:38	0:0	6	10
water	8:41	0:0	4	;
if	9:8	12:8	4	(! ( * tail == '\0' || * tail == 'c' && * ( tail + 1 ) == '\0' ) || chlayout <= 0 || chlayout > 63)
cond	9:12	9:99	5	! ( * tail == '\0' || * tail == 'c' && * ( tail + 1 ) == '\0' ) || chlayout <= 0 || chlayout > 63
op	9:12	0:0	6	!
water	9:13	0:0	6	(
op	9:14	0:0	6	*
water	9:15	0:0	6	tail
op	9:20	0:0	6	==
water	9:23	0:0	6	'\0'
op	9:28	0:0	6	||
op	9:31	0:0	6	*
water	9:32	0:0	6	tail
op	9:37	0:0	6	==
water	9:40	0:0	6	'c'
op	9:44	0:0	6	&&
op	9:47	0:0	6	*
water	9:48	0:0	6	(
water	9:49	0:0	6	tail
op	9:54	0:0	6	+
water	9:56	0:0	6	1
water	9:57	0:0	6	)
op	9:59	0:0	6	==
water	9:62	0:0	6	'\0'
water	9:66	0:0	6	)
op	9:68	0:0	6	||
water	9:71	0:0	6	chlayout
op	9:80	0:0	6	<=
water	9:83	0:0	6	0
op	9:85	0:0	6	||
water	9:88	0:0	6	chlayout
op	9:97	0:0	6	>
water	9:99	0:0	6	63
stmts	9:103	12:8	5	
water	9:103	0:0	6	{
call	10:12	10:78	6	av_log
arg	10:19	10:26	7	log_ctx
water	10:19	0:0	8	log_ctx
arg	10:28	10:40	7	AV_LOG_ERROR
water	10:28	0:0	8	AV_LOG_ERROR
arg	10:42	10:73	7	"Invalid channel layout '%s'\n"
water	10:42	0:0	8	"Invalid channel layout '%s'\n"
arg	10:75	10:78	7	arg
water	10:75	0:0	8	arg
water	10:79	0:0	6	;
return	11:12	11:34	6	AVERROR(EINVAL)
call	11:19	11:33	7	AVERROR
arg	11:27	11:33	8	EINVAL
water	11:27	0:0	9	EINVAL
water	12:8	0:0	6	}
if	13:8	17:8	4	(nret)
cond	13:12	13:12	5	nret
water	13:12	0:0	6	nret
stmts	13:18	17:8	5	
water	13:18	0:0	6	{
op	14:12	0:0	6	*
water	14:13	0:0	6	nret
op	14:18	0:0	6	=
water	14:20	0:0	6	chlayout
water	14:28	0:0	6	;
op	15:12	0:0	6	*
water	15:13	0:0	6	ret
op	15:17	0:0	6	=
water	15:19	0:0	6	0
water	15:20	0:0	6	;
return	16:12	16:20	6	0
water	16:19	0:0	7	0
water	17:8	0:0	6	}
water	18:4	0:0	4	}
op	19:4	0:0	2	*
water	19:5	0:0	2	ret
op	19:9	0:0	2	=
water	19:11	0:0	2	chlayout
water	19:19	0:0	2	;
if	20:4	21:59	2	(nret)
cond	20:8	20:8	3	nret
water	20:8	0:0	4	nret
stmts	21:8	21:59	3	
op	21:8	0:0	4	*
water	21:9	0:0	4	nret
op	21:14	0:0	4	=
call	21:16	21:58	4	av_get_channel_layout_nb_channels
arg	21:50	21:58	5	chlayout
water	21:50	0:0	6	chlayout
water	21:59	0:0	4	;
return	22:4	22:12	2	0
water	22:11	0:0	3	0

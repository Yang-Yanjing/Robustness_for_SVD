func	1:0	15:0	0	static int	configure_input_filter
params	1:33	0:0	1	
param	1:34	1:49	2	FilterGraph *	fg
param	1:51	1:71	2	InputFilter *	ifilter
param	2:34	2:51	2	AVFilterInOut *	in
stmnts	4:4	14:4	1	
if	4:4	9:4	2	(! ifilter -> ist -> dec)
cond	4:8	4:23	3	! ifilter -> ist -> dec
op	4:8	0:0	4	!
water	4:9	0:0	4	ifilter
op	4:16	0:0	4	->
water	4:18	0:0	4	ist
op	4:21	0:0	4	->
water	4:23	0:0	4	dec
stmts	4:28	9:4	3	
water	4:28	0:0	4	{
call	5:8	7:64	4	av_log
arg	5:15	5:19	5	NULL
water	5:15	0:0	6	NULL
arg	5:21	5:33	5	AV_LOG_ERROR
water	5:21	0:0	6	AV_LOG_ERROR
arg	6:15	6:69	5	"No decoder for stream #%d:%d, filtering impossible\n"
water	6:15	0:0	6	"No decoder for stream #%d:%d, filtering impossible\n"
arg	7:15	7:39	5	ifilter->ist->file_index
water	7:15	0:0	6	ifilter
op	7:22	0:0	6	->
water	7:24	0:0	6	ist
op	7:27	0:0	6	->
water	7:29	0:0	6	file_index
arg	7:41	7:64	5	ifilter->ist->st->index
water	7:41	0:0	6	ifilter
op	7:48	0:0	6	->
water	7:50	0:0	6	ist
op	7:53	0:0	6	->
water	7:55	0:0	6	st
op	7:57	0:0	6	->
water	7:59	0:0	6	index
water	7:65	0:0	4	;
return	8:8	8:40	4	AVERROR_DECODER_NOT_FOUND
water	8:15	0:0	5	AVERROR_DECODER_NOT_FOUND
water	9:4	0:0	4	}
switch	10:4	14:4	2	(avfilter_pad_get_type (in -> filter_ctx -> input_pads ,in -> pad_idx ))
cond	10:12	10:73	3	avfilter_pad_get_type (in -> filter_ctx -> input_pads ,in -> pad_idx )
call	10:12	10:73	4	avfilter_pad_get_type
arg	10:34	10:60	5	in->filter_ctx->input_pads
water	10:34	0:0	6	in
op	10:36	0:0	6	->
water	10:38	0:0	6	filter_ctx
op	10:48	0:0	6	->
water	10:50	0:0	6	input_pads
arg	10:62	10:73	5	in->pad_idx
water	10:62	0:0	6	in
op	10:64	0:0	6	->
water	10:66	0:0	6	pad_idx
stmts	10:76	14:4	3	
water	10:76	0:0	4	{
label	11:4	11:27	4	case AVMEDIA_TYPE_VIDEO :
return	11:29	11:81	4	configure_input_video_filter(fg,ifilter,in)
call	11:36	11:80	5	configure_input_video_filter
arg	11:65	11:67	6	fg
water	11:65	0:0	7	fg
arg	11:69	11:76	6	ifilter
water	11:69	0:0	7	ifilter
arg	11:78	11:80	6	in
water	11:78	0:0	7	in
label	12:4	12:27	4	case AVMEDIA_TYPE_AUDIO :
return	12:29	12:81	4	configure_input_audio_filter(fg,ifilter,in)
call	12:36	12:80	5	configure_input_audio_filter
arg	12:65	12:67	6	fg
water	12:65	0:0	7	fg
arg	12:69	12:76	6	ifilter
water	12:69	0:0	7	ifilter
arg	12:78	12:80	6	in
water	12:78	0:0	7	in
label	13:4	13:11	4	default :
call	13:13	13:25	4	av_assert0
arg	13:24	13:25	5	0
water	13:24	0:0	6	0
water	13:26	0:0	4	;
water	14:4	0:0	4	}

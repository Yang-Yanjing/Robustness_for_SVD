func	1:0	50:0	0	static void	alac_linear_predictor
params	1:33	0:0	1	
param	1:34	1:54	2	AlacEncodeContext *	s
param	1:56	1:62	2	int	ch
stmnts	0:0	49:4	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:35	2	AlacLPCContext	lpc
op	4:23	0:0	2	=
water	4:25	0:0	2	s
op	4:26	0:0	2	->
water	4:28	0:0	2	lpc
op	4:31	0:0	2	[
water	4:32	0:0	2	ch
op	4:34	0:0	2	]
decl	5:4	5:44	2	int32_t	*residual
op	5:22	0:0	2	=
water	5:24	0:0	2	s
op	5:25	0:0	2	->
water	5:27	0:0	2	predictor_buf
op	5:40	0:0	2	[
water	5:41	0:0	2	ch
op	5:43	0:0	2	]
if	6:4	13:4	2	(lpc . lpc_order == 31)
cond	6:8	6:25	3	lpc . lpc_order == 31
water	6:8	0:0	4	lpc
op	6:11	0:0	4	.
water	6:12	0:0	4	lpc_order
op	6:22	0:0	4	==
water	6:25	0:0	4	31
stmts	6:29	13:4	3	
water	6:29	0:0	4	{
water	7:8	0:0	4	residual
op	7:16	0:0	4	[
water	7:17	0:0	4	0
op	7:18	0:0	4	]
op	7:20	0:0	4	=
water	7:22	0:0	4	s
op	7:23	0:0	4	->
water	7:25	0:0	4	sample_buf
op	7:35	0:0	4	[
water	7:36	0:0	4	ch
op	7:38	0:0	4	]
op	7:39	0:0	4	[
water	7:40	0:0	4	0
op	7:41	0:0	4	]
water	7:42	0:0	4	;
for	8:8	11:8	4	(i = 1 ;i < s -> frame_size;i ++)
forinit	8:13	8:18	5	i = 1 ;
water	8:13	0:0	6	i
op	8:15	0:0	6	=
water	8:17	0:0	6	1
water	8:18	0:0	6	;
cond	8:20	8:27	5	i < s -> frame_size
water	8:20	0:0	6	i
op	8:22	0:0	6	<
water	8:24	0:0	6	s
op	8:25	0:0	6	->
water	8:27	0:0	6	frame_size
forexpr	8:39	8:40	5	i ++
water	8:39	0:0	6	i
op	8:40	0:0	6	++
stmts	8:44	11:8	5	
water	8:44	0:0	6	{
water	9:12	0:0	6	residual
op	9:20	0:0	6	[
water	9:21	0:0	6	i
op	9:22	0:0	6	]
op	9:24	0:0	6	=
water	9:26	0:0	6	s
op	9:27	0:0	6	->
water	9:29	0:0	6	sample_buf
op	9:39	0:0	6	[
water	9:40	0:0	6	ch
op	9:42	0:0	6	]
op	9:43	0:0	6	[
water	9:44	0:0	6	i
op	9:49	0:0	6	]
op	9:51	0:0	6	-
water	10:26	0:0	6	s
op	10:27	0:0	6	->
water	10:29	0:0	6	sample_buf
op	10:39	0:0	6	[
water	10:40	0:0	6	ch
op	10:42	0:0	6	]
op	10:43	0:0	6	[
water	10:44	0:0	6	i
op	10:46	0:0	6	-
water	10:48	0:0	6	1
op	10:49	0:0	6	]
water	10:50	0:0	6	;
water	11:8	0:0	6	}
return	12:8	12:14	4	
water	13:4	0:0	4	}
if	15:4	49:4	2	(lpc . lpc_order > 0)
cond	15:8	15:24	3	lpc . lpc_order > 0
water	15:8	0:0	4	lpc
op	15:11	0:0	4	.
water	15:12	0:0	4	lpc_order
op	15:22	0:0	4	>
water	15:24	0:0	4	0
stmts	15:27	49:4	3	
water	15:27	0:0	4	{
decl	16:8	16:45	4	int32_t	*samples
op	16:26	0:0	4	=
water	16:28	0:0	4	s
op	16:29	0:0	4	->
water	16:31	0:0	4	sample_buf
op	16:41	0:0	4	[
water	16:42	0:0	4	ch
op	16:44	0:0	4	]
water	18:8	0:0	4	residual
op	18:16	0:0	4	[
water	18:17	0:0	4	0
op	18:18	0:0	4	]
op	18:20	0:0	4	=
water	18:22	0:0	4	samples
op	18:29	0:0	4	[
water	18:30	0:0	4	0
op	18:31	0:0	4	]
water	18:32	0:0	4	;
for	19:8	20:86	4	(i = 1 ;i <= lpc . lpc_order;i ++)
forinit	19:13	19:18	5	i = 1 ;
water	19:13	0:0	6	i
op	19:15	0:0	6	=
water	19:17	0:0	6	1
water	19:18	0:0	6	;
cond	19:20	19:29	5	i <= lpc . lpc_order
water	19:20	0:0	6	i
op	19:22	0:0	6	<=
water	19:25	0:0	6	lpc
op	19:28	0:0	6	.
water	19:29	0:0	6	lpc_order
forexpr	19:40	19:41	5	i ++
water	19:40	0:0	6	i
op	19:41	0:0	6	++
stmts	20:12	20:86	5	
water	20:12	0:0	6	residual
op	20:20	0:0	6	[
water	20:21	0:0	6	i
op	20:22	0:0	6	]
op	20:24	0:0	6	=
call	20:26	20:85	6	sign_extend
arg	20:38	20:63	7	samples[i]-samples[i-1]
water	20:38	0:0	8	samples
op	20:45	0:0	8	[
water	20:46	0:0	8	i
op	20:47	0:0	8	]
op	20:49	0:0	8	-
water	20:51	0:0	8	samples
op	20:58	0:0	8	[
water	20:59	0:0	8	i
op	20:60	0:0	8	-
water	20:61	0:0	8	1
op	20:62	0:0	8	]
arg	20:65	20:85	7	s->write_sample_size
water	20:65	0:0	8	s
op	20:66	0:0	8	->
water	20:68	0:0	8	write_sample_size
water	20:86	0:0	6	;
for	22:8	48:8	4	(i = lpc . lpc_order + 1 ;i < s -> frame_size;i ++)
forinit	22:13	22:34	5	i = lpc . lpc_order + 1 ;
water	22:13	0:0	6	i
op	22:15	0:0	6	=
water	22:17	0:0	6	lpc
op	22:20	0:0	6	.
water	22:21	0:0	6	lpc_order
op	22:31	0:0	6	+
water	22:33	0:0	6	1
water	22:34	0:0	6	;
cond	22:36	22:43	5	i < s -> frame_size
water	22:36	0:0	6	i
op	22:38	0:0	6	<
water	22:40	0:0	6	s
op	22:41	0:0	6	->
water	22:43	0:0	6	frame_size
forexpr	22:55	22:56	5	i ++
water	22:55	0:0	6	i
op	22:56	0:0	6	++
stmts	22:60	48:8	5	
water	22:60	0:0	6	{
decl	23:12	23:58	6	int	sum
op	23:20	0:0	6	=
water	23:22	0:0	6	1
op	23:24	0:0	6	<<
water	23:27	0:0	6	(
water	23:28	0:0	6	lpc
op	23:31	0:0	6	.
water	23:32	0:0	6	lpc_quant
op	23:42	0:0	6	-
water	23:44	0:0	6	1
water	23:45	0:0	6	)
water	23:46	0:0	6	,
decl	23:12	23:58	6	int	res_val
water	23:55	0:0	6	,
decl	23:12	23:58	6	int	j
for	24:12	27:12	6	(j = 0 ;j < lpc . lpc_order;j ++)
forinit	24:17	24:22	7	j = 0 ;
water	24:17	0:0	8	j
op	24:19	0:0	8	=
water	24:21	0:0	8	0
water	24:22	0:0	8	;
cond	24:24	24:32	7	j < lpc . lpc_order
water	24:24	0:0	8	j
op	24:26	0:0	8	<
water	24:28	0:0	8	lpc
op	24:31	0:0	8	.
water	24:32	0:0	8	lpc_order
forexpr	24:43	24:44	7	j ++
water	24:43	0:0	8	j
op	24:44	0:0	8	++
stmts	24:48	27:12	7	
water	24:48	0:0	8	{
water	25:16	0:0	8	sum
op	25:20	0:0	8	+=
water	25:23	0:0	8	(
water	25:24	0:0	8	samples
op	25:31	0:0	8	[
water	25:32	0:0	8	lpc
op	25:35	0:0	8	.
water	25:36	0:0	8	lpc_order
op	25:45	0:0	8	-
water	25:46	0:0	8	j
op	25:47	0:0	8	]
op	25:49	0:0	8	-
water	25:51	0:0	8	samples
op	25:58	0:0	8	[
water	25:59	0:0	8	0
op	25:60	0:0	8	]
water	25:61	0:0	8	)
op	25:63	0:0	8	*
water	26:23	0:0	8	lpc
op	26:26	0:0	8	.
water	26:27	0:0	8	lpc_coeff
op	26:36	0:0	8	[
water	26:37	0:0	8	j
op	26:38	0:0	8	]
water	26:39	0:0	8	;
water	27:12	0:0	8	}
water	28:12	0:0	6	sum
op	28:16	0:0	6	>>=
water	28:20	0:0	6	lpc
op	28:23	0:0	6	.
water	28:24	0:0	6	lpc_quant
water	28:33	0:0	6	;
water	29:12	0:0	6	sum
op	29:16	0:0	6	+=
water	29:19	0:0	6	samples
op	29:26	0:0	6	[
water	29:27	0:0	6	0
op	29:28	0:0	6	]
water	29:29	0:0	6	;
water	30:12	0:0	6	residual
op	30:20	0:0	6	[
water	30:21	0:0	6	i
op	30:22	0:0	6	]
op	30:24	0:0	6	=
call	30:26	31:58	6	sign_extend
arg	30:38	30:68	7	samples[lpc.lpc_order+1]-sum
water	30:38	0:0	8	samples
op	30:45	0:0	8	[
water	30:46	0:0	8	lpc
op	30:49	0:0	8	.
water	30:50	0:0	8	lpc_order
op	30:59	0:0	8	+
water	30:60	0:0	8	1
op	30:61	0:0	8	]
op	30:63	0:0	8	-
water	30:65	0:0	8	sum
arg	31:38	31:58	7	s->write_sample_size
water	31:38	0:0	8	s
op	31:39	0:0	8	->
water	31:41	0:0	8	write_sample_size
water	31:59	0:0	6	;
water	32:12	0:0	6	res_val
op	32:20	0:0	6	=
water	32:22	0:0	6	residual
op	32:30	0:0	6	[
water	32:31	0:0	6	i
op	32:32	0:0	6	]
water	32:33	0:0	6	;
if	33:12	46:12	6	(res_val)
cond	33:16	33:16	7	res_val
water	33:16	0:0	8	res_val
stmts	33:25	46:12	7	
water	33:25	0:0	8	{
decl	34:16	34:45	8	int	index
op	34:26	0:0	8	=
water	34:28	0:0	8	lpc
op	34:31	0:0	8	.
water	34:32	0:0	8	lpc_order
op	34:42	0:0	8	-
water	34:44	0:0	8	1
decl	35:16	35:39	8	int	neg
op	35:24	0:0	8	=
water	35:26	0:0	8	(
water	35:27	0:0	8	res_val
op	35:35	0:0	8	<
water	35:37	0:0	8	0
water	35:38	0:0	8	)
while	36:16	45:16	8	(index >= 0 && ( neg ? ( res_val < 0 ) : ( res_val > 0 ) ))
cond	36:23	36:73	9	index >= 0 && ( neg ? ( res_val < 0 ) : ( res_val > 0 ) )
water	36:23	0:0	10	index
op	36:29	0:0	10	>=
water	36:32	0:0	10	0
op	36:34	0:0	10	&&
water	36:37	0:0	10	(
water	36:38	0:0	10	neg
water	36:42	0:0	10	?
water	36:44	0:0	10	(
water	36:45	0:0	10	res_val
op	36:53	0:0	10	<
water	36:55	0:0	10	0
water	36:56	0:0	10	)
water	36:58	0:0	10	:
water	36:60	0:0	10	(
water	36:61	0:0	10	res_val
op	36:69	0:0	10	>
water	36:71	0:0	10	0
water	36:72	0:0	10	)
water	36:73	0:0	10	)
stmts	36:76	45:16	9	
water	36:76	0:0	10	{
decl	37:20	37:74	10	int	val
op	37:29	0:0	10	=
water	37:31	0:0	10	samples
op	37:38	0:0	10	[
water	37:39	0:0	10	0
op	37:40	0:0	10	]
op	37:42	0:0	10	-
water	37:44	0:0	10	samples
op	37:51	0:0	10	[
water	37:52	0:0	10	lpc
op	37:55	0:0	10	.
water	37:56	0:0	10	lpc_order
op	37:66	0:0	10	-
water	37:68	0:0	10	index
op	37:73	0:0	10	]
decl	38:20	38:54	10	int	sign
op	38:29	0:0	10	=
water	38:31	0:0	10	(
water	38:32	0:0	10	val
water	38:36	0:0	10	?
call	38:38	38:48	11	FFSIGN
arg	38:45	38:48	12	val
water	38:45	0:0	13	val
water	38:50	0:0	10	:
water	38:52	0:0	10	0
water	38:53	0:0	10	)
if	39:20	40:34	10	(neg)
cond	39:24	39:24	11	neg
water	39:24	0:0	12	neg
stmts	40:24	40:34	11	
water	40:24	0:0	12	sign
op	40:29	0:0	12	*=
op	40:32	0:0	12	-
water	40:33	0:0	12	1
water	40:34	0:0	12	;
water	41:20	0:0	10	lpc
op	41:23	0:0	10	.
water	41:24	0:0	10	lpc_coeff
op	41:33	0:0	10	[
water	41:34	0:0	10	index
op	41:39	0:0	10	]
op	41:41	0:0	10	-=
water	41:44	0:0	10	sign
water	41:48	0:0	10	;
water	42:20	0:0	10	val
op	42:24	0:0	10	*=
water	42:27	0:0	10	sign
water	42:31	0:0	10	;
water	43:20	0:0	10	res_val
op	43:28	0:0	10	-=
water	43:31	0:0	10	(
water	43:32	0:0	10	val
op	43:36	0:0	10	>>
water	43:39	0:0	10	lpc
op	43:42	0:0	10	.
water	43:43	0:0	10	lpc_quant
water	43:52	0:0	10	)
op	43:54	0:0	10	*
water	43:56	0:0	10	(
water	43:57	0:0	10	lpc
op	43:60	0:0	10	.
water	43:61	0:0	10	lpc_order
op	43:71	0:0	10	-
water	43:73	0:0	10	index
water	43:78	0:0	10	)
water	43:79	0:0	10	;
water	44:20	0:0	10	index
op	44:25	0:0	10	--
water	44:27	0:0	10	;
water	45:16	0:0	10	}
water	46:12	0:0	8	}
water	47:12	0:0	6	samples
op	47:19	0:0	6	++
water	47:21	0:0	6	;
water	48:8	0:0	6	}
water	49:4	0:0	4	}

func	1:0	27:0	0	static int	dshow_read_packet
params	1:28	0:0	1	
param	1:29	1:47	2	AVFormatContext *	s
param	1:49	1:62	2	AVPacket *	pkt
stmnts	0:0	26:46	1	
decl	3:4	3:40	2	struct dshow_ctx	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	s
op	3:29	0:0	2	->
water	3:31	0:0	2	priv_data
decl	4:4	4:29	2	AVPacketList	*pktl
op	4:23	0:0	2	=
water	4:25	0:0	2	NULL
while	5:4	25:4	2	(! ctx -> eof && ! pktl)
cond	5:11	5:25	3	! ctx -> eof && ! pktl
op	5:11	0:0	4	!
water	5:12	0:0	4	ctx
op	5:15	0:0	4	->
water	5:17	0:0	4	eof
op	5:21	0:0	4	&&
op	5:24	0:0	4	!
water	5:25	0:0	4	pktl
stmts	5:31	25:4	3	
water	5:31	0:0	4	{
call	6:8	6:48	4	WaitForSingleObject
arg	6:28	6:38	5	ctx->mutex
water	6:28	0:0	6	ctx
op	6:31	0:0	6	->
water	6:33	0:0	6	mutex
arg	6:40	6:48	5	INFINITE
water	6:40	0:0	6	INFINITE
water	6:49	0:0	4	;
water	7:8	0:0	4	pktl
op	7:13	0:0	4	=
water	7:15	0:0	4	ctx
op	7:18	0:0	4	->
water	7:20	0:0	4	pktl
water	7:24	0:0	4	;
if	8:8	13:8	4	(pktl)
cond	8:12	8:12	5	pktl
water	8:12	0:0	6	pktl
stmts	8:18	13:8	5	
water	8:18	0:0	6	{
op	9:12	0:0	6	*
water	9:13	0:0	6	pkt
op	9:17	0:0	6	=
water	9:19	0:0	6	pktl
op	9:23	0:0	6	->
water	9:25	0:0	6	pkt
water	9:28	0:0	6	;
water	10:12	0:0	6	ctx
op	10:15	0:0	6	->
water	10:17	0:0	6	pktl
op	10:22	0:0	6	=
water	10:24	0:0	6	ctx
op	10:27	0:0	6	->
water	10:29	0:0	6	pktl
op	10:33	0:0	6	->
water	10:35	0:0	6	next
water	10:39	0:0	6	;
call	11:12	11:24	6	av_free
arg	11:20	11:24	7	pktl
water	11:20	0:0	8	pktl
water	11:25	0:0	6	;
water	12:12	0:0	6	ctx
op	12:15	0:0	6	->
water	12:17	0:0	6	curbufsize
op	12:27	0:0	6	[
water	12:28	0:0	6	pkt
op	12:31	0:0	6	->
water	12:33	0:0	6	stream_index
op	12:45	0:0	6	]
op	12:47	0:0	6	-=
water	12:50	0:0	6	pkt
op	12:53	0:0	6	->
water	12:55	0:0	6	size
water	12:59	0:0	6	;
water	13:8	0:0	6	}
call	14:8	14:32	4	ResetEvent
arg	14:19	14:32	5	ctx->event[1]
water	14:19	0:0	6	ctx
op	14:22	0:0	6	->
water	14:24	0:0	6	event
op	14:29	0:0	6	[
water	14:30	0:0	6	1
op	14:31	0:0	6	]
water	14:33	0:0	4	;
call	15:8	15:31	4	ReleaseMutex
arg	15:21	15:31	5	ctx->mutex
water	15:21	0:0	6	ctx
op	15:24	0:0	6	->
water	15:26	0:0	6	mutex
water	15:32	0:0	4	;
if	16:8	24:8	4	(! pktl)
cond	16:12	16:13	5	! pktl
op	16:12	0:0	6	!
water	16:13	0:0	6	pktl
stmts	16:19	24:8	5	
water	16:19	0:0	6	{
if	17:12	19:12	6	(dshow_check_event_queue (ctx -> media_event ) < 0)
cond	17:16	17:60	7	dshow_check_event_queue (ctx -> media_event ) < 0
call	17:16	17:56	8	dshow_check_event_queue
arg	17:40	17:56	9	ctx->media_event
water	17:40	0:0	10	ctx
op	17:43	0:0	10	->
water	17:45	0:0	10	media_event
op	17:58	0:0	8	<
water	17:60	0:0	8	0
stmts	17:63	19:12	7	
water	17:63	0:0	8	{
water	18:16	0:0	8	ctx
op	18:19	0:0	8	->
water	18:21	0:0	8	eof
op	18:25	0:0	8	=
water	18:27	0:0	8	1
water	18:28	0:0	8	;
water	19:12	0:0	8	}
else	19:14	21:12	6
stmts	19:19	21:12	7	
if	19:19	21:12	8	(s -> flags & AVFMT_FLAG_NONBLOCK)
cond	19:23	19:34	9	s -> flags & AVFMT_FLAG_NONBLOCK
water	19:23	0:0	10	s
op	19:24	0:0	10	->
water	19:26	0:0	10	flags
op	19:32	0:0	10	&
water	19:34	0:0	10	AVFMT_FLAG_NONBLOCK
stmts	19:55	21:12	9	
water	19:55	0:0	10	{
return	20:16	20:38	10	AVERROR(EAGAIN)
call	20:23	20:37	11	AVERROR
arg	20:31	20:37	12	EAGAIN
water	20:31	0:0	13	EAGAIN
water	21:12	0:0	10	}
else	21:14	23:12	6
stmts	21:19	23:12	7	
water	21:19	0:0	8	{
call	22:16	22:65	8	WaitForMultipleObjects
arg	22:39	22:40	9	2
water	22:39	0:0	10	2
arg	22:42	22:52	9	ctx->event
water	22:42	0:0	10	ctx
op	22:45	0:0	10	->
water	22:47	0:0	10	event
arg	22:54	22:55	9	0
water	22:54	0:0	10	0
arg	22:57	22:65	9	INFINITE
water	22:57	0:0	10	INFINITE
water	22:66	0:0	8	;
water	23:12	0:0	8	}
water	24:8	0:0	6	}
water	25:4	0:0	4	}
return	26:4	26:46	2	ctx->eof?AVERROR(EIO):pkt->size
water	26:11	0:0	3	ctx
op	26:14	0:0	3	->
water	26:16	0:0	3	eof
water	26:20	0:0	3	?
call	26:22	26:33	3	AVERROR
arg	26:30	26:33	4	EIO
water	26:30	0:0	5	EIO
water	26:35	0:0	3	:
water	26:37	0:0	3	pkt
op	26:40	0:0	3	->
water	26:42	0:0	3	size

func	1:4	35:0	0	AAC_RENAME	(ff_decode_sbr_extension)
params	1:39	0:0	1	
param	1:40	1:54	2	AACContext *	ac
param	1:56	1:84	2	SpectralBandReplication *	sbr
param	2:28	2:50	2	GetBitContext *	gb_host
param	2:52	2:59	2	int	crc
param	2:61	2:68	2	int	cnt
param	2:70	2:80	2	int	id_aac
stmnts	0:0	34:14	1	
decl	4:4	4:49	2	unsigned int	num_sbr_bits
op	4:30	0:0	2	=
water	4:32	0:0	2	0
water	4:33	0:0	2	,
decl	4:4	4:49	2	unsigned int	num_align_bits
water	5:4	0:0	2	unsigned
water	5:13	0:0	2	bytes_read
water	5:23	0:0	2	;
decl	6:4	6:44	2	GetBitContext	gbc
op	6:22	0:0	2	=
op	6:24	0:0	2	*
water	6:25	0:0	2	gb_host
water	6:32	0:0	2	,
decl	6:4	6:44	2	GetBitContext	*gb
op	6:38	0:0	2	=
op	6:40	0:0	2	&
water	6:41	0:0	2	gbc
call	7:4	7:37	2	skip_bits_long
arg	7:19	7:26	3	gb_host
water	7:19	0:0	4	gb_host
arg	7:28	7:37	3	cnt*8-4
water	7:28	0:0	4	cnt
op	7:31	0:0	4	*
water	7:32	0:0	4	8
op	7:34	0:0	4	-
water	7:36	0:0	4	4
water	7:38	0:0	2	;
water	8:4	0:0	2	sbr
op	8:7	0:0	2	->
water	8:9	0:0	2	reset
op	8:15	0:0	2	=
water	8:17	0:0	2	0
water	8:18	0:0	2	;
if	9:4	10:57	2	(! sbr -> sample_rate)
cond	9:8	9:14	3	! sbr -> sample_rate
op	9:8	0:0	4	!
water	9:9	0:0	4	sbr
op	9:12	0:0	4	->
water	9:14	0:0	4	sample_rate
stmts	10:8	10:57	3	
water	10:8	0:0	4	sbr
op	10:11	0:0	4	->
water	10:13	0:0	4	sample_rate
op	10:25	0:0	4	=
water	10:27	0:0	4	2
op	10:29	0:0	4	*
water	10:31	0:0	4	ac
op	10:33	0:0	4	->
water	10:35	0:0	4	oc
op	10:37	0:0	4	[
water	10:38	0:0	4	1
op	10:39	0:0	4	]
op	10:40	0:0	4	.
water	10:41	0:0	4	m4ac
op	10:45	0:0	4	.
water	10:46	0:0	4	sample_rate
water	10:57	0:0	4	;
if	11:4	12:71	2	(! ac -> oc [ 1 ] . m4ac . ext_sample_rate)
cond	11:8	11:24	3	! ac -> oc [ 1 ] . m4ac . ext_sample_rate
op	11:8	0:0	4	!
water	11:9	0:0	4	ac
op	11:11	0:0	4	->
water	11:13	0:0	4	oc
op	11:15	0:0	4	[
water	11:16	0:0	4	1
op	11:17	0:0	4	]
op	11:18	0:0	4	.
water	11:19	0:0	4	m4ac
op	11:23	0:0	4	.
water	11:24	0:0	4	ext_sample_rate
stmts	12:8	12:71	3	
water	12:8	0:0	4	ac
op	12:10	0:0	4	->
water	12:12	0:0	4	oc
op	12:14	0:0	4	[
water	12:15	0:0	4	1
op	12:16	0:0	4	]
op	12:17	0:0	4	.
water	12:18	0:0	4	m4ac
op	12:22	0:0	4	.
water	12:23	0:0	4	ext_sample_rate
op	12:39	0:0	4	=
water	12:41	0:0	4	2
op	12:43	0:0	4	*
water	12:45	0:0	4	ac
op	12:47	0:0	4	->
water	12:49	0:0	4	oc
op	12:51	0:0	4	[
water	12:52	0:0	4	1
op	12:53	0:0	4	]
op	12:54	0:0	4	.
water	12:55	0:0	4	m4ac
op	12:59	0:0	4	.
water	12:60	0:0	4	sample_rate
water	12:71	0:0	4	;
if	13:4	16:4	2	(crc)
cond	13:8	13:8	3	crc
water	13:8	0:0	4	crc
stmts	13:13	16:4	3	
water	13:13	0:0	4	{
call	14:8	14:24	4	skip_bits
arg	14:18	14:20	5	gb
water	14:18	0:0	6	gb
arg	14:22	14:24	5	10
water	14:22	0:0	6	10
water	14:25	0:0	4	;
water	15:8	0:0	4	num_sbr_bits
op	15:21	0:0	4	+=
water	15:24	0:0	4	10
water	15:26	0:0	4	;
water	16:4	0:0	4	}
water	18:4	0:0	2	sbr
op	18:7	0:0	2	->
water	18:9	0:0	2	kx
op	18:11	0:0	2	[
water	18:12	0:0	2	0
op	18:13	0:0	2	]
op	18:15	0:0	2	=
water	18:17	0:0	2	sbr
op	18:20	0:0	2	->
water	18:22	0:0	2	kx
op	18:24	0:0	2	[
water	18:25	0:0	2	1
op	18:26	0:0	2	]
water	18:27	0:0	2	;
water	19:4	0:0	2	sbr
op	19:7	0:0	2	->
water	19:9	0:0	2	m
op	19:10	0:0	2	[
water	19:11	0:0	2	0
op	19:12	0:0	2	]
op	19:14	0:0	2	=
water	19:16	0:0	2	sbr
op	19:19	0:0	2	->
water	19:21	0:0	2	m
op	19:22	0:0	2	[
water	19:23	0:0	2	1
op	19:24	0:0	2	]
water	19:25	0:0	2	;
water	20:4	0:0	2	sbr
op	20:7	0:0	2	->
water	20:9	0:0	2	kx_and_m_pushed
op	20:25	0:0	2	=
water	20:27	0:0	2	1
water	20:28	0:0	2	;
water	21:4	0:0	2	num_sbr_bits
op	21:16	0:0	2	++
water	21:18	0:0	2	;
if	22:4	23:48	2	(get_bits1 (gb ))
cond	22:8	22:20	3	get_bits1 (gb )
call	22:8	22:20	4	get_bits1
arg	22:18	22:20	5	gb
water	22:18	0:0	6	gb
stmts	23:8	23:48	3	
water	23:8	0:0	4	num_sbr_bits
op	23:21	0:0	4	+=
call	23:24	23:47	4	read_sbr_header
arg	23:40	23:43	5	sbr
water	23:40	0:0	6	sbr
arg	23:45	23:47	5	gb
water	23:45	0:0	6	gb
water	23:48	0:0	4	;
if	24:4	25:26	2	(sbr -> reset)
cond	24:8	24:13	3	sbr -> reset
water	24:8	0:0	4	sbr
op	24:11	0:0	4	->
water	24:13	0:0	4	reset
stmts	25:8	25:26	3	
call	25:8	25:25	4	sbr_reset
arg	25:18	25:20	5	ac
water	25:18	0:0	6	ac
arg	25:22	25:25	5	sbr
water	25:22	0:0	6	sbr
water	25:26	0:0	4	;
if	26:4	27:59	2	(sbr -> start)
cond	26:8	26:13	3	sbr -> start
water	26:8	0:0	4	sbr
op	26:11	0:0	4	->
water	26:13	0:0	4	start
stmts	27:8	27:59	3	
water	27:8	0:0	4	num_sbr_bits
op	27:22	0:0	4	+=
call	27:25	27:58	4	read_sbr_data
arg	27:39	27:41	5	ac
water	27:39	0:0	6	ac
arg	27:43	27:46	5	sbr
water	27:43	0:0	6	sbr
arg	27:48	27:50	5	gb
water	27:48	0:0	6	gb
arg	27:52	27:58	5	id_aac
water	27:52	0:0	6	id_aac
water	27:59	0:0	4	;
water	28:4	0:0	2	num_align_bits
op	28:19	0:0	2	=
water	28:21	0:0	2	(
water	28:22	0:0	2	(
water	28:23	0:0	2	cnt
op	28:27	0:0	2	<<
water	28:30	0:0	2	3
water	28:31	0:0	2	)
op	28:33	0:0	2	-
water	28:35	0:0	2	4
op	28:37	0:0	2	-
water	28:39	0:0	2	num_sbr_bits
water	28:51	0:0	2	)
op	28:53	0:0	2	&
water	28:55	0:0	2	7
water	28:56	0:0	2	;
water	29:4	0:0	2	bytes_read
op	29:15	0:0	2	=
water	29:17	0:0	2	(
water	29:18	0:0	2	(
water	29:19	0:0	2	num_sbr_bits
op	29:32	0:0	2	+
water	29:34	0:0	2	num_align_bits
op	29:49	0:0	2	+
water	29:51	0:0	2	4
water	29:52	0:0	2	)
op	29:54	0:0	2	>>
water	29:57	0:0	2	3
water	29:58	0:0	2	)
water	29:59	0:0	2	;
if	30:4	33:4	2	(bytes_read > cnt)
cond	30:8	30:21	3	bytes_read > cnt
water	30:8	0:0	4	bytes_read
op	30:19	0:0	4	>
water	30:21	0:0	4	cnt
stmts	30:26	33:4	3	
water	30:26	0:0	4	{
call	31:8	32:83	4	av_log
arg	31:15	31:24	5	ac->avctx
water	31:15	0:0	6	ac
op	31:17	0:0	6	->
water	31:19	0:0	6	avctx
arg	31:26	31:38	5	AV_LOG_ERROR
water	31:26	0:0	6	AV_LOG_ERROR
arg	32:15	32:66	5	"Expected to read %d SBR bytes actually read %d.\n"
water	32:15	0:0	6	"Expected to read %d SBR bytes actually read %d.\n"
arg	32:68	32:71	5	cnt
water	32:68	0:0	6	cnt
arg	32:73	32:83	5	bytes_read
water	32:73	0:0	6	bytes_read
water	32:84	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:14	2	cnt
water	34:11	0:0	3	cnt

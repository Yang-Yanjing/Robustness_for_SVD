func	1:0	35:0	0	static int	query_formats
params	1:24	0:0	1	
param	1:25	1:45	2	AVFilterContext *	ctx
stmnts	0:0	34:12	1	
decl	3:4	3:28	2	AVFilterFormats	*formats
decl	4:4	4:30	2	enum AVPixelFormat	pix_fmt
decl	5:4	5:11	2	int	ret
if	6:4	19:4	2	(ctx -> inputs [ 0 ])
cond	6:8	6:21	3	ctx -> inputs [ 0 ]
water	6:8	0:0	4	ctx
op	6:11	0:0	4	->
water	6:13	0:0	4	inputs
op	6:19	0:0	4	[
water	6:20	0:0	4	0
op	6:21	0:0	4	]
stmts	6:24	19:4	3	
water	6:24	0:0	4	{
decl	7:8	7:45	4	const AVPixFmtDescriptor	*desc
op	7:39	0:0	4	=
water	7:41	0:0	4	NULL
water	8:8	0:0	4	formats
op	8:16	0:0	4	=
water	8:18	0:0	4	NULL
water	8:22	0:0	4	;
while	9:8	17:8	4	(( desc =av_pix_fmt_desc_next (desc ) ))
cond	9:15	9:49	5	( desc =av_pix_fmt_desc_next (desc ) )
water	9:15	0:0	6	(
water	9:16	0:0	6	desc
op	9:21	0:0	6	=
call	9:23	9:48	6	av_pix_fmt_desc_next
arg	9:44	9:48	7	desc
water	9:44	0:0	8	desc
water	9:49	0:0	6	)
stmts	9:52	17:8	5	
water	9:52	0:0	6	{
water	10:12	0:0	6	pix_fmt
op	10:20	0:0	6	=
call	10:22	10:49	6	av_pix_fmt_desc_get_id
arg	10:45	10:49	7	desc
water	10:45	0:0	8	desc
water	10:50	0:0	6	;
if	11:12	16:12	6	((sws_isSupportedInput (pix_fmt ) ||sws_isSupportedEndiannessConversion (pix_fmt ) ) && ( ret =ff_add_format (& formats ,pix_fmt ) ) < 0)
cond	11:16	13:62	7	(sws_isSupportedInput (pix_fmt ) ||sws_isSupportedEndiannessConversion (pix_fmt ) ) && ( ret =ff_add_format (& formats ,pix_fmt ) ) < 0
water	11:16	0:0	8	(
call	11:17	11:45	8	sws_isSupportedInput
arg	11:38	11:45	9	pix_fmt
water	11:38	0:0	10	pix_fmt
op	11:47	0:0	8	||
call	12:17	12:60	8	sws_isSupportedEndiannessConversion
arg	12:53	12:60	9	pix_fmt
water	12:53	0:0	10	pix_fmt
water	12:61	0:0	8	)
op	13:16	0:0	8	&&
water	13:19	0:0	8	(
water	13:20	0:0	8	ret
op	13:24	0:0	8	=
call	13:26	13:57	8	ff_add_format
arg	13:40	13:48	9	&formats
op	13:40	0:0	10	&
water	13:41	0:0	10	formats
arg	13:50	13:57	9	pix_fmt
water	13:50	0:0	10	pix_fmt
water	13:58	0:0	8	)
op	13:60	0:0	8	<
water	13:62	0:0	8	0
stmts	13:65	16:12	7	
water	13:65	0:0	8	{
call	14:16	14:41	8	ff_formats_unref
arg	14:33	14:41	9	&formats
op	14:33	0:0	10	&
water	14:34	0:0	10	formats
water	14:42	0:0	8	;
return	15:16	15:26	8	ret
water	15:23	0:0	9	ret
water	16:12	0:0	8	}
water	17:8	0:0	6	}
call	18:8	18:60	4	ff_formats_ref
arg	18:23	18:30	5	formats
water	18:23	0:0	6	formats
arg	18:32	18:60	5	&ctx->inputs[0]->out_formats
op	18:32	0:0	6	&
water	18:33	0:0	6	ctx
op	18:36	0:0	6	->
water	18:38	0:0	6	inputs
op	18:44	0:0	6	[
water	18:45	0:0	6	0
op	18:46	0:0	6	]
op	18:47	0:0	6	->
water	18:49	0:0	6	out_formats
water	18:61	0:0	4	;
water	19:4	0:0	4	}
if	20:4	33:4	2	(ctx -> outputs [ 0 ])
cond	20:8	20:22	3	ctx -> outputs [ 0 ]
water	20:8	0:0	4	ctx
op	20:11	0:0	4	->
water	20:13	0:0	4	outputs
op	20:20	0:0	4	[
water	20:21	0:0	4	0
op	20:22	0:0	4	]
stmts	20:25	33:4	3	
water	20:25	0:0	4	{
decl	21:8	21:45	4	const AVPixFmtDescriptor	*desc
op	21:39	0:0	4	=
water	21:41	0:0	4	NULL
water	22:8	0:0	4	formats
op	22:16	0:0	4	=
water	22:18	0:0	4	NULL
water	22:22	0:0	4	;
while	23:8	31:8	4	(( desc =av_pix_fmt_desc_next (desc ) ))
cond	23:15	23:49	5	( desc =av_pix_fmt_desc_next (desc ) )
water	23:15	0:0	6	(
water	23:16	0:0	6	desc
op	23:21	0:0	6	=
call	23:23	23:48	6	av_pix_fmt_desc_next
arg	23:44	23:48	7	desc
water	23:44	0:0	8	desc
water	23:49	0:0	6	)
stmts	23:52	31:8	5	
water	23:52	0:0	6	{
water	24:12	0:0	6	pix_fmt
op	24:20	0:0	6	=
call	24:22	24:49	6	av_pix_fmt_desc_get_id
arg	24:45	24:49	7	desc
water	24:45	0:0	8	desc
water	24:50	0:0	6	;
if	25:12	30:12	6	((sws_isSupportedOutput (pix_fmt ) || pix_fmt == AV_PIX_FMT_PAL8 ||sws_isSupportedEndiannessConversion (pix_fmt ) ) && ( ret =ff_add_format (& formats ,pix_fmt ) ) < 0)
cond	25:16	27:62	7	(sws_isSupportedOutput (pix_fmt ) || pix_fmt == AV_PIX_FMT_PAL8 ||sws_isSupportedEndiannessConversion (pix_fmt ) ) && ( ret =ff_add_format (& formats ,pix_fmt ) ) < 0
water	25:16	0:0	8	(
call	25:17	25:46	8	sws_isSupportedOutput
arg	25:39	25:46	9	pix_fmt
water	25:39	0:0	10	pix_fmt
op	25:48	0:0	8	||
water	25:51	0:0	8	pix_fmt
op	25:59	0:0	8	==
water	25:62	0:0	8	AV_PIX_FMT_PAL8
op	25:78	0:0	8	||
call	26:17	26:60	8	sws_isSupportedEndiannessConversion
arg	26:53	26:60	9	pix_fmt
water	26:53	0:0	10	pix_fmt
water	26:61	0:0	8	)
op	27:16	0:0	8	&&
water	27:19	0:0	8	(
water	27:20	0:0	8	ret
op	27:24	0:0	8	=
call	27:26	27:57	8	ff_add_format
arg	27:40	27:48	9	&formats
op	27:40	0:0	10	&
water	27:41	0:0	10	formats
arg	27:50	27:57	9	pix_fmt
water	27:50	0:0	10	pix_fmt
water	27:58	0:0	8	)
op	27:60	0:0	8	<
water	27:62	0:0	8	0
stmts	27:65	30:12	7	
water	27:65	0:0	8	{
call	28:16	28:41	8	ff_formats_unref
arg	28:33	28:41	9	&formats
op	28:33	0:0	10	&
water	28:34	0:0	10	formats
water	28:42	0:0	8	;
return	29:16	29:26	8	ret
water	29:23	0:0	9	ret
water	30:12	0:0	8	}
water	31:8	0:0	6	}
call	32:8	32:60	4	ff_formats_ref
arg	32:23	32:30	5	formats
water	32:23	0:0	6	formats
arg	32:32	32:60	5	&ctx->outputs[0]->in_formats
op	32:32	0:0	6	&
water	32:33	0:0	6	ctx
op	32:36	0:0	6	->
water	32:38	0:0	6	outputs
op	32:45	0:0	6	[
water	32:46	0:0	6	0
op	32:47	0:0	6	]
op	32:48	0:0	6	->
water	32:50	0:0	6	in_formats
water	32:61	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:12	2	0
water	34:11	0:0	3	0

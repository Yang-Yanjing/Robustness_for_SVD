func	1:0	46:0	0	static void	adjust_frame_information
params	1:36	0:0	1	
param	1:37	1:56	2	ChannelElement *	cpe
param	1:58	1:67	2	int	chans
stmnts	0:0	45:4	1	
decl	3:4	3:23	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:23	2	int	w
water	3:12	0:0	2	,
decl	3:4	3:23	2	int	w2
water	3:16	0:0	2	,
decl	3:4	3:23	2	int	g
water	3:19	0:0	2	,
decl	3:4	3:23	2	int	ch
decl	4:4	4:23	2	int	maxsfb
water	4:14	0:0	2	,
decl	4:4	4:23	2	int	cmaxsfb
for	5:4	30:4	2	(ch = 0 ;ch < chans;ch ++)
forinit	5:9	5:15	3	ch = 0 ;
water	5:9	0:0	4	ch
op	5:12	0:0	4	=
water	5:14	0:0	4	0
water	5:15	0:0	4	;
cond	5:17	5:22	3	ch < chans
water	5:17	0:0	4	ch
op	5:20	0:0	4	<
water	5:22	0:0	4	chans
forexpr	5:29	5:31	3	ch ++
water	5:29	0:0	4	ch
op	5:31	0:0	4	++
stmts	5:35	30:4	3	
water	5:35	0:0	4	{
decl	6:8	6:55	4	IndividualChannelStream	*ics
op	6:37	0:0	4	=
op	6:39	0:0	4	&
water	6:40	0:0	4	cpe
op	6:43	0:0	4	->
water	6:45	0:0	4	ch
op	6:47	0:0	4	[
water	6:48	0:0	4	ch
op	6:50	0:0	4	]
op	6:51	0:0	4	.
water	6:52	0:0	4	ics
water	7:8	0:0	4	maxsfb
op	7:15	0:0	4	=
water	7:17	0:0	4	0
water	7:18	0:0	4	;
water	8:8	0:0	4	cpe
op	8:11	0:0	4	->
water	8:13	0:0	4	ch
op	8:15	0:0	4	[
water	8:16	0:0	4	ch
op	8:18	0:0	4	]
op	8:19	0:0	4	.
water	8:20	0:0	4	pulse
op	8:25	0:0	4	.
water	8:26	0:0	4	num_pulse
op	8:36	0:0	4	=
water	8:38	0:0	4	0
water	8:39	0:0	4	;
for	9:8	15:8	4	(w = 0 ;w < ics -> num_windows;w += ics -> group_len [ w ])
forinit	9:13	9:18	5	w = 0 ;
water	9:13	0:0	6	w
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:29	5	w < ics -> num_windows
water	9:20	0:0	6	w
op	9:22	0:0	6	<
water	9:24	0:0	6	ics
op	9:27	0:0	6	->
water	9:29	0:0	6	num_windows
forexpr	9:42	9:63	5	w += ics -> group_len [ w ]
water	9:42	0:0	6	w
op	9:44	0:0	6	+=
water	9:47	0:0	6	ics
op	9:50	0:0	6	->
water	9:52	0:0	6	group_len
op	9:61	0:0	6	[
water	9:62	0:0	6	w
op	9:63	0:0	6	]
stmts	9:66	15:8	5	
water	9:66	0:0	6	{
for	10:12	14:12	6	(w2 = 0 ;w2 < ics -> group_len [ w ];w2 ++)
forinit	10:17	10:24	7	w2 = 0 ;
water	10:17	0:0	8	w2
op	10:20	0:0	8	=
water	10:23	0:0	8	0
water	10:24	0:0	8	;
cond	10:26	10:47	7	w2 < ics -> group_len [ w ]
water	10:26	0:0	8	w2
op	10:29	0:0	8	<
water	10:31	0:0	8	ics
op	10:34	0:0	8	->
water	10:36	0:0	8	group_len
op	10:45	0:0	8	[
water	10:46	0:0	8	w
op	10:47	0:0	8	]
forexpr	10:50	10:52	7	w2 ++
water	10:50	0:0	8	w2
op	10:52	0:0	8	++
stmts	10:56	14:12	7	
water	10:56	0:0	8	{
for	11:16	12:20	8	(cmaxsfb = ics -> num_swb ;cmaxsfb > 0 && cpe -> ch [ ch ] . zeroes [ w * 16 + cmaxsfb - 1 ];cmaxsfb --)
forinit	11:21	11:43	9	cmaxsfb = ics -> num_swb ;
water	11:21	0:0	10	cmaxsfb
op	11:29	0:0	10	=
water	11:31	0:0	10	ics
op	11:34	0:0	10	->
water	11:36	0:0	10	num_swb
water	11:43	0:0	10	;
cond	11:45	11:93	9	cmaxsfb > 0 && cpe -> ch [ ch ] . zeroes [ w * 16 + cmaxsfb - 1 ]
water	11:45	0:0	10	cmaxsfb
op	11:53	0:0	10	>
water	11:55	0:0	10	0
op	11:57	0:0	10	&&
water	11:60	0:0	10	cpe
op	11:63	0:0	10	->
water	11:65	0:0	10	ch
op	11:67	0:0	10	[
water	11:68	0:0	10	ch
op	11:70	0:0	10	]
op	11:71	0:0	10	.
water	11:72	0:0	10	zeroes
op	11:78	0:0	10	[
water	11:79	0:0	10	w
op	11:80	0:0	10	*
water	11:81	0:0	10	16
op	11:83	0:0	10	+
water	11:84	0:0	10	cmaxsfb
op	11:91	0:0	10	-
water	11:92	0:0	10	1
op	11:93	0:0	10	]
forexpr	11:96	11:103	9	cmaxsfb --
water	11:96	0:0	10	cmaxsfb
op	11:103	0:0	10	--
stmts	12:20	12:20	9	
water	12:20	0:0	10	;
water	13:16	0:0	8	maxsfb
op	13:23	0:0	8	=
call	13:25	13:46	8	FFMAX
arg	13:31	13:37	9	maxsfb
water	13:31	0:0	10	maxsfb
arg	13:39	13:46	9	cmaxsfb
water	13:39	0:0	10	cmaxsfb
water	13:47	0:0	8	;
water	14:12	0:0	8	}
water	15:8	0:0	6	}
water	16:8	0:0	4	ics
op	16:11	0:0	4	->
water	16:13	0:0	4	max_sfb
op	16:21	0:0	4	=
water	16:23	0:0	4	maxsfb
water	16:29	0:0	4	;
for	18:8	29:8	4	(w = 0 ;w < ics -> num_windows;w += ics -> group_len [ w ])
forinit	18:13	18:18	5	w = 0 ;
water	18:13	0:0	6	w
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:29	5	w < ics -> num_windows
water	18:20	0:0	6	w
op	18:22	0:0	6	<
water	18:24	0:0	6	ics
op	18:27	0:0	6	->
water	18:29	0:0	6	num_windows
forexpr	18:42	18:63	5	w += ics -> group_len [ w ]
water	18:42	0:0	6	w
op	18:44	0:0	6	+=
water	18:47	0:0	6	ics
op	18:50	0:0	6	->
water	18:52	0:0	6	group_len
op	18:61	0:0	6	[
water	18:62	0:0	6	w
op	18:63	0:0	6	]
stmts	18:66	29:8	5	
water	18:66	0:0	6	{
for	19:12	28:12	6	(g = 0 ;g < ics -> max_sfb;g ++)
forinit	19:17	19:22	7	g = 0 ;
water	19:17	0:0	8	g
op	19:19	0:0	8	=
water	19:21	0:0	8	0
water	19:22	0:0	8	;
cond	19:24	19:33	7	g < ics -> max_sfb
water	19:24	0:0	8	g
op	19:26	0:0	8	<
water	19:28	0:0	8	ics
op	19:31	0:0	8	->
water	19:33	0:0	8	max_sfb
forexpr	19:42	19:43	7	g ++
water	19:42	0:0	8	g
op	19:43	0:0	8	++
stmts	19:47	28:12	7	
water	19:47	0:0	8	{
water	20:16	0:0	8	i
op	20:18	0:0	8	=
water	20:20	0:0	8	1
water	20:21	0:0	8	;
for	21:16	26:16	8	(w2 = w ;w2 < w + ics -> group_len [ w ];w2 ++)
forinit	21:21	21:27	9	w2 = w ;
water	21:21	0:0	10	w2
op	21:24	0:0	10	=
water	21:26	0:0	10	w
water	21:27	0:0	10	;
cond	21:29	21:54	9	w2 < w + ics -> group_len [ w ]
water	21:29	0:0	10	w2
op	21:32	0:0	10	<
water	21:34	0:0	10	w
op	21:36	0:0	10	+
water	21:38	0:0	10	ics
op	21:41	0:0	10	->
water	21:43	0:0	10	group_len
op	21:52	0:0	10	[
water	21:53	0:0	10	w
op	21:54	0:0	10	]
forexpr	21:57	21:59	9	w2 ++
water	21:57	0:0	10	w2
op	21:59	0:0	10	++
stmts	21:63	26:16	9	
water	21:63	0:0	10	{
if	22:20	25:20	10	(! cpe -> ch [ ch ] . zeroes [ w2 * 16 + g ])
cond	22:24	22:53	11	! cpe -> ch [ ch ] . zeroes [ w2 * 16 + g ]
op	22:24	0:0	12	!
water	22:25	0:0	12	cpe
op	22:28	0:0	12	->
water	22:30	0:0	12	ch
op	22:32	0:0	12	[
water	22:33	0:0	12	ch
op	22:35	0:0	12	]
op	22:36	0:0	12	.
water	22:37	0:0	12	zeroes
op	22:43	0:0	12	[
water	22:44	0:0	12	w2
op	22:46	0:0	12	*
water	22:47	0:0	12	16
op	22:50	0:0	12	+
water	22:52	0:0	12	g
op	22:53	0:0	12	]
stmts	22:56	25:20	11	
water	22:56	0:0	12	{
water	23:24	0:0	12	i
op	23:26	0:0	12	=
water	23:28	0:0	12	0
water	23:29	0:0	12	;
break	24:24	24:29	12	
water	25:20	0:0	12	}
water	26:16	0:0	10	}
water	27:16	0:0	8	cpe
op	27:19	0:0	8	->
water	27:21	0:0	8	ch
op	27:23	0:0	8	[
water	27:24	0:0	8	ch
op	27:26	0:0	8	]
op	27:27	0:0	8	.
water	27:28	0:0	8	zeroes
op	27:34	0:0	8	[
water	27:35	0:0	8	w
op	27:36	0:0	8	*
water	27:37	0:0	8	16
op	27:40	0:0	8	+
water	27:42	0:0	8	g
op	27:43	0:0	8	]
op	27:45	0:0	8	=
water	27:47	0:0	8	i
water	27:48	0:0	8	;
water	28:12	0:0	8	}
water	29:8	0:0	6	}
water	30:4	0:0	4	}
if	31:4	45:4	2	(chans > 1 && cpe -> common_window)
cond	31:8	31:26	3	chans > 1 && cpe -> common_window
water	31:8	0:0	4	chans
op	31:14	0:0	4	>
water	31:16	0:0	4	1
op	31:18	0:0	4	&&
water	31:21	0:0	4	cpe
op	31:24	0:0	4	->
water	31:26	0:0	4	common_window
stmts	31:41	45:4	3	
water	31:41	0:0	4	{
decl	32:8	32:55	4	IndividualChannelStream	*ics0
op	32:38	0:0	4	=
op	32:40	0:0	4	&
water	32:41	0:0	4	cpe
op	32:44	0:0	4	->
water	32:46	0:0	4	ch
op	32:48	0:0	4	[
water	32:49	0:0	4	0
op	32:50	0:0	4	]
op	32:51	0:0	4	.
water	32:52	0:0	4	ics
decl	33:8	33:55	4	IndividualChannelStream	*ics1
op	33:38	0:0	4	=
op	33:40	0:0	4	&
water	33:41	0:0	4	cpe
op	33:44	0:0	4	->
water	33:46	0:0	4	ch
op	33:48	0:0	4	[
water	33:49	0:0	4	1
op	33:50	0:0	4	]
op	33:51	0:0	4	.
water	33:52	0:0	4	ics
decl	34:8	34:19	4	int	msc
op	34:16	0:0	4	=
water	34:18	0:0	4	0
water	35:8	0:0	4	ics0
op	35:12	0:0	4	->
water	35:14	0:0	4	max_sfb
op	35:22	0:0	4	=
call	35:24	35:58	4	FFMAX
arg	35:30	35:43	5	ics0->max_sfb
water	35:30	0:0	6	ics0
op	35:34	0:0	6	->
water	35:36	0:0	6	max_sfb
arg	35:45	35:58	5	ics1->max_sfb
water	35:45	0:0	6	ics1
op	35:49	0:0	6	->
water	35:51	0:0	6	max_sfb
water	35:59	0:0	4	;
water	36:8	0:0	4	ics1
op	36:12	0:0	4	->
water	36:14	0:0	4	max_sfb
op	36:22	0:0	4	=
water	36:24	0:0	4	ics0
op	36:28	0:0	4	->
water	36:30	0:0	4	max_sfb
water	36:37	0:0	4	;
for	37:8	40:25	4	(w = 0 ;w < ics0 -> num_windows * 16;w += 16)
forinit	37:13	37:18	5	w = 0 ;
water	37:13	0:0	6	w
op	37:15	0:0	6	=
water	37:17	0:0	6	0
water	37:18	0:0	6	;
cond	37:20	37:42	5	w < ics0 -> num_windows * 16
water	37:20	0:0	6	w
op	37:22	0:0	6	<
water	37:24	0:0	6	ics0
op	37:28	0:0	6	->
water	37:30	0:0	6	num_windows
op	37:41	0:0	6	*
water	37:42	0:0	6	16
forexpr	37:46	37:51	5	w += 16
water	37:46	0:0	6	w
op	37:48	0:0	6	+=
water	37:51	0:0	6	16
stmts	38:12	40:25	5	
for	38:12	40:25	6	(i = 0 ;i < ics0 -> max_sfb;i ++)
forinit	38:17	38:22	7	i = 0 ;
water	38:17	0:0	8	i
op	38:19	0:0	8	=
water	38:21	0:0	8	0
water	38:22	0:0	8	;
cond	38:24	38:34	7	i < ics0 -> max_sfb
water	38:24	0:0	8	i
op	38:26	0:0	8	<
water	38:28	0:0	8	ics0
op	38:32	0:0	8	->
water	38:34	0:0	8	max_sfb
forexpr	38:43	38:44	7	i ++
water	38:43	0:0	8	i
op	38:44	0:0	8	++
stmts	39:16	40:25	7	
if	39:16	40:25	8	(cpe -> ms_mask [ w + i ])
cond	39:20	39:36	9	cpe -> ms_mask [ w + i ]
water	39:20	0:0	10	cpe
op	39:23	0:0	10	->
water	39:25	0:0	10	ms_mask
op	39:32	0:0	10	[
water	39:33	0:0	10	w
op	39:34	0:0	10	+
water	39:35	0:0	10	i
op	39:36	0:0	10	]
stmts	40:20	40:25	9	
water	40:20	0:0	10	msc
op	40:23	0:0	10	++
water	40:25	0:0	10	;
if	41:8	42:28	4	(msc == 0 || ics0 -> max_sfb == 0)
cond	41:12	41:41	5	msc == 0 || ics0 -> max_sfb == 0
water	41:12	0:0	6	msc
op	41:16	0:0	6	==
water	41:19	0:0	6	0
op	41:21	0:0	6	||
water	41:24	0:0	6	ics0
op	41:28	0:0	6	->
water	41:30	0:0	6	max_sfb
op	41:38	0:0	6	==
water	41:41	0:0	6	0
stmts	42:12	42:28	5	
water	42:12	0:0	6	cpe
op	42:15	0:0	6	->
water	42:17	0:0	6	ms_mode
op	42:25	0:0	6	=
water	42:27	0:0	6	0
water	42:28	0:0	6	;
else	43:8	44:74	4
stmts	44:12	44:74	5	
water	44:12	0:0	6	cpe
op	44:15	0:0	6	->
water	44:17	0:0	6	ms_mode
op	44:25	0:0	6	=
water	44:27	0:0	6	msc
op	44:31	0:0	6	<
water	44:33	0:0	6	ics0
op	44:37	0:0	6	->
water	44:39	0:0	6	max_sfb
op	44:47	0:0	6	*
water	44:49	0:0	6	ics0
op	44:53	0:0	6	->
water	44:55	0:0	6	num_windows
water	44:67	0:0	6	?
water	44:69	0:0	6	1
water	44:71	0:0	6	:
water	44:73	0:0	6	2
water	44:74	0:0	6	;
water	45:4	0:0	4	}

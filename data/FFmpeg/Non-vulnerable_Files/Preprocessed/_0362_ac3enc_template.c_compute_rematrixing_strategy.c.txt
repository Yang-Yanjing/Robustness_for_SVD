func	1:0	43:0	0	static void	compute_rematrixing_strategy
params	1:40	0:0	1	
param	1:41	1:60	2	AC3EncodeContext *	s
stmnts	0:0	42:4	1	
decl	3:4	3:16	2	int	nb_coefs
decl	4:4	4:16	2	int	blk
water	4:11	0:0	2	,
decl	4:4	4:16	2	int	bnd
decl	5:4	5:35	2	AC3Block	*block
water	5:19	0:0	2	,
decl	5:4	5:35	2	AC3Block	*block0
op	5:29	0:0	2	=
water	5:31	0:0	2	NULL
if	6:4	7:14	2	(s -> channel_mode != AC3_CHMODE_STEREO)
cond	6:8	6:27	3	s -> channel_mode != AC3_CHMODE_STEREO
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	channel_mode
op	6:24	0:0	4	!=
water	6:27	0:0	4	AC3_CHMODE_STEREO
stmts	7:8	7:14	3	
return	7:8	7:14	4	
for	8:4	42:4	2	(blk = 0 ;blk < s -> num_blocks;blk ++)
forinit	8:9	8:16	3	blk = 0 ;
water	8:9	0:0	4	blk
op	8:13	0:0	4	=
water	8:15	0:0	4	0
water	8:16	0:0	4	;
cond	8:18	8:27	3	blk < s -> num_blocks
water	8:18	0:0	4	blk
op	8:22	0:0	4	<
water	8:24	0:0	4	s
op	8:25	0:0	4	->
water	8:27	0:0	4	num_blocks
forexpr	8:39	8:42	3	blk ++
water	8:39	0:0	4	blk
op	8:42	0:0	4	++
stmts	8:46	42:4	3	
water	8:46	0:0	4	{
water	9:8	0:0	4	block
op	9:14	0:0	4	=
op	9:16	0:0	4	&
water	9:17	0:0	4	s
op	9:18	0:0	4	->
water	9:20	0:0	4	blocks
op	9:26	0:0	4	[
water	9:27	0:0	4	blk
op	9:30	0:0	4	]
water	9:31	0:0	4	;
water	10:8	0:0	4	block
op	10:13	0:0	4	->
water	10:15	0:0	4	new_rematrixing_strategy
op	10:40	0:0	4	=
op	10:42	0:0	4	!
water	10:43	0:0	4	blk
water	10:46	0:0	4	;
water	11:8	0:0	4	block
op	11:13	0:0	4	->
water	11:15	0:0	4	num_rematrixing_bands
op	11:37	0:0	4	=
water	11:39	0:0	4	4
water	11:40	0:0	4	;
if	12:8	17:8	4	(block -> cpl_in_use)
cond	12:12	12:19	5	block -> cpl_in_use
water	12:12	0:0	6	block
op	12:17	0:0	6	->
water	12:19	0:0	6	cpl_in_use
stmts	12:31	17:8	5	
water	12:31	0:0	6	{
water	13:12	0:0	6	block
op	13:17	0:0	6	->
water	13:19	0:0	6	num_rematrixing_bands
op	13:41	0:0	6	-=
water	13:44	0:0	6	(
water	13:45	0:0	6	s
op	13:46	0:0	6	->
water	13:48	0:0	6	start_freq
op	13:58	0:0	6	[
water	13:59	0:0	6	CPL_CH
op	13:65	0:0	6	]
op	13:67	0:0	6	<=
water	13:70	0:0	6	61
water	13:72	0:0	6	)
water	13:73	0:0	6	;
water	14:12	0:0	6	block
op	14:17	0:0	6	->
water	14:19	0:0	6	num_rematrixing_bands
op	14:41	0:0	6	-=
water	14:44	0:0	6	(
water	14:45	0:0	6	s
op	14:46	0:0	6	->
water	14:48	0:0	6	start_freq
op	14:58	0:0	6	[
water	14:59	0:0	6	CPL_CH
op	14:65	0:0	6	]
op	14:67	0:0	6	==
water	14:70	0:0	6	37
water	14:72	0:0	6	)
water	14:73	0:0	6	;
if	15:12	16:51	6	(blk && block -> num_rematrixing_bands != block0 -> num_rematrixing_bands)
cond	15:16	15:63	7	blk && block -> num_rematrixing_bands != block0 -> num_rematrixing_bands
water	15:16	0:0	8	blk
op	15:20	0:0	8	&&
water	15:23	0:0	8	block
op	15:28	0:0	8	->
water	15:30	0:0	8	num_rematrixing_bands
op	15:52	0:0	8	!=
water	15:55	0:0	8	block0
op	15:61	0:0	8	->
water	15:63	0:0	8	num_rematrixing_bands
stmts	16:16	16:51	7	
water	16:16	0:0	8	block
op	16:21	0:0	8	->
water	16:23	0:0	8	new_rematrixing_strategy
op	16:48	0:0	8	=
water	16:50	0:0	8	1
water	16:51	0:0	8	;
water	17:8	0:0	6	}
water	18:8	0:0	4	nb_coefs
op	18:17	0:0	4	=
call	18:19	18:63	4	FFMIN
arg	18:25	18:43	5	block->end_freq[1]
water	18:25	0:0	6	block
op	18:30	0:0	6	->
water	18:32	0:0	6	end_freq
op	18:40	0:0	6	[
water	18:41	0:0	6	1
op	18:42	0:0	6	]
arg	18:45	18:63	5	block->end_freq[2]
water	18:45	0:0	6	block
op	18:50	0:0	6	->
water	18:52	0:0	6	end_freq
op	18:60	0:0	6	[
water	18:61	0:0	6	2
op	18:62	0:0	6	]
water	18:64	0:0	4	;
if	19:8	22:8	4	(! s -> rematrixing_enabled)
cond	19:12	19:16	5	! s -> rematrixing_enabled
op	19:12	0:0	6	!
water	19:13	0:0	6	s
op	19:14	0:0	6	->
water	19:16	0:0	6	rematrixing_enabled
stmts	19:37	22:8	5	
water	19:37	0:0	6	{
water	20:12	0:0	6	block0
op	20:19	0:0	6	=
water	20:21	0:0	6	block
water	20:26	0:0	6	;
continue	21:12	21:20	6	
water	22:8	0:0	6	}
for	23:8	40:8	4	(bnd = 0 ;bnd < block -> num_rematrixing_bands;bnd ++)
forinit	23:13	23:20	5	bnd = 0 ;
water	23:13	0:0	6	bnd
op	23:17	0:0	6	=
water	23:19	0:0	6	0
water	23:20	0:0	6	;
cond	23:22	23:35	5	bnd < block -> num_rematrixing_bands
water	23:22	0:0	6	bnd
op	23:26	0:0	6	<
water	23:28	0:0	6	block
op	23:33	0:0	6	->
water	23:35	0:0	6	num_rematrixing_bands
forexpr	23:58	23:61	5	bnd ++
water	23:58	0:0	6	bnd
op	23:61	0:0	6	++
stmts	23:65	40:8	5	
water	23:65	0:0	6	{
decl	25:12	25:53	6	int	start
op	25:22	0:0	6	=
water	25:24	0:0	6	ff_ac3_rematrix_band_tab
op	25:48	0:0	6	[
water	25:49	0:0	6	bnd
op	25:52	0:0	6	]
decl	26:12	26:72	6	int	end
op	26:22	0:0	6	=
call	26:24	26:71	7	FFMIN
arg	26:30	26:38	8	nb_coefs
water	26:30	0:0	9	nb_coefs
arg	26:40	26:71	8	ff_ac3_rematrix_band_tab[bnd+1]
water	26:40	0:0	9	ff_ac3_rematrix_band_tab
op	26:64	0:0	9	[
water	26:65	0:0	9	bnd
op	26:68	0:0	9	+
water	26:69	0:0	9	1
op	26:70	0:0	9	]
decl	27:12	27:30	6	CoefSumType	sum[4]
call	28:12	29:73	6	sum_square_butterfly
arg	28:33	28:34	7	s
water	28:33	0:0	8	s
arg	28:36	28:39	7	sum
water	28:36	0:0	8	sum
arg	28:41	28:68	7	block->mdct_coef[1]+start
water	28:41	0:0	8	block
op	28:46	0:0	8	->
water	28:48	0:0	8	mdct_coef
op	28:57	0:0	8	[
water	28:58	0:0	8	1
op	28:59	0:0	8	]
op	28:61	0:0	8	+
water	28:63	0:0	8	start
arg	29:33	29:60	7	block->mdct_coef[2]+start
water	29:33	0:0	8	block
op	29:38	0:0	8	->
water	29:40	0:0	8	mdct_coef
op	29:49	0:0	8	[
water	29:50	0:0	8	2
op	29:51	0:0	8	]
op	29:53	0:0	8	+
water	29:55	0:0	8	start
arg	29:62	29:73	7	end-start
water	29:62	0:0	8	end
op	29:66	0:0	8	-
water	29:68	0:0	8	start
water	29:74	0:0	6	;
if	31:12	32:49	6	(FFMIN (sum [ 2 ] ,sum [ 3 ] ) <FFMIN (sum [ 0 ] ,sum [ 1 ] ))
cond	31:16	31:60	7	FFMIN (sum [ 2 ] ,sum [ 3 ] ) <FFMIN (sum [ 0 ] ,sum [ 1 ] )
call	31:16	31:36	8	FFMIN
arg	31:22	31:28	9	sum[2]
water	31:22	0:0	10	sum
op	31:25	0:0	10	[
water	31:26	0:0	10	2
op	31:27	0:0	10	]
arg	31:30	31:36	9	sum[3]
water	31:30	0:0	10	sum
op	31:33	0:0	10	[
water	31:34	0:0	10	3
op	31:35	0:0	10	]
op	31:38	0:0	8	<
call	31:40	31:60	8	FFMIN
arg	31:46	31:52	9	sum[0]
water	31:46	0:0	10	sum
op	31:49	0:0	10	[
water	31:50	0:0	10	0
op	31:51	0:0	10	]
arg	31:54	31:60	9	sum[1]
water	31:54	0:0	10	sum
op	31:57	0:0	10	[
water	31:58	0:0	10	1
op	31:59	0:0	10	]
stmts	32:16	32:49	7	
water	32:16	0:0	8	block
op	32:21	0:0	8	->
water	32:23	0:0	8	rematrixing_flags
op	32:40	0:0	8	[
water	32:41	0:0	8	bnd
op	32:44	0:0	8	]
op	32:46	0:0	8	=
water	32:48	0:0	8	1
water	32:49	0:0	8	;
else	33:12	34:49	6
stmts	34:16	34:49	7	
water	34:16	0:0	8	block
op	34:21	0:0	8	->
water	34:23	0:0	8	rematrixing_flags
op	34:40	0:0	8	[
water	34:41	0:0	8	bnd
op	34:44	0:0	8	]
op	34:46	0:0	8	=
water	34:48	0:0	8	0
water	34:49	0:0	8	;
if	36:12	39:12	6	(blk && block -> rematrixing_flags [ bnd ] != block0 -> rematrixing_flags [ bnd ])
cond	36:16	37:78	7	blk && block -> rematrixing_flags [ bnd ] != block0 -> rematrixing_flags [ bnd ]
water	36:16	0:0	8	blk
op	36:20	0:0	8	&&
water	37:16	0:0	8	block
op	37:21	0:0	8	->
water	37:23	0:0	8	rematrixing_flags
op	37:40	0:0	8	[
water	37:41	0:0	8	bnd
op	37:44	0:0	8	]
op	37:46	0:0	8	!=
water	37:49	0:0	8	block0
op	37:55	0:0	8	->
water	37:57	0:0	8	rematrixing_flags
op	37:74	0:0	8	[
water	37:75	0:0	8	bnd
op	37:78	0:0	8	]
stmts	37:81	39:12	7	
water	37:81	0:0	8	{
water	38:16	0:0	8	block
op	38:21	0:0	8	->
water	38:23	0:0	8	new_rematrixing_strategy
op	38:48	0:0	8	=
water	38:50	0:0	8	1
water	38:51	0:0	8	;
water	39:12	0:0	8	}
water	40:8	0:0	6	}
water	41:8	0:0	4	block0
op	41:15	0:0	4	=
water	41:17	0:0	4	block
water	41:22	0:0	4	;
water	42:4	0:0	4	}

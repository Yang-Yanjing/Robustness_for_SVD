func	1:0	42:0	0	static int	handle_metadata
params	1:26	0:0	1	
param	1:27	1:42	2	RTMPContext *	rt
param	1:44	1:59	2	RTMPPacket *	pkt
stmnts	0:0	41:12	1	
decl	3:4	3:31	2	int	ret
water	3:11	0:0	2	,
decl	3:4	3:31	2	int	old_flv_size
water	3:25	0:0	2	,
decl	3:4	3:31	2	int	type
decl	4:4	4:23	2	const uint8_t	*next
decl	5:4	5:14	2	uint8_t	*p
decl	6:4	6:17	2	uint32_t	size
decl	7:4	7:29	2	uint32_t	ts
water	7:15	0:0	2	,
decl	7:4	7:29	2	uint32_t	cts
water	7:20	0:0	2	,
decl	7:4	7:29	2	uint32_t	pts
op	7:26	0:0	2	=
water	7:28	0:0	2	0
water	8:4	0:0	2	old_flv_size
op	8:17	0:0	2	=
call	8:19	8:46	2	update_offset
arg	8:33	8:35	3	rt
water	8:33	0:0	4	rt
arg	8:37	8:46	3	pkt->size
water	8:37	0:0	4	pkt
op	8:40	0:0	4	->
water	8:42	0:0	4	size
water	8:47	0:0	2	;
if	9:4	12:4	2	(( ret =av_reallocp (& rt -> flv_data ,rt -> flv_size ) ) < 0)
cond	9:8	9:59	3	( ret =av_reallocp (& rt -> flv_data ,rt -> flv_size ) ) < 0
water	9:8	0:0	4	(
water	9:9	0:0	4	ret
op	9:13	0:0	4	=
call	9:15	9:54	4	av_reallocp
arg	9:27	9:40	5	&rt->flv_data
op	9:27	0:0	6	&
water	9:28	0:0	6	rt
op	9:30	0:0	6	->
water	9:32	0:0	6	flv_data
arg	9:42	9:54	5	rt->flv_size
water	9:42	0:0	6	rt
op	9:44	0:0	6	->
water	9:46	0:0	6	flv_size
water	9:55	0:0	4	)
op	9:57	0:0	4	<
water	9:59	0:0	4	0
stmts	9:62	12:4	3	
water	9:62	0:0	4	{
water	10:8	0:0	4	rt
op	10:10	0:0	4	->
water	10:12	0:0	4	flv_size
op	10:21	0:0	4	=
water	10:23	0:0	4	rt
op	10:25	0:0	4	->
water	10:27	0:0	4	flv_off
op	10:35	0:0	4	=
water	10:37	0:0	4	0
water	10:38	0:0	4	;
return	11:8	11:18	4	ret
water	11:15	0:0	5	ret
water	12:4	0:0	4	}
water	13:4	0:0	2	next
op	13:9	0:0	2	=
water	13:11	0:0	2	pkt
op	13:14	0:0	2	->
water	13:16	0:0	2	data
water	13:20	0:0	2	;
water	14:4	0:0	2	p
op	14:9	0:0	2	=
water	14:11	0:0	2	rt
op	14:13	0:0	2	->
water	14:15	0:0	2	flv_data
op	14:24	0:0	2	+
water	14:26	0:0	2	old_flv_size
water	14:38	0:0	2	;
water	16:4	0:0	2	ts
op	16:7	0:0	2	=
water	16:9	0:0	2	pkt
op	16:12	0:0	2	->
water	16:14	0:0	2	timestamp
water	16:23	0:0	2	;
while	17:4	35:4	2	(next - pkt -> data < pkt -> size - RTMP_HEADER)
cond	17:11	17:42	3	next - pkt -> data < pkt -> size - RTMP_HEADER
water	17:11	0:0	4	next
op	17:16	0:0	4	-
water	17:18	0:0	4	pkt
op	17:21	0:0	4	->
water	17:23	0:0	4	data
op	17:28	0:0	4	<
water	17:30	0:0	4	pkt
op	17:33	0:0	4	->
water	17:35	0:0	4	size
op	17:40	0:0	4	-
water	17:42	0:0	4	RTMP_HEADER
stmts	17:55	35:4	3	
water	17:55	0:0	4	{
water	18:8	0:0	4	type
op	18:13	0:0	4	=
call	18:15	18:40	4	bytestream_get_byte
arg	18:35	18:40	5	&next
op	18:35	0:0	6	&
water	18:36	0:0	6	next
water	18:41	0:0	4	;
water	19:8	0:0	4	size
op	19:13	0:0	4	=
call	19:15	19:40	4	bytestream_get_be24
arg	19:35	19:40	5	&next
op	19:35	0:0	6	&
water	19:36	0:0	6	next
water	19:41	0:0	4	;
water	20:8	0:0	4	cts
op	20:13	0:0	4	=
call	20:15	20:40	4	bytestream_get_be24
arg	20:35	20:40	5	&next
op	20:35	0:0	6	&
water	20:36	0:0	6	next
water	20:41	0:0	4	;
water	21:8	0:0	4	cts
op	21:12	0:0	4	|=
call	21:15	21:40	4	bytestream_get_byte
arg	21:35	21:40	5	&next
op	21:35	0:0	6	&
water	21:36	0:0	6	next
op	21:42	0:0	4	<<
water	21:45	0:0	4	24
water	21:47	0:0	4	;
if	22:8	23:21	4	(! pts)
cond	22:12	22:13	5	! pts
op	22:12	0:0	6	!
water	22:13	0:0	6	pts
stmts	23:12	23:21	5	
water	23:12	0:0	6	pts
op	23:16	0:0	6	=
water	23:18	0:0	6	cts
water	23:21	0:0	6	;
water	24:8	0:0	4	ts
op	24:11	0:0	4	+=
water	24:14	0:0	4	cts
op	24:18	0:0	4	-
water	24:20	0:0	4	pts
water	24:23	0:0	4	;
water	25:8	0:0	4	pts
op	25:12	0:0	4	=
water	25:14	0:0	4	cts
water	25:17	0:0	4	;
if	26:8	27:17	4	(size + 3 + 4 > pkt -> data + pkt -> size - next)
cond	26:12	26:51	5	size + 3 + 4 > pkt -> data + pkt -> size - next
water	26:12	0:0	6	size
op	26:17	0:0	6	+
water	26:19	0:0	6	3
op	26:21	0:0	6	+
water	26:23	0:0	6	4
op	26:25	0:0	6	>
water	26:27	0:0	6	pkt
op	26:30	0:0	6	->
water	26:32	0:0	6	data
op	26:37	0:0	6	+
water	26:39	0:0	6	pkt
op	26:42	0:0	6	->
water	26:44	0:0	6	size
op	26:49	0:0	6	-
water	26:51	0:0	6	next
stmts	27:12	27:17	5	
break	27:12	27:17	6	
call	28:8	28:36	4	bytestream_put_byte
arg	28:28	28:30	5	&p
op	28:28	0:0	6	&
water	28:29	0:0	6	p
arg	28:32	28:36	5	type
water	28:32	0:0	6	type
water	28:37	0:0	4	;
call	29:8	29:36	4	bytestream_put_be24
arg	29:28	29:30	5	&p
op	29:28	0:0	6	&
water	29:29	0:0	6	p
arg	29:32	29:36	5	size
water	29:32	0:0	6	size
water	29:37	0:0	4	;
call	30:8	30:34	4	bytestream_put_be24
arg	30:28	30:30	5	&p
op	30:28	0:0	6	&
water	30:29	0:0	6	p
arg	30:32	30:34	5	ts
water	30:32	0:0	6	ts
water	30:35	0:0	4	;
call	31:8	31:40	4	bytestream_put_byte
arg	31:28	31:30	5	&p
op	31:28	0:0	6	&
water	31:29	0:0	6	p
arg	31:32	31:40	5	ts>>24
water	31:32	0:0	6	ts
op	31:35	0:0	6	>>
water	31:38	0:0	6	24
water	31:41	0:0	4	;
call	32:8	32:36	4	memcpy
arg	32:15	32:16	5	p
water	32:15	0:0	6	p
arg	32:18	32:22	5	next
water	32:18	0:0	6	next
arg	32:24	32:36	5	size+3+4
water	32:24	0:0	6	size
op	32:29	0:0	6	+
water	32:31	0:0	6	3
op	32:33	0:0	6	+
water	32:35	0:0	6	4
water	32:37	0:0	4	;
water	33:8	0:0	4	next
op	33:13	0:0	4	+=
water	33:16	0:0	4	size
op	33:21	0:0	4	+
water	33:23	0:0	4	3
op	33:25	0:0	4	+
water	33:27	0:0	4	4
water	33:28	0:0	4	;
water	34:8	0:0	4	p
op	34:13	0:0	4	+=
water	34:16	0:0	4	size
op	34:21	0:0	4	+
water	34:23	0:0	4	3
op	34:25	0:0	4	+
water	34:27	0:0	4	4
water	34:28	0:0	4	;
water	35:4	0:0	4	}
if	36:4	40:4	2	(p != rt -> flv_data + rt -> flv_size)
cond	36:8	36:32	3	p != rt -> flv_data + rt -> flv_size
water	36:8	0:0	4	p
op	36:10	0:0	4	!=
water	36:13	0:0	4	rt
op	36:15	0:0	4	->
water	36:17	0:0	4	flv_data
op	36:26	0:0	4	+
water	36:28	0:0	4	rt
op	36:30	0:0	4	->
water	36:32	0:0	4	flv_size
stmts	36:42	40:4	3	
water	36:42	0:0	4	{
call	37:8	38:64	4	av_log
arg	37:15	37:19	5	NULL
water	37:15	0:0	6	NULL
arg	37:21	37:35	5	AV_LOG_WARNING
water	37:21	0:0	6	AV_LOG_WARNING
arg	37:37	38:64	5	"Incomplete flv packets in ""RTMP_PT_METADATA packet\n"
water	37:37	0:0	6	"Incomplete flv packets in "
water	38:37	0:0	6	"RTMP_PT_METADATA packet\n"
water	38:65	0:0	4	;
water	39:8	0:0	4	rt
op	39:10	0:0	4	->
water	39:12	0:0	4	flv_size
op	39:21	0:0	4	=
water	39:23	0:0	4	p
op	39:25	0:0	4	-
water	39:27	0:0	4	rt
op	39:29	0:0	4	->
water	39:31	0:0	4	flv_data
water	39:39	0:0	4	;
water	40:4	0:0	4	}
return	41:4	41:12	2	0
water	41:11	0:0	3	0

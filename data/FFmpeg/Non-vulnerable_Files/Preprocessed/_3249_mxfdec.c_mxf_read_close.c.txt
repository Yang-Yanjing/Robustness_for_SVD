func	1:0	25:0	0	static int	mxf_read_close
params	1:25	0:0	1	
param	1:26	1:44	2	AVFormatContext *	s
stmnts	0:0	24:12	1	
decl	3:4	3:34	2	MXFContext	*mxf
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:9	2	int	i
call	5:4	5:32	2	av_freep
arg	5:13	5:32	3	&mxf->packages_refs
op	5:13	0:0	4	&
water	5:14	0:0	4	mxf
op	5:17	0:0	4	->
water	5:19	0:0	4	packages_refs
water	5:33	0:0	2	;
for	6:4	7:39	2	(i = 0 ;i < s -> nb_streams;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:23	3	i < s -> nb_streams
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	s
op	6:21	0:0	4	->
water	6:23	0:0	4	nb_streams
forexpr	6:35	6:36	3	i ++
water	6:35	0:0	4	i
op	6:36	0:0	4	++
stmts	7:8	7:39	3	
water	7:8	0:0	4	s
op	7:9	0:0	4	->
water	7:11	0:0	4	streams
op	7:18	0:0	4	[
water	7:19	0:0	4	i
op	7:20	0:0	4	]
op	7:21	0:0	4	->
water	7:23	0:0	4	priv_data
op	7:33	0:0	4	=
water	7:35	0:0	4	NULL
water	7:39	0:0	4	;
for	8:4	10:4	2	(i = 0 ;i < mxf -> metadata_sets_count;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:25	3	i < mxf -> metadata_sets_count
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	mxf
op	8:23	0:0	4	->
water	8:25	0:0	4	metadata_sets_count
forexpr	8:46	8:47	3	i ++
water	8:46	0:0	4	i
op	8:47	0:0	4	++
stmts	8:51	10:4	3	
water	8:51	0:0	4	{
call	9:8	9:54	4	mxf_free_metadataset
arg	9:29	9:51	5	mxf->metadata_sets+i
water	9:29	0:0	6	mxf
op	9:32	0:0	6	->
water	9:34	0:0	6	metadata_sets
op	9:48	0:0	6	+
water	9:50	0:0	6	i
arg	9:53	9:54	5	1
water	9:53	0:0	6	1
water	9:55	0:0	4	;
water	10:4	0:0	4	}
call	11:4	11:29	2	av_freep
arg	11:13	11:29	3	&mxf->partitions
op	11:13	0:0	4	&
water	11:14	0:0	4	mxf
op	11:17	0:0	4	->
water	11:19	0:0	4	partitions
water	11:30	0:0	2	;
call	12:4	12:32	2	av_freep
arg	12:13	12:32	3	&mxf->metadata_sets
op	12:13	0:0	4	&
water	12:14	0:0	4	mxf
op	12:17	0:0	4	->
water	12:19	0:0	4	metadata_sets
water	12:33	0:0	2	;
call	13:4	13:23	2	av_freep
arg	13:13	13:23	3	&mxf->aesc
op	13:13	0:0	4	&
water	13:14	0:0	4	mxf
op	13:17	0:0	4	->
water	13:19	0:0	4	aesc
water	13:24	0:0	2	;
call	14:4	14:29	2	av_freep
arg	14:13	14:29	3	&mxf->local_tags
op	14:13	0:0	4	&
water	14:14	0:0	4	mxf
op	14:17	0:0	4	->
water	14:19	0:0	4	local_tags
water	14:30	0:0	2	;
if	15:4	22:4	2	(mxf -> index_tables)
cond	15:8	15:13	3	mxf -> index_tables
water	15:8	0:0	4	mxf
op	15:11	0:0	4	->
water	15:13	0:0	4	index_tables
stmts	15:27	22:4	3	
water	15:27	0:0	4	{
for	16:8	21:8	4	(i = 0 ;i < mxf -> nb_index_tables;i ++)
forinit	16:13	16:18	5	i = 0 ;
water	16:13	0:0	6	i
op	16:15	0:0	6	=
water	16:17	0:0	6	0
water	16:18	0:0	6	;
cond	16:20	16:29	5	i < mxf -> nb_index_tables
water	16:20	0:0	6	i
op	16:22	0:0	6	<
water	16:24	0:0	6	mxf
op	16:27	0:0	6	->
water	16:29	0:0	6	nb_index_tables
forexpr	16:46	16:47	5	i ++
water	16:46	0:0	6	i
op	16:47	0:0	6	++
stmts	16:51	21:8	5	
water	16:51	0:0	6	{
call	17:12	17:51	6	av_freep
arg	17:21	17:51	7	&mxf->index_tables[i].segments
op	17:21	0:0	8	&
water	17:22	0:0	8	mxf
op	17:25	0:0	8	->
water	17:27	0:0	8	index_tables
op	17:39	0:0	8	[
water	17:40	0:0	8	i
op	17:41	0:0	8	]
op	17:42	0:0	8	.
water	17:43	0:0	8	segments
water	17:52	0:0	6	;
call	18:12	18:48	6	av_freep
arg	18:21	18:48	7	&mxf->index_tables[i].ptses
op	18:21	0:0	8	&
water	18:22	0:0	8	mxf
op	18:25	0:0	8	->
water	18:27	0:0	8	index_tables
op	18:39	0:0	8	[
water	18:40	0:0	8	i
op	18:41	0:0	8	]
op	18:42	0:0	8	.
water	18:43	0:0	8	ptses
water	18:49	0:0	6	;
call	19:12	19:53	6	av_freep
arg	19:21	19:53	7	&mxf->index_tables[i].fake_index
op	19:21	0:0	8	&
water	19:22	0:0	8	mxf
op	19:25	0:0	8	->
water	19:27	0:0	8	index_tables
op	19:39	0:0	8	[
water	19:40	0:0	8	i
op	19:41	0:0	8	]
op	19:42	0:0	8	.
water	19:43	0:0	8	fake_index
water	19:54	0:0	6	;
call	20:12	20:50	6	av_freep
arg	20:21	20:50	7	&mxf->index_tables[i].offsets
op	20:21	0:0	8	&
water	20:22	0:0	8	mxf
op	20:25	0:0	8	->
water	20:27	0:0	8	index_tables
op	20:39	0:0	8	[
water	20:40	0:0	8	i
op	20:41	0:0	8	]
op	20:42	0:0	8	.
water	20:43	0:0	8	offsets
water	20:51	0:0	6	;
water	21:8	0:0	6	}
water	22:4	0:0	4	}
call	23:4	23:31	2	av_freep
arg	23:13	23:31	3	&mxf->index_tables
op	23:13	0:0	4	&
water	23:14	0:0	4	mxf
op	23:17	0:0	4	->
water	23:19	0:0	4	index_tables
water	23:32	0:0	2	;
return	24:4	24:12	2	0
water	24:11	0:0	3	0

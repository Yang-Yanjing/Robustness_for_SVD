func	1:0	72:0	0	static void	yuv2gbrp_full_X_c
params	2:17	0:0	1	
param	2:18	2:31	2	SwsContext *	c
param	2:33	2:57	2	const int16_t *	lumFilter
param	3:18	3:40	2	const int16_t * *	lumSrc
param	3:42	3:59	2	int	lumFilterSize
param	4:18	4:42	2	const int16_t *	chrFilter
param	4:44	4:67	2	const int16_t * *	chrUSrc
param	5:18	5:41	2	const int16_t * *	chrVSrc
param	5:43	5:60	2	int	chrFilterSize
param	6:18	6:40	2	const int16_t * *	alpSrc
param	6:42	6:56	2	uint8_t * *	dest
param	7:18	7:26	2	int	dstW
param	7:28	7:33	2	int	y
stmnts	0:0	71:4	1	
decl	9:4	9:70	2	const AVPixFmtDescriptor	*desc
op	9:35	0:0	2	=
call	9:37	9:69	3	av_pix_fmt_desc_get
arg	9:57	9:69	4	c->dstFormat
water	9:57	0:0	5	c
op	9:58	0:0	5	->
water	9:60	0:0	5	dstFormat
decl	10:4	10:9	2	int	i
decl	11:4	11:66	2	int	hasAlpha
op	11:17	0:0	2	=
water	11:19	0:0	2	(
water	11:20	0:0	2	desc
op	11:24	0:0	2	->
water	11:26	0:0	2	flags
op	11:32	0:0	2	&
water	11:34	0:0	2	AV_PIX_FMT_FLAG_ALPHA
water	11:55	0:0	2	)
op	11:57	0:0	2	&&
water	11:60	0:0	2	alpSrc
decl	12:4	12:40	2	uint16_t	**dest16
op	12:22	0:0	2	=
water	12:24	0:0	2	(
water	12:25	0:0	2	uint16_t
op	12:33	0:0	2	*
op	12:34	0:0	2	*
water	12:35	0:0	2	)
water	12:36	0:0	2	dest
decl	13:4	13:48	2	int	SH
op	13:11	0:0	2	=
water	13:13	0:0	2	22
op	13:16	0:0	2	+
water	13:18	0:0	2	7
op	13:20	0:0	2	-
water	13:22	0:0	2	desc
op	13:26	0:0	2	->
water	13:28	0:0	2	comp
op	13:32	0:0	2	[
water	13:33	0:0	2	0
op	13:34	0:0	2	]
op	13:35	0:0	2	.
water	13:36	0:0	2	depth_minus1
decl	14:4	14:13	2	int	A
op	14:10	0:0	2	=
water	14:12	0:0	2	0
for	15:4	62:4	2	(i = 0 ;i < dstW;i ++)
forinit	15:9	15:14	3	i = 0 ;
water	15:9	0:0	4	i
op	15:11	0:0	4	=
water	15:13	0:0	4	0
water	15:14	0:0	4	;
cond	15:16	15:20	3	i < dstW
water	15:16	0:0	4	i
op	15:18	0:0	4	<
water	15:20	0:0	4	dstW
forexpr	15:26	15:27	3	i ++
water	15:26	0:0	4	i
op	15:27	0:0	4	++
stmts	15:31	62:4	3	
water	15:31	0:0	4	{
decl	16:8	16:13	4	int	j
decl	17:8	17:22	4	int	Y
op	17:14	0:0	4	=
water	17:16	0:0	4	1
op	17:18	0:0	4	<<
water	17:21	0:0	4	9
decl	18:8	18:38	4	int	U
op	18:14	0:0	4	=
water	18:16	0:0	4	(
water	18:17	0:0	4	1
op	18:19	0:0	4	<<
water	18:22	0:0	4	9
water	18:23	0:0	4	)
op	18:25	0:0	4	-
water	18:27	0:0	4	(
water	18:28	0:0	4	128
op	18:32	0:0	4	<<
water	18:35	0:0	4	19
water	18:37	0:0	4	)
decl	19:8	19:38	4	int	V
op	19:14	0:0	4	=
water	19:16	0:0	4	(
water	19:17	0:0	4	1
op	19:19	0:0	4	<<
water	19:22	0:0	4	9
water	19:23	0:0	4	)
op	19:25	0:0	4	-
water	19:27	0:0	4	(
water	19:28	0:0	4	128
op	19:32	0:0	4	<<
water	19:35	0:0	4	19
water	19:37	0:0	4	)
decl	20:8	20:19	4	int	R
water	20:13	0:0	4	,
decl	20:8	20:19	4	int	G
water	20:16	0:0	4	,
decl	20:8	20:19	4	int	B
for	21:8	22:44	4	(j = 0 ;j < lumFilterSize;j ++)
forinit	21:13	21:18	5	j = 0 ;
water	21:13	0:0	6	j
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:24	5	j < lumFilterSize
water	21:20	0:0	6	j
op	21:22	0:0	6	<
water	21:24	0:0	6	lumFilterSize
forexpr	21:39	21:40	5	j ++
water	21:39	0:0	6	j
op	21:40	0:0	6	++
stmts	22:12	22:44	5	
water	22:12	0:0	6	Y
op	22:14	0:0	6	+=
water	22:17	0:0	6	lumSrc
op	22:23	0:0	6	[
water	22:24	0:0	6	j
op	22:25	0:0	6	]
op	22:26	0:0	6	[
water	22:27	0:0	6	i
op	22:28	0:0	6	]
op	22:30	0:0	6	*
water	22:32	0:0	6	lumFilter
op	22:41	0:0	6	[
water	22:42	0:0	6	j
op	22:43	0:0	6	]
water	22:44	0:0	6	;
for	23:8	26:8	4	(j = 0 ;j < chrFilterSize;j ++)
forinit	23:13	23:18	5	j = 0 ;
water	23:13	0:0	6	j
op	23:15	0:0	6	=
water	23:17	0:0	6	0
water	23:18	0:0	6	;
cond	23:20	23:24	5	j < chrFilterSize
water	23:20	0:0	6	j
op	23:22	0:0	6	<
water	23:24	0:0	6	chrFilterSize
forexpr	23:39	23:40	5	j ++
water	23:39	0:0	6	j
op	23:40	0:0	6	++
stmts	23:44	26:8	5	
water	23:44	0:0	6	{
water	24:12	0:0	6	U
op	24:14	0:0	6	+=
water	24:17	0:0	6	chrUSrc
op	24:24	0:0	6	[
water	24:25	0:0	6	j
op	24:26	0:0	6	]
op	24:27	0:0	6	[
water	24:28	0:0	6	i
op	24:29	0:0	6	]
op	24:31	0:0	6	*
water	24:33	0:0	6	chrFilter
op	24:42	0:0	6	[
water	24:43	0:0	6	j
op	24:44	0:0	6	]
water	24:45	0:0	6	;
water	25:12	0:0	6	V
op	25:14	0:0	6	+=
water	25:17	0:0	6	chrVSrc
op	25:24	0:0	6	[
water	25:25	0:0	6	j
op	25:26	0:0	6	]
op	25:27	0:0	6	[
water	25:28	0:0	6	i
op	25:29	0:0	6	]
op	25:31	0:0	6	*
water	25:33	0:0	6	chrFilter
op	25:42	0:0	6	[
water	25:43	0:0	6	j
op	25:44	0:0	6	]
water	25:45	0:0	6	;
water	26:8	0:0	6	}
water	27:8	0:0	4	Y
op	27:10	0:0	4	>>=
water	27:14	0:0	4	10
water	27:16	0:0	4	;
water	28:8	0:0	4	U
op	28:10	0:0	4	>>=
water	28:14	0:0	4	10
water	28:16	0:0	4	;
water	29:8	0:0	4	V
op	29:10	0:0	4	>>=
water	29:14	0:0	4	10
water	29:16	0:0	4	;
if	30:8	37:8	4	(hasAlpha)
cond	30:12	30:12	5	hasAlpha
water	30:12	0:0	6	hasAlpha
stmts	30:22	37:8	5	
water	30:22	0:0	6	{
water	31:12	0:0	6	A
op	31:14	0:0	6	=
water	31:16	0:0	6	1
op	31:18	0:0	6	<<
water	31:21	0:0	6	18
water	31:23	0:0	6	;
for	32:12	33:48	6	(j = 0 ;j < lumFilterSize;j ++)
forinit	32:17	32:22	7	j = 0 ;
water	32:17	0:0	8	j
op	32:19	0:0	8	=
water	32:21	0:0	8	0
water	32:22	0:0	8	;
cond	32:24	32:28	7	j < lumFilterSize
water	32:24	0:0	8	j
op	32:26	0:0	8	<
water	32:28	0:0	8	lumFilterSize
forexpr	32:43	32:44	7	j ++
water	32:43	0:0	8	j
op	32:44	0:0	8	++
stmts	33:16	33:48	7	
water	33:16	0:0	8	A
op	33:18	0:0	8	+=
water	33:21	0:0	8	alpSrc
op	33:27	0:0	8	[
water	33:28	0:0	8	j
op	33:29	0:0	8	]
op	33:30	0:0	8	[
water	33:31	0:0	8	i
op	33:32	0:0	8	]
op	33:34	0:0	8	*
water	33:36	0:0	8	lumFilter
op	33:45	0:0	8	[
water	33:46	0:0	8	j
op	33:47	0:0	8	]
water	33:48	0:0	8	;
water	34:12	0:0	6	A
op	34:14	0:0	6	>>=
water	34:18	0:0	6	19
water	34:20	0:0	6	;
if	35:12	36:36	6	(A & 0 x100)
cond	35:16	35:21	7	A & 0 x100
water	35:16	0:0	8	A
op	35:18	0:0	8	&
water	35:20	0:0	8	0
water	35:21	0:0	8	x100
stmts	36:16	36:36	7	
water	36:16	0:0	8	A
op	36:18	0:0	8	=
call	36:20	36:35	8	av_clip_uint8
arg	36:34	36:35	9	A
water	36:34	0:0	10	A
water	36:36	0:0	8	;
water	37:8	0:0	6	}
water	38:8	0:0	4	Y
op	38:10	0:0	4	-=
water	38:13	0:0	4	c
op	38:14	0:0	4	->
water	38:16	0:0	4	yuv2rgb_y_offset
water	38:32	0:0	4	;
water	39:8	0:0	4	Y
op	39:10	0:0	4	*=
water	39:13	0:0	4	c
op	39:14	0:0	4	->
water	39:16	0:0	4	yuv2rgb_y_coeff
water	39:31	0:0	4	;
water	40:8	0:0	4	Y
op	40:10	0:0	4	+=
water	40:13	0:0	4	1
op	40:15	0:0	4	<<
water	40:18	0:0	4	21
water	40:20	0:0	4	;
water	41:8	0:0	4	R
op	41:10	0:0	4	=
water	41:12	0:0	4	Y
op	41:14	0:0	4	+
water	41:16	0:0	4	V
op	41:18	0:0	4	*
water	41:20	0:0	4	c
op	41:21	0:0	4	->
water	41:23	0:0	4	yuv2rgb_v2r_coeff
water	41:40	0:0	4	;
water	42:8	0:0	4	G
op	42:10	0:0	4	=
water	42:12	0:0	4	Y
op	42:14	0:0	4	+
water	42:16	0:0	4	V
op	42:18	0:0	4	*
water	42:20	0:0	4	c
op	42:21	0:0	4	->
water	42:23	0:0	4	yuv2rgb_v2g_coeff
op	42:41	0:0	4	+
water	42:43	0:0	4	U
op	42:45	0:0	4	*
water	42:47	0:0	4	c
op	42:48	0:0	4	->
water	42:50	0:0	4	yuv2rgb_u2g_coeff
water	42:67	0:0	4	;
water	43:8	0:0	4	B
op	43:10	0:0	4	=
water	43:12	0:0	4	Y
op	43:14	0:0	4	+
water	43:43	0:0	4	U
op	43:45	0:0	4	*
water	43:47	0:0	4	c
op	43:48	0:0	4	->
water	43:50	0:0	4	yuv2rgb_u2b_coeff
water	43:67	0:0	4	;
if	44:8	48:8	4	(( R | G | B ) & 0 xC0000000)
cond	44:12	44:27	5	( R | G | B ) & 0 xC0000000
water	44:12	0:0	6	(
water	44:13	0:0	6	R
op	44:15	0:0	6	|
water	44:17	0:0	6	G
op	44:19	0:0	6	|
water	44:21	0:0	6	B
water	44:22	0:0	6	)
op	44:24	0:0	6	&
water	44:26	0:0	6	0
water	44:27	0:0	6	xC0000000
stmts	44:38	48:8	5	
water	44:38	0:0	6	{
water	45:12	0:0	6	R
op	45:14	0:0	6	=
call	45:16	45:36	6	av_clip_uintp2
arg	45:31	45:32	7	R
water	45:31	0:0	8	R
arg	45:34	45:36	7	30
water	45:34	0:0	8	30
water	45:37	0:0	6	;
water	46:12	0:0	6	G
op	46:14	0:0	6	=
call	46:16	46:36	6	av_clip_uintp2
arg	46:31	46:32	7	G
water	46:31	0:0	8	G
arg	46:34	46:36	7	30
water	46:34	0:0	8	30
water	46:37	0:0	6	;
water	47:12	0:0	6	B
op	47:14	0:0	6	=
call	47:16	47:36	6	av_clip_uintp2
arg	47:31	47:32	7	B
water	47:31	0:0	8	B
arg	47:34	47:36	7	30
water	47:34	0:0	8	30
water	47:37	0:0	6	;
water	48:8	0:0	6	}
if	49:8	55:8	4	(SH != 22)
cond	49:12	49:18	5	SH != 22
water	49:12	0:0	6	SH
op	49:15	0:0	6	!=
water	49:18	0:0	6	22
stmts	49:22	55:8	5	
water	49:22	0:0	6	{
water	50:12	0:0	6	dest16
op	50:18	0:0	6	[
water	50:19	0:0	6	0
op	50:20	0:0	6	]
op	50:21	0:0	6	[
water	50:22	0:0	6	i
op	50:23	0:0	6	]
op	50:25	0:0	6	=
water	50:27	0:0	6	G
op	50:29	0:0	6	>>
water	50:32	0:0	6	SH
water	50:34	0:0	6	;
water	51:12	0:0	6	dest16
op	51:18	0:0	6	[
water	51:19	0:0	6	1
op	51:20	0:0	6	]
op	51:21	0:0	6	[
water	51:22	0:0	6	i
op	51:23	0:0	6	]
op	51:25	0:0	6	=
water	51:27	0:0	6	B
op	51:29	0:0	6	>>
water	51:32	0:0	6	SH
water	51:34	0:0	6	;
water	52:12	0:0	6	dest16
op	52:18	0:0	6	[
water	52:19	0:0	6	2
op	52:20	0:0	6	]
op	52:21	0:0	6	[
water	52:22	0:0	6	i
op	52:23	0:0	6	]
op	52:25	0:0	6	=
water	52:27	0:0	6	R
op	52:29	0:0	6	>>
water	52:32	0:0	6	SH
water	52:34	0:0	6	;
if	53:12	54:32	6	(hasAlpha)
cond	53:16	53:16	7	hasAlpha
water	53:16	0:0	8	hasAlpha
stmts	54:16	54:32	7	
water	54:16	0:0	8	dest16
op	54:22	0:0	8	[
water	54:23	0:0	8	3
op	54:24	0:0	8	]
op	54:25	0:0	8	[
water	54:26	0:0	8	i
op	54:27	0:0	8	]
op	54:29	0:0	8	=
water	54:31	0:0	8	A
water	54:32	0:0	8	;
water	55:8	0:0	6	}
else	55:10	61:8	4
stmts	55:15	61:8	5	
water	55:15	0:0	6	{
water	56:12	0:0	6	dest
op	56:16	0:0	6	[
water	56:17	0:0	6	0
op	56:18	0:0	6	]
op	56:19	0:0	6	[
water	56:20	0:0	6	i
op	56:21	0:0	6	]
op	56:23	0:0	6	=
water	56:25	0:0	6	G
op	56:27	0:0	6	>>
water	56:30	0:0	6	22
water	56:32	0:0	6	;
water	57:12	0:0	6	dest
op	57:16	0:0	6	[
water	57:17	0:0	6	1
op	57:18	0:0	6	]
op	57:19	0:0	6	[
water	57:20	0:0	6	i
op	57:21	0:0	6	]
op	57:23	0:0	6	=
water	57:25	0:0	6	B
op	57:27	0:0	6	>>
water	57:30	0:0	6	22
water	57:32	0:0	6	;
water	58:12	0:0	6	dest
op	58:16	0:0	6	[
water	58:17	0:0	6	2
op	58:18	0:0	6	]
op	58:19	0:0	6	[
water	58:20	0:0	6	i
op	58:21	0:0	6	]
op	58:23	0:0	6	=
water	58:25	0:0	6	R
op	58:27	0:0	6	>>
water	58:30	0:0	6	22
water	58:32	0:0	6	;
if	59:12	60:30	6	(hasAlpha)
cond	59:16	59:16	7	hasAlpha
water	59:16	0:0	8	hasAlpha
stmts	60:16	60:30	7	
water	60:16	0:0	8	dest
op	60:20	0:0	8	[
water	60:21	0:0	8	3
op	60:22	0:0	8	]
op	60:23	0:0	8	[
water	60:24	0:0	8	i
op	60:25	0:0	8	]
op	60:27	0:0	8	=
water	60:29	0:0	8	A
water	60:30	0:0	8	;
water	61:8	0:0	6	}
water	62:4	0:0	4	}
if	63:4	71:4	2	(SH != 22 && ( !isBE (c -> dstFormat ) ) != ( ! HAVE_BIGENDIAN ))
cond	63:8	63:61	3	SH != 22 && ( !isBE (c -> dstFormat ) ) != ( ! HAVE_BIGENDIAN )
water	63:8	0:0	4	SH
op	63:11	0:0	4	!=
water	63:14	0:0	4	22
op	63:17	0:0	4	&&
water	63:20	0:0	4	(
op	63:21	0:0	4	!
call	63:22	63:39	4	isBE
arg	63:27	63:39	5	c->dstFormat
water	63:27	0:0	6	c
op	63:28	0:0	6	->
water	63:30	0:0	6	dstFormat
water	63:40	0:0	4	)
op	63:42	0:0	4	!=
water	63:45	0:0	4	(
op	63:46	0:0	4	!
water	63:47	0:0	4	HAVE_BIGENDIAN
water	63:61	0:0	4	)
stmts	63:64	71:4	3	
water	63:64	0:0	4	{
for	64:8	70:8	4	(i = 0 ;i < dstW;i ++)
forinit	64:13	64:18	5	i = 0 ;
water	64:13	0:0	6	i
op	64:15	0:0	6	=
water	64:17	0:0	6	0
water	64:18	0:0	6	;
cond	64:20	64:24	5	i < dstW
water	64:20	0:0	6	i
op	64:22	0:0	6	<
water	64:24	0:0	6	dstW
forexpr	64:30	64:31	5	i ++
water	64:30	0:0	6	i
op	64:31	0:0	6	++
stmts	64:35	70:8	5	
water	64:35	0:0	6	{
water	65:12	0:0	6	dest16
op	65:18	0:0	6	[
water	65:19	0:0	6	0
op	65:20	0:0	6	]
op	65:21	0:0	6	[
water	65:22	0:0	6	i
op	65:23	0:0	6	]
op	65:25	0:0	6	=
call	65:27	65:50	6	av_bswap16
arg	65:38	65:50	7	dest16[0][i]
water	65:38	0:0	8	dest16
op	65:44	0:0	8	[
water	65:45	0:0	8	0
op	65:46	0:0	8	]
op	65:47	0:0	8	[
water	65:48	0:0	8	i
op	65:49	0:0	8	]
water	65:51	0:0	6	;
water	66:12	0:0	6	dest16
op	66:18	0:0	6	[
water	66:19	0:0	6	1
op	66:20	0:0	6	]
op	66:21	0:0	6	[
water	66:22	0:0	6	i
op	66:23	0:0	6	]
op	66:25	0:0	6	=
call	66:27	66:50	6	av_bswap16
arg	66:38	66:50	7	dest16[1][i]
water	66:38	0:0	8	dest16
op	66:44	0:0	8	[
water	66:45	0:0	8	1
op	66:46	0:0	8	]
op	66:47	0:0	8	[
water	66:48	0:0	8	i
op	66:49	0:0	8	]
water	66:51	0:0	6	;
water	67:12	0:0	6	dest16
op	67:18	0:0	6	[
water	67:19	0:0	6	2
op	67:20	0:0	6	]
op	67:21	0:0	6	[
water	67:22	0:0	6	i
op	67:23	0:0	6	]
op	67:25	0:0	6	=
call	67:27	67:50	6	av_bswap16
arg	67:38	67:50	7	dest16[2][i]
water	67:38	0:0	8	dest16
op	67:44	0:0	8	[
water	67:45	0:0	8	2
op	67:46	0:0	8	]
op	67:47	0:0	8	[
water	67:48	0:0	8	i
op	67:49	0:0	8	]
water	67:51	0:0	6	;
if	68:12	69:55	6	(hasAlpha)
cond	68:16	68:16	7	hasAlpha
water	68:16	0:0	8	hasAlpha
stmts	69:16	69:55	7	
water	69:16	0:0	8	dest16
op	69:22	0:0	8	[
water	69:23	0:0	8	3
op	69:24	0:0	8	]
op	69:25	0:0	8	[
water	69:26	0:0	8	i
op	69:27	0:0	8	]
op	69:29	0:0	8	=
call	69:31	69:54	8	av_bswap16
arg	69:42	69:54	9	dest16[3][i]
water	69:42	0:0	10	dest16
op	69:48	0:0	10	[
water	69:49	0:0	10	3
op	69:50	0:0	10	]
op	69:51	0:0	10	[
water	69:52	0:0	10	i
op	69:53	0:0	10	]
water	69:55	0:0	8	;
water	70:8	0:0	6	}
water	71:4	0:0	4	}

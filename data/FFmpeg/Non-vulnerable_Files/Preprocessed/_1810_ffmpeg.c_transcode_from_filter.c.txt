func	1:0	35:0	0	static int	transcode_from_filter
params	1:32	0:0	1	
param	1:33	1:51	2	FilterGraph *	graph
param	1:53	1:75	2	InputStream * *	best_ist
stmnts	0:0	34:12	1	
decl	3:4	3:14	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:14	2	int	ret
decl	4:4	4:40	2	int	nb_requests
water	4:19	0:0	2	,
decl	4:4	4:40	2	int	nb_requests_max
op	4:37	0:0	2	=
water	4:39	0:0	2	0
decl	5:4	5:24	2	InputFilter	*ifilter
decl	6:4	6:20	2	InputStream	*ist
op	7:4	0:0	2	*
water	7:5	0:0	2	best_ist
op	7:14	0:0	2	=
water	7:16	0:0	2	NULL
water	7:20	0:0	2	;
water	8:4	0:0	2	ret
op	8:8	0:0	2	=
call	8:10	8:52	2	avfilter_graph_request_oldest
arg	8:40	8:52	3	graph->graph
water	8:40	0:0	4	graph
op	8:45	0:0	4	->
water	8:47	0:0	4	graph
water	8:53	0:0	2	;
if	9:4	10:30	2	(ret >= 0)
cond	9:8	9:15	3	ret >= 0
water	9:8	0:0	4	ret
op	9:12	0:0	4	>=
water	9:15	0:0	4	0
stmts	10:8	10:30	3	
return	10:8	10:30	4	reap_filters(0)
call	10:15	10:29	5	reap_filters
arg	10:28	10:29	6	0
water	10:28	0:0	7	0
if	11:4	16:4	2	(ret == AVERROR_EOF)
cond	11:8	11:15	3	ret == AVERROR_EOF
water	11:8	0:0	4	ret
op	11:12	0:0	4	==
water	11:15	0:0	4	AVERROR_EOF
stmts	11:28	16:4	3	
water	11:28	0:0	4	{
water	12:8	0:0	4	ret
op	12:12	0:0	4	=
call	12:14	12:28	4	reap_filters
arg	12:27	12:28	5	1
water	12:27	0:0	6	1
water	12:29	0:0	4	;
for	13:8	14:55	4	(i = 0 ;i < graph -> nb_outputs;i ++)
forinit	13:13	13:18	5	i = 0 ;
water	13:13	0:0	6	i
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:31	5	i < graph -> nb_outputs
water	13:20	0:0	6	i
op	13:22	0:0	6	<
water	13:24	0:0	6	graph
op	13:29	0:0	6	->
water	13:31	0:0	6	nb_outputs
forexpr	13:43	13:44	5	i ++
water	13:43	0:0	6	i
op	13:44	0:0	6	++
stmts	14:12	14:55	5	
call	14:12	14:54	6	close_output_stream
arg	14:32	14:54	7	graph->outputs[i]->ost
water	14:32	0:0	8	graph
op	14:37	0:0	8	->
water	14:39	0:0	8	outputs
op	14:46	0:0	8	[
water	14:47	0:0	8	i
op	14:48	0:0	8	]
op	14:49	0:0	8	->
water	14:51	0:0	8	ost
water	14:55	0:0	6	;
return	15:8	15:18	4	ret
water	15:15	0:0	5	ret
water	16:4	0:0	4	}
if	17:4	18:18	2	(ret !=AVERROR (EAGAIN ))
cond	17:8	17:29	3	ret !=AVERROR (EAGAIN )
water	17:8	0:0	4	ret
op	17:12	0:0	4	!=
call	17:15	17:29	4	AVERROR
arg	17:23	17:29	5	EAGAIN
water	17:23	0:0	6	EAGAIN
stmts	18:8	18:18	3	
return	18:8	18:18	4	ret
water	18:15	0:0	5	ret
for	19:4	30:4	2	(i = 0 ;i < graph -> nb_inputs;i ++)
forinit	19:9	19:14	3	i = 0 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:27	3	i < graph -> nb_inputs
water	19:16	0:0	4	i
op	19:18	0:0	4	<
water	19:20	0:0	4	graph
op	19:25	0:0	4	->
water	19:27	0:0	4	nb_inputs
forexpr	19:38	19:39	3	i ++
water	19:38	0:0	4	i
op	19:39	0:0	4	++
stmts	19:43	30:4	3	
water	19:43	0:0	4	{
water	20:8	0:0	4	ifilter
op	20:16	0:0	4	=
water	20:18	0:0	4	graph
op	20:23	0:0	4	->
water	20:25	0:0	4	inputs
op	20:31	0:0	4	[
water	20:32	0:0	4	i
op	20:33	0:0	4	]
water	20:34	0:0	4	;
water	21:8	0:0	4	ist
op	21:12	0:0	4	=
water	21:14	0:0	4	ifilter
op	21:21	0:0	4	->
water	21:23	0:0	4	ist
water	21:26	0:0	4	;
if	22:8	24:20	4	(input_files [ ist -> file_index ] -> eagain || input_files [ ist -> file_index ] -> eof_reached)
cond	22:12	23:42	5	input_files [ ist -> file_index ] -> eagain || input_files [ ist -> file_index ] -> eof_reached
water	22:12	0:0	6	input_files
op	22:23	0:0	6	[
water	22:24	0:0	6	ist
op	22:27	0:0	6	->
water	22:29	0:0	6	file_index
op	22:39	0:0	6	]
op	22:40	0:0	6	->
water	22:42	0:0	6	eagain
op	22:49	0:0	6	||
water	23:12	0:0	6	input_files
op	23:23	0:0	6	[
water	23:24	0:0	6	ist
op	23:27	0:0	6	->
water	23:29	0:0	6	file_index
op	23:39	0:0	6	]
op	23:40	0:0	6	->
water	23:42	0:0	6	eof_reached
stmts	24:12	24:20	5	
continue	24:12	24:20	6	
water	25:8	0:0	4	nb_requests
op	25:20	0:0	4	=
call	25:22	25:73	4	av_buffersrc_get_nb_failed_requests
arg	25:58	25:73	5	ifilter->filter
water	25:58	0:0	6	ifilter
op	25:65	0:0	6	->
water	25:67	0:0	6	filter
water	25:74	0:0	4	;
if	26:8	29:8	4	(nb_requests > nb_requests_max)
cond	26:12	26:26	5	nb_requests > nb_requests_max
water	26:12	0:0	6	nb_requests
op	26:24	0:0	6	>
water	26:26	0:0	6	nb_requests_max
stmts	26:43	29:8	5	
water	26:43	0:0	6	{
water	27:12	0:0	6	nb_requests_max
op	27:28	0:0	6	=
water	27:30	0:0	6	nb_requests
water	27:41	0:0	6	;
op	28:12	0:0	6	*
water	28:13	0:0	6	best_ist
op	28:22	0:0	6	=
water	28:24	0:0	6	ist
water	28:27	0:0	6	;
water	29:8	0:0	6	}
water	30:4	0:0	4	}
if	31:4	33:51	2	(! * best_ist)
cond	31:8	31:10	3	! * best_ist
op	31:8	0:0	4	!
op	31:9	0:0	4	*
water	31:10	0:0	4	best_ist
stmts	32:8	33:51	3	
for	32:8	33:51	4	(i = 0 ;i < graph -> nb_outputs;i ++)
forinit	32:13	32:18	5	i = 0 ;
water	32:13	0:0	6	i
op	32:15	0:0	6	=
water	32:17	0:0	6	0
water	32:18	0:0	6	;
cond	32:20	32:31	5	i < graph -> nb_outputs
water	32:20	0:0	6	i
op	32:22	0:0	6	<
water	32:24	0:0	6	graph
op	32:29	0:0	6	->
water	32:31	0:0	6	nb_outputs
forexpr	32:43	32:44	5	i ++
water	32:43	0:0	6	i
op	32:44	0:0	6	++
stmts	33:12	33:51	5	
water	33:12	0:0	6	graph
op	33:17	0:0	6	->
water	33:19	0:0	6	outputs
op	33:26	0:0	6	[
water	33:27	0:0	6	i
op	33:28	0:0	6	]
op	33:29	0:0	6	->
water	33:31	0:0	6	ost
op	33:34	0:0	6	->
water	33:36	0:0	6	unavailable
op	33:48	0:0	6	=
water	33:50	0:0	6	1
water	33:51	0:0	6	;
return	34:4	34:12	2	0
water	34:11	0:0	3	0

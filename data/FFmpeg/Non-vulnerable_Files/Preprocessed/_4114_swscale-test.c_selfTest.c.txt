func	1:0	42:0	0	static void	selfTest
params	1:20	0:0	1	
param	1:21	1:36	2	uint8_t *	ref[4]
param	1:38	1:54	2	int	refStride[4]
param	1:56	1:61	2	int	w
param	1:63	1:68	2	int	h
param	2:21	2:52	2	enum AVPixelFormat	srcFormat_in
param	3:21	3:52	2	enum AVPixelFormat	dstFormat_in
stmnts	0:0	41:4	1	
decl	5:4	6:57	2	const int	flags[]
op	5:22	0:0	2	=
water	5:24	0:0	2	{
water	5:26	0:0	2	SWS_FAST_BILINEAR
water	5:43	0:0	2	,
water	5:45	0:0	2	SWS_BILINEAR
water	5:57	0:0	2	,
water	5:59	0:0	2	SWS_BICUBIC
water	5:70	0:0	2	,
water	6:26	0:0	2	SWS_X
water	6:31	0:0	2	,
water	6:33	0:0	2	SWS_POINT
water	6:42	0:0	2	,
water	6:44	0:0	2	SWS_AREA
water	6:52	0:0	2	,
water	6:54	0:0	2	0
water	6:56	0:0	2	}
decl	7:4	7:24	2	const int	srcW
op	7:21	0:0	2	=
water	7:23	0:0	2	w
decl	8:4	8:24	2	const int	srcH
op	8:21	0:0	2	=
water	8:23	0:0	2	h
decl	9:4	9:68	2	const int	dstW[]
op	9:21	0:0	2	=
water	9:23	0:0	2	{
water	9:25	0:0	2	srcW
op	9:30	0:0	2	-
water	9:32	0:0	2	srcW
op	9:37	0:0	2	/
water	9:39	0:0	2	3
water	9:40	0:0	2	,
water	9:42	0:0	2	srcW
water	9:46	0:0	2	,
water	9:48	0:0	2	srcW
op	9:53	0:0	2	+
water	9:55	0:0	2	srcW
op	9:60	0:0	2	/
water	9:62	0:0	2	3
water	9:63	0:0	2	,
water	9:65	0:0	2	0
water	9:67	0:0	2	}
decl	10:4	10:68	2	const int	dstH[]
op	10:21	0:0	2	=
water	10:23	0:0	2	{
water	10:25	0:0	2	srcH
op	10:30	0:0	2	-
water	10:32	0:0	2	srcH
op	10:37	0:0	2	/
water	10:39	0:0	2	3
water	10:40	0:0	2	,
water	10:42	0:0	2	srcH
water	10:46	0:0	2	,
water	10:48	0:0	2	srcH
op	10:53	0:0	2	+
water	10:55	0:0	2	srcH
op	10:60	0:0	2	/
water	10:62	0:0	2	3
water	10:63	0:0	2	,
water	10:65	0:0	2	0
water	10:67	0:0	2	}
decl	11:4	11:43	2	enum AVPixelFormat	srcFormat
water	11:32	0:0	2	,
decl	11:4	11:43	2	enum AVPixelFormat	dstFormat
decl	12:4	12:49	2	const AVPixFmtDescriptor	*desc_src
water	12:38	0:0	2	,
decl	12:4	12:49	2	const AVPixFmtDescriptor	*desc_dst
for	13:4	41:4	2	(srcFormat = srcFormat_in != AV_PIX_FMT_NONE ? srcFormat_in : 0 ;srcFormat < AV_PIX_FMT_NB;srcFormat ++)
forinit	13:9	13:71	3	srcFormat = srcFormat_in != AV_PIX_FMT_NONE ? srcFormat_in : 0 ;
water	13:9	0:0	4	srcFormat
op	13:19	0:0	4	=
water	13:21	0:0	4	srcFormat_in
op	13:34	0:0	4	!=
water	13:37	0:0	4	AV_PIX_FMT_NONE
water	13:53	0:0	4	?
water	13:55	0:0	4	srcFormat_in
water	13:68	0:0	4	:
water	13:70	0:0	4	0
water	13:71	0:0	4	;
cond	14:9	14:21	3	srcFormat < AV_PIX_FMT_NB
water	14:9	0:0	4	srcFormat
op	14:19	0:0	4	<
water	14:21	0:0	4	AV_PIX_FMT_NB
forexpr	14:36	14:45	3	srcFormat ++
water	14:36	0:0	4	srcFormat
op	14:45	0:0	4	++
stmts	14:49	41:4	3	
water	14:49	0:0	4	{
if	15:8	17:20	4	(!sws_isSupportedInput (srcFormat ) || !sws_isSupportedOutput (srcFormat ))
cond	15:12	16:44	5	!sws_isSupportedInput (srcFormat ) || !sws_isSupportedOutput (srcFormat )
op	15:12	0:0	6	!
call	15:13	15:43	6	sws_isSupportedInput
arg	15:34	15:43	7	srcFormat
water	15:34	0:0	8	srcFormat
op	15:45	0:0	6	||
op	16:12	0:0	6	!
call	16:13	16:44	6	sws_isSupportedOutput
arg	16:35	16:44	7	srcFormat
water	16:35	0:0	8	srcFormat
stmts	17:12	17:20	5	
continue	17:12	17:20	6	
water	18:8	0:0	4	desc_src
op	18:17	0:0	4	=
call	18:19	18:48	4	av_pix_fmt_desc_get
arg	18:39	18:48	5	srcFormat
water	18:39	0:0	6	srcFormat
water	18:49	0:0	4	;
for	19:8	38:8	4	(dstFormat = dstFormat_in != AV_PIX_FMT_NONE ? dstFormat_in : 0 ;dstFormat < AV_PIX_FMT_NB;dstFormat ++)
forinit	19:13	19:75	5	dstFormat = dstFormat_in != AV_PIX_FMT_NONE ? dstFormat_in : 0 ;
water	19:13	0:0	6	dstFormat
op	19:23	0:0	6	=
water	19:25	0:0	6	dstFormat_in
op	19:38	0:0	6	!=
water	19:41	0:0	6	AV_PIX_FMT_NONE
water	19:57	0:0	6	?
water	19:59	0:0	6	dstFormat_in
water	19:72	0:0	6	:
water	19:74	0:0	6	0
water	19:75	0:0	6	;
cond	20:13	20:25	5	dstFormat < AV_PIX_FMT_NB
water	20:13	0:0	6	dstFormat
op	20:23	0:0	6	<
water	20:25	0:0	6	AV_PIX_FMT_NB
forexpr	20:40	20:49	5	dstFormat ++
water	20:40	0:0	6	dstFormat
op	20:49	0:0	6	++
stmts	20:53	38:8	5	
water	20:53	0:0	6	{
decl	21:12	21:23	6	int	i
water	21:17	0:0	6	,
decl	21:12	21:23	6	int	j
water	21:20	0:0	6	,
decl	21:12	21:23	6	int	k
decl	22:12	22:23	6	int	res
op	22:20	0:0	6	=
water	22:22	0:0	6	0
if	23:12	25:24	6	(!sws_isSupportedInput (dstFormat ) || !sws_isSupportedOutput (dstFormat ))
cond	23:16	24:48	7	!sws_isSupportedInput (dstFormat ) || !sws_isSupportedOutput (dstFormat )
op	23:16	0:0	8	!
call	23:17	23:47	8	sws_isSupportedInput
arg	23:38	23:47	9	dstFormat
water	23:38	0:0	10	dstFormat
op	23:49	0:0	8	||
op	24:16	0:0	8	!
call	24:17	24:48	8	sws_isSupportedOutput
arg	24:39	24:48	9	dstFormat
water	24:39	0:0	10	dstFormat
stmts	25:16	25:24	7	
continue	25:16	25:24	8	
water	26:12	0:0	6	desc_dst
op	26:21	0:0	6	=
call	26:23	26:52	6	av_pix_fmt_desc_get
arg	26:43	26:52	7	dstFormat
water	26:43	0:0	8	dstFormat
water	26:53	0:0	6	;
call	27:12	27:63	6	printf
arg	27:19	27:31	7	"%s -> %s\n"
water	27:19	0:0	8	"%s -> %s\n"
arg	27:33	27:47	7	desc_src->name
water	27:33	0:0	8	desc_src
op	27:41	0:0	8	->
water	27:43	0:0	8	name
arg	27:49	27:63	7	desc_dst->name
water	27:49	0:0	8	desc_dst
op	27:57	0:0	8	->
water	27:59	0:0	8	name
water	27:64	0:0	6	;
call	28:12	28:25	6	fflush
arg	28:19	28:25	7	stdout
water	28:19	0:0	8	stdout
water	28:26	0:0	6	;
for	29:12	35:42	6	(k = 0 ;flags [ k ] && ! res;k ++)
forinit	29:17	29:22	7	k = 0 ;
water	29:17	0:0	8	k
op	29:19	0:0	8	=
water	29:21	0:0	8	0
water	29:22	0:0	8	;
cond	29:24	29:37	7	flags [ k ] && ! res
water	29:24	0:0	8	flags
op	29:29	0:0	8	[
water	29:30	0:0	8	k
op	29:31	0:0	8	]
op	29:33	0:0	8	&&
op	29:36	0:0	8	!
water	29:37	0:0	8	res
forexpr	29:42	29:43	7	k ++
water	29:42	0:0	8	k
op	29:43	0:0	8	++
stmts	30:16	35:42	7	
for	30:16	35:42	8	(i = 0 ;dstW [ i ] && ! res;i ++)
forinit	30:21	30:26	9	i = 0 ;
water	30:21	0:0	10	i
op	30:23	0:0	10	=
water	30:25	0:0	10	0
water	30:26	0:0	10	;
cond	30:28	30:40	9	dstW [ i ] && ! res
water	30:28	0:0	10	dstW
op	30:32	0:0	10	[
water	30:33	0:0	10	i
op	30:34	0:0	10	]
op	30:36	0:0	10	&&
op	30:39	0:0	10	!
water	30:40	0:0	10	res
forexpr	30:45	30:46	9	i ++
water	30:45	0:0	10	i
op	30:46	0:0	10	++
stmts	31:20	35:42	9	
for	31:20	35:42	10	(j = 0 ;dstH [ j ] && ! res;j ++)
forinit	31:25	31:30	11	j = 0 ;
water	31:25	0:0	12	j
op	31:27	0:0	12	=
water	31:29	0:0	12	0
water	31:30	0:0	12	;
cond	31:32	31:44	11	dstH [ j ] && ! res
water	31:32	0:0	12	dstH
op	31:36	0:0	12	[
water	31:37	0:0	12	j
op	31:38	0:0	12	]
op	31:40	0:0	12	&&
op	31:43	0:0	12	!
water	31:44	0:0	12	res
forexpr	31:49	31:50	11	j ++
water	31:49	0:0	12	j
op	31:50	0:0	12	++
stmts	32:24	35:42	11	
water	32:24	0:0	12	res
op	32:28	0:0	12	=
call	32:30	35:41	12	doTest
arg	32:37	32:40	13	ref
water	32:37	0:0	14	ref
arg	32:42	32:51	13	refStride
water	32:42	0:0	14	refStride
arg	32:53	32:54	13	w
water	32:53	0:0	14	w
arg	32:56	32:57	13	h
water	32:56	0:0	14	h
arg	33:37	33:46	13	srcFormat
water	33:37	0:0	14	srcFormat
arg	33:48	33:57	13	dstFormat
water	33:48	0:0	14	dstFormat
arg	34:37	34:41	13	srcW
water	34:37	0:0	14	srcW
arg	34:43	34:47	13	srcH
water	34:43	0:0	14	srcH
arg	34:49	34:56	13	dstW[i]
water	34:49	0:0	14	dstW
op	34:53	0:0	14	[
water	34:54	0:0	14	i
op	34:55	0:0	14	]
arg	34:58	34:65	13	dstH[j]
water	34:58	0:0	14	dstH
op	34:62	0:0	14	[
water	34:63	0:0	14	j
op	34:64	0:0	14	]
arg	34:67	34:75	13	flags[k]
water	34:67	0:0	14	flags
op	34:72	0:0	14	[
water	34:73	0:0	14	k
op	34:74	0:0	14	]
arg	35:37	35:41	13	NULL
water	35:37	0:0	14	NULL
water	35:42	0:0	12	;
if	36:12	37:21	6	(dstFormat_in != AV_PIX_FMT_NONE)
cond	36:16	36:32	7	dstFormat_in != AV_PIX_FMT_NONE
water	36:16	0:0	8	dstFormat_in
op	36:29	0:0	8	!=
water	36:32	0:0	8	AV_PIX_FMT_NONE
stmts	37:16	37:21	7	
break	37:16	37:21	8	
water	38:8	0:0	6	}
if	39:8	40:17	4	(srcFormat_in != AV_PIX_FMT_NONE)
cond	39:12	39:28	5	srcFormat_in != AV_PIX_FMT_NONE
water	39:12	0:0	6	srcFormat_in
op	39:25	0:0	6	!=
water	39:28	0:0	6	AV_PIX_FMT_NONE
stmts	40:12	40:17	5	
break	40:12	40:17	6	
water	41:4	0:0	4	}

func	1:0	30:0	0	static int	diff_planes
params	1:22	0:0	1	
param	1:23	1:43	2	AVFilterContext *	ctx
param	2:23	2:35	2	uint8_t *	cur
param	2:37	2:53	2	int	cur_linesize
param	3:23	3:35	2	uint8_t *	ref
param	3:37	3:53	2	int	ref_linesize
param	4:23	4:28	2	int	w
param	4:30	4:35	2	int	h
stmnts	0:0	29:12	1	
decl	6:4	6:41	2	DecimateContext	*decimate
op	6:30	0:0	2	=
water	6:32	0:0	2	ctx
op	6:35	0:0	2	->
water	6:37	0:0	2	priv
decl	7:4	7:12	2	int	x
water	7:9	0:0	2	,
decl	7:4	7:12	2	int	y
decl	8:4	8:16	2	int	d
water	8:9	0:0	2	,
decl	8:4	8:16	2	int	c
op	8:13	0:0	2	=
water	8:15	0:0	2	0
decl	9:4	9:40	2	int	t
op	9:10	0:0	2	=
water	9:12	0:0	2	(
water	9:13	0:0	2	w
op	9:14	0:0	2	/
water	9:15	0:0	2	16
water	9:17	0:0	2	)
op	9:18	0:0	2	*
water	9:19	0:0	2	(
water	9:20	0:0	2	h
op	9:21	0:0	2	/
water	9:22	0:0	2	16
water	9:24	0:0	2	)
op	9:25	0:0	2	*
water	9:26	0:0	2	decimate
op	9:34	0:0	2	->
water	9:36	0:0	2	frac
for	11:4	27:4	2	(y = 0 ;y < h - 7;y += 4)
forinit	11:9	11:14	3	y = 0 ;
water	11:9	0:0	4	y
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:22	3	y < h - 7
water	11:16	0:0	4	y
op	11:18	0:0	4	<
water	11:20	0:0	4	h
op	11:21	0:0	4	-
water	11:22	0:0	4	7
forexpr	11:25	11:30	3	y += 4
water	11:25	0:0	4	y
op	11:27	0:0	4	+=
water	11:30	0:0	4	4
stmts	11:33	27:4	3	
water	11:33	0:0	4	{
for	12:8	26:8	4	(x = 8 ;x < w - 7;x += 4)
forinit	12:13	12:18	5	x = 8 ;
water	12:13	0:0	6	x
op	12:15	0:0	6	=
water	12:17	0:0	6	8
water	12:18	0:0	6	;
cond	12:20	12:26	5	x < w - 7
water	12:20	0:0	6	x
op	12:22	0:0	6	<
water	12:24	0:0	6	w
op	12:25	0:0	6	-
water	12:26	0:0	6	7
forexpr	12:29	12:34	5	x += 4
water	12:29	0:0	6	x
op	12:31	0:0	6	+=
water	12:34	0:0	6	4
stmts	12:37	26:8	5	
water	12:37	0:0	6	{
water	13:12	0:0	6	d
op	13:14	0:0	6	=
call	13:16	14:68	6	decimate->sad
arg	13:30	13:54	7	cur+y*cur_linesize+x
water	13:30	0:0	8	cur
op	13:34	0:0	8	+
water	13:36	0:0	8	y
op	13:37	0:0	8	*
water	13:38	0:0	8	cur_linesize
op	13:51	0:0	8	+
water	13:53	0:0	8	x
arg	13:56	13:68	7	cur_linesize
water	13:56	0:0	8	cur_linesize
arg	14:30	14:54	7	ref+y*ref_linesize+x
water	14:30	0:0	8	ref
op	14:34	0:0	8	+
water	14:36	0:0	8	y
op	14:37	0:0	8	*
water	14:38	0:0	8	ref_linesize
op	14:51	0:0	8	+
water	14:53	0:0	8	x
arg	14:56	14:68	7	ref_linesize
water	14:56	0:0	8	ref_linesize
water	14:69	0:0	6	;
if	15:12	18:12	6	(d > decimate -> hi)
cond	15:16	15:30	7	d > decimate -> hi
water	15:16	0:0	8	d
op	15:18	0:0	8	>
water	15:20	0:0	8	decimate
op	15:28	0:0	8	->
water	15:30	0:0	8	hi
stmts	15:34	18:12	7	
water	15:34	0:0	8	{
call	16:16	16:54	8	av_log
arg	16:23	16:26	9	ctx
water	16:23	0:0	10	ctx
arg	16:28	16:40	9	AV_LOG_DEBUG
water	16:28	0:0	10	AV_LOG_DEBUG
arg	16:42	16:51	9	"%d>=hi "
water	16:42	0:0	10	"%d>=hi "
arg	16:53	16:54	9	d
water	16:53	0:0	10	d
water	16:55	0:0	8	;
return	17:16	17:24	8	1
water	17:23	0:0	9	1
water	18:12	0:0	8	}
if	19:12	25:12	6	(d > decimate -> lo)
cond	19:16	19:30	7	d > decimate -> lo
water	19:16	0:0	8	d
op	19:18	0:0	8	>
water	19:20	0:0	8	decimate
op	19:28	0:0	8	->
water	19:30	0:0	8	lo
stmts	19:34	25:12	7	
water	19:34	0:0	8	{
water	20:16	0:0	8	c
op	20:17	0:0	8	++
water	20:19	0:0	8	;
if	21:16	24:16	8	(c > t)
cond	21:20	21:24	9	c > t
water	21:20	0:0	10	c
op	21:22	0:0	10	>
water	21:24	0:0	10	t
stmts	21:27	24:16	9	
water	21:27	0:0	10	{
call	22:20	22:64	10	av_log
arg	22:27	22:30	11	ctx
water	22:27	0:0	12	ctx
arg	22:32	22:44	11	AV_LOG_DEBUG
water	22:32	0:0	12	AV_LOG_DEBUG
arg	22:46	22:58	11	"lo:%d>=%d "
water	22:46	0:0	12	"lo:%d>=%d "
arg	22:60	22:61	11	c
water	22:60	0:0	12	c
arg	22:63	22:64	11	t
water	22:63	0:0	12	t
water	22:65	0:0	10	;
return	23:20	23:28	10	1
water	23:27	0:0	11	1
water	24:16	0:0	10	}
water	25:12	0:0	8	}
water	26:8	0:0	6	}
water	27:4	0:0	4	}
call	28:4	28:47	2	av_log
arg	28:11	28:14	3	ctx
water	28:11	0:0	4	ctx
arg	28:16	28:28	3	AV_LOG_DEBUG
water	28:16	0:0	4	AV_LOG_DEBUG
arg	28:30	28:41	3	"lo:%d<%d "
water	28:30	0:0	4	"lo:%d<%d "
arg	28:43	28:44	3	c
water	28:43	0:0	4	c
arg	28:46	28:47	3	t
water	28:46	0:0	4	t
water	28:48	0:0	2	;
return	29:4	29:12	2	0
water	29:11	0:0	3	0

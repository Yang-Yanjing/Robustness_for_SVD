func	1:0	20:0	0	static int	need_output
params	1:22	0:0	1	
param	1:23	1:27	2	void
stmnts	0:0	19:12	1	
decl	3:4	3:9	2	int	i
for	4:4	18:4	2	(i = 0 ;i < nb_output_streams;i ++)
forinit	4:9	4:14	3	i = 0 ;
water	4:9	0:0	4	i
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:20	3	i < nb_output_streams
water	4:16	0:0	4	i
op	4:18	0:0	4	<
water	4:20	0:0	4	nb_output_streams
forexpr	4:39	4:40	3	i ++
water	4:39	0:0	4	i
op	4:40	0:0	4	++
stmts	4:44	18:4	3	
water	4:44	0:0	4	{
decl	5:8	5:48	4	OutputStream	*ost
op	5:29	0:0	4	=
water	5:31	0:0	4	output_streams
op	5:45	0:0	4	[
water	5:46	0:0	4	i
op	5:47	0:0	4	]
decl	6:8	6:60	4	OutputFile	*of
op	6:29	0:0	4	=
water	6:31	0:0	4	output_files
op	6:43	0:0	4	[
water	6:44	0:0	4	ost
op	6:47	0:0	4	->
water	6:49	0:0	4	file_index
op	6:59	0:0	4	]
decl	7:8	7:65	4	AVFormatContext	*os
op	7:29	0:0	4	=
water	7:31	0:0	4	output_files
op	7:43	0:0	4	[
water	7:44	0:0	4	ost
op	7:47	0:0	4	->
water	7:49	0:0	4	file_index
op	7:59	0:0	4	]
op	7:60	0:0	4	->
water	7:62	0:0	4	ctx
if	8:8	10:20	4	(ost -> finished || ( os -> pb &&avio_tell (os -> pb ) >= of -> limit_filesize ))
cond	8:12	9:62	5	ost -> finished || ( os -> pb &&avio_tell (os -> pb ) >= of -> limit_filesize )
water	8:12	0:0	6	ost
op	8:15	0:0	6	->
water	8:17	0:0	6	finished
op	8:26	0:0	6	||
water	9:12	0:0	6	(
water	9:13	0:0	6	os
op	9:15	0:0	6	->
water	9:17	0:0	6	pb
op	9:20	0:0	6	&&
call	9:23	9:39	6	avio_tell
arg	9:33	9:39	7	os->pb
water	9:33	0:0	8	os
op	9:35	0:0	8	->
water	9:37	0:0	8	pb
op	9:41	0:0	6	>=
water	9:44	0:0	6	of
op	9:46	0:0	6	->
water	9:48	0:0	6	limit_filesize
water	9:62	0:0	6	)
stmts	10:12	10:20	5	
continue	10:12	10:20	6	
if	11:8	16:8	4	(ost -> frame_number >= ost -> max_frames)
cond	11:12	11:38	5	ost -> frame_number >= ost -> max_frames
water	11:12	0:0	6	ost
op	11:15	0:0	6	->
water	11:17	0:0	6	frame_number
op	11:30	0:0	6	>=
water	11:33	0:0	6	ost
op	11:36	0:0	6	->
water	11:38	0:0	6	max_frames
stmts	11:50	16:8	5	
water	11:50	0:0	6	{
decl	12:12	12:17	6	int	j
for	13:12	14:70	6	(j = 0 ;j < of -> ctx -> nb_streams;j ++)
forinit	13:17	13:22	7	j = 0 ;
water	13:17	0:0	8	j
op	13:19	0:0	8	=
water	13:21	0:0	8	0
water	13:22	0:0	8	;
cond	13:24	13:37	7	j < of -> ctx -> nb_streams
water	13:24	0:0	8	j
op	13:26	0:0	8	<
water	13:28	0:0	8	of
op	13:30	0:0	8	->
water	13:32	0:0	8	ctx
op	13:35	0:0	8	->
water	13:37	0:0	8	nb_streams
forexpr	13:49	13:50	7	j ++
water	13:49	0:0	8	j
op	13:50	0:0	8	++
stmts	14:16	14:70	7	
call	14:16	14:69	8	close_output_stream
arg	14:36	14:69	9	output_streams[of->ost_index+j]
water	14:36	0:0	10	output_streams
op	14:50	0:0	10	[
water	14:51	0:0	10	of
op	14:53	0:0	10	->
water	14:55	0:0	10	ost_index
op	14:65	0:0	10	+
water	14:67	0:0	10	j
op	14:68	0:0	10	]
water	14:70	0:0	8	;
continue	15:12	15:20	6	
water	16:8	0:0	6	}
return	17:8	17:16	4	1
water	17:15	0:0	5	1
water	18:4	0:0	4	}
return	19:4	19:12	2	0
water	19:11	0:0	3	0

func	1:0	62:0	0	static int	buffer_size_after_time_downloaded
params	1:44	0:0	1	
param	1:45	1:60	2	int64_t	time_ns
param	1:62	1:79	2	double	search_sec
param	1:81	1:92	2	int64_t	bps
param	2:45	2:62	2	double	min_buffer
param	2:64	2:78	2	double *	buffer
param	3:45	3:68	2	double *	sec_to_download
param	3:70	3:88	2	AVFormatContext *	s
param	4:45	4:63	2	int64_t	cues_start
stmnts	0:0	61:13	1	
decl	6:4	6:49	2	double	nano_seconds_per_second
op	6:35	0:0	2	=
water	6:37	0:0	2	1000000000
op	6:47	0:0	2	.
water	6:48	0:0	2	0
decl	7:4	7:55	2	double	time_sec
op	7:20	0:0	2	=
water	7:22	0:0	2	time_ns
op	7:30	0:0	2	/
water	7:32	0:0	2	nano_seconds_per_second
decl	8:4	8:14	2	int	rv
op	8:11	0:0	2	=
water	8:13	0:0	2	0
decl	9:4	9:79	2	int64_t	time_to_search_ns
op	9:30	0:0	2	=
call	9:32	9:78	3	(int64_t)
arg	9:42	9:78	4	search_sec*nano_seconds_per_second
water	9:42	0:0	5	search_sec
op	9:53	0:0	5	*
water	9:55	0:0	5	nano_seconds_per_second
decl	10:4	10:53	2	int64_t	end_time_ns
op	10:24	0:0	2	=
water	10:26	0:0	2	time_ns
op	10:34	0:0	2	+
water	10:36	0:0	2	time_to_search_ns
decl	11:4	11:31	2	double	sec_downloaded
op	11:26	0:0	2	=
water	11:28	0:0	2	0
op	11:29	0:0	2	.
water	11:30	0:0	2	0
decl	12:4	12:60	2	CueDesc	desc_curr
op	12:22	0:0	2	=
call	12:24	12:59	3	get_cue_desc
arg	12:37	12:38	4	s
water	12:37	0:0	5	s
arg	12:40	12:47	4	time_ns
water	12:40	0:0	5	time_ns
arg	12:49	12:59	4	cues_start
water	12:49	0:0	5	cues_start
if	13:4	14:15	2	(desc_curr . start_time_ns == - 1)
cond	13:8	13:36	3	desc_curr . start_time_ns == - 1
water	13:8	0:0	4	desc_curr
op	13:17	0:0	4	.
water	13:18	0:0	4	start_time_ns
op	13:32	0:0	4	==
op	13:35	0:0	4	-
water	13:36	0:0	4	1
stmts	14:6	14:15	3	
return	14:6	14:15	4	-1
op	14:13	0:0	5	-
water	14:14	0:0	5	1
op	15:4	0:0	2	*
water	15:5	0:0	2	sec_to_download
op	15:21	0:0	2	=
water	15:23	0:0	2	0
op	15:24	0:0	2	.
water	15:25	0:0	2	0
water	15:26	0:0	2	;
if	17:4	36:4	2	(time_ns > desc_curr . start_time_ns)
cond	17:8	17:28	3	time_ns > desc_curr . start_time_ns
water	17:8	0:0	4	time_ns
op	17:16	0:0	4	>
water	17:18	0:0	4	desc_curr
op	17:27	0:0	4	.
water	17:28	0:0	4	start_time_ns
stmts	17:43	36:4	3	
water	17:43	0:0	4	{
decl	18:6	18:56	4	int64_t	cue_nano
op	18:23	0:0	4	=
water	18:25	0:0	4	desc_curr
op	18:34	0:0	4	.
water	18:35	0:0	4	end_time_ns
op	18:47	0:0	4	-
water	18:49	0:0	4	time_ns
decl	19:6	19:93	4	double	percent
op	19:21	0:0	4	=
call	19:23	19:40	5	(double)
arg	19:32	19:40	6	cue_nano
water	19:32	0:0	7	cue_nano
op	19:42	0:0	4	/
water	19:44	0:0	4	(
water	19:45	0:0	4	desc_curr
op	19:54	0:0	4	.
water	19:55	0:0	4	end_time_ns
op	19:67	0:0	4	-
water	19:69	0:0	4	desc_curr
op	19:78	0:0	4	.
water	19:79	0:0	4	start_time_ns
water	19:92	0:0	4	)
decl	20:6	20:81	4	double	cueBytes
op	20:22	0:0	4	=
water	20:24	0:0	4	(
water	20:25	0:0	4	desc_curr
op	20:34	0:0	4	.
water	20:35	0:0	4	end_offset
op	20:46	0:0	4	-
water	20:48	0:0	4	desc_curr
op	20:57	0:0	4	.
water	20:58	0:0	4	start_offset
water	20:70	0:0	4	)
op	20:72	0:0	4	*
water	20:74	0:0	4	percent
decl	21:6	21:52	4	double	timeToDownload
op	21:28	0:0	4	=
water	21:30	0:0	4	(
water	21:31	0:0	4	cueBytes
op	21:40	0:0	4	*
water	21:42	0:0	4	8
op	21:43	0:0	4	.
water	21:44	0:0	4	0
water	21:45	0:0	4	)
op	21:47	0:0	4	/
water	21:49	0:0	4	bps
water	22:6	0:0	4	sec_downloaded
op	22:21	0:0	4	+=
water	22:24	0:0	4	(
water	22:25	0:0	4	cue_nano
op	22:34	0:0	4	/
water	22:36	0:0	4	nano_seconds_per_second
water	22:59	0:0	4	)
op	22:61	0:0	4	-
water	22:63	0:0	4	timeToDownload
water	22:77	0:0	4	;
op	23:6	0:0	4	*
water	23:7	0:0	4	sec_to_download
op	23:23	0:0	4	+=
water	23:26	0:0	4	timeToDownload
water	23:40	0:0	4	;
if	25:6	30:6	4	(desc_curr . end_time_ns >= end_time_ns)
cond	25:10	25:35	5	desc_curr . end_time_ns >= end_time_ns
water	25:10	0:0	6	desc_curr
op	25:19	0:0	6	.
water	25:20	0:0	6	end_time_ns
op	25:32	0:0	6	>=
water	25:35	0:0	6	end_time_ns
stmts	25:48	30:6	5	
water	25:48	0:0	6	{
decl	26:10	26:84	6	double	desc_end_time_sec
op	26:35	0:0	6	=
water	26:37	0:0	6	desc_curr
op	26:46	0:0	6	.
water	26:47	0:0	6	end_time_ns
op	26:59	0:0	6	/
water	26:61	0:0	6	nano_seconds_per_second
decl	27:10	27:77	6	double	percent_to_sub
op	27:32	0:0	6	=
water	27:34	0:0	6	search_sec
op	27:45	0:0	6	/
water	27:47	0:0	6	(
water	27:48	0:0	6	desc_end_time_sec
op	27:66	0:0	6	-
water	27:68	0:0	6	time_sec
water	27:76	0:0	6	)
water	28:10	0:0	6	sec_downloaded
op	28:25	0:0	6	=
water	28:27	0:0	6	percent_to_sub
op	28:42	0:0	6	*
water	28:44	0:0	6	sec_downloaded
water	28:58	0:0	6	;
op	29:10	0:0	6	*
water	29:11	0:0	6	sec_to_download
op	29:27	0:0	6	=
water	29:29	0:0	6	percent_to_sub
op	29:44	0:0	6	*
op	29:46	0:0	6	*
water	29:47	0:0	6	sec_to_download
water	29:62	0:0	6	;
water	30:6	0:0	6	}
if	31:6	33:6	4	(( sec_downloaded + * buffer ) <= min_buffer)
cond	31:10	31:40	5	( sec_downloaded + * buffer ) <= min_buffer
water	31:10	0:0	6	(
water	31:11	0:0	6	sec_downloaded
op	31:26	0:0	6	+
op	31:28	0:0	6	*
water	31:29	0:0	6	buffer
water	31:35	0:0	6	)
op	31:37	0:0	6	<=
water	31:40	0:0	6	min_buffer
stmts	31:52	33:6	5	
water	31:52	0:0	6	{
return	32:10	32:18	6	1
water	32:17	0:0	7	1
water	33:6	0:0	6	}
water	35:6	0:0	4	desc_curr
op	35:16	0:0	4	=
call	35:18	35:67	4	get_cue_desc
arg	35:31	35:32	5	s
water	35:31	0:0	6	s
arg	35:34	35:55	5	desc_curr.end_time_ns
water	35:34	0:0	6	desc_curr
op	35:43	0:0	6	.
water	35:44	0:0	6	end_time_ns
arg	35:57	35:67	5	cues_start
water	35:57	0:0	6	cues_start
water	35:68	0:0	4	;
water	36:4	0:0	4	}
while	37:4	59:4	2	(desc_curr . start_time_ns != - 1)
cond	37:11	37:39	3	desc_curr . start_time_ns != - 1
water	37:11	0:0	4	desc_curr
op	37:20	0:0	4	.
water	37:21	0:0	4	start_time_ns
op	37:35	0:0	4	!=
op	37:38	0:0	4	-
water	37:39	0:0	4	1
stmts	37:42	59:4	3	
water	37:42	0:0	4	{
decl	38:8	38:74	4	int64_t	desc_bytes
op	38:27	0:0	4	=
water	38:29	0:0	4	desc_curr
op	38:38	0:0	4	.
water	38:39	0:0	4	end_offset
op	38:50	0:0	4	-
water	38:52	0:0	4	desc_curr
op	38:61	0:0	4	.
water	38:62	0:0	4	start_offset
decl	39:8	39:73	4	int64_t	desc_ns
op	39:24	0:0	4	=
water	39:26	0:0	4	desc_curr
op	39:35	0:0	4	.
water	39:36	0:0	4	end_time_ns
op	39:48	0:0	4	-
water	39:50	0:0	4	desc_curr
op	39:59	0:0	4	.
water	39:60	0:0	4	start_time_ns
decl	40:8	40:59	4	double	desc_sec
op	40:24	0:0	4	=
water	40:26	0:0	4	desc_ns
op	40:34	0:0	4	/
water	40:36	0:0	4	nano_seconds_per_second
decl	41:8	41:40	4	double	bits
op	41:20	0:0	4	=
water	41:22	0:0	4	(
water	41:23	0:0	4	desc_bytes
op	41:34	0:0	4	*
water	41:36	0:0	4	8
op	41:37	0:0	4	.
water	41:38	0:0	4	0
water	41:39	0:0	4	)
decl	42:8	42:44	4	double	time_to_download
op	42:32	0:0	4	=
water	42:34	0:0	4	bits
op	42:39	0:0	4	/
water	42:41	0:0	4	bps
water	43:8	0:0	4	sec_downloaded
op	43:23	0:0	4	+=
water	43:26	0:0	4	desc_sec
op	43:35	0:0	4	-
water	43:37	0:0	4	time_to_download
water	43:53	0:0	4	;
op	44:8	0:0	4	*
water	44:9	0:0	4	sec_to_download
op	44:25	0:0	4	+=
water	44:28	0:0	4	time_to_download
water	44:44	0:0	4	;
if	45:8	53:8	4	(desc_curr . end_time_ns >= end_time_ns)
cond	45:12	45:37	5	desc_curr . end_time_ns >= end_time_ns
water	45:12	0:0	6	desc_curr
op	45:21	0:0	6	.
water	45:22	0:0	6	end_time_ns
op	45:34	0:0	6	>=
water	45:37	0:0	6	end_time_ns
stmts	45:50	53:8	5	
water	45:50	0:0	6	{
decl	46:12	46:86	6	double	desc_end_time_sec
op	46:37	0:0	6	=
water	46:39	0:0	6	desc_curr
op	46:48	0:0	6	.
water	46:49	0:0	6	end_time_ns
op	46:61	0:0	6	/
water	46:63	0:0	6	nano_seconds_per_second
decl	47:12	47:79	6	double	percent_to_sub
op	47:34	0:0	6	=
water	47:36	0:0	6	search_sec
op	47:47	0:0	6	/
water	47:49	0:0	6	(
water	47:50	0:0	6	desc_end_time_sec
op	47:68	0:0	6	-
water	47:70	0:0	6	time_sec
water	47:78	0:0	6	)
water	48:12	0:0	6	sec_downloaded
op	48:27	0:0	6	=
water	48:29	0:0	6	percent_to_sub
op	48:44	0:0	6	*
water	48:46	0:0	6	sec_downloaded
water	48:60	0:0	6	;
op	49:12	0:0	6	*
water	49:13	0:0	6	sec_to_download
op	49:29	0:0	6	=
water	49:31	0:0	6	percent_to_sub
op	49:46	0:0	6	*
op	49:48	0:0	6	*
water	49:49	0:0	6	sec_to_download
water	49:64	0:0	6	;
if	50:12	51:22	6	(( sec_downloaded + * buffer ) <= min_buffer)
cond	50:16	50:46	7	( sec_downloaded + * buffer ) <= min_buffer
water	50:16	0:0	8	(
water	50:17	0:0	8	sec_downloaded
op	50:32	0:0	8	+
op	50:34	0:0	8	*
water	50:35	0:0	8	buffer
water	50:41	0:0	8	)
op	50:43	0:0	8	<=
water	50:46	0:0	8	min_buffer
stmts	51:16	51:22	7	
water	51:16	0:0	8	rv
op	51:19	0:0	8	=
water	51:21	0:0	8	1
water	51:22	0:0	8	;
break	52:12	52:17	6	
water	53:8	0:0	6	}
if	54:8	57:8	4	(( sec_downloaded + * buffer ) <= min_buffer)
cond	54:12	54:42	5	( sec_downloaded + * buffer ) <= min_buffer
water	54:12	0:0	6	(
water	54:13	0:0	6	sec_downloaded
op	54:28	0:0	6	+
op	54:30	0:0	6	*
water	54:31	0:0	6	buffer
water	54:37	0:0	6	)
op	54:39	0:0	6	<=
water	54:42	0:0	6	min_buffer
stmts	54:54	57:8	5	
water	54:54	0:0	6	{
water	55:12	0:0	6	rv
op	55:15	0:0	6	=
water	55:17	0:0	6	1
water	55:18	0:0	6	;
break	56:12	56:17	6	
water	57:8	0:0	6	}
water	58:8	0:0	4	desc_curr
op	58:18	0:0	4	=
call	58:20	58:69	4	get_cue_desc
arg	58:33	58:34	5	s
water	58:33	0:0	6	s
arg	58:36	58:57	5	desc_curr.end_time_ns
water	58:36	0:0	6	desc_curr
op	58:45	0:0	6	.
water	58:46	0:0	6	end_time_ns
arg	58:59	58:69	5	cues_start
water	58:59	0:0	6	cues_start
water	58:70	0:0	4	;
water	59:4	0:0	4	}
op	60:4	0:0	2	*
water	60:5	0:0	2	buffer
op	60:12	0:0	2	=
op	60:14	0:0	2	*
water	60:15	0:0	2	buffer
op	60:22	0:0	2	+
water	60:24	0:0	2	sec_downloaded
water	60:38	0:0	2	;
return	61:4	61:13	2	rv
water	61:11	0:0	3	rv

func	1:0	16:0	0	static void	usage
params	1:17	0:0	1	
param	1:18	1:22	2	void
stmnts	3:4	15:68	1	
call	3:4	3:81	2	printf
arg	3:11	3:81	3	"Escape an input string, adopting the av_get_token() escaping logic\n"
water	3:11	0:0	4	"Escape an input string, adopting the av_get_token() escaping logic\n"
water	3:82	0:0	2	;
call	4:4	4:40	2	printf
arg	4:11	4:40	3	"usage: ffescape [OPTIONS]\n"
water	4:11	0:0	4	"usage: ffescape [OPTIONS]\n"
water	4:41	0:0	2	;
call	5:4	15:67	2	printf
arg	5:11	15:67	3	"\n""Options:\n""-e                echo each input line on output\n""-f flag           select an escape flag, can assume the values 'whitespace' and 'strict'\n""-h                print this help\n""-i INFILE         set INFILE as input file, stdin if omitted\n""-l LEVEL          set the number of escaping levels, 1 if omitted\n""-m ESCAPE_MODE    select escape mode between 'auto', 'backslash', 'quote'\n""-o OUTFILE        set OUTFILE as output file, stdout if omitted\n""-p PROMPT         set output prompt, is '=> ' by default\n""-s SPECIAL_CHARS  set the list of special characters\n"
water	5:11	0:0	4	"\n"
water	6:11	0:0	4	"Options:\n"
water	7:11	0:0	4	"-e                echo each input line on output\n"
water	8:11	0:0	4	"-f flag           select an escape flag, can assume the values 'whitespace' and 'strict'\n"
water	9:11	0:0	4	"-h                print this help\n"
water	10:11	0:0	4	"-i INFILE         set INFILE as input file, stdin if omitted\n"
water	11:11	0:0	4	"-l LEVEL          set the number of escaping levels, 1 if omitted\n"
water	12:11	0:0	4	"-m ESCAPE_MODE    select escape mode between 'auto', 'backslash', 'quote'\n"
water	13:11	0:0	4	"-o OUTFILE        set OUTFILE as output file, stdout if omitted\n"
water	14:11	0:0	4	"-p PROMPT         set output prompt, is '=> ' by default\n"
water	15:11	0:0	4	"-s SPECIAL_CHARS  set the list of special characters\n"
water	15:68	0:0	2	;

func	1:0	34:0	0	static int	find_sidx
params	1:20	0:0	1	
param	1:21	1:42	2	struct Tracks *	tracks
param	1:44	1:59	2	int	start_index
param	2:21	2:37	2	const char *	file
stmnts	0:0	33:14	1	
decl	4:4	4:15	2	int	err
op	4:12	0:0	2	=
water	4:14	0:0	2	0
decl	5:4	5:25	2	AVIOContext	*f
op	5:19	0:0	2	=
water	5:21	0:0	2	NULL
decl	6:4	6:9	2	int	i
if	7:4	8:17	2	(( err =avio_open2 (& f ,file ,AVIO_FLAG_READ ,NULL ,NULL ) ) < 0)
cond	7:8	7:67	3	( err =avio_open2 (& f ,file ,AVIO_FLAG_READ ,NULL ,NULL ) ) < 0
water	7:8	0:0	4	(
water	7:9	0:0	4	err
op	7:13	0:0	4	=
call	7:15	7:62	4	avio_open2
arg	7:26	7:28	5	&f
op	7:26	0:0	6	&
water	7:27	0:0	6	f
arg	7:30	7:34	5	file
water	7:30	0:0	6	file
arg	7:36	7:50	5	AVIO_FLAG_READ
water	7:36	0:0	6	AVIO_FLAG_READ
arg	7:52	7:56	5	NULL
water	7:52	0:0	6	NULL
arg	7:58	7:62	5	NULL
water	7:58	0:0	6	NULL
water	7:63	0:0	4	)
op	7:65	0:0	4	<
water	7:67	0:0	4	0
stmts	8:8	8:17	3	
goto	8:8	8:17	4	fail
water	8:13	0:0	5	fail
while	9:4	29:4	2	(! f -> eof_reached)
cond	9:11	9:15	3	! f -> eof_reached
op	9:11	0:0	4	!
water	9:12	0:0	4	f
op	9:13	0:0	4	->
water	9:15	0:0	4	eof_reached
stmts	9:28	29:4	3	
water	9:28	0:0	4	{
decl	10:8	10:34	4	int64_t	pos
op	10:20	0:0	4	=
call	10:22	10:33	5	avio_tell
arg	10:32	10:33	6	f
water	10:32	0:0	7	f
decl	11:8	11:25	4	int32_t	size
water	11:20	0:0	4	,
decl	11:8	11:25	4	int32_t	tag
water	12:8	0:0	4	size
op	12:13	0:0	4	=
call	12:15	12:26	4	avio_rb32
arg	12:25	12:26	5	f
water	12:25	0:0	6	f
water	12:27	0:0	4	;
water	13:8	0:0	4	tag
op	13:13	0:0	4	=
call	13:15	13:26	4	avio_rb32
arg	13:25	13:26	5	f
water	13:25	0:0	6	f
water	13:27	0:0	4	;
if	14:8	15:17	4	(size < 8)
cond	14:12	14:19	5	size < 8
water	14:12	0:0	6	size
op	14:17	0:0	6	<
water	14:19	0:0	6	8
stmts	15:12	15:17	5	
break	15:12	15:17	6	
if	16:8	26:8	4	(tag ==MKBETAG ('s' ,'i' ,'d' ,'x' ))
cond	16:12	16:45	5	tag ==MKBETAG ('s' ,'i' ,'d' ,'x' )
water	16:12	0:0	6	tag
op	16:16	0:0	6	==
call	16:19	16:45	6	MKBETAG
arg	16:27	16:30	7	's'
water	16:27	0:0	8	's'
arg	16:32	16:35	7	'i'
water	16:32	0:0	8	'i'
arg	16:37	16:40	7	'd'
water	16:37	0:0	8	'd'
arg	16:42	16:45	7	'x'
water	16:42	0:0	8	'x'
stmts	16:48	26:8	5	
water	16:48	0:0	6	{
for	17:12	25:12	6	(i = start_index ;i < tracks -> nb_tracks;i ++)
forinit	17:17	17:32	7	i = start_index ;
water	17:17	0:0	8	i
op	17:19	0:0	8	=
water	17:21	0:0	8	start_index
water	17:32	0:0	8	;
cond	17:34	17:46	7	i < tracks -> nb_tracks
water	17:34	0:0	8	i
op	17:36	0:0	8	<
water	17:38	0:0	8	tracks
op	17:44	0:0	8	->
water	17:46	0:0	8	nb_tracks
forexpr	17:57	17:58	7	i ++
water	17:57	0:0	8	i
op	17:58	0:0	8	++
stmts	17:62	25:12	7	
water	17:62	0:0	8	{
decl	18:16	18:55	8	struct Track	*track
op	18:36	0:0	8	=
water	18:38	0:0	8	tracks
op	18:44	0:0	8	->
water	18:46	0:0	8	tracks
op	18:52	0:0	8	[
water	18:53	0:0	8	i
op	18:54	0:0	8	]
if	19:16	22:16	8	(! track -> sidx_start)
cond	19:20	19:28	9	! track -> sidx_start
op	19:20	0:0	10	!
water	19:21	0:0	10	track
op	19:26	0:0	10	->
water	19:28	0:0	10	sidx_start
stmts	19:40	22:16	9	
water	19:40	0:0	10	{
water	20:20	0:0	10	track
op	20:25	0:0	10	->
water	20:27	0:0	10	sidx_start
op	20:39	0:0	10	=
water	20:41	0:0	10	pos
water	20:44	0:0	10	;
water	21:20	0:0	10	track
op	21:25	0:0	10	->
water	21:27	0:0	10	sidx_length
op	21:39	0:0	10	=
water	21:41	0:0	10	size
water	21:45	0:0	10	;
water	22:16	0:0	10	}
else	22:18	24:16	8
stmts	22:23	24:16	9	
if	22:23	24:16	10	(pos == track -> sidx_start + track -> sidx_length)
cond	22:27	22:61	11	pos == track -> sidx_start + track -> sidx_length
water	22:27	0:0	12	pos
op	22:31	0:0	12	==
water	22:34	0:0	12	track
op	22:39	0:0	12	->
water	22:41	0:0	12	sidx_start
op	22:52	0:0	12	+
water	22:54	0:0	12	track
op	22:59	0:0	12	->
water	22:61	0:0	12	sidx_length
stmts	22:74	24:16	11	
water	22:74	0:0	12	{
water	23:20	0:0	12	track
op	23:25	0:0	12	->
water	23:27	0:0	12	sidx_length
op	23:39	0:0	12	=
water	23:41	0:0	12	pos
op	23:45	0:0	12	+
water	23:47	0:0	12	size
op	23:52	0:0	12	-
water	23:54	0:0	12	track
op	23:59	0:0	12	->
water	23:61	0:0	12	sidx_start
water	23:71	0:0	12	;
water	24:16	0:0	12	}
water	25:12	0:0	8	}
water	26:8	0:0	6	}
if	27:8	28:17	4	(avio_seek (f ,pos + size ,SEEK_SET ) != pos + size)
cond	27:12	27:56	5	avio_seek (f ,pos + size ,SEEK_SET ) != pos + size
call	27:12	27:45	6	avio_seek
arg	27:22	27:23	7	f
water	27:22	0:0	8	f
arg	27:25	27:35	7	pos+size
water	27:25	0:0	8	pos
op	27:29	0:0	8	+
water	27:31	0:0	8	size
arg	27:37	27:45	7	SEEK_SET
water	27:37	0:0	8	SEEK_SET
op	27:47	0:0	6	!=
water	27:50	0:0	6	pos
op	27:54	0:0	6	+
water	27:56	0:0	6	size
stmts	28:12	28:17	5	
break	28:12	28:17	6	
water	29:4	0:0	4	}
label	30:0	30:4	2	fail :
if	31:4	32:21	2	(f)
cond	31:8	31:8	3	f
water	31:8	0:0	4	f
stmts	32:8	32:21	3	
call	32:8	32:20	4	avio_close
arg	32:19	32:20	5	f
water	32:19	0:0	6	f
water	32:21	0:0	4	;
return	33:4	33:14	2	err
water	33:11	0:0	3	err

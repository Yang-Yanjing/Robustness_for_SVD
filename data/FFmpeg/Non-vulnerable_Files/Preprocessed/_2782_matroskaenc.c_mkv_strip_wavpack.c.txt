func	1:0	43:0	0	static int	mkv_strip_wavpack
params	1:28	0:0	1	
param	1:29	1:47	2	const uint8_t *	src
param	1:49	1:63	2	uint8_t * *	pdst
param	1:65	1:74	2	int *	size
stmnts	0:0	42:14	1	
decl	3:4	3:16	2	uint8_t	*dst
decl	4:4	4:22	2	int	srclen
op	4:15	0:0	2	=
op	4:17	0:0	2	*
water	4:18	0:0	2	size
decl	5:4	5:18	2	int	offset
op	5:15	0:0	2	=
water	5:17	0:0	2	0
decl	6:4	6:11	2	int	ret
water	7:4	0:0	2	dst
op	7:8	0:0	2	=
call	7:10	7:26	2	av_malloc
arg	7:20	7:26	3	srclen
water	7:20	0:0	4	srclen
water	7:27	0:0	2	;
if	8:4	9:30	2	(! dst)
cond	8:8	8:9	3	! dst
op	8:8	0:0	4	!
water	8:9	0:0	4	dst
stmts	9:8	9:30	3	
return	9:8	9:30	4	AVERROR(ENOMEM)
call	9:15	9:29	5	AVERROR
arg	9:23	9:29	6	ENOMEM
water	9:23	0:0	7	ENOMEM
while	10:4	36:4	2	(srclen >= WV_HEADER_SIZE)
cond	10:11	10:21	3	srclen >= WV_HEADER_SIZE
water	10:11	0:0	4	srclen
op	10:18	0:0	4	>=
water	10:21	0:0	4	WV_HEADER_SIZE
stmts	10:37	36:4	3	
water	10:37	0:0	4	{
decl	11:8	11:23	4	WvHeader	header
water	12:8	0:0	4	ret
op	12:12	0:0	4	=
call	12:14	12:45	4	ff_wv_parse_header
arg	12:33	12:40	5	&header
op	12:33	0:0	6	&
water	12:34	0:0	6	header
arg	12:42	12:45	5	src
water	12:42	0:0	6	src
water	12:46	0:0	4	;
if	13:8	14:21	4	(ret < 0)
cond	13:12	13:18	5	ret < 0
water	13:12	0:0	6	ret
op	13:16	0:0	6	<
water	13:18	0:0	6	0
stmts	14:12	14:21	5	
goto	14:12	14:21	6	fail
water	14:17	0:0	7	fail
water	15:8	0:0	4	src
op	15:15	0:0	4	+=
water	15:18	0:0	4	WV_HEADER_SIZE
water	15:32	0:0	4	;
water	16:8	0:0	4	srclen
op	16:15	0:0	4	-=
water	16:18	0:0	4	WV_HEADER_SIZE
water	16:32	0:0	4	;
if	17:8	20:8	4	(srclen < header . blocksize)
cond	17:12	17:28	5	srclen < header . blocksize
water	17:12	0:0	6	srclen
op	17:19	0:0	6	<
water	17:21	0:0	6	header
op	17:27	0:0	6	.
water	17:28	0:0	6	blocksize
stmts	17:39	20:8	5	
water	17:39	0:0	6	{
water	18:12	0:0	6	ret
op	18:16	0:0	6	=
water	18:18	0:0	6	AVERROR_INVALIDDATA
water	18:37	0:0	6	;
goto	19:12	19:21	6	fail
water	19:17	0:0	7	fail
water	20:8	0:0	6	}
if	21:8	24:8	4	(header . initial)
cond	21:12	21:19	5	header . initial
water	21:12	0:0	6	header
op	21:18	0:0	6	.
water	21:19	0:0	6	initial
stmts	21:28	24:8	5	
water	21:28	0:0	6	{
call	22:12	22:48	6	AV_WL32
arg	22:20	22:32	7	dst+offset
water	22:20	0:0	8	dst
op	22:24	0:0	8	+
water	22:26	0:0	8	offset
arg	22:34	22:48	7	header.samples
water	22:34	0:0	8	header
op	22:40	0:0	8	.
water	22:41	0:0	8	samples
water	22:49	0:0	6	;
water	23:12	0:0	6	offset
op	23:19	0:0	6	+=
water	23:22	0:0	6	4
water	23:23	0:0	6	;
water	24:8	0:0	6	}
call	25:8	25:46	4	AV_WL32
arg	25:16	25:28	5	dst+offset
water	25:16	0:0	6	dst
op	25:20	0:0	6	+
water	25:22	0:0	6	offset
arg	25:34	25:46	5	header.flags
water	25:34	0:0	6	header
op	25:40	0:0	6	.
water	25:41	0:0	6	flags
water	25:47	0:0	4	;
call	26:8	26:44	4	AV_WL32
arg	26:16	26:32	5	dst+offset+4
water	26:16	0:0	6	dst
op	26:20	0:0	6	+
water	26:22	0:0	6	offset
op	26:29	0:0	6	+
water	26:31	0:0	6	4
arg	26:34	26:44	5	header.crc
water	26:34	0:0	6	header
op	26:40	0:0	6	.
water	26:41	0:0	6	crc
water	26:45	0:0	4	;
water	27:8	0:0	4	offset
op	27:15	0:0	4	+=
water	27:18	0:0	4	8
water	27:19	0:0	4	;
if	28:8	31:8	4	(! ( header . initial && header . final ))
cond	28:12	28:44	5	! ( header . initial && header . final )
op	28:12	0:0	6	!
water	28:13	0:0	6	(
water	28:14	0:0	6	header
op	28:20	0:0	6	.
water	28:21	0:0	6	initial
op	28:29	0:0	6	&&
water	28:32	0:0	6	header
op	28:38	0:0	6	.
water	28:39	0:0	6	final
water	28:44	0:0	6	)
stmts	28:47	31:8	5	
water	28:47	0:0	6	{
call	29:12	29:50	6	AV_WL32
arg	29:20	29:32	7	dst+offset
water	29:20	0:0	8	dst
op	29:24	0:0	8	+
water	29:26	0:0	8	offset
arg	29:34	29:50	7	header.blocksize
water	29:34	0:0	8	header
op	29:40	0:0	8	.
water	29:41	0:0	8	blocksize
water	29:51	0:0	6	;
water	30:12	0:0	6	offset
op	30:19	0:0	6	+=
water	30:22	0:0	6	4
water	30:23	0:0	6	;
water	31:8	0:0	6	}
call	32:8	32:50	4	memcpy
arg	32:15	32:27	5	dst+offset
water	32:15	0:0	6	dst
op	32:19	0:0	6	+
water	32:21	0:0	6	offset
arg	32:29	32:32	5	src
water	32:29	0:0	6	src
arg	32:34	32:50	5	header.blocksize
water	32:34	0:0	6	header
op	32:40	0:0	6	.
water	32:41	0:0	6	blocksize
water	32:51	0:0	4	;
water	33:8	0:0	4	src
op	33:15	0:0	4	+=
water	33:18	0:0	4	header
op	33:24	0:0	4	.
water	33:25	0:0	4	blocksize
water	33:34	0:0	4	;
water	34:8	0:0	4	srclen
op	34:15	0:0	4	-=
water	34:18	0:0	4	header
op	34:24	0:0	4	.
water	34:25	0:0	4	blocksize
water	34:34	0:0	4	;
water	35:8	0:0	4	offset
op	35:15	0:0	4	+=
water	35:18	0:0	4	header
op	35:24	0:0	4	.
water	35:25	0:0	4	blocksize
water	35:34	0:0	4	;
water	36:4	0:0	4	}
op	37:4	0:0	2	*
water	37:5	0:0	2	pdst
op	37:10	0:0	2	=
water	37:12	0:0	2	dst
water	37:15	0:0	2	;
op	38:4	0:0	2	*
water	38:5	0:0	2	size
op	38:10	0:0	2	=
water	38:12	0:0	2	offset
water	38:18	0:0	2	;
return	39:4	39:12	2	0
water	39:11	0:0	3	0
label	40:0	40:4	2	fail :
call	41:4	41:17	2	av_freep
arg	41:13	41:17	3	&dst
op	41:13	0:0	4	&
water	41:14	0:0	4	dst
water	41:18	0:0	2	;
return	42:4	42:14	2	ret
water	42:11	0:0	3	ret

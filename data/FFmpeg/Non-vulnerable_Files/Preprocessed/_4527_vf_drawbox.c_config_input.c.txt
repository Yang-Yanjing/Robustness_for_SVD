func	1:0	73:0	0	static int	config_input
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
stmnts	0:0	72:14	1	
decl	3:4	3:38	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	inlink
op	3:33	0:0	2	->
water	3:35	0:0	2	dst
decl	4:4	4:33	2	DrawBoxContext	*s
op	4:22	0:0	2	=
water	4:24	0:0	2	ctx
op	4:27	0:0	2	->
water	4:29	0:0	2	priv
decl	5:4	5:72	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:71	3	av_pix_fmt_desc_get
arg	5:57	5:71	4	inlink->format
water	5:57	0:0	5	inlink
op	5:63	0:0	5	->
water	5:65	0:0	5	format
decl	6:4	6:35	2	double	var_values[VARS_NB]
water	6:30	0:0	2	,
decl	6:4	6:35	2	double	res
decl	7:4	7:14	2	char	*expr
decl	8:4	8:11	2	int	ret
decl	9:4	9:9	2	int	i
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	hsub
op	10:12	0:0	2	=
water	10:14	0:0	2	desc
op	10:18	0:0	2	->
water	10:20	0:0	2	log2_chroma_w
water	10:33	0:0	2	;
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	vsub
op	11:12	0:0	2	=
water	11:14	0:0	2	desc
op	11:18	0:0	2	->
water	11:20	0:0	2	log2_chroma_h
water	11:33	0:0	2	;
water	12:4	0:0	2	var_values
op	12:14	0:0	2	[
water	12:15	0:0	2	VAR_IN_H
op	12:23	0:0	2	]
op	12:25	0:0	2	=
water	12:27	0:0	2	var_values
op	12:37	0:0	2	[
water	12:38	0:0	2	VAR_IH
op	12:44	0:0	2	]
op	12:46	0:0	2	=
water	12:48	0:0	2	inlink
op	12:54	0:0	2	->
water	12:56	0:0	2	h
water	12:57	0:0	2	;
water	13:4	0:0	2	var_values
op	13:14	0:0	2	[
water	13:15	0:0	2	VAR_IN_W
op	13:23	0:0	2	]
op	13:25	0:0	2	=
water	13:27	0:0	2	var_values
op	13:37	0:0	2	[
water	13:38	0:0	2	VAR_IW
op	13:44	0:0	2	]
op	13:46	0:0	2	=
water	13:48	0:0	2	inlink
op	13:54	0:0	2	->
water	13:56	0:0	2	w
water	13:57	0:0	2	;
water	14:4	0:0	2	var_values
op	14:14	0:0	2	[
water	14:15	0:0	2	VAR_SAR
op	14:22	0:0	2	]
op	14:25	0:0	2	=
water	14:27	0:0	2	inlink
op	14:33	0:0	2	->
water	14:35	0:0	2	sample_aspect_ratio
op	14:54	0:0	2	.
water	14:55	0:0	2	num
water	14:59	0:0	2	?
call	14:61	14:95	2	av_q2d
arg	14:68	14:95	3	inlink->sample_aspect_ratio
water	14:68	0:0	4	inlink
op	14:74	0:0	4	->
water	14:76	0:0	4	sample_aspect_ratio
water	14:97	0:0	2	:
water	14:99	0:0	2	1
water	14:100	0:0	2	;
water	15:4	0:0	2	var_values
op	15:14	0:0	2	[
water	15:15	0:0	2	VAR_DAR
op	15:22	0:0	2	]
op	15:25	0:0	2	=
water	15:27	0:0	2	(
water	15:28	0:0	2	double
water	15:34	0:0	2	)
water	15:35	0:0	2	inlink
op	15:41	0:0	2	->
water	15:43	0:0	2	w
op	15:45	0:0	2	/
water	15:47	0:0	2	inlink
op	15:53	0:0	2	->
water	15:55	0:0	2	h
op	15:57	0:0	2	*
water	15:59	0:0	2	var_values
op	15:69	0:0	2	[
water	15:70	0:0	2	VAR_SAR
op	15:77	0:0	2	]
water	15:78	0:0	2	;
water	16:4	0:0	2	var_values
op	16:14	0:0	2	[
water	16:15	0:0	2	VAR_HSUB
op	16:23	0:0	2	]
op	16:25	0:0	2	=
water	16:27	0:0	2	s
op	16:28	0:0	2	->
water	16:30	0:0	2	hsub
water	16:34	0:0	2	;
water	17:4	0:0	2	var_values
op	17:14	0:0	2	[
water	17:15	0:0	2	VAR_VSUB
op	17:23	0:0	2	]
op	17:25	0:0	2	=
water	17:27	0:0	2	s
op	17:28	0:0	2	->
water	17:30	0:0	2	vsub
water	17:34	0:0	2	;
water	18:4	0:0	2	var_values
op	18:14	0:0	2	[
water	18:15	0:0	2	VAR_X
op	18:20	0:0	2	]
op	18:22	0:0	2	=
water	18:24	0:0	2	NAN
water	18:27	0:0	2	;
water	19:4	0:0	2	var_values
op	19:14	0:0	2	[
water	19:15	0:0	2	VAR_Y
op	19:20	0:0	2	]
op	19:22	0:0	2	=
water	19:24	0:0	2	NAN
water	19:27	0:0	2	;
water	20:4	0:0	2	var_values
op	20:14	0:0	2	[
water	20:15	0:0	2	VAR_H
op	20:20	0:0	2	]
op	20:22	0:0	2	=
water	20:24	0:0	2	NAN
water	20:27	0:0	2	;
water	21:4	0:0	2	var_values
op	21:14	0:0	2	[
water	21:15	0:0	2	VAR_W
op	21:20	0:0	2	]
op	21:22	0:0	2	=
water	21:24	0:0	2	NAN
water	21:27	0:0	2	;
water	22:4	0:0	2	var_values
op	22:14	0:0	2	[
water	22:15	0:0	2	VAR_T
op	22:20	0:0	2	]
op	22:22	0:0	2	=
water	22:24	0:0	2	NAN
water	22:27	0:0	2	;
for	23:4	55:4	2	(i = 0 ;i <= NUM_EXPR_EVALS;i ++)
forinit	23:9	23:14	3	i = 0 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	0
water	23:14	0:0	4	;
cond	23:16	23:21	3	i <= NUM_EXPR_EVALS
water	23:16	0:0	4	i
op	23:18	0:0	4	<=
water	23:21	0:0	4	NUM_EXPR_EVALS
forexpr	23:37	23:38	3	i ++
water	23:37	0:0	4	i
op	23:38	0:0	4	++
stmts	23:42	55:4	3	
water	23:42	0:0	4	{
water	25:8	0:0	4	var_values
op	25:18	0:0	4	[
water	25:19	0:0	4	VAR_MAX
op	25:26	0:0	4	]
op	25:28	0:0	4	=
water	25:30	0:0	4	inlink
op	25:36	0:0	4	->
water	25:38	0:0	4	w
water	25:39	0:0	4	;
if	26:8	29:21	4	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> x_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS)
cond	26:12	28:93	5	( ret =av_expr_parse_and_eval (& res ,( expr = s -> x_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS
water	26:12	0:0	6	(
water	26:13	0:0	6	ret
op	26:17	0:0	6	=
call	26:19	28:78	6	av_expr_parse_and_eval
arg	26:42	26:46	7	&res
op	26:42	0:0	8	&
water	26:43	0:0	8	res
arg	26:48	26:66	7	(expr=s->x_expr)
water	26:48	0:0	8	(
water	26:49	0:0	8	expr
op	26:54	0:0	8	=
water	26:56	0:0	8	s
op	26:57	0:0	8	->
water	26:59	0:0	8	x_expr
water	26:65	0:0	8	)
arg	27:42	27:51	7	var_names
water	27:42	0:0	8	var_names
arg	27:53	27:63	7	var_values
water	27:53	0:0	8	var_values
arg	28:42	28:46	7	NULL
water	28:42	0:0	8	NULL
arg	28:48	28:52	7	NULL
water	28:48	0:0	8	NULL
arg	28:54	28:58	7	NULL
water	28:54	0:0	8	NULL
arg	28:60	28:64	7	NULL
water	28:60	0:0	8	NULL
arg	28:66	28:70	7	NULL
water	28:66	0:0	8	NULL
arg	28:72	28:73	7	0
water	28:72	0:0	8	0
arg	28:75	28:78	7	ctx
water	28:75	0:0	8	ctx
water	28:79	0:0	6	)
op	28:81	0:0	6	<
water	28:83	0:0	6	0
op	28:85	0:0	6	&&
water	28:88	0:0	6	i
op	28:90	0:0	6	==
water	28:93	0:0	6	NUM_EXPR_EVALS
stmts	29:12	29:21	5	
goto	29:12	29:21	6	fail
water	29:17	0:0	7	fail
water	30:8	0:0	4	s
op	30:9	0:0	4	->
water	30:11	0:0	4	x
op	30:13	0:0	4	=
water	30:15	0:0	4	var_values
op	30:25	0:0	4	[
water	30:26	0:0	4	VAR_X
op	30:31	0:0	4	]
op	30:33	0:0	4	=
water	30:35	0:0	4	res
water	30:38	0:0	4	;
water	31:8	0:0	4	var_values
op	31:18	0:0	4	[
water	31:19	0:0	4	VAR_MAX
op	31:26	0:0	4	]
op	31:28	0:0	4	=
water	31:30	0:0	4	inlink
op	31:36	0:0	4	->
water	31:38	0:0	4	h
water	31:39	0:0	4	;
if	32:8	35:21	4	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> y_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS)
cond	32:12	34:93	5	( ret =av_expr_parse_and_eval (& res ,( expr = s -> y_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS
water	32:12	0:0	6	(
water	32:13	0:0	6	ret
op	32:17	0:0	6	=
call	32:19	34:78	6	av_expr_parse_and_eval
arg	32:42	32:46	7	&res
op	32:42	0:0	8	&
water	32:43	0:0	8	res
arg	32:48	32:66	7	(expr=s->y_expr)
water	32:48	0:0	8	(
water	32:49	0:0	8	expr
op	32:54	0:0	8	=
water	32:56	0:0	8	s
op	32:57	0:0	8	->
water	32:59	0:0	8	y_expr
water	32:65	0:0	8	)
arg	33:42	33:51	7	var_names
water	33:42	0:0	8	var_names
arg	33:53	33:63	7	var_values
water	33:53	0:0	8	var_values
arg	34:42	34:46	7	NULL
water	34:42	0:0	8	NULL
arg	34:48	34:52	7	NULL
water	34:48	0:0	8	NULL
arg	34:54	34:58	7	NULL
water	34:54	0:0	8	NULL
arg	34:60	34:64	7	NULL
water	34:60	0:0	8	NULL
arg	34:66	34:70	7	NULL
water	34:66	0:0	8	NULL
arg	34:72	34:73	7	0
water	34:72	0:0	8	0
arg	34:75	34:78	7	ctx
water	34:75	0:0	8	ctx
water	34:79	0:0	6	)
op	34:81	0:0	6	<
water	34:83	0:0	6	0
op	34:85	0:0	6	&&
water	34:88	0:0	6	i
op	34:90	0:0	6	==
water	34:93	0:0	6	NUM_EXPR_EVALS
stmts	35:12	35:21	5	
goto	35:12	35:21	6	fail
water	35:17	0:0	7	fail
water	36:8	0:0	4	s
op	36:9	0:0	4	->
water	36:11	0:0	4	y
op	36:13	0:0	4	=
water	36:15	0:0	4	var_values
op	36:25	0:0	4	[
water	36:26	0:0	4	VAR_Y
op	36:31	0:0	4	]
op	36:33	0:0	4	=
water	36:35	0:0	4	res
water	36:38	0:0	4	;
water	37:8	0:0	4	var_values
op	37:18	0:0	4	[
water	37:19	0:0	4	VAR_MAX
op	37:26	0:0	4	]
op	37:28	0:0	4	=
water	37:30	0:0	4	inlink
op	37:36	0:0	4	->
water	37:38	0:0	4	w
op	37:40	0:0	4	-
water	37:42	0:0	4	s
op	37:43	0:0	4	->
water	37:45	0:0	4	x
water	37:46	0:0	4	;
if	38:8	41:21	4	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> w_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS)
cond	38:12	40:93	5	( ret =av_expr_parse_and_eval (& res ,( expr = s -> w_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS
water	38:12	0:0	6	(
water	38:13	0:0	6	ret
op	38:17	0:0	6	=
call	38:19	40:78	6	av_expr_parse_and_eval
arg	38:42	38:46	7	&res
op	38:42	0:0	8	&
water	38:43	0:0	8	res
arg	38:48	38:66	7	(expr=s->w_expr)
water	38:48	0:0	8	(
water	38:49	0:0	8	expr
op	38:54	0:0	8	=
water	38:56	0:0	8	s
op	38:57	0:0	8	->
water	38:59	0:0	8	w_expr
water	38:65	0:0	8	)
arg	39:42	39:51	7	var_names
water	39:42	0:0	8	var_names
arg	39:53	39:63	7	var_values
water	39:53	0:0	8	var_values
arg	40:42	40:46	7	NULL
water	40:42	0:0	8	NULL
arg	40:48	40:52	7	NULL
water	40:48	0:0	8	NULL
arg	40:54	40:58	7	NULL
water	40:54	0:0	8	NULL
arg	40:60	40:64	7	NULL
water	40:60	0:0	8	NULL
arg	40:66	40:70	7	NULL
water	40:66	0:0	8	NULL
arg	40:72	40:73	7	0
water	40:72	0:0	8	0
arg	40:75	40:78	7	ctx
water	40:75	0:0	8	ctx
water	40:79	0:0	6	)
op	40:81	0:0	6	<
water	40:83	0:0	6	0
op	40:85	0:0	6	&&
water	40:88	0:0	6	i
op	40:90	0:0	6	==
water	40:93	0:0	6	NUM_EXPR_EVALS
stmts	41:12	41:21	5	
goto	41:12	41:21	6	fail
water	41:17	0:0	7	fail
water	42:8	0:0	4	s
op	42:9	0:0	4	->
water	42:11	0:0	4	w
op	42:13	0:0	4	=
water	42:15	0:0	4	var_values
op	42:25	0:0	4	[
water	42:26	0:0	4	VAR_W
op	42:31	0:0	4	]
op	42:33	0:0	4	=
water	42:35	0:0	4	res
water	42:38	0:0	4	;
water	43:8	0:0	4	var_values
op	43:18	0:0	4	[
water	43:19	0:0	4	VAR_MAX
op	43:26	0:0	4	]
op	43:28	0:0	4	=
water	43:30	0:0	4	inlink
op	43:36	0:0	4	->
water	43:38	0:0	4	h
op	43:40	0:0	4	-
water	43:42	0:0	4	s
op	43:43	0:0	4	->
water	43:45	0:0	4	y
water	43:46	0:0	4	;
if	44:8	47:21	4	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> h_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS)
cond	44:12	46:93	5	( ret =av_expr_parse_and_eval (& res ,( expr = s -> h_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS
water	44:12	0:0	6	(
water	44:13	0:0	6	ret
op	44:17	0:0	6	=
call	44:19	46:78	6	av_expr_parse_and_eval
arg	44:42	44:46	7	&res
op	44:42	0:0	8	&
water	44:43	0:0	8	res
arg	44:48	44:66	7	(expr=s->h_expr)
water	44:48	0:0	8	(
water	44:49	0:0	8	expr
op	44:54	0:0	8	=
water	44:56	0:0	8	s
op	44:57	0:0	8	->
water	44:59	0:0	8	h_expr
water	44:65	0:0	8	)
arg	45:42	45:51	7	var_names
water	45:42	0:0	8	var_names
arg	45:53	45:63	7	var_values
water	45:53	0:0	8	var_values
arg	46:42	46:46	7	NULL
water	46:42	0:0	8	NULL
arg	46:48	46:52	7	NULL
water	46:48	0:0	8	NULL
arg	46:54	46:58	7	NULL
water	46:54	0:0	8	NULL
arg	46:60	46:64	7	NULL
water	46:60	0:0	8	NULL
arg	46:66	46:70	7	NULL
water	46:66	0:0	8	NULL
arg	46:72	46:73	7	0
water	46:72	0:0	8	0
arg	46:75	46:78	7	ctx
water	46:75	0:0	8	ctx
water	46:79	0:0	6	)
op	46:81	0:0	6	<
water	46:83	0:0	6	0
op	46:85	0:0	6	&&
water	46:88	0:0	6	i
op	46:90	0:0	6	==
water	46:93	0:0	6	NUM_EXPR_EVALS
stmts	47:12	47:21	5	
goto	47:12	47:21	6	fail
water	47:17	0:0	7	fail
water	48:8	0:0	4	s
op	48:9	0:0	4	->
water	48:11	0:0	4	h
op	48:13	0:0	4	=
water	48:15	0:0	4	var_values
op	48:25	0:0	4	[
water	48:26	0:0	4	VAR_H
op	48:31	0:0	4	]
op	48:33	0:0	4	=
water	48:35	0:0	4	res
water	48:38	0:0	4	;
water	49:8	0:0	4	var_values
op	49:18	0:0	4	[
water	49:19	0:0	4	VAR_MAX
op	49:26	0:0	4	]
op	49:28	0:0	4	=
water	49:30	0:0	4	INT_MAX
water	49:37	0:0	4	;
if	50:8	53:21	4	(( ret =av_expr_parse_and_eval (& res ,( expr = s -> t_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS)
cond	50:12	52:93	5	( ret =av_expr_parse_and_eval (& res ,( expr = s -> t_expr ) ,var_names ,var_values ,NULL ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0 && i == NUM_EXPR_EVALS
water	50:12	0:0	6	(
water	50:13	0:0	6	ret
op	50:17	0:0	6	=
call	50:19	52:78	6	av_expr_parse_and_eval
arg	50:42	50:46	7	&res
op	50:42	0:0	8	&
water	50:43	0:0	8	res
arg	50:48	50:66	7	(expr=s->t_expr)
water	50:48	0:0	8	(
water	50:49	0:0	8	expr
op	50:54	0:0	8	=
water	50:56	0:0	8	s
op	50:57	0:0	8	->
water	50:59	0:0	8	t_expr
water	50:65	0:0	8	)
arg	51:42	51:51	7	var_names
water	51:42	0:0	8	var_names
arg	51:53	51:63	7	var_values
water	51:53	0:0	8	var_values
arg	52:42	52:46	7	NULL
water	52:42	0:0	8	NULL
arg	52:48	52:52	7	NULL
water	52:48	0:0	8	NULL
arg	52:54	52:58	7	NULL
water	52:54	0:0	8	NULL
arg	52:60	52:64	7	NULL
water	52:60	0:0	8	NULL
arg	52:66	52:70	7	NULL
water	52:66	0:0	8	NULL
arg	52:72	52:73	7	0
water	52:72	0:0	8	0
arg	52:75	52:78	7	ctx
water	52:75	0:0	8	ctx
water	52:79	0:0	6	)
op	52:81	0:0	6	<
water	52:83	0:0	6	0
op	52:85	0:0	6	&&
water	52:88	0:0	6	i
op	52:90	0:0	6	==
water	52:93	0:0	6	NUM_EXPR_EVALS
stmts	53:12	53:21	5	
goto	53:12	53:21	6	fail
water	53:17	0:0	7	fail
water	54:8	0:0	4	s
op	54:9	0:0	4	->
water	54:11	0:0	4	thickness
op	54:21	0:0	4	=
water	54:23	0:0	4	var_values
op	54:33	0:0	4	[
water	54:34	0:0	4	VAR_T
op	54:39	0:0	4	]
op	54:41	0:0	4	=
water	54:43	0:0	4	res
water	54:46	0:0	4	;
water	55:4	0:0	4	}
water	57:4	0:0	2	s
op	57:5	0:0	2	->
water	57:7	0:0	2	w
op	57:9	0:0	2	=
water	57:11	0:0	2	(
water	57:12	0:0	2	s
op	57:13	0:0	2	->
water	57:15	0:0	2	w
op	57:17	0:0	2	>
water	57:19	0:0	2	0
water	57:20	0:0	2	)
water	57:22	0:0	2	?
water	57:24	0:0	2	s
op	57:25	0:0	2	->
water	57:27	0:0	2	w
water	57:29	0:0	2	:
water	57:31	0:0	2	inlink
op	57:37	0:0	2	->
water	57:39	0:0	2	w
water	57:40	0:0	2	;
water	58:4	0:0	2	s
op	58:5	0:0	2	->
water	58:7	0:0	2	h
op	58:9	0:0	2	=
water	58:11	0:0	2	(
water	58:12	0:0	2	s
op	58:13	0:0	2	->
water	58:15	0:0	2	h
op	58:17	0:0	2	>
water	58:19	0:0	2	0
water	58:20	0:0	2	)
water	58:22	0:0	2	?
water	58:24	0:0	2	s
op	58:25	0:0	2	->
water	58:27	0:0	2	h
water	58:29	0:0	2	:
water	58:31	0:0	2	inlink
op	58:37	0:0	2	->
water	58:39	0:0	2	h
water	58:40	0:0	2	;
if	60:4	63:4	2	(s -> w < 0 || s -> h < 0)
cond	60:8	60:29	3	s -> w < 0 || s -> h < 0
water	60:8	0:0	4	s
op	60:9	0:0	4	->
water	60:11	0:0	4	w
op	60:13	0:0	4	<
water	60:16	0:0	4	0
op	60:18	0:0	4	||
water	60:21	0:0	4	s
op	60:22	0:0	4	->
water	60:24	0:0	4	h
op	60:26	0:0	4	<
water	60:29	0:0	4	0
stmts	60:32	63:4	3	
water	60:32	0:0	4	{
call	61:8	61:81	4	av_log
arg	61:15	61:18	5	ctx
water	61:15	0:0	6	ctx
arg	61:20	61:32	5	AV_LOG_ERROR
water	61:20	0:0	6	AV_LOG_ERROR
arg	61:34	61:81	5	"Size values less than 0 are not acceptable.\n"
water	61:34	0:0	6	"Size values less than 0 are not acceptable.\n"
water	61:82	0:0	4	;
return	62:8	62:30	4	AVERROR(EINVAL)
call	62:15	62:29	5	AVERROR
arg	62:23	62:29	6	EINVAL
water	62:23	0:0	7	EINVAL
water	63:4	0:0	4	}
call	64:4	66:77	2	av_log
arg	64:11	64:14	3	ctx
water	64:11	0:0	4	ctx
arg	64:16	64:30	3	AV_LOG_VERBOSE
water	64:16	0:0	4	AV_LOG_VERBOSE
arg	64:32	64:80	3	"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\n"
water	64:32	0:0	4	"x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\n"
arg	65:11	65:15	3	s->x
water	65:11	0:0	4	s
op	65:12	0:0	4	->
water	65:14	0:0	4	x
arg	65:17	65:21	3	s->y
water	65:17	0:0	4	s
op	65:18	0:0	4	->
water	65:20	0:0	4	y
arg	65:23	65:27	3	s->w
water	65:23	0:0	4	s
op	65:24	0:0	4	->
water	65:26	0:0	4	w
arg	65:29	65:33	3	s->h
water	65:29	0:0	4	s
op	65:30	0:0	4	->
water	65:32	0:0	4	h
arg	66:11	66:26	3	s->yuv_color[Y]
water	66:11	0:0	4	s
op	66:12	0:0	4	->
water	66:14	0:0	4	yuv_color
op	66:23	0:0	4	[
water	66:24	0:0	4	Y
op	66:25	0:0	4	]
arg	66:28	66:43	3	s->yuv_color[U]
water	66:28	0:0	4	s
op	66:29	0:0	4	->
water	66:31	0:0	4	yuv_color
op	66:40	0:0	4	[
water	66:41	0:0	4	U
op	66:42	0:0	4	]
arg	66:45	66:60	3	s->yuv_color[V]
water	66:45	0:0	4	s
op	66:46	0:0	4	->
water	66:48	0:0	4	yuv_color
op	66:57	0:0	4	[
water	66:58	0:0	4	V
op	66:59	0:0	4	]
arg	66:62	66:77	3	s->yuv_color[A]
water	66:62	0:0	4	s
op	66:63	0:0	4	->
water	66:65	0:0	4	yuv_color
op	66:74	0:0	4	[
water	66:75	0:0	4	A
op	66:76	0:0	4	]
water	66:78	0:0	2	;
return	67:4	67:12	2	0
water	67:11	0:0	3	0
label	68:0	68:4	2	fail :
call	69:4	71:15	2	av_log
arg	69:11	69:14	3	ctx
water	69:11	0:0	4	ctx
arg	69:16	69:28	3	AV_LOG_ERROR
water	69:16	0:0	4	AV_LOG_ERROR
arg	70:11	70:57	3	"Error when evaluating the expression '%s'.\n"
water	70:11	0:0	4	"Error when evaluating the expression '%s'.\n"
arg	71:11	71:15	3	expr
water	71:11	0:0	4	expr
water	71:16	0:0	2	;
return	72:4	72:14	2	ret
water	72:11	0:0	3	ret

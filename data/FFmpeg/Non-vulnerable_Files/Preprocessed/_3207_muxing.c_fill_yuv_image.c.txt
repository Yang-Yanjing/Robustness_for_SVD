func	1:0	24:0	0	static void	fill_yuv_image
params	1:26	0:0	1	
param	1:27	1:40	2	AVFrame *	pict
param	1:42	1:57	2	int	frame_index
param	2:27	2:36	2	int	width
param	2:38	2:48	2	int	height
stmnts	0:0	23:4	1	
decl	4:4	4:20	2	int	x
water	4:9	0:0	2	,
decl	4:4	4:20	2	int	y
water	4:12	0:0	2	,
decl	4:4	4:20	2	int	i
water	4:15	0:0	2	,
decl	4:4	4:20	2	int	ret
water	9:4	0:0	2	ret
op	9:8	0:0	2	=
call	9:10	9:37	2	av_frame_make_writable
arg	9:33	9:37	3	pict
water	9:33	0:0	4	pict
water	9:38	0:0	2	;
if	10:4	11:15	2	(ret < 0)
cond	10:8	10:14	3	ret < 0
water	10:8	0:0	4	ret
op	10:12	0:0	4	<
water	10:14	0:0	4	0
stmts	11:8	11:15	3	
call	11:8	11:14	4	exit
arg	11:13	11:14	5	1
water	11:13	0:0	6	1
water	11:15	0:0	4	;
water	12:4	0:0	2	i
op	12:6	0:0	2	=
water	12:8	0:0	2	frame_index
water	12:19	0:0	2	;
for	14:4	16:68	2	(y = 0 ;y < height;y ++)
forinit	14:9	14:14	3	y = 0 ;
water	14:9	0:0	4	y
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	y < height
water	14:16	0:0	4	y
op	14:18	0:0	4	<
water	14:20	0:0	4	height
forexpr	14:28	14:29	3	y ++
water	14:28	0:0	4	y
op	14:29	0:0	4	++
stmts	15:8	16:68	3	
for	15:8	16:68	4	(x = 0 ;x < width;x ++)
forinit	15:13	15:18	5	x = 0 ;
water	15:13	0:0	6	x
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:24	5	x < width
water	15:20	0:0	6	x
op	15:22	0:0	6	<
water	15:24	0:0	6	width
forexpr	15:31	15:32	5	x ++
water	15:31	0:0	6	x
op	15:32	0:0	6	++
stmts	16:12	16:68	5	
water	16:12	0:0	6	pict
op	16:16	0:0	6	->
water	16:18	0:0	6	data
op	16:22	0:0	6	[
water	16:23	0:0	6	0
op	16:24	0:0	6	]
op	16:25	0:0	6	[
water	16:26	0:0	6	y
op	16:28	0:0	6	*
water	16:30	0:0	6	pict
op	16:34	0:0	6	->
water	16:36	0:0	6	linesize
op	16:44	0:0	6	[
water	16:45	0:0	6	0
op	16:46	0:0	6	]
op	16:48	0:0	6	+
water	16:50	0:0	6	x
op	16:51	0:0	6	]
op	16:53	0:0	6	=
water	16:55	0:0	6	x
op	16:57	0:0	6	+
water	16:59	0:0	6	y
op	16:61	0:0	6	+
water	16:63	0:0	6	i
op	16:65	0:0	6	*
water	16:67	0:0	6	3
water	16:68	0:0	6	;
for	18:4	23:4	2	(y = 0 ;y < height / 2;y ++)
forinit	18:9	18:14	3	y = 0 ;
water	18:9	0:0	4	y
op	18:11	0:0	4	=
water	18:13	0:0	4	0
water	18:14	0:0	4	;
cond	18:16	18:29	3	y < height / 2
water	18:16	0:0	4	y
op	18:18	0:0	4	<
water	18:20	0:0	4	height
op	18:27	0:0	4	/
water	18:29	0:0	4	2
forexpr	18:32	18:33	3	y ++
water	18:32	0:0	4	y
op	18:33	0:0	4	++
stmts	18:37	23:4	3	
water	18:37	0:0	4	{
for	19:8	22:8	4	(x = 0 ;x < width / 2;x ++)
forinit	19:13	19:18	5	x = 0 ;
water	19:13	0:0	6	x
op	19:15	0:0	6	=
water	19:17	0:0	6	0
water	19:18	0:0	6	;
cond	19:20	19:32	5	x < width / 2
water	19:20	0:0	6	x
op	19:22	0:0	6	<
water	19:24	0:0	6	width
op	19:30	0:0	6	/
water	19:32	0:0	6	2
forexpr	19:35	19:36	5	x ++
water	19:35	0:0	6	x
op	19:36	0:0	6	++
stmts	19:40	22:8	5	
water	19:40	0:0	6	{
water	20:12	0:0	6	pict
op	20:16	0:0	6	->
water	20:18	0:0	6	data
op	20:22	0:0	6	[
water	20:23	0:0	6	1
op	20:24	0:0	6	]
op	20:25	0:0	6	[
water	20:26	0:0	6	y
op	20:28	0:0	6	*
water	20:30	0:0	6	pict
op	20:34	0:0	6	->
water	20:36	0:0	6	linesize
op	20:44	0:0	6	[
water	20:45	0:0	6	1
op	20:46	0:0	6	]
op	20:48	0:0	6	+
water	20:50	0:0	6	x
op	20:51	0:0	6	]
op	20:53	0:0	6	=
water	20:55	0:0	6	128
op	20:59	0:0	6	+
water	20:61	0:0	6	y
op	20:63	0:0	6	+
water	20:65	0:0	6	i
op	20:67	0:0	6	*
water	20:69	0:0	6	2
water	20:70	0:0	6	;
water	21:12	0:0	6	pict
op	21:16	0:0	6	->
water	21:18	0:0	6	data
op	21:22	0:0	6	[
water	21:23	0:0	6	2
op	21:24	0:0	6	]
op	21:25	0:0	6	[
water	21:26	0:0	6	y
op	21:28	0:0	6	*
water	21:30	0:0	6	pict
op	21:34	0:0	6	->
water	21:36	0:0	6	linesize
op	21:44	0:0	6	[
water	21:45	0:0	6	2
op	21:46	0:0	6	]
op	21:48	0:0	6	+
water	21:50	0:0	6	x
op	21:51	0:0	6	]
op	21:53	0:0	6	=
water	21:55	0:0	6	64
op	21:58	0:0	6	+
water	21:60	0:0	6	x
op	21:62	0:0	6	+
water	21:64	0:0	6	i
op	21:66	0:0	6	*
water	21:68	0:0	6	5
water	21:69	0:0	6	;
water	22:8	0:0	6	}
water	23:4	0:0	4	}

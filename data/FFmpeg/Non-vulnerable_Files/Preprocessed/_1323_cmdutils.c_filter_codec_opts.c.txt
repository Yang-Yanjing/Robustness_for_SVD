func	1:0	50:0	0	AVDictionary *	filter_codec_opts
params	1:31	0:0	1	
param	1:32	1:50	2	AVDictionary *	opts
param	1:52	1:75	2	enum AVCodecID	codec_id
param	2:32	2:50	2	AVFormatContext *	s
param	2:52	2:64	2	AVStream *	st
param	2:66	2:80	2	AVCodec *	codec
stmnts	0:0	49:14	1	
decl	4:4	4:31	2	AVDictionary	*ret
op	4:25	0:0	2	=
water	4:27	0:0	2	NULL
decl	5:4	5:31	2	AVDictionaryEntry	*t
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:4	7:66	2	int	flags
op	6:25	0:0	2	=
water	6:27	0:0	2	s
op	6:28	0:0	2	->
water	6:30	0:0	2	oformat
water	6:38	0:0	2	?
water	6:40	0:0	2	AV_OPT_FLAG_ENCODING_PARAM
water	7:38	0:0	2	:
water	7:40	0:0	2	AV_OPT_FLAG_DECODING_PARAM
decl	8:4	8:28	2	char	prefix
op	8:25	0:0	2	=
water	8:27	0:0	2	0
decl	9:4	9:46	2	const AVClass	*cc
op	9:25	0:0	2	=
call	9:27	9:45	3	avcodec_get_class
if	10:4	12:70	2	(! codec)
cond	10:8	10:9	3	! codec
op	10:8	0:0	4	!
water	10:9	0:0	4	codec
stmts	11:8	12:70	3	
water	11:8	0:0	4	codec
op	11:25	0:0	4	=
water	11:27	0:0	4	s
op	11:28	0:0	4	->
water	11:30	0:0	4	oformat
water	11:38	0:0	4	?
call	11:40	11:69	4	avcodec_find_encoder
arg	11:61	11:69	5	codec_id
water	11:61	0:0	6	codec_id
water	12:38	0:0	4	:
call	12:40	12:69	4	avcodec_find_decoder
arg	12:61	12:69	5	codec_id
water	12:61	0:0	6	codec_id
water	12:70	0:0	4	;
switch	13:4	26:4	2	(st -> codecpar -> codec_type)
cond	13:12	13:26	3	st -> codecpar -> codec_type
water	13:12	0:0	4	st
op	13:14	0:0	4	->
water	13:16	0:0	4	codecpar
op	13:24	0:0	4	->
water	13:26	0:0	4	codec_type
stmts	13:38	26:4	3	
water	13:38	0:0	4	{
label	14:4	14:27	4	case AVMEDIA_TYPE_VIDEO :
water	15:8	0:0	4	prefix
op	15:16	0:0	4	=
water	15:18	0:0	4	'v'
water	15:21	0:0	4	;
water	16:8	0:0	4	flags
op	16:15	0:0	4	|=
water	16:18	0:0	4	AV_OPT_FLAG_VIDEO_PARAM
water	16:41	0:0	4	;
break	17:8	17:13	4	
label	18:4	18:27	4	case AVMEDIA_TYPE_AUDIO :
water	19:8	0:0	4	prefix
op	19:16	0:0	4	=
water	19:18	0:0	4	'a'
water	19:21	0:0	4	;
water	20:8	0:0	4	flags
op	20:15	0:0	4	|=
water	20:18	0:0	4	AV_OPT_FLAG_AUDIO_PARAM
water	20:41	0:0	4	;
break	21:8	21:13	4	
label	22:4	22:30	4	case AVMEDIA_TYPE_SUBTITLE :
water	23:8	0:0	4	prefix
op	23:16	0:0	4	=
water	23:18	0:0	4	's'
water	23:21	0:0	4	;
water	24:8	0:0	4	flags
op	24:15	0:0	4	|=
water	24:18	0:0	4	AV_OPT_FLAG_SUBTITLE_PARAM
water	24:44	0:0	4	;
break	25:8	25:13	4	
water	26:4	0:0	4	}
while	27:4	48:4	2	(t =av_dict_get (opts ,"" ,t ,AV_DICT_IGNORE_SUFFIX ))
cond	27:11	27:61	3	t =av_dict_get (opts ,"" ,t ,AV_DICT_IGNORE_SUFFIX )
water	27:11	0:0	4	t
op	27:13	0:0	4	=
call	27:15	27:61	4	av_dict_get
arg	27:27	27:31	5	opts
water	27:27	0:0	6	opts
arg	27:33	27:35	5	""
water	27:33	0:0	6	""
arg	27:37	27:38	5	t
water	27:37	0:0	6	t
arg	27:40	27:61	5	AV_DICT_IGNORE_SUFFIX
water	27:40	0:0	6	AV_DICT_IGNORE_SUFFIX
stmts	27:64	48:4	3	
water	27:64	0:0	4	{
decl	28:8	28:37	4	char	*p
op	28:16	0:0	4	=
call	28:18	28:36	5	strchr
arg	28:25	28:31	6	t->key
water	28:25	0:0	7	t
op	28:26	0:0	7	->
water	28:28	0:0	7	key
arg	28:33	28:36	6	':'
water	28:33	0:0	7	':'
if	30:8	35:12	4	(p)
cond	30:12	30:12	5	p
water	30:12	0:0	6	p
stmts	31:12	35:12	5	
switch	31:12	35:12	6	(check_stream_specifier (s ,st ,p + 1 ))
cond	31:20	31:55	7	check_stream_specifier (s ,st ,p + 1 )
call	31:20	31:55	8	check_stream_specifier
arg	31:43	31:44	9	s
water	31:43	0:0	10	s
arg	31:46	31:48	9	st
water	31:46	0:0	10	st
arg	31:50	31:55	9	p+1
water	31:50	0:0	10	p
op	31:52	0:0	10	+
water	31:54	0:0	10	1
stmts	31:58	35:12	7	
water	31:58	0:0	8	{
label	32:12	32:19	8	case 1 :
op	32:21	0:0	8	*
water	32:22	0:0	8	p
op	32:24	0:0	8	=
water	32:26	0:0	8	0
water	32:27	0:0	8	;
break	32:29	32:34	8	
label	33:12	33:19	8	case 0 :
continue	33:29	33:37	8	
label	34:12	34:19	8	default :
call	34:29	34:43	8	exit_program
arg	34:42	34:43	9	1
water	34:42	0:0	10	1
water	34:44	0:0	8	;
water	35:12	0:0	8	}
if	36:8	41:50	4	(av_opt_find (& cc ,t -> key ,NULL ,flags ,AV_OPT_SEARCH_FAKE_OBJ ) || ! codec || ( codec -> priv_class &&av_opt_find (& codec -> priv_class ,t -> key ,NULL ,flags ,AV_OPT_SEARCH_FAKE_OBJ ) ))
cond	36:12	40:48	5	av_opt_find (& cc ,t -> key ,NULL ,flags ,AV_OPT_SEARCH_FAKE_OBJ ) || ! codec || ( codec -> priv_class &&av_opt_find (& codec -> priv_class ,t -> key ,NULL ,flags ,AV_OPT_SEARCH_FAKE_OBJ ) )
call	36:12	36:72	6	av_opt_find
arg	36:24	36:27	7	&cc
op	36:24	0:0	8	&
water	36:25	0:0	8	cc
arg	36:29	36:35	7	t->key
water	36:29	0:0	8	t
op	36:30	0:0	8	->
water	36:32	0:0	8	key
arg	36:37	36:41	7	NULL
water	36:37	0:0	8	NULL
arg	36:43	36:48	7	flags
water	36:43	0:0	8	flags
arg	36:50	36:72	7	AV_OPT_SEARCH_FAKE_OBJ
water	36:50	0:0	8	AV_OPT_SEARCH_FAKE_OBJ
op	36:74	0:0	6	||
op	37:12	0:0	6	!
water	37:13	0:0	6	codec
op	37:19	0:0	6	||
water	38:12	0:0	6	(
water	38:13	0:0	6	codec
op	38:18	0:0	6	->
water	38:20	0:0	6	priv_class
op	38:31	0:0	6	&&
call	39:13	40:47	6	av_opt_find
arg	39:25	39:43	7	&codec->priv_class
op	39:25	0:0	8	&
water	39:26	0:0	8	codec
op	39:31	0:0	8	->
water	39:33	0:0	8	priv_class
arg	39:45	39:51	7	t->key
water	39:45	0:0	8	t
op	39:46	0:0	8	->
water	39:48	0:0	8	key
arg	39:53	39:57	7	NULL
water	39:53	0:0	8	NULL
arg	39:59	39:64	7	flags
water	39:59	0:0	8	flags
arg	40:25	40:47	7	AV_OPT_SEARCH_FAKE_OBJ
water	40:25	0:0	8	AV_OPT_SEARCH_FAKE_OBJ
water	40:48	0:0	6	)
stmts	41:12	41:50	5	
call	41:12	41:49	6	av_dict_set
arg	41:24	41:28	7	&ret
op	41:24	0:0	8	&
water	41:25	0:0	8	ret
arg	41:30	41:36	7	t->key
water	41:30	0:0	8	t
op	41:31	0:0	8	->
water	41:33	0:0	8	key
arg	41:38	41:46	7	t->value
water	41:38	0:0	8	t
op	41:39	0:0	8	->
water	41:41	0:0	8	value
arg	41:48	41:49	7	0
water	41:48	0:0	8	0
water	41:50	0:0	6	;
else	42:8	45:54	4
stmts	42:13	45:54	5	
if	42:13	45:54	6	(t -> key [ 0 ] == prefix &&av_opt_find (& cc ,t -> key + 1 ,NULL ,flags ,AV_OPT_SEARCH_FAKE_OBJ ))
cond	42:17	44:51	7	t -> key [ 0 ] == prefix &&av_opt_find (& cc ,t -> key + 1 ,NULL ,flags ,AV_OPT_SEARCH_FAKE_OBJ )
water	42:17	0:0	8	t
op	42:18	0:0	8	->
water	42:20	0:0	8	key
op	42:23	0:0	8	[
water	42:24	0:0	8	0
op	42:25	0:0	8	]
op	42:27	0:0	8	==
water	42:30	0:0	8	prefix
op	42:37	0:0	8	&&
call	43:17	44:51	8	av_opt_find
arg	43:29	43:32	9	&cc
op	43:29	0:0	10	&
water	43:30	0:0	10	cc
arg	43:34	43:44	9	t->key+1
water	43:34	0:0	10	t
op	43:35	0:0	10	->
water	43:37	0:0	10	key
op	43:41	0:0	10	+
water	43:43	0:0	10	1
arg	43:46	43:50	9	NULL
water	43:46	0:0	10	NULL
arg	43:52	43:57	9	flags
water	43:52	0:0	10	flags
arg	44:29	44:51	9	AV_OPT_SEARCH_FAKE_OBJ
water	44:29	0:0	10	AV_OPT_SEARCH_FAKE_OBJ
stmts	45:12	45:54	7	
call	45:12	45:53	8	av_dict_set
arg	45:24	45:28	9	&ret
op	45:24	0:0	10	&
water	45:25	0:0	10	ret
arg	45:30	45:40	9	t->key+1
water	45:30	0:0	10	t
op	45:31	0:0	10	->
water	45:33	0:0	10	key
op	45:37	0:0	10	+
water	45:39	0:0	10	1
arg	45:42	45:50	9	t->value
water	45:42	0:0	10	t
op	45:43	0:0	10	->
water	45:45	0:0	10	value
arg	45:52	45:53	9	0
water	45:52	0:0	10	0
water	45:54	0:0	8	;
if	46:8	47:20	4	(p)
cond	46:12	46:12	5	p
water	46:12	0:0	6	p
stmts	47:12	47:20	5	
op	47:12	0:0	6	*
water	47:13	0:0	6	p
op	47:15	0:0	6	=
water	47:17	0:0	6	':'
water	47:20	0:0	6	;
water	48:4	0:0	4	}
return	49:4	49:14	2	ret
water	49:11	0:0	3	ret

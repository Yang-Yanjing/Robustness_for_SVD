func	1:0	69:0	0	static int	aac_adtstoasc_filter
params	1:31	0:0	1	
param	1:32	1:62	2	AVBitStreamFilterContext *	bsfc
param	2:32	2:53	2	AVCodecContext *	avctx
param	2:55	2:71	2	const char *	args
param	3:32	3:50	2	uint8_t * *	poutbuf
param	3:52	3:69	2	int *	poutbuf_size
param	4:32	4:50	2	const uint8_t *	buf
param	4:52	4:69	2	int	buf_size
param	5:32	5:44	2	int	keyframe
stmnts	0:0	68:12	1	
decl	7:4	7:20	2	GetBitContext	gb
decl	8:4	8:20	2	PutBitContext	pb
decl	9:4	9:25	2	AACADTSHeaderInfo	hdr
decl	10:4	10:40	2	AACBSFContext	*ctx
op	10:23	0:0	2	=
water	10:25	0:0	2	bsfc
op	10:29	0:0	2	->
water	10:31	0:0	2	priv_data
call	11:4	11:50	2	init_get_bits
arg	11:18	11:21	3	&gb
op	11:18	0:0	4	&
water	11:19	0:0	4	gb
arg	11:23	11:26	3	buf
water	11:23	0:0	4	buf
arg	11:28	11:50	3	AAC_ADTS_HEADER_SIZE*8
water	11:28	0:0	4	AAC_ADTS_HEADER_SIZE
op	11:48	0:0	4	*
water	11:49	0:0	4	8
water	11:51	0:0	2	;
op	12:4	0:0	2	*
water	12:5	0:0	2	poutbuf
op	12:13	0:0	2	=
water	12:15	0:0	2	(
water	12:16	0:0	2	uint8_t
op	12:23	0:0	2	*
water	12:24	0:0	2	)
water	12:26	0:0	2	buf
water	12:29	0:0	2	;
op	13:4	0:0	2	*
water	13:5	0:0	2	poutbuf_size
op	13:18	0:0	2	=
water	13:20	0:0	2	buf_size
water	13:28	0:0	2	;
if	14:4	16:20	2	(avctx -> extradata)
cond	14:8	14:15	3	avctx -> extradata
water	14:8	0:0	4	avctx
op	14:13	0:0	4	->
water	14:15	0:0	4	extradata
stmts	15:8	16:20	3	
if	15:8	16:20	4	(show_bits (& gb ,12 ) != 0 xfff)
cond	15:12	15:35	5	show_bits (& gb ,12 ) != 0 xfff
call	15:12	15:29	6	show_bits
arg	15:22	15:25	7	&gb
op	15:22	0:0	8	&
water	15:23	0:0	8	gb
arg	15:27	15:29	7	12
water	15:27	0:0	8	12
op	15:31	0:0	6	!=
water	15:34	0:0	6	0
water	15:35	0:0	6	xfff
stmts	16:12	16:20	5	
return	16:12	16:20	6	0
water	16:19	0:0	7	0
if	17:4	20:4	2	(avpriv_aac_parse_header (& gb ,& hdr ) < 0)
cond	17:8	17:45	3	avpriv_aac_parse_header (& gb ,& hdr ) < 0
call	17:8	17:41	4	avpriv_aac_parse_header
arg	17:32	17:35	5	&gb
op	17:32	0:0	6	&
water	17:33	0:0	6	gb
arg	17:37	17:41	5	&hdr
op	17:37	0:0	6	&
water	17:38	0:0	6	hdr
op	17:43	0:0	4	<
water	17:45	0:0	4	0
stmts	17:48	20:4	3	
water	17:48	0:0	4	{
call	18:8	18:72	4	av_log
arg	18:15	18:20	5	avctx
water	18:15	0:0	6	avctx
arg	18:22	18:34	5	AV_LOG_ERROR
water	18:22	0:0	6	AV_LOG_ERROR
arg	18:36	18:72	5	"Error parsing ADTS frame header!\n"
water	18:36	0:0	6	"Error parsing ADTS frame header!\n"
water	18:73	0:0	4	;
return	19:8	19:34	4	AVERROR_INVALIDDATA
water	19:15	0:0	5	AVERROR_INVALIDDATA
water	20:4	0:0	4	}
if	21:4	25:4	2	(! hdr . crc_absent && hdr . num_aac_frames > 1)
cond	21:8	21:48	3	! hdr . crc_absent && hdr . num_aac_frames > 1
op	21:8	0:0	4	!
water	21:9	0:0	4	hdr
op	21:12	0:0	4	.
water	21:13	0:0	4	crc_absent
op	21:24	0:0	4	&&
water	21:27	0:0	4	hdr
op	21:30	0:0	4	.
water	21:31	0:0	4	num_aac_frames
op	21:46	0:0	4	>
water	21:48	0:0	4	1
stmts	21:51	25:4	3	
water	21:51	0:0	4	{
call	22:8	23:72	4	avpriv_report_missing_feature
arg	22:38	22:43	5	avctx
water	22:38	0:0	6	avctx
arg	23:38	23:72	5	"Multiple RDBs per frame with CRC"
water	23:38	0:0	6	"Multiple RDBs per frame with CRC"
water	23:73	0:0	4	;
return	24:8	24:35	4	AVERROR_PATCHWELCOME
water	24:15	0:0	5	AVERROR_PATCHWELCOME
water	25:4	0:0	4	}
water	26:4	0:0	2	buf
op	26:13	0:0	2	+=
water	26:16	0:0	2	AAC_ADTS_HEADER_SIZE
op	26:37	0:0	2	+
water	26:39	0:0	2	2
op	26:40	0:0	2	*
op	26:41	0:0	2	!
water	26:42	0:0	2	hdr
op	26:45	0:0	2	.
water	26:46	0:0	2	crc_absent
water	26:56	0:0	2	;
water	27:4	0:0	2	buf_size
op	27:13	0:0	2	-=
water	27:16	0:0	2	AAC_ADTS_HEADER_SIZE
op	27:37	0:0	2	+
water	27:39	0:0	2	2
op	27:40	0:0	2	*
op	27:41	0:0	2	!
water	27:42	0:0	2	hdr
op	27:45	0:0	2	.
water	27:46	0:0	2	crc_absent
water	27:56	0:0	2	;
if	28:4	65:4	2	(! ctx -> first_frame_done)
cond	28:8	28:14	3	! ctx -> first_frame_done
op	28:8	0:0	4	!
water	28:9	0:0	4	ctx
op	28:12	0:0	4	->
water	28:14	0:0	4	first_frame_done
stmts	28:32	65:4	3	
water	28:32	0:0	4	{
decl	29:8	29:35	4	int	pce_size
op	29:32	0:0	4	=
water	29:34	0:0	4	0
decl	30:8	30:45	4	uint8_t	pce_data[MAX_PCE_SIZE]
if	31:8	45:8	4	(! hdr . chan_config)
cond	31:12	31:17	5	! hdr . chan_config
op	31:12	0:0	6	!
water	31:13	0:0	6	hdr
op	31:16	0:0	6	.
water	31:17	0:0	6	chan_config
stmts	31:30	45:8	5	
water	31:30	0:0	6	{
call	32:12	32:48	6	init_get_bits
arg	32:26	32:29	7	&gb
op	32:26	0:0	8	&
water	32:27	0:0	8	gb
arg	32:31	32:34	7	buf
water	32:31	0:0	8	buf
arg	32:36	32:48	7	buf_size*8
water	32:36	0:0	8	buf_size
op	32:45	0:0	8	*
water	32:47	0:0	8	8
water	32:49	0:0	6	;
if	33:12	39:12	6	(get_bits (& gb ,3 ) != 5)
cond	33:16	33:36	7	get_bits (& gb ,3 ) != 5
call	33:16	33:31	8	get_bits
arg	33:25	33:28	9	&gb
op	33:25	0:0	10	&
water	33:26	0:0	10	gb
arg	33:30	33:31	9	3
water	33:30	0:0	10	3
op	33:33	0:0	8	!=
water	33:36	0:0	8	5
stmts	33:39	39:12	7	
water	33:39	0:0	8	{
call	34:16	37:55	8	avpriv_report_missing_feature
arg	34:46	34:51	9	avctx
water	34:46	0:0	10	avctx
arg	35:46	37:55	9	"PCE-based channel configuration ""without PCE as first syntax ""element"
water	35:46	0:0	10	"PCE-based channel configuration "
water	36:46	0:0	10	"without PCE as first syntax "
water	37:46	0:0	10	"element"
water	37:56	0:0	8	;
return	38:16	38:43	8	AVERROR_PATCHWELCOME
water	38:23	0:0	9	AVERROR_PATCHWELCOME
water	39:12	0:0	8	}
call	40:12	40:53	6	init_put_bits
arg	40:26	40:29	7	&pb
op	40:26	0:0	8	&
water	40:27	0:0	8	pb
arg	40:31	40:39	7	pce_data
water	40:31	0:0	8	pce_data
arg	40:41	40:53	7	MAX_PCE_SIZE
water	40:41	0:0	8	MAX_PCE_SIZE
water	40:54	0:0	6	;
water	41:12	0:0	6	pce_size
op	41:21	0:0	6	=
call	41:23	41:52	6	avpriv_copy_pce_data
arg	41:44	41:47	7	&pb
op	41:44	0:0	8	&
water	41:45	0:0	8	pb
arg	41:49	41:52	7	&gb
op	41:49	0:0	8	&
water	41:50	0:0	8	gb
op	41:53	0:0	6	/
water	41:54	0:0	6	8
water	41:55	0:0	6	;
call	42:12	42:30	6	flush_put_bits
arg	42:27	42:30	7	&pb
op	42:27	0:0	8	&
water	42:28	0:0	8	pb
water	42:31	0:0	6	;
water	43:12	0:0	6	buf_size
op	43:21	0:0	6	-=
call	43:24	43:42	6	get_bits_count
arg	43:39	43:42	7	&gb
op	43:39	0:0	8	&
water	43:40	0:0	8	gb
op	43:43	0:0	6	/
water	43:44	0:0	6	8
water	43:45	0:0	6	;
water	44:12	0:0	6	buf
op	44:21	0:0	6	+=
call	44:24	44:42	6	get_bits_count
arg	44:39	44:42	7	&gb
op	44:39	0:0	8	&
water	44:40	0:0	8	gb
op	44:43	0:0	6	/
water	44:44	0:0	6	8
water	44:45	0:0	6	;
water	45:8	0:0	6	}
call	46:8	46:32	4	av_free
arg	46:16	46:32	5	avctx->extradata
water	46:16	0:0	6	avctx
op	46:21	0:0	6	->
water	46:23	0:0	6	extradata
water	46:33	0:0	4	;
water	47:8	0:0	4	avctx
op	47:13	0:0	4	->
water	47:15	0:0	4	extradata_size
op	47:30	0:0	4	=
water	47:32	0:0	4	2
op	47:34	0:0	4	+
water	47:36	0:0	4	pce_size
water	47:44	0:0	4	;
water	48:8	0:0	4	avctx
op	48:13	0:0	4	->
water	48:15	0:0	4	extradata
op	48:25	0:0	4	=
call	48:27	48:90	4	av_mallocz
arg	48:38	48:90	5	avctx->extradata_size+AV_INPUT_BUFFER_PADDING_SIZE
water	48:38	0:0	6	avctx
op	48:43	0:0	6	->
water	48:45	0:0	6	extradata_size
op	48:60	0:0	6	+
water	48:62	0:0	6	AV_INPUT_BUFFER_PADDING_SIZE
water	48:91	0:0	4	;
if	49:8	52:8	4	(! avctx -> extradata)
cond	49:12	49:20	5	! avctx -> extradata
op	49:12	0:0	6	!
water	49:13	0:0	6	avctx
op	49:18	0:0	6	->
water	49:20	0:0	6	extradata
stmts	49:31	52:8	5	
water	49:31	0:0	6	{
water	50:12	0:0	6	avctx
op	50:17	0:0	6	->
water	50:19	0:0	6	extradata_size
op	50:34	0:0	6	=
water	50:36	0:0	6	0
water	50:37	0:0	6	;
return	51:12	51:34	6	AVERROR(ENOMEM)
call	51:19	51:33	7	AVERROR
arg	51:27	51:33	8	ENOMEM
water	51:27	0:0	9	ENOMEM
water	52:8	0:0	6	}
call	53:8	53:66	4	init_put_bits
arg	53:22	53:25	5	&pb
op	53:22	0:0	6	&
water	53:23	0:0	6	pb
arg	53:27	53:43	5	avctx->extradata
water	53:27	0:0	6	avctx
op	53:32	0:0	6	->
water	53:34	0:0	6	extradata
arg	53:45	53:66	5	avctx->extradata_size
water	53:45	0:0	6	avctx
op	53:50	0:0	6	->
water	53:52	0:0	6	extradata_size
water	53:67	0:0	4	;
call	54:8	54:40	4	put_bits
arg	54:17	54:20	5	&pb
op	54:17	0:0	6	&
water	54:18	0:0	6	pb
arg	54:22	54:23	5	5
water	54:22	0:0	6	5
arg	54:25	54:40	5	hdr.object_type
water	54:25	0:0	6	hdr
op	54:28	0:0	6	.
water	54:29	0:0	6	object_type
water	54:41	0:0	4	;
call	55:8	55:43	4	put_bits
arg	55:17	55:20	5	&pb
op	55:17	0:0	6	&
water	55:18	0:0	6	pb
arg	55:22	55:23	5	4
water	55:22	0:0	6	4
arg	55:25	55:43	5	hdr.sampling_index
water	55:25	0:0	6	hdr
op	55:28	0:0	6	.
water	55:29	0:0	6	sampling_index
water	55:44	0:0	4	;
call	56:8	56:40	4	put_bits
arg	56:17	56:20	5	&pb
op	56:17	0:0	6	&
water	56:18	0:0	6	pb
arg	56:22	56:23	5	4
water	56:22	0:0	6	4
arg	56:25	56:40	5	hdr.chan_config
water	56:25	0:0	6	hdr
op	56:28	0:0	6	.
water	56:29	0:0	6	chan_config
water	56:41	0:0	4	;
call	57:8	57:26	4	put_bits
arg	57:17	57:20	5	&pb
op	57:17	0:0	6	&
water	57:18	0:0	6	pb
arg	57:22	57:23	5	1
water	57:22	0:0	6	1
arg	57:25	57:26	5	0
water	57:25	0:0	6	0
water	57:27	0:0	4	;
call	58:8	58:26	4	put_bits
arg	58:17	58:20	5	&pb
op	58:17	0:0	6	&
water	58:18	0:0	6	pb
arg	58:22	58:23	5	1
water	58:22	0:0	6	1
arg	58:25	58:26	5	0
water	58:25	0:0	6	0
water	58:27	0:0	4	;
call	59:8	59:26	4	put_bits
arg	59:17	59:20	5	&pb
op	59:17	0:0	6	&
water	59:18	0:0	6	pb
arg	59:22	59:23	5	1
water	59:22	0:0	6	1
arg	59:25	59:26	5	0
water	59:25	0:0	6	0
water	59:27	0:0	4	;
call	60:8	60:26	4	flush_put_bits
arg	60:23	60:26	5	&pb
op	60:23	0:0	6	&
water	60:24	0:0	6	pb
water	60:27	0:0	4	;
if	61:8	63:8	4	(pce_size)
cond	61:12	61:12	5	pce_size
water	61:12	0:0	6	pce_size
stmts	61:22	63:8	5	
water	61:22	0:0	6	{
call	62:12	62:59	6	memcpy
arg	62:19	62:39	7	avctx->extradata+2
water	62:19	0:0	8	avctx
op	62:24	0:0	8	->
water	62:26	0:0	8	extradata
op	62:36	0:0	8	+
water	62:38	0:0	8	2
arg	62:41	62:49	7	pce_data
water	62:41	0:0	8	pce_data
arg	62:51	62:59	7	pce_size
water	62:51	0:0	8	pce_size
water	62:60	0:0	6	;
water	63:8	0:0	6	}
water	64:8	0:0	4	ctx
op	64:11	0:0	4	->
water	64:13	0:0	4	first_frame_done
op	64:30	0:0	4	=
water	64:32	0:0	4	1
water	64:33	0:0	4	;
water	65:4	0:0	4	}
op	66:4	0:0	2	*
water	66:5	0:0	2	poutbuf
op	66:13	0:0	2	=
water	66:15	0:0	2	(
water	66:16	0:0	2	uint8_t
op	66:23	0:0	2	*
water	66:24	0:0	2	)
water	66:26	0:0	2	buf
water	66:29	0:0	2	;
op	67:4	0:0	2	*
water	67:5	0:0	2	poutbuf_size
op	67:18	0:0	2	=
water	67:20	0:0	2	buf_size
water	67:28	0:0	2	;
return	68:4	68:12	2	0
water	68:11	0:0	3	0

func	1:0	31:0	0	static void	reanalyze
params	1:21	0:0	1	
param	1:22	1:39	2	MpegTSContext *	ts
stmnts	0:0	30:4	1	
decl	2:4	2:36	2	AVIOContext	*pb
op	2:20	0:0	2	=
water	2:22	0:0	2	ts
op	2:24	0:0	2	->
water	2:26	0:0	2	stream
op	2:32	0:0	2	->
water	2:34	0:0	2	pb
decl	3:4	3:31	2	int64_t	pos
op	3:16	0:0	2	=
call	3:18	3:30	3	avio_tell
arg	3:28	3:30	4	pb
water	3:28	0:0	5	pb
if	4:4	5:14	2	(pos < 0)
cond	4:8	4:14	3	pos < 0
water	4:8	0:0	4	pos
op	4:12	0:0	4	<
water	4:14	0:0	4	0
stmts	5:8	5:14	3	
return	5:8	5:14	4	
water	6:4	0:0	2	pos
op	6:8	0:0	2	-=
water	6:11	0:0	2	ts
op	6:13	0:0	2	->
water	6:15	0:0	2	pos47_full
water	6:25	0:0	2	;
if	7:4	9:4	2	(pos == TS_PACKET_SIZE)
cond	7:8	7:15	3	pos == TS_PACKET_SIZE
water	7:8	0:0	4	pos
op	7:12	0:0	4	==
water	7:15	0:0	4	TS_PACKET_SIZE
stmts	7:31	9:4	3	
water	7:31	0:0	4	{
water	8:8	0:0	4	ts
op	8:10	0:0	4	->
water	8:12	0:0	4	size_stat
op	8:21	0:0	4	[
water	8:22	0:0	4	0
op	8:23	0:0	4	]
op	8:25	0:0	4	++
water	8:27	0:0	4	;
water	9:4	0:0	4	}
else	9:6	11:4	2
stmts	9:11	11:4	3	
if	9:11	11:4	4	(pos == TS_DVHS_PACKET_SIZE)
cond	9:15	9:22	5	pos == TS_DVHS_PACKET_SIZE
water	9:15	0:0	6	pos
op	9:19	0:0	6	==
water	9:22	0:0	6	TS_DVHS_PACKET_SIZE
stmts	9:43	11:4	5	
water	9:43	0:0	6	{
water	10:8	0:0	6	ts
op	10:10	0:0	6	->
water	10:12	0:0	6	size_stat
op	10:21	0:0	6	[
water	10:22	0:0	6	1
op	10:23	0:0	6	]
op	10:25	0:0	6	++
water	10:27	0:0	6	;
water	11:4	0:0	6	}
else	11:6	13:4	2
stmts	11:11	13:4	3	
if	11:11	13:4	4	(pos == TS_FEC_PACKET_SIZE)
cond	11:15	11:22	5	pos == TS_FEC_PACKET_SIZE
water	11:15	0:0	6	pos
op	11:19	0:0	6	==
water	11:22	0:0	6	TS_FEC_PACKET_SIZE
stmts	11:42	13:4	5	
water	11:42	0:0	6	{
water	12:8	0:0	6	ts
op	12:10	0:0	6	->
water	12:12	0:0	6	size_stat
op	12:21	0:0	6	[
water	12:22	0:0	6	2
op	12:23	0:0	6	]
op	12:25	0:0	6	++
water	12:27	0:0	6	;
water	13:4	0:0	6	}
water	14:4	0:0	2	ts
op	14:6	0:0	2	->
water	14:8	0:0	2	size_stat_count
op	14:24	0:0	2	++
water	14:26	0:0	2	;
if	15:4	30:4	2	(ts -> size_stat_count > SIZE_STAT_THRESHOLD)
cond	15:8	15:30	3	ts -> size_stat_count > SIZE_STAT_THRESHOLD
water	15:8	0:0	4	ts
op	15:10	0:0	4	->
water	15:12	0:0	4	size_stat_count
op	15:28	0:0	4	>
water	15:30	0:0	4	SIZE_STAT_THRESHOLD
stmts	15:51	30:4	3	
water	15:51	0:0	4	{
decl	16:8	16:23	4	int	newsize
op	16:20	0:0	4	=
water	16:22	0:0	4	0
if	17:8	19:8	4	(ts -> size_stat [ 0 ] > SIZE_STAT_THRESHOLD)
cond	17:12	17:31	5	ts -> size_stat [ 0 ] > SIZE_STAT_THRESHOLD
water	17:12	0:0	6	ts
op	17:14	0:0	6	->
water	17:16	0:0	6	size_stat
op	17:25	0:0	6	[
water	17:26	0:0	6	0
op	17:27	0:0	6	]
op	17:29	0:0	6	>
water	17:31	0:0	6	SIZE_STAT_THRESHOLD
stmts	17:52	19:8	5	
water	17:52	0:0	6	{
water	18:12	0:0	6	newsize
op	18:20	0:0	6	=
water	18:22	0:0	6	TS_PACKET_SIZE
water	18:36	0:0	6	;
water	19:8	0:0	6	}
else	19:10	21:8	4
stmts	19:15	21:8	5	
if	19:15	21:8	6	(ts -> size_stat [ 1 ] > SIZE_STAT_THRESHOLD)
cond	19:19	19:38	7	ts -> size_stat [ 1 ] > SIZE_STAT_THRESHOLD
water	19:19	0:0	8	ts
op	19:21	0:0	8	->
water	19:23	0:0	8	size_stat
op	19:32	0:0	8	[
water	19:33	0:0	8	1
op	19:34	0:0	8	]
op	19:36	0:0	8	>
water	19:38	0:0	8	SIZE_STAT_THRESHOLD
stmts	19:59	21:8	7	
water	19:59	0:0	8	{
water	20:12	0:0	8	newsize
op	20:20	0:0	8	=
water	20:22	0:0	8	TS_DVHS_PACKET_SIZE
water	20:41	0:0	8	;
water	21:8	0:0	8	}
else	21:10	23:8	4
stmts	21:15	23:8	5	
if	21:15	23:8	6	(ts -> size_stat [ 2 ] > SIZE_STAT_THRESHOLD)
cond	21:19	21:38	7	ts -> size_stat [ 2 ] > SIZE_STAT_THRESHOLD
water	21:19	0:0	8	ts
op	21:21	0:0	8	->
water	21:23	0:0	8	size_stat
op	21:32	0:0	8	[
water	21:33	0:0	8	2
op	21:34	0:0	8	]
op	21:36	0:0	8	>
water	21:38	0:0	8	SIZE_STAT_THRESHOLD
stmts	21:59	23:8	7	
water	21:59	0:0	8	{
water	22:12	0:0	8	newsize
op	22:20	0:0	8	=
water	22:22	0:0	8	TS_FEC_PACKET_SIZE
water	22:40	0:0	8	;
water	23:8	0:0	8	}
if	24:8	27:8	4	(newsize && newsize != ts -> raw_packet_size)
cond	24:12	24:38	5	newsize && newsize != ts -> raw_packet_size
water	24:12	0:0	6	newsize
op	24:20	0:0	6	&&
water	24:23	0:0	6	newsize
op	24:31	0:0	6	!=
water	24:34	0:0	6	ts
op	24:36	0:0	6	->
water	24:38	0:0	6	raw_packet_size
stmts	24:55	27:8	5	
water	24:55	0:0	6	{
call	25:12	25:86	6	av_log
arg	25:19	25:29	7	ts->stream
water	25:19	0:0	8	ts
op	25:21	0:0	8	->
water	25:23	0:0	8	stream
arg	25:31	25:45	7	AV_LOG_WARNING
water	25:31	0:0	8	AV_LOG_WARNING
arg	25:47	25:77	7	"changing packet size to %d\n"
water	25:47	0:0	8	"changing packet size to %d\n"
arg	25:79	25:86	7	newsize
water	25:79	0:0	8	newsize
water	25:87	0:0	6	;
water	26:12	0:0	6	ts
op	26:14	0:0	6	->
water	26:16	0:0	6	raw_packet_size
op	26:32	0:0	6	=
water	26:34	0:0	6	newsize
water	26:41	0:0	6	;
water	27:8	0:0	6	}
water	28:8	0:0	4	ts
op	28:10	0:0	4	->
water	28:12	0:0	4	size_stat_count
op	28:28	0:0	4	=
water	28:30	0:0	4	0
water	28:31	0:0	4	;
call	29:8	29:54	4	memset
arg	29:15	29:28	5	ts->size_stat
water	29:15	0:0	6	ts
op	29:17	0:0	6	->
water	29:19	0:0	6	size_stat
arg	29:30	29:31	5	0
water	29:30	0:0	6	0
arg	29:33	29:54	5	sizeof(ts->size_stat)
op	29:33	0:0	6	sizeof
water	29:39	0:0	6	(
water	29:40	0:0	6	ts
op	29:42	0:0	6	->
water	29:44	0:0	6	size_stat
water	29:53	0:0	6	)
water	29:55	0:0	4	;
water	30:4	0:0	4	}

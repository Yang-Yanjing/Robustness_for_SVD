func	1:0	62:0	0	static int	decode_cce
params	1:21	0:0	1	
param	1:22	1:36	2	AACContext *	ac
param	1:38	1:55	2	GetBitContext *	gb
param	1:57	1:76	2	ChannelElement *	che
stmnts	0:0	61:12	1	
decl	3:4	3:20	2	int	num_gain
op	3:17	0:0	2	=
water	3:19	0:0	2	0
decl	4:4	4:22	2	int	c
water	4:9	0:0	2	,
decl	4:4	4:22	2	int	g
water	4:12	0:0	2	,
decl	4:4	4:22	2	int	sfb
water	4:17	0:0	2	,
decl	4:4	4:22	2	int	ret
decl	5:4	5:12	2	int	sign
decl	6:4	6:18	2	INTFLOAT	scale
decl	7:4	7:43	2	SingleChannelElement	*sce
op	7:30	0:0	2	=
op	7:32	0:0	2	&
water	7:33	0:0	2	che
op	7:36	0:0	2	->
water	7:38	0:0	2	ch
op	7:40	0:0	2	[
water	7:41	0:0	2	0
op	7:42	0:0	2	]
decl	8:4	8:42	2	ChannelCoupling	*coup
op	8:30	0:0	2	=
op	8:32	0:0	2	&
water	8:33	0:0	2	che
op	8:36	0:0	2	->
water	8:38	0:0	2	coup
water	9:4	0:0	2	coup
op	9:8	0:0	2	->
water	9:10	0:0	2	coupling_point
op	9:25	0:0	2	=
water	9:27	0:0	2	2
call	9:29	9:43	2	*get_bits1
arg	9:41	9:43	3	gb
water	9:41	0:0	4	gb
water	9:44	0:0	2	;
water	10:4	0:0	2	coup
op	10:8	0:0	2	->
water	10:10	0:0	2	num_coupled
op	10:22	0:0	2	=
call	10:24	10:38	2	get_bits
arg	10:33	10:35	3	gb
water	10:33	0:0	4	gb
arg	10:37	10:38	3	3
water	10:37	0:0	4	3
water	10:39	0:0	2	;
for	11:4	21:4	2	(c = 0 ;c <= coup -> num_coupled;c ++)
forinit	11:9	11:14	3	c = 0 ;
water	11:9	0:0	4	c
op	11:11	0:0	4	=
water	11:13	0:0	4	0
water	11:14	0:0	4	;
cond	11:16	11:27	3	c <= coup -> num_coupled
water	11:16	0:0	4	c
op	11:18	0:0	4	<=
water	11:21	0:0	4	coup
op	11:25	0:0	4	->
water	11:27	0:0	4	num_coupled
forexpr	11:40	11:41	3	c ++
water	11:40	0:0	4	c
op	11:41	0:0	4	++
stmts	11:45	21:4	3	
water	11:45	0:0	4	{
water	12:8	0:0	4	num_gain
op	12:16	0:0	4	++
water	12:18	0:0	4	;
water	13:8	0:0	4	coup
op	13:12	0:0	4	->
water	13:14	0:0	4	type
op	13:18	0:0	4	[
water	13:19	0:0	4	c
op	13:20	0:0	4	]
op	13:22	0:0	4	=
call	13:24	13:36	4	get_bits1
arg	13:34	13:36	5	gb
water	13:34	0:0	6	gb
water	13:38	0:0	4	?
water	13:40	0:0	4	TYPE_CPE
water	13:49	0:0	4	:
water	13:51	0:0	4	TYPE_SCE
water	13:59	0:0	4	;
water	14:8	0:0	4	coup
op	14:12	0:0	4	->
water	14:14	0:0	4	id_select
op	14:23	0:0	4	[
water	14:24	0:0	4	c
op	14:25	0:0	4	]
op	14:27	0:0	4	=
call	14:29	14:43	4	get_bits
arg	14:38	14:40	5	gb
water	14:38	0:0	6	gb
arg	14:42	14:43	5	4
water	14:42	0:0	6	4
water	14:44	0:0	4	;
if	15:8	19:8	4	(coup -> type [ c ] == TYPE_CPE)
cond	15:12	15:29	5	coup -> type [ c ] == TYPE_CPE
water	15:12	0:0	6	coup
op	15:16	0:0	6	->
water	15:18	0:0	6	type
op	15:22	0:0	6	[
water	15:23	0:0	6	c
op	15:24	0:0	6	]
op	15:26	0:0	6	==
water	15:29	0:0	6	TYPE_CPE
stmts	15:39	19:8	5	
water	15:39	0:0	6	{
water	16:12	0:0	6	coup
op	16:16	0:0	6	->
water	16:18	0:0	6	ch_select
op	16:27	0:0	6	[
water	16:28	0:0	6	c
op	16:29	0:0	6	]
op	16:31	0:0	6	=
call	16:33	16:47	6	get_bits
arg	16:42	16:44	7	gb
water	16:42	0:0	8	gb
arg	16:46	16:47	7	2
water	16:46	0:0	8	2
water	16:48	0:0	6	;
if	17:12	18:26	6	(coup -> ch_select [ c ] == 3)
cond	17:16	17:38	7	coup -> ch_select [ c ] == 3
water	17:16	0:0	8	coup
op	17:20	0:0	8	->
water	17:22	0:0	8	ch_select
op	17:31	0:0	8	[
water	17:32	0:0	8	c
op	17:33	0:0	8	]
op	17:35	0:0	8	==
water	17:38	0:0	8	3
stmts	18:16	18:26	7	
water	18:16	0:0	8	num_gain
op	18:24	0:0	8	++
water	18:26	0:0	8	;
water	19:8	0:0	6	}
else	19:10	20:34	4
stmts	20:12	20:34	5	
water	20:12	0:0	6	coup
op	20:16	0:0	6	->
water	20:18	0:0	6	ch_select
op	20:27	0:0	6	[
water	20:28	0:0	6	c
op	20:29	0:0	6	]
op	20:31	0:0	6	=
water	20:33	0:0	6	2
water	20:34	0:0	6	;
water	21:4	0:0	4	}
water	22:4	0:0	2	coup
op	22:8	0:0	2	->
water	22:10	0:0	2	coupling_point
op	22:25	0:0	2	+=
call	22:28	22:40	2	get_bits1
arg	22:38	22:40	3	gb
water	22:38	0:0	4	gb
op	22:42	0:0	2	||
water	22:45	0:0	2	(
water	22:46	0:0	2	coup
op	22:50	0:0	2	->
water	22:52	0:0	2	coupling_point
op	22:67	0:0	2	>>
water	22:70	0:0	2	1
water	22:71	0:0	2	)
water	22:72	0:0	2	;
water	23:4	0:0	2	sign
op	23:10	0:0	2	=
call	23:12	23:26	2	get_bits
arg	23:21	23:23	3	gb
water	23:21	0:0	4	gb
arg	23:25	23:26	3	1
water	23:25	0:0	4	1
water	23:27	0:0	2	;
water	24:4	0:0	2	scale
op	24:10	0:0	2	=
call	24:12	24:32	2	AAC_RENAME
arg	24:23	24:32	3	cce_scale
water	24:23	0:0	4	cce_scale
op	24:33	0:0	2	[
call	24:34	24:48	2	get_bits
arg	24:43	24:45	3	gb
water	24:43	0:0	4	gb
arg	24:47	24:48	3	2
water	24:47	0:0	4	2
op	24:49	0:0	2	]
water	24:50	0:0	2	;
if	25:4	26:18	2	(( ret =decode_ics (ac ,sce ,gb ,0 ,0 ) ))
cond	25:8	25:44	3	( ret =decode_ics (ac ,sce ,gb ,0 ,0 ) )
water	25:8	0:0	4	(
water	25:9	0:0	4	ret
op	25:13	0:0	4	=
call	25:15	25:43	4	decode_ics
arg	25:26	25:28	5	ac
water	25:26	0:0	6	ac
arg	25:30	25:33	5	sce
water	25:30	0:0	6	sce
arg	25:35	25:37	5	gb
water	25:35	0:0	6	gb
arg	25:39	25:40	5	0
water	25:39	0:0	6	0
arg	25:42	25:43	5	0
water	25:42	0:0	6	0
water	25:44	0:0	4	)
stmts	26:8	26:18	3	
return	26:8	26:18	4	ret
water	26:15	0:0	5	ret
for	27:4	60:4	2	(c = 0 ;c < num_gain;c ++)
forinit	27:9	27:14	3	c = 0 ;
water	27:9	0:0	4	c
op	27:11	0:0	4	=
water	27:13	0:0	4	0
water	27:14	0:0	4	;
cond	27:16	27:20	3	c < num_gain
water	27:16	0:0	4	c
op	27:18	0:0	4	<
water	27:20	0:0	4	num_gain
forexpr	27:30	27:31	3	c ++
water	27:30	0:0	4	c
op	27:31	0:0	4	++
stmts	27:35	60:4	3	
water	27:35	0:0	4	{
decl	28:8	28:20	4	int	idx
op	28:17	0:0	4	=
water	28:19	0:0	4	0
decl	29:8	29:20	4	int	cge
op	29:17	0:0	4	=
water	29:19	0:0	4	1
decl	30:8	30:20	4	int	gain
op	30:17	0:0	4	=
water	30:19	0:0	4	0
decl	31:8	31:40	4	INTFLOAT	gain_cache
op	31:28	0:0	4	=
call	31:30	31:39	5	FIXR10
arg	31:37	31:39	6	1.
water	31:37	0:0	7	1
op	31:38	0:0	7	.
if	32:8	36:8	4	(c)
cond	32:12	32:12	5	c
water	32:12	0:0	6	c
stmts	32:15	36:8	5	
water	32:15	0:0	6	{
water	33:12	0:0	6	cge
op	33:16	0:0	6	=
water	33:18	0:0	6	coup
op	33:22	0:0	6	->
water	33:24	0:0	6	coupling_point
op	33:39	0:0	6	==
water	33:42	0:0	6	AFTER_IMDCT
water	33:54	0:0	6	?
water	33:56	0:0	6	1
water	33:58	0:0	6	:
call	33:60	33:72	6	get_bits1
arg	33:70	33:72	7	gb
water	33:70	0:0	8	gb
water	33:73	0:0	6	;
water	34:12	0:0	6	gain
op	34:17	0:0	6	=
water	34:19	0:0	6	cge
water	34:23	0:0	6	?
call	34:25	34:66	6	get_vlc2
arg	34:34	34:36	7	gb
water	34:34	0:0	8	gb
arg	34:38	34:60	7	vlc_scalefactors.table
water	34:38	0:0	8	vlc_scalefactors
op	34:54	0:0	8	.
water	34:55	0:0	8	table
arg	34:62	34:63	7	7
water	34:62	0:0	8	7
arg	34:65	34:66	7	3
water	34:65	0:0	8	3
op	34:68	0:0	6	-
water	34:70	0:0	6	60
water	34:72	0:0	6	:
water	34:74	0:0	6	0
water	34:75	0:0	6	;
water	35:12	0:0	6	gain_cache
op	35:23	0:0	6	=
call	35:25	35:45	6	GET_GAIN
arg	35:34	35:39	7	scale
water	35:34	0:0	8	scale
arg	35:41	35:45	7	gain
water	35:41	0:0	8	gain
water	35:46	0:0	6	;
water	36:8	0:0	6	}
if	37:8	39:8	4	(coup -> coupling_point == AFTER_IMDCT)
cond	37:12	37:36	5	coup -> coupling_point == AFTER_IMDCT
water	37:12	0:0	6	coup
op	37:16	0:0	6	->
water	37:18	0:0	6	coupling_point
op	37:33	0:0	6	==
water	37:36	0:0	6	AFTER_IMDCT
stmts	37:49	39:8	5	
water	37:49	0:0	6	{
water	38:12	0:0	6	coup
op	38:16	0:0	6	->
water	38:18	0:0	6	gain
op	38:22	0:0	6	[
water	38:23	0:0	6	c
op	38:24	0:0	6	]
op	38:25	0:0	6	[
water	38:26	0:0	6	0
op	38:27	0:0	6	]
op	38:29	0:0	6	=
water	38:31	0:0	6	gain_cache
water	38:41	0:0	6	;
water	39:8	0:0	6	}
else	39:10	59:8	4
stmts	39:15	59:8	5	
water	39:15	0:0	6	{
for	40:12	58:12	6	(g = 0 ;g < sce -> ics . num_window_groups;g ++)
forinit	40:17	40:22	7	g = 0 ;
water	40:17	0:0	8	g
op	40:19	0:0	8	=
water	40:21	0:0	8	0
water	40:22	0:0	8	;
cond	40:24	40:37	7	g < sce -> ics . num_window_groups
water	40:24	0:0	8	g
op	40:26	0:0	8	<
water	40:28	0:0	8	sce
op	40:31	0:0	8	->
water	40:33	0:0	8	ics
op	40:36	0:0	8	.
water	40:37	0:0	8	num_window_groups
forexpr	40:56	40:57	7	g ++
water	40:56	0:0	8	g
op	40:57	0:0	8	++
stmts	40:61	58:12	7	
water	40:61	0:0	8	{
for	41:16	57:16	8	(sfb = 0 ;sfb < sce -> ics . max_sfb;sfb ++ , idx ++)
forinit	41:21	41:28	9	sfb = 0 ;
water	41:21	0:0	10	sfb
op	41:25	0:0	10	=
water	41:27	0:0	10	0
water	41:28	0:0	10	;
cond	41:30	41:45	9	sfb < sce -> ics . max_sfb
water	41:30	0:0	10	sfb
op	41:34	0:0	10	<
water	41:36	0:0	10	sce
op	41:39	0:0	10	->
water	41:41	0:0	10	ics
op	41:44	0:0	10	.
water	41:45	0:0	10	max_sfb
forexpr	41:54	41:64	9	sfb ++ , idx ++
water	41:54	0:0	10	sfb
op	41:57	0:0	10	++
water	41:59	0:0	10	,
water	41:61	0:0	10	idx
op	41:64	0:0	10	++
stmts	41:68	57:16	9	
water	41:68	0:0	10	{
if	42:20	56:20	10	(sce -> band_type [ idx ] != ZERO_BT)
cond	42:24	42:47	11	sce -> band_type [ idx ] != ZERO_BT
water	42:24	0:0	12	sce
op	42:27	0:0	12	->
water	42:29	0:0	12	band_type
op	42:38	0:0	12	[
water	42:39	0:0	12	idx
op	42:42	0:0	12	]
op	42:44	0:0	12	!=
water	42:47	0:0	12	ZERO_BT
stmts	42:56	56:20	11	
water	42:56	0:0	12	{
if	43:24	54:24	12	(! cge)
cond	43:28	43:29	13	! cge
op	43:28	0:0	14	!
water	43:29	0:0	14	cge
stmts	43:34	54:24	13	
water	43:34	0:0	14	{
decl	44:28	44:83	14	int	t
op	44:34	0:0	14	=
call	44:36	44:77	15	get_vlc2
arg	44:45	44:47	16	gb
water	44:45	0:0	17	gb
arg	44:49	44:71	16	vlc_scalefactors.table
water	44:49	0:0	17	vlc_scalefactors
op	44:65	0:0	17	.
water	44:66	0:0	17	table
arg	44:73	44:74	16	7
water	44:73	0:0	17	7
arg	44:76	44:77	16	3
water	44:76	0:0	17	3
op	44:79	0:0	14	-
water	44:81	0:0	14	60
if	45:28	53:28	14	(t)
cond	45:32	45:32	15	t
water	45:32	0:0	16	t
stmts	45:35	53:28	15	
water	45:35	0:0	16	{
decl	46:32	46:41	16	int	s
op	46:38	0:0	16	=
water	46:40	0:0	16	1
water	47:32	0:0	16	t
op	47:34	0:0	16	=
water	47:36	0:0	16	gain
op	47:41	0:0	16	+=
water	47:44	0:0	16	t
water	47:45	0:0	16	;
if	48:32	51:32	16	(sign)
cond	48:36	48:36	17	sign
water	48:36	0:0	18	sign
stmts	48:42	51:32	17	
water	48:42	0:0	18	{
water	49:36	0:0	18	s
op	49:39	0:0	18	-=
water	49:42	0:0	18	2
op	49:44	0:0	18	*
water	49:46	0:0	18	(
water	49:47	0:0	18	t
op	49:49	0:0	18	&
water	49:51	0:0	18	0
water	49:52	0:0	18	x1
water	49:54	0:0	18	)
water	49:55	0:0	18	;
water	50:36	0:0	18	t
op	50:38	0:0	18	>>=
water	50:42	0:0	18	1
water	50:43	0:0	18	;
water	51:32	0:0	18	}
water	52:32	0:0	16	gain_cache
op	52:43	0:0	16	=
call	52:45	52:62	16	GET_GAIN
arg	52:54	52:59	17	scale
water	52:54	0:0	18	scale
arg	52:61	52:62	17	t
water	52:61	0:0	18	t
op	52:64	0:0	16	*
water	52:66	0:0	16	s
water	52:67	0:0	16	;
water	53:28	0:0	16	}
water	54:24	0:0	14	}
water	55:24	0:0	12	coup
op	55:28	0:0	12	->
water	55:30	0:0	12	gain
op	55:34	0:0	12	[
water	55:35	0:0	12	c
op	55:36	0:0	12	]
op	55:37	0:0	12	[
water	55:38	0:0	12	idx
op	55:41	0:0	12	]
op	55:43	0:0	12	=
water	55:45	0:0	12	gain_cache
water	55:55	0:0	12	;
water	56:20	0:0	12	}
water	57:16	0:0	10	}
water	58:12	0:0	8	}
water	59:8	0:0	6	}
water	60:4	0:0	4	}
return	61:4	61:12	2	0
water	61:11	0:0	3	0

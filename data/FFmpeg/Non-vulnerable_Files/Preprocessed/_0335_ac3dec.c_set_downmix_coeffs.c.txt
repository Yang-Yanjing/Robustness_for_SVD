func	1:0	44:0	0	static void	set_downmix_coeffs
params	1:30	0:0	1	
param	1:31	1:50	2	AC3DecodeContext *	s
stmnts	0:0	43:4	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:51	2	float	cmix
op	4:15	0:0	2	=
water	4:17	0:0	2	gain_levels
op	4:28	0:0	2	[
water	4:29	0:0	2	s
op	4:30	0:0	2	->
water	4:34	0:0	2	center_mix_level
op	4:50	0:0	2	]
decl	5:4	5:51	2	float	smix
op	5:15	0:0	2	=
water	5:17	0:0	2	gain_levels
op	5:28	0:0	2	[
water	5:29	0:0	2	s
op	5:30	0:0	2	->
water	5:32	0:0	2	surround_mix_level
op	5:50	0:0	2	]
decl	6:4	6:22	2	float	norm0
water	6:15	0:0	2	,
decl	6:4	6:22	2	float	norm1
water	7:4	0:0	2	float
water	7:10	0:0	2	downmix_coeffs
op	7:24	0:0	2	[
water	7:25	0:0	2	AC3_MAX_CHANNELS
op	7:41	0:0	2	]
op	7:42	0:0	2	[
water	7:43	0:0	2	2
op	7:44	0:0	2	]
water	7:45	0:0	2	;
for	8:4	11:4	2	(i = 0 ;i < s -> fbw_channels;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:23	3	i < s -> fbw_channels
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	s
op	8:21	0:0	4	->
water	8:23	0:0	4	fbw_channels
forexpr	8:37	8:38	3	i ++
water	8:37	0:0	4	i
op	8:38	0:0	4	++
stmts	8:42	11:4	3	
water	8:42	0:0	4	{
water	9:8	0:0	4	downmix_coeffs
op	9:22	0:0	4	[
water	9:23	0:0	4	i
op	9:24	0:0	4	]
op	9:25	0:0	4	[
water	9:26	0:0	4	0
op	9:27	0:0	4	]
op	9:29	0:0	4	=
water	9:31	0:0	4	gain_levels
op	9:42	0:0	4	[
water	9:43	0:0	4	ac3_default_coeffs
op	9:61	0:0	4	[
water	9:62	0:0	4	s
op	9:63	0:0	4	->
water	9:65	0:0	4	channel_mode
op	9:77	0:0	4	]
op	9:78	0:0	4	[
water	9:79	0:0	4	i
op	9:80	0:0	4	]
op	9:81	0:0	4	[
water	9:82	0:0	4	0
op	9:83	0:0	4	]
op	9:84	0:0	4	]
water	9:85	0:0	4	;
water	10:8	0:0	4	downmix_coeffs
op	10:22	0:0	4	[
water	10:23	0:0	4	i
op	10:24	0:0	4	]
op	10:25	0:0	4	[
water	10:26	0:0	4	1
op	10:27	0:0	4	]
op	10:29	0:0	4	=
water	10:31	0:0	4	gain_levels
op	10:42	0:0	4	[
water	10:43	0:0	4	ac3_default_coeffs
op	10:61	0:0	4	[
water	10:62	0:0	4	s
op	10:63	0:0	4	->
water	10:65	0:0	4	channel_mode
op	10:77	0:0	4	]
op	10:78	0:0	4	[
water	10:79	0:0	4	i
op	10:80	0:0	4	]
op	10:81	0:0	4	[
water	10:82	0:0	4	1
op	10:83	0:0	4	]
op	10:84	0:0	4	]
water	10:85	0:0	4	;
water	11:4	0:0	4	}
if	12:4	14:4	2	(s -> channel_mode > 1 && s -> channel_mode & 1)
cond	12:8	12:49	3	s -> channel_mode > 1 && s -> channel_mode & 1
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	channel_mode
op	12:24	0:0	4	>
water	12:26	0:0	4	1
op	12:28	0:0	4	&&
water	12:31	0:0	4	s
op	12:32	0:0	4	->
water	12:34	0:0	4	channel_mode
op	12:47	0:0	4	&
water	12:49	0:0	4	1
stmts	12:52	14:4	3	
water	12:52	0:0	4	{
water	13:8	0:0	4	downmix_coeffs
op	13:22	0:0	4	[
water	13:23	0:0	4	1
op	13:24	0:0	4	]
op	13:25	0:0	4	[
water	13:26	0:0	4	0
op	13:27	0:0	4	]
op	13:29	0:0	4	=
water	13:31	0:0	4	downmix_coeffs
op	13:45	0:0	4	[
water	13:46	0:0	4	1
op	13:47	0:0	4	]
op	13:48	0:0	4	[
water	13:49	0:0	4	1
op	13:50	0:0	4	]
op	13:52	0:0	4	=
water	13:54	0:0	4	cmix
water	13:58	0:0	4	;
water	14:4	0:0	4	}
if	15:4	18:4	2	(s -> channel_mode == AC3_CHMODE_2F1R || s -> channel_mode == AC3_CHMODE_3F1R)
cond	15:8	15:65	3	s -> channel_mode == AC3_CHMODE_2F1R || s -> channel_mode == AC3_CHMODE_3F1R
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	channel_mode
op	15:24	0:0	4	==
water	15:27	0:0	4	AC3_CHMODE_2F1R
op	15:43	0:0	4	||
water	15:46	0:0	4	s
op	15:47	0:0	4	->
water	15:49	0:0	4	channel_mode
op	15:62	0:0	4	==
water	15:65	0:0	4	AC3_CHMODE_3F1R
stmts	15:82	18:4	3	
water	15:82	0:0	4	{
decl	16:8	16:36	4	int	nf
op	16:15	0:0	4	=
water	16:17	0:0	4	s
op	16:18	0:0	4	->
water	16:20	0:0	4	channel_mode
op	16:33	0:0	4	-
water	16:35	0:0	4	2
water	17:8	0:0	4	downmix_coeffs
op	17:22	0:0	4	[
water	17:23	0:0	4	nf
op	17:25	0:0	4	]
op	17:26	0:0	4	[
water	17:27	0:0	4	0
op	17:28	0:0	4	]
op	17:30	0:0	4	=
water	17:32	0:0	4	downmix_coeffs
op	17:46	0:0	4	[
water	17:47	0:0	4	nf
op	17:49	0:0	4	]
op	17:50	0:0	4	[
water	17:51	0:0	4	1
op	17:52	0:0	4	]
op	17:54	0:0	4	=
water	17:56	0:0	4	smix
op	17:61	0:0	4	*
water	17:63	0:0	4	LEVEL_MINUS_3DB
water	17:78	0:0	4	;
water	18:4	0:0	4	}
if	19:4	22:4	2	(s -> channel_mode == AC3_CHMODE_2F2R || s -> channel_mode == AC3_CHMODE_3F2R)
cond	19:8	19:65	3	s -> channel_mode == AC3_CHMODE_2F2R || s -> channel_mode == AC3_CHMODE_3F2R
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	channel_mode
op	19:24	0:0	4	==
water	19:27	0:0	4	AC3_CHMODE_2F2R
op	19:43	0:0	4	||
water	19:46	0:0	4	s
op	19:47	0:0	4	->
water	19:49	0:0	4	channel_mode
op	19:62	0:0	4	==
water	19:65	0:0	4	AC3_CHMODE_3F2R
stmts	19:82	22:4	3	
water	19:82	0:0	4	{
decl	20:8	20:36	4	int	nf
op	20:15	0:0	4	=
water	20:17	0:0	4	s
op	20:18	0:0	4	->
water	20:20	0:0	4	channel_mode
op	20:33	0:0	4	-
water	20:35	0:0	4	4
water	21:8	0:0	4	downmix_coeffs
op	21:22	0:0	4	[
water	21:23	0:0	4	nf
op	21:25	0:0	4	]
op	21:26	0:0	4	[
water	21:27	0:0	4	0
op	21:28	0:0	4	]
op	21:30	0:0	4	=
water	21:32	0:0	4	downmix_coeffs
op	21:46	0:0	4	[
water	21:47	0:0	4	nf
op	21:49	0:0	4	+
water	21:50	0:0	4	1
op	21:51	0:0	4	]
op	21:52	0:0	4	[
water	21:53	0:0	4	1
op	21:54	0:0	4	]
op	21:56	0:0	4	=
water	21:58	0:0	4	smix
water	21:62	0:0	4	;
water	22:4	0:0	4	}
water	24:4	0:0	2	norm0
op	24:10	0:0	2	=
water	24:12	0:0	2	norm1
op	24:18	0:0	2	=
water	24:20	0:0	2	0
op	24:21	0:0	2	.
water	24:22	0:0	2	0
water	24:23	0:0	2	;
for	25:4	28:4	2	(i = 0 ;i < s -> fbw_channels;i ++)
forinit	25:9	25:14	3	i = 0 ;
water	25:9	0:0	4	i
op	25:11	0:0	4	=
water	25:13	0:0	4	0
water	25:14	0:0	4	;
cond	25:16	25:23	3	i < s -> fbw_channels
water	25:16	0:0	4	i
op	25:18	0:0	4	<
water	25:20	0:0	4	s
op	25:21	0:0	4	->
water	25:23	0:0	4	fbw_channels
forexpr	25:37	25:38	3	i ++
water	25:37	0:0	4	i
op	25:38	0:0	4	++
stmts	25:42	28:4	3	
water	25:42	0:0	4	{
water	26:8	0:0	4	norm0
op	26:14	0:0	4	+=
water	26:17	0:0	4	downmix_coeffs
op	26:31	0:0	4	[
water	26:32	0:0	4	i
op	26:33	0:0	4	]
op	26:34	0:0	4	[
water	26:35	0:0	4	0
op	26:36	0:0	4	]
water	26:37	0:0	4	;
water	27:8	0:0	4	norm1
op	27:14	0:0	4	+=
water	27:17	0:0	4	downmix_coeffs
op	27:31	0:0	4	[
water	27:32	0:0	4	i
op	27:33	0:0	4	]
op	27:34	0:0	4	[
water	27:35	0:0	4	1
op	27:36	0:0	4	]
water	27:37	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	norm0
op	29:10	0:0	2	=
water	29:12	0:0	2	1
op	29:13	0:0	2	.
water	29:14	0:0	2	0
water	29:15	0:0	2	f
op	29:17	0:0	2	/
water	29:19	0:0	2	norm0
water	29:24	0:0	2	;
water	30:4	0:0	2	norm1
op	30:10	0:0	2	=
water	30:12	0:0	2	1
op	30:13	0:0	2	.
water	30:14	0:0	2	0
water	30:15	0:0	2	f
op	30:17	0:0	2	/
water	30:19	0:0	2	norm1
water	30:24	0:0	2	;
for	31:4	34:4	2	(i = 0 ;i < s -> fbw_channels;i ++)
forinit	31:9	31:14	3	i = 0 ;
water	31:9	0:0	4	i
op	31:11	0:0	4	=
water	31:13	0:0	4	0
water	31:14	0:0	4	;
cond	31:16	31:23	3	i < s -> fbw_channels
water	31:16	0:0	4	i
op	31:18	0:0	4	<
water	31:20	0:0	4	s
op	31:21	0:0	4	->
water	31:23	0:0	4	fbw_channels
forexpr	31:37	31:38	3	i ++
water	31:37	0:0	4	i
op	31:38	0:0	4	++
stmts	31:42	34:4	3	
water	31:42	0:0	4	{
water	32:8	0:0	4	downmix_coeffs
op	32:22	0:0	4	[
water	32:23	0:0	4	i
op	32:24	0:0	4	]
op	32:25	0:0	4	[
water	32:26	0:0	4	0
op	32:27	0:0	4	]
op	32:29	0:0	4	*=
water	32:32	0:0	4	norm0
water	32:37	0:0	4	;
water	33:8	0:0	4	downmix_coeffs
op	33:22	0:0	4	[
water	33:23	0:0	4	i
op	33:24	0:0	4	]
op	33:25	0:0	4	[
water	33:26	0:0	4	1
op	33:27	0:0	4	]
op	33:29	0:0	4	*=
water	33:32	0:0	4	norm1
water	33:37	0:0	4	;
water	34:4	0:0	4	}
if	35:4	39:4	2	(s -> output_mode == AC3_CHMODE_MONO)
cond	35:8	35:26	3	s -> output_mode == AC3_CHMODE_MONO
water	35:8	0:0	4	s
op	35:9	0:0	4	->
water	35:11	0:0	4	output_mode
op	35:23	0:0	4	==
water	35:26	0:0	4	AC3_CHMODE_MONO
stmts	35:43	39:4	3	
water	35:43	0:0	4	{
for	36:8	38:75	4	(i = 0 ;i < s -> fbw_channels;i ++)
forinit	36:13	36:18	5	i = 0 ;
water	36:13	0:0	6	i
op	36:15	0:0	6	=
water	36:17	0:0	6	0
water	36:18	0:0	6	;
cond	36:20	36:27	5	i < s -> fbw_channels
water	36:20	0:0	6	i
op	36:22	0:0	6	<
water	36:24	0:0	6	s
op	36:25	0:0	6	->
water	36:27	0:0	6	fbw_channels
forexpr	36:41	36:42	5	i ++
water	36:41	0:0	6	i
op	36:42	0:0	6	++
stmts	37:12	38:75	5	
water	37:12	0:0	6	downmix_coeffs
op	37:26	0:0	6	[
water	37:27	0:0	6	i
op	37:28	0:0	6	]
op	37:29	0:0	6	[
water	37:30	0:0	6	0
op	37:31	0:0	6	]
op	37:33	0:0	6	=
water	37:35	0:0	6	(
water	37:36	0:0	6	downmix_coeffs
op	37:50	0:0	6	[
water	37:51	0:0	6	i
op	37:52	0:0	6	]
op	37:53	0:0	6	[
water	37:54	0:0	6	0
op	37:55	0:0	6	]
op	37:57	0:0	6	+
water	38:36	0:0	6	downmix_coeffs
op	38:50	0:0	6	[
water	38:51	0:0	6	i
op	38:52	0:0	6	]
op	38:53	0:0	6	[
water	38:54	0:0	6	1
op	38:55	0:0	6	]
water	38:56	0:0	6	)
op	38:58	0:0	6	*
water	38:60	0:0	6	LEVEL_MINUS_3DB
water	38:75	0:0	6	;
water	39:4	0:0	4	}
for	40:4	43:4	2	(i = 0 ;i < s -> fbw_channels;i ++)
forinit	40:9	40:14	3	i = 0 ;
water	40:9	0:0	4	i
op	40:11	0:0	4	=
water	40:13	0:0	4	0
water	40:14	0:0	4	;
cond	40:16	40:23	3	i < s -> fbw_channels
water	40:16	0:0	4	i
op	40:18	0:0	4	<
water	40:20	0:0	4	s
op	40:21	0:0	4	->
water	40:23	0:0	4	fbw_channels
forexpr	40:37	40:38	3	i ++
water	40:37	0:0	4	i
op	40:38	0:0	4	++
stmts	40:42	43:4	3	
water	40:42	0:0	4	{
water	41:8	0:0	4	s
op	41:9	0:0	4	->
water	41:11	0:0	4	downmix_coeffs
op	41:25	0:0	4	[
water	41:26	0:0	4	i
op	41:27	0:0	4	]
op	41:28	0:0	4	[
water	41:29	0:0	4	0
op	41:30	0:0	4	]
op	41:32	0:0	4	=
call	41:34	41:61	4	FIXR12
arg	41:41	41:61	5	downmix_coeffs[i][0]
water	41:41	0:0	6	downmix_coeffs
op	41:55	0:0	6	[
water	41:56	0:0	6	i
op	41:57	0:0	6	]
op	41:58	0:0	6	[
water	41:59	0:0	6	0
op	41:60	0:0	6	]
water	41:62	0:0	4	;
water	42:8	0:0	4	s
op	42:9	0:0	4	->
water	42:11	0:0	4	downmix_coeffs
op	42:25	0:0	4	[
water	42:26	0:0	4	i
op	42:27	0:0	4	]
op	42:28	0:0	4	[
water	42:29	0:0	4	1
op	42:30	0:0	4	]
op	42:32	0:0	4	=
call	42:34	42:61	4	FIXR12
arg	42:41	42:61	5	downmix_coeffs[i][1]
water	42:41	0:0	6	downmix_coeffs
op	42:55	0:0	6	[
water	42:56	0:0	6	i
op	42:57	0:0	6	]
op	42:58	0:0	6	[
water	42:59	0:0	6	1
op	42:60	0:0	6	]
water	42:62	0:0	4	;
water	43:4	0:0	4	}

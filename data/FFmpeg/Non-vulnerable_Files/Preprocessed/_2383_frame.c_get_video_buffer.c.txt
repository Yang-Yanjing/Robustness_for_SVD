func	1:0	42:0	0	static int	get_video_buffer
params	1:27	0:0	1	
param	1:28	1:42	2	AVFrame *	frame
param	1:44	1:53	2	int	align
stmnts	0:0	41:26	1	
decl	3:4	3:71	2	const AVPixFmtDescriptor	*desc
op	3:35	0:0	2	=
call	3:37	3:70	3	av_pix_fmt_desc_get
arg	3:57	3:70	4	frame->format
water	3:57	0:0	5	frame
op	3:62	0:0	5	->
water	3:64	0:0	5	format
decl	4:4	4:14	2	int	ret
water	4:11	0:0	2	,
decl	4:4	4:14	2	int	i
if	5:4	6:30	2	(! desc)
cond	5:8	5:9	3	! desc
op	5:8	0:0	4	!
water	5:9	0:0	4	desc
stmts	6:8	6:30	3	
return	6:8	6:30	4	AVERROR(EINVAL)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	EINVAL
water	6:23	0:0	7	EINVAL
if	7:4	8:18	2	(( ret =av_image_check_size (frame -> width ,frame -> height ,0 ,NULL ) ) < 0)
cond	7:8	7:76	3	( ret =av_image_check_size (frame -> width ,frame -> height ,0 ,NULL ) ) < 0
water	7:8	0:0	4	(
water	7:9	0:0	4	ret
op	7:13	0:0	4	=
call	7:15	7:71	4	av_image_check_size
arg	7:35	7:47	5	frame->width
water	7:35	0:0	6	frame
op	7:40	0:0	6	->
water	7:42	0:0	6	width
arg	7:49	7:62	5	frame->height
water	7:49	0:0	6	frame
op	7:54	0:0	6	->
water	7:56	0:0	6	height
arg	7:64	7:65	5	0
water	7:64	0:0	6	0
arg	7:67	7:71	5	NULL
water	7:67	0:0	6	NULL
water	7:72	0:0	4	)
op	7:74	0:0	4	<
water	7:76	0:0	4	0
stmts	8:8	8:18	3	
return	8:8	8:18	4	ret
water	8:15	0:0	5	ret
if	9:4	20:4	2	(! frame -> linesize [ 0 ])
cond	9:8	9:26	3	! frame -> linesize [ 0 ]
op	9:8	0:0	4	!
water	9:9	0:0	4	frame
op	9:14	0:0	4	->
water	9:16	0:0	4	linesize
op	9:24	0:0	4	[
water	9:25	0:0	4	0
op	9:26	0:0	4	]
stmts	9:29	20:4	3	
water	9:29	0:0	4	{
for	10:8	17:8	4	(i = 1 ;i <= align;i += i)
forinit	10:12	10:15	5	i = 1 ;
water	10:12	0:0	6	i
op	10:13	0:0	6	=
water	10:14	0:0	6	1
water	10:15	0:0	6	;
cond	10:17	10:20	5	i <= align
water	10:17	0:0	6	i
op	10:18	0:0	6	<=
water	10:20	0:0	6	align
forexpr	10:27	10:30	5	i += i
water	10:27	0:0	6	i
op	10:28	0:0	6	+=
water	10:30	0:0	6	i
stmts	10:33	17:8	5	
water	10:33	0:0	6	{
water	11:12	0:0	6	ret
op	11:16	0:0	6	=
call	11:18	12:66	6	av_image_fill_linesizes
arg	11:42	11:57	7	frame->linesize
water	11:42	0:0	8	frame
op	11:47	0:0	8	->
water	11:49	0:0	8	linesize
arg	11:59	11:72	7	frame->format
water	11:59	0:0	8	frame
op	11:64	0:0	8	->
water	11:66	0:0	8	format
arg	12:42	12:66	7	FFALIGN(frame->width,i)
call	12:42	12:65	8	FFALIGN
arg	12:50	12:62	9	frame->width
water	12:50	0:0	10	frame
op	12:55	0:0	10	->
water	12:57	0:0	10	width
arg	12:64	12:65	9	i
water	12:64	0:0	10	i
water	12:67	0:0	6	;
if	13:12	14:26	6	(ret < 0)
cond	13:16	13:22	7	ret < 0
water	13:16	0:0	8	ret
op	13:20	0:0	8	<
water	13:22	0:0	8	0
stmts	14:16	14:26	7	
return	14:16	14:26	8	ret
water	14:23	0:0	9	ret
if	15:12	16:21	6	(! ( frame -> linesize [ 0 ] & ( align - 1 ) ))
cond	15:16	15:48	7	! ( frame -> linesize [ 0 ] & ( align - 1 ) )
op	15:16	0:0	8	!
water	15:17	0:0	8	(
water	15:18	0:0	8	frame
op	15:23	0:0	8	->
water	15:25	0:0	8	linesize
op	15:33	0:0	8	[
water	15:34	0:0	8	0
op	15:35	0:0	8	]
op	15:37	0:0	8	&
water	15:39	0:0	8	(
water	15:40	0:0	8	align
op	15:45	0:0	8	-
water	15:46	0:0	8	1
water	15:47	0:0	8	)
water	15:48	0:0	8	)
stmts	16:16	16:21	7	
break	16:16	16:21	8	
water	17:8	0:0	6	}
for	18:8	19:67	4	(i = 0 ;i < 4 && frame -> linesize [ i ];i ++)
forinit	18:13	18:18	5	i = 0 ;
water	18:13	0:0	6	i
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:46	5	i < 4 && frame -> linesize [ i ]
water	18:20	0:0	6	i
op	18:22	0:0	6	<
water	18:24	0:0	6	4
op	18:26	0:0	6	&&
water	18:29	0:0	6	frame
op	18:34	0:0	6	->
water	18:36	0:0	6	linesize
op	18:44	0:0	6	[
water	18:45	0:0	6	i
op	18:46	0:0	6	]
forexpr	18:49	18:50	5	i ++
water	18:49	0:0	6	i
op	18:50	0:0	6	++
stmts	19:12	19:67	5	
water	19:12	0:0	6	frame
op	19:17	0:0	6	->
water	19:19	0:0	6	linesize
op	19:27	0:0	6	[
water	19:28	0:0	6	i
op	19:29	0:0	6	]
op	19:31	0:0	6	=
call	19:33	19:66	6	FFALIGN
arg	19:41	19:59	7	frame->linesize[i]
water	19:41	0:0	8	frame
op	19:46	0:0	8	->
water	19:48	0:0	8	linesize
op	19:56	0:0	8	[
water	19:57	0:0	8	i
op	19:58	0:0	8	]
arg	19:61	19:66	7	align
water	19:61	0:0	8	align
water	19:67	0:0	6	;
water	20:4	0:0	4	}
for	21:4	29:4	2	(i = 0 ;i < 4 && frame -> linesize [ i ];i ++)
forinit	21:9	21:14	3	i = 0 ;
water	21:9	0:0	4	i
op	21:11	0:0	4	=
water	21:13	0:0	4	0
water	21:14	0:0	4	;
cond	21:16	21:42	3	i < 4 && frame -> linesize [ i ]
water	21:16	0:0	4	i
op	21:18	0:0	4	<
water	21:20	0:0	4	4
op	21:22	0:0	4	&&
water	21:25	0:0	4	frame
op	21:30	0:0	4	->
water	21:32	0:0	4	linesize
op	21:40	0:0	4	[
water	21:41	0:0	4	i
op	21:42	0:0	4	]
forexpr	21:45	21:46	3	i ++
water	21:45	0:0	4	i
op	21:46	0:0	4	++
stmts	21:50	29:4	3	
water	21:50	0:0	4	{
decl	22:8	22:42	4	int	h
op	22:14	0:0	4	=
call	22:16	22:41	5	FFALIGN
arg	22:24	22:37	6	frame->height
water	22:24	0:0	7	frame
op	22:29	0:0	7	->
water	22:31	0:0	7	height
arg	22:39	22:41	6	32
water	22:39	0:0	7	32
if	23:8	24:54	4	(i == 1 || i == 2)
cond	23:12	23:27	5	i == 1 || i == 2
water	23:12	0:0	6	i
op	23:14	0:0	6	==
water	23:17	0:0	6	1
op	23:19	0:0	6	||
water	23:22	0:0	6	i
op	23:24	0:0	6	==
water	23:27	0:0	6	2
stmts	24:12	24:54	5	
water	24:12	0:0	6	h
op	24:14	0:0	6	=
call	24:16	24:53	6	FF_CEIL_RSHIFT
arg	24:31	24:32	7	h
water	24:31	0:0	8	h
arg	24:34	24:53	7	desc->log2_chroma_h
water	24:34	0:0	8	desc
op	24:38	0:0	8	->
water	24:40	0:0	8	log2_chroma_h
water	24:54	0:0	6	;
water	25:8	0:0	4	frame
op	25:13	0:0	4	->
water	25:15	0:0	4	buf
op	25:18	0:0	4	[
water	25:19	0:0	4	i
op	25:20	0:0	4	]
op	25:22	0:0	4	=
call	25:24	25:76	4	av_buffer_alloc
arg	25:40	25:76	5	frame->linesize[i]*h+16+16-1
water	25:40	0:0	6	frame
op	25:45	0:0	6	->
water	25:47	0:0	6	linesize
op	25:55	0:0	6	[
water	25:56	0:0	6	i
op	25:57	0:0	6	]
op	25:59	0:0	6	*
water	25:61	0:0	6	h
op	25:63	0:0	6	+
water	25:65	0:0	6	16
op	25:68	0:0	6	+
water	25:70	0:0	6	16
op	25:73	0:0	6	-
water	25:75	0:0	6	1
water	25:77	0:0	4	;
if	26:8	27:21	4	(! frame -> buf [ i ])
cond	26:12	26:25	5	! frame -> buf [ i ]
op	26:12	0:0	6	!
water	26:13	0:0	6	frame
op	26:18	0:0	6	->
water	26:20	0:0	6	buf
op	26:23	0:0	6	[
water	26:24	0:0	6	i
op	26:25	0:0	6	]
stmts	27:12	27:21	5	
goto	27:12	27:21	6	fail
water	27:17	0:0	7	fail
water	28:8	0:0	4	frame
op	28:13	0:0	4	->
water	28:15	0:0	4	data
op	28:19	0:0	4	[
water	28:20	0:0	4	i
op	28:21	0:0	4	]
op	28:23	0:0	4	=
water	28:25	0:0	4	frame
op	28:30	0:0	4	->
water	28:32	0:0	4	buf
op	28:35	0:0	4	[
water	28:36	0:0	4	i
op	28:37	0:0	4	]
op	28:38	0:0	4	->
water	28:40	0:0	4	data
water	28:44	0:0	4	;
water	29:4	0:0	4	}
if	30:4	36:4	2	(desc -> flags & AV_PIX_FMT_FLAG_PAL || desc -> flags & AV_PIX_FMT_FLAG_PSEUDOPAL)
cond	30:8	30:59	3	desc -> flags & AV_PIX_FMT_FLAG_PAL || desc -> flags & AV_PIX_FMT_FLAG_PSEUDOPAL
water	30:8	0:0	4	desc
op	30:12	0:0	4	->
water	30:14	0:0	4	flags
op	30:20	0:0	4	&
water	30:22	0:0	4	AV_PIX_FMT_FLAG_PAL
op	30:42	0:0	4	||
water	30:45	0:0	4	desc
op	30:49	0:0	4	->
water	30:51	0:0	4	flags
op	30:57	0:0	4	&
water	30:59	0:0	4	AV_PIX_FMT_FLAG_PSEUDOPAL
stmts	30:86	36:4	3	
water	30:86	0:0	4	{
call	31:8	31:38	4	av_buffer_unref
arg	31:24	31:38	5	&frame->buf[1]
op	31:24	0:0	6	&
water	31:25	0:0	6	frame
op	31:30	0:0	6	->
water	31:32	0:0	6	buf
op	31:35	0:0	6	[
water	31:36	0:0	6	1
op	31:37	0:0	6	]
water	31:39	0:0	4	;
water	32:8	0:0	4	frame
op	32:13	0:0	4	->
water	32:15	0:0	4	buf
op	32:18	0:0	4	[
water	32:19	0:0	4	1
op	32:20	0:0	4	]
op	32:22	0:0	4	=
call	32:24	32:44	4	av_buffer_alloc
arg	32:40	32:44	5	1024
water	32:40	0:0	6	1024
water	32:45	0:0	4	;
if	33:8	34:21	4	(! frame -> buf [ 1 ])
cond	33:12	33:25	5	! frame -> buf [ 1 ]
op	33:12	0:0	6	!
water	33:13	0:0	6	frame
op	33:18	0:0	6	->
water	33:20	0:0	6	buf
op	33:23	0:0	6	[
water	33:24	0:0	6	1
op	33:25	0:0	6	]
stmts	34:12	34:21	5	
goto	34:12	34:21	6	fail
water	34:17	0:0	7	fail
water	35:8	0:0	4	frame
op	35:13	0:0	4	->
water	35:15	0:0	4	data
op	35:19	0:0	4	[
water	35:20	0:0	4	1
op	35:21	0:0	4	]
op	35:23	0:0	4	=
water	35:25	0:0	4	frame
op	35:30	0:0	4	->
water	35:32	0:0	4	buf
op	35:35	0:0	4	[
water	35:36	0:0	4	1
op	35:37	0:0	4	]
op	35:38	0:0	4	->
water	35:40	0:0	4	data
water	35:44	0:0	4	;
water	36:4	0:0	4	}
water	37:4	0:0	2	frame
op	37:9	0:0	2	->
water	37:11	0:0	2	extended_data
op	37:25	0:0	2	=
water	37:27	0:0	2	frame
op	37:32	0:0	2	->
water	37:34	0:0	2	data
water	37:38	0:0	2	;
return	38:4	38:12	2	0
water	38:11	0:0	3	0
label	39:0	39:4	2	fail :
call	40:4	40:24	2	av_frame_unref
arg	40:19	40:24	3	frame
water	40:19	0:0	4	frame
water	40:25	0:0	2	;
return	41:4	41:26	2	AVERROR(ENOMEM)
call	41:11	41:25	3	AVERROR
arg	41:19	41:25	4	ENOMEM
water	41:19	0:0	5	ENOMEM

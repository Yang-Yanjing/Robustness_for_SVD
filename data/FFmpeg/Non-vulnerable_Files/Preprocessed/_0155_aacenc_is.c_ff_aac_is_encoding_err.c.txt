func	1:0	55:0	0	struct AACISError	ff_aac_is_encoding_err
params	1:40	0:0	1	
param	1:41	1:57	2	AACEncContext *	s
param	1:59	1:78	2	ChannelElement *	cpe
param	2:41	2:50	2	int	start
param	2:52	2:57	2	int	w
param	2:59	2:64	2	int	g
param	2:66	2:77	2	float	ener0
param	3:41	3:52	2	float	ener1
param	3:54	3:66	2	float	ener01
param	4:41	4:56	2	int	use_pcoeffs
param	4:58	4:67	2	int	phase
stmnts	0:0	54:19	1	
decl	6:4	6:13	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:13	2	int	w2
decl	7:4	7:44	2	SingleChannelElement	*sce0
op	7:31	0:0	2	=
op	7:33	0:0	2	&
water	7:34	0:0	2	cpe
op	7:37	0:0	2	->
water	7:39	0:0	2	ch
op	7:41	0:0	2	[
water	7:42	0:0	2	0
op	7:43	0:0	2	]
decl	8:4	8:44	2	SingleChannelElement	*sce1
op	8:31	0:0	2	=
op	8:33	0:0	2	&
water	8:34	0:0	2	cpe
op	8:37	0:0	2	->
water	8:39	0:0	2	ch
op	8:41	0:0	2	[
water	8:42	0:0	2	1
op	8:43	0:0	2	]
decl	9:4	9:57	2	float	*L
op	9:13	0:0	2	=
water	9:15	0:0	2	use_pcoeffs
water	9:27	0:0	2	?
water	9:29	0:0	2	sce0
op	9:33	0:0	2	->
water	9:35	0:0	2	pcoeffs
water	9:43	0:0	2	:
water	9:45	0:0	2	sce0
op	9:49	0:0	2	->
water	9:51	0:0	2	coeffs
decl	10:4	10:57	2	float	*R
op	10:13	0:0	2	=
water	10:15	0:0	2	use_pcoeffs
water	10:27	0:0	2	?
water	10:29	0:0	2	sce1
op	10:33	0:0	2	->
water	10:35	0:0	2	pcoeffs
water	10:43	0:0	2	:
water	10:45	0:0	2	sce1
op	10:49	0:0	2	->
water	10:51	0:0	2	coeffs
decl	11:4	11:60	2	float	*L34
op	11:15	0:0	2	=
op	11:17	0:0	2	&
water	11:18	0:0	2	s
op	11:19	0:0	2	->
water	11:21	0:0	2	scoefs
op	11:27	0:0	2	[
water	11:28	0:0	2	256
op	11:31	0:0	2	*
water	11:32	0:0	2	0
op	11:33	0:0	2	]
water	11:34	0:0	2	,
decl	11:4	11:60	2	float	*R34
op	11:41	0:0	2	=
op	11:43	0:0	2	&
water	11:44	0:0	2	s
op	11:45	0:0	2	->
water	11:47	0:0	2	scoefs
op	11:53	0:0	2	[
water	11:54	0:0	2	256
op	11:57	0:0	2	*
water	11:58	0:0	2	1
op	11:59	0:0	2	]
decl	12:4	12:60	2	float	*IS
op	12:15	0:0	2	=
op	12:17	0:0	2	&
water	12:18	0:0	2	s
op	12:19	0:0	2	->
water	12:21	0:0	2	scoefs
op	12:27	0:0	2	[
water	12:28	0:0	2	256
op	12:31	0:0	2	*
water	12:32	0:0	2	2
op	12:33	0:0	2	]
water	12:34	0:0	2	,
decl	12:4	12:60	2	float	*I34
op	12:41	0:0	2	=
op	12:43	0:0	2	&
water	12:44	0:0	2	s
op	12:45	0:0	2	->
water	12:47	0:0	2	scoefs
op	12:53	0:0	2	[
water	12:54	0:0	2	256
op	12:57	0:0	2	*
water	12:58	0:0	2	3
op	12:59	0:0	2	]
decl	13:4	13:36	2	float	dist1
op	13:16	0:0	2	=
water	13:18	0:0	2	0
op	13:19	0:0	2	.
water	13:20	0:0	2	0
water	13:21	0:0	2	f
water	13:22	0:0	2	,
decl	13:4	13:36	2	float	dist2
op	13:30	0:0	2	=
water	13:32	0:0	2	0
op	13:33	0:0	2	.
water	13:34	0:0	2	0
water	13:35	0:0	2	f
decl	14:4	14:36	2	struct AACISError	is_error
op	14:31	0:0	2	=
water	14:33	0:0	2	{
water	14:34	0:0	2	0
water	14:35	0:0	2	}
for	15:4	48:4	2	(w2 = 0 ;w2 < sce0 -> ics . group_len [ w ];w2 ++)
forinit	15:9	15:15	3	w2 = 0 ;
water	15:9	0:0	4	w2
op	15:12	0:0	4	=
water	15:14	0:0	4	0
water	15:15	0:0	4	;
cond	15:17	15:43	3	w2 < sce0 -> ics . group_len [ w ]
water	15:17	0:0	4	w2
op	15:20	0:0	4	<
water	15:22	0:0	4	sce0
op	15:26	0:0	4	->
water	15:28	0:0	4	ics
op	15:31	0:0	4	.
water	15:32	0:0	4	group_len
op	15:41	0:0	4	[
water	15:42	0:0	4	w
op	15:43	0:0	4	]
forexpr	15:46	15:48	3	w2 ++
water	15:46	0:0	4	w2
op	15:48	0:0	4	++
stmts	15:52	48:4	3	
water	15:52	0:0	4	{
decl	16:8	16:78	4	FFPsyBand	*band0
op	16:25	0:0	4	=
op	16:27	0:0	4	&
water	16:28	0:0	4	s
op	16:29	0:0	4	->
water	16:31	0:0	4	psy
op	16:34	0:0	4	.
water	16:35	0:0	4	ch
op	16:37	0:0	4	[
water	16:38	0:0	4	s
op	16:39	0:0	4	->
water	16:41	0:0	4	cur_channel
op	16:52	0:0	4	+
water	16:53	0:0	4	0
op	16:54	0:0	4	]
op	16:55	0:0	4	.
water	16:56	0:0	4	psy_bands
op	16:65	0:0	4	[
water	16:66	0:0	4	(
water	16:67	0:0	4	w
op	16:68	0:0	4	+
water	16:69	0:0	4	w2
water	16:71	0:0	4	)
op	16:72	0:0	4	*
water	16:73	0:0	4	16
op	16:75	0:0	4	+
water	16:76	0:0	4	g
op	16:77	0:0	4	]
decl	17:8	17:78	4	FFPsyBand	*band1
op	17:25	0:0	4	=
op	17:27	0:0	4	&
water	17:28	0:0	4	s
op	17:29	0:0	4	->
water	17:31	0:0	4	psy
op	17:34	0:0	4	.
water	17:35	0:0	4	ch
op	17:37	0:0	4	[
water	17:38	0:0	4	s
op	17:39	0:0	4	->
water	17:41	0:0	4	cur_channel
op	17:52	0:0	4	+
water	17:53	0:0	4	1
op	17:54	0:0	4	]
op	17:55	0:0	4	.
water	17:56	0:0	4	psy_bands
op	17:65	0:0	4	[
water	17:66	0:0	4	(
water	17:67	0:0	4	w
op	17:68	0:0	4	+
water	17:69	0:0	4	w2
water	17:71	0:0	4	)
op	17:72	0:0	4	*
water	17:73	0:0	4	16
op	17:75	0:0	4	+
water	17:76	0:0	4	g
op	17:77	0:0	4	]
decl	18:8	18:75	4	int	is_band_type
water	18:24	0:0	4	,
decl	18:8	18:75	4	int	is_sf_idx
op	18:36	0:0	4	=
call	18:38	18:74	5	FFMAX
arg	18:44	18:45	6	1
water	18:44	0:0	7	1
arg	18:47	18:74	6	sce0->sf_idx[(w+w2)*16+g]-4
water	18:47	0:0	7	sce0
op	18:51	0:0	7	->
water	18:53	0:0	7	sf_idx
op	18:59	0:0	7	[
water	18:60	0:0	7	(
water	18:61	0:0	7	w
op	18:62	0:0	7	+
water	18:63	0:0	7	w2
water	18:65	0:0	7	)
op	18:66	0:0	7	*
water	18:67	0:0	7	16
op	18:69	0:0	7	+
water	18:70	0:0	7	g
op	18:71	0:0	7	]
op	18:72	0:0	7	-
water	18:73	0:0	7	4
decl	19:8	19:54	4	float	e01_34
op	19:21	0:0	4	=
water	19:23	0:0	4	phase
call	19:28	19:53	5	*pow
arg	19:33	19:44	6	ener1/ener0
water	19:33	0:0	7	ener1
op	19:38	0:0	7	/
water	19:39	0:0	7	ener0
arg	19:46	19:53	6	3.0/4.0
water	19:46	0:0	7	3
op	19:47	0:0	7	.
water	19:48	0:0	7	0
op	19:49	0:0	7	/
water	19:50	0:0	7	4
op	19:51	0:0	7	.
water	19:52	0:0	7	0
decl	20:8	20:42	4	float	maxval
water	20:20	0:0	4	,
decl	20:8	20:42	4	float	dist_spec_err
op	20:36	0:0	4	=
water	20:38	0:0	4	0
op	20:39	0:0	4	.
water	20:40	0:0	4	0
water	20:41	0:0	4	f
decl	21:8	21:64	4	float	minthr
op	21:21	0:0	4	=
call	21:23	21:63	5	FFMIN
arg	21:29	21:45	6	band0->threshold
water	21:29	0:0	7	band0
op	21:34	0:0	7	->
water	21:36	0:0	7	threshold
arg	21:47	21:63	6	band1->threshold
water	21:47	0:0	7	band1
op	21:52	0:0	7	->
water	21:54	0:0	7	threshold
for	22:8	23:92	4	(i = 0 ;i < sce0 -> ics . swb_sizes [ g ];i ++)
forinit	22:13	22:18	5	i = 0 ;
water	22:13	0:0	6	i
op	22:15	0:0	6	=
water	22:17	0:0	6	0
water	22:18	0:0	6	;
cond	22:20	22:45	5	i < sce0 -> ics . swb_sizes [ g ]
water	22:20	0:0	6	i
op	22:22	0:0	6	<
water	22:24	0:0	6	sce0
op	22:28	0:0	6	->
water	22:30	0:0	6	ics
op	22:33	0:0	6	.
water	22:34	0:0	6	swb_sizes
op	22:43	0:0	6	[
water	22:44	0:0	6	g
op	22:45	0:0	6	]
forexpr	22:48	22:49	5	i ++
water	22:48	0:0	6	i
op	22:49	0:0	6	++
stmts	23:12	23:92	5	
water	23:12	0:0	6	IS
op	23:14	0:0	6	[
water	23:15	0:0	6	i
op	23:16	0:0	6	]
op	23:18	0:0	6	=
water	23:20	0:0	6	(
water	23:21	0:0	6	L
op	23:22	0:0	6	[
water	23:23	0:0	6	start
op	23:28	0:0	6	+
water	23:29	0:0	6	(
water	23:30	0:0	6	w
op	23:31	0:0	6	+
water	23:32	0:0	6	w2
water	23:34	0:0	6	)
op	23:35	0:0	6	*
water	23:36	0:0	6	128
op	23:39	0:0	6	+
water	23:40	0:0	6	i
op	23:41	0:0	6	]
op	23:43	0:0	6	+
water	23:45	0:0	6	phase
op	23:50	0:0	6	*
water	23:51	0:0	6	R
op	23:52	0:0	6	[
water	23:53	0:0	6	start
op	23:58	0:0	6	+
water	23:59	0:0	6	(
water	23:60	0:0	6	w
op	23:61	0:0	6	+
water	23:62	0:0	6	w2
water	23:64	0:0	6	)
op	23:65	0:0	6	*
water	23:66	0:0	6	128
op	23:69	0:0	6	+
water	23:70	0:0	6	i
op	23:71	0:0	6	]
water	23:72	0:0	6	)
call	23:73	23:91	6	*sqrt
arg	23:79	23:91	7	ener0/ener01
water	23:79	0:0	8	ener0
op	23:84	0:0	8	/
water	23:85	0:0	8	ener01
water	23:92	0:0	6	;
call	24:8	24:69	4	abs_pow34_v
arg	24:20	24:23	5	L34
water	24:20	0:0	6	L34
arg	24:25	24:45	5	&L[start+(w+w2)*128]
op	24:25	0:0	6	&
water	24:26	0:0	6	L
op	24:27	0:0	6	[
water	24:28	0:0	6	start
op	24:33	0:0	6	+
water	24:34	0:0	6	(
water	24:35	0:0	6	w
op	24:36	0:0	6	+
water	24:37	0:0	6	w2
water	24:39	0:0	6	)
op	24:40	0:0	6	*
water	24:41	0:0	6	128
op	24:44	0:0	6	]
arg	24:47	24:69	5	sce0->ics.swb_sizes[g]
water	24:47	0:0	6	sce0
op	24:51	0:0	6	->
water	24:53	0:0	6	ics
op	24:56	0:0	6	.
water	24:57	0:0	6	swb_sizes
op	24:66	0:0	6	[
water	24:67	0:0	6	g
op	24:68	0:0	6	]
water	24:70	0:0	4	;
call	25:8	25:69	4	abs_pow34_v
arg	25:20	25:23	5	R34
water	25:20	0:0	6	R34
arg	25:25	25:45	5	&R[start+(w+w2)*128]
op	25:25	0:0	6	&
water	25:26	0:0	6	R
op	25:27	0:0	6	[
water	25:28	0:0	6	start
op	25:33	0:0	6	+
water	25:34	0:0	6	(
water	25:35	0:0	6	w
op	25:36	0:0	6	+
water	25:37	0:0	6	w2
water	25:39	0:0	6	)
op	25:40	0:0	6	*
water	25:41	0:0	6	128
op	25:44	0:0	6	]
arg	25:47	25:69	5	sce0->ics.swb_sizes[g]
water	25:47	0:0	6	sce0
op	25:51	0:0	6	->
water	25:53	0:0	6	ics
op	25:56	0:0	6	.
water	25:57	0:0	6	swb_sizes
op	25:66	0:0	6	[
water	25:67	0:0	6	g
op	25:68	0:0	6	]
water	25:70	0:0	4	;
call	26:8	26:69	4	abs_pow34_v
arg	26:20	26:23	5	I34
water	26:20	0:0	6	I34
arg	26:25	26:27	5	IS
water	26:25	0:0	6	IS
arg	26:47	26:69	5	sce0->ics.swb_sizes[g]
water	26:47	0:0	6	sce0
op	26:51	0:0	6	->
water	26:53	0:0	6	ics
op	26:56	0:0	6	.
water	26:57	0:0	6	swb_sizes
op	26:66	0:0	6	[
water	26:67	0:0	6	g
op	26:68	0:0	6	]
water	26:70	0:0	4	;
water	27:8	0:0	4	maxval
op	27:15	0:0	4	=
call	27:17	27:60	4	find_max_val
arg	27:30	27:31	5	1
water	27:30	0:0	6	1
arg	27:33	27:55	5	sce0->ics.swb_sizes[g]
water	27:33	0:0	6	sce0
op	27:37	0:0	6	->
water	27:39	0:0	6	ics
op	27:42	0:0	6	.
water	27:43	0:0	6	swb_sizes
op	27:52	0:0	6	[
water	27:53	0:0	6	g
op	27:54	0:0	6	]
arg	27:57	27:60	5	I34
water	27:57	0:0	6	I34
water	27:61	0:0	4	;
water	28:8	0:0	4	is_band_type
op	28:21	0:0	4	=
call	28:23	28:54	4	find_min_book
arg	28:37	28:43	5	maxval
water	28:37	0:0	6	maxval
arg	28:45	28:54	5	is_sf_idx
water	28:45	0:0	6	is_sf_idx
water	28:55	0:0	4	;
water	29:8	0:0	4	dist1
op	29:14	0:0	4	+=
call	29:17	33:83	4	quantize_band_cost
arg	29:36	29:37	5	s
water	29:36	0:0	6	s
arg	29:39	29:61	5	&L[start+(w+w2)*128]
op	29:39	0:0	6	&
water	29:40	0:0	6	L
op	29:41	0:0	6	[
water	29:42	0:0	6	start
op	29:48	0:0	6	+
water	29:50	0:0	6	(
water	29:51	0:0	6	w
op	29:52	0:0	6	+
water	29:53	0:0	6	w2
water	29:55	0:0	6	)
op	29:56	0:0	6	*
water	29:57	0:0	6	128
op	29:60	0:0	6	]
arg	29:63	29:66	5	L34
water	29:63	0:0	6	L34
arg	30:36	30:58	5	sce0->ics.swb_sizes[g]
water	30:36	0:0	6	sce0
op	30:40	0:0	6	->
water	30:42	0:0	6	ics
op	30:45	0:0	6	.
water	30:46	0:0	6	swb_sizes
op	30:55	0:0	6	[
water	30:56	0:0	6	g
op	30:57	0:0	6	]
arg	31:36	31:61	5	sce0->sf_idx[(w+w2)*16+g]
water	31:36	0:0	6	sce0
op	31:40	0:0	6	->
water	31:42	0:0	6	sf_idx
op	31:48	0:0	6	[
water	31:49	0:0	6	(
water	31:50	0:0	6	w
op	31:51	0:0	6	+
water	31:52	0:0	6	w2
water	31:54	0:0	6	)
op	31:55	0:0	6	*
water	31:56	0:0	6	16
op	31:58	0:0	6	+
water	31:59	0:0	6	g
op	31:60	0:0	6	]
arg	32:36	32:64	5	sce0->band_type[(w+w2)*16+g]
water	32:36	0:0	6	sce0
op	32:40	0:0	6	->
water	32:42	0:0	6	band_type
op	32:51	0:0	6	[
water	32:52	0:0	6	(
water	32:53	0:0	6	w
op	32:54	0:0	6	+
water	32:55	0:0	6	w2
water	32:57	0:0	6	)
op	32:58	0:0	6	*
water	32:59	0:0	6	16
op	32:61	0:0	6	+
water	32:62	0:0	6	g
op	32:63	0:0	6	]
arg	33:36	33:64	5	s->lambda/band0->threshold
water	33:36	0:0	6	s
op	33:37	0:0	6	->
water	33:39	0:0	6	lambda
op	33:46	0:0	6	/
water	33:48	0:0	6	band0
op	33:53	0:0	6	->
water	33:55	0:0	6	threshold
arg	33:66	33:74	5	INFINITY
water	33:66	0:0	6	INFINITY
arg	33:76	33:80	5	NULL
water	33:76	0:0	6	NULL
arg	33:82	33:83	5	0
water	33:82	0:0	6	0
water	33:84	0:0	4	;
water	34:8	0:0	4	dist1
op	34:14	0:0	4	+=
call	34:17	38:83	4	quantize_band_cost
arg	34:36	34:37	5	s
water	34:36	0:0	6	s
arg	34:39	34:61	5	&R[start+(w+w2)*128]
op	34:39	0:0	6	&
water	34:40	0:0	6	R
op	34:41	0:0	6	[
water	34:42	0:0	6	start
op	34:48	0:0	6	+
water	34:50	0:0	6	(
water	34:51	0:0	6	w
op	34:52	0:0	6	+
water	34:53	0:0	6	w2
water	34:55	0:0	6	)
op	34:56	0:0	6	*
water	34:57	0:0	6	128
op	34:60	0:0	6	]
arg	34:63	34:66	5	R34
water	34:63	0:0	6	R34
arg	35:36	35:58	5	sce1->ics.swb_sizes[g]
water	35:36	0:0	6	sce1
op	35:40	0:0	6	->
water	35:42	0:0	6	ics
op	35:45	0:0	6	.
water	35:46	0:0	6	swb_sizes
op	35:55	0:0	6	[
water	35:56	0:0	6	g
op	35:57	0:0	6	]
arg	36:36	36:61	5	sce1->sf_idx[(w+w2)*16+g]
water	36:36	0:0	6	sce1
op	36:40	0:0	6	->
water	36:42	0:0	6	sf_idx
op	36:48	0:0	6	[
water	36:49	0:0	6	(
water	36:50	0:0	6	w
op	36:51	0:0	6	+
water	36:52	0:0	6	w2
water	36:54	0:0	6	)
op	36:55	0:0	6	*
water	36:56	0:0	6	16
op	36:58	0:0	6	+
water	36:59	0:0	6	g
op	36:60	0:0	6	]
arg	37:36	37:64	5	sce1->band_type[(w+w2)*16+g]
water	37:36	0:0	6	sce1
op	37:40	0:0	6	->
water	37:42	0:0	6	band_type
op	37:51	0:0	6	[
water	37:52	0:0	6	(
water	37:53	0:0	6	w
op	37:54	0:0	6	+
water	37:55	0:0	6	w2
water	37:57	0:0	6	)
op	37:58	0:0	6	*
water	37:59	0:0	6	16
op	37:61	0:0	6	+
water	37:62	0:0	6	g
op	37:63	0:0	6	]
arg	38:36	38:64	5	s->lambda/band1->threshold
water	38:36	0:0	6	s
op	38:37	0:0	6	->
water	38:39	0:0	6	lambda
op	38:46	0:0	6	/
water	38:48	0:0	6	band1
op	38:53	0:0	6	->
water	38:55	0:0	6	threshold
arg	38:66	38:74	5	INFINITY
water	38:66	0:0	6	INFINITY
arg	38:76	38:80	5	NULL
water	38:76	0:0	6	NULL
arg	38:82	38:83	5	0
water	38:82	0:0	6	0
water	38:84	0:0	4	;
water	39:8	0:0	4	dist2
op	39:14	0:0	4	+=
call	39:17	41:73	4	quantize_band_cost
arg	39:36	39:37	5	s
water	39:36	0:0	6	s
arg	39:39	39:41	5	IS
water	39:39	0:0	6	IS
arg	39:43	39:46	5	I34
water	39:43	0:0	6	I34
arg	39:48	39:70	5	sce0->ics.swb_sizes[g]
water	39:48	0:0	6	sce0
op	39:52	0:0	6	->
water	39:54	0:0	6	ics
op	39:57	0:0	6	.
water	39:58	0:0	6	swb_sizes
op	39:67	0:0	6	[
water	39:68	0:0	6	g
op	39:69	0:0	6	]
arg	40:36	40:45	5	is_sf_idx
water	40:36	0:0	6	is_sf_idx
arg	40:47	40:59	5	is_band_type
water	40:47	0:0	6	is_band_type
arg	41:36	41:54	5	s->lambda/minthr
water	41:36	0:0	6	s
op	41:37	0:0	6	->
water	41:39	0:0	6	lambda
op	41:46	0:0	6	/
water	41:48	0:0	6	minthr
arg	41:56	41:64	5	INFINITY
water	41:56	0:0	6	INFINITY
arg	41:66	41:70	5	NULL
water	41:66	0:0	6	NULL
arg	41:72	41:73	5	0
water	41:72	0:0	6	0
water	41:74	0:0	4	;
for	42:8	45:8	4	(i = 0 ;i < sce0 -> ics . swb_sizes [ g ];i ++)
forinit	42:13	42:18	5	i = 0 ;
water	42:13	0:0	6	i
op	42:15	0:0	6	=
water	42:17	0:0	6	0
water	42:18	0:0	6	;
cond	42:20	42:45	5	i < sce0 -> ics . swb_sizes [ g ]
water	42:20	0:0	6	i
op	42:22	0:0	6	<
water	42:24	0:0	6	sce0
op	42:28	0:0	6	->
water	42:30	0:0	6	ics
op	42:33	0:0	6	.
water	42:34	0:0	6	swb_sizes
op	42:43	0:0	6	[
water	42:44	0:0	6	g
op	42:45	0:0	6	]
forexpr	42:48	42:49	5	i ++
water	42:48	0:0	6	i
op	42:49	0:0	6	++
stmts	42:53	45:8	5	
water	42:53	0:0	6	{
water	43:12	0:0	6	dist_spec_err
op	43:26	0:0	6	+=
water	43:29	0:0	6	(
water	43:30	0:0	6	L34
op	43:33	0:0	6	[
water	43:34	0:0	6	i
op	43:35	0:0	6	]
op	43:37	0:0	6	-
water	43:39	0:0	6	I34
op	43:42	0:0	6	[
water	43:43	0:0	6	i
op	43:44	0:0	6	]
water	43:45	0:0	6	)
op	43:46	0:0	6	*
water	43:47	0:0	6	(
water	43:48	0:0	6	L34
op	43:51	0:0	6	[
water	43:52	0:0	6	i
op	43:53	0:0	6	]
op	43:55	0:0	6	-
water	43:57	0:0	6	I34
op	43:60	0:0	6	[
water	43:61	0:0	6	i
op	43:62	0:0	6	]
water	43:63	0:0	6	)
water	43:64	0:0	6	;
water	44:12	0:0	6	dist_spec_err
op	44:26	0:0	6	+=
water	44:29	0:0	6	(
water	44:30	0:0	6	R34
op	44:33	0:0	6	[
water	44:34	0:0	6	i
op	44:35	0:0	6	]
op	44:37	0:0	6	-
water	44:39	0:0	6	I34
op	44:42	0:0	6	[
water	44:43	0:0	6	i
op	44:44	0:0	6	]
op	44:45	0:0	6	*
water	44:46	0:0	6	e01_34
water	44:52	0:0	6	)
op	44:53	0:0	6	*
water	44:54	0:0	6	(
water	44:55	0:0	6	R34
op	44:58	0:0	6	[
water	44:59	0:0	6	i
op	44:60	0:0	6	]
op	44:62	0:0	6	-
water	44:64	0:0	6	I34
op	44:67	0:0	6	[
water	44:68	0:0	6	i
op	44:69	0:0	6	]
op	44:70	0:0	6	*
water	44:71	0:0	6	e01_34
water	44:77	0:0	6	)
water	44:78	0:0	6	;
water	45:8	0:0	6	}
water	46:8	0:0	4	dist_spec_err
op	46:22	0:0	4	*=
water	46:25	0:0	4	s
op	46:26	0:0	4	->
water	46:28	0:0	4	lambda
op	46:35	0:0	4	/
water	46:37	0:0	4	minthr
water	46:43	0:0	4	;
water	47:8	0:0	4	dist2
op	47:14	0:0	4	+=
water	47:17	0:0	4	dist_spec_err
water	47:30	0:0	4	;
water	48:4	0:0	4	}
water	49:4	0:0	2	is_error
op	49:12	0:0	2	.
water	49:13	0:0	2	pass
op	49:18	0:0	2	=
water	49:20	0:0	2	dist2
op	49:26	0:0	2	<=
water	49:29	0:0	2	dist1
water	49:34	0:0	2	;
water	50:4	0:0	2	is_error
op	50:12	0:0	2	.
water	50:13	0:0	2	phase
op	50:19	0:0	2	=
water	50:21	0:0	2	phase
water	50:26	0:0	2	;
water	51:4	0:0	2	is_error
op	51:12	0:0	2	.
water	51:13	0:0	2	error
op	51:19	0:0	2	=
call	51:21	51:40	2	fabsf
arg	51:27	51:40	3	dist1-dist2
water	51:27	0:0	4	dist1
op	51:33	0:0	4	-
water	51:35	0:0	4	dist2
water	51:41	0:0	2	;
water	52:4	0:0	2	is_error
op	52:12	0:0	2	.
water	52:13	0:0	2	dist1
op	52:19	0:0	2	=
water	52:21	0:0	2	dist1
water	52:26	0:0	2	;
water	53:4	0:0	2	is_error
op	53:12	0:0	2	.
water	53:13	0:0	2	dist2
op	53:19	0:0	2	=
water	53:21	0:0	2	dist2
water	53:26	0:0	2	;
return	54:4	54:19	2	is_error
water	54:11	0:0	3	is_error

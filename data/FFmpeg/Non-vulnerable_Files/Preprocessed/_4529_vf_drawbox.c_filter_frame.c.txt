func	1:0	29:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:60	2	AVFrame *	frame
stmnts	0:0	28:58	1	
decl	3:4	3:41	2	DrawBoxContext	*s
op	3:22	0:0	2	=
water	3:24	0:0	2	inlink
op	3:30	0:0	2	->
water	3:32	0:0	2	dst
op	3:35	0:0	2	->
water	3:37	0:0	2	priv
decl	4:4	4:41	2	int	plane
water	4:13	0:0	2	,
decl	4:4	4:41	2	int	x
water	4:16	0:0	2	,
decl	4:4	4:41	2	int	y
water	4:19	0:0	2	,
decl	4:4	4:41	2	int	xb
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	x
water	4:30	0:0	2	,
decl	4:4	4:41	2	int	yb
op	4:35	0:0	2	=
water	4:37	0:0	2	s
op	4:38	0:0	2	->
water	4:40	0:0	2	y
decl	5:4	5:25	2	unsigned char	*row[4]
for	6:4	27:4	2	(y =FFMAX (yb ,0 ) ;y < frame -> height && y < ( yb + s -> h );y ++)
forinit	6:9	6:25	3	y =FFMAX (yb ,0 ) ;
water	6:9	0:0	4	y
op	6:11	0:0	4	=
call	6:13	6:24	4	FFMAX
arg	6:19	6:21	5	yb
water	6:19	0:0	6	yb
arg	6:23	6:24	5	0
water	6:23	0:0	6	0
water	6:25	0:0	4	;
cond	6:27	6:62	3	y < frame -> height && y < ( yb + s -> h )
water	6:27	0:0	4	y
op	6:29	0:0	4	<
water	6:31	0:0	4	frame
op	6:36	0:0	4	->
water	6:38	0:0	4	height
op	6:45	0:0	4	&&
water	6:48	0:0	4	y
op	6:50	0:0	4	<
water	6:52	0:0	4	(
water	6:53	0:0	4	yb
op	6:56	0:0	4	+
water	6:58	0:0	4	s
op	6:59	0:0	4	->
water	6:61	0:0	4	h
water	6:62	0:0	4	)
forexpr	6:65	6:66	3	y ++
water	6:65	0:0	4	y
op	6:66	0:0	4	++
stmts	6:70	27:4	3	
water	6:70	0:0	4	{
water	7:8	0:0	4	row
op	7:11	0:0	4	[
water	7:12	0:0	4	0
op	7:13	0:0	4	]
op	7:15	0:0	4	=
water	7:17	0:0	4	frame
op	7:22	0:0	4	->
water	7:24	0:0	4	data
op	7:28	0:0	4	[
water	7:29	0:0	4	0
op	7:30	0:0	4	]
op	7:32	0:0	4	+
water	7:34	0:0	4	y
op	7:36	0:0	4	*
water	7:38	0:0	4	frame
op	7:43	0:0	4	->
water	7:45	0:0	4	linesize
op	7:53	0:0	4	[
water	7:54	0:0	4	0
op	7:55	0:0	4	]
water	7:56	0:0	4	;
for	8:8	10:56	4	(plane = 1 ;plane < 3;plane ++)
forinit	8:13	8:22	5	plane = 1 ;
water	8:13	0:0	6	plane
op	8:19	0:0	6	=
water	8:21	0:0	6	1
water	8:22	0:0	6	;
cond	8:24	8:32	5	plane < 3
water	8:24	0:0	6	plane
op	8:30	0:0	6	<
water	8:32	0:0	6	3
forexpr	8:35	8:40	5	plane ++
water	8:35	0:0	6	plane
op	8:40	0:0	6	++
stmts	9:12	10:56	5	
water	9:12	0:0	6	row
op	9:15	0:0	6	[
water	9:16	0:0	6	plane
op	9:21	0:0	6	]
op	9:23	0:0	6	=
water	9:25	0:0	6	frame
op	9:30	0:0	6	->
water	9:32	0:0	6	data
op	9:36	0:0	6	[
water	9:37	0:0	6	plane
op	9:42	0:0	6	]
op	9:44	0:0	6	+
water	10:17	0:0	6	frame
op	10:22	0:0	6	->
water	10:24	0:0	6	linesize
op	10:32	0:0	6	[
water	10:33	0:0	6	plane
op	10:38	0:0	6	]
op	10:40	0:0	6	*
water	10:42	0:0	6	(
water	10:43	0:0	6	y
op	10:45	0:0	6	>>
water	10:48	0:0	6	s
op	10:49	0:0	6	->
water	10:51	0:0	6	vsub
water	10:55	0:0	6	)
water	10:56	0:0	6	;
if	11:8	16:8	4	(s -> invert_color)
cond	11:12	11:15	5	s -> invert_color
water	11:12	0:0	6	s
op	11:13	0:0	6	->
water	11:15	0:0	6	invert_color
stmts	11:29	16:8	5	
water	11:29	0:0	6	{
for	12:12	15:48	6	(x =FFMAX (xb ,0 ) ;x < xb + s -> w && x < frame -> width;x ++)
forinit	12:17	12:33	7	x =FFMAX (xb ,0 ) ;
water	12:17	0:0	8	x
op	12:19	0:0	8	=
call	12:21	12:32	8	FFMAX
arg	12:27	12:29	9	xb
water	12:27	0:0	10	xb
arg	12:31	12:32	9	0
water	12:31	0:0	10	0
water	12:33	0:0	8	;
cond	12:35	12:63	7	x < xb + s -> w && x < frame -> width
water	12:35	0:0	8	x
op	12:37	0:0	8	<
water	12:39	0:0	8	xb
op	12:42	0:0	8	+
water	12:44	0:0	8	s
op	12:45	0:0	8	->
water	12:47	0:0	8	w
op	12:49	0:0	8	&&
water	12:52	0:0	8	x
op	12:54	0:0	8	<
water	12:56	0:0	8	frame
op	12:61	0:0	8	->
water	12:63	0:0	8	width
forexpr	12:70	12:71	7	x ++
water	12:70	0:0	8	x
op	12:71	0:0	8	++
stmts	13:16	15:48	7	
if	13:16	15:48	8	(( y - yb < s -> thickness ) || ( yb + s -> h - 1 - y < s -> thickness ) || ( x - xb < s -> thickness ) || ( xb + s -> w - 1 - x < s -> thickness ))
cond	13:20	14:80	9	( y - yb < s -> thickness ) || ( yb + s -> h - 1 - y < s -> thickness ) || ( x - xb < s -> thickness ) || ( xb + s -> w - 1 - x < s -> thickness )
water	13:20	0:0	10	(
water	13:21	0:0	10	y
op	13:23	0:0	10	-
water	13:25	0:0	10	yb
op	13:28	0:0	10	<
water	13:30	0:0	10	s
op	13:31	0:0	10	->
water	13:33	0:0	10	thickness
water	13:42	0:0	10	)
op	13:44	0:0	10	||
water	13:47	0:0	10	(
water	13:48	0:0	10	yb
op	13:51	0:0	10	+
water	13:53	0:0	10	s
op	13:54	0:0	10	->
water	13:56	0:0	10	h
op	13:58	0:0	10	-
water	13:60	0:0	10	1
op	13:62	0:0	10	-
water	13:64	0:0	10	y
op	13:66	0:0	10	<
water	13:68	0:0	10	s
op	13:69	0:0	10	->
water	13:71	0:0	10	thickness
water	13:80	0:0	10	)
op	13:82	0:0	10	||
water	14:20	0:0	10	(
water	14:21	0:0	10	x
op	14:23	0:0	10	-
water	14:25	0:0	10	xb
op	14:28	0:0	10	<
water	14:30	0:0	10	s
op	14:31	0:0	10	->
water	14:33	0:0	10	thickness
water	14:42	0:0	10	)
op	14:44	0:0	10	||
water	14:47	0:0	10	(
water	14:48	0:0	10	xb
op	14:51	0:0	10	+
water	14:53	0:0	10	s
op	14:54	0:0	10	->
water	14:56	0:0	10	w
op	14:58	0:0	10	-
water	14:60	0:0	10	1
op	14:62	0:0	10	-
water	14:64	0:0	10	x
op	14:66	0:0	10	<
water	14:68	0:0	10	s
op	14:69	0:0	10	->
water	14:71	0:0	10	thickness
water	14:80	0:0	10	)
stmts	15:20	15:48	9	
water	15:20	0:0	10	row
op	15:23	0:0	10	[
water	15:24	0:0	10	0
op	15:25	0:0	10	]
op	15:26	0:0	10	[
water	15:27	0:0	10	x
op	15:28	0:0	10	]
op	15:30	0:0	10	=
water	15:32	0:0	10	0
water	15:33	0:0	10	xff
op	15:37	0:0	10	-
water	15:39	0:0	10	row
op	15:42	0:0	10	[
water	15:43	0:0	10	0
op	15:44	0:0	10	]
op	15:45	0:0	10	[
water	15:46	0:0	10	x
op	15:47	0:0	10	]
water	15:48	0:0	10	;
water	16:8	0:0	6	}
else	16:10	26:8	4
stmts	16:15	26:8	5	
water	16:15	0:0	6	{
for	17:12	25:12	6	(x =FFMAX (xb ,0 ) ;x < xb + s -> w && x < frame -> width;x ++)
forinit	17:17	17:33	7	x =FFMAX (xb ,0 ) ;
water	17:17	0:0	8	x
op	17:19	0:0	8	=
call	17:21	17:32	8	FFMAX
arg	17:27	17:29	9	xb
water	17:27	0:0	10	xb
arg	17:31	17:32	9	0
water	17:31	0:0	10	0
water	17:33	0:0	8	;
cond	17:35	17:63	7	x < xb + s -> w && x < frame -> width
water	17:35	0:0	8	x
op	17:37	0:0	8	<
water	17:39	0:0	8	xb
op	17:42	0:0	8	+
water	17:44	0:0	8	s
op	17:45	0:0	8	->
water	17:47	0:0	8	w
op	17:49	0:0	8	&&
water	17:52	0:0	8	x
op	17:54	0:0	8	<
water	17:56	0:0	8	frame
op	17:61	0:0	8	->
water	17:63	0:0	8	width
forexpr	17:70	17:71	7	x ++
water	17:70	0:0	8	x
op	17:71	0:0	8	++
stmts	17:75	25:12	7	
water	17:75	0:0	8	{
decl	18:16	18:60	8	double	alpha
op	18:29	0:0	8	=
water	18:31	0:0	8	(
water	18:32	0:0	8	double
water	18:38	0:0	8	)
water	18:39	0:0	8	s
op	18:40	0:0	8	->
water	18:42	0:0	8	yuv_color
op	18:51	0:0	8	[
water	18:52	0:0	8	A
op	18:53	0:0	8	]
op	18:55	0:0	8	/
water	18:57	0:0	8	255
if	19:16	24:16	8	(( y - yb < s -> thickness ) || ( yb + s -> h - 1 - y < s -> thickness ) || ( x - xb < s -> thickness ) || ( xb + s -> w - 1 - x < s -> thickness ))
cond	19:20	20:80	9	( y - yb < s -> thickness ) || ( yb + s -> h - 1 - y < s -> thickness ) || ( x - xb < s -> thickness ) || ( xb + s -> w - 1 - x < s -> thickness )
water	19:20	0:0	10	(
water	19:21	0:0	10	y
op	19:23	0:0	10	-
water	19:25	0:0	10	yb
op	19:28	0:0	10	<
water	19:30	0:0	10	s
op	19:31	0:0	10	->
water	19:33	0:0	10	thickness
water	19:42	0:0	10	)
op	19:44	0:0	10	||
water	19:47	0:0	10	(
water	19:48	0:0	10	yb
op	19:51	0:0	10	+
water	19:53	0:0	10	s
op	19:54	0:0	10	->
water	19:56	0:0	10	h
op	19:58	0:0	10	-
water	19:60	0:0	10	1
op	19:62	0:0	10	-
water	19:64	0:0	10	y
op	19:66	0:0	10	<
water	19:68	0:0	10	s
op	19:69	0:0	10	->
water	19:71	0:0	10	thickness
water	19:80	0:0	10	)
op	19:82	0:0	10	||
water	20:20	0:0	10	(
water	20:21	0:0	10	x
op	20:23	0:0	10	-
water	20:25	0:0	10	xb
op	20:28	0:0	10	<
water	20:30	0:0	10	s
op	20:31	0:0	10	->
water	20:33	0:0	10	thickness
water	20:42	0:0	10	)
op	20:44	0:0	10	||
water	20:47	0:0	10	(
water	20:48	0:0	10	xb
op	20:51	0:0	10	+
water	20:53	0:0	10	s
op	20:54	0:0	10	->
water	20:56	0:0	10	w
op	20:58	0:0	10	-
water	20:60	0:0	10	1
op	20:62	0:0	10	-
water	20:64	0:0	10	x
op	20:66	0:0	10	<
water	20:68	0:0	10	s
op	20:69	0:0	10	->
water	20:71	0:0	10	thickness
water	20:80	0:0	10	)
stmts	20:83	24:16	9	
water	20:83	0:0	10	{
water	21:20	0:0	10	row
op	21:23	0:0	10	[
water	21:24	0:0	10	0
op	21:25	0:0	10	]
op	21:26	0:0	10	[
water	21:27	0:0	10	x
op	21:45	0:0	10	]
op	21:47	0:0	10	=
water	21:49	0:0	10	(
water	21:50	0:0	10	1
op	21:52	0:0	10	-
water	21:54	0:0	10	alpha
water	21:59	0:0	10	)
op	21:61	0:0	10	*
water	21:63	0:0	10	row
op	21:66	0:0	10	[
water	21:67	0:0	10	0
op	21:68	0:0	10	]
op	21:69	0:0	10	[
water	21:70	0:0	10	x
op	21:88	0:0	10	]
op	21:90	0:0	10	+
water	21:92	0:0	10	alpha
op	21:98	0:0	10	*
water	21:100	0:0	10	s
op	21:101	0:0	10	->
water	21:103	0:0	10	yuv_color
op	21:112	0:0	10	[
water	21:113	0:0	10	Y
op	21:114	0:0	10	]
water	21:115	0:0	10	;
water	22:20	0:0	10	row
op	22:23	0:0	10	[
water	22:24	0:0	10	1
op	22:25	0:0	10	]
op	22:26	0:0	10	[
water	22:27	0:0	10	x
op	22:29	0:0	10	>>
water	22:32	0:0	10	s
op	22:33	0:0	10	->
water	22:35	0:0	10	hsub
op	22:39	0:0	10	]
op	22:41	0:0	10	=
water	22:43	0:0	10	(
water	22:44	0:0	10	1
op	22:46	0:0	10	-
water	22:48	0:0	10	alpha
water	22:53	0:0	10	)
op	22:55	0:0	10	*
water	22:57	0:0	10	row
op	22:60	0:0	10	[
water	22:61	0:0	10	1
op	22:62	0:0	10	]
op	22:63	0:0	10	[
water	22:64	0:0	10	x
op	22:66	0:0	10	>>
water	22:69	0:0	10	s
op	22:70	0:0	10	->
water	22:72	0:0	10	hsub
op	22:76	0:0	10	]
op	22:78	0:0	10	+
water	22:80	0:0	10	alpha
op	22:86	0:0	10	*
water	22:88	0:0	10	s
op	22:89	0:0	10	->
water	22:91	0:0	10	yuv_color
op	22:100	0:0	10	[
water	22:101	0:0	10	U
op	22:102	0:0	10	]
water	22:103	0:0	10	;
water	23:20	0:0	10	row
op	23:23	0:0	10	[
water	23:24	0:0	10	2
op	23:25	0:0	10	]
op	23:26	0:0	10	[
water	23:27	0:0	10	x
op	23:29	0:0	10	>>
water	23:32	0:0	10	s
op	23:33	0:0	10	->
water	23:35	0:0	10	hsub
op	23:39	0:0	10	]
op	23:41	0:0	10	=
water	23:43	0:0	10	(
water	23:44	0:0	10	1
op	23:46	0:0	10	-
water	23:48	0:0	10	alpha
water	23:53	0:0	10	)
op	23:55	0:0	10	*
water	23:57	0:0	10	row
op	23:60	0:0	10	[
water	23:61	0:0	10	2
op	23:62	0:0	10	]
op	23:63	0:0	10	[
water	23:64	0:0	10	x
op	23:66	0:0	10	>>
water	23:69	0:0	10	s
op	23:70	0:0	10	->
water	23:72	0:0	10	hsub
op	23:76	0:0	10	]
op	23:78	0:0	10	+
water	23:80	0:0	10	alpha
op	23:86	0:0	10	*
water	23:88	0:0	10	s
op	23:89	0:0	10	->
water	23:91	0:0	10	yuv_color
op	23:100	0:0	10	[
water	23:101	0:0	10	V
op	23:102	0:0	10	]
water	23:103	0:0	10	;
water	24:16	0:0	10	}
water	25:12	0:0	8	}
water	26:8	0:0	6	}
water	27:4	0:0	4	}
return	28:4	28:58	2	ff_filter_frame(inlink->dst->outputs[0],frame)
call	28:11	28:57	3	ff_filter_frame
arg	28:27	28:50	4	inlink->dst->outputs[0]
water	28:27	0:0	5	inlink
op	28:33	0:0	5	->
water	28:35	0:0	5	dst
op	28:38	0:0	5	->
water	28:40	0:0	5	outputs
op	28:47	0:0	5	[
water	28:48	0:0	5	0
op	28:49	0:0	5	]
arg	28:52	28:57	4	frame
water	28:52	0:0	5	frame

func	1:0	41:0	0	static int	dxva2_get_decoder_configuration
params	1:42	0:0	1	
param	1:43	1:60	2	AVCodecContext *	s
param	1:62	1:85	2	const GUID *	device_guid
param	2:43	2:70	2	const DXVA2_VideoDesc *	desc
param	3:43	3:76	2	DXVA2_ConfigPictureDecode *	config
stmnts	0:0	40:12	1	
decl	5:4	5:33	2	InputStream	*ist
op	5:22	0:0	2	=
water	5:24	0:0	2	s
op	5:25	0:0	2	->
water	5:27	0:0	2	opaque
decl	6:4	6:84	2	int	loglevel
op	6:17	0:0	2	=
water	6:19	0:0	2	(
water	6:20	0:0	2	ist
op	6:23	0:0	2	->
water	6:25	0:0	2	hwaccel_id
op	6:36	0:0	2	==
water	6:39	0:0	2	HWACCEL_AUTO
water	6:51	0:0	2	)
water	6:53	0:0	2	?
water	6:55	0:0	2	AV_LOG_VERBOSE
water	6:70	0:0	2	:
water	6:72	0:0	2	AV_LOG_ERROR
decl	7:4	7:40	2	DXVA2Context	*ctx
op	7:22	0:0	2	=
water	7:24	0:0	2	ist
op	7:27	0:0	2	->
water	7:29	0:0	2	hwaccel_ctx
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	cfg_count
op	8:23	0:0	2	=
water	8:25	0:0	2	0
water	8:26	0:0	2	,
water	8:28	0:0	2	best_score
op	8:39	0:0	2	=
water	8:41	0:0	2	0
water	8:42	0:0	2	;
decl	9:4	9:46	2	DXVA2_ConfigPictureDecode	*cfg_list
op	9:40	0:0	2	=
water	9:42	0:0	2	NULL
decl	10:4	10:46	2	DXVA2_ConfigPictureDecode	best_cfg
op	10:39	0:0	2	=
water	10:41	0:0	2	{
water	10:42	0:0	2	{
water	10:43	0:0	2	0
water	10:44	0:0	2	}
water	10:45	0:0	2	}
decl	11:4	11:14	2	HRESULT	hr
decl	12:4	12:9	2	int	i
water	13:4	0:0	2	hr
op	13:7	0:0	2	=
call	13:9	13:130	2	IDirectXVideoDecoderService_GetDecoderConfigurations
arg	13:62	13:82	3	ctx->decoder_service
water	13:62	0:0	4	ctx
op	13:65	0:0	4	->
water	13:67	0:0	4	decoder_service
arg	13:84	13:95	3	device_guid
water	13:84	0:0	4	device_guid
arg	13:97	13:101	3	desc
water	13:97	0:0	4	desc
arg	13:103	13:107	3	NULL
water	13:103	0:0	4	NULL
arg	13:109	13:119	3	&cfg_count
op	13:109	0:0	4	&
water	13:110	0:0	4	cfg_count
arg	13:121	13:130	3	&cfg_list
op	13:121	0:0	4	&
water	13:122	0:0	4	cfg_list
water	13:131	0:0	2	;
if	14:4	17:4	2	(FAILED (hr ))
cond	14:8	14:17	3	FAILED (hr )
call	14:8	14:17	4	FAILED
arg	14:15	14:17	5	hr
water	14:15	0:0	6	hr
stmts	14:20	17:4	3	
water	14:20	0:0	4	{
call	15:8	15:76	4	av_log
arg	15:15	15:19	5	NULL
water	15:15	0:0	6	NULL
arg	15:21	15:29	5	loglevel
water	15:21	0:0	6	loglevel
arg	15:31	15:76	5	"Unable to retrieve decoder configurations\n"
water	15:31	0:0	6	"Unable to retrieve decoder configurations\n"
water	15:77	0:0	4	;
return	16:8	16:30	4	AVERROR(EINVAL)
call	16:15	16:29	5	AVERROR
arg	16:23	16:29	6	EINVAL
water	16:23	0:0	7	EINVAL
water	17:4	0:0	4	}
for	18:4	33:4	2	(i = 0 ;i < cfg_count;i ++)
forinit	18:9	18:14	3	i = 0 ;
water	18:9	0:0	4	i
op	18:11	0:0	4	=
water	18:13	0:0	4	0
water	18:14	0:0	4	;
cond	18:16	18:20	3	i < cfg_count
water	18:16	0:0	4	i
op	18:18	0:0	4	<
water	18:20	0:0	4	cfg_count
forexpr	18:31	18:32	3	i ++
water	18:31	0:0	4	i
op	18:32	0:0	4	++
stmts	18:36	33:4	3	
water	18:36	0:0	4	{
decl	19:8	19:53	4	DXVA2_ConfigPictureDecode	*cfg
op	19:39	0:0	4	=
op	19:41	0:0	4	&
water	19:42	0:0	4	cfg_list
op	19:50	0:0	4	[
water	19:51	0:0	4	i
op	19:52	0:0	4	]
water	20:8	0:0	4	unsigned
water	20:17	0:0	4	score
water	20:22	0:0	4	;
if	21:8	22:21	4	(cfg -> ConfigBitstreamRaw == 1)
cond	21:12	21:39	5	cfg -> ConfigBitstreamRaw == 1
water	21:12	0:0	6	cfg
op	21:15	0:0	6	->
water	21:17	0:0	6	ConfigBitstreamRaw
op	21:36	0:0	6	==
water	21:39	0:0	6	1
stmts	22:12	22:21	5	
water	22:12	0:0	6	score
op	22:18	0:0	6	=
water	22:20	0:0	6	1
water	22:21	0:0	6	;
else	23:8	24:21	4
stmts	23:13	24:21	5	
if	23:13	24:21	6	(s -> codec_id == AV_CODEC_ID_H264 && cfg -> ConfigBitstreamRaw == 2)
cond	23:17	23:79	7	s -> codec_id == AV_CODEC_ID_H264 && cfg -> ConfigBitstreamRaw == 2
water	23:17	0:0	8	s
op	23:18	0:0	8	->
water	23:20	0:0	8	codec_id
op	23:29	0:0	8	==
water	23:32	0:0	8	AV_CODEC_ID_H264
op	23:49	0:0	8	&&
water	23:52	0:0	8	cfg
op	23:55	0:0	8	->
water	23:57	0:0	8	ConfigBitstreamRaw
op	23:76	0:0	8	==
water	23:79	0:0	8	2
stmts	24:12	24:21	7	
water	24:12	0:0	8	score
op	24:18	0:0	8	=
water	24:20	0:0	8	2
water	24:21	0:0	8	;
else	25:8	26:20	4
stmts	26:12	26:20	5	
continue	26:12	26:20	6	
if	27:8	28:23	4	(IsEqualGUID (& cfg -> guidConfigBitstreamEncryption ,& DXVA2_NoEncrypt ))
cond	27:12	27:77	5	IsEqualGUID (& cfg -> guidConfigBitstreamEncryption ,& DXVA2_NoEncrypt )
call	27:12	27:77	6	IsEqualGUID
arg	27:24	27:59	7	&cfg->guidConfigBitstreamEncryption
op	27:24	0:0	8	&
water	27:25	0:0	8	cfg
op	27:28	0:0	8	->
water	27:30	0:0	8	guidConfigBitstreamEncryption
arg	27:61	27:77	7	&DXVA2_NoEncrypt
op	27:61	0:0	8	&
water	27:62	0:0	8	DXVA2_NoEncrypt
stmts	28:12	28:23	5	
water	28:12	0:0	6	score
op	28:18	0:0	6	+=
water	28:21	0:0	6	16
water	28:23	0:0	6	;
if	29:8	32:8	4	(score > best_score)
cond	29:12	29:20	5	score > best_score
water	29:12	0:0	6	score
op	29:18	0:0	6	>
water	29:20	0:0	6	best_score
stmts	29:32	32:8	5	
water	29:32	0:0	6	{
water	30:12	0:0	6	best_score
op	30:23	0:0	6	=
water	30:25	0:0	6	score
water	30:30	0:0	6	;
water	31:12	0:0	6	best_cfg
op	31:23	0:0	6	=
op	31:25	0:0	6	*
water	31:26	0:0	6	cfg
water	31:29	0:0	6	;
water	32:8	0:0	6	}
water	33:4	0:0	4	}
call	34:4	34:26	2	CoTaskMemFree
arg	34:18	34:26	3	cfg_list
water	34:18	0:0	4	cfg_list
water	34:27	0:0	2	;
if	35:4	38:4	2	(! best_score)
cond	35:8	35:9	3	! best_score
op	35:8	0:0	4	!
water	35:9	0:0	4	best_score
stmts	35:21	38:4	3	
water	35:21	0:0	4	{
call	36:8	36:75	4	av_log
arg	36:15	36:19	5	NULL
water	36:15	0:0	6	NULL
arg	36:21	36:29	5	loglevel
water	36:21	0:0	6	loglevel
arg	36:31	36:75	5	"No valid decoder configuration available\n"
water	36:31	0:0	6	"No valid decoder configuration available\n"
water	36:76	0:0	4	;
return	37:8	37:30	4	AVERROR(EINVAL)
call	37:15	37:29	5	AVERROR
arg	37:23	37:29	6	EINVAL
water	37:23	0:0	7	EINVAL
water	38:4	0:0	4	}
op	39:4	0:0	2	*
water	39:5	0:0	2	config
op	39:12	0:0	2	=
water	39:14	0:0	2	best_cfg
water	39:22	0:0	2	;
return	40:4	40:12	2	0
water	40:11	0:0	3	0

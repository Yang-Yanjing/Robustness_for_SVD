func	1:0	13:0	0	static void	pulse_event
params	1:23	0:0	1	
param	1:24	1:39	2	pa_context *	ctx
param	1:41	1:71	2	pa_subscription_event_type_t	t
param	2:24	2:36	2	uint32_t	idx
param	2:38	2:52	2	void *	userdata
stmnts	0:0	12:4	1	
decl	4:4	4:33	2	AVFormatContext	*h
op	4:23	0:0	2	=
water	4:25	0:0	2	userdata
decl	5:4	5:31	2	PulseData	*s
op	5:17	0:0	2	=
water	5:19	0:0	2	h
op	5:20	0:0	2	->
water	5:22	0:0	2	priv_data
if	6:4	7:14	2	(s -> ctx != ctx)
cond	6:8	6:18	3	s -> ctx != ctx
water	6:8	0:0	4	s
op	6:9	0:0	4	->
water	6:11	0:0	4	ctx
op	6:15	0:0	4	!=
water	6:18	0:0	4	ctx
stmts	7:8	7:14	3	
return	7:8	7:14	4	
if	8:4	12:4	2	(( t & PA_SUBSCRIPTION_EVENT_FACILITY_MASK ) == PA_SUBSCRIPTION_EVENT_SINK_INPUT)
cond	8:8	8:53	3	( t & PA_SUBSCRIPTION_EVENT_FACILITY_MASK ) == PA_SUBSCRIPTION_EVENT_SINK_INPUT
water	8:8	0:0	4	(
water	8:9	0:0	4	t
op	8:11	0:0	4	&
water	8:13	0:0	4	PA_SUBSCRIPTION_EVENT_FACILITY_MASK
water	8:48	0:0	4	)
op	8:50	0:0	4	==
water	8:53	0:0	4	PA_SUBSCRIPTION_EVENT_SINK_INPUT
stmts	8:87	12:4	3	
water	8:87	0:0	4	{
if	9:8	11:43	4	(( t & PA_SUBSCRIPTION_EVENT_TYPE_MASK ) == PA_SUBSCRIPTION_EVENT_CHANGE)
cond	9:12	9:53	5	( t & PA_SUBSCRIPTION_EVENT_TYPE_MASK ) == PA_SUBSCRIPTION_EVENT_CHANGE
water	9:12	0:0	6	(
water	9:13	0:0	6	t
op	9:15	0:0	6	&
water	9:17	0:0	6	PA_SUBSCRIPTION_EVENT_TYPE_MASK
water	9:48	0:0	6	)
op	9:50	0:0	6	==
water	9:53	0:0	6	PA_SUBSCRIPTION_EVENT_CHANGE
stmts	11:12	11:43	5	
call	11:12	11:42	6	pulse_update_sink_input_info
arg	11:41	11:42	7	h
water	11:41	0:0	8	h
water	11:43	0:0	6	;
water	12:4	0:0	4	}

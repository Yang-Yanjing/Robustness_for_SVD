func	1:0	17:0	0	static void	ring2_test
params	1:22	0:0	1	
param	1:23	1:35	2	uint8_t *	dst
param	1:37	1:53	2	int	dst_linesize
param	1:55	1:62	2	int	off
stmnts	0:0	16:4	1	
decl	3:4	3:12	2	int	x
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	y
for	4:4	16:4	2	(y = 0 ;y < 16 * 16;y ++)
forinit	4:9	4:14	3	y = 0 ;
water	4:9	0:0	4	y
op	4:11	0:0	4	=
water	4:13	0:0	4	0
water	4:14	0:0	4	;
cond	4:16	4:23	3	y < 16 * 16
water	4:16	0:0	4	y
op	4:18	0:0	4	<
water	4:20	0:0	4	16
op	4:22	0:0	4	*
water	4:23	0:0	4	16
forexpr	4:27	4:28	3	y ++
water	4:27	0:0	4	y
op	4:28	0:0	4	++
stmts	4:32	16:4	3	
water	4:32	0:0	4	{
for	5:8	15:8	4	(x = 0 ;x < 16 * 16;x ++)
forinit	5:13	5:18	5	x = 0 ;
water	5:13	0:0	6	x
op	5:15	0:0	6	=
water	5:17	0:0	6	0
water	5:18	0:0	6	;
cond	5:20	5:27	5	x < 16 * 16
water	5:20	0:0	6	x
op	5:22	0:0	6	<
water	5:24	0:0	6	16
op	5:26	0:0	6	*
water	5:27	0:0	6	16
forexpr	5:31	5:32	5	x ++
water	5:31	0:0	6	x
op	5:32	0:0	6	++
stmts	5:36	15:8	5	
water	5:36	0:0	6	{
decl	6:12	6:66	6	double	d
op	6:21	0:0	6	=
call	6:23	6:65	7	sqrt
arg	6:28	6:65	8	(x-8*16)*(x-8*16)+(y-8*16)*(y-8*16)
water	6:28	0:0	9	(
water	6:29	0:0	9	x
op	6:30	0:0	9	-
water	6:31	0:0	9	8
op	6:32	0:0	9	*
water	6:33	0:0	9	16
water	6:35	0:0	9	)
op	6:36	0:0	9	*
water	6:37	0:0	9	(
water	6:38	0:0	9	x
op	6:39	0:0	9	-
water	6:40	0:0	9	8
op	6:41	0:0	9	*
water	6:42	0:0	9	16
water	6:44	0:0	9	)
op	6:46	0:0	9	+
water	6:48	0:0	9	(
water	6:49	0:0	9	y
op	6:50	0:0	9	-
water	6:51	0:0	9	8
op	6:52	0:0	9	*
water	6:53	0:0	9	16
water	6:55	0:0	9	)
op	6:56	0:0	9	*
water	6:57	0:0	9	(
water	6:58	0:0	9	y
op	6:59	0:0	9	-
water	6:60	0:0	9	8
op	6:61	0:0	9	*
water	6:62	0:0	9	16
water	6:64	0:0	9	)
decl	7:12	7:41	6	double	r
op	7:21	0:0	6	=
water	7:23	0:0	6	d
op	7:24	0:0	6	/
water	7:25	0:0	6	20
op	7:28	0:0	6	-
call	7:30	7:40	7	(int)
arg	7:36	7:40	8	d/20
water	7:36	0:0	9	d
op	7:37	0:0	9	/
water	7:38	0:0	9	20
if	8:12	11:12	6	(r < off / 30 . 0)
cond	8:16	8:27	7	r < off / 30 . 0
water	8:16	0:0	8	r
op	8:18	0:0	8	<
water	8:20	0:0	8	off
op	8:23	0:0	8	/
water	8:24	0:0	8	30
op	8:26	0:0	8	.
water	8:27	0:0	8	0
stmts	8:30	11:12	7	
water	8:30	0:0	8	{
water	9:16	0:0	8	dst
op	9:19	0:0	8	[
water	9:20	0:0	8	x
op	9:22	0:0	8	+
water	9:24	0:0	8	y
op	9:25	0:0	8	*
water	9:26	0:0	8	dst_linesize
op	9:38	0:0	8	]
op	9:44	0:0	8	=
water	9:46	0:0	8	255
water	9:49	0:0	8	;
water	10:16	0:0	8	dst
op	10:19	0:0	8	[
water	10:20	0:0	8	x
op	10:22	0:0	8	+
water	10:24	0:0	8	y
op	10:25	0:0	8	*
water	10:26	0:0	8	dst_linesize
op	10:38	0:0	8	+
water	10:39	0:0	8	256
op	10:42	0:0	8	]
op	10:44	0:0	8	=
water	10:46	0:0	8	0
water	10:47	0:0	8	;
water	11:12	0:0	8	}
else	11:14	14:12	6
stmts	11:19	14:12	7	
water	11:19	0:0	8	{
water	12:16	0:0	8	dst
op	12:19	0:0	8	[
water	12:20	0:0	8	x
op	12:22	0:0	8	+
water	12:24	0:0	8	y
op	12:25	0:0	8	*
water	12:26	0:0	8	dst_linesize
op	12:38	0:0	8	]
op	12:44	0:0	8	=
water	12:46	0:0	8	x
water	12:47	0:0	8	;
water	13:16	0:0	8	dst
op	13:19	0:0	8	[
water	13:20	0:0	8	x
op	13:22	0:0	8	+
water	13:24	0:0	8	y
op	13:25	0:0	8	*
water	13:26	0:0	8	dst_linesize
op	13:38	0:0	8	+
water	13:39	0:0	8	256
op	13:42	0:0	8	]
op	13:44	0:0	8	=
water	13:46	0:0	8	x
water	13:47	0:0	8	;
water	14:12	0:0	8	}
water	15:8	0:0	6	}
water	16:4	0:0	4	}

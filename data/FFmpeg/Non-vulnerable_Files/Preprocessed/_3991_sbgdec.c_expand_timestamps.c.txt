func	1:0	51:0	0	static void	expand_timestamps
params	1:29	0:0	1	
param	1:30	1:39	2	void *	log
param	1:41	1:61	2	struct sbg_script *	s
stmnts	0:0	50:4	1	
decl	3:4	3:21	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:21	2	int	nb_rel
op	3:18	0:0	2	=
water	3:20	0:0	2	0
decl	4:4	4:34	2	int64_t	now
water	4:15	0:0	2	,
decl	4:4	4:34	2	int64_t	cur_ts
water	4:23	0:0	2	,
decl	4:4	4:34	2	int64_t	delta
op	4:31	0:0	2	=
water	4:33	0:0	2	0
for	5:4	6:43	2	(i = 0 ;i < s -> nb_tseq;i ++)
forinit	5:9	5:14	3	i = 0 ;
water	5:9	0:0	4	i
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:23	3	i < s -> nb_tseq
water	5:16	0:0	4	i
op	5:18	0:0	4	<
water	5:20	0:0	4	s
op	5:21	0:0	4	->
water	5:23	0:0	4	nb_tseq
forexpr	5:32	5:33	3	i ++
water	5:32	0:0	4	i
op	5:33	0:0	4	++
stmts	6:8	6:43	3	
water	6:8	0:0	4	nb_rel
op	6:15	0:0	4	+=
water	6:18	0:0	4	s
op	6:19	0:0	4	->
water	6:21	0:0	4	tseq
op	6:25	0:0	4	[
water	6:26	0:0	4	i
op	6:27	0:0	4	]
op	6:28	0:0	4	.
water	6:29	0:0	4	ts
op	6:31	0:0	4	.
water	6:32	0:0	4	type
op	6:37	0:0	4	==
water	6:40	0:0	4	'N'
water	6:43	0:0	4	;
if	7:4	13:4	2	(nb_rel == s -> nb_tseq)
cond	7:8	7:21	3	nb_rel == s -> nb_tseq
water	7:8	0:0	4	nb_rel
op	7:15	0:0	4	==
water	7:18	0:0	4	s
op	7:19	0:0	4	->
water	7:21	0:0	4	nb_tseq
stmts	7:30	13:4	3	
water	7:30	0:0	4	{
water	9:8	0:0	4	now
op	9:12	0:0	4	=
water	9:14	0:0	4	0
water	9:15	0:0	4	;
if	10:8	12:71	4	(s -> start_ts != AV_NOPTS_VALUE)
cond	10:12	10:27	5	s -> start_ts != AV_NOPTS_VALUE
water	10:12	0:0	6	s
op	10:13	0:0	6	->
water	10:15	0:0	6	start_ts
op	10:24	0:0	6	!=
water	10:27	0:0	6	AV_NOPTS_VALUE
stmts	11:12	12:71	5	
call	11:12	12:70	6	av_log
arg	11:19	11:22	7	log
water	11:19	0:0	8	log
arg	11:24	11:38	7	AV_LOG_WARNING
water	11:24	0:0	8	AV_LOG_WARNING
arg	12:19	12:70	7	"Start time ignored in a purely relative script.\n"
water	12:19	0:0	8	"Start time ignored in a purely relative script.\n"
water	12:71	0:0	6	;
water	13:4	0:0	4	}
else	13:6	19:4	2
stmts	13:11	19:4	3	
if	13:11	19:4	4	(nb_rel == 0 && s -> start_ts != AV_NOPTS_VALUE || s -> opt_start_at_first)
cond	13:15	14:18	5	nb_rel == 0 && s -> start_ts != AV_NOPTS_VALUE || s -> opt_start_at_first
water	13:15	0:0	6	nb_rel
op	13:22	0:0	6	==
water	13:25	0:0	6	0
op	13:27	0:0	6	&&
water	13:30	0:0	6	s
op	13:31	0:0	6	->
water	13:33	0:0	6	start_ts
op	13:42	0:0	6	!=
water	13:45	0:0	6	AV_NOPTS_VALUE
op	13:60	0:0	6	||
water	14:15	0:0	6	s
op	14:16	0:0	6	->
water	14:18	0:0	6	opt_start_at_first
stmts	14:38	19:4	5	
water	14:38	0:0	6	{
if	16:8	17:41	6	(s -> start_ts == AV_NOPTS_VALUE)
cond	16:12	16:27	7	s -> start_ts == AV_NOPTS_VALUE
water	16:12	0:0	8	s
op	16:13	0:0	8	->
water	16:15	0:0	8	start_ts
op	16:24	0:0	8	==
water	16:27	0:0	8	AV_NOPTS_VALUE
stmts	17:12	17:41	7	
water	17:12	0:0	8	s
op	17:13	0:0	8	->
water	17:15	0:0	8	start_ts
op	17:24	0:0	8	=
water	17:26	0:0	8	s
op	17:27	0:0	8	->
water	17:29	0:0	8	tseq
op	17:33	0:0	8	[
water	17:34	0:0	8	0
op	17:35	0:0	8	]
op	17:36	0:0	8	.
water	17:37	0:0	8	ts
op	17:39	0:0	8	.
water	17:40	0:0	8	t
water	17:41	0:0	8	;
water	18:8	0:0	6	now
op	18:12	0:0	6	=
water	18:14	0:0	6	s
op	18:15	0:0	6	->
water	18:17	0:0	6	start_ts
water	18:25	0:0	6	;
water	19:4	0:0	6	}
else	19:6	40:4	2
stmts	19:11	40:4	3	
water	19:11	0:0	4	{
decl	21:8	21:19	4	time_t	now0
decl	22:8	22:29	4	struct tm	*tm
water	22:21	0:0	4	,
decl	22:8	22:29	4	struct tm	tmpbuf
call	23:8	25:73	4	av_log
arg	23:15	23:18	5	log
water	23:15	0:0	6	log
arg	23:20	23:34	5	AV_LOG_WARNING
water	23:20	0:0	6	AV_LOG_WARNING
arg	24:15	25:73	5	"Scripts with mixed absolute and relative timestamps can give ""unexpected results (pause, seeking, time zone change).\n"
water	24:15	0:0	6	"Scripts with mixed absolute and relative timestamps can give "
water	25:15	0:0	6	"unexpected results (pause, seeking, time zone change).\n"
water	25:74	0:0	4	;
call	27:8	27:18	4	time
arg	27:13	27:18	5	&now0
op	27:13	0:0	6	&
water	27:14	0:0	6	now0
water	27:19	0:0	4	;
water	28:8	0:0	4	tm
op	28:11	0:0	4	=
call	28:13	28:39	4	localtime_r
arg	28:25	28:30	5	&now0
op	28:25	0:0	6	&
water	28:26	0:0	6	now0
arg	28:32	28:39	5	&tmpbuf
op	28:32	0:0	6	&
water	28:33	0:0	6	tmpbuf
water	28:40	0:0	4	;
water	29:8	0:0	4	now
op	29:12	0:0	4	=
water	29:14	0:0	4	tm
water	29:17	0:0	4	?
water	29:19	0:0	4	tm
op	29:21	0:0	4	->
water	29:23	0:0	4	tm_hour
op	29:31	0:0	4	*
water	29:33	0:0	4	3600
op	29:38	0:0	4	+
water	29:40	0:0	4	tm
op	29:42	0:0	4	->
water	29:44	0:0	4	tm_min
op	29:51	0:0	4	*
water	29:53	0:0	4	60
op	29:56	0:0	4	+
water	29:58	0:0	4	tm
op	29:60	0:0	4	->
water	29:62	0:0	4	tm_sec
water	29:69	0:0	4	:
water	30:19	0:0	4	now0
op	30:24	0:0	4	%
water	30:26	0:0	4	DAY
water	30:29	0:0	4	;
call	31:8	32:69	4	av_log
arg	31:15	31:18	5	log
water	31:15	0:0	6	log
arg	31:20	31:31	5	AV_LOG_INFO
water	31:20	0:0	6	AV_LOG_INFO
arg	31:33	31:65	5	"Using %02d:%02d:%02d as NOW.\n"
water	31:33	0:0	6	"Using %02d:%02d:%02d as NOW.\n"
arg	32:15	32:32	5	(int)(now/3600)
call	32:15	32:31	6	(int)
arg	32:21	32:31	7	now/3600
water	32:21	0:0	8	now
op	32:25	0:0	8	/
water	32:27	0:0	8	3600
arg	32:34	32:54	5	(int)(now/60)%60
call	32:34	32:48	6	(int)
arg	32:40	32:48	7	now/60
water	32:40	0:0	8	now
op	32:44	0:0	8	/
water	32:46	0:0	8	60
op	32:50	0:0	6	%
water	32:52	0:0	6	60
arg	32:56	32:69	5	(int)now%60
water	32:56	0:0	6	(
water	32:57	0:0	6	int
water	32:60	0:0	6	)
water	32:61	0:0	6	now
op	32:65	0:0	6	%
water	32:67	0:0	6	60
water	32:70	0:0	4	;
water	33:8	0:0	4	now
op	33:12	0:0	4	*=
water	33:15	0:0	4	AV_TIME_BASE
water	33:27	0:0	4	;
for	34:8	39:8	4	(i = 0 ;i < s -> nb_tseq;i ++)
forinit	34:13	34:18	5	i = 0 ;
water	34:13	0:0	6	i
op	34:15	0:0	6	=
water	34:17	0:0	6	0
water	34:18	0:0	6	;
cond	34:20	34:27	5	i < s -> nb_tseq
water	34:20	0:0	6	i
op	34:22	0:0	6	<
water	34:24	0:0	6	s
op	34:25	0:0	6	->
water	34:27	0:0	6	nb_tseq
forexpr	34:36	34:37	5	i ++
water	34:36	0:0	6	i
op	34:37	0:0	6	++
stmts	34:41	39:8	5	
water	34:41	0:0	6	{
if	35:12	38:12	6	(s -> tseq [ i ] . ts . type == 'N')
cond	35:16	35:38	7	s -> tseq [ i ] . ts . type == 'N'
water	35:16	0:0	8	s
op	35:17	0:0	8	->
water	35:19	0:0	8	tseq
op	35:23	0:0	8	[
water	35:24	0:0	8	i
op	35:25	0:0	8	]
op	35:26	0:0	8	.
water	35:27	0:0	8	ts
op	35:29	0:0	8	.
water	35:30	0:0	8	type
op	35:35	0:0	8	==
water	35:38	0:0	8	'N'
stmts	35:43	38:12	7	
water	35:43	0:0	8	{
water	36:16	0:0	8	s
op	36:17	0:0	8	->
water	36:19	0:0	8	tseq
op	36:23	0:0	8	[
water	36:24	0:0	8	i
op	36:25	0:0	8	]
op	36:26	0:0	8	.
water	36:27	0:0	8	ts
op	36:29	0:0	8	.
water	36:30	0:0	8	t
op	36:32	0:0	8	+=
water	36:35	0:0	8	now
water	36:38	0:0	8	;
water	37:16	0:0	8	s
op	37:17	0:0	8	->
water	37:19	0:0	8	tseq
op	37:23	0:0	8	[
water	37:24	0:0	8	i
op	37:25	0:0	8	]
op	37:26	0:0	8	.
water	37:27	0:0	8	ts
op	37:29	0:0	8	.
water	37:30	0:0	8	type
op	37:35	0:0	8	=
water	37:37	0:0	8	'T'
water	37:40	0:0	8	;
water	38:12	0:0	8	}
water	39:8	0:0	6	}
water	40:4	0:0	4	}
if	41:4	42:67	2	(s -> start_ts == AV_NOPTS_VALUE)
cond	41:8	41:23	3	s -> start_ts == AV_NOPTS_VALUE
water	41:8	0:0	4	s
op	41:9	0:0	4	->
water	41:11	0:0	4	start_ts
op	41:20	0:0	4	==
water	41:23	0:0	4	AV_NOPTS_VALUE
stmts	42:8	42:67	3	
water	42:8	0:0	4	s
op	42:9	0:0	4	->
water	42:11	0:0	4	start_ts
op	42:20	0:0	4	=
water	42:22	0:0	4	s
op	42:23	0:0	4	->
water	42:25	0:0	4	opt_start_at_first
water	42:44	0:0	4	?
water	42:46	0:0	4	s
op	42:47	0:0	4	->
water	42:49	0:0	4	tseq
op	42:53	0:0	4	[
water	42:54	0:0	4	0
op	42:55	0:0	4	]
op	42:56	0:0	4	.
water	42:57	0:0	4	ts
op	42:59	0:0	4	.
water	42:60	0:0	4	t
water	42:62	0:0	4	:
water	42:64	0:0	4	now
water	42:67	0:0	4	;
water	43:4	0:0	2	s
op	43:5	0:0	2	->
water	43:7	0:0	2	end_ts
op	43:14	0:0	2	=
water	43:16	0:0	2	s
op	43:17	0:0	2	->
water	43:19	0:0	2	opt_duration
water	43:32	0:0	2	?
water	43:34	0:0	2	s
op	43:35	0:0	2	->
water	43:37	0:0	2	start_ts
op	43:46	0:0	2	+
water	43:48	0:0	2	s
op	43:49	0:0	2	->
water	43:51	0:0	2	opt_duration
water	43:64	0:0	2	:
water	44:16	0:0	2	AV_NOPTS_VALUE
water	44:30	0:0	2	;
water	45:4	0:0	2	cur_ts
op	45:11	0:0	2	=
water	45:13	0:0	2	now
water	45:16	0:0	2	;
for	46:4	50:4	2	(i = 0 ;i < s -> nb_tseq;i ++)
forinit	46:9	46:14	3	i = 0 ;
water	46:9	0:0	4	i
op	46:11	0:0	4	=
water	46:13	0:0	4	0
water	46:14	0:0	4	;
cond	46:16	46:23	3	i < s -> nb_tseq
water	46:16	0:0	4	i
op	46:18	0:0	4	<
water	46:20	0:0	4	s
op	46:21	0:0	4	->
water	46:23	0:0	4	nb_tseq
forexpr	46:32	46:33	3	i ++
water	46:32	0:0	4	i
op	46:33	0:0	4	++
stmts	46:37	50:4	3	
water	46:37	0:0	4	{
if	47:8	48:27	4	(s -> tseq [ i ] . ts . t + delta < cur_ts)
cond	47:12	47:38	5	s -> tseq [ i ] . ts . t + delta < cur_ts
water	47:12	0:0	6	s
op	47:13	0:0	6	->
water	47:15	0:0	6	tseq
op	47:19	0:0	6	[
water	47:20	0:0	6	i
op	47:21	0:0	6	]
op	47:22	0:0	6	.
water	47:23	0:0	6	ts
op	47:25	0:0	6	.
water	47:26	0:0	6	t
op	47:28	0:0	6	+
water	47:30	0:0	6	delta
op	47:36	0:0	6	<
water	47:38	0:0	6	cur_ts
stmts	48:12	48:27	5	
water	48:12	0:0	6	delta
op	48:18	0:0	6	+=
water	48:21	0:0	6	DAY_TS
water	48:27	0:0	6	;
water	49:8	0:0	4	cur_ts
op	49:15	0:0	4	=
water	49:17	0:0	4	s
op	49:18	0:0	4	->
water	49:20	0:0	4	tseq
op	49:24	0:0	4	[
water	49:25	0:0	4	i
op	49:26	0:0	4	]
op	49:27	0:0	4	.
water	49:28	0:0	4	ts
op	49:30	0:0	4	.
water	49:31	0:0	4	t
op	49:33	0:0	4	+=
water	49:36	0:0	4	delta
water	49:41	0:0	4	;
water	50:4	0:0	4	}

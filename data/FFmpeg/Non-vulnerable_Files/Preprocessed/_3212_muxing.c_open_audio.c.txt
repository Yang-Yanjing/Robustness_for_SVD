func	1:0	47:0	0	static void	open_audio
params	1:22	0:0	1	
param	1:23	1:42	2	AVFormatContext *	oc
param	1:44	1:58	2	AVCodec *	codec
param	1:60	1:77	2	OutputStream *	ost
param	1:79	1:100	2	AVDictionary *	opt_arg
stmnts	0:0	46:8	1	
decl	3:4	3:21	2	AVCodecContext	*c
decl	4:4	4:18	2	int	nb_samples
decl	5:4	5:11	2	int	ret
decl	6:4	6:28	2	AVDictionary	*opt
op	6:22	0:0	2	=
water	6:24	0:0	2	NULL
water	7:4	0:0	2	c
op	7:6	0:0	2	=
water	7:8	0:0	2	ost
op	7:11	0:0	2	->
water	7:13	0:0	2	st
op	7:15	0:0	2	->
water	7:17	0:0	2	codec
water	7:22	0:0	2	;
call	9:4	9:33	2	av_dict_copy
arg	9:17	9:21	3	&opt
op	9:17	0:0	4	&
water	9:18	0:0	4	opt
arg	9:23	9:30	3	opt_arg
water	9:23	0:0	4	opt_arg
arg	9:32	9:33	3	0
water	9:32	0:0	4	0
water	9:34	0:0	2	;
water	10:4	0:0	2	ret
op	10:8	0:0	2	=
call	10:10	10:38	2	avcodec_open2
arg	10:24	10:25	3	c
water	10:24	0:0	4	c
arg	10:27	10:32	3	codec
water	10:27	0:0	4	codec
arg	10:34	10:38	3	&opt
op	10:34	0:0	4	&
water	10:35	0:0	4	opt
water	10:39	0:0	2	;
call	11:4	11:21	2	av_dict_free
arg	11:17	11:21	3	&opt
op	11:17	0:0	4	&
water	11:18	0:0	4	opt
water	11:22	0:0	2	;
if	12:4	15:4	2	(ret < 0)
cond	12:8	12:14	3	ret < 0
water	12:8	0:0	4	ret
op	12:12	0:0	4	<
water	12:14	0:0	4	0
stmts	12:17	15:4	3	
water	12:17	0:0	4	{
call	13:8	13:75	4	fprintf
arg	13:16	13:22	5	stderr
water	13:16	0:0	6	stderr
arg	13:24	13:58	5	"Could not open audio codec: %s\n"
water	13:24	0:0	6	"Could not open audio codec: %s\n"
arg	13:60	13:75	5	av_err2str(ret)
call	13:60	13:74	6	av_err2str
arg	13:71	13:74	7	ret
water	13:71	0:0	8	ret
water	13:76	0:0	4	;
call	14:8	14:14	4	exit
arg	14:13	14:14	5	1
water	14:13	0:0	6	1
water	14:15	0:0	4	;
water	15:4	0:0	4	}
water	17:4	0:0	2	ost
op	17:7	0:0	2	->
water	17:9	0:0	2	t
op	17:15	0:0	2	=
water	17:17	0:0	2	0
water	17:18	0:0	2	;
water	18:4	0:0	2	ost
op	18:7	0:0	2	->
water	18:9	0:0	2	tincr
op	18:15	0:0	2	=
water	18:17	0:0	2	2
op	18:19	0:0	2	*
water	18:21	0:0	2	M_PI
op	18:26	0:0	2	*
water	18:28	0:0	2	110
op	18:31	0:0	2	.
water	18:32	0:0	2	0
op	18:34	0:0	2	/
water	18:36	0:0	2	c
op	18:37	0:0	2	->
water	18:39	0:0	2	sample_rate
water	18:50	0:0	2	;
water	20:4	0:0	2	ost
op	20:7	0:0	2	->
water	20:9	0:0	2	tincr2
op	20:16	0:0	2	=
water	20:18	0:0	2	2
op	20:20	0:0	2	*
water	20:22	0:0	2	M_PI
op	20:27	0:0	2	*
water	20:29	0:0	2	110
op	20:32	0:0	2	.
water	20:33	0:0	2	0
op	20:35	0:0	2	/
water	20:37	0:0	2	c
op	20:38	0:0	2	->
water	20:40	0:0	2	sample_rate
op	20:52	0:0	2	/
water	20:54	0:0	2	c
op	20:55	0:0	2	->
water	20:57	0:0	2	sample_rate
water	20:68	0:0	2	;
if	21:4	22:26	2	(c -> codec -> capabilities & AV_CODEC_CAP_VARIABLE_FRAME_SIZE)
cond	21:8	21:33	3	c -> codec -> capabilities & AV_CODEC_CAP_VARIABLE_FRAME_SIZE
water	21:8	0:0	4	c
op	21:9	0:0	4	->
water	21:11	0:0	4	codec
op	21:16	0:0	4	->
water	21:18	0:0	4	capabilities
op	21:31	0:0	4	&
water	21:33	0:0	4	AV_CODEC_CAP_VARIABLE_FRAME_SIZE
stmts	22:8	22:26	3	
water	22:8	0:0	4	nb_samples
op	22:19	0:0	4	=
water	22:21	0:0	4	10000
water	22:26	0:0	4	;
else	23:4	24:34	2
stmts	24:8	24:34	3	
water	24:8	0:0	4	nb_samples
op	24:19	0:0	4	=
water	24:21	0:0	4	c
op	24:22	0:0	4	->
water	24:24	0:0	4	frame_size
water	24:34	0:0	4	;
water	25:4	0:0	2	ost
op	25:7	0:0	2	->
water	25:9	0:0	2	frame
op	25:19	0:0	2	=
call	25:21	26:65	2	alloc_audio_frame
arg	25:39	25:52	3	c->sample_fmt
water	25:39	0:0	4	c
op	25:40	0:0	4	->
water	25:42	0:0	4	sample_fmt
arg	25:54	25:71	3	c->channel_layout
water	25:54	0:0	4	c
op	25:55	0:0	4	->
water	25:57	0:0	4	channel_layout
arg	26:39	26:53	3	c->sample_rate
water	26:39	0:0	4	c
op	26:40	0:0	4	->
water	26:42	0:0	4	sample_rate
arg	26:55	26:65	3	nb_samples
water	26:55	0:0	4	nb_samples
water	26:66	0:0	2	;
water	27:4	0:0	2	ost
op	27:7	0:0	2	->
water	27:9	0:0	2	tmp_frame
op	27:19	0:0	2	=
call	27:21	28:65	2	alloc_audio_frame
arg	27:39	27:56	3	AV_SAMPLE_FMT_S16
water	27:39	0:0	4	AV_SAMPLE_FMT_S16
arg	27:58	27:75	3	c->channel_layout
water	27:58	0:0	4	c
op	27:59	0:0	4	->
water	27:61	0:0	4	channel_layout
arg	28:39	28:53	3	c->sample_rate
water	28:39	0:0	4	c
op	28:40	0:0	4	->
water	28:42	0:0	4	sample_rate
arg	28:55	28:65	3	nb_samples
water	28:55	0:0	4	nb_samples
water	28:66	0:0	2	;
water	30:8	0:0	2	ost
op	30:11	0:0	2	->
water	30:13	0:0	2	swr_ctx
op	30:21	0:0	2	=
call	30:23	30:33	2	swr_alloc
water	30:34	0:0	2	;
if	31:8	34:8	2	(! ost -> swr_ctx)
cond	31:12	31:18	3	! ost -> swr_ctx
op	31:12	0:0	4	!
water	31:13	0:0	4	ost
op	31:16	0:0	4	->
water	31:18	0:0	4	swr_ctx
stmts	31:27	34:8	3	
water	31:27	0:0	4	{
call	32:12	32:68	4	fprintf
arg	32:20	32:26	5	stderr
water	32:20	0:0	6	stderr
arg	32:28	32:68	5	"Could not allocate resampler context\n"
water	32:28	0:0	6	"Could not allocate resampler context\n"
water	32:69	0:0	4	;
call	33:12	33:18	4	exit
arg	33:17	33:18	5	1
water	33:17	0:0	6	1
water	33:19	0:0	4	;
water	34:8	0:0	4	}
call	36:8	36:86	2	av_opt_set_int
arg	36:30	36:42	3	ost->swr_ctx
water	36:30	0:0	4	ost
op	36:33	0:0	4	->
water	36:35	0:0	4	swr_ctx
arg	36:44	36:62	3	"in_channel_count"
water	36:44	0:0	4	"in_channel_count"
arg	36:66	36:77	3	c->channels
water	36:66	0:0	4	c
op	36:67	0:0	4	->
water	36:69	0:0	4	channels
arg	36:85	36:86	3	0
water	36:85	0:0	4	0
water	36:87	0:0	2	;
call	37:8	37:86	2	av_opt_set_int
arg	37:30	37:42	3	ost->swr_ctx
water	37:30	0:0	4	ost
op	37:33	0:0	4	->
water	37:35	0:0	4	swr_ctx
arg	37:44	37:60	3	"in_sample_rate"
water	37:44	0:0	4	"in_sample_rate"
arg	37:66	37:80	3	c->sample_rate
water	37:66	0:0	4	c
op	37:67	0:0	4	->
water	37:69	0:0	4	sample_rate
arg	37:85	37:86	3	0
water	37:85	0:0	4	0
water	37:87	0:0	2	;
call	38:8	38:86	2	av_opt_set_sample_fmt
arg	38:30	38:42	3	ost->swr_ctx
water	38:30	0:0	4	ost
op	38:33	0:0	4	->
water	38:35	0:0	4	swr_ctx
arg	38:44	38:59	3	"in_sample_fmt"
water	38:44	0:0	4	"in_sample_fmt"
arg	38:66	38:83	3	AV_SAMPLE_FMT_S16
water	38:66	0:0	4	AV_SAMPLE_FMT_S16
arg	38:85	38:86	3	0
water	38:85	0:0	4	0
water	38:87	0:0	2	;
call	39:8	39:86	2	av_opt_set_int
arg	39:30	39:42	3	ost->swr_ctx
water	39:30	0:0	4	ost
op	39:33	0:0	4	->
water	39:35	0:0	4	swr_ctx
arg	39:44	39:63	3	"out_channel_count"
water	39:44	0:0	4	"out_channel_count"
arg	39:66	39:77	3	c->channels
water	39:66	0:0	4	c
op	39:67	0:0	4	->
water	39:69	0:0	4	channels
arg	39:85	39:86	3	0
water	39:85	0:0	4	0
water	39:87	0:0	2	;
call	40:8	40:86	2	av_opt_set_int
arg	40:30	40:42	3	ost->swr_ctx
water	40:30	0:0	4	ost
op	40:33	0:0	4	->
water	40:35	0:0	4	swr_ctx
arg	40:44	40:61	3	"out_sample_rate"
water	40:44	0:0	4	"out_sample_rate"
arg	40:66	40:80	3	c->sample_rate
water	40:66	0:0	4	c
op	40:67	0:0	4	->
water	40:69	0:0	4	sample_rate
arg	40:85	40:86	3	0
water	40:85	0:0	4	0
water	40:87	0:0	2	;
call	41:8	41:86	2	av_opt_set_sample_fmt
arg	41:30	41:42	3	ost->swr_ctx
water	41:30	0:0	4	ost
op	41:33	0:0	4	->
water	41:35	0:0	4	swr_ctx
arg	41:44	41:60	3	"out_sample_fmt"
water	41:44	0:0	4	"out_sample_fmt"
arg	41:66	41:79	3	c->sample_fmt
water	41:66	0:0	4	c
op	41:67	0:0	4	->
water	41:69	0:0	4	sample_fmt
arg	41:85	41:86	3	0
water	41:85	0:0	4	0
water	41:87	0:0	2	;
if	43:8	46:8	2	(( ret =swr_init (ost -> swr_ctx ) ) < 0)
cond	43:12	43:45	3	( ret =swr_init (ost -> swr_ctx ) ) < 0
water	43:12	0:0	4	(
water	43:13	0:0	4	ret
op	43:17	0:0	4	=
call	43:19	43:40	4	swr_init
arg	43:28	43:40	5	ost->swr_ctx
water	43:28	0:0	6	ost
op	43:31	0:0	6	->
water	43:33	0:0	6	swr_ctx
water	43:41	0:0	4	)
op	43:43	0:0	4	<
water	43:45	0:0	4	0
stmts	43:48	46:8	3	
water	43:48	0:0	4	{
call	44:12	44:75	4	fprintf
arg	44:20	44:26	5	stderr
water	44:20	0:0	6	stderr
arg	44:28	44:75	5	"Failed to initialize the resampling context\n"
water	44:28	0:0	6	"Failed to initialize the resampling context\n"
water	44:76	0:0	4	;
call	45:12	45:18	4	exit
arg	45:17	45:18	5	1
water	45:17	0:0	6	1
water	45:19	0:0	4	;
water	46:8	0:0	4	}

func	1:0	29:0	0	void	ff_aac_encode_tns_info
params	1:27	0:0	1	
param	1:28	1:44	2	AACEncContext *	s
param	1:46	1:71	2	SingleChannelElement *	sce
stmnts	0:0	28:4	1	
decl	3:4	3:18	2	uint8_t	u_coef
decl	4:4	4:44	2	const uint8_t	coef_res
op	4:27	0:0	2	=
water	4:29	0:0	2	TNS_Q_BITS
op	4:40	0:0	2	==
water	4:43	0:0	2	4
decl	5:4	5:47	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:47	2	int	w
water	5:12	0:0	2	,
decl	5:4	5:47	2	int	filt
water	5:18	0:0	2	,
decl	5:4	5:47	2	int	coef_len
water	5:28	0:0	2	,
decl	5:4	5:47	2	int	coef_compress
op	5:44	0:0	2	=
water	5:46	0:0	2	0
decl	6:4	6:71	2	const int	is8
op	6:18	0:0	2	=
water	6:20	0:0	2	sce
op	6:23	0:0	2	->
water	6:25	0:0	2	ics
op	6:28	0:0	2	.
water	6:29	0:0	2	window_sequence
op	6:44	0:0	2	[
water	6:45	0:0	2	0
op	6:46	0:0	2	]
op	6:48	0:0	2	==
water	6:51	0:0	2	EIGHT_SHORT_SEQUENCE
decl	7:4	7:41	2	TemporalNoiseShaping	*tns
op	7:30	0:0	2	=
op	7:32	0:0	2	&
water	7:33	0:0	2	sce
op	7:36	0:0	2	->
water	7:38	0:0	2	tns
if	8:4	9:14	2	(! sce -> tns . present)
cond	8:8	8:18	3	! sce -> tns . present
op	8:8	0:0	4	!
water	8:9	0:0	4	sce
op	8:12	0:0	4	->
water	8:14	0:0	4	tns
op	8:17	0:0	4	.
water	8:18	0:0	4	present
stmts	9:8	9:14	3	
return	9:8	9:14	4	
for	10:4	28:4	2	(i = 0 ;i < sce -> ics . num_windows;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:29	3	i < sce -> ics . num_windows
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	sce
op	10:23	0:0	4	->
water	10:25	0:0	4	ics
op	10:28	0:0	4	.
water	10:29	0:0	4	num_windows
forexpr	10:42	10:43	3	i ++
water	10:42	0:0	4	i
op	10:43	0:0	4	++
stmts	10:47	28:4	3	
water	10:47	0:0	4	{
call	11:8	11:52	4	put_bits
arg	11:17	11:23	5	&s->pb
op	11:17	0:0	6	&
water	11:18	0:0	6	s
op	11:19	0:0	6	->
water	11:21	0:0	6	pb
arg	11:25	11:32	5	2-is8
water	11:25	0:0	6	2
op	11:27	0:0	6	-
water	11:29	0:0	6	is8
arg	11:34	11:52	5	sce->tns.n_filt[i]
water	11:34	0:0	6	sce
op	11:37	0:0	6	->
water	11:39	0:0	6	tns
op	11:42	0:0	6	.
water	11:43	0:0	6	n_filt
op	11:49	0:0	6	[
water	11:50	0:0	6	i
op	11:51	0:0	6	]
water	11:53	0:0	4	;
if	12:8	27:8	4	(tns -> n_filt [ i ])
cond	12:12	12:25	5	tns -> n_filt [ i ]
water	12:12	0:0	6	tns
op	12:15	0:0	6	->
water	12:17	0:0	6	n_filt
op	12:23	0:0	6	[
water	12:24	0:0	6	i
op	12:25	0:0	6	]
stmts	12:28	27:8	5	
water	12:28	0:0	6	{
call	13:12	13:40	6	put_bits
arg	13:21	13:27	7	&s->pb
op	13:21	0:0	8	&
water	13:22	0:0	8	s
op	13:23	0:0	8	->
water	13:25	0:0	8	pb
arg	13:29	13:30	7	1
water	13:29	0:0	8	1
arg	13:32	13:40	7	coef_res
water	13:32	0:0	8	coef_res
water	13:41	0:0	6	;
for	14:12	26:12	6	(filt = 0 ;filt < tns -> n_filt [ i ];filt ++)
forinit	14:17	14:25	7	filt = 0 ;
water	14:17	0:0	8	filt
op	14:22	0:0	8	=
water	14:24	0:0	8	0
water	14:25	0:0	8	;
cond	14:27	14:47	7	filt < tns -> n_filt [ i ]
water	14:27	0:0	8	filt
op	14:32	0:0	8	<
water	14:34	0:0	8	tns
op	14:37	0:0	8	->
water	14:39	0:0	8	n_filt
op	14:45	0:0	8	[
water	14:46	0:0	8	i
op	14:47	0:0	8	]
forexpr	14:50	14:54	7	filt ++
water	14:50	0:0	8	filt
op	14:54	0:0	8	++
stmts	14:58	26:12	7	
water	14:58	0:0	8	{
call	15:16	15:66	8	put_bits
arg	15:25	15:31	9	&s->pb
op	15:25	0:0	10	&
water	15:26	0:0	10	s
op	15:27	0:0	10	->
water	15:29	0:0	10	pb
arg	15:33	15:44	9	6-2*is8
water	15:33	0:0	10	6
op	15:35	0:0	10	-
water	15:37	0:0	10	2
op	15:39	0:0	10	*
water	15:41	0:0	10	is8
arg	15:46	15:66	9	tns->length[i][filt]
water	15:46	0:0	10	tns
op	15:49	0:0	10	->
water	15:51	0:0	10	length
op	15:57	0:0	10	[
water	15:58	0:0	10	i
op	15:59	0:0	10	]
op	15:60	0:0	10	[
water	15:61	0:0	10	filt
op	15:65	0:0	10	]
water	15:67	0:0	8	;
call	16:16	16:65	8	put_bits
arg	16:25	16:31	9	&s->pb
op	16:25	0:0	10	&
water	16:26	0:0	10	s
op	16:27	0:0	10	->
water	16:29	0:0	10	pb
arg	16:33	16:44	9	5-2*is8
water	16:33	0:0	10	5
op	16:35	0:0	10	-
water	16:37	0:0	10	2
op	16:39	0:0	10	*
water	16:41	0:0	10	is8
arg	16:46	16:65	9	tns->order[i][filt]
water	16:46	0:0	10	tns
op	16:49	0:0	10	->
water	16:51	0:0	10	order
op	16:56	0:0	10	[
water	16:57	0:0	10	i
op	16:58	0:0	10	]
op	16:59	0:0	10	[
water	16:60	0:0	10	filt
op	16:64	0:0	10	]
water	16:66	0:0	8	;
if	17:16	25:16	8	(tns -> order [ i ] [ filt ])
cond	17:20	17:38	9	tns -> order [ i ] [ filt ]
water	17:20	0:0	10	tns
op	17:23	0:0	10	->
water	17:25	0:0	10	order
op	17:30	0:0	10	[
water	17:31	0:0	10	i
op	17:32	0:0	10	]
op	17:33	0:0	10	[
water	17:34	0:0	10	filt
op	17:38	0:0	10	]
stmts	17:41	25:16	9	
water	17:41	0:0	10	{
call	18:20	18:65	10	put_bits
arg	18:29	18:35	11	&s->pb
op	18:29	0:0	12	&
water	18:30	0:0	12	s
op	18:31	0:0	12	->
water	18:33	0:0	12	pb
arg	18:37	18:38	11	1
water	18:37	0:0	12	1
arg	18:40	18:65	11	!!tns->direction[i][filt]
op	18:40	0:0	12	!
op	18:41	0:0	12	!
water	18:42	0:0	12	tns
op	18:45	0:0	12	->
water	18:47	0:0	12	direction
op	18:56	0:0	12	[
water	18:57	0:0	12	i
op	18:58	0:0	12	]
op	18:59	0:0	12	[
water	18:60	0:0	12	filt
op	18:64	0:0	12	]
water	18:66	0:0	10	;
call	19:20	19:55	10	put_bits
arg	19:29	19:35	11	&s->pb
op	19:29	0:0	12	&
water	19:30	0:0	12	s
op	19:31	0:0	12	->
water	19:33	0:0	12	pb
arg	19:37	19:38	11	1
water	19:37	0:0	12	1
arg	19:40	19:55	11	!!coef_compress
op	19:40	0:0	12	!
op	19:41	0:0	12	!
water	19:42	0:0	12	coef_compress
water	19:56	0:0	10	;
water	20:20	0:0	10	coef_len
op	20:29	0:0	10	=
water	20:31	0:0	10	coef_res
op	20:40	0:0	10	+
water	20:42	0:0	10	3
op	20:44	0:0	10	-
water	20:46	0:0	10	coef_compress
water	20:59	0:0	10	;
for	21:20	24:20	10	(w = 0 ;w < tns -> order [ i ] [ filt ];w ++)
forinit	21:25	21:30	11	w = 0 ;
water	21:25	0:0	12	w
op	21:27	0:0	12	=
water	21:29	0:0	12	0
water	21:30	0:0	12	;
cond	21:32	21:54	11	w < tns -> order [ i ] [ filt ]
water	21:32	0:0	12	w
op	21:34	0:0	12	<
water	21:36	0:0	12	tns
op	21:39	0:0	12	->
water	21:41	0:0	12	order
op	21:46	0:0	12	[
water	21:47	0:0	12	i
op	21:48	0:0	12	]
op	21:49	0:0	12	[
water	21:50	0:0	12	filt
op	21:54	0:0	12	]
forexpr	21:57	21:58	11	w ++
water	21:57	0:0	12	w
op	21:58	0:0	12	++
stmts	21:62	24:20	11	
water	21:62	0:0	12	{
water	22:24	0:0	12	u_coef
op	22:31	0:0	12	=
water	22:33	0:0	12	(
water	22:34	0:0	12	tns
op	22:37	0:0	12	->
water	22:39	0:0	12	coef_idx
op	22:47	0:0	12	[
water	22:48	0:0	12	i
op	22:49	0:0	12	]
op	22:50	0:0	12	[
water	22:51	0:0	12	filt
op	22:55	0:0	12	]
op	22:56	0:0	12	[
water	22:57	0:0	12	w
op	22:58	0:0	12	]
water	22:59	0:0	12	)
op	22:60	0:0	12	&
water	22:61	0:0	12	(
op	22:62	0:0	12	~
water	22:63	0:0	12	(
water	22:64	0:0	12	~0
op	22:66	0:0	12	<<
water	22:68	0:0	12	coef_len
water	22:76	0:0	12	)
water	22:77	0:0	12	)
water	22:78	0:0	12	;
call	23:24	23:57	12	put_bits
arg	23:33	23:39	13	&s->pb
op	23:33	0:0	14	&
water	23:34	0:0	14	s
op	23:35	0:0	14	->
water	23:37	0:0	14	pb
arg	23:41	23:49	13	coef_len
water	23:41	0:0	14	coef_len
arg	23:51	23:57	13	u_coef
water	23:51	0:0	14	u_coef
water	23:58	0:0	12	;
water	24:20	0:0	12	}
water	25:16	0:0	10	}
water	26:12	0:0	8	}
water	27:8	0:0	6	}
water	28:4	0:0	4	}

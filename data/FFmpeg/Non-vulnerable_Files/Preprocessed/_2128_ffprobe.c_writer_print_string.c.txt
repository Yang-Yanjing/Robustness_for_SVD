func	1:0	31:0	0	static inline int	writer_print_string
params	1:37	0:0	1	
param	1:38	1:57	2	WriterContext *	wctx
param	2:38	2:53	2	const char *	key
param	2:55	2:70	2	const char *	val
param	2:72	2:81	2	int	flags
stmnts	0:0	30:14	1	
decl	4:4	4:62	2	const struct section	*section
op	4:34	0:0	2	=
water	4:36	0:0	2	wctx
op	4:40	0:0	2	->
water	4:42	0:0	2	section
op	4:49	0:0	2	[
water	4:50	0:0	2	wctx
op	4:54	0:0	2	->
water	4:56	0:0	2	level
op	4:61	0:0	2	]
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
if	6:4	8:16	2	(( flags & PRINT_STRING_OPT ) && ! ( wctx -> writer -> flags & WRITER_FLAG_DISPLAY_OPTIONAL_FIELDS ))
cond	6:8	7:70	3	( flags & PRINT_STRING_OPT ) && ! ( wctx -> writer -> flags & WRITER_FLAG_DISPLAY_OPTIONAL_FIELDS )
water	6:8	0:0	4	(
water	6:9	0:0	4	flags
op	6:15	0:0	4	&
water	6:17	0:0	4	PRINT_STRING_OPT
water	6:33	0:0	4	)
op	7:8	0:0	4	&&
op	7:11	0:0	4	!
water	7:12	0:0	4	(
water	7:13	0:0	4	wctx
op	7:17	0:0	4	->
water	7:19	0:0	4	writer
op	7:25	0:0	4	->
water	7:27	0:0	4	flags
op	7:33	0:0	4	&
water	7:35	0:0	4	WRITER_FLAG_DISPLAY_OPTIONAL_FIELDS
water	7:70	0:0	4	)
stmts	8:8	8:16	3	
return	8:8	8:16	4	0
water	8:15	0:0	5	0
if	9:4	29:4	2	(section -> show_all_entries ||av_dict_get (section -> entries_to_show ,key ,NULL ,0 ))
cond	9:8	9:87	3	section -> show_all_entries ||av_dict_get (section -> entries_to_show ,key ,NULL ,0 )
water	9:8	0:0	4	section
op	9:15	0:0	4	->
water	9:17	0:0	4	show_all_entries
op	9:34	0:0	4	||
call	9:37	9:87	4	av_dict_get
arg	9:49	9:73	5	section->entries_to_show
water	9:49	0:0	6	section
op	9:56	0:0	6	->
water	9:58	0:0	6	entries_to_show
arg	9:75	9:78	5	key
water	9:75	0:0	6	key
arg	9:80	9:84	5	NULL
water	9:80	0:0	6	NULL
arg	9:86	9:87	5	0
water	9:86	0:0	6	0
stmts	9:90	29:4	3	
water	9:90	0:0	4	{
if	10:8	25:8	4	(flags & PRINT_STRING_VALIDATE)
cond	10:12	10:20	5	flags & PRINT_STRING_VALIDATE
water	10:12	0:0	6	flags
op	10:18	0:0	6	&
water	10:20	0:0	6	PRINT_STRING_VALIDATE
stmts	10:43	25:8	5	
water	10:43	0:0	6	{
decl	11:12	11:43	6	char	*key1
op	11:23	0:0	6	=
water	11:25	0:0	6	NULL
water	11:29	0:0	6	,
decl	11:12	11:43	6	char	*val1
op	11:37	0:0	6	=
water	11:39	0:0	6	NULL
water	12:12	0:0	6	ret
op	12:16	0:0	6	=
call	12:18	12:50	6	validate_string
arg	12:34	12:38	7	wctx
water	12:34	0:0	8	wctx
arg	12:40	12:45	7	&key1
op	12:40	0:0	8	&
water	12:41	0:0	8	key1
arg	12:47	12:50	7	key
water	12:47	0:0	8	key
water	12:51	0:0	6	;
if	13:12	13:33	6	(ret < 0)
cond	13:16	13:22	7	ret < 0
water	13:16	0:0	8	ret
op	13:20	0:0	8	<
water	13:22	0:0	8	0
stmts	13:25	13:33	7	
goto	13:25	13:33	8	end
water	13:30	0:0	9	end
water	14:12	0:0	6	ret
op	14:16	0:0	6	=
call	14:18	14:50	6	validate_string
arg	14:34	14:38	7	wctx
water	14:34	0:0	8	wctx
arg	14:40	14:45	7	&val1
op	14:40	0:0	8	&
water	14:41	0:0	8	val1
arg	14:47	14:50	7	val
water	14:47	0:0	8	val
water	14:51	0:0	6	;
if	15:12	15:33	6	(ret < 0)
cond	15:16	15:22	7	ret < 0
water	15:16	0:0	8	ret
op	15:20	0:0	8	<
water	15:22	0:0	8	0
stmts	15:25	15:33	7	
goto	15:25	15:33	8	end
water	15:30	0:0	9	end
call	16:12	16:55	6	wctx->writer->print_string
arg	16:39	16:43	7	wctx
water	16:39	0:0	8	wctx
arg	16:45	16:49	7	key1
water	16:45	0:0	8	key1
arg	16:51	16:55	7	val1
water	16:51	0:0	8	val1
water	16:56	0:0	6	;
label	17:8	17:11	6	end :
if	18:12	22:12	6	(ret < 0)
cond	18:16	18:22	7	ret < 0
water	18:16	0:0	8	ret
op	18:20	0:0	8	<
water	18:22	0:0	8	0
stmts	18:25	22:12	7	
water	18:25	0:0	8	{
call	19:16	21:53	8	av_log
arg	19:23	19:27	9	wctx
water	19:23	0:0	10	wctx
arg	19:29	19:41	9	AV_LOG_ERROR
water	19:29	0:0	10	AV_LOG_ERROR
arg	20:23	20:83	9	"Invalid key=value string combination %s=%s in section %s\n"
water	20:23	0:0	10	"Invalid key=value string combination %s=%s in section %s\n"
arg	21:23	21:26	9	key
water	21:23	0:0	10	key
arg	21:28	21:31	9	val
water	21:28	0:0	10	val
arg	21:33	21:53	9	section->unique_name
water	21:33	0:0	10	section
op	21:40	0:0	10	->
water	21:42	0:0	10	unique_name
water	21:54	0:0	8	;
water	22:12	0:0	8	}
call	23:12	23:24	6	av_free
arg	23:20	23:24	7	key1
water	23:20	0:0	8	key1
water	23:25	0:0	6	;
call	24:12	24:24	6	av_free
arg	24:20	24:24	7	val1
water	24:20	0:0	8	val1
water	24:25	0:0	6	;
water	25:8	0:0	6	}
else	25:10	27:8	4
stmts	25:15	27:8	5	
water	25:15	0:0	6	{
call	26:12	26:53	6	wctx->writer->print_string
arg	26:39	26:43	7	wctx
water	26:39	0:0	8	wctx
arg	26:45	26:48	7	key
water	26:45	0:0	8	key
arg	26:50	26:53	7	val
water	26:50	0:0	8	val
water	26:54	0:0	6	;
water	27:8	0:0	6	}
water	28:8	0:0	4	wctx
op	28:12	0:0	4	->
water	28:14	0:0	4	nb_item
op	28:21	0:0	4	[
water	28:22	0:0	4	wctx
op	28:26	0:0	4	->
water	28:28	0:0	4	level
op	28:33	0:0	4	]
op	28:34	0:0	4	++
water	28:36	0:0	4	;
water	29:4	0:0	4	}
return	30:4	30:14	2	ret
water	30:11	0:0	3	ret

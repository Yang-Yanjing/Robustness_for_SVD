func	1:0	50:0	0	static int	rm_read_index
params	1:24	0:0	1	
param	1:25	1:43	2	AVFormatContext *	s
stmnts	0:0	49:12	1	
decl	3:4	3:27	2	AVIOContext	*pb
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	pb
decl	4:4	4:60	2	unsigned int	size
water	4:21	0:0	2	,
decl	4:4	4:60	2	unsigned int	n_pkts
water	4:29	0:0	2	,
decl	4:4	4:60	2	unsigned int	str_id
water	4:37	0:0	2	,
decl	4:4	4:60	2	unsigned int	next_off
water	4:47	0:0	2	,
decl	4:4	4:60	2	unsigned int	n
water	4:50	0:0	2	,
decl	4:4	4:60	2	unsigned int	pos
water	4:55	0:0	2	,
decl	4:4	4:60	2	unsigned int	pts
decl	5:4	5:16	2	AVStream	*st
do	6:4	48:4	2	(next_off)
cond	48:13	48:13	3	next_off
water	48:13	0:0	4	next_off
stmts	6:7	48:4	3	
water	6:7	0:0	4	{
if	7:8	8:21	4	(avio_rl32 (pb ) !=MKTAG ('I' ,'N' ,'D' ,'X' ))
cond	7:12	7:50	5	avio_rl32 (pb ) !=MKTAG ('I' ,'N' ,'D' ,'X' )
call	7:12	7:24	6	avio_rl32
arg	7:22	7:24	7	pb
water	7:22	0:0	8	pb
op	7:26	0:0	6	!=
call	7:29	7:50	6	MKTAG
arg	7:35	7:38	7	'I'
water	7:35	0:0	8	'I'
arg	7:39	7:42	7	'N'
water	7:39	0:0	8	'N'
arg	7:43	7:46	7	'D'
water	7:43	0:0	8	'D'
arg	7:47	7:50	7	'X'
water	7:47	0:0	8	'X'
stmts	8:12	8:21	5	
return	8:12	8:21	6	-1
op	8:19	0:0	7	-
water	8:20	0:0	7	1
water	9:8	0:0	4	size
op	9:17	0:0	4	=
call	9:19	9:31	4	avio_rb32
arg	9:29	9:31	5	pb
water	9:29	0:0	6	pb
water	9:32	0:0	4	;
if	10:8	11:21	4	(size < 20)
cond	10:12	10:19	5	size < 20
water	10:12	0:0	6	size
op	10:17	0:0	6	<
water	10:19	0:0	6	20
stmts	11:12	11:21	5	
return	11:12	11:21	6	-1
op	11:19	0:0	7	-
water	11:20	0:0	7	1
call	12:8	12:23	4	avio_skip
arg	12:18	12:20	5	pb
water	12:18	0:0	6	pb
arg	12:22	12:23	5	2
water	12:22	0:0	6	2
water	12:24	0:0	4	;
water	13:8	0:0	4	n_pkts
op	13:17	0:0	4	=
call	13:19	13:31	4	avio_rb32
arg	13:29	13:31	5	pb
water	13:29	0:0	6	pb
water	13:32	0:0	4	;
water	14:8	0:0	4	str_id
op	14:17	0:0	4	=
call	14:19	14:31	4	avio_rb16
arg	14:29	14:31	5	pb
water	14:29	0:0	6	pb
water	14:32	0:0	4	;
water	15:8	0:0	4	next_off
op	15:17	0:0	4	=
call	15:19	15:31	4	avio_rb32
arg	15:29	15:31	5	pb
water	15:29	0:0	6	pb
water	15:32	0:0	4	;
for	16:8	20:12	4	(n = 0 ;n < s -> nb_streams;n ++)
forinit	16:13	16:18	5	n = 0 ;
water	16:13	0:0	6	n
op	16:15	0:0	6	=
water	16:17	0:0	6	0
water	16:18	0:0	6	;
cond	16:20	16:27	5	n < s -> nb_streams
water	16:20	0:0	6	n
op	16:22	0:0	6	<
water	16:24	0:0	6	s
op	16:25	0:0	6	->
water	16:27	0:0	6	nb_streams
forexpr	16:39	16:40	5	n ++
water	16:39	0:0	6	n
op	16:40	0:0	6	++
stmts	17:12	20:12	5	
if	17:12	20:12	6	(s -> streams [ n ] -> id == str_id)
cond	17:16	17:37	7	s -> streams [ n ] -> id == str_id
water	17:16	0:0	8	s
op	17:17	0:0	8	->
water	17:19	0:0	8	streams
op	17:26	0:0	8	[
water	17:27	0:0	8	n
op	17:28	0:0	8	]
op	17:29	0:0	8	->
water	17:31	0:0	8	id
op	17:34	0:0	8	==
water	17:37	0:0	8	str_id
stmts	17:45	20:12	7	
water	17:45	0:0	8	{
water	18:16	0:0	8	st
op	18:19	0:0	8	=
water	18:21	0:0	8	s
op	18:22	0:0	8	->
water	18:24	0:0	8	streams
op	18:31	0:0	8	[
water	18:32	0:0	8	n
op	18:33	0:0	8	]
water	18:34	0:0	8	;
break	19:16	19:21	8	
water	20:12	0:0	8	}
if	21:8	26:8	4	(n == s -> nb_streams)
cond	21:12	21:20	5	n == s -> nb_streams
water	21:12	0:0	6	n
op	21:14	0:0	6	==
water	21:17	0:0	6	s
op	21:18	0:0	6	->
water	21:20	0:0	6	nb_streams
stmts	21:32	26:8	5	
water	21:32	0:0	6	{
call	22:12	24:40	6	av_log
arg	22:19	22:20	7	s
water	22:19	0:0	8	s
arg	22:22	22:34	7	AV_LOG_ERROR
water	22:22	0:0	8	AV_LOG_ERROR
arg	23:19	23:73	7	"Invalid stream index %d for index at pos %"PRId64"\n"
water	23:19	0:0	8	"Invalid stream index %d for index at pos %"
water	23:63	0:0	8	PRId64
water	23:69	0:0	8	"\n"
arg	24:19	24:25	7	str_id
water	24:19	0:0	8	str_id
arg	24:27	24:40	7	avio_tell(pb)
call	24:27	24:39	8	avio_tell
arg	24:37	24:39	9	pb
water	24:37	0:0	10	pb
water	24:41	0:0	6	;
goto	25:12	25:21	6	skip
water	25:17	0:0	7	skip
water	26:8	0:0	6	}
else	26:10	33:8	4
stmts	26:15	33:8	5	
if	26:15	33:8	6	((avio_size (pb ) -avio_tell (pb ) ) / 14 < n_pkts)
cond	26:19	26:58	7	(avio_size (pb ) -avio_tell (pb ) ) / 14 < n_pkts
water	26:19	0:0	8	(
call	26:20	26:32	8	avio_size
arg	26:30	26:32	9	pb
water	26:30	0:0	10	pb
op	26:34	0:0	8	-
call	26:36	26:48	8	avio_tell
arg	26:46	26:48	9	pb
water	26:46	0:0	10	pb
water	26:49	0:0	8	)
op	26:51	0:0	8	/
water	26:53	0:0	8	14
op	26:56	0:0	8	<
water	26:58	0:0	8	n_pkts
stmts	26:66	33:8	7	
water	26:66	0:0	8	{
call	27:12	31:55	8	av_log
arg	27:19	27:20	9	s
water	27:19	0:0	10	s
arg	27:22	27:34	9	AV_LOG_ERROR
water	27:22	0:0	10	AV_LOG_ERROR
arg	28:19	29:76	9	"Nr. of packets in packet index for stream index %d ""exceeds filesize (%"PRId64" at %"PRId64" = %"PRId64")\n"
water	28:19	0:0	10	"Nr. of packets in packet index for stream index %d "
water	29:19	0:0	10	"exceeds filesize (%"
water	29:40	0:0	10	PRId64
water	29:46	0:0	10	" at %"
water	29:53	0:0	10	PRId64
water	29:59	0:0	10	" = %"
water	29:65	0:0	10	PRId64
water	29:71	0:0	10	")\n"
arg	30:19	30:25	9	str_id
water	30:19	0:0	10	str_id
arg	30:27	30:40	9	avio_size(pb)
call	30:27	30:39	10	avio_size
arg	30:37	30:39	11	pb
water	30:37	0:0	12	pb
arg	30:42	30:55	9	avio_tell(pb)
call	30:42	30:54	10	avio_tell
arg	30:52	30:54	11	pb
water	30:52	0:0	12	pb
arg	31:19	31:55	9	(avio_size(pb)-avio_tell(pb))/14
water	31:19	0:0	10	(
call	31:20	31:32	10	avio_size
arg	31:30	31:32	11	pb
water	31:30	0:0	12	pb
op	31:34	0:0	10	-
call	31:36	31:48	10	avio_tell
arg	31:46	31:48	11	pb
water	31:46	0:0	12	pb
water	31:49	0:0	10	)
op	31:51	0:0	10	/
water	31:53	0:0	10	14
water	31:56	0:0	8	;
goto	32:12	32:21	8	skip
water	32:17	0:0	9	skip
water	33:8	0:0	8	}
for	34:8	40:8	4	(n = 0 ;n < n_pkts;n ++)
forinit	34:13	34:18	5	n = 0 ;
water	34:13	0:0	6	n
op	34:15	0:0	6	=
water	34:17	0:0	6	0
water	34:18	0:0	6	;
cond	34:20	34:24	5	n < n_pkts
water	34:20	0:0	6	n
op	34:22	0:0	6	<
water	34:24	0:0	6	n_pkts
forexpr	34:32	34:33	5	n ++
water	34:32	0:0	6	n
op	34:33	0:0	6	++
stmts	34:37	40:8	5	
water	34:37	0:0	6	{
call	35:12	35:27	6	avio_skip
arg	35:22	35:24	7	pb
water	35:22	0:0	8	pb
arg	35:26	35:27	7	2
water	35:26	0:0	8	2
water	35:28	0:0	6	;
water	36:12	0:0	6	pts
op	36:16	0:0	6	=
call	36:18	36:30	6	avio_rb32
arg	36:28	36:30	7	pb
water	36:28	0:0	8	pb
water	36:31	0:0	6	;
water	37:12	0:0	6	pos
op	37:16	0:0	6	=
call	37:18	37:30	6	avio_rb32
arg	37:28	37:30	7	pb
water	37:28	0:0	8	pb
water	37:31	0:0	6	;
call	38:12	38:27	6	avio_skip
arg	38:22	38:24	7	pb
water	38:22	0:0	8	pb
arg	38:26	38:27	7	4
water	38:26	0:0	8	4
water	38:28	0:0	6	;
call	39:12	39:67	6	av_add_index_entry
arg	39:31	39:33	7	st
water	39:31	0:0	8	st
arg	39:35	39:38	7	pos
water	39:35	0:0	8	pos
arg	39:40	39:43	7	pts
water	39:40	0:0	8	pts
arg	39:45	39:46	7	0
water	39:45	0:0	8	0
arg	39:48	39:49	7	0
water	39:48	0:0	8	0
arg	39:51	39:67	7	AVINDEX_KEYFRAME
water	39:51	0:0	8	AVINDEX_KEYFRAME
water	39:68	0:0	6	;
water	40:8	0:0	6	}
label	41:0	41:4	4	skip :
if	42:8	47:8	4	(next_off &&avio_tell (pb ) < next_off &&avio_seek (pb ,next_off ,SEEK_SET ) < 0)
cond	42:12	43:48	5	next_off &&avio_tell (pb ) < next_off &&avio_seek (pb ,next_off ,SEEK_SET ) < 0
water	42:12	0:0	6	next_off
op	42:21	0:0	6	&&
call	42:24	42:36	6	avio_tell
arg	42:34	42:36	7	pb
water	42:34	0:0	8	pb
op	42:38	0:0	6	<
water	42:40	0:0	6	next_off
op	42:49	0:0	6	&&
call	43:12	43:44	6	avio_seek
arg	43:22	43:24	7	pb
water	43:22	0:0	8	pb
arg	43:26	43:34	7	next_off
water	43:26	0:0	8	next_off
arg	43:36	43:44	7	SEEK_SET
water	43:36	0:0	8	SEEK_SET
op	43:46	0:0	6	<
water	43:48	0:0	6	0
stmts	43:51	47:8	5	
water	43:51	0:0	6	{
call	44:12	45:63	6	av_log
arg	44:19	44:20	7	s
water	44:19	0:0	8	s
arg	44:22	44:34	7	AV_LOG_ERROR
water	44:22	0:0	8	AV_LOG_ERROR
arg	45:19	45:63	7	"Non-linear index detected, not supported\n"
water	45:19	0:0	8	"Non-linear index detected, not supported\n"
water	45:64	0:0	6	;
return	46:12	46:21	6	-1
op	46:19	0:0	7	-
water	46:20	0:0	7	1
water	47:8	0:0	6	}
water	48:4	0:0	4	}
water	48:22	0:0	2	;
return	49:4	49:12	2	0
water	49:11	0:0	3	0

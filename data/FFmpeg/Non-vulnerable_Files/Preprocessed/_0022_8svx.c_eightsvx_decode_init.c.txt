func	1:15	17:0	0	int	eightsvx_decode_init
params	1:39	0:0	1	
param	1:40	1:61	2	AVCodecContext *	avctx
stmnts	0:0	16:12	1	
decl	3:4	3:43	2	EightSvxContext	*esc
op	3:25	0:0	2	=
water	3:27	0:0	2	avctx
op	3:32	0:0	2	->
water	3:34	0:0	2	priv_data
if	4:4	7:4	2	(avctx -> channels < 1 || avctx -> channels > 2)
cond	4:8	4:49	3	avctx -> channels < 1 || avctx -> channels > 2
water	4:8	0:0	4	avctx
op	4:13	0:0	4	->
water	4:15	0:0	4	channels
op	4:24	0:0	4	<
water	4:26	0:0	4	1
op	4:28	0:0	4	||
water	4:31	0:0	4	avctx
op	4:36	0:0	4	->
water	4:38	0:0	4	channels
op	4:47	0:0	4	>
water	4:49	0:0	4	2
stmts	4:52	7:4	3	
water	4:52	0:0	4	{
call	5:8	5:82	4	av_log
arg	5:15	5:20	5	avctx
water	5:15	0:0	6	avctx
arg	5:22	5:34	5	AV_LOG_ERROR
water	5:22	0:0	6	AV_LOG_ERROR
arg	5:36	5:82	5	"8SVX does not support more than 2 channels\n"
water	5:36	0:0	6	"8SVX does not support more than 2 channels\n"
water	5:83	0:0	4	;
return	6:8	6:34	4	AVERROR_INVALIDDATA
water	6:15	0:0	5	AVERROR_INVALIDDATA
water	7:4	0:0	4	}
switch	8:4	14:4	2	(avctx -> codec -> id)
cond	8:12	8:26	3	avctx -> codec -> id
water	8:12	0:0	4	avctx
op	8:17	0:0	4	->
water	8:19	0:0	4	codec
op	8:24	0:0	4	->
water	8:26	0:0	4	id
stmts	8:30	14:4	3	
water	8:30	0:0	4	{
label	9:4	9:29	4	case AV_CODEC_ID_8SVX_FIB :
water	9:31	0:0	4	esc
op	9:34	0:0	4	->
water	9:36	0:0	4	table
op	9:42	0:0	4	=
water	9:44	0:0	4	fibonacci
water	9:53	0:0	4	;
break	9:58	9:63	4	
label	10:4	10:29	4	case AV_CODEC_ID_8SVX_EXP :
water	10:31	0:0	4	esc
op	10:34	0:0	4	->
water	10:36	0:0	4	table
op	10:42	0:0	4	=
water	10:44	0:0	4	exponential
water	10:55	0:0	4	;
break	10:58	10:63	4	
label	11:4	11:11	4	default :
call	12:8	12:78	4	av_log
arg	12:15	12:20	5	avctx
water	12:15	0:0	6	avctx
arg	12:22	12:34	5	AV_LOG_ERROR
water	12:22	0:0	6	AV_LOG_ERROR
arg	12:36	12:60	5	"Invalid codec id %d.\n"
water	12:36	0:0	6	"Invalid codec id %d.\n"
arg	12:62	12:78	5	avctx->codec->id
water	12:62	0:0	6	avctx
op	12:67	0:0	6	->
water	12:69	0:0	6	codec
op	12:74	0:0	6	->
water	12:76	0:0	6	id
water	12:79	0:0	4	;
return	13:8	13:34	4	AVERROR_INVALIDDATA
water	13:15	0:0	5	AVERROR_INVALIDDATA
water	14:4	0:0	4	}
water	15:4	0:0	2	avctx
op	15:9	0:0	2	->
water	15:11	0:0	2	sample_fmt
op	15:22	0:0	2	=
water	15:24	0:0	2	AV_SAMPLE_FMT_U8P
water	15:41	0:0	2	;
return	16:4	16:12	2	0
water	16:11	0:0	3	0

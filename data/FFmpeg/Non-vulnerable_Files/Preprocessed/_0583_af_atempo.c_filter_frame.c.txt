func	1:0	33:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:65	2	AVFrame *	src_buffer
stmnts	0:0	32:14	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
decl	4:4	4:37	2	ATempoContext	*atempo
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:43	2	AVFilterLink	*outlink
op	5:26	0:0	2	=
water	5:28	0:0	2	ctx
op	5:31	0:0	2	->
water	5:33	0:0	2	outputs
op	5:40	0:0	2	[
water	5:41	0:0	2	0
op	5:42	0:0	2	]
decl	6:4	6:15	2	int	ret
op	6:12	0:0	2	=
water	6:14	0:0	2	0
decl	7:4	7:37	2	int	n_in
op	7:13	0:0	2	=
water	7:15	0:0	2	src_buffer
op	7:25	0:0	2	->
water	7:27	0:0	2	nb_samples
decl	8:4	8:59	2	int	n_out
op	8:14	0:0	2	=
call	8:16	8:58	3	(int)
arg	8:22	8:58	4	0.5+((double)n_in)/atempo->tempo
water	8:22	0:0	5	0
op	8:23	0:0	5	.
water	8:24	0:0	5	5
op	8:26	0:0	5	+
water	8:28	0:0	5	(
water	8:29	0:0	5	(
water	8:30	0:0	5	double
water	8:36	0:0	5	)
water	8:37	0:0	5	n_in
water	8:41	0:0	5	)
op	8:43	0:0	5	/
water	8:45	0:0	5	atempo
op	8:51	0:0	5	->
water	8:53	0:0	5	tempo
decl	9:4	9:44	2	const uint8_t	*src
op	9:23	0:0	2	=
water	9:25	0:0	2	src_buffer
op	9:35	0:0	2	->
water	9:37	0:0	2	data
op	9:41	0:0	2	[
water	9:42	0:0	2	0
op	9:43	0:0	2	]
decl	10:4	10:56	2	const uint8_t	*src_end
op	10:27	0:0	2	=
water	10:29	0:0	2	src
op	10:33	0:0	2	+
water	10:35	0:0	2	n_in
op	10:40	0:0	2	*
water	10:42	0:0	2	atempo
op	10:48	0:0	2	->
water	10:50	0:0	2	stride
while	11:4	28:4	2	(src < src_end)
cond	11:11	11:17	3	src < src_end
water	11:11	0:0	4	src
op	11:15	0:0	4	<
water	11:17	0:0	4	src_end
stmts	11:26	28:4	3	
water	11:26	0:0	4	{
if	12:8	19:8	4	(! atempo -> dst_buffer)
cond	12:12	12:21	5	! atempo -> dst_buffer
op	12:12	0:0	6	!
water	12:13	0:0	6	atempo
op	12:19	0:0	6	->
water	12:21	0:0	6	dst_buffer
stmts	12:33	19:8	5	
water	12:33	0:0	6	{
water	13:12	0:0	6	atempo
op	13:18	0:0	6	->
water	13:20	0:0	6	dst_buffer
op	13:31	0:0	6	=
call	13:33	13:67	6	ff_get_audio_buffer
arg	13:53	13:60	7	outlink
water	13:53	0:0	8	outlink
arg	13:62	13:67	7	n_out
water	13:62	0:0	8	n_out
water	13:68	0:0	6	;
if	14:12	15:38	6	(! atempo -> dst_buffer)
cond	14:16	14:25	7	! atempo -> dst_buffer
op	14:16	0:0	8	!
water	14:17	0:0	8	atempo
op	14:23	0:0	8	->
water	14:25	0:0	8	dst_buffer
stmts	15:16	15:38	7	
return	15:16	15:38	8	AVERROR(ENOMEM)
call	15:23	15:37	9	AVERROR
arg	15:31	15:37	10	ENOMEM
water	15:31	0:0	11	ENOMEM
call	16:12	16:62	6	av_frame_copy_props
arg	16:32	16:50	7	atempo->dst_buffer
water	16:32	0:0	8	atempo
op	16:38	0:0	8	->
water	16:40	0:0	8	dst_buffer
arg	16:52	16:62	7	src_buffer
water	16:52	0:0	8	src_buffer
water	16:63	0:0	6	;
water	17:12	0:0	6	atempo
op	17:18	0:0	6	->
water	17:20	0:0	6	dst
op	17:24	0:0	6	=
water	17:26	0:0	6	atempo
op	17:32	0:0	6	->
water	17:34	0:0	6	dst_buffer
op	17:44	0:0	6	->
water	17:46	0:0	6	data
op	17:50	0:0	6	[
water	17:51	0:0	6	0
op	17:52	0:0	6	]
water	17:53	0:0	6	;
water	18:12	0:0	6	atempo
op	18:18	0:0	6	->
water	18:20	0:0	6	dst_end
op	18:28	0:0	6	=
water	18:30	0:0	6	atempo
op	18:36	0:0	6	->
water	18:38	0:0	6	dst
op	18:42	0:0	6	+
water	18:44	0:0	6	n_out
op	18:50	0:0	6	*
water	18:52	0:0	6	atempo
op	18:58	0:0	6	->
water	18:60	0:0	6	stride
water	18:66	0:0	6	;
water	19:8	0:0	6	}
call	20:8	20:70	4	yae_apply
arg	20:18	20:24	5	atempo
water	20:18	0:0	6	atempo
arg	20:26	20:30	5	&src
op	20:26	0:0	6	&
water	20:27	0:0	6	src
arg	20:32	20:39	5	src_end
water	20:32	0:0	6	src_end
arg	20:41	20:53	5	&atempo->dst
op	20:41	0:0	6	&
water	20:42	0:0	6	atempo
op	20:48	0:0	6	->
water	20:50	0:0	6	dst
arg	20:55	20:70	5	atempo->dst_end
water	20:55	0:0	6	atempo
op	20:61	0:0	6	->
water	20:63	0:0	6	dst_end
water	20:71	0:0	4	;
if	21:8	27:8	4	(atempo -> dst == atempo -> dst_end)
cond	21:12	21:35	5	atempo -> dst == atempo -> dst_end
water	21:12	0:0	6	atempo
op	21:18	0:0	6	->
water	21:20	0:0	6	dst
op	21:24	0:0	6	==
water	21:27	0:0	6	atempo
op	21:33	0:0	6	->
water	21:35	0:0	6	dst_end
stmts	21:44	27:8	5	
water	21:44	0:0	6	{
decl	22:12	23:44	6	int	n_samples
op	22:26	0:0	6	=
water	22:28	0:0	6	(
water	22:29	0:0	6	(
water	22:30	0:0	6	atempo
op	22:36	0:0	6	->
water	22:38	0:0	6	dst
op	22:42	0:0	6	-
water	22:44	0:0	6	atempo
op	22:50	0:0	6	->
water	22:52	0:0	6	dst_buffer
op	22:62	0:0	6	->
water	22:64	0:0	6	data
op	22:68	0:0	6	[
water	22:69	0:0	6	0
op	22:70	0:0	6	]
water	22:71	0:0	6	)
op	22:73	0:0	6	/
water	23:29	0:0	6	atempo
op	23:35	0:0	6	->
water	23:37	0:0	6	stride
water	23:43	0:0	6	)
water	24:12	0:0	6	ret
op	24:16	0:0	6	=
call	24:18	24:57	6	push_samples
arg	24:31	24:37	7	atempo
water	24:31	0:0	8	atempo
arg	24:39	24:46	7	outlink
water	24:39	0:0	8	outlink
arg	24:48	24:57	7	n_samples
water	24:48	0:0	8	n_samples
water	24:58	0:0	6	;
if	25:12	26:24	6	(ret < 0)
cond	25:16	25:22	7	ret < 0
water	25:16	0:0	8	ret
op	25:20	0:0	8	<
water	25:22	0:0	8	0
stmts	26:16	26:24	7	
goto	26:16	26:24	8	end
water	26:21	0:0	9	end
water	27:8	0:0	6	}
water	28:4	0:0	4	}
water	29:4	0:0	2	atempo
op	29:10	0:0	2	->
water	29:12	0:0	2	nsamples_in
op	29:24	0:0	2	+=
water	29:27	0:0	2	n_in
water	29:31	0:0	2	;
label	30:0	30:3	2	end :
call	31:4	31:29	2	av_frame_free
arg	31:18	31:29	3	&src_buffer
op	31:18	0:0	4	&
water	31:19	0:0	4	src_buffer
water	31:30	0:0	2	;
return	32:4	32:14	2	ret
water	32:11	0:0	3	ret

func	1:0	25:0	0	static void	write_palette
params	1:25	0:0	1	
param	1:26	1:46	2	AVFilterContext *	ctx
param	1:48	1:60	2	AVFrame *	out
stmnts	0:0	24:4	1	
decl	3:4	3:42	2	const PaletteGenContext	*s
op	3:31	0:0	2	=
water	3:33	0:0	2	ctx
op	3:36	0:0	2	->
water	3:38	0:0	2	priv
decl	4:4	4:24	2	int	x
water	4:9	0:0	2	,
decl	4:4	4:24	2	int	y
water	4:12	0:0	2	,
decl	4:4	4:24	2	int	box_id
op	4:21	0:0	2	=
water	4:23	0:0	2	0
decl	5:4	5:44	2	uint32_t	*pal
op	5:18	0:0	2	=
water	5:20	0:0	2	(
water	5:21	0:0	2	uint32_t
op	5:30	0:0	2	*
water	5:31	0:0	2	)
water	5:32	0:0	2	out
op	5:35	0:0	2	->
water	5:37	0:0	2	data
op	5:41	0:0	2	[
water	5:42	0:0	2	0
op	5:43	0:0	2	]
decl	6:4	6:50	2	const int	pal_linesize
op	6:27	0:0	2	=
water	6:29	0:0	2	out
op	6:32	0:0	2	->
water	6:34	0:0	2	linesize
op	6:42	0:0	2	[
water	6:43	0:0	2	0
op	6:44	0:0	2	]
op	6:46	0:0	2	>>
water	6:49	0:0	2	2
decl	7:4	7:27	2	uint32_t	last_color
op	7:24	0:0	2	=
water	7:26	0:0	2	0
for	8:4	20:4	2	(y = 0 ;y < out -> height;y ++)
forinit	8:9	8:14	3	y = 0 ;
water	8:9	0:0	4	y
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:25	3	y < out -> height
water	8:16	0:0	4	y
op	8:18	0:0	4	<
water	8:20	0:0	4	out
op	8:23	0:0	4	->
water	8:25	0:0	4	height
forexpr	8:33	8:34	3	y ++
water	8:33	0:0	4	y
op	8:34	0:0	4	++
stmts	8:38	20:4	3	
water	8:38	0:0	4	{
for	9:8	18:8	4	(x = 0 ;x < out -> width;x ++)
forinit	9:13	9:18	5	x = 0 ;
water	9:13	0:0	6	x
op	9:15	0:0	6	=
water	9:17	0:0	6	0
water	9:18	0:0	6	;
cond	9:20	9:29	5	x < out -> width
water	9:20	0:0	6	x
op	9:22	0:0	6	<
water	9:24	0:0	6	out
op	9:27	0:0	6	->
water	9:29	0:0	6	width
forexpr	9:36	9:37	5	x ++
water	9:36	0:0	6	x
op	9:37	0:0	6	++
stmts	9:41	18:8	5	
water	9:41	0:0	6	{
if	10:12	15:12	6	(box_id < s -> nb_boxes)
cond	10:16	10:28	7	box_id < s -> nb_boxes
water	10:16	0:0	8	box_id
op	10:23	0:0	8	<
water	10:25	0:0	8	s
op	10:26	0:0	8	->
water	10:28	0:0	8	nb_boxes
stmts	10:38	15:12	7	
water	10:38	0:0	8	{
water	11:16	0:0	8	pal
op	11:19	0:0	8	[
water	11:20	0:0	8	x
op	11:21	0:0	8	]
op	11:23	0:0	8	=
water	11:25	0:0	8	s
op	11:26	0:0	8	->
water	11:28	0:0	8	boxes
op	11:33	0:0	8	[
water	11:34	0:0	8	box_id
op	11:40	0:0	8	++
op	11:42	0:0	8	]
op	11:43	0:0	8	.
water	11:44	0:0	8	color
water	11:49	0:0	8	;
if	12:16	13:79	8	(( x || y ) && pal [ x ] == last_color)
cond	12:20	12:42	9	( x || y ) && pal [ x ] == last_color
water	12:20	0:0	10	(
water	12:21	0:0	10	x
op	12:23	0:0	10	||
water	12:26	0:0	10	y
water	12:27	0:0	10	)
op	12:29	0:0	10	&&
water	12:32	0:0	10	pal
op	12:35	0:0	10	[
water	12:36	0:0	10	x
op	12:37	0:0	10	]
op	12:39	0:0	10	==
water	12:42	0:0	10	last_color
stmts	13:20	13:79	9	
call	13:20	13:78	10	av_log
arg	13:27	13:30	11	ctx
water	13:27	0:0	12	ctx
arg	13:32	13:46	11	AV_LOG_WARNING
water	13:32	0:0	12	AV_LOG_WARNING
arg	13:48	13:70	11	"Dupped color: %08X\n"
water	13:48	0:0	12	"Dupped color: %08X\n"
arg	13:72	13:78	11	pal[x]
water	13:72	0:0	12	pal
op	13:75	0:0	12	[
water	13:76	0:0	12	x
op	13:77	0:0	12	]
water	13:79	0:0	10	;
water	14:16	0:0	8	last_color
op	14:27	0:0	8	=
water	14:29	0:0	8	pal
op	14:32	0:0	8	[
water	14:33	0:0	8	x
op	14:34	0:0	8	]
water	14:35	0:0	8	;
water	15:12	0:0	8	}
else	15:14	17:12	6
stmts	15:19	17:12	7	
water	15:19	0:0	8	{
water	16:16	0:0	8	pal
op	16:19	0:0	8	[
water	16:20	0:0	8	x
op	16:21	0:0	8	]
op	16:23	0:0	8	=
water	16:25	0:0	8	0
water	16:26	0:0	8	xff000000
water	16:35	0:0	8	;
water	17:12	0:0	8	}
water	18:8	0:0	6	}
water	19:8	0:0	4	pal
op	19:12	0:0	4	+=
water	19:15	0:0	4	pal_linesize
water	19:27	0:0	4	;
water	20:4	0:0	4	}
if	21:4	24:4	2	(s -> reserve_transparent)
cond	21:8	21:11	3	s -> reserve_transparent
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	reserve_transparent
stmts	21:32	24:4	3	
water	21:32	0:0	4	{
call	22:8	22:36	4	av_assert0
arg	22:19	22:36	5	s->nb_boxes<256
water	22:19	0:0	6	s
op	22:20	0:0	6	->
water	22:22	0:0	6	nb_boxes
op	22:31	0:0	6	<
water	22:33	0:0	6	256
water	22:37	0:0	4	;
water	23:8	0:0	4	pal
op	23:11	0:0	4	[
water	23:12	0:0	4	out
op	23:15	0:0	4	->
water	23:17	0:0	4	width
op	23:23	0:0	4	-
water	23:25	0:0	4	pal_linesize
op	23:38	0:0	4	-
water	23:40	0:0	4	1
op	23:41	0:0	4	]
op	23:43	0:0	4	=
water	23:45	0:0	4	0
water	23:46	0:0	4	x0000ff00
water	23:55	0:0	4	;
water	24:4	0:0	4	}

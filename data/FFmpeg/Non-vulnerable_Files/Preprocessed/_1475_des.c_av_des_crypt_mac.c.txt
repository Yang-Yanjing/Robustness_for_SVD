func	1:0	29:0	0	static void	av_des_crypt_mac
params	1:28	0:0	1	
param	1:29	1:37	2	AVDES *	d
param	1:39	1:51	2	uint8_t *	dst
param	1:53	1:71	2	const uint8_t *	src
param	1:73	1:82	2	int	count
param	1:84	1:95	2	uint8_t *	iv
param	1:97	1:108	2	int	decrypt
param	1:110	1:117	2	int	mac
stmnts	0:0	28:27	1	
decl	2:4	2:42	2	uint64_t	iv_val
op	2:20	0:0	2	=
water	2:22	0:0	2	iv
water	2:25	0:0	2	?
call	2:27	2:37	3	AV_RB64
arg	2:35	2:37	4	iv
water	2:35	0:0	5	iv
water	2:39	0:0	2	:
water	2:41	0:0	2	0
while	3:4	26:4	2	(count -- > 0)
cond	3:11	3:21	3	count -- > 0
water	3:11	0:0	4	count
op	3:16	0:0	4	--
op	3:19	0:0	4	>
water	3:21	0:0	4	0
stmts	3:24	26:4	3	
water	3:24	0:0	4	{
decl	4:8	4:24	4	uint64_t	dst_val
decl	5:8	5:49	4	uint64_t	src_val
op	5:25	0:0	4	=
water	5:27	0:0	4	src
water	5:31	0:0	4	?
call	5:33	5:44	5	AV_RB64
arg	5:41	5:44	6	src
water	5:41	0:0	7	src
water	5:46	0:0	4	:
water	5:48	0:0	4	0
if	6:8	14:8	4	(decrypt)
cond	6:12	6:12	5	decrypt
water	6:12	0:0	6	decrypt
stmts	6:21	14:8	5	
water	6:21	0:0	6	{
decl	7:12	7:34	6	uint64_t	tmp
op	7:25	0:0	6	=
water	7:27	0:0	6	src_val
if	8:12	11:12	6	(d -> triple_des)
cond	8:16	8:19	7	d -> triple_des
water	8:16	0:0	8	d
op	8:17	0:0	8	->
water	8:19	0:0	8	triple_des
stmts	8:31	11:12	7	
water	8:31	0:0	8	{
water	9:16	0:0	8	src_val
op	9:24	0:0	8	=
call	9:26	9:65	8	des_encdec
arg	9:37	9:44	9	src_val
water	9:37	0:0	10	src_val
arg	9:46	9:62	9	d->round_keys[2]
water	9:46	0:0	10	d
op	9:47	0:0	10	->
water	9:49	0:0	10	round_keys
op	9:59	0:0	10	[
water	9:60	0:0	10	2
op	9:61	0:0	10	]
arg	9:64	9:65	9	1
water	9:64	0:0	10	1
water	9:66	0:0	8	;
water	10:16	0:0	8	src_val
op	10:24	0:0	8	=
call	10:26	10:65	8	des_encdec
arg	10:37	10:44	9	src_val
water	10:37	0:0	10	src_val
arg	10:46	10:62	9	d->round_keys[1]
water	10:46	0:0	10	d
op	10:47	0:0	10	->
water	10:49	0:0	10	round_keys
op	10:59	0:0	10	[
water	10:60	0:0	10	1
op	10:61	0:0	10	]
arg	10:64	10:65	9	0
water	10:64	0:0	10	0
water	10:66	0:0	8	;
water	11:12	0:0	8	}
water	12:12	0:0	6	dst_val
op	12:20	0:0	6	=
call	12:22	12:61	6	des_encdec
arg	12:33	12:40	7	src_val
water	12:33	0:0	8	src_val
arg	12:42	12:58	7	d->round_keys[0]
water	12:42	0:0	8	d
op	12:43	0:0	8	->
water	12:45	0:0	8	round_keys
op	12:55	0:0	8	[
water	12:56	0:0	8	0
op	12:57	0:0	8	]
arg	12:60	12:61	7	1
water	12:60	0:0	8	1
op	12:63	0:0	6	^
water	12:65	0:0	6	iv_val
water	12:71	0:0	6	;
water	13:12	0:0	6	iv_val
op	13:19	0:0	6	=
water	13:21	0:0	6	iv
water	13:24	0:0	6	?
water	13:26	0:0	6	tmp
water	13:30	0:0	6	:
water	13:32	0:0	6	0
water	13:33	0:0	6	;
water	14:8	0:0	6	}
else	14:10	21:8	4
stmts	14:15	21:8	5	
water	14:15	0:0	6	{
water	15:12	0:0	6	dst_val
op	15:20	0:0	6	=
call	15:22	15:70	6	des_encdec
arg	15:33	15:49	7	src_val^iv_val
water	15:33	0:0	8	src_val
op	15:41	0:0	8	^
water	15:43	0:0	8	iv_val
arg	15:51	15:67	7	d->round_keys[0]
water	15:51	0:0	8	d
op	15:52	0:0	8	->
water	15:54	0:0	8	round_keys
op	15:64	0:0	8	[
water	15:65	0:0	8	0
op	15:66	0:0	8	]
arg	15:69	15:70	7	0
water	15:69	0:0	8	0
water	15:71	0:0	6	;
if	16:12	19:12	6	(d -> triple_des)
cond	16:16	16:19	7	d -> triple_des
water	16:16	0:0	8	d
op	16:17	0:0	8	->
water	16:19	0:0	8	triple_des
stmts	16:31	19:12	7	
water	16:31	0:0	8	{
water	17:16	0:0	8	dst_val
op	17:24	0:0	8	=
call	17:26	17:65	8	des_encdec
arg	17:37	17:44	9	dst_val
water	17:37	0:0	10	dst_val
arg	17:46	17:62	9	d->round_keys[1]
water	17:46	0:0	10	d
op	17:47	0:0	10	->
water	17:49	0:0	10	round_keys
op	17:59	0:0	10	[
water	17:60	0:0	10	1
op	17:61	0:0	10	]
arg	17:64	17:65	9	1
water	17:64	0:0	10	1
water	17:66	0:0	8	;
water	18:16	0:0	8	dst_val
op	18:24	0:0	8	=
call	18:26	18:65	8	des_encdec
arg	18:37	18:44	9	dst_val
water	18:37	0:0	10	dst_val
arg	18:46	18:62	9	d->round_keys[2]
water	18:46	0:0	10	d
op	18:47	0:0	10	->
water	18:49	0:0	10	round_keys
op	18:59	0:0	10	[
water	18:60	0:0	10	2
op	18:61	0:0	10	]
arg	18:64	18:65	9	0
water	18:64	0:0	10	0
water	18:66	0:0	8	;
water	19:12	0:0	8	}
water	20:12	0:0	6	iv_val
op	20:19	0:0	6	=
water	20:21	0:0	6	iv
water	20:24	0:0	6	?
water	20:26	0:0	6	dst_val
water	20:34	0:0	6	:
water	20:36	0:0	6	0
water	20:37	0:0	6	;
water	21:8	0:0	6	}
call	22:8	22:28	4	AV_WB64
arg	22:16	22:19	5	dst
water	22:16	0:0	6	dst
arg	22:21	22:28	5	dst_val
water	22:21	0:0	6	dst_val
water	22:29	0:0	4	;
water	23:8	0:0	4	src
op	23:12	0:0	4	+=
water	23:15	0:0	4	8
water	23:16	0:0	4	;
if	24:8	25:20	4	(! mac)
cond	24:12	24:13	5	! mac
op	24:12	0:0	6	!
water	24:13	0:0	6	mac
stmts	25:12	25:20	5	
water	25:12	0:0	6	dst
op	25:16	0:0	6	+=
water	25:19	0:0	6	8
water	25:20	0:0	6	;
water	26:4	0:0	4	}
if	27:4	28:27	2	(iv)
cond	27:8	27:8	3	iv
water	27:8	0:0	4	iv
stmts	28:8	28:27	3	
call	28:8	28:26	4	AV_WB64
arg	28:16	28:18	5	iv
water	28:16	0:0	6	iv
arg	28:20	28:26	5	iv_val
water	28:20	0:0	6	iv_val
water	28:27	0:0	4	;
func	31:0	59:0	0	static void	av_des_crypt_mac
params	31:28	0:0	1	
param	31:29	31:37	2	AVDES *	d
param	31:39	31:51	2	uint8_t *	dst
param	31:53	31:71	2	const uint8_t *	src
param	31:73	31:82	2	int	count
param	31:84	31:95	2	uint8_t *	iv
param	31:97	31:108	2	int	decrypt
param	31:110	31:117	2	int	mac
stmnts	0:0	58:27	1	
decl	32:4	32:42	2	uint64_t	iv_val
op	32:20	0:0	2	=
water	32:22	0:0	2	iv
water	32:25	0:0	2	?
call	32:27	32:37	3	AV_RB64
arg	32:35	32:37	4	iv
water	32:35	0:0	5	iv
water	32:39	0:0	2	:
water	32:41	0:0	2	0
while	33:4	56:4	2	(count -- > 0)
cond	33:11	33:21	3	count -- > 0
water	33:11	0:0	4	count
op	33:16	0:0	4	--
op	33:19	0:0	4	>
water	33:21	0:0	4	0
stmts	33:24	56:4	3	
water	33:24	0:0	4	{
decl	34:8	34:24	4	uint64_t	dst_val
decl	35:8	35:49	4	uint64_t	src_val
op	35:25	0:0	4	=
water	35:27	0:0	4	src
water	35:31	0:0	4	?
call	35:33	35:44	5	AV_RB64
arg	35:41	35:44	6	src
water	35:41	0:0	7	src
water	35:46	0:0	4	:
water	35:48	0:0	4	0
if	36:8	44:8	4	(decrypt)
cond	36:12	36:12	5	decrypt
water	36:12	0:0	6	decrypt
stmts	36:21	44:8	5	
water	36:21	0:0	6	{
decl	37:12	37:34	6	uint64_t	tmp
op	37:25	0:0	6	=
water	37:27	0:0	6	src_val
if	38:12	41:12	6	(d -> triple_des)
cond	38:16	38:19	7	d -> triple_des
water	38:16	0:0	8	d
op	38:17	0:0	8	->
water	38:19	0:0	8	triple_des
stmts	38:31	41:12	7	
water	38:31	0:0	8	{
water	39:16	0:0	8	src_val
op	39:24	0:0	8	=
call	39:26	39:65	8	des_encdec
arg	39:37	39:44	9	src_val
water	39:37	0:0	10	src_val
arg	39:46	39:62	9	d->round_keys[2]
water	39:46	0:0	10	d
op	39:47	0:0	10	->
water	39:49	0:0	10	round_keys
op	39:59	0:0	10	[
water	39:60	0:0	10	2
op	39:61	0:0	10	]
arg	39:64	39:65	9	1
water	39:64	0:0	10	1
water	39:66	0:0	8	;
water	40:16	0:0	8	src_val
op	40:24	0:0	8	=
call	40:26	40:65	8	des_encdec
arg	40:37	40:44	9	src_val
water	40:37	0:0	10	src_val
arg	40:46	40:62	9	d->round_keys[1]
water	40:46	0:0	10	d
op	40:47	0:0	10	->
water	40:49	0:0	10	round_keys
op	40:59	0:0	10	[
water	40:60	0:0	10	1
op	40:61	0:0	10	]
arg	40:64	40:65	9	0
water	40:64	0:0	10	0
water	40:66	0:0	8	;
water	41:12	0:0	8	}
water	42:12	0:0	6	dst_val
op	42:20	0:0	6	=
call	42:22	42:61	6	des_encdec
arg	42:33	42:40	7	src_val
water	42:33	0:0	8	src_val
arg	42:42	42:58	7	d->round_keys[0]
water	42:42	0:0	8	d
op	42:43	0:0	8	->
water	42:45	0:0	8	round_keys
op	42:55	0:0	8	[
water	42:56	0:0	8	0
op	42:57	0:0	8	]
arg	42:60	42:61	7	1
water	42:60	0:0	8	1
op	42:63	0:0	6	^
water	42:65	0:0	6	iv_val
water	42:71	0:0	6	;
water	43:12	0:0	6	iv_val
op	43:19	0:0	6	=
water	43:21	0:0	6	iv
water	43:24	0:0	6	?
water	43:26	0:0	6	tmp
water	43:30	0:0	6	:
water	43:32	0:0	6	0
water	43:33	0:0	6	;
water	44:8	0:0	6	}
else	44:10	51:8	4
stmts	44:15	51:8	5	
water	44:15	0:0	6	{
water	45:12	0:0	6	dst_val
op	45:20	0:0	6	=
call	45:22	45:70	6	des_encdec
arg	45:33	45:49	7	src_val^iv_val
water	45:33	0:0	8	src_val
op	45:41	0:0	8	^
water	45:43	0:0	8	iv_val
arg	45:51	45:67	7	d->round_keys[0]
water	45:51	0:0	8	d
op	45:52	0:0	8	->
water	45:54	0:0	8	round_keys
op	45:64	0:0	8	[
water	45:65	0:0	8	0
op	45:66	0:0	8	]
arg	45:69	45:70	7	0
water	45:69	0:0	8	0
water	45:71	0:0	6	;
if	46:12	49:12	6	(d -> triple_des)
cond	46:16	46:19	7	d -> triple_des
water	46:16	0:0	8	d
op	46:17	0:0	8	->
water	46:19	0:0	8	triple_des
stmts	46:31	49:12	7	
water	46:31	0:0	8	{
water	47:16	0:0	8	dst_val
op	47:24	0:0	8	=
call	47:26	47:65	8	des_encdec
arg	47:37	47:44	9	dst_val
water	47:37	0:0	10	dst_val
arg	47:46	47:62	9	d->round_keys[1]
water	47:46	0:0	10	d
op	47:47	0:0	10	->
water	47:49	0:0	10	round_keys
op	47:59	0:0	10	[
water	47:60	0:0	10	1
op	47:61	0:0	10	]
arg	47:64	47:65	9	1
water	47:64	0:0	10	1
water	47:66	0:0	8	;
water	48:16	0:0	8	dst_val
op	48:24	0:0	8	=
call	48:26	48:65	8	des_encdec
arg	48:37	48:44	9	dst_val
water	48:37	0:0	10	dst_val
arg	48:46	48:62	9	d->round_keys[2]
water	48:46	0:0	10	d
op	48:47	0:0	10	->
water	48:49	0:0	10	round_keys
op	48:59	0:0	10	[
water	48:60	0:0	10	2
op	48:61	0:0	10	]
arg	48:64	48:65	9	0
water	48:64	0:0	10	0
water	48:66	0:0	8	;
water	49:12	0:0	8	}
water	50:12	0:0	6	iv_val
op	50:19	0:0	6	=
water	50:21	0:0	6	iv
water	50:24	0:0	6	?
water	50:26	0:0	6	dst_val
water	50:34	0:0	6	:
water	50:36	0:0	6	0
water	50:37	0:0	6	;
water	51:8	0:0	6	}
call	52:8	52:28	4	AV_WB64
arg	52:16	52:19	5	dst
water	52:16	0:0	6	dst
arg	52:21	52:28	5	dst_val
water	52:21	0:0	6	dst_val
water	52:29	0:0	4	;
water	53:8	0:0	4	src
op	53:12	0:0	4	+=
water	53:15	0:0	4	8
water	53:16	0:0	4	;
if	54:8	55:20	4	(! mac)
cond	54:12	54:13	5	! mac
op	54:12	0:0	6	!
water	54:13	0:0	6	mac
stmts	55:12	55:20	5	
water	55:12	0:0	6	dst
op	55:16	0:0	6	+=
water	55:19	0:0	6	8
water	55:20	0:0	6	;
water	56:4	0:0	4	}
if	57:4	58:27	2	(iv)
cond	57:8	57:8	3	iv
water	57:8	0:0	4	iv
stmts	58:8	58:27	3	
call	58:8	58:26	4	AV_WB64
arg	58:16	58:18	5	iv
water	58:16	0:0	6	iv
arg	58:20	58:26	5	iv_val
water	58:20	0:0	6	iv_val
water	58:27	0:0	4	;

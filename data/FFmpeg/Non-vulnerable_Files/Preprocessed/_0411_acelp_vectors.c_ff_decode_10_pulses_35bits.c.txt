func	1:0	19:0	0	void	ff_decode_10_pulses_35bits
params	1:31	0:0	1	
param	1:32	1:58	2	const int16_t *	fixed_index
param	2:32	2:54	2	AMRFixed *	fixed_sparse
param	3:32	3:58	2	const uint8_t *	gray_decode
param	4:32	4:52	2	int	half_pulse_count
param	4:54	4:62	2	int	bits
stmnts	0:0	18:4	1	
decl	6:4	6:9	2	int	i
decl	7:4	7:30	2	int	mask
op	7:13	0:0	2	=
water	7:15	0:0	2	(
water	7:16	0:0	2	1
op	7:18	0:0	2	<<
water	7:21	0:0	2	bits
water	7:25	0:0	2	)
op	7:27	0:0	2	-
water	7:29	0:0	2	1
water	8:4	0:0	2	fixed_sparse
op	8:16	0:0	2	->
water	8:18	0:0	2	no_repeat_mask
op	8:33	0:0	2	=
water	8:35	0:0	2	0
water	8:36	0:0	2	;
water	9:4	0:0	2	fixed_sparse
op	9:16	0:0	2	->
water	9:18	0:0	2	n
op	9:20	0:0	2	=
water	9:22	0:0	2	2
op	9:24	0:0	2	*
water	9:26	0:0	2	half_pulse_count
water	9:42	0:0	2	;
for	10:4	18:4	2	(i = 0 ;i < half_pulse_count;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:20	3	i < half_pulse_count
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	half_pulse_count
forexpr	10:38	10:39	3	i ++
water	10:38	0:0	4	i
op	10:39	0:0	4	++
stmts	10:43	18:4	3	
water	10:43	0:0	4	{
decl	11:8	11:69	4	const int	pos1
op	11:25	0:0	4	=
water	11:27	0:0	4	gray_decode
op	11:38	0:0	4	[
water	11:39	0:0	4	fixed_index
op	11:50	0:0	4	[
water	11:51	0:0	4	2
op	11:52	0:0	4	*
water	11:53	0:0	4	i
op	11:54	0:0	4	+
water	11:55	0:0	4	1
op	11:56	0:0	4	]
op	11:58	0:0	4	&
water	11:60	0:0	4	mask
op	11:64	0:0	4	]
op	11:66	0:0	4	+
water	11:68	0:0	4	i
decl	12:8	12:69	4	const int	pos2
op	12:25	0:0	4	=
water	12:27	0:0	4	gray_decode
op	12:38	0:0	4	[
water	12:39	0:0	4	fixed_index
op	12:50	0:0	4	[
water	12:51	0:0	4	2
op	12:52	0:0	4	*
water	12:53	0:0	4	i
op	12:56	0:0	4	]
op	12:58	0:0	4	&
water	12:60	0:0	4	mask
op	12:64	0:0	4	]
op	12:66	0:0	4	+
water	12:68	0:0	4	i
decl	13:8	13:74	4	const float	sign
op	13:25	0:0	4	=
water	13:27	0:0	4	(
water	13:28	0:0	4	fixed_index
op	13:39	0:0	4	[
water	13:40	0:0	4	2
op	13:41	0:0	4	*
water	13:42	0:0	4	i
op	13:43	0:0	4	+
water	13:44	0:0	4	1
op	13:45	0:0	4	]
op	13:47	0:0	4	&
water	13:49	0:0	4	(
water	13:50	0:0	4	1
op	13:52	0:0	4	<<
water	13:55	0:0	4	bits
water	13:59	0:0	4	)
water	13:60	0:0	4	)
water	13:62	0:0	4	?
op	13:64	0:0	4	-
water	13:65	0:0	4	1
op	13:66	0:0	4	.
water	13:67	0:0	4	0
water	13:69	0:0	4	:
water	13:71	0:0	4	1
op	13:72	0:0	4	.
water	13:73	0:0	4	0
water	14:8	0:0	4	fixed_sparse
op	14:20	0:0	4	->
water	14:22	0:0	4	x
op	14:23	0:0	4	[
water	14:24	0:0	4	2
op	14:25	0:0	4	*
water	14:26	0:0	4	i
op	14:27	0:0	4	+
water	14:28	0:0	4	1
op	14:29	0:0	4	]
op	14:31	0:0	4	=
water	14:33	0:0	4	pos1
water	14:37	0:0	4	;
water	15:8	0:0	4	fixed_sparse
op	15:20	0:0	4	->
water	15:22	0:0	4	x
op	15:23	0:0	4	[
water	15:24	0:0	4	2
op	15:25	0:0	4	*
water	15:26	0:0	4	i
op	15:29	0:0	4	]
op	15:31	0:0	4	=
water	15:33	0:0	4	pos2
water	15:37	0:0	4	;
water	16:8	0:0	4	fixed_sparse
op	16:20	0:0	4	->
water	16:22	0:0	4	y
op	16:23	0:0	4	[
water	16:24	0:0	4	2
op	16:25	0:0	4	*
water	16:26	0:0	4	i
op	16:27	0:0	4	+
water	16:28	0:0	4	1
op	16:29	0:0	4	]
op	16:31	0:0	4	=
water	16:33	0:0	4	sign
water	16:37	0:0	4	;
water	17:8	0:0	4	fixed_sparse
op	17:20	0:0	4	->
water	17:22	0:0	4	y
op	17:23	0:0	4	[
water	17:24	0:0	4	2
op	17:25	0:0	4	*
water	17:26	0:0	4	i
op	17:29	0:0	4	]
op	17:31	0:0	4	=
water	17:33	0:0	4	pos2
op	17:38	0:0	4	<
water	17:40	0:0	4	pos1
water	17:45	0:0	4	?
op	17:47	0:0	4	-
water	17:48	0:0	4	sign
water	17:53	0:0	4	:
water	17:55	0:0	4	sign
water	17:59	0:0	4	;
water	18:4	0:0	4	}

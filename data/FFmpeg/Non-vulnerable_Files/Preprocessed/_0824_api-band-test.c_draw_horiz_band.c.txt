decl	1:0	1:26	0	int	draw_horiz_band_called
func	2:0	28:0	0	static void	draw_horiz_band
params	2:27	0:0	1	
param	2:28	2:47	2	AVCodecContext *	ctx
param	2:49	2:66	2	const AVFrame *	fr
param	2:68	2:81	2	int	offset[4]
param	3:28	3:46	2	int	slice_position
param	3:48	3:56	2	int	type
param	3:58	3:68	2	int	height
stmnts	0:0	27:4	1	
decl	5:4	5:9	2	int	i
decl	6:4	6:42	2	const AVPixFmtDescriptor	*pix_fmt_desc
decl	7:4	7:26	2	int	chroma_w
water	7:16	0:0	2	,
decl	7:4	7:26	2	int	chroma_h
decl	8:4	8:28	2	int	shift_slice_position
decl	9:4	9:20	2	int	shift_height
water	10:4	0:0	2	draw_horiz_band_called
op	10:27	0:0	2	=
water	10:29	0:0	2	1
water	10:30	0:0	2	;
water	11:4	0:0	2	pix_fmt_desc
op	11:17	0:0	2	=
call	11:19	11:51	2	av_pix_fmt_desc_get
arg	11:39	11:51	3	ctx->pix_fmt
water	11:39	0:0	4	ctx
op	11:42	0:0	4	->
water	11:44	0:0	4	pix_fmt
water	11:52	0:0	2	;
water	12:4	0:0	2	chroma_w
op	12:13	0:0	2	=
op	12:15	0:0	2	-
water	12:16	0:0	2	(
water	12:17	0:0	2	(
op	12:18	0:0	2	-
water	12:19	0:0	2	ctx
op	12:22	0:0	2	->
water	12:24	0:0	2	width
water	12:29	0:0	2	)
op	12:31	0:0	2	>>
water	12:34	0:0	2	pix_fmt_desc
op	12:46	0:0	2	->
water	12:48	0:0	2	log2_chroma_w
water	12:61	0:0	2	)
water	12:62	0:0	2	;
water	13:4	0:0	2	chroma_h
op	13:13	0:0	2	=
op	13:15	0:0	2	-
water	13:16	0:0	2	(
water	13:17	0:0	2	(
op	13:18	0:0	2	-
water	13:19	0:0	2	height
water	13:25	0:0	2	)
op	13:27	0:0	2	>>
water	13:30	0:0	2	pix_fmt_desc
op	13:42	0:0	2	->
water	13:44	0:0	2	log2_chroma_h
water	13:57	0:0	2	)
water	13:58	0:0	2	;
water	14:4	0:0	2	shift_slice_position
op	14:25	0:0	2	=
op	14:27	0:0	2	-
water	14:28	0:0	2	(
water	14:29	0:0	2	(
op	14:30	0:0	2	-
water	14:31	0:0	2	slice_position
water	14:45	0:0	2	)
op	14:47	0:0	2	>>
water	14:50	0:0	2	pix_fmt_desc
op	14:62	0:0	2	->
water	14:64	0:0	2	log2_chroma_h
water	14:77	0:0	2	)
water	14:78	0:0	2	;
water	15:4	0:0	2	shift_height
op	15:17	0:0	2	=
op	15:19	0:0	2	-
water	15:20	0:0	2	(
water	15:21	0:0	2	(
op	15:22	0:0	2	-
water	15:23	0:0	2	ctx
op	15:26	0:0	2	->
water	15:28	0:0	2	height
water	15:34	0:0	2	)
op	15:36	0:0	2	>>
water	15:39	0:0	2	pix_fmt_desc
op	15:51	0:0	2	->
water	15:53	0:0	2	log2_chroma_h
water	15:66	0:0	2	)
water	15:67	0:0	2	;
for	16:4	19:4	2	(i = 0 ;i < height;i ++)
forinit	16:9	16:14	3	i = 0 ;
water	16:9	0:0	4	i
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:20	3	i < height
water	16:16	0:0	4	i
op	16:18	0:0	4	<
water	16:20	0:0	4	height
forexpr	16:28	16:29	3	i ++
water	16:28	0:0	4	i
op	16:29	0:0	4	++
stmts	16:33	19:4	3	
water	16:33	0:0	4	{
call	17:8	18:72	4	memcpy
arg	17:15	17:79	5	slice_byte_buffer+ctx->width*slice_position+i*ctx->width
water	17:15	0:0	6	slice_byte_buffer
op	17:33	0:0	6	+
water	17:35	0:0	6	ctx
op	17:38	0:0	6	->
water	17:40	0:0	6	width
op	17:46	0:0	6	*
water	17:48	0:0	6	slice_position
op	17:63	0:0	6	+
water	17:65	0:0	6	i
op	17:67	0:0	6	*
water	17:69	0:0	6	ctx
op	17:72	0:0	6	->
water	17:74	0:0	6	width
arg	18:15	18:60	5	fr->data[0]+offset[0]+i*fr->linesize[0]
water	18:15	0:0	6	fr
op	18:17	0:0	6	->
water	18:19	0:0	6	data
op	18:23	0:0	6	[
water	18:24	0:0	6	0
op	18:25	0:0	6	]
op	18:27	0:0	6	+
water	18:29	0:0	6	offset
op	18:35	0:0	6	[
water	18:36	0:0	6	0
op	18:37	0:0	6	]
op	18:39	0:0	6	+
water	18:41	0:0	6	i
op	18:43	0:0	6	*
water	18:45	0:0	6	fr
op	18:47	0:0	6	->
water	18:49	0:0	6	linesize
op	18:57	0:0	6	[
water	18:58	0:0	6	0
op	18:59	0:0	6	]
arg	18:62	18:72	5	ctx->width
water	18:62	0:0	6	ctx
op	18:65	0:0	6	->
water	18:67	0:0	6	width
water	18:73	0:0	4	;
water	19:4	0:0	4	}
for	20:4	23:4	2	(i = 0 ;i < chroma_h;i ++)
forinit	20:9	20:14	3	i = 0 ;
water	20:9	0:0	4	i
op	20:11	0:0	4	=
water	20:13	0:0	4	0
water	20:14	0:0	4	;
cond	20:16	20:20	3	i < chroma_h
water	20:16	0:0	4	i
op	20:18	0:0	4	<
water	20:20	0:0	4	chroma_h
forexpr	20:30	20:31	3	i ++
water	20:30	0:0	4	i
op	20:31	0:0	4	++
stmts	20:35	23:4	3	
water	20:35	0:0	4	{
call	21:8	22:70	4	memcpy
arg	21:15	21:108	5	slice_byte_buffer+ctx->width*ctx->height+chroma_w*shift_slice_position+i*chroma_w
water	21:15	0:0	6	slice_byte_buffer
op	21:33	0:0	6	+
water	21:35	0:0	6	ctx
op	21:38	0:0	6	->
water	21:40	0:0	6	width
op	21:46	0:0	6	*
water	21:48	0:0	6	ctx
op	21:51	0:0	6	->
water	21:53	0:0	6	height
op	21:60	0:0	6	+
water	21:62	0:0	6	chroma_w
op	21:71	0:0	6	*
water	21:73	0:0	6	shift_slice_position
op	21:94	0:0	6	+
water	21:96	0:0	6	i
op	21:98	0:0	6	*
water	21:100	0:0	6	chroma_w
arg	22:15	22:60	5	fr->data[1]+offset[1]+i*fr->linesize[1]
water	22:15	0:0	6	fr
op	22:17	0:0	6	->
water	22:19	0:0	6	data
op	22:23	0:0	6	[
water	22:24	0:0	6	1
op	22:25	0:0	6	]
op	22:27	0:0	6	+
water	22:29	0:0	6	offset
op	22:35	0:0	6	[
water	22:36	0:0	6	1
op	22:37	0:0	6	]
op	22:39	0:0	6	+
water	22:41	0:0	6	i
op	22:43	0:0	6	*
water	22:45	0:0	6	fr
op	22:47	0:0	6	->
water	22:49	0:0	6	linesize
op	22:57	0:0	6	[
water	22:58	0:0	6	1
op	22:59	0:0	6	]
arg	22:62	22:70	5	chroma_w
water	22:62	0:0	6	chroma_w
water	22:71	0:0	4	;
water	23:4	0:0	4	}
for	24:4	27:4	2	(i = 0 ;i < chroma_h;i ++)
forinit	24:9	24:14	3	i = 0 ;
water	24:9	0:0	4	i
op	24:11	0:0	4	=
water	24:13	0:0	4	0
water	24:14	0:0	4	;
cond	24:16	24:20	3	i < chroma_h
water	24:16	0:0	4	i
op	24:18	0:0	4	<
water	24:20	0:0	4	chroma_h
forexpr	24:30	24:31	3	i ++
water	24:30	0:0	4	i
op	24:31	0:0	4	++
stmts	24:35	27:4	3	
water	24:35	0:0	4	{
call	25:8	26:70	4	memcpy
arg	25:15	25:134	5	slice_byte_buffer+ctx->width*ctx->height+chroma_w*shift_height+chroma_w*shift_slice_position+i*chroma_w
water	25:15	0:0	6	slice_byte_buffer
op	25:33	0:0	6	+
water	25:35	0:0	6	ctx
op	25:38	0:0	6	->
water	25:40	0:0	6	width
op	25:46	0:0	6	*
water	25:48	0:0	6	ctx
op	25:51	0:0	6	->
water	25:53	0:0	6	height
op	25:60	0:0	6	+
water	25:62	0:0	6	chroma_w
op	25:71	0:0	6	*
water	25:73	0:0	6	shift_height
op	25:86	0:0	6	+
water	25:88	0:0	6	chroma_w
op	25:97	0:0	6	*
water	25:99	0:0	6	shift_slice_position
op	25:120	0:0	6	+
water	25:122	0:0	6	i
op	25:124	0:0	6	*
water	25:126	0:0	6	chroma_w
arg	26:15	26:60	5	fr->data[2]+offset[2]+i*fr->linesize[2]
water	26:15	0:0	6	fr
op	26:17	0:0	6	->
water	26:19	0:0	6	data
op	26:23	0:0	6	[
water	26:24	0:0	6	2
op	26:25	0:0	6	]
op	26:27	0:0	6	+
water	26:29	0:0	6	offset
op	26:35	0:0	6	[
water	26:36	0:0	6	2
op	26:37	0:0	6	]
op	26:39	0:0	6	+
water	26:41	0:0	6	i
op	26:43	0:0	6	*
water	26:45	0:0	6	fr
op	26:47	0:0	6	->
water	26:49	0:0	6	linesize
op	26:57	0:0	6	[
water	26:58	0:0	6	2
op	26:59	0:0	6	]
arg	26:62	26:70	5	chroma_w
water	26:62	0:0	6	chroma_w
water	26:71	0:0	4	;
water	27:4	0:0	4	}

func	1:24	22:0	0	void	yuv2planeX_16_c_template
params	2:24	0:0	1	
param	2:25	2:46	2	const int16_t *	filter
param	2:48	2:62	2	int	filterSize
param	3:25	3:44	2	const int32_t * *	src
param	3:46	3:60	2	uint16_t *	dest
param	3:62	3:70	2	int	dstW
param	4:25	4:39	2	int	big_endian
param	4:41	4:56	2	int	output_bits
stmnts	0:0	21:4	1	
decl	6:4	6:9	2	int	i
decl	7:4	7:18	2	int	shift
op	7:14	0:0	2	=
water	7:16	0:0	2	15
call	8:4	8:32	2	av_assert0
arg	8:15	8:32	3	output_bits==16
water	8:15	0:0	4	output_bits
op	8:27	0:0	4	==
water	8:30	0:0	4	16
water	8:33	0:0	2	;
for	9:4	21:4	2	(i = 0 ;i < dstW;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:20	3	i < dstW
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	dstW
forexpr	9:26	9:27	3	i ++
water	9:26	0:0	4	i
op	9:27	0:0	4	++
stmts	9:31	21:4	3	
water	9:31	0:0	4	{
decl	10:8	10:34	4	int	val
op	10:16	0:0	4	=
water	10:18	0:0	4	1
op	10:20	0:0	4	<<
water	10:23	0:0	4	(
water	10:24	0:0	4	shift
op	10:30	0:0	4	-
water	10:32	0:0	4	1
water	10:33	0:0	4	)
decl	11:8	11:13	4	int	j
water	17:8	0:0	4	val
op	17:12	0:0	4	-=
water	17:15	0:0	4	0
water	17:16	0:0	4	x40000000
water	17:25	0:0	4	;
for	18:8	19:50	4	(j = 0 ;j < filterSize;j ++)
forinit	18:13	18:18	5	j = 0 ;
water	18:13	0:0	6	j
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:24	5	j < filterSize
water	18:20	0:0	6	j
op	18:22	0:0	6	<
water	18:24	0:0	6	filterSize
forexpr	18:36	18:37	5	j ++
water	18:36	0:0	6	j
op	18:37	0:0	6	++
stmts	19:12	19:50	5	
water	19:12	0:0	6	val
op	19:16	0:0	6	+=
water	19:19	0:0	6	src
op	19:22	0:0	6	[
water	19:23	0:0	6	j
op	19:24	0:0	6	]
op	19:25	0:0	6	[
water	19:26	0:0	6	i
op	19:27	0:0	6	]
op	19:29	0:0	6	*
water	19:31	0:0	6	(
water	19:32	0:0	6	unsigned
water	19:40	0:0	6	)
water	19:41	0:0	6	filter
op	19:47	0:0	6	[
water	19:48	0:0	6	j
op	19:49	0:0	6	]
water	19:50	0:0	6	;
call	20:8	20:47	4	output_pixel
arg	20:21	20:29	5	&dest[i]
op	20:21	0:0	6	&
water	20:22	0:0	6	dest
op	20:26	0:0	6	[
water	20:27	0:0	6	i
op	20:28	0:0	6	]
arg	20:31	20:34	5	val
water	20:31	0:0	6	val
arg	20:36	20:42	5	0x8000
water	20:36	0:0	6	0
water	20:37	0:0	6	x8000
arg	20:44	20:47	5	int
water	20:44	0:0	6	int
water	20:48	0:0	4	;
water	21:4	0:0	4	}
decl	28:4	28:9	0	int	i
decl	29:4	29:18	0	int	shift
op	29:14	0:0	0	=
water	29:16	0:0	0	15
decl	32:8	32:34	0	int	val
op	32:16	0:0	0	=
water	32:18	0:0	0	1
op	32:20	0:0	0	<<
water	32:23	0:0	0	(
water	32:24	0:0	0	shift
op	32:30	0:0	0	-
water	32:32	0:0	0	1
water	32:33	0:0	0	)
decl	33:8	33:13	0	int	j

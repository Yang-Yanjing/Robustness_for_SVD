func	1:15	48:0	0	int	opengl_read_limits
params	1:37	0:0	1	
param	1:38	1:59	2	OpenGLContext *	opengl
stmnts	3:4	47:27	1	
water	3:4	0:0	2	static
water	3:11	0:0	2	const
water	3:17	0:0	2	struct
water	3:23	0:0	2	{
water	4:8	0:0	2	const
water	4:14	0:0	2	char
op	4:19	0:0	2	*
water	4:20	0:0	2	extension
water	4:29	0:0	2	;
water	5:8	0:0	2	int
water	5:12	0:0	2	major
water	5:17	0:0	2	;
water	6:8	0:0	2	int
water	6:12	0:0	2	minor
water	6:17	0:0	2	;
water	7:4	0:0	2	}
water	7:6	0:0	2	required_extensions
op	7:25	0:0	2	[
op	7:26	0:0	2	]
op	7:28	0:0	2	=
water	7:30	0:0	2	{
water	8:8	0:0	2	{
water	8:10	0:0	2	"GL_ARB_multitexture"
water	8:31	0:0	2	,
water	8:41	0:0	2	1
water	8:42	0:0	2	,
water	8:44	0:0	2	3
water	8:46	0:0	2	}
water	8:47	0:0	2	,
water	9:8	0:0	2	{
water	9:10	0:0	2	"GL_ARB_vertex_buffer_object"
water	9:39	0:0	2	,
water	9:41	0:0	2	1
water	9:42	0:0	2	,
water	9:44	0:0	2	5
water	9:46	0:0	2	}
water	9:47	0:0	2	,
water	10:8	0:0	2	{
water	10:10	0:0	2	"GL_ARB_vertex_shader"
water	10:32	0:0	2	,
water	10:41	0:0	2	2
water	10:42	0:0	2	,
water	10:44	0:0	2	0
water	10:46	0:0	2	}
water	10:47	0:0	2	,
water	11:8	0:0	2	{
water	11:10	0:0	2	"GL_ARB_fragment_shader"
water	11:34	0:0	2	,
water	11:41	0:0	2	2
water	11:42	0:0	2	,
water	11:44	0:0	2	0
water	11:46	0:0	2	}
water	11:47	0:0	2	,
water	12:8	0:0	2	{
water	12:10	0:0	2	"GL_ARB_shader_objects"
water	12:33	0:0	2	,
water	12:41	0:0	2	2
water	12:42	0:0	2	,
water	12:44	0:0	2	0
water	12:46	0:0	2	}
water	12:47	0:0	2	,
water	13:8	0:0	2	{
water	13:10	0:0	2	NULL
water	13:14	0:0	2	,
water	13:41	0:0	2	0
water	13:42	0:0	2	,
water	13:44	0:0	2	0
water	13:46	0:0	2	}
water	14:4	0:0	2	}
water	14:5	0:0	2	;
decl	15:4	15:23	2	int	i
water	15:9	0:0	2	,
decl	15:4	15:23	2	int	major
water	15:16	0:0	2	,
decl	15:4	15:23	2	int	minor
decl	16:4	16:36	2	const char	*extensions
water	16:26	0:0	2	,
decl	16:4	16:36	2	const char	*version
water	17:4	0:0	2	version
op	17:12	0:0	2	=
call	17:14	17:36	2	glGetString
arg	17:26	17:36	3	GL_VERSION
water	17:26	0:0	4	GL_VERSION
water	17:37	0:0	2	;
water	18:4	0:0	2	extensions
op	18:15	0:0	2	=
call	18:17	18:42	2	glGetString
arg	18:29	18:42	3	GL_EXTENSIONS
water	18:29	0:0	4	GL_EXTENSIONS
water	18:43	0:0	2	;
call	19:4	19:64	2	av_log
arg	19:11	19:17	3	opengl
water	19:11	0:0	4	opengl
arg	19:19	19:31	3	AV_LOG_DEBUG
water	19:19	0:0	4	AV_LOG_DEBUG
arg	19:33	19:55	3	"OpenGL version: %s\n"
water	19:33	0:0	4	"OpenGL version: %s\n"
arg	19:57	19:64	3	version
water	19:57	0:0	4	version
water	19:65	0:0	2	;
call	20:4	20:43	2	sscanf
arg	20:11	20:18	3	version
water	20:11	0:0	4	version
arg	20:20	20:27	3	"%d.%d"
water	20:20	0:0	4	"%d.%d"
arg	20:29	20:35	3	&major
op	20:29	0:0	4	&
water	20:30	0:0	4	major
arg	20:37	20:43	3	&minor
op	20:37	0:0	4	&
water	20:38	0:0	4	minor
water	20:44	0:0	2	;
for	21:4	30:4	2	(i = 0 ;required_extensions [ i ] . extension;i ++)
forinit	21:9	21:14	3	i = 0 ;
water	21:9	0:0	4	i
op	21:11	0:0	4	=
water	21:13	0:0	4	0
water	21:14	0:0	4	;
cond	21:16	21:39	3	required_extensions [ i ] . extension
water	21:16	0:0	4	required_extensions
op	21:35	0:0	4	[
water	21:36	0:0	4	i
op	21:37	0:0	4	]
op	21:38	0:0	4	.
water	21:39	0:0	4	extension
forexpr	21:50	21:51	3	i ++
water	21:50	0:0	4	i
op	21:51	0:0	4	++
stmts	21:55	30:4	3	
water	21:55	0:0	4	{
if	22:8	29:8	4	(major < required_extensions [ i ] . major && ( major == required_extensions [ i ] . major && minor < required_extensions [ i ] . minor ) && !strstr (extensions ,required_extensions [ i ] . extension ))
cond	22:12	24:64	5	major < required_extensions [ i ] . major && ( major == required_extensions [ i ] . major && minor < required_extensions [ i ] . minor ) && !strstr (extensions ,required_extensions [ i ] . extension )
water	22:12	0:0	6	major
op	22:18	0:0	6	<
water	22:20	0:0	6	required_extensions
op	22:39	0:0	6	[
water	22:40	0:0	6	i
op	22:41	0:0	6	]
op	22:42	0:0	6	.
water	22:43	0:0	6	major
op	22:49	0:0	6	&&
water	23:12	0:0	6	(
water	23:13	0:0	6	major
op	23:19	0:0	6	==
water	23:22	0:0	6	required_extensions
op	23:41	0:0	6	[
water	23:42	0:0	6	i
op	23:43	0:0	6	]
op	23:44	0:0	6	.
water	23:45	0:0	6	major
op	23:51	0:0	6	&&
water	23:54	0:0	6	minor
op	23:60	0:0	6	<
water	23:62	0:0	6	required_extensions
op	23:81	0:0	6	[
water	23:82	0:0	6	i
op	23:83	0:0	6	]
op	23:84	0:0	6	.
water	23:85	0:0	6	minor
water	23:90	0:0	6	)
op	23:92	0:0	6	&&
op	24:12	0:0	6	!
call	24:13	24:64	6	strstr
arg	24:20	24:30	7	extensions
water	24:20	0:0	8	extensions
arg	24:32	24:64	7	required_extensions[i].extension
water	24:32	0:0	8	required_extensions
op	24:51	0:0	8	[
water	24:52	0:0	8	i
op	24:53	0:0	8	]
op	24:54	0:0	8	.
water	24:55	0:0	8	extension
stmts	24:67	29:8	5	
water	24:67	0:0	6	{
call	25:12	26:51	6	av_log
arg	25:19	25:25	7	opengl
water	25:19	0:0	8	opengl
arg	25:27	25:39	7	AV_LOG_ERROR
water	25:27	0:0	8	AV_LOG_ERROR
arg	25:41	25:84	7	"Required extension %s is not supported.\n"
water	25:41	0:0	8	"Required extension %s is not supported.\n"
arg	26:19	26:51	7	required_extensions[i].extension
water	26:19	0:0	8	required_extensions
op	26:38	0:0	8	[
water	26:39	0:0	8	i
op	26:40	0:0	8	]
op	26:41	0:0	8	.
water	26:42	0:0	8	extension
water	26:52	0:0	6	;
call	27:12	27:85	6	av_log
arg	27:19	27:25	7	opengl
water	27:19	0:0	8	opengl
arg	27:27	27:39	7	AV_LOG_DEBUG
water	27:27	0:0	8	AV_LOG_DEBUG
arg	27:41	27:73	7	"Supported extensions are: %s\n"
water	27:41	0:0	8	"Supported extensions are: %s\n"
arg	27:75	27:85	7	extensions
water	27:75	0:0	8	extensions
water	27:86	0:0	6	;
return	28:12	28:34	6	AVERROR(ENOSYS)
call	28:19	28:33	7	AVERROR
arg	28:27	28:33	8	ENOSYS
water	28:27	0:0	9	ENOSYS
water	29:8	0:0	6	}
water	30:4	0:0	4	}
call	31:4	31:64	2	glGetIntegerv
arg	31:18	31:37	3	GL_MAX_TEXTURE_SIZE
water	31:18	0:0	4	GL_MAX_TEXTURE_SIZE
arg	31:39	31:64	3	&opengl->max_texture_size
op	31:39	0:0	4	&
water	31:40	0:0	4	opengl
op	31:46	0:0	4	->
water	31:48	0:0	4	max_texture_size
water	31:65	0:0	2	;
call	32:4	32:67	2	glGetIntegerv
arg	32:18	32:38	3	GL_MAX_VIEWPORT_DIMS
water	32:18	0:0	4	GL_MAX_VIEWPORT_DIMS
arg	32:40	32:67	3	&opengl->max_viewport_width
op	32:40	0:0	4	&
water	32:41	0:0	4	opengl
op	32:47	0:0	4	->
water	32:49	0:0	4	max_viewport_width
water	32:68	0:0	2	;
water	33:4	0:0	2	opengl
op	33:10	0:0	2	->
water	33:12	0:0	2	non_pow_2_textures
op	33:31	0:0	2	=
water	33:33	0:0	2	major
op	33:39	0:0	2	>=
water	33:42	0:0	2	2
op	33:44	0:0	2	||
call	33:47	33:99	2	strstr
arg	33:54	33:64	3	extensions
water	33:54	0:0	4	extensions
arg	33:66	33:99	3	"GL_ARB_texture_non_power_of_two"
water	33:66	0:0	4	"GL_ARB_texture_non_power_of_two"
water	33:100	0:0	2	;
water	35:4	0:0	2	opengl
op	35:10	0:0	2	->
water	35:12	0:0	2	unpack_subimage
op	35:28	0:0	2	=
op	35:30	0:0	2	!
op	35:31	0:0	2	!
call	35:32	35:75	2	strstr
arg	35:39	35:49	3	extensions
water	35:39	0:0	4	extensions
arg	35:51	35:75	3	"GL_EXT_unpack_subimage"
water	35:51	0:0	4	"GL_EXT_unpack_subimage"
water	35:76	0:0	2	;
water	37:4	0:0	2	opengl
op	37:10	0:0	2	->
water	37:12	0:0	2	unpack_subimage
op	37:28	0:0	2	=
water	37:30	0:0	2	1
water	37:31	0:0	2	;
call	39:4	39:115	2	av_log
arg	39:11	39:17	3	opengl
water	39:11	0:0	4	opengl
arg	39:19	39:31	3	AV_LOG_DEBUG
water	39:19	0:0	4	AV_LOG_DEBUG
arg	39:33	39:72	3	"Non Power of 2 textures support: %s\n"
water	39:33	0:0	4	"Non Power of 2 textures support: %s\n"
arg	39:74	39:115	3	opengl->non_pow_2_textures?"Yes":"No"
water	39:74	0:0	4	opengl
op	39:80	0:0	4	->
water	39:82	0:0	4	non_pow_2_textures
water	39:101	0:0	4	?
water	39:103	0:0	4	"Yes"
water	39:109	0:0	4	:
water	39:111	0:0	4	"No"
water	39:116	0:0	2	;
call	40:4	40:114	2	av_log
arg	40:11	40:17	3	opengl
water	40:11	0:0	4	opengl
arg	40:19	40:31	3	AV_LOG_DEBUG
water	40:19	0:0	4	AV_LOG_DEBUG
arg	40:33	40:74	3	"Unpack Subimage extension support: %s\n"
water	40:33	0:0	4	"Unpack Subimage extension support: %s\n"
arg	40:76	40:114	3	opengl->unpack_subimage?"Yes":"No"
water	40:76	0:0	4	opengl
op	40:82	0:0	4	->
water	40:84	0:0	4	unpack_subimage
water	40:100	0:0	4	?
water	40:102	0:0	4	"Yes"
water	40:108	0:0	4	:
water	40:110	0:0	4	"No"
water	40:115	0:0	2	;
call	41:4	41:112	2	av_log
arg	41:11	41:17	3	opengl
water	41:11	0:0	4	opengl
arg	41:19	41:31	3	AV_LOG_DEBUG
water	41:19	0:0	4	AV_LOG_DEBUG
arg	41:33	41:60	3	"Max texture size: %dx%d\n"
water	41:33	0:0	4	"Max texture size: %dx%d\n"
arg	41:62	41:86	3	opengl->max_texture_size
water	41:62	0:0	4	opengl
op	41:68	0:0	4	->
water	41:70	0:0	4	max_texture_size
arg	41:88	41:112	3	opengl->max_texture_size
water	41:88	0:0	4	opengl
op	41:94	0:0	4	->
water	41:96	0:0	4	max_texture_size
water	41:113	0:0	2	;
call	42:4	43:66	2	av_log
arg	42:11	42:17	3	opengl
water	42:11	0:0	4	opengl
arg	42:19	42:31	3	AV_LOG_DEBUG
water	42:19	0:0	4	AV_LOG_DEBUG
arg	42:33	42:61	3	"Max viewport size: %dx%d\n"
water	42:33	0:0	4	"Max viewport size: %dx%d\n"
arg	43:11	43:37	3	opengl->max_viewport_width
water	43:11	0:0	4	opengl
op	43:17	0:0	4	->
water	43:19	0:0	4	max_viewport_width
arg	43:39	43:66	3	opengl->max_viewport_height
water	43:39	0:0	4	opengl
op	43:45	0:0	4	->
water	43:47	0:0	4	max_viewport_height
water	43:67	0:0	2	;
call	44:4	44:29	2	OPENGL_ERROR_CHECK
arg	44:23	44:29	3	opengl
water	44:23	0:0	4	opengl
water	44:30	0:0	2	;
return	45:4	45:12	2	0
water	45:11	0:0	3	0
label	46:2	46:6	2	fail :
return	47:4	47:27	2	AVERROR_EXTERNAL
water	47:11	0:0	3	AVERROR_EXTERNAL

func	1:0	16:0	0	static int	filter_slice
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
param	1:46	1:55	2	void *	arg
param	1:57	1:66	2	int	jobnr
param	1:68	1:79	2	int	nb_jobs
stmnts	0:0	15:12	1	
decl	3:4	3:31	2	NoiseContext	*s
op	3:20	0:0	2	=
water	3:22	0:0	2	ctx
op	3:25	0:0	2	->
water	3:27	0:0	2	priv
decl	4:4	4:24	2	ThreadData	*td
op	4:19	0:0	2	=
water	4:21	0:0	2	arg
decl	5:4	5:13	2	int	plane
for	6:4	14:4	2	(plane = 0 ;plane < s -> nb_planes;plane ++)
forinit	6:9	6:18	3	plane = 0 ;
water	6:9	0:0	4	plane
op	6:15	0:0	4	=
water	6:17	0:0	4	0
water	6:18	0:0	4	;
cond	6:20	6:31	3	plane < s -> nb_planes
water	6:20	0:0	4	plane
op	6:26	0:0	4	<
water	6:28	0:0	4	s
op	6:29	0:0	4	->
water	6:31	0:0	4	nb_planes
forexpr	6:42	6:47	3	plane ++
water	6:42	0:0	4	plane
op	6:47	0:0	4	++
stmts	6:51	14:4	3	
water	6:51	0:0	4	{
decl	7:8	7:43	4	const int	height
op	7:25	0:0	4	=
water	7:27	0:0	4	s
op	7:28	0:0	4	->
water	7:30	0:0	4	height
op	7:36	0:0	4	[
water	7:37	0:0	4	plane
op	7:42	0:0	4	]
decl	8:8	8:57	4	const int	start
op	8:25	0:0	4	=
water	8:27	0:0	4	(
water	8:28	0:0	4	height
op	8:35	0:0	4	*
water	8:38	0:0	4	jobnr
water	8:46	0:0	4	)
op	8:48	0:0	4	/
water	8:50	0:0	4	nb_jobs
decl	9:8	9:57	4	const int	end
op	9:25	0:0	4	=
water	9:27	0:0	4	(
water	9:28	0:0	4	height
op	9:35	0:0	4	*
water	9:37	0:0	4	(
water	9:38	0:0	4	jobnr
op	9:43	0:0	4	+
water	9:44	0:0	4	1
water	9:45	0:0	4	)
water	9:46	0:0	4	)
op	9:48	0:0	4	/
water	9:50	0:0	4	nb_jobs
call	10:8	13:55	4	noise
arg	10:14	10:69	5	td->out->data[plane]+start*td->out->linesize[plane]
water	10:14	0:0	6	td
op	10:16	0:0	6	->
water	10:18	0:0	6	out
op	10:21	0:0	6	->
water	10:23	0:0	6	data
op	10:27	0:0	6	[
water	10:28	0:0	6	plane
op	10:33	0:0	6	]
op	10:35	0:0	6	+
water	10:37	0:0	6	start
op	10:43	0:0	6	*
water	10:45	0:0	6	td
op	10:47	0:0	6	->
water	10:49	0:0	6	out
op	10:52	0:0	6	->
water	10:54	0:0	6	linesize
op	10:62	0:0	6	[
water	10:63	0:0	6	plane
op	10:68	0:0	6	]
arg	11:14	11:68	5	td->in->data[plane]+start*td->in->linesize[plane]
water	11:14	0:0	6	td
op	11:16	0:0	6	->
water	11:18	0:0	6	in
op	11:20	0:0	6	->
water	11:22	0:0	6	data
op	11:26	0:0	6	[
water	11:27	0:0	6	plane
op	11:32	0:0	6	]
op	11:35	0:0	6	+
water	11:37	0:0	6	start
op	11:43	0:0	6	*
water	11:45	0:0	6	td
op	11:47	0:0	6	->
water	11:49	0:0	6	in
op	11:51	0:0	6	->
water	11:53	0:0	6	linesize
op	11:61	0:0	6	[
water	11:62	0:0	6	plane
op	11:67	0:0	6	]
arg	12:14	12:38	5	td->out->linesize[plane]
water	12:14	0:0	6	td
op	12:16	0:0	6	->
water	12:18	0:0	6	out
op	12:21	0:0	6	->
water	12:23	0:0	6	linesize
op	12:31	0:0	6	[
water	12:32	0:0	6	plane
op	12:37	0:0	6	]
arg	12:40	12:63	5	td->in->linesize[plane]
water	12:40	0:0	6	td
op	12:42	0:0	6	->
water	12:44	0:0	6	in
op	12:46	0:0	6	->
water	12:48	0:0	6	linesize
op	12:56	0:0	6	[
water	12:57	0:0	6	plane
op	12:62	0:0	6	]
arg	13:14	13:33	5	s->bytewidth[plane]
water	13:14	0:0	6	s
op	13:15	0:0	6	->
water	13:17	0:0	6	bytewidth
op	13:26	0:0	6	[
water	13:27	0:0	6	plane
op	13:32	0:0	6	]
arg	13:35	13:40	5	start
water	13:35	0:0	6	start
arg	13:42	13:45	5	end
water	13:42	0:0	6	end
arg	13:47	13:48	5	s
water	13:47	0:0	6	s
arg	13:50	13:55	5	plane
water	13:50	0:0	6	plane
water	13:56	0:0	4	;
water	14:4	0:0	4	}
return	15:4	15:12	2	0
water	15:11	0:0	3	0

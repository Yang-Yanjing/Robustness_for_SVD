func	1:0	114:0	0	static int	http_send_data
params	1:25	0:0	1	
param	1:26	1:40	2	HTTPContext *	c
stmnts	0:0	113:12	1	
decl	3:4	3:16	2	int	len
water	3:11	0:0	2	,
decl	3:4	3:16	2	int	ret
for	4:4	112:4	2	(;;)
forinit	4:8	4:8	3	;
water	4:8	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	4:12	112:4	3	
water	4:12	0:0	4	{
if	5:8	12:8	4	(c -> buffer_ptr >= c -> buffer_end)
cond	5:12	5:32	5	c -> buffer_ptr >= c -> buffer_end
water	5:12	0:0	6	c
op	5:13	0:0	6	->
water	5:15	0:0	6	buffer_ptr
op	5:26	0:0	6	>=
water	5:29	0:0	6	c
op	5:30	0:0	6	->
water	5:32	0:0	6	buffer_end
stmts	5:44	12:8	5	
water	5:44	0:0	6	{
water	6:12	0:0	6	ret
op	6:16	0:0	6	=
call	6:18	6:37	6	http_prepare_data
arg	6:36	6:37	7	c
water	6:36	0:0	8	c
water	6:38	0:0	6	;
if	7:12	8:25	6	(ret < 0)
cond	7:16	7:22	7	ret < 0
water	7:16	0:0	8	ret
op	7:20	0:0	8	<
water	7:22	0:0	8	0
stmts	8:16	8:25	7	
return	8:16	8:25	8	-1
op	8:23	0:0	9	-
water	8:24	0:0	9	1
else	9:12	11:21	6
stmts	9:17	11:21	7	
if	9:17	11:21	8	(ret)
cond	9:21	9:21	9	ret
water	9:21	0:0	10	ret
stmts	11:16	11:21	9	
break	11:16	11:21	10	
water	12:8	0:0	6	}
else	12:10	111:8	4
stmts	12:15	111:8	5	
water	12:15	0:0	6	{
if	13:12	92:12	6	(c -> is_packetized)
cond	13:16	13:19	7	c -> is_packetized
water	13:16	0:0	8	c
op	13:17	0:0	8	->
water	13:19	0:0	8	is_packetized
stmts	13:34	92:12	7	
water	13:34	0:0	8	{
water	15:16	0:0	8	len
op	15:20	0:0	8	=
water	15:22	0:0	8	c
op	15:23	0:0	8	->
water	15:25	0:0	8	buffer_end
op	15:36	0:0	8	-
water	15:38	0:0	8	c
op	15:39	0:0	8	->
water	15:41	0:0	8	buffer_ptr
water	15:51	0:0	8	;
if	16:16	21:16	8	(len < 4)
cond	16:20	16:26	9	len < 4
water	16:20	0:0	10	len
op	16:24	0:0	10	<
water	16:26	0:0	10	4
stmts	16:29	21:16	9	
water	16:29	0:0	10	{
label	18:16	18:21	10	fail1 :
water	19:20	0:0	10	c
op	19:21	0:0	10	->
water	19:23	0:0	10	buffer_ptr
op	19:34	0:0	10	=
water	19:36	0:0	10	c
op	19:37	0:0	10	->
water	19:39	0:0	10	buffer_end
water	19:49	0:0	10	;
return	20:20	20:28	10	0
water	20:27	0:0	11	0
water	21:16	0:0	10	}
water	22:16	0:0	8	len
op	22:20	0:0	8	=
water	22:22	0:0	8	(
water	22:23	0:0	8	c
op	22:24	0:0	8	->
water	22:26	0:0	8	buffer_ptr
op	22:36	0:0	8	[
water	22:37	0:0	8	0
op	22:38	0:0	8	]
op	22:40	0:0	8	<<
water	22:43	0:0	8	24
water	22:45	0:0	8	)
op	22:47	0:0	8	|
water	23:20	0:0	8	(
water	23:21	0:0	8	c
op	23:22	0:0	8	->
water	23:24	0:0	8	buffer_ptr
op	23:34	0:0	8	[
water	23:35	0:0	8	1
op	23:36	0:0	8	]
op	23:38	0:0	8	<<
water	23:41	0:0	8	16
water	23:43	0:0	8	)
op	23:45	0:0	8	|
water	24:20	0:0	8	(
water	24:21	0:0	8	c
op	24:22	0:0	8	->
water	24:24	0:0	8	buffer_ptr
op	24:34	0:0	8	[
water	24:35	0:0	8	2
op	24:36	0:0	8	]
op	24:38	0:0	8	<<
water	24:41	0:0	8	8
water	24:42	0:0	8	)
op	24:44	0:0	8	|
water	25:20	0:0	8	(
water	25:21	0:0	8	c
op	25:22	0:0	8	->
water	25:24	0:0	8	buffer_ptr
op	25:34	0:0	8	[
water	25:35	0:0	8	3
op	25:36	0:0	8	]
water	25:37	0:0	8	)
water	25:38	0:0	8	;
if	26:16	27:30	8	(len > ( c -> buffer_end - c -> buffer_ptr ))
cond	26:20	26:56	9	len > ( c -> buffer_end - c -> buffer_ptr )
water	26:20	0:0	10	len
op	26:24	0:0	10	>
water	26:26	0:0	10	(
water	26:27	0:0	10	c
op	26:28	0:0	10	->
water	26:30	0:0	10	buffer_end
op	26:41	0:0	10	-
water	26:43	0:0	10	c
op	26:44	0:0	10	->
water	26:46	0:0	10	buffer_ptr
water	26:56	0:0	10	)
stmts	27:20	27:30	9	
goto	27:20	27:30	10	fail1
water	27:25	0:0	11	fail1
if	28:16	31:16	8	((get_packet_send_clock (c ) -get_server_clock (c ) ) > 0)
cond	28:20	28:71	9	(get_packet_send_clock (c ) -get_server_clock (c ) ) > 0
water	28:20	0:0	10	(
call	28:21	28:44	10	get_packet_send_clock
arg	28:43	28:44	11	c
water	28:43	0:0	12	c
op	28:46	0:0	10	-
call	28:48	28:66	10	get_server_clock
arg	28:65	28:66	11	c
water	28:65	0:0	12	c
water	28:67	0:0	10	)
op	28:69	0:0	10	>
water	28:71	0:0	10	0
stmts	28:74	31:16	9	
water	28:74	0:0	10	{
return	30:20	30:28	10	0
water	30:27	0:0	11	0
water	31:16	0:0	10	}
water	32:16	0:0	8	c
op	32:17	0:0	8	->
water	32:19	0:0	8	data_count
op	32:30	0:0	8	+=
water	32:33	0:0	8	len
water	32:36	0:0	8	;
call	33:16	33:59	8	update_datarate
arg	33:32	33:44	9	&c->datarate
op	33:32	0:0	10	&
water	33:33	0:0	10	c
op	33:34	0:0	10	->
water	33:36	0:0	10	datarate
arg	33:46	33:59	9	c->data_count
water	33:46	0:0	10	c
op	33:47	0:0	10	->
water	33:49	0:0	10	data_count
water	33:60	0:0	8	;
if	34:16	35:50	8	(c -> stream)
cond	34:20	34:23	9	c -> stream
water	34:20	0:0	10	c
op	34:21	0:0	10	->
water	34:23	0:0	10	stream
stmts	35:20	35:50	9	
water	35:20	0:0	10	c
op	35:21	0:0	10	->
water	35:23	0:0	10	stream
op	35:29	0:0	10	->
water	35:31	0:0	10	bytes_served
op	35:44	0:0	10	+=
water	35:47	0:0	10	len
water	35:50	0:0	10	;
if	36:16	83:16	8	(c -> rtp_protocol == RTSP_LOWER_TRANSPORT_TCP)
cond	36:20	36:39	9	c -> rtp_protocol == RTSP_LOWER_TRANSPORT_TCP
water	36:20	0:0	10	c
op	36:21	0:0	10	->
water	36:23	0:0	10	rtp_protocol
op	36:36	0:0	10	==
water	36:39	0:0	10	RTSP_LOWER_TRANSPORT_TCP
stmts	36:65	83:16	9	
water	36:65	0:0	10	{
decl	38:20	38:35	10	AVIOContext	*pb
decl	39:20	39:47	10	int	interleaved_index
water	39:41	0:0	10	,
decl	39:20	39:47	10	int	size
decl	40:20	40:37	10	uint8_t	header[4]
decl	41:20	41:39	10	HTTPContext	*rtsp_c
water	42:20	0:0	10	rtsp_c
op	42:27	0:0	10	=
water	42:29	0:0	10	c
op	42:30	0:0	10	->
water	42:32	0:0	10	rtsp_c
water	42:38	0:0	10	;
if	44:20	45:33	10	(! rtsp_c)
cond	44:24	44:25	11	! rtsp_c
op	44:24	0:0	12	!
water	44:25	0:0	12	rtsp_c
stmts	45:24	45:33	11	
return	45:24	45:33	12	-1
op	45:31	0:0	13	-
water	45:32	0:0	13	1
if	47:20	48:29	10	(rtsp_c -> state != RTSPSTATE_WAIT_REQUEST)
cond	47:24	47:41	11	rtsp_c -> state != RTSPSTATE_WAIT_REQUEST
water	47:24	0:0	12	rtsp_c
op	47:30	0:0	12	->
water	47:32	0:0	12	state
op	47:38	0:0	12	!=
water	47:41	0:0	12	RTSPSTATE_WAIT_REQUEST
stmts	48:24	48:29	11	
break	48:24	48:29	12	
if	49:20	50:34	10	(avio_open_dyn_buf (& pb ) < 0)
cond	49:24	49:49	11	avio_open_dyn_buf (& pb ) < 0
call	49:24	49:45	12	avio_open_dyn_buf
arg	49:42	49:45	13	&pb
op	49:42	0:0	14	&
water	49:43	0:0	14	pb
op	49:47	0:0	12	<
water	49:49	0:0	12	0
stmts	50:24	50:34	11	
goto	50:24	50:34	12	fail1
water	50:29	0:0	13	fail1
water	51:20	0:0	10	interleaved_index
op	51:38	0:0	10	=
water	51:40	0:0	10	c
op	51:41	0:0	10	->
water	51:43	0:0	10	packet_stream_index
op	51:63	0:0	10	*
water	51:65	0:0	10	2
water	51:66	0:0	10	;
if	53:20	54:43	10	(c -> buffer_ptr [ 1 ] == 200)
cond	53:24	53:44	11	c -> buffer_ptr [ 1 ] == 200
water	53:24	0:0	12	c
op	53:25	0:0	12	->
water	53:27	0:0	12	buffer_ptr
op	53:37	0:0	12	[
water	53:38	0:0	12	1
op	53:39	0:0	12	]
op	53:41	0:0	12	==
water	53:44	0:0	12	200
stmts	54:24	54:43	11	
water	54:24	0:0	12	interleaved_index
op	54:41	0:0	12	++
water	54:43	0:0	12	;
water	56:20	0:0	10	header
op	56:26	0:0	10	[
water	56:27	0:0	10	0
op	56:28	0:0	10	]
op	56:30	0:0	10	=
water	56:32	0:0	10	'$'
water	56:35	0:0	10	;
water	57:20	0:0	10	header
op	57:26	0:0	10	[
water	57:27	0:0	10	1
op	57:28	0:0	10	]
op	57:30	0:0	10	=
water	57:32	0:0	10	interleaved_index
water	57:49	0:0	10	;
water	58:20	0:0	10	header
op	58:26	0:0	10	[
water	58:27	0:0	10	2
op	58:28	0:0	10	]
op	58:30	0:0	10	=
water	58:32	0:0	10	len
op	58:36	0:0	10	>>
water	58:39	0:0	10	8
water	58:40	0:0	10	;
water	59:20	0:0	10	header
op	59:26	0:0	10	[
water	59:27	0:0	10	3
op	59:28	0:0	10	]
op	59:30	0:0	10	=
water	59:32	0:0	10	len
water	59:35	0:0	10	;
call	60:20	60:44	10	avio_write
arg	60:31	60:33	11	pb
water	60:31	0:0	12	pb
arg	60:35	60:41	11	header
water	60:35	0:0	12	header
arg	60:43	60:44	11	4
water	60:43	0:0	12	4
water	60:45	0:0	10	;
water	62:20	0:0	10	c
op	62:21	0:0	10	->
water	62:23	0:0	10	buffer_ptr
op	62:34	0:0	10	+=
water	62:37	0:0	10	4
water	62:38	0:0	10	;
call	63:20	63:53	10	avio_write
arg	63:31	63:33	11	pb
water	63:31	0:0	12	pb
arg	63:35	63:48	11	c->buffer_ptr
water	63:35	0:0	12	c
op	63:36	0:0	12	->
water	63:38	0:0	12	buffer_ptr
arg	63:50	63:53	11	len
water	63:50	0:0	12	len
water	63:54	0:0	10	;
water	64:20	0:0	10	size
op	64:25	0:0	10	=
call	64:27	64:67	10	avio_close_dyn_buf
arg	64:46	64:48	11	pb
water	64:46	0:0	12	pb
arg	64:50	64:67	11	&c->packet_buffer
op	64:50	0:0	12	&
water	64:51	0:0	12	c
op	64:52	0:0	12	->
water	64:54	0:0	12	packet_buffer
water	64:68	0:0	10	;
water	66:20	0:0	10	rtsp_c
op	66:26	0:0	10	->
water	66:28	0:0	10	packet_buffer_ptr
op	66:46	0:0	10	=
water	66:48	0:0	10	c
op	66:49	0:0	10	->
water	66:51	0:0	10	packet_buffer
water	66:64	0:0	10	;
water	67:20	0:0	10	rtsp_c
op	67:26	0:0	10	->
water	67:28	0:0	10	packet_buffer_end
op	67:46	0:0	10	=
water	67:48	0:0	10	c
op	67:49	0:0	10	->
water	67:51	0:0	10	packet_buffer
op	67:65	0:0	10	+
water	67:67	0:0	10	size
water	67:71	0:0	10	;
water	68:20	0:0	10	c
op	68:21	0:0	10	->
water	68:23	0:0	10	buffer_ptr
op	68:34	0:0	10	+=
water	68:37	0:0	10	len
water	68:40	0:0	10	;
water	70:20	0:0	10	len
op	70:24	0:0	10	=
call	70:26	71:87	10	send
arg	70:31	70:41	11	rtsp_c->fd
water	70:31	0:0	12	rtsp_c
op	70:37	0:0	12	->
water	70:39	0:0	12	fd
arg	70:43	70:68	11	rtsp_c->packet_buffer_ptr
water	70:43	0:0	12	rtsp_c
op	70:49	0:0	12	->
water	70:51	0:0	12	packet_buffer_ptr
arg	71:31	71:84	11	rtsp_c->packet_buffer_end-rtsp_c->packet_buffer_ptr
water	71:31	0:0	12	rtsp_c
op	71:37	0:0	12	->
water	71:39	0:0	12	packet_buffer_end
op	71:57	0:0	12	-
water	71:59	0:0	12	rtsp_c
op	71:65	0:0	12	->
water	71:67	0:0	12	packet_buffer_ptr
arg	71:86	71:87	11	0
water	71:86	0:0	12	0
water	71:88	0:0	10	;
if	72:20	73:56	10	(len > 0)
cond	72:24	72:30	11	len > 0
water	72:24	0:0	12	len
op	72:28	0:0	12	>
water	72:30	0:0	12	0
stmts	73:24	73:56	11	
water	73:24	0:0	12	rtsp_c
op	73:30	0:0	12	->
water	73:32	0:0	12	packet_buffer_ptr
op	73:50	0:0	12	+=
water	73:53	0:0	12	len
water	73:56	0:0	12	;
if	74:20	80:20	10	(rtsp_c -> packet_buffer_ptr < rtsp_c -> packet_buffer_end)
cond	74:24	74:60	11	rtsp_c -> packet_buffer_ptr < rtsp_c -> packet_buffer_end
water	74:24	0:0	12	rtsp_c
op	74:30	0:0	12	->
water	74:32	0:0	12	packet_buffer_ptr
op	74:50	0:0	12	<
water	74:52	0:0	12	rtsp_c
op	74:58	0:0	12	->
water	74:60	0:0	12	packet_buffer_end
stmts	74:79	80:20	11	
water	74:79	0:0	12	{
water	78:24	0:0	12	rtsp_c
op	78:30	0:0	12	->
water	78:32	0:0	12	state
op	78:38	0:0	12	=
water	78:40	0:0	12	RTSPSTATE_SEND_PACKET
water	78:61	0:0	12	;
break	79:24	79:29	12	
water	80:20	0:0	12	}
else	80:22	82:51	10
stmts	82:24	82:51	11	
call	82:24	82:50	12	av_freep
arg	82:33	82:50	13	&c->packet_buffer
op	82:33	0:0	14	&
water	82:34	0:0	14	c
op	82:35	0:0	14	->
water	82:37	0:0	14	packet_buffer
water	82:51	0:0	12	;
water	83:16	0:0	10	}
else	83:18	91:16	8
stmts	83:23	91:16	9	
water	83:23	0:0	10	{
water	85:20	0:0	10	c
op	85:21	0:0	10	->
water	85:23	0:0	10	buffer_ptr
op	85:34	0:0	10	+=
water	85:37	0:0	10	4
water	85:38	0:0	10	;
call	86:20	87:50	10	ffurl_write
arg	86:32	86:70	11	c->rtp_handles[c->packet_stream_index]
water	86:32	0:0	12	c
op	86:33	0:0	12	->
water	86:35	0:0	12	rtp_handles
op	86:46	0:0	12	[
water	86:47	0:0	12	c
op	86:48	0:0	12	->
water	86:50	0:0	12	packet_stream_index
op	86:69	0:0	12	]
arg	87:32	87:45	11	c->buffer_ptr
water	87:32	0:0	12	c
op	87:33	0:0	12	->
water	87:35	0:0	12	buffer_ptr
arg	87:47	87:50	11	len
water	87:47	0:0	12	len
water	87:51	0:0	10	;
water	88:20	0:0	10	c
op	88:21	0:0	10	->
water	88:23	0:0	10	buffer_ptr
op	88:34	0:0	10	+=
water	88:37	0:0	10	len
water	88:40	0:0	10	;
water	91:16	0:0	10	}
water	92:12	0:0	8	}
else	92:14	110:12	6
stmts	92:19	110:12	7	
water	92:19	0:0	8	{
water	94:16	0:0	8	len
op	94:20	0:0	8	=
call	94:22	95:59	8	send
arg	94:27	94:32	9	c->fd
water	94:27	0:0	10	c
op	94:28	0:0	10	->
water	94:30	0:0	10	fd
arg	94:34	94:47	9	c->buffer_ptr
water	94:34	0:0	10	c
op	94:35	0:0	10	->
water	94:37	0:0	10	buffer_ptr
arg	95:27	95:56	9	c->buffer_end-c->buffer_ptr
water	95:27	0:0	10	c
op	95:28	0:0	10	->
water	95:30	0:0	10	buffer_end
op	95:41	0:0	10	-
water	95:43	0:0	10	c
op	95:44	0:0	10	->
water	95:46	0:0	10	buffer_ptr
arg	95:58	95:59	9	0
water	95:58	0:0	10	0
water	95:60	0:0	8	;
if	96:16	103:16	8	(len < 0)
cond	96:20	96:26	9	len < 0
water	96:20	0:0	10	len
op	96:24	0:0	10	<
water	96:26	0:0	10	0
stmts	96:29	103:16	9	
water	96:29	0:0	10	{
if	97:20	100:33	10	(ff_neterrno ( ) !=AVERROR (EAGAIN ) &&ff_neterrno ( ) !=AVERROR (EINTR ))
cond	97:24	98:54	11	ff_neterrno ( ) !=AVERROR (EAGAIN ) &&ff_neterrno ( ) !=AVERROR (EINTR )
call	97:24	97:36	12	ff_neterrno
op	97:38	0:0	12	!=
call	97:41	97:55	12	AVERROR
arg	97:49	97:55	13	EAGAIN
water	97:49	0:0	14	EAGAIN
op	97:57	0:0	12	&&
call	98:24	98:36	12	ff_neterrno
op	98:38	0:0	12	!=
call	98:41	98:54	12	AVERROR
arg	98:49	98:54	13	EINTR
water	98:49	0:0	14	EINTR
stmts	100:24	100:33	11	
return	100:24	100:33	12	-1
op	100:31	0:0	13	-
water	100:32	0:0	13	1
else	101:20	102:32	10
stmts	102:24	102:32	11	
return	102:24	102:32	12	0
water	102:31	0:0	13	0
water	103:16	0:0	10	}
water	104:16	0:0	8	c
op	104:17	0:0	8	->
water	104:19	0:0	8	buffer_ptr
op	104:30	0:0	8	+=
water	104:33	0:0	8	len
water	104:36	0:0	8	;
water	105:16	0:0	8	c
op	105:17	0:0	8	->
water	105:19	0:0	8	data_count
op	105:30	0:0	8	+=
water	105:33	0:0	8	len
water	105:36	0:0	8	;
call	106:16	106:59	8	update_datarate
arg	106:32	106:44	9	&c->datarate
op	106:32	0:0	10	&
water	106:33	0:0	10	c
op	106:34	0:0	10	->
water	106:36	0:0	10	datarate
arg	106:46	106:59	9	c->data_count
water	106:46	0:0	10	c
op	106:47	0:0	10	->
water	106:49	0:0	10	data_count
water	106:60	0:0	8	;
if	107:16	108:50	8	(c -> stream)
cond	107:20	107:23	9	c -> stream
water	107:20	0:0	10	c
op	107:21	0:0	10	->
water	107:23	0:0	10	stream
stmts	108:20	108:50	9	
water	108:20	0:0	10	c
op	108:21	0:0	10	->
water	108:23	0:0	10	stream
op	108:29	0:0	10	->
water	108:31	0:0	10	bytes_served
op	108:44	0:0	10	+=
water	108:47	0:0	10	len
water	108:50	0:0	10	;
break	109:16	109:21	8	
water	110:12	0:0	8	}
water	111:8	0:0	6	}
water	112:4	0:0	4	}
return	113:4	113:12	2	0
water	113:11	0:0	3	0

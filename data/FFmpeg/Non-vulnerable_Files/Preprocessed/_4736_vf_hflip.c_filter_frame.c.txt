func	1:0	20:0	0	static int	filter_frame
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterLink *	inlink
param	1:46	1:57	2	AVFrame *	in
stmnts	0:0	19:40	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:26	0:0	2	=
water	3:28	0:0	2	inlink
op	3:34	0:0	2	->
water	3:36	0:0	2	dst
decl	4:4	4:43	2	AVFilterLink	*outlink
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	outputs
op	4:40	0:0	2	[
water	4:41	0:0	2	0
op	4:42	0:0	2	]
decl	5:4	5:17	2	ThreadData	td
decl	6:4	6:16	2	AVFrame	*out
water	7:4	0:0	2	out
op	7:8	0:0	2	=
call	7:10	7:61	2	ff_get_video_buffer
arg	7:30	7:37	3	outlink
water	7:30	0:0	4	outlink
arg	7:39	7:49	3	outlink->w
water	7:39	0:0	4	outlink
op	7:46	0:0	4	->
water	7:48	0:0	4	w
arg	7:51	7:61	3	outlink->h
water	7:51	0:0	4	outlink
op	7:58	0:0	4	->
water	7:60	0:0	4	h
water	7:62	0:0	2	;
if	8:4	11:4	2	(! out)
cond	8:8	8:9	3	! out
op	8:8	0:0	4	!
water	8:9	0:0	4	out
stmts	8:14	11:4	3	
water	8:14	0:0	4	{
call	9:8	9:25	4	av_frame_free
arg	9:22	9:25	5	&in
op	9:22	0:0	6	&
water	9:23	0:0	6	in
water	9:26	0:0	4	;
return	10:8	10:30	4	AVERROR(ENOMEM)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	ENOMEM
water	10:23	0:0	7	ENOMEM
water	11:4	0:0	4	}
call	12:4	12:31	2	av_frame_copy_props
arg	12:24	12:27	3	out
water	12:24	0:0	4	out
arg	12:29	12:31	3	in
water	12:29	0:0	4	in
water	12:32	0:0	2	;
if	14:4	15:57	2	(av_pix_fmt_desc_get (inlink -> format ) -> flags & AV_PIX_FMT_FLAG_PAL)
cond	14:8	14:53	3	av_pix_fmt_desc_get (inlink -> format ) -> flags & AV_PIX_FMT_FLAG_PAL
call	14:8	14:42	4	av_pix_fmt_desc_get
arg	14:28	14:42	5	inlink->format
water	14:28	0:0	6	inlink
op	14:34	0:0	6	->
water	14:36	0:0	6	format
op	14:43	0:0	4	->
water	14:45	0:0	4	flags
op	14:51	0:0	4	&
water	14:53	0:0	4	AV_PIX_FMT_FLAG_PAL
stmts	15:8	15:57	3	
call	15:8	15:56	4	memcpy
arg	15:15	15:27	5	out->data[1]
water	15:15	0:0	6	out
op	15:18	0:0	6	->
water	15:20	0:0	6	data
op	15:24	0:0	6	[
water	15:25	0:0	6	1
op	15:26	0:0	6	]
arg	15:29	15:40	5	in->data[1]
water	15:29	0:0	6	in
op	15:31	0:0	6	->
water	15:33	0:0	6	data
op	15:37	0:0	6	[
water	15:38	0:0	6	1
op	15:39	0:0	6	]
arg	15:42	15:56	5	AVPALETTE_SIZE
water	15:42	0:0	6	AVPALETTE_SIZE
water	15:57	0:0	4	;
water	16:4	0:0	2	td
op	16:6	0:0	2	.
water	16:7	0:0	2	in
op	16:10	0:0	2	=
water	16:12	0:0	2	in
water	16:14	0:0	2	,
water	16:16	0:0	2	td
op	16:18	0:0	2	.
water	16:19	0:0	2	out
op	16:23	0:0	2	=
water	16:25	0:0	2	out
water	16:28	0:0	2	;
call	17:4	17:98	2	ctx->internal->execute
arg	17:27	17:30	3	ctx
water	17:27	0:0	4	ctx
arg	17:32	17:44	3	filter_slice
water	17:32	0:0	4	filter_slice
arg	17:46	17:49	3	&td
op	17:46	0:0	4	&
water	17:47	0:0	4	td
arg	17:51	17:55	3	NULL
water	17:51	0:0	4	NULL
arg	17:57	17:98	3	FFMIN(outlink->h,ctx->graph->nb_threads)
call	17:57	17:97	4	FFMIN
arg	17:63	17:73	5	outlink->h
water	17:63	0:0	6	outlink
op	17:70	0:0	6	->
water	17:72	0:0	6	h
arg	17:75	17:97	5	ctx->graph->nb_threads
water	17:75	0:0	6	ctx
op	17:78	0:0	6	->
water	17:80	0:0	6	graph
op	17:85	0:0	6	->
water	17:87	0:0	6	nb_threads
water	17:99	0:0	2	;
call	18:4	18:21	2	av_frame_free
arg	18:18	18:21	3	&in
op	18:18	0:0	4	&
water	18:19	0:0	4	in
water	18:22	0:0	2	;
return	19:4	19:40	2	ff_filter_frame(outlink,out)
call	19:11	19:39	3	ff_filter_frame
arg	19:27	19:34	4	outlink
water	19:27	0:0	5	outlink
arg	19:36	19:39	4	out
water	19:36	0:0	5	out

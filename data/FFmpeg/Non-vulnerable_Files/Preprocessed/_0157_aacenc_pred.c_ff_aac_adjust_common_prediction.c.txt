func	1:0	52:0	0	void	ff_aac_adjust_common_prediction
params	1:36	0:0	1	
param	1:37	1:53	2	AACEncContext *	s
param	1:55	1:74	2	ChannelElement *	cpe
stmnts	0:0	51:71	1	
decl	3:4	3:37	2	int	start
water	3:13	0:0	2	,
decl	3:4	3:37	2	int	w
water	3:16	0:0	2	,
decl	3:4	3:37	2	int	w2
water	3:20	0:0	2	,
decl	3:4	3:37	2	int	g
water	3:23	0:0	2	,
decl	3:4	3:37	2	int	i
water	3:26	0:0	2	,
decl	3:4	3:37	2	int	count
op	3:34	0:0	2	=
water	3:36	0:0	2	0
decl	4:4	4:44	2	SingleChannelElement	*sce0
op	4:31	0:0	2	=
op	4:33	0:0	2	&
water	4:34	0:0	2	cpe
op	4:37	0:0	2	->
water	4:39	0:0	2	ch
op	4:41	0:0	2	[
water	4:42	0:0	2	0
op	4:43	0:0	2	]
decl	5:4	5:44	2	SingleChannelElement	*sce1
op	5:31	0:0	2	=
op	5:33	0:0	2	&
water	5:34	0:0	2	cpe
op	5:37	0:0	2	->
water	5:39	0:0	2	ch
op	5:41	0:0	2	[
water	5:42	0:0	2	1
op	5:43	0:0	2	]
decl	6:4	6:88	2	const int	pmax0
op	6:20	0:0	2	=
call	6:22	6:87	3	FFMIN
arg	6:28	6:45	4	sce0->ics.max_sfb
water	6:28	0:0	5	sce0
op	6:32	0:0	5	->
water	6:34	0:0	5	ics
op	6:37	0:0	5	.
water	6:38	0:0	5	max_sfb
arg	6:47	6:87	4	ff_aac_pred_sfb_max[s->samplerate_index]
water	6:47	0:0	5	ff_aac_pred_sfb_max
op	6:66	0:0	5	[
water	6:67	0:0	5	s
op	6:68	0:0	5	->
water	6:70	0:0	5	samplerate_index
op	6:86	0:0	5	]
decl	7:4	7:88	2	const int	pmax1
op	7:20	0:0	2	=
call	7:22	7:87	3	FFMIN
arg	7:28	7:45	4	sce1->ics.max_sfb
water	7:28	0:0	5	sce1
op	7:32	0:0	5	->
water	7:34	0:0	5	ics
op	7:37	0:0	5	.
water	7:38	0:0	5	max_sfb
arg	7:47	7:87	4	ff_aac_pred_sfb_max[s->samplerate_index]
water	7:47	0:0	5	ff_aac_pred_sfb_max
op	7:66	0:0	5	[
water	7:67	0:0	5	s
op	7:68	0:0	5	->
water	7:70	0:0	5	samplerate_index
op	7:86	0:0	5	]
decl	8:4	8:41	2	const int	pmax
op	8:20	0:0	2	=
call	8:22	8:40	3	FFMIN
arg	8:28	8:33	4	pmax0
water	8:28	0:0	5	pmax0
arg	8:35	8:40	4	pmax1
water	8:35	0:0	5	pmax1
if	9:4	12:14	2	(! cpe -> common_window || sce0 -> ics . window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE || sce1 -> ics . window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE)
cond	9:8	11:40	3	! cpe -> common_window || sce0 -> ics . window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE || sce1 -> ics . window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE
op	9:8	0:0	4	!
water	9:9	0:0	4	cpe
op	9:12	0:0	4	->
water	9:14	0:0	4	common_window
op	9:28	0:0	4	||
water	10:8	0:0	4	sce0
op	10:12	0:0	4	->
water	10:14	0:0	4	ics
op	10:17	0:0	4	.
water	10:18	0:0	4	window_sequence
op	10:33	0:0	4	[
water	10:34	0:0	4	0
op	10:35	0:0	4	]
op	10:37	0:0	4	==
water	10:40	0:0	4	EIGHT_SHORT_SEQUENCE
op	10:61	0:0	4	||
water	11:8	0:0	4	sce1
op	11:12	0:0	4	->
water	11:14	0:0	4	ics
op	11:17	0:0	4	.
water	11:18	0:0	4	window_sequence
op	11:33	0:0	4	[
water	11:34	0:0	4	0
op	11:35	0:0	4	]
op	11:37	0:0	4	==
water	11:40	0:0	4	EIGHT_SHORT_SEQUENCE
stmts	12:8	12:14	3	
return	12:8	12:14	4	
for	13:4	50:4	2	(w = 0 ;w < sce0 -> ics . num_windows;w += sce0 -> ics . group_len [ w ])
forinit	13:9	13:14	3	w = 0 ;
water	13:9	0:0	4	w
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:30	3	w < sce0 -> ics . num_windows
water	13:16	0:0	4	w
op	13:18	0:0	4	<
water	13:20	0:0	4	sce0
op	13:24	0:0	4	->
water	13:26	0:0	4	ics
op	13:29	0:0	4	.
water	13:30	0:0	4	num_windows
forexpr	13:43	13:69	3	w += sce0 -> ics . group_len [ w ]
water	13:43	0:0	4	w
op	13:45	0:0	4	+=
water	13:48	0:0	4	sce0
op	13:52	0:0	4	->
water	13:54	0:0	4	ics
op	13:57	0:0	4	.
water	13:58	0:0	4	group_len
op	13:67	0:0	4	[
water	13:68	0:0	4	w
op	13:69	0:0	4	]
stmts	13:72	50:4	3	
water	13:72	0:0	4	{
water	14:8	0:0	4	start
op	14:14	0:0	4	=
water	14:16	0:0	4	0
water	14:17	0:0	4	;
for	15:8	49:8	4	(g = 0 ;g < sce0 -> ics . num_swb;g ++)
forinit	15:13	15:18	5	g = 0 ;
water	15:13	0:0	6	g
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:34	5	g < sce0 -> ics . num_swb
water	15:20	0:0	6	g
op	15:22	0:0	6	<
water	15:24	0:0	6	sce0
op	15:28	0:0	6	->
water	15:30	0:0	6	ics
op	15:33	0:0	6	.
water	15:34	0:0	6	num_swb
forexpr	15:43	15:44	5	g ++
water	15:43	0:0	6	g
op	15:44	0:0	6	++
stmts	15:48	49:8	5	
water	15:48	0:0	6	{
decl	16:12	16:28	6	int	sfb
op	16:20	0:0	6	=
water	16:22	0:0	6	w
op	16:23	0:0	6	*
water	16:24	0:0	6	16
op	16:26	0:0	6	+
water	16:27	0:0	6	g
decl	17:12	17:85	6	int	sum
op	17:20	0:0	6	=
water	17:22	0:0	6	sce0
op	17:26	0:0	6	->
water	17:28	0:0	6	ics
op	17:31	0:0	6	.
water	17:32	0:0	6	prediction_used
op	17:47	0:0	6	[
water	17:48	0:0	6	sfb
op	17:51	0:0	6	]
op	17:53	0:0	6	+
water	17:55	0:0	6	sce1
op	17:59	0:0	6	->
water	17:61	0:0	6	ics
op	17:64	0:0	6	.
water	17:65	0:0	6	prediction_used
op	17:80	0:0	6	[
water	17:81	0:0	6	sfb
op	17:84	0:0	6	]
decl	18:12	18:59	6	float	ener0
op	18:24	0:0	6	=
water	18:26	0:0	6	0
op	18:27	0:0	6	.
water	18:28	0:0	6	0
water	18:29	0:0	6	f
water	18:30	0:0	6	,
decl	18:12	18:59	6	float	ener1
op	18:38	0:0	6	=
water	18:40	0:0	6	0
op	18:41	0:0	6	.
water	18:42	0:0	6	0
water	18:43	0:0	6	f
water	18:44	0:0	6	,
decl	18:12	18:59	6	float	ener01
op	18:53	0:0	6	=
water	18:55	0:0	6	0
op	18:56	0:0	6	.
water	18:57	0:0	6	0
water	18:58	0:0	6	f
decl	19:12	19:52	6	struct AACISError	ph_err1
water	19:37	0:0	6	,
decl	19:12	19:52	6	struct AACISError	ph_err2
water	19:46	0:0	6	,
decl	19:12	19:52	6	struct AACISError	*erf
if	20:12	25:12	6	(sfb < PRED_SFB_START || sfb > pmax || sum != 2)
cond	20:16	20:61	7	sfb < PRED_SFB_START || sfb > pmax || sum != 2
water	20:16	0:0	8	sfb
op	20:20	0:0	8	<
water	20:22	0:0	8	PRED_SFB_START
op	20:37	0:0	8	||
water	20:40	0:0	8	sfb
op	20:44	0:0	8	>
water	20:46	0:0	8	pmax
op	20:51	0:0	8	||
water	20:54	0:0	8	sum
op	20:58	0:0	8	!=
water	20:61	0:0	8	2
stmts	20:64	25:12	7	
water	20:64	0:0	8	{
call	21:16	21:38	8	RESTORE_PRED
arg	21:29	21:33	9	sce0
water	21:29	0:0	10	sce0
arg	21:35	21:38	9	sfb
water	21:35	0:0	10	sfb
water	21:39	0:0	8	;
call	22:16	22:38	8	RESTORE_PRED
arg	22:29	22:33	9	sce1
water	22:29	0:0	10	sce1
arg	22:35	22:38	9	sfb
water	22:35	0:0	10	sfb
water	22:39	0:0	8	;
water	23:16	0:0	8	start
op	23:22	0:0	8	+=
water	23:25	0:0	8	sce0
op	23:29	0:0	8	->
water	23:31	0:0	8	ics
op	23:34	0:0	8	.
water	23:35	0:0	8	swb_sizes
op	23:44	0:0	8	[
water	23:45	0:0	8	g
op	23:46	0:0	8	]
water	23:47	0:0	8	;
continue	24:16	24:24	8	
water	25:12	0:0	8	}
for	26:12	34:12	6	(w2 = 0 ;w2 < sce0 -> ics . group_len [ w ];w2 ++)
forinit	26:17	26:23	7	w2 = 0 ;
water	26:17	0:0	8	w2
op	26:20	0:0	8	=
water	26:22	0:0	8	0
water	26:23	0:0	8	;
cond	26:25	26:51	7	w2 < sce0 -> ics . group_len [ w ]
water	26:25	0:0	8	w2
op	26:28	0:0	8	<
water	26:30	0:0	8	sce0
op	26:34	0:0	8	->
water	26:36	0:0	8	ics
op	26:39	0:0	8	.
water	26:40	0:0	8	group_len
op	26:49	0:0	8	[
water	26:50	0:0	8	w
op	26:51	0:0	8	]
forexpr	26:54	26:56	7	w2 ++
water	26:54	0:0	8	w2
op	26:56	0:0	8	++
stmts	26:60	34:12	7	
water	26:60	0:0	8	{
for	27:16	33:16	8	(i = 0 ;i < sce0 -> ics . swb_sizes [ g ];i ++)
forinit	27:21	27:26	9	i = 0 ;
water	27:21	0:0	10	i
op	27:23	0:0	10	=
water	27:25	0:0	10	0
water	27:26	0:0	10	;
cond	27:28	27:53	9	i < sce0 -> ics . swb_sizes [ g ]
water	27:28	0:0	10	i
op	27:30	0:0	10	<
water	27:32	0:0	10	sce0
op	27:36	0:0	10	->
water	27:38	0:0	10	ics
op	27:41	0:0	10	.
water	27:42	0:0	10	swb_sizes
op	27:51	0:0	10	[
water	27:52	0:0	10	g
op	27:53	0:0	10	]
forexpr	27:56	27:57	9	i ++
water	27:56	0:0	10	i
op	27:57	0:0	10	++
stmts	27:61	33:16	9	
water	27:61	0:0	10	{
decl	28:20	28:67	10	float	coef0
op	28:32	0:0	10	=
water	28:34	0:0	10	sce0
op	28:38	0:0	10	->
water	28:40	0:0	10	pcoeffs
op	28:47	0:0	10	[
water	28:48	0:0	10	start
op	28:53	0:0	10	+
water	28:54	0:0	10	(
water	28:55	0:0	10	w
op	28:56	0:0	10	+
water	28:57	0:0	10	w2
water	28:59	0:0	10	)
op	28:60	0:0	10	*
water	28:61	0:0	10	128
op	28:64	0:0	10	+
water	28:65	0:0	10	i
op	28:66	0:0	10	]
decl	29:20	29:67	10	float	coef1
op	29:32	0:0	10	=
water	29:34	0:0	10	sce1
op	29:38	0:0	10	->
water	29:40	0:0	10	pcoeffs
op	29:47	0:0	10	[
water	29:48	0:0	10	start
op	29:53	0:0	10	+
water	29:54	0:0	10	(
water	29:55	0:0	10	w
op	29:56	0:0	10	+
water	29:57	0:0	10	w2
water	29:59	0:0	10	)
op	29:60	0:0	10	*
water	29:61	0:0	10	128
op	29:64	0:0	10	+
water	29:65	0:0	10	i
op	29:66	0:0	10	]
water	30:20	0:0	10	ener0
op	30:27	0:0	10	+=
water	30:30	0:0	10	coef0
op	30:35	0:0	10	*
water	30:36	0:0	10	coef0
water	30:41	0:0	10	;
water	31:20	0:0	10	ener1
op	31:27	0:0	10	+=
water	31:30	0:0	10	coef1
op	31:35	0:0	10	*
water	31:36	0:0	10	coef1
water	31:41	0:0	10	;
water	32:20	0:0	10	ener01
op	32:27	0:0	10	+=
water	32:30	0:0	10	(
water	32:31	0:0	10	coef0
op	32:37	0:0	10	+
water	32:39	0:0	10	coef1
water	32:44	0:0	10	)
op	32:45	0:0	10	*
water	32:46	0:0	10	(
water	32:47	0:0	10	coef0
op	32:53	0:0	10	+
water	32:55	0:0	10	coef1
water	32:60	0:0	10	)
water	32:61	0:0	10	;
water	33:16	0:0	10	}
water	34:12	0:0	8	}
water	35:12	0:0	6	ph_err1
op	35:20	0:0	6	=
call	35:22	36:72	6	ff_aac_is_encoding_err
arg	35:45	35:46	7	s
water	35:45	0:0	8	s
arg	35:48	35:51	7	cpe
water	35:48	0:0	8	cpe
arg	35:53	35:58	7	start
water	35:53	0:0	8	start
arg	35:60	35:61	7	w
water	35:60	0:0	8	w
arg	35:63	35:64	7	g
water	35:63	0:0	8	g
arg	36:45	36:50	7	ener0
water	36:45	0:0	8	ener0
arg	36:52	36:57	7	ener1
water	36:52	0:0	8	ener1
arg	36:59	36:65	7	ener01
water	36:59	0:0	8	ener01
arg	36:67	36:68	7	1
water	36:67	0:0	8	1
arg	36:70	36:72	7	-1
op	36:70	0:0	8	-
water	36:71	0:0	8	1
water	36:73	0:0	6	;
water	37:12	0:0	6	ph_err2
op	37:20	0:0	6	=
call	37:22	38:72	6	ff_aac_is_encoding_err
arg	37:45	37:46	7	s
water	37:45	0:0	8	s
arg	37:48	37:51	7	cpe
water	37:48	0:0	8	cpe
arg	37:53	37:58	7	start
water	37:53	0:0	8	start
arg	37:60	37:61	7	w
water	37:60	0:0	8	w
arg	37:63	37:64	7	g
water	37:63	0:0	8	g
arg	38:45	38:50	7	ener0
water	38:45	0:0	8	ener0
arg	38:52	38:57	7	ener1
water	38:52	0:0	8	ener1
arg	38:59	38:65	7	ener01
water	38:59	0:0	8	ener01
arg	38:67	38:68	7	1
water	38:67	0:0	8	1
arg	38:70	38:72	7	+1
op	38:70	0:0	8	+
water	38:71	0:0	8	1
water	38:73	0:0	6	;
water	39:12	0:0	6	erf
op	39:16	0:0	6	=
water	39:18	0:0	6	ph_err1
op	39:25	0:0	6	.
water	39:26	0:0	6	error
op	39:32	0:0	6	<
water	39:34	0:0	6	ph_err2
op	39:41	0:0	6	.
water	39:42	0:0	6	error
water	39:48	0:0	6	?
op	39:50	0:0	6	&
water	39:51	0:0	6	ph_err1
water	39:59	0:0	6	:
op	39:61	0:0	6	&
water	39:62	0:0	6	ph_err2
water	39:69	0:0	6	;
if	40:12	44:12	6	(erf -> pass)
cond	40:16	40:21	7	erf -> pass
water	40:16	0:0	8	erf
op	40:19	0:0	8	->
water	40:21	0:0	8	pass
stmts	40:27	44:12	7	
water	40:27	0:0	8	{
water	41:16	0:0	8	sce0
op	41:20	0:0	8	->
water	41:22	0:0	8	ics
op	41:25	0:0	8	.
water	41:26	0:0	8	prediction_used
op	41:41	0:0	8	[
water	41:42	0:0	8	sfb
op	41:45	0:0	8	]
op	41:47	0:0	8	=
water	41:49	0:0	8	1
water	41:50	0:0	8	;
water	42:16	0:0	8	sce1
op	42:20	0:0	8	->
water	42:22	0:0	8	ics
op	42:25	0:0	8	.
water	42:26	0:0	8	prediction_used
op	42:41	0:0	8	[
water	42:42	0:0	8	sfb
op	42:45	0:0	8	]
op	42:47	0:0	8	=
water	42:49	0:0	8	1
water	42:50	0:0	8	;
water	43:16	0:0	8	count
op	43:21	0:0	8	++
water	43:23	0:0	8	;
water	44:12	0:0	8	}
else	44:14	47:12	6
stmts	44:19	47:12	7	
water	44:19	0:0	8	{
call	45:16	45:38	8	RESTORE_PRED
arg	45:29	45:33	9	sce0
water	45:29	0:0	10	sce0
arg	45:35	45:38	9	sfb
water	45:35	0:0	10	sfb
water	45:39	0:0	8	;
call	46:16	46:38	8	RESTORE_PRED
arg	46:29	46:33	9	sce1
water	46:29	0:0	10	sce1
arg	46:35	46:38	9	sfb
water	46:35	0:0	10	sfb
water	46:39	0:0	8	;
water	47:12	0:0	8	}
water	48:12	0:0	6	start
op	48:18	0:0	6	+=
water	48:21	0:0	6	sce0
op	48:25	0:0	6	->
water	48:27	0:0	6	ics
op	48:30	0:0	6	.
water	48:31	0:0	6	swb_sizes
op	48:40	0:0	6	[
water	48:41	0:0	6	g
op	48:42	0:0	6	]
water	48:43	0:0	6	;
water	49:8	0:0	6	}
water	50:4	0:0	4	}
water	51:4	0:0	2	sce1
op	51:8	0:0	2	->
water	51:10	0:0	2	ics
op	51:13	0:0	2	.
water	51:14	0:0	2	predictor_present
op	51:32	0:0	2	=
water	51:34	0:0	2	sce0
op	51:38	0:0	2	->
water	51:40	0:0	2	ics
op	51:43	0:0	2	.
water	51:44	0:0	2	predictor_present
op	51:62	0:0	2	=
op	51:64	0:0	2	!
op	51:65	0:0	2	!
water	51:66	0:0	2	count
water	51:71	0:0	2	;

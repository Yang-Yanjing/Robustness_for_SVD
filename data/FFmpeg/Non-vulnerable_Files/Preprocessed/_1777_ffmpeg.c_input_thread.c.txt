func	1:0	37:0	0	static void *	input_thread
params	1:25	0:0	1	
param	1:26	1:35	2	void *	arg
stmnts	0:0	36:15	1	
decl	3:4	3:22	2	InputFile	*f
op	3:17	0:0	2	=
water	3:19	0:0	2	arg
water	4:4	0:0	2	unsigned
water	4:13	0:0	2	flags
op	4:19	0:0	2	=
water	4:21	0:0	2	f
op	4:22	0:0	2	->
water	4:24	0:0	2	non_blocking
water	4:37	0:0	2	?
water	4:39	0:0	2	AV_THREAD_MESSAGE_NONBLOCK
water	4:66	0:0	2	:
water	4:68	0:0	2	0
water	4:69	0:0	2	;
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
while	6:4	35:4	2	(1)
cond	6:11	6:11	3	1
water	6:11	0:0	4	1
stmts	6:14	35:4	3	
water	6:14	0:0	4	{
decl	7:8	7:20	4	AVPacket	pkt
water	8:8	0:0	4	ret
op	8:12	0:0	4	=
call	8:14	8:40	4	av_read_frame
arg	8:28	8:34	5	f->ctx
water	8:28	0:0	6	f
op	8:29	0:0	6	->
water	8:31	0:0	6	ctx
arg	8:36	8:40	5	&pkt
op	8:36	0:0	6	&
water	8:37	0:0	6	pkt
water	8:41	0:0	4	;
if	9:8	12:8	4	(ret ==AVERROR (EAGAIN ))
cond	9:12	9:33	5	ret ==AVERROR (EAGAIN )
water	9:12	0:0	6	ret
op	9:16	0:0	6	==
call	9:19	9:33	6	AVERROR
arg	9:27	9:33	7	EAGAIN
water	9:27	0:0	8	EAGAIN
stmts	9:36	12:8	5	
water	9:36	0:0	6	{
call	10:12	10:27	6	av_usleep
arg	10:22	10:27	7	10000
water	10:22	0:0	8	10000
water	10:28	0:0	6	;
continue	11:12	11:20	6	
water	12:8	0:0	6	}
if	13:8	16:8	4	(ret < 0)
cond	13:12	13:18	5	ret < 0
water	13:12	0:0	6	ret
op	13:16	0:0	6	<
water	13:18	0:0	6	0
stmts	13:21	16:8	5	
water	13:21	0:0	6	{
call	14:12	14:72	6	av_thread_message_queue_set_err_recv
arg	14:49	14:67	7	f->in_thread_queue
water	14:49	0:0	8	f
op	14:50	0:0	8	->
water	14:52	0:0	8	in_thread_queue
arg	14:69	14:72	7	ret
water	14:69	0:0	8	ret
water	14:73	0:0	6	;
break	15:12	15:17	6	
water	16:8	0:0	6	}
water	17:8	0:0	4	ret
op	17:12	0:0	4	=
call	17:14	17:74	4	av_thread_message_queue_send
arg	17:43	17:61	5	f->in_thread_queue
water	17:43	0:0	6	f
op	17:44	0:0	6	->
water	17:46	0:0	6	in_thread_queue
arg	17:63	17:67	5	&pkt
op	17:63	0:0	6	&
water	17:64	0:0	6	pkt
arg	17:69	17:74	5	flags
water	17:69	0:0	6	flags
water	17:75	0:0	4	;
if	18:8	25:8	4	(flags && ret ==AVERROR (EAGAIN ))
cond	18:12	18:42	5	flags && ret ==AVERROR (EAGAIN )
water	18:12	0:0	6	flags
op	18:18	0:0	6	&&
water	18:21	0:0	6	ret
op	18:25	0:0	6	==
call	18:28	18:42	6	AVERROR
arg	18:36	18:42	7	EAGAIN
water	18:36	0:0	8	EAGAIN
stmts	18:45	25:8	5	
water	18:45	0:0	6	{
water	19:12	0:0	6	flags
op	19:18	0:0	6	=
water	19:20	0:0	6	0
water	19:21	0:0	6	;
water	20:12	0:0	6	ret
op	20:16	0:0	6	=
call	20:18	20:78	6	av_thread_message_queue_send
arg	20:47	20:65	7	f->in_thread_queue
water	20:47	0:0	8	f
op	20:48	0:0	8	->
water	20:50	0:0	8	in_thread_queue
arg	20:67	20:71	7	&pkt
op	20:67	0:0	8	&
water	20:68	0:0	8	pkt
arg	20:73	20:78	7	flags
water	20:73	0:0	8	flags
water	20:79	0:0	6	;
call	21:12	24:39	6	av_log
arg	21:19	21:25	7	f->ctx
water	21:19	0:0	8	f
op	21:20	0:0	8	->
water	21:22	0:0	8	ctx
arg	21:27	21:41	7	AV_LOG_WARNING
water	21:27	0:0	8	AV_LOG_WARNING
arg	22:19	23:67	7	"Thread message queue blocking; consider raising the ""thread_queue_size option (current value: %d)\n"
water	22:19	0:0	8	"Thread message queue blocking; consider raising the "
water	23:19	0:0	8	"thread_queue_size option (current value: %d)\n"
arg	24:19	24:39	7	f->thread_queue_size
water	24:19	0:0	8	f
op	24:20	0:0	8	->
water	24:22	0:0	8	thread_queue_size
water	24:40	0:0	6	;
water	25:8	0:0	6	}
if	26:8	34:8	4	(ret < 0)
cond	26:12	26:18	5	ret < 0
water	26:12	0:0	6	ret
op	26:16	0:0	6	<
water	26:18	0:0	6	0
stmts	26:21	34:8	5	
water	26:21	0:0	6	{
if	27:12	30:39	6	(ret != AVERROR_EOF)
cond	27:16	27:23	7	ret != AVERROR_EOF
water	27:16	0:0	8	ret
op	27:20	0:0	8	!=
water	27:23	0:0	8	AVERROR_EOF
stmts	28:16	30:39	7	
call	28:16	30:38	8	av_log
arg	28:23	28:29	9	f->ctx
water	28:23	0:0	10	f
op	28:24	0:0	10	->
water	28:26	0:0	10	ctx
arg	28:31	28:43	9	AV_LOG_ERROR
water	28:31	0:0	10	AV_LOG_ERROR
arg	29:23	29:67	9	"Unable to send packet to main thread: %s\n"
water	29:23	0:0	10	"Unable to send packet to main thread: %s\n"
arg	30:23	30:38	9	av_err2str(ret)
call	30:23	30:37	10	av_err2str
arg	30:34	30:37	11	ret
water	30:34	0:0	12	ret
water	30:39	0:0	8	;
call	31:12	31:32	6	av_packet_unref
arg	31:28	31:32	7	&pkt
op	31:28	0:0	8	&
water	31:29	0:0	8	pkt
water	31:33	0:0	6	;
call	32:12	32:72	6	av_thread_message_queue_set_err_recv
arg	32:49	32:67	7	f->in_thread_queue
water	32:49	0:0	8	f
op	32:50	0:0	8	->
water	32:52	0:0	8	in_thread_queue
arg	32:69	32:72	7	ret
water	32:69	0:0	8	ret
water	32:73	0:0	6	;
break	33:12	33:17	6	
water	34:8	0:0	6	}
water	35:4	0:0	4	}
return	36:4	36:15	2	NULL
water	36:11	0:0	3	NULL

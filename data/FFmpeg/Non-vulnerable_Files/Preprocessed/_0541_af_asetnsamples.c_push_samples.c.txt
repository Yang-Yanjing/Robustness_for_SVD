func	1:0	34:0	0	static int	push_samples
params	1:23	0:0	1	
param	1:24	1:45	2	AVFilterLink *	outlink
stmnts	0:0	33:25	1	
decl	3:4	3:42	2	ASNSContext	*asns
op	3:22	0:0	2	=
water	3:24	0:0	2	outlink
op	3:31	0:0	2	->
water	3:33	0:0	2	src
op	3:36	0:0	2	->
water	3:38	0:0	2	priv
decl	4:4	4:30	2	AVFrame	*outsamples
op	4:24	0:0	2	=
water	4:26	0:0	2	NULL
decl	5:4	5:43	2	int	ret
water	5:11	0:0	2	,
decl	5:4	5:43	2	int	nb_out_samples
water	5:27	0:0	2	,
decl	5:4	5:43	2	int	nb_pad_samples
if	6:4	9:4	2	(asns -> pad)
cond	6:8	6:14	3	asns -> pad
water	6:8	0:0	4	asns
op	6:12	0:0	4	->
water	6:14	0:0	4	pad
stmts	6:19	9:4	3	
water	6:19	0:0	4	{
water	7:8	0:0	4	nb_out_samples
op	7:23	0:0	4	=
call	7:25	7:54	4	av_audio_fifo_size
arg	7:44	7:54	5	asns->fifo
water	7:44	0:0	6	asns
op	7:48	0:0	6	->
water	7:50	0:0	6	fifo
water	7:56	0:0	4	?
water	7:58	0:0	4	asns
op	7:62	0:0	4	->
water	7:64	0:0	4	nb_out_samples
water	7:79	0:0	4	:
water	7:81	0:0	4	0
water	7:82	0:0	4	;
water	8:8	0:0	4	nb_pad_samples
op	8:23	0:0	4	=
water	8:25	0:0	4	nb_out_samples
op	8:40	0:0	4	-
call	8:42	8:94	4	FFMIN
arg	8:48	8:62	5	nb_out_samples
water	8:48	0:0	6	nb_out_samples
arg	8:64	8:94	5	av_audio_fifo_size(asns->fifo)
call	8:64	8:93	6	av_audio_fifo_size
arg	8:83	8:93	7	asns->fifo
water	8:83	0:0	8	asns
op	8:87	0:0	8	->
water	8:89	0:0	8	fifo
water	8:95	0:0	4	;
water	9:4	0:0	4	}
else	9:6	12:4	2
stmts	9:11	12:4	3	
water	9:11	0:0	4	{
water	10:8	0:0	4	nb_out_samples
op	10:23	0:0	4	=
call	10:25	10:83	4	FFMIN
arg	10:31	10:51	5	asns->nb_out_samples
water	10:31	0:0	6	asns
op	10:35	0:0	6	->
water	10:37	0:0	6	nb_out_samples
arg	10:53	10:83	5	av_audio_fifo_size(asns->fifo)
call	10:53	10:82	6	av_audio_fifo_size
arg	10:72	10:82	7	asns->fifo
water	10:72	0:0	8	asns
op	10:76	0:0	8	->
water	10:78	0:0	8	fifo
water	10:84	0:0	4	;
water	11:8	0:0	4	nb_pad_samples
op	11:23	0:0	4	=
water	11:25	0:0	4	0
water	11:26	0:0	4	;
water	12:4	0:0	4	}
if	13:4	14:16	2	(! nb_out_samples)
cond	13:8	13:9	3	! nb_out_samples
op	13:8	0:0	4	!
water	13:9	0:0	4	nb_out_samples
stmts	14:8	14:16	3	
return	14:8	14:16	4	0
water	14:15	0:0	5	0
water	15:4	0:0	2	outsamples
op	15:15	0:0	2	=
call	15:17	15:60	2	ff_get_audio_buffer
arg	15:37	15:44	3	outlink
water	15:37	0:0	4	outlink
arg	15:46	15:60	3	nb_out_samples
water	15:46	0:0	4	nb_out_samples
water	15:61	0:0	2	;
if	16:4	17:30	2	(! outsamples)
cond	16:8	16:9	3	! outsamples
op	16:8	0:0	4	!
water	16:9	0:0	4	outsamples
stmts	17:8	17:30	3	
return	17:8	17:30	4	AVERROR(ENOMEM)
call	17:15	17:29	5	AVERROR
arg	17:23	17:29	6	ENOMEM
water	17:23	0:0	7	ENOMEM
call	18:4	19:73	2	av_audio_fifo_read
arg	18:23	18:33	3	asns->fifo
water	18:23	0:0	4	asns
op	18:27	0:0	4	->
water	18:29	0:0	4	fifo
arg	19:23	19:57	3	(void**)outsamples->extended_data
water	19:23	0:0	4	(
water	19:24	0:0	4	void
op	19:29	0:0	4	*
op	19:30	0:0	4	*
water	19:31	0:0	4	)
water	19:32	0:0	4	outsamples
op	19:42	0:0	4	->
water	19:44	0:0	4	extended_data
arg	19:59	19:73	3	nb_out_samples
water	19:59	0:0	4	nb_out_samples
water	19:74	0:0	2	;
if	20:4	23:47	2	(nb_pad_samples)
cond	20:8	20:8	3	nb_pad_samples
water	20:8	0:0	4	nb_pad_samples
stmts	21:8	23:47	3	
call	21:8	23:46	4	av_samples_set_silence
arg	21:31	21:56	5	outsamples->extended_data
water	21:31	0:0	6	outsamples
op	21:41	0:0	6	->
water	21:43	0:0	6	extended_data
arg	21:58	21:89	5	nb_out_samples-nb_pad_samples
water	21:58	0:0	6	nb_out_samples
op	21:73	0:0	6	-
water	21:75	0:0	6	nb_pad_samples
arg	22:31	22:45	5	nb_pad_samples
water	22:31	0:0	6	nb_pad_samples
arg	22:47	22:64	5	outlink->channels
water	22:47	0:0	6	outlink
op	22:54	0:0	6	->
water	22:56	0:0	6	channels
arg	23:31	23:46	5	outlink->format
water	23:31	0:0	6	outlink
op	23:38	0:0	6	->
water	23:40	0:0	6	format
water	23:47	0:0	4	;
water	24:4	0:0	2	outsamples
op	24:14	0:0	2	->
water	24:16	0:0	2	nb_samples
op	24:31	0:0	2	=
water	24:33	0:0	2	nb_out_samples
water	24:47	0:0	2	;
water	25:4	0:0	2	outsamples
op	25:14	0:0	2	->
water	25:16	0:0	2	channel_layout
op	25:31	0:0	2	=
water	25:33	0:0	2	outlink
op	25:40	0:0	2	->
water	25:42	0:0	2	channel_layout
water	25:56	0:0	2	;
water	26:4	0:0	2	outsamples
op	26:14	0:0	2	->
water	26:16	0:0	2	sample_rate
op	26:31	0:0	2	=
water	26:33	0:0	2	outlink
op	26:40	0:0	2	->
water	26:42	0:0	2	sample_rate
water	26:53	0:0	2	;
water	27:4	0:0	2	outsamples
op	27:14	0:0	2	->
water	27:16	0:0	2	pts
op	27:20	0:0	2	=
water	27:22	0:0	2	asns
op	27:26	0:0	2	->
water	27:28	0:0	2	next_out_pts
water	27:40	0:0	2	;
if	28:4	29:117	2	(asns -> next_out_pts != AV_NOPTS_VALUE)
cond	28:8	28:30	3	asns -> next_out_pts != AV_NOPTS_VALUE
water	28:8	0:0	4	asns
op	28:12	0:0	4	->
water	28:14	0:0	4	next_out_pts
op	28:27	0:0	4	!=
water	28:30	0:0	4	AV_NOPTS_VALUE
stmts	29:8	29:117	3	
water	29:8	0:0	4	asns
op	29:12	0:0	4	->
water	29:14	0:0	4	next_out_pts
op	29:27	0:0	4	+=
call	29:30	29:116	4	av_rescale_q
arg	29:43	29:57	5	nb_out_samples
water	29:43	0:0	6	nb_out_samples
arg	29:59	29:96	5	(AVRational){1,outlink->sample_rate}
water	29:59	0:0	6	(
water	29:60	0:0	6	AVRational
water	29:70	0:0	6	)
water	29:71	0:0	6	{
water	29:72	0:0	6	1
water	29:73	0:0	6	,
water	29:75	0:0	6	outlink
op	29:82	0:0	6	->
water	29:84	0:0	6	sample_rate
water	29:95	0:0	6	}
arg	29:98	29:116	5	outlink->time_base
water	29:98	0:0	6	outlink
op	29:105	0:0	6	->
water	29:107	0:0	6	time_base
water	29:117	0:0	4	;
water	30:4	0:0	2	ret
op	30:8	0:0	2	=
call	30:10	30:45	2	ff_filter_frame
arg	30:26	30:33	3	outlink
water	30:26	0:0	4	outlink
arg	30:35	30:45	3	outsamples
water	30:35	0:0	4	outsamples
water	30:46	0:0	2	;
if	31:4	32:18	2	(ret < 0)
cond	31:8	31:14	3	ret < 0
water	31:8	0:0	4	ret
op	31:12	0:0	4	<
water	31:14	0:0	4	0
stmts	32:8	32:18	3	
return	32:8	32:18	4	ret
water	32:15	0:0	5	ret
return	33:4	33:25	2	nb_out_samples
water	33:11	0:0	3	nb_out_samples

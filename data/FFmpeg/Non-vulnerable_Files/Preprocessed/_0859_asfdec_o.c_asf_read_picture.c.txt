func	1:0	85:0	0	static int	asf_read_picture
params	1:27	0:0	1	
param	1:28	1:46	2	AVFormatContext *	s
param	1:48	1:55	2	int	len
stmnts	0:0	84:14	1	
decl	3:4	3:40	2	ASFContext	*asf
op	3:26	0:0	2	=
water	3:28	0:0	2	s
op	3:29	0:0	2	->
water	3:31	0:0	2	priv_data
decl	4:4	4:33	2	AVPacket	pkt
op	4:26	0:0	2	=
water	4:28	0:0	2	{
water	4:30	0:0	2	0
water	4:32	0:0	2	}
decl	5:4	5:46	2	const CodecMime	*mime
op	5:26	0:0	2	=
water	5:28	0:0	2	ff_id3v2_mime_tags
decl	6:4	6:44	2	enum AVCodecID	id
op	6:26	0:0	2	=
water	6:28	0:0	2	AV_CODEC_ID_NONE
decl	7:4	7:21	2	char	mimetype[64]
decl	8:4	8:25	2	uint8_t	*desc
op	8:19	0:0	2	=
water	8:21	0:0	2	NULL
decl	9:4	9:25	2	AVStream	*st
op	9:19	0:0	2	=
water	9:21	0:0	2	NULL
decl	10:4	10:36	2	int	ret
water	10:11	0:0	2	,
decl	10:4	10:36	2	int	type
water	10:17	0:0	2	,
decl	10:4	10:36	2	int	picsize
water	10:26	0:0	2	,
decl	10:4	10:36	2	int	desc_len
decl	11:4	11:21	2	ASFStream	*asf_st
if	13:4	16:4	2	(len < 1 + 4 + 2 + 2)
cond	13:8	13:26	3	len < 1 + 4 + 2 + 2
water	13:8	0:0	4	len
op	13:12	0:0	4	<
water	13:14	0:0	4	1
op	13:16	0:0	4	+
water	13:18	0:0	4	4
op	13:20	0:0	4	+
water	13:22	0:0	4	2
op	13:24	0:0	4	+
water	13:26	0:0	4	2
stmts	13:29	16:4	3	
water	13:29	0:0	4	{
call	14:8	14:75	4	av_log
arg	14:15	14:16	5	s
water	14:15	0:0	6	s
arg	14:18	14:30	5	AV_LOG_ERROR
water	14:18	0:0	6	AV_LOG_ERROR
arg	14:32	14:70	5	"Invalid attached picture size: %d.\n"
water	14:32	0:0	6	"Invalid attached picture size: %d.\n"
arg	14:72	14:75	5	len
water	14:72	0:0	6	len
water	14:76	0:0	4	;
return	15:8	15:34	4	AVERROR_INVALIDDATA
water	15:15	0:0	5	AVERROR_INVALIDDATA
water	16:4	0:0	4	}
water	18:4	0:0	2	type
op	18:9	0:0	2	=
call	18:11	18:24	2	avio_r8
arg	18:19	18:24	3	s->pb
water	18:19	0:0	4	s
op	18:20	0:0	4	->
water	18:22	0:0	4	pb
water	18:25	0:0	2	;
water	19:4	0:0	2	len
op	19:7	0:0	2	--
water	19:9	0:0	2	;
if	20:4	23:4	2	(type >=FF_ARRAY_ELEMS (ff_id3v2_picture_types ) || type < 0)
cond	20:8	20:65	3	type >=FF_ARRAY_ELEMS (ff_id3v2_picture_types ) || type < 0
water	20:8	0:0	4	type
op	20:13	0:0	4	>=
call	20:16	20:53	4	FF_ARRAY_ELEMS
arg	20:31	20:53	5	ff_id3v2_picture_types
water	20:31	0:0	6	ff_id3v2_picture_types
op	20:55	0:0	4	||
water	20:58	0:0	4	type
op	20:63	0:0	4	<
water	20:65	0:0	4	0
stmts	20:68	23:4	3	
water	20:68	0:0	4	{
call	21:8	21:78	4	av_log
arg	21:15	21:16	5	s
water	21:15	0:0	6	s
arg	21:18	21:32	5	AV_LOG_WARNING
water	21:18	0:0	6	AV_LOG_WARNING
arg	21:34	21:72	5	"Unknown attached picture type: %d.\n"
water	21:34	0:0	6	"Unknown attached picture type: %d.\n"
arg	21:74	21:78	5	type
water	21:74	0:0	6	type
water	21:79	0:0	4	;
water	22:8	0:0	4	type
op	22:13	0:0	4	=
water	22:15	0:0	4	0
water	22:16	0:0	4	;
water	23:4	0:0	4	}
water	25:4	0:0	2	picsize
op	25:12	0:0	2	=
call	25:14	25:29	2	avio_rl32
arg	25:24	25:29	3	s->pb
water	25:24	0:0	4	s
op	25:25	0:0	4	->
water	25:27	0:0	4	pb
water	25:30	0:0	2	;
water	26:4	0:0	2	len
op	26:11	0:0	2	-=
water	26:14	0:0	2	4
water	26:15	0:0	2	;
water	28:4	0:0	2	len
op	28:8	0:0	2	-=
call	28:11	28:66	2	avio_get_str16le
arg	28:28	28:33	3	s->pb
water	28:28	0:0	4	s
op	28:29	0:0	4	->
water	28:31	0:0	4	pb
arg	28:35	28:38	3	len
water	28:35	0:0	4	len
arg	28:40	28:48	3	mimetype
water	28:40	0:0	4	mimetype
arg	28:50	28:66	3	sizeof(mimetype)
op	28:50	0:0	4	sizeof
water	28:56	0:0	4	(
water	28:57	0:0	4	mimetype
water	28:65	0:0	4	)
water	28:67	0:0	2	;
while	29:4	35:4	2	(mime -> id != AV_CODEC_ID_NONE)
cond	29:11	29:23	3	mime -> id != AV_CODEC_ID_NONE
water	29:11	0:0	4	mime
op	29:15	0:0	4	->
water	29:17	0:0	4	id
op	29:20	0:0	4	!=
water	29:23	0:0	4	AV_CODEC_ID_NONE
stmts	29:41	35:4	3	
water	29:41	0:0	4	{
if	30:8	33:8	4	(!strncmp (mime -> str ,mimetype ,sizeof ( mimetype ) ))
cond	30:12	30:58	5	!strncmp (mime -> str ,mimetype ,sizeof ( mimetype ) )
op	30:12	0:0	6	!
call	30:13	30:58	6	strncmp
arg	30:21	30:30	7	mime->str
water	30:21	0:0	8	mime
op	30:25	0:0	8	->
water	30:27	0:0	8	str
arg	30:32	30:40	7	mimetype
water	30:32	0:0	8	mimetype
arg	30:42	30:58	7	sizeof(mimetype)
op	30:42	0:0	8	sizeof
water	30:48	0:0	8	(
water	30:49	0:0	8	mimetype
water	30:57	0:0	8	)
stmts	30:61	33:8	5	
water	30:61	0:0	6	{
water	31:12	0:0	6	id
op	31:15	0:0	6	=
water	31:17	0:0	6	mime
op	31:21	0:0	6	->
water	31:23	0:0	6	id
water	31:25	0:0	6	;
break	32:12	32:17	6	
water	33:8	0:0	6	}
water	34:8	0:0	4	mime
op	34:12	0:0	4	++
water	34:14	0:0	4	;
water	35:4	0:0	4	}
if	36:4	40:4	2	(id == AV_CODEC_ID_NONE)
cond	36:8	36:14	3	id == AV_CODEC_ID_NONE
water	36:8	0:0	4	id
op	36:11	0:0	4	==
water	36:14	0:0	4	AV_CODEC_ID_NONE
stmts	36:32	40:4	3	
water	36:32	0:0	4	{
call	37:8	38:23	4	av_log
arg	37:15	37:16	5	s
water	37:15	0:0	6	s
arg	37:18	37:30	5	AV_LOG_ERROR
water	37:18	0:0	6	AV_LOG_ERROR
arg	37:32	37:74	5	"Unknown attached picture mimetype: %s.\n"
water	37:32	0:0	6	"Unknown attached picture mimetype: %s.\n"
arg	38:15	38:23	5	mimetype
water	38:15	0:0	6	mimetype
water	38:24	0:0	4	;
return	39:8	39:16	4	0
water	39:15	0:0	5	0
water	40:4	0:0	4	}
if	41:4	45:4	2	(picsize >= len)
cond	41:8	41:19	3	picsize >= len
water	41:8	0:0	4	picsize
op	41:16	0:0	4	>=
water	41:19	0:0	4	len
stmts	41:24	45:4	3	
water	41:24	0:0	4	{
call	42:8	43:27	4	av_log
arg	42:15	42:16	5	s
water	42:15	0:0	6	s
arg	42:18	42:30	5	AV_LOG_ERROR
water	42:18	0:0	6	AV_LOG_ERROR
arg	42:32	42:81	5	"Invalid attached picture data size: %d >= %d.\n"
water	42:32	0:0	6	"Invalid attached picture data size: %d >= %d.\n"
arg	43:15	43:22	5	picsize
water	43:15	0:0	6	picsize
arg	43:24	43:27	5	len
water	43:24	0:0	6	len
water	43:28	0:0	4	;
return	44:8	44:34	4	AVERROR_INVALIDDATA
water	44:15	0:0	5	AVERROR_INVALIDDATA
water	45:4	0:0	4	}
water	47:4	0:0	2	desc_len
op	47:13	0:0	2	=
water	47:15	0:0	2	(
water	47:16	0:0	2	len
op	47:20	0:0	2	-
water	47:22	0:0	2	picsize
water	47:29	0:0	2	)
op	47:31	0:0	2	*
water	47:33	0:0	2	2
op	47:35	0:0	2	+
water	47:37	0:0	2	1
water	47:38	0:0	2	;
water	48:4	0:0	2	desc
op	48:13	0:0	2	=
call	48:15	48:33	2	av_malloc
arg	48:25	48:33	3	desc_len
water	48:25	0:0	4	desc_len
water	48:34	0:0	2	;
if	49:4	50:30	2	(! desc)
cond	49:8	49:9	3	! desc
op	49:8	0:0	4	!
water	49:9	0:0	4	desc
stmts	50:8	50:30	3	
return	50:8	50:30	4	AVERROR(ENOMEM)
call	50:15	50:29	5	AVERROR
arg	50:23	50:29	6	ENOMEM
water	50:23	0:0	7	ENOMEM
water	51:4	0:0	2	len
op	51:8	0:0	2	-=
call	51:11	51:64	2	avio_get_str16le
arg	51:28	51:33	3	s->pb
water	51:28	0:0	4	s
op	51:29	0:0	4	->
water	51:31	0:0	4	pb
arg	51:35	51:48	3	len-picsize
water	51:35	0:0	4	len
op	51:39	0:0	4	-
water	51:41	0:0	4	picsize
arg	51:50	51:54	3	desc
water	51:50	0:0	4	desc
arg	51:56	51:64	3	desc_len
water	51:56	0:0	4	desc_len
water	51:65	0:0	2	;
water	52:4	0:0	2	ret
op	52:8	0:0	2	=
call	52:10	52:44	2	av_get_packet
arg	52:24	52:29	3	s->pb
water	52:24	0:0	4	s
op	52:25	0:0	4	->
water	52:27	0:0	4	pb
arg	52:31	52:35	3	&pkt
op	52:31	0:0	4	&
water	52:32	0:0	4	pkt
arg	52:37	52:44	3	picsize
water	52:37	0:0	4	picsize
water	52:45	0:0	2	;
if	53:4	54:17	2	(ret < 0)
cond	53:8	53:14	3	ret < 0
water	53:8	0:0	4	ret
op	53:12	0:0	4	<
water	53:14	0:0	4	0
stmts	54:8	54:17	3	
goto	54:8	54:17	4	fail
water	54:13	0:0	5	fail
water	55:4	0:0	2	st
op	55:8	0:0	2	=
call	55:10	55:37	2	avformat_new_stream
arg	55:30	55:31	3	s
water	55:30	0:0	4	s
arg	55:33	55:37	3	NULL
water	55:33	0:0	4	NULL
water	55:38	0:0	2	;
if	56:4	59:4	2	(! st)
cond	56:8	56:9	3	! st
op	56:8	0:0	4	!
water	56:9	0:0	4	st
stmts	56:13	59:4	3	
water	56:13	0:0	4	{
water	57:8	0:0	4	ret
op	57:12	0:0	4	=
call	57:14	57:28	4	AVERROR
arg	57:22	57:28	5	ENOMEM
water	57:22	0:0	6	ENOMEM
water	57:29	0:0	4	;
goto	58:8	58:17	4	fail
water	58:13	0:0	5	fail
water	59:4	0:0	4	}
water	60:4	0:0	2	asf
op	60:7	0:0	2	->
water	60:9	0:0	2	asf_st
op	60:15	0:0	2	[
water	60:16	0:0	2	asf
op	60:19	0:0	2	->
water	60:21	0:0	2	nb_streams
op	60:31	0:0	2	]
op	60:33	0:0	2	=
call	60:35	60:61	2	av_mallocz
arg	60:46	60:61	3	sizeof(*asf_st)
op	60:46	0:0	4	sizeof
water	60:52	0:0	4	(
op	60:53	0:0	4	*
water	60:54	0:0	4	asf_st
water	60:60	0:0	4	)
water	60:62	0:0	2	;
water	61:4	0:0	2	asf_st
op	61:11	0:0	2	=
water	61:13	0:0	2	asf
op	61:16	0:0	2	->
water	61:18	0:0	2	asf_st
op	61:24	0:0	2	[
water	61:25	0:0	2	asf
op	61:28	0:0	2	->
water	61:30	0:0	2	nb_streams
op	61:40	0:0	2	]
water	61:41	0:0	2	;
if	62:4	65:4	2	(! asf_st)
cond	62:8	62:9	3	! asf_st
op	62:8	0:0	4	!
water	62:9	0:0	4	asf_st
stmts	62:17	65:4	3	
water	62:17	0:0	4	{
water	63:8	0:0	4	ret
op	63:12	0:0	4	=
call	63:14	63:28	4	AVERROR
arg	63:22	63:28	5	ENOMEM
water	63:22	0:0	6	ENOMEM
water	63:29	0:0	4	;
goto	64:8	64:17	4	fail
water	64:13	0:0	5	fail
water	65:4	0:0	4	}
water	66:4	0:0	2	st
op	66:6	0:0	2	->
water	66:8	0:0	2	disposition
op	66:33	0:0	2	|=
water	66:36	0:0	2	AV_DISPOSITION_ATTACHED_PIC
water	66:63	0:0	2	;
water	67:4	0:0	2	st
op	67:6	0:0	2	->
water	67:8	0:0	2	codec
op	67:13	0:0	2	->
water	67:15	0:0	2	codec_type
op	67:34	0:0	2	=
water	67:36	0:0	2	asf_st
op	67:42	0:0	2	->
water	67:44	0:0	2	type
op	67:49	0:0	2	=
water	67:51	0:0	2	AVMEDIA_TYPE_VIDEO
water	67:69	0:0	2	;
water	68:4	0:0	2	st
op	68:6	0:0	2	->
water	68:8	0:0	2	codec
op	68:13	0:0	2	->
water	68:15	0:0	2	codec_id
op	68:34	0:0	2	=
water	68:36	0:0	2	id
water	68:38	0:0	2	;
water	69:4	0:0	2	st
op	69:6	0:0	2	->
water	69:8	0:0	2	attached_pic
op	69:34	0:0	2	=
water	69:36	0:0	2	pkt
water	69:39	0:0	2	;
water	70:4	0:0	2	st
op	70:6	0:0	2	->
water	70:8	0:0	2	attached_pic
op	70:20	0:0	2	.
water	70:21	0:0	2	stream_index
op	70:34	0:0	2	=
water	70:36	0:0	2	asf_st
op	70:42	0:0	2	->
water	70:44	0:0	2	index
op	70:50	0:0	2	=
water	70:52	0:0	2	st
op	70:54	0:0	2	->
water	70:56	0:0	2	index
water	70:61	0:0	2	;
water	71:4	0:0	2	st
op	71:6	0:0	2	->
water	71:8	0:0	2	attached_pic
op	71:20	0:0	2	.
water	71:21	0:0	2	flags
op	71:33	0:0	2	|=
water	71:36	0:0	2	AV_PKT_FLAG_KEY
water	71:51	0:0	2	;
water	72:4	0:0	2	asf
op	72:7	0:0	2	->
water	72:9	0:0	2	nb_streams
op	72:19	0:0	2	++
water	72:21	0:0	2	;
if	73:4	76:4	2	(* desc)
cond	73:8	73:9	3	* desc
op	73:8	0:0	4	*
water	73:9	0:0	4	desc
stmts	73:15	76:4	3	
water	73:15	0:0	4	{
if	74:8	75:62	4	(av_dict_set (& st -> metadata ,"title" ,desc ,AV_DICT_DONT_STRDUP_VAL ) < 0)
cond	74:12	74:81	5	av_dict_set (& st -> metadata ,"title" ,desc ,AV_DICT_DONT_STRDUP_VAL ) < 0
call	74:12	74:77	6	av_dict_set
arg	74:24	74:37	7	&st->metadata
op	74:24	0:0	8	&
water	74:25	0:0	8	st
op	74:27	0:0	8	->
water	74:29	0:0	8	metadata
arg	74:39	74:46	7	"title"
water	74:39	0:0	8	"title"
arg	74:48	74:52	7	desc
water	74:48	0:0	8	desc
arg	74:54	74:77	7	AV_DICT_DONT_STRDUP_VAL
water	74:54	0:0	8	AV_DICT_DONT_STRDUP_VAL
op	74:79	0:0	6	<
water	74:81	0:0	6	0
stmts	75:12	75:62	5	
call	75:12	75:61	6	av_log
arg	75:19	75:20	7	s
water	75:19	0:0	8	s
arg	75:22	75:36	7	AV_LOG_WARNING
water	75:22	0:0	8	AV_LOG_WARNING
arg	75:38	75:61	7	"av_dict_set failed.\n"
water	75:38	0:0	8	"av_dict_set failed.\n"
water	75:62	0:0	6	;
water	76:4	0:0	4	}
else	76:6	77:23	2
stmts	77:8	77:23	3	
call	77:8	77:22	4	av_freep
arg	77:17	77:22	5	&desc
op	77:17	0:0	6	&
water	77:18	0:0	6	desc
water	77:23	0:0	4	;
if	78:4	79:58	2	(av_dict_set (& st -> metadata ,"comment" ,ff_id3v2_picture_types [ type ] ,0 ) < 0)
cond	78:8	78:81	3	av_dict_set (& st -> metadata ,"comment" ,ff_id3v2_picture_types [ type ] ,0 ) < 0
call	78:8	78:77	4	av_dict_set
arg	78:20	78:33	5	&st->metadata
op	78:20	0:0	6	&
water	78:21	0:0	6	st
op	78:23	0:0	6	->
water	78:25	0:0	6	metadata
arg	78:35	78:44	5	"comment"
water	78:35	0:0	6	"comment"
arg	78:46	78:74	5	ff_id3v2_picture_types[type]
water	78:46	0:0	6	ff_id3v2_picture_types
op	78:68	0:0	6	[
water	78:69	0:0	6	type
op	78:73	0:0	6	]
arg	78:76	78:77	5	0
water	78:76	0:0	6	0
op	78:79	0:0	4	<
water	78:81	0:0	4	0
stmts	79:8	79:58	3	
call	79:8	79:57	4	av_log
arg	79:15	79:16	5	s
water	79:15	0:0	6	s
arg	79:18	79:32	5	AV_LOG_WARNING
water	79:18	0:0	6	AV_LOG_WARNING
arg	79:34	79:57	5	"av_dict_set failed.\n"
water	79:34	0:0	6	"av_dict_set failed.\n"
water	79:58	0:0	4	;
return	80:4	80:12	2	0
water	80:11	0:0	3	0
label	81:0	81:4	2	fail :
call	82:4	82:18	2	av_freep
arg	82:13	82:18	3	&desc
op	82:13	0:0	4	&
water	82:14	0:0	4	desc
water	82:19	0:0	2	;
call	83:4	83:23	2	av_free_packet
arg	83:19	83:23	3	&pkt
op	83:19	0:0	4	&
water	83:20	0:0	4	pkt
water	83:24	0:0	2	;
return	84:4	84:14	2	ret
water	84:11	0:0	3	ret

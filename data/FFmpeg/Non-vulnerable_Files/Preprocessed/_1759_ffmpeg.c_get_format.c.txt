func	1:0	37:0	0	static enum AVPixelFormat	get_format
params	1:36	0:0	1	
param	1:37	1:54	2	AVCodecContext *	s
param	1:56	1:90	2	const enum AVPixelFormat *	pix_fmts
stmnts	0:0	36:13	1	
decl	3:4	3:32	2	InputStream	*ist
op	3:21	0:0	2	=
water	3:23	0:0	2	s
op	3:24	0:0	2	->
water	3:26	0:0	2	opaque
decl	4:4	4:31	2	const enum AVPixelFormat	*p
decl	5:4	5:11	2	int	ret
for	6:4	35:4	2	(p = pix_fmts ;* p != - 1;p ++)
forinit	6:9	6:21	3	p = pix_fmts ;
water	6:9	0:0	4	p
op	6:11	0:0	4	=
water	6:13	0:0	4	pix_fmts
water	6:21	0:0	4	;
cond	6:23	6:30	3	* p != - 1
op	6:23	0:0	4	*
water	6:24	0:0	4	p
op	6:26	0:0	4	!=
op	6:29	0:0	4	-
water	6:30	0:0	4	1
forexpr	6:33	6:34	3	p ++
water	6:33	0:0	4	p
op	6:34	0:0	4	++
stmts	6:38	35:4	3	
water	6:38	0:0	4	{
decl	7:8	7:64	4	const AVPixFmtDescriptor	*desc
op	7:39	0:0	4	=
call	7:41	7:63	5	av_pix_fmt_desc_get
arg	7:61	7:63	6	*p
op	7:61	0:0	7	*
water	7:62	0:0	7	p
decl	8:8	8:30	4	const HWAccel	*hwaccel
if	9:8	10:17	4	(! ( desc -> flags & AV_PIX_FMT_FLAG_HWACCEL ))
cond	9:12	9:51	5	! ( desc -> flags & AV_PIX_FMT_FLAG_HWACCEL )
op	9:12	0:0	6	!
water	9:13	0:0	6	(
water	9:14	0:0	6	desc
op	9:18	0:0	6	->
water	9:20	0:0	6	flags
op	9:26	0:0	6	&
water	9:28	0:0	6	AV_PIX_FMT_FLAG_HWACCEL
water	9:51	0:0	6	)
stmts	10:12	10:17	5	
break	10:12	10:17	6	
water	11:8	0:0	4	hwaccel
op	11:16	0:0	4	=
call	11:18	11:32	4	get_hwaccel
arg	11:30	11:32	5	*p
op	11:30	0:0	6	*
water	11:31	0:0	6	p
water	11:33	0:0	4	;
if	12:8	15:20	4	(! hwaccel || ( ist -> active_hwaccel_id && ist -> active_hwaccel_id != hwaccel -> id ) || ( ist -> hwaccel_id != HWACCEL_AUTO && ist -> hwaccel_id != hwaccel -> id ))
cond	12:12	14:78	5	! hwaccel || ( ist -> active_hwaccel_id && ist -> active_hwaccel_id != hwaccel -> id ) || ( ist -> hwaccel_id != HWACCEL_AUTO && ist -> hwaccel_id != hwaccel -> id )
op	12:12	0:0	6	!
water	12:13	0:0	6	hwaccel
op	12:21	0:0	6	||
water	13:12	0:0	6	(
water	13:13	0:0	6	ist
op	13:16	0:0	6	->
water	13:18	0:0	6	active_hwaccel_id
op	13:36	0:0	6	&&
water	13:39	0:0	6	ist
op	13:42	0:0	6	->
water	13:44	0:0	6	active_hwaccel_id
op	13:62	0:0	6	!=
water	13:65	0:0	6	hwaccel
op	13:72	0:0	6	->
water	13:74	0:0	6	id
water	13:76	0:0	6	)
op	13:78	0:0	6	||
water	14:12	0:0	6	(
water	14:13	0:0	6	ist
op	14:16	0:0	6	->
water	14:18	0:0	6	hwaccel_id
op	14:29	0:0	6	!=
water	14:32	0:0	6	HWACCEL_AUTO
op	14:45	0:0	6	&&
water	14:48	0:0	6	ist
op	14:51	0:0	6	->
water	14:53	0:0	6	hwaccel_id
op	14:64	0:0	6	!=
water	14:67	0:0	6	hwaccel
op	14:74	0:0	6	->
water	14:76	0:0	6	id
water	14:78	0:0	6	)
stmts	15:12	15:20	5	
continue	15:12	15:20	6	
water	16:8	0:0	4	ret
op	16:12	0:0	4	=
call	16:14	16:29	4	hwaccel->init
arg	16:28	16:29	5	s
water	16:28	0:0	6	s
water	16:30	0:0	4	;
if	17:8	26:8	4	(ret < 0)
cond	17:12	17:18	5	ret < 0
water	17:12	0:0	6	ret
op	17:16	0:0	6	<
water	17:18	0:0	6	0
stmts	17:21	26:8	5	
water	17:21	0:0	6	{
if	18:12	24:12	6	(ist -> hwaccel_id == hwaccel -> id)
cond	18:16	18:44	7	ist -> hwaccel_id == hwaccel -> id
water	18:16	0:0	8	ist
op	18:19	0:0	8	->
water	18:21	0:0	8	hwaccel_id
op	18:32	0:0	8	==
water	18:35	0:0	8	hwaccel
op	18:42	0:0	8	->
water	18:44	0:0	8	id
stmts	18:48	24:12	7	
water	18:48	0:0	8	{
call	19:16	22:54	8	av_log
arg	19:23	19:27	9	NULL
water	19:23	0:0	10	NULL
arg	19:29	19:41	9	AV_LOG_FATAL
water	19:29	0:0	10	AV_LOG_FATAL
arg	20:23	21:53	9	"%s hwaccel requested for input stream #%d:%d, ""but cannot be initialized.\n"
water	20:23	0:0	10	"%s hwaccel requested for input stream #%d:%d, "
water	21:23	0:0	10	"but cannot be initialized.\n"
arg	21:55	21:68	9	hwaccel->name
water	21:55	0:0	10	hwaccel
op	21:62	0:0	10	->
water	21:64	0:0	10	name
arg	22:23	22:38	9	ist->file_index
water	22:23	0:0	10	ist
op	22:26	0:0	10	->
water	22:28	0:0	10	file_index
arg	22:40	22:54	9	ist->st->index
water	22:40	0:0	10	ist
op	22:43	0:0	10	->
water	22:45	0:0	10	st
op	22:47	0:0	10	->
water	22:49	0:0	10	index
water	22:55	0:0	8	;
return	23:16	23:38	8	AV_PIX_FMT_NONE
water	23:23	0:0	9	AV_PIX_FMT_NONE
water	24:12	0:0	8	}
continue	25:12	25:20	6	
water	26:8	0:0	6	}
if	27:8	31:8	4	(ist -> hw_frames_ctx)
cond	27:12	27:17	5	ist -> hw_frames_ctx
water	27:12	0:0	6	ist
op	27:15	0:0	6	->
water	27:17	0:0	6	hw_frames_ctx
stmts	27:32	31:8	5	
water	27:32	0:0	6	{
water	28:12	0:0	6	s
op	28:13	0:0	6	->
water	28:15	0:0	6	hw_frames_ctx
op	28:29	0:0	6	=
call	28:31	28:63	6	av_buffer_ref
arg	28:45	28:63	7	ist->hw_frames_ctx
water	28:45	0:0	8	ist
op	28:48	0:0	8	->
water	28:50	0:0	8	hw_frames_ctx
water	28:64	0:0	6	;
if	29:12	30:38	6	(! s -> hw_frames_ctx)
cond	29:16	29:20	7	! s -> hw_frames_ctx
op	29:16	0:0	8	!
water	29:17	0:0	8	s
op	29:18	0:0	8	->
water	29:20	0:0	8	hw_frames_ctx
stmts	30:16	30:38	7	
return	30:16	30:38	8	AV_PIX_FMT_NONE
water	30:23	0:0	9	AV_PIX_FMT_NONE
water	31:8	0:0	6	}
water	32:8	0:0	4	ist
op	32:11	0:0	4	->
water	32:13	0:0	4	active_hwaccel_id
op	32:31	0:0	4	=
water	32:33	0:0	4	hwaccel
op	32:40	0:0	4	->
water	32:42	0:0	4	id
water	32:44	0:0	4	;
water	33:8	0:0	4	ist
op	33:11	0:0	4	->
water	33:13	0:0	4	hwaccel_pix_fmt
op	33:31	0:0	4	=
op	33:33	0:0	4	*
water	33:34	0:0	4	p
water	33:35	0:0	4	;
break	34:8	34:13	4	
water	35:4	0:0	4	}
return	36:4	36:13	2	*p
op	36:11	0:0	3	*
water	36:12	0:0	3	p

func	1:0	28:0	0	static int	mmap_start
params	1:21	0:0	1	
param	1:22	1:42	2	AVFormatContext *	ctx
stmnts	0:0	27:12	1	
decl	3:4	3:41	2	struct video_data	*s
op	3:25	0:0	2	=
water	3:27	0:0	2	ctx
op	3:30	0:0	2	->
water	3:32	0:0	2	priv_data
decl	4:4	4:27	2	enum v4l2_buf_type	type
decl	5:4	5:14	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:14	2	int	res
for	6:4	18:4	2	(i = 0 ;i < s -> buffers;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:23	3	i < s -> buffers
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	s
op	6:21	0:0	4	->
water	6:23	0:0	4	buffers
forexpr	6:32	6:33	3	i ++
water	6:32	0:0	4	i
op	6:33	0:0	4	++
stmts	6:37	18:4	3	
water	6:37	0:0	4	{
decl	7:8	11:9	4	struct v4l2_buffer	buf
op	7:31	0:0	4	=
water	7:33	0:0	4	{
op	8:12	0:0	4	.
water	8:13	0:0	4	type
op	8:20	0:0	4	=
water	8:22	0:0	4	V4L2_BUF_TYPE_VIDEO_CAPTURE
water	8:49	0:0	4	,
op	9:12	0:0	4	.
water	9:13	0:0	4	index
op	9:20	0:0	4	=
water	9:22	0:0	4	i
water	9:23	0:0	4	,
op	10:12	0:0	4	.
water	10:13	0:0	4	memory
op	10:20	0:0	4	=
water	10:22	0:0	4	V4L2_MEMORY_MMAP
water	11:8	0:0	4	}
if	12:8	17:8	4	(v4l2_ioctl (s -> fd ,VIDIOC_QBUF ,& buf ) < 0)
cond	12:12	12:51	5	v4l2_ioctl (s -> fd ,VIDIOC_QBUF ,& buf ) < 0
call	12:12	12:47	6	v4l2_ioctl
arg	12:23	12:28	7	s->fd
water	12:23	0:0	8	s
op	12:24	0:0	8	->
water	12:26	0:0	8	fd
arg	12:30	12:41	7	VIDIOC_QBUF
water	12:30	0:0	8	VIDIOC_QBUF
arg	12:43	12:47	7	&buf
op	12:43	0:0	8	&
water	12:44	0:0	8	buf
op	12:49	0:0	6	<
water	12:51	0:0	6	0
stmts	12:54	17:8	5	
water	12:54	0:0	6	{
water	13:12	0:0	6	res
op	13:16	0:0	6	=
call	13:18	13:31	6	AVERROR
arg	13:26	13:31	7	errno
water	13:26	0:0	8	errno
water	13:32	0:0	6	;
call	14:12	15:34	6	av_log
arg	14:19	14:22	7	ctx
water	14:19	0:0	8	ctx
arg	14:24	14:36	7	AV_LOG_ERROR
water	14:24	0:0	8	AV_LOG_ERROR
arg	14:38	14:64	7	"ioctl(VIDIOC_QBUF): %s\n"
water	14:38	0:0	8	"ioctl(VIDIOC_QBUF): %s\n"
arg	15:19	15:34	7	av_err2str(res)
call	15:19	15:33	8	av_err2str
arg	15:30	15:33	9	res
water	15:30	0:0	10	res
water	15:35	0:0	6	;
return	16:12	16:22	6	res
water	16:19	0:0	7	res
water	17:8	0:0	6	}
water	18:4	0:0	4	}
water	19:4	0:0	2	s
op	19:5	0:0	2	->
water	19:7	0:0	2	buffers_queued
op	19:22	0:0	2	=
water	19:24	0:0	2	s
op	19:25	0:0	2	->
water	19:27	0:0	2	buffers
water	19:34	0:0	2	;
water	20:4	0:0	2	type
op	20:9	0:0	2	=
water	20:11	0:0	2	V4L2_BUF_TYPE_VIDEO_CAPTURE
water	20:38	0:0	2	;
if	21:4	26:4	2	(v4l2_ioctl (s -> fd ,VIDIOC_STREAMON ,& type ) < 0)
cond	21:8	21:52	3	v4l2_ioctl (s -> fd ,VIDIOC_STREAMON ,& type ) < 0
call	21:8	21:48	4	v4l2_ioctl
arg	21:19	21:24	5	s->fd
water	21:19	0:0	6	s
op	21:20	0:0	6	->
water	21:22	0:0	6	fd
arg	21:26	21:41	5	VIDIOC_STREAMON
water	21:26	0:0	6	VIDIOC_STREAMON
arg	21:43	21:48	5	&type
op	21:43	0:0	6	&
water	21:44	0:0	6	type
op	21:50	0:0	4	<
water	21:52	0:0	4	0
stmts	21:55	26:4	3	
water	21:55	0:0	4	{
water	22:8	0:0	4	res
op	22:12	0:0	4	=
call	22:14	22:27	4	AVERROR
arg	22:22	22:27	5	errno
water	22:22	0:0	6	errno
water	22:28	0:0	4	;
call	23:8	24:30	4	av_log
arg	23:15	23:18	5	ctx
water	23:15	0:0	6	ctx
arg	23:20	23:32	5	AV_LOG_ERROR
water	23:20	0:0	6	AV_LOG_ERROR
arg	23:34	23:64	5	"ioctl(VIDIOC_STREAMON): %s\n"
water	23:34	0:0	6	"ioctl(VIDIOC_STREAMON): %s\n"
arg	24:15	24:30	5	av_err2str(res)
call	24:15	24:29	6	av_err2str
arg	24:26	24:29	7	res
water	24:26	0:0	8	res
water	24:31	0:0	4	;
return	25:8	25:18	4	res
water	25:15	0:0	5	res
water	26:4	0:0	4	}
return	27:4	27:12	2	0
water	27:11	0:0	3	0

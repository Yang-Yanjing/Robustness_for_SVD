func	1:0	16:0	0	int	av_opt_get_image_size
params	1:25	0:0	1	
param	1:26	1:35	2	void *	obj
param	1:37	1:53	2	const char *	name
param	1:55	1:71	2	int	search_flags
param	1:73	1:83	2	int *	w_out
param	1:85	1:95	2	int *	h_out
stmnts	0:0	15:12	1	
decl	3:4	3:26	2	void	*dst
water	3:13	0:0	2	,
decl	3:4	3:26	2	void	*target_obj
decl	4:4	4:83	2	const AVOption	*o
op	4:22	0:0	2	=
call	4:24	4:82	3	av_opt_find2
arg	4:37	4:40	4	obj
water	4:37	0:0	5	obj
arg	4:42	4:46	4	name
water	4:42	0:0	5	name
arg	4:48	4:52	4	NULL
water	4:48	0:0	5	NULL
arg	4:54	4:55	4	0
water	4:54	0:0	5	0
arg	4:57	4:69	4	search_flags
water	4:57	0:0	5	search_flags
arg	4:71	4:82	4	&target_obj
op	4:71	0:0	5	&
water	4:72	0:0	5	target_obj
if	5:4	6:39	2	(! o || ! target_obj)
cond	5:8	5:15	3	! o || ! target_obj
op	5:8	0:0	4	!
water	5:9	0:0	4	o
op	5:11	0:0	4	||
op	5:14	0:0	4	!
water	5:15	0:0	4	target_obj
stmts	6:8	6:39	3	
return	6:8	6:39	4	AVERROR_OPTION_NOT_FOUND
water	6:15	0:0	5	AVERROR_OPTION_NOT_FOUND
if	7:4	11:4	2	(o -> type != AV_OPT_TYPE_IMAGE_SIZE)
cond	7:8	7:19	3	o -> type != AV_OPT_TYPE_IMAGE_SIZE
water	7:8	0:0	4	o
op	7:9	0:0	4	->
water	7:11	0:0	4	type
op	7:16	0:0	4	!=
water	7:19	0:0	4	AV_OPT_TYPE_IMAGE_SIZE
stmts	7:43	11:4	3	
water	7:43	0:0	4	{
call	8:8	9:72	4	av_log
arg	8:15	8:18	5	obj
water	8:15	0:0	6	obj
arg	8:20	8:32	5	AV_LOG_ERROR
water	8:20	0:0	6	AV_LOG_ERROR
arg	9:15	9:66	5	"The value for option '%s' is not an image size.\n"
water	9:15	0:0	6	"The value for option '%s' is not an image size.\n"
arg	9:68	9:72	5	name
water	9:68	0:0	6	name
water	9:73	0:0	4	;
return	10:8	10:30	4	AVERROR(EINVAL)
call	10:15	10:29	5	AVERROR
arg	10:23	10:29	6	EINVAL
water	10:23	0:0	7	EINVAL
water	11:4	0:0	4	}
water	12:4	0:0	2	dst
op	12:8	0:0	2	=
water	12:10	0:0	2	(
water	12:11	0:0	2	(
water	12:12	0:0	2	uint8_t
op	12:19	0:0	2	*
water	12:20	0:0	2	)
water	12:21	0:0	2	target_obj
water	12:31	0:0	2	)
op	12:33	0:0	2	+
water	12:35	0:0	2	o
op	12:36	0:0	2	->
water	12:38	0:0	2	offset
water	12:44	0:0	2	;
if	13:4	13:35	2	(w_out)
cond	13:8	13:8	3	w_out
water	13:8	0:0	4	w_out
stmts	13:15	13:35	3	
op	13:15	0:0	4	*
water	13:16	0:0	4	w_out
op	13:22	0:0	4	=
op	13:24	0:0	4	*
water	13:25	0:0	4	(
water	13:26	0:0	4	int
op	13:30	0:0	4	*
water	13:31	0:0	4	)
water	13:32	0:0	4	dst
water	13:35	0:0	4	;
if	14:4	14:39	2	(h_out)
cond	14:8	14:8	3	h_out
water	14:8	0:0	4	h_out
stmts	14:15	14:39	3	
op	14:15	0:0	4	*
water	14:16	0:0	4	h_out
op	14:22	0:0	4	=
op	14:24	0:0	4	*
water	14:25	0:0	4	(
water	14:26	0:0	4	(
water	14:27	0:0	4	int
op	14:31	0:0	4	*
water	14:32	0:0	4	)
water	14:33	0:0	4	dst
op	14:36	0:0	4	+
water	14:37	0:0	4	1
water	14:38	0:0	4	)
water	14:39	0:0	4	;
return	15:4	15:12	2	0
water	15:11	0:0	3	0

func	1:0	33:0	0	static int	add_segment
params	1:22	0:0	1	
param	1:23	1:39	2	OutputStream *	os
param	1:41	1:57	2	const char *	file
param	2:23	2:35	2	int64_t	time
param	2:37	2:49	2	int	duration
param	3:23	3:40	2	int64_t	start_pos
param	3:42	3:62	2	int64_t	range_length
param	4:23	4:43	2	int64_t	index_length
stmnts	0:0	32:12	1	
decl	6:4	6:11	2	int	err
decl	7:4	7:16	2	Segment	*seg
if	8:4	16:4	2	(os -> nb_segments >= os -> segments_size)
cond	8:8	8:31	3	os -> nb_segments >= os -> segments_size
water	8:8	0:0	4	os
op	8:10	0:0	4	->
water	8:12	0:0	4	nb_segments
op	8:24	0:0	4	>=
water	8:27	0:0	4	os
op	8:29	0:0	4	->
water	8:31	0:0	4	segments_size
stmts	8:46	16:4	3	
water	8:46	0:0	4	{
water	9:8	0:0	4	os
op	9:10	0:0	4	->
water	9:12	0:0	4	segments_size
op	9:26	0:0	4	=
water	9:28	0:0	4	(
water	9:29	0:0	4	os
op	9:31	0:0	4	->
water	9:33	0:0	4	segments_size
op	9:47	0:0	4	+
water	9:49	0:0	4	1
water	9:50	0:0	4	)
op	9:52	0:0	4	*
water	9:54	0:0	4	2
water	9:55	0:0	4	;
if	10:8	15:8	4	(( err =av_reallocp (& os -> segments ,sizeof ( * os -> segments ) * os -> segments_size ) ) < 0)
cond	10:12	11:53	5	( err =av_reallocp (& os -> segments ,sizeof ( * os -> segments ) * os -> segments_size ) ) < 0
water	10:12	0:0	6	(
water	10:13	0:0	6	err
op	10:17	0:0	6	=
call	10:19	11:48	6	av_reallocp
arg	10:31	10:44	7	&os->segments
op	10:31	0:0	8	&
water	10:32	0:0	8	os
op	10:34	0:0	8	->
water	10:36	0:0	8	segments
arg	10:46	11:48	7	sizeof(*os->segments)*os->segments_size
op	10:46	0:0	8	sizeof
water	10:52	0:0	8	(
op	10:53	0:0	8	*
water	10:54	0:0	8	os
op	10:56	0:0	8	->
water	10:58	0:0	8	segments
water	10:66	0:0	8	)
op	10:68	0:0	8	*
water	11:31	0:0	8	os
op	11:33	0:0	8	->
water	11:35	0:0	8	segments_size
water	11:49	0:0	6	)
op	11:51	0:0	6	<
water	11:53	0:0	6	0
stmts	11:56	15:8	5	
water	11:56	0:0	6	{
water	12:12	0:0	6	os
op	12:14	0:0	6	->
water	12:16	0:0	6	segments_size
op	12:30	0:0	6	=
water	12:32	0:0	6	0
water	12:33	0:0	6	;
water	13:12	0:0	6	os
op	13:14	0:0	6	->
water	13:16	0:0	6	nb_segments
op	13:28	0:0	6	=
water	13:30	0:0	6	0
water	13:31	0:0	6	;
return	14:12	14:22	6	err
water	14:19	0:0	7	err
water	15:8	0:0	6	}
water	16:4	0:0	4	}
water	17:4	0:0	2	seg
op	17:8	0:0	2	=
call	17:10	17:33	2	av_mallocz
arg	17:21	17:33	3	sizeof(*seg)
op	17:21	0:0	4	sizeof
water	17:27	0:0	4	(
op	17:28	0:0	4	*
water	17:29	0:0	4	seg
water	17:32	0:0	4	)
water	17:34	0:0	2	;
if	18:4	19:30	2	(! seg)
cond	18:8	18:9	3	! seg
op	18:8	0:0	4	!
water	18:9	0:0	4	seg
stmts	19:8	19:30	3	
return	19:8	19:30	4	AVERROR(ENOMEM)
call	19:15	19:29	5	AVERROR
arg	19:23	19:29	6	ENOMEM
water	19:23	0:0	7	ENOMEM
call	20:4	20:49	2	av_strlcpy
arg	20:15	20:24	3	seg->file
water	20:15	0:0	4	seg
op	20:18	0:0	4	->
water	20:20	0:0	4	file
arg	20:26	20:30	3	file
water	20:26	0:0	4	file
arg	20:32	20:49	3	sizeof(seg->file)
op	20:32	0:0	4	sizeof
water	20:38	0:0	4	(
water	20:39	0:0	4	seg
op	20:42	0:0	4	->
water	20:44	0:0	4	file
water	20:48	0:0	4	)
water	20:50	0:0	2	;
water	21:4	0:0	2	seg
op	21:7	0:0	2	->
water	21:9	0:0	2	time
op	21:14	0:0	2	=
water	21:16	0:0	2	time
water	21:20	0:0	2	;
water	22:4	0:0	2	seg
op	22:7	0:0	2	->
water	22:9	0:0	2	duration
op	22:18	0:0	2	=
water	22:20	0:0	2	duration
water	22:28	0:0	2	;
if	23:4	26:4	2	(seg -> time < 0)
cond	23:8	23:20	3	seg -> time < 0
water	23:8	0:0	4	seg
op	23:11	0:0	4	->
water	23:13	0:0	4	time
op	23:18	0:0	4	<
water	23:20	0:0	4	0
stmts	23:23	26:4	3	
water	23:23	0:0	4	{
water	24:8	0:0	4	seg
op	24:11	0:0	4	->
water	24:13	0:0	4	duration
op	24:22	0:0	4	+=
water	24:25	0:0	4	seg
op	24:28	0:0	4	->
water	24:30	0:0	4	time
water	24:34	0:0	4	;
water	25:8	0:0	4	seg
op	25:11	0:0	4	->
water	25:13	0:0	4	time
op	25:18	0:0	4	=
water	25:20	0:0	4	0
water	25:21	0:0	4	;
water	26:4	0:0	4	}
water	27:4	0:0	2	seg
op	27:7	0:0	2	->
water	27:9	0:0	2	start_pos
op	27:19	0:0	2	=
water	27:21	0:0	2	start_pos
water	27:30	0:0	2	;
water	28:4	0:0	2	seg
op	28:7	0:0	2	->
water	28:9	0:0	2	range_length
op	28:22	0:0	2	=
water	28:24	0:0	2	range_length
water	28:36	0:0	2	;
water	29:4	0:0	2	seg
op	29:7	0:0	2	->
water	29:9	0:0	2	index_length
op	29:22	0:0	2	=
water	29:24	0:0	2	index_length
water	29:36	0:0	2	;
water	30:4	0:0	2	os
op	30:6	0:0	2	->
water	30:8	0:0	2	segments
op	30:16	0:0	2	[
water	30:17	0:0	2	os
op	30:19	0:0	2	->
water	30:21	0:0	2	nb_segments
op	30:32	0:0	2	++
op	30:34	0:0	2	]
op	30:36	0:0	2	=
water	30:38	0:0	2	seg
water	30:41	0:0	2	;
water	31:4	0:0	2	os
op	31:6	0:0	2	->
water	31:8	0:0	2	segment_index
op	31:21	0:0	2	++
water	31:23	0:0	2	;
return	32:4	32:12	2	0
water	32:11	0:0	3	0

func	1:0	13:0	0	static void	check_decode_result
params	1:31	0:0	1	
param	1:32	1:48	2	InputStream *	ist
param	1:50	1:65	2	int *	got_output
param	1:67	1:74	2	int	ret
stmnts	3:4	12:4	1	
if	3:4	4:35	2	(* got_output || ret < 0)
cond	3:8	3:27	3	* got_output || ret < 0
op	3:8	0:0	4	*
water	3:9	0:0	4	got_output
op	3:20	0:0	4	||
water	3:23	0:0	4	ret
op	3:26	0:0	4	<
water	3:27	0:0	4	0
stmts	4:8	4:35	3	
water	4:8	0:0	4	decode_error_stat
op	4:25	0:0	4	[
water	4:26	0:0	4	ret
op	4:29	0:0	4	<
water	4:30	0:0	4	0
op	4:31	0:0	4	]
op	4:33	0:0	4	++
water	4:35	0:0	4	;
if	5:4	6:23	2	(ret < 0 && exit_on_error)
cond	5:8	5:19	3	ret < 0 && exit_on_error
water	5:8	0:0	4	ret
op	5:12	0:0	4	<
water	5:14	0:0	4	0
op	5:16	0:0	4	&&
water	5:19	0:0	4	exit_on_error
stmts	6:8	6:23	3	
call	6:8	6:22	4	exit_program
arg	6:21	6:22	5	1
water	6:21	0:0	6	1
water	6:23	0:0	4	;
if	7:4	12:4	2	(exit_on_error && * got_output && ist)
cond	7:8	7:40	3	exit_on_error && * got_output && ist
water	7:8	0:0	4	exit_on_error
op	7:22	0:0	4	&&
op	7:25	0:0	4	*
water	7:26	0:0	4	got_output
op	7:37	0:0	4	&&
water	7:40	0:0	4	ist
stmts	7:45	12:4	3	
water	7:45	0:0	4	{
if	8:8	11:8	4	(av_frame_get_decode_error_flags (ist -> decoded_frame ) || ( ist -> decoded_frame -> flags & AV_FRAME_FLAG_CORRUPT ))
cond	8:12	8:117	5	av_frame_get_decode_error_flags (ist -> decoded_frame ) || ( ist -> decoded_frame -> flags & AV_FRAME_FLAG_CORRUPT )
call	8:12	8:62	6	av_frame_get_decode_error_flags
arg	8:44	8:62	7	ist->decoded_frame
water	8:44	0:0	8	ist
op	8:47	0:0	8	->
water	8:49	0:0	8	decoded_frame
op	8:64	0:0	6	||
water	8:67	0:0	6	(
water	8:68	0:0	6	ist
op	8:71	0:0	6	->
water	8:73	0:0	6	decoded_frame
op	8:86	0:0	6	->
water	8:88	0:0	6	flags
op	8:94	0:0	6	&
water	8:96	0:0	6	AV_FRAME_FLAG_CORRUPT
water	8:117	0:0	6	)
stmts	8:120	11:8	5	
water	8:120	0:0	6	{
call	9:12	9:142	6	av_log
arg	9:19	9:23	7	NULL
water	9:19	0:0	8	NULL
arg	9:25	9:37	7	AV_LOG_FATAL
water	9:25	0:0	8	AV_LOG_FATAL
arg	9:39	9:81	7	"%s: corrupt decoded frame in stream %d\n"
water	9:39	0:0	8	"%s: corrupt decoded frame in stream %d\n"
arg	9:83	9:126	7	input_files[ist->file_index]->ctx->filename
water	9:83	0:0	8	input_files
op	9:94	0:0	8	[
water	9:95	0:0	8	ist
op	9:98	0:0	8	->
water	9:100	0:0	8	file_index
op	9:110	0:0	8	]
op	9:111	0:0	8	->
water	9:113	0:0	8	ctx
op	9:116	0:0	8	->
water	9:118	0:0	8	filename
arg	9:128	9:142	7	ist->st->index
water	9:128	0:0	8	ist
op	9:131	0:0	8	->
water	9:133	0:0	8	st
op	9:135	0:0	8	->
water	9:137	0:0	8	index
water	9:143	0:0	6	;
call	10:12	10:26	6	exit_program
arg	10:25	10:26	7	1
water	10:25	0:0	8	1
water	10:27	0:0	6	;
water	11:8	0:0	6	}
water	12:4	0:0	4	}

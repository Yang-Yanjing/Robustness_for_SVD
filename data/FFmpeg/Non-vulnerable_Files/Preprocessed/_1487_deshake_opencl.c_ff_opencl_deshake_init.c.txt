func	1:0	36:0	0	int	ff_opencl_deshake_init
params	1:26	0:0	1	
param	1:27	1:47	2	AVFilterContext *	ctx
stmnts	0:0	35:14	1	
decl	3:4	3:15	2	int	ret
op	3:12	0:0	2	=
water	3:14	0:0	2	0
decl	4:4	4:39	2	DeshakeContext	*deshake
op	4:28	0:0	2	=
water	4:30	0:0	2	ctx
op	4:33	0:0	2	->
water	4:35	0:0	2	priv
water	5:4	0:0	2	ret
op	5:8	0:0	2	=
call	5:10	5:29	2	av_opencl_init
arg	5:25	5:29	3	NULL
water	5:25	0:0	4	NULL
water	5:30	0:0	2	;
if	6:4	7:18	2	(ret < 0)
cond	6:8	6:14	3	ret < 0
water	6:8	0:0	4	ret
op	6:12	0:0	4	<
water	6:14	0:0	4	0
stmts	7:8	7:18	3	
return	7:8	7:18	4	ret
water	7:15	0:0	5	ret
water	8:4	0:0	2	deshake
op	8:11	0:0	2	->
water	8:13	0:0	2	opencl_ctx
op	8:23	0:0	2	.
water	8:24	0:0	2	plane_num
op	8:34	0:0	2	=
water	8:36	0:0	2	PLANE_NUM
water	8:45	0:0	2	;
water	9:4	0:0	2	deshake
op	9:11	0:0	2	->
water	9:13	0:0	2	opencl_ctx
op	9:23	0:0	2	.
water	9:24	0:0	2	command_queue
op	9:38	0:0	2	=
call	9:40	9:68	2	av_opencl_get_command_queue
water	9:69	0:0	2	;
if	10:4	13:4	2	(! deshake -> opencl_ctx . command_queue)
cond	10:8	10:29	3	! deshake -> opencl_ctx . command_queue
op	10:8	0:0	4	!
water	10:9	0:0	4	deshake
op	10:16	0:0	4	->
water	10:18	0:0	4	opencl_ctx
op	10:28	0:0	4	.
water	10:29	0:0	4	command_queue
stmts	10:44	13:4	3	
water	10:44	0:0	4	{
call	11:8	11:92	4	av_log
arg	11:15	11:18	5	ctx
water	11:15	0:0	6	ctx
arg	11:20	11:32	5	AV_LOG_ERROR
water	11:20	0:0	6	AV_LOG_ERROR
arg	11:34	11:92	5	"Unable to get OpenCL command queue in filter 'deshake'\n"
water	11:34	0:0	6	"Unable to get OpenCL command queue in filter 'deshake'\n"
water	11:93	0:0	4	;
return	12:8	12:30	4	AVERROR(EINVAL)
call	12:15	12:29	5	AVERROR
arg	12:23	12:29	6	EINVAL
water	12:23	0:0	7	EINVAL
water	13:4	0:0	4	}
water	14:4	0:0	2	deshake
op	14:11	0:0	2	->
water	14:13	0:0	2	opencl_ctx
op	14:23	0:0	2	.
water	14:24	0:0	2	program
op	14:32	0:0	2	=
call	14:34	14:78	2	av_opencl_compile
arg	14:52	14:72	3	"avfilter_transform"
water	14:52	0:0	4	"avfilter_transform"
arg	14:74	14:78	3	NULL
water	14:74	0:0	4	NULL
water	14:79	0:0	2	;
if	15:4	18:4	2	(! deshake -> opencl_ctx . program)
cond	15:8	15:29	3	! deshake -> opencl_ctx . program
op	15:8	0:0	4	!
water	15:9	0:0	4	deshake
op	15:16	0:0	4	->
water	15:18	0:0	4	opencl_ctx
op	15:28	0:0	4	.
water	15:29	0:0	4	program
stmts	15:38	18:4	3	
water	15:38	0:0	4	{
call	16:8	16:91	4	av_log
arg	16:15	16:18	5	ctx
water	16:15	0:0	6	ctx
arg	16:20	16:32	5	AV_LOG_ERROR
water	16:20	0:0	6	AV_LOG_ERROR
arg	16:34	16:91	5	"OpenCL failed to compile program 'avfilter_transform'\n"
water	16:34	0:0	6	"OpenCL failed to compile program 'avfilter_transform'\n"
water	16:92	0:0	4	;
return	17:8	17:30	4	AVERROR(EINVAL)
call	17:15	17:29	5	AVERROR
arg	17:23	17:29	6	EINVAL
water	17:23	0:0	7	EINVAL
water	18:4	0:0	4	}
if	19:4	26:4	2	(! deshake -> opencl_ctx . kernel_luma)
cond	19:8	19:29	3	! deshake -> opencl_ctx . kernel_luma
op	19:8	0:0	4	!
water	19:9	0:0	4	deshake
op	19:16	0:0	4	->
water	19:18	0:0	4	opencl_ctx
op	19:28	0:0	4	.
water	19:29	0:0	4	kernel_luma
stmts	19:42	26:4	3	
water	19:42	0:0	4	{
water	20:8	0:0	4	deshake
op	20:15	0:0	4	->
water	20:17	0:0	4	opencl_ctx
op	20:27	0:0	4	.
water	20:28	0:0	4	kernel_luma
op	20:40	0:0	4	=
call	20:42	21:88	4	clCreateKernel
arg	20:57	20:84	5	deshake->opencl_ctx.program
water	20:57	0:0	6	deshake
op	20:64	0:0	6	->
water	20:66	0:0	6	opencl_ctx
op	20:76	0:0	6	.
water	20:77	0:0	6	program
arg	21:57	21:82	5	"avfilter_transform_luma"
water	21:57	0:0	6	"avfilter_transform_luma"
arg	21:84	21:88	5	&ret
op	21:84	0:0	6	&
water	21:85	0:0	6	ret
water	21:89	0:0	4	;
if	22:8	25:8	4	(ret != CL_SUCCESS)
cond	22:12	22:19	5	ret != CL_SUCCESS
water	22:12	0:0	6	ret
op	22:16	0:0	6	!=
water	22:19	0:0	6	CL_SUCCESS
stmts	22:31	25:8	5	
water	22:31	0:0	6	{
call	23:12	23:98	6	av_log
arg	23:19	23:22	7	ctx
water	23:19	0:0	8	ctx
arg	23:24	23:36	7	AV_LOG_ERROR
water	23:24	0:0	8	AV_LOG_ERROR
arg	23:38	23:98	7	"OpenCL failed to create kernel 'avfilter_transform_luma'\n"
water	23:38	0:0	8	"OpenCL failed to create kernel 'avfilter_transform_luma'\n"
water	23:99	0:0	6	;
return	24:12	24:34	6	AVERROR(EINVAL)
call	24:19	24:33	7	AVERROR
arg	24:27	24:33	8	EINVAL
water	24:27	0:0	9	EINVAL
water	25:8	0:0	6	}
water	26:4	0:0	4	}
if	27:4	34:4	2	(! deshake -> opencl_ctx . kernel_chroma)
cond	27:8	27:29	3	! deshake -> opencl_ctx . kernel_chroma
op	27:8	0:0	4	!
water	27:9	0:0	4	deshake
op	27:16	0:0	4	->
water	27:18	0:0	4	opencl_ctx
op	27:28	0:0	4	.
water	27:29	0:0	4	kernel_chroma
stmts	27:44	34:4	3	
water	27:44	0:0	4	{
water	28:8	0:0	4	deshake
op	28:15	0:0	4	->
water	28:17	0:0	4	opencl_ctx
op	28:27	0:0	4	.
water	28:28	0:0	4	kernel_chroma
op	28:42	0:0	4	=
call	28:44	29:92	4	clCreateKernel
arg	28:59	28:86	5	deshake->opencl_ctx.program
water	28:59	0:0	6	deshake
op	28:66	0:0	6	->
water	28:68	0:0	6	opencl_ctx
op	28:78	0:0	6	.
water	28:79	0:0	6	program
arg	29:59	29:86	5	"avfilter_transform_chroma"
water	29:59	0:0	6	"avfilter_transform_chroma"
arg	29:88	29:92	5	&ret
op	29:88	0:0	6	&
water	29:89	0:0	6	ret
water	29:93	0:0	4	;
if	30:8	33:8	4	(ret != CL_SUCCESS)
cond	30:12	30:19	5	ret != CL_SUCCESS
water	30:12	0:0	6	ret
op	30:16	0:0	6	!=
water	30:19	0:0	6	CL_SUCCESS
stmts	30:31	33:8	5	
water	30:31	0:0	6	{
call	31:12	31:100	6	av_log
arg	31:19	31:22	7	ctx
water	31:19	0:0	8	ctx
arg	31:24	31:36	7	AV_LOG_ERROR
water	31:24	0:0	8	AV_LOG_ERROR
arg	31:38	31:100	7	"OpenCL failed to create kernel 'avfilter_transform_chroma'\n"
water	31:38	0:0	8	"OpenCL failed to create kernel 'avfilter_transform_chroma'\n"
water	31:101	0:0	6	;
return	32:12	32:34	6	AVERROR(EINVAL)
call	32:19	32:33	7	AVERROR
arg	32:27	32:33	8	EINVAL
water	32:27	0:0	9	EINVAL
water	33:8	0:0	6	}
water	34:4	0:0	4	}
return	35:4	35:14	2	ret
water	35:11	0:0	3	ret

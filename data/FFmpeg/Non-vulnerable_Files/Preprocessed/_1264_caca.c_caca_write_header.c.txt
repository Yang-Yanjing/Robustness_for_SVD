func	2:0	64:4	0	static int	caca_write_header
params	2:28	0:0	1	
param	2:29	2:47	2	AVFormatContext *	s
stmnts	0:0	63:17	1	
decl	4:4	4:33	2	CACAContext	*c
op	4:19	0:0	2	=
water	4:21	0:0	2	s
op	4:22	0:0	2	->
water	4:24	0:0	2	priv_data
decl	5:4	5:32	2	AVStream	*st
op	5:17	0:0	2	=
water	5:19	0:0	2	s
op	5:20	0:0	2	->
water	5:22	0:0	2	streams
op	5:29	0:0	2	[
water	5:30	0:0	2	0
op	5:31	0:0	2	]
decl	6:4	6:38	2	AVCodecContext	*encctx
op	6:27	0:0	2	=
water	6:29	0:0	2	st
op	6:31	0:0	2	->
water	6:33	0:0	2	codec
decl	7:4	7:16	2	int	ret
water	7:11	0:0	2	,
decl	7:4	7:16	2	int	bpp
water	8:4	0:0	2	c
op	8:5	0:0	2	->
water	8:7	0:0	2	ctx
op	8:11	0:0	2	=
water	8:13	0:0	2	s
water	8:14	0:0	2	;
if	9:4	12:4	2	(c -> list_drivers)
cond	9:8	9:11	3	c -> list_drivers
water	9:8	0:0	4	c
op	9:9	0:0	4	->
water	9:11	0:0	4	list_drivers
stmts	9:25	12:4	3	
water	9:25	0:0	4	{
call	10:8	10:22	4	list_drivers
arg	10:21	10:22	5	c
water	10:21	0:0	6	c
water	10:23	0:0	4	;
return	11:8	11:27	4	AVERROR_EXIT
water	11:15	0:0	5	AVERROR_EXIT
water	12:4	0:0	4	}
if	13:4	30:4	2	(c -> list_dither)
cond	13:8	13:11	3	c -> list_dither
water	13:8	0:0	4	c
op	13:9	0:0	4	->
water	13:11	0:0	4	list_dither
stmts	13:24	30:4	3	
water	13:24	0:0	4	{
if	14:8	16:8	4	(!strcmp (c -> list_dither ,"colors" ))
cond	14:12	14:44	5	!strcmp (c -> list_dither ,"colors" )
op	14:12	0:0	6	!
call	14:13	14:44	6	strcmp
arg	14:20	14:34	7	c->list_dither
water	14:20	0:0	8	c
op	14:21	0:0	8	->
water	14:23	0:0	8	list_dither
arg	14:36	14:44	7	"colors"
water	14:36	0:0	8	"colors"
stmts	14:47	16:8	5	
water	14:47	0:0	6	{
call	15:12	15:31	6	list_dither_color
arg	15:30	15:31	7	c
water	15:30	0:0	8	c
water	15:32	0:0	6	;
water	16:8	0:0	6	}
else	16:10	18:8	4
stmts	16:15	18:8	5	
if	16:15	18:8	6	(!strcmp (c -> list_dither ,"charsets" ))
cond	16:19	16:53	7	!strcmp (c -> list_dither ,"charsets" )
op	16:19	0:0	8	!
call	16:20	16:53	8	strcmp
arg	16:27	16:41	9	c->list_dither
water	16:27	0:0	10	c
op	16:28	0:0	10	->
water	16:30	0:0	10	list_dither
arg	16:43	16:53	9	"charsets"
water	16:43	0:0	10	"charsets"
stmts	16:56	18:8	7	
water	16:56	0:0	8	{
call	17:12	17:33	8	list_dither_charset
arg	17:32	17:33	9	c
water	17:32	0:0	10	c
water	17:34	0:0	8	;
water	18:8	0:0	8	}
else	18:10	20:8	4
stmts	18:15	20:8	5	
if	18:15	20:8	6	(!strcmp (c -> list_dither ,"algorithms" ))
cond	18:19	18:55	7	!strcmp (c -> list_dither ,"algorithms" )
op	18:19	0:0	8	!
call	18:20	18:55	8	strcmp
arg	18:27	18:41	9	c->list_dither
water	18:27	0:0	10	c
op	18:28	0:0	10	->
water	18:30	0:0	10	list_dither
arg	18:43	18:55	9	"algorithms"
water	18:43	0:0	10	"algorithms"
stmts	18:58	20:8	7	
water	18:58	0:0	8	{
call	19:12	19:35	8	list_dither_algorithm
arg	19:34	19:35	9	c
water	19:34	0:0	10	c
water	19:36	0:0	8	;
water	20:8	0:0	8	}
else	20:10	22:8	4
stmts	20:15	22:8	5	
if	20:15	22:8	6	(!strcmp (c -> list_dither ,"antialiases" ))
cond	20:19	20:56	7	!strcmp (c -> list_dither ,"antialiases" )
op	20:19	0:0	8	!
call	20:20	20:56	8	strcmp
arg	20:27	20:41	9	c->list_dither
water	20:27	0:0	10	c
op	20:28	0:0	10	->
water	20:30	0:0	10	list_dither
arg	20:43	20:56	9	"antialiases"
water	20:43	0:0	10	"antialiases"
stmts	20:59	22:8	7	
water	20:59	0:0	8	{
call	21:12	21:35	8	list_dither_antialias
arg	21:34	21:35	9	c
water	21:34	0:0	10	c
water	21:36	0:0	8	;
water	22:8	0:0	8	}
else	22:10	28:8	4
stmts	22:15	28:8	5	
water	22:15	0:0	6	{
call	23:12	26:33	6	av_log
arg	23:19	23:20	7	s
water	23:19	0:0	8	s
arg	23:22	23:34	7	AV_LOG_ERROR
water	23:22	0:0	8	AV_LOG_ERROR
arg	24:19	25:95	7	"Invalid argument '%s', for 'list_dither' option\n""Argument must be one of 'algorithms, 'antialiases', 'charsets', 'colors'\n"
water	24:19	0:0	8	"Invalid argument '%s', for 'list_dither' option\n"
water	25:19	0:0	8	"Argument must be one of 'algorithms, 'antialiases', 'charsets', 'colors'\n"
arg	26:19	26:33	7	c->list_dither
water	26:19	0:0	8	c
op	26:20	0:0	8	->
water	26:22	0:0	8	list_dither
water	26:34	0:0	6	;
return	27:12	27:34	6	AVERROR(EINVAL)
call	27:19	27:33	7	AVERROR
arg	27:27	27:33	8	EINVAL
water	27:27	0:0	9	EINVAL
water	28:8	0:0	6	}
return	29:8	29:27	4	AVERROR_EXIT
water	29:15	0:0	5	AVERROR_EXIT
water	30:4	0:0	4	}
if	31:4	36:4	2	(s -> nb_streams > 1 || encctx -> codec_type != AVMEDIA_TYPE_VIDEO || encctx -> codec_id != AV_CODEC_ID_RAWVIDEO)
cond	31:11	33:33	3	s -> nb_streams > 1 || encctx -> codec_type != AVMEDIA_TYPE_VIDEO || encctx -> codec_id != AV_CODEC_ID_RAWVIDEO
water	31:11	0:0	4	s
op	31:12	0:0	4	->
water	31:14	0:0	4	nb_streams
op	31:25	0:0	4	>
water	31:27	0:0	4	1
op	32:8	0:0	4	||
water	32:11	0:0	4	encctx
op	32:17	0:0	4	->
water	32:19	0:0	4	codec_type
op	32:30	0:0	4	!=
water	32:33	0:0	4	AVMEDIA_TYPE_VIDEO
op	33:8	0:0	4	||
water	33:11	0:0	4	encctx
op	33:17	0:0	4	->
water	33:19	0:0	4	codec_id
op	33:30	0:0	4	!=
water	33:33	0:0	4	AV_CODEC_ID_RAWVIDEO
stmts	33:55	36:4	3	
water	33:55	0:0	4	{
call	34:8	34:69	4	av_log
arg	34:15	34:16	5	s
water	34:15	0:0	6	s
arg	34:18	34:30	5	AV_LOG_ERROR
water	34:18	0:0	6	AV_LOG_ERROR
arg	34:32	34:69	5	"Only supports one rawvideo stream\n"
water	34:32	0:0	6	"Only supports one rawvideo stream\n"
water	34:70	0:0	4	;
return	35:8	35:30	4	AVERROR(EINVAL)
call	35:15	35:29	5	AVERROR
arg	35:23	35:29	6	EINVAL
water	35:23	0:0	7	EINVAL
water	36:4	0:0	4	}
if	37:4	42:4	2	(encctx -> pix_fmt != AV_PIX_FMT_RGB24)
cond	37:8	37:27	3	encctx -> pix_fmt != AV_PIX_FMT_RGB24
water	37:8	0:0	4	encctx
op	37:14	0:0	4	->
water	37:16	0:0	4	pix_fmt
op	37:24	0:0	4	!=
water	37:27	0:0	4	AV_PIX_FMT_RGB24
stmts	37:45	42:4	3	
water	37:45	0:0	4	{
call	38:8	40:51	4	av_log
arg	38:15	38:16	5	s
water	38:15	0:0	6	s
arg	38:18	38:30	5	AV_LOG_ERROR
water	38:18	0:0	6	AV_LOG_ERROR
arg	39:15	39:62	5	"Unsupported pixel format '%s', choose rgb24\n"
water	39:15	0:0	6	"Unsupported pixel format '%s', choose rgb24\n"
arg	40:15	40:51	5	av_get_pix_fmt_name(encctx->pix_fmt)
call	40:15	40:50	6	av_get_pix_fmt_name
arg	40:35	40:50	7	encctx->pix_fmt
water	40:35	0:0	8	encctx
op	40:41	0:0	8	->
water	40:43	0:0	8	pix_fmt
water	40:52	0:0	4	;
return	41:8	41:30	4	AVERROR(EINVAL)
call	41:15	41:29	5	AVERROR
arg	41:23	41:29	6	EINVAL
water	41:23	0:0	7	EINVAL
water	42:4	0:0	4	}
water	43:4	0:0	2	c
op	43:5	0:0	2	->
water	43:7	0:0	2	canvas
op	43:14	0:0	2	=
call	43:16	43:68	2	caca_create_canvas
arg	43:35	43:50	3	c->window_width
water	43:35	0:0	4	c
op	43:36	0:0	4	->
water	43:38	0:0	4	window_width
arg	43:52	43:68	3	c->window_height
water	43:52	0:0	4	c
op	43:53	0:0	4	->
water	43:55	0:0	4	window_height
water	43:69	0:0	2	;
if	44:4	48:4	2	(! c -> canvas)
cond	44:8	44:12	3	! c -> canvas
op	44:8	0:0	4	!
water	44:9	0:0	4	c
op	44:10	0:0	4	->
water	44:12	0:0	4	canvas
stmts	44:20	48:4	3	
water	44:20	0:0	4	{
water	45:8	0:0	4	ret
op	45:12	0:0	4	=
call	45:14	45:27	4	AVERROR
arg	45:22	45:27	5	errno
water	45:22	0:0	6	errno
water	45:28	0:0	4	;
call	46:8	46:59	4	av_log
arg	46:15	46:16	5	s
water	46:15	0:0	6	s
arg	46:18	46:30	5	AV_LOG_ERROR
water	46:18	0:0	6	AV_LOG_ERROR
arg	46:32	46:59	5	"Failed to create canvas\n"
water	46:32	0:0	6	"Failed to create canvas\n"
water	46:60	0:0	4	;
goto	47:8	47:17	4	fail
water	47:13	0:0	5	fail
water	48:4	0:0	4	}
water	49:4	0:0	2	bpp
op	49:8	0:0	2	=
call	49:10	49:68	2	av_get_bits_per_pixel
arg	49:32	49:68	3	av_pix_fmt_desc_get(encctx->pix_fmt)
call	49:32	49:67	4	av_pix_fmt_desc_get
arg	49:52	49:67	5	encctx->pix_fmt
water	49:52	0:0	6	encctx
op	49:58	0:0	6	->
water	49:60	0:0	6	pix_fmt
water	49:69	0:0	2	;
water	50:4	0:0	2	c
op	50:5	0:0	2	->
water	50:7	0:0	2	dither
op	50:14	0:0	2	=
call	50:16	52:66	2	caca_create_dither
arg	50:35	50:38	3	bpp
water	50:35	0:0	4	bpp
arg	50:40	50:53	3	encctx->width
water	50:40	0:0	4	encctx
op	50:46	0:0	4	->
water	50:48	0:0	4	width
arg	50:55	50:69	3	encctx->height
water	50:55	0:0	4	encctx
op	50:61	0:0	4	->
water	50:63	0:0	4	height
arg	51:35	51:58	3	bpp/8*encctx->width
water	51:35	0:0	4	bpp
op	51:39	0:0	4	/
water	51:41	0:0	4	8
op	51:43	0:0	4	*
water	51:45	0:0	4	encctx
op	51:51	0:0	4	->
water	51:53	0:0	4	width
arg	52:35	52:43	3	0x0000ff
water	52:35	0:0	4	0
water	52:36	0:0	4	x0000ff
arg	52:45	52:53	3	0x00ff00
water	52:45	0:0	4	0
water	52:46	0:0	4	x00ff00
arg	52:55	52:63	3	0xff0000
water	52:55	0:0	4	0
water	52:56	0:0	4	xff0000
arg	52:65	52:66	3	0
water	52:65	0:0	4	0
water	52:67	0:0	2	;
if	53:4	57:4	2	(! c -> dither)
cond	53:8	53:12	3	! c -> dither
op	53:8	0:0	4	!
water	53:9	0:0	4	c
op	53:10	0:0	4	->
water	53:12	0:0	4	dither
stmts	53:20	57:4	3	
water	53:20	0:0	4	{
water	54:8	0:0	4	ret
op	54:12	0:0	4	=
call	54:15	54:28	4	AVERROR
arg	54:23	54:28	5	errno
water	54:23	0:0	6	errno
water	54:29	0:0	4	;
call	55:8	55:59	4	av_log
arg	55:15	55:16	5	s
water	55:15	0:0	6	s
arg	55:18	55:30	5	AV_LOG_ERROR
water	55:18	0:0	6	AV_LOG_ERROR
arg	55:32	55:59	5	"Failed to create dither\n"
water	55:32	0:0	6	"Failed to create dither\n"
water	55:60	0:0	4	;
goto	56:8	56:17	4	fail
water	56:13	0:0	5	fail
water	57:4	0:0	4	}
water	59:4	0:0	2	if
water	59:7	0:0	2	(
water	59:8	0:0	2	caca_set_dither_
water	60:8	0:0	2	ret
op	60:12	0:0	2	=
call	60:14	60:27	2	AVERROR
arg	60:22	60:27	3	errno
water	60:22	0:0	4	errno
water	60:28	0:0	2	;
water	61:8	0:0	2	av_log
water	61:14	0:0	2	(
water	61:15	0:0	2	s
water	61:16	0:0	2	,
water	61:18	0:0	2	AV_LOG_ERROR
water	61:30	0:0	2	,
water	61:32	0:0	2	"Failed to set value '%s' for option '%s'\n"
water	61:76	0:0	2	,
water	62:15	0:0	2	c
op	62:16	0:0	2	->
water	62:18	0:0	2	opt
water	62:21	0:0	2	,
water	63:8	0:0	2	goto
water	63:13	0:0	2	fail
water	63:17	0:0	2	;

func	2:15	13:0	0	int	init
params	2:23	0:0	1	
param	2:24	2:44	2	AVFilterContext *	ctx
stmnts	0:0	12:12	1	
decl	4:4	4:33	2	ELBGContext	*elbg
op	4:22	0:0	2	=
water	4:24	0:0	2	ctx
op	4:27	0:0	2	->
water	4:29	0:0	2	priv
if	5:4	8:4	2	(elbg -> pal8 && elbg -> codebook_length > 256)
cond	5:8	5:46	3	elbg -> pal8 && elbg -> codebook_length > 256
water	5:8	0:0	4	elbg
op	5:12	0:0	4	->
water	5:14	0:0	4	pal8
op	5:19	0:0	4	&&
water	5:22	0:0	4	elbg
op	5:26	0:0	4	->
water	5:28	0:0	4	codebook_length
op	5:44	0:0	4	>
water	5:46	0:0	4	256
stmts	5:51	8:4	3	
water	5:51	0:0	4	{
call	6:8	6:81	4	av_log
arg	6:15	6:18	5	ctx
water	6:15	0:0	6	ctx
arg	6:20	6:32	5	AV_LOG_ERROR
water	6:20	0:0	6	AV_LOG_ERROR
arg	6:34	6:81	5	"pal8 output allows max 256 codebook length.\n"
water	6:34	0:0	6	"pal8 output allows max 256 codebook length.\n"
water	6:82	0:0	4	;
return	7:8	7:30	4	AVERROR(EINVAL)
call	7:15	7:29	5	AVERROR
arg	7:23	7:29	6	EINVAL
water	7:23	0:0	7	EINVAL
water	8:4	0:0	4	}
if	9:4	10:45	2	(elbg -> lfg_seed == - 1)
cond	9:8	9:27	3	elbg -> lfg_seed == - 1
water	9:8	0:0	4	elbg
op	9:12	0:0	4	->
water	9:14	0:0	4	lfg_seed
op	9:23	0:0	4	==
op	9:26	0:0	4	-
water	9:27	0:0	4	1
stmts	10:8	10:45	3	
water	10:8	0:0	4	elbg
op	10:12	0:0	4	->
water	10:14	0:0	4	lfg_seed
op	10:23	0:0	4	=
call	10:25	10:44	4	av_get_random_seed
water	10:45	0:0	4	;
call	11:4	11:42	2	av_lfg_init
arg	11:16	11:26	3	&elbg->lfg
op	11:16	0:0	4	&
water	11:17	0:0	4	elbg
op	11:21	0:0	4	->
water	11:23	0:0	4	lfg
arg	11:28	11:42	3	elbg->lfg_seed
water	11:28	0:0	4	elbg
op	11:32	0:0	4	->
water	11:34	0:0	4	lfg_seed
water	11:43	0:0	2	;
return	12:4	12:12	2	0
water	12:11	0:0	3	0

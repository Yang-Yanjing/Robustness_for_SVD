func	1:0	11:0	0	void	av_hash_final_b64
params	1:22	0:0	1	
param	1:23	1:48	2	struct AVHashContext *	ctx
param	1:50	1:62	2	uint8_t *	dst
param	1:64	1:72	2	int	size
stmnts	0:0	10:25	1	
decl	3:4	3:72	2	uint8_t	buf[AV_HASH_MAX_SIZE]
water	3:33	0:0	2	,
decl	3:4	3:72	2	uint8_t	b64[AV_BASE64_SIZE(AV_HASH_MAX_SIZE)]
water	4:4	0:0	2	unsigned
water	4:13	0:0	2	rsize
op	4:19	0:0	2	=
call	4:21	4:41	2	av_hash_get_size
arg	4:38	4:41	3	ctx
water	4:38	0:0	4	ctx
water	4:42	0:0	2	,
water	4:44	0:0	2	osize
water	4:49	0:0	2	;
call	5:4	5:26	2	av_hash_final
arg	5:18	5:21	3	ctx
water	5:18	0:0	4	ctx
arg	5:23	5:26	3	buf
water	5:23	0:0	4	buf
water	5:27	0:0	2	;
call	6:4	6:49	2	av_base64_encode
arg	6:21	6:24	3	b64
water	6:21	0:0	4	b64
arg	6:26	6:37	3	sizeof(b64)
op	6:26	0:0	4	sizeof
water	6:32	0:0	4	(
water	6:33	0:0	4	b64
water	6:36	0:0	4	)
arg	6:39	6:42	3	buf
water	6:39	0:0	4	buf
arg	6:44	6:49	3	rsize
water	6:44	0:0	4	rsize
water	6:50	0:0	2	;
water	7:4	0:0	2	osize
op	7:10	0:0	2	=
call	7:12	7:32	2	AV_BASE64_SIZE
arg	7:27	7:32	3	rsize
water	7:27	0:0	4	rsize
water	7:33	0:0	2	;
call	8:4	8:39	2	memcpy
arg	8:11	8:14	3	dst
water	8:11	0:0	4	dst
arg	8:16	8:19	3	b64
water	8:16	0:0	4	b64
arg	8:21	8:39	3	FFMIN(osize,size)
call	8:21	8:38	4	FFMIN
arg	8:27	8:32	5	osize
water	8:27	0:0	6	osize
arg	8:34	8:38	5	size
water	8:34	0:0	6	size
water	8:40	0:0	2	;
if	9:4	10:25	2	(size < osize)
cond	9:8	9:15	3	size < osize
water	9:8	0:0	4	size
op	9:13	0:0	4	<
water	9:15	0:0	4	osize
stmts	10:8	10:25	3	
water	10:8	0:0	4	dst
op	10:11	0:0	4	[
water	10:12	0:0	4	size
op	10:17	0:0	4	-
water	10:19	0:0	4	1
op	10:20	0:0	4	]
op	10:22	0:0	4	=
water	10:24	0:0	4	0
water	10:25	0:0	4	;

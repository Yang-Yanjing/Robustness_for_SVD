func	1:15	12:0	0	int	init
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
stmnts	0:0	11:12	1	
decl	3:4	3:33	2	GradFunContext	*s
op	3:22	0:0	2	=
water	3:24	0:0	2	ctx
op	3:27	0:0	2	->
water	3:29	0:0	2	priv
water	4:4	0:0	2	s
op	4:5	0:0	2	->
water	4:7	0:0	2	thresh
op	4:15	0:0	2	=
water	4:17	0:0	2	(
water	4:18	0:0	2	1
op	4:20	0:0	2	<<
water	4:23	0:0	2	15
water	4:25	0:0	2	)
op	4:27	0:0	2	/
water	4:29	0:0	2	s
op	4:30	0:0	2	->
water	4:32	0:0	2	strength
water	4:40	0:0	2	;
water	5:4	0:0	2	s
op	5:5	0:0	2	->
water	5:7	0:0	2	radius
op	5:15	0:0	2	=
call	5:17	5:52	2	av_clip
arg	5:25	5:45	3	(s->radius+1)&~1
water	5:25	0:0	4	(
water	5:26	0:0	4	s
op	5:27	0:0	4	->
water	5:29	0:0	4	radius
op	5:36	0:0	4	+
water	5:38	0:0	4	1
water	5:39	0:0	4	)
op	5:41	0:0	4	&
water	5:43	0:0	4	~1
arg	5:47	5:48	3	4
water	5:47	0:0	4	4
arg	5:50	5:52	3	32
water	5:50	0:0	4	32
water	5:53	0:0	2	;
water	6:4	0:0	2	s
op	6:5	0:0	2	->
water	6:7	0:0	2	blur_line
op	6:19	0:0	2	=
water	6:21	0:0	2	ff_gradfun_blur_line_c
water	6:43	0:0	2	;
water	7:4	0:0	2	s
op	7:5	0:0	2	->
water	7:7	0:0	2	filter_line
op	7:19	0:0	2	=
water	7:21	0:0	2	ff_gradfun_filter_line_c
water	7:45	0:0	2	;
if	8:4	9:30	2	(ARCH_X86)
cond	8:8	8:8	3	ARCH_X86
water	8:8	0:0	4	ARCH_X86
stmts	9:8	9:30	3	
call	9:8	9:29	4	ff_gradfun_init_x86
arg	9:28	9:29	5	s
water	9:28	0:0	6	s
water	9:30	0:0	4	;
call	10:4	10:84	2	av_log
arg	10:11	10:14	3	ctx
water	10:11	0:0	4	ctx
arg	10:16	10:30	3	AV_LOG_VERBOSE
water	10:16	0:0	4	AV_LOG_VERBOSE
arg	10:32	10:60	3	"threshold:%.2f radius:%d\n"
water	10:32	0:0	4	"threshold:%.2f radius:%d\n"
arg	10:62	10:73	3	s->strength
water	10:62	0:0	4	s
op	10:63	0:0	4	->
water	10:65	0:0	4	strength
arg	10:75	10:84	3	s->radius
water	10:75	0:0	4	s
op	10:76	0:0	4	->
water	10:78	0:0	4	radius
water	10:85	0:0	2	;
return	11:4	11:12	2	0
water	11:11	0:0	3	0

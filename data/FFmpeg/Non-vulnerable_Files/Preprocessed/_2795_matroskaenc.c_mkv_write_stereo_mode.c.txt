func	1:0	88:0	0	static int	mkv_write_stereo_mode
params	1:32	0:0	1	
param	1:33	1:51	2	AVFormatContext *	s
param	1:53	1:68	2	AVIOContext *	pb
param	2:33	2:45	2	AVStream *	st
param	2:47	2:55	2	int	mode
param	2:57	2:69	2	int *	h_width
param	2:71	2:84	2	int *	h_height
stmnts	0:0	87:14	1	
decl	4:4	4:9	2	int	i
decl	5:4	5:15	2	int	ret
op	5:12	0:0	2	=
water	5:14	0:0	2	0
decl	6:4	6:26	2	AVDictionaryEntry	*tag
decl	7:4	7:74	2	MatroskaVideoStereoModeType	format
op	7:39	0:0	2	=
water	7:41	0:0	2	MATROSKA_VIDEO_STEREOMODE_TYPE_NB
op	8:4	0:0	2	*
water	8:5	0:0	2	h_width
op	8:13	0:0	2	=
water	8:15	0:0	2	1
water	8:16	0:0	2	;
op	9:4	0:0	2	*
water	9:5	0:0	2	h_height
op	9:14	0:0	2	=
water	9:16	0:0	2	1
water	9:17	0:0	2	;
if	11:4	25:4	2	(( tag =av_dict_get (st -> metadata ,"stereo_mode" ,NULL ,0 ) ) || ( tag =av_dict_get (s -> metadata ,"stereo_mode" ,NULL ,0 ) ))
cond	11:8	12:64	3	( tag =av_dict_get (st -> metadata ,"stereo_mode" ,NULL ,0 ) ) || ( tag =av_dict_get (s -> metadata ,"stereo_mode" ,NULL ,0 ) )
water	11:8	0:0	4	(
water	11:9	0:0	4	tag
op	11:13	0:0	4	=
call	11:15	11:63	4	av_dict_get
arg	11:27	11:39	5	st->metadata
water	11:27	0:0	6	st
op	11:29	0:0	6	->
water	11:31	0:0	6	metadata
arg	11:41	11:54	5	"stereo_mode"
water	11:41	0:0	6	"stereo_mode"
arg	11:56	11:60	5	NULL
water	11:56	0:0	6	NULL
arg	11:62	11:63	5	0
water	11:62	0:0	6	0
water	11:64	0:0	4	)
op	11:66	0:0	4	||
water	12:8	0:0	4	(
water	12:9	0:0	4	tag
op	12:13	0:0	4	=
call	12:15	12:63	4	av_dict_get
arg	12:28	12:39	5	s->metadata
water	12:28	0:0	6	s
op	12:29	0:0	6	->
water	12:31	0:0	6	metadata
arg	12:41	12:54	5	"stereo_mode"
water	12:41	0:0	6	"stereo_mode"
arg	12:56	12:60	5	NULL
water	12:56	0:0	6	NULL
arg	12:62	12:63	5	0
water	12:62	0:0	6	0
water	12:64	0:0	4	)
stmts	12:67	25:4	3	
water	12:67	0:0	4	{
decl	13:8	13:42	4	int	stereo_mode
op	13:24	0:0	4	=
call	13:26	13:41	5	atoi
arg	13:31	13:41	6	tag->value
water	13:31	0:0	7	tag
op	13:34	0:0	7	->
water	13:36	0:0	7	value
for	14:8	18:12	4	(i = 0 ;i < MATROSKA_VIDEO_STEREOMODE_TYPE_NB;i ++)
forinit	14:13	14:16	5	i = 0 ;
water	14:13	0:0	6	i
op	14:14	0:0	6	=
water	14:15	0:0	6	0
water	14:16	0:0	6	;
cond	14:18	14:20	5	i < MATROSKA_VIDEO_STEREOMODE_TYPE_NB
water	14:18	0:0	6	i
op	14:19	0:0	6	<
water	14:20	0:0	6	MATROSKA_VIDEO_STEREOMODE_TYPE_NB
forexpr	14:55	14:56	5	i ++
water	14:55	0:0	6	i
op	14:56	0:0	6	++
stmts	15:12	18:12	5	
if	15:12	18:12	6	(!strcmp (tag -> value ,ff_matroska_video_stereo_mode [ i ] ))
cond	15:16	15:68	7	!strcmp (tag -> value ,ff_matroska_video_stereo_mode [ i ] )
op	15:16	0:0	8	!
call	15:17	15:68	8	strcmp
arg	15:24	15:34	9	tag->value
water	15:24	0:0	10	tag
op	15:27	0:0	10	->
water	15:29	0:0	10	value
arg	15:36	15:68	9	ff_matroska_video_stereo_mode[i]
water	15:36	0:0	10	ff_matroska_video_stereo_mode
op	15:65	0:0	10	[
water	15:66	0:0	10	i
op	15:67	0:0	10	]
stmts	15:70	18:12	7	
water	15:70	0:0	8	{
water	16:16	0:0	8	stereo_mode
op	16:28	0:0	8	=
water	16:30	0:0	8	i
water	16:31	0:0	8	;
break	17:16	17:21	8	
water	18:12	0:0	8	}
if	19:8	24:8	4	(stereo_mode < MATROSKA_VIDEO_STEREOMODE_TYPE_NB && stereo_mode != 10 && stereo_mode != 12)
cond	19:12	20:48	5	stereo_mode < MATROSKA_VIDEO_STEREOMODE_TYPE_NB && stereo_mode != 10 && stereo_mode != 12
water	19:12	0:0	6	stereo_mode
op	19:24	0:0	6	<
water	19:26	0:0	6	MATROSKA_VIDEO_STEREOMODE_TYPE_NB
op	19:60	0:0	6	&&
water	20:12	0:0	6	stereo_mode
op	20:24	0:0	6	!=
water	20:27	0:0	6	10
op	20:30	0:0	6	&&
water	20:33	0:0	6	stereo_mode
op	20:45	0:0	6	!=
water	20:48	0:0	6	12
stmts	20:52	24:8	5	
water	20:52	0:0	6	{
decl	21:12	21:59	6	int	ret
op	21:20	0:0	6	=
call	21:22	21:58	7	ff_mkv_stereo3d_conv
arg	21:43	21:45	8	st
water	21:43	0:0	9	st
arg	21:47	21:58	8	stereo_mode
water	21:47	0:0	9	stereo_mode
if	22:12	23:26	6	(ret < 0)
cond	22:16	22:22	7	ret < 0
water	22:16	0:0	8	ret
op	22:20	0:0	8	<
water	22:22	0:0	8	0
stmts	23:16	23:26	7	
return	23:16	23:26	8	ret
water	23:23	0:0	9	ret
water	24:8	0:0	6	}
water	25:4	0:0	4	}
for	27:4	72:4	2	(i = 0 ;i < st -> nb_side_data;i ++)
forinit	27:9	27:14	3	i = 0 ;
water	27:9	0:0	4	i
op	27:11	0:0	4	=
water	27:13	0:0	4	0
water	27:14	0:0	4	;
cond	27:16	27:24	3	i < st -> nb_side_data
water	27:16	0:0	4	i
op	27:18	0:0	4	<
water	27:20	0:0	4	st
op	27:22	0:0	4	->
water	27:24	0:0	4	nb_side_data
forexpr	27:38	27:39	3	i ++
water	27:38	0:0	4	i
op	27:39	0:0	4	++
stmts	27:43	72:4	3	
water	27:43	0:0	4	{
decl	28:8	28:46	4	AVPacketSideData	sd
op	28:28	0:0	4	=
water	28:30	0:0	4	st
op	28:32	0:0	4	->
water	28:34	0:0	4	side_data
op	28:43	0:0	4	[
water	28:44	0:0	4	i
op	28:45	0:0	4	]
if	29:8	71:8	4	(sd . type == AV_PKT_DATA_STEREO3D)
cond	29:12	29:23	5	sd . type == AV_PKT_DATA_STEREO3D
water	29:12	0:0	6	sd
op	29:14	0:0	6	.
water	29:15	0:0	6	type
op	29:20	0:0	6	==
water	29:23	0:0	6	AV_PKT_DATA_STEREO3D
stmts	29:45	71:8	5	
water	29:45	0:0	6	{
decl	30:12	30:54	6	AVStereo3D	*stereo
op	30:31	0:0	6	=
water	30:33	0:0	6	(
water	30:34	0:0	6	AVStereo3D
op	30:45	0:0	6	*
water	30:46	0:0	6	)
water	30:47	0:0	6	sd
op	30:49	0:0	6	.
water	30:50	0:0	6	data
switch	31:12	69:12	6	(stereo -> type)
cond	31:20	31:28	7	stereo -> type
water	31:20	0:0	8	stereo
op	31:26	0:0	8	->
water	31:28	0:0	8	type
stmts	31:34	69:12	7	
water	31:34	0:0	8	{
label	32:12	32:31	8	case AV_STEREO3D_2D :
water	33:16	0:0	8	format
op	33:23	0:0	8	=
water	33:25	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_MONO
water	33:60	0:0	8	;
break	34:16	34:21	8	
label	35:12	35:39	8	case AV_STEREO3D_SIDEBYSIDE :
water	36:16	0:0	8	format
op	36:23	0:0	8	=
water	36:25	0:0	8	(
water	36:26	0:0	8	stereo
op	36:32	0:0	8	->
water	36:34	0:0	8	flags
op	36:40	0:0	8	&
water	36:42	0:0	8	AV_STEREO3D_FLAG_INVERT
water	36:65	0:0	8	)
water	37:20	0:0	8	?
water	37:22	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT
water	38:20	0:0	8	:
water	38:22	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_LEFT_RIGHT
water	38:63	0:0	8	;
op	39:16	0:0	8	*
water	39:17	0:0	8	h_width
op	39:25	0:0	8	=
water	39:27	0:0	8	2
water	39:28	0:0	8	;
break	40:16	40:21	8	
label	41:12	41:38	8	case AV_STEREO3D_TOPBOTTOM :
water	42:16	0:0	8	format
op	42:23	0:0	8	=
water	42:25	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM
water	42:66	0:0	8	;
if	43:16	44:28	8	(stereo -> flags & AV_STEREO3D_FLAG_INVERT)
cond	43:20	43:36	9	stereo -> flags & AV_STEREO3D_FLAG_INVERT
water	43:20	0:0	10	stereo
op	43:26	0:0	10	->
water	43:28	0:0	10	flags
op	43:34	0:0	10	&
water	43:36	0:0	10	AV_STEREO3D_FLAG_INVERT
stmts	44:20	44:28	9	
water	44:20	0:0	10	format
op	44:26	0:0	10	--
water	44:28	0:0	10	;
op	45:16	0:0	8	*
water	45:17	0:0	8	h_height
op	45:26	0:0	8	=
water	45:28	0:0	8	2
water	45:29	0:0	8	;
break	46:16	46:21	8	
label	47:12	47:41	8	case AV_STEREO3D_CHECKERBOARD :
water	48:16	0:0	8	format
op	48:23	0:0	8	=
water	48:25	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_LR
water	48:71	0:0	8	;
if	49:16	50:28	8	(stereo -> flags & AV_STEREO3D_FLAG_INVERT)
cond	49:20	49:36	9	stereo -> flags & AV_STEREO3D_FLAG_INVERT
water	49:20	0:0	10	stereo
op	49:26	0:0	10	->
water	49:28	0:0	10	flags
op	49:34	0:0	10	&
water	49:36	0:0	10	AV_STEREO3D_FLAG_INVERT
stmts	50:20	50:28	9	
water	50:20	0:0	10	format
op	50:26	0:0	10	--
water	50:28	0:0	10	;
break	51:16	51:21	8	
label	52:12	52:34	8	case AV_STEREO3D_LINES :
water	53:16	0:0	8	format
op	53:23	0:0	8	=
water	53:25	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_LR
water	53:74	0:0	8	;
if	54:16	55:28	8	(stereo -> flags & AV_STEREO3D_FLAG_INVERT)
cond	54:20	54:36	9	stereo -> flags & AV_STEREO3D_FLAG_INVERT
water	54:20	0:0	10	stereo
op	54:26	0:0	10	->
water	54:28	0:0	10	flags
op	54:34	0:0	10	&
water	54:36	0:0	10	AV_STEREO3D_FLAG_INVERT
stmts	55:20	55:28	9	
water	55:20	0:0	10	format
op	55:26	0:0	10	--
water	55:28	0:0	10	;
op	56:16	0:0	8	*
water	56:17	0:0	8	h_height
op	56:26	0:0	8	=
water	56:28	0:0	8	2
water	56:29	0:0	8	;
break	57:16	57:21	8	
label	58:12	58:36	8	case AV_STEREO3D_COLUMNS :
water	59:16	0:0	8	format
op	59:23	0:0	8	=
water	59:25	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_LR
water	59:74	0:0	8	;
if	60:16	61:28	8	(stereo -> flags & AV_STEREO3D_FLAG_INVERT)
cond	60:20	60:36	9	stereo -> flags & AV_STEREO3D_FLAG_INVERT
water	60:20	0:0	10	stereo
op	60:26	0:0	10	->
water	60:28	0:0	10	flags
op	60:34	0:0	10	&
water	60:36	0:0	10	AV_STEREO3D_FLAG_INVERT
stmts	61:20	61:28	9	
water	61:20	0:0	10	format
op	61:26	0:0	10	--
water	61:28	0:0	10	;
op	62:16	0:0	8	*
water	62:17	0:0	8	h_width
op	62:25	0:0	8	=
water	62:27	0:0	8	2
water	62:28	0:0	8	;
break	63:16	63:21	8	
label	64:12	64:42	8	case AV_STEREO3D_FRAMESEQUENCE :
water	65:16	0:0	8	format
op	65:23	0:0	8	=
water	65:25	0:0	8	MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_LR
water	65:74	0:0	8	;
if	66:16	67:28	8	(stereo -> flags & AV_STEREO3D_FLAG_INVERT)
cond	66:20	66:36	9	stereo -> flags & AV_STEREO3D_FLAG_INVERT
water	66:20	0:0	10	stereo
op	66:26	0:0	10	->
water	66:28	0:0	10	flags
op	66:34	0:0	10	&
water	66:36	0:0	10	AV_STEREO3D_FLAG_INVERT
stmts	67:20	67:28	9	
water	67:20	0:0	10	format
op	67:26	0:0	10	++
water	67:28	0:0	10	;
break	68:16	68:21	8	
water	69:12	0:0	8	}
break	70:12	70:17	6	
water	71:8	0:0	6	}
water	72:4	0:0	4	}
if	73:4	74:18	2	(format == MATROSKA_VIDEO_STEREOMODE_TYPE_NB)
cond	73:8	73:18	3	format == MATROSKA_VIDEO_STEREOMODE_TYPE_NB
water	73:8	0:0	4	format
op	73:15	0:0	4	==
water	73:18	0:0	4	MATROSKA_VIDEO_STEREOMODE_TYPE_NB
stmts	74:8	74:18	3	
return	74:8	74:18	4	ret
water	74:15	0:0	5	ret
if	76:4	84:4	2	(( mode == MODE_WEBM && format > MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM && format != MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT ) || format >= MATROSKA_VIDEO_STEREOMODE_TYPE_NB)
cond	76:8	79:21	3	( mode == MODE_WEBM && format > MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM && format != MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT ) || format >= MATROSKA_VIDEO_STEREOMODE_TYPE_NB
water	76:8	0:0	4	(
water	76:9	0:0	4	mode
op	76:14	0:0	4	==
water	76:17	0:0	4	MODE_WEBM
op	76:27	0:0	4	&&
water	77:8	0:0	4	format
op	77:15	0:0	4	>
water	77:17	0:0	4	MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM
op	77:59	0:0	4	&&
water	78:8	0:0	4	format
op	78:15	0:0	4	!=
water	78:18	0:0	4	MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT
water	78:59	0:0	4	)
op	79:8	0:0	4	||
water	79:11	0:0	4	format
op	79:18	0:0	4	>=
water	79:21	0:0	4	MATROSKA_VIDEO_STEREOMODE_TYPE_NB
stmts	79:56	84:4	3	
water	79:56	0:0	4	{
call	80:8	81:58	4	av_log
arg	80:15	80:16	5	s
water	80:15	0:0	6	s
arg	80:18	80:30	5	AV_LOG_ERROR
water	80:18	0:0	6	AV_LOG_ERROR
arg	81:15	81:58	5	"The specified stereo mode is not valid.\n"
water	81:15	0:0	6	"The specified stereo mode is not valid.\n"
water	81:59	0:0	4	;
water	82:8	0:0	4	format
op	82:15	0:0	4	=
water	82:17	0:0	4	MATROSKA_VIDEO_STEREOMODE_TYPE_NB
water	82:50	0:0	4	;
return	83:8	83:30	4	AVERROR(EINVAL)
call	83:15	83:29	5	AVERROR
arg	83:23	83:29	6	EINVAL
water	83:23	0:0	7	EINVAL
water	84:4	0:0	4	}
call	86:4	86:57	2	put_ebml_uint
arg	86:18	86:20	3	pb
water	86:18	0:0	4	pb
arg	86:22	86:49	3	MATROSKA_ID_VIDEOSTEREOMODE
water	86:22	0:0	4	MATROSKA_ID_VIDEOSTEREOMODE
arg	86:51	86:57	3	format
water	86:51	0:0	4	format
water	86:58	0:0	2	;
return	87:4	87:14	2	ret
water	87:11	0:0	3	ret

func	1:0	28:0	0	static int	filter_slice
params	1:23	0:0	1	
param	1:24	1:44	2	AVFilterContext *	ctx
param	1:46	1:55	2	void *	arg
param	1:57	1:66	2	int	jobnr
param	1:68	1:79	2	int	nb_jobs
stmnts	0:0	27:12	1	
decl	3:4	3:34	2	Stereo3DContext	*s
op	3:23	0:0	2	=
water	3:25	0:0	2	ctx
op	3:28	0:0	2	->
water	3:30	0:0	2	priv
decl	4:4	4:24	2	ThreadData	*td
op	4:19	0:0	2	=
water	4:21	0:0	2	arg
decl	5:4	5:30	2	AVFrame	*ileft
op	5:19	0:0	2	=
water	5:21	0:0	2	td
op	5:23	0:0	2	->
water	5:25	0:0	2	ileft
decl	6:4	6:32	2	AVFrame	*iright
op	6:20	0:0	2	=
water	6:22	0:0	2	td
op	6:24	0:0	2	->
water	6:26	0:0	2	iright
decl	7:4	7:26	2	AVFrame	*out
op	7:17	0:0	2	=
water	7:19	0:0	2	td
op	7:21	0:0	2	->
water	7:23	0:0	2	out
decl	8:4	8:30	2	int	height
op	8:15	0:0	2	=
water	8:17	0:0	2	s
op	8:18	0:0	2	->
water	8:20	0:0	2	out
op	8:23	0:0	2	.
water	8:24	0:0	2	height
decl	9:4	9:46	2	int	start
op	9:14	0:0	2	=
water	9:16	0:0	2	(
water	9:17	0:0	2	height
op	9:24	0:0	2	*
water	9:27	0:0	2	jobnr
water	9:35	0:0	2	)
op	9:37	0:0	2	/
water	9:39	0:0	2	nb_jobs
decl	10:4	10:46	2	int	end
op	10:14	0:0	2	=
water	10:16	0:0	2	(
water	10:17	0:0	2	height
op	10:24	0:0	2	*
water	10:26	0:0	2	(
water	10:27	0:0	2	jobnr
op	10:32	0:0	2	+
water	10:33	0:0	2	1
water	10:34	0:0	2	)
water	10:35	0:0	2	)
op	10:37	0:0	2	/
water	10:39	0:0	2	nb_jobs
decl	11:4	11:31	2	uint8_t	*dst
op	11:17	0:0	2	=
water	11:19	0:0	2	out
op	11:22	0:0	2	->
water	11:24	0:0	2	data
op	11:28	0:0	2	[
water	11:29	0:0	2	0
op	11:30	0:0	2	]
decl	12:4	12:42	2	const int	**ana_matrix
op	12:27	0:0	2	=
water	12:29	0:0	2	s
op	12:30	0:0	2	->
water	12:32	0:0	2	ana_matrix
decl	13:4	13:23	2	int	x
water	13:9	0:0	2	,
decl	13:4	13:23	2	int	y
water	13:12	0:0	2	,
decl	13:4	13:23	2	int	il
water	13:16	0:0	2	,
decl	13:4	13:23	2	int	ir
water	13:20	0:0	2	,
decl	13:4	13:23	2	int	o
decl	14:4	14:40	2	const uint8_t	*lsrc
op	14:24	0:0	2	=
water	14:26	0:0	2	ileft
op	14:31	0:0	2	->
water	14:33	0:0	2	data
op	14:37	0:0	2	[
water	14:38	0:0	2	0
op	14:39	0:0	2	]
decl	15:4	15:41	2	const uint8_t	*rsrc
op	15:24	0:0	2	=
water	15:26	0:0	2	iright
op	15:32	0:0	2	->
water	15:34	0:0	2	data
op	15:38	0:0	2	[
water	15:39	0:0	2	0
op	15:40	0:0	2	]
decl	16:4	16:32	2	int	out_width
op	16:18	0:0	2	=
water	16:20	0:0	2	s
op	16:21	0:0	2	->
water	16:23	0:0	2	out
op	16:26	0:0	2	.
water	16:27	0:0	2	width
for	17:4	26:4	2	(y = start ;y < end;y ++)
forinit	17:9	17:18	3	y = start ;
water	17:9	0:0	4	y
op	17:11	0:0	4	=
water	17:13	0:0	4	start
water	17:18	0:0	4	;
cond	17:20	17:24	3	y < end
water	17:20	0:0	4	y
op	17:22	0:0	4	<
water	17:24	0:0	4	end
forexpr	17:29	17:30	3	y ++
water	17:29	0:0	4	y
op	17:30	0:0	4	++
stmts	17:34	26:4	3	
water	17:34	0:0	4	{
water	18:8	0:0	4	o
op	18:12	0:0	4	=
water	18:14	0:0	4	out
op	18:17	0:0	4	->
water	18:19	0:0	4	linesize
op	18:27	0:0	4	[
water	18:28	0:0	4	0
op	18:29	0:0	4	]
op	18:31	0:0	4	*
water	18:33	0:0	4	y
water	18:34	0:0	4	;
water	19:8	0:0	4	il
op	19:12	0:0	4	=
water	19:14	0:0	4	s
op	19:15	0:0	4	->
water	19:17	0:0	4	in_off_left
op	19:28	0:0	4	[
water	19:29	0:0	4	0
op	19:30	0:0	4	]
op	19:33	0:0	4	+
water	19:35	0:0	4	y
op	19:37	0:0	4	*
water	19:39	0:0	4	ileft
op	19:44	0:0	4	->
water	19:46	0:0	4	linesize
op	19:54	0:0	4	[
water	19:55	0:0	4	0
op	19:56	0:0	4	]
water	19:57	0:0	4	;
water	20:8	0:0	4	ir
op	20:12	0:0	4	=
water	20:14	0:0	4	s
op	20:15	0:0	4	->
water	20:17	0:0	4	in_off_right
op	20:29	0:0	4	[
water	20:30	0:0	4	0
op	20:31	0:0	4	]
op	20:33	0:0	4	+
water	20:35	0:0	4	y
op	20:37	0:0	4	*
water	20:39	0:0	4	iright
op	20:45	0:0	4	->
water	20:47	0:0	4	linesize
op	20:55	0:0	4	[
water	20:56	0:0	4	0
op	20:57	0:0	4	]
water	20:58	0:0	4	;
for	21:8	25:8	4	(x = 0 ;x < out_width;x ++ , il += 3 , ir += 3 , o += 3)
forinit	21:13	21:18	5	x = 0 ;
water	21:13	0:0	6	x
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:24	5	x < out_width
water	21:20	0:0	6	x
op	21:22	0:0	6	<
water	21:24	0:0	6	out_width
forexpr	21:35	21:62	5	x ++ , il += 3 , ir += 3 , o += 3
water	21:35	0:0	6	x
op	21:36	0:0	6	++
water	21:38	0:0	6	,
water	21:40	0:0	6	il
op	21:43	0:0	6	+=
water	21:46	0:0	6	3
water	21:47	0:0	6	,
water	21:49	0:0	6	ir
op	21:52	0:0	6	+=
water	21:55	0:0	6	3
water	21:56	0:0	6	,
water	21:58	0:0	6	o
op	21:59	0:0	6	+=
water	21:62	0:0	6	3
stmts	21:65	25:8	5	
water	21:65	0:0	6	{
water	22:12	0:0	6	dst
op	22:15	0:0	6	[
water	22:16	0:0	6	o
op	22:21	0:0	6	]
op	22:23	0:0	6	=
call	22:25	22:72	6	ana_convert
arg	22:37	22:50	7	ana_matrix[0]
water	22:37	0:0	8	ana_matrix
op	22:47	0:0	8	[
water	22:48	0:0	8	0
op	22:49	0:0	8	]
arg	22:52	22:61	7	lsrc+il
water	22:52	0:0	8	lsrc
op	22:57	0:0	8	+
water	22:59	0:0	8	il
arg	22:63	22:72	7	rsrc+ir
water	22:63	0:0	8	rsrc
op	22:68	0:0	8	+
water	22:70	0:0	8	ir
water	22:73	0:0	6	;
water	23:12	0:0	6	dst
op	23:15	0:0	6	[
water	23:16	0:0	6	o
op	23:18	0:0	6	+
water	23:20	0:0	6	1
op	23:21	0:0	6	]
op	23:23	0:0	6	=
call	23:25	23:72	6	ana_convert
arg	23:37	23:50	7	ana_matrix[1]
water	23:37	0:0	8	ana_matrix
op	23:47	0:0	8	[
water	23:48	0:0	8	1
op	23:49	0:0	8	]
arg	23:52	23:61	7	lsrc+il
water	23:52	0:0	8	lsrc
op	23:57	0:0	8	+
water	23:59	0:0	8	il
arg	23:63	23:72	7	rsrc+ir
water	23:63	0:0	8	rsrc
op	23:68	0:0	8	+
water	23:70	0:0	8	ir
water	23:73	0:0	6	;
water	24:12	0:0	6	dst
op	24:15	0:0	6	[
water	24:16	0:0	6	o
op	24:18	0:0	6	+
water	24:20	0:0	6	2
op	24:21	0:0	6	]
op	24:23	0:0	6	=
call	24:25	24:72	6	ana_convert
arg	24:37	24:50	7	ana_matrix[2]
water	24:37	0:0	8	ana_matrix
op	24:47	0:0	8	[
water	24:48	0:0	8	2
op	24:49	0:0	8	]
arg	24:52	24:61	7	lsrc+il
water	24:52	0:0	8	lsrc
op	24:57	0:0	8	+
water	24:59	0:0	8	il
arg	24:63	24:72	7	rsrc+ir
water	24:63	0:0	8	rsrc
op	24:68	0:0	8	+
water	24:70	0:0	8	ir
water	24:73	0:0	6	;
water	25:8	0:0	6	}
water	26:4	0:0	4	}
return	27:4	27:12	2	0
water	27:11	0:0	3	0

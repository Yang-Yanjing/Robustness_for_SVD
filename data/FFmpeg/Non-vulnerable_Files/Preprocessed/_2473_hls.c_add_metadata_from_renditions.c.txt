func	1:0	23:0	0	static void	add_metadata_from_renditions
params	1:40	0:0	1	
param	1:41	1:59	2	AVFormatContext *	s
param	1:61	1:81	2	struct playlist *	pls
param	2:41	2:62	2	enum AVMediaType	type
stmnts	0:0	22:4	1	
decl	4:4	4:20	2	int	rend_idx
op	4:17	0:0	2	=
water	4:19	0:0	2	0
decl	5:4	5:9	2	int	i
for	6:4	22:4	2	(i = 0 ;i < pls -> ctx -> nb_streams;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:30	3	i < pls -> ctx -> nb_streams
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	pls
op	6:23	0:0	4	->
water	6:25	0:0	4	ctx
op	6:28	0:0	4	->
water	6:30	0:0	4	nb_streams
forexpr	6:42	6:43	3	i ++
water	6:42	0:0	4	i
op	6:43	0:0	4	++
stmts	6:47	22:4	3	
water	6:47	0:0	4	{
decl	7:8	7:57	4	AVStream	*st
op	7:21	0:0	4	=
water	7:23	0:0	4	s
op	7:24	0:0	4	->
water	7:26	0:0	4	streams
op	7:33	0:0	4	[
water	7:34	0:0	4	pls
op	7:37	0:0	4	->
water	7:39	0:0	4	stream_offset
op	7:53	0:0	4	+
water	7:55	0:0	4	i
op	7:56	0:0	4	]
if	8:8	9:20	4	(st -> codec -> codec_type != type)
cond	8:12	8:37	5	st -> codec -> codec_type != type
water	8:12	0:0	6	st
op	8:14	0:0	6	->
water	8:16	0:0	6	codec
op	8:21	0:0	6	->
water	8:23	0:0	6	codec_type
op	8:34	0:0	6	!=
water	8:37	0:0	6	type
stmts	9:12	9:20	5	
continue	9:12	9:20	6	
for	10:8	19:8	4	(;rend_idx < pls -> n_renditions;rend_idx ++)
forinit	10:13	10:13	5	;
water	10:13	0:0	6	;
cond	10:15	10:31	5	rend_idx < pls -> n_renditions
water	10:15	0:0	6	rend_idx
op	10:24	0:0	6	<
water	10:26	0:0	6	pls
op	10:29	0:0	6	->
water	10:31	0:0	6	n_renditions
forexpr	10:45	10:53	5	rend_idx ++
water	10:45	0:0	6	rend_idx
op	10:53	0:0	6	++
stmts	10:57	19:8	5	
water	10:57	0:0	6	{
decl	11:12	11:62	6	struct rendition	*rend
op	11:35	0:0	6	=
water	11:37	0:0	6	pls
op	11:40	0:0	6	->
water	11:42	0:0	6	renditions
op	11:52	0:0	6	[
water	11:53	0:0	6	rend_idx
op	11:61	0:0	6	]
if	12:12	13:24	6	(rend -> type != type)
cond	12:16	12:30	7	rend -> type != type
water	12:16	0:0	8	rend
op	12:20	0:0	8	->
water	12:22	0:0	8	type
op	12:27	0:0	8	!=
water	12:30	0:0	8	type
stmts	13:16	13:24	7	
continue	13:16	13:24	8	
if	14:12	15:73	6	(rend -> language [ 0 ])
cond	14:16	14:32	7	rend -> language [ 0 ]
water	14:16	0:0	8	rend
op	14:20	0:0	8	->
water	14:22	0:0	8	language
op	14:30	0:0	8	[
water	14:31	0:0	8	0
op	14:32	0:0	8	]
stmts	15:16	15:73	7	
call	15:16	15:72	8	av_dict_set
arg	15:28	15:41	9	&st->metadata
op	15:28	0:0	10	&
water	15:29	0:0	10	st
op	15:31	0:0	10	->
water	15:33	0:0	10	metadata
arg	15:43	15:53	9	"language"
water	15:43	0:0	10	"language"
arg	15:55	15:69	9	rend->language
water	15:55	0:0	10	rend
op	15:59	0:0	10	->
water	15:61	0:0	10	language
arg	15:71	15:72	9	0
water	15:71	0:0	10	0
water	15:73	0:0	8	;
if	16:12	17:68	6	(rend -> name [ 0 ])
cond	16:16	16:28	7	rend -> name [ 0 ]
water	16:16	0:0	8	rend
op	16:20	0:0	8	->
water	16:22	0:0	8	name
op	16:26	0:0	8	[
water	16:27	0:0	8	0
op	16:28	0:0	8	]
stmts	17:16	17:68	7	
call	17:16	17:67	8	av_dict_set
arg	17:28	17:41	9	&st->metadata
op	17:28	0:0	10	&
water	17:29	0:0	10	st
op	17:31	0:0	10	->
water	17:33	0:0	10	metadata
arg	17:43	17:52	9	"comment"
water	17:43	0:0	10	"comment"
arg	17:54	17:64	9	rend->name
water	17:54	0:0	10	rend
op	17:58	0:0	10	->
water	17:60	0:0	10	name
arg	17:66	17:67	9	0
water	17:66	0:0	10	0
water	17:68	0:0	8	;
water	18:12	0:0	6	st
op	18:14	0:0	6	->
water	18:16	0:0	6	disposition
op	18:28	0:0	6	|=
water	18:31	0:0	6	rend
op	18:35	0:0	6	->
water	18:37	0:0	6	disposition
water	18:48	0:0	6	;
water	19:8	0:0	6	}
if	20:8	21:17	4	(rend_idx >= pls -> n_renditions)
cond	20:12	20:28	5	rend_idx >= pls -> n_renditions
water	20:12	0:0	6	rend_idx
op	20:21	0:0	6	>=
water	20:23	0:0	6	pls
op	20:26	0:0	6	->
water	20:28	0:0	6	n_renditions
stmts	21:12	21:17	5	
break	21:12	21:17	6	
water	22:4	0:0	4	}

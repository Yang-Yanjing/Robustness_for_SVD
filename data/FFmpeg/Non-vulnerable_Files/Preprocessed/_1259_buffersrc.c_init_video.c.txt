func	1:15	16:0	0	int	init_video
params	1:29	0:0	1	
param	1:30	1:50	2	AVFilterContext *	ctx
stmnts	0:0	15:12	1	
decl	3:4	3:38	2	BufferSourceContext	*c
op	3:27	0:0	2	=
water	3:29	0:0	2	ctx
op	3:32	0:0	2	->
water	3:34	0:0	2	priv
if	4:4	7:4	2	(c -> pix_fmt == AV_PIX_FMT_NONE || ! c -> w || ! c -> h ||av_q2d (c -> time_base ) <= 0)
cond	4:8	4:83	3	c -> pix_fmt == AV_PIX_FMT_NONE || ! c -> w || ! c -> h ||av_q2d (c -> time_base ) <= 0
water	4:8	0:0	4	c
op	4:9	0:0	4	->
water	4:11	0:0	4	pix_fmt
op	4:19	0:0	4	==
water	4:22	0:0	4	AV_PIX_FMT_NONE
op	4:38	0:0	4	||
op	4:41	0:0	4	!
water	4:42	0:0	4	c
op	4:43	0:0	4	->
water	4:45	0:0	4	w
op	4:47	0:0	4	||
op	4:50	0:0	4	!
water	4:51	0:0	4	c
op	4:52	0:0	4	->
water	4:54	0:0	4	h
op	4:56	0:0	4	||
call	4:59	4:78	4	av_q2d
arg	4:66	4:78	5	c->time_base
water	4:66	0:0	6	c
op	4:67	0:0	6	->
water	4:69	0:0	6	time_base
op	4:80	0:0	4	<=
water	4:83	0:0	4	0
stmts	4:86	7:4	3	
water	4:86	0:0	4	{
call	5:8	5:66	4	av_log
arg	5:15	5:18	5	ctx
water	5:15	0:0	6	ctx
arg	5:20	5:32	5	AV_LOG_ERROR
water	5:20	0:0	6	AV_LOG_ERROR
arg	5:34	5:66	5	"Invalid parameters provided.\n"
water	5:34	0:0	6	"Invalid parameters provided.\n"
water	5:67	0:0	4	;
return	6:8	6:30	4	AVERROR(EINVAL)
call	6:15	6:29	5	AVERROR
arg	6:23	6:29	6	EINVAL
water	6:23	0:0	7	EINVAL
water	7:4	0:0	4	}
if	8:4	9:30	2	(! ( c -> fifo =av_fifo_alloc (sizeof ( AVFrame * ) ) ))
cond	8:8	8:51	3	! ( c -> fifo =av_fifo_alloc (sizeof ( AVFrame * ) ) )
op	8:8	0:0	4	!
water	8:9	0:0	4	(
water	8:10	0:0	4	c
op	8:11	0:0	4	->
water	8:13	0:0	4	fifo
op	8:18	0:0	4	=
call	8:20	8:50	4	av_fifo_alloc
arg	8:34	8:50	5	sizeof(AVFrame*)
op	8:34	0:0	6	sizeof
water	8:40	0:0	6	(
water	8:41	0:0	6	AVFrame
op	8:48	0:0	6	*
water	8:49	0:0	6	)
water	8:51	0:0	4	)
stmts	9:8	9:30	3	
return	9:8	9:30	4	AVERROR(ENOMEM)
call	9:15	9:29	5	AVERROR
arg	9:23	9:29	6	ENOMEM
water	9:23	0:0	7	ENOMEM
call	10:4	13:91	2	av_log
arg	10:11	10:14	3	ctx
water	10:11	0:0	4	ctx
arg	10:16	10:30	3	AV_LOG_VERBOSE
water	10:16	0:0	4	AV_LOG_VERBOSE
arg	10:32	10:96	3	"w:%d h:%d pixfmt:%s tb:%d/%d fr:%d/%d sar:%d/%d sws_param:%s\n"
water	10:32	0:0	4	"w:%d h:%d pixfmt:%s tb:%d/%d fr:%d/%d sar:%d/%d sws_param:%s\n"
arg	11:11	11:15	3	c->w
water	11:11	0:0	4	c
op	11:12	0:0	4	->
water	11:14	0:0	4	w
arg	11:17	11:21	3	c->h
water	11:17	0:0	4	c
op	11:18	0:0	4	->
water	11:20	0:0	4	h
arg	11:23	11:54	3	av_get_pix_fmt_name(c->pix_fmt)
call	11:23	11:53	4	av_get_pix_fmt_name
arg	11:43	11:53	5	c->pix_fmt
water	11:43	0:0	6	c
op	11:44	0:0	6	->
water	11:46	0:0	6	pix_fmt
arg	12:11	12:27	3	c->time_base.num
water	12:11	0:0	4	c
op	12:12	0:0	4	->
water	12:14	0:0	4	time_base
op	12:23	0:0	4	.
water	12:24	0:0	4	num
arg	12:29	12:45	3	c->time_base.den
water	12:29	0:0	4	c
op	12:30	0:0	4	->
water	12:32	0:0	4	time_base
op	12:41	0:0	4	.
water	12:42	0:0	4	den
arg	12:47	12:64	3	c->frame_rate.num
water	12:47	0:0	4	c
op	12:48	0:0	4	->
water	12:50	0:0	4	frame_rate
op	12:60	0:0	4	.
water	12:61	0:0	4	num
arg	12:66	12:83	3	c->frame_rate.den
water	12:66	0:0	4	c
op	12:67	0:0	4	->
water	12:69	0:0	4	frame_rate
op	12:79	0:0	4	.
water	12:80	0:0	4	den
arg	13:11	13:30	3	c->pixel_aspect.num
water	13:11	0:0	4	c
op	13:12	0:0	4	->
water	13:14	0:0	4	pixel_aspect
op	13:26	0:0	4	.
water	13:27	0:0	4	num
arg	13:32	13:51	3	c->pixel_aspect.den
water	13:32	0:0	4	c
op	13:33	0:0	4	->
water	13:35	0:0	4	pixel_aspect
op	13:47	0:0	4	.
water	13:48	0:0	4	den
arg	13:53	13:91	3	(char*)av_x_if_null(c->sws_param,"")
water	13:53	0:0	4	(
water	13:54	0:0	4	char
op	13:59	0:0	4	*
water	13:60	0:0	4	)
call	13:61	13:90	4	av_x_if_null
arg	13:74	13:86	5	c->sws_param
water	13:74	0:0	6	c
op	13:75	0:0	6	->
water	13:77	0:0	6	sws_param
arg	13:88	13:90	5	""
water	13:88	0:0	6	""
water	13:92	0:0	2	;
water	14:4	0:0	2	c
op	14:5	0:0	2	->
water	14:7	0:0	2	warning_limit
op	14:21	0:0	2	=
water	14:23	0:0	2	100
water	14:26	0:0	2	;
return	15:4	15:12	2	0
water	15:11	0:0	3	0

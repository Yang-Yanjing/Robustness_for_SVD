func	1:0	14:0	0	static int64_t	mxf_essence_container_end
params	1:40	0:0	1	
param	1:41	1:56	2	MXFContext *	mxf
param	1:58	1:70	2	int	body_sid
stmnts	0:0	13:14	1	
decl	3:4	3:9	2	int	x
decl	4:4	4:19	2	int64_t	ret
op	4:16	0:0	2	=
water	4:18	0:0	2	0
for	5:4	12:4	2	(x = 0 ;x < mxf -> partitions_count;x ++)
forinit	5:9	5:14	3	x = 0 ;
water	5:9	0:0	4	x
op	5:11	0:0	4	=
water	5:13	0:0	4	0
water	5:14	0:0	4	;
cond	5:16	5:25	3	x < mxf -> partitions_count
water	5:16	0:0	4	x
op	5:18	0:0	4	<
water	5:20	0:0	4	mxf
op	5:23	0:0	4	->
water	5:25	0:0	4	partitions_count
forexpr	5:43	5:44	3	x ++
water	5:43	0:0	4	x
op	5:44	0:0	4	++
stmts	5:48	12:4	3	
water	5:48	0:0	4	{
decl	6:8	6:45	4	MXFPartition	*p
op	6:24	0:0	4	=
op	6:26	0:0	4	&
water	6:27	0:0	4	mxf
op	6:30	0:0	4	->
water	6:32	0:0	4	partitions
op	6:42	0:0	4	[
water	6:43	0:0	4	x
op	6:44	0:0	4	]
if	7:8	8:20	4	(p -> body_sid != body_sid)
cond	7:12	7:27	5	p -> body_sid != body_sid
water	7:12	0:0	6	p
op	7:13	0:0	6	->
water	7:15	0:0	6	body_sid
op	7:24	0:0	6	!=
water	7:27	0:0	6	body_sid
stmts	8:12	8:20	5	
continue	8:12	8:20	6	
if	9:8	10:20	4	(! p -> essence_length)
cond	9:12	9:16	5	! p -> essence_length
op	9:12	0:0	6	!
water	9:13	0:0	6	p
op	9:14	0:0	6	->
water	9:16	0:0	6	essence_length
stmts	10:12	10:20	5	
return	10:12	10:20	6	0
water	10:19	0:0	7	0
water	11:8	0:0	4	ret
op	11:12	0:0	4	=
water	11:14	0:0	4	p
op	11:15	0:0	4	->
water	11:17	0:0	4	essence_offset
op	11:32	0:0	4	+
water	11:34	0:0	4	p
op	11:35	0:0	4	->
water	11:37	0:0	4	essence_length
water	11:51	0:0	4	;
water	12:4	0:0	4	}
return	13:4	13:14	2	ret
water	13:11	0:0	3	ret

func	1:0	48:0	0	static void	print_digraph
params	1:25	0:0	1	
param	1:26	1:39	2	FILE *	outfile
param	1:41	1:61	2	AVFilterGraph *	graph
stmnts	0:0	47:27	1	
decl	3:4	3:12	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	j
call	4:4	4:36	2	fprintf
arg	4:12	4:19	3	outfile
water	4:12	0:0	4	outfile
arg	4:21	4:36	3	"digraph G {\n"
water	4:21	0:0	4	"digraph G {\n"
water	4:37	0:0	2	;
call	5:4	5:41	2	fprintf
arg	5:12	5:19	3	outfile
water	5:12	0:0	4	outfile
arg	5:21	5:41	3	"node [shape=box]\n"
water	5:21	0:0	4	"node [shape=box]\n"
water	5:42	0:0	2	;
call	6:4	6:35	2	fprintf
arg	6:12	6:19	3	outfile
water	6:12	0:0	4	outfile
arg	6:21	6:35	3	"rankdir=LR\n"
water	6:21	0:0	4	"rankdir=LR\n"
water	6:36	0:0	2	;
for	7:4	46:4	2	(i = 0 ;i < graph -> nb_filters;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:27	3	i < graph -> nb_filters
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	graph
op	7:25	0:0	4	->
water	7:27	0:0	4	nb_filters
forexpr	7:39	7:40	3	i ++
water	7:39	0:0	4	i
op	7:40	0:0	4	++
stmts	7:44	46:4	3	
water	7:44	0:0	4	{
decl	8:8	8:34	4	char	filter_ctx_label[128]
decl	9:8	9:61	4	const AVFilterContext	*filter_ctx
op	9:42	0:0	4	=
water	9:44	0:0	4	graph
op	9:49	0:0	4	->
water	9:51	0:0	4	filters
op	9:58	0:0	4	[
water	9:59	0:0	4	i
op	9:60	0:0	4	]
call	10:8	12:41	4	snprintf
arg	10:17	10:33	5	filter_ctx_label
water	10:17	0:0	6	filter_ctx_label
arg	10:35	10:59	5	sizeof(filter_ctx_label)
op	10:35	0:0	6	sizeof
water	10:41	0:0	6	(
water	10:42	0:0	6	filter_ctx_label
water	10:58	0:0	6	)
arg	10:61	10:72	5	"%s\\n(%s)"
water	10:61	0:0	6	"%s\\n(%s)"
arg	11:17	11:33	5	filter_ctx->name
water	11:17	0:0	6	filter_ctx
op	11:27	0:0	6	->
water	11:29	0:0	6	name
arg	12:17	12:41	5	filter_ctx->filter->name
water	12:17	0:0	6	filter_ctx
op	12:27	0:0	6	->
water	12:29	0:0	6	filter
op	12:35	0:0	6	->
water	12:37	0:0	6	name
water	12:42	0:0	4	;
for	13:8	45:8	4	(j = 0 ;j < filter_ctx -> nb_outputs;j ++)
forinit	13:13	13:18	5	j = 0 ;
water	13:13	0:0	6	j
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:36	5	j < filter_ctx -> nb_outputs
water	13:20	0:0	6	j
op	13:22	0:0	6	<
water	13:24	0:0	6	filter_ctx
op	13:34	0:0	6	->
water	13:36	0:0	6	nb_outputs
forexpr	13:48	13:49	5	j ++
water	13:48	0:0	6	j
op	13:49	0:0	6	++
stmts	13:53	45:8	5	
water	13:53	0:0	6	{
decl	14:12	14:55	6	AVFilterLink	*link
op	14:31	0:0	6	=
water	14:33	0:0	6	filter_ctx
op	14:43	0:0	6	->
water	14:45	0:0	6	outputs
op	14:52	0:0	6	[
water	14:53	0:0	6	j
op	14:54	0:0	6	]
if	15:12	44:12	6	(link)
cond	15:16	15:16	7	link
water	15:16	0:0	8	link
stmts	15:22	44:12	7	
water	15:22	0:0	8	{
decl	16:16	16:46	8	char	dst_filter_ctx_label[128]
decl	17:16	17:65	8	const AVFilterContext	*dst_filter_ctx
op	17:54	0:0	8	=
water	17:56	0:0	8	link
op	17:60	0:0	8	->
water	17:62	0:0	8	dst
call	18:16	21:53	8	snprintf
arg	18:25	18:45	9	dst_filter_ctx_label
water	18:25	0:0	10	dst_filter_ctx_label
arg	18:47	18:75	9	sizeof(dst_filter_ctx_label)
op	18:47	0:0	10	sizeof
water	18:53	0:0	10	(
water	18:54	0:0	10	dst_filter_ctx_label
water	18:74	0:0	10	)
arg	19:25	19:36	9	"%s\\n(%s)"
water	19:25	0:0	10	"%s\\n(%s)"
arg	20:25	20:45	9	dst_filter_ctx->name
water	20:25	0:0	10	dst_filter_ctx
op	20:39	0:0	10	->
water	20:41	0:0	10	name
arg	21:25	21:53	9	dst_filter_ctx->filter->name
water	21:25	0:0	10	dst_filter_ctx
op	21:39	0:0	10	->
water	21:41	0:0	10	filter
op	21:47	0:0	10	->
water	21:49	0:0	10	name
water	21:54	0:0	8	;
call	22:16	25:62	8	fprintf
arg	22:24	22:31	9	outfile
water	22:24	0:0	10	outfile
arg	22:33	22:87	9	"\"%s\" -> \"%s\" [ label= \"inpad:%s -> outpad:%s\\n"
water	22:33	0:0	10	"\"%s\" -> \"%s\" [ label= \"inpad:%s -> outpad:%s\\n"
arg	23:24	23:40	9	filter_ctx_label
water	23:24	0:0	10	filter_ctx_label
arg	23:42	23:62	9	dst_filter_ctx_label
water	23:42	0:0	10	dst_filter_ctx_label
arg	24:24	24:62	9	avfilter_pad_get_name(link->srcpad,0)
call	24:24	24:61	10	avfilter_pad_get_name
arg	24:46	24:58	11	link->srcpad
water	24:46	0:0	12	link
op	24:50	0:0	12	->
water	24:52	0:0	12	srcpad
arg	24:60	24:61	11	0
water	24:60	0:0	12	0
arg	25:24	25:62	9	avfilter_pad_get_name(link->dstpad,0)
call	25:24	25:61	10	avfilter_pad_get_name
arg	25:46	25:58	11	link->dstpad
water	25:46	0:0	12	link
op	25:50	0:0	12	->
water	25:52	0:0	12	dstpad
arg	25:60	25:61	11	0
water	25:60	0:0	12	0
water	25:63	0:0	8	;
if	26:16	33:16	8	(link -> type == AVMEDIA_TYPE_VIDEO)
cond	26:20	26:34	9	link -> type == AVMEDIA_TYPE_VIDEO
water	26:20	0:0	10	link
op	26:24	0:0	10	->
water	26:26	0:0	10	type
op	26:31	0:0	10	==
water	26:34	0:0	10	AVMEDIA_TYPE_VIDEO
stmts	26:54	33:16	9	
water	26:54	0:0	10	{
decl	27:20	27:86	10	const AVPixFmtDescriptor	*desc
op	27:51	0:0	10	=
call	27:53	27:85	11	av_pix_fmt_desc_get
arg	27:73	27:85	12	link->format
water	27:73	0:0	13	link
op	27:77	0:0	13	->
water	27:79	0:0	13	format
call	28:20	32:68	10	fprintf
arg	28:28	28:35	11	outfile
water	28:28	0:0	12	outfile
arg	29:28	29:55	11	"fmt:%s w:%d h:%d tb:%d/%d"
water	29:28	0:0	12	"fmt:%s w:%d h:%d tb:%d/%d"
arg	30:28	30:38	11	desc->name
water	30:28	0:0	12	desc
op	30:32	0:0	12	->
water	30:34	0:0	12	name
arg	31:28	31:35	11	link->w
water	31:28	0:0	12	link
op	31:32	0:0	12	->
water	31:34	0:0	12	w
arg	31:37	31:44	11	link->h
water	31:37	0:0	12	link
op	31:41	0:0	12	->
water	31:43	0:0	12	h
arg	32:28	32:47	11	link->time_base.num
water	32:28	0:0	12	link
op	32:32	0:0	12	->
water	32:34	0:0	12	time_base
op	32:43	0:0	12	.
water	32:44	0:0	12	num
arg	32:49	32:68	11	link->time_base.den
water	32:49	0:0	12	link
op	32:53	0:0	12	->
water	32:55	0:0	12	time_base
op	32:64	0:0	12	.
water	32:65	0:0	12	den
water	32:69	0:0	10	;
water	33:16	0:0	10	}
else	33:18	42:16	8
stmts	33:23	42:16	9	
if	33:23	42:16	10	(link -> type == AVMEDIA_TYPE_AUDIO)
cond	33:27	33:41	11	link -> type == AVMEDIA_TYPE_AUDIO
water	33:27	0:0	12	link
op	33:31	0:0	12	->
water	33:33	0:0	12	type
op	33:38	0:0	12	==
water	33:41	0:0	12	AVMEDIA_TYPE_AUDIO
stmts	33:61	42:16	11	
water	33:61	0:0	12	{
decl	34:20	34:33	12	char	buf[255]
call	35:20	36:69	12	av_get_channel_layout_string
arg	35:49	35:52	13	buf
water	35:49	0:0	14	buf
arg	35:54	35:65	13	sizeof(buf)
op	35:54	0:0	14	sizeof
water	35:60	0:0	14	(
water	35:61	0:0	14	buf
water	35:64	0:0	14	)
arg	35:67	35:69	13	-1
op	35:67	0:0	14	-
water	35:68	0:0	14	1
arg	36:49	36:69	13	link->channel_layout
water	36:49	0:0	14	link
op	36:53	0:0	14	->
water	36:55	0:0	14	channel_layout
water	36:70	0:0	12	;
call	37:20	41:68	12	fprintf
arg	37:28	37:35	13	outfile
water	37:28	0:0	14	outfile
arg	38:28	38:57	13	"fmt:%s sr:%d cl:%s tb:%d/%d"
water	38:28	0:0	14	"fmt:%s sr:%d cl:%s tb:%d/%d"
arg	39:28	39:64	13	av_get_sample_fmt_name(link->format)
call	39:28	39:63	14	av_get_sample_fmt_name
arg	39:51	39:63	15	link->format
water	39:51	0:0	16	link
op	39:55	0:0	16	->
water	39:57	0:0	16	format
arg	40:28	40:45	13	link->sample_rate
water	40:28	0:0	14	link
op	40:32	0:0	14	->
water	40:34	0:0	14	sample_rate
arg	40:47	40:50	13	buf
water	40:47	0:0	14	buf
arg	41:28	41:47	13	link->time_base.num
water	41:28	0:0	14	link
op	41:32	0:0	14	->
water	41:34	0:0	14	time_base
op	41:43	0:0	14	.
water	41:44	0:0	14	num
arg	41:49	41:68	13	link->time_base.den
water	41:49	0:0	14	link
op	41:53	0:0	14	->
water	41:55	0:0	14	time_base
op	41:64	0:0	14	.
water	41:65	0:0	14	den
water	41:69	0:0	12	;
water	42:16	0:0	12	}
call	43:16	43:42	8	fprintf
arg	43:24	43:31	9	outfile
water	43:24	0:0	10	outfile
arg	43:33	43:42	9	"\" ];\n"
water	43:33	0:0	10	"\" ];\n"
water	43:43	0:0	8	;
water	44:12	0:0	8	}
water	45:8	0:0	6	}
water	46:4	0:0	4	}
call	47:4	47:26	2	fprintf
arg	47:12	47:19	3	outfile
water	47:12	0:0	4	outfile
arg	47:21	47:26	3	"}\n"
water	47:21	0:0	4	"}\n"
water	47:27	0:0	2	;

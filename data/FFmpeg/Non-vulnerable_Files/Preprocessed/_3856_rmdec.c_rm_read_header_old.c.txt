func	1:0	13:0	0	static int	rm_read_header_old
params	1:29	0:0	1	
param	1:30	1:48	2	AVFormatContext *	s
stmnts	0:0	12:68	1	
decl	3:4	3:37	2	RMDemuxContext	*rm
op	3:23	0:0	2	=
water	3:25	0:0	2	s
op	3:26	0:0	2	->
water	3:28	0:0	2	priv_data
decl	4:4	4:16	2	AVStream	*st
water	5:4	0:0	2	rm
op	5:6	0:0	2	->
water	5:8	0:0	2	old_format
op	5:19	0:0	2	=
water	5:21	0:0	2	1
water	5:22	0:0	2	;
water	6:4	0:0	2	st
op	6:7	0:0	2	=
call	6:9	6:36	2	avformat_new_stream
arg	6:29	6:30	3	s
water	6:29	0:0	4	s
arg	6:32	6:36	3	NULL
water	6:32	0:0	4	NULL
water	6:37	0:0	2	;
if	7:4	8:17	2	(! st)
cond	7:8	7:9	3	! st
op	7:8	0:0	4	!
water	7:9	0:0	4	st
stmts	8:8	8:17	3	
return	8:8	8:17	4	-1
op	8:15	0:0	5	-
water	8:16	0:0	5	1
water	9:4	0:0	2	st
op	9:6	0:0	2	->
water	9:8	0:0	2	priv_data
op	9:18	0:0	2	=
call	9:20	9:41	2	ff_rm_alloc_rmstream
water	9:42	0:0	2	;
if	10:4	11:30	2	(! st -> priv_data)
cond	10:8	10:13	3	! st -> priv_data
op	10:8	0:0	4	!
water	10:9	0:0	4	st
op	10:11	0:0	4	->
water	10:13	0:0	4	priv_data
stmts	11:8	11:30	3	
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
return	12:4	12:68	2	rm_read_audio_stream_info(s,s->pb,st,st->priv_data,1)
call	12:11	12:67	3	rm_read_audio_stream_info
arg	12:37	12:38	4	s
water	12:37	0:0	5	s
arg	12:40	12:45	4	s->pb
water	12:40	0:0	5	s
op	12:41	0:0	5	->
water	12:43	0:0	5	pb
arg	12:47	12:49	4	st
water	12:47	0:0	5	st
arg	12:51	12:64	4	st->priv_data
water	12:51	0:0	5	st
op	12:53	0:0	5	->
water	12:55	0:0	5	priv_data
arg	12:66	12:67	4	1
water	12:66	0:0	5	1

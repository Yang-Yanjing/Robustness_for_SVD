func	1:0	11:0	0	char *	av_get_sample_fmt_string
params	1:31	0:0	1	
param	1:32	1:41	2	char *	buf
param	1:43	1:55	2	int	buf_size
param	1:57	1:87	2	enum AVSampleFormat	sample_fmt
stmnts	4:4	10:14	1	
if	4:4	5:50	2	(sample_fmt < 0)
cond	4:8	4:21	3	sample_fmt < 0
water	4:8	0:0	4	sample_fmt
op	4:19	0:0	4	<
water	4:21	0:0	4	0
stmts	5:8	5:50	3	
call	5:8	5:49	4	snprintf
arg	5:17	5:20	5	buf
water	5:17	0:0	6	buf
arg	5:22	5:30	5	buf_size
water	5:22	0:0	6	buf_size
arg	5:32	5:49	5	"name  "" depth"
water	5:32	0:0	6	"name  "
water	5:41	0:0	6	" depth"
water	5:50	0:0	4	;
else	6:4	9:4	2
stmts	6:9	9:4	3	
if	6:9	9:4	4	(sample_fmt < AV_SAMPLE_FMT_NB)
cond	6:13	6:26	5	sample_fmt < AV_SAMPLE_FMT_NB
water	6:13	0:0	6	sample_fmt
op	6:24	0:0	6	<
water	6:26	0:0	6	AV_SAMPLE_FMT_NB
stmts	6:44	9:4	5	
water	6:44	0:0	6	{
decl	7:8	7:56	6	SampleFmtInfo	info
op	7:27	0:0	6	=
water	7:29	0:0	6	sample_fmt_info
op	7:44	0:0	6	[
water	7:45	0:0	6	sample_fmt
op	7:55	0:0	6	]
call	8:8	8:71	6	snprintf
arg	8:18	8:21	7	buf
water	8:18	0:0	8	buf
arg	8:23	8:31	7	buf_size
water	8:23	0:0	8	buf_size
arg	8:33	8:49	7	"%-6s""   %2d "
water	8:33	0:0	8	"%-6s"
water	8:40	0:0	8	"   %2d "
arg	8:51	8:60	7	info.name
water	8:51	0:0	8	info
op	8:55	0:0	8	.
water	8:56	0:0	8	name
arg	8:62	8:71	7	info.bits
water	8:62	0:0	8	info
op	8:66	0:0	8	.
water	8:67	0:0	8	bits
water	8:72	0:0	6	;
water	9:4	0:0	6	}
return	10:4	10:14	2	buf
water	10:11	0:0	3	buf

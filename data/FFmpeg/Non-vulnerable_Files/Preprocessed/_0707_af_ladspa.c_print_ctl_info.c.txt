func	2:0	40:0	0	static void	print_ctl_info
params	2:26	0:0	1	
param	2:27	2:47	2	AVFilterContext *	ctx
param	2:49	2:58	2	int	level
param	3:27	3:43	2	LADSPAContext *	s
param	3:45	3:52	2	int	ctl
param	3:54	3:72	2	unsigned long *	map
param	4:27	4:46	2	LADSPA_Data *	values
param	4:48	4:57	2	int	print
stmnts	0:0	39:29	1	
decl	6:4	6:70	2	const LADSPA_PortRangeHint	*h
op	6:34	0:0	2	=
water	6:36	0:0	2	s
op	6:37	0:0	2	->
water	6:39	0:0	2	desc
op	6:43	0:0	2	->
water	6:45	0:0	2	PortRangeHints
op	6:60	0:0	2	+
water	6:62	0:0	2	map
op	6:65	0:0	2	[
water	6:66	0:0	2	ctl
op	6:69	0:0	2	]
call	7:4	7:69	2	av_log
arg	7:11	7:14	3	ctx
water	7:11	0:0	4	ctx
arg	7:16	7:21	3	level
water	7:16	0:0	4	level
arg	7:23	7:34	3	"c%i: %s ["
water	7:23	0:0	4	"c%i: %s ["
arg	7:36	7:39	3	ctl
water	7:36	0:0	4	ctl
arg	7:41	7:69	3	s->desc->PortNames[map[ctl]]
water	7:41	0:0	4	s
op	7:42	0:0	4	->
water	7:44	0:0	4	desc
op	7:48	0:0	4	->
water	7:50	0:0	4	PortNames
op	7:59	0:0	4	[
water	7:60	0:0	4	map
op	7:63	0:0	4	[
water	7:64	0:0	4	ctl
op	7:67	0:0	4	]
op	7:68	0:0	4	]
water	7:70	0:0	2	;
if	8:4	12:4	2	(LADSPA_IS_HINT_TOGGLED (h -> HintDescriptor ))
cond	8:8	8:48	3	LADSPA_IS_HINT_TOGGLED (h -> HintDescriptor )
call	8:8	8:48	4	LADSPA_IS_HINT_TOGGLED
arg	8:31	8:48	5	h->HintDescriptor
water	8:31	0:0	6	h
op	8:32	0:0	6	->
water	8:34	0:0	6	HintDescriptor
stmts	8:51	12:4	3	
water	8:51	0:0	4	{
call	9:8	9:45	4	av_log
arg	9:15	9:18	5	ctx
water	9:15	0:0	6	ctx
arg	9:20	9:25	5	level
water	9:20	0:0	6	level
arg	9:27	9:45	5	"toggled (1 or 0)"
water	9:27	0:0	6	"toggled (1 or 0)"
water	9:46	0:0	4	;
if	10:8	11:65	4	(LADSPA_IS_HINT_HAS_DEFAULT (h -> HintDescriptor ))
cond	10:12	10:56	5	LADSPA_IS_HINT_HAS_DEFAULT (h -> HintDescriptor )
call	10:12	10:56	6	LADSPA_IS_HINT_HAS_DEFAULT
arg	10:39	10:56	7	h->HintDescriptor
water	10:39	0:0	8	h
op	10:40	0:0	8	->
water	10:42	0:0	8	HintDescriptor
stmts	11:12	11:65	5	
call	11:12	11:64	6	av_log
arg	11:19	11:22	7	ctx
water	11:19	0:0	8	ctx
arg	11:24	11:29	7	level
water	11:24	0:0	8	level
arg	11:31	11:46	7	" (default %i)"
water	11:31	0:0	8	" (default %i)"
arg	11:48	11:64	7	(int)values[ctl]
water	11:48	0:0	8	(
water	11:49	0:0	8	int
water	11:52	0:0	8	)
water	11:53	0:0	8	values
op	11:59	0:0	8	[
water	11:60	0:0	8	ctl
op	11:63	0:0	8	]
water	11:65	0:0	6	;
water	12:4	0:0	4	}
else	12:6	38:4	2
stmts	12:11	38:4	3	
water	12:11	0:0	4	{
if	13:8	23:8	4	(LADSPA_IS_HINT_INTEGER (h -> HintDescriptor ))
cond	13:12	13:52	5	LADSPA_IS_HINT_INTEGER (h -> HintDescriptor )
call	13:12	13:52	6	LADSPA_IS_HINT_INTEGER
arg	13:35	13:52	7	h->HintDescriptor
water	13:35	0:0	8	h
op	13:36	0:0	8	->
water	13:38	0:0	8	HintDescriptor
stmts	13:55	23:8	5	
water	13:55	0:0	6	{
call	14:12	14:38	6	av_log
arg	14:19	14:22	7	ctx
water	14:19	0:0	8	ctx
arg	14:24	14:29	7	level
water	14:24	0:0	8	level
arg	14:31	14:38	7	"<int>"
water	14:31	0:0	8	"<int>"
water	14:39	0:0	6	;
if	15:12	16:67	6	(LADSPA_IS_HINT_BOUNDED_BELOW (h -> HintDescriptor ))
cond	15:16	15:62	7	LADSPA_IS_HINT_BOUNDED_BELOW (h -> HintDescriptor )
call	15:16	15:62	8	LADSPA_IS_HINT_BOUNDED_BELOW
arg	15:45	15:62	9	h->HintDescriptor
water	15:45	0:0	10	h
op	15:46	0:0	10	->
water	15:48	0:0	10	HintDescriptor
stmts	16:16	16:67	7	
call	16:16	16:66	8	av_log
arg	16:23	16:26	9	ctx
water	16:23	0:0	10	ctx
arg	16:28	16:33	9	level
water	16:28	0:0	10	level
arg	16:35	16:46	9	", min: %i"
water	16:35	0:0	10	", min: %i"
arg	16:48	16:66	9	(int)h->LowerBound
water	16:48	0:0	10	(
water	16:49	0:0	10	int
water	16:52	0:0	10	)
water	16:53	0:0	10	h
op	16:54	0:0	10	->
water	16:56	0:0	10	LowerBound
water	16:67	0:0	8	;
if	17:12	18:67	6	(LADSPA_IS_HINT_BOUNDED_ABOVE (h -> HintDescriptor ))
cond	17:16	17:62	7	LADSPA_IS_HINT_BOUNDED_ABOVE (h -> HintDescriptor )
call	17:16	17:62	8	LADSPA_IS_HINT_BOUNDED_ABOVE
arg	17:45	17:62	9	h->HintDescriptor
water	17:45	0:0	10	h
op	17:46	0:0	10	->
water	17:48	0:0	10	HintDescriptor
stmts	18:16	18:67	7	
call	18:16	18:66	8	av_log
arg	18:23	18:26	9	ctx
water	18:23	0:0	10	ctx
arg	18:28	18:33	9	level
water	18:28	0:0	10	level
arg	18:35	18:46	9	", max: %i"
water	18:35	0:0	10	", max: %i"
arg	18:48	18:66	9	(int)h->UpperBound
water	18:48	0:0	10	(
water	18:49	0:0	10	int
water	18:52	0:0	10	)
water	18:53	0:0	10	h
op	18:54	0:0	10	->
water	18:56	0:0	10	UpperBound
water	18:67	0:0	8	;
if	19:12	20:67	6	(print)
cond	19:16	19:16	7	print
water	19:16	0:0	8	print
stmts	20:16	20:67	7	
call	20:16	20:66	8	av_log
arg	20:23	20:26	9	ctx
water	20:23	0:0	10	ctx
arg	20:28	20:33	9	level
water	20:28	0:0	10	level
arg	20:35	20:48	9	" (value %d)"
water	20:35	0:0	10	" (value %d)"
arg	20:50	20:66	9	(int)values[ctl]
water	20:50	0:0	10	(
water	20:51	0:0	10	int
water	20:54	0:0	10	)
water	20:55	0:0	10	values
op	20:61	0:0	10	[
water	20:62	0:0	10	ctl
op	20:65	0:0	10	]
water	20:67	0:0	8	;
else	21:12	22:69	6
stmts	21:17	22:69	7	
if	21:17	22:69	8	(LADSPA_IS_HINT_HAS_DEFAULT (h -> HintDescriptor ))
cond	21:21	21:65	9	LADSPA_IS_HINT_HAS_DEFAULT (h -> HintDescriptor )
call	21:21	21:65	10	LADSPA_IS_HINT_HAS_DEFAULT
arg	21:48	21:65	11	h->HintDescriptor
water	21:48	0:0	12	h
op	21:49	0:0	12	->
water	21:51	0:0	12	HintDescriptor
stmts	22:16	22:69	9	
call	22:16	22:68	10	av_log
arg	22:23	22:26	11	ctx
water	22:23	0:0	12	ctx
arg	22:28	22:33	11	level
water	22:28	0:0	12	level
arg	22:35	22:50	11	" (default %d)"
water	22:35	0:0	12	" (default %d)"
arg	22:52	22:68	11	(int)values[ctl]
water	22:52	0:0	12	(
water	22:53	0:0	12	int
water	22:56	0:0	12	)
water	22:57	0:0	12	values
op	22:63	0:0	12	[
water	22:64	0:0	12	ctl
op	22:67	0:0	12	]
water	22:69	0:0	10	;
water	23:8	0:0	6	}
else	23:10	33:8	4
stmts	23:15	33:8	5	
water	23:15	0:0	6	{
call	24:12	24:40	6	av_log
arg	24:19	24:22	7	ctx
water	24:19	0:0	8	ctx
arg	24:24	24:29	7	level
water	24:24	0:0	8	level
arg	24:31	24:40	7	"<float>"
water	24:31	0:0	8	"<float>"
water	24:41	0:0	6	;
if	25:12	26:62	6	(LADSPA_IS_HINT_BOUNDED_BELOW (h -> HintDescriptor ))
cond	25:16	25:62	7	LADSPA_IS_HINT_BOUNDED_BELOW (h -> HintDescriptor )
call	25:16	25:62	8	LADSPA_IS_HINT_BOUNDED_BELOW
arg	25:45	25:62	9	h->HintDescriptor
water	25:45	0:0	10	h
op	25:46	0:0	10	->
water	25:48	0:0	10	HintDescriptor
stmts	26:16	26:62	7	
call	26:16	26:61	8	av_log
arg	26:23	26:26	9	ctx
water	26:23	0:0	10	ctx
arg	26:28	26:33	9	level
water	26:28	0:0	10	level
arg	26:35	26:46	9	", min: %f"
water	26:35	0:0	10	", min: %f"
arg	26:48	26:61	9	h->LowerBound
water	26:48	0:0	10	h
op	26:49	0:0	10	->
water	26:51	0:0	10	LowerBound
water	26:62	0:0	8	;
if	27:12	28:62	6	(LADSPA_IS_HINT_BOUNDED_ABOVE (h -> HintDescriptor ))
cond	27:16	27:62	7	LADSPA_IS_HINT_BOUNDED_ABOVE (h -> HintDescriptor )
call	27:16	27:62	8	LADSPA_IS_HINT_BOUNDED_ABOVE
arg	27:45	27:62	9	h->HintDescriptor
water	27:45	0:0	10	h
op	27:46	0:0	10	->
water	27:48	0:0	10	HintDescriptor
stmts	28:16	28:62	7	
call	28:16	28:61	8	av_log
arg	28:23	28:26	9	ctx
water	28:23	0:0	10	ctx
arg	28:28	28:33	9	level
water	28:28	0:0	10	level
arg	28:35	28:46	9	", max: %f"
water	28:35	0:0	10	", max: %f"
arg	28:48	28:61	9	h->UpperBound
water	28:48	0:0	10	h
op	28:49	0:0	10	->
water	28:51	0:0	10	UpperBound
water	28:62	0:0	8	;
if	29:12	30:62	6	(print)
cond	29:16	29:16	7	print
water	29:16	0:0	8	print
stmts	30:16	30:62	7	
call	30:16	30:61	8	av_log
arg	30:23	30:26	9	ctx
water	30:23	0:0	10	ctx
arg	30:28	30:33	9	level
water	30:28	0:0	10	level
arg	30:35	30:48	9	" (value %f)"
water	30:35	0:0	10	" (value %f)"
arg	30:50	30:61	9	values[ctl]
water	30:50	0:0	10	values
op	30:56	0:0	10	[
water	30:57	0:0	10	ctl
op	30:60	0:0	10	]
water	30:62	0:0	8	;
else	31:12	32:64	6
stmts	31:17	32:64	7	
if	31:17	32:64	8	(LADSPA_IS_HINT_HAS_DEFAULT (h -> HintDescriptor ))
cond	31:21	31:65	9	LADSPA_IS_HINT_HAS_DEFAULT (h -> HintDescriptor )
call	31:21	31:65	10	LADSPA_IS_HINT_HAS_DEFAULT
arg	31:48	31:65	11	h->HintDescriptor
water	31:48	0:0	12	h
op	31:49	0:0	12	->
water	31:51	0:0	12	HintDescriptor
stmts	32:16	32:64	9	
call	32:16	32:63	10	av_log
arg	32:23	32:26	11	ctx
water	32:23	0:0	12	ctx
arg	32:28	32:33	11	level
water	32:28	0:0	12	level
arg	32:35	32:50	11	" (default %f)"
water	32:35	0:0	12	" (default %f)"
arg	32:52	32:63	11	values[ctl]
water	32:52	0:0	12	values
op	32:58	0:0	12	[
water	32:59	0:0	12	ctl
op	32:62	0:0	12	]
water	32:64	0:0	10	;
water	33:8	0:0	6	}
if	34:8	35:59	4	(LADSPA_IS_HINT_SAMPLE_RATE (h -> HintDescriptor ))
cond	34:12	34:56	5	LADSPA_IS_HINT_SAMPLE_RATE (h -> HintDescriptor )
call	34:12	34:56	6	LADSPA_IS_HINT_SAMPLE_RATE
arg	34:39	34:56	7	h->HintDescriptor
water	34:39	0:0	8	h
op	34:40	0:0	8	->
water	34:42	0:0	8	HintDescriptor
stmts	35:12	35:59	5	
call	35:12	35:58	6	av_log
arg	35:19	35:22	7	ctx
water	35:19	0:0	8	ctx
arg	35:24	35:29	7	level
water	35:24	0:0	8	level
arg	35:31	35:58	7	", multiple of sample rate"
water	35:31	0:0	8	", multiple of sample rate"
water	35:59	0:0	6	;
if	36:8	37:53	4	(LADSPA_IS_HINT_LOGARITHMIC (h -> HintDescriptor ))
cond	36:12	36:56	5	LADSPA_IS_HINT_LOGARITHMIC (h -> HintDescriptor )
call	36:12	36:56	6	LADSPA_IS_HINT_LOGARITHMIC
arg	36:39	36:56	7	h->HintDescriptor
water	36:39	0:0	8	h
op	36:40	0:0	8	->
water	36:42	0:0	8	HintDescriptor
stmts	37:12	37:53	5	
call	37:12	37:52	6	av_log
arg	37:19	37:22	7	ctx
water	37:19	0:0	8	ctx
arg	37:24	37:29	7	level
water	37:24	0:0	8	level
arg	37:31	37:52	7	", logarithmic scale"
water	37:31	0:0	8	", logarithmic scale"
water	37:53	0:0	6	;
water	38:4	0:0	4	}
call	39:4	39:28	2	av_log
arg	39:11	39:14	3	ctx
water	39:11	0:0	4	ctx
arg	39:16	39:21	3	level
water	39:16	0:0	4	level
arg	39:23	39:28	3	"]\n"
water	39:23	0:0	4	"]\n"
water	39:29	0:0	2	;
decl	46:4	46:70	0	const LADSPA_PortRangeHint	*h
op	46:34	0:0	0	=
water	46:36	0:0	0	s
op	46:37	0:0	0	->
water	46:39	0:0	0	desc
op	46:43	0:0	0	->
water	46:45	0:0	0	PortRangeHints
op	46:60	0:0	0	+
water	46:62	0:0	0	map
op	46:65	0:0	0	[
water	46:66	0:0	0	ctl
op	46:69	0:0	0	]

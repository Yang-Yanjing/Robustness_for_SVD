func	1:0	50:0	0	static int64_t	asf_read_timestamp
params	1:33	0:0	1	
param	1:34	1:52	2	AVFormatContext *	s
param	1:54	1:70	2	int	stream_index
param	2:34	2:46	2	int64_t *	pos
param	2:48	2:65	2	int64_t	pos_limit
stmnts	0:0	49:14	1	
decl	4:4	4:34	2	ASFContext	*asf
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	priv_data
decl	5:4	5:70	2	int64_t	pkt_pos
op	5:20	0:0	2	=
op	5:22	0:0	2	*
water	5:23	0:0	2	pos
water	5:26	0:0	2	,
decl	5:4	5:70	2	int64_t	pkt_offset
water	5:38	0:0	2	,
decl	5:4	5:70	2	int64_t	dts
op	5:44	0:0	2	=
water	5:46	0:0	2	AV_NOPTS_VALUE
water	5:60	0:0	2	,
decl	5:4	5:70	2	int64_t	data_end
decl	6:4	6:16	2	AVPacket	pkt
decl	7:4	7:9	2	int	n
water	8:4	0:0	2	data_end
op	8:13	0:0	2	=
water	8:15	0:0	2	asf
op	8:18	0:0	2	->
water	8:20	0:0	2	data_offset
op	8:32	0:0	2	+
water	8:34	0:0	2	asf
op	8:37	0:0	2	->
water	8:39	0:0	2	data_size
water	8:48	0:0	2	;
water	9:4	0:0	2	n
op	9:6	0:0	2	=
water	9:8	0:0	2	(
water	9:9	0:0	2	pkt_pos
op	9:17	0:0	2	-
water	9:19	0:0	2	asf
op	9:22	0:0	2	->
water	9:24	0:0	2	first_packet_offset
op	9:44	0:0	2	+
water	9:46	0:0	2	asf
op	9:49	0:0	2	->
water	9:51	0:0	2	packet_size
op	9:63	0:0	2	-
water	9:65	0:0	2	1
water	9:66	0:0	2	)
op	9:68	0:0	2	/
water	10:8	0:0	2	asf
op	10:11	0:0	2	->
water	10:13	0:0	2	packet_size
water	10:24	0:0	2	;
water	11:4	0:0	2	n
op	11:6	0:0	2	=
call	11:8	11:84	2	av_clip
arg	11:16	11:17	3	n
water	11:16	0:0	4	n
arg	11:19	11:20	3	0
water	11:19	0:0	4	0
arg	11:22	11:84	3	((data_end-asf->first_packet_offset)/asf->packet_size-1)
water	11:22	0:0	4	(
water	11:23	0:0	4	(
water	11:24	0:0	4	data_end
op	11:33	0:0	4	-
water	11:35	0:0	4	asf
op	11:38	0:0	4	->
water	11:40	0:0	4	first_packet_offset
water	11:59	0:0	4	)
op	11:61	0:0	4	/
water	11:63	0:0	4	asf
op	11:66	0:0	4	->
water	11:68	0:0	4	packet_size
op	11:80	0:0	4	-
water	11:82	0:0	4	1
water	11:83	0:0	4	)
water	11:85	0:0	2	;
water	12:4	0:0	2	pkt_pos
op	12:12	0:0	2	=
water	12:14	0:0	2	asf
op	12:17	0:0	2	->
water	12:19	0:0	2	first_packet_offset
op	12:39	0:0	2	+
water	12:42	0:0	2	n
op	12:44	0:0	2	*
water	12:46	0:0	2	asf
op	12:49	0:0	2	->
water	12:51	0:0	2	packet_size
water	12:62	0:0	2	;
call	13:4	13:38	2	avio_seek
arg	13:14	13:19	3	s->pb
water	13:14	0:0	4	s
op	13:15	0:0	4	->
water	13:17	0:0	4	pb
arg	13:21	13:28	3	pkt_pos
water	13:21	0:0	4	pkt_pos
arg	13:30	13:38	3	SEEK_SET
water	13:30	0:0	4	SEEK_SET
water	13:39	0:0	2	;
water	14:4	0:0	2	pkt_offset
op	14:15	0:0	2	=
water	14:17	0:0	2	pkt_pos
water	14:24	0:0	2	;
call	15:4	15:24	2	reset_packet_state
arg	15:23	15:24	3	s
water	15:23	0:0	4	s
water	15:25	0:0	2	;
while	16:4	46:4	2	(avio_tell (s -> pb ) < data_end)
cond	16:11	16:30	3	avio_tell (s -> pb ) < data_end
call	16:11	16:26	4	avio_tell
arg	16:21	16:26	5	s->pb
water	16:21	0:0	6	s
op	16:22	0:0	6	->
water	16:24	0:0	6	pb
op	16:28	0:0	4	<
water	16:30	0:0	4	data_end
stmts	16:40	46:4	3	
water	16:40	0:0	4	{
decl	17:8	17:28	4	int	i
water	17:13	0:0	4	,
decl	17:8	17:28	4	int	ret
water	17:18	0:0	4	,
decl	17:8	17:28	4	int	st_found
call	18:8	18:27	4	av_init_packet
arg	18:23	18:27	5	&pkt
op	18:23	0:0	6	&
water	18:24	0:0	6	pkt
water	18:28	0:0	4	;
water	19:8	0:0	4	pkt_offset
op	19:19	0:0	4	=
call	19:21	19:36	4	avio_tell
arg	19:31	19:36	5	s->pb
water	19:31	0:0	6	s
op	19:32	0:0	6	->
water	19:34	0:0	6	pb
water	19:37	0:0	4	;
if	20:8	23:8	4	(( ret =asf_read_packet (s ,& pkt ) ) < 0)
cond	20:12	20:47	5	( ret =asf_read_packet (s ,& pkt ) ) < 0
water	20:12	0:0	6	(
water	20:13	0:0	6	ret
op	20:17	0:0	6	=
call	20:19	20:42	6	asf_read_packet
arg	20:35	20:36	7	s
water	20:35	0:0	8	s
arg	20:38	20:42	7	&pkt
op	20:38	0:0	8	&
water	20:39	0:0	8	pkt
water	20:43	0:0	6	)
op	20:45	0:0	6	<
water	20:47	0:0	6	0
stmts	20:50	23:8	5	
water	20:50	0:0	6	{
water	21:12	0:0	6	dts
op	21:16	0:0	6	=
water	21:18	0:0	6	AV_NOPTS_VALUE
water	21:32	0:0	6	;
return	22:12	22:22	6	ret
water	22:19	0:0	7	ret
water	23:8	0:0	6	}
if	26:8	27:39	4	(( pkt_offset >= ( pkt_pos + asf -> packet_size ) ))
cond	26:12	26:55	5	( pkt_offset >= ( pkt_pos + asf -> packet_size ) )
water	26:12	0:0	6	(
water	26:13	0:0	6	pkt_offset
op	26:24	0:0	6	>=
water	26:27	0:0	6	(
water	26:28	0:0	6	pkt_pos
op	26:36	0:0	6	+
water	26:38	0:0	6	asf
op	26:41	0:0	6	->
water	26:43	0:0	6	packet_size
water	26:54	0:0	6	)
water	26:55	0:0	6	)
stmts	27:12	27:39	5	
water	27:12	0:0	6	pkt_pos
op	27:20	0:0	6	+=
water	27:23	0:0	6	asf
op	27:26	0:0	6	->
water	27:28	0:0	6	packet_size
water	27:39	0:0	6	;
for	28:8	42:8	4	(i = 0 ;i < asf -> nb_streams;i ++)
forinit	28:13	28:18	5	i = 0 ;
water	28:13	0:0	6	i
op	28:15	0:0	6	=
water	28:17	0:0	6	0
water	28:18	0:0	6	;
cond	28:20	28:29	5	i < asf -> nb_streams
water	28:20	0:0	6	i
op	28:22	0:0	6	<
water	28:24	0:0	6	asf
op	28:27	0:0	6	->
water	28:29	0:0	6	nb_streams
forexpr	28:41	28:42	5	i ++
water	28:41	0:0	6	i
op	28:42	0:0	6	++
stmts	28:46	42:8	5	
water	28:46	0:0	6	{
decl	29:12	29:42	6	ASFStream	*st
op	29:26	0:0	6	=
water	29:28	0:0	6	asf
op	29:31	0:0	6	->
water	29:33	0:0	6	asf_st
op	29:39	0:0	6	[
water	29:40	0:0	6	i
op	29:41	0:0	6	]
water	30:12	0:0	6	st_found
op	30:21	0:0	6	=
water	30:23	0:0	6	0
water	30:24	0:0	6	;
if	31:12	41:12	6	(pkt . flags & AV_PKT_FLAG_KEY)
cond	31:16	31:28	7	pkt . flags & AV_PKT_FLAG_KEY
water	31:16	0:0	8	pkt
op	31:19	0:0	8	.
water	31:20	0:0	8	flags
op	31:26	0:0	8	&
water	31:28	0:0	8	AV_PKT_FLAG_KEY
stmts	31:45	41:12	7	
water	31:45	0:0	8	{
water	32:16	0:0	8	dts
op	32:20	0:0	8	=
water	32:22	0:0	8	pkt
op	32:25	0:0	8	.
water	32:26	0:0	8	dts
water	32:29	0:0	8	;
if	33:16	40:16	8	(dts)
cond	33:20	33:20	9	dts
water	33:20	0:0	10	dts
stmts	33:25	40:16	9	
water	33:25	0:0	10	{
call	34:20	35:73	10	av_add_index_entry
arg	34:39	34:67	11	s->streams[pkt.stream_index]
water	34:39	0:0	12	s
op	34:40	0:0	12	->
water	34:42	0:0	12	streams
op	34:49	0:0	12	[
water	34:50	0:0	12	pkt
op	34:53	0:0	12	.
water	34:54	0:0	12	stream_index
op	34:66	0:0	12	]
arg	34:69	34:76	11	pkt_pos
water	34:69	0:0	12	pkt_pos
arg	35:39	35:42	11	dts
water	35:39	0:0	12	dts
arg	35:44	35:52	11	pkt.size
water	35:44	0:0	12	pkt
op	35:47	0:0	12	.
water	35:48	0:0	12	size
arg	35:54	35:55	11	0
water	35:54	0:0	12	0
arg	35:57	35:73	11	AVINDEX_KEYFRAME
water	35:57	0:0	12	AVINDEX_KEYFRAME
water	35:74	0:0	10	;
if	36:20	39:20	10	(stream_index == st -> index)
cond	36:24	36:44	11	stream_index == st -> index
water	36:24	0:0	12	stream_index
op	36:37	0:0	12	==
water	36:40	0:0	12	st
op	36:42	0:0	12	->
water	36:44	0:0	12	index
stmts	36:51	39:20	11	
water	36:51	0:0	12	{
water	37:24	0:0	12	st_found
op	37:33	0:0	12	=
water	37:35	0:0	12	1
water	37:36	0:0	12	;
break	38:24	38:29	12	
water	39:20	0:0	12	}
water	40:16	0:0	10	}
water	41:12	0:0	8	}
water	42:8	0:0	6	}
if	43:8	44:17	4	(st_found)
cond	43:12	43:12	5	st_found
water	43:12	0:0	6	st_found
stmts	44:12	44:17	5	
break	44:12	44:17	6	
call	45:8	45:27	4	av_free_packet
arg	45:23	45:27	5	&pkt
op	45:23	0:0	6	&
water	45:24	0:0	6	pkt
water	45:28	0:0	4	;
water	46:4	0:0	4	}
op	47:4	0:0	2	*
water	47:5	0:0	2	pos
op	47:9	0:0	2	=
water	47:11	0:0	2	pkt_pos
water	47:18	0:0	2	;
call	48:4	48:23	2	av_free_packet
arg	48:19	48:23	3	&pkt
op	48:19	0:0	4	&
water	48:20	0:0	4	pkt
water	48:24	0:0	2	;
return	49:4	49:14	2	dts
water	49:11	0:0	3	dts

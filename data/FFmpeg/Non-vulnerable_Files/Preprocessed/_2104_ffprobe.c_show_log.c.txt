func	1:0	31:0	0	static int	show_log
params	1:19	0:0	1	
param	1:20	1:36	2	WriterContext *	w
param	1:38	1:53	2	int	section_ids
param	1:55	1:69	2	int	section_id
param	1:71	1:84	2	int	log_level
stmnts	0:0	30:12	1	
decl	3:4	3:9	2	int	i
call	4:4	4:33	2	pthread_mutex_lock
arg	4:23	4:33	3	&log_mutex
op	4:23	0:0	4	&
water	4:24	0:0	4	log_mutex
water	4:34	0:0	2	;
if	5:4	8:4	2	(! log_buffer_size)
cond	5:8	5:9	3	! log_buffer_size
op	5:8	0:0	4	!
water	5:9	0:0	4	log_buffer_size
stmts	5:26	8:4	3	
water	5:26	0:0	4	{
call	6:8	6:39	4	pthread_mutex_unlock
arg	6:29	6:39	5	&log_mutex
op	6:29	0:0	6	&
water	6:30	0:0	6	log_mutex
water	6:40	0:0	4	;
return	7:8	7:16	4	0
water	7:15	0:0	5	0
water	8:4	0:0	4	}
call	9:4	9:46	2	writer_print_section_header
arg	9:32	9:33	3	w
water	9:32	0:0	4	w
arg	9:35	9:46	3	section_ids
water	9:35	0:0	4	section_ids
water	9:47	0:0	2	;
for	10:4	26:4	2	(i = 0 ;i < log_buffer_size;i ++)
forinit	10:9	10:12	3	i = 0 ;
water	10:9	0:0	4	i
op	10:10	0:0	4	=
water	10:11	0:0	4	0
water	10:12	0:0	4	;
cond	10:14	10:16	3	i < log_buffer_size
water	10:14	0:0	4	i
op	10:15	0:0	4	<
water	10:16	0:0	4	log_buffer_size
forexpr	10:33	10:34	3	i ++
water	10:33	0:0	4	i
op	10:34	0:0	4	++
stmts	10:38	26:4	3	
water	10:38	0:0	4	{
if	11:8	25:8	4	(log_buffer [ i ] . log_level <= log_level)
cond	11:12	11:39	5	log_buffer [ i ] . log_level <= log_level
water	11:12	0:0	6	log_buffer
op	11:22	0:0	6	[
water	11:23	0:0	6	i
op	11:24	0:0	6	]
op	11:25	0:0	6	.
water	11:26	0:0	6	log_level
op	11:36	0:0	6	<=
water	11:39	0:0	6	log_level
stmts	11:50	25:8	5	
water	11:50	0:0	6	{
call	12:12	12:53	6	writer_print_section_header
arg	12:40	12:41	7	w
water	12:40	0:0	8	w
arg	12:43	12:53	7	section_id
water	12:43	0:0	8	section_id
water	12:54	0:0	6	;
call	13:12	13:59	6	print_str
arg	13:22	13:31	7	"context"
water	13:22	0:0	8	"context"
arg	13:33	13:59	7	log_buffer[i].context_name
water	13:33	0:0	8	log_buffer
op	13:43	0:0	8	[
water	13:44	0:0	8	i
op	13:45	0:0	8	]
op	13:46	0:0	8	.
water	13:47	0:0	8	context_name
water	13:60	0:0	6	;
call	14:12	14:54	6	print_int
arg	14:22	14:29	7	"level"
water	14:22	0:0	8	"level"
arg	14:31	14:54	7	log_buffer[i].log_level
water	14:31	0:0	8	log_buffer
op	14:41	0:0	8	[
water	14:42	0:0	8	i
op	14:43	0:0	8	]
op	14:44	0:0	8	.
water	14:45	0:0	8	log_level
water	14:55	0:0	6	;
call	15:12	15:56	6	print_int
arg	15:22	15:32	7	"category"
water	15:22	0:0	8	"category"
arg	15:34	15:56	7	log_buffer[i].category
water	15:34	0:0	8	log_buffer
op	15:44	0:0	8	[
water	15:45	0:0	8	i
op	15:46	0:0	8	]
op	15:47	0:0	8	.
water	15:48	0:0	8	category
water	15:57	0:0	6	;
if	16:12	19:12	6	(log_buffer [ i ] . parent_name)
cond	16:16	16:30	7	log_buffer [ i ] . parent_name
water	16:16	0:0	8	log_buffer
op	16:26	0:0	8	[
water	16:27	0:0	8	i
op	16:28	0:0	8	]
op	16:29	0:0	8	.
water	16:30	0:0	8	parent_name
stmts	16:43	19:12	7	
water	16:43	0:0	8	{
call	17:16	17:69	8	print_str
arg	17:26	17:42	9	"parent_context"
water	17:26	0:0	10	"parent_context"
arg	17:44	17:69	9	log_buffer[i].parent_name
water	17:44	0:0	10	log_buffer
op	17:54	0:0	10	[
water	17:55	0:0	10	i
op	17:56	0:0	10	]
op	17:57	0:0	10	.
water	17:58	0:0	10	parent_name
water	17:70	0:0	8	;
call	18:16	18:74	8	print_int
arg	18:26	18:43	9	"parent_category"
water	18:26	0:0	10	"parent_category"
arg	18:45	18:74	9	log_buffer[i].parent_category
water	18:45	0:0	10	log_buffer
op	18:55	0:0	10	[
water	18:56	0:0	10	i
op	18:57	0:0	10	]
op	18:58	0:0	10	.
water	18:59	0:0	10	parent_category
water	18:75	0:0	8	;
water	19:12	0:0	8	}
else	19:14	22:12	6
stmts	19:19	22:12	7	
water	19:19	0:0	8	{
call	20:16	20:53	8	print_str_opt
arg	20:30	20:46	9	"parent_context"
water	20:30	0:0	10	"parent_context"
arg	20:48	20:53	9	"N/A"
water	20:48	0:0	10	"N/A"
water	20:54	0:0	8	;
call	21:16	21:54	8	print_str_opt
arg	21:30	21:47	9	"parent_category"
water	21:30	0:0	10	"parent_category"
arg	21:49	21:54	9	"N/A"
water	21:49	0:0	10	"N/A"
water	21:55	0:0	8	;
water	22:12	0:0	8	}
call	23:12	23:58	6	print_str
arg	23:22	23:31	7	"message"
water	23:22	0:0	8	"message"
arg	23:33	23:58	7	log_buffer[i].log_message
water	23:33	0:0	8	log_buffer
op	23:43	0:0	8	[
water	23:44	0:0	8	i
op	23:45	0:0	8	]
op	23:46	0:0	8	.
water	23:47	0:0	8	log_message
water	23:59	0:0	6	;
call	24:12	24:41	6	writer_print_section_footer
arg	24:40	24:41	7	w
water	24:40	0:0	8	w
water	24:42	0:0	6	;
water	25:8	0:0	6	}
water	26:4	0:0	4	}
call	27:4	27:15	2	clear_log
arg	27:14	27:15	3	0
water	27:14	0:0	4	0
water	27:16	0:0	2	;
call	28:4	28:35	2	pthread_mutex_unlock
arg	28:25	28:35	3	&log_mutex
op	28:25	0:0	4	&
water	28:26	0:0	4	log_mutex
water	28:36	0:0	2	;
call	29:4	29:33	2	writer_print_section_footer
arg	29:32	29:33	3	w
water	29:32	0:0	4	w
water	29:34	0:0	2	;
return	30:4	30:12	2	0
water	30:11	0:0	3	0

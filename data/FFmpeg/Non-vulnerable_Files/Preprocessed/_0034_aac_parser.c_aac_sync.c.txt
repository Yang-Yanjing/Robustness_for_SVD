func	1:0	22:0	0	static int	aac_sync
params	1:19	0:0	1	
param	1:20	1:34	2	uint64_t	state
param	1:36	1:64	2	AACAC3ParseContext *	hdr_info
param	2:8	2:29	2	int *	need_next_header
param	2:31	2:51	2	int *	new_frame_start
stmnts	0:0	21:15	1	
decl	4:4	4:22	2	GetBitContext	bits
decl	5:4	5:25	2	AACADTSHeaderInfo	hdr
decl	6:4	6:12	2	int	size
union	7:4	10:4	2	<anonymous_7:4>
decl	8:8	8:20	3	uint64_t	u64
decl	9:8	9:53	3	uint8_t	u8[8+AV_INPUT_BUFFER_PADDING_SIZE]
decl	7:4	10:9	2	<anonymous_7:4>	tmp
water	11:4	0:0	2	tmp
op	11:7	0:0	2	.
water	11:8	0:0	2	u64
op	11:12	0:0	2	=
call	11:14	11:30	2	av_be2ne64
arg	11:25	11:30	3	state
water	11:25	0:0	4	state
water	11:31	0:0	2	;
call	12:4	12:80	2	init_get_bits
arg	12:18	12:23	3	&bits
op	12:18	0:0	4	&
water	12:19	0:0	4	bits
arg	12:25	12:54	3	tmp.u8+8-AAC_ADTS_HEADER_SIZE
water	12:25	0:0	4	tmp
op	12:28	0:0	4	.
water	12:29	0:0	4	u8
op	12:31	0:0	4	+
water	12:32	0:0	4	8
op	12:33	0:0	4	-
water	12:34	0:0	4	AAC_ADTS_HEADER_SIZE
arg	12:56	12:80	3	AAC_ADTS_HEADER_SIZE*8
water	12:56	0:0	4	AAC_ADTS_HEADER_SIZE
op	12:77	0:0	4	*
water	12:79	0:0	4	8
water	12:81	0:0	2	;
if	13:4	14:16	2	(( size =avpriv_aac_parse_header (& bits ,& hdr ) ) < 0)
cond	13:8	13:56	3	( size =avpriv_aac_parse_header (& bits ,& hdr ) ) < 0
water	13:8	0:0	4	(
water	13:9	0:0	4	size
op	13:14	0:0	4	=
call	13:16	13:51	4	avpriv_aac_parse_header
arg	13:40	13:45	5	&bits
op	13:40	0:0	6	&
water	13:41	0:0	6	bits
arg	13:47	13:51	5	&hdr
op	13:47	0:0	6	&
water	13:48	0:0	6	hdr
water	13:52	0:0	4	)
op	13:54	0:0	4	<
water	13:56	0:0	4	0
stmts	14:8	14:16	3	
return	14:8	14:16	4	0
water	14:15	0:0	5	0
op	15:4	0:0	2	*
water	15:5	0:0	2	need_next_header
op	15:22	0:0	2	=
water	15:24	0:0	2	0
water	15:25	0:0	2	;
op	16:4	0:0	2	*
water	16:5	0:0	2	new_frame_start
op	16:22	0:0	2	=
water	16:24	0:0	2	1
water	16:25	0:0	2	;
water	17:4	0:0	2	hdr_info
op	17:12	0:0	2	->
water	17:14	0:0	2	sample_rate
op	17:26	0:0	2	=
water	17:28	0:0	2	hdr
op	17:31	0:0	2	.
water	17:32	0:0	2	sample_rate
water	17:43	0:0	2	;
water	18:4	0:0	2	hdr_info
op	18:12	0:0	2	->
water	18:14	0:0	2	channels
op	18:26	0:0	2	=
water	18:28	0:0	2	ff_mpeg4audio_channels
op	18:50	0:0	2	[
water	18:51	0:0	2	hdr
op	18:54	0:0	2	.
water	18:55	0:0	2	chan_config
op	18:66	0:0	2	]
water	18:67	0:0	2	;
water	19:4	0:0	2	hdr_info
op	19:12	0:0	2	->
water	19:14	0:0	2	samples
op	19:26	0:0	2	=
water	19:28	0:0	2	hdr
op	19:31	0:0	2	.
water	19:32	0:0	2	samples
water	19:39	0:0	2	;
water	20:4	0:0	2	hdr_info
op	20:12	0:0	2	->
water	20:14	0:0	2	bit_rate
op	20:26	0:0	2	=
water	20:28	0:0	2	hdr
op	20:31	0:0	2	.
water	20:32	0:0	2	bit_rate
water	20:40	0:0	2	;
return	21:4	21:15	2	size
water	21:11	0:0	3	size

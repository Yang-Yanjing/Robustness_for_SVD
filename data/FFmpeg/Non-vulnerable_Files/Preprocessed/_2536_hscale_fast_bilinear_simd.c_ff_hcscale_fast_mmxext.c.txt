func	1:0	74:0	0	void	ff_hcscale_fast_mmxext
params	1:27	0:0	1	
param	1:28	1:41	2	SwsContext *	c
param	1:43	1:56	2	int16_t *	dst1
param	1:58	1:71	2	int16_t *	dst2
param	2:33	2:45	2	int	dstWidth
param	2:47	2:66	2	const uint8_t *	src1
param	3:33	3:52	2	const uint8_t *	src2
param	3:54	3:62	2	int	srcW
param	3:64	3:72	2	int	xInc
stmnts	0:0	73:4	1	
decl	5:4	5:41	2	int32_t	*filterPos
op	5:23	0:0	2	=
water	5:25	0:0	2	c
op	5:26	0:0	2	->
water	5:28	0:0	2	hChrFilterPos
decl	6:4	6:38	2	int16_t	*filter
op	6:23	0:0	2	=
water	6:25	0:0	2	c
op	6:26	0:0	2	->
water	6:28	0:0	2	hChrFilter
decl	7:4	7:54	2	void	*mmxextFilterCode
op	7:30	0:0	2	=
water	7:32	0:0	2	c
op	7:33	0:0	2	->
water	7:35	0:0	2	chrMmxextFilterCode
decl	8:4	8:9	2	int	i
call	10:4	10:40	2	DECLARE_ALIGNED
arg	10:20	10:21	3	8
water	10:20	0:0	4	8
arg	10:23	10:31	3	uint64_t
water	10:23	0:0	4	uint64_t
arg	10:33	10:40	3	retsave
water	10:33	0:0	4	retsave
water	10:41	0:0	2	;
call	13:4	13:40	2	DECLARE_ALIGNED
arg	13:20	13:21	3	8
water	13:20	0:0	4	8
arg	13:23	13:31	3	uint64_t
water	13:23	0:0	4	uint64_t
arg	13:33	13:40	3	ebxsave
water	13:33	0:0	4	ebxsave
water	13:41	0:0	2	;
water	16:4	0:0	2	__asm__
water	16:12	0:0	2	volatile
water	16:20	0:0	2	(
water	18:8	0:0	2	"mov          -8(%%rsp), %%"
water	18:36	0:0	2	REG_a
water	18:41	0:0	2	"  \n\t"
water	19:8	0:0	2	"mov          %%"
water	19:25	0:0	2	REG_a
water	19:30	0:0	2	", %7         \n\t"
water	22:8	0:0	2	"mov          %%"
water	22:25	0:0	2	REG_b
water	22:30	0:0	2	", %7         \n\t"
water	25:8	0:0	2	"pxor             %%mm7, %%mm7      \n\t"
water	26:8	0:0	2	"mov                 %0, %%"
water	26:36	0:0	2	REG_c
water	26:41	0:0	2	"  \n\t"
water	27:8	0:0	2	"mov                 %1, %%"
water	27:36	0:0	2	REG_D
water	27:41	0:0	2	"  \n\t"
water	28:8	0:0	2	"mov                 %2, %%"
water	28:36	0:0	2	REG_d
water	28:41	0:0	2	"  \n\t"
water	29:8	0:0	2	"mov                 %3, %%"
water	29:36	0:0	2	REG_b
water	29:41	0:0	2	"  \n\t"
water	30:8	0:0	2	"xor          %%"
water	30:25	0:0	2	REG_a
water	30:30	0:0	2	", %%"
water	30:36	0:0	2	REG_a
water	30:41	0:0	2	"  \n\t"
water	31:8	0:0	2	PREFETCH
water	31:16	0:0	2	"   (%%"
water	31:24	0:0	2	REG_c
water	31:29	0:0	2	")             \n\t"
water	32:8	0:0	2	PREFETCH
water	32:16	0:0	2	" 32(%%"
water	32:24	0:0	2	REG_c
water	32:29	0:0	2	")             \n\t"
water	33:8	0:0	2	PREFETCH
water	33:16	0:0	2	" 64(%%"
water	33:24	0:0	2	REG_c
water	33:29	0:0	2	")             \n\t"
water	34:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	35:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	36:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	37:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	38:8	0:0	2	"xor          %%"
water	38:25	0:0	2	REG_a
water	38:30	0:0	2	", %%"
water	38:36	0:0	2	REG_a
water	38:41	0:0	2	"  \n\t"
water	39:8	0:0	2	"mov                 %5, %%"
water	39:36	0:0	2	REG_c
water	39:41	0:0	2	"  \n\t"
water	40:8	0:0	2	"mov                 %6, %%"
water	40:36	0:0	2	REG_D
water	40:41	0:0	2	"  \n\t"
water	41:8	0:0	2	PREFETCH
water	41:16	0:0	2	"   (%%"
water	41:24	0:0	2	REG_c
water	41:29	0:0	2	")             \n\t"
water	42:8	0:0	2	PREFETCH
water	42:16	0:0	2	" 32(%%"
water	42:24	0:0	2	REG_c
water	42:29	0:0	2	")             \n\t"
water	43:8	0:0	2	PREFETCH
water	43:16	0:0	2	" 64(%%"
water	43:24	0:0	2	REG_c
water	43:29	0:0	2	")             \n\t"
water	44:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	45:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	46:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	47:8	0:0	2	CALL_MMXEXT_FILTER_CODE
water	49:8	0:0	2	"mov                 %7, %%"
water	49:36	0:0	2	REG_a
water	49:41	0:0	2	"  \n\t"
water	50:8	0:0	2	"mov          %%"
water	50:25	0:0	2	REG_a
water	50:30	0:0	2	", -8(%%rsp)  \n\t"
water	53:8	0:0	2	"mov %7, %%"
water	53:20	0:0	2	REG_b
water	53:25	0:0	2	"    \n\t"
op	56:8	0:0	2	::
water	56:11	0:0	2	"m"
water	56:15	0:0	2	(
water	56:16	0:0	2	src1
water	56:20	0:0	2	)
water	56:21	0:0	2	,
water	56:23	0:0	2	"m"
water	56:27	0:0	2	(
water	56:28	0:0	2	dst1
water	56:32	0:0	2	)
water	56:33	0:0	2	,
water	56:35	0:0	2	"m"
water	56:39	0:0	2	(
water	56:40	0:0	2	filter
water	56:46	0:0	2	)
water	56:47	0:0	2	,
water	56:49	0:0	2	"m"
water	56:53	0:0	2	(
water	56:54	0:0	2	filterPos
water	56:63	0:0	2	)
water	56:64	0:0	2	,
water	57:11	0:0	2	"m"
water	57:15	0:0	2	(
water	57:16	0:0	2	mmxextFilterCode
water	57:32	0:0	2	)
water	57:33	0:0	2	,
water	57:35	0:0	2	"m"
water	57:39	0:0	2	(
water	57:40	0:0	2	src2
water	57:44	0:0	2	)
water	57:45	0:0	2	,
water	57:47	0:0	2	"m"
water	57:50	0:0	2	(
water	57:51	0:0	2	dst2
water	57:55	0:0	2	)
water	59:10	0:0	2	,
water	59:11	0:0	2	"m"
water	59:14	0:0	2	(
water	59:15	0:0	2	retsave
water	59:22	0:0	2	)
water	62:10	0:0	2	,
water	62:11	0:0	2	"m"
water	62:15	0:0	2	(
water	62:16	0:0	2	ebxsave
water	62:23	0:0	2	)
water	65:8	0:0	2	:
water	65:10	0:0	2	"%"
water	65:13	0:0	2	REG_a
water	65:18	0:0	2	,
water	65:20	0:0	2	"%"
water	65:23	0:0	2	REG_c
water	65:28	0:0	2	,
water	65:30	0:0	2	"%"
water	65:33	0:0	2	REG_d
water	65:38	0:0	2	,
water	65:40	0:0	2	"%"
water	65:43	0:0	2	REG_S
water	65:48	0:0	2	,
water	65:50	0:0	2	"%"
water	65:53	0:0	2	REG_D
water	67:9	0:0	2	,
water	67:10	0:0	2	"%"
water	67:13	0:0	2	REG_b
water	69:4	0:0	2	)
water	69:5	0:0	2	;
for	70:4	73:4	2	(i = dstWidth - 1 ;( i * xInc ) >> 16 >= srcW - 1;i --)
forinit	70:9	70:21	3	i = dstWidth - 1 ;
water	70:9	0:0	4	i
op	70:10	0:0	4	=
water	70:11	0:0	4	dstWidth
op	70:19	0:0	4	-
water	70:20	0:0	4	1
water	70:21	0:0	4	;
cond	70:23	70:43	3	( i * xInc ) >> 16 >= srcW - 1
water	70:23	0:0	4	(
water	70:24	0:0	4	i
op	70:25	0:0	4	*
water	70:26	0:0	4	xInc
water	70:30	0:0	4	)
op	70:31	0:0	4	>>
water	70:33	0:0	4	16
op	70:36	0:0	4	>=
water	70:38	0:0	4	srcW
op	70:42	0:0	4	-
water	70:43	0:0	4	1
forexpr	70:46	70:47	3	i --
water	70:46	0:0	4	i
op	70:47	0:0	4	--
stmts	70:51	73:4	3	
water	70:51	0:0	4	{
water	71:8	0:0	4	dst1
op	71:12	0:0	4	[
water	71:13	0:0	4	i
op	71:14	0:0	4	]
op	71:16	0:0	4	=
water	71:18	0:0	4	src1
op	71:22	0:0	4	[
water	71:23	0:0	4	srcW
op	71:27	0:0	4	-
water	71:28	0:0	4	1
op	71:29	0:0	4	]
op	71:30	0:0	4	*
water	71:31	0:0	4	128
water	71:34	0:0	4	;
water	72:8	0:0	4	dst2
op	72:12	0:0	4	[
water	72:13	0:0	4	i
op	72:14	0:0	4	]
op	72:16	0:0	4	=
water	72:18	0:0	4	src2
op	72:22	0:0	4	[
water	72:23	0:0	4	srcW
op	72:27	0:0	4	-
water	72:28	0:0	4	1
op	72:29	0:0	4	]
op	72:30	0:0	4	*
water	72:31	0:0	4	128
water	72:34	0:0	4	;
water	73:4	0:0	4	}

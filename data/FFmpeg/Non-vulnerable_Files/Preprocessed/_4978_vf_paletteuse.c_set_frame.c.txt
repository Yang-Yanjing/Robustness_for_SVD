func	1:24	90:0	0	int	set_frame
params	1:37	0:0	1	
param	1:38	1:58	2	PaletteUseContext *	s
param	1:60	1:72	2	AVFrame *	out
param	1:74	1:85	2	AVFrame *	in
param	2:38	2:49	2	int	x_start
param	2:51	2:62	2	int	y_start
param	2:64	2:69	2	int	w
param	2:71	2:76	2	int	h
param	3:38	3:64	2	enum dithering_mode	dither
param	4:38	4:82	2	const enum color_search_method	search_method
stmnts	0:0	89:12	1	
decl	6:4	6:12	2	int	x
water	6:9	0:0	2	,
decl	6:4	6:12	2	int	y
decl	7:4	7:41	2	const struct color_node	*map
op	7:33	0:0	2	=
water	7:35	0:0	2	s
op	7:36	0:0	2	->
water	7:38	0:0	2	map
decl	8:4	8:39	2	struct cache_node	*cache
op	8:29	0:0	2	=
water	8:31	0:0	2	s
op	8:32	0:0	2	->
water	8:34	0:0	2	cache
decl	9:4	9:40	2	const uint32_t	*palette
op	9:28	0:0	2	=
water	9:30	0:0	2	s
op	9:31	0:0	2	->
water	9:33	0:0	2	palette
decl	10:4	10:50	2	const int	src_linesize
op	10:27	0:0	2	=
water	10:29	0:0	2	in
op	10:32	0:0	2	->
water	10:34	0:0	2	linesize
op	10:42	0:0	2	[
water	10:43	0:0	2	0
op	10:44	0:0	2	]
op	10:46	0:0	2	>>
water	10:49	0:0	2	2
decl	11:4	11:45	2	const int	dst_linesize
op	11:27	0:0	2	=
water	11:29	0:0	2	out
op	11:32	0:0	2	->
water	11:34	0:0	2	linesize
op	11:42	0:0	2	[
water	11:43	0:0	2	0
op	11:44	0:0	2	]
decl	12:4	12:69	2	uint32_t	*src
op	12:18	0:0	2	=
water	12:20	0:0	2	(
water	12:21	0:0	2	(
water	12:22	0:0	2	uint32_t
op	12:31	0:0	2	*
water	12:32	0:0	2	)
water	12:33	0:0	2	in
op	12:36	0:0	2	->
water	12:38	0:0	2	data
op	12:42	0:0	2	[
water	12:43	0:0	2	0
op	12:44	0:0	2	]
water	12:45	0:0	2	)
op	12:47	0:0	2	+
water	12:49	0:0	2	y_start
op	12:56	0:0	2	*
water	12:57	0:0	2	src_linesize
decl	13:4	13:69	2	uint8_t	*dst
op	13:18	0:0	2	=
water	13:33	0:0	2	out
op	13:36	0:0	2	->
water	13:38	0:0	2	data
op	13:42	0:0	2	[
water	13:43	0:0	2	0
op	13:44	0:0	2	]
op	13:47	0:0	2	+
water	13:49	0:0	2	y_start
op	13:56	0:0	2	*
water	13:57	0:0	2	dst_linesize
water	14:4	0:0	2	w
op	14:6	0:0	2	+=
water	14:9	0:0	2	x_start
water	14:16	0:0	2	;
water	15:4	0:0	2	h
op	15:6	0:0	2	+=
water	15:9	0:0	2	y_start
water	15:16	0:0	2	;
for	16:4	88:4	2	(y = y_start ;y < h;y ++)
forinit	16:9	16:20	3	y = y_start ;
water	16:9	0:0	4	y
op	16:11	0:0	4	=
water	16:13	0:0	4	y_start
water	16:20	0:0	4	;
cond	16:22	16:26	3	y < h
water	16:22	0:0	4	y
op	16:24	0:0	4	<
water	16:26	0:0	4	h
forexpr	16:29	16:30	3	y ++
water	16:29	0:0	4	y
op	16:30	0:0	4	++
stmts	16:34	88:4	3	
water	16:34	0:0	4	{
for	17:8	85:8	4	(x = x_start ;x < w;x ++)
forinit	17:13	17:24	5	x = x_start ;
water	17:13	0:0	6	x
op	17:15	0:0	6	=
water	17:17	0:0	6	x_start
water	17:24	0:0	6	;
cond	17:26	17:30	5	x < w
water	17:26	0:0	6	x
op	17:28	0:0	6	<
water	17:30	0:0	6	w
forexpr	17:33	17:34	5	x ++
water	17:33	0:0	6	x
op	17:34	0:0	6	++
stmts	17:38	85:8	5	
water	17:38	0:0	6	{
decl	18:12	18:26	6	int	er
water	18:18	0:0	6	,
decl	18:12	18:26	6	int	eg
water	18:22	0:0	6	,
decl	18:12	18:26	6	int	eb
if	19:12	32:12	6	(dither == DITHERING_BAYER)
cond	19:16	19:26	7	dither == DITHERING_BAYER
water	19:16	0:0	8	dither
op	19:23	0:0	8	==
water	19:26	0:0	8	DITHERING_BAYER
stmts	19:43	32:12	7	
water	19:43	0:0	8	{
decl	20:16	20:69	8	const int	d
op	20:28	0:0	8	=
water	20:30	0:0	8	s
op	20:31	0:0	8	->
water	20:33	0:0	8	ordered_dither
op	20:47	0:0	8	[
water	20:48	0:0	8	(
water	20:49	0:0	8	y
op	20:51	0:0	8	&
water	20:53	0:0	8	7
water	20:54	0:0	8	)
op	20:55	0:0	8	<<
water	20:57	0:0	8	3
op	20:59	0:0	8	|
water	20:61	0:0	8	(
water	20:62	0:0	8	x
op	20:64	0:0	8	&
water	20:66	0:0	8	7
water	20:67	0:0	8	)
op	20:68	0:0	8	]
decl	21:16	21:54	8	const uint8_t	r8
op	21:33	0:0	8	=
water	21:35	0:0	8	src
op	21:38	0:0	8	[
water	21:39	0:0	8	x
op	21:40	0:0	8	]
op	21:42	0:0	8	>>
water	21:45	0:0	8	16
op	21:48	0:0	8	&
water	21:50	0:0	8	0
water	21:51	0:0	8	xff
decl	22:16	22:54	8	const uint8_t	g8
op	22:33	0:0	8	=
water	22:35	0:0	8	src
op	22:38	0:0	8	[
water	22:39	0:0	8	x
op	22:40	0:0	8	]
op	22:42	0:0	8	>>
water	22:46	0:0	8	8
op	22:48	0:0	8	&
water	22:50	0:0	8	0
water	22:51	0:0	8	xff
decl	23:16	23:54	8	const uint8_t	b8
op	23:33	0:0	8	=
water	23:35	0:0	8	src
op	23:38	0:0	8	[
water	23:39	0:0	8	x
op	23:40	0:0	8	]
op	23:48	0:0	8	&
water	23:50	0:0	8	0
water	23:51	0:0	8	xff
decl	24:16	24:55	8	const uint8_t	r
op	24:32	0:0	8	=
call	24:34	24:54	9	av_clip_uint8
arg	24:48	24:54	10	r8+d
water	24:48	0:0	11	r8
op	24:51	0:0	11	+
water	24:53	0:0	11	d
decl	25:16	25:55	8	const uint8_t	g
op	25:32	0:0	8	=
call	25:34	25:54	9	av_clip_uint8
arg	25:48	25:54	10	g8+d
water	25:48	0:0	11	g8
op	25:51	0:0	11	+
water	25:53	0:0	11	d
decl	26:16	26:55	8	const uint8_t	b
op	26:32	0:0	8	=
call	26:34	26:54	9	av_clip_uint8
arg	26:48	26:54	10	b8+d
water	26:48	0:0	11	b8
op	26:51	0:0	11	+
water	26:53	0:0	11	d
decl	27:16	27:51	8	const uint32_t	c
op	27:33	0:0	8	=
water	27:35	0:0	8	r
op	27:36	0:0	8	<<
water	27:38	0:0	8	16
op	27:41	0:0	8	|
water	27:43	0:0	8	g
op	27:44	0:0	8	<<
water	27:46	0:0	8	8
op	27:48	0:0	8	|
water	27:50	0:0	8	b
decl	28:16	28:91	8	const int	color
op	28:32	0:0	8	=
call	28:34	28:90	9	color_get
arg	28:44	28:49	10	cache
water	28:44	0:0	11	cache
arg	28:51	28:52	10	c
water	28:51	0:0	11	c
arg	28:54	28:55	10	r
water	28:54	0:0	11	r
arg	28:57	28:58	10	g
water	28:57	0:0	11	g
arg	28:60	28:61	10	b
water	28:60	0:0	11	b
arg	28:63	28:66	10	map
water	28:63	0:0	11	map
arg	28:68	28:75	10	palette
water	28:68	0:0	11	palette
arg	28:77	28:90	10	search_method
water	28:77	0:0	11	search_method
if	29:16	30:32	8	(color < 0)
cond	29:20	29:28	9	color < 0
water	29:20	0:0	10	color
op	29:26	0:0	10	<
water	29:28	0:0	10	0
stmts	30:20	30:32	9	
return	30:20	30:32	10	color
water	30:27	0:0	11	color
water	31:16	0:0	8	dst
op	31:19	0:0	8	[
water	31:20	0:0	8	x
op	31:21	0:0	8	]
op	31:23	0:0	8	=
water	31:25	0:0	8	color
water	31:30	0:0	8	;
water	32:12	0:0	8	}
else	32:14	41:12	6
stmts	32:19	41:12	7	
if	32:19	41:12	8	(dither == DITHERING_HECKBERT)
cond	32:23	32:33	9	dither == DITHERING_HECKBERT
water	32:23	0:0	10	dither
op	32:30	0:0	10	==
water	32:33	0:0	10	DITHERING_HECKBERT
stmts	32:53	41:12	9	
water	32:53	0:0	10	{
decl	33:16	33:61	10	const int	right
op	33:32	0:0	10	=
water	33:34	0:0	10	x
op	33:36	0:0	10	<
water	33:38	0:0	10	w
op	33:40	0:0	10	-
water	33:42	0:0	10	1
water	33:43	0:0	10	,
decl	33:16	33:61	10	const int	down
op	33:50	0:0	10	=
water	33:52	0:0	10	y
op	33:54	0:0	10	<
water	33:56	0:0	10	h
op	33:58	0:0	10	-
water	33:60	0:0	10	1
decl	34:16	34:110	10	const int	color
op	34:32	0:0	10	=
call	34:34	34:109	11	get_dst_color_err
arg	34:52	34:57	12	cache
water	34:52	0:0	13	cache
arg	34:59	34:65	12	src[x]
water	34:59	0:0	13	src
op	34:62	0:0	13	[
water	34:63	0:0	13	x
op	34:64	0:0	13	]
arg	34:67	34:70	12	map
water	34:67	0:0	13	map
arg	34:72	34:79	12	palette
water	34:72	0:0	13	palette
arg	34:81	34:84	12	&er
op	34:81	0:0	13	&
water	34:82	0:0	13	er
arg	34:86	34:89	12	&eg
op	34:86	0:0	13	&
water	34:87	0:0	13	eg
arg	34:91	34:94	12	&eb
op	34:91	0:0	13	&
water	34:92	0:0	13	eb
arg	34:96	34:109	12	search_method
water	34:96	0:0	13	search_method
if	35:16	36:32	10	(color < 0)
cond	35:20	35:28	11	color < 0
water	35:20	0:0	12	color
op	35:26	0:0	12	<
water	35:28	0:0	12	0
stmts	36:20	36:32	11	
return	36:20	36:32	12	color
water	36:27	0:0	13	color
water	37:16	0:0	10	dst
op	37:19	0:0	10	[
water	37:20	0:0	10	x
op	37:21	0:0	10	]
op	37:23	0:0	10	=
water	37:25	0:0	10	color
water	37:30	0:0	10	;
if	38:16	38:120	10	(right)
cond	38:20	38:20	11	right
water	38:20	0:0	12	right
stmts	38:35	38:120	11	
water	38:35	0:0	12	src
op	38:38	0:0	12	[
water	38:54	0:0	12	x
op	38:56	0:0	12	+
water	38:58	0:0	12	1
op	38:59	0:0	12	]
op	38:61	0:0	12	=
call	38:63	38:119	12	dither_color
arg	38:76	38:101	13	src[x+1]
water	38:76	0:0	14	src
op	38:79	0:0	14	[
water	38:95	0:0	14	x
op	38:97	0:0	14	+
water	38:99	0:0	14	1
op	38:100	0:0	14	]
arg	38:103	38:105	13	er
water	38:103	0:0	14	er
arg	38:107	38:109	13	eg
water	38:107	0:0	14	eg
arg	38:111	38:113	13	eb
water	38:111	0:0	14	eb
arg	38:115	38:116	13	3
water	38:115	0:0	14	3
arg	38:118	38:119	13	3
water	38:118	0:0	14	3
water	38:120	0:0	12	;
if	39:16	39:120	10	(down)
cond	39:29	39:29	11	down
water	39:29	0:0	12	down
stmts	39:35	39:120	11	
water	39:35	0:0	12	src
op	39:38	0:0	12	[
water	39:39	0:0	12	src_linesize
op	39:52	0:0	12	+
water	39:54	0:0	12	x
op	39:59	0:0	12	]
op	39:61	0:0	12	=
call	39:63	39:119	12	dither_color
arg	39:76	39:101	13	src[src_linesize+x]
water	39:76	0:0	14	src
op	39:79	0:0	14	[
water	39:80	0:0	14	src_linesize
op	39:93	0:0	14	+
water	39:95	0:0	14	x
op	39:100	0:0	14	]
arg	39:103	39:105	13	er
water	39:103	0:0	14	er
arg	39:107	39:109	13	eg
water	39:107	0:0	14	eg
arg	39:111	39:113	13	eb
water	39:111	0:0	14	eb
arg	39:115	39:116	13	3
water	39:115	0:0	14	3
arg	39:118	39:119	13	3
water	39:118	0:0	14	3
water	39:120	0:0	12	;
if	40:16	40:120	10	(right && down)
cond	40:20	40:29	11	right && down
water	40:20	0:0	12	right
op	40:26	0:0	12	&&
water	40:29	0:0	12	down
stmts	40:35	40:120	11	
water	40:35	0:0	12	src
op	40:38	0:0	12	[
water	40:39	0:0	12	src_linesize
op	40:52	0:0	12	+
water	40:54	0:0	12	x
op	40:56	0:0	12	+
water	40:58	0:0	12	1
op	40:59	0:0	12	]
op	40:61	0:0	12	=
call	40:63	40:119	12	dither_color
arg	40:76	40:101	13	src[src_linesize+x+1]
water	40:76	0:0	14	src
op	40:79	0:0	14	[
water	40:80	0:0	14	src_linesize
op	40:93	0:0	14	+
water	40:95	0:0	14	x
op	40:97	0:0	14	+
water	40:99	0:0	14	1
op	40:100	0:0	14	]
arg	40:103	40:105	13	er
water	40:103	0:0	14	er
arg	40:107	40:109	13	eg
water	40:107	0:0	14	eg
arg	40:111	40:113	13	eb
water	40:111	0:0	14	eb
arg	40:115	40:116	13	2
water	40:115	0:0	14	2
arg	40:118	40:119	13	3
water	40:118	0:0	14	3
water	40:120	0:0	12	;
water	41:12	0:0	10	}
else	41:14	51:12	6
stmts	41:19	51:12	7	
if	41:19	51:12	8	(dither == DITHERING_FLOYD_STEINBERG)
cond	41:23	41:33	9	dither == DITHERING_FLOYD_STEINBERG
water	41:23	0:0	10	dither
op	41:30	0:0	10	==
water	41:33	0:0	10	DITHERING_FLOYD_STEINBERG
stmts	41:60	51:12	9	
water	41:60	0:0	10	{
decl	42:16	42:81	10	const int	right
op	42:32	0:0	10	=
water	42:34	0:0	10	x
op	42:36	0:0	10	<
water	42:38	0:0	10	w
op	42:40	0:0	10	-
water	42:42	0:0	10	1
water	42:43	0:0	10	,
decl	42:16	42:81	10	const int	down
op	42:50	0:0	10	=
water	42:52	0:0	10	y
op	42:54	0:0	10	<
water	42:56	0:0	10	h
op	42:58	0:0	10	-
water	42:60	0:0	10	1
water	42:61	0:0	10	,
decl	42:16	42:81	10	const int	left
op	42:68	0:0	10	=
water	42:70	0:0	10	x
op	42:72	0:0	10	>
water	42:74	0:0	10	x_start
decl	43:16	43:110	10	const int	color
op	43:32	0:0	10	=
call	43:34	43:109	11	get_dst_color_err
arg	43:52	43:57	12	cache
water	43:52	0:0	13	cache
arg	43:59	43:65	12	src[x]
water	43:59	0:0	13	src
op	43:62	0:0	13	[
water	43:63	0:0	13	x
op	43:64	0:0	13	]
arg	43:67	43:70	12	map
water	43:67	0:0	13	map
arg	43:72	43:79	12	palette
water	43:72	0:0	13	palette
arg	43:81	43:84	12	&er
op	43:81	0:0	13	&
water	43:82	0:0	13	er
arg	43:86	43:89	12	&eg
op	43:86	0:0	13	&
water	43:87	0:0	13	eg
arg	43:91	43:94	12	&eb
op	43:91	0:0	13	&
water	43:92	0:0	13	eb
arg	43:96	43:109	12	search_method
water	43:96	0:0	13	search_method
if	44:16	45:32	10	(color < 0)
cond	44:20	44:28	11	color < 0
water	44:20	0:0	12	color
op	44:26	0:0	12	<
water	44:28	0:0	12	0
stmts	45:20	45:32	11	
return	45:20	45:32	12	color
water	45:27	0:0	13	color
water	46:16	0:0	10	dst
op	46:19	0:0	10	[
water	46:20	0:0	10	x
op	46:21	0:0	10	]
op	46:23	0:0	10	=
water	46:25	0:0	10	color
water	46:30	0:0	10	;
if	47:16	47:120	10	(right)
cond	47:20	47:20	11	right
water	47:20	0:0	12	right
stmts	47:35	47:120	11	
water	47:35	0:0	12	src
op	47:38	0:0	12	[
water	47:54	0:0	12	x
op	47:56	0:0	12	+
water	47:58	0:0	12	1
op	47:59	0:0	12	]
op	47:61	0:0	12	=
call	47:63	47:119	12	dither_color
arg	47:76	47:101	13	src[x+1]
water	47:76	0:0	14	src
op	47:79	0:0	14	[
water	47:95	0:0	14	x
op	47:97	0:0	14	+
water	47:99	0:0	14	1
op	47:100	0:0	14	]
arg	47:103	47:105	13	er
water	47:103	0:0	14	er
arg	47:107	47:109	13	eg
water	47:107	0:0	14	eg
arg	47:111	47:113	13	eb
water	47:111	0:0	14	eb
arg	47:115	47:116	13	7
water	47:115	0:0	14	7
arg	47:118	47:119	13	4
water	47:118	0:0	14	4
water	47:120	0:0	12	;
if	48:16	48:120	10	(left && down)
cond	48:20	48:29	11	left && down
water	48:20	0:0	12	left
op	48:26	0:0	12	&&
water	48:29	0:0	12	down
stmts	48:35	48:120	11	
water	48:35	0:0	12	src
op	48:38	0:0	12	[
water	48:39	0:0	12	src_linesize
op	48:52	0:0	12	+
water	48:54	0:0	12	x
op	48:56	0:0	12	-
water	48:58	0:0	12	1
op	48:59	0:0	12	]
op	48:61	0:0	12	=
call	48:63	48:119	12	dither_color
arg	48:76	48:101	13	src[src_linesize+x-1]
water	48:76	0:0	14	src
op	48:79	0:0	14	[
water	48:80	0:0	14	src_linesize
op	48:93	0:0	14	+
water	48:95	0:0	14	x
op	48:97	0:0	14	-
water	48:99	0:0	14	1
op	48:100	0:0	14	]
arg	48:103	48:105	13	er
water	48:103	0:0	14	er
arg	48:107	48:109	13	eg
water	48:107	0:0	14	eg
arg	48:111	48:113	13	eb
water	48:111	0:0	14	eb
arg	48:115	48:116	13	3
water	48:115	0:0	14	3
arg	48:118	48:119	13	4
water	48:118	0:0	14	4
water	48:120	0:0	12	;
if	49:16	49:120	10	(down)
cond	49:29	49:29	11	down
water	49:29	0:0	12	down
stmts	49:35	49:120	11	
water	49:35	0:0	12	src
op	49:38	0:0	12	[
water	49:39	0:0	12	src_linesize
op	49:52	0:0	12	+
water	49:54	0:0	12	x
op	49:59	0:0	12	]
op	49:61	0:0	12	=
call	49:63	49:119	12	dither_color
arg	49:76	49:101	13	src[src_linesize+x]
water	49:76	0:0	14	src
op	49:79	0:0	14	[
water	49:80	0:0	14	src_linesize
op	49:93	0:0	14	+
water	49:95	0:0	14	x
op	49:100	0:0	14	]
arg	49:103	49:105	13	er
water	49:103	0:0	14	er
arg	49:107	49:109	13	eg
water	49:107	0:0	14	eg
arg	49:111	49:113	13	eb
water	49:111	0:0	14	eb
arg	49:115	49:116	13	5
water	49:115	0:0	14	5
arg	49:118	49:119	13	4
water	49:118	0:0	14	4
water	49:120	0:0	12	;
if	50:16	50:120	10	(right && down)
cond	50:20	50:29	11	right && down
water	50:20	0:0	12	right
op	50:26	0:0	12	&&
water	50:29	0:0	12	down
stmts	50:35	50:120	11	
water	50:35	0:0	12	src
op	50:38	0:0	12	[
water	50:39	0:0	12	src_linesize
op	50:52	0:0	12	+
water	50:54	0:0	12	x
op	50:56	0:0	12	+
water	50:58	0:0	12	1
op	50:59	0:0	12	]
op	50:61	0:0	12	=
call	50:63	50:119	12	dither_color
arg	50:76	50:101	13	src[src_linesize+x+1]
water	50:76	0:0	14	src
op	50:79	0:0	14	[
water	50:80	0:0	14	src_linesize
op	50:93	0:0	14	+
water	50:95	0:0	14	x
op	50:97	0:0	14	+
water	50:99	0:0	14	1
op	50:100	0:0	14	]
arg	50:103	50:105	13	er
water	50:103	0:0	14	er
arg	50:107	50:109	13	eg
water	50:107	0:0	14	eg
arg	50:111	50:113	13	eb
water	50:111	0:0	14	eb
arg	50:115	50:116	13	1
water	50:115	0:0	14	1
arg	50:118	50:119	13	4
water	50:118	0:0	14	4
water	50:120	0:0	12	;
water	51:12	0:0	10	}
else	51:14	67:12	6
stmts	51:19	67:12	7	
if	51:19	67:12	8	(dither == DITHERING_SIERRA2)
cond	51:23	51:33	9	dither == DITHERING_SIERRA2
water	51:23	0:0	10	dither
op	51:30	0:0	10	==
water	51:33	0:0	10	DITHERING_SIERRA2
stmts	51:52	67:12	9	
water	51:52	0:0	10	{
decl	52:16	52:84	10	const int	right
op	52:33	0:0	10	=
water	52:35	0:0	10	x
op	52:37	0:0	10	<
water	52:39	0:0	10	w
op	52:41	0:0	10	-
water	52:43	0:0	10	1
water	52:44	0:0	10	,
decl	52:16	52:84	10	const int	down
op	52:52	0:0	10	=
water	52:54	0:0	10	y
op	52:56	0:0	10	<
water	52:58	0:0	10	h
op	52:60	0:0	10	-
water	52:62	0:0	10	1
water	52:63	0:0	10	,
decl	52:16	52:84	10	const int	left
op	52:71	0:0	10	=
water	52:73	0:0	10	x
op	52:75	0:0	10	>
water	52:77	0:0	10	x_start
decl	53:16	53:88	10	const int	right2
op	53:33	0:0	10	=
water	53:35	0:0	10	x
op	53:37	0:0	10	<
water	53:39	0:0	10	w
op	53:41	0:0	10	-
water	53:43	0:0	10	2
water	53:44	0:0	10	,
decl	53:16	53:88	10	const int	left2
op	53:71	0:0	10	=
water	53:73	0:0	10	x
op	53:75	0:0	10	>
water	53:77	0:0	10	x_start
op	53:85	0:0	10	+
water	53:87	0:0	10	1
decl	54:16	54:110	10	const int	color
op	54:32	0:0	10	=
call	54:34	54:109	11	get_dst_color_err
arg	54:52	54:57	12	cache
water	54:52	0:0	13	cache
arg	54:59	54:65	12	src[x]
water	54:59	0:0	13	src
op	54:62	0:0	13	[
water	54:63	0:0	13	x
op	54:64	0:0	13	]
arg	54:67	54:70	12	map
water	54:67	0:0	13	map
arg	54:72	54:79	12	palette
water	54:72	0:0	13	palette
arg	54:81	54:84	12	&er
op	54:81	0:0	13	&
water	54:82	0:0	13	er
arg	54:86	54:89	12	&eg
op	54:86	0:0	13	&
water	54:87	0:0	13	eg
arg	54:91	54:94	12	&eb
op	54:91	0:0	13	&
water	54:92	0:0	13	eb
arg	54:96	54:109	12	search_method
water	54:96	0:0	13	search_method
if	55:16	56:32	10	(color < 0)
cond	55:20	55:28	11	color < 0
water	55:20	0:0	12	color
op	55:26	0:0	12	<
water	55:28	0:0	12	0
stmts	56:20	56:32	11	
return	56:20	56:32	12	color
water	56:27	0:0	13	color
water	57:16	0:0	10	dst
op	57:19	0:0	10	[
water	57:20	0:0	10	x
op	57:21	0:0	10	]
op	57:23	0:0	10	=
water	57:25	0:0	10	color
water	57:30	0:0	10	;
if	58:16	58:125	10	(right)
cond	58:20	58:20	11	right
water	58:20	0:0	12	right
stmts	58:36	58:125	11	
water	58:36	0:0	12	src
op	58:39	0:0	12	[
water	58:57	0:0	12	x
op	58:59	0:0	12	+
water	58:61	0:0	12	1
op	58:62	0:0	12	]
op	58:64	0:0	12	=
call	58:66	58:124	12	dither_color
arg	58:79	58:106	13	src[x+1]
water	58:79	0:0	14	src
op	58:82	0:0	14	[
water	58:100	0:0	14	x
op	58:102	0:0	14	+
water	58:104	0:0	14	1
op	58:105	0:0	14	]
arg	58:108	58:110	13	er
water	58:108	0:0	14	er
arg	58:112	58:114	13	eg
water	58:112	0:0	14	eg
arg	58:116	58:118	13	eb
water	58:116	0:0	14	eb
arg	58:120	58:121	13	4
water	58:120	0:0	14	4
arg	58:123	58:124	13	4
water	58:123	0:0	14	4
water	58:125	0:0	12	;
if	59:16	59:125	10	(right2)
cond	59:20	59:20	11	right2
water	59:20	0:0	12	right2
stmts	59:36	59:125	11	
water	59:36	0:0	12	src
op	59:39	0:0	12	[
water	59:57	0:0	12	x
op	59:59	0:0	12	+
water	59:61	0:0	12	2
op	59:62	0:0	12	]
op	59:64	0:0	12	=
call	59:66	59:124	12	dither_color
arg	59:79	59:106	13	src[x+2]
water	59:79	0:0	14	src
op	59:82	0:0	14	[
water	59:100	0:0	14	x
op	59:102	0:0	14	+
water	59:104	0:0	14	2
op	59:105	0:0	14	]
arg	59:108	59:110	13	er
water	59:108	0:0	14	er
arg	59:112	59:114	13	eg
water	59:112	0:0	14	eg
arg	59:116	59:118	13	eb
water	59:116	0:0	14	eb
arg	59:120	59:121	13	3
water	59:120	0:0	14	3
arg	59:123	59:124	13	4
water	59:123	0:0	14	4
water	59:125	0:0	12	;
if	60:16	66:16	10	(down)
cond	60:20	60:20	11	down
water	60:20	0:0	12	down
stmts	60:26	66:16	11	
water	60:26	0:0	12	{
if	61:20	61:125	12	(left2)
cond	61:24	61:24	13	left2
water	61:24	0:0	14	left2
stmts	61:36	61:125	13	
water	61:36	0:0	14	src
op	61:39	0:0	14	[
water	61:42	0:0	14	src_linesize
op	61:55	0:0	14	+
water	61:57	0:0	14	x
op	61:59	0:0	14	-
water	61:61	0:0	14	2
op	61:62	0:0	14	]
op	61:64	0:0	14	=
call	61:66	61:124	14	dither_color
arg	61:79	61:106	15	src[src_linesize+x-2]
water	61:79	0:0	16	src
op	61:82	0:0	16	[
water	61:85	0:0	16	src_linesize
op	61:98	0:0	16	+
water	61:100	0:0	16	x
op	61:102	0:0	16	-
water	61:104	0:0	16	2
op	61:105	0:0	16	]
arg	61:108	61:110	15	er
water	61:108	0:0	16	er
arg	61:112	61:114	15	eg
water	61:112	0:0	16	eg
arg	61:116	61:118	15	eb
water	61:116	0:0	16	eb
arg	61:120	61:121	15	1
water	61:120	0:0	16	1
arg	61:123	61:124	15	4
water	61:123	0:0	16	4
water	61:125	0:0	14	;
if	62:20	62:125	12	(left)
cond	62:24	62:24	13	left
water	62:24	0:0	14	left
stmts	62:36	62:125	13	
water	62:36	0:0	14	src
op	62:39	0:0	14	[
water	62:42	0:0	14	src_linesize
op	62:55	0:0	14	+
water	62:57	0:0	14	x
op	62:59	0:0	14	-
water	62:61	0:0	14	1
op	62:62	0:0	14	]
op	62:64	0:0	14	=
call	62:66	62:124	14	dither_color
arg	62:79	62:106	15	src[src_linesize+x-1]
water	62:79	0:0	16	src
op	62:82	0:0	16	[
water	62:85	0:0	16	src_linesize
op	62:98	0:0	16	+
water	62:100	0:0	16	x
op	62:102	0:0	16	-
water	62:104	0:0	16	1
op	62:105	0:0	16	]
arg	62:108	62:110	15	er
water	62:108	0:0	16	er
arg	62:112	62:114	15	eg
water	62:112	0:0	16	eg
arg	62:116	62:118	15	eb
water	62:116	0:0	16	eb
arg	62:120	62:121	15	2
water	62:120	0:0	16	2
arg	62:123	62:124	15	4
water	62:123	0:0	16	4
water	62:125	0:0	14	;
water	63:36	0:0	12	src
op	63:39	0:0	12	[
water	63:42	0:0	12	src_linesize
op	63:55	0:0	12	+
water	63:57	0:0	12	x
op	63:62	0:0	12	]
op	63:64	0:0	12	=
call	63:66	63:124	12	dither_color
arg	63:79	63:106	13	src[src_linesize+x]
water	63:79	0:0	14	src
op	63:82	0:0	14	[
water	63:85	0:0	14	src_linesize
op	63:98	0:0	14	+
water	63:100	0:0	14	x
op	63:105	0:0	14	]
arg	63:108	63:110	13	er
water	63:108	0:0	14	er
arg	63:112	63:114	13	eg
water	63:112	0:0	14	eg
arg	63:116	63:118	13	eb
water	63:116	0:0	14	eb
arg	63:120	63:121	13	3
water	63:120	0:0	14	3
arg	63:123	63:124	13	4
water	63:123	0:0	14	4
water	63:125	0:0	12	;
if	64:20	64:125	12	(right)
cond	64:24	64:24	13	right
water	64:24	0:0	14	right
stmts	64:36	64:125	13	
water	64:36	0:0	14	src
op	64:39	0:0	14	[
water	64:42	0:0	14	src_linesize
op	64:55	0:0	14	+
water	64:57	0:0	14	x
op	64:59	0:0	14	+
water	64:61	0:0	14	1
op	64:62	0:0	14	]
op	64:64	0:0	14	=
call	64:66	64:124	14	dither_color
arg	64:79	64:106	15	src[src_linesize+x+1]
water	64:79	0:0	16	src
op	64:82	0:0	16	[
water	64:85	0:0	16	src_linesize
op	64:98	0:0	16	+
water	64:100	0:0	16	x
op	64:102	0:0	16	+
water	64:104	0:0	16	1
op	64:105	0:0	16	]
arg	64:108	64:110	15	er
water	64:108	0:0	16	er
arg	64:112	64:114	15	eg
water	64:112	0:0	16	eg
arg	64:116	64:118	15	eb
water	64:116	0:0	16	eb
arg	64:120	64:121	15	2
water	64:120	0:0	16	2
arg	64:123	64:124	15	4
water	64:123	0:0	16	4
water	64:125	0:0	14	;
if	65:20	65:125	12	(right2)
cond	65:24	65:24	13	right2
water	65:24	0:0	14	right2
stmts	65:36	65:125	13	
water	65:36	0:0	14	src
op	65:39	0:0	14	[
water	65:42	0:0	14	src_linesize
op	65:55	0:0	14	+
water	65:57	0:0	14	x
op	65:59	0:0	14	+
water	65:61	0:0	14	2
op	65:62	0:0	14	]
op	65:64	0:0	14	=
call	65:66	65:124	14	dither_color
arg	65:79	65:106	15	src[src_linesize+x+2]
water	65:79	0:0	16	src
op	65:82	0:0	16	[
water	65:85	0:0	16	src_linesize
op	65:98	0:0	16	+
water	65:100	0:0	16	x
op	65:102	0:0	16	+
water	65:104	0:0	16	2
op	65:105	0:0	16	]
arg	65:108	65:110	15	er
water	65:108	0:0	16	er
arg	65:112	65:114	15	eg
water	65:112	0:0	16	eg
arg	65:116	65:118	15	eb
water	65:116	0:0	16	eb
arg	65:120	65:121	15	1
water	65:120	0:0	16	1
arg	65:123	65:124	15	4
water	65:123	0:0	16	4
water	65:125	0:0	14	;
water	66:16	0:0	12	}
water	67:12	0:0	10	}
else	67:14	76:12	6
stmts	67:19	76:12	7	
if	67:19	76:12	8	(dither == DITHERING_SIERRA2_4A)
cond	67:23	67:33	9	dither == DITHERING_SIERRA2_4A
water	67:23	0:0	10	dither
op	67:30	0:0	10	==
water	67:33	0:0	10	DITHERING_SIERRA2_4A
stmts	67:55	76:12	9	
water	67:55	0:0	10	{
decl	68:16	68:81	10	const int	right
op	68:32	0:0	10	=
water	68:34	0:0	10	x
op	68:36	0:0	10	<
water	68:38	0:0	10	w
op	68:40	0:0	10	-
water	68:42	0:0	10	1
water	68:43	0:0	10	,
decl	68:16	68:81	10	const int	down
op	68:50	0:0	10	=
water	68:52	0:0	10	y
op	68:54	0:0	10	<
water	68:56	0:0	10	h
op	68:58	0:0	10	-
water	68:60	0:0	10	1
water	68:61	0:0	10	,
decl	68:16	68:81	10	const int	left
op	68:68	0:0	10	=
water	68:70	0:0	10	x
op	68:72	0:0	10	>
water	68:74	0:0	10	x_start
decl	69:16	69:110	10	const int	color
op	69:32	0:0	10	=
call	69:34	69:109	11	get_dst_color_err
arg	69:52	69:57	12	cache
water	69:52	0:0	13	cache
arg	69:59	69:65	12	src[x]
water	69:59	0:0	13	src
op	69:62	0:0	13	[
water	69:63	0:0	13	x
op	69:64	0:0	13	]
arg	69:67	69:70	12	map
water	69:67	0:0	13	map
arg	69:72	69:79	12	palette
water	69:72	0:0	13	palette
arg	69:81	69:84	12	&er
op	69:81	0:0	13	&
water	69:82	0:0	13	er
arg	69:86	69:89	12	&eg
op	69:86	0:0	13	&
water	69:87	0:0	13	eg
arg	69:91	69:94	12	&eb
op	69:91	0:0	13	&
water	69:92	0:0	13	eb
arg	69:96	69:109	12	search_method
water	69:96	0:0	13	search_method
if	70:16	71:32	10	(color < 0)
cond	70:20	70:28	11	color < 0
water	70:20	0:0	12	color
op	70:26	0:0	12	<
water	70:28	0:0	12	0
stmts	71:20	71:32	11	
return	71:20	71:32	12	color
water	71:27	0:0	13	color
water	72:16	0:0	10	dst
op	72:19	0:0	10	[
water	72:20	0:0	10	x
op	72:21	0:0	10	]
op	72:23	0:0	10	=
water	72:25	0:0	10	color
water	72:30	0:0	10	;
if	73:16	73:120	10	(right)
cond	73:20	73:20	11	right
water	73:20	0:0	12	right
stmts	73:35	73:120	11	
water	73:35	0:0	12	src
op	73:38	0:0	12	[
water	73:54	0:0	12	x
op	73:56	0:0	12	+
water	73:58	0:0	12	1
op	73:59	0:0	12	]
op	73:61	0:0	12	=
call	73:63	73:119	12	dither_color
arg	73:76	73:101	13	src[x+1]
water	73:76	0:0	14	src
op	73:79	0:0	14	[
water	73:95	0:0	14	x
op	73:97	0:0	14	+
water	73:99	0:0	14	1
op	73:100	0:0	14	]
arg	73:103	73:105	13	er
water	73:103	0:0	14	er
arg	73:107	73:109	13	eg
water	73:107	0:0	14	eg
arg	73:111	73:113	13	eb
water	73:111	0:0	14	eb
arg	73:115	73:116	13	2
water	73:115	0:0	14	2
arg	73:118	73:119	13	2
water	73:118	0:0	14	2
water	73:120	0:0	12	;
if	74:16	74:120	10	(left && down)
cond	74:20	74:29	11	left && down
water	74:20	0:0	12	left
op	74:26	0:0	12	&&
water	74:29	0:0	12	down
stmts	74:35	74:120	11	
water	74:35	0:0	12	src
op	74:38	0:0	12	[
water	74:39	0:0	12	src_linesize
op	74:52	0:0	12	+
water	74:54	0:0	12	x
op	74:56	0:0	12	-
water	74:58	0:0	12	1
op	74:59	0:0	12	]
op	74:61	0:0	12	=
call	74:63	74:119	12	dither_color
arg	74:76	74:101	13	src[src_linesize+x-1]
water	74:76	0:0	14	src
op	74:79	0:0	14	[
water	74:80	0:0	14	src_linesize
op	74:93	0:0	14	+
water	74:95	0:0	14	x
op	74:97	0:0	14	-
water	74:99	0:0	14	1
op	74:100	0:0	14	]
arg	74:103	74:105	13	er
water	74:103	0:0	14	er
arg	74:107	74:109	13	eg
water	74:107	0:0	14	eg
arg	74:111	74:113	13	eb
water	74:111	0:0	14	eb
arg	74:115	74:116	13	1
water	74:115	0:0	14	1
arg	74:118	74:119	13	2
water	74:118	0:0	14	2
water	74:120	0:0	12	;
if	75:16	75:120	10	(down)
cond	75:29	75:29	11	down
water	75:29	0:0	12	down
stmts	75:35	75:120	11	
water	75:35	0:0	12	src
op	75:38	0:0	12	[
water	75:39	0:0	12	src_linesize
op	75:52	0:0	12	+
water	75:54	0:0	12	x
op	75:59	0:0	12	]
op	75:61	0:0	12	=
call	75:63	75:119	12	dither_color
arg	75:76	75:101	13	src[src_linesize+x]
water	75:76	0:0	14	src
op	75:79	0:0	14	[
water	75:80	0:0	14	src_linesize
op	75:93	0:0	14	+
water	75:95	0:0	14	x
op	75:100	0:0	14	]
arg	75:103	75:105	13	er
water	75:103	0:0	14	er
arg	75:107	75:109	13	eg
water	75:107	0:0	14	eg
arg	75:111	75:113	13	eb
water	75:111	0:0	14	eb
arg	75:115	75:116	13	1
water	75:115	0:0	14	1
arg	75:118	75:119	13	2
water	75:118	0:0	14	2
water	75:120	0:0	12	;
water	76:12	0:0	10	}
else	76:14	84:12	6
stmts	76:19	84:12	7	
water	76:19	0:0	8	{
decl	77:16	77:53	8	const uint8_t	r
op	77:32	0:0	8	=
water	77:34	0:0	8	src
op	77:37	0:0	8	[
water	77:38	0:0	8	x
op	77:39	0:0	8	]
op	77:41	0:0	8	>>
water	77:44	0:0	8	16
op	77:47	0:0	8	&
water	77:49	0:0	8	0
water	77:50	0:0	8	xff
decl	78:16	78:53	8	const uint8_t	g
op	78:32	0:0	8	=
water	78:34	0:0	8	src
op	78:37	0:0	8	[
water	78:38	0:0	8	x
op	78:39	0:0	8	]
op	78:41	0:0	8	>>
water	78:45	0:0	8	8
op	78:47	0:0	8	&
water	78:49	0:0	8	0
water	78:50	0:0	8	xff
decl	79:16	79:53	8	const uint8_t	b
op	79:32	0:0	8	=
water	79:34	0:0	8	src
op	79:37	0:0	8	[
water	79:38	0:0	8	x
op	79:39	0:0	8	]
op	79:47	0:0	8	&
water	79:49	0:0	8	0
water	79:50	0:0	8	xff
decl	80:16	80:107	8	const int	color
op	80:32	0:0	8	=
call	80:34	80:106	9	color_get
arg	80:44	80:49	10	cache
water	80:44	0:0	11	cache
arg	80:51	80:68	10	src[x]&0xffffff
water	80:51	0:0	11	src
op	80:54	0:0	11	[
water	80:55	0:0	11	x
op	80:56	0:0	11	]
op	80:58	0:0	11	&
water	80:60	0:0	11	0
water	80:61	0:0	11	xffffff
arg	80:70	80:71	10	r
water	80:70	0:0	11	r
arg	80:73	80:74	10	g
water	80:73	0:0	11	g
arg	80:76	80:77	10	b
water	80:76	0:0	11	b
arg	80:79	80:82	10	map
water	80:79	0:0	11	map
arg	80:84	80:91	10	palette
water	80:84	0:0	11	palette
arg	80:93	80:106	10	search_method
water	80:93	0:0	11	search_method
if	81:16	82:32	8	(color < 0)
cond	81:20	81:28	9	color < 0
water	81:20	0:0	10	color
op	81:26	0:0	10	<
water	81:28	0:0	10	0
stmts	82:20	82:32	9	
return	82:20	82:32	10	color
water	82:27	0:0	11	color
water	83:16	0:0	8	dst
op	83:19	0:0	8	[
water	83:20	0:0	8	x
op	83:21	0:0	8	]
op	83:23	0:0	8	=
water	83:25	0:0	8	color
water	83:30	0:0	8	;
water	84:12	0:0	8	}
water	85:8	0:0	6	}
water	86:8	0:0	4	src
op	86:12	0:0	4	+=
water	86:15	0:0	4	src_linesize
water	86:27	0:0	4	;
water	87:8	0:0	4	dst
op	87:12	0:0	4	+=
water	87:15	0:0	4	dst_linesize
water	87:27	0:0	4	;
water	88:4	0:0	4	}
return	89:4	89:12	2	0
water	89:11	0:0	3	0

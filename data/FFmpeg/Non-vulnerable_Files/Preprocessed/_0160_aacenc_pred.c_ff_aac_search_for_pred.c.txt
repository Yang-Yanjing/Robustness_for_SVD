func	1:0	80:0	0	void	ff_aac_search_for_pred
params	1:27	0:0	1	
param	1:28	1:44	2	AACEncContext *	s
param	1:46	1:71	2	SingleChannelElement *	sce
stmnts	0:0	79:40	1	
decl	3:4	3:57	2	int	sfb
water	3:11	0:0	2	,
decl	3:4	3:57	2	int	i
water	3:14	0:0	2	,
decl	3:4	3:57	2	int	count
op	3:22	0:0	2	=
water	3:24	0:0	2	0
water	3:25	0:0	2	,
decl	3:4	3:57	2	int	cost_coeffs
op	3:39	0:0	2	=
water	3:41	0:0	2	0
water	3:42	0:0	2	,
decl	3:4	3:57	2	int	cost_pred
op	3:54	0:0	2	=
water	3:56	0:0	2	0
decl	4:4	4:86	2	const int	pmax
op	4:19	0:0	2	=
call	4:21	4:85	3	FFMIN
arg	4:27	4:43	4	sce->ics.max_sfb
water	4:27	0:0	5	sce
op	4:30	0:0	5	->
water	4:32	0:0	5	ics
op	4:35	0:0	5	.
water	4:36	0:0	5	max_sfb
arg	4:45	4:85	4	ff_aac_pred_sfb_max[s->samplerate_index]
water	4:45	0:0	5	ff_aac_pred_sfb_max
op	4:64	0:0	5	[
water	4:65	0:0	5	s
op	4:66	0:0	5	->
water	4:68	0:0	5	samplerate_index
op	4:84	0:0	5	]
decl	5:4	5:61	2	float	*O34
op	5:16	0:0	2	=
op	5:18	0:0	2	&
water	5:19	0:0	2	s
op	5:20	0:0	2	->
water	5:22	0:0	2	scoefs
op	5:28	0:0	2	[
water	5:29	0:0	2	128
op	5:32	0:0	2	*
water	5:33	0:0	2	0
op	5:34	0:0	2	]
water	5:35	0:0	2	,
decl	5:4	5:61	2	float	*P34
op	5:42	0:0	2	=
op	5:44	0:0	2	&
water	5:45	0:0	2	s
op	5:46	0:0	2	->
water	5:48	0:0	2	scoefs
op	5:54	0:0	2	[
water	5:55	0:0	2	128
op	5:58	0:0	2	*
water	5:59	0:0	2	1
op	5:60	0:0	2	]
decl	6:4	6:61	2	float	*SENT
op	6:16	0:0	2	=
op	6:18	0:0	2	&
water	6:19	0:0	2	s
op	6:20	0:0	2	->
water	6:22	0:0	2	scoefs
op	6:28	0:0	2	[
water	6:29	0:0	2	128
op	6:32	0:0	2	*
water	6:33	0:0	2	2
op	6:34	0:0	2	]
water	6:35	0:0	2	,
decl	6:4	6:61	2	float	*S34
op	6:42	0:0	2	=
op	6:44	0:0	2	&
water	6:45	0:0	2	s
op	6:46	0:0	2	->
water	6:48	0:0	2	scoefs
op	6:54	0:0	2	[
water	6:55	0:0	2	128
op	6:58	0:0	2	*
water	6:59	0:0	2	3
op	6:60	0:0	2	]
decl	7:4	7:35	2	float	*QERR
op	7:16	0:0	2	=
op	7:18	0:0	2	&
water	7:19	0:0	2	s
op	7:20	0:0	2	->
water	7:22	0:0	2	scoefs
op	7:28	0:0	2	[
water	7:29	0:0	2	128
op	7:32	0:0	2	*
water	7:33	0:0	2	4
op	7:34	0:0	2	]
if	8:4	11:4	2	(sce -> ics . window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE)
cond	8:8	8:39	3	sce -> ics . window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE
water	8:8	0:0	4	sce
op	8:11	0:0	4	->
water	8:13	0:0	4	ics
op	8:16	0:0	4	.
water	8:17	0:0	4	window_sequence
op	8:32	0:0	4	[
water	8:33	0:0	4	0
op	8:34	0:0	4	]
op	8:36	0:0	4	==
water	8:39	0:0	4	EIGHT_SHORT_SEQUENCE
stmts	8:61	11:4	3	
water	8:61	0:0	4	{
water	9:8	0:0	4	sce
op	9:11	0:0	4	->
water	9:13	0:0	4	ics
op	9:16	0:0	4	.
water	9:17	0:0	4	predictor_present
op	9:35	0:0	4	=
water	9:37	0:0	4	0
water	9:38	0:0	4	;
return	10:8	10:14	4	
water	11:4	0:0	4	}
if	12:4	18:4	2	(! sce -> ics . predictor_initialized)
cond	12:8	12:18	3	! sce -> ics . predictor_initialized
op	12:8	0:0	4	!
water	12:9	0:0	4	sce
op	12:12	0:0	4	->
water	12:14	0:0	4	ics
op	12:17	0:0	4	.
water	12:18	0:0	4	predictor_initialized
stmts	12:41	18:4	3	
water	12:41	0:0	4	{
call	13:8	13:49	4	reset_all_predictors
arg	13:29	13:49	5	sce->predictor_state
water	13:29	0:0	6	sce
op	13:32	0:0	6	->
water	13:34	0:0	6	predictor_state
water	13:50	0:0	4	;
water	14:8	0:0	4	sce
op	14:11	0:0	4	->
water	14:13	0:0	4	ics
op	14:16	0:0	4	.
water	14:17	0:0	4	predictor_initialized
op	14:39	0:0	4	=
water	14:41	0:0	4	1
water	14:42	0:0	4	;
call	15:8	15:61	4	memcpy
arg	15:15	15:28	5	sce->prcoeffs
water	15:15	0:0	6	sce
op	15:18	0:0	6	->
water	15:20	0:0	6	prcoeffs
arg	15:30	15:41	5	sce->coeffs
water	15:30	0:0	6	sce
op	15:33	0:0	6	->
water	15:35	0:0	6	coeffs
arg	15:43	15:61	5	1024*sizeof(float)
water	15:43	0:0	6	1024
op	15:47	0:0	6	*
op	15:48	0:0	6	sizeof
water	15:54	0:0	6	(
water	15:55	0:0	6	float
water	15:60	0:0	6	)
water	15:62	0:0	4	;
for	16:8	17:49	4	(i = 1 ;i < 31;i ++)
forinit	16:13	16:18	5	i = 1 ;
water	16:13	0:0	6	i
op	16:15	0:0	6	=
water	16:17	0:0	6	1
water	16:18	0:0	6	;
cond	16:20	16:24	5	i < 31
water	16:20	0:0	6	i
op	16:22	0:0	6	<
water	16:24	0:0	6	31
forexpr	16:28	16:29	5	i ++
water	16:28	0:0	6	i
op	16:29	0:0	6	++
stmts	17:12	17:49	5	
water	17:12	0:0	6	sce
op	17:15	0:0	6	->
water	17:17	0:0	6	ics
op	17:20	0:0	6	.
water	17:21	0:0	6	predictor_reset_count
op	17:42	0:0	6	[
water	17:43	0:0	6	i
op	17:44	0:0	6	]
op	17:46	0:0	6	=
water	17:48	0:0	6	i
water	17:49	0:0	6	;
water	18:4	0:0	4	}
call	19:4	19:26	2	update_pred_resets
arg	19:23	19:26	3	sce
water	19:23	0:0	4	sce
water	19:27	0:0	2	;
call	20:4	20:64	2	memcpy
arg	20:11	20:24	3	sce->band_alt
water	20:11	0:0	4	sce
op	20:14	0:0	4	->
water	20:16	0:0	4	band_alt
arg	20:26	20:40	3	sce->band_type
water	20:26	0:0	4	sce
op	20:29	0:0	4	->
water	20:31	0:0	4	band_type
arg	20:42	20:64	3	sizeof(sce->band_type)
op	20:42	0:0	4	sizeof
water	20:48	0:0	4	(
water	20:49	0:0	4	sce
op	20:52	0:0	4	->
water	20:54	0:0	4	band_type
water	20:63	0:0	4	)
water	20:65	0:0	2	;
for	21:4	72:4	2	(sfb = PRED_SFB_START ;sfb < pmax;sfb ++)
forinit	21:9	21:29	3	sfb = PRED_SFB_START ;
water	21:9	0:0	4	sfb
op	21:13	0:0	4	=
water	21:15	0:0	4	PRED_SFB_START
water	21:29	0:0	4	;
cond	21:31	21:37	3	sfb < pmax
water	21:31	0:0	4	sfb
op	21:35	0:0	4	<
water	21:37	0:0	4	pmax
forexpr	21:43	21:46	3	sfb ++
water	21:43	0:0	4	sfb
op	21:46	0:0	4	++
stmts	21:50	72:4	3	
water	21:50	0:0	4	{
decl	22:8	22:30	4	int	cost1
water	22:17	0:0	4	,
decl	22:8	22:30	4	int	cost2
water	22:24	0:0	4	,
decl	22:8	22:30	4	int	cb_p
decl	23:8	23:48	4	float	dist1
water	23:19	0:0	4	,
decl	23:8	23:48	4	float	dist2
water	23:26	0:0	4	,
decl	23:8	23:48	4	float	dist_spec_err
op	23:42	0:0	4	=
water	23:44	0:0	4	0
op	23:45	0:0	4	.
water	23:46	0:0	4	0
water	23:47	0:0	4	f
decl	24:8	24:44	4	const int	cb_n
op	24:23	0:0	4	=
water	24:25	0:0	4	sce
op	24:28	0:0	4	->
water	24:30	0:0	4	band_type
op	24:39	0:0	4	[
water	24:40	0:0	4	sfb
op	24:43	0:0	4	]
decl	25:8	25:55	4	const int	start_coef
op	25:29	0:0	4	=
water	25:31	0:0	4	sce
op	25:34	0:0	4	->
water	25:36	0:0	4	ics
op	25:39	0:0	4	.
water	25:40	0:0	4	swb_offset
op	25:50	0:0	4	[
water	25:51	0:0	4	sfb
op	25:54	0:0	4	]
decl	26:8	26:72	4	const int	num_coeffs
op	26:29	0:0	4	=
water	26:31	0:0	4	sce
op	26:34	0:0	4	->
water	26:36	0:0	4	ics
op	26:39	0:0	4	.
water	26:40	0:0	4	swb_offset
op	26:50	0:0	4	[
water	26:51	0:0	4	sfb
op	26:55	0:0	4	+
water	26:57	0:0	4	1
op	26:58	0:0	4	]
op	26:60	0:0	4	-
water	26:62	0:0	4	start_coef
decl	27:8	27:73	4	const FFPsyBand	*band
op	27:30	0:0	4	=
op	27:32	0:0	4	&
water	27:33	0:0	4	s
op	27:34	0:0	4	->
water	27:36	0:0	4	psy
op	27:39	0:0	4	.
water	27:40	0:0	4	ch
op	27:42	0:0	4	[
water	27:43	0:0	4	s
op	27:44	0:0	4	->
water	27:46	0:0	4	cur_channel
op	27:57	0:0	4	]
op	27:58	0:0	4	.
water	27:59	0:0	4	psy_bands
op	27:68	0:0	4	[
water	27:69	0:0	4	sfb
op	27:72	0:0	4	]
if	28:8	29:20	4	(start_coef + num_coeffs > MAX_PREDICTORS)
cond	28:12	28:38	5	start_coef + num_coeffs > MAX_PREDICTORS
water	28:12	0:0	6	start_coef
op	28:23	0:0	6	+
water	28:25	0:0	6	num_coeffs
op	28:36	0:0	6	>
water	28:38	0:0	6	MAX_PREDICTORS
stmts	29:12	29:20	5	
continue	29:12	29:20	6	
call	31:8	31:61	4	abs_pow34_v
arg	31:20	31:23	5	O34
water	31:20	0:0	6	O34
arg	31:25	31:49	5	&sce->coeffs[start_coef]
op	31:25	0:0	6	&
water	31:26	0:0	6	sce
op	31:29	0:0	6	->
water	31:31	0:0	6	coeffs
op	31:37	0:0	6	[
water	31:38	0:0	6	start_coef
op	31:48	0:0	6	]
arg	31:51	31:61	5	num_coeffs
water	31:51	0:0	6	num_coeffs
water	31:62	0:0	4	;
water	32:8	0:0	4	dist1
op	32:14	0:0	4	=
call	32:16	34:100	4	quantize_and_encode_band_cost
arg	32:46	32:47	5	s
water	32:46	0:0	6	s
arg	32:49	32:53	5	NULL
water	32:49	0:0	6	NULL
arg	32:55	32:79	5	&sce->coeffs[start_coef]
op	32:55	0:0	6	&
water	32:56	0:0	6	sce
op	32:59	0:0	6	->
water	32:61	0:0	6	coeffs
op	32:67	0:0	6	[
water	32:68	0:0	6	start_coef
op	32:78	0:0	6	]
arg	32:81	32:85	5	NULL
water	32:81	0:0	6	NULL
arg	33:46	33:49	5	O34
water	33:46	0:0	6	O34
arg	33:51	33:61	5	num_coeffs
water	33:51	0:0	6	num_coeffs
arg	33:63	33:79	5	sce->sf_idx[sfb]
water	33:63	0:0	6	sce
op	33:66	0:0	6	->
water	33:68	0:0	6	sf_idx
op	33:74	0:0	6	[
water	33:75	0:0	6	sfb
op	33:78	0:0	6	]
arg	34:46	34:50	5	cb_n
water	34:46	0:0	6	cb_n
arg	34:52	34:79	5	s->lambda/band->threshold
water	34:52	0:0	6	s
op	34:53	0:0	6	->
water	34:55	0:0	6	lambda
op	34:62	0:0	6	/
water	34:64	0:0	6	band
op	34:68	0:0	6	->
water	34:70	0:0	6	threshold
arg	34:81	34:89	5	INFINITY
water	34:81	0:0	6	INFINITY
arg	34:91	34:97	5	&cost1
op	34:91	0:0	6	&
water	34:92	0:0	6	cost1
arg	34:99	34:100	5	0
water	34:99	0:0	6	0
water	34:101	0:0	4	;
water	35:8	0:0	4	cost_coeffs
op	35:20	0:0	4	+=
water	35:23	0:0	4	cost1
water	35:28	0:0	4	;
for	37:8	38:81	4	(i = 0 ;i < num_coeffs;i ++)
forinit	37:13	37:18	5	i = 0 ;
water	37:13	0:0	6	i
op	37:15	0:0	6	=
water	37:17	0:0	6	0
water	37:18	0:0	6	;
cond	37:20	37:24	5	i < num_coeffs
water	37:20	0:0	6	i
op	37:22	0:0	6	<
water	37:24	0:0	6	num_coeffs
forexpr	37:36	37:37	5	i ++
water	37:36	0:0	6	i
op	37:37	0:0	6	++
stmts	38:12	38:81	5	
water	38:12	0:0	6	SENT
op	38:16	0:0	6	[
water	38:17	0:0	6	i
op	38:18	0:0	6	]
op	38:20	0:0	6	=
water	38:22	0:0	6	sce
op	38:25	0:0	6	->
water	38:27	0:0	6	coeffs
op	38:33	0:0	6	[
water	38:34	0:0	6	start_coef
op	38:45	0:0	6	+
water	38:47	0:0	6	i
op	38:48	0:0	6	]
op	38:50	0:0	6	-
water	38:52	0:0	6	sce
op	38:55	0:0	6	->
water	38:57	0:0	6	prcoeffs
op	38:65	0:0	6	[
water	38:66	0:0	6	start_coef
op	38:77	0:0	6	+
water	38:79	0:0	6	i
op	38:80	0:0	6	]
water	38:81	0:0	6	;
call	39:8	39:41	4	abs_pow34_v
arg	39:20	39:23	5	S34
water	39:20	0:0	6	S34
arg	39:25	39:29	5	SENT
water	39:25	0:0	6	SENT
arg	39:31	39:41	5	num_coeffs
water	39:31	0:0	6	num_coeffs
water	39:42	0:0	4	;
if	40:8	41:84	4	(cb_n < RESERVED_BT)
cond	40:12	40:19	5	cb_n < RESERVED_BT
water	40:12	0:0	6	cb_n
op	40:17	0:0	6	<
water	40:19	0:0	6	RESERVED_BT
stmts	41:12	41:84	5	
water	41:12	0:0	6	cb_p
op	41:17	0:0	6	=
call	41:19	41:83	6	find_min_book
arg	41:33	41:65	7	find_max_val(1,num_coeffs,S34)
call	41:33	41:64	8	find_max_val
arg	41:46	41:47	9	1
water	41:46	0:0	10	1
arg	41:49	41:59	9	num_coeffs
water	41:49	0:0	10	num_coeffs
arg	41:61	41:64	9	S34
water	41:61	0:0	10	S34
arg	41:67	41:83	7	sce->sf_idx[sfb]
water	41:67	0:0	8	sce
op	41:70	0:0	8	->
water	41:72	0:0	8	sf_idx
op	41:78	0:0	8	[
water	41:79	0:0	8	sfb
op	41:82	0:0	8	]
water	41:84	0:0	6	;
else	42:8	43:23	4
stmts	43:12	43:23	5	
water	43:12	0:0	6	cb_p
op	43:17	0:0	6	=
water	43:19	0:0	6	cb_n
water	43:23	0:0	6	;
call	44:8	46:47	4	quantize_and_encode_band_cost
arg	44:38	44:39	5	s
water	44:38	0:0	6	s
arg	44:41	44:45	5	NULL
water	44:41	0:0	6	NULL
arg	44:47	44:51	5	SENT
water	44:47	0:0	6	SENT
arg	44:53	44:57	5	QERR
water	44:53	0:0	6	QERR
arg	44:59	44:62	5	S34
water	44:59	0:0	6	S34
arg	44:64	44:74	5	num_coeffs
water	44:64	0:0	6	num_coeffs
arg	45:38	45:54	5	sce->sf_idx[sfb]
water	45:38	0:0	6	sce
op	45:41	0:0	6	->
water	45:43	0:0	6	sf_idx
op	45:49	0:0	6	[
water	45:50	0:0	6	sfb
op	45:53	0:0	6	]
arg	45:56	45:60	5	cb_p
water	45:56	0:0	6	cb_p
arg	45:62	45:89	5	s->lambda/band->threshold
water	45:62	0:0	6	s
op	45:63	0:0	6	->
water	45:65	0:0	6	lambda
op	45:72	0:0	6	/
water	45:74	0:0	6	band
op	45:78	0:0	6	->
water	45:80	0:0	6	threshold
arg	45:91	45:99	5	INFINITY
water	45:91	0:0	6	INFINITY
arg	46:38	46:44	5	&cost2
op	46:38	0:0	6	&
water	46:39	0:0	6	cost2
arg	46:46	46:47	5	0
water	46:46	0:0	6	0
water	46:48	0:0	4	;
for	48:8	49:111	4	(i = 0 ;i < num_coeffs;i ++)
forinit	48:13	48:18	5	i = 0 ;
water	48:13	0:0	6	i
op	48:15	0:0	6	=
water	48:17	0:0	6	0
water	48:18	0:0	6	;
cond	48:20	48:24	5	i < num_coeffs
water	48:20	0:0	6	i
op	48:22	0:0	6	<
water	48:24	0:0	6	num_coeffs
forexpr	48:36	48:37	5	i ++
water	48:36	0:0	6	i
op	48:37	0:0	6	++
stmts	49:12	49:111	5	
water	49:12	0:0	6	sce
op	49:15	0:0	6	->
water	49:17	0:0	6	prcoeffs
op	49:25	0:0	6	[
water	49:26	0:0	6	start_coef
op	49:37	0:0	6	+
water	49:39	0:0	6	i
op	49:40	0:0	6	]
op	49:42	0:0	6	+=
water	49:45	0:0	6	QERR
op	49:49	0:0	6	[
water	49:50	0:0	6	i
op	49:51	0:0	6	]
op	49:53	0:0	6	!=
water	49:56	0:0	6	0
op	49:57	0:0	6	.
water	49:58	0:0	6	0
water	49:59	0:0	6	f
water	49:61	0:0	6	?
water	49:63	0:0	6	(
water	49:64	0:0	6	sce
op	49:67	0:0	6	->
water	49:69	0:0	6	prcoeffs
op	49:77	0:0	6	[
water	49:78	0:0	6	start_coef
op	49:89	0:0	6	+
water	49:91	0:0	6	i
op	49:92	0:0	6	]
op	49:94	0:0	6	-
water	49:96	0:0	6	QERR
op	49:100	0:0	6	[
water	49:101	0:0	6	i
op	49:102	0:0	6	]
water	49:103	0:0	6	)
water	49:105	0:0	6	:
water	49:107	0:0	6	0
op	49:108	0:0	6	.
water	49:109	0:0	6	0
water	49:110	0:0	6	f
water	49:111	0:0	6	;
call	50:8	50:63	4	abs_pow34_v
arg	50:20	50:23	5	P34
water	50:20	0:0	6	P34
arg	50:25	50:51	5	&sce->prcoeffs[start_coef]
op	50:25	0:0	6	&
water	50:26	0:0	6	sce
op	50:29	0:0	6	->
water	50:31	0:0	6	prcoeffs
op	50:39	0:0	6	[
water	50:40	0:0	6	start_coef
op	50:50	0:0	6	]
arg	50:53	50:63	5	num_coeffs
water	50:53	0:0	6	num_coeffs
water	50:64	0:0	4	;
if	51:8	52:84	4	(cb_n < RESERVED_BT)
cond	51:12	51:19	5	cb_n < RESERVED_BT
water	51:12	0:0	6	cb_n
op	51:17	0:0	6	<
water	51:19	0:0	6	RESERVED_BT
stmts	52:12	52:84	5	
water	52:12	0:0	6	cb_p
op	52:17	0:0	6	=
call	52:19	52:83	6	find_min_book
arg	52:33	52:65	7	find_max_val(1,num_coeffs,P34)
call	52:33	52:64	8	find_max_val
arg	52:46	52:47	9	1
water	52:46	0:0	10	1
arg	52:49	52:59	9	num_coeffs
water	52:49	0:0	10	num_coeffs
arg	52:61	52:64	9	P34
water	52:61	0:0	10	P34
arg	52:67	52:83	7	sce->sf_idx[sfb]
water	52:67	0:0	8	sce
op	52:70	0:0	8	->
water	52:72	0:0	8	sf_idx
op	52:78	0:0	8	[
water	52:79	0:0	8	sfb
op	52:82	0:0	8	]
water	52:84	0:0	6	;
else	53:8	54:23	4
stmts	54:12	54:23	5	
water	54:12	0:0	6	cb_p
op	54:17	0:0	6	=
water	54:19	0:0	6	cb_n
water	54:23	0:0	6	;
water	55:8	0:0	4	dist2
op	55:14	0:0	4	=
call	55:16	57:98	4	quantize_and_encode_band_cost
arg	55:46	55:47	5	s
water	55:46	0:0	6	s
arg	55:49	55:53	5	NULL
water	55:49	0:0	6	NULL
arg	55:55	55:81	5	&sce->prcoeffs[start_coef]
op	55:55	0:0	6	&
water	55:56	0:0	6	sce
op	55:59	0:0	6	->
water	55:61	0:0	6	prcoeffs
op	55:69	0:0	6	[
water	55:70	0:0	6	start_coef
op	55:80	0:0	6	]
arg	55:83	55:87	5	NULL
water	55:83	0:0	6	NULL
arg	56:46	56:49	5	P34
water	56:46	0:0	6	P34
arg	56:51	56:61	5	num_coeffs
water	56:51	0:0	6	num_coeffs
arg	56:63	56:79	5	sce->sf_idx[sfb]
water	56:63	0:0	6	sce
op	56:66	0:0	6	->
water	56:68	0:0	6	sf_idx
op	56:74	0:0	6	[
water	56:75	0:0	6	sfb
op	56:78	0:0	6	]
arg	57:46	57:50	5	cb_p
water	57:46	0:0	6	cb_p
arg	57:52	57:79	5	s->lambda/band->threshold
water	57:52	0:0	6	s
op	57:53	0:0	6	->
water	57:55	0:0	6	lambda
op	57:62	0:0	6	/
water	57:64	0:0	6	band
op	57:68	0:0	6	->
water	57:70	0:0	6	threshold
arg	57:81	57:89	5	INFINITY
water	57:81	0:0	6	INFINITY
arg	57:91	57:95	5	NULL
water	57:91	0:0	6	NULL
arg	57:97	57:98	5	0
water	57:97	0:0	6	0
water	57:99	0:0	4	;
for	58:8	59:64	4	(i = 0 ;i < num_coeffs;i ++)
forinit	58:13	58:18	5	i = 0 ;
water	58:13	0:0	6	i
op	58:15	0:0	6	=
water	58:17	0:0	6	0
water	58:18	0:0	6	;
cond	58:20	58:24	5	i < num_coeffs
water	58:20	0:0	6	i
op	58:22	0:0	6	<
water	58:24	0:0	6	num_coeffs
forexpr	58:36	58:37	5	i ++
water	58:36	0:0	6	i
op	58:37	0:0	6	++
stmts	59:12	59:64	5	
water	59:12	0:0	6	dist_spec_err
op	59:26	0:0	6	+=
water	59:29	0:0	6	(
water	59:30	0:0	6	O34
op	59:33	0:0	6	[
water	59:34	0:0	6	i
op	59:35	0:0	6	]
op	59:37	0:0	6	-
water	59:39	0:0	6	P34
op	59:42	0:0	6	[
water	59:43	0:0	6	i
op	59:44	0:0	6	]
water	59:45	0:0	6	)
op	59:46	0:0	6	*
water	59:47	0:0	6	(
water	59:48	0:0	6	O34
op	59:51	0:0	6	[
water	59:52	0:0	6	i
op	59:53	0:0	6	]
op	59:55	0:0	6	-
water	59:57	0:0	6	P34
op	59:60	0:0	6	[
water	59:61	0:0	6	i
op	59:62	0:0	6	]
water	59:63	0:0	6	)
water	59:64	0:0	6	;
water	60:8	0:0	4	dist_spec_err
op	60:22	0:0	4	*=
water	60:25	0:0	4	s
op	60:26	0:0	4	->
water	60:28	0:0	4	lambda
op	60:35	0:0	4	/
water	60:37	0:0	4	band
op	60:41	0:0	4	->
water	60:43	0:0	4	threshold
water	60:52	0:0	4	;
water	61:8	0:0	4	dist2
op	61:14	0:0	4	+=
water	61:17	0:0	4	dist_spec_err
water	61:30	0:0	4	;
if	62:8	68:8	4	(dist2 <= dist1 && cb_p <= cb_n)
cond	62:12	62:38	5	dist2 <= dist1 && cb_p <= cb_n
water	62:12	0:0	6	dist2
op	62:18	0:0	6	<=
water	62:21	0:0	6	dist1
op	62:27	0:0	6	&&
water	62:30	0:0	6	cb_p
op	62:35	0:0	6	<=
water	62:38	0:0	6	cb_n
stmts	62:44	68:8	5	
water	62:44	0:0	6	{
water	63:12	0:0	6	cost_pred
op	63:22	0:0	6	+=
water	63:25	0:0	6	cost2
water	63:30	0:0	6	;
water	64:12	0:0	6	sce
op	64:15	0:0	6	->
water	64:17	0:0	6	ics
op	64:20	0:0	6	.
water	64:21	0:0	6	prediction_used
op	64:36	0:0	6	[
water	64:37	0:0	6	sfb
op	64:40	0:0	6	]
op	64:42	0:0	6	=
water	64:44	0:0	6	1
water	64:45	0:0	6	;
water	65:12	0:0	6	sce
op	65:15	0:0	6	->
water	65:17	0:0	6	band_alt
op	65:25	0:0	6	[
water	65:26	0:0	6	sfb
op	65:29	0:0	6	]
op	65:32	0:0	6	=
water	65:34	0:0	6	cb_n
water	65:38	0:0	6	;
water	66:12	0:0	6	sce
op	66:15	0:0	6	->
water	66:17	0:0	6	band_type
op	66:26	0:0	6	[
water	66:27	0:0	6	sfb
op	66:30	0:0	6	]
op	66:32	0:0	6	=
water	66:34	0:0	6	cb_p
water	66:38	0:0	6	;
water	67:12	0:0	6	count
op	67:17	0:0	6	++
water	67:19	0:0	6	;
water	68:8	0:0	6	}
else	68:10	71:8	4
stmts	68:15	71:8	5	
water	68:15	0:0	6	{
water	69:12	0:0	6	cost_pred
op	69:22	0:0	6	+=
water	69:25	0:0	6	cost1
water	69:30	0:0	6	;
water	70:12	0:0	6	sce
op	70:15	0:0	6	->
water	70:17	0:0	6	band_alt
op	70:25	0:0	6	[
water	70:26	0:0	6	sfb
op	70:29	0:0	6	]
op	70:31	0:0	6	=
water	70:33	0:0	6	cb_p
water	70:37	0:0	6	;
water	71:8	0:0	6	}
water	72:4	0:0	4	}
if	73:4	78:4	2	(count && cost_coeffs < cost_pred)
cond	73:8	73:31	3	count && cost_coeffs < cost_pred
water	73:8	0:0	4	count
op	73:14	0:0	4	&&
water	73:17	0:0	4	cost_coeffs
op	73:29	0:0	4	<
water	73:31	0:0	4	cost_pred
stmts	73:42	78:4	3	
water	73:42	0:0	4	{
water	74:8	0:0	4	count
op	74:14	0:0	4	=
water	74:16	0:0	4	0
water	74:17	0:0	4	;
for	75:8	76:34	4	(sfb = PRED_SFB_START ;sfb < pmax;sfb ++)
forinit	75:13	75:33	5	sfb = PRED_SFB_START ;
water	75:13	0:0	6	sfb
op	75:17	0:0	6	=
water	75:19	0:0	6	PRED_SFB_START
water	75:33	0:0	6	;
cond	75:35	75:41	5	sfb < pmax
water	75:35	0:0	6	sfb
op	75:39	0:0	6	<
water	75:41	0:0	6	pmax
forexpr	75:47	75:50	5	sfb ++
water	75:47	0:0	6	sfb
op	75:50	0:0	6	++
stmts	76:12	76:34	5	
call	76:12	76:33	6	RESTORE_PRED
arg	76:25	76:28	7	sce
water	76:25	0:0	8	sce
arg	76:30	76:33	7	sfb
water	76:30	0:0	8	sfb
water	76:34	0:0	6	;
call	77:8	77:77	4	memset
arg	77:15	77:40	5	&sce->ics.prediction_used
op	77:15	0:0	6	&
water	77:16	0:0	6	sce
op	77:19	0:0	6	->
water	77:21	0:0	6	ics
op	77:24	0:0	6	.
water	77:25	0:0	6	prediction_used
arg	77:42	77:43	5	0
water	77:42	0:0	6	0
arg	77:45	77:77	5	sizeof(sce->ics.prediction_used)
op	77:45	0:0	6	sizeof
water	77:51	0:0	6	(
water	77:52	0:0	6	sce
op	77:55	0:0	6	->
water	77:57	0:0	6	ics
op	77:60	0:0	6	.
water	77:61	0:0	6	prediction_used
water	77:76	0:0	6	)
water	77:78	0:0	4	;
water	78:4	0:0	4	}
water	79:4	0:0	2	sce
op	79:7	0:0	2	->
water	79:9	0:0	2	ics
op	79:12	0:0	2	.
water	79:13	0:0	2	predictor_present
op	79:31	0:0	2	=
op	79:33	0:0	2	!
op	79:34	0:0	2	!
water	79:35	0:0	2	count
water	79:40	0:0	2	;

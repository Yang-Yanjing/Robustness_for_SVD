func	1:0	27:0	0	static int	set_volume
params	1:21	0:0	1	
param	1:22	1:42	2	AVFilterContext *	ctx
stmnts	0:0	26:12	1	
decl	3:4	3:34	2	VolumeContext	*vol
op	3:23	0:0	2	=
water	3:25	0:0	2	ctx
op	3:28	0:0	2	->
water	3:30	0:0	2	priv
water	4:4	0:0	2	vol
op	4:7	0:0	2	->
water	4:9	0:0	2	volume
op	4:16	0:0	2	=
call	4:18	4:71	2	av_expr_eval
arg	4:31	4:48	3	vol->volume_pexpr
water	4:31	0:0	4	vol
op	4:34	0:0	4	->
water	4:36	0:0	4	volume_pexpr
arg	4:50	4:65	3	vol->var_values
water	4:50	0:0	4	vol
op	4:53	0:0	4	->
water	4:55	0:0	4	var_values
arg	4:67	4:71	3	NULL
water	4:67	0:0	4	NULL
water	4:72	0:0	2	;
if	5:4	13:4	2	(isnan (vol -> volume ))
cond	5:8	5:25	3	isnan (vol -> volume )
call	5:8	5:25	4	isnan
arg	5:14	5:25	5	vol->volume
water	5:14	0:0	6	vol
op	5:17	0:0	6	->
water	5:19	0:0	6	volume
stmts	5:28	13:4	3	
water	5:28	0:0	4	{
if	6:8	9:8	4	(vol -> eval_mode == EVAL_MODE_ONCE)
cond	6:12	6:30	5	vol -> eval_mode == EVAL_MODE_ONCE
water	6:12	0:0	6	vol
op	6:15	0:0	6	->
water	6:17	0:0	6	eval_mode
op	6:27	0:0	6	==
water	6:30	0:0	6	EVAL_MODE_ONCE
stmts	6:46	9:8	5	
water	6:46	0:0	6	{
call	7:12	7:70	6	av_log
arg	7:19	7:22	7	ctx
water	7:19	0:0	8	ctx
arg	7:24	7:36	7	AV_LOG_ERROR
water	7:24	0:0	8	AV_LOG_ERROR
arg	7:38	7:70	7	"Invalid value NaN for volume\n"
water	7:38	0:0	8	"Invalid value NaN for volume\n"
water	7:71	0:0	6	;
return	8:12	8:34	6	AVERROR(EINVAL)
call	8:19	8:33	7	AVERROR
arg	8:27	8:33	8	EINVAL
water	8:27	0:0	9	EINVAL
water	9:8	0:0	6	}
else	9:10	12:8	4
stmts	9:15	12:8	5	
water	9:15	0:0	6	{
call	10:12	10:86	6	av_log
arg	10:19	10:22	7	ctx
water	10:19	0:0	8	ctx
arg	10:24	10:38	7	AV_LOG_WARNING
water	10:24	0:0	8	AV_LOG_WARNING
arg	10:40	10:86	7	"Invalid value NaN for volume, setting to 0\n"
water	10:40	0:0	8	"Invalid value NaN for volume, setting to 0\n"
water	10:87	0:0	6	;
water	11:12	0:0	6	vol
op	11:15	0:0	6	->
water	11:17	0:0	6	volume
op	11:24	0:0	6	=
water	11:26	0:0	6	0
water	11:27	0:0	6	;
water	12:8	0:0	6	}
water	13:4	0:0	4	}
water	14:4	0:0	2	vol
op	14:7	0:0	2	->
water	14:9	0:0	2	var_values
op	14:19	0:0	2	[
water	14:20	0:0	2	VAR_VOLUME
op	14:30	0:0	2	]
op	14:32	0:0	2	=
water	14:34	0:0	2	vol
op	14:37	0:0	2	->
water	14:39	0:0	2	volume
water	14:45	0:0	2	;
call	15:4	17:40	2	av_log
arg	15:11	15:14	3	ctx
water	15:11	0:0	4	ctx
arg	15:16	15:30	3	AV_LOG_VERBOSE
water	15:16	0:0	4	AV_LOG_VERBOSE
arg	15:32	15:64	3	"n:%f t:%f pts:%f precision:%s "
water	15:32	0:0	4	"n:%f t:%f pts:%f precision:%s "
arg	16:11	16:33	3	vol->var_values[VAR_N]
water	16:11	0:0	4	vol
op	16:14	0:0	4	->
water	16:16	0:0	4	var_values
op	16:26	0:0	4	[
water	16:27	0:0	4	VAR_N
op	16:32	0:0	4	]
arg	16:35	16:57	3	vol->var_values[VAR_T]
water	16:35	0:0	4	vol
op	16:38	0:0	4	->
water	16:40	0:0	4	var_values
op	16:50	0:0	4	[
water	16:51	0:0	4	VAR_T
op	16:56	0:0	4	]
arg	16:59	16:83	3	vol->var_values[VAR_PTS]
water	16:59	0:0	4	vol
op	16:62	0:0	4	->
water	16:64	0:0	4	var_values
op	16:74	0:0	4	[
water	16:75	0:0	4	VAR_PTS
op	16:82	0:0	4	]
arg	17:11	17:40	3	precision_str[vol->precision]
water	17:11	0:0	4	precision_str
op	17:24	0:0	4	[
water	17:25	0:0	4	vol
op	17:28	0:0	4	->
water	17:30	0:0	4	precision
op	17:39	0:0	4	]
water	17:41	0:0	2	;
if	18:4	22:4	2	(vol -> precision == PRECISION_FIXED)
cond	18:8	18:26	3	vol -> precision == PRECISION_FIXED
water	18:8	0:0	4	vol
op	18:11	0:0	4	->
water	18:13	0:0	4	precision
op	18:23	0:0	4	==
water	18:26	0:0	4	PRECISION_FIXED
stmts	18:43	22:4	3	
water	18:43	0:0	4	{
water	19:8	0:0	4	vol
op	19:11	0:0	4	->
water	19:13	0:0	4	volume_i
op	19:22	0:0	4	=
call	19:24	19:53	4	(int)
arg	19:30	19:53	5	vol->volume*256+0.5
water	19:30	0:0	6	vol
op	19:33	0:0	6	->
water	19:35	0:0	6	volume
op	19:42	0:0	6	*
water	19:44	0:0	6	256
op	19:48	0:0	6	+
water	19:50	0:0	6	0
op	19:51	0:0	6	.
water	19:52	0:0	6	5
water	19:54	0:0	4	;
water	20:8	0:0	4	vol
op	20:11	0:0	4	->
water	20:13	0:0	4	volume
op	20:22	0:0	4	=
water	20:24	0:0	4	vol
op	20:27	0:0	4	->
water	20:29	0:0	4	volume_i
op	20:38	0:0	4	/
water	20:40	0:0	4	256
op	20:43	0:0	4	.
water	20:44	0:0	4	0
water	20:45	0:0	4	;
call	21:8	21:69	4	av_log
arg	21:15	21:18	5	ctx
water	21:15	0:0	6	ctx
arg	21:20	21:34	5	AV_LOG_VERBOSE
water	21:20	0:0	6	AV_LOG_VERBOSE
arg	21:36	21:54	5	"volume_i:%d/255 "
water	21:36	0:0	6	"volume_i:%d/255 "
arg	21:56	21:69	5	vol->volume_i
water	21:56	0:0	6	vol
op	21:59	0:0	6	->
water	21:61	0:0	6	volume_i
water	21:70	0:0	4	;
water	22:4	0:0	4	}
call	23:4	24:52	2	av_log
arg	23:11	23:14	3	ctx
water	23:11	0:0	4	ctx
arg	23:16	23:30	3	AV_LOG_VERBOSE
water	23:16	0:0	4	AV_LOG_VERBOSE
arg	23:32	23:58	3	"volume:%f volume_dB:%f\n"
water	23:32	0:0	4	"volume:%f volume_dB:%f\n"
arg	24:11	24:22	3	vol->volume
water	24:11	0:0	4	vol
op	24:14	0:0	4	->
water	24:16	0:0	4	volume
arg	24:24	24:52	3	20.0*log(vol->volume)/M_LN10
water	24:24	0:0	4	20
op	24:26	0:0	4	.
water	24:27	0:0	4	0
call	24:28	24:44	4	*log
arg	24:33	24:44	5	vol->volume
water	24:33	0:0	6	vol
op	24:36	0:0	6	->
water	24:38	0:0	6	volume
op	24:45	0:0	4	/
water	24:46	0:0	4	M_LN10
water	24:53	0:0	2	;
call	25:4	25:19	2	volume_init
arg	25:16	25:19	3	vol
water	25:16	0:0	4	vol
water	25:20	0:0	2	;
return	26:4	26:12	2	0
water	26:11	0:0	3	0

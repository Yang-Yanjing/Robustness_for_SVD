func	1:0	29:0	0	static void	mxf_write_structural_component
params	1:42	0:0	1	
param	1:43	1:61	2	AVFormatContext *	s
param	1:63	1:75	2	AVStream *	st
param	1:77	1:105	2	enum MXFMetadataSetType	type
stmnts	0:0	28:34	1	
decl	3:4	3:27	2	AVIOContext	*pb
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	pb
decl	4:4	4:9	2	int	i
call	5:4	5:39	2	mxf_write_metadata_key
arg	5:27	5:29	3	pb
water	5:27	0:0	4	pb
arg	5:31	5:39	3	0x011100
water	5:31	0:0	4	0
water	5:32	0:0	4	x011100
water	5:40	0:0	2	;
call	6:4	6:61	2	PRINT_KEY
arg	6:14	6:15	3	s
water	6:14	0:0	4	s
arg	6:17	6:43	3	"sturctural component key"
water	6:17	0:0	4	"sturctural component key"
arg	6:45	6:61	3	pb->buf_ptr-16
water	6:45	0:0	4	pb
op	6:47	0:0	4	->
water	6:49	0:0	4	buf_ptr
op	6:57	0:0	4	-
water	6:59	0:0	4	16
water	6:62	0:0	2	;
call	7:4	7:33	2	klv_encode_ber_length
arg	7:26	7:28	3	pb
water	7:26	0:0	4	pb
arg	7:30	7:33	3	108
water	7:30	0:0	4	108
water	7:34	0:0	2	;
call	9:4	9:38	2	mxf_write_local_tag
arg	9:24	9:26	3	pb
water	9:24	0:0	4	pb
arg	9:28	9:30	3	16
water	9:28	0:0	4	16
arg	9:32	9:38	3	0x3C0A
water	9:32	0:0	4	0
water	9:33	0:0	4	x3C0A
water	9:39	0:0	2	;
call	10:4	10:95	2	mxf_write_uuid
arg	10:19	10:21	3	pb
water	10:19	0:0	4	pb
arg	10:23	10:84	3	type==MaterialPackage?SourceClip:SourceClip+TypeBottom
water	10:23	0:0	4	type
op	10:28	0:0	4	==
water	10:31	0:0	4	MaterialPackage
water	10:47	0:0	4	?
water	10:49	0:0	4	SourceClip
water	10:59	0:0	4	:
water	10:61	0:0	4	SourceClip
op	10:72	0:0	4	+
water	10:74	0:0	4	TypeBottom
arg	10:86	10:95	3	st->index
water	10:86	0:0	4	st
op	10:88	0:0	4	->
water	10:90	0:0	4	index
water	10:96	0:0	2	;
call	11:4	11:61	2	PRINT_KEY
arg	11:14	11:15	3	s
water	11:14	0:0	4	s
arg	11:17	11:43	3	"structural component uid"
water	11:17	0:0	4	"structural component uid"
arg	11:45	11:61	3	pb->buf_ptr-16
water	11:45	0:0	4	pb
op	11:47	0:0	4	->
water	11:49	0:0	4	buf_ptr
op	11:57	0:0	4	-
water	11:59	0:0	4	16
water	11:62	0:0	2	;
call	12:4	12:33	2	mxf_write_common_fields
arg	12:28	12:29	3	s
water	12:28	0:0	4	s
arg	12:31	12:33	3	st
water	12:31	0:0	4	st
water	12:34	0:0	2	;
call	14:4	14:37	2	mxf_write_local_tag
arg	14:24	14:26	3	pb
water	14:24	0:0	4	pb
arg	14:28	14:29	3	8
water	14:28	0:0	4	8
arg	14:31	14:37	3	0x1201
water	14:31	0:0	4	0
water	14:32	0:0	4	x1201
water	14:38	0:0	2	;
call	15:4	15:19	2	avio_wb64
arg	15:14	15:16	3	pb
water	15:14	0:0	4	pb
arg	15:18	15:19	3	0
water	15:18	0:0	4	0
water	15:20	0:0	2	;
call	17:4	17:38	2	mxf_write_local_tag
arg	17:24	17:26	3	pb
water	17:24	0:0	4	pb
arg	17:28	17:30	3	32
water	17:28	0:0	4	32
arg	17:32	17:38	3	0x1101
water	17:32	0:0	4	0
water	17:33	0:0	4	x1101
water	17:39	0:0	2	;
if	18:4	21:4	2	(type == SourcePackage)
cond	18:8	18:16	3	type == SourcePackage
water	18:8	0:0	4	type
op	18:13	0:0	4	==
water	18:16	0:0	4	SourcePackage
stmts	18:31	21:4	3	
water	18:31	0:0	4	{
for	19:8	20:28	4	(i = 0 ;i < 4;i ++)
forinit	19:13	19:18	5	i = 0 ;
water	19:13	0:0	6	i
op	19:15	0:0	6	=
water	19:17	0:0	6	0
water	19:18	0:0	6	;
cond	19:20	19:24	5	i < 4
water	19:20	0:0	6	i
op	19:22	0:0	6	<
water	19:24	0:0	6	4
forexpr	19:27	19:28	5	i ++
water	19:27	0:0	6	i
op	19:28	0:0	6	++
stmts	20:12	20:28	5	
call	20:12	20:27	6	avio_wb64
arg	20:22	20:24	7	pb
water	20:22	0:0	8	pb
arg	20:26	20:27	7	0
water	20:26	0:0	8	0
water	20:28	0:0	6	;
water	21:4	0:0	4	}
else	21:6	22:28	2
stmts	22:8	22:28	3	
call	22:8	22:27	4	mxf_write_umid
arg	22:23	22:24	5	s
water	22:23	0:0	6	s
arg	22:26	22:27	5	1
water	22:26	0:0	6	1
water	22:28	0:0	4	;
call	24:4	24:37	2	mxf_write_local_tag
arg	24:24	24:26	3	pb
water	24:24	0:0	4	pb
arg	24:28	24:29	3	4
water	24:28	0:0	4	4
arg	24:31	24:37	3	0x1102
water	24:31	0:0	4	0
water	24:32	0:0	4	x1102
water	24:38	0:0	2	;
if	25:4	26:24	2	(type == SourcePackage)
cond	25:8	25:16	3	type == SourcePackage
water	25:8	0:0	4	type
op	25:13	0:0	4	==
water	25:16	0:0	4	SourcePackage
stmts	26:8	26:24	3	
call	26:8	26:23	4	avio_wb32
arg	26:18	26:20	5	pb
water	26:18	0:0	6	pb
arg	26:22	26:23	5	0
water	26:22	0:0	6	0
water	26:24	0:0	4	;
else	27:4	28:34	2
stmts	28:8	28:34	3	
call	28:8	28:33	4	avio_wb32
arg	28:18	28:20	5	pb
water	28:18	0:0	6	pb
arg	28:22	28:33	5	st->index+2
water	28:22	0:0	6	st
op	28:24	0:0	6	->
water	28:26	0:0	6	index
op	28:31	0:0	6	+
water	28:32	0:0	6	2
water	28:34	0:0	4	;

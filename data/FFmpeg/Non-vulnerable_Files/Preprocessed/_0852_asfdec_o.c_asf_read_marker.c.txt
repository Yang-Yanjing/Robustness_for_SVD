func	1:0	33:0	0	static int	asf_read_marker
params	1:26	0:0	1	
param	1:27	1:45	2	AVFormatContext *	s
param	1:47	1:70	2	const GUIDParseTable *	g
stmnts	0:0	32:12	1	
decl	3:4	3:34	2	ASFContext	*asf
op	3:20	0:0	2	=
water	3:22	0:0	2	s
op	3:23	0:0	2	->
water	3:25	0:0	2	priv_data
decl	4:4	4:27	2	AVIOContext	*pb
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	pb
decl	5:4	5:35	2	uint64_t	size
op	5:20	0:0	2	=
call	5:22	5:34	3	avio_rl64
arg	5:32	5:34	4	pb
water	5:32	0:0	5	pb
decl	6:4	6:26	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:26	2	int	nb_markers
water	6:21	0:0	2	,
decl	6:4	6:26	2	int	ret
decl	7:4	7:14	2	size_t	len
decl	8:4	8:19	2	char	name[1024]
call	9:4	9:19	2	avio_skip
arg	9:14	9:16	3	pb
water	9:14	0:0	4	pb
arg	9:18	9:19	3	8
water	9:18	0:0	4	8
water	9:20	0:0	2	;
call	10:4	10:19	2	avio_skip
arg	10:14	10:16	3	pb
water	10:14	0:0	4	pb
arg	10:18	10:19	3	8
water	10:18	0:0	4	8
water	10:20	0:0	2	;
water	11:4	0:0	2	nb_markers
op	11:15	0:0	2	=
call	11:17	11:29	2	avio_rl32
arg	11:27	11:29	3	pb
water	11:27	0:0	4	pb
water	11:30	0:0	2	;
call	12:4	12:19	2	avio_skip
arg	12:14	12:16	3	pb
water	12:14	0:0	4	pb
arg	12:18	12:19	3	2
water	12:18	0:0	4	2
water	12:20	0:0	2	;
water	13:4	0:0	2	len
op	13:8	0:0	2	=
call	13:10	13:22	2	avio_rl16
arg	13:20	13:22	3	pb
water	13:20	0:0	4	pb
water	13:23	0:0	2	;
for	14:4	15:24	2	(i = 0 ;i < len;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	i < len
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	len
forexpr	14:25	14:26	3	i ++
water	14:25	0:0	4	i
op	14:26	0:0	4	++
stmts	15:8	15:24	3	
call	15:8	15:23	4	avio_skip
arg	15:18	15:20	5	pb
water	15:18	0:0	6	pb
arg	15:22	15:23	5	1
water	15:22	0:0	6	1
water	15:24	0:0	4	;
for	16:4	30:4	2	(i = 0 ;i < nb_markers;i ++)
forinit	16:9	16:14	3	i = 0 ;
water	16:9	0:0	4	i
op	16:11	0:0	4	=
water	16:13	0:0	4	0
water	16:14	0:0	4	;
cond	16:16	16:20	3	i < nb_markers
water	16:16	0:0	4	i
op	16:18	0:0	4	<
water	16:20	0:0	4	nb_markers
forexpr	16:32	16:33	3	i ++
water	16:32	0:0	4	i
op	16:33	0:0	4	++
stmts	16:37	30:4	3	
water	16:37	0:0	4	{
decl	17:8	17:19	4	int64_t	pts
call	18:8	18:23	4	avio_skip
arg	18:18	18:20	5	pb
water	18:18	0:0	6	pb
arg	18:22	18:23	5	8
water	18:22	0:0	6	8
water	18:24	0:0	4	;
water	19:8	0:0	4	pts
op	19:12	0:0	4	=
call	19:14	19:26	4	avio_rl64
arg	19:24	19:26	5	pb
water	19:24	0:0	6	pb
water	19:27	0:0	4	;
water	20:8	0:0	4	pts
op	20:12	0:0	4	-=
water	20:15	0:0	4	asf
op	20:18	0:0	4	->
water	20:20	0:0	4	preroll
op	20:28	0:0	4	*
water	20:30	0:0	4	10000
water	20:35	0:0	4	;
call	21:8	21:23	4	avio_skip
arg	21:18	21:20	5	pb
water	21:18	0:0	6	pb
arg	21:22	21:23	5	2
water	21:22	0:0	6	2
water	21:24	0:0	4	;
call	22:8	22:23	4	avio_skip
arg	22:18	22:20	5	pb
water	22:18	0:0	6	pb
arg	22:22	22:23	5	4
water	22:22	0:0	6	4
water	22:24	0:0	4	;
call	23:8	23:23	4	avio_skip
arg	23:18	23:20	5	pb
water	23:18	0:0	6	pb
arg	23:22	23:23	5	4
water	23:22	0:0	6	4
water	23:24	0:0	4	;
water	24:8	0:0	4	len
op	24:12	0:0	4	=
call	24:14	24:26	4	avio_rl32
arg	24:24	24:26	5	pb
water	24:24	0:0	6	pb
water	24:27	0:0	4	;
if	25:8	27:36	4	(( ret =avio_get_str16le (pb ,len ,name ,sizeof ( name ) ) ) < len)
cond	25:12	26:53	5	( ret =avio_get_str16le (pb ,len ,name ,sizeof ( name ) ) ) < len
water	25:12	0:0	6	(
water	25:13	0:0	6	ret
op	25:17	0:0	6	=
call	25:19	26:48	6	avio_get_str16le
arg	25:36	25:38	7	pb
water	25:36	0:0	8	pb
arg	25:40	25:43	7	len
water	25:40	0:0	8	len
arg	25:45	25:49	7	name
water	25:45	0:0	8	name
arg	26:36	26:48	7	sizeof(name)
op	26:36	0:0	8	sizeof
water	26:42	0:0	8	(
water	26:43	0:0	8	name
water	26:47	0:0	8	)
water	26:49	0:0	6	)
op	26:51	0:0	6	<
water	26:53	0:0	6	len
stmts	27:12	27:36	5	
call	27:12	27:35	6	avio_skip
arg	27:22	27:24	7	pb
water	27:22	0:0	8	pb
arg	27:26	27:35	7	len-ret
water	27:26	0:0	8	len
op	27:30	0:0	8	-
water	27:32	0:0	8	ret
water	27:36	0:0	6	;
call	28:8	29:47	4	avpriv_new_chapter
arg	28:27	28:28	5	s
water	28:27	0:0	6	s
arg	28:30	28:31	5	i
water	28:30	0:0	6	i
arg	28:33	28:61	5	(AVRational){1,10000000}
water	28:33	0:0	6	(
water	28:34	0:0	6	AVRational
water	28:44	0:0	6	)
water	28:46	0:0	6	{
water	28:48	0:0	6	1
water	28:49	0:0	6	,
water	28:51	0:0	6	10000000
water	28:60	0:0	6	}
arg	28:63	28:66	5	pts
water	28:63	0:0	6	pts
arg	29:27	29:41	5	AV_NOPTS_VALUE
water	29:27	0:0	6	AV_NOPTS_VALUE
arg	29:43	29:47	5	name
water	29:43	0:0	6	name
water	29:48	0:0	4	;
water	30:4	0:0	4	}
call	31:4	31:40	2	align_position
arg	31:19	31:21	3	pb
water	31:19	0:0	4	pb
arg	31:23	31:34	3	asf->offset
water	31:23	0:0	4	asf
op	31:26	0:0	4	->
water	31:28	0:0	4	offset
arg	31:36	31:40	3	size
water	31:36	0:0	4	size
water	31:41	0:0	2	;
return	32:4	32:12	2	0
water	32:11	0:0	3	0

func	1:0	68:0	0	static int	resample_cubic
params	1:25	0:0	1	
param	1:26	1:46	2	AVFilterContext *	ctx
param	1:48	1:57	2	void *	arg
param	2:26	2:33	2	int	job
param	2:35	2:46	2	int	nb_jobs
stmnts	0:0	67:12	1	
decl	4:4	4:37	2	PerspectiveContext	*s
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:24	2	ThreadData	*td
op	5:19	0:0	2	=
water	5:21	0:0	2	arg
decl	6:4	6:26	2	uint8_t	*dst
op	6:17	0:0	2	=
water	6:19	0:0	2	td
op	6:21	0:0	2	->
water	6:23	0:0	2	dst
decl	7:4	7:39	2	int	dst_linesize
op	7:21	0:0	2	=
water	7:23	0:0	2	td
op	7:25	0:0	2	->
water	7:27	0:0	2	dst_linesize
decl	8:4	8:26	2	uint8_t	*src
op	8:17	0:0	2	=
water	8:19	0:0	2	td
op	8:21	0:0	2	->
water	8:23	0:0	2	src
decl	9:4	9:39	2	int	src_linesize
op	9:21	0:0	2	=
water	9:23	0:0	2	td
op	9:25	0:0	2	->
water	9:27	0:0	2	src_linesize
decl	10:4	10:17	2	int	w
op	10:10	0:0	2	=
water	10:12	0:0	2	td
op	10:14	0:0	2	->
water	10:16	0:0	2	w
decl	11:4	11:17	2	int	h
op	11:10	0:0	2	=
water	11:12	0:0	2	td
op	11:14	0:0	2	->
water	11:16	0:0	2	h
decl	12:4	12:23	2	int	hsub
op	12:13	0:0	2	=
water	12:15	0:0	2	td
op	12:17	0:0	2	->
water	12:19	0:0	2	hsub
decl	13:4	13:23	2	int	vsub
op	13:13	0:0	2	=
water	13:15	0:0	2	td
op	13:17	0:0	2	->
water	13:19	0:0	2	vsub
decl	14:4	14:35	2	int	start
op	14:14	0:0	2	=
water	14:16	0:0	2	(
water	14:17	0:0	2	h
op	14:19	0:0	2	*
water	14:21	0:0	2	job
water	14:24	0:0	2	)
op	14:26	0:0	2	/
water	14:28	0:0	2	nb_jobs
decl	15:4	15:39	2	int	end
op	15:14	0:0	2	=
water	15:16	0:0	2	(
water	15:17	0:0	2	h
op	15:19	0:0	2	*
water	15:21	0:0	2	(
water	15:22	0:0	2	job
op	15:25	0:0	2	+
water	15:26	0:0	2	1
water	15:27	0:0	2	)
water	15:28	0:0	2	)
op	15:30	0:0	2	/
water	15:32	0:0	2	nb_jobs
decl	16:4	16:39	2	const int	linesize
op	16:23	0:0	2	=
water	16:25	0:0	2	s
op	16:26	0:0	2	->
water	16:28	0:0	2	linesize
op	16:36	0:0	2	[
water	16:37	0:0	2	0
op	16:38	0:0	2	]
decl	17:4	17:12	2	int	x
water	17:9	0:0	2	,
decl	17:4	17:12	2	int	y
for	18:4	66:4	2	(y = start ;y < end;y ++)
forinit	18:9	18:18	3	y = start ;
water	18:9	0:0	4	y
op	18:11	0:0	4	=
water	18:13	0:0	4	start
water	18:18	0:0	4	;
cond	18:20	18:24	3	y < end
water	18:20	0:0	4	y
op	18:22	0:0	4	<
water	18:24	0:0	4	end
forexpr	18:29	18:30	3	y ++
water	18:29	0:0	4	y
op	18:30	0:0	4	++
stmts	18:34	66:4	3	
water	18:34	0:0	4	{
decl	19:8	19:26	4	int	sy
op	19:15	0:0	4	=
water	19:17	0:0	4	y
op	19:19	0:0	4	<<
water	19:22	0:0	4	vsub
for	20:8	65:8	4	(x = 0 ;x < w;x ++)
forinit	20:13	20:18	5	x = 0 ;
water	20:13	0:0	6	x
op	20:15	0:0	6	=
water	20:17	0:0	6	0
water	20:18	0:0	6	;
cond	20:20	20:24	5	x < w
water	20:20	0:0	6	x
op	20:22	0:0	6	<
water	20:24	0:0	6	w
forexpr	20:27	20:28	5	x ++
water	20:27	0:0	6	x
op	20:28	0:0	6	++
stmts	20:32	65:8	5	
water	20:32	0:0	6	{
decl	21:12	21:41	6	int	u
water	21:17	0:0	6	,
decl	21:12	21:41	6	int	v
water	21:20	0:0	6	,
decl	21:12	21:41	6	int	subU
water	21:26	0:0	6	,
decl	21:12	21:41	6	int	subV
water	21:32	0:0	6	,
decl	21:12	21:41	6	int	sum
water	21:37	0:0	6	,
decl	21:12	21:41	6	int	sx
water	22:12	0:0	6	sx
op	22:17	0:0	6	=
water	22:19	0:0	6	x
op	22:21	0:0	6	<<
water	22:24	0:0	6	hsub
water	22:28	0:0	6	;
water	23:12	0:0	6	u
op	23:17	0:0	6	=
water	23:19	0:0	6	s
op	23:20	0:0	6	->
water	23:22	0:0	6	pv
op	23:24	0:0	6	[
water	23:25	0:0	6	sx
op	23:28	0:0	6	+
water	23:30	0:0	6	sy
op	23:33	0:0	6	*
water	23:35	0:0	6	linesize
op	23:43	0:0	6	]
op	23:44	0:0	6	[
water	23:45	0:0	6	0
op	23:46	0:0	6	]
op	23:48	0:0	6	>>
water	23:51	0:0	6	hsub
water	23:55	0:0	6	;
water	24:12	0:0	6	v
op	24:17	0:0	6	=
water	24:19	0:0	6	s
op	24:20	0:0	6	->
water	24:22	0:0	6	pv
op	24:24	0:0	6	[
water	24:25	0:0	6	sx
op	24:28	0:0	6	+
water	24:30	0:0	6	sy
op	24:33	0:0	6	*
water	24:35	0:0	6	linesize
op	24:43	0:0	6	]
op	24:44	0:0	6	[
water	24:45	0:0	6	1
op	24:46	0:0	6	]
op	24:48	0:0	6	>>
water	24:51	0:0	6	vsub
water	24:55	0:0	6	;
water	25:12	0:0	6	subU
op	25:17	0:0	6	=
water	25:19	0:0	6	u
op	25:21	0:0	6	&
water	25:23	0:0	6	(
water	25:24	0:0	6	SUB_PIXELS
op	25:35	0:0	6	-
water	25:37	0:0	6	1
water	25:38	0:0	6	)
water	25:39	0:0	6	;
water	26:12	0:0	6	subV
op	26:17	0:0	6	=
water	26:19	0:0	6	v
op	26:21	0:0	6	&
water	26:23	0:0	6	(
water	26:24	0:0	6	SUB_PIXELS
op	26:35	0:0	6	-
water	26:37	0:0	6	1
water	26:38	0:0	6	)
water	26:39	0:0	6	;
water	27:12	0:0	6	u
op	27:15	0:0	6	>>=
water	27:19	0:0	6	SUB_PIXEL_BITS
water	27:33	0:0	6	;
water	28:12	0:0	6	v
op	28:15	0:0	6	>>=
water	28:19	0:0	6	SUB_PIXEL_BITS
water	28:33	0:0	6	;
if	29:12	43:12	6	(u > 0 && v > 0 && u < w - 2 && v < h - 2)
cond	29:16	29:55	7	u > 0 && v > 0 && u < w - 2 && v < h - 2
water	29:16	0:0	8	u
op	29:18	0:0	8	>
water	29:20	0:0	8	0
op	29:22	0:0	8	&&
water	29:25	0:0	8	v
op	29:27	0:0	8	>
water	29:29	0:0	8	0
op	29:31	0:0	8	&&
water	29:34	0:0	8	u
op	29:36	0:0	8	<
water	29:38	0:0	8	w
op	29:40	0:0	8	-
water	29:42	0:0	8	2
op	29:44	0:0	8	&&
water	29:47	0:0	8	v
op	29:49	0:0	8	<
water	29:51	0:0	8	h
op	29:53	0:0	8	-
water	29:55	0:0	8	2
stmts	29:57	43:12	7	
water	29:57	0:0	8	{
decl	30:16	30:52	8	const int	index
op	30:32	0:0	8	=
water	30:34	0:0	8	u
op	30:36	0:0	8	+
water	30:38	0:0	8	v
op	30:39	0:0	8	*
water	30:40	0:0	8	src_linesize
decl	31:16	31:47	8	const int	a
op	31:28	0:0	8	=
water	31:30	0:0	8	s
op	31:31	0:0	8	->
water	31:33	0:0	8	coeff
op	31:38	0:0	8	[
water	31:39	0:0	8	subU
op	31:43	0:0	8	]
op	31:44	0:0	8	[
water	31:45	0:0	8	0
op	31:46	0:0	8	]
decl	32:16	32:47	8	const int	b
op	32:28	0:0	8	=
water	32:30	0:0	8	s
op	32:31	0:0	8	->
water	32:33	0:0	8	coeff
op	32:38	0:0	8	[
water	32:39	0:0	8	subU
op	32:43	0:0	8	]
op	32:44	0:0	8	[
water	32:45	0:0	8	1
op	32:46	0:0	8	]
decl	33:16	33:47	8	const int	c
op	33:28	0:0	8	=
water	33:30	0:0	8	s
op	33:31	0:0	8	->
water	33:33	0:0	8	coeff
op	33:38	0:0	8	[
water	33:39	0:0	8	subU
op	33:43	0:0	8	]
op	33:44	0:0	8	[
water	33:45	0:0	8	2
op	33:46	0:0	8	]
decl	34:16	34:47	8	const int	d
op	34:28	0:0	8	=
water	34:30	0:0	8	s
op	34:31	0:0	8	->
water	34:33	0:0	8	coeff
op	34:38	0:0	8	[
water	34:39	0:0	8	subU
op	34:43	0:0	8	]
op	34:44	0:0	8	[
water	34:45	0:0	8	3
op	34:46	0:0	8	]
water	35:16	0:0	8	sum
op	35:20	0:0	8	=
water	35:22	0:0	8	s
op	35:23	0:0	8	->
water	35:25	0:0	8	coeff
op	35:30	0:0	8	[
water	35:31	0:0	8	subV
op	35:35	0:0	8	]
op	35:36	0:0	8	[
water	35:37	0:0	8	0
op	35:38	0:0	8	]
op	35:40	0:0	8	*
water	35:42	0:0	8	(
water	35:43	0:0	8	a
op	35:45	0:0	8	*
water	35:47	0:0	8	src
op	35:50	0:0	8	[
water	35:51	0:0	8	index
op	35:57	0:0	8	-
water	35:59	0:0	8	1
op	35:61	0:0	8	-
water	35:67	0:0	8	src_linesize
op	35:79	0:0	8	]
op	35:81	0:0	8	+
water	35:83	0:0	8	b
op	35:85	0:0	8	*
water	35:87	0:0	8	src
op	35:90	0:0	8	[
water	35:91	0:0	8	index
op	35:97	0:0	8	-
water	35:99	0:0	8	0
op	35:101	0:0	8	-
water	35:107	0:0	8	src_linesize
op	35:119	0:0	8	]
op	35:122	0:0	8	+
water	36:38	0:0	8	c
op	36:40	0:0	8	*
water	36:47	0:0	8	src
op	36:50	0:0	8	[
water	36:51	0:0	8	index
op	36:57	0:0	8	+
water	36:59	0:0	8	1
op	36:61	0:0	8	-
water	36:67	0:0	8	src_linesize
op	36:79	0:0	8	]
op	36:81	0:0	8	+
water	36:83	0:0	8	d
op	36:85	0:0	8	*
water	36:87	0:0	8	src
op	36:90	0:0	8	[
water	36:91	0:0	8	index
op	36:97	0:0	8	+
water	36:99	0:0	8	2
op	36:101	0:0	8	-
water	36:107	0:0	8	src_linesize
op	36:119	0:0	8	]
water	36:120	0:0	8	)
op	36:122	0:0	8	+
water	37:22	0:0	8	s
op	37:23	0:0	8	->
water	37:25	0:0	8	coeff
op	37:30	0:0	8	[
water	37:31	0:0	8	subV
op	37:35	0:0	8	]
op	37:36	0:0	8	[
water	37:37	0:0	8	1
op	37:38	0:0	8	]
op	37:40	0:0	8	*
water	37:42	0:0	8	(
water	37:43	0:0	8	a
op	37:45	0:0	8	*
water	37:47	0:0	8	src
op	37:50	0:0	8	[
water	37:51	0:0	8	index
op	37:57	0:0	8	-
water	37:59	0:0	8	1
op	37:79	0:0	8	]
op	37:81	0:0	8	+
water	37:83	0:0	8	b
op	37:85	0:0	8	*
water	37:87	0:0	8	src
op	37:90	0:0	8	[
water	37:91	0:0	8	index
op	37:97	0:0	8	-
water	37:99	0:0	8	0
op	37:119	0:0	8	]
op	37:122	0:0	8	+
water	38:38	0:0	8	c
op	38:40	0:0	8	*
water	38:47	0:0	8	src
op	38:50	0:0	8	[
water	38:51	0:0	8	index
op	38:57	0:0	8	+
water	38:59	0:0	8	1
op	38:79	0:0	8	]
op	38:81	0:0	8	+
water	38:83	0:0	8	d
op	38:85	0:0	8	*
water	38:87	0:0	8	src
op	38:90	0:0	8	[
water	38:91	0:0	8	index
op	38:97	0:0	8	+
water	38:99	0:0	8	2
op	38:119	0:0	8	]
water	38:120	0:0	8	)
op	38:122	0:0	8	+
water	39:22	0:0	8	s
op	39:23	0:0	8	->
water	39:25	0:0	8	coeff
op	39:30	0:0	8	[
water	39:31	0:0	8	subV
op	39:35	0:0	8	]
op	39:36	0:0	8	[
water	39:37	0:0	8	2
op	39:38	0:0	8	]
op	39:40	0:0	8	*
water	39:42	0:0	8	(
water	39:43	0:0	8	a
op	39:45	0:0	8	*
water	39:47	0:0	8	src
op	39:50	0:0	8	[
water	39:51	0:0	8	index
op	39:57	0:0	8	-
water	39:59	0:0	8	1
op	39:61	0:0	8	+
water	39:67	0:0	8	src_linesize
op	39:79	0:0	8	]
op	39:81	0:0	8	+
water	39:83	0:0	8	b
op	39:85	0:0	8	*
water	39:87	0:0	8	src
op	39:90	0:0	8	[
water	39:91	0:0	8	index
op	39:97	0:0	8	-
water	39:99	0:0	8	0
op	39:101	0:0	8	+
water	39:107	0:0	8	src_linesize
op	39:119	0:0	8	]
op	39:122	0:0	8	+
water	40:38	0:0	8	c
op	40:40	0:0	8	*
water	40:47	0:0	8	src
op	40:50	0:0	8	[
water	40:51	0:0	8	index
op	40:57	0:0	8	+
water	40:59	0:0	8	1
op	40:61	0:0	8	+
water	40:67	0:0	8	src_linesize
op	40:79	0:0	8	]
op	40:81	0:0	8	+
water	40:83	0:0	8	d
op	40:85	0:0	8	*
water	40:87	0:0	8	src
op	40:90	0:0	8	[
water	40:91	0:0	8	index
op	40:97	0:0	8	+
water	40:99	0:0	8	2
op	40:101	0:0	8	+
water	40:107	0:0	8	src_linesize
op	40:119	0:0	8	]
water	40:120	0:0	8	)
op	40:122	0:0	8	+
water	41:22	0:0	8	s
op	41:23	0:0	8	->
water	41:25	0:0	8	coeff
op	41:30	0:0	8	[
water	41:31	0:0	8	subV
op	41:35	0:0	8	]
op	41:36	0:0	8	[
water	41:37	0:0	8	3
op	41:38	0:0	8	]
op	41:40	0:0	8	*
water	41:42	0:0	8	(
water	41:43	0:0	8	a
op	41:45	0:0	8	*
water	41:47	0:0	8	src
op	41:50	0:0	8	[
water	41:51	0:0	8	index
op	41:57	0:0	8	-
water	41:59	0:0	8	1
op	41:61	0:0	8	+
water	41:63	0:0	8	2
op	41:65	0:0	8	*
water	41:67	0:0	8	src_linesize
op	41:79	0:0	8	]
op	41:81	0:0	8	+
water	41:83	0:0	8	b
op	41:85	0:0	8	*
water	41:87	0:0	8	src
op	41:90	0:0	8	[
water	41:91	0:0	8	index
op	41:97	0:0	8	-
water	41:99	0:0	8	0
op	41:101	0:0	8	+
water	41:103	0:0	8	2
op	41:105	0:0	8	*
water	41:107	0:0	8	src_linesize
op	41:119	0:0	8	]
op	41:122	0:0	8	+
water	42:38	0:0	8	c
op	42:40	0:0	8	*
water	42:47	0:0	8	src
op	42:50	0:0	8	[
water	42:51	0:0	8	index
op	42:57	0:0	8	+
water	42:59	0:0	8	1
op	42:61	0:0	8	+
water	42:63	0:0	8	2
op	42:65	0:0	8	*
water	42:67	0:0	8	src_linesize
op	42:79	0:0	8	]
op	42:81	0:0	8	+
water	42:83	0:0	8	d
op	42:85	0:0	8	*
water	42:87	0:0	8	src
op	42:90	0:0	8	[
water	42:91	0:0	8	index
op	42:97	0:0	8	+
water	42:99	0:0	8	2
op	42:101	0:0	8	+
water	42:103	0:0	8	2
op	42:105	0:0	8	*
water	42:107	0:0	8	src_linesize
op	42:119	0:0	8	]
water	42:120	0:0	8	)
water	42:121	0:0	8	;
water	43:12	0:0	8	}
else	43:14	61:12	6
stmts	43:19	61:12	7	
water	43:19	0:0	8	{
decl	44:16	44:26	8	int	dx
water	44:22	0:0	8	,
decl	44:16	44:26	8	int	dy
water	45:16	0:0	8	sum
op	45:20	0:0	8	=
water	45:22	0:0	8	0
water	45:23	0:0	8	;
for	46:16	60:16	8	(dy = 0 ;dy < 4;dy ++)
forinit	46:21	46:27	9	dy = 0 ;
water	46:21	0:0	10	dy
op	46:24	0:0	10	=
water	46:26	0:0	10	0
water	46:27	0:0	10	;
cond	46:29	46:34	9	dy < 4
water	46:29	0:0	10	dy
op	46:32	0:0	10	<
water	46:34	0:0	10	4
forexpr	46:37	46:39	9	dy ++
water	46:37	0:0	10	dy
op	46:39	0:0	10	++
stmts	46:43	60:16	9	
water	46:43	0:0	10	{
decl	47:20	47:39	10	int	iy
op	47:27	0:0	10	=
water	47:29	0:0	10	v
op	47:31	0:0	10	+
water	47:33	0:0	10	dy
op	47:36	0:0	10	-
water	47:38	0:0	10	1
if	48:20	49:30	10	(iy < 0)
cond	48:24	48:29	11	iy < 0
water	48:24	0:0	12	iy
op	48:27	0:0	12	<
water	48:29	0:0	12	0
stmts	49:24	49:30	11	
water	49:24	0:0	12	iy
op	49:27	0:0	12	=
water	49:29	0:0	12	0
water	49:30	0:0	12	;
else	50:20	51:32	10
stmts	50:25	51:32	11	
if	50:25	51:32	12	(iy >= h)
cond	50:29	50:35	13	iy >= h
water	50:29	0:0	14	iy
op	50:32	0:0	14	>=
water	50:35	0:0	14	h
stmts	51:24	51:32	13	
water	51:24	0:0	14	iy
op	51:27	0:0	14	=
water	51:29	0:0	14	h
op	51:30	0:0	14	-
water	51:31	0:0	14	1
water	51:32	0:0	14	;
for	52:20	59:20	10	(dx = 0 ;dx < 4;dx ++)
forinit	52:25	52:31	11	dx = 0 ;
water	52:25	0:0	12	dx
op	52:28	0:0	12	=
water	52:30	0:0	12	0
water	52:31	0:0	12	;
cond	52:33	52:38	11	dx < 4
water	52:33	0:0	12	dx
op	52:36	0:0	12	<
water	52:38	0:0	12	4
forexpr	52:41	52:43	11	dx ++
water	52:41	0:0	12	dx
op	52:43	0:0	12	++
stmts	52:47	59:20	11	
water	52:47	0:0	12	{
decl	53:24	53:43	12	int	ix
op	53:31	0:0	12	=
water	53:33	0:0	12	u
op	53:35	0:0	12	+
water	53:37	0:0	12	dx
op	53:40	0:0	12	-
water	53:42	0:0	12	1
if	54:24	55:34	12	(ix < 0)
cond	54:28	54:33	13	ix < 0
water	54:28	0:0	14	ix
op	54:31	0:0	14	<
water	54:33	0:0	14	0
stmts	55:28	55:34	13	
water	55:28	0:0	14	ix
op	55:31	0:0	14	=
water	55:33	0:0	14	0
water	55:34	0:0	14	;
else	56:24	57:38	12
stmts	56:29	57:38	13	
if	56:29	57:38	14	(ix >= w)
cond	56:33	56:39	15	ix >= w
water	56:33	0:0	16	ix
op	56:36	0:0	16	>=
water	56:39	0:0	16	w
stmts	57:28	57:38	15	
water	57:28	0:0	16	ix
op	57:31	0:0	16	=
water	57:33	0:0	16	w
op	57:35	0:0	16	-
water	57:37	0:0	16	1
water	57:38	0:0	16	;
water	58:24	0:0	12	sum
op	58:28	0:0	12	+=
water	58:31	0:0	12	s
op	58:32	0:0	12	->
water	58:34	0:0	12	coeff
op	58:39	0:0	12	[
water	58:40	0:0	12	subU
op	58:44	0:0	12	]
op	58:45	0:0	12	[
water	58:46	0:0	12	dx
op	58:48	0:0	12	]
op	58:50	0:0	12	*
water	58:52	0:0	12	s
op	58:53	0:0	12	->
water	58:55	0:0	12	coeff
op	58:60	0:0	12	[
water	58:61	0:0	12	subV
op	58:65	0:0	12	]
op	58:66	0:0	12	[
water	58:67	0:0	12	dy
op	58:69	0:0	12	]
op	58:71	0:0	12	*
water	58:73	0:0	12	src
op	58:76	0:0	12	[
water	58:78	0:0	12	ix
op	58:81	0:0	12	+
water	58:83	0:0	12	iy
op	58:86	0:0	12	*
water	58:88	0:0	12	src_linesize
op	58:100	0:0	12	]
water	58:101	0:0	12	;
water	59:20	0:0	12	}
water	60:16	0:0	10	}
water	61:12	0:0	8	}
water	62:12	0:0	6	sum
op	62:16	0:0	6	=
water	62:18	0:0	6	(
water	62:19	0:0	6	sum
op	62:23	0:0	6	+
water	62:25	0:0	6	(
water	62:26	0:0	6	1
op	62:27	0:0	6	<<
water	62:29	0:0	6	(
water	62:30	0:0	6	COEFF_BITS
op	62:41	0:0	6	*
water	62:43	0:0	6	2
op	62:45	0:0	6	-
water	62:47	0:0	6	1
water	62:48	0:0	6	)
water	62:49	0:0	6	)
water	62:50	0:0	6	)
op	62:52	0:0	6	>>
water	62:55	0:0	6	(
water	62:56	0:0	6	COEFF_BITS
op	62:67	0:0	6	*
water	62:69	0:0	6	2
water	62:70	0:0	6	)
water	62:71	0:0	6	;
water	63:12	0:0	6	sum
op	63:16	0:0	6	=
call	63:18	63:35	6	av_clip_uint8
arg	63:32	63:35	7	sum
water	63:32	0:0	8	sum
water	63:36	0:0	6	;
water	64:12	0:0	6	dst
op	64:15	0:0	6	[
water	64:16	0:0	6	x
op	64:18	0:0	6	+
water	64:20	0:0	6	y
op	64:22	0:0	6	*
water	64:24	0:0	6	dst_linesize
op	64:36	0:0	6	]
op	64:38	0:0	6	=
water	64:40	0:0	6	sum
water	64:43	0:0	6	;
water	65:8	0:0	6	}
water	66:4	0:0	4	}
return	67:4	67:12	2	0
water	67:11	0:0	3	0

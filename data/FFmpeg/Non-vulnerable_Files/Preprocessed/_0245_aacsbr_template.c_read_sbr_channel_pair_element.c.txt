func	1:0	38:0	0	static int	read_sbr_channel_pair_element
params	1:40	0:0	1	
param	1:41	1:55	2	AACContext *	ac
param	2:42	2:70	2	SpectralBandReplication *	sbr
param	3:42	3:59	2	GetBitContext *	gb
stmnts	5:4	37:12	1	
if	5:4	6:24	2	(get_bits1 (gb ))
cond	5:8	5:20	3	get_bits1 (gb )
call	5:8	5:20	4	get_bits1
arg	5:18	5:20	5	gb
water	5:18	0:0	6	gb
stmts	6:8	6:24	3	
call	6:8	6:23	4	skip_bits
arg	6:18	6:20	5	gb
water	6:18	0:0	6	gb
arg	6:22	6:23	5	8
water	6:22	0:0	6	8
water	6:24	0:0	4	;
if	7:4	20:4	2	(( sbr -> bs_coupling =get_bits1 (gb ) ))
cond	7:8	7:41	3	( sbr -> bs_coupling =get_bits1 (gb ) )
water	7:8	0:0	4	(
water	7:9	0:0	4	sbr
op	7:12	0:0	4	->
water	7:14	0:0	4	bs_coupling
op	7:26	0:0	4	=
call	7:28	7:40	4	get_bits1
arg	7:38	7:40	5	gb
water	7:38	0:0	6	gb
water	7:41	0:0	4	)
stmts	7:44	20:4	3	
water	7:44	0:0	4	{
if	8:8	9:21	4	(read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 0 ] ))
cond	8:12	8:52	5	read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 0 ] )
call	8:12	8:52	6	read_sbr_grid
arg	8:26	8:28	7	ac
water	8:26	0:0	8	ac
arg	8:30	8:33	7	sbr
water	8:30	0:0	8	sbr
arg	8:35	8:37	7	gb
water	8:35	0:0	8	gb
arg	8:39	8:52	7	&sbr->data[0]
op	8:39	0:0	8	&
water	8:40	0:0	8	sbr
op	8:43	0:0	8	->
water	8:45	0:0	8	data
op	8:49	0:0	8	[
water	8:50	0:0	8	0
op	8:51	0:0	8	]
stmts	9:12	9:21	5	
return	9:12	9:21	6	-1
op	9:19	0:0	7	-
water	9:20	0:0	7	1
call	10:8	10:50	4	copy_sbr_grid
arg	10:22	10:35	5	&sbr->data[1]
op	10:22	0:0	6	&
water	10:23	0:0	6	sbr
op	10:26	0:0	6	->
water	10:28	0:0	6	data
op	10:32	0:0	6	[
water	10:33	0:0	6	1
op	10:34	0:0	6	]
arg	10:37	10:50	5	&sbr->data[0]
op	10:37	0:0	6	&
water	10:38	0:0	6	sbr
op	10:41	0:0	6	->
water	10:43	0:0	6	data
op	10:47	0:0	6	[
water	10:48	0:0	6	0
op	10:49	0:0	6	]
water	10:51	0:0	4	;
call	11:8	11:44	4	read_sbr_dtdf
arg	11:22	11:25	5	sbr
water	11:22	0:0	6	sbr
arg	11:27	11:29	5	gb
water	11:27	0:0	6	gb
arg	11:31	11:44	5	&sbr->data[0]
op	11:31	0:0	6	&
water	11:32	0:0	6	sbr
op	11:35	0:0	6	->
water	11:37	0:0	6	data
op	11:41	0:0	6	[
water	11:42	0:0	6	0
op	11:43	0:0	6	]
water	11:45	0:0	4	;
call	12:8	12:44	4	read_sbr_dtdf
arg	12:22	12:25	5	sbr
water	12:22	0:0	6	sbr
arg	12:27	12:29	5	gb
water	12:27	0:0	6	gb
arg	12:31	12:44	5	&sbr->data[1]
op	12:31	0:0	6	&
water	12:32	0:0	6	sbr
op	12:35	0:0	6	->
water	12:37	0:0	6	data
op	12:41	0:0	6	[
water	12:42	0:0	6	1
op	12:43	0:0	6	]
water	12:45	0:0	4	;
call	13:8	13:44	4	read_sbr_invf
arg	13:22	13:25	5	sbr
water	13:22	0:0	6	sbr
arg	13:27	13:29	5	gb
water	13:27	0:0	6	gb
arg	13:31	13:44	5	&sbr->data[0]
op	13:31	0:0	6	&
water	13:32	0:0	6	sbr
op	13:35	0:0	6	->
water	13:37	0:0	6	data
op	13:41	0:0	6	[
water	13:42	0:0	6	0
op	13:43	0:0	6	]
water	13:45	0:0	4	;
call	14:8	14:111	4	memcpy
arg	14:15	14:43	5	sbr->data[1].bs_invf_mode[1]
water	14:15	0:0	6	sbr
op	14:18	0:0	6	->
water	14:20	0:0	6	data
op	14:24	0:0	6	[
water	14:25	0:0	6	1
op	14:26	0:0	6	]
op	14:27	0:0	6	.
water	14:28	0:0	6	bs_invf_mode
op	14:40	0:0	6	[
water	14:41	0:0	6	1
op	14:42	0:0	6	]
arg	14:45	14:73	5	sbr->data[1].bs_invf_mode[0]
water	14:45	0:0	6	sbr
op	14:48	0:0	6	->
water	14:50	0:0	6	data
op	14:54	0:0	6	[
water	14:55	0:0	6	1
op	14:56	0:0	6	]
op	14:57	0:0	6	.
water	14:58	0:0	6	bs_invf_mode
op	14:70	0:0	6	[
water	14:71	0:0	6	0
op	14:72	0:0	6	]
arg	14:75	14:111	5	sizeof(sbr->data[1].bs_invf_mode[0])
op	14:75	0:0	6	sizeof
water	14:81	0:0	6	(
water	14:82	0:0	6	sbr
op	14:85	0:0	6	->
water	14:87	0:0	6	data
op	14:91	0:0	6	[
water	14:92	0:0	6	1
op	14:93	0:0	6	]
op	14:94	0:0	6	.
water	14:95	0:0	6	bs_invf_mode
op	14:107	0:0	6	[
water	14:108	0:0	6	0
op	14:109	0:0	6	]
water	14:110	0:0	6	)
water	14:112	0:0	4	;
call	15:8	15:111	4	memcpy
arg	15:15	15:43	5	sbr->data[1].bs_invf_mode[0]
water	15:15	0:0	6	sbr
op	15:18	0:0	6	->
water	15:20	0:0	6	data
op	15:24	0:0	6	[
water	15:25	0:0	6	1
op	15:26	0:0	6	]
op	15:27	0:0	6	.
water	15:28	0:0	6	bs_invf_mode
op	15:40	0:0	6	[
water	15:41	0:0	6	0
op	15:42	0:0	6	]
arg	15:45	15:73	5	sbr->data[0].bs_invf_mode[0]
water	15:45	0:0	6	sbr
op	15:48	0:0	6	->
water	15:50	0:0	6	data
op	15:54	0:0	6	[
water	15:55	0:0	6	0
op	15:56	0:0	6	]
op	15:57	0:0	6	.
water	15:58	0:0	6	bs_invf_mode
op	15:70	0:0	6	[
water	15:71	0:0	6	0
op	15:72	0:0	6	]
arg	15:75	15:111	5	sizeof(sbr->data[1].bs_invf_mode[0])
op	15:75	0:0	6	sizeof
water	15:81	0:0	6	(
water	15:82	0:0	6	sbr
op	15:85	0:0	6	->
water	15:87	0:0	6	data
op	15:91	0:0	6	[
water	15:92	0:0	6	1
op	15:93	0:0	6	]
op	15:94	0:0	6	.
water	15:95	0:0	6	bs_invf_mode
op	15:107	0:0	6	[
water	15:108	0:0	6	0
op	15:109	0:0	6	]
water	15:110	0:0	6	)
water	15:112	0:0	4	;
call	16:8	16:51	4	read_sbr_envelope
arg	16:26	16:29	5	sbr
water	16:26	0:0	6	sbr
arg	16:31	16:33	5	gb
water	16:31	0:0	6	gb
arg	16:35	16:48	5	&sbr->data[0]
op	16:35	0:0	6	&
water	16:36	0:0	6	sbr
op	16:39	0:0	6	->
water	16:41	0:0	6	data
op	16:45	0:0	6	[
water	16:46	0:0	6	0
op	16:47	0:0	6	]
arg	16:50	16:51	5	0
water	16:50	0:0	6	0
water	16:52	0:0	4	;
call	17:8	17:48	4	read_sbr_noise
arg	17:23	17:26	5	sbr
water	17:23	0:0	6	sbr
arg	17:28	17:30	5	gb
water	17:28	0:0	6	gb
arg	17:32	17:45	5	&sbr->data[0]
op	17:32	0:0	6	&
water	17:33	0:0	6	sbr
op	17:36	0:0	6	->
water	17:38	0:0	6	data
op	17:42	0:0	6	[
water	17:43	0:0	6	0
op	17:44	0:0	6	]
arg	17:47	17:48	5	0
water	17:47	0:0	6	0
water	17:49	0:0	4	;
call	18:8	18:51	4	read_sbr_envelope
arg	18:26	18:29	5	sbr
water	18:26	0:0	6	sbr
arg	18:31	18:33	5	gb
water	18:31	0:0	6	gb
arg	18:35	18:48	5	&sbr->data[1]
op	18:35	0:0	6	&
water	18:36	0:0	6	sbr
op	18:39	0:0	6	->
water	18:41	0:0	6	data
op	18:45	0:0	6	[
water	18:46	0:0	6	1
op	18:47	0:0	6	]
arg	18:50	18:51	5	1
water	18:50	0:0	6	1
water	18:52	0:0	4	;
call	19:8	19:48	4	read_sbr_noise
arg	19:23	19:26	5	sbr
water	19:23	0:0	6	sbr
arg	19:28	19:30	5	gb
water	19:28	0:0	6	gb
arg	19:32	19:45	5	&sbr->data[1]
op	19:32	0:0	6	&
water	19:33	0:0	6	sbr
op	19:36	0:0	6	->
water	19:38	0:0	6	data
op	19:42	0:0	6	[
water	19:43	0:0	6	1
op	19:44	0:0	6	]
arg	19:47	19:48	5	1
water	19:47	0:0	6	1
water	19:49	0:0	4	;
water	20:4	0:0	4	}
else	20:6	32:4	2
stmts	20:11	32:4	3	
water	20:11	0:0	4	{
if	21:8	23:21	4	(read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 0 ] ) ||read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 1 ] ))
cond	21:12	22:52	5	read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 0 ] ) ||read_sbr_grid (ac ,sbr ,gb ,& sbr -> data [ 1 ] )
call	21:12	21:52	6	read_sbr_grid
arg	21:26	21:28	7	ac
water	21:26	0:0	8	ac
arg	21:30	21:33	7	sbr
water	21:30	0:0	8	sbr
arg	21:35	21:37	7	gb
water	21:35	0:0	8	gb
arg	21:39	21:52	7	&sbr->data[0]
op	21:39	0:0	8	&
water	21:40	0:0	8	sbr
op	21:43	0:0	8	->
water	21:45	0:0	8	data
op	21:49	0:0	8	[
water	21:50	0:0	8	0
op	21:51	0:0	8	]
op	21:54	0:0	6	||
call	22:12	22:52	6	read_sbr_grid
arg	22:26	22:28	7	ac
water	22:26	0:0	8	ac
arg	22:30	22:33	7	sbr
water	22:30	0:0	8	sbr
arg	22:35	22:37	7	gb
water	22:35	0:0	8	gb
arg	22:39	22:52	7	&sbr->data[1]
op	22:39	0:0	8	&
water	22:40	0:0	8	sbr
op	22:43	0:0	8	->
water	22:45	0:0	8	data
op	22:49	0:0	8	[
water	22:50	0:0	8	1
op	22:51	0:0	8	]
stmts	23:12	23:21	5	
return	23:12	23:21	6	-1
op	23:19	0:0	7	-
water	23:20	0:0	7	1
call	24:8	24:44	4	read_sbr_dtdf
arg	24:22	24:25	5	sbr
water	24:22	0:0	6	sbr
arg	24:27	24:29	5	gb
water	24:27	0:0	6	gb
arg	24:31	24:44	5	&sbr->data[0]
op	24:31	0:0	6	&
water	24:32	0:0	6	sbr
op	24:35	0:0	6	->
water	24:37	0:0	6	data
op	24:41	0:0	6	[
water	24:42	0:0	6	0
op	24:43	0:0	6	]
water	24:45	0:0	4	;
call	25:8	25:44	4	read_sbr_dtdf
arg	25:22	25:25	5	sbr
water	25:22	0:0	6	sbr
arg	25:27	25:29	5	gb
water	25:27	0:0	6	gb
arg	25:31	25:44	5	&sbr->data[1]
op	25:31	0:0	6	&
water	25:32	0:0	6	sbr
op	25:35	0:0	6	->
water	25:37	0:0	6	data
op	25:41	0:0	6	[
water	25:42	0:0	6	1
op	25:43	0:0	6	]
water	25:45	0:0	4	;
call	26:8	26:44	4	read_sbr_invf
arg	26:22	26:25	5	sbr
water	26:22	0:0	6	sbr
arg	26:27	26:29	5	gb
water	26:27	0:0	6	gb
arg	26:31	26:44	5	&sbr->data[0]
op	26:31	0:0	6	&
water	26:32	0:0	6	sbr
op	26:35	0:0	6	->
water	26:37	0:0	6	data
op	26:41	0:0	6	[
water	26:42	0:0	6	0
op	26:43	0:0	6	]
water	26:45	0:0	4	;
call	27:8	27:44	4	read_sbr_invf
arg	27:22	27:25	5	sbr
water	27:22	0:0	6	sbr
arg	27:27	27:29	5	gb
water	27:27	0:0	6	gb
arg	27:31	27:44	5	&sbr->data[1]
op	27:31	0:0	6	&
water	27:32	0:0	6	sbr
op	27:35	0:0	6	->
water	27:37	0:0	6	data
op	27:41	0:0	6	[
water	27:42	0:0	6	1
op	27:43	0:0	6	]
water	27:45	0:0	4	;
call	28:8	28:51	4	read_sbr_envelope
arg	28:26	28:29	5	sbr
water	28:26	0:0	6	sbr
arg	28:31	28:33	5	gb
water	28:31	0:0	6	gb
arg	28:35	28:48	5	&sbr->data[0]
op	28:35	0:0	6	&
water	28:36	0:0	6	sbr
op	28:39	0:0	6	->
water	28:41	0:0	6	data
op	28:45	0:0	6	[
water	28:46	0:0	6	0
op	28:47	0:0	6	]
arg	28:50	28:51	5	0
water	28:50	0:0	6	0
water	28:52	0:0	4	;
call	29:8	29:51	4	read_sbr_envelope
arg	29:26	29:29	5	sbr
water	29:26	0:0	6	sbr
arg	29:31	29:33	5	gb
water	29:31	0:0	6	gb
arg	29:35	29:48	5	&sbr->data[1]
op	29:35	0:0	6	&
water	29:36	0:0	6	sbr
op	29:39	0:0	6	->
water	29:41	0:0	6	data
op	29:45	0:0	6	[
water	29:46	0:0	6	1
op	29:47	0:0	6	]
arg	29:50	29:51	5	1
water	29:50	0:0	6	1
water	29:52	0:0	4	;
call	30:8	30:48	4	read_sbr_noise
arg	30:23	30:26	5	sbr
water	30:23	0:0	6	sbr
arg	30:28	30:30	5	gb
water	30:28	0:0	6	gb
arg	30:32	30:45	5	&sbr->data[0]
op	30:32	0:0	6	&
water	30:33	0:0	6	sbr
op	30:36	0:0	6	->
water	30:38	0:0	6	data
op	30:42	0:0	6	[
water	30:43	0:0	6	0
op	30:44	0:0	6	]
arg	30:47	30:48	5	0
water	30:47	0:0	6	0
water	30:49	0:0	4	;
call	31:8	31:48	4	read_sbr_noise
arg	31:23	31:26	5	sbr
water	31:23	0:0	6	sbr
arg	31:28	31:30	5	gb
water	31:28	0:0	6	gb
arg	31:32	31:45	5	&sbr->data[1]
op	31:32	0:0	6	&
water	31:33	0:0	6	sbr
op	31:36	0:0	6	->
water	31:38	0:0	6	data
op	31:42	0:0	6	[
water	31:43	0:0	6	1
op	31:44	0:0	6	]
arg	31:47	31:48	5	1
water	31:47	0:0	6	1
water	31:49	0:0	4	;
water	32:4	0:0	4	}
if	33:4	34:69	2	(( sbr -> data [ 0 ] . bs_add_harmonic_flag =get_bits1 (gb ) ))
cond	33:8	33:58	3	( sbr -> data [ 0 ] . bs_add_harmonic_flag =get_bits1 (gb ) )
water	33:8	0:0	4	(
water	33:9	0:0	4	sbr
op	33:12	0:0	4	->
water	33:14	0:0	4	data
op	33:18	0:0	4	[
water	33:19	0:0	4	0
op	33:20	0:0	4	]
op	33:21	0:0	4	.
water	33:22	0:0	4	bs_add_harmonic_flag
op	33:43	0:0	4	=
call	33:45	33:57	4	get_bits1
arg	33:55	33:57	5	gb
water	33:55	0:0	6	gb
water	33:58	0:0	4	)
stmts	34:8	34:69	3	
call	34:8	34:68	4	get_bits1_vector
arg	34:25	34:27	5	gb
water	34:25	0:0	6	gb
arg	34:29	34:57	5	sbr->data[0].bs_add_harmonic
water	34:29	0:0	6	sbr
op	34:32	0:0	6	->
water	34:34	0:0	6	data
op	34:38	0:0	6	[
water	34:39	0:0	6	0
op	34:40	0:0	6	]
op	34:41	0:0	6	.
water	34:42	0:0	6	bs_add_harmonic
arg	34:59	34:68	5	sbr->n[1]
water	34:59	0:0	6	sbr
op	34:62	0:0	6	->
water	34:64	0:0	6	n
op	34:65	0:0	6	[
water	34:66	0:0	6	1
op	34:67	0:0	6	]
water	34:69	0:0	4	;
if	35:4	36:69	2	(( sbr -> data [ 1 ] . bs_add_harmonic_flag =get_bits1 (gb ) ))
cond	35:8	35:58	3	( sbr -> data [ 1 ] . bs_add_harmonic_flag =get_bits1 (gb ) )
water	35:8	0:0	4	(
water	35:9	0:0	4	sbr
op	35:12	0:0	4	->
water	35:14	0:0	4	data
op	35:18	0:0	4	[
water	35:19	0:0	4	1
op	35:20	0:0	4	]
op	35:21	0:0	4	.
water	35:22	0:0	4	bs_add_harmonic_flag
op	35:43	0:0	4	=
call	35:45	35:57	4	get_bits1
arg	35:55	35:57	5	gb
water	35:55	0:0	6	gb
water	35:58	0:0	4	)
stmts	36:8	36:69	3	
call	36:8	36:68	4	get_bits1_vector
arg	36:25	36:27	5	gb
water	36:25	0:0	6	gb
arg	36:29	36:57	5	sbr->data[1].bs_add_harmonic
water	36:29	0:0	6	sbr
op	36:32	0:0	6	->
water	36:34	0:0	6	data
op	36:38	0:0	6	[
water	36:39	0:0	6	1
op	36:40	0:0	6	]
op	36:41	0:0	6	.
water	36:42	0:0	6	bs_add_harmonic
arg	36:59	36:68	5	sbr->n[1]
water	36:59	0:0	6	sbr
op	36:62	0:0	6	->
water	36:64	0:0	6	n
op	36:65	0:0	6	[
water	36:66	0:0	6	1
op	36:67	0:0	6	]
water	36:69	0:0	4	;
return	37:4	37:12	2	0
water	37:11	0:0	3	0

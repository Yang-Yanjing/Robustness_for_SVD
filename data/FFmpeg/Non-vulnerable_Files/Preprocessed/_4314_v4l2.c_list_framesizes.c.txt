func	1:0	23:0	0	static void	list_framesizes
params	1:27	0:0	1	
param	1:28	1:48	2	AVFormatContext *	ctx
param	1:50	1:70	2	uint32_t	pixelformat
stmnts	0:0	22:4	1	
decl	3:4	3:47	2	const struct video_data	*s
op	3:31	0:0	2	=
water	3:33	0:0	2	ctx
op	3:36	0:0	2	->
water	3:38	0:0	2	priv_data
decl	4:4	4:66	2	struct v4l2_frmsizeenum	vfse
op	4:33	0:0	2	=
water	4:35	0:0	2	{
op	4:37	0:0	2	.
water	4:38	0:0	2	pixel_format
op	4:51	0:0	2	=
water	4:53	0:0	2	pixelformat
water	4:65	0:0	2	}
while	5:4	22:4	2	(!v4l2_ioctl (s -> fd ,VIDIOC_ENUM_FRAMESIZES ,& vfse ))
cond	5:10	5:58	3	!v4l2_ioctl (s -> fd ,VIDIOC_ENUM_FRAMESIZES ,& vfse )
op	5:10	0:0	4	!
call	5:11	5:58	4	v4l2_ioctl
arg	5:22	5:27	5	s->fd
water	5:22	0:0	6	s
op	5:23	0:0	6	->
water	5:25	0:0	6	fd
arg	5:29	5:51	5	VIDIOC_ENUM_FRAMESIZES
water	5:29	0:0	6	VIDIOC_ENUM_FRAMESIZES
arg	5:53	5:58	5	&vfse
op	5:53	0:0	6	&
water	5:54	0:0	6	vfse
stmts	5:61	22:4	3	
water	5:61	0:0	4	{
switch	6:8	20:8	4	(vfse . type)
cond	6:16	6:21	5	vfse . type
water	6:16	0:0	6	vfse
op	6:20	0:0	6	.
water	6:21	0:0	6	type
stmts	6:27	20:8	5	
water	6:27	0:0	6	{
label	7:8	7:39	6	case V4L2_FRMSIZE_TYPE_DISCRETE :
call	8:12	9:60	6	av_log
arg	8:19	8:22	7	ctx
water	8:19	0:0	8	ctx
arg	8:24	8:35	7	AV_LOG_INFO
water	8:24	0:0	8	AV_LOG_INFO
arg	8:37	8:45	7	" %ux%u"
water	8:37	0:0	8	" %ux%u"
arg	9:19	9:38	7	vfse.discrete.width
water	9:19	0:0	8	vfse
op	9:23	0:0	8	.
water	9:24	0:0	8	discrete
op	9:32	0:0	8	.
water	9:33	0:0	8	width
arg	9:40	9:60	7	vfse.discrete.height
water	9:40	0:0	8	vfse
op	9:44	0:0	8	.
water	9:45	0:0	8	discrete
op	9:53	0:0	8	.
water	9:54	0:0	8	height
water	9:61	0:0	6	;
break	10:8	10:13	6	
label	11:8	11:41	6	case V4L2_FRMSIZE_TYPE_CONTINUOUS :
label	12:8	12:39	6	case V4L2_FRMSIZE_TYPE_STEPWISE :
call	13:12	19:44	6	av_log
arg	13:19	13:22	7	ctx
water	13:19	0:0	8	ctx
arg	13:24	13:35	7	AV_LOG_INFO
water	13:24	0:0	8	AV_LOG_INFO
arg	13:37	13:63	7	" {%u-%u, %u}x{%u-%u, %u}"
water	13:37	0:0	8	" {%u-%u, %u}x{%u-%u, %u}"
arg	14:19	14:42	7	vfse.stepwise.min_width
water	14:19	0:0	8	vfse
op	14:23	0:0	8	.
water	14:24	0:0	8	stepwise
op	14:32	0:0	8	.
water	14:33	0:0	8	min_width
arg	15:19	15:42	7	vfse.stepwise.max_width
water	15:19	0:0	8	vfse
op	15:23	0:0	8	.
water	15:24	0:0	8	stepwise
op	15:32	0:0	8	.
water	15:33	0:0	8	max_width
arg	16:19	16:43	7	vfse.stepwise.step_width
water	16:19	0:0	8	vfse
op	16:23	0:0	8	.
water	16:24	0:0	8	stepwise
op	16:32	0:0	8	.
water	16:33	0:0	8	step_width
arg	17:19	17:43	7	vfse.stepwise.min_height
water	17:19	0:0	8	vfse
op	17:23	0:0	8	.
water	17:24	0:0	8	stepwise
op	17:32	0:0	8	.
water	17:33	0:0	8	min_height
arg	18:19	18:43	7	vfse.stepwise.max_height
water	18:19	0:0	8	vfse
op	18:23	0:0	8	.
water	18:24	0:0	8	stepwise
op	18:32	0:0	8	.
water	18:33	0:0	8	max_height
arg	19:19	19:44	7	vfse.stepwise.step_height
water	19:19	0:0	8	vfse
op	19:23	0:0	8	.
water	19:24	0:0	8	stepwise
op	19:32	0:0	8	.
water	19:33	0:0	8	step_height
water	19:45	0:0	6	;
water	20:8	0:0	6	}
water	21:8	0:0	4	vfse
op	21:12	0:0	4	.
water	21:13	0:0	4	index
op	21:18	0:0	4	++
water	21:20	0:0	4	;
water	22:4	0:0	4	}

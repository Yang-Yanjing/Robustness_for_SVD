func	1:0	22:0	0	static int	rtmp_send_packet
params	1:27	0:0	1	
param	1:28	1:43	2	RTMPContext *	rt
param	1:45	1:60	2	RTMPPacket *	pkt
param	1:62	1:71	2	int	track
stmnts	0:0	21:14	1	
decl	3:4	3:11	2	int	ret
if	4:4	16:4	2	(pkt -> type == RTMP_PT_INVOKE && track)
cond	4:8	4:39	3	pkt -> type == RTMP_PT_INVOKE && track
water	4:8	0:0	4	pkt
op	4:11	0:0	4	->
water	4:13	0:0	4	type
op	4:18	0:0	4	==
water	4:21	0:0	4	RTMP_PT_INVOKE
op	4:36	0:0	4	&&
water	4:39	0:0	4	track
stmts	4:46	16:4	3	
water	4:46	0:0	4	{
decl	5:8	5:26	4	GetByteContext	gbc
decl	6:8	6:22	4	char	name[128]
decl	7:8	7:21	4	double	pkt_id
decl	8:8	8:15	4	int	len
call	9:8	9:51	4	bytestream2_init
arg	9:25	9:29	5	&gbc
op	9:25	0:0	6	&
water	9:26	0:0	6	gbc
arg	9:31	9:40	5	pkt->data
water	9:31	0:0	6	pkt
op	9:34	0:0	6	->
water	9:36	0:0	6	data
arg	9:42	9:51	5	pkt->size
water	9:42	0:0	6	pkt
op	9:45	0:0	6	->
water	9:47	0:0	6	size
water	9:52	0:0	4	;
if	10:8	11:21	4	(( ret =ff_amf_read_string (& gbc ,name ,sizeof ( name ) ,& len ) ) < 0)
cond	10:12	10:73	5	( ret =ff_amf_read_string (& gbc ,name ,sizeof ( name ) ,& len ) ) < 0
water	10:12	0:0	6	(
water	10:13	0:0	6	ret
op	10:17	0:0	6	=
call	10:19	10:68	6	ff_amf_read_string
arg	10:38	10:42	7	&gbc
op	10:38	0:0	8	&
water	10:39	0:0	8	gbc
arg	10:44	10:48	7	name
water	10:44	0:0	8	name
arg	10:50	10:62	7	sizeof(name)
op	10:50	0:0	8	sizeof
water	10:56	0:0	8	(
water	10:57	0:0	8	name
water	10:61	0:0	8	)
arg	10:64	10:68	7	&len
op	10:64	0:0	8	&
water	10:65	0:0	8	len
water	10:69	0:0	6	)
op	10:71	0:0	6	<
water	10:73	0:0	6	0
stmts	11:12	11:21	5	
goto	11:12	11:21	6	fail
water	11:17	0:0	7	fail
if	12:8	13:21	4	(( ret =ff_amf_read_number (& gbc ,& pkt_id ) ) < 0)
cond	12:12	12:56	5	( ret =ff_amf_read_number (& gbc ,& pkt_id ) ) < 0
water	12:12	0:0	6	(
water	12:13	0:0	6	ret
op	12:17	0:0	6	=
call	12:19	12:51	6	ff_amf_read_number
arg	12:38	12:42	7	&gbc
op	12:38	0:0	8	&
water	12:39	0:0	8	gbc
arg	12:44	12:51	7	&pkt_id
op	12:44	0:0	8	&
water	12:45	0:0	8	pkt_id
water	12:52	0:0	6	)
op	12:54	0:0	6	<
water	12:56	0:0	6	0
stmts	13:12	13:21	5	
goto	13:12	13:21	6	fail
water	13:17	0:0	7	fail
if	14:8	15:21	4	(( ret =add_tracked_method (rt ,name ,pkt_id ) ) < 0)
cond	14:12	14:59	5	( ret =add_tracked_method (rt ,name ,pkt_id ) ) < 0
water	14:12	0:0	6	(
water	14:13	0:0	6	ret
op	14:17	0:0	6	=
call	14:19	14:54	6	add_tracked_method
arg	14:38	14:40	7	rt
water	14:38	0:0	8	rt
arg	14:42	14:46	7	name
water	14:42	0:0	8	name
arg	14:48	14:54	7	pkt_id
water	14:48	0:0	8	pkt_id
water	14:55	0:0	6	)
op	14:57	0:0	6	<
water	14:59	0:0	6	0
stmts	15:12	15:21	5	
goto	15:12	15:21	6	fail
water	15:17	0:0	7	fail
water	16:4	0:0	4	}
water	17:4	0:0	2	ret
op	17:8	0:0	2	=
call	17:10	18:68	2	ff_rtmp_packet_write
arg	17:31	17:41	3	rt->stream
water	17:31	0:0	4	rt
op	17:33	0:0	4	->
water	17:35	0:0	4	stream
arg	17:43	17:46	3	pkt
water	17:43	0:0	4	pkt
arg	17:48	17:66	3	rt->out_chunk_size
water	17:48	0:0	4	rt
op	17:50	0:0	4	->
water	17:52	0:0	4	out_chunk_size
arg	18:31	18:47	3	&rt->prev_pkt[1]
op	18:31	0:0	4	&
water	18:32	0:0	4	rt
op	18:34	0:0	4	->
water	18:36	0:0	4	prev_pkt
op	18:44	0:0	4	[
water	18:45	0:0	4	1
op	18:46	0:0	4	]
arg	18:49	18:68	3	&rt->nb_prev_pkt[1]
op	18:49	0:0	4	&
water	18:50	0:0	4	rt
op	18:52	0:0	4	->
water	18:54	0:0	4	nb_prev_pkt
op	18:65	0:0	4	[
water	18:66	0:0	4	1
op	18:67	0:0	4	]
water	18:69	0:0	2	;
label	19:0	19:4	2	fail :
call	20:4	20:30	2	ff_rtmp_packet_destroy
arg	20:27	20:30	3	pkt
water	20:27	0:0	4	pkt
water	20:31	0:0	2	;
return	21:4	21:14	2	ret
water	21:11	0:0	3	ret

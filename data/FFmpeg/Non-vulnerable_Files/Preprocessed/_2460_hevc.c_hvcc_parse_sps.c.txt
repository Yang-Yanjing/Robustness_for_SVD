func	1:0	81:0	0	static int	hvcc_parse_sps
params	1:25	0:0	1	
param	1:26	1:43	2	GetBitContext *	gb
param	2:26	2:62	2	HEVCDecoderConfigurationRecord *	hvcc
stmnts	0:0	80:12	1	
decl	4:4	4:80	2	unsigned int	i
water	4:18	0:0	2	,
decl	4:4	4:80	2	unsigned int	sps_max_sub_layers_minus1
water	4:45	0:0	2	,
decl	4:4	4:80	2	unsigned int	log2_max_pic_order_cnt_lsb_minus4
decl	5:4	5:86	2	unsigned int	num_short_term_ref_pic_sets
water	5:44	0:0	2	,
decl	5:4	5:86	2	unsigned int	num_delta_pocs[MAX_SHORT_TERM_RPS_COUNT]
call	6:4	6:19	2	skip_bits
arg	6:14	6:16	3	gb
water	6:14	0:0	4	gb
arg	6:18	6:19	3	4
water	6:18	0:0	4	4
water	6:20	0:0	2	;
water	7:4	0:0	2	sps_max_sub_layers_minus1
op	7:30	0:0	2	=
call	7:32	7:47	2	get_bits
arg	7:42	7:44	3	gb
water	7:42	0:0	4	gb
arg	7:46	7:47	3	3
water	7:46	0:0	4	3
water	7:48	0:0	2	;
water	16:4	0:0	2	hvcc
op	16:8	0:0	2	->
water	16:10	0:0	2	numTemporalLayers
op	16:28	0:0	2	=
call	16:30	17:65	2	FFMAX
arg	16:36	16:59	3	hvcc->numTemporalLayers
water	16:36	0:0	4	hvcc
op	16:40	0:0	4	->
water	16:42	0:0	4	numTemporalLayers
arg	17:36	17:65	3	sps_max_sub_layers_minus1+1
water	17:36	0:0	4	sps_max_sub_layers_minus1
op	17:62	0:0	4	+
water	17:64	0:0	4	1
water	17:66	0:0	2	;
water	18:4	0:0	2	hvcc
op	18:8	0:0	2	->
water	18:10	0:0	2	temporalIdNested
op	18:27	0:0	2	=
call	18:29	18:41	2	get_bits1
arg	18:39	18:41	3	gb
water	18:39	0:0	4	gb
water	18:42	0:0	2	;
call	19:4	19:54	2	hvcc_parse_ptl
arg	19:19	19:21	3	gb
water	19:19	0:0	4	gb
arg	19:23	19:27	3	hvcc
water	19:23	0:0	4	hvcc
arg	19:29	19:54	3	sps_max_sub_layers_minus1
water	19:29	0:0	4	sps_max_sub_layers_minus1
water	19:55	0:0	2	;
call	20:4	20:25	2	get_ue_golomb_long
arg	20:23	20:25	3	gb
water	20:23	0:0	4	gb
water	20:26	0:0	2	;
water	21:4	0:0	2	hvcc
op	21:8	0:0	2	->
water	21:10	0:0	2	chromaFormat
op	21:23	0:0	2	=
call	21:25	21:46	2	get_ue_golomb_long
arg	21:44	21:46	3	gb
water	21:44	0:0	4	gb
water	21:47	0:0	2	;
if	22:4	23:22	2	(hvcc -> chromaFormat == 3)
cond	22:8	22:30	3	hvcc -> chromaFormat == 3
water	22:8	0:0	4	hvcc
op	22:12	0:0	4	->
water	22:14	0:0	4	chromaFormat
op	22:27	0:0	4	==
water	22:30	0:0	4	3
stmts	23:8	23:22	3	
call	23:8	23:21	4	skip_bits1
arg	23:19	23:21	5	gb
water	23:19	0:0	6	gb
water	23:22	0:0	4	;
call	24:4	24:25	2	get_ue_golomb_long
arg	24:23	24:25	3	gb
water	24:23	0:0	4	gb
water	24:26	0:0	2	;
call	25:4	25:25	2	get_ue_golomb_long
arg	25:23	25:25	3	gb
water	25:23	0:0	4	gb
water	25:26	0:0	2	;
if	26:4	31:4	2	(get_bits1 (gb ))
cond	26:8	26:20	3	get_bits1 (gb )
call	26:8	26:20	4	get_bits1
arg	26:18	26:20	5	gb
water	26:18	0:0	6	gb
stmts	26:23	31:4	3	
water	26:23	0:0	4	{
call	27:8	27:29	4	get_ue_golomb_long
arg	27:27	27:29	5	gb
water	27:27	0:0	6	gb
water	27:30	0:0	4	;
call	28:8	28:29	4	get_ue_golomb_long
arg	28:27	28:29	5	gb
water	28:27	0:0	6	gb
water	28:30	0:0	4	;
call	29:8	29:29	4	get_ue_golomb_long
arg	29:27	29:29	5	gb
water	29:27	0:0	6	gb
water	29:30	0:0	4	;
call	30:8	30:29	4	get_ue_golomb_long
arg	30:27	30:29	5	gb
water	30:27	0:0	6	gb
water	30:30	0:0	4	;
water	31:4	0:0	4	}
water	32:4	0:0	2	hvcc
op	32:8	0:0	2	->
water	32:10	0:0	2	bitDepthLumaMinus8
op	32:38	0:0	2	=
call	32:40	32:61	2	get_ue_golomb_long
arg	32:59	32:61	3	gb
water	32:59	0:0	4	gb
water	32:62	0:0	2	;
water	33:4	0:0	2	hvcc
op	33:8	0:0	2	->
water	33:10	0:0	2	bitDepthChromaMinus8
op	33:38	0:0	2	=
call	33:40	33:61	2	get_ue_golomb_long
arg	33:59	33:61	3	gb
water	33:59	0:0	4	gb
water	33:62	0:0	2	;
water	34:4	0:0	2	log2_max_pic_order_cnt_lsb_minus4
op	34:38	0:0	2	=
call	34:40	34:61	2	get_ue_golomb_long
arg	34:59	34:61	3	gb
water	34:59	0:0	4	gb
water	34:62	0:0	2	;
water	36:4	0:0	2	i
op	36:6	0:0	2	=
call	36:8	36:20	2	get_bits1
arg	36:18	36:20	3	gb
water	36:18	0:0	4	gb
water	36:22	0:0	2	?
water	36:24	0:0	2	0
water	36:26	0:0	2	:
water	36:28	0:0	2	sps_max_sub_layers_minus1
water	36:53	0:0	2	;
for	37:4	38:40	2	(;i <= sps_max_sub_layers_minus1;i ++)
forinit	37:9	37:9	3	;
water	37:9	0:0	4	;
cond	37:11	37:16	3	i <= sps_max_sub_layers_minus1
water	37:11	0:0	4	i
op	37:13	0:0	4	<=
water	37:16	0:0	4	sps_max_sub_layers_minus1
forexpr	37:43	37:44	3	i ++
water	37:43	0:0	4	i
op	37:44	0:0	4	++
stmts	38:8	38:40	3	
call	38:8	38:39	4	skip_sub_layer_ordering_info
arg	38:37	38:39	5	gb
water	38:37	0:0	6	gb
water	38:40	0:0	4	;
call	39:4	39:25	2	get_ue_golomb_long
arg	39:23	39:25	3	gb
water	39:23	0:0	4	gb
water	39:26	0:0	2	;
call	40:4	40:25	2	get_ue_golomb_long
arg	40:23	40:25	3	gb
water	40:23	0:0	4	gb
water	40:26	0:0	2	;
call	41:4	41:25	2	get_ue_golomb_long
arg	41:23	41:25	3	gb
water	41:23	0:0	4	gb
water	41:26	0:0	2	;
call	42:4	42:25	2	get_ue_golomb_long
arg	42:23	42:25	3	gb
water	42:23	0:0	4	gb
water	42:26	0:0	2	;
call	43:4	43:25	2	get_ue_golomb_long
arg	43:23	43:25	3	gb
water	43:23	0:0	4	gb
water	43:26	0:0	2	;
call	44:4	44:25	2	get_ue_golomb_long
arg	44:23	44:25	3	gb
water	44:23	0:0	4	gb
water	44:26	0:0	2	;
if	45:4	47:34	2	(get_bits1 (gb ) &&get_bits1 (gb ))
cond	45:8	46:20	3	get_bits1 (gb ) &&get_bits1 (gb )
call	45:8	45:20	4	get_bits1
arg	45:18	45:20	5	gb
water	45:18	0:0	6	gb
op	45:22	0:0	4	&&
call	46:8	46:20	4	get_bits1
arg	46:18	46:20	5	gb
water	46:18	0:0	6	gb
stmts	47:8	47:34	3	
call	47:8	47:33	4	skip_scaling_list_data
arg	47:31	47:33	5	gb
water	47:31	0:0	6	gb
water	47:34	0:0	4	;
call	48:4	48:17	2	skip_bits1
arg	48:15	48:17	3	gb
water	48:15	0:0	4	gb
water	48:18	0:0	2	;
call	49:4	49:17	2	skip_bits1
arg	49:15	49:17	3	gb
water	49:15	0:0	4	gb
water	49:18	0:0	2	;
if	50:4	56:4	2	(get_bits1 (gb ))
cond	50:8	50:20	3	get_bits1 (gb )
call	50:8	50:20	4	get_bits1
arg	50:18	50:20	5	gb
water	50:18	0:0	6	gb
stmts	50:23	56:4	3	
water	50:23	0:0	4	{
call	51:8	51:32	4	skip_bits
arg	51:27	51:29	5	gb
water	51:27	0:0	6	gb
arg	51:31	51:32	5	4
water	51:31	0:0	6	4
water	51:33	0:0	4	;
call	52:8	52:32	4	skip_bits
arg	52:27	52:29	5	gb
water	52:27	0:0	6	gb
arg	52:31	52:32	5	4
water	52:31	0:0	6	4
water	52:33	0:0	4	;
call	53:8	53:29	4	get_ue_golomb_long
arg	53:27	53:29	5	gb
water	53:27	0:0	6	gb
water	53:30	0:0	4	;
call	54:8	54:29	4	get_ue_golomb_long
arg	54:27	54:29	5	gb
water	54:27	0:0	6	gb
water	54:30	0:0	4	;
call	55:8	55:29	4	skip_bits1
arg	55:27	55:29	5	gb
water	55:27	0:0	6	gb
water	55:30	0:0	4	;
water	56:4	0:0	4	}
water	57:4	0:0	2	num_short_term_ref_pic_sets
op	57:32	0:0	2	=
call	57:34	57:55	2	get_ue_golomb_long
arg	57:53	57:55	3	gb
water	57:53	0:0	4	gb
water	57:56	0:0	2	;
if	58:4	59:34	2	(num_short_term_ref_pic_sets > MAX_SHORT_TERM_RPS_COUNT)
cond	58:8	58:38	3	num_short_term_ref_pic_sets > MAX_SHORT_TERM_RPS_COUNT
water	58:8	0:0	4	num_short_term_ref_pic_sets
op	58:36	0:0	4	>
water	58:38	0:0	4	MAX_SHORT_TERM_RPS_COUNT
stmts	59:8	59:34	3	
return	59:8	59:34	4	AVERROR_INVALIDDATA
water	59:15	0:0	5	AVERROR_INVALIDDATA
for	60:4	64:4	2	(i = 0 ;i < num_short_term_ref_pic_sets;i ++)
forinit	60:9	60:14	3	i = 0 ;
water	60:9	0:0	4	i
op	60:11	0:0	4	=
water	60:13	0:0	4	0
water	60:14	0:0	4	;
cond	60:16	60:20	3	i < num_short_term_ref_pic_sets
water	60:16	0:0	4	i
op	60:18	0:0	4	<
water	60:20	0:0	4	num_short_term_ref_pic_sets
forexpr	60:49	60:50	3	i ++
water	60:49	0:0	4	i
op	60:50	0:0	4	++
stmts	60:54	64:4	3	
water	60:54	0:0	4	{
decl	61:8	61:79	4	int	ret
op	61:16	0:0	4	=
call	61:18	61:78	5	parse_rps
arg	61:28	61:30	6	gb
water	61:28	0:0	7	gb
arg	61:32	61:33	6	i
water	61:32	0:0	7	i
arg	61:35	61:62	6	num_short_term_ref_pic_sets
water	61:35	0:0	7	num_short_term_ref_pic_sets
arg	61:64	61:78	6	num_delta_pocs
water	61:64	0:0	7	num_delta_pocs
if	62:8	63:22	4	(ret < 0)
cond	62:12	62:18	5	ret < 0
water	62:12	0:0	6	ret
op	62:16	0:0	6	<
water	62:18	0:0	6	0
stmts	63:12	63:22	5	
return	63:12	63:22	6	ret
water	63:19	0:0	7	ret
water	64:4	0:0	4	}
if	65:4	74:4	2	(get_bits1 (gb ))
cond	65:8	65:20	3	get_bits1 (gb )
call	65:8	65:20	4	get_bits1
arg	65:18	65:20	5	gb
water	65:18	0:0	6	gb
stmts	65:23	74:4	3	
water	65:23	0:0	4	{
water	66:8	0:0	4	unsigned
water	66:17	0:0	4	num_long_term_ref_pics_sps
op	66:44	0:0	4	=
call	66:46	66:67	4	get_ue_golomb_long
arg	66:65	66:67	5	gb
water	66:65	0:0	6	gb
water	66:68	0:0	4	;
if	67:8	68:38	4	(num_long_term_ref_pics_sps > 31 U)
cond	67:12	67:43	5	num_long_term_ref_pics_sps > 31 U
water	67:12	0:0	6	num_long_term_ref_pics_sps
op	67:39	0:0	6	>
water	67:41	0:0	6	31
water	67:43	0:0	6	U
stmts	68:12	68:38	5	
return	68:12	68:38	6	AVERROR_INVALIDDATA
water	68:19	0:0	7	AVERROR_INVALIDDATA
for	69:8	73:8	4	(i = 0 ;i < num_long_term_ref_pics_sps;i ++)
forinit	69:13	69:18	5	i = 0 ;
water	69:13	0:0	6	i
op	69:15	0:0	6	=
water	69:17	0:0	6	0
water	69:18	0:0	6	;
cond	69:20	69:24	5	i < num_long_term_ref_pics_sps
water	69:20	0:0	6	i
op	69:22	0:0	6	<
water	69:24	0:0	6	num_long_term_ref_pics_sps
forexpr	69:52	69:53	5	i ++
water	69:52	0:0	6	i
op	69:53	0:0	6	++
stmts	69:57	73:8	5	
water	69:57	0:0	6	{
decl	70:12	70:70	6	int	len
op	70:20	0:0	6	=
call	70:22	70:69	7	FFMIN
arg	70:28	70:65	8	log2_max_pic_order_cnt_lsb_minus4+4
water	70:28	0:0	9	log2_max_pic_order_cnt_lsb_minus4
op	70:62	0:0	9	+
water	70:64	0:0	9	4
arg	70:67	70:69	8	16
water	70:67	0:0	9	16
call	71:12	71:30	6	skip_bits
arg	71:23	71:25	7	gb
water	71:23	0:0	8	gb
arg	71:27	71:30	7	len
water	71:27	0:0	8	len
water	71:31	0:0	6	;
call	72:12	72:25	6	skip_bits1
arg	72:23	72:25	7	gb
water	72:23	0:0	8	gb
water	72:26	0:0	6	;
water	73:8	0:0	6	}
water	74:4	0:0	4	}
call	75:4	75:17	2	skip_bits1
arg	75:15	75:17	3	gb
water	75:15	0:0	4	gb
water	75:18	0:0	2	;
call	76:4	76:17	2	skip_bits1
arg	76:15	76:17	3	gb
water	76:15	0:0	4	gb
water	76:18	0:0	2	;
if	77:4	78:59	2	(get_bits1 (gb ))
cond	77:8	77:20	3	get_bits1 (gb )
call	77:8	77:20	4	get_bits1
arg	77:18	77:20	5	gb
water	77:18	0:0	6	gb
stmts	78:8	78:59	3	
call	78:8	78:58	4	hvcc_parse_vui
arg	78:23	78:25	5	gb
water	78:23	0:0	6	gb
arg	78:27	78:31	5	hvcc
water	78:27	0:0	6	hvcc
arg	78:33	78:58	5	sps_max_sub_layers_minus1
water	78:33	0:0	6	sps_max_sub_layers_minus1
water	78:59	0:0	4	;
return	80:4	80:12	2	0
water	80:11	0:0	3	0

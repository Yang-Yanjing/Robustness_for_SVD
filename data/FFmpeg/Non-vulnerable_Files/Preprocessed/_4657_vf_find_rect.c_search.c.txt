func	1:0	24:0	0	static float	search
params	1:19	0:0	1	
param	1:20	1:35	2	FOCContext *	foc
param	1:37	1:45	2	int	pass
param	1:47	1:58	2	int	maxpass
param	1:60	1:68	2	int	xmin
param	1:70	1:78	2	int	xmax
param	1:80	1:88	2	int	ymin
param	1:90	1:98	2	int	ymax
param	1:100	1:111	2	int *	best_x
param	1:113	1:124	2	int *	best_y
param	1:126	1:142	2	float	best_score
stmnts	0:0	23:21	1	
decl	3:4	3:12	2	int	x
water	3:9	0:0	2	,
decl	3:4	3:12	2	int	y
if	4:4	11:4	2	(pass + 1 <= maxpass)
cond	4:8	4:20	3	pass + 1 <= maxpass
water	4:8	0:0	4	pass
op	4:13	0:0	4	+
water	4:15	0:0	4	1
op	4:17	0:0	4	<=
water	4:20	0:0	4	maxpass
stmts	4:29	11:4	3	
water	4:29	0:0	4	{
decl	5:8	5:24	4	int	sub_x
water	5:17	0:0	4	,
decl	5:8	5:24	4	int	sub_y
call	6:8	6:100	4	search
arg	6:15	6:18	5	foc
water	6:15	0:0	6	foc
arg	6:20	6:26	5	pass+1
water	6:20	0:0	6	pass
op	6:24	0:0	6	+
water	6:25	0:0	6	1
arg	6:28	6:35	5	maxpass
water	6:28	0:0	6	maxpass
arg	6:37	6:44	5	xmin>>1
water	6:37	0:0	6	xmin
op	6:41	0:0	6	>>
water	6:43	0:0	6	1
arg	6:46	6:57	5	(xmax+1)>>1
water	6:46	0:0	6	(
water	6:47	0:0	6	xmax
op	6:51	0:0	6	+
water	6:52	0:0	6	1
water	6:53	0:0	6	)
op	6:54	0:0	6	>>
water	6:56	0:0	6	1
arg	6:59	6:66	5	ymin>>1
water	6:59	0:0	6	ymin
op	6:63	0:0	6	>>
water	6:65	0:0	6	1
arg	6:68	6:79	5	(ymax+1)>>1
water	6:68	0:0	6	(
water	6:69	0:0	6	ymax
op	6:73	0:0	6	+
water	6:74	0:0	6	1
water	6:75	0:0	6	)
op	6:76	0:0	6	>>
water	6:78	0:0	6	1
arg	6:81	6:87	5	&sub_x
op	6:81	0:0	6	&
water	6:82	0:0	6	sub_x
arg	6:89	6:95	5	&sub_y
op	6:89	0:0	6	&
water	6:90	0:0	6	sub_y
arg	6:97	6:100	5	1.0
water	6:97	0:0	6	1
op	6:98	0:0	6	.
water	6:99	0:0	6	0
water	6:101	0:0	4	;
water	7:8	0:0	4	xmin
op	7:13	0:0	4	=
call	7:15	7:38	4	FFMAX
arg	7:21	7:25	5	xmin
water	7:21	0:0	6	xmin
arg	7:27	7:38	5	2*sub_x-4
water	7:27	0:0	6	2
op	7:28	0:0	6	*
water	7:29	0:0	6	sub_x
op	7:35	0:0	6	-
water	7:37	0:0	6	4
water	7:39	0:0	4	;
water	8:8	0:0	4	xmax
op	8:13	0:0	4	=
call	8:15	8:38	4	FFMIN
arg	8:21	8:25	5	xmax
water	8:21	0:0	6	xmax
arg	8:27	8:38	5	2*sub_x+4
water	8:27	0:0	6	2
op	8:28	0:0	6	*
water	8:29	0:0	6	sub_x
op	8:35	0:0	6	+
water	8:37	0:0	6	4
water	8:39	0:0	4	;
water	9:8	0:0	4	ymin
op	9:13	0:0	4	=
call	9:15	9:38	4	FFMAX
arg	9:21	9:25	5	ymin
water	9:21	0:0	6	ymin
arg	9:27	9:38	5	2*sub_y-4
water	9:27	0:0	6	2
op	9:28	0:0	6	*
water	9:29	0:0	6	sub_y
op	9:35	0:0	6	-
water	9:37	0:0	6	4
water	9:39	0:0	4	;
water	10:8	0:0	4	ymax
op	10:13	0:0	4	=
call	10:15	10:38	4	FFMIN
arg	10:21	10:25	5	ymax
water	10:21	0:0	6	ymax
arg	10:27	10:38	5	2*sub_y+4
water	10:27	0:0	6	2
op	10:28	0:0	6	*
water	10:29	0:0	6	sub_y
op	10:35	0:0	6	+
water	10:37	0:0	6	4
water	10:39	0:0	4	;
water	11:4	0:0	4	}
for	12:4	22:4	2	(y = ymin ;y <= ymax;y ++)
forinit	12:9	12:17	3	y = ymin ;
water	12:9	0:0	4	y
op	12:11	0:0	4	=
water	12:13	0:0	4	ymin
water	12:17	0:0	4	;
cond	12:19	12:24	3	y <= ymax
water	12:19	0:0	4	y
op	12:21	0:0	4	<=
water	12:24	0:0	4	ymax
forexpr	12:30	12:31	3	y ++
water	12:30	0:0	4	y
op	12:31	0:0	4	++
stmts	12:35	22:4	3	
water	12:35	0:0	4	{
for	13:8	21:8	4	(x = xmin ;x <= xmax;x ++)
forinit	13:13	13:21	5	x = xmin ;
water	13:13	0:0	6	x
op	13:15	0:0	6	=
water	13:17	0:0	6	xmin
water	13:21	0:0	6	;
cond	13:23	13:28	5	x <= xmax
water	13:23	0:0	6	x
op	13:25	0:0	6	<=
water	13:28	0:0	6	xmax
forexpr	13:34	13:35	5	x ++
water	13:34	0:0	6	x
op	13:35	0:0	6	++
stmts	13:39	21:8	5	
water	13:39	0:0	6	{
decl	14:12	14:91	6	float	score
op	14:24	0:0	6	=
call	14:26	14:90	7	compare
arg	14:34	14:59	8	foc->haystack_frame[pass]
water	14:34	0:0	9	foc
op	14:37	0:0	9	->
water	14:39	0:0	9	haystack_frame
op	14:53	0:0	9	[
water	14:54	0:0	9	pass
op	14:58	0:0	9	]
arg	14:61	14:84	8	foc->needle_frame[pass]
water	14:61	0:0	9	foc
op	14:64	0:0	9	->
water	14:66	0:0	9	needle_frame
op	14:78	0:0	9	[
water	14:79	0:0	9	pass
op	14:83	0:0	9	]
arg	14:86	14:87	8	x
water	14:86	0:0	9	x
arg	14:89	14:90	8	y
water	14:89	0:0	9	y
call	15:12	15:33	6	av_assert0
arg	15:23	15:33	7	score!=0
water	15:23	0:0	8	score
op	15:29	0:0	8	!=
water	15:32	0:0	8	0
water	15:34	0:0	6	;
if	16:12	20:12	6	(score < best_score)
cond	16:16	16:24	7	score < best_score
water	16:16	0:0	8	score
op	16:22	0:0	8	<
water	16:24	0:0	8	best_score
stmts	16:36	20:12	7	
water	16:36	0:0	8	{
water	17:16	0:0	8	best_score
op	17:27	0:0	8	=
water	17:29	0:0	8	score
water	17:34	0:0	8	;
op	18:16	0:0	8	*
water	18:17	0:0	8	best_x
op	18:24	0:0	8	=
water	18:26	0:0	8	x
water	18:27	0:0	8	;
op	19:16	0:0	8	*
water	19:17	0:0	8	best_y
op	19:24	0:0	8	=
water	19:26	0:0	8	y
water	19:27	0:0	8	;
water	20:12	0:0	8	}
water	21:8	0:0	6	}
water	22:4	0:0	4	}
return	23:4	23:21	2	best_score
water	23:11	0:0	3	best_score

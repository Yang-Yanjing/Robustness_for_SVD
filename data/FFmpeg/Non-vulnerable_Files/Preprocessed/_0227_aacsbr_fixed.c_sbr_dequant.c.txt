func	2:0	64:0	0	static void	sbr_dequant
params	2:23	0:0	1	
param	2:24	2:52	2	SpectralBandReplication *	sbr
param	2:54	2:64	2	int	id_aac
stmnts	0:0	63:4	1	
decl	4:4	4:12	2	int	k
water	4:9	0:0	2	,
decl	4:4	4:12	2	int	e
decl	5:4	5:10	2	int	ch
if	6:4	42:4	2	(id_aac == TYPE_CPE && sbr -> bs_coupling)
cond	6:8	6:35	3	id_aac == TYPE_CPE && sbr -> bs_coupling
water	6:8	0:0	4	id_aac
op	6:15	0:0	4	==
water	6:18	0:0	4	TYPE_CPE
op	6:27	0:0	4	&&
water	6:30	0:0	4	sbr
op	6:33	0:0	4	->
water	6:35	0:0	4	bs_coupling
stmts	6:48	42:4	3	
water	6:48	0:0	4	{
decl	7:8	7:58	4	int	alpha
op	7:23	0:0	4	=
water	7:25	0:0	4	sbr
op	7:28	0:0	4	->
water	7:30	0:0	4	data
op	7:34	0:0	4	[
water	7:35	0:0	4	0
op	7:36	0:0	4	]
op	7:37	0:0	4	.
water	7:38	0:0	4	bs_amp_res
water	7:49	0:0	4	?
water	7:52	0:0	4	2
water	7:54	0:0	4	:
water	7:57	0:0	4	1
decl	8:8	8:58	4	int	pan_offset
op	8:23	0:0	4	=
water	8:25	0:0	4	sbr
op	8:28	0:0	4	->
water	8:30	0:0	4	data
op	8:34	0:0	4	[
water	8:35	0:0	4	0
op	8:36	0:0	4	]
op	8:37	0:0	4	.
water	8:38	0:0	4	bs_amp_res
water	8:49	0:0	4	?
water	8:51	0:0	4	12
water	8:54	0:0	4	:
water	8:56	0:0	4	24
for	9:8	28:8	4	(e = 1 ;e <= sbr -> data [ 0 ] . bs_num_env;e ++)
forinit	9:13	9:18	5	e = 1 ;
water	9:13	0:0	6	e
op	9:15	0:0	6	=
water	9:17	0:0	6	1
water	9:18	0:0	6	;
cond	9:20	9:38	5	e <= sbr -> data [ 0 ] . bs_num_env
water	9:20	0:0	6	e
op	9:22	0:0	6	<=
water	9:25	0:0	6	sbr
op	9:28	0:0	6	->
water	9:30	0:0	6	data
op	9:34	0:0	6	[
water	9:35	0:0	6	0
op	9:36	0:0	6	]
op	9:37	0:0	6	.
water	9:38	0:0	6	bs_num_env
forexpr	9:50	9:51	5	e ++
water	9:50	0:0	6	e
op	9:51	0:0	6	++
stmts	9:55	28:8	5	
water	9:55	0:0	6	{
for	10:12	27:12	6	(k = 0 ;k < sbr -> n [ sbr -> data [ 0 ] . bs_freq_res [ e ] ];k ++)
forinit	10:17	10:22	7	k = 0 ;
water	10:17	0:0	8	k
op	10:19	0:0	8	=
water	10:21	0:0	8	0
water	10:22	0:0	8	;
cond	10:24	10:62	7	k < sbr -> n [ sbr -> data [ 0 ] . bs_freq_res [ e ] ]
water	10:24	0:0	8	k
op	10:26	0:0	8	<
water	10:28	0:0	8	sbr
op	10:31	0:0	8	->
water	10:33	0:0	8	n
op	10:34	0:0	8	[
water	10:35	0:0	8	sbr
op	10:38	0:0	8	->
water	10:40	0:0	8	data
op	10:44	0:0	8	[
water	10:45	0:0	8	0
op	10:46	0:0	8	]
op	10:47	0:0	8	.
water	10:48	0:0	8	bs_freq_res
op	10:59	0:0	8	[
water	10:60	0:0	8	e
op	10:61	0:0	8	]
op	10:62	0:0	8	]
forexpr	10:65	10:66	7	k ++
water	10:65	0:0	8	k
op	10:66	0:0	8	++
stmts	10:70	27:12	7	
water	10:70	0:0	8	{
decl	11:16	11:43	8	SoftFloat	temp1
water	11:31	0:0	8	,
decl	11:16	11:43	8	SoftFloat	temp2
water	11:38	0:0	8	,
decl	11:16	11:43	8	SoftFloat	fac
water	12:16	0:0	8	temp1
op	12:21	0:0	8	.
water	12:22	0:0	8	exp
op	12:26	0:0	8	=
water	12:28	0:0	8	sbr
op	12:31	0:0	8	->
water	12:33	0:0	8	data
op	12:37	0:0	8	[
water	12:38	0:0	8	0
op	12:39	0:0	8	]
op	12:40	0:0	8	.
water	12:41	0:0	8	env_facs
op	12:49	0:0	8	[
water	12:50	0:0	8	e
op	12:51	0:0	8	]
op	12:52	0:0	8	[
water	12:53	0:0	8	k
op	12:54	0:0	8	]
op	12:55	0:0	8	.
water	12:56	0:0	8	mant
op	12:61	0:0	8	*
water	12:63	0:0	8	alpha
op	12:69	0:0	8	+
water	12:71	0:0	8	14
water	12:73	0:0	8	;
if	13:16	14:40	8	(temp1 . exp & 1)
cond	13:20	13:32	9	temp1 . exp & 1
water	13:20	0:0	10	temp1
op	13:25	0:0	10	.
water	13:26	0:0	10	exp
op	13:30	0:0	10	&
water	13:32	0:0	10	1
stmts	14:18	14:40	9	
water	14:18	0:0	10	temp1
op	14:23	0:0	10	.
water	14:24	0:0	10	mant
op	14:29	0:0	10	=
water	14:31	0:0	10	759250125
water	14:40	0:0	10	;
else	15:16	16:41	8
stmts	16:18	16:41	9	
water	16:18	0:0	10	temp1
op	16:23	0:0	10	.
water	16:24	0:0	10	mant
op	16:29	0:0	10	=
water	16:31	0:0	10	0
water	16:32	0:0	10	x20000000
water	16:41	0:0	10	;
water	17:16	0:0	8	temp1
op	17:21	0:0	8	.
water	17:22	0:0	8	exp
op	17:26	0:0	8	=
water	17:28	0:0	8	(
water	17:29	0:0	8	temp1
op	17:34	0:0	8	.
water	17:35	0:0	8	exp
op	17:39	0:0	8	>>
water	17:42	0:0	8	1
water	17:43	0:0	8	)
op	17:45	0:0	8	+
water	17:47	0:0	8	1
water	17:48	0:0	8	;
water	18:16	0:0	8	temp2
op	18:21	0:0	8	.
water	18:22	0:0	8	exp
op	18:26	0:0	8	=
water	18:28	0:0	8	(
water	18:29	0:0	8	pan_offset
op	18:40	0:0	8	-
water	18:42	0:0	8	sbr
op	18:45	0:0	8	->
water	18:47	0:0	8	data
op	18:51	0:0	8	[
water	18:52	0:0	8	1
op	18:53	0:0	8	]
op	18:54	0:0	8	.
water	18:55	0:0	8	env_facs
op	18:63	0:0	8	[
water	18:64	0:0	8	e
op	18:65	0:0	8	]
op	18:66	0:0	8	[
water	18:67	0:0	8	k
op	18:68	0:0	8	]
op	18:69	0:0	8	.
water	18:70	0:0	8	mant
water	18:74	0:0	8	)
op	18:76	0:0	8	*
water	18:78	0:0	8	alpha
water	18:83	0:0	8	;
if	19:16	20:40	8	(temp2 . exp & 1)
cond	19:20	19:32	9	temp2 . exp & 1
water	19:20	0:0	10	temp2
op	19:25	0:0	10	.
water	19:26	0:0	10	exp
op	19:30	0:0	10	&
water	19:32	0:0	10	1
stmts	20:18	20:40	9	
water	20:18	0:0	10	temp2
op	20:23	0:0	10	.
water	20:24	0:0	10	mant
op	20:29	0:0	10	=
water	20:31	0:0	10	759250125
water	20:40	0:0	10	;
else	21:16	22:41	8
stmts	22:18	22:41	9	
water	22:18	0:0	10	temp2
op	22:23	0:0	10	.
water	22:24	0:0	10	mant
op	22:29	0:0	10	=
water	22:31	0:0	10	0
water	22:32	0:0	10	x20000000
water	22:41	0:0	10	;
water	23:16	0:0	8	temp2
op	23:21	0:0	8	.
water	23:22	0:0	8	exp
op	23:26	0:0	8	=
water	23:28	0:0	8	(
water	23:29	0:0	8	temp2
op	23:34	0:0	8	.
water	23:35	0:0	8	exp
op	23:39	0:0	8	>>
water	23:42	0:0	8	1
water	23:43	0:0	8	)
op	23:45	0:0	8	+
water	23:47	0:0	8	1
water	23:48	0:0	8	;
water	24:16	0:0	8	fac
op	24:22	0:0	8	=
call	24:24	24:66	8	av_div_sf
arg	24:34	24:39	9	temp1
water	24:34	0:0	10	temp1
arg	24:41	24:66	9	av_add_sf(FLOAT_1,temp2)
call	24:41	24:65	10	av_add_sf
arg	24:51	24:58	11	FLOAT_1
water	24:51	0:0	12	FLOAT_1
arg	24:60	24:65	11	temp2
water	24:60	0:0	12	temp2
water	24:67	0:0	8	;
water	25:16	0:0	8	sbr
op	25:19	0:0	8	->
water	25:21	0:0	8	data
op	25:25	0:0	8	[
water	25:26	0:0	8	0
op	25:27	0:0	8	]
op	25:28	0:0	8	.
water	25:29	0:0	8	env_facs
op	25:37	0:0	8	[
water	25:38	0:0	8	e
op	25:39	0:0	8	]
op	25:40	0:0	8	[
water	25:41	0:0	8	k
op	25:42	0:0	8	]
op	25:44	0:0	8	=
water	25:46	0:0	8	fac
water	25:49	0:0	8	;
water	26:16	0:0	8	sbr
op	26:19	0:0	8	->
water	26:21	0:0	8	data
op	26:25	0:0	8	[
water	26:26	0:0	8	1
op	26:27	0:0	8	]
op	26:28	0:0	8	.
water	26:29	0:0	8	env_facs
op	26:37	0:0	8	[
water	26:38	0:0	8	e
op	26:39	0:0	8	]
op	26:40	0:0	8	[
water	26:41	0:0	8	k
op	26:42	0:0	8	]
op	26:44	0:0	8	=
call	26:46	26:66	8	av_mul_sf
arg	26:56	26:59	9	fac
water	26:56	0:0	10	fac
arg	26:61	26:66	9	temp2
water	26:61	0:0	10	temp2
water	26:67	0:0	8	;
water	27:12	0:0	8	}
water	28:8	0:0	6	}
for	29:8	41:8	4	(e = 1 ;e <= sbr -> data [ 0 ] . bs_num_noise;e ++)
forinit	29:13	29:18	5	e = 1 ;
water	29:13	0:0	6	e
op	29:15	0:0	6	=
water	29:17	0:0	6	1
water	29:18	0:0	6	;
cond	29:20	29:38	5	e <= sbr -> data [ 0 ] . bs_num_noise
water	29:20	0:0	6	e
op	29:22	0:0	6	<=
water	29:25	0:0	6	sbr
op	29:28	0:0	6	->
water	29:30	0:0	6	data
op	29:34	0:0	6	[
water	29:35	0:0	6	0
op	29:36	0:0	6	]
op	29:37	0:0	6	.
water	29:38	0:0	6	bs_num_noise
forexpr	29:52	29:53	5	e ++
water	29:52	0:0	6	e
op	29:53	0:0	6	++
stmts	29:57	41:8	5	
water	29:57	0:0	6	{
for	30:12	40:12	6	(k = 0 ;k < sbr -> n_q;k ++)
forinit	30:17	30:22	7	k = 0 ;
water	30:17	0:0	8	k
op	30:19	0:0	8	=
water	30:21	0:0	8	0
water	30:22	0:0	8	;
cond	30:24	30:33	7	k < sbr -> n_q
water	30:24	0:0	8	k
op	30:26	0:0	8	<
water	30:28	0:0	8	sbr
op	30:31	0:0	8	->
water	30:33	0:0	8	n_q
forexpr	30:38	30:39	7	k ++
water	30:38	0:0	8	k
op	30:39	0:0	8	++
stmts	30:43	40:12	7	
water	30:43	0:0	8	{
decl	31:16	31:43	8	SoftFloat	temp1
water	31:31	0:0	8	,
decl	31:16	31:43	8	SoftFloat	temp2
water	31:38	0:0	8	,
decl	31:16	31:43	8	SoftFloat	fac
water	32:16	0:0	8	temp1
op	32:21	0:0	8	.
water	32:22	0:0	8	exp
op	32:26	0:0	8	=
water	32:28	0:0	8	NOISE_FLOOR_OFFSET
op	32:47	0:0	8	-
water	33:20	0:0	8	sbr
op	33:23	0:0	8	->
water	33:25	0:0	8	data
op	33:29	0:0	8	[
water	33:30	0:0	8	0
op	33:31	0:0	8	]
op	33:32	0:0	8	.
water	33:33	0:0	8	noise_facs
op	33:43	0:0	8	[
water	33:44	0:0	8	e
op	33:45	0:0	8	]
op	33:46	0:0	8	[
water	33:47	0:0	8	k
op	33:48	0:0	8	]
op	33:49	0:0	8	.
water	33:50	0:0	8	mant
op	33:55	0:0	8	+
water	33:57	0:0	8	2
water	33:58	0:0	8	;
water	34:16	0:0	8	temp1
op	34:21	0:0	8	.
water	34:22	0:0	8	mant
op	34:27	0:0	8	=
water	34:29	0:0	8	0
water	34:30	0:0	8	x20000000
water	34:39	0:0	8	;
water	35:16	0:0	8	temp2
op	35:21	0:0	8	.
water	35:22	0:0	8	exp
op	35:26	0:0	8	=
water	35:28	0:0	8	12
op	35:31	0:0	8	-
water	35:33	0:0	8	sbr
op	35:36	0:0	8	->
water	35:38	0:0	8	data
op	35:42	0:0	8	[
water	35:43	0:0	8	1
op	35:44	0:0	8	]
op	35:45	0:0	8	.
water	35:46	0:0	8	noise_facs
op	35:56	0:0	8	[
water	35:57	0:0	8	e
op	35:58	0:0	8	]
op	35:59	0:0	8	[
water	35:60	0:0	8	k
op	35:61	0:0	8	]
op	35:62	0:0	8	.
water	35:63	0:0	8	mant
op	35:68	0:0	8	+
water	35:70	0:0	8	1
water	35:71	0:0	8	;
water	36:16	0:0	8	temp2
op	36:21	0:0	8	.
water	36:22	0:0	8	mant
op	36:27	0:0	8	=
water	36:29	0:0	8	0
water	36:30	0:0	8	x20000000
water	36:39	0:0	8	;
water	37:16	0:0	8	fac
op	37:22	0:0	8	=
call	37:24	37:66	8	av_div_sf
arg	37:34	37:39	9	temp1
water	37:34	0:0	10	temp1
arg	37:41	37:66	9	av_add_sf(FLOAT_1,temp2)
call	37:41	37:65	10	av_add_sf
arg	37:51	37:58	11	FLOAT_1
water	37:51	0:0	12	FLOAT_1
arg	37:60	37:65	11	temp2
water	37:60	0:0	12	temp2
water	37:67	0:0	8	;
water	38:16	0:0	8	sbr
op	38:19	0:0	8	->
water	38:21	0:0	8	data
op	38:25	0:0	8	[
water	38:26	0:0	8	0
op	38:27	0:0	8	]
op	38:28	0:0	8	.
water	38:29	0:0	8	noise_facs
op	38:39	0:0	8	[
water	38:40	0:0	8	e
op	38:41	0:0	8	]
op	38:42	0:0	8	[
water	38:43	0:0	8	k
op	38:44	0:0	8	]
op	38:46	0:0	8	=
water	38:48	0:0	8	fac
water	38:51	0:0	8	;
water	39:16	0:0	8	sbr
op	39:19	0:0	8	->
water	39:21	0:0	8	data
op	39:25	0:0	8	[
water	39:26	0:0	8	1
op	39:27	0:0	8	]
op	39:28	0:0	8	.
water	39:29	0:0	8	noise_facs
op	39:39	0:0	8	[
water	39:40	0:0	8	e
op	39:41	0:0	8	]
op	39:42	0:0	8	[
water	39:43	0:0	8	k
op	39:44	0:0	8	]
op	39:46	0:0	8	=
call	39:48	39:68	8	av_mul_sf
arg	39:58	39:61	9	fac
water	39:58	0:0	10	fac
arg	39:63	39:68	9	temp2
water	39:63	0:0	10	temp2
water	39:69	0:0	8	;
water	40:12	0:0	8	}
water	41:8	0:0	6	}
water	42:4	0:0	4	}
else	42:6	63:4	2
stmts	42:11	63:4	3	
water	42:11	0:0	4	{
for	43:8	62:8	4	(ch = 0 ;ch < ( id_aac == TYPE_CPE ) + 1;ch ++)
forinit	43:13	43:19	5	ch = 0 ;
water	43:13	0:0	6	ch
op	43:16	0:0	6	=
water	43:18	0:0	6	0
water	43:19	0:0	6	;
cond	43:21	43:49	5	ch < ( id_aac == TYPE_CPE ) + 1
water	43:21	0:0	6	ch
op	43:24	0:0	6	<
water	43:26	0:0	6	(
water	43:27	0:0	6	id_aac
op	43:34	0:0	6	==
water	43:37	0:0	6	TYPE_CPE
water	43:45	0:0	6	)
op	43:47	0:0	6	+
water	43:49	0:0	6	1
forexpr	43:52	43:54	5	ch ++
water	43:52	0:0	6	ch
op	43:54	0:0	6	++
stmts	43:58	62:8	5	
water	43:58	0:0	6	{
decl	44:12	44:56	6	int	alpha
op	44:22	0:0	6	=
water	44:24	0:0	6	sbr
op	44:27	0:0	6	->
water	44:29	0:0	6	data
op	44:33	0:0	6	[
water	44:34	0:0	6	ch
op	44:36	0:0	6	]
op	44:37	0:0	6	.
water	44:38	0:0	6	bs_amp_res
water	44:49	0:0	6	?
water	44:51	0:0	6	2
water	44:53	0:0	6	:
water	44:55	0:0	6	1
for	45:12	55:16	6	(e = 1 ;e <= sbr -> data [ ch ] . bs_num_env;e ++)
forinit	45:17	45:22	7	e = 1 ;
water	45:17	0:0	8	e
op	45:19	0:0	8	=
water	45:21	0:0	8	1
water	45:22	0:0	8	;
cond	45:24	45:43	7	e <= sbr -> data [ ch ] . bs_num_env
water	45:24	0:0	8	e
op	45:26	0:0	8	<=
water	45:29	0:0	8	sbr
op	45:32	0:0	8	->
water	45:34	0:0	8	data
op	45:38	0:0	8	[
water	45:39	0:0	8	ch
op	45:41	0:0	8	]
op	45:42	0:0	8	.
water	45:43	0:0	8	bs_num_env
forexpr	45:55	45:56	7	e ++
water	45:55	0:0	8	e
op	45:56	0:0	8	++
stmts	46:16	55:16	7	
for	46:16	55:16	8	(k = 0 ;k < sbr -> n [ sbr -> data [ ch ] . bs_freq_res [ e ] ];k ++)
forinit	46:21	46:26	9	k = 0 ;
water	46:21	0:0	10	k
op	46:23	0:0	10	=
water	46:25	0:0	10	0
water	46:26	0:0	10	;
cond	46:28	46:67	9	k < sbr -> n [ sbr -> data [ ch ] . bs_freq_res [ e ] ]
water	46:28	0:0	10	k
op	46:30	0:0	10	<
water	46:32	0:0	10	sbr
op	46:35	0:0	10	->
water	46:37	0:0	10	n
op	46:38	0:0	10	[
water	46:39	0:0	10	sbr
op	46:42	0:0	10	->
water	46:44	0:0	10	data
op	46:48	0:0	10	[
water	46:49	0:0	10	ch
op	46:51	0:0	10	]
op	46:52	0:0	10	.
water	46:53	0:0	10	bs_freq_res
op	46:64	0:0	10	[
water	46:65	0:0	10	e
op	46:66	0:0	10	]
op	46:67	0:0	10	]
forexpr	46:70	46:71	9	k ++
water	46:70	0:0	10	k
op	46:71	0:0	10	++
stmts	46:74	55:16	9	
water	46:74	0:0	10	{
decl	47:20	47:35	10	SoftFloat	temp1
water	48:20	0:0	10	temp1
op	48:25	0:0	10	.
water	48:26	0:0	10	exp
op	48:30	0:0	10	=
water	48:32	0:0	10	alpha
op	48:38	0:0	10	*
water	48:40	0:0	10	sbr
op	48:43	0:0	10	->
water	48:45	0:0	10	data
op	48:49	0:0	10	[
water	48:50	0:0	10	ch
op	48:52	0:0	10	]
op	48:53	0:0	10	.
water	48:54	0:0	10	env_facs
op	48:62	0:0	10	[
water	48:63	0:0	10	e
op	48:64	0:0	10	]
op	48:65	0:0	10	[
water	48:66	0:0	10	k
op	48:67	0:0	10	]
op	48:68	0:0	10	.
water	48:69	0:0	10	mant
op	48:74	0:0	10	+
water	48:76	0:0	10	12
water	48:78	0:0	10	;
if	49:20	50:46	10	(temp1 . exp & 1)
cond	49:24	49:36	11	temp1 . exp & 1
water	49:24	0:0	12	temp1
op	49:29	0:0	12	.
water	49:30	0:0	12	exp
op	49:34	0:0	12	&
water	49:36	0:0	12	1
stmts	50:24	50:46	11	
water	50:24	0:0	12	temp1
op	50:29	0:0	12	.
water	50:30	0:0	12	mant
op	50:35	0:0	12	=
water	50:37	0:0	12	759250125
water	50:46	0:0	12	;
else	51:20	52:47	10
stmts	52:24	52:47	11	
water	52:24	0:0	12	temp1
op	52:29	0:0	12	.
water	52:30	0:0	12	mant
op	52:35	0:0	12	=
water	52:37	0:0	12	0
water	52:38	0:0	12	x20000000
water	52:47	0:0	12	;
water	53:20	0:0	10	temp1
op	53:25	0:0	10	.
water	53:26	0:0	10	exp
op	53:30	0:0	10	=
water	53:32	0:0	10	(
water	53:33	0:0	10	temp1
op	53:38	0:0	10	.
water	53:39	0:0	10	exp
op	53:43	0:0	10	>>
water	53:46	0:0	10	1
water	53:47	0:0	10	)
op	53:49	0:0	10	+
water	53:51	0:0	10	1
water	53:52	0:0	10	;
water	54:20	0:0	10	sbr
op	54:23	0:0	10	->
water	54:25	0:0	10	data
op	54:29	0:0	10	[
water	54:30	0:0	10	ch
op	54:32	0:0	10	]
op	54:33	0:0	10	.
water	54:34	0:0	10	env_facs
op	54:42	0:0	10	[
water	54:43	0:0	10	e
op	54:44	0:0	10	]
op	54:45	0:0	10	[
water	54:46	0:0	10	k
op	54:47	0:0	10	]
op	54:49	0:0	10	=
water	54:51	0:0	10	temp1
water	54:56	0:0	10	;
water	55:16	0:0	10	}
for	56:12	61:16	6	(e = 1 ;e <= sbr -> data [ ch ] . bs_num_noise;e ++)
forinit	56:17	56:22	7	e = 1 ;
water	56:17	0:0	8	e
op	56:19	0:0	8	=
water	56:21	0:0	8	1
water	56:22	0:0	8	;
cond	56:24	56:43	7	e <= sbr -> data [ ch ] . bs_num_noise
water	56:24	0:0	8	e
op	56:26	0:0	8	<=
water	56:29	0:0	8	sbr
op	56:32	0:0	8	->
water	56:34	0:0	8	data
op	56:38	0:0	8	[
water	56:39	0:0	8	ch
op	56:41	0:0	8	]
op	56:42	0:0	8	.
water	56:43	0:0	8	bs_num_noise
forexpr	56:57	56:58	7	e ++
water	56:57	0:0	8	e
op	56:58	0:0	8	++
stmts	57:16	61:16	7	
for	57:16	61:16	8	(k = 0 ;k < sbr -> n_q;k ++)
forinit	57:21	57:26	9	k = 0 ;
water	57:21	0:0	10	k
op	57:23	0:0	10	=
water	57:25	0:0	10	0
water	57:26	0:0	10	;
cond	57:28	57:37	9	k < sbr -> n_q
water	57:28	0:0	10	k
op	57:30	0:0	10	<
water	57:32	0:0	10	sbr
op	57:35	0:0	10	->
water	57:37	0:0	10	n_q
forexpr	57:42	57:43	9	k ++
water	57:42	0:0	10	k
op	57:43	0:0	10	++
stmts	57:46	61:16	9	
water	57:46	0:0	10	{
water	58:20	0:0	10	sbr
op	58:23	0:0	10	->
water	58:25	0:0	10	data
op	58:29	0:0	10	[
water	58:30	0:0	10	ch
op	58:32	0:0	10	]
op	58:33	0:0	10	.
water	58:34	0:0	10	noise_facs
op	58:44	0:0	10	[
water	58:45	0:0	10	e
op	58:46	0:0	10	]
op	58:47	0:0	10	[
water	58:48	0:0	10	k
op	58:49	0:0	10	]
op	58:50	0:0	10	.
water	58:51	0:0	10	exp
op	58:55	0:0	10	=
water	58:57	0:0	10	NOISE_FLOOR_OFFSET
op	58:76	0:0	10	-
water	59:24	0:0	10	sbr
op	59:27	0:0	10	->
water	59:29	0:0	10	data
op	59:33	0:0	10	[
water	59:34	0:0	10	ch
op	59:36	0:0	10	]
op	59:37	0:0	10	.
water	59:38	0:0	10	noise_facs
op	59:48	0:0	10	[
water	59:49	0:0	10	e
op	59:50	0:0	10	]
op	59:51	0:0	10	[
water	59:52	0:0	10	k
op	59:53	0:0	10	]
op	59:54	0:0	10	.
water	59:55	0:0	10	mant
op	59:60	0:0	10	+
water	59:62	0:0	10	1
water	59:63	0:0	10	;
water	60:20	0:0	10	sbr
op	60:23	0:0	10	->
water	60:25	0:0	10	data
op	60:29	0:0	10	[
water	60:30	0:0	10	ch
op	60:32	0:0	10	]
op	60:33	0:0	10	.
water	60:34	0:0	10	noise_facs
op	60:44	0:0	10	[
water	60:45	0:0	10	e
op	60:46	0:0	10	]
op	60:47	0:0	10	[
water	60:48	0:0	10	k
op	60:49	0:0	10	]
op	60:50	0:0	10	.
water	60:51	0:0	10	mant
op	60:56	0:0	10	=
water	60:58	0:0	10	0
water	60:59	0:0	10	x20000000
water	60:68	0:0	10	;
water	61:16	0:0	10	}
water	62:8	0:0	6	}
water	63:4	0:0	4	}

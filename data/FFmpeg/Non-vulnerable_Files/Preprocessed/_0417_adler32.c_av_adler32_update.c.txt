func	1:0	52:0	0	unsigned long	av_adler32_update
params	1:31	0:0	1	
param	1:32	1:51	2	unsigned long	adler
param	1:53	1:72	2	const uint8_t *	buf
param	2:32	2:48	2	unsigned int	len
stmnts	0:0	51:26	1	
decl	4:4	4:37	2	unsigned long	s1
op	4:21	0:0	2	=
water	4:23	0:0	2	adler
op	4:29	0:0	2	&
water	4:31	0:0	2	0
water	4:32	0:0	2	xffff
decl	5:4	5:34	2	unsigned long	s2
op	5:21	0:0	2	=
water	5:23	0:0	2	adler
op	5:29	0:0	2	>>
water	5:32	0:0	2	16
while	6:4	50:4	2	(len > 0)
cond	6:11	6:17	3	len > 0
water	6:11	0:0	4	len
op	6:15	0:0	4	>
water	6:17	0:0	4	0
stmts	6:20	50:4	3	
water	6:20	0:0	4	{
water	8:8	0:0	4	unsigned
water	8:17	0:0	4	len2
op	8:22	0:0	4	=
call	8:24	8:48	4	FFMIN
arg	8:30	8:42	5	(len-1)&~7
water	8:30	0:0	6	(
water	8:31	0:0	6	len
op	8:34	0:0	6	-
water	8:35	0:0	6	1
water	8:36	0:0	6	)
op	8:38	0:0	6	&
water	8:40	0:0	6	~7
arg	8:44	8:48	5	23*8
water	8:44	0:0	6	23
op	8:46	0:0	6	*
water	8:47	0:0	6	8
water	8:49	0:0	4	;
if	9:8	40:8	4	(len2)
cond	9:12	9:12	5	len2
water	9:12	0:0	6	len2
stmts	9:18	40:8	5	
water	9:18	0:0	6	{
decl	10:12	10:26	6	uint64_t	a1
op	10:23	0:0	6	=
water	10:25	0:0	6	0
decl	11:12	11:26	6	uint64_t	a2
op	11:23	0:0	6	=
water	11:25	0:0	6	0
decl	12:12	12:26	6	uint64_t	b1
op	12:23	0:0	6	=
water	12:25	0:0	6	0
decl	13:12	13:26	6	uint64_t	b2
op	13:23	0:0	6	=
water	13:25	0:0	6	0
water	14:12	0:0	6	len
op	14:16	0:0	6	-=
water	14:19	0:0	6	len2
water	14:23	0:0	6	;
water	15:12	0:0	6	s2
op	15:15	0:0	6	+=
water	15:18	0:0	6	s1
op	15:20	0:0	6	*
water	15:21	0:0	6	len2
water	15:25	0:0	6	;
while	16:12	24:12	6	(len2 >= 8)
cond	16:19	16:27	7	len2 >= 8
water	16:19	0:0	8	len2
op	16:24	0:0	8	>=
water	16:27	0:0	8	8
stmts	16:30	24:12	7	
water	16:30	0:0	8	{
decl	17:16	17:41	8	uint64_t	v
op	17:27	0:0	8	=
call	17:29	17:40	9	AV_RN64
arg	17:37	17:40	10	buf
water	17:37	0:0	11	buf
water	18:16	0:0	8	a2
op	18:19	0:0	8	+=
water	18:22	0:0	8	a1
water	18:24	0:0	8	;
water	19:16	0:0	8	b2
op	19:19	0:0	8	+=
water	19:22	0:0	8	b1
water	19:24	0:0	8	;
water	20:16	0:0	8	a1
op	20:19	0:0	8	+=
water	20:23	0:0	8	v
op	20:28	0:0	8	&
water	20:29	0:0	8	0
water	20:30	0:0	8	x00FF00FF00FF00FF
water	20:47	0:0	8	;
water	21:16	0:0	8	b1
op	21:19	0:0	8	+=
water	21:22	0:0	8	(
water	21:23	0:0	8	v
op	21:24	0:0	8	>>
water	21:26	0:0	8	8
water	21:27	0:0	8	)
op	21:28	0:0	8	&
water	21:29	0:0	8	0
water	21:30	0:0	8	x00FF00FF00FF00FF
water	21:47	0:0	8	;
water	22:16	0:0	8	len2
op	22:21	0:0	8	-=
water	22:24	0:0	8	8
water	22:25	0:0	8	;
water	23:16	0:0	8	buf
op	23:19	0:0	8	+=
water	23:21	0:0	8	8
water	23:22	0:0	8	;
water	24:12	0:0	8	}
water	29:12	0:0	6	s1
op	29:15	0:0	6	+=
water	29:18	0:0	6	(
water	29:19	0:0	6	(
water	29:20	0:0	6	a1
op	29:22	0:0	6	+
water	29:23	0:0	6	b1
water	29:25	0:0	6	)
op	29:26	0:0	6	*
water	29:27	0:0	6	0
water	29:28	0:0	6	x1000100010001
water	29:42	0:0	6	)
op	29:43	0:0	6	>>
water	29:45	0:0	6	48
water	29:47	0:0	6	;
water	30:12	0:0	6	s2
op	30:15	0:0	6	+=
water	30:18	0:0	6	(
water	30:19	0:0	6	(
water	30:20	0:0	6	(
water	30:21	0:0	6	(
water	30:22	0:0	6	a2
op	30:24	0:0	6	&
water	30:25	0:0	6	0
water	30:26	0:0	6	xFFFF0000FFFF
water	30:39	0:0	6	)
op	30:40	0:0	6	+
water	30:41	0:0	6	(
water	30:42	0:0	6	b2
op	30:44	0:0	6	&
water	30:45	0:0	6	0
water	30:46	0:0	6	xFFFF0000FFFF
water	30:59	0:0	6	)
op	30:60	0:0	6	+
water	30:61	0:0	6	(
water	30:62	0:0	6	(
water	30:63	0:0	6	a2
op	30:65	0:0	6	>>
water	30:67	0:0	6	16
water	30:69	0:0	6	)
op	30:70	0:0	6	&
water	30:71	0:0	6	0
water	30:72	0:0	6	xFFFF0000FFFF
water	30:85	0:0	6	)
op	30:86	0:0	6	+
water	30:87	0:0	6	(
water	30:88	0:0	6	(
water	30:89	0:0	6	b2
op	30:91	0:0	6	>>
water	30:93	0:0	6	16
water	30:95	0:0	6	)
op	30:96	0:0	6	&
water	30:97	0:0	6	0
water	30:98	0:0	6	xFFFF0000FFFF
water	30:111	0:0	6	)
water	30:112	0:0	6	)
op	30:113	0:0	6	*
water	30:114	0:0	6	0
water	30:115	0:0	6	x800000008
water	30:125	0:0	6	)
op	30:126	0:0	6	>>
water	30:128	0:0	6	32
water	30:130	0:0	6	)
op	32:17	0:0	6	+
water	32:19	0:0	6	2
op	32:20	0:0	6	*
water	32:21	0:0	6	(
water	32:22	0:0	6	(
water	32:23	0:0	6	b1
op	32:25	0:0	6	*
water	32:26	0:0	6	0
water	32:27	0:0	6	x1000200030004
water	32:41	0:0	6	)
op	32:42	0:0	6	>>
water	32:44	0:0	6	48
water	32:46	0:0	6	)
op	33:17	0:0	6	+
water	33:21	0:0	6	(
water	33:22	0:0	6	(
water	33:23	0:0	6	a1
op	33:25	0:0	6	*
water	33:26	0:0	6	0
water	33:27	0:0	6	x1000100010001
water	33:41	0:0	6	)
op	33:42	0:0	6	>>
water	33:44	0:0	6	48
water	33:46	0:0	6	)
op	34:17	0:0	6	+
water	34:19	0:0	6	2
op	34:20	0:0	6	*
water	34:21	0:0	6	(
water	34:22	0:0	6	(
water	34:23	0:0	6	a1
op	34:25	0:0	6	*
water	34:26	0:0	6	0
water	34:27	0:0	6	x0000100020003
water	34:41	0:0	6	)
op	34:42	0:0	6	>>
water	34:44	0:0	6	48
water	34:46	0:0	6	)
water	34:47	0:0	6	;
op	36:17	0:0	6	+
water	36:19	0:0	6	2
op	36:20	0:0	6	*
water	36:21	0:0	6	(
water	36:22	0:0	6	(
water	36:23	0:0	6	a1
op	36:25	0:0	6	*
water	36:26	0:0	6	0
water	36:27	0:0	6	x4000300020001
water	36:41	0:0	6	)
op	36:42	0:0	6	>>
water	36:44	0:0	6	48
water	36:46	0:0	6	)
op	37:17	0:0	6	+
water	37:21	0:0	6	(
water	37:22	0:0	6	(
water	37:23	0:0	6	b1
op	37:25	0:0	6	*
water	37:26	0:0	6	0
water	37:27	0:0	6	x1000100010001
water	37:41	0:0	6	)
op	37:42	0:0	6	>>
water	37:44	0:0	6	48
water	37:46	0:0	6	)
op	38:17	0:0	6	+
water	38:19	0:0	6	2
op	38:20	0:0	6	*
water	38:21	0:0	6	(
water	38:22	0:0	6	(
water	38:23	0:0	6	b1
op	38:25	0:0	6	*
water	38:26	0:0	6	0
water	38:27	0:0	6	x3000200010000
water	38:41	0:0	6	)
op	38:42	0:0	6	>>
water	38:44	0:0	6	48
water	38:46	0:0	6	)
water	38:47	0:0	6	;
water	40:8	0:0	6	}
while	42:8	45:8	4	(len > 4 && s2 < ( 1 U << 31 ))
cond	42:15	42:41	5	len > 4 && s2 < ( 1 U << 31 )
water	42:15	0:0	6	len
op	42:19	0:0	6	>
water	42:21	0:0	6	4
op	42:24	0:0	6	&&
water	42:27	0:0	6	s2
op	42:30	0:0	6	<
water	42:32	0:0	6	(
water	42:33	0:0	6	1
water	42:34	0:0	6	U
op	42:36	0:0	6	<<
water	42:39	0:0	6	31
water	42:41	0:0	6	)
stmts	42:44	45:8	5	
water	42:44	0:0	6	{
call	43:12	43:19	6	DO4
arg	43:16	43:19	7	buf
water	43:16	0:0	8	buf
water	43:20	0:0	6	;
water	44:12	0:0	6	len
op	44:16	0:0	6	-=
water	44:19	0:0	6	4
water	44:20	0:0	6	;
water	45:8	0:0	6	}
call	47:8	47:15	4	DO1
arg	47:12	47:15	5	buf
water	47:12	0:0	6	buf
water	47:16	0:0	4	;
water	47:18	0:0	4	len
op	47:21	0:0	4	--
water	47:23	0:0	4	;
water	48:8	0:0	4	s1
op	48:11	0:0	4	%=
water	48:14	0:0	4	BASE
water	48:18	0:0	4	;
water	49:8	0:0	4	s2
op	49:11	0:0	4	%=
water	49:14	0:0	4	BASE
water	49:18	0:0	4	;
water	50:4	0:0	4	}
return	51:4	51:26	2	(s2<<16)|s1
water	51:11	0:0	3	(
water	51:12	0:0	3	s2
op	51:15	0:0	3	<<
water	51:18	0:0	3	16
water	51:20	0:0	3	)
op	51:22	0:0	3	|
water	51:24	0:0	3	s1

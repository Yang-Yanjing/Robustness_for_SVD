func	1:0	16:0	0	static double	get_volume
params	1:24	0:0	1	
param	1:25	1:42	2	CompandContext *	s
param	1:44	1:57	2	double	in_lin
stmnts	0:0	15:23	1	
decl	3:4	3:22	2	CompandSegment	*cs
decl	4:4	4:26	2	double	in_log
water	4:17	0:0	2	,
decl	4:4	4:26	2	double	out_log
decl	5:4	5:9	2	int	i
if	6:4	7:29	2	(in_lin < s -> in_min_lin)
cond	6:8	6:20	3	in_lin < s -> in_min_lin
water	6:8	0:0	4	in_lin
op	6:15	0:0	4	<
water	6:17	0:0	4	s
op	6:18	0:0	4	->
water	6:20	0:0	4	in_min_lin
stmts	7:8	7:29	3	
return	7:8	7:29	4	s->out_min_lin
water	7:15	0:0	5	s
op	7:16	0:0	5	->
water	7:18	0:0	5	out_min_lin
water	8:4	0:0	2	in_log
op	8:11	0:0	2	=
call	8:13	8:23	2	log
arg	8:17	8:23	3	in_lin
water	8:17	0:0	4	in_lin
water	8:24	0:0	2	;
for	9:4	11:17	2	(i = 1 ;i < s -> nb_segments;i ++)
forinit	9:9	9:14	3	i = 1 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	1
water	9:14	0:0	4	;
cond	9:16	9:23	3	i < s -> nb_segments
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	s
op	9:21	0:0	4	->
water	9:23	0:0	4	nb_segments
forexpr	9:36	9:37	3	i ++
water	9:36	0:0	4	i
op	9:37	0:0	4	++
stmts	10:8	11:17	3	
if	10:8	11:17	4	(in_log <= s -> segments [ i ] . x)
cond	10:12	10:37	5	in_log <= s -> segments [ i ] . x
water	10:12	0:0	6	in_log
op	10:19	0:0	6	<=
water	10:22	0:0	6	s
op	10:23	0:0	6	->
water	10:25	0:0	6	segments
op	10:33	0:0	6	[
water	10:34	0:0	6	i
op	10:35	0:0	6	]
op	10:36	0:0	6	.
water	10:37	0:0	6	x
stmts	11:12	11:17	5	
break	11:12	11:17	6	
water	12:4	0:0	2	cs
op	12:7	0:0	2	=
op	12:9	0:0	2	&
water	12:10	0:0	2	s
op	12:11	0:0	2	->
water	12:13	0:0	2	segments
op	12:21	0:0	2	[
water	12:22	0:0	2	i
op	12:24	0:0	2	-
water	12:26	0:0	2	1
op	12:27	0:0	2	]
water	12:28	0:0	2	;
water	13:4	0:0	2	in_log
op	13:11	0:0	2	-=
water	13:14	0:0	2	cs
op	13:16	0:0	2	->
water	13:18	0:0	2	x
water	13:19	0:0	2	;
water	14:4	0:0	2	out_log
op	14:12	0:0	2	=
water	14:14	0:0	2	cs
op	14:16	0:0	2	->
water	14:18	0:0	2	y
op	14:20	0:0	2	+
water	14:22	0:0	2	in_log
op	14:29	0:0	2	*
water	14:31	0:0	2	(
water	14:32	0:0	2	cs
op	14:34	0:0	2	->
water	14:36	0:0	2	a
op	14:38	0:0	2	*
water	14:40	0:0	2	in_log
op	14:47	0:0	2	+
water	14:49	0:0	2	cs
op	14:51	0:0	2	->
water	14:53	0:0	2	b
water	14:54	0:0	2	)
water	14:55	0:0	2	;
return	15:4	15:23	2	exp(out_log)
call	15:11	15:22	3	exp
arg	15:15	15:22	4	out_log
water	15:15	0:0	5	out_log

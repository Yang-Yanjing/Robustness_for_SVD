decl	1:7	1:47	0	int	request_frame
water	1:24	0:0	0	(
water	1:25	0:0	0	AVFilterLink
op	1:38	0:0	0	*
water	1:39	0:0	0	outlink
water	1:46	0:0	0	)
func	2:15	23:0	0	int	init
params	2:23	0:0	1	
param	2:24	2:44	2	AVFilterContext *	ctx
stmnts	0:0	22:12	1	
decl	4:4	4:37	2	SelectContext	*select
op	4:26	0:0	2	=
water	4:28	0:0	2	ctx
op	4:31	0:0	2	->
water	4:33	0:0	2	priv
decl	5:4	5:14	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:14	2	int	ret
if	6:4	11:4	2	(( ret =av_expr_parse (& select -> expr ,select -> expr_str ,var_names ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0)
cond	6:8	7:75	3	( ret =av_expr_parse (& select -> expr ,select -> expr_str ,var_names ,NULL ,NULL ,NULL ,NULL ,0 ,ctx ) ) < 0
water	6:8	0:0	4	(
water	6:9	0:0	4	ret
op	6:13	0:0	4	=
call	6:15	7:70	4	av_expr_parse
arg	6:29	6:42	5	&select->expr
op	6:29	0:0	6	&
water	6:30	0:0	6	select
op	6:36	0:0	6	->
water	6:38	0:0	6	expr
arg	6:44	6:60	5	select->expr_str
water	6:44	0:0	6	select
op	6:50	0:0	6	->
water	6:52	0:0	6	expr_str
arg	7:29	7:38	5	var_names
water	7:29	0:0	6	var_names
arg	7:40	7:44	5	NULL
water	7:40	0:0	6	NULL
arg	7:46	7:50	5	NULL
water	7:46	0:0	6	NULL
arg	7:52	7:56	5	NULL
water	7:52	0:0	6	NULL
arg	7:58	7:62	5	NULL
water	7:58	0:0	6	NULL
arg	7:64	7:65	5	0
water	7:64	0:0	6	0
arg	7:67	7:70	5	ctx
water	7:67	0:0	6	ctx
water	7:71	0:0	4	)
op	7:73	0:0	4	<
water	7:75	0:0	4	0
stmts	7:78	11:4	3	
water	7:78	0:0	4	{
call	8:8	9:31	4	av_log
arg	8:15	8:18	5	ctx
water	8:15	0:0	6	ctx
arg	8:20	8:32	5	AV_LOG_ERROR
water	8:20	0:0	6	AV_LOG_ERROR
arg	8:34	8:73	5	"Error while parsing expression '%s'\n"
water	8:34	0:0	6	"Error while parsing expression '%s'\n"
arg	9:15	9:31	5	select->expr_str
water	9:15	0:0	6	select
op	9:21	0:0	6	->
water	9:23	0:0	6	expr_str
water	9:32	0:0	4	;
return	10:8	10:18	4	ret
water	10:15	0:0	5	ret
water	11:4	0:0	4	}
water	12:4	0:0	2	select
op	12:10	0:0	2	->
water	12:12	0:0	2	do_scene_detect
op	12:28	0:0	2	=
op	12:30	0:0	2	!
op	12:31	0:0	2	!
call	12:32	12:64	2	strstr
arg	12:39	12:55	3	select->expr_str
water	12:39	0:0	4	select
op	12:45	0:0	4	->
water	12:47	0:0	4	expr_str
arg	12:57	12:64	3	"scene"
water	12:57	0:0	4	"scene"
water	12:65	0:0	2	;
for	13:4	21:4	2	(i = 0 ;i < select -> nb_outputs;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:28	3	i < select -> nb_outputs
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	select
op	13:26	0:0	4	->
water	13:28	0:0	4	nb_outputs
forexpr	13:40	13:41	3	i ++
water	13:40	0:0	4	i
op	13:41	0:0	4	++
stmts	13:45	21:4	3	
water	13:45	0:0	4	{
decl	14:8	14:31	4	AVFilterPad	pad
op	14:24	0:0	4	=
water	14:26	0:0	4	{
water	14:28	0:0	4	0
water	14:30	0:0	4	}
water	15:8	0:0	4	pad
op	15:11	0:0	4	.
water	15:12	0:0	4	name
op	15:17	0:0	4	=
call	15:19	15:44	4	av_asprintf
arg	15:31	15:41	5	"output%d"
water	15:31	0:0	6	"output%d"
arg	15:43	15:44	5	i
water	15:43	0:0	6	i
water	15:45	0:0	4	;
if	16:8	17:34	4	(! pad . name)
cond	16:12	16:17	5	! pad . name
op	16:12	0:0	6	!
water	16:13	0:0	6	pad
op	16:16	0:0	6	.
water	16:17	0:0	6	name
stmts	17:12	17:34	5	
return	17:12	17:34	6	AVERROR(ENOMEM)
call	17:19	17:33	7	AVERROR
arg	17:27	17:33	8	ENOMEM
water	17:27	0:0	9	ENOMEM
water	18:8	0:0	4	pad
op	18:11	0:0	4	.
water	18:12	0:0	4	type
op	18:17	0:0	4	=
water	18:19	0:0	4	ctx
op	18:22	0:0	4	->
water	18:24	0:0	4	filter
op	18:30	0:0	4	->
water	18:32	0:0	4	inputs
op	18:38	0:0	4	[
water	18:39	0:0	4	0
op	18:40	0:0	4	]
op	18:41	0:0	4	.
water	18:42	0:0	4	type
water	18:46	0:0	4	;
water	19:8	0:0	4	pad
op	19:11	0:0	4	.
water	19:12	0:0	4	request_frame
op	19:26	0:0	4	=
water	19:28	0:0	4	request_frame
water	19:41	0:0	4	;
call	20:8	20:37	4	ff_insert_outpad
arg	20:25	20:28	5	ctx
water	20:25	0:0	6	ctx
arg	20:30	20:31	5	i
water	20:30	0:0	6	i
arg	20:33	20:37	5	&pad
op	20:33	0:0	6	&
water	20:34	0:0	6	pad
water	20:38	0:0	4	;
water	21:4	0:0	4	}
return	22:4	22:12	2	0
water	22:11	0:0	3	0

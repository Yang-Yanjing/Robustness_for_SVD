func	1:0	14:0	0	void	av_sha512_final
params	1:20	0:0	1	
param	1:21	1:34	2	AVSHA512 *	ctx
param	1:36	1:51	2	uint8_t *	digest
stmnts	0:0	13:50	1	
decl	3:4	3:18	2	uint64_t	i
op	3:15	0:0	2	=
water	3:17	0:0	2	0
decl	4:4	4:53	2	uint64_t	finalcount
op	4:24	0:0	2	=
call	4:26	4:52	3	av_be2ne64
arg	4:37	4:52	4	ctx->count<<3
water	4:37	0:0	5	ctx
op	4:40	0:0	5	->
water	4:42	0:0	5	count
op	4:48	0:0	5	<<
water	4:51	0:0	5	3
call	5:4	5:35	2	av_sha512_update
arg	5:21	5:24	3	ctx
water	5:21	0:0	4	ctx
arg	5:26	5:32	3	"\200"
water	5:26	0:0	4	"\200"
arg	5:34	5:35	3	1
water	5:34	0:0	4	1
water	5:36	0:0	2	;
while	6:4	7:36	2	(( ctx -> count & 127 ) != 112)
cond	6:11	6:33	3	( ctx -> count & 127 ) != 112
water	6:11	0:0	4	(
water	6:12	0:0	4	ctx
op	6:15	0:0	4	->
water	6:17	0:0	4	count
op	6:23	0:0	4	&
water	6:25	0:0	4	127
water	6:28	0:0	4	)
op	6:30	0:0	4	!=
water	6:33	0:0	4	112
stmts	7:8	7:36	3	
call	7:8	7:35	4	av_sha512_update
arg	7:25	7:28	5	ctx
water	7:25	0:0	6	ctx
arg	7:30	7:32	5	""
water	7:30	0:0	6	""
arg	7:34	7:35	5	1
water	7:34	0:0	6	1
water	7:36	0:0	4	;
call	8:4	8:42	2	av_sha512_update
arg	8:21	8:24	3	ctx
water	8:21	0:0	4	ctx
arg	8:26	8:39	3	(uint8_t*)&i
water	8:26	0:0	4	(
water	8:27	0:0	4	uint8_t
op	8:35	0:0	4	*
water	8:36	0:0	4	)
op	8:37	0:0	4	&
water	8:38	0:0	4	i
arg	8:41	8:42	3	8
water	8:41	0:0	4	8
water	8:43	0:0	2	;
call	9:4	9:51	2	av_sha512_update
arg	9:21	9:24	3	ctx
water	9:21	0:0	4	ctx
arg	9:26	9:48	3	(uint8_t*)&finalcount
water	9:26	0:0	4	(
water	9:27	0:0	4	uint8_t
op	9:35	0:0	4	*
water	9:36	0:0	4	)
op	9:37	0:0	4	&
water	9:38	0:0	4	finalcount
arg	9:50	9:51	3	8
water	9:50	0:0	4	8
water	9:52	0:0	2	;
for	10:4	11:44	2	(i = 0 ;i < ctx -> digest_len;i ++)
forinit	10:9	10:14	3	i = 0 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:25	3	i < ctx -> digest_len
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	ctx
op	10:23	0:0	4	->
water	10:25	0:0	4	digest_len
forexpr	10:37	10:38	3	i ++
water	10:37	0:0	4	i
op	10:38	0:0	4	++
stmts	11:8	11:44	3	
call	11:8	11:43	4	AV_WB64
arg	11:16	11:28	5	digest+i*8
water	11:16	0:0	6	digest
op	11:23	0:0	6	+
water	11:25	0:0	6	i
op	11:26	0:0	6	*
water	11:27	0:0	6	8
arg	11:30	11:43	5	ctx->state[i]
water	11:30	0:0	6	ctx
op	11:33	0:0	6	->
water	11:35	0:0	6	state
op	11:40	0:0	6	[
water	11:41	0:0	6	i
op	11:42	0:0	6	]
water	11:44	0:0	4	;
if	12:4	13:50	2	(ctx -> digest_len & 1)
cond	12:8	12:26	3	ctx -> digest_len & 1
water	12:8	0:0	4	ctx
op	12:11	0:0	4	->
water	12:13	0:0	4	digest_len
op	12:24	0:0	4	&
water	12:26	0:0	4	1
stmts	13:8	13:50	3	
call	13:8	13:49	4	AV_WB32
arg	13:16	13:28	5	digest+i*8
water	13:16	0:0	6	digest
op	13:23	0:0	6	+
water	13:25	0:0	6	i
op	13:26	0:0	6	*
water	13:27	0:0	6	8
arg	13:30	13:49	5	ctx->state[i]>>32
water	13:30	0:0	6	ctx
op	13:33	0:0	6	->
water	13:35	0:0	6	state
op	13:40	0:0	6	[
water	13:41	0:0	6	i
op	13:42	0:0	6	]
op	13:44	0:0	6	>>
water	13:47	0:0	6	32
water	13:50	0:0	4	;

func	1:0	37:0	0	static int	parse_MP4SLDescrTag
params	1:30	0:0	1	
param	1:31	1:54	2	MP4DescrParseContext *	d
param	1:56	1:67	2	int64_t	off
param	1:69	1:76	2	int	len
stmnts	0:0	36:12	1	
decl	3:4	3:37	2	Mp4Descr	*descr
op	3:20	0:0	2	=
water	3:22	0:0	2	d
op	3:23	0:0	2	->
water	3:25	0:0	2	active_descr
decl	4:4	4:18	2	int	predefined
if	5:4	6:34	2	(! descr)
cond	5:8	5:9	3	! descr
op	5:8	0:0	4	!
water	5:9	0:0	4	descr
stmts	6:8	6:34	3	
return	6:8	6:34	4	AVERROR_INVALIDDATA
water	6:15	0:0	5	AVERROR_INVALIDDATA
water	7:4	0:0	2	predefined
op	7:15	0:0	2	=
call	7:17	7:31	2	avio_r8
arg	7:25	7:31	3	&d->pb
op	7:25	0:0	4	&
water	7:26	0:0	4	d
op	7:27	0:0	4	->
water	7:29	0:0	4	pb
water	7:32	0:0	2	;
if	8:4	32:4	2	(! predefined)
cond	8:8	8:9	3	! predefined
op	8:8	0:0	4	!
water	8:9	0:0	4	predefined
stmts	8:21	32:4	3	
water	8:21	0:0	4	{
decl	9:8	9:19	4	int	lengths
decl	10:8	10:35	4	int	flags
op	10:18	0:0	4	=
call	10:20	10:34	5	avio_r8
arg	10:28	10:34	6	&d->pb
op	10:28	0:0	7	&
water	10:29	0:0	7	d
op	10:30	0:0	7	->
water	10:32	0:0	7	pb
water	11:8	0:0	4	descr
op	11:13	0:0	4	->
water	11:15	0:0	4	sl
op	11:17	0:0	4	.
water	11:18	0:0	4	use_au_start
op	11:34	0:0	4	=
op	11:36	0:0	4	!
op	11:37	0:0	4	!
water	11:38	0:0	4	(
water	11:39	0:0	4	flags
op	11:45	0:0	4	&
water	11:47	0:0	4	0
water	11:48	0:0	4	x80
water	11:51	0:0	4	)
water	11:52	0:0	4	;
water	12:8	0:0	4	descr
op	12:13	0:0	4	->
water	12:15	0:0	4	sl
op	12:17	0:0	4	.
water	12:18	0:0	4	use_au_end
op	12:34	0:0	4	=
op	12:36	0:0	4	!
op	12:37	0:0	4	!
water	12:38	0:0	4	(
water	12:39	0:0	4	flags
op	12:45	0:0	4	&
water	12:47	0:0	4	0
water	12:48	0:0	4	x40
water	12:51	0:0	4	)
water	12:52	0:0	4	;
water	13:8	0:0	4	descr
op	13:13	0:0	4	->
water	13:15	0:0	4	sl
op	13:17	0:0	4	.
water	13:18	0:0	4	use_rand_acc_pt
op	13:34	0:0	4	=
op	13:36	0:0	4	!
op	13:37	0:0	4	!
water	13:38	0:0	4	(
water	13:39	0:0	4	flags
op	13:45	0:0	4	&
water	13:47	0:0	4	0
water	13:48	0:0	4	x20
water	13:51	0:0	4	)
water	13:52	0:0	4	;
water	14:8	0:0	4	descr
op	14:13	0:0	4	->
water	14:15	0:0	4	sl
op	14:17	0:0	4	.
water	14:18	0:0	4	use_padding
op	14:34	0:0	4	=
op	14:36	0:0	4	!
op	14:37	0:0	4	!
water	14:38	0:0	4	(
water	14:39	0:0	4	flags
op	14:45	0:0	4	&
water	14:47	0:0	4	0
water	14:48	0:0	4	x08
water	14:51	0:0	4	)
water	14:52	0:0	4	;
water	15:8	0:0	4	descr
op	15:13	0:0	4	->
water	15:15	0:0	4	sl
op	15:17	0:0	4	.
water	15:18	0:0	4	use_timestamps
op	15:34	0:0	4	=
op	15:36	0:0	4	!
op	15:37	0:0	4	!
water	15:38	0:0	4	(
water	15:39	0:0	4	flags
op	15:45	0:0	4	&
water	15:47	0:0	4	0
water	15:48	0:0	4	x04
water	15:51	0:0	4	)
water	15:52	0:0	4	;
water	16:8	0:0	4	descr
op	16:13	0:0	4	->
water	16:15	0:0	4	sl
op	16:17	0:0	4	.
water	16:18	0:0	4	use_idle
op	16:34	0:0	4	=
op	16:36	0:0	4	!
op	16:37	0:0	4	!
water	16:38	0:0	4	(
water	16:39	0:0	4	flags
op	16:45	0:0	4	&
water	16:47	0:0	4	0
water	16:48	0:0	4	x02
water	16:51	0:0	4	)
water	16:52	0:0	4	;
water	17:8	0:0	4	descr
op	17:13	0:0	4	->
water	17:15	0:0	4	sl
op	17:17	0:0	4	.
water	17:18	0:0	4	timestamp_res
op	17:34	0:0	4	=
call	17:36	17:52	4	avio_rb32
arg	17:46	17:52	5	&d->pb
op	17:46	0:0	6	&
water	17:47	0:0	6	d
op	17:48	0:0	6	->
water	17:50	0:0	6	pb
water	17:53	0:0	4	;
call	18:8	18:24	4	avio_rb32
arg	18:18	18:24	5	&d->pb
op	18:18	0:0	6	&
water	18:19	0:0	6	d
op	18:20	0:0	6	->
water	18:22	0:0	6	pb
water	18:25	0:0	4	;
water	19:8	0:0	4	descr
op	19:13	0:0	4	->
water	19:15	0:0	4	sl
op	19:17	0:0	4	.
water	19:18	0:0	4	timestamp_len
op	19:37	0:0	4	=
call	19:39	19:53	4	avio_r8
arg	19:47	19:53	5	&d->pb
op	19:47	0:0	6	&
water	19:48	0:0	6	d
op	19:49	0:0	6	->
water	19:51	0:0	6	pb
water	19:54	0:0	4	;
if	20:8	24:8	4	(descr -> sl . timestamp_len > 64)
cond	20:12	20:38	5	descr -> sl . timestamp_len > 64
water	20:12	0:0	6	descr
op	20:17	0:0	6	->
water	20:19	0:0	6	sl
op	20:21	0:0	6	.
water	20:22	0:0	6	timestamp_len
op	20:36	0:0	6	>
water	20:38	0:0	6	64
stmts	20:42	24:8	5	
water	20:42	0:0	6	{
call	21:12	21:60	6	avpriv_request_sample
arg	21:34	21:38	7	NULL
water	21:34	0:0	8	NULL
arg	21:40	21:60	7	"timestamp_len > 64"
water	21:40	0:0	8	"timestamp_len > 64"
water	21:61	0:0	6	;
water	22:12	0:0	6	descr
op	22:17	0:0	6	->
water	22:19	0:0	6	sl
op	22:21	0:0	6	.
water	22:22	0:0	6	timestamp_len
op	22:36	0:0	6	=
water	22:38	0:0	6	64
water	22:40	0:0	6	;
return	23:12	23:39	6	AVERROR_PATCHWELCOME
water	23:19	0:0	7	AVERROR_PATCHWELCOME
water	24:8	0:0	6	}
water	25:8	0:0	4	descr
op	25:13	0:0	4	->
water	25:15	0:0	4	sl
op	25:17	0:0	4	.
water	25:18	0:0	4	ocr_len
op	25:37	0:0	4	=
call	25:39	25:53	4	avio_r8
arg	25:47	25:53	5	&d->pb
op	25:47	0:0	6	&
water	25:48	0:0	6	d
op	25:49	0:0	6	->
water	25:51	0:0	6	pb
water	25:54	0:0	4	;
water	26:8	0:0	4	descr
op	26:13	0:0	4	->
water	26:15	0:0	4	sl
op	26:17	0:0	4	.
water	26:18	0:0	4	au_len
op	26:37	0:0	4	=
call	26:39	26:53	4	avio_r8
arg	26:47	26:53	5	&d->pb
op	26:47	0:0	6	&
water	26:48	0:0	6	d
op	26:49	0:0	6	->
water	26:51	0:0	6	pb
water	26:54	0:0	4	;
water	27:8	0:0	4	descr
op	27:13	0:0	4	->
water	27:15	0:0	4	sl
op	27:17	0:0	4	.
water	27:18	0:0	4	inst_bitrate_len
op	27:37	0:0	4	=
call	27:39	27:53	4	avio_r8
arg	27:47	27:53	5	&d->pb
op	27:47	0:0	6	&
water	27:48	0:0	6	d
op	27:49	0:0	6	->
water	27:51	0:0	6	pb
water	27:54	0:0	4	;
water	28:8	0:0	4	lengths
op	28:37	0:0	4	=
call	28:39	28:55	4	avio_rb16
arg	28:49	28:55	5	&d->pb
op	28:49	0:0	6	&
water	28:50	0:0	6	d
op	28:51	0:0	6	->
water	28:53	0:0	6	pb
water	28:56	0:0	4	;
water	29:8	0:0	4	descr
op	29:13	0:0	4	->
water	29:15	0:0	4	sl
op	29:17	0:0	4	.
water	29:18	0:0	4	degr_prior_len
op	29:37	0:0	4	=
water	29:39	0:0	4	lengths
op	29:47	0:0	4	>>
water	29:50	0:0	4	12
water	29:52	0:0	4	;
water	30:8	0:0	4	descr
op	30:13	0:0	4	->
water	30:15	0:0	4	sl
op	30:17	0:0	4	.
water	30:18	0:0	4	au_seq_num_len
op	30:37	0:0	4	=
water	30:39	0:0	4	(
water	30:40	0:0	4	lengths
op	30:48	0:0	4	>>
water	30:51	0:0	4	7
water	30:52	0:0	4	)
op	30:54	0:0	4	&
water	30:56	0:0	4	0
water	30:57	0:0	4	x1f
water	30:60	0:0	4	;
water	31:8	0:0	4	descr
op	31:13	0:0	4	->
water	31:15	0:0	4	sl
op	31:17	0:0	4	.
water	31:18	0:0	4	packet_seq_num_len
op	31:37	0:0	4	=
water	31:39	0:0	4	(
water	31:40	0:0	4	lengths
op	31:48	0:0	4	>>
water	31:51	0:0	4	2
water	31:52	0:0	4	)
op	31:54	0:0	4	&
water	31:56	0:0	4	0
water	31:57	0:0	4	x1f
water	31:60	0:0	4	;
water	32:4	0:0	4	}
else	32:6	35:4	2
stmts	32:11	35:4	3	
if	32:11	35:4	4	(! d -> predefined_SLConfigDescriptor_seen)
cond	32:15	32:19	5	! d -> predefined_SLConfigDescriptor_seen
op	32:15	0:0	6	!
water	32:16	0:0	6	d
op	32:17	0:0	6	->
water	32:19	0:0	6	predefined_SLConfigDescriptor_seen
stmts	32:54	35:4	5	
water	32:54	0:0	6	{
call	33:8	33:75	6	avpriv_report_missing_feature
arg	33:38	33:42	7	d->s
water	33:38	0:0	8	d
op	33:39	0:0	8	->
water	33:41	0:0	8	s
arg	33:44	33:75	7	"Predefined SLConfigDescriptor"
water	33:44	0:0	8	"Predefined SLConfigDescriptor"
water	33:76	0:0	6	;
water	34:8	0:0	6	d
op	34:9	0:0	6	->
water	34:11	0:0	6	predefined_SLConfigDescriptor_seen
op	34:46	0:0	6	=
water	34:48	0:0	6	1
water	34:49	0:0	6	;
water	35:4	0:0	6	}
return	36:4	36:12	2	0
water	36:11	0:0	3	0

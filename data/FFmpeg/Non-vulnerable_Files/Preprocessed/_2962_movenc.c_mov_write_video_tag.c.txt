func	1:0	96:0	0	static int	mov_write_video_tag
params	1:30	0:0	1	
param	1:31	1:46	2	AVIOContext *	pb
param	1:48	1:66	2	MOVMuxContext *	mov
param	1:68	1:83	2	MOVTrack *	track
stmnts	0:0	95:31	1	
decl	3:4	3:31	2	int64_t	pos
op	3:16	0:0	2	=
call	3:18	3:30	3	avio_tell
arg	3:28	3:30	4	pb
water	3:28	0:0	5	pb
decl	4:4	4:36	2	char	compressor_name[32]
op	4:29	0:0	2	=
water	4:31	0:0	2	{
water	4:33	0:0	2	0
water	4:35	0:0	2	}
decl	5:4	5:16	2	int	avid
op	5:13	0:0	2	=
water	5:15	0:0	2	0
call	6:4	6:19	2	avio_wb32
arg	6:14	6:16	3	pb
water	6:14	0:0	4	pb
arg	6:18	6:19	3	0
water	6:18	0:0	4	0
water	6:20	0:0	2	;
call	7:4	7:28	2	avio_wl32
arg	7:14	7:16	3	pb
water	7:14	0:0	4	pb
arg	7:18	7:28	3	track->tag
water	7:18	0:0	4	track
op	7:23	0:0	4	->
water	7:25	0:0	4	tag
water	7:29	0:0	2	;
call	8:4	8:19	2	avio_wb32
arg	8:14	8:16	3	pb
water	8:14	0:0	4	pb
arg	8:18	8:19	3	0
water	8:18	0:0	4	0
water	8:20	0:0	2	;
call	9:4	9:19	2	avio_wb16
arg	9:14	9:16	3	pb
water	9:14	0:0	4	pb
arg	9:18	9:19	3	0
water	9:18	0:0	4	0
water	9:20	0:0	2	;
call	10:4	10:19	2	avio_wb16
arg	10:14	10:16	3	pb
water	10:14	0:0	4	pb
arg	10:18	10:19	3	1
water	10:18	0:0	4	1
water	10:20	0:0	2	;
call	11:4	11:19	2	avio_wb16
arg	11:14	11:16	3	pb
water	11:14	0:0	4	pb
arg	11:18	11:19	3	0
water	11:18	0:0	4	0
water	11:20	0:0	2	;
call	12:4	12:19	2	avio_wb16
arg	12:14	12:16	3	pb
water	12:14	0:0	4	pb
arg	12:18	12:19	3	0
water	12:18	0:0	4	0
water	12:20	0:0	2	;
if	13:4	22:4	2	(track -> mode == MODE_MOV)
cond	13:8	13:23	3	track -> mode == MODE_MOV
water	13:8	0:0	4	track
op	13:13	0:0	4	->
water	13:15	0:0	4	mode
op	13:20	0:0	4	==
water	13:23	0:0	4	MODE_MOV
stmts	13:33	22:4	3	
water	13:33	0:0	4	{
call	14:8	14:31	4	ffio_wfourcc
arg	14:21	14:23	5	pb
water	14:21	0:0	6	pb
arg	14:25	14:31	5	"FFMP"
water	14:25	0:0	6	"FFMP"
water	14:32	0:0	4	;
if	15:8	18:8	4	(track -> enc -> codec_id == AV_CODEC_ID_RAWVIDEO)
cond	15:12	15:36	5	track -> enc -> codec_id == AV_CODEC_ID_RAWVIDEO
water	15:12	0:0	6	track
op	15:17	0:0	6	->
water	15:19	0:0	6	enc
op	15:22	0:0	6	->
water	15:24	0:0	6	codec_id
op	15:33	0:0	6	==
water	15:36	0:0	6	AV_CODEC_ID_RAWVIDEO
stmts	15:58	18:8	5	
water	15:58	0:0	6	{
call	16:12	16:27	6	avio_wb32
arg	16:22	16:24	7	pb
water	16:22	0:0	8	pb
arg	16:26	16:27	7	0
water	16:26	0:0	8	0
water	16:28	0:0	6	;
call	17:12	17:31	6	avio_wb32
arg	17:22	17:24	7	pb
water	17:22	0:0	8	pb
arg	17:26	17:31	7	0x400
water	17:26	0:0	8	0
water	17:27	0:0	8	x400
water	17:32	0:0	6	;
water	18:8	0:0	6	}
else	18:10	21:8	4
stmts	18:15	21:8	5	
water	18:15	0:0	6	{
call	19:12	19:31	6	avio_wb32
arg	19:22	19:24	7	pb
water	19:22	0:0	8	pb
arg	19:26	19:31	7	0x200
water	19:26	0:0	8	0
water	19:27	0:0	8	x200
water	19:32	0:0	6	;
call	20:12	20:31	6	avio_wb32
arg	20:22	20:24	7	pb
water	20:22	0:0	8	pb
arg	20:26	20:31	7	0x200
water	20:26	0:0	8	0
water	20:27	0:0	8	x200
water	20:32	0:0	6	;
water	21:8	0:0	6	}
water	22:4	0:0	4	}
else	22:6	26:4	2
stmts	22:11	26:4	3	
water	22:11	0:0	4	{
call	23:8	23:23	4	avio_wb32
arg	23:18	23:20	5	pb
water	23:18	0:0	6	pb
arg	23:22	23:23	5	0
water	23:22	0:0	6	0
water	23:24	0:0	4	;
call	24:8	24:23	4	avio_wb32
arg	24:18	24:20	5	pb
water	24:18	0:0	6	pb
arg	24:22	24:23	5	0
water	24:22	0:0	6	0
water	24:24	0:0	4	;
call	25:8	25:23	4	avio_wb32
arg	25:18	25:20	5	pb
water	25:18	0:0	6	pb
arg	25:22	25:23	5	0
water	25:22	0:0	6	0
water	25:24	0:0	4	;
water	26:4	0:0	4	}
call	27:4	27:35	2	avio_wb16
arg	27:14	27:16	3	pb
water	27:14	0:0	4	pb
arg	27:18	27:35	3	track->enc->width
water	27:18	0:0	4	track
op	27:23	0:0	4	->
water	27:25	0:0	4	enc
op	27:28	0:0	4	->
water	27:30	0:0	4	width
water	27:36	0:0	2	;
call	28:4	28:31	2	avio_wb16
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:31	3	track->height
water	28:18	0:0	4	track
op	28:23	0:0	4	->
water	28:25	0:0	4	height
water	28:32	0:0	2	;
call	29:4	29:28	2	avio_wb32
arg	29:14	29:16	3	pb
water	29:14	0:0	4	pb
arg	29:18	29:28	3	0x00480000
water	29:18	0:0	4	0
water	29:19	0:0	4	x00480000
water	29:29	0:0	2	;
call	30:4	30:28	2	avio_wb32
arg	30:14	30:16	3	pb
water	30:14	0:0	4	pb
arg	30:18	30:28	3	0x00480000
water	30:18	0:0	4	0
water	30:19	0:0	4	x00480000
water	30:29	0:0	2	;
call	31:4	31:19	2	avio_wb32
arg	31:14	31:16	3	pb
water	31:14	0:0	4	pb
arg	31:18	31:19	3	0
water	31:18	0:0	4	0
water	31:20	0:0	2	;
call	32:4	32:19	2	avio_wb16
arg	32:14	32:16	3	pb
water	32:14	0:0	4	pb
arg	32:18	32:19	3	1
water	32:18	0:0	4	1
water	32:20	0:0	2	;
call	34:4	34:46	2	find_compressor
arg	34:20	34:35	3	compressor_name
water	34:20	0:0	4	compressor_name
arg	34:37	34:39	3	32
water	34:37	0:0	4	32
arg	34:41	34:46	3	track
water	34:41	0:0	4	track
water	34:47	0:0	2	;
call	35:4	35:39	2	avio_w8
arg	35:12	35:14	3	pb
water	35:12	0:0	4	pb
arg	35:16	35:39	3	strlen(compressor_name)
call	35:16	35:38	4	strlen
arg	35:23	35:38	5	compressor_name
water	35:23	0:0	6	compressor_name
water	35:40	0:0	2	;
call	36:4	36:38	2	avio_write
arg	36:15	36:17	3	pb
water	36:15	0:0	4	pb
arg	36:19	36:34	3	compressor_name
water	36:19	0:0	4	compressor_name
arg	36:36	36:38	3	31
water	36:36	0:0	4	31
water	36:39	0:0	2	;
if	37:4	38:56	2	(track -> mode == MODE_MOV && track -> enc -> bits_per_coded_sample)
cond	37:8	37:47	3	track -> mode == MODE_MOV && track -> enc -> bits_per_coded_sample
water	37:8	0:0	4	track
op	37:13	0:0	4	->
water	37:15	0:0	4	mode
op	37:20	0:0	4	==
water	37:23	0:0	4	MODE_MOV
op	37:32	0:0	4	&&
water	37:35	0:0	4	track
op	37:40	0:0	4	->
water	37:42	0:0	4	enc
op	37:45	0:0	4	->
water	37:47	0:0	4	bits_per_coded_sample
stmts	38:8	38:56	3	
call	38:8	38:55	4	avio_wb16
arg	38:18	38:20	5	pb
water	38:18	0:0	6	pb
arg	38:22	38:55	5	track->enc->bits_per_coded_sample
water	38:22	0:0	6	track
op	38:27	0:0	6	->
water	38:29	0:0	6	enc
op	38:32	0:0	6	->
water	38:34	0:0	6	bits_per_coded_sample
water	38:56	0:0	4	;
else	39:4	40:27	2
stmts	40:8	40:27	3	
call	40:8	40:26	4	avio_wb16
arg	40:18	40:20	5	pb
water	40:18	0:0	6	pb
arg	40:22	40:26	5	0x18
water	40:22	0:0	6	0
water	40:23	0:0	6	x18
water	40:27	0:0	4	;
call	41:4	41:24	2	avio_wb16
arg	41:14	41:16	3	pb
water	41:14	0:0	4	pb
arg	41:18	41:24	3	0xffff
water	41:18	0:0	4	0
water	41:19	0:0	4	xffff
water	41:25	0:0	2	;
if	42:4	43:37	2	(track -> tag ==MKTAG ('m' ,'p' ,'4' ,'v' ))
cond	42:8	42:43	3	track -> tag ==MKTAG ('m' ,'p' ,'4' ,'v' )
water	42:8	0:0	4	track
op	42:13	0:0	4	->
water	42:15	0:0	4	tag
op	42:19	0:0	4	==
call	42:22	42:43	4	MKTAG
arg	42:28	42:31	5	'm'
water	42:28	0:0	6	'm'
arg	42:32	42:35	5	'p'
water	42:32	0:0	6	'p'
arg	42:36	42:39	5	'4'
water	42:36	0:0	6	'4'
arg	42:40	42:43	5	'v'
water	42:40	0:0	6	'v'
stmts	43:8	43:37	3	
call	43:8	43:36	4	mov_write_esds_tag
arg	43:27	43:29	5	pb
water	43:27	0:0	6	pb
arg	43:31	43:36	5	track
water	43:31	0:0	6	track
water	43:37	0:0	4	;
else	44:4	45:30	2
stmts	44:9	45:30	3	
if	44:9	45:30	4	(track -> enc -> codec_id == AV_CODEC_ID_H263)
cond	44:13	44:37	5	track -> enc -> codec_id == AV_CODEC_ID_H263
water	44:13	0:0	6	track
op	44:18	0:0	6	->
water	44:20	0:0	6	enc
op	44:23	0:0	6	->
water	44:25	0:0	6	codec_id
op	44:34	0:0	6	==
water	44:37	0:0	6	AV_CODEC_ID_H263
stmts	45:8	45:30	5	
call	45:8	45:29	6	mov_write_d263_tag
arg	45:27	45:29	7	pb
water	45:27	0:0	8	pb
water	45:30	0:0	6	;
else	46:4	50:4	2
stmts	46:9	50:4	3	
if	46:9	50:4	4	(track -> enc -> codec_id == AV_CODEC_ID_AVUI || track -> enc -> codec_id == AV_CODEC_ID_SVQ3)
cond	46:13	47:36	5	track -> enc -> codec_id == AV_CODEC_ID_AVUI || track -> enc -> codec_id == AV_CODEC_ID_SVQ3
water	46:13	0:0	6	track
op	46:18	0:0	6	->
water	46:20	0:0	6	enc
op	46:23	0:0	6	->
water	46:25	0:0	6	codec_id
op	46:34	0:0	6	==
water	46:37	0:0	6	AV_CODEC_ID_AVUI
op	46:54	0:0	6	||
water	47:12	0:0	6	track
op	47:17	0:0	6	->
water	47:19	0:0	6	enc
op	47:22	0:0	6	->
water	47:24	0:0	6	codec_id
op	47:33	0:0	6	==
water	47:36	0:0	6	AV_CODEC_ID_SVQ3
stmts	47:54	50:4	5	
water	47:54	0:0	6	{
call	48:8	48:41	6	mov_write_extradata_tag
arg	48:32	48:34	7	pb
water	48:32	0:0	8	pb
arg	48:36	48:41	7	track
water	48:36	0:0	8	track
water	48:42	0:0	6	;
call	49:8	49:23	6	avio_wb32
arg	49:18	49:20	7	pb
water	49:18	0:0	8	pb
arg	49:22	49:23	7	0
water	49:22	0:0	8	0
water	49:24	0:0	6	;
water	50:4	0:0	6	}
else	50:6	53:4	2
stmts	50:11	53:4	3	
if	50:11	53:4	4	(track -> enc -> codec_id == AV_CODEC_ID_DNXHD)
cond	50:15	50:39	5	track -> enc -> codec_id == AV_CODEC_ID_DNXHD
water	50:15	0:0	6	track
op	50:20	0:0	6	->
water	50:22	0:0	6	enc
op	50:25	0:0	6	->
water	50:27	0:0	6	codec_id
op	50:36	0:0	6	==
water	50:39	0:0	6	AV_CODEC_ID_DNXHD
stmts	50:58	53:4	5	
water	50:58	0:0	6	{
call	51:8	51:36	6	mov_write_avid_tag
arg	51:27	51:29	7	pb
water	51:27	0:0	8	pb
arg	51:31	51:36	7	track
water	51:31	0:0	8	track
water	51:37	0:0	6	;
water	52:8	0:0	6	avid
op	52:13	0:0	6	=
water	52:15	0:0	6	1
water	52:16	0:0	6	;
water	53:4	0:0	6	}
else	53:6	54:37	2
stmts	53:11	54:37	3	
if	53:11	54:37	4	(track -> enc -> codec_id == AV_CODEC_ID_HEVC)
cond	53:15	53:39	5	track -> enc -> codec_id == AV_CODEC_ID_HEVC
water	53:15	0:0	6	track
op	53:20	0:0	6	->
water	53:22	0:0	6	enc
op	53:25	0:0	6	->
water	53:27	0:0	6	codec_id
op	53:36	0:0	6	==
water	53:39	0:0	6	AV_CODEC_ID_HEVC
stmts	54:8	54:37	5	
call	54:8	54:36	6	mov_write_hvcc_tag
arg	54:27	54:29	7	pb
water	54:27	0:0	8	pb
arg	54:31	54:36	7	track
water	54:31	0:0	8	track
water	54:37	0:0	6	;
else	55:4	59:4	2
stmts	55:9	59:4	3	
if	55:9	59:4	4	(track -> enc -> codec_id == AV_CODEC_ID_H264 && !TAG_IS_AVCI (track -> tag ))
cond	55:13	55:80	5	track -> enc -> codec_id == AV_CODEC_ID_H264 && !TAG_IS_AVCI (track -> tag )
water	55:13	0:0	6	track
op	55:18	0:0	6	->
water	55:20	0:0	6	enc
op	55:23	0:0	6	->
water	55:25	0:0	6	codec_id
op	55:34	0:0	6	==
water	55:37	0:0	6	AV_CODEC_ID_H264
op	55:54	0:0	6	&&
op	55:57	0:0	6	!
call	55:58	55:80	6	TAG_IS_AVCI
arg	55:70	55:80	7	track->tag
water	55:70	0:0	8	track
op	55:75	0:0	8	->
water	55:77	0:0	8	tag
stmts	55:83	59:4	5	
water	55:83	0:0	6	{
call	56:8	56:36	6	mov_write_avcc_tag
arg	56:27	56:29	7	pb
water	56:27	0:0	8	pb
arg	56:31	56:36	7	track
water	56:31	0:0	8	track
water	56:37	0:0	6	;
if	57:8	58:39	6	(track -> mode == MODE_IPOD)
cond	57:12	57:27	7	track -> mode == MODE_IPOD
water	57:12	0:0	8	track
op	57:17	0:0	8	->
water	57:19	0:0	8	mode
op	57:24	0:0	8	==
water	57:27	0:0	8	MODE_IPOD
stmts	58:12	58:39	7	
call	58:12	58:38	8	mov_write_uuid_tag_ipod
arg	58:36	58:38	9	pb
water	58:36	0:0	10	pb
water	58:39	0:0	8	;
water	59:4	0:0	6	}
else	59:6	60:37	2
stmts	59:11	60:37	3	
if	59:11	60:37	4	(track -> enc -> codec_id == AV_CODEC_ID_VC1 && track -> vos_len > 0)
cond	59:15	59:75	5	track -> enc -> codec_id == AV_CODEC_ID_VC1 && track -> vos_len > 0
water	59:15	0:0	6	track
op	59:20	0:0	6	->
water	59:22	0:0	6	enc
op	59:25	0:0	6	->
water	59:27	0:0	6	codec_id
op	59:36	0:0	6	==
water	59:39	0:0	6	AV_CODEC_ID_VC1
op	59:55	0:0	6	&&
water	59:58	0:0	6	track
op	59:63	0:0	6	->
water	59:65	0:0	6	vos_len
op	59:73	0:0	6	>
water	59:75	0:0	6	0
stmts	60:8	60:37	5	
call	60:8	60:36	6	mov_write_dvc1_tag
arg	60:27	60:29	7	pb
water	60:27	0:0	8	pb
arg	60:31	60:36	7	track
water	60:31	0:0	8	track
water	60:37	0:0	6	;
else	61:4	65:4	2
stmts	61:9	65:4	3	
if	61:9	65:4	4	(track -> enc -> codec_id == AV_CODEC_ID_VP6F || track -> enc -> codec_id == AV_CODEC_ID_VP6A)
cond	61:13	62:37	5	track -> enc -> codec_id == AV_CODEC_ID_VP6F || track -> enc -> codec_id == AV_CODEC_ID_VP6A
water	61:13	0:0	6	track
op	61:18	0:0	6	->
water	61:20	0:0	6	enc
op	61:23	0:0	6	->
water	61:25	0:0	6	codec_id
op	61:34	0:0	6	==
water	61:37	0:0	6	AV_CODEC_ID_VP6F
op	61:54	0:0	6	||
water	62:13	0:0	6	track
op	62:18	0:0	6	->
water	62:20	0:0	6	enc
op	62:23	0:0	6	->
water	62:25	0:0	6	codec_id
op	62:34	0:0	6	==
water	62:37	0:0	6	AV_CODEC_ID_VP6A
stmts	62:55	65:4	5	
water	62:55	0:0	6	{
water	0:0	0:0	6	STATEMENTS
water	65:4	0:0	6	}
else	65:6	68:4	2
stmts	65:11	68:4	3	
if	65:11	68:4	4	(track -> enc -> codec_id == AV_CODEC_ID_R10K)
cond	65:15	65:39	5	track -> enc -> codec_id == AV_CODEC_ID_R10K
water	65:15	0:0	6	track
op	65:20	0:0	6	->
water	65:22	0:0	6	enc
op	65:25	0:0	6	->
water	65:27	0:0	6	codec_id
op	65:36	0:0	6	==
water	65:39	0:0	6	AV_CODEC_ID_R10K
stmts	65:57	68:4	5	
water	65:57	0:0	6	{
if	66:8	67:41	6	(track -> enc -> codec_tag ==MKTAG ('R' ,'1' ,'0' ,'k' ))
cond	66:12	66:58	7	track -> enc -> codec_tag ==MKTAG ('R' ,'1' ,'0' ,'k' )
water	66:12	0:0	8	track
op	66:17	0:0	8	->
water	66:19	0:0	8	enc
op	66:22	0:0	8	->
water	66:24	0:0	8	codec_tag
op	66:34	0:0	8	==
call	66:37	66:58	8	MKTAG
arg	66:43	66:46	9	'R'
water	66:43	0:0	10	'R'
arg	66:47	66:50	9	'1'
water	66:47	0:0	10	'1'
arg	66:51	66:54	9	'0'
water	66:51	0:0	10	'0'
arg	66:55	66:58	9	'k'
water	66:55	0:0	10	'k'
stmts	67:12	67:41	7	
call	67:12	67:40	8	mov_write_dpxe_tag
arg	67:31	67:33	9	pb
water	67:31	0:0	10	pb
arg	67:35	67:40	9	track
water	67:35	0:0	10	track
water	67:41	0:0	8	;
water	68:4	0:0	6	}
else	68:6	69:37	2
stmts	68:11	69:37	3	
if	68:11	69:37	4	(track -> vos_len > 0)
cond	68:15	68:32	5	track -> vos_len > 0
water	68:15	0:0	6	track
op	68:20	0:0	6	->
water	68:22	0:0	6	vos_len
op	68:30	0:0	6	>
water	68:32	0:0	6	0
stmts	69:8	69:37	5	
call	69:8	69:36	6	mov_write_glbl_tag
arg	69:27	69:29	7	pb
water	69:27	0:0	8	pb
arg	69:31	69:36	7	track
water	69:31	0:0	8	track
water	69:37	0:0	6	;
if	70:4	74:41	2	(track -> enc -> codec_id != AV_CODEC_ID_H264 && track -> enc -> codec_id != AV_CODEC_ID_MPEG4 && track -> enc -> codec_id != AV_CODEC_ID_DNXHD)
cond	70:8	72:32	3	track -> enc -> codec_id != AV_CODEC_ID_H264 && track -> enc -> codec_id != AV_CODEC_ID_MPEG4 && track -> enc -> codec_id != AV_CODEC_ID_DNXHD
water	70:8	0:0	4	track
op	70:13	0:0	4	->
water	70:15	0:0	4	enc
op	70:18	0:0	4	->
water	70:20	0:0	4	codec_id
op	70:29	0:0	4	!=
water	70:32	0:0	4	AV_CODEC_ID_H264
op	70:49	0:0	4	&&
water	71:8	0:0	4	track
op	71:13	0:0	4	->
water	71:15	0:0	4	enc
op	71:18	0:0	4	->
water	71:20	0:0	4	codec_id
op	71:29	0:0	4	!=
water	71:32	0:0	4	AV_CODEC_ID_MPEG4
op	71:50	0:0	4	&&
water	72:8	0:0	4	track
op	72:13	0:0	4	->
water	72:15	0:0	4	enc
op	72:18	0:0	4	->
water	72:20	0:0	4	codec_id
op	72:29	0:0	4	!=
water	72:32	0:0	4	AV_CODEC_ID_DNXHD
stmts	73:8	74:41	3	
if	73:8	74:41	4	(track -> enc -> field_order != AV_FIELD_UNKNOWN)
cond	73:12	73:39	5	track -> enc -> field_order != AV_FIELD_UNKNOWN
water	73:12	0:0	6	track
op	73:17	0:0	6	->
water	73:19	0:0	6	enc
op	73:22	0:0	6	->
water	73:24	0:0	6	field_order
op	73:36	0:0	6	!=
water	73:39	0:0	6	AV_FIELD_UNKNOWN
stmts	74:12	74:41	5	
call	74:12	74:40	6	mov_write_fiel_tag
arg	74:31	74:33	7	pb
water	74:31	0:0	8	pb
arg	74:35	74:40	7	track
water	74:35	0:0	8	track
water	74:41	0:0	6	;
if	75:4	80:4	2	(mov -> flags & FF_MOV_FLAG_WRITE_GAMA)
cond	75:8	75:21	3	mov -> flags & FF_MOV_FLAG_WRITE_GAMA
water	75:8	0:0	4	mov
op	75:11	0:0	4	->
water	75:13	0:0	4	flags
op	75:19	0:0	4	&
water	75:21	0:0	4	FF_MOV_FLAG_WRITE_GAMA
stmts	75:45	80:4	3	
water	75:45	0:0	4	{
if	76:8	77:53	4	(track -> mode == MODE_MOV)
cond	76:12	76:27	5	track -> mode == MODE_MOV
water	76:12	0:0	6	track
op	76:17	0:0	6	->
water	76:19	0:0	6	mode
op	76:24	0:0	6	==
water	76:27	0:0	6	MODE_MOV
stmts	77:12	77:53	5	
call	77:12	77:52	6	mov_write_gama_tag
arg	77:31	77:33	7	pb
water	77:31	0:0	8	pb
arg	77:35	77:40	7	track
water	77:35	0:0	8	track
arg	77:42	77:52	7	mov->gamma
water	77:42	0:0	8	mov
op	77:45	0:0	8	->
water	77:47	0:0	8	gamma
water	77:53	0:0	6	;
else	78:8	79:92	4
stmts	79:12	79:92	5	
call	79:12	79:91	6	av_log
arg	79:19	79:26	7	mov->fc
water	79:19	0:0	8	mov
op	79:22	0:0	8	->
water	79:24	0:0	8	fc
arg	79:28	79:42	7	AV_LOG_WARNING
water	79:28	0:0	8	AV_LOG_WARNING
arg	79:44	79:91	7	"Not writing 'gama' atom. Format is not MOV.\n"
water	79:44	0:0	8	"Not writing 'gama' atom. Format is not MOV.\n"
water	79:92	0:0	6	;
water	80:4	0:0	4	}
if	81:4	86:4	2	(mov -> flags & FF_MOV_FLAG_WRITE_COLR)
cond	81:8	81:21	3	mov -> flags & FF_MOV_FLAG_WRITE_COLR
water	81:8	0:0	4	mov
op	81:11	0:0	4	->
water	81:13	0:0	4	flags
op	81:19	0:0	4	&
water	81:21	0:0	4	FF_MOV_FLAG_WRITE_COLR
stmts	81:45	86:4	3	
water	81:45	0:0	4	{
if	82:8	83:41	4	(track -> mode == MODE_MOV || track -> mode == MODE_MP4)
cond	82:12	82:54	5	track -> mode == MODE_MOV || track -> mode == MODE_MP4
water	82:12	0:0	6	track
op	82:17	0:0	6	->
water	82:19	0:0	6	mode
op	82:24	0:0	6	==
water	82:27	0:0	6	MODE_MOV
op	82:36	0:0	6	||
water	82:39	0:0	6	track
op	82:44	0:0	6	->
water	82:46	0:0	6	mode
op	82:51	0:0	6	==
water	82:54	0:0	6	MODE_MP4
stmts	83:12	83:41	5	
call	83:12	83:40	6	mov_write_colr_tag
arg	83:31	83:33	7	pb
water	83:31	0:0	8	pb
arg	83:35	83:40	7	track
water	83:35	0:0	8	track
water	83:41	0:0	6	;
else	84:8	85:99	4
stmts	85:12	85:99	5	
call	85:12	85:98	6	av_log
arg	85:19	85:26	7	mov->fc
water	85:19	0:0	8	mov
op	85:22	0:0	8	->
water	85:24	0:0	8	fc
arg	85:28	85:42	7	AV_LOG_WARNING
water	85:28	0:0	8	AV_LOG_WARNING
arg	85:44	85:98	7	"Not writing 'colr' atom. Format is not MOV or MP4.\n"
water	85:44	0:0	8	"Not writing 'colr' atom. Format is not MOV or MP4.\n"
water	85:99	0:0	6	;
water	86:4	0:0	4	}
if	87:4	90:4	2	(track -> enc -> sample_aspect_ratio . den && track -> enc -> sample_aspect_ratio . num && track -> enc -> sample_aspect_ratio . den != track -> enc -> sample_aspect_ratio . num)
cond	87:8	88:79	3	track -> enc -> sample_aspect_ratio . den && track -> enc -> sample_aspect_ratio . num && track -> enc -> sample_aspect_ratio . den != track -> enc -> sample_aspect_ratio . num
water	87:8	0:0	4	track
op	87:13	0:0	4	->
water	87:15	0:0	4	enc
op	87:18	0:0	4	->
water	87:20	0:0	4	sample_aspect_ratio
op	87:39	0:0	4	.
water	87:40	0:0	4	den
op	87:44	0:0	4	&&
water	87:47	0:0	4	track
op	87:52	0:0	4	->
water	87:54	0:0	4	enc
op	87:57	0:0	4	->
water	87:59	0:0	4	sample_aspect_ratio
op	87:78	0:0	4	.
water	87:79	0:0	4	num
op	87:83	0:0	4	&&
water	88:8	0:0	4	track
op	88:13	0:0	4	->
water	88:15	0:0	4	enc
op	88:18	0:0	4	->
water	88:20	0:0	4	sample_aspect_ratio
op	88:39	0:0	4	.
water	88:40	0:0	4	den
op	88:44	0:0	4	!=
water	88:47	0:0	4	track
op	88:52	0:0	4	->
water	88:54	0:0	4	enc
op	88:57	0:0	4	->
water	88:59	0:0	4	sample_aspect_ratio
op	88:78	0:0	4	.
water	88:79	0:0	4	num
stmts	88:84	90:4	3	
water	88:84	0:0	4	{
call	89:8	89:36	4	mov_write_pasp_tag
arg	89:27	89:29	5	pb
water	89:27	0:0	6	pb
arg	89:31	89:36	5	track
water	89:31	0:0	6	track
water	89:37	0:0	4	;
water	90:4	0:0	4	}
if	93:4	94:24	2	(avid)
cond	93:8	93:8	3	avid
water	93:8	0:0	4	avid
stmts	94:8	94:24	3	
call	94:8	94:23	4	avio_wb32
arg	94:18	94:20	5	pb
water	94:18	0:0	6	pb
arg	94:22	94:23	5	0
water	94:22	0:0	6	0
water	94:24	0:0	4	;
return	95:4	95:31	2	update_size(pb,pos)
call	95:11	95:30	3	update_size
arg	95:23	95:25	4	pb
water	95:23	0:0	5	pb
arg	95:27	95:30	4	pos
water	95:27	0:0	5	pos

func	1:0	33:0	0	static double	get_scene_score
params	1:29	0:0	1	
param	1:30	1:50	2	AVFilterContext *	ctx
param	1:52	1:65	2	AVFrame *	crnt
param	1:67	1:80	2	AVFrame *	next
stmnts	0:0	32:14	1	
decl	3:4	3:35	2	FrameRateContext	*s
op	3:24	0:0	2	=
water	3:26	0:0	2	ctx
op	3:29	0:0	2	->
water	3:31	0:0	2	priv
decl	4:4	4:18	2	double	ret
op	4:15	0:0	2	=
water	4:17	0:0	2	0
call	5:4	5:38	2	ff_dlog
arg	5:12	5:15	3	ctx
water	5:12	0:0	4	ctx
arg	5:17	5:38	3	"get_scene_score()\n"
water	5:17	0:0	4	"get_scene_score()\n"
water	5:39	0:0	2	;
if	6:4	30:4	2	(crnt && crnt -> height == next -> height && crnt -> width == next -> width)
cond	6:8	8:30	3	crnt && crnt -> height == next -> height && crnt -> width == next -> width
water	6:8	0:0	4	crnt
op	6:13	0:0	4	&&
water	7:8	0:0	4	crnt
op	7:12	0:0	4	->
water	7:14	0:0	4	height
op	7:21	0:0	4	==
water	7:24	0:0	4	next
op	7:28	0:0	4	->
water	7:30	0:0	4	height
op	7:37	0:0	4	&&
water	8:8	0:0	4	crnt
op	8:12	0:0	4	->
water	8:14	0:0	4	width
op	8:21	0:0	4	==
water	8:24	0:0	4	next
op	8:28	0:0	4	->
water	8:30	0:0	4	width
stmts	8:37	30:4	3	
water	8:37	0:0	4	{
decl	9:8	9:16	4	int	x
water	9:13	0:0	4	,
decl	9:8	9:16	4	int	y
decl	10:8	10:19	4	int64_t	sad
decl	11:8	11:25	4	double	mafd
water	11:19	0:0	4	,
decl	11:8	11:25	4	double	diff
decl	12:8	12:35	4	uint8_t	*p1
op	12:20	0:0	4	=
water	12:22	0:0	4	crnt
op	12:26	0:0	4	->
water	12:28	0:0	4	data
op	12:32	0:0	4	[
water	12:33	0:0	4	0
op	12:34	0:0	4	]
decl	13:8	13:35	4	uint8_t	*p2
op	13:20	0:0	4	=
water	13:22	0:0	4	next
op	13:26	0:0	4	->
water	13:28	0:0	4	data
op	13:32	0:0	4	[
water	13:33	0:0	4	0
op	13:34	0:0	4	]
decl	14:8	14:49	4	const int	p1_linesize
op	14:30	0:0	4	=
water	14:32	0:0	4	crnt
op	14:36	0:0	4	->
water	14:38	0:0	4	linesize
op	14:46	0:0	4	[
water	14:47	0:0	4	0
op	14:48	0:0	4	]
decl	15:8	15:49	4	const int	p2_linesize
op	15:30	0:0	4	=
water	15:32	0:0	4	next
op	15:36	0:0	4	->
water	15:38	0:0	4	linesize
op	15:46	0:0	4	[
water	15:47	0:0	4	0
op	15:48	0:0	4	]
call	16:8	16:50	4	ff_dlog
arg	16:16	16:19	5	ctx
water	16:16	0:0	6	ctx
arg	16:21	16:50	5	"get_scene_score() process\n"
water	16:21	0:0	6	"get_scene_score() process\n"
water	16:51	0:0	4	;
for	17:8	24:8	4	(sad = y = 0 ;y < crnt -> height;y += 8)
forinit	17:13	17:24	5	sad = y = 0 ;
water	17:13	0:0	6	sad
op	17:17	0:0	6	=
water	17:19	0:0	6	y
op	17:21	0:0	6	=
water	17:23	0:0	6	0
water	17:24	0:0	6	;
cond	17:26	17:36	5	y < crnt -> height
water	17:26	0:0	6	y
op	17:28	0:0	6	<
water	17:30	0:0	6	crnt
op	17:34	0:0	6	->
water	17:36	0:0	6	height
forexpr	17:44	17:49	5	y += 8
water	17:44	0:0	6	y
op	17:46	0:0	6	+=
water	17:49	0:0	6	8
stmts	17:52	24:8	5	
water	17:52	0:0	6	{
for	18:12	23:12	6	(x = 0 ;x < p1_linesize;x += 8)
forinit	18:17	18:22	7	x = 0 ;
water	18:17	0:0	8	x
op	18:19	0:0	8	=
water	18:21	0:0	8	0
water	18:22	0:0	8	;
cond	18:24	18:28	7	x < p1_linesize
water	18:24	0:0	8	x
op	18:26	0:0	8	<
water	18:28	0:0	8	p1_linesize
forexpr	18:41	18:46	7	x += 8
water	18:41	0:0	8	x
op	18:43	0:0	8	+=
water	18:46	0:0	8	8
stmts	18:49	23:12	7	
water	18:49	0:0	8	{
water	19:16	0:0	8	sad
op	19:20	0:0	8	+=
call	19:23	22:41	8	s->sad
arg	19:30	19:54	9	p1+y*p1_linesize+x
water	19:30	0:0	10	p1
op	19:33	0:0	10	+
water	19:35	0:0	10	y
op	19:37	0:0	10	*
water	19:39	0:0	10	p1_linesize
op	19:51	0:0	10	+
water	19:53	0:0	10	x
arg	20:30	20:41	9	p1_linesize
water	20:30	0:0	10	p1_linesize
arg	21:30	21:54	9	p2+y*p2_linesize+x
water	21:30	0:0	10	p2
op	21:33	0:0	10	+
water	21:35	0:0	10	y
op	21:37	0:0	10	*
water	21:39	0:0	10	p2_linesize
op	21:51	0:0	10	+
water	21:53	0:0	10	x
arg	22:30	22:41	9	p2_linesize
water	22:30	0:0	10	p2_linesize
water	22:42	0:0	8	;
water	23:12	0:0	8	}
water	24:8	0:0	6	}
call	25:8	25:15	4	emms_c
water	25:16	0:0	4	;
water	26:8	0:0	4	mafd
op	26:13	0:0	4	=
water	26:15	0:0	4	sad
op	26:19	0:0	4	/
water	26:21	0:0	4	(
water	26:22	0:0	4	crnt
op	26:26	0:0	4	->
water	26:28	0:0	4	height
op	26:35	0:0	4	*
water	26:37	0:0	4	crnt
op	26:41	0:0	4	->
water	26:43	0:0	4	width
op	26:49	0:0	4	*
water	26:51	0:0	4	3
water	26:52	0:0	4	)
water	26:53	0:0	4	;
water	27:8	0:0	4	diff
op	27:13	0:0	4	=
call	27:15	27:39	4	fabs
arg	27:20	27:39	5	mafd-s->prev_mafd
water	27:20	0:0	6	mafd
op	27:25	0:0	6	-
water	27:27	0:0	6	s
op	27:28	0:0	6	->
water	27:30	0:0	6	prev_mafd
water	27:40	0:0	4	;
water	28:8	0:0	4	ret
op	28:13	0:0	4	=
call	28:15	28:51	4	av_clipf
arg	28:24	28:41	5	FFMIN(mafd,diff)
call	28:24	28:40	6	FFMIN
arg	28:30	28:34	7	mafd
water	28:30	0:0	8	mafd
arg	28:36	28:40	7	diff
water	28:36	0:0	8	diff
arg	28:43	28:44	5	0
water	28:43	0:0	6	0
arg	28:46	28:51	5	100.0
water	28:46	0:0	6	100
op	28:49	0:0	6	.
water	28:50	0:0	6	0
water	28:52	0:0	4	;
water	29:8	0:0	4	s
op	29:9	0:0	4	->
water	29:11	0:0	4	prev_mafd
op	29:21	0:0	4	=
water	29:23	0:0	4	mafd
water	29:27	0:0	4	;
water	30:4	0:0	4	}
call	31:8	31:60	2	ff_dlog
arg	31:16	31:19	3	ctx
water	31:16	0:0	4	ctx
arg	31:21	31:55	3	"get_scene_score() result is:%f\n"
water	31:21	0:0	4	"get_scene_score() result is:%f\n"
arg	31:57	31:60	3	ret
water	31:57	0:0	4	ret
water	31:61	0:0	2	;
return	32:4	32:14	2	ret
water	32:11	0:0	3	ret

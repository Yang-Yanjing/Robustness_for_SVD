func	1:0	34:0	0	int	av_image_fill_pointers
params	1:26	0:0	1	
param	1:27	1:43	2	uint8_t *	data[4]
param	1:45	1:71	2	enum AVPixelFormat	pix_fmt
param	1:73	1:83	2	int	height
param	2:27	2:39	2	uint8_t *	ptr
param	2:41	2:63	2	const int	linesizes[4]
stmnts	0:0	33:21	1	
decl	4:4	4:60	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:60	2	int	total_size
water	4:21	0:0	2	,
decl	4:4	4:60	2	int	size[4]
op	4:31	0:0	2	=
water	4:33	0:0	2	{
water	4:35	0:0	2	0
water	4:37	0:0	2	}
water	4:38	0:0	2	,
decl	4:4	4:60	2	int	has_plane[4]
op	4:53	0:0	2	=
water	4:55	0:0	2	{
water	4:57	0:0	2	0
water	4:59	0:0	2	}
decl	5:4	5:65	2	const AVPixFmtDescriptor	*desc
op	5:35	0:0	2	=
call	5:37	5:64	3	av_pix_fmt_desc_get
arg	5:57	5:64	4	pix_fmt
water	5:57	0:0	5	pix_fmt
call	6:4	6:42	2	memset
arg	6:11	6:20	3	data
water	6:11	0:0	4	data
arg	6:22	6:23	3	0
water	6:22	0:0	4	0
arg	6:25	6:42	3	sizeof(data[0])*4
op	6:25	0:0	4	sizeof
water	6:31	0:0	4	(
water	6:32	0:0	4	data
op	6:36	0:0	4	[
water	6:37	0:0	4	0
op	6:38	0:0	4	]
water	6:39	0:0	4	)
op	6:40	0:0	4	*
water	6:41	0:0	4	4
water	6:43	0:0	2	;
if	7:4	8:30	2	(! desc || desc -> flags & AV_PIX_FMT_FLAG_HWACCEL)
cond	7:8	7:31	3	! desc || desc -> flags & AV_PIX_FMT_FLAG_HWACCEL
op	7:8	0:0	4	!
water	7:9	0:0	4	desc
op	7:14	0:0	4	||
water	7:17	0:0	4	desc
op	7:21	0:0	4	->
water	7:23	0:0	4	flags
op	7:29	0:0	4	&
water	7:31	0:0	4	AV_PIX_FMT_FLAG_HWACCEL
stmts	8:8	8:30	3	
return	8:8	8:30	4	AVERROR(EINVAL)
call	8:15	8:29	5	AVERROR
arg	8:23	8:29	6	EINVAL
water	8:23	0:0	7	EINVAL
water	9:4	0:0	2	data
op	9:8	0:0	2	[
water	9:9	0:0	2	0
op	9:10	0:0	2	]
op	9:12	0:0	2	=
water	9:14	0:0	2	ptr
water	9:17	0:0	2	;
if	10:4	11:30	2	(linesizes [ 0 ] > ( INT_MAX - 1024 ) / height)
cond	10:8	10:42	3	linesizes [ 0 ] > ( INT_MAX - 1024 ) / height
water	10:8	0:0	4	linesizes
op	10:17	0:0	4	[
water	10:18	0:0	4	0
op	10:19	0:0	4	]
op	10:21	0:0	4	>
water	10:23	0:0	4	(
water	10:24	0:0	4	INT_MAX
op	10:32	0:0	4	-
water	10:34	0:0	4	1024
water	10:38	0:0	4	)
op	10:40	0:0	4	/
water	10:42	0:0	4	height
stmts	11:8	11:30	3	
return	11:8	11:30	4	AVERROR(EINVAL)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	EINVAL
water	11:23	0:0	7	EINVAL
water	12:4	0:0	2	size
op	12:8	0:0	2	[
water	12:9	0:0	2	0
op	12:10	0:0	2	]
op	12:12	0:0	2	=
water	12:14	0:0	2	linesizes
op	12:23	0:0	2	[
water	12:24	0:0	2	0
op	12:25	0:0	2	]
op	12:27	0:0	2	*
water	12:29	0:0	2	height
water	12:35	0:0	2	;
if	13:4	18:4	2	(desc -> flags & AV_PIX_FMT_FLAG_PAL || desc -> flags & AV_PIX_FMT_FLAG_PSEUDOPAL)
cond	13:8	14:22	3	desc -> flags & AV_PIX_FMT_FLAG_PAL || desc -> flags & AV_PIX_FMT_FLAG_PSEUDOPAL
water	13:8	0:0	4	desc
op	13:12	0:0	4	->
water	13:14	0:0	4	flags
op	13:20	0:0	4	&
water	13:22	0:0	4	AV_PIX_FMT_FLAG_PAL
op	13:42	0:0	4	||
water	14:8	0:0	4	desc
op	14:12	0:0	4	->
water	14:14	0:0	4	flags
op	14:20	0:0	4	&
water	14:22	0:0	4	AV_PIX_FMT_FLAG_PSEUDOPAL
stmts	14:49	18:4	3	
water	14:49	0:0	4	{
water	15:8	0:0	4	size
op	15:12	0:0	4	[
water	15:13	0:0	4	0
op	15:14	0:0	4	]
op	15:16	0:0	4	=
water	15:18	0:0	4	(
water	15:19	0:0	4	size
op	15:23	0:0	4	[
water	15:24	0:0	4	0
op	15:25	0:0	4	]
op	15:27	0:0	4	+
water	15:29	0:0	4	3
water	15:30	0:0	4	)
op	15:32	0:0	4	&
water	15:34	0:0	4	~3
water	15:36	0:0	4	;
water	16:8	0:0	4	data
op	16:12	0:0	4	[
water	16:13	0:0	4	1
op	16:14	0:0	4	]
op	16:16	0:0	4	=
water	16:18	0:0	4	ptr
op	16:22	0:0	4	+
water	16:24	0:0	4	size
op	16:28	0:0	4	[
water	16:29	0:0	4	0
op	16:30	0:0	4	]
water	16:31	0:0	4	;
return	17:8	17:32	4	size[0]+256*4
water	17:15	0:0	5	size
op	17:19	0:0	5	[
water	17:20	0:0	5	0
op	17:21	0:0	5	]
op	17:23	0:0	5	+
water	17:25	0:0	5	256
op	17:29	0:0	5	*
water	17:31	0:0	5	4
water	18:4	0:0	4	}
for	19:4	20:42	2	(i = 0 ;i < 4;i ++)
forinit	19:9	19:14	3	i = 0 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:20	3	i < 4
water	19:16	0:0	4	i
op	19:18	0:0	4	<
water	19:20	0:0	4	4
forexpr	19:23	19:24	3	i ++
water	19:23	0:0	4	i
op	19:24	0:0	4	++
stmts	20:8	20:42	3	
water	20:8	0:0	4	has_plane
op	20:17	0:0	4	[
water	20:18	0:0	4	desc
op	20:22	0:0	4	->
water	20:24	0:0	4	comp
op	20:28	0:0	4	[
water	20:29	0:0	4	i
op	20:30	0:0	4	]
op	20:31	0:0	4	.
water	20:32	0:0	4	plane
op	20:37	0:0	4	]
op	20:39	0:0	4	=
water	20:41	0:0	4	1
water	20:42	0:0	4	;
water	21:4	0:0	2	total_size
op	21:15	0:0	2	=
water	21:17	0:0	2	size
op	21:21	0:0	2	[
water	21:22	0:0	2	0
op	21:23	0:0	2	]
water	21:24	0:0	2	;
for	22:4	32:4	2	(i = 1 ;i < 4 && has_plane [ i ];i ++)
forinit	22:9	22:14	3	i = 1 ;
water	22:9	0:0	4	i
op	22:11	0:0	4	=
water	22:13	0:0	4	1
water	22:14	0:0	4	;
cond	22:16	22:36	3	i < 4 && has_plane [ i ]
water	22:16	0:0	4	i
op	22:18	0:0	4	<
water	22:20	0:0	4	4
op	22:22	0:0	4	&&
water	22:25	0:0	4	has_plane
op	22:34	0:0	4	[
water	22:35	0:0	4	i
op	22:36	0:0	4	]
forexpr	22:39	22:40	3	i ++
water	22:39	0:0	4	i
op	22:40	0:0	4	++
stmts	22:44	32:4	3	
water	22:44	0:0	4	{
decl	23:8	23:63	4	int	h
water	23:13	0:0	4	,
decl	23:8	23:63	4	int	s
op	23:17	0:0	4	=
water	23:19	0:0	4	(
water	23:20	0:0	4	i
op	23:22	0:0	4	==
water	23:25	0:0	4	1
op	23:27	0:0	4	||
water	23:30	0:0	4	i
op	23:32	0:0	4	==
water	23:35	0:0	4	2
water	23:36	0:0	4	)
water	23:38	0:0	4	?
water	23:40	0:0	4	desc
op	23:44	0:0	4	->
water	23:46	0:0	4	log2_chroma_h
water	23:60	0:0	4	:
water	23:62	0:0	4	0
water	24:8	0:0	4	data
op	24:12	0:0	4	[
water	24:13	0:0	4	i
op	24:14	0:0	4	]
op	24:16	0:0	4	=
water	24:18	0:0	4	data
op	24:22	0:0	4	[
water	24:23	0:0	4	i
op	24:24	0:0	4	-
water	24:25	0:0	4	1
op	24:26	0:0	4	]
op	24:28	0:0	4	+
water	24:30	0:0	4	size
op	24:34	0:0	4	[
water	24:35	0:0	4	i
op	24:36	0:0	4	-
water	24:37	0:0	4	1
op	24:38	0:0	4	]
water	24:39	0:0	4	;
water	25:8	0:0	4	h
op	25:10	0:0	4	=
water	25:12	0:0	4	(
water	25:13	0:0	4	height
op	25:20	0:0	4	+
water	25:22	0:0	4	(
water	25:23	0:0	4	1
op	25:25	0:0	4	<<
water	25:28	0:0	4	s
water	25:29	0:0	4	)
op	25:31	0:0	4	-
water	25:33	0:0	4	1
water	25:34	0:0	4	)
op	25:36	0:0	4	>>
water	25:39	0:0	4	s
water	25:40	0:0	4	;
if	26:8	27:34	4	(linesizes [ i ] > INT_MAX / h)
cond	26:12	26:37	5	linesizes [ i ] > INT_MAX / h
water	26:12	0:0	6	linesizes
op	26:21	0:0	6	[
water	26:22	0:0	6	i
op	26:23	0:0	6	]
op	26:25	0:0	6	>
water	26:27	0:0	6	INT_MAX
op	26:35	0:0	6	/
water	26:37	0:0	6	h
stmts	27:12	27:34	5	
return	27:12	27:34	6	AVERROR(EINVAL)
call	27:19	27:33	7	AVERROR
arg	27:27	27:33	8	EINVAL
water	27:27	0:0	9	EINVAL
water	28:8	0:0	4	size
op	28:12	0:0	4	[
water	28:13	0:0	4	i
op	28:14	0:0	4	]
op	28:16	0:0	4	=
water	28:18	0:0	4	h
op	28:20	0:0	4	*
water	28:22	0:0	4	linesizes
op	28:31	0:0	4	[
water	28:32	0:0	4	i
op	28:33	0:0	4	]
water	28:34	0:0	4	;
if	29:8	30:34	4	(total_size > INT_MAX - size [ i ])
cond	29:12	29:41	5	total_size > INT_MAX - size [ i ]
water	29:12	0:0	6	total_size
op	29:23	0:0	6	>
water	29:25	0:0	6	INT_MAX
op	29:33	0:0	6	-
water	29:35	0:0	6	size
op	29:39	0:0	6	[
water	29:40	0:0	6	i
op	29:41	0:0	6	]
stmts	30:12	30:34	5	
return	30:12	30:34	6	AVERROR(EINVAL)
call	30:19	30:33	7	AVERROR
arg	30:27	30:33	8	EINVAL
water	30:27	0:0	9	EINVAL
water	31:8	0:0	4	total_size
op	31:19	0:0	4	+=
water	31:22	0:0	4	size
op	31:26	0:0	4	[
water	31:27	0:0	4	i
op	31:28	0:0	4	]
water	31:29	0:0	4	;
water	32:4	0:0	4	}
return	33:4	33:21	2	total_size
water	33:11	0:0	3	total_size

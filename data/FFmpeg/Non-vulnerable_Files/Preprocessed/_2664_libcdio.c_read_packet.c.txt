func	1:0	26:0	0	static int	read_packet
params	1:22	0:0	1	
param	1:23	1:43	2	AVFormatContext *	ctx
param	1:45	1:58	2	AVPacket *	pkt
stmnts	0:0	25:12	1	
decl	3:4	3:35	2	CDIOContext	*s
op	3:19	0:0	2	=
water	3:21	0:0	2	ctx
op	3:24	0:0	2	->
water	3:26	0:0	2	priv_data
decl	4:4	4:11	2	int	ret
decl	5:4	5:17	2	uint16_t	*buf
decl	6:4	6:20	2	char	*err
op	6:14	0:0	2	=
water	6:16	0:0	2	NULL
if	7:4	8:26	2	(ctx -> streams [ 0 ] -> cur_dts > s -> last_sector)
cond	7:8	7:38	3	ctx -> streams [ 0 ] -> cur_dts > s -> last_sector
water	7:8	0:0	4	ctx
op	7:11	0:0	4	->
water	7:13	0:0	4	streams
op	7:20	0:0	4	[
water	7:21	0:0	4	0
op	7:22	0:0	4	]
op	7:23	0:0	4	->
water	7:25	0:0	4	cur_dts
op	7:33	0:0	4	>
water	7:35	0:0	4	s
op	7:36	0:0	4	->
water	7:38	0:0	4	last_sector
stmts	8:8	8:26	3	
return	8:8	8:26	4	AVERROR_EOF
water	8:15	0:0	5	AVERROR_EOF
water	9:4	0:0	2	buf
op	9:8	0:0	2	=
call	9:10	9:46	2	cdio_paranoia_read
arg	9:29	9:40	3	s->paranoia
water	9:29	0:0	4	s
op	9:30	0:0	4	->
water	9:32	0:0	4	paranoia
arg	9:42	9:46	3	NULL
water	9:42	0:0	4	NULL
water	9:47	0:0	2	;
if	10:4	11:26	2	(! buf)
cond	10:8	10:9	3	! buf
op	10:8	0:0	4	!
water	10:9	0:0	4	buf
stmts	11:8	11:26	3	
return	11:8	11:26	4	AVERROR_EOF
water	11:15	0:0	5	AVERROR_EOF
if	12:4	16:4	2	(err =cdio_cddap_errors (s -> drive ))
cond	12:8	12:40	3	err =cdio_cddap_errors (s -> drive )
water	12:8	0:0	4	err
op	12:12	0:0	4	=
call	12:14	12:40	4	cdio_cddap_errors
arg	12:32	12:40	5	s->drive
water	12:32	0:0	6	s
op	12:33	0:0	6	->
water	12:35	0:0	6	drive
stmts	12:43	16:4	3	
water	12:43	0:0	4	{
call	13:8	13:45	4	av_log
arg	13:15	13:18	5	ctx
water	13:15	0:0	6	ctx
arg	13:20	13:32	5	AV_LOG_ERROR
water	13:20	0:0	6	AV_LOG_ERROR
arg	13:34	13:40	5	"%s\n"
water	13:34	0:0	6	"%s\n"
arg	13:42	13:45	5	err
water	13:42	0:0	6	err
water	13:46	0:0	4	;
call	14:8	14:16	4	free
arg	14:13	14:16	5	err
water	14:13	0:0	6	err
water	14:17	0:0	4	;
water	15:8	0:0	4	err
op	15:12	0:0	4	=
water	15:14	0:0	4	NULL
water	15:18	0:0	4	;
water	16:4	0:0	4	}
if	17:4	21:4	2	(err =cdio_cddap_messages (s -> drive ))
cond	17:8	17:42	3	err =cdio_cddap_messages (s -> drive )
water	17:8	0:0	4	err
op	17:12	0:0	4	=
call	17:14	17:42	4	cdio_cddap_messages
arg	17:34	17:42	5	s->drive
water	17:34	0:0	6	s
op	17:35	0:0	6	->
water	17:37	0:0	6	drive
stmts	17:45	21:4	3	
water	17:45	0:0	4	{
call	18:8	18:47	4	av_log
arg	18:15	18:18	5	ctx
water	18:15	0:0	6	ctx
arg	18:20	18:34	5	AV_LOG_VERBOSE
water	18:20	0:0	6	AV_LOG_VERBOSE
arg	18:36	18:42	5	"%s\n"
water	18:36	0:0	6	"%s\n"
arg	18:44	18:47	5	err
water	18:44	0:0	6	err
water	18:48	0:0	4	;
call	19:8	19:16	4	free
arg	19:13	19:16	5	err
water	19:13	0:0	6	err
water	19:17	0:0	4	;
water	20:8	0:0	4	err
op	20:12	0:0	4	=
water	20:14	0:0	4	NULL
water	20:18	0:0	4	;
water	21:4	0:0	4	}
if	22:4	23:18	2	(( ret =av_new_packet (pkt ,CDIO_CD_FRAMESIZE_RAW ) ) < 0)
cond	22:8	22:60	3	( ret =av_new_packet (pkt ,CDIO_CD_FRAMESIZE_RAW ) ) < 0
water	22:8	0:0	4	(
water	22:9	0:0	4	ret
op	22:13	0:0	4	=
call	22:15	22:55	4	av_new_packet
arg	22:29	22:32	5	pkt
water	22:29	0:0	6	pkt
arg	22:34	22:55	5	CDIO_CD_FRAMESIZE_RAW
water	22:34	0:0	6	CDIO_CD_FRAMESIZE_RAW
water	22:56	0:0	4	)
op	22:58	0:0	4	<
water	22:60	0:0	4	0
stmts	23:8	23:18	3	
return	23:8	23:18	4	ret
water	23:15	0:0	5	ret
call	24:4	24:48	2	memcpy
arg	24:11	24:20	3	pkt->data
water	24:11	0:0	4	pkt
op	24:14	0:0	4	->
water	24:16	0:0	4	data
arg	24:22	24:25	3	buf
water	24:22	0:0	4	buf
arg	24:27	24:48	3	CDIO_CD_FRAMESIZE_RAW
water	24:27	0:0	4	CDIO_CD_FRAMESIZE_RAW
water	24:49	0:0	2	;
return	25:4	25:12	2	0
water	25:11	0:0	3	0

func	1:0	26:0	0	int	main
params	1:8	0:0	1	
param	1:9	1:13	2	void
stmnts	0:0	25:12	1	
decl	3:4	3:14	2	LLSModel	m
decl	4:4	4:16	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:16	2	int	order
decl	5:4	5:13	2	AVLFG	lfg
call	6:4	6:23	2	av_lfg_init
arg	6:16	6:20	3	&lfg
op	6:16	0:0	4	&
water	6:17	0:0	4	lfg
arg	6:22	6:23	3	1
water	6:22	0:0	4	1
water	6:24	0:0	2	;
call	7:4	7:25	2	avpriv_init_lls
arg	7:20	7:22	3	&m
op	7:20	0:0	4	&
water	7:21	0:0	4	m
arg	7:24	7:25	3	3
water	7:24	0:0	4	3
water	7:26	0:0	2	;
for	8:4	24:4	2	(i = 0 ;i < 100;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < 100
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	100
forexpr	8:25	8:26	3	i ++
water	8:25	0:0	4	i
op	8:26	0:0	4	++
stmts	8:30	24:4	3	
water	8:30	0:0	4	{
call	9:8	9:42	4	LOCAL_ALIGNED
arg	9:22	9:24	5	32
water	9:22	0:0	6	32
arg	9:26	9:32	5	double
water	9:26	0:0	6	double
arg	9:34	9:37	5	var
water	9:34	0:0	6	var
arg	9:39	9:42	5	[4]
op	9:39	0:0	6	[
water	9:40	0:0	6	4
op	9:41	0:0	6	]
water	9:43	0:0	4	;
decl	10:8	10:19	4	double	eval
water	11:8	0:0	4	var
op	11:11	0:0	4	[
water	11:12	0:0	4	0
op	11:13	0:0	4	]
op	11:15	0:0	4	=
water	11:17	0:0	4	(
call	11:18	11:33	4	av_lfg_get
arg	11:29	11:33	5	&lfg
op	11:29	0:0	6	&
water	11:30	0:0	6	lfg
op	11:35	0:0	4	/
water	11:37	0:0	4	(
water	11:38	0:0	4	double
water	11:44	0:0	4	)
water	11:46	0:0	4	UINT_MAX
op	11:55	0:0	4	-
water	11:57	0:0	4	0
op	11:58	0:0	4	.
water	11:59	0:0	4	5
water	11:60	0:0	4	)
op	11:62	0:0	4	*
water	11:64	0:0	4	2
water	11:65	0:0	4	;
water	12:8	0:0	4	var
op	12:11	0:0	4	[
water	12:12	0:0	4	1
op	12:13	0:0	4	]
op	12:15	0:0	4	=
water	12:17	0:0	4	var
op	12:20	0:0	4	[
water	12:21	0:0	4	0
op	12:22	0:0	4	]
op	12:24	0:0	4	+
call	12:26	12:41	4	av_lfg_get
arg	12:37	12:41	5	&lfg
op	12:37	0:0	6	&
water	12:38	0:0	6	lfg
op	12:43	0:0	4	/
water	12:45	0:0	4	(
water	12:46	0:0	4	double
water	12:52	0:0	4	)
water	12:54	0:0	4	UINT_MAX
op	12:63	0:0	4	-
water	12:65	0:0	4	0
op	12:66	0:0	4	.
water	12:67	0:0	4	5
water	12:68	0:0	4	;
water	13:8	0:0	4	var
op	13:11	0:0	4	[
water	13:12	0:0	4	2
op	13:13	0:0	4	]
op	13:15	0:0	4	=
water	13:17	0:0	4	var
op	13:20	0:0	4	[
water	13:21	0:0	4	1
op	13:22	0:0	4	]
op	13:24	0:0	4	+
call	13:26	13:41	4	av_lfg_get
arg	13:37	13:41	5	&lfg
op	13:37	0:0	6	&
water	13:38	0:0	6	lfg
op	13:43	0:0	4	/
water	13:45	0:0	4	(
water	13:46	0:0	4	double
water	13:52	0:0	4	)
water	13:54	0:0	4	UINT_MAX
op	13:63	0:0	4	-
water	13:65	0:0	4	0
op	13:66	0:0	4	.
water	13:67	0:0	4	5
water	13:68	0:0	4	;
water	14:8	0:0	4	var
op	14:11	0:0	4	[
water	14:12	0:0	4	3
op	14:13	0:0	4	]
op	14:15	0:0	4	=
water	14:17	0:0	4	var
op	14:20	0:0	4	[
water	14:21	0:0	4	2
op	14:22	0:0	4	]
op	14:24	0:0	4	+
call	14:26	14:41	4	av_lfg_get
arg	14:37	14:41	5	&lfg
op	14:37	0:0	6	&
water	14:38	0:0	6	lfg
op	14:43	0:0	4	/
water	14:45	0:0	4	(
water	14:46	0:0	4	double
water	14:52	0:0	4	)
water	14:54	0:0	4	UINT_MAX
op	14:63	0:0	4	-
water	14:65	0:0	4	0
op	14:66	0:0	4	.
water	14:67	0:0	4	5
water	14:68	0:0	4	;
call	15:8	15:28	4	m.update_lls
arg	15:21	15:23	5	&m
op	15:21	0:0	6	&
water	15:22	0:0	6	m
arg	15:25	15:28	5	var
water	15:25	0:0	6	var
water	15:29	0:0	4	;
call	16:8	16:37	4	avpriv_solve_lls
arg	16:25	16:27	5	&m
op	16:25	0:0	6	&
water	16:26	0:0	6	m
arg	16:29	16:34	5	0.001
water	16:29	0:0	6	0
op	16:30	0:0	6	.
water	16:31	0:0	6	001
arg	16:36	16:37	5	0
water	16:36	0:0	6	0
water	16:38	0:0	4	;
for	17:8	23:8	4	(order = 0 ;order < 3;order ++)
forinit	17:13	17:22	5	order = 0 ;
water	17:13	0:0	6	order
op	17:19	0:0	6	=
water	17:21	0:0	6	0
water	17:22	0:0	6	;
cond	17:24	17:32	5	order < 3
water	17:24	0:0	6	order
op	17:30	0:0	6	<
water	17:32	0:0	6	3
forexpr	17:35	17:40	5	order ++
water	17:35	0:0	6	order
op	17:40	0:0	6	++
stmts	17:44	23:8	5	
water	17:44	0:0	6	{
water	18:12	0:0	6	eval
op	18:17	0:0	6	=
call	18:19	18:52	6	m.evaluate_lls
arg	18:34	18:36	7	&m
op	18:34	0:0	8	&
water	18:35	0:0	8	m
arg	18:38	18:45	7	var+1
water	18:38	0:0	8	var
op	18:42	0:0	8	+
water	18:44	0:0	8	1
arg	18:47	18:52	7	order
water	18:47	0:0	8	order
water	18:53	0:0	6	;
call	19:12	22:36	6	printf
arg	19:19	19:74	7	"real:%9f order:%d pred:%9f var:%f coeffs:%f %9f %9f\n"
water	19:19	0:0	8	"real:%9f order:%d pred:%9f var:%f coeffs:%f %9f %9f\n"
arg	20:19	20:25	7	var[0]
water	20:19	0:0	8	var
op	20:22	0:0	8	[
water	20:23	0:0	8	0
op	20:24	0:0	8	]
arg	20:27	20:32	7	order
water	20:27	0:0	8	order
arg	20:34	20:38	7	eval
water	20:34	0:0	8	eval
arg	20:40	20:73	7	sqrt(m.variance[order]/(i+1))
call	20:40	20:72	8	sqrt
arg	20:45	20:72	9	m.variance[order]/(i+1)
water	20:45	0:0	10	m
op	20:46	0:0	10	.
water	20:47	0:0	10	variance
op	20:55	0:0	10	[
water	20:56	0:0	10	order
op	20:61	0:0	10	]
op	20:63	0:0	10	/
water	20:65	0:0	10	(
water	20:66	0:0	10	i
op	20:68	0:0	10	+
water	20:70	0:0	10	1
water	20:71	0:0	10	)
arg	21:19	21:36	7	m.coeff[order][0]
water	21:19	0:0	8	m
op	21:20	0:0	8	.
water	21:21	0:0	8	coeff
op	21:26	0:0	8	[
water	21:27	0:0	8	order
op	21:32	0:0	8	]
op	21:33	0:0	8	[
water	21:34	0:0	8	0
op	21:35	0:0	8	]
arg	21:38	21:55	7	m.coeff[order][1]
water	21:38	0:0	8	m
op	21:39	0:0	8	.
water	21:40	0:0	8	coeff
op	21:45	0:0	8	[
water	21:46	0:0	8	order
op	21:51	0:0	8	]
op	21:52	0:0	8	[
water	21:53	0:0	8	1
op	21:54	0:0	8	]
arg	22:19	22:36	7	m.coeff[order][2]
water	22:19	0:0	8	m
op	22:20	0:0	8	.
water	22:21	0:0	8	coeff
op	22:26	0:0	8	[
water	22:27	0:0	8	order
op	22:32	0:0	8	]
op	22:33	0:0	8	[
water	22:34	0:0	8	2
op	22:35	0:0	8	]
water	22:37	0:0	6	;
water	23:8	0:0	6	}
water	24:4	0:0	4	}
return	25:4	25:12	2	0
water	25:11	0:0	3	0

func	1:0	17:0	0	static void	check_pred8x8
params	1:25	0:0	1	
param	1:26	1:44	2	H264PredContext *	h
param	1:46	1:59	2	uint8_t *	buf0
param	1:61	1:74	2	uint8_t *	buf1
param	2:26	2:35	2	int	codec
param	2:37	2:54	2	int	chroma_format
param	2:56	2:69	2	int	bit_depth
stmnts	0:0	16:4	1	
decl	4:4	4:17	2	int	pred_mode
call	5:4	5:53	2	declare_func
arg	5:17	5:21	3	void
water	5:17	0:0	4	void
arg	5:23	5:35	3	uint8_t*src
water	5:23	0:0	4	uint8_t
op	5:31	0:0	4	*
water	5:32	0:0	4	src
arg	5:37	5:53	3	ptrdiff_tstride
water	5:37	0:0	4	ptrdiff_t
water	5:47	0:0	4	stride
water	5:54	0:0	2	;
for	6:4	16:4	2	(pred_mode = 0 ;pred_mode < 11;pred_mode ++)
forinit	6:9	6:22	3	pred_mode = 0 ;
water	6:9	0:0	4	pred_mode
op	6:19	0:0	4	=
water	6:21	0:0	4	0
water	6:22	0:0	4	;
cond	6:24	6:36	3	pred_mode < 11
water	6:24	0:0	4	pred_mode
op	6:34	0:0	4	<
water	6:36	0:0	4	11
forexpr	6:40	6:49	3	pred_mode ++
water	6:40	0:0	4	pred_mode
op	6:49	0:0	4	++
stmts	6:53	16:4	3	
water	6:53	0:0	4	{
if	7:8	15:8	4	(check_pred_func (h -> pred8x8 [ pred_mode ] ,( chroma_format == 2 ) ? "8x16" : "8x8" ,pred8x8_modes [ codec ] [ pred_mode ] ))
cond	7:12	8:59	5	check_pred_func (h -> pred8x8 [ pred_mode ] ,( chroma_format == 2 ) ? "8x16" : "8x8" ,pred8x8_modes [ codec ] [ pred_mode ] )
call	7:12	8:59	6	check_pred_func
arg	7:28	7:49	7	h->pred8x8[pred_mode]
water	7:28	0:0	8	h
op	7:29	0:0	8	->
water	7:31	0:0	8	pred8x8
op	7:38	0:0	8	[
water	7:39	0:0	8	pred_mode
op	7:48	0:0	8	]
arg	7:51	7:88	7	(chroma_format==2)?"8x16":"8x8"
water	7:51	0:0	8	(
water	7:52	0:0	8	chroma_format
op	7:66	0:0	8	==
water	7:69	0:0	8	2
water	7:70	0:0	8	)
water	7:72	0:0	8	?
water	7:74	0:0	8	"8x16"
water	7:81	0:0	8	:
water	7:83	0:0	8	"8x8"
arg	8:28	8:59	7	pred8x8_modes[codec][pred_mode]
water	8:28	0:0	8	pred8x8_modes
op	8:41	0:0	8	[
water	8:42	0:0	8	codec
op	8:47	0:0	8	]
op	8:48	0:0	8	[
water	8:49	0:0	8	pred_mode
op	8:58	0:0	8	]
stmts	8:62	15:8	5	
water	8:62	0:0	6	{
call	9:12	9:30	6	randomize_buffers
water	9:31	0:0	6	;
call	10:12	10:42	6	call_ref
arg	10:21	10:25	7	src0
water	10:21	0:0	8	src0
arg	10:27	10:42	7	24*SIZEOF_PIXEL
water	10:27	0:0	8	24
op	10:29	0:0	8	*
water	10:30	0:0	8	SIZEOF_PIXEL
water	10:43	0:0	6	;
call	11:12	11:42	6	call_new
arg	11:21	11:25	7	src1
water	11:21	0:0	8	src1
arg	11:27	11:42	7	24*SIZEOF_PIXEL
water	11:27	0:0	8	24
op	11:29	0:0	8	*
water	11:30	0:0	8	SIZEOF_PIXEL
water	11:43	0:0	6	;
if	12:12	13:22	6	(memcmp (buf0 ,buf1 ,BUF_SIZE ))
cond	12:16	12:43	7	memcmp (buf0 ,buf1 ,BUF_SIZE )
call	12:16	12:43	8	memcmp
arg	12:23	12:27	9	buf0
water	12:23	0:0	10	buf0
arg	12:29	12:33	9	buf1
water	12:29	0:0	10	buf1
arg	12:35	12:43	9	BUF_SIZE
water	12:35	0:0	10	BUF_SIZE
stmts	13:16	13:22	7	
call	13:16	13:21	8	fail
water	13:22	0:0	8	;
call	14:12	14:43	6	bench_new
arg	14:22	14:26	7	src1
water	14:22	0:0	8	src1
arg	14:28	14:43	7	24*SIZEOF_PIXEL
water	14:28	0:0	8	24
op	14:30	0:0	8	*
water	14:31	0:0	8	SIZEOF_PIXEL
water	14:44	0:0	6	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}

func	1:0	40:0	0	static int	reduce_formats_on_filter
params	1:35	0:0	1	
param	1:36	1:59	2	AVFilterContext *	filter
stmnts	0:0	39:14	1	
decl	3:4	3:24	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:24	2	int	j
water	3:12	0:0	2	,
decl	3:4	3:24	2	int	k
water	3:15	0:0	2	,
decl	3:4	3:24	2	int	ret
op	3:21	0:0	2	=
water	3:23	0:0	2	0
call	4:4	5:44	2	REDUCE_FORMATS
arg	4:19	4:22	3	int
water	4:19	0:0	4	int
arg	4:29	4:44	3	AVFilterFormats
water	4:29	0:0	4	AVFilterFormats
arg	4:53	4:60	3	formats
water	4:53	0:0	4	formats
arg	4:70	4:77	3	formats
water	4:70	0:0	4	formats
arg	5:19	5:29	3	nb_formats
water	5:19	0:0	4	nb_formats
arg	5:31	5:44	3	ff_add_format
water	5:31	0:0	4	ff_add_format
water	5:45	0:0	2	;
call	6:4	7:44	2	REDUCE_FORMATS
arg	6:19	6:22	3	int
water	6:19	0:0	4	int
arg	6:29	6:44	3	AVFilterFormats
water	6:29	0:0	4	AVFilterFormats
arg	6:53	6:64	3	samplerates
water	6:53	0:0	4	samplerates
arg	6:70	6:77	3	formats
water	6:70	0:0	4	formats
arg	7:19	7:29	3	nb_formats
water	7:19	0:0	4	nb_formats
arg	7:31	7:44	3	ff_add_format
water	7:31	0:0	4	ff_add_format
water	7:45	0:0	2	;
for	9:4	38:4	2	(i = 0 ;i < filter -> nb_inputs;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:28	3	i < filter -> nb_inputs
water	9:16	0:0	4	i
op	9:18	0:0	4	<
water	9:20	0:0	4	filter
op	9:26	0:0	4	->
water	9:28	0:0	4	nb_inputs
forexpr	9:39	9:40	3	i ++
water	9:39	0:0	4	i
op	9:40	0:0	4	++
stmts	9:44	38:4	3	
water	9:44	0:0	4	{
decl	10:8	10:48	4	AVFilterLink	*inlink
op	10:29	0:0	4	=
water	10:31	0:0	4	filter
op	10:37	0:0	4	->
water	10:39	0:0	4	inputs
op	10:45	0:0	4	[
water	10:46	0:0	4	i
op	10:47	0:0	4	]
decl	11:8	11:20	4	uint64_t	fmt
if	12:8	14:20	4	(! inlink -> out_channel_layouts || inlink -> out_channel_layouts -> nb_channel_layouts != 1)
cond	12:12	13:63	5	! inlink -> out_channel_layouts || inlink -> out_channel_layouts -> nb_channel_layouts != 1
op	12:12	0:0	6	!
water	12:13	0:0	6	inlink
op	12:19	0:0	6	->
water	12:21	0:0	6	out_channel_layouts
op	12:41	0:0	6	||
water	13:12	0:0	6	inlink
op	13:18	0:0	6	->
water	13:20	0:0	6	out_channel_layouts
op	13:39	0:0	6	->
water	13:41	0:0	6	nb_channel_layouts
op	13:60	0:0	6	!=
water	13:63	0:0	6	1
stmts	14:12	14:20	5	
continue	14:12	14:20	6	
water	15:8	0:0	4	fmt
op	15:12	0:0	4	=
water	15:14	0:0	4	inlink
op	15:20	0:0	4	->
water	15:22	0:0	4	out_channel_layouts
op	15:41	0:0	4	->
water	15:43	0:0	4	channel_layouts
op	15:58	0:0	4	[
water	15:59	0:0	4	0
op	15:60	0:0	4	]
water	15:61	0:0	4	;
for	16:8	37:8	4	(j = 0 ;j < filter -> nb_outputs;j ++)
forinit	16:13	16:18	5	j = 0 ;
water	16:13	0:0	6	j
op	16:15	0:0	6	=
water	16:17	0:0	6	0
water	16:18	0:0	6	;
cond	16:20	16:32	5	j < filter -> nb_outputs
water	16:20	0:0	6	j
op	16:22	0:0	6	<
water	16:24	0:0	6	filter
op	16:30	0:0	6	->
water	16:32	0:0	6	nb_outputs
forexpr	16:44	16:45	5	j ++
water	16:44	0:0	6	j
op	16:45	0:0	6	++
stmts	16:49	37:8	5	
water	16:49	0:0	6	{
decl	17:12	17:54	6	AVFilterLink	*outlink
op	17:34	0:0	6	=
water	17:36	0:0	6	filter
op	17:42	0:0	6	->
water	17:44	0:0	6	outputs
op	17:51	0:0	6	[
water	17:52	0:0	6	j
op	17:53	0:0	6	]
decl	18:12	18:40	6	AVFilterChannelLayouts	*fmts
water	19:12	0:0	6	fmts
op	19:17	0:0	6	=
water	19:19	0:0	6	outlink
op	19:26	0:0	6	->
water	19:28	0:0	6	in_channel_layouts
water	19:46	0:0	6	;
if	20:12	21:24	6	(inlink -> type != outlink -> type || fmts -> nb_channel_layouts == 1)
cond	20:16	20:77	7	inlink -> type != outlink -> type || fmts -> nb_channel_layouts == 1
water	20:16	0:0	8	inlink
op	20:22	0:0	8	->
water	20:24	0:0	8	type
op	20:29	0:0	8	!=
water	20:32	0:0	8	outlink
op	20:39	0:0	8	->
water	20:41	0:0	8	type
op	20:46	0:0	8	||
water	20:49	0:0	8	fmts
op	20:53	0:0	8	->
water	20:55	0:0	8	nb_channel_layouts
op	20:74	0:0	8	==
water	20:77	0:0	8	1
stmts	21:16	21:24	7	
continue	21:16	21:24	8	
if	22:12	28:12	6	(fmts -> all_layouts && ( !FF_LAYOUT2COUNT (fmt ) || fmts -> all_counts ))
cond	22:16	23:58	7	fmts -> all_layouts && ( !FF_LAYOUT2COUNT (fmt ) || fmts -> all_counts )
water	22:16	0:0	8	fmts
op	22:20	0:0	8	->
water	22:22	0:0	8	all_layouts
op	22:34	0:0	8	&&
water	23:16	0:0	8	(
op	23:17	0:0	8	!
call	23:18	23:37	8	FF_LAYOUT2COUNT
arg	23:34	23:37	9	fmt
water	23:34	0:0	10	fmt
op	23:39	0:0	8	||
water	23:42	0:0	8	fmts
op	23:46	0:0	8	->
water	23:48	0:0	8	all_counts
water	23:58	0:0	8	)
stmts	23:61	28:12	7	
water	23:61	0:0	8	{
water	25:16	0:0	8	fmts
op	25:20	0:0	8	->
water	25:22	0:0	8	all_layouts
op	25:34	0:0	8	=
water	25:36	0:0	8	fmts
op	25:40	0:0	8	->
water	25:42	0:0	8	all_counts
op	25:54	0:0	8	=
water	25:56	0:0	8	0
water	25:57	0:0	8	;
call	26:16	26:71	8	ff_add_channel_layout
arg	26:38	26:66	9	&outlink->in_channel_layouts
op	26:38	0:0	10	&
water	26:39	0:0	10	outlink
op	26:46	0:0	10	->
water	26:48	0:0	10	in_channel_layouts
arg	26:68	26:71	9	fmt
water	26:68	0:0	10	fmt
water	26:72	0:0	8	;
break	27:16	27:21	8	
water	28:12	0:0	8	}
for	29:12	36:12	6	(k = 0 ;k < outlink -> in_channel_layouts -> nb_channel_layouts;k ++)
forinit	29:17	29:22	7	k = 0 ;
water	29:17	0:0	8	k
op	29:19	0:0	8	=
water	29:21	0:0	8	0
water	29:22	0:0	8	;
cond	29:24	29:57	7	k < outlink -> in_channel_layouts -> nb_channel_layouts
water	29:24	0:0	8	k
op	29:26	0:0	8	<
water	29:28	0:0	8	outlink
op	29:35	0:0	8	->
water	29:37	0:0	8	in_channel_layouts
op	29:55	0:0	8	->
water	29:57	0:0	8	nb_channel_layouts
forexpr	29:77	29:78	7	k ++
water	29:77	0:0	8	k
op	29:78	0:0	8	++
stmts	29:82	36:12	7	
water	29:82	0:0	8	{
if	30:16	35:16	8	(fmts -> channel_layouts [ k ] == fmt)
cond	30:20	30:48	9	fmts -> channel_layouts [ k ] == fmt
water	30:20	0:0	10	fmts
op	30:24	0:0	10	->
water	30:26	0:0	10	channel_layouts
op	30:41	0:0	10	[
water	30:42	0:0	10	k
op	30:43	0:0	10	]
op	30:45	0:0	10	==
water	30:48	0:0	10	fmt
stmts	30:53	35:16	9	
water	30:53	0:0	10	{
water	31:20	0:0	10	fmts
op	31:24	0:0	10	->
water	31:26	0:0	10	channel_layouts
op	31:41	0:0	10	[
water	31:42	0:0	10	0
op	31:43	0:0	10	]
op	31:46	0:0	10	=
water	31:48	0:0	10	fmt
water	31:51	0:0	10	;
water	32:20	0:0	10	fmts
op	32:24	0:0	10	->
water	32:26	0:0	10	nb_channel_layouts
op	32:45	0:0	10	=
water	32:47	0:0	10	1
water	32:48	0:0	10	;
water	33:20	0:0	10	ret
op	33:24	0:0	10	=
water	33:26	0:0	10	1
water	33:27	0:0	10	;
break	34:20	34:25	10	
water	35:16	0:0	10	}
water	36:12	0:0	8	}
water	37:8	0:0	6	}
water	38:4	0:0	4	}
return	39:4	39:14	2	ret
water	39:11	0:0	3	ret

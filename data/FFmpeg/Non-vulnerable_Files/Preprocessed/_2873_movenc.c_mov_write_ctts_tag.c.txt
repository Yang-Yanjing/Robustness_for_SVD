func	1:0	33:0	0	static int	mov_write_ctts_tag
params	1:29	0:0	1	
param	1:30	1:45	2	AVIOContext *	pb
param	1:47	1:62	2	MOVTrack *	track
stmnts	0:0	32:20	1	
decl	3:4	3:25	2	MOVStts	*ctts_entries
decl	4:4	4:24	2	uint32_t	entries
op	4:21	0:0	2	=
water	4:23	0:0	2	0
decl	5:4	5:22	2	uint32_t	atom_size
decl	6:4	6:9	2	int	i
water	7:4	0:0	2	ctts_entries
op	7:17	0:0	2	=
call	7:19	7:76	2	av_malloc_array
arg	7:35	7:53	3	(track->entry+1)
water	7:35	0:0	4	(
water	7:36	0:0	4	track
op	7:41	0:0	4	->
water	7:43	0:0	4	entry
op	7:49	0:0	4	+
water	7:51	0:0	4	1
water	7:52	0:0	4	)
arg	7:55	7:76	3	sizeof(*ctts_entries)
op	7:55	0:0	4	sizeof
water	7:61	0:0	4	(
op	7:62	0:0	4	*
water	7:63	0:0	4	ctts_entries
water	7:75	0:0	4	)
water	7:77	0:0	2	;
if	8:4	9:30	2	(! ctts_entries)
cond	8:8	8:9	3	! ctts_entries
op	8:8	0:0	4	!
water	8:9	0:0	4	ctts_entries
stmts	9:8	9:30	3	
return	9:8	9:30	4	AVERROR(ENOMEM)
call	9:15	9:29	5	AVERROR
arg	9:23	9:29	6	ENOMEM
water	9:23	0:0	7	ENOMEM
water	10:4	0:0	2	ctts_entries
op	10:16	0:0	2	[
water	10:17	0:0	2	0
op	10:18	0:0	2	]
op	10:19	0:0	2	.
water	10:20	0:0	2	count
op	10:26	0:0	2	=
water	10:28	0:0	2	1
water	10:29	0:0	2	;
water	11:4	0:0	2	ctts_entries
op	11:16	0:0	2	[
water	11:17	0:0	2	0
op	11:18	0:0	2	]
op	11:19	0:0	2	.
water	11:20	0:0	2	duration
op	11:29	0:0	2	=
water	11:31	0:0	2	track
op	11:36	0:0	2	->
water	11:38	0:0	2	cluster
op	11:45	0:0	2	[
water	11:46	0:0	2	0
op	11:47	0:0	2	]
op	11:48	0:0	2	.
water	11:49	0:0	2	cts
water	11:52	0:0	2	;
for	12:4	20:4	2	(i = 1 ;i < track -> entry;i ++)
forinit	12:9	12:14	3	i = 1 ;
water	12:9	0:0	4	i
op	12:11	0:0	4	=
water	12:13	0:0	4	1
water	12:14	0:0	4	;
cond	12:16	12:27	3	i < track -> entry
water	12:16	0:0	4	i
op	12:18	0:0	4	<
water	12:20	0:0	4	track
op	12:25	0:0	4	->
water	12:27	0:0	4	entry
forexpr	12:34	12:35	3	i ++
water	12:34	0:0	4	i
op	12:35	0:0	4	++
stmts	12:39	20:4	3	
water	12:39	0:0	4	{
if	13:8	15:8	4	(track -> cluster [ i ] . cts == ctts_entries [ entries ] . duration)
cond	13:12	13:59	5	track -> cluster [ i ] . cts == ctts_entries [ entries ] . duration
water	13:12	0:0	6	track
op	13:17	0:0	6	->
water	13:19	0:0	6	cluster
op	13:26	0:0	6	[
water	13:27	0:0	6	i
op	13:28	0:0	6	]
op	13:29	0:0	6	.
water	13:30	0:0	6	cts
op	13:34	0:0	6	==
water	13:37	0:0	6	ctts_entries
op	13:49	0:0	6	[
water	13:50	0:0	6	entries
op	13:57	0:0	6	]
op	13:58	0:0	6	.
water	13:59	0:0	6	duration
stmts	13:69	15:8	5	
water	13:69	0:0	6	{
water	14:12	0:0	6	ctts_entries
op	14:24	0:0	6	[
water	14:25	0:0	6	entries
op	14:32	0:0	6	]
op	14:33	0:0	6	.
water	14:34	0:0	6	count
op	14:39	0:0	6	++
water	14:41	0:0	6	;
water	15:8	0:0	6	}
else	15:10	19:8	4
stmts	15:15	19:8	5	
water	15:15	0:0	6	{
water	16:12	0:0	6	entries
op	16:19	0:0	6	++
water	16:21	0:0	6	;
water	17:12	0:0	6	ctts_entries
op	17:24	0:0	6	[
water	17:25	0:0	6	entries
op	17:32	0:0	6	]
op	17:33	0:0	6	.
water	17:34	0:0	6	duration
op	17:43	0:0	6	=
water	17:45	0:0	6	track
op	17:50	0:0	6	->
water	17:52	0:0	6	cluster
op	17:59	0:0	6	[
water	17:60	0:0	6	i
op	17:61	0:0	6	]
op	17:62	0:0	6	.
water	17:63	0:0	6	cts
water	17:66	0:0	6	;
water	18:12	0:0	6	ctts_entries
op	18:24	0:0	6	[
water	18:25	0:0	6	entries
op	18:32	0:0	6	]
op	18:33	0:0	6	.
water	18:34	0:0	6	count
op	18:40	0:0	6	=
water	18:42	0:0	6	1
water	18:43	0:0	6	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}
water	21:4	0:0	2	entries
op	21:11	0:0	2	++
water	21:13	0:0	2	;
water	22:4	0:0	2	atom_size
op	22:14	0:0	2	=
water	22:16	0:0	2	16
op	22:19	0:0	2	+
water	22:21	0:0	2	(
water	22:22	0:0	2	entries
op	22:30	0:0	2	*
water	22:32	0:0	2	8
water	22:33	0:0	2	)
water	22:34	0:0	2	;
call	23:4	23:27	2	avio_wb32
arg	23:14	23:16	3	pb
water	23:14	0:0	4	pb
arg	23:18	23:27	3	atom_size
water	23:18	0:0	4	atom_size
water	23:28	0:0	2	;
call	24:4	24:27	2	ffio_wfourcc
arg	24:17	24:19	3	pb
water	24:17	0:0	4	pb
arg	24:21	24:27	3	"ctts"
water	24:21	0:0	4	"ctts"
water	24:28	0:0	2	;
call	25:4	25:19	2	avio_wb32
arg	25:14	25:16	3	pb
water	25:14	0:0	4	pb
arg	25:18	25:19	3	0
water	25:18	0:0	4	0
water	25:20	0:0	2	;
call	26:4	26:25	2	avio_wb32
arg	26:14	26:16	3	pb
water	26:14	0:0	4	pb
arg	26:18	26:25	3	entries
water	26:18	0:0	4	entries
water	26:26	0:0	2	;
for	27:4	30:4	2	(i = 0 ;i < entries;i ++)
forinit	27:9	27:14	3	i = 0 ;
water	27:9	0:0	4	i
op	27:11	0:0	4	=
water	27:13	0:0	4	0
water	27:14	0:0	4	;
cond	27:16	27:20	3	i < entries
water	27:16	0:0	4	i
op	27:18	0:0	4	<
water	27:20	0:0	4	entries
forexpr	27:29	27:30	3	i ++
water	27:29	0:0	4	i
op	27:30	0:0	4	++
stmts	27:34	30:4	3	
water	27:34	0:0	4	{
call	28:8	28:43	4	avio_wb32
arg	28:18	28:20	5	pb
water	28:18	0:0	6	pb
arg	28:22	28:43	5	ctts_entries[i].count
water	28:22	0:0	6	ctts_entries
op	28:34	0:0	6	[
water	28:35	0:0	6	i
op	28:36	0:0	6	]
op	28:37	0:0	6	.
water	28:38	0:0	6	count
water	28:44	0:0	4	;
call	29:8	29:46	4	avio_wb32
arg	29:18	29:20	5	pb
water	29:18	0:0	6	pb
arg	29:22	29:46	5	ctts_entries[i].duration
water	29:22	0:0	6	ctts_entries
op	29:34	0:0	6	[
water	29:35	0:0	6	i
op	29:36	0:0	6	]
op	29:37	0:0	6	.
water	29:38	0:0	6	duration
water	29:47	0:0	4	;
water	30:4	0:0	4	}
call	31:4	31:24	2	av_free
arg	31:12	31:24	3	ctts_entries
water	31:12	0:0	4	ctts_entries
water	31:25	0:0	2	;
return	32:4	32:20	2	atom_size
water	32:11	0:0	3	atom_size

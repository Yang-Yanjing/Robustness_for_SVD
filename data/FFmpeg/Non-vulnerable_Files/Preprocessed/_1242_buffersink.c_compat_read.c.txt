func	1:0	44:0	0	static int	compat_read
params	1:22	0:0	1	
param	1:23	1:43	2	AVFilterContext *	ctx
param	2:23	2:47	2	AVFilterBufferRef * *	pbuf
param	2:49	2:63	2	int	nb_samples
param	2:65	2:74	2	int	flags
stmnts	0:0	43:14	1	
decl	4:4	4:26	2	AVFilterBufferRef	*buf
decl	5:4	5:18	2	AVFrame	*frame
decl	6:4	6:11	2	int	ret
if	7:4	8:44	2	(! pbuf)
cond	7:8	7:9	3	! pbuf
op	7:8	0:0	4	!
water	7:9	0:0	4	pbuf
stmts	8:8	8:44	3	
return	8:8	8:44	4	ff_poll_frame(ctx->inputs[0])
call	8:15	8:43	5	ff_poll_frame
arg	8:29	8:43	6	ctx->inputs[0]
water	8:29	0:0	7	ctx
op	8:32	0:0	7	->
water	8:34	0:0	7	inputs
op	8:40	0:0	7	[
water	8:41	0:0	7	0
op	8:42	0:0	7	]
water	9:4	0:0	2	frame
op	9:10	0:0	2	=
call	9:12	9:27	2	av_frame_alloc
water	9:28	0:0	2	;
if	10:4	11:30	2	(! frame)
cond	10:8	10:9	3	! frame
op	10:8	0:0	4	!
water	10:9	0:0	4	frame
stmts	11:8	11:30	3	
return	11:8	11:30	4	AVERROR(ENOMEM)
call	11:15	11:29	5	AVERROR
arg	11:23	11:29	6	ENOMEM
water	11:23	0:0	7	ENOMEM
if	12:4	13:62	2	(! nb_samples)
cond	12:8	12:9	3	! nb_samples
op	12:8	0:0	4	!
water	12:9	0:0	4	nb_samples
stmts	13:8	13:62	3	
water	13:8	0:0	4	ret
op	13:12	0:0	4	=
call	13:14	13:61	4	av_buffersink_get_frame_flags
arg	13:44	13:47	5	ctx
water	13:44	0:0	6	ctx
arg	13:49	13:54	5	frame
water	13:49	0:0	6	frame
arg	13:56	13:61	5	flags
water	13:56	0:0	6	flags
water	13:62	0:0	4	;
else	14:4	15:63	2
stmts	15:8	15:63	3	
water	15:8	0:0	4	ret
op	15:12	0:0	4	=
call	15:14	15:62	4	av_buffersink_get_samples
arg	15:40	15:43	5	ctx
water	15:40	0:0	6	ctx
arg	15:45	15:50	5	frame
water	15:45	0:0	6	frame
arg	15:52	15:62	5	nb_samples
water	15:52	0:0	6	nb_samples
water	15:63	0:0	4	;
if	16:4	17:17	2	(ret < 0)
cond	16:8	16:14	3	ret < 0
water	16:8	0:0	4	ret
op	16:12	0:0	4	<
water	16:14	0:0	4	0
stmts	17:8	17:17	3	
goto	17:8	17:17	4	fail
water	17:13	0:0	5	fail
water	18:4	0:0	2	AV_NOWARN_DEPRECATED
water	18:24	0:0	2	(
water	19:4	0:0	2	if
water	19:7	0:0	2	(
water	19:8	0:0	2	ctx
op	19:11	0:0	2	->
water	19:13	0:0	2	inputs
op	19:19	0:0	2	[
water	19:20	0:0	2	0
op	19:21	0:0	2	]
op	19:22	0:0	2	->
water	19:24	0:0	2	type
op	19:29	0:0	2	==
water	19:32	0:0	2	AVMEDIA_TYPE_VIDEO
water	19:50	0:0	2	)
water	19:52	0:0	2	{
water	20:8	0:0	2	buf
op	20:12	0:0	2	=
call	20:14	23:69	2	avfilter_get_video_buffer_ref_from_arrays
arg	20:56	20:67	3	frame->data
water	20:56	0:0	4	frame
op	20:61	0:0	4	->
water	20:63	0:0	4	data
arg	20:69	20:84	3	frame->linesize
water	20:69	0:0	4	frame
op	20:74	0:0	4	->
water	20:76	0:0	4	linesize
arg	21:56	21:68	3	AV_PERM_READ
water	21:56	0:0	4	AV_PERM_READ
arg	22:56	22:68	3	frame->width
water	22:56	0:0	4	frame
op	22:61	0:0	4	->
water	22:63	0:0	4	width
arg	22:70	22:83	3	frame->height
water	22:70	0:0	4	frame
op	22:75	0:0	4	->
water	22:77	0:0	4	height
arg	23:56	23:69	3	frame->format
water	23:56	0:0	4	frame
op	23:61	0:0	4	->
water	23:63	0:0	4	format
water	23:70	0:0	2	;
water	24:4	0:0	2	}
water	24:6	0:0	2	else
water	24:11	0:0	2	{
water	25:8	0:0	2	buf
op	25:12	0:0	2	=
call	25:14	29:77	2	avfilter_get_audio_buffer_ref_from_arrays
arg	25:56	25:76	3	frame->extended_data
water	25:56	0:0	4	frame
op	25:61	0:0	4	->
water	25:63	0:0	4	extended_data
arg	26:56	26:74	3	frame->linesize[0]
water	26:56	0:0	4	frame
op	26:61	0:0	4	->
water	26:63	0:0	4	linesize
op	26:71	0:0	4	[
water	26:72	0:0	4	0
op	26:73	0:0	4	]
arg	26:76	26:88	3	AV_PERM_READ
water	26:76	0:0	4	AV_PERM_READ
arg	27:56	27:73	3	frame->nb_samples
water	27:56	0:0	4	frame
op	27:61	0:0	4	->
water	27:63	0:0	4	nb_samples
arg	28:56	28:69	3	frame->format
water	28:56	0:0	4	frame
op	28:61	0:0	4	->
water	28:63	0:0	4	format
arg	29:56	29:77	3	frame->channel_layout
water	29:56	0:0	4	frame
op	29:61	0:0	4	->
water	29:63	0:0	4	channel_layout
water	29:78	0:0	2	;
water	30:4	0:0	2	}
water	31:4	0:0	2	if
water	31:7	0:0	2	(
op	31:8	0:0	2	!
water	31:9	0:0	2	buf
water	31:12	0:0	2	)
water	31:14	0:0	2	{
water	32:8	0:0	2	ret
op	32:12	0:0	2	=
call	32:14	32:28	2	AVERROR
arg	32:22	32:28	3	ENOMEM
water	32:22	0:0	4	ENOMEM
water	32:29	0:0	2	;
water	33:8	0:0	2	goto
water	33:13	0:0	2	fail
water	33:17	0:0	2	;
water	34:4	0:0	2	}
call	35:4	35:40	2	avfilter_copy_frame_props
arg	35:30	35:33	3	buf
water	35:30	0:0	4	buf
arg	35:35	35:40	3	frame
water	35:35	0:0	4	frame
water	35:41	0:0	2	;
water	36:4	0:0	2	)
water	37:4	0:0	2	buf
op	37:7	0:0	2	->
water	37:9	0:0	2	buf
op	37:12	0:0	2	->
water	37:14	0:0	2	priv
op	37:19	0:0	2	=
water	37:21	0:0	2	frame
water	37:26	0:0	2	;
water	38:4	0:0	2	buf
op	38:7	0:0	2	->
water	38:9	0:0	2	buf
op	38:12	0:0	2	->
water	38:14	0:0	2	free
op	38:19	0:0	2	=
water	38:21	0:0	2	compat_free_buffer
water	38:39	0:0	2	;
op	39:4	0:0	2	*
water	39:5	0:0	2	pbuf
op	39:10	0:0	2	=
water	39:12	0:0	2	buf
water	39:15	0:0	2	;
return	40:4	40:12	2	0
water	40:11	0:0	3	0
label	41:0	41:4	2	fail :
call	42:4	42:24	2	av_frame_free
arg	42:18	42:24	3	&frame
op	42:18	0:0	4	&
water	42:19	0:0	4	frame
water	42:25	0:0	2	;
return	43:4	43:14	2	ret
water	43:11	0:0	3	ret

func	2:0	50:4	0	int64_t	av_rescale_rnd
params	2:22	0:0	1	
param	2:23	2:32	2	int64_t	a
param	2:34	2:43	2	int64_t	b
param	2:45	2:54	2	int64_t	c
param	2:56	2:75	2	enum AVRounding	rnd
stmnts	0:0	49:50	1	
decl	3:4	3:15	2	int64_t	r
op	3:13	0:0	2	=
water	3:14	0:0	2	0
call	4:4	4:16	2	assert
arg	4:11	4:16	3	c>0
water	4:11	0:0	4	c
op	4:13	0:0	4	>
water	4:15	0:0	4	0
water	4:17	0:0	2	;
call	5:4	5:16	2	assert
arg	5:11	5:16	3	b>=0
water	5:11	0:0	4	b
op	5:13	0:0	4	>=
water	5:15	0:0	4	0
water	5:17	0:0	2	;
call	6:4	6:38	2	assert
arg	6:11	6:38	3	rnd>=0&&rnd<=5&&rnd!=4
water	6:11	0:0	4	rnd
op	6:15	0:0	4	>=
water	6:17	0:0	4	0
op	6:19	0:0	4	&&
water	6:22	0:0	4	rnd
op	6:25	0:0	4	<=
water	6:27	0:0	4	5
op	6:29	0:0	4	&&
water	6:32	0:0	4	rnd
op	6:35	0:0	4	!=
water	6:37	0:0	4	4
water	6:39	0:0	2	;
if	8:4	8:82	2	(a < 0 && a != INT64_MIN)
cond	8:7	8:19	3	a < 0 && a != INT64_MIN
water	8:7	0:0	4	a
op	8:8	0:0	4	<
water	8:9	0:0	4	0
op	8:11	0:0	4	&&
water	8:14	0:0	4	a
op	8:16	0:0	4	!=
water	8:19	0:0	4	INT64_MIN
stmts	8:30	8:82	3	
return	8:30	8:82	4	-av_rescale_rnd(-a,b,c,rnd^((rnd>>1)&1))
op	8:37	0:0	5	-
call	8:38	8:81	5	av_rescale_rnd
arg	8:53	8:55	6	-a
op	8:53	0:0	7	-
water	8:54	0:0	7	a
arg	8:57	8:58	6	b
water	8:57	0:0	7	b
arg	8:60	8:61	6	c
water	8:60	0:0	7	c
arg	8:63	8:81	6	rnd^((rnd>>1)&1)
water	8:63	0:0	7	rnd
op	8:67	0:0	7	^
water	8:69	0:0	7	(
water	8:70	0:0	7	(
water	8:71	0:0	7	rnd
op	8:74	0:0	7	>>
water	8:76	0:0	7	1
water	8:77	0:0	7	)
op	8:78	0:0	7	&
water	8:79	0:0	7	1
water	8:80	0:0	7	)
if	10:4	10:37	2	(rnd == AV_ROUND_NEAR_INF)
cond	10:7	10:12	3	rnd == AV_ROUND_NEAR_INF
water	10:7	0:0	4	rnd
op	10:10	0:0	4	==
water	10:12	0:0	4	AV_ROUND_NEAR_INF
stmts	10:31	10:37	3	
water	10:31	0:0	4	r
op	10:32	0:0	4	=
water	10:34	0:0	4	c
op	10:35	0:0	4	/
water	10:36	0:0	4	2
water	10:37	0:0	4	;
else	11:4	11:37	2
stmts	11:9	11:37	3	
if	11:9	11:37	4	(rnd & 1)
cond	11:12	11:16	5	rnd & 1
water	11:12	0:0	6	rnd
op	11:15	0:0	6	&
water	11:16	0:0	6	1
stmts	11:31	11:37	5	
water	11:31	0:0	6	r
op	11:32	0:0	6	=
water	11:34	0:0	6	c
op	11:35	0:0	6	-
water	11:36	0:0	6	1
water	11:37	0:0	6	;
if	13:4	18:4	2	(b <= INT_MAX && c <= INT_MAX)
cond	13:7	13:24	3	b <= INT_MAX && c <= INT_MAX
water	13:7	0:0	4	b
op	13:8	0:0	4	<=
water	13:10	0:0	4	INT_MAX
op	13:18	0:0	4	&&
water	13:21	0:0	4	c
op	13:22	0:0	4	<=
water	13:24	0:0	4	INT_MAX
stmts	13:32	18:4	3	
water	13:32	0:0	4	{
if	14:8	15:32	4	(a <= INT_MAX)
cond	14:11	14:14	5	a <= INT_MAX
water	14:11	0:0	6	a
op	14:12	0:0	6	<=
water	14:14	0:0	6	INT_MAX
stmts	15:12	15:32	5	
return	15:12	15:32	6	(a*b+r)/c
water	15:19	0:0	7	(
water	15:20	0:0	7	a
op	15:22	0:0	7	*
water	15:24	0:0	7	b
op	15:26	0:0	7	+
water	15:28	0:0	7	r
water	15:29	0:0	7	)
op	15:30	0:0	7	/
water	15:31	0:0	7	c
else	16:8	17:40	4
stmts	17:12	17:40	5	
return	17:12	17:40	6	a/c*b+(a%c*b+r)/c
water	17:19	0:0	7	a
op	17:20	0:0	7	/
water	17:21	0:0	7	c
op	17:22	0:0	7	*
water	17:23	0:0	7	b
op	17:25	0:0	7	+
water	17:27	0:0	7	(
water	17:28	0:0	7	a
op	17:29	0:0	7	%
water	17:30	0:0	7	c
op	17:31	0:0	7	*
water	17:32	0:0	7	b
op	17:34	0:0	7	+
water	17:36	0:0	7	r
water	17:37	0:0	7	)
op	17:38	0:0	7	/
water	17:39	0:0	7	c
water	18:4	0:0	4	}
else	18:5	43:4	2
stmts	18:9	43:4	3	
water	18:9	0:0	4	{
decl	20:8	20:33	4	uint64_t	a0
op	20:19	0:0	4	=
water	20:21	0:0	4	a
op	20:22	0:0	4	&
water	20:23	0:0	4	0
water	20:24	0:0	4	xFFFFFFFF
decl	21:8	21:26	4	uint64_t	a1
op	21:19	0:0	4	=
water	21:21	0:0	4	a
op	21:22	0:0	4	>>
water	21:24	0:0	4	32
decl	22:8	22:33	4	uint64_t	b0
op	22:19	0:0	4	=
water	22:21	0:0	4	b
op	22:22	0:0	4	&
water	22:23	0:0	4	0
water	22:24	0:0	4	xFFFFFFFF
decl	23:8	23:26	4	uint64_t	b1
op	23:19	0:0	4	=
water	23:21	0:0	4	b
op	23:22	0:0	4	>>
water	23:24	0:0	4	32
decl	24:8	24:34	4	uint64_t	t1
op	24:19	0:0	4	=
water	24:21	0:0	4	a0
op	24:23	0:0	4	*
water	24:24	0:0	4	b1
op	24:27	0:0	4	+
water	24:29	0:0	4	a1
op	24:31	0:0	4	*
water	24:32	0:0	4	b0
decl	25:8	25:28	4	uint64_t	t1a
op	25:20	0:0	4	=
water	25:22	0:0	4	t1
op	25:24	0:0	4	<<
water	25:26	0:0	4	32
decl	26:8	26:13	4	int	i
water	28:8	0:0	4	a0
op	28:11	0:0	4	=
water	28:13	0:0	4	a0
op	28:15	0:0	4	*
water	28:16	0:0	4	b0
op	28:19	0:0	4	+
water	28:21	0:0	4	t1a
water	28:24	0:0	4	;
water	29:8	0:0	4	a1
op	29:11	0:0	4	=
water	29:13	0:0	4	a1
op	29:15	0:0	4	*
water	29:16	0:0	4	b1
op	29:19	0:0	4	+
water	29:21	0:0	4	(
water	29:22	0:0	4	t1
op	29:24	0:0	4	>>
water	29:26	0:0	4	32
water	29:28	0:0	4	)
op	29:30	0:0	4	+
water	29:32	0:0	4	(
water	29:33	0:0	4	a0
op	29:35	0:0	4	<
water	29:36	0:0	4	t1a
water	29:39	0:0	4	)
water	29:40	0:0	4	;
water	30:8	0:0	4	a0
op	30:11	0:0	4	+=
water	30:14	0:0	4	r
water	30:15	0:0	4	;
water	31:8	0:0	4	a1
op	31:11	0:0	4	+=
water	31:14	0:0	4	a0
op	31:16	0:0	4	<
water	31:17	0:0	4	r
water	31:18	0:0	4	;
for	33:8	41:8	4	(i = 63 ;i >= 0;i --)
forinit	33:12	33:16	5	i = 63 ;
water	33:12	0:0	6	i
op	33:13	0:0	6	=
water	33:14	0:0	6	63
water	33:16	0:0	6	;
cond	33:18	33:21	5	i >= 0
water	33:18	0:0	6	i
op	33:19	0:0	6	>=
water	33:21	0:0	6	0
forexpr	33:24	33:25	5	i --
water	33:24	0:0	6	i
op	33:25	0:0	6	--
stmts	33:28	41:8	5	
water	33:28	0:0	6	{
water	35:12	0:0	6	a1
op	35:14	0:0	6	+=
water	35:17	0:0	6	a1
op	35:20	0:0	6	+
water	35:22	0:0	6	(
water	35:23	0:0	6	(
water	35:24	0:0	6	a0
op	35:26	0:0	6	>>
water	35:28	0:0	6	i
water	35:29	0:0	6	)
op	35:30	0:0	6	&
water	35:31	0:0	6	1
water	35:32	0:0	6	)
water	35:33	0:0	6	;
water	36:12	0:0	6	t1
op	36:14	0:0	6	+=
water	36:16	0:0	6	t1
water	36:18	0:0	6	;
if	37:12	40:12	6	(c <= a1)
cond	37:15	37:20	7	c <= a1
water	37:15	0:0	8	c
op	37:17	0:0	8	<=
water	37:20	0:0	8	a1
stmts	37:23	40:12	7	
water	37:23	0:0	8	{
water	38:16	0:0	8	a1
op	38:19	0:0	8	-=
water	38:22	0:0	8	c
water	38:23	0:0	8	;
water	39:16	0:0	8	t1
op	39:18	0:0	8	++
water	39:20	0:0	8	;
water	40:12	0:0	8	}
water	41:8	0:0	6	}
return	42:8	42:17	4	t1
water	42:15	0:0	5	t1
water	43:4	0:0	4	}
decl	45:8	45:20	2	AVInteger	ai
water	46:8	0:0	2	ai
op	46:10	0:0	2	=
call	46:12	46:45	2	av_mul_i
arg	46:21	46:32	3	av_int2i(a)
call	46:21	46:31	4	av_int2i
arg	46:30	46:31	5	a
water	46:30	0:0	6	a
arg	46:34	46:45	3	av_int2i(b)
call	46:34	46:44	4	av_int2i
arg	46:43	46:44	5	b
water	46:43	0:0	6	b
water	46:46	0:0	2	;
water	47:8	0:0	2	ai
op	47:10	0:0	2	=
call	47:12	47:36	2	av_add_i
arg	47:21	47:23	3	ai
water	47:21	0:0	4	ai
arg	47:25	47:36	3	av_int2i(r)
call	47:25	47:35	4	av_int2i
arg	47:34	47:35	5	r
water	47:34	0:0	6	r
water	47:37	0:0	2	;
return	49:8	49:50	2	av_i2int(av_div_i(ai,av_int2i(c)))
call	49:15	49:49	3	av_i2int
arg	49:24	49:49	4	av_div_i(ai,av_int2i(c))
call	49:24	49:48	5	av_div_i
arg	49:33	49:35	6	ai
water	49:33	0:0	7	ai
arg	49:37	49:48	6	av_int2i(c)
call	49:37	49:47	7	av_int2i
arg	49:46	49:47	8	c
water	49:46	0:0	9	c

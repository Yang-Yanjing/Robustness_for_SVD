func	2:0	184:0	0	static int	cine_read_header
params	2:27	0:0	1	
param	2:28	2:50	2	AVFormatContext *	avctx
stmnts	0:0	183:12	1	
decl	4:4	4:31	2	AVIOContext	*pb
op	4:20	0:0	2	=
water	4:22	0:0	2	avctx
op	4:27	0:0	2	->
water	4:29	0:0	2	pb
decl	5:4	5:16	2	AVStream	*st
decl	6:4	6:105	2	unsigned int	version
water	6:24	0:0	2	,
decl	6:4	6:105	2	unsigned int	compression
water	6:37	0:0	2	,
decl	6:4	6:105	2	unsigned int	offImageHeader
water	6:53	0:0	2	,
decl	6:4	6:105	2	unsigned int	offSetup
water	6:63	0:0	2	,
decl	6:4	6:105	2	unsigned int	offImageOffsets
water	6:80	0:0	2	,
decl	6:4	6:105	2	unsigned int	biBitCount
water	6:92	0:0	2	,
decl	6:4	6:105	2	unsigned int	length
water	6:100	0:0	2	,
decl	6:4	6:105	2	unsigned int	CFA
decl	7:4	7:13	2	int	vflip
decl	8:4	8:21	2	char	*description
decl	9:4	9:14	2	uint64_t	i
water	11:4	0:0	2	st
op	11:7	0:0	2	=
call	11:9	11:40	2	avformat_new_stream
arg	11:29	11:34	3	avctx
water	11:29	0:0	4	avctx
arg	11:36	11:40	3	NULL
water	11:36	0:0	4	NULL
water	11:41	0:0	2	;
if	12:4	13:30	2	(! st)
cond	12:8	12:9	3	! st
op	12:8	0:0	4	!
water	12:9	0:0	4	st
stmts	13:8	13:30	3	
return	13:8	13:30	4	AVERROR(ENOMEM)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	ENOMEM
water	13:23	0:0	7	ENOMEM
water	14:4	0:0	2	st
op	14:6	0:0	2	->
water	14:8	0:0	2	codecpar
op	14:16	0:0	2	->
water	14:18	0:0	2	codec_type
op	14:29	0:0	2	=
water	14:31	0:0	2	AVMEDIA_TYPE_VIDEO
water	14:49	0:0	2	;
water	15:4	0:0	2	st
op	15:6	0:0	2	->
water	15:8	0:0	2	codecpar
op	15:16	0:0	2	->
water	15:18	0:0	2	codec_id
op	15:29	0:0	2	=
water	15:31	0:0	2	AV_CODEC_ID_RAWVIDEO
water	15:51	0:0	2	;
water	16:4	0:0	2	st
op	16:6	0:0	2	->
water	16:8	0:0	2	codecpar
op	16:16	0:0	2	->
water	16:18	0:0	2	codec_tag
op	16:29	0:0	2	=
water	16:31	0:0	2	0
water	16:32	0:0	2	;
call	19:4	19:19	2	avio_skip
arg	19:14	19:16	3	pb
water	19:14	0:0	4	pb
arg	19:18	19:19	3	4
water	19:18	0:0	4	4
water	19:20	0:0	2	;
water	21:4	0:0	2	compression
op	21:16	0:0	2	=
call	21:18	21:30	2	avio_rl16
arg	21:28	21:30	3	pb
water	21:28	0:0	4	pb
water	21:31	0:0	2	;
water	22:4	0:0	2	version
op	22:16	0:0	2	=
call	22:18	22:30	2	avio_rl16
arg	22:28	22:30	3	pb
water	22:28	0:0	4	pb
water	22:31	0:0	2	;
if	23:4	26:4	2	(version != 1)
cond	23:8	23:19	3	version != 1
water	23:8	0:0	4	version
op	23:16	0:0	4	!=
water	23:19	0:0	4	1
stmts	23:22	26:4	3	
water	23:22	0:0	4	{
call	24:8	24:66	4	avpriv_request_sample
arg	24:30	24:35	5	avctx
water	24:30	0:0	6	avctx
arg	24:37	24:57	5	"unknown version %i"
water	24:37	0:0	6	"unknown version %i"
arg	24:59	24:66	5	version
water	24:59	0:0	6	version
water	24:67	0:0	4	;
return	25:8	25:34	4	AVERROR_INVALIDDATA
water	25:15	0:0	5	AVERROR_INVALIDDATA
water	26:4	0:0	4	}
call	28:4	28:20	2	avio_skip
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:20	3	12
water	28:18	0:0	4	12
water	28:21	0:0	2	;
water	30:4	0:0	2	st
op	30:6	0:0	2	->
water	30:8	0:0	2	duration
op	30:20	0:0	2	=
call	30:22	30:34	2	avio_rl32
arg	30:32	30:34	3	pb
water	30:32	0:0	4	pb
water	30:35	0:0	2	;
water	31:4	0:0	2	offImageHeader
op	31:20	0:0	2	=
call	31:22	31:34	2	avio_rl32
arg	31:32	31:34	3	pb
water	31:32	0:0	4	pb
water	31:35	0:0	2	;
water	32:4	0:0	2	offSetup
op	32:20	0:0	2	=
call	32:22	32:34	2	avio_rl32
arg	32:32	32:34	3	pb
water	32:32	0:0	4	pb
water	32:35	0:0	2	;
water	33:4	0:0	2	offImageOffsets
op	33:20	0:0	2	=
call	33:22	33:34	2	avio_rl32
arg	33:32	33:34	3	pb
water	33:32	0:0	4	pb
water	33:35	0:0	2	;
call	35:4	35:19	2	avio_skip
arg	35:14	35:16	3	pb
water	35:14	0:0	4	pb
arg	35:18	35:19	3	8
water	35:18	0:0	4	8
water	35:20	0:0	2	;
call	38:4	38:42	2	avio_seek
arg	38:14	38:16	3	pb
water	38:14	0:0	4	pb
arg	38:18	38:32	3	offImageHeader
water	38:18	0:0	4	offImageHeader
arg	38:34	38:42	3	SEEK_SET
water	38:34	0:0	4	SEEK_SET
water	38:43	0:0	2	;
call	39:4	39:19	2	avio_skip
arg	39:14	39:16	3	pb
water	39:14	0:0	4	pb
arg	39:18	39:19	3	4
water	39:18	0:0	4	4
water	39:20	0:0	2	;
water	40:4	0:0	2	st
op	40:6	0:0	2	->
water	40:8	0:0	2	codecpar
op	40:16	0:0	2	->
water	40:18	0:0	2	width
op	40:29	0:0	2	=
call	40:31	40:43	2	avio_rl32
arg	40:41	40:43	3	pb
water	40:41	0:0	4	pb
water	40:44	0:0	2	;
water	41:4	0:0	2	st
op	41:6	0:0	2	->
water	41:8	0:0	2	codecpar
op	41:16	0:0	2	->
water	41:18	0:0	2	height
op	41:29	0:0	2	=
call	41:31	41:43	2	avio_rl32
arg	41:41	41:43	3	pb
water	41:41	0:0	4	pb
water	41:44	0:0	2	;
if	43:4	44:34	2	(avio_rl16 (pb ) != 1)
cond	43:8	43:25	3	avio_rl16 (pb ) != 1
call	43:8	43:20	4	avio_rl16
arg	43:18	43:20	5	pb
water	43:18	0:0	6	pb
op	43:22	0:0	4	!=
water	43:25	0:0	4	1
stmts	44:8	44:34	3	
return	44:8	44:34	4	AVERROR_INVALIDDATA
water	44:15	0:0	5	AVERROR_INVALIDDATA
water	46:4	0:0	2	biBitCount
op	46:15	0:0	2	=
call	46:17	46:29	2	avio_rl16
arg	46:27	46:29	3	pb
water	46:27	0:0	4	pb
water	46:30	0:0	2	;
if	47:4	50:4	2	(biBitCount != 8 && biBitCount != 16 && biBitCount != 24 && biBitCount != 48)
cond	47:8	47:81	3	biBitCount != 8 && biBitCount != 16 && biBitCount != 24 && biBitCount != 48
water	47:8	0:0	4	biBitCount
op	47:19	0:0	4	!=
water	47:22	0:0	4	8
op	47:24	0:0	4	&&
water	47:27	0:0	4	biBitCount
op	47:38	0:0	4	!=
water	47:41	0:0	4	16
op	47:44	0:0	4	&&
water	47:47	0:0	4	biBitCount
op	47:58	0:0	4	!=
water	47:61	0:0	4	24
op	47:64	0:0	4	&&
water	47:67	0:0	4	biBitCount
op	47:78	0:0	4	!=
water	47:81	0:0	4	48
stmts	47:85	50:4	3	
water	47:85	0:0	4	{
call	48:8	48:76	4	avpriv_request_sample
arg	48:30	48:35	5	avctx
water	48:30	0:0	6	avctx
arg	48:37	48:64	5	"unsupported biBitCount %i"
water	48:37	0:0	6	"unsupported biBitCount %i"
arg	48:66	48:76	5	biBitCount
water	48:66	0:0	6	biBitCount
water	48:77	0:0	4	;
return	49:8	49:34	4	AVERROR_INVALIDDATA
water	49:15	0:0	5	AVERROR_INVALIDDATA
water	50:4	0:0	4	}
switch	52:4	63:4	2	(avio_rl32 (pb ))
cond	52:12	52:24	3	avio_rl32 (pb )
call	52:12	52:24	4	avio_rl32
arg	52:22	52:24	5	pb
water	52:22	0:0	6	pb
stmts	52:27	63:4	3	
water	52:27	0:0	4	{
label	53:4	53:16	4	case BMP_RGB :
water	54:8	0:0	4	vflip
op	54:14	0:0	4	=
water	54:16	0:0	4	0
water	54:17	0:0	4	;
break	55:8	55:13	4	
label	56:4	56:14	4	case 0 x100 :
water	57:8	0:0	4	st
op	57:10	0:0	4	->
water	57:12	0:0	4	codecpar
op	57:20	0:0	4	->
water	57:22	0:0	4	codec_tag
op	57:32	0:0	4	=
call	57:34	57:56	4	MKTAG
arg	57:40	57:43	5	'B'
water	57:40	0:0	6	'B'
arg	57:45	57:48	5	'I'
water	57:45	0:0	6	'I'
arg	57:50	57:53	5	'T'
water	57:50	0:0	6	'T'
arg	57:55	57:56	5	0
water	57:55	0:0	6	0
water	57:57	0:0	4	;
water	58:8	0:0	4	vflip
op	58:14	0:0	4	=
water	58:16	0:0	4	1
water	58:17	0:0	4	;
break	59:8	59:13	4	
label	60:4	60:11	4	default :
call	61:8	61:65	4	avpriv_request_sample
arg	61:30	61:35	5	avctx
water	61:30	0:0	6	avctx
arg	61:37	61:65	5	"unknown bitmap compression"
water	61:37	0:0	6	"unknown bitmap compression"
water	61:66	0:0	4	;
return	62:8	62:34	4	AVERROR_INVALIDDATA
water	62:15	0:0	5	AVERROR_INVALIDDATA
water	63:4	0:0	4	}
call	65:4	65:19	2	avio_skip
arg	65:14	65:16	3	pb
water	65:14	0:0	4	pb
arg	65:18	65:19	3	4
water	65:18	0:0	4	4
water	65:20	0:0	2	;
call	68:4	68:36	2	avio_seek
arg	68:14	68:16	3	pb
water	68:14	0:0	4	pb
arg	68:18	68:26	3	offSetup
water	68:18	0:0	4	offSetup
arg	68:28	68:36	3	SEEK_SET
water	68:28	0:0	4	SEEK_SET
water	68:37	0:0	2	;
call	69:4	69:21	2	avio_skip
arg	69:14	69:16	3	pb
water	69:14	0:0	4	pb
arg	69:18	69:21	3	140
water	69:18	0:0	4	140
water	69:22	0:0	2	;
if	70:4	71:34	2	(avio_rl16 (pb ) != 0 x5453)
cond	70:8	70:26	3	avio_rl16 (pb ) != 0 x5453
call	70:8	70:20	4	avio_rl16
arg	70:18	70:20	5	pb
water	70:18	0:0	6	pb
op	70:22	0:0	4	!=
water	70:25	0:0	4	0
water	70:26	0:0	4	x5453
stmts	71:8	71:34	3	
return	71:8	71:34	4	AVERROR_INVALIDDATA
water	71:15	0:0	5	AVERROR_INVALIDDATA
water	72:4	0:0	2	length
op	72:11	0:0	2	=
call	72:13	72:25	2	avio_rl16
arg	72:23	72:25	3	pb
water	72:23	0:0	4	pb
water	72:26	0:0	2	;
if	73:4	76:4	2	(length < 0 x163C)
cond	73:8	73:18	3	length < 0 x163C
water	73:8	0:0	4	length
op	73:15	0:0	4	<
water	73:17	0:0	4	0
water	73:18	0:0	4	x163C
stmts	73:25	76:4	3	
water	73:25	0:0	4	{
call	74:8	74:57	4	avpriv_request_sample
arg	74:30	74:35	5	avctx
water	74:30	0:0	6	avctx
arg	74:37	74:57	5	"short SETUP header"
water	74:37	0:0	6	"short SETUP header"
water	74:58	0:0	4	;
return	75:8	75:34	4	AVERROR_INVALIDDATA
water	75:15	0:0	5	AVERROR_INVALIDDATA
water	76:4	0:0	4	}
call	78:4	78:21	2	avio_skip
arg	78:14	78:16	3	pb
water	78:14	0:0	4	pb
arg	78:18	78:21	3	616
water	78:18	0:0	4	616
water	78:22	0:0	2	;
if	79:4	82:4	2	(!avio_rl32 (pb ) ^ vflip)
cond	79:8	79:25	3	!avio_rl32 (pb ) ^ vflip
op	79:8	0:0	4	!
call	79:9	79:21	4	avio_rl32
arg	79:19	79:21	5	pb
water	79:19	0:0	6	pb
op	79:23	0:0	4	^
water	79:25	0:0	4	vflip
stmts	79:32	82:4	3	
water	79:32	0:0	4	{
water	80:8	0:0	4	st
op	80:10	0:0	4	->
water	80:12	0:0	4	codecpar
op	80:20	0:0	4	->
water	80:22	0:0	4	extradata
op	80:33	0:0	4	=
call	80:35	80:55	4	av_strdup
arg	80:45	80:55	5	"BottomUp"
water	80:45	0:0	6	"BottomUp"
water	80:56	0:0	4	;
water	81:8	0:0	4	st
op	81:10	0:0	4	->
water	81:12	0:0	4	codecpar
op	81:20	0:0	4	->
water	81:22	0:0	4	extradata_size
op	81:38	0:0	4	=
water	81:40	0:0	4	9
water	81:41	0:0	4	;
water	82:4	0:0	4	}
call	84:4	84:19	2	avio_skip
arg	84:14	84:16	3	pb
water	84:14	0:0	4	pb
arg	84:18	84:19	3	4
water	84:18	0:0	4	4
water	84:20	0:0	2	;
call	86:4	86:48	2	avpriv_set_pts_info
arg	86:24	86:26	3	st
water	86:24	0:0	4	st
arg	86:28	86:30	3	64
water	86:28	0:0	4	64
arg	86:32	86:33	3	1
water	86:32	0:0	4	1
arg	86:35	86:48	3	avio_rl32(pb)
call	86:35	86:47	4	avio_rl32
arg	86:45	86:47	5	pb
water	86:45	0:0	6	pb
water	86:49	0:0	2	;
call	88:4	88:20	2	avio_skip
arg	88:14	88:16	3	pb
water	88:14	0:0	4	pb
arg	88:18	88:20	3	20
water	88:18	0:0	4	20
water	88:21	0:0	2	;
call	90:4	90:70	2	set_metadata_int
arg	90:21	90:34	3	&st->metadata
op	90:21	0:0	4	&
water	90:22	0:0	4	st
op	90:24	0:0	4	->
water	90:26	0:0	4	metadata
arg	90:36	90:52	3	"camera_version"
water	90:36	0:0	4	"camera_version"
arg	90:54	90:67	3	avio_rl32(pb)
call	90:54	90:66	4	avio_rl32
arg	90:64	90:66	5	pb
water	90:64	0:0	6	pb
arg	90:69	90:70	3	0
water	90:69	0:0	4	0
water	90:71	0:0	2	;
call	91:4	91:72	2	set_metadata_int
arg	91:21	91:34	3	&st->metadata
op	91:21	0:0	4	&
water	91:22	0:0	4	st
op	91:24	0:0	4	->
water	91:26	0:0	4	metadata
arg	91:36	91:54	3	"firmware_version"
water	91:36	0:0	4	"firmware_version"
arg	91:56	91:69	3	avio_rl32(pb)
call	91:56	91:68	4	avio_rl32
arg	91:66	91:68	5	pb
water	91:66	0:0	6	pb
arg	91:71	91:72	3	0
water	91:71	0:0	4	0
water	91:73	0:0	2	;
call	92:4	92:72	2	set_metadata_int
arg	92:21	92:34	3	&st->metadata
op	92:21	0:0	4	&
water	92:22	0:0	4	st
op	92:24	0:0	4	->
water	92:26	0:0	4	metadata
arg	92:36	92:54	3	"software_version"
water	92:36	0:0	4	"software_version"
arg	92:56	92:69	3	avio_rl32(pb)
call	92:56	92:68	4	avio_rl32
arg	92:66	92:68	5	pb
water	92:66	0:0	6	pb
arg	92:71	92:72	3	0
water	92:71	0:0	4	0
water	92:73	0:0	2	;
call	93:4	93:74	2	set_metadata_int
arg	93:21	93:34	3	&st->metadata
op	93:21	0:0	4	&
water	93:22	0:0	4	st
op	93:24	0:0	4	->
water	93:26	0:0	4	metadata
arg	93:36	93:56	3	"recording_timezone"
water	93:36	0:0	4	"recording_timezone"
arg	93:58	93:71	3	avio_rl32(pb)
call	93:58	93:70	4	avio_rl32
arg	93:68	93:70	5	pb
water	93:68	0:0	6	pb
arg	93:73	93:74	3	0
water	93:73	0:0	4	0
water	93:75	0:0	2	;
water	95:4	0:0	2	CFA
op	95:8	0:0	2	=
call	95:10	95:22	2	avio_rl32
arg	95:20	95:22	3	pb
water	95:20	0:0	4	pb
water	95:23	0:0	2	;
call	97:4	97:66	2	set_metadata_int
arg	97:21	97:34	3	&st->metadata
op	97:21	0:0	4	&
water	97:22	0:0	4	st
op	97:24	0:0	4	->
water	97:26	0:0	4	metadata
arg	97:36	97:48	3	"brightness"
water	97:36	0:0	4	"brightness"
arg	97:50	97:63	3	avio_rl32(pb)
call	97:50	97:62	4	avio_rl32
arg	97:60	97:62	5	pb
water	97:60	0:0	6	pb
arg	97:65	97:66	3	1
water	97:65	0:0	4	1
water	97:67	0:0	2	;
call	98:4	98:64	2	set_metadata_int
arg	98:21	98:34	3	&st->metadata
op	98:21	0:0	4	&
water	98:22	0:0	4	st
op	98:24	0:0	4	->
water	98:26	0:0	4	metadata
arg	98:36	98:46	3	"contrast"
water	98:36	0:0	4	"contrast"
arg	98:48	98:61	3	avio_rl32(pb)
call	98:48	98:60	4	avio_rl32
arg	98:58	98:60	5	pb
water	98:58	0:0	6	pb
arg	98:63	98:64	3	1
water	98:63	0:0	4	1
water	98:65	0:0	2	;
call	99:4	99:61	2	set_metadata_int
arg	99:21	99:34	3	&st->metadata
op	99:21	0:0	4	&
water	99:22	0:0	4	st
op	99:24	0:0	4	->
water	99:26	0:0	4	metadata
arg	99:36	99:43	3	"gamma"
water	99:36	0:0	4	"gamma"
arg	99:45	99:58	3	avio_rl32(pb)
call	99:45	99:57	4	avio_rl32
arg	99:55	99:57	5	pb
water	99:55	0:0	6	pb
arg	99:60	99:61	3	1
water	99:60	0:0	4	1
water	99:62	0:0	2	;
call	101:4	101:25	2	avio_skip
arg	101:14	101:16	3	pb
water	101:14	0:0	4	pb
arg	101:18	101:25	3	12+16
water	101:18	0:0	4	12
op	101:21	0:0	4	+
water	101:23	0:0	4	16
water	101:26	0:0	2	;
call	102:4	102:83	2	set_metadata_float
arg	102:23	102:36	3	&st->metadata
op	102:23	0:0	4	&
water	102:24	0:0	4	st
op	102:26	0:0	4	->
water	102:28	0:0	4	metadata
arg	102:38	102:51	3	"wbgain[0].r"
water	102:38	0:0	4	"wbgain[0].r"
arg	102:53	102:80	3	av_int2float(avio_rl32(pb))
call	102:53	102:79	4	av_int2float
arg	102:66	102:79	5	avio_rl32(pb)
call	102:66	102:78	6	avio_rl32
arg	102:76	102:78	7	pb
water	102:76	0:0	8	pb
arg	102:82	102:83	3	1
water	102:82	0:0	4	1
water	102:84	0:0	2	;
call	103:4	103:83	2	set_metadata_float
arg	103:23	103:36	3	&st->metadata
op	103:23	0:0	4	&
water	103:24	0:0	4	st
op	103:26	0:0	4	->
water	103:28	0:0	4	metadata
arg	103:38	103:51	3	"wbgain[0].b"
water	103:38	0:0	4	"wbgain[0].b"
arg	103:53	103:80	3	av_int2float(avio_rl32(pb))
call	103:53	103:79	4	av_int2float
arg	103:66	103:79	5	avio_rl32(pb)
call	103:66	103:78	6	avio_rl32
arg	103:76	103:78	7	pb
water	103:76	0:0	8	pb
arg	103:82	103:83	3	1
water	103:82	0:0	4	1
water	103:84	0:0	2	;
call	104:4	104:20	2	avio_skip
arg	104:14	104:16	3	pb
water	104:14	0:0	4	pb
arg	104:18	104:20	3	36
water	104:18	0:0	4	36
water	104:21	0:0	2	;
water	106:4	0:0	2	st
op	106:6	0:0	2	->
water	106:8	0:0	2	codecpar
op	106:16	0:0	2	->
water	106:18	0:0	2	bits_per_coded_sample
op	106:40	0:0	2	=
call	106:42	106:54	2	avio_rl32
arg	106:52	106:54	3	pb
water	106:52	0:0	4	pb
water	106:55	0:0	2	;
if	108:4	121:4	2	(compression == CC_RGB)
cond	108:8	108:23	3	compression == CC_RGB
water	108:8	0:0	4	compression
op	108:20	0:0	4	==
water	108:23	0:0	4	CC_RGB
stmts	108:31	121:4	3	
water	108:31	0:0	4	{
if	109:8	111:8	4	(biBitCount == 8)
cond	109:12	109:26	5	biBitCount == 8
water	109:12	0:0	6	biBitCount
op	109:23	0:0	6	==
water	109:26	0:0	6	8
stmts	109:29	111:8	5	
water	109:29	0:0	6	{
water	110:12	0:0	6	st
op	110:14	0:0	6	->
water	110:16	0:0	6	codecpar
op	110:24	0:0	6	->
water	110:26	0:0	6	format
op	110:33	0:0	6	=
water	110:35	0:0	6	AV_PIX_FMT_GRAY8
water	110:51	0:0	6	;
water	111:8	0:0	6	}
else	111:10	113:8	4
stmts	111:15	113:8	5	
if	111:15	113:8	6	(biBitCount == 16)
cond	111:19	111:33	7	biBitCount == 16
water	111:19	0:0	8	biBitCount
op	111:30	0:0	8	==
water	111:33	0:0	8	16
stmts	111:37	113:8	7	
water	111:37	0:0	8	{
water	112:12	0:0	8	st
op	112:14	0:0	8	->
water	112:16	0:0	8	codecpar
op	112:24	0:0	8	->
water	112:26	0:0	8	format
op	112:33	0:0	8	=
water	112:35	0:0	8	AV_PIX_FMT_GRAY16LE
water	112:54	0:0	8	;
water	113:8	0:0	8	}
else	113:10	115:8	4
stmts	113:15	115:8	5	
if	113:15	115:8	6	(biBitCount == 24)
cond	113:19	113:33	7	biBitCount == 24
water	113:19	0:0	8	biBitCount
op	113:30	0:0	8	==
water	113:33	0:0	8	24
stmts	113:37	115:8	7	
water	113:37	0:0	8	{
water	114:12	0:0	8	st
op	114:14	0:0	8	->
water	114:16	0:0	8	codecpar
op	114:24	0:0	8	->
water	114:26	0:0	8	format
op	114:33	0:0	8	=
water	114:35	0:0	8	AV_PIX_FMT_BGR24
water	114:51	0:0	8	;
water	115:8	0:0	8	}
else	115:10	117:8	4
stmts	115:15	117:8	5	
if	115:15	117:8	6	(biBitCount == 48)
cond	115:19	115:33	7	biBitCount == 48
water	115:19	0:0	8	biBitCount
op	115:30	0:0	8	==
water	115:33	0:0	8	48
stmts	115:37	117:8	7	
water	115:37	0:0	8	{
water	116:12	0:0	8	st
op	116:14	0:0	8	->
water	116:16	0:0	8	codecpar
op	116:24	0:0	8	->
water	116:26	0:0	8	format
op	116:33	0:0	8	=
water	116:35	0:0	8	AV_PIX_FMT_BGR48LE
water	116:53	0:0	8	;
water	117:8	0:0	8	}
else	117:10	120:8	4
stmts	117:15	120:8	5	
water	117:15	0:0	6	{
call	118:12	118:80	6	avpriv_request_sample
arg	118:34	118:39	7	avctx
water	118:34	0:0	8	avctx
arg	118:41	118:68	7	"unsupported biBitCount %i"
water	118:41	0:0	8	"unsupported biBitCount %i"
arg	118:70	118:80	7	biBitCount
water	118:70	0:0	8	biBitCount
water	118:81	0:0	6	;
return	119:12	119:38	6	AVERROR_INVALIDDATA
water	119:19	0:0	7	AVERROR_INVALIDDATA
water	120:8	0:0	6	}
water	121:4	0:0	4	}
else	121:6	147:4	2
stmts	121:11	147:4	3	
if	121:11	147:4	4	(compression == CC_UNINT)
cond	121:15	121:30	5	compression == CC_UNINT
water	121:15	0:0	6	compression
op	121:27	0:0	6	==
water	121:30	0:0	6	CC_UNINT
stmts	121:40	147:4	5	
water	121:40	0:0	6	{
switch	122:8	146:8	6	(CFA & 0 xFFFFFF)
cond	122:16	122:23	7	CFA & 0 xFFFFFF
water	122:16	0:0	8	CFA
op	122:20	0:0	8	&
water	122:22	0:0	8	0
water	122:23	0:0	8	xFFFFFF
stmts	122:32	146:8	7	
water	122:32	0:0	8	{
label	123:8	123:22	8	case CFA_BAYER :
if	124:12	126:12	8	(biBitCount == 8)
cond	124:16	124:30	9	biBitCount == 8
water	124:16	0:0	10	biBitCount
op	124:27	0:0	10	==
water	124:30	0:0	10	8
stmts	124:33	126:12	9	
water	124:33	0:0	10	{
water	125:16	0:0	10	st
op	125:18	0:0	10	->
water	125:20	0:0	10	codecpar
op	125:28	0:0	10	->
water	125:30	0:0	10	format
op	125:37	0:0	10	=
water	125:39	0:0	10	AV_PIX_FMT_BAYER_GBRG8
water	125:61	0:0	10	;
water	126:12	0:0	10	}
else	126:14	128:12	8
stmts	126:19	128:12	9	
if	126:19	128:12	10	(biBitCount == 16)
cond	126:23	126:37	11	biBitCount == 16
water	126:23	0:0	12	biBitCount
op	126:34	0:0	12	==
water	126:37	0:0	12	16
stmts	126:41	128:12	11	
water	126:41	0:0	12	{
water	127:16	0:0	12	st
op	127:18	0:0	12	->
water	127:20	0:0	12	codecpar
op	127:28	0:0	12	->
water	127:30	0:0	12	format
op	127:37	0:0	12	=
water	127:39	0:0	12	AV_PIX_FMT_BAYER_GBRG16LE
water	127:64	0:0	12	;
water	128:12	0:0	12	}
else	128:14	131:12	8
stmts	128:19	131:12	9	
water	128:19	0:0	10	{
call	129:16	129:84	10	avpriv_request_sample
arg	129:38	129:43	11	avctx
water	129:38	0:0	12	avctx
arg	129:45	129:72	11	"unsupported biBitCount %i"
water	129:45	0:0	12	"unsupported biBitCount %i"
arg	129:74	129:84	11	biBitCount
water	129:74	0:0	12	biBitCount
water	129:85	0:0	10	;
return	130:16	130:42	10	AVERROR_INVALIDDATA
water	130:23	0:0	11	AVERROR_INVALIDDATA
water	131:12	0:0	10	}
break	132:12	132:17	8	
label	133:8	133:26	8	case CFA_BAYERFLIP :
if	134:12	136:12	8	(biBitCount == 8)
cond	134:16	134:30	9	biBitCount == 8
water	134:16	0:0	10	biBitCount
op	134:27	0:0	10	==
water	134:30	0:0	10	8
stmts	134:33	136:12	9	
water	134:33	0:0	10	{
water	135:16	0:0	10	st
op	135:18	0:0	10	->
water	135:20	0:0	10	codecpar
op	135:28	0:0	10	->
water	135:30	0:0	10	format
op	135:37	0:0	10	=
water	135:39	0:0	10	AV_PIX_FMT_BAYER_RGGB8
water	135:61	0:0	10	;
water	136:12	0:0	10	}
else	136:14	138:12	8
stmts	136:19	138:12	9	
if	136:19	138:12	10	(biBitCount == 16)
cond	136:23	136:37	11	biBitCount == 16
water	136:23	0:0	12	biBitCount
op	136:34	0:0	12	==
water	136:37	0:0	12	16
stmts	136:41	138:12	11	
water	136:41	0:0	12	{
water	137:16	0:0	12	st
op	137:18	0:0	12	->
water	137:20	0:0	12	codecpar
op	137:28	0:0	12	->
water	137:30	0:0	12	format
op	137:37	0:0	12	=
water	137:39	0:0	12	AV_PIX_FMT_BAYER_RGGB16LE
water	137:64	0:0	12	;
water	138:12	0:0	12	}
else	138:14	141:12	8
stmts	138:19	141:12	9	
water	138:19	0:0	10	{
call	139:16	139:84	10	avpriv_request_sample
arg	139:38	139:43	11	avctx
water	139:38	0:0	12	avctx
arg	139:45	139:72	11	"unsupported biBitCount %i"
water	139:45	0:0	12	"unsupported biBitCount %i"
arg	139:74	139:84	11	biBitCount
water	139:74	0:0	12	biBitCount
water	139:85	0:0	10	;
return	140:16	140:42	10	AVERROR_INVALIDDATA
water	140:23	0:0	11	AVERROR_INVALIDDATA
water	141:12	0:0	10	}
break	142:12	142:17	8	
label	143:8	143:15	8	default :
call	144:11	144:96	8	avpriv_request_sample
arg	144:33	144:38	9	avctx
water	144:33	0:0	10	avctx
arg	144:40	144:80	9	"unsupported Color Field Array (CFA) %i"
water	144:40	0:0	10	"unsupported Color Field Array (CFA) %i"
arg	144:82	144:96	9	CFA&0xFFFFFF
water	144:82	0:0	10	CFA
op	144:86	0:0	10	&
water	144:88	0:0	10	0
water	144:89	0:0	10	xFFFFFF
water	144:97	0:0	8	;
return	145:12	145:38	8	AVERROR_INVALIDDATA
water	145:19	0:0	9	AVERROR_INVALIDDATA
water	146:8	0:0	8	}
water	147:4	0:0	6	}
else	147:6	150:4	2
stmts	147:11	150:4	3	
water	147:11	0:0	4	{
call	148:8	148:78	4	avpriv_request_sample
arg	148:30	148:35	5	avctx
water	148:30	0:0	6	avctx
arg	148:37	148:65	5	"unsupported compression %i"
water	148:37	0:0	6	"unsupported compression %i"
arg	148:67	148:78	5	compression
water	148:67	0:0	6	compression
water	148:79	0:0	4	;
return	149:8	149:34	4	AVERROR_INVALIDDATA
water	149:15	0:0	5	AVERROR_INVALIDDATA
water	150:4	0:0	4	}
call	152:4	152:21	2	avio_skip
arg	152:14	152:16	3	pb
water	152:14	0:0	4	pb
arg	152:18	152:21	3	668
water	152:18	0:0	4	668
water	152:22	0:0	2	;
call	154:4	154:66	2	set_metadata_int
arg	154:21	154:34	3	&st->metadata
op	154:21	0:0	4	&
water	154:22	0:0	4	st
op	154:24	0:0	4	->
water	154:26	0:0	4	metadata
arg	154:36	154:48	3	"shutter_ns"
water	154:36	0:0	4	"shutter_ns"
arg	154:50	154:63	3	avio_rl32(pb)
call	154:50	154:62	4	avio_rl32
arg	154:60	154:62	5	pb
water	154:60	0:0	6	pb
arg	154:65	154:66	3	0
water	154:65	0:0	4	0
water	154:67	0:0	2	;
call	156:4	156:20	2	avio_skip
arg	156:14	156:16	3	pb
water	156:14	0:0	4	pb
arg	156:18	156:20	3	24
water	156:18	0:0	4	24
water	156:21	0:0	2	;
water	159:4	0:0	2	description
op	159:16	0:0	2	=
call	159:18	159:48	2	av_malloc
arg	159:28	159:48	3	DESCRIPTION_SIZE+1
water	159:28	0:0	4	DESCRIPTION_SIZE
op	159:45	0:0	4	+
water	159:47	0:0	4	1
water	159:49	0:0	2	;
if	160:4	161:30	2	(! description)
cond	160:8	160:9	3	! description
op	160:8	0:0	4	!
water	160:9	0:0	4	description
stmts	161:8	161:30	3	
return	161:8	161:30	4	AVERROR(ENOMEM)
call	161:15	161:29	5	AVERROR
arg	161:23	161:29	6	ENOMEM
water	161:23	0:0	7	ENOMEM
water	162:4	0:0	2	i
op	162:6	0:0	2	=
call	162:8	162:76	2	avio_get_str
arg	162:21	162:23	3	pb
water	162:21	0:0	4	pb
arg	162:25	162:41	3	DESCRIPTION_SIZE
water	162:25	0:0	4	DESCRIPTION_SIZE
arg	162:43	162:54	3	description
water	162:43	0:0	4	description
arg	162:56	162:76	3	DESCRIPTION_SIZE+1
water	162:56	0:0	4	DESCRIPTION_SIZE
op	162:73	0:0	4	+
water	162:75	0:0	4	1
water	162:77	0:0	2	;
if	163:4	164:43	2	(i < DESCRIPTION_SIZE)
cond	163:8	163:12	3	i < DESCRIPTION_SIZE
water	163:8	0:0	4	i
op	163:10	0:0	4	<
water	163:12	0:0	4	DESCRIPTION_SIZE
stmts	164:8	164:43	3	
call	164:8	164:42	4	avio_skip
arg	164:18	164:20	5	pb
water	164:18	0:0	6	pb
arg	164:22	164:42	5	DESCRIPTION_SIZE-i
water	164:22	0:0	6	DESCRIPTION_SIZE
op	164:39	0:0	6	-
water	164:41	0:0	6	i
water	164:43	0:0	4	;
if	165:4	166:87	2	(description [ 0 ])
cond	165:8	165:21	3	description [ 0 ]
water	165:8	0:0	4	description
op	165:19	0:0	4	[
water	165:20	0:0	4	0
op	165:21	0:0	4	]
stmts	166:8	166:87	3	
call	166:8	166:86	4	av_dict_set
arg	166:20	166:33	5	&st->metadata
op	166:20	0:0	6	&
water	166:21	0:0	6	st
op	166:23	0:0	6	->
water	166:25	0:0	6	metadata
arg	166:35	166:48	5	"description"
water	166:35	0:0	6	"description"
arg	166:50	166:61	5	description
water	166:50	0:0	6	description
arg	166:63	166:86	5	AV_DICT_DONT_STRDUP_VAL
water	166:63	0:0	6	AV_DICT_DONT_STRDUP_VAL
water	166:87	0:0	4	;
else	167:4	168:28	2
stmts	168:8	168:28	3	
call	168:8	168:27	4	av_free
arg	168:16	168:27	5	description
water	168:16	0:0	6	description
water	168:28	0:0	4	;
call	170:4	170:22	2	avio_skip
arg	170:14	170:16	3	pb
water	170:14	0:0	4	pb
arg	170:18	170:22	3	1176
water	170:18	0:0	4	1176
water	170:23	0:0	2	;
call	172:4	172:67	2	set_metadata_int
arg	172:21	172:34	3	&st->metadata
op	172:21	0:0	4	&
water	172:22	0:0	4	st
op	172:24	0:0	4	->
water	172:26	0:0	4	metadata
arg	172:36	172:49	3	"enable_crop"
water	172:36	0:0	4	"enable_crop"
arg	172:51	172:64	3	avio_rl32(pb)
call	172:51	172:63	4	avio_rl32
arg	172:61	172:63	5	pb
water	172:61	0:0	6	pb
arg	172:66	172:67	3	1
water	172:66	0:0	4	1
water	172:68	0:0	2	;
call	173:4	173:65	2	set_metadata_int
arg	173:21	173:34	3	&st->metadata
op	173:21	0:0	4	&
water	173:22	0:0	4	st
op	173:24	0:0	4	->
water	173:26	0:0	4	metadata
arg	173:36	173:47	3	"crop_left"
water	173:36	0:0	4	"crop_left"
arg	173:49	173:62	3	avio_rl32(pb)
call	173:49	173:61	4	avio_rl32
arg	173:59	173:61	5	pb
water	173:59	0:0	6	pb
arg	173:64	173:65	3	1
water	173:64	0:0	4	1
water	173:66	0:0	2	;
call	174:4	174:64	2	set_metadata_int
arg	174:21	174:34	3	&st->metadata
op	174:21	0:0	4	&
water	174:22	0:0	4	st
op	174:24	0:0	4	->
water	174:26	0:0	4	metadata
arg	174:36	174:46	3	"crop_top"
water	174:36	0:0	4	"crop_top"
arg	174:48	174:61	3	avio_rl32(pb)
call	174:48	174:60	4	avio_rl32
arg	174:58	174:60	5	pb
water	174:58	0:0	6	pb
arg	174:63	174:64	3	1
water	174:63	0:0	4	1
water	174:65	0:0	2	;
call	175:4	175:66	2	set_metadata_int
arg	175:21	175:34	3	&st->metadata
op	175:21	0:0	4	&
water	175:22	0:0	4	st
op	175:24	0:0	4	->
water	175:26	0:0	4	metadata
arg	175:36	175:48	3	"crop_right"
water	175:36	0:0	4	"crop_right"
arg	175:50	175:63	3	avio_rl32(pb)
call	175:50	175:62	4	avio_rl32
arg	175:60	175:62	5	pb
water	175:60	0:0	6	pb
arg	175:65	175:66	3	1
water	175:65	0:0	4	1
water	175:67	0:0	2	;
call	176:4	176:67	2	set_metadata_int
arg	176:21	176:34	3	&st->metadata
op	176:21	0:0	4	&
water	176:22	0:0	4	st
op	176:24	0:0	4	->
water	176:26	0:0	4	metadata
arg	176:36	176:49	3	"crop_bottom"
water	176:36	0:0	4	"crop_bottom"
arg	176:51	176:64	3	avio_rl32(pb)
call	176:51	176:63	4	avio_rl32
arg	176:61	176:63	5	pb
water	176:61	0:0	6	pb
arg	176:66	176:67	3	1
water	176:66	0:0	4	1
water	176:68	0:0	2	;
call	179:4	179:43	2	avio_seek
arg	179:14	179:16	3	pb
water	179:14	0:0	4	pb
arg	179:18	179:33	3	offImageOffsets
water	179:18	0:0	4	offImageOffsets
arg	179:35	179:43	3	SEEK_SET
water	179:35	0:0	4	SEEK_SET
water	179:44	0:0	2	;
for	180:4	181:72	2	(i = 0 ;i < st -> duration;i ++)
forinit	180:9	180:14	3	i = 0 ;
water	180:9	0:0	4	i
op	180:11	0:0	4	=
water	180:13	0:0	4	0
water	180:14	0:0	4	;
cond	180:16	180:24	3	i < st -> duration
water	180:16	0:0	4	i
op	180:18	0:0	4	<
water	180:20	0:0	4	st
op	180:22	0:0	4	->
water	180:24	0:0	4	duration
forexpr	180:34	180:35	3	i ++
water	180:34	0:0	4	i
op	180:35	0:0	4	++
stmts	181:8	181:72	3	
call	181:8	181:71	4	av_add_index_entry
arg	181:27	181:29	5	st
water	181:27	0:0	6	st
arg	181:31	181:44	5	avio_rl64(pb)
call	181:31	181:43	6	avio_rl64
arg	181:41	181:43	7	pb
water	181:41	0:0	8	pb
arg	181:46	181:47	5	i
water	181:46	0:0	6	i
arg	181:49	181:50	5	0
water	181:49	0:0	6	0
arg	181:52	181:53	5	0
water	181:52	0:0	6	0
arg	181:55	181:71	5	AVINDEX_KEYFRAME
water	181:55	0:0	6	AVINDEX_KEYFRAME
water	181:72	0:0	4	;
return	183:4	183:12	2	0
water	183:11	0:0	3	0

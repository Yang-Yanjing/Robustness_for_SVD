func	2:0	142:0	0	int	ff_ivi_decode_blocks
params	2:24	0:0	1	
param	2:25	2:42	2	GetBitContext *	gb
param	2:44	2:61	2	IVIBandDesc *	band
param	2:63	2:76	2	IVITile *	tile
stmnts	0:0	141:12	1	
decl	4:4	5:60	2	int	mbn
water	4:19	0:0	2	,
decl	4:4	5:60	2	int	blk
water	4:24	0:0	2	,
decl	4:4	5:60	2	int	num_blocks
water	4:36	0:0	2	,
decl	4:4	5:60	2	int	num_coeffs
water	4:48	0:0	2	,
decl	4:4	5:60	2	int	blk_size
water	4:58	0:0	2	,
decl	4:4	5:60	2	int	scan_pos
water	4:68	0:0	2	,
decl	4:4	5:60	2	int	run
water	4:73	0:0	2	,
decl	4:4	5:60	2	int	val
water	4:78	0:0	2	,
decl	4:4	5:60	2	int	pos
water	5:19	0:0	2	,
decl	4:4	5:60	2	int	is_intra
water	5:29	0:0	2	,
decl	4:4	5:60	2	int	mc_type
water	5:38	0:0	2	,
decl	4:4	5:60	2	int	mv_x
water	5:44	0:0	2	,
decl	4:4	5:60	2	int	mv_y
water	5:50	0:0	2	,
decl	4:4	5:60	2	int	col_mask
decl	6:4	6:28	2	uint8_t	col_flags[8]
decl	7:4	7:34	2	int32_t	prev_dc
water	7:23	0:0	2	,
decl	7:4	7:34	2	int32_t	trvec[64]
decl	8:4	8:52	2	uint32_t	cbp
water	8:19	0:0	2	,
decl	8:4	8:52	2	uint32_t	sym
water	8:24	0:0	2	,
decl	8:4	8:52	2	uint32_t	lo
water	8:28	0:0	2	,
decl	8:4	8:52	2	uint32_t	hi
water	8:32	0:0	2	,
decl	8:4	8:52	2	uint32_t	quant
water	8:39	0:0	2	,
decl	8:4	8:52	2	uint32_t	buf_offs
water	8:49	0:0	2	,
decl	8:4	8:52	2	uint32_t	q
decl	9:4	9:19	2	IVIMbInfo	*mb
decl	10:4	10:37	2	RVMapDesc	*rvmap
op	10:23	0:0	2	=
water	10:25	0:0	2	band
op	10:29	0:0	2	->
water	10:31	0:0	2	rv_map
call	11:4	11:29	2	void
arg	11:10	11:29	3	*mc_with_delta_func
op	11:10	0:0	4	*
water	11:11	0:0	4	mc_with_delta_func
water	11:30	0:0	2	(
water	11:31	0:0	2	int16_t
op	11:39	0:0	2	*
water	11:40	0:0	2	buf
water	11:43	0:0	2	,
water	11:45	0:0	2	const
water	11:51	0:0	2	int16_t
op	11:59	0:0	2	*
water	11:60	0:0	2	ref_buf
water	11:67	0:0	2	,
water	11:69	0:0	2	uint32_t
water	11:78	0:0	2	pitch
water	11:83	0:0	2	,
water	11:85	0:0	2	int
water	11:89	0:0	2	mc_type
water	11:96	0:0	2	)
water	11:97	0:0	2	;
call	12:4	12:27	2	void
arg	12:10	12:27	3	*mc_no_delta_func
op	12:10	0:0	4	*
water	12:11	0:0	4	mc_no_delta_func
water	12:30	0:0	2	(
water	12:31	0:0	2	int16_t
op	12:39	0:0	2	*
water	12:40	0:0	2	buf
water	12:43	0:0	2	,
water	12:45	0:0	2	const
water	12:51	0:0	2	int16_t
op	12:59	0:0	2	*
water	12:60	0:0	2	ref_buf
water	12:67	0:0	2	,
water	12:69	0:0	2	uint32_t
water	12:78	0:0	2	pitch
water	12:83	0:0	2	,
water	12:85	0:0	2	int
water	12:89	0:0	2	mc_type
water	12:96	0:0	2	)
water	12:97	0:0	2	;
decl	13:4	13:29	2	const uint16_t	*base_tab
decl	14:4	14:30	2	const uint8_t	*scale_tab
water	16:4	0:0	2	prev_dc
op	16:12	0:0	2	=
water	16:14	0:0	2	0
water	16:15	0:0	2	;
water	18:4	0:0	2	blk_size
op	18:15	0:0	2	=
water	18:17	0:0	2	band
op	18:21	0:0	2	->
water	18:23	0:0	2	blk_size
water	18:31	0:0	2	;
water	19:4	0:0	2	col_mask
op	19:15	0:0	2	=
water	19:17	0:0	2	blk_size
op	19:26	0:0	2	-
water	19:28	0:0	2	1
water	19:29	0:0	2	;
water	20:4	0:0	2	num_blocks
op	20:15	0:0	2	=
water	20:17	0:0	2	(
water	20:18	0:0	2	band
op	20:22	0:0	2	->
water	20:24	0:0	2	mb_size
op	20:32	0:0	2	!=
water	20:35	0:0	2	blk_size
water	20:43	0:0	2	)
water	20:45	0:0	2	?
water	20:47	0:0	2	4
water	20:49	0:0	2	:
water	20:51	0:0	2	1
water	20:52	0:0	2	;
water	21:4	0:0	2	num_coeffs
op	21:15	0:0	2	=
water	21:17	0:0	2	blk_size
op	21:26	0:0	2	*
water	21:28	0:0	2	blk_size
water	21:36	0:0	2	;
if	22:4	25:4	2	(blk_size == 8)
cond	22:8	22:20	3	blk_size == 8
water	22:8	0:0	4	blk_size
op	22:17	0:0	4	==
water	22:20	0:0	4	8
stmts	22:23	25:4	3	
water	22:23	0:0	4	{
water	23:8	0:0	4	mc_with_delta_func
op	23:27	0:0	4	=
water	23:29	0:0	4	ff_ivi_mc_8x8_delta
water	23:48	0:0	4	;
water	24:8	0:0	4	mc_no_delta_func
op	24:27	0:0	4	=
water	24:29	0:0	4	ff_ivi_mc_8x8_no_delta
water	24:51	0:0	4	;
water	25:4	0:0	4	}
else	25:6	28:4	2
stmts	25:11	28:4	3	
water	25:11	0:0	4	{
water	26:8	0:0	4	mc_with_delta_func
op	26:27	0:0	4	=
water	26:29	0:0	4	ff_ivi_mc_4x4_delta
water	26:48	0:0	4	;
water	27:8	0:0	4	mc_no_delta_func
op	27:27	0:0	4	=
water	27:29	0:0	4	ff_ivi_mc_4x4_no_delta
water	27:51	0:0	4	;
water	28:4	0:0	4	}
for	30:4	137:4	2	(mbn = 0 , mb = tile -> mbs ;mbn < tile -> num_MBs;mb ++ , mbn ++)
forinit	30:9	30:32	3	mbn = 0 , mb = tile -> mbs ;
water	30:9	0:0	4	mbn
op	30:13	0:0	4	=
water	30:15	0:0	4	0
water	30:16	0:0	4	,
water	30:18	0:0	4	mb
op	30:21	0:0	4	=
water	30:23	0:0	4	tile
op	30:27	0:0	4	->
water	30:29	0:0	4	mbs
water	30:32	0:0	4	;
cond	30:34	30:46	3	mbn < tile -> num_MBs
water	30:34	0:0	4	mbn
op	30:38	0:0	4	<
water	30:40	0:0	4	tile
op	30:44	0:0	4	->
water	30:46	0:0	4	num_MBs
forexpr	30:55	30:64	3	mb ++ , mbn ++
water	30:55	0:0	4	mb
op	30:57	0:0	4	++
water	30:59	0:0	4	,
water	30:61	0:0	4	mbn
op	30:64	0:0	4	++
stmts	30:68	137:4	3	
water	30:68	0:0	4	{
water	31:8	0:0	4	is_intra
op	31:17	0:0	4	=
op	31:19	0:0	4	!
water	31:20	0:0	4	mb
op	31:22	0:0	4	->
water	31:24	0:0	4	type
water	31:28	0:0	4	;
water	32:8	0:0	4	cbp
op	32:17	0:0	4	=
water	32:19	0:0	4	mb
op	32:21	0:0	4	->
water	32:23	0:0	4	cbp
water	32:26	0:0	4	;
water	33:8	0:0	4	buf_offs
op	33:17	0:0	4	=
water	33:19	0:0	4	mb
op	33:21	0:0	4	->
water	33:23	0:0	4	buf_offs
water	33:31	0:0	4	;
water	35:8	0:0	4	quant
op	35:14	0:0	4	=
call	35:16	35:61	4	av_clip
arg	35:24	35:54	5	band->glob_quant+mb->q_delta
water	35:24	0:0	6	band
op	35:28	0:0	6	->
water	35:30	0:0	6	glob_quant
op	35:41	0:0	6	+
water	35:43	0:0	6	mb
op	35:45	0:0	6	->
water	35:47	0:0	6	q_delta
arg	35:56	35:57	5	0
water	35:56	0:0	6	0
arg	35:59	35:61	5	23
water	35:59	0:0	6	23
water	35:62	0:0	4	;
water	37:8	0:0	4	base_tab
op	37:18	0:0	4	=
water	37:20	0:0	4	is_intra
water	37:29	0:0	4	?
water	37:31	0:0	4	band
op	37:35	0:0	4	->
water	37:37	0:0	4	intra_base
water	37:49	0:0	4	:
water	37:51	0:0	4	band
op	37:55	0:0	4	->
water	37:57	0:0	4	inter_base
water	37:67	0:0	4	;
water	38:8	0:0	4	scale_tab
op	38:18	0:0	4	=
water	38:20	0:0	4	is_intra
water	38:29	0:0	4	?
water	38:31	0:0	4	band
op	38:35	0:0	4	->
water	38:37	0:0	4	intra_scale
water	38:49	0:0	4	:
water	38:51	0:0	4	band
op	38:55	0:0	4	->
water	38:57	0:0	4	inter_scale
water	38:68	0:0	4	;
if	39:8	40:36	4	(scale_tab)
cond	39:12	39:12	5	scale_tab
water	39:12	0:0	6	scale_tab
stmts	40:12	40:36	5	
water	40:12	0:0	6	quant
op	40:18	0:0	6	=
water	40:20	0:0	6	scale_tab
op	40:29	0:0	6	[
water	40:30	0:0	6	quant
op	40:35	0:0	6	]
water	40:36	0:0	6	;
if	42:8	52:8	4	(! is_intra)
cond	42:12	42:13	5	! is_intra
op	42:12	0:0	6	!
water	42:13	0:0	6	is_intra
stmts	42:23	52:8	5	
water	42:23	0:0	6	{
water	43:12	0:0	6	mv_x
op	43:17	0:0	6	=
water	43:19	0:0	6	mb
op	43:21	0:0	6	->
water	43:23	0:0	6	mv_x
water	43:27	0:0	6	;
water	44:12	0:0	6	mv_y
op	44:17	0:0	6	=
water	44:19	0:0	6	mb
op	44:21	0:0	6	->
water	44:23	0:0	6	mv_y
water	44:27	0:0	6	;
if	45:12	47:12	6	(! band -> is_halfpel)
cond	45:16	45:23	7	! band -> is_halfpel
op	45:16	0:0	8	!
water	45:17	0:0	8	band
op	45:21	0:0	8	->
water	45:23	0:0	8	is_halfpel
stmts	45:35	47:12	7	
water	45:35	0:0	8	{
water	46:16	0:0	8	mc_type
op	46:24	0:0	8	=
water	46:26	0:0	8	0
water	46:27	0:0	8	;
water	47:12	0:0	8	}
else	47:14	51:12	6
stmts	47:19	51:12	7	
water	47:19	0:0	8	{
water	48:16	0:0	8	mc_type
op	48:24	0:0	8	=
water	48:26	0:0	8	(
water	48:27	0:0	8	(
water	48:28	0:0	8	mv_y
op	48:33	0:0	8	&
water	48:35	0:0	8	1
water	48:36	0:0	8	)
op	48:38	0:0	8	<<
water	48:41	0:0	8	1
water	48:42	0:0	8	)
op	48:44	0:0	8	|
water	48:46	0:0	8	(
water	48:47	0:0	8	mv_x
op	48:52	0:0	8	&
water	48:54	0:0	8	1
water	48:55	0:0	8	)
water	48:56	0:0	8	;
water	49:16	0:0	8	mv_x
op	49:21	0:0	8	>>=
water	49:25	0:0	8	1
water	49:26	0:0	8	;
water	50:16	0:0	8	mv_y
op	50:21	0:0	8	>>=
water	50:25	0:0	8	1
water	50:26	0:0	8	;
water	51:12	0:0	8	}
water	52:8	0:0	6	}
for	54:8	136:8	4	(blk = 0 ;blk < num_blocks;blk ++)
forinit	54:13	54:20	5	blk = 0 ;
water	54:13	0:0	6	blk
op	54:17	0:0	6	=
water	54:19	0:0	6	0
water	54:20	0:0	6	;
cond	54:22	54:28	5	blk < num_blocks
water	54:22	0:0	6	blk
op	54:26	0:0	6	<
water	54:28	0:0	6	num_blocks
forexpr	54:40	54:43	5	blk ++
water	54:40	0:0	6	blk
op	54:43	0:0	6	++
stmts	54:47	136:8	5	
water	54:47	0:0	6	{
if	56:12	58:12	6	(blk & 1)
cond	56:16	56:22	7	blk & 1
water	56:16	0:0	8	blk
op	56:20	0:0	8	&
water	56:22	0:0	8	1
stmts	56:25	58:12	7	
water	56:25	0:0	8	{
water	57:16	0:0	8	buf_offs
op	57:25	0:0	8	+=
water	57:28	0:0	8	blk_size
water	57:36	0:0	8	;
water	58:12	0:0	8	}
else	58:14	61:12	6
stmts	58:19	61:12	7	
if	58:19	61:12	8	(blk == 2)
cond	58:23	58:30	9	blk == 2
water	58:23	0:0	10	blk
op	58:27	0:0	10	==
water	58:30	0:0	10	2
stmts	58:33	61:12	9	
water	58:33	0:0	10	{
water	59:16	0:0	10	buf_offs
op	59:25	0:0	10	-=
water	59:28	0:0	10	blk_size
water	59:36	0:0	10	;
water	60:16	0:0	10	buf_offs
op	60:25	0:0	10	+=
water	60:28	0:0	10	blk_size
op	60:37	0:0	10	*
water	60:39	0:0	10	band
op	60:43	0:0	10	->
water	60:45	0:0	10	pitch
water	60:50	0:0	10	;
water	61:12	0:0	10	}
if	63:12	122:12	6	(cbp & 1)
cond	63:16	63:22	7	cbp & 1
water	63:16	0:0	8	cbp
op	63:20	0:0	8	&
water	63:22	0:0	8	1
stmts	63:25	122:12	7	
water	63:25	0:0	8	{
water	64:16	0:0	8	scan_pos
op	64:25	0:0	8	=
op	64:27	0:0	8	-
water	64:28	0:0	8	1
water	64:29	0:0	8	;
call	65:16	65:60	8	memset
arg	65:23	65:28	9	trvec
water	65:23	0:0	10	trvec
arg	65:30	65:31	9	0
water	65:30	0:0	10	0
arg	65:33	65:60	9	num_coeffs*sizeof(trvec[0])
water	65:33	0:0	10	num_coeffs
op	65:43	0:0	10	*
op	65:44	0:0	10	sizeof
water	65:50	0:0	10	(
water	65:51	0:0	10	trvec
op	65:56	0:0	10	[
water	65:57	0:0	10	0
op	65:58	0:0	10	]
water	65:59	0:0	10	)
water	65:61	0:0	8	;
call	66:16	66:54	8	memset
arg	66:23	66:32	9	col_flags
water	66:23	0:0	10	col_flags
arg	66:34	66:35	9	0
water	66:34	0:0	10	0
arg	66:37	66:54	9	sizeof(col_flags)
op	66:37	0:0	10	sizeof
water	66:43	0:0	10	(
water	66:44	0:0	10	col_flags
water	66:53	0:0	10	)
water	66:55	0:0	8	;
while	68:16	101:16	8	(scan_pos <= num_coeffs)
cond	68:23	68:35	9	scan_pos <= num_coeffs
water	68:23	0:0	10	scan_pos
op	68:32	0:0	10	<=
water	68:35	0:0	10	num_coeffs
stmts	68:47	101:16	9	
water	68:47	0:0	10	{
water	69:20	0:0	10	sym
op	69:24	0:0	10	=
call	69:26	69:80	10	get_vlc2
arg	69:35	69:37	11	gb
water	69:35	0:0	12	gb
arg	69:39	69:63	11	band->blk_vlc.tab->table
water	69:39	0:0	12	band
op	69:43	0:0	12	->
water	69:45	0:0	12	blk_vlc
op	69:52	0:0	12	.
water	69:53	0:0	12	tab
op	69:56	0:0	12	->
water	69:58	0:0	12	table
arg	69:65	69:77	11	IVI_VLC_BITS
water	69:65	0:0	12	IVI_VLC_BITS
arg	69:79	69:80	11	1
water	69:79	0:0	12	1
water	69:81	0:0	10	;
if	70:20	71:29	10	(sym == rvmap -> eob_sym)
cond	70:24	70:38	11	sym == rvmap -> eob_sym
water	70:24	0:0	12	sym
op	70:28	0:0	12	==
water	70:31	0:0	12	rvmap
op	70:36	0:0	12	->
water	70:38	0:0	12	eob_sym
stmts	71:24	71:29	11	
break	71:24	71:29	12	
if	73:20	78:20	10	(sym == rvmap -> esc_sym)
cond	73:24	73:38	11	sym == rvmap -> esc_sym
water	73:24	0:0	12	sym
op	73:28	0:0	12	==
water	73:31	0:0	12	rvmap
op	73:36	0:0	12	->
water	73:38	0:0	12	esc_sym
stmts	73:47	78:20	11	
water	73:47	0:0	12	{
water	74:24	0:0	12	run
op	74:28	0:0	12	=
call	74:30	74:84	12	get_vlc2
arg	74:39	74:41	13	gb
water	74:39	0:0	14	gb
arg	74:43	74:67	13	band->blk_vlc.tab->table
water	74:43	0:0	14	band
op	74:47	0:0	14	->
water	74:49	0:0	14	blk_vlc
op	74:56	0:0	14	.
water	74:57	0:0	14	tab
op	74:60	0:0	14	->
water	74:62	0:0	14	table
arg	74:69	74:81	13	IVI_VLC_BITS
water	74:69	0:0	14	IVI_VLC_BITS
arg	74:83	74:84	13	1
water	74:83	0:0	14	1
op	74:86	0:0	12	+
water	74:88	0:0	12	1
water	74:89	0:0	12	;
water	75:24	0:0	12	lo
op	75:28	0:0	12	=
call	75:30	75:84	12	get_vlc2
arg	75:39	75:41	13	gb
water	75:39	0:0	14	gb
arg	75:43	75:67	13	band->blk_vlc.tab->table
water	75:43	0:0	14	band
op	75:47	0:0	14	->
water	75:49	0:0	14	blk_vlc
op	75:56	0:0	14	.
water	75:57	0:0	14	tab
op	75:60	0:0	14	->
water	75:62	0:0	14	table
arg	75:69	75:81	13	IVI_VLC_BITS
water	75:69	0:0	14	IVI_VLC_BITS
arg	75:83	75:84	13	1
water	75:83	0:0	14	1
water	75:85	0:0	12	;
water	76:24	0:0	12	hi
op	76:28	0:0	12	=
call	76:30	76:84	12	get_vlc2
arg	76:39	76:41	13	gb
water	76:39	0:0	14	gb
arg	76:43	76:67	13	band->blk_vlc.tab->table
water	76:43	0:0	14	band
op	76:47	0:0	14	->
water	76:49	0:0	14	blk_vlc
op	76:56	0:0	14	.
water	76:57	0:0	14	tab
op	76:60	0:0	14	->
water	76:62	0:0	14	table
arg	76:69	76:81	13	IVI_VLC_BITS
water	76:69	0:0	14	IVI_VLC_BITS
arg	76:83	76:84	13	1
water	76:83	0:0	14	1
water	76:85	0:0	12	;
water	77:24	0:0	12	val
op	77:28	0:0	12	=
call	77:30	77:57	12	IVI_TOSIGNED
arg	77:43	77:57	13	(hi<<6)|lo
water	77:43	0:0	14	(
water	77:44	0:0	14	hi
op	77:47	0:0	14	<<
water	77:50	0:0	14	6
water	77:51	0:0	14	)
op	77:53	0:0	14	|
water	77:55	0:0	14	lo
water	77:58	0:0	12	;
water	78:20	0:0	12	}
else	78:22	85:20	10
stmts	78:27	85:20	11	
water	78:27	0:0	12	{
if	79:24	82:24	12	(sym >= 256 U)
cond	79:28	79:38	13	sym >= 256 U
water	79:28	0:0	14	sym
op	79:32	0:0	14	>=
water	79:35	0:0	14	256
water	79:38	0:0	14	U
stmts	79:41	82:24	13	
water	79:41	0:0	14	{
call	80:28	80:92	14	av_log
arg	80:35	80:39	15	NULL
water	80:35	0:0	16	NULL
arg	80:41	80:53	15	AV_LOG_ERROR
water	80:41	0:0	16	AV_LOG_ERROR
arg	80:55	80:87	15	"Invalid sym encountered: %d.\n"
water	80:55	0:0	16	"Invalid sym encountered: %d.\n"
arg	80:89	80:92	15	sym
water	80:89	0:0	16	sym
water	80:93	0:0	14	;
return	81:28	81:37	14	-1
op	81:35	0:0	15	-
water	81:36	0:0	15	1
water	82:24	0:0	14	}
water	83:24	0:0	12	run
op	83:28	0:0	12	=
water	83:30	0:0	12	rvmap
op	83:35	0:0	12	->
water	83:37	0:0	12	runtab
op	83:43	0:0	12	[
water	83:44	0:0	12	sym
op	83:47	0:0	12	]
water	83:48	0:0	12	;
water	84:24	0:0	12	val
op	84:28	0:0	12	=
water	84:30	0:0	12	rvmap
op	84:35	0:0	12	->
water	84:37	0:0	12	valtab
op	84:43	0:0	12	[
water	84:44	0:0	12	sym
op	84:47	0:0	12	]
water	84:48	0:0	12	;
water	85:20	0:0	12	}
water	88:20	0:0	10	scan_pos
op	88:29	0:0	10	+=
water	88:32	0:0	10	run
water	88:35	0:0	10	;
if	89:20	90:29	10	(scan_pos >= num_coeffs)
cond	89:24	89:36	11	scan_pos >= num_coeffs
water	89:24	0:0	12	scan_pos
op	89:33	0:0	12	>=
water	89:36	0:0	12	num_coeffs
stmts	90:24	90:29	11	
break	90:24	90:29	12	
water	91:20	0:0	10	pos
op	91:24	0:0	10	=
water	91:26	0:0	10	band
op	91:30	0:0	10	->
water	91:32	0:0	10	scan
op	91:36	0:0	10	[
water	91:37	0:0	10	scan_pos
op	91:45	0:0	10	]
water	91:46	0:0	10	;
if	93:20	94:63	10	(! val)
cond	93:24	93:25	11	! val
op	93:24	0:0	12	!
water	93:25	0:0	12	val
stmts	94:24	94:63	11	
call	94:24	94:62	12	av_dlog
arg	94:32	94:36	13	NULL
water	94:32	0:0	14	NULL
arg	94:38	94:62	13	"Val = 0 encountered!\n"
water	94:38	0:0	14	"Val = 0 encountered!\n"
water	94:63	0:0	12	;
water	96:20	0:0	10	q
op	96:22	0:0	10	=
water	96:24	0:0	10	(
water	96:25	0:0	10	base_tab
op	96:33	0:0	10	[
water	96:34	0:0	10	pos
op	96:37	0:0	10	]
op	96:39	0:0	10	*
water	96:41	0:0	10	quant
water	96:46	0:0	10	)
op	96:48	0:0	10	>>
water	96:51	0:0	10	9
water	96:52	0:0	10	;
if	97:20	98:74	10	(q > 1)
cond	97:24	97:28	11	q > 1
water	97:24	0:0	12	q
op	97:26	0:0	12	>
water	97:28	0:0	12	1
stmts	98:24	98:74	11	
water	98:24	0:0	12	val
op	98:28	0:0	12	=
water	98:30	0:0	12	val
op	98:34	0:0	12	*
water	98:36	0:0	12	q
op	98:38	0:0	12	+
call	98:40	98:50	12	FFSIGN
arg	98:47	98:50	13	val
water	98:47	0:0	14	val
op	98:52	0:0	12	*
water	98:54	0:0	12	(
water	98:55	0:0	12	(
water	98:56	0:0	12	(
water	98:57	0:0	12	q
op	98:59	0:0	12	^
water	98:61	0:0	12	1
water	98:62	0:0	12	)
op	98:64	0:0	12	-
water	98:66	0:0	12	1
water	98:67	0:0	12	)
op	98:69	0:0	12	>>
water	98:72	0:0	12	1
water	98:73	0:0	12	)
water	98:74	0:0	12	;
water	99:20	0:0	10	trvec
op	99:25	0:0	10	[
water	99:26	0:0	10	pos
op	99:29	0:0	10	]
op	99:31	0:0	10	=
water	99:33	0:0	10	val
water	99:36	0:0	10	;
water	100:20	0:0	10	col_flags
op	100:29	0:0	10	[
water	100:30	0:0	10	pos
op	100:34	0:0	10	&
water	100:36	0:0	10	col_mask
op	100:44	0:0	10	]
op	100:46	0:0	10	|=
op	100:49	0:0	10	!
op	100:50	0:0	10	!
water	100:51	0:0	10	val
water	100:54	0:0	10	;
water	101:16	0:0	10	}
if	103:16	104:29	8	(scan_pos >= num_coeffs && sym != rvmap -> eob_sym)
cond	103:20	103:60	9	scan_pos >= num_coeffs && sym != rvmap -> eob_sym
water	103:20	0:0	10	scan_pos
op	103:29	0:0	10	>=
water	103:32	0:0	10	num_coeffs
op	103:43	0:0	10	&&
water	103:46	0:0	10	sym
op	103:50	0:0	10	!=
water	103:53	0:0	10	rvmap
op	103:58	0:0	10	->
water	103:60	0:0	10	eob_sym
stmts	104:20	104:29	9	
return	104:20	104:29	10	-1
op	104:27	0:0	11	-
water	104:28	0:0	11	1
if	107:16	111:16	8	(is_intra && band -> is_2d_trans)
cond	107:20	107:38	9	is_intra && band -> is_2d_trans
water	107:20	0:0	10	is_intra
op	107:29	0:0	10	&&
water	107:32	0:0	10	band
op	107:36	0:0	10	->
water	107:38	0:0	10	is_2d_trans
stmts	107:51	111:16	9	
water	107:51	0:0	10	{
water	108:20	0:0	10	prev_dc
op	108:33	0:0	10	+=
water	108:36	0:0	10	trvec
op	108:41	0:0	10	[
water	108:42	0:0	10	0
op	108:43	0:0	10	]
water	108:44	0:0	10	;
water	109:20	0:0	10	trvec
op	109:25	0:0	10	[
water	109:26	0:0	10	0
op	109:27	0:0	10	]
op	109:34	0:0	10	=
water	109:36	0:0	10	prev_dc
water	109:43	0:0	10	;
water	110:20	0:0	10	col_flags
op	110:29	0:0	10	[
water	110:30	0:0	10	0
op	110:31	0:0	10	]
op	110:33	0:0	10	|=
op	110:36	0:0	10	!
op	110:37	0:0	10	!
water	110:38	0:0	10	prev_dc
water	110:45	0:0	10	;
water	111:16	0:0	10	}
call	114:16	115:58	8	band->inv_transform
arg	114:36	114:41	9	trvec
water	114:36	0:0	10	trvec
arg	114:43	114:63	9	band->buf+buf_offs
water	114:43	0:0	10	band
op	114:47	0:0	10	->
water	114:49	0:0	10	buf
op	114:53	0:0	10	+
water	114:55	0:0	10	buf_offs
arg	115:36	115:47	9	band->pitch
water	115:36	0:0	10	band
op	115:40	0:0	10	->
water	115:42	0:0	10	pitch
arg	115:49	115:58	9	col_flags
water	115:49	0:0	10	col_flags
water	115:59	0:0	8	;
if	118:16	121:60	8	(! is_intra)
cond	118:20	118:21	9	! is_intra
op	118:20	0:0	10	!
water	118:21	0:0	10	is_intra
stmts	119:20	121:60	9	
call	119:20	121:59	10	mc_with_delta_func
arg	119:39	119:59	11	band->buf+buf_offs
water	119:39	0:0	12	band
op	119:43	0:0	12	->
water	119:45	0:0	12	buf
op	119:49	0:0	12	+
water	119:51	0:0	12	buf_offs
arg	120:39	120:91	11	band->ref_buf+buf_offs+mv_y*band->pitch+mv_x
water	120:39	0:0	12	band
op	120:43	0:0	12	->
water	120:45	0:0	12	ref_buf
op	120:53	0:0	12	+
water	120:55	0:0	12	buf_offs
op	120:64	0:0	12	+
water	120:66	0:0	12	mv_y
op	120:71	0:0	12	*
water	120:73	0:0	12	band
op	120:77	0:0	12	->
water	120:79	0:0	12	pitch
op	120:85	0:0	12	+
water	120:87	0:0	12	mv_x
arg	121:39	121:50	11	band->pitch
water	121:39	0:0	12	band
op	121:43	0:0	12	->
water	121:45	0:0	12	pitch
arg	121:52	121:59	11	mc_type
water	121:52	0:0	12	mc_type
water	121:60	0:0	10	;
water	122:12	0:0	8	}
else	122:14	133:12	6
stmts	122:19	133:12	7	
water	122:19	0:0	8	{
if	126:16	129:16	8	(is_intra && band -> dc_transform)
cond	126:20	126:38	9	is_intra && band -> dc_transform
water	126:20	0:0	10	is_intra
op	126:29	0:0	10	&&
water	126:32	0:0	10	band
op	126:36	0:0	10	->
water	126:38	0:0	10	dc_transform
stmts	126:52	129:16	9	
water	126:52	0:0	10	{
call	127:20	128:60	10	band->dc_transform
arg	127:39	127:47	11	&prev_dc
op	127:39	0:0	12	&
water	127:40	0:0	12	prev_dc
arg	127:49	127:69	11	band->buf+buf_offs
water	127:49	0:0	12	band
op	127:53	0:0	12	->
water	127:55	0:0	12	buf
op	127:59	0:0	12	+
water	127:61	0:0	12	buf_offs
arg	128:39	128:50	11	band->pitch
water	128:39	0:0	12	band
op	128:43	0:0	12	->
water	128:45	0:0	12	pitch
arg	128:52	128:60	11	blk_size
water	128:52	0:0	12	blk_size
water	128:61	0:0	10	;
water	129:16	0:0	10	}
else	129:18	132:58	8
stmts	130:20	132:58	9	
call	130:20	132:57	10	mc_no_delta_func
arg	130:37	130:57	11	band->buf+buf_offs
water	130:37	0:0	12	band
op	130:41	0:0	12	->
water	130:43	0:0	12	buf
op	130:47	0:0	12	+
water	130:49	0:0	12	buf_offs
arg	131:37	131:89	11	band->ref_buf+buf_offs+mv_y*band->pitch+mv_x
water	131:37	0:0	12	band
op	131:41	0:0	12	->
water	131:43	0:0	12	ref_buf
op	131:51	0:0	12	+
water	131:53	0:0	12	buf_offs
op	131:62	0:0	12	+
water	131:64	0:0	12	mv_y
op	131:69	0:0	12	*
water	131:71	0:0	12	band
op	131:75	0:0	12	->
water	131:77	0:0	12	pitch
op	131:83	0:0	12	+
water	131:85	0:0	12	mv_x
arg	132:37	132:48	11	band->pitch
water	132:37	0:0	12	band
op	132:41	0:0	12	->
water	132:43	0:0	12	pitch
arg	132:50	132:57	11	mc_type
water	132:50	0:0	12	mc_type
water	132:58	0:0	10	;
water	133:12	0:0	8	}
water	135:12	0:0	6	cbp
op	135:16	0:0	6	>>=
water	135:20	0:0	6	1
water	135:21	0:0	6	;
water	136:8	0:0	6	}
water	137:4	0:0	4	}
call	139:4	139:21	2	align_get_bits
arg	139:19	139:21	3	gb
water	139:19	0:0	4	gb
water	139:22	0:0	2	;
return	141:4	141:12	2	0
water	141:11	0:0	3	0

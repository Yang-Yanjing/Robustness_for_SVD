func	11:0	45:0	0	static int	decode_residual_block
params	11:32	0:0	1	
param	11:33	11:46	2	AVSContext *	h
param	11:48	11:65	2	GetBitContext *	gb
param	12:33	12:58	2	const struct dec_2dvlc *	r
param	12:60	12:80	2	int	esc_golomb_order
param	13:33	13:39	2	int	qp
param	13:41	13:53	2	uint8_t *	dst
param	13:55	13:65	2	int	stride
stmnts	0:0	44:12	1	
decl	14:4	14:49	2	int	i
water	14:9	0:0	2	,
decl	14:4	14:49	2	int	level_code
water	14:21	0:0	2	,
decl	14:4	14:49	2	int	esc_code
water	14:31	0:0	2	,
decl	14:4	14:49	2	int	level
water	14:38	0:0	2	,
decl	14:4	14:49	2	int	run
water	14:43	0:0	2	,
decl	14:4	14:49	2	int	mask
decl	15:4	15:25	2	DCTELEM	level_buf[65]
decl	16:4	16:23	2	uint8_t	run_buf[65]
decl	17:4	17:29	2	DCTELEM	*block
op	17:19	0:0	2	=
water	17:21	0:0	2	h
op	17:22	0:0	2	->
water	17:24	0:0	2	block
for	19:4	38:4	2	(i = 0 ;i < 65;i ++)
forinit	19:8	19:11	3	i = 0 ;
water	19:8	0:0	4	i
op	19:9	0:0	4	=
water	19:10	0:0	4	0
water	19:11	0:0	4	;
cond	19:12	19:14	3	i < 65
water	19:12	0:0	4	i
op	19:13	0:0	4	<
water	19:14	0:0	4	65
forexpr	19:17	19:18	3	i ++
water	19:17	0:0	4	i
op	19:18	0:0	4	++
stmts	19:22	38:4	3	
water	19:22	0:0	4	{
water	20:8	0:0	4	level_code
op	20:19	0:0	4	=
call	20:21	20:51	4	get_ue_code
arg	20:33	20:35	5	gb
water	20:33	0:0	6	gb
arg	20:36	20:51	5	r->golomb_order
water	20:36	0:0	6	r
op	20:37	0:0	6	->
water	20:39	0:0	6	golomb_order
water	20:52	0:0	4	;
if	21:8	29:8	4	(level_code >= ESCAPE_CODE)
cond	21:11	21:25	5	level_code >= ESCAPE_CODE
water	21:11	0:0	6	level_code
op	21:22	0:0	6	>=
water	21:25	0:0	6	ESCAPE_CODE
stmts	21:38	29:8	5	
water	21:38	0:0	6	{
water	22:12	0:0	6	run
op	22:16	0:0	6	=
water	22:18	0:0	6	(
water	22:19	0:0	6	(
water	22:20	0:0	6	level_code
op	22:31	0:0	6	-
water	22:33	0:0	6	ESCAPE_CODE
water	22:44	0:0	6	)
op	22:46	0:0	6	>>
water	22:49	0:0	6	1
water	22:50	0:0	6	)
op	22:52	0:0	6	+
water	22:54	0:0	6	1
water	22:55	0:0	6	;
water	23:12	0:0	6	esc_code
op	23:21	0:0	6	=
call	23:23	23:54	6	get_ue_code
arg	23:35	23:37	7	gb
water	23:35	0:0	8	gb
arg	23:38	23:54	7	esc_golomb_order
water	23:38	0:0	8	esc_golomb_order
water	23:55	0:0	6	;
water	24:12	0:0	6	level
op	24:18	0:0	6	=
water	24:20	0:0	6	esc_code
op	24:29	0:0	6	+
water	24:31	0:0	6	(
water	24:32	0:0	6	run
op	24:36	0:0	6	>
water	24:38	0:0	6	r
op	24:39	0:0	6	->
water	24:41	0:0	6	max_run
water	24:49	0:0	6	?
water	24:51	0:0	6	1
water	24:53	0:0	6	:
water	24:55	0:0	6	r
op	24:56	0:0	6	->
water	24:58	0:0	6	level_add
op	24:67	0:0	6	[
water	24:68	0:0	6	run
op	24:71	0:0	6	]
water	24:72	0:0	6	)
water	24:73	0:0	6	;
while	25:12	26:19	6	(level > r -> inc_limit)
cond	25:18	25:29	7	level > r -> inc_limit
water	25:18	0:0	8	level
op	25:24	0:0	8	>
water	25:26	0:0	8	r
op	25:27	0:0	8	->
water	25:29	0:0	8	inc_limit
stmts	26:16	26:19	7	
water	26:16	0:0	8	r
op	26:17	0:0	8	++
water	26:19	0:0	8	;
water	27:12	0:0	6	mask
op	27:17	0:0	6	=
op	27:19	0:0	6	-
water	27:20	0:0	6	(
water	27:21	0:0	6	level_code
op	27:32	0:0	6	&
water	27:34	0:0	6	1
water	27:35	0:0	6	)
water	27:36	0:0	6	;
water	28:12	0:0	6	level
op	28:18	0:0	6	=
water	28:20	0:0	6	(
water	28:21	0:0	6	level
op	28:26	0:0	6	^
water	28:27	0:0	6	mask
water	28:31	0:0	6	)
op	28:33	0:0	6	-
water	28:35	0:0	6	mask
water	28:39	0:0	6	;
water	29:8	0:0	6	}
else	29:10	35:8	4
stmts	29:15	35:8	5	
water	29:15	0:0	6	{
water	30:12	0:0	6	level
op	30:18	0:0	6	=
water	30:20	0:0	6	r
op	30:21	0:0	6	->
water	30:23	0:0	6	rltab
op	30:28	0:0	6	[
water	30:29	0:0	6	level_code
op	30:39	0:0	6	]
op	30:40	0:0	6	[
water	30:41	0:0	6	0
op	30:42	0:0	6	]
water	30:43	0:0	6	;
if	31:12	32:21	6	(! level)
cond	31:15	31:16	7	! level
op	31:15	0:0	8	!
water	31:16	0:0	8	level
stmts	32:16	32:21	7	
break	32:16	32:21	8	
water	33:12	0:0	6	run
op	33:18	0:0	6	=
water	33:20	0:0	6	r
op	33:21	0:0	6	->
water	33:23	0:0	6	rltab
op	33:28	0:0	6	[
water	33:29	0:0	6	level_code
op	33:39	0:0	6	]
op	33:40	0:0	6	[
water	33:41	0:0	6	1
op	33:42	0:0	6	]
water	33:43	0:0	6	;
water	34:12	0:0	6	r
op	34:14	0:0	6	+=
water	34:17	0:0	6	r
op	34:18	0:0	6	->
water	34:20	0:0	6	rltab
op	34:25	0:0	6	[
water	34:26	0:0	6	level_code
op	34:36	0:0	6	]
op	34:37	0:0	6	[
water	34:38	0:0	6	2
op	34:39	0:0	6	]
water	34:40	0:0	6	;
water	35:8	0:0	6	}
water	36:8	0:0	4	level_buf
op	36:17	0:0	4	[
water	36:18	0:0	4	i
op	36:19	0:0	4	]
op	36:21	0:0	4	=
water	36:23	0:0	4	level
water	36:28	0:0	4	;
water	37:8	0:0	4	run_buf
op	37:15	0:0	4	[
water	37:16	0:0	4	i
op	37:17	0:0	4	]
op	37:19	0:0	4	=
water	37:21	0:0	4	run
water	37:24	0:0	4	;
water	38:4	0:0	4	}
if	39:4	41:17	2	(dequant (h ,level_buf ,run_buf ,block ,ff_cavs_dequant_mul [ qp ] ,ff_cavs_dequant_shift [ qp ] ,i ))
cond	39:7	40:43	3	dequant (h ,level_buf ,run_buf ,block ,ff_cavs_dequant_mul [ qp ] ,ff_cavs_dequant_shift [ qp ] ,i )
call	39:7	40:43	4	dequant
arg	39:15	39:16	5	h
water	39:15	0:0	6	h
arg	39:17	39:26	5	level_buf
water	39:17	0:0	6	level_buf
arg	39:28	39:35	5	run_buf
water	39:28	0:0	6	run_buf
arg	39:37	39:42	5	block
water	39:37	0:0	6	block
arg	39:44	39:67	5	ff_cavs_dequant_mul[qp]
water	39:44	0:0	6	ff_cavs_dequant_mul
op	39:63	0:0	6	[
water	39:64	0:0	6	qp
op	39:66	0:0	6	]
arg	40:15	40:40	5	ff_cavs_dequant_shift[qp]
water	40:15	0:0	6	ff_cavs_dequant_shift
op	40:36	0:0	6	[
water	40:37	0:0	6	qp
op	40:39	0:0	6	]
arg	40:42	40:43	5	i
water	40:42	0:0	6	i
stmts	41:8	41:17	3	
return	41:8	41:17	4	-1
op	41:15	0:0	5	-
water	41:16	0:0	5	1
call	42:4	42:43	2	h->cdsp.cavs_idct8_add
arg	42:27	42:30	3	dst
water	42:27	0:0	4	dst
arg	42:31	42:36	3	block
water	42:31	0:0	4	block
arg	42:37	42:43	3	stride
water	42:37	0:0	4	stride
water	42:44	0:0	2	;
call	43:4	43:30	2	h->s.dsp.clear_block
arg	43:25	43:30	3	block
water	43:25	0:0	4	block
water	43:31	0:0	2	;
return	44:4	44:12	2	0
water	44:11	0:0	3	0

func	1:8	84:0	0	void	ff_idctdsp_init
params	1:28	0:0	1	
param	1:29	1:46	2	IDCTDSPContext *	c
param	1:48	1:69	2	AVCodecContext *	avctx
stmnts	3:4	83:47	1	
water	3:4	0:0	2	const
water	3:10	0:0	2	unsigned
water	3:19	0:0	2	high_bit_depth
op	3:34	0:0	2	=
water	3:36	0:0	2	avctx
op	3:41	0:0	2	->
water	3:43	0:0	2	bits_per_raw_sample
op	3:63	0:0	2	>
water	3:65	0:0	2	8
water	3:66	0:0	2	;
if	5:4	10:4	2	(avctx -> lowres == 1)
cond	5:8	5:23	3	avctx -> lowres == 1
water	5:8	0:0	4	avctx
op	5:13	0:0	4	->
water	5:15	0:0	4	lowres
op	5:21	0:0	4	==
water	5:23	0:0	4	1
stmts	5:26	10:4	3	
water	5:26	0:0	4	{
water	6:8	0:0	4	c
op	6:9	0:0	4	->
water	6:11	0:0	4	idct_put
op	6:21	0:0	4	=
water	6:23	0:0	4	ff_jref_idct4_put
water	6:40	0:0	4	;
water	7:8	0:0	4	c
op	7:9	0:0	4	->
water	7:11	0:0	4	idct_add
op	7:21	0:0	4	=
water	7:23	0:0	4	ff_jref_idct4_add
water	7:40	0:0	4	;
water	8:8	0:0	4	c
op	8:9	0:0	4	->
water	8:11	0:0	4	idct
op	8:21	0:0	4	=
water	8:23	0:0	4	ff_j_rev_dct4
water	8:36	0:0	4	;
water	9:8	0:0	4	c
op	9:9	0:0	4	->
water	9:11	0:0	4	perm_type
op	9:21	0:0	4	=
water	9:23	0:0	4	FF_IDCT_PERM_NONE
water	9:40	0:0	4	;
water	10:4	0:0	4	}
else	10:6	15:4	2
stmts	10:11	15:4	3	
if	10:11	15:4	4	(avctx -> lowres == 2)
cond	10:15	10:30	5	avctx -> lowres == 2
water	10:15	0:0	6	avctx
op	10:20	0:0	6	->
water	10:22	0:0	6	lowres
op	10:28	0:0	6	==
water	10:30	0:0	6	2
stmts	10:33	15:4	5	
water	10:33	0:0	6	{
water	11:8	0:0	6	c
op	11:9	0:0	6	->
water	11:11	0:0	6	idct_put
op	11:21	0:0	6	=
water	11:23	0:0	6	ff_jref_idct2_put
water	11:40	0:0	6	;
water	12:8	0:0	6	c
op	12:9	0:0	6	->
water	12:11	0:0	6	idct_add
op	12:21	0:0	6	=
water	12:23	0:0	6	ff_jref_idct2_add
water	12:40	0:0	6	;
water	13:8	0:0	6	c
op	13:9	0:0	6	->
water	13:11	0:0	6	idct
op	13:21	0:0	6	=
water	13:23	0:0	6	ff_j_rev_dct2
water	13:36	0:0	6	;
water	14:8	0:0	6	c
op	14:9	0:0	6	->
water	14:11	0:0	6	perm_type
op	14:21	0:0	6	=
water	14:23	0:0	6	FF_IDCT_PERM_NONE
water	14:40	0:0	6	;
water	15:4	0:0	6	}
else	15:6	20:4	2
stmts	15:11	20:4	3	
if	15:11	20:4	4	(avctx -> lowres == 3)
cond	15:15	15:30	5	avctx -> lowres == 3
water	15:15	0:0	6	avctx
op	15:20	0:0	6	->
water	15:22	0:0	6	lowres
op	15:28	0:0	6	==
water	15:30	0:0	6	3
stmts	15:33	20:4	5	
water	15:33	0:0	6	{
water	16:8	0:0	6	c
op	16:9	0:0	6	->
water	16:11	0:0	6	idct_put
op	16:21	0:0	6	=
water	16:23	0:0	6	ff_jref_idct1_put
water	16:40	0:0	6	;
water	17:8	0:0	6	c
op	17:9	0:0	6	->
water	17:11	0:0	6	idct_add
op	17:21	0:0	6	=
water	17:23	0:0	6	ff_jref_idct1_add
water	17:40	0:0	6	;
water	18:8	0:0	6	c
op	18:9	0:0	6	->
water	18:11	0:0	6	idct
op	18:21	0:0	6	=
water	18:23	0:0	6	ff_j_rev_dct1
water	18:36	0:0	6	;
water	19:8	0:0	6	c
op	19:9	0:0	6	->
water	19:11	0:0	6	perm_type
op	19:21	0:0	6	=
water	19:23	0:0	6	FF_IDCT_PERM_NONE
water	19:40	0:0	6	;
water	20:4	0:0	6	}
else	20:6	60:4	2
stmts	20:11	60:4	3	
water	20:11	0:0	4	{
if	21:8	34:8	4	(avctx -> bits_per_raw_sample == 10 || avctx -> bits_per_raw_sample == 9)
cond	21:12	21:78	5	avctx -> bits_per_raw_sample == 10 || avctx -> bits_per_raw_sample == 9
water	21:12	0:0	6	avctx
op	21:17	0:0	6	->
water	21:19	0:0	6	bits_per_raw_sample
op	21:39	0:0	6	==
water	21:42	0:0	6	10
op	21:45	0:0	6	||
water	21:48	0:0	6	avctx
op	21:53	0:0	6	->
water	21:55	0:0	6	bits_per_raw_sample
op	21:75	0:0	6	==
water	21:78	0:0	6	9
stmts	21:81	34:8	5	
water	21:81	0:0	6	{
if	24:12	28:12	6	(c -> mpeg4_studio_profile)
cond	24:16	24:19	7	c -> mpeg4_studio_profile
water	24:16	0:0	8	c
op	24:17	0:0	8	->
water	24:19	0:0	8	mpeg4_studio_profile
stmts	24:41	28:12	7	
water	24:41	0:0	8	{
water	25:16	0:0	8	c
op	25:17	0:0	8	->
water	25:19	0:0	8	idct_put
op	25:41	0:0	8	=
water	25:43	0:0	8	ff_simple_idct_put_int32_10bit
water	25:73	0:0	8	;
water	26:16	0:0	8	c
op	26:17	0:0	8	->
water	26:19	0:0	8	idct_add
op	26:41	0:0	8	=
water	26:43	0:0	8	NULL
water	26:47	0:0	8	;
water	27:16	0:0	8	c
op	27:17	0:0	8	->
water	27:19	0:0	8	idct
op	27:41	0:0	8	=
water	27:43	0:0	8	NULL
water	27:47	0:0	8	;
water	28:12	0:0	8	}
else	28:14	32:12	6
stmts	28:19	32:12	7	
water	28:19	0:0	8	{
water	29:16	0:0	8	c
op	29:17	0:0	8	->
water	29:19	0:0	8	idct_put
op	29:41	0:0	8	=
water	29:43	0:0	8	ff_simple_idct_put_int16_10bit
water	29:73	0:0	8	;
water	30:16	0:0	8	c
op	30:17	0:0	8	->
water	30:19	0:0	8	idct_add
op	30:41	0:0	8	=
water	30:43	0:0	8	ff_simple_idct_add_int16_10bit
water	30:73	0:0	8	;
water	31:16	0:0	8	c
op	31:17	0:0	8	->
water	31:19	0:0	8	idct
op	31:41	0:0	8	=
water	31:43	0:0	8	ff_simple_idct_int16_10bit
water	31:69	0:0	8	;
water	32:12	0:0	8	}
water	33:12	0:0	6	c
op	33:13	0:0	6	->
water	33:15	0:0	6	perm_type
op	33:37	0:0	6	=
water	33:39	0:0	6	FF_IDCT_PERM_NONE
water	33:56	0:0	6	;
water	34:8	0:0	6	}
else	34:10	39:8	4
stmts	34:15	39:8	5	
if	34:15	39:8	6	(avctx -> bits_per_raw_sample == 12)
cond	34:19	34:49	7	avctx -> bits_per_raw_sample == 12
water	34:19	0:0	8	avctx
op	34:24	0:0	8	->
water	34:26	0:0	8	bits_per_raw_sample
op	34:46	0:0	8	==
water	34:49	0:0	8	12
stmts	34:53	39:8	7	
water	34:53	0:0	8	{
water	35:12	0:0	8	c
op	35:13	0:0	8	->
water	35:15	0:0	8	idct_put
op	35:37	0:0	8	=
water	35:39	0:0	8	ff_simple_idct_put_int16_12bit
water	35:69	0:0	8	;
water	36:12	0:0	8	c
op	36:13	0:0	8	->
water	36:15	0:0	8	idct_add
op	36:37	0:0	8	=
water	36:39	0:0	8	ff_simple_idct_add_int16_12bit
water	36:69	0:0	8	;
water	37:12	0:0	8	c
op	37:13	0:0	8	->
water	37:15	0:0	8	idct
op	37:37	0:0	8	=
water	37:39	0:0	8	ff_simple_idct_int16_12bit
water	37:65	0:0	8	;
water	38:12	0:0	8	c
op	38:13	0:0	8	->
water	38:15	0:0	8	perm_type
op	38:37	0:0	8	=
water	38:39	0:0	8	FF_IDCT_PERM_NONE
water	38:56	0:0	8	;
water	39:8	0:0	8	}
else	39:10	59:8	4
stmts	39:15	59:8	5	
water	39:15	0:0	6	{
if	40:12	46:12	6	(avctx -> idct_algo == FF_IDCT_INT)
cond	40:16	40:36	7	avctx -> idct_algo == FF_IDCT_INT
water	40:16	0:0	8	avctx
op	40:21	0:0	8	->
water	40:23	0:0	8	idct_algo
op	40:33	0:0	8	==
water	40:36	0:0	8	FF_IDCT_INT
stmts	40:49	46:12	7	
water	40:49	0:0	8	{
water	41:16	0:0	8	c
op	41:17	0:0	8	->
water	41:19	0:0	8	idct_put
op	41:29	0:0	8	=
water	41:31	0:0	8	ff_jref_idct_put
water	41:47	0:0	8	;
water	42:16	0:0	8	c
op	42:17	0:0	8	->
water	42:19	0:0	8	idct_add
op	42:29	0:0	8	=
water	42:31	0:0	8	ff_jref_idct_add
water	42:47	0:0	8	;
water	43:16	0:0	8	c
op	43:17	0:0	8	->
water	43:19	0:0	8	idct
op	43:29	0:0	8	=
water	43:31	0:0	8	ff_j_rev_dct
water	43:43	0:0	8	;
water	44:16	0:0	8	c
op	44:17	0:0	8	->
water	44:19	0:0	8	perm_type
op	44:29	0:0	8	=
water	44:31	0:0	8	FF_IDCT_PERM_LIBMPEG2
water	44:52	0:0	8	;
water	46:12	0:0	8	}
else	46:14	52:12	6
stmts	46:19	52:12	7	
if	46:19	52:12	8	(avctx -> idct_algo == FF_IDCT_FAAN)
cond	46:23	46:43	9	avctx -> idct_algo == FF_IDCT_FAAN
water	46:23	0:0	10	avctx
op	46:28	0:0	10	->
water	46:30	0:0	10	idct_algo
op	46:40	0:0	10	==
water	46:43	0:0	10	FF_IDCT_FAAN
stmts	46:57	52:12	9	
water	46:57	0:0	10	{
water	47:16	0:0	10	c
op	47:17	0:0	10	->
water	47:19	0:0	10	idct_put
op	47:29	0:0	10	=
water	47:31	0:0	10	ff_faanidct_put
water	47:46	0:0	10	;
water	48:16	0:0	10	c
op	48:17	0:0	10	->
water	48:19	0:0	10	idct_add
op	48:29	0:0	10	=
water	48:31	0:0	10	ff_faanidct_add
water	48:46	0:0	10	;
water	49:16	0:0	10	c
op	49:17	0:0	10	->
water	49:19	0:0	10	idct
op	49:29	0:0	10	=
water	49:31	0:0	10	ff_faanidct
water	49:42	0:0	10	;
water	50:16	0:0	10	c
op	50:17	0:0	10	->
water	50:19	0:0	10	perm_type
op	50:29	0:0	10	=
water	50:31	0:0	10	FF_IDCT_PERM_NONE
water	50:48	0:0	10	;
water	52:12	0:0	10	}
else	52:14	58:12	6
stmts	52:19	58:12	7	
water	52:19	0:0	8	{
water	54:16	0:0	8	c
op	54:17	0:0	8	->
water	54:19	0:0	8	idct_put
op	54:29	0:0	8	=
water	54:31	0:0	8	ff_simple_idct_put_int16_8bit
water	54:60	0:0	8	;
water	55:16	0:0	8	c
op	55:17	0:0	8	->
water	55:19	0:0	8	idct_add
op	55:29	0:0	8	=
water	55:31	0:0	8	ff_simple_idct_add_int16_8bit
water	55:60	0:0	8	;
water	56:16	0:0	8	c
op	56:17	0:0	8	->
water	56:19	0:0	8	idct
op	56:29	0:0	8	=
water	56:31	0:0	8	ff_simple_idct_int16_8bit
water	56:56	0:0	8	;
water	57:16	0:0	8	c
op	57:17	0:0	8	->
water	57:19	0:0	8	perm_type
op	57:29	0:0	8	=
water	57:31	0:0	8	FF_IDCT_PERM_NONE
water	57:48	0:0	8	;
water	58:12	0:0	8	}
water	59:8	0:0	6	}
water	60:4	0:0	4	}
water	62:4	0:0	2	c
op	62:5	0:0	2	->
water	62:7	0:0	2	put_pixels_clamped
op	62:33	0:0	2	=
water	62:35	0:0	2	ff_put_pixels_clamped_c
water	62:58	0:0	2	;
water	63:4	0:0	2	c
op	63:5	0:0	2	->
water	63:7	0:0	2	put_signed_pixels_clamped
op	63:33	0:0	2	=
water	63:35	0:0	2	put_signed_pixels_clamped_c
water	63:62	0:0	2	;
water	64:4	0:0	2	c
op	64:5	0:0	2	->
water	64:7	0:0	2	add_pixels_clamped
op	64:33	0:0	2	=
water	64:35	0:0	2	ff_add_pixels_clamped_c
water	64:58	0:0	2	;
if	66:4	67:35	2	(CONFIG_MPEG4_DECODER && avctx -> idct_algo == FF_IDCT_XVID)
cond	66:8	66:52	3	CONFIG_MPEG4_DECODER && avctx -> idct_algo == FF_IDCT_XVID
water	66:8	0:0	4	CONFIG_MPEG4_DECODER
op	66:29	0:0	4	&&
water	66:32	0:0	4	avctx
op	66:37	0:0	4	->
water	66:39	0:0	4	idct_algo
op	66:49	0:0	4	==
water	66:52	0:0	4	FF_IDCT_XVID
stmts	67:8	67:35	3	
call	67:8	67:34	4	ff_xvid_idct_init
arg	67:26	67:27	5	c
water	67:26	0:0	6	c
arg	67:29	67:34	5	avctx
water	67:29	0:0	6	avctx
water	67:35	0:0	4	;
if	69:4	70:57	2	(ARCH_AARCH64)
cond	69:8	69:8	3	ARCH_AARCH64
water	69:8	0:0	4	ARCH_AARCH64
stmts	70:8	70:57	3	
call	70:8	70:56	4	ff_idctdsp_init_aarch64
arg	70:32	70:33	5	c
water	70:32	0:0	6	c
arg	70:35	70:40	5	avctx
water	70:35	0:0	6	avctx
arg	70:42	70:56	5	high_bit_depth
water	70:42	0:0	6	high_bit_depth
water	70:57	0:0	4	;
if	71:4	72:55	2	(ARCH_ALPHA)
cond	71:8	71:8	3	ARCH_ALPHA
water	71:8	0:0	4	ARCH_ALPHA
stmts	72:8	72:55	3	
call	72:8	72:54	4	ff_idctdsp_init_alpha
arg	72:30	72:31	5	c
water	72:30	0:0	6	c
arg	72:33	72:38	5	avctx
water	72:33	0:0	6	avctx
arg	72:40	72:54	5	high_bit_depth
water	72:40	0:0	6	high_bit_depth
water	72:55	0:0	4	;
if	73:4	74:53	2	(ARCH_ARM)
cond	73:8	73:8	3	ARCH_ARM
water	73:8	0:0	4	ARCH_ARM
stmts	74:8	74:53	3	
call	74:8	74:52	4	ff_idctdsp_init_arm
arg	74:28	74:29	5	c
water	74:28	0:0	6	c
arg	74:31	74:36	5	avctx
water	74:31	0:0	6	avctx
arg	74:38	74:52	5	high_bit_depth
water	74:38	0:0	6	high_bit_depth
water	74:53	0:0	4	;
if	75:4	76:53	2	(ARCH_PPC)
cond	75:8	75:8	3	ARCH_PPC
water	75:8	0:0	4	ARCH_PPC
stmts	76:8	76:53	3	
call	76:8	76:52	4	ff_idctdsp_init_ppc
arg	76:28	76:29	5	c
water	76:28	0:0	6	c
arg	76:31	76:36	5	avctx
water	76:31	0:0	6	avctx
arg	76:38	76:52	5	high_bit_depth
water	76:38	0:0	6	high_bit_depth
water	76:53	0:0	4	;
if	77:4	78:53	2	(ARCH_X86)
cond	77:8	77:8	3	ARCH_X86
water	77:8	0:0	4	ARCH_X86
stmts	78:8	78:53	3	
call	78:8	78:52	4	ff_idctdsp_init_x86
arg	78:28	78:29	5	c
water	78:28	0:0	6	c
arg	78:31	78:36	5	avctx
water	78:31	0:0	6	avctx
arg	78:38	78:52	5	high_bit_depth
water	78:38	0:0	6	high_bit_depth
water	78:53	0:0	4	;
if	79:4	80:54	2	(ARCH_MIPS)
cond	79:8	79:8	3	ARCH_MIPS
water	79:8	0:0	4	ARCH_MIPS
stmts	80:8	80:54	3	
call	80:8	80:53	4	ff_idctdsp_init_mips
arg	80:29	80:30	5	c
water	80:29	0:0	6	c
arg	80:32	80:37	5	avctx
water	80:32	0:0	6	avctx
arg	80:39	80:53	5	high_bit_depth
water	80:39	0:0	6	high_bit_depth
water	80:54	0:0	4	;
call	82:4	83:46	2	ff_init_scantable_permutation
arg	82:34	82:53	3	c->idct_permutation
water	82:34	0:0	4	c
op	82:35	0:0	4	->
water	82:37	0:0	4	idct_permutation
arg	83:34	83:46	3	c->perm_type
water	83:34	0:0	4	c
op	83:35	0:0	4	->
water	83:37	0:0	4	perm_type
water	83:47	0:0	2	;

func	2:0	63:0	0	static int	asf_build_simple_index
params	2:33	0:0	1	
param	2:34	2:52	2	AVFormatContext *	s
param	2:54	2:70	2	int	stream_index
stmnts	0:0	62:14	1	
decl	4:4	4:17	2	ff_asf_guid	g
decl	5:4	5:38	2	ASFContext	*asf
op	5:24	0:0	2	=
water	5:26	0:0	2	s
op	5:27	0:0	2	->
water	5:29	0:0	2	priv_data
decl	6:4	6:42	2	int64_t	current_pos
op	6:24	0:0	2	=
call	6:26	6:41	3	avio_tell
arg	6:36	6:41	4	s->pb
water	6:36	0:0	5	s
op	6:37	0:0	5	->
water	6:39	0:0	5	pb
decl	7:4	7:15	2	int64_t	ret
if	9:4	11:4	2	(( ret =avio_seek (s -> pb ,asf -> data_object_offset + asf -> data_object_size ,SEEK_SET ) ) < 0)
cond	9:7	9:93	3	( ret =avio_seek (s -> pb ,asf -> data_object_offset + asf -> data_object_size ,SEEK_SET ) ) < 0
water	9:7	0:0	4	(
water	9:8	0:0	4	ret
op	9:12	0:0	4	=
call	9:14	9:88	4	avio_seek
arg	9:24	9:29	5	s->pb
water	9:24	0:0	6	s
op	9:25	0:0	6	->
water	9:27	0:0	6	pb
arg	9:31	9:78	5	asf->data_object_offset+asf->data_object_size
water	9:31	0:0	6	asf
op	9:34	0:0	6	->
water	9:36	0:0	6	data_object_offset
op	9:55	0:0	6	+
water	9:57	0:0	6	asf
op	9:60	0:0	6	->
water	9:62	0:0	6	data_object_size
arg	9:80	9:88	5	SEEK_SET
water	9:80	0:0	6	SEEK_SET
water	9:89	0:0	4	)
op	9:91	0:0	4	<
water	9:93	0:0	4	0
stmts	9:96	11:4	3	
water	9:96	0:0	4	{
return	10:8	10:18	4	ret
water	10:15	0:0	5	ret
water	11:4	0:0	4	}
if	13:4	14:16	2	(( ret =ff_get_guid (s -> pb ,& g ) ) < 0)
cond	13:8	13:41	3	( ret =ff_get_guid (s -> pb ,& g ) ) < 0
water	13:8	0:0	4	(
water	13:9	0:0	4	ret
op	13:13	0:0	4	=
call	13:15	13:36	4	ff_get_guid
arg	13:27	13:32	5	s->pb
water	13:27	0:0	6	s
op	13:28	0:0	6	->
water	13:30	0:0	6	pb
arg	13:34	13:36	5	&g
op	13:34	0:0	6	&
water	13:35	0:0	6	g
water	13:37	0:0	4	)
op	13:39	0:0	4	<
water	13:41	0:0	4	0
stmts	14:8	14:16	3	
goto	14:8	14:16	4	end
water	14:13	0:0	5	end
while	18:4	26:4	2	(ff_guidcmp (& g ,& ff_asf_simple_index_header ))
cond	18:11	18:53	3	ff_guidcmp (& g ,& ff_asf_simple_index_header )
call	18:11	18:53	4	ff_guidcmp
arg	18:22	18:24	5	&g
op	18:22	0:0	6	&
water	18:23	0:0	6	g
arg	18:26	18:53	5	&ff_asf_simple_index_header
op	18:26	0:0	6	&
water	18:27	0:0	6	ff_asf_simple_index_header
stmts	18:56	26:4	3	
water	18:56	0:0	4	{
decl	19:8	19:40	4	int64_t	gsize
op	19:22	0:0	4	=
call	19:24	19:39	5	avio_rl64
arg	19:34	19:39	6	s->pb
water	19:34	0:0	7	s
op	19:35	0:0	7	->
water	19:37	0:0	7	pb
if	20:8	22:8	4	(gsize < 24 ||avio_feof (s -> pb ))
cond	20:12	20:41	5	gsize < 24 ||avio_feof (s -> pb )
water	20:12	0:0	6	gsize
op	20:18	0:0	6	<
water	20:20	0:0	6	24
op	20:23	0:0	6	||
call	20:26	20:41	6	avio_feof
arg	20:36	20:41	7	s->pb
water	20:36	0:0	8	s
op	20:37	0:0	8	->
water	20:39	0:0	8	pb
stmts	20:44	22:8	5	
water	20:44	0:0	6	{
goto	21:12	21:20	6	end
water	21:17	0:0	7	end
water	22:8	0:0	6	}
call	23:8	23:35	4	avio_skip
arg	23:18	23:23	5	s->pb
water	23:18	0:0	6	s
op	23:19	0:0	6	->
water	23:21	0:0	6	pb
arg	23:25	23:35	5	gsize-24
water	23:25	0:0	6	gsize
op	23:31	0:0	6	-
water	23:33	0:0	6	24
water	23:36	0:0	4	;
if	24:8	25:20	4	(( ret =ff_get_guid (s -> pb ,& g ) ) < 0)
cond	24:12	24:45	5	( ret =ff_get_guid (s -> pb ,& g ) ) < 0
water	24:12	0:0	6	(
water	24:13	0:0	6	ret
op	24:17	0:0	6	=
call	24:19	24:40	6	ff_get_guid
arg	24:31	24:36	7	s->pb
water	24:31	0:0	8	s
op	24:32	0:0	8	->
water	24:34	0:0	8	pb
arg	24:38	24:40	7	&g
op	24:38	0:0	8	&
water	24:39	0:0	8	g
water	24:41	0:0	6	)
op	24:43	0:0	6	<
water	24:45	0:0	6	0
stmts	25:12	25:20	5	
goto	25:12	25:20	6	end
water	25:17	0:0	7	end
water	26:4	0:0	4	}
water	28:4	0:0	2	{
decl	29:8	29:36	2	int64_t	itime
water	29:21	0:0	2	,
decl	29:8	29:36	2	int64_t	last_pos
op	29:32	0:0	2	=
op	29:34	0:0	2	-
water	29:35	0:0	2	1
decl	30:8	30:20	2	int	pct
water	30:15	0:0	2	,
decl	30:8	30:20	2	int	ict
decl	31:8	31:13	2	int	i
water	32:8	0:0	2	int64_t
water	32:16	0:0	2	av_unused
water	32:26	0:0	2	gsize
op	32:32	0:0	2	=
call	32:34	32:49	2	avio_rl64
arg	32:44	32:49	3	s->pb
water	32:44	0:0	4	s
op	32:45	0:0	4	->
water	32:47	0:0	4	pb
water	32:50	0:0	2	;
if	33:8	34:20	2	(( ret =ff_get_guid (s -> pb ,& g ) ) < 0)
cond	33:12	33:45	3	( ret =ff_get_guid (s -> pb ,& g ) ) < 0
water	33:12	0:0	4	(
water	33:13	0:0	4	ret
op	33:17	0:0	4	=
call	33:19	33:40	4	ff_get_guid
arg	33:31	33:36	5	s->pb
water	33:31	0:0	6	s
op	33:32	0:0	6	->
water	33:34	0:0	6	pb
arg	33:38	33:40	5	&g
op	33:38	0:0	6	&
water	33:39	0:0	6	g
water	33:41	0:0	4	)
op	33:43	0:0	4	<
water	33:45	0:0	4	0
stmts	34:12	34:20	3	
goto	34:12	34:20	4	end
water	34:17	0:0	5	end
water	35:8	0:0	2	itime
op	35:14	0:0	2	=
call	35:16	35:31	2	avio_rl64
arg	35:26	35:31	3	s->pb
water	35:26	0:0	4	s
op	35:27	0:0	4	->
water	35:29	0:0	4	pb
water	35:32	0:0	2	;
water	36:8	0:0	2	pct
op	36:14	0:0	2	=
call	36:16	36:31	2	avio_rl32
arg	36:26	36:31	3	s->pb
water	36:26	0:0	4	s
op	36:27	0:0	4	->
water	36:29	0:0	4	pb
water	36:32	0:0	2	;
water	37:8	0:0	2	ict
op	37:14	0:0	2	=
call	37:16	37:31	2	avio_rl32
arg	37:26	37:31	3	s->pb
water	37:26	0:0	4	s
op	37:27	0:0	4	->
water	37:29	0:0	4	pb
water	37:32	0:0	2	;
call	38:8	39:69	2	av_log
arg	38:15	38:16	3	s
water	38:15	0:0	4	s
arg	38:18	38:30	3	AV_LOG_DEBUG
water	38:18	0:0	4	AV_LOG_DEBUG
arg	39:15	39:52	3	"itime:0x%"PRIx64", pct:%d, ict:%d\n"
water	39:15	0:0	4	"itime:0x%"
water	39:26	0:0	4	PRIx64
water	39:32	0:0	4	", pct:%d, ict:%d\n"
arg	39:54	39:59	3	itime
water	39:54	0:0	4	itime
arg	39:61	39:64	3	pct
water	39:61	0:0	4	pct
arg	39:66	39:69	3	ict
water	39:66	0:0	4	ict
water	39:70	0:0	2	;
for	41:8	54:8	2	(i = 0 ;i < ict;i ++)
forinit	41:13	41:18	3	i = 0 ;
water	41:13	0:0	4	i
op	41:15	0:0	4	=
water	41:17	0:0	4	0
water	41:18	0:0	4	;
cond	41:20	41:24	3	i < ict
water	41:20	0:0	4	i
op	41:22	0:0	4	<
water	41:24	0:0	4	ict
forexpr	41:29	41:30	3	i ++
water	41:29	0:0	4	i
op	41:30	0:0	4	++
stmts	41:34	54:8	3	
water	41:34	0:0	4	{
decl	42:12	42:48	4	int	pktnum
op	42:30	0:0	4	=
call	42:32	42:47	5	avio_rl32
arg	42:42	42:47	6	s->pb
water	42:42	0:0	7	s
op	42:43	0:0	7	->
water	42:45	0:0	7	pb
decl	43:12	43:48	4	int	pktct
op	43:30	0:0	4	=
call	43:32	43:47	5	avio_rl16
arg	43:42	43:47	6	s->pb
water	43:42	0:0	7	s
op	43:43	0:0	7	->
water	43:45	0:0	7	pb
decl	44:12	44:91	4	int64_t	pos
op	44:30	0:0	4	=
water	44:32	0:0	4	s
op	44:33	0:0	4	->
water	44:35	0:0	4	internal
op	44:43	0:0	4	->
water	44:45	0:0	4	data_offset
op	44:57	0:0	4	+
water	44:59	0:0	4	s
op	44:60	0:0	4	->
water	44:62	0:0	4	packet_size
op	44:74	0:0	4	*
water	44:76	0:0	4	(
water	44:77	0:0	4	int64_t
water	44:84	0:0	4	)
water	44:85	0:0	4	pktnum
decl	45:12	45:88	4	int64_t	index_pts
op	45:30	0:0	4	=
call	45:32	45:87	5	FFMAX
arg	45:38	45:84	6	av_rescale(itime,i,10000)-asf->hdr.preroll
call	45:38	45:64	7	av_rescale
arg	45:49	45:54	8	itime
water	45:49	0:0	9	itime
arg	45:56	45:57	8	i
water	45:56	0:0	9	i
arg	45:59	45:64	8	10000
water	45:59	0:0	9	10000
op	45:66	0:0	7	-
water	45:68	0:0	7	asf
op	45:71	0:0	7	->
water	45:73	0:0	7	hdr
op	45:76	0:0	7	.
water	45:77	0:0	7	preroll
arg	45:86	45:87	6	0
water	45:86	0:0	7	0
if	47:12	53:12	4	(pos != last_pos)
cond	47:16	47:23	5	pos != last_pos
water	47:16	0:0	6	pos
op	47:20	0:0	6	!=
water	47:23	0:0	6	last_pos
stmts	47:33	53:12	5	
water	47:33	0:0	6	{
call	48:16	49:47	6	av_log
arg	48:23	48:24	7	s
water	48:23	0:0	8	s
arg	48:26	48:38	7	AV_LOG_DEBUG
water	48:26	0:0	8	AV_LOG_DEBUG
arg	48:40	48:79	7	"pktnum:%d, pktct:%d  pts: %"PRId64"\n"
water	48:40	0:0	8	"pktnum:%d, pktct:%d  pts: %"
water	48:69	0:0	8	PRId64
water	48:75	0:0	8	"\n"
arg	49:23	49:29	7	pktnum
water	49:23	0:0	8	pktnum
arg	49:31	49:36	7	pktct
water	49:31	0:0	8	pktct
arg	49:38	49:47	7	index_pts
water	49:38	0:0	8	index_pts
water	49:48	0:0	6	;
call	50:16	51:70	6	av_add_index_entry
arg	50:35	50:59	7	s->streams[stream_index]
water	50:35	0:0	8	s
op	50:36	0:0	8	->
water	50:38	0:0	8	streams
op	50:45	0:0	8	[
water	50:46	0:0	8	stream_index
op	50:58	0:0	8	]
arg	50:61	50:64	7	pos
water	50:61	0:0	8	pos
arg	50:66	50:75	7	index_pts
water	50:66	0:0	8	index_pts
arg	51:35	51:49	7	s->packet_size
water	51:35	0:0	8	s
op	51:36	0:0	8	->
water	51:38	0:0	8	packet_size
arg	51:51	51:52	7	0
water	51:51	0:0	8	0
arg	51:54	51:70	7	AVINDEX_KEYFRAME
water	51:54	0:0	8	AVINDEX_KEYFRAME
water	51:71	0:0	6	;
water	52:16	0:0	6	last_pos
op	52:25	0:0	6	=
water	52:27	0:0	6	pos
water	52:30	0:0	6	;
water	53:12	0:0	6	}
water	54:8	0:0	4	}
water	55:8	0:0	2	asf
op	55:11	0:0	2	->
water	55:13	0:0	2	index_read
op	55:24	0:0	2	=
water	55:26	0:0	2	ict
op	55:30	0:0	2	>
water	55:32	0:0	2	1
water	55:33	0:0	2	;
water	56:4	0:0	2	}
label	57:0	57:3	2	end :
call	61:4	61:42	2	avio_seek
arg	61:14	61:19	3	s->pb
water	61:14	0:0	4	s
op	61:15	0:0	4	->
water	61:17	0:0	4	pb
arg	61:21	61:32	3	current_pos
water	61:21	0:0	4	current_pos
arg	61:34	61:42	3	SEEK_SET
water	61:34	0:0	4	SEEK_SET
water	61:43	0:0	2	;
return	62:4	62:14	2	ret
water	62:11	0:0	3	ret

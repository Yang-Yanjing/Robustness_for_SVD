func	1:0	57:0	0	int	swri_audio_convert
params	1:22	0:0	1	
param	1:23	1:40	2	AudioConvert *	ctx
param	1:42	1:56	2	AudioData *	out
param	1:58	1:71	2	AudioData *	in
param	1:73	1:80	2	int	len
stmnts	0:0	56:12	1	
decl	3:4	3:10	2	int	ch
decl	4:4	4:13	2	int	off
op	4:11	0:0	2	=
water	4:12	0:0	2	0
decl	5:4	5:60	2	const int	os
op	5:16	0:0	2	=
water	5:18	0:0	2	(
water	5:19	0:0	2	out
op	5:22	0:0	2	->
water	5:24	0:0	2	planar
water	5:31	0:0	2	?
water	5:33	0:0	2	1
water	5:35	0:0	2	:
water	5:36	0:0	2	out
op	5:39	0:0	2	->
water	5:41	0:0	2	ch_count
water	5:49	0:0	2	)
op	5:51	0:0	2	*
water	5:52	0:0	2	out
op	5:55	0:0	2	->
water	5:57	0:0	2	bps
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	misaligned
op	6:24	0:0	2	=
water	6:26	0:0	2	0
water	6:27	0:0	2	;
call	8:4	8:45	2	av_assert0
arg	8:15	8:45	3	ctx->channels==out->ch_count
water	8:15	0:0	4	ctx
op	8:18	0:0	4	->
water	8:20	0:0	4	channels
op	8:29	0:0	4	==
water	8:32	0:0	4	out
op	8:35	0:0	4	->
water	8:37	0:0	4	ch_count
water	8:46	0:0	2	;
if	10:4	16:4	2	(ctx -> in_simd_align_mask)
cond	10:8	10:13	3	ctx -> in_simd_align_mask
water	10:8	0:0	4	ctx
op	10:11	0:0	4	->
water	10:13	0:0	4	in_simd_align_mask
stmts	10:33	16:4	3	
water	10:33	0:0	4	{
decl	11:8	11:50	4	int	planes
op	11:19	0:0	4	=
water	11:21	0:0	4	in
op	11:23	0:0	4	->
water	11:25	0:0	4	planar
water	11:32	0:0	4	?
water	11:34	0:0	4	in
op	11:36	0:0	4	->
water	11:38	0:0	4	ch_count
water	11:47	0:0	4	:
water	11:49	0:0	4	1
water	12:8	0:0	4	unsigned
water	12:17	0:0	4	m
op	12:19	0:0	4	=
water	12:21	0:0	4	0
water	12:22	0:0	4	;
for	13:8	14:37	4	(ch = 0 ;ch < planes;ch ++)
forinit	13:13	13:19	5	ch = 0 ;
water	13:13	0:0	6	ch
op	13:16	0:0	6	=
water	13:18	0:0	6	0
water	13:19	0:0	6	;
cond	13:21	13:26	5	ch < planes
water	13:21	0:0	6	ch
op	13:24	0:0	6	<
water	13:26	0:0	6	planes
forexpr	13:34	13:36	5	ch ++
water	13:34	0:0	6	ch
op	13:36	0:0	6	++
stmts	14:12	14:37	5	
water	14:12	0:0	6	m
op	14:14	0:0	6	|=
water	14:17	0:0	6	(
water	14:18	0:0	6	intptr_t
water	14:26	0:0	6	)
water	14:27	0:0	6	in
op	14:29	0:0	6	->
water	14:31	0:0	6	ch
op	14:33	0:0	6	[
water	14:34	0:0	6	ch
op	14:36	0:0	6	]
water	14:37	0:0	6	;
water	15:8	0:0	4	misaligned
op	15:19	0:0	4	|=
water	15:22	0:0	4	m
op	15:24	0:0	4	&
water	15:26	0:0	4	ctx
op	15:29	0:0	4	->
water	15:31	0:0	4	in_simd_align_mask
water	15:49	0:0	4	;
water	16:4	0:0	4	}
if	17:4	23:4	2	(ctx -> out_simd_align_mask)
cond	17:8	17:13	3	ctx -> out_simd_align_mask
water	17:8	0:0	4	ctx
op	17:11	0:0	4	->
water	17:13	0:0	4	out_simd_align_mask
stmts	17:34	23:4	3	
water	17:34	0:0	4	{
decl	18:8	18:52	4	int	planes
op	18:19	0:0	4	=
water	18:21	0:0	4	out
op	18:24	0:0	4	->
water	18:26	0:0	4	planar
water	18:33	0:0	4	?
water	18:35	0:0	4	out
op	18:38	0:0	4	->
water	18:40	0:0	4	ch_count
water	18:49	0:0	4	:
water	18:51	0:0	4	1
water	19:8	0:0	4	unsigned
water	19:17	0:0	4	m
op	19:19	0:0	4	=
water	19:21	0:0	4	0
water	19:22	0:0	4	;
for	20:8	21:38	4	(ch = 0 ;ch < planes;ch ++)
forinit	20:13	20:19	5	ch = 0 ;
water	20:13	0:0	6	ch
op	20:16	0:0	6	=
water	20:18	0:0	6	0
water	20:19	0:0	6	;
cond	20:21	20:26	5	ch < planes
water	20:21	0:0	6	ch
op	20:24	0:0	6	<
water	20:26	0:0	6	planes
forexpr	20:34	20:36	5	ch ++
water	20:34	0:0	6	ch
op	20:36	0:0	6	++
stmts	21:12	21:38	5	
water	21:12	0:0	6	m
op	21:14	0:0	6	|=
water	21:17	0:0	6	(
water	21:18	0:0	6	intptr_t
water	21:26	0:0	6	)
water	21:27	0:0	6	out
op	21:30	0:0	6	->
water	21:32	0:0	6	ch
op	21:34	0:0	6	[
water	21:35	0:0	6	ch
op	21:37	0:0	6	]
water	21:38	0:0	6	;
water	22:8	0:0	4	misaligned
op	22:19	0:0	4	|=
water	22:22	0:0	4	m
op	22:24	0:0	4	&
water	22:26	0:0	4	ctx
op	22:29	0:0	4	->
water	22:31	0:0	4	out_simd_align_mask
water	22:50	0:0	4	;
water	23:4	0:0	4	}
if	27:4	44:4	2	(ctx -> simd_f && ! ctx -> ch_map && ! misaligned)
cond	27:7	27:39	3	ctx -> simd_f && ! ctx -> ch_map && ! misaligned
water	27:7	0:0	4	ctx
op	27:10	0:0	4	->
water	27:12	0:0	4	simd_f
op	27:19	0:0	4	&&
op	27:22	0:0	4	!
water	27:23	0:0	4	ctx
op	27:26	0:0	4	->
water	27:28	0:0	4	ch_map
op	27:35	0:0	4	&&
op	27:38	0:0	4	!
water	27:39	0:0	4	misaligned
stmts	27:50	44:4	3	
water	27:50	0:0	4	{
water	28:8	0:0	4	off
op	28:12	0:0	4	=
water	28:14	0:0	4	len
op	28:17	0:0	4	&
water	28:18	0:0	4	~15
water	28:21	0:0	4	;
call	29:8	29:25	4	av_assert1
arg	29:19	29:25	5	off>=0
water	29:19	0:0	6	off
op	29:22	0:0	6	>=
water	29:24	0:0	6	0
water	29:26	0:0	4	;
call	30:8	30:27	4	av_assert1
arg	30:19	30:27	5	off<=len
water	30:19	0:0	6	off
op	30:22	0:0	6	<=
water	30:24	0:0	6	len
water	30:28	0:0	4	;
call	31:8	31:72	4	av_assert2
arg	31:19	31:72	5	ctx->channels==SWR_CH_MAX||!in->ch[ctx->channels]
water	31:19	0:0	6	ctx
op	31:22	0:0	6	->
water	31:24	0:0	6	channels
op	31:33	0:0	6	==
water	31:36	0:0	6	SWR_CH_MAX
op	31:47	0:0	6	||
op	31:50	0:0	6	!
water	31:51	0:0	6	in
op	31:53	0:0	6	->
water	31:55	0:0	6	ch
op	31:57	0:0	6	[
water	31:58	0:0	6	ctx
op	31:61	0:0	6	->
water	31:63	0:0	6	channels
op	31:71	0:0	6	]
water	31:73	0:0	4	;
if	32:8	41:8	4	(off > 0)
cond	32:11	32:15	5	off > 0
water	32:11	0:0	6	off
op	32:14	0:0	6	>
water	32:15	0:0	6	0
stmts	32:17	41:8	5	
water	32:17	0:0	6	{
if	33:12	38:12	6	(out -> planar == in -> planar)
cond	33:15	33:34	7	out -> planar == in -> planar
water	33:15	0:0	8	out
op	33:18	0:0	8	->
water	33:20	0:0	8	planar
op	33:27	0:0	8	==
water	33:30	0:0	8	in
op	33:32	0:0	8	->
water	33:34	0:0	8	planar
stmts	33:41	38:12	7	
water	33:41	0:0	8	{
decl	34:16	34:60	8	int	planes
op	34:27	0:0	8	=
water	34:29	0:0	8	out
op	34:32	0:0	8	->
water	34:34	0:0	8	planar
water	34:41	0:0	8	?
water	34:43	0:0	8	out
op	34:46	0:0	8	->
water	34:48	0:0	8	ch_count
water	34:57	0:0	8	:
water	34:59	0:0	8	1
for	35:16	37:16	8	(ch = 0 ;ch < planes;ch ++)
forinit	35:20	35:24	9	ch = 0 ;
water	35:20	0:0	10	ch
op	35:22	0:0	10	=
water	35:23	0:0	10	0
water	35:24	0:0	10	;
cond	35:26	35:29	9	ch < planes
water	35:26	0:0	10	ch
op	35:28	0:0	10	<
water	35:29	0:0	10	planes
forexpr	35:37	35:39	9	ch ++
water	35:37	0:0	10	ch
op	35:39	0:0	10	++
stmts	35:42	37:16	9	
water	35:42	0:0	10	{
call	36:20	36:111	10	ctx->simd_f
arg	36:32	36:42	11	out->ch+ch
water	36:32	0:0	12	out
op	36:35	0:0	12	->
water	36:37	0:0	12	ch
op	36:39	0:0	12	+
water	36:40	0:0	12	ch
arg	36:44	36:71	11	(constuint8_t**)in->ch+ch
water	36:44	0:0	12	(
water	36:45	0:0	12	const
water	36:51	0:0	12	uint8_t
op	36:59	0:0	12	*
op	36:60	0:0	12	*
water	36:61	0:0	12	)
water	36:62	0:0	12	in
op	36:64	0:0	12	->
water	36:66	0:0	12	ch
op	36:68	0:0	12	+
water	36:69	0:0	12	ch
arg	36:73	36:111	11	off*(out->planar?1:out->ch_count)
water	36:73	0:0	12	off
op	36:77	0:0	12	*
water	36:79	0:0	12	(
water	36:80	0:0	12	out
op	36:83	0:0	12	->
water	36:85	0:0	12	planar
water	36:92	0:0	12	?
water	36:94	0:0	12	1
water	36:96	0:0	12	:
water	36:97	0:0	12	out
op	36:100	0:0	12	->
water	36:102	0:0	12	ch_count
water	36:110	0:0	12	)
water	36:112	0:0	10	;
water	37:16	0:0	10	}
water	38:12	0:0	8	}
else	38:13	40:12	6
stmts	38:17	40:12	7	
water	38:17	0:0	8	{
call	39:16	39:66	8	ctx->simd_f
arg	39:28	39:35	9	out->ch
water	39:28	0:0	10	out
op	39:31	0:0	10	->
water	39:33	0:0	10	ch
arg	39:37	39:61	9	(constuint8_t**)in->ch
water	39:37	0:0	10	(
water	39:38	0:0	10	const
water	39:44	0:0	10	uint8_t
op	39:52	0:0	10	*
op	39:53	0:0	10	*
water	39:54	0:0	10	)
water	39:55	0:0	10	in
op	39:57	0:0	10	->
water	39:59	0:0	10	ch
arg	39:63	39:66	9	off
water	39:63	0:0	10	off
water	39:67	0:0	8	;
water	40:12	0:0	8	}
water	41:8	0:0	6	}
if	42:8	43:20	4	(off == len)
cond	42:11	42:18	5	off == len
water	42:11	0:0	6	off
op	42:15	0:0	6	==
water	42:18	0:0	6	len
stmts	43:12	43:20	5	
return	43:12	43:20	6	0
water	43:19	0:0	7	0
water	44:4	0:0	4	}
for	46:4	55:4	2	(ch = 0 ;ch < ctx -> channels;ch ++)
forinit	46:8	46:12	3	ch = 0 ;
water	46:8	0:0	4	ch
op	46:10	0:0	4	=
water	46:11	0:0	4	0
water	46:12	0:0	4	;
cond	46:14	46:22	3	ch < ctx -> channels
water	46:14	0:0	4	ch
op	46:16	0:0	4	<
water	46:17	0:0	4	ctx
op	46:20	0:0	4	->
water	46:22	0:0	4	channels
forexpr	46:32	46:34	3	ch ++
water	46:32	0:0	4	ch
op	46:34	0:0	4	++
stmts	46:37	55:4	3	
water	46:37	0:0	4	{
decl	47:8	47:57	4	const int	ich
op	47:21	0:0	4	=
water	47:23	0:0	4	ctx
op	47:26	0:0	4	->
water	47:28	0:0	4	ch_map
water	47:35	0:0	4	?
water	47:37	0:0	4	ctx
op	47:40	0:0	4	->
water	47:42	0:0	4	ch_map
op	47:48	0:0	4	[
water	47:49	0:0	4	ch
op	47:51	0:0	4	]
water	47:53	0:0	4	:
water	47:55	0:0	4	ch
decl	48:8	48:77	4	const int	is
op	48:20	0:0	4	=
water	48:22	0:0	4	ich
op	48:26	0:0	4	<
water	48:28	0:0	4	0
water	48:30	0:0	4	?
water	48:32	0:0	4	0
water	48:34	0:0	4	:
water	48:36	0:0	4	(
water	48:37	0:0	4	in
op	48:39	0:0	4	->
water	48:41	0:0	4	planar
water	48:48	0:0	4	?
water	48:50	0:0	4	1
water	48:52	0:0	4	:
water	48:54	0:0	4	in
op	48:56	0:0	4	->
water	48:58	0:0	4	ch_count
water	48:66	0:0	4	)
op	48:68	0:0	4	*
water	48:70	0:0	4	in
op	48:72	0:0	4	->
water	48:74	0:0	4	bps
decl	49:8	49:63	4	const uint8_t	*pi
op	49:25	0:0	4	=
water	49:27	0:0	4	ich
op	49:31	0:0	4	<
water	49:33	0:0	4	0
water	49:35	0:0	4	?
water	49:37	0:0	4	ctx
op	49:40	0:0	4	->
water	49:42	0:0	4	silence
water	49:50	0:0	4	:
water	49:52	0:0	4	in
op	49:54	0:0	4	->
water	49:56	0:0	4	ch
op	49:58	0:0	4	[
water	49:59	0:0	4	ich
op	49:62	0:0	4	]
decl	50:8	50:38	4	uint8_t	*po
op	50:25	0:0	4	=
water	50:27	0:0	4	out
op	50:30	0:0	4	->
water	50:32	0:0	4	ch
op	50:34	0:0	4	[
water	50:35	0:0	4	ch
op	50:37	0:0	4	]
decl	51:8	51:33	4	uint8_t	*end
op	51:20	0:0	4	=
water	51:22	0:0	4	po
op	51:25	0:0	4	+
water	51:27	0:0	4	os
op	51:29	0:0	4	*
water	51:30	0:0	4	len
if	52:8	53:20	4	(! po)
cond	52:11	52:12	5	! po
op	52:11	0:0	6	!
water	52:12	0:0	6	po
stmts	53:12	53:20	5	
continue	53:12	53:20	6	
call	54:8	54:53	4	ctx->conv_f
arg	54:20	54:29	5	po+off*os
water	54:20	0:0	6	po
op	54:22	0:0	6	+
water	54:23	0:0	6	off
op	54:26	0:0	6	*
water	54:27	0:0	6	os
arg	54:31	54:40	5	pi+off*is
water	54:31	0:0	6	pi
op	54:33	0:0	6	+
water	54:34	0:0	6	off
op	54:37	0:0	6	*
water	54:38	0:0	6	is
arg	54:42	54:44	5	is
water	54:42	0:0	6	is
arg	54:46	54:48	5	os
water	54:46	0:0	6	os
arg	54:50	54:53	5	end
water	54:50	0:0	6	end
water	54:54	0:0	4	;
water	55:4	0:0	4	}
return	56:4	56:12	2	0
water	56:11	0:0	3	0

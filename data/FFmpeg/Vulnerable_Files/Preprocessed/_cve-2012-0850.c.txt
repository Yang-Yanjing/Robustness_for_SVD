func	6:0	56:0	0	static void	sbr_qmf_synthesis
params	6:29	0:0	1	
param	6:30	6:45	2	DSPContext *	dsp
param	6:47	6:63	2	FFTContext *	mdct
param	7:30	7:40	2	float *	out
param	7:42	7:49	2	float	X
param	8:30	8:44	2	float	mdct_buf
param	9:30	9:39	2	float *	v0
param	9:41	9:51	2	int *	v_off
param	9:53	9:75	2	const unsigned int	div
stmnts	0:0	55:4	1	
decl	11:4	11:12	2	int	i
water	11:9	0:0	2	,
decl	11:4	11:12	2	int	n
decl	12:4	12:77	2	const float	*sbr_qmf_window
op	12:32	0:0	2	=
water	12:34	0:0	2	div
water	12:38	0:0	2	?
water	12:40	0:0	2	sbr_qmf_window_ds
water	12:58	0:0	2	:
water	12:60	0:0	2	sbr_qmf_window_us
decl	13:4	13:12	2	float	*v
for	14:4	55:4	2	(i = 0 ;i < 32;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	i < 32
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	32
forexpr	14:24	14:25	3	i ++
water	14:24	0:0	4	i
op	14:25	0:0	4	++
stmts	14:29	55:4	3	
water	14:29	0:0	4	{
if	15:8	19:8	4	(* v_off == 0)
cond	15:12	15:22	5	* v_off == 0
op	15:12	0:0	6	*
water	15:13	0:0	6	v_off
op	15:19	0:0	6	==
water	15:22	0:0	6	0
stmts	15:25	19:8	5	
water	15:25	0:0	6	{
decl	16:12	16:51	6	int	saved_samples
op	16:30	0:0	6	=
water	16:32	0:0	6	(
water	16:33	0:0	6	1280
op	16:38	0:0	6	-
water	16:40	0:0	6	128
water	16:43	0:0	6	)
op	16:45	0:0	6	>>
water	16:48	0:0	6	div
call	17:12	17:97	6	memcpy
arg	17:19	17:62	7	&v0[SBR_SYNTHESIS_BUF_SIZE-saved_samples]
op	17:19	0:0	8	&
water	17:20	0:0	8	v0
op	17:22	0:0	8	[
water	17:23	0:0	8	SBR_SYNTHESIS_BUF_SIZE
op	17:46	0:0	8	-
water	17:48	0:0	8	saved_samples
op	17:61	0:0	8	]
arg	17:64	17:66	7	v0
water	17:64	0:0	8	v0
arg	17:68	17:97	7	saved_samples*sizeof(float)
water	17:68	0:0	8	saved_samples
op	17:82	0:0	8	*
op	17:84	0:0	8	sizeof
water	17:90	0:0	8	(
water	17:91	0:0	8	float
water	17:96	0:0	8	)
water	17:98	0:0	6	;
op	18:12	0:0	6	*
water	18:13	0:0	6	v_off
op	18:19	0:0	6	=
water	18:21	0:0	6	SBR_SYNTHESIS_BUF_SIZE
op	18:44	0:0	6	-
water	18:46	0:0	6	saved_samples
op	18:60	0:0	6	-
water	18:62	0:0	6	(
water	18:63	0:0	6	128
op	18:67	0:0	6	>>
water	18:70	0:0	6	div
water	18:73	0:0	6	)
water	18:74	0:0	6	;
water	19:8	0:0	6	}
else	19:10	21:8	4
stmts	19:15	21:8	5	
water	19:15	0:0	6	{
op	20:12	0:0	6	*
water	20:13	0:0	6	v_off
op	20:19	0:0	6	-=
water	20:22	0:0	6	128
op	20:26	0:0	6	>>
water	20:29	0:0	6	div
water	20:32	0:0	6	;
water	21:8	0:0	6	}
water	22:8	0:0	4	v
op	22:10	0:0	4	=
water	22:12	0:0	4	v0
op	22:15	0:0	4	+
op	22:17	0:0	4	*
water	22:18	0:0	4	v_off
water	22:23	0:0	4	;
if	23:8	33:8	4	(div)
cond	23:12	23:12	5	div
water	23:12	0:0	6	div
stmts	23:17	33:8	5	
water	23:17	0:0	6	{
for	24:12	27:12	6	(n = 0 ;n < 32;n ++)
forinit	24:17	24:22	7	n = 0 ;
water	24:17	0:0	8	n
op	24:19	0:0	8	=
water	24:21	0:0	8	0
water	24:22	0:0	8	;
cond	24:24	24:28	7	n < 32
water	24:24	0:0	8	n
op	24:26	0:0	8	<
water	24:28	0:0	8	32
forexpr	24:32	24:33	7	n ++
water	24:32	0:0	8	n
op	24:33	0:0	8	++
stmts	24:37	27:12	7	
water	24:37	0:0	8	{
water	25:16	0:0	8	X
op	25:17	0:0	8	[
water	25:18	0:0	8	0
op	25:19	0:0	8	]
op	25:20	0:0	8	[
water	25:21	0:0	8	i
op	25:22	0:0	8	]
op	25:23	0:0	8	[
water	25:27	0:0	8	n
op	25:28	0:0	8	]
op	25:30	0:0	8	=
op	25:32	0:0	8	-
water	25:33	0:0	8	X
op	25:34	0:0	8	[
water	25:35	0:0	8	0
op	25:36	0:0	8	]
op	25:37	0:0	8	[
water	25:38	0:0	8	i
op	25:39	0:0	8	]
op	25:40	0:0	8	[
water	25:41	0:0	8	n
op	25:42	0:0	8	]
water	25:43	0:0	8	;
water	26:16	0:0	8	X
op	26:17	0:0	8	[
water	26:18	0:0	8	0
op	26:19	0:0	8	]
op	26:20	0:0	8	[
water	26:21	0:0	8	i
op	26:22	0:0	8	]
op	26:23	0:0	8	[
water	26:24	0:0	8	32
op	26:26	0:0	8	+
water	26:27	0:0	8	n
op	26:28	0:0	8	]
op	26:30	0:0	8	=
water	26:33	0:0	8	X
op	26:34	0:0	8	[
water	26:35	0:0	8	1
op	26:36	0:0	8	]
op	26:37	0:0	8	[
water	26:38	0:0	8	i
op	26:39	0:0	8	]
op	26:40	0:0	8	[
water	26:41	0:0	8	31
op	26:43	0:0	8	-
water	26:44	0:0	8	n
op	26:45	0:0	8	]
water	26:46	0:0	8	;
water	27:12	0:0	8	}
call	28:12	28:55	6	mdct->imdct_half
arg	28:29	28:33	7	mdct
water	28:29	0:0	8	mdct
arg	28:35	28:46	7	mdct_buf[0]
water	28:35	0:0	8	mdct_buf
op	28:43	0:0	8	[
water	28:44	0:0	8	0
op	28:45	0:0	8	]
arg	28:48	28:55	7	X[0][i]
water	28:48	0:0	8	X
op	28:49	0:0	8	[
water	28:50	0:0	8	0
op	28:51	0:0	8	]
op	28:52	0:0	8	[
water	28:53	0:0	8	i
op	28:54	0:0	8	]
water	28:56	0:0	6	;
for	29:12	32:12	6	(n = 0 ;n < 32;n ++)
forinit	29:17	29:22	7	n = 0 ;
water	29:17	0:0	8	n
op	29:19	0:0	8	=
water	29:21	0:0	8	0
water	29:22	0:0	8	;
cond	29:24	29:28	7	n < 32
water	29:24	0:0	8	n
op	29:26	0:0	8	<
water	29:28	0:0	8	32
forexpr	29:32	29:33	7	n ++
water	29:32	0:0	8	n
op	29:33	0:0	8	++
stmts	29:37	32:12	7	
water	29:37	0:0	8	{
water	30:16	0:0	8	v
op	30:17	0:0	8	[
water	30:23	0:0	8	n
op	30:24	0:0	8	]
op	30:26	0:0	8	=
water	30:29	0:0	8	mdct_buf
op	30:37	0:0	8	[
water	30:38	0:0	8	0
op	30:39	0:0	8	]
op	30:40	0:0	8	[
water	30:41	0:0	8	63
op	30:44	0:0	8	-
water	30:46	0:0	8	2
op	30:47	0:0	8	*
water	30:48	0:0	8	n
op	30:49	0:0	8	]
water	30:50	0:0	8	;
water	31:16	0:0	8	v
op	31:17	0:0	8	[
water	31:18	0:0	8	63
op	31:21	0:0	8	-
water	31:23	0:0	8	n
op	31:24	0:0	8	]
op	31:26	0:0	8	=
op	31:28	0:0	8	-
water	31:29	0:0	8	mdct_buf
op	31:37	0:0	8	[
water	31:38	0:0	8	0
op	31:39	0:0	8	]
op	31:40	0:0	8	[
water	31:41	0:0	8	62
op	31:44	0:0	8	-
water	31:46	0:0	8	2
op	31:47	0:0	8	*
water	31:48	0:0	8	n
op	31:49	0:0	8	]
water	31:50	0:0	8	;
water	32:12	0:0	8	}
water	33:8	0:0	6	}
else	33:10	43:8	4
stmts	33:15	43:8	5	
water	33:15	0:0	6	{
for	34:12	36:12	6	(n = 1 ;n < 64;n += 2)
forinit	34:17	34:22	7	n = 1 ;
water	34:17	0:0	8	n
op	34:19	0:0	8	=
water	34:21	0:0	8	1
water	34:22	0:0	8	;
cond	34:24	34:28	7	n < 64
water	34:24	0:0	8	n
op	34:26	0:0	8	<
water	34:28	0:0	8	64
forexpr	34:32	34:35	7	n += 2
water	34:32	0:0	8	n
op	34:33	0:0	8	+=
water	34:35	0:0	8	2
stmts	34:38	36:12	7	
water	34:38	0:0	8	{
water	35:16	0:0	8	X
op	35:17	0:0	8	[
water	35:18	0:0	8	1
op	35:19	0:0	8	]
op	35:20	0:0	8	[
water	35:21	0:0	8	i
op	35:22	0:0	8	]
op	35:23	0:0	8	[
water	35:24	0:0	8	n
op	35:25	0:0	8	]
op	35:27	0:0	8	=
op	35:29	0:0	8	-
water	35:30	0:0	8	X
op	35:31	0:0	8	[
water	35:32	0:0	8	1
op	35:33	0:0	8	]
op	35:34	0:0	8	[
water	35:35	0:0	8	i
op	35:36	0:0	8	]
op	35:37	0:0	8	[
water	35:38	0:0	8	n
op	35:39	0:0	8	]
water	35:40	0:0	8	;
water	36:12	0:0	8	}
call	37:12	37:55	6	mdct->imdct_half
arg	37:29	37:33	7	mdct
water	37:29	0:0	8	mdct
arg	37:35	37:46	7	mdct_buf[0]
water	37:35	0:0	8	mdct_buf
op	37:43	0:0	8	[
water	37:44	0:0	8	0
op	37:45	0:0	8	]
arg	37:48	37:55	7	X[0][i]
water	37:48	0:0	8	X
op	37:49	0:0	8	[
water	37:50	0:0	8	0
op	37:51	0:0	8	]
op	37:52	0:0	8	[
water	37:53	0:0	8	i
op	37:54	0:0	8	]
water	37:56	0:0	6	;
call	38:12	38:55	6	mdct->imdct_half
arg	38:29	38:33	7	mdct
water	38:29	0:0	8	mdct
arg	38:35	38:46	7	mdct_buf[1]
water	38:35	0:0	8	mdct_buf
op	38:43	0:0	8	[
water	38:44	0:0	8	1
op	38:45	0:0	8	]
arg	38:48	38:55	7	X[1][i]
water	38:48	0:0	8	X
op	38:49	0:0	8	[
water	38:50	0:0	8	1
op	38:51	0:0	8	]
op	38:52	0:0	8	[
water	38:53	0:0	8	i
op	38:54	0:0	8	]
water	38:56	0:0	6	;
for	39:12	42:12	6	(n = 0 ;n < 64;n ++)
forinit	39:17	39:22	7	n = 0 ;
water	39:17	0:0	8	n
op	39:19	0:0	8	=
water	39:21	0:0	8	0
water	39:22	0:0	8	;
cond	39:24	39:28	7	n < 64
water	39:24	0:0	8	n
op	39:26	0:0	8	<
water	39:28	0:0	8	64
forexpr	39:32	39:33	7	n ++
water	39:32	0:0	8	n
op	39:33	0:0	8	++
stmts	39:37	42:12	7	
water	39:37	0:0	8	{
water	40:16	0:0	8	v
op	40:17	0:0	8	[
water	40:24	0:0	8	n
op	40:25	0:0	8	]
op	40:27	0:0	8	=
op	40:29	0:0	8	-
water	40:30	0:0	8	mdct_buf
op	40:38	0:0	8	[
water	40:39	0:0	8	0
op	40:40	0:0	8	]
op	40:41	0:0	8	[
water	40:42	0:0	8	63
op	40:45	0:0	8	-
water	40:49	0:0	8	n
op	40:50	0:0	8	]
op	40:52	0:0	8	+
water	40:54	0:0	8	mdct_buf
op	40:62	0:0	8	[
water	40:63	0:0	8	1
op	40:64	0:0	8	]
op	40:65	0:0	8	[
water	40:68	0:0	8	n
op	40:73	0:0	8	]
water	40:74	0:0	8	;
water	41:16	0:0	8	v
op	41:17	0:0	8	[
water	41:18	0:0	8	127
op	41:22	0:0	8	-
water	41:24	0:0	8	n
op	41:25	0:0	8	]
op	41:27	0:0	8	=
water	41:30	0:0	8	mdct_buf
op	41:38	0:0	8	[
water	41:39	0:0	8	0
op	41:40	0:0	8	]
op	41:41	0:0	8	[
water	41:42	0:0	8	63
op	41:45	0:0	8	-
water	41:49	0:0	8	n
op	41:50	0:0	8	]
op	41:52	0:0	8	+
water	41:54	0:0	8	mdct_buf
op	41:62	0:0	8	[
water	41:63	0:0	8	1
op	41:64	0:0	8	]
op	41:65	0:0	8	[
water	41:68	0:0	8	n
op	41:73	0:0	8	]
water	41:74	0:0	8	;
water	42:12	0:0	8	}
water	43:8	0:0	6	}
call	44:8	44:101	4	dsp->vector_fmul_add
arg	44:29	44:32	5	out
water	44:29	0:0	6	out
arg	44:34	44:51	5	v
water	44:34	0:0	6	v
arg	44:53	44:82	5	sbr_qmf_window
water	44:53	0:0	6	sbr_qmf_window
arg	44:84	44:90	5	zero64
water	44:84	0:0	6	zero64
arg	44:92	44:101	5	64>>div
water	44:92	0:0	6	64
op	44:95	0:0	6	>>
water	44:98	0:0	6	div
water	44:102	0:0	4	;
call	45:8	45:101	4	dsp->vector_fmul_add
arg	45:29	45:32	5	out
water	45:29	0:0	6	out
arg	45:34	45:51	5	v+(192>>div)
water	45:34	0:0	6	v
op	45:36	0:0	6	+
water	45:38	0:0	6	(
water	45:40	0:0	6	192
op	45:44	0:0	6	>>
water	45:47	0:0	6	div
water	45:50	0:0	6	)
arg	45:53	45:82	5	sbr_qmf_window+(64>>div)
water	45:53	0:0	6	sbr_qmf_window
op	45:68	0:0	6	+
water	45:70	0:0	6	(
water	45:72	0:0	6	64
op	45:75	0:0	6	>>
water	45:78	0:0	6	div
water	45:81	0:0	6	)
arg	45:84	45:90	5	out
water	45:84	0:0	6	out
arg	45:92	45:101	5	64>>div
water	45:92	0:0	6	64
op	45:95	0:0	6	>>
water	45:98	0:0	6	div
water	45:102	0:0	4	;
call	46:8	46:101	4	dsp->vector_fmul_add
arg	46:29	46:32	5	out
water	46:29	0:0	6	out
arg	46:34	46:51	5	v+(256>>div)
water	46:34	0:0	6	v
op	46:36	0:0	6	+
water	46:38	0:0	6	(
water	46:40	0:0	6	256
op	46:44	0:0	6	>>
water	46:47	0:0	6	div
water	46:50	0:0	6	)
arg	46:53	46:82	5	sbr_qmf_window+(128>>div)
water	46:53	0:0	6	sbr_qmf_window
op	46:68	0:0	6	+
water	46:70	0:0	6	(
water	46:71	0:0	6	128
op	46:75	0:0	6	>>
water	46:78	0:0	6	div
water	46:81	0:0	6	)
arg	46:84	46:90	5	out
water	46:84	0:0	6	out
arg	46:92	46:101	5	64>>div
water	46:92	0:0	6	64
op	46:95	0:0	6	>>
water	46:98	0:0	6	div
water	46:102	0:0	4	;
call	47:8	47:101	4	dsp->vector_fmul_add
arg	47:29	47:32	5	out
water	47:29	0:0	6	out
arg	47:34	47:51	5	v+(448>>div)
water	47:34	0:0	6	v
op	47:36	0:0	6	+
water	47:38	0:0	6	(
water	47:40	0:0	6	448
op	47:44	0:0	6	>>
water	47:47	0:0	6	div
water	47:50	0:0	6	)
arg	47:53	47:82	5	sbr_qmf_window+(192>>div)
water	47:53	0:0	6	sbr_qmf_window
op	47:68	0:0	6	+
water	47:70	0:0	6	(
water	47:71	0:0	6	192
op	47:75	0:0	6	>>
water	47:78	0:0	6	div
water	47:81	0:0	6	)
arg	47:84	47:90	5	out
water	47:84	0:0	6	out
arg	47:92	47:101	5	64>>div
water	47:92	0:0	6	64
op	47:95	0:0	6	>>
water	47:98	0:0	6	div
water	47:102	0:0	4	;
call	48:8	48:101	4	dsp->vector_fmul_add
arg	48:29	48:32	5	out
water	48:29	0:0	6	out
arg	48:34	48:51	5	v+(512>>div)
water	48:34	0:0	6	v
op	48:36	0:0	6	+
water	48:38	0:0	6	(
water	48:40	0:0	6	512
op	48:44	0:0	6	>>
water	48:47	0:0	6	div
water	48:50	0:0	6	)
arg	48:53	48:82	5	sbr_qmf_window+(256>>div)
water	48:53	0:0	6	sbr_qmf_window
op	48:68	0:0	6	+
water	48:70	0:0	6	(
water	48:71	0:0	6	256
op	48:75	0:0	6	>>
water	48:78	0:0	6	div
water	48:81	0:0	6	)
arg	48:84	48:90	5	out
water	48:84	0:0	6	out
arg	48:92	48:101	5	64>>div
water	48:92	0:0	6	64
op	48:95	0:0	6	>>
water	48:98	0:0	6	div
water	48:102	0:0	4	;
call	49:8	49:101	4	dsp->vector_fmul_add
arg	49:29	49:32	5	out
water	49:29	0:0	6	out
arg	49:34	49:51	5	v+(704>>div)
water	49:34	0:0	6	v
op	49:36	0:0	6	+
water	49:38	0:0	6	(
water	49:40	0:0	6	704
op	49:44	0:0	6	>>
water	49:47	0:0	6	div
water	49:50	0:0	6	)
arg	49:53	49:82	5	sbr_qmf_window+(320>>div)
water	49:53	0:0	6	sbr_qmf_window
op	49:68	0:0	6	+
water	49:70	0:0	6	(
water	49:71	0:0	6	320
op	49:75	0:0	6	>>
water	49:78	0:0	6	div
water	49:81	0:0	6	)
arg	49:84	49:90	5	out
water	49:84	0:0	6	out
arg	49:92	49:101	5	64>>div
water	49:92	0:0	6	64
op	49:95	0:0	6	>>
water	49:98	0:0	6	div
water	49:102	0:0	4	;
call	50:8	50:101	4	dsp->vector_fmul_add
arg	50:29	50:32	5	out
water	50:29	0:0	6	out
arg	50:34	50:51	5	v+(768>>div)
water	50:34	0:0	6	v
op	50:36	0:0	6	+
water	50:38	0:0	6	(
water	50:40	0:0	6	768
op	50:44	0:0	6	>>
water	50:47	0:0	6	div
water	50:50	0:0	6	)
arg	50:53	50:82	5	sbr_qmf_window+(384>>div)
water	50:53	0:0	6	sbr_qmf_window
op	50:68	0:0	6	+
water	50:70	0:0	6	(
water	50:71	0:0	6	384
op	50:75	0:0	6	>>
water	50:78	0:0	6	div
water	50:81	0:0	6	)
arg	50:84	50:90	5	out
water	50:84	0:0	6	out
arg	50:92	50:101	5	64>>div
water	50:92	0:0	6	64
op	50:95	0:0	6	>>
water	50:98	0:0	6	div
water	50:102	0:0	4	;
call	51:8	51:101	4	dsp->vector_fmul_add
arg	51:29	51:32	5	out
water	51:29	0:0	6	out
arg	51:34	51:51	5	v+(960>>div)
water	51:34	0:0	6	v
op	51:36	0:0	6	+
water	51:38	0:0	6	(
water	51:40	0:0	6	960
op	51:44	0:0	6	>>
water	51:47	0:0	6	div
water	51:50	0:0	6	)
arg	51:53	51:82	5	sbr_qmf_window+(448>>div)
water	51:53	0:0	6	sbr_qmf_window
op	51:68	0:0	6	+
water	51:70	0:0	6	(
water	51:71	0:0	6	448
op	51:75	0:0	6	>>
water	51:78	0:0	6	div
water	51:81	0:0	6	)
arg	51:84	51:90	5	out
water	51:84	0:0	6	out
arg	51:92	51:101	5	64>>div
water	51:92	0:0	6	64
op	51:95	0:0	6	>>
water	51:98	0:0	6	div
water	51:102	0:0	4	;
call	52:8	52:101	4	dsp->vector_fmul_add
arg	52:29	52:32	5	out
water	52:29	0:0	6	out
arg	52:34	52:51	5	v+(1024>>div)
water	52:34	0:0	6	v
op	52:36	0:0	6	+
water	52:38	0:0	6	(
water	52:39	0:0	6	1024
op	52:44	0:0	6	>>
water	52:47	0:0	6	div
water	52:50	0:0	6	)
arg	52:53	52:82	5	sbr_qmf_window+(512>>div)
water	52:53	0:0	6	sbr_qmf_window
op	52:68	0:0	6	+
water	52:70	0:0	6	(
water	52:71	0:0	6	512
op	52:75	0:0	6	>>
water	52:78	0:0	6	div
water	52:81	0:0	6	)
arg	52:84	52:90	5	out
water	52:84	0:0	6	out
arg	52:92	52:101	5	64>>div
water	52:92	0:0	6	64
op	52:95	0:0	6	>>
water	52:98	0:0	6	div
water	52:102	0:0	4	;
call	53:8	53:101	4	dsp->vector_fmul_add
arg	53:29	53:32	5	out
water	53:29	0:0	6	out
arg	53:34	53:51	5	v+(1216>>div)
water	53:34	0:0	6	v
op	53:36	0:0	6	+
water	53:38	0:0	6	(
water	53:39	0:0	6	1216
op	53:44	0:0	6	>>
water	53:47	0:0	6	div
water	53:50	0:0	6	)
arg	53:53	53:82	5	sbr_qmf_window+(576>>div)
water	53:53	0:0	6	sbr_qmf_window
op	53:68	0:0	6	+
water	53:70	0:0	6	(
water	53:71	0:0	6	576
op	53:75	0:0	6	>>
water	53:78	0:0	6	div
water	53:81	0:0	6	)
arg	53:84	53:90	5	out
water	53:84	0:0	6	out
arg	53:92	53:101	5	64>>div
water	53:92	0:0	6	64
op	53:95	0:0	6	>>
water	53:98	0:0	6	div
water	53:102	0:0	4	;
water	54:8	0:0	4	out
op	54:12	0:0	4	+=
water	54:15	0:0	4	64
op	54:18	0:0	4	>>
water	54:21	0:0	4	div
water	54:24	0:0	4	;
water	55:4	0:0	4	}

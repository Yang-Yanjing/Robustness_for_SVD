func	2:0	50:0	0	static int	mov_text_decode_frame
params	2:32	0:0	1	
param	2:33	2:54	2	AVCodecContext *	avctx
param	3:28	3:38	2	void *	data
param	3:40	3:56	2	int *	got_sub_ptr
param	3:58	3:73	2	AVPacket *	avpkt
stmnts	0:0	49:22	1	
decl	5:4	5:26	2	AVSubtitle	*sub
op	5:20	0:0	2	=
water	5:22	0:0	2	data
decl	6:4	6:24	2	int	ts_start
water	6:16	0:0	2	,
decl	6:4	6:24	2	int	ts_end
decl	7:4	7:16	2	AVBPrint	buf
decl	8:4	8:33	2	const char	*ptr
op	8:20	0:0	2	=
water	8:22	0:0	2	avpkt
op	8:27	0:0	2	->
water	8:29	0:0	2	data
decl	9:4	9:19	2	const char	*end
if	11:4	12:34	2	(! ptr || avpkt -> size < 2)
cond	11:8	11:30	3	! ptr || avpkt -> size < 2
op	11:8	0:0	4	!
water	11:9	0:0	4	ptr
op	11:13	0:0	4	||
water	11:16	0:0	4	avpkt
op	11:21	0:0	4	->
water	11:23	0:0	4	size
op	11:28	0:0	4	<
water	11:30	0:0	4	2
stmts	12:8	12:34	3	
return	12:8	12:34	4	AVERROR_INVALIDDATA
water	12:15	0:0	5	AVERROR_INVALIDDATA
if	21:4	22:58	2	(avpkt -> size == 2)
cond	21:8	21:23	3	avpkt -> size == 2
water	21:8	0:0	4	avpkt
op	21:13	0:0	4	->
water	21:15	0:0	4	size
op	21:20	0:0	4	==
water	21:23	0:0	4	2
stmts	22:8	22:58	3	
return	22:8	22:58	4	AV_RB16(ptr)==0?0:AVERROR_INVALIDDATA
call	22:15	22:26	5	AV_RB16
arg	22:23	22:26	6	ptr
water	22:23	0:0	7	ptr
op	22:28	0:0	5	==
water	22:31	0:0	5	0
water	22:33	0:0	5	?
water	22:35	0:0	5	0
water	22:37	0:0	5	:
water	22:39	0:0	5	AVERROR_INVALIDDATA
water	29:4	0:0	2	end
op	29:8	0:0	2	=
water	29:10	0:0	2	ptr
op	29:14	0:0	2	+
call	29:16	29:51	2	FFMIN
arg	29:22	29:38	3	2+AV_RB16(ptr)
water	29:22	0:0	4	2
op	29:24	0:0	4	+
call	29:26	29:37	4	AV_RB16
arg	29:34	29:37	5	ptr
water	29:34	0:0	6	ptr
arg	29:40	29:51	3	avpkt->size
water	29:40	0:0	4	avpkt
op	29:45	0:0	4	->
water	29:47	0:0	4	size
water	29:52	0:0	2	;
water	30:4	0:0	2	ptr
op	30:8	0:0	2	+=
water	30:11	0:0	2	2
water	30:12	0:0	2	;
water	32:4	0:0	2	ts_start
op	32:13	0:0	2	=
call	32:15	34:47	2	av_rescale_q
arg	32:28	32:38	3	avpkt->pts
water	32:28	0:0	4	avpkt
op	32:33	0:0	4	->
water	32:35	0:0	4	pts
arg	33:28	33:44	3	avctx->time_base
water	33:28	0:0	4	avctx
op	33:33	0:0	4	->
water	33:35	0:0	4	time_base
arg	34:28	34:47	3	(AVRational){1,100}
water	34:28	0:0	4	(
water	34:29	0:0	4	AVRational
water	34:39	0:0	4	)
water	34:40	0:0	4	{
water	34:41	0:0	4	1
water	34:42	0:0	4	,
water	34:43	0:0	4	100
water	34:46	0:0	4	}
water	34:48	0:0	2	;
water	35:4	0:0	2	ts_end
op	35:13	0:0	2	=
call	35:15	37:47	2	av_rescale_q
arg	35:28	35:56	3	avpkt->pts+avpkt->duration
water	35:28	0:0	4	avpkt
op	35:33	0:0	4	->
water	35:35	0:0	4	pts
op	35:39	0:0	4	+
water	35:41	0:0	4	avpkt
op	35:46	0:0	4	->
water	35:48	0:0	4	duration
arg	36:28	36:44	3	avctx->time_base
water	36:28	0:0	4	avctx
op	36:33	0:0	4	->
water	36:35	0:0	4	time_base
arg	37:28	37:47	3	(AVRational){1,100}
water	37:28	0:0	4	(
water	37:29	0:0	4	AVRational
water	37:39	0:0	4	)
water	37:40	0:0	4	{
water	37:41	0:0	4	1
water	37:42	0:0	4	,
water	37:43	0:0	4	100
water	37:46	0:0	4	}
water	37:48	0:0	2	;
call	40:4	40:52	2	av_bprint_init
arg	40:19	40:23	3	&buf
op	40:19	0:0	4	&
water	40:20	0:0	4	buf
arg	40:25	40:26	3	0
water	40:25	0:0	4	0
arg	40:28	40:52	3	AV_BPRINT_SIZE_UNLIMITED
water	40:28	0:0	4	AV_BPRINT_SIZE_UNLIMITED
water	40:53	0:0	2	;
call	41:4	41:30	2	text_to_ass
arg	41:16	41:20	3	&buf
op	41:16	0:0	4	&
water	41:17	0:0	4	buf
arg	41:22	41:25	3	ptr
water	41:22	0:0	4	ptr
arg	41:27	41:30	3	end
water	41:27	0:0	4	end
water	41:31	0:0	2	;
if	43:4	44:30	2	(!av_bprint_is_complete (& buf ))
cond	43:8	43:35	3	!av_bprint_is_complete (& buf )
op	43:8	0:0	4	!
call	43:9	43:35	4	av_bprint_is_complete
arg	43:31	43:35	5	&buf
op	43:31	0:0	6	&
water	43:32	0:0	6	buf
stmts	44:8	44:30	3	
return	44:8	44:30	4	AVERROR(ENOMEM)
call	44:15	44:29	5	AVERROR
arg	44:23	44:29	6	ENOMEM
water	44:23	0:0	7	ENOMEM
call	46:4	46:62	2	ff_ass_add_rect
arg	46:20	46:23	3	sub
water	46:20	0:0	4	sub
arg	46:25	46:32	3	buf.str
water	46:25	0:0	4	buf
op	46:28	0:0	4	.
water	46:29	0:0	4	str
arg	46:34	46:42	3	ts_start
water	46:34	0:0	4	ts_start
arg	46:44	46:59	3	ts_end-ts_start
water	46:44	0:0	4	ts_end
op	46:50	0:0	4	-
water	46:51	0:0	4	ts_start
arg	46:61	46:62	3	0
water	46:61	0:0	4	0
water	46:63	0:0	2	;
op	47:4	0:0	2	*
water	47:5	0:0	2	got_sub_ptr
op	47:17	0:0	2	=
water	47:19	0:0	2	sub
op	47:22	0:0	2	->
water	47:24	0:0	2	num_rects
op	47:34	0:0	2	>
water	47:36	0:0	2	0
water	47:37	0:0	2	;
call	48:4	48:33	2	av_bprint_finalize
arg	48:23	48:27	3	&buf
op	48:23	0:0	4	&
water	48:24	0:0	4	buf
arg	48:29	48:33	3	NULL
water	48:29	0:0	4	NULL
water	48:34	0:0	2	;
return	49:4	49:22	2	avpkt->size
water	49:11	0:0	3	avpkt
op	49:16	0:0	3	->
water	49:18	0:0	3	size

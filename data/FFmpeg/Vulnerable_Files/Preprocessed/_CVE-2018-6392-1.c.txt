func	1:0	61:0	0	static int	config_props_output
params	1:30	0:0	1	
param	1:31	1:52	2	AVFilterLink *	outlink
stmnts	0:0	60:12	1	
decl	3:4	3:39	2	AVFilterContext	*ctx
op	3:25	0:0	2	=
water	3:27	0:0	2	outlink
op	3:34	0:0	2	->
water	3:36	0:0	2	src
decl	4:4	4:31	2	TransContext	*s
op	4:20	0:0	2	=
water	4:22	0:0	2	ctx
op	4:25	0:0	2	->
water	4:27	0:0	2	priv
decl	5:4	5:41	2	AVFilterLink	*inlink
op	5:25	0:0	2	=
water	5:27	0:0	2	ctx
op	5:30	0:0	2	->
water	5:32	0:0	2	inputs
op	5:38	0:0	2	[
water	5:39	0:0	2	0
op	5:40	0:0	2	]
decl	6:4	6:77	2	const AVPixFmtDescriptor	*desc_out
op	6:39	0:0	2	=
call	6:41	6:76	3	av_pix_fmt_desc_get
arg	6:61	6:76	4	outlink->format
water	6:61	0:0	5	outlink
op	6:68	0:0	5	->
water	6:70	0:0	5	format
decl	7:4	7:76	2	const AVPixFmtDescriptor	*desc_in
op	7:39	0:0	2	=
call	7:41	7:75	3	av_pix_fmt_desc_get
arg	7:61	7:75	4	inlink->format
water	7:61	0:0	5	inlink
op	7:67	0:0	5	->
water	7:69	0:0	5	format
if	9:4	14:4	2	(s -> dir & 4)
cond	9:8	9:15	3	s -> dir & 4
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	dir
op	9:14	0:0	4	&
water	9:15	0:0	4	4
stmts	9:18	14:4	3	
water	9:18	0:0	4	{
call	10:8	11:95	4	av_log
arg	10:15	10:18	5	ctx
water	10:15	0:0	6	ctx
arg	10:20	10:34	5	AV_LOG_WARNING
water	10:20	0:0	6	AV_LOG_WARNING
arg	11:15	11:95	5	"dir values greater than 3 are deprecated, use the passthrough option instead\n"
water	11:15	0:0	6	"dir values greater than 3 are deprecated, use the passthrough option instead\n"
water	11:96	0:0	4	;
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	dir
op	12:15	0:0	4	&=
water	12:18	0:0	4	3
water	12:19	0:0	4	;
water	13:8	0:0	4	s
op	13:9	0:0	4	->
water	13:11	0:0	4	passthrough
op	13:23	0:0	4	=
water	13:25	0:0	4	TRANSPOSE_PT_TYPE_LANDSCAPE
water	13:52	0:0	4	;
water	14:4	0:0	4	}
if	16:4	22:4	2	(( inlink -> w >= inlink -> h && s -> passthrough == TRANSPOSE_PT_TYPE_LANDSCAPE ) || ( inlink -> w <= inlink -> h && s -> passthrough == TRANSPOSE_PT_TYPE_PORTRAIT ))
cond	16:8	17:79	3	( inlink -> w >= inlink -> h && s -> passthrough == TRANSPOSE_PT_TYPE_LANDSCAPE ) || ( inlink -> w <= inlink -> h && s -> passthrough == TRANSPOSE_PT_TYPE_PORTRAIT )
water	16:8	0:0	4	(
water	16:9	0:0	4	inlink
op	16:15	0:0	4	->
water	16:17	0:0	4	w
op	16:19	0:0	4	>=
water	16:22	0:0	4	inlink
op	16:28	0:0	4	->
water	16:30	0:0	4	h
op	16:32	0:0	4	&&
water	16:35	0:0	4	s
op	16:36	0:0	4	->
water	16:38	0:0	4	passthrough
op	16:50	0:0	4	==
water	16:53	0:0	4	TRANSPOSE_PT_TYPE_LANDSCAPE
water	16:80	0:0	4	)
op	16:82	0:0	4	||
water	17:8	0:0	4	(
water	17:9	0:0	4	inlink
op	17:15	0:0	4	->
water	17:17	0:0	4	w
op	17:19	0:0	4	<=
water	17:22	0:0	4	inlink
op	17:28	0:0	4	->
water	17:30	0:0	4	h
op	17:32	0:0	4	&&
water	17:35	0:0	4	s
op	17:36	0:0	4	->
water	17:38	0:0	4	passthrough
op	17:50	0:0	4	==
water	17:53	0:0	4	TRANSPOSE_PT_TYPE_PORTRAIT
water	17:79	0:0	4	)
stmts	17:82	22:4	3	
water	17:82	0:0	4	{
call	18:8	20:57	4	av_log
arg	18:15	18:18	5	ctx
water	18:15	0:0	6	ctx
arg	18:20	18:34	5	AV_LOG_VERBOSE
water	18:20	0:0	6	AV_LOG_VERBOSE
arg	19:15	19:60	5	"w:%d h:%d -> w:%d h:%d (passthrough mode)\n"
water	19:15	0:0	6	"w:%d h:%d -> w:%d h:%d (passthrough mode)\n"
arg	20:15	20:24	5	inlink->w
water	20:15	0:0	6	inlink
op	20:21	0:0	6	->
water	20:23	0:0	6	w
arg	20:26	20:35	5	inlink->h
water	20:26	0:0	6	inlink
op	20:32	0:0	6	->
water	20:34	0:0	6	h
arg	20:37	20:46	5	inlink->w
water	20:37	0:0	6	inlink
op	20:43	0:0	6	->
water	20:45	0:0	6	w
arg	20:48	20:57	5	inlink->h
water	20:48	0:0	6	inlink
op	20:54	0:0	6	->
water	20:56	0:0	6	h
water	20:58	0:0	4	;
return	21:8	21:16	4	0
water	21:15	0:0	5	0
water	22:4	0:0	4	}
else	22:6	24:4	2
stmts	22:11	24:4	3	
water	22:11	0:0	4	{
water	23:8	0:0	4	s
op	23:9	0:0	4	->
water	23:11	0:0	4	passthrough
op	23:23	0:0	4	=
water	23:25	0:0	4	TRANSPOSE_PT_TYPE_NONE
water	23:47	0:0	4	;
water	24:4	0:0	4	}
water	26:4	0:0	2	s
op	26:5	0:0	2	->
water	26:7	0:0	2	hsub
op	26:12	0:0	2	=
water	26:14	0:0	2	desc_in
op	26:21	0:0	2	->
water	26:23	0:0	2	log2_chroma_w
water	26:36	0:0	2	;
water	27:4	0:0	2	s
op	27:5	0:0	2	->
water	27:7	0:0	2	vsub
op	27:12	0:0	2	=
water	27:14	0:0	2	desc_in
op	27:21	0:0	2	->
water	27:23	0:0	2	log2_chroma_h
water	27:36	0:0	2	;
call	29:4	29:58	2	av_image_fill_max_pixsteps
arg	29:31	29:42	3	s->pixsteps
water	29:31	0:0	4	s
op	29:32	0:0	4	->
water	29:34	0:0	4	pixsteps
arg	29:44	29:48	3	NULL
water	29:44	0:0	4	NULL
arg	29:50	29:58	3	desc_out
water	29:50	0:0	4	desc_out
water	29:59	0:0	2	;
water	31:4	0:0	2	outlink
op	31:11	0:0	2	->
water	31:13	0:0	2	w
op	31:15	0:0	2	=
water	31:17	0:0	2	inlink
op	31:23	0:0	2	->
water	31:25	0:0	2	h
water	31:26	0:0	2	;
water	32:4	0:0	2	outlink
op	32:11	0:0	2	->
water	32:13	0:0	2	h
op	32:15	0:0	2	=
water	32:17	0:0	2	inlink
op	32:23	0:0	2	->
water	32:25	0:0	2	w
water	32:26	0:0	2	;
if	34:4	36:76	2	(inlink -> sample_aspect_ratio . num)
cond	34:8	34:36	3	inlink -> sample_aspect_ratio . num
water	34:8	0:0	4	inlink
op	34:14	0:0	4	->
water	34:16	0:0	4	sample_aspect_ratio
op	34:35	0:0	4	.
water	34:36	0:0	4	num
stmts	35:8	36:76	3	
water	35:8	0:0	4	outlink
op	35:15	0:0	4	->
water	35:17	0:0	4	sample_aspect_ratio
op	35:37	0:0	4	=
call	35:39	36:75	4	av_div_q
arg	35:48	35:69	5	(AVRational){1,1}
water	35:48	0:0	6	(
water	35:49	0:0	6	AVRational
water	35:59	0:0	6	)
water	35:61	0:0	6	{
water	35:63	0:0	6	1
water	35:64	0:0	6	,
water	35:66	0:0	6	1
water	35:68	0:0	6	}
arg	36:48	36:75	5	inlink->sample_aspect_ratio
water	36:48	0:0	6	inlink
op	36:54	0:0	6	->
water	36:56	0:0	6	sample_aspect_ratio
water	36:76	0:0	4	;
else	37:4	38:66	2
stmts	38:8	38:66	3	
water	38:8	0:0	4	outlink
op	38:15	0:0	4	->
water	38:17	0:0	4	sample_aspect_ratio
op	38:37	0:0	4	=
water	38:39	0:0	4	inlink
op	38:45	0:0	4	->
water	38:47	0:0	4	sample_aspect_ratio
water	38:66	0:0	4	;
switch	40:4	53:4	2	(s -> pixsteps [ 0 ])
cond	40:12	40:25	3	s -> pixsteps [ 0 ]
water	40:12	0:0	4	s
op	40:13	0:0	4	->
water	40:15	0:0	4	pixsteps
op	40:23	0:0	4	[
water	40:24	0:0	4	0
op	40:25	0:0	4	]
stmts	40:28	53:4	3	
water	40:28	0:0	4	{
label	41:4	41:10	4	case 1 :
water	41:12	0:0	4	s
op	41:13	0:0	4	->
water	41:15	0:0	4	transpose_block
op	41:31	0:0	4	=
water	41:33	0:0	4	transpose_block_8_c
water	41:52	0:0	4	;
water	42:12	0:0	4	s
op	42:13	0:0	4	->
water	42:15	0:0	4	transpose_8x8
op	42:31	0:0	4	=
water	42:33	0:0	4	transpose_8x8_8_c
water	42:50	0:0	4	;
break	42:53	42:58	4	
label	43:4	43:10	4	case 2 :
water	43:12	0:0	4	s
op	43:13	0:0	4	->
water	43:15	0:0	4	transpose_block
op	43:31	0:0	4	=
water	43:33	0:0	4	transpose_block_16_c
water	43:53	0:0	4	;
water	44:12	0:0	4	s
op	44:13	0:0	4	->
water	44:15	0:0	4	transpose_8x8
op	44:31	0:0	4	=
water	44:33	0:0	4	transpose_8x8_16_c
water	44:51	0:0	4	;
break	44:53	44:58	4	
label	45:4	45:10	4	case 3 :
water	45:12	0:0	4	s
op	45:13	0:0	4	->
water	45:15	0:0	4	transpose_block
op	45:31	0:0	4	=
water	45:33	0:0	4	transpose_block_24_c
water	45:53	0:0	4	;
water	46:12	0:0	4	s
op	46:13	0:0	4	->
water	46:15	0:0	4	transpose_8x8
op	46:31	0:0	4	=
water	46:33	0:0	4	transpose_8x8_24_c
water	46:51	0:0	4	;
break	46:53	46:58	4	
label	47:4	47:10	4	case 4 :
water	47:12	0:0	4	s
op	47:13	0:0	4	->
water	47:15	0:0	4	transpose_block
op	47:31	0:0	4	=
water	47:33	0:0	4	transpose_block_32_c
water	47:53	0:0	4	;
water	48:12	0:0	4	s
op	48:13	0:0	4	->
water	48:15	0:0	4	transpose_8x8
op	48:31	0:0	4	=
water	48:33	0:0	4	transpose_8x8_32_c
water	48:51	0:0	4	;
break	48:53	48:58	4	
label	49:4	49:10	4	case 6 :
water	49:12	0:0	4	s
op	49:13	0:0	4	->
water	49:15	0:0	4	transpose_block
op	49:31	0:0	4	=
water	49:33	0:0	4	transpose_block_48_c
water	49:53	0:0	4	;
water	50:12	0:0	4	s
op	50:13	0:0	4	->
water	50:15	0:0	4	transpose_8x8
op	50:31	0:0	4	=
water	50:33	0:0	4	transpose_8x8_48_c
water	50:51	0:0	4	;
break	50:53	50:58	4	
label	51:4	51:10	4	case 8 :
water	51:12	0:0	4	s
op	51:13	0:0	4	->
water	51:15	0:0	4	transpose_block
op	51:31	0:0	4	=
water	51:33	0:0	4	transpose_block_64_c
water	51:53	0:0	4	;
water	52:12	0:0	4	s
op	52:13	0:0	4	->
water	52:15	0:0	4	transpose_8x8
op	52:31	0:0	4	=
water	52:33	0:0	4	transpose_8x8_64_c
water	52:51	0:0	4	;
break	52:53	52:58	4	
water	53:4	0:0	4	}
call	55:4	59:37	2	av_log
arg	55:11	55:14	3	ctx
water	55:11	0:0	4	ctx
arg	55:16	55:30	3	AV_LOG_VERBOSE
water	55:16	0:0	4	AV_LOG_VERBOSE
arg	56:11	56:65	3	"w:%d h:%d dir:%d -> w:%d h:%d rotation:%s vflip:%d\n"
water	56:11	0:0	4	"w:%d h:%d dir:%d -> w:%d h:%d rotation:%s vflip:%d\n"
arg	57:11	57:20	3	inlink->w
water	57:11	0:0	4	inlink
op	57:17	0:0	4	->
water	57:19	0:0	4	w
arg	57:22	57:31	3	inlink->h
water	57:22	0:0	4	inlink
op	57:28	0:0	4	->
water	57:30	0:0	4	h
arg	57:33	57:39	3	s->dir
water	57:33	0:0	4	s
op	57:34	0:0	4	->
water	57:36	0:0	4	dir
arg	57:41	57:51	3	outlink->w
water	57:41	0:0	4	outlink
op	57:48	0:0	4	->
water	57:50	0:0	4	w
arg	57:53	57:63	3	outlink->h
water	57:53	0:0	4	outlink
op	57:60	0:0	4	->
water	57:62	0:0	4	h
arg	58:11	58:72	3	s->dir==1||s->dir==3?"clockwise":"counterclockwise"
water	58:11	0:0	4	s
op	58:12	0:0	4	->
water	58:14	0:0	4	dir
op	58:18	0:0	4	==
water	58:21	0:0	4	1
op	58:23	0:0	4	||
water	58:26	0:0	4	s
op	58:27	0:0	4	->
water	58:29	0:0	4	dir
op	58:33	0:0	4	==
water	58:36	0:0	4	3
water	58:38	0:0	4	?
water	58:40	0:0	4	"clockwise"
water	58:52	0:0	4	:
water	58:54	0:0	4	"counterclockwise"
arg	59:11	59:37	3	s->dir==0||s->dir==3
water	59:11	0:0	4	s
op	59:12	0:0	4	->
water	59:14	0:0	4	dir
op	59:18	0:0	4	==
water	59:21	0:0	4	0
op	59:23	0:0	4	||
water	59:26	0:0	4	s
op	59:27	0:0	4	->
water	59:29	0:0	4	dir
op	59:33	0:0	4	==
water	59:36	0:0	4	3
water	59:38	0:0	2	;
return	60:4	60:12	2	0
water	60:11	0:0	3	0

func	13:0	73:0	0	static int	parse_picture_segment
params	13:32	0:0	1	
param	13:33	13:54	2	AVCodecContext *	avctx
param	14:34	14:52	2	const uint8_t *	buf
param	14:54	14:66	2	int	buf_size
stmnts	0:0	72:12	1	
decl	16:4	16:41	2	PGSSubContext	*ctx
op	16:23	0:0	2	=
water	16:25	0:0	2	avctx
op	16:30	0:0	2	->
water	16:32	0:0	2	priv_data
decl	18:4	18:25	2	uint8_t	sequence_desc
decl	19:4	19:46	2	unsigned int	rle_bitmap_len
water	19:31	0:0	2	,
decl	19:4	19:46	2	unsigned int	width
water	19:38	0:0	2	,
decl	19:4	19:46	2	unsigned int	height
if	21:4	22:17	2	(buf_size <= 4)
cond	21:8	21:20	3	buf_size <= 4
water	21:8	0:0	4	buf_size
op	21:17	0:0	4	<=
water	21:20	0:0	4	4
stmts	22:8	22:17	3	
return	22:8	22:17	4	-1
op	22:15	0:0	5	-
water	22:16	0:0	5	1
water	23:4	0:0	2	buf_size
op	23:13	0:0	2	-=
water	23:16	0:0	2	4
water	23:17	0:0	2	;
water	26:4	0:0	2	buf
op	26:8	0:0	2	+=
water	26:11	0:0	2	3
water	26:12	0:0	2	;
water	29:4	0:0	2	sequence_desc
op	29:18	0:0	2	=
call	29:20	29:44	2	bytestream_get_byte
arg	29:40	29:44	3	&buf
op	29:40	0:0	4	&
water	29:41	0:0	4	buf
water	29:45	0:0	2	;
if	31:4	41:4	2	(! ( sequence_desc & 0 x80 ))
cond	31:8	31:30	3	! ( sequence_desc & 0 x80 )
op	31:8	0:0	4	!
water	31:9	0:0	4	(
water	31:10	0:0	4	sequence_desc
op	31:24	0:0	4	&
water	31:26	0:0	4	0
water	31:27	0:0	4	x80
water	31:30	0:0	4	)
stmts	31:33	41:4	3	
water	31:33	0:0	4	{
if	33:8	34:21	4	(buf_size > ctx -> picture . rle_remaining_len)
cond	33:12	33:36	5	buf_size > ctx -> picture . rle_remaining_len
water	33:12	0:0	6	buf_size
op	33:21	0:0	6	>
water	33:23	0:0	6	ctx
op	33:26	0:0	6	->
water	33:28	0:0	6	picture
op	33:35	0:0	6	.
water	33:36	0:0	6	rle_remaining_len
stmts	34:12	34:21	5	
return	34:12	34:21	6	-1
op	34:19	0:0	7	-
water	34:20	0:0	7	1
call	36:8	36:74	4	memcpy
arg	36:15	36:59	5	ctx->picture.rle+ctx->picture.rle_data_len
water	36:15	0:0	6	ctx
op	36:18	0:0	6	->
water	36:20	0:0	6	picture
op	36:27	0:0	6	.
water	36:28	0:0	6	rle
op	36:32	0:0	6	+
water	36:34	0:0	6	ctx
op	36:37	0:0	6	->
water	36:39	0:0	6	picture
op	36:46	0:0	6	.
water	36:47	0:0	6	rle_data_len
arg	36:61	36:64	5	buf
water	36:61	0:0	6	buf
arg	36:66	36:74	5	buf_size
water	36:66	0:0	6	buf_size
water	36:75	0:0	4	;
water	37:8	0:0	4	ctx
op	37:11	0:0	4	->
water	37:13	0:0	4	picture
op	37:20	0:0	4	.
water	37:21	0:0	4	rle_data_len
op	37:34	0:0	4	+=
water	37:37	0:0	4	buf_size
water	37:45	0:0	4	;
water	38:8	0:0	4	ctx
op	38:11	0:0	4	->
water	38:13	0:0	4	picture
op	38:20	0:0	4	.
water	38:21	0:0	4	rle_remaining_len
op	38:39	0:0	4	-=
water	38:42	0:0	4	buf_size
water	38:50	0:0	4	;
return	40:8	40:16	4	0
water	40:15	0:0	5	0
water	41:4	0:0	4	}
if	43:4	44:17	2	(buf_size <= 7)
cond	43:8	43:20	3	buf_size <= 7
water	43:8	0:0	4	buf_size
op	43:17	0:0	4	<=
water	43:20	0:0	4	7
stmts	44:8	44:17	3	
return	44:8	44:17	4	-1
op	44:15	0:0	5	-
water	44:16	0:0	5	1
water	45:4	0:0	2	buf_size
op	45:13	0:0	2	-=
water	45:16	0:0	2	7
water	45:17	0:0	2	;
water	48:4	0:0	2	rle_bitmap_len
op	48:19	0:0	2	=
call	48:21	48:45	2	bytestream_get_be24
arg	48:41	48:45	3	&buf
op	48:41	0:0	4	&
water	48:42	0:0	4	buf
op	48:47	0:0	2	-
water	48:49	0:0	2	2
op	48:50	0:0	2	*
water	48:51	0:0	2	2
water	48:52	0:0	2	;
water	51:4	0:0	2	width
op	51:11	0:0	2	=
call	51:13	51:37	2	bytestream_get_be16
arg	51:33	51:37	3	&buf
op	51:33	0:0	4	&
water	51:34	0:0	4	buf
water	51:38	0:0	2	;
water	52:4	0:0	2	height
op	52:11	0:0	2	=
call	52:13	52:37	2	bytestream_get_be16
arg	52:33	52:37	3	&buf
op	52:33	0:0	4	&
water	52:34	0:0	4	buf
water	52:38	0:0	2	;
if	55:4	58:4	2	(avctx -> width < width || avctx -> height < height)
cond	55:8	55:48	3	avctx -> width < width || avctx -> height < height
water	55:8	0:0	4	avctx
op	55:13	0:0	4	->
water	55:15	0:0	4	width
op	55:21	0:0	4	<
water	55:23	0:0	4	width
op	55:29	0:0	4	||
water	55:32	0:0	4	avctx
op	55:37	0:0	4	->
water	55:39	0:0	4	height
op	55:46	0:0	4	<
water	55:48	0:0	4	height
stmts	55:56	58:4	3	
water	55:56	0:0	4	{
call	56:8	56:76	4	av_log
arg	56:15	56:20	5	avctx
water	56:15	0:0	6	avctx
arg	56:22	56:34	5	AV_LOG_ERROR
water	56:22	0:0	6	AV_LOG_ERROR
arg	56:36	56:76	5	"Bitmap dimensions larger than video.\n"
water	56:36	0:0	6	"Bitmap dimensions larger than video.\n"
water	56:77	0:0	4	;
return	57:8	57:17	4	-1
op	57:15	0:0	5	-
water	57:16	0:0	5	1
water	58:4	0:0	4	}
water	60:4	0:0	2	ctx
op	60:7	0:0	2	->
water	60:9	0:0	2	picture
op	60:16	0:0	2	.
water	60:17	0:0	2	w
op	60:19	0:0	2	=
water	60:21	0:0	2	width
water	60:26	0:0	2	;
water	61:4	0:0	2	ctx
op	61:7	0:0	2	->
water	61:9	0:0	2	picture
op	61:16	0:0	2	.
water	61:17	0:0	2	h
op	61:19	0:0	2	=
water	61:21	0:0	2	height
water	61:27	0:0	2	;
call	63:4	63:83	2	av_fast_malloc
arg	63:19	63:36	3	&ctx->picture.rle
op	63:19	0:0	4	&
water	63:20	0:0	4	ctx
op	63:23	0:0	4	->
water	63:25	0:0	4	picture
op	63:32	0:0	4	.
water	63:33	0:0	4	rle
arg	63:38	63:67	3	&ctx->picture.rle_buffer_size
op	63:38	0:0	4	&
water	63:39	0:0	4	ctx
op	63:42	0:0	4	->
water	63:44	0:0	4	picture
op	63:51	0:0	4	.
water	63:52	0:0	4	rle_buffer_size
arg	63:69	63:83	3	rle_bitmap_len
water	63:69	0:0	4	rle_bitmap_len
water	63:84	0:0	2	;
if	65:4	66:17	2	(! ctx -> picture . rle)
cond	65:8	65:22	3	! ctx -> picture . rle
op	65:8	0:0	4	!
water	65:9	0:0	4	ctx
op	65:12	0:0	4	->
water	65:14	0:0	4	picture
op	65:21	0:0	4	.
water	65:22	0:0	4	rle
stmts	66:8	66:17	3	
return	66:8	66:17	4	-1
op	66:15	0:0	5	-
water	66:16	0:0	5	1
call	68:4	68:42	2	memcpy
arg	68:11	68:27	3	ctx->picture.rle
water	68:11	0:0	4	ctx
op	68:14	0:0	4	->
water	68:16	0:0	4	picture
op	68:23	0:0	4	.
water	68:24	0:0	4	rle
arg	68:29	68:32	3	buf
water	68:29	0:0	4	buf
arg	68:34	68:42	3	buf_size
water	68:34	0:0	4	buf_size
water	68:43	0:0	2	;
water	69:4	0:0	2	ctx
op	69:7	0:0	2	->
water	69:9	0:0	2	picture
op	69:16	0:0	2	.
water	69:17	0:0	2	rle_data_len
op	69:30	0:0	2	=
water	69:32	0:0	2	buf_size
water	69:40	0:0	2	;
water	70:4	0:0	2	ctx
op	70:7	0:0	2	->
water	70:9	0:0	2	picture
op	70:16	0:0	2	.
water	70:17	0:0	2	rle_remaining_len
op	70:35	0:0	2	=
water	70:37	0:0	2	rle_bitmap_len
op	70:52	0:0	2	-
water	70:54	0:0	2	buf_size
water	70:62	0:0	2	;
return	72:4	72:12	2	0
water	72:11	0:0	3	0

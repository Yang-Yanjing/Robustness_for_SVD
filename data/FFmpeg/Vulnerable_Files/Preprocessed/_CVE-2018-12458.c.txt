func	1:0	29:0	0	static void	mpeg4_encode_gop_header
params	1:35	0:0	1	
param	1:36	1:53	2	MpegEncContext *	s
stmnts	0:0	28:29	1	
decl	3:4	3:35	2	int64_t	hours
water	3:17	0:0	2	,
decl	3:4	3:35	2	int64_t	minutes
water	3:26	0:0	2	,
decl	3:4	3:35	2	int64_t	seconds
decl	4:4	4:16	2	int64_t	time
call	6:4	6:26	2	put_bits
arg	6:13	6:19	3	&s->pb
op	6:13	0:0	4	&
water	6:14	0:0	4	s
op	6:15	0:0	4	->
water	6:17	0:0	4	pb
arg	6:21	6:23	3	16
water	6:21	0:0	4	16
arg	6:25	6:26	3	0
water	6:25	0:0	4	0
water	6:27	0:0	2	;
call	7:4	7:38	2	put_bits
arg	7:13	7:19	3	&s->pb
op	7:13	0:0	4	&
water	7:14	0:0	4	s
op	7:15	0:0	4	->
water	7:17	0:0	4	pb
arg	7:21	7:23	3	16
water	7:21	0:0	4	16
arg	7:25	7:38	3	GOP_STARTCODE
water	7:25	0:0	4	GOP_STARTCODE
water	7:39	0:0	2	;
water	9:4	0:0	2	time
op	9:9	0:0	2	=
water	9:11	0:0	2	s
op	9:12	0:0	2	->
water	9:14	0:0	2	current_picture_ptr
op	9:33	0:0	2	->
water	9:35	0:0	2	f
op	9:36	0:0	2	->
water	9:38	0:0	2	pts
water	9:41	0:0	2	;
if	10:4	11:65	2	(s -> reordered_input_picture [ 1 ])
cond	10:8	10:36	3	s -> reordered_input_picture [ 1 ]
water	10:8	0:0	4	s
op	10:9	0:0	4	->
water	10:11	0:0	4	reordered_input_picture
op	10:34	0:0	4	[
water	10:35	0:0	4	1
op	10:36	0:0	4	]
stmts	11:8	11:65	3	
water	11:8	0:0	4	time
op	11:13	0:0	4	=
call	11:15	11:64	4	FFMIN
arg	11:21	11:25	5	time
water	11:21	0:0	6	time
arg	11:27	11:64	5	s->reordered_input_picture[1]->f->pts
water	11:27	0:0	6	s
op	11:28	0:0	6	->
water	11:30	0:0	6	reordered_input_picture
op	11:53	0:0	6	[
water	11:54	0:0	6	1
op	11:55	0:0	6	]
op	11:56	0:0	6	->
water	11:58	0:0	6	f
op	11:59	0:0	6	->
water	11:61	0:0	6	pts
water	11:65	0:0	4	;
water	12:4	0:0	2	time
op	12:9	0:0	2	=
water	12:11	0:0	2	time
op	12:16	0:0	2	*
water	12:18	0:0	2	s
op	12:19	0:0	2	->
water	12:21	0:0	2	avctx
op	12:26	0:0	2	->
water	12:28	0:0	2	time_base
op	12:37	0:0	2	.
water	12:38	0:0	2	num
water	12:41	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	last_time_base
op	13:22	0:0	2	=
call	13:24	13:60	2	FFUDIV
arg	13:31	13:35	3	time
water	13:31	0:0	4	time
arg	13:37	13:60	3	s->avctx->time_base.den
water	13:37	0:0	4	s
op	13:38	0:0	4	->
water	13:40	0:0	4	avctx
op	13:45	0:0	4	->
water	13:47	0:0	4	time_base
op	13:56	0:0	4	.
water	13:57	0:0	4	den
water	13:61	0:0	2	;
water	15:4	0:0	2	seconds
op	15:12	0:0	2	=
call	15:14	15:50	2	FFUDIV
arg	15:21	15:25	3	time
water	15:21	0:0	4	time
arg	15:27	15:50	3	s->avctx->time_base.den
water	15:27	0:0	4	s
op	15:28	0:0	4	->
water	15:30	0:0	4	avctx
op	15:35	0:0	4	->
water	15:37	0:0	4	time_base
op	15:46	0:0	4	.
water	15:47	0:0	4	den
water	15:51	0:0	2	;
water	16:4	0:0	2	minutes
op	16:12	0:0	2	=
call	16:14	16:32	2	FFUDIV
arg	16:21	16:28	3	seconds
water	16:21	0:0	4	seconds
arg	16:30	16:32	3	60
water	16:30	0:0	4	60
water	16:33	0:0	2	;
water	16:35	0:0	2	seconds
op	16:43	0:0	2	=
call	16:45	16:63	2	FFUMOD
arg	16:52	16:59	3	seconds
water	16:52	0:0	4	seconds
arg	16:61	16:63	3	60
water	16:61	0:0	4	60
water	16:64	0:0	2	;
water	17:4	0:0	2	hours
op	17:12	0:0	2	=
call	17:14	17:32	2	FFUDIV
arg	17:21	17:28	3	minutes
water	17:21	0:0	4	minutes
arg	17:30	17:32	3	60
water	17:30	0:0	4	60
water	17:33	0:0	2	;
water	17:35	0:0	2	minutes
op	17:43	0:0	2	=
call	17:45	17:63	2	FFUMOD
arg	17:52	17:59	3	minutes
water	17:52	0:0	4	minutes
arg	17:61	17:63	3	60
water	17:61	0:0	4	60
water	17:64	0:0	2	;
water	18:4	0:0	2	hours
op	18:12	0:0	2	=
call	18:14	18:32	2	FFUMOD
arg	18:21	18:28	3	hours
water	18:21	0:0	4	hours
arg	18:30	18:32	3	24
water	18:30	0:0	4	24
water	18:33	0:0	2	;
call	20:4	20:29	2	put_bits
arg	20:13	20:19	3	&s->pb
op	20:13	0:0	4	&
water	20:14	0:0	4	s
op	20:15	0:0	4	->
water	20:17	0:0	4	pb
arg	20:21	20:22	3	5
water	20:21	0:0	4	5
arg	20:24	20:29	3	hours
water	20:24	0:0	4	hours
water	20:30	0:0	2	;
call	21:4	21:31	2	put_bits
arg	21:13	21:19	3	&s->pb
op	21:13	0:0	4	&
water	21:14	0:0	4	s
op	21:15	0:0	4	->
water	21:17	0:0	4	pb
arg	21:21	21:22	3	6
water	21:21	0:0	4	6
arg	21:24	21:31	3	minutes
water	21:24	0:0	4	minutes
water	21:32	0:0	2	;
call	22:4	22:25	2	put_bits
arg	22:13	22:19	3	&s->pb
op	22:13	0:0	4	&
water	22:14	0:0	4	s
op	22:15	0:0	4	->
water	22:17	0:0	4	pb
arg	22:21	22:22	3	1
water	22:21	0:0	4	1
arg	22:24	22:25	3	1
water	22:24	0:0	4	1
water	22:26	0:0	2	;
call	23:4	23:31	2	put_bits
arg	23:13	23:19	3	&s->pb
op	23:13	0:0	4	&
water	23:14	0:0	4	s
op	23:15	0:0	4	->
water	23:17	0:0	4	pb
arg	23:21	23:22	3	6
water	23:21	0:0	4	6
arg	23:24	23:31	3	seconds
water	23:24	0:0	4	seconds
water	23:32	0:0	2	;
call	25:4	25:70	2	put_bits
arg	25:13	25:19	3	&s->pb
op	25:13	0:0	4	&
water	25:14	0:0	4	s
op	25:15	0:0	4	->
water	25:17	0:0	4	pb
arg	25:21	25:22	3	1
water	25:21	0:0	4	1
arg	25:24	25:70	3	!!(s->avctx->flags&AV_CODEC_FLAG_CLOSED_GOP)
op	25:24	0:0	4	!
op	25:25	0:0	4	!
water	25:26	0:0	4	(
water	25:27	0:0	4	s
op	25:28	0:0	4	->
water	25:30	0:0	4	avctx
op	25:35	0:0	4	->
water	25:37	0:0	4	flags
op	25:43	0:0	4	&
water	25:45	0:0	4	AV_CODEC_FLAG_CLOSED_GOP
water	25:69	0:0	4	)
water	25:71	0:0	2	;
call	26:4	26:25	2	put_bits
arg	26:13	26:19	3	&s->pb
op	26:13	0:0	4	&
water	26:14	0:0	4	s
op	26:15	0:0	4	->
water	26:17	0:0	4	pb
arg	26:21	26:22	3	1
water	26:21	0:0	4	1
arg	26:24	26:25	3	0
water	26:24	0:0	4	0
water	26:26	0:0	2	;
call	28:4	28:28	2	ff_mpeg4_stuffing
arg	28:22	28:28	3	&s->pb
op	28:22	0:0	4	&
water	28:23	0:0	4	s
op	28:24	0:0	4	->
water	28:26	0:0	4	pb
water	28:29	0:0	2	;

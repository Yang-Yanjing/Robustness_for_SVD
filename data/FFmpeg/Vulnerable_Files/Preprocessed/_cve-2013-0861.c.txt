func	2:4	26:0	0	attribute_align_arg	avcodec_decode_audio4
params	2:45	0:0	1	
param	2:46	2:67	2	AVCodecContext *	avctx
param	3:46	3:60	2	AVFrame *	frame
param	4:46	4:64	2	int *	got_frame_ptr
param	5:46	5:61	2	AVPacket *	avpkt
stmnts	0:0	25:14	1	
decl	7:4	7:15	2	int	ret
op	7:12	0:0	2	=
water	7:14	0:0	2	0
op	9:4	0:0	2	*
water	9:5	0:0	2	got_frame_ptr
op	9:19	0:0	2	=
water	9:21	0:0	2	0
water	9:22	0:0	2	;
if	11:4	14:4	2	(! avpkt -> data && avpkt -> size)
cond	11:8	11:31	3	! avpkt -> data && avpkt -> size
op	11:8	0:0	4	!
water	11:9	0:0	4	avpkt
op	11:14	0:0	4	->
water	11:16	0:0	4	data
op	11:21	0:0	4	&&
water	11:24	0:0	4	avpkt
op	11:29	0:0	4	->
water	11:31	0:0	4	size
stmts	11:37	14:4	3	
water	11:37	0:0	4	{
call	12:8	12:76	4	av_log
arg	12:15	12:20	5	avctx
water	12:15	0:0	6	avctx
arg	12:22	12:34	5	AV_LOG_ERROR
water	12:22	0:0	6	AV_LOG_ERROR
arg	12:36	12:76	5	"invalid packet: NULL data, size != 0\n"
water	12:36	0:0	6	"invalid packet: NULL data, size != 0\n"
water	12:77	0:0	4	;
return	13:8	13:30	4	AVERROR(EINVAL)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	EINVAL
water	13:23	0:0	7	EINVAL
water	14:4	0:0	4	}
if	16:4	24:4	2	(( avctx -> codec -> capabilities & CODEC_CAP_DELAY ) || avpkt -> size)
cond	16:8	16:65	3	( avctx -> codec -> capabilities & CODEC_CAP_DELAY ) || avpkt -> size
water	16:8	0:0	4	(
water	16:9	0:0	4	avctx
op	16:14	0:0	4	->
water	16:16	0:0	4	codec
op	16:21	0:0	4	->
water	16:23	0:0	4	capabilities
op	16:36	0:0	4	&
water	16:38	0:0	4	CODEC_CAP_DELAY
water	16:53	0:0	4	)
op	16:55	0:0	4	||
water	16:58	0:0	4	avpkt
op	16:63	0:0	4	->
water	16:65	0:0	4	size
stmts	16:71	24:4	3	
water	16:71	0:0	4	{
call	17:8	17:39	4	av_packet_split_side_data
arg	17:34	17:39	5	avpkt
water	17:34	0:0	6	avpkt
water	17:40	0:0	4	;
water	18:8	0:0	4	avctx
op	18:13	0:0	4	->
water	18:15	0:0	4	pkt
op	18:19	0:0	4	=
water	18:21	0:0	4	avpkt
water	18:26	0:0	4	;
water	19:8	0:0	4	ret
op	19:12	0:0	4	=
call	19:14	19:69	4	avctx->codec->decode
arg	19:35	19:40	5	avctx
water	19:35	0:0	6	avctx
arg	19:42	19:47	5	frame
water	19:42	0:0	6	frame
arg	19:49	19:62	5	got_frame_ptr
water	19:49	0:0	6	got_frame_ptr
arg	19:64	19:69	5	avpkt
water	19:64	0:0	6	avpkt
water	19:70	0:0	4	;
if	20:8	23:8	4	(ret >= 0 && * got_frame_ptr)
cond	20:12	20:25	5	ret >= 0 && * got_frame_ptr
water	20:12	0:0	6	ret
op	20:16	0:0	6	>=
water	20:19	0:0	6	0
op	20:21	0:0	6	&&
op	20:24	0:0	6	*
water	20:25	0:0	6	got_frame_ptr
stmts	20:40	23:8	5	
water	20:40	0:0	6	{
water	21:12	0:0	6	avctx
op	21:17	0:0	6	->
water	21:19	0:0	6	frame_number
op	21:31	0:0	6	++
water	21:33	0:0	6	;
water	22:12	0:0	6	frame
op	22:17	0:0	6	->
water	22:19	0:0	6	pkt_dts
op	22:27	0:0	6	=
water	22:29	0:0	6	avpkt
op	22:34	0:0	6	->
water	22:36	0:0	6	dts
water	22:39	0:0	6	;
water	23:8	0:0	6	}
water	24:4	0:0	4	}
return	25:4	25:14	2	ret
water	25:11	0:0	3	ret

func	1:0	135:0	0	static int	mov_write_audio_tag
params	1:30	0:0	1	
param	1:31	1:49	2	AVFormatContext *	s
param	1:51	1:66	2	AVIOContext *	pb
param	1:68	1:86	2	MOVMuxContext *	mov
param	1:88	1:103	2	MOVTrack *	track
stmnts	0:0	134:31	1	
decl	3:4	3:31	2	int64_t	pos
op	3:16	0:0	2	=
call	3:18	3:30	3	avio_tell
arg	3:28	3:30	4	pb
water	3:28	0:0	5	pb
decl	4:4	4:19	2	int	version
op	4:16	0:0	2	=
water	4:18	0:0	2	0
decl	5:4	5:29	2	uint32_t	tag
op	5:17	0:0	2	=
water	5:19	0:0	2	track
op	5:24	0:0	2	->
water	5:26	0:0	2	tag
if	7:4	19:4	2	(track -> mode == MODE_MOV)
cond	7:8	7:23	3	track -> mode == MODE_MOV
water	7:8	0:0	4	track
op	7:13	0:0	4	->
water	7:15	0:0	4	mode
op	7:20	0:0	4	==
water	7:23	0:0	4	MODE_MOV
stmts	7:33	19:4	3	
water	7:33	0:0	4	{
if	8:8	12:8	4	(track -> timescale > UINT16_MAX)
cond	8:12	8:31	5	track -> timescale > UINT16_MAX
water	8:12	0:0	6	track
op	8:17	0:0	6	->
water	8:19	0:0	6	timescale
op	8:29	0:0	6	>
water	8:31	0:0	6	UINT16_MAX
stmts	8:43	12:8	5	
water	8:43	0:0	6	{
if	9:12	10:37	6	(mov_get_lpcm_flags (track -> par -> codec_id ))
cond	9:16	9:55	7	mov_get_lpcm_flags (track -> par -> codec_id )
call	9:16	9:55	8	mov_get_lpcm_flags
arg	9:35	9:55	9	track->par->codec_id
water	9:35	0:0	10	track
op	9:40	0:0	10	->
water	9:42	0:0	10	par
op	9:45	0:0	10	->
water	9:47	0:0	10	codec_id
stmts	10:16	10:37	7	
water	10:16	0:0	8	tag
op	10:20	0:0	8	=
call	10:22	10:36	8	AV_RL32
arg	10:30	10:36	9	"lpcm"
water	10:30	0:0	10	"lpcm"
water	10:37	0:0	8	;
water	11:12	0:0	6	version
op	11:20	0:0	6	=
water	11:22	0:0	6	2
water	11:23	0:0	6	;
water	12:8	0:0	6	}
else	12:10	18:8	4
stmts	12:15	18:8	5	
if	12:15	18:8	6	(track -> audio_vbr ||mov_pcm_le_gt16 (track -> par -> codec_id ) ||mov_pcm_be_gt16 (track -> par -> codec_id ) || track -> par -> codec_id == AV_CODEC_ID_ADPCM_MS || track -> par -> codec_id == AV_CODEC_ID_ADPCM_IMA_WAV || track -> par -> codec_id == AV_CODEC_ID_QDM2)
cond	12:19	16:43	7	track -> audio_vbr ||mov_pcm_le_gt16 (track -> par -> codec_id ) ||mov_pcm_be_gt16 (track -> par -> codec_id ) || track -> par -> codec_id == AV_CODEC_ID_ADPCM_MS || track -> par -> codec_id == AV_CODEC_ID_ADPCM_IMA_WAV || track -> par -> codec_id == AV_CODEC_ID_QDM2
water	12:19	0:0	8	track
op	12:24	0:0	8	->
water	12:26	0:0	8	audio_vbr
op	12:36	0:0	8	||
call	12:39	12:75	8	mov_pcm_le_gt16
arg	12:55	12:75	9	track->par->codec_id
water	12:55	0:0	10	track
op	12:60	0:0	10	->
water	12:62	0:0	10	par
op	12:65	0:0	10	->
water	12:67	0:0	10	codec_id
op	12:77	0:0	8	||
call	13:19	13:55	8	mov_pcm_be_gt16
arg	13:35	13:55	9	track->par->codec_id
water	13:35	0:0	10	track
op	13:40	0:0	10	->
water	13:42	0:0	10	par
op	13:45	0:0	10	->
water	13:47	0:0	10	codec_id
op	13:57	0:0	8	||
water	14:19	0:0	8	track
op	14:24	0:0	8	->
water	14:26	0:0	8	par
op	14:29	0:0	8	->
water	14:31	0:0	8	codec_id
op	14:40	0:0	8	==
water	14:43	0:0	8	AV_CODEC_ID_ADPCM_MS
op	14:64	0:0	8	||
water	15:19	0:0	8	track
op	15:24	0:0	8	->
water	15:26	0:0	8	par
op	15:29	0:0	8	->
water	15:31	0:0	8	codec_id
op	15:40	0:0	8	==
water	15:43	0:0	8	AV_CODEC_ID_ADPCM_IMA_WAV
op	15:69	0:0	8	||
water	16:19	0:0	8	track
op	16:24	0:0	8	->
water	16:26	0:0	8	par
op	16:29	0:0	8	->
water	16:31	0:0	8	codec_id
op	16:40	0:0	8	==
water	16:43	0:0	8	AV_CODEC_ID_QDM2
stmts	16:61	18:8	7	
water	16:61	0:0	8	{
water	17:12	0:0	8	version
op	17:20	0:0	8	=
water	17:22	0:0	8	1
water	17:23	0:0	8	;
water	18:8	0:0	8	}
water	19:4	0:0	4	}
call	21:4	21:19	2	avio_wb32
arg	21:14	21:16	3	pb
water	21:14	0:0	4	pb
arg	21:18	21:19	3	0
water	21:18	0:0	4	0
water	21:20	0:0	2	;
if	22:4	24:4	2	(mov -> encryption_scheme != MOV_ENC_NONE)
cond	22:8	22:34	3	mov -> encryption_scheme != MOV_ENC_NONE
water	22:8	0:0	4	mov
op	22:11	0:0	4	->
water	22:13	0:0	4	encryption_scheme
op	22:31	0:0	4	!=
water	22:34	0:0	4	MOV_ENC_NONE
stmts	22:48	24:4	3	
water	22:48	0:0	4	{
call	23:8	23:31	4	ffio_wfourcc
arg	23:21	23:23	5	pb
water	23:21	0:0	6	pb
arg	23:25	23:31	5	"enca"
water	23:25	0:0	6	"enca"
water	23:32	0:0	4	;
water	24:4	0:0	4	}
else	24:6	26:4	2
stmts	24:11	26:4	3	
water	24:11	0:0	4	{
call	25:8	25:25	4	avio_wl32
arg	25:18	25:20	5	pb
water	25:18	0:0	6	pb
arg	25:22	25:25	5	tag
water	25:22	0:0	6	tag
water	25:26	0:0	4	;
water	26:4	0:0	4	}
call	27:4	27:19	2	avio_wb32
arg	27:14	27:16	3	pb
water	27:14	0:0	4	pb
arg	27:18	27:19	3	0
water	27:18	0:0	4	0
water	27:20	0:0	2	;
call	28:4	28:19	2	avio_wb16
arg	28:14	28:16	3	pb
water	28:14	0:0	4	pb
arg	28:18	28:19	3	0
water	28:18	0:0	4	0
water	28:20	0:0	2	;
call	29:4	29:19	2	avio_wb16
arg	29:14	29:16	3	pb
water	29:14	0:0	4	pb
arg	29:18	29:19	3	1
water	29:18	0:0	4	1
water	29:20	0:0	2	;
call	32:4	32:25	2	avio_wb16
arg	32:14	32:16	3	pb
water	32:14	0:0	4	pb
arg	32:18	32:25	3	version
water	32:18	0:0	4	version
water	32:26	0:0	2	;
call	33:4	33:19	2	avio_wb16
arg	33:14	33:16	3	pb
water	33:14	0:0	4	pb
arg	33:18	33:19	3	0
water	33:18	0:0	4	0
water	33:20	0:0	2	;
call	34:4	34:19	2	avio_wb32
arg	34:14	34:16	3	pb
water	34:14	0:0	4	pb
arg	34:18	34:19	3	0
water	34:18	0:0	4	0
water	34:20	0:0	2	;
if	36:4	50:4	2	(version == 2)
cond	36:8	36:19	3	version == 2
water	36:8	0:0	4	version
op	36:16	0:0	4	==
water	36:19	0:0	4	2
stmts	36:22	50:4	3	
water	36:22	0:0	4	{
call	37:8	37:23	4	avio_wb16
arg	37:18	37:20	5	pb
water	37:18	0:0	6	pb
arg	37:22	37:23	5	3
water	37:22	0:0	6	3
water	37:24	0:0	4	;
call	38:8	38:24	4	avio_wb16
arg	38:18	38:20	5	pb
water	38:18	0:0	6	pb
arg	38:22	38:24	5	16
water	38:22	0:0	6	16
water	38:25	0:0	4	;
call	39:8	39:28	4	avio_wb16
arg	39:18	39:20	5	pb
water	39:18	0:0	6	pb
arg	39:22	39:28	5	0xfffe
water	39:22	0:0	6	0
water	39:23	0:0	6	xfffe
water	39:29	0:0	4	;
call	40:8	40:23	4	avio_wb16
arg	40:18	40:20	5	pb
water	40:18	0:0	6	pb
arg	40:22	40:23	5	0
water	40:22	0:0	6	0
water	40:24	0:0	4	;
call	41:8	41:32	4	avio_wb32
arg	41:18	41:20	5	pb
water	41:18	0:0	6	pb
arg	41:22	41:32	5	0x00010000
water	41:22	0:0	6	0
water	41:23	0:0	6	x00010000
water	41:33	0:0	4	;
call	42:8	42:24	4	avio_wb32
arg	42:18	42:20	5	pb
water	42:18	0:0	6	pb
arg	42:22	42:24	5	72
water	42:22	0:0	6	72
water	42:25	0:0	4	;
call	43:8	43:60	4	avio_wb64
arg	43:18	43:20	5	pb
water	43:18	0:0	6	pb
arg	43:22	43:60	5	av_double2int(track->par->sample_rate)
call	43:22	43:59	6	av_double2int
arg	43:36	43:59	7	track->par->sample_rate
water	43:36	0:0	8	track
op	43:41	0:0	8	->
water	43:43	0:0	8	par
op	43:46	0:0	8	->
water	43:48	0:0	8	sample_rate
water	43:61	0:0	4	;
call	44:8	44:42	4	avio_wb32
arg	44:18	44:20	5	pb
water	44:18	0:0	6	pb
arg	44:22	44:42	5	track->par->channels
water	44:22	0:0	6	track
op	44:27	0:0	6	->
water	44:29	0:0	6	par
op	44:32	0:0	6	->
water	44:34	0:0	6	channels
water	44:43	0:0	4	;
call	45:8	45:32	4	avio_wb32
arg	45:18	45:20	5	pb
water	45:18	0:0	6	pb
arg	45:22	45:32	5	0x7F000000
water	45:22	0:0	6	0
water	45:23	0:0	6	x7F000000
water	45:33	0:0	4	;
call	46:8	46:66	4	avio_wb32
arg	46:18	46:20	5	pb
water	46:18	0:0	6	pb
arg	46:22	46:66	5	av_get_bits_per_sample(track->par->codec_id)
call	46:22	46:65	6	av_get_bits_per_sample
arg	46:45	46:65	7	track->par->codec_id
water	46:45	0:0	8	track
op	46:50	0:0	8	->
water	46:52	0:0	8	par
op	46:55	0:0	8	->
water	46:57	0:0	8	codec_id
water	46:67	0:0	4	;
call	47:8	47:62	4	avio_wb32
arg	47:18	47:20	5	pb
water	47:18	0:0	6	pb
arg	47:22	47:62	5	mov_get_lpcm_flags(track->par->codec_id)
call	47:22	47:61	6	mov_get_lpcm_flags
arg	47:41	47:61	7	track->par->codec_id
water	47:41	0:0	8	track
op	47:46	0:0	8	->
water	47:48	0:0	8	par
op	47:51	0:0	8	->
water	47:53	0:0	8	codec_id
water	47:63	0:0	4	;
call	48:8	48:40	4	avio_wb32
arg	48:18	48:20	5	pb
water	48:18	0:0	6	pb
arg	48:22	48:40	5	track->sample_size
water	48:22	0:0	6	track
op	48:27	0:0	6	->
water	48:29	0:0	6	sample_size
water	48:41	0:0	4	;
call	49:8	49:51	4	avio_wb32
arg	49:18	49:20	5	pb
water	49:18	0:0	6	pb
arg	49:22	49:51	5	get_samples_per_packet(track)
call	49:22	49:50	6	get_samples_per_packet
arg	49:45	49:50	7	track
water	49:45	0:0	8	track
water	49:52	0:0	4	;
water	50:4	0:0	4	}
else	50:6	83:4	2
stmts	50:11	83:4	3	
water	50:11	0:0	4	{
if	51:8	61:8	4	(track -> mode == MODE_MOV)
cond	51:12	51:27	5	track -> mode == MODE_MOV
water	51:12	0:0	6	track
op	51:17	0:0	6	->
water	51:19	0:0	6	mode
op	51:24	0:0	6	==
water	51:27	0:0	6	MODE_MOV
stmts	51:37	61:8	5	
water	51:37	0:0	6	{
call	52:12	52:46	6	avio_wb16
arg	52:22	52:24	7	pb
water	52:22	0:0	8	pb
arg	52:26	52:46	7	track->par->channels
water	52:26	0:0	8	track
op	52:31	0:0	8	->
water	52:33	0:0	8	par
op	52:36	0:0	8	->
water	52:38	0:0	8	channels
water	52:47	0:0	6	;
if	53:12	55:32	6	(track -> par -> codec_id == AV_CODEC_ID_PCM_U8 || track -> par -> codec_id == AV_CODEC_ID_PCM_S8)
cond	53:16	54:40	7	track -> par -> codec_id == AV_CODEC_ID_PCM_U8 || track -> par -> codec_id == AV_CODEC_ID_PCM_S8
water	53:16	0:0	8	track
op	53:21	0:0	8	->
water	53:23	0:0	8	par
op	53:26	0:0	8	->
water	53:28	0:0	8	codec_id
op	53:37	0:0	8	==
water	53:40	0:0	8	AV_CODEC_ID_PCM_U8
op	53:59	0:0	8	||
water	54:16	0:0	8	track
op	54:21	0:0	8	->
water	54:23	0:0	8	par
op	54:26	0:0	8	->
water	54:28	0:0	8	codec_id
op	54:37	0:0	8	==
water	54:40	0:0	8	AV_CODEC_ID_PCM_S8
stmts	55:16	55:32	7	
call	55:16	55:31	8	avio_wb16
arg	55:26	55:28	9	pb
water	55:26	0:0	10	pb
arg	55:30	55:31	9	8
water	55:30	0:0	10	8
water	55:32	0:0	8	;
else	56:12	57:64	6
stmts	56:17	57:64	7	
if	56:17	57:64	8	(track -> par -> codec_id == AV_CODEC_ID_ADPCM_G726)
cond	56:21	56:45	9	track -> par -> codec_id == AV_CODEC_ID_ADPCM_G726
water	56:21	0:0	10	track
op	56:26	0:0	10	->
water	56:28	0:0	10	par
op	56:31	0:0	10	->
water	56:33	0:0	10	codec_id
op	56:42	0:0	10	==
water	56:45	0:0	10	AV_CODEC_ID_ADPCM_G726
stmts	57:16	57:64	9	
call	57:16	57:63	10	avio_wb16
arg	57:26	57:28	11	pb
water	57:26	0:0	12	pb
arg	57:30	57:63	11	track->par->bits_per_coded_sample
water	57:30	0:0	12	track
op	57:35	0:0	12	->
water	57:37	0:0	12	par
op	57:40	0:0	12	->
water	57:42	0:0	12	bits_per_coded_sample
water	57:64	0:0	10	;
else	58:12	59:33	6
stmts	59:16	59:33	7	
call	59:16	59:32	8	avio_wb16
arg	59:26	59:28	9	pb
water	59:26	0:0	10	pb
arg	59:30	59:32	9	16
water	59:30	0:0	10	16
water	59:33	0:0	8	;
call	60:12	60:51	6	avio_wb16
arg	60:22	60:24	7	pb
water	60:22	0:0	8	pb
arg	60:26	60:51	7	track->audio_vbr?-2:0
water	60:26	0:0	8	track
op	60:31	0:0	8	->
water	60:33	0:0	8	audio_vbr
water	60:43	0:0	8	?
op	60:45	0:0	8	-
water	60:46	0:0	8	2
water	60:48	0:0	8	:
water	60:50	0:0	8	0
water	60:52	0:0	6	;
water	61:8	0:0	6	}
else	61:10	74:8	4
stmts	61:15	74:8	5	
water	61:15	0:0	6	{
if	62:12	65:12	6	(track -> par -> codec_id == AV_CODEC_ID_FLAC || track -> par -> codec_id == AV_CODEC_ID_OPUS)
cond	62:16	63:40	7	track -> par -> codec_id == AV_CODEC_ID_FLAC || track -> par -> codec_id == AV_CODEC_ID_OPUS
water	62:16	0:0	8	track
op	62:21	0:0	8	->
water	62:23	0:0	8	par
op	62:26	0:0	8	->
water	62:28	0:0	8	codec_id
op	62:37	0:0	8	==
water	62:40	0:0	8	AV_CODEC_ID_FLAC
op	62:57	0:0	8	||
water	63:16	0:0	8	track
op	63:21	0:0	8	->
water	63:23	0:0	8	par
op	63:26	0:0	8	->
water	63:28	0:0	8	codec_id
op	63:37	0:0	8	==
water	63:40	0:0	8	AV_CODEC_ID_OPUS
stmts	63:58	65:12	7	
water	63:58	0:0	8	{
call	64:16	64:50	8	avio_wb16
arg	64:26	64:28	9	pb
water	64:26	0:0	10	pb
arg	64:30	64:50	9	track->par->channels
water	64:30	0:0	10	track
op	64:35	0:0	10	->
water	64:37	0:0	10	par
op	64:40	0:0	10	->
water	64:42	0:0	10	channels
water	64:51	0:0	8	;
water	65:12	0:0	8	}
else	65:14	67:12	6
stmts	65:19	67:12	7	
water	65:19	0:0	8	{
call	66:16	66:31	8	avio_wb16
arg	66:26	66:28	9	pb
water	66:26	0:0	10	pb
arg	66:30	66:31	9	2
water	66:30	0:0	10	2
water	66:32	0:0	8	;
water	67:12	0:0	8	}
if	68:12	70:12	6	(track -> par -> codec_id == AV_CODEC_ID_FLAC)
cond	68:16	68:40	7	track -> par -> codec_id == AV_CODEC_ID_FLAC
water	68:16	0:0	8	track
op	68:21	0:0	8	->
water	68:23	0:0	8	par
op	68:26	0:0	8	->
water	68:28	0:0	8	codec_id
op	68:37	0:0	8	==
water	68:40	0:0	8	AV_CODEC_ID_FLAC
stmts	68:58	70:12	7	
water	68:58	0:0	8	{
call	69:16	69:61	8	avio_wb16
arg	69:26	69:28	9	pb
water	69:26	0:0	10	pb
arg	69:30	69:61	9	track->par->bits_per_raw_sample
water	69:30	0:0	10	track
op	69:35	0:0	10	->
water	69:37	0:0	10	par
op	69:40	0:0	10	->
water	69:42	0:0	10	bits_per_raw_sample
water	69:62	0:0	8	;
water	70:12	0:0	8	}
else	70:14	72:12	6
stmts	70:19	72:12	7	
water	70:19	0:0	8	{
call	71:16	71:32	8	avio_wb16
arg	71:26	71:28	9	pb
water	71:26	0:0	10	pb
arg	71:30	71:32	9	16
water	71:30	0:0	10	16
water	71:33	0:0	8	;
water	72:12	0:0	8	}
call	73:12	73:27	6	avio_wb16
arg	73:22	73:24	7	pb
water	73:22	0:0	8	pb
arg	73:26	73:27	7	0
water	73:26	0:0	8	0
water	73:28	0:0	6	;
water	74:8	0:0	6	}
call	76:8	76:23	4	avio_wb16
arg	76:18	76:20	5	pb
water	76:18	0:0	6	pb
arg	76:22	76:23	5	0
water	76:22	0:0	6	0
water	76:24	0:0	4	;
if	77:8	78:32	4	(track -> par -> codec_id == AV_CODEC_ID_OPUS)
cond	77:12	77:36	5	track -> par -> codec_id == AV_CODEC_ID_OPUS
water	77:12	0:0	6	track
op	77:17	0:0	6	->
water	77:19	0:0	6	par
op	77:22	0:0	6	->
water	77:24	0:0	6	codec_id
op	77:33	0:0	6	==
water	77:36	0:0	6	AV_CODEC_ID_OPUS
stmts	78:12	78:32	5	
call	78:12	78:31	6	avio_wb16
arg	78:22	78:24	7	pb
water	78:22	0:0	8	pb
arg	78:26	78:31	7	48000
water	78:26	0:0	8	48000
water	78:32	0:0	6	;
else	79:8	81:54	4
stmts	80:12	81:54	5	
call	80:12	81:53	6	avio_wb16
arg	80:22	80:24	7	pb
water	80:22	0:0	8	pb
arg	80:26	81:53	7	track->par->sample_rate<=UINT16_MAX?track->par->sample_rate:0
water	80:26	0:0	8	track
op	80:31	0:0	8	->
water	80:33	0:0	8	par
op	80:36	0:0	8	->
water	80:38	0:0	8	sample_rate
op	80:50	0:0	8	<=
water	80:53	0:0	8	UINT16_MAX
water	80:64	0:0	8	?
water	81:26	0:0	8	track
op	81:31	0:0	8	->
water	81:33	0:0	8	par
op	81:36	0:0	8	->
water	81:38	0:0	8	sample_rate
water	81:50	0:0	8	:
water	81:52	0:0	8	0
water	81:54	0:0	6	;
call	82:8	82:23	4	avio_wb16
arg	82:18	82:20	5	pb
water	82:18	0:0	6	pb
arg	82:22	82:23	5	0
water	82:22	0:0	6	0
water	82:24	0:0	4	;
water	83:4	0:0	4	}
if	85:4	94:4	2	(version == 1)
cond	85:8	85:19	3	version == 1
water	85:8	0:0	4	version
op	85:16	0:0	4	==
water	85:19	0:0	4	1
stmts	85:22	94:4	3	
water	85:22	0:0	4	{
if	86:8	88:28	4	(mov_pcm_le_gt16 (track -> par -> codec_id ) ||mov_pcm_be_gt16 (track -> par -> codec_id ))
cond	86:12	87:48	5	mov_pcm_le_gt16 (track -> par -> codec_id ) ||mov_pcm_be_gt16 (track -> par -> codec_id )
call	86:12	86:48	6	mov_pcm_le_gt16
arg	86:28	86:48	7	track->par->codec_id
water	86:28	0:0	8	track
op	86:33	0:0	8	->
water	86:35	0:0	8	par
op	86:38	0:0	8	->
water	86:40	0:0	8	codec_id
op	86:50	0:0	6	||
call	87:12	87:48	6	mov_pcm_be_gt16
arg	87:28	87:48	7	track->par->codec_id
water	87:28	0:0	8	track
op	87:33	0:0	8	->
water	87:35	0:0	8	par
op	87:38	0:0	8	->
water	87:40	0:0	8	codec_id
stmts	88:12	88:28	5	
call	88:12	88:27	6	avio_wb32
arg	88:22	88:24	7	pb
water	88:22	0:0	8	pb
arg	88:26	88:27	7	1
water	88:26	0:0	8	1
water	88:28	0:0	6	;
else	89:8	90:49	4
stmts	90:12	90:49	5	
call	90:12	90:48	6	avio_wb32
arg	90:22	90:24	7	pb
water	90:22	0:0	8	pb
arg	90:26	90:48	7	track->par->frame_size
water	90:26	0:0	8	track
op	90:31	0:0	8	->
water	90:33	0:0	8	par
op	90:36	0:0	8	->
water	90:38	0:0	8	frame_size
water	90:49	0:0	6	;
call	91:8	91:63	4	avio_wb32
arg	91:18	91:20	5	pb
water	91:18	0:0	6	pb
arg	91:22	91:63	5	track->sample_size/track->par->channels
water	91:22	0:0	6	track
op	91:27	0:0	6	->
water	91:29	0:0	6	sample_size
op	91:41	0:0	6	/
water	91:43	0:0	6	track
op	91:48	0:0	6	->
water	91:50	0:0	6	par
op	91:53	0:0	6	->
water	91:55	0:0	6	channels
water	91:64	0:0	4	;
call	92:8	92:40	4	avio_wb32
arg	92:18	92:20	5	pb
water	92:18	0:0	6	pb
arg	92:22	92:40	5	track->sample_size
water	92:22	0:0	6	track
op	92:27	0:0	6	->
water	92:29	0:0	6	sample_size
water	92:41	0:0	4	;
call	93:8	93:23	4	avio_wb32
arg	93:18	93:20	5	pb
water	93:18	0:0	6	pb
arg	93:22	93:23	5	2
water	93:22	0:0	6	2
water	93:24	0:0	4	;
water	94:4	0:0	4	}
if	96:4	107:40	2	(track -> mode == MODE_MOV && ( track -> par -> codec_id == AV_CODEC_ID_AAC || track -> par -> codec_id == AV_CODEC_ID_AC3 || track -> par -> codec_id == AV_CODEC_ID_EAC3 || track -> par -> codec_id == AV_CODEC_ID_AMR_NB || track -> par -> codec_id == AV_CODEC_ID_ALAC || track -> par -> codec_id == AV_CODEC_ID_ADPCM_MS || track -> par -> codec_id == AV_CODEC_ID_ADPCM_IMA_WAV || track -> par -> codec_id == AV_CODEC_ID_QDM2 || (mov_pcm_le_gt16 (track -> par -> codec_id ) && version == 1 ) || (mov_pcm_be_gt16 (track -> par -> codec_id ) && version == 1 ) ))
cond	96:8	106:62	3	track -> mode == MODE_MOV && ( track -> par -> codec_id == AV_CODEC_ID_AAC || track -> par -> codec_id == AV_CODEC_ID_AC3 || track -> par -> codec_id == AV_CODEC_ID_EAC3 || track -> par -> codec_id == AV_CODEC_ID_AMR_NB || track -> par -> codec_id == AV_CODEC_ID_ALAC || track -> par -> codec_id == AV_CODEC_ID_ADPCM_MS || track -> par -> codec_id == AV_CODEC_ID_ADPCM_IMA_WAV || track -> par -> codec_id == AV_CODEC_ID_QDM2 || (mov_pcm_le_gt16 (track -> par -> codec_id ) && version == 1 ) || (mov_pcm_be_gt16 (track -> par -> codec_id ) && version == 1 ) )
water	96:8	0:0	4	track
op	96:13	0:0	4	->
water	96:15	0:0	4	mode
op	96:20	0:0	4	==
water	96:23	0:0	4	MODE_MOV
op	96:32	0:0	4	&&
water	97:8	0:0	4	(
water	97:9	0:0	4	track
op	97:14	0:0	4	->
water	97:16	0:0	4	par
op	97:19	0:0	4	->
water	97:21	0:0	4	codec_id
op	97:30	0:0	4	==
water	97:33	0:0	4	AV_CODEC_ID_AAC
op	97:59	0:0	4	||
water	98:9	0:0	4	track
op	98:14	0:0	4	->
water	98:16	0:0	4	par
op	98:19	0:0	4	->
water	98:21	0:0	4	codec_id
op	98:30	0:0	4	==
water	98:33	0:0	4	AV_CODEC_ID_AC3
op	98:59	0:0	4	||
water	99:9	0:0	4	track
op	99:14	0:0	4	->
water	99:16	0:0	4	par
op	99:19	0:0	4	->
water	99:21	0:0	4	codec_id
op	99:30	0:0	4	==
water	99:33	0:0	4	AV_CODEC_ID_EAC3
op	99:59	0:0	4	||
water	100:9	0:0	4	track
op	100:14	0:0	4	->
water	100:16	0:0	4	par
op	100:19	0:0	4	->
water	100:21	0:0	4	codec_id
op	100:30	0:0	4	==
water	100:33	0:0	4	AV_CODEC_ID_AMR_NB
op	100:59	0:0	4	||
water	101:9	0:0	4	track
op	101:14	0:0	4	->
water	101:16	0:0	4	par
op	101:19	0:0	4	->
water	101:21	0:0	4	codec_id
op	101:30	0:0	4	==
water	101:33	0:0	4	AV_CODEC_ID_ALAC
op	101:59	0:0	4	||
water	102:9	0:0	4	track
op	102:14	0:0	4	->
water	102:16	0:0	4	par
op	102:19	0:0	4	->
water	102:21	0:0	4	codec_id
op	102:30	0:0	4	==
water	102:33	0:0	4	AV_CODEC_ID_ADPCM_MS
op	102:59	0:0	4	||
water	103:9	0:0	4	track
op	103:14	0:0	4	->
water	103:16	0:0	4	par
op	103:19	0:0	4	->
water	103:21	0:0	4	codec_id
op	103:30	0:0	4	==
water	103:33	0:0	4	AV_CODEC_ID_ADPCM_IMA_WAV
op	103:59	0:0	4	||
water	104:9	0:0	4	track
op	104:14	0:0	4	->
water	104:16	0:0	4	par
op	104:19	0:0	4	->
water	104:21	0:0	4	codec_id
op	104:30	0:0	4	==
water	104:33	0:0	4	AV_CODEC_ID_QDM2
op	104:59	0:0	4	||
water	105:9	0:0	4	(
call	105:10	105:46	4	mov_pcm_le_gt16
arg	105:26	105:46	5	track->par->codec_id
water	105:26	0:0	6	track
op	105:31	0:0	6	->
water	105:33	0:0	6	par
op	105:36	0:0	6	->
water	105:38	0:0	6	codec_id
op	105:48	0:0	4	&&
water	105:51	0:0	4	version
op	105:58	0:0	4	==
water	105:60	0:0	4	1
water	105:61	0:0	4	)
op	105:63	0:0	4	||
water	106:9	0:0	4	(
call	106:10	106:46	4	mov_pcm_be_gt16
arg	106:26	106:46	5	track->par->codec_id
water	106:26	0:0	6	track
op	106:31	0:0	6	->
water	106:33	0:0	6	par
op	106:36	0:0	6	->
water	106:38	0:0	6	codec_id
op	106:48	0:0	4	&&
water	106:51	0:0	4	version
op	106:58	0:0	4	==
water	106:60	0:0	4	1
water	106:61	0:0	4	)
water	106:62	0:0	4	)
stmts	107:8	107:40	3	
call	107:8	107:39	4	mov_write_wave_tag
arg	107:27	107:28	5	s
water	107:27	0:0	6	s
arg	107:30	107:32	5	pb
water	107:30	0:0	6	pb
arg	107:34	107:39	5	track
water	107:34	0:0	6	track
water	107:40	0:0	4	;
else	108:4	109:37	2
stmts	108:9	109:37	3	
if	108:9	109:37	4	(track -> tag ==MKTAG ('m' ,'p' ,'4' ,'a' ))
cond	108:13	108:48	5	track -> tag ==MKTAG ('m' ,'p' ,'4' ,'a' )
water	108:13	0:0	6	track
op	108:18	0:0	6	->
water	108:20	0:0	6	tag
op	108:24	0:0	6	==
call	108:27	108:48	6	MKTAG
arg	108:33	108:36	7	'm'
water	108:33	0:0	8	'm'
arg	108:37	108:40	7	'p'
water	108:37	0:0	8	'p'
arg	108:41	108:44	7	'4'
water	108:41	0:0	8	'4'
arg	108:45	108:48	7	'a'
water	108:45	0:0	8	'a'
stmts	109:8	109:37	5	
call	109:8	109:36	6	mov_write_esds_tag
arg	109:27	109:29	7	pb
water	109:27	0:0	8	pb
arg	109:31	109:36	7	track
water	109:31	0:0	8	track
water	109:37	0:0	6	;
else	110:4	111:36	2
stmts	110:9	111:36	3	
if	110:9	111:36	4	(track -> par -> codec_id == AV_CODEC_ID_AMR_NB)
cond	110:13	110:37	5	track -> par -> codec_id == AV_CODEC_ID_AMR_NB
water	110:13	0:0	6	track
op	110:18	0:0	6	->
water	110:20	0:0	6	par
op	110:23	0:0	6	->
water	110:25	0:0	6	codec_id
op	110:34	0:0	6	==
water	110:37	0:0	6	AV_CODEC_ID_AMR_NB
stmts	111:8	111:36	5	
call	111:8	111:35	6	mov_write_amr_tag
arg	111:26	111:28	7	pb
water	111:26	0:0	8	pb
arg	111:30	111:35	7	track
water	111:30	0:0	8	track
water	111:36	0:0	6	;
else	112:4	113:36	2
stmts	112:9	113:36	3	
if	112:9	113:36	4	(track -> par -> codec_id == AV_CODEC_ID_AC3)
cond	112:13	112:37	5	track -> par -> codec_id == AV_CODEC_ID_AC3
water	112:13	0:0	6	track
op	112:18	0:0	6	->
water	112:20	0:0	6	par
op	112:23	0:0	6	->
water	112:25	0:0	6	codec_id
op	112:34	0:0	6	==
water	112:37	0:0	6	AV_CODEC_ID_AC3
stmts	113:8	113:36	5	
call	113:8	113:35	6	mov_write_ac3_tag
arg	113:26	113:28	7	pb
water	113:26	0:0	8	pb
arg	113:30	113:35	7	track
water	113:30	0:0	8	track
water	113:36	0:0	6	;
else	114:4	115:37	2
stmts	114:9	115:37	3	
if	114:9	115:37	4	(track -> par -> codec_id == AV_CODEC_ID_EAC3)
cond	114:13	114:37	5	track -> par -> codec_id == AV_CODEC_ID_EAC3
water	114:13	0:0	6	track
op	114:18	0:0	6	->
water	114:20	0:0	6	par
op	114:23	0:0	6	->
water	114:25	0:0	6	codec_id
op	114:34	0:0	6	==
water	114:37	0:0	6	AV_CODEC_ID_EAC3
stmts	115:8	115:37	5	
call	115:8	115:36	6	mov_write_eac3_tag
arg	115:27	115:29	7	pb
water	115:27	0:0	8	pb
arg	115:31	115:36	7	track
water	115:31	0:0	8	track
water	115:37	0:0	6	;
else	116:4	117:42	2
stmts	116:9	117:42	3	
if	116:9	117:42	4	(track -> par -> codec_id == AV_CODEC_ID_ALAC)
cond	116:13	116:37	5	track -> par -> codec_id == AV_CODEC_ID_ALAC
water	116:13	0:0	6	track
op	116:18	0:0	6	->
water	116:20	0:0	6	par
op	116:23	0:0	6	->
water	116:25	0:0	6	codec_id
op	116:34	0:0	6	==
water	116:37	0:0	6	AV_CODEC_ID_ALAC
stmts	117:8	117:42	5	
call	117:8	117:41	6	mov_write_extradata_tag
arg	117:32	117:34	7	pb
water	117:32	0:0	8	pb
arg	117:36	117:41	7	track
water	117:36	0:0	8	track
water	117:42	0:0	6	;
else	118:4	119:40	2
stmts	118:9	119:40	3	
if	118:9	119:40	4	(track -> par -> codec_id == AV_CODEC_ID_WMAPRO)
cond	118:13	118:37	5	track -> par -> codec_id == AV_CODEC_ID_WMAPRO
water	118:13	0:0	6	track
op	118:18	0:0	6	->
water	118:20	0:0	6	par
op	118:23	0:0	6	->
water	118:25	0:0	6	codec_id
op	118:34	0:0	6	==
water	118:37	0:0	6	AV_CODEC_ID_WMAPRO
stmts	119:8	119:40	5	
call	119:8	119:39	6	mov_write_wfex_tag
arg	119:27	119:28	7	s
water	119:27	0:0	8	s
arg	119:30	119:32	7	pb
water	119:30	0:0	8	pb
arg	119:34	119:39	7	track
water	119:34	0:0	8	track
water	119:40	0:0	6	;
else	120:4	121:37	2
stmts	120:9	121:37	3	
if	120:9	121:37	4	(track -> par -> codec_id == AV_CODEC_ID_FLAC)
cond	120:13	120:37	5	track -> par -> codec_id == AV_CODEC_ID_FLAC
water	120:13	0:0	6	track
op	120:18	0:0	6	->
water	120:20	0:0	6	par
op	120:23	0:0	6	->
water	120:25	0:0	6	codec_id
op	120:34	0:0	6	==
water	120:37	0:0	6	AV_CODEC_ID_FLAC
stmts	121:8	121:37	5	
call	121:8	121:36	6	mov_write_dfla_tag
arg	121:27	121:29	7	pb
water	121:27	0:0	8	pb
arg	121:31	121:36	7	track
water	121:31	0:0	8	track
water	121:37	0:0	6	;
else	122:4	123:37	2
stmts	122:9	123:37	3	
if	122:9	123:37	4	(track -> par -> codec_id == AV_CODEC_ID_OPUS)
cond	122:13	122:37	5	track -> par -> codec_id == AV_CODEC_ID_OPUS
water	122:13	0:0	6	track
op	122:18	0:0	6	->
water	122:20	0:0	6	par
op	122:23	0:0	6	->
water	122:25	0:0	6	codec_id
op	122:34	0:0	6	==
water	122:37	0:0	6	AV_CODEC_ID_OPUS
stmts	123:8	123:37	5	
call	123:8	123:36	6	mov_write_dops_tag
arg	123:27	123:29	7	pb
water	123:27	0:0	8	pb
arg	123:31	123:36	7	track
water	123:31	0:0	8	track
water	123:37	0:0	6	;
else	124:4	125:37	2
stmts	124:9	125:37	3	
if	124:9	125:37	4	(track -> vos_len > 0)
cond	124:13	124:30	5	track -> vos_len > 0
water	124:13	0:0	6	track
op	124:18	0:0	6	->
water	124:20	0:0	6	vos_len
op	124:28	0:0	6	>
water	124:30	0:0	6	0
stmts	125:8	125:37	5	
call	125:8	125:36	6	mov_write_glbl_tag
arg	125:27	125:29	7	pb
water	125:27	0:0	8	pb
arg	125:31	125:36	7	track
water	125:31	0:0	8	track
water	125:37	0:0	6	;
if	127:4	128:40	2	(track -> mode == MODE_MOV && track -> par -> codec_type == AVMEDIA_TYPE_AUDIO)
cond	127:8	127:61	3	track -> mode == MODE_MOV && track -> par -> codec_type == AVMEDIA_TYPE_AUDIO
water	127:8	0:0	4	track
op	127:13	0:0	4	->
water	127:15	0:0	4	mode
op	127:20	0:0	4	==
water	127:23	0:0	4	MODE_MOV
op	127:32	0:0	4	&&
water	127:35	0:0	4	track
op	127:40	0:0	4	->
water	127:42	0:0	4	par
op	127:45	0:0	4	->
water	127:47	0:0	4	codec_type
op	127:58	0:0	4	==
water	127:61	0:0	4	AVMEDIA_TYPE_AUDIO
stmts	128:8	128:40	3	
call	128:8	128:39	4	mov_write_chan_tag
arg	128:27	128:28	5	s
water	128:27	0:0	6	s
arg	128:30	128:32	5	pb
water	128:30	0:0	6	pb
arg	128:34	128:39	5	track
water	128:34	0:0	6	track
water	128:40	0:0	4	;
if	130:4	132:4	2	(mov -> encryption_scheme != MOV_ENC_NONE)
cond	130:8	130:34	3	mov -> encryption_scheme != MOV_ENC_NONE
water	130:8	0:0	4	mov
op	130:11	0:0	4	->
water	130:13	0:0	4	encryption_scheme
op	130:31	0:0	4	!=
water	130:34	0:0	4	MOV_ENC_NONE
stmts	130:48	132:4	3	
water	130:48	0:0	4	{
call	131:8	131:65	4	ff_mov_cenc_write_sinf_tag
arg	131:35	131:40	5	track
water	131:35	0:0	6	track
arg	131:42	131:44	5	pb
water	131:42	0:0	6	pb
arg	131:46	131:65	5	mov->encryption_kid
water	131:46	0:0	6	mov
op	131:49	0:0	6	->
water	131:51	0:0	6	encryption_kid
water	131:66	0:0	4	;
water	132:4	0:0	4	}
return	134:4	134:31	2	update_size(pb,pos)
call	134:11	134:30	3	update_size
arg	134:23	134:25	4	pb
water	134:23	0:0	5	pb
arg	134:27	134:30	4	pos
water	134:27	0:0	5	pos

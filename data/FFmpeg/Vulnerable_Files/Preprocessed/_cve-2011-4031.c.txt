func	7:0	111:0	0	static int	asfrtp_parse_packet
params	7:30	0:0	1	
param	7:31	7:49	2	AVFormatContext *	s
param	7:51	7:70	2	PayloadContext *	asf
param	8:31	8:43	2	AVStream *	st
param	8:45	8:58	2	AVPacket *	pkt
param	9:31	9:50	2	uint32_t *	timestamp
param	10:31	10:49	2	const uint8_t *	buf
param	10:51	10:58	2	int	len
param	10:60	10:69	2	int	flags
stmnts	0:0	110:30	1	
decl	12:4	12:30	2	AVIOContext	*pb
op	12:20	0:0	2	=
op	12:22	0:0	2	&
water	12:23	0:0	2	asf
op	12:26	0:0	2	->
water	12:28	0:0	2	pb
decl	13:4	13:28	2	int	res
water	13:11	0:0	2	,
decl	13:4	13:28	2	int	mflags
water	13:19	0:0	2	,
decl	13:4	13:28	2	int	len_off
decl	14:4	14:32	2	RTSPState	*rt
op	14:18	0:0	2	=
water	14:20	0:0	2	s
op	14:21	0:0	2	->
water	14:23	0:0	2	priv_data
if	16:4	17:17	2	(! rt -> asf_ctx)
cond	16:8	16:13	3	! rt -> asf_ctx
op	16:8	0:0	4	!
water	16:9	0:0	4	rt
op	16:11	0:0	4	->
water	16:13	0:0	4	asf_ctx
stmts	17:8	17:17	3	
return	17:8	17:17	4	-1
op	17:15	0:0	5	-
water	17:16	0:0	5	1
if	19:4	92:4	2	(len > 0)
cond	19:8	19:14	3	len > 0
water	19:8	0:0	4	len
op	19:12	0:0	4	>
water	19:14	0:0	4	0
stmts	19:17	92:4	3	
water	19:17	0:0	4	{
decl	20:8	20:28	4	int	off
water	20:15	0:0	4	,
decl	20:8	20:28	4	int	out_len
op	20:25	0:0	4	=
water	20:27	0:0	4	0
if	22:8	23:21	4	(len < 4)
cond	22:12	22:18	5	len < 4
water	22:12	0:0	6	len
op	22:16	0:0	6	<
water	22:18	0:0	6	4
stmts	23:12	23:21	5	
return	23:12	23:21	6	-1
op	23:19	0:0	7	-
water	23:20	0:0	7	1
call	25:8	25:26	4	av_freep
arg	25:17	25:26	5	&asf->buf
op	25:17	0:0	6	&
water	25:18	0:0	6	asf
op	25:21	0:0	6	->
water	25:23	0:0	6	buf
water	25:27	0:0	4	;
call	27:8	27:65	4	ffio_init_context
arg	27:26	27:28	5	pb
water	27:26	0:0	6	pb
arg	27:30	27:33	5	buf
water	27:30	0:0	6	buf
arg	27:35	27:38	5	len
water	27:35	0:0	6	len
arg	27:40	27:41	5	0
water	27:40	0:0	6	0
arg	27:43	27:47	5	NULL
water	27:43	0:0	6	NULL
arg	27:49	27:53	5	NULL
water	27:49	0:0	6	NULL
arg	27:55	27:59	5	NULL
water	27:55	0:0	6	NULL
arg	27:61	27:65	5	NULL
water	27:61	0:0	6	NULL
water	27:66	0:0	4	;
while	29:8	86:8	4	(avio_tell (pb ) + 4 < len)
cond	29:15	29:35	5	avio_tell (pb ) + 4 < len
call	29:15	29:27	6	avio_tell
arg	29:25	29:27	7	pb
water	29:25	0:0	8	pb
op	29:29	0:0	6	+
water	29:31	0:0	6	4
op	29:33	0:0	6	<
water	29:35	0:0	6	len
stmts	29:40	86:8	5	
water	29:40	0:0	6	{
decl	30:12	30:41	6	int	start_off
op	30:26	0:0	6	=
call	30:28	30:40	7	avio_tell
arg	30:38	30:40	8	pb
water	30:38	0:0	9	pb
water	32:12	0:0	6	mflags
op	32:19	0:0	6	=
call	32:21	32:31	6	avio_r8
arg	32:29	32:31	7	pb
water	32:29	0:0	8	pb
water	32:32	0:0	6	;
if	33:12	34:37	6	(mflags & 0 x80)
cond	33:16	33:26	7	mflags & 0 x80
water	33:16	0:0	8	mflags
op	33:23	0:0	8	&
water	33:25	0:0	8	0
water	33:26	0:0	8	x80
stmts	34:16	34:37	7	
water	34:16	0:0	8	flags
op	34:22	0:0	8	|=
water	34:25	0:0	8	RTP_FLAG_KEY
water	34:37	0:0	8	;
water	35:12	0:0	6	len_off
op	35:20	0:0	6	=
call	35:22	35:34	6	avio_rb24
arg	35:32	35:34	7	pb
water	35:32	0:0	8	pb
water	35:35	0:0	6	;
if	36:12	37:32	6	(mflags & 0 x20)
cond	36:16	36:26	7	mflags & 0 x20
water	36:16	0:0	8	mflags
op	36:23	0:0	8	&
water	36:25	0:0	8	0
water	36:26	0:0	8	x20
stmts	37:16	37:32	7	
call	37:16	37:31	8	avio_skip
arg	37:26	37:28	9	pb
water	37:26	0:0	10	pb
arg	37:30	37:31	9	4
water	37:30	0:0	10	4
water	37:32	0:0	8	;
if	38:12	39:32	6	(mflags & 0 x10)
cond	38:16	38:26	7	mflags & 0 x10
water	38:16	0:0	8	mflags
op	38:23	0:0	8	&
water	38:25	0:0	8	0
water	38:26	0:0	8	x10
stmts	39:16	39:32	7	
call	39:16	39:31	8	avio_skip
arg	39:26	39:28	9	pb
water	39:26	0:0	10	pb
arg	39:30	39:31	9	4
water	39:30	0:0	10	4
water	39:32	0:0	8	;
if	40:12	41:32	6	(mflags & 0 x8)
cond	40:16	40:26	7	mflags & 0 x8
water	40:16	0:0	8	mflags
op	40:23	0:0	8	&
water	40:25	0:0	8	0
water	40:26	0:0	8	x8
stmts	41:16	41:32	7	
call	41:16	41:31	8	avio_skip
arg	41:26	41:28	9	pb
water	41:26	0:0	10	pb
arg	41:30	41:31	9	4
water	41:30	0:0	10	4
water	41:32	0:0	8	;
water	42:12	0:0	6	off
op	42:16	0:0	6	=
call	42:18	42:30	6	avio_tell
arg	42:28	42:30	7	pb
water	42:28	0:0	8	pb
water	42:31	0:0	6	;
if	44:12	69:12	6	(! ( mflags & 0 x40 ))
cond	44:16	44:31	7	! ( mflags & 0 x40 )
op	44:16	0:0	8	!
water	44:17	0:0	8	(
water	44:18	0:0	8	mflags
op	44:25	0:0	8	&
water	44:27	0:0	8	0
water	44:28	0:0	8	x40
water	44:31	0:0	8	)
stmts	44:34	69:12	7	
water	44:34	0:0	8	{
if	51:16	56:16	8	(asf -> pktbuf && len_off !=avio_tell (asf -> pktbuf ))
cond	51:20	51:67	9	asf -> pktbuf && len_off !=avio_tell (asf -> pktbuf )
water	51:20	0:0	10	asf
op	51:23	0:0	10	->
water	51:25	0:0	10	pktbuf
op	51:32	0:0	10	&&
water	51:35	0:0	10	len_off
op	51:43	0:0	10	!=
call	51:46	51:67	10	avio_tell
arg	51:56	51:67	11	asf->pktbuf
water	51:56	0:0	12	asf
op	51:59	0:0	12	->
water	51:61	0:0	12	pktbuf
stmts	51:70	56:16	9	
water	51:70	0:0	10	{
decl	52:20	52:30	10	uint8_t	*p
call	53:20	53:54	10	avio_close_dyn_buf
arg	53:39	53:50	11	asf->pktbuf
water	53:39	0:0	12	asf
op	53:42	0:0	12	->
water	53:44	0:0	12	pktbuf
arg	53:52	53:54	11	&p
op	53:52	0:0	12	&
water	53:53	0:0	12	p
water	53:55	0:0	10	;
water	54:20	0:0	10	asf
op	54:23	0:0	10	->
water	54:25	0:0	10	pktbuf
op	54:32	0:0	10	=
water	54:34	0:0	10	NULL
water	54:38	0:0	10	;
call	55:20	55:29	10	av_free
arg	55:28	55:29	11	p
water	55:28	0:0	12	p
water	55:30	0:0	10	;
water	56:16	0:0	10	}
if	57:16	59:30	8	(! len_off && ! asf -> pktbuf && ( res =avio_open_dyn_buf (& asf -> pktbuf ) ) < 0)
cond	57:20	58:62	9	! len_off && ! asf -> pktbuf && ( res =avio_open_dyn_buf (& asf -> pktbuf ) ) < 0
op	57:20	0:0	10	!
water	57:21	0:0	10	len_off
op	57:29	0:0	10	&&
op	57:32	0:0	10	!
water	57:33	0:0	10	asf
op	57:36	0:0	10	->
water	57:38	0:0	10	pktbuf
op	57:45	0:0	10	&&
water	58:20	0:0	10	(
water	58:21	0:0	10	res
op	58:25	0:0	10	=
call	58:27	58:57	10	avio_open_dyn_buf
arg	58:45	58:57	11	&asf->pktbuf
op	58:45	0:0	12	&
water	58:46	0:0	12	asf
op	58:49	0:0	12	->
water	58:51	0:0	12	pktbuf
water	58:58	0:0	10	)
op	58:60	0:0	10	<
water	58:62	0:0	10	0
stmts	59:20	59:30	9	
return	59:20	59:30	10	res
water	59:27	0:0	11	res
if	60:16	61:39	8	(! asf -> pktbuf)
cond	60:20	60:26	9	! asf -> pktbuf
op	60:20	0:0	10	!
water	60:21	0:0	10	asf
op	60:24	0:0	10	->
water	60:26	0:0	10	pktbuf
stmts	61:20	61:39	9	
return	61:20	61:39	10	AVERROR(EIO)
call	61:27	61:38	11	AVERROR
arg	61:35	61:38	12	EIO
water	61:35	0:0	13	EIO
call	63:16	63:60	8	avio_write
arg	63:27	63:38	9	asf->pktbuf
water	63:27	0:0	10	asf
op	63:30	0:0	10	->
water	63:32	0:0	10	pktbuf
arg	63:40	63:49	9	buf+off
water	63:40	0:0	10	buf
op	63:44	0:0	10	+
water	63:46	0:0	10	off
arg	63:51	63:60	9	len-off
water	63:51	0:0	10	len
op	63:55	0:0	10	-
water	63:57	0:0	10	off
water	63:61	0:0	8	;
call	64:16	64:39	8	avio_skip
arg	64:26	64:28	9	pb
water	64:26	0:0	10	pb
arg	64:30	64:39	9	len-off
water	64:30	0:0	10	len
op	64:34	0:0	10	-
water	64:36	0:0	10	off
water	64:40	0:0	8	;
if	65:16	66:29	8	(! ( flags & RTP_FLAG_MARKER ))
cond	65:20	65:45	9	! ( flags & RTP_FLAG_MARKER )
op	65:20	0:0	10	!
water	65:21	0:0	10	(
water	65:22	0:0	10	flags
op	65:28	0:0	10	&
water	65:30	0:0	10	RTP_FLAG_MARKER
water	65:45	0:0	10	)
stmts	66:20	66:29	9	
return	66:20	66:29	10	-1
op	66:27	0:0	11	-
water	66:28	0:0	11	1
water	67:16	0:0	8	out_len
op	67:28	0:0	8	=
call	67:30	67:71	8	avio_close_dyn_buf
arg	67:49	67:60	9	asf->pktbuf
water	67:49	0:0	10	asf
op	67:52	0:0	10	->
water	67:54	0:0	10	pktbuf
arg	67:62	67:71	9	&asf->buf
op	67:62	0:0	10	&
water	67:63	0:0	10	asf
op	67:66	0:0	10	->
water	67:68	0:0	10	buf
water	67:72	0:0	8	;
water	68:16	0:0	8	asf
op	68:19	0:0	8	->
water	68:21	0:0	8	pktbuf
op	68:28	0:0	8	=
water	68:30	0:0	8	NULL
water	68:34	0:0	8	;
water	69:12	0:0	8	}
else	69:14	85:12	6
stmts	69:19	85:12	7	
water	69:19	0:0	8	{
decl	78:16	78:55	8	int	cur_len
op	78:28	0:0	8	=
water	78:30	0:0	8	start_off
op	78:40	0:0	8	+
water	78:42	0:0	8	len_off
op	78:50	0:0	8	-
water	78:52	0:0	8	off
decl	79:16	79:38	8	int	prev_len
op	79:29	0:0	8	=
water	79:31	0:0	8	out_len
water	80:16	0:0	8	out_len
op	80:24	0:0	8	+=
water	80:27	0:0	8	cur_len
water	80:34	0:0	8	;
water	81:16	0:0	8	asf
op	81:19	0:0	8	->
water	81:21	0:0	8	buf
op	81:25	0:0	8	=
call	81:27	81:55	8	av_realloc
arg	81:38	81:46	9	asf->buf
water	81:38	0:0	10	asf
op	81:41	0:0	10	->
water	81:43	0:0	10	buf
arg	81:48	81:55	9	out_len
water	81:48	0:0	10	out_len
water	81:56	0:0	8	;
call	82:16	83:48	8	memcpy
arg	82:23	82:42	9	asf->buf+prev_len
water	82:23	0:0	10	asf
op	82:26	0:0	10	->
water	82:28	0:0	10	buf
op	82:32	0:0	10	+
water	82:34	0:0	10	prev_len
arg	82:44	82:53	9	buf+off
water	82:44	0:0	10	buf
op	82:48	0:0	10	+
water	82:50	0:0	10	off
arg	83:23	83:48	9	FFMIN(cur_len,len-off)
call	83:23	83:47	10	FFMIN
arg	83:29	83:36	11	cur_len
water	83:29	0:0	12	cur_len
arg	83:38	83:47	11	len-off
water	83:38	0:0	12	len
op	83:42	0:0	12	-
water	83:44	0:0	12	off
water	83:49	0:0	8	;
call	84:16	84:37	8	avio_skip
arg	84:26	84:28	9	pb
water	84:26	0:0	10	pb
arg	84:30	84:37	9	cur_len
water	84:30	0:0	10	cur_len
water	84:38	0:0	8	;
water	85:12	0:0	8	}
water	86:8	0:0	6	}
call	88:8	88:45	4	init_packetizer
arg	88:24	88:26	5	pb
water	88:24	0:0	6	pb
arg	88:28	88:36	5	asf->buf
water	88:28	0:0	6	asf
op	88:31	0:0	6	->
water	88:33	0:0	6	buf
arg	88:38	88:45	5	out_len
water	88:38	0:0	6	out_len
water	88:46	0:0	4	;
water	89:8	0:0	4	pb
op	89:10	0:0	4	->
water	89:12	0:0	4	pos
op	89:16	0:0	4	+=
water	89:19	0:0	4	rt
op	89:21	0:0	4	->
water	89:23	0:0	4	asf_pb_pos
water	89:33	0:0	4	;
water	90:8	0:0	4	pb
op	90:10	0:0	4	->
water	90:12	0:0	4	eof_reached
op	90:24	0:0	4	=
water	90:26	0:0	4	0
water	90:27	0:0	4	;
water	91:8	0:0	4	rt
op	91:10	0:0	4	->
water	91:12	0:0	4	asf_ctx
op	91:19	0:0	4	->
water	91:21	0:0	4	pb
op	91:24	0:0	4	=
water	91:26	0:0	4	pb
water	91:28	0:0	4	;
water	92:4	0:0	4	}
for	94:4	108:4	2	(;;)
forinit	94:9	94:9	3	;
water	94:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	94:13	108:4	3	
water	94:13	0:0	4	{
decl	95:8	95:13	4	int	i
water	97:8	0:0	4	res
op	97:12	0:0	4	=
call	97:14	97:45	4	av_read_packet
arg	97:29	97:40	5	rt->asf_ctx
water	97:29	0:0	6	rt
op	97:31	0:0	6	->
water	97:33	0:0	6	asf_ctx
arg	97:42	97:45	5	pkt
water	97:42	0:0	6	pkt
water	97:46	0:0	4	;
water	98:8	0:0	4	rt
op	98:10	0:0	4	->
water	98:12	0:0	4	asf_pb_pos
op	98:23	0:0	4	=
call	98:25	98:37	4	avio_tell
arg	98:35	98:37	5	pb
water	98:35	0:0	6	pb
water	98:38	0:0	4	;
if	99:8	100:17	4	(res != 0)
cond	99:12	99:19	5	res != 0
water	99:12	0:0	6	res
op	99:16	0:0	6	!=
water	99:19	0:0	6	0
stmts	100:12	100:17	5	
break	100:12	100:17	6	
for	101:8	106:8	4	(i = 0 ;i < s -> nb_streams;i ++)
forinit	101:13	101:18	5	i = 0 ;
water	101:13	0:0	6	i
op	101:15	0:0	6	=
water	101:17	0:0	6	0
water	101:18	0:0	6	;
cond	101:20	101:27	5	i < s -> nb_streams
water	101:20	0:0	6	i
op	101:22	0:0	6	<
water	101:24	0:0	6	s
op	101:25	0:0	6	->
water	101:27	0:0	6	nb_streams
forexpr	101:39	101:40	5	i ++
water	101:39	0:0	6	i
op	101:40	0:0	6	++
stmts	101:44	106:8	5	
water	101:44	0:0	6	{
if	102:12	105:12	6	(s -> streams [ i ] -> id == rt -> asf_ctx -> streams [ pkt -> stream_index ] -> id)
cond	102:16	102:78	7	s -> streams [ i ] -> id == rt -> asf_ctx -> streams [ pkt -> stream_index ] -> id
water	102:16	0:0	8	s
op	102:17	0:0	8	->
water	102:19	0:0	8	streams
op	102:26	0:0	8	[
water	102:27	0:0	8	i
op	102:28	0:0	8	]
op	102:29	0:0	8	->
water	102:31	0:0	8	id
op	102:34	0:0	8	==
water	102:37	0:0	8	rt
op	102:39	0:0	8	->
water	102:41	0:0	8	asf_ctx
op	102:48	0:0	8	->
water	102:50	0:0	8	streams
op	102:57	0:0	8	[
water	102:58	0:0	8	pkt
op	102:61	0:0	8	->
water	102:63	0:0	8	stream_index
op	102:75	0:0	8	]
op	102:76	0:0	8	->
water	102:78	0:0	8	id
stmts	102:82	105:12	7	
water	102:82	0:0	8	{
water	103:16	0:0	8	pkt
op	103:19	0:0	8	->
water	103:21	0:0	8	stream_index
op	103:34	0:0	8	=
water	103:36	0:0	8	i
water	103:37	0:0	8	;
return	104:16	104:24	8	1
water	104:23	0:0	9	1
water	105:12	0:0	8	}
water	106:8	0:0	6	}
call	107:8	107:26	4	av_free_packet
arg	107:23	107:26	5	pkt
water	107:23	0:0	6	pkt
water	107:27	0:0	4	;
water	108:4	0:0	4	}
return	110:4	110:30	2	res==1?-1:res
water	110:11	0:0	3	res
op	110:15	0:0	3	==
water	110:18	0:0	3	1
water	110:20	0:0	3	?
op	110:22	0:0	3	-
water	110:23	0:0	3	1
water	110:25	0:0	3	:
water	110:27	0:0	3	res

func	2:0	36:0	0	static int	asf_read_marker
params	2:26	0:0	1	
param	2:27	2:45	2	AVFormatContext *	s
param	2:47	2:59	2	int64_t	size
stmnts	0:0	35:12	1	
decl	4:4	4:27	2	AVIOContext	*pb
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	pb
decl	5:4	5:34	2	ASFContext	*asf
op	5:20	0:0	2	=
water	5:22	0:0	2	s
op	5:23	0:0	2	->
water	5:25	0:0	2	priv_data
decl	6:4	6:31	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:31	2	int	count
water	6:16	0:0	2	,
decl	6:4	6:31	2	int	name_len
water	6:26	0:0	2	,
decl	6:4	6:31	2	int	ret
decl	7:4	7:19	2	char	name[1024]
call	9:4	9:16	2	avio_rl64
arg	9:14	9:16	3	pb
water	9:14	0:0	4	pb
water	9:17	0:0	2	;
call	10:4	10:16	2	avio_rl64
arg	10:14	10:16	3	pb
water	10:14	0:0	4	pb
water	10:17	0:0	2	;
water	11:4	0:0	2	count
op	11:10	0:0	2	=
call	11:12	11:24	2	avio_rl32
arg	11:22	11:24	3	pb
water	11:22	0:0	4	pb
water	11:25	0:0	2	;
call	12:4	12:16	2	avio_rl16
arg	12:14	12:16	3	pb
water	12:14	0:0	4	pb
water	12:17	0:0	2	;
water	13:4	0:0	2	name_len
op	13:13	0:0	2	=
call	13:15	13:27	2	avio_rl16
arg	13:25	13:27	3	pb
water	13:25	0:0	4	pb
water	13:28	0:0	2	;
for	14:4	15:19	2	(i = 0 ;i < name_len;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	i < name_len
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	name_len
forexpr	14:30	14:31	3	i ++
water	14:30	0:0	4	i
op	14:31	0:0	4	++
stmts	15:8	15:19	3	
call	15:8	15:18	4	avio_r8
arg	15:16	15:18	5	pb
water	15:16	0:0	6	pb
water	15:19	0:0	4	;
for	17:4	33:4	2	(i = 0 ;i < count;i ++)
forinit	17:9	17:14	3	i = 0 ;
water	17:9	0:0	4	i
op	17:11	0:0	4	=
water	17:13	0:0	4	0
water	17:14	0:0	4	;
cond	17:16	17:20	3	i < count
water	17:16	0:0	4	i
op	17:18	0:0	4	<
water	17:20	0:0	4	count
forexpr	17:27	17:28	3	i ++
water	17:27	0:0	4	i
op	17:28	0:0	4	++
stmts	17:32	33:4	3	
water	17:32	0:0	4	{
decl	18:8	18:25	4	int64_t	pres_time
decl	19:8	19:20	4	int	name_len
call	21:8	21:20	4	avio_rl64
arg	21:18	21:20	5	pb
water	21:18	0:0	6	pb
water	21:21	0:0	4	;
water	22:8	0:0	4	pres_time
op	22:18	0:0	4	=
call	22:20	22:32	4	avio_rl64
arg	22:30	22:32	5	pb
water	22:30	0:0	6	pb
water	22:33	0:0	4	;
water	23:8	0:0	4	pres_time
op	23:18	0:0	4	-=
water	23:21	0:0	4	asf
op	23:24	0:0	4	->
water	23:26	0:0	4	hdr
op	23:29	0:0	4	.
water	23:30	0:0	4	preroll
op	23:38	0:0	4	*
water	23:40	0:0	4	10000
water	23:45	0:0	4	;
call	24:8	24:20	4	avio_rl16
arg	24:18	24:20	5	pb
water	24:18	0:0	6	pb
water	24:21	0:0	4	;
call	25:8	25:20	4	avio_rl32
arg	25:18	25:20	5	pb
water	25:18	0:0	6	pb
water	25:21	0:0	4	;
call	26:8	26:20	4	avio_rl32
arg	26:18	26:20	5	pb
water	26:18	0:0	6	pb
water	26:21	0:0	4	;
water	27:8	0:0	4	name_len
op	27:17	0:0	4	=
call	27:19	27:31	4	avio_rl32
arg	27:29	27:31	5	pb
water	27:29	0:0	6	pb
water	27:32	0:0	4	;
if	28:8	30:41	4	(( ret =avio_get_str16le (pb ,name_len * 2 ,name ,sizeof ( name ) ) ) < name_len)
cond	28:12	29:53	5	( ret =avio_get_str16le (pb ,name_len * 2 ,name ,sizeof ( name ) ) ) < name_len
water	28:12	0:0	6	(
water	28:13	0:0	6	ret
op	28:17	0:0	6	=
call	28:19	29:48	6	avio_get_str16le
arg	28:36	28:38	7	pb
water	28:36	0:0	8	pb
arg	28:40	28:52	7	name_len*2
water	28:40	0:0	8	name_len
op	28:49	0:0	8	*
water	28:51	0:0	8	2
arg	28:54	28:58	7	name
water	28:54	0:0	8	name
arg	29:36	29:48	7	sizeof(name)
op	29:36	0:0	8	sizeof
water	29:42	0:0	8	(
water	29:43	0:0	8	name
water	29:47	0:0	8	)
water	29:49	0:0	6	)
op	29:51	0:0	6	<
water	29:53	0:0	6	name_len
stmts	30:12	30:41	5	
call	30:12	30:40	6	avio_skip
arg	30:22	30:24	7	pb
water	30:22	0:0	8	pb
arg	30:26	30:40	7	name_len-ret
water	30:26	0:0	8	name_len
op	30:35	0:0	8	-
water	30:37	0:0	8	ret
water	30:41	0:0	6	;
call	31:8	32:47	4	avpriv_new_chapter
arg	31:27	31:28	5	s
water	31:27	0:0	6	s
arg	31:30	31:31	5	i
water	31:30	0:0	6	i
arg	31:33	31:61	5	(AVRational){1,10000000}
water	31:33	0:0	6	(
water	31:34	0:0	6	AVRational
water	31:44	0:0	6	)
water	31:46	0:0	6	{
water	31:48	0:0	6	1
water	31:49	0:0	6	,
water	31:51	0:0	6	10000000
water	31:60	0:0	6	}
arg	31:63	31:72	5	pres_time
water	31:63	0:0	6	pres_time
arg	32:27	32:41	5	AV_NOPTS_VALUE
water	32:27	0:0	6	AV_NOPTS_VALUE
arg	32:43	32:47	5	name
water	32:43	0:0	6	name
water	32:48	0:0	4	;
water	33:4	0:0	4	}
return	35:4	35:12	2	0
water	35:11	0:0	3	0

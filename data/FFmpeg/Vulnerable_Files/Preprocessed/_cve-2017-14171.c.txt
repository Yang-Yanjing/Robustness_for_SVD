func	2:0	106:0	0	static int	nsv_parse_NSVf_header
params	2:32	0:0	1	
param	2:33	2:51	2	AVFormatContext *	s
stmnts	0:0	105:12	1	
decl	4:4	4:34	2	NSVContext	*nsv
op	4:20	0:0	2	=
water	4:22	0:0	2	s
op	4:23	0:0	2	->
water	4:25	0:0	2	priv_data
decl	5:4	5:27	2	AVIOContext	*pb
op	5:20	0:0	2	=
water	5:22	0:0	2	s
op	5:23	0:0	2	->
water	5:25	0:0	2	pb
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	int
water	6:17	0:0	2	av_unused
water	6:27	0:0	2	file_size
water	6:36	0:0	2	;
decl	7:4	7:21	2	unsigned int	size
decl	8:4	8:20	2	int64_t	duration
decl	9:4	9:20	2	int	strings_size
decl	10:4	10:21	2	int	table_entries
decl	11:4	11:26	2	int	table_entries_used
water	13:4	0:0	2	nsv
op	13:7	0:0	2	->
water	13:9	0:0	2	state
op	13:15	0:0	2	=
water	13:17	0:0	2	NSV_UNSYNC
water	13:27	0:0	2	;
water	15:4	0:0	2	size
op	15:9	0:0	2	=
call	15:11	15:23	2	avio_rl32
arg	15:21	15:23	3	pb
water	15:21	0:0	4	pb
water	15:24	0:0	2	;
if	16:4	17:17	2	(size < 28)
cond	16:8	16:15	3	size < 28
water	16:8	0:0	4	size
op	16:13	0:0	4	<
water	16:15	0:0	4	28
stmts	17:8	17:17	3	
return	17:8	17:17	4	-1
op	17:15	0:0	5	-
water	17:16	0:0	5	1
water	18:4	0:0	2	nsv
op	18:7	0:0	2	->
water	18:9	0:0	2	NSVf_end
op	18:18	0:0	2	=
water	18:20	0:0	2	size
water	18:24	0:0	2	;
water	20:4	0:0	2	file_size
op	20:14	0:0	2	=
water	20:16	0:0	2	(
water	20:17	0:0	2	uint32_t
water	20:25	0:0	2	)
call	20:26	20:38	2	avio_rl32
arg	20:36	20:38	3	pb
water	20:36	0:0	4	pb
water	20:39	0:0	2	;
call	21:4	21:60	2	av_log
arg	21:11	21:12	3	s
water	21:11	0:0	4	s
arg	21:14	21:26	3	AV_LOG_TRACE
water	21:14	0:0	4	AV_LOG_TRACE
arg	21:28	21:54	3	"NSV NSVf chunk_size %u\n"
water	21:28	0:0	4	"NSV NSVf chunk_size %u\n"
arg	21:56	21:60	3	size
water	21:56	0:0	4	size
water	21:61	0:0	2	;
call	22:4	22:64	2	av_log
arg	22:11	22:12	3	s
water	22:11	0:0	4	s
arg	22:14	22:26	3	AV_LOG_TRACE
water	22:14	0:0	4	AV_LOG_TRACE
arg	22:28	22:53	3	"NSV NSVf file_size %u\n"
water	22:28	0:0	4	"NSV NSVf file_size %u\n"
arg	22:55	22:64	3	file_size
water	22:55	0:0	4	file_size
water	22:65	0:0	2	;
water	24:4	0:0	2	nsv
op	24:7	0:0	2	->
water	24:9	0:0	2	duration
op	24:18	0:0	2	=
water	24:20	0:0	2	duration
op	24:29	0:0	2	=
call	24:31	24:43	2	avio_rl32
arg	24:41	24:43	3	pb
water	24:41	0:0	4	pb
water	24:44	0:0	2	;
call	25:4	25:72	2	av_log
arg	25:11	25:12	3	s
water	25:11	0:0	4	s
arg	25:14	25:26	3	AV_LOG_TRACE
water	25:14	0:0	4	AV_LOG_TRACE
arg	25:28	25:62	3	"NSV NSVf duration %"PRId64" ms\n"
water	25:28	0:0	4	"NSV NSVf duration %"
water	25:49	0:0	4	PRId64
water	25:55	0:0	4	" ms\n"
arg	25:64	25:72	3	duration
water	25:64	0:0	4	duration
water	25:73	0:0	2	;
water	28:4	0:0	2	strings_size
op	28:17	0:0	2	=
call	28:19	28:31	2	avio_rl32
arg	28:29	28:31	3	pb
water	28:29	0:0	4	pb
water	28:32	0:0	2	;
water	29:4	0:0	2	table_entries
op	29:18	0:0	2	=
call	29:20	29:32	2	avio_rl32
arg	29:30	29:32	3	pb
water	29:30	0:0	4	pb
water	29:33	0:0	2	;
water	30:4	0:0	2	table_entries_used
op	30:23	0:0	2	=
call	30:25	30:37	2	avio_rl32
arg	30:35	30:37	3	pb
water	30:35	0:0	4	pb
water	30:38	0:0	2	;
call	31:4	32:59	2	av_log
arg	31:11	31:12	3	s
water	31:11	0:0	4	s
arg	31:14	31:26	3	AV_LOG_TRACE
water	31:14	0:0	4	AV_LOG_TRACE
arg	31:28	31:89	3	"NSV NSVf info-strings size: %d, table entries: %d, bis %d\n"
water	31:28	0:0	4	"NSV NSVf info-strings size: %d, table entries: %d, bis %d\n"
arg	32:12	32:24	3	strings_size
water	32:12	0:0	4	strings_size
arg	32:26	32:39	3	table_entries
water	32:26	0:0	4	table_entries
arg	32:41	32:59	3	table_entries_used
water	32:41	0:0	4	table_entries_used
water	32:60	0:0	2	;
if	33:4	34:17	2	(avio_feof (pb ))
cond	33:8	33:20	3	avio_feof (pb )
call	33:8	33:20	4	avio_feof
arg	33:18	33:20	5	pb
water	33:18	0:0	6	pb
stmts	34:8	34:17	3	
return	34:8	34:17	4	-1
op	34:15	0:0	5	-
water	34:16	0:0	5	1
call	36:4	36:80	2	av_log
arg	36:11	36:12	3	s
water	36:11	0:0	4	s
arg	36:14	36:26	3	AV_LOG_TRACE
water	36:14	0:0	4	AV_LOG_TRACE
arg	36:28	36:65	3	"NSV got header; filepos %"PRId64"\n"
water	36:28	0:0	4	"NSV got header; filepos %"
water	36:55	0:0	4	PRId64
water	36:61	0:0	4	"\n"
arg	36:67	36:80	3	avio_tell(pb)
call	36:67	36:79	4	avio_tell
arg	36:77	36:79	5	pb
water	36:77	0:0	6	pb
water	36:81	0:0	2	;
if	38:4	69:4	2	(strings_size > 0)
cond	38:8	38:23	3	strings_size > 0
water	38:8	0:0	4	strings_size
op	38:21	0:0	4	>
water	38:23	0:0	4	0
stmts	38:26	69:4	3	
water	38:26	0:0	4	{
decl	39:8	39:21	4	char	*strings
decl	40:8	40:22	4	char	*p
water	40:15	0:0	4	,
decl	40:8	40:22	4	char	*endp
decl	41:8	41:27	4	char	*token
water	41:19	0:0	4	,
decl	41:8	41:27	4	char	*value
decl	42:8	42:18	4	char	quote
water	44:8	0:0	4	p
op	44:10	0:0	4	=
water	44:12	0:0	4	strings
op	44:20	0:0	4	=
call	44:22	44:57	4	av_mallocz
arg	44:33	44:57	5	(size_t)strings_size+1
water	44:33	0:0	6	(
water	44:34	0:0	6	size_t
water	44:40	0:0	6	)
water	44:41	0:0	6	strings_size
op	44:54	0:0	6	+
water	44:56	0:0	6	1
water	44:58	0:0	4	;
if	45:8	46:34	4	(! p)
cond	45:12	45:13	5	! p
op	45:12	0:0	6	!
water	45:13	0:0	6	p
stmts	46:12	46:34	5	
return	46:12	46:34	6	AVERROR(ENOMEM)
call	46:19	46:33	7	AVERROR
arg	46:27	46:33	8	ENOMEM
water	46:27	0:0	9	ENOMEM
water	47:8	0:0	4	endp
op	47:13	0:0	4	=
water	47:15	0:0	4	strings
op	47:23	0:0	4	+
water	47:25	0:0	4	strings_size
water	47:37	0:0	4	;
call	48:8	48:43	4	avio_read
arg	48:18	48:20	5	pb
water	48:18	0:0	6	pb
arg	48:22	48:29	5	strings
water	48:22	0:0	6	strings
arg	48:31	48:43	5	strings_size
water	48:31	0:0	6	strings_size
water	48:44	0:0	4	;
while	49:8	67:8	4	(p < endp)
cond	49:15	49:19	5	p < endp
water	49:15	0:0	6	p
op	49:17	0:0	6	<
water	49:19	0:0	6	endp
stmts	49:25	67:8	5	
water	49:25	0:0	6	{
while	50:12	51:19	6	(* p == ' ')
cond	50:19	50:25	7	* p == ' '
op	50:19	0:0	8	*
water	50:20	0:0	8	p
op	50:22	0:0	8	==
water	50:25	0:0	8	' '
stmts	51:16	51:19	7	
water	51:16	0:0	8	p
op	51:17	0:0	8	++
water	51:19	0:0	8	;
if	52:12	53:21	6	(p >= endp - 2)
cond	52:16	52:26	7	p >= endp - 2
water	52:16	0:0	8	p
op	52:18	0:0	8	>=
water	52:21	0:0	8	endp
op	52:25	0:0	8	-
water	52:26	0:0	8	2
stmts	53:16	53:21	7	
break	53:16	53:21	8	
water	54:12	0:0	6	token
op	54:18	0:0	6	=
water	54:20	0:0	6	p
water	54:21	0:0	6	;
water	55:12	0:0	6	p
op	55:14	0:0	6	=
call	55:16	55:29	6	strchr
arg	55:23	55:24	7	p
water	55:23	0:0	8	p
arg	55:26	55:29	7	'='
water	55:26	0:0	8	'='
water	55:30	0:0	6	;
if	56:12	57:21	6	(! p || p >= endp - 2)
cond	56:16	56:32	7	! p || p >= endp - 2
op	56:16	0:0	8	!
water	56:17	0:0	8	p
op	56:19	0:0	8	||
water	56:22	0:0	8	p
op	56:24	0:0	8	>=
water	56:27	0:0	8	endp
op	56:31	0:0	8	-
water	56:32	0:0	8	2
stmts	57:16	57:21	7	
break	57:16	57:21	8	
op	58:12	0:0	6	*
water	58:13	0:0	6	p
op	58:14	0:0	6	++
op	58:17	0:0	6	=
water	58:19	0:0	6	'\0'
water	58:23	0:0	6	;
water	59:12	0:0	6	quote
op	59:18	0:0	6	=
op	59:20	0:0	6	*
water	59:21	0:0	6	p
op	59:22	0:0	6	++
water	59:24	0:0	6	;
water	60:12	0:0	6	value
op	60:18	0:0	6	=
water	60:20	0:0	6	p
water	60:21	0:0	6	;
water	61:12	0:0	6	p
op	61:14	0:0	6	=
call	61:16	61:31	6	strchr
arg	61:23	61:24	7	p
water	61:23	0:0	8	p
arg	61:26	61:31	7	quote
water	61:26	0:0	8	quote
water	61:32	0:0	6	;
if	62:12	63:21	6	(! p || p >= endp)
cond	62:16	62:27	7	! p || p >= endp
op	62:16	0:0	8	!
water	62:17	0:0	8	p
op	62:19	0:0	8	||
water	62:22	0:0	8	p
op	62:24	0:0	8	>=
water	62:27	0:0	8	endp
stmts	63:16	63:21	7	
break	63:16	63:21	8	
op	64:12	0:0	6	*
water	64:13	0:0	6	p
op	64:14	0:0	6	++
op	64:17	0:0	6	=
water	64:19	0:0	6	'\0'
water	64:23	0:0	6	;
call	65:12	65:76	6	av_log
arg	65:19	65:20	7	s
water	65:19	0:0	8	s
arg	65:22	65:34	7	AV_LOG_TRACE
water	65:22	0:0	8	AV_LOG_TRACE
arg	65:36	65:62	7	"NSV NSVf INFO: %s='%s'\n"
water	65:36	0:0	8	"NSV NSVf INFO: %s='%s'\n"
arg	65:64	65:69	7	token
water	65:64	0:0	8	token
arg	65:71	65:76	7	value
water	65:71	0:0	8	value
water	65:77	0:0	6	;
call	66:12	66:53	6	av_dict_set
arg	66:24	66:36	7	&s->metadata
op	66:24	0:0	8	&
water	66:25	0:0	8	s
op	66:26	0:0	8	->
water	66:28	0:0	8	metadata
arg	66:38	66:43	7	token
water	66:38	0:0	8	token
arg	66:45	66:50	7	value
water	66:45	0:0	8	value
arg	66:52	66:53	7	0
water	66:52	0:0	8	0
water	66:54	0:0	6	;
water	67:8	0:0	6	}
call	68:8	68:23	4	av_free
arg	68:16	68:23	5	strings
water	68:16	0:0	6	strings
water	68:24	0:0	4	;
water	69:4	0:0	4	}
if	70:4	71:17	2	(avio_feof (pb ))
cond	70:8	70:20	3	avio_feof (pb )
call	70:8	70:20	4	avio_feof
arg	70:18	70:20	5	pb
water	70:18	0:0	6	pb
stmts	71:8	71:17	3	
return	71:8	71:17	4	-1
op	71:15	0:0	5	-
water	71:16	0:0	5	1
call	73:4	73:79	2	av_log
arg	73:11	73:12	3	s
water	73:11	0:0	4	s
arg	73:14	73:26	3	AV_LOG_TRACE
water	73:14	0:0	4	AV_LOG_TRACE
arg	73:28	73:64	3	"NSV got infos; filepos %"PRId64"\n"
water	73:28	0:0	4	"NSV got infos; filepos %"
water	73:54	0:0	4	PRId64
water	73:60	0:0	4	"\n"
arg	73:66	73:79	3	avio_tell(pb)
call	73:66	73:78	4	avio_tell
arg	73:76	73:78	5	pb
water	73:76	0:0	6	pb
water	73:80	0:0	2	;
if	75:4	96:4	2	(table_entries_used > 0)
cond	75:8	75:29	3	table_entries_used > 0
water	75:8	0:0	4	table_entries_used
op	75:27	0:0	4	>
water	75:29	0:0	4	0
stmts	75:32	96:4	3	
water	75:32	0:0	4	{
decl	76:8	76:13	4	int	i
water	77:8	0:0	4	nsv
op	77:11	0:0	4	->
water	77:13	0:0	4	index_entries
op	77:27	0:0	4	=
water	77:29	0:0	4	table_entries_used
water	77:47	0:0	4	;
if	78:8	79:21	4	(( unsigned ) table_entries_used >= UINT_MAX / sizeof ( uint32_t ))
cond	78:11	78:69	5	( unsigned ) table_entries_used >= UINT_MAX / sizeof ( uint32_t )
water	78:11	0:0	6	(
water	78:12	0:0	6	unsigned
water	78:20	0:0	6	)
water	78:21	0:0	6	table_entries_used
op	78:40	0:0	6	>=
water	78:43	0:0	6	UINT_MAX
op	78:52	0:0	6	/
op	78:54	0:0	6	sizeof
water	78:60	0:0	6	(
water	78:61	0:0	6	uint32_t
water	78:69	0:0	6	)
stmts	79:12	79:21	5	
return	79:12	79:21	6	-1
op	79:19	0:0	7	-
water	79:20	0:0	7	1
water	80:8	0:0	4	nsv
op	80:11	0:0	4	->
water	80:13	0:0	4	nsvs_file_offset
op	80:30	0:0	4	=
call	80:32	80:94	4	av_malloc_array
arg	80:48	80:76	5	(unsigned)table_entries_used
water	80:48	0:0	6	(
water	80:49	0:0	6	unsigned
water	80:57	0:0	6	)
water	80:58	0:0	6	table_entries_used
arg	80:78	80:94	5	sizeof(uint32_t)
op	80:78	0:0	6	sizeof
water	80:84	0:0	6	(
water	80:85	0:0	6	uint32_t
water	80:93	0:0	6	)
water	80:95	0:0	4	;
if	81:8	82:34	4	(! nsv -> nsvs_file_offset)
cond	81:12	81:18	5	! nsv -> nsvs_file_offset
op	81:12	0:0	6	!
water	81:13	0:0	6	nsv
op	81:16	0:0	6	->
water	81:18	0:0	6	nsvs_file_offset
stmts	82:12	82:34	5	
return	82:12	82:34	6	AVERROR(ENOMEM)
call	82:19	82:33	7	AVERROR
arg	82:27	82:33	8	ENOMEM
water	82:27	0:0	9	ENOMEM
for	84:8	85:59	4	(i = 0 ;i < table_entries_used;i ++)
forinit	84:12	84:15	5	i = 0 ;
water	84:12	0:0	6	i
op	84:13	0:0	6	=
water	84:14	0:0	6	0
water	84:15	0:0	6	;
cond	84:16	84:18	5	i < table_entries_used
water	84:16	0:0	6	i
op	84:17	0:0	6	<
water	84:18	0:0	6	table_entries_used
forexpr	84:37	84:38	5	i ++
water	84:37	0:0	6	i
op	84:38	0:0	6	++
stmts	85:12	85:59	5	
water	85:12	0:0	6	nsv
op	85:15	0:0	6	->
water	85:17	0:0	6	nsvs_file_offset
op	85:33	0:0	6	[
water	85:34	0:0	6	i
op	85:35	0:0	6	]
op	85:37	0:0	6	=
call	85:39	85:51	6	avio_rl32
arg	85:49	85:51	7	pb
water	85:49	0:0	8	pb
op	85:53	0:0	6	+
water	85:55	0:0	6	size
water	85:59	0:0	6	;
if	87:8	95:8	4	(table_entries > table_entries_used &&avio_rl32 (pb ) ==MKTAG ('T' ,'O' ,'C' ,'2' ))
cond	87:11	88:49	5	table_entries > table_entries_used &&avio_rl32 (pb ) ==MKTAG ('T' ,'O' ,'C' ,'2' )
water	87:11	0:0	6	table_entries
op	87:25	0:0	6	>
water	87:27	0:0	6	table_entries_used
op	87:46	0:0	6	&&
call	88:11	88:23	6	avio_rl32
arg	88:21	88:23	7	pb
water	88:21	0:0	8	pb
op	88:25	0:0	6	==
call	88:28	88:49	6	MKTAG
arg	88:34	88:37	7	'T'
water	88:34	0:0	8	'T'
arg	88:38	88:41	7	'O'
water	88:38	0:0	8	'O'
arg	88:42	88:45	7	'C'
water	88:42	0:0	8	'C'
arg	88:46	88:49	7	'2'
water	88:46	0:0	8	'2'
stmts	88:52	95:8	5	
water	88:52	0:0	6	{
water	89:12	0:0	6	nsv
op	89:15	0:0	6	->
water	89:17	0:0	6	nsvs_timestamps
op	89:33	0:0	6	=
call	89:35	89:97	6	av_malloc_array
arg	89:51	89:79	7	(unsigned)table_entries_used
water	89:51	0:0	8	(
water	89:52	0:0	8	unsigned
water	89:60	0:0	8	)
water	89:61	0:0	8	table_entries_used
arg	89:81	89:97	7	sizeof(uint32_t)
op	89:81	0:0	8	sizeof
water	89:87	0:0	8	(
water	89:88	0:0	8	uint32_t
water	89:96	0:0	8	)
water	89:98	0:0	6	;
if	90:12	91:38	6	(! nsv -> nsvs_timestamps)
cond	90:16	90:22	7	! nsv -> nsvs_timestamps
op	90:16	0:0	8	!
water	90:17	0:0	8	nsv
op	90:20	0:0	8	->
water	90:22	0:0	8	nsvs_timestamps
stmts	91:16	91:38	7	
return	91:16	91:38	8	AVERROR(ENOMEM)
call	91:23	91:37	9	AVERROR
arg	91:31	91:37	10	ENOMEM
water	91:31	0:0	11	ENOMEM
for	92:12	94:12	6	(i = 0 ;i < table_entries_used;i ++)
forinit	92:16	92:19	7	i = 0 ;
water	92:16	0:0	8	i
op	92:17	0:0	8	=
water	92:18	0:0	8	0
water	92:19	0:0	8	;
cond	92:20	92:22	7	i < table_entries_used
water	92:20	0:0	8	i
op	92:21	0:0	8	<
water	92:22	0:0	8	table_entries_used
forexpr	92:41	92:42	7	i ++
water	92:41	0:0	8	i
op	92:42	0:0	8	++
stmts	92:46	94:12	7	
water	92:46	0:0	8	{
water	93:16	0:0	8	nsv
op	93:19	0:0	8	->
water	93:21	0:0	8	nsvs_timestamps
op	93:36	0:0	8	[
water	93:37	0:0	8	i
op	93:38	0:0	8	]
op	93:40	0:0	8	=
call	93:42	93:54	8	avio_rl32
arg	93:52	93:54	9	pb
water	93:52	0:0	10	pb
water	93:55	0:0	8	;
water	94:12	0:0	8	}
water	95:8	0:0	6	}
water	96:4	0:0	4	}
call	98:4	98:79	2	av_log
arg	98:11	98:12	3	s
water	98:11	0:0	4	s
arg	98:14	98:26	3	AV_LOG_TRACE
water	98:14	0:0	4	AV_LOG_TRACE
arg	98:28	98:64	3	"NSV got index; filepos %"PRId64"\n"
water	98:28	0:0	4	"NSV got index; filepos %"
water	98:54	0:0	4	PRId64
water	98:60	0:0	4	"\n"
arg	98:66	98:79	3	avio_tell(pb)
call	98:66	98:78	4	avio_tell
arg	98:76	98:78	5	pb
water	98:76	0:0	6	pb
water	98:80	0:0	2	;
call	100:4	100:51	2	avio_seek
arg	100:14	100:16	3	pb
water	100:14	0:0	4	pb
arg	100:18	100:41	3	nsv->base_offset+size
water	100:18	0:0	4	nsv
op	100:21	0:0	4	->
water	100:23	0:0	4	base_offset
op	100:35	0:0	4	+
water	100:37	0:0	4	size
arg	100:43	100:51	3	SEEK_SET
water	100:43	0:0	4	SEEK_SET
water	100:52	0:0	2	;
if	102:4	103:17	2	(avio_feof (pb ))
cond	102:8	102:20	3	avio_feof (pb )
call	102:8	102:20	4	avio_feof
arg	102:18	102:20	5	pb
water	102:18	0:0	6	pb
stmts	103:8	103:17	3	
return	103:8	103:17	4	-1
op	103:15	0:0	5	-
water	103:16	0:0	5	1
water	104:4	0:0	2	nsv
op	104:7	0:0	2	->
water	104:9	0:0	2	state
op	104:15	0:0	2	=
water	104:17	0:0	2	NSV_HAS_READ_NSVF
water	104:34	0:0	2	;
return	105:4	105:12	2	0
water	105:11	0:0	3	0

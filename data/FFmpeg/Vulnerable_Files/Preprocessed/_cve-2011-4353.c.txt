func	2:0	43:0	0	int	av_image_fill_pointers
params	2:26	0:0	1	
param	2:27	2:43	2	uint8_t *	data[4]
param	2:45	2:69	2	enum PixelFormat	pix_fmt
param	2:71	2:81	2	int	height
param	3:27	3:39	2	uint8_t *	ptr
param	3:41	3:63	2	const int	linesizes[4]
stmnts	0:0	42:21	1	
decl	5:4	5:44	2	int	i
water	5:9	0:0	2	,
decl	5:4	5:44	2	int	total_size
water	5:21	0:0	2	,
decl	5:4	5:44	2	int	size[4]
water	5:30	0:0	2	,
decl	5:4	5:44	2	int	has_plane[4]
decl	7:4	7:69	2	const AVPixFmtDescriptor	*desc
op	7:35	0:0	2	=
op	7:37	0:0	2	&
water	7:38	0:0	2	av_pix_fmt_descriptors
op	7:60	0:0	2	[
water	7:61	0:0	2	pix_fmt
op	7:68	0:0	2	]
call	8:4	8:42	2	memset
arg	8:11	8:20	3	data
water	8:11	0:0	4	data
arg	8:22	8:23	3	0
water	8:22	0:0	4	0
arg	8:25	8:42	3	sizeof(data[0])*4
op	8:25	0:0	4	sizeof
water	8:31	0:0	4	(
water	8:32	0:0	4	data
op	8:36	0:0	4	[
water	8:37	0:0	4	0
op	8:38	0:0	4	]
water	8:39	0:0	4	)
op	8:40	0:0	4	*
water	8:41	0:0	4	4
water	8:43	0:0	2	;
call	9:4	9:37	2	memset
arg	9:11	9:20	3	size
water	9:11	0:0	4	size
arg	9:22	9:23	3	0
water	9:22	0:0	4	0
arg	9:25	9:37	3	sizeof(size)
op	9:25	0:0	4	sizeof
water	9:31	0:0	4	(
water	9:32	0:0	4	size
water	9:36	0:0	4	)
water	9:38	0:0	2	;
call	10:4	10:42	2	memset
arg	10:11	10:20	3	has_plane
water	10:11	0:0	4	has_plane
arg	10:22	10:23	3	0
water	10:22	0:0	4	0
arg	10:25	10:42	3	sizeof(has_plane)
op	10:25	0:0	4	sizeof
water	10:31	0:0	4	(
water	10:32	0:0	4	has_plane
water	10:41	0:0	4	)
water	10:43	0:0	2	;
if	12:4	13:30	2	(( unsigned ) pix_fmt >= PIX_FMT_NB || desc -> flags & PIX_FMT_HWACCEL)
cond	12:8	12:57	3	( unsigned ) pix_fmt >= PIX_FMT_NB || desc -> flags & PIX_FMT_HWACCEL
water	12:8	0:0	4	(
water	12:9	0:0	4	unsigned
water	12:17	0:0	4	)
water	12:18	0:0	4	pix_fmt
op	12:26	0:0	4	>=
water	12:29	0:0	4	PIX_FMT_NB
op	12:40	0:0	4	||
water	12:43	0:0	4	desc
op	12:47	0:0	4	->
water	12:49	0:0	4	flags
op	12:55	0:0	4	&
water	12:57	0:0	4	PIX_FMT_HWACCEL
stmts	13:8	13:30	3	
return	13:8	13:30	4	AVERROR(EINVAL)
call	13:15	13:29	5	AVERROR
arg	13:23	13:29	6	EINVAL
water	13:23	0:0	7	EINVAL
water	15:4	0:0	2	data
op	15:8	0:0	2	[
water	15:9	0:0	2	0
op	15:10	0:0	2	]
op	15:12	0:0	2	=
water	15:14	0:0	2	ptr
water	15:17	0:0	2	;
if	16:4	17:30	2	(linesizes [ 0 ] > ( INT_MAX - 1024 ) / height)
cond	16:8	16:42	3	linesizes [ 0 ] > ( INT_MAX - 1024 ) / height
water	16:8	0:0	4	linesizes
op	16:17	0:0	4	[
water	16:18	0:0	4	0
op	16:19	0:0	4	]
op	16:21	0:0	4	>
water	16:23	0:0	4	(
water	16:24	0:0	4	INT_MAX
op	16:32	0:0	4	-
water	16:34	0:0	4	1024
water	16:38	0:0	4	)
op	16:40	0:0	4	/
water	16:42	0:0	4	height
stmts	17:8	17:30	3	
return	17:8	17:30	4	AVERROR(EINVAL)
call	17:15	17:29	5	AVERROR
arg	17:23	17:29	6	EINVAL
water	17:23	0:0	7	EINVAL
water	18:4	0:0	2	size
op	18:8	0:0	2	[
water	18:9	0:0	2	0
op	18:10	0:0	2	]
op	18:12	0:0	2	=
water	18:14	0:0	2	linesizes
op	18:23	0:0	2	[
water	18:24	0:0	2	0
op	18:25	0:0	2	]
op	18:27	0:0	2	*
water	18:29	0:0	2	height
water	18:35	0:0	2	;
if	20:4	24:4	2	(desc -> flags & PIX_FMT_PAL)
cond	20:8	20:22	3	desc -> flags & PIX_FMT_PAL
water	20:8	0:0	4	desc
op	20:12	0:0	4	->
water	20:14	0:0	4	flags
op	20:20	0:0	4	&
water	20:22	0:0	4	PIX_FMT_PAL
stmts	20:35	24:4	3	
water	20:35	0:0	4	{
water	21:8	0:0	4	size
op	21:12	0:0	4	[
water	21:13	0:0	4	0
op	21:14	0:0	4	]
op	21:16	0:0	4	=
water	21:18	0:0	4	(
water	21:19	0:0	4	size
op	21:23	0:0	4	[
water	21:24	0:0	4	0
op	21:25	0:0	4	]
op	21:27	0:0	4	+
water	21:29	0:0	4	3
water	21:30	0:0	4	)
op	21:32	0:0	4	&
water	21:34	0:0	4	~3
water	21:36	0:0	4	;
water	22:8	0:0	4	data
op	22:12	0:0	4	[
water	22:13	0:0	4	1
op	22:14	0:0	4	]
op	22:16	0:0	4	=
water	22:18	0:0	4	ptr
op	22:22	0:0	4	+
water	22:24	0:0	4	size
op	22:28	0:0	4	[
water	22:29	0:0	4	0
op	22:30	0:0	4	]
water	22:31	0:0	4	;
return	23:8	23:32	4	size[0]+256*4
water	23:15	0:0	5	size
op	23:19	0:0	5	[
water	23:20	0:0	5	0
op	23:21	0:0	5	]
op	23:23	0:0	5	+
water	23:25	0:0	5	256
op	23:29	0:0	5	*
water	23:31	0:0	5	4
water	24:4	0:0	4	}
for	26:4	27:42	2	(i = 0 ;i < 4;i ++)
forinit	26:9	26:14	3	i = 0 ;
water	26:9	0:0	4	i
op	26:11	0:0	4	=
water	26:13	0:0	4	0
water	26:14	0:0	4	;
cond	26:16	26:20	3	i < 4
water	26:16	0:0	4	i
op	26:18	0:0	4	<
water	26:20	0:0	4	4
forexpr	26:23	26:24	3	i ++
water	26:23	0:0	4	i
op	26:24	0:0	4	++
stmts	27:8	27:42	3	
water	27:8	0:0	4	has_plane
op	27:17	0:0	4	[
water	27:18	0:0	4	desc
op	27:22	0:0	4	->
water	27:24	0:0	4	comp
op	27:28	0:0	4	[
water	27:29	0:0	4	i
op	27:30	0:0	4	]
op	27:31	0:0	4	.
water	27:32	0:0	4	plane
op	27:37	0:0	4	]
op	27:39	0:0	4	=
water	27:41	0:0	4	1
water	27:42	0:0	4	;
water	29:4	0:0	2	total_size
op	29:15	0:0	2	=
water	29:17	0:0	2	size
op	29:21	0:0	2	[
water	29:22	0:0	2	0
op	29:23	0:0	2	]
water	29:24	0:0	2	;
for	30:4	40:4	2	(i = 1 ;has_plane [ i ] && i < 4;i ++)
forinit	30:9	30:14	3	i = 1 ;
water	30:9	0:0	4	i
op	30:11	0:0	4	=
water	30:13	0:0	4	1
water	30:14	0:0	4	;
cond	30:16	30:36	3	has_plane [ i ] && i < 4
water	30:16	0:0	4	has_plane
op	30:25	0:0	4	[
water	30:26	0:0	4	i
op	30:27	0:0	4	]
op	30:29	0:0	4	&&
water	30:32	0:0	4	i
op	30:34	0:0	4	<
water	30:36	0:0	4	4
forexpr	30:39	30:40	3	i ++
water	30:39	0:0	4	i
op	30:40	0:0	4	++
stmts	30:44	40:4	3	
water	30:44	0:0	4	{
decl	31:8	31:63	4	int	h
water	31:13	0:0	4	,
decl	31:8	31:63	4	int	s
op	31:17	0:0	4	=
water	31:19	0:0	4	(
water	31:20	0:0	4	i
op	31:22	0:0	4	==
water	31:25	0:0	4	1
op	31:27	0:0	4	||
water	31:30	0:0	4	i
op	31:32	0:0	4	==
water	31:35	0:0	4	2
water	31:36	0:0	4	)
water	31:38	0:0	4	?
water	31:40	0:0	4	desc
op	31:44	0:0	4	->
water	31:46	0:0	4	log2_chroma_h
water	31:60	0:0	4	:
water	31:62	0:0	4	0
water	32:8	0:0	4	data
op	32:12	0:0	4	[
water	32:13	0:0	4	i
op	32:14	0:0	4	]
op	32:16	0:0	4	=
water	32:18	0:0	4	data
op	32:22	0:0	4	[
water	32:23	0:0	4	i
op	32:24	0:0	4	-
water	32:25	0:0	4	1
op	32:26	0:0	4	]
op	32:28	0:0	4	+
water	32:30	0:0	4	size
op	32:34	0:0	4	[
water	32:35	0:0	4	i
op	32:36	0:0	4	-
water	32:37	0:0	4	1
op	32:38	0:0	4	]
water	32:39	0:0	4	;
water	33:8	0:0	4	h
op	33:10	0:0	4	=
water	33:12	0:0	4	(
water	33:13	0:0	4	height
op	33:20	0:0	4	+
water	33:22	0:0	4	(
water	33:23	0:0	4	1
op	33:25	0:0	4	<<
water	33:28	0:0	4	s
water	33:29	0:0	4	)
op	33:31	0:0	4	-
water	33:33	0:0	4	1
water	33:34	0:0	4	)
op	33:36	0:0	4	>>
water	33:39	0:0	4	s
water	33:40	0:0	4	;
if	34:8	35:34	4	(linesizes [ i ] > INT_MAX / h)
cond	34:12	34:37	5	linesizes [ i ] > INT_MAX / h
water	34:12	0:0	6	linesizes
op	34:21	0:0	6	[
water	34:22	0:0	6	i
op	34:23	0:0	6	]
op	34:25	0:0	6	>
water	34:27	0:0	6	INT_MAX
op	34:35	0:0	6	/
water	34:37	0:0	6	h
stmts	35:12	35:34	5	
return	35:12	35:34	6	AVERROR(EINVAL)
call	35:19	35:33	7	AVERROR
arg	35:27	35:33	8	EINVAL
water	35:27	0:0	9	EINVAL
water	36:8	0:0	4	size
op	36:12	0:0	4	[
water	36:13	0:0	4	i
op	36:14	0:0	4	]
op	36:16	0:0	4	=
water	36:18	0:0	4	h
op	36:20	0:0	4	*
water	36:22	0:0	4	linesizes
op	36:31	0:0	4	[
water	36:32	0:0	4	i
op	36:33	0:0	4	]
water	36:34	0:0	4	;
if	37:8	38:34	4	(total_size > INT_MAX - size [ i ])
cond	37:12	37:41	5	total_size > INT_MAX - size [ i ]
water	37:12	0:0	6	total_size
op	37:23	0:0	6	>
water	37:25	0:0	6	INT_MAX
op	37:33	0:0	6	-
water	37:35	0:0	6	size
op	37:39	0:0	6	[
water	37:40	0:0	6	i
op	37:41	0:0	6	]
stmts	38:12	38:34	5	
return	38:12	38:34	6	AVERROR(EINVAL)
call	38:19	38:33	7	AVERROR
arg	38:27	38:33	8	EINVAL
water	38:27	0:0	9	EINVAL
water	39:8	0:0	4	total_size
op	39:19	0:0	4	+=
water	39:22	0:0	4	size
op	39:26	0:0	4	[
water	39:27	0:0	4	i
op	39:28	0:0	4	]
water	39:29	0:0	4	;
water	40:4	0:0	4	}
return	42:4	42:21	2	total_size
water	42:11	0:0	3	total_size

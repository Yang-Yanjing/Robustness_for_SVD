func	3:0	54:0	0	static int	get_cox
params	3:18	0:0	1	
param	3:19	3:44	2	Jpeg2000DecoderContext *	s
param	3:46	3:68	2	Jpeg2000CodingStyle *	c
stmnts	0:0	53:12	1	
decl	5:4	5:16	2	uint8_t	byte
if	7:4	8:34	2	(bytestream2_get_bytes_left (& s -> g ) < 5)
cond	7:8	7:44	3	bytestream2_get_bytes_left (& s -> g ) < 5
call	7:8	7:40	4	bytestream2_get_bytes_left
arg	7:35	7:40	5	&s->g
op	7:35	0:0	6	&
water	7:36	0:0	6	s
op	7:37	0:0	6	->
water	7:39	0:0	6	g
op	7:42	0:0	4	<
water	7:44	0:0	4	5
stmts	8:8	8:34	3	
return	8:8	8:34	4	AVERROR_INVALIDDATA
water	8:15	0:0	5	AVERROR_INVALIDDATA
water	12:4	0:0	2	c
op	12:5	0:0	2	->
water	12:7	0:0	2	nreslevels
op	12:18	0:0	2	=
call	12:20	12:47	2	bytestream2_get_byteu
arg	12:42	12:47	3	&s->g
op	12:42	0:0	4	&
water	12:43	0:0	4	s
op	12:44	0:0	4	->
water	12:46	0:0	4	g
op	12:49	0:0	2	+
water	12:51	0:0	2	1
water	12:52	0:0	2	;
if	13:4	16:4	2	(c -> nreslevels >= JPEG2000_MAX_RESLEVELS)
cond	13:8	13:25	3	c -> nreslevels >= JPEG2000_MAX_RESLEVELS
water	13:8	0:0	4	c
op	13:9	0:0	4	->
water	13:11	0:0	4	nreslevels
op	13:22	0:0	4	>=
water	13:25	0:0	4	JPEG2000_MAX_RESLEVELS
stmts	13:49	16:4	3	
water	13:49	0:0	4	{
call	14:8	14:82	4	av_log
arg	14:15	14:23	5	s->avctx
water	14:15	0:0	6	s
op	14:16	0:0	6	->
water	14:18	0:0	6	avctx
arg	14:25	14:37	5	AV_LOG_ERROR
water	14:25	0:0	6	AV_LOG_ERROR
arg	14:39	14:67	5	"nreslevels %d is invalid\n"
water	14:39	0:0	6	"nreslevels %d is invalid\n"
arg	14:69	14:82	5	c->nreslevels
water	14:69	0:0	6	c
op	14:70	0:0	6	->
water	14:72	0:0	6	nreslevels
water	14:83	0:0	4	;
return	15:8	15:34	4	AVERROR_INVALIDDATA
water	15:15	0:0	5	AVERROR_INVALIDDATA
water	16:4	0:0	4	}
if	19:4	20:32	2	(c -> nreslevels < s -> reduction_factor)
cond	19:8	19:27	3	c -> nreslevels < s -> reduction_factor
water	19:8	0:0	4	c
op	19:9	0:0	4	->
water	19:11	0:0	4	nreslevels
op	19:22	0:0	4	<
water	19:24	0:0	4	s
op	19:25	0:0	4	->
water	19:27	0:0	4	reduction_factor
stmts	20:8	20:32	3	
water	20:8	0:0	4	c
op	20:9	0:0	4	->
water	20:11	0:0	4	nreslevels2decode
op	20:29	0:0	4	=
water	20:31	0:0	4	1
water	20:32	0:0	4	;
else	21:4	22:66	2
stmts	22:8	22:66	3	
water	22:8	0:0	4	c
op	22:9	0:0	4	->
water	22:11	0:0	4	nreslevels2decode
op	22:29	0:0	4	=
water	22:31	0:0	4	c
op	22:32	0:0	4	->
water	22:34	0:0	4	nreslevels
op	22:45	0:0	4	-
water	22:47	0:0	4	s
op	22:48	0:0	4	->
water	22:50	0:0	4	reduction_factor
water	22:66	0:0	4	;
water	24:4	0:0	2	c
op	24:5	0:0	2	->
water	24:7	0:0	2	log2_cblk_width
op	24:24	0:0	2	=
water	24:26	0:0	2	(
call	24:27	24:54	2	bytestream2_get_byteu
arg	24:49	24:54	3	&s->g
op	24:49	0:0	4	&
water	24:50	0:0	4	s
op	24:51	0:0	4	->
water	24:53	0:0	4	g
op	24:56	0:0	2	&
water	24:58	0:0	2	15
water	24:60	0:0	2	)
op	24:62	0:0	2	+
water	24:64	0:0	2	2
water	24:65	0:0	2	;
water	25:4	0:0	2	c
op	25:5	0:0	2	->
water	25:7	0:0	2	log2_cblk_height
op	25:24	0:0	2	=
water	25:26	0:0	2	(
call	25:27	25:54	2	bytestream2_get_byteu
arg	25:49	25:54	3	&s->g
op	25:49	0:0	4	&
water	25:50	0:0	4	s
op	25:51	0:0	4	->
water	25:53	0:0	4	g
op	25:56	0:0	2	&
water	25:58	0:0	2	15
water	25:60	0:0	2	)
op	25:62	0:0	2	+
water	25:64	0:0	2	2
water	25:65	0:0	2	;
if	27:4	31:4	2	(c -> log2_cblk_width > 10 || c -> log2_cblk_height > 10 || c -> log2_cblk_width + c -> log2_cblk_height > 12)
cond	27:8	28:51	3	c -> log2_cblk_width > 10 || c -> log2_cblk_height > 10 || c -> log2_cblk_width + c -> log2_cblk_height > 12
water	27:8	0:0	4	c
op	27:9	0:0	4	->
water	27:11	0:0	4	log2_cblk_width
op	27:27	0:0	4	>
water	27:29	0:0	4	10
op	27:32	0:0	4	||
water	27:35	0:0	4	c
op	27:36	0:0	4	->
water	27:38	0:0	4	log2_cblk_height
op	27:55	0:0	4	>
water	27:57	0:0	4	10
op	27:60	0:0	4	||
water	28:8	0:0	4	c
op	28:9	0:0	4	->
water	28:11	0:0	4	log2_cblk_width
op	28:27	0:0	4	+
water	28:29	0:0	4	c
op	28:30	0:0	4	->
water	28:32	0:0	4	log2_cblk_height
op	28:49	0:0	4	>
water	28:51	0:0	4	12
stmts	28:55	31:4	3	
water	28:55	0:0	4	{
call	29:8	29:60	4	av_log
arg	29:15	29:23	5	s->avctx
water	29:15	0:0	6	s
op	29:16	0:0	6	->
water	29:18	0:0	6	avctx
arg	29:25	29:37	5	AV_LOG_ERROR
water	29:25	0:0	6	AV_LOG_ERROR
arg	29:39	29:60	5	"cblk size invalid\n"
water	29:39	0:0	6	"cblk size invalid\n"
water	29:61	0:0	4	;
return	30:8	30:34	4	AVERROR_INVALIDDATA
water	30:15	0:0	5	AVERROR_INVALIDDATA
water	31:4	0:0	4	}
water	33:4	0:0	2	c
op	33:5	0:0	2	->
water	33:7	0:0	2	cblk_style
op	33:18	0:0	2	=
call	33:20	33:47	2	bytestream2_get_byteu
arg	33:42	33:47	3	&s->g
op	33:42	0:0	4	&
water	33:43	0:0	4	s
op	33:44	0:0	4	->
water	33:46	0:0	4	g
water	33:48	0:0	2	;
if	34:4	36:4	2	(c -> cblk_style != 0)
cond	34:8	34:25	3	c -> cblk_style != 0
water	34:8	0:0	4	c
op	34:9	0:0	4	->
water	34:11	0:0	4	cblk_style
op	34:22	0:0	4	!=
water	34:25	0:0	4	0
stmts	34:28	36:4	3	
water	34:28	0:0	4	{
call	35:8	35:80	4	av_log
arg	35:15	35:23	5	s->avctx
water	35:15	0:0	6	s
op	35:16	0:0	6	->
water	35:18	0:0	6	avctx
arg	35:25	35:39	5	AV_LOG_WARNING
water	35:25	0:0	6	AV_LOG_WARNING
arg	35:41	35:65	5	"extra cblk styles %X\n"
water	35:41	0:0	6	"extra cblk styles %X\n"
arg	35:67	35:80	5	c->cblk_style
water	35:67	0:0	6	c
op	35:68	0:0	6	->
water	35:70	0:0	6	cblk_style
water	35:81	0:0	4	;
water	36:4	0:0	4	}
water	37:4	0:0	2	c
op	37:5	0:0	2	->
water	37:7	0:0	2	transform
op	37:17	0:0	2	=
call	37:19	37:46	2	bytestream2_get_byteu
arg	37:41	37:46	3	&s->g
op	37:41	0:0	4	&
water	37:42	0:0	4	s
op	37:43	0:0	4	->
water	37:45	0:0	4	g
water	37:47	0:0	2	;
if	39:4	40:35	2	(( s -> avctx -> flags & CODEC_FLAG_BITEXACT ) && ( c -> transform == FF_DWT97 ))
cond	39:8	39:76	3	( s -> avctx -> flags & CODEC_FLAG_BITEXACT ) && ( c -> transform == FF_DWT97 )
water	39:8	0:0	4	(
water	39:9	0:0	4	s
op	39:10	0:0	4	->
water	39:12	0:0	4	avctx
op	39:17	0:0	4	->
water	39:19	0:0	4	flags
op	39:25	0:0	4	&
water	39:27	0:0	4	CODEC_FLAG_BITEXACT
water	39:46	0:0	4	)
op	39:48	0:0	4	&&
water	39:51	0:0	4	(
water	39:52	0:0	4	c
op	39:53	0:0	4	->
water	39:55	0:0	4	transform
op	39:65	0:0	4	==
water	39:68	0:0	4	FF_DWT97
water	39:76	0:0	4	)
stmts	40:8	40:35	3	
water	40:8	0:0	4	c
op	40:9	0:0	4	->
water	40:11	0:0	4	transform
op	40:21	0:0	4	=
water	40:23	0:0	4	FF_DWT97_INT
water	40:35	0:0	4	;
if	42:4	49:4	2	(c -> csty & JPEG2000_CSTY_PREC)
cond	42:8	42:18	3	c -> csty & JPEG2000_CSTY_PREC
water	42:8	0:0	4	c
op	42:9	0:0	4	->
water	42:11	0:0	4	csty
op	42:16	0:0	4	&
water	42:18	0:0	4	JPEG2000_CSTY_PREC
stmts	42:38	49:4	3	
water	42:38	0:0	4	{
decl	43:8	43:13	4	int	i
for	44:8	48:8	4	(i = 0 ;i < c -> nreslevels;i ++)
forinit	44:13	44:18	5	i = 0 ;
water	44:13	0:0	6	i
op	44:15	0:0	6	=
water	44:17	0:0	6	0
water	44:18	0:0	6	;
cond	44:20	44:27	5	i < c -> nreslevels
water	44:20	0:0	6	i
op	44:22	0:0	6	<
water	44:24	0:0	6	c
op	44:25	0:0	6	->
water	44:27	0:0	6	nreslevels
forexpr	44:39	44:40	5	i ++
water	44:39	0:0	6	i
op	44:40	0:0	6	++
stmts	44:44	48:8	5	
water	44:44	0:0	6	{
water	45:12	0:0	6	byte
op	45:17	0:0	6	=
call	45:19	45:45	6	bytestream2_get_byte
arg	45:40	45:45	7	&s->g
op	45:40	0:0	8	&
water	45:41	0:0	8	s
op	45:42	0:0	8	->
water	45:44	0:0	8	g
water	45:46	0:0	6	;
water	46:12	0:0	6	c
op	46:13	0:0	6	->
water	46:15	0:0	6	log2_prec_widths
op	46:31	0:0	6	[
water	46:32	0:0	6	i
op	46:33	0:0	6	]
op	46:36	0:0	6	=
water	46:39	0:0	6	byte
op	46:50	0:0	6	&
water	46:52	0:0	6	0
water	46:53	0:0	6	x0F
water	46:56	0:0	6	;
water	47:12	0:0	6	c
op	47:13	0:0	6	->
water	47:15	0:0	6	log2_prec_heights
op	47:32	0:0	6	[
water	47:33	0:0	6	i
op	47:34	0:0	6	]
op	47:36	0:0	6	=
water	47:38	0:0	6	(
water	47:39	0:0	6	byte
op	47:44	0:0	6	>>
water	47:47	0:0	6	4
water	47:48	0:0	6	)
op	47:50	0:0	6	&
water	47:52	0:0	6	0
water	47:53	0:0	6	x0F
water	47:56	0:0	6	;
water	48:8	0:0	6	}
water	49:4	0:0	4	}
else	49:6	52:4	2
stmts	49:11	52:4	3	
water	49:11	0:0	4	{
call	50:8	50:69	4	memset
arg	50:15	50:35	5	c->log2_prec_widths
water	50:15	0:0	6	c
op	50:16	0:0	6	->
water	50:18	0:0	6	log2_prec_widths
arg	50:37	50:39	5	15
water	50:37	0:0	6	15
arg	50:41	50:69	5	sizeof(c->log2_prec_widths)
op	50:41	0:0	6	sizeof
water	50:47	0:0	6	(
water	50:48	0:0	6	c
op	50:49	0:0	6	->
water	50:51	0:0	6	log2_prec_widths
water	50:68	0:0	6	)
water	50:70	0:0	4	;
call	51:8	51:69	4	memset
arg	51:15	51:35	5	c->log2_prec_heights
water	51:15	0:0	6	c
op	51:16	0:0	6	->
water	51:18	0:0	6	log2_prec_heights
arg	51:37	51:39	5	15
water	51:37	0:0	6	15
arg	51:41	51:69	5	sizeof(c->log2_prec_heights)
op	51:41	0:0	6	sizeof
water	51:47	0:0	6	(
water	51:48	0:0	6	c
op	51:49	0:0	6	->
water	51:51	0:0	6	log2_prec_heights
water	51:68	0:0	6	)
water	51:70	0:0	4	;
water	52:4	0:0	4	}
return	53:4	53:12	2	0
water	53:11	0:0	3	0

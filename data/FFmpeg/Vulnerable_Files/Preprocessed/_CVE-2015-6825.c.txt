func	1:0	105:0	0	int	ff_frame_thread_init
params	1:24	0:0	1	
param	1:25	1:46	2	AVCodecContext *	avctx
stmnts	0:0	104:14	1	
decl	3:4	3:42	2	int	thread_count
op	3:21	0:0	2	=
water	3:23	0:0	2	avctx
op	3:28	0:0	2	->
water	3:30	0:0	2	thread_count
decl	4:4	4:39	2	const AVCodec	*codec
op	4:25	0:0	2	=
water	4:27	0:0	2	avctx
op	4:32	0:0	2	->
water	4:34	0:0	2	codec
decl	5:4	5:31	2	AVCodecContext	*src
op	5:24	0:0	2	=
water	5:26	0:0	2	avctx
decl	6:4	6:28	2	FrameThreadContext	*fctx
decl	7:4	7:18	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:18	2	int	err
op	7:15	0:0	2	=
water	7:17	0:0	2	0
call	10:4	10:19	2	w32thread_init
water	10:20	0:0	2	;
if	13:4	22:4	2	(! thread_count)
cond	13:8	13:9	3	! thread_count
op	13:8	0:0	4	!
water	13:9	0:0	4	thread_count
stmts	13:23	22:4	3	
water	13:23	0:0	4	{
decl	14:8	14:36	4	int	nb_cpus
op	14:20	0:0	4	=
call	14:22	14:35	5	av_cpu_count
if	15:8	16:23	4	(( avctx -> debug & ( FF_DEBUG_VIS_QP | FF_DEBUG_VIS_MB_TYPE ) ) || avctx -> debug_mv)
cond	15:12	15:80	5	( avctx -> debug & ( FF_DEBUG_VIS_QP | FF_DEBUG_VIS_MB_TYPE ) ) || avctx -> debug_mv
water	15:12	0:0	6	(
water	15:13	0:0	6	avctx
op	15:18	0:0	6	->
water	15:20	0:0	6	debug
op	15:26	0:0	6	&
water	15:28	0:0	6	(
water	15:29	0:0	6	FF_DEBUG_VIS_QP
op	15:45	0:0	6	|
water	15:47	0:0	6	FF_DEBUG_VIS_MB_TYPE
water	15:67	0:0	6	)
water	15:68	0:0	6	)
op	15:70	0:0	6	||
water	15:73	0:0	6	avctx
op	15:78	0:0	6	->
water	15:80	0:0	6	debug_mv
stmts	16:12	16:23	5	
water	16:12	0:0	6	nb_cpus
op	16:20	0:0	6	=
water	16:22	0:0	6	1
water	16:23	0:0	6	;
if	18:8	19:85	4	(nb_cpus > 1)
cond	18:12	18:22	5	nb_cpus > 1
water	18:12	0:0	6	nb_cpus
op	18:20	0:0	6	>
water	18:22	0:0	6	1
stmts	19:12	19:85	5	
water	19:12	0:0	6	thread_count
op	19:25	0:0	6	=
water	19:27	0:0	6	avctx
op	19:32	0:0	6	->
water	19:34	0:0	6	thread_count
op	19:47	0:0	6	=
call	19:49	19:84	6	FFMIN
arg	19:55	19:66	7	nb_cpus+1
water	19:55	0:0	8	nb_cpus
op	19:63	0:0	8	+
water	19:65	0:0	8	1
arg	19:68	19:84	7	MAX_AUTO_THREADS
water	19:68	0:0	8	MAX_AUTO_THREADS
water	19:85	0:0	6	;
else	20:8	21:50	4
stmts	21:12	21:50	5	
water	21:12	0:0	6	thread_count
op	21:25	0:0	6	=
water	21:27	0:0	6	avctx
op	21:32	0:0	6	->
water	21:34	0:0	6	thread_count
op	21:47	0:0	6	=
water	21:49	0:0	6	1
water	21:50	0:0	6	;
water	22:4	0:0	4	}
if	24:4	27:4	2	(thread_count <= 1)
cond	24:8	24:24	3	thread_count <= 1
water	24:8	0:0	4	thread_count
op	24:21	0:0	4	<=
water	24:24	0:0	4	1
stmts	24:27	27:4	3	
water	24:27	0:0	4	{
water	25:8	0:0	4	avctx
op	25:13	0:0	4	->
water	25:15	0:0	4	active_thread_type
op	25:34	0:0	4	=
water	25:36	0:0	4	0
water	25:37	0:0	4	;
return	26:8	26:16	4	0
water	26:15	0:0	5	0
water	27:4	0:0	4	}
water	29:4	0:0	2	avctx
op	29:9	0:0	2	->
water	29:11	0:0	2	internal
op	29:19	0:0	2	->
water	29:21	0:0	2	thread_ctx
op	29:32	0:0	2	=
water	29:34	0:0	2	fctx
op	29:39	0:0	2	=
call	29:41	29:78	2	av_mallocz
arg	29:52	29:78	3	sizeof(FrameThreadContext)
op	29:52	0:0	4	sizeof
water	29:58	0:0	4	(
water	29:59	0:0	4	FrameThreadContext
water	29:77	0:0	4	)
water	29:79	0:0	2	;
water	31:4	0:0	2	fctx
op	31:8	0:0	2	->
water	31:10	0:0	2	threads
op	31:18	0:0	2	=
call	31:20	31:75	2	av_mallocz_array
arg	31:37	31:49	3	thread_count
water	31:37	0:0	4	thread_count
arg	31:51	31:75	3	sizeof(PerThreadContext)
op	31:51	0:0	4	sizeof
water	31:57	0:0	4	(
water	31:58	0:0	4	PerThreadContext
water	31:74	0:0	4	)
water	31:76	0:0	2	;
call	32:4	32:48	2	pthread_mutex_init
arg	32:23	32:42	3	&fctx->buffer_mutex
op	32:23	0:0	4	&
water	32:24	0:0	4	fctx
op	32:28	0:0	4	->
water	32:30	0:0	4	buffer_mutex
arg	32:44	32:48	3	NULL
water	32:44	0:0	4	NULL
water	32:49	0:0	2	;
water	33:4	0:0	2	fctx
op	33:8	0:0	2	->
water	33:10	0:0	2	delaying
op	33:19	0:0	2	=
water	33:21	0:0	2	1
water	33:22	0:0	2	;
for	35:4	97:4	2	(i = 0 ;i < thread_count;i ++)
forinit	35:9	35:14	3	i = 0 ;
water	35:9	0:0	4	i
op	35:11	0:0	4	=
water	35:13	0:0	4	0
water	35:14	0:0	4	;
cond	35:16	35:20	3	i < thread_count
water	35:16	0:0	4	i
op	35:18	0:0	4	<
water	35:20	0:0	4	thread_count
forexpr	35:34	35:35	3	i ++
water	35:34	0:0	4	i
op	35:35	0:0	4	++
stmts	35:39	97:4	3	
water	35:39	0:0	4	{
decl	36:8	36:64	4	AVCodecContext	*copy
op	36:29	0:0	4	=
call	36:31	36:63	5	av_malloc
arg	36:41	36:63	6	sizeof(AVCodecContext)
op	36:41	0:0	7	sizeof
water	36:47	0:0	7	(
water	36:48	0:0	7	AVCodecContext
water	36:62	0:0	7	)
decl	37:8	37:48	4	PerThreadContext	*p
op	37:29	0:0	4	=
op	37:31	0:0	4	&
water	37:32	0:0	4	fctx
op	37:36	0:0	4	->
water	37:38	0:0	4	threads
op	37:45	0:0	4	[
water	37:46	0:0	4	i
op	37:47	0:0	4	]
call	39:8	39:42	4	pthread_mutex_init
arg	39:27	39:36	5	&p->mutex
op	39:27	0:0	6	&
water	39:28	0:0	6	p
op	39:29	0:0	6	->
water	39:31	0:0	6	mutex
arg	39:38	39:42	5	NULL
water	39:38	0:0	6	NULL
water	39:43	0:0	4	;
call	40:8	40:51	4	pthread_mutex_init
arg	40:27	40:45	5	&p->progress_mutex
op	40:27	0:0	6	&
water	40:28	0:0	6	p
op	40:29	0:0	6	->
water	40:31	0:0	6	progress_mutex
arg	40:47	40:51	5	NULL
water	40:47	0:0	6	NULL
water	40:52	0:0	4	;
call	41:8	41:46	4	pthread_cond_init
arg	41:26	41:40	5	&p->input_cond
op	41:26	0:0	6	&
water	41:27	0:0	6	p
op	41:28	0:0	6	->
water	41:30	0:0	6	input_cond
arg	41:42	41:46	5	NULL
water	41:42	0:0	6	NULL
water	41:47	0:0	4	;
call	42:8	42:49	4	pthread_cond_init
arg	42:26	42:43	5	&p->progress_cond
op	42:26	0:0	6	&
water	42:27	0:0	6	p
op	42:28	0:0	6	->
water	42:30	0:0	6	progress_cond
arg	42:45	42:49	5	NULL
water	42:45	0:0	6	NULL
water	42:50	0:0	4	;
call	43:8	43:47	4	pthread_cond_init
arg	43:26	43:41	5	&p->output_cond
op	43:26	0:0	6	&
water	43:27	0:0	6	p
op	43:28	0:0	6	->
water	43:30	0:0	6	output_cond
arg	43:43	43:47	5	NULL
water	43:43	0:0	6	NULL
water	43:48	0:0	4	;
water	45:8	0:0	4	p
op	45:9	0:0	4	->
water	45:11	0:0	4	frame
op	45:17	0:0	4	=
call	45:19	45:34	4	av_frame_alloc
water	45:35	0:0	4	;
if	46:8	50:8	4	(! p -> frame)
cond	46:12	46:16	5	! p -> frame
op	46:12	0:0	6	!
water	46:13	0:0	6	p
op	46:14	0:0	6	->
water	46:16	0:0	6	frame
stmts	46:23	50:8	5	
water	46:23	0:0	6	{
call	47:12	47:26	6	av_freep
arg	47:21	47:26	7	&copy
op	47:21	0:0	8	&
water	47:22	0:0	8	copy
water	47:27	0:0	6	;
water	48:12	0:0	6	err
op	48:16	0:0	6	=
call	48:18	48:32	6	AVERROR
arg	48:26	48:32	7	ENOMEM
water	48:26	0:0	8	ENOMEM
water	48:33	0:0	6	;
goto	49:12	49:22	6	error
water	49:17	0:0	7	error
water	50:8	0:0	6	}
water	52:8	0:0	4	p
op	52:9	0:0	4	->
water	52:11	0:0	4	parent
op	52:18	0:0	4	=
water	52:20	0:0	4	fctx
water	52:24	0:0	4	;
water	53:8	0:0	4	p
op	53:9	0:0	4	->
water	53:11	0:0	4	avctx
op	53:18	0:0	4	=
water	53:20	0:0	4	copy
water	53:24	0:0	4	;
if	55:8	58:8	4	(! copy)
cond	55:12	55:13	5	! copy
op	55:12	0:0	6	!
water	55:13	0:0	6	copy
stmts	55:19	58:8	5	
water	55:19	0:0	6	{
water	56:12	0:0	6	err
op	56:16	0:0	6	=
call	56:18	56:32	6	AVERROR
arg	56:26	56:32	7	ENOMEM
water	56:26	0:0	8	ENOMEM
water	56:33	0:0	6	;
goto	57:12	57:22	6	error
water	57:17	0:0	7	error
water	58:8	0:0	6	}
op	60:8	0:0	4	*
water	60:9	0:0	4	copy
op	60:14	0:0	4	=
op	60:16	0:0	4	*
water	60:17	0:0	4	src
water	60:20	0:0	4	;
water	62:8	0:0	4	copy
op	62:12	0:0	4	->
water	62:14	0:0	4	internal
op	62:23	0:0	4	=
call	62:25	62:58	4	av_malloc
arg	62:35	62:58	5	sizeof(AVCodecInternal)
op	62:35	0:0	6	sizeof
water	62:41	0:0	6	(
water	62:42	0:0	6	AVCodecInternal
water	62:57	0:0	6	)
water	62:59	0:0	4	;
if	63:8	66:8	4	(! copy -> internal)
cond	63:12	63:19	5	! copy -> internal
op	63:12	0:0	6	!
water	63:13	0:0	6	copy
op	63:17	0:0	6	->
water	63:19	0:0	6	internal
stmts	63:29	66:8	5	
water	63:29	0:0	6	{
water	64:12	0:0	6	err
op	64:16	0:0	6	=
call	64:18	64:32	6	AVERROR
arg	64:26	64:32	7	ENOMEM
water	64:26	0:0	8	ENOMEM
water	64:33	0:0	6	;
goto	65:12	65:22	6	error
water	65:17	0:0	7	error
water	66:8	0:0	6	}
op	67:8	0:0	4	*
water	67:9	0:0	4	copy
op	67:13	0:0	4	->
water	67:15	0:0	4	internal
op	67:24	0:0	4	=
op	67:26	0:0	4	*
water	67:27	0:0	4	src
op	67:30	0:0	4	->
water	67:32	0:0	4	internal
water	67:40	0:0	4	;
water	68:8	0:0	4	copy
op	68:12	0:0	4	->
water	68:14	0:0	4	internal
op	68:22	0:0	4	->
water	68:24	0:0	4	thread_ctx
op	68:35	0:0	4	=
water	68:37	0:0	4	p
water	68:38	0:0	4	;
water	69:8	0:0	4	copy
op	69:12	0:0	4	->
water	69:14	0:0	4	internal
op	69:22	0:0	4	->
water	69:24	0:0	4	pkt
op	69:28	0:0	4	=
op	69:30	0:0	4	&
water	69:31	0:0	4	p
op	69:32	0:0	4	->
water	69:34	0:0	4	avpkt
water	69:39	0:0	4	;
if	71:8	78:8	4	(! i)
cond	71:12	71:13	5	! i
op	71:12	0:0	6	!
water	71:13	0:0	6	i
stmts	71:16	78:8	5	
water	71:16	0:0	6	{
water	72:12	0:0	6	src
op	72:16	0:0	6	=
water	72:18	0:0	6	copy
water	72:22	0:0	6	;
if	74:12	75:39	6	(codec -> init)
cond	74:16	74:23	7	codec -> init
water	74:16	0:0	8	codec
op	74:21	0:0	8	->
water	74:23	0:0	8	init
stmts	75:16	75:39	7	
water	75:16	0:0	8	err
op	75:20	0:0	8	=
call	75:22	75:38	8	codec->init
arg	75:34	75:38	9	copy
water	75:34	0:0	10	copy
water	75:39	0:0	8	;
call	77:12	77:53	6	update_context_from_thread
arg	77:39	77:44	7	avctx
water	77:39	0:0	8	avctx
arg	77:46	77:50	7	copy
water	77:46	0:0	8	copy
arg	77:52	77:53	7	1
water	77:52	0:0	8	1
water	77:54	0:0	6	;
water	78:8	0:0	6	}
else	78:10	89:8	4
stmts	78:15	89:8	5	
water	78:15	0:0	6	{
water	79:12	0:0	6	copy
op	79:16	0:0	6	->
water	79:18	0:0	6	priv_data
op	79:28	0:0	6	=
call	79:30	79:61	6	av_malloc
arg	79:40	79:61	7	codec->priv_data_size
water	79:40	0:0	8	codec
op	79:45	0:0	8	->
water	79:47	0:0	8	priv_data_size
water	79:62	0:0	6	;
if	80:12	83:12	6	(! copy -> priv_data)
cond	80:16	80:23	7	! copy -> priv_data
op	80:16	0:0	8	!
water	80:17	0:0	8	copy
op	80:21	0:0	8	->
water	80:23	0:0	8	priv_data
stmts	80:34	83:12	7	
water	80:34	0:0	8	{
water	81:16	0:0	8	err
op	81:20	0:0	8	=
call	81:22	81:36	8	AVERROR
arg	81:30	81:36	9	ENOMEM
water	81:30	0:0	10	ENOMEM
water	81:37	0:0	8	;
goto	82:16	82:26	8	error
water	82:21	0:0	9	error
water	83:12	0:0	8	}
call	84:12	84:73	6	memcpy
arg	84:19	84:34	7	copy->priv_data
water	84:19	0:0	8	copy
op	84:23	0:0	8	->
water	84:25	0:0	8	priv_data
arg	84:36	84:50	7	src->priv_data
water	84:36	0:0	8	src
op	84:39	0:0	8	->
water	84:41	0:0	8	priv_data
arg	84:52	84:73	7	codec->priv_data_size
water	84:52	0:0	8	codec
op	84:57	0:0	8	->
water	84:59	0:0	8	priv_data_size
water	84:74	0:0	6	;
water	85:12	0:0	6	copy
op	85:16	0:0	6	->
water	85:18	0:0	6	internal
op	85:26	0:0	6	->
water	85:28	0:0	6	is_copy
op	85:36	0:0	6	=
water	85:38	0:0	6	1
water	85:39	0:0	6	;
if	87:12	88:51	6	(codec -> init_thread_copy)
cond	87:16	87:23	7	codec -> init_thread_copy
water	87:16	0:0	8	codec
op	87:21	0:0	8	->
water	87:23	0:0	8	init_thread_copy
stmts	88:16	88:51	7	
water	88:16	0:0	8	err
op	88:20	0:0	8	=
call	88:22	88:50	8	codec->init_thread_copy
arg	88:46	88:50	9	copy
water	88:46	0:0	10	copy
water	88:51	0:0	8	;
water	89:8	0:0	6	}
if	91:8	91:27	4	(err)
cond	91:12	91:12	5	err
water	91:12	0:0	6	err
stmts	91:17	91:27	5	
goto	91:17	91:27	6	error
water	91:22	0:0	7	error
water	93:8	0:0	4	err
op	93:12	0:0	4	=
call	93:14	93:78	4	AVERROR
arg	93:22	93:78	5	pthread_create(&p->thread,NULL,frame_worker_thread,p)
call	93:22	93:77	6	pthread_create
arg	93:37	93:47	7	&p->thread
op	93:37	0:0	8	&
water	93:38	0:0	8	p
op	93:39	0:0	8	->
water	93:41	0:0	8	thread
arg	93:49	93:53	7	NULL
water	93:49	0:0	8	NULL
arg	93:55	93:74	7	frame_worker_thread
water	93:55	0:0	8	frame_worker_thread
arg	93:76	93:77	7	p
water	93:76	0:0	8	p
water	93:79	0:0	4	;
water	94:8	0:0	4	p
op	94:9	0:0	4	->
water	94:11	0:0	4	thread_init
op	94:22	0:0	4	=
op	94:24	0:0	4	!
water	94:25	0:0	4	err
water	94:28	0:0	4	;
if	95:8	96:22	4	(! p -> thread_init)
cond	95:11	95:15	5	! p -> thread_init
op	95:11	0:0	6	!
water	95:12	0:0	6	p
op	95:13	0:0	6	->
water	95:15	0:0	6	thread_init
stmts	96:12	96:22	5	
goto	96:12	96:22	6	error
water	96:17	0:0	7	error
water	97:4	0:0	4	}
return	99:4	99:12	2	0
water	99:11	0:0	3	0
label	101:0	101:5	2	error :
call	102:4	102:35	2	ff_frame_thread_free
arg	102:25	102:30	3	avctx
water	102:25	0:0	4	avctx
arg	102:32	102:35	3	i+1
water	102:32	0:0	4	i
op	102:33	0:0	4	+
water	102:34	0:0	4	1
water	102:36	0:0	2	;
return	104:4	104:14	2	err
water	104:11	0:0	3	err

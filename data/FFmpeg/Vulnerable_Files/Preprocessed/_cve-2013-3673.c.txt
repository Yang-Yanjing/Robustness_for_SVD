func	2:0	57:0	0	static int	gif_decode_frame
params	2:27	0:0	1	
param	2:28	2:49	2	AVCodecContext *	avctx
param	2:51	2:61	2	void *	data
param	2:63	2:77	2	int *	got_frame
param	2:79	2:94	2	AVPacket *	avpkt
stmnts	0:0	56:22	1	
decl	4:4	4:34	2	GifState	*s
op	4:16	0:0	2	=
water	4:18	0:0	2	avctx
op	4:23	0:0	2	->
water	4:25	0:0	2	priv_data
decl	5:4	5:27	2	AVFrame	*picture
op	5:21	0:0	2	=
water	5:23	0:0	2	data
decl	6:4	6:11	2	int	ret
call	8:4	8:53	2	bytestream2_init
arg	8:21	8:27	3	&s->gb
op	8:21	0:0	4	&
water	8:22	0:0	4	s
op	8:23	0:0	4	->
water	8:25	0:0	4	gb
arg	8:29	8:40	3	avpkt->data
water	8:29	0:0	4	avpkt
op	8:34	0:0	4	->
water	8:36	0:0	4	data
arg	8:42	8:53	3	avpkt->size
water	8:42	0:0	4	avpkt
op	8:47	0:0	4	->
water	8:49	0:0	4	size
water	8:54	0:0	2	;
water	10:4	0:0	2	s
op	10:5	0:0	2	->
water	10:7	0:0	2	picture
op	10:14	0:0	2	.
water	10:15	0:0	2	pts
op	10:28	0:0	2	=
water	10:30	0:0	2	avpkt
op	10:35	0:0	2	->
water	10:37	0:0	2	pts
water	10:40	0:0	2	;
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	picture
op	11:14	0:0	2	.
water	11:15	0:0	2	pkt_pts
op	11:28	0:0	2	=
water	11:30	0:0	2	avpkt
op	11:35	0:0	2	->
water	11:37	0:0	2	pts
water	11:40	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	picture
op	12:14	0:0	2	.
water	12:15	0:0	2	pkt_dts
op	12:28	0:0	2	=
water	12:30	0:0	2	avpkt
op	12:35	0:0	2	->
water	12:37	0:0	2	dts
water	12:40	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	picture
op	13:14	0:0	2	.
water	13:15	0:0	2	pkt_duration
op	13:28	0:0	2	=
water	13:30	0:0	2	avpkt
op	13:35	0:0	2	->
water	13:37	0:0	2	duration
water	13:45	0:0	2	;
if	15:4	18:4	2	(avpkt -> size >= 6)
cond	15:8	15:23	3	avpkt -> size >= 6
water	15:8	0:0	4	avpkt
op	15:13	0:0	4	->
water	15:15	0:0	4	size
op	15:20	0:0	4	>=
water	15:23	0:0	4	6
stmts	15:26	18:4	3	
water	15:26	0:0	4	{
water	16:8	0:0	4	s
op	16:9	0:0	4	->
water	16:11	0:0	4	keyframe
op	16:20	0:0	4	=
call	16:22	16:55	4	memcmp
arg	16:29	16:40	5	avpkt->data
water	16:29	0:0	6	avpkt
op	16:34	0:0	6	->
water	16:36	0:0	6	data
arg	16:42	16:52	5	gif87a_sig
water	16:42	0:0	6	gif87a_sig
arg	16:54	16:55	5	6
water	16:54	0:0	6	6
op	16:57	0:0	4	==
water	16:60	0:0	4	0
op	16:62	0:0	4	||
call	17:22	17:55	4	memcmp
arg	17:29	17:40	5	avpkt->data
water	17:29	0:0	6	avpkt
op	17:34	0:0	6	->
water	17:36	0:0	6	data
arg	17:42	17:52	5	gif89a_sig
water	17:42	0:0	6	gif89a_sig
arg	17:54	17:55	5	6
water	17:54	0:0	6	6
op	17:57	0:0	4	==
water	17:60	0:0	4	0
water	17:61	0:0	4	;
water	18:4	0:0	4	}
else	18:6	20:4	2
stmts	18:11	20:4	3	
water	18:11	0:0	4	{
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	keyframe
op	19:20	0:0	4	=
water	19:22	0:0	4	0
water	19:23	0:0	4	;
water	20:4	0:0	4	}
if	22:4	40:4	2	(s -> keyframe)
cond	22:8	22:11	3	s -> keyframe
water	22:8	0:0	4	s
op	22:9	0:0	4	->
water	22:11	0:0	4	keyframe
stmts	22:21	40:4	3	
water	22:21	0:0	4	{
if	23:8	24:22	4	(( ret =gif_read_header1 (s ) ) < 0)
cond	23:12	23:42	5	( ret =gif_read_header1 (s ) ) < 0
water	23:12	0:0	6	(
water	23:13	0:0	6	ret
op	23:17	0:0	6	=
call	23:19	23:37	6	gif_read_header1
arg	23:36	23:37	7	s
water	23:36	0:0	8	s
water	23:38	0:0	6	)
op	23:40	0:0	6	<
water	23:42	0:0	6	0
stmts	24:12	24:22	5	
return	24:12	24:22	6	ret
water	24:19	0:0	7	ret
if	26:8	27:22	4	(( ret =av_image_check_size (s -> screen_width ,s -> screen_height ,0 ,avctx ) ) < 0)
cond	26:12	26:87	5	( ret =av_image_check_size (s -> screen_width ,s -> screen_height ,0 ,avctx ) ) < 0
water	26:12	0:0	6	(
water	26:13	0:0	6	ret
op	26:17	0:0	6	=
call	26:19	26:82	6	av_image_check_size
arg	26:39	26:54	7	s->screen_width
water	26:39	0:0	8	s
op	26:40	0:0	8	->
water	26:42	0:0	8	screen_width
arg	26:56	26:72	7	s->screen_height
water	26:56	0:0	8	s
op	26:57	0:0	8	->
water	26:59	0:0	8	screen_height
arg	26:74	26:75	7	0
water	26:74	0:0	8	0
arg	26:77	26:82	7	avctx
water	26:77	0:0	8	avctx
water	26:83	0:0	6	)
op	26:85	0:0	6	<
water	26:87	0:0	6	0
stmts	27:12	27:22	5	
return	27:12	27:22	6	ret
water	27:19	0:0	7	ret
call	28:8	28:71	4	avcodec_set_dimensions
arg	28:31	28:36	5	avctx
water	28:31	0:0	6	avctx
arg	28:38	28:53	5	s->screen_width
water	28:38	0:0	6	s
op	28:39	0:0	6	->
water	28:41	0:0	6	screen_width
arg	28:55	28:71	5	s->screen_height
water	28:55	0:0	6	s
op	28:56	0:0	6	->
water	28:58	0:0	6	screen_height
water	28:72	0:0	4	;
if	30:8	31:53	4	(s -> picture . data [ 0 ])
cond	30:12	30:29	5	s -> picture . data [ 0 ]
water	30:12	0:0	6	s
op	30:13	0:0	6	->
water	30:15	0:0	6	picture
op	30:22	0:0	6	.
water	30:23	0:0	6	data
op	30:27	0:0	6	[
water	30:28	0:0	6	0
op	30:29	0:0	6	]
stmts	31:12	31:53	5	
call	31:12	31:52	6	avctx->release_buffer
arg	31:34	31:39	7	avctx
water	31:34	0:0	8	avctx
arg	31:41	31:52	7	&s->picture
op	31:41	0:0	8	&
water	31:42	0:0	8	s
op	31:43	0:0	8	->
water	31:45	0:0	8	picture
water	31:53	0:0	6	;
if	33:8	36:8	4	(( ret =ff_get_buffer (avctx ,& s -> picture ) ) < 0)
cond	33:12	33:56	5	( ret =ff_get_buffer (avctx ,& s -> picture ) ) < 0
water	33:12	0:0	6	(
water	33:13	0:0	6	ret
op	33:17	0:0	6	=
call	33:19	33:51	6	ff_get_buffer
arg	33:33	33:38	7	avctx
water	33:33	0:0	8	avctx
arg	33:40	33:51	7	&s->picture
op	33:40	0:0	8	&
water	33:41	0:0	8	s
op	33:42	0:0	8	->
water	33:44	0:0	8	picture
water	33:52	0:0	6	)
op	33:54	0:0	6	<
water	33:56	0:0	6	0
stmts	33:59	36:8	5	
water	33:59	0:0	6	{
call	34:12	34:63	6	av_log
arg	34:19	34:24	7	avctx
water	34:19	0:0	8	avctx
arg	34:26	34:38	7	AV_LOG_ERROR
water	34:26	0:0	8	AV_LOG_ERROR
arg	34:40	34:63	7	"get_buffer() failed\n"
water	34:40	0:0	8	"get_buffer() failed\n"
water	34:64	0:0	6	;
return	35:12	35:22	6	ret
water	35:19	0:0	7	ret
water	36:8	0:0	6	}
water	38:8	0:0	4	s
op	38:9	0:0	4	->
water	38:11	0:0	4	picture
op	38:18	0:0	4	.
water	38:19	0:0	4	pict_type
op	38:29	0:0	4	=
water	38:31	0:0	4	AV_PICTURE_TYPE_I
water	38:48	0:0	4	;
water	39:8	0:0	4	s
op	39:9	0:0	4	->
water	39:11	0:0	4	picture
op	39:18	0:0	4	.
water	39:19	0:0	4	key_frame
op	39:29	0:0	4	=
water	39:31	0:0	4	1
water	39:32	0:0	4	;
water	40:4	0:0	4	}
else	40:6	48:4	2
stmts	40:11	48:4	3	
water	40:11	0:0	4	{
if	41:8	44:8	4	(( ret =avctx -> reget_buffer (avctx ,& s -> picture ) ) < 0)
cond	41:12	41:62	5	( ret =avctx -> reget_buffer (avctx ,& s -> picture ) ) < 0
water	41:12	0:0	6	(
water	41:13	0:0	6	ret
op	41:17	0:0	6	=
call	41:19	41:57	6	avctx->reget_buffer
arg	41:39	41:44	7	avctx
water	41:39	0:0	8	avctx
arg	41:46	41:57	7	&s->picture
op	41:46	0:0	8	&
water	41:47	0:0	8	s
op	41:48	0:0	8	->
water	41:50	0:0	8	picture
water	41:58	0:0	6	)
op	41:60	0:0	6	<
water	41:62	0:0	6	0
stmts	41:65	44:8	5	
water	41:65	0:0	6	{
call	42:12	42:65	6	av_log
arg	42:19	42:24	7	avctx
water	42:19	0:0	8	avctx
arg	42:26	42:38	7	AV_LOG_ERROR
water	42:26	0:0	8	AV_LOG_ERROR
arg	42:40	42:65	7	"reget_buffer() failed\n"
water	42:40	0:0	8	"reget_buffer() failed\n"
water	42:66	0:0	6	;
return	43:12	43:22	6	ret
water	43:19	0:0	7	ret
water	44:8	0:0	6	}
water	46:8	0:0	4	s
op	46:9	0:0	4	->
water	46:11	0:0	4	picture
op	46:18	0:0	4	.
water	46:19	0:0	4	pict_type
op	46:29	0:0	4	=
water	46:31	0:0	4	AV_PICTURE_TYPE_P
water	46:48	0:0	4	;
water	47:8	0:0	4	s
op	47:9	0:0	4	->
water	47:11	0:0	4	picture
op	47:18	0:0	4	.
water	47:19	0:0	4	key_frame
op	47:29	0:0	4	=
water	47:31	0:0	4	0
water	47:32	0:0	4	;
water	48:4	0:0	4	}
water	50:4	0:0	2	ret
op	50:8	0:0	2	=
call	50:10	50:43	2	gif_parse_next_image
arg	50:31	50:32	3	s
water	50:31	0:0	4	s
arg	50:34	50:43	3	got_frame
water	50:34	0:0	4	got_frame
water	50:44	0:0	2	;
if	51:4	52:18	2	(ret < 0)
cond	51:8	51:14	3	ret < 0
water	51:8	0:0	4	ret
op	51:12	0:0	4	<
water	51:14	0:0	4	0
stmts	52:8	52:18	3	
return	52:8	52:18	4	ret
water	52:15	0:0	5	ret
else	53:4	54:29	2
stmts	53:9	54:29	3	
if	53:9	54:29	4	(* got_frame)
cond	53:13	53:14	5	* got_frame
op	53:13	0:0	6	*
water	53:14	0:0	6	got_frame
stmts	54:8	54:29	5	
op	54:8	0:0	6	*
water	54:9	0:0	6	picture
op	54:17	0:0	6	=
water	54:19	0:0	6	s
op	54:20	0:0	6	->
water	54:22	0:0	6	picture
water	54:29	0:0	6	;
return	56:4	56:22	2	avpkt->size
water	56:11	0:0	3	avpkt
op	56:16	0:0	3	->
water	56:18	0:0	3	size

func	1:0	21:0	0	static int	mpeg4_decode_gop_header
params	1:34	0:0	1	
param	1:35	1:52	2	MpegEncContext *	s
param	1:54	1:71	2	GetBitContext *	gb
stmnts	0:0	20:12	1	
decl	3:4	3:31	2	int	hours
water	3:13	0:0	2	,
decl	3:4	3:31	2	int	minutes
water	3:22	0:0	2	,
decl	3:4	3:31	2	int	seconds
if	5:4	8:4	2	(!show_bits (gb ,23 ))
cond	5:8	5:25	3	!show_bits (gb ,23 )
op	5:8	0:0	4	!
call	5:9	5:25	4	show_bits
arg	5:19	5:21	5	gb
water	5:19	0:0	6	gb
arg	5:23	5:25	5	23
water	5:23	0:0	6	23
stmts	5:28	8:4	3	
water	5:28	0:0	4	{
call	6:8	6:63	4	av_log
arg	6:15	6:23	5	s->avctx
water	6:15	0:0	6	s
op	6:16	0:0	6	->
water	6:18	0:0	6	avctx
arg	6:25	6:39	5	AV_LOG_WARNING
water	6:25	0:0	6	AV_LOG_WARNING
arg	6:41	6:63	5	"GOP header invalid\n"
water	6:41	0:0	6	"GOP header invalid\n"
water	6:64	0:0	4	;
return	7:8	7:34	4	AVERROR_INVALIDDATA
water	7:15	0:0	5	AVERROR_INVALIDDATA
water	8:4	0:0	4	}
water	10:4	0:0	2	hours
op	10:12	0:0	2	=
call	10:14	10:28	2	get_bits
arg	10:23	10:25	3	gb
water	10:23	0:0	4	gb
arg	10:27	10:28	3	5
water	10:27	0:0	4	5
water	10:29	0:0	2	;
water	11:4	0:0	2	minutes
op	11:12	0:0	2	=
call	11:14	11:28	2	get_bits
arg	11:23	11:25	3	gb
water	11:23	0:0	4	gb
arg	11:27	11:28	3	6
water	11:27	0:0	4	6
water	11:29	0:0	2	;
call	12:4	12:46	2	check_marker
arg	12:17	12:25	3	s->avctx
water	12:17	0:0	4	s
op	12:18	0:0	4	->
water	12:20	0:0	4	avctx
arg	12:27	12:29	3	gb
water	12:27	0:0	4	gb
arg	12:31	12:46	3	"in gop_header"
water	12:31	0:0	4	"in gop_header"
water	12:47	0:0	2	;
water	13:4	0:0	2	seconds
op	13:12	0:0	2	=
call	13:14	13:28	2	get_bits
arg	13:23	13:25	3	gb
water	13:23	0:0	4	gb
arg	13:27	13:28	3	6
water	13:27	0:0	4	6
water	13:29	0:0	2	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	time_base
op	15:17	0:0	2	=
water	15:19	0:0	2	seconds
op	15:27	0:0	2	+
water	15:29	0:0	2	60
op	15:31	0:0	2	*
water	15:32	0:0	2	(
water	15:33	0:0	2	minutes
op	15:41	0:0	2	+
water	15:43	0:0	2	60
op	15:45	0:0	2	*
water	15:46	0:0	2	hours
water	15:51	0:0	2	)
water	15:52	0:0	2	;
call	17:4	17:17	2	skip_bits1
arg	17:15	17:17	3	gb
water	17:15	0:0	4	gb
water	17:18	0:0	2	;
call	18:4	18:17	2	skip_bits1
arg	18:15	18:17	3	gb
water	18:15	0:0	4	gb
water	18:18	0:0	2	;
return	20:4	20:12	2	0
water	20:11	0:0	3	0

func	2:0	53:0	0	static uint32_t	color_string_to_rgba
params	2:36	0:0	1	
param	2:37	2:50	2	const char *	p
param	2:52	2:59	2	int	len
stmnts	0:0	52:14	1	
decl	4:4	4:29	2	uint32_t	ret
op	4:17	0:0	2	=
water	4:19	0:0	2	0
water	4:20	0:0	2	xFF000000
decl	5:4	5:27	2	const ColorEntry	*entry
decl	6:4	6:24	2	char	color_name[100]
if	8:4	37:4	2	(* p == '#')
cond	8:8	8:14	3	* p == '#'
op	8:8	0:0	4	*
water	8:9	0:0	4	p
op	8:11	0:0	4	==
water	8:14	0:0	4	'#'
stmts	8:19	37:4	3	
water	8:19	0:0	4	{
water	9:8	0:0	4	p
op	9:9	0:0	4	++
water	9:11	0:0	4	;
water	10:8	0:0	4	len
op	10:11	0:0	4	--
water	10:13	0:0	4	;
if	11:8	15:8	4	(len == 3)
cond	11:12	11:19	5	len == 3
water	11:12	0:0	6	len
op	11:16	0:0	6	==
water	11:19	0:0	6	3
stmts	11:22	15:8	5	
water	11:22	0:0	6	{
water	12:12	0:0	6	ret
op	12:16	0:0	6	|=
water	12:19	0:0	6	(
call	12:20	12:43	6	hex_char_to_number
arg	12:39	12:43	7	p[2]
water	12:39	0:0	8	p
op	12:40	0:0	8	[
water	12:41	0:0	8	2
op	12:42	0:0	8	]
op	12:45	0:0	6	<<
water	12:49	0:0	6	4
water	12:50	0:0	6	)
op	12:52	0:0	6	|
water	13:19	0:0	6	(
call	13:20	13:43	6	hex_char_to_number
arg	13:39	13:43	7	p[1]
water	13:39	0:0	8	p
op	13:40	0:0	8	[
water	13:41	0:0	8	1
op	13:42	0:0	8	]
op	13:45	0:0	6	<<
water	13:48	0:0	6	12
water	13:50	0:0	6	)
op	13:52	0:0	6	|
water	14:19	0:0	6	(
call	14:20	14:43	6	hex_char_to_number
arg	14:39	14:43	7	p[0]
water	14:39	0:0	8	p
op	14:40	0:0	8	[
water	14:41	0:0	8	0
op	14:42	0:0	8	]
op	14:45	0:0	6	<<
water	14:48	0:0	6	20
water	14:50	0:0	6	)
water	14:51	0:0	6	;
water	15:8	0:0	6	}
else	15:10	20:8	4
stmts	15:15	20:8	5	
if	15:15	20:8	6	(len == 4)
cond	15:19	15:26	7	len == 4
water	15:19	0:0	8	len
op	15:23	0:0	8	==
water	15:26	0:0	8	4
stmts	15:29	20:8	7	
water	15:29	0:0	8	{
water	16:12	0:0	8	ret
op	16:17	0:0	8	=
water	16:19	0:0	8	(
call	16:20	16:43	8	hex_char_to_number
arg	16:39	16:43	9	p[3]
water	16:39	0:0	10	p
op	16:40	0:0	10	[
water	16:41	0:0	10	3
op	16:42	0:0	10	]
op	16:45	0:0	8	<<
water	16:49	0:0	8	4
water	16:50	0:0	8	)
op	16:52	0:0	8	|
water	17:19	0:0	8	(
call	17:20	17:43	8	hex_char_to_number
arg	17:39	17:43	9	p[2]
water	17:39	0:0	10	p
op	17:40	0:0	10	[
water	17:41	0:0	10	2
op	17:42	0:0	10	]
op	17:45	0:0	8	<<
water	17:48	0:0	8	12
water	17:50	0:0	8	)
op	17:52	0:0	8	|
water	18:19	0:0	8	(
call	18:20	18:43	8	hex_char_to_number
arg	18:39	18:43	9	p[1]
water	18:39	0:0	10	p
op	18:40	0:0	10	[
water	18:41	0:0	10	1
op	18:42	0:0	10	]
op	18:45	0:0	8	<<
water	18:48	0:0	8	20
water	18:50	0:0	8	)
op	18:52	0:0	8	|
water	19:19	0:0	8	(
call	19:20	19:43	8	hex_char_to_number
arg	19:39	19:43	9	p[0]
water	19:39	0:0	10	p
op	19:40	0:0	10	[
water	19:41	0:0	10	0
op	19:42	0:0	10	]
op	19:45	0:0	8	<<
water	19:48	0:0	8	28
water	19:50	0:0	8	)
water	19:51	0:0	8	;
water	20:8	0:0	8	}
else	20:10	27:8	4
stmts	20:15	27:8	5	
if	20:15	27:8	6	(len == 6)
cond	20:19	20:26	7	len == 6
water	20:19	0:0	8	len
op	20:23	0:0	8	==
water	20:26	0:0	8	6
stmts	20:29	27:8	7	
water	20:29	0:0	8	{
water	21:12	0:0	8	ret
op	21:16	0:0	8	|=
call	21:20	21:43	8	hex_char_to_number
arg	21:39	21:43	9	p[5]
water	21:39	0:0	10	p
op	21:40	0:0	10	[
water	21:41	0:0	10	5
op	21:42	0:0	10	]
op	21:52	0:0	8	|
water	22:19	0:0	8	(
call	22:20	22:43	8	hex_char_to_number
arg	22:39	22:43	9	p[4]
water	22:39	0:0	10	p
op	22:40	0:0	10	[
water	22:41	0:0	10	4
op	22:42	0:0	10	]
op	22:45	0:0	8	<<
water	22:49	0:0	8	4
water	22:50	0:0	8	)
op	22:52	0:0	8	|
water	23:19	0:0	8	(
call	23:20	23:43	8	hex_char_to_number
arg	23:39	23:43	9	p[3]
water	23:39	0:0	10	p
op	23:40	0:0	10	[
water	23:41	0:0	10	3
op	23:42	0:0	10	]
op	23:45	0:0	8	<<
water	23:49	0:0	8	8
water	23:50	0:0	8	)
op	23:52	0:0	8	|
water	24:19	0:0	8	(
call	24:20	24:43	8	hex_char_to_number
arg	24:39	24:43	9	p[2]
water	24:39	0:0	10	p
op	24:40	0:0	10	[
water	24:41	0:0	10	2
op	24:42	0:0	10	]
op	24:45	0:0	8	<<
water	24:48	0:0	8	12
water	24:50	0:0	8	)
op	24:52	0:0	8	|
water	25:19	0:0	8	(
call	25:20	25:43	8	hex_char_to_number
arg	25:39	25:43	9	p[1]
water	25:39	0:0	10	p
op	25:40	0:0	10	[
water	25:41	0:0	10	1
op	25:42	0:0	10	]
op	25:45	0:0	8	<<
water	25:48	0:0	8	16
water	25:50	0:0	8	)
op	25:52	0:0	8	|
water	26:19	0:0	8	(
call	26:20	26:43	8	hex_char_to_number
arg	26:39	26:43	9	p[0]
water	26:39	0:0	10	p
op	26:40	0:0	10	[
water	26:41	0:0	10	0
op	26:42	0:0	10	]
op	26:45	0:0	8	<<
water	26:48	0:0	8	20
water	26:50	0:0	8	)
water	26:51	0:0	8	;
water	27:8	0:0	8	}
else	27:10	36:8	4
stmts	27:15	36:8	5	
if	27:15	36:8	6	(len == 8)
cond	27:19	27:26	7	len == 8
water	27:19	0:0	8	len
op	27:23	0:0	8	==
water	27:26	0:0	8	8
stmts	27:29	36:8	7	
water	27:29	0:0	8	{
water	28:12	0:0	8	ret
op	28:17	0:0	8	=
call	28:20	28:43	8	hex_char_to_number
arg	28:39	28:43	9	p[7]
water	28:39	0:0	10	p
op	28:40	0:0	10	[
water	28:41	0:0	10	7
op	28:42	0:0	10	]
op	28:52	0:0	8	|
water	29:19	0:0	8	(
call	29:20	29:43	8	hex_char_to_number
arg	29:39	29:43	9	p[6]
water	29:39	0:0	10	p
op	29:40	0:0	10	[
water	29:41	0:0	10	6
op	29:42	0:0	10	]
op	29:45	0:0	8	<<
water	29:49	0:0	8	4
water	29:50	0:0	8	)
op	29:52	0:0	8	|
water	30:19	0:0	8	(
call	30:20	30:43	8	hex_char_to_number
arg	30:39	30:43	9	p[5]
water	30:39	0:0	10	p
op	30:40	0:0	10	[
water	30:41	0:0	10	5
op	30:42	0:0	10	]
op	30:45	0:0	8	<<
water	30:49	0:0	8	8
water	30:50	0:0	8	)
op	30:52	0:0	8	|
water	31:19	0:0	8	(
call	31:20	31:43	8	hex_char_to_number
arg	31:39	31:43	9	p[4]
water	31:39	0:0	10	p
op	31:40	0:0	10	[
water	31:41	0:0	10	4
op	31:42	0:0	10	]
op	31:45	0:0	8	<<
water	31:48	0:0	8	12
water	31:50	0:0	8	)
op	31:52	0:0	8	|
water	32:19	0:0	8	(
call	32:20	32:43	8	hex_char_to_number
arg	32:39	32:43	9	p[3]
water	32:39	0:0	10	p
op	32:40	0:0	10	[
water	32:41	0:0	10	3
op	32:42	0:0	10	]
op	32:45	0:0	8	<<
water	32:48	0:0	8	16
water	32:50	0:0	8	)
op	32:52	0:0	8	|
water	33:19	0:0	8	(
call	33:20	33:43	8	hex_char_to_number
arg	33:39	33:43	9	p[2]
water	33:39	0:0	10	p
op	33:40	0:0	10	[
water	33:41	0:0	10	2
op	33:42	0:0	10	]
op	33:45	0:0	8	<<
water	33:48	0:0	8	20
water	33:50	0:0	8	)
op	33:52	0:0	8	|
water	34:19	0:0	8	(
call	34:20	34:43	8	hex_char_to_number
arg	34:39	34:43	9	p[1]
water	34:39	0:0	10	p
op	34:40	0:0	10	[
water	34:41	0:0	10	1
op	34:42	0:0	10	]
op	34:45	0:0	8	<<
water	34:48	0:0	8	24
water	34:50	0:0	8	)
op	34:52	0:0	8	|
water	35:19	0:0	8	(
call	35:20	35:43	8	hex_char_to_number
arg	35:39	35:43	9	p[0]
water	35:39	0:0	10	p
op	35:40	0:0	10	[
water	35:41	0:0	10	0
op	35:42	0:0	10	]
op	35:45	0:0	8	<<
water	35:48	0:0	8	28
water	35:50	0:0	8	)
water	35:51	0:0	8	;
water	36:8	0:0	8	}
water	37:4	0:0	4	}
else	37:6	51:4	2
stmts	37:11	51:4	3	
water	37:11	0:0	4	{
call	38:8	38:34	4	strncpy
arg	38:16	38:26	5	color_name
water	38:16	0:0	6	color_name
arg	38:28	38:29	5	p
water	38:28	0:0	6	p
arg	38:31	38:34	5	len
water	38:31	0:0	6	len
water	38:35	0:0	4	;
water	39:8	0:0	4	color_name
op	39:18	0:0	4	[
water	39:19	0:0	4	len
op	39:22	0:0	4	]
op	39:24	0:0	4	=
water	39:26	0:0	4	'\0'
water	39:30	0:0	4	;
water	41:8	0:0	4	entry
op	41:14	0:0	4	=
call	41:16	45:43	4	bsearch
arg	41:24	41:34	5	color_name
water	41:24	0:0	6	color_name
arg	42:24	42:35	5	color_table
water	42:24	0:0	6	color_table
arg	43:24	43:51	5	FF_ARRAY_ELEMS(color_table)
call	43:24	43:50	6	FF_ARRAY_ELEMS
arg	43:39	43:50	7	color_table
water	43:39	0:0	8	color_table
arg	44:24	44:42	5	sizeof(ColorEntry)
op	44:24	0:0	6	sizeof
water	44:30	0:0	6	(
water	44:31	0:0	6	ColorEntry
water	44:41	0:0	6	)
arg	45:24	45:43	5	color_table_compare
water	45:24	0:0	6	color_table_compare
water	45:44	0:0	4	;
if	47:8	48:22	4	(! entry)
cond	47:12	47:13	5	! entry
op	47:12	0:0	6	!
water	47:13	0:0	6	entry
stmts	48:12	48:22	5	
return	48:12	48:22	6	ret
water	48:19	0:0	7	ret
water	50:8	0:0	4	ret
op	50:12	0:0	4	=
water	50:14	0:0	4	entry
op	50:19	0:0	4	->
water	50:21	0:0	4	rgb_color
water	50:30	0:0	4	;
water	51:4	0:0	4	}
return	52:4	52:14	2	ret
water	52:11	0:0	3	ret

func	1:0	84:0	0	static int	dnxhd_find_frame_end
params	1:31	0:0	1	
param	1:32	1:56	2	DNXHDParserContext *	dctx
param	2:32	2:50	2	const uint8_t *	buf
param	2:52	2:64	2	int	buf_size
stmnts	0:0	83:24	1	
decl	4:4	4:32	2	ParseContext	*pc
op	4:21	0:0	2	=
op	4:23	0:0	2	&
water	4:24	0:0	2	dctx
op	4:28	0:0	2	->
water	4:30	0:0	2	pc
decl	5:4	5:32	2	uint64_t	state
op	5:19	0:0	2	=
water	5:21	0:0	2	pc
op	5:23	0:0	2	->
water	5:25	0:0	2	state64
decl	6:4	6:41	2	int	pic_found
op	6:18	0:0	2	=
water	6:20	0:0	2	pc
op	6:22	0:0	2	->
water	6:24	0:0	2	frame_start_found
decl	7:4	7:13	2	int	i
op	7:10	0:0	2	=
water	7:12	0:0	2	0
decl	8:4	8:37	2	int	interlaced
op	8:19	0:0	2	=
water	8:21	0:0	2	dctx
op	8:25	0:0	2	->
water	8:27	0:0	2	interlaced
decl	9:4	9:35	2	int	cur_field
op	9:18	0:0	2	=
water	9:20	0:0	2	dctx
op	9:24	0:0	2	->
water	9:26	0:0	2	cur_field
if	11:4	24:4	2	(! pic_found)
cond	11:8	11:9	3	! pic_found
op	11:8	0:0	4	!
water	11:9	0:0	4	pic_found
stmts	11:20	24:4	3	
water	11:20	0:0	4	{
for	12:8	23:8	4	(i = 0 ;i < buf_size;i ++)
forinit	12:13	12:18	5	i = 0 ;
water	12:13	0:0	6	i
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	i < buf_size
water	12:20	0:0	6	i
op	12:22	0:0	6	<
water	12:24	0:0	6	buf_size
forexpr	12:34	12:35	5	i ++
water	12:34	0:0	6	i
op	12:35	0:0	6	++
stmts	12:39	23:8	5	
water	12:39	0:0	6	{
water	13:12	0:0	6	state
op	13:18	0:0	6	=
water	13:20	0:0	6	(
water	13:21	0:0	6	state
op	13:27	0:0	6	<<
water	13:30	0:0	6	8
water	13:31	0:0	6	)
op	13:33	0:0	6	|
water	13:35	0:0	6	buf
op	13:38	0:0	6	[
water	13:39	0:0	6	i
op	13:40	0:0	6	]
water	13:41	0:0	6	;
if	14:12	22:12	6	(ff_dnxhd_check_header_prefix (state & 0 xffffffffff00LL ) != 0)
cond	14:16	14:74	7	ff_dnxhd_check_header_prefix (state & 0 xffffffffff00LL ) != 0
call	14:16	14:69	8	ff_dnxhd_check_header_prefix
arg	14:45	14:69	9	state&0xffffffffff00LL
water	14:45	0:0	10	state
op	14:51	0:0	10	&
water	14:53	0:0	10	0
water	14:54	0:0	10	xffffffffff00LL
op	14:71	0:0	8	!=
water	14:74	0:0	8	0
stmts	14:77	22:12	7	
water	14:77	0:0	8	{
water	15:16	0:0	8	i
op	15:17	0:0	8	++
water	15:19	0:0	8	;
water	16:16	0:0	8	pic_found
op	16:26	0:0	8	=
water	16:28	0:0	8	1
water	16:29	0:0	8	;
water	17:16	0:0	8	interlaced
op	17:27	0:0	8	=
water	17:29	0:0	8	(
water	17:30	0:0	8	state
op	17:35	0:0	8	&
water	17:36	0:0	8	2
water	17:37	0:0	8	)
op	17:38	0:0	8	>>
water	17:40	0:0	8	1
water	17:41	0:0	8	;
water	18:16	0:0	8	cur_field
op	18:26	0:0	8	=
water	18:28	0:0	8	state
op	18:33	0:0	8	&
water	18:34	0:0	8	1
water	18:35	0:0	8	;
water	19:16	0:0	8	dctx
op	19:20	0:0	8	->
water	19:22	0:0	8	cur_byte
op	19:31	0:0	8	=
water	19:33	0:0	8	0
water	19:34	0:0	8	;
water	20:16	0:0	8	dctx
op	20:20	0:0	8	->
water	20:22	0:0	8	remaining
op	20:32	0:0	8	=
water	20:34	0:0	8	0
water	20:35	0:0	8	;
break	21:16	21:21	8	
water	22:12	0:0	8	}
water	23:8	0:0	6	}
water	24:4	0:0	4	}
if	26:4	64:4	2	(pic_found && ! dctx -> remaining)
cond	26:8	26:28	3	pic_found && ! dctx -> remaining
water	26:8	0:0	4	pic_found
op	26:18	0:0	4	&&
op	26:21	0:0	4	!
water	26:22	0:0	4	dctx
op	26:26	0:0	4	->
water	26:28	0:0	4	remaining
stmts	26:39	64:4	3	
water	26:39	0:0	4	{
if	27:8	28:20	4	(! buf_size)
cond	27:12	27:13	5	! buf_size
op	27:12	0:0	6	!
water	27:13	0:0	6	buf_size
stmts	28:12	28:20	5	
return	28:12	28:20	6	0
water	28:19	0:0	7	0
for	29:8	63:8	4	(;i < buf_size;i ++)
forinit	29:13	29:13	5	;
water	29:13	0:0	6	;
cond	29:15	29:19	5	i < buf_size
water	29:15	0:0	6	i
op	29:17	0:0	6	<
water	29:19	0:0	6	buf_size
forexpr	29:29	29:30	5	i ++
water	29:29	0:0	6	i
op	29:30	0:0	6	++
stmts	29:34	63:8	5	
water	29:34	0:0	6	{
water	30:12	0:0	6	dctx
op	30:16	0:0	6	->
water	30:18	0:0	6	cur_byte
op	30:26	0:0	6	++
water	30:28	0:0	6	;
water	31:12	0:0	6	state
op	31:18	0:0	6	=
water	31:20	0:0	6	(
water	31:21	0:0	6	state
op	31:27	0:0	6	<<
water	31:30	0:0	6	8
water	31:31	0:0	6	)
op	31:33	0:0	6	|
water	31:35	0:0	6	buf
op	31:38	0:0	6	[
water	31:39	0:0	6	i
op	31:40	0:0	6	]
water	31:41	0:0	6	;
if	33:12	35:12	6	(dctx -> cur_byte == 24)
cond	33:16	33:34	7	dctx -> cur_byte == 24
water	33:16	0:0	8	dctx
op	33:20	0:0	8	->
water	33:22	0:0	8	cur_byte
op	33:31	0:0	8	==
water	33:34	0:0	8	24
stmts	33:38	35:12	7	
water	33:38	0:0	8	{
water	34:16	0:0	8	dctx
op	34:20	0:0	8	->
water	34:22	0:0	8	h
op	34:24	0:0	8	=
water	34:26	0:0	8	(
water	34:27	0:0	8	state
op	34:33	0:0	8	>>
water	34:36	0:0	8	32
water	34:38	0:0	8	)
op	34:40	0:0	8	&
water	34:42	0:0	8	0
water	34:43	0:0	8	xFFFF
water	34:48	0:0	8	;
water	35:12	0:0	8	}
else	35:14	37:12	6
stmts	35:19	37:12	7	
if	35:19	37:12	8	(dctx -> cur_byte == 26)
cond	35:23	35:41	9	dctx -> cur_byte == 26
water	35:23	0:0	10	dctx
op	35:27	0:0	10	->
water	35:29	0:0	10	cur_byte
op	35:38	0:0	10	==
water	35:41	0:0	10	26
stmts	35:45	37:12	9	
water	35:45	0:0	10	{
water	36:16	0:0	10	dctx
op	36:20	0:0	10	->
water	36:22	0:0	10	w
op	36:24	0:0	10	=
water	36:26	0:0	10	(
water	36:27	0:0	10	state
op	36:33	0:0	10	>>
water	36:36	0:0	10	32
water	36:38	0:0	10	)
op	36:40	0:0	10	&
water	36:42	0:0	10	0
water	36:43	0:0	10	xFFFF
water	36:48	0:0	10	;
water	37:12	0:0	10	}
else	37:14	62:12	6
stmts	37:19	62:12	7	
if	37:19	62:12	8	(dctx -> cur_byte == 42)
cond	37:23	37:41	9	dctx -> cur_byte == 42
water	37:23	0:0	10	dctx
op	37:27	0:0	10	->
water	37:29	0:0	10	cur_byte
op	37:38	0:0	10	==
water	37:41	0:0	10	42
stmts	37:45	62:12	9	
water	37:45	0:0	10	{
decl	38:16	38:52	10	int	cid
op	38:24	0:0	10	=
water	38:26	0:0	10	(
water	38:27	0:0	10	state
op	38:33	0:0	10	>>
water	38:36	0:0	10	32
water	38:38	0:0	10	)
op	38:40	0:0	10	&
water	38:42	0:0	10	0
water	38:43	0:0	10	xFFFFFFFF
if	40:16	41:28	10	(cid <= 0)
cond	40:20	40:27	11	cid <= 0
water	40:20	0:0	12	cid
op	40:24	0:0	12	<=
water	40:27	0:0	12	0
stmts	41:20	41:28	11	
continue	41:20	41:28	12	
water	43:16	0:0	10	dctx
op	43:20	0:0	10	->
water	43:22	0:0	10	remaining
op	43:32	0:0	10	=
call	43:34	43:65	10	avpriv_dnxhd_get_frame_size
arg	43:62	43:65	11	cid
water	43:62	0:0	12	cid
water	43:66	0:0	10	;
if	44:16	48:16	10	(dctx -> remaining <= 0)
cond	44:20	44:39	11	dctx -> remaining <= 0
water	44:20	0:0	12	dctx
op	44:24	0:0	12	->
water	44:26	0:0	12	remaining
op	44:36	0:0	12	<=
water	44:39	0:0	12	0
stmts	44:42	48:16	11	
water	44:42	0:0	12	{
water	45:20	0:0	12	dctx
op	45:24	0:0	12	->
water	45:26	0:0	12	remaining
op	45:36	0:0	12	=
call	45:38	45:83	12	dnxhd_get_hr_frame_size
arg	45:62	45:65	13	cid
water	45:62	0:0	14	cid
arg	45:67	45:74	13	dctx->w
water	45:67	0:0	14	dctx
op	45:71	0:0	14	->
water	45:73	0:0	14	w
arg	45:76	45:83	13	dctx->h
water	45:76	0:0	14	dctx
op	45:80	0:0	14	->
water	45:82	0:0	14	h
water	45:84	0:0	12	;
if	46:20	47:46	12	(dctx -> remaining <= 0)
cond	46:24	46:43	13	dctx -> remaining <= 0
water	46:24	0:0	14	dctx
op	46:28	0:0	14	->
water	46:30	0:0	14	remaining
op	46:40	0:0	14	<=
water	46:43	0:0	14	0
stmts	47:24	47:46	13	
return	47:24	47:46	14	dctx->remaining
water	47:31	0:0	15	dctx
op	47:35	0:0	15	->
water	47:37	0:0	15	remaining
water	48:16	0:0	12	}
if	49:16	59:16	10	(buf_size - i >= dctx -> remaining && ( ! dctx -> interlaced || dctx -> cur_field ))
cond	49:20	49:92	11	buf_size - i >= dctx -> remaining && ( ! dctx -> interlaced || dctx -> cur_field )
water	49:20	0:0	12	buf_size
op	49:29	0:0	12	-
water	49:31	0:0	12	i
op	49:33	0:0	12	>=
water	49:36	0:0	12	dctx
op	49:40	0:0	12	->
water	49:42	0:0	12	remaining
op	49:52	0:0	12	&&
water	49:55	0:0	12	(
op	49:56	0:0	12	!
water	49:57	0:0	12	dctx
op	49:61	0:0	12	->
water	49:63	0:0	12	interlaced
op	49:74	0:0	12	||
water	49:77	0:0	12	dctx
op	49:81	0:0	12	->
water	49:83	0:0	12	cur_field
water	49:92	0:0	12	)
stmts	49:95	59:16	11	
water	49:95	0:0	12	{
decl	50:20	50:51	12	int	remaining
op	50:34	0:0	12	=
water	50:36	0:0	12	dctx
op	50:40	0:0	12	->
water	50:42	0:0	12	remaining
water	52:20	0:0	12	pc
op	52:22	0:0	12	->
water	52:24	0:0	12	frame_start_found
op	52:42	0:0	12	=
water	52:44	0:0	12	0
water	52:45	0:0	12	;
water	53:20	0:0	12	pc
op	53:22	0:0	12	->
water	53:24	0:0	12	state64
op	53:32	0:0	12	=
op	53:34	0:0	12	-
water	53:35	0:0	12	1
water	53:36	0:0	12	;
water	54:20	0:0	12	dctx
op	54:24	0:0	12	->
water	54:26	0:0	12	interlaced
op	54:37	0:0	12	=
water	54:39	0:0	12	interlaced
water	54:49	0:0	12	;
water	55:20	0:0	12	dctx
op	55:24	0:0	12	->
water	55:26	0:0	12	cur_field
op	55:36	0:0	12	=
water	55:38	0:0	12	0
water	55:39	0:0	12	;
water	56:20	0:0	12	dctx
op	56:24	0:0	12	->
water	56:26	0:0	12	cur_byte
op	56:35	0:0	12	=
water	56:37	0:0	12	0
water	56:38	0:0	12	;
water	57:20	0:0	12	dctx
op	57:24	0:0	12	->
water	57:26	0:0	12	remaining
op	57:36	0:0	12	=
water	57:38	0:0	12	0
water	57:39	0:0	12	;
return	58:20	58:36	12	remaining
water	58:27	0:0	13	remaining
water	59:16	0:0	12	}
else	59:18	61:16	10
stmts	59:23	61:16	11	
water	59:23	0:0	12	{
water	60:20	0:0	12	dctx
op	60:24	0:0	12	->
water	60:26	0:0	12	remaining
op	60:36	0:0	12	-=
water	60:39	0:0	12	buf_size
water	60:47	0:0	12	;
water	61:16	0:0	12	}
water	62:12	0:0	10	}
water	63:8	0:0	6	}
water	64:4	0:0	4	}
else	64:6	78:4	2
stmts	64:11	78:4	3	
if	64:11	78:4	4	(pic_found)
cond	64:15	64:15	5	pic_found
water	64:15	0:0	6	pic_found
stmts	64:26	78:4	5	
water	64:26	0:0	6	{
if	65:8	67:8	6	(dctx -> remaining > buf_size)
cond	65:12	65:30	7	dctx -> remaining > buf_size
water	65:12	0:0	8	dctx
op	65:16	0:0	8	->
water	65:18	0:0	8	remaining
op	65:28	0:0	8	>
water	65:30	0:0	8	buf_size
stmts	65:40	67:8	7	
water	65:40	0:0	8	{
water	66:12	0:0	8	dctx
op	66:16	0:0	8	->
water	66:18	0:0	8	remaining
op	66:28	0:0	8	-=
water	66:31	0:0	8	buf_size
water	66:39	0:0	8	;
water	67:8	0:0	8	}
else	67:10	77:8	6
stmts	67:15	77:8	7	
water	67:15	0:0	8	{
decl	68:12	68:43	8	int	remaining
op	68:26	0:0	8	=
water	68:28	0:0	8	dctx
op	68:32	0:0	8	->
water	68:34	0:0	8	remaining
water	70:12	0:0	8	pc
op	70:14	0:0	8	->
water	70:16	0:0	8	frame_start_found
op	70:34	0:0	8	=
water	70:36	0:0	8	0
water	70:37	0:0	8	;
water	71:12	0:0	8	pc
op	71:14	0:0	8	->
water	71:16	0:0	8	state64
op	71:24	0:0	8	=
op	71:26	0:0	8	-
water	71:27	0:0	8	1
water	71:28	0:0	8	;
water	72:12	0:0	8	dctx
op	72:16	0:0	8	->
water	72:18	0:0	8	interlaced
op	72:29	0:0	8	=
water	72:31	0:0	8	interlaced
water	72:41	0:0	8	;
water	73:12	0:0	8	dctx
op	73:16	0:0	8	->
water	73:18	0:0	8	cur_field
op	73:28	0:0	8	=
water	73:30	0:0	8	0
water	73:31	0:0	8	;
water	74:12	0:0	8	dctx
op	74:16	0:0	8	->
water	74:18	0:0	8	cur_byte
op	74:27	0:0	8	=
water	74:29	0:0	8	0
water	74:30	0:0	8	;
water	75:12	0:0	8	dctx
op	75:16	0:0	8	->
water	75:18	0:0	8	remaining
op	75:28	0:0	8	=
water	75:30	0:0	8	0
water	75:31	0:0	8	;
return	76:12	76:28	8	remaining
water	76:19	0:0	9	remaining
water	77:8	0:0	8	}
water	78:4	0:0	6	}
water	79:4	0:0	2	pc
op	79:6	0:0	2	->
water	79:8	0:0	2	frame_start_found
op	79:26	0:0	2	=
water	79:28	0:0	2	pic_found
water	79:37	0:0	2	;
water	80:4	0:0	2	pc
op	80:6	0:0	2	->
water	80:8	0:0	2	state64
op	80:16	0:0	2	=
water	80:18	0:0	2	state
water	80:23	0:0	2	;
water	81:4	0:0	2	dctx
op	81:8	0:0	2	->
water	81:10	0:0	2	interlaced
op	81:21	0:0	2	=
water	81:23	0:0	2	interlaced
water	81:33	0:0	2	;
water	82:4	0:0	2	dctx
op	82:8	0:0	2	->
water	82:10	0:0	2	cur_field
op	82:20	0:0	2	=
water	82:22	0:0	2	cur_field
water	82:31	0:0	2	;
return	83:4	83:24	2	END_NOT_FOUND
water	83:11	0:0	3	END_NOT_FOUND

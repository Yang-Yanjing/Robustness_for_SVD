func	2:15	15:0	0	int	alac_decode_close
params	2:36	0:0	1	
param	2:37	2:58	2	AVCodecContext *	avctx
stmnts	0:0	14:12	1	
decl	4:4	4:40	2	ALACContext	*alac
op	4:22	0:0	2	=
water	4:24	0:0	2	avctx
op	4:29	0:0	2	->
water	4:31	0:0	2	priv_data
decl	6:4	6:10	2	int	ch
for	7:4	12:4	2	(ch = 0 ;ch <FFMIN (alac -> channels ,2 );ch ++)
forinit	7:9	7:15	3	ch = 0 ;
water	7:9	0:0	4	ch
op	7:12	0:0	4	=
water	7:14	0:0	4	0
water	7:15	0:0	4	;
cond	7:17	7:45	3	ch <FFMIN (alac -> channels ,2 )
water	7:17	0:0	4	ch
op	7:20	0:0	4	<
call	7:22	7:45	4	FFMIN
arg	7:28	7:42	5	alac->channels
water	7:28	0:0	6	alac
op	7:32	0:0	6	->
water	7:34	0:0	6	channels
arg	7:44	7:45	5	2
water	7:44	0:0	6	2
forexpr	7:48	7:50	3	ch ++
water	7:48	0:0	4	ch
op	7:50	0:0	4	++
stmts	7:54	12:4	3	
water	7:54	0:0	4	{
call	8:8	8:48	4	av_freep
arg	8:17	8:48	5	&alac->predict_error_buffer[ch]
op	8:17	0:0	6	&
water	8:18	0:0	6	alac
op	8:22	0:0	6	->
water	8:24	0:0	6	predict_error_buffer
op	8:44	0:0	6	[
water	8:45	0:0	6	ch
op	8:47	0:0	6	]
water	8:49	0:0	4	;
if	9:8	10:54	4	(! alac -> direct_output)
cond	9:12	9:19	5	! alac -> direct_output
op	9:12	0:0	6	!
water	9:13	0:0	6	alac
op	9:17	0:0	6	->
water	9:19	0:0	6	direct_output
stmts	10:12	10:54	5	
call	10:12	10:53	6	av_freep
arg	10:21	10:53	7	&alac->output_samples_buffer[ch]
op	10:21	0:0	8	&
water	10:22	0:0	8	alac
op	10:26	0:0	8	->
water	10:28	0:0	8	output_samples_buffer
op	10:49	0:0	8	[
water	10:50	0:0	8	ch
op	10:52	0:0	8	]
water	10:54	0:0	6	;
call	11:8	11:45	4	av_freep
arg	11:17	11:45	5	&alac->extra_bits_buffer[ch]
op	11:17	0:0	6	&
water	11:18	0:0	6	alac
op	11:22	0:0	6	->
water	11:24	0:0	6	extra_bits_buffer
op	11:41	0:0	6	[
water	11:42	0:0	6	ch
op	11:44	0:0	6	]
water	11:46	0:0	4	;
water	12:4	0:0	4	}
return	14:4	14:12	2	0
water	14:11	0:0	3	0

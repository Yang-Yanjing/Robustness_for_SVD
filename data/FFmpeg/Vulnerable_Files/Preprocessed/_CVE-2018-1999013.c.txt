func	1:0	40:0	0	static int	rm_read_multi
params	1:24	0:0	1	
param	1:25	1:43	2	AVFormatContext *	s
param	1:45	1:60	2	AVIOContext *	pb
param	2:25	2:37	2	AVStream *	st
param	2:39	2:49	2	char *	mime
stmnts	0:0	39:12	1	
decl	4:4	4:41	2	int	number_of_streams
op	4:26	0:0	2	=
call	4:28	4:40	3	avio_rb16
arg	4:38	4:40	4	pb
water	4:38	0:0	5	pb
decl	5:4	5:22	2	int	number_of_mdpr
decl	6:4	6:14	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:14	2	int	ret
water	7:4	0:0	2	unsigned
water	7:13	0:0	2	size2
water	7:18	0:0	2	;
for	8:4	9:21	2	(i = 0 ;i < number_of_streams;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:18	3	i < number_of_streams
water	8:16	0:0	4	i
op	8:17	0:0	4	<
water	8:18	0:0	4	number_of_streams
forexpr	8:37	8:38	3	i ++
water	8:37	0:0	4	i
op	8:38	0:0	4	++
stmts	9:8	9:21	3	
call	9:8	9:20	4	avio_rb16
arg	9:18	9:20	5	pb
water	9:18	0:0	6	pb
water	9:21	0:0	4	;
water	10:4	0:0	2	number_of_mdpr
op	10:19	0:0	2	=
call	10:21	10:33	2	avio_rb16
arg	10:31	10:33	3	pb
water	10:31	0:0	4	pb
water	10:34	0:0	2	;
if	11:4	13:4	2	(number_of_mdpr != 1)
cond	11:8	11:26	3	number_of_mdpr != 1
water	11:8	0:0	4	number_of_mdpr
op	11:23	0:0	4	!=
water	11:26	0:0	4	1
stmts	11:29	13:4	3	
water	11:29	0:0	4	{
call	12:8	12:79	4	avpriv_request_sample
arg	12:30	12:31	5	s
water	12:30	0:0	6	s
arg	12:33	12:63	5	"MLTI with multiple (%d) MDPR"
water	12:33	0:0	6	"MLTI with multiple (%d) MDPR"
arg	12:65	12:79	5	number_of_mdpr
water	12:65	0:0	6	number_of_mdpr
water	12:80	0:0	4	;
water	13:4	0:0	4	}
for	14:4	38:4	2	(i = 0 ;i < number_of_mdpr;i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:20	3	i < number_of_mdpr
water	14:16	0:0	4	i
op	14:18	0:0	4	<
water	14:20	0:0	4	number_of_mdpr
forexpr	14:36	14:37	3	i ++
water	14:36	0:0	4	i
op	14:37	0:0	4	++
stmts	14:41	38:4	3	
water	14:41	0:0	4	{
decl	15:8	15:21	4	AVStream	*st2
if	16:8	30:8	4	(i > 0)
cond	16:12	16:16	5	i > 0
water	16:12	0:0	6	i
op	16:14	0:0	6	>
water	16:16	0:0	6	0
stmts	16:19	30:8	5	
water	16:19	0:0	6	{
water	17:12	0:0	6	st2
op	17:16	0:0	6	=
call	17:18	17:45	6	avformat_new_stream
arg	17:38	17:39	7	s
water	17:38	0:0	8	s
arg	17:41	17:45	7	NULL
water	17:41	0:0	8	NULL
water	17:46	0:0	6	;
if	18:12	21:12	6	(! st2)
cond	18:16	18:17	7	! st2
op	18:16	0:0	8	!
water	18:17	0:0	8	st2
stmts	18:22	21:12	7	
water	18:22	0:0	8	{
water	19:16	0:0	8	ret
op	19:20	0:0	8	=
call	19:22	19:36	8	AVERROR
arg	19:30	19:36	9	ENOMEM
water	19:30	0:0	10	ENOMEM
water	19:37	0:0	8	;
return	20:16	20:26	8	ret
water	20:23	0:0	9	ret
water	21:12	0:0	8	}
water	22:12	0:0	6	st2
op	22:15	0:0	6	->
water	22:17	0:0	6	id
op	22:20	0:0	6	=
water	22:22	0:0	6	st
op	22:24	0:0	6	->
water	22:26	0:0	6	id
op	22:29	0:0	6	+
water	22:31	0:0	6	(
water	22:32	0:0	6	i
op	22:33	0:0	6	<<
water	22:35	0:0	6	16
water	22:37	0:0	6	)
water	22:38	0:0	6	;
water	23:12	0:0	6	st2
op	23:15	0:0	6	->
water	23:17	0:0	6	codecpar
op	23:25	0:0	6	->
water	23:27	0:0	6	bit_rate
op	23:36	0:0	6	=
water	23:38	0:0	6	st
op	23:40	0:0	6	->
water	23:42	0:0	6	codecpar
op	23:50	0:0	6	->
water	23:52	0:0	6	bit_rate
water	23:60	0:0	6	;
water	24:12	0:0	6	st2
op	24:15	0:0	6	->
water	24:17	0:0	6	start_time
op	24:28	0:0	6	=
water	24:30	0:0	6	st
op	24:32	0:0	6	->
water	24:34	0:0	6	start_time
water	24:44	0:0	6	;
water	25:12	0:0	6	st2
op	25:15	0:0	6	->
water	25:17	0:0	6	duration
op	25:28	0:0	6	=
water	25:30	0:0	6	st
op	25:32	0:0	6	->
water	25:34	0:0	6	duration
water	25:42	0:0	6	;
water	26:12	0:0	6	st2
op	26:15	0:0	6	->
water	26:17	0:0	6	codecpar
op	26:25	0:0	6	->
water	26:27	0:0	6	codec_type
op	26:38	0:0	6	=
water	26:40	0:0	6	AVMEDIA_TYPE_DATA
water	26:57	0:0	6	;
water	27:12	0:0	6	st2
op	27:15	0:0	6	->
water	27:17	0:0	6	priv_data
op	27:27	0:0	6	=
call	27:29	27:50	6	ff_rm_alloc_rmstream
water	27:51	0:0	6	;
if	28:12	29:38	6	(! st2 -> priv_data)
cond	28:16	28:22	7	! st2 -> priv_data
op	28:16	0:0	8	!
water	28:17	0:0	8	st2
op	28:20	0:0	8	->
water	28:22	0:0	8	priv_data
stmts	29:16	29:38	7	
return	29:16	29:38	8	AVERROR(ENOMEM)
call	29:23	29:37	9	AVERROR
arg	29:31	29:37	10	ENOMEM
water	29:31	0:0	11	ENOMEM
water	30:8	0:0	6	}
else	30:10	31:20	4
stmts	31:12	31:20	5	
water	31:12	0:0	6	st2
op	31:16	0:0	6	=
water	31:18	0:0	6	st
water	31:20	0:0	6	;
water	33:8	0:0	4	size2
op	33:14	0:0	4	=
call	33:16	33:28	4	avio_rb32
arg	33:26	33:28	5	pb
water	33:26	0:0	6	pb
water	33:29	0:0	4	;
water	34:8	0:0	4	ret
op	34:12	0:0	4	=
call	34:14	35:51	4	ff_rm_read_mdpr_codecdata
arg	34:40	34:41	5	s
water	34:40	0:0	6	s
arg	34:43	34:48	5	s->pb
water	34:43	0:0	6	s
op	34:44	0:0	6	->
water	34:46	0:0	6	pb
arg	34:50	34:53	5	st2
water	34:50	0:0	6	st2
arg	34:55	34:69	5	st2->priv_data
water	34:55	0:0	6	st2
op	34:58	0:0	6	->
water	34:60	0:0	6	priv_data
arg	35:40	35:45	5	size2
water	35:40	0:0	6	size2
arg	35:47	35:51	5	mime
water	35:47	0:0	6	mime
water	35:52	0:0	4	;
if	36:8	37:22	4	(ret < 0)
cond	36:12	36:18	5	ret < 0
water	36:12	0:0	6	ret
op	36:16	0:0	6	<
water	36:18	0:0	6	0
stmts	37:12	37:22	5	
return	37:12	37:22	6	ret
water	37:19	0:0	7	ret
water	38:4	0:0	4	}
return	39:4	39:12	2	0
water	39:11	0:0	3	0

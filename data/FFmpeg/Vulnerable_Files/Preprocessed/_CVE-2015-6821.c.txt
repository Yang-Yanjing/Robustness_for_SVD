func	2:8	109:0	0	int	ff_mpv_common_init
params	2:30	0:0	1	
param	2:31	2:48	2	MpegEncContext *	s
stmnts	0:0	108:13	1	
decl	4:4	4:9	2	int	i
decl	5:4	7:46	2	int	nb_slices
op	5:18	0:0	2	=
water	5:20	0:0	2	(
water	5:21	0:0	2	HAVE_THREADS
op	5:34	0:0	2	&&
water	6:21	0:0	2	s
op	6:22	0:0	2	->
water	6:24	0:0	2	avctx
op	6:29	0:0	2	->
water	6:31	0:0	2	active_thread_type
op	6:50	0:0	2	&
water	6:52	0:0	2	FF_THREAD_SLICE
water	6:67	0:0	2	)
water	6:69	0:0	2	?
water	7:20	0:0	2	s
op	7:21	0:0	2	->
water	7:23	0:0	2	avctx
op	7:28	0:0	2	->
water	7:30	0:0	2	thread_count
water	7:43	0:0	2	:
water	7:45	0:0	2	1
if	9:4	10:36	2	(s -> encoding && s -> avctx -> slices)
cond	9:8	9:33	3	s -> encoding && s -> avctx -> slices
water	9:8	0:0	4	s
op	9:9	0:0	4	->
water	9:11	0:0	4	encoding
op	9:20	0:0	4	&&
water	9:23	0:0	4	s
op	9:24	0:0	4	->
water	9:26	0:0	4	avctx
op	9:31	0:0	4	->
water	9:33	0:0	4	slices
stmts	10:8	10:36	3	
water	10:8	0:0	4	nb_slices
op	10:18	0:0	4	=
water	10:20	0:0	4	s
op	10:21	0:0	4	->
water	10:23	0:0	4	avctx
op	10:28	0:0	4	->
water	10:30	0:0	4	slices
water	10:36	0:0	4	;
if	12:4	13:48	2	(s -> codec_id == AV_CODEC_ID_MPEG2VIDEO && ! s -> progressive_sequence)
cond	12:8	12:53	3	s -> codec_id == AV_CODEC_ID_MPEG2VIDEO && ! s -> progressive_sequence
water	12:8	0:0	4	s
op	12:9	0:0	4	->
water	12:11	0:0	4	codec_id
op	12:20	0:0	4	==
water	12:23	0:0	4	AV_CODEC_ID_MPEG2VIDEO
op	12:46	0:0	4	&&
op	12:49	0:0	4	!
water	12:50	0:0	4	s
op	12:51	0:0	4	->
water	12:53	0:0	4	progressive_sequence
stmts	13:8	13:48	3	
water	13:8	0:0	4	s
op	13:9	0:0	4	->
water	13:11	0:0	4	mb_height
op	13:21	0:0	4	=
water	13:23	0:0	4	(
water	13:24	0:0	4	s
op	13:25	0:0	4	->
water	13:27	0:0	4	height
op	13:34	0:0	4	+
water	13:36	0:0	4	31
water	13:38	0:0	4	)
op	13:40	0:0	4	/
water	13:42	0:0	4	32
op	13:45	0:0	4	*
water	13:47	0:0	4	2
water	13:48	0:0	4	;
else	14:4	15:44	2
stmts	15:8	15:44	3	
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	mb_height
op	15:21	0:0	4	=
water	15:23	0:0	4	(
water	15:24	0:0	4	s
op	15:25	0:0	4	->
water	15:27	0:0	4	height
op	15:34	0:0	4	+
water	15:36	0:0	4	15
water	15:38	0:0	4	)
op	15:40	0:0	4	/
water	15:42	0:0	4	16
water	15:44	0:0	4	;
if	17:4	21:4	2	(s -> avctx -> pix_fmt == AV_PIX_FMT_NONE)
cond	17:8	17:29	3	s -> avctx -> pix_fmt == AV_PIX_FMT_NONE
water	17:8	0:0	4	s
op	17:9	0:0	4	->
water	17:11	0:0	4	avctx
op	17:16	0:0	4	->
water	17:18	0:0	4	pix_fmt
op	17:26	0:0	4	==
water	17:29	0:0	4	AV_PIX_FMT_NONE
stmts	17:46	21:4	3	
water	17:46	0:0	4	{
call	18:8	19:64	4	av_log
arg	18:15	18:23	5	s->avctx
water	18:15	0:0	6	s
op	18:16	0:0	6	->
water	18:18	0:0	6	avctx
arg	18:25	18:37	5	AV_LOG_ERROR
water	18:25	0:0	6	AV_LOG_ERROR
arg	19:15	19:64	5	"decoding to AV_PIX_FMT_NONE is not supported.\n"
water	19:15	0:0	6	"decoding to AV_PIX_FMT_NONE is not supported.\n"
water	19:65	0:0	4	;
return	20:8	20:17	4	-1
op	20:15	0:0	5	-
water	20:16	0:0	5	1
water	21:4	0:0	4	}
if	23:4	32:4	2	(nb_slices > MAX_THREADS || ( nb_slices > s -> mb_height && s -> mb_height ))
cond	23:8	23:76	3	nb_slices > MAX_THREADS || ( nb_slices > s -> mb_height && s -> mb_height )
water	23:8	0:0	4	nb_slices
op	23:18	0:0	4	>
water	23:20	0:0	4	MAX_THREADS
op	23:32	0:0	4	||
water	23:35	0:0	4	(
water	23:36	0:0	4	nb_slices
op	23:46	0:0	4	>
water	23:48	0:0	4	s
op	23:49	0:0	4	->
water	23:51	0:0	4	mb_height
op	23:61	0:0	4	&&
water	23:64	0:0	4	s
op	23:65	0:0	4	->
water	23:67	0:0	4	mb_height
water	23:76	0:0	4	)
stmts	23:79	32:4	3	
water	23:79	0:0	4	{
decl	24:8	24:22	4	int	max_slices
if	25:8	26:57	4	(s -> mb_height)
cond	25:12	25:15	5	s -> mb_height
water	25:12	0:0	6	s
op	25:13	0:0	6	->
water	25:15	0:0	6	mb_height
stmts	26:12	26:57	5	
water	26:12	0:0	6	max_slices
op	26:23	0:0	6	=
call	26:25	26:56	6	FFMIN
arg	26:31	26:42	7	MAX_THREADS
water	26:31	0:0	8	MAX_THREADS
arg	26:44	26:56	7	s->mb_height
water	26:44	0:0	8	s
op	26:45	0:0	8	->
water	26:47	0:0	8	mb_height
water	26:57	0:0	6	;
else	27:8	28:36	4
stmts	28:12	28:36	5	
water	28:12	0:0	6	max_slices
op	28:23	0:0	6	=
water	28:25	0:0	6	MAX_THREADS
water	28:36	0:0	6	;
call	29:8	30:57	4	av_log
arg	29:15	29:23	5	s->avctx
water	29:15	0:0	6	s
op	29:16	0:0	6	->
water	29:18	0:0	6	avctx
arg	29:25	29:39	5	AV_LOG_WARNING
water	29:25	0:0	6	AV_LOG_WARNING
arg	29:41	30:34	5	"too many threads/slices (%d),"" reducing to %d\n"
water	29:41	0:0	6	"too many threads/slices (%d),"
water	30:15	0:0	6	" reducing to %d\n"
arg	30:36	30:45	5	nb_slices
water	30:36	0:0	6	nb_slices
arg	30:47	30:57	5	max_slices
water	30:47	0:0	6	max_slices
water	30:58	0:0	4	;
water	31:8	0:0	4	nb_slices
op	31:18	0:0	4	=
water	31:20	0:0	4	max_slices
water	31:30	0:0	4	;
water	32:4	0:0	4	}
if	34:4	36:17	2	(( s -> width || s -> height ) &&av_image_check_size (s -> width ,s -> height ,0 ,s -> avctx ))
cond	34:8	35:60	3	( s -> width || s -> height ) &&av_image_check_size (s -> width ,s -> height ,0 ,s -> avctx )
water	34:8	0:0	4	(
water	34:9	0:0	4	s
op	34:10	0:0	4	->
water	34:12	0:0	4	width
op	34:18	0:0	4	||
water	34:21	0:0	4	s
op	34:22	0:0	4	->
water	34:24	0:0	4	height
water	34:30	0:0	4	)
op	34:32	0:0	4	&&
call	35:8	35:60	4	av_image_check_size
arg	35:28	35:36	5	s->width
water	35:28	0:0	6	s
op	35:29	0:0	6	->
water	35:31	0:0	6	width
arg	35:38	35:47	5	s->height
water	35:38	0:0	6	s
op	35:39	0:0	6	->
water	35:41	0:0	6	height
arg	35:49	35:50	5	0
water	35:49	0:0	6	0
arg	35:52	35:60	5	s->avctx
water	35:52	0:0	6	s
op	35:53	0:0	6	->
water	35:55	0:0	6	avctx
stmts	36:8	36:17	3	
return	36:8	36:17	4	-1
op	36:15	0:0	5	-
water	36:16	0:0	5	1
call	38:4	38:14	2	dct_init
arg	38:13	38:14	3	s
water	38:13	0:0	4	s
water	38:15	0:0	2	;
water	40:4	0:0	2	s
op	40:5	0:0	2	->
water	40:7	0:0	2	flags
op	40:14	0:0	2	=
water	40:16	0:0	2	s
op	40:17	0:0	2	->
water	40:19	0:0	2	avctx
op	40:24	0:0	2	->
water	40:26	0:0	2	flags
water	40:31	0:0	2	;
water	41:4	0:0	2	s
op	41:5	0:0	2	->
water	41:7	0:0	2	flags2
op	41:14	0:0	2	=
water	41:16	0:0	2	s
op	41:17	0:0	2	->
water	41:19	0:0	2	avctx
op	41:24	0:0	2	->
water	41:26	0:0	2	flags2
water	41:32	0:0	2	;
call	44:4	46:52	2	avcodec_get_chroma_sub_sample
arg	44:34	44:51	3	s->avctx->pix_fmt
water	44:34	0:0	4	s
op	44:35	0:0	4	->
water	44:37	0:0	4	avctx
op	44:42	0:0	4	->
water	44:44	0:0	4	pix_fmt
arg	45:34	45:52	3	&s->chroma_x_shift
op	45:34	0:0	4	&
water	45:35	0:0	4	s
op	45:36	0:0	4	->
water	45:38	0:0	4	chroma_x_shift
arg	46:34	46:52	3	&s->chroma_y_shift
op	46:34	0:0	4	&
water	46:35	0:0	4	s
op	46:36	0:0	4	->
water	46:38	0:0	4	chroma_y_shift
water	46:53	0:0	2	;
call	49:4	50:63	2	FF_ALLOCZ_OR_GOTO
arg	49:22	49:30	3	s->avctx
water	49:22	0:0	4	s
op	49:23	0:0	4	->
water	49:25	0:0	4	avctx
arg	49:32	49:42	3	s->picture
water	49:32	0:0	4	s
op	49:33	0:0	4	->
water	49:35	0:0	4	picture
arg	50:22	50:57	3	MAX_PICTURE_COUNT*sizeof(Picture)
water	50:22	0:0	4	MAX_PICTURE_COUNT
op	50:40	0:0	4	*
op	50:42	0:0	4	sizeof
water	50:48	0:0	4	(
water	50:49	0:0	4	Picture
water	50:56	0:0	4	)
arg	50:59	50:63	3	fail
water	50:59	0:0	4	fail
water	50:64	0:0	2	;
for	51:4	55:4	2	(i = 0 ;i < MAX_PICTURE_COUNT;i ++)
forinit	51:9	51:14	3	i = 0 ;
water	51:9	0:0	4	i
op	51:11	0:0	4	=
water	51:13	0:0	4	0
water	51:14	0:0	4	;
cond	51:16	51:20	3	i < MAX_PICTURE_COUNT
water	51:16	0:0	4	i
op	51:18	0:0	4	<
water	51:20	0:0	4	MAX_PICTURE_COUNT
forexpr	51:39	51:40	3	i ++
water	51:39	0:0	4	i
op	51:40	0:0	4	++
stmts	51:44	55:4	3	
water	51:44	0:0	4	{
water	52:8	0:0	4	s
op	52:9	0:0	4	->
water	52:11	0:0	4	picture
op	52:18	0:0	4	[
water	52:19	0:0	4	i
op	52:20	0:0	4	]
op	52:21	0:0	4	.
water	52:22	0:0	4	f
op	52:24	0:0	4	=
call	52:26	52:41	4	av_frame_alloc
water	52:42	0:0	4	;
if	53:8	54:21	4	(! s -> picture [ i ] . f)
cond	53:12	53:27	5	! s -> picture [ i ] . f
op	53:12	0:0	6	!
water	53:13	0:0	6	s
op	53:14	0:0	6	->
water	53:16	0:0	6	picture
op	53:23	0:0	6	[
water	53:24	0:0	6	i
op	53:25	0:0	6	]
op	53:26	0:0	6	.
water	53:27	0:0	6	f
stmts	54:12	54:21	5	
goto	54:12	54:21	6	fail
water	54:17	0:0	7	fail
water	55:4	0:0	4	}
call	56:4	56:55	2	memset
arg	56:11	56:27	3	&s->next_picture
op	56:11	0:0	4	&
water	56:12	0:0	4	s
op	56:13	0:0	4	->
water	56:15	0:0	4	next_picture
arg	56:29	56:30	3	0
water	56:29	0:0	4	0
arg	56:32	56:55	3	sizeof(s->next_picture)
op	56:32	0:0	4	sizeof
water	56:38	0:0	4	(
water	56:39	0:0	4	s
op	56:40	0:0	4	->
water	56:42	0:0	4	next_picture
water	56:54	0:0	4	)
water	56:56	0:0	2	;
call	57:4	57:55	2	memset
arg	57:11	57:27	3	&s->last_picture
op	57:11	0:0	4	&
water	57:12	0:0	4	s
op	57:13	0:0	4	->
water	57:15	0:0	4	last_picture
arg	57:29	57:30	3	0
water	57:29	0:0	4	0
arg	57:32	57:55	3	sizeof(s->last_picture)
op	57:32	0:0	4	sizeof
water	57:38	0:0	4	(
water	57:39	0:0	4	s
op	57:40	0:0	4	->
water	57:42	0:0	4	last_picture
water	57:54	0:0	4	)
water	57:56	0:0	2	;
call	58:4	58:61	2	memset
arg	58:11	58:30	3	&s->current_picture
op	58:11	0:0	4	&
water	58:12	0:0	4	s
op	58:13	0:0	4	->
water	58:15	0:0	4	current_picture
arg	58:32	58:33	3	0
water	58:32	0:0	4	0
arg	58:35	58:61	3	sizeof(s->current_picture)
op	58:35	0:0	4	sizeof
water	58:41	0:0	4	(
water	58:42	0:0	4	s
op	58:43	0:0	4	->
water	58:45	0:0	4	current_picture
water	58:60	0:0	4	)
water	58:62	0:0	2	;
call	59:4	59:53	2	memset
arg	59:11	59:26	3	&s->new_picture
op	59:11	0:0	4	&
water	59:12	0:0	4	s
op	59:13	0:0	4	->
water	59:15	0:0	4	new_picture
arg	59:28	59:29	3	0
water	59:28	0:0	4	0
arg	59:31	59:53	3	sizeof(s->new_picture)
op	59:31	0:0	4	sizeof
water	59:37	0:0	4	(
water	59:38	0:0	4	s
op	59:39	0:0	4	->
water	59:41	0:0	4	new_picture
water	59:52	0:0	4	)
water	59:54	0:0	2	;
water	60:4	0:0	2	s
op	60:5	0:0	2	->
water	60:7	0:0	2	next_picture
op	60:19	0:0	2	.
water	60:20	0:0	2	f
op	60:22	0:0	2	=
call	60:24	60:39	2	av_frame_alloc
water	60:40	0:0	2	;
if	61:4	62:17	2	(! s -> next_picture . f)
cond	61:8	61:25	3	! s -> next_picture . f
op	61:8	0:0	4	!
water	61:9	0:0	4	s
op	61:10	0:0	4	->
water	61:12	0:0	4	next_picture
op	61:24	0:0	4	.
water	61:25	0:0	4	f
stmts	62:8	62:17	3	
goto	62:8	62:17	4	fail
water	62:13	0:0	5	fail
water	63:4	0:0	2	s
op	63:5	0:0	2	->
water	63:7	0:0	2	last_picture
op	63:19	0:0	2	.
water	63:20	0:0	2	f
op	63:22	0:0	2	=
call	63:24	63:39	2	av_frame_alloc
water	63:40	0:0	2	;
if	64:4	65:17	2	(! s -> last_picture . f)
cond	64:8	64:25	3	! s -> last_picture . f
op	64:8	0:0	4	!
water	64:9	0:0	4	s
op	64:10	0:0	4	->
water	64:12	0:0	4	last_picture
op	64:24	0:0	4	.
water	64:25	0:0	4	f
stmts	65:8	65:17	3	
goto	65:8	65:17	4	fail
water	65:13	0:0	5	fail
water	66:4	0:0	2	s
op	66:5	0:0	2	->
water	66:7	0:0	2	current_picture
op	66:22	0:0	2	.
water	66:23	0:0	2	f
op	66:25	0:0	2	=
call	66:27	66:42	2	av_frame_alloc
water	66:43	0:0	2	;
if	67:4	68:17	2	(! s -> current_picture . f)
cond	67:8	67:28	3	! s -> current_picture . f
op	67:8	0:0	4	!
water	67:9	0:0	4	s
op	67:10	0:0	4	->
water	67:12	0:0	4	current_picture
op	67:27	0:0	4	.
water	67:28	0:0	4	f
stmts	68:8	68:17	3	
goto	68:8	68:17	4	fail
water	68:13	0:0	5	fail
water	69:4	0:0	2	s
op	69:5	0:0	2	->
water	69:7	0:0	2	new_picture
op	69:18	0:0	2	.
water	69:19	0:0	2	f
op	69:21	0:0	2	=
call	69:23	69:38	2	av_frame_alloc
water	69:39	0:0	2	;
if	70:4	71:17	2	(! s -> new_picture . f)
cond	70:8	70:24	3	! s -> new_picture . f
op	70:8	0:0	4	!
water	70:9	0:0	4	s
op	70:10	0:0	4	->
water	70:12	0:0	4	new_picture
op	70:23	0:0	4	.
water	70:24	0:0	4	f
stmts	71:8	71:17	3	
goto	71:8	71:17	4	fail
water	71:13	0:0	5	fail
if	73:8	74:21	2	(init_context_frame (s ))
cond	73:12	73:32	3	init_context_frame (s )
call	73:12	73:32	4	init_context_frame
arg	73:31	73:32	5	s
water	73:31	0:0	6	s
stmts	74:12	74:21	3	
goto	74:12	74:21	4	fail
water	74:17	0:0	5	fail
water	76:8	0:0	2	s
op	76:9	0:0	2	->
water	76:11	0:0	2	parse_context
op	76:24	0:0	2	.
water	76:25	0:0	2	state
op	76:31	0:0	2	=
op	76:33	0:0	2	-
water	76:34	0:0	2	1
water	76:35	0:0	2	;
water	78:8	0:0	2	s
op	78:9	0:0	2	->
water	78:11	0:0	2	context_initialized
op	78:31	0:0	2	=
water	78:33	0:0	2	1
water	78:34	0:0	2	;
water	79:8	0:0	2	s
op	79:9	0:0	2	->
water	79:11	0:0	2	thread_context
op	79:25	0:0	2	[
water	79:26	0:0	2	0
op	79:27	0:0	2	]
op	79:31	0:0	2	=
water	79:33	0:0	2	s
water	79:34	0:0	2	;
if	82:8	96:8	2	(nb_slices > 1)
cond	82:12	82:24	3	nb_slices > 1
water	82:12	0:0	4	nb_slices
op	82:22	0:0	4	>
water	82:24	0:0	4	1
stmts	82:27	96:8	3	
water	82:27	0:0	4	{
for	83:12	86:12	4	(i = 1 ;i < nb_slices;i ++)
forinit	83:17	83:22	5	i = 1 ;
water	83:17	0:0	6	i
op	83:19	0:0	6	=
water	83:21	0:0	6	1
water	83:22	0:0	6	;
cond	83:24	83:28	5	i < nb_slices
water	83:24	0:0	6	i
op	83:26	0:0	6	<
water	83:28	0:0	6	nb_slices
forexpr	83:39	83:40	5	i ++
water	83:39	0:0	6	i
op	83:40	0:0	6	++
stmts	83:44	86:12	5	
water	83:44	0:0	6	{
water	84:16	0:0	6	s
op	84:17	0:0	6	->
water	84:19	0:0	6	thread_context
op	84:33	0:0	6	[
water	84:34	0:0	6	i
op	84:35	0:0	6	]
op	84:37	0:0	6	=
call	84:39	84:71	6	av_malloc
arg	84:49	84:71	7	sizeof(MpegEncContext)
op	84:49	0:0	8	sizeof
water	84:55	0:0	8	(
water	84:56	0:0	8	MpegEncContext
water	84:70	0:0	8	)
water	84:72	0:0	6	;
call	85:16	85:70	6	memcpy
arg	85:23	85:43	7	s->thread_context[i]
water	85:23	0:0	8	s
op	85:24	0:0	8	->
water	85:26	0:0	8	thread_context
op	85:40	0:0	8	[
water	85:41	0:0	8	i
op	85:42	0:0	8	]
arg	85:45	85:46	7	s
water	85:45	0:0	8	s
arg	85:48	85:70	7	sizeof(MpegEncContext)
op	85:48	0:0	8	sizeof
water	85:54	0:0	8	(
water	85:55	0:0	8	MpegEncContext
water	85:69	0:0	8	)
water	85:71	0:0	6	;
water	86:12	0:0	6	}
for	88:12	95:12	4	(i = 0 ;i < nb_slices;i ++)
forinit	88:17	88:22	5	i = 0 ;
water	88:17	0:0	6	i
op	88:19	0:0	6	=
water	88:21	0:0	6	0
water	88:22	0:0	6	;
cond	88:24	88:28	5	i < nb_slices
water	88:24	0:0	6	i
op	88:26	0:0	6	<
water	88:28	0:0	6	nb_slices
forexpr	88:39	88:40	5	i ++
water	88:39	0:0	6	i
op	88:40	0:0	6	++
stmts	88:44	95:12	5	
water	88:44	0:0	6	{
if	89:16	90:29	6	(init_duplicate_context (s -> thread_context [ i ] ) < 0)
cond	89:20	89:67	7	init_duplicate_context (s -> thread_context [ i ] ) < 0
call	89:20	89:63	8	init_duplicate_context
arg	89:43	89:63	9	s->thread_context[i]
water	89:43	0:0	10	s
op	89:44	0:0	10	->
water	89:46	0:0	10	thread_context
op	89:60	0:0	10	[
water	89:61	0:0	10	i
op	89:62	0:0	10	]
op	89:65	0:0	8	<
water	89:67	0:0	8	0
stmts	90:20	90:29	7	
goto	90:20	90:29	8	fail
water	90:25	0:0	9	fail
water	91:20	0:0	6	s
op	91:21	0:0	6	->
water	91:23	0:0	6	thread_context
op	91:37	0:0	6	[
water	91:38	0:0	6	i
op	91:39	0:0	6	]
op	91:40	0:0	6	->
water	91:42	0:0	6	start_mb_y
op	91:53	0:0	6	=
water	92:24	0:0	6	(
water	92:25	0:0	6	s
op	92:26	0:0	6	->
water	92:28	0:0	6	mb_height
op	92:38	0:0	6	*
water	92:40	0:0	6	(
water	92:41	0:0	6	i
water	92:42	0:0	6	)
op	92:44	0:0	6	+
water	92:46	0:0	6	nb_slices
op	92:56	0:0	6	/
water	92:58	0:0	6	2
water	92:59	0:0	6	)
op	92:61	0:0	6	/
water	92:63	0:0	6	nb_slices
water	92:72	0:0	6	;
water	93:20	0:0	6	s
op	93:21	0:0	6	->
water	93:23	0:0	6	thread_context
op	93:37	0:0	6	[
water	93:38	0:0	6	i
op	93:39	0:0	6	]
op	93:40	0:0	6	->
water	93:42	0:0	6	end_mb_y
op	93:53	0:0	6	=
water	94:24	0:0	6	(
water	94:25	0:0	6	s
op	94:26	0:0	6	->
water	94:28	0:0	6	mb_height
op	94:38	0:0	6	*
water	94:40	0:0	6	(
water	94:41	0:0	6	i
op	94:43	0:0	6	+
water	94:45	0:0	6	1
water	94:46	0:0	6	)
op	94:48	0:0	6	+
water	94:50	0:0	6	nb_slices
op	94:60	0:0	6	/
water	94:62	0:0	6	2
water	94:63	0:0	6	)
op	94:65	0:0	6	/
water	94:67	0:0	6	nb_slices
water	94:76	0:0	6	;
water	95:12	0:0	6	}
water	96:8	0:0	4	}
else	96:10	101:8	2
stmts	96:15	101:8	3	
water	96:15	0:0	4	{
if	97:12	98:25	4	(init_duplicate_context (s ) < 0)
cond	97:16	97:44	5	init_duplicate_context (s ) < 0
call	97:16	97:40	6	init_duplicate_context
arg	97:39	97:40	7	s
water	97:39	0:0	8	s
op	97:42	0:0	6	<
water	97:44	0:0	6	0
stmts	98:16	98:25	5	
goto	98:16	98:25	6	fail
water	98:21	0:0	7	fail
water	99:12	0:0	4	s
op	99:13	0:0	4	->
water	99:15	0:0	4	start_mb_y
op	99:26	0:0	4	=
water	99:28	0:0	4	0
water	99:29	0:0	4	;
water	100:12	0:0	4	s
op	100:13	0:0	4	->
water	100:15	0:0	4	end_mb_y
op	100:26	0:0	4	=
water	100:28	0:0	4	s
op	100:29	0:0	4	->
water	100:31	0:0	4	mb_height
water	100:40	0:0	4	;
water	101:8	0:0	4	}
water	102:8	0:0	2	s
op	102:9	0:0	2	->
water	102:11	0:0	2	slice_context_count
op	102:31	0:0	2	=
water	102:33	0:0	2	nb_slices
water	102:42	0:0	2	;
return	105:4	105:12	2	0
water	105:11	0:0	3	0
label	106:1	106:5	2	fail :
call	107:4	107:23	2	ff_mpv_common_end
arg	107:22	107:23	3	s
water	107:22	0:0	4	s
water	107:24	0:0	2	;
return	108:4	108:13	2	-1
op	108:11	0:0	3	-
water	108:12	0:0	3	1

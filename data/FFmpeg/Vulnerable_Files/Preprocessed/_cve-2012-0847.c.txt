func	2:0	38:0	0	void	avfilter_filter_samples
params	2:28	0:0	1	
param	2:29	2:47	2	AVFilterLink *	link
param	2:49	2:78	2	AVFilterBufferRef *	samplesref
stmnts	4:4	37:39	1	
call	4:4	4:25	2	void
arg	4:10	4:25	3	*filter_samples
op	4:10	0:0	4	*
water	4:11	0:0	4	filter_samples
water	4:26	0:0	2	(
water	4:27	0:0	2	AVFilterLink
op	4:40	0:0	2	*
water	4:41	0:0	2	,
water	4:43	0:0	2	AVFilterBufferRef
op	4:61	0:0	2	*
water	4:62	0:0	2	)
water	4:63	0:0	2	;
decl	5:4	5:35	2	AVFilterPad	*dst
op	5:21	0:0	2	=
water	5:23	0:0	2	link
op	5:27	0:0	2	->
water	5:29	0:0	2	dstpad
decl	6:4	6:9	2	int	i
call	8:4	8:41	2	FF_DPRINTF_START
arg	8:21	8:25	3	NULL
water	8:21	0:0	4	NULL
arg	8:27	8:41	3	filter_samples
water	8:27	0:0	4	filter_samples
water	8:42	0:0	2	;
call	8:44	8:70	2	ff_dlog_link
arg	8:57	8:61	3	NULL
water	8:57	0:0	4	NULL
arg	8:63	8:67	3	link
water	8:63	0:0	4	link
arg	8:69	8:70	3	1
water	8:69	0:0	4	1
water	8:71	0:0	2	;
if	10:4	11:56	2	(! ( filter_samples = dst -> filter_samples ))
cond	10:8	10:46	3	! ( filter_samples = dst -> filter_samples )
op	10:8	0:0	4	!
water	10:9	0:0	4	(
water	10:10	0:0	4	filter_samples
op	10:25	0:0	4	=
water	10:27	0:0	4	dst
op	10:30	0:0	4	->
water	10:32	0:0	4	filter_samples
water	10:46	0:0	4	)
stmts	11:8	11:56	3	
water	11:8	0:0	4	filter_samples
op	11:23	0:0	4	=
water	11:25	0:0	4	avfilter_default_filter_samples
water	11:56	0:0	4	;
if	14:4	34:4	2	(( dst -> min_perms & samplesref -> perms ) != dst -> min_perms || dst -> rej_perms & samplesref -> perms)
cond	14:8	15:37	3	( dst -> min_perms & samplesref -> perms ) != dst -> min_perms || dst -> rej_perms & samplesref -> perms
water	14:8	0:0	4	(
water	14:9	0:0	4	dst
op	14:12	0:0	4	->
water	14:14	0:0	4	min_perms
op	14:24	0:0	4	&
water	14:26	0:0	4	samplesref
op	14:36	0:0	4	->
water	14:38	0:0	4	perms
water	14:43	0:0	4	)
op	14:45	0:0	4	!=
water	14:48	0:0	4	dst
op	14:51	0:0	4	->
water	14:53	0:0	4	min_perms
op	14:63	0:0	4	||
water	15:8	0:0	4	dst
op	15:11	0:0	4	->
water	15:13	0:0	4	rej_perms
op	15:23	0:0	4	&
water	15:25	0:0	4	samplesref
op	15:35	0:0	4	->
water	15:37	0:0	4	perms
stmts	15:44	34:4	3	
water	15:44	0:0	4	{
call	17:8	19:82	4	av_log
arg	17:15	17:24	5	link->dst
water	17:15	0:0	6	link
op	17:19	0:0	6	->
water	17:21	0:0	6	dst
arg	17:26	17:38	5	AV_LOG_DEBUG
water	17:26	0:0	6	AV_LOG_DEBUG
arg	18:15	18:85	5	"Copying audio data in avfilter (have perms %x, need %x, reject %x)\n"
water	18:15	0:0	6	"Copying audio data in avfilter (have perms %x, need %x, reject %x)\n"
arg	19:15	19:32	5	samplesref->perms
water	19:15	0:0	6	samplesref
op	19:25	0:0	6	->
water	19:27	0:0	6	perms
arg	19:34	19:57	5	link->dstpad->min_perms
water	19:34	0:0	6	link
op	19:38	0:0	6	->
water	19:40	0:0	6	dstpad
op	19:46	0:0	6	->
water	19:48	0:0	6	min_perms
arg	19:59	19:82	5	link->dstpad->rej_perms
water	19:59	0:0	6	link
op	19:63	0:0	6	->
water	19:65	0:0	6	dstpad
op	19:71	0:0	6	->
water	19:73	0:0	6	rej_perms
water	19:83	0:0	4	;
water	21:8	0:0	4	link
op	21:12	0:0	4	->
water	21:14	0:0	4	cur_buf
op	21:22	0:0	4	=
call	21:24	25:83	4	avfilter_default_get_audio_buffer
arg	21:58	21:62	5	link
water	21:58	0:0	6	link
arg	21:64	21:78	5	dst->min_perms
water	21:64	0:0	6	dst
op	21:67	0:0	6	->
water	21:69	0:0	6	min_perms
arg	22:58	22:76	5	samplesref->format
water	22:58	0:0	6	samplesref
op	22:68	0:0	6	->
water	22:70	0:0	6	format
arg	23:58	23:87	5	samplesref->audio->nb_samples
water	23:58	0:0	6	samplesref
op	23:68	0:0	6	->
water	23:70	0:0	6	audio
op	23:75	0:0	6	->
water	23:77	0:0	6	nb_samples
arg	24:58	24:91	5	samplesref->audio->channel_layout
water	24:58	0:0	6	samplesref
op	24:68	0:0	6	->
water	24:70	0:0	6	audio
op	24:75	0:0	6	->
water	24:77	0:0	6	channel_layout
arg	25:58	25:83	5	samplesref->audio->planar
water	25:58	0:0	6	samplesref
op	25:68	0:0	6	->
water	25:70	0:0	6	audio
op	25:75	0:0	6	->
water	25:77	0:0	6	planar
water	25:84	0:0	4	;
water	26:8	0:0	4	link
op	26:12	0:0	4	->
water	26:14	0:0	4	cur_buf
op	26:21	0:0	4	->
water	26:23	0:0	4	pts
op	26:42	0:0	4	=
water	26:44	0:0	4	samplesref
op	26:54	0:0	4	->
water	26:56	0:0	4	pts
water	26:59	0:0	4	;
water	27:8	0:0	4	link
op	27:12	0:0	4	->
water	27:14	0:0	4	cur_buf
op	27:21	0:0	4	->
water	27:23	0:0	4	audio
op	27:28	0:0	4	->
water	27:30	0:0	4	sample_rate
op	27:42	0:0	4	=
water	27:44	0:0	4	samplesref
op	27:54	0:0	4	->
water	27:56	0:0	4	audio
op	27:61	0:0	4	->
water	27:63	0:0	4	sample_rate
water	27:74	0:0	4	;
for	30:8	31:88	4	(i = 0 ;samplesref -> data [ i ];i ++)
forinit	30:13	30:18	5	i = 0 ;
water	30:13	0:0	6	i
op	30:15	0:0	6	=
water	30:17	0:0	6	0
water	30:18	0:0	6	;
cond	30:20	30:38	5	samplesref -> data [ i ]
water	30:20	0:0	6	samplesref
op	30:30	0:0	6	->
water	30:32	0:0	6	data
op	30:36	0:0	6	[
water	30:37	0:0	6	i
op	30:38	0:0	6	]
forexpr	30:41	30:42	5	i ++
water	30:41	0:0	6	i
op	30:42	0:0	6	++
stmts	31:12	31:88	5	
call	31:12	31:87	6	memcpy
arg	31:19	31:41	7	link->cur_buf->data[i]
water	31:19	0:0	8	link
op	31:23	0:0	8	->
water	31:25	0:0	8	cur_buf
op	31:32	0:0	8	->
water	31:34	0:0	8	data
op	31:38	0:0	8	[
water	31:39	0:0	8	i
op	31:40	0:0	8	]
arg	31:43	31:62	7	samplesref->data[i]
water	31:43	0:0	8	samplesref
op	31:53	0:0	8	->
water	31:55	0:0	8	data
op	31:59	0:0	8	[
water	31:60	0:0	8	i
op	31:61	0:0	8	]
arg	31:64	31:87	7	samplesref->linesize[0]
water	31:64	0:0	8	samplesref
op	31:74	0:0	8	->
water	31:76	0:0	8	linesize
op	31:84	0:0	8	[
water	31:85	0:0	8	0
op	31:86	0:0	8	]
water	31:88	0:0	6	;
call	33:8	33:40	4	avfilter_unref_buffer
arg	33:30	33:40	5	samplesref
water	33:30	0:0	6	samplesref
water	33:41	0:0	4	;
water	34:4	0:0	4	}
else	34:6	35:34	2
stmts	35:8	35:34	3	
water	35:8	0:0	4	link
op	35:12	0:0	4	->
water	35:14	0:0	4	cur_buf
op	35:22	0:0	4	=
water	35:24	0:0	4	samplesref
water	35:34	0:0	4	;
call	37:4	37:38	2	filter_samples
arg	37:19	37:23	3	link
water	37:19	0:0	4	link
arg	37:25	37:38	3	link->cur_buf
water	37:25	0:0	4	link
op	37:29	0:0	4	->
water	37:31	0:0	4	cur_buf
water	37:39	0:0	2	;

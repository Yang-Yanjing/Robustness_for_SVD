func	3:0	52:0	0	int	dv_produce_packet
params	3:21	0:0	1	
param	3:22	3:39	2	DVDemuxContext *	c
param	3:41	3:54	2	AVPacket *	pkt
param	4:22	4:34	2	uint8_t *	buf
param	4:36	4:48	2	int	buf_size
param	4:50	4:61	2	int64_t	pos
stmnts	0:0	51:15	1	
decl	6:4	6:15	2	int	size
water	6:12	0:0	2	,
decl	6:4	6:15	2	int	i
decl	7:4	7:26	2	uint8_t	*ppcm[4]
op	7:21	0:0	2	=
water	7:23	0:0	2	{
water	7:24	0:0	2	0
water	7:25	0:0	2	}
if	9:4	13:4	2	(buf_size < DV_PROFILE_BYTES || ! ( c -> sys =ff_dv_frame_profile (c -> sys ,buf ,buf_size ) ) || buf_size < c -> sys -> frame_size)
cond	9:8	11:27	3	buf_size < DV_PROFILE_BYTES || ! ( c -> sys =ff_dv_frame_profile (c -> sys ,buf ,buf_size ) ) || buf_size < c -> sys -> frame_size
water	9:8	0:0	4	buf_size
op	9:17	0:0	4	<
water	9:19	0:0	4	DV_PROFILE_BYTES
op	9:36	0:0	4	||
op	10:8	0:0	4	!
water	10:9	0:0	4	(
water	10:10	0:0	4	c
op	10:11	0:0	4	->
water	10:13	0:0	4	sys
op	10:17	0:0	4	=
call	10:19	10:60	4	ff_dv_frame_profile
arg	10:39	10:45	5	c->sys
water	10:39	0:0	6	c
op	10:40	0:0	6	->
water	10:42	0:0	6	sys
arg	10:47	10:50	5	buf
water	10:47	0:0	6	buf
arg	10:52	10:60	5	buf_size
water	10:52	0:0	6	buf_size
water	10:61	0:0	4	)
op	10:63	0:0	4	||
water	11:8	0:0	4	buf_size
op	11:17	0:0	4	<
water	11:19	0:0	4	c
op	11:20	0:0	4	->
water	11:22	0:0	4	sys
op	11:25	0:0	4	->
water	11:27	0:0	4	frame_size
stmts	11:39	13:4	3	
water	11:39	0:0	4	{
return	12:10	12:19	4	-1
op	12:17	0:0	5	-
water	12:18	0:0	5	1
water	13:4	0:0	4	}
water	17:4	0:0	2	size
op	17:9	0:0	2	=
call	17:11	17:39	2	dv_extract_audio_info
arg	17:33	17:34	3	c
water	17:33	0:0	4	c
arg	17:36	17:39	3	buf
water	17:36	0:0	4	buf
water	17:40	0:0	2	;
for	18:4	23:4	2	(i = 0 ;i < c -> ach;i ++)
forinit	18:9	18:14	3	i = 0 ;
water	18:9	0:0	4	i
op	18:11	0:0	4	=
water	18:13	0:0	4	0
water	18:14	0:0	4	;
cond	18:16	18:23	3	i < c -> ach
water	18:16	0:0	4	i
op	18:18	0:0	4	<
water	18:20	0:0	4	c
op	18:21	0:0	4	->
water	18:23	0:0	4	ach
forexpr	18:28	18:29	3	i ++
water	18:28	0:0	4	i
op	18:29	0:0	4	++
stmts	18:33	23:4	3	
water	18:33	0:0	4	{
water	19:7	0:0	4	c
op	19:8	0:0	4	->
water	19:10	0:0	4	audio_pkt
op	19:19	0:0	4	[
water	19:20	0:0	4	i
op	19:21	0:0	4	]
op	19:22	0:0	4	.
water	19:23	0:0	4	pos
op	19:28	0:0	4	=
water	19:30	0:0	4	pos
water	19:33	0:0	4	;
water	20:7	0:0	4	c
op	20:8	0:0	4	->
water	20:10	0:0	4	audio_pkt
op	20:19	0:0	4	[
water	20:20	0:0	4	i
op	20:21	0:0	4	]
op	20:22	0:0	4	.
water	20:23	0:0	4	size
op	20:28	0:0	4	=
water	20:30	0:0	4	size
water	20:34	0:0	4	;
water	21:7	0:0	4	c
op	21:8	0:0	4	->
water	21:10	0:0	4	audio_pkt
op	21:19	0:0	4	[
water	21:20	0:0	4	i
op	21:21	0:0	4	]
op	21:22	0:0	4	.
water	21:23	0:0	4	pts
op	21:28	0:0	4	=
water	21:30	0:0	4	c
op	21:31	0:0	4	->
water	21:33	0:0	4	abytes
op	21:40	0:0	4	*
water	21:42	0:0	4	30000
op	21:47	0:0	4	*
water	21:48	0:0	4	8
op	21:50	0:0	4	/
water	21:52	0:0	4	c
op	21:53	0:0	4	->
water	21:55	0:0	4	ast
op	21:58	0:0	4	[
water	21:59	0:0	4	i
op	21:60	0:0	4	]
op	21:61	0:0	4	->
water	21:63	0:0	4	codec
op	21:68	0:0	4	->
water	21:70	0:0	4	bit_rate
water	21:78	0:0	4	;
water	22:7	0:0	4	ppcm
op	22:11	0:0	4	[
water	22:12	0:0	4	i
op	22:13	0:0	4	]
op	22:15	0:0	4	=
water	22:17	0:0	4	c
op	22:18	0:0	4	->
water	22:20	0:0	4	audio_buf
op	22:29	0:0	4	[
water	22:30	0:0	4	i
op	22:31	0:0	4	]
water	22:32	0:0	4	;
water	23:4	0:0	4	}
call	24:4	24:38	2	dv_extract_audio
arg	24:21	24:24	3	buf
water	24:21	0:0	4	buf
arg	24:26	24:30	3	ppcm
water	24:26	0:0	4	ppcm
arg	24:32	24:38	3	c->sys
water	24:32	0:0	4	c
op	24:33	0:0	4	->
water	24:35	0:0	4	sys
water	24:39	0:0	2	;
if	28:4	35:4	2	(c -> sys -> height == 720)
cond	28:8	28:26	3	c -> sys -> height == 720
water	28:8	0:0	4	c
op	28:9	0:0	4	->
water	28:11	0:0	4	sys
op	28:14	0:0	4	->
water	28:16	0:0	4	height
op	28:23	0:0	4	==
water	28:26	0:0	4	720
stmts	28:31	35:4	3	
water	28:31	0:0	4	{
if	29:8	31:8	4	(buf [ 1 ] & 0 x0C)
cond	29:12	29:22	5	buf [ 1 ] & 0 x0C
water	29:12	0:0	6	buf
op	29:15	0:0	6	[
water	29:16	0:0	6	1
op	29:17	0:0	6	]
op	29:19	0:0	6	&
water	29:21	0:0	6	0
water	29:22	0:0	6	x0C
stmts	29:27	31:8	5	
water	29:27	0:0	6	{
water	30:12	0:0	6	c
op	30:13	0:0	6	->
water	30:15	0:0	6	audio_pkt
op	30:24	0:0	6	[
water	30:25	0:0	6	2
op	30:26	0:0	6	]
op	30:27	0:0	6	.
water	30:28	0:0	6	size
op	30:33	0:0	6	=
water	30:35	0:0	6	c
op	30:36	0:0	6	->
water	30:38	0:0	6	audio_pkt
op	30:47	0:0	6	[
water	30:48	0:0	6	3
op	30:49	0:0	6	]
op	30:50	0:0	6	.
water	30:51	0:0	6	size
op	30:56	0:0	6	=
water	30:58	0:0	6	0
water	30:59	0:0	6	;
water	31:8	0:0	6	}
else	31:10	34:8	4
stmts	31:15	34:8	5	
water	31:15	0:0	6	{
water	32:12	0:0	6	c
op	32:13	0:0	6	->
water	32:15	0:0	6	audio_pkt
op	32:24	0:0	6	[
water	32:25	0:0	6	0
op	32:26	0:0	6	]
op	32:27	0:0	6	.
water	32:28	0:0	6	size
op	32:33	0:0	6	=
water	32:35	0:0	6	c
op	32:36	0:0	6	->
water	32:38	0:0	6	audio_pkt
op	32:47	0:0	6	[
water	32:48	0:0	6	1
op	32:49	0:0	6	]
op	32:50	0:0	6	.
water	32:51	0:0	6	size
op	32:56	0:0	6	=
water	32:58	0:0	6	0
water	32:59	0:0	6	;
water	33:12	0:0	6	c
op	33:13	0:0	6	->
water	33:15	0:0	6	abytes
op	33:22	0:0	6	+=
water	33:25	0:0	6	size
water	33:29	0:0	6	;
water	34:8	0:0	6	}
water	35:4	0:0	4	}
else	35:6	37:4	2
stmts	35:11	37:4	3	
water	35:11	0:0	4	{
water	36:8	0:0	4	c
op	36:9	0:0	4	->
water	36:11	0:0	4	abytes
op	36:18	0:0	4	+=
water	36:21	0:0	4	size
water	36:25	0:0	4	;
water	37:4	0:0	4	}
water	40:4	0:0	2	size
op	40:9	0:0	2	=
call	40:11	40:39	2	dv_extract_video_info
arg	40:33	40:34	3	c
water	40:33	0:0	4	c
arg	40:36	40:39	3	buf
water	40:36	0:0	4	buf
water	40:40	0:0	2	;
call	41:4	41:22	2	av_init_packet
arg	41:19	41:22	3	pkt
water	41:19	0:0	4	pkt
water	41:23	0:0	2	;
water	42:4	0:0	2	pkt
op	42:7	0:0	2	->
water	42:9	0:0	2	data
op	42:22	0:0	2	=
water	42:24	0:0	2	buf
water	42:27	0:0	2	;
water	43:4	0:0	2	pkt
op	43:7	0:0	2	->
water	43:9	0:0	2	pos
op	43:22	0:0	2	=
water	43:24	0:0	2	pos
water	43:27	0:0	2	;
water	44:4	0:0	2	pkt
op	44:7	0:0	2	->
water	44:9	0:0	2	size
op	44:22	0:0	2	=
water	44:24	0:0	2	size
water	44:28	0:0	2	;
water	45:4	0:0	2	pkt
op	45:7	0:0	2	->
water	45:9	0:0	2	flags
op	45:21	0:0	2	|=
water	45:24	0:0	2	AV_PKT_FLAG_KEY
water	45:39	0:0	2	;
water	46:4	0:0	2	pkt
op	46:7	0:0	2	->
water	46:9	0:0	2	stream_index
op	46:22	0:0	2	=
water	46:24	0:0	2	c
op	46:25	0:0	2	->
water	46:27	0:0	2	vst
op	46:30	0:0	2	->
water	46:32	0:0	2	id
water	46:34	0:0	2	;
water	47:4	0:0	2	pkt
op	47:7	0:0	2	->
water	47:9	0:0	2	pts
op	47:22	0:0	2	=
water	47:24	0:0	2	c
op	47:25	0:0	2	->
water	47:27	0:0	2	frames
water	47:33	0:0	2	;
water	49:4	0:0	2	c
op	49:5	0:0	2	->
water	49:7	0:0	2	frames
op	49:13	0:0	2	++
water	49:15	0:0	2	;
return	51:4	51:15	2	size
water	51:11	0:0	3	size

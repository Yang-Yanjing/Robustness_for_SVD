func	6:0	74:0	0	static int	dirac_unpack_idwt_params
params	6:35	0:0	1	
param	6:36	6:51	2	DiracContext *	s
stmnts	0:0	73:12	1	
decl	8:4	8:30	2	GetBitContext	*gb
op	8:22	0:0	2	=
op	8:24	0:0	2	&
water	8:25	0:0	2	s
op	8:26	0:0	2	->
water	8:28	0:0	2	gb
decl	9:4	9:16	2	int	i
water	9:9	0:0	2	,
decl	9:4	9:16	2	int	level
call	11:4	11:21	2	align_get_bits
arg	11:19	11:21	3	gb
water	11:19	0:0	4	gb
water	11:22	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	zero_res
op	13:16	0:0	2	=
water	13:18	0:0	2	s
op	13:19	0:0	2	->
water	13:21	0:0	2	num_refs
water	13:30	0:0	2	?
call	13:32	13:44	2	get_bits1
arg	13:42	13:44	3	gb
water	13:42	0:0	4	gb
water	13:46	0:0	2	:
water	13:48	0:0	2	0
water	13:49	0:0	2	;
if	14:4	15:16	2	(s -> zero_res)
cond	14:8	14:11	3	s -> zero_res
water	14:8	0:0	4	s
op	14:9	0:0	4	->
water	14:11	0:0	4	zero_res
stmts	15:8	15:16	3	
return	15:8	15:16	4	0
water	15:15	0:0	5	0
water	18:4	0:0	2	s
op	18:5	0:0	2	->
water	18:7	0:0	2	wavelet_idx
op	18:19	0:0	2	=
call	18:21	18:42	2	svq3_get_ue_golomb
arg	18:40	18:42	3	gb
water	18:40	0:0	4	gb
water	18:43	0:0	2	;
if	19:4	20:17	2	(s -> wavelet_idx > 6)
cond	19:8	19:25	3	s -> wavelet_idx > 6
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	wavelet_idx
op	19:23	0:0	4	>
water	19:25	0:0	4	6
stmts	20:8	20:17	3	
return	20:8	20:17	4	-1
op	20:15	0:0	5	-
water	20:16	0:0	5	1
water	22:4	0:0	2	s
op	22:5	0:0	2	->
water	22:7	0:0	2	wavelet_depth
op	22:21	0:0	2	=
call	22:23	22:44	2	svq3_get_ue_golomb
arg	22:42	22:44	3	gb
water	22:42	0:0	4	gb
water	22:45	0:0	2	;
if	23:4	26:4	2	(s -> wavelet_depth > MAX_DWT_LEVELS)
cond	23:8	23:27	3	s -> wavelet_depth > MAX_DWT_LEVELS
water	23:8	0:0	4	s
op	23:9	0:0	4	->
water	23:11	0:0	4	wavelet_depth
op	23:25	0:0	4	>
water	23:27	0:0	4	MAX_DWT_LEVELS
stmts	23:43	26:4	3	
water	23:43	0:0	4	{
call	24:8	24:70	4	av_log
arg	24:15	24:23	5	s->avctx
water	24:15	0:0	6	s
op	24:16	0:0	6	->
water	24:18	0:0	6	avctx
arg	24:25	24:37	5	AV_LOG_ERROR
water	24:25	0:0	6	AV_LOG_ERROR
arg	24:39	24:70	5	"too many dwt decompositions\n"
water	24:39	0:0	6	"too many dwt decompositions\n"
water	24:71	0:0	4	;
return	25:8	25:17	4	-1
op	25:15	0:0	5	-
water	25:16	0:0	5	1
water	26:4	0:0	4	}
if	28:4	44:4	2	(! s -> low_delay)
cond	28:8	28:12	3	! s -> low_delay
op	28:8	0:0	4	!
water	28:9	0:0	4	s
op	28:10	0:0	4	->
water	28:12	0:0	4	low_delay
stmts	28:23	44:4	3	
water	28:23	0:0	4	{
if	30:8	41:8	4	(get_bits1 (gb ))
cond	30:12	30:24	5	get_bits1 (gb )
call	30:12	30:24	6	get_bits1
arg	30:22	30:24	7	gb
water	30:22	0:0	8	gb
stmts	30:27	41:8	5	
water	30:27	0:0	6	{
for	31:12	34:12	6	(i = 0 ;i <= s -> wavelet_depth;i ++)
forinit	31:17	31:22	7	i = 0 ;
water	31:17	0:0	8	i
op	31:19	0:0	8	=
water	31:21	0:0	8	0
water	31:22	0:0	8	;
cond	31:24	31:32	7	i <= s -> wavelet_depth
water	31:24	0:0	8	i
op	31:26	0:0	8	<=
water	31:29	0:0	8	s
op	31:30	0:0	8	->
water	31:32	0:0	8	wavelet_depth
forexpr	31:47	31:48	7	i ++
water	31:47	0:0	8	i
op	31:48	0:0	8	++
stmts	31:52	34:12	7	
water	31:52	0:0	8	{
water	32:16	0:0	8	s
op	32:17	0:0	8	->
water	32:19	0:0	8	codeblock
op	32:28	0:0	8	[
water	32:29	0:0	8	i
op	32:30	0:0	8	]
op	32:31	0:0	8	.
water	32:32	0:0	8	width
op	32:39	0:0	8	=
call	32:41	32:62	8	svq3_get_ue_golomb
arg	32:60	32:62	9	gb
water	32:60	0:0	10	gb
water	32:63	0:0	8	;
water	33:16	0:0	8	s
op	33:17	0:0	8	->
water	33:19	0:0	8	codeblock
op	33:28	0:0	8	[
water	33:29	0:0	8	i
op	33:30	0:0	8	]
op	33:31	0:0	8	.
water	33:32	0:0	8	height
op	33:39	0:0	8	=
call	33:41	33:62	8	svq3_get_ue_golomb
arg	33:60	33:62	9	gb
water	33:60	0:0	10	gb
water	33:63	0:0	8	;
water	34:12	0:0	8	}
water	36:12	0:0	6	s
op	36:13	0:0	6	->
water	36:15	0:0	6	codeblock_mode
op	36:30	0:0	6	=
call	36:32	36:53	6	svq3_get_ue_golomb
arg	36:51	36:53	7	gb
water	36:51	0:0	8	gb
water	36:54	0:0	6	;
if	37:12	40:12	6	(s -> codeblock_mode > 1)
cond	37:16	37:36	7	s -> codeblock_mode > 1
water	37:16	0:0	8	s
op	37:17	0:0	8	->
water	37:19	0:0	8	codeblock_mode
op	37:34	0:0	8	>
water	37:36	0:0	8	1
stmts	37:39	40:12	7	
water	37:39	0:0	8	{
call	38:16	38:73	8	av_log
arg	38:23	38:31	9	s->avctx
water	38:23	0:0	10	s
op	38:24	0:0	10	->
water	38:26	0:0	10	avctx
arg	38:33	38:45	9	AV_LOG_ERROR
water	38:33	0:0	10	AV_LOG_ERROR
arg	38:47	38:73	9	"unknown codeblock mode\n"
water	38:47	0:0	10	"unknown codeblock mode\n"
water	38:74	0:0	8	;
return	39:16	39:25	8	-1
op	39:23	0:0	9	-
water	39:24	0:0	9	1
water	40:12	0:0	8	}
water	41:8	0:0	6	}
else	41:10	43:66	4
stmts	42:12	43:66	5	
for	42:12	43:66	6	(i = 0 ;i <= s -> wavelet_depth;i ++)
forinit	42:17	42:22	7	i = 0 ;
water	42:17	0:0	8	i
op	42:19	0:0	8	=
water	42:21	0:0	8	0
water	42:22	0:0	8	;
cond	42:24	42:32	7	i <= s -> wavelet_depth
water	42:24	0:0	8	i
op	42:26	0:0	8	<=
water	42:29	0:0	8	s
op	42:30	0:0	8	->
water	42:32	0:0	8	wavelet_depth
forexpr	42:47	42:48	7	i ++
water	42:47	0:0	8	i
op	42:48	0:0	8	++
stmts	43:16	43:66	7	
water	43:16	0:0	8	s
op	43:17	0:0	8	->
water	43:19	0:0	8	codeblock
op	43:28	0:0	8	[
water	43:29	0:0	8	i
op	43:30	0:0	8	]
op	43:31	0:0	8	.
water	43:32	0:0	8	width
op	43:38	0:0	8	=
water	43:40	0:0	8	s
op	43:41	0:0	8	->
water	43:43	0:0	8	codeblock
op	43:52	0:0	8	[
water	43:53	0:0	8	i
op	43:54	0:0	8	]
op	43:55	0:0	8	.
water	43:56	0:0	8	height
op	43:63	0:0	8	=
water	43:65	0:0	8	1
water	43:66	0:0	8	;
water	44:4	0:0	4	}
else	44:6	72:4	2
stmts	44:11	72:4	3	
water	44:11	0:0	4	{
water	47:8	0:0	4	s
op	47:9	0:0	4	->
water	47:11	0:0	4	lowdelay
op	47:19	0:0	4	.
water	47:20	0:0	4	num_x
op	47:30	0:0	4	=
call	47:32	47:53	4	svq3_get_ue_golomb
arg	47:51	47:53	5	gb
water	47:51	0:0	6	gb
water	47:54	0:0	4	;
water	48:8	0:0	4	s
op	48:9	0:0	4	->
water	48:11	0:0	4	lowdelay
op	48:19	0:0	4	.
water	48:20	0:0	4	num_y
op	48:30	0:0	4	=
call	48:32	48:53	4	svq3_get_ue_golomb
arg	48:51	48:53	5	gb
water	48:51	0:0	6	gb
water	48:54	0:0	4	;
water	49:8	0:0	4	s
op	49:9	0:0	4	->
water	49:11	0:0	4	lowdelay
op	49:19	0:0	4	.
water	49:20	0:0	4	bytes
op	49:25	0:0	4	.
water	49:26	0:0	4	num
op	49:30	0:0	4	=
call	49:32	49:53	4	svq3_get_ue_golomb
arg	49:51	49:53	5	gb
water	49:51	0:0	6	gb
water	49:54	0:0	4	;
water	50:8	0:0	4	s
op	50:9	0:0	4	->
water	50:11	0:0	4	lowdelay
op	50:19	0:0	4	.
water	50:20	0:0	4	bytes
op	50:25	0:0	4	.
water	50:26	0:0	4	den
op	50:30	0:0	4	=
call	50:32	50:53	4	svq3_get_ue_golomb
arg	50:51	50:53	5	gb
water	50:51	0:0	6	gb
water	50:54	0:0	4	;
if	53:8	62:8	4	(get_bits1 (gb ))
cond	53:12	53:24	5	get_bits1 (gb )
call	53:12	53:24	6	get_bits1
arg	53:22	53:24	7	gb
water	53:22	0:0	8	gb
stmts	53:27	62:8	5	
water	53:27	0:0	6	{
call	54:12	54:87	6	av_log
arg	54:19	54:27	7	s->avctx
water	54:19	0:0	8	s
op	54:20	0:0	8	->
water	54:22	0:0	8	avctx
arg	54:28	54:40	7	AV_LOG_DEBUG
water	54:28	0:0	8	AV_LOG_DEBUG
arg	54:41	54:87	7	"Low Delay: Has Custom Quantization Matrix!\n"
water	54:41	0:0	8	"Low Delay: Has Custom Quantization Matrix!\n"
water	54:88	0:0	6	;
water	56:12	0:0	6	s
op	56:13	0:0	6	->
water	56:15	0:0	6	lowdelay
op	56:23	0:0	6	.
water	56:24	0:0	6	quant
op	56:29	0:0	6	[
water	56:30	0:0	6	0
op	56:31	0:0	6	]
op	56:32	0:0	6	[
water	56:33	0:0	6	0
op	56:34	0:0	6	]
op	56:36	0:0	6	=
call	56:38	56:59	6	svq3_get_ue_golomb
arg	56:57	56:59	7	gb
water	56:57	0:0	8	gb
water	56:60	0:0	6	;
for	57:12	61:12	6	(level = 0 ;level < s -> wavelet_depth;level ++)
forinit	57:17	57:26	7	level = 0 ;
water	57:17	0:0	8	level
op	57:23	0:0	8	=
water	57:25	0:0	8	0
water	57:26	0:0	8	;
cond	57:28	57:39	7	level < s -> wavelet_depth
water	57:28	0:0	8	level
op	57:34	0:0	8	<
water	57:36	0:0	8	s
op	57:37	0:0	8	->
water	57:39	0:0	8	wavelet_depth
forexpr	57:54	57:59	7	level ++
water	57:54	0:0	8	level
op	57:59	0:0	8	++
stmts	57:63	61:12	7	
water	57:63	0:0	8	{
water	58:16	0:0	8	s
op	58:17	0:0	8	->
water	58:19	0:0	8	lowdelay
op	58:27	0:0	8	.
water	58:28	0:0	8	quant
op	58:33	0:0	8	[
water	58:34	0:0	8	level
op	58:39	0:0	8	]
op	58:40	0:0	8	[
water	58:41	0:0	8	1
op	58:42	0:0	8	]
op	58:44	0:0	8	=
call	58:46	58:67	8	svq3_get_ue_golomb
arg	58:65	58:67	9	gb
water	58:65	0:0	10	gb
water	58:68	0:0	8	;
water	59:16	0:0	8	s
op	59:17	0:0	8	->
water	59:19	0:0	8	lowdelay
op	59:27	0:0	8	.
water	59:28	0:0	8	quant
op	59:33	0:0	8	[
water	59:34	0:0	8	level
op	59:39	0:0	8	]
op	59:40	0:0	8	[
water	59:41	0:0	8	2
op	59:42	0:0	8	]
op	59:44	0:0	8	=
call	59:46	59:67	8	svq3_get_ue_golomb
arg	59:65	59:67	9	gb
water	59:65	0:0	10	gb
water	59:68	0:0	8	;
water	60:16	0:0	8	s
op	60:17	0:0	8	->
water	60:19	0:0	8	lowdelay
op	60:27	0:0	8	.
water	60:28	0:0	8	quant
op	60:33	0:0	8	[
water	60:34	0:0	8	level
op	60:39	0:0	8	]
op	60:40	0:0	8	[
water	60:41	0:0	8	3
op	60:42	0:0	8	]
op	60:44	0:0	8	=
call	60:46	60:67	8	svq3_get_ue_golomb
arg	60:65	60:67	9	gb
water	60:65	0:0	10	gb
water	60:68	0:0	8	;
water	61:12	0:0	8	}
water	62:8	0:0	6	}
else	62:10	71:8	4
stmts	62:15	71:8	5	
water	62:15	0:0	6	{
for	64:12	70:16	6	(level = 0 ;level < s -> wavelet_depth;level ++)
forinit	64:17	64:26	7	level = 0 ;
water	64:17	0:0	8	level
op	64:23	0:0	8	=
water	64:25	0:0	8	0
water	64:26	0:0	8	;
cond	64:28	64:39	7	level < s -> wavelet_depth
water	64:28	0:0	8	level
op	64:34	0:0	8	<
water	64:36	0:0	8	s
op	64:37	0:0	8	->
water	64:39	0:0	8	wavelet_depth
forexpr	64:54	64:59	7	level ++
water	64:54	0:0	8	level
op	64:59	0:0	8	++
stmts	65:16	70:16	7	
for	65:16	70:16	8	(i = 0 ;i < 4;i ++)
forinit	65:21	65:26	9	i = 0 ;
water	65:21	0:0	10	i
op	65:23	0:0	10	=
water	65:25	0:0	10	0
water	65:26	0:0	10	;
cond	65:28	65:32	9	i < 4
water	65:28	0:0	10	i
op	65:30	0:0	10	<
water	65:32	0:0	10	4
forexpr	65:35	65:36	9	i ++
water	65:35	0:0	10	i
op	65:36	0:0	10	++
stmts	65:40	70:16	9	
water	65:40	0:0	10	{
water	66:20	0:0	10	s
op	66:21	0:0	10	->
water	66:23	0:0	10	lowdelay
op	66:31	0:0	10	.
water	66:32	0:0	10	quant
op	66:37	0:0	10	[
water	66:38	0:0	10	level
op	66:43	0:0	10	]
op	66:44	0:0	10	[
water	66:45	0:0	10	i
op	66:46	0:0	10	]
op	66:48	0:0	10	=
water	66:50	0:0	10	default_qmat
op	66:62	0:0	10	[
water	66:63	0:0	10	s
op	66:64	0:0	10	->
water	66:66	0:0	10	wavelet_idx
op	66:77	0:0	10	]
op	66:78	0:0	10	[
water	66:79	0:0	10	level
op	66:84	0:0	10	]
op	66:85	0:0	10	[
water	66:86	0:0	10	i
op	66:87	0:0	10	]
water	66:88	0:0	10	;
if	68:20	69:85	10	(s -> wavelet_idx == 3)
cond	68:24	68:42	11	s -> wavelet_idx == 3
water	68:24	0:0	12	s
op	68:25	0:0	12	->
water	68:27	0:0	12	wavelet_idx
op	68:39	0:0	12	==
water	68:42	0:0	12	3
stmts	69:24	69:85	11	
water	69:24	0:0	12	s
op	69:25	0:0	12	->
water	69:27	0:0	12	lowdelay
op	69:35	0:0	12	.
water	69:36	0:0	12	quant
op	69:41	0:0	12	[
water	69:42	0:0	12	level
op	69:47	0:0	12	]
op	69:48	0:0	12	[
water	69:49	0:0	12	i
op	69:50	0:0	12	]
op	69:52	0:0	12	+=
water	69:55	0:0	12	4
op	69:56	0:0	12	*
water	69:57	0:0	12	(
water	69:58	0:0	12	s
op	69:59	0:0	12	->
water	69:61	0:0	12	wavelet_depth
op	69:74	0:0	12	-
water	69:75	0:0	12	1
op	69:77	0:0	12	-
water	69:79	0:0	12	level
water	69:84	0:0	12	)
water	69:85	0:0	12	;
water	70:16	0:0	10	}
water	71:8	0:0	6	}
water	72:4	0:0	4	}
return	73:4	73:12	2	0
water	73:11	0:0	3	0

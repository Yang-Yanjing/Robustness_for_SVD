func	2:0	79:0	0	void	ff_sbr_apply
params	2:17	0:0	1	
param	2:18	2:32	2	AACContext *	ac
param	2:34	2:62	2	SpectralBandReplication *	sbr
param	2:64	2:74	2	int	id_aac
param	3:18	3:26	2	float *	L
param	3:28	3:36	2	float *	R
stmnts	0:0	78:38	1	
decl	5:4	5:71	2	int	downsampled
op	5:20	0:0	2	=
water	5:22	0:0	2	ac
op	5:24	0:0	2	->
water	5:26	0:0	2	oc
op	5:28	0:0	2	[
water	5:29	0:0	2	1
op	5:30	0:0	2	]
op	5:31	0:0	2	.
water	5:32	0:0	2	m4ac
op	5:36	0:0	2	.
water	5:37	0:0	2	ext_sample_rate
op	5:53	0:0	2	<
water	5:55	0:0	2	sbr
op	5:58	0:0	2	->
water	5:60	0:0	2	sample_rate
decl	6:4	6:10	2	int	ch
decl	7:4	7:42	2	int	nch
op	7:12	0:0	2	=
water	7:14	0:0	2	(
water	7:15	0:0	2	id_aac
op	7:22	0:0	2	==
water	7:25	0:0	2	TYPE_CPE
water	7:33	0:0	2	)
water	7:35	0:0	2	?
water	7:37	0:0	2	2
water	7:39	0:0	2	:
water	7:41	0:0	2	1
decl	8:4	8:11	2	int	err
if	10:4	13:4	2	(! sbr -> kx_and_m_pushed)
cond	10:8	10:14	3	! sbr -> kx_and_m_pushed
op	10:8	0:0	4	!
water	10:9	0:0	4	sbr
op	10:12	0:0	4	->
water	10:14	0:0	4	kx_and_m_pushed
stmts	10:31	13:4	3	
water	10:31	0:0	4	{
water	11:8	0:0	4	sbr
op	11:11	0:0	4	->
water	11:13	0:0	4	kx
op	11:15	0:0	4	[
water	11:16	0:0	4	0
op	11:17	0:0	4	]
op	11:19	0:0	4	=
water	11:21	0:0	4	sbr
op	11:24	0:0	4	->
water	11:26	0:0	4	kx
op	11:28	0:0	4	[
water	11:29	0:0	4	1
op	11:30	0:0	4	]
water	11:31	0:0	4	;
water	12:8	0:0	4	sbr
op	12:11	0:0	4	->
water	12:13	0:0	4	m
op	12:14	0:0	4	[
water	12:15	0:0	4	0
op	12:16	0:0	4	]
op	12:18	0:0	4	=
water	12:20	0:0	4	sbr
op	12:23	0:0	4	->
water	12:25	0:0	4	m
op	12:26	0:0	4	[
water	12:27	0:0	4	1
op	12:28	0:0	4	]
water	12:29	0:0	4	;
water	13:4	0:0	4	}
else	13:6	15:4	2
stmts	13:11	15:4	3	
water	13:11	0:0	4	{
water	14:8	0:0	4	sbr
op	14:11	0:0	4	->
water	14:13	0:0	4	kx_and_m_pushed
op	14:29	0:0	4	=
water	14:31	0:0	4	0
water	14:32	0:0	4	;
water	15:4	0:0	4	}
if	17:4	19:4	2	(sbr -> start)
cond	17:8	17:13	3	sbr -> start
water	17:8	0:0	4	sbr
op	17:11	0:0	4	->
water	17:13	0:0	4	start
stmts	17:20	19:4	3	
water	17:20	0:0	4	{
call	18:8	18:31	4	sbr_dequant
arg	18:20	18:23	5	sbr
water	18:20	0:0	6	sbr
arg	18:25	18:31	5	id_aac
water	18:25	0:0	6	id_aac
water	18:32	0:0	4	;
water	19:4	0:0	4	}
for	20:4	57:4	2	(ch = 0 ;ch < nch;ch ++)
forinit	20:9	20:15	3	ch = 0 ;
water	20:9	0:0	4	ch
op	20:12	0:0	4	=
water	20:14	0:0	4	0
water	20:15	0:0	4	;
cond	20:17	20:22	3	ch < nch
water	20:17	0:0	4	ch
op	20:20	0:0	4	<
water	20:22	0:0	4	nch
forexpr	20:27	20:29	3	ch ++
water	20:27	0:0	4	ch
op	20:29	0:0	4	++
stmts	20:33	57:4	3	
water	20:33	0:0	4	{
call	22:8	24:60	4	sbr_qmf_analysis
arg	22:25	22:33	5	ac->fdsp
water	22:25	0:0	6	ac
op	22:27	0:0	6	->
water	22:29	0:0	6	fdsp
arg	22:35	22:49	5	&sbr->mdct_ana
op	22:35	0:0	6	&
water	22:36	0:0	6	sbr
op	22:39	0:0	6	->
water	22:41	0:0	6	mdct_ana
arg	22:51	22:60	5	&sbr->dsp
op	22:51	0:0	6	&
water	22:52	0:0	6	sbr
op	22:55	0:0	6	->
water	22:57	0:0	6	dsp
arg	22:62	22:72	5	ch?R:L
water	22:62	0:0	6	ch
water	22:65	0:0	6	?
water	22:67	0:0	6	R
water	22:69	0:0	6	:
water	22:71	0:0	6	L
arg	22:74	22:115	5	sbr->data[ch].analysis_filterbank_samples
water	22:74	0:0	6	sbr
op	22:77	0:0	6	->
water	22:79	0:0	6	data
op	22:83	0:0	6	[
water	22:84	0:0	6	ch
op	22:86	0:0	6	]
op	22:87	0:0	6	.
water	22:88	0:0	6	analysis_filterbank_samples
arg	23:25	23:56	5	(float*)sbr->qmf_filter_scratch
water	23:25	0:0	6	(
water	23:26	0:0	6	float
op	23:31	0:0	6	*
water	23:32	0:0	6	)
water	23:33	0:0	6	sbr
op	23:36	0:0	6	->
water	23:38	0:0	6	qmf_filter_scratch
arg	24:25	24:40	5	sbr->data[ch].W
water	24:25	0:0	6	sbr
op	24:28	0:0	6	->
water	24:30	0:0	6	data
op	24:34	0:0	6	[
water	24:35	0:0	6	ch
op	24:37	0:0	6	]
op	24:38	0:0	6	.
water	24:39	0:0	6	W
arg	24:42	24:60	5	sbr->data[ch].Ypos
water	24:42	0:0	6	sbr
op	24:45	0:0	6	->
water	24:47	0:0	6	data
op	24:51	0:0	6	[
water	24:52	0:0	6	ch
op	24:54	0:0	6	]
op	24:55	0:0	6	.
water	24:56	0:0	6	Ypos
water	24:61	0:0	4	;
call	25:8	27:44	4	sbr->c.sbr_lf_gen
arg	25:26	25:28	5	ac
water	25:26	0:0	6	ac
arg	25:30	25:33	5	sbr
water	25:30	0:0	6	sbr
arg	25:35	25:45	5	sbr->X_low
water	25:35	0:0	6	sbr
op	25:38	0:0	6	->
water	25:40	0:0	6	X_low
arg	26:26	26:70	5	(constfloat(*)[32][32][2])sbr->data[ch].W
water	26:26	0:0	6	(
water	26:27	0:0	6	const
call	26:33	26:41	6	float
arg	26:40	26:41	7	*
op	26:40	0:0	8	*
op	26:42	0:0	6	[
water	26:43	0:0	6	32
op	26:45	0:0	6	]
op	26:46	0:0	6	[
water	26:47	0:0	6	32
op	26:49	0:0	6	]
op	26:50	0:0	6	[
water	26:51	0:0	6	2
op	26:52	0:0	6	]
water	26:53	0:0	6	)
water	26:55	0:0	6	sbr
op	26:58	0:0	6	->
water	26:60	0:0	6	data
op	26:64	0:0	6	[
water	26:65	0:0	6	ch
op	26:67	0:0	6	]
op	26:68	0:0	6	.
water	26:69	0:0	6	W
arg	27:26	27:44	5	sbr->data[ch].Ypos
water	27:26	0:0	6	sbr
op	27:29	0:0	6	->
water	27:31	0:0	6	data
op	27:35	0:0	6	[
water	27:36	0:0	6	ch
op	27:38	0:0	6	]
op	27:39	0:0	6	.
water	27:40	0:0	6	Ypos
water	27:45	0:0	4	;
water	28:8	0:0	4	sbr
op	28:11	0:0	4	->
water	28:13	0:0	4	data
op	28:17	0:0	4	[
water	28:18	0:0	4	ch
op	28:20	0:0	4	]
op	28:21	0:0	4	.
water	28:22	0:0	4	Ypos
op	28:27	0:0	4	^=
water	28:30	0:0	4	1
water	28:31	0:0	4	;
if	29:8	50:8	4	(sbr -> start)
cond	29:12	29:17	5	sbr -> start
water	29:12	0:0	6	sbr
op	29:15	0:0	6	->
water	29:17	0:0	6	start
stmts	29:24	50:8	5	
water	29:24	0:0	6	{
call	30:12	31:87	6	sbr->c.sbr_hf_inverse_filter
arg	30:41	30:50	7	&sbr->dsp
op	30:41	0:0	8	&
water	30:42	0:0	8	sbr
op	30:45	0:0	8	->
water	30:47	0:0	8	dsp
arg	30:52	30:63	7	sbr->alpha0
water	30:52	0:0	8	sbr
op	30:55	0:0	8	->
water	30:57	0:0	8	alpha0
arg	30:65	30:76	7	sbr->alpha1
water	30:65	0:0	8	sbr
op	30:68	0:0	8	->
water	30:70	0:0	8	alpha1
arg	31:41	31:76	7	(constfloat(*)[40][2])sbr->X_low
water	31:41	0:0	8	(
water	31:42	0:0	8	const
call	31:48	31:56	8	float
arg	31:55	31:56	9	*
op	31:55	0:0	10	*
op	31:57	0:0	8	[
water	31:58	0:0	8	40
op	31:60	0:0	8	]
op	31:61	0:0	8	[
water	31:62	0:0	8	2
op	31:63	0:0	8	]
water	31:64	0:0	8	)
water	31:66	0:0	8	sbr
op	31:69	0:0	8	->
water	31:71	0:0	8	X_low
arg	31:78	31:87	7	sbr->k[0]
water	31:78	0:0	8	sbr
op	31:81	0:0	8	->
water	31:83	0:0	8	k
op	31:84	0:0	8	[
water	31:85	0:0	8	0
op	31:86	0:0	8	]
water	31:88	0:0	6	;
call	32:12	32:41	6	sbr_chirp
arg	32:22	32:25	7	sbr
water	32:22	0:0	8	sbr
arg	32:27	32:41	7	&sbr->data[ch]
op	32:27	0:0	8	&
water	32:28	0:0	8	sbr
op	32:31	0:0	8	->
water	32:33	0:0	8	data
op	32:37	0:0	8	[
water	32:38	0:0	8	ch
op	32:40	0:0	8	]
water	32:42	0:0	6	;
call	33:12	38:47	6	sbr_hf_gen
arg	33:23	33:25	7	ac
water	33:23	0:0	8	ac
arg	33:27	33:30	7	sbr
water	33:27	0:0	8	sbr
arg	33:32	33:43	7	sbr->X_high
water	33:32	0:0	8	sbr
op	33:35	0:0	8	->
water	33:37	0:0	8	X_high
arg	34:23	34:58	7	(constfloat(*)[40][2])sbr->X_low
water	34:23	0:0	8	(
water	34:24	0:0	8	const
call	34:30	34:38	8	float
arg	34:37	34:38	9	*
op	34:37	0:0	10	*
op	34:39	0:0	8	[
water	34:40	0:0	8	40
op	34:42	0:0	8	]
op	34:43	0:0	8	[
water	34:44	0:0	8	2
op	34:45	0:0	8	]
water	34:46	0:0	8	)
water	34:48	0:0	8	sbr
op	34:51	0:0	8	->
water	34:53	0:0	8	X_low
arg	35:23	35:55	7	(constfloat(*)[2])sbr->alpha0
water	35:23	0:0	8	(
water	35:24	0:0	8	const
call	35:30	35:38	8	float
arg	35:37	35:38	9	*
op	35:37	0:0	10	*
op	35:39	0:0	8	[
water	35:40	0:0	8	2
op	35:41	0:0	8	]
water	35:42	0:0	8	)
water	35:44	0:0	8	sbr
op	35:47	0:0	8	->
water	35:49	0:0	8	alpha0
arg	36:23	36:55	7	(constfloat(*)[2])sbr->alpha1
water	36:23	0:0	8	(
water	36:24	0:0	8	const
call	36:30	36:38	8	float
arg	36:37	36:38	9	*
op	36:37	0:0	10	*
op	36:39	0:0	8	[
water	36:40	0:0	8	2
op	36:41	0:0	8	]
water	36:42	0:0	8	)
water	36:44	0:0	8	sbr
op	36:47	0:0	8	->
water	36:49	0:0	8	alpha1
arg	37:23	37:45	7	sbr->data[ch].bw_array
water	37:23	0:0	8	sbr
op	37:26	0:0	8	->
water	37:28	0:0	8	data
op	37:32	0:0	8	[
water	37:33	0:0	8	ch
op	37:35	0:0	8	]
op	37:36	0:0	8	.
water	37:37	0:0	8	bw_array
arg	37:47	37:66	7	sbr->data[ch].t_env
water	37:47	0:0	8	sbr
op	37:50	0:0	8	->
water	37:52	0:0	8	data
op	37:56	0:0	8	[
water	37:57	0:0	8	ch
op	37:59	0:0	8	]
op	37:60	0:0	8	.
water	37:61	0:0	8	t_env
arg	38:23	38:47	7	sbr->data[ch].bs_num_env
water	38:23	0:0	8	sbr
op	38:26	0:0	8	->
water	38:28	0:0	8	data
op	38:32	0:0	8	[
water	38:33	0:0	8	ch
op	38:35	0:0	8	]
op	38:36	0:0	8	.
water	38:37	0:0	8	bs_num_env
water	38:48	0:0	6	;
water	41:12	0:0	6	err
op	41:16	0:0	6	=
call	41:18	41:72	6	sbr_mapping
arg	41:30	41:32	7	ac
water	41:30	0:0	8	ac
arg	41:34	41:37	7	sbr
water	41:34	0:0	8	sbr
arg	41:39	41:53	7	&sbr->data[ch]
op	41:39	0:0	8	&
water	41:40	0:0	8	sbr
op	41:43	0:0	8	->
water	41:45	0:0	8	data
op	41:49	0:0	8	[
water	41:50	0:0	8	ch
op	41:52	0:0	8	]
arg	41:55	41:72	7	sbr->data[ch].e_a
water	41:55	0:0	8	sbr
op	41:58	0:0	8	->
water	41:60	0:0	8	data
op	41:64	0:0	8	[
water	41:65	0:0	8	ch
op	41:67	0:0	8	]
op	41:68	0:0	8	.
water	41:69	0:0	8	e_a
water	41:73	0:0	6	;
if	42:12	49:12	6	(! err)
cond	42:16	42:17	7	! err
op	42:16	0:0	8	!
water	42:17	0:0	8	err
stmts	42:22	49:12	7	
water	42:22	0:0	8	{
call	43:16	43:78	8	sbr_env_estimate
arg	43:33	43:44	9	sbr->e_curr
water	43:33	0:0	10	sbr
op	43:36	0:0	10	->
water	43:38	0:0	10	e_curr
arg	43:46	43:57	9	sbr->X_high
water	43:46	0:0	10	sbr
op	43:49	0:0	10	->
water	43:51	0:0	10	X_high
arg	43:59	43:62	9	sbr
water	43:59	0:0	10	sbr
arg	43:64	43:78	9	&sbr->data[ch]
op	43:64	0:0	10	&
water	43:65	0:0	10	sbr
op	43:68	0:0	10	->
water	43:70	0:0	10	data
op	43:74	0:0	10	[
water	43:75	0:0	10	ch
op	43:77	0:0	10	]
water	43:79	0:0	8	;
call	44:16	44:72	8	sbr_gain_calc
arg	44:30	44:32	9	ac
water	44:30	0:0	10	ac
arg	44:34	44:37	9	sbr
water	44:34	0:0	10	sbr
arg	44:39	44:53	9	&sbr->data[ch]
op	44:39	0:0	10	&
water	44:40	0:0	10	sbr
op	44:43	0:0	10	->
water	44:45	0:0	10	data
op	44:49	0:0	10	[
water	44:50	0:0	10	ch
op	44:52	0:0	10	]
arg	44:55	44:72	9	sbr->data[ch].e_a
water	44:55	0:0	10	sbr
op	44:58	0:0	10	->
water	44:60	0:0	10	data
op	44:64	0:0	10	[
water	44:65	0:0	10	ch
op	44:67	0:0	10	]
op	44:68	0:0	10	.
water	44:69	0:0	10	e_a
water	44:73	0:0	8	;
call	45:16	48:49	8	sbr->c.sbr_hf_assemble
arg	45:39	45:74	9	sbr->data[ch].Y[sbr->data[ch].Ypos]
water	45:39	0:0	10	sbr
op	45:42	0:0	10	->
water	45:44	0:0	10	data
op	45:48	0:0	10	[
water	45:49	0:0	10	ch
op	45:51	0:0	10	]
op	45:52	0:0	10	.
water	45:53	0:0	10	Y
op	45:54	0:0	10	[
water	45:55	0:0	10	sbr
op	45:58	0:0	10	->
water	45:60	0:0	10	data
op	45:64	0:0	10	[
water	45:65	0:0	10	ch
op	45:67	0:0	10	]
op	45:68	0:0	10	.
water	45:69	0:0	10	Ypos
op	45:73	0:0	10	]
arg	46:32	46:68	9	(constfloat(*)[40][2])sbr->X_high
water	46:32	0:0	10	(
water	46:33	0:0	10	const
call	46:39	46:47	10	float
arg	46:46	46:47	11	*
op	46:46	0:0	12	*
op	46:48	0:0	10	[
water	46:49	0:0	10	40
op	46:51	0:0	10	]
op	46:52	0:0	10	[
water	46:53	0:0	10	2
op	46:54	0:0	10	]
water	46:55	0:0	10	)
water	46:57	0:0	10	sbr
op	46:60	0:0	10	->
water	46:62	0:0	10	X_high
arg	47:32	47:35	9	sbr
water	47:32	0:0	10	sbr
arg	47:37	47:51	9	&sbr->data[ch]
op	47:37	0:0	10	&
water	47:38	0:0	10	sbr
op	47:41	0:0	10	->
water	47:43	0:0	10	data
op	47:47	0:0	10	[
water	47:48	0:0	10	ch
op	47:50	0:0	10	]
arg	48:32	48:49	9	sbr->data[ch].e_a
water	48:32	0:0	10	sbr
op	48:35	0:0	10	->
water	48:37	0:0	10	data
op	48:41	0:0	10	[
water	48:42	0:0	10	ch
op	48:44	0:0	10	]
op	48:45	0:0	10	.
water	48:46	0:0	10	e_a
water	48:50	0:0	8	;
water	49:12	0:0	8	}
water	50:8	0:0	6	}
call	53:8	56:57	4	sbr->c.sbr_x_gen
arg	53:25	53:28	5	sbr
water	53:25	0:0	6	sbr
arg	53:30	53:40	5	sbr->X[ch]
water	53:30	0:0	6	sbr
op	53:33	0:0	6	->
water	53:35	0:0	6	X
op	53:36	0:0	6	[
water	53:37	0:0	6	ch
op	53:39	0:0	6	]
arg	54:18	54:80	5	(constfloat(*)[64][2])sbr->data[ch].Y[1-sbr->data[ch].Ypos]
water	54:18	0:0	6	(
water	54:19	0:0	6	const
call	54:25	54:33	6	float
arg	54:32	54:33	7	*
op	54:32	0:0	8	*
op	54:34	0:0	6	[
water	54:35	0:0	6	64
op	54:37	0:0	6	]
op	54:38	0:0	6	[
water	54:39	0:0	6	2
op	54:40	0:0	6	]
water	54:41	0:0	6	)
water	54:43	0:0	6	sbr
op	54:46	0:0	6	->
water	54:48	0:0	6	data
op	54:52	0:0	6	[
water	54:53	0:0	6	ch
op	54:55	0:0	6	]
op	54:56	0:0	6	.
water	54:57	0:0	6	Y
op	54:58	0:0	6	[
water	54:59	0:0	6	1
op	54:60	0:0	6	-
water	54:61	0:0	6	sbr
op	54:64	0:0	6	->
water	54:66	0:0	6	data
op	54:70	0:0	6	[
water	54:71	0:0	6	ch
op	54:73	0:0	6	]
op	54:74	0:0	6	.
water	54:75	0:0	6	Ypos
op	54:79	0:0	6	]
arg	55:18	55:80	5	(constfloat(*)[64][2])sbr->data[ch].Y[sbr->data[ch].Ypos]
water	55:18	0:0	6	(
water	55:19	0:0	6	const
call	55:25	55:33	6	float
arg	55:32	55:33	7	*
op	55:32	0:0	8	*
op	55:34	0:0	6	[
water	55:35	0:0	6	64
op	55:37	0:0	6	]
op	55:38	0:0	6	[
water	55:39	0:0	6	2
op	55:40	0:0	6	]
water	55:41	0:0	6	)
water	55:43	0:0	6	sbr
op	55:46	0:0	6	->
water	55:48	0:0	6	data
op	55:52	0:0	6	[
water	55:53	0:0	6	ch
op	55:55	0:0	6	]
op	55:56	0:0	6	.
water	55:57	0:0	6	Y
op	55:58	0:0	6	[
water	55:61	0:0	6	sbr
op	55:64	0:0	6	->
water	55:66	0:0	6	data
op	55:70	0:0	6	[
water	55:71	0:0	6	ch
op	55:73	0:0	6	]
op	55:74	0:0	6	.
water	55:75	0:0	6	Ypos
op	55:79	0:0	6	]
arg	56:18	56:53	5	(constfloat(*)[40][2])sbr->X_low
water	56:18	0:0	6	(
water	56:19	0:0	6	const
call	56:25	56:33	6	float
arg	56:32	56:33	7	*
op	56:32	0:0	8	*
op	56:34	0:0	6	[
water	56:35	0:0	6	40
op	56:37	0:0	6	]
op	56:38	0:0	6	[
water	56:39	0:0	6	2
op	56:40	0:0	6	]
water	56:41	0:0	6	)
water	56:43	0:0	6	sbr
op	56:46	0:0	6	->
water	56:48	0:0	6	X_low
arg	56:55	56:57	5	ch
water	56:55	0:0	6	ch
water	56:58	0:0	4	;
water	57:4	0:0	4	}
if	59:4	66:4	2	(ac -> oc [ 1 ] . m4ac . ps == 1)
cond	59:8	59:29	3	ac -> oc [ 1 ] . m4ac . ps == 1
water	59:8	0:0	4	ac
op	59:10	0:0	4	->
water	59:12	0:0	4	oc
op	59:14	0:0	4	[
water	59:15	0:0	4	1
op	59:16	0:0	4	]
op	59:17	0:0	4	.
water	59:18	0:0	4	m4ac
op	59:22	0:0	4	.
water	59:23	0:0	4	ps
op	59:26	0:0	4	==
water	59:29	0:0	4	1
stmts	59:32	66:4	3	
water	59:32	0:0	4	{
if	60:8	62:8	4	(sbr -> ps . start)
cond	60:12	60:20	5	sbr -> ps . start
water	60:12	0:0	6	sbr
op	60:15	0:0	6	->
water	60:17	0:0	6	ps
op	60:19	0:0	6	.
water	60:20	0:0	6	start
stmts	60:27	62:8	5	
water	60:27	0:0	6	{
call	61:12	61:89	6	ff_ps_apply
arg	61:24	61:33	7	ac->avctx
water	61:24	0:0	8	ac
op	61:26	0:0	8	->
water	61:28	0:0	8	avctx
arg	61:35	61:43	7	&sbr->ps
op	61:35	0:0	8	&
water	61:36	0:0	8	sbr
op	61:39	0:0	8	->
water	61:41	0:0	8	ps
arg	61:45	61:54	7	sbr->X[0]
water	61:45	0:0	8	sbr
op	61:48	0:0	8	->
water	61:50	0:0	8	X
op	61:51	0:0	8	[
water	61:52	0:0	8	0
op	61:53	0:0	8	]
arg	61:56	61:65	7	sbr->X[1]
water	61:56	0:0	8	sbr
op	61:59	0:0	8	->
water	61:61	0:0	8	X
op	61:62	0:0	8	[
water	61:63	0:0	8	1
op	61:64	0:0	8	]
arg	61:67	61:89	7	sbr->kx[1]+sbr->m[1]
water	61:67	0:0	8	sbr
op	61:70	0:0	8	->
water	61:72	0:0	8	kx
op	61:74	0:0	8	[
water	61:75	0:0	8	1
op	61:76	0:0	8	]
op	61:78	0:0	8	+
water	61:80	0:0	8	sbr
op	61:83	0:0	8	->
water	61:85	0:0	8	m
op	61:86	0:0	8	[
water	61:87	0:0	8	1
op	61:88	0:0	8	]
water	61:90	0:0	6	;
water	62:8	0:0	6	}
else	62:10	64:8	4
stmts	62:15	64:8	5	
water	62:15	0:0	6	{
call	63:12	63:58	6	memcpy
arg	63:19	63:28	7	sbr->X[1]
water	63:19	0:0	8	sbr
op	63:22	0:0	8	->
water	63:24	0:0	8	X
op	63:25	0:0	8	[
water	63:26	0:0	8	1
op	63:27	0:0	8	]
arg	63:30	63:39	7	sbr->X[0]
water	63:30	0:0	8	sbr
op	63:33	0:0	8	->
water	63:35	0:0	8	X
op	63:36	0:0	8	[
water	63:37	0:0	8	0
op	63:38	0:0	8	]
arg	63:41	63:58	7	sizeof(sbr->X[0])
op	63:41	0:0	8	sizeof
water	63:47	0:0	8	(
water	63:48	0:0	8	sbr
op	63:51	0:0	8	->
water	63:53	0:0	8	X
op	63:54	0:0	8	[
water	63:55	0:0	8	0
op	63:56	0:0	8	]
water	63:57	0:0	8	)
water	63:59	0:0	6	;
water	64:8	0:0	6	}
water	65:8	0:0	4	nch
op	65:12	0:0	4	=
water	65:14	0:0	4	2
water	65:15	0:0	4	;
water	66:4	0:0	4	}
call	68:4	72:33	2	sbr_qmf_synthesis
arg	68:22	68:32	3	&sbr->mdct
op	68:22	0:0	4	&
water	68:23	0:0	4	sbr
op	68:26	0:0	4	->
water	68:28	0:0	4	mdct
arg	68:34	68:43	3	&sbr->dsp
op	68:34	0:0	4	&
water	68:35	0:0	4	sbr
op	68:38	0:0	4	->
water	68:40	0:0	4	dsp
arg	68:45	68:53	3	ac->fdsp
water	68:45	0:0	4	ac
op	68:47	0:0	4	->
water	68:49	0:0	4	fdsp
arg	69:22	69:23	3	L
water	69:22	0:0	4	L
arg	69:25	69:34	3	sbr->X[0]
water	69:25	0:0	4	sbr
op	69:28	0:0	4	->
water	69:30	0:0	4	X
op	69:31	0:0	4	[
water	69:32	0:0	4	0
op	69:33	0:0	4	]
arg	69:36	69:59	3	sbr->qmf_filter_scratch
water	69:36	0:0	4	sbr
op	69:39	0:0	4	->
water	69:41	0:0	4	qmf_filter_scratch
arg	70:22	70:63	3	sbr->data[0].synthesis_filterbank_samples
water	70:22	0:0	4	sbr
op	70:25	0:0	4	->
water	70:27	0:0	4	data
op	70:31	0:0	4	[
water	70:32	0:0	4	0
op	70:33	0:0	4	]
op	70:34	0:0	4	.
water	70:35	0:0	4	synthesis_filterbank_samples
arg	71:22	71:71	3	&sbr->data[0].synthesis_filterbank_samples_offset
op	71:22	0:0	4	&
water	71:23	0:0	4	sbr
op	71:26	0:0	4	->
water	71:28	0:0	4	data
op	71:32	0:0	4	[
water	71:33	0:0	4	0
op	71:34	0:0	4	]
op	71:35	0:0	4	.
water	71:36	0:0	4	synthesis_filterbank_samples_offset
arg	72:22	72:33	3	downsampled
water	72:22	0:0	4	downsampled
water	72:34	0:0	2	;
if	73:4	78:38	2	(nch == 2)
cond	73:8	73:15	3	nch == 2
water	73:8	0:0	4	nch
op	73:12	0:0	4	==
water	73:15	0:0	4	2
stmts	74:8	78:38	3	
call	74:8	78:37	4	sbr_qmf_synthesis
arg	74:26	74:36	5	&sbr->mdct
op	74:26	0:0	6	&
water	74:27	0:0	6	sbr
op	74:30	0:0	6	->
water	74:32	0:0	6	mdct
arg	74:38	74:47	5	&sbr->dsp
op	74:38	0:0	6	&
water	74:39	0:0	6	sbr
op	74:42	0:0	6	->
water	74:44	0:0	6	dsp
arg	74:49	74:57	5	ac->fdsp
water	74:49	0:0	6	ac
op	74:51	0:0	6	->
water	74:53	0:0	6	fdsp
arg	75:26	75:27	5	R
water	75:26	0:0	6	R
arg	75:29	75:38	5	sbr->X[1]
water	75:29	0:0	6	sbr
op	75:32	0:0	6	->
water	75:34	0:0	6	X
op	75:35	0:0	6	[
water	75:36	0:0	6	1
op	75:37	0:0	6	]
arg	75:40	75:63	5	sbr->qmf_filter_scratch
water	75:40	0:0	6	sbr
op	75:43	0:0	6	->
water	75:45	0:0	6	qmf_filter_scratch
arg	76:26	76:67	5	sbr->data[1].synthesis_filterbank_samples
water	76:26	0:0	6	sbr
op	76:29	0:0	6	->
water	76:31	0:0	6	data
op	76:35	0:0	6	[
water	76:36	0:0	6	1
op	76:37	0:0	6	]
op	76:38	0:0	6	.
water	76:39	0:0	6	synthesis_filterbank_samples
arg	77:26	77:75	5	&sbr->data[1].synthesis_filterbank_samples_offset
op	77:26	0:0	6	&
water	77:27	0:0	6	sbr
op	77:30	0:0	6	->
water	77:32	0:0	6	data
op	77:36	0:0	6	[
water	77:37	0:0	6	1
op	77:38	0:0	6	]
op	77:39	0:0	6	.
water	77:40	0:0	6	synthesis_filterbank_samples_offset
arg	78:26	78:37	5	downsampled
water	78:26	0:0	6	downsampled
water	78:38	0:0	4	;

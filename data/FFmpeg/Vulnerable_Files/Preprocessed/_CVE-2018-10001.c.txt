func	1:15	102:0	0	int	decode_init
params	1:30	0:0	1	
param	1:31	1:52	2	AVCodecContext *	avctx
stmnts	3:4	101:12	1	
water	3:4	0:0	2	UtvideoContext
op	3:19	0:0	2	*
water	3:21	0:0	2	const
water	3:27	0:0	2	c
op	3:29	0:0	2	=
water	3:31	0:0	2	avctx
op	3:36	0:0	2	->
water	3:38	0:0	2	priv_data
water	3:47	0:0	2	;
water	5:4	0:0	2	c
op	5:5	0:0	2	->
water	5:7	0:0	2	avctx
op	5:13	0:0	2	=
water	5:15	0:0	2	avctx
water	5:20	0:0	2	;
call	7:4	7:32	2	ff_utvideodsp_init
arg	7:23	7:32	3	&c->utdsp
op	7:23	0:0	4	&
water	7:24	0:0	4	c
op	7:25	0:0	4	->
water	7:27	0:0	4	utdsp
water	7:33	0:0	2	;
call	8:4	8:29	2	ff_bswapdsp_init
arg	8:21	8:29	3	&c->bdsp
op	8:21	0:0	4	&
water	8:22	0:0	4	c
op	8:23	0:0	4	->
water	8:25	0:0	4	bdsp
water	8:30	0:0	2	;
call	9:4	9:33	2	ff_llviddsp_init
arg	9:21	9:33	3	&c->llviddsp
op	9:21	0:0	4	&
water	9:22	0:0	4	c
op	9:23	0:0	4	->
water	9:25	0:0	4	llviddsp
water	9:34	0:0	2	;
if	11:4	26:4	2	(avctx -> extradata_size >= 16)
cond	11:8	11:33	3	avctx -> extradata_size >= 16
water	11:8	0:0	4	avctx
op	11:13	0:0	4	->
water	11:15	0:0	4	extradata_size
op	11:30	0:0	4	>=
water	11:33	0:0	4	16
stmts	11:37	26:4	3	
water	11:37	0:0	4	{
call	12:8	14:55	4	av_log
arg	12:15	12:20	5	avctx
water	12:15	0:0	6	avctx
arg	12:22	12:34	5	AV_LOG_DEBUG
water	12:22	0:0	6	AV_LOG_DEBUG
arg	12:36	12:67	5	"Encoder version %d.%d.%d.%d\n"
water	12:36	0:0	6	"Encoder version %d.%d.%d.%d\n"
arg	13:15	13:34	5	avctx->extradata[3]
water	13:15	0:0	6	avctx
op	13:20	0:0	6	->
water	13:22	0:0	6	extradata
op	13:31	0:0	6	[
water	13:32	0:0	6	3
op	13:33	0:0	6	]
arg	13:36	13:55	5	avctx->extradata[2]
water	13:36	0:0	6	avctx
op	13:41	0:0	6	->
water	13:43	0:0	6	extradata
op	13:52	0:0	6	[
water	13:53	0:0	6	2
op	13:54	0:0	6	]
arg	14:15	14:34	5	avctx->extradata[1]
water	14:15	0:0	6	avctx
op	14:20	0:0	6	->
water	14:22	0:0	6	extradata
op	14:31	0:0	6	[
water	14:32	0:0	6	1
op	14:33	0:0	6	]
arg	14:36	14:55	5	avctx->extradata[0]
water	14:36	0:0	6	avctx
op	14:41	0:0	6	->
water	14:43	0:0	6	extradata
op	14:52	0:0	6	[
water	14:53	0:0	6	0
op	14:54	0:0	6	]
water	14:56	0:0	4	;
call	15:8	16:44	4	av_log
arg	15:15	15:20	5	avctx
water	15:15	0:0	6	avctx
arg	15:22	15:34	5	AV_LOG_DEBUG
water	15:22	0:0	6	AV_LOG_DEBUG
arg	15:36	15:65	5	"Original format %"PRIX32"\n"
water	15:36	0:0	6	"Original format %"
water	15:55	0:0	6	PRIX32
water	15:61	0:0	6	"\n"
arg	16:15	16:44	5	AV_RB32(avctx->extradata+4)
call	16:15	16:43	6	AV_RB32
arg	16:23	16:43	7	avctx->extradata+4
water	16:23	0:0	8	avctx
op	16:28	0:0	8	->
water	16:30	0:0	8	extradata
op	16:40	0:0	8	+
water	16:42	0:0	8	4
water	16:45	0:0	4	;
water	17:8	0:0	4	c
op	17:9	0:0	4	->
water	17:11	0:0	4	frame_info_size
op	17:27	0:0	4	=
call	17:29	17:57	4	AV_RL32
arg	17:37	17:57	5	avctx->extradata+8
water	17:37	0:0	6	avctx
op	17:42	0:0	6	->
water	17:44	0:0	6	extradata
op	17:54	0:0	6	+
water	17:56	0:0	6	8
water	17:58	0:0	4	;
water	18:8	0:0	4	c
op	18:9	0:0	4	->
water	18:11	0:0	4	flags
op	18:27	0:0	4	=
call	18:29	18:58	4	AV_RL32
arg	18:37	18:58	5	avctx->extradata+12
water	18:37	0:0	6	avctx
op	18:42	0:0	6	->
water	18:44	0:0	6	extradata
op	18:54	0:0	6	+
water	18:56	0:0	6	12
water	18:59	0:0	4	;
if	20:8	21:66	4	(c -> frame_info_size != 4)
cond	20:12	20:34	5	c -> frame_info_size != 4
water	20:12	0:0	6	c
op	20:13	0:0	6	->
water	20:15	0:0	6	frame_info_size
op	20:31	0:0	6	!=
water	20:34	0:0	6	4
stmts	21:12	21:66	5	
call	21:12	21:65	6	avpriv_request_sample
arg	21:34	21:39	7	avctx
water	21:34	0:0	8	avctx
arg	21:41	21:65	7	"Frame info not 4 bytes"
water	21:41	0:0	8	"Frame info not 4 bytes"
water	21:66	0:0	6	;
call	22:8	22:81	4	av_log
arg	22:15	22:20	5	avctx
water	22:15	0:0	6	avctx
arg	22:22	22:34	5	AV_LOG_DEBUG
water	22:22	0:0	6	AV_LOG_DEBUG
arg	22:36	22:71	5	"Encoding parameters %08"PRIX32"\n"
water	22:36	0:0	6	"Encoding parameters %08"
water	22:61	0:0	6	PRIX32
water	22:67	0:0	6	"\n"
arg	22:73	22:81	5	c->flags
water	22:73	0:0	6	c
op	22:74	0:0	6	->
water	22:76	0:0	6	flags
water	22:82	0:0	4	;
water	23:8	0:0	4	c
op	23:9	0:0	4	->
water	23:11	0:0	4	slices
op	23:23	0:0	4	=
water	23:25	0:0	4	(
water	23:26	0:0	4	c
op	23:27	0:0	4	->
water	23:29	0:0	4	flags
op	23:35	0:0	4	>>
water	23:38	0:0	4	24
water	23:40	0:0	4	)
op	23:42	0:0	4	+
water	23:44	0:0	4	1
water	23:45	0:0	4	;
water	24:8	0:0	4	c
op	24:9	0:0	4	->
water	24:11	0:0	4	compression
op	24:23	0:0	4	=
water	24:25	0:0	4	c
op	24:26	0:0	4	->
water	24:28	0:0	4	flags
op	24:34	0:0	4	&
water	24:36	0:0	4	1
water	24:37	0:0	4	;
water	25:8	0:0	4	c
op	25:9	0:0	4	->
water	25:11	0:0	4	interlaced
op	25:23	0:0	4	=
water	25:25	0:0	4	c
op	25:26	0:0	4	->
water	25:28	0:0	4	flags
op	25:34	0:0	4	&
water	25:36	0:0	4	0
water	25:37	0:0	4	x800
water	25:41	0:0	4	;
water	26:4	0:0	4	}
else	26:6	35:4	2
stmts	26:11	35:4	3	
if	26:11	35:4	4	(avctx -> extradata_size == 8)
cond	26:15	26:40	5	avctx -> extradata_size == 8
water	26:15	0:0	6	avctx
op	26:20	0:0	6	->
water	26:22	0:0	6	extradata_size
op	26:37	0:0	6	==
water	26:40	0:0	6	8
stmts	26:43	35:4	5	
water	26:43	0:0	6	{
call	27:8	29:55	6	av_log
arg	27:15	27:20	7	avctx
water	27:15	0:0	8	avctx
arg	27:22	27:34	7	AV_LOG_DEBUG
water	27:22	0:0	8	AV_LOG_DEBUG
arg	27:36	27:67	7	"Encoder version %d.%d.%d.%d\n"
water	27:36	0:0	8	"Encoder version %d.%d.%d.%d\n"
arg	28:15	28:34	7	avctx->extradata[3]
water	28:15	0:0	8	avctx
op	28:20	0:0	8	->
water	28:22	0:0	8	extradata
op	28:31	0:0	8	[
water	28:32	0:0	8	3
op	28:33	0:0	8	]
arg	28:36	28:55	7	avctx->extradata[2]
water	28:36	0:0	8	avctx
op	28:41	0:0	8	->
water	28:43	0:0	8	extradata
op	28:52	0:0	8	[
water	28:53	0:0	8	2
op	28:54	0:0	8	]
arg	29:15	29:34	7	avctx->extradata[1]
water	29:15	0:0	8	avctx
op	29:20	0:0	8	->
water	29:22	0:0	8	extradata
op	29:31	0:0	8	[
water	29:32	0:0	8	1
op	29:33	0:0	8	]
arg	29:36	29:55	7	avctx->extradata[0]
water	29:36	0:0	8	avctx
op	29:41	0:0	8	->
water	29:43	0:0	8	extradata
op	29:52	0:0	8	[
water	29:53	0:0	8	0
op	29:54	0:0	8	]
water	29:56	0:0	6	;
call	30:8	31:44	6	av_log
arg	30:15	30:20	7	avctx
water	30:15	0:0	8	avctx
arg	30:22	30:34	7	AV_LOG_DEBUG
water	30:22	0:0	8	AV_LOG_DEBUG
arg	30:36	30:65	7	"Original format %"PRIX32"\n"
water	30:36	0:0	8	"Original format %"
water	30:55	0:0	8	PRIX32
water	30:61	0:0	8	"\n"
arg	31:15	31:44	7	AV_RB32(avctx->extradata+4)
call	31:15	31:43	8	AV_RB32
arg	31:23	31:43	9	avctx->extradata+4
water	31:23	0:0	10	avctx
op	31:28	0:0	10	->
water	31:30	0:0	10	extradata
op	31:40	0:0	10	+
water	31:42	0:0	10	4
water	31:45	0:0	6	;
water	32:8	0:0	6	c
op	32:9	0:0	6	->
water	32:11	0:0	6	interlaced
op	32:23	0:0	6	=
water	32:25	0:0	6	0
water	32:26	0:0	6	;
water	33:8	0:0	6	c
op	33:9	0:0	6	->
water	33:11	0:0	6	pro
op	33:23	0:0	6	=
water	33:25	0:0	6	1
water	33:26	0:0	6	;
water	34:8	0:0	6	c
op	34:9	0:0	6	->
water	34:11	0:0	6	frame_info_size
op	34:27	0:0	6	=
water	34:29	0:0	6	4
water	34:30	0:0	6	;
water	35:4	0:0	6	}
else	35:6	40:4	2
stmts	35:11	40:4	3	
water	35:11	0:0	4	{
call	36:8	38:36	4	av_log
arg	36:15	36:20	5	avctx
water	36:15	0:0	6	avctx
arg	36:22	36:34	5	AV_LOG_ERROR
water	36:22	0:0	6	AV_LOG_ERROR
arg	37:15	37:72	5	"Insufficient extradata size %d, should be at least 16\n"
water	37:15	0:0	6	"Insufficient extradata size %d, should be at least 16\n"
arg	38:15	38:36	5	avctx->extradata_size
water	38:15	0:0	6	avctx
op	38:20	0:0	6	->
water	38:22	0:0	6	extradata_size
water	38:37	0:0	4	;
return	39:8	39:34	4	AVERROR_INVALIDDATA
water	39:15	0:0	5	AVERROR_INVALIDDATA
water	40:4	0:0	4	}
water	42:4	0:0	2	c
op	42:5	0:0	2	->
water	42:7	0:0	2	slice_bits_size
op	42:23	0:0	2	=
water	42:25	0:0	2	0
water	42:26	0:0	2	;
switch	44:4	99:4	2	(avctx -> codec_tag)
cond	44:12	44:19	3	avctx -> codec_tag
water	44:12	0:0	4	avctx
op	44:17	0:0	4	->
water	44:19	0:0	4	codec_tag
stmts	44:30	99:4	3	
water	44:30	0:0	4	{
water	45:4	0:0	4	case
call	45:9	45:33	4	MKTAG
arg	45:15	45:18	5	'U'
water	45:15	0:0	6	'U'
arg	45:20	45:23	5	'L'
water	45:20	0:0	6	'L'
arg	45:25	45:28	5	'R'
water	45:25	0:0	6	'R'
arg	45:30	45:33	5	'G'
water	45:30	0:0	6	'G'
water	45:34	0:0	4	:
water	46:8	0:0	4	c
op	46:9	0:0	4	->
water	46:11	0:0	4	planes
op	46:23	0:0	4	=
water	46:25	0:0	4	3
water	46:26	0:0	4	;
water	47:8	0:0	4	avctx
op	47:13	0:0	4	->
water	47:15	0:0	4	pix_fmt
op	47:23	0:0	4	=
water	47:25	0:0	4	AV_PIX_FMT_GBRP
water	47:40	0:0	4	;
break	48:8	48:13	4	
water	49:4	0:0	4	case
call	49:9	49:33	4	MKTAG
arg	49:15	49:18	5	'U'
water	49:15	0:0	6	'U'
arg	49:20	49:23	5	'L'
water	49:20	0:0	6	'L'
arg	49:25	49:28	5	'R'
water	49:25	0:0	6	'R'
arg	49:30	49:33	5	'A'
water	49:30	0:0	6	'A'
water	49:34	0:0	4	:
water	50:8	0:0	4	c
op	50:9	0:0	4	->
water	50:11	0:0	4	planes
op	50:23	0:0	4	=
water	50:25	0:0	4	4
water	50:26	0:0	4	;
water	51:8	0:0	4	avctx
op	51:13	0:0	4	->
water	51:15	0:0	4	pix_fmt
op	51:23	0:0	4	=
water	51:25	0:0	4	AV_PIX_FMT_GBRAP
water	51:41	0:0	4	;
break	52:8	52:13	4	
water	53:4	0:0	4	case
call	53:9	53:33	4	MKTAG
arg	53:15	53:18	5	'U'
water	53:15	0:0	6	'U'
arg	53:20	53:23	5	'L'
water	53:20	0:0	6	'L'
arg	53:25	53:28	5	'Y'
water	53:25	0:0	6	'Y'
arg	53:30	53:33	5	'0'
water	53:30	0:0	6	'0'
water	53:34	0:0	4	:
water	54:8	0:0	4	c
op	54:9	0:0	4	->
water	54:11	0:0	4	planes
op	54:23	0:0	4	=
water	54:25	0:0	4	3
water	54:26	0:0	4	;
water	55:8	0:0	4	avctx
op	55:13	0:0	4	->
water	55:15	0:0	4	pix_fmt
op	55:23	0:0	4	=
water	55:25	0:0	4	AV_PIX_FMT_YUV420P
water	55:43	0:0	4	;
water	56:8	0:0	4	avctx
op	56:13	0:0	4	->
water	56:15	0:0	4	colorspace
op	56:26	0:0	4	=
water	56:28	0:0	4	AVCOL_SPC_BT470BG
water	56:45	0:0	4	;
break	57:8	57:13	4	
water	58:4	0:0	4	case
call	58:9	58:33	4	MKTAG
arg	58:15	58:18	5	'U'
water	58:15	0:0	6	'U'
arg	58:20	58:23	5	'L'
water	58:20	0:0	6	'L'
arg	58:25	58:28	5	'Y'
water	58:25	0:0	6	'Y'
arg	58:30	58:33	5	'2'
water	58:30	0:0	6	'2'
water	58:34	0:0	4	:
water	59:8	0:0	4	c
op	59:9	0:0	4	->
water	59:11	0:0	4	planes
op	59:23	0:0	4	=
water	59:25	0:0	4	3
water	59:26	0:0	4	;
water	60:8	0:0	4	avctx
op	60:13	0:0	4	->
water	60:15	0:0	4	pix_fmt
op	60:23	0:0	4	=
water	60:25	0:0	4	AV_PIX_FMT_YUV422P
water	60:43	0:0	4	;
water	61:8	0:0	4	avctx
op	61:13	0:0	4	->
water	61:15	0:0	4	colorspace
op	61:26	0:0	4	=
water	61:28	0:0	4	AVCOL_SPC_BT470BG
water	61:45	0:0	4	;
break	62:8	62:13	4	
water	63:4	0:0	4	case
call	63:9	63:33	4	MKTAG
arg	63:15	63:18	5	'U'
water	63:15	0:0	6	'U'
arg	63:20	63:23	5	'L'
water	63:20	0:0	6	'L'
arg	63:25	63:28	5	'Y'
water	63:25	0:0	6	'Y'
arg	63:30	63:33	5	'4'
water	63:30	0:0	6	'4'
water	63:34	0:0	4	:
water	64:8	0:0	4	c
op	64:9	0:0	4	->
water	64:11	0:0	4	planes
op	64:23	0:0	4	=
water	64:25	0:0	4	3
water	64:26	0:0	4	;
water	65:8	0:0	4	avctx
op	65:13	0:0	4	->
water	65:15	0:0	4	pix_fmt
op	65:23	0:0	4	=
water	65:25	0:0	4	AV_PIX_FMT_YUV444P
water	65:43	0:0	4	;
water	66:8	0:0	4	avctx
op	66:13	0:0	4	->
water	66:15	0:0	4	colorspace
op	66:26	0:0	4	=
water	66:28	0:0	4	AVCOL_SPC_BT470BG
water	66:45	0:0	4	;
break	67:8	67:13	4	
water	68:4	0:0	4	case
call	68:9	68:33	4	MKTAG
arg	68:15	68:18	5	'U'
water	68:15	0:0	6	'U'
arg	68:20	68:23	5	'Q'
water	68:20	0:0	6	'Q'
arg	68:25	68:28	5	'Y'
water	68:25	0:0	6	'Y'
arg	68:30	68:33	5	'2'
water	68:30	0:0	6	'2'
water	68:34	0:0	4	:
water	69:8	0:0	4	c
op	69:9	0:0	4	->
water	69:11	0:0	4	planes
op	69:23	0:0	4	=
water	69:25	0:0	4	3
water	69:26	0:0	4	;
water	70:8	0:0	4	avctx
op	70:13	0:0	4	->
water	70:15	0:0	4	pix_fmt
op	70:23	0:0	4	=
water	70:25	0:0	4	AV_PIX_FMT_YUV422P10
water	70:45	0:0	4	;
break	71:8	71:13	4	
water	72:4	0:0	4	case
call	72:9	72:33	4	MKTAG
arg	72:15	72:18	5	'U'
water	72:15	0:0	6	'U'
arg	72:20	72:23	5	'Q'
water	72:20	0:0	6	'Q'
arg	72:25	72:28	5	'R'
water	72:25	0:0	6	'R'
arg	72:30	72:33	5	'G'
water	72:30	0:0	6	'G'
water	72:34	0:0	4	:
water	73:8	0:0	4	c
op	73:9	0:0	4	->
water	73:11	0:0	4	planes
op	73:23	0:0	4	=
water	73:25	0:0	4	3
water	73:26	0:0	4	;
water	74:8	0:0	4	avctx
op	74:13	0:0	4	->
water	74:15	0:0	4	pix_fmt
op	74:23	0:0	4	=
water	74:25	0:0	4	AV_PIX_FMT_GBRP10
water	74:42	0:0	4	;
break	75:8	75:13	4	
water	76:4	0:0	4	case
call	76:9	76:33	4	MKTAG
arg	76:15	76:18	5	'U'
water	76:15	0:0	6	'U'
arg	76:20	76:23	5	'Q'
water	76:20	0:0	6	'Q'
arg	76:25	76:28	5	'R'
water	76:25	0:0	6	'R'
arg	76:30	76:33	5	'A'
water	76:30	0:0	6	'A'
water	76:34	0:0	4	:
water	77:8	0:0	4	c
op	77:9	0:0	4	->
water	77:11	0:0	4	planes
op	77:23	0:0	4	=
water	77:25	0:0	4	4
water	77:26	0:0	4	;
water	78:8	0:0	4	avctx
op	78:13	0:0	4	->
water	78:15	0:0	4	pix_fmt
op	78:23	0:0	4	=
water	78:25	0:0	4	AV_PIX_FMT_GBRAP10
water	78:43	0:0	4	;
break	79:8	79:13	4	
water	80:4	0:0	4	case
call	80:9	80:33	4	MKTAG
arg	80:15	80:18	5	'U'
water	80:15	0:0	6	'U'
arg	80:20	80:23	5	'L'
water	80:20	0:0	6	'L'
arg	80:25	80:28	5	'H'
water	80:25	0:0	6	'H'
arg	80:30	80:33	5	'0'
water	80:30	0:0	6	'0'
water	80:34	0:0	4	:
water	81:8	0:0	4	c
op	81:9	0:0	4	->
water	81:11	0:0	4	planes
op	81:23	0:0	4	=
water	81:25	0:0	4	3
water	81:26	0:0	4	;
water	82:8	0:0	4	avctx
op	82:13	0:0	4	->
water	82:15	0:0	4	pix_fmt
op	82:23	0:0	4	=
water	82:25	0:0	4	AV_PIX_FMT_YUV420P
water	82:43	0:0	4	;
water	83:8	0:0	4	avctx
op	83:13	0:0	4	->
water	83:15	0:0	4	colorspace
op	83:26	0:0	4	=
water	83:28	0:0	4	AVCOL_SPC_BT709
water	83:43	0:0	4	;
break	84:8	84:13	4	
water	85:4	0:0	4	case
call	85:9	85:33	4	MKTAG
arg	85:15	85:18	5	'U'
water	85:15	0:0	6	'U'
arg	85:20	85:23	5	'L'
water	85:20	0:0	6	'L'
arg	85:25	85:28	5	'H'
water	85:25	0:0	6	'H'
arg	85:30	85:33	5	'2'
water	85:30	0:0	6	'2'
water	85:34	0:0	4	:
water	86:8	0:0	4	c
op	86:9	0:0	4	->
water	86:11	0:0	4	planes
op	86:23	0:0	4	=
water	86:25	0:0	4	3
water	86:26	0:0	4	;
water	87:8	0:0	4	avctx
op	87:13	0:0	4	->
water	87:15	0:0	4	pix_fmt
op	87:23	0:0	4	=
water	87:25	0:0	4	AV_PIX_FMT_YUV422P
water	87:43	0:0	4	;
water	88:8	0:0	4	avctx
op	88:13	0:0	4	->
water	88:15	0:0	4	colorspace
op	88:26	0:0	4	=
water	88:28	0:0	4	AVCOL_SPC_BT709
water	88:43	0:0	4	;
break	89:8	89:13	4	
water	90:4	0:0	4	case
call	90:9	90:33	4	MKTAG
arg	90:15	90:18	5	'U'
water	90:15	0:0	6	'U'
arg	90:20	90:23	5	'L'
water	90:20	0:0	6	'L'
arg	90:25	90:28	5	'H'
water	90:25	0:0	6	'H'
arg	90:30	90:33	5	'4'
water	90:30	0:0	6	'4'
water	90:34	0:0	4	:
water	91:8	0:0	4	c
op	91:9	0:0	4	->
water	91:11	0:0	4	planes
op	91:23	0:0	4	=
water	91:25	0:0	4	3
water	91:26	0:0	4	;
water	92:8	0:0	4	avctx
op	92:13	0:0	4	->
water	92:15	0:0	4	pix_fmt
op	92:23	0:0	4	=
water	92:25	0:0	4	AV_PIX_FMT_YUV444P
water	92:43	0:0	4	;
water	93:8	0:0	4	avctx
op	93:13	0:0	4	->
water	93:15	0:0	4	colorspace
op	93:26	0:0	4	=
water	93:28	0:0	4	AVCOL_SPC_BT709
water	93:43	0:0	4	;
break	94:8	94:13	4	
label	95:4	95:11	4	default :
call	96:8	97:31	4	av_log
arg	96:15	96:20	5	avctx
water	96:15	0:0	6	avctx
arg	96:22	96:34	5	AV_LOG_ERROR
water	96:22	0:0	6	AV_LOG_ERROR
arg	96:36	96:79	5	"Unknown Ut Video FOURCC provided (%08X)\n"
water	96:36	0:0	6	"Unknown Ut Video FOURCC provided (%08X)\n"
arg	97:15	97:31	5	avctx->codec_tag
water	97:15	0:0	6	avctx
op	97:20	0:0	6	->
water	97:22	0:0	6	codec_tag
water	97:32	0:0	4	;
return	98:8	98:34	4	AVERROR_INVALIDDATA
water	98:15	0:0	5	AVERROR_INVALIDDATA
water	99:4	0:0	4	}
return	101:4	101:12	2	0
water	101:11	0:0	3	0

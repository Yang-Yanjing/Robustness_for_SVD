func	1:0	39:0	0	static void	read_quant_matrix_ext
params	1:33	0:0	1	
param	1:34	1:51	2	MpegEncContext *	s
param	1:53	1:70	2	GetBitContext *	gb
stmnts	0:0	38:30	1	
decl	3:4	3:15	2	int	i
water	3:9	0:0	2	,
decl	3:4	3:15	2	int	j
water	3:12	0:0	2	,
decl	3:4	3:15	2	int	v
if	5:4	13:4	2	(get_bits1 (gb ))
cond	5:8	5:20	3	get_bits1 (gb )
call	5:8	5:20	4	get_bits1
arg	5:18	5:20	5	gb
water	5:18	0:0	6	gb
stmts	5:23	13:4	3	
water	5:23	0:0	4	{
for	7:8	12:8	4	(i = 0 ;i < 64;i ++)
forinit	7:13	7:18	5	i = 0 ;
water	7:13	0:0	6	i
op	7:15	0:0	6	=
water	7:17	0:0	6	0
water	7:18	0:0	6	;
cond	7:20	7:24	5	i < 64
water	7:20	0:0	6	i
op	7:22	0:0	6	<
water	7:24	0:0	6	64
forexpr	7:28	7:29	5	i ++
water	7:28	0:0	6	i
op	7:29	0:0	6	++
stmts	7:33	12:8	5	
water	7:33	0:0	6	{
water	8:12	0:0	6	v
op	8:14	0:0	6	=
call	8:16	8:30	6	get_bits
arg	8:25	8:27	7	gb
water	8:25	0:0	8	gb
arg	8:29	8:30	7	8
water	8:29	0:0	8	8
water	8:31	0:0	6	;
water	9:12	0:0	6	j
op	9:14	0:0	6	=
water	9:16	0:0	6	s
op	9:17	0:0	6	->
water	9:19	0:0	6	idsp
op	9:23	0:0	6	.
water	9:24	0:0	6	idct_permutation
op	9:40	0:0	6	[
water	9:41	0:0	6	ff_zigzag_direct
op	9:57	0:0	6	[
water	9:58	0:0	6	i
op	9:59	0:0	6	]
op	9:60	0:0	6	]
water	9:61	0:0	6	;
water	10:12	0:0	6	s
op	10:13	0:0	6	->
water	10:15	0:0	6	intra_matrix
op	10:27	0:0	6	[
water	10:28	0:0	6	j
op	10:29	0:0	6	]
op	10:38	0:0	6	=
water	10:40	0:0	6	v
water	10:41	0:0	6	;
water	11:12	0:0	6	s
op	11:13	0:0	6	->
water	11:15	0:0	6	chroma_intra_matrix
op	11:34	0:0	6	[
water	11:35	0:0	6	j
op	11:36	0:0	6	]
op	11:38	0:0	6	=
water	11:40	0:0	6	v
water	11:41	0:0	6	;
water	12:8	0:0	6	}
water	13:4	0:0	4	}
if	15:4	20:4	2	(get_bits1 (gb ))
cond	15:8	15:20	3	get_bits1 (gb )
call	15:8	15:20	4	get_bits1
arg	15:18	15:20	5	gb
water	15:18	0:0	6	gb
stmts	15:23	20:4	3	
water	15:23	0:0	4	{
for	17:8	19:8	4	(i = 0 ;i < 64;i ++)
forinit	17:13	17:18	5	i = 0 ;
water	17:13	0:0	6	i
op	17:15	0:0	6	=
water	17:17	0:0	6	0
water	17:18	0:0	6	;
cond	17:20	17:24	5	i < 64
water	17:20	0:0	6	i
op	17:22	0:0	6	<
water	17:24	0:0	6	64
forexpr	17:28	17:29	5	i ++
water	17:28	0:0	6	i
op	17:29	0:0	6	++
stmts	17:33	19:8	5	
water	17:33	0:0	6	{
call	18:12	18:26	6	get_bits
arg	18:21	18:23	7	gb
water	18:21	0:0	8	gb
arg	18:25	18:26	7	8
water	18:25	0:0	8	8
water	18:27	0:0	6	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}
if	22:4	29:4	2	(get_bits1 (gb ))
cond	22:8	22:20	3	get_bits1 (gb )
call	22:8	22:20	4	get_bits1
arg	22:18	22:20	5	gb
water	22:18	0:0	6	gb
stmts	22:23	29:4	3	
water	22:23	0:0	4	{
for	24:8	28:8	4	(i = 0 ;i < 64;i ++)
forinit	24:13	24:18	5	i = 0 ;
water	24:13	0:0	6	i
op	24:15	0:0	6	=
water	24:17	0:0	6	0
water	24:18	0:0	6	;
cond	24:20	24:24	5	i < 64
water	24:20	0:0	6	i
op	24:22	0:0	6	<
water	24:24	0:0	6	64
forexpr	24:28	24:29	5	i ++
water	24:28	0:0	6	i
op	24:29	0:0	6	++
stmts	24:33	28:8	5	
water	24:33	0:0	6	{
water	25:12	0:0	6	v
op	25:14	0:0	6	=
call	25:16	25:30	6	get_bits
arg	25:25	25:27	7	gb
water	25:25	0:0	8	gb
arg	25:29	25:30	7	8
water	25:29	0:0	8	8
water	25:31	0:0	6	;
water	26:12	0:0	6	j
op	26:14	0:0	6	=
water	26:16	0:0	6	s
op	26:17	0:0	6	->
water	26:19	0:0	6	idsp
op	26:23	0:0	6	.
water	26:24	0:0	6	idct_permutation
op	26:40	0:0	6	[
water	26:41	0:0	6	ff_zigzag_direct
op	26:57	0:0	6	[
water	26:58	0:0	6	i
op	26:59	0:0	6	]
op	26:60	0:0	6	]
water	26:61	0:0	6	;
water	27:12	0:0	6	s
op	27:13	0:0	6	->
water	27:15	0:0	6	chroma_intra_matrix
op	27:34	0:0	6	[
water	27:35	0:0	6	j
op	27:36	0:0	6	]
op	27:38	0:0	6	=
water	27:40	0:0	6	v
water	27:41	0:0	6	;
water	28:8	0:0	6	}
water	29:4	0:0	4	}
if	31:4	36:4	2	(get_bits1 (gb ))
cond	31:8	31:20	3	get_bits1 (gb )
call	31:8	31:20	4	get_bits1
arg	31:18	31:20	5	gb
water	31:18	0:0	6	gb
stmts	31:23	36:4	3	
water	31:23	0:0	4	{
for	33:8	35:8	4	(i = 0 ;i < 64;i ++)
forinit	33:13	33:18	5	i = 0 ;
water	33:13	0:0	6	i
op	33:15	0:0	6	=
water	33:17	0:0	6	0
water	33:18	0:0	6	;
cond	33:20	33:24	5	i < 64
water	33:20	0:0	6	i
op	33:22	0:0	6	<
water	33:24	0:0	6	64
forexpr	33:28	33:29	5	i ++
water	33:28	0:0	6	i
op	33:29	0:0	6	++
stmts	33:33	35:8	5	
water	33:33	0:0	6	{
call	34:12	34:26	6	get_bits
arg	34:21	34:23	7	gb
water	34:21	0:0	8	gb
arg	34:25	34:26	7	8
water	34:25	0:0	8	8
water	34:27	0:0	6	;
water	35:8	0:0	6	}
water	36:4	0:0	4	}
call	38:4	38:29	2	next_start_code_studio
arg	38:27	38:29	3	gb
water	38:27	0:0	4	gb
water	38:30	0:0	2	;

func	2:0	95:0	0	int	ff_ass_split_override_codes
params	2:31	0:0	1	
param	2:32	2:66	2	const ASSCodesCallbacks *	callbacks
param	2:68	2:78	2	void *	priv
param	3:32	3:47	2	const char *	buf
stmnts	0:0	94:12	1	
decl	5:4	5:27	2	const char	*text
op	5:21	0:0	2	=
water	5:23	0:0	2	NULL
decl	6:4	6:20	2	char	new_line[2]
decl	7:4	7:20	2	int	text_len
op	7:17	0:0	2	=
water	7:19	0:0	2	0
while	9:4	89:4	2	(buf && * buf)
cond	9:11	9:19	3	buf && * buf
water	9:11	0:0	4	buf
op	9:15	0:0	4	&&
op	9:18	0:0	4	*
water	9:19	0:0	4	buf
stmts	9:24	89:4	3	
water	9:24	0:0	4	{
if	10:8	15:8	4	(text && callbacks -> text && (sscanf (buf ,"\\%1[nN]" ,new_line ) == 1 || !strncmp (buf ,"{\\" ,2 ) ))
cond	10:12	12:36	5	text && callbacks -> text && (sscanf (buf ,"\\%1[nN]" ,new_line ) == 1 || !strncmp (buf ,"{\\" ,2 ) )
water	10:12	0:0	6	text
op	10:17	0:0	6	&&
water	10:20	0:0	6	callbacks
op	10:29	0:0	6	->
water	10:31	0:0	6	text
op	10:36	0:0	6	&&
water	11:12	0:0	6	(
call	11:13	11:45	6	sscanf
arg	11:20	11:23	7	buf
water	11:20	0:0	8	buf
arg	11:25	11:35	7	"\\%1[nN]"
water	11:25	0:0	8	"\\%1[nN]"
arg	11:37	11:45	7	new_line
water	11:37	0:0	8	new_line
op	11:47	0:0	6	==
water	11:50	0:0	6	1
op	11:52	0:0	6	||
op	12:13	0:0	6	!
call	12:14	12:35	6	strncmp
arg	12:22	12:25	7	buf
water	12:22	0:0	8	buf
arg	12:27	12:32	7	"{\\"
water	12:27	0:0	8	"{\\"
arg	12:34	12:35	7	2
water	12:34	0:0	8	2
water	12:36	0:0	6	)
stmts	12:39	15:8	5	
water	12:39	0:0	6	{
call	13:12	13:48	6	callbacks->text
arg	13:28	13:32	7	priv
water	13:28	0:0	8	priv
arg	13:34	13:38	7	text
water	13:34	0:0	8	text
arg	13:40	13:48	7	text_len
water	13:40	0:0	8	text_len
water	13:49	0:0	6	;
water	14:12	0:0	6	text
op	14:17	0:0	6	=
water	14:19	0:0	6	NULL
water	14:23	0:0	6	;
water	15:8	0:0	6	}
if	16:8	20:8	4	(sscanf (buf ,"\\%1[nN]" ,new_line ) == 1)
cond	16:12	16:49	5	sscanf (buf ,"\\%1[nN]" ,new_line ) == 1
call	16:12	16:44	6	sscanf
arg	16:19	16:22	7	buf
water	16:19	0:0	8	buf
arg	16:24	16:34	7	"\\%1[nN]"
water	16:24	0:0	8	"\\%1[nN]"
arg	16:36	16:44	7	new_line
water	16:36	0:0	8	new_line
op	16:46	0:0	6	==
water	16:49	0:0	6	1
stmts	16:52	20:8	5	
water	16:52	0:0	6	{
if	17:12	18:61	6	(callbacks -> new_line)
cond	17:16	17:27	7	callbacks -> new_line
water	17:16	0:0	8	callbacks
op	17:25	0:0	8	->
water	17:27	0:0	8	new_line
stmts	18:16	18:61	7	
call	18:16	18:60	8	callbacks->new_line
arg	18:36	18:40	9	priv
water	18:36	0:0	10	priv
arg	18:42	18:60	9	new_line[0]=='N'
water	18:42	0:0	10	new_line
op	18:50	0:0	10	[
water	18:51	0:0	10	0
op	18:52	0:0	10	]
op	18:54	0:0	10	==
water	18:57	0:0	10	'N'
water	18:61	0:0	8	;
water	19:12	0:0	6	buf
op	19:16	0:0	6	+=
water	19:19	0:0	6	2
water	19:20	0:0	6	;
water	20:8	0:0	6	}
else	20:10	81:8	4
stmts	20:15	81:8	5	
if	20:15	81:8	6	(!strncmp (buf ,"{\\" ,2 ))
cond	20:19	20:41	7	!strncmp (buf ,"{\\" ,2 )
op	20:19	0:0	8	!
call	20:20	20:41	8	strncmp
arg	20:28	20:31	9	buf
water	20:28	0:0	10	buf
arg	20:33	20:38	9	"{\\"
water	20:33	0:0	10	"{\\"
arg	20:40	20:41	9	2
water	20:40	0:0	10	2
stmts	20:44	81:8	7	
water	20:44	0:0	8	{
water	21:12	0:0	8	buf
op	21:15	0:0	8	++
water	21:17	0:0	8	;
while	22:12	78:12	8	(* buf == '\\')
cond	22:19	22:27	9	* buf == '\\'
op	22:19	0:0	10	*
water	22:20	0:0	10	buf
op	22:24	0:0	10	==
water	22:27	0:0	10	'\\'
stmts	22:33	78:12	9	
water	22:33	0:0	10	{
decl	23:16	23:75	10	char	style[2]
water	23:29	0:0	10	,
decl	23:16	23:75	10	char	c[2]
water	23:35	0:0	10	,
decl	23:16	23:75	10	char	sep[2]
water	23:43	0:0	10	,
decl	23:16	23:75	10	char	c_num[2]
op	23:54	0:0	10	=
water	23:56	0:0	10	"0"
water	23:59	0:0	10	,
decl	23:16	23:75	10	char	tmp[128]
op	23:70	0:0	10	=
water	23:72	0:0	10	{
water	23:73	0:0	10	0
water	23:74	0:0	10	}
decl	24:16	24:47	10	unsigned int	color
op	24:35	0:0	10	=
water	24:37	0:0	10	0
water	24:38	0:0	10	xFFFFFFFF
decl	25:16	25:55	10	int	len
water	25:23	0:0	10	,
decl	25:16	25:55	10	int	size
op	25:30	0:0	10	=
op	25:32	0:0	10	-
water	25:33	0:0	10	1
water	25:34	0:0	10	,
decl	25:16	25:55	10	int	an
op	25:39	0:0	10	=
op	25:41	0:0	10	-
water	25:42	0:0	10	1
water	25:43	0:0	10	,
decl	25:16	25:55	10	int	alpha
op	25:51	0:0	10	=
op	25:53	0:0	10	-
water	25:54	0:0	10	1
decl	26:16	26:52	10	int	x1
water	26:22	0:0	10	,
decl	26:16	26:52	10	int	y1
water	26:26	0:0	10	,
decl	26:16	26:52	10	int	x2
water	26:30	0:0	10	,
decl	26:16	26:52	10	int	y2
water	26:34	0:0	10	,
decl	26:16	26:52	10	int	t1
op	26:39	0:0	10	=
op	26:41	0:0	10	-
water	26:42	0:0	10	1
water	26:43	0:0	10	,
decl	26:16	26:52	10	int	t2
op	26:48	0:0	10	=
op	26:50	0:0	10	-
water	26:51	0:0	10	1
if	27:16	32:16	10	(sscanf (buf ,"\\%1[bisu]%1[01\\}]%n" ,style ,c ,& len ) > 1)
cond	27:20	27:75	11	sscanf (buf ,"\\%1[bisu]%1[01\\}]%n" ,style ,c ,& len ) > 1
call	27:20	27:71	12	sscanf
arg	27:27	27:30	13	buf
water	27:27	0:0	14	buf
arg	27:32	27:55	13	"\\%1[bisu]%1[01\\}]%n"
water	27:32	0:0	14	"\\%1[bisu]%1[01\\}]%n"
arg	27:57	27:62	13	style
water	27:57	0:0	14	style
arg	27:64	27:65	13	c
water	27:64	0:0	14	c
arg	27:67	27:71	13	&len
op	27:67	0:0	14	&
water	27:68	0:0	14	len
op	27:73	0:0	12	>
water	27:75	0:0	12	1
stmts	27:78	32:16	11	
water	27:78	0:0	12	{
decl	28:20	28:70	12	int	close
op	28:30	0:0	12	=
water	28:32	0:0	12	c
op	28:33	0:0	12	[
water	28:34	0:0	12	0
op	28:35	0:0	12	]
op	28:37	0:0	12	==
water	28:40	0:0	12	'0'
water	28:44	0:0	12	?
water	28:46	0:0	12	1
water	28:48	0:0	12	:
water	28:50	0:0	12	c
op	28:51	0:0	12	[
water	28:52	0:0	12	0
op	28:53	0:0	12	]
op	28:55	0:0	12	==
water	28:58	0:0	12	'1'
water	28:62	0:0	12	?
water	28:64	0:0	12	0
water	28:66	0:0	12	:
op	28:68	0:0	12	-
water	28:69	0:0	12	1
water	29:20	0:0	12	len
op	29:24	0:0	12	+=
water	29:27	0:0	12	close
op	29:33	0:0	12	!=
op	29:36	0:0	12	-
water	29:37	0:0	12	1
water	29:38	0:0	12	;
if	30:20	31:63	12	(callbacks -> style)
cond	30:24	30:35	13	callbacks -> style
water	30:24	0:0	14	callbacks
op	30:33	0:0	14	->
water	30:35	0:0	14	style
stmts	31:24	31:63	13	
call	31:24	31:62	14	callbacks->style
arg	31:41	31:45	15	priv
water	31:41	0:0	16	priv
arg	31:47	31:55	15	style[0]
water	31:47	0:0	16	style
op	31:52	0:0	16	[
water	31:53	0:0	16	0
op	31:54	0:0	16	]
arg	31:57	31:62	15	close
water	31:57	0:0	16	close
water	31:63	0:0	14	;
water	32:16	0:0	12	}
else	32:18	38:16	10
stmts	32:23	38:16	11	
if	32:23	38:16	12	(sscanf (buf ,"\\c%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\c&H%X&%1[\\}]%n" ,& color ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]c%1[\\}]%n" ,c_num ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]c&H%X&%1[\\}]%n" ,c_num ,& color ,sep ,& len ) > 2)
cond	32:27	35:96	13	sscanf (buf ,"\\c%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\c&H%X&%1[\\}]%n" ,& color ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]c%1[\\}]%n" ,c_num ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]c&H%X&%1[\\}]%n" ,c_num ,& color ,sep ,& len ) > 2
call	32:27	32:64	14	sscanf
arg	32:34	32:37	15	buf
water	32:34	0:0	16	buf
arg	32:39	32:53	15	"\\c%1[\\}]%n"
water	32:39	0:0	16	"\\c%1[\\}]%n"
arg	32:55	32:58	15	sep
water	32:55	0:0	16	sep
arg	32:60	32:64	15	&len
op	32:60	0:0	16	&
water	32:61	0:0	16	len
op	32:66	0:0	14	>
water	32:68	0:0	14	0
op	32:70	0:0	14	||
call	33:27	33:77	14	sscanf
arg	33:34	33:37	15	buf
water	33:34	0:0	16	buf
arg	33:39	33:58	15	"\\c&H%X&%1[\\}]%n"
water	33:39	0:0	16	"\\c&H%X&%1[\\}]%n"
arg	33:60	33:66	15	&color
op	33:60	0:0	16	&
water	33:61	0:0	16	color
arg	33:68	33:71	15	sep
water	33:68	0:0	16	sep
arg	33:73	33:77	15	&len
op	33:73	0:0	16	&
water	33:74	0:0	16	len
op	33:79	0:0	14	>
water	33:81	0:0	14	1
op	33:83	0:0	14	||
call	34:27	34:79	14	sscanf
arg	34:34	34:37	15	buf
water	34:34	0:0	16	buf
arg	34:39	34:61	15	"\\%1[1234]c%1[\\}]%n"
water	34:39	0:0	16	"\\%1[1234]c%1[\\}]%n"
arg	34:63	34:68	15	c_num
water	34:63	0:0	16	c_num
arg	34:70	34:73	15	sep
water	34:70	0:0	16	sep
arg	34:75	34:79	15	&len
op	34:75	0:0	16	&
water	34:76	0:0	16	len
op	34:81	0:0	14	>
water	34:83	0:0	14	1
op	34:85	0:0	14	||
call	35:27	35:92	14	sscanf
arg	35:34	35:37	15	buf
water	35:34	0:0	16	buf
arg	35:39	35:66	15	"\\%1[1234]c&H%X&%1[\\}]%n"
water	35:39	0:0	16	"\\%1[1234]c&H%X&%1[\\}]%n"
arg	35:68	35:73	15	c_num
water	35:68	0:0	16	c_num
arg	35:75	35:81	15	&color
op	35:75	0:0	16	&
water	35:76	0:0	16	color
arg	35:83	35:86	15	sep
water	35:83	0:0	16	sep
arg	35:88	35:92	15	&len
op	35:88	0:0	16	&
water	35:89	0:0	16	len
op	35:94	0:0	14	>
water	35:96	0:0	14	2
stmts	35:99	38:16	13	
water	35:99	0:0	14	{
if	36:20	37:69	14	(callbacks -> color)
cond	36:24	36:35	15	callbacks -> color
water	36:24	0:0	16	callbacks
op	36:33	0:0	16	->
water	36:35	0:0	16	color
stmts	37:24	37:69	15	
call	37:24	37:68	16	callbacks->color
arg	37:41	37:45	17	priv
water	37:41	0:0	18	priv
arg	37:47	37:52	17	color
water	37:47	0:0	18	color
arg	37:54	37:68	17	c_num[0]-'0'
water	37:54	0:0	18	c_num
op	37:59	0:0	18	[
water	37:60	0:0	18	0
op	37:61	0:0	18	]
op	37:63	0:0	18	-
water	37:65	0:0	18	'0'
water	37:69	0:0	16	;
water	38:16	0:0	14	}
else	38:18	44:16	10
stmts	38:23	44:16	11	
if	38:23	44:16	12	(sscanf (buf ,"\\alpha%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\alpha&H%2X&%1[\\}]%n" ,& alpha ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]a%1[\\}]%n" ,c_num ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]a&H%2X&%1[\\}]%n" ,c_num ,& alpha ,sep ,& len ) > 2)
cond	38:27	41:97	13	sscanf (buf ,"\\alpha%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\alpha&H%2X&%1[\\}]%n" ,& alpha ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]a%1[\\}]%n" ,c_num ,sep ,& len ) > 1 ||sscanf (buf ,"\\%1[1234]a&H%2X&%1[\\}]%n" ,c_num ,& alpha ,sep ,& len ) > 2
call	38:27	38:68	14	sscanf
arg	38:34	38:37	15	buf
water	38:34	0:0	16	buf
arg	38:39	38:57	15	"\\alpha%1[\\}]%n"
water	38:39	0:0	16	"\\alpha%1[\\}]%n"
arg	38:59	38:62	15	sep
water	38:59	0:0	16	sep
arg	38:64	38:68	15	&len
op	38:64	0:0	16	&
water	38:65	0:0	16	len
op	38:70	0:0	14	>
water	38:72	0:0	14	0
op	38:74	0:0	14	||
call	39:27	39:82	14	sscanf
arg	39:34	39:37	15	buf
water	39:34	0:0	16	buf
arg	39:39	39:63	15	"\\alpha&H%2X&%1[\\}]%n"
water	39:39	0:0	16	"\\alpha&H%2X&%1[\\}]%n"
arg	39:65	39:71	15	&alpha
op	39:65	0:0	16	&
water	39:66	0:0	16	alpha
arg	39:73	39:76	15	sep
water	39:73	0:0	16	sep
arg	39:78	39:82	15	&len
op	39:78	0:0	16	&
water	39:79	0:0	16	len
op	39:84	0:0	14	>
water	39:86	0:0	14	1
op	39:88	0:0	14	||
call	40:27	40:79	14	sscanf
arg	40:34	40:37	15	buf
water	40:34	0:0	16	buf
arg	40:39	40:61	15	"\\%1[1234]a%1[\\}]%n"
water	40:39	0:0	16	"\\%1[1234]a%1[\\}]%n"
arg	40:63	40:68	15	c_num
water	40:63	0:0	16	c_num
arg	40:70	40:73	15	sep
water	40:70	0:0	16	sep
arg	40:75	40:79	15	&len
op	40:75	0:0	16	&
water	40:76	0:0	16	len
op	40:81	0:0	14	>
water	40:83	0:0	14	1
op	40:85	0:0	14	||
call	41:27	41:93	14	sscanf
arg	41:34	41:37	15	buf
water	41:34	0:0	16	buf
arg	41:39	41:67	15	"\\%1[1234]a&H%2X&%1[\\}]%n"
water	41:39	0:0	16	"\\%1[1234]a&H%2X&%1[\\}]%n"
arg	41:69	41:74	15	c_num
water	41:69	0:0	16	c_num
arg	41:76	41:82	15	&alpha
op	41:76	0:0	16	&
water	41:77	0:0	16	alpha
arg	41:84	41:87	15	sep
water	41:84	0:0	16	sep
arg	41:89	41:93	15	&len
op	41:89	0:0	16	&
water	41:90	0:0	16	len
op	41:95	0:0	14	>
water	41:97	0:0	14	2
stmts	41:100	44:16	13	
water	41:100	0:0	14	{
if	42:20	43:69	14	(callbacks -> alpha)
cond	42:24	42:35	15	callbacks -> alpha
water	42:24	0:0	16	callbacks
op	42:33	0:0	16	->
water	42:35	0:0	16	alpha
stmts	43:24	43:69	15	
call	43:24	43:68	16	callbacks->alpha
arg	43:41	43:45	17	priv
water	43:41	0:0	18	priv
arg	43:47	43:52	17	alpha
water	43:47	0:0	18	alpha
arg	43:54	43:68	17	c_num[0]-'0'
water	43:54	0:0	18	c_num
op	43:59	0:0	18	[
water	43:60	0:0	18	0
op	43:61	0:0	18	]
op	43:63	0:0	18	-
water	43:65	0:0	18	'0'
water	43:69	0:0	16	;
water	44:16	0:0	14	}
else	44:18	48:16	10
stmts	44:23	48:16	11	
if	44:23	48:16	12	(sscanf (buf ,"\\fn%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\fn%127[^\\}]%1[\\}]%n" ,tmp ,sep ,& len ) > 1)
cond	44:27	45:84	13	sscanf (buf ,"\\fn%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\fn%127[^\\}]%1[\\}]%n" ,tmp ,sep ,& len ) > 1
call	44:27	44:65	14	sscanf
arg	44:34	44:37	15	buf
water	44:34	0:0	16	buf
arg	44:39	44:54	15	"\\fn%1[\\}]%n"
water	44:39	0:0	16	"\\fn%1[\\}]%n"
arg	44:56	44:59	15	sep
water	44:56	0:0	16	sep
arg	44:61	44:65	15	&len
op	44:61	0:0	16	&
water	44:62	0:0	16	len
op	44:67	0:0	14	>
water	44:69	0:0	14	0
op	44:71	0:0	14	||
call	45:27	45:80	14	sscanf
arg	45:34	45:37	15	buf
water	45:34	0:0	16	buf
arg	45:39	45:64	15	"\\fn%127[^\\}]%1[\\}]%n"
water	45:39	0:0	16	"\\fn%127[^\\}]%1[\\}]%n"
arg	45:66	45:69	15	tmp
water	45:66	0:0	16	tmp
arg	45:71	45:74	15	sep
water	45:71	0:0	16	sep
arg	45:76	45:80	15	&len
op	45:76	0:0	16	&
water	45:77	0:0	16	len
op	45:82	0:0	14	>
water	45:84	0:0	14	1
stmts	45:87	48:16	13	
water	45:87	0:0	14	{
if	46:20	47:71	14	(callbacks -> font_name)
cond	46:24	46:35	15	callbacks -> font_name
water	46:24	0:0	16	callbacks
op	46:33	0:0	16	->
water	46:35	0:0	16	font_name
stmts	47:24	47:71	15	
call	47:24	47:70	16	callbacks->font_name
arg	47:45	47:49	17	priv
water	47:45	0:0	18	priv
arg	47:51	47:70	17	tmp[0]?tmp:NULL
water	47:51	0:0	18	tmp
op	47:54	0:0	18	[
water	47:55	0:0	18	0
op	47:56	0:0	18	]
water	47:58	0:0	18	?
water	47:60	0:0	18	tmp
water	47:64	0:0	18	:
water	47:66	0:0	18	NULL
water	47:71	0:0	16	;
water	48:16	0:0	14	}
else	48:18	52:16	10
stmts	48:23	52:16	11	
if	48:23	52:16	12	(sscanf (buf ,"\\fs%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\fs%u%1[\\}]%n" ,& size ,sep ,& len ) > 1)
cond	48:27	49:78	13	sscanf (buf ,"\\fs%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\fs%u%1[\\}]%n" ,& size ,sep ,& len ) > 1
call	48:27	48:65	14	sscanf
arg	48:34	48:37	15	buf
water	48:34	0:0	16	buf
arg	48:39	48:54	15	"\\fs%1[\\}]%n"
water	48:39	0:0	16	"\\fs%1[\\}]%n"
arg	48:56	48:59	15	sep
water	48:56	0:0	16	sep
arg	48:61	48:65	15	&len
op	48:61	0:0	16	&
water	48:62	0:0	16	len
op	48:67	0:0	14	>
water	48:69	0:0	14	0
op	48:71	0:0	14	||
call	49:27	49:74	14	sscanf
arg	49:34	49:37	15	buf
water	49:34	0:0	16	buf
arg	49:39	49:56	15	"\\fs%u%1[\\}]%n"
water	49:39	0:0	16	"\\fs%u%1[\\}]%n"
arg	49:58	49:63	15	&size
op	49:58	0:0	16	&
water	49:59	0:0	16	size
arg	49:65	49:68	15	sep
water	49:65	0:0	16	sep
arg	49:70	49:74	15	&len
op	49:70	0:0	16	&
water	49:71	0:0	16	len
op	49:76	0:0	14	>
water	49:78	0:0	14	1
stmts	49:81	52:16	13	
water	49:81	0:0	14	{
if	50:20	51:56	14	(callbacks -> font_size)
cond	50:24	50:35	15	callbacks -> font_size
water	50:24	0:0	16	callbacks
op	50:33	0:0	16	->
water	50:35	0:0	16	font_size
stmts	51:24	51:56	15	
call	51:24	51:55	16	callbacks->font_size
arg	51:45	51:49	17	priv
water	51:45	0:0	18	priv
arg	51:51	51:55	17	size
water	51:51	0:0	18	size
water	51:56	0:0	16	;
water	52:16	0:0	14	}
else	52:18	60:16	10
stmts	52:23	60:16	11	
if	52:23	60:16	12	(sscanf (buf ,"\\a%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\a%2u%1[\\}]%n" ,& an ,sep ,& len ) > 1 ||sscanf (buf ,"\\an%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\an%1u%1[\\}]%n" ,& an ,sep ,& len ) > 1)
cond	52:27	55:77	13	sscanf (buf ,"\\a%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\a%2u%1[\\}]%n" ,& an ,sep ,& len ) > 1 ||sscanf (buf ,"\\an%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\an%1u%1[\\}]%n" ,& an ,sep ,& len ) > 1
call	52:27	52:64	14	sscanf
arg	52:34	52:37	15	buf
water	52:34	0:0	16	buf
arg	52:39	52:53	15	"\\a%1[\\}]%n"
water	52:39	0:0	16	"\\a%1[\\}]%n"
arg	52:55	52:58	15	sep
water	52:55	0:0	16	sep
arg	52:60	52:64	15	&len
op	52:60	0:0	16	&
water	52:61	0:0	16	len
op	52:66	0:0	14	>
water	52:68	0:0	14	0
op	52:70	0:0	14	||
call	53:27	53:72	14	sscanf
arg	53:34	53:37	15	buf
water	53:34	0:0	16	buf
arg	53:39	53:56	15	"\\a%2u%1[\\}]%n"
water	53:39	0:0	16	"\\a%2u%1[\\}]%n"
arg	53:58	53:61	15	&an
op	53:58	0:0	16	&
water	53:59	0:0	16	an
arg	53:63	53:66	15	sep
water	53:63	0:0	16	sep
arg	53:68	53:72	15	&len
op	53:68	0:0	16	&
water	53:69	0:0	16	len
op	53:74	0:0	14	>
water	53:76	0:0	14	1
op	53:78	0:0	14	||
call	54:27	54:65	14	sscanf
arg	54:34	54:37	15	buf
water	54:34	0:0	16	buf
arg	54:39	54:54	15	"\\an%1[\\}]%n"
water	54:39	0:0	16	"\\an%1[\\}]%n"
arg	54:56	54:59	15	sep
water	54:56	0:0	16	sep
arg	54:61	54:65	15	&len
op	54:61	0:0	16	&
water	54:62	0:0	16	len
op	54:67	0:0	14	>
water	54:69	0:0	14	0
op	54:71	0:0	14	||
call	55:27	55:73	14	sscanf
arg	55:34	55:37	15	buf
water	55:34	0:0	16	buf
arg	55:39	55:57	15	"\\an%1u%1[\\}]%n"
water	55:39	0:0	16	"\\an%1u%1[\\}]%n"
arg	55:59	55:62	15	&an
op	55:59	0:0	16	&
water	55:60	0:0	16	an
arg	55:64	55:67	15	sep
water	55:64	0:0	16	sep
arg	55:69	55:73	15	&len
op	55:69	0:0	16	&
water	55:70	0:0	16	len
op	55:75	0:0	14	>
water	55:77	0:0	14	1
stmts	55:80	60:16	13	
water	55:80	0:0	14	{
if	56:20	57:63	14	(an != - 1 && buf [ 2 ] != 'n')
cond	56:24	56:46	15	an != - 1 && buf [ 2 ] != 'n'
water	56:24	0:0	16	an
op	56:27	0:0	16	!=
op	56:30	0:0	16	-
water	56:31	0:0	16	1
op	56:33	0:0	16	&&
water	56:36	0:0	16	buf
op	56:39	0:0	16	[
water	56:40	0:0	16	2
op	56:41	0:0	16	]
op	56:43	0:0	16	!=
water	56:46	0:0	16	'n'
stmts	57:24	57:63	15	
water	57:24	0:0	16	an
op	57:27	0:0	16	=
water	57:29	0:0	16	(
water	57:30	0:0	16	an
op	57:32	0:0	16	&
water	57:33	0:0	16	3
water	57:34	0:0	16	)
op	57:36	0:0	16	+
water	57:38	0:0	16	(
water	57:39	0:0	16	an
op	57:41	0:0	16	&
water	57:42	0:0	16	4
water	57:44	0:0	16	?
water	57:46	0:0	16	6
water	57:48	0:0	16	:
water	57:50	0:0	16	an
op	57:52	0:0	16	&
water	57:53	0:0	16	8
water	57:55	0:0	16	?
water	57:57	0:0	16	3
water	57:59	0:0	16	:
water	57:61	0:0	16	0
water	57:62	0:0	16	)
water	57:63	0:0	16	;
if	58:20	59:54	14	(callbacks -> alignment)
cond	58:24	58:35	15	callbacks -> alignment
water	58:24	0:0	16	callbacks
op	58:33	0:0	16	->
water	58:35	0:0	16	alignment
stmts	59:24	59:54	15	
call	59:24	59:53	16	callbacks->alignment
arg	59:45	59:49	17	priv
water	59:45	0:0	18	priv
arg	59:51	59:53	17	an
water	59:51	0:0	18	an
water	59:54	0:0	16	;
water	60:16	0:0	14	}
else	60:18	64:16	10
stmts	60:23	64:16	11	
if	60:23	64:16	12	(sscanf (buf ,"\\r%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\r%127[^\\}]%1[\\}]%n" ,tmp ,sep ,& len ) > 1)
cond	60:27	61:83	13	sscanf (buf ,"\\r%1[\\}]%n" ,sep ,& len ) > 0 ||sscanf (buf ,"\\r%127[^\\}]%1[\\}]%n" ,tmp ,sep ,& len ) > 1
call	60:27	60:64	14	sscanf
arg	60:34	60:37	15	buf
water	60:34	0:0	16	buf
arg	60:39	60:53	15	"\\r%1[\\}]%n"
water	60:39	0:0	16	"\\r%1[\\}]%n"
arg	60:55	60:58	15	sep
water	60:55	0:0	16	sep
arg	60:60	60:64	15	&len
op	60:60	0:0	16	&
water	60:61	0:0	16	len
op	60:66	0:0	14	>
water	60:68	0:0	14	0
op	60:70	0:0	14	||
call	61:27	61:79	14	sscanf
arg	61:34	61:37	15	buf
water	61:34	0:0	16	buf
arg	61:39	61:63	15	"\\r%127[^\\}]%1[\\}]%n"
water	61:39	0:0	16	"\\r%127[^\\}]%1[\\}]%n"
arg	61:65	61:68	15	tmp
water	61:65	0:0	16	tmp
arg	61:70	61:73	15	sep
water	61:70	0:0	16	sep
arg	61:75	61:79	15	&len
op	61:75	0:0	16	&
water	61:76	0:0	16	len
op	61:81	0:0	14	>
water	61:83	0:0	14	1
stmts	61:86	64:16	13	
water	61:86	0:0	14	{
if	62:20	63:62	14	(callbacks -> cancel_overrides)
cond	62:24	62:35	15	callbacks -> cancel_overrides
water	62:24	0:0	16	callbacks
op	62:33	0:0	16	->
water	62:35	0:0	16	cancel_overrides
stmts	63:24	63:62	15	
call	63:24	63:61	16	callbacks->cancel_overrides
arg	63:52	63:56	17	priv
water	63:52	0:0	18	priv
arg	63:58	63:61	17	tmp
water	63:58	0:0	18	tmp
water	63:62	0:0	16	;
water	64:16	0:0	14	}
else	64:18	68:16	10
stmts	64:23	68:16	11	
if	64:23	68:16	12	(sscanf (buf ,"\\move(%d,%d,%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,& x2 ,& y2 ,sep ,& len ) > 4 ||sscanf (buf ,"\\move(%d,%d,%d,%d,%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,& x2 ,& y2 ,& t1 ,& t2 ,sep ,& len ) > 6)
cond	64:27	65:120	13	sscanf (buf ,"\\move(%d,%d,%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,& x2 ,& y2 ,sep ,& len ) > 4 ||sscanf (buf ,"\\move(%d,%d,%d,%d,%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,& x2 ,& y2 ,& t1 ,& t2 ,sep ,& len ) > 6
call	64:27	64:100	14	sscanf
arg	64:34	64:37	15	buf
water	64:34	0:0	16	buf
arg	64:39	64:69	15	"\\move(%d,%d,%d,%d)%1[\\}]%n"
water	64:39	0:0	16	"\\move(%d,%d,%d,%d)%1[\\}]%n"
arg	64:71	64:74	15	&x1
op	64:71	0:0	16	&
water	64:72	0:0	16	x1
arg	64:76	64:79	15	&y1
op	64:76	0:0	16	&
water	64:77	0:0	16	y1
arg	64:81	64:84	15	&x2
op	64:81	0:0	16	&
water	64:82	0:0	16	x2
arg	64:86	64:89	15	&y2
op	64:86	0:0	16	&
water	64:87	0:0	16	y2
arg	64:91	64:94	15	sep
water	64:91	0:0	16	sep
arg	64:96	64:100	15	&len
op	64:96	0:0	16	&
water	64:97	0:0	16	len
op	64:102	0:0	14	>
water	64:104	0:0	14	4
op	64:106	0:0	14	||
call	65:27	65:116	14	sscanf
arg	65:34	65:37	15	buf
water	65:34	0:0	16	buf
arg	65:39	65:75	15	"\\move(%d,%d,%d,%d,%d,%d)%1[\\}]%n"
water	65:39	0:0	16	"\\move(%d,%d,%d,%d,%d,%d)%1[\\}]%n"
arg	65:77	65:80	15	&x1
op	65:77	0:0	16	&
water	65:78	0:0	16	x1
arg	65:82	65:85	15	&y1
op	65:82	0:0	16	&
water	65:83	0:0	16	y1
arg	65:87	65:90	15	&x2
op	65:87	0:0	16	&
water	65:88	0:0	16	x2
arg	65:92	65:95	15	&y2
op	65:92	0:0	16	&
water	65:93	0:0	16	y2
arg	65:97	65:100	15	&t1
op	65:97	0:0	16	&
water	65:98	0:0	16	t1
arg	65:102	65:105	15	&t2
op	65:102	0:0	16	&
water	65:103	0:0	16	t2
arg	65:107	65:110	15	sep
water	65:107	0:0	16	sep
arg	65:112	65:116	15	&len
op	65:112	0:0	16	&
water	65:113	0:0	16	len
op	65:118	0:0	14	>
water	65:120	0:0	14	6
stmts	65:123	68:16	13	
water	65:123	0:0	14	{
if	66:20	67:69	14	(callbacks -> move)
cond	66:24	66:35	15	callbacks -> move
water	66:24	0:0	16	callbacks
op	66:33	0:0	16	->
water	66:35	0:0	16	move
stmts	67:24	67:69	15	
call	67:24	67:68	16	callbacks->move
arg	67:40	67:44	17	priv
water	67:40	0:0	18	priv
arg	67:46	67:48	17	x1
water	67:46	0:0	18	x1
arg	67:50	67:52	17	y1
water	67:50	0:0	18	y1
arg	67:54	67:56	17	x2
water	67:54	0:0	18	x2
arg	67:58	67:60	17	y2
water	67:58	0:0	18	y2
arg	67:62	67:64	17	t1
water	67:62	0:0	18	t1
arg	67:66	67:68	17	t2
water	67:66	0:0	18	t2
water	67:69	0:0	16	;
water	68:16	0:0	14	}
else	68:18	71:16	10
stmts	68:23	71:16	11	
if	68:23	71:16	12	(sscanf (buf ,"\\pos(%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,sep ,& len ) > 2)
cond	68:27	68:87	13	sscanf (buf ,"\\pos(%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,sep ,& len ) > 2
call	68:27	68:83	14	sscanf
arg	68:34	68:37	15	buf
water	68:34	0:0	16	buf
arg	68:39	68:62	15	"\\pos(%d,%d)%1[\\}]%n"
water	68:39	0:0	16	"\\pos(%d,%d)%1[\\}]%n"
arg	68:64	68:67	15	&x1
op	68:64	0:0	16	&
water	68:65	0:0	16	x1
arg	68:69	68:72	15	&y1
op	68:69	0:0	16	&
water	68:70	0:0	16	y1
arg	68:74	68:77	15	sep
water	68:74	0:0	16	sep
arg	68:79	68:83	15	&len
op	68:79	0:0	16	&
water	68:80	0:0	16	len
op	68:85	0:0	14	>
water	68:87	0:0	14	2
stmts	68:90	71:16	13	
water	68:90	0:0	14	{
if	69:20	70:69	14	(callbacks -> move)
cond	69:24	69:35	15	callbacks -> move
water	69:24	0:0	16	callbacks
op	69:33	0:0	16	->
water	69:35	0:0	16	move
stmts	70:24	70:69	15	
call	70:24	70:68	16	callbacks->move
arg	70:40	70:44	17	priv
water	70:40	0:0	18	priv
arg	70:46	70:48	17	x1
water	70:46	0:0	18	x1
arg	70:50	70:52	17	y1
water	70:50	0:0	18	y1
arg	70:54	70:56	17	x1
water	70:54	0:0	18	x1
arg	70:58	70:60	17	y1
water	70:58	0:0	18	y1
arg	70:62	70:64	17	-1
op	70:62	0:0	18	-
water	70:63	0:0	18	1
arg	70:66	70:68	17	-1
op	70:66	0:0	18	-
water	70:67	0:0	18	1
water	70:69	0:0	16	;
water	71:16	0:0	14	}
else	71:18	74:16	10
stmts	71:23	74:16	11	
if	71:23	74:16	12	(sscanf (buf ,"\\org(%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,sep ,& len ) > 2)
cond	71:27	71:87	13	sscanf (buf ,"\\org(%d,%d)%1[\\}]%n" ,& x1 ,& y1 ,sep ,& len ) > 2
call	71:27	71:83	14	sscanf
arg	71:34	71:37	15	buf
water	71:34	0:0	16	buf
arg	71:39	71:62	15	"\\org(%d,%d)%1[\\}]%n"
water	71:39	0:0	16	"\\org(%d,%d)%1[\\}]%n"
arg	71:64	71:67	15	&x1
op	71:64	0:0	16	&
water	71:65	0:0	16	x1
arg	71:69	71:72	15	&y1
op	71:69	0:0	16	&
water	71:70	0:0	16	y1
arg	71:74	71:77	15	sep
water	71:74	0:0	16	sep
arg	71:79	71:83	15	&len
op	71:79	0:0	16	&
water	71:80	0:0	16	len
op	71:85	0:0	14	>
water	71:87	0:0	14	2
stmts	71:90	74:16	13	
water	71:90	0:0	14	{
if	72:20	73:55	14	(callbacks -> origin)
cond	72:24	72:35	15	callbacks -> origin
water	72:24	0:0	16	callbacks
op	72:33	0:0	16	->
water	72:35	0:0	16	origin
stmts	73:24	73:55	15	
call	73:24	73:54	16	callbacks->origin
arg	73:42	73:46	17	priv
water	73:42	0:0	18	priv
arg	73:48	73:50	17	x1
water	73:48	0:0	18	x1
arg	73:52	73:54	17	y1
water	73:52	0:0	18	y1
water	73:55	0:0	16	;
water	74:16	0:0	14	}
else	74:18	76:16	10
stmts	74:23	76:16	11	
water	74:23	0:0	12	{
water	75:20	0:0	12	len
op	75:24	0:0	12	=
call	75:26	75:46	12	strcspn
arg	75:34	75:39	13	buf+1
water	75:34	0:0	14	buf
op	75:37	0:0	14	+
water	75:38	0:0	14	1
arg	75:41	75:46	13	"\\}"
water	75:41	0:0	14	"\\}"
op	75:48	0:0	12	+
water	75:50	0:0	12	2
water	75:51	0:0	12	;
water	76:16	0:0	12	}
water	77:16	0:0	10	buf
op	77:20	0:0	10	+=
water	77:23	0:0	10	len
op	77:27	0:0	10	-
water	77:29	0:0	10	1
water	77:30	0:0	10	;
water	78:12	0:0	10	}
if	79:12	80:42	8	(* buf ++ != '}')
cond	79:16	79:26	9	* buf ++ != '}'
op	79:16	0:0	10	*
water	79:17	0:0	10	buf
op	79:20	0:0	10	++
op	79:23	0:0	10	!=
water	79:26	0:0	10	'}'
stmts	80:16	80:42	9	
return	80:16	80:42	10	AVERROR_INVALIDDATA
water	80:23	0:0	11	AVERROR_INVALIDDATA
water	81:8	0:0	8	}
else	81:10	88:8	4
stmts	81:15	88:8	5	
water	81:15	0:0	6	{
if	82:12	85:12	6	(! text)
cond	82:16	82:17	7	! text
op	82:16	0:0	8	!
water	82:17	0:0	8	text
stmts	82:23	85:12	7	
water	82:23	0:0	8	{
water	83:16	0:0	8	text
op	83:21	0:0	8	=
water	83:23	0:0	8	buf
water	83:26	0:0	8	;
water	84:16	0:0	8	text_len
op	84:25	0:0	8	=
water	84:27	0:0	8	1
water	84:28	0:0	8	;
water	85:12	0:0	8	}
else	85:14	86:26	6
stmts	86:16	86:26	7	
water	86:16	0:0	8	text_len
op	86:24	0:0	8	++
water	86:26	0:0	8	;
water	87:12	0:0	6	buf
op	87:15	0:0	6	++
water	87:17	0:0	6	;
water	88:8	0:0	6	}
water	89:4	0:0	4	}
if	90:4	91:45	2	(text && callbacks -> text)
cond	90:8	90:27	3	text && callbacks -> text
water	90:8	0:0	4	text
op	90:13	0:0	4	&&
water	90:16	0:0	4	callbacks
op	90:25	0:0	4	->
water	90:27	0:0	4	text
stmts	91:8	91:45	3	
call	91:8	91:44	4	callbacks->text
arg	91:24	91:28	5	priv
water	91:24	0:0	6	priv
arg	91:30	91:34	5	text
water	91:30	0:0	6	text
arg	91:36	91:44	5	text_len
water	91:36	0:0	6	text_len
water	91:45	0:0	4	;
if	92:4	93:28	2	(callbacks -> end)
cond	92:8	92:19	3	callbacks -> end
water	92:8	0:0	4	callbacks
op	92:17	0:0	4	->
water	92:19	0:0	4	end
stmts	93:8	93:28	3	
call	93:8	93:27	4	callbacks->end
arg	93:23	93:27	5	priv
water	93:23	0:0	6	priv
water	93:28	0:0	4	;
return	94:4	94:12	2	0
water	94:11	0:0	3	0

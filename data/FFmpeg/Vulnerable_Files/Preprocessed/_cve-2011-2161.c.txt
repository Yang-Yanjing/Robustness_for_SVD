func	2:0	181:0	0	static int	ape_read_header
params	2:26	0:0	1	
param	2:27	2:46	2	AVFormatContext *	s
param	2:48	2:71	2	AVFormatParameters *	ap
stmnts	0:0	180:12	1	
decl	4:4	4:29	2	ByteIOContext	*pb
op	4:22	0:0	2	=
water	4:24	0:0	2	s
op	4:25	0:0	2	->
water	4:27	0:0	2	pb
decl	5:4	5:34	2	APEContext	*ape
op	5:20	0:0	2	=
water	5:22	0:0	2	s
op	5:23	0:0	2	->
water	5:25	0:0	2	priv_data
decl	6:4	6:16	2	AVStream	*st
decl	7:4	7:16	2	uint32_t	tag
decl	8:4	8:9	2	int	i
decl	9:4	9:20	2	int	total_blocks
decl	10:4	10:15	2	int64_t	pts
water	13:4	0:0	2	ape
op	13:7	0:0	2	->
water	13:9	0:0	2	junklength
op	13:20	0:0	2	=
water	13:22	0:0	2	0
water	13:23	0:0	2	;
water	15:4	0:0	2	tag
op	15:8	0:0	2	=
call	15:10	15:21	2	get_le32
arg	15:19	15:21	3	pb
water	15:19	0:0	4	pb
water	15:22	0:0	2	;
if	16:4	17:17	2	(tag !=MKTAG ('M' ,'A' ,'C' ,' ' ))
cond	16:8	16:39	3	tag !=MKTAG ('M' ,'A' ,'C' ,' ' )
water	16:8	0:0	4	tag
op	16:12	0:0	4	!=
call	16:15	16:39	4	MKTAG
arg	16:21	16:24	5	'M'
water	16:21	0:0	6	'M'
arg	16:26	16:29	5	'A'
water	16:26	0:0	6	'A'
arg	16:31	16:34	5	'C'
water	16:31	0:0	6	'C'
arg	16:36	16:39	5	' '
water	16:36	0:0	6	' '
stmts	17:8	17:17	3	
return	17:8	17:17	4	-1
op	17:15	0:0	5	-
water	17:16	0:0	5	1
water	19:4	0:0	2	ape
op	19:7	0:0	2	->
water	19:9	0:0	2	fileversion
op	19:21	0:0	2	=
call	19:23	19:34	2	get_le16
arg	19:32	19:34	3	pb
water	19:32	0:0	4	pb
water	19:35	0:0	2	;
if	21:4	24:4	2	(ape -> fileversion < APE_MIN_VERSION || ape -> fileversion > APE_MAX_VERSION)
cond	21:8	21:65	3	ape -> fileversion < APE_MIN_VERSION || ape -> fileversion > APE_MAX_VERSION
water	21:8	0:0	4	ape
op	21:11	0:0	4	->
water	21:13	0:0	4	fileversion
op	21:25	0:0	4	<
water	21:27	0:0	4	APE_MIN_VERSION
op	21:43	0:0	4	||
water	21:46	0:0	4	ape
op	21:49	0:0	4	->
water	21:51	0:0	4	fileversion
op	21:63	0:0	4	>
water	21:65	0:0	4	APE_MAX_VERSION
stmts	21:82	24:4	3	
water	21:82	0:0	4	{
call	22:8	22:127	4	av_log
arg	22:15	22:16	5	s
water	22:15	0:0	6	s
arg	22:18	22:30	5	AV_LOG_ERROR
water	22:18	0:0	6	AV_LOG_ERROR
arg	22:32	22:70	5	"Unsupported file version - %d.%02d\n"
water	22:32	0:0	6	"Unsupported file version - %d.%02d\n"
arg	22:72	22:95	5	ape->fileversion/1000
water	22:72	0:0	6	ape
op	22:75	0:0	6	->
water	22:77	0:0	6	fileversion
op	22:89	0:0	6	/
water	22:91	0:0	6	1000
arg	22:97	22:127	5	(ape->fileversion%1000)/10
water	22:97	0:0	6	(
water	22:98	0:0	6	ape
op	22:101	0:0	6	->
water	22:103	0:0	6	fileversion
op	22:115	0:0	6	%
water	22:117	0:0	6	1000
water	22:121	0:0	6	)
op	22:123	0:0	6	/
water	22:125	0:0	6	10
water	22:128	0:0	4	;
return	23:8	23:17	4	-1
op	23:15	0:0	5	-
water	23:16	0:0	5	1
water	24:4	0:0	4	}
if	26:4	51:4	2	(ape -> fileversion >= 3980)
cond	26:8	26:28	3	ape -> fileversion >= 3980
water	26:8	0:0	4	ape
op	26:11	0:0	4	->
water	26:13	0:0	4	fileversion
op	26:25	0:0	4	>=
water	26:28	0:0	4	3980
stmts	26:34	51:4	3	
water	26:34	0:0	4	{
water	27:8	0:0	4	ape
op	27:11	0:0	4	->
water	27:13	0:0	4	padding1
op	27:34	0:0	4	=
call	27:36	27:47	4	get_le16
arg	27:45	27:47	5	pb
water	27:45	0:0	6	pb
water	27:48	0:0	4	;
water	28:8	0:0	4	ape
op	28:11	0:0	4	->
water	28:13	0:0	4	descriptorlength
op	28:34	0:0	4	=
call	28:36	28:47	4	get_le32
arg	28:45	28:47	5	pb
water	28:45	0:0	6	pb
water	28:48	0:0	4	;
water	29:8	0:0	4	ape
op	29:11	0:0	4	->
water	29:13	0:0	4	headerlength
op	29:34	0:0	4	=
call	29:36	29:47	4	get_le32
arg	29:45	29:47	5	pb
water	29:45	0:0	6	pb
water	29:48	0:0	4	;
water	30:8	0:0	4	ape
op	30:11	0:0	4	->
water	30:13	0:0	4	seektablelength
op	30:34	0:0	4	=
call	30:36	30:47	4	get_le32
arg	30:45	30:47	5	pb
water	30:45	0:0	6	pb
water	30:48	0:0	4	;
water	31:8	0:0	4	ape
op	31:11	0:0	4	->
water	31:13	0:0	4	wavheaderlength
op	31:34	0:0	4	=
call	31:36	31:47	4	get_le32
arg	31:45	31:47	5	pb
water	31:45	0:0	6	pb
water	31:48	0:0	4	;
water	32:8	0:0	4	ape
op	32:11	0:0	4	->
water	32:13	0:0	4	audiodatalength
op	32:34	0:0	4	=
call	32:36	32:47	4	get_le32
arg	32:45	32:47	5	pb
water	32:45	0:0	6	pb
water	32:48	0:0	4	;
water	33:8	0:0	4	ape
op	33:11	0:0	4	->
water	33:13	0:0	4	audiodatalength_high
op	33:34	0:0	4	=
call	33:36	33:47	4	get_le32
arg	33:45	33:47	5	pb
water	33:45	0:0	6	pb
water	33:48	0:0	4	;
water	34:8	0:0	4	ape
op	34:11	0:0	4	->
water	34:13	0:0	4	wavtaillength
op	34:34	0:0	4	=
call	34:36	34:47	4	get_le32
arg	34:45	34:47	5	pb
water	34:45	0:0	6	pb
water	34:48	0:0	4	;
call	35:8	35:35	4	get_buffer
arg	35:19	35:21	5	pb
water	35:19	0:0	6	pb
arg	35:23	35:31	5	ape->md5
water	35:23	0:0	6	ape
op	35:26	0:0	6	->
water	35:28	0:0	6	md5
arg	35:33	35:35	5	16
water	35:33	0:0	6	16
water	35:36	0:0	4	;
if	39:8	40:63	4	(ape -> descriptorlength > 52)
cond	39:12	39:36	5	ape -> descriptorlength > 52
water	39:12	0:0	6	ape
op	39:15	0:0	6	->
water	39:17	0:0	6	descriptorlength
op	39:34	0:0	6	>
water	39:36	0:0	6	52
stmts	40:12	40:63	5	
call	40:12	40:62	6	url_fseek
arg	40:22	40:24	7	pb
water	40:22	0:0	8	pb
arg	40:26	40:52	7	ape->descriptorlength-52
water	40:26	0:0	8	ape
op	40:29	0:0	8	->
water	40:31	0:0	8	descriptorlength
op	40:48	0:0	8	-
water	40:50	0:0	8	52
arg	40:54	40:62	7	SEEK_CUR
water	40:54	0:0	8	SEEK_CUR
water	40:63	0:0	6	;
water	43:8	0:0	4	ape
op	43:11	0:0	4	->
water	43:13	0:0	4	compressiontype
op	43:34	0:0	4	=
call	43:36	43:47	4	get_le16
arg	43:45	43:47	5	pb
water	43:45	0:0	6	pb
water	43:48	0:0	4	;
water	44:8	0:0	4	ape
op	44:11	0:0	4	->
water	44:13	0:0	4	formatflags
op	44:34	0:0	4	=
call	44:36	44:47	4	get_le16
arg	44:45	44:47	5	pb
water	44:45	0:0	6	pb
water	44:48	0:0	4	;
water	45:8	0:0	4	ape
op	45:11	0:0	4	->
water	45:13	0:0	4	blocksperframe
op	45:34	0:0	4	=
call	45:36	45:47	4	get_le32
arg	45:45	45:47	5	pb
water	45:45	0:0	6	pb
water	45:48	0:0	4	;
water	46:8	0:0	4	ape
op	46:11	0:0	4	->
water	46:13	0:0	4	finalframeblocks
op	46:34	0:0	4	=
call	46:36	46:47	4	get_le32
arg	46:45	46:47	5	pb
water	46:45	0:0	6	pb
water	46:48	0:0	4	;
water	47:8	0:0	4	ape
op	47:11	0:0	4	->
water	47:13	0:0	4	totalframes
op	47:34	0:0	4	=
call	47:36	47:47	4	get_le32
arg	47:45	47:47	5	pb
water	47:45	0:0	6	pb
water	47:48	0:0	4	;
water	48:8	0:0	4	ape
op	48:11	0:0	4	->
water	48:13	0:0	4	bps
op	48:34	0:0	4	=
call	48:36	48:47	4	get_le16
arg	48:45	48:47	5	pb
water	48:45	0:0	6	pb
water	48:48	0:0	4	;
water	49:8	0:0	4	ape
op	49:11	0:0	4	->
water	49:13	0:0	4	channels
op	49:34	0:0	4	=
call	49:36	49:47	4	get_le16
arg	49:45	49:47	5	pb
water	49:45	0:0	6	pb
water	49:48	0:0	4	;
water	50:8	0:0	4	ape
op	50:11	0:0	4	->
water	50:13	0:0	4	samplerate
op	50:34	0:0	4	=
call	50:36	50:47	4	get_le32
arg	50:45	50:47	5	pb
water	50:45	0:0	6	pb
water	50:48	0:0	4	;
water	51:4	0:0	4	}
else	51:6	93:4	2
stmts	51:11	93:4	3	
water	51:11	0:0	4	{
water	52:8	0:0	4	ape
op	52:11	0:0	4	->
water	52:13	0:0	4	descriptorlength
op	52:30	0:0	4	=
water	52:32	0:0	4	0
water	52:33	0:0	4	;
water	53:8	0:0	4	ape
op	53:11	0:0	4	->
water	53:13	0:0	4	headerlength
op	53:26	0:0	4	=
water	53:28	0:0	4	32
water	53:30	0:0	4	;
water	55:8	0:0	4	ape
op	55:11	0:0	4	->
water	55:13	0:0	4	compressiontype
op	55:34	0:0	4	=
call	55:36	55:47	4	get_le16
arg	55:45	55:47	5	pb
water	55:45	0:0	6	pb
water	55:48	0:0	4	;
water	56:8	0:0	4	ape
op	56:11	0:0	4	->
water	56:13	0:0	4	formatflags
op	56:34	0:0	4	=
call	56:36	56:47	4	get_le16
arg	56:45	56:47	5	pb
water	56:45	0:0	6	pb
water	56:48	0:0	4	;
water	57:8	0:0	4	ape
op	57:11	0:0	4	->
water	57:13	0:0	4	channels
op	57:34	0:0	4	=
call	57:36	57:47	4	get_le16
arg	57:45	57:47	5	pb
water	57:45	0:0	6	pb
water	57:48	0:0	4	;
water	58:8	0:0	4	ape
op	58:11	0:0	4	->
water	58:13	0:0	4	samplerate
op	58:34	0:0	4	=
call	58:36	58:47	4	get_le32
arg	58:45	58:47	5	pb
water	58:45	0:0	6	pb
water	58:48	0:0	4	;
water	59:8	0:0	4	ape
op	59:11	0:0	4	->
water	59:13	0:0	4	wavheaderlength
op	59:34	0:0	4	=
call	59:36	59:47	4	get_le32
arg	59:45	59:47	5	pb
water	59:45	0:0	6	pb
water	59:48	0:0	4	;
water	60:8	0:0	4	ape
op	60:11	0:0	4	->
water	60:13	0:0	4	wavtaillength
op	60:34	0:0	4	=
call	60:36	60:47	4	get_le32
arg	60:45	60:47	5	pb
water	60:45	0:0	6	pb
water	60:48	0:0	4	;
water	61:8	0:0	4	ape
op	61:11	0:0	4	->
water	61:13	0:0	4	totalframes
op	61:34	0:0	4	=
call	61:36	61:47	4	get_le32
arg	61:45	61:47	5	pb
water	61:45	0:0	6	pb
water	61:48	0:0	4	;
water	62:8	0:0	4	ape
op	62:11	0:0	4	->
water	62:13	0:0	4	finalframeblocks
op	62:34	0:0	4	=
call	62:36	62:47	4	get_le32
arg	62:45	62:47	5	pb
water	62:45	0:0	6	pb
water	62:48	0:0	4	;
if	64:8	67:8	4	(ape -> formatflags & MAC_FORMAT_FLAG_HAS_PEAK_LEVEL)
cond	64:12	64:31	5	ape -> formatflags & MAC_FORMAT_FLAG_HAS_PEAK_LEVEL
water	64:12	0:0	6	ape
op	64:15	0:0	6	->
water	64:17	0:0	6	formatflags
op	64:29	0:0	6	&
water	64:31	0:0	6	MAC_FORMAT_FLAG_HAS_PEAK_LEVEL
stmts	64:63	67:8	5	
water	64:63	0:0	6	{
call	65:12	65:37	6	url_fseek
arg	65:22	65:24	7	pb
water	65:22	0:0	8	pb
arg	65:26	65:27	7	4
water	65:26	0:0	8	4
arg	65:29	65:37	7	SEEK_CUR
water	65:29	0:0	8	SEEK_CUR
water	65:38	0:0	6	;
water	66:12	0:0	6	ape
op	66:15	0:0	6	->
water	66:17	0:0	6	headerlength
op	66:30	0:0	6	+=
water	66:33	0:0	6	4
water	66:34	0:0	6	;
water	67:8	0:0	6	}
if	69:8	73:8	4	(ape -> formatflags & MAC_FORMAT_FLAG_HAS_SEEK_ELEMENTS)
cond	69:12	69:31	5	ape -> formatflags & MAC_FORMAT_FLAG_HAS_SEEK_ELEMENTS
water	69:12	0:0	6	ape
op	69:15	0:0	6	->
water	69:17	0:0	6	formatflags
op	69:29	0:0	6	&
water	69:31	0:0	6	MAC_FORMAT_FLAG_HAS_SEEK_ELEMENTS
stmts	69:66	73:8	5	
water	69:66	0:0	6	{
water	70:12	0:0	6	ape
op	70:15	0:0	6	->
water	70:17	0:0	6	seektablelength
op	70:33	0:0	6	=
call	70:35	70:46	6	get_le32
arg	70:44	70:46	7	pb
water	70:44	0:0	8	pb
water	70:47	0:0	6	;
water	71:12	0:0	6	ape
op	71:15	0:0	6	->
water	71:17	0:0	6	headerlength
op	71:30	0:0	6	+=
water	71:33	0:0	6	4
water	71:34	0:0	6	;
water	72:12	0:0	6	ape
op	72:15	0:0	6	->
water	72:17	0:0	6	seektablelength
op	72:33	0:0	6	*=
op	72:36	0:0	6	sizeof
water	72:42	0:0	6	(
water	72:43	0:0	6	int32_t
water	72:50	0:0	6	)
water	72:51	0:0	6	;
water	73:8	0:0	6	}
else	73:10	74:69	4
stmts	74:12	74:69	5	
water	74:12	0:0	6	ape
op	74:15	0:0	6	->
water	74:17	0:0	6	seektablelength
op	74:33	0:0	6	=
water	74:35	0:0	6	ape
op	74:38	0:0	6	->
water	74:40	0:0	6	totalframes
op	74:52	0:0	6	*
op	74:54	0:0	6	sizeof
water	74:60	0:0	6	(
water	74:61	0:0	6	int32_t
water	74:68	0:0	6	)
water	74:69	0:0	6	;
if	76:8	77:24	4	(ape -> formatflags & MAC_FORMAT_FLAG_8_BIT)
cond	76:12	76:31	5	ape -> formatflags & MAC_FORMAT_FLAG_8_BIT
water	76:12	0:0	6	ape
op	76:15	0:0	6	->
water	76:17	0:0	6	formatflags
op	76:29	0:0	6	&
water	76:31	0:0	6	MAC_FORMAT_FLAG_8_BIT
stmts	77:12	77:24	5	
water	77:12	0:0	6	ape
op	77:15	0:0	6	->
water	77:17	0:0	6	bps
op	77:21	0:0	6	=
water	77:23	0:0	6	8
water	77:24	0:0	6	;
else	78:8	79:25	4
stmts	78:13	79:25	5	
if	78:13	79:25	6	(ape -> formatflags & MAC_FORMAT_FLAG_24_BIT)
cond	78:17	78:36	7	ape -> formatflags & MAC_FORMAT_FLAG_24_BIT
water	78:17	0:0	8	ape
op	78:20	0:0	8	->
water	78:22	0:0	8	formatflags
op	78:34	0:0	8	&
water	78:36	0:0	8	MAC_FORMAT_FLAG_24_BIT
stmts	79:12	79:25	7	
water	79:12	0:0	8	ape
op	79:15	0:0	8	->
water	79:17	0:0	8	bps
op	79:21	0:0	8	=
water	79:23	0:0	8	24
water	79:25	0:0	8	;
else	80:8	81:25	4
stmts	81:12	81:25	5	
water	81:12	0:0	6	ape
op	81:15	0:0	6	->
water	81:17	0:0	6	bps
op	81:21	0:0	6	=
water	81:23	0:0	6	16
water	81:25	0:0	6	;
if	83:8	84:43	4	(ape -> fileversion >= 3950)
cond	83:12	83:32	5	ape -> fileversion >= 3950
water	83:12	0:0	6	ape
op	83:15	0:0	6	->
water	83:17	0:0	6	fileversion
op	83:29	0:0	6	>=
water	83:32	0:0	6	3950
stmts	84:12	84:43	5	
water	84:12	0:0	6	ape
op	84:15	0:0	6	->
water	84:17	0:0	6	blocksperframe
op	84:32	0:0	6	=
water	84:34	0:0	6	73728
op	84:40	0:0	6	*
water	84:42	0:0	6	4
water	84:43	0:0	6	;
else	85:8	86:39	4
stmts	85:13	86:39	5	
if	85:13	86:39	6	(ape -> fileversion >= 3900 || ( ape -> fileversion >= 3800 && ape -> compressiontype >= 4000 ))
cond	85:17	85:103	7	ape -> fileversion >= 3900 || ( ape -> fileversion >= 3800 && ape -> compressiontype >= 4000 )
water	85:17	0:0	8	ape
op	85:20	0:0	8	->
water	85:22	0:0	8	fileversion
op	85:34	0:0	8	>=
water	85:37	0:0	8	3900
op	85:42	0:0	8	||
water	85:45	0:0	8	(
water	85:46	0:0	8	ape
op	85:49	0:0	8	->
water	85:51	0:0	8	fileversion
op	85:63	0:0	8	>=
water	85:66	0:0	8	3800
op	85:72	0:0	8	&&
water	85:75	0:0	8	ape
op	85:78	0:0	8	->
water	85:80	0:0	8	compressiontype
op	85:96	0:0	8	>=
water	85:99	0:0	8	4000
water	85:103	0:0	8	)
stmts	86:12	86:39	7	
water	86:12	0:0	8	ape
op	86:15	0:0	8	->
water	86:17	0:0	8	blocksperframe
op	86:32	0:0	8	=
water	86:34	0:0	8	73728
water	86:39	0:0	8	;
else	87:8	88:38	4
stmts	88:12	88:38	5	
water	88:12	0:0	6	ape
op	88:15	0:0	6	->
water	88:17	0:0	6	blocksperframe
op	88:32	0:0	6	=
water	88:34	0:0	6	9216
water	88:38	0:0	6	;
if	91:8	92:47	4	(! ( ape -> formatflags & MAC_FORMAT_FLAG_CREATE_WAV_HEADER ))
cond	91:12	91:66	5	! ( ape -> formatflags & MAC_FORMAT_FLAG_CREATE_WAV_HEADER )
op	91:12	0:0	6	!
water	91:13	0:0	6	(
water	91:14	0:0	6	ape
op	91:17	0:0	6	->
water	91:19	0:0	6	formatflags
op	91:31	0:0	6	&
water	91:33	0:0	6	MAC_FORMAT_FLAG_CREATE_WAV_HEADER
water	91:66	0:0	6	)
stmts	92:12	92:47	5	
call	92:12	92:46	6	url_fskip
arg	92:22	92:24	7	pb
water	92:22	0:0	8	pb
arg	92:26	92:46	7	ape->wavheaderlength
water	92:26	0:0	8	ape
op	92:29	0:0	8	->
water	92:31	0:0	8	wavheaderlength
water	92:47	0:0	6	;
water	93:4	0:0	4	}
if	95:4	98:4	2	(ape -> totalframes > UINT_MAX / sizeof ( APEFrame ))
cond	95:7	95:52	3	ape -> totalframes > UINT_MAX / sizeof ( APEFrame )
water	95:7	0:0	4	ape
op	95:10	0:0	4	->
water	95:12	0:0	4	totalframes
op	95:24	0:0	4	>
water	95:26	0:0	4	UINT_MAX
op	95:35	0:0	4	/
op	95:37	0:0	4	sizeof
water	95:43	0:0	4	(
water	95:44	0:0	4	APEFrame
water	95:52	0:0	4	)
stmts	95:54	98:4	3	
water	95:54	0:0	4	{
call	96:8	96:73	4	av_log
arg	96:15	96:16	5	s
water	96:15	0:0	6	s
arg	96:18	96:30	5	AV_LOG_ERROR
water	96:18	0:0	6	AV_LOG_ERROR
arg	96:32	96:55	5	"Too many frames: %d\n"
water	96:32	0:0	6	"Too many frames: %d\n"
arg	96:57	96:73	5	ape->totalframes
water	96:57	0:0	6	ape
op	96:60	0:0	6	->
water	96:62	0:0	6	totalframes
water	96:74	0:0	4	;
return	97:8	97:17	4	-1
op	97:15	0:0	5	-
water	97:16	0:0	5	1
water	98:4	0:0	4	}
water	99:4	0:0	2	ape
op	99:7	0:0	2	->
water	99:9	0:0	2	frames
op	99:22	0:0	2	=
call	99:24	99:69	2	av_malloc
arg	99:34	99:69	3	ape->totalframes*sizeof(APEFrame)
water	99:34	0:0	4	ape
op	99:37	0:0	4	->
water	99:39	0:0	4	totalframes
op	99:51	0:0	4	*
op	99:53	0:0	4	sizeof
water	99:59	0:0	4	(
water	99:60	0:0	4	APEFrame
water	99:68	0:0	4	)
water	99:70	0:0	2	;
if	100:4	101:28	2	(! ape -> frames)
cond	100:7	100:13	3	! ape -> frames
op	100:7	0:0	4	!
water	100:8	0:0	4	ape
op	100:11	0:0	4	->
water	100:13	0:0	4	frames
stmts	101:8	101:28	3	
return	101:8	101:28	4	AVERROR_NOMEM
water	101:15	0:0	5	AVERROR_NOMEM
water	102:4	0:0	2	ape
op	102:7	0:0	2	->
water	102:9	0:0	2	firstframe
op	102:22	0:0	2	=
water	102:24	0:0	2	ape
op	102:27	0:0	2	->
water	102:29	0:0	2	junklength
op	102:40	0:0	2	+
water	102:42	0:0	2	ape
op	102:45	0:0	2	->
water	102:47	0:0	2	descriptorlength
op	102:64	0:0	2	+
water	102:66	0:0	2	ape
op	102:69	0:0	2	->
water	102:71	0:0	2	headerlength
op	102:84	0:0	2	+
water	102:86	0:0	2	ape
op	102:89	0:0	2	->
water	102:91	0:0	2	seektablelength
op	102:107	0:0	2	+
water	102:109	0:0	2	ape
op	102:112	0:0	2	->
water	102:114	0:0	2	wavheaderlength
water	102:129	0:0	2	;
water	103:4	0:0	2	ape
op	103:7	0:0	2	->
water	103:9	0:0	2	currentframe
op	103:22	0:0	2	=
water	103:24	0:0	2	0
water	103:25	0:0	2	;
water	106:4	0:0	2	ape
op	106:7	0:0	2	->
water	106:9	0:0	2	totalsamples
op	106:22	0:0	2	=
water	106:24	0:0	2	ape
op	106:27	0:0	2	->
water	106:29	0:0	2	finalframeblocks
water	106:45	0:0	2	;
if	107:4	108:73	2	(ape -> totalframes > 1)
cond	107:8	107:27	3	ape -> totalframes > 1
water	107:8	0:0	4	ape
op	107:11	0:0	4	->
water	107:13	0:0	4	totalframes
op	107:25	0:0	4	>
water	107:27	0:0	4	1
stmts	108:8	108:73	3	
water	108:8	0:0	4	ape
op	108:11	0:0	4	->
water	108:13	0:0	4	totalsamples
op	108:26	0:0	4	+=
water	108:29	0:0	4	ape
op	108:32	0:0	4	->
water	108:34	0:0	4	blocksperframe
op	108:49	0:0	4	*
water	108:51	0:0	4	(
water	108:52	0:0	4	ape
op	108:55	0:0	4	->
water	108:57	0:0	4	totalframes
op	108:69	0:0	4	-
water	108:71	0:0	4	1
water	108:72	0:0	4	)
water	108:73	0:0	4	;
if	110:4	114:4	2	(ape -> seektablelength > 0)
cond	110:8	110:31	3	ape -> seektablelength > 0
water	110:8	0:0	4	ape
op	110:11	0:0	4	->
water	110:13	0:0	4	seektablelength
op	110:29	0:0	4	>
water	110:31	0:0	4	0
stmts	110:34	114:4	3	
water	110:34	0:0	4	{
water	111:8	0:0	4	ape
op	111:11	0:0	4	->
water	111:13	0:0	4	seektable
op	111:23	0:0	4	=
call	111:25	111:55	4	av_malloc
arg	111:35	111:55	5	ape->seektablelength
water	111:35	0:0	6	ape
op	111:38	0:0	6	->
water	111:40	0:0	6	seektablelength
water	111:56	0:0	4	;
for	112:8	113:44	4	(i = 0 ;i < ape -> seektablelength / sizeof ( uint32_t );i ++)
forinit	112:13	112:18	5	i = 0 ;
water	112:13	0:0	6	i
op	112:15	0:0	6	=
water	112:17	0:0	6	0
water	112:18	0:0	6	;
cond	112:20	112:62	5	i < ape -> seektablelength / sizeof ( uint32_t )
water	112:20	0:0	6	i
op	112:22	0:0	6	<
water	112:24	0:0	6	ape
op	112:27	0:0	6	->
water	112:29	0:0	6	seektablelength
op	112:45	0:0	6	/
op	112:47	0:0	6	sizeof
water	112:53	0:0	6	(
water	112:54	0:0	6	uint32_t
water	112:62	0:0	6	)
forexpr	112:65	112:66	5	i ++
water	112:65	0:0	6	i
op	112:66	0:0	6	++
stmts	113:12	113:44	5	
water	113:12	0:0	6	ape
op	113:15	0:0	6	->
water	113:17	0:0	6	seektable
op	113:26	0:0	6	[
water	113:27	0:0	6	i
op	113:28	0:0	6	]
op	113:30	0:0	6	=
call	113:32	113:43	6	get_le32
arg	113:41	113:43	7	pb
water	113:41	0:0	8	pb
water	113:44	0:0	6	;
water	114:4	0:0	4	}
water	116:4	0:0	2	ape
op	116:7	0:0	2	->
water	116:9	0:0	2	frames
op	116:15	0:0	2	[
water	116:16	0:0	2	0
op	116:17	0:0	2	]
op	116:18	0:0	2	.
water	116:19	0:0	2	pos
op	116:27	0:0	2	=
water	116:29	0:0	2	ape
op	116:32	0:0	2	->
water	116:34	0:0	2	firstframe
water	116:44	0:0	2	;
water	117:4	0:0	2	ape
op	117:7	0:0	2	->
water	117:9	0:0	2	frames
op	117:15	0:0	2	[
water	117:16	0:0	2	0
op	117:17	0:0	2	]
op	117:18	0:0	2	.
water	117:19	0:0	2	nblocks
op	117:27	0:0	2	=
water	117:29	0:0	2	ape
op	117:32	0:0	2	->
water	117:34	0:0	2	blocksperframe
water	117:48	0:0	2	;
water	118:4	0:0	2	ape
op	118:7	0:0	2	->
water	118:9	0:0	2	frames
op	118:15	0:0	2	[
water	118:16	0:0	2	0
op	118:17	0:0	2	]
op	118:18	0:0	2	.
water	118:19	0:0	2	skip
op	118:27	0:0	2	=
water	118:29	0:0	2	0
water	118:30	0:0	2	;
for	119:4	124:4	2	(i = 1 ;i < ape -> totalframes;i ++)
forinit	119:9	119:14	3	i = 1 ;
water	119:9	0:0	4	i
op	119:11	0:0	4	=
water	119:13	0:0	4	1
water	119:14	0:0	4	;
cond	119:16	119:25	3	i < ape -> totalframes
water	119:16	0:0	4	i
op	119:18	0:0	4	<
water	119:20	0:0	4	ape
op	119:23	0:0	4	->
water	119:25	0:0	4	totalframes
forexpr	119:38	119:39	3	i ++
water	119:38	0:0	4	i
op	119:39	0:0	4	++
stmts	119:43	124:4	3	
water	119:43	0:0	4	{
water	120:8	0:0	4	ape
op	120:11	0:0	4	->
water	120:13	0:0	4	frames
op	120:19	0:0	4	[
water	120:20	0:0	4	i
op	120:21	0:0	4	]
op	120:22	0:0	4	.
water	120:23	0:0	4	pos
op	120:32	0:0	4	=
water	120:34	0:0	4	ape
op	120:37	0:0	4	->
water	120:39	0:0	4	seektable
op	120:48	0:0	4	[
water	120:49	0:0	4	i
op	120:50	0:0	4	]
water	120:51	0:0	4	;
water	121:8	0:0	4	ape
op	121:11	0:0	4	->
water	121:13	0:0	4	frames
op	121:19	0:0	4	[
water	121:20	0:0	4	i
op	121:21	0:0	4	]
op	121:22	0:0	4	.
water	121:23	0:0	4	nblocks
op	121:32	0:0	4	=
water	121:34	0:0	4	ape
op	121:37	0:0	4	->
water	121:39	0:0	4	blocksperframe
water	121:53	0:0	4	;
water	122:8	0:0	4	ape
op	122:11	0:0	4	->
water	122:13	0:0	4	frames
op	122:19	0:0	4	[
water	122:20	0:0	4	i
op	122:22	0:0	4	-
water	122:24	0:0	4	1
op	122:25	0:0	4	]
op	122:26	0:0	4	.
water	122:27	0:0	4	size
op	122:32	0:0	4	=
water	122:34	0:0	4	ape
op	122:37	0:0	4	->
water	122:39	0:0	4	frames
op	122:45	0:0	4	[
water	122:46	0:0	4	i
op	122:47	0:0	4	]
op	122:48	0:0	4	.
water	122:49	0:0	4	pos
op	122:53	0:0	4	-
water	122:55	0:0	4	ape
op	122:58	0:0	4	->
water	122:60	0:0	4	frames
op	122:66	0:0	4	[
water	122:67	0:0	4	i
op	122:69	0:0	4	-
water	122:71	0:0	4	1
op	122:72	0:0	4	]
op	122:73	0:0	4	.
water	122:74	0:0	4	pos
water	122:77	0:0	4	;
water	123:8	0:0	4	ape
op	123:11	0:0	4	->
water	123:13	0:0	4	frames
op	123:19	0:0	4	[
water	123:20	0:0	4	i
op	123:21	0:0	4	]
op	123:22	0:0	4	.
water	123:23	0:0	4	skip
op	123:32	0:0	4	=
water	123:34	0:0	4	(
water	123:35	0:0	4	ape
op	123:38	0:0	4	->
water	123:40	0:0	4	frames
op	123:46	0:0	4	[
water	123:47	0:0	4	i
op	123:48	0:0	4	]
op	123:49	0:0	4	.
water	123:50	0:0	4	pos
op	123:54	0:0	4	-
water	123:56	0:0	4	ape
op	123:59	0:0	4	->
water	123:61	0:0	4	frames
op	123:67	0:0	4	[
water	123:68	0:0	4	0
op	123:69	0:0	4	]
op	123:70	0:0	4	.
water	123:71	0:0	4	pos
water	123:74	0:0	4	)
op	123:76	0:0	4	&
water	123:78	0:0	4	3
water	123:79	0:0	4	;
water	124:4	0:0	4	}
water	125:4	0:0	2	ape
op	125:7	0:0	2	->
water	125:9	0:0	2	frames
op	125:15	0:0	2	[
water	125:16	0:0	2	ape
op	125:19	0:0	2	->
water	125:21	0:0	2	totalframes
op	125:33	0:0	2	-
water	125:35	0:0	2	1
op	125:36	0:0	2	]
op	125:37	0:0	2	.
water	125:38	0:0	2	size
op	125:46	0:0	2	=
water	125:48	0:0	2	ape
op	125:51	0:0	2	->
water	125:53	0:0	2	finalframeblocks
op	125:70	0:0	2	*
water	125:72	0:0	2	4
water	125:73	0:0	2	;
water	126:4	0:0	2	ape
op	126:7	0:0	2	->
water	126:9	0:0	2	frames
op	126:15	0:0	2	[
water	126:16	0:0	2	ape
op	126:19	0:0	2	->
water	126:21	0:0	2	totalframes
op	126:33	0:0	2	-
water	126:35	0:0	2	1
op	126:36	0:0	2	]
op	126:37	0:0	2	.
water	126:38	0:0	2	nblocks
op	126:46	0:0	2	=
water	126:48	0:0	2	ape
op	126:51	0:0	2	->
water	126:53	0:0	2	finalframeblocks
water	126:69	0:0	2	;
for	128:4	134:4	2	(i = 0 ;i < ape -> totalframes;i ++)
forinit	128:9	128:14	3	i = 0 ;
water	128:9	0:0	4	i
op	128:11	0:0	4	=
water	128:13	0:0	4	0
water	128:14	0:0	4	;
cond	128:16	128:25	3	i < ape -> totalframes
water	128:16	0:0	4	i
op	128:18	0:0	4	<
water	128:20	0:0	4	ape
op	128:23	0:0	4	->
water	128:25	0:0	4	totalframes
forexpr	128:38	128:39	3	i ++
water	128:38	0:0	4	i
op	128:39	0:0	4	++
stmts	128:43	134:4	3	
water	128:43	0:0	4	{
if	129:8	132:8	4	(ape -> frames [ i ] . skip)
cond	129:11	129:26	5	ape -> frames [ i ] . skip
water	129:11	0:0	6	ape
op	129:14	0:0	6	->
water	129:16	0:0	6	frames
op	129:22	0:0	6	[
water	129:23	0:0	6	i
op	129:24	0:0	6	]
op	129:25	0:0	6	.
water	129:26	0:0	6	skip
stmts	129:31	132:8	5	
water	129:31	0:0	6	{
water	130:12	0:0	6	ape
op	130:15	0:0	6	->
water	130:17	0:0	6	frames
op	130:23	0:0	6	[
water	130:24	0:0	6	i
op	130:25	0:0	6	]
op	130:26	0:0	6	.
water	130:27	0:0	6	pos
op	130:32	0:0	6	-=
water	130:35	0:0	6	ape
op	130:38	0:0	6	->
water	130:40	0:0	6	frames
op	130:46	0:0	6	[
water	130:47	0:0	6	i
op	130:48	0:0	6	]
op	130:49	0:0	6	.
water	130:50	0:0	6	skip
water	130:54	0:0	6	;
water	131:12	0:0	6	ape
op	131:15	0:0	6	->
water	131:17	0:0	6	frames
op	131:23	0:0	6	[
water	131:24	0:0	6	i
op	131:25	0:0	6	]
op	131:26	0:0	6	.
water	131:27	0:0	6	size
op	131:32	0:0	6	+=
water	131:35	0:0	6	ape
op	131:38	0:0	6	->
water	131:40	0:0	6	frames
op	131:46	0:0	6	[
water	131:47	0:0	6	i
op	131:48	0:0	6	]
op	131:49	0:0	6	.
water	131:50	0:0	6	skip
water	131:54	0:0	6	;
water	132:8	0:0	6	}
water	133:8	0:0	4	ape
op	133:11	0:0	4	->
water	133:13	0:0	4	frames
op	133:19	0:0	4	[
water	133:20	0:0	4	i
op	133:21	0:0	4	]
op	133:22	0:0	4	.
water	133:23	0:0	4	size
op	133:28	0:0	4	=
water	133:30	0:0	4	(
water	133:31	0:0	4	ape
op	133:34	0:0	4	->
water	133:36	0:0	4	frames
op	133:42	0:0	4	[
water	133:43	0:0	4	i
op	133:44	0:0	4	]
op	133:45	0:0	4	.
water	133:46	0:0	4	size
op	133:51	0:0	4	+
water	133:53	0:0	4	3
water	133:54	0:0	4	)
op	133:56	0:0	4	&
water	133:58	0:0	4	~3
water	133:60	0:0	4	;
water	134:4	0:0	4	}
call	137:4	137:23	2	ape_dumpinfo
arg	137:17	137:18	3	s
water	137:17	0:0	4	s
arg	137:20	137:23	3	ape
water	137:20	0:0	4	ape
water	137:24	0:0	2	;
if	140:4	143:4	2	(!url_is_streamed (pb ))
cond	140:8	140:27	3	!url_is_streamed (pb )
op	140:8	0:0	4	!
call	140:9	140:27	4	url_is_streamed
arg	140:25	140:27	5	pb
water	140:25	0:0	6	pb
stmts	140:30	143:4	3	
water	140:30	0:0	4	{
call	141:8	141:23	4	ape_parse_tag
arg	141:22	141:23	5	s
water	141:22	0:0	6	s
water	141:24	0:0	4	;
call	142:8	142:33	4	url_fseek
arg	142:18	142:20	5	pb
water	142:18	0:0	6	pb
arg	142:22	142:23	5	0
water	142:22	0:0	6	0
arg	142:25	142:33	5	SEEK_SET
water	142:25	0:0	6	SEEK_SET
water	142:34	0:0	4	;
water	143:4	0:0	4	}
call	145:4	145:157	2	av_log
arg	145:11	145:12	3	s
water	145:11	0:0	4	s
arg	145:14	145:26	3	AV_LOG_DEBUG
water	145:14	0:0	4	AV_LOG_DEBUG
arg	145:28	145:78	3	"Decoding file - v%d.%02d, compression level %d\n"
water	145:28	0:0	4	"Decoding file - v%d.%02d, compression level %d\n"
arg	145:80	145:103	3	ape->fileversion/1000
water	145:80	0:0	4	ape
op	145:83	0:0	4	->
water	145:85	0:0	4	fileversion
op	145:97	0:0	4	/
water	145:99	0:0	4	1000
arg	145:105	145:135	3	(ape->fileversion%1000)/10
water	145:105	0:0	4	(
water	145:106	0:0	4	ape
op	145:109	0:0	4	->
water	145:111	0:0	4	fileversion
op	145:123	0:0	4	%
water	145:125	0:0	4	1000
water	145:129	0:0	4	)
op	145:131	0:0	4	/
water	145:133	0:0	4	10
arg	145:137	145:157	3	ape->compressiontype
water	145:137	0:0	4	ape
op	145:140	0:0	4	->
water	145:142	0:0	4	compressiontype
water	145:158	0:0	2	;
water	148:4	0:0	2	st
op	148:7	0:0	2	=
call	148:9	148:27	2	av_new_stream
arg	148:23	148:24	3	s
water	148:23	0:0	4	s
arg	148:26	148:27	3	0
water	148:26	0:0	4	0
water	148:28	0:0	2	;
if	149:4	150:17	2	(! st)
cond	149:8	149:9	3	! st
op	149:8	0:0	4	!
water	149:9	0:0	4	st
stmts	150:8	150:17	3	
return	150:8	150:17	4	-1
op	150:15	0:0	5	-
water	150:16	0:0	5	1
water	152:4	0:0	2	total_blocks
op	152:17	0:0	2	=
water	152:19	0:0	2	(
water	152:20	0:0	2	ape
op	152:23	0:0	2	->
water	152:25	0:0	2	totalframes
op	152:37	0:0	2	==
water	152:40	0:0	2	0
water	152:41	0:0	2	)
water	152:43	0:0	2	?
water	152:45	0:0	2	0
water	152:47	0:0	2	:
water	152:49	0:0	2	(
water	152:50	0:0	2	(
water	152:51	0:0	2	ape
op	152:54	0:0	2	->
water	152:56	0:0	2	totalframes
op	152:68	0:0	2	-
water	152:70	0:0	2	1
water	152:71	0:0	2	)
op	152:73	0:0	2	*
water	152:75	0:0	2	ape
op	152:78	0:0	2	->
water	152:80	0:0	2	blocksperframe
water	152:94	0:0	2	)
op	152:96	0:0	2	+
water	152:98	0:0	2	ape
op	152:101	0:0	2	->
water	152:103	0:0	2	finalframeblocks
water	152:119	0:0	2	;
water	154:4	0:0	2	st
op	154:6	0:0	2	->
water	154:8	0:0	2	codec
op	154:13	0:0	2	->
water	154:15	0:0	2	codec_type
op	154:31	0:0	2	=
water	154:33	0:0	2	CODEC_TYPE_AUDIO
water	154:49	0:0	2	;
water	155:4	0:0	2	st
op	155:6	0:0	2	->
water	155:8	0:0	2	codec
op	155:13	0:0	2	->
water	155:15	0:0	2	codec_id
op	155:31	0:0	2	=
water	155:33	0:0	2	CODEC_ID_APE
water	155:45	0:0	2	;
water	156:4	0:0	2	st
op	156:6	0:0	2	->
water	156:8	0:0	2	codec
op	156:13	0:0	2	->
water	156:15	0:0	2	codec_tag
op	156:31	0:0	2	=
call	156:33	156:57	2	MKTAG
arg	156:39	156:42	3	'A'
water	156:39	0:0	4	'A'
arg	156:44	156:47	3	'P'
water	156:44	0:0	4	'P'
arg	156:49	156:52	3	'E'
water	156:49	0:0	4	'E'
arg	156:54	156:57	3	' '
water	156:54	0:0	4	' '
water	156:58	0:0	2	;
water	157:4	0:0	2	st
op	157:6	0:0	2	->
water	157:8	0:0	2	codec
op	157:13	0:0	2	->
water	157:15	0:0	2	channels
op	157:31	0:0	2	=
water	157:33	0:0	2	ape
op	157:36	0:0	2	->
water	157:38	0:0	2	channels
water	157:46	0:0	2	;
water	158:4	0:0	2	st
op	158:6	0:0	2	->
water	158:8	0:0	2	codec
op	158:13	0:0	2	->
water	158:15	0:0	2	sample_rate
op	158:31	0:0	2	=
water	158:33	0:0	2	ape
op	158:36	0:0	2	->
water	158:38	0:0	2	samplerate
water	158:48	0:0	2	;
water	159:4	0:0	2	st
op	159:6	0:0	2	->
water	159:8	0:0	2	codec
op	159:13	0:0	2	->
water	159:15	0:0	2	bits_per_coded_sample
op	159:37	0:0	2	=
water	159:39	0:0	2	ape
op	159:42	0:0	2	->
water	159:44	0:0	2	bps
water	159:47	0:0	2	;
water	160:4	0:0	2	st
op	160:6	0:0	2	->
water	160:8	0:0	2	codec
op	160:13	0:0	2	->
water	160:15	0:0	2	frame_size
op	160:31	0:0	2	=
water	160:33	0:0	2	MAC_SUBFRAME_SIZE
water	160:50	0:0	2	;
water	162:4	0:0	2	st
op	162:6	0:0	2	->
water	162:8	0:0	2	nb_frames
op	162:18	0:0	2	=
water	162:20	0:0	2	ape
op	162:23	0:0	2	->
water	162:25	0:0	2	totalframes
water	162:36	0:0	2	;
water	163:4	0:0	2	s
op	163:5	0:0	2	->
water	163:7	0:0	2	start_time
op	163:18	0:0	2	=
water	163:20	0:0	2	0
water	163:21	0:0	2	;
water	164:4	0:0	2	s
op	164:5	0:0	2	->
water	164:7	0:0	2	duration
op	164:18	0:0	2	=
water	164:20	0:0	2	(
water	164:21	0:0	2	int64_t
water	164:28	0:0	2	)
water	164:30	0:0	2	total_blocks
op	164:43	0:0	2	*
water	164:45	0:0	2	AV_TIME_BASE
op	164:58	0:0	2	/
water	164:60	0:0	2	ape
op	164:63	0:0	2	->
water	164:65	0:0	2	samplerate
water	164:75	0:0	2	;
call	165:4	165:62	2	av_set_pts_info
arg	165:20	165:22	3	st
water	165:20	0:0	4	st
arg	165:24	165:26	3	64
water	165:24	0:0	4	64
arg	165:28	165:45	3	MAC_SUBFRAME_SIZE
water	165:28	0:0	4	MAC_SUBFRAME_SIZE
arg	165:47	165:62	3	ape->samplerate
water	165:47	0:0	4	ape
op	165:50	0:0	4	->
water	165:52	0:0	4	samplerate
water	165:63	0:0	2	;
water	167:4	0:0	2	st
op	167:6	0:0	2	->
water	167:8	0:0	2	codec
op	167:13	0:0	2	->
water	167:15	0:0	2	extradata
op	167:25	0:0	2	=
call	167:27	167:55	2	av_malloc
arg	167:37	167:55	3	APE_EXTRADATA_SIZE
water	167:37	0:0	4	APE_EXTRADATA_SIZE
water	167:56	0:0	2	;
water	168:4	0:0	2	st
op	168:6	0:0	2	->
water	168:8	0:0	2	codec
op	168:13	0:0	2	->
water	168:15	0:0	2	extradata_size
op	168:30	0:0	2	=
water	168:32	0:0	2	APE_EXTRADATA_SIZE
water	168:50	0:0	2	;
call	169:4	169:54	2	AV_WL16
arg	169:12	169:36	3	st->codec->extradata+0
water	169:12	0:0	4	st
op	169:14	0:0	4	->
water	169:16	0:0	4	codec
op	169:21	0:0	4	->
water	169:23	0:0	4	extradata
op	169:33	0:0	4	+
water	169:35	0:0	4	0
arg	169:38	169:54	3	ape->fileversion
water	169:38	0:0	4	ape
op	169:41	0:0	4	->
water	169:43	0:0	4	fileversion
water	169:55	0:0	2	;
call	170:4	170:58	2	AV_WL16
arg	170:12	170:36	3	st->codec->extradata+2
water	170:12	0:0	4	st
op	170:14	0:0	4	->
water	170:16	0:0	4	codec
op	170:21	0:0	4	->
water	170:23	0:0	4	extradata
op	170:33	0:0	4	+
water	170:35	0:0	4	2
arg	170:38	170:58	3	ape->compressiontype
water	170:38	0:0	4	ape
op	170:41	0:0	4	->
water	170:43	0:0	4	compressiontype
water	170:59	0:0	2	;
call	171:4	171:54	2	AV_WL16
arg	171:12	171:36	3	st->codec->extradata+4
water	171:12	0:0	4	st
op	171:14	0:0	4	->
water	171:16	0:0	4	codec
op	171:21	0:0	4	->
water	171:23	0:0	4	extradata
op	171:33	0:0	4	+
water	171:35	0:0	4	4
arg	171:38	171:54	3	ape->formatflags
water	171:38	0:0	4	ape
op	171:41	0:0	4	->
water	171:43	0:0	4	formatflags
water	171:55	0:0	2	;
water	173:4	0:0	2	pts
op	173:8	0:0	2	=
water	173:10	0:0	2	0
water	173:11	0:0	2	;
for	174:4	178:4	2	(i = 0 ;i < ape -> totalframes;i ++)
forinit	174:9	174:14	3	i = 0 ;
water	174:9	0:0	4	i
op	174:11	0:0	4	=
water	174:13	0:0	4	0
water	174:14	0:0	4	;
cond	174:16	174:25	3	i < ape -> totalframes
water	174:16	0:0	4	i
op	174:18	0:0	4	<
water	174:20	0:0	4	ape
op	174:23	0:0	4	->
water	174:25	0:0	4	totalframes
forexpr	174:38	174:39	3	i ++
water	174:38	0:0	4	i
op	174:39	0:0	4	++
stmts	174:43	178:4	3	
water	174:43	0:0	4	{
water	175:8	0:0	4	ape
op	175:11	0:0	4	->
water	175:13	0:0	4	frames
op	175:19	0:0	4	[
water	175:20	0:0	4	i
op	175:21	0:0	4	]
op	175:22	0:0	4	.
water	175:23	0:0	4	pts
op	175:27	0:0	4	=
water	175:29	0:0	4	pts
water	175:32	0:0	4	;
call	176:8	176:93	4	av_add_index_entry
arg	176:27	176:29	5	st
water	176:27	0:0	6	st
arg	176:31	176:49	5	ape->frames[i].pos
water	176:31	0:0	6	ape
op	176:34	0:0	6	->
water	176:36	0:0	6	frames
op	176:42	0:0	6	[
water	176:43	0:0	6	i
op	176:44	0:0	6	]
op	176:45	0:0	6	.
water	176:46	0:0	6	pos
arg	176:51	176:69	5	ape->frames[i].pts
water	176:51	0:0	6	ape
op	176:54	0:0	6	->
water	176:56	0:0	6	frames
op	176:62	0:0	6	[
water	176:63	0:0	6	i
op	176:64	0:0	6	]
op	176:65	0:0	6	.
water	176:66	0:0	6	pts
arg	176:71	176:72	5	0
water	176:71	0:0	6	0
arg	176:74	176:75	5	0
water	176:74	0:0	6	0
arg	176:77	176:93	5	AVINDEX_KEYFRAME
water	176:77	0:0	6	AVINDEX_KEYFRAME
water	176:94	0:0	4	;
water	177:8	0:0	4	pts
op	177:12	0:0	4	+=
water	177:15	0:0	4	ape
op	177:18	0:0	4	->
water	177:20	0:0	4	blocksperframe
op	177:35	0:0	4	/
water	177:37	0:0	4	MAC_SUBFRAME_SIZE
water	177:54	0:0	4	;
water	178:4	0:0	4	}
return	180:4	180:12	2	0
water	180:11	0:0	3	0

func	2:0	38:0	0	static int	allocate_buffers
params	2:27	0:0	1	
param	2:28	2:45	2	ShortenContext *	s
stmnts	0:0	37:12	1	
decl	4:4	4:15	2	int	i
water	4:9	0:0	2	,
decl	4:4	4:15	2	int	chan
decl	5:4	5:15	2	int	*coeffs
decl	6:4	6:17	2	void	*tmp_ptr
for	8:4	30:4	2	(chan = 0 ;chan < s -> channels;chan ++)
forinit	8:9	8:15	3	chan = 0 ;
water	8:9	0:0	4	chan
op	8:13	0:0	4	=
water	8:14	0:0	4	0
water	8:15	0:0	4	;
cond	8:17	8:25	3	chan < s -> channels
water	8:17	0:0	4	chan
op	8:21	0:0	4	<
water	8:22	0:0	4	s
op	8:23	0:0	4	->
water	8:25	0:0	4	channels
forexpr	8:35	8:39	3	chan ++
water	8:35	0:0	4	chan
op	8:39	0:0	4	++
stmts	8:43	30:4	3	
water	8:43	0:0	4	{
if	9:8	12:8	4	(FFMAX (1 ,s -> nmean ) >= UINT_MAX / sizeof ( int32_t ))
cond	9:11	9:56	5	FFMAX (1 ,s -> nmean ) >= UINT_MAX / sizeof ( int32_t )
call	9:11	9:28	6	FFMAX
arg	9:17	9:18	7	1
water	9:17	0:0	8	1
arg	9:20	9:28	7	s->nmean
water	9:20	0:0	8	s
op	9:21	0:0	8	->
water	9:23	0:0	8	nmean
op	9:30	0:0	6	>=
water	9:33	0:0	6	UINT_MAX
op	9:41	0:0	6	/
op	9:42	0:0	6	sizeof
water	9:48	0:0	6	(
water	9:49	0:0	6	int32_t
water	9:56	0:0	6	)
stmts	9:58	12:8	5	
water	9:58	0:0	6	{
call	10:12	10:62	6	av_log
arg	10:19	10:27	7	s->avctx
water	10:19	0:0	8	s
op	10:20	0:0	8	->
water	10:22	0:0	8	avctx
arg	10:29	10:41	7	AV_LOG_ERROR
water	10:29	0:0	8	AV_LOG_ERROR
arg	10:43	10:62	7	"nmean too large\n"
water	10:43	0:0	8	"nmean too large\n"
water	10:63	0:0	6	;
return	11:12	11:21	6	-1
op	11:19	0:0	7	-
water	11:20	0:0	7	1
water	12:8	0:0	6	}
if	13:8	16:8	4	(s -> blocksize + s -> nwrap >= UINT_MAX / sizeof ( int32_t ) || s -> blocksize + s -> nwrap <= ( unsigned ) s -> nwrap)
cond	13:11	13:106	5	s -> blocksize + s -> nwrap >= UINT_MAX / sizeof ( int32_t ) || s -> blocksize + s -> nwrap <= ( unsigned ) s -> nwrap
water	13:11	0:0	6	s
op	13:12	0:0	6	->
water	13:14	0:0	6	blocksize
op	13:24	0:0	6	+
water	13:26	0:0	6	s
op	13:27	0:0	6	->
water	13:29	0:0	6	nwrap
op	13:35	0:0	6	>=
water	13:38	0:0	6	UINT_MAX
op	13:46	0:0	6	/
op	13:47	0:0	6	sizeof
water	13:53	0:0	6	(
water	13:54	0:0	6	int32_t
water	13:61	0:0	6	)
op	13:63	0:0	6	||
water	13:66	0:0	6	s
op	13:67	0:0	6	->
water	13:69	0:0	6	blocksize
op	13:79	0:0	6	+
water	13:81	0:0	6	s
op	13:82	0:0	6	->
water	13:84	0:0	6	nwrap
op	13:90	0:0	6	<=
water	13:93	0:0	6	(
water	13:94	0:0	6	unsigned
water	13:102	0:0	6	)
water	13:103	0:0	6	s
op	13:104	0:0	6	->
water	13:106	0:0	6	nwrap
stmts	13:112	16:8	5	
water	13:112	0:0	6	{
call	14:12	14:80	6	av_log
arg	14:19	14:27	7	s->avctx
water	14:19	0:0	8	s
op	14:20	0:0	8	->
water	14:22	0:0	8	avctx
arg	14:29	14:41	7	AV_LOG_ERROR
water	14:29	0:0	8	AV_LOG_ERROR
arg	14:43	14:80	7	"s->blocksize + s->nwrap too large\n"
water	14:43	0:0	8	"s->blocksize + s->nwrap too large\n"
water	14:81	0:0	6	;
return	15:12	15:21	6	-1
op	15:19	0:0	7	-
water	15:20	0:0	7	1
water	16:8	0:0	6	}
water	18:8	0:0	4	tmp_ptr
op	18:16	0:0	4	=
call	18:18	18:80	4	av_realloc
arg	18:29	18:44	5	s->offset[chan]
water	18:29	0:0	6	s
op	18:30	0:0	6	->
water	18:32	0:0	6	offset
op	18:38	0:0	6	[
water	18:39	0:0	6	chan
op	18:43	0:0	6	]
arg	18:46	18:80	5	sizeof(int32_t)*FFMAX(1,s->nmean)
op	18:46	0:0	6	sizeof
water	18:52	0:0	6	(
water	18:53	0:0	6	int32_t
water	18:60	0:0	6	)
call	18:61	18:79	6	*FFMAX
arg	18:68	18:69	7	1
water	18:68	0:0	8	1
arg	18:71	18:79	7	s->nmean
water	18:71	0:0	8	s
op	18:72	0:0	8	->
water	18:74	0:0	8	nmean
water	18:81	0:0	4	;
if	19:8	20:34	4	(! tmp_ptr)
cond	19:12	19:13	5	! tmp_ptr
op	19:12	0:0	6	!
water	19:13	0:0	6	tmp_ptr
stmts	20:12	20:34	5	
return	20:12	20:34	6	AVERROR(ENOMEM)
call	20:19	20:33	7	AVERROR
arg	20:27	20:33	8	ENOMEM
water	20:27	0:0	9	ENOMEM
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	offset
op	21:17	0:0	4	[
water	21:18	0:0	4	chan
op	21:22	0:0	4	]
op	21:24	0:0	4	=
water	21:26	0:0	4	tmp_ptr
water	21:33	0:0	4	;
water	23:8	0:0	4	tmp_ptr
op	23:16	0:0	4	=
call	23:18	23:88	4	av_realloc
arg	23:29	23:45	5	s->decoded[chan]
water	23:29	0:0	6	s
op	23:30	0:0	6	->
water	23:32	0:0	6	decoded
op	23:39	0:0	6	[
water	23:40	0:0	6	chan
op	23:44	0:0	6	]
arg	23:47	23:88	5	sizeof(int32_t)*(s->blocksize+s->nwrap)
op	23:47	0:0	6	sizeof
water	23:53	0:0	6	(
water	23:54	0:0	6	int32_t
water	23:61	0:0	6	)
op	23:62	0:0	6	*
water	23:63	0:0	6	(
water	23:64	0:0	6	s
op	23:65	0:0	6	->
water	23:67	0:0	6	blocksize
op	23:77	0:0	6	+
water	23:79	0:0	6	s
op	23:80	0:0	6	->
water	23:82	0:0	6	nwrap
water	23:87	0:0	6	)
water	23:89	0:0	4	;
if	24:8	25:34	4	(! tmp_ptr)
cond	24:12	24:13	5	! tmp_ptr
op	24:12	0:0	6	!
water	24:13	0:0	6	tmp_ptr
stmts	25:12	25:34	5	
return	25:12	25:34	6	AVERROR(ENOMEM)
call	25:19	25:33	7	AVERROR
arg	25:27	25:33	8	ENOMEM
water	25:27	0:0	9	ENOMEM
water	26:8	0:0	4	s
op	26:9	0:0	4	->
water	26:11	0:0	4	decoded
op	26:18	0:0	4	[
water	26:19	0:0	4	chan
op	26:23	0:0	4	]
op	26:25	0:0	4	=
water	26:27	0:0	4	tmp_ptr
water	26:34	0:0	4	;
for	27:8	28:35	4	(i = 0 ;i < s -> nwrap;i ++)
forinit	27:13	27:16	5	i = 0 ;
water	27:13	0:0	6	i
op	27:14	0:0	6	=
water	27:15	0:0	6	0
water	27:16	0:0	6	;
cond	27:18	27:23	5	i < s -> nwrap
water	27:18	0:0	6	i
op	27:19	0:0	6	<
water	27:20	0:0	6	s
op	27:21	0:0	6	->
water	27:23	0:0	6	nwrap
forexpr	27:30	27:31	5	i ++
water	27:30	0:0	6	i
op	27:31	0:0	6	++
stmts	28:12	28:35	5	
water	28:12	0:0	6	s
op	28:13	0:0	6	->
water	28:15	0:0	6	decoded
op	28:22	0:0	6	[
water	28:23	0:0	6	chan
op	28:27	0:0	6	]
op	28:28	0:0	6	[
water	28:29	0:0	6	i
op	28:30	0:0	6	]
op	28:32	0:0	6	=
water	28:34	0:0	6	0
water	28:35	0:0	6	;
water	29:8	0:0	4	s
op	29:9	0:0	4	->
water	29:11	0:0	4	decoded
op	29:18	0:0	4	[
water	29:19	0:0	4	chan
op	29:23	0:0	4	]
op	29:25	0:0	4	+=
water	29:28	0:0	4	s
op	29:29	0:0	4	->
water	29:31	0:0	4	nwrap
water	29:36	0:0	4	;
water	30:4	0:0	4	}
water	32:4	0:0	2	coeffs
op	32:11	0:0	2	=
call	32:13	32:64	2	av_realloc
arg	32:24	32:33	3	s->coeffs
water	32:24	0:0	4	s
op	32:25	0:0	4	->
water	32:27	0:0	4	coeffs
arg	32:35	32:64	3	s->nwrap*sizeof(*s->coeffs)
water	32:35	0:0	4	s
op	32:36	0:0	4	->
water	32:38	0:0	4	nwrap
op	32:44	0:0	4	*
op	32:46	0:0	4	sizeof
water	32:52	0:0	4	(
op	32:53	0:0	4	*
water	32:54	0:0	4	s
op	32:55	0:0	4	->
water	32:57	0:0	4	coeffs
water	32:63	0:0	4	)
water	32:65	0:0	2	;
if	33:4	34:30	2	(! coeffs)
cond	33:8	33:9	3	! coeffs
op	33:8	0:0	4	!
water	33:9	0:0	4	coeffs
stmts	34:8	34:30	3	
return	34:8	34:30	4	AVERROR(ENOMEM)
call	34:15	34:29	5	AVERROR
arg	34:23	34:29	6	ENOMEM
water	34:23	0:0	7	ENOMEM
water	35:4	0:0	2	s
op	35:5	0:0	2	->
water	35:7	0:0	2	coeffs
op	35:14	0:0	2	=
water	35:16	0:0	2	coeffs
water	35:22	0:0	2	;
return	37:4	37:12	2	0
water	37:11	0:0	3	0

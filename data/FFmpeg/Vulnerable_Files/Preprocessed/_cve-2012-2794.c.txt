func	12:0	124:0	0	static int	decode_mb_info
params	12:25	0:0	1	
param	12:26	12:45	2	IVI5DecContext *	ctx
param	12:47	12:64	2	IVIBandDesc *	band
param	13:26	13:39	2	IVITile *	tile
param	13:41	13:62	2	AVCodecContext *	avctx
stmnts	0:0	123:12	1	
decl	15:4	16:37	2	int	x
water	15:17	0:0	2	,
decl	15:4	16:37	2	int	y
water	15:20	0:0	2	,
decl	15:4	16:37	2	int	mv_x
water	15:26	0:0	2	,
decl	15:4	16:37	2	int	mv_y
water	15:32	0:0	2	,
decl	15:4	16:37	2	int	mv_delta
water	15:42	0:0	2	,
decl	15:4	16:37	2	int	offs
water	15:48	0:0	2	,
decl	15:4	16:37	2	int	mb_offset
water	15:59	0:0	2	,
decl	15:4	16:37	2	int	mv_scale
water	16:24	0:0	2	,
decl	15:4	16:37	2	int	blks_per_mb
decl	17:4	17:28	2	IVIMbInfo	*mb
water	17:19	0:0	2	,
decl	17:4	17:28	2	IVIMbInfo	*ref_mb
decl	18:4	18:56	2	int	row_offset
op	18:27	0:0	2	=
water	18:29	0:0	2	band
op	18:33	0:0	2	->
water	18:35	0:0	2	mb_size
op	18:43	0:0	2	*
water	18:45	0:0	2	band
op	18:49	0:0	2	->
water	18:51	0:0	2	pitch
water	20:4	0:0	2	mb
op	20:11	0:0	2	=
water	20:13	0:0	2	tile
op	20:17	0:0	2	->
water	20:19	0:0	2	mbs
water	20:22	0:0	2	;
water	21:4	0:0	2	ref_mb
op	21:11	0:0	2	=
water	21:13	0:0	2	tile
op	21:17	0:0	2	->
water	21:19	0:0	2	ref_mbs
water	21:26	0:0	2	;
water	22:4	0:0	2	offs
op	22:11	0:0	2	=
water	22:13	0:0	2	tile
op	22:17	0:0	2	->
water	22:19	0:0	2	ypos
op	22:24	0:0	2	*
water	22:26	0:0	2	band
op	22:30	0:0	2	->
water	22:32	0:0	2	pitch
op	22:38	0:0	2	+
water	22:40	0:0	2	tile
op	22:44	0:0	2	->
water	22:46	0:0	2	xpos
water	22:50	0:0	2	;
water	25:4	0:0	2	mv_scale
op	25:13	0:0	2	=
water	25:15	0:0	2	(
water	25:16	0:0	2	ctx
op	25:19	0:0	2	->
water	25:21	0:0	2	planes
op	25:27	0:0	2	[
water	25:28	0:0	2	0
op	25:29	0:0	2	]
op	25:30	0:0	2	.
water	25:31	0:0	2	bands
op	25:36	0:0	2	[
water	25:37	0:0	2	0
op	25:38	0:0	2	]
op	25:39	0:0	2	.
water	25:40	0:0	2	mb_size
op	25:48	0:0	2	>>
water	25:51	0:0	2	3
water	25:52	0:0	2	)
op	25:54	0:0	2	-
water	25:56	0:0	2	(
water	25:57	0:0	2	band
op	25:61	0:0	2	->
water	25:63	0:0	2	mb_size
op	25:71	0:0	2	>>
water	25:74	0:0	2	3
water	25:75	0:0	2	)
water	25:76	0:0	2	;
water	26:4	0:0	2	mv_x
op	26:9	0:0	2	=
water	26:11	0:0	2	mv_y
op	26:16	0:0	2	=
water	26:18	0:0	2	0
water	26:19	0:0	2	;
for	28:4	119:4	2	(y = tile -> ypos ;y < ( tile -> ypos + tile -> height );y += band -> mb_size)
forinit	28:9	28:23	3	y = tile -> ypos ;
water	28:9	0:0	4	y
op	28:11	0:0	4	=
water	28:13	0:0	4	tile
op	28:17	0:0	4	->
water	28:19	0:0	4	ypos
water	28:23	0:0	4	;
cond	28:25	28:55	3	y < ( tile -> ypos + tile -> height )
water	28:25	0:0	4	y
op	28:27	0:0	4	<
water	28:29	0:0	4	(
water	28:30	0:0	4	tile
op	28:34	0:0	4	->
water	28:36	0:0	4	ypos
op	28:41	0:0	4	+
water	28:43	0:0	4	tile
op	28:47	0:0	4	->
water	28:49	0:0	4	height
water	28:55	0:0	4	)
forexpr	28:58	28:69	3	y += band -> mb_size
water	28:58	0:0	4	y
op	28:60	0:0	4	+=
water	28:63	0:0	4	band
op	28:67	0:0	4	->
water	28:69	0:0	4	mb_size
stmts	28:78	119:4	3	
water	28:78	0:0	4	{
water	29:8	0:0	4	mb_offset
op	29:18	0:0	4	=
water	29:20	0:0	4	offs
water	29:24	0:0	4	;
for	31:8	116:8	4	(x = tile -> xpos ;x < ( tile -> xpos + tile -> width );x += band -> mb_size)
forinit	31:13	31:27	5	x = tile -> xpos ;
water	31:13	0:0	6	x
op	31:15	0:0	6	=
water	31:17	0:0	6	tile
op	31:21	0:0	6	->
water	31:23	0:0	6	xpos
water	31:27	0:0	6	;
cond	31:29	31:58	5	x < ( tile -> xpos + tile -> width )
water	31:29	0:0	6	x
op	31:31	0:0	6	<
water	31:33	0:0	6	(
water	31:34	0:0	6	tile
op	31:38	0:0	6	->
water	31:40	0:0	6	xpos
op	31:45	0:0	6	+
water	31:47	0:0	6	tile
op	31:51	0:0	6	->
water	31:53	0:0	6	width
water	31:58	0:0	6	)
forexpr	31:61	31:72	5	x += band -> mb_size
water	31:61	0:0	6	x
op	31:63	0:0	6	+=
water	31:66	0:0	6	band
op	31:70	0:0	6	->
water	31:72	0:0	6	mb_size
stmts	31:81	116:8	5	
water	31:81	0:0	6	{
water	32:12	0:0	6	mb
op	32:14	0:0	6	->
water	32:16	0:0	6	xpos
op	32:25	0:0	6	=
water	32:27	0:0	6	x
water	32:28	0:0	6	;
water	33:12	0:0	6	mb
op	33:14	0:0	6	->
water	33:16	0:0	6	ypos
op	33:25	0:0	6	=
water	33:27	0:0	6	y
water	33:28	0:0	6	;
water	34:12	0:0	6	mb
op	34:14	0:0	6	->
water	34:16	0:0	6	buf_offs
op	34:25	0:0	6	=
water	34:27	0:0	6	mb_offset
water	34:36	0:0	6	;
if	36:12	62:12	6	(get_bits1 (& ctx -> gb ))
cond	36:16	36:34	7	get_bits1 (& ctx -> gb )
call	36:16	36:34	8	get_bits1
arg	36:26	36:34	9	&ctx->gb
op	36:26	0:0	10	&
water	36:27	0:0	10	ctx
op	36:30	0:0	10	->
water	36:32	0:0	10	gb
stmts	36:37	62:12	7	
water	36:37	0:0	8	{
if	37:16	40:16	8	(ctx -> frame_type == FRAMETYPE_INTRA)
cond	37:20	37:39	9	ctx -> frame_type == FRAMETYPE_INTRA
water	37:20	0:0	10	ctx
op	37:23	0:0	10	->
water	37:25	0:0	10	frame_type
op	37:36	0:0	10	==
water	37:39	0:0	10	FRAMETYPE_INTRA
stmts	37:56	40:16	9	
water	37:56	0:0	10	{
call	38:20	38:89	10	av_log
arg	38:27	38:32	11	avctx
water	38:27	0:0	12	avctx
arg	38:34	38:46	11	AV_LOG_ERROR
water	38:34	0:0	12	AV_LOG_ERROR
arg	38:48	38:89	11	"Empty macroblock in an INTRA picture!\n"
water	38:48	0:0	12	"Empty macroblock in an INTRA picture!\n"
water	38:90	0:0	10	;
return	39:20	39:29	10	-1
op	39:27	0:0	11	-
water	39:28	0:0	11	1
water	40:16	0:0	10	}
water	41:16	0:0	8	mb
op	41:18	0:0	8	->
water	41:20	0:0	8	type
op	41:25	0:0	8	=
water	41:27	0:0	8	1
water	41:28	0:0	8	;
water	42:16	0:0	8	mb
op	42:18	0:0	8	->
water	42:20	0:0	8	cbp
op	42:25	0:0	8	=
water	42:27	0:0	8	0
water	42:28	0:0	8	;
water	44:16	0:0	8	mb
op	44:18	0:0	8	->
water	44:20	0:0	8	q_delta
op	44:28	0:0	8	=
water	44:30	0:0	8	0
water	44:31	0:0	8	;
if	45:16	49:16	8	(! band -> plane && ! band -> band_num && ( ctx -> frame_flags & 8 ))
cond	45:20	45:76	9	! band -> plane && ! band -> band_num && ( ctx -> frame_flags & 8 )
op	45:20	0:0	10	!
water	45:21	0:0	10	band
op	45:25	0:0	10	->
water	45:27	0:0	10	plane
op	45:33	0:0	10	&&
op	45:36	0:0	10	!
water	45:37	0:0	10	band
op	45:41	0:0	10	->
water	45:43	0:0	10	band_num
op	45:52	0:0	10	&&
water	45:55	0:0	10	(
water	45:56	0:0	10	ctx
op	45:59	0:0	10	->
water	45:61	0:0	10	frame_flags
op	45:73	0:0	10	&
water	45:75	0:0	10	8
water	45:76	0:0	10	)
stmts	45:79	49:16	9	
water	45:79	0:0	10	{
water	46:20	0:0	10	mb
op	46:22	0:0	10	->
water	46:24	0:0	10	q_delta
op	46:32	0:0	10	=
call	46:34	47:58	10	get_vlc2
arg	46:43	46:51	11	&ctx->gb
op	46:43	0:0	12	&
water	46:44	0:0	12	ctx
op	46:47	0:0	12	->
water	46:49	0:0	12	gb
arg	46:53	46:75	11	ctx->mb_vlc.tab->table
water	46:53	0:0	12	ctx
op	46:56	0:0	12	->
water	46:58	0:0	12	mb_vlc
op	46:64	0:0	12	.
water	46:65	0:0	12	tab
op	46:68	0:0	12	->
water	46:70	0:0	12	table
arg	47:43	47:55	11	IVI_VLC_BITS
water	47:43	0:0	12	IVI_VLC_BITS
arg	47:57	47:58	11	1
water	47:57	0:0	12	1
water	47:59	0:0	10	;
water	48:20	0:0	10	mb
op	48:22	0:0	10	->
water	48:24	0:0	10	q_delta
op	48:32	0:0	10	=
call	48:34	48:58	10	IVI_TOSIGNED
arg	48:47	48:58	11	mb->q_delta
water	48:47	0:0	12	mb
op	48:49	0:0	12	->
water	48:51	0:0	12	q_delta
water	48:59	0:0	10	;
water	49:16	0:0	10	}
water	51:16	0:0	8	mb
op	51:18	0:0	8	->
water	51:20	0:0	8	mv_x
op	51:25	0:0	8	=
water	51:27	0:0	8	mb
op	51:29	0:0	8	->
water	51:31	0:0	8	mv_y
op	51:36	0:0	8	=
water	51:38	0:0	8	0
water	51:39	0:0	8	;
if	52:16	61:16	8	(band -> inherit_mv)
cond	52:20	52:26	9	band -> inherit_mv
water	52:20	0:0	10	band
op	52:24	0:0	10	->
water	52:26	0:0	10	inherit_mv
stmts	52:37	61:16	9	
water	52:37	0:0	10	{
if	54:20	57:20	10	(mv_scale)
cond	54:24	54:24	11	mv_scale
water	54:24	0:0	12	mv_scale
stmts	54:34	57:20	11	
water	54:34	0:0	12	{
water	55:24	0:0	12	mb
op	55:26	0:0	12	->
water	55:28	0:0	12	mv_x
op	55:33	0:0	12	=
call	55:35	55:70	12	ivi_scale_mv
arg	55:48	55:60	13	ref_mb->mv_x
water	55:48	0:0	14	ref_mb
op	55:54	0:0	14	->
water	55:56	0:0	14	mv_x
arg	55:62	55:70	13	mv_scale
water	55:62	0:0	14	mv_scale
water	55:71	0:0	12	;
water	56:24	0:0	12	mb
op	56:26	0:0	12	->
water	56:28	0:0	12	mv_y
op	56:33	0:0	12	=
call	56:35	56:70	12	ivi_scale_mv
arg	56:48	56:60	13	ref_mb->mv_y
water	56:48	0:0	14	ref_mb
op	56:54	0:0	14	->
water	56:56	0:0	14	mv_y
arg	56:62	56:70	13	mv_scale
water	56:62	0:0	14	mv_scale
water	56:71	0:0	12	;
water	57:20	0:0	12	}
else	57:22	60:20	10
stmts	57:27	60:20	11	
water	57:27	0:0	12	{
water	58:24	0:0	12	mb
op	58:26	0:0	12	->
water	58:28	0:0	12	mv_x
op	58:33	0:0	12	=
water	58:35	0:0	12	ref_mb
op	58:41	0:0	12	->
water	58:43	0:0	12	mv_x
water	58:47	0:0	12	;
water	59:24	0:0	12	mb
op	59:26	0:0	12	->
water	59:28	0:0	12	mv_y
op	59:33	0:0	12	=
water	59:35	0:0	12	ref_mb
op	59:41	0:0	12	->
water	59:43	0:0	12	mv_y
water	59:47	0:0	12	;
water	60:20	0:0	12	}
water	61:16	0:0	10	}
water	62:12	0:0	8	}
else	62:14	110:12	6
stmts	62:19	110:12	7	
water	62:19	0:0	8	{
if	63:16	65:16	8	(band -> inherit_mv)
cond	63:20	63:26	9	band -> inherit_mv
water	63:20	0:0	10	band
op	63:24	0:0	10	->
water	63:26	0:0	10	inherit_mv
stmts	63:38	65:16	9	
water	63:38	0:0	10	{
water	64:20	0:0	10	mb
op	64:22	0:0	10	->
water	64:24	0:0	10	type
op	64:29	0:0	10	=
water	64:31	0:0	10	ref_mb
op	64:37	0:0	10	->
water	64:39	0:0	10	type
water	64:43	0:0	10	;
water	65:16	0:0	10	}
else	65:18	67:16	8
stmts	65:23	67:16	9	
if	65:23	67:16	10	(ctx -> frame_type == FRAMETYPE_INTRA)
cond	65:27	65:46	11	ctx -> frame_type == FRAMETYPE_INTRA
water	65:27	0:0	12	ctx
op	65:30	0:0	12	->
water	65:32	0:0	12	frame_type
op	65:43	0:0	12	==
water	65:46	0:0	12	FRAMETYPE_INTRA
stmts	65:63	67:16	11	
water	65:63	0:0	12	{
water	66:20	0:0	12	mb
op	66:22	0:0	12	->
water	66:24	0:0	12	type
op	66:29	0:0	12	=
water	66:31	0:0	12	0
water	66:32	0:0	12	;
water	67:16	0:0	12	}
else	67:18	69:16	8
stmts	67:23	69:16	9	
water	67:23	0:0	10	{
water	68:20	0:0	10	mb
op	68:22	0:0	10	->
water	68:24	0:0	10	type
op	68:29	0:0	10	=
call	68:31	68:49	10	get_bits1
arg	68:41	68:49	11	&ctx->gb
op	68:41	0:0	12	&
water	68:42	0:0	12	ctx
op	68:45	0:0	12	->
water	68:47	0:0	12	gb
water	68:50	0:0	10	;
water	69:16	0:0	10	}
water	71:16	0:0	8	blks_per_mb
op	71:28	0:0	8	=
water	71:30	0:0	8	band
op	71:34	0:0	8	->
water	71:36	0:0	8	mb_size
op	71:44	0:0	8	!=
water	71:47	0:0	8	band
op	71:51	0:0	8	->
water	71:53	0:0	8	blk_size
water	71:62	0:0	8	?
water	71:64	0:0	8	4
water	71:66	0:0	8	:
water	71:68	0:0	8	1
water	71:69	0:0	8	;
water	72:16	0:0	8	mb
op	72:18	0:0	8	->
water	72:20	0:0	8	cbp
op	72:24	0:0	8	=
call	72:26	72:56	8	get_bits
arg	72:35	72:43	9	&ctx->gb
op	72:35	0:0	10	&
water	72:36	0:0	10	ctx
op	72:39	0:0	10	->
water	72:41	0:0	10	gb
arg	72:45	72:56	9	blks_per_mb
water	72:45	0:0	10	blks_per_mb
water	72:57	0:0	8	;
water	74:16	0:0	8	mb
op	74:18	0:0	8	->
water	74:20	0:0	8	q_delta
op	74:28	0:0	8	=
water	74:30	0:0	8	0
water	74:31	0:0	8	;
if	75:16	84:16	8	(band -> qdelta_present)
cond	75:20	75:26	9	band -> qdelta_present
water	75:20	0:0	10	band
op	75:24	0:0	10	->
water	75:26	0:0	10	qdelta_present
stmts	75:42	84:16	9	
water	75:42	0:0	10	{
if	76:20	78:20	10	(band -> inherit_qdelta)
cond	76:24	76:30	11	band -> inherit_qdelta
water	76:24	0:0	12	band
op	76:28	0:0	12	->
water	76:30	0:0	12	inherit_qdelta
stmts	76:46	78:20	11	
water	76:46	0:0	12	{
if	77:24	77:65	12	(ref_mb)
cond	77:28	77:28	13	ref_mb
water	77:28	0:0	14	ref_mb
stmts	77:36	77:65	13	
water	77:36	0:0	14	mb
op	77:38	0:0	14	->
water	77:40	0:0	14	q_delta
op	77:48	0:0	14	=
water	77:50	0:0	14	ref_mb
op	77:56	0:0	14	->
water	77:58	0:0	14	q_delta
water	77:65	0:0	14	;
water	78:20	0:0	12	}
else	78:22	83:20	10
stmts	78:27	83:20	11	
if	78:27	83:20	12	(mb -> cbp || ( ! band -> plane && ! band -> band_num && ( ctx -> frame_flags & 8 ) ))
cond	78:31	79:65	13	mb -> cbp || ( ! band -> plane && ! band -> band_num && ( ctx -> frame_flags & 8 ) )
water	78:31	0:0	14	mb
op	78:33	0:0	14	->
water	78:35	0:0	14	cbp
op	78:39	0:0	14	||
water	78:42	0:0	14	(
op	78:43	0:0	14	!
water	78:44	0:0	14	band
op	78:48	0:0	14	->
water	78:50	0:0	14	plane
op	78:56	0:0	14	&&
op	78:59	0:0	14	!
water	78:60	0:0	14	band
op	78:64	0:0	14	->
water	78:66	0:0	14	band_num
op	78:75	0:0	14	&&
water	79:43	0:0	14	(
water	79:44	0:0	14	ctx
op	79:47	0:0	14	->
water	79:49	0:0	14	frame_flags
op	79:61	0:0	14	&
water	79:63	0:0	14	8
water	79:64	0:0	14	)
water	79:65	0:0	14	)
stmts	79:68	83:20	13	
water	79:68	0:0	14	{
water	80:24	0:0	14	mb
op	80:26	0:0	14	->
water	80:28	0:0	14	q_delta
op	80:36	0:0	14	=
call	80:38	81:62	14	get_vlc2
arg	80:47	80:55	15	&ctx->gb
op	80:47	0:0	16	&
water	80:48	0:0	16	ctx
op	80:51	0:0	16	->
water	80:53	0:0	16	gb
arg	80:57	80:79	15	ctx->mb_vlc.tab->table
water	80:57	0:0	16	ctx
op	80:60	0:0	16	->
water	80:62	0:0	16	mb_vlc
op	80:68	0:0	16	.
water	80:69	0:0	16	tab
op	80:72	0:0	16	->
water	80:74	0:0	16	table
arg	81:47	81:59	15	IVI_VLC_BITS
water	81:47	0:0	16	IVI_VLC_BITS
arg	81:61	81:62	15	1
water	81:61	0:0	16	1
water	81:63	0:0	14	;
water	82:24	0:0	14	mb
op	82:26	0:0	14	->
water	82:28	0:0	14	q_delta
op	82:36	0:0	14	=
call	82:38	82:62	14	IVI_TOSIGNED
arg	82:51	82:62	15	mb->q_delta
water	82:51	0:0	16	mb
op	82:53	0:0	16	->
water	82:55	0:0	16	q_delta
water	82:63	0:0	14	;
water	83:20	0:0	14	}
water	84:16	0:0	10	}
if	86:16	88:16	8	(! mb -> type)
cond	86:20	86:25	9	! mb -> type
op	86:20	0:0	10	!
water	86:21	0:0	10	mb
op	86:23	0:0	10	->
water	86:25	0:0	10	type
stmts	86:31	88:16	9	
water	86:31	0:0	10	{
water	87:20	0:0	10	mb
op	87:22	0:0	10	->
water	87:24	0:0	10	mv_x
op	87:29	0:0	10	=
water	87:31	0:0	10	mb
op	87:33	0:0	10	->
water	87:35	0:0	10	mv_y
op	87:40	0:0	10	=
water	87:42	0:0	10	0
water	87:43	0:0	10	;
water	88:16	0:0	10	}
else	88:18	109:16	8
stmts	88:23	109:16	9	
water	88:23	0:0	10	{
if	89:20	98:20	10	(band -> inherit_mv)
cond	89:24	89:30	11	band -> inherit_mv
water	89:24	0:0	12	band
op	89:28	0:0	12	->
water	89:30	0:0	12	inherit_mv
stmts	89:41	98:20	11	
water	89:41	0:0	12	{
if	91:24	94:24	12	(mv_scale)
cond	91:28	91:28	13	mv_scale
water	91:28	0:0	14	mv_scale
stmts	91:38	94:24	13	
water	91:38	0:0	14	{
water	92:28	0:0	14	mb
op	92:30	0:0	14	->
water	92:32	0:0	14	mv_x
op	92:37	0:0	14	=
call	92:39	92:74	14	ivi_scale_mv
arg	92:52	92:64	15	ref_mb->mv_x
water	92:52	0:0	16	ref_mb
op	92:58	0:0	16	->
water	92:60	0:0	16	mv_x
arg	92:66	92:74	15	mv_scale
water	92:66	0:0	16	mv_scale
water	92:75	0:0	14	;
water	93:28	0:0	14	mb
op	93:30	0:0	14	->
water	93:32	0:0	14	mv_y
op	93:37	0:0	14	=
call	93:39	93:74	14	ivi_scale_mv
arg	93:52	93:64	15	ref_mb->mv_y
water	93:52	0:0	16	ref_mb
op	93:58	0:0	16	->
water	93:60	0:0	16	mv_y
arg	93:66	93:74	15	mv_scale
water	93:66	0:0	16	mv_scale
water	93:75	0:0	14	;
water	94:24	0:0	14	}
else	94:26	97:24	12
stmts	94:31	97:24	13	
water	94:31	0:0	14	{
water	95:28	0:0	14	mb
op	95:30	0:0	14	->
water	95:32	0:0	14	mv_x
op	95:37	0:0	14	=
water	95:39	0:0	14	ref_mb
op	95:45	0:0	14	->
water	95:47	0:0	14	mv_x
water	95:51	0:0	14	;
water	96:28	0:0	14	mb
op	96:30	0:0	14	->
water	96:32	0:0	14	mv_y
op	96:37	0:0	14	=
water	96:39	0:0	14	ref_mb
op	96:45	0:0	14	->
water	96:47	0:0	14	mv_y
water	96:51	0:0	14	;
water	97:24	0:0	14	}
water	98:20	0:0	12	}
else	98:22	108:20	10
stmts	98:27	108:20	11	
water	98:27	0:0	12	{
water	100:24	0:0	12	mv_delta
op	100:33	0:0	12	=
call	100:35	101:59	12	get_vlc2
arg	100:44	100:52	13	&ctx->gb
op	100:44	0:0	14	&
water	100:45	0:0	14	ctx
op	100:48	0:0	14	->
water	100:50	0:0	14	gb
arg	100:54	100:76	13	ctx->mb_vlc.tab->table
water	100:54	0:0	14	ctx
op	100:57	0:0	14	->
water	100:59	0:0	14	mb_vlc
op	100:65	0:0	14	.
water	100:66	0:0	14	tab
op	100:69	0:0	14	->
water	100:71	0:0	14	table
arg	101:44	101:56	13	IVI_VLC_BITS
water	101:44	0:0	14	IVI_VLC_BITS
arg	101:58	101:59	13	1
water	101:58	0:0	14	1
water	101:60	0:0	12	;
water	102:24	0:0	12	mv_y
op	102:29	0:0	12	+=
call	102:32	102:53	12	IVI_TOSIGNED
arg	102:45	102:53	13	mv_delta
water	102:45	0:0	14	mv_delta
water	102:54	0:0	12	;
water	103:24	0:0	12	mv_delta
op	103:33	0:0	12	=
call	103:35	104:59	12	get_vlc2
arg	103:44	103:52	13	&ctx->gb
op	103:44	0:0	14	&
water	103:45	0:0	14	ctx
op	103:48	0:0	14	->
water	103:50	0:0	14	gb
arg	103:54	103:76	13	ctx->mb_vlc.tab->table
water	103:54	0:0	14	ctx
op	103:57	0:0	14	->
water	103:59	0:0	14	mb_vlc
op	103:65	0:0	14	.
water	103:66	0:0	14	tab
op	103:69	0:0	14	->
water	103:71	0:0	14	table
arg	104:44	104:56	13	IVI_VLC_BITS
water	104:44	0:0	14	IVI_VLC_BITS
arg	104:58	104:59	13	1
water	104:58	0:0	14	1
water	104:60	0:0	12	;
water	105:24	0:0	12	mv_x
op	105:29	0:0	12	+=
call	105:32	105:53	12	IVI_TOSIGNED
arg	105:45	105:53	13	mv_delta
water	105:45	0:0	14	mv_delta
water	105:54	0:0	12	;
water	106:24	0:0	12	mb
op	106:26	0:0	12	->
water	106:28	0:0	12	mv_x
op	106:33	0:0	12	=
water	106:35	0:0	12	mv_x
water	106:39	0:0	12	;
water	107:24	0:0	12	mb
op	107:26	0:0	12	->
water	107:28	0:0	12	mv_y
op	107:33	0:0	12	=
water	107:35	0:0	12	mv_y
water	107:39	0:0	12	;
water	108:20	0:0	12	}
water	109:16	0:0	10	}
water	110:12	0:0	8	}
water	112:12	0:0	6	mb
op	112:14	0:0	6	++
water	112:16	0:0	6	;
if	113:12	114:24	6	(ref_mb)
cond	113:16	113:16	7	ref_mb
water	113:16	0:0	8	ref_mb
stmts	114:16	114:24	7	
water	114:16	0:0	8	ref_mb
op	114:22	0:0	8	++
water	114:24	0:0	8	;
water	115:12	0:0	6	mb_offset
op	115:22	0:0	6	+=
water	115:25	0:0	6	band
op	115:29	0:0	6	->
water	115:31	0:0	6	mb_size
water	115:38	0:0	6	;
water	116:8	0:0	6	}
water	118:8	0:0	4	offs
op	118:13	0:0	4	+=
water	118:16	0:0	4	row_offset
water	118:26	0:0	4	;
water	119:4	0:0	4	}
call	121:4	121:27	2	align_get_bits
arg	121:19	121:27	3	&ctx->gb
op	121:19	0:0	4	&
water	121:20	0:0	4	ctx
op	121:23	0:0	4	->
water	121:25	0:0	4	gb
water	121:28	0:0	2	;
return	123:4	123:12	2	0
water	123:11	0:0	3	0

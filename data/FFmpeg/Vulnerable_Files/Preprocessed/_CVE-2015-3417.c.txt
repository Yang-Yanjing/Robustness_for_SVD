func	1:0	60:0	0	void	ff_h264_free_tables
params	1:24	0:0	1	
param	1:25	1:39	2	H264Context *	h
param	1:41	1:54	2	int	free_rbsp
stmnts	0:0	59:4	1	
decl	3:4	3:9	2	int	i
decl	4:4	4:19	2	H264Context	*hx
call	6:4	6:35	2	av_freep
arg	6:13	6:35	3	&h->intra4x4_pred_mode
op	6:13	0:0	4	&
water	6:14	0:0	4	h
op	6:15	0:0	4	->
water	6:17	0:0	4	intra4x4_pred_mode
water	6:36	0:0	2	;
call	7:4	7:39	2	av_freep
arg	7:13	7:39	3	&h->chroma_pred_mode_table
op	7:13	0:0	4	&
water	7:14	0:0	4	h
op	7:15	0:0	4	->
water	7:17	0:0	4	chroma_pred_mode_table
water	7:40	0:0	2	;
call	8:4	8:26	2	av_freep
arg	8:13	8:26	3	&h->cbp_table
op	8:13	0:0	4	&
water	8:14	0:0	4	h
op	8:15	0:0	4	->
water	8:17	0:0	4	cbp_table
water	8:27	0:0	2	;
call	9:4	9:29	2	av_freep
arg	9:13	9:29	3	&h->mvd_table[0]
op	9:13	0:0	4	&
water	9:14	0:0	4	h
op	9:15	0:0	4	->
water	9:17	0:0	4	mvd_table
op	9:26	0:0	4	[
water	9:27	0:0	4	0
op	9:28	0:0	4	]
water	9:30	0:0	2	;
call	10:4	10:29	2	av_freep
arg	10:13	10:29	3	&h->mvd_table[1]
op	10:13	0:0	4	&
water	10:14	0:0	4	h
op	10:15	0:0	4	->
water	10:17	0:0	4	mvd_table
op	10:26	0:0	4	[
water	10:27	0:0	4	1
op	10:28	0:0	4	]
water	10:30	0:0	2	;
call	11:4	11:29	2	av_freep
arg	11:13	11:29	3	&h->direct_table
op	11:13	0:0	4	&
water	11:14	0:0	4	h
op	11:15	0:0	4	->
water	11:17	0:0	4	direct_table
water	11:30	0:0	2	;
call	12:4	12:31	2	av_freep
arg	12:13	12:31	3	&h->non_zero_count
op	12:13	0:0	4	&
water	12:14	0:0	4	h
op	12:15	0:0	4	->
water	12:17	0:0	4	non_zero_count
water	12:32	0:0	2	;
call	13:4	13:33	2	av_freep
arg	13:13	13:33	3	&h->slice_table_base
op	13:13	0:0	4	&
water	13:14	0:0	4	h
op	13:15	0:0	4	->
water	13:17	0:0	4	slice_table_base
water	13:34	0:0	2	;
water	14:4	0:0	2	h
op	14:5	0:0	2	->
water	14:7	0:0	2	slice_table
op	14:19	0:0	2	=
water	14:21	0:0	2	NULL
water	14:25	0:0	2	;
call	15:4	15:28	2	av_freep
arg	15:13	15:28	3	&h->list_counts
op	15:13	0:0	4	&
water	15:14	0:0	4	h
op	15:15	0:0	4	->
water	15:17	0:0	4	list_counts
water	15:29	0:0	2	;
call	17:4	17:24	2	av_freep
arg	17:13	17:24	3	&h->mb2b_xy
op	17:13	0:0	4	&
water	17:14	0:0	4	h
op	17:15	0:0	4	->
water	17:17	0:0	4	mb2b_xy
water	17:25	0:0	2	;
call	18:4	18:25	2	av_freep
arg	18:13	18:25	3	&h->mb2br_xy
op	18:13	0:0	4	&
water	18:14	0:0	4	h
op	18:15	0:0	4	->
water	18:17	0:0	4	mb2br_xy
water	18:26	0:0	2	;
call	20:4	20:47	2	av_buffer_pool_uninit
arg	20:26	20:47	3	&h->qscale_table_pool
op	20:26	0:0	4	&
water	20:27	0:0	4	h
op	20:28	0:0	4	->
water	20:30	0:0	4	qscale_table_pool
water	20:48	0:0	2	;
call	21:4	21:42	2	av_buffer_pool_uninit
arg	21:26	21:42	3	&h->mb_type_pool
op	21:26	0:0	4	&
water	21:27	0:0	4	h
op	21:28	0:0	4	->
water	21:30	0:0	4	mb_type_pool
water	21:43	0:0	2	;
call	22:4	22:45	2	av_buffer_pool_uninit
arg	22:26	22:45	3	&h->motion_val_pool
op	22:26	0:0	4	&
water	22:27	0:0	4	h
op	22:28	0:0	4	->
water	22:30	0:0	4	motion_val_pool
water	22:46	0:0	2	;
call	23:4	23:44	2	av_buffer_pool_uninit
arg	23:26	23:44	3	&h->ref_index_pool
op	23:26	0:0	4	&
water	23:27	0:0	4	h
op	23:28	0:0	4	->
water	23:30	0:0	4	ref_index_pool
water	23:45	0:0	2	;
if	25:4	29:4	2	(free_rbsp && h -> DPB)
cond	25:8	25:24	3	free_rbsp && h -> DPB
water	25:8	0:0	4	free_rbsp
op	25:18	0:0	4	&&
water	25:21	0:0	4	h
op	25:22	0:0	4	->
water	25:24	0:0	4	DPB
stmts	25:29	29:4	3	
water	25:29	0:0	4	{
for	26:8	27:48	4	(i = 0 ;i < H264_MAX_PICTURE_COUNT;i ++)
forinit	26:13	26:18	5	i = 0 ;
water	26:13	0:0	6	i
op	26:15	0:0	6	=
water	26:17	0:0	6	0
water	26:18	0:0	6	;
cond	26:20	26:24	5	i < H264_MAX_PICTURE_COUNT
water	26:20	0:0	6	i
op	26:22	0:0	6	<
water	26:24	0:0	6	H264_MAX_PICTURE_COUNT
forexpr	26:48	26:49	5	i ++
water	26:48	0:0	6	i
op	26:49	0:0	6	++
stmts	27:12	27:48	5	
call	27:12	27:47	6	ff_h264_unref_picture
arg	27:34	27:35	7	h
water	27:34	0:0	8	h
arg	27:37	27:47	7	&h->DPB[i]
op	27:37	0:0	8	&
water	27:38	0:0	8	h
op	27:39	0:0	8	->
water	27:41	0:0	8	DPB
op	27:44	0:0	8	[
water	27:45	0:0	8	i
op	27:46	0:0	8	]
water	27:48	0:0	6	;
call	28:8	28:24	4	av_freep
arg	28:17	28:24	5	&h->DPB
op	28:17	0:0	6	&
water	28:18	0:0	6	h
op	28:19	0:0	6	->
water	28:21	0:0	6	DPB
water	28:25	0:0	4	;
water	29:4	0:0	4	}
else	29:6	32:4	2
stmts	29:11	32:4	3	
if	29:11	32:4	4	(h -> DPB)
cond	29:15	29:18	5	h -> DPB
water	29:15	0:0	6	h
op	29:16	0:0	6	->
water	29:18	0:0	6	DPB
stmts	29:23	32:4	5	
water	29:23	0:0	6	{
for	30:8	31:39	6	(i = 0 ;i < H264_MAX_PICTURE_COUNT;i ++)
forinit	30:13	30:18	7	i = 0 ;
water	30:13	0:0	8	i
op	30:15	0:0	8	=
water	30:17	0:0	8	0
water	30:18	0:0	8	;
cond	30:20	30:24	7	i < H264_MAX_PICTURE_COUNT
water	30:20	0:0	8	i
op	30:22	0:0	8	<
water	30:24	0:0	8	H264_MAX_PICTURE_COUNT
forexpr	30:48	30:49	7	i ++
water	30:48	0:0	8	i
op	30:49	0:0	8	++
stmts	31:12	31:39	7	
water	31:12	0:0	8	h
op	31:13	0:0	8	->
water	31:15	0:0	8	DPB
op	31:18	0:0	8	[
water	31:19	0:0	8	i
op	31:20	0:0	8	]
op	31:21	0:0	8	.
water	31:22	0:0	8	needs_realloc
op	31:36	0:0	8	=
water	31:38	0:0	8	1
water	31:39	0:0	8	;
water	32:4	0:0	6	}
water	34:4	0:0	2	h
op	34:5	0:0	2	->
water	34:7	0:0	2	cur_pic_ptr
op	34:19	0:0	2	=
water	34:21	0:0	2	NULL
water	34:25	0:0	2	;
for	36:4	59:4	2	(i = 0 ;i < H264_MAX_THREADS;i ++)
forinit	36:9	36:14	3	i = 0 ;
water	36:9	0:0	4	i
op	36:11	0:0	4	=
water	36:13	0:0	4	0
water	36:14	0:0	4	;
cond	36:16	36:20	3	i < H264_MAX_THREADS
water	36:16	0:0	4	i
op	36:18	0:0	4	<
water	36:20	0:0	4	H264_MAX_THREADS
forexpr	36:38	36:39	3	i ++
water	36:38	0:0	4	i
op	36:39	0:0	4	++
stmts	36:43	59:4	3	
water	36:43	0:0	4	{
water	37:8	0:0	4	hx
op	37:11	0:0	4	=
water	37:13	0:0	4	h
op	37:14	0:0	4	->
water	37:16	0:0	4	thread_context
op	37:30	0:0	4	[
water	37:31	0:0	4	i
op	37:32	0:0	4	]
water	37:33	0:0	4	;
if	38:8	39:20	4	(! hx)
cond	38:12	38:13	5	! hx
op	38:12	0:0	6	!
water	38:13	0:0	6	hx
stmts	39:12	39:20	5	
continue	39:12	39:20	6	
call	40:8	40:36	4	av_freep
arg	40:17	40:36	5	&hx->top_borders[1]
op	40:17	0:0	6	&
water	40:18	0:0	6	hx
op	40:20	0:0	6	->
water	40:22	0:0	6	top_borders
op	40:33	0:0	6	[
water	40:34	0:0	6	1
op	40:35	0:0	6	]
water	40:37	0:0	4	;
call	41:8	41:36	4	av_freep
arg	41:17	41:36	5	&hx->top_borders[0]
op	41:17	0:0	6	&
water	41:18	0:0	6	hx
op	41:20	0:0	6	->
water	41:22	0:0	6	top_borders
op	41:33	0:0	6	[
water	41:34	0:0	6	0
op	41:35	0:0	6	]
water	41:37	0:0	4	;
call	42:8	42:39	4	av_freep
arg	42:17	42:39	5	&hx->bipred_scratchpad
op	42:17	0:0	6	&
water	42:18	0:0	6	hx
op	42:20	0:0	6	->
water	42:22	0:0	6	bipred_scratchpad
water	42:40	0:0	4	;
call	43:8	43:37	4	av_freep
arg	43:17	43:37	5	&hx->edge_emu_buffer
op	43:17	0:0	6	&
water	43:18	0:0	6	hx
op	43:20	0:0	6	->
water	43:22	0:0	6	edge_emu_buffer
water	43:38	0:0	4	;
call	44:8	44:33	4	av_freep
arg	44:17	44:33	5	&hx->dc_val_base
op	44:17	0:0	6	&
water	44:18	0:0	6	hx
op	44:20	0:0	6	->
water	44:22	0:0	6	dc_val_base
water	44:34	0:0	4	;
call	45:8	45:36	4	av_freep
arg	45:17	45:36	5	&hx->er.mb_index2xy
op	45:17	0:0	6	&
water	45:18	0:0	6	hx
op	45:20	0:0	6	->
water	45:22	0:0	6	er
op	45:24	0:0	6	.
water	45:25	0:0	6	mb_index2xy
water	45:37	0:0	4	;
call	46:8	46:43	4	av_freep
arg	46:17	46:43	5	&hx->er.error_status_table
op	46:17	0:0	6	&
water	46:18	0:0	6	hx
op	46:20	0:0	6	->
water	46:22	0:0	6	er
op	46:24	0:0	6	.
water	46:25	0:0	6	error_status_table
water	46:44	0:0	4	;
call	47:8	47:39	4	av_freep
arg	47:17	47:39	5	&hx->er.er_temp_buffer
op	47:17	0:0	6	&
water	47:18	0:0	6	hx
op	47:20	0:0	6	->
water	47:22	0:0	6	er
op	47:24	0:0	6	.
water	47:25	0:0	6	er_temp_buffer
water	47:40	0:0	4	;
call	48:8	48:38	4	av_freep
arg	48:17	48:38	5	&hx->er.mbintra_table
op	48:17	0:0	6	&
water	48:18	0:0	6	hx
op	48:20	0:0	6	->
water	48:22	0:0	6	er
op	48:24	0:0	6	.
water	48:25	0:0	6	mbintra_table
water	48:39	0:0	4	;
call	49:8	49:37	4	av_freep
arg	49:17	49:37	5	&hx->er.mbskip_table
op	49:17	0:0	6	&
water	49:18	0:0	6	hx
op	49:20	0:0	6	->
water	49:22	0:0	6	er
op	49:24	0:0	6	.
water	49:25	0:0	6	mbskip_table
water	49:38	0:0	4	;
if	51:8	56:8	4	(free_rbsp)
cond	51:12	51:12	5	free_rbsp
water	51:12	0:0	6	free_rbsp
stmts	51:23	56:8	5	
water	51:23	0:0	6	{
call	52:12	52:40	6	av_freep
arg	52:21	52:40	7	&hx->rbsp_buffer[1]
op	52:21	0:0	8	&
water	52:22	0:0	8	hx
op	52:24	0:0	8	->
water	52:26	0:0	8	rbsp_buffer
op	52:37	0:0	8	[
water	52:38	0:0	8	1
op	52:39	0:0	8	]
water	52:41	0:0	6	;
call	53:12	53:40	6	av_freep
arg	53:21	53:40	7	&hx->rbsp_buffer[0]
op	53:21	0:0	8	&
water	53:22	0:0	8	hx
op	53:24	0:0	8	->
water	53:26	0:0	8	rbsp_buffer
op	53:37	0:0	8	[
water	53:38	0:0	8	0
op	53:39	0:0	8	]
water	53:41	0:0	6	;
water	54:12	0:0	6	hx
op	54:14	0:0	6	->
water	54:16	0:0	6	rbsp_buffer_size
op	54:32	0:0	6	[
water	54:33	0:0	6	0
op	54:34	0:0	6	]
op	54:36	0:0	6	=
water	54:38	0:0	6	0
water	54:39	0:0	6	;
water	55:12	0:0	6	hx
op	55:14	0:0	6	->
water	55:16	0:0	6	rbsp_buffer_size
op	55:32	0:0	6	[
water	55:33	0:0	6	1
op	55:34	0:0	6	]
op	55:36	0:0	6	=
water	55:38	0:0	6	0
water	55:39	0:0	6	;
water	56:8	0:0	6	}
if	57:8	58:43	4	(i)
cond	57:12	57:12	5	i
water	57:12	0:0	6	i
stmts	58:12	58:43	5	
call	58:12	58:42	6	av_freep
arg	58:21	58:42	7	&h->thread_context[i]
op	58:21	0:0	8	&
water	58:22	0:0	8	h
op	58:23	0:0	8	->
water	58:25	0:0	8	thread_context
op	58:39	0:0	8	[
water	58:40	0:0	8	i
op	58:41	0:0	8	]
water	58:43	0:0	6	;
water	59:4	0:0	4	}

func	2:5	152:0	0	PNGAPI	png_read_png
params	3:12	0:0	1	
param	3:13	3:32	2	png_structp	png_ptr
param	3:34	3:52	2	png_infop	info_ptr
param	4:27	4:41	2	int	transforms
param	5:27	5:39	2	voidp	params
stmnts	0:0	150:18	1	
decl	7:3	7:10	2	int	row
if	9:3	9:30	2	(png_ptr == NULL)
cond	9:7	9:18	3	png_ptr == NULL
water	9:7	0:0	4	png_ptr
op	9:15	0:0	4	==
water	9:18	0:0	4	NULL
stmts	9:24	9:30	3	
return	9:24	9:30	4	
if	13:3	14:36	2	(transforms & PNG_TRANSFORM_INVERT_ALPHA)
cond	13:7	13:20	3	transforms & PNG_TRANSFORM_INVERT_ALPHA
water	13:7	0:0	4	transforms
op	13:18	0:0	4	&
water	13:20	0:0	4	PNG_TRANSFORM_INVERT_ALPHA
stmts	14:7	14:36	3	
call	14:7	14:35	4	png_set_invert_alpha
arg	14:28	14:35	5	png_ptr
water	14:28	0:0	6	png_ptr
water	14:36	0:0	4	;
call	20:3	20:34	2	png_read_info
arg	20:17	20:24	3	png_ptr
water	20:17	0:0	4	png_ptr
arg	20:26	20:34	3	info_ptr
water	20:26	0:0	4	info_ptr
water	20:35	0:0	2	;
if	21:3	22:76	2	(info_ptr -> height > PNG_UINT_32_MAX /png_sizeof (png_bytep ))
cond	21:7	21:62	3	info_ptr -> height > PNG_UINT_32_MAX /png_sizeof (png_bytep )
water	21:7	0:0	4	info_ptr
op	21:15	0:0	4	->
water	21:17	0:0	4	height
op	21:24	0:0	4	>
water	21:26	0:0	4	PNG_UINT_32_MAX
op	21:41	0:0	4	/
call	21:42	21:62	4	png_sizeof
arg	21:53	21:62	5	png_bytep
water	21:53	0:0	6	png_bytep
stmts	22:6	22:76	3	
call	22:6	22:75	4	png_error
arg	22:16	22:23	5	png_ptr
water	22:16	0:0	6	png_ptr
arg	22:25	22:75	5	"Image is too high to process with png_read_png()"
water	22:25	0:0	6	"Image is too high to process with png_read_png()"
water	22:76	0:0	4	;
if	29:3	30:32	2	(transforms & PNG_TRANSFORM_STRIP_16)
cond	29:7	29:20	3	transforms & PNG_TRANSFORM_STRIP_16
water	29:7	0:0	4	transforms
op	29:18	0:0	4	&
water	29:20	0:0	4	PNG_TRANSFORM_STRIP_16
stmts	30:7	30:32	3	
call	30:7	30:31	4	png_set_strip_16
arg	30:24	30:31	5	png_ptr
water	30:24	0:0	6	png_ptr
water	30:32	0:0	4	;
if	37:3	38:35	2	(transforms & PNG_TRANSFORM_STRIP_ALPHA)
cond	37:7	37:20	3	transforms & PNG_TRANSFORM_STRIP_ALPHA
water	37:7	0:0	4	transforms
op	37:18	0:0	4	&
water	37:20	0:0	4	PNG_TRANSFORM_STRIP_ALPHA
stmts	38:7	38:35	3	
call	38:7	38:34	4	png_set_strip_alpha
arg	38:27	38:34	5	png_ptr
water	38:27	0:0	6	png_ptr
water	38:35	0:0	4	;
if	45:3	46:31	2	(transforms & PNG_TRANSFORM_PACKING)
cond	45:7	45:20	3	transforms & PNG_TRANSFORM_PACKING
water	45:7	0:0	4	transforms
op	45:18	0:0	4	&
water	45:20	0:0	4	PNG_TRANSFORM_PACKING
stmts	46:7	46:31	3	
call	46:7	46:30	4	png_set_packing
arg	46:23	46:30	5	png_ptr
water	46:23	0:0	6	png_ptr
water	46:31	0:0	4	;
if	53:3	54:32	2	(transforms & PNG_TRANSFORM_PACKSWAP)
cond	53:7	53:20	3	transforms & PNG_TRANSFORM_PACKSWAP
water	53:7	0:0	4	transforms
op	53:18	0:0	4	&
water	53:20	0:0	4	PNG_TRANSFORM_PACKSWAP
stmts	54:7	54:32	3	
call	54:7	54:31	4	png_set_packswap
arg	54:24	54:31	5	png_ptr
water	54:24	0:0	6	png_ptr
water	54:32	0:0	4	;
if	63:3	67:32	2	(transforms & PNG_TRANSFORM_EXPAND)
cond	63:7	63:20	3	transforms & PNG_TRANSFORM_EXPAND
water	63:7	0:0	4	transforms
op	63:18	0:0	4	&
water	63:20	0:0	4	PNG_TRANSFORM_EXPAND
stmts	64:7	67:32	3	
if	64:7	67:32	4	(( png_ptr -> bit_depth < 8 ) || ( png_ptr -> color_type == PNG_COLOR_TYPE_PALETTE ) || (png_get_valid (png_ptr ,info_ptr ,PNG_INFO_tRNS ) ))
cond	64:11	66:59	5	( png_ptr -> bit_depth < 8 ) || ( png_ptr -> color_type == PNG_COLOR_TYPE_PALETTE ) || (png_get_valid (png_ptr ,info_ptr ,PNG_INFO_tRNS ) )
water	64:11	0:0	6	(
water	64:12	0:0	6	png_ptr
op	64:19	0:0	6	->
water	64:21	0:0	6	bit_depth
op	64:31	0:0	6	<
water	64:33	0:0	6	8
water	64:34	0:0	6	)
op	64:36	0:0	6	||
water	65:11	0:0	6	(
water	65:12	0:0	6	png_ptr
op	65:19	0:0	6	->
water	65:21	0:0	6	color_type
op	65:32	0:0	6	==
water	65:35	0:0	6	PNG_COLOR_TYPE_PALETTE
water	65:57	0:0	6	)
op	65:59	0:0	6	||
water	66:11	0:0	6	(
call	66:12	66:58	6	png_get_valid
arg	66:26	66:33	7	png_ptr
water	66:26	0:0	8	png_ptr
arg	66:35	66:43	7	info_ptr
water	66:35	0:0	8	info_ptr
arg	66:45	66:58	7	PNG_INFO_tRNS
water	66:45	0:0	8	PNG_INFO_tRNS
water	66:59	0:0	6	)
stmts	67:9	67:32	5	
call	67:9	67:31	6	png_set_expand
arg	67:24	67:31	7	png_ptr
water	67:24	0:0	8	png_ptr
water	67:32	0:0	6	;
if	76:3	77:35	2	(transforms & PNG_TRANSFORM_INVERT_MONO)
cond	76:7	76:20	3	transforms & PNG_TRANSFORM_INVERT_MONO
water	76:7	0:0	4	transforms
op	76:18	0:0	4	&
water	76:20	0:0	4	PNG_TRANSFORM_INVERT_MONO
stmts	77:7	77:35	3	
call	77:7	77:34	4	png_set_invert_mono
arg	77:27	77:34	5	png_ptr
water	77:27	0:0	6	png_ptr
water	77:35	0:0	4	;
if	85:3	92:3	2	(( transforms & PNG_TRANSFORM_SHIFT ) &&png_get_valid (png_ptr ,info_ptr ,PNG_INFO_sBIT ))
cond	85:7	86:56	3	( transforms & PNG_TRANSFORM_SHIFT ) &&png_get_valid (png_ptr ,info_ptr ,PNG_INFO_sBIT )
water	85:7	0:0	4	(
water	85:8	0:0	4	transforms
op	85:19	0:0	4	&
water	85:21	0:0	4	PNG_TRANSFORM_SHIFT
water	85:40	0:0	4	)
op	86:7	0:0	4	&&
call	86:10	86:56	4	png_get_valid
arg	86:24	86:31	5	png_ptr
water	86:24	0:0	6	png_ptr
arg	86:33	86:41	5	info_ptr
water	86:33	0:0	6	info_ptr
arg	86:43	86:56	5	PNG_INFO_sBIT
water	86:43	0:0	6	PNG_INFO_sBIT
stmts	87:3	92:3	3	
water	87:3	0:0	4	{
decl	88:6	88:26	4	png_color_8p	sig_bit
call	90:6	90:46	4	png_get_sBIT
arg	90:19	90:26	5	png_ptr
water	90:19	0:0	6	png_ptr
arg	90:28	90:36	5	info_ptr
water	90:28	0:0	6	info_ptr
arg	90:38	90:46	5	&sig_bit
op	90:38	0:0	6	&
water	90:39	0:0	6	sig_bit
water	90:47	0:0	4	;
call	91:6	91:36	4	png_set_shift
arg	91:20	91:27	5	png_ptr
water	91:20	0:0	6	png_ptr
arg	91:29	91:36	5	sig_bit
water	91:29	0:0	6	sig_bit
water	91:37	0:0	4	;
water	92:3	0:0	4	}
if	98:3	99:27	2	(transforms & PNG_TRANSFORM_BGR)
cond	98:7	98:20	3	transforms & PNG_TRANSFORM_BGR
water	98:7	0:0	4	transforms
op	98:18	0:0	4	&
water	98:20	0:0	4	PNG_TRANSFORM_BGR
stmts	99:7	99:27	3	
call	99:7	99:26	4	png_set_bgr
arg	99:19	99:26	5	png_ptr
water	99:19	0:0	6	png_ptr
water	99:27	0:0	4	;
if	105:3	106:34	2	(transforms & PNG_TRANSFORM_SWAP_ALPHA)
cond	105:7	105:20	3	transforms & PNG_TRANSFORM_SWAP_ALPHA
water	105:7	0:0	4	transforms
op	105:18	0:0	4	&
water	105:20	0:0	4	PNG_TRANSFORM_SWAP_ALPHA
stmts	106:7	106:34	3	
call	106:7	106:33	4	png_set_swap_alpha
arg	106:26	106:33	5	png_ptr
water	106:26	0:0	6	png_ptr
water	106:34	0:0	4	;
if	112:3	113:28	2	(transforms & PNG_TRANSFORM_SWAP_ENDIAN)
cond	112:7	112:20	3	transforms & PNG_TRANSFORM_SWAP_ENDIAN
water	112:7	0:0	4	transforms
op	112:18	0:0	4	&
water	112:20	0:0	4	PNG_TRANSFORM_SWAP_ENDIAN
stmts	113:7	113:28	3	
call	113:7	113:27	4	png_set_swap
arg	113:20	113:27	5	png_ptr
water	113:20	0:0	6	png_ptr
water	113:28	0:0	4	;
call	122:3	122:41	2	png_read_update_info
arg	122:24	122:31	3	png_ptr
water	122:24	0:0	4	png_ptr
arg	122:33	122:41	3	info_ptr
water	122:33	0:0	4	info_ptr
water	122:42	0:0	2	;
call	127:3	127:52	2	png_free_data
arg	127:17	127:24	3	png_ptr
water	127:17	0:0	4	png_ptr
arg	127:26	127:34	3	info_ptr
water	127:26	0:0	4	info_ptr
arg	127:36	127:49	3	PNG_FREE_ROWS
water	127:36	0:0	4	PNG_FREE_ROWS
arg	127:51	127:52	3	0
water	127:51	0:0	4	0
water	127:53	0:0	2	;
if	129:3	141:3	2	(info_ptr -> row_pointers == NULL)
cond	129:7	129:33	3	info_ptr -> row_pointers == NULL
water	129:7	0:0	4	info_ptr
op	129:15	0:0	4	->
water	129:17	0:0	4	row_pointers
op	129:30	0:0	4	==
water	129:33	0:0	4	NULL
stmts	130:3	141:3	3	
water	130:3	0:0	4	{
water	131:6	0:0	4	info_ptr
op	131:14	0:0	4	->
water	131:16	0:0	4	row_pointers
op	131:29	0:0	4	=
water	131:31	0:0	4	(
water	131:32	0:0	4	png_bytepp
water	131:42	0:0	4	)
call	131:43	132:49	4	png_malloc
arg	131:54	131:61	5	png_ptr
water	131:54	0:0	6	png_ptr
arg	132:9	132:49	5	info_ptr->height*png_sizeof(png_bytep)
water	132:9	0:0	6	info_ptr
op	132:17	0:0	6	->
water	132:19	0:0	6	height
call	132:26	132:48	6	*png_sizeof
arg	132:39	132:48	7	png_bytep
water	132:39	0:0	8	png_bytep
water	132:50	0:0	4	;
water	134:6	0:0	4	info_ptr
op	134:14	0:0	4	->
water	134:16	0:0	4	free_me
op	134:24	0:0	4	|=
water	134:27	0:0	4	PNG_FREE_ROWS
water	134:40	0:0	4	;
for	136:6	140:6	4	(row = 0 ;row < ( int ) info_ptr -> height;row ++)
forinit	136:11	136:18	5	row = 0 ;
water	136:11	0:0	6	row
op	136:15	0:0	6	=
water	136:17	0:0	6	0
water	136:18	0:0	6	;
cond	136:20	136:41	5	row < ( int ) info_ptr -> height
water	136:20	0:0	6	row
op	136:24	0:0	6	<
water	136:26	0:0	6	(
water	136:27	0:0	6	int
water	136:30	0:0	6	)
water	136:31	0:0	6	info_ptr
op	136:39	0:0	6	->
water	136:41	0:0	6	height
forexpr	136:49	136:52	5	row ++
water	136:49	0:0	6	row
op	136:52	0:0	6	++
stmts	137:6	140:6	5	
water	137:6	0:0	6	{
water	138:9	0:0	6	info_ptr
op	138:17	0:0	6	->
water	138:19	0:0	6	row_pointers
op	138:31	0:0	6	[
water	138:32	0:0	6	row
op	138:35	0:0	6	]
op	138:37	0:0	6	=
water	138:39	0:0	6	(
water	138:40	0:0	6	png_bytep
water	138:49	0:0	6	)
call	138:50	139:47	6	png_malloc
arg	138:61	138:68	7	png_ptr
water	138:61	0:0	8	png_ptr
arg	139:12	139:47	7	png_get_rowbytes(png_ptr,info_ptr)
call	139:12	139:46	8	png_get_rowbytes
arg	139:29	139:36	9	png_ptr
water	139:29	0:0	10	png_ptr
arg	139:38	139:46	9	info_ptr
water	139:38	0:0	10	info_ptr
water	139:48	0:0	6	;
water	140:6	0:0	6	}
water	141:3	0:0	4	}
call	143:3	143:49	2	png_read_image
arg	143:18	143:25	3	png_ptr
water	143:18	0:0	4	png_ptr
arg	143:27	143:49	3	info_ptr->row_pointers
water	143:27	0:0	4	info_ptr
op	143:35	0:0	4	->
water	143:37	0:0	4	row_pointers
water	143:50	0:0	2	;
water	144:3	0:0	2	info_ptr
op	144:11	0:0	2	->
water	144:13	0:0	2	valid
op	144:19	0:0	2	|=
water	144:22	0:0	2	PNG_INFO_IDAT
water	144:35	0:0	2	;
call	147:3	147:33	2	png_read_end
arg	147:16	147:23	3	png_ptr
water	147:16	0:0	4	png_ptr
arg	147:25	147:33	3	info_ptr
water	147:25	0:0	4	info_ptr
water	147:34	0:0	2	;
water	149:3	0:0	2	transforms
op	149:14	0:0	2	=
water	149:16	0:0	2	transforms
water	149:26	0:0	2	;
water	150:3	0:0	2	params
op	150:10	0:0	2	=
water	150:12	0:0	2	params
water	150:18	0:0	2	;

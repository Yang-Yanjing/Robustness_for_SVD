D:\postGraduate\code\function_representation_learning\Data\LibPNG\vulnerable_Files\vulnerable_functions\cve-2014-9495.c line 234:7 mismatched character '<EOF>' expecting '\n'
func	2:5	233:0	0	PNGAPI	png_read_row
params	3:12	0:0	1	
param	3:13	3:33	2	png_structrp	png_ptr
param	3:35	3:48	2	png_bytep	row
param	3:50	3:67	2	png_bytep	dsp_row
stmnts	0:0	231:76	1	
decl	5:3	5:24	2	png_row_info	row_info
if	7:3	8:12	2	(png_ptr == NULL)
cond	7:7	7:18	3	png_ptr == NULL
water	7:7	0:0	4	png_ptr
op	7:15	0:0	4	==
water	7:18	0:0	4	NULL
stmts	8:6	8:12	3	
return	8:6	8:12	4	
call	10:3	11:56	2	png_debug2
arg	10:14	10:15	3	1
water	10:14	0:0	4	1
arg	10:17	10:53	3	"in png_read_row (row %lu, pass %d)"
water	10:17	0:0	4	"in png_read_row (row %lu, pass %d)"
arg	11:7	11:41	3	(unsignedlong)png_ptr->row_number
water	11:7	0:0	4	(
water	11:8	0:0	4	unsigned
water	11:17	0:0	4	long
water	11:21	0:0	4	)
water	11:22	0:0	4	png_ptr
op	11:29	0:0	4	->
water	11:31	0:0	4	row_number
arg	11:43	11:56	3	png_ptr->pass
water	11:43	0:0	4	png_ptr
op	11:50	0:0	4	->
water	11:52	0:0	4	pass
water	11:57	0:0	2	;
if	16:3	17:33	2	(! ( png_ptr -> flags & PNG_FLAG_ROW_INIT ))
cond	16:7	16:43	3	! ( png_ptr -> flags & PNG_FLAG_ROW_INIT )
op	16:7	0:0	4	!
water	16:8	0:0	4	(
water	16:9	0:0	4	png_ptr
op	16:16	0:0	4	->
water	16:18	0:0	4	flags
op	16:24	0:0	4	&
water	16:26	0:0	4	PNG_FLAG_ROW_INIT
water	16:43	0:0	4	)
stmts	17:6	17:33	3	
call	17:6	17:32	4	png_read_start_row
arg	17:25	17:32	5	png_ptr
water	17:25	0:0	6	png_ptr
water	17:33	0:0	4	;
water	20:3	0:0	2	row_info
op	20:11	0:0	2	.
water	20:12	0:0	2	width
op	20:18	0:0	2	=
water	20:20	0:0	2	png_ptr
op	20:27	0:0	2	->
water	20:29	0:0	2	iwidth
water	20:35	0:0	2	;
water	21:3	0:0	2	row_info
op	21:11	0:0	2	.
water	21:12	0:0	2	color_type
op	21:23	0:0	2	=
water	21:25	0:0	2	png_ptr
op	21:32	0:0	2	->
water	21:34	0:0	2	color_type
water	21:44	0:0	2	;
water	22:3	0:0	2	row_info
op	22:11	0:0	2	.
water	22:12	0:0	2	bit_depth
op	22:22	0:0	2	=
water	22:24	0:0	2	png_ptr
op	22:31	0:0	2	->
water	22:33	0:0	2	bit_depth
water	22:42	0:0	2	;
water	23:3	0:0	2	row_info
op	23:11	0:0	2	.
water	23:12	0:0	2	channels
op	23:21	0:0	2	=
water	23:23	0:0	2	png_ptr
op	23:30	0:0	2	->
water	23:32	0:0	2	channels
water	23:40	0:0	2	;
water	24:3	0:0	2	row_info
op	24:11	0:0	2	.
water	24:12	0:0	2	pixel_depth
op	24:24	0:0	2	=
water	24:26	0:0	2	png_ptr
op	24:33	0:0	2	->
water	24:35	0:0	2	pixel_depth
water	24:46	0:0	2	;
water	25:3	0:0	2	row_info
op	25:11	0:0	2	.
water	25:12	0:0	2	rowbytes
op	25:21	0:0	2	=
call	25:23	25:72	2	PNG_ROWBYTES
arg	25:36	25:56	3	row_info.pixel_depth
water	25:36	0:0	4	row_info
op	25:44	0:0	4	.
water	25:45	0:0	4	pixel_depth
arg	25:58	25:72	3	row_info.width
water	25:58	0:0	4	row_info
op	25:66	0:0	4	.
water	25:67	0:0	4	width
water	25:73	0:0	2	;
if	27:3	65:3	2	(png_ptr -> row_number == 0 && png_ptr -> pass == 0)
cond	27:7	27:52	3	png_ptr -> row_number == 0 && png_ptr -> pass == 0
water	27:7	0:0	4	png_ptr
op	27:14	0:0	4	->
water	27:16	0:0	4	row_number
op	27:27	0:0	4	==
water	27:30	0:0	4	0
op	27:32	0:0	4	&&
water	27:35	0:0	4	png_ptr
op	27:42	0:0	4	->
water	27:44	0:0	4	pass
op	27:49	0:0	4	==
water	27:52	0:0	4	0
stmts	28:3	65:3	3	
water	28:3	0:0	4	{
if	31:3	32:70	4	(png_ptr -> transformations & PNG_INVERT_MONO)
cond	31:7	31:34	5	png_ptr -> transformations & PNG_INVERT_MONO
water	31:7	0:0	6	png_ptr
op	31:14	0:0	6	->
water	31:16	0:0	6	transformations
op	31:32	0:0	6	&
water	31:34	0:0	6	PNG_INVERT_MONO
stmts	32:6	32:70	5	
call	32:6	32:69	6	png_warning
arg	32:18	32:25	7	png_ptr
water	32:18	0:0	8	png_ptr
arg	32:27	32:69	7	"PNG_READ_INVERT_SUPPORTED is not defined"
water	32:27	0:0	8	"PNG_READ_INVERT_SUPPORTED is not defined"
water	32:70	0:0	6	;
if	36:3	37:70	4	(png_ptr -> transformations & PNG_FILLER)
cond	36:7	36:34	5	png_ptr -> transformations & PNG_FILLER
water	36:7	0:0	6	png_ptr
op	36:14	0:0	6	->
water	36:16	0:0	6	transformations
op	36:32	0:0	6	&
water	36:34	0:0	6	PNG_FILLER
stmts	37:6	37:70	5	
call	37:6	37:69	6	png_warning
arg	37:18	37:25	7	png_ptr
water	37:18	0:0	8	png_ptr
arg	37:27	37:69	7	"PNG_READ_FILLER_SUPPORTED is not defined"
water	37:27	0:0	8	"PNG_READ_FILLER_SUPPORTED is not defined"
water	37:70	0:0	6	;
op	41:4	0:0	4	!
call	41:5	41:40	4	defined
arg	41:13	41:40	5	PNG_READ_PACKSWAP_SUPPORTED
water	41:13	0:0	6	PNG_READ_PACKSWAP_SUPPORTED
water	42:3	0:0	4	if
water	42:6	0:0	4	(
water	42:7	0:0	4	png_ptr
op	42:14	0:0	4	->
water	42:16	0:0	4	transformations
op	42:32	0:0	4	&
water	42:34	0:0	4	PNG_PACKSWAP
water	42:46	0:0	4	)
call	43:6	43:71	4	png_warning
arg	43:18	43:25	5	png_ptr
water	43:18	0:0	6	png_ptr
arg	43:27	43:71	5	"PNG_READ_PACKSWAP_SUPPORTED is not defined"
water	43:27	0:0	6	"PNG_READ_PACKSWAP_SUPPORTED is not defined"
water	43:72	0:0	4	;
if	47:3	48:68	4	(png_ptr -> transformations & PNG_PACK)
cond	47:7	47:34	5	png_ptr -> transformations & PNG_PACK
water	47:7	0:0	6	png_ptr
op	47:14	0:0	6	->
water	47:16	0:0	6	transformations
op	47:32	0:0	6	&
water	47:34	0:0	6	PNG_PACK
stmts	48:6	48:68	5	
call	48:6	48:67	6	png_warning
arg	48:18	48:25	7	png_ptr
water	48:18	0:0	8	png_ptr
arg	48:27	48:67	7	"PNG_READ_PACK_SUPPORTED is not defined"
water	48:27	0:0	8	"PNG_READ_PACK_SUPPORTED is not defined"
water	48:68	0:0	6	;
if	52:3	53:69	4	(png_ptr -> transformations & PNG_SHIFT)
cond	52:7	52:34	5	png_ptr -> transformations & PNG_SHIFT
water	52:7	0:0	6	png_ptr
op	52:14	0:0	6	->
water	52:16	0:0	6	transformations
op	52:32	0:0	6	&
water	52:34	0:0	6	PNG_SHIFT
stmts	53:6	53:69	5	
call	53:6	53:68	6	png_warning
arg	53:18	53:25	7	png_ptr
water	53:18	0:0	8	png_ptr
arg	53:27	53:68	7	"PNG_READ_SHIFT_SUPPORTED is not defined"
water	53:27	0:0	8	"PNG_READ_SHIFT_SUPPORTED is not defined"
water	53:69	0:0	6	;
if	57:3	58:67	4	(png_ptr -> transformations & PNG_BGR)
cond	57:7	57:34	5	png_ptr -> transformations & PNG_BGR
water	57:7	0:0	6	png_ptr
op	57:14	0:0	6	->
water	57:16	0:0	6	transformations
op	57:32	0:0	6	&
water	57:34	0:0	6	PNG_BGR
stmts	58:6	58:67	5	
call	58:6	58:66	6	png_warning
arg	58:18	58:25	7	png_ptr
water	58:18	0:0	8	png_ptr
arg	58:27	58:66	7	"PNG_READ_BGR_SUPPORTED is not defined"
water	58:27	0:0	8	"PNG_READ_BGR_SUPPORTED is not defined"
water	58:67	0:0	6	;
if	62:3	63:68	4	(png_ptr -> transformations & PNG_SWAP_BYTES)
cond	62:7	62:34	5	png_ptr -> transformations & PNG_SWAP_BYTES
water	62:7	0:0	6	png_ptr
op	62:14	0:0	6	->
water	62:16	0:0	6	transformations
op	62:32	0:0	6	&
water	62:34	0:0	6	PNG_SWAP_BYTES
stmts	63:6	63:68	5	
call	63:6	63:67	6	png_warning
arg	63:18	63:25	7	png_ptr
water	63:18	0:0	8	png_ptr
arg	63:27	63:67	7	"PNG_READ_SWAP_SUPPORTED is not defined"
water	63:27	0:0	8	"PNG_READ_SWAP_SUPPORTED is not defined"
water	63:68	0:0	6	;
water	65:3	0:0	4	}
if	74:3	152:3	2	(png_ptr -> interlaced && ( png_ptr -> transformations & PNG_INTERLACE ))
cond	74:7	74:71	3	png_ptr -> interlaced && ( png_ptr -> transformations & PNG_INTERLACE )
water	74:7	0:0	4	png_ptr
op	74:14	0:0	4	->
water	74:16	0:0	4	interlaced
op	74:27	0:0	4	&&
water	74:30	0:0	4	(
water	74:31	0:0	4	png_ptr
op	74:38	0:0	4	->
water	74:40	0:0	4	transformations
op	74:56	0:0	4	&
water	74:58	0:0	4	PNG_INTERLACE
water	74:71	0:0	4	)
stmts	75:3	152:3	3	
water	75:3	0:0	4	{
switch	76:6	151:6	4	(png_ptr -> pass)
cond	76:14	76:23	5	png_ptr -> pass
water	76:14	0:0	6	png_ptr
op	76:21	0:0	6	->
water	76:23	0:0	6	pass
stmts	77:6	151:6	5	
water	77:6	0:0	6	{
label	78:9	78:15	6	case 0 :
if	79:12	85:12	6	(png_ptr -> row_number & 0 x07)
cond	79:16	79:39	7	png_ptr -> row_number & 0 x07
water	79:16	0:0	8	png_ptr
op	79:23	0:0	8	->
water	79:25	0:0	8	row_number
op	79:36	0:0	8	&
water	79:38	0:0	8	0
water	79:39	0:0	8	x07
stmts	80:12	85:12	7	
water	80:12	0:0	8	{
if	81:15	82:54	8	(dsp_row != NULL)
cond	81:19	81:30	9	dsp_row != NULL
water	81:19	0:0	10	dsp_row
op	81:27	0:0	10	!=
water	81:30	0:0	10	NULL
stmts	82:18	82:54	9	
call	82:18	82:53	10	png_combine_row
arg	82:34	82:41	11	png_ptr
water	82:34	0:0	12	png_ptr
arg	82:43	82:50	11	dsp_row
water	82:43	0:0	12	dsp_row
arg	82:52	82:53	11	1
water	82:52	0:0	12	1
water	82:54	0:0	10	;
call	83:15	83:42	8	png_read_finish_row
arg	83:35	83:42	9	png_ptr
water	83:35	0:0	10	png_ptr
water	83:43	0:0	8	;
return	84:15	84:21	8	
water	85:12	0:0	8	}
break	86:12	86:17	6	
label	88:9	88:15	6	case 1 :
if	89:12	96:12	6	(( png_ptr -> row_number & 0 x07 ) || png_ptr -> width < 5)
cond	89:16	89:65	7	( png_ptr -> row_number & 0 x07 ) || png_ptr -> width < 5
water	89:16	0:0	8	(
water	89:17	0:0	8	png_ptr
op	89:24	0:0	8	->
water	89:26	0:0	8	row_number
op	89:37	0:0	8	&
water	89:39	0:0	8	0
water	89:40	0:0	8	x07
water	89:43	0:0	8	)
op	89:45	0:0	8	||
water	89:48	0:0	8	png_ptr
op	89:55	0:0	8	->
water	89:57	0:0	8	width
op	89:63	0:0	8	<
water	89:65	0:0	8	5
stmts	90:12	96:12	7	
water	90:12	0:0	8	{
if	91:15	92:54	8	(dsp_row != NULL)
cond	91:19	91:30	9	dsp_row != NULL
water	91:19	0:0	10	dsp_row
op	91:27	0:0	10	!=
water	91:30	0:0	10	NULL
stmts	92:18	92:54	9	
call	92:18	92:53	10	png_combine_row
arg	92:34	92:41	11	png_ptr
water	92:34	0:0	12	png_ptr
arg	92:43	92:50	11	dsp_row
water	92:43	0:0	12	dsp_row
arg	92:52	92:53	11	1
water	92:52	0:0	12	1
water	92:54	0:0	10	;
call	94:15	94:42	8	png_read_finish_row
arg	94:35	94:42	9	png_ptr
water	94:35	0:0	10	png_ptr
water	94:43	0:0	8	;
return	95:15	95:21	8	
water	96:12	0:0	8	}
break	97:12	97:17	6	
label	99:9	99:15	6	case 2 :
if	100:12	107:12	6	(( png_ptr -> row_number & 0 x07 ) != 4)
cond	100:16	100:48	7	( png_ptr -> row_number & 0 x07 ) != 4
water	100:16	0:0	8	(
water	100:17	0:0	8	png_ptr
op	100:24	0:0	8	->
water	100:26	0:0	8	row_number
op	100:37	0:0	8	&
water	100:39	0:0	8	0
water	100:40	0:0	8	x07
water	100:43	0:0	8	)
op	100:45	0:0	8	!=
water	100:48	0:0	8	4
stmts	101:12	107:12	7	
water	101:12	0:0	8	{
if	102:15	103:54	8	(dsp_row != NULL && ( png_ptr -> row_number & 4 ))
cond	102:19	102:62	9	dsp_row != NULL && ( png_ptr -> row_number & 4 )
water	102:19	0:0	10	dsp_row
op	102:27	0:0	10	!=
water	102:30	0:0	10	NULL
op	102:35	0:0	10	&&
water	102:38	0:0	10	(
water	102:39	0:0	10	png_ptr
op	102:46	0:0	10	->
water	102:48	0:0	10	row_number
op	102:59	0:0	10	&
water	102:61	0:0	10	4
water	102:62	0:0	10	)
stmts	103:18	103:54	9	
call	103:18	103:53	10	png_combine_row
arg	103:34	103:41	11	png_ptr
water	103:34	0:0	12	png_ptr
arg	103:43	103:50	11	dsp_row
water	103:43	0:0	12	dsp_row
arg	103:52	103:53	11	1
water	103:52	0:0	12	1
water	103:54	0:0	10	;
call	105:15	105:42	8	png_read_finish_row
arg	105:35	105:42	9	png_ptr
water	105:35	0:0	10	png_ptr
water	105:43	0:0	8	;
return	106:15	106:21	8	
water	107:12	0:0	8	}
break	108:12	108:17	6	
label	110:9	110:15	6	case 3 :
if	111:12	118:12	6	(( png_ptr -> row_number & 3 ) || png_ptr -> width < 3)
cond	111:16	111:62	7	( png_ptr -> row_number & 3 ) || png_ptr -> width < 3
water	111:16	0:0	8	(
water	111:17	0:0	8	png_ptr
op	111:24	0:0	8	->
water	111:26	0:0	8	row_number
op	111:37	0:0	8	&
water	111:39	0:0	8	3
water	111:40	0:0	8	)
op	111:42	0:0	8	||
water	111:45	0:0	8	png_ptr
op	111:52	0:0	8	->
water	111:54	0:0	8	width
op	111:60	0:0	8	<
water	111:62	0:0	8	3
stmts	112:12	118:12	7	
water	112:12	0:0	8	{
if	113:15	114:54	8	(dsp_row != NULL)
cond	113:19	113:30	9	dsp_row != NULL
water	113:19	0:0	10	dsp_row
op	113:27	0:0	10	!=
water	113:30	0:0	10	NULL
stmts	114:18	114:54	9	
call	114:18	114:53	10	png_combine_row
arg	114:34	114:41	11	png_ptr
water	114:34	0:0	12	png_ptr
arg	114:43	114:50	11	dsp_row
water	114:43	0:0	12	dsp_row
arg	114:52	114:53	11	1
water	114:52	0:0	12	1
water	114:54	0:0	10	;
call	116:15	116:42	8	png_read_finish_row
arg	116:35	116:42	9	png_ptr
water	116:35	0:0	10	png_ptr
water	116:43	0:0	8	;
return	117:15	117:21	8	
water	118:12	0:0	8	}
break	119:12	119:17	6	
label	121:9	121:15	6	case 4 :
if	122:12	129:12	6	(( png_ptr -> row_number & 3 ) != 2)
cond	122:16	122:45	7	( png_ptr -> row_number & 3 ) != 2
water	122:16	0:0	8	(
water	122:17	0:0	8	png_ptr
op	122:24	0:0	8	->
water	122:26	0:0	8	row_number
op	122:37	0:0	8	&
water	122:39	0:0	8	3
water	122:40	0:0	8	)
op	122:42	0:0	8	!=
water	122:45	0:0	8	2
stmts	123:12	129:12	7	
water	123:12	0:0	8	{
if	124:15	125:54	8	(dsp_row != NULL && ( png_ptr -> row_number & 2 ))
cond	124:19	124:62	9	dsp_row != NULL && ( png_ptr -> row_number & 2 )
water	124:19	0:0	10	dsp_row
op	124:27	0:0	10	!=
water	124:30	0:0	10	NULL
op	124:35	0:0	10	&&
water	124:38	0:0	10	(
water	124:39	0:0	10	png_ptr
op	124:46	0:0	10	->
water	124:48	0:0	10	row_number
op	124:59	0:0	10	&
water	124:61	0:0	10	2
water	124:62	0:0	10	)
stmts	125:18	125:54	9	
call	125:18	125:53	10	png_combine_row
arg	125:34	125:41	11	png_ptr
water	125:34	0:0	12	png_ptr
arg	125:43	125:50	11	dsp_row
water	125:43	0:0	12	dsp_row
arg	125:52	125:53	11	1
water	125:52	0:0	12	1
water	125:54	0:0	10	;
call	127:15	127:42	8	png_read_finish_row
arg	127:35	127:42	9	png_ptr
water	127:35	0:0	10	png_ptr
water	127:43	0:0	8	;
return	128:15	128:21	8	
water	129:12	0:0	8	}
break	130:12	130:17	6	
label	132:9	132:15	6	case 5 :
if	133:12	140:12	6	(( png_ptr -> row_number & 1 ) || png_ptr -> width < 2)
cond	133:16	133:62	7	( png_ptr -> row_number & 1 ) || png_ptr -> width < 2
water	133:16	0:0	8	(
water	133:17	0:0	8	png_ptr
op	133:24	0:0	8	->
water	133:26	0:0	8	row_number
op	133:37	0:0	8	&
water	133:39	0:0	8	1
water	133:40	0:0	8	)
op	133:42	0:0	8	||
water	133:45	0:0	8	png_ptr
op	133:52	0:0	8	->
water	133:54	0:0	8	width
op	133:60	0:0	8	<
water	133:62	0:0	8	2
stmts	134:12	140:12	7	
water	134:12	0:0	8	{
if	135:15	136:54	8	(dsp_row != NULL)
cond	135:19	135:30	9	dsp_row != NULL
water	135:19	0:0	10	dsp_row
op	135:27	0:0	10	!=
water	135:30	0:0	10	NULL
stmts	136:18	136:54	9	
call	136:18	136:53	10	png_combine_row
arg	136:34	136:41	11	png_ptr
water	136:34	0:0	12	png_ptr
arg	136:43	136:50	11	dsp_row
water	136:43	0:0	12	dsp_row
arg	136:52	136:53	11	1
water	136:52	0:0	12	1
water	136:54	0:0	10	;
call	138:15	138:42	8	png_read_finish_row
arg	138:35	138:42	9	png_ptr
water	138:35	0:0	10	png_ptr
water	138:43	0:0	8	;
return	139:15	139:21	8	
water	140:12	0:0	8	}
break	141:12	141:17	6	
label	143:9	143:16	6	default :
label	144:9	144:15	6	case 6 :
if	145:12	149:12	6	(! ( png_ptr -> row_number & 1 ))
cond	145:16	145:41	7	! ( png_ptr -> row_number & 1 )
op	145:16	0:0	8	!
water	145:17	0:0	8	(
water	145:18	0:0	8	png_ptr
op	145:25	0:0	8	->
water	145:27	0:0	8	row_number
op	145:38	0:0	8	&
water	145:40	0:0	8	1
water	145:41	0:0	8	)
stmts	146:12	149:12	7	
water	146:12	0:0	8	{
call	147:15	147:42	8	png_read_finish_row
arg	147:35	147:42	9	png_ptr
water	147:35	0:0	10	png_ptr
water	147:43	0:0	8	;
return	148:15	148:21	8	
water	149:12	0:0	8	}
break	150:12	150:17	6	
water	151:6	0:0	6	}
water	152:3	0:0	4	}
if	155:3	156:60	2	(! ( png_ptr -> mode & PNG_HAVE_IDAT ))
cond	155:7	155:38	3	! ( png_ptr -> mode & PNG_HAVE_IDAT )
op	155:7	0:0	4	!
water	155:8	0:0	4	(
water	155:9	0:0	4	png_ptr
op	155:16	0:0	4	->
water	155:18	0:0	4	mode
op	155:23	0:0	4	&
water	155:25	0:0	4	PNG_HAVE_IDAT
water	155:38	0:0	4	)
stmts	156:6	156:60	3	
call	156:6	156:59	4	png_error
arg	156:16	156:23	5	png_ptr
water	156:16	0:0	6	png_ptr
arg	156:25	156:59	5	"Invalid attempt to read row data"
water	156:25	0:0	6	"Invalid attempt to read row data"
water	156:60	0:0	4	;
call	159:3	159:70	2	png_read_IDAT_data
arg	159:22	159:29	3	png_ptr
water	159:22	0:0	4	png_ptr
arg	159:31	159:47	3	png_ptr->row_buf
water	159:31	0:0	4	png_ptr
op	159:38	0:0	4	->
water	159:40	0:0	4	row_buf
arg	159:49	159:70	3	row_info.rowbytes+1
water	159:49	0:0	4	row_info
op	159:57	0:0	4	.
water	159:58	0:0	4	rowbytes
op	159:67	0:0	4	+
water	159:69	0:0	4	1
water	159:71	0:0	2	;
if	161:3	168:3	2	(png_ptr -> row_buf [ 0 ] > PNG_FILTER_VALUE_NONE)
cond	161:7	161:29	3	png_ptr -> row_buf [ 0 ] > PNG_FILTER_VALUE_NONE
water	161:7	0:0	4	png_ptr
op	161:14	0:0	4	->
water	161:16	0:0	4	row_buf
op	161:23	0:0	4	[
water	161:24	0:0	4	0
op	161:25	0:0	4	]
op	161:27	0:0	4	>
water	161:29	0:0	4	PNG_FILTER_VALUE_NONE
stmts	162:3	168:3	3	
water	162:3	0:0	4	{
if	163:6	165:55	4	(png_ptr -> row_buf [ 0 ] < PNG_FILTER_VALUE_LAST)
cond	163:10	163:32	5	png_ptr -> row_buf [ 0 ] < PNG_FILTER_VALUE_LAST
water	163:10	0:0	6	png_ptr
op	163:17	0:0	6	->
water	163:19	0:0	6	row_buf
op	163:26	0:0	6	[
water	163:27	0:0	6	0
op	163:28	0:0	6	]
op	163:30	0:0	6	<
water	163:32	0:0	6	PNG_FILTER_VALUE_LAST
stmts	164:9	165:55	5	
call	164:9	165:54	6	png_read_filter_row
arg	164:29	164:36	7	png_ptr
water	164:29	0:0	8	png_ptr
arg	164:38	164:47	7	&row_info
op	164:38	0:0	8	&
water	164:39	0:0	8	row_info
arg	164:49	164:69	7	png_ptr->row_buf+1
water	164:49	0:0	8	png_ptr
op	164:56	0:0	8	->
water	164:58	0:0	8	row_buf
op	164:66	0:0	8	+
water	164:68	0:0	8	1
arg	165:12	165:33	7	png_ptr->prev_row+1
water	165:12	0:0	8	png_ptr
op	165:19	0:0	8	->
water	165:21	0:0	8	prev_row
op	165:30	0:0	8	+
water	165:32	0:0	8	1
arg	165:35	165:54	7	png_ptr->row_buf[0]
water	165:35	0:0	8	png_ptr
op	165:42	0:0	8	->
water	165:44	0:0	8	row_buf
op	165:51	0:0	8	[
water	165:52	0:0	8	0
op	165:53	0:0	8	]
water	165:55	0:0	6	;
else	166:6	167:56	4
stmts	167:9	167:56	5	
call	167:9	167:55	6	png_error
arg	167:19	167:26	7	png_ptr
water	167:19	0:0	8	png_ptr
arg	167:28	167:55	7	"bad adaptive filter value"
water	167:28	0:0	8	"bad adaptive filter value"
water	167:56	0:0	6	;
water	168:3	0:0	4	}
call	175:3	175:68	2	memcpy
arg	175:10	175:27	3	png_ptr->prev_row
water	175:10	0:0	4	png_ptr
op	175:17	0:0	4	->
water	175:19	0:0	4	prev_row
arg	175:29	175:45	3	png_ptr->row_buf
water	175:29	0:0	4	png_ptr
op	175:36	0:0	4	->
water	175:38	0:0	4	row_buf
arg	175:47	175:68	3	row_info.rowbytes+1
water	175:47	0:0	4	row_info
op	175:55	0:0	4	.
water	175:56	0:0	4	rowbytes
op	175:65	0:0	4	+
water	175:67	0:0	4	1
water	175:69	0:0	2	;
if	178:3	183:3	2	(( png_ptr -> mng_features_permitted & PNG_FLAG_MNG_FILTER_64 ) && ( png_ptr -> filter_type == PNG_INTRAPIXEL_DIFFERENCING ))
cond	178:7	179:59	3	( png_ptr -> mng_features_permitted & PNG_FLAG_MNG_FILTER_64 ) && ( png_ptr -> filter_type == PNG_INTRAPIXEL_DIFFERENCING )
water	178:7	0:0	4	(
water	178:8	0:0	4	png_ptr
op	178:15	0:0	4	->
water	178:17	0:0	4	mng_features_permitted
op	178:40	0:0	4	&
water	178:42	0:0	4	PNG_FLAG_MNG_FILTER_64
water	178:64	0:0	4	)
op	178:66	0:0	4	&&
water	179:7	0:0	4	(
water	179:8	0:0	4	png_ptr
op	179:15	0:0	4	->
water	179:17	0:0	4	filter_type
op	179:29	0:0	4	==
water	179:32	0:0	4	PNG_INTRAPIXEL_DIFFERENCING
water	179:59	0:0	4	)
stmts	180:3	183:3	3	
water	180:3	0:0	4	{
call	182:6	182:60	4	png_do_read_intrapixel
arg	182:29	182:38	5	&row_info
op	182:29	0:0	6	&
water	182:30	0:0	6	row_info
arg	182:40	182:60	5	png_ptr->row_buf+1
water	182:40	0:0	6	png_ptr
op	182:47	0:0	6	->
water	182:49	0:0	6	row_buf
op	182:57	0:0	6	+
water	182:59	0:0	6	1
water	182:61	0:0	4	;
water	183:3	0:0	4	}
if	188:3	189:53	2	(png_ptr -> transformations)
cond	188:7	188:16	3	png_ptr -> transformations
water	188:7	0:0	4	png_ptr
op	188:14	0:0	4	->
water	188:16	0:0	4	transformations
stmts	189:6	189:53	3	
call	189:6	189:52	4	png_do_read_transformations
arg	189:34	189:41	5	png_ptr
water	189:34	0:0	6	png_ptr
arg	189:43	189:52	5	&row_info
op	189:43	0:0	6	&
water	189:44	0:0	6	row_info
water	189:53	0:0	4	;
if	193:3	198:3	2	(png_ptr -> transformed_pixel_depth == 0)
cond	193:7	193:43	3	png_ptr -> transformed_pixel_depth == 0
water	193:7	0:0	4	png_ptr
op	193:14	0:0	4	->
water	193:16	0:0	4	transformed_pixel_depth
op	193:40	0:0	4	==
water	193:43	0:0	4	0
stmts	194:3	198:3	3	
water	194:3	0:0	4	{
water	195:6	0:0	4	png_ptr
op	195:13	0:0	4	->
water	195:15	0:0	4	transformed_pixel_depth
op	195:39	0:0	4	=
water	195:41	0:0	4	row_info
op	195:49	0:0	4	.
water	195:50	0:0	4	pixel_depth
water	195:61	0:0	4	;
if	196:6	197:54	4	(row_info . pixel_depth > png_ptr -> maximum_pixel_depth)
cond	196:10	196:42	5	row_info . pixel_depth > png_ptr -> maximum_pixel_depth
water	196:10	0:0	6	row_info
op	196:18	0:0	6	.
water	196:19	0:0	6	pixel_depth
op	196:31	0:0	6	>
water	196:33	0:0	6	png_ptr
op	196:40	0:0	6	->
water	196:42	0:0	6	maximum_pixel_depth
stmts	197:9	197:54	5	
call	197:9	197:53	6	png_error
arg	197:19	197:26	7	png_ptr
water	197:19	0:0	8	png_ptr
arg	197:28	197:53	7	"sequential row overflow"
water	197:28	0:0	8	"sequential row overflow"
water	197:54	0:0	6	;
water	198:3	0:0	4	}
else	200:3	201:74	2
stmts	200:8	201:74	3	
if	200:8	201:74	4	(png_ptr -> transformed_pixel_depth != row_info . pixel_depth)
cond	200:12	200:57	5	png_ptr -> transformed_pixel_depth != row_info . pixel_depth
water	200:12	0:0	6	png_ptr
op	200:19	0:0	6	->
water	200:21	0:0	6	transformed_pixel_depth
op	200:45	0:0	6	!=
water	200:48	0:0	6	row_info
op	200:56	0:0	6	.
water	200:57	0:0	6	pixel_depth
stmts	201:6	201:74	5	
call	201:6	201:73	6	png_error
arg	201:16	201:23	7	png_ptr
water	201:16	0:0	8	png_ptr
arg	201:25	201:73	7	"internal sequential row size calculation error"
water	201:25	0:0	8	"internal sequential row size calculation error"
water	201:74	0:0	6	;
if	205:3	217:3	2	(png_ptr -> interlaced && ( png_ptr -> transformations & PNG_INTERLACE ))
cond	205:7	206:47	3	png_ptr -> interlaced && ( png_ptr -> transformations & PNG_INTERLACE )
water	205:7	0:0	4	png_ptr
op	205:14	0:0	4	->
water	205:16	0:0	4	interlaced
op	205:27	0:0	4	&&
water	206:6	0:0	4	(
water	206:7	0:0	4	png_ptr
op	206:14	0:0	4	->
water	206:16	0:0	4	transformations
op	206:32	0:0	4	&
water	206:34	0:0	4	PNG_INTERLACE
water	206:47	0:0	4	)
stmts	207:3	217:3	3	
water	207:3	0:0	4	{
if	208:6	210:37	4	(png_ptr -> pass < 6)
cond	208:10	208:26	5	png_ptr -> pass < 6
water	208:10	0:0	6	png_ptr
op	208:17	0:0	6	->
water	208:19	0:0	6	pass
op	208:24	0:0	6	<
water	208:26	0:0	6	6
stmts	209:9	210:37	5	
call	209:9	210:36	6	png_do_read_interlace
arg	209:31	209:40	7	&row_info
op	209:31	0:0	8	&
water	209:32	0:0	8	row_info
arg	209:42	209:62	7	png_ptr->row_buf+1
water	209:42	0:0	8	png_ptr
op	209:49	0:0	8	->
water	209:51	0:0	8	row_buf
op	209:59	0:0	8	+
water	209:61	0:0	8	1
arg	209:64	209:77	7	png_ptr->pass
water	209:64	0:0	8	png_ptr
op	209:71	0:0	8	->
water	209:73	0:0	8	pass
arg	210:12	210:36	7	png_ptr->transformations
water	210:12	0:0	8	png_ptr
op	210:19	0:0	8	->
water	210:21	0:0	8	transformations
water	210:37	0:0	6	;
if	212:6	213:45	4	(dsp_row != NULL)
cond	212:10	212:21	5	dsp_row != NULL
water	212:10	0:0	6	dsp_row
op	212:18	0:0	6	!=
water	212:21	0:0	6	NULL
stmts	213:9	213:45	5	
call	213:9	213:44	6	png_combine_row
arg	213:25	213:32	7	png_ptr
water	213:25	0:0	8	png_ptr
arg	213:34	213:41	7	dsp_row
water	213:34	0:0	8	dsp_row
arg	213:43	213:44	7	1
water	213:43	0:0	8	1
water	213:45	0:0	6	;
if	215:6	216:41	4	(row != NULL)
cond	215:10	215:17	5	row != NULL
water	215:10	0:0	6	row
op	215:14	0:0	6	!=
water	215:17	0:0	6	NULL
stmts	216:9	216:41	5	
call	216:9	216:40	6	png_combine_row
arg	216:25	216:32	7	png_ptr
water	216:25	0:0	8	png_ptr
arg	216:34	216:37	7	row
water	216:34	0:0	8	row
arg	216:39	216:40	7	0
water	216:39	0:0	8	0
water	216:41	0:0	6	;
water	217:3	0:0	4	}
else	219:3	227:3	2
stmts	221:3	227:3	3	
water	221:3	0:0	4	{
if	222:6	223:42	4	(row != NULL)
cond	222:10	222:17	5	row != NULL
water	222:10	0:0	6	row
op	222:14	0:0	6	!=
water	222:17	0:0	6	NULL
stmts	223:9	223:42	5	
call	223:9	223:41	6	png_combine_row
arg	223:25	223:32	7	png_ptr
water	223:25	0:0	8	png_ptr
arg	223:34	223:37	7	row
water	223:34	0:0	8	row
arg	223:39	223:41	7	-1
op	223:39	0:0	8	-
water	223:40	0:0	8	1
water	223:42	0:0	6	;
if	225:6	226:46	4	(dsp_row != NULL)
cond	225:10	225:21	5	dsp_row != NULL
water	225:10	0:0	6	dsp_row
op	225:18	0:0	6	!=
water	225:21	0:0	6	NULL
stmts	226:9	226:46	5	
call	226:9	226:45	6	png_combine_row
arg	226:25	226:32	7	png_ptr
water	226:25	0:0	8	png_ptr
arg	226:34	226:41	7	dsp_row
water	226:34	0:0	8	dsp_row
arg	226:43	226:45	7	-1
op	226:43	0:0	8	-
water	226:44	0:0	8	1
water	226:46	0:0	6	;
water	227:3	0:0	4	}
call	228:3	228:30	2	png_read_finish_row
arg	228:23	228:30	3	png_ptr
water	228:23	0:0	4	png_ptr
water	228:31	0:0	2	;
if	230:3	231:76	2	(png_ptr -> read_row_fn != NULL)
cond	230:7	230:31	3	png_ptr -> read_row_fn != NULL
water	230:7	0:0	4	png_ptr
op	230:14	0:0	4	->
water	230:16	0:0	4	read_row_fn
op	230:28	0:0	4	!=
water	230:31	0:0	4	NULL
stmts	231:6	231:76	3	
call	231:6	231:75	4	(*(png_ptr->read_row_fn))
arg	231:32	231:39	5	png_ptr
water	231:32	0:0	6	png_ptr
arg	231:41	231:60	5	png_ptr->row_number
water	231:41	0:0	6	png_ptr
op	231:48	0:0	6	->
water	231:50	0:0	6	row_number
arg	231:62	231:75	5	png_ptr->pass
water	231:62	0:0	6	png_ptr
op	231:69	0:0	6	->
water	231:71	0:0	6	pass
water	231:76	0:0	4	;

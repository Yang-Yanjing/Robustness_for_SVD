func	1:0	36:0	0	void	png_check_chunk_length
params	2:22	0:0	1	
param	2:23	2:49	2	png_const_structrp	png_ptr
param	2:51	2:75	2	const png_uint_32	length
stmnts	0:0	35:3	1	
decl	4:3	4:43	2	png_alloc_size_t	limit
op	4:26	0:0	2	=
water	4:28	0:0	2	PNG_UINT_31_MAX
if	7:3	9:44	2	(png_ptr -> user_chunk_malloc_max > 0 && png_ptr -> user_chunk_malloc_max < limit)
cond	7:7	8:40	3	png_ptr -> user_chunk_malloc_max > 0 && png_ptr -> user_chunk_malloc_max < limit
water	7:7	0:0	4	png_ptr
op	7:14	0:0	4	->
water	7:16	0:0	4	user_chunk_malloc_max
op	7:38	0:0	4	>
water	7:40	0:0	4	0
op	7:42	0:0	4	&&
water	8:7	0:0	4	png_ptr
op	8:14	0:0	4	->
water	8:16	0:0	4	user_chunk_malloc_max
op	8:38	0:0	4	<
water	8:40	0:0	4	limit
stmts	9:6	9:44	3	
water	9:6	0:0	4	limit
op	9:12	0:0	4	=
water	9:14	0:0	4	png_ptr
op	9:21	0:0	4	->
water	9:23	0:0	4	user_chunk_malloc_max
water	9:44	0:0	4	;
if	11:3	12:39	2	(PNG_USER_CHUNK_MALLOC_MAX < limit)
cond	11:7	11:35	3	PNG_USER_CHUNK_MALLOC_MAX < limit
water	11:7	0:0	4	PNG_USER_CHUNK_MALLOC_MAX
op	11:33	0:0	4	<
water	11:35	0:0	4	limit
stmts	12:6	12:39	3	
water	12:6	0:0	4	limit
op	12:12	0:0	4	=
water	12:14	0:0	4	PNG_USER_CHUNK_MALLOC_MAX
water	12:39	0:0	4	;
if	14:3	28:3	2	(png_ptr -> chunk_name == png_IDAT)
cond	14:7	14:30	3	png_ptr -> chunk_name == png_IDAT
water	14:7	0:0	4	png_ptr
op	14:14	0:0	4	->
water	14:16	0:0	4	chunk_name
op	14:27	0:0	4	==
water	14:30	0:0	4	png_IDAT
stmts	15:3	28:3	3	
water	15:3	0:0	4	{
decl	16:6	16:51	4	png_alloc_size_t	idat_limit
op	16:34	0:0	4	=
water	16:36	0:0	4	PNG_UINT_31_MAX
decl	17:6	19:44	4	size_t	row_factor
op	17:24	0:0	4	=
water	18:9	0:0	4	(
water	18:10	0:0	4	png_ptr
op	18:17	0:0	4	->
water	18:19	0:0	4	width
op	18:25	0:0	4	*
water	18:27	0:0	4	png_ptr
op	18:34	0:0	4	->
water	18:36	0:0	4	channels
op	18:45	0:0	4	*
water	18:47	0:0	4	(
water	18:48	0:0	4	png_ptr
op	18:55	0:0	4	->
water	18:57	0:0	4	bit_depth
op	18:67	0:0	4	>
water	18:69	0:0	4	8
water	18:70	0:0	4	?
water	18:72	0:0	4	2
water	18:73	0:0	4	:
water	18:75	0:0	4	1
water	18:76	0:0	4	)
op	19:10	0:0	4	+
water	19:12	0:0	4	1
op	19:14	0:0	4	+
water	19:16	0:0	4	(
water	19:17	0:0	4	png_ptr
op	19:24	0:0	4	->
water	19:26	0:0	4	interlaced
water	19:36	0:0	4	?
water	19:38	0:0	4	6
water	19:39	0:0	4	:
water	19:41	0:0	4	0
water	19:42	0:0	4	)
water	19:43	0:0	4	)
if	20:6	21:35	4	(png_ptr -> height > PNG_UINT_32_MAX / row_factor)
cond	20:10	20:44	5	png_ptr -> height > PNG_UINT_32_MAX / row_factor
water	20:10	0:0	6	png_ptr
op	20:17	0:0	6	->
water	20:19	0:0	6	height
op	20:26	0:0	6	>
water	20:28	0:0	6	PNG_UINT_32_MAX
op	20:43	0:0	6	/
water	20:44	0:0	6	row_factor
stmts	21:9	21:35	5	
water	21:9	0:0	6	idat_limit
op	21:19	0:0	6	=
water	21:20	0:0	6	PNG_UINT_31_MAX
water	21:35	0:0	6	;
else	22:6	23:50	4
stmts	23:9	23:50	5	
water	23:9	0:0	6	idat_limit
op	23:20	0:0	6	=
water	23:22	0:0	6	png_ptr
op	23:29	0:0	6	->
water	23:31	0:0	6	height
op	23:38	0:0	6	*
water	23:40	0:0	6	row_factor
water	23:50	0:0	6	;
water	24:6	0:0	4	row_factor
op	24:17	0:0	4	=
water	24:19	0:0	4	row_factor
op	24:30	0:0	4	>
water	24:32	0:0	4	32566
water	24:37	0:0	4	?
water	24:39	0:0	4	32566
water	24:45	0:0	4	:
water	24:47	0:0	4	row_factor
water	24:57	0:0	4	;
water	25:6	0:0	4	idat_limit
op	25:17	0:0	4	+=
water	25:20	0:0	4	6
op	25:22	0:0	4	+
water	25:24	0:0	4	5
op	25:25	0:0	4	*
water	25:26	0:0	4	(
water	25:27	0:0	4	idat_limit
op	25:37	0:0	4	/
water	25:38	0:0	4	row_factor
op	25:48	0:0	4	+
water	25:49	0:0	4	1
water	25:50	0:0	4	)
water	25:51	0:0	4	;
water	26:6	0:0	4	idat_limit
op	26:16	0:0	4	=
water	26:17	0:0	4	idat_limit
op	26:28	0:0	4	<
water	26:30	0:0	4	PNG_UINT_31_MAX
water	26:45	0:0	4	?
water	26:47	0:0	4	idat_limit
water	26:58	0:0	4	:
water	26:60	0:0	4	PNG_UINT_31_MAX
water	26:75	0:0	4	;
water	27:6	0:0	4	limit
op	27:12	0:0	4	=
water	27:14	0:0	4	limit
op	27:20	0:0	4	<
water	27:22	0:0	4	idat_limit
water	27:32	0:0	4	?
water	27:34	0:0	4	idat_limit
water	27:45	0:0	4	:
water	27:47	0:0	4	limit
water	27:52	0:0	4	;
water	28:3	0:0	4	}
if	30:3	35:3	2	(length > limit)
cond	30:7	30:16	3	length > limit
water	30:7	0:0	4	length
op	30:14	0:0	4	>
water	30:16	0:0	4	limit
stmts	31:3	35:3	3	
water	31:3	0:0	4	{
call	32:6	33:51	4	png_debug2
arg	32:17	32:18	5	0
water	32:17	0:0	6	0
arg	32:19	32:47	5	" length = %lu, limit = %lu"
water	32:19	0:0	6	" length = %lu, limit = %lu"
arg	33:9	33:30	5	(unsignedlong)length
water	33:9	0:0	6	(
water	33:10	0:0	6	unsigned
water	33:19	0:0	6	long
water	33:23	0:0	6	)
water	33:24	0:0	6	length
arg	33:31	33:51	5	(unsignedlong)limit
water	33:31	0:0	6	(
water	33:32	0:0	6	unsigned
water	33:41	0:0	6	long
water	33:45	0:0	6	)
water	33:46	0:0	6	limit
water	33:52	0:0	4	;
call	34:6	34:56	4	png_chunk_error
arg	34:22	34:29	5	png_ptr
water	34:22	0:0	6	png_ptr
arg	34:31	34:56	5	"chunk data is too large"
water	34:31	0:0	6	"chunk data is too large"
water	34:57	0:0	4	;
water	35:3	0:0	4	}

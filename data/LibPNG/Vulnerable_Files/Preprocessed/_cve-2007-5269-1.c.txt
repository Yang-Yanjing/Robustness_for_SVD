D:\postGraduate\code\function_representation_learning\Data\LibPNG\vulnerable_Files\vulnerable_functions\cve-2007-5269-1.c line 128:6 mismatched character '<EOF>' expecting '\n'
func	4:0	127:0	0	void	png_handle_pCAL
params	5:15	0:0	1	
param	5:16	5:35	2	png_structp	png_ptr
param	5:37	5:55	2	png_infop	info_ptr
param	5:57	5:75	2	png_uint_32	length
stmnts	0:0	126:28	1	
decl	7:3	7:20	2	png_charp	purpose
decl	8:3	8:20	2	png_int_32	X0
water	8:16	0:0	2	,
decl	8:3	8:20	2	png_int_32	X1
decl	9:3	9:25	2	png_byte	type
water	9:16	0:0	2	,
decl	9:3	9:25	2	png_byte	nparams
decl	10:3	10:31	2	png_charp	buf
water	10:16	0:0	2	,
decl	10:3	10:31	2	png_charp	units
water	10:23	0:0	2	,
decl	10:3	10:31	2	png_charp	endptr
decl	11:3	11:20	2	png_charpp	params
decl	12:3	12:21	2	png_size_t	slength
decl	13:3	13:8	2	int	i
call	15:3	15:38	2	png_debug
arg	15:13	15:14	3	1
water	15:13	0:0	4	1
arg	15:16	15:38	3	"in png_handle_pCAL\n"
water	15:16	0:0	4	"in png_handle_pCAL\n"
water	15:39	0:0	2	;
if	17:3	18:52	2	(! ( png_ptr -> mode & PNG_HAVE_IHDR ))
cond	17:7	17:38	3	! ( png_ptr -> mode & PNG_HAVE_IHDR )
op	17:7	0:0	4	!
water	17:8	0:0	4	(
water	17:9	0:0	4	png_ptr
op	17:16	0:0	4	->
water	17:18	0:0	4	mode
op	17:23	0:0	4	&
water	17:25	0:0	4	PNG_HAVE_IHDR
water	17:38	0:0	4	)
stmts	18:6	18:52	3	
call	18:6	18:51	4	png_error
arg	18:16	18:23	5	png_ptr
water	18:16	0:0	6	png_ptr
arg	18:25	18:51	5	"Missing IHDR before pCAL"
water	18:25	0:0	6	"Missing IHDR before pCAL"
water	18:52	0:0	4	;
else	19:3	24:3	2
stmts	19:8	24:3	3	
if	19:8	24:3	4	(png_ptr -> mode & PNG_HAVE_IDAT)
cond	19:12	19:28	5	png_ptr -> mode & PNG_HAVE_IDAT
water	19:12	0:0	6	png_ptr
op	19:19	0:0	6	->
water	19:21	0:0	6	mode
op	19:26	0:0	6	&
water	19:28	0:0	6	PNG_HAVE_IDAT
stmts	20:3	24:3	5	
water	20:3	0:0	6	{
call	21:6	21:52	6	png_warning
arg	21:18	21:25	7	png_ptr
water	21:18	0:0	8	png_ptr
arg	21:27	21:52	7	"Invalid pCAL after IDAT"
water	21:27	0:0	8	"Invalid pCAL after IDAT"
water	21:53	0:0	6	;
call	22:6	22:36	6	png_crc_finish
arg	22:21	22:28	7	png_ptr
water	22:21	0:0	8	png_ptr
arg	22:30	22:36	7	length
water	22:30	0:0	8	length
water	22:37	0:0	6	;
return	23:6	23:12	6	
water	24:3	0:0	6	}
else	25:3	30:3	2
stmts	25:8	30:3	3	
if	25:8	30:3	4	(info_ptr != NULL && ( info_ptr -> valid & PNG_INFO_pCAL ))
cond	25:12	25:64	5	info_ptr != NULL && ( info_ptr -> valid & PNG_INFO_pCAL )
water	25:12	0:0	6	info_ptr
op	25:21	0:0	6	!=
water	25:24	0:0	6	NULL
op	25:29	0:0	6	&&
water	25:32	0:0	6	(
water	25:33	0:0	6	info_ptr
op	25:41	0:0	6	->
water	25:43	0:0	6	valid
op	25:49	0:0	6	&
water	25:51	0:0	6	PNG_INFO_pCAL
water	25:64	0:0	6	)
stmts	26:3	30:3	5	
water	26:3	0:0	6	{
call	27:6	27:49	6	png_warning
arg	27:18	27:25	7	png_ptr
water	27:18	0:0	8	png_ptr
arg	27:27	27:49	7	"Duplicate pCAL chunk"
water	27:27	0:0	8	"Duplicate pCAL chunk"
water	27:50	0:0	6	;
call	28:6	28:36	6	png_crc_finish
arg	28:21	28:28	7	png_ptr
water	28:21	0:0	8	png_ptr
arg	28:30	28:36	7	length
water	28:30	0:0	8	length
water	28:37	0:0	6	;
return	29:6	29:12	6	
water	30:3	0:0	6	}
call	32:3	33:16	2	png_debug1
arg	32:14	32:15	3	2
water	32:14	0:0	4	2
arg	32:17	32:71	3	"Allocating and reading pCAL chunk data (%lu bytes)\n"
water	32:17	0:0	4	"Allocating and reading pCAL chunk data (%lu bytes)\n"
arg	33:6	33:16	3	length+1
water	33:6	0:0	4	length
op	33:13	0:0	4	+
water	33:15	0:0	4	1
water	33:17	0:0	2	;
water	34:3	0:0	2	purpose
op	34:11	0:0	2	=
water	34:13	0:0	2	(
water	34:14	0:0	2	png_charp
water	34:23	0:0	2	)
call	34:24	34:59	2	png_malloc_warn
arg	34:40	34:47	3	png_ptr
water	34:40	0:0	4	png_ptr
arg	34:49	34:59	3	length+1
water	34:49	0:0	4	length
op	34:56	0:0	4	+
water	34:58	0:0	4	1
water	34:60	0:0	2	;
if	35:3	39:5	2	(purpose == NULL)
cond	35:7	35:18	3	purpose == NULL
water	35:7	0:0	4	purpose
op	35:15	0:0	4	==
water	35:18	0:0	4	NULL
stmts	36:5	39:5	3	
water	36:5	0:0	4	{
call	37:7	37:57	4	png_warning
arg	37:19	37:26	5	png_ptr
water	37:19	0:0	6	png_ptr
arg	37:28	37:57	5	"No memory for pCAL purpose."
water	37:28	0:0	6	"No memory for pCAL purpose."
water	37:58	0:0	4	;
return	38:7	38:13	4	
water	39:5	0:0	4	}
water	40:3	0:0	2	slength
op	40:11	0:0	2	=
water	40:13	0:0	2	(
water	40:14	0:0	2	png_size_t
water	40:24	0:0	2	)
water	40:25	0:0	2	length
water	40:31	0:0	2	;
call	41:3	41:52	2	png_crc_read
arg	41:16	41:23	3	png_ptr
water	41:16	0:0	4	png_ptr
arg	41:25	41:43	3	(png_bytep)purpose
water	41:25	0:0	4	(
water	41:26	0:0	4	png_bytep
water	41:35	0:0	4	)
water	41:36	0:0	4	purpose
arg	41:45	41:52	3	slength
water	41:45	0:0	4	slength
water	41:53	0:0	2	;
if	43:3	47:3	2	(png_crc_finish (png_ptr ,0 ))
cond	43:7	43:32	3	png_crc_finish (png_ptr ,0 )
call	43:7	43:32	4	png_crc_finish
arg	43:22	43:29	5	png_ptr
water	43:22	0:0	6	png_ptr
arg	43:31	43:32	5	0
water	43:31	0:0	6	0
stmts	44:3	47:3	3	
water	44:3	0:0	4	{
call	45:6	45:31	4	png_free
arg	45:15	45:22	5	png_ptr
water	45:15	0:0	6	png_ptr
arg	45:24	45:31	5	purpose
water	45:24	0:0	6	purpose
water	45:32	0:0	4	;
return	46:6	46:12	4	
water	47:3	0:0	4	}
water	49:3	0:0	2	purpose
op	49:10	0:0	2	[
water	49:11	0:0	2	slength
op	49:18	0:0	2	]
op	49:20	0:0	2	=
water	49:22	0:0	2	0
water	49:23	0:0	2	x00
water	49:26	0:0	2	;
call	51:3	51:54	2	png_debug
arg	51:13	51:14	3	3
water	51:13	0:0	4	3
arg	51:16	51:54	3	"Finding end of pCAL purpose string\n"
water	51:16	0:0	4	"Finding end of pCAL purpose string\n"
water	51:55	0:0	2	;
for	52:3	53:7	2	(buf = purpose ;* buf;buf ++)
forinit	52:8	52:21	3	buf = purpose ;
water	52:8	0:0	4	buf
op	52:12	0:0	4	=
water	52:14	0:0	4	purpose
water	52:21	0:0	4	;
cond	52:23	52:24	3	* buf
op	52:23	0:0	4	*
water	52:24	0:0	4	buf
forexpr	52:29	52:32	3	buf ++
water	52:29	0:0	4	buf
op	52:32	0:0	4	++
stmts	53:7	53:7	3	
water	53:7	0:0	4	;
water	55:3	0:0	2	endptr
op	55:10	0:0	2	=
water	55:12	0:0	2	purpose
op	55:20	0:0	2	+
water	55:22	0:0	2	slength
water	55:29	0:0	2	;
if	59:3	64:3	2	(endptr <= buf + 12)
cond	59:7	59:23	3	endptr <= buf + 12
water	59:7	0:0	4	endptr
op	59:14	0:0	4	<=
water	59:17	0:0	4	buf
op	59:21	0:0	4	+
water	59:23	0:0	4	12
stmts	60:3	64:3	3	
water	60:3	0:0	4	{
call	61:6	61:46	4	png_warning
arg	61:18	61:25	5	png_ptr
water	61:18	0:0	6	png_ptr
arg	61:27	61:46	5	"Invalid pCAL data"
water	61:27	0:0	6	"Invalid pCAL data"
water	61:47	0:0	4	;
call	62:6	62:31	4	png_free
arg	62:15	62:22	5	png_ptr
water	62:15	0:0	6	png_ptr
arg	62:24	62:31	5	purpose
water	62:24	0:0	6	purpose
water	62:32	0:0	4	;
return	63:6	63:12	4	
water	64:3	0:0	4	}
call	66:3	66:65	2	png_debug
arg	66:13	66:14	3	3
water	66:13	0:0	4	3
arg	66:16	66:65	3	"Reading pCAL X0, X1, type, nparams, and units\n"
water	66:16	0:0	4	"Reading pCAL X0, X1, type, nparams, and units\n"
water	66:66	0:0	2	;
water	67:3	0:0	2	X0
op	67:6	0:0	2	=
call	67:8	67:39	2	png_get_int_32
arg	67:23	67:39	3	(png_bytep)buf+1
water	67:23	0:0	4	(
water	67:24	0:0	4	png_bytep
water	67:33	0:0	4	)
water	67:34	0:0	4	buf
op	67:37	0:0	4	+
water	67:38	0:0	4	1
water	67:40	0:0	2	;
water	68:3	0:0	2	X1
op	68:6	0:0	2	=
call	68:8	68:39	2	png_get_int_32
arg	68:23	68:39	3	(png_bytep)buf+5
water	68:23	0:0	4	(
water	68:24	0:0	4	png_bytep
water	68:33	0:0	4	)
water	68:34	0:0	4	buf
op	68:37	0:0	4	+
water	68:38	0:0	4	5
water	68:40	0:0	2	;
water	69:3	0:0	2	type
op	69:8	0:0	2	=
water	69:10	0:0	2	buf
op	69:13	0:0	2	[
water	69:14	0:0	2	9
op	69:15	0:0	2	]
water	69:16	0:0	2	;
water	70:3	0:0	2	nparams
op	70:11	0:0	2	=
water	70:13	0:0	2	buf
op	70:16	0:0	2	[
water	70:17	0:0	2	10
op	70:19	0:0	2	]
water	70:20	0:0	2	;
water	71:3	0:0	2	units
op	71:9	0:0	2	=
water	71:11	0:0	2	buf
op	71:15	0:0	2	+
water	71:17	0:0	2	11
water	71:19	0:0	2	;
call	73:3	73:72	2	png_debug
arg	73:13	73:14	3	3
water	73:13	0:0	4	3
arg	73:16	73:72	3	"Checking pCAL equation type and number of parameters\n"
water	73:16	0:0	4	"Checking pCAL equation type and number of parameters\n"
water	73:73	0:0	2	;
if	76:3	84:3	2	(( type == PNG_EQUATION_LINEAR && nparams != 2 ) || ( type == PNG_EQUATION_BASE_E && nparams != 3 ) || ( type == PNG_EQUATION_ARBITRARY && nparams != 3 ) || ( type == PNG_EQUATION_HYPERBOLIC && nparams != 4 ))
cond	76:7	79:55	3	( type == PNG_EQUATION_LINEAR && nparams != 2 ) || ( type == PNG_EQUATION_BASE_E && nparams != 3 ) || ( type == PNG_EQUATION_ARBITRARY && nparams != 3 ) || ( type == PNG_EQUATION_HYPERBOLIC && nparams != 4 )
water	76:7	0:0	4	(
water	76:8	0:0	4	type
op	76:13	0:0	4	==
water	76:16	0:0	4	PNG_EQUATION_LINEAR
op	76:36	0:0	4	&&
water	76:39	0:0	4	nparams
op	76:47	0:0	4	!=
water	76:50	0:0	4	2
water	76:51	0:0	4	)
op	76:53	0:0	4	||
water	77:7	0:0	4	(
water	77:8	0:0	4	type
op	77:13	0:0	4	==
water	77:16	0:0	4	PNG_EQUATION_BASE_E
op	77:36	0:0	4	&&
water	77:39	0:0	4	nparams
op	77:47	0:0	4	!=
water	77:50	0:0	4	3
water	77:51	0:0	4	)
op	77:53	0:0	4	||
water	78:7	0:0	4	(
water	78:8	0:0	4	type
op	78:13	0:0	4	==
water	78:16	0:0	4	PNG_EQUATION_ARBITRARY
op	78:39	0:0	4	&&
water	78:42	0:0	4	nparams
op	78:50	0:0	4	!=
water	78:53	0:0	4	3
water	78:54	0:0	4	)
op	78:56	0:0	4	||
water	79:7	0:0	4	(
water	79:8	0:0	4	type
op	79:13	0:0	4	==
water	79:16	0:0	4	PNG_EQUATION_HYPERBOLIC
op	79:40	0:0	4	&&
water	79:43	0:0	4	nparams
op	79:51	0:0	4	!=
water	79:54	0:0	4	4
water	79:55	0:0	4	)
stmts	80:3	84:3	3	
water	80:3	0:0	4	{
call	81:6	81:70	4	png_warning
arg	81:18	81:25	5	png_ptr
water	81:18	0:0	6	png_ptr
arg	81:27	81:70	5	"Invalid pCAL parameters for equation type"
water	81:27	0:0	6	"Invalid pCAL parameters for equation type"
water	81:71	0:0	4	;
call	82:6	82:31	4	png_free
arg	82:15	82:22	5	png_ptr
water	82:15	0:0	6	png_ptr
arg	82:24	82:31	5	purpose
water	82:24	0:0	6	purpose
water	82:32	0:0	4	;
return	83:6	83:12	4	
water	84:3	0:0	4	}
else	85:3	88:3	2
stmts	85:8	88:3	3	
if	85:8	88:3	4	(type >= PNG_EQUATION_LAST)
cond	85:12	85:20	5	type >= PNG_EQUATION_LAST
water	85:12	0:0	6	type
op	85:17	0:0	6	>=
water	85:20	0:0	6	PNG_EQUATION_LAST
stmts	86:3	88:3	5	
water	86:3	0:0	6	{
call	87:6	87:70	6	png_warning
arg	87:18	87:25	7	png_ptr
water	87:18	0:0	8	png_ptr
arg	87:27	87:70	7	"Unrecognized equation type for pCAL chunk"
water	87:27	0:0	8	"Unrecognized equation type for pCAL chunk"
water	87:71	0:0	6	;
water	88:3	0:0	6	}
for	90:3	91:7	2	(buf = units ;* buf;buf ++)
forinit	90:8	90:19	3	buf = units ;
water	90:8	0:0	4	buf
op	90:12	0:0	4	=
water	90:14	0:0	4	units
water	90:19	0:0	4	;
cond	90:21	90:22	3	* buf
op	90:21	0:0	4	*
water	90:22	0:0	4	buf
forexpr	90:27	90:30	3	buf ++
water	90:27	0:0	4	buf
op	90:30	0:0	4	++
stmts	91:7	91:7	3	
water	91:7	0:0	4	;
call	93:3	93:52	2	png_debug
arg	93:13	93:14	3	3
water	93:13	0:0	4	3
arg	93:16	93:52	3	"Allocating pCAL parameters array\n"
water	93:16	0:0	4	"Allocating pCAL parameters array\n"
water	93:53	0:0	2	;
water	94:3	0:0	2	params
op	94:10	0:0	2	=
water	94:12	0:0	2	(
water	94:13	0:0	2	png_charpp
water	94:23	0:0	2	)
call	94:24	95:29	2	png_malloc_warn
arg	94:40	94:47	3	png_ptr
water	94:40	0:0	4	png_ptr
arg	94:49	95:29	3	(png_uint_32)(nparams*png_sizeof(png_charp))
call	94:49	95:28	4	(png_uint_32)
arg	94:63	95:28	5	nparams*png_sizeof(png_charp)
water	94:63	0:0	6	nparams
call	95:6	95:27	6	*png_sizeof
arg	95:18	95:27	7	png_charp
water	95:18	0:0	8	png_charp
water	95:31	0:0	2	;
if	96:3	101:5	2	(params == NULL)
cond	96:7	96:17	3	params == NULL
water	96:7	0:0	4	params
op	96:14	0:0	4	==
water	96:17	0:0	4	NULL
stmts	97:5	101:5	3	
water	97:5	0:0	4	{
call	98:7	98:32	4	png_free
arg	98:16	98:23	5	png_ptr
water	98:16	0:0	6	png_ptr
arg	98:25	98:32	5	purpose
water	98:25	0:0	6	purpose
water	98:33	0:0	4	;
call	99:7	99:56	4	png_warning
arg	99:19	99:26	5	png_ptr
water	99:19	0:0	6	png_ptr
arg	99:28	99:56	5	"No memory for pCAL params."
water	99:28	0:0	6	"No memory for pCAL params."
water	99:57	0:0	4	;
return	100:7	100:13	4	
water	101:5	0:0	4	}
for	104:3	120:3	2	(i = 0 ;i < ( int ) nparams;i ++)
forinit	104:8	104:13	3	i = 0 ;
water	104:8	0:0	4	i
op	104:10	0:0	4	=
water	104:12	0:0	4	0
water	104:13	0:0	4	;
cond	104:15	104:24	3	i < ( int ) nparams
water	104:15	0:0	4	i
op	104:17	0:0	4	<
water	104:19	0:0	4	(
water	104:20	0:0	4	int
water	104:23	0:0	4	)
water	104:24	0:0	4	nparams
forexpr	104:33	104:34	3	i ++
water	104:33	0:0	4	i
op	104:34	0:0	4	++
stmts	105:3	120:3	3	
water	105:3	0:0	4	{
water	106:6	0:0	4	buf
op	106:9	0:0	4	++
water	106:11	0:0	4	;
call	108:6	108:52	4	png_debug1
arg	108:17	108:18	5	3
water	108:17	0:0	6	3
arg	108:20	108:49	5	"Reading pCAL parameter %d\n"
water	108:20	0:0	6	"Reading pCAL parameter %d\n"
arg	108:51	108:52	5	i
water	108:51	0:0	6	i
water	108:53	0:0	4	;
for	109:6	110:10	4	(params [ i ] = buf ;* buf != 0 x00 && buf <= endptr;buf ++)
forinit	109:11	109:26	5	params [ i ] = buf ;
water	109:11	0:0	6	params
op	109:17	0:0	6	[
water	109:18	0:0	6	i
op	109:19	0:0	6	]
op	109:21	0:0	6	=
water	109:23	0:0	6	buf
water	109:26	0:0	6	;
cond	109:28	109:51	5	* buf != 0 x00 && buf <= endptr
op	109:28	0:0	6	*
water	109:29	0:0	6	buf
op	109:33	0:0	6	!=
water	109:36	0:0	6	0
water	109:37	0:0	6	x00
op	109:41	0:0	6	&&
water	109:44	0:0	6	buf
op	109:48	0:0	6	<=
water	109:51	0:0	6	endptr
forexpr	109:59	109:62	5	buf ++
water	109:59	0:0	6	buf
op	109:62	0:0	6	++
stmts	110:10	110:10	5	
water	110:10	0:0	6	;
if	113:6	119:6	4	(buf > endptr)
cond	113:10	113:16	5	buf > endptr
water	113:10	0:0	6	buf
op	113:14	0:0	6	>
water	113:16	0:0	6	endptr
stmts	114:6	119:6	5	
water	114:6	0:0	6	{
call	115:9	115:49	6	png_warning
arg	115:21	115:28	7	png_ptr
water	115:21	0:0	8	png_ptr
arg	115:30	115:49	7	"Invalid pCAL data"
water	115:30	0:0	8	"Invalid pCAL data"
water	115:50	0:0	6	;
call	116:9	116:34	6	png_free
arg	116:18	116:25	7	png_ptr
water	116:18	0:0	8	png_ptr
arg	116:27	116:34	7	purpose
water	116:27	0:0	8	purpose
water	116:35	0:0	6	;
call	117:9	117:33	6	png_free
arg	117:18	117:25	7	png_ptr
water	117:18	0:0	8	png_ptr
arg	117:27	117:33	7	params
water	117:27	0:0	8	params
water	117:34	0:0	6	;
return	118:9	118:15	6	
water	119:6	0:0	6	}
water	120:3	0:0	4	}
call	122:3	123:19	2	png_set_pCAL
arg	122:16	122:23	3	png_ptr
water	122:16	0:0	4	png_ptr
arg	122:25	122:33	3	info_ptr
water	122:25	0:0	4	info_ptr
arg	122:35	122:42	3	purpose
water	122:35	0:0	4	purpose
arg	122:44	122:46	3	X0
water	122:44	0:0	4	X0
arg	122:48	122:50	3	X1
water	122:48	0:0	4	X1
arg	122:52	122:56	3	type
water	122:52	0:0	4	type
arg	122:58	122:65	3	nparams
water	122:58	0:0	4	nparams
arg	123:6	123:11	3	units
water	123:6	0:0	4	units
arg	123:13	123:19	3	params
water	123:13	0:0	4	params
water	123:20	0:0	2	;
call	125:3	125:28	2	png_free
arg	125:12	125:19	3	png_ptr
water	125:12	0:0	4	png_ptr
arg	125:21	125:28	3	purpose
water	125:21	0:0	4	purpose
water	125:29	0:0	2	;
call	126:3	126:27	2	png_free
arg	126:12	126:19	3	png_ptr
water	126:12	0:0	4	png_ptr
arg	126:21	126:27	3	params
water	126:21	0:0	4	params
water	126:28	0:0	2	;

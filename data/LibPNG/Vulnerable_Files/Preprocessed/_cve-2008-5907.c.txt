D:\postGraduate\code\function_representation_learning\Data\LibPNG\vulnerable_Files\vulnerable_functions\cve-2008-5907.c line 119:6 mismatched character '<EOF>' expecting '\n'
func	2:0	118:0	0	png_size_t	png_check_keyword
params	3:17	0:0	1	
param	3:18	3:37	2	png_structp	png_ptr
param	3:39	3:52	2	png_charp	key
param	3:54	3:72	2	png_charpp	new_key
stmnts	0:0	117:19	1	
decl	5:3	5:21	2	png_size_t	key_len
decl	6:3	6:19	2	png_charp	kp
water	6:15	0:0	2	,
decl	6:3	6:19	2	png_charp	dp
decl	7:3	7:12	2	int	kflag
decl	8:3	8:14	2	int	kwarn
op	8:12	0:0	2	=
water	8:13	0:0	2	0
call	10:3	10:40	2	png_debug
arg	10:13	10:14	3	1
water	10:13	0:0	4	1
arg	10:16	10:40	3	"in png_check_keyword\n"
water	10:16	0:0	4	"in png_check_keyword\n"
water	10:41	0:0	2	;
op	11:3	0:0	2	*
water	11:4	0:0	2	new_key
op	11:12	0:0	2	=
water	11:14	0:0	2	NULL
water	11:18	0:0	2	;
if	13:3	17:3	2	(key == NULL || ( key_len =png_strlen (key ) ) == 0)
cond	13:7	13:53	3	key == NULL || ( key_len =png_strlen (key ) ) == 0
water	13:7	0:0	4	key
op	13:11	0:0	4	==
water	13:14	0:0	4	NULL
op	13:19	0:0	4	||
water	13:22	0:0	4	(
water	13:23	0:0	4	key_len
op	13:31	0:0	4	=
call	13:33	13:47	4	png_strlen
arg	13:44	13:47	5	key
water	13:44	0:0	6	key
water	13:48	0:0	4	)
op	13:50	0:0	4	==
water	13:53	0:0	4	0
stmts	14:3	17:3	3	
water	14:3	0:0	4	{
call	15:6	15:48	4	png_warning
arg	15:18	15:25	5	png_ptr
water	15:18	0:0	6	png_ptr
arg	15:27	15:48	5	"zero length keyword"
water	15:27	0:0	6	"zero length keyword"
water	15:49	0:0	4	;
return	16:6	16:28	4	((png_size_t)0)
water	16:13	0:0	5	(
water	16:14	0:0	5	(
water	16:15	0:0	5	png_size_t
water	16:25	0:0	5	)
water	16:26	0:0	5	0
water	16:27	0:0	5	)
water	17:3	0:0	4	}
call	19:3	19:55	2	png_debug1
arg	19:14	19:15	3	2
water	19:14	0:0	4	2
arg	19:17	19:50	3	"Keyword to be checked is '%s'\n"
water	19:17	0:0	4	"Keyword to be checked is '%s'\n"
arg	19:52	19:55	3	key
water	19:52	0:0	4	key
water	19:56	0:0	2	;
op	21:3	0:0	2	*
water	21:4	0:0	2	new_key
op	21:12	0:0	2	=
water	21:14	0:0	2	(
water	21:15	0:0	2	png_charp
water	21:24	0:0	2	)
call	21:25	21:76	2	png_malloc_warn
arg	21:41	21:48	3	png_ptr
water	21:41	0:0	4	png_ptr
arg	21:50	21:76	3	(png_uint_32)(key_len+2)
call	21:50	21:75	4	(png_uint_32)
arg	21:64	21:75	5	key_len+2
water	21:64	0:0	6	key_len
op	21:72	0:0	6	+
water	21:74	0:0	6	2
water	21:77	0:0	2	;
if	22:3	26:3	2	(* new_key == NULL)
cond	22:7	22:19	3	* new_key == NULL
op	22:7	0:0	4	*
water	22:8	0:0	4	new_key
op	22:16	0:0	4	==
water	22:19	0:0	4	NULL
stmts	23:3	26:3	3	
water	23:3	0:0	4	{
call	24:6	24:66	4	png_warning
arg	24:18	24:25	5	png_ptr
water	24:18	0:0	6	png_ptr
arg	24:27	24:66	5	"Out of memory while procesing keyword"
water	24:27	0:0	6	"Out of memory while procesing keyword"
water	24:67	0:0	4	;
return	25:6	25:28	4	((png_size_t)0)
water	25:13	0:0	5	(
water	25:14	0:0	5	(
water	25:15	0:0	5	png_size_t
water	25:25	0:0	5	)
water	25:26	0:0	5	0
water	25:27	0:0	5	)
water	26:3	0:0	4	}
for	29:3	49:3	2	(kp = key , dp = * new_key ;* kp != '\0';kp ++ , dp ++)
forinit	29:8	29:31	3	kp = key , dp = * new_key ;
water	29:8	0:0	4	kp
op	29:11	0:0	4	=
water	29:13	0:0	4	key
water	29:16	0:0	4	,
water	29:18	0:0	4	dp
op	29:21	0:0	4	=
op	29:23	0:0	4	*
water	29:24	0:0	4	new_key
water	29:31	0:0	4	;
cond	29:33	29:40	3	* kp != '\0'
op	29:33	0:0	4	*
water	29:34	0:0	4	kp
op	29:37	0:0	4	!=
water	29:40	0:0	4	'\0'
forexpr	29:46	29:54	3	kp ++ , dp ++
water	29:46	0:0	4	kp
op	29:48	0:0	4	++
water	29:50	0:0	4	,
water	29:52	0:0	4	dp
op	29:54	0:0	4	++
stmts	30:3	49:3	3	
water	30:3	0:0	4	{
if	31:6	44:6	4	(( png_byte ) * kp < 0 x20 || ( ( png_byte ) * kp > 0 x7E && ( png_byte ) * kp < 0 xA1 ))
cond	31:10	32:54	5	( png_byte ) * kp < 0 x20 || ( ( png_byte ) * kp > 0 x7E && ( png_byte ) * kp < 0 xA1 )
water	31:10	0:0	6	(
water	31:11	0:0	6	png_byte
water	31:19	0:0	6	)
op	31:20	0:0	6	*
water	31:21	0:0	6	kp
op	31:24	0:0	6	<
water	31:26	0:0	6	0
water	31:27	0:0	6	x20
op	31:31	0:0	6	||
water	32:9	0:0	6	(
water	32:10	0:0	6	(
water	32:11	0:0	6	png_byte
water	32:19	0:0	6	)
op	32:20	0:0	6	*
water	32:21	0:0	6	kp
op	32:24	0:0	6	>
water	32:26	0:0	6	0
water	32:27	0:0	6	x7E
op	32:31	0:0	6	&&
water	32:34	0:0	6	(
water	32:35	0:0	6	png_byte
water	32:43	0:0	6	)
op	32:44	0:0	6	*
water	32:45	0:0	6	kp
op	32:48	0:0	6	<
water	32:50	0:0	6	0
water	32:51	0:0	6	xA1
water	32:54	0:0	6	)
stmts	33:6	44:6	5	
water	33:6	0:0	6	{
decl	35:9	35:21	6	char	msg[40]
call	37:9	38:60	6	png_snprintf
arg	37:22	37:25	7	msg
water	37:22	0:0	8	msg
arg	37:27	37:29	7	40
water	37:27	0:0	8	40
arg	38:11	38:45	7	"invalid keyword character 0x%02X"
water	38:11	0:0	8	"invalid keyword character 0x%02X"
arg	38:47	38:60	7	(png_byte)*kp
water	38:47	0:0	8	(
water	38:48	0:0	8	png_byte
water	38:56	0:0	8	)
op	38:57	0:0	8	*
water	38:58	0:0	8	kp
water	38:61	0:0	6	;
call	39:9	39:33	6	png_warning
arg	39:21	39:28	7	png_ptr
water	39:21	0:0	8	png_ptr
arg	39:30	39:33	7	msg
water	39:30	0:0	8	msg
water	39:34	0:0	6	;
call	41:9	41:60	6	png_warning
arg	41:21	41:28	7	png_ptr
water	41:21	0:0	8	png_ptr
arg	41:30	41:60	7	"invalid character in keyword"
water	41:30	0:0	8	"invalid character in keyword"
water	41:61	0:0	6	;
op	43:9	0:0	6	*
water	43:10	0:0	6	dp
op	43:13	0:0	6	=
water	43:15	0:0	6	' '
water	43:18	0:0	6	;
water	44:6	0:0	6	}
else	45:6	48:6	4
stmts	46:6	48:6	5	
water	46:6	0:0	6	{
op	47:9	0:0	6	*
water	47:10	0:0	6	dp
op	47:13	0:0	6	=
op	47:15	0:0	6	*
water	47:16	0:0	6	kp
water	47:18	0:0	6	;
water	48:6	0:0	6	}
water	49:3	0:0	4	}
op	50:3	0:0	2	*
water	50:4	0:0	2	dp
op	50:7	0:0	2	=
water	50:9	0:0	2	'\0'
water	50:13	0:0	2	;
water	53:3	0:0	2	kp
op	53:6	0:0	2	=
op	53:8	0:0	2	*
water	53:9	0:0	2	new_key
op	53:17	0:0	2	+
water	53:19	0:0	2	key_len
op	53:27	0:0	2	-
water	53:29	0:0	2	1
water	53:30	0:0	2	;
if	54:3	63:3	2	(* kp == ' ')
cond	54:7	54:14	3	* kp == ' '
op	54:7	0:0	4	*
water	54:8	0:0	4	kp
op	54:11	0:0	4	==
water	54:14	0:0	4	' '
stmts	55:3	63:3	3	
water	55:3	0:0	4	{
call	56:6	56:65	4	png_warning
arg	56:18	56:25	5	png_ptr
water	56:18	0:0	6	png_ptr
arg	56:27	56:65	5	"trailing spaces removed from keyword"
water	56:27	0:0	6	"trailing spaces removed from keyword"
water	56:66	0:0	4	;
while	58:6	62:6	4	(* kp == ' ')
cond	58:13	58:20	5	* kp == ' '
op	58:13	0:0	6	*
water	58:14	0:0	6	kp
op	58:17	0:0	6	==
water	58:20	0:0	6	' '
stmts	59:6	62:6	5	
water	59:6	0:0	6	{
op	60:8	0:0	6	*
water	60:9	0:0	6	(
water	60:10	0:0	6	kp
op	60:12	0:0	6	--
water	60:14	0:0	6	)
op	60:16	0:0	6	=
water	60:18	0:0	6	'\0'
water	60:22	0:0	6	;
water	61:8	0:0	6	key_len
op	61:15	0:0	6	--
water	61:17	0:0	6	;
water	62:6	0:0	6	}
water	63:3	0:0	4	}
water	66:3	0:0	2	kp
op	66:6	0:0	2	=
op	66:8	0:0	2	*
water	66:9	0:0	2	new_key
water	66:16	0:0	2	;
if	67:3	76:3	2	(* kp == ' ')
cond	67:7	67:14	3	* kp == ' '
op	67:7	0:0	4	*
water	67:8	0:0	4	kp
op	67:11	0:0	4	==
water	67:14	0:0	4	' '
stmts	68:3	76:3	3	
water	68:3	0:0	4	{
call	69:6	69:64	4	png_warning
arg	69:18	69:25	5	png_ptr
water	69:18	0:0	6	png_ptr
arg	69:27	69:64	5	"leading spaces removed from keyword"
water	69:27	0:0	6	"leading spaces removed from keyword"
water	69:65	0:0	4	;
while	71:6	75:6	4	(* kp == ' ')
cond	71:13	71:20	5	* kp == ' '
op	71:13	0:0	6	*
water	71:14	0:0	6	kp
op	71:17	0:0	6	==
water	71:20	0:0	6	' '
stmts	72:6	75:6	5	
water	72:6	0:0	6	{
water	73:8	0:0	6	kp
op	73:10	0:0	6	++
water	73:12	0:0	6	;
water	74:8	0:0	6	key_len
op	74:15	0:0	6	--
water	74:17	0:0	6	;
water	75:6	0:0	6	}
water	76:3	0:0	4	}
call	78:3	78:70	2	png_debug1
arg	78:14	78:15	3	2
water	78:14	0:0	4	2
arg	78:17	78:66	3	"Checking for multiple internal spaces in '%s'\n"
water	78:17	0:0	4	"Checking for multiple internal spaces in '%s'\n"
arg	78:68	78:70	3	kp
water	78:68	0:0	4	kp
water	78:71	0:0	2	;
for	81:3	98:3	2	(kflag = 0 , dp = * new_key ;* kp != '\0';kp ++)
forinit	81:8	81:32	3	kflag = 0 , dp = * new_key ;
water	81:8	0:0	4	kflag
op	81:14	0:0	4	=
water	81:16	0:0	4	0
water	81:17	0:0	4	,
water	81:19	0:0	4	dp
op	81:22	0:0	4	=
op	81:24	0:0	4	*
water	81:25	0:0	4	new_key
water	81:32	0:0	4	;
cond	81:34	81:41	3	* kp != '\0'
op	81:34	0:0	4	*
water	81:35	0:0	4	kp
op	81:38	0:0	4	!=
water	81:41	0:0	4	'\0'
forexpr	81:47	81:49	3	kp ++
water	81:47	0:0	4	kp
op	81:49	0:0	4	++
stmts	82:3	98:3	3	
water	82:3	0:0	4	{
if	83:6	87:6	4	(* kp == ' ' && kflag == 0)
cond	83:10	83:33	5	* kp == ' ' && kflag == 0
op	83:10	0:0	6	*
water	83:11	0:0	6	kp
op	83:14	0:0	6	==
water	83:17	0:0	6	' '
op	83:21	0:0	6	&&
water	83:24	0:0	6	kflag
op	83:30	0:0	6	==
water	83:33	0:0	6	0
stmts	84:6	87:6	5	
water	84:6	0:0	6	{
op	85:9	0:0	6	*
water	85:10	0:0	6	(
water	85:11	0:0	6	dp
op	85:13	0:0	6	++
water	85:15	0:0	6	)
op	85:17	0:0	6	=
op	85:19	0:0	6	*
water	85:20	0:0	6	kp
water	85:22	0:0	6	;
water	86:9	0:0	6	kflag
op	86:15	0:0	6	=
water	86:17	0:0	6	1
water	86:18	0:0	6	;
water	87:6	0:0	6	}
else	88:6	92:6	4
stmts	88:11	92:6	5	
if	88:11	92:6	6	(* kp == ' ')
cond	88:15	88:22	7	* kp == ' '
op	88:15	0:0	8	*
water	88:16	0:0	8	kp
op	88:19	0:0	8	==
water	88:22	0:0	8	' '
stmts	89:6	92:6	7	
water	89:6	0:0	8	{
water	90:9	0:0	8	key_len
op	90:16	0:0	8	--
water	90:18	0:0	8	;
water	91:9	0:0	8	kwarn
op	91:14	0:0	8	=
water	91:15	0:0	8	1
water	91:16	0:0	8	;
water	92:6	0:0	8	}
else	93:6	97:6	4
stmts	94:6	97:6	5	
water	94:6	0:0	6	{
op	95:9	0:0	6	*
water	95:10	0:0	6	(
water	95:11	0:0	6	dp
op	95:13	0:0	6	++
water	95:15	0:0	6	)
op	95:17	0:0	6	=
op	95:19	0:0	6	*
water	95:20	0:0	6	kp
water	95:22	0:0	6	;
water	96:9	0:0	6	kflag
op	96:15	0:0	6	=
water	96:17	0:0	6	0
water	96:18	0:0	6	;
water	97:6	0:0	6	}
water	98:3	0:0	4	}
op	99:3	0:0	2	*
water	99:4	0:0	2	dp
op	99:7	0:0	2	=
water	99:9	0:0	2	'\0'
water	99:13	0:0	2	;
if	100:3	101:72	2	(kwarn)
cond	100:7	100:7	3	kwarn
water	100:7	0:0	4	kwarn
stmts	101:6	101:72	3	
call	101:6	101:71	4	png_warning
arg	101:18	101:25	5	png_ptr
water	101:18	0:0	6	png_ptr
arg	101:27	101:71	5	"extra interior spaces removed from keyword"
water	101:27	0:0	6	"extra interior spaces removed from keyword"
water	101:72	0:0	4	;
if	103:3	108:3	2	(key_len == 0)
cond	103:7	103:18	3	key_len == 0
water	103:7	0:0	4	key_len
op	103:15	0:0	4	==
water	103:18	0:0	4	0
stmts	104:3	108:3	3	
water	104:3	0:0	4	{
call	105:6	105:32	4	png_free
arg	105:15	105:22	5	png_ptr
water	105:15	0:0	6	png_ptr
arg	105:24	105:32	5	*new_key
op	105:24	0:0	6	*
water	105:25	0:0	6	new_key
water	105:33	0:0	4	;
op	106:7	0:0	4	*
water	106:8	0:0	4	new_key
op	106:15	0:0	4	=
water	106:16	0:0	4	NULL
water	106:20	0:0	4	;
call	107:6	107:48	4	png_warning
arg	107:18	107:25	5	png_ptr
water	107:18	0:0	6	png_ptr
arg	107:27	107:48	5	"Zero length keyword"
water	107:27	0:0	6	"Zero length keyword"
water	107:49	0:0	4	;
water	108:3	0:0	4	}
if	110:3	115:3	2	(key_len > 79)
cond	110:7	110:17	3	key_len > 79
water	110:7	0:0	4	key_len
op	110:15	0:0	4	>
water	110:17	0:0	4	79
stmts	111:3	115:3	3	
water	111:3	0:0	4	{
call	112:6	112:69	4	png_warning
arg	112:18	112:25	5	png_ptr
water	112:18	0:0	6	png_ptr
arg	112:27	112:69	5	"keyword length must be 1 - 79 characters"
water	112:27	0:0	6	"keyword length must be 1 - 79 characters"
water	112:70	0:0	4	;
water	113:6	0:0	4	new_key
op	113:13	0:0	4	[
water	113:14	0:0	4	79
op	113:16	0:0	4	]
op	113:18	0:0	4	=
water	113:20	0:0	4	'\0'
water	113:24	0:0	4	;
water	114:6	0:0	4	key_len
op	114:14	0:0	4	=
water	114:16	0:0	4	79
water	114:18	0:0	4	;
water	115:3	0:0	4	}
return	117:3	117:19	2	(key_len)
water	117:10	0:0	3	(
water	117:11	0:0	3	key_len
water	117:18	0:0	3	)

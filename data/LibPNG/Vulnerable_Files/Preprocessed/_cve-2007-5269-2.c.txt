D:\postGraduate\code\function_representation_learning\Data\LibPNG\vulnerable_Files\vulnerable_functions\cve-2007-5269-2.c line 126:6 mismatched character '<EOF>' expecting '\n'
func	2:0	125:0	0	void	png_handle_sCAL
params	3:15	0:0	1	
param	3:16	3:35	2	png_structp	png_ptr
param	3:37	3:55	2	png_infop	info_ptr
param	3:57	3:75	2	png_uint_32	length
stmnts	0:0	123:29	1	
decl	5:3	5:23	2	png_charp	buffer
water	5:19	0:0	2	,
decl	5:3	5:23	2	png_charp	ep
decl	7:3	7:23	2	double	width
water	7:15	0:0	2	,
decl	7:3	7:23	2	double	height
decl	8:3	8:15	2	png_charp	vp
decl	11:3	11:28	2	png_charp	swidth
water	11:19	0:0	2	,
decl	11:3	11:28	2	png_charp	sheight
decl	14:3	14:21	2	png_size_t	slength
call	16:3	16:38	2	png_debug
arg	16:13	16:14	3	1
water	16:13	0:0	4	1
arg	16:16	16:38	3	"in png_handle_sCAL\n"
water	16:16	0:0	4	"in png_handle_sCAL\n"
water	16:39	0:0	2	;
if	18:3	19:52	2	(! ( png_ptr -> mode & PNG_HAVE_IHDR ))
cond	18:7	18:38	3	! ( png_ptr -> mode & PNG_HAVE_IHDR )
op	18:7	0:0	4	!
water	18:8	0:0	4	(
water	18:9	0:0	4	png_ptr
op	18:16	0:0	4	->
water	18:18	0:0	4	mode
op	18:23	0:0	4	&
water	18:25	0:0	4	PNG_HAVE_IHDR
water	18:38	0:0	4	)
stmts	19:6	19:52	3	
call	19:6	19:51	4	png_error
arg	19:16	19:23	5	png_ptr
water	19:16	0:0	6	png_ptr
arg	19:25	19:51	5	"Missing IHDR before sCAL"
water	19:25	0:0	6	"Missing IHDR before sCAL"
water	19:52	0:0	4	;
else	20:3	25:3	2
stmts	20:8	25:3	3	
if	20:8	25:3	4	(png_ptr -> mode & PNG_HAVE_IDAT)
cond	20:12	20:28	5	png_ptr -> mode & PNG_HAVE_IDAT
water	20:12	0:0	6	png_ptr
op	20:19	0:0	6	->
water	20:21	0:0	6	mode
op	20:26	0:0	6	&
water	20:28	0:0	6	PNG_HAVE_IDAT
stmts	21:3	25:3	5	
water	21:3	0:0	6	{
call	22:6	22:52	6	png_warning
arg	22:18	22:25	7	png_ptr
water	22:18	0:0	8	png_ptr
arg	22:27	22:52	7	"Invalid sCAL after IDAT"
water	22:27	0:0	8	"Invalid sCAL after IDAT"
water	22:53	0:0	6	;
call	23:6	23:36	6	png_crc_finish
arg	23:21	23:28	7	png_ptr
water	23:21	0:0	8	png_ptr
arg	23:30	23:36	7	length
water	23:30	0:0	8	length
water	23:37	0:0	6	;
return	24:6	24:12	6	
water	25:3	0:0	6	}
else	26:3	31:3	2
stmts	26:8	31:3	3	
if	26:8	31:3	4	(info_ptr != NULL && ( info_ptr -> valid & PNG_INFO_sCAL ))
cond	26:12	26:64	5	info_ptr != NULL && ( info_ptr -> valid & PNG_INFO_sCAL )
water	26:12	0:0	6	info_ptr
op	26:21	0:0	6	!=
water	26:24	0:0	6	NULL
op	26:29	0:0	6	&&
water	26:32	0:0	6	(
water	26:33	0:0	6	info_ptr
op	26:41	0:0	6	->
water	26:43	0:0	6	valid
op	26:49	0:0	6	&
water	26:51	0:0	6	PNG_INFO_sCAL
water	26:64	0:0	6	)
stmts	27:3	31:3	5	
water	27:3	0:0	6	{
call	28:6	28:49	6	png_warning
arg	28:18	28:25	7	png_ptr
water	28:18	0:0	8	png_ptr
arg	28:27	28:49	7	"Duplicate sCAL chunk"
water	28:27	0:0	8	"Duplicate sCAL chunk"
water	28:50	0:0	6	;
call	29:6	29:36	6	png_crc_finish
arg	29:21	29:28	7	png_ptr
water	29:21	0:0	8	png_ptr
arg	29:30	29:36	7	length
water	29:30	0:0	8	length
water	29:37	0:0	6	;
return	30:6	30:12	6	
water	31:3	0:0	6	}
call	33:3	34:16	2	png_debug1
arg	33:14	33:15	3	2
water	33:14	0:0	4	2
arg	33:17	33:71	3	"Allocating and reading sCAL chunk data (%lu bytes)\n"
water	33:17	0:0	4	"Allocating and reading sCAL chunk data (%lu bytes)\n"
arg	34:6	34:16	3	length+1
water	34:6	0:0	4	length
op	34:13	0:0	4	+
water	34:15	0:0	4	1
water	34:17	0:0	2	;
water	35:3	0:0	2	buffer
op	35:10	0:0	2	=
water	35:12	0:0	2	(
water	35:13	0:0	2	png_charp
water	35:22	0:0	2	)
call	35:23	35:58	2	png_malloc_warn
arg	35:39	35:46	3	png_ptr
water	35:39	0:0	4	png_ptr
arg	35:48	35:58	3	length+1
water	35:48	0:0	4	length
op	35:55	0:0	4	+
water	35:57	0:0	4	1
water	35:59	0:0	2	;
if	36:3	40:5	2	(buffer == NULL)
cond	36:7	36:17	3	buffer == NULL
water	36:7	0:0	4	buffer
op	36:14	0:0	4	==
water	36:17	0:0	4	NULL
stmts	37:5	40:5	3	
water	37:5	0:0	4	{
call	38:7	38:71	4	png_warning
arg	38:19	38:26	5	png_ptr
water	38:19	0:0	6	png_ptr
arg	38:28	38:71	5	"Out of memory while processing sCAL chunk"
water	38:28	0:0	6	"Out of memory while processing sCAL chunk"
water	38:72	0:0	4	;
return	39:7	39:13	4	
water	40:5	0:0	4	}
water	41:3	0:0	2	slength
op	41:11	0:0	2	=
water	41:13	0:0	2	(
water	41:14	0:0	2	png_size_t
water	41:24	0:0	2	)
water	41:25	0:0	2	length
water	41:31	0:0	2	;
call	42:3	42:51	2	png_crc_read
arg	42:16	42:23	3	png_ptr
water	42:16	0:0	4	png_ptr
arg	42:25	42:42	3	(png_bytep)buffer
water	42:25	0:0	4	(
water	42:26	0:0	4	png_bytep
water	42:35	0:0	4	)
water	42:36	0:0	4	buffer
arg	42:44	42:51	3	slength
water	42:44	0:0	4	slength
water	42:52	0:0	2	;
if	44:3	48:3	2	(png_crc_finish (png_ptr ,0 ))
cond	44:7	44:32	3	png_crc_finish (png_ptr ,0 )
call	44:7	44:32	4	png_crc_finish
arg	44:22	44:29	5	png_ptr
water	44:22	0:0	6	png_ptr
arg	44:31	44:32	5	0
water	44:31	0:0	6	0
stmts	45:3	48:3	3	
water	45:3	0:0	4	{
call	46:6	46:30	4	png_free
arg	46:15	46:22	5	png_ptr
water	46:15	0:0	6	png_ptr
arg	46:24	46:30	5	buffer
water	46:24	0:0	6	buffer
water	46:31	0:0	4	;
return	47:6	47:12	4	
water	48:3	0:0	4	}
water	50:3	0:0	2	buffer
op	50:9	0:0	2	[
water	50:10	0:0	2	slength
op	50:17	0:0	2	]
op	50:19	0:0	2	=
water	50:21	0:0	2	0
water	50:22	0:0	2	x00
water	50:25	0:0	2	;
water	52:3	0:0	2	ep
op	52:6	0:0	2	=
water	52:8	0:0	2	buffer
op	52:15	0:0	2	+
water	52:17	0:0	2	1
water	52:18	0:0	2	;
water	55:3	0:0	2	width
op	55:9	0:0	2	=
call	55:11	55:25	2	strtod
arg	55:18	55:20	3	ep
water	55:18	0:0	4	ep
arg	55:22	55:25	3	&vp
op	55:22	0:0	4	&
water	55:23	0:0	4	vp
water	55:26	0:0	2	;
if	56:3	60:3	2	(* vp)
cond	56:7	56:8	3	* vp
op	56:7	0:0	4	*
water	56:8	0:0	4	vp
stmts	57:3	60:3	3	
water	57:3	0:0	4	{
call	58:7	58:66	4	png_warning
arg	58:19	58:26	5	png_ptr
water	58:19	0:0	6	png_ptr
arg	58:28	58:66	5	"malformed width string in sCAL chunk"
water	58:28	0:0	6	"malformed width string in sCAL chunk"
water	58:67	0:0	4	;
return	59:7	59:13	4	
water	60:3	0:0	4	}
water	63:3	0:0	2	swidth
op	63:10	0:0	2	=
water	63:12	0:0	2	(
water	63:13	0:0	2	png_charp
water	63:22	0:0	2	)
call	63:23	63:66	2	png_malloc_warn
arg	63:39	63:46	3	png_ptr
water	63:39	0:0	4	png_ptr
arg	63:48	63:66	3	png_strlen(ep)+1
call	63:48	63:61	4	png_strlen
arg	63:59	63:61	5	ep
water	63:59	0:0	6	ep
op	63:63	0:0	4	+
water	63:65	0:0	4	1
water	63:67	0:0	2	;
if	64:3	68:5	2	(swidth == NULL)
cond	64:7	64:17	3	swidth == NULL
water	64:7	0:0	4	swidth
op	64:14	0:0	4	==
water	64:17	0:0	4	NULL
stmts	65:5	68:5	3	
water	65:5	0:0	4	{
call	66:7	66:77	4	png_warning
arg	66:19	66:26	5	png_ptr
water	66:19	0:0	6	png_ptr
arg	66:28	66:77	5	"Out of memory while processing sCAL chunk width"
water	66:28	0:0	6	"Out of memory while processing sCAL chunk width"
water	66:78	0:0	4	;
return	67:7	67:13	4	
water	68:5	0:0	4	}
call	69:3	69:52	2	png_memcpy
arg	69:14	69:20	3	swidth
water	69:14	0:0	4	swidth
arg	69:22	69:24	3	ep
water	69:22	0:0	4	ep
arg	69:26	69:52	3	(png_size_t)png_strlen(ep)
water	69:26	0:0	4	(
water	69:27	0:0	4	png_size_t
water	69:37	0:0	4	)
call	69:38	69:51	4	png_strlen
arg	69:49	69:51	5	ep
water	69:49	0:0	6	ep
water	69:53	0:0	2	;
for	73:3	74:7	2	(ep = buffer ;* ep;ep ++)
forinit	73:8	73:19	3	ep = buffer ;
water	73:8	0:0	4	ep
op	73:11	0:0	4	=
water	73:13	0:0	4	buffer
water	73:19	0:0	4	;
cond	73:21	73:22	3	* ep
op	73:21	0:0	4	*
water	73:22	0:0	4	ep
forexpr	73:26	73:28	3	ep ++
water	73:26	0:0	4	ep
op	73:28	0:0	4	++
stmts	74:7	74:7	3	
water	74:7	0:0	4	;
water	75:3	0:0	2	ep
op	75:5	0:0	2	++
water	75:7	0:0	2	;
water	78:3	0:0	2	height
op	78:10	0:0	2	=
call	78:12	78:26	2	strtod
arg	78:19	78:21	3	ep
water	78:19	0:0	4	ep
arg	78:23	78:26	3	&vp
op	78:23	0:0	4	&
water	78:24	0:0	4	vp
water	78:27	0:0	2	;
if	79:3	83:3	2	(* vp)
cond	79:7	79:8	3	* vp
op	79:7	0:0	4	*
water	79:8	0:0	4	vp
stmts	80:3	83:3	3	
water	80:3	0:0	4	{
call	81:7	81:67	4	png_warning
arg	81:19	81:26	5	png_ptr
water	81:19	0:0	6	png_ptr
arg	81:28	81:67	5	"malformed height string in sCAL chunk"
water	81:28	0:0	6	"malformed height string in sCAL chunk"
water	81:68	0:0	4	;
return	82:7	82:13	4	
water	83:3	0:0	4	}
water	86:3	0:0	2	sheight
op	86:11	0:0	2	=
water	86:13	0:0	2	(
water	86:14	0:0	2	png_charp
water	86:23	0:0	2	)
call	86:24	86:67	2	png_malloc_warn
arg	86:40	86:47	3	png_ptr
water	86:40	0:0	4	png_ptr
arg	86:49	86:67	3	png_strlen(ep)+1
call	86:49	86:62	4	png_strlen
arg	86:60	86:62	5	ep
water	86:60	0:0	6	ep
op	86:64	0:0	4	+
water	86:66	0:0	4	1
water	86:68	0:0	2	;
if	87:3	91:5	2	(swidth == NULL)
cond	87:7	87:17	3	swidth == NULL
water	87:7	0:0	4	swidth
op	87:14	0:0	4	==
water	87:17	0:0	4	NULL
stmts	88:5	91:5	3	
water	88:5	0:0	4	{
call	89:7	89:78	4	png_warning
arg	89:19	89:26	5	png_ptr
water	89:19	0:0	6	png_ptr
arg	89:28	89:78	5	"Out of memory while processing sCAL chunk height"
water	89:28	0:0	6	"Out of memory while processing sCAL chunk height"
water	89:79	0:0	4	;
return	90:7	90:13	4	
water	91:5	0:0	4	}
call	92:3	92:53	2	png_memcpy
arg	92:14	92:21	3	sheight
water	92:14	0:0	4	sheight
arg	92:23	92:25	3	ep
water	92:23	0:0	4	ep
arg	92:27	92:53	3	(png_size_t)png_strlen(ep)
water	92:27	0:0	4	(
water	92:28	0:0	4	png_size_t
water	92:38	0:0	4	)
call	92:39	92:52	4	png_strlen
arg	92:50	92:52	5	ep
water	92:50	0:0	6	ep
water	92:54	0:0	2	;
if	96:3	109:3	2	(buffer + slength < ep || width <= 0 . || height <= 0 .)
cond	96:7	98:35	3	buffer + slength < ep || width <= 0 . || height <= 0 .
water	96:7	0:0	4	buffer
op	96:14	0:0	4	+
water	96:16	0:0	4	slength
op	96:24	0:0	4	<
water	96:26	0:0	4	ep
op	98:6	0:0	4	||
water	98:9	0:0	4	width
op	98:15	0:0	4	<=
water	98:18	0:0	4	0
op	98:19	0:0	4	.
op	98:21	0:0	4	||
water	98:24	0:0	4	height
op	98:31	0:0	4	<=
water	98:34	0:0	4	0
op	98:35	0:0	4	.
stmts	101:3	109:3	3	
water	101:3	0:0	4	{
call	102:6	102:46	4	png_warning
arg	102:18	102:25	5	png_ptr
water	102:18	0:0	6	png_ptr
arg	102:27	102:46	5	"Invalid sCAL data"
water	102:27	0:0	6	"Invalid sCAL data"
water	102:47	0:0	4	;
call	103:6	103:30	4	png_free
arg	103:15	103:22	5	png_ptr
water	103:15	0:0	6	png_ptr
arg	103:24	103:30	5	buffer
water	103:24	0:0	6	buffer
water	103:31	0:0	4	;
call	105:6	105:30	4	png_free
arg	105:15	105:22	5	png_ptr
water	105:15	0:0	6	png_ptr
arg	105:24	105:30	5	swidth
water	105:24	0:0	6	swidth
water	105:31	0:0	4	;
call	106:6	106:31	4	png_free
arg	106:15	106:22	5	png_ptr
water	106:15	0:0	6	png_ptr
arg	106:24	106:31	5	sheight
water	106:24	0:0	6	sheight
water	106:32	0:0	4	;
return	108:6	108:12	4	
water	109:3	0:0	4	}
call	113:3	113:59	2	png_set_sCAL
arg	113:16	113:23	3	png_ptr
water	113:16	0:0	4	png_ptr
arg	113:25	113:33	3	info_ptr
water	113:25	0:0	4	info_ptr
arg	113:35	113:44	3	buffer[0]
water	113:35	0:0	4	buffer
op	113:41	0:0	4	[
water	113:42	0:0	4	0
op	113:43	0:0	4	]
arg	113:46	113:51	3	width
water	113:46	0:0	4	width
arg	113:53	113:59	3	height
water	113:53	0:0	4	height
water	113:60	0:0	2	;
call	116:3	116:63	2	png_set_sCAL_s
arg	116:18	116:25	3	png_ptr
water	116:18	0:0	4	png_ptr
arg	116:27	116:35	3	info_ptr
water	116:27	0:0	4	info_ptr
arg	116:37	116:46	3	buffer[0]
water	116:37	0:0	4	buffer
op	116:43	0:0	4	[
water	116:44	0:0	4	0
op	116:45	0:0	4	]
arg	116:48	116:54	3	swidth
water	116:48	0:0	4	swidth
arg	116:56	116:63	3	sheight
water	116:56	0:0	4	sheight
water	116:64	0:0	2	;
call	120:3	120:27	2	png_free
arg	120:12	120:19	3	png_ptr
water	120:12	0:0	4	png_ptr
arg	120:21	120:27	3	buffer
water	120:21	0:0	4	buffer
water	120:28	0:0	2	;
call	122:3	122:27	2	png_free
arg	122:12	122:19	3	png_ptr
water	122:12	0:0	4	png_ptr
arg	122:21	122:27	3	swidth
water	122:21	0:0	4	swidth
water	122:28	0:0	2	;
call	123:3	123:28	2	png_free
arg	123:12	123:19	3	png_ptr
water	123:12	0:0	4	png_ptr
arg	123:21	123:28	3	sheight
water	123:21	0:0	4	sheight
water	123:29	0:0	2	;

func	2:0	35:0	0	static void	png_format_buffer
params	3:17	0:0	1	
param	3:18	3:37	2	png_structp	png_ptr
param	3:39	3:55	2	png_charp	buffer
param	3:57	4:17	2	png_const_charp	error_message
stmnts	0:0	34:3	1	
decl	6:3	6:24	2	int	iout
op	6:12	0:0	2	=
water	6:14	0:0	2	0
water	6:15	0:0	2	,
decl	6:3	6:24	2	int	iin
op	6:21	0:0	2	=
water	6:23	0:0	2	0
while	8:3	23:3	2	(iin < 4)
cond	8:10	8:16	3	iin < 4
water	8:10	0:0	4	iin
op	8:14	0:0	4	<
water	8:16	0:0	4	4
stmts	9:3	23:3	3	
water	9:3	0:0	4	{
decl	10:6	10:40	4	int	c
op	10:12	0:0	4	=
water	10:14	0:0	4	png_ptr
op	10:21	0:0	4	->
water	10:23	0:0	4	chunk_name
op	10:33	0:0	4	[
water	10:34	0:0	4	iin
op	10:37	0:0	4	++
op	10:39	0:0	4	]
if	11:6	17:6	4	(isnonalpha (c ))
cond	11:10	11:22	5	isnonalpha (c )
call	11:10	11:22	6	isnonalpha
arg	11:21	11:22	7	c
water	11:21	0:0	8	c
stmts	12:6	17:6	5	
water	12:6	0:0	6	{
water	13:9	0:0	6	buffer
op	13:15	0:0	6	[
water	13:16	0:0	6	iout
op	13:20	0:0	6	++
op	13:22	0:0	6	]
op	13:24	0:0	6	=
water	13:26	0:0	6	PNG_LITERAL_LEFT_SQUARE_BRACKET
water	13:57	0:0	6	;
water	14:9	0:0	6	buffer
op	14:15	0:0	6	[
water	14:16	0:0	6	iout
op	14:20	0:0	6	++
op	14:22	0:0	6	]
op	14:24	0:0	6	=
water	14:26	0:0	6	png_digit
op	14:35	0:0	6	[
water	14:36	0:0	6	(
water	14:37	0:0	6	c
op	14:39	0:0	6	&
water	14:41	0:0	6	0
water	14:42	0:0	6	xf0
water	14:45	0:0	6	)
op	14:47	0:0	6	>>
water	14:50	0:0	6	4
op	14:51	0:0	6	]
water	14:52	0:0	6	;
water	15:9	0:0	6	buffer
op	15:15	0:0	6	[
water	15:16	0:0	6	iout
op	15:20	0:0	6	++
op	15:22	0:0	6	]
op	15:24	0:0	6	=
water	15:26	0:0	6	png_digit
op	15:35	0:0	6	[
water	15:36	0:0	6	c
op	15:38	0:0	6	&
water	15:40	0:0	6	0
water	15:41	0:0	6	x0f
op	15:44	0:0	6	]
water	15:45	0:0	6	;
water	16:9	0:0	6	buffer
op	16:15	0:0	6	[
water	16:16	0:0	6	iout
op	16:20	0:0	6	++
op	16:22	0:0	6	]
op	16:24	0:0	6	=
water	16:26	0:0	6	PNG_LITERAL_RIGHT_SQUARE_BRACKET
water	16:58	0:0	6	;
water	17:6	0:0	6	}
else	19:6	22:6	4
stmts	20:6	22:6	5	
water	20:6	0:0	6	{
water	21:9	0:0	6	buffer
op	21:15	0:0	6	[
water	21:16	0:0	6	iout
op	21:20	0:0	6	++
op	21:22	0:0	6	]
op	21:24	0:0	6	=
water	21:26	0:0	6	(
water	21:27	0:0	6	png_byte
water	21:35	0:0	6	)
water	21:36	0:0	6	c
water	21:37	0:0	6	;
water	22:6	0:0	6	}
water	23:3	0:0	4	}
if	25:3	26:25	2	(error_message == NULL)
cond	25:7	25:24	3	error_message == NULL
water	25:7	0:0	4	error_message
op	25:21	0:0	4	==
water	25:24	0:0	4	NULL
stmts	26:6	26:25	3	
water	26:6	0:0	4	buffer
op	26:12	0:0	4	[
water	26:13	0:0	4	iout
op	26:17	0:0	4	]
op	26:19	0:0	4	=
water	26:21	0:0	4	'\0'
water	26:25	0:0	4	;
else	28:3	34:3	2
stmts	29:3	34:3	3	
water	29:3	0:0	4	{
water	30:6	0:0	4	buffer
op	30:12	0:0	4	[
water	30:13	0:0	4	iout
op	30:17	0:0	4	++
op	30:19	0:0	4	]
op	30:21	0:0	4	=
water	30:23	0:0	4	':'
water	30:26	0:0	4	;
water	31:6	0:0	4	buffer
op	31:12	0:0	4	[
water	31:13	0:0	4	iout
op	31:17	0:0	4	++
op	31:19	0:0	4	]
op	31:21	0:0	4	=
water	31:23	0:0	4	' '
water	31:26	0:0	4	;
call	32:6	32:65	4	png_memcpy
arg	32:17	32:30	5	buffer+iout
water	32:17	0:0	6	buffer
op	32:24	0:0	6	+
water	32:26	0:0	6	iout
arg	32:32	32:45	5	error_message
water	32:32	0:0	6	error_message
arg	32:47	32:65	5	PNG_MAX_ERROR_TEXT
water	32:47	0:0	6	PNG_MAX_ERROR_TEXT
water	32:66	0:0	4	;
water	33:6	0:0	4	buffer
op	33:12	0:0	4	[
water	33:13	0:0	4	iout
op	33:18	0:0	4	+
water	33:20	0:0	4	PNG_MAX_ERROR_TEXT
op	33:39	0:0	4	-
water	33:41	0:0	4	1
op	33:42	0:0	4	]
op	33:44	0:0	4	=
water	33:46	0:0	4	'\0'
water	33:50	0:0	4	;
water	34:3	0:0	4	}

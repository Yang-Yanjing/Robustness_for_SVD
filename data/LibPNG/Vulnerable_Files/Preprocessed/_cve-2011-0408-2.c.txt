D:\postGraduate\code\function_representation_learning\Data\LibPNG\vulnerable_Files\vulnerable_functions\cve-2011-0408-2.c line 253:6 mismatched character '<EOF>' expecting '\n'
func	2:0	252:0	0	int	png_do_rgb_to_gray
params	3:18	0:0	1	
param	3:19	3:38	2	png_structp	png_ptr
param	3:40	3:62	2	png_row_infop	row_info
param	3:64	3:77	2	png_bytep	row
stmnts	0:0	251:19	1	
decl	6:3	6:16	2	png_uint_32	i
decl	8:3	8:42	2	png_uint_32	row_width
op	8:25	0:0	2	=
water	8:27	0:0	2	row_info
op	8:35	0:0	2	->
water	8:37	0:0	2	width
decl	9:3	9:20	2	int	rgb_error
op	9:17	0:0	2	=
water	9:19	0:0	2	0
call	11:3	11:39	2	png_debug
arg	11:13	11:14	3	1
water	11:13	0:0	4	1
arg	11:16	11:39	3	"in png_do_rgb_to_gray"
water	11:16	0:0	4	"in png_do_rgb_to_gray"
water	11:40	0:0	2	;
if	13:3	250:3	2	(( row_info -> color_type & PNG_COLOR_MASK_COLOR ))
cond	14:7	14:51	3	( row_info -> color_type & PNG_COLOR_MASK_COLOR )
water	14:7	0:0	4	(
water	14:8	0:0	4	row_info
op	14:16	0:0	4	->
water	14:18	0:0	4	color_type
op	14:29	0:0	4	&
water	14:31	0:0	4	PNG_COLOR_MASK_COLOR
water	14:51	0:0	4	)
stmts	15:3	250:3	3	
water	15:3	0:0	4	{
decl	16:6	16:53	4	png_uint_32	rc
op	16:21	0:0	4	=
water	16:23	0:0	4	png_ptr
op	16:30	0:0	4	->
water	16:32	0:0	4	rgb_to_gray_red_coeff
decl	17:6	17:55	4	png_uint_32	gc
op	17:21	0:0	4	=
water	17:23	0:0	4	png_ptr
op	17:30	0:0	4	->
water	17:32	0:0	4	rgb_to_gray_green_coeff
decl	18:6	18:54	4	png_uint_32	bc
op	18:21	0:0	4	=
water	18:23	0:0	4	png_ptr
op	18:30	0:0	4	->
water	18:32	0:0	4	rgb_to_gray_blue_coeff
if	20:6	131:6	4	(row_info -> color_type == PNG_COLOR_TYPE_RGB)
cond	20:10	20:34	5	row_info -> color_type == PNG_COLOR_TYPE_RGB
water	20:10	0:0	6	row_info
op	20:18	0:0	6	->
water	20:20	0:0	6	color_type
op	20:31	0:0	6	==
water	20:34	0:0	6	PNG_COLOR_TYPE_RGB
stmts	21:6	131:6	5	
water	21:6	0:0	6	{
if	22:9	68:9	6	(row_info -> bit_depth == 8)
cond	22:13	22:36	7	row_info -> bit_depth == 8
water	22:13	0:0	8	row_info
op	22:21	0:0	8	->
water	22:23	0:0	8	bit_depth
op	22:33	0:0	8	==
water	22:36	0:0	8	8
stmts	23:9	68:9	7	
water	23:9	0:0	8	{
if	25:12	46:12	8	(png_ptr -> gamma_from_1 != NULL && png_ptr -> gamma_to_1 != NULL)
cond	25:16	25:72	9	png_ptr -> gamma_from_1 != NULL && png_ptr -> gamma_to_1 != NULL
water	25:16	0:0	10	png_ptr
op	25:23	0:0	10	->
water	25:25	0:0	10	gamma_from_1
op	25:38	0:0	10	!=
water	25:41	0:0	10	NULL
op	25:46	0:0	10	&&
water	25:49	0:0	10	png_ptr
op	25:56	0:0	10	->
water	25:58	0:0	10	gamma_to_1
op	25:69	0:0	10	!=
water	25:72	0:0	10	NULL
stmts	26:12	46:12	9	
water	26:12	0:0	10	{
decl	27:15	27:33	10	png_bytep	sp
op	27:28	0:0	10	=
water	27:30	0:0	10	row
decl	28:15	28:33	10	png_bytep	dp
op	28:28	0:0	10	=
water	28:30	0:0	10	row
for	30:15	45:15	10	(i = 0 ;i < row_width;i ++)
forinit	30:20	30:25	11	i = 0 ;
water	30:20	0:0	12	i
op	30:22	0:0	12	=
water	30:24	0:0	12	0
water	30:25	0:0	12	;
cond	30:27	30:31	11	i < row_width
water	30:27	0:0	12	i
op	30:29	0:0	12	<
water	30:31	0:0	12	row_width
forexpr	30:42	30:43	11	i ++
water	30:42	0:0	12	i
op	30:43	0:0	12	++
stmts	31:15	45:15	11	
water	31:15	0:0	12	{
decl	32:18	32:63	12	png_byte	red
op	32:33	0:0	12	=
water	32:35	0:0	12	png_ptr
op	32:42	0:0	12	->
water	32:44	0:0	12	gamma_to_1
op	32:54	0:0	12	[
op	32:55	0:0	12	*
water	32:56	0:0	12	(
water	32:57	0:0	12	sp
op	32:59	0:0	12	++
water	32:61	0:0	12	)
op	32:62	0:0	12	]
decl	33:18	33:63	12	png_byte	green
op	33:33	0:0	12	=
water	33:35	0:0	12	png_ptr
op	33:42	0:0	12	->
water	33:44	0:0	12	gamma_to_1
op	33:54	0:0	12	[
op	33:55	0:0	12	*
water	33:56	0:0	12	(
water	33:57	0:0	12	sp
op	33:59	0:0	12	++
water	33:61	0:0	12	)
op	33:62	0:0	12	]
decl	34:18	34:63	12	png_byte	blue
op	34:33	0:0	12	=
water	34:35	0:0	12	png_ptr
op	34:42	0:0	12	->
water	34:44	0:0	12	gamma_to_1
op	34:54	0:0	12	[
op	34:55	0:0	12	*
water	34:56	0:0	12	(
water	34:57	0:0	12	sp
op	34:59	0:0	12	++
water	34:61	0:0	12	)
op	34:62	0:0	12	]
if	36:18	41:18	12	(red != green || red != blue)
cond	36:22	36:45	13	red != green || red != blue
water	36:22	0:0	14	red
op	36:26	0:0	14	!=
water	36:29	0:0	14	green
op	36:35	0:0	14	||
water	36:38	0:0	14	red
op	36:42	0:0	14	!=
water	36:45	0:0	14	blue
stmts	37:18	41:18	13	
water	37:18	0:0	14	{
water	38:21	0:0	14	rgb_error
op	38:31	0:0	14	|=
water	38:34	0:0	14	1
water	38:35	0:0	14	;
op	39:21	0:0	14	*
water	39:22	0:0	14	(
water	39:23	0:0	14	dp
op	39:25	0:0	14	++
water	39:27	0:0	14	)
op	39:29	0:0	14	=
water	39:31	0:0	14	png_ptr
op	39:38	0:0	14	->
water	39:40	0:0	14	gamma_from_1
op	39:52	0:0	14	[
water	40:25	0:0	14	(
water	40:26	0:0	14	rc
op	40:28	0:0	14	*
water	40:29	0:0	14	red
op	40:33	0:0	14	+
water	40:35	0:0	14	gc
op	40:37	0:0	14	*
water	40:38	0:0	14	green
op	40:44	0:0	14	+
water	40:46	0:0	14	bc
op	40:48	0:0	14	*
water	40:49	0:0	14	blue
water	40:53	0:0	14	)
op	40:54	0:0	14	>>
water	40:56	0:0	14	15
op	40:58	0:0	14	]
water	40:59	0:0	14	;
water	41:18	0:0	14	}
else	43:18	44:40	12
stmts	44:21	44:40	13	
op	44:21	0:0	14	*
water	44:22	0:0	14	(
water	44:23	0:0	14	dp
op	44:25	0:0	14	++
water	44:27	0:0	14	)
op	44:29	0:0	14	=
op	44:31	0:0	14	*
water	44:32	0:0	14	(
water	44:33	0:0	14	sp
op	44:36	0:0	14	-
water	44:38	0:0	14	1
water	44:39	0:0	14	)
water	44:40	0:0	14	;
water	45:15	0:0	12	}
water	46:12	0:0	10	}
else	47:12	67:12	8
stmts	49:12	67:12	9	
water	49:12	0:0	10	{
decl	50:15	50:33	10	png_bytep	sp
op	50:28	0:0	10	=
water	50:30	0:0	10	row
decl	51:15	51:33	10	png_bytep	dp
op	51:28	0:0	10	=
water	51:30	0:0	10	row
for	52:15	66:15	10	(i = 0 ;i < row_width;i ++)
forinit	52:20	52:25	11	i = 0 ;
water	52:20	0:0	12	i
op	52:22	0:0	12	=
water	52:24	0:0	12	0
water	52:25	0:0	12	;
cond	52:27	52:31	11	i < row_width
water	52:27	0:0	12	i
op	52:29	0:0	12	<
water	52:31	0:0	12	row_width
forexpr	52:42	52:43	11	i ++
water	52:42	0:0	12	i
op	52:43	0:0	12	++
stmts	53:15	66:15	11	
water	53:15	0:0	12	{
decl	54:18	54:42	12	png_byte	red
op	54:33	0:0	12	=
op	54:35	0:0	12	*
water	54:36	0:0	12	(
water	54:37	0:0	12	sp
op	54:39	0:0	12	++
water	54:41	0:0	12	)
decl	55:18	55:42	12	png_byte	green
op	55:33	0:0	12	=
op	55:35	0:0	12	*
water	55:36	0:0	12	(
water	55:37	0:0	12	sp
op	55:39	0:0	12	++
water	55:41	0:0	12	)
decl	56:18	56:42	12	png_byte	blue
op	56:33	0:0	12	=
op	56:35	0:0	12	*
water	56:36	0:0	12	(
water	56:37	0:0	12	sp
op	56:39	0:0	12	++
water	56:41	0:0	12	)
if	58:18	62:18	12	(red != green || red != blue)
cond	58:22	58:45	13	red != green || red != blue
water	58:22	0:0	14	red
op	58:26	0:0	14	!=
water	58:29	0:0	14	green
op	58:35	0:0	14	||
water	58:38	0:0	14	red
op	58:42	0:0	14	!=
water	58:45	0:0	14	blue
stmts	59:18	62:18	13	
water	59:18	0:0	14	{
water	60:21	0:0	14	rgb_error
op	60:31	0:0	14	|=
water	60:34	0:0	14	1
water	60:35	0:0	14	;
op	61:21	0:0	14	*
water	61:22	0:0	14	(
water	61:23	0:0	14	dp
op	61:25	0:0	14	++
water	61:27	0:0	14	)
op	61:29	0:0	14	=
call	61:31	61:75	14	(png_byte)
arg	61:42	61:75	15	(rc*red+gc*green+bc*blue)>>15
water	61:42	0:0	16	(
water	61:43	0:0	16	rc
op	61:45	0:0	16	*
water	61:46	0:0	16	red
op	61:50	0:0	16	+
water	61:52	0:0	16	gc
op	61:54	0:0	16	*
water	61:55	0:0	16	green
op	61:61	0:0	16	+
water	61:63	0:0	16	bc
op	61:65	0:0	16	*
water	61:66	0:0	16	blue
water	61:70	0:0	16	)
op	61:71	0:0	16	>>
water	61:73	0:0	16	15
water	61:76	0:0	14	;
water	62:18	0:0	14	}
else	64:18	65:40	12
stmts	65:21	65:40	13	
op	65:21	0:0	14	*
water	65:22	0:0	14	(
water	65:23	0:0	14	dp
op	65:25	0:0	14	++
water	65:27	0:0	14	)
op	65:29	0:0	14	=
op	65:31	0:0	14	*
water	65:32	0:0	14	(
water	65:33	0:0	14	sp
op	65:36	0:0	14	-
water	65:38	0:0	14	1
water	65:39	0:0	14	)
water	65:40	0:0	14	;
water	66:15	0:0	12	}
water	67:12	0:0	10	}
water	68:9	0:0	8	}
else	70:9	130:9	6
stmts	71:9	130:9	7	
water	71:9	0:0	8	{
if	73:12	108:12	8	(png_ptr -> gamma_16_to_1 != NULL && png_ptr -> gamma_16_from_1 != NULL)
cond	73:16	74:44	9	png_ptr -> gamma_16_to_1 != NULL && png_ptr -> gamma_16_from_1 != NULL
water	73:16	0:0	10	png_ptr
op	73:23	0:0	10	->
water	73:25	0:0	10	gamma_16_to_1
op	73:39	0:0	10	!=
water	73:42	0:0	10	NULL
op	73:47	0:0	10	&&
water	74:16	0:0	10	png_ptr
op	74:23	0:0	10	->
water	74:25	0:0	10	gamma_16_from_1
op	74:41	0:0	10	!=
water	74:44	0:0	10	NULL
stmts	75:12	108:12	9	
water	75:12	0:0	10	{
decl	76:15	76:33	10	png_bytep	sp
op	76:28	0:0	10	=
water	76:30	0:0	10	row
decl	77:15	77:33	10	png_bytep	dp
op	77:28	0:0	10	=
water	77:30	0:0	10	row
for	78:15	107:15	10	(i = 0 ;i < row_width;i ++)
forinit	78:20	78:25	11	i = 0 ;
water	78:20	0:0	12	i
op	78:22	0:0	12	=
water	78:24	0:0	12	0
water	78:25	0:0	12	;
cond	78:27	78:31	11	i < row_width
water	78:27	0:0	12	i
op	78:29	0:0	12	<
water	78:31	0:0	12	row_width
forexpr	78:42	78:43	11	i ++
water	78:42	0:0	12	i
op	78:43	0:0	12	++
stmts	79:15	107:15	11	
water	79:15	0:0	12	{
decl	80:18	80:49	12	png_uint_16	red
water	80:33	0:0	12	,
decl	80:18	80:49	12	png_uint_16	green
water	80:40	0:0	12	,
decl	80:18	80:49	12	png_uint_16	blue
water	80:46	0:0	12	,
decl	80:18	80:49	12	png_uint_16	w
water	82:18	0:0	12	red
op	82:24	0:0	12	=
call	82:26	82:64	12	(png_uint_16)
arg	82:40	82:64	13	((*(sp))<<8)|*(sp+1)
water	82:40	0:0	14	(
water	82:41	0:0	14	(
op	82:42	0:0	14	*
water	82:43	0:0	14	(
water	82:44	0:0	14	sp
water	82:46	0:0	14	)
water	82:47	0:0	14	)
op	82:48	0:0	14	<<
water	82:50	0:0	14	8
water	82:51	0:0	14	)
op	82:53	0:0	14	|
op	82:55	0:0	14	*
water	82:56	0:0	14	(
water	82:57	0:0	14	sp
op	82:60	0:0	14	+
water	82:62	0:0	14	1
water	82:63	0:0	14	)
water	82:65	0:0	12	;
water	82:67	0:0	12	sp
op	82:70	0:0	12	+=
water	82:73	0:0	12	2
water	82:74	0:0	12	;
water	83:18	0:0	12	green
op	83:24	0:0	12	=
call	83:26	83:64	12	(png_uint_16)
arg	83:40	83:64	13	((*(sp))<<8)|*(sp+1)
water	83:40	0:0	14	(
water	83:41	0:0	14	(
op	83:42	0:0	14	*
water	83:43	0:0	14	(
water	83:44	0:0	14	sp
water	83:46	0:0	14	)
water	83:47	0:0	14	)
op	83:48	0:0	14	<<
water	83:50	0:0	14	8
water	83:51	0:0	14	)
op	83:53	0:0	14	|
op	83:55	0:0	14	*
water	83:56	0:0	14	(
water	83:57	0:0	14	sp
op	83:60	0:0	14	+
water	83:62	0:0	14	1
water	83:63	0:0	14	)
water	83:65	0:0	12	;
water	83:67	0:0	12	sp
op	83:70	0:0	12	+=
water	83:73	0:0	12	2
water	83:74	0:0	12	;
water	84:18	0:0	12	blue
op	84:24	0:0	12	=
call	84:26	84:64	12	(png_uint_16)
arg	84:40	84:64	13	((*(sp))<<8)|*(sp+1)
water	84:40	0:0	14	(
water	84:41	0:0	14	(
op	84:42	0:0	14	*
water	84:43	0:0	14	(
water	84:44	0:0	14	sp
water	84:46	0:0	14	)
water	84:47	0:0	14	)
op	84:48	0:0	14	<<
water	84:50	0:0	14	8
water	84:51	0:0	14	)
op	84:53	0:0	14	|
op	84:55	0:0	14	*
water	84:56	0:0	14	(
water	84:57	0:0	14	sp
op	84:60	0:0	14	+
water	84:62	0:0	14	1
water	84:63	0:0	14	)
water	84:65	0:0	12	;
water	84:67	0:0	12	sp
op	84:70	0:0	12	+=
water	84:73	0:0	12	2
water	84:74	0:0	12	;
if	86:18	87:28	12	(red == green && red == blue)
cond	86:22	86:45	13	red == green && red == blue
water	86:22	0:0	14	red
op	86:26	0:0	14	==
water	86:29	0:0	14	green
op	86:35	0:0	14	&&
water	86:38	0:0	14	red
op	86:42	0:0	14	==
water	86:45	0:0	14	blue
stmts	87:21	87:28	13	
water	87:21	0:0	14	w
op	87:23	0:0	14	=
water	87:25	0:0	14	red
water	87:28	0:0	14	;
else	89:18	103:18	12
stmts	90:18	103:18	13	
water	90:18	0:0	14	{
decl	91:21	92:57	14	png_uint_16	red_1
op	91:41	0:0	14	=
water	91:43	0:0	14	png_ptr
op	91:50	0:0	14	->
water	91:52	0:0	14	gamma_16_to_1
op	91:65	0:0	14	[
water	91:66	0:0	14	(
water	91:67	0:0	14	red
op	91:70	0:0	14	&
water	91:71	0:0	14	0
water	91:72	0:0	14	xff
water	91:75	0:0	14	)
op	92:25	0:0	14	>>
water	92:28	0:0	14	png_ptr
op	92:35	0:0	14	->
water	92:37	0:0	14	gamma_shift
op	92:48	0:0	14	]
op	92:49	0:0	14	[
water	92:50	0:0	14	red
op	92:53	0:0	14	>>
water	92:55	0:0	14	8
op	92:56	0:0	14	]
decl	93:21	95:56	14	png_uint_16	green_1
op	93:41	0:0	14	=
water	94:25	0:0	14	png_ptr
op	94:32	0:0	14	->
water	94:34	0:0	14	gamma_16_to_1
op	94:47	0:0	14	[
water	94:48	0:0	14	(
water	94:49	0:0	14	green
op	94:54	0:0	14	&
water	94:55	0:0	14	0
water	94:56	0:0	14	xff
water	94:59	0:0	14	)
op	94:61	0:0	14	>>
water	95:25	0:0	14	png_ptr
op	95:32	0:0	14	->
water	95:34	0:0	14	gamma_shift
op	95:45	0:0	14	]
op	95:46	0:0	14	[
water	95:47	0:0	14	green
op	95:52	0:0	14	>>
water	95:54	0:0	14	8
op	95:55	0:0	14	]
decl	96:21	97:58	14	png_uint_16	blue_1
op	96:41	0:0	14	=
water	96:43	0:0	14	png_ptr
op	96:50	0:0	14	->
water	96:52	0:0	14	gamma_16_to_1
op	96:65	0:0	14	[
water	96:66	0:0	14	(
water	96:67	0:0	14	blue
op	96:71	0:0	14	&
water	96:72	0:0	14	0
water	96:73	0:0	14	xff
water	96:76	0:0	14	)
op	97:25	0:0	14	>>
water	97:28	0:0	14	png_ptr
op	97:35	0:0	14	->
water	97:37	0:0	14	gamma_shift
op	97:48	0:0	14	]
op	97:49	0:0	14	[
water	97:50	0:0	14	blue
op	97:54	0:0	14	>>
water	97:56	0:0	14	8
op	97:57	0:0	14	]
decl	98:21	99:42	14	png_uint_16	gray16
op	98:41	0:0	14	=
call	98:43	99:41	15	(png_uint_16)
arg	98:57	99:41	16	(rc*red_1+gc*green_1+bc*blue_1)>>15
water	98:57	0:0	17	(
water	98:58	0:0	17	rc
op	98:60	0:0	17	*
water	98:61	0:0	17	red_1
op	98:67	0:0	17	+
water	98:69	0:0	17	gc
op	98:71	0:0	17	*
water	98:72	0:0	17	green_1
op	99:25	0:0	17	+
water	99:27	0:0	17	bc
op	99:29	0:0	17	*
water	99:30	0:0	17	blue_1
water	99:36	0:0	17	)
op	99:37	0:0	17	>>
water	99:39	0:0	17	15
water	100:21	0:0	14	w
op	100:23	0:0	14	=
water	100:25	0:0	14	png_ptr
op	100:32	0:0	14	->
water	100:34	0:0	14	gamma_16_from_1
op	100:49	0:0	14	[
water	100:50	0:0	14	(
water	100:51	0:0	14	gray16
op	100:57	0:0	14	&
water	100:58	0:0	14	0
water	100:59	0:0	14	xff
water	100:62	0:0	14	)
op	100:64	0:0	14	>>
water	101:25	0:0	14	png_ptr
op	101:32	0:0	14	->
water	101:34	0:0	14	gamma_shift
op	101:45	0:0	14	]
op	101:46	0:0	14	[
water	101:47	0:0	14	gray16
op	101:54	0:0	14	>>
water	101:57	0:0	14	8
op	101:58	0:0	14	]
water	101:59	0:0	14	;
water	102:21	0:0	14	rgb_error
op	102:31	0:0	14	|=
water	102:34	0:0	14	1
water	102:35	0:0	14	;
water	103:18	0:0	14	}
op	105:18	0:0	12	*
water	105:19	0:0	12	(
water	105:20	0:0	12	dp
op	105:22	0:0	12	++
water	105:24	0:0	12	)
op	105:26	0:0	12	=
call	105:28	105:52	12	(png_byte)
arg	105:39	105:52	13	(w>>8)&0xff
water	105:39	0:0	14	(
water	105:40	0:0	14	w
op	105:41	0:0	14	>>
water	105:43	0:0	14	8
water	105:44	0:0	14	)
op	105:46	0:0	14	&
water	105:48	0:0	14	0
water	105:49	0:0	14	xff
water	105:53	0:0	12	;
op	106:18	0:0	12	*
water	106:19	0:0	12	(
water	106:20	0:0	12	dp
op	106:22	0:0	12	++
water	106:24	0:0	12	)
op	106:26	0:0	12	=
call	106:28	106:47	12	(png_byte)
arg	106:39	106:47	13	w&0xff
water	106:39	0:0	14	w
op	106:41	0:0	14	&
water	106:43	0:0	14	0
water	106:44	0:0	14	xff
water	106:48	0:0	12	;
water	107:15	0:0	12	}
water	108:12	0:0	10	}
else	109:12	129:12	8
stmts	111:12	129:12	9	
water	111:12	0:0	10	{
decl	112:15	112:33	10	png_bytep	sp
op	112:28	0:0	10	=
water	112:30	0:0	10	row
decl	113:15	113:33	10	png_bytep	dp
op	113:28	0:0	10	=
water	113:30	0:0	10	row
for	114:15	128:15	10	(i = 0 ;i < row_width;i ++)
forinit	114:20	114:25	11	i = 0 ;
water	114:20	0:0	12	i
op	114:22	0:0	12	=
water	114:24	0:0	12	0
water	114:25	0:0	12	;
cond	114:27	114:31	11	i < row_width
water	114:27	0:0	12	i
op	114:29	0:0	12	<
water	114:31	0:0	12	row_width
forexpr	114:42	114:43	11	i ++
water	114:42	0:0	12	i
op	114:43	0:0	12	++
stmts	115:15	128:15	11	
water	115:15	0:0	12	{
decl	116:18	116:54	12	png_uint_16	red
water	116:33	0:0	12	,
decl	116:18	116:54	12	png_uint_16	green
water	116:40	0:0	12	,
decl	116:18	116:54	12	png_uint_16	blue
water	116:46	0:0	12	,
decl	116:18	116:54	12	png_uint_16	gray16
water	118:18	0:0	12	red
op	118:24	0:0	12	=
call	118:26	118:64	12	(png_uint_16)
arg	118:40	118:64	13	((*(sp))<<8)|*(sp+1)
water	118:40	0:0	14	(
water	118:41	0:0	14	(
op	118:42	0:0	14	*
water	118:43	0:0	14	(
water	118:44	0:0	14	sp
water	118:46	0:0	14	)
water	118:47	0:0	14	)
op	118:48	0:0	14	<<
water	118:50	0:0	14	8
water	118:51	0:0	14	)
op	118:53	0:0	14	|
op	118:55	0:0	14	*
water	118:56	0:0	14	(
water	118:57	0:0	14	sp
op	118:60	0:0	14	+
water	118:62	0:0	14	1
water	118:63	0:0	14	)
water	118:65	0:0	12	;
water	118:67	0:0	12	sp
op	118:70	0:0	12	+=
water	118:73	0:0	12	2
water	118:74	0:0	12	;
water	119:18	0:0	12	green
op	119:24	0:0	12	=
call	119:26	119:64	12	(png_uint_16)
arg	119:40	119:64	13	((*(sp))<<8)|*(sp+1)
water	119:40	0:0	14	(
water	119:41	0:0	14	(
op	119:42	0:0	14	*
water	119:43	0:0	14	(
water	119:44	0:0	14	sp
water	119:46	0:0	14	)
water	119:47	0:0	14	)
op	119:48	0:0	14	<<
water	119:50	0:0	14	8
water	119:51	0:0	14	)
op	119:53	0:0	14	|
op	119:55	0:0	14	*
water	119:56	0:0	14	(
water	119:57	0:0	14	sp
op	119:60	0:0	14	+
water	119:62	0:0	14	1
water	119:63	0:0	14	)
water	119:65	0:0	12	;
water	119:67	0:0	12	sp
op	119:70	0:0	12	+=
water	119:73	0:0	12	2
water	119:74	0:0	12	;
water	120:18	0:0	12	blue
op	120:24	0:0	12	=
call	120:26	120:64	12	(png_uint_16)
arg	120:40	120:64	13	((*(sp))<<8)|*(sp+1)
water	120:40	0:0	14	(
water	120:41	0:0	14	(
op	120:42	0:0	14	*
water	120:43	0:0	14	(
water	120:44	0:0	14	sp
water	120:46	0:0	14	)
water	120:47	0:0	14	)
op	120:48	0:0	14	<<
water	120:50	0:0	14	8
water	120:51	0:0	14	)
op	120:53	0:0	14	|
op	120:55	0:0	14	*
water	120:56	0:0	14	(
water	120:57	0:0	14	sp
op	120:60	0:0	14	+
water	120:62	0:0	14	1
water	120:63	0:0	14	)
water	120:65	0:0	12	;
water	120:67	0:0	12	sp
op	120:70	0:0	12	+=
water	120:73	0:0	12	2
water	120:74	0:0	12	;
if	122:18	123:35	12	(red != green || red != blue)
cond	122:22	122:45	13	red != green || red != blue
water	122:22	0:0	14	red
op	122:26	0:0	14	!=
water	122:29	0:0	14	green
op	122:35	0:0	14	||
water	122:38	0:0	14	red
op	122:42	0:0	14	!=
water	122:45	0:0	14	blue
stmts	123:21	123:35	13	
water	123:21	0:0	14	rgb_error
op	123:31	0:0	14	|=
water	123:34	0:0	14	1
water	123:35	0:0	14	;
water	125:18	0:0	12	gray16
op	125:26	0:0	12	=
call	125:28	125:75	12	(png_uint_16)
arg	125:42	125:75	13	(rc*red+gc*green+bc*blue)>>15
water	125:42	0:0	14	(
water	125:43	0:0	14	rc
op	125:45	0:0	14	*
water	125:46	0:0	14	red
op	125:50	0:0	14	+
water	125:52	0:0	14	gc
op	125:54	0:0	14	*
water	125:55	0:0	14	green
op	125:61	0:0	14	+
water	125:63	0:0	14	bc
op	125:65	0:0	14	*
water	125:66	0:0	14	blue
water	125:70	0:0	14	)
op	125:71	0:0	14	>>
water	125:73	0:0	14	15
water	125:76	0:0	12	;
op	126:18	0:0	12	*
water	126:19	0:0	12	(
water	126:20	0:0	12	dp
op	126:22	0:0	12	++
water	126:24	0:0	12	)
op	126:26	0:0	12	=
call	126:28	126:57	12	(png_byte)
arg	126:39	126:57	13	(gray16>>8)&0xff
water	126:39	0:0	14	(
water	126:40	0:0	14	gray16
op	126:46	0:0	14	>>
water	126:48	0:0	14	8
water	126:49	0:0	14	)
op	126:51	0:0	14	&
water	126:53	0:0	14	0
water	126:54	0:0	14	xff
water	126:58	0:0	12	;
op	127:18	0:0	12	*
water	127:19	0:0	12	(
water	127:20	0:0	12	dp
op	127:22	0:0	12	++
water	127:24	0:0	12	)
op	127:26	0:0	12	=
call	127:28	127:52	12	(png_byte)
arg	127:39	127:52	13	gray16&0xff
water	127:39	0:0	14	gray16
op	127:46	0:0	14	&
water	127:48	0:0	14	0
water	127:49	0:0	14	xff
water	127:53	0:0	12	;
water	128:15	0:0	12	}
water	129:12	0:0	10	}
water	130:9	0:0	8	}
water	131:6	0:0	6	}
if	132:6	243:6	4	(row_info -> color_type == PNG_COLOR_TYPE_RGB_ALPHA)
cond	132:10	132:34	5	row_info -> color_type == PNG_COLOR_TYPE_RGB_ALPHA
water	132:10	0:0	6	row_info
op	132:18	0:0	6	->
water	132:20	0:0	6	color_type
op	132:31	0:0	6	==
water	132:34	0:0	6	PNG_COLOR_TYPE_RGB_ALPHA
stmts	133:6	243:6	5	
water	133:6	0:0	6	{
if	134:9	173:9	6	(row_info -> bit_depth == 8)
cond	134:13	134:36	7	row_info -> bit_depth == 8
water	134:13	0:0	8	row_info
op	134:21	0:0	8	->
water	134:23	0:0	8	bit_depth
op	134:33	0:0	8	==
water	134:36	0:0	8	8
stmts	135:9	173:9	7	
water	135:9	0:0	8	{
if	137:12	155:12	8	(png_ptr -> gamma_from_1 != NULL && png_ptr -> gamma_to_1 != NULL)
cond	137:16	137:72	9	png_ptr -> gamma_from_1 != NULL && png_ptr -> gamma_to_1 != NULL
water	137:16	0:0	10	png_ptr
op	137:23	0:0	10	->
water	137:25	0:0	10	gamma_from_1
op	137:38	0:0	10	!=
water	137:41	0:0	10	NULL
op	137:46	0:0	10	&&
water	137:49	0:0	10	png_ptr
op	137:56	0:0	10	->
water	137:58	0:0	10	gamma_to_1
op	137:69	0:0	10	!=
water	137:72	0:0	10	NULL
stmts	138:12	155:12	9	
water	138:12	0:0	10	{
decl	139:15	139:33	10	png_bytep	sp
op	139:28	0:0	10	=
water	139:30	0:0	10	row
decl	140:15	140:33	10	png_bytep	dp
op	140:28	0:0	10	=
water	140:30	0:0	10	row
for	141:15	154:15	10	(i = 0 ;i < row_width;i ++)
forinit	141:20	141:25	11	i = 0 ;
water	141:20	0:0	12	i
op	141:22	0:0	12	=
water	141:24	0:0	12	0
water	141:25	0:0	12	;
cond	141:27	141:31	11	i < row_width
water	141:27	0:0	12	i
op	141:29	0:0	12	<
water	141:31	0:0	12	row_width
forexpr	141:42	141:43	11	i ++
water	141:42	0:0	12	i
op	141:43	0:0	12	++
stmts	142:15	154:15	11	
water	142:15	0:0	12	{
decl	143:18	143:63	12	png_byte	red
op	143:33	0:0	12	=
water	143:35	0:0	12	png_ptr
op	143:42	0:0	12	->
water	143:44	0:0	12	gamma_to_1
op	143:54	0:0	12	[
op	143:55	0:0	12	*
water	143:56	0:0	12	(
water	143:57	0:0	12	sp
op	143:59	0:0	12	++
water	143:61	0:0	12	)
op	143:62	0:0	12	]
decl	144:18	144:63	12	png_byte	green
op	144:33	0:0	12	=
water	144:35	0:0	12	png_ptr
op	144:42	0:0	12	->
water	144:44	0:0	12	gamma_to_1
op	144:54	0:0	12	[
op	144:55	0:0	12	*
water	144:56	0:0	12	(
water	144:57	0:0	12	sp
op	144:59	0:0	12	++
water	144:61	0:0	12	)
op	144:62	0:0	12	]
decl	145:18	145:63	12	png_byte	blue
op	145:33	0:0	12	=
water	145:35	0:0	12	png_ptr
op	145:42	0:0	12	->
water	145:44	0:0	12	gamma_to_1
op	145:54	0:0	12	[
op	145:55	0:0	12	*
water	145:56	0:0	12	(
water	145:57	0:0	12	sp
op	145:59	0:0	12	++
water	145:61	0:0	12	)
op	145:62	0:0	12	]
if	147:18	148:35	12	(red != green || red != blue)
cond	147:22	147:45	13	red != green || red != blue
water	147:22	0:0	14	red
op	147:26	0:0	14	!=
water	147:29	0:0	14	green
op	147:35	0:0	14	||
water	147:38	0:0	14	red
op	147:42	0:0	14	!=
water	147:45	0:0	14	blue
stmts	148:21	148:35	13	
water	148:21	0:0	14	rgb_error
op	148:31	0:0	14	|=
water	148:34	0:0	14	1
water	148:35	0:0	14	;
op	150:18	0:0	12	*
water	150:19	0:0	12	(
water	150:20	0:0	12	dp
op	150:22	0:0	12	++
water	150:24	0:0	12	)
op	150:26	0:0	12	=
water	150:29	0:0	12	png_ptr
op	150:36	0:0	12	->
water	150:38	0:0	12	gamma_from_1
op	151:22	0:0	12	[
water	151:23	0:0	12	(
water	151:24	0:0	12	rc
op	151:26	0:0	12	*
water	151:27	0:0	12	red
op	151:31	0:0	12	+
water	151:33	0:0	12	gc
op	151:35	0:0	12	*
water	151:36	0:0	12	green
op	151:42	0:0	12	+
water	151:44	0:0	12	bc
op	151:46	0:0	12	*
water	151:47	0:0	12	blue
water	151:51	0:0	12	)
op	151:52	0:0	12	>>
water	151:54	0:0	12	15
op	151:56	0:0	12	]
water	151:57	0:0	12	;
op	153:18	0:0	12	*
water	153:19	0:0	12	(
water	153:20	0:0	12	dp
op	153:22	0:0	12	++
water	153:24	0:0	12	)
op	153:26	0:0	12	=
op	153:28	0:0	12	*
water	153:29	0:0	12	(
water	153:30	0:0	12	sp
op	153:32	0:0	12	++
water	153:34	0:0	12	)
water	153:35	0:0	12	;
water	154:15	0:0	12	}
water	155:12	0:0	10	}
else	156:12	172:12	8
stmts	158:12	172:12	9	
water	158:12	0:0	10	{
decl	159:15	159:33	10	png_bytep	sp
op	159:28	0:0	10	=
water	159:30	0:0	10	row
decl	160:15	160:33	10	png_bytep	dp
op	160:28	0:0	10	=
water	160:30	0:0	10	row
for	161:15	171:15	10	(i = 0 ;i < row_width;i ++)
forinit	161:20	161:25	11	i = 0 ;
water	161:20	0:0	12	i
op	161:22	0:0	12	=
water	161:24	0:0	12	0
water	161:25	0:0	12	;
cond	161:27	161:31	11	i < row_width
water	161:27	0:0	12	i
op	161:29	0:0	12	<
water	161:31	0:0	12	row_width
forexpr	161:42	161:43	11	i ++
water	161:42	0:0	12	i
op	161:43	0:0	12	++
stmts	162:15	171:15	11	
water	162:15	0:0	12	{
decl	163:18	163:42	12	png_byte	red
op	163:33	0:0	12	=
op	163:35	0:0	12	*
water	163:36	0:0	12	(
water	163:37	0:0	12	sp
op	163:39	0:0	12	++
water	163:41	0:0	12	)
decl	164:18	164:42	12	png_byte	green
op	164:33	0:0	12	=
op	164:35	0:0	12	*
water	164:36	0:0	12	(
water	164:37	0:0	12	sp
op	164:39	0:0	12	++
water	164:41	0:0	12	)
decl	165:18	165:42	12	png_byte	blue
op	165:33	0:0	12	=
op	165:35	0:0	12	*
water	165:36	0:0	12	(
water	165:37	0:0	12	sp
op	165:39	0:0	12	++
water	165:41	0:0	12	)
if	166:18	167:35	12	(red != green || red != blue)
cond	166:22	166:45	13	red != green || red != blue
water	166:22	0:0	14	red
op	166:26	0:0	14	!=
water	166:29	0:0	14	green
op	166:35	0:0	14	||
water	166:38	0:0	14	red
op	166:42	0:0	14	!=
water	166:45	0:0	14	blue
stmts	167:21	167:35	13	
water	167:21	0:0	14	rgb_error
op	167:31	0:0	14	|=
water	167:34	0:0	14	1
water	167:35	0:0	14	;
op	169:18	0:0	12	*
water	169:19	0:0	12	(
water	169:20	0:0	12	dp
op	169:22	0:0	12	++
water	169:24	0:0	12	)
op	169:26	0:0	12	=
call	169:29	169:73	12	(png_byte)
arg	169:40	169:73	13	(rc*red+gc*green+bc*blue)>>15
water	169:40	0:0	14	(
water	169:41	0:0	14	rc
op	169:43	0:0	14	*
water	169:44	0:0	14	red
op	169:48	0:0	14	+
water	169:50	0:0	14	gc
op	169:52	0:0	14	*
water	169:53	0:0	14	green
op	169:59	0:0	14	+
water	169:61	0:0	14	bc
op	169:63	0:0	14	*
water	169:64	0:0	14	blue
water	169:68	0:0	14	)
op	169:69	0:0	14	>>
water	169:71	0:0	14	15
water	169:74	0:0	12	;
op	170:18	0:0	12	*
water	170:19	0:0	12	(
water	170:20	0:0	12	dp
op	170:22	0:0	12	++
water	170:24	0:0	12	)
op	170:26	0:0	12	=
op	170:28	0:0	12	*
water	170:29	0:0	12	(
water	170:30	0:0	12	sp
op	170:32	0:0	12	++
water	170:34	0:0	12	)
water	170:35	0:0	12	;
water	171:15	0:0	12	}
water	172:12	0:0	10	}
water	173:9	0:0	8	}
else	174:9	242:9	6
stmts	175:9	242:9	7	
water	175:9	0:0	8	{
if	177:12	219:12	8	(png_ptr -> gamma_16_to_1 != NULL && png_ptr -> gamma_16_from_1 != NULL)
cond	177:16	178:44	9	png_ptr -> gamma_16_to_1 != NULL && png_ptr -> gamma_16_from_1 != NULL
water	177:16	0:0	10	png_ptr
op	177:23	0:0	10	->
water	177:25	0:0	10	gamma_16_to_1
op	177:39	0:0	10	!=
water	177:42	0:0	10	NULL
op	177:47	0:0	10	&&
water	178:16	0:0	10	png_ptr
op	178:23	0:0	10	->
water	178:25	0:0	10	gamma_16_from_1
op	178:41	0:0	10	!=
water	178:44	0:0	10	NULL
stmts	179:12	219:12	9	
water	179:12	0:0	10	{
decl	180:15	180:33	10	png_bytep	sp
op	180:28	0:0	10	=
water	180:30	0:0	10	row
decl	181:15	181:33	10	png_bytep	dp
op	181:28	0:0	10	=
water	181:30	0:0	10	row
for	182:15	218:15	10	(i = 0 ;i < row_width;i ++)
forinit	182:20	182:25	11	i = 0 ;
water	182:20	0:0	12	i
op	182:22	0:0	12	=
water	182:24	0:0	12	0
water	182:25	0:0	12	;
cond	182:27	182:31	11	i < row_width
water	182:27	0:0	12	i
op	182:29	0:0	12	<
water	182:31	0:0	12	row_width
forexpr	182:42	182:43	11	i ++
water	182:42	0:0	12	i
op	182:43	0:0	12	++
stmts	183:15	218:15	11	
water	183:15	0:0	12	{
decl	184:18	184:49	12	png_uint_16	red
water	184:33	0:0	12	,
decl	184:18	184:49	12	png_uint_16	green
water	184:40	0:0	12	,
decl	184:18	184:49	12	png_uint_16	blue
water	184:46	0:0	12	,
decl	184:18	184:49	12	png_uint_16	w
water	186:18	0:0	12	red
op	186:24	0:0	12	=
call	186:26	186:64	12	(png_uint_16)
arg	186:40	186:64	13	((*(sp))<<8)|*(sp+1)
water	186:40	0:0	14	(
water	186:41	0:0	14	(
op	186:42	0:0	14	*
water	186:43	0:0	14	(
water	186:44	0:0	14	sp
water	186:46	0:0	14	)
water	186:47	0:0	14	)
op	186:48	0:0	14	<<
water	186:50	0:0	14	8
water	186:51	0:0	14	)
op	186:53	0:0	14	|
op	186:55	0:0	14	*
water	186:56	0:0	14	(
water	186:57	0:0	14	sp
op	186:60	0:0	14	+
water	186:62	0:0	14	1
water	186:63	0:0	14	)
water	186:65	0:0	12	;
water	186:67	0:0	12	sp
op	186:70	0:0	12	+=
water	186:73	0:0	12	2
water	186:74	0:0	12	;
water	187:18	0:0	12	green
op	187:24	0:0	12	=
call	187:26	187:64	12	(png_uint_16)
arg	187:40	187:64	13	((*(sp))<<8)|*(sp+1)
water	187:40	0:0	14	(
water	187:41	0:0	14	(
op	187:42	0:0	14	*
water	187:43	0:0	14	(
water	187:44	0:0	14	sp
water	187:46	0:0	14	)
water	187:47	0:0	14	)
op	187:48	0:0	14	<<
water	187:50	0:0	14	8
water	187:51	0:0	14	)
op	187:53	0:0	14	|
op	187:55	0:0	14	*
water	187:56	0:0	14	(
water	187:57	0:0	14	sp
op	187:60	0:0	14	+
water	187:62	0:0	14	1
water	187:63	0:0	14	)
water	187:65	0:0	12	;
water	187:67	0:0	12	sp
op	187:70	0:0	12	+=
water	187:73	0:0	12	2
water	187:74	0:0	12	;
water	188:18	0:0	12	blue
op	188:24	0:0	12	=
call	188:26	188:64	12	(png_uint_16)
arg	188:40	188:64	13	((*(sp))<<8)|*(sp+1)
water	188:40	0:0	14	(
water	188:41	0:0	14	(
op	188:42	0:0	14	*
water	188:43	0:0	14	(
water	188:44	0:0	14	sp
water	188:46	0:0	14	)
water	188:47	0:0	14	)
op	188:48	0:0	14	<<
water	188:50	0:0	14	8
water	188:51	0:0	14	)
op	188:53	0:0	14	|
op	188:55	0:0	14	*
water	188:56	0:0	14	(
water	188:57	0:0	14	sp
op	188:60	0:0	14	+
water	188:62	0:0	14	1
water	188:63	0:0	14	)
water	188:65	0:0	12	;
water	188:67	0:0	12	sp
op	188:70	0:0	12	+=
water	188:73	0:0	12	2
water	188:74	0:0	12	;
if	190:18	191:28	12	(red == green && red == blue)
cond	190:22	190:45	13	red == green && red == blue
water	190:22	0:0	14	red
op	190:26	0:0	14	==
water	190:29	0:0	14	green
op	190:35	0:0	14	&&
water	190:38	0:0	14	red
op	190:42	0:0	14	==
water	190:45	0:0	14	blue
stmts	191:21	191:28	13	
water	191:21	0:0	14	w
op	191:23	0:0	14	=
water	191:25	0:0	14	red
water	191:28	0:0	14	;
else	193:18	212:18	12
stmts	194:18	212:18	13	
water	194:18	0:0	14	{
decl	195:21	196:54	14	png_uint_16	red_1
op	195:41	0:0	14	=
water	195:43	0:0	14	png_ptr
op	195:50	0:0	14	->
water	195:52	0:0	14	gamma_16_to_1
op	195:65	0:0	14	[
water	195:66	0:0	14	(
water	195:67	0:0	14	red
op	195:70	0:0	14	&
water	195:71	0:0	14	0
water	195:72	0:0	14	xff
water	195:75	0:0	14	)
op	195:77	0:0	14	>>
water	196:25	0:0	14	png_ptr
op	196:32	0:0	14	->
water	196:34	0:0	14	gamma_shift
op	196:45	0:0	14	]
op	196:46	0:0	14	[
water	196:47	0:0	14	red
op	196:50	0:0	14	>>
water	196:52	0:0	14	8
op	196:53	0:0	14	]
decl	198:21	200:56	14	png_uint_16	green_1
op	198:41	0:0	14	=
water	199:25	0:0	14	png_ptr
op	199:32	0:0	14	->
water	199:34	0:0	14	gamma_16_to_1
op	199:47	0:0	14	[
water	199:48	0:0	14	(
water	199:49	0:0	14	green
op	199:54	0:0	14	&
water	199:55	0:0	14	0
water	199:56	0:0	14	xff
water	199:59	0:0	14	)
op	199:61	0:0	14	>>
water	200:25	0:0	14	png_ptr
op	200:32	0:0	14	->
water	200:34	0:0	14	gamma_shift
op	200:45	0:0	14	]
op	200:46	0:0	14	[
water	200:47	0:0	14	green
op	200:52	0:0	14	>>
water	200:54	0:0	14	8
op	200:55	0:0	14	]
decl	202:21	203:55	14	png_uint_16	blue_1
op	202:41	0:0	14	=
water	202:43	0:0	14	png_ptr
op	202:50	0:0	14	->
water	202:52	0:0	14	gamma_16_to_1
op	202:65	0:0	14	[
water	202:66	0:0	14	(
water	202:67	0:0	14	blue
op	202:71	0:0	14	&
water	202:72	0:0	14	0
water	202:73	0:0	14	xff
water	202:76	0:0	14	)
op	202:78	0:0	14	>>
water	203:25	0:0	14	png_ptr
op	203:32	0:0	14	->
water	203:34	0:0	14	gamma_shift
op	203:45	0:0	14	]
op	203:46	0:0	14	[
water	203:47	0:0	14	blue
op	203:51	0:0	14	>>
water	203:53	0:0	14	8
op	203:54	0:0	14	]
decl	205:21	206:59	14	png_uint_16	gray16
op	205:41	0:0	14	=
call	205:43	206:58	15	(png_uint_16)
arg	205:57	206:58	16	(rc*red_1+gc*green_1+bc*blue_1)>>15
water	205:57	0:0	17	(
water	205:58	0:0	17	rc
op	205:61	0:0	17	*
water	205:63	0:0	17	red_1
op	206:25	0:0	17	+
water	206:27	0:0	17	gc
op	206:30	0:0	17	*
water	206:32	0:0	17	green_1
op	206:40	0:0	17	+
water	206:42	0:0	17	bc
op	206:45	0:0	17	*
water	206:47	0:0	17	blue_1
water	206:53	0:0	17	)
op	206:54	0:0	17	>>
water	206:56	0:0	17	15
water	208:21	0:0	14	w
op	208:23	0:0	14	=
water	208:25	0:0	14	png_ptr
op	208:32	0:0	14	->
water	208:34	0:0	14	gamma_16_from_1
op	208:49	0:0	14	[
water	208:50	0:0	14	(
water	208:51	0:0	14	gray16
op	208:57	0:0	14	&
water	208:58	0:0	14	0
water	208:59	0:0	14	xff
water	208:62	0:0	14	)
op	208:64	0:0	14	>>
water	209:25	0:0	14	png_ptr
op	209:32	0:0	14	->
water	209:34	0:0	14	gamma_shift
op	209:45	0:0	14	]
op	209:46	0:0	14	[
water	209:47	0:0	14	gray16
op	209:54	0:0	14	>>
water	209:57	0:0	14	8
op	209:58	0:0	14	]
water	209:59	0:0	14	;
water	211:21	0:0	14	rgb_error
op	211:31	0:0	14	|=
water	211:34	0:0	14	1
water	211:35	0:0	14	;
water	212:18	0:0	14	}
op	214:18	0:0	12	*
water	214:19	0:0	12	(
water	214:20	0:0	12	dp
op	214:22	0:0	12	++
water	214:24	0:0	12	)
op	214:26	0:0	12	=
call	214:28	214:52	12	(png_byte)
arg	214:39	214:52	13	(w>>8)&0xff
water	214:39	0:0	14	(
water	214:40	0:0	14	w
op	214:41	0:0	14	>>
water	214:43	0:0	14	8
water	214:44	0:0	14	)
op	214:46	0:0	14	&
water	214:48	0:0	14	0
water	214:49	0:0	14	xff
water	214:53	0:0	12	;
op	215:18	0:0	12	*
water	215:19	0:0	12	(
water	215:20	0:0	12	dp
op	215:22	0:0	12	++
water	215:24	0:0	12	)
op	215:26	0:0	12	=
call	215:28	215:47	12	(png_byte)
arg	215:39	215:47	13	w&0xff
water	215:39	0:0	14	w
op	215:41	0:0	14	&
water	215:43	0:0	14	0
water	215:44	0:0	14	xff
water	215:48	0:0	12	;
op	216:18	0:0	12	*
water	216:19	0:0	12	(
water	216:20	0:0	12	dp
op	216:22	0:0	12	++
water	216:24	0:0	12	)
op	216:26	0:0	12	=
op	216:28	0:0	12	*
water	216:29	0:0	12	(
water	216:30	0:0	12	sp
op	216:32	0:0	12	++
water	216:34	0:0	12	)
water	216:35	0:0	12	;
op	217:18	0:0	12	*
water	217:19	0:0	12	(
water	217:20	0:0	12	dp
op	217:22	0:0	12	++
water	217:24	0:0	12	)
op	217:26	0:0	12	=
op	217:28	0:0	12	*
water	217:29	0:0	12	(
water	217:30	0:0	12	sp
op	217:32	0:0	12	++
water	217:34	0:0	12	)
water	217:35	0:0	12	;
water	218:15	0:0	12	}
water	219:12	0:0	10	}
else	220:12	241:12	8
stmts	222:12	241:12	9	
water	222:12	0:0	10	{
decl	223:15	223:33	10	png_bytep	sp
op	223:28	0:0	10	=
water	223:30	0:0	10	row
decl	224:15	224:33	10	png_bytep	dp
op	224:28	0:0	10	=
water	224:30	0:0	10	row
for	225:15	240:15	10	(i = 0 ;i < row_width;i ++)
forinit	225:20	225:25	11	i = 0 ;
water	225:20	0:0	12	i
op	225:22	0:0	12	=
water	225:24	0:0	12	0
water	225:25	0:0	12	;
cond	225:27	225:31	11	i < row_width
water	225:27	0:0	12	i
op	225:29	0:0	12	<
water	225:31	0:0	12	row_width
forexpr	225:42	225:43	11	i ++
water	225:42	0:0	12	i
op	225:43	0:0	12	++
stmts	226:15	240:15	11	
water	226:15	0:0	12	{
decl	227:18	227:54	12	png_uint_16	red
water	227:33	0:0	12	,
decl	227:18	227:54	12	png_uint_16	green
water	227:40	0:0	12	,
decl	227:18	227:54	12	png_uint_16	blue
water	227:46	0:0	12	,
decl	227:18	227:54	12	png_uint_16	gray16
water	228:18	0:0	12	red
op	228:24	0:0	12	=
call	228:26	228:62	12	(png_uint_16)
arg	228:40	228:62	13	(*(sp)<<8)|*(sp+1)
water	228:40	0:0	14	(
op	228:41	0:0	14	*
water	228:42	0:0	14	(
water	228:43	0:0	14	sp
water	228:45	0:0	14	)
op	228:46	0:0	14	<<
water	228:48	0:0	14	8
water	228:49	0:0	14	)
op	228:51	0:0	14	|
op	228:53	0:0	14	*
water	228:54	0:0	14	(
water	228:55	0:0	14	sp
op	228:58	0:0	14	+
water	228:60	0:0	14	1
water	228:61	0:0	14	)
water	228:63	0:0	12	;
water	228:65	0:0	12	sp
op	228:68	0:0	12	+=
water	228:71	0:0	12	2
water	228:72	0:0	12	;
water	229:18	0:0	12	green
op	229:24	0:0	12	=
call	229:26	229:62	12	(png_uint_16)
arg	229:40	229:62	13	(*(sp)<<8)|*(sp+1)
water	229:40	0:0	14	(
op	229:41	0:0	14	*
water	229:42	0:0	14	(
water	229:43	0:0	14	sp
water	229:45	0:0	14	)
op	229:46	0:0	14	<<
water	229:48	0:0	14	8
water	229:49	0:0	14	)
op	229:51	0:0	14	|
op	229:53	0:0	14	*
water	229:54	0:0	14	(
water	229:55	0:0	14	sp
op	229:58	0:0	14	+
water	229:60	0:0	14	1
water	229:61	0:0	14	)
water	229:63	0:0	12	;
water	229:65	0:0	12	sp
op	229:68	0:0	12	+=
water	229:71	0:0	12	2
water	229:72	0:0	12	;
water	230:18	0:0	12	blue
op	230:24	0:0	12	=
call	230:26	230:62	12	(png_uint_16)
arg	230:40	230:62	13	(*(sp)<<8)|*(sp+1)
water	230:40	0:0	14	(
op	230:41	0:0	14	*
water	230:42	0:0	14	(
water	230:43	0:0	14	sp
water	230:45	0:0	14	)
op	230:46	0:0	14	<<
water	230:48	0:0	14	8
water	230:49	0:0	14	)
op	230:51	0:0	14	|
op	230:53	0:0	14	*
water	230:54	0:0	14	(
water	230:55	0:0	14	sp
op	230:58	0:0	14	+
water	230:60	0:0	14	1
water	230:61	0:0	14	)
water	230:63	0:0	12	;
water	230:65	0:0	12	sp
op	230:68	0:0	12	+=
water	230:71	0:0	12	2
water	230:72	0:0	12	;
if	232:18	233:35	12	(red != green || red != blue)
cond	232:22	232:45	13	red != green || red != blue
water	232:22	0:0	14	red
op	232:26	0:0	14	!=
water	232:29	0:0	14	green
op	232:35	0:0	14	||
water	232:38	0:0	14	red
op	232:42	0:0	14	!=
water	232:45	0:0	14	blue
stmts	233:21	233:35	13	
water	233:21	0:0	14	rgb_error
op	233:31	0:0	14	|=
water	233:34	0:0	14	1
water	233:35	0:0	14	;
water	235:18	0:0	12	gray16
op	235:26	0:0	12	=
call	235:28	235:75	12	(png_uint_16)
arg	235:42	235:75	13	(rc*red+gc*green+bc*blue)>>15
water	235:42	0:0	14	(
water	235:43	0:0	14	rc
op	235:45	0:0	14	*
water	235:46	0:0	14	red
op	235:50	0:0	14	+
water	235:52	0:0	14	gc
op	235:54	0:0	14	*
water	235:55	0:0	14	green
op	235:61	0:0	14	+
water	235:63	0:0	14	bc
op	235:65	0:0	14	*
water	235:66	0:0	14	blue
water	235:70	0:0	14	)
op	235:71	0:0	14	>>
water	235:73	0:0	14	15
water	235:76	0:0	12	;
op	236:18	0:0	12	*
water	236:19	0:0	12	(
water	236:20	0:0	12	dp
op	236:22	0:0	12	++
water	236:24	0:0	12	)
op	236:26	0:0	12	=
call	236:28	236:57	12	(png_byte)
arg	236:39	236:57	13	(gray16>>8)&0xff
water	236:39	0:0	14	(
water	236:40	0:0	14	gray16
op	236:46	0:0	14	>>
water	236:48	0:0	14	8
water	236:49	0:0	14	)
op	236:51	0:0	14	&
water	236:53	0:0	14	0
water	236:54	0:0	14	xff
water	236:58	0:0	12	;
op	237:18	0:0	12	*
water	237:19	0:0	12	(
water	237:20	0:0	12	dp
op	237:22	0:0	12	++
water	237:24	0:0	12	)
op	237:26	0:0	12	=
call	237:28	237:52	12	(png_byte)
arg	237:39	237:52	13	gray16&0xff
water	237:39	0:0	14	gray16
op	237:46	0:0	14	&
water	237:48	0:0	14	0
water	237:49	0:0	14	xff
water	237:53	0:0	12	;
op	238:18	0:0	12	*
water	238:19	0:0	12	(
water	238:20	0:0	12	dp
op	238:22	0:0	12	++
water	238:24	0:0	12	)
op	238:26	0:0	12	=
op	238:28	0:0	12	*
water	238:29	0:0	12	(
water	238:30	0:0	12	sp
op	238:32	0:0	12	++
water	238:34	0:0	12	)
water	238:35	0:0	12	;
op	239:18	0:0	12	*
water	239:19	0:0	12	(
water	239:20	0:0	12	dp
op	239:22	0:0	12	++
water	239:24	0:0	12	)
op	239:26	0:0	12	=
op	239:28	0:0	12	*
water	239:29	0:0	12	(
water	239:30	0:0	12	sp
op	239:32	0:0	12	++
water	239:34	0:0	12	)
water	239:35	0:0	12	;
water	240:15	0:0	12	}
water	241:12	0:0	10	}
water	242:9	0:0	8	}
water	243:6	0:0	6	}
water	244:6	0:0	4	row_info
op	244:14	0:0	4	->
water	244:16	0:0	4	channels
op	244:25	0:0	4	-=
water	244:28	0:0	4	2
water	244:29	0:0	4	;
water	245:6	0:0	4	row_info
op	245:14	0:0	4	->
water	245:16	0:0	4	color_type
op	245:27	0:0	4	=
call	245:29	246:31	4	(png_byte)
arg	245:40	246:31	5	row_info->color_type&~PNG_COLOR_MASK_COLOR
water	245:40	0:0	6	row_info
op	245:48	0:0	6	->
water	245:50	0:0	6	color_type
op	245:61	0:0	6	&
water	246:10	0:0	6	~PNG_COLOR_MASK_COLOR
water	246:32	0:0	4	;
water	247:6	0:0	4	row_info
op	247:14	0:0	4	->
water	247:16	0:0	4	pixel_depth
op	247:28	0:0	4	=
call	247:30	248:29	4	(png_byte)
arg	247:41	248:29	5	row_info->channels*row_info->bit_depth
water	247:41	0:0	6	row_info
op	247:49	0:0	6	->
water	247:51	0:0	6	channels
op	247:60	0:0	6	*
water	248:10	0:0	6	row_info
op	248:18	0:0	6	->
water	248:20	0:0	6	bit_depth
water	248:30	0:0	4	;
water	249:6	0:0	4	row_info
op	249:14	0:0	4	->
water	249:16	0:0	4	rowbytes
op	249:25	0:0	4	=
call	249:27	249:72	4	PNG_ROWBYTES
arg	249:40	249:61	5	row_info->pixel_depth
water	249:40	0:0	6	row_info
op	249:48	0:0	6	->
water	249:50	0:0	6	pixel_depth
arg	249:63	249:72	5	row_width
water	249:63	0:0	6	row_width
water	249:73	0:0	4	;
water	250:3	0:0	4	}
return	251:3	251:19	2	rgb_error
water	251:10	0:0	3	rgb_error

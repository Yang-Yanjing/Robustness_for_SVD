func	2:0	94:0	0	static png_size_t	png_inflate
params	3:11	0:0	1	
param	3:12	3:31	2	png_structp	png_ptr
param	3:33	3:53	2	const png_byte *	data
param	3:55	3:70	2	png_size_t	size
param	4:8	4:24	2	png_bytep	output
param	4:26	4:48	2	png_size_t	output_size
stmnts	0:0	93:3	1	
decl	6:3	6:23	2	png_size_t	count
op	6:20	0:0	2	=
water	6:22	0:0	2	0
water	8:3	0:0	2	png_ptr
op	8:10	0:0	2	->
water	8:12	0:0	2	zstream
op	8:19	0:0	2	.
water	8:20	0:0	2	next_in
op	8:28	0:0	2	=
water	8:30	0:0	2	(
water	8:31	0:0	2	png_bytep
water	8:40	0:0	2	)
water	8:41	0:0	2	data
water	8:45	0:0	2	;
water	9:3	0:0	2	png_ptr
op	9:10	0:0	2	->
water	9:12	0:0	2	zstream
op	9:19	0:0	2	.
water	9:20	0:0	2	avail_in
op	9:29	0:0	2	=
water	9:31	0:0	2	size
water	9:35	0:0	2	;
while	11:3	93:3	2	(1)
cond	11:10	11:10	3	1
water	11:10	0:0	4	1
stmts	12:3	93:3	3	
water	12:3	0:0	4	{
decl	13:6	13:20	4	int	ret
water	13:13	0:0	4	,
decl	13:6	13:20	4	int	avail
water	18:6	0:0	4	png_ptr
op	18:13	0:0	4	->
water	18:15	0:0	4	zstream
op	18:22	0:0	4	.
water	18:23	0:0	4	next_out
op	18:32	0:0	4	=
water	18:34	0:0	4	png_ptr
op	18:41	0:0	4	->
water	18:43	0:0	4	zbuf
water	18:47	0:0	4	;
water	19:6	0:0	4	png_ptr
op	19:13	0:0	4	->
water	19:15	0:0	4	zstream
op	19:22	0:0	4	.
water	19:23	0:0	4	avail_out
op	19:33	0:0	4	=
water	19:35	0:0	4	png_ptr
op	19:42	0:0	4	->
water	19:44	0:0	4	zbuf_size
water	19:53	0:0	4	;
water	21:6	0:0	4	ret
op	21:10	0:0	4	=
call	21:12	21:49	4	inflate
arg	21:20	21:37	5	&png_ptr->zstream
op	21:20	0:0	6	&
water	21:21	0:0	6	png_ptr
op	21:28	0:0	6	->
water	21:30	0:0	6	zstream
arg	21:39	21:49	5	Z_NO_FLUSH
water	21:39	0:0	6	Z_NO_FLUSH
water	21:50	0:0	4	;
water	22:6	0:0	4	avail
op	22:12	0:0	4	=
water	22:14	0:0	4	png_ptr
op	22:21	0:0	4	->
water	22:23	0:0	4	zbuf_size
op	22:33	0:0	4	-
water	22:35	0:0	4	png_ptr
op	22:42	0:0	4	->
water	22:44	0:0	4	zstream
op	22:51	0:0	4	.
water	22:52	0:0	4	avail_out
water	22:61	0:0	4	;
if	27:6	37:6	4	(( ret == Z_OK || ret == Z_STREAM_END ) && avail > 0)
cond	27:10	27:58	5	( ret == Z_OK || ret == Z_STREAM_END ) && avail > 0
water	27:10	0:0	6	(
water	27:11	0:0	6	ret
op	27:15	0:0	6	==
water	27:18	0:0	6	Z_OK
op	27:23	0:0	6	||
water	27:26	0:0	6	ret
op	27:30	0:0	6	==
water	27:33	0:0	6	Z_STREAM_END
water	27:45	0:0	6	)
op	27:47	0:0	6	&&
water	27:50	0:0	6	avail
op	27:56	0:0	6	>
water	27:58	0:0	6	0
stmts	28:6	37:6	5	
water	28:6	0:0	6	{
if	29:9	34:9	6	(output != 0 && output_size > count)
cond	29:13	29:42	7	output != 0 && output_size > count
water	29:13	0:0	8	output
op	29:20	0:0	8	!=
water	29:23	0:0	8	0
op	29:25	0:0	8	&&
water	29:28	0:0	8	output_size
op	29:40	0:0	8	>
water	29:42	0:0	8	count
stmts	30:9	34:9	7	
water	30:9	0:0	8	{
decl	31:12	31:42	8	int	copy
op	31:21	0:0	8	=
water	31:23	0:0	8	output_size
op	31:35	0:0	8	-
water	31:37	0:0	8	count
if	32:12	32:42	8	(avail < copy)
cond	32:16	32:24	9	avail < copy
water	32:16	0:0	10	avail
op	32:22	0:0	10	<
water	32:24	0:0	10	copy
stmts	32:30	32:42	9	
water	32:30	0:0	10	copy
op	32:35	0:0	10	=
water	32:37	0:0	10	avail
water	32:42	0:0	10	;
call	33:12	33:58	8	png_memcpy
arg	33:23	33:37	9	output+count
water	33:23	0:0	10	output
op	33:30	0:0	10	+
water	33:32	0:0	10	count
arg	33:39	33:52	9	png_ptr->zbuf
water	33:39	0:0	10	png_ptr
op	33:46	0:0	10	->
water	33:48	0:0	10	zbuf
arg	33:54	33:58	9	copy
water	33:54	0:0	10	copy
water	33:59	0:0	8	;
water	34:9	0:0	8	}
water	36:9	0:0	6	count
op	36:15	0:0	6	+=
water	36:18	0:0	6	avail
water	36:23	0:0	6	;
water	37:6	0:0	6	}
if	39:6	40:17	4	(ret == Z_OK)
cond	39:10	39:17	5	ret == Z_OK
water	39:10	0:0	6	ret
op	39:14	0:0	6	==
water	39:17	0:0	6	Z_OK
stmts	40:9	40:17	5	
continue	40:9	40:17	6	
water	45:6	0:0	4	png_ptr
op	45:13	0:0	4	->
water	45:15	0:0	4	zstream
op	45:22	0:0	4	.
water	45:23	0:0	4	avail_in
op	45:32	0:0	4	=
water	45:34	0:0	4	0
water	45:35	0:0	4	;
call	46:6	46:36	4	inflateReset
arg	46:19	46:36	5	&png_ptr->zstream
op	46:19	0:0	6	&
water	46:20	0:0	6	png_ptr
op	46:27	0:0	6	->
water	46:29	0:0	6	zstream
water	46:37	0:0	4	;
if	48:6	49:21	4	(ret == Z_STREAM_END)
cond	48:10	48:17	5	ret == Z_STREAM_END
water	48:10	0:0	6	ret
op	48:14	0:0	6	==
water	48:17	0:0	6	Z_STREAM_END
stmts	49:9	49:21	5	
return	49:9	49:21	6	count
water	49:16	0:0	7	count
water	55:6	0:0	4	{
water	56:9	0:0	4	PNG_CONST
water	56:19	0:0	4	char
op	56:24	0:0	4	*
water	56:25	0:0	4	msg
water	56:28	0:0	4	;
if	57:9	58:38	4	(png_ptr -> zstream . msg != 0)
cond	57:13	57:37	5	png_ptr -> zstream . msg != 0
water	57:13	0:0	6	png_ptr
op	57:20	0:0	6	->
water	57:22	0:0	6	zstream
op	57:29	0:0	6	.
water	57:30	0:0	6	msg
op	57:34	0:0	6	!=
water	57:37	0:0	6	0
stmts	58:12	58:38	5	
water	58:12	0:0	6	msg
op	58:16	0:0	6	=
water	58:18	0:0	6	png_ptr
op	58:25	0:0	6	->
water	58:27	0:0	6	zstream
op	58:34	0:0	6	.
water	58:35	0:0	6	msg
water	58:38	0:0	6	;
else	59:9	84:9	4
stmts	60:9	84:9	5	
water	60:9	0:0	6	{
decl	62:12	62:25	6	char	umsg[52]
switch	64:12	77:12	6	(ret)
cond	64:20	64:20	7	ret
water	64:20	0:0	8	ret
stmts	65:12	77:12	7	
water	65:12	0:0	8	{
label	66:15	66:31	8	case Z_BUF_ERROR :
water	67:18	0:0	8	msg
op	67:22	0:0	8	=
water	67:24	0:0	8	"Buffer error in compressed datastream in %s chunk"
water	67:75	0:0	8	;
break	68:18	68:23	8	
label	70:15	70:32	8	case Z_DATA_ERROR :
water	71:18	0:0	8	msg
op	71:22	0:0	8	=
water	71:24	0:0	8	"Data error in compressed datastream in %s chunk"
water	71:73	0:0	8	;
break	72:18	72:23	8	
label	74:15	74:22	8	default :
water	75:18	0:0	8	msg
op	75:22	0:0	8	=
water	75:24	0:0	8	"Incomplete compressed datastream in %s chunk"
water	75:70	0:0	8	;
break	76:18	76:23	8	
water	77:12	0:0	8	}
call	79:12	79:68	6	png_snprintf
arg	79:25	79:29	7	umsg
water	79:25	0:0	8	umsg
arg	79:31	79:42	7	sizeofumsg
op	79:31	0:0	8	sizeof
water	79:38	0:0	8	umsg
arg	79:44	79:47	7	msg
water	79:44	0:0	8	msg
arg	79:49	79:68	7	png_ptr->chunk_name
water	79:49	0:0	8	png_ptr
op	79:56	0:0	8	->
water	79:58	0:0	8	chunk_name
water	79:69	0:0	6	;
water	80:12	0:0	6	msg
op	80:16	0:0	6	=
water	80:18	0:0	6	umsg
water	80:22	0:0	6	;
water	82:12	0:0	6	msg
op	82:16	0:0	6	=
water	82:18	0:0	6	"Damaged compressed datastream in chunk other than IDAT"
water	82:74	0:0	6	;
water	84:9	0:0	6	}
call	86:9	86:33	4	png_warning
arg	86:21	86:28	5	png_ptr
water	86:21	0:0	6	png_ptr
arg	86:30	86:33	5	msg
water	86:30	0:0	6	msg
water	86:34	0:0	4	;
water	87:6	0:0	4	}
return	92:6	92:14	4	0
water	92:13	0:0	5	0
water	93:3	0:0	4	}

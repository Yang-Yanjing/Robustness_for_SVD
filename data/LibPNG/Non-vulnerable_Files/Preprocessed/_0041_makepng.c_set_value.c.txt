func	1:0	50:0	0	static void	set_value
params	2:9	0:0	1	
param	2:10	2:23	2	png_bytep	row
param	2:25	2:40	2	size_t	rowbytes
param	2:42	2:55	2	png_uint_32	x
param	2:57	2:79	2	unsigned int	bit_depth
param	3:3	3:20	2	png_uint_32	value
param	3:22	3:49	2	png_const_bytep	gamma_table
param	3:51	3:62	2	double	conv
stmnts	0:0	49:3	1	
decl	5:3	5:42	2	unsigned int	mask
op	5:21	0:0	2	=
water	5:23	0:0	2	(
water	5:24	0:0	2	1
water	5:25	0:0	2	U
op	5:27	0:0	2	<<
water	5:30	0:0	2	bit_depth
water	5:39	0:0	2	)
op	5:40	0:0	2	-
water	5:41	0:0	2	1
water	6:3	0:0	2	x
op	6:5	0:0	2	*=
water	6:8	0:0	2	bit_depth
water	6:17	0:0	2	;
if	7:3	44:3	2	(value <= mask)
cond	7:7	7:16	3	value <= mask
water	7:7	0:0	4	value
op	7:13	0:0	4	<=
water	7:16	0:0	4	mask
stmts	8:3	44:3	3	
water	8:3	0:0	4	{
decl	9:6	9:33	4	png_uint_32	offset
op	9:25	0:0	4	=
water	9:27	0:0	4	x
op	9:29	0:0	4	>>
water	9:32	0:0	4	3
if	10:6	38:6	4	(offset < rowbytes && ( bit_depth < 16 || offset + 1 < rowbytes ))
cond	10:10	10:69	5	offset < rowbytes && ( bit_depth < 16 || offset + 1 < rowbytes )
water	10:10	0:0	6	offset
op	10:17	0:0	6	<
water	10:19	0:0	6	rowbytes
op	10:28	0:0	6	&&
water	10:31	0:0	6	(
water	10:32	0:0	6	bit_depth
op	10:42	0:0	6	<
water	10:44	0:0	6	16
op	10:47	0:0	6	||
water	10:50	0:0	6	offset
op	10:56	0:0	6	+
water	10:57	0:0	6	1
op	10:59	0:0	6	<
water	10:61	0:0	6	rowbytes
water	10:69	0:0	6	)
stmts	11:6	38:6	5	
water	11:6	0:0	6	{
water	12:9	0:0	6	row
op	12:13	0:0	6	+=
water	12:16	0:0	6	offset
water	12:22	0:0	6	;
switch	13:9	37:9	6	(bit_depth)
cond	13:17	13:17	7	bit_depth
water	13:17	0:0	8	bit_depth
stmts	14:9	37:9	7	
water	14:9	0:0	8	{
label	15:12	15:18	8	case 1 :
label	16:12	16:18	8	case 2 :
label	17:12	17:18	8	case 4 :
water	19:15	0:0	8	{
decl	20:18	20:67	8	unsigned int	shift
op	20:37	0:0	8	=
water	20:39	0:0	8	(
water	20:40	0:0	8	8
op	20:42	0:0	8	-
water	20:44	0:0	8	bit_depth
water	20:53	0:0	8	)
op	20:55	0:0	8	-
water	20:57	0:0	8	(
water	20:58	0:0	8	x
op	20:60	0:0	8	&
water	20:62	0:0	8	0
water	20:63	0:0	8	x7U
water	20:66	0:0	8	)
water	21:18	0:0	8	mask
op	21:23	0:0	8	<<=
water	21:27	0:0	8	shift
water	21:32	0:0	8	;
water	22:18	0:0	8	value
op	22:24	0:0	8	=
water	22:26	0:0	8	(
water	22:27	0:0	8	value
op	22:33	0:0	8	<<
water	22:36	0:0	8	shift
water	22:41	0:0	8	)
op	22:43	0:0	8	&
water	22:45	0:0	8	mask
water	22:49	0:0	8	;
op	23:18	0:0	8	*
water	23:19	0:0	8	row
op	23:23	0:0	8	=
call	23:25	23:58	8	(png_byte)
arg	23:36	23:58	9	(*row&~mask)|value
water	23:36	0:0	10	(
op	23:37	0:0	10	*
water	23:38	0:0	10	row
op	23:42	0:0	10	&
water	23:44	0:0	10	~mask
water	23:49	0:0	10	)
op	23:51	0:0	10	|
water	23:53	0:0	10	value
water	23:59	0:0	8	;
water	24:15	0:0	8	}
return	25:15	25:21	8	
label	26:12	26:19	8	default :
call	27:15	27:74	8	fprintf
arg	27:23	27:29	9	stderr
water	27:23	0:0	10	stderr
arg	27:31	27:74	9	"makepng: bad bit depth (internal error)\n"
water	27:31	0:0	10	"makepng: bad bit depth (internal error)\n"
water	27:75	0:0	8	;
call	28:15	28:21	8	exit
arg	28:20	28:21	9	1
water	28:20	0:0	10	1
water	28:22	0:0	8	;
label	29:12	29:19	8	case 16 :
water	30:15	0:0	8	value
op	30:21	0:0	8	=
water	30:23	0:0	8	(
water	30:24	0:0	8	unsigned
water	30:33	0:0	8	int
water	30:36	0:0	8	)
call	30:37	30:74	8	floor
arg	30:43	30:74	9	65535*pow(value/65535.,conv)+.5
water	30:43	0:0	10	65535
call	30:48	30:70	10	*pow
arg	30:53	30:65	11	value/65535.
water	30:53	0:0	12	value
op	30:58	0:0	12	/
water	30:59	0:0	12	65535
op	30:64	0:0	12	.
arg	30:66	30:70	11	conv
water	30:66	0:0	12	conv
op	30:71	0:0	10	+
op	30:72	0:0	10	.
water	30:73	0:0	10	5
water	30:75	0:0	8	;
op	31:15	0:0	8	*
water	31:16	0:0	8	row
op	31:19	0:0	8	++
op	31:22	0:0	8	=
call	31:24	31:45	8	(png_byte)
arg	31:35	31:45	9	value>>8
water	31:35	0:0	10	value
op	31:41	0:0	10	>>
water	31:44	0:0	10	8
water	31:46	0:0	8	;
op	32:15	0:0	8	*
water	32:16	0:0	8	row
op	32:20	0:0	8	=
water	32:22	0:0	8	(
water	32:23	0:0	8	png_byte
water	32:31	0:0	8	)
water	32:32	0:0	8	value
water	32:37	0:0	8	;
return	33:15	33:21	8	
label	34:12	34:18	8	case 8 :
op	35:15	0:0	8	*
water	35:16	0:0	8	row
op	35:20	0:0	8	=
water	35:22	0:0	8	gamma_table
op	35:33	0:0	8	[
water	35:34	0:0	8	value
op	35:39	0:0	8	]
water	35:40	0:0	8	;
return	36:15	36:21	8	
water	37:9	0:0	8	}
water	38:6	0:0	6	}
else	39:6	43:6	4
stmts	40:6	43:6	5	
water	40:6	0:0	6	{
call	41:9	41:74	6	fprintf
arg	41:17	41:23	7	stderr
water	41:17	0:0	8	stderr
arg	41:25	41:74	7	"makepng: row buffer overflow (internal error)\n"
water	41:25	0:0	8	"makepng: row buffer overflow (internal error)\n"
water	41:75	0:0	6	;
call	42:9	42:15	6	exit
arg	42:14	42:15	7	1
water	42:14	0:0	8	1
water	42:16	0:0	6	;
water	43:6	0:0	6	}
water	44:3	0:0	4	}
else	45:3	49:3	2
stmts	46:3	49:3	3	
water	46:3	0:0	4	{
call	47:6	47:70	4	fprintf
arg	47:14	47:20	5	stderr
water	47:14	0:0	6	stderr
arg	47:22	47:70	5	"makepng: component overflow (internal error)\n"
water	47:22	0:0	6	"makepng: component overflow (internal error)\n"
water	47:71	0:0	4	;
call	48:6	48:12	4	exit
arg	48:11	48:12	5	1
water	48:11	0:0	6	1
water	48:13	0:0	4	;
water	49:3	0:0	4	}

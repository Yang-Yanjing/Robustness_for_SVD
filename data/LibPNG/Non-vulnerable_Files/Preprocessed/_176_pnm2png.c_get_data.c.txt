func	2:0	23:0	0	png_uint_32	get_data
params	2:21	0:0	1	
param	2:22	2:36	2	FILE *	pnm_file
param	2:38	2:47	2	int	depth
stmnts	4:2	22:18	1	
water	4:2	0:0	2	static
water	4:9	0:0	2	int
water	4:13	0:0	2	bits_left
op	4:23	0:0	2	=
water	4:25	0:0	2	0
water	4:26	0:0	2	;
water	5:2	0:0	2	static
water	5:9	0:0	2	int
water	5:13	0:0	2	old_value
op	5:23	0:0	2	=
water	5:25	0:0	2	0
water	5:26	0:0	2	;
water	6:2	0:0	2	static
water	6:9	0:0	2	int
water	6:13	0:0	2	mask
op	6:18	0:0	2	=
water	6:20	0:0	2	0
water	6:21	0:0	2	;
decl	7:2	7:7	2	int	i
decl	8:2	8:23	2	png_uint_32	ret_value
if	9:2	11:31	2	(mask == 0)
cond	9:6	9:14	3	mask == 0
water	9:6	0:0	4	mask
op	9:11	0:0	4	==
water	9:14	0:0	4	0
stmts	10:4	11:31	3	
for	10:4	11:31	4	(i = 0 ;i < depth;i ++)
forinit	10:9	10:14	5	i = 0 ;
water	10:9	0:0	6	i
op	10:11	0:0	6	=
water	10:13	0:0	6	0
water	10:14	0:0	6	;
cond	10:16	10:20	5	i < depth
water	10:16	0:0	6	i
op	10:18	0:0	6	<
water	10:20	0:0	6	depth
forexpr	10:27	10:28	5	i ++
water	10:27	0:0	6	i
op	10:28	0:0	6	++
stmts	11:6	11:31	5	
water	11:6	0:0	6	mask
op	11:11	0:0	6	=
water	11:13	0:0	6	(
water	11:14	0:0	6	mask
op	11:19	0:0	6	>>
water	11:22	0:0	6	1
water	11:23	0:0	6	)
op	11:25	0:0	6	|
water	11:27	0:0	6	0
water	11:28	0:0	6	x80
water	11:31	0:0	6	;
if	12:2	16:2	2	(bits_left <= 0)
cond	12:6	12:19	3	bits_left <= 0
water	12:6	0:0	4	bits_left
op	12:16	0:0	4	<=
water	12:19	0:0	4	0
stmts	13:2	16:2	3	
water	13:2	0:0	4	{
water	14:4	0:0	4	old_value
op	14:14	0:0	4	=
call	14:16	14:31	4	fgetc
arg	14:23	14:31	5	pnm_file
water	14:23	0:0	6	pnm_file
water	14:32	0:0	4	;
water	15:4	0:0	4	bits_left
op	15:14	0:0	4	=
water	15:16	0:0	4	8
water	15:17	0:0	4	;
water	16:2	0:0	4	}
water	17:2	0:0	2	ret_value
op	17:12	0:0	2	=
water	17:14	0:0	2	old_value
op	17:24	0:0	2	&
water	17:26	0:0	2	mask
water	17:30	0:0	2	;
for	18:2	19:49	2	(i = 1 ;i < ( 8 / depth );i ++)
forinit	18:7	18:12	3	i = 1 ;
water	18:7	0:0	4	i
op	18:9	0:0	4	=
water	18:11	0:0	4	1
water	18:12	0:0	4	;
cond	18:14	18:28	3	i < ( 8 / depth )
water	18:14	0:0	4	i
op	18:16	0:0	4	<
water	18:18	0:0	4	(
water	18:19	0:0	4	8
op	18:21	0:0	4	/
water	18:23	0:0	4	depth
water	18:28	0:0	4	)
forexpr	18:31	18:32	3	i ++
water	18:31	0:0	4	i
op	18:32	0:0	4	++
stmts	19:4	19:49	3	
water	19:4	0:0	4	ret_value
op	19:14	0:0	4	=
water	19:16	0:0	4	ret_value
op	19:26	0:0	4	||
water	19:29	0:0	4	(
water	19:30	0:0	4	ret_value
op	19:40	0:0	4	>>
water	19:43	0:0	4	depth
water	19:48	0:0	4	)
water	19:49	0:0	4	;
water	20:2	0:0	2	old_value
op	20:12	0:0	2	=
water	20:14	0:0	2	(
water	20:15	0:0	2	old_value
op	20:25	0:0	2	<<
water	20:28	0:0	2	depth
water	20:33	0:0	2	)
op	20:35	0:0	2	&
water	20:37	0:0	2	0
water	20:38	0:0	2	xFF
water	20:41	0:0	2	;
water	21:2	0:0	2	bits_left
op	21:12	0:0	2	-=
water	21:15	0:0	2	depth
water	21:20	0:0	2	;
return	22:2	22:18	2	ret_value
water	22:9	0:0	3	ret_value

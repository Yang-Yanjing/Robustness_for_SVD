func	1:0	36:0	0	static void	perform_transform_test
params	2:22	0:0	1	
param	2:23	2:39	2	png_modifier *	pm
stmnts	0:0	35:3	1	
decl	4:3	4:27	2	png_byte	colour_type
op	4:24	0:0	2	=
water	4:26	0:0	2	0
decl	5:3	5:25	2	png_byte	bit_depth
op	5:22	0:0	2	=
water	5:24	0:0	2	0
decl	6:3	6:34	2	unsigned int	palette_number
op	6:31	0:0	2	=
water	6:33	0:0	2	0
while	7:3	35:3	2	(next_format (& colour_type ,& bit_depth ,& palette_number ,0 ))
cond	7:10	7:66	3	next_format (& colour_type ,& bit_depth ,& palette_number ,0 )
call	7:10	7:66	4	next_format
arg	7:22	7:34	5	&colour_type
op	7:22	0:0	6	&
water	7:23	0:0	6	colour_type
arg	7:36	7:46	5	&bit_depth
op	7:36	0:0	6	&
water	7:37	0:0	6	bit_depth
arg	7:48	7:63	5	&palette_number
op	7:48	0:0	6	&
water	7:49	0:0	6	palette_number
arg	7:65	7:66	5	0
water	7:65	0:0	6	0
stmts	8:3	35:3	3	
water	8:3	0:0	4	{
decl	9:6	9:29	4	png_uint_32	counter
op	9:26	0:0	4	=
water	9:28	0:0	4	0
decl	10:6	10:21	4	size_t	base_pos
decl	11:6	11:19	4	char	name[64]
water	12:6	0:0	4	base_pos
op	12:15	0:0	4	=
call	12:17	12:59	4	safecat
arg	12:25	12:29	5	name
water	12:25	0:0	6	name
arg	12:31	12:42	5	sizeofname
op	12:31	0:0	6	sizeof
water	12:38	0:0	6	name
arg	12:44	12:45	5	0
water	12:44	0:0	6	0
arg	12:47	12:59	5	"transform:"
water	12:47	0:0	6	"transform:"
water	12:60	0:0	4	;
for	13:6	34:6	4	(;;)
forinit	13:11	13:11	5	;
water	13:11	0:0	6	;
cond	0:0	0:0	5	
forexpr	0:0	0:0	5	
stmts	14:6	34:6	5	
water	14:6	0:0	6	{
decl	15:9	15:30	6	size_t	pos
op	15:20	0:0	6	=
water	15:22	0:0	6	base_pos
water	16:9	0:0	6	PNG_CONST
water	16:19	0:0	6	image_transform
op	16:35	0:0	6	*
water	16:36	0:0	6	list
op	16:41	0:0	6	=
water	16:43	0:0	6	0
water	16:44	0:0	6	;
water	20:9	0:0	6	counter
op	20:17	0:0	6	=
call	20:19	21:59	6	image_transform_add
arg	20:39	20:44	7	&list
op	20:39	0:0	8	&
water	20:40	0:0	8	list
arg	20:46	20:47	7	1
water	20:46	0:0	8	1
arg	20:49	20:56	7	counter
water	20:49	0:0	8	counter
arg	21:12	21:16	7	name
water	21:12	0:0	8	name
arg	21:18	21:29	7	sizeofname
op	21:18	0:0	8	sizeof
water	21:25	0:0	8	name
arg	21:31	21:35	7	&pos
op	21:31	0:0	8	&
water	21:32	0:0	8	pos
arg	21:37	21:48	7	colour_type
water	21:37	0:0	8	colour_type
arg	21:50	21:59	7	bit_depth
water	21:50	0:0	8	bit_depth
water	21:60	0:0	6	;
if	22:9	23:17	6	(counter == 0)
cond	22:13	22:24	7	counter == 0
water	22:13	0:0	8	counter
op	22:21	0:0	8	==
water	22:24	0:0	8	0
stmts	23:12	23:17	7	
break	23:12	23:17	8	
do	25:9	32:9	6	(pm -> repeat)
cond	33:16	33:20	7	pm -> repeat
water	33:16	0:0	8	pm
op	33:18	0:0	8	->
water	33:20	0:0	8	repeat
stmts	26:9	32:9	7	
water	26:9	0:0	8	{
water	27:12	0:0	8	pm
op	27:14	0:0	8	->
water	27:16	0:0	8	repeat
op	27:23	0:0	8	=
water	27:25	0:0	8	0
water	27:26	0:0	8	;
call	28:12	29:55	8	transform_test
arg	28:27	28:29	9	pm
water	28:27	0:0	10	pm
arg	28:31	29:43	9	FILEID(colour_type,bit_depth,palette_number,pm->interlace_type,0,0,0)
call	28:31	29:42	10	FILEID
arg	28:38	28:49	11	colour_type
water	28:38	0:0	12	colour_type
arg	28:51	28:60	11	bit_depth
water	28:51	0:0	12	bit_depth
arg	28:62	28:76	11	palette_number
water	28:62	0:0	12	palette_number
arg	29:15	29:33	11	pm->interlace_type
water	29:15	0:0	12	pm
op	29:17	0:0	12	->
water	29:19	0:0	12	interlace_type
arg	29:35	29:36	11	0
water	29:35	0:0	12	0
arg	29:38	29:39	11	0
water	29:38	0:0	12	0
arg	29:41	29:42	11	0
water	29:41	0:0	12	0
arg	29:45	29:49	9	list
water	29:45	0:0	10	list
arg	29:51	29:55	9	name
water	29:51	0:0	10	name
water	29:56	0:0	8	;
if	30:12	31:21	8	(fail (pm ))
cond	30:16	30:23	9	fail (pm )
call	30:16	30:23	10	fail
arg	30:21	30:23	11	pm
water	30:21	0:0	12	pm
stmts	31:15	31:21	9	
return	31:15	31:21	10	
water	32:9	0:0	8	}
water	33:27	0:0	6	;
water	34:6	0:0	6	}
water	35:3	0:0	4	}

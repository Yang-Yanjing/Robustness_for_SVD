func	2:0	41:0	0	int	main
params	2:8	0:0	1	
param	2:9	2:17	2	int	argc
param	2:19	2:30	2	char * *	argv
stmnts	0:0	40:11	1	
decl	4:3	4:20	2	int	count
op	4:13	0:0	2	=
water	4:15	0:0	2	COUNT
while	5:3	21:3	2	(argc > 1)
cond	5:10	5:17	3	argc > 1
water	5:10	0:0	4	argc
op	5:15	0:0	4	>
water	5:17	0:0	4	1
stmts	6:3	21:3	3	
water	6:3	0:0	4	{
if	7:6	12:6	4	(argc > 2 &&strcmp (argv [ 1 ] ,"-c" ) == 0)
cond	7:10	7:47	5	argc > 2 &&strcmp (argv [ 1 ] ,"-c" ) == 0
water	7:10	0:0	6	argc
op	7:15	0:0	6	>
water	7:17	0:0	6	2
op	7:19	0:0	6	&&
call	7:22	7:42	6	strcmp
arg	7:29	7:36	7	argv[1]
water	7:29	0:0	8	argv
op	7:33	0:0	8	[
water	7:34	0:0	8	1
op	7:35	0:0	8	]
arg	7:38	7:42	7	"-c"
water	7:38	0:0	8	"-c"
op	7:44	0:0	6	==
water	7:47	0:0	6	0
stmts	8:6	12:6	5	
water	8:6	0:0	6	{
water	9:9	0:0	6	count
op	9:15	0:0	6	=
call	9:17	9:29	6	atoi
arg	9:22	9:29	7	argv[2]
water	9:22	0:0	8	argv
op	9:26	0:0	8	[
water	9:27	0:0	8	2
op	9:28	0:0	8	]
water	9:30	0:0	6	;
water	10:9	0:0	6	argc
op	10:14	0:0	6	-=
water	10:17	0:0	6	2
water	10:18	0:0	6	;
water	11:9	0:0	6	argv
op	11:14	0:0	6	+=
water	11:17	0:0	6	2
water	11:18	0:0	6	;
water	12:6	0:0	6	}
else	13:6	18:6	4
stmts	13:11	18:6	5	
if	13:11	18:6	6	(strcmp (argv [ 1 ] ,"-v" ) == 0)
cond	13:15	13:40	7	strcmp (argv [ 1 ] ,"-v" ) == 0
call	13:15	13:35	8	strcmp
arg	13:22	13:29	9	argv[1]
water	13:22	0:0	10	argv
op	13:26	0:0	10	[
water	13:27	0:0	10	1
op	13:28	0:0	10	]
arg	13:31	13:35	9	"-v"
water	13:31	0:0	10	"-v"
op	13:37	0:0	8	==
water	13:40	0:0	8	0
stmts	14:6	18:6	7	
water	14:6	0:0	8	{
op	15:9	0:0	8	++
water	15:11	0:0	8	verbose
water	15:18	0:0	8	;
op	16:9	0:0	8	--
water	16:11	0:0	8	argc
water	16:15	0:0	8	;
op	17:9	0:0	8	++
water	17:11	0:0	8	argv
water	17:15	0:0	8	;
water	18:6	0:0	8	}
else	19:6	20:14	4
stmts	20:9	20:14	5	
break	20:9	20:14	6	
water	21:3	0:0	4	}
if	22:3	32:3	2	(count > 0 && argc > 1)
cond	22:7	22:27	3	count > 0 && argc > 1
water	22:7	0:0	4	count
op	22:13	0:0	4	>
water	22:15	0:0	4	0
op	22:17	0:0	4	&&
water	22:20	0:0	4	argc
op	22:25	0:0	4	>
water	22:27	0:0	4	1
stmts	23:3	32:3	3	
water	23:3	0:0	4	{
if	24:6	25:61	4	(strcmp (argv [ 1 ] ,"ascii" ) == 0)
cond	24:10	24:38	5	strcmp (argv [ 1 ] ,"ascii" ) == 0
call	24:10	24:33	6	strcmp
arg	24:17	24:24	7	argv[1]
water	24:17	0:0	8	argv
op	24:21	0:0	8	[
water	24:22	0:0	8	1
op	24:23	0:0	8	]
arg	24:26	24:33	7	"ascii"
water	24:26	0:0	8	"ascii"
op	24:35	0:0	6	==
water	24:38	0:0	6	0
stmts	25:9	25:61	5	
return	25:9	25:61	6	validation_ascii_to_fp(count,argc-1,argv+1)
call	25:16	25:60	7	validation_ascii_to_fp
arg	25:39	25:44	8	count
water	25:39	0:0	9	count
arg	25:46	25:52	8	argc-1
water	25:46	0:0	9	argc
op	25:50	0:0	9	-
water	25:51	0:0	9	1
arg	25:54	25:60	8	argv+1
water	25:54	0:0	9	argv
op	25:58	0:0	9	+
water	25:59	0:0	9	1
else	26:6	27:57	4
stmts	26:11	27:57	5	
if	26:11	27:57	6	(strcmp (argv [ 1 ] ,"checkfp" ) == 0)
cond	26:15	26:45	7	strcmp (argv [ 1 ] ,"checkfp" ) == 0
call	26:15	26:40	8	strcmp
arg	26:22	26:29	9	argv[1]
water	26:22	0:0	10	argv
op	26:26	0:0	10	[
water	26:27	0:0	10	1
op	26:28	0:0	10	]
arg	26:31	26:40	9	"checkfp"
water	26:31	0:0	10	"checkfp"
op	26:42	0:0	8	==
water	26:45	0:0	8	0
stmts	27:9	27:57	7	
return	27:9	27:57	8	validation_checkfp(count,argc-1,argv+1)
call	27:16	27:56	9	validation_checkfp
arg	27:35	27:40	10	count
water	27:35	0:0	11	count
arg	27:42	27:48	10	argc-1
water	27:42	0:0	11	argc
op	27:46	0:0	11	-
water	27:47	0:0	11	1
arg	27:50	27:56	10	argv+1
water	27:50	0:0	11	argv
op	27:54	0:0	11	+
water	27:55	0:0	11	1
else	28:6	29:56	4
stmts	28:11	29:56	5	
if	28:11	29:56	6	(strcmp (argv [ 1 ] ,"muldiv" ) == 0)
cond	28:15	28:44	7	strcmp (argv [ 1 ] ,"muldiv" ) == 0
call	28:15	28:39	8	strcmp
arg	28:22	28:29	9	argv[1]
water	28:22	0:0	10	argv
op	28:26	0:0	10	[
water	28:27	0:0	10	1
op	28:28	0:0	10	]
arg	28:31	28:39	9	"muldiv"
water	28:31	0:0	10	"muldiv"
op	28:41	0:0	8	==
water	28:44	0:0	8	0
stmts	29:9	29:56	7	
return	29:9	29:56	8	validation_muldiv(count,argc-1,argv+1)
call	29:16	29:55	9	validation_muldiv
arg	29:34	29:39	10	count
water	29:34	0:0	11	count
arg	29:41	29:47	10	argc-1
water	29:41	0:0	11	argc
op	29:45	0:0	11	-
water	29:46	0:0	11	1
arg	29:49	29:55	10	argv+1
water	29:49	0:0	11	argv
op	29:53	0:0	11	+
water	29:54	0:0	11	1
else	30:6	31:48	4
stmts	30:11	31:48	5	
if	30:11	31:48	6	(strcmp (argv [ 1 ] ,"gamma" ) == 0)
cond	30:15	30:43	7	strcmp (argv [ 1 ] ,"gamma" ) == 0
call	30:15	30:38	8	strcmp
arg	30:22	30:29	9	argv[1]
water	30:22	0:0	10	argv
op	30:26	0:0	10	[
water	30:27	0:0	10	1
op	30:28	0:0	10	]
arg	30:31	30:38	9	"gamma"
water	30:31	0:0	10	"gamma"
op	30:40	0:0	8	==
water	30:43	0:0	8	0
stmts	31:9	31:48	7	
return	31:9	31:48	8	validation_gamma(argc-1,argv+1)
call	31:16	31:47	9	validation_gamma
arg	31:33	31:39	10	argc-1
water	31:33	0:0	11	argc
op	31:37	0:0	11	-
water	31:38	0:0	11	1
arg	31:41	31:47	10	argv+1
water	31:41	0:0	11	argv
op	31:45	0:0	11	+
water	31:46	0:0	11	1
water	32:3	0:0	4	}
call	34:3	35:67	2	fprintf
arg	34:11	34:17	3	stderr
water	34:11	0:0	4	stderr
arg	35:6	35:67	3	"usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\n"
water	35:6	0:0	4	"usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\n"
water	35:68	0:0	2	;
call	36:3	36:72	2	fprintf
arg	36:11	36:17	3	stderr
water	36:11	0:0	4	stderr
arg	36:19	36:72	3	" arguments: ascii [-a (all results)] [-e error%%]\n"
water	36:19	0:0	4	" arguments: ascii [-a (all results)] [-e error%%]\n"
water	36:73	0:0	2	;
call	37:3	37:64	2	fprintf
arg	37:11	37:17	3	stderr
water	37:11	0:0	4	stderr
arg	37:19	37:64	3	"            checkfp [-l max-number-chars]\n"
water	37:19	0:0	4	"            checkfp [-l max-number-chars]\n"
water	37:65	0:0	2	;
call	38:3	38:41	2	fprintf
arg	38:11	38:17	3	stderr
water	38:11	0:0	4	stderr
arg	38:19	38:41	3	"            muldiv\n"
water	38:19	0:0	4	"            muldiv\n"
water	38:42	0:0	2	;
call	39:3	39:76	2	fprintf
arg	39:11	39:17	3	stderr
water	39:11	0:0	4	stderr
arg	39:19	39:76	3	"            gamma -s (silent) -g (only gamma; no log)\n"
water	39:19	0:0	4	"            gamma -s (silent) -g (only gamma; no log)\n"
water	39:77	0:0	2	;
return	40:3	40:11	2	1
water	40:10	0:0	3	1

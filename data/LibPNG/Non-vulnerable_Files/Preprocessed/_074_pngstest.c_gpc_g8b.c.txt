func	1:0	21:0	0	static void	gpc_g8b
params	2:7	0:0	1	
param	2:8	2:18	2	Pixel *	out
param	2:20	2:35	2	const Pixel *	in
param	2:37	2:59	2	const Background *	back
stmnts	4:3	20:15	1	
if	4:3	5:41	2	(in -> a <= 0)
cond	4:7	4:16	3	in -> a <= 0
water	4:7	0:0	4	in
op	4:9	0:0	4	->
water	4:11	0:0	4	a
op	4:13	0:0	4	<=
water	4:16	0:0	4	0
stmts	5:6	5:41	3	
water	5:6	0:0	4	out
op	5:9	0:0	4	->
water	5:11	0:0	4	r
op	5:13	0:0	4	=
water	5:15	0:0	4	out
op	5:18	0:0	4	->
water	5:20	0:0	4	g
op	5:22	0:0	4	=
water	5:24	0:0	4	out
op	5:27	0:0	4	->
water	5:29	0:0	4	b
op	5:31	0:0	4	=
water	5:33	0:0	4	back
op	5:37	0:0	4	->
water	5:39	0:0	4	ig
water	5:41	0:0	4	;
else	6:3	13:3	2
stmts	6:8	13:3	3	
if	6:8	13:3	4	(in -> a >= 255)
cond	6:12	6:21	5	in -> a >= 255
water	6:12	0:0	6	in
op	6:14	0:0	6	->
water	6:16	0:0	6	a
op	6:18	0:0	6	>=
water	6:21	0:0	6	255
stmts	7:3	13:3	5	
water	7:3	0:0	6	{
if	8:6	9:41	6	(in -> r == in -> g && in -> g == in -> b)
cond	8:10	8:41	7	in -> r == in -> g && in -> g == in -> b
water	8:10	0:0	8	in
op	8:12	0:0	8	->
water	8:14	0:0	8	r
op	8:16	0:0	8	==
water	8:19	0:0	8	in
op	8:21	0:0	8	->
water	8:23	0:0	8	g
op	8:25	0:0	8	&&
water	8:28	0:0	8	in
op	8:30	0:0	8	->
water	8:32	0:0	8	g
op	8:34	0:0	8	==
water	8:37	0:0	8	in
op	8:39	0:0	8	->
water	8:41	0:0	8	b
stmts	9:9	9:41	7	
water	9:9	0:0	8	out
op	9:12	0:0	8	->
water	9:14	0:0	8	r
op	9:16	0:0	8	=
water	9:18	0:0	8	out
op	9:21	0:0	8	->
water	9:23	0:0	8	g
op	9:25	0:0	8	=
water	9:27	0:0	8	out
op	9:30	0:0	8	->
water	9:32	0:0	8	b
op	9:34	0:0	8	=
water	9:36	0:0	8	in
op	9:38	0:0	8	->
water	9:40	0:0	8	g
water	9:41	0:0	8	;
else	10:6	12:66	6
stmts	11:9	12:66	7	
water	11:9	0:0	8	out
op	11:12	0:0	8	->
water	11:14	0:0	8	r
op	11:16	0:0	8	=
water	11:18	0:0	8	out
op	11:21	0:0	8	->
water	11:23	0:0	8	g
op	11:25	0:0	8	=
water	11:27	0:0	8	out
op	11:30	0:0	8	->
water	11:32	0:0	8	b
op	11:34	0:0	8	=
call	11:36	12:65	8	sRGB
arg	11:41	12:65	9	YfromRGB(sRGB_to_d[in->r],sRGB_to_d[in->g],sRGB_to_d[in->b])
call	11:41	12:64	10	YfromRGB
arg	12:12	12:28	11	sRGB_to_d[in->r]
water	12:12	0:0	12	sRGB_to_d
op	12:21	0:0	12	[
water	12:22	0:0	12	in
op	12:24	0:0	12	->
water	12:26	0:0	12	r
op	12:27	0:0	12	]
arg	12:30	12:46	11	sRGB_to_d[in->g]
water	12:30	0:0	12	sRGB_to_d
op	12:39	0:0	12	[
water	12:40	0:0	12	in
op	12:42	0:0	12	->
water	12:44	0:0	12	g
op	12:45	0:0	12	]
arg	12:48	12:64	11	sRGB_to_d[in->b]
water	12:48	0:0	12	sRGB_to_d
op	12:57	0:0	12	[
water	12:58	0:0	12	in
op	12:60	0:0	12	->
water	12:62	0:0	12	b
op	12:63	0:0	12	]
water	12:66	0:0	8	;
water	13:3	0:0	6	}
else	14:3	19:3	2
stmts	15:3	19:3	3	
water	15:3	0:0	4	{
decl	16:6	16:27	4	double	a
op	16:15	0:0	4	=
water	16:17	0:0	4	in
op	16:19	0:0	4	->
water	16:21	0:0	4	a
op	16:22	0:0	4	/
water	16:23	0:0	4	255
op	16:26	0:0	4	.
water	17:6	0:0	4	out
op	17:9	0:0	4	->
water	17:11	0:0	4	r
op	17:13	0:0	4	=
water	17:15	0:0	4	out
op	17:18	0:0	4	->
water	17:20	0:0	4	g
op	17:22	0:0	4	=
water	17:24	0:0	4	out
op	17:27	0:0	4	->
water	17:29	0:0	4	b
op	17:31	0:0	4	=
call	17:33	18:63	4	sRGB
arg	17:38	18:63	5	a*YfromRGB(sRGB_to_d[in->r],sRGB_to_d[in->g],sRGB_to_d[in->b])+back->dg*(1-a)
water	17:38	0:0	6	a
call	17:40	18:43	6	*YfromRGB
arg	17:51	17:67	7	sRGB_to_d[in->r]
water	17:51	0:0	8	sRGB_to_d
op	17:60	0:0	8	[
water	17:61	0:0	8	in
op	17:63	0:0	8	->
water	17:65	0:0	8	r
op	17:66	0:0	8	]
arg	18:9	18:25	7	sRGB_to_d[in->g]
water	18:9	0:0	8	sRGB_to_d
op	18:18	0:0	8	[
water	18:19	0:0	8	in
op	18:21	0:0	8	->
water	18:23	0:0	8	g
op	18:24	0:0	8	]
arg	18:27	18:43	7	sRGB_to_d[in->b]
water	18:27	0:0	8	sRGB_to_d
op	18:36	0:0	8	[
water	18:37	0:0	8	in
op	18:39	0:0	8	->
water	18:41	0:0	8	b
op	18:42	0:0	8	]
op	18:45	0:0	6	+
water	18:47	0:0	6	back
op	18:51	0:0	6	->
water	18:53	0:0	6	dg
op	18:56	0:0	6	*
water	18:58	0:0	6	(
water	18:59	0:0	6	1
op	18:60	0:0	6	-
water	18:61	0:0	6	a
water	18:62	0:0	6	)
water	18:64	0:0	4	;
water	19:3	0:0	4	}
water	20:3	0:0	2	out
op	20:6	0:0	2	->
water	20:8	0:0	2	a
op	20:10	0:0	2	=
water	20:12	0:0	2	255
water	20:15	0:0	2	;

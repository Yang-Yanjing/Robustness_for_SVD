func	2:0	19:0	0	static int	check_some_characters
params	2:32	0:0	1	
param	2:33	2:52	2	checkfp_command *	co
param	2:54	2:71	2	checkfp_control	c
param	3:3	3:20	2	const char *	tests
stmnts	0:0	18:11	1	
decl	5:3	5:8	2	int	i
op	6:3	0:0	2	--
water	6:5	0:0	2	(
water	6:6	0:0	2	c
op	6:7	0:0	2	.
water	6:8	0:0	2	limit
water	6:13	0:0	2	)
water	6:14	0:0	2	;
if	7:3	17:3	2	(c . cnumber + 4 < sizeof co -> number && c . limit >= 0)
cond	7:7	7:53	3	c . cnumber + 4 < sizeof co -> number && c . limit >= 0
water	7:7	0:0	4	c
op	7:8	0:0	4	.
water	7:9	0:0	4	cnumber
op	7:16	0:0	4	+
water	7:17	0:0	4	4
op	7:19	0:0	4	<
op	7:21	0:0	4	sizeof
water	7:28	0:0	4	co
op	7:30	0:0	4	->
water	7:32	0:0	4	number
op	7:39	0:0	4	&&
water	7:42	0:0	4	c
op	7:43	0:0	4	.
water	7:44	0:0	4	limit
op	7:50	0:0	4	>=
water	7:53	0:0	4	0
stmts	8:3	17:3	3	
water	8:3	0:0	4	{
if	9:6	13:6	4	(c . limit > 0)
cond	9:10	9:20	5	c . limit > 0
water	9:10	0:0	6	c
op	9:11	0:0	6	.
water	9:12	0:0	6	limit
op	9:18	0:0	6	>
water	9:20	0:0	6	0
stmts	9:23	13:6	5	
for	9:23	13:6	6	(i = 0 ;tests [ i ];++ i)
forinit	9:28	9:31	7	i = 0 ;
water	9:28	0:0	8	i
op	9:29	0:0	8	=
water	9:30	0:0	8	0
water	9:31	0:0	8	;
cond	9:33	9:40	7	tests [ i ]
water	9:33	0:0	8	tests
op	9:38	0:0	8	[
water	9:39	0:0	8	i
op	9:40	0:0	8	]
forexpr	9:43	9:45	7	++ i
op	9:43	0:0	8	++
water	9:45	0:0	8	i
stmts	10:6	13:6	7	
water	10:6	0:0	8	{
if	11:9	12:23	8	(!check_one_character (co ,c ,tests [ i ] ))
cond	11:13	11:49	9	!check_one_character (co ,c ,tests [ i ] )
op	11:13	0:0	10	!
call	11:14	11:49	10	check_one_character
arg	11:34	11:36	11	co
water	11:34	0:0	12	co
arg	11:38	11:39	11	c
water	11:38	0:0	12	c
arg	11:41	11:49	11	tests[i]
water	11:41	0:0	12	tests
op	11:46	0:0	12	[
water	11:47	0:0	12	i
op	11:48	0:0	12	]
stmts	12:15	12:23	9	
return	12:15	12:23	10	0
water	12:22	0:0	11	0
water	13:6	0:0	8	}
else	15:6	16:43	4
stmts	16:9	16:43	5	
return	16:9	16:43	6	check_all_characters(co,c)
call	16:16	16:42	7	check_all_characters
arg	16:37	16:39	8	co
water	16:37	0:0	9	co
arg	16:41	16:42	8	c
water	16:41	0:0	9	c
water	17:3	0:0	4	}
return	18:3	18:11	2	1
water	18:10	0:0	3	1

func	1:0	28:0	0	static void	store_memory_free
params	2:17	0:0	1	
param	2:18	2:38	2	png_const_structp	pp
param	2:40	2:56	2	store_pool *	pool
param	2:58	2:78	2	store_memory *	memory
stmnts	8:3	27:3	1	
if	8:3	9:66	2	(memory -> pool != pool)
cond	8:7	8:23	3	memory -> pool != pool
water	8:7	0:0	4	memory
op	8:13	0:0	4	->
water	8:15	0:0	4	pool
op	8:20	0:0	4	!=
water	8:23	0:0	4	pool
stmts	9:6	9:66	3	
call	9:6	9:65	4	store_pool_error
arg	9:23	9:34	5	pool->store
water	9:23	0:0	6	pool
op	9:27	0:0	6	->
water	9:29	0:0	6	store
arg	9:36	9:38	5	pp
water	9:36	0:0	6	pp
arg	9:40	9:65	5	"memory corrupted (pool)"
water	9:40	0:0	6	"memory corrupted (pool)"
water	9:66	0:0	4	;
else	10:3	11:67	2
stmts	10:8	11:67	3	
if	10:8	11:67	4	(memcmp (memory -> mark ,pool -> mark ,sizeof memory -> mark ) != 0)
cond	10:12	10:69	5	memcmp (memory -> mark ,pool -> mark ,sizeof memory -> mark ) != 0
call	10:12	10:64	6	memcmp
arg	10:19	10:31	7	memory->mark
water	10:19	0:0	8	memory
op	10:25	0:0	8	->
water	10:27	0:0	8	mark
arg	10:33	10:43	7	pool->mark
water	10:33	0:0	8	pool
op	10:37	0:0	8	->
water	10:39	0:0	8	mark
arg	10:45	10:64	7	sizeofmemory->mark
op	10:45	0:0	8	sizeof
water	10:52	0:0	8	memory
op	10:58	0:0	8	->
water	10:60	0:0	8	mark
op	10:66	0:0	6	!=
water	10:69	0:0	6	0
stmts	11:6	11:67	5	
call	11:6	11:66	6	store_pool_error
arg	11:23	11:34	7	pool->store
water	11:23	0:0	8	pool
op	11:27	0:0	8	->
water	11:29	0:0	8	store
arg	11:36	11:38	7	pp
water	11:36	0:0	8	pp
arg	11:40	11:66	7	"memory corrupted (start)"
water	11:40	0:0	8	"memory corrupted (start)"
water	11:67	0:0	6	;
else	13:3	27:3	2
stmts	14:3	27:3	3	
water	14:3	0:0	4	{
decl	15:6	15:40	4	png_alloc_size_t	cb
op	15:26	0:0	4	=
water	15:28	0:0	4	memory
op	15:34	0:0	4	->
water	15:36	0:0	4	size
if	16:6	17:69	4	(cb > pool -> max)
cond	16:10	16:21	5	cb > pool -> max
water	16:10	0:0	6	cb
op	16:13	0:0	6	>
water	16:15	0:0	6	pool
op	16:19	0:0	6	->
water	16:21	0:0	6	max
stmts	17:9	17:69	5	
call	17:9	17:68	6	store_pool_error
arg	17:26	17:37	7	pool->store
water	17:26	0:0	8	pool
op	17:30	0:0	8	->
water	17:32	0:0	8	store
arg	17:39	17:41	7	pp
water	17:39	0:0	8	pp
arg	17:43	17:68	7	"memory corrupted (size)"
water	17:43	0:0	8	"memory corrupted (size)"
water	17:69	0:0	6	;
else	18:6	20:68	4
stmts	18:11	20:68	5	
if	18:11	20:68	6	(memcmp (( png_bytep ) (memory + 1 ) + cb ,pool -> mark ,sizeof pool -> mark ) != 0)
cond	18:15	19:12	7	memcmp (( png_bytep ) (memory + 1 ) + cb ,pool -> mark ,sizeof pool -> mark ) != 0
call	18:15	18:77	8	memcmp
arg	18:22	18:46	9	(png_bytep)(memory+1)+cb
call	18:22	18:42	10	(png_bytep)
arg	18:34	18:42	11	memory+1
water	18:34	0:0	12	memory
op	18:40	0:0	12	+
water	18:41	0:0	12	1
op	18:43	0:0	10	+
water	18:44	0:0	10	cb
arg	18:48	18:58	9	pool->mark
water	18:48	0:0	10	pool
op	18:52	0:0	10	->
water	18:54	0:0	10	mark
arg	18:60	18:77	9	sizeofpool->mark
op	18:60	0:0	10	sizeof
water	18:67	0:0	10	pool
op	18:71	0:0	10	->
water	18:73	0:0	10	mark
op	19:9	0:0	8	!=
water	19:12	0:0	8	0
stmts	20:9	20:68	7	
call	20:9	20:67	8	store_pool_error
arg	20:26	20:37	9	pool->store
water	20:26	0:0	10	pool
op	20:30	0:0	10	->
water	20:32	0:0	10	store
arg	20:39	20:41	9	pp
water	20:39	0:0	10	pp
arg	20:43	20:67	9	"memory corrupted (end)"
water	20:43	0:0	10	"memory corrupted (end)"
water	20:68	0:0	8	;
else	22:6	26:9	4
stmts	23:9	26:9	5	
water	23:9	0:0	6	{
water	24:9	0:0	6	pool
op	24:13	0:0	6	->
water	24:15	0:0	6	current
op	24:23	0:0	6	-=
water	24:26	0:0	6	cb
water	24:28	0:0	6	;
call	25:9	25:20	6	free
arg	25:14	25:20	7	memory
water	25:14	0:0	8	memory
water	25:21	0:0	6	;
water	26:9	0:0	6	}
water	27:3	0:0	4	}

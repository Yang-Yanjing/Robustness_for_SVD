func	1:0	25:0	0	static void	perform_gamma_composition_tests
params	2:31	0:0	1	
param	2:32	2:48	2	png_modifier *	pm
param	2:50	2:67	2	int	do_background
param	3:3	3:16	2	int	expand_16
stmnts	0:0	24:3	1	
decl	5:3	5:27	2	png_byte	colour_type
op	5:24	0:0	2	=
water	5:26	0:0	2	0
decl	6:3	6:25	2	png_byte	bit_depth
op	6:22	0:0	2	=
water	6:24	0:0	2	0
decl	7:3	7:34	2	unsigned int	palette_number
op	7:31	0:0	2	=
water	7:33	0:0	2	0
while	11:3	24:3	2	(next_format (& colour_type ,& bit_depth ,& palette_number ,1 ))
cond	11:10	11:66	3	next_format (& colour_type ,& bit_depth ,& palette_number ,1 )
call	11:10	11:66	4	next_format
arg	11:22	11:34	5	&colour_type
op	11:22	0:0	6	&
water	11:23	0:0	6	colour_type
arg	11:36	11:46	5	&bit_depth
op	11:36	0:0	6	&
water	11:37	0:0	6	bit_depth
arg	11:48	11:63	5	&palette_number
op	11:48	0:0	6	&
water	11:49	0:0	6	palette_number
arg	11:65	11:66	5	1
water	11:65	0:0	6	1
stmts	12:6	24:3	3	
if	12:6	24:3	4	(( colour_type & PNG_COLOR_MASK_ALPHA ) != 0)
cond	12:10	12:50	5	( colour_type & PNG_COLOR_MASK_ALPHA ) != 0
water	12:10	0:0	6	(
water	12:11	0:0	6	colour_type
op	12:23	0:0	6	&
water	12:25	0:0	6	PNG_COLOR_MASK_ALPHA
water	12:45	0:0	6	)
op	12:47	0:0	6	!=
water	12:50	0:0	6	0
stmts	13:3	24:3	5	
water	13:3	0:0	6	{
decl	14:6	14:23	6	unsigned int	i
water	14:20	0:0	6	,
decl	14:6	14:23	6	unsigned int	j
for	16:6	23:6	6	(i = 0 ;i < pm -> ngamma_tests;++ i)
forinit	16:11	16:14	7	i = 0 ;
water	16:11	0:0	8	i
op	16:12	0:0	8	=
water	16:13	0:0	8	0
water	16:14	0:0	8	;
cond	16:16	16:22	7	i < pm -> ngamma_tests
water	16:16	0:0	8	i
op	16:17	0:0	8	<
water	16:18	0:0	8	pm
op	16:20	0:0	8	->
water	16:22	0:0	8	ngamma_tests
forexpr	16:36	16:38	7	++ i
op	16:36	0:0	8	++
water	16:38	0:0	8	i
stmts	16:41	23:6	7	
for	16:41	23:6	8	(j = 0 ;j < pm -> ngamma_tests;++ j)
forinit	16:46	16:49	9	j = 0 ;
water	16:46	0:0	10	j
op	16:47	0:0	10	=
water	16:48	0:0	10	0
water	16:49	0:0	10	;
cond	16:51	16:57	9	j < pm -> ngamma_tests
water	16:51	0:0	10	j
op	16:52	0:0	10	<
water	16:53	0:0	10	pm
op	16:55	0:0	10	->
water	16:57	0:0	10	ngamma_tests
forexpr	16:71	16:73	9	++ j
op	16:71	0:0	10	++
water	16:73	0:0	10	j
stmts	17:6	23:6	9	
water	17:6	0:0	10	{
call	18:9	20:61	10	gamma_composition_test
arg	18:32	18:34	11	pm
water	18:32	0:0	12	pm
arg	18:36	18:47	11	colour_type
water	18:36	0:0	12	colour_type
arg	18:49	18:58	11	bit_depth
water	18:49	0:0	12	bit_depth
arg	18:60	18:74	11	palette_number
water	18:60	0:0	12	palette_number
arg	19:12	19:30	11	pm->interlace_type
water	19:12	0:0	12	pm
op	19:14	0:0	12	->
water	19:16	0:0	12	interlace_type
arg	19:32	19:47	11	1/pm->gammas[i]
water	19:32	0:0	12	1
op	19:33	0:0	12	/
water	19:34	0:0	12	pm
op	19:36	0:0	12	->
water	19:38	0:0	12	gammas
op	19:44	0:0	12	[
water	19:45	0:0	12	i
op	19:46	0:0	12	]
arg	19:49	19:62	11	pm->gammas[j]
water	19:49	0:0	12	pm
op	19:51	0:0	12	->
water	19:53	0:0	12	gammas
op	19:59	0:0	12	[
water	19:60	0:0	12	j
op	19:61	0:0	12	]
arg	20:12	20:35	11	pm->use_input_precision
water	20:12	0:0	12	pm
op	20:14	0:0	12	->
water	20:16	0:0	12	use_input_precision
arg	20:37	20:50	11	do_background
water	20:37	0:0	12	do_background
arg	20:52	20:61	11	expand_16
water	20:52	0:0	12	expand_16
water	20:62	0:0	10	;
if	21:9	22:18	10	(fail (pm ))
cond	21:13	21:20	11	fail (pm )
call	21:13	21:20	12	fail
arg	21:18	21:20	13	pm
water	21:18	0:0	14	pm
stmts	22:12	22:18	11	
return	22:12	22:18	12	
water	23:6	0:0	10	}
water	24:3	0:0	6	}

func	1:0	97:0	0	static void	transform_row
params	2:13	0:0	1	
param	2:14	2:34	2	png_const_structp	pp
param	2:36	2:69	2	png_byte	buffer[TRANSFORM_ROWMAX]
param	3:3	3:23	2	png_byte	colour_type
param	3:25	3:43	2	png_byte	bit_depth
param	3:45	3:58	2	png_uint_32	y
stmnts	0:0	96:34	1	
decl	5:3	5:25	2	png_uint_32	v
op	5:17	0:0	2	=
water	5:19	0:0	2	y
op	5:21	0:0	2	<<
water	5:24	0:0	2	7
decl	6:3	6:20	2	png_uint_32	i
op	6:17	0:0	2	=
water	6:19	0:0	2	0
switch	7:3	95:3	2	(bit_size (pp ,colour_type ,bit_depth ))
cond	7:11	7:46	3	bit_size (pp ,colour_type ,bit_depth )
call	7:11	7:46	4	bit_size
arg	7:20	7:22	5	pp
water	7:20	0:0	6	pp
arg	7:24	7:35	5	colour_type
water	7:24	0:0	6	colour_type
arg	7:37	7:46	5	bit_depth
water	7:37	0:0	6	bit_depth
stmts	8:3	95:3	3	
water	8:3	0:0	4	{
label	9:6	9:12	4	case 1 :
while	10:9	10:71	4	(i < 128 / 8)
cond	10:16	10:22	5	i < 128 / 8
water	10:16	0:0	6	i
op	10:17	0:0	6	<
water	10:18	0:0	6	128
op	10:21	0:0	6	/
water	10:22	0:0	6	8
stmts	10:25	10:71	5	
water	10:25	0:0	6	buffer
op	10:31	0:0	6	[
water	10:32	0:0	6	i
op	10:33	0:0	6	]
op	10:35	0:0	6	=
call	10:37	10:56	6	(png_byte)
arg	10:48	10:56	7	v&0xff
water	10:48	0:0	8	v
op	10:50	0:0	8	&
water	10:52	0:0	8	0
water	10:53	0:0	8	xff
water	10:57	0:0	6	,
water	10:59	0:0	6	v
op	10:61	0:0	6	+=
water	10:64	0:0	6	17
water	10:66	0:0	6	,
op	10:68	0:0	6	++
water	10:70	0:0	6	i
water	10:71	0:0	6	;
return	11:9	11:15	4	
label	12:6	12:12	4	case 2 :
while	13:9	13:71	4	(i < 128 / 4)
cond	13:16	13:22	5	i < 128 / 4
water	13:16	0:0	6	i
op	13:17	0:0	6	<
water	13:18	0:0	6	128
op	13:21	0:0	6	/
water	13:22	0:0	6	4
stmts	13:25	13:71	5	
water	13:25	0:0	6	buffer
op	13:31	0:0	6	[
water	13:32	0:0	6	i
op	13:33	0:0	6	]
op	13:35	0:0	6	=
call	13:37	13:56	6	(png_byte)
arg	13:48	13:56	7	v&0xff
water	13:48	0:0	8	v
op	13:50	0:0	8	&
water	13:52	0:0	8	0
water	13:53	0:0	8	xff
water	13:57	0:0	6	,
water	13:59	0:0	6	v
op	13:61	0:0	6	+=
water	13:64	0:0	6	33
water	13:66	0:0	6	,
op	13:68	0:0	6	++
water	13:70	0:0	6	i
water	13:71	0:0	6	;
return	14:9	14:15	4	
label	15:6	15:12	4	case 4 :
while	16:9	16:71	4	(i < 128 / 2)
cond	16:16	16:22	5	i < 128 / 2
water	16:16	0:0	6	i
op	16:17	0:0	6	<
water	16:18	0:0	6	128
op	16:21	0:0	6	/
water	16:22	0:0	6	2
stmts	16:25	16:71	5	
water	16:25	0:0	6	buffer
op	16:31	0:0	6	[
water	16:32	0:0	6	i
op	16:33	0:0	6	]
op	16:35	0:0	6	=
call	16:37	16:56	6	(png_byte)
arg	16:48	16:56	7	v&0xff
water	16:48	0:0	8	v
op	16:50	0:0	8	&
water	16:52	0:0	8	0
water	16:53	0:0	8	xff
water	16:57	0:0	6	,
water	16:59	0:0	6	v
op	16:61	0:0	6	+=
water	16:64	0:0	6	65
water	16:66	0:0	6	,
op	16:68	0:0	6	++
water	16:70	0:0	6	i
water	16:71	0:0	6	;
return	17:9	17:15	4	
label	18:6	18:12	4	case 8 :
while	20:9	20:65	4	(i < 128)
cond	20:16	20:18	5	i < 128
water	20:16	0:0	6	i
op	20:17	0:0	6	<
water	20:18	0:0	6	128
stmts	20:23	20:65	5	
water	20:23	0:0	6	buffer
op	20:29	0:0	6	[
water	20:30	0:0	6	i
op	20:31	0:0	6	]
op	20:33	0:0	6	=
call	20:35	20:54	6	(png_byte)
arg	20:46	20:54	7	v&0xff
water	20:46	0:0	8	v
op	20:48	0:0	8	&
water	20:50	0:0	8	0
water	20:51	0:0	8	xff
water	20:55	0:0	6	,
op	20:57	0:0	6	++
water	20:59	0:0	6	v
water	20:60	0:0	6	,
op	20:62	0:0	6	++
water	20:64	0:0	6	i
water	20:65	0:0	6	;
return	21:9	21:15	4	
label	22:6	22:13	4	case 16 :
while	26:9	32:9	4	(i < 128)
cond	26:16	26:18	5	i < 128
water	26:16	0:0	6	i
op	26:17	0:0	6	<
water	26:18	0:0	6	128
stmts	27:9	32:9	5	
water	27:9	0:0	6	{
water	28:12	0:0	6	buffer
op	28:18	0:0	6	[
water	28:19	0:0	6	2
op	28:20	0:0	6	*
water	28:21	0:0	6	i
op	28:22	0:0	6	]
op	28:24	0:0	6	=
call	28:26	28:50	6	(png_byte)
arg	28:37	28:50	7	(v>>8)&0xff
water	28:37	0:0	8	(
water	28:38	0:0	8	v
op	28:39	0:0	8	>>
water	28:41	0:0	8	8
water	28:42	0:0	8	)
op	28:44	0:0	8	&
water	28:46	0:0	8	0
water	28:47	0:0	8	xff
water	28:51	0:0	6	;
water	29:12	0:0	6	buffer
op	29:18	0:0	6	[
water	29:19	0:0	6	2
op	29:20	0:0	6	*
water	29:21	0:0	6	i
op	29:22	0:0	6	+
water	29:23	0:0	6	1
op	29:24	0:0	6	]
op	29:26	0:0	6	=
call	29:28	29:47	6	(png_byte)
arg	29:39	29:47	7	v&0xff
water	29:39	0:0	8	v
op	29:41	0:0	8	&
water	29:43	0:0	8	0
water	29:44	0:0	8	xff
water	29:48	0:0	6	;
op	30:12	0:0	6	++
water	30:14	0:0	6	v
water	30:15	0:0	6	;
op	31:12	0:0	6	++
water	31:14	0:0	6	i
water	31:15	0:0	6	;
water	32:9	0:0	6	}
return	33:9	33:15	4	
label	34:6	34:13	4	case 24 :
while	36:9	44:9	4	(i < 128)
cond	36:16	36:18	5	i < 128
water	36:16	0:0	6	i
op	36:17	0:0	6	<
water	36:18	0:0	6	128
stmts	37:9	44:9	5	
water	37:9	0:0	6	{
water	39:12	0:0	6	buffer
op	39:18	0:0	6	[
water	39:19	0:0	6	3
op	39:20	0:0	6	*
water	39:21	0:0	6	i
op	39:22	0:0	6	+
water	39:23	0:0	6	0
op	39:24	0:0	6	]
op	39:26	0:0	6	=
call	39:28	39:54	6	(png_byte)
arg	39:39	39:54	7	(v>>8)&0xff
water	39:39	0:0	8	(
water	39:40	0:0	8	v
op	39:42	0:0	8	>>
water	39:45	0:0	8	8
water	39:46	0:0	8	)
op	39:48	0:0	8	&
water	39:50	0:0	8	0
water	39:51	0:0	8	xff
water	39:55	0:0	6	;
water	40:12	0:0	6	buffer
op	40:18	0:0	6	[
water	40:19	0:0	6	3
op	40:20	0:0	6	*
water	40:21	0:0	6	i
op	40:22	0:0	6	+
water	40:23	0:0	6	1
op	40:24	0:0	6	]
op	40:26	0:0	6	=
call	40:28	40:47	6	(png_byte)
arg	40:39	40:47	7	v&0xff
water	40:39	0:0	8	v
op	40:41	0:0	8	&
water	40:43	0:0	8	0
water	40:44	0:0	8	xff
water	40:48	0:0	6	;
water	41:12	0:0	6	buffer
op	41:18	0:0	6	[
water	41:19	0:0	6	3
op	41:20	0:0	6	*
water	41:21	0:0	6	i
op	41:22	0:0	6	+
water	41:23	0:0	6	2
op	41:24	0:0	6	]
op	41:26	0:0	6	=
call	41:28	41:60	6	(png_byte)
arg	41:39	41:60	7	((v>>8)^v)&0xff
water	41:39	0:0	8	(
water	41:40	0:0	8	(
water	41:41	0:0	8	v
op	41:43	0:0	8	>>
water	41:46	0:0	8	8
water	41:47	0:0	8	)
op	41:49	0:0	8	^
water	41:51	0:0	8	v
water	41:52	0:0	8	)
op	41:54	0:0	8	&
water	41:56	0:0	8	0
water	41:57	0:0	8	xff
water	41:61	0:0	6	;
op	42:12	0:0	6	++
water	42:14	0:0	6	v
water	42:15	0:0	6	;
op	43:12	0:0	6	++
water	43:14	0:0	6	i
water	43:15	0:0	6	;
water	44:9	0:0	6	}
return	45:9	45:15	4	
label	46:6	46:13	4	case 32 :
while	48:9	56:9	4	(i < 128)
cond	48:16	48:18	5	i < 128
water	48:16	0:0	6	i
op	48:17	0:0	6	<
water	48:18	0:0	6	128
stmts	49:9	56:9	5	
water	49:9	0:0	6	{
water	50:12	0:0	6	buffer
op	50:18	0:0	6	[
water	50:19	0:0	6	4
op	50:20	0:0	6	*
water	50:21	0:0	6	i
op	50:22	0:0	6	+
water	50:23	0:0	6	0
op	50:24	0:0	6	]
op	50:26	0:0	6	=
call	50:28	50:54	6	(png_byte)
arg	50:39	50:54	7	(v>>8)&0xff
water	50:39	0:0	8	(
water	50:40	0:0	8	v
op	50:42	0:0	8	>>
water	50:45	0:0	8	8
water	50:46	0:0	8	)
op	50:48	0:0	8	&
water	50:50	0:0	8	0
water	50:51	0:0	8	xff
water	50:55	0:0	6	;
water	51:12	0:0	6	buffer
op	51:18	0:0	6	[
water	51:19	0:0	6	4
op	51:20	0:0	6	*
water	51:21	0:0	6	i
op	51:22	0:0	6	+
water	51:23	0:0	6	1
op	51:24	0:0	6	]
op	51:26	0:0	6	=
call	51:28	51:47	6	(png_byte)
arg	51:39	51:47	7	v&0xff
water	51:39	0:0	8	v
op	51:41	0:0	8	&
water	51:43	0:0	8	0
water	51:44	0:0	8	xff
water	51:48	0:0	6	;
water	52:12	0:0	6	buffer
op	52:18	0:0	6	[
water	52:19	0:0	6	4
op	52:20	0:0	6	*
water	52:21	0:0	6	i
op	52:22	0:0	6	+
water	52:23	0:0	6	2
op	52:24	0:0	6	]
op	52:26	0:0	6	=
call	52:28	52:54	6	(png_byte)
arg	52:39	52:54	7	(v>>8)&0xff
water	52:39	0:0	8	(
water	52:40	0:0	8	v
op	52:42	0:0	8	>>
water	52:45	0:0	8	8
water	52:46	0:0	8	)
op	52:48	0:0	8	&
water	52:50	0:0	8	0
water	52:51	0:0	8	xff
water	52:55	0:0	6	;
water	53:12	0:0	6	buffer
op	53:18	0:0	6	[
water	53:19	0:0	6	4
op	53:20	0:0	6	*
water	53:21	0:0	6	i
op	53:22	0:0	6	+
water	53:23	0:0	6	3
op	53:24	0:0	6	]
op	53:26	0:0	6	=
call	53:28	53:47	6	(png_byte)
arg	53:39	53:47	7	v&0xff
water	53:39	0:0	8	v
op	53:41	0:0	8	&
water	53:43	0:0	8	0
water	53:44	0:0	8	xff
water	53:48	0:0	6	;
op	54:12	0:0	6	++
water	54:14	0:0	6	v
water	54:15	0:0	6	;
op	55:12	0:0	6	++
water	55:14	0:0	6	i
water	55:15	0:0	6	;
water	56:9	0:0	6	}
return	57:9	57:15	4	
label	58:6	58:13	4	case 48 :
while	62:9	74:9	4	(i < 128)
cond	62:16	62:18	5	i < 128
water	62:16	0:0	6	i
op	62:17	0:0	6	<
water	62:18	0:0	6	128
stmts	63:9	74:9	5	
water	63:9	0:0	6	{
decl	64:12	64:31	6	png_uint_32	t
op	64:26	0:0	6	=
water	64:28	0:0	6	v
op	64:29	0:0	6	++
water	65:12	0:0	6	buffer
op	65:18	0:0	6	[
water	65:19	0:0	6	6
op	65:20	0:0	6	*
water	65:21	0:0	6	i
op	65:22	0:0	6	+
water	65:23	0:0	6	0
op	65:24	0:0	6	]
op	65:26	0:0	6	=
call	65:28	65:54	6	(png_byte)
arg	65:39	65:54	7	(t>>8)&0xff
water	65:39	0:0	8	(
water	65:40	0:0	8	t
op	65:42	0:0	8	>>
water	65:45	0:0	8	8
water	65:46	0:0	8	)
op	65:48	0:0	8	&
water	65:50	0:0	8	0
water	65:51	0:0	8	xff
water	65:55	0:0	6	;
water	66:12	0:0	6	buffer
op	66:18	0:0	6	[
water	66:19	0:0	6	6
op	66:20	0:0	6	*
water	66:21	0:0	6	i
op	66:22	0:0	6	+
water	66:23	0:0	6	1
op	66:24	0:0	6	]
op	66:26	0:0	6	=
call	66:28	66:47	6	(png_byte)
arg	66:39	66:47	7	t&0xff
water	66:39	0:0	8	t
op	66:41	0:0	8	&
water	66:43	0:0	8	0
water	66:44	0:0	8	xff
water	66:48	0:0	6	;
water	67:12	0:0	6	t
op	67:14	0:0	6	*=
water	67:17	0:0	6	257
water	67:20	0:0	6	;
water	68:12	0:0	6	buffer
op	68:18	0:0	6	[
water	68:19	0:0	6	6
op	68:20	0:0	6	*
water	68:21	0:0	6	i
op	68:22	0:0	6	+
water	68:23	0:0	6	2
op	68:24	0:0	6	]
op	68:26	0:0	6	=
call	68:28	68:54	6	(png_byte)
arg	68:39	68:54	7	(t>>8)&0xff
water	68:39	0:0	8	(
water	68:40	0:0	8	t
op	68:42	0:0	8	>>
water	68:45	0:0	8	8
water	68:46	0:0	8	)
op	68:48	0:0	8	&
water	68:50	0:0	8	0
water	68:51	0:0	8	xff
water	68:55	0:0	6	;
water	69:12	0:0	6	buffer
op	69:18	0:0	6	[
water	69:19	0:0	6	6
op	69:20	0:0	6	*
water	69:21	0:0	6	i
op	69:22	0:0	6	+
water	69:23	0:0	6	3
op	69:24	0:0	6	]
op	69:26	0:0	6	=
call	69:28	69:47	6	(png_byte)
arg	69:39	69:47	7	t&0xff
water	69:39	0:0	8	t
op	69:41	0:0	8	&
water	69:43	0:0	8	0
water	69:44	0:0	8	xff
water	69:48	0:0	6	;
water	70:12	0:0	6	t
op	70:14	0:0	6	*=
water	70:17	0:0	6	17
water	70:19	0:0	6	;
water	71:12	0:0	6	buffer
op	71:18	0:0	6	[
water	71:19	0:0	6	6
op	71:20	0:0	6	*
water	71:21	0:0	6	i
op	71:22	0:0	6	+
water	71:23	0:0	6	4
op	71:24	0:0	6	]
op	71:26	0:0	6	=
call	71:28	71:54	6	(png_byte)
arg	71:39	71:54	7	(t>>8)&0xff
water	71:39	0:0	8	(
water	71:40	0:0	8	t
op	71:42	0:0	8	>>
water	71:45	0:0	8	8
water	71:46	0:0	8	)
op	71:48	0:0	8	&
water	71:50	0:0	8	0
water	71:51	0:0	8	xff
water	71:55	0:0	6	;
water	72:12	0:0	6	buffer
op	72:18	0:0	6	[
water	72:19	0:0	6	6
op	72:20	0:0	6	*
water	72:21	0:0	6	i
op	72:22	0:0	6	+
water	72:23	0:0	6	5
op	72:24	0:0	6	]
op	72:26	0:0	6	=
call	72:28	72:47	6	(png_byte)
arg	72:39	72:47	7	t&0xff
water	72:39	0:0	8	t
op	72:41	0:0	8	&
water	72:43	0:0	8	0
water	72:44	0:0	8	xff
water	72:48	0:0	6	;
op	73:12	0:0	6	++
water	73:14	0:0	6	i
water	73:15	0:0	6	;
water	74:9	0:0	6	}
return	75:9	75:15	4	
label	76:6	76:13	4	case 64 :
while	78:9	91:9	4	(i < 128)
cond	78:16	78:18	5	i < 128
water	78:16	0:0	6	i
op	78:17	0:0	6	<
water	78:18	0:0	6	128
stmts	79:9	91:9	5	
water	79:9	0:0	6	{
decl	80:12	80:31	6	png_uint_32	t
op	80:26	0:0	6	=
water	80:28	0:0	6	v
op	80:29	0:0	6	++
water	81:12	0:0	6	buffer
op	81:18	0:0	6	[
water	81:19	0:0	6	8
op	81:20	0:0	6	*
water	81:21	0:0	6	i
op	81:22	0:0	6	+
water	81:23	0:0	6	0
op	81:24	0:0	6	]
op	81:26	0:0	6	=
call	81:28	81:54	6	(png_byte)
arg	81:39	81:54	7	(t>>8)&0xff
water	81:39	0:0	8	(
water	81:40	0:0	8	t
op	81:42	0:0	8	>>
water	81:45	0:0	8	8
water	81:46	0:0	8	)
op	81:48	0:0	8	&
water	81:50	0:0	8	0
water	81:51	0:0	8	xff
water	81:55	0:0	6	;
water	82:12	0:0	6	buffer
op	82:18	0:0	6	[
water	82:19	0:0	6	8
op	82:20	0:0	6	*
water	82:21	0:0	6	i
op	82:22	0:0	6	+
water	82:23	0:0	6	1
op	82:24	0:0	6	]
op	82:26	0:0	6	=
call	82:28	82:47	6	(png_byte)
arg	82:39	82:47	7	t&0xff
water	82:39	0:0	8	t
op	82:41	0:0	8	&
water	82:43	0:0	8	0
water	82:44	0:0	8	xff
water	82:48	0:0	6	;
water	83:12	0:0	6	buffer
op	83:18	0:0	6	[
water	83:19	0:0	6	8
op	83:20	0:0	6	*
water	83:21	0:0	6	i
op	83:22	0:0	6	+
water	83:23	0:0	6	4
op	83:24	0:0	6	]
op	83:26	0:0	6	=
call	83:28	83:54	6	(png_byte)
arg	83:39	83:54	7	(t>>8)&0xff
water	83:39	0:0	8	(
water	83:40	0:0	8	t
op	83:42	0:0	8	>>
water	83:45	0:0	8	8
water	83:46	0:0	8	)
op	83:48	0:0	8	&
water	83:50	0:0	8	0
water	83:51	0:0	8	xff
water	83:55	0:0	6	;
water	84:12	0:0	6	buffer
op	84:18	0:0	6	[
water	84:19	0:0	6	8
op	84:20	0:0	6	*
water	84:21	0:0	6	i
op	84:22	0:0	6	+
water	84:23	0:0	6	5
op	84:24	0:0	6	]
op	84:26	0:0	6	=
call	84:28	84:47	6	(png_byte)
arg	84:39	84:47	7	t&0xff
water	84:39	0:0	8	t
op	84:41	0:0	8	&
water	84:43	0:0	8	0
water	84:44	0:0	8	xff
water	84:48	0:0	6	;
water	85:12	0:0	6	t
op	85:14	0:0	6	*=
water	85:17	0:0	6	257
water	85:20	0:0	6	;
water	86:12	0:0	6	buffer
op	86:18	0:0	6	[
water	86:19	0:0	6	8
op	86:20	0:0	6	*
water	86:21	0:0	6	i
op	86:22	0:0	6	+
water	86:23	0:0	6	2
op	86:24	0:0	6	]
op	86:26	0:0	6	=
call	86:28	86:54	6	(png_byte)
arg	86:39	86:54	7	(t>>8)&0xff
water	86:39	0:0	8	(
water	86:40	0:0	8	t
op	86:42	0:0	8	>>
water	86:45	0:0	8	8
water	86:46	0:0	8	)
op	86:48	0:0	8	&
water	86:50	0:0	8	0
water	86:51	0:0	8	xff
water	86:55	0:0	6	;
water	87:12	0:0	6	buffer
op	87:18	0:0	6	[
water	87:19	0:0	6	8
op	87:20	0:0	6	*
water	87:21	0:0	6	i
op	87:22	0:0	6	+
water	87:23	0:0	6	3
op	87:24	0:0	6	]
op	87:26	0:0	6	=
call	87:28	87:47	6	(png_byte)
arg	87:39	87:47	7	t&0xff
water	87:39	0:0	8	t
op	87:41	0:0	8	&
water	87:43	0:0	8	0
water	87:44	0:0	8	xff
water	87:48	0:0	6	;
water	88:12	0:0	6	buffer
op	88:18	0:0	6	[
water	88:19	0:0	6	8
op	88:20	0:0	6	*
water	88:21	0:0	6	i
op	88:22	0:0	6	+
water	88:23	0:0	6	6
op	88:24	0:0	6	]
op	88:26	0:0	6	=
call	88:28	88:54	6	(png_byte)
arg	88:39	88:54	7	(t>>8)&0xff
water	88:39	0:0	8	(
water	88:40	0:0	8	t
op	88:42	0:0	8	>>
water	88:45	0:0	8	8
water	88:46	0:0	8	)
op	88:48	0:0	8	&
water	88:50	0:0	8	0
water	88:51	0:0	8	xff
water	88:55	0:0	6	;
water	89:12	0:0	6	buffer
op	89:18	0:0	6	[
water	89:19	0:0	6	8
op	89:20	0:0	6	*
water	89:21	0:0	6	i
op	89:22	0:0	6	+
water	89:23	0:0	6	7
op	89:24	0:0	6	]
op	89:26	0:0	6	=
call	89:28	89:47	6	(png_byte)
arg	89:39	89:47	7	t&0xff
water	89:39	0:0	8	t
op	89:41	0:0	8	&
water	89:43	0:0	8	0
water	89:44	0:0	8	xff
water	89:48	0:0	6	;
op	90:12	0:0	6	++
water	90:14	0:0	6	i
water	90:15	0:0	6	;
water	91:9	0:0	6	}
return	92:9	92:15	4	
label	93:6	93:13	4	default :
break	94:9	94:14	4	
water	95:3	0:0	4	}
call	96:3	96:33	2	png_error
arg	96:13	96:15	3	pp
water	96:13	0:0	4	pp
arg	96:17	96:33	3	"internal error"
water	96:17	0:0	4	"internal error"
water	96:34	0:0	2	;

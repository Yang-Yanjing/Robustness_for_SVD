func	2:0	135:0	0	static void	readpng2_info_callback
params	2:34	0:0	1	
param	2:35	2:54	2	png_structp	png_ptr
param	2:56	2:74	2	png_infop	info_ptr
stmnts	0:0	134:10	1	
decl	4:4	4:32	2	mainprog_info	*mainprog_ptr
decl	5:4	5:30	2	int	color_type
water	5:19	0:0	2	,
decl	5:4	5:30	2	int	bit_depth
decl	6:4	6:29	2	png_uint_32	width
water	6:21	0:0	2	,
decl	6:4	6:29	2	png_uint_32	height
decl	8:4	8:17	2	double	gamma
decl	10:4	10:25	2	png_fixed_point	gamma
water	22:4	0:0	2	mainprog_ptr
op	22:17	0:0	2	=
call	22:19	22:50	2	png_get_progressive_ptr
arg	22:43	22:50	3	png_ptr
water	22:43	0:0	4	png_ptr
water	22:51	0:0	2	;
if	23:4	35:4	2	(mainprog_ptr == NULL)
cond	23:8	23:24	3	mainprog_ptr == NULL
water	23:8	0:0	4	mainprog_ptr
op	23:21	0:0	4	==
water	23:24	0:0	4	NULL
stmts	23:30	35:4	3	
water	23:30	0:0	4	{
call	24:8	25:76	4	fprintf
arg	24:16	24:22	5	stderr
water	24:16	0:0	6	stderr
arg	25:10	25:76	5	"readpng2 error:  main struct not recoverable in info_callback.\n"
water	25:10	0:0	6	"readpng2 error:  main struct not recoverable in info_callback.\n"
water	25:77	0:0	4	;
call	26:8	26:21	4	fflush
arg	26:15	26:21	5	stderr
water	26:15	0:0	6	stderr
water	26:22	0:0	4	;
return	27:8	27:14	4	
water	35:4	0:0	4	}
call	37:4	38:23	2	png_get_IHDR
arg	37:17	37:24	3	png_ptr
water	37:17	0:0	4	png_ptr
arg	37:26	37:34	3	info_ptr
water	37:26	0:0	4	info_ptr
arg	37:36	37:42	3	&width
op	37:36	0:0	4	&
water	37:37	0:0	4	width
arg	37:44	37:51	3	&height
op	37:44	0:0	4	&
water	37:45	0:0	4	height
arg	37:53	37:63	3	&bit_depth
op	37:53	0:0	4	&
water	37:54	0:0	4	bit_depth
arg	37:65	37:76	3	&color_type
op	37:65	0:0	4	&
water	37:66	0:0	4	color_type
arg	38:7	38:11	3	NULL
water	38:7	0:0	4	NULL
arg	38:13	38:17	3	NULL
water	38:13	0:0	4	NULL
arg	38:19	38:23	3	NULL
water	38:19	0:0	4	NULL
water	38:24	0:0	2	;
water	39:4	0:0	2	mainprog_ptr
op	39:16	0:0	2	->
water	39:18	0:0	2	width
op	39:24	0:0	2	=
water	39:26	0:0	2	(
water	39:27	0:0	2	ulg
water	39:30	0:0	2	)
water	39:31	0:0	2	width
water	39:36	0:0	2	;
water	40:4	0:0	2	mainprog_ptr
op	40:16	0:0	2	->
water	40:18	0:0	2	height
op	40:25	0:0	2	=
water	40:27	0:0	2	(
water	40:28	0:0	2	ulg
water	40:31	0:0	2	)
water	40:32	0:0	2	height
water	40:38	0:0	2	;
if	43:4	72:4	2	(mainprog_ptr -> need_bgcolor &&png_get_valid (png_ptr ,info_ptr ,PNG_INFO_bKGD ))
cond	43:8	44:54	3	mainprog_ptr -> need_bgcolor &&png_get_valid (png_ptr ,info_ptr ,PNG_INFO_bKGD )
water	43:8	0:0	4	mainprog_ptr
op	43:20	0:0	4	->
water	43:22	0:0	4	need_bgcolor
op	43:35	0:0	4	&&
call	44:8	44:54	4	png_get_valid
arg	44:22	44:29	5	png_ptr
water	44:22	0:0	6	png_ptr
arg	44:31	44:39	5	info_ptr
water	44:31	0:0	6	info_ptr
arg	44:41	44:54	5	PNG_INFO_bKGD
water	44:41	0:0	6	PNG_INFO_bKGD
stmts	45:4	72:4	3	
water	45:4	0:0	4	{
decl	46:8	46:33	4	png_color_16p	pBackground
call	50:8	50:52	4	png_get_bKGD
arg	50:21	50:28	5	png_ptr
water	50:21	0:0	6	png_ptr
arg	50:30	50:38	5	info_ptr
water	50:30	0:0	6	info_ptr
arg	50:40	50:52	5	&pBackground
op	50:40	0:0	6	&
water	50:41	0:0	6	pBackground
water	50:53	0:0	4	;
if	53:8	57:8	4	(bit_depth == 16)
cond	53:12	53:25	5	bit_depth == 16
water	53:12	0:0	6	bit_depth
op	53:22	0:0	6	==
water	53:25	0:0	6	16
stmts	53:29	57:8	5	
water	53:29	0:0	6	{
water	54:12	0:0	6	mainprog_ptr
op	54:24	0:0	6	->
water	54:26	0:0	6	bg_red
op	54:35	0:0	6	=
water	54:37	0:0	6	pBackground
op	54:48	0:0	6	->
water	54:50	0:0	6	red
op	54:56	0:0	6	>>
water	54:59	0:0	6	8
water	54:60	0:0	6	;
water	55:12	0:0	6	mainprog_ptr
op	55:24	0:0	6	->
water	55:26	0:0	6	bg_green
op	55:35	0:0	6	=
water	55:37	0:0	6	pBackground
op	55:48	0:0	6	->
water	55:50	0:0	6	green
op	55:56	0:0	6	>>
water	55:59	0:0	6	8
water	55:60	0:0	6	;
water	56:12	0:0	6	mainprog_ptr
op	56:24	0:0	6	->
water	56:26	0:0	6	bg_blue
op	56:35	0:0	6	=
water	56:37	0:0	6	pBackground
op	56:48	0:0	6	->
water	56:50	0:0	6	blue
op	56:56	0:0	6	>>
water	56:59	0:0	6	8
water	56:60	0:0	6	;
water	57:8	0:0	6	}
else	57:10	67:8	4
stmts	57:15	67:8	5	
if	57:15	67:8	6	(color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8)
cond	57:19	57:68	7	color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8
water	57:19	0:0	8	color_type
op	57:30	0:0	8	==
water	57:33	0:0	8	PNG_COLOR_TYPE_GRAY
op	57:53	0:0	8	&&
water	57:56	0:0	8	bit_depth
op	57:66	0:0	8	<
water	57:68	0:0	8	8
stmts	57:71	67:8	7	
water	57:71	0:0	8	{
if	58:12	60:68	8	(bit_depth == 1)
cond	58:16	58:29	9	bit_depth == 1
water	58:16	0:0	10	bit_depth
op	58:26	0:0	10	==
water	58:29	0:0	10	1
stmts	59:16	60:68	9	
water	59:16	0:0	10	mainprog_ptr
op	59:28	0:0	10	->
water	59:30	0:0	10	bg_red
op	59:37	0:0	10	=
water	59:39	0:0	10	mainprog_ptr
op	59:51	0:0	10	->
water	59:53	0:0	10	bg_green
op	59:62	0:0	10	=
water	60:18	0:0	10	mainprog_ptr
op	60:30	0:0	10	->
water	60:32	0:0	10	bg_blue
op	60:40	0:0	10	=
water	60:42	0:0	10	pBackground
op	60:53	0:0	10	->
water	60:55	0:0	10	gray
water	60:59	0:0	10	?
water	60:61	0:0	10	255
water	60:65	0:0	10	:
water	60:67	0:0	10	0
water	60:68	0:0	10	;
else	61:12	63:69	8
stmts	61:17	63:69	9	
if	61:17	63:69	10	(bit_depth == 2)
cond	61:21	61:34	11	bit_depth == 2
water	61:21	0:0	12	bit_depth
op	61:31	0:0	12	==
water	61:34	0:0	12	2
stmts	62:16	63:69	11	
water	62:16	0:0	12	mainprog_ptr
op	62:28	0:0	12	->
water	62:30	0:0	12	bg_red
op	62:37	0:0	12	=
water	62:39	0:0	12	mainprog_ptr
op	62:51	0:0	12	->
water	62:53	0:0	12	bg_green
op	62:62	0:0	12	=
water	63:18	0:0	12	mainprog_ptr
op	63:30	0:0	12	->
water	63:32	0:0	12	bg_blue
op	63:40	0:0	12	=
water	63:42	0:0	12	(
water	63:43	0:0	12	255
op	63:46	0:0	12	/
water	63:47	0:0	12	3
water	63:48	0:0	12	)
op	63:50	0:0	12	*
water	63:52	0:0	12	pBackground
op	63:63	0:0	12	->
water	63:65	0:0	12	gray
water	63:69	0:0	12	;
else	64:12	66:70	8
stmts	65:16	66:70	9	
water	65:16	0:0	10	mainprog_ptr
op	65:28	0:0	10	->
water	65:30	0:0	10	bg_red
op	65:37	0:0	10	=
water	65:39	0:0	10	mainprog_ptr
op	65:51	0:0	10	->
water	65:53	0:0	10	bg_green
op	65:62	0:0	10	=
water	66:18	0:0	10	mainprog_ptr
op	66:30	0:0	10	->
water	66:32	0:0	10	bg_blue
op	66:40	0:0	10	=
water	66:42	0:0	10	(
water	66:43	0:0	10	255
op	66:46	0:0	10	/
water	66:47	0:0	10	15
water	66:49	0:0	10	)
op	66:51	0:0	10	*
water	66:53	0:0	10	pBackground
op	66:64	0:0	10	->
water	66:66	0:0	10	gray
water	66:70	0:0	10	;
water	67:8	0:0	8	}
else	67:10	71:8	4
stmts	67:15	71:8	5	
water	67:15	0:0	6	{
water	68:12	0:0	6	mainprog_ptr
op	68:24	0:0	6	->
water	68:26	0:0	6	bg_red
op	68:35	0:0	6	=
water	68:37	0:0	6	(
water	68:38	0:0	6	uch
water	68:41	0:0	6	)
water	68:42	0:0	6	pBackground
op	68:53	0:0	6	->
water	68:55	0:0	6	red
water	68:58	0:0	6	;
water	69:12	0:0	6	mainprog_ptr
op	69:24	0:0	6	->
water	69:26	0:0	6	bg_green
op	69:35	0:0	6	=
water	69:37	0:0	6	(
water	69:38	0:0	6	uch
water	69:41	0:0	6	)
water	69:42	0:0	6	pBackground
op	69:53	0:0	6	->
water	69:55	0:0	6	green
water	69:60	0:0	6	;
water	70:12	0:0	6	mainprog_ptr
op	70:24	0:0	6	->
water	70:26	0:0	6	bg_blue
op	70:35	0:0	6	=
water	70:37	0:0	6	(
water	70:38	0:0	6	uch
water	70:41	0:0	6	)
water	70:42	0:0	6	pBackground
op	70:53	0:0	6	->
water	70:55	0:0	6	blue
water	70:59	0:0	6	;
water	71:8	0:0	6	}
water	72:4	0:0	4	}
if	77:4	78:31	2	(color_type == PNG_COLOR_TYPE_PALETTE)
cond	77:8	77:22	3	color_type == PNG_COLOR_TYPE_PALETTE
water	77:8	0:0	4	color_type
op	77:19	0:0	4	==
water	77:22	0:0	4	PNG_COLOR_TYPE_PALETTE
stmts	78:8	78:31	3	
call	78:8	78:30	4	png_set_expand
arg	78:23	78:30	5	png_ptr
water	78:23	0:0	6	png_ptr
water	78:31	0:0	4	;
if	79:4	80:31	2	(color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8)
cond	79:8	79:57	3	color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8
water	79:8	0:0	4	color_type
op	79:19	0:0	4	==
water	79:22	0:0	4	PNG_COLOR_TYPE_GRAY
op	79:42	0:0	4	&&
water	79:45	0:0	4	bit_depth
op	79:55	0:0	4	<
water	79:57	0:0	4	8
stmts	80:8	80:31	3	
call	80:8	80:30	4	png_set_expand
arg	80:23	80:30	5	png_ptr
water	80:23	0:0	6	png_ptr
water	80:31	0:0	4	;
if	81:4	82:31	2	(png_get_valid (png_ptr ,info_ptr ,PNG_INFO_tRNS ))
cond	81:8	81:54	3	png_get_valid (png_ptr ,info_ptr ,PNG_INFO_tRNS )
call	81:8	81:54	4	png_get_valid
arg	81:22	81:29	5	png_ptr
water	81:22	0:0	6	png_ptr
arg	81:31	81:39	5	info_ptr
water	81:31	0:0	6	info_ptr
arg	81:41	81:54	5	PNG_INFO_tRNS
water	81:41	0:0	6	PNG_INFO_tRNS
stmts	82:8	82:31	3	
call	82:8	82:30	4	png_set_expand
arg	82:23	82:30	5	png_ptr
water	82:23	0:0	6	png_ptr
water	82:31	0:0	4	;
if	84:4	86:33	2	(bit_depth == 16)
cond	84:8	84:21	3	bit_depth == 16
water	84:8	0:0	4	bit_depth
op	84:18	0:0	4	==
water	84:21	0:0	4	16
stmts	86:8	86:33	3	
call	86:8	86:32	4	png_set_scale_16
arg	86:25	86:32	5	png_ptr
water	86:25	0:0	6	png_ptr
water	86:33	0:0	4	;
call	88:8	88:32	2	png_set_strip_16
arg	88:25	88:32	3	png_ptr
water	88:25	0:0	4	png_ptr
water	88:33	0:0	2	;
if	91:4	93:36	2	(color_type == PNG_COLOR_TYPE_GRAY || color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
cond	91:8	92:22	3	color_type == PNG_COLOR_TYPE_GRAY || color_type == PNG_COLOR_TYPE_GRAY_ALPHA
water	91:8	0:0	4	color_type
op	91:19	0:0	4	==
water	91:22	0:0	4	PNG_COLOR_TYPE_GRAY
op	91:42	0:0	4	||
water	92:8	0:0	4	color_type
op	92:19	0:0	4	==
water	92:22	0:0	4	PNG_COLOR_TYPE_GRAY_ALPHA
stmts	93:8	93:36	3	
call	93:8	93:35	4	png_set_gray_to_rgb
arg	93:28	93:35	5	png_ptr
water	93:28	0:0	6	png_ptr
water	93:36	0:0	4	;
if	109:4	110:69	2	(png_get_gAMA (png_ptr ,info_ptr ,& gamma ))
cond	109:8	109:46	3	png_get_gAMA (png_ptr ,info_ptr ,& gamma )
call	109:8	109:46	4	png_get_gAMA
arg	109:21	109:28	5	png_ptr
water	109:21	0:0	6	png_ptr
arg	109:30	109:38	5	info_ptr
water	109:30	0:0	6	info_ptr
arg	109:40	109:46	5	&gamma
op	109:40	0:0	6	&
water	109:41	0:0	6	gamma
stmts	110:8	110:69	3	
call	110:8	110:68	4	png_set_gamma
arg	110:22	110:29	5	png_ptr
water	110:22	0:0	6	png_ptr
arg	110:31	110:61	5	mainprog_ptr->display_exponent
water	110:31	0:0	6	mainprog_ptr
op	110:43	0:0	6	->
water	110:45	0:0	6	display_exponent
arg	110:63	110:68	5	gamma
water	110:63	0:0	6	gamma
water	110:69	0:0	4	;
else	111:4	112:71	2
stmts	112:8	112:71	3	
call	112:8	112:70	4	png_set_gamma
arg	112:22	112:29	5	png_ptr
water	112:22	0:0	6	png_ptr
arg	112:31	112:61	5	mainprog_ptr->display_exponent
water	112:31	0:0	6	mainprog_ptr
op	112:43	0:0	6	->
water	112:45	0:0	6	display_exponent
arg	112:63	112:70	5	0.45455
water	112:63	0:0	6	0
op	112:64	0:0	6	.
water	112:65	0:0	6	45455
water	112:71	0:0	4	;
if	114:4	116:79	2	(png_get_gAMA_fixed (png_ptr ,info_ptr ,& gamma ))
cond	114:8	114:52	3	png_get_gAMA_fixed (png_ptr ,info_ptr ,& gamma )
call	114:8	114:52	4	png_get_gAMA_fixed
arg	114:27	114:34	5	png_ptr
water	114:27	0:0	6	png_ptr
arg	114:36	114:44	5	info_ptr
water	114:36	0:0	6	info_ptr
arg	114:46	114:52	5	&gamma
op	114:46	0:0	6	&
water	114:47	0:0	6	gamma
stmts	115:8	116:79	3	
call	115:8	116:78	4	png_set_gamma_fixed
arg	115:28	115:35	5	png_ptr
water	115:28	0:0	6	png_ptr
arg	116:12	116:71	5	(png_fixed_point)(100000*mainprog_ptr->display_exponent+.5)
call	116:12	116:70	6	(png_fixed_point)
arg	116:30	116:70	7	100000*mainprog_ptr->display_exponent+.5
water	116:30	0:0	8	100000
op	116:36	0:0	8	*
water	116:37	0:0	8	mainprog_ptr
op	116:49	0:0	8	->
water	116:51	0:0	8	display_exponent
op	116:67	0:0	8	+
op	116:68	0:0	8	.
water	116:69	0:0	8	5
arg	116:73	116:78	5	gamma
water	116:73	0:0	6	gamma
water	116:79	0:0	4	;
else	117:4	119:79	2
stmts	118:8	119:79	3	
call	118:8	119:78	4	png_set_gamma_fixed
arg	118:28	118:35	5	png_ptr
water	118:28	0:0	6	png_ptr
arg	119:12	119:71	5	(png_fixed_point)(100000*mainprog_ptr->display_exponent+.5)
call	119:12	119:70	6	(png_fixed_point)
arg	119:30	119:70	7	100000*mainprog_ptr->display_exponent+.5
water	119:30	0:0	8	100000
op	119:36	0:0	8	*
water	119:37	0:0	8	mainprog_ptr
op	119:49	0:0	8	->
water	119:51	0:0	8	display_exponent
op	119:67	0:0	8	+
op	119:68	0:0	8	.
water	119:69	0:0	8	5
arg	119:73	119:78	5	45455
water	119:73	0:0	6	45455
water	119:79	0:0	4	;
water	122:4	0:0	2	mainprog_ptr
op	122:16	0:0	2	->
water	122:18	0:0	2	passes
op	122:25	0:0	2	=
call	122:27	122:61	2	png_set_interlace_handling
arg	122:54	122:61	3	png_ptr
water	122:54	0:0	4	png_ptr
water	122:62	0:0	2	;
call	125:4	125:42	2	png_read_update_info
arg	125:25	125:32	3	png_ptr
water	125:25	0:0	4	png_ptr
arg	125:34	125:42	3	info_ptr
water	125:34	0:0	4	info_ptr
water	125:43	0:0	2	;
water	126:4	0:0	2	mainprog_ptr
op	126:16	0:0	2	->
water	126:18	0:0	2	rowbytes
op	126:27	0:0	2	=
water	126:29	0:0	2	(
water	126:30	0:0	2	int
water	126:33	0:0	2	)
call	126:34	126:68	2	png_get_rowbytes
arg	126:51	126:58	3	png_ptr
water	126:51	0:0	4	png_ptr
arg	126:60	126:68	3	info_ptr
water	126:60	0:0	4	info_ptr
water	126:69	0:0	2	;
water	127:4	0:0	2	mainprog_ptr
op	127:16	0:0	2	->
water	127:18	0:0	2	channels
op	127:27	0:0	2	=
call	127:29	127:63	2	png_get_channels
arg	127:46	127:53	3	png_ptr
water	127:46	0:0	4	png_ptr
arg	127:55	127:63	3	info_ptr
water	127:55	0:0	4	info_ptr
water	127:64	0:0	2	;
call	132:4	132:35	2	(*mainprog_ptr->mainprog_init)
water	132:36	0:0	2	;
return	134:4	134:10	2	

func	1:0	116:0	0	static int	testimage
params	2:9	0:0	1	
param	2:10	2:22	2	Image *	image
param	2:24	2:40	2	png_uint_32	opts
param	2:42	2:57	2	format_list *	pf
stmnts	0:0	115:16	1	
decl	4:3	4:13	2	int	result
decl	5:3	5:13	2	Image	copy
call	7:3	7:20	2	checkopaque
arg	7:15	7:20	3	image
water	7:15	0:0	4	image
water	7:21	0:0	2	;
water	8:3	0:0	2	copy
op	8:8	0:0	2	=
op	8:10	0:0	2	*
water	8:11	0:0	2	image
water	8:16	0:0	2	;
water	9:3	0:0	2	copy
op	9:7	0:0	2	.
water	9:8	0:0	2	opts
op	9:13	0:0	2	=
water	9:15	0:0	2	opts
water	9:19	0:0	2	;
water	10:3	0:0	2	copy
op	10:7	0:0	2	.
water	10:8	0:0	2	buffer
op	10:15	0:0	2	=
water	10:17	0:0	2	NULL
water	10:21	0:0	2	;
water	11:3	0:0	2	copy
op	11:7	0:0	2	.
water	11:8	0:0	2	bufsize
op	11:16	0:0	2	=
water	11:18	0:0	2	0
water	11:19	0:0	2	;
water	12:3	0:0	2	copy
op	12:7	0:0	2	.
water	12:8	0:0	2	allocsize
op	12:18	0:0	2	=
water	12:20	0:0	2	0
water	12:21	0:0	2	;
water	13:3	0:0	2	image
op	13:8	0:0	2	->
water	13:10	0:0	2	input_file
op	13:21	0:0	2	=
water	13:23	0:0	2	NULL
water	13:27	0:0	2	;
water	14:3	0:0	2	image
op	14:8	0:0	2	->
water	14:10	0:0	2	input_memory
op	14:23	0:0	2	=
water	14:25	0:0	2	NULL
water	14:29	0:0	2	;
water	15:3	0:0	2	image
op	15:8	0:0	2	->
water	15:10	0:0	2	input_memory_size
op	15:28	0:0	2	=
water	15:30	0:0	2	0
water	15:31	0:0	2	;
water	16:3	0:0	2	image
op	16:8	0:0	2	->
water	16:10	0:0	2	tmpfile_name
op	16:22	0:0	2	[
water	16:23	0:0	2	0
op	16:24	0:0	2	]
op	16:26	0:0	2	=
water	16:28	0:0	2	0
water	16:29	0:0	2	;
water	17:3	0:0	2	{
decl	18:6	18:25	2	png_uint_32	counter
decl	19:6	19:18	2	Image	output
call	20:6	20:22	2	newimage
arg	20:15	20:22	3	&output
op	20:15	0:0	4	&
water	20:16	0:0	4	output
water	20:23	0:0	2	;
water	21:6	0:0	2	result
op	21:13	0:0	2	=
water	21:15	0:0	2	1
water	21:16	0:0	2	;
for	26:6	111:6	2	(counter = 0 ;counter < 2 * FORMAT_COUNT;++ counter)
forinit	26:11	26:20	3	counter = 0 ;
water	26:11	0:0	4	counter
op	26:18	0:0	4	=
water	26:19	0:0	4	0
water	26:20	0:0	4	;
cond	26:22	26:32	3	counter < 2 * FORMAT_COUNT
water	26:22	0:0	4	counter
op	26:29	0:0	4	<
water	26:30	0:0	4	2
op	26:31	0:0	4	*
water	26:32	0:0	4	FORMAT_COUNT
forexpr	26:46	26:48	3	++ counter
op	26:46	0:0	4	++
water	26:48	0:0	4	counter
stmts	27:9	111:6	3	
if	27:9	111:6	4	(format_isset (pf ,counter >> 1 ))
cond	27:13	27:42	5	format_isset (pf ,counter >> 1 )
call	27:13	27:42	6	format_isset
arg	27:26	27:28	7	pf
water	27:26	0:0	8	pf
arg	27:30	27:42	7	counter>>1
water	27:30	0:0	8	counter
op	27:38	0:0	8	>>
water	27:41	0:0	8	1
stmts	28:6	111:6	5	
water	28:6	0:0	6	{
decl	29:9	29:42	6	png_uint_32	format
op	29:28	0:0	6	=
water	29:30	0:0	6	counter
op	29:38	0:0	6	>>
water	29:41	0:0	6	1
decl	30:9	30:35	6	png_color	background_color
decl	31:9	31:37	6	png_colorp	background
op	31:31	0:0	6	=
water	31:33	0:0	6	NULL
if	38:9	61:9	6	(( counter & 1 ) == 0)
cond	38:13	38:30	7	( counter & 1 ) == 0
water	38:13	0:0	8	(
water	38:14	0:0	8	counter
op	38:22	0:0	8	&
water	38:24	0:0	8	1
water	38:25	0:0	8	)
op	38:27	0:0	8	==
water	38:30	0:0	8	0
stmts	39:9	61:9	7	
water	39:9	0:0	8	{
if	40:12	55:12	8	(( format & PNG_FORMAT_FLAG_ALPHA ) == 0 && ( image -> image . format & PNG_FORMAT_FLAG_ALPHA ) != 0)
cond	40:16	41:64	9	( format & PNG_FORMAT_FLAG_ALPHA ) == 0 && ( image -> image . format & PNG_FORMAT_FLAG_ALPHA ) != 0
water	40:16	0:0	10	(
water	40:17	0:0	10	format
op	40:24	0:0	10	&
water	40:26	0:0	10	PNG_FORMAT_FLAG_ALPHA
water	40:47	0:0	10	)
op	40:49	0:0	10	==
water	40:52	0:0	10	0
op	40:54	0:0	10	&&
water	41:15	0:0	10	(
water	41:16	0:0	10	image
op	41:21	0:0	10	->
water	41:23	0:0	10	image
op	41:28	0:0	10	.
water	41:29	0:0	10	format
op	41:36	0:0	10	&
water	41:38	0:0	10	PNG_FORMAT_FLAG_ALPHA
water	41:59	0:0	10	)
op	41:61	0:0	10	!=
water	41:64	0:0	10	0
stmts	42:12	55:12	9	
water	42:12	0:0	10	{
call	46:15	46:45	10	random_color
arg	46:28	46:45	11	&background_color
op	46:28	0:0	12	&
water	46:29	0:0	12	background_color
water	46:46	0:0	10	;
water	47:15	0:0	10	background
op	47:26	0:0	10	=
op	47:28	0:0	10	&
water	47:29	0:0	10	background_color
water	47:45	0:0	10	;
if	52:15	54:27	10	(( format & PNG_FORMAT_FLAG_COLORMAP ) != 0 && ( format & PNG_FORMAT_FLAG_LINEAR ) == 0)
cond	52:19	53:55	11	( format & PNG_FORMAT_FLAG_COLORMAP ) != 0 && ( format & PNG_FORMAT_FLAG_LINEAR ) == 0
water	52:19	0:0	12	(
water	52:20	0:0	12	format
op	52:27	0:0	12	&
water	52:29	0:0	12	PNG_FORMAT_FLAG_COLORMAP
water	52:53	0:0	12	)
op	52:55	0:0	12	!=
water	52:58	0:0	12	0
op	52:60	0:0	12	&&
water	53:18	0:0	12	(
water	53:19	0:0	12	format
op	53:26	0:0	12	&
water	53:28	0:0	12	PNG_FORMAT_FLAG_LINEAR
water	53:50	0:0	12	)
op	53:52	0:0	12	==
water	53:55	0:0	12	0
stmts	54:18	54:27	11	
op	54:18	0:0	12	++
water	54:20	0:0	12	counter
water	54:27	0:0	12	;
water	55:12	0:0	10	}
else	59:12	60:24	8
stmts	60:15	60:24	9	
op	60:15	0:0	10	++
water	60:17	0:0	10	counter
water	60:24	0:0	10	;
water	61:9	0:0	8	}
call	63:9	63:25	6	resetimage
arg	63:20	63:25	7	&copy
op	63:20	0:0	8	&
water	63:21	0:0	8	copy
water	63:26	0:0	6	;
water	64:9	0:0	6	copy
op	64:13	0:0	6	.
water	64:14	0:0	6	opts
op	64:19	0:0	6	=
water	64:21	0:0	6	opts
water	64:25	0:0	6	;
water	65:9	0:0	6	result
op	65:16	0:0	6	=
call	65:18	65:53	6	read_file
arg	65:28	65:33	7	&copy
op	65:28	0:0	8	&
water	65:29	0:0	8	copy
arg	65:35	65:41	7	format
water	65:35	0:0	8	format
arg	65:43	65:53	7	background
water	65:43	0:0	8	background
water	65:54	0:0	6	;
if	66:9	67:17	6	(! result)
cond	66:13	66:14	7	! result
op	66:13	0:0	8	!
water	66:14	0:0	8	result
stmts	67:12	67:17	7	
break	67:12	67:17	8	
water	69:9	0:0	6	result
op	69:16	0:0	6	=
call	69:18	69:64	6	compare_two_images
arg	69:37	69:42	7	image
water	69:37	0:0	8	image
arg	69:44	69:49	7	&copy
op	69:44	0:0	8	&
water	69:45	0:0	8	copy
arg	69:51	69:52	7	0
water	69:51	0:0	8	0
arg	69:54	69:64	7	background
water	69:54	0:0	8	background
water	69:65	0:0	6	;
if	70:9	71:17	6	(! result)
cond	70:13	70:14	7	! result
op	70:13	0:0	8	!
water	70:14	0:0	8	result
stmts	71:12	71:17	7	
break	71:12	71:17	8	
water	77:12	0:0	6	output
op	77:18	0:0	6	.
water	77:19	0:0	6	opts
op	77:24	0:0	6	=
water	77:26	0:0	6	opts
water	77:30	0:0	6	;
water	78:12	0:0	6	result
op	78:19	0:0	6	=
call	78:21	78:53	6	write_one_file
arg	78:36	78:43	7	&output
op	78:36	0:0	8	&
water	78:37	0:0	8	output
arg	78:45	78:50	7	&copy
op	78:45	0:0	8	&
water	78:46	0:0	8	copy
arg	78:52	78:53	7	0
water	78:52	0:0	8	0
water	78:54	0:0	6	;
if	79:12	80:20	6	(! result)
cond	79:16	79:17	7	! result
op	79:16	0:0	8	!
water	79:17	0:0	8	result
stmts	80:15	80:20	7	
break	80:15	80:20	8	
water	84:12	0:0	6	result
op	84:19	0:0	6	=
call	84:21	84:69	6	compare_two_images
arg	84:40	84:45	7	image
water	84:40	0:0	8	image
arg	84:47	84:54	7	&output
op	84:47	0:0	8	&
water	84:48	0:0	8	output
arg	84:56	84:57	7	0
water	84:56	0:0	8	0
arg	84:59	84:69	7	background
water	84:59	0:0	8	background
water	84:70	0:0	6	;
if	85:12	86:20	6	(! result)
cond	85:16	85:17	7	! result
op	85:16	0:0	8	!
water	85:17	0:0	8	result
stmts	86:15	86:20	7	
break	86:15	86:20	8	
if	87:12	109:12	6	(( format & PNG_FORMAT_FLAG_LINEAR ) != 0 && ( format & PNG_FORMAT_FLAG_COLORMAP ) == 0)
cond	87:16	88:54	7	( format & PNG_FORMAT_FLAG_LINEAR ) != 0 && ( format & PNG_FORMAT_FLAG_COLORMAP ) == 0
water	87:16	0:0	8	(
water	87:17	0:0	8	format
op	87:24	0:0	8	&
water	87:26	0:0	8	PNG_FORMAT_FLAG_LINEAR
water	87:48	0:0	8	)
op	87:50	0:0	8	!=
water	87:53	0:0	8	0
op	87:55	0:0	8	&&
water	88:15	0:0	8	(
water	88:16	0:0	8	format
op	88:23	0:0	8	&
water	88:25	0:0	8	PNG_FORMAT_FLAG_COLORMAP
water	88:49	0:0	8	)
op	88:51	0:0	8	==
water	88:54	0:0	8	0
stmts	89:12	109:12	7	
water	89:12	0:0	8	{
water	92:15	0:0	8	output
op	92:21	0:0	8	.
water	92:22	0:0	8	opts
op	92:27	0:0	8	=
water	92:29	0:0	8	opts
water	92:33	0:0	8	;
water	93:15	0:0	8	result
op	93:22	0:0	8	=
call	93:24	93:56	8	write_one_file
arg	93:39	93:46	9	&output
op	93:39	0:0	10	&
water	93:40	0:0	10	output
arg	93:48	93:53	9	&copy
op	93:48	0:0	10	&
water	93:49	0:0	10	copy
arg	93:55	93:56	9	1
water	93:55	0:0	10	1
water	93:57	0:0	8	;
if	94:15	95:23	8	(! result)
cond	94:19	94:20	9	! result
op	94:19	0:0	10	!
water	94:20	0:0	10	result
stmts	95:18	95:23	9	
break	95:18	95:23	10	
water	105:15	0:0	8	result
op	105:22	0:0	8	=
call	105:24	106:28	8	compare_two_images
arg	105:43	105:48	9	image
water	105:43	0:0	10	image
arg	105:50	105:57	9	&output
op	105:50	0:0	10	&
water	105:51	0:0	10	output
arg	105:59	105:60	9	1
water	105:59	0:0	10	1
arg	106:18	106:28	9	background
water	106:18	0:0	10	background
water	106:29	0:0	8	;
if	107:15	108:23	8	(! result)
cond	107:19	107:20	9	! result
op	107:19	0:0	10	!
water	107:20	0:0	10	result
stmts	108:18	108:23	9	
break	108:18	108:23	10	
water	109:12	0:0	8	}
water	111:6	0:0	6	}
call	112:6	112:23	2	freeimage
arg	112:16	112:23	3	&output
op	112:16	0:0	4	&
water	112:17	0:0	4	output
water	112:24	0:0	2	;
water	113:3	0:0	2	}
call	114:3	114:18	2	freeimage
arg	114:13	114:18	3	&copy
op	114:13	0:0	4	&
water	114:14	0:0	4	copy
water	114:19	0:0	2	;
return	115:3	115:16	2	result
water	115:10	0:0	3	result

func	1:0	68:0	0	static int	generate_palette
params	2:16	0:0	1	
param	2:17	2:35	2	png_colorp	palette
param	2:37	2:52	2	png_bytep	trans
param	2:54	2:67	2	int	bit_depth
param	3:3	3:30	2	png_const_bytep	gamma_table
param	3:32	3:52	2	unsigned int *	colors
stmnts	14:3	67:3	1	
switch	14:3	67:3	2	(colors [ 0 ])
cond	14:11	14:19	3	colors [ 0 ]
water	14:11	0:0	4	colors
op	14:17	0:0	4	[
water	14:18	0:0	4	0
op	14:19	0:0	4	]
stmts	15:3	67:3	3	
water	15:3	0:0	4	{
label	16:6	16:13	4	default :
call	17:9	18:21	4	fprintf
arg	17:17	17:23	5	stderr
water	17:17	0:0	6	stderr
arg	17:25	17:68	5	"makepng: --colors=...: invalid count %u\n"
water	17:25	0:0	6	"makepng: --colors=...: invalid count %u\n"
arg	18:12	18:21	5	colors[0]
water	18:12	0:0	6	colors
op	18:18	0:0	6	[
water	18:19	0:0	6	0
op	18:20	0:0	6	]
water	18:22	0:0	4	;
call	19:9	19:15	4	exit
arg	19:14	19:15	5	1
water	19:14	0:0	6	1
water	19:16	0:0	4	;
label	20:6	20:12	4	case 1 :
call	21:9	22:23	4	set_color
arg	21:19	21:28	5	palette+0
water	21:19	0:0	6	palette
op	21:26	0:0	6	+
water	21:27	0:0	6	0
arg	21:30	21:37	5	trans+0
water	21:30	0:0	6	trans
op	21:35	0:0	6	+
water	21:36	0:0	6	0
arg	21:39	21:48	5	colors[1]
water	21:39	0:0	6	colors
op	21:45	0:0	6	[
water	21:46	0:0	6	1
op	21:47	0:0	6	]
arg	21:50	21:59	5	colors[1]
water	21:50	0:0	6	colors
op	21:56	0:0	6	[
water	21:57	0:0	6	1
op	21:58	0:0	6	]
arg	21:61	21:70	5	colors[1]
water	21:61	0:0	6	colors
op	21:67	0:0	6	[
water	21:68	0:0	6	1
op	21:69	0:0	6	]
arg	21:72	21:75	5	255
water	21:72	0:0	6	255
arg	22:12	22:23	5	gamma_table
water	22:12	0:0	6	gamma_table
water	22:24	0:0	4	;
return	23:9	23:17	4	1
water	23:16	0:0	5	1
label	24:6	24:12	4	case 2 :
call	25:9	26:34	4	set_color
arg	25:19	25:28	5	palette+0
water	25:19	0:0	6	palette
op	25:26	0:0	6	+
water	25:27	0:0	6	0
arg	25:30	25:37	5	trans+0
water	25:30	0:0	6	trans
op	25:35	0:0	6	+
water	25:36	0:0	6	0
arg	25:39	25:48	5	colors[1]
water	25:39	0:0	6	colors
op	25:45	0:0	6	[
water	25:46	0:0	6	1
op	25:47	0:0	6	]
arg	25:50	25:59	5	colors[1]
water	25:50	0:0	6	colors
op	25:56	0:0	6	[
water	25:57	0:0	6	1
op	25:58	0:0	6	]
arg	25:61	25:70	5	colors[1]
water	25:61	0:0	6	colors
op	25:67	0:0	6	[
water	25:68	0:0	6	1
op	25:69	0:0	6	]
arg	26:12	26:21	5	colors[2]
water	26:12	0:0	6	colors
op	26:18	0:0	6	[
water	26:19	0:0	6	2
op	26:20	0:0	6	]
arg	26:23	26:34	5	gamma_table
water	26:23	0:0	6	gamma_table
water	26:35	0:0	4	;
return	27:9	27:17	4	1
water	27:16	0:0	5	1
label	28:6	28:12	4	case 3 :
call	29:9	30:23	4	set_color
arg	29:19	29:28	5	palette+0
water	29:19	0:0	6	palette
op	29:26	0:0	6	+
water	29:27	0:0	6	0
arg	29:30	29:37	5	trans+0
water	29:30	0:0	6	trans
op	29:35	0:0	6	+
water	29:36	0:0	6	0
arg	29:39	29:48	5	colors[1]
water	29:39	0:0	6	colors
op	29:45	0:0	6	[
water	29:46	0:0	6	1
op	29:47	0:0	6	]
arg	29:50	29:59	5	colors[2]
water	29:50	0:0	6	colors
op	29:56	0:0	6	[
water	29:57	0:0	6	2
op	29:58	0:0	6	]
arg	29:61	29:70	5	colors[3]
water	29:61	0:0	6	colors
op	29:67	0:0	6	[
water	29:68	0:0	6	3
op	29:69	0:0	6	]
arg	29:72	29:75	5	255
water	29:72	0:0	6	255
arg	30:12	30:23	5	gamma_table
water	30:12	0:0	6	gamma_table
water	30:24	0:0	4	;
return	31:9	31:17	4	1
water	31:16	0:0	5	1
label	32:6	32:12	4	case 4 :
call	33:9	34:34	4	set_color
arg	33:19	33:28	5	palette+0
water	33:19	0:0	6	palette
op	33:26	0:0	6	+
water	33:27	0:0	6	0
arg	33:30	33:37	5	trans+0
water	33:30	0:0	6	trans
op	33:35	0:0	6	+
water	33:36	0:0	6	0
arg	33:39	33:48	5	colors[1]
water	33:39	0:0	6	colors
op	33:45	0:0	6	[
water	33:46	0:0	6	1
op	33:47	0:0	6	]
arg	33:50	33:59	5	colors[2]
water	33:50	0:0	6	colors
op	33:56	0:0	6	[
water	33:57	0:0	6	2
op	33:58	0:0	6	]
arg	33:61	33:70	5	colors[3]
water	33:61	0:0	6	colors
op	33:67	0:0	6	[
water	33:68	0:0	6	3
op	33:69	0:0	6	]
arg	34:12	34:21	5	colors[4]
water	34:12	0:0	6	colors
op	34:18	0:0	6	[
water	34:19	0:0	6	4
op	34:20	0:0	6	]
arg	34:23	34:34	5	gamma_table
water	34:23	0:0	6	gamma_table
water	34:35	0:0	4	;
return	35:9	35:17	4	1
water	35:16	0:0	5	1
label	36:6	36:12	4	case 0 :
if	37:9	42:9	4	(bit_depth == 1)
cond	37:13	37:26	5	bit_depth == 1
water	37:13	0:0	6	bit_depth
op	37:23	0:0	6	==
water	37:26	0:0	6	1
stmts	38:9	42:9	5	
water	38:9	0:0	6	{
call	39:12	39:67	6	set_color
arg	39:22	39:31	7	palette+0
water	39:22	0:0	8	palette
op	39:29	0:0	8	+
water	39:30	0:0	8	0
arg	39:33	39:40	7	trans+0
water	39:33	0:0	8	trans
op	39:38	0:0	8	+
water	39:39	0:0	8	0
arg	39:42	39:45	7	255
water	39:42	0:0	8	255
arg	39:47	39:48	7	0
water	39:47	0:0	8	0
arg	39:50	39:51	7	0
water	39:50	0:0	8	0
arg	39:53	39:54	7	0
water	39:53	0:0	8	0
arg	39:56	39:67	7	gamma_table
water	39:56	0:0	8	gamma_table
water	39:68	0:0	6	;
call	40:12	40:73	6	set_color
arg	40:22	40:31	7	palette+1
water	40:22	0:0	8	palette
op	40:29	0:0	8	+
water	40:30	0:0	8	1
arg	40:33	40:40	7	trans+1
water	40:33	0:0	8	trans
op	40:38	0:0	8	+
water	40:39	0:0	8	1
arg	40:42	40:45	7	255
water	40:42	0:0	8	255
arg	40:47	40:50	7	255
water	40:47	0:0	8	255
arg	40:52	40:55	7	255
water	40:52	0:0	8	255
arg	40:57	40:60	7	255
water	40:57	0:0	8	255
arg	40:62	40:73	7	gamma_table
water	40:62	0:0	8	gamma_table
water	40:74	0:0	6	;
return	41:12	41:20	6	2
water	41:19	0:0	7	2
water	42:9	0:0	6	}
else	43:9	66:9	4
stmts	44:9	66:9	5	
water	44:9	0:0	6	{
decl	45:12	45:51	6	unsigned int	size
op	45:30	0:0	6	=
water	45:32	0:0	6	1
water	45:33	0:0	6	U
op	45:35	0:0	6	<<
water	45:38	0:0	6	(
water	45:39	0:0	6	bit_depth
op	45:48	0:0	6	/
water	45:49	0:0	6	2
water	45:50	0:0	6	)
decl	46:12	46:33	6	unsigned int	x
water	46:26	0:0	6	,
decl	46:12	46:33	6	unsigned int	y
water	46:29	0:0	6	,
decl	46:12	46:33	6	unsigned int	ip
for	47:12	64:12	6	(x = 0 ;x < size;++ x)
forinit	47:17	47:20	7	x = 0 ;
water	47:17	0:0	8	x
op	47:18	0:0	8	=
water	47:19	0:0	8	0
water	47:20	0:0	8	;
cond	47:22	47:24	7	x < size
water	47:22	0:0	8	x
op	47:23	0:0	8	<
water	47:24	0:0	8	size
forexpr	47:30	47:32	7	++ x
op	47:30	0:0	8	++
water	47:32	0:0	8	x
stmts	47:35	64:12	7	
for	47:35	64:12	8	(y = 0 ;y < size;++ y)
forinit	47:40	47:43	9	y = 0 ;
water	47:40	0:0	10	y
op	47:41	0:0	10	=
water	47:42	0:0	10	0
water	47:43	0:0	10	;
cond	47:45	47:47	9	y < size
water	47:45	0:0	10	y
op	47:46	0:0	10	<
water	47:47	0:0	10	size
forexpr	47:53	47:55	9	++ y
op	47:53	0:0	10	++
water	47:55	0:0	10	y
stmts	48:12	64:12	9	
water	48:12	0:0	10	{
water	49:15	0:0	10	ip
op	49:18	0:0	10	=
water	49:20	0:0	10	x
op	49:22	0:0	10	+
water	49:24	0:0	10	(
water	49:25	0:0	10	size
op	49:30	0:0	10	*
water	49:32	0:0	10	y
water	49:33	0:0	10	)
water	49:34	0:0	10	;
water	54:18	0:0	10	(
call	54:19	54:35	10	interp
arg	54:26	54:27	11	x
water	54:26	0:0	12	x
arg	54:29	54:31	11	c1
water	54:29	0:0	12	c1
arg	54:33	54:35	11	c2
water	54:33	0:0	12	c2
op	54:37	0:0	10	*
water	54:39	0:0	10	y
op	54:41	0:0	10	+
water	54:43	0:0	10	(
water	54:44	0:0	10	size
op	54:48	0:0	10	-
water	54:49	0:0	10	y
water	54:50	0:0	10	)
call	54:52	54:70	10	*interp
arg	54:61	54:62	11	x
water	54:61	0:0	12	x
arg	54:64	54:66	11	c3
water	54:64	0:0	12	c3
arg	54:68	54:70	11	c4
water	54:68	0:0	12	c4
water	54:71	0:0	10	)
water	54:72	0:0	10	)
op	54:74	0:0	10	/
water	55:18	0:0	10	(
water	55:19	0:0	10	size
op	55:23	0:0	10	*
water	55:24	0:0	10	size
water	55:28	0:0	10	)
water	55:29	0:0	10	)
call	56:15	63:29	10	set_color
arg	56:25	56:35	11	palette+ip
water	56:25	0:0	12	palette
op	56:32	0:0	12	+
water	56:33	0:0	12	ip
arg	56:37	56:45	11	trans+ip
water	56:37	0:0	12	trans
op	56:42	0:0	12	+
water	56:43	0:0	12	ip
arg	58:18	58:52	11	xyinterp(x,y,0,255,0,255)
call	58:18	58:51	12	xyinterp
arg	58:27	58:28	13	x
water	58:27	0:0	14	x
arg	58:30	58:31	13	y
water	58:30	0:0	14	y
arg	58:35	58:36	13	0
water	58:35	0:0	14	0
arg	58:38	58:41	13	255
water	58:38	0:0	14	255
arg	58:45	58:46	13	0
water	58:45	0:0	14	0
arg	58:48	58:51	13	255
water	58:48	0:0	14	255
arg	59:18	59:52	11	xyinterp(x,y,255,0,0,255)
call	59:18	59:51	12	xyinterp
arg	59:27	59:28	13	x
water	59:27	0:0	14	x
arg	59:30	59:31	13	y
water	59:30	0:0	14	y
arg	59:33	59:36	13	255
water	59:33	0:0	14	255
arg	59:40	59:41	13	0
water	59:40	0:0	14	0
arg	59:45	59:46	13	0
water	59:45	0:0	14	0
arg	59:48	59:51	13	255
water	59:48	0:0	14	255
arg	60:18	60:52	11	xyinterp(x,y,0,0,255,255)
call	60:18	60:51	12	xyinterp
arg	60:27	60:28	13	x
water	60:27	0:0	14	x
arg	60:30	60:31	13	y
water	60:30	0:0	14	y
arg	60:35	60:36	13	0
water	60:35	0:0	14	0
arg	60:40	60:41	13	0
water	60:40	0:0	14	0
arg	60:43	60:46	13	255
water	60:43	0:0	14	255
arg	60:48	60:51	13	255
water	60:48	0:0	14	255
arg	62:18	62:52	11	xyinterp(x,y,0,102,204,255)
call	62:18	62:51	12	xyinterp
arg	62:27	62:28	13	x
water	62:27	0:0	14	x
arg	62:30	62:31	13	y
water	62:30	0:0	14	y
arg	62:35	62:36	13	0
water	62:35	0:0	14	0
arg	62:38	62:41	13	102
water	62:38	0:0	14	102
arg	62:43	62:46	13	204
water	62:43	0:0	14	204
arg	62:48	62:51	13	255
water	62:48	0:0	14	255
arg	63:18	63:29	11	gamma_table
water	63:18	0:0	12	gamma_table
water	63:30	0:0	10	;
water	64:12	0:0	10	}
return	65:12	65:23	6	ip+1
water	65:19	0:0	7	ip
op	65:21	0:0	7	+
water	65:22	0:0	7	1
water	66:9	0:0	6	}
water	67:3	0:0	4	}

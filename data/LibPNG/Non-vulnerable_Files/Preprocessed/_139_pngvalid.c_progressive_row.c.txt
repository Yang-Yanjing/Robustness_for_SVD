func	1:12	52:0	0	PNGCBAPI	progressive_row
params	2:15	0:0	1	
param	2:16	2:32	2	png_structp	ppIn
param	2:34	2:51	2	png_bytep	new_row
param	2:53	2:66	2	png_uint_32	y
param	2:68	2:76	2	int	pass
stmnts	0:0	50:64	1	
decl	4:3	4:30	2	png_const_structp	pp
op	4:24	0:0	2	=
water	4:26	0:0	2	ppIn
water	5:3	0:0	2	PNG_CONST
water	5:13	0:0	2	standard_display
op	5:30	0:0	2	*
water	5:31	0:0	2	dp
op	5:34	0:0	2	=
call	5:36	6:33	2	voidcast
arg	5:45	5:62	3	standard_display*
water	5:45	0:0	4	standard_display
op	5:61	0:0	4	*
arg	6:6	6:33	3	png_get_progressive_ptr(pp)
call	6:6	6:32	4	png_get_progressive_ptr
arg	6:30	6:32	5	pp
water	6:30	0:0	6	pp
water	6:34	0:0	2	;
if	12:3	45:3	2	(new_row != NULL)
cond	12:7	12:18	3	new_row != NULL
water	12:7	0:0	4	new_row
op	12:15	0:0	4	!=
water	12:18	0:0	4	NULL
stmts	13:3	45:3	3	
water	13:3	0:0	4	{
decl	14:6	14:19	4	png_bytep	row
if	18:6	28:6	4	(dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7)
cond	18:10	18:52	5	dp -> do_interlace && dp -> interlace_type == PNG_INTERLACE_ADAM7
water	18:10	0:0	6	dp
op	18:12	0:0	6	->
water	18:14	0:0	6	do_interlace
op	18:27	0:0	6	&&
water	18:30	0:0	6	dp
op	18:32	0:0	6	->
water	18:34	0:0	6	interlace_type
op	18:49	0:0	6	==
water	18:52	0:0	6	PNG_INTERLACE_ADAM7
stmts	19:6	28:6	5	
water	19:6	0:0	6	{
if	22:9	23:65	6	(y !=png_get_current_row_number (pp ))
cond	22:13	22:47	7	y !=png_get_current_row_number (pp )
water	22:13	0:0	8	y
op	22:15	0:0	8	!=
call	22:18	22:47	8	png_get_current_row_number
arg	22:45	22:47	9	pp
water	22:45	0:0	10	pp
stmts	23:12	23:65	7	
call	23:12	23:64	8	png_error
arg	23:22	23:24	9	pp
water	23:22	0:0	10	pp
arg	23:26	23:64	9	"png_get_current_row_number is broken"
water	23:26	0:0	10	"png_get_current_row_number is broken"
water	23:65	0:0	8	;
if	24:9	25:66	6	(pass !=png_get_current_pass_number (pp ))
cond	24:13	24:51	7	pass !=png_get_current_pass_number (pp )
water	24:13	0:0	8	pass
op	24:18	0:0	8	!=
call	24:21	24:51	8	png_get_current_pass_number
arg	24:49	24:51	9	pp
water	24:49	0:0	10	pp
stmts	25:12	25:66	7	
call	25:12	25:65	8	png_error
arg	25:22	25:24	9	pp
water	25:22	0:0	10	pp
arg	25:26	25:65	9	"png_get_current_pass_number is broken"
water	25:26	0:0	10	"png_get_current_pass_number is broken"
water	25:66	0:0	8	;
water	27:9	0:0	6	y
op	27:11	0:0	6	=
call	27:13	27:42	6	PNG_ROW_FROM_PASS_ROW
arg	27:35	27:36	7	y
water	27:35	0:0	8	y
arg	27:38	27:42	7	pass
water	27:38	0:0	8	pass
water	27:43	0:0	6	;
water	28:6	0:0	6	}
if	30:6	31:63	4	(y >= dp -> h)
cond	30:10	30:19	5	y >= dp -> h
water	30:10	0:0	6	y
op	30:12	0:0	6	>=
water	30:15	0:0	6	dp
op	30:17	0:0	6	->
water	30:19	0:0	6	h
stmts	31:9	31:63	5	
call	31:9	31:62	6	png_error
arg	31:19	31:21	7	pp
water	31:19	0:0	8	pp
arg	31:23	31:62	7	"invalid y to progressive row callback"
water	31:23	0:0	8	"invalid y to progressive row callback"
water	31:63	0:0	6	;
water	32:6	0:0	4	row
op	32:10	0:0	4	=
call	32:12	32:44	4	store_image_row
arg	32:28	32:34	5	dp->ps
water	32:28	0:0	6	dp
op	32:30	0:0	6	->
water	32:32	0:0	6	ps
arg	32:36	32:38	5	pp
water	32:36	0:0	6	pp
arg	32:40	32:41	5	0
water	32:40	0:0	6	0
arg	32:43	32:44	5	y
water	32:43	0:0	6	y
water	32:45	0:0	4	;
if	35:6	41:6	4	(dp -> do_interlace)
cond	35:10	35:14	5	dp -> do_interlace
water	35:10	0:0	6	dp
op	35:12	0:0	6	->
water	35:14	0:0	6	do_interlace
stmts	36:6	41:6	5	
water	36:6	0:0	6	{
if	37:9	38:70	6	(dp -> interlace_type == PNG_INTERLACE_ADAM7)
cond	37:13	37:35	7	dp -> interlace_type == PNG_INTERLACE_ADAM7
water	37:13	0:0	8	dp
op	37:15	0:0	8	->
water	37:17	0:0	8	interlace_type
op	37:32	0:0	8	==
water	37:35	0:0	8	PNG_INTERLACE_ADAM7
stmts	38:12	38:70	7	
call	38:12	38:69	8	deinterlace_row
arg	38:28	38:31	9	row
water	38:28	0:0	10	row
arg	38:33	38:40	9	new_row
water	38:33	0:0	10	new_row
arg	38:42	38:56	9	dp->pixel_size
water	38:42	0:0	10	dp
op	38:44	0:0	10	->
water	38:46	0:0	10	pixel_size
arg	38:58	38:63	9	dp->w
water	38:58	0:0	10	dp
op	38:60	0:0	10	->
water	38:62	0:0	10	w
arg	38:65	38:69	9	pass
water	38:65	0:0	10	pass
water	38:70	0:0	8	;
else	39:9	40:58	6
stmts	40:12	40:58	7	
call	40:12	40:57	8	row_copy
arg	40:21	40:24	9	row
water	40:21	0:0	10	row
arg	40:26	40:33	9	new_row
water	40:26	0:0	10	new_row
arg	40:35	40:57	9	dp->pixel_size*dp->w
water	40:35	0:0	10	dp
op	40:37	0:0	10	->
water	40:39	0:0	10	pixel_size
op	40:50	0:0	10	*
water	40:52	0:0	10	dp
op	40:54	0:0	10	->
water	40:56	0:0	10	w
water	40:58	0:0	8	;
water	41:6	0:0	6	}
else	42:6	43:54	4
stmts	43:9	43:54	5	
call	43:9	43:53	6	png_progressive_combine_row
arg	43:37	43:39	7	pp
water	43:37	0:0	8	pp
arg	43:41	43:44	7	row
water	43:41	0:0	8	row
arg	43:46	43:53	7	new_row
water	43:46	0:0	8	new_row
water	43:54	0:0	6	;
water	45:3	0:0	4	}
else	47:3	50:64	2
stmts	47:8	50:64	3	
if	47:8	50:64	4	(dp -> interlace_type == PNG_INTERLACE_ADAM7 &&PNG_ROW_IN_INTERLACE_PASS (y ,pass ) &&PNG_PASS_COLS (dp -> w ,pass ) > 0)
cond	47:12	49:36	5	dp -> interlace_type == PNG_INTERLACE_ADAM7 &&PNG_ROW_IN_INTERLACE_PASS (y ,pass ) &&PNG_PASS_COLS (dp -> w ,pass ) > 0
water	47:12	0:0	6	dp
op	47:14	0:0	6	->
water	47:16	0:0	6	interlace_type
op	47:31	0:0	6	==
water	47:34	0:0	6	PNG_INTERLACE_ADAM7
op	47:54	0:0	6	&&
call	48:7	48:40	6	PNG_ROW_IN_INTERLACE_PASS
arg	48:33	48:34	7	y
water	48:33	0:0	8	y
arg	48:36	48:40	7	pass
water	48:36	0:0	8	pass
op	48:42	0:0	6	&&
call	49:7	49:32	6	PNG_PASS_COLS
arg	49:21	49:26	7	dp->w
water	49:21	0:0	8	dp
op	49:23	0:0	8	->
water	49:25	0:0	8	w
arg	49:28	49:32	7	pass
water	49:28	0:0	8	pass
op	49:34	0:0	6	>
water	49:36	0:0	6	0
stmts	50:6	50:64	5	
call	50:6	50:63	6	png_error
arg	50:16	50:18	7	pp
water	50:16	0:0	8	pp
arg	50:20	50:63	7	"missing row in progressive de-interlacing"
water	50:20	0:0	8	"missing row in progressive de-interlacing"
water	50:64	0:0	6	;

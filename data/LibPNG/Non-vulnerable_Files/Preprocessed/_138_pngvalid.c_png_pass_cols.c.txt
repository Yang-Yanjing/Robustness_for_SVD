func	1:0	16:0	0	static png_uint_32	png_pass_cols
params	2:13	0:0	1	
param	2:14	2:31	2	png_uint_32	width
param	2:33	2:41	2	int	pass
stmnts	0:0	15:14	1	
decl	4:3	4:31	2	png_uint_32	tiles
op	4:21	0:0	2	=
water	4:23	0:0	2	width
op	4:28	0:0	2	>>
water	4:30	0:0	2	3
decl	5:3	5:23	2	png_uint_32	cols
op	5:20	0:0	2	=
water	5:22	0:0	2	0
decl	6:3	6:20	2	unsigned int	x
water	6:17	0:0	2	,
decl	6:3	6:20	2	unsigned int	y
water	7:3	0:0	2	width
op	7:9	0:0	2	&=
water	7:12	0:0	2	7
water	7:13	0:0	2	;
op	8:3	0:0	2	++
water	8:5	0:0	2	pass
water	8:9	0:0	2	;
for	9:3	14:3	2	(x = 0 ;x < 8;++ x)
forinit	9:8	9:11	3	x = 0 ;
water	9:8	0:0	4	x
op	9:9	0:0	4	=
water	9:10	0:0	4	0
water	9:11	0:0	4	;
cond	9:13	9:15	3	x < 8
water	9:13	0:0	4	x
op	9:14	0:0	4	<
water	9:15	0:0	4	8
forexpr	9:18	9:20	3	++ x
op	9:18	0:0	4	++
water	9:20	0:0	4	x
stmts	9:23	14:3	3	
for	9:23	14:3	4	(y = 0 ;y < 8;++ y)
forinit	9:28	9:31	5	y = 0 ;
water	9:28	0:0	6	y
op	9:29	0:0	6	=
water	9:30	0:0	6	0
water	9:31	0:0	6	;
cond	9:33	9:35	5	y < 8
water	9:33	0:0	6	y
op	9:34	0:0	6	<
water	9:35	0:0	6	8
forexpr	9:38	9:40	5	++ y
op	9:38	0:0	6	++
water	9:40	0:0	6	y
stmts	9:43	14:3	5	
if	9:43	14:3	6	(adam7 [ y ] [ x ] == pass)
cond	9:47	9:62	7	adam7 [ y ] [ x ] == pass
water	9:47	0:0	8	adam7
op	9:52	0:0	8	[
water	9:53	0:0	8	y
op	9:54	0:0	8	]
op	9:55	0:0	8	[
water	9:56	0:0	8	x
op	9:57	0:0	8	]
op	9:59	0:0	8	==
water	9:62	0:0	8	pass
stmts	10:3	14:3	7	
water	10:3	0:0	8	{
water	11:6	0:0	8	cols
op	11:11	0:0	8	+=
water	11:14	0:0	8	tiles
water	11:19	0:0	8	;
if	12:6	12:27	8	(x < width)
cond	12:10	12:14	9	x < width
water	12:10	0:0	10	x
op	12:12	0:0	10	<
water	12:14	0:0	10	width
stmts	12:21	12:27	9	
op	12:21	0:0	10	++
water	12:23	0:0	10	cols
water	12:27	0:0	10	;
break	13:6	13:11	8	
water	14:3	0:0	8	}
return	15:3	15:14	2	cols
water	15:10	0:0	3	cols

func	2:0	33:0	0	int	main
params	2:8	0:0	1	
param	2:9	2:17	2	int	argc
param	2:19	2:30	2	char * *	argv
stmnts	0:0	32:13	1	
decl	4:3	4:14	2	int	err
op	4:11	0:0	2	=
water	4:13	0:0	2	0
call	5:3	5:76	2	printf
arg	5:10	5:76	3	"/* adler32, crc32, MD5[16], intent, date, length, file-name */\n"
water	5:10	0:0	4	"/* adler32, crc32, MD5[16], intent, date, length, file-name */\n"
water	5:77	0:0	2	;
if	6:3	21:3	2	(argc > 1)
cond	6:7	6:14	3	argc > 1
water	6:7	0:0	4	argc
op	6:12	0:0	4	>
water	6:14	0:0	4	1
stmts	7:3	21:3	3	
water	7:3	0:0	4	{
decl	8:6	8:11	4	int	i
for	9:6	20:6	4	(i = 1 ;i < argc;++ i)
forinit	9:11	9:14	5	i = 1 ;
water	9:11	0:0	6	i
op	9:12	0:0	6	=
water	9:13	0:0	6	1
water	9:14	0:0	6	;
cond	9:16	9:18	5	i < argc
water	9:16	0:0	6	i
op	9:17	0:0	6	<
water	9:18	0:0	6	argc
forexpr	9:24	9:26	5	++ i
op	9:24	0:0	6	++
water	9:26	0:0	6	i
stmts	10:6	20:6	5	
water	10:6	0:0	6	{
decl	11:9	11:40	6	FILE	*ip
op	11:18	0:0	6	=
call	11:20	11:39	7	fopen
arg	11:26	11:33	8	argv[i]
water	11:26	0:0	9	argv
op	11:30	0:0	9	[
water	11:31	0:0	9	i
op	11:32	0:0	9	]
arg	11:35	11:39	8	"rb"
water	11:35	0:0	9	"rb"
if	12:9	18:9	6	(ip == NULL || !read_one_file (ip ,argv [ i ] ))
cond	12:13	12:53	7	ip == NULL || !read_one_file (ip ,argv [ i ] )
water	12:13	0:0	8	ip
op	12:16	0:0	8	==
water	12:19	0:0	8	NULL
op	12:24	0:0	8	||
op	12:27	0:0	8	!
call	12:28	12:53	8	read_one_file
arg	12:42	12:44	9	ip
water	12:42	0:0	10	ip
arg	12:46	12:53	9	argv[i]
water	12:46	0:0	10	argv
op	12:50	0:0	10	[
water	12:51	0:0	10	i
op	12:52	0:0	10	]
stmts	13:9	18:9	7	
water	13:9	0:0	8	{
water	14:12	0:0	8	err
op	14:16	0:0	8	=
water	14:18	0:0	8	1
water	14:19	0:0	8	;
call	15:12	15:26	8	perror
arg	15:19	15:26	9	argv[i]
water	15:19	0:0	10	argv
op	15:23	0:0	10	[
water	15:24	0:0	10	i
op	15:25	0:0	10	]
water	15:27	0:0	8	;
call	16:12	16:55	8	fprintf
arg	16:20	16:26	9	stderr
water	16:20	0:0	10	stderr
arg	16:28	16:46	9	"%s: read error\n"
water	16:28	0:0	10	"%s: read error\n"
arg	16:48	16:55	9	argv[i]
water	16:48	0:0	10	argv
op	16:52	0:0	10	[
water	16:53	0:0	10	i
op	16:54	0:0	10	]
water	16:56	0:0	8	;
call	17:12	17:47	8	printf
arg	17:19	17:38	9	"/* ERROR: %s */\n"
water	17:19	0:0	10	"/* ERROR: %s */\n"
arg	17:40	17:47	9	argv[i]
water	17:40	0:0	10	argv
op	17:44	0:0	10	[
water	17:45	0:0	10	i
op	17:46	0:0	10	]
water	17:48	0:0	8	;
water	18:9	0:0	8	}
water	19:9	0:0	6	(
water	19:10	0:0	6	void
water	19:14	0:0	6	)
call	19:15	19:24	6	fclose
arg	19:22	19:24	7	ip
water	19:22	0:0	8	ip
water	19:25	0:0	6	;
water	20:6	0:0	6	}
water	21:3	0:0	4	}
else	22:3	31:3	2
stmts	23:3	31:3	3	
water	23:3	0:0	4	{
if	24:6	30:6	4	(!read_one_file (stdin ,"-" ))
cond	24:10	24:35	5	!read_one_file (stdin ,"-" )
op	24:10	0:0	6	!
call	24:11	24:35	6	read_one_file
arg	24:25	24:30	7	stdin
water	24:25	0:0	8	stdin
arg	24:32	24:35	7	"-"
water	24:32	0:0	8	"-"
stmts	25:6	30:6	5	
water	25:6	0:0	6	{
water	26:9	0:0	6	err
op	26:13	0:0	6	=
water	26:15	0:0	6	1
water	26:16	0:0	6	;
call	27:9	27:23	6	perror
arg	27:16	27:23	7	"stdin"
water	27:16	0:0	8	"stdin"
water	27:24	0:0	6	;
call	28:9	28:46	6	fprintf
arg	28:17	28:23	7	stderr
water	28:17	0:0	8	stderr
arg	28:25	28:46	7	"stdin: read error\n"
water	28:25	0:0	8	"stdin: read error\n"
water	28:47	0:0	6	;
call	29:9	29:38	6	printf
arg	29:16	29:38	7	"/* ERROR: stdin */\n"
water	29:16	0:0	8	"/* ERROR: stdin */\n"
water	29:39	0:0	6	;
water	30:6	0:0	6	}
water	31:3	0:0	4	}
return	32:3	32:13	2	err
water	32:10	0:0	3	err

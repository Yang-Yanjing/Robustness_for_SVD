func	1:0	114:0	0	static int	png_have_neon
params	2:13	0:0	1	
param	2:14	2:33	2	png_structp	png_ptr
stmnts	0:0	113:11	1	
decl	4:3	4:41	2	FILE	*f
op	4:11	0:0	2	=
call	4:13	4:40	3	fopen
arg	4:19	4:34	4	"/proc/cpuinfo"
water	4:19	0:0	5	"/proc/cpuinfo"
arg	4:36	4:40	4	"rb"
water	4:36	0:0	5	"rb"
if	5:3	108:3	2	(f != NULL)
cond	5:7	5:12	3	f != NULL
water	5:7	0:0	4	f
op	5:9	0:0	4	!=
water	5:12	0:0	4	NULL
stmts	6:3	108:3	3	
water	6:3	0:0	4	{
water	10:6	0:0	4	static
water	10:13	0:0	4	const
water	10:19	0:0	4	char
water	10:24	0:0	4	ch_feature
op	10:34	0:0	4	[
op	10:35	0:0	4	]
op	10:37	0:0	4	=
water	10:39	0:0	4	{
water	10:41	0:0	4	70
water	10:43	0:0	4	,
water	10:45	0:0	4	69
water	10:47	0:0	4	,
water	10:49	0:0	4	65
water	10:51	0:0	4	,
water	10:53	0:0	4	84
water	10:55	0:0	4	,
water	10:57	0:0	4	85
water	10:59	0:0	4	,
water	10:61	0:0	4	82
water	10:63	0:0	4	,
water	10:65	0:0	4	69
water	10:67	0:0	4	,
water	10:69	0:0	4	83
water	10:72	0:0	4	}
water	10:73	0:0	4	;
water	11:6	0:0	4	static
water	11:13	0:0	4	const
water	11:19	0:0	4	char
water	11:24	0:0	4	ch_neon
op	11:31	0:0	4	[
op	11:32	0:0	4	]
op	11:34	0:0	4	=
water	11:36	0:0	4	{
water	11:38	0:0	4	78
water	11:40	0:0	4	,
water	11:42	0:0	4	69
water	11:44	0:0	4	,
water	11:46	0:0	4	79
water	11:48	0:0	4	,
water	11:50	0:0	4	78
water	11:53	0:0	4	}
water	11:54	0:0	4	;
enum	12:6	15:6	4	<anonymous_12:6>
water	14:9	0:0	5	StartLine
water	14:18	0:0	5	,
water	14:20	0:0	5	Feature
water	14:27	0:0	5	,
water	14:29	0:0	5	Colon
water	14:34	0:0	5	,
water	14:36	0:0	5	StartTag
water	14:44	0:0	5	,
water	14:46	0:0	5	Neon
water	14:50	0:0	5	,
water	14:52	0:0	5	HaveNeon
water	14:60	0:0	5	,
water	14:62	0:0	5	SkipTag
water	14:69	0:0	5	,
water	14:71	0:0	5	SkipLine
decl	12:6	15:14	4	<anonymous_12:6>	state
decl	16:6	16:17	4	int	counter
for	17:6	107:6	4	(state = StartLine , counter = 0 ;;)
forinit	17:11	17:37	5	state = StartLine , counter = 0 ;
water	17:11	0:0	6	state
op	17:16	0:0	6	=
water	17:17	0:0	6	StartLine
water	17:26	0:0	6	,
water	17:28	0:0	6	counter
op	17:35	0:0	6	=
water	17:36	0:0	6	0
water	17:37	0:0	6	;
cond	0:0	0:0	5	
forexpr	0:0	0:0	5	
stmts	18:6	107:6	5	
water	18:6	0:0	6	{
decl	19:9	19:26	6	int	ch
op	19:16	0:0	6	=
call	19:18	19:25	7	fgetc
arg	19:24	19:25	8	f
water	19:24	0:0	9	f
if	20:9	27:9	6	(ch == EOF)
cond	20:13	20:19	7	ch == EOF
water	20:13	0:0	8	ch
op	20:16	0:0	8	==
water	20:19	0:0	8	EOF
stmts	21:9	27:9	7	
water	21:9	0:0	8	{
call	25:12	25:20	8	fclose
arg	25:19	25:20	9	f
water	25:19	0:0	10	f
water	25:21	0:0	8	;
return	26:12	26:20	8	0
water	26:19	0:0	9	0
water	27:9	0:0	8	}
switch	28:9	106:9	6	(state)
cond	28:17	28:17	7	state
water	28:17	0:0	8	state
stmts	29:9	106:9	7	
water	29:9	0:0	8	{
label	30:12	30:26	8	case StartLine :
if	32:15	33:23	8	(ch <= 32)
cond	32:19	32:25	9	ch <= 32
water	32:19	0:0	10	ch
op	32:22	0:0	10	<=
water	32:25	0:0	10	32
stmts	33:18	33:23	9	
break	33:18	33:23	10	
water	34:15	0:0	8	counter
op	34:22	0:0	8	=
water	34:23	0:0	8	0
water	34:24	0:0	8	;
water	35:15	0:0	8	state
op	35:21	0:0	8	=
water	35:23	0:0	8	Feature
water	35:30	0:0	8	;
label	37:12	37:24	8	case Feature :
if	39:15	44:15	8	(( ch & ~0x20 ) == ch_feature [ counter ])
cond	39:19	39:53	9	( ch & ~0x20 ) == ch_feature [ counter ]
water	39:19	0:0	10	(
water	39:20	0:0	10	ch
op	39:23	0:0	10	&
water	39:25	0:0	10	~0x20
water	39:30	0:0	10	)
op	39:32	0:0	10	==
water	39:35	0:0	10	ch_feature
op	39:45	0:0	10	[
water	39:46	0:0	10	counter
op	39:53	0:0	10	]
stmts	40:15	44:15	9	
water	40:15	0:0	10	{
if	41:18	42:34	10	(++ counter == ( sizeof ch_feature ))
cond	41:22	41:53	11	++ counter == ( sizeof ch_feature )
op	41:22	0:0	12	++
water	41:24	0:0	12	counter
op	41:32	0:0	12	==
water	41:35	0:0	12	(
op	41:36	0:0	12	sizeof
water	41:43	0:0	12	ch_feature
water	41:53	0:0	12	)
stmts	42:21	42:34	11	
water	42:21	0:0	12	state
op	42:27	0:0	12	=
water	42:29	0:0	12	Colon
water	42:34	0:0	12	;
break	43:18	43:23	10	
water	44:15	0:0	10	}
water	46:15	0:0	8	state
op	46:21	0:0	8	=
water	46:23	0:0	8	SkipLine
water	46:31	0:0	8	;
label	48:12	48:25	8	case SkipLine :
label	49:12	49:20	8	skipLine :
if	51:15	52:23	8	(ch != 10 && ch != 13)
cond	51:19	51:37	9	ch != 10 && ch != 13
water	51:19	0:0	10	ch
op	51:22	0:0	10	!=
water	51:25	0:0	10	10
op	51:28	0:0	10	&&
water	51:31	0:0	10	ch
op	51:34	0:0	10	!=
water	51:37	0:0	10	13
stmts	52:18	52:23	9	
break	52:18	52:23	10	
water	53:15	0:0	8	state
op	53:21	0:0	8	=
water	53:23	0:0	8	StartLine
water	53:32	0:0	8	;
break	54:15	54:20	8	
label	55:12	55:22	8	case Colon :
if	57:15	58:23	8	(ch == 32 || ch == 9)
cond	57:19	57:37	9	ch == 32 || ch == 9
water	57:19	0:0	10	ch
op	57:22	0:0	10	==
water	57:25	0:0	10	32
op	57:28	0:0	10	||
water	57:31	0:0	10	ch
op	57:34	0:0	10	==
water	57:37	0:0	10	9
stmts	58:18	58:23	9	
break	58:18	58:23	10	
if	59:15	63:15	8	(ch == 58)
cond	59:19	59:25	9	ch == 58
water	59:19	0:0	10	ch
op	59:22	0:0	10	==
water	59:25	0:0	10	58
stmts	60:15	63:15	9	
water	60:15	0:0	10	{
water	61:18	0:0	10	state
op	61:24	0:0	10	=
water	61:26	0:0	10	StartTag
water	61:34	0:0	10	;
break	62:18	62:23	10	
water	63:15	0:0	10	}
water	67:15	0:0	8	state
op	67:21	0:0	8	=
water	67:23	0:0	8	SkipLine
water	67:31	0:0	8	;
goto	68:15	68:28	8	skipLine
water	68:20	0:0	9	skipLine
label	69:12	69:25	8	case StartTag :
if	71:15	72:23	8	(ch == 32 || ch == 9)
cond	71:19	71:37	9	ch == 32 || ch == 9
water	71:19	0:0	10	ch
op	71:22	0:0	10	==
water	71:25	0:0	10	32
op	71:28	0:0	10	||
water	71:31	0:0	10	ch
op	71:34	0:0	10	==
water	71:37	0:0	10	9
stmts	72:18	72:23	9	
break	72:18	72:23	10	
water	73:15	0:0	8	state
op	73:21	0:0	8	=
water	73:23	0:0	8	Neon
water	73:27	0:0	8	;
water	74:15	0:0	8	counter
op	74:23	0:0	8	=
water	74:25	0:0	8	0
water	74:26	0:0	8	;
label	76:12	76:21	8	case Neon :
if	78:15	83:15	8	(( ch & ~0x20 ) == ch_neon [ counter ])
cond	78:19	78:50	9	( ch & ~0x20 ) == ch_neon [ counter ]
water	78:19	0:0	10	(
water	78:20	0:0	10	ch
op	78:23	0:0	10	&
water	78:25	0:0	10	~0x20
water	78:30	0:0	10	)
op	78:32	0:0	10	==
water	78:35	0:0	10	ch_neon
op	78:42	0:0	10	[
water	78:43	0:0	10	counter
op	78:50	0:0	10	]
stmts	79:15	83:15	9	
water	79:15	0:0	10	{
if	80:18	81:37	10	(++ counter == ( sizeof ch_neon ))
cond	80:22	80:50	11	++ counter == ( sizeof ch_neon )
op	80:22	0:0	12	++
water	80:24	0:0	12	counter
op	80:32	0:0	12	==
water	80:35	0:0	12	(
op	80:36	0:0	12	sizeof
water	80:43	0:0	12	ch_neon
water	80:50	0:0	12	)
stmts	81:21	81:37	11	
water	81:21	0:0	12	state
op	81:27	0:0	12	=
water	81:29	0:0	12	HaveNeon
water	81:37	0:0	12	;
break	82:18	82:23	10	
water	83:15	0:0	10	}
water	84:15	0:0	8	state
op	84:21	0:0	8	=
water	84:23	0:0	8	SkipTag
water	84:30	0:0	8	;
label	86:12	86:24	8	case SkipTag :
if	88:15	89:35	8	(ch == 10 || ch == 13)
cond	88:19	88:37	9	ch == 10 || ch == 13
water	88:19	0:0	10	ch
op	88:22	0:0	10	==
water	88:25	0:0	10	10
op	88:28	0:0	10	||
water	88:31	0:0	10	ch
op	88:34	0:0	10	==
water	88:37	0:0	10	13
stmts	89:18	89:35	9	
water	89:18	0:0	10	state
op	89:24	0:0	10	=
water	89:26	0:0	10	StartLine
water	89:35	0:0	10	;
else	90:15	91:34	8
stmts	90:20	91:34	9	
if	90:20	91:34	10	(ch == 32 || ch == 9)
cond	90:24	90:42	11	ch == 32 || ch == 9
water	90:24	0:0	12	ch
op	90:27	0:0	12	==
water	90:30	0:0	12	32
op	90:33	0:0	12	||
water	90:36	0:0	12	ch
op	90:39	0:0	12	==
water	90:42	0:0	12	9
stmts	91:18	91:34	11	
water	91:18	0:0	12	state
op	91:24	0:0	12	=
water	91:26	0:0	12	StartTag
water	91:34	0:0	12	;
break	92:15	92:20	8	
label	93:12	93:25	8	case HaveNeon :
if	97:15	101:15	8	(ch == 10 || ch == 13 || ch == 32 || ch == 9)
cond	97:19	97:61	9	ch == 10 || ch == 13 || ch == 32 || ch == 9
water	97:19	0:0	10	ch
op	97:22	0:0	10	==
water	97:25	0:0	10	10
op	97:28	0:0	10	||
water	97:31	0:0	10	ch
op	97:34	0:0	10	==
water	97:37	0:0	10	13
op	97:40	0:0	10	||
water	97:43	0:0	10	ch
op	97:46	0:0	10	==
water	97:49	0:0	10	32
op	97:52	0:0	10	||
water	97:55	0:0	10	ch
op	97:58	0:0	10	==
water	97:61	0:0	10	9
stmts	98:15	101:15	9	
water	98:15	0:0	10	{
call	99:18	99:26	10	fclose
arg	99:25	99:26	11	f
water	99:25	0:0	12	f
water	99:27	0:0	10	;
return	100:18	100:26	10	1
water	100:25	0:0	11	1
water	101:15	0:0	10	}
water	102:15	0:0	8	state
op	102:21	0:0	8	=
water	102:23	0:0	8	SkipTag
water	102:30	0:0	8	;
break	103:15	103:20	8	
label	104:12	104:19	8	default :
call	105:15	105:71	8	png_error
arg	105:25	105:32	9	png_ptr
water	105:25	0:0	10	png_ptr
arg	105:34	105:71	9	"png_have_neon: internal error (bug)"
water	105:34	0:0	10	"png_have_neon: internal error (bug)"
water	105:72	0:0	8	;
water	106:9	0:0	8	}
water	107:6	0:0	6	}
water	108:3	0:0	4	}
else	110:3	111:55	2
stmts	111:6	111:55	3	
call	111:6	111:54	4	png_warning
arg	111:18	111:25	5	png_ptr
water	111:18	0:0	6	png_ptr
arg	111:27	111:54	5	"/proc/cpuinfo open failed"
water	111:27	0:0	6	"/proc/cpuinfo open failed"
water	111:55	0:0	4	;
return	113:3	113:11	2	0
water	113:10	0:0	3	0

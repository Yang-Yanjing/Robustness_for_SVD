func	2:0	27:0	0	BOOL	InitBitmap
params	2:16	0:0	1	
param	2:17	2:30	2	BYTE *	pDiData
param	2:32	2:45	2	int	cxWinSize
param	2:47	2:60	2	int	cyWinSize
stmnts	0:0	26:15	1	
decl	4:4	4:13	2	BYTE	*dst
decl	5:4	5:17	2	int	x
water	5:9	0:0	2	,
decl	5:4	5:17	2	int	y
water	5:12	0:0	2	,
decl	5:4	5:17	2	int	col
water	7:4	0:0	2	dst
op	7:8	0:0	2	=
water	7:10	0:0	2	pDiData
water	7:17	0:0	2	;
for	8:4	25:4	2	(y = 0 ;y < cyWinSize;y ++)
forinit	8:9	8:14	3	y = 0 ;
water	8:9	0:0	4	y
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	y < cyWinSize
water	8:16	0:0	4	y
op	8:18	0:0	4	<
water	8:20	0:0	4	cyWinSize
forexpr	8:31	8:32	3	y ++
water	8:31	0:0	4	y
op	8:32	0:0	4	++
stmts	9:4	25:4	3	
water	9:4	0:0	4	{
water	10:8	0:0	4	col
op	10:12	0:0	4	=
water	10:14	0:0	4	0
water	10:15	0:0	4	;
for	11:8	18:8	4	(x = 0 ;x < cxWinSize;x ++)
forinit	11:13	11:18	5	x = 0 ;
water	11:13	0:0	6	x
op	11:15	0:0	6	=
water	11:17	0:0	6	0
water	11:18	0:0	6	;
cond	11:20	11:24	5	x < cxWinSize
water	11:20	0:0	6	x
op	11:22	0:0	6	<
water	11:24	0:0	6	cxWinSize
forexpr	11:35	11:36	5	x ++
water	11:35	0:0	6	x
op	11:36	0:0	6	++
stmts	12:8	18:8	5	
water	12:8	0:0	6	{
op	14:12	0:0	6	*
water	14:13	0:0	6	dst
op	14:16	0:0	6	++
op	14:19	0:0	6	=
water	14:21	0:0	6	127
water	14:24	0:0	6	;
op	15:12	0:0	6	*
water	15:13	0:0	6	dst
op	15:16	0:0	6	++
op	15:19	0:0	6	=
water	15:21	0:0	6	127
water	15:24	0:0	6	;
op	16:12	0:0	6	*
water	16:13	0:0	6	dst
op	16:16	0:0	6	++
op	16:19	0:0	6	=
water	16:21	0:0	6	127
water	16:24	0:0	6	;
water	17:12	0:0	6	col
op	17:16	0:0	6	+=
water	17:19	0:0	6	3
water	17:20	0:0	6	;
water	18:8	0:0	6	}
while	20:8	24:8	4	(( col % 4 ) != 0)
cond	20:15	20:28	5	( col % 4 ) != 0
water	20:15	0:0	6	(
water	20:16	0:0	6	col
op	20:20	0:0	6	%
water	20:22	0:0	6	4
water	20:23	0:0	6	)
op	20:25	0:0	6	!=
water	20:28	0:0	6	0
stmts	21:8	24:8	5	
water	21:8	0:0	6	{
water	22:12	0:0	6	dst
op	22:15	0:0	6	++
water	22:17	0:0	6	;
water	23:12	0:0	6	col
op	23:15	0:0	6	++
water	23:17	0:0	6	;
water	24:8	0:0	6	}
water	25:4	0:0	4	}
return	26:4	26:15	2	TRUE
water	26:11	0:0	3	TRUE

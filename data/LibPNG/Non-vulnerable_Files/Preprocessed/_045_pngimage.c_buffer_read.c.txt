func	1:0	41:0	0	static void	buffer_read
params	2:11	0:0	1	
param	2:12	2:30	2	struct display *	dp
param	2:32	2:49	2	struct buffer *	bp
param	2:51	2:65	2	png_bytep	data
param	3:3	3:18	2	png_size_t	size
stmnts	0:0	40:30	1	
decl	5:3	5:41	2	struct buffer_list	*last
op	5:28	0:0	2	=
water	5:30	0:0	2	bp
op	5:32	0:0	2	->
water	5:34	0:0	2	current
decl	6:3	6:37	2	size_t	read_count
op	6:21	0:0	2	=
water	6:23	0:0	2	bp
op	6:25	0:0	2	->
water	6:27	0:0	2	read_count
while	7:3	39:3	2	(size > 0)
cond	7:10	7:17	3	size > 0
water	7:10	0:0	4	size
op	7:15	0:0	4	>
water	7:17	0:0	4	0
stmts	8:3	39:3	3	
water	8:3	0:0	4	{
decl	9:6	9:18	4	size_t	avail
if	10:6	17:6	4	(last == NULL || ( last == bp -> last && read_count >= bp -> end_count ))
cond	10:10	11:57	5	last == NULL || ( last == bp -> last && read_count >= bp -> end_count )
water	10:10	0:0	6	last
op	10:15	0:0	6	==
water	10:18	0:0	6	NULL
op	10:23	0:0	6	||
water	11:9	0:0	6	(
water	11:10	0:0	6	last
op	11:15	0:0	6	==
water	11:18	0:0	6	bp
op	11:20	0:0	6	->
water	11:22	0:0	6	last
op	11:27	0:0	6	&&
water	11:30	0:0	6	read_count
op	11:41	0:0	6	>=
water	11:44	0:0	6	bp
op	11:46	0:0	6	->
water	11:48	0:0	6	end_count
water	11:57	0:0	6	)
stmts	12:6	17:6	5	
water	12:6	0:0	6	{
call	13:9	14:31	6	display_log
arg	13:21	13:23	7	dp
water	13:21	0:0	8	dp
arg	13:25	13:35	7	USER_ERROR
water	13:25	0:0	8	USER_ERROR
arg	13:37	13:65	7	"file truncated (%lu bytes)"
water	13:37	0:0	8	"file truncated (%lu bytes)"
arg	14:12	14:31	7	(unsignedlong)size
water	14:12	0:0	8	(
water	14:13	0:0	8	unsigned
water	14:22	0:0	8	long
water	14:26	0:0	8	)
water	14:27	0:0	8	size
water	14:32	0:0	6	;
break	16:9	16:14	6	
water	17:6	0:0	6	}
else	18:6	31:6	4
stmts	18:11	31:6	5	
if	18:11	31:6	6	(read_count >= sizeof last -> buffer)
cond	18:15	18:42	7	read_count >= sizeof last -> buffer
water	18:15	0:0	8	read_count
op	18:26	0:0	8	>=
op	18:29	0:0	8	sizeof
water	18:36	0:0	8	last
op	18:40	0:0	8	->
water	18:42	0:0	8	buffer
stmts	19:6	31:6	7	
water	19:6	0:0	8	{
water	21:9	0:0	8	last
op	21:14	0:0	8	=
water	21:16	0:0	8	last
op	21:20	0:0	8	->
water	21:22	0:0	8	next
water	21:26	0:0	8	;
water	22:9	0:0	8	read_count
op	22:20	0:0	8	=
water	22:22	0:0	8	0
water	22:23	0:0	8	;
water	23:9	0:0	8	bp
op	23:11	0:0	8	->
water	23:13	0:0	8	current
op	23:21	0:0	8	=
water	23:23	0:0	8	last
water	23:27	0:0	8	;
if	25:9	30:9	8	(last == NULL)
cond	25:13	25:21	9	last == NULL
water	25:13	0:0	10	last
op	25:18	0:0	10	==
water	25:21	0:0	10	NULL
stmts	26:9	30:9	9	
water	26:9	0:0	10	{
call	27:12	27:65	10	display_log
arg	27:24	27:26	11	dp
water	27:24	0:0	12	dp
arg	27:28	27:42	11	INTERNAL_ERROR
water	27:28	0:0	12	INTERNAL_ERROR
arg	27:44	27:65	11	"damaged buffer list"
water	27:44	0:0	12	"damaged buffer list"
water	27:66	0:0	10	;
break	29:12	29:17	10	
water	30:9	0:0	10	}
water	31:6	0:0	8	}
water	32:6	0:0	4	avail
op	32:12	0:0	4	=
water	32:14	0:0	4	(
op	32:15	0:0	4	sizeof
water	32:22	0:0	4	last
op	32:26	0:0	4	->
water	32:28	0:0	4	buffer
water	32:34	0:0	4	)
op	32:36	0:0	4	-
water	32:38	0:0	4	read_count
water	32:48	0:0	4	;
if	33:6	34:21	4	(avail > size)
cond	33:10	33:18	5	avail > size
water	33:10	0:0	6	avail
op	33:16	0:0	6	>
water	33:18	0:0	6	size
stmts	34:9	34:21	5	
water	34:9	0:0	6	avail
op	34:15	0:0	6	=
water	34:17	0:0	6	size
water	34:21	0:0	6	;
call	35:6	35:51	4	memcpy
arg	35:13	35:17	5	data
water	35:13	0:0	6	data
arg	35:19	35:44	5	last->buffer+read_count
water	35:19	0:0	6	last
op	35:23	0:0	6	->
water	35:25	0:0	6	buffer
op	35:32	0:0	6	+
water	35:34	0:0	6	read_count
arg	35:46	35:51	5	avail
water	35:46	0:0	6	avail
water	35:52	0:0	4	;
water	36:6	0:0	4	read_count
op	36:17	0:0	4	+=
water	36:20	0:0	4	avail
water	36:25	0:0	4	;
water	37:6	0:0	4	size
op	37:11	0:0	4	-=
water	37:14	0:0	4	avail
water	37:19	0:0	4	;
water	38:6	0:0	4	data
op	38:11	0:0	4	+=
water	38:14	0:0	4	avail
water	38:19	0:0	4	;
water	39:3	0:0	4	}
water	40:3	0:0	2	bp
op	40:5	0:0	2	->
water	40:7	0:0	2	read_count
op	40:18	0:0	2	=
water	40:20	0:0	2	read_count
water	40:30	0:0	2	;

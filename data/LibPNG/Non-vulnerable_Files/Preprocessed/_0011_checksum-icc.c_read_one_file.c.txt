func	1:0	37:0	0	static int	read_one_file
params	2:13	0:0	1	
param	2:14	2:22	2	FILE *	ip
param	2:24	2:40	2	const char *	name
stmnts	0:0	36:11	1	
decl	4:3	4:19	2	uLong	length
op	4:16	0:0	2	=
water	4:18	0:0	2	0
decl	5:3	5:34	2	uLong	a32
op	5:13	0:0	2	=
call	5:15	5:33	3	adler32
arg	5:23	5:24	4	0
water	5:23	0:0	5	0
arg	5:26	5:30	4	NULL
water	5:26	0:0	5	NULL
arg	5:32	5:33	4	0
water	5:32	0:0	5	0
decl	6:3	6:32	2	uLong	c32
op	6:13	0:0	2	=
call	6:15	6:31	3	crc32
arg	6:21	6:22	4	0
water	6:21	0:0	5	0
arg	6:24	6:28	4	NULL
water	6:24	0:0	5	NULL
arg	6:30	6:31	4	0
water	6:30	0:0	5	0
decl	7:3	7:19	2	Byte	header[132]
for	8:3	19:3	2	(;;)
forinit	8:8	8:8	3	;
water	8:8	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	9:3	19:3	3	
water	9:3	0:0	4	{
decl	10:6	10:23	4	int	ch
op	10:13	0:0	4	=
call	10:15	10:22	5	getc
arg	10:20	10:22	6	ip
water	10:20	0:0	7	ip
decl	11:6	11:12	4	Byte	b
if	12:6	12:26	4	(ch == EOF)
cond	12:10	12:16	5	ch == EOF
water	12:10	0:0	6	ch
op	12:13	0:0	6	==
water	12:16	0:0	6	EOF
stmts	12:21	12:26	5	
break	12:21	12:26	6	
water	13:6	0:0	4	b
op	13:8	0:0	4	=
water	13:10	0:0	4	(
water	13:11	0:0	4	Byte
water	13:15	0:0	4	)
water	13:16	0:0	4	ch
water	13:18	0:0	4	;
if	14:6	15:27	4	(length < sizeof header)
cond	14:10	14:26	5	length < sizeof header
water	14:10	0:0	6	length
op	14:17	0:0	6	<
op	14:19	0:0	6	sizeof
water	14:26	0:0	6	header
stmts	15:9	15:27	5	
water	15:9	0:0	6	header
op	15:15	0:0	6	[
water	15:16	0:0	6	length
op	15:22	0:0	6	]
op	15:24	0:0	6	=
water	15:26	0:0	6	b
water	15:27	0:0	6	;
op	16:6	0:0	4	++
water	16:8	0:0	4	length
water	16:14	0:0	4	;
water	17:6	0:0	4	a32
op	17:10	0:0	4	=
call	17:12	17:30	4	adler32
arg	17:20	17:23	5	a32
water	17:20	0:0	6	a32
arg	17:25	17:27	5	&b
op	17:25	0:0	6	&
water	17:26	0:0	6	b
arg	17:29	17:30	5	1
water	17:29	0:0	6	1
water	17:31	0:0	4	;
water	18:6	0:0	4	c32
op	18:10	0:0	4	=
call	18:12	18:28	4	crc32
arg	18:18	18:21	5	c32
water	18:18	0:0	6	c32
arg	18:23	18:25	5	&b
op	18:23	0:0	6	&
water	18:24	0:0	6	b
arg	18:27	18:28	5	1
water	18:27	0:0	6	1
water	18:29	0:0	4	;
water	19:3	0:0	4	}
if	20:3	21:14	2	(ferror (ip ))
cond	20:7	20:16	3	ferror (ip )
call	20:7	20:16	4	ferror
arg	20:14	20:16	5	ip
water	20:14	0:0	6	ip
stmts	21:6	21:14	3	
return	21:6	21:14	4	0
water	21:13	0:0	5	0
call	23:3	35:33	2	printf
arg	23:10	26:66	3	"PNG_ICC_CHECKSUM(0x%8.8lx, 0x%8.8lx,\n   PNG_MD5(""0x%2.2x%2.2x%2.2x%2.2x, 0x%2.2x%2.2x%2.2x%2.2x, 0x%2.2x%2.2x%2.2x%2.2x,"" 0x%2.2x%2.2x%2.2x%2.2x), %d,\n""   \"%4.4d/%2.2d/%2.2d %2.2d:%2.2d:%2.2d\", %lu, \"%s\")\n"
water	23:10	0:0	4	"PNG_ICC_CHECKSUM(0x%8.8lx, 0x%8.8lx,\n   PNG_MD5("
water	24:6	0:0	4	"0x%2.2x%2.2x%2.2x%2.2x, 0x%2.2x%2.2x%2.2x%2.2x, 0x%2.2x%2.2x%2.2x%2.2x,"
water	25:6	0:0	4	" 0x%2.2x%2.2x%2.2x%2.2x), %d,\n"
water	26:6	0:0	4	"   \"%4.4d/%2.2d/%2.2d %2.2d:%2.2d:%2.2d\", %lu, \"%s\")\n"
arg	27:6	27:24	3	(unsignedlong)a32
water	27:6	0:0	4	(
water	27:7	0:0	4	unsigned
water	27:16	0:0	4	long
water	27:20	0:0	4	)
water	27:21	0:0	4	a32
arg	27:26	27:44	3	(unsignedlong)c32
water	27:26	0:0	4	(
water	27:27	0:0	4	unsigned
water	27:36	0:0	4	long
water	27:40	0:0	4	)
water	27:41	0:0	4	c32
arg	28:6	28:16	3	header[84]
water	28:6	0:0	4	header
op	28:12	0:0	4	[
water	28:13	0:0	4	84
op	28:15	0:0	4	]
arg	28:18	28:28	3	header[85]
water	28:18	0:0	4	header
op	28:24	0:0	4	[
water	28:25	0:0	4	85
op	28:27	0:0	4	]
arg	28:30	28:40	3	header[86]
water	28:30	0:0	4	header
op	28:36	0:0	4	[
water	28:37	0:0	4	86
op	28:39	0:0	4	]
arg	28:42	28:52	3	header[87]
water	28:42	0:0	4	header
op	28:48	0:0	4	[
water	28:49	0:0	4	87
op	28:51	0:0	4	]
arg	29:6	29:16	3	header[88]
water	29:6	0:0	4	header
op	29:12	0:0	4	[
water	29:13	0:0	4	88
op	29:15	0:0	4	]
arg	29:18	29:28	3	header[89]
water	29:18	0:0	4	header
op	29:24	0:0	4	[
water	29:25	0:0	4	89
op	29:27	0:0	4	]
arg	29:30	29:40	3	header[90]
water	29:30	0:0	4	header
op	29:36	0:0	4	[
water	29:37	0:0	4	90
op	29:39	0:0	4	]
arg	29:42	29:52	3	header[91]
water	29:42	0:0	4	header
op	29:48	0:0	4	[
water	29:49	0:0	4	91
op	29:51	0:0	4	]
arg	30:6	30:16	3	header[92]
water	30:6	0:0	4	header
op	30:12	0:0	4	[
water	30:13	0:0	4	92
op	30:15	0:0	4	]
arg	30:18	30:28	3	header[93]
water	30:18	0:0	4	header
op	30:24	0:0	4	[
water	30:25	0:0	4	93
op	30:27	0:0	4	]
arg	30:30	30:40	3	header[94]
water	30:30	0:0	4	header
op	30:36	0:0	4	[
water	30:37	0:0	4	94
op	30:39	0:0	4	]
arg	30:42	30:52	3	header[95]
water	30:42	0:0	4	header
op	30:48	0:0	4	[
water	30:49	0:0	4	95
op	30:51	0:0	4	]
arg	31:6	31:16	3	header[96]
water	31:6	0:0	4	header
op	31:12	0:0	4	[
water	31:13	0:0	4	96
op	31:15	0:0	4	]
arg	31:18	31:28	3	header[97]
water	31:18	0:0	4	header
op	31:24	0:0	4	[
water	31:25	0:0	4	97
op	31:27	0:0	4	]
arg	31:30	31:40	3	header[98]
water	31:30	0:0	4	header
op	31:36	0:0	4	[
water	31:37	0:0	4	98
op	31:39	0:0	4	]
arg	31:42	31:52	3	header[99]
water	31:42	0:0	4	header
op	31:48	0:0	4	[
water	31:49	0:0	4	99
op	31:51	0:0	4	]
arg	34:6	34:13	3	u32(64)
call	34:6	34:12	4	u32
arg	34:10	34:12	5	64
water	34:10	0:0	6	64
arg	34:15	34:22	3	u16(24)
call	34:15	34:21	4	u16
arg	34:19	34:21	5	24
water	34:19	0:0	6	24
arg	34:24	34:31	3	u16(26)
call	34:24	34:30	4	u16
arg	34:28	34:30	5	26
water	34:28	0:0	6	26
arg	34:33	34:40	3	u16(28)
call	34:33	34:39	4	u16
arg	34:37	34:39	5	28
water	34:37	0:0	6	28
arg	34:42	34:49	3	u16(30)
call	34:42	34:48	4	u16
arg	34:46	34:48	5	30
water	34:46	0:0	6	30
arg	34:51	34:58	3	u16(32)
call	34:51	34:57	4	u16
arg	34:55	34:57	5	32
water	34:55	0:0	6	32
arg	34:60	34:67	3	u16(34)
call	34:60	34:66	4	u16
arg	34:64	34:66	5	34
water	34:64	0:0	6	34
arg	35:6	35:27	3	(unsignedlong)length
water	35:6	0:0	4	(
water	35:7	0:0	4	unsigned
water	35:16	0:0	4	long
water	35:20	0:0	4	)
water	35:21	0:0	4	length
arg	35:29	35:33	3	name
water	35:29	0:0	4	name
water	35:34	0:0	2	;
return	36:3	36:11	2	1
water	36:10	0:0	3	1

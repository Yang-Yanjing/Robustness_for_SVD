func	1:0	45:0	0	static png_uint_32	get_unknown
params	2:11	0:0	1	
param	2:12	2:22	2	display *	d
param	2:24	2:42	2	png_infop	info_ptr
param	2:44	2:58	2	int	after_IDAT
stmnts	0:0	44:15	1	
decl	5:3	5:24	2	png_uint_32	flags
op	5:21	0:0	2	=
water	5:23	0:0	2	0
call	6:3	6:20	2	UNUSED
arg	6:10	6:20	3	after_IDAT
water	6:10	0:0	4	after_IDAT
water	7:3	0:0	2	{
water	8:6	0:0	2	png_unknown_chunkp
water	8:25	0:0	2	unknown
water	8:32	0:0	2	;
water	9:6	0:0	2	int
water	9:10	0:0	2	num_unknown
op	9:22	0:0	2	=
call	9:24	9:77	2	png_get_unknown_chunks
arg	9:47	9:57	3	d->png_ptr
water	9:47	0:0	4	d
op	9:48	0:0	4	->
water	9:50	0:0	4	png_ptr
arg	9:59	9:67	3	info_ptr
water	9:59	0:0	4	info_ptr
arg	9:69	9:77	3	&unknown
op	9:69	0:0	4	&
water	9:70	0:0	4	unknown
water	9:78	0:0	2	;
water	10:6	0:0	2	while
water	10:12	0:0	2	(
op	10:13	0:0	2	--
water	10:15	0:0	2	num_unknown
op	10:27	0:0	2	>=
water	10:30	0:0	2	0
water	10:31	0:0	2	)
water	11:6	0:0	2	{
water	12:9	0:0	2	int
water	12:13	0:0	2	chunk
op	12:19	0:0	2	=
call	12:21	12:52	2	findb
arg	12:27	12:52	3	unknown[num_unknown].name
water	12:27	0:0	4	unknown
op	12:34	0:0	4	[
water	12:35	0:0	4	num_unknown
op	12:46	0:0	4	]
op	12:47	0:0	4	.
water	12:48	0:0	4	name
water	12:53	0:0	2	;
water	17:9	0:0	2	if
water	17:12	0:0	2	(
water	17:13	0:0	2	chunk
op	17:19	0:0	2	<
water	17:21	0:0	2	0
water	17:22	0:0	2	)
water	17:24	0:0	2	switch
water	17:31	0:0	2	(
water	17:32	0:0	2	d
op	17:33	0:0	2	->
water	17:35	0:0	2	keep
water	17:39	0:0	2	)
water	18:9	0:0	2	{
water	19:12	0:0	2	default
water	19:19	0:0	2	:
water	20:12	0:0	2	case
water	20:17	0:0	2	PNG_HANDLE_CHUNK_AS_DEFAULT
water	20:44	0:0	2	:
water	21:12	0:0	2	case
water	21:17	0:0	2	PNG_HANDLE_CHUNK_NEVER
water	21:39	0:0	2	:
call	22:15	24:43	2	fprintf
arg	22:23	22:29	3	stderr
water	22:23	0:0	4	stderr
arg	22:31	22:70	3	"%s(%s): %s: %s: unknown chunk saved\n"
water	22:31	0:0	4	"%s(%s): %s: %s: unknown chunk saved\n"
arg	23:18	23:25	3	d->file
water	23:18	0:0	4	d
op	23:19	0:0	4	->
water	23:21	0:0	4	file
arg	23:27	23:34	3	d->test
water	23:27	0:0	4	d
op	23:28	0:0	4	->
water	23:30	0:0	4	test
arg	23:36	23:67	3	d->keep?"discard":"default"
water	23:36	0:0	4	d
op	23:37	0:0	4	->
water	23:39	0:0	4	keep
water	23:44	0:0	4	?
water	23:46	0:0	4	"discard"
water	23:56	0:0	4	:
water	23:58	0:0	4	"default"
arg	24:18	24:43	3	unknown[num_unknown].name
water	24:18	0:0	4	unknown
op	24:25	0:0	4	[
water	24:26	0:0	4	num_unknown
op	24:37	0:0	4	]
op	24:38	0:0	4	.
water	24:39	0:0	4	name
water	24:44	0:0	2	;
op	25:15	0:0	2	++
water	25:17	0:0	2	(
water	25:18	0:0	2	d
op	25:19	0:0	2	->
water	25:21	0:0	2	error_count
water	25:32	0:0	2	)
water	25:33	0:0	2	;
water	26:15	0:0	2	break
water	26:20	0:0	2	;
water	27:12	0:0	2	case
water	27:17	0:0	2	PNG_HANDLE_CHUNK_IF_SAFE
water	27:41	0:0	2	:
water	28:15	0:0	2	if
water	28:18	0:0	2	(
op	28:19	0:0	2	!
call	28:20	28:56	2	ancillaryb
arg	28:31	28:56	3	unknown[num_unknown].name
water	28:31	0:0	4	unknown
op	28:38	0:0	4	[
water	28:39	0:0	4	num_unknown
op	28:50	0:0	4	]
op	28:51	0:0	4	.
water	28:52	0:0	4	name
water	28:57	0:0	2	)
water	29:15	0:0	2	{
call	30:18	32:64	2	fprintf
arg	30:26	30:32	3	stderr
water	30:26	0:0	4	stderr
arg	31:21	31:74	3	"%s(%s): if-safe: %s: unknown critical chunk saved\n"
water	31:21	0:0	4	"%s(%s): if-safe: %s: unknown critical chunk saved\n"
arg	32:21	32:28	3	d->file
water	32:21	0:0	4	d
op	32:22	0:0	4	->
water	32:24	0:0	4	file
arg	32:30	32:37	3	d->test
water	32:30	0:0	4	d
op	32:31	0:0	4	->
water	32:33	0:0	4	test
arg	32:39	32:64	3	unknown[num_unknown].name
water	32:39	0:0	4	unknown
op	32:46	0:0	4	[
water	32:47	0:0	4	num_unknown
op	32:58	0:0	4	]
op	32:59	0:0	4	.
water	32:60	0:0	4	name
water	32:65	0:0	2	;
op	33:18	0:0	2	++
water	33:20	0:0	2	(
water	33:21	0:0	2	d
op	33:22	0:0	2	->
water	33:24	0:0	2	error_count
water	33:35	0:0	2	)
water	33:36	0:0	2	;
water	34:18	0:0	2	break
water	34:23	0:0	2	;
water	35:15	0:0	2	}
water	37:12	0:0	2	case
water	37:17	0:0	2	PNG_HANDLE_CHUNK_ALWAYS
water	37:40	0:0	2	:
water	38:15	0:0	2	break
water	38:20	0:0	2	;
water	39:9	0:0	2	}
water	40:9	0:0	2	else
water	41:12	0:0	2	flags
op	41:18	0:0	2	|=
water	41:21	0:0	2	chunk_info
op	41:31	0:0	2	[
water	41:32	0:0	2	chunk
op	41:37	0:0	2	]
op	41:38	0:0	2	.
water	41:39	0:0	2	flag
water	41:43	0:0	2	;
water	42:6	0:0	2	}
water	43:3	0:0	2	}
water	44:3	0:0	2	return
water	44:10	0:0	2	flags
water	44:15	0:0	2	;

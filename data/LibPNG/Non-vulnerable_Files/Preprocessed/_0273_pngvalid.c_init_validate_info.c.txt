func	1:0	74:0	0	static void	init_validate_info
params	2:18	0:0	1	
param	2:19	2:36	2	validate_info *	vi
param	2:38	2:55	2	gamma_display *	dp
param	2:57	2:77	2	png_const_structp	pp
param	3:4	3:16	2	int	in_depth
param	3:18	3:31	2	int	out_depth
stmnts	5:3	73:28	1	
water	5:3	0:0	2	PNG_CONST
water	5:13	0:0	2	unsigned
water	5:22	0:0	2	int
water	5:26	0:0	2	outmax
op	5:33	0:0	2	=
water	5:35	0:0	2	(
water	5:36	0:0	2	1
water	5:37	0:0	2	U
op	5:38	0:0	2	<<
water	5:40	0:0	2	out_depth
water	5:49	0:0	2	)
op	5:50	0:0	2	-
water	5:51	0:0	2	1
water	5:52	0:0	2	;
water	6:3	0:0	2	vi
op	6:5	0:0	2	->
water	6:7	0:0	2	pp
op	6:10	0:0	2	=
water	6:12	0:0	2	pp
water	6:14	0:0	2	;
water	7:3	0:0	2	vi
op	7:5	0:0	2	->
water	7:7	0:0	2	dp
op	7:10	0:0	2	=
water	7:12	0:0	2	dp
water	7:14	0:0	2	;
if	8:3	12:3	2	(dp -> sbit > 0 && dp -> sbit < in_depth)
cond	8:7	8:34	3	dp -> sbit > 0 && dp -> sbit < in_depth
water	8:7	0:0	4	dp
op	8:9	0:0	4	->
water	8:11	0:0	4	sbit
op	8:16	0:0	4	>
water	8:18	0:0	4	0
op	8:20	0:0	4	&&
water	8:23	0:0	4	dp
op	8:25	0:0	4	->
water	8:27	0:0	4	sbit
op	8:32	0:0	4	<
water	8:34	0:0	4	in_depth
stmts	9:3	12:3	3	
water	9:3	0:0	4	{
water	10:6	0:0	4	vi
op	10:8	0:0	4	->
water	10:10	0:0	4	sbit
op	10:15	0:0	4	=
water	10:17	0:0	4	dp
op	10:19	0:0	4	->
water	10:21	0:0	4	sbit
water	10:25	0:0	4	;
water	11:6	0:0	4	vi
op	11:8	0:0	4	->
water	11:10	0:0	4	isbit_shift
op	11:22	0:0	4	=
water	11:24	0:0	4	in_depth
op	11:33	0:0	4	-
water	11:35	0:0	4	dp
op	11:37	0:0	4	->
water	11:39	0:0	4	sbit
water	11:43	0:0	4	;
water	12:3	0:0	4	}
else	13:3	17:3	2
stmts	14:3	17:3	3	
water	14:3	0:0	4	{
water	15:6	0:0	4	vi
op	15:8	0:0	4	->
water	15:10	0:0	4	sbit
op	15:15	0:0	4	=
water	15:17	0:0	4	(
water	15:18	0:0	4	png_byte
water	15:26	0:0	4	)
water	15:27	0:0	4	in_depth
water	15:35	0:0	4	;
water	16:6	0:0	4	vi
op	16:8	0:0	4	->
water	16:10	0:0	4	isbit_shift
op	16:22	0:0	4	=
water	16:24	0:0	4	0
water	16:25	0:0	4	;
water	17:3	0:0	4	}
water	18:3	0:0	2	vi
op	18:5	0:0	2	->
water	18:7	0:0	2	sbit_max
op	18:16	0:0	2	=
water	18:18	0:0	2	(
water	18:19	0:0	2	1
water	18:20	0:0	2	U
op	18:22	0:0	2	<<
water	18:25	0:0	2	vi
op	18:27	0:0	2	->
water	18:29	0:0	2	sbit
water	18:33	0:0	2	)
op	18:34	0:0	2	-
water	18:35	0:0	2	1
water	18:36	0:0	2	;
water	22:3	0:0	2	vi
op	22:5	0:0	2	->
water	22:7	0:0	2	screen_gamma
op	22:20	0:0	2	=
water	22:22	0:0	2	dp
op	22:24	0:0	2	->
water	22:26	0:0	2	screen_gamma
water	22:38	0:0	2	;
if	23:3	24:47	2	(fabs (vi -> screen_gamma - 1 ) < PNG_GAMMA_THRESHOLD)
cond	23:7	23:34	3	fabs (vi -> screen_gamma - 1 ) < PNG_GAMMA_THRESHOLD
call	23:7	23:30	4	fabs
arg	23:12	23:30	5	vi->screen_gamma-1
water	23:12	0:0	6	vi
op	23:14	0:0	6	->
water	23:16	0:0	6	screen_gamma
op	23:28	0:0	6	-
water	23:29	0:0	6	1
op	23:32	0:0	4	<
water	23:34	0:0	4	PNG_GAMMA_THRESHOLD
stmts	24:6	24:47	3	
water	24:6	0:0	4	vi
op	24:8	0:0	4	->
water	24:10	0:0	4	screen_gamma
op	24:23	0:0	4	=
water	24:25	0:0	4	vi
op	24:27	0:0	4	->
water	24:29	0:0	4	screen_inverse
op	24:44	0:0	4	=
water	24:46	0:0	4	0
water	24:47	0:0	4	;
else	25:3	26:45	2
stmts	26:6	26:45	3	
water	26:6	0:0	4	vi
op	26:8	0:0	4	->
water	26:10	0:0	4	screen_inverse
op	26:25	0:0	4	=
water	26:27	0:0	4	1
op	26:28	0:0	4	/
water	26:29	0:0	4	vi
op	26:31	0:0	4	->
water	26:33	0:0	4	screen_gamma
water	26:45	0:0	4	;
water	27:3	0:0	2	vi
op	27:5	0:0	2	->
water	27:7	0:0	2	use_input_precision
op	27:27	0:0	2	=
water	27:29	0:0	2	dp
op	27:31	0:0	2	->
water	27:33	0:0	2	use_input_precision
water	27:52	0:0	2	;
water	28:3	0:0	2	vi
op	28:5	0:0	2	->
water	28:7	0:0	2	outmax
op	28:14	0:0	2	=
water	28:16	0:0	2	outmax
water	28:22	0:0	2	;
water	29:3	0:0	2	vi
op	29:5	0:0	2	->
water	29:7	0:0	2	maxabs
op	29:14	0:0	2	=
call	29:16	29:50	2	abserr
arg	29:23	29:29	3	dp->pm
water	29:23	0:0	4	dp
op	29:25	0:0	4	->
water	29:27	0:0	4	pm
arg	29:31	29:39	3	in_depth
water	29:31	0:0	4	in_depth
arg	29:41	29:50	3	out_depth
water	29:41	0:0	4	out_depth
water	29:51	0:0	2	;
water	30:3	0:0	2	vi
op	30:5	0:0	2	->
water	30:7	0:0	2	maxpc
op	30:13	0:0	2	=
call	30:15	30:48	2	pcerr
arg	30:21	30:27	3	dp->pm
water	30:21	0:0	4	dp
op	30:23	0:0	4	->
water	30:25	0:0	4	pm
arg	30:29	30:37	3	in_depth
water	30:29	0:0	4	in_depth
arg	30:39	30:48	3	out_depth
water	30:39	0:0	4	out_depth
water	30:49	0:0	2	;
water	31:3	0:0	2	vi
op	31:5	0:0	2	->
water	31:7	0:0	2	maxcalc
op	31:15	0:0	2	=
call	31:17	31:52	2	calcerr
arg	31:25	31:31	3	dp->pm
water	31:25	0:0	4	dp
op	31:27	0:0	4	->
water	31:29	0:0	4	pm
arg	31:33	31:41	3	in_depth
water	31:33	0:0	4	in_depth
arg	31:43	31:52	3	out_depth
water	31:43	0:0	4	out_depth
water	31:53	0:0	2	;
water	32:3	0:0	2	vi
op	32:5	0:0	2	->
water	32:7	0:0	2	maxout
op	32:14	0:0	2	=
call	32:16	32:50	2	outerr
arg	32:23	32:29	3	dp->pm
water	32:23	0:0	4	dp
op	32:25	0:0	4	->
water	32:27	0:0	4	pm
arg	32:31	32:39	3	in_depth
water	32:31	0:0	4	in_depth
arg	32:41	32:50	3	out_depth
water	32:41	0:0	4	out_depth
water	32:51	0:0	2	;
water	33:3	0:0	2	vi
op	33:5	0:0	2	->
water	33:7	0:0	2	outquant
op	33:16	0:0	2	=
call	33:18	33:72	2	output_quantization_factor
arg	33:45	33:51	3	dp->pm
water	33:45	0:0	4	dp
op	33:47	0:0	4	->
water	33:49	0:0	4	pm
arg	33:53	33:61	3	in_depth
water	33:53	0:0	4	in_depth
arg	33:63	33:72	3	out_depth
water	33:63	0:0	4	out_depth
water	33:73	0:0	2	;
water	34:3	0:0	2	vi
op	34:5	0:0	2	->
water	34:7	0:0	2	maxout_total
op	34:20	0:0	2	=
water	34:22	0:0	2	vi
op	34:24	0:0	2	->
water	34:26	0:0	2	maxout
op	34:33	0:0	2	+
water	34:35	0:0	2	vi
op	34:37	0:0	2	->
water	34:39	0:0	2	outquant
op	34:48	0:0	2	*
op	34:50	0:0	2	.
water	34:51	0:0	2	5
water	34:52	0:0	2	;
water	35:3	0:0	2	vi
op	35:5	0:0	2	->
water	35:7	0:0	2	outlog
op	35:14	0:0	2	=
call	35:16	35:50	2	outlog
arg	35:23	35:29	3	dp->pm
water	35:23	0:0	4	dp
op	35:25	0:0	4	->
water	35:27	0:0	4	pm
arg	35:31	35:39	3	in_depth
water	35:31	0:0	4	in_depth
arg	35:41	35:50	3	out_depth
water	35:41	0:0	4	out_depth
water	35:51	0:0	2	;
if	36:3	62:3	2	(( dp -> this . colour_type & PNG_COLOR_MASK_ALPHA ) != 0 || ( dp -> this . colour_type == 3 && dp -> this . is_transparent ))
cond	36:7	37:59	3	( dp -> this . colour_type & PNG_COLOR_MASK_ALPHA ) != 0 || ( dp -> this . colour_type == 3 && dp -> this . is_transparent )
water	36:7	0:0	4	(
water	36:8	0:0	4	dp
op	36:10	0:0	4	->
water	36:12	0:0	4	this
op	36:16	0:0	4	.
water	36:17	0:0	4	colour_type
op	36:29	0:0	4	&
water	36:31	0:0	4	PNG_COLOR_MASK_ALPHA
water	36:51	0:0	4	)
op	36:53	0:0	4	!=
water	36:56	0:0	4	0
op	36:58	0:0	4	||
water	37:6	0:0	4	(
water	37:7	0:0	4	dp
op	37:9	0:0	4	->
water	37:11	0:0	4	this
op	37:15	0:0	4	.
water	37:16	0:0	4	colour_type
op	37:28	0:0	4	==
water	37:31	0:0	4	3
op	37:33	0:0	4	&&
water	37:36	0:0	4	dp
op	37:38	0:0	4	->
water	37:40	0:0	4	this
op	37:44	0:0	4	.
water	37:45	0:0	4	is_transparent
water	37:59	0:0	4	)
stmts	38:3	62:3	3	
water	38:3	0:0	4	{
water	39:6	0:0	4	vi
op	39:8	0:0	4	->
water	39:10	0:0	4	do_background
op	39:24	0:0	4	=
water	39:26	0:0	4	dp
op	39:28	0:0	4	->
water	39:30	0:0	4	do_background
water	39:43	0:0	4	;
if	40:6	61:6	4	(vi -> do_background != 0)
cond	40:10	40:31	5	vi -> do_background != 0
water	40:10	0:0	6	vi
op	40:12	0:0	6	->
water	40:14	0:0	6	do_background
op	40:28	0:0	6	!=
water	40:31	0:0	6	0
stmts	41:6	61:6	5	
water	41:6	0:0	6	{
water	42:9	0:0	6	PNG_CONST
water	42:19	0:0	6	double
water	42:26	0:0	6	bg_inverse
op	42:37	0:0	6	=
water	42:39	0:0	6	1
op	42:40	0:0	6	/
water	42:41	0:0	6	dp
op	42:43	0:0	6	->
water	42:45	0:0	6	background_gamma
water	42:61	0:0	6	;
decl	43:9	43:23	6	double	r
water	43:17	0:0	6	,
decl	43:9	43:23	6	double	g
water	43:20	0:0	6	,
decl	43:9	43:23	6	double	b
water	45:9	0:0	6	r
op	45:11	0:0	6	=
water	45:13	0:0	6	dp
op	45:15	0:0	6	->
water	45:17	0:0	6	background_color
op	45:33	0:0	6	.
water	45:34	0:0	6	red
water	45:37	0:0	6	;
water	45:39	0:0	6	r
op	45:41	0:0	6	/=
water	45:44	0:0	6	outmax
water	45:50	0:0	6	;
water	46:9	0:0	6	g
op	46:11	0:0	6	=
water	46:13	0:0	6	dp
op	46:15	0:0	6	->
water	46:17	0:0	6	background_color
op	46:33	0:0	6	.
water	46:34	0:0	6	green
water	46:39	0:0	6	;
water	46:41	0:0	6	g
op	46:43	0:0	6	/=
water	46:46	0:0	6	outmax
water	46:52	0:0	6	;
water	47:9	0:0	6	b
op	47:11	0:0	6	=
water	47:13	0:0	6	dp
op	47:15	0:0	6	->
water	47:17	0:0	6	background_color
op	47:33	0:0	6	.
water	47:34	0:0	6	blue
water	47:38	0:0	6	;
water	47:40	0:0	6	b
op	47:42	0:0	6	/=
water	47:45	0:0	6	outmax
water	47:51	0:0	6	;
if	51:9	57:9	6	(fabs (bg_inverse - 1 ) >= PNG_GAMMA_THRESHOLD)
cond	51:13	51:35	7	fabs (bg_inverse - 1 ) >= PNG_GAMMA_THRESHOLD
call	51:13	51:30	8	fabs
arg	51:18	51:30	9	bg_inverse-1
water	51:18	0:0	10	bg_inverse
op	51:28	0:0	10	-
water	51:29	0:0	10	1
op	51:32	0:0	8	>=
water	51:35	0:0	8	PNG_GAMMA_THRESHOLD
stmts	53:9	57:9	7	
water	53:9	0:0	8	{
water	54:12	0:0	8	r
op	54:14	0:0	8	=
call	54:16	54:33	8	pow
arg	54:20	54:21	9	r
water	54:20	0:0	10	r
arg	54:23	54:33	9	bg_inverse
water	54:23	0:0	10	bg_inverse
water	54:34	0:0	8	;
water	55:12	0:0	8	g
op	55:14	0:0	8	=
call	55:16	55:33	8	pow
arg	55:20	55:21	9	g
water	55:20	0:0	10	g
arg	55:23	55:33	9	bg_inverse
water	55:23	0:0	10	bg_inverse
water	55:34	0:0	8	;
water	56:12	0:0	8	b
op	56:14	0:0	8	=
call	56:16	56:33	8	pow
arg	56:20	56:21	9	b
water	56:20	0:0	10	b
arg	56:23	56:33	9	bg_inverse
water	56:23	0:0	10	bg_inverse
water	56:34	0:0	8	;
water	57:9	0:0	8	}
water	58:9	0:0	6	vi
op	58:11	0:0	6	->
water	58:13	0:0	6	background_red
op	58:28	0:0	6	=
water	58:30	0:0	6	r
water	58:31	0:0	6	;
water	59:9	0:0	6	vi
op	59:11	0:0	6	->
water	59:13	0:0	6	background_green
op	59:30	0:0	6	=
water	59:32	0:0	6	g
water	59:33	0:0	6	;
water	60:9	0:0	6	vi
op	60:11	0:0	6	->
water	60:13	0:0	6	background_blue
op	60:29	0:0	6	=
water	60:31	0:0	6	b
water	60:32	0:0	6	;
water	61:6	0:0	6	}
water	62:3	0:0	4	}
else	63:3	64:27	2
stmts	64:6	64:27	3	
water	64:6	0:0	4	vi
op	64:8	0:0	4	->
water	64:10	0:0	4	do_background
op	64:24	0:0	4	=
water	64:26	0:0	4	0
water	64:27	0:0	4	;
if	65:3	66:73	2	(vi -> do_background == 0)
cond	65:7	65:28	3	vi -> do_background == 0
water	65:7	0:0	4	vi
op	65:9	0:0	4	->
water	65:11	0:0	4	do_background
op	65:25	0:0	4	==
water	65:28	0:0	4	0
stmts	66:6	66:73	3	
water	66:6	0:0	4	vi
op	66:8	0:0	4	->
water	66:10	0:0	4	background_red
op	66:25	0:0	4	=
water	66:27	0:0	4	vi
op	66:29	0:0	4	->
water	66:31	0:0	4	background_green
op	66:48	0:0	4	=
water	66:50	0:0	4	vi
op	66:52	0:0	4	->
water	66:54	0:0	4	background_blue
op	66:70	0:0	4	=
water	66:72	0:0	4	0
water	66:73	0:0	4	;
water	67:3	0:0	2	vi
op	67:5	0:0	2	->
water	67:7	0:0	2	gamma_correction
op	67:24	0:0	2	=
water	67:26	0:0	2	1
op	67:27	0:0	2	/
water	67:28	0:0	2	(
water	67:29	0:0	2	dp
op	67:31	0:0	2	->
water	67:33	0:0	2	file_gamma
op	67:43	0:0	2	*
water	67:44	0:0	2	dp
op	67:46	0:0	2	->
water	67:48	0:0	2	screen_gamma
water	67:60	0:0	2	)
water	67:61	0:0	2	;
if	68:3	69:30	2	(fabs (vi -> gamma_correction - 1 ) < PNG_GAMMA_THRESHOLD)
cond	68:7	68:38	3	fabs (vi -> gamma_correction - 1 ) < PNG_GAMMA_THRESHOLD
call	68:7	68:34	4	fabs
arg	68:12	68:34	5	vi->gamma_correction-1
water	68:12	0:0	6	vi
op	68:14	0:0	6	->
water	68:16	0:0	6	gamma_correction
op	68:32	0:0	6	-
water	68:33	0:0	6	1
op	68:36	0:0	4	<
water	68:38	0:0	4	PNG_GAMMA_THRESHOLD
stmts	69:6	69:30	3	
water	69:6	0:0	4	vi
op	69:8	0:0	4	->
water	69:10	0:0	4	gamma_correction
op	69:27	0:0	4	=
water	69:29	0:0	4	0
water	69:30	0:0	4	;
water	70:3	0:0	2	vi
op	70:5	0:0	2	->
water	70:7	0:0	2	file_inverse
op	70:20	0:0	2	=
water	70:22	0:0	2	1
op	70:23	0:0	2	/
water	70:24	0:0	2	dp
op	70:26	0:0	2	->
water	70:28	0:0	2	file_gamma
water	70:38	0:0	2	;
if	71:3	72:26	2	(fabs (vi -> file_inverse - 1 ) < PNG_GAMMA_THRESHOLD)
cond	71:7	71:34	3	fabs (vi -> file_inverse - 1 ) < PNG_GAMMA_THRESHOLD
call	71:7	71:30	4	fabs
arg	71:12	71:30	5	vi->file_inverse-1
water	71:12	0:0	6	vi
op	71:14	0:0	6	->
water	71:16	0:0	6	file_inverse
op	71:28	0:0	6	-
water	71:29	0:0	6	1
op	71:32	0:0	4	<
water	71:34	0:0	4	PNG_GAMMA_THRESHOLD
stmts	72:6	72:26	3	
water	72:6	0:0	4	vi
op	72:8	0:0	4	->
water	72:10	0:0	4	file_inverse
op	72:23	0:0	4	=
water	72:25	0:0	4	0
water	72:26	0:0	4	;
water	73:3	0:0	2	vi
op	73:5	0:0	2	->
water	73:7	0:0	2	scale16
op	73:15	0:0	2	=
water	73:17	0:0	2	dp
op	73:19	0:0	2	->
water	73:21	0:0	2	scale16
water	73:28	0:0	2	;

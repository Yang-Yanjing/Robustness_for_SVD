func	1:0	79:0	0	static store_palette_entry *	make_standard_palette
params	2:21	0:0	1	
param	2:22	2:35	2	png_store *	ps
param	2:37	2:49	2	int	npalette
param	2:51	2:62	2	int	do_tRNS
stmnts	4:3	78:3	1	
water	4:3	0:0	2	static
water	4:10	0:0	2	png_uint_32
water	4:22	0:0	2	palette_seed
op	4:34	0:0	2	[
water	4:35	0:0	2	2
op	4:36	0:0	2	]
op	4:38	0:0	2	=
water	4:40	0:0	2	{
water	4:42	0:0	2	0
water	4:43	0:0	2	x87654321
water	4:52	0:0	2	,
water	4:54	0:0	2	9
water	4:56	0:0	2	}
water	4:57	0:0	2	;
decl	5:3	5:12	2	int	i
op	5:9	0:0	2	=
water	5:11	0:0	2	0
water	6:3	0:0	2	png_byte
water	6:12	0:0	2	values
op	6:18	0:0	2	[
water	6:19	0:0	2	256
op	6:22	0:0	2	]
op	6:23	0:0	2	[
water	6:24	0:0	2	4
op	6:25	0:0	2	]
water	6:26	0:0	2	;
for	9:3	14:3	2	(;i < 8;++ i)
forinit	9:8	9:8	3	;
water	9:8	0:0	4	;
cond	9:10	9:12	3	i < 8
water	9:10	0:0	4	i
op	9:11	0:0	4	<
water	9:12	0:0	4	8
forexpr	9:15	9:17	3	++ i
op	9:15	0:0	4	++
water	9:17	0:0	4	i
stmts	10:3	14:3	3	
water	10:3	0:0	4	{
water	11:6	0:0	4	values
op	11:12	0:0	4	[
water	11:13	0:0	4	i
op	11:14	0:0	4	]
op	11:15	0:0	4	[
water	11:16	0:0	4	1
op	11:17	0:0	4	]
op	11:19	0:0	4	=
call	11:21	11:49	4	(png_byte)
arg	11:32	11:49	5	(i&1)?255U:0U
water	11:32	0:0	6	(
water	11:33	0:0	6	i
op	11:34	0:0	6	&
water	11:35	0:0	6	1
water	11:36	0:0	6	)
water	11:38	0:0	6	?
water	11:40	0:0	6	255
water	11:43	0:0	6	U
water	11:45	0:0	6	:
water	11:47	0:0	6	0
water	11:48	0:0	6	U
water	11:50	0:0	4	;
water	12:6	0:0	4	values
op	12:12	0:0	4	[
water	12:13	0:0	4	i
op	12:14	0:0	4	]
op	12:15	0:0	4	[
water	12:16	0:0	4	2
op	12:17	0:0	4	]
op	12:19	0:0	4	=
call	12:21	12:49	4	(png_byte)
arg	12:32	12:49	5	(i&2)?255U:0U
water	12:32	0:0	6	(
water	12:33	0:0	6	i
op	12:34	0:0	6	&
water	12:35	0:0	6	2
water	12:36	0:0	6	)
water	12:38	0:0	6	?
water	12:40	0:0	6	255
water	12:43	0:0	6	U
water	12:45	0:0	6	:
water	12:47	0:0	6	0
water	12:48	0:0	6	U
water	12:50	0:0	4	;
water	13:6	0:0	4	values
op	13:12	0:0	4	[
water	13:13	0:0	4	i
op	13:14	0:0	4	]
op	13:15	0:0	4	[
water	13:16	0:0	4	3
op	13:17	0:0	4	]
op	13:19	0:0	4	=
call	13:21	13:49	4	(png_byte)
arg	13:32	13:49	5	(i&4)?255U:0U
water	13:32	0:0	6	(
water	13:33	0:0	6	i
op	13:34	0:0	6	&
water	13:35	0:0	6	4
water	13:36	0:0	6	)
water	13:38	0:0	6	?
water	13:40	0:0	6	255
water	13:43	0:0	6	U
water	13:45	0:0	6	:
water	13:47	0:0	6	0
water	13:48	0:0	6	U
water	13:50	0:0	4	;
water	14:3	0:0	4	}
water	16:3	0:0	2	{
decl	17:6	17:15	2	int	j
op	17:12	0:0	2	=
water	17:14	0:0	2	0
decl	18:6	18:30	2	png_byte	random_bytes[4]
decl	19:6	19:24	2	png_byte	need[256]
water	20:6	0:0	2	need
op	20:10	0:0	2	[
water	20:11	0:0	2	0
op	20:12	0:0	2	]
op	20:14	0:0	2	=
water	20:16	0:0	2	0
water	20:17	0:0	2	;
call	21:6	21:39	2	memset
arg	21:13	21:19	3	need+1
water	21:13	0:0	4	need
op	21:17	0:0	4	+
water	21:18	0:0	4	1
arg	21:21	21:22	3	1
water	21:21	0:0	4	1
arg	21:24	21:39	3	(sizeofneed)-2
water	21:24	0:0	4	(
op	21:25	0:0	4	sizeof
water	21:32	0:0	4	need
water	21:36	0:0	4	)
op	21:37	0:0	4	-
water	21:38	0:0	4	2
water	21:40	0:0	2	;
water	22:6	0:0	2	need
op	22:10	0:0	2	[
water	22:11	0:0	2	255
op	22:14	0:0	2	]
op	22:16	0:0	2	=
water	22:18	0:0	2	0
water	22:19	0:0	2	;
while	23:6	38:6	2	(i < 70)
cond	23:13	23:15	3	i < 70
water	23:13	0:0	4	i
op	23:14	0:0	4	<
water	23:15	0:0	4	70
stmts	24:6	38:6	3	
water	24:6	0:0	4	{
decl	25:9	25:19	4	png_byte	b
if	26:9	30:9	4	(j == 0)
cond	26:13	26:16	5	j == 0
water	26:13	0:0	6	j
op	26:14	0:0	6	==
water	26:16	0:0	6	0
stmts	27:9	30:9	5	
water	27:9	0:0	6	{
call	28:12	28:61	6	make_four_random_bytes
arg	28:35	28:47	7	palette_seed
water	28:35	0:0	8	palette_seed
arg	28:49	28:61	7	random_bytes
water	28:49	0:0	8	random_bytes
water	28:62	0:0	6	;
water	29:12	0:0	6	j
op	29:14	0:0	6	=
water	29:16	0:0	6	4
water	29:17	0:0	6	;
water	30:9	0:0	6	}
water	31:9	0:0	4	b
op	31:11	0:0	4	=
water	31:13	0:0	4	random_bytes
op	31:25	0:0	4	[
op	31:26	0:0	4	--
water	31:28	0:0	4	j
op	31:29	0:0	4	]
water	31:30	0:0	4	;
if	32:9	37:9	4	(need [ b ])
cond	32:13	32:19	5	need [ b ]
water	32:13	0:0	6	need
op	32:17	0:0	6	[
water	32:18	0:0	6	b
op	32:19	0:0	6	]
stmts	33:9	37:9	5	
water	33:9	0:0	6	{
water	34:12	0:0	6	values
op	34:18	0:0	6	[
water	34:19	0:0	6	i
op	34:20	0:0	6	]
op	34:21	0:0	6	[
water	34:22	0:0	6	1
op	34:23	0:0	6	]
op	34:25	0:0	6	=
water	34:27	0:0	6	b
water	34:28	0:0	6	;
water	35:12	0:0	6	values
op	35:18	0:0	6	[
water	35:19	0:0	6	i
op	35:20	0:0	6	]
op	35:21	0:0	6	[
water	35:22	0:0	6	2
op	35:23	0:0	6	]
op	35:25	0:0	6	=
water	35:27	0:0	6	b
water	35:28	0:0	6	;
water	36:12	0:0	6	values
op	36:18	0:0	6	[
water	36:19	0:0	6	i
op	36:20	0:0	6	++
op	36:22	0:0	6	]
op	36:23	0:0	6	[
water	36:24	0:0	6	3
op	36:25	0:0	6	]
op	36:27	0:0	6	=
water	36:29	0:0	6	b
water	36:30	0:0	6	;
water	37:9	0:0	6	}
water	38:6	0:0	4	}
water	39:3	0:0	2	}
for	45:3	46:53	2	(;i < 256;++ i)
forinit	45:8	45:8	3	;
water	45:8	0:0	4	;
cond	45:10	45:12	3	i < 256
water	45:10	0:0	4	i
op	45:11	0:0	4	<
water	45:12	0:0	4	256
forexpr	45:17	45:19	3	++ i
op	45:17	0:0	4	++
water	45:19	0:0	4	i
stmts	46:6	46:53	3	
call	46:6	46:52	4	make_four_random_bytes
arg	46:29	46:41	5	palette_seed
water	46:29	0:0	6	palette_seed
arg	46:43	46:52	5	values[i]
water	46:43	0:0	6	values
op	46:49	0:0	6	[
water	46:50	0:0	6	i
op	46:51	0:0	6	]
water	46:53	0:0	4	;
water	50:3	0:0	2	{
decl	51:6	51:34	2	store_palette_entry	*palette
decl	52:6	52:26	2	png_byte	selector[4]
call	53:6	53:51	2	make_four_random_bytes
arg	53:29	53:41	3	palette_seed
water	53:29	0:0	4	palette_seed
arg	53:43	53:51	3	selector
water	53:43	0:0	4	selector
water	53:52	0:0	2	;
if	54:6	56:54	2	(do_tRNS)
cond	54:10	54:10	3	do_tRNS
water	54:10	0:0	4	do_tRNS
stmts	55:9	56:54	3	
for	55:9	56:54	4	(i = 0 ;i < 256;++ i)
forinit	55:14	55:17	5	i = 0 ;
water	55:14	0:0	6	i
op	55:15	0:0	6	=
water	55:16	0:0	6	0
water	55:17	0:0	6	;
cond	55:19	55:21	5	i < 256
water	55:19	0:0	6	i
op	55:20	0:0	6	<
water	55:21	0:0	6	256
forexpr	55:26	55:28	5	++ i
op	55:26	0:0	6	++
water	55:28	0:0	6	i
stmts	56:12	56:54	5	
water	56:12	0:0	6	values
op	56:18	0:0	6	[
water	56:19	0:0	6	i
op	56:20	0:0	6	]
op	56:21	0:0	6	[
water	56:22	0:0	6	0
op	56:23	0:0	6	]
op	56:25	0:0	6	=
call	56:27	56:53	6	(png_byte)
arg	56:38	56:53	7	i^selector[0]
water	56:38	0:0	8	i
op	56:40	0:0	8	^
water	56:42	0:0	8	selector
op	56:50	0:0	8	[
water	56:51	0:0	8	0
op	56:52	0:0	8	]
water	56:54	0:0	6	;
else	57:6	59:30	2
stmts	58:9	59:30	3	
for	58:9	59:30	4	(i = 0 ;i < 256;++ i)
forinit	58:14	58:17	5	i = 0 ;
water	58:14	0:0	6	i
op	58:15	0:0	6	=
water	58:16	0:0	6	0
water	58:17	0:0	6	;
cond	58:19	58:21	5	i < 256
water	58:19	0:0	6	i
op	58:20	0:0	6	<
water	58:21	0:0	6	256
forexpr	58:26	58:28	5	++ i
op	58:26	0:0	6	++
water	58:28	0:0	6	i
stmts	59:12	59:30	5	
water	59:12	0:0	6	values
op	59:18	0:0	6	[
water	59:19	0:0	6	i
op	59:20	0:0	6	]
op	59:21	0:0	6	[
water	59:22	0:0	6	0
op	59:23	0:0	6	]
op	59:25	0:0	6	=
water	59:27	0:0	6	255
water	59:30	0:0	6	;
water	69:6	0:0	2	palette
op	69:14	0:0	2	=
call	69:16	69:48	2	store_write_palette
arg	69:36	69:38	3	ps
water	69:36	0:0	4	ps
arg	69:40	69:48	3	npalette
water	69:40	0:0	4	npalette
water	69:49	0:0	2	;
for	70:6	76:6	2	(i = 0 ;i < npalette;++ i)
forinit	70:11	70:14	3	i = 0 ;
water	70:11	0:0	4	i
op	70:12	0:0	4	=
water	70:13	0:0	4	0
water	70:14	0:0	4	;
cond	70:16	70:18	3	i < npalette
water	70:16	0:0	4	i
op	70:17	0:0	4	<
water	70:18	0:0	4	npalette
forexpr	70:28	70:30	3	++ i
op	70:28	0:0	4	++
water	70:30	0:0	4	i
stmts	71:6	76:6	3	
water	71:6	0:0	4	{
water	72:9	0:0	4	palette
op	72:16	0:0	4	[
water	72:17	0:0	4	i
op	72:18	0:0	4	]
op	72:19	0:0	4	.
water	72:20	0:0	4	alpha
op	72:26	0:0	4	=
water	72:28	0:0	4	values
op	72:34	0:0	4	[
water	72:35	0:0	4	i
op	72:37	0:0	4	^
water	72:39	0:0	4	selector
op	72:47	0:0	4	[
water	72:48	0:0	4	1
op	72:49	0:0	4	]
op	72:50	0:0	4	]
op	72:51	0:0	4	[
water	72:52	0:0	4	0
op	72:53	0:0	4	]
water	72:54	0:0	4	;
water	73:9	0:0	4	palette
op	73:16	0:0	4	[
water	73:17	0:0	4	i
op	73:18	0:0	4	]
op	73:19	0:0	4	.
water	73:20	0:0	4	red
op	73:26	0:0	4	=
water	73:28	0:0	4	values
op	73:34	0:0	4	[
water	73:35	0:0	4	i
op	73:37	0:0	4	^
water	73:39	0:0	4	selector
op	73:47	0:0	4	[
water	73:48	0:0	4	1
op	73:49	0:0	4	]
op	73:50	0:0	4	]
op	73:51	0:0	4	[
water	73:52	0:0	4	1
op	73:53	0:0	4	]
water	73:54	0:0	4	;
water	74:9	0:0	4	palette
op	74:16	0:0	4	[
water	74:17	0:0	4	i
op	74:18	0:0	4	]
op	74:19	0:0	4	.
water	74:20	0:0	4	green
op	74:26	0:0	4	=
water	74:28	0:0	4	values
op	74:34	0:0	4	[
water	74:35	0:0	4	i
op	74:37	0:0	4	^
water	74:39	0:0	4	selector
op	74:47	0:0	4	[
water	74:48	0:0	4	1
op	74:49	0:0	4	]
op	74:50	0:0	4	]
op	74:51	0:0	4	[
water	74:52	0:0	4	2
op	74:53	0:0	4	]
water	74:54	0:0	4	;
water	75:9	0:0	4	palette
op	75:16	0:0	4	[
water	75:17	0:0	4	i
op	75:18	0:0	4	]
op	75:19	0:0	4	.
water	75:20	0:0	4	blue
op	75:26	0:0	4	=
water	75:28	0:0	4	values
op	75:34	0:0	4	[
water	75:35	0:0	4	i
op	75:37	0:0	4	^
water	75:39	0:0	4	selector
op	75:47	0:0	4	[
water	75:48	0:0	4	1
op	75:49	0:0	4	]
op	75:50	0:0	4	]
op	75:51	0:0	4	[
water	75:52	0:0	4	3
op	75:53	0:0	4	]
water	75:54	0:0	4	;
water	76:6	0:0	4	}
return	77:6	77:20	2	palette
water	77:13	0:0	3	palette
water	78:3	0:0	2	}

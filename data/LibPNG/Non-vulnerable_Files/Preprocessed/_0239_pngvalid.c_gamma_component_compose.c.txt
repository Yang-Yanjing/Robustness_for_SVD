func	1:0	60:0	0	static double	gamma_component_compose
params	2:23	0:0	1	
param	2:24	2:41	2	int	do_background
param	2:43	2:62	2	double	input_sample
param	2:64	2:76	2	double	alpha
param	3:3	3:20	2	double	background
param	3:22	3:34	2	int *	compose
stmnts	5:3	59:22	1	
switch	5:3	58:3	2	(do_background)
cond	5:11	5:11	3	do_background
water	5:11	0:0	4	do_background
stmts	6:3	58:3	3	
water	6:3	0:0	4	{
label	8:6	8:38	4	case PNG_BACKGROUND_GAMMA_SCREEN :
label	9:6	9:36	4	case PNG_BACKGROUND_GAMMA_FILE :
label	10:6	10:38	4	case PNG_BACKGROUND_GAMMA_UNIQUE :
if	12:9	22:9	4	(alpha < 1)
cond	12:13	12:21	5	alpha < 1
water	12:13	0:0	6	alpha
op	12:19	0:0	6	<
water	12:21	0:0	6	1
stmts	13:9	22:9	5	
water	13:9	0:0	6	{
if	14:12	19:12	6	(alpha > 0)
cond	14:16	14:24	7	alpha > 0
water	14:16	0:0	8	alpha
op	14:22	0:0	8	>
water	14:24	0:0	8	0
stmts	15:12	19:12	7	
water	15:12	0:0	8	{
water	16:15	0:0	8	input_sample
op	16:28	0:0	8	=
water	16:30	0:0	8	input_sample
op	16:43	0:0	8	*
water	16:45	0:0	8	alpha
op	16:51	0:0	8	+
water	16:53	0:0	8	background
op	16:64	0:0	8	*
water	16:66	0:0	8	(
water	16:67	0:0	8	1
op	16:68	0:0	8	-
water	16:69	0:0	8	alpha
water	16:74	0:0	8	)
water	16:75	0:0	8	;
if	17:15	18:30	8	(compose != NULL)
cond	17:19	17:30	9	compose != NULL
water	17:19	0:0	10	compose
op	17:27	0:0	10	!=
water	17:30	0:0	10	NULL
stmts	18:18	18:30	9	
op	18:18	0:0	10	*
water	18:19	0:0	10	compose
op	18:27	0:0	10	=
water	18:29	0:0	10	1
water	18:30	0:0	10	;
water	19:12	0:0	8	}
else	20:12	21:40	6
stmts	21:15	21:40	7	
water	21:15	0:0	8	input_sample
op	21:28	0:0	8	=
water	21:30	0:0	8	background
water	21:40	0:0	8	;
water	22:9	0:0	6	}
break	23:9	23:14	4	
water	26:6	0:0	4	case
water	26:11	0:0	4	ALPHA_MODE_OFFSET
op	26:29	0:0	4	+
water	26:31	0:0	4	PNG_ALPHA_STANDARD
water	26:49	0:0	4	:
water	27:6	0:0	4	case
water	27:11	0:0	4	ALPHA_MODE_OFFSET
op	27:29	0:0	4	+
water	27:31	0:0	4	PNG_ALPHA_BROKEN
water	27:47	0:0	4	:
water	32:6	0:0	4	case
water	32:11	0:0	4	ALPHA_MODE_OFFSET
op	32:29	0:0	4	+
water	32:31	0:0	4	PNG_ALPHA_OPTIMIZED
water	32:50	0:0	4	:
water	37:9	0:0	4	if
water	37:12	0:0	4	(
water	37:13	0:0	4	alpha
op	37:19	0:0	4	<
water	37:21	0:0	4	1
water	37:22	0:0	4	)
water	38:9	0:0	4	{
water	39:12	0:0	4	if
water	39:15	0:0	4	(
water	39:16	0:0	4	alpha
op	39:22	0:0	4	>
water	39:24	0:0	4	0
water	39:25	0:0	4	)
water	40:12	0:0	4	{
water	41:15	0:0	4	input_sample
op	41:28	0:0	4	*=
water	41:31	0:0	4	alpha
water	41:36	0:0	4	;
water	42:15	0:0	4	if
water	42:18	0:0	4	(
water	42:19	0:0	4	compose
op	42:27	0:0	4	!=
water	42:30	0:0	4	NULL
water	42:34	0:0	4	)
op	43:18	0:0	4	*
water	43:19	0:0	4	compose
op	43:27	0:0	4	=
water	43:29	0:0	4	1
water	43:30	0:0	4	;
water	44:12	0:0	4	}
water	45:12	0:0	4	else
water	46:15	0:0	4	input_sample
op	46:28	0:0	4	=
water	46:30	0:0	4	0
water	46:31	0:0	4	;
water	47:9	0:0	4	}
water	48:9	0:0	4	break
water	48:14	0:0	4	;
label	50:6	50:13	4	default :
call	54:9	54:21	4	UNUSED
arg	54:16	54:21	5	alpha
water	54:16	0:0	6	alpha
call	55:9	55:26	4	UNUSED
arg	55:16	55:26	5	background
water	55:16	0:0	6	background
call	56:9	56:23	4	UNUSED
arg	56:16	56:23	5	compose
water	56:16	0:0	6	compose
water	57:9	0:0	4	break
water	57:14	0:0	4	;
water	58:3	0:0	4	}
return	59:3	59:22	2	input_sample
water	59:10	0:0	3	input_sample

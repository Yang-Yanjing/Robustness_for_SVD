func	1:0	30:0	0	static int	png_pass_row_shift
params	2:18	0:0	1	
param	2:19	2:27	2	int	pass
stmnts	0:0	29:27	1	
decl	4:3	4:29	2	int	x
water	4:8	0:0	2	,
decl	4:3	4:29	2	int	y
water	4:11	0:0	2	,
decl	4:3	4:29	2	int	base
op	4:17	0:0	2	=
water	4:18	0:0	2	(
op	4:19	0:0	2	-
water	4:20	0:0	2	1
water	4:21	0:0	2	)
water	4:22	0:0	2	,
decl	4:3	4:29	2	int	inc
op	4:27	0:0	2	=
water	4:28	0:0	2	8
op	5:3	0:0	2	++
water	5:5	0:0	2	pass
water	5:9	0:0	2	;
for	6:3	18:3	2	(y = 0 ;y < 8;++ y)
forinit	6:8	6:11	3	y = 0 ;
water	6:8	0:0	4	y
op	6:9	0:0	4	=
water	6:10	0:0	4	0
water	6:11	0:0	4	;
cond	6:13	6:15	3	y < 8
water	6:13	0:0	4	y
op	6:14	0:0	4	<
water	6:15	0:0	4	8
forexpr	6:18	6:20	3	++ y
op	6:18	0:0	4	++
water	6:20	0:0	4	y
stmts	6:23	18:3	3	
for	6:23	18:3	4	(x = 0 ;x < 8;++ x)
forinit	6:28	6:31	5	x = 0 ;
water	6:28	0:0	6	x
op	6:29	0:0	6	=
water	6:30	0:0	6	0
water	6:31	0:0	6	;
cond	6:33	6:35	5	x < 8
water	6:33	0:0	6	x
op	6:34	0:0	6	<
water	6:35	0:0	6	8
forexpr	6:38	6:40	5	++ x
op	6:38	0:0	6	++
water	6:40	0:0	6	x
stmts	6:43	18:3	5	
if	6:43	18:3	6	(adam7 [ y ] [ x ] == pass)
cond	6:47	6:62	7	adam7 [ y ] [ x ] == pass
water	6:47	0:0	8	adam7
op	6:52	0:0	8	[
water	6:53	0:0	8	y
op	6:54	0:0	8	]
op	6:55	0:0	8	[
water	6:56	0:0	8	x
op	6:57	0:0	8	]
op	6:59	0:0	8	==
water	6:62	0:0	8	pass
stmts	7:3	18:3	7	
water	7:3	0:0	8	{
if	8:6	9:17	8	(base == ( - 1 ))
cond	8:10	8:21	9	base == ( - 1 )
water	8:10	0:0	10	base
op	8:15	0:0	10	==
water	8:18	0:0	10	(
op	8:19	0:0	10	-
water	8:20	0:0	10	1
water	8:21	0:0	10	)
stmts	9:9	9:17	9	
water	9:9	0:0	10	base
op	9:14	0:0	10	=
water	9:16	0:0	10	y
water	9:17	0:0	10	;
else	10:6	11:10	8
stmts	10:11	11:10	9	
if	10:11	11:10	10	(base == y)
cond	10:15	10:23	11	base == y
water	10:15	0:0	12	base
op	10:20	0:0	12	==
water	10:23	0:0	12	y
stmts	11:9	11:10	11	
water	11:9	0:0	12	{
water	0:0	0:0	12	STATEMENTS
water	11:10	0:0	12	}
else	12:6	13:15	8
stmts	12:11	13:15	9	
if	12:11	13:15	10	(inc == y - base)
cond	12:15	12:24	11	inc == y - base
water	12:15	0:0	12	inc
op	12:19	0:0	12	==
water	12:22	0:0	12	y
op	12:23	0:0	12	-
water	12:24	0:0	12	base
stmts	13:9	13:15	11	
water	13:9	0:0	12	base
op	13:13	0:0	12	=
water	13:14	0:0	12	y
water	13:15	0:0	12	;
else	14:6	15:29	8
stmts	14:11	15:29	9	
if	14:11	15:29	10	(inc == 8)
cond	14:15	14:22	11	inc == 8
water	14:15	0:0	12	inc
op	14:19	0:0	12	==
water	14:22	0:0	12	8
stmts	15:9	15:29	11	
water	15:9	0:0	12	inc
op	15:13	0:0	12	=
water	15:15	0:0	12	y
op	15:16	0:0	12	-
water	15:17	0:0	12	base
water	15:21	0:0	12	,
water	15:23	0:0	12	base
op	15:27	0:0	12	=
water	15:28	0:0	12	y
water	15:29	0:0	12	;
else	16:6	17:20	8
stmts	16:11	17:20	9	
if	16:11	17:20	10	(inc != y - base)
cond	16:15	16:24	11	inc != y - base
water	16:15	0:0	12	inc
op	16:19	0:0	12	!=
water	16:22	0:0	12	y
op	16:23	0:0	12	-
water	16:24	0:0	12	base
stmts	17:9	17:20	11	
return	17:9	17:20	12	0xff
water	17:16	0:0	13	0
water	17:17	0:0	13	xff
water	18:3	0:0	8	}
if	19:3	19:32	2	(base == ( - 1 ))
cond	19:7	19:18	3	base == ( - 1 )
water	19:7	0:0	4	base
op	19:12	0:0	4	==
water	19:15	0:0	4	(
op	19:16	0:0	4	-
water	19:17	0:0	4	1
water	19:18	0:0	4	)
stmts	19:21	19:32	3	
return	19:21	19:32	4	0xfe
water	19:28	0:0	5	0
water	19:29	0:0	5	xfe
switch	21:3	27:3	2	(inc)
cond	21:11	21:11	3	inc
water	21:11	0:0	4	inc
stmts	22:3	27:3	3	
water	22:3	0:0	4	{
label	23:0	23:6	4	case 2 :
return	23:8	23:16	4	1
water	23:15	0:0	5	1
label	24:0	24:6	4	case 4 :
return	24:8	24:16	4	2
water	24:15	0:0	5	2
label	25:0	25:6	4	case 8 :
return	25:8	25:16	4	3
water	25:15	0:0	5	3
label	26:0	26:7	4	default :
break	26:9	26:14	4	
water	27:3	0:0	4	}
return	29:3	29:27	2	(inc<<8)+0xfd
water	29:10	0:0	3	(
water	29:11	0:0	3	inc
op	29:15	0:0	3	<<
water	29:18	0:0	3	8
water	29:19	0:0	3	)
op	29:21	0:0	3	+
water	29:23	0:0	3	0
water	29:24	0:0	3	xfd

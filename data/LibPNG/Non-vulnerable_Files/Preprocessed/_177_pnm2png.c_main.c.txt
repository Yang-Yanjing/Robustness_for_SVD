func	2:0	95:0	0	int	main
params	2:8	0:0	1	
param	2:9	2:17	2	int	argc
param	2:19	2:31	2	char *	argv[]
stmnts	0:0	94:10	1	
decl	4:2	4:21	2	FILE	*fp_rd
op	4:14	0:0	2	=
water	4:16	0:0	2	stdin
decl	5:2	5:20	2	FILE	*fp_al
op	5:14	0:0	2	=
water	5:16	0:0	2	NULL
decl	6:2	6:22	2	FILE	*fp_wr
op	6:14	0:0	2	=
water	6:16	0:0	2	stdout
decl	7:2	7:24	2	BOOL	interlace
op	7:17	0:0	2	=
water	7:19	0:0	2	FALSE
decl	8:2	8:20	2	BOOL	alpha
op	8:13	0:0	2	=
water	8:15	0:0	2	FALSE
decl	9:2	9:10	2	int	argi
for	10:2	68:2	2	(argi = 1 ;argi < argc;argi ++)
forinit	10:7	10:15	3	argi = 1 ;
water	10:7	0:0	4	argi
op	10:12	0:0	4	=
water	10:14	0:0	4	1
water	10:15	0:0	4	;
cond	10:17	10:24	3	argi < argc
water	10:17	0:0	4	argi
op	10:22	0:0	4	<
water	10:24	0:0	4	argc
forexpr	10:30	10:34	3	argi ++
water	10:30	0:0	4	argi
op	10:34	0:0	4	++
stmts	11:2	68:2	3	
water	11:2	0:0	4	{
if	12:4	42:4	4	(argv [ argi ] [ 0 ] == '-')
cond	12:8	12:25	5	argv [ argi ] [ 0 ] == '-'
water	12:8	0:0	6	argv
op	12:12	0:0	6	[
water	12:13	0:0	6	argi
op	12:17	0:0	6	]
op	12:18	0:0	6	[
water	12:19	0:0	6	0
op	12:20	0:0	6	]
op	12:22	0:0	6	==
water	12:25	0:0	6	'-'
stmts	13:4	42:4	5	
water	13:4	0:0	6	{
switch	14:6	41:6	6	(argv [ argi ] [ 1 ])
cond	14:14	14:26	7	argv [ argi ] [ 1 ]
water	14:14	0:0	8	argv
op	14:18	0:0	8	[
water	14:19	0:0	8	argi
op	14:23	0:0	8	]
op	14:24	0:0	8	[
water	14:25	0:0	8	1
op	14:26	0:0	8	]
stmts	15:6	41:6	7	
water	15:6	0:0	8	{
water	16:8	0:0	8	case
water	16:13	0:0	8	'i'
water	16:16	0:0	8	:
water	17:10	0:0	8	interlace
op	17:20	0:0	8	=
water	17:22	0:0	8	TRUE
water	17:26	0:0	8	;
break	18:10	18:15	8	
water	19:8	0:0	8	case
water	19:13	0:0	8	'a'
water	19:16	0:0	8	:
water	20:10	0:0	8	alpha
op	20:16	0:0	8	=
water	20:18	0:0	8	TRUE
water	20:22	0:0	8	;
water	21:10	0:0	8	argi
op	21:14	0:0	8	++
water	21:16	0:0	8	;
if	22:10	28:10	8	(( fp_al =fopen (argv [ argi ] ,"rb" ) ) == NULL)
cond	22:14	22:52	9	( fp_al =fopen (argv [ argi ] ,"rb" ) ) == NULL
water	22:14	0:0	10	(
water	22:15	0:0	10	fp_al
op	22:21	0:0	10	=
call	22:23	22:46	10	fopen
arg	22:30	22:40	11	argv[argi]
water	22:30	0:0	12	argv
op	22:34	0:0	12	[
water	22:35	0:0	12	argi
op	22:39	0:0	12	]
arg	22:42	22:46	11	"rb"
water	22:42	0:0	12	"rb"
water	22:47	0:0	10	)
op	22:49	0:0	10	==
water	22:52	0:0	10	NULL
stmts	23:10	28:10	9	
water	23:10	0:0	10	{
call	24:12	24:40	10	fprintf
arg	24:21	24:27	11	stderr
water	24:21	0:0	12	stderr
arg	24:29	24:40	11	"PNM2PNG\n"
water	24:29	0:0	12	"PNM2PNG\n"
water	24:41	0:0	10	;
call	25:12	26:25	10	fprintf
arg	25:21	25:27	11	stderr
water	25:21	0:0	12	stderr
arg	25:29	25:77	11	"Error:  alpha-channel file %s does not exist\n"
water	25:29	0:0	12	"Error:  alpha-channel file %s does not exist\n"
arg	26:15	26:25	11	argv[argi]
water	26:15	0:0	12	argv
op	26:19	0:0	12	[
water	26:20	0:0	12	argi
op	26:24	0:0	12	]
water	26:26	0:0	10	;
call	27:12	27:19	10	exit
arg	27:18	27:19	11	1
water	27:18	0:0	12	1
water	27:20	0:0	10	;
water	28:10	0:0	10	}
break	29:10	29:15	8	
water	30:8	0:0	8	case
water	30:13	0:0	8	'h'
water	30:16	0:0	8	:
water	31:8	0:0	8	case
water	31:13	0:0	8	'?'
water	31:16	0:0	8	:
call	32:10	32:16	8	usage
water	32:17	0:0	8	;
call	33:10	33:16	8	exit
arg	33:15	33:16	9	0
water	33:15	0:0	10	0
water	33:17	0:0	8	;
break	34:10	34:15	8	
label	35:8	35:15	8	default :
call	36:10	36:38	8	fprintf
arg	36:19	36:25	9	stderr
water	36:19	0:0	10	stderr
arg	36:27	36:38	9	"PNM2PNG\n"
water	36:27	0:0	10	"PNM2PNG\n"
water	36:39	0:0	8	;
call	37:10	37:68	8	fprintf
arg	37:19	37:25	9	stderr
water	37:19	0:0	10	stderr
arg	37:27	37:56	9	"Error:  unknown option %s\n"
water	37:27	0:0	10	"Error:  unknown option %s\n"
arg	37:58	37:68	9	argv[argi]
water	37:58	0:0	10	argv
op	37:62	0:0	10	[
water	37:63	0:0	10	argi
op	37:67	0:0	10	]
water	37:69	0:0	8	;
call	38:10	38:16	8	usage
water	38:17	0:0	8	;
call	39:10	39:16	8	exit
arg	39:15	39:16	9	1
water	39:15	0:0	10	1
water	39:17	0:0	8	;
break	40:10	40:15	8	
water	41:6	0:0	8	}
water	42:4	0:0	6	}
else	43:4	51:4	4
stmts	43:9	51:4	5	
if	43:9	51:4	6	(fp_rd == stdin)
cond	43:13	43:22	7	fp_rd == stdin
water	43:13	0:0	8	fp_rd
op	43:19	0:0	8	==
water	43:22	0:0	8	stdin
stmts	44:4	51:4	7	
water	44:4	0:0	8	{
if	45:6	50:6	8	(( fp_rd =fopen (argv [ argi ] ,"rb" ) ) == NULL)
cond	45:10	45:48	9	( fp_rd =fopen (argv [ argi ] ,"rb" ) ) == NULL
water	45:10	0:0	10	(
water	45:11	0:0	10	fp_rd
op	45:17	0:0	10	=
call	45:19	45:42	10	fopen
arg	45:26	45:36	11	argv[argi]
water	45:26	0:0	12	argv
op	45:30	0:0	12	[
water	45:31	0:0	12	argi
op	45:35	0:0	12	]
arg	45:38	45:42	11	"rb"
water	45:38	0:0	12	"rb"
water	45:43	0:0	10	)
op	45:45	0:0	10	==
water	45:48	0:0	10	NULL
stmts	46:6	50:6	9	
water	46:6	0:0	10	{
call	47:8	47:36	10	fprintf
arg	47:17	47:23	11	stderr
water	47:17	0:0	12	stderr
arg	47:25	47:36	11	"PNM2PNG\n"
water	47:25	0:0	12	"PNM2PNG\n"
water	47:37	0:0	10	;
call	48:8	48:71	10	fprintf
arg	48:17	48:23	11	stderr
water	48:17	0:0	12	stderr
arg	48:25	48:59	11	"Error:  file %s does not exist\n"
water	48:25	0:0	12	"Error:  file %s does not exist\n"
arg	48:61	48:71	11	argv[argi]
water	48:61	0:0	12	argv
op	48:65	0:0	12	[
water	48:66	0:0	12	argi
op	48:70	0:0	12	]
water	48:72	0:0	10	;
call	49:8	49:15	10	exit
arg	49:14	49:15	11	1
water	49:14	0:0	12	1
water	49:16	0:0	10	;
water	50:6	0:0	10	}
water	51:4	0:0	8	}
else	52:4	60:4	4
stmts	52:9	60:4	5	
if	52:9	60:4	6	(fp_wr == stdout)
cond	52:13	52:22	7	fp_wr == stdout
water	52:13	0:0	8	fp_wr
op	52:19	0:0	8	==
water	52:22	0:0	8	stdout
stmts	53:4	60:4	7	
water	53:4	0:0	8	{
if	54:6	59:6	8	(( fp_wr =fopen (argv [ argi ] ,"wb" ) ) == NULL)
cond	54:10	54:48	9	( fp_wr =fopen (argv [ argi ] ,"wb" ) ) == NULL
water	54:10	0:0	10	(
water	54:11	0:0	10	fp_wr
op	54:17	0:0	10	=
call	54:19	54:42	10	fopen
arg	54:26	54:36	11	argv[argi]
water	54:26	0:0	12	argv
op	54:30	0:0	12	[
water	54:31	0:0	12	argi
op	54:35	0:0	12	]
arg	54:38	54:42	11	"wb"
water	54:38	0:0	12	"wb"
water	54:43	0:0	10	)
op	54:45	0:0	10	==
water	54:48	0:0	10	NULL
stmts	55:6	59:6	9	
water	55:6	0:0	10	{
call	56:8	56:36	10	fprintf
arg	56:17	56:23	11	stderr
water	56:17	0:0	12	stderr
arg	56:25	56:36	11	"PNM2PNG\n"
water	56:25	0:0	12	"PNM2PNG\n"
water	56:37	0:0	10	;
call	57:8	57:75	10	fprintf
arg	57:17	57:23	11	stderr
water	57:17	0:0	12	stderr
arg	57:25	57:63	11	"Error:  can not create PNG-file %s\n"
water	57:25	0:0	12	"Error:  can not create PNG-file %s\n"
arg	57:65	57:75	11	argv[argi]
water	57:65	0:0	12	argv
op	57:69	0:0	12	[
water	57:70	0:0	12	argi
op	57:74	0:0	12	]
water	57:76	0:0	10	;
call	58:8	58:15	10	exit
arg	58:14	58:15	11	1
water	58:14	0:0	12	1
water	58:16	0:0	10	;
water	59:6	0:0	10	}
water	60:4	0:0	8	}
else	61:4	67:4	4
stmts	62:4	67:4	5	
water	62:4	0:0	6	{
call	63:6	63:34	6	fprintf
arg	63:15	63:21	7	stderr
water	63:15	0:0	8	stderr
arg	63:23	63:34	7	"PNM2PNG\n"
water	63:23	0:0	8	"PNM2PNG\n"
water	63:35	0:0	6	;
call	64:6	64:54	6	fprintf
arg	64:15	64:21	7	stderr
water	64:15	0:0	8	stderr
arg	64:23	64:54	7	"Error:  too many parameters\n"
water	64:23	0:0	8	"Error:  too many parameters\n"
water	64:55	0:0	6	;
call	65:6	65:12	6	usage
water	65:13	0:0	6	;
call	66:6	66:13	6	exit
arg	66:12	66:13	7	1
water	66:12	0:0	8	1
water	66:14	0:0	6	;
water	67:4	0:0	6	}
water	68:2	0:0	4	}
if	71:2	74:2	2	(fp_rd == stdin)
cond	71:6	71:15	3	fp_rd == stdin
water	71:6	0:0	4	fp_rd
op	71:12	0:0	4	==
water	71:15	0:0	4	stdin
stmts	72:2	74:2	3	
water	72:2	0:0	4	{
call	73:4	73:28	4	setmode
arg	73:13	73:18	5	STDIN
water	73:13	0:0	6	STDIN
arg	73:20	73:28	5	O_BINARY
water	73:20	0:0	6	O_BINARY
water	73:29	0:0	4	;
water	74:2	0:0	4	}
if	75:2	78:2	2	(fp_wr == stdout)
cond	75:6	75:15	3	fp_wr == stdout
water	75:6	0:0	4	fp_wr
op	75:12	0:0	4	==
water	75:15	0:0	4	stdout
stmts	76:2	78:2	3	
water	76:2	0:0	4	{
call	77:4	77:29	4	setmode
arg	77:13	77:19	5	STDOUT
water	77:13	0:0	6	STDOUT
arg	77:21	77:29	5	O_BINARY
water	77:21	0:0	6	O_BINARY
water	77:30	0:0	4	;
water	78:2	0:0	4	}
if	81:2	86:2	2	(pnm2png (fp_rd ,fp_wr ,fp_al ,interlace ,alpha ) == FALSE)
cond	81:6	81:57	3	pnm2png (fp_rd ,fp_wr ,fp_al ,interlace ,alpha ) == FALSE
call	81:6	81:52	4	pnm2png
arg	81:15	81:20	5	fp_rd
water	81:15	0:0	6	fp_rd
arg	81:22	81:27	5	fp_wr
water	81:22	0:0	6	fp_wr
arg	81:29	81:34	5	fp_al
water	81:29	0:0	6	fp_al
arg	81:36	81:45	5	interlace
water	81:36	0:0	6	interlace
arg	81:47	81:52	5	alpha
water	81:47	0:0	6	alpha
op	81:54	0:0	4	==
water	81:57	0:0	4	FALSE
stmts	82:2	86:2	3	
water	82:2	0:0	4	{
call	83:4	83:32	4	fprintf
arg	83:13	83:19	5	stderr
water	83:13	0:0	6	stderr
arg	83:21	83:32	5	"PNM2PNG\n"
water	83:21	0:0	6	"PNM2PNG\n"
water	83:33	0:0	4	;
call	84:4	84:69	4	fprintf
arg	84:13	84:19	5	stderr
water	84:13	0:0	6	stderr
arg	84:21	84:69	5	"Error:  unsuccessful converting to PNG-image\n"
water	84:21	0:0	6	"Error:  unsuccessful converting to PNG-image\n"
water	84:70	0:0	4	;
call	85:4	85:11	4	exit
arg	85:10	85:11	5	1
water	85:10	0:0	6	1
water	85:12	0:0	4	;
water	86:2	0:0	4	}
call	88:2	88:15	2	fclose
arg	88:10	88:15	3	fp_rd
water	88:10	0:0	4	fp_rd
water	88:16	0:0	2	;
call	90:2	90:15	2	fclose
arg	90:10	90:15	3	fp_wr
water	90:10	0:0	4	fp_wr
water	90:16	0:0	2	;
if	92:2	93:18	2	(alpha)
cond	92:6	92:6	3	alpha
water	92:6	0:0	4	alpha
stmts	93:4	93:18	3	
call	93:4	93:17	4	fclose
arg	93:12	93:17	5	fp_al
water	93:12	0:0	6	fp_al
water	93:18	0:0	4	;
return	94:2	94:10	2	0
water	94:9	0:0	3	0

func	1:0	42:0	0	static int	read_byte
params	2:9	0:0	1	
param	2:10	2:27	2	struct file *	file
stmnts	0:0	41:13	1	
decl	4:3	4:28	2	int	ch
op	4:10	0:0	2	=
call	4:12	4:27	3	getc
arg	4:17	4:27	4	file->file
water	4:17	0:0	5	file
op	4:21	0:0	5	->
water	4:23	0:0	5	file
if	5:3	9:3	2	(ch >= 0 && ch <= 255)
cond	5:7	5:24	3	ch >= 0 && ch <= 255
water	5:7	0:0	4	ch
op	5:10	0:0	4	>=
water	5:13	0:0	4	0
op	5:15	0:0	4	&&
water	5:18	0:0	4	ch
op	5:21	0:0	4	<=
water	5:24	0:0	4	255
stmts	6:3	9:3	3	
water	6:3	0:0	4	{
op	7:6	0:0	4	++
water	7:8	0:0	4	(
water	7:9	0:0	4	file
op	7:13	0:0	4	->
water	7:15	0:0	4	read_count
water	7:25	0:0	4	)
water	7:26	0:0	4	;
return	8:6	8:15	4	ch
water	8:13	0:0	5	ch
water	9:3	0:0	4	}
else	10:3	16:3	2
stmts	10:8	16:3	3	
if	10:8	16:3	4	(ch != EOF)
cond	10:12	10:18	5	ch != EOF
water	10:12	0:0	6	ch
op	10:15	0:0	6	!=
water	10:18	0:0	6	EOF
stmts	11:3	16:3	5	
water	11:3	0:0	6	{
water	12:6	0:0	6	file
op	12:10	0:0	6	->
water	12:12	0:0	6	status_code
op	12:24	0:0	6	|=
water	12:27	0:0	6	INTERNAL_ERROR
water	12:41	0:0	6	;
water	13:6	0:0	6	file
op	13:10	0:0	6	->
water	13:12	0:0	6	read_errno
op	13:23	0:0	6	=
water	13:25	0:0	6	ERANGE
water	13:31	0:0	6	;
call	15:6	15:57	6	emit_error
arg	15:17	15:21	7	file
water	15:17	0:0	8	file
arg	15:23	15:44	7	UNEXPECTED_ERROR_CODE
water	15:23	0:0	8	UNEXPECTED_ERROR_CODE
arg	15:46	15:57	7	"file read"
water	15:46	0:0	8	"file read"
water	15:58	0:0	6	;
water	16:3	0:0	6	}
else	18:6	22:6	2
stmts	18:11	22:6	3	
if	18:11	22:6	4	(errno == EINTR)
cond	18:15	18:24	5	errno == EINTR
water	18:15	0:0	6	errno
op	18:21	0:0	6	==
water	18:24	0:0	6	EINTR
stmts	19:6	22:6	5	
water	19:6	0:0	6	{
water	20:9	0:0	6	errno
op	20:15	0:0	6	=
water	20:17	0:0	6	0
water	20:18	0:0	6	;
return	21:9	21:31	6	read_byte(file)
call	21:16	21:30	7	read_byte
arg	21:26	21:30	8	file
water	21:26	0:0	9	file
water	22:6	0:0	6	}
else	24:3	35:3	2
stmts	25:3	35:3	3	
water	25:3	0:0	4	{
if	29:6	30:33	4	(ferror (file -> file ))
cond	29:10	29:27	5	ferror (file -> file )
call	29:10	29:27	6	ferror
arg	29:17	29:27	7	file->file
water	29:17	0:0	8	file
op	29:21	0:0	8	->
water	29:23	0:0	8	file
stmts	30:9	30:33	5	
water	30:9	0:0	6	file
op	30:13	0:0	6	->
water	30:15	0:0	6	read_errno
op	30:26	0:0	6	=
water	30:28	0:0	6	errno
water	30:33	0:0	6	;
else	31:6	32:29	4
stmts	31:11	32:29	5	
if	31:11	32:29	6	(feof (file -> file ))
cond	31:15	31:30	7	feof (file -> file )
call	31:15	31:30	8	feof
arg	31:20	31:30	9	file->file
water	31:20	0:0	10	file
op	31:24	0:0	10	->
water	31:26	0:0	10	file
stmts	32:9	32:29	7	
water	32:9	0:0	8	file
op	32:13	0:0	8	->
water	32:15	0:0	8	read_errno
op	32:26	0:0	8	=
water	32:28	0:0	8	0
water	32:29	0:0	8	;
else	33:6	34:32	4
stmts	34:9	34:32	5	
water	34:9	0:0	6	file
op	34:13	0:0	6	->
water	34:15	0:0	6	read_errno
op	34:26	0:0	6	=
water	34:28	0:0	6	EDOM
water	34:32	0:0	6	;
water	35:3	0:0	4	}
water	40:3	0:0	2	file
op	40:7	0:0	2	->
water	40:9	0:0	2	status_code
op	40:21	0:0	2	|=
water	40:24	0:0	2	TRUNCATED
water	40:33	0:0	2	;
return	41:3	41:13	2	EOF
water	41:10	0:0	3	EOF

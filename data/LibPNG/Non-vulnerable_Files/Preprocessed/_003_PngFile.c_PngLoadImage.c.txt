func	2:0	147:0	0	BOOL	PngLoadImage
params	2:18	0:0	1	
param	2:19	2:37	2	PTSTR	pstrFileName
param	2:39	2:62	2	png_byte * *	ppbImageData
param	3:19	3:31	2	int *	piWidth
param	3:33	3:46	2	int *	piHeight
param	3:48	3:63	2	int *	piChannels
param	3:65	3:85	2	png_color *	pBkgColor
stmnts	5:4	146:15	1	
water	5:4	0:0	2	static
water	5:11	0:0	2	FILE
op	5:23	0:0	2	*
water	5:24	0:0	2	pfFile
water	5:30	0:0	2	;
decl	6:4	6:32	2	png_byte	pbSig[8]
decl	7:4	7:33	2	int	iBitDepth
decl	8:4	8:34	2	int	iColorType
decl	9:4	9:30	2	double	dGamma
decl	10:4	10:35	2	png_color_16	*pBackground
decl	11:4	11:34	2	png_uint_32	ulChannels
decl	12:4	12:34	2	png_uint_32	ulRowBytes
decl	13:4	13:51	2	png_byte	*pbImageData
op	13:36	0:0	2	=
op	13:38	0:0	2	*
water	13:39	0:0	2	ppbImageData
water	14:4	0:0	2	static
water	14:11	0:0	2	png_byte
op	14:22	0:0	2	*
op	14:23	0:0	2	*
water	14:24	0:0	2	ppbRowPointers
op	14:39	0:0	2	=
water	14:41	0:0	2	NULL
water	14:45	0:0	2	;
decl	15:4	15:25	2	int	i
if	17:4	21:4	2	(! pstrFileName)
cond	17:8	17:9	3	! pstrFileName
op	17:8	0:0	4	!
water	17:9	0:0	4	pstrFileName
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
op	19:8	0:0	4	*
water	19:9	0:0	4	ppbImageData
op	19:22	0:0	4	=
water	19:24	0:0	4	pbImageData
op	19:36	0:0	4	=
water	19:38	0:0	4	NULL
water	19:42	0:0	4	;
return	20:8	20:20	4	FALSE
water	20:15	0:0	5	FALSE
water	21:4	0:0	4	}
if	22:4	26:4	2	(! ( pfFile =fopen (pstrFileName ,"rb" ) ))
cond	22:8	22:44	3	! ( pfFile =fopen (pstrFileName ,"rb" ) )
op	22:8	0:0	4	!
water	22:9	0:0	4	(
water	22:10	0:0	4	pfFile
op	22:17	0:0	4	=
call	22:19	22:43	4	fopen
arg	22:25	22:37	5	pstrFileName
water	22:25	0:0	6	pstrFileName
arg	22:39	22:43	5	"rb"
water	22:39	0:0	6	"rb"
water	22:44	0:0	4	)
stmts	23:4	26:4	3	
water	23:4	0:0	4	{
op	24:8	0:0	4	*
water	24:9	0:0	4	ppbImageData
op	24:22	0:0	4	=
water	24:24	0:0	4	pbImageData
op	24:36	0:0	4	=
water	24:38	0:0	4	NULL
water	24:42	0:0	4	;
return	25:8	25:20	4	FALSE
water	25:15	0:0	5	FALSE
water	26:4	0:0	4	}
call	28:4	28:29	2	fread
arg	28:10	28:15	3	pbSig
water	28:10	0:0	4	pbSig
arg	28:17	28:18	3	1
water	28:17	0:0	4	1
arg	28:20	28:21	3	8
water	28:20	0:0	4	8
arg	28:23	28:29	3	pfFile
water	28:23	0:0	4	pfFile
water	28:30	0:0	2	;
if	29:4	33:4	2	(png_sig_cmp (pbSig ,0 ,8 ))
cond	29:8	29:31	3	png_sig_cmp (pbSig ,0 ,8 )
call	29:8	29:31	4	png_sig_cmp
arg	29:20	29:25	5	pbSig
water	29:20	0:0	6	pbSig
arg	29:27	29:28	5	0
water	29:27	0:0	6	0
arg	29:30	29:31	5	8
water	29:30	0:0	6	8
stmts	30:4	33:4	3	
water	30:4	0:0	4	{
op	31:8	0:0	4	*
water	31:9	0:0	4	ppbImageData
op	31:22	0:0	4	=
water	31:24	0:0	4	pbImageData
op	31:36	0:0	4	=
water	31:38	0:0	4	NULL
water	31:42	0:0	4	;
return	32:8	32:20	4	FALSE
water	32:15	0:0	5	FALSE
water	33:4	0:0	4	}
water	35:4	0:0	2	png_ptr
op	35:12	0:0	2	=
call	35:14	36:59	2	png_create_read_struct
arg	35:37	35:61	3	png_get_libpng_ver(NULL)
call	35:37	35:60	4	png_get_libpng_ver
arg	35:56	35:60	5	NULL
water	35:56	0:0	6	NULL
arg	35:63	35:67	3	NULL
water	35:63	0:0	4	NULL
arg	36:6	36:38	3	(png_error_ptr)png_cexcept_error
water	36:6	0:0	4	(
water	36:7	0:0	4	png_error_ptr
water	36:20	0:0	4	)
water	36:21	0:0	4	png_cexcept_error
arg	36:40	36:59	3	(png_error_ptr)NULL
water	36:40	0:0	4	(
water	36:41	0:0	4	png_error_ptr
water	36:54	0:0	4	)
water	36:55	0:0	4	NULL
water	36:60	0:0	2	;
if	37:4	41:4	2	(! png_ptr)
cond	37:8	37:9	3	! png_ptr
op	37:8	0:0	4	!
water	37:9	0:0	4	png_ptr
stmts	38:4	41:4	3	
water	38:4	0:0	4	{
op	39:8	0:0	4	*
water	39:9	0:0	4	ppbImageData
op	39:22	0:0	4	=
water	39:24	0:0	4	pbImageData
op	39:36	0:0	4	=
water	39:38	0:0	4	NULL
water	39:42	0:0	4	;
return	40:8	40:20	4	FALSE
water	40:15	0:0	5	FALSE
water	41:4	0:0	4	}
water	42:4	0:0	2	info_ptr
op	42:13	0:0	2	=
call	42:15	42:45	2	png_create_info_struct
arg	42:38	42:45	3	png_ptr
water	42:38	0:0	4	png_ptr
water	42:46	0:0	2	;
if	43:4	48:4	2	(! info_ptr)
cond	43:8	43:9	3	! info_ptr
op	43:8	0:0	4	!
water	43:9	0:0	4	info_ptr
stmts	44:4	48:4	3	
water	44:4	0:0	4	{
call	45:8	45:52	4	png_destroy_read_struct
arg	45:32	45:40	5	&png_ptr
op	45:32	0:0	6	&
water	45:33	0:0	6	png_ptr
arg	45:42	45:46	5	NULL
water	45:42	0:0	6	NULL
arg	45:48	45:52	5	NULL
water	45:48	0:0	6	NULL
water	45:53	0:0	4	;
op	46:8	0:0	4	*
water	46:9	0:0	4	ppbImageData
op	46:22	0:0	4	=
water	46:24	0:0	4	pbImageData
op	46:36	0:0	4	=
water	46:38	0:0	4	NULL
water	46:42	0:0	4	;
return	47:8	47:20	4	FALSE
water	47:15	0:0	5	FALSE
water	48:4	0:0	4	}
water	49:4	0:0	2	Try
water	50:4	0:0	2	{
call	53:8	53:35	2	png_init_io
arg	53:20	53:27	3	png_ptr
water	53:20	0:0	4	png_ptr
arg	53:29	53:35	3	pfFile
water	53:29	0:0	4	pfFile
water	53:36	0:0	2	;
call	55:8	55:65	2	png_set_read_fn
arg	55:24	55:31	3	png_ptr
water	55:24	0:0	4	png_ptr
arg	55:33	55:50	3	(png_voidp)pfFile
water	55:33	0:0	4	(
water	55:34	0:0	4	png_voidp
water	55:43	0:0	4	)
water	55:44	0:0	4	pfFile
arg	55:52	55:65	3	png_read_data
water	55:52	0:0	4	png_read_data
water	55:66	0:0	2	;
call	57:8	57:36	2	png_set_sig_bytes
arg	57:26	57:33	3	png_ptr
water	57:26	0:0	4	png_ptr
arg	57:35	57:36	3	8
water	57:35	0:0	4	8
water	57:37	0:0	2	;
call	59:8	59:39	2	png_read_info
arg	59:22	59:29	3	png_ptr
water	59:22	0:0	4	png_ptr
arg	59:31	59:39	3	info_ptr
water	59:31	0:0	4	info_ptr
water	59:40	0:0	2	;
call	61:8	62:41	2	png_get_IHDR
arg	61:21	61:28	3	png_ptr
water	61:21	0:0	4	png_ptr
arg	61:30	61:38	3	info_ptr
water	61:30	0:0	4	info_ptr
arg	61:40	61:47	3	piWidth
water	61:40	0:0	4	piWidth
arg	61:49	61:57	3	piHeight
water	61:49	0:0	4	piHeight
arg	61:59	61:69	3	&iBitDepth
op	61:59	0:0	4	&
water	61:60	0:0	4	iBitDepth
arg	62:12	62:23	3	&iColorType
op	62:12	0:0	4	&
water	62:13	0:0	4	iColorType
arg	62:25	62:29	3	NULL
water	62:25	0:0	4	NULL
arg	62:31	62:35	3	NULL
water	62:31	0:0	4	NULL
arg	62:37	62:41	3	NULL
water	62:37	0:0	4	NULL
water	62:42	0:0	2	;
water	66:4	0:0	2	if
water	66:7	0:0	2	(
water	66:8	0:0	2	iBitDepth
op	66:18	0:0	2	==
water	66:21	0:0	2	16
water	66:23	0:0	2	)
call	68:8	68:32	2	png_set_scale_16
arg	68:25	68:32	3	png_ptr
water	68:25	0:0	4	png_ptr
water	68:33	0:0	2	;
call	70:8	70:32	2	png_set_strip_16
arg	70:25	70:32	3	png_ptr
water	70:25	0:0	4	png_ptr
water	70:33	0:0	2	;
water	73:8	0:0	2	if
water	73:11	0:0	2	(
water	73:12	0:0	2	iColorType
op	73:23	0:0	2	==
water	73:26	0:0	2	PNG_COLOR_TYPE_PALETTE
water	73:48	0:0	2	)
call	74:12	74:34	2	png_set_expand
arg	74:27	74:34	3	png_ptr
water	74:27	0:0	4	png_ptr
water	74:35	0:0	2	;
water	75:8	0:0	2	if
water	75:11	0:0	2	(
water	75:12	0:0	2	iBitDepth
op	75:22	0:0	2	<
water	75:24	0:0	2	8
water	75:25	0:0	2	)
call	76:12	76:34	2	png_set_expand
arg	76:27	76:34	3	png_ptr
water	76:27	0:0	4	png_ptr
water	76:35	0:0	2	;
water	77:8	0:0	2	if
water	77:11	0:0	2	(
call	77:12	77:58	2	png_get_valid
arg	77:26	77:33	3	png_ptr
water	77:26	0:0	4	png_ptr
arg	77:35	77:43	3	info_ptr
water	77:35	0:0	4	info_ptr
arg	77:45	77:58	3	PNG_INFO_tRNS
water	77:45	0:0	4	PNG_INFO_tRNS
water	77:59	0:0	2	)
call	78:12	78:34	2	png_set_expand
arg	78:27	78:34	3	png_ptr
water	78:27	0:0	4	png_ptr
water	78:35	0:0	2	;
water	79:8	0:0	2	if
water	79:11	0:0	2	(
water	79:12	0:0	2	iColorType
op	79:23	0:0	2	==
water	79:26	0:0	2	PNG_COLOR_TYPE_GRAY
op	79:46	0:0	2	||
water	80:12	0:0	2	iColorType
op	80:23	0:0	2	==
water	80:26	0:0	2	PNG_COLOR_TYPE_GRAY_ALPHA
water	80:51	0:0	2	)
call	81:12	81:39	2	png_set_gray_to_rgb
arg	81:32	81:39	3	png_ptr
water	81:32	0:0	4	png_ptr
water	81:40	0:0	2	;
water	83:8	0:0	2	if
water	83:11	0:0	2	(
call	83:12	83:56	2	png_get_bKGD
arg	83:25	83:32	3	png_ptr
water	83:25	0:0	4	png_ptr
arg	83:34	83:42	3	info_ptr
water	83:34	0:0	4	info_ptr
arg	83:44	83:56	3	&pBackground
op	83:44	0:0	4	&
water	83:45	0:0	4	pBackground
water	83:57	0:0	2	)
water	84:8	0:0	2	{
call	85:12	85:86	2	png_set_background
arg	85:31	85:38	3	png_ptr
water	85:31	0:0	4	png_ptr
arg	85:40	85:51	3	pBackground
water	85:40	0:0	4	pBackground
arg	85:53	85:78	3	PNG_BACKGROUND_GAMMA_FILE
water	85:53	0:0	4	PNG_BACKGROUND_GAMMA_FILE
arg	85:80	85:81	3	1
water	85:80	0:0	4	1
arg	85:83	85:86	3	1.0
water	85:83	0:0	4	1
op	85:84	0:0	4	.
water	85:85	0:0	4	0
water	85:87	0:0	2	;
water	86:12	0:0	2	pBkgColor
op	86:21	0:0	2	->
water	86:23	0:0	2	red
op	86:29	0:0	2	=
water	86:31	0:0	2	(
water	86:32	0:0	2	byte
water	86:36	0:0	2	)
water	86:38	0:0	2	pBackground
op	86:49	0:0	2	->
water	86:51	0:0	2	red
water	86:54	0:0	2	;
water	87:12	0:0	2	pBkgColor
op	87:21	0:0	2	->
water	87:23	0:0	2	green
op	87:29	0:0	2	=
water	87:31	0:0	2	(
water	87:32	0:0	2	byte
water	87:36	0:0	2	)
water	87:38	0:0	2	pBackground
op	87:49	0:0	2	->
water	87:51	0:0	2	green
water	87:56	0:0	2	;
water	88:12	0:0	2	pBkgColor
op	88:21	0:0	2	->
water	88:23	0:0	2	blue
op	88:29	0:0	2	=
water	88:31	0:0	2	(
water	88:32	0:0	2	byte
water	88:36	0:0	2	)
water	88:38	0:0	2	pBackground
op	88:49	0:0	2	->
water	88:51	0:0	2	blue
water	88:55	0:0	2	;
water	89:8	0:0	2	}
water	90:8	0:0	2	else
water	91:8	0:0	2	{
water	92:12	0:0	2	pBkgColor
op	92:22	0:0	2	=
water	92:24	0:0	2	NULL
water	92:28	0:0	2	;
water	93:8	0:0	2	}
water	95:8	0:0	2	if
water	95:11	0:0	2	(
call	95:12	95:51	2	png_get_gAMA
arg	95:25	95:32	3	png_ptr
water	95:25	0:0	4	png_ptr
arg	95:34	95:42	3	info_ptr
water	95:34	0:0	4	info_ptr
arg	95:44	95:51	3	&dGamma
op	95:44	0:0	4	&
water	95:45	0:0	4	dGamma
water	95:52	0:0	2	)
call	96:12	96:55	2	png_set_gamma
arg	96:26	96:33	3	png_ptr
water	96:26	0:0	4	png_ptr
arg	96:35	96:47	3	(double)2.2
water	96:35	0:0	4	(
water	96:36	0:0	4	double
water	96:42	0:0	4	)
water	96:44	0:0	4	2
op	96:45	0:0	4	.
water	96:46	0:0	4	2
arg	96:49	96:55	3	dGamma
water	96:49	0:0	4	dGamma
water	96:56	0:0	2	;
call	98:8	98:46	2	png_read_update_info
arg	98:29	98:36	3	png_ptr
water	98:29	0:0	4	png_ptr
arg	98:38	98:46	3	info_ptr
water	98:38	0:0	4	info_ptr
water	98:47	0:0	2	;
call	100:8	101:41	2	png_get_IHDR
arg	100:21	100:28	3	png_ptr
water	100:21	0:0	4	png_ptr
arg	100:30	100:38	3	info_ptr
water	100:30	0:0	4	info_ptr
arg	100:40	100:47	3	piWidth
water	100:40	0:0	4	piWidth
arg	100:49	100:57	3	piHeight
water	100:49	0:0	4	piHeight
arg	100:59	100:69	3	&iBitDepth
op	100:59	0:0	4	&
water	100:60	0:0	4	iBitDepth
arg	101:12	101:23	3	&iColorType
op	101:12	0:0	4	&
water	101:13	0:0	4	iColorType
arg	101:25	101:29	3	NULL
water	101:25	0:0	4	NULL
arg	101:31	101:35	3	NULL
water	101:31	0:0	4	NULL
arg	101:37	101:41	3	NULL
water	101:37	0:0	4	NULL
water	101:42	0:0	2	;
water	103:8	0:0	2	ulRowBytes
op	103:19	0:0	2	=
call	103:21	103:55	2	png_get_rowbytes
arg	103:38	103:45	3	png_ptr
water	103:38	0:0	4	png_ptr
arg	103:47	103:55	3	info_ptr
water	103:47	0:0	4	info_ptr
water	103:56	0:0	2	;
water	104:8	0:0	2	ulChannels
op	104:19	0:0	2	=
call	104:21	104:55	2	png_get_channels
arg	104:38	104:45	3	png_ptr
water	104:38	0:0	4	png_ptr
arg	104:47	104:55	3	info_ptr
water	104:47	0:0	4	info_ptr
water	104:56	0:0	2	;
op	105:8	0:0	2	*
water	105:9	0:0	2	piChannels
op	105:20	0:0	2	=
water	105:22	0:0	2	ulChannels
water	105:32	0:0	2	;
water	107:8	0:0	2	if
water	107:11	0:0	2	(
water	107:12	0:0	2	pbImageData
water	107:23	0:0	2	)
water	108:8	0:0	2	{
call	109:12	109:29	2	free
arg	109:18	109:29	3	pbImageData
water	109:18	0:0	4	pbImageData
water	109:30	0:0	2	;
water	110:12	0:0	2	pbImageData
op	110:24	0:0	2	=
water	110:26	0:0	2	NULL
water	110:30	0:0	2	;
water	111:8	0:0	2	}
water	112:8	0:0	2	if
water	112:11	0:0	2	(
water	112:12	0:0	2	(
water	112:13	0:0	2	pbImageData
op	112:25	0:0	2	=
water	112:27	0:0	2	(
water	112:28	0:0	2	png_byte
op	112:37	0:0	2	*
water	112:38	0:0	2	)
call	112:40	113:46	2	malloc
arg	112:47	113:46	3	ulRowBytes*(*piHeight)*sizeof(png_byte)
water	112:47	0:0	4	ulRowBytes
op	112:58	0:0	4	*
water	112:60	0:0	4	(
op	112:61	0:0	4	*
water	112:62	0:0	4	piHeight
water	112:70	0:0	4	)
op	113:28	0:0	4	*
op	113:30	0:0	4	sizeof
water	113:36	0:0	4	(
water	113:37	0:0	4	png_byte
water	113:45	0:0	4	)
water	113:47	0:0	2	)
op	113:49	0:0	2	==
water	113:52	0:0	2	NULL
water	113:56	0:0	2	)
water	114:8	0:0	2	{
call	115:12	115:58	2	png_error
arg	115:22	115:29	3	png_ptr
water	115:22	0:0	4	png_ptr
arg	115:31	115:58	3	"Visual PNG: out of memory"
water	115:31	0:0	4	"Visual PNG: out of memory"
water	115:59	0:0	2	;
water	116:8	0:0	2	}
op	117:8	0:0	2	*
water	117:9	0:0	2	ppbImageData
op	117:22	0:0	2	=
water	117:24	0:0	2	pbImageData
water	117:35	0:0	2	;
water	119:8	0:0	2	if
water	119:11	0:0	2	(
water	119:12	0:0	2	(
water	119:13	0:0	2	ppbRowPointers
op	119:28	0:0	2	=
water	119:30	0:0	2	(
water	119:31	0:0	2	png_bytepp
water	119:41	0:0	2	)
call	119:43	120:47	2	malloc
arg	119:50	120:47	3	(*piHeight)*sizeof(png_bytep)
water	119:50	0:0	4	(
op	119:51	0:0	4	*
water	119:52	0:0	4	piHeight
water	119:60	0:0	4	)
op	120:28	0:0	4	*
op	120:30	0:0	4	sizeof
water	120:36	0:0	4	(
water	120:37	0:0	4	png_bytep
water	120:46	0:0	4	)
water	120:48	0:0	2	)
op	120:50	0:0	2	==
water	120:53	0:0	2	NULL
water	120:57	0:0	2	)
water	121:8	0:0	2	{
call	122:12	122:58	2	png_error
arg	122:22	122:29	3	png_ptr
water	122:22	0:0	4	png_ptr
arg	122:31	122:58	3	"Visual PNG: out of memory"
water	122:31	0:0	4	"Visual PNG: out of memory"
water	122:59	0:0	2	;
water	123:8	0:0	2	}
water	125:8	0:0	2	for
water	125:12	0:0	2	(
water	125:13	0:0	2	i
op	125:15	0:0	2	=
water	125:17	0:0	2	0
water	125:18	0:0	2	;
water	125:20	0:0	2	i
op	125:22	0:0	2	<
water	125:24	0:0	2	(
op	125:25	0:0	2	*
water	125:26	0:0	2	piHeight
water	125:34	0:0	2	)
water	125:35	0:0	2	;
water	125:37	0:0	2	i
op	125:38	0:0	2	++
water	125:40	0:0	2	)
water	126:12	0:0	2	ppbRowPointers
op	126:26	0:0	2	[
water	126:27	0:0	2	i
op	126:28	0:0	2	]
op	126:30	0:0	2	=
water	126:32	0:0	2	pbImageData
op	126:44	0:0	2	+
water	126:46	0:0	2	i
op	126:48	0:0	2	*
water	126:50	0:0	2	ulRowBytes
water	126:60	0:0	2	;
call	128:8	128:46	2	png_read_image
arg	128:23	128:30	3	png_ptr
water	128:23	0:0	4	png_ptr
arg	128:32	128:46	3	ppbRowPointers
water	128:32	0:0	4	ppbRowPointers
water	128:47	0:0	2	;
call	130:8	130:34	2	png_read_end
arg	130:21	130:28	3	png_ptr
water	130:21	0:0	4	png_ptr
arg	130:30	130:34	3	NULL
water	130:30	0:0	4	NULL
water	130:35	0:0	2	;
call	132:8	132:28	2	free
arg	132:14	132:28	3	ppbRowPointers
water	132:14	0:0	4	ppbRowPointers
water	132:29	0:0	2	;
water	133:8	0:0	2	ppbRowPointers
op	133:23	0:0	2	=
water	133:25	0:0	2	NULL
water	133:29	0:0	2	;
water	135:4	0:0	2	}
call	136:4	136:14	2	Catch
arg	136:11	136:14	3	msg
water	136:11	0:0	4	msg
water	137:4	0:0	2	{
call	138:8	138:57	2	png_destroy_read_struct
arg	138:32	138:40	3	&png_ptr
op	138:32	0:0	4	&
water	138:33	0:0	4	png_ptr
arg	138:42	138:51	3	&info_ptr
op	138:42	0:0	4	&
water	138:43	0:0	4	info_ptr
arg	138:53	138:57	3	NULL
water	138:53	0:0	4	NULL
water	138:58	0:0	2	;
op	139:8	0:0	2	*
water	139:9	0:0	2	ppbImageData
op	139:22	0:0	2	=
water	139:24	0:0	2	pbImageData
op	139:36	0:0	2	=
water	139:38	0:0	2	NULL
water	139:42	0:0	2	;
water	140:8	0:0	2	if
water	140:10	0:0	2	(
water	140:11	0:0	2	ppbRowPointers
water	140:25	0:0	2	)
call	141:12	141:32	2	free
arg	141:18	141:32	3	ppbRowPointers
water	141:18	0:0	4	ppbRowPointers
water	141:33	0:0	2	;
call	142:8	142:21	2	fclose
arg	142:15	142:21	3	pfFile
water	142:15	0:0	4	pfFile
water	142:22	0:0	2	;
water	143:8	0:0	2	return
water	143:15	0:0	2	FALSE
water	143:20	0:0	2	;
water	144:4	0:0	2	}
call	145:4	145:18	2	fclose
arg	145:12	145:18	3	pfFile
water	145:12	0:0	4	pfFile
water	145:19	0:0	2	;
return	146:4	146:15	2	TRUE
water	146:11	0:0	3	TRUE

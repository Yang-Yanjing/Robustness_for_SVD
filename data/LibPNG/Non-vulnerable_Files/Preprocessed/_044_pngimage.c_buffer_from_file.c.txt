func	1:0	39:0	0	static int	buffer_from_file
params	2:16	0:0	1	
param	2:17	2:38	2	struct buffer *	buffer
param	2:40	2:48	2	FILE *	fp
stmnts	0:0	38:3	1	
decl	4:3	4:44	2	struct buffer_list	*last
op	4:28	0:0	2	=
op	4:30	0:0	2	&
water	4:31	0:0	2	buffer
op	4:37	0:0	2	->
water	4:39	0:0	2	first
decl	5:3	5:19	2	size_t	count
op	5:16	0:0	2	=
water	5:18	0:0	2	0
for	6:3	38:3	2	(;;)
forinit	6:8	6:8	3	;
water	6:8	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	7:3	38:3	3	
water	7:3	0:0	4	{
decl	8:6	9:41	4	size_t	r
op	8:15	0:0	4	=
call	8:17	9:40	5	fread
arg	8:23	8:41	6	last->buffer+count
water	8:23	0:0	7	last
op	8:27	0:0	7	->
water	8:29	0:0	7	buffer
op	8:35	0:0	7	+
water	8:36	0:0	7	count
arg	8:43	8:44	6	1
water	8:43	0:0	7	1
arg	9:9	9:36	6	(sizeoflast->buffer)-count
water	9:9	0:0	7	(
op	9:10	0:0	7	sizeof
water	9:17	0:0	7	last
op	9:21	0:0	7	->
water	9:23	0:0	7	buffer
water	9:29	0:0	7	)
op	9:30	0:0	7	-
water	9:31	0:0	7	count
arg	9:38	9:40	6	fp
water	9:38	0:0	7	fp
if	10:6	26:6	4	(r > 0)
cond	10:10	10:14	5	r > 0
water	10:10	0:0	6	r
op	10:12	0:0	6	>
water	10:14	0:0	6	0
stmts	11:6	26:6	5	
water	11:6	0:0	6	{
water	12:9	0:0	6	count
op	12:15	0:0	6	+=
water	12:18	0:0	6	r
water	12:19	0:0	6	;
if	13:9	25:9	6	(count >= sizeof last -> buffer)
cond	13:13	13:35	7	count >= sizeof last -> buffer
water	13:13	0:0	8	count
op	13:19	0:0	8	>=
op	13:22	0:0	8	sizeof
water	13:29	0:0	8	last
op	13:33	0:0	8	->
water	13:35	0:0	8	buffer
stmts	14:9	25:9	7	
water	14:9	0:0	8	{
call	15:12	15:47	8	assert
arg	15:19	15:47	9	count==sizeoflast->buffer
water	15:19	0:0	10	count
op	15:25	0:0	10	==
op	15:28	0:0	10	sizeof
water	15:35	0:0	10	last
op	15:39	0:0	10	->
water	15:41	0:0	10	buffer
water	15:48	0:0	8	;
water	16:12	0:0	8	count
op	16:18	0:0	8	=
water	16:20	0:0	8	0
water	16:21	0:0	8	;
if	17:12	22:12	8	(last -> next == NULL)
cond	17:16	17:30	9	last -> next == NULL
water	17:16	0:0	10	last
op	17:20	0:0	10	->
water	17:22	0:0	10	next
op	17:27	0:0	10	==
water	17:30	0:0	10	NULL
stmts	18:12	22:12	9	
water	18:12	0:0	10	{
water	19:15	0:0	10	last
op	19:20	0:0	10	=
call	19:22	19:40	10	buffer_extend
arg	19:36	19:40	11	last
water	19:36	0:0	12	last
water	19:41	0:0	10	;
if	20:15	21:31	10	(last == NULL)
cond	20:19	20:27	11	last == NULL
water	20:19	0:0	12	last
op	20:24	0:0	12	==
water	20:27	0:0	12	NULL
stmts	21:18	21:31	11	
return	21:18	21:31	12	MEMORY
water	21:25	0:0	13	MEMORY
water	22:12	0:0	10	}
else	23:12	24:32	8
stmts	24:15	24:32	9	
water	24:15	0:0	10	last
op	24:20	0:0	10	=
water	24:22	0:0	10	last
op	24:26	0:0	10	->
water	24:28	0:0	10	next
water	24:32	0:0	10	;
water	25:9	0:0	8	}
water	26:6	0:0	6	}
else	27:6	37:6	4
stmts	28:6	37:6	5	
water	28:6	0:0	6	{
if	29:9	34:9	6	(feof (fp ))
cond	29:13	29:20	7	feof (fp )
call	29:13	29:20	8	feof
arg	29:18	29:20	9	fp
water	29:18	0:0	10	fp
stmts	30:9	34:9	7	
water	30:9	0:0	8	{
water	31:12	0:0	8	buffer
op	31:18	0:0	8	->
water	31:20	0:0	8	last
op	31:25	0:0	8	=
water	31:27	0:0	8	last
water	31:31	0:0	8	;
water	32:12	0:0	8	buffer
op	32:18	0:0	8	->
water	32:20	0:0	8	end_count
op	32:30	0:0	8	=
water	32:32	0:0	8	count
water	32:37	0:0	8	;
return	33:12	33:20	8	0
water	33:19	0:0	9	0
water	34:9	0:0	8	}
return	36:9	36:43	6	errno==0?ERANGE:errno
water	36:16	0:0	7	errno
op	36:22	0:0	7	==
water	36:25	0:0	7	0
water	36:27	0:0	7	?
water	36:29	0:0	7	ERANGE
water	36:36	0:0	7	:
water	36:38	0:0	7	errno
water	37:6	0:0	6	}
water	38:3	0:0	4	}

func	2:8	190:0	0	CALLBACK	WndProc
params	2:25	0:0	1	
param	2:26	2:35	2	HWND	hwnd
param	2:37	2:49	2	UINT	message
param	2:51	2:64	2	WPARAM	wParam
param	3:8	3:21	2	LPARAM	lParam
stmnts	5:4	189:56	1	
water	5:4	0:0	2	static
water	5:11	0:0	2	HINSTANCE
water	5:30	0:0	2	hInstance
water	5:40	0:0	2	;
water	6:4	0:0	2	static
water	6:11	0:0	2	HDC
water	6:30	0:0	2	hdc
water	6:33	0:0	2	;
water	7:4	0:0	2	static
water	7:11	0:0	2	PAINTSTRUCT
water	7:30	0:0	2	ps
water	7:32	0:0	2	;
water	8:4	0:0	2	static
water	8:11	0:0	2	HMENU
water	8:30	0:0	2	hMenu
water	8:35	0:0	2	;
water	9:4	0:0	2	static
water	9:11	0:0	2	BITMAPFILEHEADER
op	9:29	0:0	2	*
water	9:30	0:0	2	pbmfh
water	9:35	0:0	2	;
water	10:4	0:0	2	static
water	10:11	0:0	2	BITMAPINFOHEADER
op	10:29	0:0	2	*
water	10:30	0:0	2	pbmih
water	10:35	0:0	2	;
water	11:4	0:0	2	static
water	11:11	0:0	2	BYTE
op	11:29	0:0	2	*
water	11:30	0:0	2	pbImage
water	11:37	0:0	2	;
water	12:4	0:0	2	static
water	12:11	0:0	2	int
water	12:30	0:0	2	cxWinSize
water	12:39	0:0	2	,
water	12:41	0:0	2	cyWinSize
water	12:50	0:0	2	;
water	13:4	0:0	2	static
water	13:11	0:0	2	int
water	13:30	0:0	2	cxImgSize
water	13:39	0:0	2	,
water	13:41	0:0	2	cyImgSize
water	13:50	0:0	2	;
water	14:4	0:0	2	static
water	14:11	0:0	2	int
water	14:30	0:0	2	cImgChannels
water	14:42	0:0	2	;
water	15:4	0:0	2	static
water	15:11	0:0	2	png_color
water	15:30	0:0	2	bkgColor
op	15:39	0:0	2	=
water	15:41	0:0	2	{
water	15:42	0:0	2	127
water	15:45	0:0	2	,
water	15:47	0:0	2	127
water	15:50	0:0	2	,
water	15:52	0:0	2	127
water	15:55	0:0	2	}
water	15:56	0:0	2	;
water	16:4	0:0	2	static
water	16:11	0:0	2	BOOL
water	16:30	0:0	2	bStretched
op	16:41	0:0	2	=
water	16:43	0:0	2	TRUE
water	16:47	0:0	2	;
water	17:4	0:0	2	static
water	17:11	0:0	2	BYTE
op	17:29	0:0	2	*
water	17:30	0:0	2	pDib
op	17:35	0:0	2	=
water	17:37	0:0	2	NULL
water	17:41	0:0	2	;
water	18:4	0:0	2	static
water	18:11	0:0	2	BYTE
op	18:29	0:0	2	*
water	18:30	0:0	2	pDiData
op	18:38	0:0	2	=
water	18:40	0:0	2	NULL
water	18:44	0:0	2	;
water	19:4	0:0	2	static
water	19:11	0:0	2	TCHAR
water	19:30	0:0	2	szImgPathName
op	19:44	0:0	2	[
water	19:45	0:0	2	MAX_PATH
op	19:53	0:0	2	]
water	19:54	0:0	2	;
water	20:4	0:0	2	static
water	20:11	0:0	2	TCHAR
water	20:30	0:0	2	szTitleName
op	20:42	0:0	2	[
water	20:43	0:0	2	MAX_PATH
op	20:51	0:0	2	]
water	20:52	0:0	2	;
water	21:4	0:0	2	static
water	21:11	0:0	2	TCHAR
op	21:29	0:0	2	*
water	21:30	0:0	2	pPngFileList
op	21:43	0:0	2	=
water	21:45	0:0	2	NULL
water	21:49	0:0	2	;
water	22:4	0:0	2	static
water	22:11	0:0	2	int
water	22:30	0:0	2	iPngFileCount
water	22:43	0:0	2	;
water	23:4	0:0	2	static
water	23:11	0:0	2	int
water	23:30	0:0	2	iPngFileIndex
water	23:43	0:0	2	;
decl	24:4	24:33	2	BOOL	bOk
switch	25:4	188:4	2	(message)
cond	25:12	25:12	3	message
water	25:12	0:0	4	message
stmts	26:4	188:4	3	
water	26:4	0:0	4	{
label	27:4	27:18	4	case WM_CREATE :
water	28:8	0:0	4	hInstance
op	28:18	0:0	4	=
water	28:20	0:0	4	(
water	28:21	0:0	4	(
water	28:22	0:0	4	LPCREATESTRUCT
water	28:36	0:0	4	)
water	28:38	0:0	4	lParam
water	28:44	0:0	4	)
op	28:45	0:0	4	->
water	28:47	0:0	4	hInstance
water	28:57	0:0	4	;
call	29:8	29:31	4	PngFileInitialize
arg	29:27	29:31	5	hwnd
water	29:27	0:0	6	hwnd
water	29:32	0:0	4	;
call	30:8	30:33	4	strcpy
arg	30:16	30:29	5	szImgPathName
water	30:16	0:0	6	szImgPathName
arg	30:31	30:33	5	""
water	30:31	0:0	6	""
water	30:34	0:0	4	;
if	32:8	48:8	4	(szCmdFileName [ 0 ] != '\0')
cond	32:12	32:32	5	szCmdFileName [ 0 ] != '\0'
water	32:12	0:0	6	szCmdFileName
op	32:25	0:0	6	[
water	32:26	0:0	6	0
op	32:27	0:0	6	]
op	32:29	0:0	6	!=
water	32:32	0:0	6	'\0'
stmts	33:8	48:8	5	
water	33:8	0:0	6	{
call	34:12	34:48	6	strcpy
arg	34:20	34:33	7	szImgPathName
water	34:20	0:0	8	szImgPathName
arg	34:35	34:48	7	szCmdFileName
water	34:35	0:0	8	szCmdFileName
water	34:49	0:0	6	;
call	37:12	38:40	6	BuildPngList
arg	37:26	37:39	7	szImgPathName
water	37:26	0:0	8	szImgPathName
arg	37:41	37:54	7	&pPngFileList
op	37:41	0:0	8	&
water	37:42	0:0	8	pPngFileList
arg	37:56	37:70	7	&iPngFileCount
op	37:56	0:0	8	&
water	37:57	0:0	8	iPngFileCount
arg	38:26	38:40	7	&iPngFileIndex
op	38:26	0:0	8	&
water	38:27	0:0	8	iPngFileIndex
water	38:41	0:0	6	;
if	40:12	42:24	6	(!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor ))
cond	40:16	41:74	7	!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor )
op	40:16	0:0	8	!
call	40:17	41:74	8	LoadImageFile
arg	40:32	40:36	9	hwnd
water	40:32	0:0	10	hwnd
arg	40:38	40:51	9	szImgPathName
water	40:38	0:0	10	szImgPathName
arg	41:16	41:24	9	&pbImage
op	41:16	0:0	10	&
water	41:17	0:0	10	pbImage
arg	41:26	41:36	9	&cxImgSize
op	41:26	0:0	10	&
water	41:27	0:0	10	cxImgSize
arg	41:38	41:48	9	&cyImgSize
op	41:38	0:0	10	&
water	41:39	0:0	10	cyImgSize
arg	41:50	41:63	9	&cImgChannels
op	41:50	0:0	10	&
water	41:51	0:0	10	cImgChannels
arg	41:65	41:74	9	&bkgColor
op	41:65	0:0	10	&
water	41:66	0:0	10	bkgColor
stmts	42:16	42:24	7	
return	42:16	42:24	8	0
water	42:23	0:0	9	0
call	44:12	44:44	6	InvalidateRect
arg	44:28	44:32	7	hwnd
water	44:28	0:0	8	hwnd
arg	44:34	44:38	7	NULL
water	44:34	0:0	8	NULL
arg	44:40	44:44	7	TRUE
water	44:40	0:0	8	TRUE
water	44:45	0:0	6	;
call	46:12	47:71	6	DisplayImage
arg	46:26	46:30	7	hwnd
water	46:26	0:0	8	hwnd
arg	46:32	46:37	7	&pDib
op	46:32	0:0	8	&
water	46:33	0:0	8	pDib
arg	46:39	46:47	7	&pDiData
op	46:39	0:0	8	&
water	46:40	0:0	8	pDiData
arg	46:49	46:58	7	cxWinSize
water	46:49	0:0	8	cxWinSize
arg	46:60	46:69	7	cyWinSize
water	46:60	0:0	8	cyWinSize
arg	47:16	47:23	7	pbImage
water	47:16	0:0	8	pbImage
arg	47:25	47:34	7	cxImgSize
water	47:25	0:0	8	cxImgSize
arg	47:36	47:45	7	cyImgSize
water	47:36	0:0	8	cyImgSize
arg	47:47	47:59	7	cImgChannels
water	47:47	0:0	8	cImgChannels
arg	47:61	47:71	7	bStretched
water	47:61	0:0	8	bStretched
water	47:72	0:0	6	;
water	48:8	0:0	6	}
return	49:8	49:16	4	0
water	49:15	0:0	5	0
label	50:4	50:16	4	case WM_SIZE :
water	51:8	0:0	4	cxWinSize
op	51:18	0:0	4	=
call	51:20	51:34	4	LOWORD
arg	51:28	51:34	5	lParam
water	51:28	0:0	6	lParam
water	51:35	0:0	4	;
water	52:8	0:0	4	cyWinSize
op	52:18	0:0	4	=
call	52:20	52:34	4	HIWORD
arg	52:28	52:34	5	lParam
water	52:28	0:0	6	lParam
water	52:35	0:0	4	;
call	54:8	54:40	4	InvalidateRect
arg	54:24	54:28	5	hwnd
water	54:24	0:0	6	hwnd
arg	54:30	54:34	5	NULL
water	54:30	0:0	6	NULL
arg	54:36	54:40	5	TRUE
water	54:36	0:0	6	TRUE
water	54:41	0:0	4	;
call	56:8	57:67	4	DisplayImage
arg	56:22	56:26	5	hwnd
water	56:22	0:0	6	hwnd
arg	56:28	56:33	5	&pDib
op	56:28	0:0	6	&
water	56:29	0:0	6	pDib
arg	56:35	56:43	5	&pDiData
op	56:35	0:0	6	&
water	56:36	0:0	6	pDiData
arg	56:45	56:54	5	cxWinSize
water	56:45	0:0	6	cxWinSize
arg	56:56	56:65	5	cyWinSize
water	56:56	0:0	6	cyWinSize
arg	57:12	57:19	5	pbImage
water	57:12	0:0	6	pbImage
arg	57:21	57:30	5	cxImgSize
water	57:21	0:0	6	cxImgSize
arg	57:32	57:41	5	cyImgSize
water	57:32	0:0	6	cyImgSize
arg	57:43	57:55	5	cImgChannels
water	57:43	0:0	6	cImgChannels
arg	57:57	57:67	5	bStretched
water	57:57	0:0	6	bStretched
water	57:68	0:0	4	;
return	58:8	58:16	4	0
water	58:15	0:0	5	0
label	59:4	59:25	4	case WM_INITMENUPOPUP :
water	60:8	0:0	4	hMenu
op	60:14	0:0	4	=
call	60:16	60:29	4	GetMenu
arg	60:25	60:29	5	hwnd
water	60:25	0:0	6	hwnd
water	60:30	0:0	4	;
if	61:8	62:61	4	(pbImage)
cond	61:12	61:12	5	pbImage
water	61:12	0:0	6	pbImage
stmts	62:12	62:61	5	
call	62:12	62:60	6	EnableMenuItem
arg	62:28	62:33	7	hMenu
water	62:28	0:0	8	hMenu
arg	62:35	62:48	7	IDM_FILE_SAVE
water	62:35	0:0	8	IDM_FILE_SAVE
arg	62:50	62:60	7	MF_ENABLED
water	62:50	0:0	8	MF_ENABLED
water	62:61	0:0	6	;
else	63:8	64:60	4
stmts	64:12	64:60	5	
call	64:12	64:59	6	EnableMenuItem
arg	64:28	64:33	7	hMenu
water	64:28	0:0	8	hMenu
arg	64:35	64:48	7	IDM_FILE_SAVE
water	64:35	0:0	8	IDM_FILE_SAVE
arg	64:50	64:59	7	MF_GRAYED
water	64:50	0:0	8	MF_GRAYED
water	64:60	0:0	6	;
return	65:8	65:16	4	0
water	65:15	0:0	5	0
label	66:4	66:19	4	case WM_COMMAND :
water	67:8	0:0	4	hMenu
op	67:14	0:0	4	=
call	67:16	67:29	4	GetMenu
arg	67:25	67:29	5	hwnd
water	67:25	0:0	6	hwnd
water	67:30	0:0	4	;
switch	68:8	171:8	4	(LOWORD (wParam ))
cond	68:16	68:30	5	LOWORD (wParam )
call	68:16	68:30	6	LOWORD
arg	68:24	68:30	7	wParam
water	68:24	0:0	8	wParam
stmts	69:8	171:8	5	
water	69:8	0:0	6	{
label	70:8	70:26	6	case IDM_FILE_OPEN :
if	72:12	73:24	6	(!PngFileOpenDlg (hwnd ,szImgPathName ,szTitleName ))
cond	72:16	72:65	7	!PngFileOpenDlg (hwnd ,szImgPathName ,szTitleName )
op	72:16	0:0	8	!
call	72:17	72:65	8	PngFileOpenDlg
arg	72:33	72:37	9	hwnd
water	72:33	0:0	10	hwnd
arg	72:39	72:52	9	szImgPathName
water	72:39	0:0	10	szImgPathName
arg	72:54	72:65	9	szTitleName
water	72:54	0:0	10	szTitleName
stmts	73:16	73:24	7	
return	73:16	73:24	8	0
water	73:23	0:0	9	0
call	76:12	77:40	6	BuildPngList
arg	76:26	76:39	7	szImgPathName
water	76:26	0:0	8	szImgPathName
arg	76:41	76:54	7	&pPngFileList
op	76:41	0:0	8	&
water	76:42	0:0	8	pPngFileList
arg	76:56	76:70	7	&iPngFileCount
op	76:56	0:0	8	&
water	76:57	0:0	8	iPngFileCount
arg	77:26	77:40	7	&iPngFileIndex
op	77:26	0:0	8	&
water	77:27	0:0	8	iPngFileIndex
water	77:41	0:0	6	;
if	79:12	81:24	6	(!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor ))
cond	79:16	80:74	7	!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor )
op	79:16	0:0	8	!
call	79:17	80:74	8	LoadImageFile
arg	79:32	79:36	9	hwnd
water	79:32	0:0	10	hwnd
arg	79:38	79:51	9	szImgPathName
water	79:38	0:0	10	szImgPathName
arg	80:16	80:24	9	&pbImage
op	80:16	0:0	10	&
water	80:17	0:0	10	pbImage
arg	80:26	80:36	9	&cxImgSize
op	80:26	0:0	10	&
water	80:27	0:0	10	cxImgSize
arg	80:38	80:48	9	&cyImgSize
op	80:38	0:0	10	&
water	80:39	0:0	10	cyImgSize
arg	80:50	80:63	9	&cImgChannels
op	80:50	0:0	10	&
water	80:51	0:0	10	cImgChannels
arg	80:65	80:74	9	&bkgColor
op	80:65	0:0	10	&
water	80:66	0:0	10	bkgColor
stmts	81:16	81:24	7	
return	81:16	81:24	8	0
water	81:23	0:0	9	0
call	83:12	83:44	6	InvalidateRect
arg	83:28	83:32	7	hwnd
water	83:28	0:0	8	hwnd
arg	83:34	83:38	7	NULL
water	83:34	0:0	8	NULL
arg	83:40	83:44	7	TRUE
water	83:40	0:0	8	TRUE
water	83:45	0:0	6	;
call	85:12	86:71	6	DisplayImage
arg	85:26	85:30	7	hwnd
water	85:26	0:0	8	hwnd
arg	85:32	85:37	7	&pDib
op	85:32	0:0	8	&
water	85:33	0:0	8	pDib
arg	85:39	85:47	7	&pDiData
op	85:39	0:0	8	&
water	85:40	0:0	8	pDiData
arg	85:49	85:58	7	cxWinSize
water	85:49	0:0	8	cxWinSize
arg	85:60	85:69	7	cyWinSize
water	85:60	0:0	8	cyWinSize
arg	86:16	86:23	7	pbImage
water	86:16	0:0	8	pbImage
arg	86:25	86:34	7	cxImgSize
water	86:25	0:0	8	cxImgSize
arg	86:36	86:45	7	cyImgSize
water	86:36	0:0	8	cyImgSize
arg	86:47	86:59	7	cImgChannels
water	86:47	0:0	8	cImgChannels
arg	86:61	86:71	7	bStretched
water	86:61	0:0	8	bStretched
water	86:72	0:0	6	;
return	87:12	87:20	6	0
water	87:19	0:0	7	0
label	88:8	88:26	6	case IDM_FILE_SAVE :
if	90:12	91:24	6	(!PngFileSaveDlg (hwnd ,szImgPathName ,szTitleName ))
cond	90:16	90:65	7	!PngFileSaveDlg (hwnd ,szImgPathName ,szTitleName )
op	90:16	0:0	8	!
call	90:17	90:65	8	PngFileSaveDlg
arg	90:33	90:37	9	hwnd
water	90:33	0:0	10	hwnd
arg	90:39	90:52	9	szImgPathName
water	90:39	0:0	10	szImgPathName
arg	90:54	90:65	9	szTitleName
water	90:54	0:0	10	szTitleName
stmts	91:16	91:24	7	
return	91:16	91:24	8	0
water	91:23	0:0	9	0
call	93:12	93:50	6	SetCursor
arg	93:23	93:50	7	LoadCursor(NULL,IDC_WAIT)
call	93:23	93:49	8	LoadCursor
arg	93:35	93:39	9	NULL
water	93:35	0:0	10	NULL
arg	93:41	93:49	9	IDC_WAIT
water	93:41	0:0	10	IDC_WAIT
water	93:51	0:0	6	;
call	94:12	94:28	6	ShowCursor
arg	94:24	94:28	7	TRUE
water	94:24	0:0	8	TRUE
water	94:29	0:0	6	;
water	95:12	0:0	6	bOk
op	95:16	0:0	6	=
call	95:18	96:26	6	PngSaveImage
arg	95:32	95:45	7	szImgPathName
water	95:32	0:0	8	szImgPathName
arg	95:47	95:54	7	pDiData
water	95:47	0:0	8	pDiData
arg	95:56	95:65	7	cxWinSize
water	95:56	0:0	8	cxWinSize
arg	95:67	95:76	7	cyWinSize
water	95:67	0:0	8	cyWinSize
arg	96:18	96:26	7	bkgColor
water	96:18	0:0	8	bkgColor
water	96:27	0:0	6	;
call	97:12	97:29	6	ShowCursor
arg	97:24	97:29	7	FALSE
water	97:24	0:0	8	FALSE
water	97:30	0:0	6	;
call	98:12	98:51	6	SetCursor
arg	98:23	98:51	7	LoadCursor(NULL,IDC_ARROW)
call	98:23	98:50	8	LoadCursor
arg	98:35	98:39	9	NULL
water	98:35	0:0	10	NULL
arg	98:41	98:50	9	IDC_ARROW
water	98:41	0:0	10	IDC_ARROW
water	98:52	0:0	6	;
if	99:12	101:55	6	(! bOk)
cond	99:16	99:17	7	! bOk
op	99:16	0:0	8	!
water	99:17	0:0	8	bOk
stmts	100:16	101:55	7	
call	100:16	101:54	8	MessageBox
arg	100:28	100:32	9	hwnd
water	100:28	0:0	10	hwnd
arg	100:34	100:72	9	TEXT("Error in saving the PNG image")
call	100:34	100:71	10	TEXT
arg	100:40	100:71	11	"Error in saving the PNG image"
water	100:40	0:0	12	"Error in saving the PNG image"
arg	101:16	101:26	9	szProgName
water	101:16	0:0	10	szProgName
arg	101:28	101:54	9	MB_ICONEXCLAMATION|MB_OK
water	101:28	0:0	10	MB_ICONEXCLAMATION
op	101:47	0:0	10	|
water	101:49	0:0	10	MB_OK
water	101:55	0:0	8	;
return	102:12	102:20	6	0
water	102:19	0:0	7	0
label	103:8	103:26	6	case IDM_FILE_NEXT :
if	105:12	119:12	6	(SearchPngList (pPngFileList ,iPngFileCount ,& iPngFileIndex ,NULL ,szImgPathName ))
cond	105:16	106:35	7	SearchPngList (pPngFileList ,iPngFileCount ,& iPngFileIndex ,NULL ,szImgPathName )
call	105:16	106:35	8	SearchPngList
arg	105:31	105:43	9	pPngFileList
water	105:31	0:0	10	pPngFileList
arg	105:45	105:58	9	iPngFileCount
water	105:45	0:0	10	iPngFileCount
arg	105:60	105:74	9	&iPngFileIndex
op	105:60	0:0	10	&
water	105:61	0:0	10	iPngFileIndex
arg	106:16	106:20	9	NULL
water	106:16	0:0	10	NULL
arg	106:22	106:35	9	szImgPathName
water	106:22	0:0	10	szImgPathName
stmts	107:12	119:12	7	
water	107:12	0:0	8	{
if	108:16	109:28	8	(strcmp (szImgPathName ,"" ) == 0)
cond	108:20	108:50	9	strcmp (szImgPathName ,"" ) == 0
call	108:20	108:45	10	strcmp
arg	108:28	108:41	11	szImgPathName
water	108:28	0:0	12	szImgPathName
arg	108:43	108:45	11	""
water	108:43	0:0	12	""
op	108:47	0:0	10	==
water	108:50	0:0	10	0
stmts	109:20	109:28	9	
return	109:20	109:28	10	0
water	109:27	0:0	11	0
if	111:16	113:28	8	(!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor ))
cond	111:20	112:72	9	!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor )
op	111:20	0:0	10	!
call	111:21	112:72	10	LoadImageFile
arg	111:36	111:40	11	hwnd
water	111:36	0:0	12	hwnd
arg	111:42	111:55	11	szImgPathName
water	111:42	0:0	12	szImgPathName
arg	111:57	111:65	11	&pbImage
op	111:57	0:0	12	&
water	111:58	0:0	12	pbImage
arg	112:24	112:34	11	&cxImgSize
op	112:24	0:0	12	&
water	112:25	0:0	12	cxImgSize
arg	112:36	112:46	11	&cyImgSize
op	112:36	0:0	12	&
water	112:37	0:0	12	cyImgSize
arg	112:48	112:61	11	&cImgChannels
op	112:48	0:0	12	&
water	112:49	0:0	12	cImgChannels
arg	112:63	112:72	11	&bkgColor
op	112:63	0:0	12	&
water	112:64	0:0	12	bkgColor
stmts	113:20	113:28	9	
return	113:20	113:28	10	0
water	113:27	0:0	11	0
call	115:16	115:48	8	InvalidateRect
arg	115:32	115:36	9	hwnd
water	115:32	0:0	10	hwnd
arg	115:38	115:42	9	NULL
water	115:38	0:0	10	NULL
arg	115:44	115:48	9	TRUE
water	115:44	0:0	10	TRUE
water	115:49	0:0	8	;
call	117:16	118:75	8	DisplayImage
arg	117:30	117:34	9	hwnd
water	117:30	0:0	10	hwnd
arg	117:36	117:41	9	&pDib
op	117:36	0:0	10	&
water	117:37	0:0	10	pDib
arg	117:43	117:51	9	&pDiData
op	117:43	0:0	10	&
water	117:44	0:0	10	pDiData
arg	117:53	117:62	9	cxWinSize
water	117:53	0:0	10	cxWinSize
arg	117:64	117:73	9	cyWinSize
water	117:64	0:0	10	cyWinSize
arg	118:20	118:27	9	pbImage
water	118:20	0:0	10	pbImage
arg	118:29	118:38	9	cxImgSize
water	118:29	0:0	10	cxImgSize
arg	118:40	118:49	9	cyImgSize
water	118:40	0:0	10	cyImgSize
arg	118:51	118:63	9	cImgChannels
water	118:51	0:0	10	cImgChannels
arg	118:65	118:75	9	bStretched
water	118:65	0:0	10	bStretched
water	118:76	0:0	8	;
water	119:12	0:0	8	}
return	120:12	120:20	6	0
water	120:19	0:0	7	0
label	121:8	121:30	6	case IDM_FILE_PREVIOUS :
if	123:12	137:12	6	(SearchPngList (pPngFileList ,iPngFileCount ,& iPngFileIndex ,szImgPathName ,NULL ))
cond	123:16	124:35	7	SearchPngList (pPngFileList ,iPngFileCount ,& iPngFileIndex ,szImgPathName ,NULL )
call	123:16	124:35	8	SearchPngList
arg	123:31	123:43	9	pPngFileList
water	123:31	0:0	10	pPngFileList
arg	123:45	123:58	9	iPngFileCount
water	123:45	0:0	10	iPngFileCount
arg	123:60	123:74	9	&iPngFileIndex
op	123:60	0:0	10	&
water	123:61	0:0	10	iPngFileIndex
arg	124:16	124:29	9	szImgPathName
water	124:16	0:0	10	szImgPathName
arg	124:31	124:35	9	NULL
water	124:31	0:0	10	NULL
stmts	125:12	137:12	7	
water	125:12	0:0	8	{
if	126:16	127:28	8	(strcmp (szImgPathName ,"" ) == 0)
cond	126:20	126:50	9	strcmp (szImgPathName ,"" ) == 0
call	126:20	126:45	10	strcmp
arg	126:28	126:41	11	szImgPathName
water	126:28	0:0	12	szImgPathName
arg	126:43	126:45	11	""
water	126:43	0:0	12	""
op	126:47	0:0	10	==
water	126:50	0:0	10	0
stmts	127:20	127:28	9	
return	127:20	127:28	10	0
water	127:27	0:0	11	0
if	129:16	131:28	8	(!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor ))
cond	129:20	130:56	9	!LoadImageFile (hwnd ,szImgPathName ,& pbImage ,& cxImgSize ,& cyImgSize ,& cImgChannels ,& bkgColor )
op	129:20	0:0	10	!
call	129:21	130:56	10	LoadImageFile
arg	129:36	129:40	11	hwnd
water	129:36	0:0	12	hwnd
arg	129:42	129:55	11	szImgPathName
water	129:42	0:0	12	szImgPathName
arg	129:57	129:65	11	&pbImage
op	129:57	0:0	12	&
water	129:58	0:0	12	pbImage
arg	129:67	129:77	11	&cxImgSize
op	129:67	0:0	12	&
water	129:68	0:0	12	cxImgSize
arg	130:20	130:30	11	&cyImgSize
op	130:20	0:0	12	&
water	130:21	0:0	12	cyImgSize
arg	130:32	130:45	11	&cImgChannels
op	130:32	0:0	12	&
water	130:33	0:0	12	cImgChannels
arg	130:47	130:56	11	&bkgColor
op	130:47	0:0	12	&
water	130:48	0:0	12	bkgColor
stmts	131:20	131:28	9	
return	131:20	131:28	10	0
water	131:27	0:0	11	0
call	133:16	133:48	8	InvalidateRect
arg	133:32	133:36	9	hwnd
water	133:32	0:0	10	hwnd
arg	133:38	133:42	9	NULL
water	133:38	0:0	10	NULL
arg	133:44	133:48	9	TRUE
water	133:44	0:0	10	TRUE
water	133:49	0:0	8	;
call	135:16	136:75	8	DisplayImage
arg	135:30	135:34	9	hwnd
water	135:30	0:0	10	hwnd
arg	135:36	135:41	9	&pDib
op	135:36	0:0	10	&
water	135:37	0:0	10	pDib
arg	135:43	135:51	9	&pDiData
op	135:43	0:0	10	&
water	135:44	0:0	10	pDiData
arg	135:53	135:62	9	cxWinSize
water	135:53	0:0	10	cxWinSize
arg	135:64	135:73	9	cyWinSize
water	135:64	0:0	10	cyWinSize
arg	136:20	136:27	9	pbImage
water	136:20	0:0	10	pbImage
arg	136:29	136:38	9	cxImgSize
water	136:29	0:0	10	cxImgSize
arg	136:40	136:49	9	cyImgSize
water	136:40	0:0	10	cyImgSize
arg	136:51	136:63	9	cImgChannels
water	136:51	0:0	10	cImgChannels
arg	136:65	136:75	9	bStretched
water	136:65	0:0	10	bStretched
water	136:76	0:0	8	;
water	137:12	0:0	8	}
return	138:12	138:20	6	0
water	138:19	0:0	7	0
label	139:8	139:26	6	case IDM_FILE_EXIT :
if	142:12	146:12	6	(pDib != NULL)
cond	142:16	142:24	7	pDib != NULL
water	142:16	0:0	8	pDib
op	142:21	0:0	8	!=
water	142:24	0:0	8	NULL
stmts	143:12	146:12	7	
water	143:12	0:0	8	{
call	144:16	144:26	8	free
arg	144:22	144:26	9	pDib
water	144:22	0:0	10	pDib
water	144:27	0:0	8	;
water	145:16	0:0	8	pDib
op	145:21	0:0	8	=
water	145:23	0:0	8	NULL
water	145:27	0:0	8	;
water	146:12	0:0	8	}
if	148:12	152:12	6	(pPngFileList != NULL)
cond	148:16	148:32	7	pPngFileList != NULL
water	148:16	0:0	8	pPngFileList
op	148:29	0:0	8	!=
water	148:32	0:0	8	NULL
stmts	149:12	152:12	7	
water	149:12	0:0	8	{
call	150:16	150:34	8	free
arg	150:22	150:34	9	pPngFileList
water	150:22	0:0	10	pPngFileList
water	150:35	0:0	8	;
water	151:16	0:0	8	pPngFileList
op	151:29	0:0	8	=
water	151:31	0:0	8	NULL
water	151:35	0:0	8	;
water	152:12	0:0	8	}
call	154:12	154:19	6	exit
arg	154:18	154:19	7	0
water	154:18	0:0	8	0
water	154:20	0:0	6	;
return	155:12	155:20	6	0
water	155:19	0:0	7	0
label	156:8	156:32	6	case IDM_OPTIONS_STRETCH :
water	157:12	0:0	6	bStretched
op	157:23	0:0	6	=
op	157:25	0:0	6	!
water	157:26	0:0	6	bStretched
water	157:36	0:0	6	;
if	158:12	159:70	6	(bStretched)
cond	158:16	158:16	7	bStretched
water	158:16	0:0	8	bStretched
stmts	159:16	159:70	7	
call	159:16	159:69	8	CheckMenuItem
arg	159:31	159:36	9	hMenu
water	159:31	0:0	10	hMenu
arg	159:38	159:57	9	IDM_OPTIONS_STRETCH
water	159:38	0:0	10	IDM_OPTIONS_STRETCH
arg	159:59	159:69	9	MF_CHECKED
water	159:59	0:0	10	MF_CHECKED
water	159:70	0:0	8	;
else	160:12	161:72	6
stmts	161:16	161:72	7	
call	161:16	161:71	8	CheckMenuItem
arg	161:31	161:36	9	hMenu
water	161:31	0:0	10	hMenu
arg	161:38	161:57	9	IDM_OPTIONS_STRETCH
water	161:38	0:0	10	IDM_OPTIONS_STRETCH
arg	161:59	161:71	9	MF_UNCHECKED
water	161:59	0:0	10	MF_UNCHECKED
water	161:72	0:0	8	;
call	163:12	163:44	6	InvalidateRect
arg	163:28	163:32	7	hwnd
water	163:28	0:0	8	hwnd
arg	163:34	163:38	7	NULL
water	163:34	0:0	8	NULL
arg	163:40	163:44	7	TRUE
water	163:40	0:0	8	TRUE
water	163:45	0:0	6	;
call	165:12	166:71	6	DisplayImage
arg	165:26	165:30	7	hwnd
water	165:26	0:0	8	hwnd
arg	165:32	165:37	7	&pDib
op	165:32	0:0	8	&
water	165:33	0:0	8	pDib
arg	165:39	165:47	7	&pDiData
op	165:39	0:0	8	&
water	165:40	0:0	8	pDiData
arg	165:49	165:58	7	cxWinSize
water	165:49	0:0	8	cxWinSize
arg	165:60	165:69	7	cyWinSize
water	165:60	0:0	8	cyWinSize
arg	166:16	166:23	7	pbImage
water	166:16	0:0	8	pbImage
arg	166:25	166:34	7	cxImgSize
water	166:25	0:0	8	cxImgSize
arg	166:36	166:45	7	cyImgSize
water	166:36	0:0	8	cyImgSize
arg	166:47	166:59	7	cImgChannels
water	166:47	0:0	8	cImgChannels
arg	166:61	166:71	7	bStretched
water	166:61	0:0	8	bStretched
water	166:72	0:0	6	;
return	167:12	167:20	6	0
water	167:19	0:0	7	0
label	168:8	168:27	6	case IDM_HELP_ABOUT :
call	169:12	169:71	6	DialogBox
arg	169:23	169:32	7	hInstance
water	169:23	0:0	8	hInstance
arg	169:34	169:51	7	TEXT("AboutBox")
call	169:34	169:50	8	TEXT
arg	169:40	169:50	9	"AboutBox"
water	169:40	0:0	10	"AboutBox"
arg	169:53	169:57	7	hwnd
water	169:53	0:0	8	hwnd
arg	169:59	169:71	7	AboutDlgProc
water	169:59	0:0	8	AboutDlgProc
water	169:73	0:0	6	;
return	170:12	170:20	6	0
water	170:19	0:0	7	0
water	171:8	0:0	6	}
break	172:8	172:13	4	
label	173:4	173:17	4	case WM_PAINT :
water	174:8	0:0	4	hdc
op	174:12	0:0	4	=
call	174:14	174:35	4	BeginPaint
arg	174:26	174:30	5	hwnd
water	174:26	0:0	6	hwnd
arg	174:32	174:35	5	&ps
op	174:32	0:0	6	&
water	174:33	0:0	6	ps
water	174:36	0:0	4	;
if	175:8	177:75	4	(pDib)
cond	175:12	175:12	5	pDib
water	175:12	0:0	6	pDib
stmts	176:12	177:75	5	
call	176:12	177:74	6	SetDIBitsToDevice
arg	176:31	176:34	7	hdc
water	176:31	0:0	8	hdc
arg	176:36	176:37	7	0
water	176:36	0:0	8	0
arg	176:39	176:40	7	0
water	176:39	0:0	8	0
arg	176:42	176:51	7	cxWinSize
water	176:42	0:0	8	cxWinSize
arg	176:53	176:62	7	cyWinSize
water	176:53	0:0	8	cyWinSize
arg	176:64	176:65	7	0
water	176:64	0:0	8	0
arg	176:67	176:68	7	0
water	176:67	0:0	8	0
arg	177:16	177:17	7	0
water	177:16	0:0	8	0
arg	177:19	177:28	7	cyWinSize
water	177:19	0:0	8	cyWinSize
arg	177:30	177:37	7	pDiData
water	177:30	0:0	8	pDiData
arg	177:39	177:58	7	(BITMAPINFO*)pDib
water	177:39	0:0	8	(
water	177:40	0:0	8	BITMAPINFO
op	177:51	0:0	8	*
water	177:52	0:0	8	)
water	177:54	0:0	8	pDib
arg	177:60	177:74	7	DIB_RGB_COLORS
water	177:60	0:0	8	DIB_RGB_COLORS
water	177:75	0:0	6	;
call	178:8	178:27	4	EndPaint
arg	178:18	178:22	5	hwnd
water	178:18	0:0	6	hwnd
arg	178:24	178:27	5	&ps
op	178:24	0:0	6	&
water	178:25	0:0	6	ps
water	178:28	0:0	4	;
return	179:8	179:16	4	0
water	179:15	0:0	5	0
label	180:4	180:19	4	case WM_DESTROY :
if	181:8	185:8	4	(pbmfh)
cond	181:12	181:12	5	pbmfh
water	181:12	0:0	6	pbmfh
stmts	182:8	185:8	5	
water	182:8	0:0	6	{
call	183:12	183:23	6	free
arg	183:18	183:23	7	pbmfh
water	183:18	0:0	8	pbmfh
water	183:24	0:0	6	;
water	184:12	0:0	6	pbmfh
op	184:18	0:0	6	=
water	184:20	0:0	6	NULL
water	184:24	0:0	6	;
water	185:8	0:0	6	}
call	186:8	186:26	4	PostQuitMessage
arg	186:25	186:26	5	0
water	186:25	0:0	6	0
water	186:27	0:0	4	;
return	187:8	187:16	4	0
water	187:15	0:0	5	0
water	188:4	0:0	4	}
return	189:4	189:56	2	DefWindowProc(hwnd,message,wParam,lParam)
call	189:11	189:55	3	DefWindowProc
arg	189:26	189:30	4	hwnd
water	189:26	0:0	5	hwnd
arg	189:32	189:39	4	message
water	189:32	0:0	5	message
arg	189:41	189:47	4	wParam
water	189:41	0:0	5	wParam
arg	189:49	189:55	4	lParam
water	189:49	0:0	5	lParam

func	1:0	61:0	0	static int	logpixel
params	2:8	0:0	1	
param	2:9	2:35	2	const Transform *	transform
param	2:37	2:50	2	png_uint_32	x
param	2:52	2:65	2	png_uint_32	y
param	3:3	3:18	2	const Pixel *	in
param	3:20	3:37	2	const Pixel *	calc
param	3:39	3:55	2	const Pixel *	out
param	3:57	3:75	2	const char *	reason
stmnts	0:0	60:3	1	
decl	5:3	5:66	2	const png_uint_32	in_format
op	5:31	0:0	2	=
water	5:33	0:0	2	transform
op	5:42	0:0	2	->
water	5:44	0:0	2	in_image
op	5:52	0:0	2	->
water	5:54	0:0	2	image
op	5:59	0:0	2	.
water	5:60	0:0	2	format
decl	6:3	6:68	2	const png_uint_32	out_format
op	6:32	0:0	2	=
water	6:34	0:0	2	transform
op	6:43	0:0	2	->
water	6:45	0:0	2	out_image
op	6:54	0:0	2	->
water	6:56	0:0	2	image
op	6:61	0:0	2	.
water	6:62	0:0	2	format
decl	7:3	7:64	2	png_uint_32	back_format
op	7:27	0:0	2	=
water	7:29	0:0	2	out_format
op	7:40	0:0	2	&
water	7:42	0:0	2	~PNG_FORMAT_FLAG_ALPHA
decl	8:3	8:30	2	const char	*via_linear
op	8:26	0:0	2	=
water	8:28	0:0	2	""
decl	9:3	9:66	2	char	pixel_in[64]
water	9:20	0:0	2	,
decl	9:3	9:66	2	char	pixel_calc[64]
water	9:36	0:0	2	,
decl	9:3	9:66	2	char	pixel_out[64]
water	9:51	0:0	2	,
decl	9:3	9:66	2	char	pixel_loc[64]
decl	10:3	10:28	2	char	background_info[100]
call	11:3	11:38	2	print_pixel
arg	11:15	11:23	3	pixel_in
water	11:15	0:0	4	pixel_in
arg	11:25	11:27	3	in
water	11:25	0:0	4	in
arg	11:29	11:38	3	in_format
water	11:29	0:0	4	in_format
water	11:39	0:0	2	;
call	12:3	12:43	2	print_pixel
arg	12:15	12:25	3	pixel_calc
water	12:15	0:0	4	pixel_calc
arg	12:27	12:31	3	calc
water	12:27	0:0	4	calc
arg	12:33	12:43	3	out_format
water	12:33	0:0	4	out_format
water	12:44	0:0	2	;
call	13:3	13:41	2	print_pixel
arg	13:15	13:24	3	pixel_out
water	13:15	0:0	4	pixel_out
arg	13:26	13:29	3	out
water	13:26	0:0	4	out
arg	13:31	13:41	3	out_format
water	13:31	0:0	4	out_format
water	13:42	0:0	2	;
if	14:3	15:58	2	(transform -> is_palette)
cond	14:7	14:18	3	transform -> is_palette
water	14:7	0:0	4	transform
op	14:16	0:0	4	->
water	14:18	0:0	4	is_palette
stmts	15:6	15:58	3	
call	15:6	15:57	4	sprintf
arg	15:14	15:23	5	pixel_loc
water	15:14	0:0	6	pixel_loc
arg	15:25	15:39	5	"palette: %lu"
water	15:25	0:0	6	"palette: %lu"
arg	15:41	15:57	5	(unsignedlong)y
water	15:41	0:0	6	(
water	15:42	0:0	6	unsigned
water	15:51	0:0	6	long
water	15:55	0:0	6	)
water	15:56	0:0	6	y
water	15:58	0:0	4	;
else	16:3	17:71	2
stmts	17:6	17:71	3	
call	17:6	17:70	4	sprintf
arg	17:14	17:23	5	pixel_loc
water	17:14	0:0	6	pixel_loc
arg	17:25	17:34	5	"%lu,%lu"
water	17:25	0:0	6	"%lu,%lu"
arg	17:36	17:52	5	(unsignedlong)x
water	17:36	0:0	6	(
water	17:37	0:0	6	unsigned
water	17:46	0:0	6	long
water	17:50	0:0	6	)
water	17:51	0:0	6	x
arg	17:54	17:70	5	(unsignedlong)y
water	17:54	0:0	6	(
water	17:55	0:0	6	unsigned
water	17:64	0:0	6	long
water	17:68	0:0	6	)
water	17:69	0:0	6	y
water	17:71	0:0	4	;
if	18:3	26:3	2	(transform -> from_linear != NULL)
cond	18:7	18:33	3	transform -> from_linear != NULL
water	18:7	0:0	4	transform
op	18:16	0:0	4	->
water	18:18	0:0	4	from_linear
op	18:30	0:0	4	!=
water	18:33	0:0	4	NULL
stmts	19:3	26:3	3	
water	19:3	0:0	4	{
water	20:6	0:0	4	via_linear
op	20:17	0:0	4	=
water	20:19	0:0	4	" (via linear)"
water	20:34	0:0	4	;
water	25:6	0:0	4	back_format
op	25:18	0:0	4	|=
water	25:21	0:0	4	PNG_FORMAT_FLAG_LINEAR
water	25:43	0:0	4	;
water	26:3	0:0	4	}
if	27:3	37:3	2	(transform -> background != NULL)
cond	27:7	27:32	3	transform -> background != NULL
water	27:7	0:0	4	transform
op	27:16	0:0	4	->
water	27:18	0:0	4	background
op	27:29	0:0	4	!=
water	27:32	0:0	4	NULL
stmts	28:3	37:3	3	
water	28:3	0:0	4	{
decl	29:6	29:16	4	Pixel	back
decl	30:6	30:25	4	char	pixel_back[64]
water	31:6	0:0	4	back
op	31:10	0:0	4	.
water	31:11	0:0	4	r
op	31:13	0:0	4	=
water	31:15	0:0	4	transform
op	31:24	0:0	4	->
water	31:26	0:0	4	background
op	31:36	0:0	4	->
water	31:38	0:0	4	ir
water	31:40	0:0	4	;
water	32:6	0:0	4	back
op	32:10	0:0	4	.
water	32:11	0:0	4	g
op	32:13	0:0	4	=
water	32:15	0:0	4	transform
op	32:24	0:0	4	->
water	32:26	0:0	4	background
op	32:36	0:0	4	->
water	32:38	0:0	4	ig
water	32:40	0:0	4	;
water	33:6	0:0	4	back
op	33:10	0:0	4	.
water	33:11	0:0	4	b
op	33:13	0:0	4	=
water	33:15	0:0	4	transform
op	33:24	0:0	4	->
water	33:26	0:0	4	background
op	33:36	0:0	4	->
water	33:38	0:0	4	ib
water	33:40	0:0	4	;
water	34:6	0:0	4	back
op	34:10	0:0	4	.
water	34:11	0:0	4	a
op	34:13	0:0	4	=
op	34:15	0:0	4	-
water	34:16	0:0	4	1
water	34:17	0:0	4	;
call	35:6	35:48	4	print_pixel
arg	35:18	35:28	5	pixel_back
water	35:18	0:0	6	pixel_back
arg	35:30	35:35	5	&back
op	35:30	0:0	6	&
water	35:31	0:0	6	back
arg	35:37	35:48	5	back_format
water	35:37	0:0	6	back_format
water	35:49	0:0	4	;
call	36:6	36:62	4	sprintf
arg	36:14	36:29	5	background_info
water	36:14	0:0	6	background_info
arg	36:31	36:50	5	" on background %s"
water	36:31	0:0	6	" on background %s"
arg	36:52	36:62	5	pixel_back
water	36:52	0:0	6	pixel_back
water	36:63	0:0	4	;
water	37:3	0:0	4	}
else	38:3	39:28	2
stmts	39:6	39:28	3	
water	39:6	0:0	4	background_info
op	39:21	0:0	4	[
water	39:22	0:0	4	0
op	39:23	0:0	4	]
op	39:25	0:0	4	=
water	39:27	0:0	4	0
water	39:28	0:0	4	;
if	40:3	49:3	2	(transform -> in_image -> file_name != transform -> out_image -> file_name)
cond	40:7	40:63	3	transform -> in_image -> file_name != transform -> out_image -> file_name
water	40:7	0:0	4	transform
op	40:16	0:0	4	->
water	40:18	0:0	4	in_image
op	40:26	0:0	4	->
water	40:28	0:0	4	file_name
op	40:38	0:0	4	!=
water	40:41	0:0	4	transform
op	40:50	0:0	4	->
water	40:52	0:0	4	out_image
op	40:61	0:0	4	->
water	40:63	0:0	4	file_name
stmts	41:3	49:3	3	
water	41:3	0:0	4	{
decl	42:6	42:28	4	char	error_buffer[512]
call	43:6	46:57	4	sprintf
arg	43:14	43:26	5	error_buffer
water	43:14	0:0	6	error_buffer
arg	44:9	45:39	5	"(%s) %s error%s:\n %s%s ->\n       %s\n  not: %s.\n""Use --preserve and examine: "
water	44:9	0:0	6	"(%s) %s error%s:\n %s%s ->\n       %s\n  not: %s.\n"
water	45:9	0:0	6	"Use --preserve and examine: "
arg	45:41	45:50	5	pixel_loc
water	45:41	0:0	6	pixel_loc
arg	45:52	45:58	5	reason
water	45:52	0:0	6	reason
arg	45:60	45:70	5	via_linear
water	45:60	0:0	6	via_linear
arg	46:9	46:17	5	pixel_in
water	46:9	0:0	6	pixel_in
arg	46:19	46:34	5	background_info
water	46:19	0:0	6	background_info
arg	46:36	46:45	5	pixel_out
water	46:36	0:0	6	pixel_out
arg	46:47	46:57	5	pixel_calc
water	46:47	0:0	6	pixel_calc
water	46:58	0:0	4	;
return	47:6	48:55	4	logerror(transform->in_image,transform->in_image->file_name,error_buffer,transform->out_image->file_name)
call	47:13	48:54	5	logerror
arg	47:22	47:41	6	transform->in_image
water	47:22	0:0	7	transform
op	47:31	0:0	7	->
water	47:33	0:0	7	in_image
arg	47:43	47:73	6	transform->in_image->file_name
water	47:43	0:0	7	transform
op	47:52	0:0	7	->
water	47:54	0:0	7	in_image
op	47:62	0:0	7	->
water	47:64	0:0	7	file_name
arg	48:9	48:21	6	error_buffer
water	48:9	0:0	7	error_buffer
arg	48:23	48:54	6	transform->out_image->file_name
water	48:23	0:0	7	transform
op	48:32	0:0	7	->
water	48:34	0:0	7	out_image
op	48:43	0:0	7	->
water	48:45	0:0	7	file_name
water	49:3	0:0	4	}
else	50:3	60:3	2
stmts	51:3	60:3	3	
water	51:3	0:0	4	{
decl	52:6	52:28	4	char	error_buffer[512]
call	53:6	57:19	4	sprintf
arg	53:14	53:26	5	error_buffer
water	53:14	0:0	6	error_buffer
arg	54:9	55:79	5	"(%s) %s error%s:\n %s%s ->\n       %s\n  not: %s.\n"" The error happened when reading the original file with this format."
water	54:9	0:0	6	"(%s) %s error%s:\n %s%s ->\n       %s\n  not: %s.\n"
water	55:9	0:0	6	" The error happened when reading the original file with this format."
arg	56:9	56:18	5	pixel_loc
water	56:9	0:0	6	pixel_loc
arg	56:20	56:26	5	reason
water	56:20	0:0	6	reason
arg	56:28	56:38	5	via_linear
water	56:28	0:0	6	via_linear
arg	56:40	56:48	5	pixel_in
water	56:40	0:0	6	pixel_in
arg	56:50	56:65	5	background_info
water	56:50	0:0	6	background_info
arg	56:67	56:76	5	pixel_out
water	56:67	0:0	6	pixel_out
arg	57:9	57:19	5	pixel_calc
water	57:9	0:0	6	pixel_calc
water	57:20	0:0	4	;
return	58:6	59:26	4	logerror(transform->in_image,transform->in_image->file_name,error_buffer,"")
call	58:13	59:25	5	logerror
arg	58:22	58:41	6	transform->in_image
water	58:22	0:0	7	transform
op	58:31	0:0	7	->
water	58:33	0:0	7	in_image
arg	58:43	58:73	6	transform->in_image->file_name
water	58:43	0:0	7	transform
op	58:52	0:0	7	->
water	58:54	0:0	7	in_image
op	58:62	0:0	7	->
water	58:64	0:0	7	file_name
arg	59:9	59:21	6	error_buffer
water	59:9	0:0	7	error_buffer
arg	59:23	59:25	6	""
water	59:23	0:0	7	""
water	60:3	0:0	4	}

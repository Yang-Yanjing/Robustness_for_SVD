func	1:0	73:0	0	static int	write_one_file
params	2:14	0:0	1	
param	2:15	2:28	2	Image *	output
param	2:30	2:42	2	Image *	image
param	2:44	2:63	2	int	convert_to_8bit
stmnts	4:3	72:41	1	
if	4:3	5:47	2	(image -> opts & FAST_WRITE)
cond	4:7	4:21	3	image -> opts & FAST_WRITE
water	4:7	0:0	4	image
op	4:12	0:0	4	->
water	4:14	0:0	4	opts
op	4:19	0:0	4	&
water	4:21	0:0	4	FAST_WRITE
stmts	5:6	5:47	3	
water	5:6	0:0	4	image
op	5:11	0:0	4	->
water	5:13	0:0	4	image
op	5:18	0:0	4	.
water	5:19	0:0	4	flags
op	5:25	0:0	4	|=
water	5:28	0:0	4	PNG_IMAGE_FLAG_FAST
water	5:47	0:0	4	;
if	6:3	33:3	2	(image -> opts & USE_STDIO)
cond	6:7	6:21	3	image -> opts & USE_STDIO
water	6:7	0:0	4	image
op	6:12	0:0	4	->
water	6:14	0:0	4	opts
op	6:19	0:0	4	&
water	6:21	0:0	4	USE_STDIO
stmts	7:3	33:3	3	
water	7:3	0:0	4	{
decl	8:6	8:25	4	FILE	*f
op	8:14	0:0	4	=
call	8:16	8:24	5	tmpfile
if	9:6	30:6	4	(f != NULL)
cond	9:10	9:15	5	f != NULL
water	9:10	0:0	6	f
op	9:12	0:0	6	!=
water	9:15	0:0	6	NULL
stmts	10:6	30:6	5	
water	10:6	0:0	6	{
if	11:9	24:9	6	(png_image_write_to_stdio (& image -> image ,f ,convert_to_8bit ,image -> buffer + 16 ,( png_int_32 ) image -> stride ,image -> colormap ))
cond	11:13	12:72	7	png_image_write_to_stdio (& image -> image ,f ,convert_to_8bit ,image -> buffer + 16 ,( png_int_32 ) image -> stride ,image -> colormap )
call	11:13	12:72	8	png_image_write_to_stdio
arg	11:38	11:51	9	&image->image
op	11:38	0:0	10	&
water	11:39	0:0	10	image
op	11:44	0:0	10	->
water	11:46	0:0	10	image
arg	11:53	11:54	9	f
water	11:53	0:0	10	f
arg	11:56	11:71	9	convert_to_8bit
water	11:56	0:0	10	convert_to_8bit
arg	12:12	12:28	9	image->buffer+16
water	12:12	0:0	10	image
op	12:17	0:0	10	->
water	12:19	0:0	10	buffer
op	12:25	0:0	10	+
water	12:26	0:0	10	16
arg	12:30	12:55	9	(png_int_32)image->stride
water	12:30	0:0	10	(
water	12:31	0:0	10	png_int_32
water	12:41	0:0	10	)
water	12:42	0:0	10	image
op	12:47	0:0	10	->
water	12:49	0:0	10	stride
arg	12:57	12:72	9	image->colormap
water	12:57	0:0	10	image
op	12:62	0:0	10	->
water	12:64	0:0	10	colormap
stmts	13:9	24:9	7	
water	13:9	0:0	8	{
if	14:12	21:12	8	(fflush (f ) == 0)
cond	14:16	14:29	9	fflush (f ) == 0
call	14:16	14:24	10	fflush
arg	14:23	14:24	11	f
water	14:23	0:0	12	f
op	14:26	0:0	10	==
water	14:29	0:0	10	0
stmts	15:12	21:12	9	
water	15:12	0:0	10	{
call	16:15	16:23	10	rewind
arg	16:22	16:23	11	f
water	16:22	0:0	12	f
water	16:24	0:0	10	;
call	17:15	17:76	10	initimage
arg	17:25	17:31	11	output
water	17:25	0:0	12	output
arg	17:33	17:44	11	image->opts
water	17:33	0:0	12	image
op	17:38	0:0	12	->
water	17:40	0:0	12	opts
arg	17:46	17:55	11	"tmpfile"
water	17:46	0:0	12	"tmpfile"
arg	17:57	17:76	11	image->stride_extra
water	17:57	0:0	12	image
op	17:62	0:0	12	->
water	17:64	0:0	12	stride_extra
water	17:77	0:0	10	;
water	18:15	0:0	10	output
op	18:21	0:0	10	->
water	18:23	0:0	10	input_file
op	18:34	0:0	10	=
water	18:36	0:0	10	f
water	18:37	0:0	10	;
if	19:15	20:26	10	(!checkopaque (image ))
cond	19:19	19:37	11	!checkopaque (image )
op	19:19	0:0	12	!
call	19:20	19:37	12	checkopaque
arg	19:32	19:37	13	image
water	19:32	0:0	14	image
stmts	20:18	20:26	11	
return	20:18	20:26	12	0
water	20:25	0:0	13	0
water	21:12	0:0	10	}
else	22:12	23:64	8
stmts	23:15	23:64	9	
return	23:15	23:64	10	logclose(image,f,"tmpfile",": flush: ")
call	23:22	23:63	11	logclose
arg	23:31	23:36	12	image
water	23:31	0:0	13	image
arg	23:38	23:39	12	f
water	23:38	0:0	13	f
arg	23:41	23:50	12	"tmpfile"
water	23:41	0:0	13	"tmpfile"
arg	23:52	23:63	12	": flush: "
water	23:52	0:0	13	": flush: "
water	24:9	0:0	8	}
else	25:9	29:9	6
stmts	26:9	29:9	7	
water	26:9	0:0	8	{
call	27:12	27:20	8	fclose
arg	27:19	27:20	9	f
water	27:19	0:0	10	f
water	27:21	0:0	8	;
return	28:12	28:67	8	logerror(image,"tmpfile",": write failed","")
call	28:19	28:66	9	logerror
arg	28:28	28:33	10	image
water	28:28	0:0	11	image
arg	28:35	28:44	10	"tmpfile"
water	28:35	0:0	11	"tmpfile"
arg	28:46	28:62	10	": write failed"
water	28:46	0:0	11	": write failed"
arg	28:64	28:66	10	""
water	28:64	0:0	11	""
water	29:9	0:0	8	}
water	30:6	0:0	6	}
else	31:6	32:71	4
stmts	32:9	32:71	5	
return	32:9	32:71	6	logerror(image,"tmpfile",": open: ",strerror(errno))
call	32:16	32:70	7	logerror
arg	32:25	32:30	8	image
water	32:25	0:0	9	image
arg	32:32	32:41	8	"tmpfile"
water	32:32	0:0	9	"tmpfile"
arg	32:43	32:53	8	": open: "
water	32:43	0:0	9	": open: "
arg	32:55	32:70	8	strerror(errno)
call	32:55	32:69	9	strerror
arg	32:64	32:69	10	errno
water	32:64	0:0	11	errno
water	33:3	0:0	4	}
else	34:3	51:3	2
stmts	35:3	51:3	3	
water	35:3	0:0	4	{
water	36:6	0:0	4	static
water	36:13	0:0	4	int
water	36:17	0:0	4	counter
op	36:25	0:0	4	=
water	36:27	0:0	4	0
water	36:28	0:0	4	;
decl	37:6	37:19	4	char	name[32]
call	38:6	38:47	4	sprintf
arg	38:14	38:18	5	name
water	38:14	0:0	6	name
arg	38:20	38:30	5	"%s%d.png"
water	38:20	0:0	6	"%s%d.png"
arg	38:32	38:36	5	tmpf
water	38:32	0:0	6	tmpf
arg	38:38	38:47	5	++counter
op	38:38	0:0	6	++
water	38:40	0:0	6	counter
water	38:48	0:0	4	;
if	39:6	48:6	4	(png_image_write_to_file (& image -> image ,name ,convert_to_8bit ,image -> buffer + 16 ,( png_int_32 ) image -> stride ,image -> colormap ))
cond	39:10	40:69	5	png_image_write_to_file (& image -> image ,name ,convert_to_8bit ,image -> buffer + 16 ,( png_int_32 ) image -> stride ,image -> colormap )
call	39:10	40:69	6	png_image_write_to_file
arg	39:34	39:47	7	&image->image
op	39:34	0:0	8	&
water	39:35	0:0	8	image
op	39:40	0:0	8	->
water	39:42	0:0	8	image
arg	39:49	39:53	7	name
water	39:49	0:0	8	name
arg	39:55	39:70	7	convert_to_8bit
water	39:55	0:0	8	convert_to_8bit
arg	40:9	40:25	7	image->buffer+16
water	40:9	0:0	8	image
op	40:14	0:0	8	->
water	40:16	0:0	8	buffer
op	40:22	0:0	8	+
water	40:23	0:0	8	16
arg	40:27	40:52	7	(png_int_32)image->stride
water	40:27	0:0	8	(
water	40:28	0:0	8	png_int_32
water	40:38	0:0	8	)
water	40:39	0:0	8	image
op	40:44	0:0	8	->
water	40:46	0:0	8	stride
arg	40:54	40:69	7	image->colormap
water	40:54	0:0	8	image
op	40:59	0:0	8	->
water	40:61	0:0	8	colormap
stmts	41:6	48:6	5	
water	41:6	0:0	6	{
call	42:9	43:31	6	initimage
arg	42:19	42:25	7	output
water	42:19	0:0	8	output
arg	42:27	42:38	7	image->opts
water	42:27	0:0	8	image
op	42:32	0:0	8	->
water	42:34	0:0	8	opts
arg	42:40	42:60	7	output->tmpfile_name
water	42:40	0:0	8	output
op	42:46	0:0	8	->
water	42:48	0:0	8	tmpfile_name
arg	43:12	43:31	7	image->stride_extra
water	43:12	0:0	8	image
op	43:17	0:0	8	->
water	43:19	0:0	8	stride_extra
water	43:32	0:0	6	;
call	45:9	45:42	6	strcpy
arg	45:16	45:36	7	output->tmpfile_name
water	45:16	0:0	8	output
op	45:22	0:0	8	->
water	45:24	0:0	8	tmpfile_name
arg	45:38	45:42	7	name
water	45:38	0:0	8	name
water	45:43	0:0	6	;
if	46:9	47:20	6	(!checkopaque (image ))
cond	46:13	46:31	7	!checkopaque (image )
op	46:13	0:0	8	!
call	46:14	46:31	8	checkopaque
arg	46:26	46:31	9	image
water	46:26	0:0	10	image
stmts	47:12	47:20	7	
return	47:12	47:20	8	0
water	47:19	0:0	9	0
water	48:6	0:0	6	}
else	49:6	50:59	4
stmts	50:9	50:59	5	
return	50:9	50:59	6	logerror(image,name,": write failed","")
call	50:16	50:58	7	logerror
arg	50:25	50:30	8	image
water	50:25	0:0	9	image
arg	50:32	50:36	8	name
water	50:32	0:0	9	name
arg	50:38	50:54	8	": write failed"
water	50:38	0:0	9	": write failed"
arg	50:56	50:58	8	""
water	50:56	0:0	9	""
water	51:3	0:0	4	}
if	59:3	69:3	2	(read_file (output ,image -> image . format | FORMAT_NO_CHANGE ,NULL ))
cond	59:7	59:69	3	read_file (output ,image -> image . format | FORMAT_NO_CHANGE ,NULL )
call	59:7	59:69	4	read_file
arg	59:17	59:23	5	output
water	59:17	0:0	6	output
arg	59:25	59:63	5	image->image.format|FORMAT_NO_CHANGE
water	59:25	0:0	6	image
op	59:30	0:0	6	->
water	59:32	0:0	6	image
op	59:37	0:0	6	.
water	59:38	0:0	6	format
op	59:45	0:0	6	|
water	59:47	0:0	6	FORMAT_NO_CHANGE
arg	59:65	59:69	5	NULL
water	59:65	0:0	6	NULL
stmts	60:3	69:3	3	
water	60:3	0:0	4	{
decl	61:6	61:55	4	png_uint_32	original_format
op	61:34	0:0	4	=
water	61:36	0:0	4	image
op	61:41	0:0	4	->
water	61:43	0:0	4	image
op	61:48	0:0	4	.
water	61:49	0:0	4	format
if	62:6	63:51	4	(convert_to_8bit)
cond	62:10	62:10	5	convert_to_8bit
water	62:10	0:0	6	convert_to_8bit
stmts	63:9	63:51	5	
water	63:9	0:0	6	original_format
op	63:25	0:0	6	&=
water	63:28	0:0	6	~PNG_FORMAT_FLAG_LINEAR
water	63:51	0:0	6	;
if	64:6	67:30	4	(( output -> image . format & BASE_FORMATS ) != ( original_format & BASE_FORMATS ))
cond	64:10	65:40	5	( output -> image . format & BASE_FORMATS ) != ( original_format & BASE_FORMATS )
water	64:10	0:0	6	(
water	64:11	0:0	6	output
op	64:17	0:0	6	->
water	64:19	0:0	6	image
op	64:24	0:0	6	.
water	64:25	0:0	6	format
op	64:32	0:0	6	&
water	64:34	0:0	6	BASE_FORMATS
water	64:46	0:0	6	)
op	64:48	0:0	6	!=
water	65:9	0:0	6	(
water	65:10	0:0	6	original_format
op	65:26	0:0	6	&
water	65:28	0:0	6	BASE_FORMATS
water	65:40	0:0	6	)
stmts	66:9	67:30	5	
return	66:9	67:30	6	logerror(image,image->file_name,": format changed on read: ",output->file_name)
call	66:16	67:29	7	logerror
arg	66:25	66:30	8	image
water	66:25	0:0	9	image
arg	66:32	66:48	8	image->file_name
water	66:32	0:0	9	image
op	66:37	0:0	9	->
water	66:39	0:0	9	file_name
arg	66:50	66:78	8	": format changed on read: "
water	66:50	0:0	9	": format changed on read: "
arg	67:12	67:29	8	output->file_name
water	67:12	0:0	9	output
op	67:18	0:0	9	->
water	67:20	0:0	9	file_name
return	68:6	68:55	4	compare_two_images(image,output,0,NULL)
call	68:13	68:54	5	compare_two_images
arg	68:32	68:37	6	image
water	68:32	0:0	7	image
arg	68:39	68:45	6	output
water	68:39	0:0	7	output
arg	68:47	68:48	6	0
water	68:47	0:0	7	0
arg	68:50	68:54	6	NULL
water	68:50	0:0	7	NULL
water	69:3	0:0	4	}
else	70:3	72:41	2
stmts	71:6	72:41	3	
return	71:6	72:41	4	logerror(output,output->tmpfile_name,": read of new file failed","")
call	71:13	72:40	5	logerror
arg	71:22	71:28	6	output
water	71:22	0:0	7	output
arg	71:30	71:50	6	output->tmpfile_name
water	71:30	0:0	7	output
op	71:36	0:0	7	->
water	71:38	0:0	7	tmpfile_name
arg	72:9	72:36	6	": read of new file failed"
water	72:9	0:0	7	": read of new file failed"
arg	72:38	72:40	6	""
water	72:38	0:0	7	""

func	1:0	134:0	0	static void	test_one_file
params	2:13	0:0	1	
param	2:14	2:32	2	struct display *	dp
param	2:34	2:54	2	const char *	filename
stmnts	7:3	133:3	1	
water	7:3	0:0	2	dp
op	7:5	0:0	2	->
water	7:7	0:0	2	operation
op	7:17	0:0	2	=
water	7:19	0:0	2	"cache file"
water	7:31	0:0	2	;
water	8:3	0:0	2	dp
op	8:5	0:0	2	->
water	8:7	0:0	2	transforms
op	8:18	0:0	2	=
water	8:20	0:0	2	0
water	8:21	0:0	2	;
call	9:3	9:34	2	display_cache_file
arg	9:22	9:24	3	dp
water	9:22	0:0	4	dp
arg	9:26	9:34	3	filename
water	9:26	0:0	4	filename
water	9:35	0:0	2	;
call	10:3	10:20	2	update_display
arg	10:18	10:20	3	dp
water	10:18	0:0	4	dp
water	10:21	0:0	2	;
if	14:3	21:3	2	(dp -> ignored_transforms != 0)
cond	14:7	14:33	3	dp -> ignored_transforms != 0
water	14:7	0:0	4	dp
op	14:9	0:0	4	->
water	14:11	0:0	4	ignored_transforms
op	14:30	0:0	4	!=
water	14:33	0:0	4	0
stmts	15:3	21:3	3	
water	15:3	0:0	4	{
call	16:6	17:31	4	read_png
arg	16:15	16:17	5	dp
water	16:15	0:0	6	dp
arg	16:19	16:37	5	&dp->original_file
op	16:19	0:0	6	&
water	16:20	0:0	6	dp
op	16:22	0:0	6	->
water	16:24	0:0	6	original_file
arg	16:39	16:59	5	"ignored transforms"
water	16:39	0:0	6	"ignored transforms"
arg	17:9	17:31	5	dp->ignored_transforms
water	17:9	0:0	6	dp
op	17:11	0:0	6	->
water	17:13	0:0	6	ignored_transforms
water	17:32	0:0	4	;
if	19:6	20:15	4	(!compare_read (dp ,0 ))
cond	19:10	19:29	5	!compare_read (dp ,0 )
op	19:10	0:0	6	!
call	19:11	19:29	6	compare_read
arg	19:24	19:26	7	dp
water	19:24	0:0	8	dp
arg	19:28	19:29	7	0
water	19:28	0:0	8	0
stmts	20:9	20:15	5	
return	20:9	20:15	6	
water	21:3	0:0	4	}
water	27:3	0:0	2	dp
op	27:5	0:0	2	->
water	27:7	0:0	2	operation
op	27:17	0:0	2	=
water	27:19	0:0	2	"write"
water	27:26	0:0	2	;
call	28:3	28:35	2	write_png
arg	28:13	28:15	3	dp
water	28:13	0:0	4	dp
arg	28:17	28:32	3	dp->original_ip
water	28:17	0:0	4	dp
op	28:19	0:0	4	->
water	28:21	0:0	4	original_ip
arg	28:34	28:35	3	0
water	28:34	0:0	4	0
water	28:36	0:0	2	;
call	29:3	29:42	2	read_png
arg	29:12	29:14	3	dp
water	29:12	0:0	4	dp
arg	29:16	29:33	3	&dp->written_file
op	29:16	0:0	4	&
water	29:17	0:0	4	dp
op	29:19	0:0	4	->
water	29:21	0:0	4	written_file
arg	29:35	29:39	3	NULL
water	29:35	0:0	4	NULL
arg	29:41	29:42	3	0
water	29:41	0:0	4	0
water	29:43	0:0	2	;
if	30:3	31:12	2	(!compare_read (dp ,0 ))
cond	30:7	30:26	3	!compare_read (dp ,0 )
op	30:7	0:0	4	!
call	30:8	30:26	4	compare_read
arg	30:21	30:23	5	dp
water	30:21	0:0	6	dp
arg	30:25	30:26	5	0
water	30:25	0:0	6	0
stmts	31:6	31:12	3	
return	31:6	31:12	4	
water	36:3	0:0	2	{
decl	41:6	41:49	2	unsigned int	active
op	41:26	0:0	2	=
water	41:28	0:0	2	dp
op	41:30	0:0	2	->
water	41:32	0:0	2	active_transforms
decl	42:6	42:60	2	const int	exhaustive
op	42:27	0:0	2	=
water	42:29	0:0	2	(
water	42:30	0:0	2	dp
op	42:32	0:0	2	->
water	42:34	0:0	2	options
op	42:42	0:0	2	&
water	42:44	0:0	2	EXHAUSTIVE
water	42:54	0:0	2	)
op	42:56	0:0	2	!=
water	42:59	0:0	2	0
decl	43:6	43:52	2	unsigned int	current
op	43:27	0:0	2	=
call	43:29	43:51	3	first_transform
arg	43:45	43:51	4	active
water	43:45	0:0	5	active
decl	44:6	44:37	2	unsigned int	bad_transforms
op	44:34	0:0	2	=
water	44:36	0:0	2	0
decl	45:6	45:34	2	unsigned int	bad_combo
op	45:29	0:0	2	=
water	45:31	0:0	2	~0U
decl	46:6	46:37	2	unsigned int	bad_combo_list
op	46:34	0:0	2	=
water	46:36	0:0	2	0
for	47:6	117:6	2	(;;)
forinit	47:11	47:11	3	;
water	47:11	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	48:6	117:6	3	
water	48:6	0:0	4	{
call	49:9	49:70	4	read_png
arg	49:18	49:20	5	dp
water	49:18	0:0	6	dp
arg	49:22	49:40	5	&dp->original_file
op	49:22	0:0	6	&
water	49:23	0:0	6	dp
op	49:25	0:0	6	->
water	49:27	0:0	6	original_file
arg	49:42	49:61	5	"active transforms"
water	49:42	0:0	6	"active transforms"
arg	49:63	49:70	5	current
water	49:63	0:0	6	current
water	49:71	0:0	4	;
if	61:9	89:9	4	(( current & write_transforms ) == current)
cond	61:13	61:45	5	( current & write_transforms ) == current
water	61:13	0:0	6	(
water	61:14	0:0	6	current
op	61:22	0:0	6	&
water	61:24	0:0	6	write_transforms
water	61:40	0:0	6	)
op	61:42	0:0	6	==
water	61:45	0:0	6	current
stmts	62:9	89:9	5	
water	62:9	0:0	6	{
water	68:12	0:0	6	dp
op	68:14	0:0	6	->
water	68:16	0:0	6	operation
op	68:26	0:0	6	=
water	68:28	0:0	6	"reversible transforms"
water	68:51	0:0	6	;
call	69:12	69:46	6	write_png
arg	69:22	69:24	7	dp
water	69:22	0:0	8	dp
arg	69:26	69:37	7	dp->read_ip
water	69:26	0:0	8	dp
op	69:28	0:0	8	->
water	69:30	0:0	8	read_ip
arg	69:39	69:46	7	current
water	69:39	0:0	8	current
water	69:47	0:0	6	;
call	73:12	73:51	6	read_png
arg	73:21	73:23	7	dp
water	73:21	0:0	8	dp
arg	73:25	73:42	7	&dp->written_file
op	73:25	0:0	8	&
water	73:26	0:0	8	dp
op	73:28	0:0	8	->
water	73:30	0:0	8	written_file
arg	73:44	73:48	7	NULL
water	73:44	0:0	8	NULL
arg	73:50	73:51	7	0
water	73:50	0:0	8	0
water	73:52	0:0	6	;
if	74:12	88:12	6	(!compare_read (dp ,current ))
cond	74:16	74:41	7	!compare_read (dp ,current )
op	74:16	0:0	8	!
call	74:17	74:41	8	compare_read
arg	74:30	74:32	9	dp
water	74:30	0:0	10	dp
arg	74:34	74:41	9	current
water	74:34	0:0	10	current
stmts	75:12	88:12	7	
water	75:12	0:0	8	{
if	81:15	85:15	8	(is_combo (current ))
cond	81:19	81:35	9	is_combo (current )
call	81:19	81:35	10	is_combo
arg	81:28	81:35	11	current
water	81:28	0:0	12	current
stmts	82:15	85:15	9	
water	82:15	0:0	10	{
water	83:18	0:0	10	bad_combo
op	83:28	0:0	10	&=
water	83:31	0:0	10	current
water	83:38	0:0	10	;
water	84:18	0:0	10	bad_combo_list
op	84:33	0:0	10	|=
water	84:36	0:0	10	current
water	84:43	0:0	10	;
water	85:15	0:0	10	}
else	86:15	87:43	8
stmts	87:18	87:43	9	
water	87:18	0:0	10	bad_transforms
op	87:33	0:0	10	|=
water	87:36	0:0	10	current
water	87:43	0:0	10	;
water	88:12	0:0	8	}
water	89:9	0:0	6	}
if	92:9	109:9	4	(exhaustive)
cond	92:13	92:13	5	exhaustive
water	92:13	0:0	6	exhaustive
stmts	93:9	109:9	5	
water	93:9	0:0	6	{
decl	94:12	94:39	6	unsigned int	next
op	94:30	0:0	6	=
water	94:32	0:0	6	current
do	95:12	100:12	6	(( next & read_transforms ) <= current || ( next & active ) == 0 || ( next & bad_transforms ) != 0 ||skip_transform (dp ,next ))
cond	103:21	106:44	7	( next & read_transforms ) <= current || ( next & active ) == 0 || ( next & bad_transforms ) != 0 ||skip_transform (dp ,next )
water	103:21	0:0	8	(
water	103:22	0:0	8	next
op	103:27	0:0	8	&
water	103:29	0:0	8	read_transforms
water	103:44	0:0	8	)
op	103:46	0:0	8	<=
water	103:49	0:0	8	current
op	104:18	0:0	8	||
water	104:21	0:0	8	(
water	104:22	0:0	8	next
op	104:27	0:0	8	&
water	104:29	0:0	8	active
water	104:35	0:0	8	)
op	104:37	0:0	8	==
water	104:40	0:0	8	0
op	105:18	0:0	8	||
water	105:21	0:0	8	(
water	105:22	0:0	8	next
op	105:27	0:0	8	&
water	105:29	0:0	8	bad_transforms
water	105:43	0:0	8	)
op	105:45	0:0	8	!=
water	105:48	0:0	8	0
op	106:18	0:0	8	||
call	106:21	106:44	8	skip_transform
arg	106:36	106:38	9	dp
water	106:36	0:0	10	dp
arg	106:40	106:44	9	next
water	106:40	0:0	10	next
stmts	96:12	100:12	7	
water	96:12	0:0	8	{
if	97:15	98:28	8	(next == read_transforms)
cond	97:19	97:27	9	next == read_transforms
water	97:19	0:0	10	next
op	97:24	0:0	10	==
water	97:27	0:0	10	read_transforms
stmts	98:18	98:28	9	
goto	98:18	98:28	10	combo
water	98:23	0:0	11	combo
op	99:15	0:0	8	++
water	99:17	0:0	8	next
water	99:21	0:0	8	;
water	100:12	0:0	8	}
water	106:46	0:0	6	;
call	107:12	107:51	6	assert
arg	107:19	107:51	7	(next&read_transforms)==next
water	107:19	0:0	8	(
water	107:20	0:0	8	next
op	107:25	0:0	8	&
water	107:27	0:0	8	read_transforms
water	107:42	0:0	8	)
op	107:44	0:0	8	==
water	107:47	0:0	8	next
water	107:52	0:0	6	;
water	108:12	0:0	6	current
op	108:20	0:0	6	=
water	108:22	0:0	6	next
water	108:26	0:0	6	;
water	109:9	0:0	6	}
else	110:9	116:9	4
stmts	111:9	116:9	5	
water	111:9	0:0	6	{
water	112:12	0:0	6	active
op	112:19	0:0	6	&=
water	112:22	0:0	6	~current
water	112:30	0:0	6	;
if	113:12	114:25	6	(active == 0)
cond	113:16	113:26	7	active == 0
water	113:16	0:0	8	active
op	113:23	0:0	8	==
water	113:26	0:0	8	0
stmts	114:15	114:25	7	
goto	114:15	114:25	8	combo
water	114:20	0:0	9	combo
water	115:12	0:0	6	current
op	115:20	0:0	6	=
call	115:22	115:44	6	first_transform
arg	115:38	115:44	7	active
water	115:38	0:0	8	active
water	115:45	0:0	6	;
water	116:9	0:0	6	}
water	117:6	0:0	4	}
label	118:0	118:5	2	combo :
if	119:6	132:6	2	(dp -> options & FIND_BAD_COMBOS)
cond	119:10	119:24	3	dp -> options & FIND_BAD_COMBOS
water	119:10	0:0	4	dp
op	119:12	0:0	4	->
water	119:14	0:0	4	options
op	119:22	0:0	4	&
water	119:24	0:0	4	FIND_BAD_COMBOS
stmts	120:6	132:6	3	
water	120:6	0:0	4	{
if	125:9	128:47	4	(bad_combo != ~0U)
cond	125:13	125:26	5	bad_combo != ~0U
water	125:13	0:0	6	bad_combo
op	125:23	0:0	6	!=
water	125:26	0:0	6	~0U
stmts	126:12	128:47	5	
call	126:12	128:46	6	printf
arg	126:19	126:67	7	"%s[0x%x]: PROBLEM: 0x%x[0x%x] ANTIDOTE: 0x%x\n"
water	126:19	0:0	8	"%s[0x%x]: PROBLEM: 0x%x[0x%x] ANTIDOTE: 0x%x\n"
arg	127:15	127:27	7	dp->filename
water	127:15	0:0	8	dp
op	127:17	0:0	8	->
water	127:19	0:0	8	filename
arg	127:29	127:35	7	active
water	127:29	0:0	8	active
arg	127:37	127:46	7	bad_combo
water	127:37	0:0	8	bad_combo
arg	127:48	127:62	7	bad_combo_list
water	127:48	0:0	8	bad_combo_list
arg	128:15	128:46	7	rw_transforms&~bad_combo_list
water	128:15	0:0	8	rw_transforms
op	128:29	0:0	8	&
water	128:31	0:0	8	~bad_combo_list
water	128:47	0:0	6	;
else	129:9	131:62	4
stmts	130:12	131:62	5	
call	130:12	131:61	6	printf
arg	130:19	130:48	7	"%s: no %sbad combos found\n"
water	130:19	0:0	8	"%s: no %sbad combos found\n"
arg	130:50	130:62	7	dp->filename
water	130:50	0:0	8	dp
op	130:52	0:0	8	->
water	130:54	0:0	8	filename
arg	131:15	131:61	7	(dp->options&SKIP_BUGS)?"additional ":""
water	131:15	0:0	8	(
water	131:16	0:0	8	dp
op	131:18	0:0	8	->
water	131:20	0:0	8	options
op	131:28	0:0	8	&
water	131:30	0:0	8	SKIP_BUGS
water	131:39	0:0	8	)
water	131:41	0:0	8	?
water	131:43	0:0	8	"additional "
water	131:57	0:0	8	:
water	131:59	0:0	8	""
water	131:62	0:0	6	;
water	132:6	0:0	4	}
water	133:3	0:0	2	}

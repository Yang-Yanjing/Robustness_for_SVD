func	1:17	41:0	0	PNGCBAPI	store_malloc
params	2:12	0:0	1	
param	2:13	2:29	2	png_structp	ppIn
param	2:31	2:50	2	png_alloc_size_t	cb
stmnts	0:0	40:13	1	
decl	4:3	4:30	2	png_const_structp	pp
op	4:24	0:0	2	=
water	4:26	0:0	2	ppIn
decl	5:3	5:64	2	store_pool	*pool
op	5:20	0:0	2	=
call	5:22	5:63	3	voidcast
arg	5:31	5:42	4	store_pool*
water	5:31	0:0	5	store_pool
op	5:41	0:0	5	*
arg	5:44	5:63	4	png_get_mem_ptr(pp)
call	5:44	5:62	5	png_get_mem_ptr
arg	5:60	5:62	6	pp
water	5:60	0:0	7	pp
water	6:3	0:0	2	store_memory
op	6:16	0:0	2	*
op	6:17	0:0	2	new
op	6:21	0:0	2	=
call	6:23	7:26	2	voidcast
arg	6:32	6:45	3	store_memory*
water	6:32	0:0	4	store_memory
op	6:44	0:0	4	*
arg	6:47	7:26	3	malloc(cb+(sizeof*new)+(sizeofpool->mark))
call	6:47	7:25	4	malloc
arg	6:54	7:25	5	cb+(sizeof*new)+(sizeofpool->mark)
water	6:54	0:0	6	cb
op	6:57	0:0	6	+
water	6:59	0:0	6	(
op	6:60	0:0	6	sizeof
op	6:67	0:0	6	*
op	6:68	0:0	6	new
water	6:71	0:0	6	)
op	6:73	0:0	6	+
water	7:6	0:0	6	(
op	7:7	0:0	6	sizeof
water	7:14	0:0	6	pool
op	7:18	0:0	6	->
water	7:20	0:0	6	mark
water	7:24	0:0	6	)
water	7:27	0:0	2	;
if	8:3	23:3	2	(new != NULL)
cond	8:7	8:14	3	new != NULL
op	8:7	0:0	4	new
op	8:11	0:0	4	!=
water	8:14	0:0	4	NULL
stmts	9:3	23:3	3	
water	9:3	0:0	4	{
if	10:6	11:23	4	(cb > pool -> max)
cond	10:10	10:21	5	cb > pool -> max
water	10:10	0:0	6	cb
op	10:13	0:0	6	>
water	10:15	0:0	6	pool
op	10:19	0:0	6	->
water	10:21	0:0	6	max
stmts	11:9	11:23	5	
water	11:9	0:0	6	pool
op	11:13	0:0	6	->
water	11:15	0:0	6	max
op	11:19	0:0	6	=
water	11:21	0:0	6	cb
water	11:23	0:0	6	;
water	12:6	0:0	4	pool
op	12:10	0:0	4	->
water	12:12	0:0	4	current
op	12:20	0:0	4	+=
water	12:23	0:0	4	cb
water	12:25	0:0	4	;
if	13:6	14:36	4	(pool -> current > pool -> limit)
cond	13:10	13:32	5	pool -> current > pool -> limit
water	13:10	0:0	6	pool
op	13:14	0:0	6	->
water	13:16	0:0	6	current
op	13:24	0:0	6	>
water	13:26	0:0	6	pool
op	13:30	0:0	6	->
water	13:32	0:0	6	limit
stmts	14:9	14:36	5	
water	14:9	0:0	6	pool
op	14:13	0:0	6	->
water	14:15	0:0	6	limit
op	14:21	0:0	6	=
water	14:23	0:0	6	pool
op	14:27	0:0	6	->
water	14:29	0:0	6	current
water	14:36	0:0	6	;
water	15:6	0:0	4	pool
op	15:10	0:0	4	->
water	15:12	0:0	4	total
op	15:18	0:0	4	+=
water	15:21	0:0	4	cb
water	15:23	0:0	4	;
op	16:6	0:0	4	new
op	16:9	0:0	4	->
water	16:11	0:0	4	size
op	16:16	0:0	4	=
water	16:18	0:0	4	cb
water	16:20	0:0	4	;
call	17:6	17:52	4	memcpy
arg	17:13	17:22	5	new->mark
op	17:13	0:0	6	new
op	17:16	0:0	6	->
water	17:18	0:0	6	mark
arg	17:24	17:34	5	pool->mark
water	17:24	0:0	6	pool
op	17:28	0:0	6	->
water	17:30	0:0	6	mark
arg	17:36	17:52	5	sizeofnew->mark
op	17:36	0:0	6	sizeof
op	17:43	0:0	6	new
op	17:46	0:0	6	->
water	17:48	0:0	6	mark
water	17:53	0:0	4	;
call	18:6	18:67	4	memcpy
arg	18:13	18:36	5	(png_byte*)(new+1)+cb
call	18:13	18:30	6	(png_byte*)
arg	18:25	18:30	7	new+1
op	18:25	0:0	8	new
op	18:28	0:0	8	+
water	18:29	0:0	8	1
op	18:32	0:0	6	+
water	18:34	0:0	6	cb
arg	18:38	18:48	5	pool->mark
water	18:38	0:0	6	pool
op	18:42	0:0	6	->
water	18:44	0:0	6	mark
arg	18:50	18:67	5	sizeofpool->mark
op	18:50	0:0	6	sizeof
water	18:57	0:0	6	pool
op	18:61	0:0	6	->
water	18:63	0:0	6	mark
water	18:68	0:0	4	;
op	19:6	0:0	4	new
op	19:9	0:0	4	->
water	19:11	0:0	4	pool
op	19:16	0:0	4	=
water	19:18	0:0	4	pool
water	19:22	0:0	4	;
op	20:6	0:0	4	new
op	20:9	0:0	4	->
water	20:11	0:0	4	next
op	20:16	0:0	4	=
water	20:18	0:0	4	pool
op	20:22	0:0	4	->
water	20:24	0:0	4	list
water	20:28	0:0	4	;
water	21:6	0:0	4	pool
op	21:10	0:0	4	->
water	21:12	0:0	4	list
op	21:17	0:0	4	=
op	21:19	0:0	4	new
water	21:22	0:0	4	;
op	22:6	0:0	4	++
op	22:8	0:0	4	new
water	22:11	0:0	4	;
water	23:3	0:0	4	}
else	24:3	39:3	2
stmts	25:3	39:3	3	
water	25:3	0:0	4	{
call	38:6	38:52	4	store_log
arg	38:16	38:27	5	pool->store
water	38:16	0:0	6	pool
op	38:20	0:0	6	->
water	38:22	0:0	6	store
arg	38:29	38:31	5	pp
water	38:29	0:0	6	pp
arg	38:33	38:48	5	"out of memory"
water	38:33	0:0	6	"out of memory"
arg	38:50	38:52	5	1
water	38:50	0:0	6	1
water	38:53	0:0	4	;
water	39:3	0:0	4	}
return	40:3	40:13	2	new
op	40:10	0:0	3	new

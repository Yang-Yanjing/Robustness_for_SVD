func	1:0	41:0	0	static int	sbit_modify
params	2:11	0:0	1	
param	2:12	2:28	2	png_modifier *	pm
param	2:30	2:50	2	png_modification *	me
param	2:52	2:59	2	int	add
stmnts	0:0	40:14	1	
decl	4:3	4:49	2	png_byte	sbit
op	4:17	0:0	2	=
water	4:19	0:0	2	(
water	4:20	0:0	2	(
water	4:21	0:0	2	sbit_modification
op	4:38	0:0	2	*
water	4:39	0:0	2	)
water	4:40	0:0	2	me
water	4:42	0:0	2	)
op	4:43	0:0	2	->
water	4:45	0:0	2	sbit
if	5:3	32:3	2	(pm -> bit_depth > sbit)
cond	5:7	5:23	3	pm -> bit_depth > sbit
water	5:7	0:0	4	pm
op	5:9	0:0	4	->
water	5:11	0:0	4	bit_depth
op	5:21	0:0	4	>
water	5:23	0:0	4	sbit
stmts	6:3	32:3	3	
water	6:3	0:0	4	{
decl	7:6	7:16	4	int	cb
op	7:13	0:0	4	=
water	7:15	0:0	4	0
switch	8:6	26:6	4	(pm -> colour_type)
cond	8:14	8:18	5	pm -> colour_type
water	8:14	0:0	6	pm
op	8:16	0:0	6	->
water	8:18	0:0	6	colour_type
stmts	9:6	26:6	5	
water	9:6	0:0	6	{
label	10:9	10:15	6	case 0 :
water	11:12	0:0	6	cb
op	11:15	0:0	6	=
water	11:17	0:0	6	1
water	11:18	0:0	6	;
break	12:12	12:17	6	
label	13:9	13:15	6	case 2 :
label	14:9	14:15	6	case 3 :
water	15:12	0:0	6	cb
op	15:15	0:0	6	=
water	15:17	0:0	6	3
water	15:18	0:0	6	;
break	16:12	16:17	6	
label	17:9	17:15	6	case 4 :
water	18:12	0:0	6	cb
op	18:15	0:0	6	=
water	18:17	0:0	6	2
water	18:18	0:0	6	;
break	19:12	19:17	6	
label	20:9	20:15	6	case 6 :
water	21:12	0:0	6	cb
op	21:15	0:0	6	=
water	21:17	0:0	6	4
water	21:18	0:0	6	;
break	22:12	22:17	6	
label	23:9	23:16	6	default :
call	24:12	25:60	6	png_error
arg	24:22	24:36	7	pm->this.pread
water	24:22	0:0	8	pm
op	24:24	0:0	8	->
water	24:26	0:0	8	this
op	24:30	0:0	8	.
water	24:31	0:0	8	pread
arg	25:15	25:60	7	"unexpected colour type in sBIT modification"
water	25:15	0:0	8	"unexpected colour type in sBIT modification"
water	25:61	0:0	6	;
water	26:6	0:0	6	}
call	27:6	27:37	4	png_save_uint_32
arg	27:23	27:33	5	pm->buffer
water	27:23	0:0	6	pm
op	27:25	0:0	6	->
water	27:27	0:0	6	buffer
arg	27:35	27:37	5	cb
water	27:35	0:0	6	cb
water	27:38	0:0	4	;
call	28:6	28:47	4	png_save_uint_32
arg	28:23	28:35	5	pm->buffer+4
water	28:23	0:0	6	pm
op	28:25	0:0	6	->
water	28:27	0:0	6	buffer
op	28:33	0:0	6	+
water	28:34	0:0	6	4
arg	28:37	28:47	5	CHUNK_sBIT
water	28:37	0:0	6	CHUNK_sBIT
water	28:48	0:0	4	;
while	29:6	30:36	4	(cb > 0)
cond	29:13	29:18	5	cb > 0
water	29:13	0:0	6	cb
op	29:16	0:0	6	>
water	29:18	0:0	6	0
stmts	30:9	30:36	5	
water	30:9	0:0	6	(
water	30:10	0:0	6	pm
op	30:12	0:0	6	->
water	30:14	0:0	6	buffer
op	30:20	0:0	6	+
water	30:21	0:0	6	8
water	30:22	0:0	6	)
op	30:23	0:0	6	[
op	30:24	0:0	6	--
water	30:26	0:0	6	cb
op	30:28	0:0	6	]
op	30:30	0:0	6	=
water	30:32	0:0	6	sbit
water	30:36	0:0	6	;
return	31:6	31:14	4	1
water	31:13	0:0	5	1
water	32:3	0:0	4	}
else	33:3	38:3	2
stmts	33:8	38:3	3	
if	33:8	38:3	4	(! add)
cond	33:12	33:13	5	! add
op	33:12	0:0	6	!
water	33:13	0:0	6	add
stmts	34:3	38:3	5	
water	34:3	0:0	6	{
water	36:6	0:0	6	pm
op	36:8	0:0	6	->
water	36:10	0:0	6	buffer_count
op	36:23	0:0	6	=
water	36:25	0:0	6	pm
op	36:27	0:0	6	->
water	36:29	0:0	6	buffer_position
op	36:45	0:0	6	=
water	36:47	0:0	6	0
water	36:48	0:0	6	;
return	37:6	37:14	6	1
water	37:13	0:0	7	1
water	38:3	0:0	6	}
else	39:3	40:14	2
stmts	40:6	40:14	3	
return	40:6	40:14	4	0
water	40:13	0:0	5	0

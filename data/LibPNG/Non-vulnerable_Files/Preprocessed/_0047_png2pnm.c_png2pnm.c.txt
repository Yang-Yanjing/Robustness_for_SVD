func	2:0	209:0	0	BOOL	png2pnm
params	2:13	0:0	1	
param	2:14	2:28	2	FILE *	png_file
param	2:30	2:44	2	FILE *	pnm_file
param	2:46	2:62	2	FILE *	alpha_file
param	3:4	3:21	2	volatile BOOL	raw
param	3:23	3:33	2	BOOL	alpha
stmnts	0:0	208:13	1	
decl	5:2	5:31	2	png_struct	*png_ptr
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:2	6:34	2	png_info	*info_ptr
op	6:28	0:0	2	=
water	6:30	0:0	2	NULL
decl	7:2	7:22	2	png_byte	buf[8]
decl	8:2	8:34	2	png_byte	*png_pixels
op	8:28	0:0	2	=
water	8:30	0:0	2	NULL
decl	9:2	9:37	2	png_byte	**row_pointers
op	9:31	0:0	2	=
water	9:33	0:0	2	NULL
decl	10:2	10:31	2	png_byte	*pix_ptr
op	10:25	0:0	2	=
water	10:27	0:0	2	NULL
decl	11:2	11:25	2	png_uint_32	row_bytes
decl	12:2	12:21	2	png_uint_32	width
decl	13:2	13:22	2	png_uint_32	height
decl	14:2	14:25	2	int	bit_depth
decl	15:2	15:24	2	int	channels
decl	16:2	16:26	2	int	color_type
decl	17:2	17:29	2	int	alpha_present
decl	18:2	18:24	2	int	row
water	18:19	0:0	2	,
decl	18:2	18:24	2	int	col
decl	19:2	19:19	2	int	ret
decl	20:2	20:17	2	int	i
decl	21:2	21:22	2	long	dep_16
water	23:2	0:0	2	ret
op	23:6	0:0	2	=
call	23:8	23:34	2	fread
arg	23:15	23:18	3	buf
water	23:15	0:0	4	buf
arg	23:20	23:21	3	1
water	23:20	0:0	4	1
arg	23:23	23:24	3	8
water	23:23	0:0	4	8
arg	23:26	23:34	3	png_file
water	23:26	0:0	4	png_file
water	23:35	0:0	2	;
if	24:2	25:16	2	(ret != 8)
cond	24:6	24:13	3	ret != 8
water	24:6	0:0	4	ret
op	24:10	0:0	4	!=
water	24:13	0:0	4	8
stmts	25:4	25:16	3	
return	25:4	25:16	4	FALSE
water	25:11	0:0	5	FALSE
water	26:2	0:0	2	ret
op	26:6	0:0	2	=
call	26:8	26:30	2	png_sig_cmp
arg	26:21	26:24	3	buf
water	26:21	0:0	4	buf
arg	26:26	26:27	3	0
water	26:26	0:0	4	0
arg	26:29	26:30	3	8
water	26:29	0:0	4	8
water	26:31	0:0	2	;
if	27:2	28:16	2	(ret)
cond	27:6	27:6	3	ret
water	27:6	0:0	4	ret
stmts	28:4	28:16	3	
return	28:4	28:16	4	FALSE
water	28:11	0:0	5	FALSE
water	30:2	0:0	2	png_ptr
op	30:10	0:0	2	=
call	30:12	31:20	2	png_create_read_struct
arg	30:36	30:60	3	png_get_libpng_ver(NULL)
call	30:36	30:59	4	png_get_libpng_ver
arg	30:55	30:59	5	NULL
water	30:55	0:0	6	NULL
arg	31:4	31:8	3	NULL
water	31:4	0:0	4	NULL
arg	31:10	31:14	3	NULL
water	31:10	0:0	4	NULL
arg	31:16	31:20	3	NULL
water	31:16	0:0	4	NULL
water	31:21	0:0	2	;
if	32:2	33:16	2	(! png_ptr)
cond	32:6	32:7	3	! png_ptr
op	32:6	0:0	4	!
water	32:7	0:0	4	png_ptr
stmts	33:4	33:16	3	
return	33:4	33:16	4	FALSE
water	33:11	0:0	5	FALSE
water	34:2	0:0	2	info_ptr
op	34:11	0:0	2	=
call	34:13	34:44	2	png_create_info_struct
arg	34:37	34:44	3	png_ptr
water	34:37	0:0	4	png_ptr
water	34:45	0:0	2	;
if	35:2	39:2	2	(! info_ptr)
cond	35:6	35:7	3	! info_ptr
op	35:6	0:0	4	!
water	35:7	0:0	4	info_ptr
stmts	36:2	39:2	3	
water	36:2	0:0	4	{
call	37:4	37:49	4	png_destroy_read_struct
arg	37:29	37:37	5	&png_ptr
op	37:29	0:0	6	&
water	37:30	0:0	6	png_ptr
arg	37:39	37:43	5	NULL
water	37:39	0:0	6	NULL
arg	37:45	37:49	5	NULL
water	37:45	0:0	6	NULL
water	37:50	0:0	4	;
return	38:4	38:16	4	FALSE
water	38:11	0:0	5	FALSE
water	39:2	0:0	4	}
if	40:2	44:2	2	(setjmp (png_jmpbuf (png_ptr ) ))
cond	40:6	40:33	3	setjmp (png_jmpbuf (png_ptr ) )
call	40:6	40:33	4	setjmp
arg	40:14	40:33	5	png_jmpbuf(png_ptr)
call	40:14	40:32	6	png_jmpbuf
arg	40:25	40:32	7	png_ptr
water	40:25	0:0	8	png_ptr
stmts	41:2	44:2	3	
water	41:2	0:0	4	{
call	42:4	42:54	4	png_destroy_read_struct
arg	42:29	42:37	5	&png_ptr
op	42:29	0:0	6	&
water	42:30	0:0	6	png_ptr
arg	42:39	42:48	5	&info_ptr
op	42:39	0:0	6	&
water	42:40	0:0	6	info_ptr
arg	42:50	42:54	5	NULL
water	42:50	0:0	6	NULL
water	42:55	0:0	4	;
return	43:4	43:16	4	FALSE
water	43:11	0:0	5	FALSE
water	44:2	0:0	4	}
call	46:2	46:32	2	png_init_io
arg	46:15	46:22	3	png_ptr
water	46:15	0:0	4	png_ptr
arg	46:24	46:32	3	png_file
water	46:24	0:0	4	png_file
water	46:33	0:0	2	;
call	47:2	47:31	2	png_set_sig_bytes
arg	47:21	47:28	3	png_ptr
water	47:21	0:0	4	png_ptr
arg	47:30	47:31	3	8
water	47:30	0:0	4	8
water	47:32	0:0	2	;
call	49:2	49:34	2	png_read_info
arg	49:17	49:24	3	png_ptr
water	49:17	0:0	4	png_ptr
arg	49:26	49:34	3	info_ptr
water	49:26	0:0	4	info_ptr
water	49:35	0:0	2	;
call	51:2	53:20	2	png_get_IHDR
arg	51:16	51:23	3	png_ptr
water	51:16	0:0	4	png_ptr
arg	51:25	51:33	3	info_ptr
water	51:25	0:0	4	info_ptr
arg	52:4	52:10	3	&width
op	52:4	0:0	4	&
water	52:5	0:0	4	width
arg	52:12	52:19	3	&height
op	52:12	0:0	4	&
water	52:13	0:0	4	height
arg	52:21	52:31	3	&bit_depth
op	52:21	0:0	4	&
water	52:22	0:0	4	bit_depth
arg	52:33	52:44	3	&color_type
op	52:33	0:0	4	&
water	52:34	0:0	4	color_type
arg	53:4	53:8	3	NULL
water	53:4	0:0	4	NULL
arg	53:10	53:14	3	NULL
water	53:10	0:0	4	NULL
arg	53:16	53:20	3	NULL
water	53:16	0:0	4	NULL
water	53:21	0:0	2	;
if	56:2	57:28	2	(color_type == PNG_COLOR_TYPE_PALETTE)
cond	56:6	56:20	3	color_type == PNG_COLOR_TYPE_PALETTE
water	56:6	0:0	4	color_type
op	56:17	0:0	4	==
water	56:20	0:0	4	PNG_COLOR_TYPE_PALETTE
stmts	57:4	57:28	3	
call	57:4	57:27	4	png_set_expand
arg	57:20	57:27	5	png_ptr
water	57:20	0:0	6	png_ptr
water	57:28	0:0	4	;
if	59:2	60:28	2	(color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8)
cond	59:6	59:55	3	color_type == PNG_COLOR_TYPE_GRAY && bit_depth < 8
water	59:6	0:0	4	color_type
op	59:17	0:0	4	==
water	59:20	0:0	4	PNG_COLOR_TYPE_GRAY
op	59:40	0:0	4	&&
water	59:43	0:0	4	bit_depth
op	59:53	0:0	4	<
water	59:55	0:0	4	8
stmts	60:4	60:28	3	
call	60:4	60:27	4	png_set_expand
arg	60:20	60:27	5	png_ptr
water	60:20	0:0	6	png_ptr
water	60:28	0:0	4	;
if	62:2	63:28	2	(png_get_valid (png_ptr ,info_ptr ,PNG_INFO_tRNS ))
cond	62:6	62:53	3	png_get_valid (png_ptr ,info_ptr ,PNG_INFO_tRNS )
call	62:6	62:53	4	png_get_valid
arg	62:21	62:28	5	png_ptr
water	62:21	0:0	6	png_ptr
arg	62:30	62:38	5	info_ptr
water	62:30	0:0	6	info_ptr
arg	62:40	62:53	5	PNG_INFO_tRNS
water	62:40	0:0	6	PNG_INFO_tRNS
stmts	63:4	63:28	3	
call	63:4	63:27	4	png_set_expand
arg	63:20	63:27	5	png_ptr
water	63:20	0:0	6	png_ptr
water	63:28	0:0	4	;
if	66:2	67:30	2	(bit_depth == 16)
cond	66:6	66:19	3	bit_depth == 16
water	66:6	0:0	4	bit_depth
op	66:16	0:0	4	==
water	66:19	0:0	4	16
stmts	67:4	67:30	3	
call	67:4	67:29	4	png_set_strip_16
arg	67:22	67:29	5	png_ptr
water	67:22	0:0	6	png_ptr
water	67:30	0:0	4	;
if	69:2	71:33	2	(color_type == PNG_COLOR_TYPE_GRAY || color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
cond	69:6	70:18	3	color_type == PNG_COLOR_TYPE_GRAY || color_type == PNG_COLOR_TYPE_GRAY_ALPHA
water	69:6	0:0	4	color_type
op	69:17	0:0	4	==
water	69:20	0:0	4	PNG_COLOR_TYPE_GRAY
op	69:40	0:0	4	||
water	70:4	0:0	4	color_type
op	70:15	0:0	4	==
water	70:18	0:0	4	PNG_COLOR_TYPE_GRAY_ALPHA
stmts	71:4	71:33	3	
call	71:4	71:32	4	png_set_gray_to_rgb
arg	71:25	71:32	5	png_ptr
water	71:25	0:0	6	png_ptr
water	71:33	0:0	4	;
if	73:2	74:53	2	(png_get_gAMA (png_ptr ,info_ptr ,& file_gamma ))
cond	73:6	73:50	3	png_get_gAMA (png_ptr ,info_ptr ,& file_gamma )
call	73:6	73:50	4	png_get_gAMA
arg	73:20	73:27	5	png_ptr
water	73:20	0:0	6	png_ptr
arg	73:29	73:37	5	info_ptr
water	73:29	0:0	6	info_ptr
arg	73:39	73:50	5	&file_gamma
op	73:39	0:0	6	&
water	73:40	0:0	6	file_gamma
stmts	74:4	74:53	3	
call	74:4	74:52	4	png_set_gamma
arg	74:19	74:26	5	png_ptr
water	74:19	0:0	6	png_ptr
arg	74:28	74:40	5	(double)2.2
water	74:28	0:0	6	(
water	74:29	0:0	6	double
water	74:35	0:0	6	)
water	74:37	0:0	6	2
op	74:38	0:0	6	.
water	74:39	0:0	6	2
arg	74:42	74:52	5	file_gamma
water	74:42	0:0	6	file_gamma
water	74:53	0:0	4	;
call	78:2	78:41	2	png_read_update_info
arg	78:24	78:31	3	png_ptr
water	78:24	0:0	4	png_ptr
arg	78:33	78:41	3	info_ptr
water	78:33	0:0	4	info_ptr
water	78:42	0:0	2	;
call	80:2	81:20	2	png_get_IHDR
arg	80:16	80:23	3	png_ptr
water	80:16	0:0	4	png_ptr
arg	80:25	80:33	3	info_ptr
water	80:25	0:0	4	info_ptr
arg	80:35	80:41	3	&width
op	80:35	0:0	4	&
water	80:36	0:0	4	width
arg	80:43	80:50	3	&height
op	80:43	0:0	4	&
water	80:44	0:0	4	height
arg	80:52	80:62	3	&bit_depth
op	80:52	0:0	4	&
water	80:53	0:0	4	bit_depth
arg	80:64	80:75	3	&color_type
op	80:64	0:0	4	&
water	80:65	0:0	4	color_type
arg	81:4	81:8	3	NULL
water	81:4	0:0	4	NULL
arg	81:10	81:14	3	NULL
water	81:10	0:0	4	NULL
arg	81:16	81:20	3	NULL
water	81:16	0:0	4	NULL
water	81:21	0:0	2	;
if	83:2	89:2	2	(bit_depth == 16)
cond	83:6	83:19	3	bit_depth == 16
water	83:6	0:0	4	bit_depth
op	83:16	0:0	4	==
water	83:19	0:0	4	16
stmts	84:2	89:2	3	
water	84:2	0:0	4	{
water	85:4	0:0	4	raw
op	85:8	0:0	4	=
water	85:10	0:0	4	FALSE
water	85:15	0:0	4	;
water	87:4	0:0	4	pnm_file
op	87:12	0:0	4	->
water	87:14	0:0	4	flags
op	87:20	0:0	4	&=
op	87:23	0:0	4	~
water	87:24	0:0	4	(
water	87:25	0:0	4	(
water	87:26	0:0	4	unsigned
water	87:34	0:0	4	)
water	87:36	0:0	4	_F_BIN
water	87:42	0:0	4	)
water	87:43	0:0	4	;
water	89:2	0:0	4	}
if	91:2	92:16	2	(color_type == PNG_COLOR_TYPE_GRAY)
cond	91:6	91:20	3	color_type == PNG_COLOR_TYPE_GRAY
water	91:6	0:0	4	color_type
op	91:17	0:0	4	==
water	91:20	0:0	4	PNG_COLOR_TYPE_GRAY
stmts	92:4	92:16	3	
water	92:4	0:0	4	channels
op	92:13	0:0	4	=
water	92:15	0:0	4	1
water	92:16	0:0	4	;
else	93:2	94:16	2
stmts	93:7	94:16	3	
if	93:7	94:16	4	(color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
cond	93:11	93:25	5	color_type == PNG_COLOR_TYPE_GRAY_ALPHA
water	93:11	0:0	6	color_type
op	93:22	0:0	6	==
water	93:25	0:0	6	PNG_COLOR_TYPE_GRAY_ALPHA
stmts	94:4	94:16	5	
water	94:4	0:0	6	channels
op	94:13	0:0	6	=
water	94:15	0:0	6	2
water	94:16	0:0	6	;
else	95:2	96:16	2
stmts	95:7	96:16	3	
if	95:7	96:16	4	(color_type == PNG_COLOR_TYPE_RGB)
cond	95:11	95:25	5	color_type == PNG_COLOR_TYPE_RGB
water	95:11	0:0	6	color_type
op	95:22	0:0	6	==
water	95:25	0:0	6	PNG_COLOR_TYPE_RGB
stmts	96:4	96:16	5	
water	96:4	0:0	6	channels
op	96:13	0:0	6	=
water	96:15	0:0	6	3
water	96:16	0:0	6	;
else	97:2	98:16	2
stmts	97:7	98:16	3	
if	97:7	98:16	4	(color_type == PNG_COLOR_TYPE_RGB_ALPHA)
cond	97:11	97:25	5	color_type == PNG_COLOR_TYPE_RGB_ALPHA
water	97:11	0:0	6	color_type
op	97:22	0:0	6	==
water	97:25	0:0	6	PNG_COLOR_TYPE_RGB_ALPHA
stmts	98:4	98:16	5	
water	98:4	0:0	6	channels
op	98:13	0:0	6	=
water	98:15	0:0	6	4
water	98:16	0:0	6	;
else	99:2	100:16	2
stmts	100:4	100:16	3	
water	100:4	0:0	4	channels
op	100:13	0:0	4	=
water	100:15	0:0	4	0
water	100:16	0:0	4	;
water	101:2	0:0	2	alpha_present
op	101:16	0:0	2	=
water	101:18	0:0	2	(
water	101:19	0:0	2	channels
op	101:28	0:0	2	-
water	101:30	0:0	2	1
water	101:31	0:0	2	)
op	101:33	0:0	2	%
water	101:35	0:0	2	2
water	101:36	0:0	2	;
if	103:2	108:2	2	(alpha && ! alpha_present)
cond	103:6	103:16	3	alpha && ! alpha_present
water	103:6	0:0	4	alpha
op	103:12	0:0	4	&&
op	103:15	0:0	4	!
water	103:16	0:0	4	alpha_present
stmts	104:2	108:2	3	
water	104:2	0:0	4	{
call	105:4	105:32	4	fprintf
arg	105:13	105:19	5	stderr
water	105:13	0:0	6	stderr
arg	105:21	105:32	5	"PNG2PNM\n"
water	105:21	0:0	6	"PNG2PNM\n"
water	105:33	0:0	4	;
call	106:4	106:71	4	fprintf
arg	106:13	106:19	5	stderr
water	106:13	0:0	6	stderr
arg	106:21	106:71	5	"Error:  PNG-file doesn't contain alpha channel\n"
water	106:21	0:0	6	"Error:  PNG-file doesn't contain alpha channel\n"
water	106:72	0:0	4	;
call	107:4	107:11	4	exit
arg	107:10	107:11	5	1
water	107:10	0:0	6	1
water	107:12	0:0	4	;
water	108:2	0:0	4	}
water	110:2	0:0	2	row_bytes
op	110:12	0:0	2	=
call	110:14	110:49	2	png_get_rowbytes
arg	110:32	110:39	3	png_ptr
water	110:32	0:0	4	png_ptr
arg	110:41	110:49	3	info_ptr
water	110:41	0:0	4	info_ptr
water	110:50	0:0	2	;
if	111:2	115:2	2	(( png_pixels = ( png_byte * )malloc (row_bytes * height * sizeof ( png_byte ) ) ) == NULL)
cond	111:6	112:57	3	( png_pixels = ( png_byte * )malloc (row_bytes * height * sizeof ( png_byte ) ) ) == NULL
water	111:6	0:0	4	(
water	111:7	0:0	4	png_pixels
op	111:18	0:0	4	=
water	111:20	0:0	4	(
water	111:21	0:0	4	png_byte
op	111:30	0:0	4	*
water	111:31	0:0	4	)
call	112:5	112:51	4	malloc
arg	112:13	112:51	5	row_bytes*height*sizeof(png_byte)
water	112:13	0:0	6	row_bytes
op	112:23	0:0	6	*
water	112:25	0:0	6	height
op	112:32	0:0	6	*
op	112:34	0:0	6	sizeof
water	112:41	0:0	6	(
water	112:42	0:0	6	png_byte
water	112:50	0:0	6	)
water	112:52	0:0	4	)
op	112:54	0:0	4	==
water	112:57	0:0	4	NULL
stmts	112:63	115:2	3	
water	112:63	0:0	4	{
call	113:4	113:54	4	png_destroy_read_struct
arg	113:29	113:37	5	&png_ptr
op	113:29	0:0	6	&
water	113:30	0:0	6	png_ptr
arg	113:39	113:48	5	&info_ptr
op	113:39	0:0	6	&
water	113:40	0:0	6	info_ptr
arg	113:50	113:54	5	NULL
water	113:50	0:0	6	NULL
water	113:55	0:0	4	;
return	114:4	114:16	4	FALSE
water	114:11	0:0	5	FALSE
water	115:2	0:0	4	}
if	116:2	123:2	2	(( row_pointers = ( png_byte * * )malloc (height * sizeof ( png_bytep ) ) ) == NULL)
cond	116:6	117:46	3	( row_pointers = ( png_byte * * )malloc (height * sizeof ( png_bytep ) ) ) == NULL
water	116:6	0:0	4	(
water	116:7	0:0	4	row_pointers
op	116:20	0:0	4	=
water	116:22	0:0	4	(
water	116:23	0:0	4	png_byte
op	116:32	0:0	4	*
op	116:33	0:0	4	*
water	116:34	0:0	4	)
call	117:5	117:40	4	malloc
arg	117:13	117:40	5	height*sizeof(png_bytep)
water	117:13	0:0	6	height
op	117:20	0:0	6	*
op	117:22	0:0	6	sizeof
water	117:29	0:0	6	(
water	117:30	0:0	6	png_bytep
water	117:39	0:0	6	)
water	117:41	0:0	4	)
op	117:43	0:0	4	==
water	117:46	0:0	4	NULL
stmts	118:2	123:2	3	
water	118:2	0:0	4	{
call	119:4	119:54	4	png_destroy_read_struct
arg	119:29	119:37	5	&png_ptr
op	119:29	0:0	6	&
water	119:30	0:0	6	png_ptr
arg	119:39	119:48	5	&info_ptr
op	119:39	0:0	6	&
water	119:40	0:0	6	info_ptr
arg	119:50	119:54	5	NULL
water	119:50	0:0	6	NULL
water	119:55	0:0	4	;
call	120:4	120:20	4	free
arg	120:10	120:20	5	png_pixels
water	120:10	0:0	6	png_pixels
water	120:21	0:0	4	;
water	121:4	0:0	4	png_pixels
op	121:15	0:0	4	=
water	121:17	0:0	4	NULL
water	121:21	0:0	4	;
return	122:4	122:16	4	FALSE
water	122:11	0:0	5	FALSE
water	123:2	0:0	4	}
for	125:2	126:48	2	(i = 0 ;i < ( ( int ) height );i ++)
forinit	125:7	125:12	3	i = 0 ;
water	125:7	0:0	4	i
op	125:9	0:0	4	=
water	125:11	0:0	4	0
water	125:12	0:0	4	;
cond	125:14	125:31	3	i < ( ( int ) height )
water	125:14	0:0	4	i
op	125:16	0:0	4	<
water	125:18	0:0	4	(
water	125:19	0:0	4	(
water	125:20	0:0	4	int
water	125:23	0:0	4	)
water	125:25	0:0	4	height
water	125:31	0:0	4	)
forexpr	125:34	125:35	3	i ++
water	125:34	0:0	4	i
op	125:35	0:0	4	++
stmts	126:4	126:48	3	
water	126:4	0:0	4	row_pointers
op	126:16	0:0	4	[
water	126:17	0:0	4	i
op	126:18	0:0	4	]
op	126:20	0:0	4	=
water	126:22	0:0	4	png_pixels
op	126:33	0:0	4	+
water	126:35	0:0	4	i
op	126:37	0:0	4	*
water	126:39	0:0	4	row_bytes
water	126:48	0:0	4	;
call	128:2	128:39	2	png_read_image
arg	128:18	128:25	3	png_ptr
water	128:18	0:0	4	png_ptr
arg	128:27	128:39	3	row_pointers
water	128:27	0:0	4	row_pointers
water	128:40	0:0	2	;
call	130:2	130:33	2	png_read_end
arg	130:16	130:23	3	png_ptr
water	130:16	0:0	4	png_ptr
arg	130:25	130:33	3	info_ptr
water	130:25	0:0	4	info_ptr
water	130:34	0:0	2	;
call	132:2	132:65	2	png_destroy_read_struct
arg	132:27	132:35	3	&png_ptr
op	132:27	0:0	4	&
water	132:28	0:0	4	png_ptr
arg	132:37	132:46	3	&info_ptr
op	132:37	0:0	4	&
water	132:38	0:0	4	info_ptr
arg	132:48	132:65	3	(png_infopp)NULL
water	132:48	0:0	4	(
water	132:49	0:0	4	png_infopp
water	132:59	0:0	4	)
water	132:61	0:0	4	NULL
water	132:66	0:0	2	;
if	134:2	140:2	2	(( color_type == PNG_COLOR_TYPE_GRAY ) || ( color_type == PNG_COLOR_TYPE_GRAY_ALPHA ))
cond	134:6	135:46	3	( color_type == PNG_COLOR_TYPE_GRAY ) || ( color_type == PNG_COLOR_TYPE_GRAY_ALPHA )
water	134:6	0:0	4	(
water	134:7	0:0	4	color_type
op	134:18	0:0	4	==
water	134:21	0:0	4	PNG_COLOR_TYPE_GRAY
water	134:40	0:0	4	)
op	134:42	0:0	4	||
water	135:6	0:0	4	(
water	135:7	0:0	4	color_type
op	135:18	0:0	4	==
water	135:21	0:0	4	PNG_COLOR_TYPE_GRAY_ALPHA
water	135:46	0:0	4	)
stmts	136:2	140:2	3	
water	136:2	0:0	4	{
call	137:4	137:50	4	fprintf
arg	137:13	137:21	5	pnm_file
water	137:13	0:0	6	pnm_file
arg	137:23	137:29	5	"%s\n"
water	137:23	0:0	6	"%s\n"
arg	137:31	137:50	5	(raw)?"P5":"P2"
water	137:31	0:0	6	(
water	137:32	0:0	6	raw
water	137:35	0:0	6	)
water	137:37	0:0	6	?
water	137:39	0:0	6	"P5"
water	137:44	0:0	6	:
water	137:46	0:0	6	"P2"
water	137:51	0:0	4	;
call	138:4	138:59	4	fprintf
arg	138:13	138:21	5	pnm_file
water	138:13	0:0	6	pnm_file
arg	138:23	138:32	5	"%d %d\n"
water	138:23	0:0	6	"%d %d\n"
arg	138:34	138:45	5	(int)width
water	138:34	0:0	6	(
water	138:35	0:0	6	int
water	138:38	0:0	6	)
water	138:40	0:0	6	width
arg	138:47	138:59	5	(int)height
water	138:47	0:0	6	(
water	138:48	0:0	6	int
water	138:51	0:0	6	)
water	138:53	0:0	6	height
water	138:60	0:0	4	;
call	139:4	139:62	4	fprintf
arg	139:13	139:21	5	pnm_file
water	139:13	0:0	6	pnm_file
arg	139:23	139:30	5	"%ld\n"
water	139:23	0:0	6	"%ld\n"
arg	139:32	139:62	5	((1L<<(int)bit_depth)-1L)
water	139:32	0:0	6	(
water	139:33	0:0	6	(
water	139:34	0:0	6	1
water	139:35	0:0	6	L
op	139:37	0:0	6	<<
water	139:40	0:0	6	(
water	139:41	0:0	6	int
water	139:44	0:0	6	)
water	139:46	0:0	6	bit_depth
water	139:55	0:0	6	)
op	139:57	0:0	6	-
water	139:59	0:0	6	1
water	139:60	0:0	6	L
water	139:61	0:0	6	)
water	139:63	0:0	4	;
water	140:2	0:0	4	}
else	141:2	147:2	2
stmts	141:7	147:2	3	
if	141:7	147:2	4	(( color_type == PNG_COLOR_TYPE_RGB ) || ( color_type == PNG_COLOR_TYPE_RGB_ALPHA ))
cond	141:11	142:50	5	( color_type == PNG_COLOR_TYPE_RGB ) || ( color_type == PNG_COLOR_TYPE_RGB_ALPHA )
water	141:11	0:0	6	(
water	141:12	0:0	6	color_type
op	141:23	0:0	6	==
water	141:26	0:0	6	PNG_COLOR_TYPE_RGB
water	141:44	0:0	6	)
op	141:46	0:0	6	||
water	142:11	0:0	6	(
water	142:12	0:0	6	color_type
op	142:23	0:0	6	==
water	142:26	0:0	6	PNG_COLOR_TYPE_RGB_ALPHA
water	142:50	0:0	6	)
stmts	143:2	147:2	5	
water	143:2	0:0	6	{
call	144:4	144:50	6	fprintf
arg	144:13	144:21	7	pnm_file
water	144:13	0:0	8	pnm_file
arg	144:23	144:29	7	"%s\n"
water	144:23	0:0	8	"%s\n"
arg	144:31	144:50	7	(raw)?"P6":"P3"
water	144:31	0:0	8	(
water	144:32	0:0	8	raw
water	144:35	0:0	8	)
water	144:37	0:0	8	?
water	144:39	0:0	8	"P6"
water	144:44	0:0	8	:
water	144:46	0:0	8	"P3"
water	144:51	0:0	6	;
call	145:4	145:59	6	fprintf
arg	145:13	145:21	7	pnm_file
water	145:13	0:0	8	pnm_file
arg	145:23	145:32	7	"%d %d\n"
water	145:23	0:0	8	"%d %d\n"
arg	145:34	145:45	7	(int)width
water	145:34	0:0	8	(
water	145:35	0:0	8	int
water	145:38	0:0	8	)
water	145:40	0:0	8	width
arg	145:47	145:59	7	(int)height
water	145:47	0:0	8	(
water	145:48	0:0	8	int
water	145:51	0:0	8	)
water	145:53	0:0	8	height
water	145:60	0:0	6	;
call	146:4	146:62	6	fprintf
arg	146:13	146:21	7	pnm_file
water	146:13	0:0	8	pnm_file
arg	146:23	146:30	7	"%ld\n"
water	146:23	0:0	8	"%ld\n"
arg	146:32	146:62	7	((1L<<(int)bit_depth)-1L)
water	146:32	0:0	8	(
water	146:33	0:0	8	(
water	146:34	0:0	8	1
water	146:35	0:0	8	L
op	146:37	0:0	8	<<
water	146:40	0:0	8	(
water	146:41	0:0	8	int
water	146:44	0:0	8	)
water	146:46	0:0	8	bit_depth
water	146:55	0:0	8	)
op	146:57	0:0	8	-
water	146:59	0:0	8	1
water	146:60	0:0	8	L
water	146:61	0:0	8	)
water	146:63	0:0	6	;
water	147:2	0:0	6	}
if	149:2	156:2	2	(( alpha ) && ( ( color_type == PNG_COLOR_TYPE_GRAY_ALPHA ) || ( color_type == PNG_COLOR_TYPE_RGB_ALPHA ) ))
cond	149:6	151:47	3	( alpha ) && ( ( color_type == PNG_COLOR_TYPE_GRAY_ALPHA ) || ( color_type == PNG_COLOR_TYPE_RGB_ALPHA ) )
water	149:6	0:0	4	(
water	149:7	0:0	4	alpha
water	149:12	0:0	4	)
op	149:14	0:0	4	&&
water	150:6	0:0	4	(
water	150:7	0:0	4	(
water	150:8	0:0	4	color_type
op	150:19	0:0	4	==
water	150:22	0:0	4	PNG_COLOR_TYPE_GRAY_ALPHA
water	150:47	0:0	4	)
op	150:49	0:0	4	||
water	151:7	0:0	4	(
water	151:8	0:0	4	color_type
op	151:19	0:0	4	==
water	151:22	0:0	4	PNG_COLOR_TYPE_RGB_ALPHA
water	151:46	0:0	4	)
water	151:47	0:0	4	)
stmts	152:2	156:2	3	
water	152:2	0:0	4	{
call	153:4	153:52	4	fprintf
arg	153:13	153:23	5	alpha_file
water	153:13	0:0	6	alpha_file
arg	153:25	153:31	5	"%s\n"
water	153:25	0:0	6	"%s\n"
arg	153:33	153:52	5	(raw)?"P5":"P2"
water	153:33	0:0	6	(
water	153:34	0:0	6	raw
water	153:37	0:0	6	)
water	153:39	0:0	6	?
water	153:41	0:0	6	"P5"
water	153:46	0:0	6	:
water	153:48	0:0	6	"P2"
water	153:53	0:0	4	;
call	154:4	154:61	4	fprintf
arg	154:13	154:23	5	alpha_file
water	154:13	0:0	6	alpha_file
arg	154:25	154:34	5	"%d %d\n"
water	154:25	0:0	6	"%d %d\n"
arg	154:36	154:47	5	(int)width
water	154:36	0:0	6	(
water	154:37	0:0	6	int
water	154:40	0:0	6	)
water	154:42	0:0	6	width
arg	154:49	154:61	5	(int)height
water	154:49	0:0	6	(
water	154:50	0:0	6	int
water	154:53	0:0	6	)
water	154:55	0:0	6	height
water	154:62	0:0	4	;
call	155:4	155:64	4	fprintf
arg	155:13	155:23	5	alpha_file
water	155:13	0:0	6	alpha_file
arg	155:25	155:32	5	"%ld\n"
water	155:25	0:0	6	"%ld\n"
arg	155:34	155:64	5	((1L<<(int)bit_depth)-1L)
water	155:34	0:0	6	(
water	155:35	0:0	6	(
water	155:36	0:0	6	1
water	155:37	0:0	6	L
op	155:39	0:0	6	<<
water	155:42	0:0	6	(
water	155:43	0:0	6	int
water	155:46	0:0	6	)
water	155:48	0:0	6	bit_depth
water	155:57	0:0	6	)
op	155:59	0:0	6	-
water	155:61	0:0	6	1
water	155:62	0:0	6	L
water	155:63	0:0	6	)
water	155:65	0:0	4	;
water	156:2	0:0	4	}
water	158:2	0:0	2	pix_ptr
op	158:10	0:0	2	=
water	158:12	0:0	2	png_pixels
water	158:22	0:0	2	;
for	159:2	203:2	2	(row = 0 ;row < ( int ) height;row ++)
forinit	159:7	159:14	3	row = 0 ;
water	159:7	0:0	4	row
op	159:11	0:0	4	=
water	159:13	0:0	4	0
water	159:14	0:0	4	;
cond	159:16	159:28	3	row < ( int ) height
water	159:16	0:0	4	row
op	159:20	0:0	4	<
water	159:22	0:0	4	(
water	159:23	0:0	4	int
water	159:26	0:0	4	)
water	159:28	0:0	4	height
forexpr	159:36	159:39	3	row ++
water	159:36	0:0	4	row
op	159:39	0:0	4	++
stmts	160:2	203:2	3	
water	160:2	0:0	4	{
for	161:4	199:4	4	(col = 0 ;col < ( int ) width;col ++)
forinit	161:9	161:16	5	col = 0 ;
water	161:9	0:0	6	col
op	161:13	0:0	6	=
water	161:15	0:0	6	0
water	161:16	0:0	6	;
cond	161:18	161:30	5	col < ( int ) width
water	161:18	0:0	6	col
op	161:22	0:0	6	<
water	161:24	0:0	6	(
water	161:25	0:0	6	int
water	161:28	0:0	6	)
water	161:30	0:0	6	width
forexpr	161:37	161:40	5	col ++
water	161:37	0:0	6	col
op	161:40	0:0	6	++
stmts	162:4	199:4	5	
water	162:4	0:0	6	{
for	163:6	174:6	6	(i = 0 ;i < ( channels - alpha_present );i ++)
forinit	163:11	163:16	7	i = 0 ;
water	163:11	0:0	8	i
op	163:13	0:0	8	=
water	163:15	0:0	8	0
water	163:16	0:0	8	;
cond	163:18	163:47	7	i < ( channels - alpha_present )
water	163:18	0:0	8	i
op	163:20	0:0	8	<
water	163:22	0:0	8	(
water	163:23	0:0	8	channels
op	163:32	0:0	8	-
water	163:34	0:0	8	alpha_present
water	163:47	0:0	8	)
forexpr	163:50	163:51	7	i ++
water	163:50	0:0	8	i
op	163:51	0:0	8	++
stmts	164:6	174:6	7	
water	164:6	0:0	8	{
if	165:8	166:45	8	(raw)
cond	165:12	165:12	9	raw
water	165:12	0:0	10	raw
stmts	166:10	166:45	9	
call	166:10	166:44	10	fputc
arg	166:17	166:34	11	(int)*pix_ptr++
water	166:17	0:0	12	(
water	166:18	0:0	12	int
water	166:21	0:0	12	)
op	166:23	0:0	12	*
water	166:24	0:0	12	pix_ptr
op	166:31	0:0	12	++
arg	166:36	166:44	11	pnm_file
water	166:36	0:0	12	pnm_file
water	166:45	0:0	10	;
else	167:8	171:10	8
stmts	168:10	171:10	9	
if	168:10	171:10	10	(bit_depth == 16)
cond	168:14	168:27	11	bit_depth == 16
water	168:14	0:0	12	bit_depth
op	168:24	0:0	12	==
water	168:27	0:0	12	16
stmts	168:30	171:10	11	
water	168:30	0:0	12	{
water	169:12	0:0	12	dep_16
op	169:19	0:0	12	=
water	169:21	0:0	12	(
water	169:22	0:0	12	long
water	169:26	0:0	12	)
op	169:28	0:0	12	*
water	169:29	0:0	12	pix_ptr
op	169:36	0:0	12	++
water	169:38	0:0	12	;
call	170:12	170:74	12	fprintf
arg	170:21	170:29	13	pnm_file
water	170:21	0:0	14	pnm_file
arg	170:31	170:37	13	"%ld "
water	170:31	0:0	14	"%ld "
arg	170:39	170:74	13	(dep_16<<8)+((long)*pix_ptr++)
water	170:39	0:0	14	(
water	170:40	0:0	14	dep_16
op	170:47	0:0	14	<<
water	170:50	0:0	14	8
water	170:51	0:0	14	)
op	170:53	0:0	14	+
water	170:55	0:0	14	(
water	170:56	0:0	14	(
water	170:57	0:0	14	long
water	170:61	0:0	14	)
op	170:63	0:0	14	*
water	170:64	0:0	14	pix_ptr
op	170:71	0:0	14	++
water	170:73	0:0	14	)
water	170:75	0:0	12	;
water	171:10	0:0	12	}
else	172:10	173:57	8
stmts	173:12	173:57	9	
call	173:12	173:56	10	fprintf
arg	173:21	173:29	11	pnm_file
water	173:21	0:0	12	pnm_file
arg	173:31	173:37	11	"%ld "
water	173:31	0:0	12	"%ld "
arg	173:39	173:56	11	(long)*pix_ptr++
water	173:39	0:0	12	(
water	173:40	0:0	12	long
water	173:44	0:0	12	)
op	173:46	0:0	12	*
water	173:47	0:0	12	pix_ptr
op	173:54	0:0	12	++
water	173:57	0:0	10	;
water	174:6	0:0	8	}
if	175:6	195:6	6	(alpha_present)
cond	175:10	175:10	7	alpha_present
water	175:10	0:0	8	alpha_present
stmts	176:6	195:6	7	
water	176:6	0:0	8	{
if	177:8	182:8	8	(! alpha)
cond	177:12	177:13	9	! alpha
op	177:12	0:0	10	!
water	177:13	0:0	10	alpha
stmts	178:8	182:8	9	
water	178:8	0:0	10	{
water	179:10	0:0	10	pix_ptr
op	179:17	0:0	10	++
water	179:19	0:0	10	;
if	180:10	181:21	10	(bit_depth == 16)
cond	180:14	180:27	11	bit_depth == 16
water	180:14	0:0	12	bit_depth
op	180:24	0:0	12	==
water	180:27	0:0	12	16
stmts	181:12	181:21	11	
water	181:12	0:0	12	pix_ptr
op	181:19	0:0	12	++
water	181:21	0:0	12	;
water	182:8	0:0	10	}
else	183:8	194:8	8
stmts	184:8	194:8	9	
water	184:8	0:0	10	{
if	185:10	186:49	10	(raw)
cond	185:14	185:14	11	raw
water	185:14	0:0	12	raw
stmts	186:12	186:49	11	
call	186:12	186:48	12	fputc
arg	186:19	186:36	13	(int)*pix_ptr++
water	186:19	0:0	14	(
water	186:20	0:0	14	int
water	186:23	0:0	14	)
op	186:25	0:0	14	*
water	186:26	0:0	14	pix_ptr
op	186:33	0:0	14	++
arg	186:38	186:48	13	alpha_file
water	186:38	0:0	14	alpha_file
water	186:49	0:0	12	;
else	187:10	191:12	10
stmts	188:12	191:12	11	
if	188:12	191:12	12	(bit_depth == 16)
cond	188:16	188:29	13	bit_depth == 16
water	188:16	0:0	14	bit_depth
op	188:26	0:0	14	==
water	188:29	0:0	14	16
stmts	188:32	191:12	13	
water	188:32	0:0	14	{
water	189:14	0:0	14	dep_16
op	189:21	0:0	14	=
water	189:23	0:0	14	(
water	189:24	0:0	14	long
water	189:28	0:0	14	)
op	189:30	0:0	14	*
water	189:31	0:0	14	pix_ptr
op	189:38	0:0	14	++
water	189:40	0:0	14	;
call	190:14	190:76	14	fprintf
arg	190:23	190:33	15	alpha_file
water	190:23	0:0	16	alpha_file
arg	190:35	190:41	15	"%ld "
water	190:35	0:0	16	"%ld "
arg	190:43	190:76	15	(dep_16<<8)+(long)*pix_ptr++
water	190:43	0:0	16	(
water	190:44	0:0	16	dep_16
op	190:51	0:0	16	<<
water	190:54	0:0	16	8
water	190:55	0:0	16	)
op	190:57	0:0	16	+
water	190:59	0:0	16	(
water	190:60	0:0	16	long
water	190:64	0:0	16	)
op	190:66	0:0	16	*
water	190:67	0:0	16	pix_ptr
op	190:74	0:0	16	++
water	190:77	0:0	14	;
water	191:12	0:0	14	}
else	192:12	193:61	10
stmts	193:14	193:61	11	
call	193:14	193:60	12	fprintf
arg	193:23	193:33	13	alpha_file
water	193:23	0:0	14	alpha_file
arg	193:35	193:41	13	"%ld "
water	193:35	0:0	14	"%ld "
arg	193:43	193:60	13	(long)*pix_ptr++
water	193:43	0:0	14	(
water	193:44	0:0	14	long
water	193:48	0:0	14	)
op	193:50	0:0	14	*
water	193:51	0:0	14	pix_ptr
op	193:58	0:0	14	++
water	193:61	0:0	12	;
water	194:8	0:0	10	}
water	195:6	0:0	8	}
if	196:6	198:34	6	(! raw)
cond	196:10	196:11	7	! raw
op	196:10	0:0	8	!
water	196:11	0:0	8	raw
stmts	197:8	198:34	7	
if	197:8	198:34	8	(col % 4 == 3)
cond	197:12	197:23	9	col % 4 == 3
water	197:12	0:0	10	col
op	197:16	0:0	10	%
water	197:18	0:0	10	4
op	197:20	0:0	10	==
water	197:23	0:0	10	3
stmts	198:10	198:34	9	
call	198:10	198:33	10	fprintf
arg	198:19	198:27	11	pnm_file
water	198:19	0:0	12	pnm_file
arg	198:29	198:33	11	"\n"
water	198:29	0:0	12	"\n"
water	198:34	0:0	10	;
water	199:4	0:0	6	}
if	200:4	202:32	4	(! raw)
cond	200:8	200:9	5	! raw
op	200:8	0:0	6	!
water	200:9	0:0	6	raw
stmts	201:6	202:32	5	
if	201:6	202:32	6	(col % 4 != 0)
cond	201:10	201:21	7	col % 4 != 0
water	201:10	0:0	8	col
op	201:14	0:0	8	%
water	201:16	0:0	8	4
op	201:18	0:0	8	!=
water	201:21	0:0	8	0
stmts	202:8	202:32	7	
call	202:8	202:31	8	fprintf
arg	202:17	202:25	9	pnm_file
water	202:17	0:0	10	pnm_file
arg	202:27	202:31	9	"\n"
water	202:27	0:0	10	"\n"
water	202:32	0:0	8	;
water	203:2	0:0	4	}
if	204:2	205:23	2	(row_pointers != ( unsigned char * * ) NULL)
cond	204:6	204:40	3	row_pointers != ( unsigned char * * ) NULL
water	204:6	0:0	4	row_pointers
op	204:19	0:0	4	!=
water	204:22	0:0	4	(
water	204:23	0:0	4	unsigned
water	204:32	0:0	4	char
op	204:36	0:0	4	*
op	204:37	0:0	4	*
water	204:38	0:0	4	)
water	204:40	0:0	4	NULL
stmts	205:4	205:23	3	
call	205:4	205:22	4	free
arg	205:10	205:22	5	row_pointers
water	205:10	0:0	6	row_pointers
water	205:23	0:0	4	;
if	206:2	207:21	2	(png_pixels != ( unsigned char * ) NULL)
cond	206:6	206:37	3	png_pixels != ( unsigned char * ) NULL
water	206:6	0:0	4	png_pixels
op	206:17	0:0	4	!=
water	206:20	0:0	4	(
water	206:21	0:0	4	unsigned
water	206:30	0:0	4	char
op	206:34	0:0	4	*
water	206:35	0:0	4	)
water	206:37	0:0	4	NULL
stmts	207:4	207:21	3	
call	207:4	207:20	4	free
arg	207:10	207:20	5	png_pixels
water	207:10	0:0	6	png_pixels
water	207:21	0:0	4	;
return	208:2	208:13	2	TRUE
water	208:9	0:0	3	TRUE

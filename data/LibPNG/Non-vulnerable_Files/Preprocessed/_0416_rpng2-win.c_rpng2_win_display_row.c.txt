func	2:0	83:0	0	static void	rpng2_win_display_row
params	2:33	0:0	1	
param	2:34	2:41	2	ulg	row
stmnts	0:0	82:4	1	
decl	4:4	4:36	2	uch	bg_red
op	4:17	0:0	2	=
water	4:19	0:0	2	rpng2_info
op	4:29	0:0	2	.
water	4:30	0:0	2	bg_red
decl	5:4	5:38	2	uch	bg_green
op	5:17	0:0	2	=
water	5:19	0:0	2	rpng2_info
op	5:29	0:0	2	.
water	5:30	0:0	2	bg_green
decl	6:4	6:37	2	uch	bg_blue
op	6:17	0:0	2	=
water	6:19	0:0	2	rpng2_info
op	6:29	0:0	2	.
water	6:30	0:0	2	bg_blue
decl	7:4	7:31	2	uch	*src
water	7:12	0:0	2	,
decl	7:4	7:31	2	uch	*src2
op	7:19	0:0	2	=
water	7:20	0:0	2	NULL
water	7:24	0:0	2	,
decl	7:4	7:31	2	uch	*dest
decl	8:4	8:18	2	uch	r
water	8:9	0:0	2	,
decl	8:4	8:18	2	uch	g
water	8:12	0:0	2	,
decl	8:4	8:18	2	uch	b
water	8:15	0:0	2	,
decl	8:4	8:18	2	uch	a
decl	9:4	9:9	2	ulg	i
water	10:4	0:0	2	static
water	10:11	0:0	2	int
water	10:15	0:0	2	rows
op	10:19	0:0	2	=
water	10:20	0:0	2	0
water	10:21	0:0	2	;
water	11:4	0:0	2	static
water	11:11	0:0	2	ulg
water	11:15	0:0	2	firstrow
water	11:23	0:0	2	;
call	17:4	17:57	2	Trace
arg	17:10	17:57	3	(stderr,"beginning rpng2_win_display_row()\n")
water	17:10	0:0	4	(
water	17:11	0:0	4	stderr
water	17:17	0:0	4	,
water	17:19	0:0	4	"beginning rpng2_win_display_row()\n"
water	17:56	0:0	4	)
water	18:4	0:0	2	if
water	18:7	0:0	2	(
water	18:8	0:0	2	rows
op	18:13	0:0	2	==
water	18:16	0:0	2	0
water	18:17	0:0	2	)
water	19:8	0:0	2	firstrow
op	19:17	0:0	2	=
water	19:19	0:0	2	row
water	19:22	0:0	2	;
op	20:4	0:0	2	++
water	20:6	0:0	2	rows
water	20:10	0:0	2	;
water	26:4	0:0	2	src
op	26:8	0:0	2	=
water	26:10	0:0	2	rpng2_info
op	26:20	0:0	2	.
water	26:21	0:0	2	image_data
op	26:32	0:0	2	+
water	26:34	0:0	2	row
op	26:37	0:0	2	*
water	26:38	0:0	2	rpng2_info
op	26:48	0:0	2	.
water	26:49	0:0	2	rowbytes
water	26:57	0:0	2	;
if	27:4	28:40	2	(bg_image)
cond	27:8	27:8	3	bg_image
water	27:8	0:0	4	bg_image
stmts	28:8	28:40	3	
water	28:8	0:0	4	src2
op	28:13	0:0	4	=
water	28:15	0:0	4	bg_data
op	28:23	0:0	4	+
water	28:25	0:0	4	row
op	28:28	0:0	4	*
water	28:29	0:0	4	bg_rowbytes
water	28:40	0:0	4	;
water	29:4	0:0	2	dest
op	29:9	0:0	2	=
water	29:11	0:0	2	wimage_data
op	29:23	0:0	2	+
water	29:25	0:0	2	row
op	29:28	0:0	2	*
water	29:29	0:0	2	wimage_rowbytes
water	29:44	0:0	2	;
if	30:4	39:4	2	(rpng2_info . channels == 3)
cond	30:8	30:31	3	rpng2_info . channels == 3
water	30:8	0:0	4	rpng2_info
op	30:18	0:0	4	.
water	30:19	0:0	4	channels
op	30:28	0:0	4	==
water	30:31	0:0	4	3
stmts	30:34	39:4	3	
water	30:34	0:0	4	{
for	31:8	38:8	4	(i = rpng2_info . width ;i > 0;-- i)
forinit	31:13	31:33	5	i = rpng2_info . width ;
water	31:13	0:0	6	i
op	31:15	0:0	6	=
water	31:17	0:0	6	rpng2_info
op	31:27	0:0	6	.
water	31:28	0:0	6	width
water	31:33	0:0	6	;
cond	31:36	31:40	5	i > 0
water	31:36	0:0	6	i
op	31:38	0:0	6	>
water	31:40	0:0	6	0
forexpr	31:44	31:46	5	-- i
op	31:44	0:0	6	--
water	31:46	0:0	6	i
stmts	31:49	38:8	5	
water	31:49	0:0	6	{
water	32:12	0:0	6	r
op	32:14	0:0	6	=
op	32:16	0:0	6	*
water	32:17	0:0	6	src
op	32:20	0:0	6	++
water	32:22	0:0	6	;
water	33:12	0:0	6	g
op	33:14	0:0	6	=
op	33:16	0:0	6	*
water	33:17	0:0	6	src
op	33:20	0:0	6	++
water	33:22	0:0	6	;
water	34:12	0:0	6	b
op	34:14	0:0	6	=
op	34:16	0:0	6	*
water	34:17	0:0	6	src
op	34:20	0:0	6	++
water	34:22	0:0	6	;
op	35:12	0:0	6	*
water	35:13	0:0	6	dest
op	35:17	0:0	6	++
op	35:20	0:0	6	=
water	35:22	0:0	6	b
water	35:23	0:0	6	;
op	36:12	0:0	6	*
water	36:13	0:0	6	dest
op	36:17	0:0	6	++
op	36:20	0:0	6	=
water	36:22	0:0	6	g
water	36:23	0:0	6	;
op	37:12	0:0	6	*
water	37:13	0:0	6	dest
op	37:17	0:0	6	++
op	37:20	0:0	6	=
water	37:22	0:0	6	r
water	37:23	0:0	6	;
water	38:8	0:0	6	}
water	39:4	0:0	4	}
else	39:6	68:4	2
stmts	39:12	68:4	3	
water	39:12	0:0	4	{
for	40:8	67:8	4	(i = rpng2_info . width ;i > 0;-- i)
forinit	40:13	40:33	5	i = rpng2_info . width ;
water	40:13	0:0	6	i
op	40:15	0:0	6	=
water	40:17	0:0	6	rpng2_info
op	40:27	0:0	6	.
water	40:28	0:0	6	width
water	40:33	0:0	6	;
cond	40:36	40:40	5	i > 0
water	40:36	0:0	6	i
op	40:38	0:0	6	>
water	40:40	0:0	6	0
forexpr	40:44	40:46	5	-- i
op	40:44	0:0	6	--
water	40:46	0:0	6	i
stmts	40:49	67:8	5	
water	40:49	0:0	6	{
water	41:12	0:0	6	r
op	41:14	0:0	6	=
op	41:16	0:0	6	*
water	41:17	0:0	6	src
op	41:20	0:0	6	++
water	41:22	0:0	6	;
water	42:12	0:0	6	g
op	42:14	0:0	6	=
op	42:16	0:0	6	*
water	42:17	0:0	6	src
op	42:20	0:0	6	++
water	42:22	0:0	6	;
water	43:12	0:0	6	b
op	43:14	0:0	6	=
op	43:16	0:0	6	*
water	43:17	0:0	6	src
op	43:20	0:0	6	++
water	43:22	0:0	6	;
water	44:12	0:0	6	a
op	44:14	0:0	6	=
op	44:16	0:0	6	*
water	44:17	0:0	6	src
op	44:20	0:0	6	++
water	44:22	0:0	6	;
if	45:12	49:12	6	(bg_image)
cond	45:16	45:16	7	bg_image
water	45:16	0:0	8	bg_image
stmts	45:26	49:12	7	
water	45:26	0:0	8	{
water	46:16	0:0	8	bg_red
op	46:25	0:0	8	=
op	46:27	0:0	8	*
water	46:28	0:0	8	src2
op	46:32	0:0	8	++
water	46:34	0:0	8	;
water	47:16	0:0	8	bg_green
op	47:25	0:0	8	=
op	47:27	0:0	8	*
water	47:28	0:0	8	src2
op	47:32	0:0	8	++
water	47:34	0:0	8	;
water	48:16	0:0	8	bg_blue
op	48:25	0:0	8	=
op	48:27	0:0	8	*
water	48:28	0:0	8	src2
op	48:32	0:0	8	++
water	48:34	0:0	8	;
water	49:12	0:0	8	}
if	50:12	54:12	6	(a == 255)
cond	50:16	50:21	7	a == 255
water	50:16	0:0	8	a
op	50:18	0:0	8	==
water	50:21	0:0	8	255
stmts	50:26	54:12	7	
water	50:26	0:0	8	{
op	51:16	0:0	8	*
water	51:17	0:0	8	dest
op	51:21	0:0	8	++
op	51:24	0:0	8	=
water	51:26	0:0	8	b
water	51:27	0:0	8	;
op	52:16	0:0	8	*
water	52:17	0:0	8	dest
op	52:21	0:0	8	++
op	52:24	0:0	8	=
water	52:26	0:0	8	g
water	52:27	0:0	8	;
op	53:16	0:0	8	*
water	53:17	0:0	8	dest
op	53:21	0:0	8	++
op	53:24	0:0	8	=
water	53:26	0:0	8	r
water	53:27	0:0	8	;
water	54:12	0:0	8	}
else	54:14	58:12	6
stmts	54:19	58:12	7	
if	54:19	58:12	8	(a == 0)
cond	54:23	54:28	9	a == 0
water	54:23	0:0	10	a
op	54:25	0:0	10	==
water	54:28	0:0	10	0
stmts	54:31	58:12	9	
water	54:31	0:0	10	{
op	55:16	0:0	10	*
water	55:17	0:0	10	dest
op	55:21	0:0	10	++
op	55:24	0:0	10	=
water	55:26	0:0	10	bg_blue
water	55:33	0:0	10	;
op	56:16	0:0	10	*
water	56:17	0:0	10	dest
op	56:21	0:0	10	++
op	56:24	0:0	10	=
water	56:26	0:0	10	bg_green
water	56:34	0:0	10	;
op	57:16	0:0	10	*
water	57:17	0:0	10	dest
op	57:21	0:0	10	++
op	57:24	0:0	10	=
water	57:26	0:0	10	bg_red
water	57:32	0:0	10	;
water	58:12	0:0	10	}
else	58:14	66:12	6
stmts	58:19	66:12	7	
water	58:19	0:0	8	{
call	63:16	63:54	8	alpha_composite
arg	63:32	63:39	9	*dest++
op	63:32	0:0	10	*
water	63:33	0:0	10	dest
op	63:37	0:0	10	++
arg	63:41	63:42	9	b
water	63:41	0:0	10	b
arg	63:44	63:45	9	a
water	63:44	0:0	10	a
arg	63:47	63:54	9	bg_blue
water	63:47	0:0	10	bg_blue
water	63:55	0:0	8	;
call	64:16	64:55	8	alpha_composite
arg	64:32	64:39	9	*dest++
op	64:32	0:0	10	*
water	64:33	0:0	10	dest
op	64:37	0:0	10	++
arg	64:41	64:42	9	g
water	64:41	0:0	10	g
arg	64:44	64:45	9	a
water	64:44	0:0	10	a
arg	64:47	64:55	9	bg_green
water	64:47	0:0	10	bg_green
water	64:56	0:0	8	;
call	65:16	65:53	8	alpha_composite
arg	65:32	65:39	9	*dest++
op	65:32	0:0	10	*
water	65:33	0:0	10	dest
op	65:37	0:0	10	++
arg	65:41	65:42	9	r
water	65:41	0:0	10	r
arg	65:44	65:45	9	a
water	65:44	0:0	10	a
arg	65:47	65:53	9	bg_red
water	65:47	0:0	10	bg_red
water	65:54	0:0	8	;
water	66:12	0:0	8	}
water	67:8	0:0	6	}
water	68:4	0:0	4	}
if	73:4	82:4	2	(( rows & 0 xf ) == 0 || row == rpng2_info . height - 1)
cond	73:8	73:54	3	( rows & 0 xf ) == 0 || row == rpng2_info . height - 1
water	73:8	0:0	4	(
water	73:9	0:0	4	rows
op	73:14	0:0	4	&
water	73:16	0:0	4	0
water	73:17	0:0	4	xf
water	73:19	0:0	4	)
op	73:21	0:0	4	==
water	73:24	0:0	4	0
op	73:26	0:0	4	||
water	73:29	0:0	4	row
op	73:33	0:0	4	==
water	73:36	0:0	4	rpng2_info
op	73:46	0:0	4	.
water	73:47	0:0	4	height
op	73:53	0:0	4	-
water	73:54	0:0	4	1
stmts	73:57	82:4	3	
water	73:57	0:0	4	{
decl	74:8	74:17	4	RECT	rect
water	75:8	0:0	4	rect
op	75:12	0:0	4	.
water	75:13	0:0	4	left
op	75:18	0:0	4	=
water	75:20	0:0	4	0
water	75:21	0:0	4	L
water	75:22	0:0	4	;
water	76:8	0:0	4	rect
op	76:12	0:0	4	.
water	76:13	0:0	4	top
op	76:17	0:0	4	=
water	76:19	0:0	4	(
water	76:20	0:0	4	LONG
water	76:24	0:0	4	)
water	76:25	0:0	4	firstrow
water	76:33	0:0	4	;
water	77:8	0:0	4	rect
op	77:12	0:0	4	.
water	77:13	0:0	4	right
op	77:19	0:0	4	=
water	77:21	0:0	4	(
water	77:22	0:0	4	LONG
water	77:26	0:0	4	)
water	77:27	0:0	4	rpng2_info
op	77:37	0:0	4	.
water	77:38	0:0	4	width
water	77:43	0:0	4	;
water	78:8	0:0	4	rect
op	78:12	0:0	4	.
water	78:13	0:0	4	bottom
op	78:20	0:0	4	=
water	78:22	0:0	4	(
water	78:23	0:0	4	LONG
water	78:27	0:0	4	)
water	78:28	0:0	4	row
op	78:32	0:0	4	+
water	78:34	0:0	4	1
water	78:35	0:0	4	L
water	78:36	0:0	4	;
call	79:8	79:48	4	InvalidateRect
arg	79:23	79:34	5	global_hwnd
water	79:23	0:0	6	global_hwnd
arg	79:36	79:41	5	&rect
op	79:36	0:0	6	&
water	79:37	0:0	6	rect
arg	79:43	79:48	5	FALSE
water	79:43	0:0	6	FALSE
water	79:49	0:0	4	;
call	80:8	80:32	4	UpdateWindow
arg	80:21	80:32	5	global_hwnd
water	80:21	0:0	6	global_hwnd
water	80:33	0:0	4	;
water	81:8	0:0	4	rows
op	81:13	0:0	4	=
water	81:15	0:0	4	0
water	81:16	0:0	4	;
water	82:4	0:0	4	}

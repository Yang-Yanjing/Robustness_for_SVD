func	2:0	98:0	0	int	main
params	2:8	0:0	1	
param	2:9	2:17	2	int	argc
param	2:19	2:31	2	char *	argv[]
stmnts	0:0	97:10	1	
decl	4:2	4:21	2	FILE	*fp_rd
op	4:14	0:0	2	=
water	4:16	0:0	2	stdin
decl	5:2	5:22	2	FILE	*fp_wr
op	5:14	0:0	2	=
water	5:16	0:0	2	stdout
decl	6:2	6:20	2	FILE	*fp_al
op	6:14	0:0	2	=
water	6:16	0:0	2	NULL
decl	7:2	7:17	2	BOOL	raw
op	7:11	0:0	2	=
water	7:13	0:0	2	TRUE
decl	8:2	8:20	2	BOOL	alpha
op	8:13	0:0	2	=
water	8:15	0:0	2	FALSE
decl	9:2	9:10	2	int	argi
for	10:2	71:2	2	(argi = 1 ;argi < argc;argi ++)
forinit	10:7	10:15	3	argi = 1 ;
water	10:7	0:0	4	argi
op	10:12	0:0	4	=
water	10:14	0:0	4	1
water	10:15	0:0	4	;
cond	10:17	10:24	3	argi < argc
water	10:17	0:0	4	argi
op	10:22	0:0	4	<
water	10:24	0:0	4	argc
forexpr	10:30	10:34	3	argi ++
water	10:30	0:0	4	argi
op	10:34	0:0	4	++
stmts	11:2	71:2	3	
water	11:2	0:0	4	{
if	12:4	45:4	4	(argv [ argi ] [ 0 ] == '-')
cond	12:8	12:25	5	argv [ argi ] [ 0 ] == '-'
water	12:8	0:0	6	argv
op	12:12	0:0	6	[
water	12:13	0:0	6	argi
op	12:17	0:0	6	]
op	12:18	0:0	6	[
water	12:19	0:0	6	0
op	12:20	0:0	6	]
op	12:22	0:0	6	==
water	12:25	0:0	6	'-'
stmts	13:4	45:4	5	
water	13:4	0:0	6	{
switch	14:6	44:6	6	(argv [ argi ] [ 1 ])
cond	14:14	14:26	7	argv [ argi ] [ 1 ]
water	14:14	0:0	8	argv
op	14:18	0:0	8	[
water	14:19	0:0	8	argi
op	14:23	0:0	8	]
op	14:24	0:0	8	[
water	14:25	0:0	8	1
op	14:26	0:0	8	]
stmts	15:6	44:6	7	
water	15:6	0:0	8	{
water	16:8	0:0	8	case
water	16:13	0:0	8	'n'
water	16:16	0:0	8	:
water	17:10	0:0	8	raw
op	17:14	0:0	8	=
water	17:16	0:0	8	FALSE
water	17:21	0:0	8	;
break	18:10	18:15	8	
water	19:8	0:0	8	case
water	19:13	0:0	8	'r'
water	19:16	0:0	8	:
water	20:10	0:0	8	raw
op	20:14	0:0	8	=
water	20:16	0:0	8	TRUE
water	20:20	0:0	8	;
break	21:10	21:15	8	
water	22:8	0:0	8	case
water	22:13	0:0	8	'a'
water	22:16	0:0	8	:
water	23:10	0:0	8	alpha
op	23:16	0:0	8	=
water	23:18	0:0	8	TRUE
water	23:22	0:0	8	;
water	24:10	0:0	8	argi
op	24:14	0:0	8	++
water	24:16	0:0	8	;
if	25:10	31:10	8	(( fp_al =fopen (argv [ argi ] ,"wb" ) ) == NULL)
cond	25:14	25:52	9	( fp_al =fopen (argv [ argi ] ,"wb" ) ) == NULL
water	25:14	0:0	10	(
water	25:15	0:0	10	fp_al
op	25:21	0:0	10	=
call	25:23	25:46	10	fopen
arg	25:30	25:40	11	argv[argi]
water	25:30	0:0	12	argv
op	25:34	0:0	12	[
water	25:35	0:0	12	argi
op	25:39	0:0	12	]
arg	25:42	25:46	11	"wb"
water	25:42	0:0	12	"wb"
water	25:47	0:0	10	)
op	25:49	0:0	10	==
water	25:52	0:0	10	NULL
stmts	26:10	31:10	9	
water	26:10	0:0	10	{
call	27:12	27:40	10	fprintf
arg	27:21	27:27	11	stderr
water	27:21	0:0	12	stderr
arg	27:29	27:40	11	"PNM2PNG\n"
water	27:29	0:0	12	"PNM2PNG\n"
water	27:41	0:0	10	;
call	28:12	29:25	10	fprintf
arg	28:21	28:27	11	stderr
water	28:21	0:0	12	stderr
arg	28:29	28:77	11	"Error:  can not create alpha-channel file %s\n"
water	28:29	0:0	12	"Error:  can not create alpha-channel file %s\n"
arg	29:15	29:25	11	argv[argi]
water	29:15	0:0	12	argv
op	29:19	0:0	12	[
water	29:20	0:0	12	argi
op	29:24	0:0	12	]
water	29:26	0:0	10	;
call	30:12	30:19	10	exit
arg	30:18	30:19	11	1
water	30:18	0:0	12	1
water	30:20	0:0	10	;
water	31:10	0:0	10	}
break	32:10	32:15	8	
water	33:8	0:0	8	case
water	33:13	0:0	8	'h'
water	33:16	0:0	8	:
water	34:8	0:0	8	case
water	34:13	0:0	8	'?'
water	34:16	0:0	8	:
call	35:10	35:16	8	usage
water	35:17	0:0	8	;
call	36:10	36:16	8	exit
arg	36:15	36:16	9	0
water	36:15	0:0	10	0
water	36:17	0:0	8	;
break	37:10	37:15	8	
label	38:8	38:15	8	default :
call	39:10	39:38	8	fprintf
arg	39:19	39:25	9	stderr
water	39:19	0:0	10	stderr
arg	39:27	39:38	9	"PNG2PNM\n"
water	39:27	0:0	10	"PNG2PNM\n"
water	39:39	0:0	8	;
call	40:10	40:68	8	fprintf
arg	40:19	40:25	9	stderr
water	40:19	0:0	10	stderr
arg	40:27	40:56	9	"Error:  unknown option %s\n"
water	40:27	0:0	10	"Error:  unknown option %s\n"
arg	40:58	40:68	9	argv[argi]
water	40:58	0:0	10	argv
op	40:62	0:0	10	[
water	40:63	0:0	10	argi
op	40:67	0:0	10	]
water	40:69	0:0	8	;
call	41:10	41:16	8	usage
water	41:17	0:0	8	;
call	42:10	42:16	8	exit
arg	42:15	42:16	9	1
water	42:15	0:0	10	1
water	42:17	0:0	8	;
break	43:10	43:15	8	
water	44:6	0:0	8	}
water	45:4	0:0	6	}
else	46:4	54:4	4
stmts	46:9	54:4	5	
if	46:9	54:4	6	(fp_rd == stdin)
cond	46:13	46:22	7	fp_rd == stdin
water	46:13	0:0	8	fp_rd
op	46:19	0:0	8	==
water	46:22	0:0	8	stdin
stmts	47:4	54:4	7	
water	47:4	0:0	8	{
if	48:6	53:6	8	(( fp_rd =fopen (argv [ argi ] ,"rb" ) ) == NULL)
cond	48:10	48:48	9	( fp_rd =fopen (argv [ argi ] ,"rb" ) ) == NULL
water	48:10	0:0	10	(
water	48:11	0:0	10	fp_rd
op	48:17	0:0	10	=
call	48:19	48:42	10	fopen
arg	48:26	48:36	11	argv[argi]
water	48:26	0:0	12	argv
op	48:30	0:0	12	[
water	48:31	0:0	12	argi
op	48:35	0:0	12	]
arg	48:38	48:42	11	"rb"
water	48:38	0:0	12	"rb"
water	48:43	0:0	10	)
op	48:45	0:0	10	==
water	48:48	0:0	10	NULL
stmts	49:6	53:6	9	
water	49:6	0:0	10	{
call	50:13	50:41	10	fprintf
arg	50:22	50:28	11	stderr
water	50:22	0:0	12	stderr
arg	50:30	50:41	11	"PNG2PNM\n"
water	50:30	0:0	12	"PNG2PNM\n"
water	50:42	0:0	10	;
call	51:12	51:75	10	fprintf
arg	51:21	51:27	11	stderr
water	51:21	0:0	12	stderr
arg	51:29	51:63	11	"Error:  file %s does not exist\n"
water	51:29	0:0	12	"Error:  file %s does not exist\n"
arg	51:65	51:75	11	argv[argi]
water	51:65	0:0	12	argv
op	51:69	0:0	12	[
water	51:70	0:0	12	argi
op	51:74	0:0	12	]
water	51:76	0:0	10	;
call	52:12	52:19	10	exit
arg	52:18	52:19	11	1
water	52:18	0:0	12	1
water	52:20	0:0	10	;
water	53:6	0:0	10	}
water	54:4	0:0	8	}
else	55:4	63:4	4
stmts	55:9	63:4	5	
if	55:9	63:4	6	(fp_wr == stdout)
cond	55:13	55:22	7	fp_wr == stdout
water	55:13	0:0	8	fp_wr
op	55:19	0:0	8	==
water	55:22	0:0	8	stdout
stmts	56:4	63:4	7	
water	56:4	0:0	8	{
if	57:6	62:6	8	(( fp_wr =fopen (argv [ argi ] ,"wb" ) ) == NULL)
cond	57:10	57:48	9	( fp_wr =fopen (argv [ argi ] ,"wb" ) ) == NULL
water	57:10	0:0	10	(
water	57:11	0:0	10	fp_wr
op	57:17	0:0	10	=
call	57:19	57:42	10	fopen
arg	57:26	57:36	11	argv[argi]
water	57:26	0:0	12	argv
op	57:30	0:0	12	[
water	57:31	0:0	12	argi
op	57:35	0:0	12	]
arg	57:38	57:42	11	"wb"
water	57:38	0:0	12	"wb"
water	57:43	0:0	10	)
op	57:45	0:0	10	==
water	57:48	0:0	10	NULL
stmts	58:6	62:6	9	
water	58:6	0:0	10	{
call	59:8	59:36	10	fprintf
arg	59:17	59:23	11	stderr
water	59:17	0:0	12	stderr
arg	59:25	59:36	11	"PNG2PNM\n"
water	59:25	0:0	12	"PNG2PNM\n"
water	59:37	0:0	10	;
call	60:8	60:71	10	fprintf
arg	60:17	60:23	11	stderr
water	60:17	0:0	12	stderr
arg	60:25	60:59	11	"Error:  can not create file %s\n"
water	60:25	0:0	12	"Error:  can not create file %s\n"
arg	60:61	60:71	11	argv[argi]
water	60:61	0:0	12	argv
op	60:65	0:0	12	[
water	60:66	0:0	12	argi
op	60:70	0:0	12	]
water	60:72	0:0	10	;
call	61:8	61:15	10	exit
arg	61:14	61:15	11	1
water	61:14	0:0	12	1
water	61:16	0:0	10	;
water	62:6	0:0	10	}
water	63:4	0:0	8	}
else	64:4	70:4	4
stmts	65:4	70:4	5	
water	65:4	0:0	6	{
call	66:6	66:34	6	fprintf
arg	66:15	66:21	7	stderr
water	66:15	0:0	8	stderr
arg	66:23	66:34	7	"PNG2PNM\n"
water	66:23	0:0	8	"PNG2PNM\n"
water	66:35	0:0	6	;
call	67:6	67:54	6	fprintf
arg	67:15	67:21	7	stderr
water	67:15	0:0	8	stderr
arg	67:23	67:54	7	"Error:  too many parameters\n"
water	67:23	0:0	8	"Error:  too many parameters\n"
water	67:55	0:0	6	;
call	68:6	68:12	6	usage
water	68:13	0:0	6	;
call	69:6	69:12	6	exit
arg	69:11	69:12	7	1
water	69:11	0:0	8	1
water	69:13	0:0	6	;
water	70:4	0:0	6	}
water	71:2	0:0	4	}
if	74:2	77:2	2	(fp_rd == stdin)
cond	74:6	74:15	3	fp_rd == stdin
water	74:6	0:0	4	fp_rd
op	74:12	0:0	4	==
water	74:15	0:0	4	stdin
stmts	75:2	77:2	3	
water	75:2	0:0	4	{
call	76:4	76:28	4	setmode
arg	76:13	76:18	5	STDIN
water	76:13	0:0	6	STDIN
arg	76:20	76:28	5	O_BINARY
water	76:20	0:0	6	O_BINARY
water	76:29	0:0	4	;
water	77:2	0:0	4	}
if	78:2	81:2	2	(( raw ) && ( fp_wr == stdout ))
cond	78:6	78:31	3	( raw ) && ( fp_wr == stdout )
water	78:6	0:0	4	(
water	78:7	0:0	4	raw
water	78:10	0:0	4	)
op	78:12	0:0	4	&&
water	78:15	0:0	4	(
water	78:16	0:0	4	fp_wr
op	78:22	0:0	4	==
water	78:25	0:0	4	stdout
water	78:31	0:0	4	)
stmts	79:2	81:2	3	
water	79:2	0:0	4	{
call	80:4	80:29	4	setmode
arg	80:13	80:19	5	STDOUT
water	80:13	0:0	6	STDOUT
arg	80:21	80:29	5	O_BINARY
water	80:21	0:0	6	O_BINARY
water	80:30	0:0	4	;
water	81:2	0:0	4	}
if	84:2	89:2	2	(png2pnm (fp_rd ,fp_wr ,fp_al ,raw ,alpha ) == FALSE)
cond	84:6	84:51	3	png2pnm (fp_rd ,fp_wr ,fp_al ,raw ,alpha ) == FALSE
call	84:6	84:46	4	png2pnm
arg	84:15	84:20	5	fp_rd
water	84:15	0:0	6	fp_rd
arg	84:22	84:27	5	fp_wr
water	84:22	0:0	6	fp_wr
arg	84:29	84:34	5	fp_al
water	84:29	0:0	6	fp_al
arg	84:36	84:39	5	raw
water	84:36	0:0	6	raw
arg	84:41	84:46	5	alpha
water	84:41	0:0	6	alpha
op	84:48	0:0	4	==
water	84:51	0:0	4	FALSE
stmts	85:2	89:2	3	
water	85:2	0:0	4	{
call	86:4	86:32	4	fprintf
arg	86:13	86:19	5	stderr
water	86:13	0:0	6	stderr
arg	86:21	86:32	5	"PNG2PNM\n"
water	86:21	0:0	6	"PNG2PNM\n"
water	86:33	0:0	4	;
call	87:4	87:69	4	fprintf
arg	87:13	87:19	5	stderr
water	87:13	0:0	6	stderr
arg	87:21	87:69	5	"Error:  unsuccessful conversion of PNG-image\n"
water	87:21	0:0	6	"Error:  unsuccessful conversion of PNG-image\n"
water	87:70	0:0	4	;
call	88:4	88:10	4	exit
arg	88:9	88:10	5	1
water	88:9	0:0	6	1
water	88:11	0:0	4	;
water	89:2	0:0	4	}
call	91:2	91:15	2	fclose
arg	91:10	91:15	3	fp_rd
water	91:10	0:0	4	fp_rd
water	91:16	0:0	2	;
call	93:2	93:15	2	fclose
arg	93:10	93:15	3	fp_wr
water	93:10	0:0	4	fp_wr
water	93:16	0:0	2	;
if	95:2	96:18	2	(alpha)
cond	95:6	95:6	3	alpha
water	95:6	0:0	4	alpha
stmts	96:4	96:18	3	
call	96:4	96:17	4	fclose
arg	96:12	96:17	5	fp_al
water	96:12	0:0	6	fp_al
water	96:18	0:0	4	;
return	97:2	97:10	2	0
water	97:9	0:0	3	0

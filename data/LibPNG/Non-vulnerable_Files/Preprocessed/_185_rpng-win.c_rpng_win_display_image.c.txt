func	2:0	80:0	0	static int	rpng_win_display_image
stmnts	0:0	79:12	1	
decl	4:4	4:19	2	uch	*src
water	4:12	0:0	2	,
decl	4:4	4:19	2	uch	*dest
decl	5:4	5:18	2	uch	r
water	5:9	0:0	2	,
decl	5:4	5:18	2	uch	g
water	5:12	0:0	2	,
decl	5:4	5:18	2	uch	b
water	5:15	0:0	2	,
decl	5:4	5:18	2	uch	a
decl	6:4	6:23	2	ulg	i
water	6:9	0:0	2	,
decl	6:4	6:23	2	ulg	row
water	6:14	0:0	2	,
decl	6:4	6:23	2	ulg	lastrow
decl	7:4	7:13	2	RECT	rect
call	8:4	9:21	2	Trace
arg	8:10	9:21	3	(stderr,"beginning display loop (image_channels == %d)\n",image_channels)
water	8:10	0:0	4	(
water	8:11	0:0	4	stderr
water	8:17	0:0	4	,
water	8:19	0:0	4	"beginning display loop (image_channels == %d)\n"
water	8:68	0:0	4	,
water	9:6	0:0	4	image_channels
water	9:20	0:0	4	)
call	10:4	11:51	2	Trace
arg	10:10	11:51	3	(stderr,"(width = %ld, rowbytes = %ld, wimage_rowbytes = %d)\n",image_width,image_rowbytes,wimage_rowbytes)
water	10:10	0:0	4	(
water	10:11	0:0	4	stderr
water	10:17	0:0	4	,
water	10:19	0:0	4	"(width = %ld, rowbytes = %ld, wimage_rowbytes = %d)\n"
water	10:74	0:0	4	,
water	11:6	0:0	4	image_width
water	11:17	0:0	4	,
water	11:19	0:0	4	image_rowbytes
water	11:33	0:0	4	,
water	11:35	0:0	4	wimage_rowbytes
water	11:50	0:0	4	)
water	17:4	0:0	2	for
water	17:8	0:0	2	(
water	17:9	0:0	2	lastrow
op	17:17	0:0	2	=
water	17:19	0:0	2	row
op	17:23	0:0	2	=
water	17:25	0:0	2	0
water	17:26	0:0	2	;
water	17:29	0:0	2	row
op	17:33	0:0	2	<
water	17:35	0:0	2	image_height
water	17:47	0:0	2	;
op	17:50	0:0	2	++
water	17:52	0:0	2	row
water	17:55	0:0	2	)
water	17:57	0:0	2	{
water	18:8	0:0	2	src
op	18:12	0:0	2	=
water	18:14	0:0	2	image_data
op	18:25	0:0	2	+
water	18:27	0:0	2	row
op	18:30	0:0	2	*
water	18:31	0:0	2	image_rowbytes
water	18:45	0:0	2	;
water	19:8	0:0	2	dest
op	19:13	0:0	2	=
water	19:15	0:0	2	wimage_data
op	19:27	0:0	2	+
water	19:29	0:0	2	row
op	19:32	0:0	2	*
water	19:33	0:0	2	wimage_rowbytes
water	19:48	0:0	2	;
water	20:8	0:0	2	if
water	20:11	0:0	2	(
water	20:12	0:0	2	image_channels
op	20:27	0:0	2	==
water	20:30	0:0	2	3
water	20:31	0:0	2	)
water	20:33	0:0	2	{
water	21:12	0:0	2	for
water	21:16	0:0	2	(
water	21:17	0:0	2	i
op	21:19	0:0	2	=
water	21:21	0:0	2	image_width
water	21:32	0:0	2	;
water	21:35	0:0	2	i
op	21:37	0:0	2	>
water	21:39	0:0	2	0
water	21:40	0:0	2	;
op	21:43	0:0	2	--
water	21:45	0:0	2	i
water	21:46	0:0	2	)
water	21:48	0:0	2	{
water	22:16	0:0	2	r
op	22:18	0:0	2	=
op	22:20	0:0	2	*
water	22:21	0:0	2	src
op	22:24	0:0	2	++
water	22:26	0:0	2	;
water	23:16	0:0	2	g
op	23:18	0:0	2	=
op	23:20	0:0	2	*
water	23:21	0:0	2	src
op	23:24	0:0	2	++
water	23:26	0:0	2	;
water	24:16	0:0	2	b
op	24:18	0:0	2	=
op	24:20	0:0	2	*
water	24:21	0:0	2	src
op	24:24	0:0	2	++
water	24:26	0:0	2	;
op	25:16	0:0	2	*
water	25:17	0:0	2	dest
op	25:21	0:0	2	++
op	25:24	0:0	2	=
water	25:26	0:0	2	b
water	25:27	0:0	2	;
op	26:16	0:0	2	*
water	26:17	0:0	2	dest
op	26:21	0:0	2	++
op	26:24	0:0	2	=
water	26:26	0:0	2	g
water	26:27	0:0	2	;
op	27:16	0:0	2	*
water	27:17	0:0	2	dest
op	27:21	0:0	2	++
op	27:24	0:0	2	=
water	27:26	0:0	2	r
water	27:27	0:0	2	;
water	28:12	0:0	2	}
water	29:8	0:0	2	}
water	29:10	0:0	2	else
water	29:16	0:0	2	{
water	30:12	0:0	2	for
water	30:16	0:0	2	(
water	30:17	0:0	2	i
op	30:19	0:0	2	=
water	30:21	0:0	2	image_width
water	30:32	0:0	2	;
water	30:35	0:0	2	i
op	30:37	0:0	2	>
water	30:39	0:0	2	0
water	30:40	0:0	2	;
op	30:43	0:0	2	--
water	30:45	0:0	2	i
water	30:46	0:0	2	)
water	30:48	0:0	2	{
water	31:16	0:0	2	r
op	31:18	0:0	2	=
op	31:20	0:0	2	*
water	31:21	0:0	2	src
op	31:24	0:0	2	++
water	31:26	0:0	2	;
water	32:16	0:0	2	g
op	32:18	0:0	2	=
op	32:20	0:0	2	*
water	32:21	0:0	2	src
op	32:24	0:0	2	++
water	32:26	0:0	2	;
water	33:16	0:0	2	b
op	33:18	0:0	2	=
op	33:20	0:0	2	*
water	33:21	0:0	2	src
op	33:24	0:0	2	++
water	33:26	0:0	2	;
water	34:16	0:0	2	a
op	34:18	0:0	2	=
op	34:20	0:0	2	*
water	34:21	0:0	2	src
op	34:24	0:0	2	++
water	34:26	0:0	2	;
water	35:16	0:0	2	if
water	35:19	0:0	2	(
water	35:20	0:0	2	a
op	35:22	0:0	2	==
water	35:25	0:0	2	255
water	35:28	0:0	2	)
water	35:30	0:0	2	{
op	36:20	0:0	2	*
water	36:21	0:0	2	dest
op	36:25	0:0	2	++
op	36:28	0:0	2	=
water	36:30	0:0	2	b
water	36:31	0:0	2	;
op	37:20	0:0	2	*
water	37:21	0:0	2	dest
op	37:25	0:0	2	++
op	37:28	0:0	2	=
water	37:30	0:0	2	g
water	37:31	0:0	2	;
op	38:20	0:0	2	*
water	38:21	0:0	2	dest
op	38:25	0:0	2	++
op	38:28	0:0	2	=
water	38:30	0:0	2	r
water	38:31	0:0	2	;
water	39:16	0:0	2	}
water	39:18	0:0	2	else
water	39:23	0:0	2	if
water	39:26	0:0	2	(
water	39:27	0:0	2	a
op	39:29	0:0	2	==
water	39:32	0:0	2	0
water	39:33	0:0	2	)
water	39:35	0:0	2	{
op	40:20	0:0	2	*
water	40:21	0:0	2	dest
op	40:25	0:0	2	++
op	40:28	0:0	2	=
water	40:30	0:0	2	bg_blue
water	40:37	0:0	2	;
op	41:20	0:0	2	*
water	41:21	0:0	2	dest
op	41:25	0:0	2	++
op	41:28	0:0	2	=
water	41:30	0:0	2	bg_green
water	41:38	0:0	2	;
op	42:20	0:0	2	*
water	42:21	0:0	2	dest
op	42:25	0:0	2	++
op	42:28	0:0	2	=
water	42:30	0:0	2	bg_red
water	42:36	0:0	2	;
water	43:16	0:0	2	}
water	43:18	0:0	2	else
water	43:23	0:0	2	{
call	48:20	48:58	2	alpha_composite
arg	48:36	48:43	3	*dest++
op	48:36	0:0	4	*
water	48:37	0:0	4	dest
op	48:41	0:0	4	++
arg	48:45	48:46	3	b
water	48:45	0:0	4	b
arg	48:48	48:49	3	a
water	48:48	0:0	4	a
arg	48:51	48:58	3	bg_blue
water	48:51	0:0	4	bg_blue
water	48:59	0:0	2	;
call	49:20	49:59	2	alpha_composite
arg	49:36	49:43	3	*dest++
op	49:36	0:0	4	*
water	49:37	0:0	4	dest
op	49:41	0:0	4	++
arg	49:45	49:46	3	g
water	49:45	0:0	4	g
arg	49:48	49:49	3	a
water	49:48	0:0	4	a
arg	49:51	49:59	3	bg_green
water	49:51	0:0	4	bg_green
water	49:60	0:0	2	;
call	50:20	50:57	2	alpha_composite
arg	50:36	50:43	3	*dest++
op	50:36	0:0	4	*
water	50:37	0:0	4	dest
op	50:41	0:0	4	++
arg	50:45	50:46	3	r
water	50:45	0:0	4	r
arg	50:48	50:49	3	a
water	50:48	0:0	4	a
arg	50:51	50:57	3	bg_red
water	50:51	0:0	4	bg_red
water	50:58	0:0	2	;
water	51:16	0:0	2	}
water	52:12	0:0	2	}
water	53:8	0:0	2	}
water	55:8	0:0	2	if
water	55:11	0:0	2	(
water	55:12	0:0	2	(
water	55:13	0:0	2	(
water	55:14	0:0	2	row
op	55:17	0:0	2	+
water	55:18	0:0	2	1
water	55:19	0:0	2	)
op	55:21	0:0	2	&
water	55:23	0:0	2	0
water	55:24	0:0	2	xf
water	55:26	0:0	2	)
op	55:28	0:0	2	==
water	55:31	0:0	2	0
water	55:32	0:0	2	)
water	55:34	0:0	2	{
water	56:12	0:0	2	rect
op	56:16	0:0	2	.
water	56:17	0:0	2	left
op	56:22	0:0	2	=
water	56:24	0:0	2	0
water	56:25	0:0	2	L
water	56:26	0:0	2	;
water	57:12	0:0	2	rect
op	57:16	0:0	2	.
water	57:17	0:0	2	top
op	57:21	0:0	2	=
water	57:23	0:0	2	(
water	57:24	0:0	2	LONG
water	57:28	0:0	2	)
water	57:29	0:0	2	lastrow
water	57:36	0:0	2	;
water	58:12	0:0	2	rect
op	58:16	0:0	2	.
water	58:17	0:0	2	right
op	58:23	0:0	2	=
water	58:25	0:0	2	(
water	58:26	0:0	2	LONG
water	58:30	0:0	2	)
water	58:31	0:0	2	image_width
water	58:42	0:0	2	;
water	59:12	0:0	2	rect
op	59:16	0:0	2	.
water	59:17	0:0	2	bottom
op	59:24	0:0	2	=
water	59:26	0:0	2	(
water	59:27	0:0	2	LONG
water	59:31	0:0	2	)
water	59:32	0:0	2	lastrow
op	59:40	0:0	2	+
water	59:42	0:0	2	16
water	59:44	0:0	2	L
water	59:45	0:0	2	;
call	60:12	60:52	2	InvalidateRect
arg	60:27	60:38	3	global_hwnd
water	60:27	0:0	4	global_hwnd
arg	60:40	60:45	3	&rect
op	60:40	0:0	4	&
water	60:41	0:0	4	rect
arg	60:47	60:52	3	FALSE
water	60:47	0:0	4	FALSE
water	60:53	0:0	2	;
call	61:12	61:36	2	UpdateWindow
arg	61:25	61:36	3	global_hwnd
water	61:25	0:0	4	global_hwnd
water	61:37	0:0	2	;
water	62:12	0:0	2	lastrow
op	62:20	0:0	2	=
water	62:22	0:0	2	row
op	62:26	0:0	2	+
water	62:28	0:0	2	1
water	62:29	0:0	2	;
water	63:8	0:0	2	}
water	64:4	0:0	2	}
call	65:4	65:57	2	Trace
arg	65:10	65:57	3	(stderr,"calling final image-flush routine\n")
water	65:10	0:0	4	(
water	65:11	0:0	4	stderr
water	65:17	0:0	4	,
water	65:19	0:0	4	"calling final image-flush routine\n"
water	65:56	0:0	4	)
water	66:4	0:0	2	if
water	66:7	0:0	2	(
water	66:8	0:0	2	lastrow
op	66:16	0:0	2	<
water	66:18	0:0	2	image_height
water	66:30	0:0	2	)
water	66:32	0:0	2	{
water	67:8	0:0	2	rect
op	67:12	0:0	2	.
water	67:13	0:0	2	left
op	67:18	0:0	2	=
water	67:20	0:0	2	0
water	67:21	0:0	2	L
water	67:22	0:0	2	;
water	68:8	0:0	2	rect
op	68:12	0:0	2	.
water	68:13	0:0	2	top
op	68:17	0:0	2	=
water	68:19	0:0	2	(
water	68:20	0:0	2	LONG
water	68:24	0:0	2	)
water	68:25	0:0	2	lastrow
water	68:32	0:0	2	;
water	69:8	0:0	2	rect
op	69:12	0:0	2	.
water	69:13	0:0	2	right
op	69:19	0:0	2	=
water	69:21	0:0	2	(
water	69:22	0:0	2	LONG
water	69:26	0:0	2	)
water	69:27	0:0	2	image_width
water	69:38	0:0	2	;
water	70:8	0:0	2	rect
op	70:12	0:0	2	.
water	70:13	0:0	2	bottom
op	70:20	0:0	2	=
water	70:22	0:0	2	(
water	70:23	0:0	2	LONG
water	70:27	0:0	2	)
water	70:28	0:0	2	image_height
water	70:40	0:0	2	;
call	71:8	71:48	2	InvalidateRect
arg	71:23	71:34	3	global_hwnd
water	71:23	0:0	4	global_hwnd
arg	71:36	71:41	3	&rect
op	71:36	0:0	4	&
water	71:37	0:0	4	rect
arg	71:43	71:48	3	FALSE
water	71:43	0:0	4	FALSE
water	71:49	0:0	2	;
call	72:8	72:32	2	UpdateWindow
arg	72:21	72:32	3	global_hwnd
water	72:21	0:0	4	global_hwnd
water	72:33	0:0	2	;
water	73:4	0:0	2	}
water	79:4	0:0	2	return
water	79:11	0:0	2	0
water	79:12	0:0	2	;

func	2:0	177:0	0	static void	rpng2_x_reload_bg_image
params	2:35	0:0	1	
param	2:36	2:40	2	void
stmnts	0:0	176:4	1	
decl	4:4	4:14	2	char	*dest
decl	5:4	5:30	2	uch	r1
water	5:10	0:0	2	,
decl	5:4	5:30	2	uch	r2
water	5:14	0:0	2	,
decl	5:4	5:30	2	uch	g1
water	5:18	0:0	2	,
decl	5:4	5:30	2	uch	g2
water	5:22	0:0	2	,
decl	5:4	5:30	2	uch	b1
water	5:26	0:0	2	,
decl	5:4	5:30	2	uch	b2
decl	6:4	6:54	2	uch	r1_inv
water	6:14	0:0	2	,
decl	6:4	6:54	2	uch	r2_inv
water	6:22	0:0	2	,
decl	6:4	6:54	2	uch	g1_inv
water	6:30	0:0	2	,
decl	6:4	6:54	2	uch	g2_inv
water	6:38	0:0	2	,
decl	6:4	6:54	2	uch	b1_inv
water	6:46	0:0	2	,
decl	6:4	6:54	2	uch	b2_inv
decl	7:4	7:20	2	int	k
water	7:9	0:0	2	,
decl	7:4	7:20	2	int	hmax
water	7:15	0:0	2	,
decl	7:4	7:20	2	int	max
decl	8:4	8:28	2	int	xidx
water	8:12	0:0	2	,
decl	8:4	8:28	2	int	yidx
water	8:18	0:0	2	,
decl	8:4	8:28	2	int	yidx_max
decl	9:4	9:47	2	int	even_odd_vert
water	9:21	0:0	2	,
decl	9:4	9:47	2	int	even_odd_horiz
water	9:37	0:0	2	,
decl	9:4	9:47	2	int	even_odd
decl	10:4	10:48	2	int	invert_gradient2
op	10:25	0:0	2	=
water	10:27	0:0	2	(
water	10:28	0:0	2	bg
op	10:30	0:0	2	[
water	10:31	0:0	2	pat
op	10:34	0:0	2	]
op	10:35	0:0	2	.
water	10:36	0:0	2	type
op	10:41	0:0	2	&
water	10:43	0:0	2	0
water	10:44	0:0	2	x08
water	10:47	0:0	2	)
decl	11:4	11:21	2	int	invert_column
decl	12:4	12:14	2	ulg	i
water	12:9	0:0	2	,
decl	12:4	12:14	2	ulg	row
water	13:4	0:0	2	bgscale
op	13:12	0:0	2	=
water	13:14	0:0	2	(
water	13:15	0:0	2	pat
op	13:19	0:0	2	==
water	13:22	0:0	2	0
water	13:23	0:0	2	)
water	13:24	0:0	2	?
water	13:26	0:0	2	8
water	13:28	0:0	2	:
water	13:30	0:0	2	bgscale_default
water	13:45	0:0	2	;
water	14:4	0:0	2	yidx_max
op	14:13	0:0	2	=
water	14:15	0:0	2	bgscale
op	14:23	0:0	2	-
water	14:25	0:0	2	1
water	14:26	0:0	2	;
if	19:4	82:4	2	(( bg [ pat ] . type & 0 x07 ) == 0)
cond	19:8	19:33	3	( bg [ pat ] . type & 0 x07 ) == 0
water	19:8	0:0	4	(
water	19:9	0:0	4	bg
op	19:11	0:0	4	[
water	19:12	0:0	4	pat
op	19:15	0:0	4	]
op	19:16	0:0	4	.
water	19:17	0:0	4	type
op	19:22	0:0	4	&
water	19:24	0:0	4	0
water	19:25	0:0	4	x07
water	19:28	0:0	4	)
op	19:30	0:0	4	==
water	19:33	0:0	4	0
stmts	19:36	82:4	3	
water	19:36	0:0	4	{
decl	20:8	20:45	4	uch	r1_min
op	20:20	0:0	4	=
water	20:22	0:0	4	rgb
op	20:25	0:0	4	[
water	20:26	0:0	4	bg
op	20:28	0:0	4	[
water	20:29	0:0	4	pat
op	20:32	0:0	4	]
op	20:33	0:0	4	.
water	20:34	0:0	4	rgb1_min
op	20:42	0:0	4	]
op	20:43	0:0	4	.
water	20:44	0:0	4	r
decl	21:8	21:45	4	uch	g1_min
op	21:20	0:0	4	=
water	21:22	0:0	4	rgb
op	21:25	0:0	4	[
water	21:26	0:0	4	bg
op	21:28	0:0	4	[
water	21:29	0:0	4	pat
op	21:32	0:0	4	]
op	21:33	0:0	4	.
water	21:34	0:0	4	rgb1_min
op	21:42	0:0	4	]
op	21:43	0:0	4	.
water	21:44	0:0	4	g
decl	22:8	22:45	4	uch	b1_min
op	22:20	0:0	4	=
water	22:22	0:0	4	rgb
op	22:25	0:0	4	[
water	22:26	0:0	4	bg
op	22:28	0:0	4	[
water	22:29	0:0	4	pat
op	22:32	0:0	4	]
op	22:33	0:0	4	.
water	22:34	0:0	4	rgb1_min
op	22:42	0:0	4	]
op	22:43	0:0	4	.
water	22:44	0:0	4	b
decl	23:8	23:45	4	uch	r2_min
op	23:20	0:0	4	=
water	23:22	0:0	4	rgb
op	23:25	0:0	4	[
water	23:26	0:0	4	bg
op	23:28	0:0	4	[
water	23:29	0:0	4	pat
op	23:32	0:0	4	]
op	23:33	0:0	4	.
water	23:34	0:0	4	rgb2_min
op	23:42	0:0	4	]
op	23:43	0:0	4	.
water	23:44	0:0	4	r
decl	24:8	24:45	4	uch	g2_min
op	24:20	0:0	4	=
water	24:22	0:0	4	rgb
op	24:25	0:0	4	[
water	24:26	0:0	4	bg
op	24:28	0:0	4	[
water	24:29	0:0	4	pat
op	24:32	0:0	4	]
op	24:33	0:0	4	.
water	24:34	0:0	4	rgb2_min
op	24:42	0:0	4	]
op	24:43	0:0	4	.
water	24:44	0:0	4	g
decl	25:8	25:45	4	uch	b2_min
op	25:20	0:0	4	=
water	25:22	0:0	4	rgb
op	25:25	0:0	4	[
water	25:26	0:0	4	bg
op	25:28	0:0	4	[
water	25:29	0:0	4	pat
op	25:32	0:0	4	]
op	25:33	0:0	4	.
water	25:34	0:0	4	rgb2_min
op	25:42	0:0	4	]
op	25:43	0:0	4	.
water	25:44	0:0	4	b
decl	26:8	26:54	4	int	r1_diff
op	26:20	0:0	4	=
water	26:22	0:0	4	rgb
op	26:25	0:0	4	[
water	26:26	0:0	4	bg
op	26:28	0:0	4	[
water	26:29	0:0	4	pat
op	26:32	0:0	4	]
op	26:33	0:0	4	.
water	26:34	0:0	4	rgb1_max
op	26:42	0:0	4	]
op	26:43	0:0	4	.
water	26:44	0:0	4	r
op	26:46	0:0	4	-
water	26:48	0:0	4	r1_min
decl	27:8	27:54	4	int	g1_diff
op	27:20	0:0	4	=
water	27:22	0:0	4	rgb
op	27:25	0:0	4	[
water	27:26	0:0	4	bg
op	27:28	0:0	4	[
water	27:29	0:0	4	pat
op	27:32	0:0	4	]
op	27:33	0:0	4	.
water	27:34	0:0	4	rgb1_max
op	27:42	0:0	4	]
op	27:43	0:0	4	.
water	27:44	0:0	4	g
op	27:46	0:0	4	-
water	27:48	0:0	4	g1_min
decl	28:8	28:54	4	int	b1_diff
op	28:20	0:0	4	=
water	28:22	0:0	4	rgb
op	28:25	0:0	4	[
water	28:26	0:0	4	bg
op	28:28	0:0	4	[
water	28:29	0:0	4	pat
op	28:32	0:0	4	]
op	28:33	0:0	4	.
water	28:34	0:0	4	rgb1_max
op	28:42	0:0	4	]
op	28:43	0:0	4	.
water	28:44	0:0	4	b
op	28:46	0:0	4	-
water	28:48	0:0	4	b1_min
decl	29:8	29:54	4	int	r2_diff
op	29:20	0:0	4	=
water	29:22	0:0	4	rgb
op	29:25	0:0	4	[
water	29:26	0:0	4	bg
op	29:28	0:0	4	[
water	29:29	0:0	4	pat
op	29:32	0:0	4	]
op	29:33	0:0	4	.
water	29:34	0:0	4	rgb2_max
op	29:42	0:0	4	]
op	29:43	0:0	4	.
water	29:44	0:0	4	r
op	29:46	0:0	4	-
water	29:48	0:0	4	r2_min
decl	30:8	30:54	4	int	g2_diff
op	30:20	0:0	4	=
water	30:22	0:0	4	rgb
op	30:25	0:0	4	[
water	30:26	0:0	4	bg
op	30:28	0:0	4	[
water	30:29	0:0	4	pat
op	30:32	0:0	4	]
op	30:33	0:0	4	.
water	30:34	0:0	4	rgb2_max
op	30:42	0:0	4	]
op	30:43	0:0	4	.
water	30:44	0:0	4	g
op	30:46	0:0	4	-
water	30:48	0:0	4	g2_min
decl	31:8	31:54	4	int	b2_diff
op	31:20	0:0	4	=
water	31:22	0:0	4	rgb
op	31:25	0:0	4	[
water	31:26	0:0	4	bg
op	31:28	0:0	4	[
water	31:29	0:0	4	pat
op	31:32	0:0	4	]
op	31:33	0:0	4	.
water	31:34	0:0	4	rgb2_max
op	31:42	0:0	4	]
op	31:43	0:0	4	.
water	31:44	0:0	4	b
op	31:46	0:0	4	-
water	31:48	0:0	4	b2_min
for	32:8	77:8	4	(row = 0 ;row < rpng2_info . height;++ row)
forinit	32:13	32:20	5	row = 0 ;
water	32:13	0:0	6	row
op	32:17	0:0	6	=
water	32:19	0:0	6	0
water	32:20	0:0	6	;
cond	32:23	32:40	5	row < rpng2_info . height
water	32:23	0:0	6	row
op	32:27	0:0	6	<
water	32:29	0:0	6	rpng2_info
op	32:39	0:0	6	.
water	32:40	0:0	6	height
forexpr	32:49	32:51	5	++ row
op	32:49	0:0	6	++
water	32:51	0:0	6	row
stmts	32:56	77:8	5	
water	32:56	0:0	6	{
water	33:12	0:0	6	yidx
op	33:17	0:0	6	=
call	33:19	33:38	6	(int)
arg	33:25	33:38	7	row%bgscale
water	33:25	0:0	8	row
op	33:29	0:0	8	%
water	33:31	0:0	8	bgscale
water	33:39	0:0	6	;
water	34:12	0:0	6	even_odd_vert
op	34:26	0:0	6	=
call	34:28	34:53	6	(int)
arg	34:34	34:53	7	(row/bgscale)&1
water	34:34	0:0	8	(
water	34:35	0:0	8	row
op	34:39	0:0	8	/
water	34:41	0:0	8	bgscale
water	34:48	0:0	8	)
op	34:50	0:0	8	&
water	34:52	0:0	8	1
water	34:54	0:0	6	;
water	35:12	0:0	6	r1
op	35:15	0:0	6	=
water	35:17	0:0	6	r1_min
op	35:24	0:0	6	+
water	35:26	0:0	6	(
water	35:27	0:0	6	r1_diff
op	35:35	0:0	6	*
water	35:37	0:0	6	yidx
water	35:41	0:0	6	)
op	35:43	0:0	6	/
water	35:45	0:0	6	yidx_max
water	35:53	0:0	6	;
water	36:12	0:0	6	g1
op	36:15	0:0	6	=
water	36:17	0:0	6	g1_min
op	36:24	0:0	6	+
water	36:26	0:0	6	(
water	36:27	0:0	6	g1_diff
op	36:35	0:0	6	*
water	36:37	0:0	6	yidx
water	36:41	0:0	6	)
op	36:43	0:0	6	/
water	36:45	0:0	6	yidx_max
water	36:53	0:0	6	;
water	37:12	0:0	6	b1
op	37:15	0:0	6	=
water	37:17	0:0	6	b1_min
op	37:24	0:0	6	+
water	37:26	0:0	6	(
water	37:27	0:0	6	b1_diff
op	37:35	0:0	6	*
water	37:37	0:0	6	yidx
water	37:41	0:0	6	)
op	37:43	0:0	6	/
water	37:45	0:0	6	yidx_max
water	37:53	0:0	6	;
water	38:12	0:0	6	r1_inv
op	38:19	0:0	6	=
water	38:21	0:0	6	r1_min
op	38:28	0:0	6	+
water	38:30	0:0	6	(
water	38:31	0:0	6	r1_diff
op	38:39	0:0	6	*
water	38:41	0:0	6	(
water	38:42	0:0	6	yidx_max
op	38:50	0:0	6	-
water	38:51	0:0	6	yidx
water	38:55	0:0	6	)
water	38:56	0:0	6	)
op	38:58	0:0	6	/
water	38:60	0:0	6	yidx_max
water	38:68	0:0	6	;
water	39:12	0:0	6	g1_inv
op	39:19	0:0	6	=
water	39:21	0:0	6	g1_min
op	39:28	0:0	6	+
water	39:30	0:0	6	(
water	39:31	0:0	6	g1_diff
op	39:39	0:0	6	*
water	39:41	0:0	6	(
water	39:42	0:0	6	yidx_max
op	39:50	0:0	6	-
water	39:51	0:0	6	yidx
water	39:55	0:0	6	)
water	39:56	0:0	6	)
op	39:58	0:0	6	/
water	39:60	0:0	6	yidx_max
water	39:68	0:0	6	;
water	40:12	0:0	6	b1_inv
op	40:19	0:0	6	=
water	40:21	0:0	6	b1_min
op	40:28	0:0	6	+
water	40:30	0:0	6	(
water	40:31	0:0	6	b1_diff
op	40:39	0:0	6	*
water	40:41	0:0	6	(
water	40:42	0:0	6	yidx_max
op	40:50	0:0	6	-
water	40:51	0:0	6	yidx
water	40:55	0:0	6	)
water	40:56	0:0	6	)
op	40:58	0:0	6	/
water	40:60	0:0	6	yidx_max
water	40:68	0:0	6	;
water	41:12	0:0	6	r2
op	41:15	0:0	6	=
water	41:17	0:0	6	r2_min
op	41:24	0:0	6	+
water	41:26	0:0	6	(
water	41:27	0:0	6	r2_diff
op	41:35	0:0	6	*
water	41:37	0:0	6	yidx
water	41:41	0:0	6	)
op	41:43	0:0	6	/
water	41:45	0:0	6	yidx_max
water	41:53	0:0	6	;
water	42:12	0:0	6	g2
op	42:15	0:0	6	=
water	42:17	0:0	6	g2_min
op	42:24	0:0	6	+
water	42:26	0:0	6	(
water	42:27	0:0	6	g2_diff
op	42:35	0:0	6	*
water	42:37	0:0	6	yidx
water	42:41	0:0	6	)
op	42:43	0:0	6	/
water	42:45	0:0	6	yidx_max
water	42:53	0:0	6	;
water	43:12	0:0	6	b2
op	43:15	0:0	6	=
water	43:17	0:0	6	b2_min
op	43:24	0:0	6	+
water	43:26	0:0	6	(
water	43:27	0:0	6	b2_diff
op	43:35	0:0	6	*
water	43:37	0:0	6	yidx
water	43:41	0:0	6	)
op	43:43	0:0	6	/
water	43:45	0:0	6	yidx_max
water	43:53	0:0	6	;
water	44:12	0:0	6	r2_inv
op	44:19	0:0	6	=
water	44:21	0:0	6	r2_min
op	44:28	0:0	6	+
water	44:30	0:0	6	(
water	44:31	0:0	6	r2_diff
op	44:39	0:0	6	*
water	44:41	0:0	6	(
water	44:42	0:0	6	yidx_max
op	44:50	0:0	6	-
water	44:51	0:0	6	yidx
water	44:55	0:0	6	)
water	44:56	0:0	6	)
op	44:58	0:0	6	/
water	44:60	0:0	6	yidx_max
water	44:68	0:0	6	;
water	45:12	0:0	6	g2_inv
op	45:19	0:0	6	=
water	45:21	0:0	6	g2_min
op	45:28	0:0	6	+
water	45:30	0:0	6	(
water	45:31	0:0	6	g2_diff
op	45:39	0:0	6	*
water	45:41	0:0	6	(
water	45:42	0:0	6	yidx_max
op	45:50	0:0	6	-
water	45:51	0:0	6	yidx
water	45:55	0:0	6	)
water	45:56	0:0	6	)
op	45:58	0:0	6	/
water	45:60	0:0	6	yidx_max
water	45:68	0:0	6	;
water	46:12	0:0	6	b2_inv
op	46:19	0:0	6	=
water	46:21	0:0	6	b2_min
op	46:28	0:0	6	+
water	46:30	0:0	6	(
water	46:31	0:0	6	b2_diff
op	46:39	0:0	6	*
water	46:41	0:0	6	(
water	46:42	0:0	6	yidx_max
op	46:50	0:0	6	-
water	46:51	0:0	6	yidx
water	46:55	0:0	6	)
water	46:56	0:0	6	)
op	46:58	0:0	6	/
water	46:60	0:0	6	yidx_max
water	46:68	0:0	6	;
water	47:12	0:0	6	dest
op	47:17	0:0	6	=
water	47:19	0:0	6	(
water	47:20	0:0	6	char
op	47:25	0:0	6	*
water	47:26	0:0	6	)
water	47:27	0:0	6	bg_data
op	47:35	0:0	6	+
water	47:37	0:0	6	row
op	47:40	0:0	6	*
water	47:41	0:0	6	bg_rowbytes
water	47:52	0:0	6	;
for	48:12	76:12	6	(i = 0 ;i < rpng2_info . width;++ i)
forinit	48:17	48:22	7	i = 0 ;
water	48:17	0:0	8	i
op	48:19	0:0	8	=
water	48:21	0:0	8	0
water	48:22	0:0	8	;
cond	48:25	48:40	7	i < rpng2_info . width
water	48:25	0:0	8	i
op	48:27	0:0	8	<
water	48:29	0:0	8	rpng2_info
op	48:39	0:0	8	.
water	48:40	0:0	8	width
forexpr	48:48	48:50	7	++ i
op	48:48	0:0	8	++
water	48:50	0:0	8	i
stmts	48:53	76:12	7	
water	48:53	0:0	8	{
water	49:16	0:0	8	even_odd_horiz
op	49:31	0:0	8	=
call	49:33	49:56	8	(int)
arg	49:39	49:56	9	(i/bgscale)&1
water	49:39	0:0	10	(
water	49:40	0:0	10	i
op	49:42	0:0	10	/
water	49:44	0:0	10	bgscale
water	49:51	0:0	10	)
op	49:53	0:0	10	&
water	49:55	0:0	10	1
water	49:57	0:0	8	;
water	50:16	0:0	8	even_odd
op	50:25	0:0	8	=
water	50:27	0:0	8	even_odd_vert
op	50:41	0:0	8	^
water	50:43	0:0	8	even_odd_horiz
water	50:57	0:0	8	;
water	51:16	0:0	8	invert_column
op	51:30	0:0	8	=
water	52:18	0:0	8	(
water	52:19	0:0	8	even_odd_horiz
op	52:34	0:0	8	&&
water	52:37	0:0	8	(
water	52:38	0:0	8	bg
op	52:40	0:0	8	[
water	52:41	0:0	8	pat
op	52:44	0:0	8	]
op	52:45	0:0	8	.
water	52:46	0:0	8	type
op	52:51	0:0	8	&
water	52:53	0:0	8	0
water	52:54	0:0	8	x10
water	52:57	0:0	8	)
water	52:58	0:0	8	)
water	52:59	0:0	8	;
if	53:16	63:16	8	(even_odd == 0)
cond	53:20	53:32	9	even_odd == 0
water	53:20	0:0	10	even_odd
op	53:29	0:0	10	==
water	53:32	0:0	10	0
stmts	53:35	63:16	9	
water	53:35	0:0	10	{
if	54:20	58:20	10	(invert_column)
cond	54:24	54:24	11	invert_column
water	54:24	0:0	12	invert_column
stmts	54:39	58:20	11	
water	54:39	0:0	12	{
op	55:24	0:0	12	*
water	55:25	0:0	12	dest
op	55:29	0:0	12	++
op	55:32	0:0	12	=
water	55:34	0:0	12	r1_inv
water	55:40	0:0	12	;
op	56:24	0:0	12	*
water	56:25	0:0	12	dest
op	56:29	0:0	12	++
op	56:32	0:0	12	=
water	56:34	0:0	12	g1_inv
water	56:40	0:0	12	;
op	57:24	0:0	12	*
water	57:25	0:0	12	dest
op	57:29	0:0	12	++
op	57:32	0:0	12	=
water	57:34	0:0	12	b1_inv
water	57:40	0:0	12	;
water	58:20	0:0	12	}
else	58:22	62:20	10
stmts	58:27	62:20	11	
water	58:27	0:0	12	{
op	59:24	0:0	12	*
water	59:25	0:0	12	dest
op	59:29	0:0	12	++
op	59:32	0:0	12	=
water	59:34	0:0	12	r1
water	59:36	0:0	12	;
op	60:24	0:0	12	*
water	60:25	0:0	12	dest
op	60:29	0:0	12	++
op	60:32	0:0	12	=
water	60:34	0:0	12	g1
water	60:36	0:0	12	;
op	61:24	0:0	12	*
water	61:25	0:0	12	dest
op	61:29	0:0	12	++
op	61:32	0:0	12	=
water	61:34	0:0	12	b1
water	61:36	0:0	12	;
water	62:20	0:0	12	}
water	63:16	0:0	10	}
else	63:18	75:16	8
stmts	63:23	75:16	9	
water	63:23	0:0	10	{
if	64:20	70:20	10	(( invert_column && invert_gradient2 ) || ( ! invert_column && ! invert_gradient2 ))
cond	64:24	65:60	11	( invert_column && invert_gradient2 ) || ( ! invert_column && ! invert_gradient2 )
water	64:24	0:0	12	(
water	64:25	0:0	12	invert_column
op	64:39	0:0	12	&&
water	64:42	0:0	12	invert_gradient2
water	64:58	0:0	12	)
op	64:60	0:0	12	||
water	65:24	0:0	12	(
op	65:25	0:0	12	!
water	65:26	0:0	12	invert_column
op	65:40	0:0	12	&&
op	65:43	0:0	12	!
water	65:44	0:0	12	invert_gradient2
water	65:60	0:0	12	)
stmts	66:20	70:20	11	
water	66:20	0:0	12	{
op	67:24	0:0	12	*
water	67:25	0:0	12	dest
op	67:29	0:0	12	++
op	67:32	0:0	12	=
water	67:34	0:0	12	r2
water	67:36	0:0	12	;
op	68:24	0:0	12	*
water	68:25	0:0	12	dest
op	68:29	0:0	12	++
op	68:32	0:0	12	=
water	68:34	0:0	12	g2
water	68:36	0:0	12	;
op	69:24	0:0	12	*
water	69:25	0:0	12	dest
op	69:29	0:0	12	++
op	69:32	0:0	12	=
water	69:34	0:0	12	b2
water	69:36	0:0	12	;
water	70:20	0:0	12	}
else	70:22	74:20	10
stmts	70:27	74:20	11	
water	70:27	0:0	12	{
op	71:24	0:0	12	*
water	71:25	0:0	12	dest
op	71:29	0:0	12	++
op	71:32	0:0	12	=
water	71:34	0:0	12	r2_inv
water	71:40	0:0	12	;
op	72:24	0:0	12	*
water	72:25	0:0	12	dest
op	72:29	0:0	12	++
op	72:32	0:0	12	=
water	72:34	0:0	12	g2_inv
water	72:40	0:0	12	;
op	73:24	0:0	12	*
water	73:25	0:0	12	dest
op	73:29	0:0	12	++
op	73:32	0:0	12	=
water	73:34	0:0	12	b2_inv
water	73:40	0:0	12	;
water	74:20	0:0	12	}
water	75:16	0:0	10	}
water	76:12	0:0	8	}
water	77:8	0:0	6	}
water	82:4	0:0	4	}
else	82:6	111:4	2
stmts	82:11	111:4	3	
if	82:11	111:4	4	(( bg [ pat ] . type & 0 x07 ) == 1)
cond	82:15	82:40	5	( bg [ pat ] . type & 0 x07 ) == 1
water	82:15	0:0	6	(
water	82:16	0:0	6	bg
op	82:18	0:0	6	[
water	82:19	0:0	6	pat
op	82:22	0:0	6	]
op	82:23	0:0	6	.
water	82:24	0:0	6	type
op	82:29	0:0	6	&
water	82:31	0:0	6	0
water	82:32	0:0	6	x07
water	82:35	0:0	6	)
op	82:37	0:0	6	==
water	82:40	0:0	6	1
stmts	82:43	111:4	5	
water	82:43	0:0	6	{
water	83:8	0:0	6	hmax
op	83:13	0:0	6	=
water	83:15	0:0	6	(
water	83:16	0:0	6	bgscale
op	83:23	0:0	6	-
water	83:24	0:0	6	1
water	83:25	0:0	6	)
op	83:26	0:0	6	/
water	83:27	0:0	6	2
water	83:28	0:0	6	;
water	84:8	0:0	6	max
op	84:12	0:0	6	=
water	84:14	0:0	6	2
op	84:15	0:0	6	*
water	84:16	0:0	6	hmax
water	84:20	0:0	6	;
water	85:8	0:0	6	r1
op	85:11	0:0	6	=
water	85:13	0:0	6	rgb
op	85:16	0:0	6	[
water	85:17	0:0	6	bg
op	85:19	0:0	6	[
water	85:20	0:0	6	pat
op	85:23	0:0	6	]
op	85:24	0:0	6	.
water	85:25	0:0	6	rgb1_max
op	85:33	0:0	6	]
op	85:34	0:0	6	.
water	85:35	0:0	6	r
water	85:36	0:0	6	;
water	86:8	0:0	6	g1
op	86:11	0:0	6	=
water	86:13	0:0	6	rgb
op	86:16	0:0	6	[
water	86:17	0:0	6	bg
op	86:19	0:0	6	[
water	86:20	0:0	6	pat
op	86:23	0:0	6	]
op	86:24	0:0	6	.
water	86:25	0:0	6	rgb1_max
op	86:33	0:0	6	]
op	86:34	0:0	6	.
water	86:35	0:0	6	g
water	86:36	0:0	6	;
water	87:8	0:0	6	b1
op	87:11	0:0	6	=
water	87:13	0:0	6	rgb
op	87:16	0:0	6	[
water	87:17	0:0	6	bg
op	87:19	0:0	6	[
water	87:20	0:0	6	pat
op	87:23	0:0	6	]
op	87:24	0:0	6	.
water	87:25	0:0	6	rgb1_max
op	87:33	0:0	6	]
op	87:34	0:0	6	.
water	87:35	0:0	6	b
water	87:36	0:0	6	;
water	88:8	0:0	6	r2
op	88:11	0:0	6	=
water	88:13	0:0	6	rgb
op	88:16	0:0	6	[
water	88:17	0:0	6	bg
op	88:19	0:0	6	[
water	88:20	0:0	6	pat
op	88:23	0:0	6	]
op	88:24	0:0	6	.
water	88:25	0:0	6	rgb2_max
op	88:33	0:0	6	]
op	88:34	0:0	6	.
water	88:35	0:0	6	r
water	88:36	0:0	6	;
water	89:8	0:0	6	g2
op	89:11	0:0	6	=
water	89:13	0:0	6	rgb
op	89:16	0:0	6	[
water	89:17	0:0	6	bg
op	89:19	0:0	6	[
water	89:20	0:0	6	pat
op	89:23	0:0	6	]
op	89:24	0:0	6	.
water	89:25	0:0	6	rgb2_max
op	89:33	0:0	6	]
op	89:34	0:0	6	.
water	89:35	0:0	6	g
water	89:36	0:0	6	;
water	90:8	0:0	6	b2
op	90:11	0:0	6	=
water	90:13	0:0	6	rgb
op	90:16	0:0	6	[
water	90:17	0:0	6	bg
op	90:19	0:0	6	[
water	90:20	0:0	6	pat
op	90:23	0:0	6	]
op	90:24	0:0	6	.
water	90:25	0:0	6	rgb2_max
op	90:33	0:0	6	]
op	90:34	0:0	6	.
water	90:35	0:0	6	b
water	90:36	0:0	6	;
for	91:8	105:8	6	(row = 0 ;row < rpng2_info . height;++ row)
forinit	91:13	91:20	7	row = 0 ;
water	91:13	0:0	8	row
op	91:17	0:0	8	=
water	91:19	0:0	8	0
water	91:20	0:0	8	;
cond	91:23	91:40	7	row < rpng2_info . height
water	91:23	0:0	8	row
op	91:27	0:0	8	<
water	91:29	0:0	8	rpng2_info
op	91:39	0:0	8	.
water	91:40	0:0	8	height
forexpr	91:49	91:51	7	++ row
op	91:49	0:0	8	++
water	91:51	0:0	8	row
stmts	91:56	105:8	7	
water	91:56	0:0	8	{
water	92:12	0:0	8	yidx
op	92:17	0:0	8	=
call	92:19	92:38	8	(int)
arg	92:25	92:38	9	row%bgscale
water	92:25	0:0	10	row
op	92:29	0:0	10	%
water	92:31	0:0	10	bgscale
water	92:39	0:0	8	;
if	93:12	94:39	8	(yidx > hmax)
cond	93:16	93:23	9	yidx > hmax
water	93:16	0:0	10	yidx
op	93:21	0:0	10	>
water	93:23	0:0	10	hmax
stmts	94:16	94:39	9	
water	94:16	0:0	10	yidx
op	94:21	0:0	10	=
water	94:23	0:0	10	bgscale
op	94:30	0:0	10	-
water	94:31	0:0	10	1
op	94:33	0:0	10	-
water	94:35	0:0	10	yidx
water	94:39	0:0	10	;
water	95:12	0:0	8	dest
op	95:17	0:0	8	=
water	95:19	0:0	8	(
water	95:20	0:0	8	char
op	95:25	0:0	8	*
water	95:26	0:0	8	)
water	95:27	0:0	8	bg_data
op	95:35	0:0	8	+
water	95:37	0:0	8	row
op	95:40	0:0	8	*
water	95:41	0:0	8	bg_rowbytes
water	95:52	0:0	8	;
for	96:12	104:12	8	(i = 0 ;i < rpng2_info . width;++ i)
forinit	96:17	96:22	9	i = 0 ;
water	96:17	0:0	10	i
op	96:19	0:0	10	=
water	96:21	0:0	10	0
water	96:22	0:0	10	;
cond	96:25	96:40	9	i < rpng2_info . width
water	96:25	0:0	10	i
op	96:27	0:0	10	<
water	96:29	0:0	10	rpng2_info
op	96:39	0:0	10	.
water	96:40	0:0	10	width
forexpr	96:48	96:50	9	++ i
op	96:48	0:0	10	++
water	96:50	0:0	10	i
stmts	96:53	104:12	9	
water	96:53	0:0	10	{
water	97:16	0:0	10	xidx
op	97:21	0:0	10	=
call	97:23	97:40	10	(int)
arg	97:29	97:40	11	i%bgscale
water	97:29	0:0	12	i
op	97:31	0:0	12	%
water	97:33	0:0	12	bgscale
water	97:41	0:0	10	;
if	98:16	99:43	10	(xidx > hmax)
cond	98:20	98:27	11	xidx > hmax
water	98:20	0:0	12	xidx
op	98:25	0:0	12	>
water	98:27	0:0	12	hmax
stmts	99:20	99:43	11	
water	99:20	0:0	12	xidx
op	99:25	0:0	12	=
water	99:27	0:0	12	bgscale
op	99:34	0:0	12	-
water	99:35	0:0	12	1
op	99:37	0:0	12	-
water	99:39	0:0	12	xidx
water	99:43	0:0	12	;
water	100:16	0:0	10	k
op	100:18	0:0	10	=
water	100:20	0:0	10	xidx
op	100:25	0:0	10	+
water	100:27	0:0	10	yidx
water	100:31	0:0	10	;
op	101:16	0:0	10	*
water	101:17	0:0	10	dest
op	101:21	0:0	10	++
op	101:24	0:0	10	=
water	101:26	0:0	10	(
water	101:27	0:0	10	k
op	101:28	0:0	10	*
water	101:29	0:0	10	r1
op	101:32	0:0	10	+
water	101:34	0:0	10	(
water	101:35	0:0	10	max
op	101:38	0:0	10	-
water	101:39	0:0	10	k
water	101:40	0:0	10	)
op	101:41	0:0	10	*
water	101:42	0:0	10	r2
water	101:44	0:0	10	)
op	101:46	0:0	10	/
water	101:48	0:0	10	max
water	101:51	0:0	10	;
op	102:16	0:0	10	*
water	102:17	0:0	10	dest
op	102:21	0:0	10	++
op	102:24	0:0	10	=
water	102:26	0:0	10	(
water	102:27	0:0	10	k
op	102:28	0:0	10	*
water	102:29	0:0	10	g1
op	102:32	0:0	10	+
water	102:34	0:0	10	(
water	102:35	0:0	10	max
op	102:38	0:0	10	-
water	102:39	0:0	10	k
water	102:40	0:0	10	)
op	102:41	0:0	10	*
water	102:42	0:0	10	g2
water	102:44	0:0	10	)
op	102:46	0:0	10	/
water	102:48	0:0	10	max
water	102:51	0:0	10	;
op	103:16	0:0	10	*
water	103:17	0:0	10	dest
op	103:21	0:0	10	++
op	103:24	0:0	10	=
water	103:26	0:0	10	(
water	103:27	0:0	10	k
op	103:28	0:0	10	*
water	103:29	0:0	10	b1
op	103:32	0:0	10	+
water	103:34	0:0	10	(
water	103:35	0:0	10	max
op	103:38	0:0	10	-
water	103:39	0:0	10	k
water	103:40	0:0	10	)
op	103:41	0:0	10	*
water	103:42	0:0	10	b2
water	103:44	0:0	10	)
op	103:46	0:0	10	/
water	103:48	0:0	10	max
water	103:51	0:0	10	;
water	104:12	0:0	10	}
water	105:8	0:0	8	}
water	111:4	0:0	6	}
else	111:6	176:4	2
stmts	111:11	176:4	3	
if	111:11	176:4	4	(( bg [ pat ] . type & 0 x07 ) == 2)
cond	111:15	111:40	5	( bg [ pat ] . type & 0 x07 ) == 2
water	111:15	0:0	6	(
water	111:16	0:0	6	bg
op	111:18	0:0	6	[
water	111:19	0:0	6	pat
op	111:22	0:0	6	]
op	111:23	0:0	6	.
water	111:24	0:0	6	type
op	111:29	0:0	6	&
water	111:31	0:0	6	0
water	111:32	0:0	6	x07
water	111:35	0:0	6	)
op	111:37	0:0	6	==
water	111:40	0:0	6	2
stmts	111:43	176:4	5	
water	111:43	0:0	6	{
decl	112:8	112:14	6	uch	ch
decl	113:8	113:38	6	int	ii
water	113:14	0:0	6	,
decl	113:8	113:38	6	int	x
water	113:17	0:0	6	,
decl	113:8	113:38	6	int	y
water	113:20	0:0	6	,
decl	113:8	113:38	6	int	hw
water	113:24	0:0	6	,
decl	113:8	113:38	6	int	hh
water	113:28	0:0	6	,
decl	113:8	113:38	6	int	grayspot
decl	114:8	114:54	6	double	freq
water	114:19	0:0	6	,
decl	114:8	114:54	6	double	rotate
water	114:27	0:0	6	,
decl	114:8	114:54	6	double	saturate
water	114:37	0:0	6	,
decl	114:8	114:54	6	double	gray
water	114:43	0:0	6	,
decl	114:8	114:54	6	double	intensity
decl	115:8	115:52	6	double	angle
op	115:20	0:0	6	=
water	115:21	0:0	6	0
op	115:22	0:0	6	.
water	115:23	0:0	6	0
water	115:24	0:0	6	,
decl	115:8	115:52	6	double	aoffset
op	115:33	0:0	6	=
water	115:34	0:0	6	0
op	115:35	0:0	6	.
water	115:36	0:0	6	0
water	115:37	0:0	6	,
decl	115:8	115:52	6	double	maxDist
water	115:46	0:0	6	,
decl	115:8	115:52	6	double	dist
decl	116:8	116:66	6	double	red
op	116:18	0:0	6	=
water	116:19	0:0	6	0
op	116:20	0:0	6	.
water	116:21	0:0	6	0
water	116:22	0:0	6	,
decl	116:8	116:66	6	double	green
op	116:29	0:0	6	=
water	116:30	0:0	6	0
op	116:31	0:0	6	.
water	116:32	0:0	6	0
water	116:33	0:0	6	,
decl	116:8	116:66	6	double	blue
op	116:39	0:0	6	=
water	116:40	0:0	6	0
op	116:41	0:0	6	.
water	116:42	0:0	6	0
water	116:43	0:0	6	,
decl	116:8	116:66	6	double	hue
water	116:48	0:0	6	,
decl	116:8	116:66	6	double	s
water	116:51	0:0	6	,
decl	116:8	116:66	6	double	v
water	116:54	0:0	6	,
decl	116:8	116:66	6	double	f
water	116:57	0:0	6	,
decl	116:8	116:66	6	double	p
water	116:60	0:0	6	,
decl	116:8	116:66	6	double	q
water	116:63	0:0	6	,
decl	116:8	116:66	6	double	t
water	117:8	0:0	6	hh
op	117:11	0:0	6	=
call	117:13	117:40	6	(int)
arg	117:19	117:40	7	rpng2_info.height/2
water	117:19	0:0	8	rpng2_info
op	117:29	0:0	8	.
water	117:30	0:0	8	height
op	117:37	0:0	8	/
water	117:39	0:0	8	2
water	117:41	0:0	6	;
water	118:8	0:0	6	hw
op	118:11	0:0	6	=
call	118:13	118:39	6	(int)
arg	118:19	118:39	7	rpng2_info.width/2
water	118:19	0:0	8	rpng2_info
op	118:29	0:0	8	.
water	118:30	0:0	8	width
op	118:36	0:0	8	/
water	118:38	0:0	8	2
water	118:40	0:0	6	;
water	126:8	0:0	6	angle
op	126:14	0:0	6	=
call	126:16	126:38	6	CLIP
arg	126:21	126:26	7	angle
water	126:21	0:0	8	angle
arg	126:28	126:31	7	0.0
water	126:28	0:0	8	0
op	126:29	0:0	8	.
water	126:30	0:0	8	0
arg	126:33	126:38	7	360.0
water	126:33	0:0	8	360
op	126:36	0:0	8	.
water	126:37	0:0	8	0
water	126:39	0:0	6	;
water	127:8	0:0	6	grayspot
op	127:17	0:0	6	=
call	127:19	127:53	6	CLIP
arg	127:24	127:39	7	bg[pat].bg_gray
water	127:24	0:0	8	bg
op	127:26	0:0	8	[
water	127:27	0:0	8	pat
op	127:30	0:0	8	]
op	127:31	0:0	8	.
water	127:32	0:0	8	bg_gray
arg	127:41	127:42	7	1
water	127:41	0:0	8	1
arg	127:44	127:53	7	(hh+hw)
water	127:44	0:0	8	(
water	127:45	0:0	8	hh
op	127:48	0:0	8	+
water	127:50	0:0	8	hw
water	127:52	0:0	8	)
water	127:54	0:0	6	;
water	128:8	0:0	6	freq
op	128:13	0:0	6	=
call	128:15	128:47	6	MAX
arg	128:19	128:42	7	(double)bg[pat].bg_freq
water	128:19	0:0	8	(
water	128:20	0:0	8	double
water	128:26	0:0	8	)
water	128:27	0:0	8	bg
op	128:29	0:0	8	[
water	128:30	0:0	8	pat
op	128:33	0:0	8	]
op	128:34	0:0	8	.
water	128:35	0:0	8	bg_freq
arg	128:44	128:47	7	0.0
water	128:44	0:0	8	0
op	128:45	0:0	8	.
water	128:46	0:0	8	0
water	128:48	0:0	6	;
water	129:8	0:0	6	saturate
op	129:17	0:0	6	=
water	129:19	0:0	6	(
water	129:20	0:0	6	double
water	129:26	0:0	6	)
water	129:27	0:0	6	bg
op	129:29	0:0	6	[
water	129:30	0:0	6	pat
op	129:33	0:0	6	]
op	129:34	0:0	6	.
water	129:35	0:0	6	bg_bsat
op	129:43	0:0	6	*
water	129:45	0:0	6	0
op	129:46	0:0	6	.
water	129:47	0:0	6	1
water	129:48	0:0	6	;
water	130:8	0:0	6	rotate
op	130:15	0:0	6	=
water	130:17	0:0	6	(
water	130:18	0:0	6	double
water	130:24	0:0	6	)
water	130:25	0:0	6	bg
op	130:27	0:0	6	[
water	130:28	0:0	6	pat
op	130:31	0:0	6	]
op	130:32	0:0	6	.
water	130:33	0:0	6	bg_brot
op	130:41	0:0	6	*
water	130:43	0:0	6	0
op	130:44	0:0	6	.
water	130:45	0:0	6	1
water	130:46	0:0	6	;
water	131:8	0:0	6	gray
op	131:13	0:0	6	=
water	131:15	0:0	6	0
op	131:16	0:0	6	.
water	131:17	0:0	6	0
water	131:18	0:0	6	;
water	132:8	0:0	6	intensity
op	132:18	0:0	6	=
water	132:20	0:0	6	0
op	132:21	0:0	6	.
water	132:22	0:0	6	0
water	132:23	0:0	6	;
water	133:8	0:0	6	maxDist
op	133:16	0:0	6	=
call	133:18	133:44	6	(double)
arg	133:27	133:44	7	(hw*hw)+(hh*hh)
water	133:27	0:0	8	(
water	133:28	0:0	8	hw
op	133:30	0:0	8	*
water	133:31	0:0	8	hw
water	133:33	0:0	8	)
op	133:35	0:0	8	+
water	133:37	0:0	8	(
water	133:38	0:0	8	hh
op	133:40	0:0	8	*
water	133:41	0:0	8	hh
water	133:43	0:0	8	)
water	133:45	0:0	6	;
for	134:8	175:8	6	(row = 0 ;row < rpng2_info . height;++ row)
forinit	134:13	134:20	7	row = 0 ;
water	134:13	0:0	8	row
op	134:17	0:0	8	=
water	134:19	0:0	8	0
water	134:20	0:0	8	;
cond	134:23	134:40	7	row < rpng2_info . height
water	134:23	0:0	8	row
op	134:27	0:0	8	<
water	134:29	0:0	8	rpng2_info
op	134:39	0:0	8	.
water	134:40	0:0	8	height
forexpr	134:49	134:51	7	++ row
op	134:49	0:0	8	++
water	134:51	0:0	8	row
stmts	134:56	175:8	7	
water	134:56	0:0	8	{
water	135:12	0:0	8	y
op	135:14	0:0	8	=
call	135:16	135:30	8	(int)
arg	135:22	135:30	9	row-hh
water	135:22	0:0	10	row
op	135:26	0:0	10	-
water	135:28	0:0	10	hh
water	135:31	0:0	8	;
water	136:12	0:0	8	dest
op	136:17	0:0	8	=
water	136:19	0:0	8	(
water	136:20	0:0	8	char
op	136:25	0:0	8	*
water	136:26	0:0	8	)
water	136:27	0:0	8	bg_data
op	136:35	0:0	8	+
water	136:37	0:0	8	row
op	136:40	0:0	8	*
water	136:41	0:0	8	bg_rowbytes
water	136:52	0:0	8	;
for	137:12	174:12	8	(i = 0 ;i < rpng2_info . width;++ i)
forinit	137:17	137:22	9	i = 0 ;
water	137:17	0:0	10	i
op	137:19	0:0	10	=
water	137:21	0:0	10	0
water	137:22	0:0	10	;
cond	137:25	137:40	9	i < rpng2_info . width
water	137:25	0:0	10	i
op	137:27	0:0	10	<
water	137:29	0:0	10	rpng2_info
op	137:39	0:0	10	.
water	137:40	0:0	10	width
forexpr	137:48	137:50	9	++ i
op	137:48	0:0	10	++
water	137:50	0:0	10	i
stmts	137:53	174:12	9	
water	137:53	0:0	10	{
water	138:16	0:0	10	x
op	138:18	0:0	10	=
call	138:20	138:32	10	(int)
arg	138:26	138:32	11	i-hw
water	138:26	0:0	12	i
op	138:28	0:0	12	-
water	138:30	0:0	12	hw
water	138:33	0:0	10	;
water	139:16	0:0	10	angle
op	139:22	0:0	10	=
water	139:24	0:0	10	(
water	139:25	0:0	10	x
op	139:27	0:0	10	==
water	139:30	0:0	10	0
water	139:31	0:0	10	)
water	139:32	0:0	10	?
water	139:34	0:0	10	PI_2
water	139:39	0:0	10	:
call	139:41	139:67	10	atan
arg	139:46	139:67	11	(double)y/(double)x
water	139:46	0:0	12	(
water	139:47	0:0	12	double
water	139:53	0:0	12	)
water	139:54	0:0	12	y
op	139:56	0:0	12	/
water	139:58	0:0	12	(
water	139:59	0:0	12	double
water	139:65	0:0	12	)
water	139:66	0:0	12	x
water	139:68	0:0	10	;
water	140:16	0:0	10	gray
op	140:21	0:0	10	=
water	140:23	0:0	10	(
water	140:24	0:0	10	double
water	140:30	0:0	10	)
call	140:31	140:49	10	MAX
arg	140:35	140:41	11	ABS(y)
call	140:35	140:40	12	ABS
arg	140:39	140:40	13	y
water	140:39	0:0	14	y
arg	140:43	140:49	11	ABS(x)
call	140:43	140:48	12	ABS
arg	140:47	140:48	13	x
water	140:47	0:0	14	x
op	140:51	0:0	10	/
water	140:53	0:0	10	grayspot
water	140:61	0:0	10	;
water	141:16	0:0	10	gray
op	141:21	0:0	10	=
call	141:23	141:36	10	MIN
arg	141:27	141:30	11	1.0
water	141:27	0:0	12	1
op	141:28	0:0	12	.
water	141:29	0:0	12	0
arg	141:32	141:36	11	gray
water	141:32	0:0	12	gray
water	141:37	0:0	10	;
water	142:16	0:0	10	dist
op	142:21	0:0	10	=
call	142:23	142:45	10	(double)
arg	142:32	142:45	11	(x*x)+(y*y)
water	142:32	0:0	12	(
water	142:33	0:0	12	x
op	142:34	0:0	12	*
water	142:35	0:0	12	x
water	142:36	0:0	12	)
op	142:38	0:0	12	+
water	142:40	0:0	12	(
water	142:41	0:0	12	y
op	142:42	0:0	12	*
water	142:43	0:0	12	y
water	142:44	0:0	12	)
op	142:47	0:0	10	/
water	142:49	0:0	10	maxDist
water	142:56	0:0	10	;
water	143:16	0:0	10	intensity
op	143:26	0:0	10	=
call	143:28	143:63	10	cos
arg	143:32	143:63	11	(angle+(rotate*dist*PI))*freq
water	143:32	0:0	12	(
water	143:33	0:0	12	angle
op	143:38	0:0	12	+
water	143:39	0:0	12	(
water	143:40	0:0	12	rotate
op	143:46	0:0	12	*
water	143:47	0:0	12	dist
op	143:51	0:0	12	*
water	143:52	0:0	12	PI
water	143:54	0:0	12	)
water	143:55	0:0	12	)
op	143:57	0:0	12	*
water	143:59	0:0	12	freq
op	143:65	0:0	10	*
water	144:18	0:0	10	gray
op	144:23	0:0	10	*
water	144:25	0:0	10	saturate
water	144:33	0:0	10	;
water	145:16	0:0	10	intensity
op	145:26	0:0	10	=
water	145:28	0:0	10	(
call	145:29	145:56	10	MAX
arg	145:33	145:51	11	MIN(intensity,1.0)
call	145:33	145:50	12	MIN
arg	145:37	145:46	13	intensity
water	145:37	0:0	14	intensity
arg	145:47	145:50	13	1.0
water	145:47	0:0	14	1
op	145:48	0:0	14	.
water	145:49	0:0	14	0
arg	145:52	145:56	11	-1.0
op	145:52	0:0	12	-
water	145:53	0:0	12	1
op	145:54	0:0	12	.
water	145:55	0:0	12	0
op	145:58	0:0	10	+
water	145:60	0:0	10	1
op	145:61	0:0	10	.
water	145:62	0:0	10	0
water	145:63	0:0	10	)
op	145:65	0:0	10	*
water	145:67	0:0	10	0
op	145:68	0:0	10	.
water	145:69	0:0	10	5
water	145:70	0:0	10	;
water	146:16	0:0	10	hue
op	146:20	0:0	10	=
water	146:22	0:0	10	(
water	146:23	0:0	10	angle
op	146:29	0:0	10	+
water	146:31	0:0	10	PI
water	146:33	0:0	10	)
op	146:35	0:0	10	*
water	146:37	0:0	10	INV_PI_360
op	146:48	0:0	10	+
water	146:50	0:0	10	aoffset
water	146:57	0:0	10	;
water	147:16	0:0	10	s
op	147:18	0:0	10	=
water	147:20	0:0	10	gray
op	147:25	0:0	10	*
water	147:27	0:0	10	(
call	147:28	147:50	10	(double)
arg	147:37	147:50	11	ABS(x)+ABS(y)
call	147:37	147:42	12	ABS
arg	147:41	147:42	13	x
water	147:41	0:0	14	x
op	147:43	0:0	12	+
call	147:44	147:49	12	ABS
arg	147:48	147:49	13	y
water	147:48	0:0	14	y
op	147:52	0:0	10	/
call	147:54	147:70	10	(double)
arg	147:63	147:70	11	hw+hh
water	147:63	0:0	12	hw
op	147:66	0:0	12	+
water	147:68	0:0	12	hh
water	147:71	0:0	10	)
water	147:72	0:0	10	;
water	148:16	0:0	10	s
op	148:18	0:0	10	=
call	148:20	148:39	10	MIN
arg	148:24	148:34	11	MAX(s,0.0)
call	148:24	148:33	12	MAX
arg	148:28	148:29	13	s
water	148:28	0:0	14	s
arg	148:30	148:33	13	0.0
water	148:30	0:0	14	0
op	148:31	0:0	14	.
water	148:32	0:0	14	0
arg	148:36	148:39	11	1.0
water	148:36	0:0	12	1
op	148:37	0:0	12	.
water	148:38	0:0	12	0
water	148:40	0:0	10	;
water	149:16	0:0	10	v
op	149:18	0:0	10	=
call	149:20	149:47	10	MIN
arg	149:24	149:42	11	MAX(intensity,0.0)
call	149:24	149:41	12	MAX
arg	149:28	149:37	13	intensity
water	149:28	0:0	14	intensity
arg	149:38	149:41	13	0.0
water	149:38	0:0	14	0
op	149:39	0:0	14	.
water	149:40	0:0	14	0
arg	149:44	149:47	11	1.0
water	149:44	0:0	12	1
op	149:45	0:0	12	.
water	149:46	0:0	12	0
water	149:48	0:0	10	;
if	150:16	155:16	10	(s == 0 . 0)
cond	150:20	150:27	11	s == 0 . 0
water	150:20	0:0	12	s
op	150:22	0:0	12	==
water	150:25	0:0	12	0
op	150:26	0:0	12	.
water	150:27	0:0	12	0
stmts	150:30	155:16	11	
water	150:30	0:0	12	{
water	151:20	0:0	12	ch
op	151:23	0:0	12	=
call	151:25	151:40	12	(uch)
arg	151:31	151:40	13	v*255.0
water	151:31	0:0	14	v
op	151:33	0:0	14	*
water	151:35	0:0	14	255
op	151:38	0:0	14	.
water	151:39	0:0	14	0
water	151:41	0:0	12	;
op	152:20	0:0	12	*
water	152:21	0:0	12	dest
op	152:25	0:0	12	++
op	152:28	0:0	12	=
water	152:30	0:0	12	ch
water	152:32	0:0	12	;
op	153:20	0:0	12	*
water	153:21	0:0	12	dest
op	153:25	0:0	12	++
op	153:28	0:0	12	=
water	153:30	0:0	12	ch
water	153:32	0:0	12	;
op	154:20	0:0	12	*
water	154:21	0:0	12	dest
op	154:25	0:0	12	++
op	154:28	0:0	12	=
water	154:30	0:0	12	ch
water	154:32	0:0	12	;
water	155:16	0:0	12	}
else	155:18	173:16	10
stmts	155:23	173:16	11	
water	155:23	0:0	12	{
if	156:20	157:61	12	(( hue < 0 . 0 ) || ( hue >= 360 . 0 ))
cond	156:24	156:52	13	( hue < 0 . 0 ) || ( hue >= 360 . 0 )
water	156:24	0:0	14	(
water	156:25	0:0	14	hue
op	156:29	0:0	14	<
water	156:31	0:0	14	0
op	156:32	0:0	14	.
water	156:33	0:0	14	0
water	156:34	0:0	14	)
op	156:36	0:0	14	||
water	156:39	0:0	14	(
water	156:40	0:0	14	hue
op	156:44	0:0	14	>=
water	156:47	0:0	14	360
op	156:50	0:0	14	.
water	156:51	0:0	14	0
water	156:52	0:0	14	)
stmts	157:24	157:61	13	
water	157:24	0:0	14	hue
op	157:28	0:0	14	-=
water	157:31	0:0	14	(
water	157:32	0:0	14	(
call	157:33	157:50	14	(int)
arg	157:39	157:50	15	hue/360.0
water	157:39	0:0	16	hue
op	157:43	0:0	16	/
water	157:45	0:0	16	360
op	157:48	0:0	16	.
water	157:49	0:0	16	0
water	157:51	0:0	14	)
op	157:53	0:0	14	*
water	157:55	0:0	14	360
op	157:58	0:0	14	.
water	157:59	0:0	14	0
water	157:60	0:0	14	)
water	157:61	0:0	14	;
water	158:20	0:0	12	hue
op	158:24	0:0	12	/=
water	158:27	0:0	12	60
op	158:29	0:0	12	.
water	158:30	0:0	12	0
water	158:31	0:0	12	;
water	159:20	0:0	12	ii
op	159:23	0:0	12	=
water	159:25	0:0	12	(
water	159:26	0:0	12	int
water	159:29	0:0	12	)
water	159:30	0:0	12	hue
water	159:33	0:0	12	;
water	160:20	0:0	12	f
op	160:22	0:0	12	=
water	160:24	0:0	12	hue
op	160:28	0:0	12	-
water	160:30	0:0	12	(
water	160:31	0:0	12	double
water	160:37	0:0	12	)
water	160:38	0:0	12	ii
water	160:40	0:0	12	;
water	161:20	0:0	12	p
op	161:22	0:0	12	=
water	161:24	0:0	12	(
water	161:25	0:0	12	1
op	161:26	0:0	12	.
water	161:27	0:0	12	0
op	161:29	0:0	12	-
water	161:31	0:0	12	s
water	161:32	0:0	12	)
op	161:34	0:0	12	*
water	161:36	0:0	12	v
water	161:37	0:0	12	;
water	162:20	0:0	12	q
op	162:22	0:0	12	=
water	162:24	0:0	12	(
water	162:25	0:0	12	1
op	162:26	0:0	12	.
water	162:27	0:0	12	0
op	162:29	0:0	12	-
water	162:31	0:0	12	(
water	162:32	0:0	12	s
op	162:34	0:0	12	*
water	162:36	0:0	12	f
water	162:37	0:0	12	)
water	162:38	0:0	12	)
op	162:40	0:0	12	*
water	162:42	0:0	12	v
water	162:43	0:0	12	;
water	163:20	0:0	12	t
op	163:22	0:0	12	=
water	163:24	0:0	12	(
water	163:25	0:0	12	1
op	163:26	0:0	12	.
water	163:27	0:0	12	0
op	163:29	0:0	12	-
water	163:31	0:0	12	(
water	163:32	0:0	12	s
op	163:34	0:0	12	*
water	163:36	0:0	12	(
water	163:37	0:0	12	1
op	163:38	0:0	12	.
water	163:39	0:0	12	0
op	163:41	0:0	12	-
water	163:43	0:0	12	f
water	163:44	0:0	12	)
water	163:45	0:0	12	)
water	163:46	0:0	12	)
op	163:48	0:0	12	*
water	163:50	0:0	12	v
water	163:51	0:0	12	;
if	164:20	164:70	12	(ii == 0)
cond	164:29	164:35	13	ii == 0
water	164:29	0:0	14	ii
op	164:32	0:0	14	==
water	164:35	0:0	14	0
stmts	164:38	164:70	13	
water	164:38	0:0	14	{
water	164:40	0:0	14	red
op	164:44	0:0	14	=
water	164:46	0:0	14	v
water	164:47	0:0	14	;
water	164:49	0:0	14	green
op	164:55	0:0	14	=
water	164:57	0:0	14	t
water	164:58	0:0	14	;
water	164:60	0:0	14	blue
op	164:65	0:0	14	=
water	164:67	0:0	14	p
water	164:68	0:0	14	;
water	164:70	0:0	14	}
else	165:20	165:70	12
stmts	165:25	165:70	13	
if	165:25	165:70	14	(ii == 1)
cond	165:29	165:35	15	ii == 1
water	165:29	0:0	16	ii
op	165:32	0:0	16	==
water	165:35	0:0	16	1
stmts	165:38	165:70	15	
water	165:38	0:0	16	{
water	165:40	0:0	16	red
op	165:44	0:0	16	=
water	165:46	0:0	16	q
water	165:47	0:0	16	;
water	165:49	0:0	16	green
op	165:55	0:0	16	=
water	165:57	0:0	16	v
water	165:58	0:0	16	;
water	165:60	0:0	16	blue
op	165:65	0:0	16	=
water	165:67	0:0	16	p
water	165:68	0:0	16	;
water	165:70	0:0	16	}
else	166:20	166:70	12
stmts	166:25	166:70	13	
if	166:25	166:70	14	(ii == 2)
cond	166:29	166:35	15	ii == 2
water	166:29	0:0	16	ii
op	166:32	0:0	16	==
water	166:35	0:0	16	2
stmts	166:38	166:70	15	
water	166:38	0:0	16	{
water	166:40	0:0	16	red
op	166:44	0:0	16	=
water	166:46	0:0	16	p
water	166:47	0:0	16	;
water	166:49	0:0	16	green
op	166:55	0:0	16	=
water	166:57	0:0	16	v
water	166:58	0:0	16	;
water	166:60	0:0	16	blue
op	166:65	0:0	16	=
water	166:67	0:0	16	t
water	166:68	0:0	16	;
water	166:70	0:0	16	}
else	167:20	167:70	12
stmts	167:25	167:70	13	
if	167:25	167:70	14	(ii == 3)
cond	167:29	167:35	15	ii == 3
water	167:29	0:0	16	ii
op	167:32	0:0	16	==
water	167:35	0:0	16	3
stmts	167:38	167:70	15	
water	167:38	0:0	16	{
water	167:40	0:0	16	red
op	167:44	0:0	16	=
water	167:46	0:0	16	p
water	167:47	0:0	16	;
water	167:49	0:0	16	green
op	167:55	0:0	16	=
water	167:57	0:0	16	q
water	167:58	0:0	16	;
water	167:60	0:0	16	blue
op	167:65	0:0	16	=
water	167:67	0:0	16	v
water	167:68	0:0	16	;
water	167:70	0:0	16	}
else	168:20	168:70	12
stmts	168:25	168:70	13	
if	168:25	168:70	14	(ii == 4)
cond	168:29	168:35	15	ii == 4
water	168:29	0:0	16	ii
op	168:32	0:0	16	==
water	168:35	0:0	16	4
stmts	168:38	168:70	15	
water	168:38	0:0	16	{
water	168:40	0:0	16	red
op	168:44	0:0	16	=
water	168:46	0:0	16	t
water	168:47	0:0	16	;
water	168:49	0:0	16	green
op	168:55	0:0	16	=
water	168:57	0:0	16	p
water	168:58	0:0	16	;
water	168:60	0:0	16	blue
op	168:65	0:0	16	=
water	168:67	0:0	16	v
water	168:68	0:0	16	;
water	168:70	0:0	16	}
else	169:20	169:70	12
stmts	169:25	169:70	13	
if	169:25	169:70	14	(ii == 5)
cond	169:29	169:35	15	ii == 5
water	169:29	0:0	16	ii
op	169:32	0:0	16	==
water	169:35	0:0	16	5
stmts	169:38	169:70	15	
water	169:38	0:0	16	{
water	169:40	0:0	16	red
op	169:44	0:0	16	=
water	169:46	0:0	16	v
water	169:47	0:0	16	;
water	169:49	0:0	16	green
op	169:55	0:0	16	=
water	169:57	0:0	16	p
water	169:58	0:0	16	;
water	169:60	0:0	16	blue
op	169:65	0:0	16	=
water	169:67	0:0	16	q
water	169:68	0:0	16	;
water	169:70	0:0	16	}
op	170:20	0:0	12	*
water	170:21	0:0	12	dest
op	170:25	0:0	12	++
op	170:28	0:0	12	=
call	170:30	170:47	12	(uch)
arg	170:36	170:47	13	red*255.0
water	170:36	0:0	14	red
op	170:40	0:0	14	*
water	170:42	0:0	14	255
op	170:45	0:0	14	.
water	170:46	0:0	14	0
water	170:48	0:0	12	;
op	171:20	0:0	12	*
water	171:21	0:0	12	dest
op	171:25	0:0	12	++
op	171:28	0:0	12	=
call	171:30	171:49	12	(uch)
arg	171:36	171:49	13	green*255.0
water	171:36	0:0	14	green
op	171:42	0:0	14	*
water	171:44	0:0	14	255
op	171:47	0:0	14	.
water	171:48	0:0	14	0
water	171:50	0:0	12	;
op	172:20	0:0	12	*
water	172:21	0:0	12	dest
op	172:25	0:0	12	++
op	172:28	0:0	12	=
call	172:30	172:48	12	(uch)
arg	172:36	172:48	13	blue*255.0
water	172:36	0:0	14	blue
op	172:41	0:0	14	*
water	172:43	0:0	14	255
op	172:46	0:0	14	.
water	172:47	0:0	14	0
water	172:49	0:0	12	;
water	173:16	0:0	12	}
water	174:12	0:0	10	}
water	175:8	0:0	8	}
water	176:4	0:0	6	}

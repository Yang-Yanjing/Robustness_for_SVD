decl	1:4	1:22	0	unexpected	pnmtype
func	2:0	130:0	0	int	writepng_init
params	2:17	0:0	1	
param	2:18	2:45	2	mainprog_info *	mainprog_ptr
stmnts	0:0	129:12	1	
decl	4:4	4:24	2	png_structp	png_ptr
decl	5:4	5:23	2	png_infop	info_ptr
decl	6:4	6:34	2	int	color_type
water	6:18	0:0	2	,
decl	6:4	6:34	2	int	interlace_type
water	8:4	0:0	2	png_ptr
op	8:12	0:0	2	=
call	8:14	9:34	2	png_create_write_struct
arg	8:38	8:59	3	PNG_LIBPNG_VER_STRING
water	8:38	0:0	4	PNG_LIBPNG_VER_STRING
arg	8:61	8:73	3	mainprog_ptr
water	8:61	0:0	4	mainprog_ptr
arg	9:6	9:28	3	writepng_error_handler
water	9:6	0:0	4	writepng_error_handler
arg	9:30	9:34	3	NULL
water	9:30	0:0	4	NULL
water	9:35	0:0	2	;
if	10:4	11:16	2	(! png_ptr)
cond	10:8	10:9	3	! png_ptr
op	10:8	0:0	4	!
water	10:9	0:0	4	png_ptr
stmts	11:8	11:16	3	
return	11:8	11:16	4	4
water	11:15	0:0	5	4
water	12:4	0:0	2	info_ptr
op	12:13	0:0	2	=
call	12:15	12:45	2	png_create_info_struct
arg	12:38	12:45	3	png_ptr
water	12:38	0:0	4	png_ptr
water	12:46	0:0	2	;
if	13:4	16:4	2	(! info_ptr)
cond	13:8	13:9	3	! info_ptr
op	13:8	0:0	4	!
water	13:9	0:0	4	info_ptr
stmts	13:19	16:4	3	
water	13:19	0:0	4	{
call	14:8	14:47	4	png_destroy_write_struct
arg	14:33	14:41	5	&png_ptr
op	14:33	0:0	6	&
water	14:34	0:0	6	png_ptr
arg	14:43	14:47	5	NULL
water	14:43	0:0	6	NULL
water	14:48	0:0	4	;
return	15:8	15:16	4	4
water	15:15	0:0	5	4
water	16:4	0:0	4	}
if	22:4	25:4	2	(setjmp (mainprog_ptr -> jmpbuf ))
cond	22:8	22:35	3	setjmp (mainprog_ptr -> jmpbuf )
call	22:8	22:35	4	setjmp
arg	22:15	22:35	5	mainprog_ptr->jmpbuf
water	22:15	0:0	6	mainprog_ptr
op	22:27	0:0	6	->
water	22:29	0:0	6	jmpbuf
stmts	22:38	25:4	3	
water	22:38	0:0	4	{
call	23:8	23:52	4	png_destroy_write_struct
arg	23:33	23:41	5	&png_ptr
op	23:33	0:0	6	&
water	23:34	0:0	6	png_ptr
arg	23:43	23:52	5	&info_ptr
op	23:43	0:0	6	&
water	23:44	0:0	6	info_ptr
water	23:53	0:0	4	;
return	24:8	24:16	4	2
water	24:15	0:0	5	2
water	25:4	0:0	4	}
call	27:4	27:46	2	png_init_io
arg	27:16	27:23	3	png_ptr
water	27:16	0:0	4	png_ptr
arg	27:25	27:46	3	mainprog_ptr->outfile
water	27:25	0:0	4	mainprog_ptr
op	27:37	0:0	4	->
water	27:39	0:0	4	outfile
water	27:47	0:0	2	;
call	34:4	34:57	2	png_set_compression_level
arg	34:30	34:37	3	png_ptr
water	34:30	0:0	4	png_ptr
arg	34:39	34:57	3	Z_BEST_COMPRESSION
water	34:39	0:0	4	Z_BEST_COMPRESSION
water	34:58	0:0	2	;
if	44:4	45:40	2	(mainprog_ptr -> pnmtype == 5)
cond	44:8	44:33	3	mainprog_ptr -> pnmtype == 5
water	44:8	0:0	4	mainprog_ptr
op	44:20	0:0	4	->
water	44:22	0:0	4	pnmtype
op	44:30	0:0	4	==
water	44:33	0:0	4	5
stmts	45:8	45:40	3	
water	45:8	0:0	4	color_type
op	45:19	0:0	4	=
water	45:21	0:0	4	PNG_COLOR_TYPE_GRAY
water	45:40	0:0	4	;
else	46:4	47:39	2
stmts	46:9	47:39	3	
if	46:9	47:39	4	(mainprog_ptr -> pnmtype == 6)
cond	46:13	46:38	5	mainprog_ptr -> pnmtype == 6
water	46:13	0:0	6	mainprog_ptr
op	46:25	0:0	6	->
water	46:27	0:0	6	pnmtype
op	46:35	0:0	6	==
water	46:38	0:0	6	6
stmts	47:8	47:39	5	
water	47:8	0:0	6	color_type
op	47:19	0:0	6	=
water	47:21	0:0	6	PNG_COLOR_TYPE_RGB
water	47:39	0:0	6	;
else	48:4	49:45	2
stmts	48:9	49:45	3	
if	48:9	49:45	4	(mainprog_ptr -> pnmtype == 8)
cond	48:13	48:38	5	mainprog_ptr -> pnmtype == 8
water	48:13	0:0	6	mainprog_ptr
op	48:25	0:0	6	->
water	48:27	0:0	6	pnmtype
op	48:35	0:0	6	==
water	48:38	0:0	6	8
stmts	49:8	49:45	5	
water	49:8	0:0	6	color_type
op	49:19	0:0	6	=
water	49:21	0:0	6	PNG_COLOR_TYPE_RGB_ALPHA
water	49:45	0:0	6	;
else	50:4	53:4	2
stmts	50:9	53:4	3	
water	50:9	0:0	4	{
call	51:8	51:52	4	png_destroy_write_struct
arg	51:33	51:41	5	&png_ptr
op	51:33	0:0	6	&
water	51:34	0:0	6	png_ptr
arg	51:43	51:52	5	&info_ptr
op	51:43	0:0	6	&
water	51:44	0:0	6	info_ptr
water	51:53	0:0	4	;
return	52:8	52:17	4	11
water	52:15	0:0	5	11
water	53:4	0:0	4	}
water	54:4	0:0	2	interlace_type
op	54:19	0:0	2	=
water	54:21	0:0	2	mainprog_ptr
op	54:33	0:0	2	->
water	54:35	0:0	2	interlaced
water	54:45	0:0	2	?
water	54:47	0:0	2	PNG_INTERLACE_ADAM7
water	54:67	0:0	2	:
water	55:47	0:0	2	PNG_INTERLACE_NONE
water	55:65	0:0	2	;
call	56:4	58:59	2	png_set_IHDR
arg	56:17	56:24	3	png_ptr
water	56:17	0:0	4	png_ptr
arg	56:26	56:34	3	info_ptr
water	56:26	0:0	4	info_ptr
arg	56:36	56:55	3	mainprog_ptr->width
water	56:36	0:0	4	mainprog_ptr
op	56:48	0:0	4	->
water	56:50	0:0	4	width
arg	56:57	56:77	3	mainprog_ptr->height
water	56:57	0:0	4	mainprog_ptr
op	56:69	0:0	4	->
water	56:71	0:0	4	height
arg	57:6	57:32	3	mainprog_ptr->sample_depth
water	57:6	0:0	4	mainprog_ptr
op	57:18	0:0	4	->
water	57:20	0:0	4	sample_depth
arg	57:34	57:44	3	color_type
water	57:34	0:0	4	color_type
arg	57:46	57:60	3	interlace_type
water	57:46	0:0	4	interlace_type
arg	58:6	58:34	3	PNG_COMPRESSION_TYPE_DEFAULT
water	58:6	0:0	4	PNG_COMPRESSION_TYPE_DEFAULT
arg	58:36	58:59	3	PNG_FILTER_TYPE_DEFAULT
water	58:36	0:0	4	PNG_FILTER_TYPE_DEFAULT
water	58:60	0:0	2	;
if	59:4	60:60	2	(mainprog_ptr -> gamma > 0 . 0)
cond	59:8	59:32	3	mainprog_ptr -> gamma > 0 . 0
water	59:8	0:0	4	mainprog_ptr
op	59:20	0:0	4	->
water	59:22	0:0	4	gamma
op	59:28	0:0	4	>
water	59:30	0:0	4	0
op	59:31	0:0	4	.
water	59:32	0:0	4	0
stmts	60:8	60:60	3	
call	60:8	60:59	4	png_set_gAMA
arg	60:21	60:28	5	png_ptr
water	60:21	0:0	6	png_ptr
arg	60:30	60:38	5	info_ptr
water	60:30	0:0	6	info_ptr
arg	60:40	60:59	5	mainprog_ptr->gamma
water	60:40	0:0	6	mainprog_ptr
op	60:52	0:0	6	->
water	60:54	0:0	6	gamma
water	60:60	0:0	4	;
if	61:4	67:4	2	(mainprog_ptr -> have_bg)
cond	61:8	61:22	3	mainprog_ptr -> have_bg
water	61:8	0:0	4	mainprog_ptr
op	61:20	0:0	4	->
water	61:22	0:0	4	have_bg
stmts	61:31	67:4	3	
water	61:31	0:0	4	{
decl	62:8	62:32	4	png_color_16	background
water	63:8	0:0	4	background
op	63:18	0:0	4	.
water	63:19	0:0	4	red
op	63:23	0:0	4	=
water	63:25	0:0	4	mainprog_ptr
op	63:37	0:0	4	->
water	63:39	0:0	4	bg_red
water	63:45	0:0	4	;
water	64:8	0:0	4	background
op	64:18	0:0	4	.
water	64:19	0:0	4	green
op	64:25	0:0	4	=
water	64:27	0:0	4	mainprog_ptr
op	64:39	0:0	4	->
water	64:41	0:0	4	bg_green
water	64:49	0:0	4	;
water	65:8	0:0	4	background
op	65:18	0:0	4	.
water	65:19	0:0	4	blue
op	65:24	0:0	4	=
water	65:26	0:0	4	mainprog_ptr
op	65:38	0:0	4	->
water	65:40	0:0	4	bg_blue
water	65:47	0:0	4	;
call	66:8	66:51	4	png_set_bKGD
arg	66:21	66:28	5	png_ptr
water	66:21	0:0	6	png_ptr
arg	66:30	66:38	5	info_ptr
water	66:30	0:0	6	info_ptr
arg	66:40	66:51	5	&background
op	66:40	0:0	6	&
water	66:41	0:0	6	background
water	66:52	0:0	4	;
water	67:4	0:0	4	}
if	68:4	72:4	2	(mainprog_ptr -> have_time)
cond	68:8	68:22	3	mainprog_ptr -> have_time
water	68:8	0:0	4	mainprog_ptr
op	68:20	0:0	4	->
water	68:22	0:0	4	have_time
stmts	68:33	72:4	3	
water	68:33	0:0	4	{
decl	69:8	69:25	4	png_time	modtime
call	70:8	70:63	4	png_convert_from_time_t
arg	70:32	70:40	5	&modtime
op	70:32	0:0	6	&
water	70:33	0:0	6	modtime
arg	70:42	70:63	5	mainprog_ptr->modtime
water	70:42	0:0	6	mainprog_ptr
op	70:54	0:0	6	->
water	70:56	0:0	6	modtime
water	70:64	0:0	4	;
call	71:8	71:48	4	png_set_tIME
arg	71:21	71:28	5	png_ptr
water	71:21	0:0	6	png_ptr
arg	71:30	71:38	5	info_ptr
water	71:30	0:0	6	info_ptr
arg	71:40	71:48	5	&modtime
op	71:40	0:0	6	&
water	71:41	0:0	6	modtime
water	71:49	0:0	4	;
water	72:4	0:0	4	}
if	73:4	113:4	2	(mainprog_ptr -> have_text)
cond	73:8	73:22	3	mainprog_ptr -> have_text
water	73:8	0:0	4	mainprog_ptr
op	73:20	0:0	4	->
water	73:22	0:0	4	have_text
stmts	73:33	113:4	3	
water	73:33	0:0	4	{
decl	74:8	74:25	4	png_text	text[6]
decl	75:8	75:25	4	int	num_text
op	75:22	0:0	4	=
water	75:24	0:0	4	0
if	76:8	81:8	4	(mainprog_ptr -> have_text & TEXT_TITLE)
cond	76:12	76:38	5	mainprog_ptr -> have_text & TEXT_TITLE
water	76:12	0:0	6	mainprog_ptr
op	76:24	0:0	6	->
water	76:26	0:0	6	have_text
op	76:36	0:0	6	&
water	76:38	0:0	6	TEXT_TITLE
stmts	76:50	81:8	5	
water	76:50	0:0	6	{
water	77:12	0:0	6	text
op	77:16	0:0	6	[
water	77:17	0:0	6	num_text
op	77:25	0:0	6	]
op	77:26	0:0	6	.
water	77:27	0:0	6	compression
op	77:39	0:0	6	=
water	77:41	0:0	6	PNG_TEXT_COMPRESSION_NONE
water	77:66	0:0	6	;
water	78:12	0:0	6	text
op	78:16	0:0	6	[
water	78:17	0:0	6	num_text
op	78:25	0:0	6	]
op	78:26	0:0	6	.
water	78:27	0:0	6	key
op	78:31	0:0	6	=
water	78:33	0:0	6	"Title"
water	78:40	0:0	6	;
water	79:12	0:0	6	text
op	79:16	0:0	6	[
water	79:17	0:0	6	num_text
op	79:25	0:0	6	]
op	79:26	0:0	6	.
water	79:27	0:0	6	text
op	79:32	0:0	6	=
water	79:34	0:0	6	mainprog_ptr
op	79:46	0:0	6	->
water	79:48	0:0	6	title
water	79:53	0:0	6	;
op	80:12	0:0	6	++
water	80:14	0:0	6	num_text
water	80:22	0:0	6	;
water	81:8	0:0	6	}
if	82:8	87:8	4	(mainprog_ptr -> have_text & TEXT_AUTHOR)
cond	82:12	82:38	5	mainprog_ptr -> have_text & TEXT_AUTHOR
water	82:12	0:0	6	mainprog_ptr
op	82:24	0:0	6	->
water	82:26	0:0	6	have_text
op	82:36	0:0	6	&
water	82:38	0:0	6	TEXT_AUTHOR
stmts	82:51	87:8	5	
water	82:51	0:0	6	{
water	83:12	0:0	6	text
op	83:16	0:0	6	[
water	83:17	0:0	6	num_text
op	83:25	0:0	6	]
op	83:26	0:0	6	.
water	83:27	0:0	6	compression
op	83:39	0:0	6	=
water	83:41	0:0	6	PNG_TEXT_COMPRESSION_NONE
water	83:66	0:0	6	;
water	84:12	0:0	6	text
op	84:16	0:0	6	[
water	84:17	0:0	6	num_text
op	84:25	0:0	6	]
op	84:26	0:0	6	.
water	84:27	0:0	6	key
op	84:31	0:0	6	=
water	84:33	0:0	6	"Author"
water	84:41	0:0	6	;
water	85:12	0:0	6	text
op	85:16	0:0	6	[
water	85:17	0:0	6	num_text
op	85:25	0:0	6	]
op	85:26	0:0	6	.
water	85:27	0:0	6	text
op	85:32	0:0	6	=
water	85:34	0:0	6	mainprog_ptr
op	85:46	0:0	6	->
water	85:48	0:0	6	author
water	85:54	0:0	6	;
op	86:12	0:0	6	++
water	86:14	0:0	6	num_text
water	86:22	0:0	6	;
water	87:8	0:0	6	}
if	88:8	93:8	4	(mainprog_ptr -> have_text & TEXT_DESC)
cond	88:12	88:38	5	mainprog_ptr -> have_text & TEXT_DESC
water	88:12	0:0	6	mainprog_ptr
op	88:24	0:0	6	->
water	88:26	0:0	6	have_text
op	88:36	0:0	6	&
water	88:38	0:0	6	TEXT_DESC
stmts	88:49	93:8	5	
water	88:49	0:0	6	{
water	89:12	0:0	6	text
op	89:16	0:0	6	[
water	89:17	0:0	6	num_text
op	89:25	0:0	6	]
op	89:26	0:0	6	.
water	89:27	0:0	6	compression
op	89:39	0:0	6	=
water	89:41	0:0	6	PNG_TEXT_COMPRESSION_NONE
water	89:66	0:0	6	;
water	90:12	0:0	6	text
op	90:16	0:0	6	[
water	90:17	0:0	6	num_text
op	90:25	0:0	6	]
op	90:26	0:0	6	.
water	90:27	0:0	6	key
op	90:31	0:0	6	=
water	90:33	0:0	6	"Description"
water	90:46	0:0	6	;
water	91:12	0:0	6	text
op	91:16	0:0	6	[
water	91:17	0:0	6	num_text
op	91:25	0:0	6	]
op	91:26	0:0	6	.
water	91:27	0:0	6	text
op	91:32	0:0	6	=
water	91:34	0:0	6	mainprog_ptr
op	91:46	0:0	6	->
water	91:48	0:0	6	desc
water	91:52	0:0	6	;
op	92:12	0:0	6	++
water	92:14	0:0	6	num_text
water	92:22	0:0	6	;
water	93:8	0:0	6	}
if	94:8	99:8	4	(mainprog_ptr -> have_text & TEXT_COPY)
cond	94:12	94:38	5	mainprog_ptr -> have_text & TEXT_COPY
water	94:12	0:0	6	mainprog_ptr
op	94:24	0:0	6	->
water	94:26	0:0	6	have_text
op	94:36	0:0	6	&
water	94:38	0:0	6	TEXT_COPY
stmts	94:49	99:8	5	
water	94:49	0:0	6	{
water	95:12	0:0	6	text
op	95:16	0:0	6	[
water	95:17	0:0	6	num_text
op	95:25	0:0	6	]
op	95:26	0:0	6	.
water	95:27	0:0	6	compression
op	95:39	0:0	6	=
water	95:41	0:0	6	PNG_TEXT_COMPRESSION_NONE
water	95:66	0:0	6	;
water	96:12	0:0	6	text
op	96:16	0:0	6	[
water	96:17	0:0	6	num_text
op	96:25	0:0	6	]
op	96:26	0:0	6	.
water	96:27	0:0	6	key
op	96:31	0:0	6	=
water	96:33	0:0	6	"Copyright"
water	96:44	0:0	6	;
water	97:12	0:0	6	text
op	97:16	0:0	6	[
water	97:17	0:0	6	num_text
op	97:25	0:0	6	]
op	97:26	0:0	6	.
water	97:27	0:0	6	text
op	97:32	0:0	6	=
water	97:34	0:0	6	mainprog_ptr
op	97:46	0:0	6	->
water	97:48	0:0	6	copyright
water	97:57	0:0	6	;
op	98:12	0:0	6	++
water	98:14	0:0	6	num_text
water	98:22	0:0	6	;
water	99:8	0:0	6	}
if	100:8	105:8	4	(mainprog_ptr -> have_text & TEXT_EMAIL)
cond	100:12	100:38	5	mainprog_ptr -> have_text & TEXT_EMAIL
water	100:12	0:0	6	mainprog_ptr
op	100:24	0:0	6	->
water	100:26	0:0	6	have_text
op	100:36	0:0	6	&
water	100:38	0:0	6	TEXT_EMAIL
stmts	100:50	105:8	5	
water	100:50	0:0	6	{
water	101:12	0:0	6	text
op	101:16	0:0	6	[
water	101:17	0:0	6	num_text
op	101:25	0:0	6	]
op	101:26	0:0	6	.
water	101:27	0:0	6	compression
op	101:39	0:0	6	=
water	101:41	0:0	6	PNG_TEXT_COMPRESSION_NONE
water	101:66	0:0	6	;
water	102:12	0:0	6	text
op	102:16	0:0	6	[
water	102:17	0:0	6	num_text
op	102:25	0:0	6	]
op	102:26	0:0	6	.
water	102:27	0:0	6	key
op	102:31	0:0	6	=
water	102:33	0:0	6	"E-mail"
water	102:41	0:0	6	;
water	103:12	0:0	6	text
op	103:16	0:0	6	[
water	103:17	0:0	6	num_text
op	103:25	0:0	6	]
op	103:26	0:0	6	.
water	103:27	0:0	6	text
op	103:32	0:0	6	=
water	103:34	0:0	6	mainprog_ptr
op	103:46	0:0	6	->
water	103:48	0:0	6	email
water	103:53	0:0	6	;
op	104:12	0:0	6	++
water	104:14	0:0	6	num_text
water	104:22	0:0	6	;
water	105:8	0:0	6	}
if	106:8	111:8	4	(mainprog_ptr -> have_text & TEXT_URL)
cond	106:12	106:38	5	mainprog_ptr -> have_text & TEXT_URL
water	106:12	0:0	6	mainprog_ptr
op	106:24	0:0	6	->
water	106:26	0:0	6	have_text
op	106:36	0:0	6	&
water	106:38	0:0	6	TEXT_URL
stmts	106:48	111:8	5	
water	106:48	0:0	6	{
water	107:12	0:0	6	text
op	107:16	0:0	6	[
water	107:17	0:0	6	num_text
op	107:25	0:0	6	]
op	107:26	0:0	6	.
water	107:27	0:0	6	compression
op	107:39	0:0	6	=
water	107:41	0:0	6	PNG_TEXT_COMPRESSION_NONE
water	107:66	0:0	6	;
water	108:12	0:0	6	text
op	108:16	0:0	6	[
water	108:17	0:0	6	num_text
op	108:25	0:0	6	]
op	108:26	0:0	6	.
water	108:27	0:0	6	key
op	108:31	0:0	6	=
water	108:33	0:0	6	"URL"
water	108:38	0:0	6	;
water	109:12	0:0	6	text
op	109:16	0:0	6	[
water	109:17	0:0	6	num_text
op	109:25	0:0	6	]
op	109:26	0:0	6	.
water	109:27	0:0	6	text
op	109:32	0:0	6	=
water	109:34	0:0	6	mainprog_ptr
op	109:46	0:0	6	->
water	109:48	0:0	6	url
water	109:51	0:0	6	;
op	110:12	0:0	6	++
water	110:14	0:0	6	num_text
water	110:22	0:0	6	;
water	111:8	0:0	6	}
call	112:8	112:54	4	png_set_text
arg	112:21	112:28	5	png_ptr
water	112:21	0:0	6	png_ptr
arg	112:30	112:38	5	info_ptr
water	112:30	0:0	6	info_ptr
arg	112:40	112:44	5	text
water	112:40	0:0	6	text
arg	112:46	112:54	5	num_text
water	112:46	0:0	6	num_text
water	112:55	0:0	4	;
water	113:4	0:0	4	}
call	115:4	115:36	2	png_write_info
arg	115:19	115:26	3	png_ptr
water	115:19	0:0	4	png_ptr
arg	115:28	115:36	3	info_ptr
water	115:28	0:0	4	info_ptr
water	115:37	0:0	2	;
call	123:4	123:27	2	png_set_packing
arg	123:20	123:27	3	png_ptr
water	123:20	0:0	4	png_ptr
water	123:28	0:0	2	;
water	126:4	0:0	2	mainprog_ptr
op	126:16	0:0	2	->
water	126:18	0:0	2	png_ptr
op	126:26	0:0	2	=
water	126:28	0:0	2	png_ptr
water	126:35	0:0	2	;
water	127:4	0:0	2	mainprog_ptr
op	127:16	0:0	2	->
water	127:18	0:0	2	info_ptr
op	127:27	0:0	2	=
water	127:29	0:0	2	info_ptr
water	127:37	0:0	2	;
return	129:4	129:12	2	0
water	129:11	0:0	3	0

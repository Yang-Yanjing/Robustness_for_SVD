func	1:0	72:0	0	static int	read_palette
params	2:12	0:0	1	
param	2:13	2:34	2	store_palette	palette
param	2:36	2:49	2	int *	npalette
param	2:51	2:71	2	png_const_structp	pp
param	3:3	3:15	2	png_infop	pi
stmnts	0:0	71:3	1	
decl	5:3	5:17	2	png_colorp	pal
decl	6:3	6:24	2	png_bytep	trans_alpha
decl	7:3	7:10	2	int	num
water	8:3	0:0	2	pal
op	8:7	0:0	2	=
water	8:9	0:0	2	0
water	8:10	0:0	2	;
op	9:3	0:0	2	*
water	9:4	0:0	2	npalette
op	9:13	0:0	2	=
op	9:15	0:0	2	-
water	9:16	0:0	2	1
water	9:17	0:0	2	;
if	10:3	25:3	2	(png_get_PLTE (pp ,pi ,& pal ,npalette ) & PNG_INFO_PLTE)
cond	10:7	10:46	3	png_get_PLTE (pp ,pi ,& pal ,npalette ) & PNG_INFO_PLTE
call	10:7	10:42	4	png_get_PLTE
arg	10:20	10:22	5	pp
water	10:20	0:0	6	pp
arg	10:24	10:26	5	pi
water	10:24	0:0	6	pi
arg	10:28	10:32	5	&pal
op	10:28	0:0	6	&
water	10:29	0:0	6	pal
arg	10:34	10:42	5	npalette
water	10:34	0:0	6	npalette
op	10:44	0:0	4	&
water	10:46	0:0	4	PNG_INFO_PLTE
stmts	11:3	25:3	3	
water	11:3	0:0	4	{
decl	12:6	12:23	4	int	i
op	12:12	0:0	4	=
op	12:14	0:0	4	*
water	12:15	0:0	4	npalette
if	13:6	14:54	4	(i <= 0 || i > 256)
cond	13:10	13:24	5	i <= 0 || i > 256
water	13:10	0:0	6	i
op	13:12	0:0	6	<=
water	13:15	0:0	6	0
op	13:17	0:0	6	||
water	13:20	0:0	6	i
op	13:22	0:0	6	>
water	13:24	0:0	6	256
stmts	14:9	14:54	5	
call	14:9	14:53	6	png_error
arg	14:19	14:21	7	pp
water	14:19	0:0	8	pp
arg	14:23	14:53	7	"validate: invalid PLTE count"
water	14:23	0:0	8	"validate: invalid PLTE count"
water	14:54	0:0	6	;
while	15:6	20:6	4	(-- i >= 0)
cond	15:13	15:20	5	-- i >= 0
op	15:13	0:0	6	--
water	15:15	0:0	6	i
op	15:17	0:0	6	>=
water	15:20	0:0	6	0
stmts	16:6	20:6	5	
water	16:6	0:0	6	{
water	17:9	0:0	6	palette
op	17:16	0:0	6	[
water	17:17	0:0	6	i
op	17:18	0:0	6	]
op	17:19	0:0	6	.
water	17:20	0:0	6	red
op	17:24	0:0	6	=
water	17:26	0:0	6	pal
op	17:29	0:0	6	[
water	17:30	0:0	6	i
op	17:31	0:0	6	]
op	17:32	0:0	6	.
water	17:33	0:0	6	red
water	17:36	0:0	6	;
water	18:9	0:0	6	palette
op	18:16	0:0	6	[
water	18:17	0:0	6	i
op	18:18	0:0	6	]
op	18:19	0:0	6	.
water	18:20	0:0	6	green
op	18:26	0:0	6	=
water	18:28	0:0	6	pal
op	18:31	0:0	6	[
water	18:32	0:0	6	i
op	18:33	0:0	6	]
op	18:34	0:0	6	.
water	18:35	0:0	6	green
water	18:40	0:0	6	;
water	19:9	0:0	6	palette
op	19:16	0:0	6	[
water	19:17	0:0	6	i
op	19:18	0:0	6	]
op	19:19	0:0	6	.
water	19:20	0:0	6	blue
op	19:25	0:0	6	=
water	19:27	0:0	6	pal
op	19:30	0:0	6	[
water	19:31	0:0	6	i
op	19:32	0:0	6	]
op	19:33	0:0	6	.
water	19:34	0:0	6	blue
water	19:38	0:0	6	;
water	20:6	0:0	6	}
call	24:6	24:72	4	memset
arg	24:13	24:32	5	palette+*npalette
water	24:13	0:0	6	palette
op	24:21	0:0	6	+
op	24:23	0:0	6	*
water	24:24	0:0	6	npalette
arg	24:34	24:37	5	126
water	24:34	0:0	6	126
arg	24:39	24:72	5	(256-*npalette)*sizeof*palette
water	24:39	0:0	6	(
water	24:40	0:0	6	256
op	24:43	0:0	6	-
op	24:44	0:0	6	*
water	24:45	0:0	6	npalette
water	24:53	0:0	6	)
op	24:55	0:0	6	*
op	24:57	0:0	6	sizeof
op	24:64	0:0	6	*
water	24:65	0:0	6	palette
water	24:73	0:0	4	;
water	25:3	0:0	4	}
else	26:3	33:3	2
stmts	27:3	33:3	3	
water	27:3	0:0	4	{
if	28:6	29:55	4	(* npalette != ( - 1 ))
cond	28:10	28:26	5	* npalette != ( - 1 )
op	28:10	0:0	6	*
water	28:11	0:0	6	npalette
op	28:20	0:0	6	!=
water	28:23	0:0	6	(
op	28:24	0:0	6	-
water	28:25	0:0	6	1
water	28:26	0:0	6	)
stmts	29:9	29:55	5	
call	29:9	29:54	6	png_error
arg	29:19	29:21	7	pp
water	29:19	0:0	8	pp
arg	29:23	29:54	7	"validate: invalid PLTE result"
water	29:23	0:0	8	"validate: invalid PLTE result"
water	29:55	0:0	6	;
op	31:6	0:0	4	*
water	31:7	0:0	4	npalette
op	31:16	0:0	4	=
water	31:18	0:0	4	0
water	31:19	0:0	4	;
call	32:6	32:49	4	memset
arg	32:13	32:20	5	palette
water	32:13	0:0	6	palette
arg	32:22	32:25	5	113
water	32:22	0:0	6	113
arg	32:27	32:49	5	sizeof(store_palette)
op	32:27	0:0	6	sizeof
water	32:34	0:0	6	(
water	32:35	0:0	6	store_palette
water	32:48	0:0	6	)
water	32:50	0:0	4	;
water	33:3	0:0	4	}
water	34:3	0:0	2	trans_alpha
op	34:15	0:0	2	=
water	34:17	0:0	2	0
water	34:18	0:0	2	;
water	35:3	0:0	2	num
op	35:7	0:0	2	=
water	35:9	0:0	2	2
water	35:10	0:0	2	;
if	36:3	61:3	2	((png_get_tRNS (pp ,pi ,& trans_alpha ,& num ,0 ) & PNG_INFO_tRNS ) != 0 && ( trans_alpha != NULL || num != 1 ) && ! ( trans_alpha != NULL && num == 0 ))
cond	36:7	43:39	3	(png_get_tRNS (pp ,pi ,& trans_alpha ,& num ,0 ) & PNG_INFO_tRNS ) != 0 && ( trans_alpha != NULL || num != 1 ) && ! ( trans_alpha != NULL && num == 0 )
water	36:7	0:0	4	(
call	36:8	36:50	4	png_get_tRNS
arg	36:21	36:23	5	pp
water	36:21	0:0	6	pp
arg	36:25	36:27	5	pi
water	36:25	0:0	6	pi
arg	36:29	36:41	5	&trans_alpha
op	36:29	0:0	6	&
water	36:30	0:0	6	trans_alpha
arg	36:43	36:47	5	&num
op	36:43	0:0	6	&
water	36:44	0:0	6	num
arg	36:49	36:50	5	0
water	36:49	0:0	6	0
op	36:52	0:0	4	&
water	36:54	0:0	4	PNG_INFO_tRNS
water	36:67	0:0	4	)
op	36:69	0:0	4	!=
water	36:72	0:0	4	0
op	36:74	0:0	4	&&
water	37:6	0:0	4	(
water	37:7	0:0	4	trans_alpha
op	37:19	0:0	4	!=
water	37:22	0:0	4	NULL
op	37:27	0:0	4	||
water	37:30	0:0	4	num
op	37:34	0:0	4	!=
water	37:37	0:0	4	1
water	37:38	0:0	4	)
op	37:40	0:0	4	&&
op	43:6	0:0	4	!
water	43:7	0:0	4	(
water	43:8	0:0	4	trans_alpha
op	43:20	0:0	4	!=
water	43:23	0:0	4	NULL
op	43:28	0:0	4	&&
water	43:31	0:0	4	num
op	43:35	0:0	4	==
water	43:38	0:0	4	0
water	43:39	0:0	4	)
stmts	44:3	61:3	3	
water	44:3	0:0	4	{
decl	45:6	45:11	4	int	i
if	52:6	53:76	4	(trans_alpha == NULL || num <= 0 || num > 256 || num > * npalette)
cond	52:10	52:65	5	trans_alpha == NULL || num <= 0 || num > 256 || num > * npalette
water	52:10	0:0	6	trans_alpha
op	52:22	0:0	6	==
water	52:25	0:0	6	NULL
op	52:30	0:0	6	||
water	52:33	0:0	6	num
op	52:37	0:0	6	<=
water	52:40	0:0	6	0
op	52:42	0:0	6	||
water	52:45	0:0	6	num
op	52:49	0:0	6	>
water	52:51	0:0	6	256
op	52:55	0:0	6	||
water	52:58	0:0	6	num
op	52:62	0:0	6	>
op	52:64	0:0	6	*
water	52:65	0:0	6	npalette
stmts	53:9	53:76	5	
call	53:9	53:75	6	png_error
arg	53:19	53:21	7	pp
water	53:19	0:0	8	pp
arg	53:23	53:75	7	"validate: unexpected png_get_tRNS (palette) result"
water	53:23	0:0	8	"validate: unexpected png_get_tRNS (palette) result"
water	53:76	0:0	6	;
for	54:6	55:42	4	(i = 0 ;i < num;++ i)
forinit	54:11	54:14	5	i = 0 ;
water	54:11	0:0	6	i
op	54:12	0:0	6	=
water	54:13	0:0	6	0
water	54:14	0:0	6	;
cond	54:16	54:18	5	i < num
water	54:16	0:0	6	i
op	54:17	0:0	6	<
water	54:18	0:0	6	num
forexpr	54:23	54:25	5	++ i
op	54:23	0:0	6	++
water	54:25	0:0	6	i
stmts	55:9	55:42	5	
water	55:9	0:0	6	palette
op	55:16	0:0	6	[
water	55:17	0:0	6	i
op	55:18	0:0	6	]
op	55:19	0:0	6	.
water	55:20	0:0	6	alpha
op	55:26	0:0	6	=
water	55:28	0:0	6	trans_alpha
op	55:39	0:0	6	[
water	55:40	0:0	6	i
op	55:41	0:0	6	]
water	55:42	0:0	6	;
for	56:6	57:31	4	(num = * npalette ;i < num;++ i)
forinit	56:11	56:24	5	num = * npalette ;
water	56:11	0:0	6	num
op	56:14	0:0	6	=
op	56:15	0:0	6	*
water	56:16	0:0	6	npalette
water	56:24	0:0	6	;
cond	56:26	56:28	5	i < num
water	56:26	0:0	6	i
op	56:27	0:0	6	<
water	56:28	0:0	6	num
forexpr	56:33	56:35	5	++ i
op	56:33	0:0	6	++
water	56:35	0:0	6	i
stmts	57:9	57:31	5	
water	57:9	0:0	6	palette
op	57:16	0:0	6	[
water	57:17	0:0	6	i
op	57:18	0:0	6	]
op	57:19	0:0	6	.
water	57:20	0:0	6	alpha
op	57:26	0:0	6	=
water	57:28	0:0	6	255
water	57:31	0:0	6	;
for	58:6	59:30	4	(;i < 256;++ i)
forinit	58:11	58:11	5	;
water	58:11	0:0	6	;
cond	58:13	58:15	5	i < 256
water	58:13	0:0	6	i
op	58:14	0:0	6	<
water	58:15	0:0	6	256
forexpr	58:20	58:22	5	++ i
op	58:20	0:0	6	++
water	58:22	0:0	6	i
stmts	59:9	59:30	5	
water	59:9	0:0	6	palette
op	59:16	0:0	6	[
water	59:17	0:0	6	i
op	59:18	0:0	6	]
op	59:19	0:0	6	.
water	59:20	0:0	6	alpha
op	59:26	0:0	6	=
water	59:28	0:0	6	33
water	59:30	0:0	6	;
return	60:6	60:14	4	1
water	60:13	0:0	5	1
water	61:3	0:0	4	}
else	62:3	71:3	2
stmts	63:3	71:3	3	
water	63:3	0:0	4	{
decl	65:6	65:11	4	int	i
for	66:6	67:31	4	(i = 0 , num = * npalette ;i < num;++ i)
forinit	66:11	66:29	5	i = 0 , num = * npalette ;
water	66:11	0:0	6	i
op	66:12	0:0	6	=
water	66:13	0:0	6	0
water	66:14	0:0	6	,
water	66:16	0:0	6	num
op	66:19	0:0	6	=
op	66:20	0:0	6	*
water	66:21	0:0	6	npalette
water	66:29	0:0	6	;
cond	66:31	66:33	5	i < num
water	66:31	0:0	6	i
op	66:32	0:0	6	<
water	66:33	0:0	6	num
forexpr	66:38	66:40	5	++ i
op	66:38	0:0	6	++
water	66:40	0:0	6	i
stmts	67:9	67:31	5	
water	67:9	0:0	6	palette
op	67:16	0:0	6	[
water	67:17	0:0	6	i
op	67:18	0:0	6	]
op	67:19	0:0	6	.
water	67:20	0:0	6	alpha
op	67:26	0:0	6	=
water	67:28	0:0	6	255
water	67:31	0:0	6	;
for	68:6	69:30	4	(;i < 256;++ i)
forinit	68:11	68:11	5	;
water	68:11	0:0	6	;
cond	68:13	68:15	5	i < 256
water	68:13	0:0	6	i
op	68:14	0:0	6	<
water	68:15	0:0	6	256
forexpr	68:20	68:22	5	++ i
op	68:20	0:0	6	++
water	68:22	0:0	6	i
stmts	69:9	69:30	5	
water	69:9	0:0	6	palette
op	69:16	0:0	6	[
water	69:17	0:0	6	i
op	69:18	0:0	6	]
op	69:19	0:0	6	.
water	69:20	0:0	6	alpha
op	69:26	0:0	6	=
water	69:28	0:0	6	55
water	69:30	0:0	6	;
return	70:6	70:14	4	0
water	70:13	0:0	5	0
water	71:3	0:0	4	}

func	1:0	46:0	0	static void	modifier_progressive_read
params	2:25	0:0	1	
param	2:26	2:42	2	png_modifier *	pm
param	2:44	2:58	2	png_structp	pp
param	2:60	2:72	2	png_infop	pi
stmnts	4:3	45:60	1	
if	4:3	6:56	2	(pm -> this . pread != pp || pm -> this . current == NULL || pm -> this . next == NULL)
cond	4:7	5:24	3	pm -> this . pread != pp || pm -> this . current == NULL || pm -> this . next == NULL
water	4:7	0:0	4	pm
op	4:9	0:0	4	->
water	4:11	0:0	4	this
op	4:15	0:0	4	.
water	4:16	0:0	4	pread
op	4:22	0:0	4	!=
water	4:25	0:0	4	pp
op	4:28	0:0	4	||
water	4:31	0:0	4	pm
op	4:33	0:0	4	->
water	4:35	0:0	4	this
op	4:39	0:0	4	.
water	4:40	0:0	4	current
op	4:48	0:0	4	==
water	4:51	0:0	4	NULL
op	4:56	0:0	4	||
water	5:7	0:0	4	pm
op	5:9	0:0	4	->
water	5:11	0:0	4	this
op	5:15	0:0	4	.
water	5:16	0:0	4	next
op	5:21	0:0	4	==
water	5:24	0:0	4	NULL
stmts	6:6	6:56	3	
call	6:6	6:55	4	png_error
arg	6:16	6:18	5	pp
water	6:16	0:0	6	pp
arg	6:20	6:55	5	"store state damaged (progressive)"
water	6:20	0:0	6	"store state damaged (progressive)"
water	6:56	0:0	4	;
for	13:3	38:3	2	(;;)
forinit	13:8	13:8	3	;
water	13:8	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	14:3	38:3	3	
water	14:3	0:0	4	{
water	15:6	0:0	4	static
water	15:13	0:0	4	png_uint_32
water	15:25	0:0	4	noise
op	15:31	0:0	4	=
water	15:33	0:0	4	1
water	15:34	0:0	4	;
decl	16:6	16:28	4	png_size_t	cb
water	16:19	0:0	4	,
decl	16:6	16:28	4	png_size_t	cbAvail
decl	17:6	17:26	4	png_byte	buffer[512]
water	19:6	0:0	4	noise
op	19:12	0:0	4	=
water	19:14	0:0	4	(
water	19:15	0:0	4	noise
op	19:21	0:0	4	<<
water	19:24	0:0	4	9
water	19:25	0:0	4	)
op	19:27	0:0	4	|
water	19:29	0:0	4	(
water	19:30	0:0	4	(
water	19:31	0:0	4	noise
op	19:37	0:0	4	^
water	19:39	0:0	4	(
water	19:40	0:0	4	noise
op	19:46	0:0	4	>>
water	19:49	0:0	4	(
water	19:50	0:0	4	9
op	19:51	0:0	4	-
water	19:52	0:0	4	5
water	19:53	0:0	4	)
water	19:54	0:0	4	)
water	19:55	0:0	4	)
op	19:57	0:0	4	&
water	19:59	0:0	4	0
water	19:60	0:0	4	x1ff
water	19:64	0:0	4	)
water	19:65	0:0	4	;
water	20:6	0:0	4	cb
op	20:9	0:0	4	=
water	20:11	0:0	4	noise
op	20:17	0:0	4	&
water	20:19	0:0	4	0
water	20:20	0:0	4	x1ff
water	20:24	0:0	4	;
water	26:6	0:0	4	cbAvail
op	26:14	0:0	4	=
call	26:16	26:49	4	store_read_buffer_avail
arg	26:40	26:49	5	&pm->this
op	26:40	0:0	6	&
water	26:41	0:0	6	pm
op	26:43	0:0	6	->
water	26:45	0:0	6	this
water	26:50	0:0	4	;
if	27:6	28:58	4	(pm -> buffer_count > pm -> buffer_position)
cond	27:10	27:33	5	pm -> buffer_count > pm -> buffer_position
water	27:10	0:0	6	pm
op	27:12	0:0	6	->
water	27:14	0:0	6	buffer_count
op	27:27	0:0	6	>
water	27:29	0:0	6	pm
op	27:31	0:0	6	->
water	27:33	0:0	6	buffer_position
stmts	28:9	28:58	5	
water	28:9	0:0	6	cbAvail
op	28:17	0:0	6	+=
water	28:20	0:0	6	pm
op	28:22	0:0	6	->
water	28:24	0:0	6	buffer_count
op	28:37	0:0	6	-
water	28:39	0:0	6	pm
op	28:41	0:0	6	->
water	28:43	0:0	6	buffer_position
water	28:58	0:0	6	;
if	29:6	35:6	4	(cb > cbAvail)
cond	29:10	29:15	5	cb > cbAvail
water	29:10	0:0	6	cb
op	29:13	0:0	6	>
water	29:15	0:0	6	cbAvail
stmts	30:6	35:6	5	
water	30:6	0:0	6	{
if	32:9	33:17	6	(cbAvail == 0)
cond	32:13	32:24	7	cbAvail == 0
water	32:13	0:0	8	cbAvail
op	32:21	0:0	8	==
water	32:24	0:0	8	0
stmts	33:12	33:17	7	
break	33:12	33:17	8	
water	34:9	0:0	6	cb
op	34:12	0:0	6	=
water	34:14	0:0	6	cbAvail
water	34:21	0:0	6	;
water	35:6	0:0	6	}
call	36:6	36:38	4	modifier_read_imp
arg	36:24	36:26	5	pm
water	36:24	0:0	6	pm
arg	36:28	36:34	5	buffer
water	36:28	0:0	6	buffer
arg	36:36	36:38	5	cb
water	36:36	0:0	6	cb
water	36:39	0:0	4	;
call	37:6	37:41	4	png_process_data
arg	37:23	37:25	5	pp
water	37:23	0:0	6	pp
arg	37:27	37:29	5	pi
water	37:27	0:0	6	pi
arg	37:31	37:37	5	buffer
water	37:31	0:0	6	buffer
arg	37:39	37:41	5	cb
water	37:39	0:0	6	cb
water	37:42	0:0	4	;
water	38:3	0:0	4	}
if	42:3	45:60	2	(pm -> buffer_count > pm -> buffer_position || pm -> this . next != & pm -> this . current -> data || pm -> this . readpos < pm -> this . current -> datacount)
cond	42:7	44:44	3	pm -> buffer_count > pm -> buffer_position || pm -> this . next != & pm -> this . current -> data || pm -> this . readpos < pm -> this . current -> datacount
water	42:7	0:0	4	pm
op	42:9	0:0	4	->
water	42:11	0:0	4	buffer_count
op	42:24	0:0	4	>
water	42:26	0:0	4	pm
op	42:28	0:0	4	->
water	42:30	0:0	4	buffer_position
op	42:46	0:0	4	||
water	43:7	0:0	4	pm
op	43:9	0:0	4	->
water	43:11	0:0	4	this
op	43:15	0:0	4	.
water	43:16	0:0	4	next
op	43:21	0:0	4	!=
op	43:24	0:0	4	&
water	43:25	0:0	4	pm
op	43:27	0:0	4	->
water	43:29	0:0	4	this
op	43:33	0:0	4	.
water	43:34	0:0	4	current
op	43:41	0:0	4	->
water	43:43	0:0	4	data
op	43:48	0:0	4	||
water	44:7	0:0	4	pm
op	44:9	0:0	4	->
water	44:11	0:0	4	this
op	44:15	0:0	4	.
water	44:16	0:0	4	readpos
op	44:24	0:0	4	<
water	44:26	0:0	4	pm
op	44:28	0:0	4	->
water	44:30	0:0	4	this
op	44:34	0:0	4	.
water	44:35	0:0	4	current
op	44:42	0:0	4	->
water	44:44	0:0	4	datacount
stmts	45:6	45:60	3	
call	45:6	45:59	4	png_error
arg	45:16	45:18	5	pp
water	45:16	0:0	6	pp
arg	45:20	45:59	5	"progressive read implementation error"
water	45:20	0:0	6	"progressive read implementation error"
water	45:60	0:0	4	;

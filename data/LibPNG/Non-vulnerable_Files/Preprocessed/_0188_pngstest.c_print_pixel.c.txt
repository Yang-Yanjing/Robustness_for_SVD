func	1:0	25:0	0	static void	print_pixel
params	2:11	0:0	1	
param	2:12	2:27	2	char	string[64]
param	2:29	2:47	2	const Pixel *	pixel
param	2:49	2:67	2	png_uint_32	format
stmnts	4:3	24:3	1	
switch	4:3	24:3	2	(format & ( PNG_FORMAT_FLAG_ALPHA | PNG_FORMAT_FLAG_COLOR ))
cond	4:11	4:64	3	format & ( PNG_FORMAT_FLAG_ALPHA | PNG_FORMAT_FLAG_COLOR )
water	4:11	0:0	4	format
op	4:18	0:0	4	&
water	4:20	0:0	4	(
water	4:21	0:0	4	PNG_FORMAT_FLAG_ALPHA
op	4:42	0:0	4	|
water	4:43	0:0	4	PNG_FORMAT_FLAG_COLOR
water	4:64	0:0	4	)
stmts	5:3	24:3	3	
water	5:3	0:0	4	{
label	6:6	6:12	4	case 0 :
call	7:9	7:65	4	sprintf
arg	7:17	7:23	5	string
water	7:17	0:0	6	string
arg	7:25	7:33	5	"%s(%d)"
water	7:25	0:0	6	"%s(%d)"
arg	7:35	7:55	5	format_names[format]
water	7:35	0:0	6	format_names
op	7:47	0:0	6	[
water	7:48	0:0	6	format
op	7:54	0:0	6	]
arg	7:57	7:65	5	pixel->g
water	7:57	0:0	6	pixel
op	7:62	0:0	6	->
water	7:64	0:0	6	g
water	7:66	0:0	4	;
break	8:9	8:14	4	
label	9:6	9:32	4	case PNG_FORMAT_FLAG_ALPHA :
call	10:9	11:20	4	sprintf
arg	10:17	10:23	5	string
water	10:17	0:0	6	string
arg	10:25	10:36	5	"%s(%d,%d)"
water	10:25	0:0	6	"%s(%d,%d)"
arg	10:38	10:58	5	format_names[format]
water	10:38	0:0	6	format_names
op	10:50	0:0	6	[
water	10:51	0:0	6	format
op	10:57	0:0	6	]
arg	10:60	10:68	5	pixel->g
water	10:60	0:0	6	pixel
op	10:65	0:0	6	->
water	10:67	0:0	6	g
arg	11:12	11:20	5	pixel->a
water	11:12	0:0	6	pixel
op	11:17	0:0	6	->
water	11:19	0:0	6	a
water	11:21	0:0	4	;
break	12:9	12:14	4	
label	13:6	13:32	4	case PNG_FORMAT_FLAG_COLOR :
call	14:9	15:40	4	sprintf
arg	14:17	14:23	5	string
water	14:17	0:0	6	string
arg	14:25	14:39	5	"%s(%d,%d,%d)"
water	14:25	0:0	6	"%s(%d,%d,%d)"
arg	14:41	14:61	5	format_names[format]
water	14:41	0:0	6	format_names
op	14:53	0:0	6	[
water	14:54	0:0	6	format
op	14:60	0:0	6	]
arg	15:12	15:20	5	pixel->r
water	15:12	0:0	6	pixel
op	15:17	0:0	6	->
water	15:19	0:0	6	r
arg	15:22	15:30	5	pixel->g
water	15:22	0:0	6	pixel
op	15:27	0:0	6	->
water	15:29	0:0	6	g
arg	15:32	15:40	5	pixel->b
water	15:32	0:0	6	pixel
op	15:37	0:0	6	->
water	15:39	0:0	6	b
water	15:41	0:0	4	;
break	16:9	16:14	4	
water	17:6	0:0	4	case
water	17:11	0:0	4	PNG_FORMAT_FLAG_COLOR
op	17:32	0:0	4	|
water	17:33	0:0	4	PNG_FORMAT_FLAG_ALPHA
water	17:54	0:0	4	:
call	18:9	19:50	4	sprintf
arg	18:17	18:23	5	string
water	18:17	0:0	6	string
arg	18:25	18:42	5	"%s(%d,%d,%d,%d)"
water	18:25	0:0	6	"%s(%d,%d,%d,%d)"
arg	18:44	18:64	5	format_names[format]
water	18:44	0:0	6	format_names
op	18:56	0:0	6	[
water	18:57	0:0	6	format
op	18:63	0:0	6	]
arg	19:12	19:20	5	pixel->r
water	19:12	0:0	6	pixel
op	19:17	0:0	6	->
water	19:19	0:0	6	r
arg	19:22	19:30	5	pixel->g
water	19:22	0:0	6	pixel
op	19:27	0:0	6	->
water	19:29	0:0	6	g
arg	19:32	19:40	5	pixel->b
water	19:32	0:0	6	pixel
op	19:37	0:0	6	->
water	19:39	0:0	6	b
arg	19:42	19:50	5	pixel->a
water	19:42	0:0	6	pixel
op	19:47	0:0	6	->
water	19:49	0:0	6	a
water	19:51	0:0	4	;
break	20:9	20:14	4	
label	21:6	21:13	4	default :
call	22:9	22:41	4	sprintf
arg	22:17	22:23	5	string
water	22:17	0:0	6	string
arg	22:25	22:41	5	"invalid-format"
water	22:25	0:0	6	"invalid-format"
water	22:42	0:0	4	;
break	23:9	23:14	4	
water	24:3	0:0	4	}

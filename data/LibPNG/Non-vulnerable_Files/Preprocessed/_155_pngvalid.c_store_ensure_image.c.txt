func	1:0	54:0	0	static void	store_ensure_image
params	2:18	0:0	1	
param	2:19	2:32	2	png_store *	ps
param	2:34	2:54	2	png_const_structp	pp
param	2:56	2:67	2	int	nImages
param	3:3	3:19	2	png_size_t	cbRow
param	3:21	3:38	2	png_uint_32	cRows
stmnts	0:0	53:3	1	
decl	5:3	5:48	2	png_size_t	cb
op	5:17	0:0	2	=
water	5:19	0:0	2	nImages
op	5:27	0:0	2	*
water	5:29	0:0	2	cRows
op	5:35	0:0	2	*
water	5:37	0:0	2	(
water	5:38	0:0	2	cbRow
op	5:44	0:0	2	+
water	5:46	0:0	2	5
water	5:47	0:0	2	)
if	6:3	25:3	2	(ps -> cb_image < cb)
cond	6:7	6:22	3	ps -> cb_image < cb
water	6:7	0:0	4	ps
op	6:9	0:0	4	->
water	6:11	0:0	4	cb_image
op	6:20	0:0	4	<
water	6:22	0:0	4	cb
stmts	7:3	25:3	3	
water	7:3	0:0	4	{
decl	8:6	8:21	4	png_bytep	image
call	9:6	9:29	4	store_image_free
arg	9:23	9:25	5	ps
water	9:23	0:0	6	ps
arg	9:27	9:29	5	pp
water	9:27	0:0	6	pp
water	9:30	0:0	4	;
water	11:6	0:0	4	image
op	11:12	0:0	4	=
call	11:14	11:46	4	voidcast
arg	11:23	11:32	5	png_bytep
water	11:23	0:0	6	png_bytep
arg	11:34	11:46	5	malloc(cb+2)
call	11:34	11:45	6	malloc
arg	11:41	11:45	7	cb+2
water	11:41	0:0	8	cb
op	11:43	0:0	8	+
water	11:44	0:0	8	2
water	11:47	0:0	4	;
if	12:6	18:6	4	(image == NULL)
cond	12:10	12:19	5	image == NULL
water	12:10	0:0	6	image
op	12:16	0:0	6	==
water	12:19	0:0	6	NULL
stmts	13:6	18:6	5	
water	13:6	0:0	6	{
if	15:9	16:18	6	(pp == NULL)
cond	15:13	15:19	7	pp == NULL
water	15:13	0:0	8	pp
op	15:16	0:0	8	==
water	15:19	0:0	8	NULL
stmts	16:12	16:18	7	
return	16:12	16:18	8	
call	17:9	17:52	6	png_error
arg	17:19	17:21	7	pp
water	17:19	0:0	8	pp
arg	17:23	17:52	7	"OOM allocating image buffer"
water	17:23	0:0	8	"OOM allocating image buffer"
water	17:53	0:0	6	;
water	18:6	0:0	6	}
op	20:6	0:0	4	++
water	20:8	0:0	4	image
water	20:13	0:0	4	;
water	21:6	0:0	4	image
op	21:11	0:0	4	[
op	21:12	0:0	4	-
water	21:13	0:0	4	1
op	21:14	0:0	4	]
op	21:16	0:0	4	=
water	21:18	0:0	4	0
water	21:19	0:0	4	xed
water	21:22	0:0	4	;
water	22:6	0:0	4	image
op	22:11	0:0	4	[
water	22:12	0:0	4	cb
op	22:14	0:0	4	]
op	22:16	0:0	4	=
water	22:18	0:0	4	0
water	22:19	0:0	4	xfe
water	22:22	0:0	4	;
water	23:6	0:0	4	ps
op	23:8	0:0	4	->
water	23:10	0:0	4	image
op	23:16	0:0	4	=
water	23:18	0:0	4	image
water	23:23	0:0	4	;
water	24:6	0:0	4	ps
op	24:8	0:0	4	->
water	24:10	0:0	4	cb_image
op	24:19	0:0	4	=
water	24:21	0:0	4	cb
water	24:23	0:0	4	;
water	25:3	0:0	4	}
water	30:3	0:0	2	ps
op	30:5	0:0	2	->
water	30:7	0:0	2	cb_row
op	30:14	0:0	2	=
water	30:16	0:0	2	cbRow
water	30:21	0:0	2	;
water	31:3	0:0	2	ps
op	31:5	0:0	2	->
water	31:7	0:0	2	image_h
op	31:15	0:0	2	=
water	31:17	0:0	2	cRows
water	31:22	0:0	2	;
call	38:3	38:28	2	memset
arg	38:10	38:19	3	ps->image
water	38:10	0:0	4	ps
op	38:12	0:0	4	->
water	38:14	0:0	4	image
arg	38:21	38:24	3	178
water	38:21	0:0	4	178
arg	38:26	38:28	3	cb
water	38:26	0:0	4	cb
water	38:29	0:0	2	;
while	40:3	53:3	2	(-- nImages >= 0)
cond	40:10	40:23	3	-- nImages >= 0
op	40:10	0:0	4	--
water	40:12	0:0	4	nImages
op	40:20	0:0	4	>=
water	40:23	0:0	4	0
stmts	41:3	53:3	3	
water	41:3	0:0	4	{
decl	42:6	42:19	4	png_uint_32	y
for	43:6	52:6	4	(y = 0 ;y < cRows;++ y)
forinit	43:11	43:14	5	y = 0 ;
water	43:11	0:0	6	y
op	43:12	0:0	6	=
water	43:13	0:0	6	0
water	43:14	0:0	6	;
cond	43:16	43:18	5	y < cRows
water	43:16	0:0	6	y
op	43:17	0:0	6	<
water	43:18	0:0	6	cRows
forexpr	43:25	43:27	5	++ y
op	43:25	0:0	6	++
water	43:27	0:0	6	y
stmts	44:6	52:6	5	
water	44:6	0:0	6	{
decl	45:9	45:60	6	png_bytep	row
op	45:23	0:0	6	=
call	45:25	45:59	7	store_image_row
arg	45:41	45:43	8	ps
water	45:41	0:0	9	ps
arg	45:45	45:47	8	pp
water	45:45	0:0	9	pp
arg	45:49	45:56	8	nImages
water	45:49	0:0	9	nImages
arg	45:58	45:59	8	y
water	45:58	0:0	9	y
water	47:9	0:0	6	row
op	47:12	0:0	6	[
op	47:13	0:0	6	-
water	47:14	0:0	6	2
op	47:15	0:0	6	]
op	47:17	0:0	6	=
water	47:19	0:0	6	190
water	47:22	0:0	6	;
water	48:9	0:0	6	row
op	48:12	0:0	6	[
op	48:13	0:0	6	-
water	48:14	0:0	6	1
op	48:15	0:0	6	]
op	48:17	0:0	6	=
water	48:19	0:0	6	239
water	48:22	0:0	6	;
water	49:9	0:0	6	row
op	49:12	0:0	6	[
water	49:13	0:0	6	cbRow
op	49:18	0:0	6	]
op	49:20	0:0	6	=
water	49:22	0:0	6	222
water	49:25	0:0	6	;
water	50:9	0:0	6	row
op	50:12	0:0	6	[
water	50:13	0:0	6	cbRow
op	50:18	0:0	6	+
water	50:19	0:0	6	1
op	50:20	0:0	6	]
op	50:22	0:0	6	=
water	50:24	0:0	6	173
water	50:27	0:0	6	;
water	51:9	0:0	6	row
op	51:12	0:0	6	[
water	51:13	0:0	6	cbRow
op	51:18	0:0	6	+
water	51:19	0:0	6	2
op	51:20	0:0	6	]
op	51:22	0:0	6	=
water	51:24	0:0	6	17
water	51:26	0:0	6	;
water	52:6	0:0	6	}
water	53:3	0:0	4	}

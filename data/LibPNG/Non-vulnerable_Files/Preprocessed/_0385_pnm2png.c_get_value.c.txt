func	2:0	20:0	0	png_uint_32	get_value
params	2:22	0:0	1	
param	2:23	2:37	2	FILE *	pnm_file
param	2:39	2:48	2	int	depth
stmnts	4:2	19:18	1	
water	4:2	0:0	2	static
water	4:9	0:0	2	png_uint_32
water	4:21	0:0	2	mask
op	4:26	0:0	2	=
water	4:28	0:0	2	0
water	4:29	0:0	2	;
decl	5:2	5:20	2	png_byte	token[16]
decl	6:2	6:28	2	unsigned long	ul_ret_value
decl	7:2	7:23	2	png_uint_32	ret_value
decl	8:2	8:11	2	int	i
op	8:8	0:0	2	=
water	8:10	0:0	2	0
if	9:2	11:31	2	(mask == 0)
cond	9:6	9:14	3	mask == 0
water	9:6	0:0	4	mask
op	9:11	0:0	4	==
water	9:14	0:0	4	0
stmts	10:4	11:31	3	
for	10:4	11:31	4	(i = 0 ;i < depth;i ++)
forinit	10:9	10:14	5	i = 0 ;
water	10:9	0:0	6	i
op	10:11	0:0	6	=
water	10:13	0:0	6	0
water	10:14	0:0	6	;
cond	10:16	10:20	5	i < depth
water	10:16	0:0	6	i
op	10:18	0:0	6	<
water	10:20	0:0	6	depth
forexpr	10:27	10:28	5	i ++
water	10:27	0:0	6	i
op	10:28	0:0	6	++
stmts	11:6	11:31	5	
water	11:6	0:0	6	mask
op	11:11	0:0	6	=
water	11:13	0:0	6	(
water	11:14	0:0	6	mask
op	11:19	0:0	6	<<
water	11:22	0:0	6	1
water	11:23	0:0	6	)
op	11:25	0:0	6	|
water	11:27	0:0	6	0
water	11:28	0:0	6	x01
water	11:31	0:0	6	;
call	12:2	12:37	2	get_token
arg	12:13	12:21	3	pnm_file
water	12:13	0:0	4	pnm_file
arg	12:23	12:37	3	(char*)token
water	12:23	0:0	4	(
water	12:24	0:0	4	char
op	12:29	0:0	4	*
water	12:30	0:0	4	)
water	12:32	0:0	4	token
water	12:38	0:0	2	;
call	13:2	13:52	2	sscanf
arg	13:10	13:30	3	(constchar*)token
water	13:10	0:0	4	(
water	13:11	0:0	4	const
water	13:17	0:0	4	char
op	13:22	0:0	4	*
water	13:23	0:0	4	)
water	13:25	0:0	4	token
arg	13:32	13:37	3	"%lu"
water	13:32	0:0	4	"%lu"
arg	13:39	13:52	3	&ul_ret_value
op	13:39	0:0	4	&
water	13:40	0:0	4	ul_ret_value
water	13:53	0:0	2	;
water	14:2	0:0	2	ret_value
op	14:12	0:0	2	=
water	14:14	0:0	2	(
water	14:15	0:0	2	png_uint_32
water	14:26	0:0	2	)
water	14:28	0:0	2	ul_ret_value
water	14:40	0:0	2	;
water	15:2	0:0	2	ret_value
op	15:12	0:0	2	&=
water	15:15	0:0	2	mask
water	15:19	0:0	2	;
if	16:2	18:51	2	(depth < 8)
cond	16:6	16:14	3	depth < 8
water	16:6	0:0	4	depth
op	16:12	0:0	4	<
water	16:14	0:0	4	8
stmts	17:4	18:51	3	
for	17:4	18:51	4	(i = 0 ;i < ( 8 / depth );i ++)
forinit	17:9	17:14	5	i = 0 ;
water	17:9	0:0	6	i
op	17:11	0:0	6	=
water	17:13	0:0	6	0
water	17:14	0:0	6	;
cond	17:16	17:30	5	i < ( 8 / depth )
water	17:16	0:0	6	i
op	17:18	0:0	6	<
water	17:20	0:0	6	(
water	17:21	0:0	6	8
op	17:23	0:0	6	/
water	17:25	0:0	6	depth
water	17:30	0:0	6	)
forexpr	17:33	17:34	5	i ++
water	17:33	0:0	6	i
op	17:34	0:0	6	++
stmts	18:6	18:51	5	
water	18:6	0:0	6	ret_value
op	18:16	0:0	6	=
water	18:18	0:0	6	(
water	18:19	0:0	6	ret_value
op	18:29	0:0	6	<<
water	18:32	0:0	6	depth
water	18:37	0:0	6	)
op	18:39	0:0	6	||
water	18:42	0:0	6	ret_value
water	18:51	0:0	6	;
return	19:2	19:18	2	ret_value
water	19:9	0:0	3	ret_value

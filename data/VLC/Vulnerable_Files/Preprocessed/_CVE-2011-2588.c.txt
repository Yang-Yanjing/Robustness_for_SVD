func	1:0	105:0	0	static int	AVI_ChunkRead_strf
params	1:29	0:0	1	
param	1:31	1:42	2	stream_t *	s
param	1:44	1:63	2	avi_chunk_t *	p_chk
stmnts	0:0	104:37	1	
decl	3:4	3:23	2	avi_chunk_t	*p_strh
water	4:4	0:0	2	AVI_READCHUNK_ENTER
water	4:23	0:0	2	;
if	5:4	9:4	2	(p_chk -> common . p_father == NULL)
cond	5:8	5:34	3	p_chk -> common . p_father == NULL
water	5:8	0:0	4	p_chk
op	5:13	0:0	4	->
water	5:15	0:0	4	common
op	5:21	0:0	4	.
water	5:22	0:0	4	p_father
op	5:31	0:0	4	==
water	5:34	0:0	4	NULL
stmts	6:4	9:4	3	
water	6:4	0:0	4	{
call	7:8	7:56	4	msg_Err
arg	7:17	7:33	5	(vlc_object_t*)s
water	7:17	0:0	6	(
water	7:18	0:0	6	vlc_object_t
op	7:30	0:0	6	*
water	7:31	0:0	6	)
water	7:32	0:0	6	s
arg	7:35	7:56	5	"malformed avi file"
water	7:35	0:0	6	"malformed avi file"
water	7:57	0:0	4	;
call	8:8	8:41	4	AVI_READCHUNK_EXIT
arg	8:28	8:41	5	VLC_EGENERIC
water	8:28	0:0	6	VLC_EGENERIC
water	8:42	0:0	4	;
water	9:4	0:0	4	}
if	10:4	14:4	2	(! ( p_strh =AVI_ChunkFind (p_chk -> common . p_father ,AVIFOURCC_strh ,0 ) ))
cond	10:8	10:79	3	! ( p_strh =AVI_ChunkFind (p_chk -> common . p_father ,AVIFOURCC_strh ,0 ) )
op	10:8	0:0	4	!
water	10:9	0:0	4	(
water	10:11	0:0	4	p_strh
op	10:18	0:0	4	=
call	10:20	10:77	4	AVI_ChunkFind
arg	10:35	10:57	5	p_chk->common.p_father
water	10:35	0:0	6	p_chk
op	10:40	0:0	6	->
water	10:42	0:0	6	common
op	10:48	0:0	6	.
water	10:49	0:0	6	p_father
arg	10:59	10:73	5	AVIFOURCC_strh
water	10:59	0:0	6	AVIFOURCC_strh
arg	10:75	10:77	5	0
water	10:75	0:0	6	0
water	10:79	0:0	4	)
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
call	12:8	12:56	4	msg_Err
arg	12:17	12:33	5	(vlc_object_t*)s
water	12:17	0:0	6	(
water	12:18	0:0	6	vlc_object_t
op	12:30	0:0	6	*
water	12:31	0:0	6	)
water	12:32	0:0	6	s
arg	12:35	12:56	5	"malformed avi file"
water	12:35	0:0	6	"malformed avi file"
water	12:57	0:0	4	;
call	13:8	13:41	4	AVI_READCHUNK_EXIT
arg	13:28	13:41	5	VLC_EGENERIC
water	13:28	0:0	6	VLC_EGENERIC
water	13:42	0:0	4	;
water	14:4	0:0	4	}
switch	15:4	103:4	2	(p_strh -> strh . i_type)
cond	15:12	15:25	3	p_strh -> strh . i_type
water	15:12	0:0	4	p_strh
op	15:18	0:0	4	->
water	15:20	0:0	4	strh
op	15:24	0:0	4	.
water	15:25	0:0	4	i_type
stmts	16:4	103:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	case
water	17:12	0:0	4	(
water	17:14	0:0	4	AVIFOURCC_auds
water	17:29	0:0	4	)
water	17:30	0:0	4	:
water	18:12	0:0	4	p_chk
op	18:17	0:0	4	->
water	18:19	0:0	4	strf
op	18:23	0:0	4	.
water	18:24	0:0	4	auds
op	18:28	0:0	4	.
water	18:29	0:0	4	i_cat
op	18:35	0:0	4	=
water	18:37	0:0	4	AUDIO_ES
water	18:45	0:0	4	;
water	19:12	0:0	4	p_chk
op	19:17	0:0	4	->
water	19:19	0:0	4	strf
op	19:23	0:0	4	.
water	19:24	0:0	4	auds
op	19:28	0:0	4	.
water	19:29	0:0	4	p_wf
op	19:34	0:0	4	=
call	19:36	19:104	4	malloc
arg	19:44	19:104	5	__MAX(p_chk->common.i_chunk_size,sizeof(WAVEFORMATEX))
call	19:44	19:102	6	__MAX
arg	19:51	19:77	7	p_chk->common.i_chunk_size
water	19:51	0:0	8	p_chk
op	19:56	0:0	8	->
water	19:58	0:0	8	common
op	19:64	0:0	8	.
water	19:65	0:0	8	i_chunk_size
arg	19:79	19:102	7	sizeof(WAVEFORMATEX)
op	19:79	0:0	8	sizeof
water	19:85	0:0	8	(
water	19:87	0:0	8	WAVEFORMATEX
water	19:100	0:0	8	)
water	19:105	0:0	4	;
call	20:12	20:62	4	AVI_READ2BYTES
arg	20:28	20:62	5	p_chk->strf.auds.p_wf->wFormatTag
water	20:28	0:0	6	p_chk
op	20:33	0:0	6	->
water	20:35	0:0	6	strf
op	20:39	0:0	6	.
water	20:40	0:0	6	auds
op	20:44	0:0	6	.
water	20:45	0:0	6	p_wf
op	20:49	0:0	6	->
water	20:51	0:0	6	wFormatTag
water	20:63	0:0	4	;
call	21:12	21:61	4	AVI_READ2BYTES
arg	21:28	21:61	5	p_chk->strf.auds.p_wf->nChannels
water	21:28	0:0	6	p_chk
op	21:33	0:0	6	->
water	21:35	0:0	6	strf
op	21:39	0:0	6	.
water	21:40	0:0	6	auds
op	21:44	0:0	6	.
water	21:45	0:0	6	p_wf
op	21:49	0:0	6	->
water	21:51	0:0	6	nChannels
water	21:62	0:0	4	;
call	22:12	22:66	4	AVI_READ4BYTES
arg	22:28	22:66	5	p_chk->strf.auds.p_wf->nSamplesPerSec
water	22:28	0:0	6	p_chk
op	22:33	0:0	6	->
water	22:35	0:0	6	strf
op	22:39	0:0	6	.
water	22:40	0:0	6	auds
op	22:44	0:0	6	.
water	22:45	0:0	6	p_wf
op	22:49	0:0	6	->
water	22:51	0:0	6	nSamplesPerSec
water	22:67	0:0	4	;
call	23:12	23:67	4	AVI_READ4BYTES
arg	23:28	23:67	5	p_chk->strf.auds.p_wf->nAvgBytesPerSec
water	23:28	0:0	6	p_chk
op	23:33	0:0	6	->
water	23:35	0:0	6	strf
op	23:39	0:0	6	.
water	23:40	0:0	6	auds
op	23:44	0:0	6	.
water	23:45	0:0	6	p_wf
op	23:49	0:0	6	->
water	23:51	0:0	6	nAvgBytesPerSec
water	23:68	0:0	4	;
call	24:12	24:63	4	AVI_READ2BYTES
arg	24:28	24:63	5	p_chk->strf.auds.p_wf->nBlockAlign
water	24:28	0:0	6	p_chk
op	24:33	0:0	6	->
water	24:35	0:0	6	strf
op	24:39	0:0	6	.
water	24:40	0:0	6	auds
op	24:44	0:0	6	.
water	24:45	0:0	6	p_wf
op	24:49	0:0	6	->
water	24:51	0:0	6	nBlockAlign
water	24:64	0:0	4	;
call	25:12	25:66	4	AVI_READ2BYTES
arg	25:28	25:66	5	p_chk->strf.auds.p_wf->wBitsPerSample
water	25:28	0:0	6	p_chk
op	25:33	0:0	6	->
water	25:35	0:0	6	strf
op	25:39	0:0	6	.
water	25:40	0:0	6	auds
op	25:44	0:0	6	.
water	25:45	0:0	6	p_wf
op	25:49	0:0	6	->
water	25:51	0:0	6	wBitsPerSample
water	25:67	0:0	4	;
if	26:12	43:12	4	(p_chk -> strf . auds . p_wf -> wFormatTag != WAVE_FORMAT_PCM && p_chk -> common . i_chunk_size > sizeof ( WAVEFORMATEX ))
cond	26:16	27:70	5	p_chk -> strf . auds . p_wf -> wFormatTag != WAVE_FORMAT_PCM && p_chk -> common . i_chunk_size > sizeof ( WAVEFORMATEX )
water	26:16	0:0	6	p_chk
op	26:21	0:0	6	->
water	26:23	0:0	6	strf
op	26:27	0:0	6	.
water	26:28	0:0	6	auds
op	26:32	0:0	6	.
water	26:33	0:0	6	p_wf
op	26:37	0:0	6	->
water	26:39	0:0	6	wFormatTag
op	26:50	0:0	6	!=
water	26:53	0:0	6	WAVE_FORMAT_PCM
op	27:17	0:0	6	&&
water	27:20	0:0	6	p_chk
op	27:25	0:0	6	->
water	27:27	0:0	6	common
op	27:33	0:0	6	.
water	27:34	0:0	6	i_chunk_size
op	27:47	0:0	6	>
op	27:49	0:0	6	sizeof
water	27:55	0:0	6	(
water	27:57	0:0	6	WAVEFORMATEX
water	27:70	0:0	6	)
stmts	28:12	43:12	5	
water	28:12	0:0	6	{
call	29:16	29:62	6	AVI_READ2BYTES
arg	29:32	29:62	7	p_chk->strf.auds.p_wf->cbSize
water	29:32	0:0	8	p_chk
op	29:37	0:0	8	->
water	29:39	0:0	8	strf
op	29:43	0:0	8	.
water	29:44	0:0	8	auds
op	29:48	0:0	8	.
water	29:49	0:0	8	p_wf
op	29:53	0:0	8	->
water	29:55	0:0	8	cbSize
water	29:63	0:0	6	;
if	31:16	36:16	6	(p_chk -> strf . auds . p_wf -> cbSize > p_chk -> common . i_chunk_size - sizeof ( WAVEFORMATEX ))
cond	31:20	32:74	7	p_chk -> strf . auds . p_wf -> cbSize > p_chk -> common . i_chunk_size - sizeof ( WAVEFORMATEX )
water	31:20	0:0	8	p_chk
op	31:25	0:0	8	->
water	31:27	0:0	8	strf
op	31:31	0:0	8	.
water	31:32	0:0	8	auds
op	31:36	0:0	8	.
water	31:37	0:0	8	p_wf
op	31:41	0:0	8	->
water	31:43	0:0	8	cbSize
op	31:50	0:0	8	>
water	32:24	0:0	8	p_chk
op	32:29	0:0	8	->
water	32:31	0:0	8	common
op	32:37	0:0	8	.
water	32:38	0:0	8	i_chunk_size
op	32:51	0:0	8	-
op	32:53	0:0	8	sizeof
water	32:59	0:0	8	(
water	32:61	0:0	8	WAVEFORMATEX
water	32:74	0:0	8	)
stmts	33:16	36:16	7	
water	33:16	0:0	8	{
water	34:20	0:0	8	p_chk
op	34:25	0:0	8	->
water	34:27	0:0	8	strf
op	34:31	0:0	8	.
water	34:32	0:0	8	auds
op	34:36	0:0	8	.
water	34:37	0:0	8	p_wf
op	34:41	0:0	8	->
water	34:43	0:0	8	cbSize
op	34:50	0:0	8	=
water	35:24	0:0	8	p_chk
op	35:29	0:0	8	->
water	35:31	0:0	8	common
op	35:37	0:0	8	.
water	35:38	0:0	8	i_chunk_size
op	35:51	0:0	8	-
op	35:53	0:0	8	sizeof
water	35:59	0:0	8	(
water	35:61	0:0	8	WAVEFORMATEX
water	35:74	0:0	8	)
water	35:75	0:0	8	;
water	36:16	0:0	8	}
if	37:16	42:16	6	(p_chk -> strf . auds . p_wf -> wFormatTag == WAVE_FORMAT_EXTENSIBLE)
cond	37:20	37:57	7	p_chk -> strf . auds . p_wf -> wFormatTag == WAVE_FORMAT_EXTENSIBLE
water	37:20	0:0	8	p_chk
op	37:25	0:0	8	->
water	37:27	0:0	8	strf
op	37:31	0:0	8	.
water	37:32	0:0	8	auds
op	37:36	0:0	8	.
water	37:37	0:0	8	p_wf
op	37:41	0:0	8	->
water	37:43	0:0	8	wFormatTag
op	37:54	0:0	8	==
water	37:57	0:0	8	WAVE_FORMAT_EXTENSIBLE
stmts	38:16	42:16	7	
water	38:16	0:0	8	{
call	40:20	41:70	8	msg_Warn
arg	40:30	40:46	9	(vlc_object_t*)s
water	40:30	0:0	10	(
water	40:31	0:0	10	vlc_object_t
op	40:43	0:0	10	*
water	40:44	0:0	10	)
water	40:45	0:0	10	s
arg	40:48	41:70	9	"WAVE_FORMAT_EXTENSIBLE or ""vorbis audio dectected: not supported"
water	40:48	0:0	10	"WAVE_FORMAT_EXTENSIBLE or "
water	41:30	0:0	10	"vorbis audio dectected: not supported"
water	41:71	0:0	8	;
water	42:16	0:0	8	}
water	43:12	0:0	6	}
else	44:12	47:12	4
stmts	45:12	47:12	5	
water	45:12	0:0	6	{
water	46:16	0:0	6	p_chk
op	46:21	0:0	6	->
water	46:23	0:0	6	strf
op	46:27	0:0	6	.
water	46:28	0:0	6	auds
op	46:32	0:0	6	.
water	46:33	0:0	6	p_wf
op	46:37	0:0	6	->
water	46:39	0:0	6	cbSize
op	46:46	0:0	6	=
water	46:48	0:0	6	0
water	46:49	0:0	6	;
water	47:12	0:0	6	}
if	48:12	53:12	4	(p_chk -> strf . auds . p_wf -> cbSize > 0)
cond	48:16	48:48	5	p_chk -> strf . auds . p_wf -> cbSize > 0
water	48:16	0:0	6	p_chk
op	48:21	0:0	6	->
water	48:23	0:0	6	strf
op	48:27	0:0	6	.
water	48:28	0:0	6	auds
op	48:32	0:0	6	.
water	48:33	0:0	6	p_wf
op	48:37	0:0	6	->
water	48:39	0:0	6	cbSize
op	48:46	0:0	6	>
water	48:48	0:0	6	0
stmts	49:12	53:12	5	
water	49:12	0:0	6	{
call	50:16	52:54	6	memcpy
arg	50:24	50:50	7	&p_chk->strf.auds.p_wf[1]
op	50:24	0:0	8	&
water	50:25	0:0	8	p_chk
op	50:30	0:0	8	->
water	50:32	0:0	8	strf
op	50:36	0:0	8	.
water	50:37	0:0	8	auds
op	50:41	0:0	8	.
water	50:42	0:0	8	p_wf
op	50:46	0:0	8	[
water	50:47	0:0	8	1
op	50:48	0:0	8	]
arg	51:24	51:59	7	p_buff+8+sizeof(WAVEFORMATEX)
water	51:24	0:0	8	p_buff
op	51:31	0:0	8	+
water	51:33	0:0	8	8
op	51:35	0:0	8	+
op	51:37	0:0	8	sizeof
water	51:43	0:0	8	(
water	51:45	0:0	8	WAVEFORMATEX
water	51:58	0:0	8	)
arg	52:24	52:54	7	p_chk->strf.auds.p_wf->cbSize
water	52:24	0:0	8	p_chk
op	52:29	0:0	8	->
water	52:31	0:0	8	strf
op	52:35	0:0	8	.
water	52:36	0:0	8	auds
op	52:40	0:0	8	.
water	52:41	0:0	8	p_wf
op	52:45	0:0	8	->
water	52:47	0:0	8	cbSize
water	52:55	0:0	6	;
water	53:12	0:0	6	}
call	55:12	61:71	4	msg_Dbg
arg	55:21	55:37	5	(vlc_object_t*)s
water	55:21	0:0	6	(
water	55:22	0:0	6	vlc_object_t
op	55:34	0:0	6	*
water	55:35	0:0	6	)
water	55:36	0:0	6	s
arg	56:21	56:80	5	"strf: audio:0x%4.4x channels:%d %dHz %dbits/sample %dkb/s"
water	56:21	0:0	6	"strf: audio:0x%4.4x channels:%d %dHz %dbits/sample %dkb/s"
arg	57:21	57:54	5	p_chk->strf.auds.p_wf->wFormatTag
water	57:21	0:0	6	p_chk
op	57:26	0:0	6	->
water	57:28	0:0	6	strf
op	57:32	0:0	6	.
water	57:33	0:0	6	auds
op	57:37	0:0	6	.
water	57:38	0:0	6	p_wf
op	57:42	0:0	6	->
water	57:44	0:0	6	wFormatTag
arg	58:21	58:53	5	p_chk->strf.auds.p_wf->nChannels
water	58:21	0:0	6	p_chk
op	58:26	0:0	6	->
water	58:28	0:0	6	strf
op	58:32	0:0	6	.
water	58:33	0:0	6	auds
op	58:37	0:0	6	.
water	58:38	0:0	6	p_wf
op	58:42	0:0	6	->
water	58:44	0:0	6	nChannels
arg	59:21	59:58	5	p_chk->strf.auds.p_wf->nSamplesPerSec
water	59:21	0:0	6	p_chk
op	59:26	0:0	6	->
water	59:28	0:0	6	strf
op	59:32	0:0	6	.
water	59:33	0:0	6	auds
op	59:37	0:0	6	.
water	59:38	0:0	6	p_wf
op	59:42	0:0	6	->
water	59:44	0:0	6	nSamplesPerSec
arg	60:21	60:58	5	p_chk->strf.auds.p_wf->wBitsPerSample
water	60:21	0:0	6	p_chk
op	60:26	0:0	6	->
water	60:28	0:0	6	strf
op	60:32	0:0	6	.
water	60:33	0:0	6	auds
op	60:37	0:0	6	.
water	60:38	0:0	6	p_wf
op	60:42	0:0	6	->
water	60:44	0:0	6	wBitsPerSample
arg	61:21	61:71	5	p_chk->strf.auds.p_wf->nAvgBytesPerSec*8/1024
water	61:21	0:0	6	p_chk
op	61:26	0:0	6	->
water	61:28	0:0	6	strf
op	61:32	0:0	6	.
water	61:33	0:0	6	auds
op	61:37	0:0	6	.
water	61:38	0:0	6	p_wf
op	61:42	0:0	6	->
water	61:44	0:0	6	nAvgBytesPerSec
op	61:60	0:0	6	*
water	61:62	0:0	6	8
op	61:64	0:0	6	/
water	61:66	0:0	6	1024
water	61:72	0:0	4	;
break	63:12	63:17	4	
water	64:8	0:0	4	case
water	64:12	0:0	4	(
water	64:14	0:0	4	AVIFOURCC_vids
water	64:29	0:0	4	)
water	64:30	0:0	4	:
water	65:12	0:0	4	p_strh
op	65:18	0:0	4	->
water	65:20	0:0	4	strh
op	65:24	0:0	4	.
water	65:25	0:0	4	i_samplesize
op	65:38	0:0	4	=
water	65:40	0:0	4	0
water	65:41	0:0	4	;
water	66:12	0:0	4	p_chk
op	66:17	0:0	4	->
water	66:19	0:0	4	strf
op	66:23	0:0	4	.
water	66:24	0:0	4	vids
op	66:28	0:0	4	.
water	66:29	0:0	4	i_cat
op	66:35	0:0	4	=
water	66:37	0:0	4	VIDEO_ES
water	66:45	0:0	4	;
water	67:12	0:0	4	p_chk
op	67:17	0:0	4	->
water	67:19	0:0	4	strf
op	67:23	0:0	4	.
water	67:24	0:0	4	vids
op	67:28	0:0	4	.
water	67:29	0:0	4	p_bih
op	67:35	0:0	4	=
call	67:37	67:72	4	malloc
arg	67:45	67:72	5	p_chk->common.i_chunk_size
water	67:45	0:0	6	p_chk
op	67:50	0:0	6	->
water	67:52	0:0	6	common
op	67:58	0:0	6	.
water	67:59	0:0	6	i_chunk_size
water	67:73	0:0	4	;
call	68:12	68:59	4	AVI_READ4BYTES
arg	68:28	68:59	5	p_chk->strf.vids.p_bih->biSize
water	68:28	0:0	6	p_chk
op	68:33	0:0	6	->
water	68:35	0:0	6	strf
op	68:39	0:0	6	.
water	68:40	0:0	6	vids
op	68:44	0:0	6	.
water	68:45	0:0	6	p_bih
op	68:50	0:0	6	->
water	68:52	0:0	6	biSize
water	68:60	0:0	4	;
call	69:12	69:60	4	AVI_READ4BYTES
arg	69:28	69:60	5	p_chk->strf.vids.p_bih->biWidth
water	69:28	0:0	6	p_chk
op	69:33	0:0	6	->
water	69:35	0:0	6	strf
op	69:39	0:0	6	.
water	69:40	0:0	6	vids
op	69:44	0:0	6	.
water	69:45	0:0	6	p_bih
op	69:50	0:0	6	->
water	69:52	0:0	6	biWidth
water	69:61	0:0	4	;
call	70:12	70:61	4	AVI_READ4BYTES
arg	70:28	70:61	5	p_chk->strf.vids.p_bih->biHeight
water	70:28	0:0	6	p_chk
op	70:33	0:0	6	->
water	70:35	0:0	6	strf
op	70:39	0:0	6	.
water	70:40	0:0	6	vids
op	70:44	0:0	6	.
water	70:45	0:0	6	p_bih
op	70:50	0:0	6	->
water	70:52	0:0	6	biHeight
water	70:62	0:0	4	;
call	71:12	71:61	4	AVI_READ2BYTES
arg	71:28	71:61	5	p_chk->strf.vids.p_bih->biPlanes
water	71:28	0:0	6	p_chk
op	71:33	0:0	6	->
water	71:35	0:0	6	strf
op	71:39	0:0	6	.
water	71:40	0:0	6	vids
op	71:44	0:0	6	.
water	71:45	0:0	6	p_bih
op	71:50	0:0	6	->
water	71:52	0:0	6	biPlanes
water	71:62	0:0	4	;
call	72:12	72:63	4	AVI_READ2BYTES
arg	72:28	72:63	5	p_chk->strf.vids.p_bih->biBitCount
water	72:28	0:0	6	p_chk
op	72:33	0:0	6	->
water	72:35	0:0	6	strf
op	72:39	0:0	6	.
water	72:40	0:0	6	vids
op	72:44	0:0	6	.
water	72:45	0:0	6	p_bih
op	72:50	0:0	6	->
water	72:52	0:0	6	biBitCount
water	72:64	0:0	4	;
call	73:12	73:66	4	AVI_READFOURCC
arg	73:28	73:66	5	p_chk->strf.vids.p_bih->biCompression
water	73:28	0:0	6	p_chk
op	73:33	0:0	6	->
water	73:35	0:0	6	strf
op	73:39	0:0	6	.
water	73:40	0:0	6	vids
op	73:44	0:0	6	.
water	73:45	0:0	6	p_bih
op	73:50	0:0	6	->
water	73:52	0:0	6	biCompression
water	73:67	0:0	4	;
call	74:12	74:64	4	AVI_READ4BYTES
arg	74:28	74:64	5	p_chk->strf.vids.p_bih->biSizeImage
water	74:28	0:0	6	p_chk
op	74:33	0:0	6	->
water	74:35	0:0	6	strf
op	74:39	0:0	6	.
water	74:40	0:0	6	vids
op	74:44	0:0	6	.
water	74:45	0:0	6	p_bih
op	74:50	0:0	6	->
water	74:52	0:0	6	biSizeImage
water	74:65	0:0	4	;
call	75:12	75:68	4	AVI_READ4BYTES
arg	75:28	75:68	5	p_chk->strf.vids.p_bih->biXPelsPerMeter
water	75:28	0:0	6	p_chk
op	75:33	0:0	6	->
water	75:35	0:0	6	strf
op	75:39	0:0	6	.
water	75:40	0:0	6	vids
op	75:44	0:0	6	.
water	75:45	0:0	6	p_bih
op	75:50	0:0	6	->
water	75:52	0:0	6	biXPelsPerMeter
water	75:69	0:0	4	;
call	76:12	76:68	4	AVI_READ4BYTES
arg	76:28	76:68	5	p_chk->strf.vids.p_bih->biYPelsPerMeter
water	76:28	0:0	6	p_chk
op	76:33	0:0	6	->
water	76:35	0:0	6	strf
op	76:39	0:0	6	.
water	76:40	0:0	6	vids
op	76:44	0:0	6	.
water	76:45	0:0	6	p_bih
op	76:50	0:0	6	->
water	76:52	0:0	6	biYPelsPerMeter
water	76:69	0:0	4	;
call	77:12	77:62	4	AVI_READ4BYTES
arg	77:28	77:62	5	p_chk->strf.vids.p_bih->biClrUsed
water	77:28	0:0	6	p_chk
op	77:33	0:0	6	->
water	77:35	0:0	6	strf
op	77:39	0:0	6	.
water	77:40	0:0	6	vids
op	77:44	0:0	6	.
water	77:45	0:0	6	p_bih
op	77:50	0:0	6	->
water	77:52	0:0	6	biClrUsed
water	77:63	0:0	4	;
call	78:12	78:67	4	AVI_READ4BYTES
arg	78:28	78:67	5	p_chk->strf.vids.p_bih->biClrImportant
water	78:28	0:0	6	p_chk
op	78:33	0:0	6	->
water	78:35	0:0	6	strf
op	78:39	0:0	6	.
water	78:40	0:0	6	vids
op	78:44	0:0	6	.
water	78:45	0:0	6	p_bih
op	78:50	0:0	6	->
water	78:52	0:0	6	biClrImportant
water	78:68	0:0	4	;
if	79:12	82:12	4	(p_chk -> strf . vids . p_bih -> biSize > p_chk -> common . i_chunk_size)
cond	79:16	79:63	5	p_chk -> strf . vids . p_bih -> biSize > p_chk -> common . i_chunk_size
water	79:16	0:0	6	p_chk
op	79:21	0:0	6	->
water	79:23	0:0	6	strf
op	79:27	0:0	6	.
water	79:28	0:0	6	vids
op	79:32	0:0	6	.
water	79:33	0:0	6	p_bih
op	79:38	0:0	6	->
water	79:40	0:0	6	biSize
op	79:47	0:0	6	>
water	79:49	0:0	6	p_chk
op	79:54	0:0	6	->
water	79:56	0:0	6	common
op	79:62	0:0	6	.
water	79:63	0:0	6	i_chunk_size
stmts	80:12	82:12	5	
water	80:12	0:0	6	{
water	81:16	0:0	6	p_chk
op	81:21	0:0	6	->
water	81:23	0:0	6	strf
op	81:27	0:0	6	.
water	81:28	0:0	6	vids
op	81:32	0:0	6	.
water	81:33	0:0	6	p_bih
op	81:38	0:0	6	->
water	81:40	0:0	6	biSize
op	81:47	0:0	6	=
water	81:49	0:0	6	p_chk
op	81:54	0:0	6	->
water	81:56	0:0	6	common
op	81:62	0:0	6	.
water	81:63	0:0	6	i_chunk_size
water	81:75	0:0	6	;
water	82:12	0:0	6	}
if	83:12	88:12	4	(p_chk -> common . i_chunk_size - sizeof ( BITMAPINFOHEADER ) > 0)
cond	83:16	83:72	5	p_chk -> common . i_chunk_size - sizeof ( BITMAPINFOHEADER ) > 0
water	83:16	0:0	6	p_chk
op	83:21	0:0	6	->
water	83:23	0:0	6	common
op	83:29	0:0	6	.
water	83:30	0:0	6	i_chunk_size
op	83:43	0:0	6	-
op	83:45	0:0	6	sizeof
water	83:51	0:0	6	(
water	83:52	0:0	6	BITMAPINFOHEADER
water	83:68	0:0	6	)
op	83:70	0:0	6	>
water	83:72	0:0	6	0
stmts	84:12	88:12	5	
water	84:12	0:0	6	{
call	85:16	87:77	6	memcpy
arg	85:24	85:50	7	&p_chk->strf.vids.p_bih[1]
op	85:24	0:0	8	&
water	85:25	0:0	8	p_chk
op	85:30	0:0	8	->
water	85:32	0:0	8	strf
op	85:36	0:0	8	.
water	85:37	0:0	8	vids
op	85:41	0:0	8	.
water	85:42	0:0	8	p_bih
op	85:47	0:0	8	[
water	85:48	0:0	8	1
op	85:49	0:0	8	]
arg	86:24	86:61	7	p_buff+8+sizeof(BITMAPINFOHEADER)
water	86:24	0:0	8	p_buff
op	86:31	0:0	8	+
water	86:33	0:0	8	8
op	86:35	0:0	8	+
op	86:37	0:0	8	sizeof
water	86:43	0:0	8	(
water	86:44	0:0	8	BITMAPINFOHEADER
water	86:60	0:0	8	)
arg	87:24	87:77	7	p_chk->common.i_chunk_size-sizeof(BITMAPINFOHEADER)
water	87:24	0:0	8	p_chk
op	87:29	0:0	8	->
water	87:31	0:0	8	common
op	87:37	0:0	8	.
water	87:38	0:0	8	i_chunk_size
op	87:51	0:0	8	-
op	87:52	0:0	8	sizeof
water	87:58	0:0	8	(
water	87:59	0:0	8	BITMAPINFOHEADER
water	87:75	0:0	8	)
water	87:78	0:0	6	;
water	88:12	0:0	6	}
call	90:12	96:56	4	msg_Dbg
arg	90:21	90:37	5	(vlc_object_t*)s
water	90:21	0:0	6	(
water	90:22	0:0	6	vlc_object_t
op	90:34	0:0	6	*
water	90:35	0:0	6	)
water	90:36	0:0	6	s
arg	91:21	91:76	5	"strf: video:%4.4s %"PRIu32"x%"PRIu32" planes:%d %dbpp"
water	91:21	0:0	6	"strf: video:%4.4s %"
water	91:42	0:0	6	PRIu32
water	91:48	0:0	6	"x%"
water	91:52	0:0	6	PRIu32
water	91:58	0:0	6	" planes:%d %dbpp"
arg	92:21	92:66	5	(char*)&p_chk->strf.vids.p_bih->biCompression
water	92:21	0:0	6	(
water	92:22	0:0	6	char
op	92:26	0:0	6	*
water	92:27	0:0	6	)
op	92:28	0:0	6	&
water	92:29	0:0	6	p_chk
op	92:34	0:0	6	->
water	92:36	0:0	6	strf
op	92:40	0:0	6	.
water	92:41	0:0	6	vids
op	92:45	0:0	6	.
water	92:46	0:0	6	p_bih
op	92:51	0:0	6	->
water	92:53	0:0	6	biCompression
arg	93:21	93:62	5	(uint32_t)p_chk->strf.vids.p_bih->biWidth
water	93:21	0:0	6	(
water	93:22	0:0	6	uint32_t
water	93:30	0:0	6	)
water	93:31	0:0	6	p_chk
op	93:36	0:0	6	->
water	93:38	0:0	6	strf
op	93:42	0:0	6	.
water	93:43	0:0	6	vids
op	93:47	0:0	6	.
water	93:48	0:0	6	p_bih
op	93:53	0:0	6	->
water	93:55	0:0	6	biWidth
arg	94:21	94:63	5	(uint32_t)p_chk->strf.vids.p_bih->biHeight
water	94:21	0:0	6	(
water	94:22	0:0	6	uint32_t
water	94:30	0:0	6	)
water	94:31	0:0	6	p_chk
op	94:36	0:0	6	->
water	94:38	0:0	6	strf
op	94:42	0:0	6	.
water	94:43	0:0	6	vids
op	94:47	0:0	6	.
water	94:48	0:0	6	p_bih
op	94:53	0:0	6	->
water	94:55	0:0	6	biHeight
arg	95:21	95:53	5	p_chk->strf.vids.p_bih->biPlanes
water	95:21	0:0	6	p_chk
op	95:26	0:0	6	->
water	95:28	0:0	6	strf
op	95:32	0:0	6	.
water	95:33	0:0	6	vids
op	95:37	0:0	6	.
water	95:38	0:0	6	p_bih
op	95:43	0:0	6	->
water	95:45	0:0	6	biPlanes
arg	96:21	96:56	5	p_chk->strf.vids.p_bih->biBitCount
water	96:21	0:0	6	p_chk
op	96:26	0:0	6	->
water	96:28	0:0	6	strf
op	96:32	0:0	6	.
water	96:33	0:0	6	vids
op	96:37	0:0	6	.
water	96:38	0:0	6	p_bih
op	96:43	0:0	6	->
water	96:45	0:0	6	biBitCount
water	96:57	0:0	4	;
break	98:12	98:17	4	
label	99:8	99:15	4	default :
call	100:12	100:62	4	msg_Warn
arg	100:22	100:38	5	(vlc_object_t*)s
water	100:22	0:0	6	(
water	100:23	0:0	6	vlc_object_t
op	100:35	0:0	6	*
water	100:36	0:0	6	)
water	100:37	0:0	6	s
arg	100:40	100:62	5	"unknown stream type"
water	100:40	0:0	6	"unknown stream type"
water	100:63	0:0	4	;
water	101:12	0:0	4	p_chk
op	101:17	0:0	4	->
water	101:19	0:0	4	strf
op	101:23	0:0	4	.
water	101:24	0:0	4	common
op	101:30	0:0	4	.
water	101:31	0:0	4	i_cat
op	101:37	0:0	4	=
water	101:39	0:0	4	UNKNOWN_ES
water	101:49	0:0	4	;
break	102:12	102:17	4	
water	103:4	0:0	4	}
call	104:4	104:36	2	AVI_READCHUNK_EXIT
arg	104:24	104:36	3	VLC_SUCCESS
water	104:24	0:0	4	VLC_SUCCESS
water	104:37	0:0	2	;

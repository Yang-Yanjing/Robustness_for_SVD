func	1:0	78:0	0	static int	ParseRealText
params	1:24	0:0	1	
param	1:26	1:42	2	demux_t *	p_demux
param	1:44	1:66	2	subtitle_t *	p_subtitle
param	1:68	1:78	2	int	i_idx
stmnts	3:4	77:22	1	
call	3:4	3:22	2	VLC_UNUSED
arg	3:16	3:22	3	i_idx
water	3:16	0:0	4	i_idx
water	3:23	0:0	2	;
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:34	2	text_t	*txt
op	5:21	0:0	2	=
op	5:23	0:0	2	&
water	5:24	0:0	2	p_sys
op	5:29	0:0	2	->
water	5:31	0:0	2	txt
decl	6:4	6:18	2	char	*psz_text
decl	7:4	7:44	2	char	psz_end[12]
op	7:20	0:0	2	=
water	7:22	0:0	2	""
water	7:24	0:0	2	,
decl	7:4	7:44	2	char	psz_begin[12]
op	7:40	0:0	2	=
water	7:42	0:0	2	""
for	8:4	52:4	2	(;;)
forinit	8:9	8:9	3	;
water	8:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	9:4	52:4	3	
water	9:4	0:0	4	{
decl	10:8	10:42	4	int	h1
op	10:15	0:0	4	=
water	10:17	0:0	4	0
water	10:18	0:0	4	,
decl	10:8	10:42	4	int	m1
op	10:23	0:0	4	=
water	10:25	0:0	4	0
water	10:26	0:0	4	,
decl	10:8	10:42	4	int	s1
op	10:31	0:0	4	=
water	10:33	0:0	4	0
water	10:34	0:0	4	,
decl	10:8	10:42	4	int	f1
op	10:39	0:0	4	=
water	10:41	0:0	4	0
decl	11:8	11:42	4	int	h2
op	11:15	0:0	4	=
water	11:17	0:0	4	0
water	11:18	0:0	4	,
decl	11:8	11:42	4	int	m2
op	11:23	0:0	4	=
water	11:25	0:0	4	0
water	11:26	0:0	4	,
decl	11:8	11:42	4	int	s2
op	11:31	0:0	4	=
water	11:33	0:0	4	0
water	11:34	0:0	4	,
decl	11:8	11:42	4	int	f2
op	11:39	0:0	4	=
water	11:41	0:0	4	0
decl	12:8	12:42	4	const char	*s
op	12:22	0:0	4	=
call	12:24	12:41	5	TextGetLine
arg	12:37	12:41	6	txt
water	12:37	0:0	7	txt
if	13:8	14:31	4	(! s)
cond	13:12	13:13	5	! s
op	13:12	0:0	6	!
water	13:13	0:0	6	s
stmts	14:12	14:31	5	
return	14:12	14:31	6	VLC_EGENERIC
water	14:19	0:0	7	VLC_EGENERIC
water	15:8	0:0	4	psz_text
op	15:17	0:0	4	=
call	15:19	15:43	4	malloc
arg	15:27	15:43	5	strlen(s)+1
call	15:27	15:37	6	strlen
arg	15:35	15:37	7	s
water	15:35	0:0	8	s
op	15:39	0:0	6	+
water	15:41	0:0	6	1
water	15:44	0:0	4	;
if	16:8	17:29	4	(! psz_text)
cond	16:12	16:13	5	! psz_text
op	16:12	0:0	6	!
water	16:13	0:0	6	psz_text
stmts	17:12	17:29	5	
return	17:12	17:29	6	VLC_ENOMEM
water	17:19	0:0	7	VLC_ENOMEM
decl	20:8	20:48	4	char	*psz_temp
op	20:23	0:0	4	=
call	20:25	20:47	5	strcasestr
arg	20:37	20:38	6	s
water	20:37	0:0	7	s
arg	20:40	20:47	6	"<time"
water	20:40	0:0	7	"<time"
if	21:8	48:8	4	(psz_temp != NULL)
cond	21:12	21:24	5	psz_temp != NULL
water	21:12	0:0	6	psz_temp
op	21:21	0:0	6	!=
water	21:24	0:0	6	NULL
stmts	22:8	48:8	5	
water	22:8	0:0	6	{
if	24:12	35:12	6	((sscanf (psz_temp ,"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\" %*[e|E]nd=\"%[^\"]%*[^>]%[^\n\r]" ,psz_begin ,psz_end ,psz_text ) != 3 ) && (sscanf (psz_temp ,"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\"%*[^>]%[^\n\r]" ,psz_begin ,psz_text ) != 2 ))
cond	24:16	30:56	7	(sscanf (psz_temp ,"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\" %*[e|E]nd=\"%[^\"]%*[^>]%[^\n\r]" ,psz_begin ,psz_end ,psz_text ) != 3 ) && (sscanf (psz_temp ,"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\"%*[^>]%[^\n\r]" ,psz_begin ,psz_text ) != 2 )
water	24:16	0:0	8	(
call	24:18	26:56	8	sscanf
arg	24:26	24:34	9	psz_temp
water	24:26	0:0	10	psz_temp
arg	25:18	25:87	9	"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\" %*[e|E]nd=\"%[^\"]%*[^>]%[^\n\r]"
water	25:18	0:0	10	"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\" %*[e|E]nd=\"%[^\"]%*[^>]%[^\n\r]"
arg	26:28	26:37	9	psz_begin
water	26:28	0:0	10	psz_begin
arg	26:39	26:46	9	psz_end
water	26:39	0:0	10	psz_end
arg	26:48	26:56	9	psz_text
water	26:48	0:0	10	psz_text
op	26:58	0:0	8	!=
water	26:61	0:0	8	3
water	26:63	0:0	8	)
op	26:65	0:0	8	&&
water	28:20	0:0	8	(
call	28:22	30:50	8	sscanf
arg	28:30	28:38	9	psz_temp
water	28:30	0:0	10	psz_temp
arg	29:30	29:80	9	"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\"%*[^>]%[^\n\r]"
water	29:30	0:0	10	"<%*[t|T]ime %*[b|B]egin=\"%[^\"]\"%*[^>]%[^\n\r]"
arg	30:30	30:39	9	psz_begin
water	30:30	0:0	10	psz_begin
arg	30:41	30:50	9	psz_text
water	30:41	0:0	10	psz_text
op	30:52	0:0	8	!=
water	30:55	0:0	8	2
water	30:56	0:0	8	)
stmts	32:12	35:12	7	
water	32:12	0:0	8	{
call	33:16	33:31	8	free
arg	33:22	33:31	9	psz_text
water	33:22	0:0	10	psz_text
water	33:32	0:0	8	;
continue	34:16	34:24	8	
water	35:12	0:0	8	}
decl	37:12	37:75	6	int64_t	i_time
op	37:27	0:0	6	=
call	37:29	37:74	7	ParseRealTime
arg	37:44	37:53	8	psz_begin
water	37:44	0:0	9	psz_begin
arg	37:55	37:58	8	&h1
op	37:55	0:0	9	&
water	37:56	0:0	9	h1
arg	37:60	37:63	8	&m1
op	37:60	0:0	9	&
water	37:61	0:0	9	m1
arg	37:65	37:68	8	&s1
op	37:65	0:0	9	&
water	37:66	0:0	9	s1
arg	37:70	37:74	8	&f1
op	37:70	0:0	9	&
water	37:71	0:0	9	f1
if	38:12	41:12	6	(i_time >= 0)
cond	38:16	38:26	7	i_time >= 0
water	38:16	0:0	8	i_time
op	38:23	0:0	8	>=
water	38:26	0:0	8	0
stmts	39:12	41:12	7	
water	39:12	0:0	8	{
water	40:16	0:0	8	p_subtitle
op	40:26	0:0	8	->
water	40:28	0:0	8	i_start
op	40:36	0:0	8	=
water	40:38	0:0	8	i_time
water	40:44	0:0	8	;
water	41:12	0:0	8	}
water	42:12	0:0	6	i_time
op	42:19	0:0	6	=
call	42:21	42:64	6	ParseRealTime
arg	42:36	42:43	7	psz_end
water	42:36	0:0	8	psz_end
arg	42:45	42:48	7	&h2
op	42:45	0:0	8	&
water	42:46	0:0	8	h2
arg	42:50	42:53	7	&m2
op	42:50	0:0	8	&
water	42:51	0:0	8	m2
arg	42:55	42:58	7	&s2
op	42:55	0:0	8	&
water	42:56	0:0	8	s2
arg	42:60	42:64	7	&f2
op	42:60	0:0	8	&
water	42:61	0:0	8	f2
water	42:65	0:0	6	;
if	43:12	46:12	6	(i_time >= 0)
cond	43:16	43:26	7	i_time >= 0
water	43:16	0:0	8	i_time
op	43:23	0:0	8	>=
water	43:26	0:0	8	0
stmts	44:12	46:12	7	
water	44:12	0:0	8	{
water	45:16	0:0	8	p_subtitle
op	45:26	0:0	8	->
water	45:28	0:0	8	i_stop
op	45:35	0:0	8	=
water	45:37	0:0	8	i_time
water	45:43	0:0	8	;
water	46:12	0:0	8	}
break	47:12	47:17	6	
water	48:8	0:0	6	}
else	50:8	50:21	4
stmts	50:13	50:21	5	
continue	50:13	50:21	6	
call	51:8	51:23	4	free
arg	51:14	51:23	5	psz_text
water	51:14	0:0	6	psz_text
water	51:24	0:0	4	;
water	52:4	0:0	4	}
for	54:4	73:4	2	(;;)
forinit	54:9	54:9	3	;
water	54:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	55:4	73:4	3	
water	55:4	0:0	4	{
decl	56:8	56:42	4	const char	*s
op	56:22	0:0	4	=
call	56:24	56:41	5	TextGetLine
arg	56:37	56:41	6	txt
water	56:37	0:0	7	txt
if	57:8	58:31	4	(! s)
cond	57:12	57:13	5	! s
op	57:12	0:0	6	!
water	57:13	0:0	6	s
stmts	58:12	58:31	5	
return	58:12	58:31	6	VLC_EGENERIC
water	58:19	0:0	7	VLC_EGENERIC
decl	59:8	59:31	4	int	i_len
op	59:18	0:0	4	=
call	59:20	59:30	5	strlen
arg	59:28	59:30	6	s
water	59:28	0:0	7	s
if	60:8	60:30	4	(i_len == 0)
cond	60:12	60:21	5	i_len == 0
water	60:12	0:0	6	i_len
op	60:18	0:0	6	==
water	60:21	0:0	6	0
stmts	60:25	60:30	5	
break	60:25	60:30	6	
if	61:8	66:8	4	(strcasestr (s ,"<time" ) ||strcasestr (s ,"<clear/" ))
cond	61:12	62:36	5	strcasestr (s ,"<time" ) ||strcasestr (s ,"<clear/" )
call	61:12	61:35	6	strcasestr
arg	61:24	61:25	7	s
water	61:24	0:0	8	s
arg	61:27	61:35	7	"<time"
water	61:27	0:0	8	"<time"
op	61:37	0:0	6	||
call	62:12	62:36	6	strcasestr
arg	62:24	62:25	7	s
water	62:24	0:0	8	s
arg	62:27	62:36	7	"<clear/"
water	62:27	0:0	8	"<clear/"
stmts	63:8	66:8	5	
water	63:8	0:0	6	{
call	64:12	64:34	6	TextPreviousLine
arg	64:30	64:34	7	txt
water	64:30	0:0	8	txt
water	64:35	0:0	6	;
break	65:12	65:17	6	
water	66:8	0:0	6	}
decl	67:8	67:38	4	int	i_old
op	67:18	0:0	4	=
call	67:20	67:37	5	strlen
arg	67:28	67:37	6	psz_text
water	67:28	0:0	7	psz_text
water	68:8	0:0	4	psz_text
op	68:17	0:0	4	=
call	68:19	68:60	4	realloc
arg	68:28	68:36	5	psz_text
water	68:28	0:0	6	psz_text
arg	68:38	68:60	5	i_old+i_len+1+1
water	68:38	0:0	6	i_old
op	68:44	0:0	6	+
water	68:46	0:0	6	i_len
op	68:52	0:0	6	+
water	68:54	0:0	6	1
op	68:56	0:0	6	+
water	68:58	0:0	6	1
water	68:61	0:0	4	;
if	69:8	70:29	4	(! psz_text)
cond	69:12	69:13	5	! psz_text
op	69:12	0:0	6	!
water	69:13	0:0	6	psz_text
stmts	70:12	70:29	5	
return	70:12	70:29	6	VLC_ENOMEM
water	70:19	0:0	7	VLC_ENOMEM
call	71:8	71:28	4	strcat
arg	71:16	71:24	5	psz_text
water	71:16	0:0	6	psz_text
arg	71:26	71:28	5	s
water	71:26	0:0	6	s
water	71:29	0:0	4	;
call	72:8	72:31	4	strcat
arg	72:16	72:24	5	psz_text
water	72:16	0:0	6	psz_text
arg	72:26	72:31	5	"\n"
water	72:26	0:0	6	"\n"
water	72:32	0:0	4	;
water	73:4	0:0	4	}
call	75:4	75:60	2	memmove
arg	75:13	75:25	3	&psz_text[0]
op	75:13	0:0	4	&
water	75:14	0:0	4	psz_text
op	75:22	0:0	4	[
water	75:23	0:0	4	0
op	75:24	0:0	4	]
arg	75:27	75:39	3	&psz_text[1]
op	75:27	0:0	4	&
water	75:28	0:0	4	psz_text
op	75:36	0:0	4	[
water	75:37	0:0	4	1
op	75:38	0:0	4	]
arg	75:41	75:60	3	strlen(psz_text)
call	75:41	75:58	4	strlen
arg	75:49	75:58	5	psz_text
water	75:49	0:0	6	psz_text
water	75:61	0:0	2	;
water	76:4	0:0	2	p_subtitle
op	76:14	0:0	2	->
water	76:16	0:0	2	psz_text
op	76:25	0:0	2	=
water	76:27	0:0	2	psz_text
water	76:35	0:0	2	;
return	77:4	77:22	2	VLC_SUCCESS
water	77:11	0:0	3	VLC_SUCCESS

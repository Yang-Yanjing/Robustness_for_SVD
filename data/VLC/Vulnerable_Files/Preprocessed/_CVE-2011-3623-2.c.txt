func	1:0	39:0	0	static void	AVI_ChunkDumpDebug_level
params	1:36	0:0	1	
param	1:38	1:57	2	vlc_object_t *	p_obj
param	2:38	2:57	2	avi_chunk_t *	p_chk
param	2:59	2:71	2	int	i_level
stmnts	0:0	38:4	1	
decl	4:4	4:18	2	char	str[1024]
decl	5:4	5:9	2	int	i
decl	6:4	6:24	2	avi_chunk_t	*p_child
call	7:4	7:36	2	memset
arg	7:12	7:15	3	str
water	7:12	0:0	4	str
arg	7:17	7:20	3	' '
water	7:17	0:0	4	' '
arg	7:22	7:36	3	sizeof(str)
op	7:22	0:0	4	sizeof
water	7:28	0:0	4	(
water	7:30	0:0	4	str
water	7:34	0:0	4	)
water	7:37	0:0	2	;
for	8:4	11:4	2	(i = 1 ;i < i_level;i ++)
forinit	8:9	8:14	3	i = 1 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	1
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < i_level
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	i_level
forexpr	8:29	8:30	3	i ++
water	8:29	0:0	4	i
op	8:30	0:0	4	++
stmts	9:4	11:4	3	
water	9:4	0:0	4	{
water	10:8	0:0	4	str
op	10:11	0:0	4	[
water	10:12	0:0	4	i
op	10:14	0:0	4	*
water	10:16	0:0	4	5
op	10:17	0:0	4	]
op	10:19	0:0	4	=
water	10:21	0:0	4	'|'
water	10:24	0:0	4	;
water	11:4	0:0	4	}
if	12:4	23:4	2	(p_chk -> common . i_chunk_fourcc == AVIFOURCC_RIFF || p_chk -> common . i_chunk_fourcc == AVIFOURCC_ON2 || p_chk -> common . i_chunk_fourcc == AVIFOURCC_LIST)
cond	12:8	14:40	3	p_chk -> common . i_chunk_fourcc == AVIFOURCC_RIFF || p_chk -> common . i_chunk_fourcc == AVIFOURCC_ON2 || p_chk -> common . i_chunk_fourcc == AVIFOURCC_LIST
water	12:8	0:0	4	p_chk
op	12:13	0:0	4	->
water	12:15	0:0	4	common
op	12:21	0:0	4	.
water	12:22	0:0	4	i_chunk_fourcc
op	12:37	0:0	4	==
water	12:40	0:0	4	AVIFOURCC_RIFF
op	12:55	0:0	4	||
water	13:8	0:0	4	p_chk
op	13:13	0:0	4	->
water	13:15	0:0	4	common
op	13:21	0:0	4	.
water	13:22	0:0	4	i_chunk_fourcc
op	13:37	0:0	4	==
water	13:40	0:0	4	AVIFOURCC_ON2
op	13:55	0:0	4	||
water	14:8	0:0	4	p_chk
op	14:13	0:0	4	->
water	14:15	0:0	4	common
op	14:21	0:0	4	.
water	14:22	0:0	4	i_chunk_fourcc
op	14:37	0:0	4	==
water	14:40	0:0	4	AVIFOURCC_LIST
stmts	15:4	23:4	3	
water	15:4	0:0	4	{
call	16:8	22:43	4	sprintf
arg	16:17	16:34	5	str+i_level*5
water	16:17	0:0	6	str
op	16:21	0:0	6	+
water	16:23	0:0	6	i_level
op	16:31	0:0	6	*
water	16:33	0:0	6	5
arg	17:17	17:60	5	"%c %4.4s-%4.4s size:%"PRIu64" pos:%"PRIu64
water	17:17	0:0	6	"%c %4.4s-%4.4s size:%"
water	17:40	0:0	6	PRIu64
water	17:46	0:0	6	" pos:%"
water	17:54	0:0	6	PRIu64
arg	18:17	18:36	5	i_level?'+':'*'
water	18:17	0:0	6	i_level
water	18:25	0:0	6	?
water	18:27	0:0	6	'+'
water	18:31	0:0	6	:
water	18:33	0:0	6	'*'
arg	19:17	19:53	5	(char*)&p_chk->common.i_chunk_fourcc
water	19:17	0:0	6	(
water	19:18	0:0	6	char
op	19:22	0:0	6	*
water	19:23	0:0	6	)
op	19:24	0:0	6	&
water	19:25	0:0	6	p_chk
op	19:30	0:0	6	->
water	19:32	0:0	6	common
op	19:38	0:0	6	.
water	19:39	0:0	6	i_chunk_fourcc
arg	20:17	20:43	5	(char*)&p_chk->list.i_type
water	20:17	0:0	6	(
water	20:18	0:0	6	char
op	20:22	0:0	6	*
water	20:23	0:0	6	)
op	20:24	0:0	6	&
water	20:25	0:0	6	p_chk
op	20:30	0:0	6	->
water	20:32	0:0	6	list
op	20:36	0:0	6	.
water	20:37	0:0	6	i_type
arg	21:17	21:43	5	p_chk->common.i_chunk_size
water	21:17	0:0	6	p_chk
op	21:22	0:0	6	->
water	21:24	0:0	6	common
op	21:30	0:0	6	.
water	21:31	0:0	6	i_chunk_size
arg	22:17	22:43	5	p_chk->common.i_chunk_pos
water	22:17	0:0	6	p_chk
op	22:22	0:0	6	->
water	22:24	0:0	6	common
op	22:30	0:0	6	.
water	22:31	0:0	6	i_chunk_pos
water	22:44	0:0	4	;
water	23:4	0:0	4	}
else	24:4	31:4	2
stmts	25:4	31:4	3	
water	25:4	0:0	4	{
call	26:8	30:43	4	sprintf
arg	26:17	26:34	5	str+i_level*5
water	26:17	0:0	6	str
op	26:21	0:0	6	+
water	26:23	0:0	6	i_level
op	26:31	0:0	6	*
water	26:33	0:0	6	5
arg	27:17	27:53	5	"+ %4.4s size:%"PRIu64" pos:%"PRIu64
water	27:17	0:0	6	"+ %4.4s size:%"
water	27:33	0:0	6	PRIu64
water	27:39	0:0	6	" pos:%"
water	27:47	0:0	6	PRIu64
arg	28:17	28:53	5	(char*)&p_chk->common.i_chunk_fourcc
water	28:17	0:0	6	(
water	28:18	0:0	6	char
op	28:22	0:0	6	*
water	28:23	0:0	6	)
op	28:24	0:0	6	&
water	28:25	0:0	6	p_chk
op	28:30	0:0	6	->
water	28:32	0:0	6	common
op	28:38	0:0	6	.
water	28:39	0:0	6	i_chunk_fourcc
arg	29:17	29:43	5	p_chk->common.i_chunk_size
water	29:17	0:0	6	p_chk
op	29:22	0:0	6	->
water	29:24	0:0	6	common
op	29:30	0:0	6	.
water	29:31	0:0	6	i_chunk_size
arg	30:17	30:43	5	p_chk->common.i_chunk_pos
water	30:17	0:0	6	p_chk
op	30:22	0:0	6	->
water	30:24	0:0	6	common
op	30:30	0:0	6	.
water	30:31	0:0	6	i_chunk_pos
water	30:44	0:0	4	;
water	31:4	0:0	4	}
call	32:4	32:30	2	msg_Dbg
arg	32:13	32:18	3	p_obj
water	32:13	0:0	4	p_obj
arg	32:20	32:24	3	"%s"
water	32:20	0:0	4	"%s"
arg	32:26	32:30	3	str
water	32:26	0:0	4	str
water	32:31	0:0	2	;
water	33:4	0:0	2	p_child
op	33:12	0:0	2	=
water	33:14	0:0	2	p_chk
op	33:19	0:0	2	->
water	33:21	0:0	2	common
op	33:27	0:0	2	.
water	33:28	0:0	2	p_first
water	33:35	0:0	2	;
while	34:4	38:4	2	(p_child)
cond	34:11	34:11	3	p_child
water	34:11	0:0	4	p_child
stmts	35:4	38:4	3	
water	35:4	0:0	4	{
call	36:8	36:62	4	AVI_ChunkDumpDebug_level
arg	36:34	36:39	5	p_obj
water	36:34	0:0	6	p_obj
arg	36:41	36:48	5	p_child
water	36:41	0:0	6	p_child
arg	36:50	36:62	5	i_level+1
water	36:50	0:0	6	i_level
op	36:58	0:0	6	+
water	36:60	0:0	6	1
water	36:63	0:0	4	;
water	37:8	0:0	4	p_child
op	37:16	0:0	4	=
water	37:18	0:0	4	p_child
op	37:25	0:0	4	->
water	37:27	0:0	4	common
op	37:33	0:0	4	.
water	37:34	0:0	4	p_next
water	37:40	0:0	4	;
water	38:4	0:0	4	}

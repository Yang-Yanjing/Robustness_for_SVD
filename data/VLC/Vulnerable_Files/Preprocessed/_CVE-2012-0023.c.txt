func	2:0	71:0	0	static int	get_chunk_header
params	2:27	0:0	1	
param	2:28	2:44	2	demux_t *	p_demux
stmnts	0:0	70:12	1	
decl	4:4	4:30	2	int	i_readSize
water	4:18	0:0	2	,
decl	4:4	4:30	2	int	i_num_recs
decl	5:4	5:22	2	uint8_t	*p_hdr_buf
decl	6:4	6:25	2	const uint8_t	*p_peek
decl	7:4	7:39	2	demux_sys_t	*p_sys
op	7:23	0:0	2	=
water	7:25	0:0	2	p_demux
op	7:32	0:0	2	->
water	7:34	0:0	2	p_sys
decl	8:4	8:22	2	int	i_payload_size
call	9:4	9:64	2	msg_Dbg
arg	9:12	9:19	3	p_demux
water	9:12	0:0	4	p_demux
arg	9:21	9:43	3	"parsing ty chunk #%d"
water	9:21	0:0	4	"parsing ty chunk #%d"
arg	9:45	9:64	3	p_sys->i_cur_chunk
water	9:45	0:0	4	p_sys
op	9:50	0:0	4	->
water	9:52	0:0	4	i_cur_chunk
water	9:65	0:0	2	;
if	11:4	14:4	2	(p_sys -> i_stuff_cnt > 0)
cond	11:8	11:29	3	p_sys -> i_stuff_cnt > 0
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	i_stuff_cnt
op	11:27	0:0	4	>
water	11:29	0:0	4	0
stmts	11:32	14:4	3	
water	11:32	0:0	4	{
call	12:8	12:57	4	stream_Read
arg	12:21	12:31	5	p_demux->s
water	12:21	0:0	6	p_demux
op	12:28	0:0	6	->
water	12:30	0:0	6	s
arg	12:33	12:37	5	NULL
water	12:33	0:0	6	NULL
arg	12:39	12:57	5	p_sys->i_stuff_cnt
water	12:39	0:0	6	p_sys
op	12:44	0:0	6	->
water	12:46	0:0	6	i_stuff_cnt
water	12:58	0:0	4	;
water	13:8	0:0	4	p_sys
op	13:13	0:0	4	->
water	13:15	0:0	4	i_stuff_cnt
op	13:27	0:0	4	=
water	13:29	0:0	4	0
water	13:30	0:0	4	;
water	14:4	0:0	4	}
water	16:4	0:0	2	i_readSize
op	16:15	0:0	2	=
call	16:17	16:53	2	stream_Peek
arg	16:30	16:40	3	p_demux->s
water	16:30	0:0	4	p_demux
op	16:37	0:0	4	->
water	16:39	0:0	4	s
arg	16:42	16:49	3	&p_peek
op	16:42	0:0	4	&
water	16:43	0:0	4	p_peek
arg	16:51	16:53	3	4
water	16:51	0:0	4	4
water	16:54	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	i_cur_chunk
op	17:22	0:0	2	++
water	17:24	0:0	2	;
if	18:4	23:4	2	(( i_readSize < 4 ) || (U32_AT (& p_peek [ 0 ] ) == 0 ))
cond	18:9	18:58	3	( i_readSize < 4 ) || (U32_AT (& p_peek [ 0 ] ) == 0 )
water	18:9	0:0	4	(
water	18:10	0:0	4	i_readSize
op	18:21	0:0	4	<
water	18:23	0:0	4	4
water	18:24	0:0	4	)
op	18:26	0:0	4	||
water	18:29	0:0	4	(
call	18:31	18:51	4	U32_AT
arg	18:38	18:51	5	&p_peek[0]
op	18:38	0:0	6	&
water	18:39	0:0	6	p_peek
op	18:45	0:0	6	[
water	18:47	0:0	6	0
op	18:49	0:0	6	]
op	18:53	0:0	4	==
water	18:56	0:0	4	0
water	18:58	0:0	4	)
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	eof
op	21:19	0:0	4	=
water	21:21	0:0	4	1
water	21:22	0:0	4	;
return	22:8	22:16	4	0
water	22:15	0:0	5	0
water	23:4	0:0	4	}
if	25:4	30:4	2	(U32_AT (& p_peek [ 0 ] ) == TIVO_PES_FILEID)
cond	25:8	25:34	3	U32_AT (& p_peek [ 0 ] ) == TIVO_PES_FILEID
call	25:8	25:29	4	U32_AT
arg	25:16	25:29	5	&p_peek[0]
op	25:16	0:0	6	&
water	25:17	0:0	6	p_peek
op	25:23	0:0	6	[
water	25:25	0:0	6	0
op	25:27	0:0	6	]
op	25:31	0:0	4	==
water	25:34	0:0	4	TIVO_PES_FILEID
stmts	26:4	30:4	3	
water	26:4	0:0	4	{
call	28:8	28:28	4	parse_master
arg	28:21	28:28	5	p_demux
water	28:21	0:0	6	p_demux
water	28:29	0:0	4	;
return	29:8	29:40	4	get_chunk_header(p_demux)
call	29:15	29:39	5	get_chunk_header
arg	29:32	29:39	6	p_demux
water	29:32	0:0	7	p_demux
water	30:4	0:0	4	}
if	32:4	41:4	2	(p_peek [ 3 ] & 0 x80)
cond	32:8	32:21	3	p_peek [ 3 ] & 0 x80
water	32:8	0:0	4	p_peek
op	32:14	0:0	4	[
water	32:15	0:0	4	3
op	32:16	0:0	4	]
op	32:18	0:0	4	&
water	32:20	0:0	4	0
water	32:21	0:0	4	x80
stmts	33:4	41:4	3	
water	33:4	0:0	4	{
water	35:8	0:0	4	p_sys
op	35:13	0:0	4	->
water	35:15	0:0	4	i_num_recs
op	35:26	0:0	4	=
water	35:28	0:0	4	i_num_recs
op	35:39	0:0	4	=
water	35:41	0:0	4	(
water	35:42	0:0	4	p_peek
op	35:48	0:0	4	[
water	35:49	0:0	4	1
op	35:50	0:0	4	]
op	35:52	0:0	4	<<
water	35:55	0:0	4	8
water	35:56	0:0	4	)
op	35:58	0:0	4	+
water	35:60	0:0	4	p_peek
op	35:66	0:0	4	[
water	35:67	0:0	4	0
op	35:68	0:0	4	]
water	35:69	0:0	4	;
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	i_seq_rec
op	36:25	0:0	4	=
water	36:27	0:0	4	(
water	36:28	0:0	4	p_peek
op	36:34	0:0	4	[
water	36:35	0:0	4	3
op	36:36	0:0	4	]
op	36:38	0:0	4	<<
water	36:41	0:0	4	8
water	36:42	0:0	4	)
op	36:44	0:0	4	+
water	36:46	0:0	4	p_peek
op	36:52	0:0	4	[
water	36:53	0:0	4	2
op	36:54	0:0	4	]
water	36:55	0:0	4	;
if	37:8	40:8	4	(p_sys -> i_seq_rec != 0 xffff)
cond	37:12	37:33	5	p_sys -> i_seq_rec != 0 xffff
water	37:12	0:0	6	p_sys
op	37:17	0:0	6	->
water	37:19	0:0	6	i_seq_rec
op	37:29	0:0	6	!=
water	37:32	0:0	6	0
water	37:33	0:0	6	xffff
stmts	38:8	40:8	5	
water	38:8	0:0	6	{
water	39:12	0:0	6	p_sys
op	39:17	0:0	6	->
water	39:19	0:0	6	i_seq_rec
op	39:29	0:0	6	&=
water	39:32	0:0	6	~0x8000
water	39:39	0:0	6	;
water	40:8	0:0	6	}
water	41:4	0:0	4	}
else	42:4	47:4	2
stmts	43:4	47:4	3	
water	43:4	0:0	4	{
water	45:8	0:0	4	p_sys
op	45:13	0:0	4	->
water	45:15	0:0	4	i_num_recs
op	45:26	0:0	4	=
water	45:28	0:0	4	i_num_recs
op	45:39	0:0	4	=
water	45:41	0:0	4	p_peek
op	45:47	0:0	4	[
water	45:48	0:0	4	0
op	45:49	0:0	4	]
water	45:50	0:0	4	;
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	i_seq_rec
op	46:25	0:0	4	=
water	46:27	0:0	4	p_peek
op	46:33	0:0	4	[
water	46:34	0:0	4	1
op	46:35	0:0	4	]
water	46:36	0:0	4	;
water	47:4	0:0	4	}
water	48:4	0:0	2	p_sys
op	48:9	0:0	2	->
water	48:11	0:0	2	i_cur_rec
op	48:21	0:0	2	=
water	48:23	0:0	2	0
water	48:24	0:0	2	;
water	49:4	0:0	2	p_sys
op	49:9	0:0	2	->
water	49:11	0:0	2	b_first_chunk
op	49:25	0:0	2	=
water	49:27	0:0	2	false
water	49:32	0:0	2	;
call	51:4	51:24	2	free
arg	51:9	51:24	3	p_sys->rec_hdrs
water	51:9	0:0	4	p_sys
op	51:14	0:0	4	->
water	51:16	0:0	4	rec_hdrs
water	51:25	0:0	2	;
call	53:4	53:37	2	stream_Read
arg	53:17	53:27	3	p_demux->s
water	53:17	0:0	4	p_demux
op	53:24	0:0	4	->
water	53:26	0:0	4	s
arg	53:29	53:33	3	NULL
water	53:29	0:0	4	NULL
arg	53:35	53:37	3	4
water	53:35	0:0	4	4
water	53:38	0:0	2	;
water	55:4	0:0	2	p_hdr_buf
op	55:14	0:0	2	=
call	55:16	55:38	2	malloc
arg	55:23	55:38	3	i_num_recs*16
water	55:23	0:0	4	i_num_recs
op	55:34	0:0	4	*
water	55:36	0:0	4	16
water	55:39	0:0	2	;
if	56:4	60:4	2	(stream_Read (p_demux -> s ,p_hdr_buf ,i_num_recs * 16 ) < i_num_recs * 16)
cond	56:8	56:75	3	stream_Read (p_demux -> s ,p_hdr_buf ,i_num_recs * 16 ) < i_num_recs * 16
call	56:8	56:58	4	stream_Read
arg	56:20	56:30	5	p_demux->s
water	56:20	0:0	6	p_demux
op	56:27	0:0	6	->
water	56:29	0:0	6	s
arg	56:32	56:41	5	p_hdr_buf
water	56:32	0:0	6	p_hdr_buf
arg	56:43	56:58	5	i_num_recs*16
water	56:43	0:0	6	i_num_recs
op	56:54	0:0	6	*
water	56:56	0:0	6	16
op	56:60	0:0	4	<
water	56:62	0:0	4	i_num_recs
op	56:73	0:0	4	*
water	56:75	0:0	4	16
stmts	56:79	60:4	3	
water	56:79	0:0	4	{
call	57:8	57:24	4	free
arg	57:14	57:24	5	p_hdr_buf
water	57:14	0:0	6	p_hdr_buf
water	57:25	0:0	4	;
water	58:8	0:0	4	p_sys
op	58:13	0:0	4	->
water	58:15	0:0	4	eof
op	58:19	0:0	4	=
water	58:21	0:0	4	true
water	58:25	0:0	4	;
return	59:8	59:16	4	0
water	59:15	0:0	5	0
water	60:4	0:0	4	}
water	62:4	0:0	2	p_sys
op	62:9	0:0	2	->
water	62:11	0:0	2	rec_hdrs
op	62:20	0:0	2	=
call	62:22	63:27	2	parse_chunk_headers
arg	62:42	62:51	3	p_hdr_buf
water	62:42	0:0	4	p_hdr_buf
arg	62:53	62:63	3	i_num_recs
water	62:53	0:0	4	i_num_recs
arg	63:12	63:27	3	&i_payload_size
op	63:12	0:0	4	&
water	63:13	0:0	4	i_payload_size
water	63:28	0:0	2	;
call	64:4	64:18	2	free
arg	64:9	64:18	3	p_hdr_buf
water	64:9	0:0	4	p_hdr_buf
water	64:19	0:0	2	;
water	65:4	0:0	2	p_sys
op	65:9	0:0	2	->
water	65:11	0:0	2	i_stuff_cnt
op	65:23	0:0	2	=
water	65:25	0:0	2	CHUNK_SIZE
op	65:36	0:0	2	-
water	65:38	0:0	2	4
op	65:40	0:0	2	-
water	66:8	0:0	2	(
water	66:9	0:0	2	p_sys
op	66:14	0:0	2	->
water	66:16	0:0	2	i_num_recs
op	66:27	0:0	2	*
water	66:29	0:0	2	16
water	66:31	0:0	2	)
op	66:33	0:0	2	-
water	66:35	0:0	2	i_payload_size
water	66:49	0:0	2	;
if	67:4	69:37	2	(p_sys -> i_stuff_cnt > 0)
cond	67:8	67:29	3	p_sys -> i_stuff_cnt > 0
water	67:8	0:0	4	p_sys
op	67:13	0:0	4	->
water	67:15	0:0	4	i_stuff_cnt
op	67:27	0:0	4	>
water	67:29	0:0	4	0
stmts	68:8	69:37	3	
call	68:8	69:36	4	msg_Dbg
arg	68:17	68:24	5	p_demux
water	68:17	0:0	6	p_demux
arg	68:26	68:59	5	"chunk has %d stuff bytes at end"
water	68:26	0:0	6	"chunk has %d stuff bytes at end"
arg	69:17	69:36	5	p_sys->i_stuff_cnt
water	69:17	0:0	6	p_sys
op	69:22	0:0	6	->
water	69:24	0:0	6	i_stuff_cnt
water	69:37	0:0	4	;
return	70:4	70:12	2	1
water	70:11	0:0	3	1

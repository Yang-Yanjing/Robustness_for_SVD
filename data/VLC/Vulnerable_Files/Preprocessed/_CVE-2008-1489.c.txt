func	1:0	29:0	0	static int	MP4_ReadBox_rdrf
params	1:27	0:0	1	
param	1:29	1:47	2	stream_t *	p_stream
param	1:49	1:66	2	MP4_Box_t *	p_box
stmnts	0:0	28:25	1	
decl	3:4	3:18	2	uint32_t	i_len
call	4:4	4:43	2	MP4_READBOX_ENTER
arg	4:23	4:43	3	MP4_Box_data_rdrf_t
water	4:23	0:0	4	MP4_Box_data_rdrf_t
water	4:44	0:0	2	;
call	5:4	5:44	2	MP4_GETVERSIONFLAGS
arg	5:25	5:44	3	p_box->data.p_rdrf
water	5:25	0:0	4	p_box
op	5:30	0:0	4	->
water	5:32	0:0	4	data
op	5:36	0:0	4	.
water	5:37	0:0	4	p_rdrf
water	5:45	0:0	2	;
call	6:4	6:50	2	MP4_GETFOURCC
arg	6:19	6:50	3	p_box->data.p_rdrf->i_ref_type
water	6:19	0:0	4	p_box
op	6:24	0:0	4	->
water	6:26	0:0	4	data
op	6:30	0:0	4	.
water	6:31	0:0	4	p_rdrf
op	6:37	0:0	4	->
water	6:39	0:0	4	i_ref_type
water	6:51	0:0	2	;
call	7:4	7:25	2	MP4_GET4BYTES
arg	7:19	7:25	3	i_len
water	7:19	0:0	4	i_len
water	7:26	0:0	2	;
if	8:4	17:4	2	(i_len > 0)
cond	8:8	8:16	3	i_len > 0
water	8:8	0:0	4	i_len
op	8:14	0:0	4	>
water	8:16	0:0	4	0
stmts	9:4	17:4	3	
water	9:4	0:0	4	{
decl	10:8	10:18	4	uint32_t	i
water	11:8	0:0	4	p_box
op	11:13	0:0	4	->
water	11:15	0:0	4	data
op	11:19	0:0	4	.
water	11:20	0:0	4	p_rdrf
op	11:26	0:0	4	->
water	11:28	0:0	4	psz_ref
op	11:36	0:0	4	=
call	11:38	11:56	4	malloc
arg	11:46	11:56	5	i_len+1
water	11:46	0:0	6	i_len
op	11:53	0:0	6	+
water	11:55	0:0	6	1
water	11:57	0:0	4	;
for	12:8	15:8	4	(i = 0 ;i < i_len;i ++)
forinit	12:13	12:18	5	i = 0 ;
water	12:13	0:0	6	i
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	i < i_len
water	12:20	0:0	6	i
op	12:22	0:0	6	<
water	12:24	0:0	6	i_len
forexpr	12:31	12:32	5	i ++
water	12:31	0:0	6	i
op	12:32	0:0	6	++
stmts	13:8	15:8	5	
water	13:8	0:0	6	{
call	14:12	14:57	6	MP4_GET1BYTE
arg	14:26	14:57	7	p_box->data.p_rdrf->psz_ref[i]
water	14:26	0:0	8	p_box
op	14:31	0:0	8	->
water	14:33	0:0	8	data
op	14:37	0:0	8	.
water	14:38	0:0	8	p_rdrf
op	14:44	0:0	8	->
water	14:46	0:0	8	psz_ref
op	14:53	0:0	8	[
water	14:54	0:0	8	i
op	14:55	0:0	8	]
water	14:58	0:0	6	;
water	15:8	0:0	6	}
water	16:8	0:0	4	p_box
op	16:13	0:0	4	->
water	16:15	0:0	4	data
op	16:19	0:0	4	.
water	16:20	0:0	4	p_rdrf
op	16:26	0:0	4	->
water	16:28	0:0	4	psz_ref
op	16:35	0:0	4	[
water	16:36	0:0	4	i_len
op	16:41	0:0	4	]
op	16:43	0:0	4	=
water	16:45	0:0	4	'\0'
water	16:49	0:0	4	;
water	17:4	0:0	4	}
else	18:4	21:4	2
stmts	19:4	21:4	3	
water	19:4	0:0	4	{
water	20:8	0:0	4	p_box
op	20:13	0:0	4	->
water	20:15	0:0	4	data
op	20:19	0:0	4	.
water	20:20	0:0	4	p_rdrf
op	20:26	0:0	4	->
water	20:28	0:0	4	psz_ref
op	20:36	0:0	4	=
water	20:38	0:0	4	NULL
water	20:42	0:0	4	;
water	21:4	0:0	4	}
call	23:4	26:41	2	msg_Dbg
arg	23:13	23:21	3	p_stream
water	23:13	0:0	4	p_stream
arg	24:13	24:51	3	"read box: \"rdrf\" type:%4.4s ref %s"
water	24:13	0:0	4	"read box: \"rdrf\" type:%4.4s ref %s"
arg	25:13	25:51	3	(char*)&p_box->data.p_rdrf->i_ref_type
water	25:13	0:0	4	(
water	25:14	0:0	4	char
op	25:18	0:0	4	*
water	25:19	0:0	4	)
op	25:20	0:0	4	&
water	25:21	0:0	4	p_box
op	25:26	0:0	4	->
water	25:28	0:0	4	data
op	25:32	0:0	4	.
water	25:33	0:0	4	p_rdrf
op	25:39	0:0	4	->
water	25:41	0:0	4	i_ref_type
arg	26:13	26:41	3	p_box->data.p_rdrf->psz_ref
water	26:13	0:0	4	p_box
op	26:18	0:0	4	->
water	26:20	0:0	4	data
op	26:24	0:0	4	.
water	26:25	0:0	4	p_rdrf
op	26:31	0:0	4	->
water	26:33	0:0	4	psz_ref
water	26:42	0:0	2	;
call	28:4	28:24	2	MP4_READBOX_EXIT
arg	28:22	28:24	3	1
water	28:22	0:0	4	1
water	28:25	0:0	2	;

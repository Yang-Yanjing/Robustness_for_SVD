func	1:0	42:0	0	static int	ReadKukiChunk
params	1:24	0:0	1	
param	1:26	1:42	2	demux_t *	p_demux
param	1:44	1:60	2	uint64_t	i_size
stmnts	0:0	41:22	1	
decl	3:4	3:39	2	demux_sys_t	*p_sys
op	3:23	0:0	2	=
water	3:25	0:0	2	p_demux
op	3:32	0:0	2	->
water	3:34	0:0	2	p_sys
decl	4:4	4:25	2	const uint8_t	*p_peek
if	7:4	11:4	2	(i_size > INT32_MAX)
cond	7:8	7:17	3	i_size > INT32_MAX
water	7:8	0:0	4	i_size
op	7:15	0:0	4	>
water	7:17	0:0	4	INT32_MAX
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
call	9:8	9:55	4	msg_Err
arg	9:17	9:24	5	p_demux
water	9:17	0:0	6	p_demux
arg	9:26	9:55	5	"Magic Cookie chunk too big"
water	9:26	0:0	6	"Magic Cookie chunk too big"
water	9:56	0:0	4	;
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
water	11:4	0:0	4	}
if	13:4	17:4	2	(( unsigned int )vlc_stream_Peek (p_demux -> s ,& p_peek ,( int ) i_size ) < i_size)
cond	13:8	13:76	3	( unsigned int )vlc_stream_Peek (p_demux -> s ,& p_peek ,( int ) i_size ) < i_size
water	13:8	0:0	4	(
water	13:9	0:0	4	unsigned
water	13:18	0:0	4	int
water	13:21	0:0	4	)
call	13:22	13:72	4	vlc_stream_Peek
arg	13:39	13:49	5	p_demux->s
water	13:39	0:0	6	p_demux
op	13:46	0:0	6	->
water	13:48	0:0	6	s
arg	13:51	13:58	5	&p_peek
op	13:51	0:0	6	&
water	13:52	0:0	6	p_peek
arg	13:60	13:72	5	(int)i_size
water	13:60	0:0	6	(
water	13:61	0:0	6	int
water	13:64	0:0	6	)
water	13:65	0:0	6	i_size
op	13:74	0:0	4	<
water	13:76	0:0	4	i_size
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
call	15:8	15:53	4	msg_Err
arg	15:17	15:24	5	p_demux
water	15:17	0:0	6	p_demux
arg	15:26	15:53	5	"Couldn't peek extra data"
water	15:26	0:0	6	"Couldn't peek extra data"
water	15:54	0:0	4	;
return	16:8	16:27	4	VLC_EGENERIC
water	16:15	0:0	5	VLC_EGENERIC
water	17:4	0:0	4	}
if	19:4	23:4	2	(p_sys -> fmt . i_codec == VLC_CODEC_ALAC)
cond	19:8	19:31	3	p_sys -> fmt . i_codec == VLC_CODEC_ALAC
water	19:8	0:0	4	p_sys
op	19:13	0:0	4	->
water	19:15	0:0	4	fmt
op	19:18	0:0	4	.
water	19:19	0:0	4	i_codec
op	19:28	0:0	4	==
water	19:31	0:0	4	VLC_CODEC_ALAC
stmts	20:4	23:4	3	
water	20:4	0:0	4	{
decl	21:8	21:64	4	int	error
op	21:18	0:0	4	=
call	21:20	21:63	5	ProcessALACCookie
arg	21:39	21:46	6	p_demux
water	21:39	0:0	7	p_demux
arg	21:48	21:54	6	p_peek
water	21:48	0:0	7	p_peek
arg	21:56	21:63	6	i_size
water	21:56	0:0	7	i_size
if	22:8	22:32	4	(error)
cond	22:12	22:12	5	error
water	22:12	0:0	6	error
stmts	22:20	22:32	5	
return	22:20	22:32	6	error
water	22:27	0:0	7	error
water	23:4	0:0	4	}
else	24:4	28:4	2
stmts	24:9	28:4	3	
if	24:9	28:4	4	(p_sys -> fmt . i_codec == VLC_CODEC_MP4A)
cond	24:13	24:35	5	p_sys -> fmt . i_codec == VLC_CODEC_MP4A
water	24:13	0:0	6	p_sys
op	24:18	0:0	6	->
water	24:20	0:0	6	fmt
op	24:23	0:0	6	.
water	24:24	0:0	6	i_codec
op	24:32	0:0	6	==
water	24:35	0:0	6	VLC_CODEC_MP4A
stmts	25:4	28:4	5	
water	25:4	0:0	6	{
decl	26:8	26:63	6	int	error
op	26:18	0:0	6	=
call	26:20	26:62	7	ProcessAACCookie
arg	26:38	26:45	8	p_demux
water	26:38	0:0	9	p_demux
arg	26:47	26:53	8	p_peek
water	26:47	0:0	9	p_peek
arg	26:55	26:62	8	i_size
water	26:55	0:0	9	i_size
if	27:8	27:32	6	(error)
cond	27:12	27:12	7	error
water	27:12	0:0	8	error
stmts	27:20	27:32	7	
return	27:20	27:32	8	error
water	27:27	0:0	9	error
water	28:4	0:0	6	}
else	29:4	39:4	2
stmts	30:4	39:4	3	
water	30:4	0:0	4	{
water	31:8	0:0	4	p_sys
op	31:13	0:0	4	->
water	31:15	0:0	4	fmt
op	31:18	0:0	4	.
water	31:19	0:0	4	i_extra
op	31:27	0:0	4	=
water	31:29	0:0	4	(
water	31:30	0:0	4	int
water	31:33	0:0	4	)
water	31:34	0:0	4	i_size
water	31:40	0:0	4	;
water	32:8	0:0	4	p_sys
op	32:13	0:0	4	->
water	32:15	0:0	4	fmt
op	32:18	0:0	4	.
water	32:19	0:0	4	p_extra
op	32:27	0:0	4	=
call	32:29	32:44	4	malloc
arg	32:37	32:44	5	i_size
water	32:37	0:0	6	i_size
water	32:45	0:0	4	;
if	34:8	37:8	4	(! p_sys -> fmt . p_extra)
cond	34:12	34:24	5	! p_sys -> fmt . p_extra
op	34:12	0:0	6	!
water	34:13	0:0	6	p_sys
op	34:18	0:0	6	->
water	34:20	0:0	6	fmt
op	34:23	0:0	6	.
water	34:24	0:0	6	p_extra
stmts	35:8	37:8	5	
water	35:8	0:0	6	{
return	36:12	36:29	6	VLC_ENOMEM
water	36:19	0:0	7	VLC_ENOMEM
water	37:8	0:0	6	}
call	38:8	38:63	4	memcpy
arg	38:16	38:34	5	p_sys->fmt.p_extra
water	38:16	0:0	6	p_sys
op	38:21	0:0	6	->
water	38:23	0:0	6	fmt
op	38:26	0:0	6	.
water	38:27	0:0	6	p_extra
arg	38:36	38:42	5	p_peek
water	38:36	0:0	6	p_peek
arg	38:44	38:63	5	p_sys->fmt.i_extra
water	38:44	0:0	6	p_sys
op	38:49	0:0	6	->
water	38:51	0:0	6	fmt
op	38:54	0:0	6	.
water	38:55	0:0	6	i_extra
water	38:64	0:0	4	;
water	39:4	0:0	4	}
return	41:4	41:22	2	VLC_SUCCESS
water	41:11	0:0	3	VLC_SUCCESS

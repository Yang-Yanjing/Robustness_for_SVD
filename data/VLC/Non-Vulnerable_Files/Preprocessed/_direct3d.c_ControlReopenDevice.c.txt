func	2:0	66:0	0	static int	ControlReopenDevice
params	2:30	0:0	1	
param	2:31	2:49	2	vout_display_t *	vd
stmnts	0:0	65:22	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
if	5:4	12:4	2	(! sys -> use_desktop)
cond	5:8	5:14	3	! sys -> use_desktop
op	5:8	0:0	4	!
water	5:9	0:0	4	sys
op	5:12	0:0	4	->
water	5:14	0:0	4	use_desktop
stmts	5:27	12:4	3	
water	5:27	0:0	4	{
water	7:8	0:0	4	sys
op	7:11	0:0	4	->
water	7:13	0:0	4	desktop_save
op	7:25	0:0	4	.
water	7:26	0:0	4	is_fullscreen
op	7:40	0:0	4	=
water	7:42	0:0	4	vd
op	7:44	0:0	4	->
water	7:46	0:0	4	cfg
op	7:49	0:0	4	->
water	7:51	0:0	4	is_fullscreen
water	7:64	0:0	4	;
water	8:8	0:0	4	sys
op	8:11	0:0	4	->
water	8:13	0:0	4	desktop_save
op	8:25	0:0	4	.
water	8:26	0:0	4	is_on_top
op	8:40	0:0	4	=
water	8:42	0:0	4	sys
op	8:45	0:0	4	->
water	8:47	0:0	4	is_on_top
water	8:56	0:0	4	;
decl	9:8	9:54	4	WINDOWPLACEMENT	wp
op	9:27	0:0	4	=
water	9:29	0:0	4	{
op	9:31	0:0	4	.
water	9:32	0:0	4	length
op	9:39	0:0	4	=
op	9:41	0:0	4	sizeof
water	9:47	0:0	4	(
water	9:48	0:0	4	wp
water	9:50	0:0	4	)
water	9:51	0:0	4	,
water	9:53	0:0	4	}
call	10:8	10:71	4	GetWindowPlacement
arg	10:27	10:66	5	sys->hparent?sys->hparent:sys->hwnd
water	10:27	0:0	6	sys
op	10:30	0:0	6	->
water	10:32	0:0	6	hparent
water	10:40	0:0	6	?
water	10:42	0:0	6	sys
op	10:45	0:0	6	->
water	10:47	0:0	6	hparent
water	10:55	0:0	6	:
water	10:57	0:0	6	sys
op	10:60	0:0	6	->
water	10:62	0:0	6	hwnd
arg	10:68	10:71	5	&wp
op	10:68	0:0	6	&
water	10:69	0:0	6	wp
water	10:72	0:0	4	;
water	11:8	0:0	4	sys
op	11:11	0:0	4	->
water	11:13	0:0	4	desktop_save
op	11:25	0:0	4	.
water	11:26	0:0	4	win
op	11:30	0:0	4	=
water	11:32	0:0	4	wp
op	11:34	0:0	4	.
water	11:35	0:0	4	rcNormalPosition
water	11:51	0:0	4	;
water	12:4	0:0	4	}
call	14:4	14:20	2	Direct3DClose
arg	14:18	14:20	3	vd
water	14:18	0:0	4	vd
water	14:21	0:0	2	;
call	15:4	15:30	2	EventThreadStop
arg	15:20	15:30	3	sys->event
water	15:20	0:0	4	sys
op	15:23	0:0	4	->
water	15:25	0:0	4	event
water	15:31	0:0	2	;
call	17:4	17:29	2	vlc_mutex_lock
arg	17:19	17:29	3	&sys->lock
op	17:19	0:0	4	&
water	17:20	0:0	4	sys
op	17:23	0:0	4	->
water	17:25	0:0	4	lock
water	17:30	0:0	2	;
water	18:4	0:0	2	sys
op	18:7	0:0	2	->
water	18:9	0:0	2	use_desktop
op	18:21	0:0	2	=
water	18:23	0:0	2	sys
op	18:26	0:0	2	->
water	18:28	0:0	2	desktop_requested
water	18:45	0:0	2	;
water	19:4	0:0	2	sys
op	19:7	0:0	2	->
water	19:9	0:0	2	ch_desktop
op	19:20	0:0	2	=
water	19:22	0:0	2	false
water	19:27	0:0	2	;
call	20:4	20:31	2	vlc_mutex_unlock
arg	20:21	20:31	3	&sys->lock
op	20:21	0:0	4	&
water	20:22	0:0	4	sys
op	20:25	0:0	4	->
water	20:27	0:0	4	lock
water	20:32	0:0	2	;
decl	22:4	22:19	2	event_cfg_t	cfg
call	23:4	23:31	2	memset
arg	23:11	23:15	3	&cfg
op	23:11	0:0	4	&
water	23:12	0:0	4	cfg
arg	23:17	23:18	3	0
water	23:17	0:0	4	0
arg	23:20	23:31	3	sizeof(cfg)
op	23:20	0:0	4	sizeof
water	23:26	0:0	4	(
water	23:27	0:0	4	cfg
water	23:30	0:0	4	)
water	23:32	0:0	2	;
water	24:4	0:0	2	cfg
op	24:7	0:0	2	.
water	24:8	0:0	2	use_desktop
op	24:20	0:0	2	=
water	24:22	0:0	2	sys
op	24:25	0:0	2	->
water	24:27	0:0	2	use_desktop
water	24:38	0:0	2	;
if	25:4	31:4	2	(! sys -> use_desktop)
cond	25:8	25:14	3	! sys -> use_desktop
op	25:8	0:0	4	!
water	25:9	0:0	4	sys
op	25:12	0:0	4	->
water	25:14	0:0	4	use_desktop
stmts	25:27	31:4	3	
water	25:27	0:0	4	{
water	26:8	0:0	4	cfg
op	26:11	0:0	4	.
water	26:12	0:0	4	win
op	26:15	0:0	4	.
water	26:16	0:0	4	type
op	26:23	0:0	4	=
water	26:25	0:0	4	VOUT_WINDOW_TYPE_HWND
water	26:46	0:0	4	;
water	27:8	0:0	4	cfg
op	27:11	0:0	4	.
water	27:12	0:0	4	win
op	27:15	0:0	4	.
water	27:16	0:0	4	x
op	27:23	0:0	4	=
water	27:25	0:0	4	sys
op	27:28	0:0	4	->
water	27:30	0:0	4	desktop_save
op	27:42	0:0	4	.
water	27:43	0:0	4	win
op	27:46	0:0	4	.
water	27:47	0:0	4	left
water	27:51	0:0	4	;
water	28:8	0:0	4	cfg
op	28:11	0:0	4	.
water	28:12	0:0	4	win
op	28:15	0:0	4	.
water	28:16	0:0	4	y
op	28:23	0:0	4	=
water	28:25	0:0	4	sys
op	28:28	0:0	4	->
water	28:30	0:0	4	desktop_save
op	28:42	0:0	4	.
water	28:43	0:0	4	win
op	28:46	0:0	4	.
water	28:47	0:0	4	top
water	28:50	0:0	4	;
water	29:8	0:0	4	cfg
op	29:11	0:0	4	.
water	29:12	0:0	4	win
op	29:15	0:0	4	.
water	29:16	0:0	4	width
op	29:23	0:0	4	=
water	29:25	0:0	4	sys
op	29:28	0:0	4	->
water	29:30	0:0	4	desktop_save
op	29:42	0:0	4	.
water	29:43	0:0	4	win
op	29:46	0:0	4	.
water	29:47	0:0	4	right
op	29:54	0:0	4	-
water	29:56	0:0	4	sys
op	29:59	0:0	4	->
water	29:61	0:0	4	desktop_save
op	29:73	0:0	4	.
water	29:74	0:0	4	win
op	29:77	0:0	4	.
water	29:78	0:0	4	left
water	29:82	0:0	4	;
water	30:8	0:0	4	cfg
op	30:11	0:0	4	.
water	30:12	0:0	4	win
op	30:15	0:0	4	.
water	30:16	0:0	4	height
op	30:23	0:0	4	=
water	30:25	0:0	4	sys
op	30:28	0:0	4	->
water	30:30	0:0	4	desktop_save
op	30:42	0:0	4	.
water	30:43	0:0	4	win
op	30:46	0:0	4	.
water	30:47	0:0	4	bottom
op	30:54	0:0	4	-
water	30:56	0:0	4	sys
op	30:59	0:0	4	->
water	30:61	0:0	4	desktop_save
op	30:73	0:0	4	.
water	30:74	0:0	4	win
op	30:77	0:0	4	.
water	30:78	0:0	4	top
water	30:81	0:0	4	;
water	31:4	0:0	4	}
decl	32:4	32:21	2	event_hwnd_t	hwnd
if	33:4	36:4	2	(EventThreadStart (sys -> event ,& hwnd ,& cfg ))
cond	33:8	33:48	3	EventThreadStart (sys -> event ,& hwnd ,& cfg )
call	33:8	33:48	4	EventThreadStart
arg	33:25	33:35	5	sys->event
water	33:25	0:0	6	sys
op	33:28	0:0	6	->
water	33:30	0:0	6	event
arg	33:37	33:42	5	&hwnd
op	33:37	0:0	6	&
water	33:38	0:0	6	hwnd
arg	33:44	33:48	5	&cfg
op	33:44	0:0	6	&
water	33:45	0:0	6	cfg
stmts	33:51	36:4	3	
water	33:51	0:0	4	{
call	34:8	34:52	4	msg_Err
arg	34:16	34:18	5	vd
water	34:16	0:0	6	vd
arg	34:20	34:52	5	"Failed to restart event thread"
water	34:20	0:0	6	"Failed to restart event thread"
water	34:53	0:0	4	;
return	35:8	35:27	4	VLC_EGENERIC
water	35:15	0:0	5	VLC_EGENERIC
water	36:4	0:0	4	}
water	37:4	0:0	2	sys
op	37:7	0:0	2	->
water	37:9	0:0	2	parent_window
op	37:23	0:0	2	=
water	37:25	0:0	2	hwnd
op	37:29	0:0	2	.
water	37:30	0:0	2	parent_window
water	37:43	0:0	2	;
water	38:4	0:0	2	sys
op	38:7	0:0	2	->
water	38:9	0:0	2	hparent
op	38:23	0:0	2	=
water	38:25	0:0	2	hwnd
op	38:29	0:0	2	.
water	38:30	0:0	2	hparent
water	38:37	0:0	2	;
water	39:4	0:0	2	sys
op	39:7	0:0	2	->
water	39:9	0:0	2	hwnd
op	39:23	0:0	2	=
water	39:25	0:0	2	hwnd
op	39:29	0:0	2	.
water	39:30	0:0	2	hwnd
water	39:34	0:0	2	;
water	40:4	0:0	2	sys
op	40:7	0:0	2	->
water	40:9	0:0	2	hvideownd
op	40:23	0:0	2	=
water	40:25	0:0	2	hwnd
op	40:29	0:0	2	.
water	40:30	0:0	2	hvideownd
water	40:39	0:0	2	;
water	41:4	0:0	2	sys
op	41:7	0:0	2	->
water	41:9	0:0	2	hfswnd
op	41:23	0:0	2	=
water	41:25	0:0	2	hwnd
op	41:29	0:0	2	.
water	41:30	0:0	2	hfswnd
water	41:36	0:0	2	;
call	42:4	42:34	2	SetRectEmpty
arg	42:17	42:34	3	&sys->rect_parent
op	42:17	0:0	4	&
water	42:18	0:0	4	sys
op	42:21	0:0	4	->
water	42:23	0:0	4	rect_parent
water	42:35	0:0	2	;
decl	44:4	44:22	2	video_format_t	fmt
if	45:4	49:4	2	(Direct3DOpen (vd ,& fmt ))
cond	45:8	45:29	3	Direct3DOpen (vd ,& fmt )
call	45:8	45:29	4	Direct3DOpen
arg	45:21	45:23	5	vd
water	45:21	0:0	6	vd
arg	45:25	45:29	5	&fmt
op	45:25	0:0	6	&
water	45:26	0:0	6	fmt
stmts	45:32	49:4	3	
water	45:32	0:0	4	{
call	46:8	46:22	4	CommonClean
arg	46:20	46:22	5	vd
water	46:20	0:0	6	vd
water	46:23	0:0	4	;
call	47:8	47:45	4	msg_Err
arg	47:16	47:18	5	vd
water	47:16	0:0	6	vd
arg	47:20	47:45	5	"Failed to reopen device"
water	47:20	0:0	6	"Failed to reopen device"
water	47:46	0:0	4	;
return	48:8	48:27	4	VLC_EGENERIC
water	48:15	0:0	5	VLC_EGENERIC
water	49:4	0:0	4	}
water	50:4	0:0	2	vd
op	50:6	0:0	2	->
water	50:8	0:0	2	fmt
op	50:12	0:0	2	=
water	50:14	0:0	2	fmt
water	50:17	0:0	2	;
water	51:4	0:0	2	sys
op	51:7	0:0	2	->
water	51:9	0:0	2	is_first_display
op	51:26	0:0	2	=
water	51:28	0:0	2	true
water	51:32	0:0	2	;
if	52:4	58:4	2	(sys -> use_desktop)
cond	52:8	52:13	3	sys -> use_desktop
water	52:8	0:0	4	sys
op	52:11	0:0	4	->
water	52:13	0:0	4	use_desktop
stmts	52:26	58:4	3	
water	52:26	0:0	4	{
if	54:8	55:55	4	(sys -> desktop_save . is_fullscreen)
cond	54:12	54:30	5	sys -> desktop_save . is_fullscreen
water	54:12	0:0	6	sys
op	54:15	0:0	6	->
water	54:17	0:0	6	desktop_save
op	54:29	0:0	6	.
water	54:30	0:0	6	is_fullscreen
stmts	55:12	55:55	5	
call	55:12	55:54	6	vout_display_SendEventFullscreen
arg	55:45	55:47	7	vd
water	55:45	0:0	8	vd
arg	55:49	55:54	7	false
water	55:49	0:0	8	false
water	55:55	0:0	6	;
if	56:8	57:70	4	(sys -> desktop_save . is_on_top)
cond	56:12	56:30	5	sys -> desktop_save . is_on_top
water	56:12	0:0	6	sys
op	56:15	0:0	6	->
water	56:17	0:0	6	desktop_save
op	56:29	0:0	6	.
water	56:30	0:0	6	is_on_top
stmts	57:12	57:70	5	
call	57:12	57:69	6	vout_display_SendWindowState
arg	57:41	57:43	7	vd
water	57:41	0:0	8	vd
arg	57:45	57:69	7	VOUT_WINDOW_STATE_NORMAL
water	57:45	0:0	8	VOUT_WINDOW_STATE_NORMAL
water	57:70	0:0	6	;
water	58:4	0:0	4	}
else	58:6	64:4	2
stmts	58:11	64:4	3	
water	58:11	0:0	4	{
if	60:8	61:54	4	(sys -> desktop_save . is_fullscreen)
cond	60:12	60:30	5	sys -> desktop_save . is_fullscreen
water	60:12	0:0	6	sys
op	60:15	0:0	6	->
water	60:17	0:0	6	desktop_save
op	60:29	0:0	6	.
water	60:30	0:0	6	is_fullscreen
stmts	61:12	61:54	5	
call	61:12	61:53	6	vout_display_SendEventFullscreen
arg	61:45	61:47	7	vd
water	61:45	0:0	8	vd
arg	61:49	61:53	7	true
water	61:49	0:0	8	true
water	61:54	0:0	6	;
if	62:8	63:69	4	(sys -> desktop_save . is_on_top)
cond	62:12	62:30	5	sys -> desktop_save . is_on_top
water	62:12	0:0	6	sys
op	62:15	0:0	6	->
water	62:17	0:0	6	desktop_save
op	62:29	0:0	6	.
water	62:30	0:0	6	is_on_top
stmts	63:12	63:69	5	
call	63:12	63:68	6	vout_display_SendWindowState
arg	63:41	63:43	7	vd
water	63:41	0:0	8	vd
arg	63:45	63:68	7	VOUT_WINDOW_STATE_ABOVE
water	63:45	0:0	8	VOUT_WINDOW_STATE_ABOVE
water	63:69	0:0	6	;
water	64:4	0:0	4	}
return	65:4	65:22	2	VLC_SUCCESS
water	65:11	0:0	3	VLC_SUCCESS

func	2:0	54:0	0	static void	SlaveDemux
params	2:22	0:0	1	
param	2:24	2:47	2	input_thread_t *	p_input
param	2:49	2:71	2	bool *	pb_demux_polled
stmnts	0:0	53:4	1	
decl	4:4	4:18	2	int64_t	i_time
decl	5:4	5:9	2	int	i
op	6:4	0:0	2	*
water	6:5	0:0	2	pb_demux_polled
op	6:21	0:0	2	=
water	6:23	0:0	2	false
water	6:28	0:0	2	;
if	7:4	11:4	2	(demux_Control (p_input -> p -> input . p_demux ,DEMUX_GET_TIME ,& i_time ))
cond	7:8	7:74	3	demux_Control (p_input -> p -> input . p_demux ,DEMUX_GET_TIME ,& i_time )
call	7:8	7:74	4	demux_Control
arg	7:23	7:48	5	p_input->p->input.p_demux
water	7:23	0:0	6	p_input
op	7:30	0:0	6	->
water	7:32	0:0	6	p
op	7:33	0:0	6	->
water	7:35	0:0	6	input
op	7:40	0:0	6	.
water	7:41	0:0	6	p_demux
arg	7:50	7:64	5	DEMUX_GET_TIME
water	7:50	0:0	6	DEMUX_GET_TIME
arg	7:66	7:74	5	&i_time
op	7:66	0:0	6	&
water	7:67	0:0	6	i_time
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
call	9:8	9:62	4	msg_Err
arg	9:17	9:24	5	p_input
water	9:17	0:0	6	p_input
arg	9:26	9:62	5	"demux doesn't like DEMUX_GET_TIME"
water	9:26	0:0	6	"demux doesn't like DEMUX_GET_TIME"
water	9:63	0:0	4	;
return	10:8	10:14	4	
water	11:4	0:0	4	}
for	12:4	53:4	2	(i = 0 ;i < p_input -> p -> i_slave;i ++)
forinit	12:9	12:14	3	i = 0 ;
water	12:9	0:0	4	i
op	12:11	0:0	4	=
water	12:13	0:0	4	0
water	12:14	0:0	4	;
cond	12:16	12:32	3	i < p_input -> p -> i_slave
water	12:16	0:0	4	i
op	12:18	0:0	4	<
water	12:20	0:0	4	p_input
op	12:27	0:0	4	->
water	12:29	0:0	4	p
op	12:30	0:0	4	->
water	12:32	0:0	4	i_slave
forexpr	12:41	12:42	3	i ++
water	12:41	0:0	4	i
op	12:42	0:0	4	++
stmts	13:4	53:4	3	
water	13:4	0:0	4	{
decl	14:8	14:49	4	input_source_t	*in
op	14:27	0:0	4	=
water	14:29	0:0	4	p_input
op	14:36	0:0	4	->
water	14:38	0:0	4	p
op	14:39	0:0	4	->
water	14:41	0:0	4	slave
op	14:46	0:0	4	[
water	14:47	0:0	4	i
op	14:48	0:0	4	]
decl	15:8	15:17	4	int	i_ret
if	16:8	17:20	4	(in -> b_eof)
cond	16:12	16:16	5	in -> b_eof
water	16:12	0:0	6	in
op	16:14	0:0	6	->
water	16:16	0:0	6	b_eof
stmts	17:12	17:20	5	
continue	17:12	17:20	6	
decl	18:8	18:65	4	const bool	b_demux_polled
op	18:34	0:0	4	=
water	18:36	0:0	4	in
op	18:38	0:0	4	->
water	18:40	0:0	4	p_demux
op	18:47	0:0	4	->
water	18:49	0:0	4	pf_demux
op	18:58	0:0	4	!=
water	18:61	0:0	4	NULL
if	19:8	20:20	4	(! b_demux_polled)
cond	19:12	19:13	5	! b_demux_polled
op	19:12	0:0	6	!
water	19:13	0:0	6	b_demux_polled
stmts	20:12	20:20	5	
continue	20:12	20:20	6	
op	21:8	0:0	4	*
water	21:9	0:0	4	pb_demux_polled
op	21:25	0:0	4	=
water	21:27	0:0	4	true
water	21:31	0:0	4	;
if	23:8	43:8	4	(demux_Control (in -> p_demux ,DEMUX_SET_NEXT_DEMUX_TIME ,i_time ))
cond	23:12	23:74	5	demux_Control (in -> p_demux ,DEMUX_SET_NEXT_DEMUX_TIME ,i_time )
call	23:12	23:74	6	demux_Control
arg	23:27	23:38	7	in->p_demux
water	23:27	0:0	8	in
op	23:29	0:0	8	->
water	23:31	0:0	8	p_demux
arg	23:40	23:65	7	DEMUX_SET_NEXT_DEMUX_TIME
water	23:40	0:0	8	DEMUX_SET_NEXT_DEMUX_TIME
arg	23:67	23:74	7	i_time
water	23:67	0:0	8	i_time
stmts	24:8	43:8	5	
water	24:8	0:0	6	{
for	25:12	42:12	6	(;;)
forinit	25:17	25:17	7	;
water	25:17	0:0	8	;
cond	0:0	0:0	7	
forexpr	0:0	0:0	7	
stmts	26:12	42:12	7	
water	26:12	0:0	8	{
decl	27:16	27:31	8	int64_t	i_stime
if	28:16	34:16	8	(demux_Control (in -> p_demux ,DEMUX_GET_TIME ,& i_stime ))
cond	28:20	28:73	9	demux_Control (in -> p_demux ,DEMUX_GET_TIME ,& i_stime )
call	28:20	28:73	10	demux_Control
arg	28:35	28:46	11	in->p_demux
water	28:35	0:0	12	in
op	28:37	0:0	12	->
water	28:39	0:0	12	p_demux
arg	28:48	28:62	11	DEMUX_GET_TIME
water	28:48	0:0	12	DEMUX_GET_TIME
arg	28:64	28:73	11	&i_stime
op	28:64	0:0	12	&
water	28:65	0:0	12	i_stime
stmts	29:16	34:16	9	
water	29:16	0:0	10	{
call	30:20	31:56	10	msg_Err
arg	30:29	30:36	11	p_input
water	30:29	0:0	12	p_input
arg	30:38	31:52	11	"slave[%d] doesn't like ""DEMUX_GET_TIME -> EOF"
water	30:38	0:0	12	"slave[%d] doesn't like "
water	31:29	0:0	12	"DEMUX_GET_TIME -> EOF"
arg	31:54	31:56	11	i
water	31:54	0:0	12	i
water	31:57	0:0	10	;
water	32:20	0:0	10	i_ret
op	32:26	0:0	10	=
water	32:28	0:0	10	0
water	32:29	0:0	10	;
break	33:20	33:25	10	
water	34:16	0:0	10	}
if	35:16	39:16	8	(i_stime >= i_time)
cond	35:20	35:31	9	i_stime >= i_time
water	35:20	0:0	10	i_stime
op	35:28	0:0	10	>=
water	35:31	0:0	10	i_time
stmts	36:16	39:16	9	
water	36:16	0:0	10	{
water	37:20	0:0	10	i_ret
op	37:26	0:0	10	=
water	37:28	0:0	10	1
water	37:29	0:0	10	;
break	38:20	38:25	10	
water	39:16	0:0	10	}
if	40:16	41:25	8	(( i_ret =demux_Demux (in -> p_demux ) ) <= 0)
cond	40:20	40:62	9	( i_ret =demux_Demux (in -> p_demux ) ) <= 0
water	40:20	0:0	10	(
water	40:22	0:0	10	i_ret
op	40:28	0:0	10	=
call	40:30	40:55	10	demux_Demux
arg	40:43	40:55	11	in->p_demux
water	40:43	0:0	12	in
op	40:45	0:0	12	->
water	40:47	0:0	12	p_demux
water	40:57	0:0	10	)
op	40:59	0:0	10	<=
water	40:62	0:0	10	0
stmts	41:20	41:25	9	
break	41:20	41:25	10	
water	42:12	0:0	8	}
water	43:8	0:0	6	}
else	44:8	47:8	4
stmts	45:8	47:8	5	
water	45:8	0:0	6	{
water	46:12	0:0	6	i_ret
op	46:18	0:0	6	=
call	46:20	46:45	6	demux_Demux
arg	46:33	46:45	7	in->p_demux
water	46:33	0:0	8	in
op	46:35	0:0	8	->
water	46:37	0:0	8	p_demux
water	46:46	0:0	6	;
water	47:8	0:0	6	}
if	48:8	52:8	4	(i_ret <= 0)
cond	48:12	48:21	5	i_ret <= 0
water	48:12	0:0	6	i_ret
op	48:18	0:0	6	<=
water	48:21	0:0	6	0
stmts	49:8	52:8	5	
water	49:8	0:0	6	{
call	50:12	50:48	6	msg_Dbg
arg	50:21	50:28	7	p_input
water	50:21	0:0	8	p_input
arg	50:30	50:44	7	"slave %d EOF"
water	50:30	0:0	8	"slave %d EOF"
arg	50:46	50:48	7	i
water	50:46	0:0	8	i
water	50:49	0:0	6	;
water	51:12	0:0	6	in
op	51:14	0:0	6	->
water	51:16	0:0	6	b_eof
op	51:22	0:0	6	=
water	51:24	0:0	6	true
water	51:28	0:0	6	;
water	52:8	0:0	6	}
water	53:4	0:0	4	}

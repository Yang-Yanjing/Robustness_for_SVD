decl	1:7	1:54	0	block_t	*Encode
water	1:23	0:0	0	(
water	1:25	0:0	0	encoder_t
op	1:35	0:0	0	*
water	1:36	0:0	0	,
water	1:38	0:0	0	subpicture_t
op	1:51	0:0	0	*
water	1:53	0:0	0	)
func	2:0	26:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	25:22	1	
decl	4:4	4:42	2	encoder_t	*p_enc
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	encoder_t
op	4:34	0:0	2	*
water	4:35	0:0	2	)
water	4:36	0:0	2	p_this
switch	5:4	21:4	2	(p_enc -> fmt_out . i_codec)
cond	5:12	5:27	3	p_enc -> fmt_out . i_codec
water	5:12	0:0	4	p_enc
op	5:17	0:0	4	->
water	5:19	0:0	4	fmt_out
op	5:26	0:0	4	.
water	5:27	0:0	4	i_codec
stmts	6:4	21:4	3	
water	6:4	0:0	4	{
label	7:8	7:27	4	case VLC_CODEC_SUBT :
if	8:12	14:12	4	(( p_enc -> fmt_out . subs . psz_encoding != NULL ) &&strcasecmp (p_enc -> fmt_out . subs . psz_encoding ,"utf8" ) &&strcasecmp (p_enc -> fmt_out . subs . psz_encoding ,"UTF-8" ))
cond	8:16	10:70	5	( p_enc -> fmt_out . subs . psz_encoding != NULL ) &&strcasecmp (p_enc -> fmt_out . subs . psz_encoding ,"utf8" ) &&strcasecmp (p_enc -> fmt_out . subs . psz_encoding ,"UTF-8" )
water	8:16	0:0	6	(
water	8:18	0:0	6	p_enc
op	8:23	0:0	6	->
water	8:25	0:0	6	fmt_out
op	8:32	0:0	6	.
water	8:33	0:0	6	subs
op	8:37	0:0	6	.
water	8:38	0:0	6	psz_encoding
op	8:51	0:0	6	!=
water	8:54	0:0	6	NULL
water	8:59	0:0	6	)
op	9:13	0:0	6	&&
call	9:16	9:69	6	strcasecmp
arg	9:28	9:60	7	p_enc->fmt_out.subs.psz_encoding
water	9:28	0:0	8	p_enc
op	9:33	0:0	8	->
water	9:35	0:0	8	fmt_out
op	9:42	0:0	8	.
water	9:43	0:0	8	subs
op	9:47	0:0	8	.
water	9:48	0:0	8	psz_encoding
arg	9:62	9:69	7	"utf8"
water	9:62	0:0	8	"utf8"
op	10:13	0:0	6	&&
call	10:16	10:70	6	strcasecmp
arg	10:28	10:60	7	p_enc->fmt_out.subs.psz_encoding
water	10:28	0:0	8	p_enc
op	10:33	0:0	8	->
water	10:35	0:0	8	fmt_out
op	10:42	0:0	8	.
water	10:43	0:0	8	subs
op	10:47	0:0	8	.
water	10:48	0:0	8	psz_encoding
arg	10:62	10:70	7	"UTF-8"
water	10:62	0:0	8	"UTF-8"
stmts	11:12	14:12	5	
water	11:12	0:0	6	{
call	12:16	12:65	6	msg_Err
arg	12:25	12:31	7	p_this
water	12:25	0:0	8	p_this
arg	12:33	12:65	7	"Only UTF-8 encoding supported"
water	12:33	0:0	8	"Only UTF-8 encoding supported"
water	12:66	0:0	6	;
return	13:16	13:35	6	VLC_EGENERIC
water	13:23	0:0	7	VLC_EGENERIC
water	14:12	0:0	6	}
label	15:8	15:31	4	case VLC_CODEC_ITU_T140 :
break	16:12	16:17	4	
label	17:8	17:15	4	default :
if	18:12	19:35	4	(! p_enc -> b_force)
cond	18:16	18:24	5	! p_enc -> b_force
op	18:16	0:0	6	!
water	18:17	0:0	6	p_enc
op	18:22	0:0	6	->
water	18:24	0:0	6	b_force
stmts	19:16	19:35	5	
return	19:16	19:35	6	VLC_EGENERIC
water	19:23	0:0	7	VLC_EGENERIC
water	20:12	0:0	4	p_enc
op	20:17	0:0	4	->
water	20:19	0:0	4	fmt_out
op	20:26	0:0	4	.
water	20:27	0:0	4	i_codec
op	20:35	0:0	4	=
water	20:37	0:0	4	VLC_CODEC_ITU_T140
water	20:55	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	p_enc
op	22:9	0:0	2	->
water	22:11	0:0	2	p_sys
op	22:17	0:0	2	=
water	22:19	0:0	2	NULL
water	22:23	0:0	2	;
water	23:4	0:0	2	p_enc
op	23:9	0:0	2	->
water	23:11	0:0	2	pf_encode_sub
op	23:25	0:0	2	=
water	23:27	0:0	2	Encode
water	23:33	0:0	2	;
water	24:4	0:0	2	p_enc
op	24:9	0:0	2	->
water	24:11	0:0	2	fmt_out
op	24:18	0:0	2	.
water	24:19	0:0	2	i_cat
op	24:25	0:0	2	=
water	24:27	0:0	2	SPU_ES
water	24:33	0:0	2	;
return	25:4	25:22	2	VLC_SUCCESS
water	25:11	0:0	3	VLC_SUCCESS

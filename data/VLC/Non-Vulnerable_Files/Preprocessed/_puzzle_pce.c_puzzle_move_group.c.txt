func	2:0	15:0	0	void	puzzle_move_group
params	2:22	0:0	1	
param	2:24	2:42	2	filter_t *	p_filter
param	2:44	2:59	2	int32_t	i_piece
param	2:61	2:73	2	int32_t	i_dx
param	2:75	2:87	2	int32_t	i_dy
stmnts	0:0	14:4	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:62	2	uint32_t	i_group_ID
op	5:24	0:0	2	=
water	5:26	0:0	2	p_sys
op	5:31	0:0	2	->
water	5:33	0:0	2	ps_pieces
op	5:42	0:0	2	[
water	5:43	0:0	2	i_piece
op	5:50	0:0	2	]
op	5:51	0:0	2	.
water	5:52	0:0	2	i_group_ID
for	6:4	14:4	2	( uint32_t i = 0 ;i < p_sys -> s_allocated . i_pieces_nbr;i ++)
forinit	0:0	6:23	3	 uint32_t i = 0 ;
decl	6:9	6:23	4	uint32_t	i
op	6:20	0:0	4	=
water	6:22	0:0	4	0
cond	6:25	6:48	3	i < p_sys -> s_allocated . i_pieces_nbr
water	6:25	0:0	4	i
op	6:27	0:0	4	<
water	6:29	0:0	4	p_sys
op	6:34	0:0	4	->
water	6:36	0:0	4	s_allocated
op	6:47	0:0	4	.
water	6:48	0:0	4	i_pieces_nbr
forexpr	6:62	6:63	3	i ++
water	6:62	0:0	4	i
op	6:63	0:0	4	++
stmts	6:67	14:4	3	
water	6:67	0:0	4	{
decl	7:8	7:48	4	piece_t	*ps_piece
op	7:26	0:0	4	=
op	7:28	0:0	4	&
water	7:29	0:0	4	p_sys
op	7:34	0:0	4	->
water	7:36	0:0	4	ps_pieces
op	7:45	0:0	4	[
water	7:46	0:0	4	i
op	7:47	0:0	4	]
if	8:8	13:8	4	(ps_piece -> i_group_ID == i_group_ID)
cond	8:12	8:36	5	ps_piece -> i_group_ID == i_group_ID
water	8:12	0:0	6	ps_piece
op	8:20	0:0	6	->
water	8:22	0:0	6	i_group_ID
op	8:33	0:0	6	==
water	8:36	0:0	6	i_group_ID
stmts	8:48	13:8	5	
water	8:48	0:0	6	{
water	9:12	0:0	6	ps_piece
op	9:20	0:0	6	->
water	9:22	0:0	6	b_finished
op	9:33	0:0	6	=
water	9:35	0:0	6	false
water	9:40	0:0	6	;
water	10:12	0:0	6	ps_piece
op	10:20	0:0	6	->
water	10:22	0:0	6	ps_piece_in_plane
op	10:39	0:0	6	[
water	10:40	0:0	6	0
op	10:41	0:0	6	]
op	10:42	0:0	6	.
water	10:43	0:0	6	i_actual_x
op	10:54	0:0	6	+=
water	10:57	0:0	6	i_dx
water	10:61	0:0	6	;
water	11:12	0:0	6	ps_piece
op	11:20	0:0	6	->
water	11:22	0:0	6	ps_piece_in_plane
op	11:39	0:0	6	[
water	11:40	0:0	6	0
op	11:41	0:0	6	]
op	11:42	0:0	6	.
water	11:43	0:0	6	i_actual_y
op	11:54	0:0	6	+=
water	11:57	0:0	6	i_dy
water	11:61	0:0	6	;
call	12:12	12:50	6	puzzle_calculate_corners
arg	12:38	12:46	7	p_filter
water	12:38	0:0	8	p_filter
arg	12:48	12:50	7	i
water	12:48	0:0	8	i
water	12:51	0:0	6	;
water	13:8	0:0	6	}
water	14:4	0:0	4	}

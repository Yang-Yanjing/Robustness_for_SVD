func	2:0	35:0	0	static int	ImageWriteUrl
params	2:24	0:0	1	
param	2:26	2:50	2	image_handler_t *	p_image
param	2:52	2:68	2	picture_t *	p_pic
param	3:26	3:50	2	video_format_t *	p_fmt_in
param	3:52	3:77	2	video_format_t *	p_fmt_out
param	4:26	4:46	2	const char *	psz_url
stmnts	0:0	34:43	1	
decl	6:4	6:20	2	block_t	*p_block
decl	7:4	7:14	2	FILE	*file
if	8:4	12:4	2	(! p_fmt_out -> i_chroma)
cond	8:8	8:20	3	! p_fmt_out -> i_chroma
op	8:8	0:0	4	!
water	8:9	0:0	4	p_fmt_out
op	8:18	0:0	4	->
water	8:20	0:0	4	i_chroma
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
water	11:8	0:0	4	p_fmt_out
op	11:17	0:0	4	->
water	11:19	0:0	4	i_chroma
op	11:28	0:0	4	=
call	11:30	11:56	4	image_Ext2Fourcc
arg	11:48	11:56	5	psz_url
water	11:48	0:0	6	psz_url
water	11:57	0:0	4	;
water	12:4	0:0	4	}
water	13:4	0:0	2	file
op	13:9	0:0	2	=
call	13:11	13:36	2	vlc_fopen
arg	13:22	13:29	3	psz_url
water	13:22	0:0	4	psz_url
arg	13:31	13:36	3	"wb"
water	13:31	0:0	4	"wb"
water	13:37	0:0	2	;
if	14:4	18:4	2	(! file)
cond	14:8	14:9	3	! file
op	14:8	0:0	4	!
water	14:9	0:0	4	file
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:77	4	msg_Err
arg	16:17	16:34	5	p_image->p_parent
water	16:17	0:0	6	p_image
op	16:24	0:0	6	->
water	16:26	0:0	6	p_parent
arg	16:36	16:44	5	"%s: %s"
water	16:36	0:0	6	"%s: %s"
arg	16:46	16:53	5	psz_url
water	16:46	0:0	6	psz_url
arg	16:55	16:77	5	vlc_strerror_c(errno)
call	16:55	16:75	6	vlc_strerror_c
arg	16:70	16:75	7	errno
water	16:70	0:0	8	errno
water	16:78	0:0	4	;
return	17:8	17:27	4	VLC_EGENERIC
water	17:15	0:0	5	VLC_EGENERIC
water	18:4	0:0	4	}
water	19:4	0:0	2	p_block
op	19:12	0:0	2	=
call	19:14	19:62	2	ImageWrite
arg	19:26	19:33	3	p_image
water	19:26	0:0	4	p_image
arg	19:35	19:40	3	p_pic
water	19:35	0:0	4	p_pic
arg	19:42	19:50	3	p_fmt_in
water	19:42	0:0	4	p_fmt_in
arg	19:52	19:62	3	p_fmt_out
water	19:52	0:0	4	p_fmt_out
water	19:63	0:0	2	;
decl	20:4	20:15	2	int	err
op	20:12	0:0	2	=
water	20:14	0:0	2	0
if	21:4	26:4	2	(p_block)
cond	21:8	21:8	3	p_block
water	21:8	0:0	4	p_block
stmts	22:4	26:4	3	
water	22:4	0:0	4	{
if	23:8	24:23	4	(fwrite (p_block -> p_buffer ,p_block -> i_buffer ,1 ,file ) != 1)
cond	23:12	23:71	5	fwrite (p_block -> p_buffer ,p_block -> i_buffer ,1 ,file ) != 1
call	23:12	23:66	6	fwrite
arg	23:20	23:37	7	p_block->p_buffer
water	23:20	0:0	8	p_block
op	23:27	0:0	8	->
water	23:29	0:0	8	p_buffer
arg	23:39	23:56	7	p_block->i_buffer
water	23:39	0:0	8	p_block
op	23:46	0:0	8	->
water	23:48	0:0	8	i_buffer
arg	23:58	23:59	7	1
water	23:58	0:0	8	1
arg	23:61	23:66	7	file
water	23:61	0:0	8	file
op	23:68	0:0	6	!=
water	23:71	0:0	6	1
stmts	24:12	24:23	5	
water	24:12	0:0	6	err
op	24:16	0:0	6	=
water	24:18	0:0	6	errno
water	24:23	0:0	6	;
call	25:8	25:31	4	block_Release
arg	25:23	25:31	5	p_block
water	25:23	0:0	6	p_block
water	25:32	0:0	4	;
water	26:4	0:0	4	}
if	27:4	28:19	2	(fclose (file ) && ! err)
cond	27:8	27:27	3	fclose (file ) && ! err
call	27:8	27:21	4	fclose
arg	27:16	27:21	5	file
water	27:16	0:0	6	file
op	27:23	0:0	4	&&
op	27:26	0:0	4	!
water	27:27	0:0	4	err
stmts	28:8	28:19	3	
water	28:8	0:0	4	err
op	28:12	0:0	4	=
water	28:14	0:0	4	errno
water	28:19	0:0	4	;
if	29:4	33:4	2	(err)
cond	29:8	29:8	3	err
water	29:8	0:0	4	err
stmts	30:4	33:4	3	
water	30:4	0:0	4	{
water	31:7	0:0	4	errno
op	31:13	0:0	4	=
water	31:15	0:0	4	err
water	31:18	0:0	4	;
call	32:7	32:76	4	msg_Err
arg	32:16	32:33	5	p_image->p_parent
water	32:16	0:0	6	p_image
op	32:23	0:0	6	->
water	32:25	0:0	6	p_parent
arg	32:35	32:43	5	"%s: %s"
water	32:35	0:0	6	"%s: %s"
arg	32:45	32:52	5	psz_url
water	32:45	0:0	6	psz_url
arg	32:54	32:76	5	vlc_strerror_c(errno)
call	32:54	32:74	6	vlc_strerror_c
arg	32:69	32:74	7	errno
water	32:69	0:0	8	errno
water	32:77	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:43	2	err?VLC_EGENERIC:VLC_SUCCESS
water	34:11	0:0	3	err
water	34:15	0:0	3	?
water	34:17	0:0	3	VLC_EGENERIC
water	34:30	0:0	3	:
water	34:32	0:0	3	VLC_SUCCESS

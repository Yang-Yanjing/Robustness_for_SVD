func	2:0	65:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	64:22	1	
decl	4:4	4:47	2	decoder_t	*p_dec
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	decoder_t
op	4:38	0:0	2	*
water	4:39	0:0	2	)
water	4:41	0:0	2	p_this
decl	5:4	5:31	2	decoder_sys_t	*p_sys
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
if	6:4	7:27	2	(p_dec -> fmt_in . i_codec != VLC_CODEC_TELETEXT)
cond	6:8	6:33	3	p_dec -> fmt_in . i_codec != VLC_CODEC_TELETEXT
water	6:8	0:0	4	p_dec
op	6:13	0:0	4	->
water	6:15	0:0	4	fmt_in
op	6:21	0:0	4	.
water	6:22	0:0	4	i_codec
op	6:30	0:0	4	!=
water	6:33	0:0	4	VLC_CODEC_TELETEXT
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
water	8:4	0:0	2	p_sys
op	8:10	0:0	2	=
water	8:12	0:0	2	p_dec
op	8:17	0:0	2	->
water	8:19	0:0	2	p_sys
op	8:25	0:0	2	=
call	8:27	8:60	2	calloc
arg	8:35	8:36	3	1
water	8:35	0:0	4	1
arg	8:38	8:60	3	sizeof(decoder_sys_t)
op	8:38	0:0	4	sizeof
water	8:44	0:0	4	(
water	8:45	0:0	4	decoder_sys_t
water	8:58	0:0	4	)
water	8:61	0:0	2	;
if	9:4	10:25	2	(p_sys == NULL)
cond	9:8	9:17	3	p_sys == NULL
water	9:8	0:0	4	p_sys
op	9:14	0:0	4	==
water	9:17	0:0	4	NULL
stmts	10:8	10:25	3	
return	10:8	10:25	4	VLC_ENOMEM
water	10:15	0:0	5	VLC_ENOMEM
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	i_key
op	11:16	0:0	2	[
water	11:17	0:0	2	0
op	11:18	0:0	2	]
op	11:20	0:0	2	=
water	11:22	0:0	2	p_sys
op	11:27	0:0	2	->
water	11:29	0:0	2	i_key
op	11:34	0:0	2	[
water	11:35	0:0	2	1
op	11:36	0:0	2	]
op	11:38	0:0	2	=
water	11:40	0:0	2	p_sys
op	11:45	0:0	2	->
water	11:47	0:0	2	i_key
op	11:52	0:0	2	[
water	11:53	0:0	2	2
op	11:54	0:0	2	]
op	11:56	0:0	2	=
water	11:58	0:0	2	'*'
op	11:62	0:0	2	-
water	11:64	0:0	2	'0'
water	11:67	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	b_update
op	12:20	0:0	2	=
water	12:22	0:0	2	false
water	12:27	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	p_vbi_dec
op	13:21	0:0	2	=
call	13:23	13:39	2	vbi_decoder_new
water	13:40	0:0	2	;
call	14:4	14:33	2	vlc_mutex_init
arg	14:20	14:33	3	&p_sys->lock
op	14:20	0:0	4	&
water	14:21	0:0	4	p_sys
op	14:26	0:0	4	->
water	14:28	0:0	4	lock
water	14:34	0:0	2	;
if	15:4	20:4	2	(p_sys -> p_vbi_dec == NULL)
cond	15:8	15:28	3	p_sys -> p_vbi_dec == NULL
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	p_vbi_dec
op	15:25	0:0	4	==
water	15:28	0:0	4	NULL
stmts	16:4	20:4	3	
water	16:4	0:0	4	{
call	17:8	17:60	4	msg_Err
arg	17:17	17:22	5	p_dec
water	17:17	0:0	6	p_dec
arg	17:24	17:60	5	"VBI decoder could not be created."
water	17:24	0:0	6	"VBI decoder could not be created."
water	17:61	0:0	4	;
call	18:8	18:22	4	Close
arg	18:15	18:22	5	p_this
water	18:15	0:0	6	p_this
water	18:23	0:0	4	;
return	19:8	19:25	4	VLC_ENOMEM
water	19:15	0:0	5	VLC_ENOMEM
water	20:4	0:0	4	}
for	25:4	32:4	2	( int i = 0 ;ppsz_default_triplet [ i ] != NULL;i ++)
forinit	0:0	25:18	3	 int i = 0 ;
decl	25:9	25:18	4	int	i
op	25:15	0:0	4	=
water	25:17	0:0	4	0
cond	25:20	25:47	3	ppsz_default_triplet [ i ] != NULL
water	25:20	0:0	4	ppsz_default_triplet
op	25:40	0:0	4	[
water	25:41	0:0	4	i
op	25:42	0:0	4	]
op	25:44	0:0	4	!=
water	25:47	0:0	4	NULL
forexpr	25:53	25:54	3	i ++
water	25:53	0:0	4	i
op	25:54	0:0	4	++
stmts	26:4	32:4	3	
water	26:4	0:0	4	{
if	27:8	31:8	4	(p_dec -> fmt_in . psz_language && !strcasecmp (p_dec -> fmt_in . psz_language ,ppsz_default_triplet [ i ] ))
cond	27:12	27:107	5	p_dec -> fmt_in . psz_language && !strcasecmp (p_dec -> fmt_in . psz_language ,ppsz_default_triplet [ i ] )
water	27:12	0:0	6	p_dec
op	27:17	0:0	6	->
water	27:19	0:0	6	fmt_in
op	27:25	0:0	6	.
water	27:26	0:0	6	psz_language
op	27:39	0:0	6	&&
op	27:42	0:0	6	!
call	27:43	27:107	6	strcasecmp
arg	27:55	27:81	7	p_dec->fmt_in.psz_language
water	27:55	0:0	8	p_dec
op	27:60	0:0	8	->
water	27:62	0:0	8	fmt_in
op	27:68	0:0	8	.
water	27:69	0:0	8	psz_language
arg	27:83	27:107	7	ppsz_default_triplet[i]
water	27:83	0:0	8	ppsz_default_triplet
op	27:103	0:0	8	[
water	27:104	0:0	8	i
op	27:105	0:0	8	]
stmts	28:8	31:8	5	
water	28:8	0:0	6	{
call	29:12	29:84	6	vbi_teletext_set_default_region
arg	29:45	29:61	7	p_sys->p_vbi_dec
water	29:45	0:0	8	p_sys
op	29:50	0:0	8	->
water	29:52	0:0	8	p_vbi_dec
arg	29:63	29:84	7	pi_default_triplet[i]
water	29:63	0:0	8	pi_default_triplet
op	29:81	0:0	8	[
water	29:82	0:0	8	i
op	29:83	0:0	8	]
water	29:85	0:0	6	;
call	30:12	30:89	6	msg_Dbg
arg	30:21	30:26	7	p_dec
water	30:21	0:0	8	p_dec
arg	30:28	30:65	7	"overwriting default zvbi region: %d"
water	30:28	0:0	8	"overwriting default zvbi region: %d"
arg	30:67	30:89	7	pi_default_triplet[i]
water	30:67	0:0	8	pi_default_triplet
op	30:85	0:0	8	[
water	30:86	0:0	8	i
op	30:87	0:0	8	]
water	30:90	0:0	6	;
water	31:8	0:0	6	}
water	32:4	0:0	4	}
call	33:4	38:56	2	vbi_event_handler_register
arg	33:32	33:48	3	p_sys->p_vbi_dec
water	33:32	0:0	4	p_sys
op	33:37	0:0	4	->
water	33:39	0:0	4	p_vbi_dec
arg	33:50	38:34	3	VBI_EVENT_TTX_PAGE|VBI_EVENT_NETWORK|VBI_EVENT_CAPTION|VBI_EVENT_TRIGGER|VBI_EVENT_ASPECT|VBI_EVENT_PROG_INFO|VBI_EVENT_NETWORK_ID|0
water	33:50	0:0	4	VBI_EVENT_TTX_PAGE
op	33:69	0:0	4	|
water	33:71	0:0	4	VBI_EVENT_NETWORK
op	33:89	0:0	4	|
water	35:32	0:0	4	VBI_EVENT_CAPTION
op	35:50	0:0	4	|
water	35:52	0:0	4	VBI_EVENT_TRIGGER
op	35:70	0:0	4	|
water	36:32	0:0	4	VBI_EVENT_ASPECT
op	36:49	0:0	4	|
water	36:51	0:0	4	VBI_EVENT_PROG_INFO
op	36:71	0:0	4	|
water	36:73	0:0	4	VBI_EVENT_NETWORK_ID
op	36:94	0:0	4	|
water	38:32	0:0	4	0
arg	38:36	38:48	3	EventHandler
water	38:36	0:0	4	EventHandler
arg	38:50	38:56	3	p_dec
water	38:50	0:0	4	p_dec
water	38:57	0:0	2	;
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	i_wanted_page
op	40:25	0:0	2	=
call	40:27	40:67	2	var_CreateGetInteger
arg	40:49	40:54	3	p_dec
water	40:49	0:0	4	p_dec
arg	40:56	40:67	3	"vbi-page"
water	40:56	0:0	4	"vbi-page"
water	40:68	0:0	2	;
call	41:4	41:59	2	var_AddCallback
arg	41:21	41:26	3	p_dec
water	41:21	0:0	4	p_dec
arg	41:28	41:38	3	"vbi-page"
water	41:28	0:0	4	"vbi-page"
arg	41:40	41:51	3	RequestPage
water	41:40	0:0	4	RequestPage
arg	41:53	41:59	3	p_sys
water	41:53	0:0	4	p_sys
water	41:60	0:0	2	;
if	43:4	48:4	2	(p_sys -> i_wanted_page == 100 && p_dec -> fmt_in . subs . teletext . i_magazine != - 1)
cond	43:8	43:82	3	p_sys -> i_wanted_page == 100 && p_dec -> fmt_in . subs . teletext . i_magazine != - 1
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	i_wanted_page
op	43:29	0:0	4	==
water	43:32	0:0	4	100
op	43:36	0:0	4	&&
water	43:39	0:0	4	p_dec
op	43:44	0:0	4	->
water	43:46	0:0	4	fmt_in
op	43:52	0:0	4	.
water	43:53	0:0	4	subs
op	43:57	0:0	4	.
water	43:58	0:0	4	teletext
op	43:66	0:0	4	.
water	43:67	0:0	4	i_magazine
op	43:78	0:0	4	!=
op	43:81	0:0	4	-
water	43:82	0:0	4	1
stmts	44:4	48:4	3	
water	44:4	0:0	4	{
water	45:8	0:0	4	p_sys
op	45:13	0:0	4	->
water	45:15	0:0	4	i_wanted_page
op	45:29	0:0	4	=
water	45:31	0:0	4	100
op	45:35	0:0	4	*
water	45:37	0:0	4	p_dec
op	45:42	0:0	4	->
water	45:44	0:0	4	fmt_in
op	45:50	0:0	4	.
water	45:51	0:0	4	subs
op	45:55	0:0	4	.
water	45:56	0:0	4	teletext
op	45:64	0:0	4	.
water	45:65	0:0	4	i_magazine
op	45:76	0:0	4	+
call	46:31	46:79	4	vbi_bcd2dec
arg	46:44	46:79	5	p_dec->fmt_in.subs.teletext.i_page
water	46:44	0:0	6	p_dec
op	46:49	0:0	6	->
water	46:51	0:0	6	fmt_in
op	46:57	0:0	6	.
water	46:58	0:0	6	subs
op	46:62	0:0	6	.
water	46:63	0:0	6	teletext
op	46:71	0:0	6	.
water	46:72	0:0	6	i_page
water	46:80	0:0	4	;
call	47:8	47:64	4	var_SetInteger
arg	47:24	47:29	5	p_dec
water	47:24	0:0	6	p_dec
arg	47:31	47:41	5	"vbi-page"
water	47:31	0:0	6	"vbi-page"
arg	47:43	47:64	5	p_sys->i_wanted_page
water	47:43	0:0	6	p_sys
op	47:48	0:0	6	->
water	47:50	0:0	6	i_wanted_page
water	47:65	0:0	4	;
water	48:4	0:0	4	}
water	49:4	0:0	2	p_sys
op	49:9	0:0	2	->
water	49:11	0:0	2	i_wanted_subpage
op	49:28	0:0	2	=
water	49:30	0:0	2	VBI_ANY_SUBNO
water	49:43	0:0	2	;
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	b_opaque
op	50:20	0:0	2	=
call	50:22	50:61	2	var_CreateGetBool
arg	50:41	50:46	3	p_dec
water	50:41	0:0	4	p_dec
arg	50:48	50:61	3	"vbi-opaque"
water	50:48	0:0	4	"vbi-opaque"
water	50:62	0:0	2	;
call	51:4	51:56	2	var_AddCallback
arg	51:21	51:26	3	p_dec
water	51:21	0:0	4	p_dec
arg	51:28	51:40	3	"vbi-opaque"
water	51:28	0:0	4	"vbi-opaque"
arg	51:42	51:48	3	Opaque
water	51:42	0:0	4	Opaque
arg	51:50	51:56	3	p_sys
water	51:50	0:0	4	p_sys
water	51:57	0:0	2	;
water	52:4	0:0	2	p_sys
op	52:9	0:0	2	->
water	52:11	0:0	2	i_align
op	52:19	0:0	2	=
call	52:21	52:65	2	var_CreateGetInteger
arg	52:43	52:48	3	p_dec
water	52:43	0:0	4	p_dec
arg	52:50	52:65	3	"vbi-position"
water	52:50	0:0	4	"vbi-position"
water	52:66	0:0	2	;
call	53:4	53:60	2	var_AddCallback
arg	53:21	53:26	3	p_dec
water	53:21	0:0	4	p_dec
arg	53:28	53:42	3	"vbi-position"
water	53:28	0:0	4	"vbi-position"
arg	53:44	53:52	3	Position
water	53:44	0:0	4	Position
arg	53:54	53:60	3	p_sys
water	53:54	0:0	4	p_sys
water	53:61	0:0	2	;
water	54:4	0:0	2	p_sys
op	54:9	0:0	2	->
water	54:11	0:0	2	b_text
op	54:18	0:0	2	=
call	54:20	54:57	2	var_CreateGetBool
arg	54:39	54:44	3	p_dec
water	54:39	0:0	4	p_dec
arg	54:46	54:57	3	"vbi-text"
water	54:46	0:0	4	"vbi-text"
water	54:58	0:0	2	;
call	57:4	57:69	2	var_AddCallback
arg	57:21	57:36	3	p_dec->p_libvlc
water	57:21	0:0	4	p_dec
op	57:26	0:0	4	->
water	57:28	0:0	4	p_libvlc
arg	57:38	57:51	3	"key-pressed"
water	57:38	0:0	4	"key-pressed"
arg	57:53	57:61	3	EventKey
water	57:53	0:0	4	EventKey
arg	57:63	57:69	3	p_dec
water	57:63	0:0	4	p_dec
water	57:70	0:0	2	;
call	58:4	58:59	2	es_format_Init
arg	58:20	58:35	3	&p_dec->fmt_out
op	58:20	0:0	4	&
water	58:21	0:0	4	p_dec
op	58:26	0:0	4	->
water	58:28	0:0	4	fmt_out
arg	58:37	58:43	3	SPU_ES
water	58:37	0:0	4	SPU_ES
arg	58:45	58:59	3	VLC_CODEC_SPU
water	58:45	0:0	4	VLC_CODEC_SPU
water	58:60	0:0	2	;
if	59:4	60:54	2	(p_sys -> b_text)
cond	59:8	59:15	3	p_sys -> b_text
water	59:8	0:0	4	p_sys
op	59:13	0:0	4	->
water	59:15	0:0	4	b_text
stmts	60:8	60:54	3	
water	60:8	0:0	4	p_dec
op	60:13	0:0	4	->
water	60:15	0:0	4	fmt_out
op	60:22	0:0	4	.
water	60:23	0:0	4	video
op	60:28	0:0	4	.
water	60:29	0:0	4	i_chroma
op	60:38	0:0	4	=
water	60:40	0:0	4	VLC_CODEC_TEXT
water	60:54	0:0	4	;
else	61:4	62:54	2
stmts	62:8	62:54	3	
water	62:8	0:0	4	p_dec
op	62:13	0:0	4	->
water	62:15	0:0	4	fmt_out
op	62:22	0:0	4	.
water	62:23	0:0	4	video
op	62:28	0:0	4	.
water	62:29	0:0	4	i_chroma
op	62:38	0:0	4	=
water	62:40	0:0	4	VLC_CODEC_RGBA
water	62:54	0:0	4	;
water	63:4	0:0	2	p_dec
op	63:9	0:0	2	->
water	63:11	0:0	2	pf_decode_sub
op	63:25	0:0	2	=
water	63:27	0:0	2	Decode
water	63:33	0:0	2	;
return	64:4	64:22	2	VLC_SUCCESS
water	64:11	0:0	3	VLC_SUCCESS

func	2:0	114:0	0	void	ComposeFrame
params	2:17	0:0	1	
param	2:19	2:37	2	filter_t *	p_filter
param	3:19	3:38	2	picture_t *	p_outpic
param	4:19	4:41	2	picture_t *	p_inpic_top
param	4:43	4:68	2	picture_t *	p_inpic_bottom
param	5:19	5:51	2	compose_chroma_t	i_output_chroma
param	5:53	5:80	2	bool	swapped_uv_conversion
stmnts	7:4	113:4	1	
call	7:4	7:29	2	assert
arg	7:12	7:29	3	p_outpic!=NULL
water	7:12	0:0	4	p_outpic
op	7:21	0:0	4	!=
water	7:24	0:0	4	NULL
water	7:30	0:0	2	;
call	8:4	8:32	2	assert
arg	8:12	8:32	3	p_inpic_top!=NULL
water	8:12	0:0	4	p_inpic_top
op	8:24	0:0	4	!=
water	8:27	0:0	4	NULL
water	8:33	0:0	2	;
call	9:4	9:35	2	assert
arg	9:12	9:35	3	p_inpic_bottom!=NULL
water	9:12	0:0	4	p_inpic_bottom
op	9:27	0:0	4	!=
water	9:30	0:0	4	NULL
water	9:36	0:0	2	;
call	11:4	15:40	2	assert
arg	11:12	15:40	3	i_output_chroma==CC_ALTLINE||i_output_chroma==CC_UPCONVERT||i_output_chroma==CC_SOURCE_TOP||i_output_chroma==CC_SOURCE_BOTTOM||i_output_chroma==CC_MERGE
water	11:12	0:0	4	i_output_chroma
op	11:28	0:0	4	==
water	11:31	0:0	4	CC_ALTLINE
op	11:48	0:0	4	||
water	12:12	0:0	4	i_output_chroma
op	12:28	0:0	4	==
water	12:31	0:0	4	CC_UPCONVERT
op	12:48	0:0	4	||
water	13:12	0:0	4	i_output_chroma
op	13:28	0:0	4	==
water	13:31	0:0	4	CC_SOURCE_TOP
op	13:48	0:0	4	||
water	14:12	0:0	4	i_output_chroma
op	14:28	0:0	4	==
water	14:31	0:0	4	CC_SOURCE_BOTTOM
op	14:48	0:0	4	||
water	15:12	0:0	4	i_output_chroma
op	15:28	0:0	4	==
water	15:31	0:0	4	CC_MERGE
water	15:41	0:0	2	;
decl	16:4	16:67	2	const bool	b_upconvert_chroma
op	16:34	0:0	2	=
water	16:36	0:0	2	i_output_chroma
op	16:52	0:0	2	==
water	16:55	0:0	2	CC_UPCONVERT
for	17:4	113:4	2	( int i_plane = 0 ;i_plane < p_inpic_top -> i_planes;i_plane ++)
forinit	0:0	17:25	3	 int i_plane = 0 ;
decl	17:9	17:25	4	int	i_plane
op	17:21	0:0	4	=
water	17:23	0:0	4	0
cond	17:27	17:50	3	i_plane < p_inpic_top -> i_planes
water	17:27	0:0	4	i_plane
op	17:35	0:0	4	<
water	17:37	0:0	4	p_inpic_top
op	17:48	0:0	4	->
water	17:50	0:0	4	i_planes
forexpr	17:61	17:68	3	i_plane ++
water	17:61	0:0	4	i_plane
op	17:68	0:0	4	++
stmts	18:4	113:4	3	
water	18:4	0:0	4	{
decl	19:8	19:77	4	bool	b_is_chroma_plane
op	19:31	0:0	4	=
water	19:33	0:0	4	(
water	19:35	0:0	4	i_plane
op	19:43	0:0	4	==
water	19:46	0:0	4	U_PLANE
op	19:54	0:0	4	||
water	19:57	0:0	4	i_plane
op	19:65	0:0	4	==
water	19:68	0:0	4	V_PLANE
water	19:76	0:0	4	)
decl	20:8	20:23	4	int	i_out_plane
if	21:8	27:8	4	(b_is_chroma_plane && b_upconvert_chroma && swapped_uv_conversion)
cond	21:12	21:58	5	b_is_chroma_plane && b_upconvert_chroma && swapped_uv_conversion
water	21:12	0:0	6	b_is_chroma_plane
op	21:31	0:0	6	&&
water	21:35	0:0	6	b_upconvert_chroma
op	21:55	0:0	6	&&
water	21:58	0:0	6	swapped_uv_conversion
stmts	22:8	27:8	5	
water	22:8	0:0	6	{
if	23:12	24:37	6	(i_plane == U_PLANE)
cond	23:16	23:27	7	i_plane == U_PLANE
water	23:16	0:0	8	i_plane
op	23:24	0:0	8	==
water	23:27	0:0	8	U_PLANE
stmts	24:16	24:37	7	
water	24:16	0:0	8	i_out_plane
op	24:28	0:0	8	=
water	24:30	0:0	8	V_PLANE
water	24:37	0:0	8	;
else	25:12	26:37	6
stmts	26:16	26:37	7	
water	26:16	0:0	8	i_out_plane
op	26:28	0:0	8	=
water	26:30	0:0	8	U_PLANE
water	26:37	0:0	8	;
water	27:8	0:0	6	}
else	28:8	31:8	4
stmts	29:8	31:8	5	
water	29:8	0:0	6	{
water	30:12	0:0	6	i_out_plane
op	30:24	0:0	6	=
water	30:26	0:0	6	i_plane
water	30:33	0:0	6	;
water	31:8	0:0	6	}
if	33:8	52:8	4	(! b_is_chroma_plane || i_output_chroma == CC_ALTLINE)
cond	33:12	33:55	5	! b_is_chroma_plane || i_output_chroma == CC_ALTLINE
op	33:12	0:0	6	!
water	33:13	0:0	6	b_is_chroma_plane
op	33:32	0:0	6	||
water	33:36	0:0	6	i_output_chroma
op	33:52	0:0	6	==
water	33:55	0:0	6	CC_ALTLINE
stmts	34:8	52:8	5	
water	34:8	0:0	6	{
decl	41:12	41:27	6	plane_t	dst_top
decl	42:12	42:30	6	plane_t	dst_bottom
decl	43:12	43:27	6	plane_t	src_top
decl	44:12	44:30	6	plane_t	src_bottom
call	45:12	45:72	6	FieldFromPlane
arg	45:28	45:36	7	&dst_top
op	45:28	0:0	8	&
water	45:29	0:0	8	dst_top
arg	45:41	45:66	7	&p_outpic->p[i_out_plane]
op	45:41	0:0	8	&
water	45:42	0:0	8	p_outpic
op	45:50	0:0	8	->
water	45:52	0:0	8	p
op	45:53	0:0	8	[
water	45:54	0:0	8	i_out_plane
op	45:65	0:0	8	]
arg	45:70	45:72	7	0
water	45:70	0:0	8	0
water	45:73	0:0	6	;
call	46:12	46:72	6	FieldFromPlane
arg	46:28	46:39	7	&dst_bottom
op	46:28	0:0	8	&
water	46:29	0:0	8	dst_bottom
arg	46:41	46:66	7	&p_outpic->p[i_out_plane]
op	46:41	0:0	8	&
water	46:42	0:0	8	p_outpic
op	46:50	0:0	8	->
water	46:52	0:0	8	p
op	46:53	0:0	8	[
water	46:54	0:0	8	i_out_plane
op	46:65	0:0	8	]
arg	46:70	46:72	7	1
water	46:70	0:0	8	1
water	46:73	0:0	6	;
call	47:12	47:72	6	FieldFromPlane
arg	47:28	47:36	7	&src_top
op	47:28	0:0	8	&
water	47:29	0:0	8	src_top
arg	47:41	47:65	7	&p_inpic_top->p[i_plane]
op	47:41	0:0	8	&
water	47:42	0:0	8	p_inpic_top
op	47:53	0:0	8	->
water	47:55	0:0	8	p
op	47:56	0:0	8	[
water	47:57	0:0	8	i_plane
op	47:64	0:0	8	]
arg	47:70	47:72	7	0
water	47:70	0:0	8	0
water	47:73	0:0	6	;
call	48:12	48:72	6	FieldFromPlane
arg	48:28	48:39	7	&src_bottom
op	48:28	0:0	8	&
water	48:29	0:0	8	src_bottom
arg	48:41	48:68	7	&p_inpic_bottom->p[i_plane]
op	48:41	0:0	8	&
water	48:42	0:0	8	p_inpic_bottom
op	48:56	0:0	8	->
water	48:58	0:0	8	p
op	48:59	0:0	8	[
water	48:60	0:0	8	i_plane
op	48:67	0:0	8	]
arg	48:70	48:72	7	1
water	48:70	0:0	8	1
water	48:73	0:0	6	;
call	50:12	50:55	6	plane_CopyPixels
arg	50:30	50:38	7	&dst_top
op	50:30	0:0	8	&
water	50:31	0:0	8	dst_top
arg	50:43	50:55	7	&src_top
op	50:43	0:0	8	&
water	50:44	0:0	8	src_top
water	50:56	0:0	6	;
call	51:12	51:55	6	plane_CopyPixels
arg	51:30	51:41	7	&dst_bottom
op	51:30	0:0	8	&
water	51:31	0:0	8	dst_bottom
arg	51:43	51:55	7	&src_bottom
op	51:43	0:0	8	&
water	51:44	0:0	8	src_bottom
water	51:56	0:0	6	;
water	52:8	0:0	6	}
else	53:8	112:8	4
stmts	54:8	112:8	5	
water	54:8	0:0	6	{
if	55:12	73:12	6	(i_output_chroma == CC_UPCONVERT)
cond	55:16	55:35	7	i_output_chroma == CC_UPCONVERT
water	55:16	0:0	8	i_output_chroma
op	55:32	0:0	8	==
water	55:35	0:0	8	CC_UPCONVERT
stmts	56:12	73:12	7	
water	56:12	0:0	8	{
decl	66:16	66:31	8	plane_t	dst_top
decl	67:16	67:34	8	plane_t	dst_bottom
call	68:16	68:74	8	FieldFromPlane
arg	68:32	68:40	9	&dst_top
op	68:32	0:0	10	&
water	68:33	0:0	10	dst_top
arg	68:45	68:70	9	&p_outpic->p[i_out_plane]
op	68:45	0:0	10	&
water	68:46	0:0	10	p_outpic
op	68:54	0:0	10	->
water	68:56	0:0	10	p
op	68:57	0:0	10	[
water	68:58	0:0	10	i_out_plane
op	68:69	0:0	10	]
arg	68:72	68:74	9	0
water	68:72	0:0	10	0
water	68:75	0:0	8	;
call	69:16	69:74	8	FieldFromPlane
arg	69:32	69:43	9	&dst_bottom
op	69:32	0:0	10	&
water	69:33	0:0	10	dst_bottom
arg	69:45	69:70	9	&p_outpic->p[i_out_plane]
op	69:45	0:0	10	&
water	69:46	0:0	10	p_outpic
op	69:54	0:0	10	->
water	69:56	0:0	10	p
op	69:57	0:0	10	[
water	69:58	0:0	10	i_out_plane
op	69:69	0:0	10	]
arg	69:72	69:74	9	1
water	69:72	0:0	10	1
water	69:75	0:0	8	;
call	71:16	71:75	8	plane_CopyPixels
arg	71:34	71:42	9	&dst_top
op	71:34	0:0	10	&
water	71:35	0:0	10	dst_top
arg	71:47	71:75	9	&p_inpic_top->p[i_plane]
op	71:47	0:0	10	&
water	71:48	0:0	10	p_inpic_top
op	71:59	0:0	10	->
water	71:61	0:0	10	p
op	71:62	0:0	10	[
water	71:63	0:0	10	i_plane
op	71:70	0:0	10	]
water	71:76	0:0	8	;
call	72:16	72:75	8	plane_CopyPixels
arg	72:34	72:45	9	&dst_bottom
op	72:34	0:0	10	&
water	72:35	0:0	10	dst_bottom
arg	72:47	72:75	9	&p_inpic_bottom->p[i_plane]
op	72:47	0:0	10	&
water	72:48	0:0	10	p_inpic_bottom
op	72:62	0:0	10	->
water	72:64	0:0	10	p
op	72:65	0:0	10	[
water	72:66	0:0	10	i_plane
op	72:73	0:0	10	]
water	72:76	0:0	8	;
water	73:12	0:0	8	}
else	74:12	81:12	6
stmts	74:17	81:12	7	
if	74:17	81:12	8	(i_output_chroma == CC_SOURCE_TOP)
cond	74:21	74:40	9	i_output_chroma == CC_SOURCE_TOP
water	74:21	0:0	10	i_output_chroma
op	74:37	0:0	10	==
water	74:40	0:0	10	CC_SOURCE_TOP
stmts	75:12	81:12	9	
water	75:12	0:0	10	{
call	79:16	80:59	10	plane_CopyPixels
arg	79:34	79:59	11	&p_outpic->p[i_out_plane]
op	79:34	0:0	12	&
water	79:35	0:0	12	p_outpic
op	79:43	0:0	12	->
water	79:45	0:0	12	p
op	79:46	0:0	12	[
water	79:47	0:0	12	i_out_plane
op	79:58	0:0	12	]
arg	80:34	80:59	11	&p_inpic_top->p[i_plane]
op	80:34	0:0	12	&
water	80:35	0:0	12	p_inpic_top
op	80:46	0:0	12	->
water	80:48	0:0	12	p
op	80:49	0:0	12	[
water	80:50	0:0	12	i_plane
op	80:57	0:0	12	]
water	80:60	0:0	10	;
water	81:12	0:0	10	}
else	82:12	89:12	6
stmts	82:17	89:12	7	
if	82:17	89:12	8	(i_output_chroma == CC_SOURCE_BOTTOM)
cond	82:21	82:40	9	i_output_chroma == CC_SOURCE_BOTTOM
water	82:21	0:0	10	i_output_chroma
op	82:37	0:0	10	==
water	82:40	0:0	10	CC_SOURCE_BOTTOM
stmts	83:12	89:12	9	
water	83:12	0:0	10	{
call	87:16	88:62	10	plane_CopyPixels
arg	87:34	87:59	11	&p_outpic->p[i_out_plane]
op	87:34	0:0	12	&
water	87:35	0:0	12	p_outpic
op	87:43	0:0	12	->
water	87:45	0:0	12	p
op	87:46	0:0	12	[
water	87:47	0:0	12	i_out_plane
op	87:58	0:0	12	]
arg	88:34	88:62	11	&p_inpic_bottom->p[i_plane]
op	88:34	0:0	12	&
water	88:35	0:0	12	p_inpic_bottom
op	88:49	0:0	12	->
water	88:51	0:0	12	p
op	88:52	0:0	12	[
water	88:53	0:0	12	i_plane
op	88:60	0:0	12	]
water	88:63	0:0	10	;
water	89:12	0:0	10	}
else	90:12	111:12	6
stmts	91:12	111:12	7	
water	91:12	0:0	8	{
decl	94:16	94:67	8	uint8_t	*p_in_top
water	94:33	0:0	8	,
decl	94:16	94:67	8	uint8_t	*p_in_bottom
water	94:47	0:0	8	,
decl	94:16	94:67	8	uint8_t	*p_out_end
water	94:59	0:0	8	,
decl	94:16	94:67	8	uint8_t	*p_out
water	95:16	0:0	8	p_in_top
op	95:28	0:0	8	=
water	95:30	0:0	8	p_inpic_top
op	95:41	0:0	8	->
water	95:43	0:0	8	p
op	95:44	0:0	8	[
water	95:45	0:0	8	i_plane
op	95:52	0:0	8	]
op	95:53	0:0	8	.
water	95:54	0:0	8	p_pixels
water	95:62	0:0	8	;
water	96:16	0:0	8	p_in_bottom
op	96:28	0:0	8	=
water	96:30	0:0	8	p_inpic_bottom
op	96:44	0:0	8	->
water	96:46	0:0	8	p
op	96:47	0:0	8	[
water	96:48	0:0	8	i_plane
op	96:55	0:0	8	]
op	96:56	0:0	8	.
water	96:57	0:0	8	p_pixels
water	96:65	0:0	8	;
water	97:16	0:0	8	p_out
op	97:22	0:0	8	=
water	97:24	0:0	8	p_outpic
op	97:32	0:0	8	->
water	97:34	0:0	8	p
op	97:35	0:0	8	[
water	97:36	0:0	8	i_out_plane
op	97:47	0:0	8	]
op	97:48	0:0	8	.
water	97:49	0:0	8	p_pixels
water	97:57	0:0	8	;
water	98:16	0:0	8	p_out_end
op	98:26	0:0	8	=
water	98:28	0:0	8	p_out
op	98:34	0:0	8	+
water	98:36	0:0	8	p_outpic
op	98:44	0:0	8	->
water	98:46	0:0	8	p
op	98:47	0:0	8	[
water	98:48	0:0	8	i_out_plane
op	98:59	0:0	8	]
op	98:60	0:0	8	.
water	98:61	0:0	8	i_pitch
op	99:34	0:0	8	*
water	99:36	0:0	8	p_outpic
op	99:44	0:0	8	->
water	99:46	0:0	8	p
op	99:47	0:0	8	[
water	99:48	0:0	8	i_out_plane
op	99:59	0:0	8	]
op	99:60	0:0	8	.
water	99:61	0:0	8	i_visible_lines
water	99:76	0:0	8	;
decl	100:16	102:70	8	int	w
op	100:22	0:0	8	=
call	100:24	102:69	9	FFMIN3
arg	100:32	100:71	10	p_inpic_top->p[i_plane].i_visible_pitch
water	100:32	0:0	11	p_inpic_top
op	100:43	0:0	11	->
water	100:45	0:0	11	p
op	100:46	0:0	11	[
water	100:47	0:0	11	i_plane
op	100:54	0:0	11	]
op	100:55	0:0	11	.
water	100:56	0:0	11	i_visible_pitch
arg	101:32	101:74	10	p_inpic_bottom->p[i_plane].i_visible_pitch
water	101:32	0:0	11	p_inpic_bottom
op	101:46	0:0	11	->
water	101:48	0:0	11	p
op	101:49	0:0	11	[
water	101:50	0:0	11	i_plane
op	101:57	0:0	11	]
op	101:58	0:0	11	.
water	101:59	0:0	11	i_visible_pitch
arg	102:32	102:69	10	p_outpic->p[i_plane].i_visible_pitch
water	102:32	0:0	11	p_outpic
op	102:40	0:0	11	->
water	102:42	0:0	11	p
op	102:43	0:0	11	[
water	102:44	0:0	11	i_plane
op	102:51	0:0	11	]
op	102:52	0:0	11	.
water	102:53	0:0	11	i_visible_pitch
for	103:16	109:16	8	(;p_out < p_out_end;)
forinit	103:21	103:21	9	;
water	103:21	0:0	10	;
cond	103:23	103:31	9	p_out < p_out_end
water	103:23	0:0	10	p_out
op	103:29	0:0	10	<
water	103:31	0:0	10	p_out_end
forexpr	0:0	0:0	9	
stmts	104:16	109:16	9	
water	104:16	0:0	10	{
call	105:20	105:59	10	Merge
arg	105:27	105:32	11	p_out
water	105:27	0:0	12	p_out
arg	105:34	105:42	11	p_in_top
water	105:34	0:0	12	p_in_top
arg	105:44	105:55	11	p_in_bottom
water	105:44	0:0	12	p_in_bottom
arg	105:57	105:59	11	w
water	105:57	0:0	12	w
water	105:60	0:0	10	;
water	106:20	0:0	10	p_out
op	106:32	0:0	10	+=
water	106:35	0:0	10	p_outpic
op	106:43	0:0	10	->
water	106:45	0:0	10	p
op	106:46	0:0	10	[
water	106:47	0:0	10	i_out_plane
op	106:58	0:0	10	]
op	106:59	0:0	10	.
water	106:60	0:0	10	i_pitch
water	106:67	0:0	10	;
water	107:20	0:0	10	p_in_top
op	107:32	0:0	10	+=
water	107:35	0:0	10	p_inpic_top
op	107:46	0:0	10	->
water	107:48	0:0	10	p
op	107:49	0:0	10	[
water	107:50	0:0	10	i_plane
op	107:57	0:0	10	]
op	107:58	0:0	10	.
water	107:59	0:0	10	i_pitch
water	107:66	0:0	10	;
water	108:20	0:0	10	p_in_bottom
op	108:32	0:0	10	+=
water	108:35	0:0	10	p_inpic_bottom
op	108:49	0:0	10	->
water	108:51	0:0	10	p
op	108:52	0:0	10	[
water	108:53	0:0	10	i_plane
op	108:60	0:0	10	]
op	108:61	0:0	10	.
water	108:62	0:0	10	i_pitch
water	108:69	0:0	10	;
water	109:16	0:0	10	}
call	110:16	110:25	8	EndMerge
water	110:26	0:0	8	;
water	111:12	0:0	8	}
water	112:8	0:0	6	}
water	113:4	0:0	4	}

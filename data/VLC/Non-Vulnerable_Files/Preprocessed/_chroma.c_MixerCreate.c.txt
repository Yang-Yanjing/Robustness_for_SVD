func	2:0	151:0	0	static VdpVideoMixer	MixerCreate
params	2:32	0:0	1	
param	2:33	2:49	2	filter_t *	filter
param	2:51	2:62	2	bool	import
stmnts	0:0	150:16	1	
decl	4:4	4:37	2	filter_sys_t	*sys
op	4:22	0:0	2	=
water	4:24	0:0	2	filter
op	4:30	0:0	2	->
water	4:32	0:0	2	p_sys
decl	5:4	5:23	2	VdpVideoMixer	mixer
decl	6:4	6:17	2	VdpStatus	err
decl	7:4	7:14	2	VdpBool	ok
decl	9:4	9:33	2	VdpVideoMixerFeature	featv[5]
water	10:4	0:0	2	unsigned
water	10:13	0:0	2	featc
op	10:19	0:0	2	=
water	10:21	0:0	2	0
water	10:22	0:0	2	;
decl	11:4	11:62	2	int	algo
op	11:13	0:0	2	=
call	11:15	11:61	3	var_InheritInteger
arg	11:34	11:40	4	filter
water	11:34	0:0	5	filter
arg	11:42	11:61	4	"vdpau-deinterlace"
water	11:42	0:0	5	"vdpau-deinterlace"
decl	12:4	12:21	2	bool	ivtc
op	12:14	0:0	2	=
water	12:16	0:0	2	false
if	13:4	22:4	2	(algo == VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL_SPATIAL)
cond	13:8	13:16	3	algo == VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL_SPATIAL
water	13:8	0:0	4	algo
op	13:13	0:0	4	==
water	13:16	0:0	4	VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL_SPATIAL
stmts	14:4	22:4	3	
water	14:4	0:0	4	{
water	15:8	0:0	4	err
op	15:12	0:0	4	=
call	15:14	16:61	4	vdp_video_mixer_query_feature_support
arg	15:52	15:60	5	sys->vdp
water	15:52	0:0	6	sys
op	15:55	0:0	6	->
water	15:57	0:0	6	vdp
arg	15:62	15:73	5	sys->device
water	15:62	0:0	6	sys
op	15:65	0:0	6	->
water	15:67	0:0	6	device
arg	16:52	16:56	5	algo
water	16:52	0:0	6	algo
arg	16:58	16:61	5	&ok
op	16:58	0:0	6	&
water	16:59	0:0	6	ok
water	16:62	0:0	4	;
if	17:8	19:51	4	(err == VDP_STATUS_OK && ok == VDP_TRUE)
cond	17:12	17:42	5	err == VDP_STATUS_OK && ok == VDP_TRUE
water	17:12	0:0	6	err
op	17:16	0:0	6	==
water	17:19	0:0	6	VDP_STATUS_OK
op	17:33	0:0	6	&&
water	17:36	0:0	6	ok
op	17:39	0:0	6	==
water	17:42	0:0	6	VDP_TRUE
stmts	18:12	19:51	5	
call	18:12	19:50	6	msg_Dbg
arg	18:20	18:26	7	filter
water	18:20	0:0	8	filter
arg	18:28	18:58	7	"using video mixer %s feature"
water	18:28	0:0	8	"using video mixer %s feature"
arg	19:20	19:50	7	"temporal-spatial deinterlace"
water	19:20	0:0	8	"temporal-spatial deinterlace"
water	19:51	0:0	6	;
else	20:8	21:63	4
stmts	21:12	21:63	5	
water	21:12	0:0	6	algo
op	21:17	0:0	6	=
water	21:19	0:0	6	VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL
water	21:63	0:0	6	;
water	22:4	0:0	4	}
if	23:4	32:4	2	(algo == VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL)
cond	23:8	23:16	3	algo == VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL
water	23:8	0:0	4	algo
op	23:13	0:0	4	==
water	23:16	0:0	4	VDP_VIDEO_MIXER_FEATURE_DEINTERLACE_TEMPORAL
stmts	24:4	32:4	3	
water	24:4	0:0	4	{
water	25:8	0:0	4	err
op	25:12	0:0	4	=
call	25:14	26:61	4	vdp_video_mixer_query_feature_support
arg	25:52	25:60	5	sys->vdp
water	25:52	0:0	6	sys
op	25:55	0:0	6	->
water	25:57	0:0	6	vdp
arg	25:62	25:73	5	sys->device
water	25:62	0:0	6	sys
op	25:65	0:0	6	->
water	25:67	0:0	6	device
arg	26:52	26:56	5	algo
water	26:52	0:0	6	algo
arg	26:58	26:61	5	&ok
op	26:58	0:0	6	&
water	26:59	0:0	6	ok
water	26:62	0:0	4	;
if	27:8	29:43	4	(err == VDP_STATUS_OK && ok == VDP_TRUE)
cond	27:12	27:42	5	err == VDP_STATUS_OK && ok == VDP_TRUE
water	27:12	0:0	6	err
op	27:16	0:0	6	==
water	27:19	0:0	6	VDP_STATUS_OK
op	27:33	0:0	6	&&
water	27:36	0:0	6	ok
op	27:39	0:0	6	==
water	27:42	0:0	6	VDP_TRUE
stmts	28:12	29:43	5	
call	28:12	29:42	6	msg_Dbg
arg	28:20	28:26	7	filter
water	28:20	0:0	8	filter
arg	28:28	28:58	7	"using video mixer %s feature"
water	28:28	0:0	8	"using video mixer %s feature"
arg	29:20	29:42	7	"temporal deinterlace"
water	29:20	0:0	8	"temporal deinterlace"
water	29:43	0:0	6	;
else	30:8	31:21	4
stmts	31:12	31:21	5	
water	31:12	0:0	6	algo
op	31:17	0:0	6	=
op	31:19	0:0	6	-
water	31:20	0:0	6	1
water	31:21	0:0	6	;
water	32:4	0:0	4	}
if	33:4	46:4	2	(algo >= 0)
cond	33:8	33:16	3	algo >= 0
water	33:8	0:0	4	algo
op	33:13	0:0	4	>=
water	33:16	0:0	4	0
stmts	34:4	46:4	3	
water	34:4	0:0	4	{
water	35:8	0:0	4	featv
op	35:13	0:0	4	[
water	35:14	0:0	4	featc
op	35:19	0:0	4	++
op	35:21	0:0	4	]
op	35:23	0:0	4	=
water	35:25	0:0	4	algo
water	35:29	0:0	4	;
water	36:8	0:0	4	ivtc
op	36:13	0:0	4	=
call	36:15	36:51	4	var_InheritBool
arg	36:31	36:37	5	filter
water	36:31	0:0	6	filter
arg	36:39	36:51	5	"vdpau-ivtc"
water	36:39	0:0	6	"vdpau-ivtc"
water	36:52	0:0	4	;
if	37:8	45:8	4	(ivtc)
cond	37:12	37:12	5	ivtc
water	37:12	0:0	6	ivtc
stmts	38:8	45:8	5	
water	38:8	0:0	6	{
water	39:12	0:0	6	err
op	39:16	0:0	6	=
call	39:18	40:77	6	vdp_video_mixer_query_feature_support
arg	39:56	39:64	7	sys->vdp
water	39:56	0:0	8	sys
op	39:59	0:0	8	->
water	39:61	0:0	8	vdp
arg	39:66	39:77	7	sys->device
water	39:66	0:0	8	sys
op	39:69	0:0	8	->
water	39:71	0:0	8	device
arg	40:32	40:72	7	VDP_VIDEO_MIXER_FEATURE_INVERSE_TELECINE
water	40:32	0:0	8	VDP_VIDEO_MIXER_FEATURE_INVERSE_TELECINE
arg	40:74	40:77	7	&ok
op	40:74	0:0	8	&
water	40:75	0:0	8	ok
water	40:78	0:0	6	;
if	41:12	43:43	6	(err == VDP_STATUS_OK && ok == VDP_TRUE)
cond	41:16	41:46	7	err == VDP_STATUS_OK && ok == VDP_TRUE
water	41:16	0:0	8	err
op	41:20	0:0	8	==
water	41:23	0:0	8	VDP_STATUS_OK
op	41:37	0:0	8	&&
water	41:40	0:0	8	ok
op	41:43	0:0	8	==
water	41:46	0:0	8	VDP_TRUE
stmts	42:16	43:43	7	
call	42:16	43:42	8	msg_Dbg
arg	42:24	42:30	9	filter
water	42:24	0:0	10	filter
arg	42:32	42:62	9	"using video mixer %s feature"
water	42:32	0:0	10	"using video mixer %s feature"
arg	43:24	43:42	9	"inverse telecine"
water	43:24	0:0	10	"inverse telecine"
water	43:43	0:0	8	;
water	44:12	0:0	6	featv
op	44:17	0:0	6	[
water	44:18	0:0	6	featc
op	44:23	0:0	6	++
op	44:25	0:0	6	]
op	44:27	0:0	6	=
water	44:29	0:0	6	VDP_VIDEO_MIXER_FEATURE_INVERSE_TELECINE
water	44:69	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}
decl	47:4	47:73	2	const float	noise
op	47:22	0:0	2	=
call	47:24	47:72	3	var_InheritFloat
arg	47:41	47:47	4	filter
water	47:41	0:0	5	filter
arg	47:49	47:72	4	"vdpau-noise-reduction"
water	47:49	0:0	5	"vdpau-noise-reduction"
if	48:4	57:4	2	(noise > 0 . f)
cond	48:8	48:18	3	noise > 0 . f
water	48:8	0:0	4	noise
op	48:14	0:0	4	>
water	48:16	0:0	4	0
op	48:17	0:0	4	.
water	48:18	0:0	4	f
stmts	49:4	57:4	3	
water	49:4	0:0	4	{
water	50:8	0:0	4	err
op	50:12	0:0	4	=
call	50:14	51:77	4	vdp_video_mixer_query_feature_support
arg	50:52	50:60	5	sys->vdp
water	50:52	0:0	6	sys
op	50:55	0:0	6	->
water	50:57	0:0	6	vdp
arg	50:62	50:73	5	sys->device
water	50:62	0:0	6	sys
op	50:65	0:0	6	->
water	50:67	0:0	6	device
arg	51:33	51:72	5	VDP_VIDEO_MIXER_FEATURE_NOISE_REDUCTION
water	51:33	0:0	6	VDP_VIDEO_MIXER_FEATURE_NOISE_REDUCTION
arg	51:74	51:77	5	&ok
op	51:74	0:0	6	&
water	51:75	0:0	6	ok
water	51:78	0:0	4	;
if	52:8	56:8	4	(err == VDP_STATUS_OK && ok == VDP_TRUE)
cond	52:12	52:42	5	err == VDP_STATUS_OK && ok == VDP_TRUE
water	52:12	0:0	6	err
op	52:16	0:0	6	==
water	52:19	0:0	6	VDP_STATUS_OK
op	52:33	0:0	6	&&
water	52:36	0:0	6	ok
op	52:39	0:0	6	==
water	52:42	0:0	6	VDP_TRUE
stmts	53:8	56:8	5	
water	53:8	0:0	6	{
call	54:12	54:77	6	msg_Dbg
arg	54:20	54:26	7	filter
water	54:20	0:0	8	filter
arg	54:28	54:58	7	"using video mixer %s feature"
water	54:28	0:0	8	"using video mixer %s feature"
arg	54:60	54:77	7	"noise reduction"
water	54:60	0:0	8	"noise reduction"
water	54:78	0:0	6	;
water	55:12	0:0	6	featv
op	55:17	0:0	6	[
water	55:18	0:0	6	featc
op	55:23	0:0	6	++
op	55:25	0:0	6	]
op	55:27	0:0	6	=
water	55:29	0:0	6	VDP_VIDEO_MIXER_FEATURE_NOISE_REDUCTION
water	55:68	0:0	6	;
water	56:8	0:0	6	}
water	57:4	0:0	4	}
water	58:4	0:0	2	err
op	58:8	0:0	2	=
call	58:10	59:77	2	vdp_video_mixer_query_feature_support
arg	58:48	58:56	3	sys->vdp
water	58:48	0:0	4	sys
op	58:51	0:0	4	->
water	58:53	0:0	4	vdp
arg	58:58	58:69	3	sys->device
water	58:58	0:0	4	sys
op	58:61	0:0	4	->
water	58:63	0:0	4	device
arg	59:39	59:72	3	VDP_VIDEO_MIXER_FEATURE_SHARPNESS
water	59:39	0:0	4	VDP_VIDEO_MIXER_FEATURE_SHARPNESS
arg	59:74	59:77	3	&ok
op	59:74	0:0	4	&
water	59:75	0:0	4	ok
water	59:78	0:0	2	;
if	60:4	64:4	2	(err == VDP_STATUS_OK && ok == VDP_TRUE)
cond	60:8	60:38	3	err == VDP_STATUS_OK && ok == VDP_TRUE
water	60:8	0:0	4	err
op	60:12	0:0	4	==
water	60:15	0:0	4	VDP_STATUS_OK
op	60:29	0:0	4	&&
water	60:32	0:0	4	ok
op	60:35	0:0	4	==
water	60:38	0:0	4	VDP_TRUE
stmts	61:4	64:4	3	
water	61:4	0:0	4	{
call	62:8	62:67	4	msg_Dbg
arg	62:16	62:22	5	filter
water	62:16	0:0	6	filter
arg	62:24	62:54	5	"using video mixer %s feature"
water	62:24	0:0	6	"using video mixer %s feature"
arg	62:56	62:67	5	"sharpness"
water	62:56	0:0	6	"sharpness"
water	62:68	0:0	4	;
water	63:8	0:0	4	featv
op	63:13	0:0	4	[
water	63:14	0:0	4	featc
op	63:19	0:0	4	++
op	63:21	0:0	4	]
op	63:23	0:0	4	=
water	63:25	0:0	4	VDP_VIDEO_MIXER_FEATURE_SHARPNESS
water	63:58	0:0	4	;
water	64:4	0:0	4	}
decl	65:4	65:74	2	const int	offset
op	65:21	0:0	2	=
water	65:23	0:0	2	VDP_VIDEO_MIXER_FEATURE_HIGH_QUALITY_SCALING_L1
op	65:71	0:0	2	-
water	65:73	0:0	2	1
water	66:4	0:0	2	unsigned
water	66:13	0:0	2	level
op	66:19	0:0	2	=
call	66:21	66:63	2	var_InheritInteger
arg	66:40	66:46	3	filter
water	66:40	0:0	4	filter
arg	66:48	66:63	3	"vdpau-scaling"
water	66:48	0:0	4	"vdpau-scaling"
water	66:64	0:0	2	;
while	67:4	79:4	2	(level > 0)
cond	67:11	67:19	3	level > 0
water	67:11	0:0	4	level
op	67:17	0:0	4	>
water	67:19	0:0	4	0
stmts	68:4	79:4	3	
water	68:4	0:0	4	{
water	69:8	0:0	4	err
op	69:12	0:0	4	=
call	69:14	70:71	4	vdp_video_mixer_query_feature_support
arg	69:52	69:60	5	sys->vdp
water	69:52	0:0	6	sys
op	69:55	0:0	6	->
water	69:57	0:0	6	vdp
arg	69:62	69:73	5	sys->device
water	69:62	0:0	6	sys
op	69:65	0:0	6	->
water	69:67	0:0	6	device
arg	70:52	70:66	5	offset+level
water	70:52	0:0	6	offset
op	70:59	0:0	6	+
water	70:61	0:0	6	level
arg	70:68	70:71	5	&ok
op	70:68	0:0	6	&
water	70:69	0:0	6	ok
water	70:72	0:0	4	;
if	71:8	77:8	4	(err == VDP_STATUS_OK && ok == VDP_TRUE)
cond	71:12	71:42	5	err == VDP_STATUS_OK && ok == VDP_TRUE
water	71:12	0:0	6	err
op	71:16	0:0	6	==
water	71:19	0:0	6	VDP_STATUS_OK
op	71:33	0:0	6	&&
water	71:36	0:0	6	ok
op	71:39	0:0	6	==
water	71:42	0:0	6	VDP_TRUE
stmts	72:8	77:8	5	
water	72:8	0:0	6	{
call	73:12	74:25	6	msg_Dbg
arg	73:20	73:26	7	filter
water	73:20	0:0	8	filter
arg	73:28	73:72	7	"using video mixer high quality scaling L%u"
water	73:28	0:0	8	"using video mixer high quality scaling L%u"
arg	74:20	74:25	7	level
water	74:20	0:0	8	level
water	74:26	0:0	6	;
water	75:12	0:0	6	featv
op	75:17	0:0	6	[
water	75:18	0:0	6	featc
op	75:23	0:0	6	++
op	75:25	0:0	6	]
op	75:27	0:0	6	=
water	75:29	0:0	6	offset
op	75:36	0:0	6	+
water	75:38	0:0	6	level
water	75:43	0:0	6	;
break	76:12	76:17	6	
water	77:8	0:0	6	}
water	78:8	0:0	4	level
op	78:13	0:0	4	--
water	78:15	0:0	4	;
water	79:4	0:0	4	}
decl	81:4	85:5	2	VdpVideoMixerParameter	parms[3]
op	81:36	0:0	2	=
water	81:38	0:0	2	{
water	82:8	0:0	2	VDP_VIDEO_MIXER_PARAMETER_VIDEO_SURFACE_WIDTH
water	82:53	0:0	2	,
water	83:8	0:0	2	VDP_VIDEO_MIXER_PARAMETER_VIDEO_SURFACE_HEIGHT
water	83:54	0:0	2	,
water	84:8	0:0	2	VDP_VIDEO_MIXER_PARAMETER_CHROMA_TYPE
water	84:45	0:0	2	,
water	85:4	0:0	2	}
decl	86:4	86:49	2	uint32_t	width
op	86:19	0:0	2	=
water	86:21	0:0	2	filter
op	86:27	0:0	2	->
water	86:29	0:0	2	fmt_in
op	86:35	0:0	2	.
water	86:36	0:0	2	video
op	86:41	0:0	2	.
water	86:42	0:0	2	i_width
decl	87:4	88:60	2	uint32_t	height
op	87:20	0:0	2	=
water	87:22	0:0	2	import
water	87:29	0:0	2	?
water	87:31	0:0	2	filter
op	87:37	0:0	2	->
water	87:39	0:0	2	fmt_in
op	87:45	0:0	2	.
water	87:46	0:0	2	video
op	87:51	0:0	2	.
water	87:52	0:0	2	i_visible_height
water	88:29	0:0	2	:
water	88:31	0:0	2	filter
op	88:37	0:0	2	->
water	88:39	0:0	2	fmt_in
op	88:45	0:0	2	.
water	88:46	0:0	2	video
op	88:51	0:0	2	.
water	88:52	0:0	2	i_height
decl	89:4	89:62	2	const void	*values[3]
op	89:26	0:0	2	=
water	89:28	0:0	2	{
op	89:30	0:0	2	&
water	89:31	0:0	2	width
water	89:36	0:0	2	,
op	89:38	0:0	2	&
water	89:39	0:0	2	height
water	89:45	0:0	2	,
op	89:47	0:0	2	&
water	89:48	0:0	2	sys
op	89:51	0:0	2	->
water	89:53	0:0	2	chroma
water	89:59	0:0	2	,
water	89:61	0:0	2	}
water	90:4	0:0	2	err
op	90:8	0:0	2	=
call	90:10	91:57	2	vdp_video_mixer_create
arg	90:33	90:41	3	sys->vdp
water	90:33	0:0	4	sys
op	90:36	0:0	4	->
water	90:38	0:0	4	vdp
arg	90:43	90:54	3	sys->device
water	90:43	0:0	4	sys
op	90:46	0:0	4	->
water	90:48	0:0	4	device
arg	90:56	90:61	3	featc
water	90:56	0:0	4	featc
arg	90:63	90:68	3	featv
water	90:63	0:0	4	featv
arg	91:33	91:34	3	3
water	91:33	0:0	4	3
arg	91:36	91:41	3	parms
water	91:36	0:0	4	parms
arg	91:43	91:49	3	values
water	91:43	0:0	4	values
arg	91:51	91:57	3	&mixer
op	91:51	0:0	4	&
water	91:52	0:0	4	mixer
water	91:58	0:0	2	;
if	92:4	97:4	2	(err != VDP_STATUS_OK)
cond	92:8	92:15	3	err != VDP_STATUS_OK
water	92:8	0:0	4	err
op	92:12	0:0	4	!=
water	92:15	0:0	4	VDP_STATUS_OK
stmts	93:4	97:4	3	
water	93:4	0:0	4	{
call	94:8	95:51	4	msg_Err
arg	94:16	94:22	5	filter
water	94:16	0:0	6	filter
arg	94:24	94:49	5	"video %s %s failure: %s"
water	94:24	0:0	6	"video %s %s failure: %s"
arg	94:51	94:58	5	"mixer"
water	94:51	0:0	6	"mixer"
arg	94:60	94:70	5	"creation"
water	94:60	0:0	6	"creation"
arg	95:16	95:51	5	vdp_get_error_string(sys->vdp,err)
call	95:16	95:50	6	vdp_get_error_string
arg	95:37	95:45	7	sys->vdp
water	95:37	0:0	8	sys
op	95:40	0:0	8	->
water	95:42	0:0	8	vdp
arg	95:47	95:50	7	err
water	95:47	0:0	8	err
water	95:52	0:0	4	;
return	96:8	96:33	4	VDP_INVALID_HANDLE
water	96:15	0:0	5	VDP_INVALID_HANDLE
water	97:4	0:0	4	}
call	98:4	98:54	2	msg_Dbg
arg	98:12	98:18	3	filter
water	98:12	0:0	4	filter
arg	98:20	98:47	3	"using video mixer %"PRIu32
water	98:20	0:0	4	"using video mixer %"
water	98:41	0:0	4	PRIu32
arg	98:49	98:54	3	mixer
water	98:49	0:0	4	mixer
water	98:55	0:0	2	;
decl	100:4	100:35	2	VdpVideoMixerAttribute	attrv[3]
decl	101:4	101:23	2	const void	*valv[3]
water	102:4	0:0	2	unsigned
water	102:13	0:0	2	attrc
op	102:19	0:0	2	=
water	102:21	0:0	2	0
water	102:22	0:0	2	;
decl	103:4	103:20	2	VdpCSCMatrix	csc
decl	104:4	104:23	2	uint8_t	chroma_skip
water	105:4	0:0	2	featc
op	105:10	0:0	2	=
water	105:12	0:0	2	0
water	105:13	0:0	2	;
if	106:4	111:4	2	(MixerSetupColors (filter ,NULL ,& csc ) == VDP_STATUS_OK)
cond	106:8	106:48	3	MixerSetupColors (filter ,NULL ,& csc ) == VDP_STATUS_OK
call	106:8	106:43	4	MixerSetupColors
arg	106:25	106:31	5	filter
water	106:25	0:0	6	filter
arg	106:33	106:37	5	NULL
water	106:33	0:0	6	NULL
arg	106:39	106:43	5	&csc
op	106:39	0:0	6	&
water	106:40	0:0	6	csc
op	106:45	0:0	4	==
water	106:48	0:0	4	VDP_STATUS_OK
stmts	107:4	111:4	3	
water	107:4	0:0	4	{
water	108:8	0:0	4	attrv
op	108:13	0:0	4	[
water	108:14	0:0	4	attrc
op	108:19	0:0	4	]
op	108:21	0:0	4	=
water	108:23	0:0	4	VDP_VIDEO_MIXER_ATTRIBUTE_CSC_MATRIX
water	108:59	0:0	4	;
water	109:8	0:0	4	valv
op	109:12	0:0	4	[
water	109:13	0:0	4	attrc
op	109:18	0:0	4	]
op	109:20	0:0	4	=
op	109:22	0:0	4	&
water	109:23	0:0	4	csc
water	109:26	0:0	4	;
water	110:8	0:0	4	attrc
op	110:13	0:0	4	++
water	110:15	0:0	4	;
water	111:4	0:0	4	}
if	112:4	121:4	2	(algo >= 0)
cond	112:8	112:16	3	algo >= 0
water	112:8	0:0	4	algo
op	112:13	0:0	4	>=
water	112:16	0:0	4	0
stmts	113:4	121:4	3	
water	113:4	0:0	4	{
water	114:8	0:0	4	featv
op	114:13	0:0	4	[
water	114:14	0:0	4	featc
op	114:19	0:0	4	++
op	114:21	0:0	4	]
op	114:23	0:0	4	=
water	114:25	0:0	4	algo
water	114:29	0:0	4	;
if	115:8	116:69	4	(ivtc)
cond	115:12	115:12	5	ivtc
water	115:12	0:0	6	ivtc
stmts	116:12	116:69	5	
water	116:12	0:0	6	featv
op	116:17	0:0	6	[
water	116:18	0:0	6	featc
op	116:23	0:0	6	++
op	116:25	0:0	6	]
op	116:27	0:0	6	=
water	116:29	0:0	6	VDP_VIDEO_MIXER_FEATURE_INVERSE_TELECINE
water	116:69	0:0	6	;
water	117:8	0:0	4	chroma_skip
op	117:20	0:0	4	=
call	117:22	117:65	4	var_InheritBool
arg	117:38	117:44	5	filter
water	117:38	0:0	6	filter
arg	117:46	117:65	5	"vdpau-chroma-skip"
water	117:46	0:0	6	"vdpau-chroma-skip"
water	117:66	0:0	4	;
water	118:8	0:0	4	attrv
op	118:13	0:0	4	[
water	118:14	0:0	4	attrc
op	118:19	0:0	4	]
op	118:21	0:0	4	=
water	118:23	0:0	4	VDP_VIDEO_MIXER_ATTRIBUTE_SKIP_CHROMA_DEINTERLACE
water	118:72	0:0	4	;
water	119:8	0:0	4	valv
op	119:12	0:0	4	[
water	119:13	0:0	4	attrc
op	119:18	0:0	4	]
op	119:20	0:0	4	=
op	119:22	0:0	4	&
water	119:23	0:0	4	chroma_skip
water	119:34	0:0	4	;
water	120:8	0:0	4	attrc
op	120:13	0:0	4	++
water	120:15	0:0	4	;
water	121:4	0:0	4	}
if	122:4	128:4	2	(noise > 0 . f)
cond	122:8	122:18	3	noise > 0 . f
water	122:8	0:0	4	noise
op	122:14	0:0	4	>
water	122:16	0:0	4	0
op	122:17	0:0	4	.
water	122:18	0:0	4	f
stmts	123:4	128:4	3	
water	123:4	0:0	4	{
water	124:8	0:0	4	featv
op	124:13	0:0	4	[
water	124:14	0:0	4	featc
op	124:19	0:0	4	++
op	124:21	0:0	4	]
op	124:23	0:0	4	=
water	124:25	0:0	4	VDP_VIDEO_MIXER_FEATURE_NOISE_REDUCTION
water	124:64	0:0	4	;
water	125:8	0:0	4	attrv
op	125:13	0:0	4	[
water	125:14	0:0	4	attrc
op	125:19	0:0	4	]
op	125:21	0:0	4	=
water	125:23	0:0	4	VDP_VIDEO_MIXER_ATTRIBUTE_NOISE_REDUCTION_LEVEL
water	125:70	0:0	4	;
water	126:8	0:0	4	valv
op	126:12	0:0	4	[
water	126:13	0:0	4	attrc
op	126:18	0:0	4	]
op	126:20	0:0	4	=
op	126:22	0:0	4	&
water	126:23	0:0	4	noise
water	126:28	0:0	4	;
water	127:8	0:0	4	attrc
op	127:13	0:0	4	++
water	127:15	0:0	4	;
water	128:4	0:0	4	}
if	129:4	130:39	2	(level > 0)
cond	129:8	129:16	3	level > 0
water	129:8	0:0	4	level
op	129:14	0:0	4	>
water	129:16	0:0	4	0
stmts	130:8	130:39	3	
water	130:8	0:0	4	featv
op	130:13	0:0	4	[
water	130:14	0:0	4	featc
op	130:19	0:0	4	++
op	130:21	0:0	4	]
op	130:23	0:0	4	=
water	130:25	0:0	4	offset
op	130:32	0:0	4	+
water	130:34	0:0	4	level
water	130:39	0:0	4	;
if	131:4	141:4	2	(featc > 0)
cond	131:8	131:16	3	featc > 0
water	131:8	0:0	4	featc
op	131:14	0:0	4	>
water	131:16	0:0	4	0
stmts	132:4	141:4	3	
water	132:4	0:0	4	{
decl	133:8	133:30	4	VdpBool	enablev[featc]
for	134:8	135:33	4	(unsigned i = 0 ;i < featc;i ++)
forinit	134:13	134:27	5	unsigned i = 0 ;
water	134:13	0:0	6	unsigned
water	134:22	0:0	6	i
op	134:24	0:0	6	=
water	134:26	0:0	6	0
water	134:27	0:0	6	;
cond	134:29	134:33	5	i < featc
water	134:29	0:0	6	i
op	134:31	0:0	6	<
water	134:33	0:0	6	featc
forexpr	134:40	134:41	5	i ++
water	134:40	0:0	6	i
op	134:41	0:0	6	++
stmts	135:12	135:33	5	
water	135:12	0:0	6	enablev
op	135:19	0:0	6	[
water	135:20	0:0	6	i
op	135:21	0:0	6	]
op	135:23	0:0	6	=
water	135:25	0:0	6	VDP_TRUE
water	135:33	0:0	6	;
water	136:8	0:0	4	err
op	136:12	0:0	4	=
call	136:14	137:71	4	vdp_video_mixer_set_feature_enables
arg	136:50	136:58	5	sys->vdp
water	136:50	0:0	6	sys
op	136:53	0:0	6	->
water	136:55	0:0	6	vdp
arg	136:60	136:65	5	mixer
water	136:60	0:0	6	mixer
arg	137:50	137:55	5	featc
water	137:50	0:0	6	featc
arg	137:57	137:62	5	featv
water	137:57	0:0	6	featv
arg	137:64	137:71	5	enablev
water	137:64	0:0	6	enablev
water	137:72	0:0	4	;
if	138:8	140:56	4	(err != VDP_STATUS_OK)
cond	138:12	138:19	5	err != VDP_STATUS_OK
water	138:12	0:0	6	err
op	138:16	0:0	6	!=
water	138:19	0:0	6	VDP_STATUS_OK
stmts	139:12	140:56	5	
call	139:12	140:55	6	msg_Err
arg	139:20	139:26	7	filter
water	139:20	0:0	8	filter
arg	139:28	139:53	7	"video %s %s failure: %s"
water	139:28	0:0	8	"video %s %s failure: %s"
arg	139:55	139:62	7	"mixer"
water	139:55	0:0	8	"mixer"
arg	139:64	139:74	7	"features"
water	139:64	0:0	8	"features"
arg	140:20	140:55	7	vdp_get_error_string(sys->vdp,err)
call	140:20	140:54	8	vdp_get_error_string
arg	140:41	140:49	9	sys->vdp
water	140:41	0:0	10	sys
op	140:44	0:0	10	->
water	140:46	0:0	10	vdp
arg	140:51	140:54	9	err
water	140:51	0:0	10	err
water	140:56	0:0	6	;
water	141:4	0:0	4	}
if	142:4	149:4	2	(attrc > 0)
cond	142:8	142:16	3	attrc > 0
water	142:8	0:0	4	attrc
op	142:14	0:0	4	>
water	142:16	0:0	4	0
stmts	143:4	149:4	3	
water	143:4	0:0	4	{
water	144:8	0:0	4	err
op	144:12	0:0	4	=
call	144:14	145:69	4	vdp_video_mixer_set_attribute_values
arg	144:51	144:59	5	sys->vdp
water	144:51	0:0	6	sys
op	144:54	0:0	6	->
water	144:56	0:0	6	vdp
arg	144:61	144:66	5	mixer
water	144:61	0:0	6	mixer
arg	145:51	145:56	5	attrc
water	145:51	0:0	6	attrc
arg	145:58	145:63	5	attrv
water	145:58	0:0	6	attrv
arg	145:65	145:69	5	valv
water	145:65	0:0	6	valv
water	145:70	0:0	4	;
if	146:8	148:56	4	(err != VDP_STATUS_OK)
cond	146:12	146:19	5	err != VDP_STATUS_OK
water	146:12	0:0	6	err
op	146:16	0:0	6	!=
water	146:19	0:0	6	VDP_STATUS_OK
stmts	147:12	148:56	5	
call	147:12	148:55	6	msg_Err
arg	147:20	147:26	7	filter
water	147:20	0:0	8	filter
arg	147:28	147:53	7	"video %s %s failure: %s"
water	147:28	0:0	8	"video %s %s failure: %s"
arg	147:55	147:62	7	"mixer"
water	147:55	0:0	8	"mixer"
arg	147:64	147:76	7	"attributes"
water	147:64	0:0	8	"attributes"
arg	148:20	148:55	7	vdp_get_error_string(sys->vdp,err)
call	148:20	148:54	8	vdp_get_error_string
arg	148:41	148:49	9	sys->vdp
water	148:41	0:0	10	sys
op	148:44	0:0	10	->
water	148:46	0:0	10	vdp
arg	148:51	148:54	9	err
water	148:51	0:0	10	err
water	148:56	0:0	6	;
water	149:4	0:0	4	}
return	150:4	150:16	2	mixer
water	150:11	0:0	3	mixer

func	2:0	36:0	0	static picture_t *	ImageReadUrl
params	2:30	0:0	1	
param	2:32	2:56	2	image_handler_t *	p_image
param	2:58	2:77	2	const char *	psz_url
param	3:32	3:56	2	video_format_t *	p_fmt_in
param	4:32	4:58	2	video_format_t *	p_fmt_out
stmnts	0:0	35:16	1	
decl	6:4	6:20	2	block_t	*p_block
decl	7:4	7:20	2	picture_t	*p_pic
decl	8:4	8:29	2	stream_t	*p_stream
op	8:23	0:0	2	=
water	8:25	0:0	2	NULL
decl	9:4	9:14	2	int	i_size
water	10:4	0:0	2	p_stream
op	10:13	0:0	2	=
call	10:15	10:57	2	stream_UrlNew
arg	10:30	10:47	3	p_image->p_parent
water	10:30	0:0	4	p_image
op	10:37	0:0	4	->
water	10:39	0:0	4	p_parent
arg	10:49	10:57	3	psz_url
water	10:49	0:0	4	psz_url
water	10:58	0:0	2	;
if	11:4	16:4	2	(! p_stream)
cond	11:8	11:9	3	! p_stream
op	11:8	0:0	4	!
water	11:9	0:0	4	p_stream
stmts	12:4	16:4	3	
water	12:4	0:0	4	{
call	13:8	14:25	4	msg_Dbg
arg	13:17	13:34	5	p_image->p_parent
water	13:17	0:0	6	p_image
op	13:24	0:0	6	->
water	13:26	0:0	6	p_parent
arg	13:36	13:67	5	"could not open %s for reading"
water	13:36	0:0	6	"could not open %s for reading"
arg	14:17	14:25	5	psz_url
water	14:17	0:0	6	psz_url
water	14:26	0:0	4	;
return	15:8	15:19	4	NULL
water	15:15	0:0	5	NULL
water	16:4	0:0	4	}
water	17:4	0:0	2	i_size
op	17:11	0:0	2	=
call	17:13	17:35	2	stream_Size
arg	17:26	17:35	3	p_stream
water	17:26	0:0	4	p_stream
water	17:36	0:0	2	;
water	18:4	0:0	2	p_block
op	18:12	0:0	2	=
call	18:14	18:34	2	block_Alloc
arg	18:27	18:34	3	i_size
water	18:27	0:0	4	i_size
water	18:35	0:0	2	;
call	19:4	19:53	2	stream_Read
arg	19:17	19:25	3	p_stream
water	19:17	0:0	4	p_stream
arg	19:27	19:44	3	p_block->p_buffer
water	19:27	0:0	4	p_block
op	19:34	0:0	4	->
water	19:36	0:0	4	p_buffer
arg	19:46	19:53	3	i_size
water	19:46	0:0	4	i_size
water	19:54	0:0	2	;
if	20:4	27:4	2	(! p_fmt_in -> i_chroma)
cond	20:8	20:19	3	! p_fmt_in -> i_chroma
op	20:8	0:0	4	!
water	20:9	0:0	4	p_fmt_in
op	20:17	0:0	4	->
water	20:19	0:0	4	i_chroma
stmts	21:4	27:4	3	
water	21:4	0:0	4	{
decl	22:8	22:29	4	char	*psz_mime
op	22:23	0:0	4	=
water	22:25	0:0	4	NULL
call	23:8	23:69	4	stream_Control
arg	23:24	23:32	5	p_stream
water	23:24	0:0	6	p_stream
arg	23:34	23:57	5	STREAM_GET_CONTENT_TYPE
water	23:34	0:0	6	STREAM_GET_CONTENT_TYPE
arg	23:59	23:69	5	&psz_mime
op	23:59	0:0	6	&
water	23:60	0:0	6	psz_mime
water	23:70	0:0	4	;
if	24:8	25:62	4	(psz_mime)
cond	24:12	24:12	5	psz_mime
water	24:12	0:0	6	psz_mime
stmts	25:12	25:62	5	
water	25:12	0:0	6	p_fmt_in
op	25:20	0:0	6	->
water	25:22	0:0	6	i_chroma
op	25:31	0:0	6	=
call	25:33	25:61	6	image_Mime2Fourcc
arg	25:52	25:61	7	psz_mime
water	25:52	0:0	8	psz_mime
water	25:62	0:0	6	;
call	26:8	26:23	4	free
arg	26:14	26:23	5	psz_mime
water	26:14	0:0	6	psz_mime
water	26:24	0:0	4	;
water	27:4	0:0	4	}
call	28:4	28:28	2	stream_Delete
arg	28:19	28:28	3	p_stream
water	28:19	0:0	4	p_stream
water	28:29	0:0	2	;
if	29:4	33:4	2	(! p_fmt_in -> i_chroma)
cond	29:8	29:19	3	! p_fmt_in -> i_chroma
op	29:8	0:0	4	!
water	29:9	0:0	4	p_fmt_in
op	29:17	0:0	4	->
water	29:19	0:0	4	i_chroma
stmts	30:4	33:4	3	
water	30:4	0:0	4	{
water	32:8	0:0	4	p_fmt_in
op	32:16	0:0	4	->
water	32:18	0:0	4	i_chroma
op	32:27	0:0	4	=
call	32:29	32:55	4	image_Ext2Fourcc
arg	32:47	32:55	5	psz_url
water	32:47	0:0	6	psz_url
water	32:56	0:0	4	;
water	33:4	0:0	4	}
water	34:4	0:0	2	p_pic
op	34:10	0:0	2	=
call	34:12	34:61	2	ImageRead
arg	34:23	34:30	3	p_image
water	34:23	0:0	4	p_image
arg	34:32	34:39	3	p_block
water	34:32	0:0	4	p_block
arg	34:41	34:49	3	p_fmt_in
water	34:41	0:0	4	p_fmt_in
arg	34:51	34:61	3	p_fmt_out
water	34:51	0:0	4	p_fmt_out
water	34:62	0:0	2	;
return	35:4	35:16	2	p_pic
water	35:11	0:0	3	p_pic

func	2:0	81:0	0	void	input_ControlVarNavigation
params	2:31	0:0	1	
param	2:33	2:57	2	input_thread_t *	p_input
stmnts	0:0	80:26	1	
decl	4:4	4:25	2	vlc_value_t	val
water	4:19	0:0	2	,
decl	4:4	4:25	2	vlc_value_t	text
decl	5:4	5:10	2	int	i
if	7:4	17:4	2	(p_input -> p -> i_title > 1)
cond	7:8	7:30	3	p_input -> p -> i_title > 1
water	7:8	0:0	4	p_input
op	7:15	0:0	4	->
water	7:17	0:0	4	p
op	7:18	0:0	4	->
water	7:20	0:0	4	i_title
op	7:28	0:0	4	>
water	7:30	0:0	4	1
stmts	8:4	17:4	3	
water	8:4	0:0	4	{
call	9:8	9:56	4	var_Create
arg	9:20	9:27	5	p_input
water	9:20	0:0	6	p_input
arg	9:29	9:41	5	"next-title"
water	9:29	0:0	6	"next-title"
arg	9:43	9:56	5	VLC_VAR_VOID
water	9:43	0:0	6	VLC_VAR_VOID
water	9:57	0:0	4	;
water	10:8	0:0	4	text
op	10:12	0:0	4	.
water	10:13	0:0	4	psz_string
op	10:24	0:0	4	=
call	10:26	10:40	4	_
arg	10:28	10:40	5	"Next title"
water	10:28	0:0	6	"Next title"
water	10:41	0:0	4	;
call	11:8	11:72	4	var_Change
arg	11:20	11:27	5	p_input
water	11:20	0:0	6	p_input
arg	11:29	11:41	5	"next-title"
water	11:29	0:0	6	"next-title"
arg	11:43	11:58	5	VLC_VAR_SETTEXT
water	11:43	0:0	6	VLC_VAR_SETTEXT
arg	11:60	11:65	5	&text
op	11:60	0:0	6	&
water	11:61	0:0	6	text
arg	11:67	11:72	5	NULL
water	11:67	0:0	6	NULL
water	11:73	0:0	4	;
call	12:8	12:68	4	var_AddCallback
arg	12:25	12:32	5	p_input
water	12:25	0:0	6	p_input
arg	12:34	12:46	5	"next-title"
water	12:34	0:0	6	"next-title"
arg	12:48	12:61	5	TitleCallback
water	12:48	0:0	6	TitleCallback
arg	12:63	12:68	5	NULL
water	12:63	0:0	6	NULL
water	12:69	0:0	4	;
call	13:8	13:56	4	var_Create
arg	13:20	13:27	5	p_input
water	13:20	0:0	6	p_input
arg	13:29	13:41	5	"prev-title"
water	13:29	0:0	6	"prev-title"
arg	13:43	13:56	5	VLC_VAR_VOID
water	13:43	0:0	6	VLC_VAR_VOID
water	13:57	0:0	4	;
water	14:8	0:0	4	text
op	14:12	0:0	4	.
water	14:13	0:0	4	psz_string
op	14:24	0:0	4	=
call	14:26	14:44	4	_
arg	14:28	14:44	5	"Previous title"
water	14:28	0:0	6	"Previous title"
water	14:45	0:0	4	;
call	15:8	15:72	4	var_Change
arg	15:20	15:27	5	p_input
water	15:20	0:0	6	p_input
arg	15:29	15:41	5	"prev-title"
water	15:29	0:0	6	"prev-title"
arg	15:43	15:58	5	VLC_VAR_SETTEXT
water	15:43	0:0	6	VLC_VAR_SETTEXT
arg	15:60	15:65	5	&text
op	15:60	0:0	6	&
water	15:61	0:0	6	text
arg	15:67	15:72	5	NULL
water	15:67	0:0	6	NULL
water	15:73	0:0	4	;
call	16:8	16:68	4	var_AddCallback
arg	16:25	16:32	5	p_input
water	16:25	0:0	6	p_input
arg	16:34	16:46	5	"prev-title"
water	16:34	0:0	6	"prev-title"
arg	16:48	16:61	5	TitleCallback
water	16:48	0:0	6	TitleCallback
arg	16:63	16:68	5	NULL
water	16:63	0:0	6	NULL
water	16:69	0:0	4	;
water	17:4	0:0	4	}
water	19:4	0:0	2	val
op	19:7	0:0	2	.
water	19:8	0:0	2	psz_string
op	19:19	0:0	2	=
call	19:21	19:50	2	malloc
arg	19:29	19:50	3	sizeof("title ")+5
op	19:29	0:0	4	sizeof
water	19:35	0:0	4	(
water	19:36	0:0	4	"title "
water	19:44	0:0	4	)
op	19:46	0:0	4	+
water	19:48	0:0	4	5
water	19:51	0:0	2	;
if	20:4	21:14	2	(! val . psz_string)
cond	20:8	20:13	3	! val . psz_string
op	20:8	0:0	4	!
water	20:9	0:0	4	val
op	20:12	0:0	4	.
water	20:13	0:0	4	psz_string
stmts	21:8	21:14	3	
return	21:8	21:14	4	
call	22:4	22:67	2	var_Change
arg	22:16	22:23	3	p_input
water	22:16	0:0	4	p_input
arg	22:25	22:32	3	"title"
water	22:25	0:0	4	"title"
arg	22:34	22:54	3	VLC_VAR_CLEARCHOICES
water	22:34	0:0	4	VLC_VAR_CLEARCHOICES
arg	22:56	22:60	3	NULL
water	22:56	0:0	4	NULL
arg	22:62	22:67	3	NULL
water	22:62	0:0	4	NULL
water	22:68	0:0	2	;
for	23:4	79:4	2	(i = 0 ;i < p_input -> p -> i_title;i ++)
forinit	23:9	23:14	3	i = 0 ;
water	23:9	0:0	4	i
op	23:11	0:0	4	=
water	23:13	0:0	4	0
water	23:14	0:0	4	;
cond	23:16	23:32	3	i < p_input -> p -> i_title
water	23:16	0:0	4	i
op	23:18	0:0	4	<
water	23:20	0:0	4	p_input
op	23:27	0:0	4	->
water	23:29	0:0	4	p
op	23:30	0:0	4	->
water	23:32	0:0	4	i_title
forexpr	23:41	23:42	3	i ++
water	23:41	0:0	4	i
op	23:42	0:0	4	++
stmts	24:4	79:4	3	
water	24:4	0:0	4	{
decl	25:8	25:31	4	vlc_value_t	val2
water	25:24	0:0	4	,
decl	25:8	25:31	4	vlc_value_t	text2
decl	26:8	26:13	4	int	j
call	28:8	28:49	4	sprintf
arg	28:17	28:31	5	val.psz_string
water	28:17	0:0	6	val
op	28:20	0:0	6	.
water	28:21	0:0	6	psz_string
arg	28:34	28:45	5	"title %2i"
water	28:34	0:0	6	"title %2i"
arg	28:47	28:49	5	i
water	28:47	0:0	6	i
water	28:50	0:0	4	;
call	29:8	29:45	4	var_Destroy
arg	29:21	29:28	5	p_input
water	29:21	0:0	6	p_input
arg	29:30	29:45	5	val.psz_string
water	29:30	0:0	6	val
op	29:33	0:0	6	.
water	29:34	0:0	6	psz_string
water	29:46	0:0	4	;
call	30:8	31:72	4	var_Create
arg	30:20	30:27	5	p_input
water	30:20	0:0	6	p_input
arg	30:29	30:43	5	val.psz_string
water	30:29	0:0	6	val
op	30:32	0:0	6	.
water	30:33	0:0	6	psz_string
arg	31:20	31:72	5	VLC_VAR_INTEGER|VLC_VAR_HASCHOICE|VLC_VAR_ISCOMMAND
water	31:20	0:0	6	VLC_VAR_INTEGER
op	31:35	0:0	6	|
water	31:36	0:0	6	VLC_VAR_HASCHOICE
op	31:53	0:0	6	|
water	31:54	0:0	6	VLC_VAR_ISCOMMAND
water	31:73	0:0	4	;
call	32:8	33:65	4	var_AddCallback
arg	32:25	32:32	5	p_input
water	32:25	0:0	6	p_input
arg	32:34	32:48	5	val.psz_string
water	32:34	0:0	6	val
op	32:37	0:0	6	.
water	32:38	0:0	6	psz_string
arg	33:25	33:43	5	NavigationCallback
water	33:25	0:0	6	NavigationCallback
arg	33:45	33:65	5	(void*)(intptr_t)i
call	33:45	33:62	6	(void*)
arg	33:54	33:62	7	intptr_t
water	33:54	0:0	8	intptr_t
water	33:63	0:0	6	i
water	33:66	0:0	4	;
decl	34:8	34:63	4	char	psz_length[MSTRTIME_MAX_SIZE+sizeof(" []")]
op	34:59	0:0	4	=
water	34:61	0:0	4	""
if	35:8	40:8	4	(p_input -> p -> title [ i ] -> i_length > 0)
cond	35:12	35:45	5	p_input -> p -> title [ i ] -> i_length > 0
water	35:12	0:0	6	p_input
op	35:19	0:0	6	->
water	35:21	0:0	6	p
op	35:22	0:0	6	->
water	35:24	0:0	6	title
op	35:29	0:0	6	[
water	35:30	0:0	6	i
op	35:31	0:0	6	]
op	35:32	0:0	6	->
water	35:34	0:0	6	i_length
op	35:43	0:0	6	>
water	35:45	0:0	6	0
stmts	36:8	40:8	5	
water	36:8	0:0	6	{
call	37:12	37:37	6	strcpy
arg	37:20	37:30	7	psz_length
water	37:20	0:0	8	psz_length
arg	37:32	37:37	7	" ["
water	37:32	0:0	8	" ["
water	37:38	0:0	6	;
call	38:12	38:87	6	secstotimestr
arg	38:27	38:41	7	&psz_length[2]
op	38:27	0:0	8	&
water	38:28	0:0	8	psz_length
op	38:38	0:0	8	[
water	38:39	0:0	8	2
op	38:40	0:0	8	]
arg	38:43	38:87	7	p_input->p->title[i]->i_length/CLOCK_FREQ
water	38:43	0:0	8	p_input
op	38:50	0:0	8	->
water	38:52	0:0	8	p
op	38:53	0:0	8	->
water	38:55	0:0	8	title
op	38:60	0:0	8	[
water	38:61	0:0	8	i
op	38:62	0:0	8	]
op	38:63	0:0	8	->
water	38:65	0:0	8	i_length
op	38:74	0:0	8	/
water	38:76	0:0	8	CLOCK_FREQ
water	38:88	0:0	6	;
call	39:12	39:36	6	strcat
arg	39:20	39:30	7	psz_length
water	39:20	0:0	8	psz_length
arg	39:32	39:36	7	"]"
water	39:32	0:0	8	"]"
water	39:37	0:0	6	;
water	40:8	0:0	6	}
if	41:8	47:8	4	(p_input -> p -> title [ i ] -> psz_name == NULL || * p_input -> p -> title [ i ] -> psz_name == '\0')
cond	41:12	42:47	5	p_input -> p -> title [ i ] -> psz_name == NULL || * p_input -> p -> title [ i ] -> psz_name == '\0'
water	41:12	0:0	6	p_input
op	41:19	0:0	6	->
water	41:21	0:0	6	p
op	41:22	0:0	6	->
water	41:24	0:0	6	title
op	41:29	0:0	6	[
water	41:30	0:0	6	i
op	41:31	0:0	6	]
op	41:32	0:0	6	->
water	41:34	0:0	6	psz_name
op	41:43	0:0	6	==
water	41:46	0:0	6	NULL
op	41:51	0:0	6	||
op	42:12	0:0	6	*
water	42:13	0:0	6	p_input
op	42:20	0:0	6	->
water	42:22	0:0	6	p
op	42:23	0:0	6	->
water	42:25	0:0	6	title
op	42:30	0:0	6	[
water	42:31	0:0	6	i
op	42:32	0:0	6	]
op	42:33	0:0	6	->
water	42:35	0:0	6	psz_name
op	42:44	0:0	6	==
water	42:47	0:0	6	'\0'
stmts	43:8	47:8	5	
water	43:8	0:0	6	{
if	44:12	46:24	6	(asprintf (& text . psz_string ,_ ("Title %i%s" ) ,i + p_input -> p -> i_title_offset ,psz_length ) == - 1)
cond	44:16	45:75	7	asprintf (& text . psz_string ,_ ("Title %i%s" ) ,i + p_input -> p -> i_title_offset ,psz_length ) == - 1
call	44:16	45:69	8	asprintf
arg	44:26	44:42	9	&text.psz_string
op	44:26	0:0	10	&
water	44:27	0:0	10	text
op	44:31	0:0	10	.
water	44:32	0:0	10	psz_string
arg	44:44	44:59	9	_("Title %i%s")
call	44:44	44:58	10	_
arg	44:46	44:58	11	"Title %i%s"
water	44:46	0:0	12	"Title %i%s"
arg	45:26	45:56	9	i+p_input->p->i_title_offset
water	45:26	0:0	10	i
op	45:28	0:0	10	+
water	45:30	0:0	10	p_input
op	45:37	0:0	10	->
water	45:39	0:0	10	p
op	45:40	0:0	10	->
water	45:42	0:0	10	i_title_offset
arg	45:58	45:69	9	psz_length
water	45:58	0:0	10	psz_length
op	45:71	0:0	8	==
op	45:74	0:0	8	-
water	45:75	0:0	8	1
stmts	46:16	46:24	7	
continue	46:16	46:24	8	
water	47:8	0:0	6	}
else	48:8	53:8	4
stmts	49:8	53:8	5	
water	49:8	0:0	6	{
if	50:12	52:24	6	(asprintf (& text . psz_string ,"%s%s" ,p_input -> p -> title [ i ] -> psz_name ,psz_length ) == - 1)
cond	50:16	51:75	7	asprintf (& text . psz_string ,"%s%s" ,p_input -> p -> title [ i ] -> psz_name ,psz_length ) == - 1
call	50:16	51:69	8	asprintf
arg	50:26	50:42	9	&text.psz_string
op	50:26	0:0	10	&
water	50:27	0:0	10	text
op	50:31	0:0	10	.
water	50:32	0:0	10	psz_string
arg	50:44	50:50	9	"%s%s"
water	50:44	0:0	10	"%s%s"
arg	51:26	51:56	9	p_input->p->title[i]->psz_name
water	51:26	0:0	10	p_input
op	51:33	0:0	10	->
water	51:35	0:0	10	p
op	51:36	0:0	10	->
water	51:38	0:0	10	title
op	51:43	0:0	10	[
water	51:44	0:0	10	i
op	51:45	0:0	10	]
op	51:46	0:0	10	->
water	51:48	0:0	10	psz_name
arg	51:58	51:69	9	psz_length
water	51:58	0:0	10	psz_length
op	51:71	0:0	8	==
op	51:74	0:0	8	-
water	51:75	0:0	8	1
stmts	52:16	52:24	7	
continue	52:16	52:24	8	
water	53:8	0:0	6	}
call	54:8	54:74	4	var_Change
arg	54:20	54:27	5	p_input
water	54:20	0:0	6	p_input
arg	54:29	54:41	5	"navigation"
water	54:29	0:0	6	"navigation"
arg	54:43	54:60	5	VLC_VAR_ADDCHOICE
water	54:43	0:0	6	VLC_VAR_ADDCHOICE
arg	54:62	54:66	5	&val
op	54:62	0:0	6	&
water	54:63	0:0	6	val
arg	54:68	54:74	5	&text
op	54:68	0:0	6	&
water	54:69	0:0	6	text
water	54:75	0:0	4	;
water	56:8	0:0	4	val2
op	56:12	0:0	4	.
water	56:13	0:0	4	i_int
op	56:19	0:0	4	=
water	56:21	0:0	4	i
water	56:22	0:0	4	;
call	57:8	57:70	4	var_Change
arg	57:20	57:27	5	p_input
water	57:20	0:0	6	p_input
arg	57:29	57:36	5	"title"
water	57:29	0:0	6	"title"
arg	57:38	57:55	5	VLC_VAR_ADDCHOICE
water	57:38	0:0	6	VLC_VAR_ADDCHOICE
arg	57:57	57:62	5	&val2
op	57:57	0:0	6	&
water	57:58	0:0	6	val2
arg	57:64	57:70	5	&text
op	57:64	0:0	6	&
water	57:65	0:0	6	text
water	57:71	0:0	4	;
call	58:8	58:30	4	free
arg	58:14	58:30	5	text.psz_string
water	58:14	0:0	6	text
op	58:18	0:0	6	.
water	58:19	0:0	6	psz_string
water	58:31	0:0	4	;
for	59:8	78:8	4	(j = 0 ;j < p_input -> p -> title [ i ] -> i_seekpoint;j ++)
forinit	59:13	59:18	5	j = 0 ;
water	59:13	0:0	6	j
op	59:15	0:0	6	=
water	59:17	0:0	6	0
water	59:18	0:0	6	;
cond	59:20	59:46	5	j < p_input -> p -> title [ i ] -> i_seekpoint
water	59:20	0:0	6	j
op	59:22	0:0	6	<
water	59:24	0:0	6	p_input
op	59:31	0:0	6	->
water	59:33	0:0	6	p
op	59:34	0:0	6	->
water	59:36	0:0	6	title
op	59:41	0:0	6	[
water	59:42	0:0	6	i
op	59:43	0:0	6	]
op	59:44	0:0	6	->
water	59:46	0:0	6	i_seekpoint
forexpr	59:59	59:60	5	j ++
water	59:59	0:0	6	j
op	59:60	0:0	6	++
stmts	60:8	78:8	5	
water	60:8	0:0	6	{
water	61:12	0:0	6	val2
op	61:16	0:0	6	.
water	61:17	0:0	6	i_int
op	61:23	0:0	6	=
water	61:25	0:0	6	j
water	61:26	0:0	6	;
if	62:12	69:12	6	(p_input -> p -> title [ i ] -> seekpoint [ j ] -> psz_name == NULL || * p_input -> p -> title [ i ] -> seekpoint [ j ] -> psz_name == '\0')
cond	62:16	63:65	7	p_input -> p -> title [ i ] -> seekpoint [ j ] -> psz_name == NULL || * p_input -> p -> title [ i ] -> seekpoint [ j ] -> psz_name == '\0'
water	62:16	0:0	8	p_input
op	62:23	0:0	8	->
water	62:25	0:0	8	p
op	62:26	0:0	8	->
water	62:28	0:0	8	title
op	62:33	0:0	8	[
water	62:34	0:0	8	i
op	62:35	0:0	8	]
op	62:36	0:0	8	->
water	62:38	0:0	8	seekpoint
op	62:47	0:0	8	[
water	62:48	0:0	8	j
op	62:49	0:0	8	]
op	62:50	0:0	8	->
water	62:52	0:0	8	psz_name
op	62:61	0:0	8	==
water	62:64	0:0	8	NULL
op	62:69	0:0	8	||
op	63:16	0:0	8	*
water	63:17	0:0	8	p_input
op	63:24	0:0	8	->
water	63:26	0:0	8	p
op	63:27	0:0	8	->
water	63:29	0:0	8	title
op	63:34	0:0	8	[
water	63:35	0:0	8	i
op	63:36	0:0	8	]
op	63:37	0:0	8	->
water	63:39	0:0	8	seekpoint
op	63:48	0:0	8	[
water	63:49	0:0	8	j
op	63:50	0:0	8	]
op	63:51	0:0	8	->
water	63:53	0:0	8	psz_name
op	63:62	0:0	8	==
water	63:65	0:0	8	'\0'
stmts	64:12	69:12	7	
water	64:12	0:0	8	{
if	66:16	68:28	8	(asprintf (& text2 . psz_string ,_ ("Chapter %i" ) ,j + p_input -> p -> i_seekpoint_offset ) == - 1)
cond	66:20	67:67	9	asprintf (& text2 . psz_string ,_ ("Chapter %i" ) ,j + p_input -> p -> i_seekpoint_offset ) == - 1
call	66:20	67:61	10	asprintf
arg	66:30	66:47	11	&text2.psz_string
op	66:30	0:0	12	&
water	66:31	0:0	12	text2
op	66:36	0:0	12	.
water	66:37	0:0	12	psz_string
arg	66:49	66:64	11	_("Chapter %i")
call	66:49	66:63	12	_
arg	66:51	66:63	13	"Chapter %i"
water	66:51	0:0	14	"Chapter %i"
arg	67:26	67:61	11	j+p_input->p->i_seekpoint_offset
water	67:26	0:0	12	j
op	67:28	0:0	12	+
water	67:30	0:0	12	p_input
op	67:37	0:0	12	->
water	67:39	0:0	12	p
op	67:40	0:0	12	->
water	67:42	0:0	12	i_seekpoint_offset
op	67:63	0:0	10	==
op	67:66	0:0	10	-
water	67:67	0:0	10	1
stmts	68:20	68:28	9	
continue	68:20	68:28	10	
water	69:12	0:0	8	}
else	70:12	74:12	6
stmts	71:12	74:12	7	
water	71:12	0:0	8	{
water	72:16	0:0	8	text2
op	72:21	0:0	8	.
water	72:22	0:0	8	psz_string
op	72:33	0:0	8	=
call	73:20	73:73	8	strdup
arg	73:28	73:73	9	p_input->p->title[i]->seekpoint[j]->psz_name
water	73:28	0:0	10	p_input
op	73:35	0:0	10	->
water	73:37	0:0	10	p
op	73:38	0:0	10	->
water	73:40	0:0	10	title
op	73:45	0:0	10	[
water	73:46	0:0	10	i
op	73:47	0:0	10	]
op	73:48	0:0	10	->
water	73:50	0:0	10	seekpoint
op	73:59	0:0	10	[
water	73:60	0:0	10	j
op	73:61	0:0	10	]
op	73:62	0:0	10	->
water	73:64	0:0	10	psz_name
water	73:74	0:0	8	;
water	74:12	0:0	8	}
call	75:12	76:38	6	var_Change
arg	75:24	75:31	7	p_input
water	75:24	0:0	8	p_input
arg	75:33	75:47	7	val.psz_string
water	75:33	0:0	8	val
op	75:36	0:0	8	.
water	75:37	0:0	8	psz_string
arg	75:49	75:66	7	VLC_VAR_ADDCHOICE
water	75:49	0:0	8	VLC_VAR_ADDCHOICE
arg	76:24	76:29	7	&val2
op	76:24	0:0	8	&
water	76:25	0:0	8	val2
arg	76:31	76:38	7	&text2
op	76:31	0:0	8	&
water	76:32	0:0	8	text2
water	76:39	0:0	6	;
call	77:12	77:35	6	free
arg	77:18	77:35	7	text2.psz_string
water	77:18	0:0	8	text2
op	77:23	0:0	8	.
water	77:24	0:0	8	psz_string
water	77:36	0:0	6	;
water	78:8	0:0	6	}
water	79:4	0:0	4	}
call	80:4	80:25	2	free
arg	80:10	80:25	3	val.psz_string
water	80:10	0:0	4	val
op	80:13	0:0	4	.
water	80:14	0:0	4	psz_string
water	80:26	0:0	2	;

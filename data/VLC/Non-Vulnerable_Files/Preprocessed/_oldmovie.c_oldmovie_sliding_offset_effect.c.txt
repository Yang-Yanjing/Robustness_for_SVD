func	2:0	74:0	0	static int	oldmovie_sliding_offset_effect
params	2:41	0:0	1	
param	2:43	2:61	2	filter_t *	p_filter
param	2:63	2:84	2	picture_t *	p_pic_out
stmnts	0:0	73:63	1	
decl	3:4	3:41	2	filter_sys_t	*p_sys
op	3:24	0:0	2	=
water	3:26	0:0	2	p_filter
op	3:34	0:0	2	->
water	3:36	0:0	2	p_sys
if	9:4	16:4	2	(p_sys -> i_offset_trigger == 0 || p_sys -> i_sliding_speed != 0)
cond	9:9	10:38	3	p_sys -> i_offset_trigger == 0 || p_sys -> i_sliding_speed != 0
water	9:9	0:0	4	p_sys
op	9:14	0:0	4	->
water	9:16	0:0	4	i_offset_trigger
op	9:33	0:0	4	==
water	9:36	0:0	4	0
op	10:9	0:0	4	||
water	10:12	0:0	4	p_sys
op	10:17	0:0	4	->
water	10:19	0:0	4	i_sliding_speed
op	10:35	0:0	4	!=
water	10:38	0:0	4	0
stmts	10:42	16:4	3	
water	10:42	0:0	4	{
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	i_offset_trigger
op	12:32	0:0	4	=
water	12:34	0:0	4	p_sys
op	12:39	0:0	4	->
water	12:41	0:0	4	i_cur_time
op	13:32	0:0	4	+
water	13:34	0:0	4	(
water	13:36	0:0	4	(
water	13:37	0:0	4	uint64_t
water	13:45	0:0	4	)
call	13:47	13:59	4	vlc_mrand48
water	13:61	0:0	4	)
op	13:63	0:0	4	%
water	13:65	0:0	4	OFFSET_AVERAGE_PERIOD
op	14:32	0:0	4	+
water	14:34	0:0	4	OFFSET_AVERAGE_PERIOD
op	14:56	0:0	4	/
water	14:58	0:0	4	2
water	14:59	0:0	4	;
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	i_offset_ofs
op	15:28	0:0	4	=
water	15:30	0:0	4	0
water	15:31	0:0	4	;
water	16:4	0:0	4	}
else	16:6	21:4	2
stmts	16:11	21:4	3	
if	16:11	21:4	4	(p_sys -> i_offset_trigger <= p_sys -> i_cur_time)
cond	16:16	16:50	5	p_sys -> i_offset_trigger <= p_sys -> i_cur_time
water	16:16	0:0	6	p_sys
op	16:21	0:0	6	->
water	16:23	0:0	6	i_offset_trigger
op	16:40	0:0	6	<=
water	16:43	0:0	6	p_sys
op	16:48	0:0	6	->
water	16:50	0:0	6	i_cur_time
stmts	16:63	21:4	5	
water	16:63	0:0	6	{
water	18:8	0:0	6	p_sys
op	18:13	0:0	6	->
water	18:15	0:0	6	i_offset_trigger
op	18:32	0:0	6	=
water	18:34	0:0	6	0
water	18:35	0:0	6	;
water	19:8	0:0	6	p_sys
op	19:13	0:0	6	->
water	19:15	0:0	6	i_offset_ofs
op	19:28	0:0	6	=
call	19:30	20:59	6	MOD
arg	19:35	19:62	7	((uint32_t)vlc_mrand48())
water	19:35	0:0	8	(
water	19:37	0:0	8	(
water	19:38	0:0	8	uint32_t
water	19:46	0:0	8	)
call	19:47	19:59	8	vlc_mrand48
water	19:61	0:0	8	)
arg	20:34	20:59	7	p_sys->i_height[Y_PLANE]
water	20:34	0:0	8	p_sys
op	20:39	0:0	8	->
water	20:41	0:0	8	i_height
op	20:49	0:0	8	[
water	20:50	0:0	8	Y_PLANE
op	20:57	0:0	8	]
op	20:61	0:0	6	*
water	20:63	0:0	6	100
water	20:66	0:0	6	;
water	21:4	0:0	6	}
else	21:6	22:31	2
stmts	22:8	22:31	3	
water	22:8	0:0	4	p_sys
op	22:13	0:0	4	->
water	22:15	0:0	4	i_offset_ofs
op	22:28	0:0	4	=
water	22:30	0:0	4	0
water	22:31	0:0	4	;
if	29:4	36:4	2	(( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger == 0 ) && ( p_sys -> i_sliding_speed == 0 ))
cond	29:12	31:47	3	( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger == 0 ) && ( p_sys -> i_sliding_speed == 0 )
water	29:12	0:0	4	(
water	29:14	0:0	4	p_sys
op	29:19	0:0	4	->
water	29:21	0:0	4	i_sliding_stop_trig
op	29:42	0:0	4	==
water	29:45	0:0	4	0
water	29:47	0:0	4	)
op	30:9	0:0	4	&&
water	30:12	0:0	4	(
water	30:14	0:0	4	p_sys
op	30:19	0:0	4	->
water	30:21	0:0	4	i_sliding_trigger
op	30:42	0:0	4	==
water	30:45	0:0	4	0
water	30:47	0:0	4	)
op	31:9	0:0	4	&&
water	31:12	0:0	4	(
water	31:14	0:0	4	p_sys
op	31:19	0:0	4	->
water	31:21	0:0	4	i_sliding_speed
op	31:42	0:0	4	==
water	31:45	0:0	4	0
water	31:47	0:0	4	)
stmts	31:51	36:4	3	
water	31:51	0:0	4	{
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	i_sliding_trigger
op	33:33	0:0	4	=
water	33:35	0:0	4	p_sys
op	33:40	0:0	4	->
water	33:42	0:0	4	i_cur_time
op	34:33	0:0	4	+
water	34:35	0:0	4	(
water	34:37	0:0	4	(
water	34:38	0:0	4	uint64_t
water	34:46	0:0	4	)
call	34:48	34:60	4	vlc_mrand48
water	34:62	0:0	4	)
op	34:64	0:0	4	%
water	34:66	0:0	4	SLIDING_AVERAGE_PERIOD
op	35:33	0:0	4	+
water	35:35	0:0	4	SLIDING_AVERAGE_PERIOD
op	35:58	0:0	4	/
water	35:60	0:0	4	2
water	35:61	0:0	4	;
water	36:4	0:0	4	}
else	38:4	49:4	2
stmts	38:9	49:4	3	
if	38:9	49:4	4	(( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_speed == 0 ))
cond	38:17	40:52	5	( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_speed == 0 )
water	38:17	0:0	6	(
water	38:19	0:0	6	p_sys
op	38:24	0:0	6	->
water	38:26	0:0	6	i_sliding_stop_trig
op	38:47	0:0	6	==
water	38:50	0:0	6	0
water	38:52	0:0	6	)
op	39:14	0:0	6	&&
water	39:17	0:0	6	(
water	39:19	0:0	6	p_sys
op	39:24	0:0	6	->
water	39:26	0:0	6	i_sliding_trigger
op	39:47	0:0	6	<=
water	39:50	0:0	6	p_sys
op	39:55	0:0	6	->
water	39:57	0:0	6	i_cur_time
water	39:68	0:0	6	)
op	40:14	0:0	6	&&
water	40:17	0:0	6	(
water	40:19	0:0	6	p_sys
op	40:24	0:0	6	->
water	40:26	0:0	6	i_sliding_speed
op	40:47	0:0	6	==
water	40:50	0:0	6	0
water	40:52	0:0	6	)
stmts	40:56	49:4	5	
water	40:56	0:0	6	{
water	42:8	0:0	6	p_sys
op	42:13	0:0	6	->
water	42:15	0:0	6	i_sliding_trigger
op	42:35	0:0	6	=
water	42:37	0:0	6	0
water	42:38	0:0	6	;
water	43:8	0:0	6	p_sys
op	43:13	0:0	6	->
water	43:15	0:0	6	i_sliding_stop_trig
op	43:35	0:0	6	=
water	43:37	0:0	6	p_sys
op	43:42	0:0	6	->
water	43:44	0:0	6	i_cur_time
op	44:35	0:0	6	+
water	44:37	0:0	6	(
water	44:38	0:0	6	(
water	44:39	0:0	6	uint64_t
water	44:47	0:0	6	)
call	44:49	44:61	6	vlc_mrand48
water	44:63	0:0	6	)
op	44:65	0:0	6	%
water	44:67	0:0	6	SLIDING_AVERAGE_DURATION
op	45:35	0:0	6	+
water	45:37	0:0	6	SLIDING_AVERAGE_DURATION
op	45:62	0:0	6	/
water	45:64	0:0	6	2
water	45:65	0:0	6	;
water	46:8	0:0	6	p_sys
op	46:13	0:0	6	->
water	46:15	0:0	6	i_sliding_ofs
op	46:29	0:0	6	=
water	46:31	0:0	6	0
water	46:32	0:0	6	;
water	48:8	0:0	6	p_sys
op	48:13	0:0	6	->
water	48:15	0:0	6	i_sliding_speed
op	48:31	0:0	6	=
call	48:33	48:68	6	MOD
arg	48:37	48:63	7	((int32_t)vlc_mrand48())
water	48:37	0:0	8	(
water	48:38	0:0	8	(
water	48:39	0:0	8	int32_t
water	48:46	0:0	8	)
call	48:48	48:60	8	vlc_mrand48
water	48:62	0:0	8	)
arg	48:65	48:68	7	201
water	48:65	0:0	8	201
op	48:70	0:0	6	-
water	48:72	0:0	6	100
water	48:75	0:0	6	;
water	49:4	0:0	6	}
else	51:4	65:4	2
stmts	51:9	65:4	3	
if	51:9	65:4	4	(( p_sys -> i_sliding_stop_trig <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_trigger == 0 ))
cond	51:16	52:51	5	( p_sys -> i_sliding_stop_trig <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_trigger == 0 )
water	51:16	0:0	6	(
water	51:18	0:0	6	p_sys
op	51:23	0:0	6	->
water	51:25	0:0	6	i_sliding_stop_trig
op	51:46	0:0	6	<=
water	51:49	0:0	6	p_sys
op	51:54	0:0	6	->
water	51:56	0:0	6	i_cur_time
water	51:67	0:0	6	)
op	52:13	0:0	6	&&
water	52:16	0:0	6	(
water	52:18	0:0	6	p_sys
op	52:23	0:0	6	->
water	52:25	0:0	6	i_sliding_trigger
op	52:46	0:0	6	==
water	52:49	0:0	6	0
water	52:51	0:0	6	)
stmts	52:55	65:4	5	
water	52:55	0:0	6	{
if	54:8	55:39	6	(abs (p_sys -> i_sliding_speed ) < 50)
cond	54:13	54:43	7	abs (p_sys -> i_sliding_speed ) < 50
call	54:13	54:39	8	abs
arg	54:17	54:39	9	p_sys->i_sliding_speed
water	54:17	0:0	10	p_sys
op	54:22	0:0	10	->
water	54:24	0:0	10	i_sliding_speed
op	54:41	0:0	8	<
water	54:43	0:0	8	50
stmts	55:12	55:39	7	
water	55:12	0:0	8	p_sys
op	55:17	0:0	8	->
water	55:19	0:0	8	i_sliding_speed
op	55:35	0:0	8	+=
water	55:38	0:0	8	5
water	55:39	0:0	8	;
if	57:8	64:8	6	(abs (p_sys -> i_sliding_ofs ) <abs (p_sys -> i_sliding_speed * p_sys -> i_height [ Y_PLANE ] * ( p_sys -> i_cur_time - p_sys -> i_last_time ) / TIME_UNIT_PER_S ) ||abs (p_sys -> i_sliding_ofs ) < p_sys -> i_height [ Y_PLANE ] * 100 / 20)
cond	57:13	60:80	7	abs (p_sys -> i_sliding_ofs ) <abs (p_sys -> i_sliding_speed * p_sys -> i_height [ Y_PLANE ] * ( p_sys -> i_cur_time - p_sys -> i_last_time ) / TIME_UNIT_PER_S ) ||abs (p_sys -> i_sliding_ofs ) < p_sys -> i_height [ Y_PLANE ] * 100 / 20
call	57:13	57:39	8	abs
arg	57:18	57:39	9	p_sys->i_sliding_ofs
water	57:18	0:0	10	p_sys
op	57:23	0:0	10	->
water	57:25	0:0	10	i_sliding_ofs
op	57:41	0:0	8	<
call	57:43	59:76	8	abs
arg	57:48	59:76	9	p_sys->i_sliding_speed*p_sys->i_height[Y_PLANE]*(p_sys->i_cur_time-p_sys->i_last_time)/TIME_UNIT_PER_S
water	57:48	0:0	10	p_sys
op	57:53	0:0	10	->
water	57:55	0:0	10	i_sliding_speed
op	58:13	0:0	10	*
water	58:15	0:0	10	p_sys
op	58:20	0:0	10	->
water	58:22	0:0	10	i_height
op	58:30	0:0	10	[
water	58:31	0:0	10	Y_PLANE
op	58:38	0:0	10	]
op	59:13	0:0	10	*
water	59:15	0:0	10	(
water	59:17	0:0	10	p_sys
op	59:22	0:0	10	->
water	59:24	0:0	10	i_cur_time
op	59:35	0:0	10	-
water	59:37	0:0	10	p_sys
op	59:42	0:0	10	->
water	59:44	0:0	10	i_last_time
water	59:56	0:0	10	)
op	59:58	0:0	10	/
water	59:60	0:0	10	TIME_UNIT_PER_S
op	60:13	0:0	8	||
call	60:17	60:43	8	abs
arg	60:22	60:43	9	p_sys->i_sliding_ofs
water	60:22	0:0	10	p_sys
op	60:27	0:0	10	->
water	60:29	0:0	10	i_sliding_ofs
op	60:45	0:0	8	<
water	60:47	0:0	8	p_sys
op	60:52	0:0	8	->
water	60:54	0:0	8	i_height
op	60:62	0:0	8	[
water	60:63	0:0	8	Y_PLANE
op	60:70	0:0	8	]
op	60:72	0:0	8	*
water	60:74	0:0	8	100
op	60:78	0:0	8	/
water	60:80	0:0	8	20
stmts	60:85	64:8	7	
water	60:85	0:0	8	{
water	62:12	0:0	8	p_sys
op	62:17	0:0	8	->
water	62:19	0:0	8	i_sliding_ofs
op	62:37	0:0	8	=
water	62:39	0:0	8	p_sys
op	62:44	0:0	8	->
water	62:46	0:0	8	i_sliding_speed
op	62:62	0:0	8	=
water	62:64	0:0	8	0
water	62:65	0:0	8	;
water	63:12	0:0	8	p_sys
op	63:17	0:0	8	->
water	63:19	0:0	8	i_sliding_trigger
op	63:37	0:0	8	=
water	63:39	0:0	8	p_sys
op	63:44	0:0	8	->
water	63:46	0:0	8	i_sliding_stop_trig
op	63:66	0:0	8	=
water	63:68	0:0	8	0
water	63:69	0:0	8	;
water	64:8	0:0	8	}
water	65:4	0:0	6	}
water	67:4	0:0	2	p_sys
op	67:9	0:0	2	->
water	67:11	0:0	2	i_sliding_ofs
op	67:25	0:0	2	+=
water	67:28	0:0	2	p_sys
op	67:33	0:0	2	->
water	67:35	0:0	2	i_sliding_speed
op	67:51	0:0	2	*
water	67:53	0:0	2	p_sys
op	67:58	0:0	2	->
water	67:60	0:0	2	i_height
op	67:68	0:0	2	[
water	67:69	0:0	2	Y_PLANE
op	67:76	0:0	2	]
op	68:25	0:0	2	*
water	68:27	0:0	2	(
water	68:29	0:0	2	p_sys
op	68:34	0:0	2	->
water	68:36	0:0	2	i_cur_time
op	68:47	0:0	2	-
water	68:49	0:0	2	p_sys
op	68:54	0:0	2	->
water	68:56	0:0	2	i_last_time
water	68:68	0:0	2	)
op	69:25	0:0	2	/
water	69:27	0:0	2	TIME_UNIT_PER_S
water	69:42	0:0	2	;
water	70:4	0:0	2	p_sys
op	70:9	0:0	2	->
water	70:11	0:0	2	i_sliding_ofs
op	70:25	0:0	2	=
call	70:27	71:63	2	MOD
arg	70:32	70:52	3	p_sys->i_sliding_ofs
water	70:32	0:0	4	p_sys
op	70:37	0:0	4	->
water	70:39	0:0	4	i_sliding_ofs
arg	71:32	71:63	3	p_sys->i_height[Y_PLANE]*100
water	71:32	0:0	4	p_sys
op	71:37	0:0	4	->
water	71:39	0:0	4	i_height
op	71:47	0:0	4	[
water	71:48	0:0	4	Y_PLANE
op	71:55	0:0	4	]
op	71:57	0:0	4	*
water	71:59	0:0	4	100
water	71:64	0:0	2	;
return	73:4	73:63	2	oldmovie_sliding_offset_apply(p_filter,p_pic_out)
call	73:11	73:62	3	oldmovie_sliding_offset_apply
arg	73:42	73:50	4	p_filter
water	73:42	0:0	5	p_filter
arg	73:52	73:62	4	p_pic_out
water	73:52	0:0	5	p_pic_out

func	2:0	136:0	0	static int	Init
params	2:15	0:0	1	
param	2:17	2:37	2	vlc_object_t *	p_this
param	2:39	3:8	2	struct filter_sys_t *	p_data
param	3:10	3:36	2	unsigned int	i_nb_channels
param	3:38	4:8	2	uint32_t	i_physical_channels
param	4:10	4:30	2	unsigned int	i_rate
stmnts	0:0	135:12	1	
decl	6:4	6:62	2	double	d_x
op	6:15	0:0	2	=
call	6:17	6:61	3	var_InheritInteger
arg	6:37	6:43	4	p_this
water	6:37	0:0	5	p_this
arg	6:45	6:61	4	"headphone-dim"
water	6:45	0:0	5	"headphone-dim"
decl	7:4	7:20	2	double	d_z
op	7:15	0:0	2	=
water	7:17	0:0	2	d_x
decl	8:4	8:28	2	double	d_z_rear
op	8:20	0:0	2	=
op	8:22	0:0	2	-
water	8:23	0:0	2	d_x
op	8:26	0:0	2	/
water	8:27	0:0	2	3
decl	9:4	9:20	2	double	d_min
op	9:17	0:0	2	=
water	9:19	0:0	2	0
decl	10:4	10:40	2	unsigned int	i_next_atomic_operation
decl	11:4	11:31	2	int	i_source_channel_offset
decl	12:4	12:18	2	unsigned int	i
if	13:4	24:4	2	(var_InheritBool (p_this ,"headphone-compensate" ))
cond	13:8	13:56	3	var_InheritBool (p_this ,"headphone-compensate" )
call	13:8	13:56	4	var_InheritBool
arg	13:25	13:31	5	p_this
water	13:25	0:0	6	p_this
arg	13:33	13:56	5	"headphone-compensate"
water	13:33	0:0	6	"headphone-compensate"
stmts	14:4	24:4	3	
water	14:4	0:0	4	{
if	16:8	19:8	4	(i_physical_channels & AOUT_CHAN_REARCENTER)
cond	16:12	16:34	5	i_physical_channels & AOUT_CHAN_REARCENTER
water	16:12	0:0	6	i_physical_channels
op	16:32	0:0	6	&
water	16:34	0:0	6	AOUT_CHAN_REARCENTER
stmts	17:8	19:8	5	
water	17:8	0:0	6	{
water	18:12	0:0	6	d_min
op	18:18	0:0	6	=
water	18:20	0:0	6	d_z_rear
water	18:28	0:0	6	;
water	19:8	0:0	6	}
else	20:8	23:8	4
stmts	21:8	23:8	5	
water	21:8	0:0	6	{
water	22:12	0:0	6	d_min
op	22:18	0:0	6	=
water	22:20	0:0	6	d_z
water	22:23	0:0	6	;
water	23:8	0:0	6	}
water	24:4	0:0	4	}
water	26:4	0:0	2	p_data
op	26:10	0:0	2	->
water	26:12	0:0	2	i_nb_atomic_operations
op	26:35	0:0	2	=
water	26:37	0:0	2	i_nb_channels
op	26:51	0:0	2	*
water	26:53	0:0	2	2
water	26:54	0:0	2	;
if	27:4	30:4	2	(i_physical_channels & AOUT_CHAN_CENTER)
cond	27:8	27:30	3	i_physical_channels & AOUT_CHAN_CENTER
water	27:8	0:0	4	i_physical_channels
op	27:28	0:0	4	&
water	27:30	0:0	4	AOUT_CHAN_CENTER
stmts	28:4	30:4	3	
water	28:4	0:0	4	{
water	29:8	0:0	4	p_data
op	29:14	0:0	4	->
water	29:16	0:0	4	i_nb_atomic_operations
op	29:39	0:0	4	+=
water	29:42	0:0	4	2
water	29:43	0:0	4	;
water	30:4	0:0	4	}
water	31:4	0:0	2	p_data
op	31:10	0:0	2	->
water	31:12	0:0	2	p_atomic_operations
op	31:32	0:0	2	=
call	31:34	32:45	2	malloc
arg	31:42	32:45	3	sizeof(structatomic_operation_t)*p_data->i_nb_atomic_operations
op	31:42	0:0	4	sizeof
water	31:48	0:0	4	(
water	31:49	0:0	4	struct
water	31:56	0:0	4	atomic_operation_t
water	31:74	0:0	4	)
op	32:12	0:0	4	*
water	32:14	0:0	4	p_data
op	32:20	0:0	4	->
water	32:22	0:0	4	i_nb_atomic_operations
water	32:46	0:0	2	;
if	33:4	34:17	2	(p_data -> p_atomic_operations == NULL)
cond	33:8	33:39	3	p_data -> p_atomic_operations == NULL
water	33:8	0:0	4	p_data
op	33:14	0:0	4	->
water	33:16	0:0	4	p_atomic_operations
op	33:36	0:0	4	==
water	33:39	0:0	4	NULL
stmts	34:8	34:17	3	
return	34:8	34:17	4	-1
op	34:15	0:0	5	-
water	34:16	0:0	5	1
water	37:4	0:0	2	i_next_atomic_operation
op	37:28	0:0	2	=
water	37:30	0:0	2	0
water	37:31	0:0	2	;
water	38:4	0:0	2	i_source_channel_offset
op	38:28	0:0	2	=
water	38:30	0:0	2	0
water	38:31	0:0	2	;
if	39:4	46:4	2	(i_physical_channels & AOUT_CHAN_LEFT)
cond	39:8	39:30	3	i_physical_channels & AOUT_CHAN_LEFT
water	39:8	0:0	4	i_physical_channels
op	39:28	0:0	4	&
water	39:30	0:0	4	AOUT_CHAN_LEFT
stmts	40:4	46:4	3	
water	40:4	0:0	4	{
call	41:8	43:59	4	ComputeChannelOperations
arg	41:34	41:41	5	p_data
water	41:34	0:0	6	p_data
arg	41:43	42:16	5	i_rate
water	41:43	0:0	6	i_rate
arg	42:18	42:42	5	i_next_atomic_operation
water	42:18	0:0	6	i_next_atomic_operation
arg	42:44	43:16	5	i_source_channel_offset
water	42:44	0:0	6	i_source_channel_offset
arg	43:18	43:23	5	-d_x
op	43:18	0:0	6	-
water	43:19	0:0	6	d_x
arg	43:25	43:29	5	d_z
water	43:25	0:0	6	d_z
arg	43:31	43:37	5	d_min
water	43:31	0:0	6	d_min
arg	43:39	43:59	5	2.0/i_nb_channels
water	43:39	0:0	6	2
op	43:40	0:0	6	.
water	43:41	0:0	6	0
op	43:43	0:0	6	/
water	43:45	0:0	6	i_nb_channels
water	43:60	0:0	4	;
water	44:8	0:0	4	i_next_atomic_operation
op	44:32	0:0	4	+=
water	44:35	0:0	4	2
water	44:36	0:0	4	;
water	45:8	0:0	4	i_source_channel_offset
op	45:31	0:0	4	++
water	45:33	0:0	4	;
water	46:4	0:0	4	}
if	47:4	54:4	2	(i_physical_channels & AOUT_CHAN_RIGHT)
cond	47:8	47:30	3	i_physical_channels & AOUT_CHAN_RIGHT
water	47:8	0:0	4	i_physical_channels
op	47:28	0:0	4	&
water	47:30	0:0	4	AOUT_CHAN_RIGHT
stmts	48:4	54:4	3	
water	48:4	0:0	4	{
call	49:8	51:58	4	ComputeChannelOperations
arg	49:34	49:41	5	p_data
water	49:34	0:0	6	p_data
arg	49:43	50:16	5	i_rate
water	49:43	0:0	6	i_rate
arg	50:18	50:42	5	i_next_atomic_operation
water	50:18	0:0	6	i_next_atomic_operation
arg	50:44	51:16	5	i_source_channel_offset
water	50:44	0:0	6	i_source_channel_offset
arg	51:18	51:22	5	d_x
water	51:18	0:0	6	d_x
arg	51:24	51:28	5	d_z
water	51:24	0:0	6	d_z
arg	51:30	51:36	5	d_min
water	51:30	0:0	6	d_min
arg	51:38	51:58	5	2.0/i_nb_channels
water	51:38	0:0	6	2
op	51:39	0:0	6	.
water	51:40	0:0	6	0
op	51:42	0:0	6	/
water	51:44	0:0	6	i_nb_channels
water	51:59	0:0	4	;
water	52:8	0:0	4	i_next_atomic_operation
op	52:32	0:0	4	+=
water	52:35	0:0	4	2
water	52:36	0:0	4	;
water	53:8	0:0	4	i_source_channel_offset
op	53:31	0:0	4	++
water	53:33	0:0	4	;
water	54:4	0:0	4	}
if	55:4	62:4	2	(i_physical_channels & AOUT_CHAN_MIDDLELEFT)
cond	55:8	55:30	3	i_physical_channels & AOUT_CHAN_MIDDLELEFT
water	55:8	0:0	4	i_physical_channels
op	55:28	0:0	4	&
water	55:30	0:0	4	AOUT_CHAN_MIDDLELEFT
stmts	56:4	62:4	3	
water	56:4	0:0	4	{
call	57:8	59:57	4	ComputeChannelOperations
arg	57:34	57:41	5	p_data
water	57:34	0:0	6	p_data
arg	57:43	58:16	5	i_rate
water	57:43	0:0	6	i_rate
arg	58:18	58:42	5	i_next_atomic_operation
water	58:18	0:0	6	i_next_atomic_operation
arg	58:44	59:16	5	i_source_channel_offset
water	58:44	0:0	6	i_source_channel_offset
arg	59:18	59:23	5	-d_x
op	59:18	0:0	6	-
water	59:19	0:0	6	d_x
arg	59:25	59:27	5	0
water	59:25	0:0	6	0
arg	59:29	59:35	5	d_min
water	59:29	0:0	6	d_min
arg	59:37	59:57	5	1.5/i_nb_channels
water	59:37	0:0	6	1
op	59:38	0:0	6	.
water	59:39	0:0	6	5
op	59:41	0:0	6	/
water	59:43	0:0	6	i_nb_channels
water	59:58	0:0	4	;
water	60:8	0:0	4	i_next_atomic_operation
op	60:32	0:0	4	+=
water	60:35	0:0	4	2
water	60:36	0:0	4	;
water	61:8	0:0	4	i_source_channel_offset
op	61:31	0:0	4	++
water	61:33	0:0	4	;
water	62:4	0:0	4	}
if	63:4	70:4	2	(i_physical_channels & AOUT_CHAN_MIDDLERIGHT)
cond	63:8	63:30	3	i_physical_channels & AOUT_CHAN_MIDDLERIGHT
water	63:8	0:0	4	i_physical_channels
op	63:28	0:0	4	&
water	63:30	0:0	4	AOUT_CHAN_MIDDLERIGHT
stmts	64:4	70:4	3	
water	64:4	0:0	4	{
call	65:8	67:56	4	ComputeChannelOperations
arg	65:34	65:41	5	p_data
water	65:34	0:0	6	p_data
arg	65:43	66:16	5	i_rate
water	65:43	0:0	6	i_rate
arg	66:18	66:42	5	i_next_atomic_operation
water	66:18	0:0	6	i_next_atomic_operation
arg	66:44	67:16	5	i_source_channel_offset
water	66:44	0:0	6	i_source_channel_offset
arg	67:18	67:22	5	d_x
water	67:18	0:0	6	d_x
arg	67:24	67:26	5	0
water	67:24	0:0	6	0
arg	67:28	67:34	5	d_min
water	67:28	0:0	6	d_min
arg	67:36	67:56	5	1.5/i_nb_channels
water	67:36	0:0	6	1
op	67:37	0:0	6	.
water	67:38	0:0	6	5
op	67:40	0:0	6	/
water	67:42	0:0	6	i_nb_channels
water	67:57	0:0	4	;
water	68:8	0:0	4	i_next_atomic_operation
op	68:32	0:0	4	+=
water	68:35	0:0	4	2
water	68:36	0:0	4	;
water	69:8	0:0	4	i_source_channel_offset
op	69:31	0:0	4	++
water	69:33	0:0	4	;
water	70:4	0:0	4	}
if	71:4	78:4	2	(i_physical_channels & AOUT_CHAN_REARLEFT)
cond	71:8	71:30	3	i_physical_channels & AOUT_CHAN_REARLEFT
water	71:8	0:0	4	i_physical_channels
op	71:28	0:0	4	&
water	71:30	0:0	4	AOUT_CHAN_REARLEFT
stmts	72:4	78:4	3	
water	72:4	0:0	4	{
call	73:8	75:64	4	ComputeChannelOperations
arg	73:34	73:41	5	p_data
water	73:34	0:0	6	p_data
arg	73:43	74:16	5	i_rate
water	73:43	0:0	6	i_rate
arg	74:18	74:42	5	i_next_atomic_operation
water	74:18	0:0	6	i_next_atomic_operation
arg	74:44	75:16	5	i_source_channel_offset
water	74:44	0:0	6	i_source_channel_offset
arg	75:18	75:23	5	-d_x
op	75:18	0:0	6	-
water	75:19	0:0	6	d_x
arg	75:25	75:34	5	d_z_rear
water	75:25	0:0	6	d_z_rear
arg	75:36	75:42	5	d_min
water	75:36	0:0	6	d_min
arg	75:44	75:64	5	1.5/i_nb_channels
water	75:44	0:0	6	1
op	75:45	0:0	6	.
water	75:46	0:0	6	5
op	75:48	0:0	6	/
water	75:50	0:0	6	i_nb_channels
water	75:65	0:0	4	;
water	76:8	0:0	4	i_next_atomic_operation
op	76:32	0:0	4	+=
water	76:35	0:0	4	2
water	76:36	0:0	4	;
water	77:8	0:0	4	i_source_channel_offset
op	77:31	0:0	4	++
water	77:33	0:0	4	;
water	78:4	0:0	4	}
if	79:4	86:4	2	(i_physical_channels & AOUT_CHAN_REARRIGHT)
cond	79:8	79:30	3	i_physical_channels & AOUT_CHAN_REARRIGHT
water	79:8	0:0	4	i_physical_channels
op	79:28	0:0	4	&
water	79:30	0:0	4	AOUT_CHAN_REARRIGHT
stmts	80:4	86:4	3	
water	80:4	0:0	4	{
call	81:8	83:63	4	ComputeChannelOperations
arg	81:34	81:41	5	p_data
water	81:34	0:0	6	p_data
arg	81:43	82:16	5	i_rate
water	81:43	0:0	6	i_rate
arg	82:18	82:42	5	i_next_atomic_operation
water	82:18	0:0	6	i_next_atomic_operation
arg	82:44	83:16	5	i_source_channel_offset
water	82:44	0:0	6	i_source_channel_offset
arg	83:18	83:22	5	d_x
water	83:18	0:0	6	d_x
arg	83:24	83:33	5	d_z_rear
water	83:24	0:0	6	d_z_rear
arg	83:35	83:41	5	d_min
water	83:35	0:0	6	d_min
arg	83:43	83:63	5	1.5/i_nb_channels
water	83:43	0:0	6	1
op	83:44	0:0	6	.
water	83:45	0:0	6	5
op	83:47	0:0	6	/
water	83:49	0:0	6	i_nb_channels
water	83:64	0:0	4	;
water	84:8	0:0	4	i_next_atomic_operation
op	84:32	0:0	4	+=
water	84:35	0:0	4	2
water	84:36	0:0	4	;
water	85:8	0:0	4	i_source_channel_offset
op	85:31	0:0	4	++
water	85:33	0:0	4	;
water	86:4	0:0	4	}
if	87:4	94:4	2	(i_physical_channels & AOUT_CHAN_REARCENTER)
cond	87:8	87:30	3	i_physical_channels & AOUT_CHAN_REARCENTER
water	87:8	0:0	4	i_physical_channels
op	87:28	0:0	4	&
water	87:30	0:0	4	AOUT_CHAN_REARCENTER
stmts	88:4	94:4	3	
water	88:4	0:0	4	{
call	89:8	91:57	4	ComputeChannelOperations
arg	89:34	89:41	5	p_data
water	89:34	0:0	6	p_data
arg	89:43	90:16	5	i_rate
water	89:43	0:0	6	i_rate
arg	90:18	90:42	5	i_next_atomic_operation
water	90:18	0:0	6	i_next_atomic_operation
arg	90:44	91:16	5	i_source_channel_offset
water	90:44	0:0	6	i_source_channel_offset
arg	91:18	91:20	5	0
water	91:18	0:0	6	0
arg	91:22	91:27	5	-d_z
op	91:22	0:0	6	-
water	91:23	0:0	6	d_z
arg	91:29	91:35	5	d_min
water	91:29	0:0	6	d_min
arg	91:37	91:57	5	1.5/i_nb_channels
water	91:37	0:0	6	1
op	91:38	0:0	6	.
water	91:39	0:0	6	5
op	91:41	0:0	6	/
water	91:43	0:0	6	i_nb_channels
water	91:58	0:0	4	;
water	92:8	0:0	4	i_next_atomic_operation
op	92:32	0:0	4	+=
water	92:35	0:0	4	2
water	92:36	0:0	4	;
water	93:8	0:0	4	i_source_channel_offset
op	93:31	0:0	4	++
water	93:33	0:0	4	;
water	94:4	0:0	4	}
if	95:4	107:4	2	(i_physical_channels & AOUT_CHAN_CENTER)
cond	95:8	95:30	3	i_physical_channels & AOUT_CHAN_CENTER
water	95:8	0:0	4	i_physical_channels
op	95:28	0:0	4	&
water	95:30	0:0	4	AOUT_CHAN_CENTER
stmts	96:4	107:4	3	
water	96:4	0:0	4	{
call	98:8	100:65	4	ComputeChannelOperations
arg	98:34	98:41	5	p_data
water	98:34	0:0	6	p_data
arg	98:43	99:16	5	i_rate
water	98:43	0:0	6	i_rate
arg	99:18	99:42	5	i_next_atomic_operation
water	99:18	0:0	6	i_next_atomic_operation
arg	99:44	100:16	5	i_source_channel_offset
water	99:44	0:0	6	i_source_channel_offset
arg	100:18	100:28	5	d_x/5.0
water	100:18	0:0	6	d_x
op	100:22	0:0	6	/
water	100:24	0:0	6	5
op	100:25	0:0	6	.
water	100:26	0:0	6	0
arg	100:30	100:34	5	d_z
water	100:30	0:0	6	d_z
arg	100:36	100:42	5	d_min
water	100:36	0:0	6	d_min
arg	100:44	100:65	5	0.75/i_nb_channels
water	100:44	0:0	6	0
op	100:45	0:0	6	.
water	100:46	0:0	6	75
op	100:49	0:0	6	/
water	100:51	0:0	6	i_nb_channels
water	100:66	0:0	4	;
water	101:8	0:0	4	i_next_atomic_operation
op	101:32	0:0	4	+=
water	101:35	0:0	4	2
water	101:36	0:0	4	;
call	102:8	104:66	4	ComputeChannelOperations
arg	102:34	102:41	5	p_data
water	102:34	0:0	6	p_data
arg	102:43	103:16	5	i_rate
water	102:43	0:0	6	i_rate
arg	103:18	103:42	5	i_next_atomic_operation
water	103:18	0:0	6	i_next_atomic_operation
arg	103:44	104:16	5	i_source_channel_offset
water	103:44	0:0	6	i_source_channel_offset
arg	104:18	104:29	5	-d_x/5.0
op	104:18	0:0	6	-
water	104:19	0:0	6	d_x
op	104:23	0:0	6	/
water	104:25	0:0	6	5
op	104:26	0:0	6	.
water	104:27	0:0	6	0
arg	104:31	104:35	5	d_z
water	104:31	0:0	6	d_z
arg	104:37	104:43	5	d_min
water	104:37	0:0	6	d_min
arg	104:45	104:66	5	0.75/i_nb_channels
water	104:45	0:0	6	0
op	104:46	0:0	6	.
water	104:47	0:0	6	75
op	104:50	0:0	6	/
water	104:52	0:0	6	i_nb_channels
water	104:67	0:0	4	;
water	105:8	0:0	4	i_next_atomic_operation
op	105:32	0:0	4	+=
water	105:35	0:0	4	2
water	105:36	0:0	4	;
water	106:8	0:0	4	i_source_channel_offset
op	106:31	0:0	4	++
water	106:33	0:0	4	;
water	107:4	0:0	4	}
if	108:4	115:4	2	(i_physical_channels & AOUT_CHAN_LFE)
cond	108:8	108:30	3	i_physical_channels & AOUT_CHAN_LFE
water	108:8	0:0	4	i_physical_channels
op	108:28	0:0	4	&
water	108:30	0:0	4	AOUT_CHAN_LFE
stmts	109:4	115:4	3	
water	109:4	0:0	4	{
call	110:8	112:61	4	ComputeChannelOperations
arg	110:34	110:41	5	p_data
water	110:34	0:0	6	p_data
arg	110:43	111:16	5	i_rate
water	110:43	0:0	6	i_rate
arg	111:18	111:42	5	i_next_atomic_operation
water	111:18	0:0	6	i_next_atomic_operation
arg	111:44	112:16	5	i_source_channel_offset
water	111:44	0:0	6	i_source_channel_offset
arg	112:18	112:20	5	0
water	112:18	0:0	6	0
arg	112:22	112:31	5	d_z_rear
water	112:22	0:0	6	d_z_rear
arg	112:33	112:39	5	d_min
water	112:33	0:0	6	d_min
arg	112:41	112:61	5	5.0/i_nb_channels
water	112:41	0:0	6	5
op	112:42	0:0	6	.
water	112:43	0:0	6	0
op	112:45	0:0	6	/
water	112:47	0:0	6	i_nb_channels
water	112:62	0:0	4	;
water	113:8	0:0	4	i_next_atomic_operation
op	113:32	0:0	4	+=
water	113:35	0:0	4	2
water	113:36	0:0	4	;
water	114:8	0:0	4	i_source_channel_offset
op	114:31	0:0	4	++
water	114:33	0:0	4	;
water	115:4	0:0	4	}
water	118:4	0:0	2	p_data
op	118:10	0:0	2	->
water	118:12	0:0	2	i_overflow_buffer_size
op	118:35	0:0	2	=
water	118:37	0:0	2	0
water	118:38	0:0	2	;
for	119:4	127:4	2	(i = 0 ;i < p_data -> i_nb_atomic_operations;i ++)
forinit	119:9	119:15	3	i = 0 ;
water	119:9	0:0	4	i
op	119:11	0:0	4	=
water	119:13	0:0	4	0
water	119:15	0:0	4	;
cond	119:17	119:29	3	i < p_data -> i_nb_atomic_operations
water	119:17	0:0	4	i
op	119:19	0:0	4	<
water	119:21	0:0	4	p_data
op	119:27	0:0	4	->
water	119:29	0:0	4	i_nb_atomic_operations
forexpr	119:54	119:55	3	i ++
water	119:54	0:0	4	i
op	119:55	0:0	4	++
stmts	120:4	127:4	3	
water	120:4	0:0	4	{
if	121:8	126:8	4	(p_data -> i_overflow_buffer_size < p_data -> p_atomic_operations [ i ] . i_delay * 2 * sizeof ( float ))
cond	121:12	122:76	5	p_data -> i_overflow_buffer_size < p_data -> p_atomic_operations [ i ] . i_delay * 2 * sizeof ( float )
water	121:12	0:0	6	p_data
op	121:18	0:0	6	->
water	121:20	0:0	6	i_overflow_buffer_size
op	122:16	0:0	6	<
water	122:18	0:0	6	p_data
op	122:24	0:0	6	->
water	122:26	0:0	6	p_atomic_operations
op	122:45	0:0	6	[
water	122:46	0:0	6	i
op	122:47	0:0	6	]
op	122:48	0:0	6	.
water	122:49	0:0	6	i_delay
op	122:57	0:0	6	*
water	122:59	0:0	6	2
op	122:61	0:0	6	*
op	122:63	0:0	6	sizeof
water	122:70	0:0	6	(
water	122:71	0:0	6	float
water	122:76	0:0	6	)
stmts	123:8	126:8	5	
water	123:8	0:0	6	{
water	124:12	0:0	6	p_data
op	124:18	0:0	6	->
water	124:20	0:0	6	i_overflow_buffer_size
op	125:16	0:0	6	=
water	125:18	0:0	6	p_data
op	125:24	0:0	6	->
water	125:26	0:0	6	p_atomic_operations
op	125:45	0:0	6	[
water	125:46	0:0	6	i
op	125:47	0:0	6	]
op	125:48	0:0	6	.
water	125:49	0:0	6	i_delay
op	125:57	0:0	6	*
water	125:59	0:0	6	2
op	125:61	0:0	6	*
op	125:63	0:0	6	sizeof
water	125:70	0:0	6	(
water	125:71	0:0	6	float
water	125:76	0:0	6	)
water	125:77	0:0	6	;
water	126:8	0:0	6	}
water	127:4	0:0	4	}
water	128:4	0:0	2	p_data
op	128:10	0:0	2	->
water	128:12	0:0	2	p_overflow_buffer
op	128:30	0:0	2	=
water	128:32	0:0	2	(
water	128:33	0:0	2	float
op	128:39	0:0	2	*
water	128:40	0:0	2	)
call	128:41	128:80	2	malloc
arg	128:49	128:80	3	p_data->i_overflow_buffer_size
water	128:49	0:0	4	p_data
op	128:55	0:0	4	->
water	128:57	0:0	4	i_overflow_buffer_size
water	128:81	0:0	2	;
if	129:4	133:4	2	(p_data -> p_overflow_buffer == NULL)
cond	129:8	129:37	3	p_data -> p_overflow_buffer == NULL
water	129:8	0:0	4	p_data
op	129:14	0:0	4	->
water	129:16	0:0	4	p_overflow_buffer
op	129:34	0:0	4	==
water	129:37	0:0	4	NULL
stmts	130:4	133:4	3	
water	130:4	0:0	4	{
call	131:8	131:42	4	free
arg	131:14	131:42	5	p_data->p_atomic_operations
water	131:14	0:0	6	p_data
op	131:20	0:0	6	->
water	131:22	0:0	6	p_atomic_operations
water	131:43	0:0	4	;
return	132:8	132:17	4	-1
op	132:15	0:0	5	-
water	132:16	0:0	5	1
water	133:4	0:0	4	}
call	134:4	134:74	2	memset
arg	134:12	134:37	3	p_data->p_overflow_buffer
water	134:12	0:0	4	p_data
op	134:18	0:0	4	->
water	134:20	0:0	4	p_overflow_buffer
arg	134:39	134:41	3	0
water	134:39	0:0	4	0
arg	134:43	134:74	3	p_data->i_overflow_buffer_size
water	134:43	0:0	4	p_data
op	134:49	0:0	4	->
water	134:51	0:0	4	i_overflow_buffer_size
water	134:75	0:0	2	;
return	135:4	135:12	2	0
water	135:11	0:0	3	0

func	2:0	55:0	0	static int	hls_ReloadPlaylist
params	2:29	0:0	1	
param	2:30	2:41	2	stream_t *	s
stmnts	0:0	54:22	1	
decl	4:4	4:34	2	stream_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	p_sys
decl	6:4	6:32	2	bool	stream_appended
op	6:25	0:0	2	=
water	6:27	0:0	2	false
decl	7:4	7:46	2	vlc_array_t	*hls_streams
op	7:29	0:0	2	=
call	7:31	7:45	3	vlc_array_new
if	8:4	9:25	2	(hls_streams == NULL)
cond	8:8	8:23	3	hls_streams == NULL
water	8:8	0:0	4	hls_streams
op	8:20	0:0	4	==
water	8:23	0:0	4	NULL
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
call	10:4	10:49	2	msg_Dbg
arg	10:12	10:13	3	s
water	10:12	0:0	4	s
arg	10:15	10:49	3	"Reloading HLS live meta playlist"
water	10:15	0:0	4	"Reloading HLS live meta playlist"
water	10:50	0:0	2	;
if	11:4	23:4	2	(get_HTTPLiveMetaPlaylist (s ,& hls_streams ) != VLC_SUCCESS)
cond	11:8	11:53	3	get_HTTPLiveMetaPlaylist (s ,& hls_streams ) != VLC_SUCCESS
call	11:8	11:48	4	get_HTTPLiveMetaPlaylist
arg	11:33	11:34	5	s
water	11:33	0:0	6	s
arg	11:36	11:48	5	&hls_streams
op	11:36	0:0	6	&
water	11:37	0:0	6	hls_streams
op	11:50	0:0	4	!=
water	11:53	0:0	4	VLC_SUCCESS
stmts	12:4	23:4	3	
water	12:4	0:0	4	{
for	14:8	19:8	4	( int i = 0 ;i <vlc_array_count (hls_streams );i ++)
forinit	0:0	14:22	5	 int i = 0 ;
decl	14:13	14:22	6	int	i
op	14:19	0:0	6	=
water	14:21	0:0	6	0
cond	14:24	14:55	5	i <vlc_array_count (hls_streams )
water	14:24	0:0	6	i
op	14:26	0:0	6	<
call	14:28	14:55	6	vlc_array_count
arg	14:44	14:55	7	hls_streams
water	14:44	0:0	8	hls_streams
forexpr	14:58	14:59	5	i ++
water	14:58	0:0	6	i
op	14:59	0:0	6	++
stmts	15:8	19:8	5	
water	15:8	0:0	6	{
decl	16:12	16:29	6	hls_stream_t	*hls
water	17:12	0:0	6	hls
op	17:16	0:0	6	=
call	17:18	17:40	6	hls_Get
arg	17:26	17:37	7	hls_streams
water	17:26	0:0	8	hls_streams
arg	17:39	17:40	7	i
water	17:39	0:0	8	i
water	17:41	0:0	6	;
if	18:12	18:34	6	(hls)
cond	18:16	18:16	7	hls
water	18:16	0:0	8	hls
stmts	18:21	18:34	7	
call	18:21	18:33	8	hls_Free
arg	18:30	18:33	9	hls
water	18:30	0:0	10	hls
water	18:34	0:0	8	;
water	19:8	0:0	6	}
call	20:8	20:37	4	vlc_array_destroy
arg	20:26	20:37	5	hls_streams
water	20:26	0:0	6	hls_streams
water	20:38	0:0	4	;
call	21:8	21:46	4	msg_Err
arg	21:16	21:17	5	s
water	21:16	0:0	6	s
arg	21:19	21:46	5	"reloading playlist failed"
water	21:19	0:0	6	"reloading playlist failed"
water	21:47	0:0	4	;
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
water	23:4	0:0	4	}
decl	25:4	25:44	2	int	count
op	25:14	0:0	2	=
call	25:16	25:43	3	vlc_array_count
arg	25:32	25:43	4	hls_streams
water	25:32	0:0	5	hls_streams
for	26:4	45:4	2	( int n = 0 ;n < count;n ++)
forinit	0:0	26:18	3	 int n = 0 ;
decl	26:9	26:18	4	int	n
op	26:15	0:0	4	=
water	26:17	0:0	4	0
cond	26:20	26:24	3	n < count
water	26:20	0:0	4	n
op	26:22	0:0	4	<
water	26:24	0:0	4	count
forexpr	26:31	26:32	3	n ++
water	26:31	0:0	4	n
op	26:32	0:0	4	++
stmts	27:4	45:4	3	
water	27:4	0:0	4	{
decl	28:8	28:55	4	hls_stream_t	*hls_new
op	28:30	0:0	4	=
call	28:32	28:54	5	hls_Get
arg	28:40	28:51	6	hls_streams
water	28:40	0:0	7	hls_streams
arg	28:53	28:54	6	n
water	28:53	0:0	7	n
if	29:8	30:20	4	(hls_new == NULL)
cond	29:12	29:23	5	hls_new == NULL
water	29:12	0:0	6	hls_new
op	29:20	0:0	6	==
water	29:23	0:0	6	NULL
stmts	30:12	30:20	5	
continue	30:12	30:20	6	
decl	31:8	31:68	4	hls_stream_t	*hls_old
op	31:30	0:0	4	=
call	31:32	31:67	5	hls_Find
arg	31:41	31:58	6	p_sys->hls_stream
water	31:41	0:0	7	p_sys
op	31:46	0:0	7	->
water	31:48	0:0	7	hls_stream
arg	31:60	31:67	6	hls_new
water	31:60	0:0	7	hls_new
if	32:8	40:8	4	(hls_old == NULL)
cond	32:12	32:23	5	hls_old == NULL
water	32:12	0:0	6	hls_old
op	32:20	0:0	6	==
water	32:23	0:0	6	NULL
stmts	33:8	40:8	5	
water	33:8	0:0	6	{
call	34:12	34:55	6	vlc_array_append
arg	34:29	34:46	7	p_sys->hls_stream
water	34:29	0:0	8	p_sys
op	34:34	0:0	8	->
water	34:36	0:0	8	hls_stream
arg	34:48	34:55	7	hls_new
water	34:48	0:0	8	hls_new
water	34:56	0:0	6	;
call	35:12	36:52	6	msg_Dbg
arg	35:20	35:21	7	s
water	35:20	0:0	8	s
arg	35:23	35:77	7	"new HLS stream appended (id=%d, bandwidth=%"PRIu64")"
water	35:23	0:0	8	"new HLS stream appended (id=%d, bandwidth=%"
water	35:68	0:0	8	PRIu64
water	35:74	0:0	8	")"
arg	36:21	36:32	7	hls_new->id
water	36:21	0:0	8	hls_new
op	36:28	0:0	8	->
water	36:30	0:0	8	id
arg	36:34	36:52	7	hls_new->bandwidth
water	36:34	0:0	8	hls_new
op	36:41	0:0	8	->
water	36:43	0:0	8	bandwidth
water	36:53	0:0	6	;
water	38:12	0:0	6	stream_appended
op	38:28	0:0	6	=
water	38:30	0:0	6	true
water	38:34	0:0	6	;
continue	39:12	39:20	6	
water	40:8	0:0	6	}
else	41:8	43:53	4
stmts	41:13	43:53	5	
if	41:13	43:53	6	(hls_UpdatePlaylist (s ,hls_new ,hls_old ,& stream_appended ) != VLC_SUCCESS)
cond	41:17	41:78	7	hls_UpdatePlaylist (s ,hls_new ,hls_old ,& stream_appended ) != VLC_SUCCESS
call	41:17	41:73	8	hls_UpdatePlaylist
arg	41:36	41:37	9	s
water	41:36	0:0	10	s
arg	41:39	41:46	9	hls_new
water	41:39	0:0	10	hls_new
arg	41:48	41:55	9	hls_old
water	41:48	0:0	10	hls_old
arg	41:57	41:73	9	&stream_appended
op	41:57	0:0	10	&
water	41:58	0:0	10	stream_appended
op	41:75	0:0	8	!=
water	41:78	0:0	8	VLC_SUCCESS
stmts	42:12	43:53	7	
call	42:12	43:52	8	msg_Warn
arg	42:21	42:22	9	s
water	42:21	0:0	10	s
arg	42:24	42:81	9	"failed updating HLS stream (id=%d, bandwidth=%"PRIu64")"
water	42:24	0:0	10	"failed updating HLS stream (id=%d, bandwidth=%"
water	42:72	0:0	10	PRIu64
water	42:78	0:0	10	")"
arg	43:21	43:32	9	hls_new->id
water	43:21	0:0	10	hls_new
op	43:28	0:0	10	->
water	43:30	0:0	10	id
arg	43:34	43:52	9	hls_new->bandwidth
water	43:34	0:0	10	hls_new
op	43:41	0:0	10	->
water	43:43	0:0	10	bandwidth
water	43:53	0:0	8	;
call	44:8	44:24	4	hls_Free
arg	44:17	44:24	5	hls_new
water	44:17	0:0	6	hls_new
water	44:25	0:0	4	;
water	45:4	0:0	4	}
call	46:4	46:33	2	vlc_array_destroy
arg	46:22	46:33	3	hls_streams
water	46:22	0:0	4	hls_streams
water	46:34	0:0	2	;
if	48:4	53:4	2	(stream_appended == true)
cond	48:8	48:27	3	stream_appended == true
water	48:8	0:0	4	stream_appended
op	48:24	0:0	4	==
water	48:27	0:0	4	true
stmts	49:4	53:4	3	
water	49:4	0:0	4	{
call	50:8	50:49	4	vlc_mutex_lock
arg	50:23	50:49	5	&p_sys->download.lock_wait
op	50:23	0:0	6	&
water	50:24	0:0	6	p_sys
op	50:29	0:0	6	->
water	50:31	0:0	6	download
op	50:39	0:0	6	.
water	50:40	0:0	6	lock_wait
water	50:50	0:0	4	;
call	51:8	51:45	4	vlc_cond_signal
arg	51:24	51:45	5	&p_sys->download.wait
op	51:24	0:0	6	&
water	51:25	0:0	6	p_sys
op	51:30	0:0	6	->
water	51:32	0:0	6	download
op	51:40	0:0	6	.
water	51:41	0:0	6	wait
water	51:46	0:0	4	;
call	52:8	52:51	4	vlc_mutex_unlock
arg	52:25	52:51	5	&p_sys->download.lock_wait
op	52:25	0:0	6	&
water	52:26	0:0	6	p_sys
op	52:31	0:0	6	->
water	52:33	0:0	6	download
op	52:41	0:0	6	.
water	52:42	0:0	6	lock_wait
water	52:52	0:0	4	;
water	53:4	0:0	4	}
return	54:4	54:22	2	VLC_SUCCESS
water	54:11	0:0	3	VLC_SUCCESS

decl	1:7	1:61	0	void	dvbsub_pdata8bpp
water	1:28	0:0	0	(
water	1:30	0:0	0	bs_t
op	1:35	0:0	0	*
water	1:36	0:0	0	,
water	1:38	0:0	0	uint8_t
op	1:46	0:0	0	*
water	1:47	0:0	0	,
water	1:49	0:0	0	int
water	1:52	0:0	0	,
water	1:54	0:0	0	int
op	1:58	0:0	0	*
water	1:60	0:0	0	)
func	2:0	119:0	0	static void	decode_object
params	2:25	0:0	1	
param	2:27	2:43	2	decoder_t *	p_dec
param	2:45	2:53	2	bs_t *	s
stmnts	0:0	117:44	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:29	2	dvbsub_region_t	*p_region
decl	6:4	6:61	2	int	i_segment_length
water	6:24	0:0	2	,
decl	6:4	6:61	2	int	i_coding_method
water	6:41	0:0	2	,
decl	6:4	6:61	2	int	i_version
water	6:52	0:0	2	,
decl	6:4	6:61	2	int	i_id
water	6:58	0:0	2	,
decl	6:4	6:61	2	int	i
decl	7:4	7:27	2	bool	b_non_modify_color
water	11:4	0:0	2	i_segment_length
op	11:21	0:0	2	=
call	11:23	11:38	2	bs_read
arg	11:32	11:33	3	s
water	11:32	0:0	4	s
arg	11:35	11:38	3	16
water	11:35	0:0	4	16
water	11:39	0:0	2	;
water	12:4	0:0	2	i_id
op	12:21	0:0	2	=
call	12:23	12:38	2	bs_read
arg	12:32	12:33	3	s
water	12:32	0:0	4	s
arg	12:35	12:38	3	16
water	12:35	0:0	4	16
water	12:39	0:0	2	;
water	13:4	0:0	2	i_version
op	13:21	0:0	2	=
call	13:23	13:37	2	bs_read
arg	13:32	13:33	3	s
water	13:32	0:0	4	s
arg	13:35	13:37	3	4
water	13:35	0:0	4	4
water	13:38	0:0	2	;
water	14:4	0:0	2	i_coding_method
op	14:21	0:0	2	=
call	14:23	14:37	2	bs_read
arg	14:32	14:33	3	s
water	14:32	0:0	4	s
arg	14:35	14:37	3	2
water	14:35	0:0	4	2
water	14:38	0:0	2	;
if	15:4	20:4	2	(i_coding_method > 1)
cond	15:8	15:26	3	i_coding_method > 1
water	15:8	0:0	4	i_coding_method
op	15:24	0:0	4	>
water	15:26	0:0	4	1
stmts	16:4	20:4	3	
water	16:4	0:0	4	{
call	17:8	17:92	4	msg_Dbg
arg	17:17	17:22	5	p_dec
water	17:17	0:0	6	p_dec
arg	17:24	17:74	5	"unknown DVB subtitling coding %d is not handled!"
water	17:24	0:0	6	"unknown DVB subtitling coding %d is not handled!"
arg	17:76	17:92	5	i_coding_method
water	17:76	0:0	6	i_coding_method
water	17:93	0:0	4	;
call	18:8	18:51	4	bs_skip
arg	18:17	18:18	5	s
water	18:17	0:0	6	s
arg	18:20	18:51	5	8*(i_segment_length-2)-6
water	18:20	0:0	6	8
op	18:22	0:0	6	*
water	18:24	0:0	6	(
water	18:25	0:0	6	i_segment_length
op	18:42	0:0	6	-
water	18:44	0:0	6	2
water	18:45	0:0	6	)
op	18:47	0:0	6	-
water	18:49	0:0	6	6
water	18:52	0:0	4	;
return	19:8	19:14	4	
water	20:4	0:0	4	}
for	23:4	29:4	2	(p_region = p_sys -> p_regions ;p_region != NULL;p_region = p_region -> p_next)
forinit	23:9	23:36	3	p_region = p_sys -> p_regions ;
water	23:9	0:0	4	p_region
op	23:18	0:0	4	=
water	23:20	0:0	4	p_sys
op	23:25	0:0	4	->
water	23:27	0:0	4	p_regions
water	23:36	0:0	4	;
cond	23:38	23:50	3	p_region != NULL
water	23:38	0:0	4	p_region
op	23:47	0:0	4	!=
water	23:50	0:0	4	NULL
forexpr	24:9	24:30	3	p_region = p_region -> p_next
water	24:9	0:0	4	p_region
op	24:18	0:0	4	=
water	24:20	0:0	4	p_region
op	24:28	0:0	4	->
water	24:30	0:0	4	p_next
stmts	25:4	29:4	3	
water	25:4	0:0	4	{
for	26:8	27:63	4	(i = 0 ;i < p_region -> i_object_defs;i ++)
forinit	26:13	26:18	5	i = 0 ;
water	26:13	0:0	6	i
op	26:15	0:0	6	=
water	26:17	0:0	6	0
water	26:18	0:0	6	;
cond	26:20	26:34	5	i < p_region -> i_object_defs
water	26:20	0:0	6	i
op	26:22	0:0	6	<
water	26:24	0:0	6	p_region
op	26:32	0:0	6	->
water	26:34	0:0	6	i_object_defs
forexpr	26:49	26:50	5	i ++
water	26:49	0:0	6	i
op	26:50	0:0	6	++
stmts	27:12	27:63	5	
if	27:12	27:63	6	(p_region -> p_object_defs [ i ] . i_id == i_id)
cond	27:16	27:51	7	p_region -> p_object_defs [ i ] . i_id == i_id
water	27:16	0:0	8	p_region
op	27:24	0:0	8	->
water	27:26	0:0	8	p_object_defs
op	27:39	0:0	8	[
water	27:40	0:0	8	i
op	27:41	0:0	8	]
op	27:42	0:0	8	.
water	27:43	0:0	8	i_id
op	27:48	0:0	8	==
water	27:51	0:0	8	i_id
stmts	27:58	27:63	7	
break	27:58	27:63	8	
if	28:8	28:48	4	(i != p_region -> i_object_defs)
cond	28:12	28:27	5	i != p_region -> i_object_defs
water	28:12	0:0	6	i
op	28:14	0:0	6	!=
water	28:17	0:0	6	p_region
op	28:25	0:0	6	->
water	28:27	0:0	6	i_object_defs
stmts	28:43	28:48	5	
break	28:43	28:48	6	
water	29:4	0:0	4	}
if	30:4	34:4	2	(! p_region)
cond	30:8	30:9	3	! p_region
op	30:8	0:0	4	!
water	30:9	0:0	4	p_region
stmts	31:4	34:4	3	
water	31:4	0:0	4	{
call	32:8	32:51	4	bs_skip
arg	32:17	32:18	5	s
water	32:17	0:0	6	s
arg	32:20	32:51	5	8*(i_segment_length-2)-6
water	32:20	0:0	6	8
op	32:22	0:0	6	*
water	32:24	0:0	6	(
water	32:25	0:0	6	i_segment_length
op	32:42	0:0	6	-
water	32:44	0:0	6	2
water	32:45	0:0	6	)
op	32:47	0:0	6	-
water	32:49	0:0	6	6
water	32:52	0:0	4	;
return	33:8	33:14	4	
water	34:4	0:0	4	}
call	36:4	36:43	2	msg_Dbg
arg	36:13	36:18	3	p_dec
water	36:13	0:0	4	p_dec
arg	36:20	36:36	3	"new object: %i"
water	36:20	0:0	4	"new object: %i"
arg	36:38	36:43	3	i_id
water	36:38	0:0	4	i_id
water	36:44	0:0	2	;
water	38:4	0:0	2	b_non_modify_color
op	38:23	0:0	2	=
call	38:25	38:39	2	bs_read
arg	38:34	38:35	3	s
water	38:34	0:0	4	s
arg	38:37	38:39	3	1
water	38:37	0:0	4	1
water	38:40	0:0	2	;
call	39:4	39:18	2	bs_skip
arg	39:13	39:14	3	s
water	39:13	0:0	4	s
arg	39:16	39:18	3	1
water	39:16	0:0	4	1
water	39:19	0:0	2	;
if	40:4	83:4	2	(i_coding_method == 0 x00)
cond	40:8	40:28	3	i_coding_method == 0 x00
water	40:8	0:0	4	i_coding_method
op	40:24	0:0	4	==
water	40:27	0:0	4	0
water	40:28	0:0	4	x00
stmts	41:4	83:4	3	
water	41:4	0:0	4	{
decl	42:8	42:37	4	int	i_topfield
water	42:22	0:0	4	,
decl	42:8	42:37	4	int	i_bottomfield
decl	43:8	43:43	4	uint8_t	*p_topfield
water	43:27	0:0	4	,
decl	43:8	43:43	4	uint8_t	*p_bottomfield
water	44:8	0:0	4	i_topfield
op	44:22	0:0	4	=
call	44:24	44:39	4	bs_read
arg	44:33	44:34	5	s
water	44:33	0:0	6	s
arg	44:36	44:39	5	16
water	44:36	0:0	6	16
water	44:40	0:0	4	;
water	45:8	0:0	4	i_bottomfield
op	45:22	0:0	4	=
call	45:24	45:39	4	bs_read
arg	45:33	45:34	5	s
water	45:33	0:0	6	s
arg	45:36	45:39	5	16
water	45:36	0:0	6	16
water	45:40	0:0	4	;
water	46:8	0:0	4	p_topfield
op	46:22	0:0	4	=
water	46:24	0:0	4	s
op	46:25	0:0	4	->
water	46:27	0:0	4	p_start
op	46:35	0:0	4	+
call	46:37	46:47	4	bs_pos
arg	46:45	46:47	5	s
water	46:45	0:0	6	s
op	46:49	0:0	4	/
water	46:51	0:0	4	8
water	46:52	0:0	4	;
water	47:8	0:0	4	p_bottomfield
op	47:22	0:0	4	=
water	47:24	0:0	4	p_topfield
op	47:35	0:0	4	+
water	47:37	0:0	4	i_topfield
water	47:47	0:0	4	;
call	48:8	48:47	4	bs_skip
arg	48:17	48:18	5	s
water	48:17	0:0	6	s
arg	48:20	48:47	5	8*(i_segment_length-7)
water	48:20	0:0	6	8
op	48:22	0:0	6	*
water	48:24	0:0	6	(
water	48:25	0:0	6	i_segment_length
op	48:42	0:0	6	-
water	48:44	0:0	6	7
water	48:45	0:0	6	)
water	48:48	0:0	4	;
if	50:8	55:8	4	(( i_segment_length < ( i_topfield + i_bottomfield + 7 ) ) || ( ( p_topfield + i_topfield + i_bottomfield ) > s -> p_end ))
cond	50:12	51:69	5	( i_segment_length < ( i_topfield + i_bottomfield + 7 ) ) || ( ( p_topfield + i_topfield + i_bottomfield ) > s -> p_end )
water	50:12	0:0	6	(
water	50:14	0:0	6	i_segment_length
op	50:31	0:0	6	<
water	50:33	0:0	6	(
water	50:35	0:0	6	i_topfield
op	50:46	0:0	6	+
water	50:48	0:0	6	i_bottomfield
op	50:62	0:0	6	+
water	50:64	0:0	6	7
water	50:66	0:0	6	)
water	50:68	0:0	6	)
op	50:70	0:0	6	||
water	51:12	0:0	6	(
water	51:14	0:0	6	(
water	51:16	0:0	6	p_topfield
op	51:27	0:0	6	+
water	51:29	0:0	6	i_topfield
op	51:40	0:0	6	+
water	51:42	0:0	6	i_bottomfield
water	51:56	0:0	6	)
op	51:58	0:0	6	>
water	51:60	0:0	6	s
op	51:61	0:0	6	->
water	51:63	0:0	6	p_end
water	51:69	0:0	6	)
stmts	52:8	55:8	5	
water	52:8	0:0	6	{
call	53:12	53:52	6	msg_Dbg
arg	53:21	53:26	7	p_dec
water	53:21	0:0	8	p_dec
arg	53:28	53:52	7	"corrupted object data"
water	53:28	0:0	8	"corrupted object data"
water	53:53	0:0	6	;
return	54:12	54:18	6	
water	55:8	0:0	6	}
for	56:8	82:8	4	(p_region = p_sys -> p_regions ;p_region != NULL;p_region = p_region -> p_next)
forinit	56:13	56:40	5	p_region = p_sys -> p_regions ;
water	56:13	0:0	6	p_region
op	56:22	0:0	6	=
water	56:24	0:0	6	p_sys
op	56:29	0:0	6	->
water	56:31	0:0	6	p_regions
water	56:40	0:0	6	;
cond	56:42	56:54	5	p_region != NULL
water	56:42	0:0	6	p_region
op	56:51	0:0	6	!=
water	56:54	0:0	6	NULL
forexpr	57:13	57:34	5	p_region = p_region -> p_next
water	57:13	0:0	6	p_region
op	57:22	0:0	6	=
water	57:24	0:0	6	p_region
op	57:32	0:0	6	->
water	57:34	0:0	6	p_next
stmts	58:8	82:8	5	
water	58:8	0:0	6	{
for	59:12	81:12	6	(i = 0 ;i < p_region -> i_object_defs;i ++)
forinit	59:17	59:22	7	i = 0 ;
water	59:17	0:0	8	i
op	59:19	0:0	8	=
water	59:21	0:0	8	0
water	59:22	0:0	8	;
cond	59:24	59:38	7	i < p_region -> i_object_defs
water	59:24	0:0	8	i
op	59:26	0:0	8	<
water	59:28	0:0	8	p_region
op	59:36	0:0	8	->
water	59:38	0:0	8	i_object_defs
forexpr	59:53	59:54	7	i ++
water	59:53	0:0	8	i
op	59:54	0:0	8	++
stmts	60:12	81:12	7	
water	60:12	0:0	8	{
if	61:16	61:70	8	(p_region -> p_object_defs [ i ] . i_id != i_id)
cond	61:20	61:55	9	p_region -> p_object_defs [ i ] . i_id != i_id
water	61:20	0:0	10	p_region
op	61:28	0:0	10	->
water	61:30	0:0	10	p_object_defs
op	61:43	0:0	10	[
water	61:44	0:0	10	i
op	61:45	0:0	10	]
op	61:46	0:0	10	.
water	61:47	0:0	10	i_id
op	61:52	0:0	10	!=
water	61:55	0:0	10	i_id
stmts	61:62	61:70	9	
continue	61:62	61:70	10	
call	62:16	65:60	8	dvbsub_render_pdata
arg	62:37	62:42	9	p_dec
water	62:37	0:0	10	p_dec
arg	62:44	62:52	9	p_region
water	62:44	0:0	10	p_region
arg	63:37	63:67	9	p_region->p_object_defs[i].i_x
water	63:37	0:0	10	p_region
op	63:45	0:0	10	->
water	63:47	0:0	10	p_object_defs
op	63:60	0:0	10	[
water	63:61	0:0	10	i
op	63:62	0:0	10	]
op	63:63	0:0	10	.
water	63:64	0:0	10	i_x
arg	64:37	64:67	9	p_region->p_object_defs[i].i_y
water	64:37	0:0	10	p_region
op	64:45	0:0	10	->
water	64:47	0:0	10	p_object_defs
op	64:60	0:0	10	[
water	64:61	0:0	10	i
op	64:62	0:0	10	]
op	64:63	0:0	10	.
water	64:64	0:0	10	i_y
arg	65:37	65:47	9	p_topfield
water	65:37	0:0	10	p_topfield
arg	65:49	65:60	9	i_topfield
water	65:49	0:0	10	i_topfield
water	65:61	0:0	8	;
if	66:16	72:16	8	(i_bottomfield)
cond	66:20	66:20	9	i_bottomfield
water	66:20	0:0	10	i_bottomfield
stmts	67:16	72:16	9	
water	67:16	0:0	10	{
call	68:20	71:70	10	dvbsub_render_pdata
arg	68:41	68:46	11	p_dec
water	68:41	0:0	12	p_dec
arg	68:48	68:56	11	p_region
water	68:48	0:0	12	p_region
arg	69:41	69:71	11	p_region->p_object_defs[i].i_x
water	69:41	0:0	12	p_region
op	69:49	0:0	12	->
water	69:51	0:0	12	p_object_defs
op	69:64	0:0	12	[
water	69:65	0:0	12	i
op	69:66	0:0	12	]
op	69:67	0:0	12	.
water	69:68	0:0	12	i_x
arg	70:41	70:75	11	p_region->p_object_defs[i].i_y+1
water	70:41	0:0	12	p_region
op	70:49	0:0	12	->
water	70:51	0:0	12	p_object_defs
op	70:64	0:0	12	[
water	70:65	0:0	12	i
op	70:66	0:0	12	]
op	70:67	0:0	12	.
water	70:68	0:0	12	i_y
op	70:72	0:0	12	+
water	70:74	0:0	12	1
arg	71:41	71:54	11	p_bottomfield
water	71:41	0:0	12	p_bottomfield
arg	71:56	71:70	11	i_bottomfield
water	71:56	0:0	12	i_bottomfield
water	71:71	0:0	10	;
water	72:16	0:0	10	}
else	73:16	80:16	8
stmts	74:16	80:16	9	
water	74:16	0:0	10	{
call	76:20	79:64	10	dvbsub_render_pdata
arg	76:41	76:46	11	p_dec
water	76:41	0:0	12	p_dec
arg	76:48	76:56	11	p_region
water	76:48	0:0	12	p_region
arg	77:41	77:71	11	p_region->p_object_defs[i].i_x
water	77:41	0:0	12	p_region
op	77:49	0:0	12	->
water	77:51	0:0	12	p_object_defs
op	77:64	0:0	12	[
water	77:65	0:0	12	i
op	77:66	0:0	12	]
op	77:67	0:0	12	.
water	77:68	0:0	12	i_x
arg	78:41	78:75	11	p_region->p_object_defs[i].i_y+1
water	78:41	0:0	12	p_region
op	78:49	0:0	12	->
water	78:51	0:0	12	p_object_defs
op	78:64	0:0	12	[
water	78:65	0:0	12	i
op	78:66	0:0	12	]
op	78:67	0:0	12	.
water	78:68	0:0	12	i_y
op	78:72	0:0	12	+
water	78:74	0:0	12	1
arg	79:41	79:51	11	p_topfield
water	79:41	0:0	12	p_topfield
arg	79:53	79:64	11	i_topfield
water	79:53	0:0	12	i_topfield
water	79:65	0:0	10	;
water	80:16	0:0	10	}
water	81:12	0:0	8	}
water	82:8	0:0	6	}
water	83:4	0:0	4	}
else	84:4	115:4	2
stmts	85:4	115:4	3	
water	85:4	0:0	4	{
decl	87:8	87:47	4	int	i_number_of_codes
op	87:30	0:0	4	=
call	87:32	87:46	5	bs_read
arg	87:41	87:42	6	s
water	87:41	0:0	7	s
arg	87:44	87:46	6	8
water	87:44	0:0	7	8
decl	88:8	88:55	4	uint8_t	*p_start
op	88:25	0:0	4	=
water	88:27	0:0	4	s
op	88:28	0:0	4	->
water	88:30	0:0	4	p_start
op	88:38	0:0	4	+
call	88:40	88:50	5	bs_pos
arg	88:48	88:50	6	s
water	88:48	0:0	7	s
op	88:52	0:0	4	/
water	88:54	0:0	4	8
if	90:8	95:8	4	(( i_segment_length < ( i_number_of_codes * 2 + 4 ) ) || ( ( p_start + i_number_of_codes * 2 ) > s -> p_end ))
cond	90:12	91:59	5	( i_segment_length < ( i_number_of_codes * 2 + 4 ) ) || ( ( p_start + i_number_of_codes * 2 ) > s -> p_end )
water	90:12	0:0	6	(
water	90:14	0:0	6	i_segment_length
op	90:31	0:0	6	<
water	90:33	0:0	6	(
water	90:35	0:0	6	i_number_of_codes
op	90:52	0:0	6	*
water	90:53	0:0	6	2
op	90:55	0:0	6	+
water	90:57	0:0	6	4
water	90:59	0:0	6	)
water	90:61	0:0	6	)
op	90:63	0:0	6	||
water	91:12	0:0	6	(
water	91:14	0:0	6	(
water	91:16	0:0	6	p_start
op	91:24	0:0	6	+
water	91:26	0:0	6	i_number_of_codes
op	91:43	0:0	6	*
water	91:44	0:0	6	2
water	91:46	0:0	6	)
op	91:48	0:0	6	>
water	91:50	0:0	6	s
op	91:51	0:0	6	->
water	91:53	0:0	6	p_end
water	91:59	0:0	6	)
stmts	92:8	95:8	5	
water	92:8	0:0	6	{
call	93:12	93:52	6	msg_Dbg
arg	93:21	93:26	7	p_dec
water	93:21	0:0	8	p_dec
arg	93:28	93:52	7	"corrupted object data"
water	93:28	0:0	8	"corrupted object data"
water	93:53	0:0	6	;
return	94:12	94:18	6	
water	95:8	0:0	6	}
for	96:8	114:8	4	(p_region = p_sys -> p_regions ;p_region != NULL;p_region = p_region -> p_next)
forinit	96:13	96:40	5	p_region = p_sys -> p_regions ;
water	96:13	0:0	6	p_region
op	96:22	0:0	6	=
water	96:24	0:0	6	p_sys
op	96:29	0:0	6	->
water	96:31	0:0	6	p_regions
water	96:40	0:0	6	;
cond	96:42	96:54	5	p_region != NULL
water	96:42	0:0	6	p_region
op	96:51	0:0	6	!=
water	96:54	0:0	6	NULL
forexpr	97:13	97:34	5	p_region = p_region -> p_next
water	97:13	0:0	6	p_region
op	97:22	0:0	6	=
water	97:24	0:0	6	p_region
op	97:32	0:0	6	->
water	97:34	0:0	6	p_next
stmts	98:8	114:8	5	
water	98:8	0:0	6	{
for	99:12	113:12	6	(i = 0 ;i < p_region -> i_object_defs;i ++)
forinit	99:17	99:22	7	i = 0 ;
water	99:17	0:0	8	i
op	99:19	0:0	8	=
water	99:21	0:0	8	0
water	99:22	0:0	8	;
cond	99:24	99:38	7	i < p_region -> i_object_defs
water	99:24	0:0	8	i
op	99:26	0:0	8	<
water	99:28	0:0	8	p_region
op	99:36	0:0	8	->
water	99:38	0:0	8	i_object_defs
forexpr	99:53	99:54	7	i ++
water	99:53	0:0	8	i
op	99:54	0:0	8	++
stmts	100:12	113:12	7	
water	100:12	0:0	8	{
decl	101:16	101:21	8	int	j
if	102:16	102:70	8	(p_region -> p_object_defs [ i ] . i_id != i_id)
cond	102:20	102:55	9	p_region -> p_object_defs [ i ] . i_id != i_id
water	102:20	0:0	10	p_region
op	102:28	0:0	10	->
water	102:30	0:0	10	p_object_defs
op	102:43	0:0	10	[
water	102:44	0:0	10	i
op	102:45	0:0	10	]
op	102:46	0:0	10	.
water	102:47	0:0	10	i_id
op	102:52	0:0	10	!=
water	102:55	0:0	10	i_id
stmts	102:62	102:70	9	
continue	102:62	102:70	10	
water	103:16	0:0	8	p_region
op	103:24	0:0	8	->
water	103:26	0:0	8	p_object_defs
op	103:39	0:0	8	[
water	103:40	0:0	8	i
op	103:41	0:0	8	]
op	103:42	0:0	8	.
water	103:43	0:0	8	psz_text
op	103:52	0:0	8	=
call	104:20	105:51	8	xrealloc
arg	104:30	104:65	9	p_region->p_object_defs[i].psz_text
water	104:30	0:0	10	p_region
op	104:38	0:0	10	->
water	104:40	0:0	10	p_object_defs
op	104:53	0:0	10	[
water	104:54	0:0	10	i
op	104:55	0:0	10	]
op	104:56	0:0	10	.
water	104:57	0:0	10	psz_text
arg	105:29	105:51	9	i_number_of_codes+1
water	105:29	0:0	10	i_number_of_codes
op	105:47	0:0	10	+
water	105:49	0:0	10	1
water	105:52	0:0	8	;
for	107:16	110:16	8	(j = 0 ;j < i_number_of_codes;j ++)
forinit	107:21	107:26	9	j = 0 ;
water	107:21	0:0	10	j
op	107:23	0:0	10	=
water	107:25	0:0	10	0
water	107:26	0:0	10	;
cond	107:28	107:32	9	j < i_number_of_codes
water	107:28	0:0	10	j
op	107:30	0:0	10	<
water	107:32	0:0	10	i_number_of_codes
forexpr	107:51	107:52	9	j ++
water	107:51	0:0	10	j
op	107:52	0:0	10	++
stmts	108:16	110:16	9	
water	108:16	0:0	10	{
water	109:20	0:0	10	p_region
op	109:28	0:0	10	->
water	109:30	0:0	10	p_object_defs
op	109:43	0:0	10	[
water	109:44	0:0	10	i
op	109:45	0:0	10	]
op	109:46	0:0	10	.
water	109:47	0:0	10	psz_text
op	109:55	0:0	10	[
water	109:56	0:0	10	j
op	109:57	0:0	10	]
op	109:59	0:0	10	=
call	109:61	109:91	10	(char)
arg	109:68	109:91	11	bs_read(s,16)&0xFF
call	109:68	109:83	12	bs_read
arg	109:77	109:78	13	s
water	109:77	0:0	14	s
arg	109:80	109:83	13	16
water	109:80	0:0	14	16
op	109:85	0:0	12	&
water	109:87	0:0	12	0
water	109:88	0:0	12	xFF
water	109:92	0:0	10	;
water	110:16	0:0	10	}
water	112:16	0:0	8	p_region
op	112:24	0:0	8	->
water	112:26	0:0	8	p_object_defs
op	112:39	0:0	8	[
water	112:40	0:0	8	i
op	112:41	0:0	8	]
op	112:42	0:0	8	.
water	112:43	0:0	8	psz_text
op	112:51	0:0	8	[
water	112:52	0:0	8	j
op	112:53	0:0	8	]
op	112:55	0:0	8	=
water	112:57	0:0	8	0
water	112:58	0:0	8	;
water	113:12	0:0	8	}
water	114:8	0:0	6	}
water	115:4	0:0	4	}
call	117:4	117:43	2	msg_Dbg
arg	117:13	117:18	3	p_dec
water	117:13	0:0	4	p_dec
arg	117:20	117:36	3	"end object: %i"
water	117:20	0:0	4	"end object: %i"
arg	117:38	117:43	3	i_id
water	117:38	0:0	4	i_id
water	117:44	0:0	2	;

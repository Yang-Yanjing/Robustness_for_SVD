func	2:0	85:0	0	static void	LoadSubtitles
params	2:25	0:0	1	
param	2:27	2:51	2	input_thread_t *	p_input
stmnts	0:0	84:49	1	
decl	6:4	6:42	2	const double	f_fps
op	6:23	0:0	2	=
water	6:25	0:0	2	p_input
op	6:32	0:0	2	->
water	6:34	0:0	2	p
op	6:35	0:0	2	->
water	6:37	0:0	2	f_fps
if	7:4	19:4	2	(f_fps > 1 . 0)
cond	7:8	7:18	3	f_fps > 1 . 0
water	7:8	0:0	4	f_fps
op	7:14	0:0	4	>
water	7:16	0:0	4	1
op	7:17	0:0	4	.
water	7:18	0:0	4	0
stmts	8:4	19:4	3	
water	8:4	0:0	4	{
decl	9:8	9:29	4	float	f_requested_fps
call	10:8	10:63	4	var_Create
arg	10:20	10:27	5	p_input
water	10:20	0:0	6	p_input
arg	10:29	10:47	5	"sub-original-fps"
water	10:29	0:0	6	"sub-original-fps"
arg	10:49	10:63	5	VLC_VAR_FLOAT
water	10:49	0:0	6	VLC_VAR_FLOAT
water	10:64	0:0	4	;
call	11:8	11:57	4	var_SetFloat
arg	11:22	11:29	5	p_input
water	11:22	0:0	6	p_input
arg	11:31	11:49	5	"sub-original-fps"
water	11:31	0:0	6	"sub-original-fps"
arg	11:51	11:57	5	f_fps
water	11:51	0:0	6	f_fps
water	11:58	0:0	4	;
water	12:8	0:0	4	f_requested_fps
op	12:24	0:0	4	=
call	12:26	12:65	4	var_CreateGetFloat
arg	12:46	12:53	5	p_input
water	12:46	0:0	6	p_input
arg	12:55	12:65	5	"sub-fps"
water	12:55	0:0	6	"sub-fps"
water	12:66	0:0	4	;
if	13:8	18:8	4	(f_requested_fps != f_fps)
cond	13:12	13:31	5	f_requested_fps != f_fps
water	13:12	0:0	6	f_requested_fps
op	13:28	0:0	6	!=
water	13:31	0:0	6	f_fps
stmts	14:8	18:8	5	
water	14:8	0:0	6	{
call	15:12	16:62	6	var_Create
arg	15:24	15:31	7	p_input
water	15:24	0:0	8	p_input
arg	15:33	15:42	7	"sub-fps"
water	15:33	0:0	8	"sub-fps"
arg	15:44	16:62	7	VLC_VAR_FLOAT|VLC_VAR_DOINHERIT
water	15:44	0:0	8	VLC_VAR_FLOAT
op	15:57	0:0	8	|
water	16:44	0:0	8	VLC_VAR_DOINHERIT
water	16:63	0:0	6	;
call	17:12	17:62	6	var_SetFloat
arg	17:26	17:33	7	p_input
water	17:26	0:0	8	p_input
arg	17:35	17:44	7	"sub-fps"
water	17:35	0:0	8	"sub-fps"
arg	17:46	17:62	7	f_requested_fps
water	17:46	0:0	8	f_requested_fps
water	17:63	0:0	6	;
water	18:8	0:0	6	}
water	19:4	0:0	4	}
decl	20:4	20:68	2	const int	i_delay
op	20:22	0:0	2	=
call	20:24	20:67	3	var_CreateGetInteger
arg	20:46	20:53	4	p_input
water	20:46	0:0	5	p_input
arg	20:55	20:67	4	"sub-delay"
water	20:55	0:0	5	"sub-delay"
if	21:4	22:70	2	(i_delay != 0)
cond	21:8	21:19	3	i_delay != 0
water	21:8	0:0	4	i_delay
op	21:16	0:0	4	!=
water	21:19	0:0	4	0
stmts	22:8	22:70	3	
call	22:8	22:69	4	var_SetTime
arg	22:21	22:28	5	p_input
water	22:21	0:0	6	p_input
arg	22:30	22:41	5	"spu-delay"
water	22:30	0:0	6	"spu-delay"
arg	22:43	22:69	5	(mtime_t)i_delay*100000
water	22:43	0:0	6	(
water	22:44	0:0	6	mtime_t
water	22:51	0:0	6	)
water	22:52	0:0	6	i_delay
op	22:60	0:0	6	*
water	22:62	0:0	6	100000
water	22:70	0:0	4	;
water	24:4	0:0	2	unsigned
water	24:13	0:0	2	i_flags
op	24:21	0:0	2	=
water	24:23	0:0	2	SUB_FORCED
water	24:33	0:0	2	;
decl	25:4	25:69	2	char	*psz_subtitle
op	25:23	0:0	2	=
call	25:25	25:68	3	var_GetNonEmptyString
arg	25:48	25:55	4	p_input
water	25:48	0:0	5	p_input
arg	25:57	25:68	4	"sub-file"
water	25:57	0:0	5	"sub-file"
if	26:4	31:4	2	(psz_subtitle != NULL)
cond	26:8	26:24	3	psz_subtitle != NULL
water	26:8	0:0	4	psz_subtitle
op	26:21	0:0	4	!=
water	26:24	0:0	4	NULL
stmts	27:4	31:4	3	
water	27:4	0:0	4	{
call	28:8	28:62	4	msg_Dbg
arg	28:17	28:24	5	p_input
water	28:17	0:0	6	p_input
arg	28:26	28:47	5	"forced subtitle: %s"
water	28:26	0:0	6	"forced subtitle: %s"
arg	28:49	28:62	5	psz_subtitle
water	28:49	0:0	6	psz_subtitle
water	28:63	0:0	4	;
call	29:8	29:62	4	input_SubtitleFileAdd
arg	29:31	29:38	5	p_input
water	29:31	0:0	6	p_input
arg	29:40	29:52	5	psz_subtitle
water	29:40	0:0	6	psz_subtitle
arg	29:54	29:62	5	i_flags
water	29:54	0:0	6	i_flags
water	29:63	0:0	4	;
water	30:8	0:0	4	i_flags
op	30:16	0:0	4	=
water	30:18	0:0	4	SUB_NOFLAG
water	30:28	0:0	4	;
water	31:4	0:0	4	}
if	32:4	49:4	2	(var_GetBool (p_input ,"sub-autodetect-file" ))
cond	32:8	32:52	3	var_GetBool (p_input ,"sub-autodetect-file" )
call	32:8	32:52	4	var_GetBool
arg	32:21	32:28	5	p_input
water	32:21	0:0	6	p_input
arg	32:30	32:52	5	"sub-autodetect-file"
water	32:30	0:0	6	"sub-autodetect-file"
stmts	33:4	49:4	3	
water	33:4	0:0	4	{
decl	34:8	34:84	4	char	*psz_autopath
op	34:27	0:0	4	=
call	34:29	34:83	5	var_GetNonEmptyString
arg	34:52	34:59	6	p_input
water	34:52	0:0	7	p_input
arg	34:61	34:83	6	"sub-autodetect-path"
water	34:61	0:0	7	"sub-autodetect-path"
decl	35:8	36:74	4	char	**ppsz_subs
op	35:25	0:0	4	=
call	35:27	36:73	5	subtitles_Detect
arg	35:45	35:52	6	p_input
water	35:45	0:0	7	p_input
arg	35:54	35:66	6	psz_autopath
water	35:54	0:0	7	psz_autopath
arg	36:45	36:73	6	p_input->p->p_item->psz_uri
water	36:45	0:0	7	p_input
op	36:52	0:0	7	->
water	36:54	0:0	7	p
op	36:55	0:0	7	->
water	36:57	0:0	7	p_item
op	36:63	0:0	7	->
water	36:65	0:0	7	psz_uri
call	37:8	37:27	4	free
arg	37:14	37:27	5	psz_autopath
water	37:14	0:0	6	psz_autopath
water	37:28	0:0	4	;
for	38:8	47:8	4	( int i = 0 ;ppsz_subs && ppsz_subs [ i ];i ++)
forinit	0:0	38:22	5	 int i = 0 ;
decl	38:13	38:22	6	int	i
op	38:19	0:0	6	=
water	38:21	0:0	6	0
cond	38:24	38:48	5	ppsz_subs && ppsz_subs [ i ]
water	38:24	0:0	6	ppsz_subs
op	38:34	0:0	6	&&
water	38:37	0:0	6	ppsz_subs
op	38:46	0:0	6	[
water	38:47	0:0	6	i
op	38:48	0:0	6	]
forexpr	38:51	38:52	5	i ++
water	38:51	0:0	6	i
op	38:52	0:0	6	++
stmts	39:8	47:8	5	
water	39:8	0:0	6	{
if	40:12	45:12	6	(! psz_subtitle ||strcmp (psz_subtitle ,ppsz_subs [ i ] ))
cond	40:16	40:68	7	! psz_subtitle ||strcmp (psz_subtitle ,ppsz_subs [ i ] )
op	40:16	0:0	8	!
water	40:17	0:0	8	psz_subtitle
op	40:30	0:0	8	||
call	40:33	40:68	8	strcmp
arg	40:41	40:53	9	psz_subtitle
water	40:41	0:0	10	psz_subtitle
arg	40:55	40:68	9	ppsz_subs[i]
water	40:55	0:0	10	ppsz_subs
op	40:64	0:0	10	[
water	40:65	0:0	10	i
op	40:66	0:0	10	]
stmts	41:12	45:12	7	
water	41:12	0:0	8	{
water	42:16	0:0	8	i_flags
op	42:24	0:0	8	|=
water	42:27	0:0	8	SUB_CANFAIL
water	42:38	0:0	8	;
call	43:16	43:70	8	input_SubtitleFileAdd
arg	43:39	43:46	9	p_input
water	43:39	0:0	10	p_input
arg	43:48	43:60	9	ppsz_subs[i]
water	43:48	0:0	10	ppsz_subs
op	43:57	0:0	10	[
water	43:58	0:0	10	i
op	43:59	0:0	10	]
arg	43:62	43:70	9	i_flags
water	43:62	0:0	10	i_flags
water	43:71	0:0	8	;
water	44:16	0:0	8	i_flags
op	44:24	0:0	8	=
water	44:26	0:0	8	SUB_NOFLAG
water	44:36	0:0	8	;
water	45:12	0:0	8	}
call	46:12	46:31	6	free
arg	46:18	46:31	7	ppsz_subs[i]
water	46:18	0:0	8	ppsz_subs
op	46:27	0:0	8	[
water	46:28	0:0	8	i
op	46:29	0:0	8	]
water	46:32	0:0	6	;
water	47:8	0:0	6	}
call	48:8	48:24	4	free
arg	48:14	48:24	5	ppsz_subs
water	48:14	0:0	6	ppsz_subs
water	48:25	0:0	4	;
water	49:4	0:0	4	}
call	50:4	50:23	2	free
arg	50:10	50:23	3	psz_subtitle
water	50:10	0:0	4	psz_subtitle
water	50:24	0:0	2	;
decl	52:4	52:24	2	int	i_attachment
op	52:21	0:0	2	=
water	52:23	0:0	2	0
decl	53:4	53:45	2	input_attachment_t	**pp_attachment
op	53:39	0:0	2	=
water	53:41	0:0	2	NULL
call	54:4	54:46	2	vlc_mutex_lock
arg	54:20	54:46	3	&p_input->p->p_item->lock
op	54:20	0:0	4	&
water	54:21	0:0	4	p_input
op	54:28	0:0	4	->
water	54:30	0:0	4	p
op	54:31	0:0	4	->
water	54:33	0:0	4	p_item
op	54:39	0:0	4	->
water	54:41	0:0	4	lock
water	54:47	0:0	2	;
for	55:4	62:4	2	( int i = 0 ;i < p_input -> p -> i_attachment;i ++)
forinit	0:0	55:18	3	 int i = 0 ;
decl	55:9	55:18	4	int	i
op	55:15	0:0	4	=
water	55:17	0:0	4	0
cond	55:20	55:36	3	i < p_input -> p -> i_attachment
water	55:20	0:0	4	i
op	55:22	0:0	4	<
water	55:24	0:0	4	p_input
op	55:31	0:0	4	->
water	55:33	0:0	4	p
op	55:34	0:0	4	->
water	55:36	0:0	4	i_attachment
forexpr	55:50	55:51	3	i ++
water	55:50	0:0	4	i
op	55:51	0:0	4	++
stmts	56:4	62:4	3	
water	56:4	0:0	4	{
decl	57:8	57:63	4	const input_attachment_t	*a
op	57:36	0:0	4	=
water	57:38	0:0	4	p_input
op	57:45	0:0	4	->
water	57:47	0:0	4	p
op	57:48	0:0	4	->
water	57:50	0:0	4	attachment
op	57:60	0:0	4	[
water	57:61	0:0	4	i
op	57:62	0:0	4	]
if	58:8	61:81	4	(!strcmp (a -> psz_mime ,"application/x-srt" ))
cond	58:12	58:54	5	!strcmp (a -> psz_mime ,"application/x-srt" )
op	58:12	0:0	6	!
call	58:13	58:54	6	strcmp
arg	58:21	58:32	7	a->psz_mime
water	58:21	0:0	8	a
op	58:22	0:0	8	->
water	58:24	0:0	8	psz_mime
arg	58:34	58:54	7	"application/x-srt"
water	58:34	0:0	8	"application/x-srt"
stmts	59:12	61:81	5	
call	59:12	61:80	6	TAB_APPEND
arg	59:24	59:36	7	i_attachment
water	59:24	0:0	8	i_attachment
arg	59:38	59:51	7	pp_attachment
water	59:38	0:0	8	pp_attachment
arg	60:24	61:80	7	vlc_input_attachment_New(a->psz_name,NULL,a->psz_description,NULL,0)
call	60:24	61:78	8	vlc_input_attachment_New
arg	60:50	60:61	9	a->psz_name
water	60:50	0:0	10	a
op	60:51	0:0	10	->
water	60:53	0:0	10	psz_name
arg	60:63	60:67	9	NULL
water	60:63	0:0	10	NULL
arg	61:50	61:68	9	a->psz_description
water	61:50	0:0	10	a
op	61:51	0:0	10	->
water	61:53	0:0	10	psz_description
arg	61:70	61:74	9	NULL
water	61:70	0:0	10	NULL
arg	61:76	61:78	9	0
water	61:76	0:0	10	0
water	61:81	0:0	6	;
water	62:4	0:0	4	}
call	63:4	63:48	2	vlc_mutex_unlock
arg	63:22	63:48	3	&p_input->p->p_item->lock
op	63:22	0:0	4	&
water	63:23	0:0	4	p_input
op	63:30	0:0	4	->
water	63:32	0:0	4	p
op	63:33	0:0	4	->
water	63:35	0:0	4	p_item
op	63:41	0:0	4	->
water	63:43	0:0	4	lock
water	63:49	0:0	2	;
if	64:4	65:64	2	(i_attachment > 0)
cond	64:8	64:23	3	i_attachment > 0
water	64:8	0:0	4	i_attachment
op	64:21	0:0	4	>
water	64:23	0:0	4	0
stmts	65:8	65:64	3	
call	65:8	65:63	4	var_Create
arg	65:20	65:27	5	p_input
water	65:20	0:0	6	p_input
arg	65:29	65:46	5	"sub-description"
water	65:29	0:0	6	"sub-description"
arg	65:48	65:63	5	VLC_VAR_STRING
water	65:48	0:0	6	VLC_VAR_STRING
water	65:64	0:0	4	;
for	66:4	81:4	2	( int i = 0 ;i < i_attachment;i ++)
forinit	0:0	66:18	3	 int i = 0 ;
decl	66:9	66:18	4	int	i
op	66:15	0:0	4	=
water	66:17	0:0	4	0
cond	66:20	66:24	3	i < i_attachment
water	66:20	0:0	4	i
op	66:22	0:0	4	<
water	66:24	0:0	4	i_attachment
forexpr	66:38	66:39	3	i ++
water	66:38	0:0	4	i
op	66:39	0:0	4	++
stmts	67:4	81:4	3	
water	67:4	0:0	4	{
decl	68:8	68:48	4	input_attachment_t	*a
op	68:30	0:0	4	=
water	68:32	0:0	4	pp_attachment
op	68:45	0:0	4	[
water	68:46	0:0	4	i
op	68:47	0:0	4	]
if	69:8	70:20	4	(! a)
cond	69:12	69:13	5	! a
op	69:12	0:0	6	!
water	69:13	0:0	6	a
stmts	70:12	70:20	5	
continue	70:12	70:20	6	
decl	71:8	71:21	4	char	*psz_mrl
if	72:8	79:8	4	(a -> psz_name [ 0 ] &&asprintf (& psz_mrl ,"attachment://%s" ,a -> psz_name ) >= 0)
cond	72:12	73:68	5	a -> psz_name [ 0 ] &&asprintf (& psz_mrl ,"attachment://%s" ,a -> psz_name ) >= 0
water	72:12	0:0	6	a
op	72:13	0:0	6	->
water	72:15	0:0	6	psz_name
op	72:23	0:0	6	[
water	72:24	0:0	6	0
op	72:25	0:0	6	]
op	72:27	0:0	6	&&
call	73:12	73:63	6	asprintf
arg	73:22	73:30	7	&psz_mrl
op	73:22	0:0	8	&
water	73:23	0:0	8	psz_mrl
arg	73:32	73:49	7	"attachment://%s"
water	73:32	0:0	8	"attachment://%s"
arg	73:51	73:63	7	a->psz_name
water	73:51	0:0	8	a
op	73:52	0:0	8	->
water	73:54	0:0	8	psz_name
op	73:65	0:0	6	>=
water	73:68	0:0	6	0
stmts	74:8	79:8	5	
water	74:8	0:0	6	{
call	75:12	75:99	6	var_SetString
arg	75:27	75:34	7	p_input
water	75:27	0:0	8	p_input
arg	75:36	75:53	7	"sub-description"
water	75:36	0:0	8	"sub-description"
arg	75:55	75:99	7	a->psz_description?a->psz_description:""
water	75:55	0:0	8	a
op	75:56	0:0	8	->
water	75:58	0:0	8	psz_description
water	75:74	0:0	8	?
water	75:76	0:0	8	a
op	75:77	0:0	8	->
water	75:79	0:0	8	psz_description
water	75:95	0:0	8	:
water	75:97	0:0	8	""
water	75:100	0:0	6	;
call	76:12	76:57	6	input_SubtitleAdd
arg	76:31	76:38	7	p_input
water	76:31	0:0	8	p_input
arg	76:40	76:47	7	psz_mrl
water	76:40	0:0	8	psz_mrl
arg	76:49	76:57	7	i_flags
water	76:49	0:0	8	i_flags
water	76:58	0:0	6	;
water	77:12	0:0	6	i_flags
op	77:20	0:0	6	=
water	77:22	0:0	6	SUB_NOFLAG
water	77:32	0:0	6	;
call	78:12	78:26	6	free
arg	78:18	78:26	7	psz_mrl
water	78:18	0:0	8	psz_mrl
water	78:27	0:0	6	;
water	79:8	0:0	6	}
call	80:8	80:39	4	vlc_input_attachment_Delete
arg	80:37	80:39	5	a
water	80:37	0:0	6	a
water	80:40	0:0	4	;
water	81:4	0:0	4	}
call	82:4	82:24	2	free
arg	82:10	82:24	3	pp_attachment
water	82:10	0:0	4	pp_attachment
water	82:25	0:0	2	;
if	83:4	84:49	2	(i_attachment > 0)
cond	83:8	83:23	3	i_attachment > 0
water	83:8	0:0	4	i_attachment
op	83:21	0:0	4	>
water	83:23	0:0	4	0
stmts	84:8	84:49	3	
call	84:8	84:48	4	var_Destroy
arg	84:21	84:28	5	p_input
water	84:21	0:0	6	p_input
arg	84:30	84:48	5	"sub-description"
water	84:30	0:0	6	"sub-description"
water	84:49	0:0	4	;

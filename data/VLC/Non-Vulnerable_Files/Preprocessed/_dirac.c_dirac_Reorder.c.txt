func	2:0	52:0	0	static block_t *	dirac_Reorder
params	2:29	0:0	1	
param	2:31	2:47	2	decoder_t *	p_dec
param	2:49	2:68	2	block_t *	p_block_in
param	2:70	2:88	2	uint32_t	u_picnum
stmnts	0:0	51:18	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	7:25	2	(! p_sys -> reorder_buf . u_size_max)
cond	5:8	5:28	3	! p_sys -> reorder_buf . u_size_max
op	5:8	0:0	4	!
water	5:9	0:0	4	p_sys
op	5:14	0:0	4	->
water	5:16	0:0	4	reorder_buf
op	5:27	0:0	4	.
water	5:28	0:0	4	u_size_max
stmts	7:8	7:25	3	
return	7:8	7:25	4	p_block_in
water	7:15	0:0	5	p_block_in
decl	19:4	19:27	2	block_t	*p_block
op	19:21	0:0	2	=
water	19:23	0:0	2	NULL
if	21:4	37:4	2	(p_sys -> reorder_buf . u_size == p_sys -> reorder_buf . u_size_max)
cond	21:8	21:56	3	p_sys -> reorder_buf . u_size == p_sys -> reorder_buf . u_size_max
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	reorder_buf
op	21:26	0:0	4	.
water	21:27	0:0	4	u_size
op	21:34	0:0	4	==
water	21:37	0:0	4	p_sys
op	21:42	0:0	4	->
water	21:44	0:0	4	reorder_buf
op	21:55	0:0	4	.
water	21:56	0:0	4	u_size_max
stmts	22:4	37:4	3	
water	22:4	0:0	4	{
if	24:8	29:8	4	(! p_sys -> reorder_buf . u_size_max ||dirac_PictureNbeforeM (u_picnum ,p_sys -> reorder_buf . p_head -> u_picnum ))
cond	24:12	25:81	5	! p_sys -> reorder_buf . u_size_max ||dirac_PictureNbeforeM (u_picnum ,p_sys -> reorder_buf . p_head -> u_picnum )
op	24:12	0:0	6	!
water	24:13	0:0	6	p_sys
op	24:18	0:0	6	->
water	24:20	0:0	6	reorder_buf
op	24:31	0:0	6	.
water	24:32	0:0	6	u_size_max
op	24:43	0:0	6	||
call	25:12	25:81	6	dirac_PictureNbeforeM
arg	25:35	25:43	7	u_picnum
water	25:35	0:0	8	u_picnum
arg	25:45	25:81	7	p_sys->reorder_buf.p_head->u_picnum
water	25:45	0:0	8	p_sys
op	25:50	0:0	8	->
water	25:52	0:0	8	reorder_buf
op	25:63	0:0	8	.
water	25:64	0:0	8	p_head
op	25:70	0:0	8	->
water	25:72	0:0	8	u_picnum
stmts	26:8	29:8	5	
water	26:8	0:0	6	{
return	28:12	28:29	6	p_block_in
water	28:19	0:0	7	p_block_in
water	29:8	0:0	6	}
water	31:8	0:0	4	p_block
op	31:16	0:0	4	=
water	31:18	0:0	4	p_sys
op	31:23	0:0	4	->
water	31:25	0:0	4	reorder_buf
op	31:36	0:0	4	.
water	31:37	0:0	4	p_head
op	31:43	0:0	4	->
water	31:45	0:0	4	p_eu
water	31:49	0:0	4	;
decl	32:8	32:69	4	struct dirac_reorder_entry	*p_tmp
op	32:42	0:0	4	=
water	32:44	0:0	4	p_sys
op	32:49	0:0	4	->
water	32:51	0:0	4	reorder_buf
op	32:62	0:0	4	.
water	32:63	0:0	4	p_head
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	reorder_buf
op	33:26	0:0	4	.
water	33:27	0:0	4	p_head
op	33:34	0:0	4	=
water	33:36	0:0	4	p_tmp
op	33:41	0:0	4	->
water	33:43	0:0	4	p_next
water	33:49	0:0	4	;
water	34:8	0:0	4	p_tmp
op	34:13	0:0	4	->
water	34:15	0:0	4	p_next
op	34:22	0:0	4	=
water	34:24	0:0	4	p_sys
op	34:29	0:0	4	->
water	34:31	0:0	4	reorder_buf
op	34:42	0:0	4	.
water	34:43	0:0	4	p_empty
water	34:50	0:0	4	;
water	35:8	0:0	4	p_sys
op	35:13	0:0	4	->
water	35:15	0:0	4	reorder_buf
op	35:26	0:0	4	.
water	35:27	0:0	4	p_empty
op	35:35	0:0	4	=
water	35:37	0:0	4	p_tmp
water	35:42	0:0	4	;
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	reorder_buf
op	36:26	0:0	4	.
water	36:27	0:0	4	u_size
op	36:33	0:0	4	--
water	36:35	0:0	4	;
water	37:4	0:0	4	}
decl	39:4	39:70	2	struct dirac_reorder_entry	*p_current
op	39:42	0:0	2	=
water	39:44	0:0	2	p_sys
op	39:49	0:0	2	->
water	39:51	0:0	2	reorder_buf
op	39:62	0:0	2	.
water	39:63	0:0	2	p_empty
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	reorder_buf
op	40:22	0:0	2	.
water	40:23	0:0	2	p_empty
op	40:31	0:0	2	=
water	40:33	0:0	2	p_current
op	40:42	0:0	2	->
water	40:44	0:0	2	p_next
water	40:50	0:0	2	;
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	reorder_buf
op	41:22	0:0	2	.
water	41:23	0:0	2	u_size
op	41:29	0:0	2	++
water	41:31	0:0	2	;
decl	43:4	43:67	2	struct dirac_reorder_entry	**pp_at
op	43:39	0:0	2	=
op	43:41	0:0	2	&
water	43:42	0:0	2	p_sys
op	43:47	0:0	2	->
water	43:49	0:0	2	reorder_buf
op	43:60	0:0	2	.
water	43:61	0:0	2	p_head
for	44:4	46:17	2	(;* pp_at;pp_at = & ( * pp_at ) -> p_next)
forinit	44:9	44:9	3	;
water	44:9	0:0	4	;
cond	44:11	44:12	3	* pp_at
op	44:11	0:0	4	*
water	44:12	0:0	4	pp_at
forexpr	44:19	44:38	3	pp_at = & ( * pp_at ) -> p_next
water	44:19	0:0	4	pp_at
op	44:25	0:0	4	=
op	44:27	0:0	4	&
water	44:28	0:0	4	(
op	44:29	0:0	4	*
water	44:30	0:0	4	pp_at
water	44:35	0:0	4	)
op	44:36	0:0	4	->
water	44:38	0:0	4	p_next
stmts	45:8	46:17	3	
if	45:8	46:17	4	(dirac_PictureNbeforeM (u_picnum ,( * pp_at ) -> u_picnum ))
cond	45:12	45:64	5	dirac_PictureNbeforeM (u_picnum ,( * pp_at ) -> u_picnum )
call	45:12	45:64	6	dirac_PictureNbeforeM
arg	45:35	45:43	7	u_picnum
water	45:35	0:0	8	u_picnum
arg	45:45	45:64	7	(*pp_at)->u_picnum
water	45:45	0:0	8	(
op	45:46	0:0	8	*
water	45:47	0:0	8	pp_at
water	45:52	0:0	8	)
op	45:53	0:0	8	->
water	45:55	0:0	8	u_picnum
stmts	46:12	46:17	5	
break	46:12	46:17	6	
water	47:4	0:0	2	p_current
op	47:13	0:0	2	->
water	47:15	0:0	2	u_picnum
op	47:24	0:0	2	=
water	47:26	0:0	2	u_picnum
water	47:34	0:0	2	;
water	48:4	0:0	2	p_current
op	48:13	0:0	2	->
water	48:15	0:0	2	p_eu
op	48:20	0:0	2	=
water	48:22	0:0	2	p_block_in
water	48:32	0:0	2	;
water	49:4	0:0	2	p_current
op	49:13	0:0	2	->
water	49:15	0:0	2	p_next
op	49:22	0:0	2	=
op	49:24	0:0	2	*
water	49:25	0:0	2	pp_at
water	49:30	0:0	2	;
op	50:4	0:0	2	*
water	50:5	0:0	2	pp_at
op	50:11	0:0	2	=
water	50:13	0:0	2	p_current
water	50:22	0:0	2	;
return	51:4	51:18	2	p_block
water	51:11	0:0	3	p_block

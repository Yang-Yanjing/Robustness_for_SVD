func	2:0	65:0	0	static block_t *	EncodeBlock
params	2:27	0:0	1	
param	2:28	2:44	2	encoder_t *	p_enc
param	2:46	2:62	2	picture_t *	p_pic
stmnts	0:0	64:15	1	
decl	4:4	4:39	2	encoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_enc
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	8:4	2	(unlikely (! p_pic ))
cond	5:8	5:25	3	unlikely (! p_pic )
call	5:8	5:25	4	unlikely
arg	5:18	5:25	5	!p_pic
op	5:18	0:0	6	!
water	5:19	0:0	6	p_pic
stmts	6:4	8:4	3	
water	6:4	0:0	4	{
return	7:8	7:19	4	NULL
water	7:15	0:0	5	NULL
water	8:4	0:0	4	}
decl	9:4	9:56	2	block_t	*p_block
op	9:21	0:0	2	=
call	9:23	9:55	3	block_Alloc
arg	9:36	9:55	4	p_sys->i_blocksize
water	9:36	0:0	5	p_sys
op	9:41	0:0	5	->
water	9:43	0:0	5	i_blocksize
if	10:4	13:4	2	(p_block == NULL)
cond	10:8	10:19	3	p_block == NULL
water	10:8	0:0	4	p_block
op	10:16	0:0	4	==
water	10:19	0:0	4	NULL
stmts	11:4	13:4	3	
water	11:4	0:0	4	{
return	12:8	12:19	4	NULL
water	12:15	0:0	5	NULL
water	13:4	0:0	4	}
decl	14:4	14:81	2	png_structp	p_png
op	14:22	0:0	2	=
call	14:24	14:80	3	png_create_write_struct
arg	14:49	14:70	4	PNG_LIBPNG_VER_STRING
water	14:49	0:0	5	PNG_LIBPNG_VER_STRING
arg	14:72	14:73	4	0
water	14:72	0:0	5	0
arg	14:75	14:76	4	0
water	14:75	0:0	5	0
arg	14:78	14:80	4	0
water	14:78	0:0	5	0
if	15:4	19:4	2	(p_png == NULL)
cond	15:8	15:17	3	p_png == NULL
water	15:8	0:0	4	p_png
op	15:14	0:0	4	==
water	15:17	0:0	4	NULL
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
call	17:8	17:31	4	block_Release
arg	17:23	17:31	5	p_block
water	17:23	0:0	6	p_block
water	17:32	0:0	4	;
return	18:8	18:19	4	NULL
water	18:15	0:0	5	NULL
water	19:4	0:0	4	}
call	21:4	21:45	2	png_set_filter
arg	21:20	21:25	3	p_png
water	21:20	0:0	4	p_png
arg	21:27	21:28	3	0
water	21:27	0:0	4	0
arg	21:30	21:45	3	PNG_NO_FILTERS
water	21:30	0:0	4	PNG_NO_FILTERS
water	21:46	0:0	2	;
call	23:4	23:40	2	png_set_compression_level
arg	23:31	23:36	3	p_png
water	23:31	0:0	4	p_png
arg	23:38	23:40	3	1
water	23:38	0:0	4	1
water	23:41	0:0	2	;
decl	25:4	25:40	2	uint8_t	*p_start
op	25:21	0:0	2	=
water	25:23	0:0	2	p_block
op	25:30	0:0	2	->
water	25:32	0:0	2	p_buffer
decl	26:4	26:38	2	size_t	i_start
op	26:19	0:0	2	=
water	26:21	0:0	2	p_block
op	26:28	0:0	2	->
water	26:30	0:0	2	i_buffer
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	b_error
op	27:19	0:0	2	=
water	27:21	0:0	2	false
water	27:26	0:0	2	;
decl	28:4	28:27	2	png_infop	p_info
op	28:21	0:0	2	=
water	28:23	0:0	2	NULL
if	30:4	31:18	2	(setjmp (png_jmpbuf (p_png ) ))
cond	30:8	30:36	3	setjmp (png_jmpbuf (p_png ) )
call	30:8	30:36	4	setjmp
arg	30:16	30:36	5	png_jmpbuf(p_png)
call	30:16	30:34	6	png_jmpbuf
arg	30:28	30:34	7	p_png
water	30:28	0:0	8	p_png
stmts	31:8	31:18	3	
goto	31:8	31:18	4	error
water	31:13	0:0	5	error
call	32:4	32:61	2	png_set_write_fn
arg	32:22	32:27	3	p_png
water	32:22	0:0	4	p_png
arg	32:29	32:36	3	p_block
water	32:29	0:0	4	p_block
arg	32:38	32:48	3	user_write
water	32:38	0:0	4	user_write
arg	32:50	32:61	3	user_flush
water	32:50	0:0	4	user_flush
water	32:62	0:0	2	;
call	33:4	33:61	2	png_set_error_fn
arg	33:22	33:27	3	p_png
water	33:22	0:0	4	p_png
arg	33:29	33:34	3	p_enc
water	33:29	0:0	4	p_enc
arg	33:36	33:46	3	user_error
water	33:36	0:0	4	user_error
arg	33:48	33:61	3	user_warning
water	33:48	0:0	4	user_warning
water	33:62	0:0	2	;
water	34:4	0:0	2	p_info
op	34:11	0:0	2	=
call	34:13	34:43	2	png_create_info_struct
arg	34:37	34:43	3	p_png
water	34:37	0:0	4	p_png
water	34:44	0:0	2	;
if	35:4	36:18	2	(p_info == NULL)
cond	35:8	35:18	3	p_info == NULL
water	35:8	0:0	4	p_info
op	35:15	0:0	4	==
water	35:18	0:0	4	NULL
stmts	36:8	36:18	3	
goto	36:8	36:18	4	error
water	36:13	0:0	5	error
decl	37:4	37:58	2	png_infop	p_end_info
op	37:25	0:0	2	=
call	37:27	37:57	3	png_create_info_struct
arg	37:51	37:57	4	p_png
water	37:51	0:0	5	p_png
if	38:4	38:39	2	(p_end_info == NULL)
cond	38:8	38:22	3	p_end_info == NULL
water	38:8	0:0	4	p_end_info
op	38:19	0:0	4	==
water	38:22	0:0	4	NULL
stmts	38:29	38:39	3	
goto	38:29	38:39	4	error
water	38:34	0:0	5	error
call	39:4	43:66	2	png_set_IHDR
arg	39:18	39:23	3	p_png
water	39:18	0:0	4	p_png
arg	39:25	39:31	3	p_info
water	39:25	0:0	4	p_info
arg	40:12	40:47	3	p_enc->fmt_in.video.i_visible_width
water	40:12	0:0	4	p_enc
op	40:17	0:0	4	->
water	40:19	0:0	4	fmt_in
op	40:25	0:0	4	.
water	40:26	0:0	4	video
op	40:31	0:0	4	.
water	40:32	0:0	4	i_visible_width
arg	41:12	41:48	3	p_enc->fmt_in.video.i_visible_height
water	41:12	0:0	4	p_enc
op	41:17	0:0	4	->
water	41:19	0:0	4	fmt_in
op	41:25	0:0	4	.
water	41:26	0:0	4	video
op	41:31	0:0	4	.
water	41:32	0:0	4	i_visible_height
arg	42:12	42:13	3	8
water	42:12	0:0	4	8
arg	42:15	42:33	3	PNG_COLOR_TYPE_RGB
water	42:15	0:0	4	PNG_COLOR_TYPE_RGB
arg	42:35	42:53	3	PNG_INTERLACE_NONE
water	42:35	0:0	4	PNG_INTERLACE_NONE
arg	43:12	43:40	3	PNG_COMPRESSION_TYPE_DEFAULT
water	43:12	0:0	4	PNG_COMPRESSION_TYPE_DEFAULT
arg	43:42	43:66	3	PNG_FILTER_TYPE_DEFAULT
water	43:42	0:0	4	PNG_FILTER_TYPE_DEFAULT
water	43:67	0:0	2	;
if	44:4	44:35	2	(p_sys -> b_error)
cond	44:8	44:15	3	p_sys -> b_error
water	44:8	0:0	4	p_sys
op	44:13	0:0	4	->
water	44:15	0:0	4	b_error
stmts	44:25	44:35	3	
goto	44:25	44:35	4	error
water	44:30	0:0	5	error
call	45:4	45:34	2	png_write_info
arg	45:20	45:25	3	p_png
water	45:20	0:0	4	p_png
arg	45:27	45:34	3	p_info
water	45:27	0:0	4	p_info
water	45:35	0:0	2	;
if	46:4	46:35	2	(p_sys -> b_error)
cond	46:8	46:15	3	p_sys -> b_error
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	b_error
stmts	46:25	46:35	3	
goto	46:25	46:35	4	error
water	46:30	0:0	5	error
for	48:4	52:4	2	( int i = 0 ;i < p_pic -> p -> i_visible_lines;i ++)
forinit	0:0	48:18	3	 int i = 0 ;
decl	48:9	48:18	4	int	i
op	48:15	0:0	4	=
water	48:17	0:0	4	0
cond	48:20	48:34	3	i < p_pic -> p -> i_visible_lines
water	48:20	0:0	4	i
op	48:22	0:0	4	<
water	48:24	0:0	4	p_pic
op	48:29	0:0	4	->
water	48:31	0:0	4	p
op	48:32	0:0	4	->
water	48:34	0:0	4	i_visible_lines
forexpr	48:51	48:52	3	i ++
water	48:51	0:0	4	i
op	48:52	0:0	4	++
stmts	49:4	52:4	3	
water	49:4	0:0	4	{
call	50:8	50:75	4	png_write_row
arg	50:23	50:28	5	p_png
water	50:23	0:0	6	p_png
arg	50:30	50:75	5	p_pic->p->p_pixels+(i*p_pic->p->i_pitch)
water	50:30	0:0	6	p_pic
op	50:35	0:0	6	->
water	50:37	0:0	6	p
op	50:38	0:0	6	->
water	50:40	0:0	6	p_pixels
op	50:49	0:0	6	+
water	50:51	0:0	6	(
water	50:52	0:0	6	i
op	50:54	0:0	6	*
water	50:56	0:0	6	p_pic
op	50:61	0:0	6	->
water	50:63	0:0	6	p
op	50:64	0:0	6	->
water	50:66	0:0	6	i_pitch
water	50:73	0:0	6	)
water	50:76	0:0	4	;
if	51:8	51:39	4	(p_sys -> b_error)
cond	51:12	51:19	5	p_sys -> b_error
water	51:12	0:0	6	p_sys
op	51:17	0:0	6	->
water	51:19	0:0	6	b_error
stmts	51:29	51:39	5	
goto	51:29	51:39	6	error
water	51:34	0:0	7	error
water	52:4	0:0	4	}
call	53:4	53:37	2	png_write_end
arg	53:19	53:24	3	p_png
water	53:19	0:0	4	p_png
arg	53:26	53:37	3	p_end_info
water	53:26	0:0	4	p_end_info
water	53:38	0:0	2	;
if	54:4	54:35	2	(p_sys -> b_error)
cond	54:8	54:15	3	p_sys -> b_error
water	54:8	0:0	4	p_sys
op	54:13	0:0	4	->
water	54:15	0:0	4	b_error
stmts	54:25	54:35	3	
goto	54:25	54:35	4	error
water	54:30	0:0	5	error
call	55:4	55:46	2	png_destroy_write_struct
arg	55:30	55:36	3	&p_png
op	55:30	0:0	4	&
water	55:31	0:0	4	p_png
arg	55:38	55:46	3	&p_info
op	55:38	0:0	4	&
water	55:39	0:0	4	p_info
water	55:47	0:0	2	;
water	57:4	0:0	2	p_block
op	57:11	0:0	2	->
water	57:13	0:0	2	p_buffer
op	57:22	0:0	2	=
water	57:24	0:0	2	p_start
water	57:31	0:0	2	;
water	58:4	0:0	2	p_block
op	58:11	0:0	2	->
water	58:13	0:0	2	i_buffer
op	58:22	0:0	2	=
water	58:24	0:0	2	i_start
op	58:32	0:0	2	-
water	58:34	0:0	2	p_block
op	58:41	0:0	2	->
water	58:43	0:0	2	i_buffer
water	58:51	0:0	2	;
water	59:4	0:0	2	p_block
op	59:11	0:0	2	->
water	59:13	0:0	2	i_dts
op	59:19	0:0	2	=
water	59:21	0:0	2	p_block
op	59:28	0:0	2	->
water	59:30	0:0	2	i_pts
op	59:36	0:0	2	=
water	59:38	0:0	2	p_pic
op	59:43	0:0	2	->
water	59:45	0:0	2	date
water	59:49	0:0	2	;
return	60:4	60:18	2	p_block
water	60:11	0:0	3	p_block
label	61:1	61:6	2	error :
call	62:4	62:62	2	png_destroy_write_struct
arg	62:30	62:36	3	&p_png
op	62:30	0:0	4	&
water	62:31	0:0	4	p_png
arg	62:38	62:62	3	p_info?&p_info:NULL
water	62:38	0:0	4	p_info
water	62:45	0:0	4	?
op	62:47	0:0	4	&
water	62:48	0:0	4	p_info
water	62:55	0:0	4	:
water	62:57	0:0	4	NULL
water	62:63	0:0	2	;
call	63:4	63:25	2	block_Release
arg	63:18	63:25	3	p_block
water	63:18	0:0	4	p_block
water	63:26	0:0	2	;
return	64:4	64:15	2	NULL
water	64:11	0:0	3	NULL

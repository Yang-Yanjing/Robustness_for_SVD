func	2:0	135:0	0	static block_t *	dirac_DoSync
params	2:28	0:0	1	
param	2:30	2:47	2	decoder_t *	p_dec
stmnts	0:0	134:18	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:19	2	parse_info_t	pu
water	6:4	0:0	2	static
water	6:11	0:0	2	const
water	6:17	0:0	2	uint8_t
water	6:25	0:0	2	p_parsecode
op	6:36	0:0	2	[
water	6:37	0:0	2	4
op	6:38	0:0	2	]
op	6:40	0:0	2	=
water	6:42	0:0	2	{
water	6:43	0:0	2	'B'
water	6:46	0:0	2	,
water	6:47	0:0	2	'B'
water	6:50	0:0	2	,
water	6:51	0:0	2	'C'
water	6:54	0:0	2	,
water	6:55	0:0	2	'D'
water	6:58	0:0	2	}
water	6:59	0:0	2	;
do	7:4	111:4	2	(SYNCED != p_sys -> i_state)
cond	111:13	111:30	3	SYNCED != p_sys -> i_state
water	111:13	0:0	4	SYNCED
op	111:20	0:0	4	!=
water	111:23	0:0	4	p_sys
op	111:28	0:0	4	->
water	111:30	0:0	4	i_state
stmts	7:7	111:4	3	
water	7:7	0:0	4	{
switch	8:8	110:8	4	(p_sys -> i_state)
cond	8:16	8:23	5	p_sys -> i_state
water	8:16	0:0	6	p_sys
op	8:21	0:0	6	->
water	8:23	0:0	6	i_state
stmts	9:8	110:8	5	
water	9:8	0:0	6	{
label	10:8	10:23	6	case NOT_SYNCED :
water	11:8	0:0	6	{
if	12:12	19:12	6	(VLC_SUCCESS !=block_FindStartcodeFromOffset (& p_sys -> bytestream ,& p_sys -> i_offset ,p_parsecode ,4 ))
cond	12:16	13:100	7	VLC_SUCCESS !=block_FindStartcodeFromOffset (& p_sys -> bytestream ,& p_sys -> i_offset ,p_parsecode ,4 )
water	12:16	0:0	8	VLC_SUCCESS
op	12:28	0:0	8	!=
call	13:16	13:100	8	block_FindStartcodeFromOffset
arg	13:47	13:65	9	&p_sys->bytestream
op	13:47	0:0	10	&
water	13:48	0:0	10	p_sys
op	13:53	0:0	10	->
water	13:55	0:0	10	bytestream
arg	13:67	13:83	9	&p_sys->i_offset
op	13:67	0:0	10	&
water	13:68	0:0	10	p_sys
op	13:73	0:0	10	->
water	13:75	0:0	10	i_offset
arg	13:85	13:96	9	p_parsecode
water	13:85	0:0	10	p_parsecode
arg	13:98	13:100	9	4
water	13:98	0:0	10	4
stmts	14:12	19:12	7	
water	14:12	0:0	8	{
return	18:16	18:27	8	NULL
water	18:23	0:0	9	NULL
water	19:12	0:0	8	}
if	21:12	27:12	6	(VLC_SUCCESS !=block_PeekOffsetBytes (& p_sys -> bytestream ,p_sys -> i_offset + 12 ,NULL ,0 ))
cond	21:16	21:104	7	VLC_SUCCESS !=block_PeekOffsetBytes (& p_sys -> bytestream ,p_sys -> i_offset + 12 ,NULL ,0 )
water	21:16	0:0	8	VLC_SUCCESS
op	21:28	0:0	8	!=
call	21:31	21:104	8	block_PeekOffsetBytes
arg	21:54	21:72	9	&p_sys->bytestream
op	21:54	0:0	10	&
water	21:55	0:0	10	p_sys
op	21:60	0:0	10	->
water	21:62	0:0	10	bytestream
arg	21:74	21:94	9	p_sys->i_offset+12
water	21:74	0:0	10	p_sys
op	21:79	0:0	10	->
water	21:81	0:0	10	i_offset
op	21:90	0:0	10	+
water	21:92	0:0	10	12
arg	21:96	21:100	9	NULL
water	21:96	0:0	10	NULL
arg	21:102	21:104	9	0
water	21:102	0:0	10	0
stmts	22:12	27:12	7	
water	22:12	0:0	8	{
return	26:16	26:27	8	NULL
water	26:23	0:0	9	NULL
water	27:12	0:0	8	}
water	28:12	0:0	6	p_sys
op	28:17	0:0	6	->
water	28:19	0:0	6	i_state
op	28:27	0:0	6	=
water	28:29	0:0	6	TRY_SYNC
water	28:37	0:0	6	;
break	29:12	29:17	6	
water	30:8	0:0	6	}
label	31:8	31:19	6	case SYNCED :
call	34:12	34:41	6	assert
arg	34:20	34:41	7	p_sys->i_offset==0
water	34:20	0:0	8	p_sys
op	34:25	0:0	8	->
water	34:27	0:0	8	i_offset
op	34:36	0:0	8	==
water	34:39	0:0	8	0
water	34:42	0:0	6	;
if	35:12	40:12	6	(VLC_SUCCESS !=block_PeekOffsetBytes (& p_sys -> bytestream ,12 ,NULL ,0 ))
cond	35:16	35:86	7	VLC_SUCCESS !=block_PeekOffsetBytes (& p_sys -> bytestream ,12 ,NULL ,0 )
water	35:16	0:0	8	VLC_SUCCESS
op	35:28	0:0	8	!=
call	35:31	35:86	8	block_PeekOffsetBytes
arg	35:54	35:72	9	&p_sys->bytestream
op	35:54	0:0	10	&
water	35:55	0:0	10	p_sys
op	35:60	0:0	10	->
water	35:62	0:0	10	bytestream
arg	35:74	35:76	9	12
water	35:74	0:0	10	12
arg	35:78	35:82	9	NULL
water	35:78	0:0	10	NULL
arg	35:84	35:86	9	0
water	35:84	0:0	10	0
stmts	36:12	40:12	7	
water	36:12	0:0	8	{
return	39:16	39:27	8	NULL
water	39:23	0:0	9	NULL
water	40:12	0:0	8	}
if	41:12	52:12	6	(!dirac_UnpackParseInfo (& pu ,& p_sys -> bytestream ,0 ) || ! pu . u_next_offset || ( p_sys -> u_last_npo != pu . u_prev_offset ))
cond	41:16	42:75	7	!dirac_UnpackParseInfo (& pu ,& p_sys -> bytestream ,0 ) || ! pu . u_next_offset || ( p_sys -> u_last_npo != pu . u_prev_offset )
op	41:16	0:0	8	!
call	41:17	41:67	8	dirac_UnpackParseInfo
arg	41:40	41:43	9	&pu
op	41:40	0:0	10	&
water	41:41	0:0	10	pu
arg	41:45	41:63	9	&p_sys->bytestream
op	41:45	0:0	10	&
water	41:46	0:0	10	p_sys
op	41:51	0:0	10	->
water	41:53	0:0	10	bytestream
arg	41:65	41:67	9	0
water	41:65	0:0	10	0
op	42:13	0:0	8	||
op	42:16	0:0	8	!
water	42:17	0:0	8	pu
op	42:19	0:0	8	.
water	42:20	0:0	8	u_next_offset
op	42:34	0:0	8	||
water	42:37	0:0	8	(
water	42:38	0:0	8	p_sys
op	42:43	0:0	8	->
water	42:45	0:0	8	u_last_npo
op	42:56	0:0	8	!=
water	42:59	0:0	8	pu
op	42:61	0:0	8	.
water	42:62	0:0	8	u_prev_offset
water	42:75	0:0	8	)
stmts	43:12	52:12	7	
water	43:12	0:0	8	{
water	50:16	0:0	8	p_sys
op	50:21	0:0	8	->
water	50:23	0:0	8	i_state
op	50:31	0:0	8	=
water	50:33	0:0	8	NOT_SYNCED
water	50:43	0:0	8	;
break	51:16	51:21	8	
water	52:12	0:0	8	}
if	53:12	60:12	6	(pu . u_next_offset > 1024 * 1024)
cond	53:16	53:40	7	pu . u_next_offset > 1024 * 1024
water	53:16	0:0	8	pu
op	53:18	0:0	8	.
water	53:19	0:0	8	u_next_offset
op	53:33	0:0	8	>
water	53:35	0:0	8	1024
op	53:39	0:0	8	*
water	53:40	0:0	8	1024
stmts	54:12	60:12	7	
water	54:12	0:0	8	{
water	58:16	0:0	8	p_sys
op	58:21	0:0	8	->
water	58:23	0:0	8	i_state
op	58:31	0:0	8	=
water	58:33	0:0	8	TRY_SYNC
water	58:41	0:0	8	;
break	59:16	59:21	8	
water	60:12	0:0	8	}
if	62:12	66:12	6	(VLC_SUCCESS !=block_PeekOffsetBytes (& p_sys -> bytestream ,pu . u_next_offset + 12 ,NULL ,0 ))
cond	62:16	63:90	7	VLC_SUCCESS !=block_PeekOffsetBytes (& p_sys -> bytestream ,pu . u_next_offset + 12 ,NULL ,0 )
water	62:16	0:0	8	VLC_SUCCESS
op	62:28	0:0	8	!=
call	63:16	63:90	8	block_PeekOffsetBytes
arg	63:39	63:57	9	&p_sys->bytestream
op	63:39	0:0	10	&
water	63:40	0:0	10	p_sys
op	63:45	0:0	10	->
water	63:47	0:0	10	bytestream
arg	63:59	63:80	9	pu.u_next_offset+12
water	63:59	0:0	10	pu
op	63:61	0:0	10	.
water	63:62	0:0	10	u_next_offset
op	63:76	0:0	10	+
water	63:78	0:0	10	12
arg	63:82	63:86	9	NULL
water	63:82	0:0	10	NULL
arg	63:88	63:90	9	0
water	63:88	0:0	10	0
stmts	64:12	66:12	7	
water	64:12	0:0	8	{
return	65:16	65:27	8	NULL
water	65:23	0:0	9	NULL
water	66:12	0:0	8	}
water	68:12	0:0	6	p_sys
op	68:17	0:0	6	->
water	68:19	0:0	6	i_offset
op	68:28	0:0	6	=
water	68:30	0:0	6	pu
op	68:32	0:0	6	.
water	68:33	0:0	6	u_next_offset
water	68:46	0:0	6	;
label	70:8	70:21	6	case TRY_SYNC :
water	71:8	0:0	6	{
if	72:12	73:30	6	(! p_sys -> i_offset)
cond	72:16	72:24	7	! p_sys -> i_offset
op	72:16	0:0	8	!
water	72:17	0:0	8	p_sys
op	72:22	0:0	8	->
water	72:24	0:0	8	i_offset
stmts	73:16	73:30	7	
goto	73:16	73:30	8	sync_fail
water	73:21	0:0	9	sync_fail
decl	74:12	74:29	6	parse_info_t	pu_a
decl	75:12	75:88	6	bool	a
op	75:19	0:0	6	=
call	75:21	75:87	7	dirac_UnpackParseInfo
arg	75:44	75:49	8	&pu_a
op	75:44	0:0	9	&
water	75:45	0:0	9	pu_a
arg	75:51	75:69	8	&p_sys->bytestream
op	75:51	0:0	9	&
water	75:52	0:0	9	p_sys
op	75:57	0:0	9	->
water	75:59	0:0	9	bytestream
arg	75:71	75:87	8	p_sys->i_offset
water	75:71	0:0	9	p_sys
op	75:76	0:0	9	->
water	75:78	0:0	9	i_offset
if	76:12	77:30	6	(! a || ( pu_a . u_prev_offset > p_sys -> i_offset ))
cond	76:16	76:59	7	! a || ( pu_a . u_prev_offset > p_sys -> i_offset )
op	76:16	0:0	8	!
water	76:17	0:0	8	a
op	76:19	0:0	8	||
water	76:22	0:0	8	(
water	76:23	0:0	8	pu_a
op	76:27	0:0	8	.
water	76:28	0:0	8	u_prev_offset
op	76:42	0:0	8	>
water	76:44	0:0	8	p_sys
op	76:49	0:0	8	->
water	76:51	0:0	8	i_offset
water	76:59	0:0	8	)
stmts	77:16	77:30	7	
goto	77:16	77:30	8	sync_fail
water	77:21	0:0	9	sync_fail
if	78:12	88:12	6	(! pu_a . u_prev_offset)
cond	78:16	78:22	7	! pu_a . u_prev_offset
op	78:16	0:0	8	!
water	78:17	0:0	8	pu_a
op	78:21	0:0	8	.
water	78:22	0:0	8	u_prev_offset
stmts	79:12	88:12	7	
water	79:12	0:0	8	{
if	80:16	83:16	8	(p_sys -> i_state == TRY_SYNC)
cond	80:20	80:38	9	p_sys -> i_state == TRY_SYNC
water	80:20	0:0	10	p_sys
op	80:25	0:0	10	->
water	80:27	0:0	10	i_state
op	80:35	0:0	10	==
water	80:38	0:0	10	TRY_SYNC
stmts	81:16	83:16	9	
water	81:16	0:0	10	{
goto	82:20	82:34	10	sync_fail
water	82:25	0:0	11	sync_fail
water	83:16	0:0	10	}
water	87:16	0:0	8	pu_a
op	87:20	0:0	8	.
water	87:21	0:0	8	u_prev_offset
op	87:35	0:0	8	=
water	87:37	0:0	8	pu
op	87:39	0:0	8	.
water	87:40	0:0	8	u_next_offset
water	87:53	0:0	8	;
water	88:12	0:0	8	}
decl	89:12	89:36	6	parse_info_t	*pu_b
op	89:31	0:0	6	=
op	89:33	0:0	6	&
water	89:34	0:0	6	pu
decl	90:12	90:108	6	bool	b
op	90:19	0:0	6	=
call	90:21	90:107	7	dirac_UnpackParseInfo
arg	90:44	90:48	8	pu_b
water	90:44	0:0	9	pu_b
arg	90:50	90:68	8	&p_sys->bytestream
op	90:50	0:0	9	&
water	90:51	0:0	9	p_sys
op	90:56	0:0	9	->
water	90:58	0:0	9	bytestream
arg	90:70	90:107	8	p_sys->i_offset-pu_a.u_prev_offset
water	90:70	0:0	9	p_sys
op	90:75	0:0	9	->
water	90:77	0:0	9	i_offset
op	90:86	0:0	9	-
water	90:88	0:0	9	pu_a
op	90:92	0:0	9	.
water	90:93	0:0	9	u_prev_offset
if	91:12	96:12	6	(! b || ( pu_b -> u_next_offset && pu_a . u_prev_offset != pu_b -> u_next_offset ))
cond	91:16	91:87	7	! b || ( pu_b -> u_next_offset && pu_a . u_prev_offset != pu_b -> u_next_offset )
op	91:16	0:0	8	!
water	91:17	0:0	8	b
op	91:19	0:0	8	||
water	91:22	0:0	8	(
water	91:23	0:0	8	pu_b
op	91:27	0:0	8	->
water	91:29	0:0	8	u_next_offset
op	91:43	0:0	8	&&
water	91:46	0:0	8	pu_a
op	91:50	0:0	8	.
water	91:51	0:0	8	u_prev_offset
op	91:65	0:0	8	!=
water	91:68	0:0	8	pu_b
op	91:72	0:0	8	->
water	91:74	0:0	8	u_next_offset
water	91:87	0:0	8	)
stmts	92:12	96:12	7	
water	92:12	0:0	8	{
goto	95:16	95:30	8	sync_fail
water	95:21	0:0	9	sync_fail
water	96:12	0:0	8	}
water	97:12	0:0	6	p_sys
op	97:17	0:0	6	->
water	97:19	0:0	6	u_last_npo
op	97:30	0:0	6	=
water	97:32	0:0	6	pu_b
op	97:36	0:0	6	->
water	97:38	0:0	6	u_next_offset
water	97:51	0:0	6	;
if	98:12	98:79	6	(! pu_b -> u_next_offset)
cond	98:16	98:23	7	! pu_b -> u_next_offset
op	98:16	0:0	8	!
water	98:17	0:0	8	pu_b
op	98:21	0:0	8	->
water	98:23	0:0	8	u_next_offset
stmts	98:39	98:79	7	
water	98:39	0:0	8	pu_b
op	98:43	0:0	8	->
water	98:45	0:0	8	u_next_offset
op	98:59	0:0	8	=
water	98:61	0:0	8	pu_a
op	98:65	0:0	8	.
water	98:66	0:0	8	u_prev_offset
water	98:79	0:0	8	;
water	100:12	0:0	6	p_sys
op	100:17	0:0	6	->
water	100:19	0:0	6	i_offset
op	100:28	0:0	6	-=
water	100:31	0:0	6	pu_a
op	100:35	0:0	6	.
water	100:36	0:0	6	u_prev_offset
water	100:49	0:0	6	;
water	101:12	0:0	6	p_sys
op	101:17	0:0	6	->
water	101:19	0:0	6	i_state
op	101:27	0:0	6	=
water	101:29	0:0	6	SYNCED
water	101:35	0:0	6	;
break	102:12	102:17	6	
water	103:8	0:0	6	}
label	104:0	104:9	6	sync_fail :
if	105:12	105:62	6	(p_sys -> i_state == SYNCED)
cond	105:16	105:34	7	p_sys -> i_state == SYNCED
water	105:16	0:0	8	p_sys
op	105:21	0:0	8	->
water	105:23	0:0	8	i_state
op	105:31	0:0	8	==
water	105:34	0:0	8	SYNCED
stmts	105:43	105:62	7	
water	105:43	0:0	8	p_sys
op	105:48	0:0	8	->
water	105:50	0:0	8	i_offset
op	105:59	0:0	8	=
water	105:61	0:0	8	0
water	105:62	0:0	8	;
water	106:12	0:0	6	p_sys
op	106:17	0:0	6	->
water	106:19	0:0	6	i_offset
op	106:27	0:0	6	++
water	106:29	0:0	6	;
water	107:12	0:0	6	p_sys
op	107:17	0:0	6	->
water	107:19	0:0	6	i_state
op	107:27	0:0	6	=
water	107:29	0:0	6	NOT_SYNCED
water	107:39	0:0	6	;
break	108:12	108:17	6	
label	109:8	109:15	6	default :
water	109:16	0:0	6	;
water	110:8	0:0	6	}
water	111:4	0:0	4	}
water	111:39	0:0	2	;
call	116:4	116:52	2	dirac_RecoverTimestamps
arg	116:29	116:34	3	p_dec
water	116:29	0:0	4	p_dec
arg	116:36	116:52	3	p_sys->i_offset
water	116:36	0:0	4	p_sys
op	116:41	0:0	4	->
water	116:43	0:0	4	i_offset
water	116:53	0:0	2	;
call	118:4	118:57	2	block_SkipBytes
arg	118:21	118:39	3	&p_sys->bytestream
op	118:21	0:0	4	&
water	118:22	0:0	4	p_sys
op	118:27	0:0	4	->
water	118:29	0:0	4	bytestream
arg	118:41	118:57	3	p_sys->i_offset
water	118:41	0:0	4	p_sys
op	118:46	0:0	4	->
water	118:48	0:0	4	i_offset
water	118:58	0:0	2	;
call	119:4	119:46	2	block_BytestreamFlush
arg	119:27	119:46	3	&p_sys->bytestream
op	119:27	0:0	4	&
water	119:28	0:0	4	p_sys
op	119:33	0:0	4	->
water	119:35	0:0	4	bytestream
water	119:47	0:0	2	;
water	120:4	0:0	2	p_sys
op	120:9	0:0	2	->
water	120:11	0:0	2	i_offset
op	120:20	0:0	2	=
water	120:22	0:0	2	0
water	120:23	0:0	2	;
decl	122:4	122:54	2	block_t	*p_block
op	122:21	0:0	2	=
call	122:23	122:53	3	block_Alloc
arg	122:36	122:53	4	pu.u_next_offset
water	122:36	0:0	5	pu
op	122:38	0:0	5	.
water	122:39	0:0	5	u_next_offset
if	123:4	124:19	2	(! p_block)
cond	123:8	123:9	3	! p_block
op	123:8	0:0	4	!
water	123:9	0:0	4	p_block
stmts	124:8	124:19	3	
return	124:8	124:19	4	NULL
water	124:15	0:0	5	NULL
water	125:4	0:0	2	p_block
op	125:11	0:0	2	->
water	125:13	0:0	2	i_pts
op	125:19	0:0	2	=
water	125:21	0:0	2	p_sys
op	125:26	0:0	2	->
water	125:28	0:0	2	i_sync_pts
water	125:38	0:0	2	;
water	126:4	0:0	2	p_block
op	126:11	0:0	2	->
water	126:13	0:0	2	i_dts
op	126:19	0:0	2	=
water	126:21	0:0	2	p_sys
op	126:26	0:0	2	->
water	126:28	0:0	2	i_sync_dts
water	126:38	0:0	2	;
water	127:4	0:0	2	p_sys
op	127:9	0:0	2	->
water	127:11	0:0	2	i_sync_pts
op	127:22	0:0	2	=
water	127:24	0:0	2	p_sys
op	127:29	0:0	2	->
water	127:31	0:0	2	i_sync_dts
op	127:42	0:0	2	=
water	127:44	0:0	2	VLC_TS_INVALID
water	127:58	0:0	2	;
call	129:4	129:52	2	dirac_RecoverTimestamps
arg	129:29	129:34	3	p_dec
water	129:29	0:0	4	p_dec
arg	129:36	129:52	3	p_sys->i_offset
water	129:36	0:0	4	p_sys
op	129:41	0:0	4	->
water	129:43	0:0	4	i_offset
water	129:53	0:0	2	;
call	130:4	130:77	2	block_GetBytes
arg	130:20	130:38	3	&p_sys->bytestream
op	130:20	0:0	4	&
water	130:21	0:0	4	p_sys
op	130:26	0:0	4	->
water	130:28	0:0	4	bytestream
arg	130:40	130:57	3	p_block->p_buffer
water	130:40	0:0	4	p_block
op	130:47	0:0	4	->
water	130:49	0:0	4	p_buffer
arg	130:59	130:77	3	p_block->i_buffer
water	130:59	0:0	4	p_block
op	130:66	0:0	4	->
water	130:68	0:0	4	i_buffer
water	130:78	0:0	2	;
decl	132:4	132:64	2	dirac_block_encap_t	*p_dbe
op	132:31	0:0	2	=
call	132:33	132:63	3	dirac_NewBlockEncap
arg	132:54	132:63	4	&p_block
op	132:54	0:0	5	&
water	132:55	0:0	5	p_block
if	133:4	133:60	2	(p_dbe)
cond	133:8	133:8	3	p_dbe
water	133:8	0:0	4	p_dbe
stmts	133:16	133:60	3	
water	133:16	0:0	4	p_dbe
op	133:21	0:0	4	->
water	133:23	0:0	4	u_last_next_offset
op	133:42	0:0	4	=
water	133:44	0:0	4	pu
op	133:46	0:0	4	.
water	133:47	0:0	4	u_next_offset
water	133:60	0:0	4	;
return	134:4	134:18	2	p_block
water	134:11	0:0	3	p_block

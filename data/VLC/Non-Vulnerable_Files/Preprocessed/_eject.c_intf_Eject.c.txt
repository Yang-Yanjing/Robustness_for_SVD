func	2:0	51:0	0	static int	intf_Eject
params	2:21	0:0	1	
param	2:23	2:43	2	vlc_object_t *	p_this
param	2:45	2:68	2	const char *	psz_device
stmnts	4:4	49:23	1	
call	4:4	4:21	2	VLC_UNUSED
arg	4:15	4:21	3	p_this
water	4:15	0:0	4	p_this
water	4:22	0:0	2	;
decl	6:4	6:21	2	MCI_OPEN_PARMS	op
decl	7:4	7:17	2	DWORD	i_flags
decl	8:4	8:22	2	TCHAR	psz_drive[4]
call	9:4	9:43	2	memset
arg	9:12	9:15	3	&op
op	9:12	0:0	4	&
water	9:13	0:0	4	op
arg	9:17	9:18	3	0
water	9:17	0:0	4	0
arg	9:20	9:43	3	sizeof(MCI_OPEN_PARMS)
op	9:20	0:0	4	sizeof
water	9:26	0:0	4	(
water	9:27	0:0	4	MCI_OPEN_PARMS
water	9:41	0:0	4	)
water	9:44	0:0	2	;
water	10:4	0:0	2	op
op	10:6	0:0	2	.
water	10:7	0:0	2	lpstrDeviceType
op	10:23	0:0	2	=
water	10:25	0:0	2	(
water	10:26	0:0	2	LPCTSTR
water	10:33	0:0	2	)
water	10:34	0:0	2	MCI_DEVTYPE_CD_AUDIO
water	10:54	0:0	2	;
call	11:4	11:35	2	_tcscpy
arg	11:13	11:22	3	psz_drive
water	11:13	0:0	4	psz_drive
arg	11:24	11:35	3	TEXT("X:")
call	11:24	11:33	4	TEXT
arg	11:29	11:33	5	"X:"
water	11:29	0:0	6	"X:"
water	11:36	0:0	2	;
water	12:4	0:0	2	psz_drive
op	12:13	0:0	2	[
water	12:14	0:0	2	0
op	12:15	0:0	2	]
op	12:17	0:0	2	=
water	12:19	0:0	2	psz_device
op	12:29	0:0	2	[
water	12:30	0:0	2	0
op	12:31	0:0	2	]
water	12:32	0:0	2	;
water	13:4	0:0	2	op
op	13:6	0:0	2	.
water	13:7	0:0	2	lpstrElementName
op	13:24	0:0	2	=
water	13:26	0:0	2	psz_drive
water	13:35	0:0	2	;
water	15:4	0:0	2	i_flags
op	15:12	0:0	2	=
water	15:14	0:0	2	MCI_OPEN_TYPE
op	15:28	0:0	2	|
water	15:30	0:0	2	MCI_OPEN_TYPE_ID
op	15:47	0:0	2	|
water	16:14	0:0	2	MCI_OPEN_ELEMENT
op	16:31	0:0	2	|
water	16:33	0:0	2	MCI_OPEN_SHAREABLE
water	16:51	0:0	2	;
if	17:4	18:27	2	(mciSendCommand (0 ,MCI_OPEN ,i_flags ,( uintptr_t ) & op ))
cond	17:8	17:61	3	mciSendCommand (0 ,MCI_OPEN ,i_flags ,( uintptr_t ) & op )
call	17:8	17:61	4	mciSendCommand
arg	17:24	17:25	5	0
water	17:24	0:0	6	0
arg	17:27	17:35	5	MCI_OPEN
water	17:27	0:0	6	MCI_OPEN
arg	17:37	17:44	5	i_flags
water	17:37	0:0	6	i_flags
arg	17:46	17:61	5	(uintptr_t)&op
water	17:46	0:0	6	(
water	17:47	0:0	6	uintptr_t
water	17:56	0:0	6	)
op	17:57	0:0	6	&
water	17:58	0:0	6	op
stmts	18:8	18:27	3	
return	18:8	18:27	4	VLC_EGENERIC
water	18:15	0:0	5	VLC_EGENERIC
call	20:4	20:64	2	mciSendCommand
arg	20:20	20:32	3	op.wDeviceID
water	20:20	0:0	4	op
op	20:22	0:0	4	.
water	20:23	0:0	4	wDeviceID
arg	20:34	20:41	3	MCI_SET
water	20:34	0:0	4	MCI_SET
arg	20:43	20:60	3	MCI_SET_DOOR_OPEN
water	20:43	0:0	4	MCI_SET_DOOR_OPEN
arg	20:62	20:64	3	0
water	20:62	0:0	4	0
water	20:65	0:0	2	;
call	22:4	22:57	2	mciSendCommand
arg	22:20	22:32	3	op.wDeviceID
water	22:20	0:0	4	op
op	22:22	0:0	4	.
water	22:23	0:0	4	wDeviceID
arg	22:34	22:43	3	MCI_CLOSE
water	22:34	0:0	4	MCI_CLOSE
arg	22:45	22:53	3	MCI_WAIT
water	22:45	0:0	4	MCI_WAIT
arg	22:55	22:57	3	0
water	22:55	0:0	4	0
water	22:58	0:0	2	;
return	23:4	23:22	2	VLC_SUCCESS
water	23:11	0:0	3	VLC_SUCCESS
decl	26:4	26:58	2	int	fd
op	26:11	0:0	2	=
call	26:13	26:57	3	vlc_open
arg	26:23	26:33	4	psz_device
water	26:23	0:0	5	psz_device
arg	26:35	26:57	4	O_RDONLY|O_NONBLOCK
water	26:35	0:0	5	O_RDONLY
op	26:44	0:0	5	|
water	26:46	0:0	5	O_NONBLOCK
if	27:4	31:4	2	(fd == - 1)
cond	27:8	27:15	3	fd == - 1
water	27:8	0:0	4	fd
op	27:11	0:0	4	==
op	27:14	0:0	4	-
water	27:15	0:0	4	1
stmts	28:4	31:4	3	
water	28:4	0:0	4	{
call	29:8	29:64	4	msg_Err
arg	29:17	29:23	5	p_this
water	29:17	0:0	6	p_this
arg	29:25	29:51	5	"could not open device %s"
water	29:25	0:0	6	"could not open device %s"
arg	29:53	29:64	5	psz_device
water	29:53	0:0	6	psz_device
water	29:65	0:0	4	;
return	30:8	30:27	4	VLC_EGENERIC
water	30:15	0:0	5	VLC_EGENERIC
water	31:4	0:0	4	}
if	34:4	43:4	2	(ioctl (fd ,CDROMEJECT ,0 ) < 0 &&EjectSCSI (fd ))
cond	34:8	35:22	3	ioctl (fd ,CDROMEJECT ,0 ) < 0 &&EjectSCSI (fd )
call	34:8	34:33	4	ioctl
arg	34:15	34:17	5	fd
water	34:15	0:0	6	fd
arg	34:19	34:29	5	CDROMEJECT
water	34:19	0:0	6	CDROMEJECT
arg	34:31	34:33	5	0
water	34:31	0:0	6	0
op	34:35	0:0	4	<
water	34:37	0:0	4	0
op	35:5	0:0	4	&&
call	35:8	35:22	4	EjectSCSI
arg	35:19	35:22	5	fd
water	35:19	0:0	6	fd
stmts	37:4	43:4	3	
if	37:4	43:4	4	(ioctl (fd ,CDROMEJECT ,0 ) < 0)
cond	37:8	37:37	5	ioctl (fd ,CDROMEJECT ,0 ) < 0
call	37:8	37:33	6	ioctl
arg	37:15	37:17	7	fd
water	37:15	0:0	8	fd
arg	37:19	37:29	7	CDROMEJECT
water	37:19	0:0	8	CDROMEJECT
arg	37:31	37:33	7	0
water	37:31	0:0	8	0
op	37:35	0:0	6	<
water	37:37	0:0	6	0
stmts	39:4	43:4	5	
water	39:4	0:0	6	{
call	40:8	40:58	6	msg_Err
arg	40:17	40:23	7	p_this
water	40:17	0:0	8	p_this
arg	40:25	40:45	7	"could not eject %s"
water	40:25	0:0	8	"could not eject %s"
arg	40:47	40:58	7	psz_device
water	40:47	0:0	8	psz_device
water	40:59	0:0	6	;
call	41:8	41:18	6	close
arg	41:15	41:18	7	fd
water	41:15	0:0	8	fd
water	41:19	0:0	6	;
return	42:8	42:27	6	VLC_EGENERIC
water	42:15	0:0	7	VLC_EGENERIC
water	43:4	0:0	6	}
call	44:4	44:14	2	close
arg	44:11	44:14	3	fd
water	44:11	0:0	4	fd
water	44:15	0:0	2	;
return	45:4	45:22	2	VLC_SUCCESS
water	45:11	0:0	3	VLC_SUCCESS
call	47:4	47:27	2	VLC_UNUSED
arg	47:16	47:27	3	psz_device
water	47:16	0:0	4	psz_device
water	47:28	0:0	2	;
call	48:4	48:69	2	msg_Warn
arg	48:14	48:20	3	p_this
water	48:14	0:0	4	p_this
arg	48:22	48:69	3	"CD-Rom ejection unsupported on this platform"
water	48:22	0:0	4	"CD-Rom ejection unsupported on this platform"
water	48:70	0:0	2	;
return	49:4	49:23	2	VLC_EGENERIC
water	49:11	0:0	3	VLC_EGENERIC

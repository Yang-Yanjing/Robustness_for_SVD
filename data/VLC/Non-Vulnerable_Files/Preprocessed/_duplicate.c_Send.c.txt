func	2:0	35:0	0	static int	Send
params	2:15	0:0	1	
param	2:17	2:40	2	sout_stream_t *	p_stream
param	2:42	2:66	2	sout_stream_id_sys_t *	id
param	3:17	3:35	2	block_t *	p_buffer
stmnts	0:0	34:22	1	
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
decl	6:4	6:35	2	sout_stream_t	*p_dup_stream
decl	7:4	7:30	2	int	i_stream
while	9:4	33:4	2	(p_buffer)
cond	9:11	9:11	3	p_buffer
water	9:11	0:0	4	p_buffer
stmts	10:4	33:4	3	
water	10:4	0:0	4	{
decl	11:8	11:42	4	block_t	*p_next
op	11:24	0:0	4	=
water	11:26	0:0	4	p_buffer
op	11:34	0:0	4	->
water	11:36	0:0	4	p_next
water	12:8	0:0	4	p_buffer
op	12:16	0:0	4	->
water	12:18	0:0	4	p_next
op	12:25	0:0	4	=
water	12:27	0:0	4	NULL
water	12:31	0:0	4	;
for	13:8	22:8	4	(i_stream = 0 ;i_stream < p_sys -> i_nb_streams - 1;i_stream ++)
forinit	13:13	13:25	5	i_stream = 0 ;
water	13:13	0:0	6	i_stream
op	13:22	0:0	6	=
water	13:24	0:0	6	0
water	13:25	0:0	6	;
cond	13:27	13:60	5	i_stream < p_sys -> i_nb_streams - 1
water	13:27	0:0	6	i_stream
op	13:36	0:0	6	<
water	13:38	0:0	6	p_sys
op	13:43	0:0	6	->
water	13:45	0:0	6	i_nb_streams
op	13:58	0:0	6	-
water	13:60	0:0	6	1
forexpr	13:63	13:71	5	i_stream ++
water	13:63	0:0	6	i_stream
op	13:71	0:0	6	++
stmts	14:8	22:8	5	
water	14:8	0:0	6	{
water	15:12	0:0	6	p_dup_stream
op	15:25	0:0	6	=
water	15:27	0:0	6	p_sys
op	15:32	0:0	6	->
water	15:34	0:0	6	pp_streams
op	15:44	0:0	6	[
water	15:45	0:0	6	i_stream
op	15:53	0:0	6	]
water	15:54	0:0	6	;
if	16:12	21:12	6	(id -> pp_ids [ i_stream ])
cond	16:16	16:35	7	id -> pp_ids [ i_stream ]
water	16:16	0:0	8	id
op	16:18	0:0	8	->
water	16:20	0:0	8	pp_ids
op	16:26	0:0	8	[
water	16:27	0:0	8	i_stream
op	16:35	0:0	8	]
stmts	17:12	21:12	7	
water	17:12	0:0	8	{
decl	18:16	18:60	8	block_t	*p_dup
op	18:31	0:0	8	=
call	18:33	18:59	9	block_Duplicate
arg	18:50	18:59	10	p_buffer
water	18:50	0:0	11	p_buffer
if	19:16	20:82	8	(p_dup)
cond	19:20	19:20	9	p_dup
water	19:20	0:0	10	p_dup
stmts	20:20	20:82	9	
call	20:20	20:81	10	sout_StreamIdSend
arg	20:39	20:51	11	p_dup_stream
water	20:39	0:0	12	p_dup_stream
arg	20:53	20:73	11	id->pp_ids[i_stream]
water	20:53	0:0	12	id
op	20:55	0:0	12	->
water	20:57	0:0	12	pp_ids
op	20:63	0:0	12	[
water	20:64	0:0	12	i_stream
op	20:72	0:0	12	]
arg	20:75	20:81	11	p_dup
water	20:75	0:0	12	p_dup
water	20:82	0:0	10	;
water	21:12	0:0	8	}
water	22:8	0:0	6	}
if	23:8	27:8	4	(i_stream < p_sys -> i_nb_streams && id -> pp_ids [ i_stream ])
cond	23:12	23:65	5	i_stream < p_sys -> i_nb_streams && id -> pp_ids [ i_stream ]
water	23:12	0:0	6	i_stream
op	23:21	0:0	6	<
water	23:23	0:0	6	p_sys
op	23:28	0:0	6	->
water	23:30	0:0	6	i_nb_streams
op	23:43	0:0	6	&&
water	23:46	0:0	6	id
op	23:48	0:0	6	->
water	23:50	0:0	6	pp_ids
op	23:56	0:0	6	[
water	23:57	0:0	6	i_stream
op	23:65	0:0	6	]
stmts	24:8	27:8	5	
water	24:8	0:0	6	{
water	25:12	0:0	6	p_dup_stream
op	25:25	0:0	6	=
water	25:27	0:0	6	p_sys
op	25:32	0:0	6	->
water	25:34	0:0	6	pp_streams
op	25:44	0:0	6	[
water	25:45	0:0	6	i_stream
op	25:53	0:0	6	]
water	25:54	0:0	6	;
call	26:12	26:76	6	sout_StreamIdSend
arg	26:31	26:43	7	p_dup_stream
water	26:31	0:0	8	p_dup_stream
arg	26:45	26:65	7	id->pp_ids[i_stream]
water	26:45	0:0	8	id
op	26:47	0:0	8	->
water	26:49	0:0	8	pp_ids
op	26:55	0:0	8	[
water	26:56	0:0	8	i_stream
op	26:64	0:0	8	]
arg	26:67	26:76	7	p_buffer
water	26:67	0:0	8	p_buffer
water	26:77	0:0	6	;
water	27:8	0:0	6	}
else	28:8	31:8	4
stmts	29:8	31:8	5	
water	29:8	0:0	6	{
call	30:12	30:36	6	block_Release
arg	30:27	30:36	7	p_buffer
water	30:27	0:0	8	p_buffer
water	30:37	0:0	6	;
water	31:8	0:0	6	}
water	32:8	0:0	4	p_buffer
op	32:17	0:0	4	=
water	32:19	0:0	4	p_next
water	32:25	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:22	2	VLC_SUCCESS
water	34:11	0:0	3	VLC_SUCCESS

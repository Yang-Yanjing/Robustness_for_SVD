func	1:0	69:0	0	static enum raw1394_iso_disposition	Raw1394Handler
params	2:14	0:0	1	
param	2:15	2:37	2	raw1394handle_t	handle
param	2:39	2:58	2	unsigned char *	data
param	3:8	3:27	2	unsigned int	length
param	3:29	3:50	2	unsigned char	channel
param	4:8	4:25	2	unsigned char	tag
param	4:27	4:43	2	unsigned char	sy
param	4:45	4:63	2	unsigned int	cycle
param	5:8	5:28	2	unsigned int	dropped
stmnts	0:0	68:12	1	
decl	7:4	7:29	2	access_t	*p_access
op	7:23	0:0	2	=
water	7:25	0:0	2	NULL
decl	8:4	8:30	2	access_sys_t	*p_sys
op	8:24	0:0	2	=
water	8:26	0:0	2	NULL
decl	9:4	9:27	2	block_t	*p_block
op	9:21	0:0	2	=
water	9:23	0:0	2	NULL
call	10:4	10:22	2	VLC_UNUSED
arg	10:15	10:22	3	channel
water	10:15	0:0	4	channel
water	10:23	0:0	2	;
call	10:25	10:39	2	VLC_UNUSED
arg	10:36	10:39	3	tag
water	10:36	0:0	4	tag
water	10:40	0:0	2	;
call	11:4	11:17	2	VLC_UNUSED
arg	11:15	11:17	3	sy
water	11:15	0:0	4	sy
water	11:18	0:0	2	;
call	11:20	11:36	2	VLC_UNUSED
arg	11:31	11:36	3	cycle
water	11:31	0:0	4	cycle
water	11:37	0:0	2	;
call	11:39	11:57	2	VLC_UNUSED
arg	11:50	11:57	3	dropped
water	11:50	0:0	4	dropped
water	11:58	0:0	2	;
water	12:4	0:0	2	p_access
op	12:13	0:0	2	=
water	12:15	0:0	2	(
water	12:16	0:0	2	access_t
op	12:25	0:0	2	*
water	12:26	0:0	2	)
call	12:28	12:57	2	raw1394_get_userdata
arg	12:50	12:57	3	handle
water	12:50	0:0	4	handle
water	12:58	0:0	2	;
if	13:4	13:28	2	(! p_access)
cond	13:8	13:9	3	! p_access
op	13:8	0:0	4	!
water	13:9	0:0	4	p_access
stmts	13:20	13:28	3	
return	13:20	13:28	4	0
water	13:27	0:0	5	0
water	14:4	0:0	2	p_sys
op	14:10	0:0	2	=
water	14:12	0:0	2	p_access
op	14:20	0:0	2	->
water	14:22	0:0	2	p_sys
water	14:27	0:0	2	;
if	16:4	67:4	2	(length > 16)
cond	16:8	16:17	3	length > 16
water	16:8	0:0	4	length
op	16:15	0:0	4	>
water	16:17	0:0	4	16
stmts	17:4	67:4	3	
water	17:4	0:0	4	{
decl	18:8	18:36	4	unsigned char	*p
op	18:26	0:0	4	=
water	18:28	0:0	4	data
op	18:33	0:0	4	+
water	18:35	0:0	4	8
decl	19:8	19:38	4	int	section_type
op	19:25	0:0	4	=
water	19:27	0:0	4	p
op	19:28	0:0	4	[
water	19:30	0:0	4	0
op	19:32	0:0	4	]
op	19:34	0:0	4	>>
water	19:37	0:0	4	5
decl	20:8	20:38	4	int	dif_sequence
op	20:25	0:0	4	=
water	20:27	0:0	4	p
op	20:28	0:0	4	[
water	20:30	0:0	4	1
op	20:32	0:0	4	]
op	20:34	0:0	4	>>
water	20:37	0:0	4	4
decl	21:8	21:30	4	int	dif_block
op	21:22	0:0	4	=
water	21:24	0:0	4	p
op	21:25	0:0	4	[
water	21:27	0:0	4	2
op	21:29	0:0	4	]
call	22:8	22:43	4	vlc_mutex_lock
arg	22:24	22:43	5	&p_sys->p_ev->lock
op	22:24	0:0	6	&
water	22:25	0:0	6	p_sys
op	22:30	0:0	6	->
water	22:32	0:0	6	p_ev
op	22:36	0:0	6	->
water	22:38	0:0	6	lock
water	22:44	0:0	4	;
if	25:8	38:8	4	(( section_type == 0 ) && ( dif_sequence == 0 ))
cond	25:12	25:53	5	( section_type == 0 ) && ( dif_sequence == 0 )
water	25:12	0:0	6	(
water	25:13	0:0	6	section_type
op	25:26	0:0	6	==
water	25:29	0:0	6	0
water	25:30	0:0	6	)
op	25:32	0:0	6	&&
water	25:35	0:0	6	(
water	25:36	0:0	6	dif_sequence
op	25:49	0:0	6	==
water	25:52	0:0	6	0
water	25:53	0:0	6	)
stmts	26:8	38:8	5	
water	26:8	0:0	6	{
call	27:12	27:41	6	vlc_mutex_lock
arg	27:28	27:41	7	&p_sys->lock
op	27:28	0:0	8	&
water	27:29	0:0	8	p_sys
op	27:34	0:0	8	->
water	27:36	0:0	8	lock
water	27:42	0:0	6	;
if	28:12	33:12	6	(p_sys -> p_ev -> p_frame)
cond	28:16	28:29	7	p_sys -> p_ev -> p_frame
water	28:16	0:0	8	p_sys
op	28:21	0:0	8	->
water	28:23	0:0	8	p_ev
op	28:27	0:0	8	->
water	28:29	0:0	8	p_frame
stmts	29:12	33:12	7	
water	29:12	0:0	8	{
call	32:16	32:73	8	block_ChainAppend
arg	32:35	32:50	9	&p_sys->p_frame
op	32:35	0:0	10	&
water	32:36	0:0	10	p_sys
op	32:41	0:0	10	->
water	32:43	0:0	10	p_frame
arg	32:52	32:73	9	p_sys->p_ev->p_frame
water	32:52	0:0	10	p_sys
op	32:57	0:0	10	->
water	32:59	0:0	10	p_ev
op	32:63	0:0	10	->
water	32:65	0:0	10	p_frame
water	32:74	0:0	8	;
water	33:12	0:0	8	}
water	35:12	0:0	6	p_sys
op	35:17	0:0	6	->
water	35:19	0:0	6	p_ev
op	35:23	0:0	6	->
water	35:25	0:0	6	p_frame
op	35:33	0:0	6	=
call	35:35	35:55	6	block_Alloc
arg	35:48	35:55	7	144000
water	35:48	0:0	8	144000
water	35:56	0:0	6	;
water	36:12	0:0	6	p_sys
op	36:17	0:0	6	->
water	36:19	0:0	6	p_ev
op	36:23	0:0	6	->
water	36:25	0:0	6	pp_last
op	36:33	0:0	6	=
op	36:35	0:0	6	&
water	36:36	0:0	6	p_sys
op	36:41	0:0	6	->
water	36:43	0:0	6	p_frame
water	36:50	0:0	6	;
call	37:12	37:43	6	vlc_mutex_unlock
arg	37:30	37:43	7	&p_sys->lock
op	37:30	0:0	8	&
water	37:31	0:0	8	p_sys
op	37:36	0:0	8	->
water	37:38	0:0	8	lock
water	37:44	0:0	6	;
water	38:8	0:0	6	}
water	39:8	0:0	4	p_block
op	39:16	0:0	4	=
water	39:18	0:0	4	p_sys
op	39:23	0:0	4	->
water	39:25	0:0	4	p_ev
op	39:29	0:0	4	->
water	39:31	0:0	4	p_frame
water	39:38	0:0	4	;
if	40:8	65:8	4	(p_block)
cond	40:12	40:12	5	p_block
water	40:12	0:0	6	p_block
stmts	41:8	65:8	5	
water	41:8	0:0	6	{
switch	42:12	64:12	6	(section_type)
cond	42:21	42:21	7	section_type
water	42:21	0:0	8	section_type
stmts	43:12	64:12	7	
water	43:12	0:0	8	{
label	44:12	44:18	8	case 0 :
call	46:16	46:76	8	memcpy
arg	46:24	46:67	9	p_block->p_buffer+dif_sequence*150*80
water	46:24	0:0	10	p_block
op	46:31	0:0	10	->
water	46:33	0:0	10	p_buffer
op	46:42	0:0	10	+
water	46:44	0:0	10	dif_sequence
op	46:57	0:0	10	*
water	46:59	0:0	10	150
op	46:63	0:0	10	*
water	46:65	0:0	10	80
arg	46:69	46:70	9	p
water	46:69	0:0	10	p
arg	46:72	46:76	9	480
water	46:72	0:0	10	480
water	46:77	0:0	8	;
break	47:16	47:21	8	
label	48:12	48:18	8	case 1 :
call	49:16	49:101	8	memcpy
arg	49:24	49:92	9	p_block->p_buffer+dif_sequence*150*80+(1+dif_block)*80
water	49:24	0:0	10	p_block
op	49:31	0:0	10	->
water	49:33	0:0	10	p_buffer
op	49:42	0:0	10	+
water	49:44	0:0	10	dif_sequence
op	49:57	0:0	10	*
water	49:59	0:0	10	150
op	49:63	0:0	10	*
water	49:65	0:0	10	80
op	49:68	0:0	10	+
water	49:70	0:0	10	(
water	49:72	0:0	10	1
op	49:74	0:0	10	+
water	49:76	0:0	10	dif_block
water	49:86	0:0	10	)
op	49:88	0:0	10	*
water	49:90	0:0	10	80
arg	49:94	49:95	9	p
water	49:94	0:0	10	p
arg	49:97	49:101	9	480
water	49:97	0:0	10	480
water	49:102	0:0	8	;
break	50:16	50:21	8	
label	51:12	51:18	8	case 2 :
call	52:16	52:101	8	memcpy
arg	52:24	52:92	9	p_block->p_buffer+dif_sequence*150*80+(3+dif_block)*80
water	52:24	0:0	10	p_block
op	52:31	0:0	10	->
water	52:33	0:0	10	p_buffer
op	52:42	0:0	10	+
water	52:44	0:0	10	dif_sequence
op	52:57	0:0	10	*
water	52:59	0:0	10	150
op	52:63	0:0	10	*
water	52:65	0:0	10	80
op	52:68	0:0	10	+
water	52:70	0:0	10	(
water	52:72	0:0	10	3
op	52:74	0:0	10	+
water	52:76	0:0	10	dif_block
water	52:86	0:0	10	)
op	52:88	0:0	10	*
water	52:90	0:0	10	80
arg	52:94	52:95	9	p
water	52:94	0:0	10	p
arg	52:97	52:101	9	480
water	52:97	0:0	10	480
water	52:102	0:0	8	;
break	53:16	53:21	8	
label	54:12	54:18	8	case 3 :
call	55:16	55:106	8	memcpy
arg	55:24	55:97	9	p_block->p_buffer+dif_sequence*150*80+(6+dif_block*16)*80
water	55:24	0:0	10	p_block
op	55:31	0:0	10	->
water	55:33	0:0	10	p_buffer
op	55:42	0:0	10	+
water	55:44	0:0	10	dif_sequence
op	55:57	0:0	10	*
water	55:59	0:0	10	150
op	55:63	0:0	10	*
water	55:65	0:0	10	80
op	55:68	0:0	10	+
water	55:70	0:0	10	(
water	55:72	0:0	10	6
op	55:74	0:0	10	+
water	55:76	0:0	10	dif_block
op	55:86	0:0	10	*
water	55:88	0:0	10	16
water	55:91	0:0	10	)
op	55:93	0:0	10	*
water	55:95	0:0	10	80
arg	55:99	55:100	9	p
water	55:99	0:0	10	p
arg	55:102	55:106	9	480
water	55:102	0:0	10	480
water	55:107	0:0	8	;
break	56:16	56:21	8	
label	57:12	57:18	8	case 4 :
call	58:16	58:122	8	memcpy
arg	58:24	58:113	9	p_block->p_buffer+dif_sequence*150*80+(7+(dif_block/15)+dif_block)*80
water	58:24	0:0	10	p_block
op	58:31	0:0	10	->
water	58:33	0:0	10	p_buffer
op	58:42	0:0	10	+
water	58:44	0:0	10	dif_sequence
op	58:57	0:0	10	*
water	58:59	0:0	10	150
op	58:63	0:0	10	*
water	58:65	0:0	10	80
op	58:68	0:0	10	+
water	58:70	0:0	10	(
water	58:72	0:0	10	7
op	58:74	0:0	10	+
water	58:76	0:0	10	(
water	58:78	0:0	10	dif_block
op	58:88	0:0	10	/
water	58:90	0:0	10	15
water	58:93	0:0	10	)
op	58:95	0:0	10	+
water	58:97	0:0	10	dif_block
water	58:107	0:0	10	)
op	58:109	0:0	10	*
water	58:111	0:0	10	80
arg	58:115	58:116	9	p
water	58:115	0:0	10	p
arg	58:118	58:122	9	480
water	58:118	0:0	10	480
water	58:123	0:0	8	;
break	59:16	59:21	8	
label	60:12	60:19	8	default :
call	61:16	61:39	8	block_Release
arg	61:31	61:39	9	p_block
water	61:31	0:0	10	p_block
water	61:40	0:0	8	;
water	62:16	0:0	8	p_block
op	62:24	0:0	8	=
water	62:26	0:0	8	NULL
water	62:30	0:0	8	;
break	63:16	63:21	8	
water	64:12	0:0	8	}
water	65:8	0:0	6	}
call	66:8	66:45	4	vlc_mutex_unlock
arg	66:26	66:45	5	&p_sys->p_ev->lock
op	66:26	0:0	6	&
water	66:27	0:0	6	p_sys
op	66:32	0:0	6	->
water	66:34	0:0	6	p_ev
op	66:38	0:0	6	->
water	66:40	0:0	6	lock
water	66:46	0:0	4	;
water	67:4	0:0	4	}
return	68:4	68:12	2	0
water	68:11	0:0	3	0

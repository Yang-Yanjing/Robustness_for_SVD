func	2:0	29:0	0	static void	PATCallBack
params	2:23	0:0	1	
param	2:25	2:50	2	scan_session_t *	p_session
param	2:52	2:72	2	dvbpsi_pat_t *	p_pat
stmnts	0:0	28:4	1	
decl	4:4	4:42	2	vlc_object_t	*p_obj
op	4:24	0:0	2	=
water	4:26	0:0	2	p_session
op	4:35	0:0	2	->
water	4:37	0:0	2	p_obj
call	5:4	5:34	2	msg_Dbg
arg	5:13	5:18	3	p_obj
water	5:13	0:0	4	p_obj
arg	5:20	5:34	3	"PATCallBack"
water	5:20	0:0	4	"PATCallBack"
water	5:35	0:0	2	;
if	7:4	11:4	2	(p_session -> p_pat && p_session -> p_pat -> b_current_next)
cond	7:8	7:46	3	p_session -> p_pat && p_session -> p_pat -> b_current_next
water	7:8	0:0	4	p_session
op	7:17	0:0	4	->
water	7:19	0:0	4	p_pat
op	7:25	0:0	4	&&
water	7:28	0:0	4	p_session
op	7:37	0:0	4	->
water	7:39	0:0	4	p_pat
op	7:44	0:0	4	->
water	7:46	0:0	4	b_current_next
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
call	9:8	9:43	4	dvbpsi_DeletePAT
arg	9:26	9:43	5	p_session->p_pat
water	9:26	0:0	6	p_session
op	9:35	0:0	6	->
water	9:37	0:0	6	p_pat
water	9:44	0:0	4	;
water	10:8	0:0	4	p_session
op	10:17	0:0	4	->
water	10:19	0:0	4	p_pat
op	10:25	0:0	4	=
water	10:27	0:0	4	NULL
water	10:31	0:0	4	;
water	11:4	0:0	4	}
if	12:4	16:4	2	(p_session -> p_pat)
cond	12:8	12:19	3	p_session -> p_pat
water	12:8	0:0	4	p_session
op	12:17	0:0	4	->
water	12:19	0:0	4	p_pat
stmts	13:4	16:4	3	
water	13:4	0:0	4	{
call	14:8	14:32	4	dvbpsi_DeletePAT
arg	14:26	14:32	5	p_pat
water	14:26	0:0	6	p_pat
water	14:33	0:0	4	;
return	15:8	15:14	4	
water	16:4	0:0	4	}
decl	17:4	17:35	2	dvbpsi_pat_program_t	*p_program
water	19:4	0:0	2	p_session
op	19:13	0:0	2	->
water	19:15	0:0	2	p_pat
op	19:21	0:0	2	=
water	19:23	0:0	2	p_pat
water	19:28	0:0	2	;
call	21:4	22:69	2	msg_Dbg
arg	21:13	21:18	3	p_obj
water	21:13	0:0	4	p_obj
arg	21:20	21:65	3	"new PAT ts_id=%d version=%d current_next=%d"
water	21:20	0:0	4	"new PAT ts_id=%d version=%d current_next=%d"
arg	22:13	22:27	3	p_pat->i_ts_id
water	22:13	0:0	4	p_pat
op	22:18	0:0	4	->
water	22:20	0:0	4	i_ts_id
arg	22:29	22:45	3	p_pat->i_version
water	22:29	0:0	4	p_pat
op	22:34	0:0	4	->
water	22:36	0:0	4	i_version
arg	22:47	22:69	3	p_pat->b_current_next
water	22:47	0:0	4	p_pat
op	22:52	0:0	4	->
water	22:54	0:0	4	b_current_next
water	22:70	0:0	2	;
for	23:4	28:4	2	(p_program = p_pat -> p_first_program ;p_program != NULL;p_program = p_program -> p_next)
forinit	23:9	23:43	3	p_program = p_pat -> p_first_program ;
water	23:9	0:0	4	p_program
op	23:19	0:0	4	=
water	23:21	0:0	4	p_pat
op	23:26	0:0	4	->
water	23:28	0:0	4	p_first_program
water	23:43	0:0	4	;
cond	23:45	23:58	3	p_program != NULL
water	23:45	0:0	4	p_program
op	23:55	0:0	4	!=
water	23:58	0:0	4	NULL
forexpr	23:64	23:87	3	p_program = p_program -> p_next
water	23:64	0:0	4	p_program
op	23:74	0:0	4	=
water	23:76	0:0	4	p_program
op	23:85	0:0	4	->
water	23:87	0:0	4	p_next
stmts	24:4	28:4	3	
water	24:4	0:0	4	{
call	25:8	25:86	4	msg_Dbg
arg	25:17	25:22	5	p_obj
water	25:17	0:0	6	p_obj
arg	25:24	25:46	5	"  * number=%d pid=%d"
water	25:24	0:0	6	"  * number=%d pid=%d"
arg	25:48	25:67	5	p_program->i_number
water	25:48	0:0	6	p_program
op	25:57	0:0	6	->
water	25:59	0:0	6	i_number
arg	25:69	25:86	5	p_program->i_pid
water	25:69	0:0	6	p_program
op	25:78	0:0	6	->
water	25:80	0:0	6	i_pid
water	25:87	0:0	4	;
if	26:8	27:51	4	(p_program -> i_number == 0)
cond	26:12	26:35	5	p_program -> i_number == 0
water	26:12	0:0	6	p_program
op	26:21	0:0	6	->
water	26:23	0:0	6	i_number
op	26:32	0:0	6	==
water	26:35	0:0	6	0
stmts	27:12	27:51	5	
water	27:12	0:0	6	p_session
op	27:21	0:0	6	->
water	27:23	0:0	6	i_nit_pid
op	27:33	0:0	6	=
water	27:35	0:0	6	p_program
op	27:44	0:0	6	->
water	27:46	0:0	6	i_pid
water	27:51	0:0	6	;
water	28:4	0:0	4	}

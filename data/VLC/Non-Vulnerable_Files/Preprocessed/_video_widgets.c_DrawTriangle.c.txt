func	2:0	46:0	0	static void	DrawTriangle
params	2:24	0:0	1	
param	2:25	2:47	2	subpicture_region_t *	r
param	2:49	2:57	2	int	fill
param	3:25	3:31	2	int	x1
param	3:33	3:39	2	int	y1
param	3:41	3:47	2	int	x2
param	3:49	3:55	2	int	y2
stmnts	0:0	45:4	1	
decl	5:4	5:45	2	uint8_t	*p
op	5:18	0:0	2	=
water	5:20	0:0	2	r
op	5:21	0:0	2	->
water	5:23	0:0	2	p_picture
op	5:32	0:0	2	->
water	5:34	0:0	2	p
op	5:35	0:0	2	->
water	5:37	0:0	2	p_pixels
decl	6:4	6:44	2	int	pitch
op	6:18	0:0	2	=
water	6:20	0:0	2	r
op	6:21	0:0	2	->
water	6:23	0:0	2	p_picture
op	6:32	0:0	2	->
water	6:34	0:0	2	p
op	6:35	0:0	2	->
water	6:37	0:0	2	i_pitch
decl	7:4	7:38	2	const int	mid
op	7:18	0:0	2	=
water	7:20	0:0	2	y1
op	7:23	0:0	2	+
water	7:25	0:0	2	(
water	7:26	0:0	2	y2
op	7:29	0:0	2	-
water	7:31	0:0	2	y1
water	7:33	0:0	2	)
op	7:35	0:0	2	/
water	7:37	0:0	2	2
if	9:4	27:4	2	(x2 >= x1)
cond	9:8	9:14	3	x2 >= x1
water	9:8	0:0	4	x2
op	9:11	0:0	4	>=
water	9:14	0:0	4	x1
stmts	9:18	27:4	3	
water	9:18	0:0	4	{
if	10:8	18:8	4	(fill == STYLE_FILLED)
cond	10:12	10:20	5	fill == STYLE_FILLED
water	10:12	0:0	6	fill
op	10:17	0:0	6	==
water	10:20	0:0	6	STYLE_FILLED
stmts	10:34	18:8	5	
water	10:34	0:0	6	{
for	11:12	17:12	6	( int y = y1 ;y <= mid;y ++)
forinit	0:0	11:27	7	 int y = y1 ;
decl	11:17	11:27	8	int	y
op	11:23	0:0	8	=
water	11:25	0:0	8	y1
cond	11:29	11:34	7	y <= mid
water	11:29	0:0	8	y
op	11:31	0:0	8	<=
water	11:34	0:0	8	mid
forexpr	11:39	11:40	7	y ++
water	11:39	0:0	8	y
op	11:40	0:0	8	++
stmts	11:44	17:12	7	
water	11:44	0:0	8	{
decl	12:16	12:30	8	int	h
op	12:22	0:0	8	=
water	12:24	0:0	8	y
op	12:26	0:0	8	-
water	12:28	0:0	8	y1
for	13:16	16:16	8	( int x = x1 ;x <= x1 + h && x <= x2;x ++)
forinit	0:0	13:31	9	 int x = x1 ;
decl	13:21	13:31	10	int	x
op	13:27	0:0	10	=
water	13:29	0:0	10	x1
cond	13:33	13:53	9	x <= x1 + h && x <= x2
water	13:33	0:0	10	x
op	13:35	0:0	10	<=
water	13:38	0:0	10	x1
op	13:41	0:0	10	+
water	13:43	0:0	10	h
op	13:45	0:0	10	&&
water	13:48	0:0	10	x
op	13:50	0:0	10	<=
water	13:53	0:0	10	x2
forexpr	13:57	13:58	9	x ++
water	13:57	0:0	10	x
op	13:58	0:0	10	++
stmts	13:62	16:16	9	
water	13:62	0:0	10	{
water	14:20	0:0	10	p
op	14:21	0:0	10	[
water	14:22	0:0	10	x
op	14:24	0:0	10	+
water	14:26	0:0	10	pitch
op	14:32	0:0	10	*
water	14:34	0:0	10	y
op	14:44	0:0	10	]
op	14:46	0:0	10	=
water	14:48	0:0	10	1
water	14:49	0:0	10	;
water	15:20	0:0	10	p
op	15:21	0:0	10	[
water	15:22	0:0	10	x
op	15:24	0:0	10	+
water	15:26	0:0	10	pitch
op	15:32	0:0	10	*
water	15:34	0:0	10	(
water	15:35	0:0	10	y2
op	15:38	0:0	10	-
water	15:40	0:0	10	h
water	15:41	0:0	10	)
op	15:42	0:0	10	]
op	15:44	0:0	10	=
water	15:46	0:0	10	1
water	15:47	0:0	10	;
water	16:16	0:0	10	}
water	17:12	0:0	8	}
water	18:8	0:0	6	}
else	18:10	26:8	4
stmts	18:15	26:8	5	
water	18:15	0:0	6	{
for	19:12	25:12	6	( int y = y1 ;y <= mid;y ++)
forinit	0:0	19:27	7	 int y = y1 ;
decl	19:17	19:27	8	int	y
op	19:23	0:0	8	=
water	19:25	0:0	8	y1
cond	19:29	19:34	7	y <= mid
water	19:29	0:0	8	y
op	19:31	0:0	8	<=
water	19:34	0:0	8	mid
forexpr	19:39	19:40	7	y ++
water	19:39	0:0	8	y
op	19:40	0:0	8	++
stmts	19:44	25:12	7	
water	19:44	0:0	8	{
decl	20:16	20:30	8	int	h
op	20:22	0:0	8	=
water	20:24	0:0	8	y
op	20:26	0:0	8	-
water	20:28	0:0	8	y1
water	21:16	0:0	8	p
op	21:17	0:0	8	[
water	21:18	0:0	8	x1
op	21:21	0:0	8	+
water	21:27	0:0	8	pitch
op	21:33	0:0	8	*
water	21:35	0:0	8	y
op	21:45	0:0	8	]
op	21:47	0:0	8	=
water	21:49	0:0	8	1
water	21:50	0:0	8	;
water	22:16	0:0	8	p
op	22:17	0:0	8	[
water	22:18	0:0	8	x1
op	22:21	0:0	8	+
water	22:23	0:0	8	h
op	22:25	0:0	8	+
water	22:27	0:0	8	pitch
op	22:33	0:0	8	*
water	22:35	0:0	8	y
op	22:45	0:0	8	]
op	22:47	0:0	8	=
water	22:49	0:0	8	1
water	22:50	0:0	8	;
water	23:16	0:0	8	p
op	23:17	0:0	8	[
water	23:18	0:0	8	x1
op	23:21	0:0	8	+
water	23:27	0:0	8	pitch
op	23:33	0:0	8	*
water	23:35	0:0	8	(
water	23:36	0:0	8	y2
op	23:39	0:0	8	-
water	23:41	0:0	8	h
water	23:42	0:0	8	)
op	23:43	0:0	8	]
op	23:45	0:0	8	=
water	23:47	0:0	8	1
water	23:48	0:0	8	;
water	24:16	0:0	8	p
op	24:17	0:0	8	[
water	24:18	0:0	8	x1
op	24:21	0:0	8	+
water	24:23	0:0	8	h
op	24:25	0:0	8	+
water	24:27	0:0	8	pitch
op	24:33	0:0	8	*
water	24:35	0:0	8	(
water	24:36	0:0	8	y2
op	24:39	0:0	8	-
water	24:41	0:0	8	h
water	24:42	0:0	8	)
op	24:43	0:0	8	]
op	24:45	0:0	8	=
water	24:47	0:0	8	1
water	24:48	0:0	8	;
water	25:12	0:0	8	}
water	26:8	0:0	6	}
water	27:4	0:0	4	}
else	27:6	45:4	2
stmts	27:11	45:4	3	
water	27:11	0:0	4	{
if	28:8	36:8	4	(fill == STYLE_FILLED)
cond	28:12	28:20	5	fill == STYLE_FILLED
water	28:12	0:0	6	fill
op	28:17	0:0	6	==
water	28:20	0:0	6	STYLE_FILLED
stmts	28:34	36:8	5	
water	28:34	0:0	6	{
for	29:12	35:12	6	( int y = y1 ;y <= mid;y ++)
forinit	0:0	29:27	7	 int y = y1 ;
decl	29:17	29:27	8	int	y
op	29:23	0:0	8	=
water	29:25	0:0	8	y1
cond	29:29	29:34	7	y <= mid
water	29:29	0:0	8	y
op	29:31	0:0	8	<=
water	29:34	0:0	8	mid
forexpr	29:39	29:40	7	y ++
water	29:39	0:0	8	y
op	29:40	0:0	8	++
stmts	29:44	35:12	7	
water	29:44	0:0	8	{
decl	30:16	30:30	8	int	h
op	30:22	0:0	8	=
water	30:24	0:0	8	y
op	30:26	0:0	8	-
water	30:28	0:0	8	y1
for	31:16	34:16	8	( int x = x1 ;x >= x1 - h && x >= x2;x --)
forinit	0:0	31:31	9	 int x = x1 ;
decl	31:21	31:31	10	int	x
op	31:27	0:0	10	=
water	31:29	0:0	10	x1
cond	31:33	31:53	9	x >= x1 - h && x >= x2
water	31:33	0:0	10	x
op	31:35	0:0	10	>=
water	31:38	0:0	10	x1
op	31:41	0:0	10	-
water	31:43	0:0	10	h
op	31:45	0:0	10	&&
water	31:48	0:0	10	x
op	31:50	0:0	10	>=
water	31:53	0:0	10	x2
forexpr	31:57	31:58	9	x --
water	31:57	0:0	10	x
op	31:58	0:0	10	--
stmts	31:62	34:16	9	
water	31:62	0:0	10	{
water	32:20	0:0	10	p
op	32:21	0:0	10	[
water	32:22	0:0	10	x
op	32:24	0:0	10	+
water	32:26	0:0	10	pitch
op	32:32	0:0	10	*
water	32:34	0:0	10	y
op	32:42	0:0	10	]
op	32:44	0:0	10	=
water	32:46	0:0	10	1
water	32:47	0:0	10	;
water	33:20	0:0	10	p
op	33:21	0:0	10	[
water	33:22	0:0	10	x
op	33:24	0:0	10	+
water	33:26	0:0	10	pitch
op	33:32	0:0	10	*
water	33:34	0:0	10	(
water	33:35	0:0	10	y2
op	33:38	0:0	10	-
water	33:40	0:0	10	h
water	33:41	0:0	10	)
op	33:42	0:0	10	]
op	33:44	0:0	10	=
water	33:46	0:0	10	1
water	33:47	0:0	10	;
water	34:16	0:0	10	}
water	35:12	0:0	8	}
water	36:8	0:0	6	}
else	36:10	44:8	4
stmts	36:15	44:8	5	
water	36:15	0:0	6	{
for	37:12	43:12	6	( int y = y1 ;y <= mid;y ++)
forinit	0:0	37:27	7	 int y = y1 ;
decl	37:17	37:27	8	int	y
op	37:23	0:0	8	=
water	37:25	0:0	8	y1
cond	37:29	37:34	7	y <= mid
water	37:29	0:0	8	y
op	37:31	0:0	8	<=
water	37:34	0:0	8	mid
forexpr	37:39	37:40	7	y ++
water	37:39	0:0	8	y
op	37:40	0:0	8	++
stmts	37:44	43:12	7	
water	37:44	0:0	8	{
decl	38:16	38:30	8	int	h
op	38:22	0:0	8	=
water	38:24	0:0	8	y
op	38:26	0:0	8	-
water	38:28	0:0	8	y1
water	39:16	0:0	8	p
op	39:17	0:0	8	[
water	39:19	0:0	8	x1
op	39:22	0:0	8	+
water	39:28	0:0	8	pitch
op	39:34	0:0	8	*
water	39:36	0:0	8	y
op	39:44	0:0	8	]
op	39:46	0:0	8	=
water	39:48	0:0	8	1
water	39:49	0:0	8	;
water	40:16	0:0	8	p
op	40:17	0:0	8	[
water	40:19	0:0	8	x1
op	40:22	0:0	8	-
water	40:24	0:0	8	h
op	40:26	0:0	8	+
water	40:28	0:0	8	pitch
op	40:34	0:0	8	*
water	40:36	0:0	8	y
op	40:44	0:0	8	]
op	40:46	0:0	8	=
water	40:48	0:0	8	1
water	40:49	0:0	8	;
water	41:16	0:0	8	p
op	41:17	0:0	8	[
water	41:19	0:0	8	x1
op	41:22	0:0	8	+
water	41:28	0:0	8	pitch
op	41:34	0:0	8	*
water	41:36	0:0	8	(
water	41:37	0:0	8	y2
op	41:40	0:0	8	-
water	41:42	0:0	8	h
water	41:43	0:0	8	)
op	41:44	0:0	8	]
op	41:46	0:0	8	=
water	41:48	0:0	8	1
water	41:49	0:0	8	;
water	42:16	0:0	8	p
op	42:17	0:0	8	[
water	42:19	0:0	8	x1
op	42:22	0:0	8	-
water	42:24	0:0	8	h
op	42:26	0:0	8	+
water	42:28	0:0	8	pitch
op	42:34	0:0	8	*
water	42:36	0:0	8	(
water	42:37	0:0	8	y2
op	42:40	0:0	8	-
water	42:42	0:0	8	h
water	42:43	0:0	8	)
op	42:44	0:0	8	]
op	42:46	0:0	8	=
water	42:48	0:0	8	1
water	42:49	0:0	8	;
water	43:12	0:0	8	}
water	44:8	0:0	6	}
water	45:4	0:0	4	}

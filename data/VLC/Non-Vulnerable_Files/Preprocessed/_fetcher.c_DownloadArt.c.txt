func	2:0	51:0	0	static int	DownloadArt
params	2:22	0:0	1	
param	2:24	2:53	2	playlist_fetcher_t *	p_fetcher
param	2:55	2:76	2	input_item_t *	p_item
stmnts	0:0	50:23	1	
decl	4:4	4:53	2	char	*psz_arturl
op	4:21	0:0	2	=
call	4:23	4:52	3	input_item_GetArtURL
arg	4:45	4:52	4	p_item
water	4:45	0:0	5	p_item
call	5:4	5:24	2	assert
arg	5:12	5:24	3	*psz_arturl
op	5:12	0:0	4	*
water	5:13	0:0	4	psz_arturl
water	5:25	0:0	2	;
if	6:4	12:4	2	(!strncasecmp (psz_arturl ,"file://" ,7 ))
cond	6:8	6:48	3	!strncasecmp (psz_arturl ,"file://" ,7 )
op	6:8	0:0	4	!
call	6:9	6:48	4	strncasecmp
arg	6:22	6:33	5	psz_arturl
water	6:22	0:0	6	psz_arturl
arg	6:35	6:44	5	"file://"
water	6:35	0:0	6	"file://"
arg	6:46	6:48	5	7
water	6:46	0:0	6	7
stmts	7:4	12:4	3	
water	7:4	0:0	4	{
call	8:8	9:61	4	msg_Dbg
arg	8:17	8:34	5	p_fetcher->object
water	8:17	0:0	6	p_fetcher
op	8:26	0:0	6	->
water	8:28	0:0	6	object
arg	9:17	9:61	5	"Album art is local file, no need to cache"
water	9:17	0:0	6	"Album art is local file, no need to cache"
water	9:62	0:0	4	;
call	10:8	10:25	4	free
arg	10:14	10:25	5	psz_arturl
water	10:14	0:0	6	psz_arturl
water	10:26	0:0	4	;
return	11:8	11:26	4	VLC_SUCCESS
water	11:15	0:0	5	VLC_SUCCESS
water	12:4	0:0	4	}
if	13:4	17:4	2	(!strncmp (psz_arturl ,"APIC" ,4 ))
cond	13:8	13:41	3	!strncmp (psz_arturl ,"APIC" ,4 )
op	13:8	0:0	4	!
call	13:9	13:41	4	strncmp
arg	13:18	13:29	5	psz_arturl
water	13:18	0:0	6	psz_arturl
arg	13:31	13:37	5	"APIC"
water	13:31	0:0	6	"APIC"
arg	13:39	13:41	5	4
water	13:39	0:0	6	4
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
call	15:8	15:68	4	msg_Warn
arg	15:18	15:35	5	p_fetcher->object
water	15:18	0:0	6	p_fetcher
op	15:27	0:0	6	->
water	15:29	0:0	6	object
arg	15:37	15:68	5	"APIC fetch not supported yet"
water	15:37	0:0	6	"APIC fetch not supported yet"
water	15:69	0:0	4	;
goto	16:8	16:18	4	error
water	16:13	0:0	5	error
water	17:4	0:0	4	}
decl	18:4	18:71	2	stream_t	*p_stream
op	18:23	0:0	2	=
call	18:25	18:70	3	stream_UrlNew
arg	18:40	18:57	4	p_fetcher->object
water	18:40	0:0	5	p_fetcher
op	18:49	0:0	5	->
water	18:51	0:0	5	object
arg	18:59	18:70	4	psz_arturl
water	18:59	0:0	5	psz_arturl
if	19:4	20:18	2	(! p_stream)
cond	19:8	19:9	3	! p_stream
op	19:8	0:0	4	!
water	19:9	0:0	4	p_stream
stmts	20:8	20:18	3	
goto	20:8	20:18	4	error
water	20:13	0:0	5	error
decl	21:4	21:26	2	uint8_t	*p_data
op	21:20	0:0	2	=
water	21:22	0:0	2	NULL
decl	22:4	22:18	2	int	i_data
op	22:15	0:0	2	=
water	22:17	0:0	2	0
for	23:4	35:4	2	(;;)
forinit	23:9	23:9	3	;
water	23:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	24:4	35:4	3	
water	24:4	0:0	4	{
decl	25:8	25:26	4	int	i_read
op	25:19	0:0	4	=
water	25:21	0:0	4	65536
if	26:8	27:17	4	(i_data >= INT_MAX - i_read)
cond	26:12	26:32	5	i_data >= INT_MAX - i_read
water	26:12	0:0	6	i_data
op	26:19	0:0	6	>=
water	26:22	0:0	6	INT_MAX
op	26:30	0:0	6	-
water	26:32	0:0	6	i_read
stmts	27:12	27:17	5	
break	27:12	27:17	6	
water	28:8	0:0	4	p_data
op	28:15	0:0	4	=
call	28:17	28:58	4	realloc_or_free
arg	28:34	28:40	5	p_data
water	28:34	0:0	6	p_data
arg	28:42	28:58	5	i_data+i_read
water	28:42	0:0	6	i_data
op	28:49	0:0	6	+
water	28:51	0:0	6	i_read
water	28:59	0:0	4	;
if	29:8	30:17	4	(! p_data)
cond	29:12	29:13	5	! p_data
op	29:12	0:0	6	!
water	29:13	0:0	6	p_data
stmts	30:12	30:17	5	
break	30:12	30:17	6	
water	31:8	0:0	4	i_read
op	31:15	0:0	4	=
call	31:17	31:64	4	stream_Read
arg	31:30	31:38	5	p_stream
water	31:30	0:0	6	p_stream
arg	31:40	31:55	5	&p_data[i_data]
op	31:40	0:0	6	&
water	31:41	0:0	6	p_data
op	31:47	0:0	6	[
water	31:48	0:0	6	i_data
op	31:54	0:0	6	]
arg	31:57	31:64	5	i_read
water	31:57	0:0	6	i_read
water	31:65	0:0	4	;
if	32:8	33:17	4	(i_read <= 0)
cond	32:12	32:22	5	i_read <= 0
water	32:12	0:0	6	i_read
op	32:19	0:0	6	<=
water	32:22	0:0	6	0
stmts	33:12	33:17	5	
break	33:12	33:17	6	
water	34:8	0:0	4	i_data
op	34:15	0:0	4	+=
water	34:18	0:0	4	i_read
water	34:24	0:0	4	;
water	35:4	0:0	4	}
call	36:4	36:28	2	stream_Delete
arg	36:19	36:28	3	p_stream
water	36:19	0:0	4	p_stream
water	36:29	0:0	2	;
if	37:4	44:4	2	(p_data && i_data > 0)
cond	37:8	37:27	3	p_data && i_data > 0
water	37:8	0:0	4	p_data
op	37:15	0:0	4	&&
water	37:18	0:0	4	i_data
op	37:25	0:0	4	>
water	37:27	0:0	4	0
stmts	38:4	44:4	3	
water	38:4	0:0	4	{
decl	39:8	39:51	4	char	*psz_type
op	39:23	0:0	4	=
call	39:25	39:50	5	strrchr
arg	39:34	39:44	6	psz_arturl
water	39:34	0:0	7	psz_arturl
arg	39:46	39:50	6	'.'
water	39:46	0:0	7	'.'
if	40:8	41:27	4	(psz_type &&strlen (psz_type ) > 5)
cond	40:12	40:45	5	psz_type &&strlen (psz_type ) > 5
water	40:12	0:0	6	psz_type
op	40:21	0:0	6	&&
call	40:24	40:41	6	strlen
arg	40:32	40:41	7	psz_type
water	40:32	0:0	8	psz_type
op	40:43	0:0	6	>
water	40:45	0:0	6	5
stmts	41:12	41:27	5	
water	41:12	0:0	6	psz_type
op	41:21	0:0	6	=
water	41:23	0:0	6	NULL
water	41:27	0:0	6	;
call	42:8	43:51	4	playlist_SaveArt
arg	42:26	42:43	5	p_fetcher->object
water	42:26	0:0	6	p_fetcher
op	42:35	0:0	6	->
water	42:37	0:0	6	object
arg	42:45	42:51	5	p_item
water	42:45	0:0	6	p_item
arg	43:26	43:32	5	p_data
water	43:26	0:0	6	p_data
arg	43:34	43:40	5	i_data
water	43:34	0:0	6	i_data
arg	43:42	43:51	5	psz_type
water	43:42	0:0	6	psz_type
water	43:52	0:0	4	;
water	44:4	0:0	4	}
call	45:4	45:17	2	free
arg	45:10	45:17	3	p_data
water	45:10	0:0	4	p_data
water	45:18	0:0	2	;
call	46:4	46:21	2	free
arg	46:10	46:21	3	psz_arturl
water	46:10	0:0	4	psz_arturl
water	46:22	0:0	2	;
return	47:4	47:22	2	VLC_SUCCESS
water	47:11	0:0	3	VLC_SUCCESS
label	48:0	48:5	2	error :
call	49:4	49:21	2	free
arg	49:10	49:21	3	psz_arturl
water	49:10	0:0	4	psz_arturl
water	49:22	0:0	2	;
return	50:4	50:23	2	VLC_EGENERIC
water	50:11	0:0	3	VLC_EGENERIC

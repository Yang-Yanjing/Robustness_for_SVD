func	2:0	33:0	0	static char *	LanguageGetName
params	2:28	0:0	1	
param	2:30	2:51	2	const char *	psz_code
stmnts	0:0	32:4	1	
decl	4:4	4:27	2	const iso639_lang_t	*pl
if	5:4	8:4	2	(psz_code == NULL || !strcmp (psz_code ,"und" ))
cond	5:8	5:53	3	psz_code == NULL || !strcmp (psz_code ,"und" )
water	5:8	0:0	4	psz_code
op	5:17	0:0	4	==
water	5:20	0:0	4	NULL
op	5:25	0:0	4	||
op	5:28	0:0	4	!
call	5:29	5:53	4	strcmp
arg	5:37	5:45	5	psz_code
water	5:37	0:0	6	psz_code
arg	5:47	5:53	5	"und"
water	5:47	0:0	6	"und"
stmts	6:4	8:4	3	
water	6:4	0:0	4	{
return	7:8	7:27	4	strdup("")
call	7:15	7:26	5	strdup
arg	7:23	7:26	6	""
water	7:23	0:0	7	""
water	8:4	0:0	4	}
if	9:4	12:4	2	(strlen (psz_code ) == 2)
cond	9:8	9:30	3	strlen (psz_code ) == 2
call	9:8	9:25	4	strlen
arg	9:16	9:25	5	psz_code
water	9:16	0:0	6	psz_code
op	9:27	0:0	4	==
water	9:30	0:0	4	2
stmts	10:4	12:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	pl
op	11:11	0:0	4	=
call	11:13	11:33	4	GetLang_1
arg	11:24	11:33	5	psz_code
water	11:24	0:0	6	psz_code
water	11:34	0:0	4	;
water	12:4	0:0	4	}
else	13:4	20:4	2
stmts	13:9	20:4	3	
if	13:9	20:4	4	(strlen (psz_code ) == 3)
cond	13:13	13:35	5	strlen (psz_code ) == 3
call	13:13	13:30	6	strlen
arg	13:21	13:30	7	psz_code
water	13:21	0:0	8	psz_code
op	13:32	0:0	6	==
water	13:35	0:0	6	3
stmts	14:4	20:4	5	
water	14:4	0:0	6	{
water	15:8	0:0	6	pl
op	15:11	0:0	6	=
call	15:13	15:34	6	GetLang_2B
arg	15:25	15:34	7	psz_code
water	15:25	0:0	8	psz_code
water	15:35	0:0	6	;
if	16:8	19:8	6	(!strcmp (pl -> psz_iso639_1 ,"??" ))
cond	16:12	16:44	7	!strcmp (pl -> psz_iso639_1 ,"??" )
op	16:12	0:0	8	!
call	16:13	16:44	8	strcmp
arg	16:21	16:37	9	pl->psz_iso639_1
water	16:21	0:0	10	pl
op	16:23	0:0	10	->
water	16:25	0:0	10	psz_iso639_1
arg	16:39	16:44	9	"??"
water	16:39	0:0	10	"??"
stmts	17:8	19:8	7	
water	17:8	0:0	8	{
water	18:12	0:0	8	pl
op	18:15	0:0	8	=
call	18:17	18:38	8	GetLang_2T
arg	18:29	18:38	9	psz_code
water	18:29	0:0	10	psz_code
water	18:39	0:0	8	;
water	19:8	0:0	8	}
water	20:4	0:0	6	}
else	21:4	24:4	2
stmts	22:4	24:4	3	
water	22:4	0:0	4	{
return	23:8	23:33	4	strdup(psz_code)
call	23:15	23:32	5	strdup
arg	23:23	23:32	6	psz_code
water	23:23	0:0	7	psz_code
water	24:4	0:0	4	}
if	25:4	28:4	2	(!strcmp (pl -> psz_iso639_1 ,"??" ))
cond	25:8	25:40	3	!strcmp (pl -> psz_iso639_1 ,"??" )
op	25:8	0:0	4	!
call	25:9	25:40	4	strcmp
arg	25:17	25:33	5	pl->psz_iso639_1
water	25:17	0:0	6	pl
op	25:19	0:0	6	->
water	25:21	0:0	6	psz_iso639_1
arg	25:35	25:40	5	"??"
water	25:35	0:0	6	"??"
stmts	26:4	28:4	3	
water	26:4	0:0	4	{
return	27:7	27:32	4	strdup(psz_code)
call	27:14	27:31	5	strdup
arg	27:22	27:31	6	psz_code
water	27:22	0:0	7	psz_code
water	28:4	0:0	4	}
else	29:4	32:4	2
stmts	30:4	32:4	3	
water	30:4	0:0	4	{
return	31:8	31:54	4	strdup(vlc_gettext(pl->psz_eng_name))
call	31:15	31:53	5	strdup
arg	31:23	31:53	6	vlc_gettext(pl->psz_eng_name)
call	31:23	31:51	7	vlc_gettext
arg	31:35	31:51	8	pl->psz_eng_name
water	31:35	0:0	9	pl
op	31:37	0:0	9	->
water	31:39	0:0	9	psz_eng_name
water	32:4	0:0	4	}

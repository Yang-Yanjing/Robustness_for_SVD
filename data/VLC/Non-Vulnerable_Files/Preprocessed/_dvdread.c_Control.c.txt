func	2:0	101:0	0	static int	Control
params	2:18	0:0	1	
param	2:20	2:36	2	demux_t *	p_demux
param	2:38	2:49	2	int	i_query
param	2:51	2:64	2	va_list	args
stmnts	0:0	100:4	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:17	2	double	f
water	5:12	0:0	2	,
decl	5:4	5:17	2	double	*pf
decl	6:4	6:12	2	bool	*pb
decl	7:4	7:17	2	int64_t	*pi64
decl	8:4	8:30	2	input_title_t	***ppp_title
decl	9:4	9:15	2	int	*pi_int
decl	10:4	10:9	2	int	i
switch	11:4	100:4	2	(i_query)
cond	11:12	11:12	3	i_query
water	11:12	0:0	4	i_query
stmts	12:4	100:4	3	
water	12:4	0:0	4	{
label	13:8	13:31	4	case DEMUX_GET_POSITION :
water	14:8	0:0	4	{
water	15:12	0:0	4	pf
op	15:15	0:0	4	=
water	15:17	0:0	4	(
water	15:18	0:0	4	double
op	15:24	0:0	4	*
water	15:25	0:0	4	)
call	15:27	15:49	4	va_arg
arg	15:35	15:39	5	args
water	15:35	0:0	6	args
arg	15:41	15:49	5	double*
water	15:41	0:0	6	double
op	15:47	0:0	6	*
water	15:50	0:0	4	;
if	16:12	17:75	4	(p_sys -> i_title_blocks > 0)
cond	16:16	16:40	5	p_sys -> i_title_blocks > 0
water	16:16	0:0	6	p_sys
op	16:21	0:0	6	->
water	16:23	0:0	6	i_title_blocks
op	16:38	0:0	6	>
water	16:40	0:0	6	0
stmts	17:16	17:75	5	
op	17:16	0:0	6	*
water	17:17	0:0	6	pf
op	17:20	0:0	6	=
water	17:22	0:0	6	(
water	17:23	0:0	6	double
water	17:29	0:0	6	)
water	17:30	0:0	6	p_sys
op	17:35	0:0	6	->
water	17:37	0:0	6	i_title_offset
op	17:52	0:0	6	/
water	17:54	0:0	6	p_sys
op	17:59	0:0	6	->
water	17:61	0:0	6	i_title_blocks
water	17:75	0:0	6	;
else	18:12	19:25	4
stmts	19:16	19:25	5	
op	19:16	0:0	6	*
water	19:17	0:0	6	pf
op	19:20	0:0	6	=
water	19:22	0:0	6	0
op	19:23	0:0	6	.
water	19:24	0:0	6	0
water	19:25	0:0	6	;
return	20:12	20:30	4	VLC_SUCCESS
water	20:19	0:0	5	VLC_SUCCESS
water	21:8	0:0	4	}
label	22:8	22:31	4	case DEMUX_SET_POSITION :
water	23:8	0:0	4	{
water	24:12	0:0	4	f
op	24:14	0:0	4	=
water	24:16	0:0	4	(
water	24:17	0:0	4	double
water	24:23	0:0	4	)
call	24:24	24:45	4	va_arg
arg	24:32	24:36	5	args
water	24:32	0:0	6	args
arg	24:38	24:45	5	double
water	24:38	0:0	6	double
water	24:46	0:0	4	;
call	25:12	25:60	4	DvdReadSeek
arg	25:25	25:32	5	p_demux
water	25:25	0:0	6	p_demux
arg	25:34	25:60	5	f*p_sys->i_title_blocks
water	25:34	0:0	6	f
op	25:36	0:0	6	*
water	25:38	0:0	6	p_sys
op	25:43	0:0	6	->
water	25:45	0:0	6	i_title_blocks
water	25:61	0:0	4	;
return	26:12	26:30	4	VLC_SUCCESS
water	26:19	0:0	5	VLC_SUCCESS
water	27:8	0:0	4	}
label	28:8	28:27	4	case DEMUX_GET_TIME :
water	29:12	0:0	4	pi64
op	29:17	0:0	4	=
water	29:19	0:0	4	(
water	29:20	0:0	4	int64_t
op	29:27	0:0	4	*
water	29:28	0:0	4	)
call	29:29	29:53	4	va_arg
arg	29:37	29:41	5	args
water	29:37	0:0	6	args
arg	29:43	29:53	5	int64_t*
water	29:43	0:0	6	int64_t
op	29:51	0:0	6	*
water	29:54	0:0	4	;
if	30:12	35:12	4	(p_demux -> info . i_title >= 0 && p_demux -> info . i_title < p_sys -> i_titles)
cond	30:16	30:77	5	p_demux -> info . i_title >= 0 && p_demux -> info . i_title < p_sys -> i_titles
water	30:16	0:0	6	p_demux
op	30:23	0:0	6	->
water	30:25	0:0	6	info
op	30:29	0:0	6	.
water	30:30	0:0	6	i_title
op	30:38	0:0	6	>=
water	30:41	0:0	6	0
op	30:43	0:0	6	&&
water	30:46	0:0	6	p_demux
op	30:53	0:0	6	->
water	30:55	0:0	6	info
op	30:59	0:0	6	.
water	30:60	0:0	6	i_title
op	30:68	0:0	6	<
water	30:70	0:0	6	p_sys
op	30:75	0:0	6	->
water	30:77	0:0	6	i_titles
stmts	31:12	35:12	5	
water	31:12	0:0	6	{
op	32:16	0:0	6	*
water	32:17	0:0	6	pi64
op	32:22	0:0	6	=
water	32:24	0:0	6	(
water	32:25	0:0	6	int64_t
water	32:32	0:0	6	)
call	32:34	32:87	6	dvdtime_to_time
arg	32:51	32:83	7	&p_sys->p_cur_pgc->playback_time
op	32:51	0:0	8	&
water	32:52	0:0	8	p_sys
op	32:57	0:0	8	->
water	32:59	0:0	8	p_cur_pgc
op	32:68	0:0	8	->
water	32:70	0:0	8	playback_time
arg	32:85	32:87	7	0
water	32:85	0:0	8	0
op	32:89	0:0	6	/
water	33:24	0:0	6	p_sys
op	33:29	0:0	6	->
water	33:31	0:0	6	i_title_blocks
op	33:46	0:0	6	*
water	33:48	0:0	6	p_sys
op	33:53	0:0	6	->
water	33:55	0:0	6	i_title_offset
water	33:69	0:0	6	;
return	34:16	34:34	6	VLC_SUCCESS
water	34:23	0:0	7	VLC_SUCCESS
water	35:12	0:0	6	}
op	36:12	0:0	4	*
water	36:13	0:0	4	pi64
op	36:18	0:0	4	=
water	36:20	0:0	4	0
water	36:21	0:0	4	;
return	37:12	37:31	4	VLC_EGENERIC
water	37:19	0:0	5	VLC_EGENERIC
label	38:8	38:29	4	case DEMUX_GET_LENGTH :
water	39:12	0:0	4	pi64
op	39:17	0:0	4	=
water	39:19	0:0	4	(
water	39:20	0:0	4	int64_t
op	39:27	0:0	4	*
water	39:28	0:0	4	)
call	39:29	39:53	4	va_arg
arg	39:37	39:41	5	args
water	39:37	0:0	6	args
arg	39:43	39:53	5	int64_t*
water	39:43	0:0	6	int64_t
op	39:51	0:0	6	*
water	39:54	0:0	4	;
if	40:12	44:12	4	(p_demux -> info . i_title >= 0 && p_demux -> info . i_title < p_sys -> i_titles)
cond	40:16	40:77	5	p_demux -> info . i_title >= 0 && p_demux -> info . i_title < p_sys -> i_titles
water	40:16	0:0	6	p_demux
op	40:23	0:0	6	->
water	40:25	0:0	6	info
op	40:29	0:0	6	.
water	40:30	0:0	6	i_title
op	40:38	0:0	6	>=
water	40:41	0:0	6	0
op	40:43	0:0	6	&&
water	40:46	0:0	6	p_demux
op	40:53	0:0	6	->
water	40:55	0:0	6	info
op	40:59	0:0	6	.
water	40:60	0:0	6	i_title
op	40:68	0:0	6	<
water	40:70	0:0	6	p_sys
op	40:75	0:0	6	->
water	40:77	0:0	6	i_titles
stmts	41:12	44:12	5	
water	41:12	0:0	6	{
op	42:16	0:0	6	*
water	42:17	0:0	6	pi64
op	42:22	0:0	6	=
water	42:24	0:0	6	(
water	42:25	0:0	6	int64_t
water	42:32	0:0	6	)
call	42:33	42:86	6	dvdtime_to_time
arg	42:50	42:82	7	&p_sys->p_cur_pgc->playback_time
op	42:50	0:0	8	&
water	42:51	0:0	8	p_sys
op	42:56	0:0	8	->
water	42:58	0:0	8	p_cur_pgc
op	42:67	0:0	8	->
water	42:69	0:0	8	playback_time
arg	42:84	42:86	7	0
water	42:84	0:0	8	0
water	42:87	0:0	6	;
return	43:16	43:34	6	VLC_SUCCESS
water	43:23	0:0	7	VLC_SUCCESS
water	44:12	0:0	6	}
op	45:12	0:0	4	*
water	45:13	0:0	4	pi64
op	45:18	0:0	4	=
water	45:20	0:0	4	0
water	45:21	0:0	4	;
return	46:12	46:31	4	VLC_EGENERIC
water	46:19	0:0	5	VLC_EGENERIC
label	48:8	48:28	4	case DEMUX_CAN_PAUSE :
label	49:8	49:27	4	case DEMUX_CAN_SEEK :
label	50:8	50:35	4	case DEMUX_CAN_CONTROL_PACE :
water	52:12	0:0	4	pb
op	52:15	0:0	4	=
water	52:17	0:0	4	(
water	52:18	0:0	4	bool
op	52:22	0:0	4	*
water	52:23	0:0	4	)
call	52:24	52:45	4	va_arg
arg	52:32	52:36	5	args
water	52:32	0:0	6	args
arg	52:38	52:45	5	bool*
water	52:38	0:0	6	bool
op	52:43	0:0	6	*
water	52:46	0:0	4	;
op	53:12	0:0	4	*
water	53:13	0:0	4	pb
op	53:16	0:0	4	=
water	53:18	0:0	4	true
water	53:22	0:0	4	;
return	54:12	54:30	4	VLC_SUCCESS
water	54:19	0:0	5	VLC_SUCCESS
label	55:8	55:34	4	case DEMUX_SET_PAUSE_STATE :
return	56:12	56:30	4	VLC_SUCCESS
water	56:19	0:0	5	VLC_SUCCESS
label	57:8	57:33	4	case DEMUX_GET_TITLE_INFO :
water	58:12	0:0	4	ppp_title
op	58:22	0:0	4	=
water	58:24	0:0	4	(
water	58:25	0:0	4	input_title_t
op	58:38	0:0	4	*
op	58:39	0:0	4	*
op	58:40	0:0	4	*
water	58:41	0:0	4	)
call	58:42	58:73	4	va_arg
arg	58:50	58:54	5	args
water	58:50	0:0	6	args
arg	58:56	58:73	5	input_title_t***
water	58:56	0:0	6	input_title_t
op	58:69	0:0	6	*
op	58:70	0:0	6	*
op	58:71	0:0	6	*
water	58:74	0:0	4	;
water	59:12	0:0	4	pi_int
op	59:22	0:0	4	=
water	59:24	0:0	4	(
water	59:25	0:0	4	int
op	59:28	0:0	4	*
water	59:29	0:0	4	)
call	59:30	59:49	4	va_arg
arg	59:38	59:42	5	args
water	59:38	0:0	6	args
arg	59:44	59:49	5	int*
water	59:44	0:0	6	int
op	59:47	0:0	6	*
water	59:50	0:0	4	;
op	60:12	0:0	4	*
water	60:13	0:0	4	(
water	60:14	0:0	4	(
water	60:15	0:0	4	int
op	60:18	0:0	4	*
water	60:19	0:0	4	)
call	60:20	60:39	4	va_arg
arg	60:28	60:32	5	args
water	60:28	0:0	6	args
arg	60:34	60:39	5	int*
water	60:34	0:0	6	int
op	60:37	0:0	6	*
water	60:40	0:0	4	)
op	60:42	0:0	4	=
water	60:44	0:0	4	1
water	60:45	0:0	4	;
op	61:12	0:0	4	*
water	61:13	0:0	4	(
water	61:14	0:0	4	(
water	61:15	0:0	4	int
op	61:18	0:0	4	*
water	61:19	0:0	4	)
call	61:20	61:39	4	va_arg
arg	61:28	61:32	5	args
water	61:28	0:0	6	args
arg	61:34	61:39	5	int*
water	61:34	0:0	6	int
op	61:37	0:0	6	*
water	61:40	0:0	4	)
op	61:42	0:0	4	=
water	61:44	0:0	4	1
water	61:45	0:0	4	;
op	63:12	0:0	4	*
water	63:13	0:0	4	pi_int
op	63:20	0:0	4	=
water	63:22	0:0	4	p_sys
op	63:27	0:0	4	->
water	63:29	0:0	4	i_titles
water	63:37	0:0	4	;
op	64:12	0:0	4	*
water	64:13	0:0	4	ppp_title
op	64:23	0:0	4	=
call	64:25	64:75	4	malloc
arg	64:33	64:75	5	p_sys->i_titles*sizeof(input_title_t*)
water	64:33	0:0	6	p_sys
op	64:38	0:0	6	->
water	64:40	0:0	6	i_titles
op	64:49	0:0	6	*
op	64:51	0:0	6	sizeof
water	64:57	0:0	6	(
water	64:58	0:0	6	input_title_t
op	64:72	0:0	6	*
water	64:73	0:0	6	)
water	64:76	0:0	4	;
for	65:12	68:12	4	(i = 0 ;i < p_sys -> i_titles;i ++)
forinit	65:17	65:22	5	i = 0 ;
water	65:17	0:0	6	i
op	65:19	0:0	6	=
water	65:21	0:0	6	0
water	65:22	0:0	6	;
cond	65:24	65:35	5	i < p_sys -> i_titles
water	65:24	0:0	6	i
op	65:26	0:0	6	<
water	65:28	0:0	6	p_sys
op	65:33	0:0	6	->
water	65:35	0:0	6	i_titles
forexpr	65:45	65:46	5	i ++
water	65:45	0:0	6	i
op	65:46	0:0	6	++
stmts	66:12	68:12	5	
water	66:12	0:0	6	{
water	67:16	0:0	6	(
op	67:17	0:0	6	*
water	67:18	0:0	6	ppp_title
water	67:27	0:0	6	)
op	67:28	0:0	6	[
water	67:29	0:0	6	i
op	67:30	0:0	6	]
op	67:32	0:0	6	=
call	67:34	67:76	6	vlc_input_title_Duplicate
arg	67:60	67:76	7	p_sys->titles[i]
water	67:60	0:0	8	p_sys
op	67:65	0:0	8	->
water	67:67	0:0	8	titles
op	67:73	0:0	8	[
water	67:74	0:0	8	i
op	67:75	0:0	8	]
water	67:77	0:0	6	;
water	68:12	0:0	6	}
return	69:12	69:30	4	VLC_SUCCESS
water	69:19	0:0	5	VLC_SUCCESS
label	70:8	70:28	4	case DEMUX_SET_TITLE :
water	71:12	0:0	4	i
op	71:14	0:0	4	=
water	71:16	0:0	4	(
water	71:17	0:0	4	int
water	71:20	0:0	4	)
call	71:21	71:39	4	va_arg
arg	71:29	71:33	5	args
water	71:29	0:0	6	args
arg	71:35	71:39	5	int
water	71:35	0:0	6	int
water	71:40	0:0	4	;
if	72:12	76:12	4	(DvdReadSetArea (p_demux ,i ,0 ,- 1 ) != VLC_SUCCESS)
cond	72:16	72:55	5	DvdReadSetArea (p_demux ,i ,0 ,- 1 ) != VLC_SUCCESS
call	72:16	72:50	6	DvdReadSetArea
arg	72:32	72:39	7	p_demux
water	72:32	0:0	8	p_demux
arg	72:41	72:42	7	i
water	72:41	0:0	8	i
arg	72:44	72:45	7	0
water	72:44	0:0	8	0
arg	72:47	72:50	7	-1
op	72:47	0:0	8	-
water	72:48	0:0	8	1
op	72:52	0:0	6	!=
water	72:55	0:0	6	VLC_SUCCESS
stmts	73:12	76:12	5	
water	73:12	0:0	6	{
call	74:16	74:62	6	msg_Warn
arg	74:26	74:33	7	p_demux
water	74:26	0:0	8	p_demux
arg	74:35	74:62	7	"cannot set title/chapter"
water	74:35	0:0	8	"cannot set title/chapter"
water	74:63	0:0	6	;
return	75:16	75:35	6	VLC_EGENERIC
water	75:23	0:0	7	VLC_EGENERIC
water	76:12	0:0	6	}
water	77:12	0:0	4	p_demux
op	77:19	0:0	4	->
water	77:21	0:0	4	info
op	77:25	0:0	4	.
water	77:26	0:0	4	i_update
op	77:35	0:0	4	|=
water	78:16	0:0	4	INPUT_UPDATE_TITLE
op	78:35	0:0	4	|
water	78:37	0:0	4	INPUT_UPDATE_SEEKPOINT
water	78:59	0:0	4	;
water	79:12	0:0	4	p_demux
op	79:19	0:0	4	->
water	79:21	0:0	4	info
op	79:25	0:0	4	.
water	79:26	0:0	4	i_title
op	79:34	0:0	4	=
water	79:36	0:0	4	i
water	79:37	0:0	4	;
water	80:12	0:0	4	p_demux
op	80:19	0:0	4	->
water	80:21	0:0	4	info
op	80:25	0:0	4	.
water	80:26	0:0	4	i_seekpoint
op	80:38	0:0	4	=
water	80:40	0:0	4	0
water	80:41	0:0	4	;
return	81:12	81:30	4	VLC_SUCCESS
water	81:19	0:0	5	VLC_SUCCESS
label	82:8	82:32	4	case DEMUX_SET_SEEKPOINT :
water	83:12	0:0	4	i
op	83:14	0:0	4	=
water	83:16	0:0	4	(
water	83:17	0:0	4	int
water	83:20	0:0	4	)
call	83:21	83:39	4	va_arg
arg	83:29	83:33	5	args
water	83:29	0:0	6	args
arg	83:35	83:39	5	int
water	83:35	0:0	6	int
water	83:40	0:0	4	;
if	84:12	88:12	4	(DvdReadSetArea (p_demux ,- 1 ,i ,- 1 ) != VLC_SUCCESS)
cond	84:16	84:56	5	DvdReadSetArea (p_demux ,- 1 ,i ,- 1 ) != VLC_SUCCESS
call	84:16	84:51	6	DvdReadSetArea
arg	84:32	84:39	7	p_demux
water	84:32	0:0	8	p_demux
arg	84:41	84:43	7	-1
op	84:41	0:0	8	-
water	84:42	0:0	8	1
arg	84:45	84:46	7	i
water	84:45	0:0	8	i
arg	84:48	84:51	7	-1
op	84:48	0:0	8	-
water	84:49	0:0	8	1
op	84:53	0:0	6	!=
water	84:56	0:0	6	VLC_SUCCESS
stmts	85:12	88:12	5	
water	85:12	0:0	6	{
call	86:16	86:62	6	msg_Warn
arg	86:26	86:33	7	p_demux
water	86:26	0:0	8	p_demux
arg	86:35	86:62	7	"cannot set title/chapter"
water	86:35	0:0	8	"cannot set title/chapter"
water	86:63	0:0	6	;
return	87:16	87:35	6	VLC_EGENERIC
water	87:23	0:0	7	VLC_EGENERIC
water	88:12	0:0	6	}
water	89:12	0:0	4	p_demux
op	89:19	0:0	4	->
water	89:21	0:0	4	info
op	89:25	0:0	4	.
water	89:26	0:0	4	i_update
op	89:35	0:0	4	|=
water	89:38	0:0	4	INPUT_UPDATE_SEEKPOINT
water	89:60	0:0	4	;
water	90:12	0:0	4	p_demux
op	90:19	0:0	4	->
water	90:21	0:0	4	info
op	90:25	0:0	4	.
water	90:26	0:0	4	i_seekpoint
op	90:38	0:0	4	=
water	90:40	0:0	4	i
water	90:41	0:0	4	;
return	91:12	91:30	4	VLC_SUCCESS
water	91:19	0:0	5	VLC_SUCCESS
label	92:8	92:32	4	case DEMUX_GET_PTS_DELAY :
water	93:12	0:0	4	pi64
op	93:17	0:0	4	=
water	93:19	0:0	4	(
water	93:20	0:0	4	int64_t
op	93:27	0:0	4	*
water	93:28	0:0	4	)
call	93:29	93:53	4	va_arg
arg	93:37	93:41	5	args
water	93:37	0:0	6	args
arg	93:43	93:53	5	int64_t*
water	93:43	0:0	6	int64_t
op	93:51	0:0	6	*
water	93:54	0:0	4	;
op	94:12	0:0	4	*
water	94:13	0:0	4	pi64
op	94:18	0:0	4	=
call	95:16	95:28	4	INT64_C
arg	95:24	95:28	5	1000
water	95:24	0:0	6	1000
call	95:30	95:76	4	*var_InheritInteger
arg	95:52	95:59	5	p_demux
water	95:52	0:0	6	p_demux
arg	95:61	95:76	5	"disc-caching"
water	95:61	0:0	6	"disc-caching"
water	95:77	0:0	4	;
return	96:12	96:30	4	VLC_SUCCESS
water	96:19	0:0	5	VLC_SUCCESS
label	98:8	98:15	4	default :
return	99:12	99:31	4	VLC_EGENERIC
water	99:19	0:0	5	VLC_EGENERIC
water	100:4	0:0	4	}

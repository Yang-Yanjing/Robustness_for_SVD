func	2:0	168:0	0	static int	MuxBlock
params	2:19	0:0	1	
param	2:21	2:38	2	sout_mux_t *	p_mux
param	2:40	2:62	2	sout_input_t *	p_input
stmnts	0:0	167:22	1	
decl	4:4	4:40	2	sout_mux_sys_t	*p_sys
op	4:26	0:0	2	=
water	4:28	0:0	2	p_mux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
decl	5:4	5:58	2	ogg_stream_t	*p_stream
op	5:27	0:0	2	=
water	5:29	0:0	2	(
water	5:30	0:0	2	ogg_stream_t
op	5:42	0:0	2	*
water	5:43	0:0	2	)
water	5:44	0:0	2	p_input
op	5:51	0:0	2	->
water	5:53	0:0	2	p_sys
decl	6:4	6:54	2	block_t	*p_data
op	6:20	0:0	2	=
call	6:22	6:53	3	block_FifoGet
arg	6:37	6:53	4	p_input->p_fifo
water	6:37	0:0	5	p_input
op	6:44	0:0	5	->
water	6:46	0:0	5	p_fifo
decl	7:4	7:24	2	block_t	*p_og
op	7:18	0:0	2	=
water	7:20	0:0	2	NULL
decl	8:4	8:17	2	ogg_packet	op
decl	9:4	9:19	2	uint64_t	i_time
if	10:4	20:4	2	(p_stream -> i_fourcc != VLC_CODEC_VORBIS && p_stream -> i_fourcc != VLC_CODEC_FLAC && p_stream -> i_fourcc != VLC_CODEC_SPEEX && p_stream -> i_fourcc != VLC_CODEC_OPUS && p_stream -> i_fourcc != VLC_CODEC_THEORA && p_stream -> i_fourcc != VLC_CODEC_VP8 && p_stream -> i_fourcc != VLC_CODEC_DIRAC)
cond	10:8	16:30	3	p_stream -> i_fourcc != VLC_CODEC_VORBIS && p_stream -> i_fourcc != VLC_CODEC_FLAC && p_stream -> i_fourcc != VLC_CODEC_SPEEX && p_stream -> i_fourcc != VLC_CODEC_OPUS && p_stream -> i_fourcc != VLC_CODEC_THEORA && p_stream -> i_fourcc != VLC_CODEC_VP8 && p_stream -> i_fourcc != VLC_CODEC_DIRAC
water	10:8	0:0	4	p_stream
op	10:16	0:0	4	->
water	10:18	0:0	4	i_fourcc
op	10:27	0:0	4	!=
water	10:30	0:0	4	VLC_CODEC_VORBIS
op	10:47	0:0	4	&&
water	11:8	0:0	4	p_stream
op	11:16	0:0	4	->
water	11:18	0:0	4	i_fourcc
op	11:27	0:0	4	!=
water	11:30	0:0	4	VLC_CODEC_FLAC
op	11:45	0:0	4	&&
water	12:8	0:0	4	p_stream
op	12:16	0:0	4	->
water	12:18	0:0	4	i_fourcc
op	12:27	0:0	4	!=
water	12:30	0:0	4	VLC_CODEC_SPEEX
op	12:46	0:0	4	&&
water	13:8	0:0	4	p_stream
op	13:16	0:0	4	->
water	13:18	0:0	4	i_fourcc
op	13:27	0:0	4	!=
water	13:30	0:0	4	VLC_CODEC_OPUS
op	13:45	0:0	4	&&
water	14:8	0:0	4	p_stream
op	14:16	0:0	4	->
water	14:18	0:0	4	i_fourcc
op	14:27	0:0	4	!=
water	14:30	0:0	4	VLC_CODEC_THEORA
op	14:47	0:0	4	&&
water	15:8	0:0	4	p_stream
op	15:16	0:0	4	->
water	15:18	0:0	4	i_fourcc
op	15:27	0:0	4	!=
water	15:30	0:0	4	VLC_CODEC_VP8
op	15:44	0:0	4	&&
water	16:8	0:0	4	p_stream
op	16:16	0:0	4	->
water	16:18	0:0	4	i_fourcc
op	16:27	0:0	4	!=
water	16:30	0:0	4	VLC_CODEC_DIRAC
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
water	18:8	0:0	4	p_data
op	18:15	0:0	4	=
call	18:17	18:60	4	block_Realloc
arg	18:32	18:38	5	p_data
water	18:32	0:0	6	p_data
arg	18:40	18:41	5	1
water	18:40	0:0	6	1
arg	18:43	18:60	5	p_data->i_buffer
water	18:43	0:0	6	p_data
op	18:49	0:0	6	->
water	18:51	0:0	6	i_buffer
water	18:61	0:0	4	;
water	19:8	0:0	4	p_data
op	19:14	0:0	4	->
water	19:16	0:0	4	p_buffer
op	19:24	0:0	4	[
water	19:25	0:0	4	0
op	19:26	0:0	4	]
op	19:28	0:0	4	=
water	19:30	0:0	4	PACKET_IS_SYNCPOINT
water	19:49	0:0	4	;
water	20:4	0:0	4	}
if	21:4	22:64	2	(p_stream -> i_fourcc == VLC_CODEC_DIRAC && p_stream -> i_baseptsdelay < 0)
cond	21:9	21:77	3	p_stream -> i_fourcc == VLC_CODEC_DIRAC && p_stream -> i_baseptsdelay < 0
water	21:9	0:0	4	p_stream
op	21:17	0:0	4	->
water	21:19	0:0	4	i_fourcc
op	21:28	0:0	4	==
water	21:31	0:0	4	VLC_CODEC_DIRAC
op	21:47	0:0	4	&&
water	21:50	0:0	4	p_stream
op	21:58	0:0	4	->
water	21:60	0:0	4	i_baseptsdelay
op	21:75	0:0	4	<
water	21:77	0:0	4	0
stmts	22:8	22:64	3	
water	22:8	0:0	4	p_stream
op	22:16	0:0	4	->
water	22:18	0:0	4	i_baseptsdelay
op	22:33	0:0	4	=
water	22:35	0:0	4	p_data
op	22:41	0:0	4	->
water	22:43	0:0	4	i_pts
op	22:49	0:0	4	-
water	22:51	0:0	4	p_data
op	22:57	0:0	4	->
water	22:59	0:0	4	i_dts
water	22:64	0:0	4	;
water	23:4	0:0	2	op
op	23:6	0:0	2	.
water	23:7	0:0	2	packet
op	23:16	0:0	2	=
water	23:18	0:0	2	p_data
op	23:24	0:0	2	->
water	23:26	0:0	2	p_buffer
water	23:34	0:0	2	;
water	24:4	0:0	2	op
op	24:6	0:0	2	.
water	24:7	0:0	2	bytes
op	24:16	0:0	2	=
water	24:18	0:0	2	p_data
op	24:24	0:0	2	->
water	24:26	0:0	2	i_buffer
water	24:34	0:0	2	;
water	25:4	0:0	2	op
op	25:6	0:0	2	.
water	25:7	0:0	2	b_o_s
op	25:16	0:0	2	=
water	25:18	0:0	2	0
water	25:19	0:0	2	;
water	26:4	0:0	2	op
op	26:6	0:0	2	.
water	26:7	0:0	2	e_o_s
op	26:16	0:0	2	=
water	26:18	0:0	2	0
water	26:19	0:0	2	;
water	27:4	0:0	2	op
op	27:6	0:0	2	.
water	27:7	0:0	2	packetno
op	27:16	0:0	2	=
water	27:18	0:0	2	p_stream
op	27:26	0:0	2	->
water	27:28	0:0	2	i_packet_no
op	27:39	0:0	2	++
water	27:41	0:0	2	;
water	28:4	0:0	2	op
op	28:6	0:0	2	.
water	28:7	0:0	2	granulepos
op	28:18	0:0	2	=
op	28:20	0:0	2	-
water	28:21	0:0	2	1
water	28:22	0:0	2	;
if	29:4	49:4	2	(p_stream -> i_cat == AUDIO_ES)
cond	29:8	29:27	3	p_stream -> i_cat == AUDIO_ES
water	29:8	0:0	4	p_stream
op	29:16	0:0	4	->
water	29:18	0:0	4	i_cat
op	29:24	0:0	4	==
water	29:27	0:0	4	AUDIO_ES
stmts	30:4	49:4	3	
water	30:4	0:0	4	{
if	31:8	42:8	4	(p_stream -> i_fourcc == VLC_CODEC_VORBIS || p_stream -> i_fourcc == VLC_CODEC_FLAC || p_stream -> i_fourcc == VLC_CODEC_OPUS || p_stream -> i_fourcc == VLC_CODEC_SPEEX)
cond	31:12	34:34	5	p_stream -> i_fourcc == VLC_CODEC_VORBIS || p_stream -> i_fourcc == VLC_CODEC_FLAC || p_stream -> i_fourcc == VLC_CODEC_OPUS || p_stream -> i_fourcc == VLC_CODEC_SPEEX
water	31:12	0:0	6	p_stream
op	31:20	0:0	6	->
water	31:22	0:0	6	i_fourcc
op	31:31	0:0	6	==
water	31:34	0:0	6	VLC_CODEC_VORBIS
op	31:51	0:0	6	||
water	32:12	0:0	6	p_stream
op	32:20	0:0	6	->
water	32:22	0:0	6	i_fourcc
op	32:31	0:0	6	==
water	32:34	0:0	6	VLC_CODEC_FLAC
op	32:49	0:0	6	||
water	33:12	0:0	6	p_stream
op	33:20	0:0	6	->
water	33:22	0:0	6	i_fourcc
op	33:31	0:0	6	==
water	33:34	0:0	6	VLC_CODEC_OPUS
op	33:49	0:0	6	||
water	34:12	0:0	6	p_stream
op	34:20	0:0	6	->
water	34:22	0:0	6	i_fourcc
op	34:31	0:0	6	==
water	34:34	0:0	6	VLC_CODEC_SPEEX
stmts	35:8	42:8	5	
water	35:8	0:0	6	{
water	37:12	0:0	6	op
op	37:14	0:0	6	.
water	37:15	0:0	6	granulepos
op	37:26	0:0	6	=
water	38:16	0:0	6	(
water	38:18	0:0	6	p_data
op	38:24	0:0	6	->
water	38:26	0:0	6	i_dts
op	38:32	0:0	6	-
water	38:34	0:0	6	p_sys
op	38:39	0:0	6	->
water	38:41	0:0	6	i_start_dts
op	38:53	0:0	6	+
water	38:55	0:0	6	p_data
op	38:61	0:0	6	->
water	38:63	0:0	6	i_length
water	38:72	0:0	6	)
op	38:74	0:0	6	*
water	39:16	0:0	6	(
water	39:17	0:0	6	mtime_t
water	39:24	0:0	6	)
water	39:25	0:0	6	p_input
op	39:32	0:0	6	->
water	39:34	0:0	6	p_fmt
op	39:39	0:0	6	->
water	39:41	0:0	6	audio
op	39:46	0:0	6	.
water	39:47	0:0	6	i_rate
op	39:54	0:0	6	/
water	39:56	0:0	6	CLOCK_FREQ
water	39:66	0:0	6	;
water	40:12	0:0	6	i_time
op	40:19	0:0	6	=
water	40:21	0:0	6	p_data
op	40:27	0:0	6	->
water	40:29	0:0	6	i_dts
op	40:35	0:0	6	-
water	40:37	0:0	6	p_sys
op	40:42	0:0	6	->
water	40:44	0:0	6	i_start_dts
water	40:55	0:0	6	;
call	41:12	41:50	6	AddIndexEntry
arg	41:27	41:32	7	p_mux
water	41:27	0:0	8	p_mux
arg	41:34	41:40	7	i_time
water	41:34	0:0	8	i_time
arg	41:42	41:50	7	p_input
water	41:42	0:0	8	p_input
water	41:51	0:0	6	;
water	42:8	0:0	6	}
else	43:8	48:8	4
stmts	43:13	48:8	5	
if	43:13	48:8	6	(p_stream -> p_oggds_header)
cond	43:17	43:27	7	p_stream -> p_oggds_header
water	43:17	0:0	8	p_stream
op	43:25	0:0	8	->
water	43:27	0:0	8	p_oggds_header
stmts	44:8	48:8	7	
water	44:8	0:0	8	{
water	46:12	0:0	8	op
op	46:14	0:0	8	.
water	46:15	0:0	8	granulepos
op	46:26	0:0	8	=
water	46:28	0:0	8	(
water	46:30	0:0	8	p_data
op	46:36	0:0	8	->
water	46:38	0:0	8	i_dts
op	46:44	0:0	8	-
water	46:46	0:0	8	p_sys
op	46:51	0:0	8	->
water	46:53	0:0	8	i_start_dts
water	46:65	0:0	8	)
op	46:67	0:0	8	*
water	47:16	0:0	8	p_stream
op	47:24	0:0	8	->
water	47:26	0:0	8	p_oggds_header
op	47:40	0:0	8	->
water	47:42	0:0	8	i_samples_per_unit
op	47:61	0:0	8	/
water	47:63	0:0	8	CLOCK_FREQ
water	47:73	0:0	8	;
water	48:8	0:0	8	}
water	49:4	0:0	4	}
else	50:4	126:4	2
stmts	50:9	126:4	3	
if	50:9	126:4	4	(p_stream -> i_cat == VIDEO_ES)
cond	50:13	50:32	5	p_stream -> i_cat == VIDEO_ES
water	50:13	0:0	6	p_stream
op	50:21	0:0	6	->
water	50:23	0:0	6	i_cat
op	50:29	0:0	6	==
water	50:32	0:0	6	VIDEO_ES
stmts	51:4	126:4	5	
water	51:4	0:0	6	{
if	52:8	66:8	6	(p_stream -> i_fourcc == VLC_CODEC_THEORA)
cond	52:12	52:34	7	p_stream -> i_fourcc == VLC_CODEC_THEORA
water	52:12	0:0	8	p_stream
op	52:20	0:0	8	->
water	52:22	0:0	8	i_fourcc
op	52:31	0:0	8	==
water	52:34	0:0	8	VLC_CODEC_THEORA
stmts	53:8	66:8	7	
water	53:8	0:0	8	{
water	54:12	0:0	8	p_stream
op	54:20	0:0	8	->
water	54:22	0:0	8	i_num_frames
op	54:34	0:0	8	++
water	54:36	0:0	8	;
if	55:12	63:12	8	(p_data -> i_flags & BLOCK_FLAG_TYPE_I)
cond	55:16	55:34	9	p_data -> i_flags & BLOCK_FLAG_TYPE_I
water	55:16	0:0	10	p_data
op	55:22	0:0	10	->
water	55:24	0:0	10	i_flags
op	55:32	0:0	10	&
water	55:34	0:0	10	BLOCK_FLAG_TYPE_I
stmts	56:12	63:12	9	
water	56:12	0:0	10	{
water	57:16	0:0	10	p_stream
op	57:24	0:0	10	->
water	57:26	0:0	10	i_num_keyframes
op	57:41	0:0	10	++
water	57:43	0:0	10	;
water	58:16	0:0	10	p_stream
op	58:24	0:0	10	->
water	58:26	0:0	10	i_last_keyframe
op	58:42	0:0	10	=
water	58:44	0:0	10	p_stream
op	58:52	0:0	10	->
water	58:54	0:0	10	i_num_frames
water	58:66	0:0	10	;
water	60:16	0:0	10	i_time
op	60:23	0:0	10	=
water	60:25	0:0	10	CLOCK_FREQ
op	60:36	0:0	10	*
water	60:38	0:0	10	(
water	60:40	0:0	10	p_stream
op	60:48	0:0	10	->
water	60:50	0:0	10	i_num_frames
op	60:63	0:0	10	-
water	60:65	0:0	10	1
water	60:67	0:0	10	)
op	60:69	0:0	10	*
water	61:25	0:0	10	p_input
op	61:32	0:0	10	->
water	61:34	0:0	10	p_fmt
op	61:39	0:0	10	->
water	61:41	0:0	10	video
op	61:46	0:0	10	.
water	61:47	0:0	10	i_frame_rate_base
op	61:65	0:0	10	/
water	61:68	0:0	10	p_input
op	61:75	0:0	10	->
water	61:77	0:0	10	p_fmt
op	61:82	0:0	10	->
water	61:84	0:0	10	video
op	61:89	0:0	10	.
water	61:90	0:0	10	i_frame_rate
water	61:102	0:0	10	;
call	62:16	62:54	10	AddIndexEntry
arg	62:31	62:36	11	p_mux
water	62:31	0:0	12	p_mux
arg	62:38	62:44	11	i_time
water	62:38	0:0	12	i_time
arg	62:46	62:54	11	p_input
water	62:46	0:0	12	p_input
water	62:55	0:0	10	;
water	63:12	0:0	10	}
water	64:12	0:0	8	op
op	64:14	0:0	8	.
water	64:15	0:0	8	granulepos
op	64:26	0:0	8	=
water	64:28	0:0	8	(
water	64:29	0:0	8	p_stream
op	64:37	0:0	8	->
water	64:39	0:0	8	i_last_keyframe
op	64:55	0:0	8	<<
water	64:58	0:0	8	p_stream
op	64:66	0:0	8	->
water	64:68	0:0	8	i_keyframe_granule_shift
water	64:93	0:0	8	)
op	65:26	0:0	8	|
water	65:28	0:0	8	(
water	65:29	0:0	8	p_stream
op	65:37	0:0	8	->
water	65:39	0:0	8	i_num_frames
op	65:51	0:0	8	-
water	65:52	0:0	8	p_stream
op	65:60	0:0	8	->
water	65:62	0:0	8	i_last_keyframe
water	65:77	0:0	8	)
water	65:78	0:0	8	;
water	66:8	0:0	8	}
else	67:8	107:8	6
stmts	67:13	107:8	7	
if	67:13	107:8	8	(p_stream -> i_fourcc == VLC_CODEC_DIRAC)
cond	67:17	67:39	9	p_stream -> i_fourcc == VLC_CODEC_DIRAC
water	67:17	0:0	10	p_stream
op	67:25	0:0	10	->
water	67:27	0:0	10	i_fourcc
op	67:36	0:0	10	==
water	67:39	0:0	10	VLC_CODEC_DIRAC
stmts	68:8	107:8	9	
water	68:8	0:0	10	{
if	70:4	71:17	10	(( a + 5000 / CLOCK_FREQ ) > ( a / CLOCK_FREQ ))
cond	70:9	70:54	11	( a + 5000 / CLOCK_FREQ ) > ( a / CLOCK_FREQ )
water	70:9	0:0	12	(
water	70:11	0:0	12	a
op	70:13	0:0	12	+
water	70:15	0:0	12	5000
op	70:20	0:0	12	/
water	70:22	0:0	12	CLOCK_FREQ
water	70:33	0:0	12	)
op	70:35	0:0	12	>
water	70:37	0:0	12	(
water	70:39	0:0	12	a
op	70:41	0:0	12	/
water	70:43	0:0	12	CLOCK_FREQ
water	70:54	0:0	12	)
stmts	71:8	71:17	11	
water	71:8	0:0	12	a
op	71:10	0:0	12	+=
water	71:13	0:0	12	5000
water	71:17	0:0	12	;
water	72:4	0:0	10	a
op	72:6	0:0	10	/=
water	72:9	0:0	10	CLOCK_FREQ
water	72:19	0:0	10	;
decl	73:12	73:140	10	mtime_t	dt
op	73:23	0:0	10	=
water	73:25	0:0	10	(
water	73:26	0:0	10	p_data
op	73:32	0:0	10	->
water	73:34	0:0	10	i_dts
op	73:40	0:0	10	-
water	73:42	0:0	10	p_sys
op	73:47	0:0	10	->
water	73:49	0:0	10	i_start_dts
water	73:60	0:0	10	)
op	73:62	0:0	10	*
water	73:64	0:0	10	p_input
op	73:71	0:0	10	->
water	73:73	0:0	10	p_fmt
op	73:78	0:0	10	->
water	73:80	0:0	10	video
op	73:85	0:0	10	.
water	73:86	0:0	10	i_frame_rate
op	73:99	0:0	10	/
water	73:101	0:0	10	p_input
op	73:108	0:0	10	->
water	73:110	0:0	10	p_fmt
op	73:115	0:0	10	->
water	73:117	0:0	10	video
op	73:122	0:0	10	.
water	73:123	0:0	10	i_frame_rate_base
call	74:12	74:28	10	FRAME_ROUND
arg	74:25	74:28	11	dt
water	74:25	0:0	12	dt
water	74:29	0:0	10	;
decl	75:12	75:168	10	mtime_t	pt
op	75:23	0:0	10	=
water	75:25	0:0	10	(
water	75:26	0:0	10	p_data
op	75:32	0:0	10	->
water	75:34	0:0	10	i_pts
op	75:40	0:0	10	-
water	75:42	0:0	10	p_sys
op	75:47	0:0	10	->
water	75:49	0:0	10	i_start_dts
op	75:61	0:0	10	-
water	75:63	0:0	10	p_stream
op	75:71	0:0	10	->
water	75:73	0:0	10	i_baseptsdelay
water	75:88	0:0	10	)
op	75:90	0:0	10	*
water	75:92	0:0	10	p_input
op	75:99	0:0	10	->
water	75:101	0:0	10	p_fmt
op	75:106	0:0	10	->
water	75:108	0:0	10	video
op	75:113	0:0	10	.
water	75:114	0:0	10	i_frame_rate
op	75:127	0:0	10	/
water	75:129	0:0	10	p_input
op	75:136	0:0	10	->
water	75:138	0:0	10	p_fmt
op	75:143	0:0	10	->
water	75:145	0:0	10	video
op	75:150	0:0	10	.
water	75:151	0:0	10	i_frame_rate_base
call	76:12	76:28	10	FRAME_ROUND
arg	76:25	76:28	11	pt
water	76:25	0:0	12	pt
water	76:29	0:0	10	;
if	78:12	79:20	10	(pt == p_stream -> i_dirac_last_pt)
cond	78:17	78:33	11	pt == p_stream -> i_dirac_last_pt
water	78:17	0:0	12	pt
op	78:20	0:0	12	==
water	78:23	0:0	12	p_stream
op	78:31	0:0	12	->
water	78:33	0:0	12	i_dirac_last_pt
stmts	79:16	79:20	11	
water	79:16	0:0	12	pt
op	79:18	0:0	12	++
water	79:20	0:0	12	;
else	80:12	81:46	10
stmts	81:16	81:46	11	
water	81:16	0:0	12	p_stream
op	81:24	0:0	12	->
water	81:26	0:0	12	i_dirac_last_pt
op	81:42	0:0	12	=
water	81:44	0:0	12	pt
water	81:46	0:0	12	;
if	83:12	84:20	10	(dt == p_stream -> i_dirac_last_dt)
cond	83:17	83:33	11	dt == p_stream -> i_dirac_last_dt
water	83:17	0:0	12	dt
op	83:20	0:0	12	==
water	83:23	0:0	12	p_stream
op	83:31	0:0	12	->
water	83:33	0:0	12	i_dirac_last_dt
stmts	84:16	84:20	11	
water	84:16	0:0	12	dt
op	84:18	0:0	12	++
water	84:20	0:0	12	;
else	85:12	86:46	10
stmts	86:16	86:46	11	
water	86:16	0:0	12	p_stream
op	86:24	0:0	12	->
water	86:26	0:0	12	i_dirac_last_dt
op	86:42	0:0	12	=
water	86:44	0:0	12	dt
water	86:46	0:0	12	;
if	87:12	88:46	10	(p_data -> i_flags & BLOCK_FLAG_TYPE_I)
cond	87:16	87:34	11	p_data -> i_flags & BLOCK_FLAG_TYPE_I
water	87:16	0:0	12	p_data
op	87:22	0:0	12	->
water	87:24	0:0	12	i_flags
op	87:32	0:0	12	&
water	87:34	0:0	12	BLOCK_FLAG_TYPE_I
stmts	88:16	88:46	11	
water	88:16	0:0	12	p_stream
op	88:24	0:0	12	->
water	88:26	0:0	12	i_last_keyframe
op	88:42	0:0	12	=
water	88:44	0:0	12	dt
water	88:46	0:0	12	;
decl	89:12	89:57	10	mtime_t	dist
op	89:25	0:0	10	=
water	89:27	0:0	10	dt
op	89:30	0:0	10	-
water	89:32	0:0	10	p_stream
op	89:40	0:0	10	->
water	89:42	0:0	10	i_last_keyframe
if	91:12	95:12	10	(true)
cond	91:17	91:17	11	true
water	91:17	0:0	12	true
stmts	92:12	95:12	11	
water	92:12	0:0	12	{
water	93:16	0:0	12	pt
op	93:19	0:0	12	*=
water	93:21	0:0	12	2
water	93:22	0:0	12	;
water	94:16	0:0	12	dt
op	94:19	0:0	12	*=
water	94:21	0:0	12	2
water	94:22	0:0	12	;
water	95:12	0:0	12	}
decl	96:12	96:35	10	mtime_t	delay
op	96:26	0:0	10	=
water	96:28	0:0	10	pt
op	96:31	0:0	10	-
water	96:33	0:0	10	dt
if	97:12	97:40	10	(delay < 0)
cond	97:17	97:25	11	delay < 0
water	97:17	0:0	12	delay
op	97:23	0:0	12	<
water	97:25	0:0	12	0
stmts	97:29	97:40	11	
water	97:29	0:0	12	delay
op	97:35	0:0	12	*=
op	97:38	0:0	12	-
water	97:39	0:0	12	1
water	97:40	0:0	12	;
water	98:12	0:0	10	op
op	98:14	0:0	10	.
water	98:15	0:0	10	granulepos
op	98:26	0:0	10	=
water	98:28	0:0	10	(
water	98:29	0:0	10	pt
op	98:32	0:0	10	-
water	98:34	0:0	10	delay
water	98:39	0:0	10	)
op	98:41	0:0	10	<<
water	98:44	0:0	10	31
op	98:47	0:0	10	|
water	98:49	0:0	10	(
water	98:50	0:0	10	dist
op	98:54	0:0	10	&
water	98:55	0:0	10	0
water	98:56	0:0	10	xff00
water	98:61	0:0	10	)
op	98:63	0:0	10	<<
water	98:66	0:0	10	14
op	99:26	0:0	10	|
water	99:28	0:0	10	(
water	99:29	0:0	10	delay
op	99:34	0:0	10	&
water	99:35	0:0	10	0
water	99:36	0:0	10	x1fff
water	99:41	0:0	10	)
op	99:43	0:0	10	<<
water	99:46	0:0	10	9
op	99:48	0:0	10	|
water	99:50	0:0	10	(
water	99:51	0:0	10	dist
op	99:55	0:0	10	&
water	99:56	0:0	10	0
water	99:57	0:0	10	xff
water	99:60	0:0	10	)
water	99:61	0:0	10	;
call	101:12	104:50	10	msg_Dbg
arg	101:21	101:26	11	p_mux
water	101:21	0:0	12	p_mux
arg	101:28	101:115	11	"dts %"PRId64" pts %"PRId64" dt %"PRId64" pt %"PRId64" delay %"PRId64" granule %"PRId64
water	101:28	0:0	12	"dts %"
water	101:35	0:0	12	PRId64
water	101:41	0:0	12	" pts %"
water	101:49	0:0	12	PRId64
water	101:55	0:0	12	" dt %"
water	101:62	0:0	12	PRId64
water	101:68	0:0	12	" pt %"
water	101:75	0:0	12	PRId64
water	101:81	0:0	12	" delay %"
water	101:91	0:0	12	PRId64
water	101:97	0:0	12	" granule %"
water	101:109	0:0	12	PRId64
arg	102:21	102:57	11	(p_data->i_dts-p_sys->i_start_dts)
water	102:21	0:0	12	(
water	102:22	0:0	12	p_data
op	102:28	0:0	12	->
water	102:30	0:0	12	i_dts
op	102:36	0:0	12	-
water	102:38	0:0	12	p_sys
op	102:43	0:0	12	->
water	102:45	0:0	12	i_start_dts
water	102:56	0:0	12	)
arg	103:21	103:58	11	(p_data->i_pts-p_sys->i_start_dts)
water	103:21	0:0	12	(
water	103:22	0:0	12	p_data
op	103:28	0:0	12	->
water	103:30	0:0	12	i_pts
op	103:36	0:0	12	-
water	103:38	0:0	12	p_sys
op	103:43	0:0	12	->
water	103:45	0:0	12	i_start_dts
water	103:57	0:0	12	)
arg	104:21	104:23	11	dt
water	104:21	0:0	12	dt
arg	104:25	104:27	11	pt
water	104:25	0:0	12	pt
arg	104:29	104:34	11	delay
water	104:29	0:0	12	delay
arg	104:36	104:50	11	op.granulepos
water	104:36	0:0	12	op
op	104:38	0:0	12	.
water	104:39	0:0	12	granulepos
water	104:51	0:0	10	;
call	106:12	106:46	10	AddIndexEntry
arg	106:27	106:32	11	p_mux
water	106:27	0:0	12	p_mux
arg	106:34	106:36	11	dt
water	106:34	0:0	12	dt
arg	106:38	106:46	11	p_input
water	106:38	0:0	12	p_input
water	106:47	0:0	10	;
water	107:8	0:0	10	}
else	108:8	122:8	6
stmts	108:13	122:8	7	
if	108:13	122:8	8	(p_stream -> i_fourcc == VLC_CODEC_VP8)
cond	108:17	108:39	9	p_stream -> i_fourcc == VLC_CODEC_VP8
water	108:17	0:0	10	p_stream
op	108:25	0:0	10	->
water	108:27	0:0	10	i_fourcc
op	108:36	0:0	10	==
water	108:39	0:0	10	VLC_CODEC_VP8
stmts	109:8	122:8	9	
water	109:8	0:0	10	{
water	110:12	0:0	10	p_stream
op	110:20	0:0	10	->
water	110:22	0:0	10	i_num_frames
op	110:34	0:0	10	++
water	110:36	0:0	10	;
if	111:12	119:12	10	(p_data -> i_flags & BLOCK_FLAG_TYPE_I)
cond	111:16	111:34	11	p_data -> i_flags & BLOCK_FLAG_TYPE_I
water	111:16	0:0	12	p_data
op	111:22	0:0	12	->
water	111:24	0:0	12	i_flags
op	111:32	0:0	12	&
water	111:34	0:0	12	BLOCK_FLAG_TYPE_I
stmts	112:12	119:12	11	
water	112:12	0:0	12	{
water	113:16	0:0	12	p_stream
op	113:24	0:0	12	->
water	113:26	0:0	12	i_num_keyframes
op	113:41	0:0	12	++
water	113:43	0:0	12	;
water	114:16	0:0	12	p_stream
op	114:24	0:0	12	->
water	114:26	0:0	12	i_last_keyframe
op	114:42	0:0	12	=
water	114:44	0:0	12	p_stream
op	114:52	0:0	12	->
water	114:54	0:0	12	i_num_frames
water	114:66	0:0	12	;
water	116:16	0:0	12	i_time
op	116:23	0:0	12	=
water	116:25	0:0	12	CLOCK_FREQ
op	116:36	0:0	12	*
water	116:38	0:0	12	(
water	116:40	0:0	12	p_stream
op	116:48	0:0	12	->
water	116:50	0:0	12	i_num_frames
op	116:63	0:0	12	-
water	116:65	0:0	12	1
water	116:67	0:0	12	)
op	116:69	0:0	12	*
water	117:25	0:0	12	p_input
op	117:32	0:0	12	->
water	117:34	0:0	12	p_fmt
op	117:39	0:0	12	->
water	117:41	0:0	12	video
op	117:46	0:0	12	.
water	117:47	0:0	12	i_frame_rate_base
op	117:65	0:0	12	/
water	117:68	0:0	12	p_input
op	117:75	0:0	12	->
water	117:77	0:0	12	p_fmt
op	117:82	0:0	12	->
water	117:84	0:0	12	video
op	117:89	0:0	12	.
water	117:90	0:0	12	i_frame_rate
water	117:102	0:0	12	;
call	118:16	118:54	12	AddIndexEntry
arg	118:31	118:36	13	p_mux
water	118:31	0:0	14	p_mux
arg	118:38	118:44	13	i_time
water	118:38	0:0	14	i_time
arg	118:46	118:54	13	p_input
water	118:46	0:0	14	p_input
water	118:55	0:0	12	;
water	119:12	0:0	12	}
water	120:12	0:0	10	op
op	120:14	0:0	10	.
water	120:15	0:0	10	granulepos
op	120:26	0:0	10	=
water	120:28	0:0	10	(
water	120:30	0:0	10	(
water	120:31	0:0	10	(
water	120:32	0:0	10	int64_t
water	120:39	0:0	10	)
water	120:40	0:0	10	p_stream
op	120:48	0:0	10	->
water	120:50	0:0	10	i_num_frames
water	120:62	0:0	10	)
op	120:64	0:0	10	<<
water	120:67	0:0	10	32
water	120:70	0:0	10	)
op	120:72	0:0	10	|
water	121:12	0:0	10	(
water	121:14	0:0	10	(
water	121:16	0:0	10	(
water	121:18	0:0	10	p_stream
op	121:26	0:0	10	->
water	121:28	0:0	10	i_num_frames
op	121:41	0:0	10	-
water	121:43	0:0	10	p_stream
op	121:51	0:0	10	->
water	121:53	0:0	10	i_last_keyframe
water	121:69	0:0	10	)
op	121:71	0:0	10	&
water	121:73	0:0	10	0
water	121:74	0:0	10	x07FFFFFF
water	121:84	0:0	10	)
op	121:86	0:0	10	<<
water	121:89	0:0	10	3
water	121:91	0:0	10	)
water	121:92	0:0	10	;
water	122:8	0:0	10	}
else	123:8	125:53	6
stmts	123:13	125:53	7	
if	123:13	125:53	8	(p_stream -> p_oggds_header)
cond	123:17	123:27	9	p_stream -> p_oggds_header
water	123:17	0:0	10	p_stream
op	123:25	0:0	10	->
water	123:27	0:0	10	p_oggds_header
stmts	124:12	125:53	9	
water	124:12	0:0	10	op
op	124:14	0:0	10	.
water	124:15	0:0	10	granulepos
op	124:26	0:0	10	=
water	124:28	0:0	10	(
water	124:30	0:0	10	p_data
op	124:36	0:0	10	->
water	124:38	0:0	10	i_dts
op	124:44	0:0	10	-
water	124:46	0:0	10	p_sys
op	124:51	0:0	10	->
water	124:53	0:0	10	i_start_dts
water	124:65	0:0	10	)
call	124:67	124:79	10	*INT64_C
arg	124:77	124:79	11	10
water	124:77	0:0	12	10
op	124:81	0:0	10	/
water	125:16	0:0	10	p_stream
op	125:24	0:0	10	->
water	125:26	0:0	10	p_oggds_header
op	125:40	0:0	10	->
water	125:42	0:0	10	i_time_unit
water	125:53	0:0	10	;
water	126:4	0:0	6	}
else	127:4	131:4	2
stmts	127:9	131:4	3	
if	127:9	131:4	4	(p_stream -> i_cat == SPU_ES)
cond	127:13	127:32	5	p_stream -> i_cat == SPU_ES
water	127:13	0:0	6	p_stream
op	127:21	0:0	6	->
water	127:23	0:0	6	i_cat
op	127:29	0:0	6	==
water	127:32	0:0	6	SPU_ES
stmts	128:4	131:4	5	
water	128:4	0:0	6	{
water	130:8	0:0	6	op
op	130:10	0:0	6	.
water	130:11	0:0	6	granulepos
op	130:22	0:0	6	=
water	130:24	0:0	6	(
water	130:26	0:0	6	p_data
op	130:32	0:0	6	->
water	130:34	0:0	6	i_dts
op	130:40	0:0	6	-
water	130:42	0:0	6	p_sys
op	130:47	0:0	6	->
water	130:49	0:0	6	i_start_dts
water	130:61	0:0	6	)
op	130:63	0:0	6	/
water	130:65	0:0	6	1000
water	130:69	0:0	6	;
water	131:4	0:0	6	}
else	132:4	133:27	2
stmts	133:8	133:27	3	
return	133:8	133:27	4	VLC_EGENERIC
water	133:15	0:0	5	VLC_EGENERIC
water	134:4	0:0	2	p_stream
op	134:12	0:0	2	->
water	134:14	0:0	2	u_last_granulepos
op	134:32	0:0	2	=
water	134:34	0:0	2	op
op	134:36	0:0	2	.
water	134:37	0:0	2	granulepos
water	134:47	0:0	2	;
call	135:4	135:44	2	ogg_stream_packetin
arg	135:25	135:38	3	&p_stream->os
op	135:25	0:0	4	&
water	135:26	0:0	4	p_stream
op	135:34	0:0	4	->
water	135:36	0:0	4	os
arg	135:40	135:44	3	&op
op	135:40	0:0	4	&
water	135:41	0:0	4	op
water	135:45	0:0	2	;
if	136:4	146:4	2	(p_stream -> i_cat == SPU_ES || p_stream -> i_fourcc == VLC_CODEC_SPEEX || p_stream -> i_fourcc == VLC_CODEC_DIRAC)
cond	136:8	138:30	3	p_stream -> i_cat == SPU_ES || p_stream -> i_fourcc == VLC_CODEC_SPEEX || p_stream -> i_fourcc == VLC_CODEC_DIRAC
water	136:8	0:0	4	p_stream
op	136:16	0:0	4	->
water	136:18	0:0	4	i_cat
op	136:24	0:0	4	==
water	136:27	0:0	4	SPU_ES
op	136:34	0:0	4	||
water	137:8	0:0	4	p_stream
op	137:16	0:0	4	->
water	137:18	0:0	4	i_fourcc
op	137:27	0:0	4	==
water	137:30	0:0	4	VLC_CODEC_SPEEX
op	137:46	0:0	4	||
water	138:8	0:0	4	p_stream
op	138:16	0:0	4	->
water	138:18	0:0	4	i_fourcc
op	138:27	0:0	4	==
water	138:30	0:0	4	VLC_CODEC_DIRAC
stmts	139:4	146:4	3	
water	139:4	0:0	4	{
water	145:8	0:0	4	p_og
op	145:13	0:0	4	=
call	145:15	145:67	4	OggStreamFlush
arg	145:31	145:36	5	p_mux
water	145:31	0:0	6	p_mux
arg	145:38	145:51	5	&p_stream->os
op	145:38	0:0	6	&
water	145:39	0:0	6	p_stream
op	145:47	0:0	6	->
water	145:49	0:0	6	os
arg	145:53	145:67	5	p_data->i_dts
water	145:53	0:0	6	p_data
op	145:59	0:0	6	->
water	145:61	0:0	6	i_dts
water	145:68	0:0	4	;
water	146:4	0:0	4	}
else	147:4	150:4	2
stmts	148:4	150:4	3	
water	148:4	0:0	4	{
water	149:8	0:0	4	p_og
op	149:13	0:0	4	=
call	149:15	149:69	4	OggStreamPageOut
arg	149:33	149:38	5	p_mux
water	149:33	0:0	6	p_mux
arg	149:40	149:53	5	&p_stream->os
op	149:40	0:0	6	&
water	149:41	0:0	6	p_stream
op	149:49	0:0	6	->
water	149:51	0:0	6	os
arg	149:55	149:69	5	p_data->i_dts
water	149:55	0:0	6	p_data
op	149:61	0:0	6	->
water	149:63	0:0	6	i_dts
water	149:70	0:0	4	;
water	150:4	0:0	4	}
if	151:4	157:4	2	(p_og)
cond	151:8	151:8	3	p_og
water	151:8	0:0	4	p_og
stmts	152:4	157:4	3	
water	152:4	0:0	4	{
call	153:8	153:62	4	OggSetDate
arg	153:20	153:24	5	p_og
water	153:20	0:0	6	p_og
arg	153:26	153:41	5	p_stream->i_dts
water	153:26	0:0	6	p_stream
op	153:34	0:0	6	->
water	153:36	0:0	6	i_dts
arg	153:43	153:62	5	p_stream->i_length
water	153:43	0:0	6	p_stream
op	153:51	0:0	6	->
water	153:53	0:0	6	i_length
water	153:63	0:0	4	;
water	154:8	0:0	4	p_stream
op	154:16	0:0	4	->
water	154:18	0:0	4	i_dts
op	154:24	0:0	4	=
op	154:26	0:0	4	-
water	154:27	0:0	4	1
water	154:28	0:0	4	;
water	155:8	0:0	4	p_stream
op	155:16	0:0	4	->
water	155:18	0:0	4	i_length
op	155:27	0:0	4	=
water	155:29	0:0	4	0
water	155:30	0:0	4	;
water	156:8	0:0	4	p_mux
op	156:13	0:0	4	->
water	156:15	0:0	4	p_sys
op	156:20	0:0	4	->
water	156:22	0:0	4	i_pos
op	156:28	0:0	4	+=
call	156:31	156:74	4	sout_AccessOutWrite
arg	156:52	156:67	5	p_mux->p_access
water	156:52	0:0	6	p_mux
op	156:57	0:0	6	->
water	156:59	0:0	6	p_access
arg	156:69	156:74	5	p_og
water	156:69	0:0	6	p_og
water	156:75	0:0	4	;
water	157:4	0:0	4	}
else	158:4	165:4	2
stmts	159:4	165:4	3	
water	159:4	0:0	4	{
if	160:8	163:8	4	(p_stream -> i_dts < 0)
cond	160:12	160:30	5	p_stream -> i_dts < 0
water	160:12	0:0	6	p_stream
op	160:20	0:0	6	->
water	160:22	0:0	6	i_dts
op	160:28	0:0	6	<
water	160:30	0:0	6	0
stmts	161:8	163:8	5	
water	161:8	0:0	6	{
water	162:12	0:0	6	p_stream
op	162:20	0:0	6	->
water	162:22	0:0	6	i_dts
op	162:28	0:0	6	=
water	162:30	0:0	6	p_data
op	162:36	0:0	6	->
water	162:38	0:0	6	i_dts
water	162:43	0:0	6	;
water	163:8	0:0	6	}
water	164:8	0:0	4	p_stream
op	164:16	0:0	4	->
water	164:18	0:0	4	i_length
op	164:27	0:0	4	+=
water	164:30	0:0	4	p_data
op	164:36	0:0	4	->
water	164:38	0:0	4	i_length
water	164:46	0:0	4	;
water	165:4	0:0	4	}
call	166:4	166:26	2	block_Release
arg	166:19	166:26	3	p_data
water	166:19	0:0	4	p_data
water	166:27	0:0	2	;
return	167:4	167:22	2	VLC_SUCCESS
water	167:11	0:0	3	VLC_SUCCESS

func	2:0	31:0	0	const char *	get_transcode_string
params	2:32	0:0	1	
param	2:33	2:45	2	char *	preset
stmnts	3:4	30:4	1	
water	3:4	0:0	2	static
water	3:11	0:0	2	const
water	3:17	0:0	2	char
water	3:22	0:0	2	mp4_high
op	3:30	0:0	2	[
op	3:31	0:0	2	]
op	3:33	0:0	2	=
water	3:35	0:0	2	"#transcode{vcodec=h264,venc=x264{cfr=16},scale=1,acodec=mp4a,ab=160,channels=2,samplerate=44100}"
water	3:133	0:0	2	;
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	char
water	4:22	0:0	2	mp4_low
op	4:29	0:0	2	[
op	4:30	0:0	2	]
op	4:32	0:0	2	=
water	4:34	0:0	2	"#transcode{vcodec=h264,venc=x264{cfr=40},scale=1,acodec=mp4a,ab=96,channels=2,samplerate=44100}"
water	4:131	0:0	2	;
water	5:4	0:0	2	static
water	5:11	0:0	2	const
water	5:17	0:0	2	char
water	5:22	0:0	2	ogg_high
op	5:30	0:0	2	[
op	5:31	0:0	2	]
op	5:33	0:0	2	=
water	5:35	0:0	2	"#transcode{vcodec=theo,venc=theora{quality=9},scale=1,acodec=vorb,ab=160,channels=2,samplerate=44100}"
water	5:138	0:0	2	;
water	6:4	0:0	2	static
water	6:11	0:0	2	const
water	6:17	0:0	2	char
water	6:22	0:0	2	ogg_low
op	6:29	0:0	2	[
op	6:30	0:0	2	]
op	6:32	0:0	2	=
water	6:34	0:0	2	"#transcode{vcodec=theo,venc=theora{quality=4},scale=1,acodec=vorb,ab=96,channels=2,samplerate=44100}"
water	6:136	0:0	2	;
water	7:4	0:0	2	static
water	7:11	0:0	2	const
water	7:17	0:0	2	char
water	7:22	0:0	2	webm_high
op	7:31	0:0	2	[
op	7:32	0:0	2	]
op	7:34	0:0	2	=
water	7:36	0:0	2	"#transcode{vcodec=VP80,vb=2000,scale=1,acodec=vorb,ab=160,channels=2,samplerate=44100}"
water	7:124	0:0	2	;
water	8:4	0:0	2	static
water	8:11	0:0	2	const
water	8:17	0:0	2	char
water	8:22	0:0	2	webm_low
op	8:30	0:0	2	[
op	8:31	0:0	2	]
op	8:33	0:0	2	=
water	8:35	0:0	2	"#transcode{vcodec=VP80,vb=1000,scale=1,acodec=vorb,ab=96,channels=2,samplerate=44100}"
water	8:122	0:0	2	;
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	char
water	9:22	0:0	2	nothing
op	9:29	0:0	2	[
op	9:30	0:0	2	]
op	9:32	0:0	2	=
water	9:34	0:0	2	""
water	9:36	0:0	2	;
if	10:4	12:4	2	(0 ==strcmp (preset ,PRESET_H264_AAC_MP4_HIGH ))
cond	10:7	10:51	3	0 ==strcmp (preset ,PRESET_H264_AAC_MP4_HIGH )
water	10:7	0:0	4	0
op	10:9	0:0	4	==
call	10:12	10:51	4	strcmp
arg	10:19	10:25	5	preset
water	10:19	0:0	6	preset
arg	10:27	10:51	5	PRESET_H264_AAC_MP4_HIGH
water	10:27	0:0	6	PRESET_H264_AAC_MP4_HIGH
stmts	10:54	12:4	3	
water	10:54	0:0	4	{
return	11:8	11:23	4	mp4_high
water	11:15	0:0	5	mp4_high
water	12:4	0:0	4	}
else	13:4	15:4	2
stmts	13:9	15:4	3	
if	13:9	15:4	4	(0 ==strcmp (preset ,PRESET_H264_AAC_MP4_LOW ))
cond	13:12	13:55	5	0 ==strcmp (preset ,PRESET_H264_AAC_MP4_LOW )
water	13:12	0:0	6	0
op	13:14	0:0	6	==
call	13:17	13:55	6	strcmp
arg	13:24	13:30	7	preset
water	13:24	0:0	8	preset
arg	13:32	13:55	7	PRESET_H264_AAC_MP4_LOW
water	13:32	0:0	8	PRESET_H264_AAC_MP4_LOW
stmts	13:58	15:4	5	
water	13:58	0:0	6	{
return	14:8	14:22	6	mp4_low
water	14:15	0:0	7	mp4_low
water	15:4	0:0	6	}
else	16:4	18:4	2
stmts	16:9	18:4	3	
if	16:9	18:4	4	(0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_HIGH ))
cond	16:12	16:61	5	0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_HIGH )
water	16:12	0:0	6	0
op	16:14	0:0	6	==
call	16:17	16:61	6	strcmp
arg	16:24	16:30	7	preset
water	16:24	0:0	8	preset
arg	16:32	16:61	7	PRESET_THEORA_VORBIS_OGG_HIGH
water	16:32	0:0	8	PRESET_THEORA_VORBIS_OGG_HIGH
stmts	16:64	18:4	5	
water	16:64	0:0	6	{
return	17:8	17:23	6	ogg_high
water	17:15	0:0	7	ogg_high
water	18:4	0:0	6	}
else	19:4	21:4	2
stmts	19:9	21:4	3	
if	19:9	21:4	4	(0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_LOW ))
cond	19:12	19:60	5	0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_LOW )
water	19:12	0:0	6	0
op	19:14	0:0	6	==
call	19:17	19:60	6	strcmp
arg	19:24	19:30	7	preset
water	19:24	0:0	8	preset
arg	19:32	19:60	7	PRESET_THEORA_VORBIS_OGG_LOW
water	19:32	0:0	8	PRESET_THEORA_VORBIS_OGG_LOW
stmts	19:63	21:4	5	
water	19:63	0:0	6	{
return	20:8	20:22	6	ogg_low
water	20:15	0:0	7	ogg_low
water	21:4	0:0	6	}
else	22:4	24:4	2
stmts	22:9	24:4	3	
if	22:9	24:4	4	(0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_HIGH ))
cond	22:12	22:59	5	0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_HIGH )
water	22:12	0:0	6	0
op	22:14	0:0	6	==
call	22:17	22:59	6	strcmp
arg	22:24	22:30	7	preset
water	22:24	0:0	8	preset
arg	22:32	22:59	7	PRESET_VP8_VORBIS_WEBM_HIGH
water	22:32	0:0	8	PRESET_VP8_VORBIS_WEBM_HIGH
stmts	22:62	24:4	5	
water	22:62	0:0	6	{
return	23:8	23:24	6	webm_high
water	23:15	0:0	7	webm_high
water	24:4	0:0	6	}
else	25:4	27:4	2
stmts	25:9	27:4	3	
if	25:9	27:4	4	(0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_LOW ))
cond	25:12	25:58	5	0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_LOW )
water	25:12	0:0	6	0
op	25:14	0:0	6	==
call	25:17	25:58	6	strcmp
arg	25:24	25:30	7	preset
water	25:24	0:0	8	preset
arg	25:32	25:58	7	PRESET_VP8_VORBIS_WEBM_LOW
water	25:32	0:0	8	PRESET_VP8_VORBIS_WEBM_LOW
stmts	25:61	27:4	5	
water	25:61	0:0	6	{
return	26:8	26:23	6	webm_low
water	26:15	0:0	7	webm_low
water	27:4	0:0	6	}
else	28:4	30:4	2
stmts	28:9	30:4	3	
water	28:9	0:0	4	{
return	29:8	29:22	4	nothing
water	29:15	0:0	5	nothing
water	30:4	0:0	4	}
func	33:0	62:0	0	const char *	get_transcode_string
params	33:32	0:0	1	
param	33:33	33:45	2	char *	preset
stmnts	34:4	61:4	1	
water	34:4	0:0	2	static
water	34:11	0:0	2	const
water	34:17	0:0	2	char
water	34:22	0:0	2	mp4_high
op	34:30	0:0	2	[
op	34:31	0:0	2	]
op	34:33	0:0	2	=
water	34:35	0:0	2	"#transcode{vcodec=h264,venc=x264{cfr=16},scale=1,acodec=mp4a,ab=160,channels=2,samplerate=44100}"
water	34:133	0:0	2	;
water	35:4	0:0	2	static
water	35:11	0:0	2	const
water	35:17	0:0	2	char
water	35:22	0:0	2	mp4_low
op	35:29	0:0	2	[
op	35:30	0:0	2	]
op	35:32	0:0	2	=
water	35:34	0:0	2	"#transcode{vcodec=h264,venc=x264{cfr=40},scale=1,acodec=mp4a,ab=96,channels=2,samplerate=44100}"
water	35:131	0:0	2	;
water	36:4	0:0	2	static
water	36:11	0:0	2	const
water	36:17	0:0	2	char
water	36:22	0:0	2	ogg_high
op	36:30	0:0	2	[
op	36:31	0:0	2	]
op	36:33	0:0	2	=
water	36:35	0:0	2	"#transcode{vcodec=theo,venc=theora{quality=9},scale=1,acodec=vorb,ab=160,channels=2,samplerate=44100}"
water	36:138	0:0	2	;
water	37:4	0:0	2	static
water	37:11	0:0	2	const
water	37:17	0:0	2	char
water	37:22	0:0	2	ogg_low
op	37:29	0:0	2	[
op	37:30	0:0	2	]
op	37:32	0:0	2	=
water	37:34	0:0	2	"#transcode{vcodec=theo,venc=theora{quality=4},scale=1,acodec=vorb,ab=96,channels=2,samplerate=44100}"
water	37:136	0:0	2	;
water	38:4	0:0	2	static
water	38:11	0:0	2	const
water	38:17	0:0	2	char
water	38:22	0:0	2	webm_high
op	38:31	0:0	2	[
op	38:32	0:0	2	]
op	38:34	0:0	2	=
water	38:36	0:0	2	"#transcode{vcodec=VP80,vb=2000,scale=1,acodec=vorb,ab=160,channels=2,samplerate=44100}"
water	38:124	0:0	2	;
water	39:4	0:0	2	static
water	39:11	0:0	2	const
water	39:17	0:0	2	char
water	39:22	0:0	2	webm_low
op	39:30	0:0	2	[
op	39:31	0:0	2	]
op	39:33	0:0	2	=
water	39:35	0:0	2	"#transcode{vcodec=VP80,vb=1000,scale=1,acodec=vorb,ab=96,channels=2,samplerate=44100}"
water	39:122	0:0	2	;
water	40:4	0:0	2	static
water	40:11	0:0	2	const
water	40:17	0:0	2	char
water	40:22	0:0	2	nothing
op	40:29	0:0	2	[
op	40:30	0:0	2	]
op	40:32	0:0	2	=
water	40:34	0:0	2	""
water	40:36	0:0	2	;
if	41:4	43:4	2	(0 ==strcmp (preset ,PRESET_H264_AAC_MP4_HIGH ))
cond	41:7	41:51	3	0 ==strcmp (preset ,PRESET_H264_AAC_MP4_HIGH )
water	41:7	0:0	4	0
op	41:9	0:0	4	==
call	41:12	41:51	4	strcmp
arg	41:19	41:25	5	preset
water	41:19	0:0	6	preset
arg	41:27	41:51	5	PRESET_H264_AAC_MP4_HIGH
water	41:27	0:0	6	PRESET_H264_AAC_MP4_HIGH
stmts	41:54	43:4	3	
water	41:54	0:0	4	{
return	42:8	42:23	4	mp4_high
water	42:15	0:0	5	mp4_high
water	43:4	0:0	4	}
else	44:4	46:4	2
stmts	44:9	46:4	3	
if	44:9	46:4	4	(0 ==strcmp (preset ,PRESET_H264_AAC_MP4_LOW ))
cond	44:12	44:55	5	0 ==strcmp (preset ,PRESET_H264_AAC_MP4_LOW )
water	44:12	0:0	6	0
op	44:14	0:0	6	==
call	44:17	44:55	6	strcmp
arg	44:24	44:30	7	preset
water	44:24	0:0	8	preset
arg	44:32	44:55	7	PRESET_H264_AAC_MP4_LOW
water	44:32	0:0	8	PRESET_H264_AAC_MP4_LOW
stmts	44:58	46:4	5	
water	44:58	0:0	6	{
return	45:8	45:22	6	mp4_low
water	45:15	0:0	7	mp4_low
water	46:4	0:0	6	}
else	47:4	49:4	2
stmts	47:9	49:4	3	
if	47:9	49:4	4	(0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_HIGH ))
cond	47:12	47:61	5	0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_HIGH )
water	47:12	0:0	6	0
op	47:14	0:0	6	==
call	47:17	47:61	6	strcmp
arg	47:24	47:30	7	preset
water	47:24	0:0	8	preset
arg	47:32	47:61	7	PRESET_THEORA_VORBIS_OGG_HIGH
water	47:32	0:0	8	PRESET_THEORA_VORBIS_OGG_HIGH
stmts	47:64	49:4	5	
water	47:64	0:0	6	{
return	48:8	48:23	6	ogg_high
water	48:15	0:0	7	ogg_high
water	49:4	0:0	6	}
else	50:4	52:4	2
stmts	50:9	52:4	3	
if	50:9	52:4	4	(0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_LOW ))
cond	50:12	50:60	5	0 ==strcmp (preset ,PRESET_THEORA_VORBIS_OGG_LOW )
water	50:12	0:0	6	0
op	50:14	0:0	6	==
call	50:17	50:60	6	strcmp
arg	50:24	50:30	7	preset
water	50:24	0:0	8	preset
arg	50:32	50:60	7	PRESET_THEORA_VORBIS_OGG_LOW
water	50:32	0:0	8	PRESET_THEORA_VORBIS_OGG_LOW
stmts	50:63	52:4	5	
water	50:63	0:0	6	{
return	51:8	51:22	6	ogg_low
water	51:15	0:0	7	ogg_low
water	52:4	0:0	6	}
else	53:4	55:4	2
stmts	53:9	55:4	3	
if	53:9	55:4	4	(0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_HIGH ))
cond	53:12	53:59	5	0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_HIGH )
water	53:12	0:0	6	0
op	53:14	0:0	6	==
call	53:17	53:59	6	strcmp
arg	53:24	53:30	7	preset
water	53:24	0:0	8	preset
arg	53:32	53:59	7	PRESET_VP8_VORBIS_WEBM_HIGH
water	53:32	0:0	8	PRESET_VP8_VORBIS_WEBM_HIGH
stmts	53:62	55:4	5	
water	53:62	0:0	6	{
return	54:8	54:24	6	webm_high
water	54:15	0:0	7	webm_high
water	55:4	0:0	6	}
else	56:4	58:4	2
stmts	56:9	58:4	3	
if	56:9	58:4	4	(0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_LOW ))
cond	56:12	56:58	5	0 ==strcmp (preset ,PRESET_VP8_VORBIS_WEBM_LOW )
water	56:12	0:0	6	0
op	56:14	0:0	6	==
call	56:17	56:58	6	strcmp
arg	56:24	56:30	7	preset
water	56:24	0:0	8	preset
arg	56:32	56:58	7	PRESET_VP8_VORBIS_WEBM_LOW
water	56:32	0:0	8	PRESET_VP8_VORBIS_WEBM_LOW
stmts	56:61	58:4	5	
water	56:61	0:0	6	{
return	57:8	57:23	6	webm_low
water	57:15	0:0	7	webm_low
water	58:4	0:0	6	}
else	59:4	61:4	2
stmts	59:9	61:4	3	
water	59:9	0:0	4	{
return	60:8	60:22	4	nothing
water	60:15	0:0	5	nothing
water	61:4	0:0	4	}

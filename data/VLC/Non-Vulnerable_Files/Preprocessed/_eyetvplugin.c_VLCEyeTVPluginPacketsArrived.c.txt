func	2:0	98:0	0	static long	VLCEyeTVPluginPacketsArrived
params	2:40	0:0	1	
param	2:41	2:73	2	VLCEyeTVPluginGlobals_t *	globals
param	2:75	2:103	2	EyeTVPluginDeviceID	deviceID
param	2:105	2:119	2	long * *	packets
param	2:121	2:138	2	long	packetsCount
stmnts	4:4	97:12	1	
if	4:4	96:4	2	(globals)
cond	4:8	4:8	3	globals
water	4:8	0:0	4	globals
stmts	5:4	96:4	3	
water	5:4	0:0	4	{
if	7:8	95:8	4	(i_vlcSock != - 1)
cond	7:12	7:26	5	i_vlcSock != - 1
water	7:12	0:0	6	i_vlcSock
op	7:22	0:0	6	!=
op	7:25	0:0	6	-
water	7:26	0:0	6	1
stmts	8:8	95:8	5	
water	8:8	0:0	6	{
if	9:12	94:12	6	(deviceID == globals -> activeDeviceID)
cond	9:16	9:37	7	deviceID == globals -> activeDeviceID
water	9:16	0:0	8	deviceID
op	9:25	0:0	8	==
water	9:28	0:0	8	globals
op	9:35	0:0	8	->
water	9:37	0:0	8	activeDeviceID
stmts	10:12	94:12	7	
water	10:12	0:0	8	{
decl	11:16	11:56	8	long	pidCount
op	11:30	0:0	8	=
water	11:32	0:0	8	globals
op	11:39	0:0	8	->
water	11:41	0:0	8	activePIDsCount
if	12:16	93:16	8	(pidCount)
cond	12:20	12:20	9	pidCount
water	12:20	0:0	10	pidCount
stmts	13:16	93:16	9	
water	13:16	0:0	10	{
decl	14:20	14:74	10	uint8_t	packetBuffer[sizeof(TransportStreamPacket)*20]
decl	15:20	15:44	10	int	packetBufferSize
op	15:41	0:0	10	=
water	15:43	0:0	10	0
while	16:20	77:20	10	(packetsCount)
cond	16:27	16:27	11	packetsCount
water	16:27	0:0	12	packetsCount
stmts	17:20	77:20	11	
water	17:20	0:0	12	{
decl	19:24	19:64	12	long	pid
op	19:33	0:0	12	=
call	19:35	19:50	13	ntohl
arg	19:41	19:50	14	**packets
op	19:41	0:0	15	*
op	19:42	0:0	15	*
water	19:43	0:0	15	packets
op	19:51	0:0	12	>>
water	19:53	0:0	12	8
op	19:55	0:0	12	&
water	19:57	0:0	12	0
water	19:58	0:0	12	x1FFFL
if	21:24	74:24	12	(0 x1FFFL != pid)
cond	21:28	21:39	13	0 x1FFFL != pid
water	21:28	0:0	14	0
water	21:29	0:0	14	x1FFFL
op	21:36	0:0	14	!=
water	21:39	0:0	14	pid
stmts	22:24	74:24	13	
water	22:24	0:0	14	{
decl	23:28	23:34	14	long	i
for	24:28	73:28	14	(i = 0 ;i < pidCount;++ i)
forinit	24:33	24:36	15	i = 0 ;
water	24:33	0:0	16	i
op	24:34	0:0	16	=
water	24:35	0:0	16	0
water	24:36	0:0	16	;
cond	24:38	24:40	15	i < pidCount
water	24:38	0:0	16	i
op	24:39	0:0	16	<
water	24:40	0:0	16	pidCount
forexpr	24:50	24:52	15	++ i
op	24:50	0:0	16	++
water	24:52	0:0	16	i
stmts	25:28	73:28	15	
water	25:28	0:0	16	{
if	26:32	72:32	16	(globals -> activePIDs [ i ] . pid == pid)
cond	26:36	26:66	17	globals -> activePIDs [ i ] . pid == pid
water	26:36	0:0	18	globals
op	26:43	0:0	18	->
water	26:45	0:0	18	activePIDs
op	26:55	0:0	18	[
water	26:56	0:0	18	i
op	26:57	0:0	18	]
op	26:58	0:0	18	.
water	26:59	0:0	18	pid
op	26:63	0:0	18	==
water	26:66	0:0	18	pid
stmts	27:32	72:32	17	
water	27:32	0:0	18	{
call	28:36	28:113	18	memcpy
arg	28:43	28:72	19	packetBuffer+packetBufferSize
water	28:43	0:0	20	packetBuffer
op	28:55	0:0	20	+
water	28:56	0:0	20	packetBufferSize
arg	28:74	28:82	19	*packets
op	28:74	0:0	20	*
water	28:75	0:0	20	packets
arg	28:84	28:113	19	sizeof(TransportStreamPacket)
op	28:84	0:0	20	sizeof
water	28:90	0:0	20	(
water	28:91	0:0	20	TransportStreamPacket
water	28:112	0:0	20	)
water	28:114	0:0	18	;
water	29:36	0:0	18	packetBufferSize
op	29:53	0:0	18	+=
op	29:56	0:0	18	sizeof
water	29:62	0:0	18	(
water	29:63	0:0	18	TransportStreamPacket
water	29:84	0:0	18	)
water	29:85	0:0	18	;
if	30:36	45:36	18	(packetBufferSize > ( sizeof ( packetBuffer ) - sizeof ( TransportStreamPacket ) ))
cond	30:40	30:110	19	packetBufferSize > ( sizeof ( packetBuffer ) - sizeof ( TransportStreamPacket ) )
water	30:40	0:0	20	packetBufferSize
op	30:57	0:0	20	>
water	30:59	0:0	20	(
op	30:60	0:0	20	sizeof
water	30:66	0:0	20	(
water	30:67	0:0	20	packetBuffer
water	30:79	0:0	20	)
op	30:80	0:0	20	-
op	30:81	0:0	20	sizeof
water	30:87	0:0	20	(
water	30:88	0:0	20	TransportStreamPacket
water	30:109	0:0	20	)
water	30:110	0:0	20	)
stmts	31:36	45:36	19	
water	31:36	0:0	20	{
decl	33:40	33:103	20	ssize_t	sent
op	33:53	0:0	20	=
call	33:55	33:102	21	write
arg	33:61	33:70	22	i_vlcSock
water	33:61	0:0	23	i_vlcSock
arg	33:72	33:84	22	packetBuffer
water	33:72	0:0	23	packetBuffer
arg	33:86	33:102	22	packetBufferSize
water	33:86	0:0	23	packetBufferSize
if	34:40	43:40	20	(sent != packetBufferSize)
cond	34:44	34:52	21	sent != packetBufferSize
water	34:44	0:0	22	sent
op	34:49	0:0	22	!=
water	34:52	0:0	22	packetBufferSize
stmts	35:40	43:40	21	
water	35:40	0:0	22	{
if	36:44	37:97	22	(sent == - 1)
cond	36:48	36:57	23	sent == - 1
water	36:48	0:0	24	sent
op	36:53	0:0	24	==
op	36:56	0:0	24	-
water	36:57	0:0	24	1
stmts	37:48	37:97	23	
call	37:48	37:96	24	printf
arg	37:55	37:89	25	"data sending failed (errno=%d)\n"
water	37:55	0:0	26	"data sending failed (errno=%d)\n"
arg	37:91	37:96	25	errno
water	37:91	0:0	26	errno
water	37:97	0:0	24	;
else	38:44	39:100	22
stmts	39:48	39:100	23	
call	39:48	39:99	24	printf
arg	39:55	39:93	25	"data sending incomplete (sent=%zd)\n"
water	39:55	0:0	26	"data sending incomplete (sent=%zd)\n"
arg	39:95	39:99	25	sent
water	39:95	0:0	26	sent
water	39:100	0:0	24	;
call	40:44	40:59	22	close
arg	40:50	40:59	23	i_vlcSock
water	40:50	0:0	24	i_vlcSock
water	40:60	0:0	22	;
water	41:44	0:0	22	i_vlcSock
op	41:54	0:0	22	=
op	41:56	0:0	22	-
water	41:57	0:0	22	1
water	41:58	0:0	22	;
return	42:44	42:52	22	0
water	42:51	0:0	23	0
water	43:40	0:0	22	}
water	44:40	0:0	20	packetBufferSize
op	44:57	0:0	20	=
water	44:59	0:0	20	0
water	44:60	0:0	20	;
water	45:36	0:0	20	}
if	46:36	59:36	18	(i > 0)
cond	46:40	46:44	19	i > 0
water	46:40	0:0	20	i
op	46:42	0:0	20	>
water	46:44	0:0	20	0
stmts	47:36	59:36	19	
water	47:36	0:0	20	{
decl	51:40	51:88	20	EyeTVPluginPIDInfo	swap
op	51:64	0:0	20	=
water	51:66	0:0	20	globals
op	51:73	0:0	20	->
water	51:75	0:0	20	activePIDs
op	51:85	0:0	20	[
water	51:86	0:0	20	i
op	51:87	0:0	20	]
do	52:40	56:40	20	(i)
cond	57:47	57:47	21	i
water	57:47	0:0	22	i
stmts	53:40	56:40	21	
water	53:40	0:0	22	{
water	54:44	0:0	22	register
water	54:53	0:0	22	int
water	54:57	0:0	22	c
op	54:59	0:0	22	=
water	54:61	0:0	22	i
op	54:62	0:0	22	--
water	54:64	0:0	22	;
water	55:44	0:0	22	globals
op	55:51	0:0	22	->
water	55:53	0:0	22	activePIDs
op	55:63	0:0	22	[
water	55:64	0:0	22	c
op	55:65	0:0	22	]
op	55:67	0:0	22	=
water	55:69	0:0	22	globals
op	55:76	0:0	22	->
water	55:78	0:0	22	activePIDs
op	55:88	0:0	22	[
water	55:89	0:0	22	i
op	55:90	0:0	22	]
water	55:91	0:0	22	;
water	56:40	0:0	22	}
water	57:50	0:0	20	;
water	58:40	0:0	20	globals
op	58:47	0:0	20	->
water	58:49	0:0	20	activePIDs
op	58:59	0:0	20	[
water	58:60	0:0	20	i
op	58:61	0:0	20	]
op	58:63	0:0	20	=
water	58:65	0:0	20	swap
water	58:69	0:0	20	;
water	59:36	0:0	20	}
if	60:36	69:36	18	(pid && globals -> activePIDs [ 0 ] . pidType != kEyeTVPIDType_PMT)
cond	60:40	60:81	19	pid && globals -> activePIDs [ 0 ] . pidType != kEyeTVPIDType_PMT
water	60:40	0:0	20	pid
op	60:44	0:0	20	&&
water	60:47	0:0	20	globals
op	60:54	0:0	20	->
water	60:56	0:0	20	activePIDs
op	60:66	0:0	20	[
water	60:67	0:0	20	0
op	60:68	0:0	20	]
op	60:69	0:0	20	.
water	60:70	0:0	20	pidType
op	60:78	0:0	20	!=
water	60:81	0:0	20	kEyeTVPIDType_PMT
stmts	61:36	69:36	19	
water	61:36	0:0	20	{
op	65:40	0:0	20	*
op	65:41	0:0	20	*
water	65:42	0:0	20	packets
op	65:50	0:0	20	|=
water	65:53	0:0	20	0
water	65:54	0:0	20	x001FFF00L
water	65:64	0:0	20	;
op	67:40	0:0	20	*
op	67:41	0:0	20	*
water	67:42	0:0	20	packets
op	67:50	0:0	20	|=
water	67:53	0:0	20	0
water	67:54	0:0	20	x00FFF800L
water	67:64	0:0	20	;
water	69:36	0:0	20	}
break	71:36	71:41	18	
water	72:32	0:0	18	}
water	73:28	0:0	16	}
water	74:24	0:0	14	}
op	75:24	0:0	12	--
water	75:26	0:0	12	packetsCount
water	75:38	0:0	12	;
op	76:24	0:0	12	++
water	76:26	0:0	12	packets
water	76:33	0:0	12	;
water	77:20	0:0	12	}
if	78:20	92:20	10	(packetBufferSize)
cond	78:24	78:24	11	packetBufferSize
water	78:24	0:0	12	packetBufferSize
stmts	79:20	92:20	11	
water	79:20	0:0	12	{
decl	81:24	81:87	12	ssize_t	sent
op	81:37	0:0	12	=
call	81:39	81:86	13	write
arg	81:45	81:54	14	i_vlcSock
water	81:45	0:0	15	i_vlcSock
arg	81:56	81:68	14	packetBuffer
water	81:56	0:0	15	packetBuffer
arg	81:70	81:86	14	packetBufferSize
water	81:70	0:0	15	packetBufferSize
if	82:24	91:24	12	(sent != packetBufferSize)
cond	82:28	82:36	13	sent != packetBufferSize
water	82:28	0:0	14	sent
op	82:33	0:0	14	!=
water	82:36	0:0	14	packetBufferSize
stmts	83:24	91:24	13	
water	83:24	0:0	14	{
if	84:28	85:81	14	(sent == - 1)
cond	84:32	84:41	15	sent == - 1
water	84:32	0:0	16	sent
op	84:37	0:0	16	==
op	84:40	0:0	16	-
water	84:41	0:0	16	1
stmts	85:32	85:81	15	
call	85:32	85:80	16	printf
arg	85:39	85:73	17	"data sending failed (errno=%d)\n"
water	85:39	0:0	18	"data sending failed (errno=%d)\n"
arg	85:75	85:80	17	errno
water	85:75	0:0	18	errno
water	85:81	0:0	16	;
else	86:28	87:84	14
stmts	87:32	87:84	15	
call	87:32	87:83	16	printf
arg	87:39	87:77	17	"data sending incomplete (sent=%zd)\n"
water	87:39	0:0	18	"data sending incomplete (sent=%zd)\n"
arg	87:79	87:83	17	sent
water	87:79	0:0	18	sent
water	87:84	0:0	16	;
call	88:28	88:43	14	close
arg	88:34	88:43	15	i_vlcSock
water	88:34	0:0	16	i_vlcSock
water	88:44	0:0	14	;
water	89:28	0:0	14	i_vlcSock
op	89:38	0:0	14	=
op	89:40	0:0	14	-
water	89:41	0:0	14	1
water	89:42	0:0	14	;
return	90:28	90:36	14	0
water	90:35	0:0	15	0
water	91:24	0:0	14	}
water	92:20	0:0	12	}
water	93:16	0:0	10	}
water	94:12	0:0	8	}
water	95:8	0:0	6	}
water	96:4	0:0	4	}
return	97:4	97:12	2	0
water	97:11	0:0	3	0

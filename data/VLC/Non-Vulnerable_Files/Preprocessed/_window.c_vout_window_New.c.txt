func	2:0	55:0	0	vout_window_t *	vout_window_New
params	2:30	0:0	1	
param	2:31	2:48	2	vlc_object_t *	obj
param	3:31	3:49	2	const char *	module
param	4:31	4:59	2	const vout_window_cfg_t *	cfg
stmnts	0:0	54:17	1	
decl	6:4	6:62	2	window_t	*w
op	6:16	0:0	2	=
call	6:18	6:61	3	vlc_custom_create
arg	6:36	6:39	4	obj
water	6:36	0:0	5	obj
arg	6:41	6:51	4	sizeof(*w)
op	6:41	0:0	5	sizeof
water	6:47	0:0	5	(
op	6:48	0:0	5	*
water	6:49	0:0	5	w
water	6:50	0:0	5	)
arg	6:53	6:61	4	"window"
water	6:53	0:0	5	"window"
decl	7:4	7:35	2	vout_window_t	*window
op	7:26	0:0	2	=
op	7:28	0:0	2	&
water	7:29	0:0	2	w
op	7:30	0:0	2	->
water	7:32	0:0	2	wnd
call	8:4	8:53	2	memset
arg	8:11	8:26	3	&window->handle
op	8:11	0:0	4	&
water	8:12	0:0	4	window
op	8:18	0:0	4	->
water	8:20	0:0	4	handle
arg	8:28	8:29	3	0
water	8:28	0:0	4	0
arg	8:31	8:53	3	sizeof(window->handle)
op	8:31	0:0	4	sizeof
water	8:37	0:0	4	(
water	8:38	0:0	4	window
op	8:44	0:0	4	->
water	8:46	0:0	4	handle
water	8:52	0:0	4	)
water	8:54	0:0	2	;
water	9:4	0:0	2	window
op	9:10	0:0	2	->
water	9:12	0:0	2	control
op	9:20	0:0	2	=
water	9:22	0:0	2	NULL
water	9:26	0:0	2	;
water	10:4	0:0	2	window
op	10:10	0:0	2	->
water	10:12	0:0	2	sys
op	10:16	0:0	2	=
water	10:18	0:0	2	NULL
water	10:22	0:0	2	;
water	11:4	0:0	2	window
op	11:10	0:0	2	->
water	11:12	0:0	2	type
op	11:17	0:0	2	=
water	11:19	0:0	2	cfg
op	11:22	0:0	2	->
water	11:24	0:0	2	type
water	11:28	0:0	2	;
decl	12:4	12:20	2	const char	*type
switch	13:4	37:4	2	(cfg -> type)
cond	13:12	13:17	3	cfg -> type
water	13:12	0:0	4	cfg
op	13:15	0:0	4	->
water	13:17	0:0	4	type
stmts	13:23	37:4	3	
water	13:23	0:0	4	{
label	15:4	15:30	4	case VOUT_WINDOW_TYPE_HWND :
water	16:8	0:0	4	type
op	16:13	0:0	4	=
water	16:15	0:0	4	"vout window hwnd"
water	16:33	0:0	4	;
water	17:8	0:0	4	window
op	17:14	0:0	4	->
water	17:16	0:0	4	handle
op	17:22	0:0	4	.
water	17:23	0:0	4	hwnd
op	17:28	0:0	4	=
water	17:30	0:0	4	NULL
water	17:34	0:0	4	;
break	18:8	18:13	4	
label	21:4	21:34	4	case VOUT_WINDOW_TYPE_NSOBJECT :
water	22:8	0:0	4	type
op	22:13	0:0	4	=
water	22:15	0:0	4	"vout window nsobject"
water	22:37	0:0	4	;
water	23:8	0:0	4	window
op	23:14	0:0	4	->
water	23:16	0:0	4	handle
op	23:22	0:0	4	.
water	23:23	0:0	4	nsobject
op	23:32	0:0	4	=
water	23:34	0:0	4	NULL
water	23:38	0:0	4	;
break	24:8	24:13	4	
label	26:4	26:29	4	case VOUT_WINDOW_TYPE_XID :
water	27:8	0:0	4	type
op	27:13	0:0	4	=
water	27:15	0:0	4	"vout window xid"
water	27:32	0:0	4	;
water	28:8	0:0	4	window
op	28:14	0:0	4	->
water	28:16	0:0	4	handle
op	28:22	0:0	4	.
water	28:23	0:0	4	xid
op	28:27	0:0	4	=
water	28:29	0:0	4	0
water	28:30	0:0	4	;
water	29:8	0:0	4	window
op	29:14	0:0	4	->
water	29:16	0:0	4	display
op	29:23	0:0	4	.
water	29:24	0:0	4	x11
op	29:28	0:0	4	=
water	29:30	0:0	4	NULL
water	29:34	0:0	4	;
break	30:8	30:13	4	
label	31:4	31:40	4	case VOUT_WINDOW_TYPE_ANDROID_NATIVE :
water	32:8	0:0	4	type
op	32:13	0:0	4	=
water	32:15	0:0	4	"vout window anative"
water	32:36	0:0	4	;
water	33:8	0:0	4	window
op	33:14	0:0	4	->
water	33:16	0:0	4	handle
op	33:22	0:0	4	.
water	33:23	0:0	4	anativewindow
op	33:37	0:0	4	=
water	33:39	0:0	4	NULL
water	33:43	0:0	4	;
break	34:8	34:13	4	
label	35:4	35:11	4	default :
call	36:8	36:16	4	assert
arg	36:15	36:16	5	0
water	36:15	0:0	6	0
water	36:17	0:0	4	;
water	37:4	0:0	4	}
water	38:4	0:0	2	w
op	38:5	0:0	2	->
water	38:7	0:0	2	module
op	38:14	0:0	2	=
call	38:16	39:62	2	vlc_module_load
arg	38:32	38:38	3	window
water	38:32	0:0	4	window
arg	38:40	38:44	3	type
water	38:40	0:0	4	type
arg	38:46	38:52	3	module
water	38:46	0:0	4	module
arg	38:54	38:71	3	module&&*module
water	38:54	0:0	4	module
op	38:61	0:0	4	&&
op	38:64	0:0	4	*
water	38:65	0:0	4	module
arg	39:32	39:49	3	vout_window_start
water	39:32	0:0	4	vout_window_start
arg	39:51	39:57	3	window
water	39:51	0:0	4	window
arg	39:59	39:62	3	cfg
water	39:59	0:0	4	cfg
water	39:63	0:0	2	;
if	40:4	43:4	2	(! w -> module)
cond	40:8	40:12	3	! w -> module
op	40:8	0:0	4	!
water	40:9	0:0	4	w
op	40:10	0:0	4	->
water	40:12	0:0	4	module
stmts	40:20	43:4	3	
water	40:20	0:0	4	{
call	41:8	41:33	4	vlc_object_release
arg	41:27	41:33	5	window
water	41:27	0:0	6	window
water	41:34	0:0	4	;
return	42:8	42:19	4	NULL
water	42:15	0:0	5	NULL
water	43:4	0:0	4	}
if	45:4	51:4	2	(var_InheritBool (obj ,"disable-screensaver" ) && cfg -> type == VOUT_WINDOW_TYPE_XID)
cond	45:8	46:21	3	var_InheritBool (obj ,"disable-screensaver" ) && cfg -> type == VOUT_WINDOW_TYPE_XID
call	45:8	45:50	4	var_InheritBool
arg	45:24	45:27	5	obj
water	45:24	0:0	6	obj
arg	45:29	45:50	5	"disable-screensaver"
water	45:29	0:0	6	"disable-screensaver"
op	45:52	0:0	4	&&
water	46:8	0:0	4	cfg
op	46:11	0:0	4	->
water	46:13	0:0	4	type
op	46:18	0:0	4	==
water	46:21	0:0	4	VOUT_WINDOW_TYPE_XID
stmts	46:43	51:4	3	
water	46:43	0:0	4	{
water	47:8	0:0	4	w
op	47:9	0:0	4	->
water	47:11	0:0	4	inhibit
op	47:19	0:0	4	=
call	47:21	47:59	4	vlc_inhibit_Create
arg	47:40	47:59	5	VLC_OBJECT(window)
call	47:40	47:58	6	VLC_OBJECT
arg	47:52	47:58	7	window
water	47:52	0:0	8	window
water	47:60	0:0	4	;
if	48:8	49:58	4	(w -> inhibit != NULL)
cond	48:12	48:26	5	w -> inhibit != NULL
water	48:12	0:0	6	w
op	48:13	0:0	6	->
water	48:15	0:0	6	inhibit
op	48:23	0:0	6	!=
water	48:26	0:0	6	NULL
stmts	49:12	49:58	5	
call	49:12	49:57	6	vlc_inhibit_Set
arg	49:28	49:38	7	w->inhibit
water	49:28	0:0	8	w
op	49:29	0:0	8	->
water	49:31	0:0	8	inhibit
arg	49:40	49:57	7	VLC_INHIBIT_VIDEO
water	49:40	0:0	8	VLC_INHIBIT_VIDEO
water	49:58	0:0	6	;
water	51:4	0:0	4	}
else	52:4	53:25	2
stmts	53:8	53:25	3	
water	53:8	0:0	4	w
op	53:9	0:0	4	->
water	53:11	0:0	4	inhibit
op	53:19	0:0	4	=
water	53:21	0:0	4	NULL
water	53:25	0:0	4	;
return	54:4	54:17	2	window
water	54:11	0:0	3	window

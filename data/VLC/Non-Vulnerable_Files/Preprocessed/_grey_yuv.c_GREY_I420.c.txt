func	2:0	39:0	0	static void	GREY_I420
params	2:21	0:0	1	
param	2:23	2:41	2	filter_t *	p_filter
param	2:43	2:62	2	picture_t *	p_source
param	3:43	3:61	2	picture_t *	p_dest
stmnts	0:0	38:4	1	
decl	5:4	5:43	2	uint8_t	*p_line
op	5:20	0:0	2	=
water	5:22	0:0	2	p_source
op	5:30	0:0	2	->
water	5:32	0:0	2	p
op	5:33	0:0	2	->
water	5:35	0:0	2	p_pixels
decl	6:4	6:35	2	uint8_t	*p_y
op	6:17	0:0	2	=
water	6:19	0:0	2	p_dest
op	6:25	0:0	2	->
water	6:27	0:0	2	Y_PIXELS
decl	7:4	7:35	2	uint8_t	*p_u
op	7:17	0:0	2	=
water	7:19	0:0	2	p_dest
op	7:25	0:0	2	->
water	7:27	0:0	2	U_PIXELS
decl	8:4	8:35	2	uint8_t	*p_v
op	8:17	0:0	2	=
water	8:19	0:0	2	p_dest
op	8:25	0:0	2	->
water	8:27	0:0	2	V_PIXELS
decl	9:4	9:16	2	int	i_x
water	9:11	0:0	2	,
decl	9:4	9:16	2	int	i_y
decl	10:4	11:63	2	const int	i_source_margin
op	10:30	0:0	2	=
water	10:32	0:0	2	p_source
op	10:40	0:0	2	->
water	10:42	0:0	2	p
op	10:43	0:0	2	->
water	10:45	0:0	2	i_pitch
op	11:33	0:0	2	-
water	11:35	0:0	2	p_source
op	11:43	0:0	2	->
water	11:45	0:0	2	p
op	11:46	0:0	2	->
water	11:48	0:0	2	i_visible_pitch
decl	12:4	13:61	2	const int	i_dest_margin
op	12:28	0:0	2	=
water	12:30	0:0	2	p_dest
op	12:36	0:0	2	->
water	12:38	0:0	2	p
op	12:39	0:0	2	[
water	12:40	0:0	2	0
op	12:41	0:0	2	]
op	12:42	0:0	2	.
water	12:43	0:0	2	i_pitch
op	13:31	0:0	2	-
water	13:33	0:0	2	p_dest
op	13:39	0:0	2	->
water	13:41	0:0	2	p
op	13:42	0:0	2	[
water	13:43	0:0	2	0
op	13:44	0:0	2	]
op	13:45	0:0	2	.
water	13:46	0:0	2	i_visible_pitch
decl	14:4	15:63	2	const int	i_dest_margin_c
op	14:30	0:0	2	=
water	14:32	0:0	2	p_dest
op	14:38	0:0	2	->
water	14:40	0:0	2	p
op	14:41	0:0	2	[
water	14:42	0:0	2	1
op	14:43	0:0	2	]
op	14:44	0:0	2	.
water	14:45	0:0	2	i_pitch
op	15:33	0:0	2	-
water	15:35	0:0	2	p_dest
op	15:41	0:0	2	->
water	15:43	0:0	2	p
op	15:44	0:0	2	[
water	15:45	0:0	2	1
op	15:46	0:0	2	]
op	15:47	0:0	2	.
water	15:48	0:0	2	i_visible_pitch
for	16:4	22:4	2	(i_y = p_filter -> fmt_in . video . i_height / 2 ;i_y --;)
forinit	16:9	16:50	3	i_y = p_filter -> fmt_in . video . i_height / 2 ;
water	16:9	0:0	4	i_y
op	16:13	0:0	4	=
water	16:15	0:0	4	p_filter
op	16:23	0:0	4	->
water	16:25	0:0	4	fmt_in
op	16:31	0:0	4	.
water	16:32	0:0	4	video
op	16:37	0:0	4	.
water	16:38	0:0	4	i_height
op	16:47	0:0	4	/
water	16:49	0:0	4	2
water	16:50	0:0	4	;
cond	16:52	16:55	3	i_y --
water	16:52	0:0	4	i_y
op	16:55	0:0	4	--
forexpr	0:0	0:0	3	
stmts	17:4	22:4	3	
water	17:4	0:0	4	{
call	18:8	18:54	4	memset
arg	18:15	18:18	5	p_u
water	18:15	0:0	6	p_u
arg	18:20	18:24	5	0x80
water	18:20	0:0	6	0
water	18:21	0:0	6	x80
arg	18:26	18:54	5	p_dest->p[1].i_visible_pitch
water	18:26	0:0	6	p_dest
op	18:32	0:0	6	->
water	18:34	0:0	6	p
op	18:35	0:0	6	[
water	18:36	0:0	6	1
op	18:37	0:0	6	]
op	18:38	0:0	6	.
water	18:39	0:0	6	i_visible_pitch
water	18:55	0:0	4	;
water	19:8	0:0	4	p_u
op	19:12	0:0	4	+=
water	19:15	0:0	4	i_dest_margin_c
water	19:30	0:0	4	;
call	20:8	20:54	4	memset
arg	20:15	20:18	5	p_v
water	20:15	0:0	6	p_v
arg	20:20	20:24	5	0x80
water	20:20	0:0	6	0
water	20:21	0:0	6	x80
arg	20:26	20:54	5	p_dest->p[1].i_visible_pitch
water	20:26	0:0	6	p_dest
op	20:32	0:0	6	->
water	20:34	0:0	6	p
op	20:35	0:0	6	[
water	20:36	0:0	6	1
op	20:37	0:0	6	]
op	20:38	0:0	6	.
water	20:39	0:0	6	i_visible_pitch
water	20:55	0:0	4	;
water	21:8	0:0	4	p_v
op	21:12	0:0	4	+=
water	21:15	0:0	4	i_dest_margin_c
water	21:30	0:0	4	;
water	22:4	0:0	4	}
for	23:4	38:4	2	(i_y = p_filter -> fmt_in . video . i_height ;i_y --;)
forinit	23:9	23:46	3	i_y = p_filter -> fmt_in . video . i_height ;
water	23:9	0:0	4	i_y
op	23:13	0:0	4	=
water	23:15	0:0	4	p_filter
op	23:23	0:0	4	->
water	23:25	0:0	4	fmt_in
op	23:31	0:0	4	.
water	23:32	0:0	4	video
op	23:37	0:0	4	.
water	23:38	0:0	4	i_height
water	23:46	0:0	4	;
cond	23:48	23:51	3	i_y --
water	23:48	0:0	4	i_y
op	23:51	0:0	4	--
forexpr	0:0	0:0	3	
stmts	24:4	38:4	3	
water	24:4	0:0	4	{
for	25:8	31:8	4	(i_x = p_filter -> fmt_in . video . i_width / 8 ;i_x --;)
forinit	25:13	25:53	5	i_x = p_filter -> fmt_in . video . i_width / 8 ;
water	25:13	0:0	6	i_x
op	25:17	0:0	6	=
water	25:19	0:0	6	p_filter
op	25:27	0:0	6	->
water	25:29	0:0	6	fmt_in
op	25:35	0:0	6	.
water	25:36	0:0	6	video
op	25:41	0:0	6	.
water	25:42	0:0	6	i_width
op	25:50	0:0	6	/
water	25:52	0:0	6	8
water	25:53	0:0	6	;
cond	25:55	25:58	5	i_x --
water	25:55	0:0	6	i_x
op	25:58	0:0	6	--
forexpr	0:0	0:0	5	
stmts	26:8	31:8	5	
water	26:8	0:0	6	{
op	27:12	0:0	6	*
water	27:13	0:0	6	p_y
op	27:16	0:0	6	++
op	27:19	0:0	6	=
op	27:21	0:0	6	*
water	27:22	0:0	6	p_line
op	27:28	0:0	6	++
water	27:30	0:0	6	;
op	27:32	0:0	6	*
water	27:33	0:0	6	p_y
op	27:36	0:0	6	++
op	27:39	0:0	6	=
op	27:41	0:0	6	*
water	27:42	0:0	6	p_line
op	27:48	0:0	6	++
water	27:50	0:0	6	;
op	28:12	0:0	6	*
water	28:13	0:0	6	p_y
op	28:16	0:0	6	++
op	28:19	0:0	6	=
op	28:21	0:0	6	*
water	28:22	0:0	6	p_line
op	28:28	0:0	6	++
water	28:30	0:0	6	;
op	28:32	0:0	6	*
water	28:33	0:0	6	p_y
op	28:36	0:0	6	++
op	28:39	0:0	6	=
op	28:41	0:0	6	*
water	28:42	0:0	6	p_line
op	28:48	0:0	6	++
water	28:50	0:0	6	;
op	29:12	0:0	6	*
water	29:13	0:0	6	p_y
op	29:16	0:0	6	++
op	29:19	0:0	6	=
op	29:21	0:0	6	*
water	29:22	0:0	6	p_line
op	29:28	0:0	6	++
water	29:30	0:0	6	;
op	29:32	0:0	6	*
water	29:33	0:0	6	p_y
op	29:36	0:0	6	++
op	29:39	0:0	6	=
op	29:41	0:0	6	*
water	29:42	0:0	6	p_line
op	29:48	0:0	6	++
water	29:50	0:0	6	;
op	30:12	0:0	6	*
water	30:13	0:0	6	p_y
op	30:16	0:0	6	++
op	30:19	0:0	6	=
op	30:21	0:0	6	*
water	30:22	0:0	6	p_line
op	30:28	0:0	6	++
water	30:30	0:0	6	;
op	30:32	0:0	6	*
water	30:33	0:0	6	p_y
op	30:36	0:0	6	++
op	30:39	0:0	6	=
op	30:41	0:0	6	*
water	30:42	0:0	6	p_line
op	30:48	0:0	6	++
water	30:50	0:0	6	;
water	31:8	0:0	6	}
for	32:8	35:8	4	(i_x = p_filter -> fmt_in . video . i_width % 8 ;i_x --;)
forinit	32:13	32:53	5	i_x = p_filter -> fmt_in . video . i_width % 8 ;
water	32:13	0:0	6	i_x
op	32:17	0:0	6	=
water	32:19	0:0	6	p_filter
op	32:27	0:0	6	->
water	32:29	0:0	6	fmt_in
op	32:35	0:0	6	.
water	32:36	0:0	6	video
op	32:41	0:0	6	.
water	32:42	0:0	6	i_width
op	32:50	0:0	6	%
water	32:52	0:0	6	8
water	32:53	0:0	6	;
cond	32:55	32:58	5	i_x --
water	32:55	0:0	6	i_x
op	32:58	0:0	6	--
forexpr	0:0	0:0	5	
stmts	33:8	35:8	5	
water	33:8	0:0	6	{
op	34:12	0:0	6	*
water	34:13	0:0	6	p_y
op	34:16	0:0	6	++
op	34:19	0:0	6	=
op	34:21	0:0	6	*
water	34:22	0:0	6	p_line
op	34:28	0:0	6	++
water	34:30	0:0	6	;
water	35:8	0:0	6	}
water	36:8	0:0	4	p_line
op	36:15	0:0	4	+=
water	36:18	0:0	4	i_source_margin
water	36:33	0:0	4	;
water	37:8	0:0	4	p_y
op	37:12	0:0	4	+=
water	37:15	0:0	4	i_dest_margin
water	37:28	0:0	4	;
water	38:4	0:0	4	}

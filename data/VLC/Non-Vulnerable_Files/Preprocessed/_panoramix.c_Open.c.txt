func	2:0	246:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	245:22	1	
decl	4:4	4:60	2	video_splitter_t	*p_splitter
op	4:33	0:0	2	=
water	4:35	0:0	2	(
water	4:36	0:0	2	video_splitter_t
op	4:52	0:0	2	*
water	4:53	0:0	2	)
water	4:54	0:0	2	p_this
decl	5:4	5:31	2	video_splitter_sys_t	*p_sys
decl	6:4	6:38	2	const panoramix_chroma_t	*p_chroma
for	7:4	20:4	2	( int i = 0 ;;i ++)
forinit	0:0	7:18	3	 int i = 0 ;
decl	7:9	7:18	4	int	i
op	7:15	0:0	4	=
water	7:17	0:0	4	0
cond	0:0	0:0	3	
forexpr	7:22	7:23	3	i ++
water	7:22	0:0	4	i
op	7:23	0:0	4	++
stmts	8:4	20:4	3	
water	8:4	0:0	4	{
decl	9:8	9:58	4	vlc_fourcc_t	i_chroma
op	9:30	0:0	4	=
water	9:32	0:0	4	p_chroma_array
op	9:46	0:0	4	[
water	9:47	0:0	4	i
op	9:48	0:0	4	]
op	9:49	0:0	4	.
water	9:50	0:0	4	i_chroma
if	10:8	14:8	4	(! i_chroma)
cond	10:12	10:13	5	! i_chroma
op	10:12	0:0	6	!
water	10:13	0:0	6	i_chroma
stmts	11:8	14:8	5	
water	11:8	0:0	6	{
call	12:12	12:73	6	msg_Err
arg	12:21	12:31	7	p_splitter
water	12:21	0:0	8	p_splitter
arg	12:33	12:73	7	"colorspace not supported by plug-in !"
water	12:33	0:0	8	"colorspace not supported by plug-in !"
water	12:74	0:0	6	;
return	13:12	13:31	6	VLC_EGENERIC
water	13:19	0:0	7	VLC_EGENERIC
water	14:8	0:0	6	}
if	15:8	19:8	4	(i_chroma == p_splitter -> fmt . i_chroma)
cond	15:12	15:40	5	i_chroma == p_splitter -> fmt . i_chroma
water	15:12	0:0	6	i_chroma
op	15:21	0:0	6	==
water	15:24	0:0	6	p_splitter
op	15:34	0:0	6	->
water	15:36	0:0	6	fmt
op	15:39	0:0	6	.
water	15:40	0:0	6	i_chroma
stmts	16:8	19:8	5	
water	16:8	0:0	6	{
water	17:12	0:0	6	p_chroma
op	17:21	0:0	6	=
op	17:23	0:0	6	&
water	17:24	0:0	6	p_chroma_array
op	17:38	0:0	6	[
water	17:39	0:0	6	i
op	17:40	0:0	6	]
water	17:41	0:0	6	;
break	18:12	18:17	6	
water	19:8	0:0	6	}
water	20:4	0:0	4	}
water	22:4	0:0	2	p_splitter
op	22:14	0:0	2	->
water	22:16	0:0	2	p_sys
op	22:22	0:0	2	=
water	22:24	0:0	2	p_sys
op	22:30	0:0	2	=
call	22:32	22:57	2	malloc
arg	22:40	22:57	3	sizeof(*p_sys)
op	22:40	0:0	4	sizeof
water	22:46	0:0	4	(
op	22:48	0:0	4	*
water	22:49	0:0	4	p_sys
water	22:55	0:0	4	)
water	22:58	0:0	2	;
if	23:4	24:25	2	(! p_sys)
cond	23:8	23:9	3	! p_sys
op	23:8	0:0	4	!
water	23:9	0:0	4	p_sys
stmts	24:8	24:25	3	
return	24:8	24:25	4	VLC_ENOMEM
water	24:15	0:0	5	VLC_ENOMEM
water	26:4	0:0	2	p_sys
op	26:9	0:0	2	->
water	26:11	0:0	2	p_chroma
op	26:20	0:0	2	=
water	26:22	0:0	2	p_chroma
water	26:30	0:0	2	;
call	28:4	29:41	2	config_ChainParse
arg	28:23	28:33	3	p_splitter
water	28:23	0:0	4	p_splitter
arg	28:35	28:45	3	CFG_PREFIX
water	28:35	0:0	4	CFG_PREFIX
arg	28:47	28:66	3	ppsz_filter_options
water	28:47	0:0	4	ppsz_filter_options
arg	29:23	29:41	3	p_splitter->p_cfg
water	29:23	0:0	4	p_splitter
op	29:33	0:0	4	->
water	29:35	0:0	4	p_cfg
water	29:42	0:0	2	;
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	i_col
op	31:17	0:0	2	=
call	31:19	31:69	2	var_InheritInteger
arg	31:39	31:49	3	p_splitter
water	31:39	0:0	4	p_splitter
arg	31:51	31:69	3	CFG_PREFIX"cols"
water	31:51	0:0	4	CFG_PREFIX
water	31:62	0:0	4	"cols"
water	31:70	0:0	2	;
water	32:4	0:0	2	p_sys
op	32:9	0:0	2	->
water	32:11	0:0	2	i_row
op	32:17	0:0	2	=
call	32:19	32:69	2	var_InheritInteger
arg	32:39	32:49	3	p_splitter
water	32:39	0:0	4	p_splitter
arg	32:51	32:69	3	CFG_PREFIX"rows"
water	32:51	0:0	4	CFG_PREFIX
water	32:62	0:0	4	"rows"
water	32:70	0:0	2	;
if	34:4	66:4	2	(p_sys -> i_col < 0 || p_sys -> i_row < 0)
cond	34:8	34:43	3	p_sys -> i_col < 0 || p_sys -> i_row < 0
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	i_col
op	34:21	0:0	4	<
water	34:23	0:0	4	0
op	34:25	0:0	4	||
water	34:28	0:0	4	p_sys
op	34:33	0:0	4	->
water	34:35	0:0	4	i_row
op	34:41	0:0	4	<
water	34:43	0:0	4	0
stmts	35:4	66:4	3	
water	35:4	0:0	4	{
decl	37:8	37:66	4	const int	i_monitor_count
op	37:34	0:0	4	=
call	37:36	37:65	5	GetSystemMetrics
arg	37:53	37:65	6	SM_CMONITORS
water	37:53	0:0	7	SM_CMONITORS
if	38:8	47:8	4	(i_monitor_count > 1)
cond	38:12	38:30	5	i_monitor_count > 1
water	38:12	0:0	6	i_monitor_count
op	38:28	0:0	6	>
water	38:30	0:0	6	1
stmts	39:8	47:8	5	
water	39:8	0:0	6	{
water	40:12	0:0	6	p_sys
op	40:17	0:0	6	->
water	40:19	0:0	6	i_col
op	40:25	0:0	6	=
call	40:27	40:64	6	GetSystemMetrics
arg	40:45	40:64	7	SM_CXVIRTUALSCREEN
water	40:45	0:0	8	SM_CXVIRTUALSCREEN
op	40:66	0:0	6	/
call	40:68	40:98	6	GetSystemMetrics
arg	40:86	40:98	7	SM_CXSCREEN
water	40:86	0:0	8	SM_CXSCREEN
water	40:99	0:0	6	;
water	41:12	0:0	6	p_sys
op	41:17	0:0	6	->
water	41:19	0:0	6	i_row
op	41:25	0:0	6	=
call	41:27	41:64	6	GetSystemMetrics
arg	41:45	41:64	7	SM_CYVIRTUALSCREEN
water	41:45	0:0	8	SM_CYVIRTUALSCREEN
op	41:66	0:0	6	/
call	41:68	41:98	6	GetSystemMetrics
arg	41:86	41:98	7	SM_CYSCREEN
water	41:86	0:0	8	SM_CYSCREEN
water	41:99	0:0	6	;
if	42:12	46:12	6	(p_sys -> i_col * p_sys -> i_row != i_monitor_count)
cond	42:16	42:47	7	p_sys -> i_col * p_sys -> i_row != i_monitor_count
water	42:16	0:0	8	p_sys
op	42:21	0:0	8	->
water	42:23	0:0	8	i_col
op	42:29	0:0	8	*
water	42:31	0:0	8	p_sys
op	42:36	0:0	8	->
water	42:38	0:0	8	i_row
op	42:44	0:0	8	!=
water	42:47	0:0	8	i_monitor_count
stmts	43:12	46:12	7	
water	43:12	0:0	8	{
water	44:16	0:0	8	p_sys
op	44:21	0:0	8	->
water	44:23	0:0	8	i_col
op	44:29	0:0	8	=
water	44:31	0:0	8	i_monitor_count
water	44:46	0:0	8	;
water	45:16	0:0	8	p_sys
op	45:21	0:0	8	->
water	45:23	0:0	8	i_row
op	45:29	0:0	8	=
water	45:31	0:0	8	1
water	45:32	0:0	8	;
water	46:12	0:0	8	}
water	47:8	0:0	6	}
water	49:8	0:0	4	const
water	49:14	0:0	4	unsigned
water	49:23	0:0	4	i_monitors
op	49:34	0:0	4	=
call	49:36	49:58	4	CountMonitors
arg	49:51	49:58	5	p_this
water	49:51	0:0	6	p_this
water	49:59	0:0	4	;
if	50:8	57:12	4	(i_monitors > 1)
cond	50:12	50:25	5	i_monitors > 1
water	50:12	0:0	6	i_monitors
op	50:23	0:0	6	>
water	50:25	0:0	6	1
stmts	51:12	57:12	5	
for	51:12	57:12	6	(unsigned w = 1 ;( i_monitors / w ) >= w;w ++)
forinit	51:17	51:31	7	unsigned w = 1 ;
water	51:17	0:0	8	unsigned
water	51:26	0:0	8	w
op	51:28	0:0	8	=
water	51:30	0:0	8	1
water	51:31	0:0	8	;
cond	51:33	51:53	7	( i_monitors / w ) >= w
water	51:33	0:0	8	(
water	51:34	0:0	8	i_monitors
op	51:45	0:0	8	/
water	51:47	0:0	8	w
water	51:48	0:0	8	)
op	51:50	0:0	8	>=
water	51:53	0:0	8	w
forexpr	51:57	51:58	7	w ++
water	51:57	0:0	8	w
op	51:58	0:0	8	++
stmts	52:12	57:12	7	
water	52:12	0:0	8	{
if	53:16	54:28	8	(i_monitors % w)
cond	53:20	53:33	9	i_monitors % w
water	53:20	0:0	10	i_monitors
op	53:31	0:0	10	%
water	53:33	0:0	10	w
stmts	54:20	54:28	9	
continue	54:20	54:28	10	
water	55:16	0:0	8	p_sys
op	55:21	0:0	8	->
water	55:23	0:0	8	i_row
op	55:29	0:0	8	=
water	55:31	0:0	8	w
water	55:32	0:0	8	;
water	56:16	0:0	8	p_sys
op	56:21	0:0	8	->
water	56:23	0:0	8	i_col
op	56:29	0:0	8	=
water	56:31	0:0	8	i_monitors
op	56:42	0:0	8	/
water	56:44	0:0	8	w
water	56:45	0:0	8	;
water	57:12	0:0	8	}
if	60:8	61:28	4	(p_sys -> i_row < 0)
cond	60:12	60:27	5	p_sys -> i_row < 0
water	60:12	0:0	6	p_sys
op	60:17	0:0	6	->
water	60:19	0:0	6	i_row
op	60:25	0:0	6	<
water	60:27	0:0	6	0
stmts	61:12	61:28	5	
water	61:12	0:0	6	p_sys
op	61:17	0:0	6	->
water	61:19	0:0	6	i_row
op	61:25	0:0	6	=
water	61:27	0:0	6	1
water	61:28	0:0	6	;
if	62:8	63:28	4	(p_sys -> i_col < 0)
cond	62:12	62:27	5	p_sys -> i_col < 0
water	62:12	0:0	6	p_sys
op	62:17	0:0	6	->
water	62:19	0:0	6	i_col
op	62:25	0:0	6	<
water	62:27	0:0	6	0
stmts	63:12	63:28	5	
water	63:12	0:0	6	p_sys
op	63:17	0:0	6	->
water	63:19	0:0	6	i_col
op	63:25	0:0	6	=
water	63:27	0:0	6	2
water	63:28	0:0	6	;
call	64:8	64:67	4	var_SetInteger
arg	64:24	64:34	5	p_splitter
water	64:24	0:0	6	p_splitter
arg	64:36	64:53	5	CFG_PREFIX"cols"
water	64:36	0:0	6	CFG_PREFIX
water	64:47	0:0	6	"cols"
arg	64:55	64:67	5	p_sys->i_col
water	64:55	0:0	6	p_sys
op	64:60	0:0	6	->
water	64:62	0:0	6	i_col
water	64:68	0:0	4	;
call	65:8	65:67	4	var_SetInteger
arg	65:24	65:34	5	p_splitter
water	65:24	0:0	6	p_splitter
arg	65:36	65:53	5	CFG_PREFIX"rows"
water	65:36	0:0	6	CFG_PREFIX
water	65:47	0:0	6	"rows"
arg	65:55	65:67	5	p_sys->i_row
water	65:55	0:0	6	p_sys
op	65:60	0:0	6	->
water	65:62	0:0	6	i_row
water	65:68	0:0	4	;
water	66:4	0:0	4	}
water	68:4	0:0	2	p_sys
op	68:9	0:0	2	->
water	68:11	0:0	2	b_attenuate
op	68:23	0:0	2	=
call	68:25	68:76	2	var_InheritBool
arg	68:42	68:52	3	p_splitter
water	68:42	0:0	4	p_splitter
arg	68:54	68:76	3	CFG_PREFIX"attenuate"
water	68:54	0:0	4	CFG_PREFIX
water	68:65	0:0	4	"attenuate"
water	68:77	0:0	2	;
water	69:4	0:0	2	p_sys
op	69:9	0:0	2	->
water	69:11	0:0	2	bz_length
op	69:21	0:0	2	=
call	69:23	69:78	2	var_InheritInteger
arg	69:43	69:53	3	p_splitter
water	69:43	0:0	4	p_splitter
arg	69:55	69:78	3	CFG_PREFIX"bz-length"
water	69:55	0:0	4	CFG_PREFIX
water	69:66	0:0	4	"bz-length"
water	69:79	0:0	2	;
water	70:4	0:0	2	p_sys
op	70:9	0:0	2	->
water	70:11	0:0	2	bz_height
op	70:21	0:0	2	=
call	70:23	70:78	2	var_InheritInteger
arg	70:43	70:53	3	p_splitter
water	70:43	0:0	4	p_splitter
arg	70:55	70:78	3	CFG_PREFIX"bz-height"
water	70:55	0:0	4	CFG_PREFIX
water	70:66	0:0	4	"bz-height"
water	70:79	0:0	2	;
water	71:4	0:0	2	p_sys
op	71:9	0:0	2	->
water	71:11	0:0	2	bz_begin
op	71:20	0:0	2	=
call	71:22	71:76	2	var_InheritInteger
arg	71:42	71:52	3	p_splitter
water	71:42	0:0	4	p_splitter
arg	71:54	71:76	3	CFG_PREFIX"bz-begin"
water	71:54	0:0	4	CFG_PREFIX
water	71:65	0:0	4	"bz-begin"
water	71:77	0:0	2	;
water	72:4	0:0	2	p_sys
op	72:9	0:0	2	->
water	72:11	0:0	2	bz_middle
op	72:21	0:0	2	=
call	72:23	72:78	2	var_InheritInteger
arg	72:43	72:53	3	p_splitter
water	72:43	0:0	4	p_splitter
arg	72:55	72:78	3	CFG_PREFIX"bz-middle"
water	72:55	0:0	4	CFG_PREFIX
water	72:66	0:0	4	"bz-middle"
water	72:79	0:0	2	;
water	73:4	0:0	2	p_sys
op	73:9	0:0	2	->
water	73:11	0:0	2	bz_end
op	73:18	0:0	2	=
call	73:20	73:72	2	var_InheritInteger
arg	73:40	73:50	3	p_splitter
water	73:40	0:0	4	p_splitter
arg	73:52	73:72	3	CFG_PREFIX"bz-end"
water	73:52	0:0	4	CFG_PREFIX
water	73:63	0:0	4	"bz-end"
water	73:73	0:0	2	;
water	74:4	0:0	2	p_sys
op	74:9	0:0	2	->
water	74:11	0:0	2	bz_middle_pos
op	74:25	0:0	2	=
call	74:27	74:86	2	var_InheritInteger
arg	74:47	74:57	3	p_splitter
water	74:47	0:0	4	p_splitter
arg	74:59	74:86	3	CFG_PREFIX"bz-middle-pos"
water	74:59	0:0	4	CFG_PREFIX
water	74:70	0:0	4	"bz-middle-pos"
water	74:87	0:0	2	;
decl	75:4	75:45	2	double	d_p
op	75:15	0:0	2	=
water	75:17	0:0	2	100
op	75:20	0:0	2	.
water	75:21	0:0	2	0
op	75:23	0:0	2	/
water	75:25	0:0	2	p_sys
op	75:30	0:0	2	->
water	75:32	0:0	2	bz_middle_pos
water	76:4	0:0	2	p_sys
op	76:9	0:0	2	->
water	76:11	0:0	2	a_2
op	76:15	0:0	2	=
water	76:17	0:0	2	d_p
op	76:21	0:0	2	*
water	76:23	0:0	2	p_sys
op	76:28	0:0	2	->
water	76:30	0:0	2	bz_begin
op	76:39	0:0	2	-
call	76:41	76:71	2	(double)
arg	76:50	76:71	3	d_p*d_p/(d_p-1)
water	76:50	0:0	4	d_p
op	76:54	0:0	4	*
water	76:56	0:0	4	d_p
op	76:60	0:0	4	/
water	76:62	0:0	4	(
water	76:63	0:0	4	d_p
op	76:67	0:0	4	-
water	76:69	0:0	4	1
water	76:70	0:0	4	)
op	76:73	0:0	2	*
water	76:75	0:0	2	p_sys
op	76:80	0:0	2	->
water	76:82	0:0	2	bz_middle
op	76:92	0:0	2	+
call	76:94	76:118	2	(double)
arg	76:103	76:118	3	d_p/(d_p-1)
water	76:103	0:0	4	d_p
op	76:107	0:0	4	/
water	76:109	0:0	4	(
water	76:110	0:0	4	d_p
op	76:114	0:0	4	-
water	76:116	0:0	4	1
water	76:117	0:0	4	)
op	76:120	0:0	2	*
water	76:122	0:0	2	p_sys
op	76:127	0:0	2	->
water	76:129	0:0	2	bz_end
water	76:135	0:0	2	;
water	77:4	0:0	2	p_sys
op	77:9	0:0	2	->
water	77:11	0:0	2	a_1
op	77:15	0:0	2	=
op	77:17	0:0	2	-
water	77:18	0:0	2	(
water	77:19	0:0	2	d_p
op	77:23	0:0	2	+
water	77:25	0:0	2	1
water	77:26	0:0	2	)
op	77:28	0:0	2	*
water	77:30	0:0	2	p_sys
op	77:35	0:0	2	->
water	77:37	0:0	2	bz_begin
op	77:46	0:0	2	+
call	77:48	77:78	2	(double)
arg	77:57	77:78	3	d_p*d_p/(d_p-1)
water	77:57	0:0	4	d_p
op	77:61	0:0	4	*
water	77:63	0:0	4	d_p
op	77:67	0:0	4	/
water	77:69	0:0	4	(
water	77:70	0:0	4	d_p
op	77:74	0:0	4	-
water	77:76	0:0	4	1
water	77:77	0:0	4	)
op	77:80	0:0	2	*
water	77:82	0:0	2	p_sys
op	77:87	0:0	2	->
water	77:89	0:0	2	bz_middle
op	77:99	0:0	2	-
call	77:101	77:123	2	(double)
arg	77:110	77:123	3	1/(d_p-1)
water	77:110	0:0	4	1
op	77:112	0:0	4	/
water	77:114	0:0	4	(
water	77:115	0:0	4	d_p
op	77:119	0:0	4	-
water	77:121	0:0	4	1
water	77:122	0:0	4	)
op	77:125	0:0	2	*
water	77:127	0:0	2	p_sys
op	77:132	0:0	2	->
water	77:134	0:0	2	bz_end
water	77:140	0:0	2	;
water	78:4	0:0	2	p_sys
op	78:9	0:0	2	->
water	78:11	0:0	2	a_0
op	78:15	0:0	2	=
water	78:18	0:0	2	p_sys
op	78:23	0:0	2	->
water	78:25	0:0	2	bz_begin
water	78:33	0:0	2	;
water	80:4	0:0	2	p_sys
op	80:9	0:0	2	->
water	80:11	0:0	2	i_col
op	80:17	0:0	2	=
call	80:19	80:54	2	VLC_CLIP
arg	80:29	80:41	3	p_sys->i_col
water	80:29	0:0	4	p_sys
op	80:34	0:0	4	->
water	80:36	0:0	4	i_col
arg	80:43	80:44	3	1
water	80:43	0:0	4	1
arg	80:46	80:54	3	COL_MAX
water	80:46	0:0	4	COL_MAX
water	80:55	0:0	2	;
water	81:4	0:0	2	p_sys
op	81:9	0:0	2	->
water	81:11	0:0	2	i_row
op	81:17	0:0	2	=
call	81:19	81:54	2	VLC_CLIP
arg	81:29	81:41	3	p_sys->i_row
water	81:29	0:0	4	p_sys
op	81:34	0:0	4	->
water	81:36	0:0	4	i_row
arg	81:43	81:44	3	1
water	81:43	0:0	4	1
arg	81:46	81:54	3	ROW_MAX
water	81:46	0:0	4	ROW_MAX
water	81:55	0:0	2	;
call	82:4	83:40	2	msg_Dbg
arg	82:13	82:23	3	p_splitter
water	82:13	0:0	4	p_splitter
arg	82:25	82:49	3	"opening a %i x %i wall"
water	82:25	0:0	4	"opening a %i x %i wall"
arg	83:13	83:25	3	p_sys->i_col
water	83:13	0:0	4	p_sys
op	83:18	0:0	4	->
water	83:20	0:0	4	i_col
arg	83:27	83:40	3	p_sys->i_row
water	83:27	0:0	4	p_sys
op	83:32	0:0	4	->
water	83:34	0:0	4	i_row
water	83:41	0:0	2	;
if	84:4	107:4	2	(p_sys -> bz_length > 0 && ( p_sys -> i_row > 1 || p_sys -> i_col > 1 ))
cond	84:8	84:71	3	p_sys -> bz_length > 0 && ( p_sys -> i_row > 1 || p_sys -> i_col > 1 )
water	84:8	0:0	4	p_sys
op	84:13	0:0	4	->
water	84:15	0:0	4	bz_length
op	84:25	0:0	4	>
water	84:27	0:0	4	0
op	84:29	0:0	4	&&
water	84:32	0:0	4	(
water	84:34	0:0	4	p_sys
op	84:39	0:0	4	->
water	84:41	0:0	4	i_row
op	84:47	0:0	4	>
water	84:49	0:0	4	1
op	84:51	0:0	4	||
water	84:54	0:0	4	p_sys
op	84:59	0:0	4	->
water	84:61	0:0	4	i_col
op	84:67	0:0	4	>
water	84:69	0:0	4	1
water	84:71	0:0	4	)
stmts	85:4	107:4	3	
water	85:4	0:0	4	{
decl	86:8	86:80	4	const int	i_overlap_w2_max
op	86:35	0:0	4	=
water	86:37	0:0	4	p_splitter
op	86:47	0:0	4	->
water	86:49	0:0	4	fmt
op	86:52	0:0	4	.
water	86:53	0:0	4	i_width
op	86:62	0:0	4	/
water	86:64	0:0	4	p_sys
op	86:69	0:0	4	->
water	86:71	0:0	4	i_col
op	86:77	0:0	4	/
water	86:79	0:0	4	2
decl	87:8	87:80	4	const int	i_overlap_h2_max
op	87:35	0:0	4	=
water	87:37	0:0	4	p_splitter
op	87:47	0:0	4	->
water	87:49	0:0	4	fmt
op	87:52	0:0	4	.
water	87:53	0:0	4	i_height
op	87:62	0:0	4	/
water	87:64	0:0	4	p_sys
op	87:69	0:0	4	->
water	87:71	0:0	4	i_row
op	87:77	0:0	4	/
water	87:79	0:0	4	2
decl	88:8	88:78	4	const int	i_overlap2_max
op	88:33	0:0	4	=
call	88:35	88:77	5	__MIN
arg	88:42	88:58	6	i_overlap_w2_max
water	88:42	0:0	7	i_overlap_w2_max
arg	88:60	88:77	6	i_overlap_h2_max
water	88:60	0:0	7	i_overlap_h2_max
if	89:8	90:73	4	(p_sys -> i_col > 1)
cond	89:12	89:27	5	p_sys -> i_col > 1
water	89:12	0:0	6	p_sys
op	89:17	0:0	6	->
water	89:19	0:0	6	i_col
op	89:25	0:0	6	>
water	89:27	0:0	6	1
stmts	90:12	90:73	5	
water	90:12	0:0	6	p_sys
op	90:17	0:0	6	->
water	90:19	0:0	6	i_overlap_w2
op	90:32	0:0	6	=
water	90:34	0:0	6	i_overlap2_max
op	90:49	0:0	6	*
water	90:51	0:0	6	p_sys
op	90:56	0:0	6	->
water	90:58	0:0	6	bz_length
op	90:68	0:0	6	/
water	90:70	0:0	6	100
water	90:73	0:0	6	;
else	91:8	92:35	4
stmts	92:12	92:35	5	
water	92:12	0:0	6	p_sys
op	92:17	0:0	6	->
water	92:19	0:0	6	i_overlap_w2
op	92:32	0:0	6	=
water	92:34	0:0	6	0
water	92:35	0:0	6	;
if	93:8	94:73	4	(p_sys -> i_row > 1)
cond	93:12	93:27	5	p_sys -> i_row > 1
water	93:12	0:0	6	p_sys
op	93:17	0:0	6	->
water	93:19	0:0	6	i_row
op	93:25	0:0	6	>
water	93:27	0:0	6	1
stmts	94:12	94:73	5	
water	94:12	0:0	6	p_sys
op	94:17	0:0	6	->
water	94:19	0:0	6	i_overlap_h2
op	94:32	0:0	6	=
water	94:34	0:0	6	i_overlap2_max
op	94:49	0:0	6	*
water	94:51	0:0	6	p_sys
op	94:56	0:0	6	->
water	94:58	0:0	6	bz_height
op	94:68	0:0	6	/
water	94:70	0:0	6	100
water	94:73	0:0	6	;
else	95:8	96:35	4
stmts	96:12	96:35	5	
water	96:12	0:0	6	p_sys
op	96:17	0:0	6	->
water	96:19	0:0	6	i_overlap_h2
op	96:32	0:0	6	=
water	96:34	0:0	6	0
water	96:35	0:0	6	;
decl	98:8	98:27	4	int	i_div_max_w
op	98:24	0:0	4	=
water	98:26	0:0	4	1
decl	99:8	99:27	4	int	i_div_max_h
op	99:24	0:0	4	=
water	99:26	0:0	4	1
for	100:8	104:8	4	( int i = 0 ;i < VOUT_MAX_PLANES;i ++)
forinit	0:0	100:22	5	 int i = 0 ;
decl	100:13	100:22	6	int	i
op	100:19	0:0	6	=
water	100:21	0:0	6	0
cond	100:24	100:28	5	i < VOUT_MAX_PLANES
water	100:24	0:0	6	i
op	100:26	0:0	6	<
water	100:28	0:0	6	VOUT_MAX_PLANES
forexpr	100:45	100:46	5	i ++
water	100:45	0:0	6	i
op	100:46	0:0	6	++
stmts	101:8	104:8	5	
water	101:8	0:0	6	{
water	102:12	0:0	6	i_div_max_w
op	102:24	0:0	6	=
call	102:26	102:68	6	__MAX
arg	102:33	102:44	7	i_div_max_w
water	102:33	0:0	8	i_div_max_w
arg	102:46	102:68	7	p_chroma->pi_div_w[i]
water	102:46	0:0	8	p_chroma
op	102:54	0:0	8	->
water	102:56	0:0	8	pi_div_w
op	102:64	0:0	8	[
water	102:65	0:0	8	i
op	102:66	0:0	8	]
water	102:69	0:0	6	;
water	103:12	0:0	6	i_div_max_h
op	103:24	0:0	6	=
call	103:26	103:68	6	__MAX
arg	103:33	103:44	7	i_div_max_h
water	103:33	0:0	8	i_div_max_h
arg	103:46	103:68	7	p_chroma->pi_div_h[i]
water	103:46	0:0	8	p_chroma
op	103:54	0:0	8	->
water	103:56	0:0	8	pi_div_h
op	103:64	0:0	8	[
water	103:65	0:0	8	i
op	103:66	0:0	8	]
water	103:69	0:0	6	;
water	104:8	0:0	6	}
water	105:8	0:0	4	p_sys
op	105:13	0:0	4	->
water	105:15	0:0	4	i_overlap_w2
op	105:28	0:0	4	=
water	105:30	0:0	4	i_div_max_w
op	105:42	0:0	4	*
water	105:44	0:0	4	(
water	105:45	0:0	4	p_sys
op	105:50	0:0	4	->
water	105:52	0:0	4	i_overlap_w2
op	105:65	0:0	4	/
water	105:67	0:0	4	i_div_max_w
water	105:78	0:0	4	)
water	105:79	0:0	4	;
water	106:8	0:0	4	p_sys
op	106:13	0:0	4	->
water	106:15	0:0	4	i_overlap_h2
op	106:28	0:0	4	=
water	106:30	0:0	4	i_div_max_h
op	106:42	0:0	4	*
water	106:44	0:0	4	(
water	106:45	0:0	4	p_sys
op	106:50	0:0	4	->
water	106:52	0:0	4	i_overlap_h2
op	106:65	0:0	4	/
water	106:67	0:0	4	i_div_max_h
water	106:78	0:0	4	)
water	106:79	0:0	4	;
water	107:4	0:0	4	}
else	108:4	112:4	2
stmts	109:4	112:4	3	
water	109:4	0:0	4	{
water	110:8	0:0	4	p_sys
op	110:13	0:0	4	->
water	110:15	0:0	4	i_overlap_w2
op	110:28	0:0	4	=
water	110:30	0:0	4	0
water	110:31	0:0	4	;
water	111:8	0:0	4	p_sys
op	111:13	0:0	4	->
water	111:15	0:0	4	i_overlap_h2
op	111:28	0:0	4	=
water	111:30	0:0	4	0
water	111:31	0:0	4	;
water	112:4	0:0	4	}
if	114:4	187:4	2	(p_sys -> b_attenuate)
cond	114:8	114:15	3	p_sys -> b_attenuate
water	114:8	0:0	4	p_sys
op	114:13	0:0	4	->
water	114:15	0:0	4	b_attenuate
stmts	115:4	187:4	3	
water	115:4	0:0	4	{
decl	116:8	116:50	4	panoramix_gamma_t	p_gamma[VOUT_MAX_PLANES]
water	117:8	0:0	4	p_gamma
op	117:15	0:0	4	[
water	117:16	0:0	4	0
op	117:17	0:0	4	]
op	117:18	0:0	4	.
water	117:19	0:0	4	f_gamma
op	117:27	0:0	4	=
call	117:29	117:85	4	var_InheritFloat
arg	117:47	117:57	5	p_splitter
water	117:47	0:0	6	p_splitter
arg	117:59	117:85	5	CFG_PREFIX"bz-gamma-red"
water	117:59	0:0	6	CFG_PREFIX
water	117:70	0:0	6	"bz-gamma-red"
water	117:86	0:0	4	;
water	118:8	0:0	4	p_gamma
op	118:15	0:0	4	[
water	118:16	0:0	4	1
op	118:17	0:0	4	]
op	118:18	0:0	4	.
water	118:19	0:0	4	f_gamma
op	118:27	0:0	4	=
call	118:29	118:87	4	var_InheritFloat
arg	118:47	118:57	5	p_splitter
water	118:47	0:0	6	p_splitter
arg	118:59	118:87	5	CFG_PREFIX"bz-gamma-green"
water	118:59	0:0	6	CFG_PREFIX
water	118:70	0:0	6	"bz-gamma-green"
water	118:88	0:0	4	;
water	119:8	0:0	4	p_gamma
op	119:15	0:0	4	[
water	119:16	0:0	4	2
op	119:17	0:0	4	]
op	119:18	0:0	4	.
water	119:19	0:0	4	f_gamma
op	119:27	0:0	4	=
call	119:29	119:86	4	var_InheritFloat
arg	119:47	119:57	5	p_splitter
water	119:47	0:0	6	p_splitter
arg	119:59	119:86	5	CFG_PREFIX"bz-gamma-blue"
water	119:59	0:0	6	CFG_PREFIX
water	119:70	0:0	6	"bz-gamma-blue"
water	119:87	0:0	4	;
water	120:8	0:0	4	p_gamma
op	120:15	0:0	4	[
water	120:16	0:0	4	0
op	120:17	0:0	4	]
op	120:18	0:0	4	.
water	120:19	0:0	4	f_black_crush
op	120:33	0:0	4	=
call	120:35	120:98	4	var_InheritInteger
arg	120:55	120:65	5	p_splitter
water	120:55	0:0	6	p_splitter
arg	120:67	120:98	5	CFG_PREFIX"bz-blackcrush-red"
water	120:67	0:0	6	CFG_PREFIX
water	120:78	0:0	6	"bz-blackcrush-red"
op	120:100	0:0	4	/
water	120:102	0:0	4	255
op	120:105	0:0	4	.
water	120:106	0:0	4	0
water	120:107	0:0	4	;
water	121:8	0:0	4	p_gamma
op	121:15	0:0	4	[
water	121:16	0:0	4	1
op	121:17	0:0	4	]
op	121:18	0:0	4	.
water	121:19	0:0	4	f_black_crush
op	121:33	0:0	4	=
call	121:35	121:100	4	var_InheritInteger
arg	121:55	121:65	5	p_splitter
water	121:55	0:0	6	p_splitter
arg	121:67	121:100	5	CFG_PREFIX"bz-blackcrush-green"
water	121:67	0:0	6	CFG_PREFIX
water	121:78	0:0	6	"bz-blackcrush-green"
op	121:102	0:0	4	/
water	121:104	0:0	4	255
op	121:107	0:0	4	.
water	121:108	0:0	4	0
water	121:109	0:0	4	;
water	122:8	0:0	4	p_gamma
op	122:15	0:0	4	[
water	122:16	0:0	4	2
op	122:17	0:0	4	]
op	122:18	0:0	4	.
water	122:19	0:0	4	f_black_crush
op	122:33	0:0	4	=
call	122:35	122:99	4	var_InheritInteger
arg	122:55	122:65	5	p_splitter
water	122:55	0:0	6	p_splitter
arg	122:67	122:99	5	CFG_PREFIX"bz-blackcrush-blue"
water	122:67	0:0	6	CFG_PREFIX
water	122:78	0:0	6	"bz-blackcrush-blue"
op	122:101	0:0	4	/
water	122:103	0:0	4	255
op	122:106	0:0	4	.
water	122:107	0:0	4	0
water	122:108	0:0	4	;
water	123:8	0:0	4	p_gamma
op	123:15	0:0	4	[
water	123:16	0:0	4	0
op	123:17	0:0	4	]
op	123:18	0:0	4	.
water	123:19	0:0	4	f_white_crush
op	123:33	0:0	4	=
call	123:35	123:98	4	var_InheritInteger
arg	123:55	123:65	5	p_splitter
water	123:55	0:0	6	p_splitter
arg	123:67	123:98	5	CFG_PREFIX"bz-whitecrush-red"
water	123:67	0:0	6	CFG_PREFIX
water	123:78	0:0	6	"bz-whitecrush-red"
op	123:100	0:0	4	/
water	123:102	0:0	4	255
op	123:105	0:0	4	.
water	123:106	0:0	4	0
water	123:107	0:0	4	;
water	124:8	0:0	4	p_gamma
op	124:15	0:0	4	[
water	124:16	0:0	4	1
op	124:17	0:0	4	]
op	124:18	0:0	4	.
water	124:19	0:0	4	f_white_crush
op	124:33	0:0	4	=
call	124:35	124:100	4	var_InheritInteger
arg	124:55	124:65	5	p_splitter
water	124:55	0:0	6	p_splitter
arg	124:67	124:100	5	CFG_PREFIX"bz-whitecrush-green"
water	124:67	0:0	6	CFG_PREFIX
water	124:78	0:0	6	"bz-whitecrush-green"
op	124:102	0:0	4	/
water	124:104	0:0	4	255
op	124:107	0:0	4	.
water	124:108	0:0	4	0
water	124:109	0:0	4	;
water	125:8	0:0	4	p_gamma
op	125:15	0:0	4	[
water	125:16	0:0	4	2
op	125:17	0:0	4	]
op	125:18	0:0	4	.
water	125:19	0:0	4	f_white_crush
op	125:33	0:0	4	=
call	125:35	125:99	4	var_InheritInteger
arg	125:55	125:65	5	p_splitter
water	125:55	0:0	6	p_splitter
arg	125:67	125:99	5	CFG_PREFIX"bz-whitecrush-blue"
water	125:67	0:0	6	CFG_PREFIX
water	125:78	0:0	6	"bz-whitecrush-blue"
op	125:101	0:0	4	/
water	125:103	0:0	4	255
op	125:106	0:0	4	.
water	125:107	0:0	4	0
water	125:108	0:0	4	;
water	126:8	0:0	4	p_gamma
op	126:15	0:0	4	[
water	126:16	0:0	4	0
op	126:17	0:0	4	]
op	126:18	0:0	4	.
water	126:19	0:0	4	f_black_level
op	126:33	0:0	4	=
call	126:35	126:98	4	var_InheritInteger
arg	126:55	126:65	5	p_splitter
water	126:55	0:0	6	p_splitter
arg	126:67	126:98	5	CFG_PREFIX"bz-blacklevel-red"
water	126:67	0:0	6	CFG_PREFIX
water	126:78	0:0	6	"bz-blacklevel-red"
op	126:100	0:0	4	/
water	126:102	0:0	4	255
op	126:105	0:0	4	.
water	126:106	0:0	4	0
water	126:107	0:0	4	;
water	127:8	0:0	4	p_gamma
op	127:15	0:0	4	[
water	127:16	0:0	4	1
op	127:17	0:0	4	]
op	127:18	0:0	4	.
water	127:19	0:0	4	f_black_level
op	127:33	0:0	4	=
call	127:35	127:100	4	var_InheritInteger
arg	127:55	127:65	5	p_splitter
water	127:55	0:0	6	p_splitter
arg	127:67	127:100	5	CFG_PREFIX"bz-blacklevel-green"
water	127:67	0:0	6	CFG_PREFIX
water	127:78	0:0	6	"bz-blacklevel-green"
op	127:102	0:0	4	/
water	127:104	0:0	4	255
op	127:107	0:0	4	.
water	127:108	0:0	4	0
water	127:109	0:0	4	;
water	128:8	0:0	4	p_gamma
op	128:15	0:0	4	[
water	128:16	0:0	4	2
op	128:17	0:0	4	]
op	128:18	0:0	4	.
water	128:19	0:0	4	f_black_level
op	128:33	0:0	4	=
call	128:35	128:99	4	var_InheritInteger
arg	128:55	128:65	5	p_splitter
water	128:55	0:0	6	p_splitter
arg	128:67	128:99	5	CFG_PREFIX"bz-blacklevel-blue"
water	128:67	0:0	6	CFG_PREFIX
water	128:78	0:0	6	"bz-blacklevel-blue"
op	128:101	0:0	4	/
water	128:103	0:0	4	255
op	128:106	0:0	4	.
water	128:107	0:0	4	0
water	128:108	0:0	4	;
water	129:8	0:0	4	p_gamma
op	129:15	0:0	4	[
water	129:16	0:0	4	0
op	129:17	0:0	4	]
op	129:18	0:0	4	.
water	129:19	0:0	4	f_white_level
op	129:33	0:0	4	=
call	129:35	129:98	4	var_InheritInteger
arg	129:55	129:65	5	p_splitter
water	129:55	0:0	6	p_splitter
arg	129:67	129:98	5	CFG_PREFIX"bz-whitelevel-red"
water	129:67	0:0	6	CFG_PREFIX
water	129:78	0:0	6	"bz-whitelevel-red"
op	129:100	0:0	4	/
water	129:102	0:0	4	255
op	129:105	0:0	4	.
water	129:106	0:0	4	0
water	129:107	0:0	4	;
water	130:8	0:0	4	p_gamma
op	130:15	0:0	4	[
water	130:16	0:0	4	1
op	130:17	0:0	4	]
op	130:18	0:0	4	.
water	130:19	0:0	4	f_white_level
op	130:33	0:0	4	=
call	130:35	130:100	4	var_InheritInteger
arg	130:55	130:65	5	p_splitter
water	130:55	0:0	6	p_splitter
arg	130:67	130:100	5	CFG_PREFIX"bz-whitelevel-green"
water	130:67	0:0	6	CFG_PREFIX
water	130:78	0:0	6	"bz-whitelevel-green"
op	130:102	0:0	4	/
water	130:104	0:0	4	255
op	130:107	0:0	4	.
water	130:108	0:0	4	0
water	130:109	0:0	4	;
water	131:8	0:0	4	p_gamma
op	131:15	0:0	4	[
water	131:16	0:0	4	2
op	131:17	0:0	4	]
op	131:18	0:0	4	.
water	131:19	0:0	4	f_white_level
op	131:33	0:0	4	=
call	131:35	131:99	4	var_InheritInteger
arg	131:55	131:65	5	p_splitter
water	131:55	0:0	6	p_splitter
arg	131:67	131:99	5	CFG_PREFIX"bz-whitelevel-blue"
water	131:67	0:0	6	CFG_PREFIX
water	131:78	0:0	6	"bz-whitelevel-blue"
op	131:101	0:0	4	/
water	131:103	0:0	4	255
op	131:106	0:0	4	.
water	131:107	0:0	4	0
water	131:108	0:0	4	;
for	132:8	140:8	4	( int i = 3 ;i < VOUT_MAX_PLANES;i ++)
forinit	0:0	132:22	5	 int i = 3 ;
decl	132:13	132:22	6	int	i
op	132:19	0:0	6	=
water	132:21	0:0	6	3
cond	132:24	132:28	5	i < VOUT_MAX_PLANES
water	132:24	0:0	6	i
op	132:26	0:0	6	<
water	132:28	0:0	6	VOUT_MAX_PLANES
forexpr	132:45	132:46	5	i ++
water	132:45	0:0	6	i
op	132:46	0:0	6	++
stmts	133:8	140:8	5	
water	133:8	0:0	6	{
water	135:12	0:0	6	p_gamma
op	135:19	0:0	6	[
water	135:20	0:0	6	i
op	135:21	0:0	6	]
op	135:22	0:0	6	.
water	135:23	0:0	6	f_gamma
op	135:31	0:0	6	=
water	135:33	0:0	6	1
op	135:34	0:0	6	.
water	135:35	0:0	6	0
water	135:36	0:0	6	;
water	136:12	0:0	6	p_gamma
op	136:19	0:0	6	[
water	136:20	0:0	6	i
op	136:21	0:0	6	]
op	136:22	0:0	6	.
water	136:23	0:0	6	f_black_crush
op	136:37	0:0	6	=
water	136:39	0:0	6	140
op	136:42	0:0	6	.
water	136:43	0:0	6	0
op	136:44	0:0	6	/
water	136:45	0:0	6	255
op	136:48	0:0	6	.
water	136:49	0:0	6	0
water	136:50	0:0	6	;
water	137:12	0:0	6	p_gamma
op	137:19	0:0	6	[
water	137:20	0:0	6	i
op	137:21	0:0	6	]
op	137:22	0:0	6	.
water	137:23	0:0	6	f_white_crush
op	137:37	0:0	6	=
water	137:39	0:0	6	200
op	137:42	0:0	6	.
water	137:43	0:0	6	0
op	137:44	0:0	6	/
water	137:45	0:0	6	255
op	137:48	0:0	6	.
water	137:49	0:0	6	0
water	137:50	0:0	6	;
water	138:12	0:0	6	p_gamma
op	138:19	0:0	6	[
water	138:20	0:0	6	i
op	138:21	0:0	6	]
op	138:22	0:0	6	.
water	138:23	0:0	6	f_black_level
op	138:37	0:0	6	=
water	138:39	0:0	6	150
op	138:42	0:0	6	.
water	138:43	0:0	6	0
op	138:44	0:0	6	/
water	138:45	0:0	6	255
op	138:48	0:0	6	.
water	138:49	0:0	6	0
water	138:50	0:0	6	;
water	139:12	0:0	6	p_gamma
op	139:19	0:0	6	[
water	139:20	0:0	6	i
op	139:21	0:0	6	]
op	139:22	0:0	6	.
water	139:23	0:0	6	f_white_level
op	139:37	0:0	6	=
water	139:39	0:0	6	0
op	139:40	0:0	6	.
water	139:41	0:0	6	0
op	139:42	0:0	6	/
water	139:43	0:0	6	255
op	139:46	0:0	6	.
water	139:47	0:0	6	0
water	139:48	0:0	6	;
water	140:8	0:0	6	}
if	141:8	147:8	4	(p_chroma -> i_chroma == VLC_CODEC_YV12)
cond	141:12	141:34	5	p_chroma -> i_chroma == VLC_CODEC_YV12
water	141:12	0:0	6	p_chroma
op	141:20	0:0	6	->
water	141:22	0:0	6	i_chroma
op	141:31	0:0	6	==
water	141:34	0:0	6	VLC_CODEC_YV12
stmts	142:8	147:8	5	
water	142:8	0:0	6	{
decl	144:12	144:44	6	panoramix_gamma_t	t
op	144:32	0:0	6	=
water	144:34	0:0	6	p_gamma
op	144:41	0:0	6	[
water	144:42	0:0	6	1
op	144:43	0:0	6	]
water	145:12	0:0	6	p_gamma
op	145:19	0:0	6	[
water	145:20	0:0	6	1
op	145:21	0:0	6	]
op	145:23	0:0	6	=
water	145:25	0:0	6	p_gamma
op	145:32	0:0	6	[
water	145:33	0:0	6	2
op	145:34	0:0	6	]
water	145:35	0:0	6	;
water	146:12	0:0	6	p_gamma
op	146:19	0:0	6	[
water	146:20	0:0	6	2
op	146:21	0:0	6	]
op	146:23	0:0	6	=
water	146:25	0:0	6	t
water	146:26	0:0	6	;
water	147:8	0:0	6	}
for	148:8	159:8	4	( int i_index = 0 ;i_index < 256;i_index ++)
forinit	0:0	148:28	5	 int i_index = 0 ;
decl	148:13	148:28	6	int	i_index
op	148:25	0:0	6	=
water	148:27	0:0	6	0
cond	148:30	148:40	5	i_index < 256
water	148:30	0:0	6	i_index
op	148:38	0:0	6	<
water	148:40	0:0	6	256
forexpr	148:45	148:52	5	i_index ++
water	148:45	0:0	6	i_index
op	148:52	0:0	6	++
stmts	149:8	159:8	5	
water	149:8	0:0	6	{
for	150:12	158:12	6	( int i_index2 = 0 ;i_index2 <= ACCURACY;i_index2 ++)
forinit	0:0	150:33	7	 int i_index2 = 0 ;
decl	150:17	150:33	8	int	i_index2
op	150:30	0:0	8	=
water	150:32	0:0	8	0
cond	150:35	150:47	7	i_index2 <= ACCURACY
water	150:35	0:0	8	i_index2
op	150:44	0:0	8	<=
water	150:47	0:0	8	ACCURACY
forexpr	150:57	150:65	7	i_index2 ++
water	150:57	0:0	8	i_index2
op	150:65	0:0	8	++
stmts	151:12	158:12	7	
water	151:12	0:0	8	{
for	152:16	157:16	8	( int i_plane = 0 ;i_plane < VOUT_MAX_PLANES;i_plane ++)
forinit	0:0	152:36	9	 int i_plane = 0 ;
decl	152:21	152:36	10	int	i_plane
op	152:33	0:0	10	=
water	152:35	0:0	10	0
cond	152:38	152:48	9	i_plane < VOUT_MAX_PLANES
water	152:38	0:0	10	i_plane
op	152:46	0:0	10	<
water	152:48	0:0	10	VOUT_MAX_PLANES
forexpr	152:65	152:72	9	i_plane ++
water	152:65	0:0	10	i_plane
op	152:72	0:0	10	++
stmts	153:16	157:16	9	
water	153:16	0:0	10	{
decl	154:20	154:94	10	double	f_factor
op	154:36	0:0	10	=
call	154:38	154:93	11	GammaFactor
arg	154:51	154:68	12	&p_gamma[i_plane]
op	154:51	0:0	13	&
water	154:52	0:0	13	p_gamma
op	154:59	0:0	13	[
water	154:60	0:0	13	i_plane
op	154:67	0:0	13	]
arg	154:70	154:93	12	(float)i_index/255.0
water	154:70	0:0	13	(
water	154:71	0:0	13	float
water	154:76	0:0	13	)
water	154:77	0:0	13	i_index
op	154:85	0:0	13	/
water	154:87	0:0	13	255
op	154:90	0:0	13	.
water	154:91	0:0	13	0
decl	155:20	155:111	10	float	f_lut
op	155:32	0:0	10	=
call	155:34	155:110	11	clip_unit
arg	155:45	155:110	12	1.0-((ACCURACY-(float)i_index2)*f_factor/(ACCURACY-1))
water	155:45	0:0	13	1
op	155:46	0:0	13	.
water	155:47	0:0	13	0
op	155:49	0:0	13	-
water	155:51	0:0	13	(
water	155:52	0:0	13	(
water	155:53	0:0	13	ACCURACY
op	155:62	0:0	13	-
water	155:64	0:0	13	(
water	155:65	0:0	13	float
water	155:70	0:0	13	)
water	155:71	0:0	13	i_index2
water	155:79	0:0	13	)
op	155:81	0:0	13	*
water	155:83	0:0	13	f_factor
op	155:92	0:0	13	/
water	155:94	0:0	13	(
water	155:95	0:0	13	ACCURACY
op	155:104	0:0	13	-
water	155:106	0:0	13	1
water	155:107	0:0	13	)
water	155:108	0:0	13	)
water	156:20	0:0	10	p_sys
op	156:25	0:0	10	->
water	156:27	0:0	10	p_lut
op	156:32	0:0	10	[
water	156:33	0:0	10	i_plane
op	156:40	0:0	10	]
op	156:41	0:0	10	[
water	156:42	0:0	10	i_index2
op	156:50	0:0	10	]
op	156:51	0:0	10	[
water	156:52	0:0	10	i_index
op	156:59	0:0	10	]
op	156:61	0:0	10	=
water	156:63	0:0	10	f_lut
op	156:69	0:0	10	*
water	156:71	0:0	10	i_index
op	156:79	0:0	10	+
call	156:81	156:139	10	(int)
arg	156:88	156:139	11	(1.0-f_lut)*(float)p_chroma->pi_black[i_plane]
water	156:88	0:0	12	(
water	156:89	0:0	12	1
op	156:90	0:0	12	.
water	156:91	0:0	12	0
op	156:93	0:0	12	-
water	156:95	0:0	12	f_lut
water	156:100	0:0	12	)
op	156:102	0:0	12	*
water	156:104	0:0	12	(
water	156:105	0:0	12	float
water	156:110	0:0	12	)
water	156:111	0:0	12	p_chroma
op	156:119	0:0	12	->
water	156:121	0:0	12	pi_black
op	156:129	0:0	12	[
water	156:130	0:0	12	i_plane
op	156:137	0:0	12	]
water	156:140	0:0	10	;
water	157:16	0:0	10	}
water	158:12	0:0	8	}
water	159:8	0:0	6	}
for	160:8	186:8	4	( int i_plane = 0 ;i_plane < VOUT_MAX_PLANES;i_plane ++)
forinit	0:0	160:28	5	 int i_plane = 0 ;
decl	160:13	160:28	6	int	i_plane
op	160:25	0:0	6	=
water	160:27	0:0	6	0
cond	160:30	160:40	5	i_plane < VOUT_MAX_PLANES
water	160:30	0:0	6	i_plane
op	160:38	0:0	6	<
water	160:40	0:0	6	VOUT_MAX_PLANES
forexpr	160:57	160:64	5	i_plane ++
water	160:57	0:0	6	i_plane
op	160:64	0:0	6	++
stmts	161:8	186:8	5	
water	161:8	0:0	6	{
if	162:12	163:24	6	(! p_chroma -> pi_div_w [ i_plane ] || ! p_chroma -> pi_div_h [ i_plane ])
cond	162:16	162:75	7	! p_chroma -> pi_div_w [ i_plane ] || ! p_chroma -> pi_div_h [ i_plane ]
op	162:16	0:0	8	!
water	162:17	0:0	8	p_chroma
op	162:25	0:0	8	->
water	162:27	0:0	8	pi_div_w
op	162:35	0:0	8	[
water	162:36	0:0	8	i_plane
op	162:43	0:0	8	]
op	162:45	0:0	8	||
op	162:48	0:0	8	!
water	162:49	0:0	8	p_chroma
op	162:57	0:0	8	->
water	162:59	0:0	8	pi_div_h
op	162:67	0:0	8	[
water	162:68	0:0	8	i_plane
op	162:75	0:0	8	]
stmts	163:16	163:24	7	
continue	163:16	163:24	8	
decl	164:12	164:90	6	const int	i_length_w
op	164:33	0:0	6	=
water	164:35	0:0	6	(
water	164:36	0:0	6	2
op	164:38	0:0	6	*
water	164:40	0:0	6	p_sys
op	164:45	0:0	6	->
water	164:47	0:0	6	i_overlap_w2
water	164:59	0:0	6	)
op	164:61	0:0	6	/
water	164:63	0:0	6	p_chroma
op	164:71	0:0	6	->
water	164:73	0:0	6	pi_div_w
op	164:81	0:0	6	[
water	164:82	0:0	6	i_plane
op	164:89	0:0	6	]
decl	165:12	165:90	6	const int	i_length_h
op	165:33	0:0	6	=
water	165:35	0:0	6	(
water	165:36	0:0	6	2
op	165:38	0:0	6	*
water	165:40	0:0	6	p_sys
op	165:45	0:0	6	->
water	165:47	0:0	6	i_overlap_h2
water	165:59	0:0	6	)
op	165:61	0:0	6	/
water	165:63	0:0	6	p_chroma
op	165:71	0:0	6	->
water	165:73	0:0	6	pi_div_h
op	165:81	0:0	6	[
water	165:82	0:0	6	i_plane
op	165:89	0:0	6	]
for	166:12	185:12	6	( int i_dir = 0 ;i_dir < 2;i_dir ++)
forinit	0:0	166:30	7	 int i_dir = 0 ;
decl	166:17	166:30	8	int	i_dir
op	166:27	0:0	8	=
water	166:29	0:0	8	0
cond	166:32	166:40	7	i_dir < 2
water	166:32	0:0	8	i_dir
op	166:38	0:0	8	<
water	166:40	0:0	8	2
forexpr	166:43	166:48	7	i_dir ++
water	166:43	0:0	8	i_dir
op	166:48	0:0	8	++
stmts	167:12	185:12	7	
water	167:12	0:0	8	{
decl	168:16	168:73	8	const int	i_length
op	168:35	0:0	8	=
water	168:37	0:0	8	i_dir
op	168:43	0:0	8	==
water	168:46	0:0	8	0
water	168:48	0:0	8	?
water	168:50	0:0	8	i_length_w
water	168:61	0:0	8	:
water	168:63	0:0	8	i_length_h
decl	169:16	169:53	8	const int	i_den
op	169:32	0:0	8	=
water	169:34	0:0	8	i_length
op	169:43	0:0	8	*
water	169:45	0:0	8	i_length
decl	170:16	170:61	8	const int	a_2
op	170:30	0:0	8	=
water	170:32	0:0	8	p_sys
op	170:37	0:0	8	->
water	170:39	0:0	8	a_2
op	170:43	0:0	8	*
water	170:45	0:0	8	(
water	170:46	0:0	8	ACCURACY
op	170:55	0:0	8	/
water	170:57	0:0	8	100
water	170:60	0:0	8	)
decl	171:16	171:72	8	const int	a_1
op	171:30	0:0	8	=
water	171:32	0:0	8	p_sys
op	171:37	0:0	8	->
water	171:39	0:0	8	a_1
op	171:43	0:0	8	*
water	171:45	0:0	8	i_length
op	171:54	0:0	8	*
water	171:56	0:0	8	(
water	171:57	0:0	8	ACCURACY
op	171:66	0:0	8	/
water	171:68	0:0	8	100
water	171:71	0:0	8	)
decl	172:16	172:69	8	const int	a_0
op	172:30	0:0	8	=
water	172:32	0:0	8	p_sys
op	172:37	0:0	8	->
water	172:39	0:0	8	a_0
op	172:43	0:0	8	*
water	172:45	0:0	8	i_den
op	172:51	0:0	8	*
water	172:53	0:0	8	(
water	172:54	0:0	8	ACCURACY
op	172:63	0:0	8	/
water	172:65	0:0	8	100
water	172:68	0:0	8	)
for	173:16	184:16	8	( int i_position = 0 ;i_position < 2;i_position ++)
forinit	0:0	173:39	9	 int i_position = 0 ;
decl	173:21	173:39	10	int	i_position
op	173:36	0:0	10	=
water	173:38	0:0	10	0
cond	173:41	173:54	9	i_position < 2
water	173:41	0:0	10	i_position
op	173:52	0:0	10	<
water	173:54	0:0	10	2
forexpr	173:57	173:67	9	i_position ++
water	173:57	0:0	10	i_position
op	173:67	0:0	10	++
stmts	174:16	184:16	9	
water	174:16	0:0	10	{
for	175:20	183:20	10	( int i_index = 0 ;i_index < i_length;i_index ++)
forinit	0:0	175:40	11	 int i_index = 0 ;
decl	175:25	175:40	12	int	i_index
op	175:37	0:0	12	=
water	175:39	0:0	12	0
cond	175:42	175:52	11	i_index < i_length
water	175:42	0:0	12	i_index
op	175:50	0:0	12	<
water	175:52	0:0	12	i_length
forexpr	175:62	175:69	11	i_index ++
water	175:62	0:0	12	i_index
op	175:69	0:0	12	++
stmts	176:20	183:20	11	
water	176:20	0:0	12	{
decl	177:24	177:86	12	const int	v
op	177:36	0:0	12	=
water	177:38	0:0	12	i_position
op	177:49	0:0	12	==
water	177:52	0:0	12	1
water	177:54	0:0	12	?
water	177:56	0:0	12	i_index
water	177:64	0:0	12	:
water	177:66	0:0	12	(
water	177:67	0:0	12	i_length
op	177:76	0:0	12	-
water	177:78	0:0	12	i_index
water	177:85	0:0	12	)
decl	178:24	178:108	12	const int	i_lambda
op	178:43	0:0	12	=
call	178:45	178:107	13	clip_accuracy
arg	178:60	178:107	14	ACCURACY-(a_2*v*v+a_1*v+a_0)/i_den
water	178:60	0:0	15	ACCURACY
op	178:69	0:0	15	-
water	178:71	0:0	15	(
water	178:72	0:0	15	a_2
op	178:76	0:0	15	*
water	178:78	0:0	15	v
op	178:79	0:0	15	*
water	178:80	0:0	15	v
op	178:82	0:0	15	+
water	178:84	0:0	15	a_1
op	178:88	0:0	15	*
water	178:90	0:0	15	v
op	178:92	0:0	15	+
water	178:94	0:0	15	a_0
water	178:97	0:0	15	)
op	178:99	0:0	15	/
water	178:101	0:0	15	i_den
if	179:24	180:83	12	(i_dir == 0)
cond	179:28	179:37	13	i_dir == 0
water	179:28	0:0	14	i_dir
op	179:34	0:0	14	==
water	179:37	0:0	14	0
stmts	180:28	180:83	13	
water	180:28	0:0	14	p_sys
op	180:33	0:0	14	->
water	180:35	0:0	14	lambdav
op	180:42	0:0	14	[
water	180:43	0:0	14	i_plane
op	180:50	0:0	14	]
op	180:51	0:0	14	[
water	180:52	0:0	14	i_position
op	180:62	0:0	14	]
op	180:63	0:0	14	[
water	180:64	0:0	14	i_index
op	180:71	0:0	14	]
op	180:73	0:0	14	=
water	180:75	0:0	14	i_lambda
water	180:83	0:0	14	;
else	181:24	182:83	12
stmts	182:28	182:83	13	
water	182:28	0:0	14	p_sys
op	182:33	0:0	14	->
water	182:35	0:0	14	lambdah
op	182:42	0:0	14	[
water	182:43	0:0	14	i_plane
op	182:50	0:0	14	]
op	182:51	0:0	14	[
water	182:52	0:0	14	i_position
op	182:62	0:0	14	]
op	182:63	0:0	14	[
water	182:64	0:0	14	i_index
op	182:71	0:0	14	]
op	182:73	0:0	14	=
water	182:75	0:0	14	i_lambda
water	182:83	0:0	14	;
water	183:20	0:0	12	}
water	184:16	0:0	10	}
water	185:12	0:0	8	}
water	186:8	0:0	6	}
water	187:4	0:0	4	}
decl	189:4	189:74	2	char	*psz_state
op	189:20	0:0	2	=
call	189:22	189:73	3	var_InheritString
arg	189:41	189:51	4	p_splitter
water	189:41	0:0	5	p_splitter
arg	189:53	189:73	4	CFG_PREFIX"active"
water	189:53	0:0	5	CFG_PREFIX
water	189:64	0:0	5	"active"
decl	191:4	191:35	2	bool	pb_active[COL_MAX*ROW_MAX]
for	192:4	193:40	2	( int i = 0 ;i < COL_MAX * ROW_MAX;i ++)
forinit	0:0	192:18	3	 int i = 0 ;
decl	192:9	192:18	4	int	i
op	192:15	0:0	4	=
water	192:17	0:0	4	0
cond	192:20	192:32	3	i < COL_MAX * ROW_MAX
water	192:20	0:0	4	i
op	192:22	0:0	4	<
water	192:24	0:0	4	COL_MAX
op	192:31	0:0	4	*
water	192:32	0:0	4	ROW_MAX
forexpr	192:41	192:42	3	i ++
water	192:41	0:0	4	i
op	192:42	0:0	4	++
stmts	193:8	193:40	3	
water	193:8	0:0	4	pb_active
op	193:17	0:0	4	[
water	193:18	0:0	4	i
op	193:19	0:0	4	]
op	193:21	0:0	4	=
water	193:23	0:0	4	psz_state
op	193:33	0:0	4	==
water	193:36	0:0	4	NULL
water	193:40	0:0	4	;
decl	195:4	195:29	2	char	*psz_tmp
op	195:18	0:0	2	=
water	195:20	0:0	2	psz_state
while	196:4	205:4	2	(psz_tmp && * psz_tmp)
cond	196:11	196:23	3	psz_tmp && * psz_tmp
water	196:11	0:0	4	psz_tmp
op	196:19	0:0	4	&&
op	196:22	0:0	4	*
water	196:23	0:0	4	psz_tmp
stmts	197:4	205:4	3	
water	197:4	0:0	4	{
decl	198:8	198:47	4	char	*psz_next
op	198:23	0:0	4	=
call	198:25	198:46	5	strchr
arg	198:33	198:40	6	psz_tmp
water	198:33	0:0	7	psz_tmp
arg	198:42	198:46	6	','
water	198:42	0:0	7	','
if	199:8	200:30	4	(psz_next)
cond	199:12	199:12	5	psz_next
water	199:12	0:0	6	psz_next
stmts	200:12	200:30	5	
op	200:12	0:0	6	*
water	200:13	0:0	6	psz_next
op	200:21	0:0	6	++
op	200:24	0:0	6	=
water	200:26	0:0	6	'\0'
water	200:30	0:0	6	;
decl	201:8	201:43	4	const int	i_index
op	201:26	0:0	4	=
call	201:28	201:42	5	atoi
arg	201:34	201:42	6	psz_tmp
water	201:34	0:0	7	psz_tmp
if	202:8	203:37	4	(i_index >= 0 && i_index < COL_MAX * ROW_MAX)
cond	202:12	202:46	5	i_index >= 0 && i_index < COL_MAX * ROW_MAX
water	202:12	0:0	6	i_index
op	202:20	0:0	6	>=
water	202:23	0:0	6	0
op	202:25	0:0	6	&&
water	202:28	0:0	6	i_index
op	202:36	0:0	6	<
water	202:38	0:0	6	COL_MAX
op	202:45	0:0	6	*
water	202:46	0:0	6	ROW_MAX
stmts	203:12	203:37	5	
water	203:12	0:0	6	pb_active
op	203:21	0:0	6	[
water	203:22	0:0	6	i_index
op	203:29	0:0	6	]
op	203:31	0:0	6	=
water	203:33	0:0	6	true
water	203:37	0:0	6	;
water	204:8	0:0	4	psz_tmp
op	204:16	0:0	4	=
water	204:18	0:0	4	psz_next
water	204:26	0:0	4	;
water	205:4	0:0	4	}
call	206:4	206:20	2	free
arg	206:10	206:20	3	psz_state
water	206:10	0:0	4	psz_state
water	206:21	0:0	2	;
water	208:4	0:0	2	p_splitter
op	208:14	0:0	2	->
water	208:16	0:0	2	i_output
op	208:25	0:0	2	=
call	209:8	214:33	2	Configuration
arg	209:23	209:39	3	p_sys->pp_output
water	209:23	0:0	4	p_sys
op	209:28	0:0	4	->
water	209:30	0:0	4	pp_output
arg	210:23	210:35	3	p_sys->i_col
water	210:23	0:0	4	p_sys
op	210:28	0:0	4	->
water	210:30	0:0	4	i_col
arg	210:37	210:49	3	p_sys->i_row
water	210:37	0:0	4	p_sys
op	210:42	0:0	4	->
water	210:44	0:0	4	i_row
arg	211:23	211:46	3	p_splitter->fmt.i_width
water	211:23	0:0	4	p_splitter
op	211:33	0:0	4	->
water	211:35	0:0	4	fmt
op	211:38	0:0	4	.
water	211:39	0:0	4	i_width
arg	211:48	211:72	3	p_splitter->fmt.i_height
water	211:48	0:0	4	p_splitter
op	211:58	0:0	4	->
water	211:60	0:0	4	fmt
op	211:63	0:0	4	.
water	211:64	0:0	4	i_height
arg	212:23	212:42	3	p_sys->i_overlap_w2
water	212:23	0:0	4	p_sys
op	212:28	0:0	4	->
water	212:30	0:0	4	i_overlap_w2
arg	212:44	212:63	3	p_sys->i_overlap_h2
water	212:44	0:0	4	p_sys
op	212:49	0:0	4	->
water	212:51	0:0	4	i_overlap_h2
arg	213:23	213:41	3	p_sys->b_attenuate
water	213:23	0:0	4	p_sys
op	213:28	0:0	4	->
water	213:30	0:0	4	b_attenuate
arg	214:23	214:33	3	pb_active
water	214:23	0:0	4	pb_active
water	214:34	0:0	2	;
water	215:4	0:0	2	p_splitter
op	215:14	0:0	2	->
water	215:16	0:0	2	p_output
op	215:25	0:0	2	=
call	215:27	216:65	2	calloc
arg	215:35	215:55	3	p_splitter->i_output
water	215:35	0:0	4	p_splitter
op	215:45	0:0	4	->
water	215:47	0:0	4	i_output
arg	216:35	216:65	3	sizeof(*p_splitter->p_output)
op	216:35	0:0	4	sizeof
water	216:41	0:0	4	(
op	216:42	0:0	4	*
water	216:43	0:0	4	p_splitter
op	216:53	0:0	4	->
water	216:55	0:0	4	p_output
water	216:63	0:0	4	)
water	216:66	0:0	2	;
if	217:4	221:4	2	(! p_splitter -> p_output)
cond	217:8	217:21	3	! p_splitter -> p_output
op	217:8	0:0	4	!
water	217:9	0:0	4	p_splitter
op	217:19	0:0	4	->
water	217:21	0:0	4	p_output
stmts	218:4	221:4	3	
water	218:4	0:0	4	{
call	219:8	219:20	4	free
arg	219:14	219:20	5	p_sys
water	219:14	0:0	6	p_sys
water	219:21	0:0	4	;
return	220:8	220:25	4	VLC_ENOMEM
water	220:15	0:0	5	VLC_ENOMEM
water	221:4	0:0	4	}
for	222:4	241:4	2	( int y = 0 ;y < p_sys -> i_row;y ++)
forinit	0:0	222:18	3	 int y = 0 ;
decl	222:9	222:18	4	int	y
op	222:15	0:0	4	=
water	222:17	0:0	4	0
cond	222:20	222:31	3	y < p_sys -> i_row
water	222:20	0:0	4	y
op	222:22	0:0	4	<
water	222:24	0:0	4	p_sys
op	222:29	0:0	4	->
water	222:31	0:0	4	i_row
forexpr	222:38	222:39	3	y ++
water	222:38	0:0	4	y
op	222:39	0:0	4	++
stmts	223:4	241:4	3	
water	223:4	0:0	4	{
for	224:8	240:8	4	( int x = 0 ;x < p_sys -> i_col;x ++)
forinit	0:0	224:22	5	 int x = 0 ;
decl	224:13	224:22	6	int	x
op	224:19	0:0	6	=
water	224:21	0:0	6	0
cond	224:24	224:35	5	x < p_sys -> i_col
water	224:24	0:0	6	x
op	224:26	0:0	6	<
water	224:28	0:0	6	p_sys
op	224:33	0:0	6	->
water	224:35	0:0	6	i_col
forexpr	224:42	224:43	5	x ++
water	224:42	0:0	6	x
op	224:43	0:0	6	++
stmts	225:8	240:8	5	
water	225:8	0:0	6	{
decl	226:12	226:66	6	panoramix_output_t	*p_output
op	226:41	0:0	6	=
op	226:43	0:0	6	&
water	226:44	0:0	6	p_sys
op	226:49	0:0	6	->
water	226:51	0:0	6	pp_output
op	226:60	0:0	6	[
water	226:61	0:0	6	x
op	226:62	0:0	6	]
op	226:63	0:0	6	[
water	226:64	0:0	6	y
op	226:65	0:0	6	]
if	227:12	228:24	6	(! p_output -> b_active)
cond	227:16	227:27	7	! p_output -> b_active
op	227:16	0:0	8	!
water	227:17	0:0	8	p_output
op	227:25	0:0	8	->
water	227:27	0:0	8	b_active
stmts	228:16	228:24	7	
continue	228:16	228:24	8	
decl	229:12	229:86	6	video_splitter_output_t	*p_cfg
op	229:43	0:0	6	=
op	229:45	0:0	6	&
water	229:46	0:0	6	p_splitter
op	229:56	0:0	6	->
water	229:58	0:0	6	p_output
op	229:66	0:0	6	[
water	229:67	0:0	6	p_output
op	229:75	0:0	6	->
water	229:77	0:0	6	i_output
op	229:85	0:0	6	]
call	231:12	231:61	6	video_format_Copy
arg	231:31	231:42	7	&p_cfg->fmt
op	231:31	0:0	8	&
water	231:32	0:0	8	p_cfg
op	231:37	0:0	8	->
water	231:39	0:0	8	fmt
arg	231:44	231:61	7	&p_splitter->fmt
op	231:44	0:0	8	&
water	231:45	0:0	8	p_splitter
op	231:55	0:0	8	->
water	231:57	0:0	8	fmt
water	231:62	0:0	6	;
water	232:12	0:0	6	p_cfg
op	232:17	0:0	6	->
water	232:19	0:0	6	fmt
op	232:22	0:0	6	.
water	232:23	0:0	6	i_visible_width
op	232:40	0:0	6	=
water	233:12	0:0	6	p_cfg
op	233:17	0:0	6	->
water	233:19	0:0	6	fmt
op	233:22	0:0	6	.
water	233:23	0:0	6	i_width
op	233:40	0:0	6	=
water	233:42	0:0	6	p_output
op	233:50	0:0	6	->
water	233:52	0:0	6	i_width
water	233:59	0:0	6	;
water	234:12	0:0	6	p_cfg
op	234:17	0:0	6	->
water	234:19	0:0	6	fmt
op	234:22	0:0	6	.
water	234:23	0:0	6	i_visible_height
op	234:40	0:0	6	=
water	235:12	0:0	6	p_cfg
op	235:17	0:0	6	->
water	235:19	0:0	6	fmt
op	235:22	0:0	6	.
water	235:23	0:0	6	i_height
op	235:40	0:0	6	=
water	235:42	0:0	6	p_output
op	235:50	0:0	6	->
water	235:52	0:0	6	i_height
water	235:60	0:0	6	;
water	236:12	0:0	6	p_cfg
op	236:17	0:0	6	->
water	236:19	0:0	6	window
op	236:25	0:0	6	.
water	236:26	0:0	6	i_x
op	236:34	0:0	6	=
water	236:36	0:0	6	p_output
op	236:44	0:0	6	->
water	236:46	0:0	6	i_x
water	236:49	0:0	6	;
water	237:12	0:0	6	p_cfg
op	237:17	0:0	6	->
water	237:19	0:0	6	window
op	237:25	0:0	6	.
water	237:26	0:0	6	i_y
op	237:34	0:0	6	=
water	237:36	0:0	6	p_output
op	237:44	0:0	6	->
water	237:46	0:0	6	i_y
water	237:49	0:0	6	;
water	238:12	0:0	6	p_cfg
op	238:17	0:0	6	->
water	238:19	0:0	6	window
op	238:25	0:0	6	.
water	238:26	0:0	6	i_align
op	238:34	0:0	6	=
water	238:36	0:0	6	p_output
op	238:44	0:0	6	->
water	238:46	0:0	6	i_align
water	238:53	0:0	6	;
water	239:12	0:0	6	p_cfg
op	239:17	0:0	6	->
water	239:19	0:0	6	psz_module
op	239:30	0:0	6	=
water	239:32	0:0	6	NULL
water	239:36	0:0	6	;
water	240:8	0:0	6	}
water	241:4	0:0	4	}
water	243:4	0:0	2	p_splitter
op	243:14	0:0	2	->
water	243:16	0:0	2	pf_filter
op	243:26	0:0	2	=
water	243:28	0:0	2	Filter
water	243:34	0:0	2	;
water	244:4	0:0	2	p_splitter
op	244:14	0:0	2	->
water	244:16	0:0	2	pf_mouse
op	244:26	0:0	2	=
water	244:28	0:0	2	Mouse
water	244:33	0:0	2	;
return	245:4	245:22	2	VLC_SUCCESS
water	245:11	0:0	3	VLC_SUCCESS

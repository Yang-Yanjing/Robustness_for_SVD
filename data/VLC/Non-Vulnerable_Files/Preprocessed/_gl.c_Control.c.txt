func	2:0	70:0	0	static int	Control
params	2:19	0:0	1	
param	2:20	2:38	2	vout_display_t *	vd
param	2:40	2:49	2	int	query
param	2:51	2:61	2	va_list	ap
stmnts	0:0	69:23	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
switch	5:4	68:4	2	(query)
cond	5:12	5:12	3	query
water	5:12	0:0	4	query
stmts	6:4	68:4	3	
water	6:4	0:0	4	{
label	7:6	7:34	4	case VOUT_DISPLAY_HIDE_MOUSE :
break	8:8	8:13	4	
label	10:6	10:38	4	case VOUT_DISPLAY_RESET_PICTURES :
call	11:8	11:16	4	assert
arg	11:15	11:16	5	0
water	11:15	0:0	6	0
water	11:17	0:0	4	;
label	13:6	13:41	4	case VOUT_DISPLAY_CHANGE_FULLSCREEN :
water	14:6	0:0	4	{
decl	15:8	16:51	4	const vout_display_cfg_t	*cfg
op	15:38	0:0	4	=
call	16:12	16:50	5	va_arg
arg	16:20	16:22	6	ap
water	16:20	0:0	7	ap
arg	16:24	16:50	6	constvout_display_cfg_t*
water	16:24	0:0	7	const
water	16:30	0:0	7	vout_display_cfg_t
op	16:49	0:0	7	*
return	17:8	17:74	4	vout_window_SetFullScreen(sys->window,cfg->is_fullscreen)
call	17:15	17:73	5	vout_window_SetFullScreen
arg	17:42	17:53	6	sys->window
water	17:42	0:0	7	sys
op	17:45	0:0	7	->
water	17:47	0:0	7	window
arg	17:55	17:73	6	cfg->is_fullscreen
water	17:55	0:0	7	cfg
op	17:58	0:0	7	->
water	17:60	0:0	7	is_fullscreen
water	18:6	0:0	4	}
label	19:6	19:43	4	case VOUT_DISPLAY_CHANGE_WINDOW_STATE :
water	20:6	0:0	4	{
water	21:8	0:0	4	unsigned
water	21:17	0:0	4	state
op	21:23	0:0	4	=
call	21:25	21:45	4	va_arg
arg	21:33	21:35	5	ap
water	21:33	0:0	6	ap
arg	21:37	21:45	5	unsigned
water	21:37	0:0	6	unsigned
water	21:46	0:0	4	;
return	22:8	22:56	4	vout_window_SetState(sys->window,state)
call	22:15	22:55	5	vout_window_SetState
arg	22:37	22:48	6	sys->window
water	22:37	0:0	7	sys
op	22:40	0:0	7	->
water	22:42	0:0	7	window
arg	22:50	22:55	6	state
water	22:50	0:0	7	state
water	23:6	0:0	4	}
label	24:6	24:43	4	case VOUT_DISPLAY_CHANGE_DISPLAY_SIZE :
label	25:6	25:45	4	case VOUT_DISPLAY_CHANGE_DISPLAY_FILLED :
label	26:6	26:35	4	case VOUT_DISPLAY_CHANGE_ZOOM :
water	27:6	0:0	4	{
decl	28:8	28:79	4	const vout_display_cfg_t	*cfg
op	28:38	0:0	4	=
call	28:40	28:78	5	va_arg
arg	28:48	28:50	6	ap
water	28:48	0:0	7	ap
arg	28:52	28:78	6	constvout_display_cfg_t*
water	28:52	0:0	7	const
water	28:58	0:0	7	vout_display_cfg_t
op	28:77	0:0	7	*
decl	29:8	29:47	4	const video_format_t	*src
op	29:34	0:0	4	=
op	29:36	0:0	4	&
water	29:37	0:0	4	vd
op	29:39	0:0	4	->
water	29:41	0:0	4	source
if	30:8	40:8	4	(query == VOUT_DISPLAY_CHANGE_DISPLAY_SIZE)
cond	30:12	30:21	5	query == VOUT_DISPLAY_CHANGE_DISPLAY_SIZE
water	30:12	0:0	6	query
op	30:18	0:0	6	==
water	30:21	0:0	6	VOUT_DISPLAY_CHANGE_DISPLAY_SIZE
stmts	31:8	40:8	5	
water	31:8	0:0	6	{
decl	32:12	32:30	6	bool	force
op	32:23	0:0	6	=
water	32:25	0:0	6	false
water	33:12	0:0	6	force
op	33:18	0:0	6	=
call	33:20	33:35	6	va_arg
arg	33:28	33:30	7	ap
water	33:28	0:0	8	ap
arg	33:32	33:35	7	int
water	33:32	0:0	8	int
water	33:36	0:0	6	;
if	34:12	39:35	6	(force && ( cfg -> display . width != vd -> cfg -> display . width || cfg -> display . height != vd -> cfg -> display . height ) &&vout_window_SetSize (sys -> window ,cfg -> display . width ,cfg -> display . height ))
cond	34:16	38:76	7	force && ( cfg -> display . width != vd -> cfg -> display . width || cfg -> display . height != vd -> cfg -> display . height ) &&vout_window_SetSize (sys -> window ,cfg -> display . width ,cfg -> display . height )
water	34:16	0:0	8	force
op	35:13	0:0	8	&&
water	35:16	0:0	8	(
water	35:17	0:0	8	cfg
op	35:20	0:0	8	->
water	35:22	0:0	8	display
op	35:29	0:0	8	.
water	35:30	0:0	8	width
op	35:37	0:0	8	!=
water	35:40	0:0	8	vd
op	35:42	0:0	8	->
water	35:44	0:0	8	cfg
op	35:47	0:0	8	->
water	35:49	0:0	8	display
op	35:56	0:0	8	.
water	35:57	0:0	8	width
op	36:14	0:0	8	||
water	36:17	0:0	8	cfg
op	36:20	0:0	8	->
water	36:22	0:0	8	display
op	36:29	0:0	8	.
water	36:30	0:0	8	height
op	36:37	0:0	8	!=
water	36:40	0:0	8	vd
op	36:42	0:0	8	->
water	36:44	0:0	8	cfg
op	36:47	0:0	8	->
water	36:49	0:0	8	display
op	36:56	0:0	8	.
water	36:57	0:0	8	height
water	36:63	0:0	8	)
op	37:13	0:0	8	&&
call	37:16	38:76	8	vout_window_SetSize
arg	37:37	37:48	9	sys->window
water	37:37	0:0	10	sys
op	37:40	0:0	10	->
water	37:42	0:0	10	window
arg	38:37	38:55	9	cfg->display.width
water	38:37	0:0	10	cfg
op	38:40	0:0	10	->
water	38:42	0:0	10	display
op	38:49	0:0	10	.
water	38:50	0:0	10	width
arg	38:57	38:76	9	cfg->display.height
water	38:57	0:0	10	cfg
op	38:60	0:0	10	->
water	38:62	0:0	10	display
op	38:69	0:0	10	.
water	38:70	0:0	10	height
stmts	39:16	39:35	7	
return	39:16	39:35	8	VLC_EGENERIC
water	39:23	0:0	9	VLC_EGENERIC
water	40:8	0:0	6	}
decl	41:8	41:34	4	vout_display_place_t	place
call	42:8	42:58	4	vout_display_PlacePicture
arg	42:35	42:41	5	&place
op	42:35	0:0	6	&
water	42:36	0:0	6	place
arg	42:43	42:46	5	src
water	42:43	0:0	6	src
arg	42:48	42:51	5	cfg
water	42:48	0:0	6	cfg
arg	42:53	42:58	5	false
water	42:53	0:0	6	false
water	42:59	0:0	4	;
call	43:8	43:35	4	vlc_gl_MakeCurrent
arg	43:28	43:35	5	sys->gl
water	43:28	0:0	6	sys
op	43:31	0:0	6	->
water	43:33	0:0	6	gl
water	43:36	0:0	4	;
call	44:8	44:63	4	glViewport
arg	44:20	44:27	5	place.x
water	44:20	0:0	6	place
op	44:25	0:0	6	.
water	44:26	0:0	6	x
arg	44:29	44:36	5	place.y
water	44:29	0:0	6	place
op	44:34	0:0	6	.
water	44:35	0:0	6	y
arg	44:38	44:49	5	place.width
water	44:38	0:0	6	place
op	44:43	0:0	6	.
water	44:44	0:0	6	width
arg	44:51	44:63	5	place.height
water	44:51	0:0	6	place
op	44:56	0:0	6	.
water	44:57	0:0	6	height
water	44:64	0:0	4	;
call	45:8	45:38	4	vlc_gl_ReleaseCurrent
arg	45:31	45:38	5	sys->gl
water	45:31	0:0	6	sys
op	45:34	0:0	6	->
water	45:36	0:0	6	gl
water	45:39	0:0	4	;
return	46:8	46:26	4	VLC_SUCCESS
water	46:15	0:0	5	VLC_SUCCESS
water	47:6	0:0	4	}
label	48:6	48:44	4	case VOUT_DISPLAY_CHANGE_SOURCE_ASPECT :
label	49:6	49:42	4	case VOUT_DISPLAY_CHANGE_SOURCE_CROP :
water	50:6	0:0	4	{
decl	51:8	51:47	4	const vout_display_cfg_t	*cfg
op	51:38	0:0	4	=
water	51:40	0:0	4	vd
op	51:42	0:0	4	->
water	51:44	0:0	4	cfg
decl	52:8	52:71	4	const video_format_t	*src
op	52:34	0:0	4	=
call	52:36	52:70	5	va_arg
arg	52:44	52:46	6	ap
water	52:44	0:0	7	ap
arg	52:48	52:70	6	constvideo_format_t*
water	52:48	0:0	7	const
water	52:54	0:0	7	video_format_t
op	52:69	0:0	7	*
decl	53:8	53:34	4	vout_display_place_t	place
call	54:8	54:58	4	vout_display_PlacePicture
arg	54:35	54:41	5	&place
op	54:35	0:0	6	&
water	54:36	0:0	6	place
arg	54:43	54:46	5	src
water	54:43	0:0	6	src
arg	54:48	54:51	5	cfg
water	54:48	0:0	6	cfg
arg	54:53	54:58	5	false
water	54:53	0:0	6	false
water	54:59	0:0	4	;
call	55:8	55:35	4	vlc_gl_MakeCurrent
arg	55:28	55:35	5	sys->gl
water	55:28	0:0	6	sys
op	55:31	0:0	6	->
water	55:33	0:0	6	gl
water	55:36	0:0	4	;
call	56:8	56:63	4	glViewport
arg	56:20	56:27	5	place.x
water	56:20	0:0	6	place
op	56:25	0:0	6	.
water	56:26	0:0	6	x
arg	56:29	56:36	5	place.y
water	56:29	0:0	6	place
op	56:34	0:0	6	.
water	56:35	0:0	6	y
arg	56:38	56:49	5	place.width
water	56:38	0:0	6	place
op	56:43	0:0	6	.
water	56:44	0:0	6	width
arg	56:51	56:63	5	place.height
water	56:51	0:0	6	place
op	56:56	0:0	6	.
water	56:57	0:0	6	height
water	56:64	0:0	4	;
call	57:8	57:38	4	vlc_gl_ReleaseCurrent
arg	57:31	57:38	5	sys->gl
water	57:31	0:0	6	sys
op	57:34	0:0	6	->
water	57:36	0:0	6	gl
water	57:39	0:0	4	;
return	58:8	58:26	4	VLC_SUCCESS
water	58:15	0:0	5	VLC_SUCCESS
water	59:6	0:0	4	}
label	60:6	60:34	4	case VOUT_DISPLAY_GET_OPENGL :
water	61:6	0:0	4	{
decl	62:8	62:49	4	vlc_gl_t	**pgl
op	62:23	0:0	4	=
call	62:25	62:48	5	va_arg
arg	62:33	62:35	6	ap
water	62:33	0:0	7	ap
arg	62:37	62:48	6	vlc_gl_t**
water	62:37	0:0	7	vlc_gl_t
op	62:46	0:0	7	*
op	62:47	0:0	7	*
op	63:8	0:0	4	*
water	63:9	0:0	4	pgl
op	63:13	0:0	4	=
water	63:15	0:0	4	sys
op	63:18	0:0	4	->
water	63:20	0:0	4	gl
water	63:22	0:0	4	;
return	64:8	64:26	4	VLC_SUCCESS
water	64:15	0:0	5	VLC_SUCCESS
water	65:6	0:0	4	}
label	66:6	66:13	4	default :
call	67:8	67:48	4	msg_Err
arg	67:17	67:19	5	vd
water	67:17	0:0	6	vd
arg	67:21	67:41	5	"Unknown request %d"
water	67:21	0:0	6	"Unknown request %d"
arg	67:43	67:48	5	query
water	67:43	0:0	6	query
water	67:49	0:0	4	;
water	68:4	0:0	4	}
return	69:4	69:23	2	VLC_EGENERIC
water	69:11	0:0	3	VLC_EGENERIC

func	2:0	83:0	0	static int	SocksHandshakeTCP
params	2:28	0:0	1	
param	2:30	2:49	2	vlc_object_t *	p_obj
param	3:30	3:36	2	int	fd
param	4:30	4:49	2	int	i_socks_version
param	5:30	5:50	2	const char *	psz_user
param	5:52	5:74	2	const char *	psz_passwd
param	6:30	6:50	2	const char *	psz_host
param	6:52	6:63	2	int	i_port
stmnts	0:0	82:22	1	
decl	8:4	8:29	2	uint8_t	buffer[128+2*256]
if	9:4	13:4	2	(i_socks_version != 4 && i_socks_version != 5)
cond	9:8	9:51	3	i_socks_version != 4 && i_socks_version != 5
water	9:8	0:0	4	i_socks_version
op	9:24	0:0	4	!=
water	9:27	0:0	4	4
op	9:29	0:0	4	&&
water	9:32	0:0	4	i_socks_version
op	9:48	0:0	4	!=
water	9:51	0:0	4	5
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
call	11:8	11:78	4	msg_Warn
arg	11:18	11:23	5	p_obj
water	11:18	0:0	6	p_obj
arg	11:25	11:60	5	"invalid socks protocol version %d"
water	11:25	0:0	6	"invalid socks protocol version %d"
arg	11:62	11:78	5	i_socks_version
water	11:62	0:0	6	i_socks_version
water	11:79	0:0	4	;
water	12:8	0:0	4	i_socks_version
op	12:24	0:0	4	=
water	12:26	0:0	4	5
water	12:27	0:0	4	;
water	13:4	0:0	4	}
if	14:4	17:27	2	(i_socks_version == 5 &&SocksNegotiate (p_obj ,fd ,i_socks_version ,psz_user ,psz_passwd ))
cond	14:8	16:45	3	i_socks_version == 5 &&SocksNegotiate (p_obj ,fd ,i_socks_version ,psz_user ,psz_passwd )
water	14:8	0:0	4	i_socks_version
op	14:24	0:0	4	==
water	14:27	0:0	4	5
op	14:29	0:0	4	&&
call	15:8	16:45	4	SocksNegotiate
arg	15:24	15:29	5	p_obj
water	15:24	0:0	6	p_obj
arg	15:31	15:33	5	fd
water	15:31	0:0	6	fd
arg	15:35	15:50	5	i_socks_version
water	15:35	0:0	6	i_socks_version
arg	16:24	16:32	5	psz_user
water	16:24	0:0	6	psz_user
arg	16:34	16:45	5	psz_passwd
water	16:34	0:0	6	psz_passwd
stmts	17:8	17:27	3	
return	17:8	17:27	4	VLC_EGENERIC
water	17:15	0:0	5	VLC_EGENERIC
if	18:4	45:4	2	(i_socks_version == 4)
cond	18:8	18:27	3	i_socks_version == 4
water	18:8	0:0	4	i_socks_version
op	18:24	0:0	4	==
water	18:27	0:0	4	4
stmts	19:4	45:4	3	
water	19:4	0:0	4	{
water	21:8	0:0	4	static
water	21:15	0:0	4	const
water	21:21	0:0	4	struct
water	21:28	0:0	4	addrinfo
water	21:37	0:0	4	hints
op	21:43	0:0	4	=
water	21:45	0:0	4	{
op	22:12	0:0	4	.
water	22:13	0:0	4	ai_family
op	22:23	0:0	4	=
water	22:25	0:0	4	AF_INET
water	22:32	0:0	4	,
op	23:12	0:0	4	.
water	23:13	0:0	4	ai_socktype
op	23:25	0:0	4	=
water	23:27	0:0	4	SOCK_STREAM
water	23:38	0:0	4	,
op	24:12	0:0	4	.
water	24:13	0:0	4	ai_protocol
op	24:25	0:0	4	=
water	24:27	0:0	4	IPPROTO_TCP
water	24:38	0:0	4	,
op	25:12	0:0	4	.
water	25:13	0:0	4	ai_flags
op	25:22	0:0	4	=
water	25:24	0:0	4	AI_IDN
water	25:30	0:0	4	,
water	26:8	0:0	4	}
water	26:9	0:0	4	;
decl	27:8	27:28	4	struct addrinfo	*res
if	28:8	29:31	4	(vlc_getaddrinfo (psz_host ,0 ,& hints ,& res ))
cond	28:12	28:54	5	vlc_getaddrinfo (psz_host ,0 ,& hints ,& res )
call	28:12	28:54	6	vlc_getaddrinfo
arg	28:29	28:37	7	psz_host
water	28:29	0:0	8	psz_host
arg	28:39	28:40	7	0
water	28:39	0:0	8	0
arg	28:42	28:48	7	&hints
op	28:42	0:0	8	&
water	28:43	0:0	8	hints
arg	28:50	28:54	7	&res
op	28:50	0:0	8	&
water	28:51	0:0	8	res
stmts	29:12	29:31	5	
return	29:12	29:31	6	VLC_EGENERIC
water	29:19	0:0	7	VLC_EGENERIC
water	30:8	0:0	4	buffer
op	30:14	0:0	4	[
water	30:15	0:0	4	0
op	30:16	0:0	4	]
op	30:18	0:0	4	=
water	30:20	0:0	4	i_socks_version
water	30:35	0:0	4	;
water	31:8	0:0	4	buffer
op	31:14	0:0	4	[
water	31:15	0:0	4	1
op	31:16	0:0	4	]
op	31:18	0:0	4	=
water	31:20	0:0	4	0
water	31:21	0:0	4	x01
water	31:24	0:0	4	;
call	32:8	32:35	4	SetWBE
arg	32:16	32:26	5	&buffer[2]
op	32:16	0:0	6	&
water	32:17	0:0	6	buffer
op	32:23	0:0	6	[
water	32:24	0:0	6	2
op	32:25	0:0	6	]
arg	32:28	32:35	5	i_port
water	32:28	0:0	6	i_port
water	32:36	0:0	4	;
call	33:8	34:68	4	memcpy
arg	33:16	33:26	5	&buffer[4]
op	33:16	0:0	6	&
water	33:17	0:0	6	buffer
op	33:23	0:0	6	[
water	33:24	0:0	6	4
op	33:25	0:0	6	]
arg	34:16	34:65	5	&((structsockaddr_in*)(res->ai_addr))->sin_addr
op	34:16	0:0	6	&
water	34:17	0:0	6	(
call	34:18	34:53	6	(structsockaddr_in*)
arg	34:41	34:53	7	res->ai_addr
water	34:41	0:0	8	res
op	34:44	0:0	8	->
water	34:46	0:0	8	ai_addr
water	34:54	0:0	6	)
op	34:55	0:0	6	->
water	34:57	0:0	6	sin_addr
arg	34:67	34:68	5	4
water	34:67	0:0	6	4
water	34:69	0:0	4	;
call	35:8	35:25	4	freeaddrinfo
arg	35:22	35:25	5	res
water	35:22	0:0	6	res
water	35:26	0:0	4	;
water	36:8	0:0	4	buffer
op	36:14	0:0	4	[
water	36:15	0:0	4	8
op	36:16	0:0	4	]
op	36:18	0:0	4	=
water	36:20	0:0	4	0
water	36:21	0:0	4	;
if	37:8	38:31	4	(net_Write (p_obj ,fd ,NULL ,buffer ,9 ) != 9)
cond	37:12	37:55	5	net_Write (p_obj ,fd ,NULL ,buffer ,9 ) != 9
call	37:12	37:50	6	net_Write
arg	37:23	37:28	7	p_obj
water	37:23	0:0	8	p_obj
arg	37:30	37:32	7	fd
water	37:30	0:0	8	fd
arg	37:34	37:38	7	NULL
water	37:34	0:0	8	NULL
arg	37:40	37:46	7	buffer
water	37:40	0:0	8	buffer
arg	37:48	37:50	7	9
water	37:48	0:0	8	9
op	37:52	0:0	6	!=
water	37:55	0:0	6	9
stmts	38:12	38:31	5	
return	38:12	38:31	6	VLC_EGENERIC
water	38:19	0:0	7	VLC_EGENERIC
if	39:8	40:31	4	(net_Read (p_obj ,fd ,NULL ,buffer ,8 ,true ) != 8)
cond	39:12	39:60	5	net_Read (p_obj ,fd ,NULL ,buffer ,8 ,true ) != 8
call	39:12	39:55	6	net_Read
arg	39:22	39:27	7	p_obj
water	39:22	0:0	8	p_obj
arg	39:29	39:31	7	fd
water	39:29	0:0	8	fd
arg	39:33	39:37	7	NULL
water	39:33	0:0	8	NULL
arg	39:39	39:45	7	buffer
water	39:39	0:0	8	buffer
arg	39:47	39:48	7	8
water	39:47	0:0	8	8
arg	39:50	39:55	7	true
water	39:50	0:0	8	true
op	39:57	0:0	6	!=
water	39:60	0:0	6	8
stmts	40:12	40:31	5	
return	40:12	40:31	6	VLC_EGENERIC
water	40:19	0:0	7	VLC_EGENERIC
call	41:8	42:38	4	msg_Dbg
arg	41:17	41:22	5	p_obj
water	41:17	0:0	6	p_obj
arg	41:24	41:43	5	"socks: v=%d cd=%d"
water	41:24	0:0	6	"socks: v=%d cd=%d"
arg	42:17	42:26	5	buffer[0]
water	42:17	0:0	6	buffer
op	42:23	0:0	6	[
water	42:24	0:0	6	0
op	42:25	0:0	6	]
arg	42:28	42:38	5	buffer[1]
water	42:28	0:0	6	buffer
op	42:34	0:0	6	[
water	42:35	0:0	6	1
op	42:36	0:0	6	]
water	42:39	0:0	4	;
if	43:8	44:31	4	(buffer [ 1 ] != 90)
cond	43:12	43:25	5	buffer [ 1 ] != 90
water	43:12	0:0	6	buffer
op	43:18	0:0	6	[
water	43:19	0:0	6	1
op	43:20	0:0	6	]
op	43:22	0:0	6	!=
water	43:25	0:0	6	90
stmts	44:12	44:31	5	
return	44:12	44:31	6	VLC_EGENERIC
water	44:19	0:0	7	VLC_EGENERIC
water	45:4	0:0	4	}
else	46:4	81:4	2
stmts	46:9	81:4	3	
if	46:9	81:4	4	(i_socks_version == 5)
cond	46:13	46:32	5	i_socks_version == 5
water	46:13	0:0	6	i_socks_version
op	46:29	0:0	6	==
water	46:32	0:0	6	5
stmts	47:4	81:4	5	
water	47:4	0:0	6	{
decl	48:8	48:51	6	int	i_hlen
op	48:19	0:0	6	=
call	48:21	48:50	7	__MIN
arg	48:27	48:45	8	strlen(psz_host)
call	48:27	48:44	9	strlen
arg	48:35	48:44	10	psz_host
water	48:35	0:0	11	psz_host
arg	48:47	48:50	8	255
water	48:47	0:0	9	255
decl	49:8	49:17	6	int	i_len
water	50:8	0:0	6	buffer
op	50:14	0:0	6	[
water	50:15	0:0	6	0
op	50:16	0:0	6	]
op	50:18	0:0	6	=
water	50:20	0:0	6	i_socks_version
water	50:35	0:0	6	;
water	51:8	0:0	6	buffer
op	51:14	0:0	6	[
water	51:15	0:0	6	1
op	51:16	0:0	6	]
op	51:18	0:0	6	=
water	51:20	0:0	6	0
water	51:21	0:0	6	x01
water	51:24	0:0	6	;
water	52:8	0:0	6	buffer
op	52:14	0:0	6	[
water	52:15	0:0	6	2
op	52:16	0:0	6	]
op	52:18	0:0	6	=
water	52:20	0:0	6	0
water	52:21	0:0	6	x00
water	52:24	0:0	6	;
water	53:8	0:0	6	buffer
op	53:14	0:0	6	[
water	53:15	0:0	6	3
op	53:16	0:0	6	]
op	53:18	0:0	6	=
water	53:20	0:0	6	3
water	53:21	0:0	6	;
water	54:8	0:0	6	buffer
op	54:14	0:0	6	[
water	54:15	0:0	6	4
op	54:16	0:0	6	]
op	54:18	0:0	6	=
water	54:20	0:0	6	i_hlen
water	54:26	0:0	6	;
call	55:8	55:45	6	memcpy
arg	55:16	55:26	7	&buffer[5]
op	55:16	0:0	8	&
water	55:17	0:0	8	buffer
op	55:23	0:0	8	[
water	55:24	0:0	8	5
op	55:25	0:0	8	]
arg	55:28	55:36	7	psz_host
water	55:28	0:0	8	psz_host
arg	55:38	55:45	7	i_hlen
water	55:38	0:0	8	i_hlen
water	55:46	0:0	6	;
call	56:8	56:42	6	SetWBE
arg	56:16	56:33	7	&buffer[5+i_hlen]
op	56:16	0:0	8	&
water	56:17	0:0	8	buffer
op	56:23	0:0	8	[
water	56:24	0:0	8	5
op	56:25	0:0	8	+
water	56:26	0:0	8	i_hlen
op	56:32	0:0	8	]
arg	56:35	56:42	7	i_port
water	56:35	0:0	8	i_port
water	56:43	0:0	6	;
water	57:8	0:0	6	i_len
op	57:14	0:0	6	=
water	57:16	0:0	6	5
op	57:18	0:0	6	+
water	57:20	0:0	6	i_hlen
op	57:27	0:0	6	+
water	57:29	0:0	6	2
water	57:30	0:0	6	;
if	58:8	59:31	6	(net_Write (p_obj ,fd ,NULL ,buffer ,i_len ) != i_len)
cond	58:12	58:59	7	net_Write (p_obj ,fd ,NULL ,buffer ,i_len ) != i_len
call	58:12	58:54	8	net_Write
arg	58:23	58:28	9	p_obj
water	58:23	0:0	10	p_obj
arg	58:30	58:32	9	fd
water	58:30	0:0	10	fd
arg	58:34	58:38	9	NULL
water	58:34	0:0	10	NULL
arg	58:40	58:46	9	buffer
water	58:40	0:0	10	buffer
arg	58:48	58:54	9	i_len
water	58:48	0:0	10	i_len
op	58:56	0:0	8	!=
water	58:59	0:0	8	i_len
stmts	59:12	59:31	7	
return	59:12	59:31	8	VLC_EGENERIC
water	59:19	0:0	9	VLC_EGENERIC
if	61:8	62:31	6	(net_Read (p_obj ,fd ,NULL ,buffer ,5 ,true ) != 5)
cond	61:12	61:60	7	net_Read (p_obj ,fd ,NULL ,buffer ,5 ,true ) != 5
call	61:12	61:55	8	net_Read
arg	61:22	61:27	9	p_obj
water	61:22	0:0	10	p_obj
arg	61:29	61:31	9	fd
water	61:29	0:0	10	fd
arg	61:33	61:37	9	NULL
water	61:33	0:0	10	NULL
arg	61:39	61:45	9	buffer
water	61:39	0:0	10	buffer
arg	61:47	61:48	9	5
water	61:47	0:0	10	5
arg	61:50	61:55	9	true
water	61:50	0:0	10	true
op	61:57	0:0	8	!=
water	61:60	0:0	8	5
stmts	62:12	62:31	7	
return	62:12	62:31	8	VLC_EGENERIC
water	62:19	0:0	9	VLC_EGENERIC
call	63:8	64:49	6	msg_Dbg
arg	63:17	63:22	7	p_obj
water	63:17	0:0	8	p_obj
arg	63:24	63:52	7	"socks: v=%d rep=%d atyp=%d"
water	63:24	0:0	8	"socks: v=%d rep=%d atyp=%d"
arg	64:17	64:26	7	buffer[0]
water	64:17	0:0	8	buffer
op	64:23	0:0	8	[
water	64:24	0:0	8	0
op	64:25	0:0	8	]
arg	64:28	64:37	7	buffer[1]
water	64:28	0:0	8	buffer
op	64:34	0:0	8	[
water	64:35	0:0	8	1
op	64:36	0:0	8	]
arg	64:39	64:49	7	buffer[3]
water	64:39	0:0	8	buffer
op	64:45	0:0	8	[
water	64:46	0:0	8	3
op	64:47	0:0	8	]
water	64:50	0:0	6	;
if	65:8	69:8	6	(buffer [ 1 ] != 0 x00)
cond	65:12	65:26	7	buffer [ 1 ] != 0 x00
water	65:12	0:0	8	buffer
op	65:18	0:0	8	[
water	65:19	0:0	8	1
op	65:20	0:0	8	]
op	65:22	0:0	8	!=
water	65:25	0:0	8	0
water	65:26	0:0	8	x00
stmts	66:8	69:8	7	
water	66:8	0:0	8	{
call	67:12	67:60	8	msg_Err
arg	67:21	67:26	9	p_obj
water	67:21	0:0	10	p_obj
arg	67:28	67:60	9	"socks: CONNECT request failed"
water	67:28	0:0	10	"socks: CONNECT request failed"
water	67:61	0:0	8	;
return	68:12	68:31	8	VLC_EGENERIC
water	68:19	0:0	9	VLC_EGENERIC
water	69:8	0:0	8	}
if	71:8	72:27	6	(buffer [ 3 ] == 0 x01)
cond	71:12	71:26	7	buffer [ 3 ] == 0 x01
water	71:12	0:0	8	buffer
op	71:18	0:0	8	[
water	71:19	0:0	8	3
op	71:20	0:0	8	]
op	71:22	0:0	8	==
water	71:25	0:0	8	0
water	71:26	0:0	8	x01
stmts	72:12	72:27	7	
water	72:12	0:0	8	i_len
op	72:18	0:0	8	=
water	72:20	0:0	8	4
op	72:21	0:0	8	-
water	72:22	0:0	8	1
op	72:24	0:0	8	+
water	72:26	0:0	8	2
water	72:27	0:0	8	;
else	73:8	74:33	6
stmts	73:13	74:33	7	
if	73:13	74:33	8	(buffer [ 3 ] == 0 x03)
cond	73:17	73:31	9	buffer [ 3 ] == 0 x03
water	73:17	0:0	10	buffer
op	73:23	0:0	10	[
water	73:24	0:0	10	3
op	73:25	0:0	10	]
op	73:27	0:0	10	==
water	73:30	0:0	10	0
water	73:31	0:0	10	x03
stmts	74:12	74:33	9	
water	74:12	0:0	10	i_len
op	74:18	0:0	10	=
water	74:20	0:0	10	buffer
op	74:26	0:0	10	[
water	74:27	0:0	10	4
op	74:28	0:0	10	]
op	74:30	0:0	10	+
water	74:32	0:0	10	2
water	74:33	0:0	10	;
else	75:8	76:26	6
stmts	75:13	76:26	7	
if	75:13	76:26	8	(buffer [ 3 ] == 0 x04)
cond	75:17	75:31	9	buffer [ 3 ] == 0 x04
water	75:17	0:0	10	buffer
op	75:23	0:0	10	[
water	75:24	0:0	10	3
op	75:25	0:0	10	]
op	75:27	0:0	10	==
water	75:30	0:0	10	0
water	75:31	0:0	10	x04
stmts	76:12	76:26	9	
water	76:12	0:0	10	i_len
op	76:18	0:0	10	=
water	76:20	0:0	10	16
op	76:22	0:0	10	-
water	76:23	0:0	10	1
op	76:24	0:0	10	+
water	76:25	0:0	10	2
water	76:26	0:0	10	;
else	77:8	78:31	6
stmts	78:12	78:31	7	
return	78:12	78:31	8	VLC_EGENERIC
water	78:19	0:0	9	VLC_EGENERIC
if	79:8	80:31	6	(net_Read (p_obj ,fd ,NULL ,buffer ,i_len ,true ) != i_len)
cond	79:12	79:64	7	net_Read (p_obj ,fd ,NULL ,buffer ,i_len ,true ) != i_len
call	79:12	79:59	8	net_Read
arg	79:22	79:27	9	p_obj
water	79:22	0:0	10	p_obj
arg	79:29	79:31	9	fd
water	79:29	0:0	10	fd
arg	79:33	79:37	9	NULL
water	79:33	0:0	10	NULL
arg	79:39	79:45	9	buffer
water	79:39	0:0	10	buffer
arg	79:47	79:52	9	i_len
water	79:47	0:0	10	i_len
arg	79:54	79:59	9	true
water	79:54	0:0	10	true
op	79:61	0:0	8	!=
water	79:64	0:0	8	i_len
stmts	80:12	80:31	7	
return	80:12	80:31	8	VLC_EGENERIC
water	80:19	0:0	9	VLC_EGENERIC
water	81:4	0:0	6	}
return	82:4	82:22	2	VLC_SUCCESS
water	82:11	0:0	3	VLC_SUCCESS

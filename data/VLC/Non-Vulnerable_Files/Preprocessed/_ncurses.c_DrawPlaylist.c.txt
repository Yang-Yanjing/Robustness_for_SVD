func	2:0	39:0	0	static int	DrawPlaylist
params	2:23	0:0	1	
param	2:24	2:43	2	intf_thread_t *	intf
stmnts	0:0	38:29	1	
decl	4:4	4:33	2	intf_sys_t	*sys
op	4:20	0:0	2	=
water	4:22	0:0	2	intf
op	4:26	0:0	2	->
water	4:28	0:0	2	p_sys
decl	5:4	5:41	2	playlist_t	*p_playlist
op	5:27	0:0	2	=
call	5:29	5:40	3	pl_Get
arg	5:36	5:40	4	intf
water	5:36	0:0	5	intf
water	6:4	0:0	2	PL_LOCK
water	6:11	0:0	2	;
call	7:4	7:32	2	vlc_mutex_lock
arg	7:19	7:32	3	&sys->pl_lock
op	7:19	0:0	4	&
water	7:20	0:0	4	sys
op	7:23	0:0	4	->
water	7:25	0:0	4	pl_lock
water	7:33	0:0	2	;
if	8:4	11:4	2	(sys -> need_update)
cond	8:8	8:13	3	sys -> need_update
water	8:8	0:0	4	sys
op	8:11	0:0	4	->
water	8:13	0:0	4	need_update
stmts	8:26	11:4	3	
water	8:26	0:0	4	{
call	9:8	9:28	4	PlaylistRebuild
arg	9:24	9:28	5	intf
water	9:24	0:0	6	intf
water	9:29	0:0	4	;
water	10:8	0:0	4	sys
op	10:11	0:0	4	->
water	10:13	0:0	4	need_update
op	10:25	0:0	4	=
water	10:27	0:0	4	false
water	10:32	0:0	4	;
water	11:4	0:0	4	}
call	12:4	12:34	2	vlc_mutex_unlock
arg	12:21	12:34	3	&sys->pl_lock
op	12:21	0:0	4	&
water	12:22	0:0	4	sys
op	12:25	0:0	4	->
water	12:27	0:0	4	pl_lock
water	12:35	0:0	2	;
water	13:4	0:0	2	PL_UNLOCK
water	13:13	0:0	2	;
if	14:4	15:34	2	(sys -> plidx_follow)
cond	14:8	14:13	3	sys -> plidx_follow
water	14:8	0:0	4	sys
op	14:11	0:0	4	->
water	14:13	0:0	4	plidx_follow
stmts	15:8	15:34	3	
call	15:8	15:33	4	FindIndex
arg	15:18	15:21	5	sys
water	15:18	0:0	6	sys
arg	15:23	15:33	5	p_playlist
water	15:23	0:0	6	p_playlist
water	15:34	0:0	4	;
for	16:4	37:4	2	( int i = 0 ;i < sys -> plist_entries;i ++)
forinit	0:0	16:18	3	 int i = 0 ;
decl	16:9	16:18	4	int	i
op	16:15	0:0	4	=
water	16:17	0:0	4	0
cond	16:20	16:29	3	i < sys -> plist_entries
water	16:20	0:0	4	i
op	16:22	0:0	4	<
water	16:24	0:0	4	sys
op	16:27	0:0	4	->
water	16:29	0:0	4	plist_entries
forexpr	16:44	16:45	3	i ++
water	16:44	0:0	4	i
op	16:45	0:0	4	++
stmts	16:49	37:4	3	
water	16:49	0:0	4	{
decl	17:8	17:14	4	char	c
decl	18:8	18:37	4	playlist_item_t	*current_item
decl	19:8	19:51	4	playlist_item_t	*item
op	19:30	0:0	4	=
water	19:32	0:0	4	sys
op	19:35	0:0	4	->
water	19:37	0:0	4	plist
op	19:42	0:0	4	[
water	19:43	0:0	4	i
op	19:44	0:0	4	]
op	19:45	0:0	4	->
water	19:47	0:0	4	item
call	20:8	20:36	4	vlc_mutex_lock
arg	20:23	20:36	5	&sys->pl_lock
op	20:23	0:0	6	&
water	20:24	0:0	6	sys
op	20:27	0:0	6	->
water	20:29	0:0	6	pl_lock
water	20:37	0:0	4	;
decl	21:8	21:41	4	playlist_item_t	*node
op	21:30	0:0	4	=
water	21:32	0:0	4	sys
op	21:35	0:0	4	->
water	21:37	0:0	4	node
call	22:8	22:38	4	vlc_mutex_unlock
arg	22:25	22:38	5	&sys->pl_lock
op	22:25	0:0	6	&
water	22:26	0:0	6	sys
op	22:29	0:0	6	->
water	22:31	0:0	6	pl_lock
water	22:39	0:0	4	;
water	23:8	0:0	4	PL_LOCK
water	23:15	0:0	4	;
call	24:8	24:19	4	assert
arg	24:15	24:19	5	item
water	24:15	0:0	6	item
water	24:20	0:0	4	;
water	25:8	0:0	4	current_item
op	25:21	0:0	4	=
call	25:23	25:61	4	playlist_CurrentPlayingItem
arg	25:51	25:61	5	p_playlist
water	25:51	0:0	6	p_playlist
water	25:62	0:0	4	;
if	26:8	28:19	4	(( node && item -> p_input == node -> p_input ) || ( ! node && current_item && item -> p_input == current_item -> p_input ))
cond	26:12	27:75	5	( node && item -> p_input == node -> p_input ) || ( ! node && current_item && item -> p_input == current_item -> p_input )
water	26:12	0:0	6	(
water	26:13	0:0	6	node
op	26:18	0:0	6	&&
water	26:21	0:0	6	item
op	26:25	0:0	6	->
water	26:27	0:0	6	p_input
op	26:35	0:0	6	==
water	26:38	0:0	6	node
op	26:42	0:0	6	->
water	26:44	0:0	6	p_input
water	26:51	0:0	6	)
op	26:53	0:0	6	||
water	27:11	0:0	6	(
op	27:12	0:0	6	!
water	27:13	0:0	6	node
op	27:18	0:0	6	&&
water	27:21	0:0	6	current_item
op	27:34	0:0	6	&&
water	27:37	0:0	6	item
op	27:41	0:0	6	->
water	27:43	0:0	6	p_input
op	27:51	0:0	6	==
water	27:54	0:0	6	current_item
op	27:66	0:0	6	->
water	27:68	0:0	6	p_input
water	27:75	0:0	6	)
stmts	28:12	28:19	5	
water	28:12	0:0	6	c
op	28:14	0:0	6	=
water	28:16	0:0	6	'*'
water	28:19	0:0	6	;
else	29:8	30:19	4
stmts	29:13	30:19	5	
if	29:13	30:19	6	(item == node || current_item == item)
cond	29:17	29:49	7	item == node || current_item == item
water	29:17	0:0	8	item
op	29:22	0:0	8	==
water	29:25	0:0	8	node
op	29:30	0:0	8	||
water	29:33	0:0	8	current_item
op	29:46	0:0	8	==
water	29:49	0:0	8	item
stmts	30:12	30:19	7	
water	30:12	0:0	8	c
op	30:14	0:0	8	=
water	30:16	0:0	8	'>'
water	30:19	0:0	8	;
else	31:8	32:19	4
stmts	32:12	32:19	5	
water	32:12	0:0	6	c
op	32:14	0:0	6	=
water	32:16	0:0	6	' '
water	32:19	0:0	6	;
water	33:8	0:0	4	PL_UNLOCK
water	33:17	0:0	4	;
if	34:8	34:59	4	(sys -> color)
cond	34:12	34:17	5	sys -> color
water	34:12	0:0	6	sys
op	34:15	0:0	6	->
water	34:17	0:0	6	color
stmts	34:24	34:59	5	
call	34:24	34:58	6	color_set
arg	34:34	34:52	7	i%3+C_PLAYLIST_1
water	34:34	0:0	8	i
op	34:35	0:0	8	%
water	34:36	0:0	8	3
op	34:38	0:0	8	+
water	34:40	0:0	8	C_PLAYLIST_1
arg	34:54	34:58	7	NULL
water	34:54	0:0	8	NULL
water	34:59	0:0	6	;
call	35:8	35:62	4	MainBoxWrite
arg	35:21	35:24	5	sys
water	35:21	0:0	6	sys
arg	35:26	35:27	5	i
water	35:26	0:0	6	i
arg	35:29	35:35	5	"%c%s"
water	35:29	0:0	6	"%c%s"
arg	35:37	35:38	5	c
water	35:37	0:0	6	c
arg	35:40	35:62	5	sys->plist[i]->display
water	35:40	0:0	6	sys
op	35:43	0:0	6	->
water	35:45	0:0	6	plist
op	35:50	0:0	6	[
water	35:51	0:0	6	i
op	35:52	0:0	6	]
op	35:53	0:0	6	->
water	35:55	0:0	6	display
water	35:63	0:0	4	;
if	36:8	36:50	4	(sys -> color)
cond	36:12	36:17	5	sys -> color
water	36:12	0:0	6	sys
op	36:15	0:0	6	->
water	36:17	0:0	6	color
stmts	36:24	36:50	5	
call	36:24	36:49	6	color_set
arg	36:34	36:43	7	C_DEFAULT
water	36:34	0:0	8	C_DEFAULT
arg	36:45	36:49	7	NULL
water	36:45	0:0	8	NULL
water	36:50	0:0	6	;
water	37:4	0:0	4	}
return	38:4	38:29	2	sys->plist_entries
water	38:11	0:0	3	sys
op	38:14	0:0	3	->
water	38:16	0:0	3	plist_entries

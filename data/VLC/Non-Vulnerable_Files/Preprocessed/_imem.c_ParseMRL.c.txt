func	2:0	58:0	0	static void	ParseMRL
params	2:20	0:0	1	
param	2:21	2:41	2	vlc_object_t *	object
param	2:43	2:63	2	const char *	psz_path
stmnts	4:4	57:13	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	struct
water	4:24	0:0	2	{
water	5:8	0:0	2	const
water	5:14	0:0	2	char
op	5:19	0:0	2	*
water	5:20	0:0	2	name
water	5:24	0:0	2	;
water	6:8	0:0	2	int
water	6:19	0:0	2	type
water	6:23	0:0	2	;
water	7:4	0:0	2	}
water	7:6	0:0	2	options
op	7:13	0:0	2	[
op	7:14	0:0	2	]
op	7:16	0:0	2	=
water	7:18	0:0	2	{
water	8:8	0:0	2	{
water	8:10	0:0	2	"id"
water	8:14	0:0	2	,
water	8:24	0:0	2	VLC_VAR_INTEGER
water	8:40	0:0	2	}
water	8:41	0:0	2	,
water	9:8	0:0	2	{
water	9:10	0:0	2	"group"
water	9:17	0:0	2	,
water	9:24	0:0	2	VLC_VAR_INTEGER
water	9:40	0:0	2	}
water	9:41	0:0	2	,
water	10:8	0:0	2	{
water	10:10	0:0	2	"cat"
water	10:15	0:0	2	,
water	10:24	0:0	2	VLC_VAR_INTEGER
water	10:40	0:0	2	}
water	10:41	0:0	2	,
water	11:8	0:0	2	{
water	11:10	0:0	2	"samplerate"
water	11:22	0:0	2	,
water	11:24	0:0	2	VLC_VAR_INTEGER
water	11:40	0:0	2	}
water	11:41	0:0	2	,
water	12:8	0:0	2	{
water	12:10	0:0	2	"channels"
water	12:20	0:0	2	,
water	12:24	0:0	2	VLC_VAR_INTEGER
water	12:40	0:0	2	}
water	12:41	0:0	2	,
water	13:8	0:0	2	{
water	13:10	0:0	2	"width"
water	13:17	0:0	2	,
water	13:24	0:0	2	VLC_VAR_INTEGER
water	13:40	0:0	2	}
water	13:41	0:0	2	,
water	14:8	0:0	2	{
water	14:10	0:0	2	"height"
water	14:18	0:0	2	,
water	14:24	0:0	2	VLC_VAR_INTEGER
water	14:40	0:0	2	}
water	14:41	0:0	2	,
water	15:8	0:0	2	{
water	15:10	0:0	2	"cookie"
water	15:18	0:0	2	,
water	15:24	0:0	2	VLC_VAR_STRING
water	15:39	0:0	2	}
water	15:40	0:0	2	,
water	16:8	0:0	2	{
water	16:10	0:0	2	"codec"
water	16:17	0:0	2	,
water	16:24	0:0	2	VLC_VAR_STRING
water	16:39	0:0	2	}
water	16:40	0:0	2	,
water	17:8	0:0	2	{
water	17:10	0:0	2	"language"
water	17:20	0:0	2	,
water	17:24	0:0	2	VLC_VAR_STRING
water	17:39	0:0	2	}
water	17:40	0:0	2	,
water	18:8	0:0	2	{
water	18:10	0:0	2	"dar"
water	18:15	0:0	2	,
water	18:24	0:0	2	VLC_VAR_STRING
water	18:39	0:0	2	}
water	18:40	0:0	2	,
water	19:8	0:0	2	{
water	19:10	0:0	2	"fps"
water	19:15	0:0	2	,
water	19:24	0:0	2	VLC_VAR_STRING
water	19:39	0:0	2	}
water	19:40	0:0	2	,
water	20:8	0:0	2	{
water	20:10	0:0	2	NULL
water	20:14	0:0	2	,
op	20:16	0:0	2	-
water	20:17	0:0	2	1
water	20:19	0:0	2	}
water	21:4	0:0	2	}
water	21:5	0:0	2	;
decl	22:4	22:32	2	char	*dup
op	22:14	0:0	2	=
call	22:16	22:31	3	strdup
arg	22:23	22:31	4	psz_path
water	22:23	0:0	5	psz_path
if	23:4	24:14	2	(! dup)
cond	23:8	23:9	3	! dup
op	23:8	0:0	4	!
water	23:9	0:0	4	dup
stmts	24:8	24:14	3	
return	24:8	24:14	4	
decl	25:4	25:23	2	char	*current
op	25:18	0:0	2	=
water	25:20	0:0	2	dup
while	26:4	56:4	2	(current)
cond	26:11	26:11	3	current
water	26:11	0:0	4	current
stmts	26:20	56:4	3	
water	26:20	0:0	4	{
decl	27:8	27:41	4	char	*next
op	27:19	0:0	4	=
call	27:21	27:40	5	strchr
arg	27:28	27:35	6	current
water	27:28	0:0	7	current
arg	27:37	27:40	6	':'
water	27:37	0:0	7	':'
if	28:8	29:26	4	(next)
cond	28:12	28:12	5	next
water	28:12	0:0	6	next
stmts	29:12	29:26	5	
op	29:12	0:0	6	*
water	29:13	0:0	6	next
op	29:17	0:0	6	++
op	29:20	0:0	6	=
water	29:22	0:0	6	'\0'
water	29:26	0:0	6	;
decl	30:8	30:30	4	char	*option
op	30:21	0:0	4	=
water	30:23	0:0	4	current
decl	31:8	31:42	4	char	*value
op	31:20	0:0	4	=
call	31:22	31:41	5	strchr
arg	31:29	31:36	6	current
water	31:29	0:0	7	current
arg	31:38	31:41	6	'='
water	31:38	0:0	7	'='
if	32:8	35:8	4	(value)
cond	32:12	32:12	5	value
water	32:12	0:0	6	value
stmts	32:19	35:8	5	
water	32:19	0:0	6	{
op	33:12	0:0	6	*
water	33:13	0:0	6	value
op	33:18	0:0	6	++
op	33:21	0:0	6	=
water	33:23	0:0	6	'\0'
water	33:27	0:0	6	;
call	34:12	34:67	6	msg_Dbg
arg	34:20	34:26	7	object
water	34:20	0:0	8	object
arg	34:28	34:52	7	"option '%s' value '%s'"
water	34:28	0:0	8	"option '%s' value '%s'"
arg	34:54	34:60	7	option
water	34:54	0:0	8	option
arg	34:62	34:67	7	value
water	34:62	0:0	8	value
water	34:68	0:0	6	;
water	35:8	0:0	6	}
else	35:10	37:8	4
stmts	35:15	37:8	5	
water	35:15	0:0	6	{
call	36:12	36:77	6	msg_Dbg
arg	36:20	36:26	7	object
water	36:20	0:0	8	object
arg	36:28	36:69	7	"option '%s' without value (unsupported)"
water	36:28	0:0	8	"option '%s' without value (unsupported)"
arg	36:71	36:77	7	option
water	36:71	0:0	8	option
water	36:78	0:0	6	;
water	37:8	0:0	6	}
decl	38:8	38:18	4	char	*name
if	39:8	40:23	4	(asprintf (& name ,"imem-%s" ,option ) < 0)
cond	39:12	39:49	5	asprintf (& name ,"imem-%s" ,option ) < 0
call	39:12	39:45	6	asprintf
arg	39:21	39:26	7	&name
op	39:21	0:0	8	&
water	39:22	0:0	8	name
arg	39:28	39:37	7	"imem-%s"
water	39:28	0:0	8	"imem-%s"
arg	39:39	39:45	7	option
water	39:39	0:0	8	option
op	39:47	0:0	6	<
water	39:49	0:0	6	0
stmts	40:12	40:23	5	
water	40:12	0:0	6	name
op	40:17	0:0	6	=
water	40:19	0:0	6	NULL
water	40:23	0:0	6	;
for	41:8	52:8	4	(unsigned i = 0 ;name && options [ i ] . name;i ++)
forinit	41:13	41:27	5	unsigned i = 0 ;
water	41:13	0:0	6	unsigned
water	41:22	0:0	6	i
op	41:24	0:0	6	=
water	41:26	0:0	6	0
water	41:27	0:0	6	;
cond	41:29	41:48	5	name && options [ i ] . name
water	41:29	0:0	6	name
op	41:34	0:0	6	&&
water	41:37	0:0	6	options
op	41:44	0:0	6	[
water	41:45	0:0	6	i
op	41:46	0:0	6	]
op	41:47	0:0	6	.
water	41:48	0:0	6	name
forexpr	41:54	41:55	5	i ++
water	41:54	0:0	6	i
op	41:55	0:0	6	++
stmts	41:59	52:8	5	
water	41:59	0:0	6	{
if	42:12	43:24	6	(strcmp (options [ i ] . name ,option ))
cond	42:16	42:46	7	strcmp (options [ i ] . name ,option )
call	42:16	42:46	8	strcmp
arg	42:23	42:38	9	options[i].name
water	42:23	0:0	10	options
op	42:30	0:0	10	[
water	42:31	0:0	10	i
op	42:32	0:0	10	]
op	42:33	0:0	10	.
water	42:34	0:0	10	name
arg	42:40	42:46	9	option
water	42:40	0:0	10	option
stmts	43:16	43:24	7	
continue	43:16	43:24	8	
call	45:12	45:72	6	var_Create
arg	45:23	45:29	7	object
water	45:23	0:0	8	object
arg	45:31	45:35	7	name
water	45:31	0:0	8	name
arg	45:37	45:72	7	options[i].type|VLC_VAR_DOINHERIT
water	45:37	0:0	8	options
op	45:44	0:0	8	[
water	45:45	0:0	8	i
op	45:46	0:0	8	]
op	45:47	0:0	8	.
water	45:48	0:0	8	type
op	45:53	0:0	8	|
water	45:55	0:0	8	VLC_VAR_DOINHERIT
water	45:73	0:0	6	;
if	46:12	48:12	6	(options [ i ] . type == VLC_VAR_INTEGER && value)
cond	46:16	46:54	7	options [ i ] . type == VLC_VAR_INTEGER && value
water	46:16	0:0	8	options
op	46:23	0:0	8	[
water	46:24	0:0	8	i
op	46:25	0:0	8	]
op	46:26	0:0	8	.
water	46:27	0:0	8	type
op	46:32	0:0	8	==
water	46:35	0:0	8	VLC_VAR_INTEGER
op	46:51	0:0	8	&&
water	46:54	0:0	8	value
stmts	46:61	48:12	7	
water	46:61	0:0	8	{
call	47:16	47:67	8	var_SetInteger
arg	47:31	47:37	9	object
water	47:31	0:0	10	object
arg	47:39	47:43	9	name
water	47:39	0:0	10	name
arg	47:45	47:67	9	strtol(value,NULL,0)
call	47:45	47:66	10	strtol
arg	47:52	47:57	11	value
water	47:52	0:0	12	value
arg	47:59	47:63	11	NULL
water	47:59	0:0	12	NULL
arg	47:65	47:66	11	0
water	47:65	0:0	12	0
water	47:68	0:0	8	;
water	48:12	0:0	8	}
else	48:14	50:12	6
stmts	48:19	50:12	7	
if	48:19	50:12	8	(options [ i ] . type == VLC_VAR_STRING && value)
cond	48:23	48:60	9	options [ i ] . type == VLC_VAR_STRING && value
water	48:23	0:0	10	options
op	48:30	0:0	10	[
water	48:31	0:0	10	i
op	48:32	0:0	10	]
op	48:33	0:0	10	.
water	48:34	0:0	10	type
op	48:39	0:0	10	==
water	48:42	0:0	10	VLC_VAR_STRING
op	48:57	0:0	10	&&
water	48:60	0:0	10	value
stmts	48:67	50:12	9	
water	48:67	0:0	10	{
call	49:16	49:49	10	var_SetString
arg	49:30	49:36	11	object
water	49:30	0:0	12	object
arg	49:38	49:42	11	name
water	49:38	0:0	12	name
arg	49:44	49:49	11	value
water	49:44	0:0	12	value
water	49:50	0:0	10	;
water	50:12	0:0	10	}
break	51:12	51:17	6	
water	52:8	0:0	6	}
call	53:8	53:17	4	free
arg	53:13	53:17	5	name
water	53:13	0:0	6	name
water	53:18	0:0	4	;
water	55:8	0:0	4	current
op	55:16	0:0	4	=
water	55:18	0:0	4	next
water	55:22	0:0	4	;
water	56:4	0:0	4	}
call	57:4	57:12	2	free
arg	57:9	57:12	3	dup
water	57:9	0:0	4	dup
water	57:13	0:0	2	;

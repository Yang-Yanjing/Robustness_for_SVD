func	2:0	40:0	0	int	transcode_spu_new
params	2:21	0:0	1	
param	2:23	2:46	2	sout_stream_t *	p_stream
param	2:48	2:73	2	sout_stream_id_sys_t *	id
stmnts	0:0	39:22	1	
decl	4:4	4:46	2	sout_stream_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	p_stream
op	4:39	0:0	2	->
water	4:41	0:0	2	p_sys
water	9:4	0:0	2	id
op	9:6	0:0	2	->
water	9:8	0:0	2	p_decoder
op	9:17	0:0	2	->
water	9:19	0:0	2	pf_decode_sub
op	9:33	0:0	2	=
water	9:35	0:0	2	NULL
water	9:39	0:0	2	;
water	10:4	0:0	2	id
op	10:6	0:0	2	->
water	10:8	0:0	2	p_decoder
op	10:17	0:0	2	->
water	10:19	0:0	2	pf_spu_buffer_new
op	10:37	0:0	2	=
water	10:39	0:0	2	spu_new_buffer
water	10:53	0:0	2	;
water	11:4	0:0	2	id
op	11:6	0:0	2	->
water	11:8	0:0	2	p_decoder
op	11:17	0:0	2	->
water	11:19	0:0	2	pf_spu_buffer_del
op	11:37	0:0	2	=
water	11:39	0:0	2	spu_del_buffer
water	11:53	0:0	2	;
water	12:4	0:0	2	id
op	12:6	0:0	2	->
water	12:8	0:0	2	p_decoder
op	12:17	0:0	2	->
water	12:19	0:0	2	p_owner
op	12:27	0:0	2	=
water	12:29	0:0	2	(
water	12:30	0:0	2	decoder_owner_sys_t
op	12:50	0:0	2	*
water	12:51	0:0	2	)
water	12:52	0:0	2	p_stream
water	12:60	0:0	2	;
water	14:4	0:0	2	id
op	14:6	0:0	2	->
water	14:8	0:0	2	p_decoder
op	14:17	0:0	2	->
water	14:19	0:0	2	p_module
op	14:28	0:0	2	=
call	15:8	15:63	2	module_need
arg	15:21	15:34	3	id->p_decoder
water	15:21	0:0	4	id
op	15:23	0:0	4	->
water	15:25	0:0	4	p_decoder
arg	15:36	15:45	3	"decoder"
water	15:36	0:0	4	"decoder"
arg	15:47	15:55	3	"$codec"
water	15:47	0:0	4	"$codec"
arg	15:57	15:63	3	false
water	15:57	0:0	4	false
water	15:64	0:0	2	;
if	16:4	20:4	2	(! id -> p_decoder -> p_module)
cond	16:8	16:24	3	! id -> p_decoder -> p_module
op	16:8	0:0	4	!
water	16:9	0:0	4	id
op	16:11	0:0	4	->
water	16:13	0:0	4	p_decoder
op	16:22	0:0	4	->
water	16:24	0:0	4	p_module
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:53	4	msg_Err
arg	18:17	18:25	5	p_stream
water	18:17	0:0	6	p_stream
arg	18:27	18:53	5	"cannot find spu decoder"
water	18:27	0:0	6	"cannot find spu decoder"
water	18:54	0:0	4	;
return	19:8	19:27	4	VLC_EGENERIC
water	19:15	0:0	5	VLC_EGENERIC
water	20:4	0:0	4	}
if	21:4	36:4	2	(! p_sys -> b_soverlay)
cond	21:8	21:16	3	! p_sys -> b_soverlay
op	21:8	0:0	4	!
water	21:9	0:0	4	p_sys
op	21:14	0:0	4	->
water	21:16	0:0	4	b_soverlay
stmts	22:4	36:4	3	
water	22:4	0:0	4	{
call	25:8	26:54	4	es_format_Init
arg	25:24	25:46	5	&id->p_encoder->fmt_in
op	25:24	0:0	6	&
water	25:25	0:0	6	id
op	25:27	0:0	6	->
water	25:29	0:0	6	p_encoder
op	25:38	0:0	6	->
water	25:40	0:0	6	fmt_in
arg	25:48	25:75	5	id->p_decoder->fmt_in.i_cat
water	25:48	0:0	6	id
op	25:50	0:0	6	->
water	25:52	0:0	6	p_decoder
op	25:61	0:0	6	->
water	25:63	0:0	6	fmt_in
op	25:69	0:0	6	.
water	25:70	0:0	6	i_cat
arg	26:24	26:54	5	id->p_decoder->fmt_in.i_codec
water	26:24	0:0	6	id
op	26:26	0:0	6	->
water	26:28	0:0	6	p_decoder
op	26:37	0:0	6	->
water	26:39	0:0	6	fmt_in
op	26:45	0:0	6	.
water	26:46	0:0	6	i_codec
water	26:55	0:0	4	;
water	27:8	0:0	4	id
op	27:10	0:0	4	->
water	27:12	0:0	4	p_encoder
op	27:21	0:0	4	->
water	27:23	0:0	4	p_cfg
op	27:29	0:0	4	=
water	27:31	0:0	4	p_sys
op	27:36	0:0	4	->
water	27:38	0:0	4	p_spu_cfg
water	27:47	0:0	4	;
water	28:8	0:0	4	id
op	28:10	0:0	4	->
water	28:12	0:0	4	p_encoder
op	28:21	0:0	4	->
water	28:23	0:0	4	p_module
op	28:32	0:0	4	=
call	29:12	29:73	4	module_need
arg	29:25	29:38	5	id->p_encoder
water	29:25	0:0	6	id
op	29:27	0:0	6	->
water	29:29	0:0	6	p_encoder
arg	29:40	29:49	5	"encoder"
water	29:40	0:0	6	"encoder"
arg	29:51	29:66	5	p_sys->psz_senc
water	29:51	0:0	6	p_sys
op	29:56	0:0	6	->
water	29:58	0:0	6	psz_senc
arg	29:68	29:73	5	true
water	29:68	0:0	6	true
water	29:74	0:0	4	;
if	30:8	35:8	4	(! id -> p_encoder -> p_module)
cond	30:12	30:28	5	! id -> p_encoder -> p_module
op	30:12	0:0	6	!
water	30:13	0:0	6	id
op	30:15	0:0	6	->
water	30:17	0:0	6	p_encoder
op	30:26	0:0	6	->
water	30:28	0:0	6	p_module
stmts	31:8	35:8	5	
water	31:8	0:0	6	{
call	32:12	32:66	6	module_unneed
arg	32:27	32:40	7	id->p_decoder
water	32:27	0:0	8	id
op	32:29	0:0	8	->
water	32:31	0:0	8	p_decoder
arg	32:42	32:66	7	id->p_decoder->p_module
water	32:42	0:0	8	id
op	32:44	0:0	8	->
water	32:46	0:0	8	p_decoder
op	32:55	0:0	8	->
water	32:57	0:0	8	p_module
water	32:67	0:0	6	;
call	33:12	33:79	6	msg_Err
arg	33:21	33:29	7	p_stream
water	33:21	0:0	8	p_stream
arg	33:31	33:61	7	"cannot find spu encoder (%s)"
water	33:31	0:0	8	"cannot find spu encoder (%s)"
arg	33:63	33:79	7	p_sys->psz_senc
water	33:63	0:0	8	p_sys
op	33:68	0:0	8	->
water	33:70	0:0	8	psz_senc
water	33:80	0:0	6	;
return	34:12	34:31	6	VLC_EGENERIC
water	34:19	0:0	7	VLC_EGENERIC
water	35:8	0:0	6	}
water	36:4	0:0	4	}
if	37:4	38:45	2	(! p_sys -> p_spu)
cond	37:8	37:16	3	! p_sys -> p_spu
op	37:8	0:0	4	!
water	37:9	0:0	4	p_sys
op	37:14	0:0	4	->
water	37:16	0:0	4	p_spu
stmts	38:8	38:45	3	
water	38:8	0:0	4	p_sys
op	38:13	0:0	4	->
water	38:15	0:0	4	p_spu
op	38:21	0:0	4	=
call	38:23	38:44	4	spu_Create
arg	38:35	38:44	5	p_stream
water	38:35	0:0	6	p_stream
water	38:45	0:0	4	;
return	39:4	39:22	2	VLC_SUCCESS
water	39:11	0:0	3	VLC_SUCCESS

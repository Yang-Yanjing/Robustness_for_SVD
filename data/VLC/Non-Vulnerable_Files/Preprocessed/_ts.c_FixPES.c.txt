func	2:0	57:0	0	static block_t *	FixPES
params	2:22	0:0	1	
param	2:24	2:41	2	sout_mux_t *	p_mux
param	2:43	2:64	2	block_fifo_t *	p_fifo
stmnts	4:4	56:4	1	
call	4:4	4:20	2	VLC_UNUSED
arg	4:15	4:20	3	p_mux
water	4:15	0:0	4	p_mux
water	4:21	0:0	2	;
decl	5:4	5:19	2	block_t	*p_data
decl	6:4	6:17	2	size_t	i_size
water	7:4	0:0	2	p_data
op	7:11	0:0	2	=
call	7:13	7:36	2	block_FifoShow
arg	7:29	7:36	3	p_fifo
water	7:29	0:0	4	p_fifo
water	7:37	0:0	2	;
water	8:4	0:0	2	i_size
op	8:11	0:0	2	=
water	8:13	0:0	2	p_data
op	8:19	0:0	2	->
water	8:21	0:0	2	i_buffer
water	8:29	0:0	2	;
if	9:4	12:4	2	(i_size == STD_PES_PAYLOAD)
cond	9:8	9:18	3	i_size == STD_PES_PAYLOAD
water	9:8	0:0	4	i_size
op	9:15	0:0	4	==
water	9:18	0:0	4	STD_PES_PAYLOAD
stmts	10:4	12:4	3	
water	10:4	0:0	4	{
return	11:8	11:38	4	block_FifoGet(p_fifo)
call	11:15	11:37	5	block_FifoGet
arg	11:30	11:37	6	p_fifo
water	11:30	0:0	7	p_fifo
water	12:4	0:0	4	}
else	13:4	28:4	2
stmts	13:9	28:4	3	
if	13:9	28:4	4	(i_size > STD_PES_PAYLOAD)
cond	13:13	13:22	5	i_size > STD_PES_PAYLOAD
water	13:13	0:0	6	i_size
op	13:20	0:0	6	>
water	13:22	0:0	6	STD_PES_PAYLOAD
stmts	14:4	28:4	5	
water	14:4	0:0	6	{
decl	15:8	15:55	6	block_t	*p_new
op	15:23	0:0	6	=
call	15:25	15:54	7	block_Alloc
arg	15:38	15:54	8	STD_PES_PAYLOAD
water	15:38	0:0	9	STD_PES_PAYLOAD
call	16:8	16:67	6	memcpy
arg	16:16	16:31	7	p_new->p_buffer
water	16:16	0:0	8	p_new
op	16:21	0:0	8	->
water	16:23	0:0	8	p_buffer
arg	16:33	16:49	7	p_data->p_buffer
water	16:33	0:0	8	p_data
op	16:39	0:0	8	->
water	16:41	0:0	8	p_buffer
arg	16:51	16:67	7	STD_PES_PAYLOAD
water	16:51	0:0	8	STD_PES_PAYLOAD
water	16:68	0:0	6	;
water	17:8	0:0	6	p_new
op	17:13	0:0	6	->
water	17:15	0:0	6	i_pts
op	17:21	0:0	6	=
water	17:23	0:0	6	p_data
op	17:29	0:0	6	->
water	17:31	0:0	6	i_pts
water	17:36	0:0	6	;
water	18:8	0:0	6	p_new
op	18:13	0:0	6	->
water	18:15	0:0	6	i_dts
op	18:21	0:0	6	=
water	18:23	0:0	6	p_data
op	18:29	0:0	6	->
water	18:31	0:0	6	i_dts
water	18:36	0:0	6	;
water	19:8	0:0	6	p_new
op	19:13	0:0	6	->
water	19:15	0:0	6	i_length
op	19:24	0:0	6	=
water	19:26	0:0	6	p_data
op	19:32	0:0	6	->
water	19:34	0:0	6	i_length
op	19:43	0:0	6	*
water	19:45	0:0	6	STD_PES_PAYLOAD
op	20:28	0:0	6	/
water	20:30	0:0	6	p_data
op	20:36	0:0	6	->
water	20:38	0:0	6	i_buffer
water	20:46	0:0	6	;
water	21:8	0:0	6	p_data
op	21:14	0:0	6	->
water	21:16	0:0	6	i_buffer
op	21:25	0:0	6	-=
water	21:28	0:0	6	STD_PES_PAYLOAD
water	21:43	0:0	6	;
water	22:8	0:0	6	p_data
op	22:14	0:0	6	->
water	22:16	0:0	6	p_buffer
op	22:25	0:0	6	+=
water	22:28	0:0	6	STD_PES_PAYLOAD
water	22:43	0:0	6	;
water	23:8	0:0	6	p_data
op	23:14	0:0	6	->
water	23:16	0:0	6	i_pts
op	23:22	0:0	6	+=
water	23:25	0:0	6	p_new
op	23:30	0:0	6	->
water	23:32	0:0	6	i_length
water	23:40	0:0	6	;
water	24:8	0:0	6	p_data
op	24:14	0:0	6	->
water	24:16	0:0	6	i_dts
op	24:22	0:0	6	+=
water	24:25	0:0	6	p_new
op	24:30	0:0	6	->
water	24:32	0:0	6	i_length
water	24:40	0:0	6	;
water	25:8	0:0	6	p_data
op	25:14	0:0	6	->
water	25:16	0:0	6	i_length
op	25:25	0:0	6	-=
water	25:28	0:0	6	p_new
op	25:33	0:0	6	->
water	25:35	0:0	6	i_length
water	25:43	0:0	6	;
water	26:8	0:0	6	p_data
op	26:14	0:0	6	->
water	26:16	0:0	6	i_flags
op	26:24	0:0	6	|=
water	26:27	0:0	6	BLOCK_FLAG_NO_KEYFRAME
water	26:49	0:0	6	;
return	27:8	27:20	6	p_new
water	27:15	0:0	7	p_new
water	28:4	0:0	6	}
else	29:4	56:4	2
stmts	30:4	56:4	3	
water	30:4	0:0	4	{
decl	31:8	31:23	4	block_t	*p_next
decl	32:8	32:18	4	int	i_copy
water	33:8	0:0	4	p_data
op	33:15	0:0	4	=
call	33:17	33:39	4	block_FifoGet
arg	33:32	33:39	5	p_fifo
water	33:32	0:0	6	p_fifo
water	33:40	0:0	4	;
water	34:8	0:0	4	p_data
op	34:15	0:0	4	=
call	34:17	34:59	4	block_Realloc
arg	34:32	34:38	5	p_data
water	34:32	0:0	6	p_data
arg	34:40	34:41	5	0
water	34:40	0:0	6	0
arg	34:43	34:59	5	STD_PES_PAYLOAD
water	34:43	0:0	6	STD_PES_PAYLOAD
water	34:60	0:0	4	;
water	35:8	0:0	4	p_next
op	35:15	0:0	4	=
call	35:17	35:40	4	block_FifoShow
arg	35:33	35:40	5	p_fifo
water	35:33	0:0	6	p_fifo
water	35:41	0:0	4	;
if	36:8	41:8	4	(p_data -> i_flags & BLOCK_FLAG_NO_KEYFRAME)
cond	36:13	36:31	5	p_data -> i_flags & BLOCK_FLAG_NO_KEYFRAME
water	36:13	0:0	6	p_data
op	36:19	0:0	6	->
water	36:21	0:0	6	i_flags
op	36:29	0:0	6	&
water	36:31	0:0	6	BLOCK_FLAG_NO_KEYFRAME
stmts	37:8	41:8	5	
water	37:8	0:0	6	{
water	38:12	0:0	6	p_data
op	38:18	0:0	6	->
water	38:20	0:0	6	i_flags
op	38:28	0:0	6	&=
water	38:31	0:0	6	~BLOCK_FLAG_NO_KEYFRAME
water	38:54	0:0	6	;
water	39:12	0:0	6	p_data
op	39:18	0:0	6	->
water	39:20	0:0	6	i_pts
op	39:26	0:0	6	=
water	39:28	0:0	6	p_next
op	39:34	0:0	6	->
water	39:36	0:0	6	i_pts
water	39:41	0:0	6	;
water	40:12	0:0	6	p_data
op	40:18	0:0	6	->
water	40:20	0:0	6	i_dts
op	40:26	0:0	6	=
water	40:28	0:0	6	p_next
op	40:34	0:0	6	->
water	40:36	0:0	6	i_dts
water	40:41	0:0	6	;
water	41:8	0:0	6	}
water	42:8	0:0	4	i_copy
op	42:15	0:0	4	=
call	42:17	42:67	4	__MIN
arg	42:24	42:48	5	STD_PES_PAYLOAD-i_size
water	42:24	0:0	6	STD_PES_PAYLOAD
op	42:40	0:0	6	-
water	42:42	0:0	6	i_size
arg	42:50	42:67	5	p_next->i_buffer
water	42:50	0:0	6	p_next
op	42:56	0:0	6	->
water	42:58	0:0	6	i_buffer
water	42:68	0:0	4	;
call	43:8	43:68	4	memcpy
arg	43:16	43:41	5	&p_data->p_buffer[i_size]
op	43:16	0:0	6	&
water	43:17	0:0	6	p_data
op	43:23	0:0	6	->
water	43:25	0:0	6	p_buffer
op	43:33	0:0	6	[
water	43:34	0:0	6	i_size
op	43:40	0:0	6	]
arg	43:43	43:59	5	p_next->p_buffer
water	43:43	0:0	6	p_next
op	43:49	0:0	6	->
water	43:51	0:0	6	p_buffer
arg	43:61	43:68	5	i_copy
water	43:61	0:0	6	i_copy
water	43:69	0:0	4	;
water	44:8	0:0	4	p_next
op	44:14	0:0	4	->
water	44:16	0:0	4	i_pts
op	44:22	0:0	4	+=
water	44:25	0:0	4	p_next
op	44:31	0:0	4	->
water	44:33	0:0	4	i_length
op	44:42	0:0	4	*
water	44:44	0:0	4	i_copy
op	44:51	0:0	4	/
water	44:53	0:0	4	p_next
op	44:59	0:0	4	->
water	44:61	0:0	4	i_buffer
water	44:69	0:0	4	;
water	45:8	0:0	4	p_next
op	45:14	0:0	4	->
water	45:16	0:0	4	i_dts
op	45:22	0:0	4	+=
water	45:25	0:0	4	p_next
op	45:31	0:0	4	->
water	45:33	0:0	4	i_length
op	45:42	0:0	4	*
water	45:44	0:0	4	i_copy
op	45:51	0:0	4	/
water	45:53	0:0	4	p_next
op	45:59	0:0	4	->
water	45:61	0:0	4	i_buffer
water	45:69	0:0	4	;
water	46:8	0:0	4	p_next
op	46:14	0:0	4	->
water	46:16	0:0	4	i_length
op	46:25	0:0	4	-=
water	46:28	0:0	4	p_next
op	46:34	0:0	4	->
water	46:36	0:0	4	i_length
op	46:45	0:0	4	*
water	46:47	0:0	4	i_copy
op	46:54	0:0	4	/
water	46:56	0:0	4	p_next
op	46:62	0:0	4	->
water	46:64	0:0	4	i_buffer
water	46:72	0:0	4	;
water	47:8	0:0	4	p_next
op	47:14	0:0	4	->
water	47:16	0:0	4	i_buffer
op	47:25	0:0	4	-=
water	47:28	0:0	4	i_copy
water	47:34	0:0	4	;
water	48:8	0:0	4	p_next
op	48:14	0:0	4	->
water	48:16	0:0	4	p_buffer
op	48:25	0:0	4	+=
water	48:28	0:0	4	i_copy
water	48:34	0:0	4	;
water	49:8	0:0	4	p_next
op	49:14	0:0	4	->
water	49:16	0:0	4	i_flags
op	49:24	0:0	4	|=
water	49:27	0:0	4	BLOCK_FLAG_NO_KEYFRAME
water	49:49	0:0	4	;
if	50:8	54:8	4	(! p_next -> i_buffer)
cond	50:12	50:21	5	! p_next -> i_buffer
op	50:12	0:0	6	!
water	50:13	0:0	6	p_next
op	50:19	0:0	6	->
water	50:21	0:0	6	i_buffer
stmts	51:8	54:8	5	
water	51:8	0:0	6	{
water	52:12	0:0	6	p_next
op	52:19	0:0	6	=
call	52:21	52:43	6	block_FifoGet
arg	52:36	52:43	7	p_fifo
water	52:36	0:0	8	p_fifo
water	52:44	0:0	6	;
call	53:12	53:34	6	block_Release
arg	53:27	53:34	7	p_next
water	53:27	0:0	8	p_next
water	53:35	0:0	6	;
water	54:8	0:0	6	}
return	55:8	55:21	4	p_data
water	55:15	0:0	5	p_data
water	56:4	0:0	4	}

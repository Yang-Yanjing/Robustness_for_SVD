func	2:0	36:0	0	static int	Demux
params	2:16	0:0	1	
param	2:17	2:31	2	demux_t *	demux
stmnts	0:0	35:12	1	
decl	4:4	4:47	2	imem_sys_t	*sys
op	4:20	0:0	2	=
water	4:22	0:0	2	(
water	4:23	0:0	2	imem_sys_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	demux
op	4:40	0:0	2	->
water	4:42	0:0	2	p_sys
if	5:4	6:36	2	(sys -> deadline == VLC_TS_INVALID)
cond	5:8	5:25	3	sys -> deadline == VLC_TS_INVALID
water	5:8	0:0	4	sys
op	5:11	0:0	4	->
water	5:13	0:0	4	deadline
op	5:22	0:0	4	==
water	5:25	0:0	4	VLC_TS_INVALID
stmts	6:8	6:36	3	
water	6:8	0:0	4	sys
op	6:11	0:0	4	->
water	6:13	0:0	4	deadline
op	6:22	0:0	4	=
water	6:24	0:0	4	sys
op	6:27	0:0	4	->
water	6:29	0:0	4	dts
op	6:33	0:0	4	+
water	6:35	0:0	4	1
water	6:36	0:0	4	;
for	7:4	33:4	2	(;;)
forinit	7:9	7:9	3	;
water	7:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	7:13	33:4	3	
water	7:13	0:0	4	{
if	8:8	9:17	4	(sys -> deadline <= sys -> dts)
cond	8:12	8:34	5	sys -> deadline <= sys -> dts
water	8:12	0:0	6	sys
op	8:15	0:0	6	->
water	8:17	0:0	6	deadline
op	8:26	0:0	6	<=
water	8:29	0:0	6	sys
op	8:32	0:0	6	->
water	8:34	0:0	6	dts
stmts	9:12	9:17	5	
break	9:12	9:17	6	
decl	11:8	11:24	4	int64_t	dts
water	11:19	0:0	4	,
decl	11:8	11:24	4	int64_t	pts
water	12:8	0:0	4	unsigned
water	12:17	0:0	4	flags
water	12:22	0:0	4	;
decl	13:8	13:26	4	size_t	buffer_size
decl	14:8	14:22	4	void	*buffer
if	15:8	17:20	4	(sys -> source . get (sys -> source . data ,sys -> source . cookie ,& dts ,& pts ,& flags ,& buffer_size ,& buffer ))
cond	15:12	16:69	5	sys -> source . get (sys -> source . data ,sys -> source . cookie ,& dts ,& pts ,& flags ,& buffer_size ,& buffer )
call	15:12	16:69	6	sys->source.get
arg	15:28	15:44	7	sys->source.data
water	15:28	0:0	8	sys
op	15:31	0:0	8	->
water	15:33	0:0	8	source
op	15:39	0:0	8	.
water	15:40	0:0	8	data
arg	15:46	15:64	7	sys->source.cookie
water	15:46	0:0	8	sys
op	15:49	0:0	8	->
water	15:51	0:0	8	source
op	15:57	0:0	8	.
water	15:58	0:0	8	cookie
arg	16:28	16:32	7	&dts
op	16:28	0:0	8	&
water	16:29	0:0	8	dts
arg	16:34	16:38	7	&pts
op	16:34	0:0	8	&
water	16:35	0:0	8	pts
arg	16:40	16:46	7	&flags
op	16:40	0:0	8	&
water	16:41	0:0	8	flags
arg	16:48	16:60	7	&buffer_size
op	16:48	0:0	8	&
water	16:49	0:0	8	buffer_size
arg	16:62	16:69	7	&buffer
op	16:62	0:0	8	&
water	16:63	0:0	8	buffer
stmts	17:12	17:20	5	
return	17:12	17:20	6	0
water	17:19	0:0	7	0
if	18:8	19:21	4	(dts < 0)
cond	18:12	18:18	5	dts < 0
water	18:12	0:0	6	dts
op	18:16	0:0	6	<
water	18:18	0:0	6	0
stmts	19:12	19:21	5	
water	19:12	0:0	6	dts
op	19:16	0:0	6	=
water	19:18	0:0	6	pts
water	19:21	0:0	6	;
if	20:8	29:8	4	(buffer_size > 0)
cond	20:12	20:26	5	buffer_size > 0
water	20:12	0:0	6	buffer_size
op	20:24	0:0	6	>
water	20:26	0:0	6	0
stmts	20:29	29:8	5	
water	20:29	0:0	6	{
decl	21:12	21:53	6	block_t	*block
op	21:27	0:0	6	=
call	21:29	21:52	7	block_Alloc
arg	21:41	21:52	8	buffer_size
water	21:41	0:0	9	buffer_size
if	22:12	28:12	6	(block)
cond	22:16	22:16	7	block
water	22:16	0:0	8	block
stmts	22:23	28:12	7	
water	22:23	0:0	8	{
water	23:16	0:0	8	block
op	23:21	0:0	8	->
water	23:23	0:0	8	i_dts
op	23:29	0:0	8	=
water	23:31	0:0	8	dts
op	23:35	0:0	8	>=
water	23:38	0:0	8	0
water	23:40	0:0	8	?
water	23:42	0:0	8	(
water	23:43	0:0	8	1
op	23:45	0:0	8	+
water	23:47	0:0	8	dts
water	23:50	0:0	8	)
water	23:52	0:0	8	:
water	23:54	0:0	8	VLC_TS_INVALID
water	23:68	0:0	8	;
water	24:16	0:0	8	block
op	24:21	0:0	8	->
water	24:23	0:0	8	i_pts
op	24:29	0:0	8	=
water	24:31	0:0	8	pts
op	24:35	0:0	8	>=
water	24:38	0:0	8	0
water	24:40	0:0	8	?
water	24:42	0:0	8	(
water	24:43	0:0	8	1
op	24:45	0:0	8	+
water	24:47	0:0	8	pts
water	24:50	0:0	8	)
water	24:52	0:0	8	:
water	24:54	0:0	8	VLC_TS_INVALID
water	24:68	0:0	8	;
call	25:16	25:59	8	memcpy
arg	25:23	25:38	9	block->p_buffer
water	25:23	0:0	10	block
op	25:28	0:0	10	->
water	25:30	0:0	10	p_buffer
arg	25:40	25:46	9	buffer
water	25:40	0:0	10	buffer
arg	25:48	25:59	9	buffer_size
water	25:48	0:0	10	buffer_size
water	25:60	0:0	8	;
call	26:16	26:71	8	es_out_Control
arg	26:31	26:41	9	demux->out
water	26:31	0:0	10	demux
op	26:36	0:0	10	->
water	26:38	0:0	10	out
arg	26:43	26:57	9	ES_OUT_SET_PCR
water	26:43	0:0	10	ES_OUT_SET_PCR
arg	26:59	26:71	9	block->i_dts
water	26:59	0:0	10	block
op	26:64	0:0	10	->
water	26:66	0:0	10	i_dts
water	26:72	0:0	8	;
call	27:16	27:54	8	es_out_Send
arg	27:28	27:38	9	demux->out
water	27:28	0:0	10	demux
op	27:33	0:0	10	->
water	27:35	0:0	10	out
arg	27:40	27:47	9	sys->es
water	27:40	0:0	10	sys
op	27:43	0:0	10	->
water	27:45	0:0	10	es
arg	27:49	27:54	9	block
water	27:49	0:0	10	block
water	27:55	0:0	8	;
water	28:12	0:0	8	}
water	29:8	0:0	6	}
water	30:8	0:0	4	sys
op	30:11	0:0	4	->
water	30:13	0:0	4	dts
op	30:17	0:0	4	=
water	30:19	0:0	4	dts
water	30:22	0:0	4	;
call	31:8	32:47	4	sys->source.release
arg	31:28	31:44	5	sys->source.data
water	31:28	0:0	6	sys
op	31:31	0:0	6	->
water	31:33	0:0	6	source
op	31:39	0:0	6	.
water	31:40	0:0	6	data
arg	31:46	31:64	5	sys->source.cookie
water	31:46	0:0	6	sys
op	31:49	0:0	6	->
water	31:51	0:0	6	source
op	31:57	0:0	6	.
water	31:58	0:0	6	cookie
arg	32:28	32:39	5	buffer_size
water	32:28	0:0	6	buffer_size
arg	32:41	32:47	5	buffer
water	32:41	0:0	6	buffer
water	32:48	0:0	4	;
water	33:4	0:0	4	}
water	34:4	0:0	2	sys
op	34:7	0:0	2	->
water	34:9	0:0	2	deadline
op	34:18	0:0	2	=
water	34:20	0:0	2	VLC_TS_INVALID
water	34:34	0:0	2	;
return	35:4	35:12	2	1
water	35:11	0:0	3	1

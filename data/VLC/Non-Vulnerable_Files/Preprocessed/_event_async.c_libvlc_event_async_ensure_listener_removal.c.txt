func	1:0	14:0	0	void	libvlc_event_async_ensure_listener_removal
params	2:42	0:0	1	
param	2:43	2:72	2	libvlc_event_manager_t *	p_em
param	2:74	2:108	2	libvlc_event_listener_t *	listener
stmnts	4:4	13:22	1	
if	4:4	4:42	2	(!is_queue_initialized (p_em ))
cond	4:7	4:33	3	!is_queue_initialized (p_em )
op	4:7	0:0	4	!
call	4:8	4:33	4	is_queue_initialized
arg	4:29	4:33	5	p_em
water	4:29	0:0	6	p_em
stmts	4:36	4:42	3	
return	4:36	4:42	4	
call	5:4	5:19	2	queue_lock
arg	5:15	5:19	3	p_em
water	5:15	0:0	4	p_em
water	5:20	0:0	2	;
call	6:4	6:31	2	pop_listener
arg	6:17	6:21	3	p_em
water	6:17	0:0	4	p_em
arg	6:23	6:31	3	listener
water	6:23	0:0	4	listener
water	6:32	0:0	2	;
if	8:4	12:4	2	(!current_thread_is_asynch_thread (p_em ))
cond	8:7	8:44	3	!current_thread_is_asynch_thread (p_em )
op	8:7	0:0	4	!
call	8:8	8:44	4	current_thread_is_asynch_thread
arg	8:40	8:44	5	p_em
water	8:40	0:0	6	p_em
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
while	10:8	11:72	4	(!queue (p_em ) -> is_idle)
cond	10:14	10:28	5	!queue (p_em ) -> is_idle
op	10:14	0:0	6	!
call	10:15	10:25	6	queue
arg	10:21	10:25	7	p_em
water	10:21	0:0	8	p_em
op	10:26	0:0	6	->
water	10:28	0:0	6	is_idle
stmts	11:12	11:72	5	
call	11:12	11:71	6	vlc_cond_wait
arg	11:26	11:51	7	&queue(p_em)->signal_idle
call	11:26	11:37	8	&queue
arg	11:33	11:37	9	p_em
water	11:33	0:0	10	p_em
op	11:38	0:0	8	->
water	11:40	0:0	8	signal_idle
arg	11:53	11:71	7	&queue(p_em)->lock
call	11:53	11:64	8	&queue
arg	11:60	11:64	9	p_em
water	11:60	0:0	10	p_em
op	11:65	0:0	8	->
water	11:67	0:0	8	lock
water	11:72	0:0	6	;
water	12:4	0:0	4	}
call	13:4	13:21	2	queue_unlock
arg	13:17	13:21	3	p_em
water	13:17	0:0	4	p_em
water	13:22	0:0	2	;

func	2:0	25:0	0	static float	Lin2Db
params	2:19	0:0	1	
param	2:21	2:32	2	float	f_lin
param	2:34	2:55	2	filter_sys_t *	p_sys
stmnts	0:0	23:52	1	
decl	4:4	4:79	2	float	f_scale
op	4:18	0:0	2	=
water	4:20	0:0	2	(
water	4:22	0:0	2	f_lin
op	4:28	0:0	2	-
water	4:30	0:0	2	LIN_MIN
water	4:38	0:0	2	)
op	4:40	0:0	2	*
water	4:42	0:0	2	DB_TABLE_SIZE
op	4:56	0:0	2	/
water	4:58	0:0	2	(
water	4:60	0:0	2	LIN_MAX
op	4:68	0:0	2	-
water	4:70	0:0	2	LIN_MIN
water	4:78	0:0	2	)
decl	5:4	5:40	2	int	i_base
op	5:15	0:0	2	=
call	5:17	5:39	3	Round
arg	5:24	5:39	4	f_scale-0.5f
water	5:24	0:0	5	f_scale
op	5:32	0:0	5	-
water	5:34	0:0	5	0
op	5:35	0:0	5	.
water	5:36	0:0	5	5
water	5:37	0:0	5	f
decl	6:4	6:34	2	float	f_ofs
op	6:16	0:0	2	=
water	6:18	0:0	2	f_scale
op	6:26	0:0	2	-
water	6:28	0:0	2	i_base
decl	7:4	7:41	2	float	*pf_db_data
op	7:22	0:0	2	=
water	7:24	0:0	2	p_sys
op	7:29	0:0	2	->
water	7:31	0:0	2	pf_db_data
if	8:4	11:4	2	(i_base < 2)
cond	8:8	8:17	3	i_base < 2
water	8:8	0:0	4	i_base
op	8:15	0:0	4	<
water	8:17	0:0	4	2
stmts	9:4	11:4	3	
water	9:4	0:0	4	{
return	10:8	10:74	4	pf_db_data[2]*f_scale*0.5f-23.0f*(2.0f-f_scale)
water	10:15	0:0	5	pf_db_data
op	10:25	0:0	5	[
water	10:26	0:0	5	2
op	10:27	0:0	5	]
op	10:29	0:0	5	*
water	10:31	0:0	5	f_scale
op	10:39	0:0	5	*
water	10:41	0:0	5	0
op	10:42	0:0	5	.
water	10:43	0:0	5	5
water	10:44	0:0	5	f
op	10:46	0:0	5	-
water	10:48	0:0	5	23
op	10:50	0:0	5	.
water	10:51	0:0	5	0
water	10:52	0:0	5	f
op	10:54	0:0	5	*
water	10:56	0:0	5	(
water	10:58	0:0	5	2
op	10:59	0:0	5	.
water	10:60	0:0	5	0
water	10:61	0:0	5	f
op	10:63	0:0	5	-
water	10:65	0:0	5	f_scale
water	10:73	0:0	5	)
water	11:4	0:0	4	}
else	12:4	15:4	2
stmts	12:9	15:4	3	
if	12:9	15:4	4	(i_base > DB_TABLE_SIZE - 3)
cond	12:13	12:38	5	i_base > DB_TABLE_SIZE - 3
water	12:13	0:0	6	i_base
op	12:20	0:0	6	>
water	12:22	0:0	6	DB_TABLE_SIZE
op	12:36	0:0	6	-
water	12:38	0:0	6	3
stmts	13:4	15:4	5	
water	13:4	0:0	6	{
return	14:8	14:44	6	pf_db_data[DB_TABLE_SIZE-2]
water	14:15	0:0	7	pf_db_data
op	14:25	0:0	7	[
water	14:26	0:0	7	DB_TABLE_SIZE
op	14:40	0:0	7	-
water	14:42	0:0	7	2
op	14:43	0:0	7	]
water	15:4	0:0	6	}
return	17:4	20:54	2	CubeInterp(f_ofs,pf_db_data[i_base-1],pf_db_data[i_base],pf_db_data[i_base+1],pf_db_data[i_base+2])
call	17:11	20:53	3	CubeInterp
arg	17:23	17:28	4	f_ofs
water	17:23	0:0	5	f_ofs
arg	17:30	17:52	4	pf_db_data[i_base-1]
water	17:30	0:0	5	pf_db_data
op	17:40	0:0	5	[
water	17:41	0:0	5	i_base
op	17:48	0:0	5	-
water	17:50	0:0	5	1
op	17:51	0:0	5	]
arg	18:30	18:48	4	pf_db_data[i_base]
water	18:30	0:0	5	pf_db_data
op	18:40	0:0	5	[
water	18:41	0:0	5	i_base
op	18:47	0:0	5	]
arg	19:30	19:52	4	pf_db_data[i_base+1]
water	19:30	0:0	5	pf_db_data
op	19:40	0:0	5	[
water	19:41	0:0	5	i_base
op	19:48	0:0	5	+
water	19:50	0:0	5	1
op	19:51	0:0	5	]
arg	20:30	20:53	4	pf_db_data[i_base+2]
water	20:30	0:0	5	pf_db_data
op	20:40	0:0	5	[
water	20:41	0:0	5	i_base
op	20:48	0:0	5	+
water	20:50	0:0	5	2
op	20:51	0:0	5	]
return	22:4	23:52	2	(1.0f-f_ofs)*pf_db_data[i_base]+f_ofs*pf_db_data[i_base+1]
water	22:11	0:0	3	(
water	22:13	0:0	3	1
op	22:14	0:0	3	.
water	22:15	0:0	3	0
water	22:16	0:0	3	f
op	22:18	0:0	3	-
water	22:20	0:0	3	f_ofs
water	22:26	0:0	3	)
op	22:28	0:0	3	*
water	22:30	0:0	3	pf_db_data
op	22:40	0:0	3	[
water	22:41	0:0	3	i_base
op	22:47	0:0	3	]
op	23:18	0:0	3	+
water	23:20	0:0	3	f_ofs
op	23:28	0:0	3	*
water	23:30	0:0	3	pf_db_data
op	23:40	0:0	3	[
water	23:41	0:0	3	i_base
op	23:48	0:0	3	+
water	23:50	0:0	3	1
op	23:51	0:0	3	]

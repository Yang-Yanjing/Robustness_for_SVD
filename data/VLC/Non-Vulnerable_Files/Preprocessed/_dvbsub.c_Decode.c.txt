func	2:0	57:0	0	static subpicture_t *	Decode
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	56:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:26	2	block_t	*p_block
decl	6:4	6:31	2	subpicture_t	*p_spu
op	6:25	0:0	2	=
water	6:27	0:0	2	NULL
if	7:4	7:67	2	(( pp_block == NULL ) || ( * pp_block == NULL ))
cond	7:8	7:52	3	( pp_block == NULL ) || ( * pp_block == NULL )
water	7:8	0:0	4	(
water	7:10	0:0	4	pp_block
op	7:19	0:0	4	==
water	7:22	0:0	4	NULL
water	7:27	0:0	4	)
op	7:29	0:0	4	||
water	7:32	0:0	4	(
op	7:34	0:0	4	*
water	7:35	0:0	4	pp_block
op	7:44	0:0	4	==
water	7:47	0:0	4	NULL
water	7:52	0:0	4	)
stmts	7:56	7:67	3	
return	7:56	7:67	4	NULL
water	7:63	0:0	5	NULL
water	8:4	0:0	2	p_block
op	8:12	0:0	2	=
op	8:14	0:0	2	*
water	8:15	0:0	2	pp_block
water	8:23	0:0	2	;
op	9:4	0:0	2	*
water	9:5	0:0	2	pp_block
op	9:14	0:0	2	=
water	9:16	0:0	2	NULL
water	9:20	0:0	2	;
if	12:4	13:33	2	(p_sys -> i_pts != p_block -> i_pts)
cond	12:8	12:33	3	p_sys -> i_pts != p_block -> i_pts
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	i_pts
op	12:21	0:0	4	!=
water	12:24	0:0	4	p_block
op	12:31	0:0	4	->
water	12:33	0:0	4	i_pts
stmts	13:8	13:33	3	
call	13:8	13:32	4	default_dds_init
arg	13:26	13:32	5	p_dec
water	13:26	0:0	6	p_dec
water	13:33	0:0	4	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	i_pts
op	14:17	0:0	2	=
water	14:19	0:0	2	p_block
op	14:26	0:0	2	->
water	14:28	0:0	2	i_pts
water	14:33	0:0	2	;
if	15:4	24:4	2	(p_sys -> i_pts <= VLC_TS_INVALID)
cond	15:8	15:24	3	p_sys -> i_pts <= VLC_TS_INVALID
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	i_pts
op	15:21	0:0	4	<=
water	15:24	0:0	4	VLC_TS_INVALID
stmts	16:4	24:4	3	
water	16:4	0:0	4	{
call	20:8	20:46	4	msg_Warn
arg	20:18	20:23	5	p_dec
water	20:18	0:0	6	p_dec
arg	20:25	20:46	5	"non dated subtitle"
water	20:25	0:0	6	"non dated subtitle"
water	20:47	0:0	4	;
call	22:8	22:31	4	block_Release
arg	22:23	22:31	5	p_block
water	22:23	0:0	6	p_block
water	22:32	0:0	4	;
return	23:8	23:19	4	NULL
water	23:15	0:0	5	NULL
water	24:4	0:0	4	}
call	25:4	25:62	2	bs_init
arg	25:13	25:23	3	&p_sys->bs
op	25:13	0:0	4	&
water	25:14	0:0	4	p_sys
op	25:19	0:0	4	->
water	25:21	0:0	4	bs
arg	25:25	25:42	3	p_block->p_buffer
water	25:25	0:0	4	p_block
op	25:32	0:0	4	->
water	25:34	0:0	4	p_buffer
arg	25:44	25:62	3	p_block->i_buffer
water	25:44	0:0	4	p_block
op	25:51	0:0	4	->
water	25:53	0:0	4	i_buffer
water	25:63	0:0	2	;
if	26:4	31:4	2	(bs_read (& p_sys -> bs ,8 ) != 0 x20)
cond	26:8	26:37	3	bs_read (& p_sys -> bs ,8 ) != 0 x20
call	26:8	26:31	4	bs_read
arg	26:17	26:27	5	&p_sys->bs
op	26:17	0:0	6	&
water	26:18	0:0	6	p_sys
op	26:23	0:0	6	->
water	26:25	0:0	6	bs
arg	26:29	26:31	5	8
water	26:29	0:0	6	8
op	26:33	0:0	4	!=
water	26:36	0:0	4	0
water	26:37	0:0	4	x20
stmts	27:4	31:4	3	
water	27:4	0:0	4	{
call	28:8	28:50	4	msg_Dbg
arg	28:17	28:22	5	p_dec
water	28:17	0:0	6	p_dec
arg	28:24	28:50	5	"invalid data identifier"
water	28:24	0:0	6	"invalid data identifier"
water	28:51	0:0	4	;
call	29:8	29:31	4	block_Release
arg	29:23	29:31	5	p_block
water	29:23	0:0	6	p_block
water	29:32	0:0	4	;
return	30:8	30:19	4	NULL
water	30:15	0:0	5	NULL
water	31:4	0:0	4	}
if	32:4	37:4	2	(bs_read (& p_sys -> bs ,8 ))
cond	32:8	32:31	3	bs_read (& p_sys -> bs ,8 )
call	32:8	32:31	4	bs_read
arg	32:17	32:27	5	&p_sys->bs
op	32:17	0:0	6	&
water	32:18	0:0	6	p_sys
op	32:23	0:0	6	->
water	32:25	0:0	6	bs
arg	32:29	32:31	5	8
water	32:29	0:0	6	8
stmts	33:4	37:4	3	
water	33:4	0:0	4	{
call	34:8	34:53	4	msg_Dbg
arg	34:17	34:22	5	p_dec
water	34:17	0:0	6	p_dec
arg	34:24	34:53	5	"invalid subtitle stream id"
water	34:24	0:0	6	"invalid subtitle stream id"
water	34:54	0:0	4	;
call	35:8	35:31	4	block_Release
arg	35:23	35:31	5	p_block
water	35:23	0:0	6	p_block
water	35:32	0:0	4	;
return	36:8	36:19	4	NULL
water	36:15	0:0	5	NULL
water	37:4	0:0	4	}
call	39:4	39:70	2	msg_Dbg
arg	39:13	39:18	3	p_dec
water	39:13	0:0	4	p_dec
arg	39:20	39:55	3	"subtitle packet received: %"PRId64
water	39:20	0:0	4	"subtitle packet received: %"
water	39:49	0:0	4	PRId64
arg	39:57	39:70	3	p_sys->i_pts
water	39:57	0:0	4	p_sys
op	39:62	0:0	4	->
water	39:64	0:0	4	i_pts
water	39:71	0:0	2	;
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	b_page
op	41:18	0:0	2	=
water	41:20	0:0	2	false
water	41:25	0:0	2	;
while	42:4	45:4	2	(bs_show (& p_sys -> bs ,8 ) == 0 x0f)
cond	42:11	42:40	3	bs_show (& p_sys -> bs ,8 ) == 0 x0f
call	42:11	42:34	4	bs_show
arg	42:20	42:30	5	&p_sys->bs
op	42:20	0:0	6	&
water	42:21	0:0	6	p_sys
op	42:26	0:0	6	->
water	42:28	0:0	6	bs
arg	42:32	42:34	5	8
water	42:32	0:0	6	8
op	42:36	0:0	4	==
water	42:39	0:0	4	0
water	42:40	0:0	4	x0f
stmts	43:4	45:4	3	
water	43:4	0:0	4	{
call	44:8	44:42	4	decode_segment
arg	44:24	44:29	5	p_dec
water	44:24	0:0	6	p_dec
arg	44:31	44:42	5	&p_sys->bs
op	44:31	0:0	6	&
water	44:32	0:0	6	p_sys
op	44:37	0:0	6	->
water	44:39	0:0	6	bs
water	44:43	0:0	4	;
water	45:4	0:0	4	}
if	46:4	51:4	2	((bs_read (& p_sys -> bs ,8 ) & 0 x3f ) != 0 x3f)
cond	46:8	46:48	3	(bs_read (& p_sys -> bs ,8 ) & 0 x3f ) != 0 x3f
water	46:8	0:0	4	(
call	46:10	46:33	4	bs_read
arg	46:19	46:29	5	&p_sys->bs
op	46:19	0:0	6	&
water	46:20	0:0	6	p_sys
op	46:25	0:0	6	->
water	46:27	0:0	6	bs
arg	46:31	46:33	5	8
water	46:31	0:0	6	8
op	46:35	0:0	4	&
water	46:37	0:0	4	0
water	46:38	0:0	4	x3f
water	46:42	0:0	4	)
op	46:44	0:0	4	!=
water	46:47	0:0	4	0
water	46:48	0:0	4	x3f
stmts	47:4	51:4	3	
water	47:4	0:0	4	{
call	48:8	48:71	4	msg_Warn
arg	48:18	48:23	5	p_dec
water	48:18	0:0	6	p_dec
arg	48:25	48:71	5	"end marker not found (corrupted subtitle ?)"
water	48:25	0:0	6	"end marker not found (corrupted subtitle ?)"
water	48:72	0:0	4	;
call	49:8	49:31	4	block_Release
arg	49:23	49:31	5	p_block
water	49:23	0:0	6	p_block
water	49:32	0:0	4	;
return	50:8	50:19	4	NULL
water	50:15	0:0	5	NULL
water	51:4	0:0	4	}
if	53:4	54:31	2	(p_sys -> p_page && p_sys -> b_page)
cond	53:8	53:32	3	p_sys -> p_page && p_sys -> b_page
water	53:8	0:0	4	p_sys
op	53:13	0:0	4	->
water	53:15	0:0	4	p_page
op	53:22	0:0	4	&&
water	53:25	0:0	4	p_sys
op	53:30	0:0	4	->
water	53:32	0:0	4	b_page
stmts	54:8	54:31	3	
water	54:8	0:0	4	p_spu
op	54:14	0:0	4	=
call	54:16	54:30	4	render
arg	54:24	54:30	5	p_dec
water	54:24	0:0	6	p_dec
water	54:31	0:0	4	;
call	55:4	55:27	2	block_Release
arg	55:19	55:27	3	p_block
water	55:19	0:0	4	p_block
water	55:28	0:0	2	;
return	56:4	56:16	2	p_spu
water	56:11	0:0	3	p_spu

func	2:0	24:0	0	module_t * *	module_list_get
params	2:27	0:0	1	
param	2:28	2:37	2	size_t *	n
stmnts	0:0	23:14	1	
decl	4:4	4:25	2	module_t	**tab
op	4:19	0:0	2	=
water	4:21	0:0	2	NULL
decl	5:4	5:16	2	size_t	i
op	5:13	0:0	2	=
water	5:15	0:0	2	0
call	6:4	6:21	2	assert
arg	6:12	6:21	3	n!=NULL
water	6:12	0:0	4	n
op	6:14	0:0	4	!=
water	6:17	0:0	4	NULL
water	6:22	0:0	2	;
for	7:4	21:4	2	( module_t * mod = modules . head ;mod;mod = mod -> next)
forinit	0:0	7:37	3	 module_t * mod = modules . head ;
decl	7:9	7:37	4	module_t	*mod
op	7:23	0:0	4	=
water	7:25	0:0	4	modules
op	7:32	0:0	4	.
water	7:33	0:0	4	head
cond	7:39	7:39	3	mod
water	7:39	0:0	4	mod
forexpr	7:44	7:55	3	mod = mod -> next
water	7:44	0:0	4	mod
op	7:48	0:0	4	=
water	7:50	0:0	4	mod
op	7:53	0:0	4	->
water	7:55	0:0	4	next
stmts	8:4	21:4	3	
water	8:4	0:0	4	{
decl	9:9	9:22	4	module_t	**nt
water	10:9	0:0	4	nt
op	10:13	0:0	4	=
call	10:15	10:75	4	realloc
arg	10:24	10:27	5	tab
water	10:24	0:0	6	tab
arg	10:29	10:75	5	(i+1+mod->submodule_count)*sizeof(*tab)
water	10:29	0:0	6	(
water	10:30	0:0	6	i
op	10:32	0:0	6	+
water	10:34	0:0	6	1
op	10:36	0:0	6	+
water	10:38	0:0	6	mod
op	10:41	0:0	6	->
water	10:43	0:0	6	submodule_count
water	10:58	0:0	6	)
op	10:60	0:0	6	*
op	10:62	0:0	6	sizeof
water	10:69	0:0	6	(
op	10:70	0:0	6	*
water	10:71	0:0	6	tab
water	10:74	0:0	6	)
water	10:76	0:0	4	;
if	11:9	16:9	4	(unlikely (nt == NULL ))
cond	11:13	11:32	5	unlikely (nt == NULL )
call	11:13	11:32	6	unlikely
arg	11:22	11:32	7	nt==NULL
water	11:22	0:0	8	nt
op	11:25	0:0	8	==
water	11:28	0:0	8	NULL
stmts	12:9	16:9	5	
water	12:9	0:0	6	{
call	13:13	13:22	6	free
arg	13:19	13:22	7	tab
water	13:19	0:0	8	tab
water	13:23	0:0	6	;
op	14:13	0:0	6	*
water	14:14	0:0	6	n
op	14:16	0:0	6	=
water	14:18	0:0	6	0
water	14:19	0:0	6	;
return	15:13	15:24	6	NULL
water	15:20	0:0	7	NULL
water	16:9	0:0	6	}
water	17:9	0:0	4	tab
op	17:13	0:0	4	=
water	17:15	0:0	4	nt
water	17:17	0:0	4	;
water	18:9	0:0	4	tab
op	18:12	0:0	4	[
water	18:13	0:0	4	i
op	18:14	0:0	4	++
op	18:16	0:0	4	]
op	18:18	0:0	4	=
water	18:20	0:0	4	mod
water	18:23	0:0	4	;
for	19:9	20:28	4	( module_t * subm = mod -> submodule ;subm;subm = subm -> next)
forinit	0:0	19:45	5	 module_t * subm = mod -> submodule ;
decl	19:14	19:45	6	module_t	*subm
op	19:29	0:0	6	=
water	19:31	0:0	6	mod
op	19:34	0:0	6	->
water	19:36	0:0	6	submodule
cond	19:47	19:47	5	subm
water	19:47	0:0	6	subm
forexpr	19:53	19:66	5	subm = subm -> next
water	19:53	0:0	6	subm
op	19:58	0:0	6	=
water	19:60	0:0	6	subm
op	19:64	0:0	6	->
water	19:66	0:0	6	next
stmts	20:13	20:28	5	
water	20:13	0:0	6	tab
op	20:16	0:0	6	[
water	20:17	0:0	6	i
op	20:18	0:0	6	++
op	20:20	0:0	6	]
op	20:22	0:0	6	=
water	20:24	0:0	6	subm
water	20:28	0:0	6	;
water	21:4	0:0	4	}
op	22:4	0:0	2	*
water	22:5	0:0	2	n
op	22:7	0:0	2	=
water	22:9	0:0	2	i
water	22:10	0:0	2	;
return	23:4	23:14	2	tab
water	23:11	0:0	3	tab

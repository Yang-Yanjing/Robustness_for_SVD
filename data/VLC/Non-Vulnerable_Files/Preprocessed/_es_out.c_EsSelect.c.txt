func	2:0	57:0	0	static void	EsSelect
params	2:20	0:0	1	
param	2:22	2:35	2	es_out_t *	out
param	2:37	2:53	2	es_out_id_t *	es
stmnts	0:0	56:89	1	
decl	4:4	4:38	2	es_out_sys_t	*p_sys
op	4:26	0:0	2	=
water	4:28	0:0	2	out
op	4:31	0:0	2	->
water	4:33	0:0	2	p_sys
decl	5:4	5:44	2	input_thread_t	*p_input
op	5:28	0:0	2	=
water	5:30	0:0	2	p_sys
op	5:35	0:0	2	->
water	5:37	0:0	2	p_input
if	6:4	10:4	2	(EsIsSelected (es ))
cond	6:8	6:25	3	EsIsSelected (es )
call	6:8	6:25	4	EsIsSelected
arg	6:22	6:25	5	es
water	6:22	0:0	6	es
stmts	7:4	10:4	3	
water	7:4	0:0	4	{
call	8:8	8:67	4	msg_Warn
arg	8:18	8:25	5	p_input
water	8:18	0:0	6	p_input
arg	8:27	8:56	5	"ES 0x%x is already selected"
water	8:27	0:0	6	"ES 0x%x is already selected"
arg	8:58	8:67	5	es->i_id
water	8:58	0:0	6	es
op	8:60	0:0	6	->
water	8:62	0:0	6	i_id
water	8:68	0:0	4	;
return	9:8	9:14	4	
water	10:4	0:0	4	}
if	11:4	19:4	2	(es -> p_master)
cond	11:8	11:12	3	es -> p_master
water	11:8	0:0	4	es
op	11:10	0:0	4	->
water	11:12	0:0	4	p_master
stmts	12:4	19:4	3	
water	12:4	0:0	4	{
decl	13:8	13:21	4	int	i_channel
if	14:8	15:18	4	(! es -> p_master -> p_dec)
cond	14:12	14:27	5	! es -> p_master -> p_dec
op	14:12	0:0	6	!
water	14:13	0:0	6	es
op	14:15	0:0	6	->
water	14:17	0:0	6	p_master
op	14:25	0:0	6	->
water	14:27	0:0	6	p_dec
stmts	15:12	15:18	5	
return	15:12	15:18	6	
water	16:8	0:0	4	i_channel
op	16:18	0:0	4	=
call	16:20	16:67	4	EsOutGetClosedCaptionsChannel
arg	16:51	16:67	5	es->fmt.i_codec
water	16:51	0:0	6	es
op	16:53	0:0	6	->
water	16:55	0:0	6	fmt
op	16:58	0:0	6	.
water	16:59	0:0	6	i_codec
water	16:68	0:0	4	;
if	17:8	18:18	4	(i_channel == - 1 ||input_DecoderSetCcState (es -> p_master -> p_dec ,true ,i_channel ))
cond	17:12	17:93	5	i_channel == - 1 ||input_DecoderSetCcState (es -> p_master -> p_dec ,true ,i_channel )
water	17:12	0:0	6	i_channel
op	17:22	0:0	6	==
op	17:25	0:0	6	-
water	17:26	0:0	6	1
op	17:28	0:0	6	||
call	17:31	17:93	6	input_DecoderSetCcState
arg	17:56	17:75	7	es->p_master->p_dec
water	17:56	0:0	8	es
op	17:58	0:0	8	->
water	17:60	0:0	8	p_master
op	17:68	0:0	8	->
water	17:70	0:0	8	p_dec
arg	17:77	17:81	7	true
water	17:77	0:0	8	true
arg	17:83	17:93	7	i_channel
water	17:83	0:0	8	i_channel
stmts	18:12	18:18	5	
return	18:12	18:18	6	
water	19:4	0:0	4	}
else	20:4	53:4	2
stmts	21:4	53:4	3	
water	21:4	0:0	4	{
decl	22:8	22:54	4	const bool	b_sout
op	22:26	0:0	4	=
water	22:28	0:0	4	p_input
op	22:35	0:0	4	->
water	22:37	0:0	4	p
op	22:38	0:0	4	->
water	22:40	0:0	4	p_sout
op	22:47	0:0	4	!=
water	22:50	0:0	4	NULL
if	23:8	31:8	4	(es -> fmt . i_cat == VIDEO_ES || es -> fmt . i_cat == SPU_ES)
cond	23:12	23:58	5	es -> fmt . i_cat == VIDEO_ES || es -> fmt . i_cat == SPU_ES
water	23:12	0:0	6	es
op	23:14	0:0	6	->
water	23:16	0:0	6	fmt
op	23:19	0:0	6	.
water	23:20	0:0	6	i_cat
op	23:26	0:0	6	==
water	23:29	0:0	6	VIDEO_ES
op	23:38	0:0	6	||
water	23:41	0:0	6	es
op	23:43	0:0	6	->
water	23:45	0:0	6	fmt
op	23:48	0:0	6	.
water	23:49	0:0	6	i_cat
op	23:55	0:0	6	==
water	23:58	0:0	6	SPU_ES
stmts	24:8	31:8	5	
water	24:8	0:0	6	{
if	25:12	30:12	6	(!var_GetBool (p_input ,b_sout ? "sout-video" : "video" ))
cond	25:16	25:71	7	!var_GetBool (p_input ,b_sout ? "sout-video" : "video" )
op	25:16	0:0	8	!
call	25:17	25:71	8	var_GetBool
arg	25:30	25:37	9	p_input
water	25:30	0:0	10	p_input
arg	25:39	25:71	9	b_sout?"sout-video":"video"
water	25:39	0:0	10	b_sout
water	25:46	0:0	10	?
water	25:48	0:0	10	"sout-video"
water	25:61	0:0	10	:
water	25:63	0:0	10	"video"
stmts	26:12	30:12	7	
water	26:12	0:0	8	{
call	27:16	28:34	8	msg_Dbg
arg	27:25	27:32	9	p_input
water	27:25	0:0	10	p_input
arg	27:34	27:76	9	"video is disabled, not selecting ES 0x%x"
water	27:34	0:0	10	"video is disabled, not selecting ES 0x%x"
arg	28:25	28:34	9	es->i_id
water	28:25	0:0	10	es
op	28:27	0:0	10	->
water	28:29	0:0	10	i_id
water	28:35	0:0	8	;
return	29:16	29:22	8	
water	30:12	0:0	8	}
water	31:8	0:0	6	}
else	32:8	40:8	4
stmts	32:13	40:8	5	
if	32:13	40:8	6	(es -> fmt . i_cat == AUDIO_ES)
cond	32:17	32:34	7	es -> fmt . i_cat == AUDIO_ES
water	32:17	0:0	8	es
op	32:19	0:0	8	->
water	32:21	0:0	8	fmt
op	32:24	0:0	8	.
water	32:25	0:0	8	i_cat
op	32:31	0:0	8	==
water	32:34	0:0	8	AUDIO_ES
stmts	33:8	40:8	7	
water	33:8	0:0	8	{
if	34:12	39:12	8	(!var_GetBool (p_input ,b_sout ? "sout-audio" : "audio" ))
cond	34:16	34:71	9	!var_GetBool (p_input ,b_sout ? "sout-audio" : "audio" )
op	34:16	0:0	10	!
call	34:17	34:71	10	var_GetBool
arg	34:30	34:37	11	p_input
water	34:30	0:0	12	p_input
arg	34:39	34:71	11	b_sout?"sout-audio":"audio"
water	34:39	0:0	12	b_sout
water	34:46	0:0	12	?
water	34:48	0:0	12	"sout-audio"
water	34:61	0:0	12	:
water	34:63	0:0	12	"audio"
stmts	35:12	39:12	9	
water	35:12	0:0	10	{
call	36:16	37:34	10	msg_Dbg
arg	36:25	36:32	11	p_input
water	36:25	0:0	12	p_input
arg	36:34	36:76	11	"audio is disabled, not selecting ES 0x%x"
water	36:34	0:0	12	"audio is disabled, not selecting ES 0x%x"
arg	37:25	37:34	11	es->i_id
water	37:25	0:0	12	es
op	37:27	0:0	12	->
water	37:29	0:0	12	i_id
water	37:35	0:0	10	;
return	38:16	38:22	10	
water	39:12	0:0	10	}
water	40:8	0:0	8	}
if	41:8	49:8	4	(es -> fmt . i_cat == SPU_ES)
cond	41:12	41:29	5	es -> fmt . i_cat == SPU_ES
water	41:12	0:0	6	es
op	41:14	0:0	6	->
water	41:16	0:0	6	fmt
op	41:19	0:0	6	.
water	41:20	0:0	6	i_cat
op	41:26	0:0	6	==
water	41:29	0:0	6	SPU_ES
stmts	42:8	49:8	5	
water	42:8	0:0	6	{
if	43:12	48:12	6	(!var_GetBool (p_input ,b_sout ? "sout-spu" : "spu" ))
cond	43:16	43:67	7	!var_GetBool (p_input ,b_sout ? "sout-spu" : "spu" )
op	43:16	0:0	8	!
call	43:17	43:67	8	var_GetBool
arg	43:30	43:37	9	p_input
water	43:30	0:0	10	p_input
arg	43:39	43:67	9	b_sout?"sout-spu":"spu"
water	43:39	0:0	10	b_sout
water	43:46	0:0	10	?
water	43:48	0:0	10	"sout-spu"
water	43:59	0:0	10	:
water	43:61	0:0	10	"spu"
stmts	44:12	48:12	7	
water	44:12	0:0	8	{
call	45:16	46:34	8	msg_Dbg
arg	45:25	45:32	9	p_input
water	45:25	0:0	10	p_input
arg	45:34	45:74	9	"spu is disabled, not selecting ES 0x%x"
water	45:34	0:0	10	"spu is disabled, not selecting ES 0x%x"
arg	46:25	46:34	9	es->i_id
water	46:25	0:0	10	es
op	46:27	0:0	10	->
water	46:29	0:0	10	i_id
water	46:35	0:0	8	;
return	47:16	47:22	8	
water	48:12	0:0	8	}
water	49:8	0:0	6	}
call	50:8	50:33	4	EsCreateDecoder
arg	50:25	50:28	5	out
water	50:25	0:0	6	out
arg	50:30	50:33	5	es
water	50:30	0:0	6	es
water	50:34	0:0	4	;
if	51:8	52:18	4	(es -> p_dec == NULL || es -> p_pgrm != p_sys -> p_pgrm)
cond	51:12	51:54	5	es -> p_dec == NULL || es -> p_pgrm != p_sys -> p_pgrm
water	51:12	0:0	6	es
op	51:14	0:0	6	->
water	51:16	0:0	6	p_dec
op	51:22	0:0	6	==
water	51:25	0:0	6	NULL
op	51:30	0:0	6	||
water	51:33	0:0	6	es
op	51:35	0:0	6	->
water	51:37	0:0	6	p_pgrm
op	51:44	0:0	6	!=
water	51:47	0:0	6	p_sys
op	51:52	0:0	6	->
water	51:54	0:0	6	p_pgrm
stmts	52:12	52:18	5	
return	52:12	52:18	6	
water	53:4	0:0	4	}
call	55:4	55:62	2	input_SendEventEsSelect
arg	55:29	55:36	3	p_input
water	55:29	0:0	4	p_input
arg	55:38	55:51	3	es->fmt.i_cat
water	55:38	0:0	4	es
op	55:40	0:0	4	->
water	55:42	0:0	4	fmt
op	55:45	0:0	4	.
water	55:46	0:0	4	i_cat
arg	55:53	55:62	3	es->i_id
water	55:53	0:0	4	es
op	55:55	0:0	4	->
water	55:57	0:0	4	i_id
water	55:63	0:0	2	;
call	56:4	56:88	2	input_SendEventTeletextSelect
arg	56:35	56:42	3	p_input
water	56:35	0:0	4	p_input
arg	56:44	56:88	3	EsFmtIsTeletext(&es->fmt)?es->i_id:-1
call	56:44	56:70	4	EsFmtIsTeletext
arg	56:61	56:70	5	&es->fmt
op	56:61	0:0	6	&
water	56:62	0:0	6	es
op	56:64	0:0	6	->
water	56:66	0:0	6	fmt
water	56:72	0:0	4	?
water	56:74	0:0	4	es
op	56:76	0:0	4	->
water	56:78	0:0	4	i_id
water	56:83	0:0	4	:
op	56:85	0:0	4	-
water	56:86	0:0	4	1
water	56:89	0:0	2	;

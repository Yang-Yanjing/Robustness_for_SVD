func	2:0	74:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	73:22	1	
decl	4:4	4:44	2	demux_t	*p_demux
op	4:26	0:0	2	=
water	4:28	0:0	2	(
water	4:29	0:0	2	demux_t
op	4:36	0:0	2	*
water	4:37	0:0	2	)
water	4:38	0:0	2	p_this
decl	5:4	5:23	2	demux_sys_t	*p_sys
decl	6:4	6:26	2	char	*psz_file
decl	7:4	7:28	2	ifo_handle_t	*p_vmg_file
if	8:4	14:4	2	(! p_demux -> psz_file || ! * p_demux -> psz_file)
cond	8:8	8:41	3	! p_demux -> psz_file || ! * p_demux -> psz_file
op	8:8	0:0	4	!
water	8:9	0:0	4	p_demux
op	8:16	0:0	4	->
water	8:18	0:0	4	psz_file
op	8:27	0:0	4	||
op	8:30	0:0	4	!
op	8:31	0:0	4	*
water	8:32	0:0	4	p_demux
op	8:39	0:0	4	->
water	8:41	0:0	4	psz_file
stmts	9:4	14:4	3	
water	9:4	0:0	4	{
if	11:8	12:31	4	(! p_demux -> psz_access || ! * p_demux -> psz_access)
cond	11:12	11:47	5	! p_demux -> psz_access || ! * p_demux -> psz_access
op	11:12	0:0	6	!
water	11:13	0:0	6	p_demux
op	11:20	0:0	6	->
water	11:22	0:0	6	psz_access
op	11:33	0:0	6	||
op	11:36	0:0	6	!
op	11:37	0:0	6	*
water	11:38	0:0	6	p_demux
op	11:45	0:0	6	->
water	11:47	0:0	6	psz_access
stmts	12:12	12:31	5	
return	12:12	12:31	6	VLC_EGENERIC
water	12:19	0:0	7	VLC_EGENERIC
water	13:8	0:0	4	psz_file
op	13:17	0:0	4	=
call	13:19	13:52	4	var_InheritString
arg	13:38	13:44	5	p_this
water	13:38	0:0	6	p_this
arg	13:46	13:52	5	"dvd"
water	13:46	0:0	6	"dvd"
water	13:53	0:0	4	;
water	14:4	0:0	4	}
else	15:4	16:46	2
stmts	16:8	16:46	3	
water	16:8	0:0	4	psz_file
op	16:17	0:0	4	=
call	16:19	16:45	4	strdup
arg	16:27	16:45	5	p_demux->psz_file
water	16:27	0:0	6	p_demux
op	16:34	0:0	6	->
water	16:36	0:0	6	psz_file
water	16:46	0:0	4	;
if	18:4	23:4	2	(psz_file != NULL)
cond	18:8	18:20	3	psz_file != NULL
water	18:8	0:0	4	psz_file
op	18:17	0:0	4	!=
water	18:20	0:0	4	NULL
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
decl	20:8	20:40	4	size_t	flen
op	20:20	0:0	4	=
call	20:22	20:39	5	strlen
arg	20:30	20:39	6	psz_file
water	20:30	0:0	7	psz_file
if	21:8	22:37	4	(flen > 0 && psz_file [ flen - 1 ] == '\\')
cond	21:12	21:46	5	flen > 0 && psz_file [ flen - 1 ] == '\\'
water	21:12	0:0	6	flen
op	21:17	0:0	6	>
water	21:19	0:0	6	0
op	21:21	0:0	6	&&
water	21:24	0:0	6	psz_file
op	21:32	0:0	6	[
water	21:33	0:0	6	flen
op	21:38	0:0	6	-
water	21:40	0:0	6	1
op	21:41	0:0	6	]
op	21:43	0:0	6	==
water	21:46	0:0	6	'\\'
stmts	22:12	22:37	5	
water	22:12	0:0	6	psz_file
op	22:20	0:0	6	[
water	22:21	0:0	6	flen
op	22:26	0:0	6	-
water	22:28	0:0	6	1
op	22:29	0:0	6	]
op	22:31	0:0	6	=
water	22:33	0:0	6	'\0'
water	22:37	0:0	6	;
water	23:4	0:0	4	}
else	24:4	25:29	2
stmts	25:8	25:29	3	
water	25:8	0:0	4	psz_file
op	25:17	0:0	4	=
call	25:19	25:28	4	strdup
arg	25:26	25:28	5	""
water	25:26	0:0	6	""
water	25:29	0:0	4	;
if	27:4	28:27	2	(unlikely (psz_file == NULL ))
cond	27:8	27:33	3	unlikely (psz_file == NULL )
call	27:8	27:33	4	unlikely
arg	27:17	27:33	5	psz_file==NULL
water	27:17	0:0	6	psz_file
op	27:26	0:0	6	==
water	27:29	0:0	6	NULL
stmts	28:8	28:27	3	
return	28:8	28:27	4	VLC_EGENERIC
water	28:15	0:0	5	VLC_EGENERIC
decl	30:4	30:47	2	const char	*psz_path
op	30:25	0:0	2	=
call	30:27	30:46	3	ToLocale
arg	30:37	30:46	4	psz_file
water	30:37	0:0	5	psz_file
decl	31:4	31:49	2	dvd_reader_t	*p_dvdread
op	31:28	0:0	2	=
call	31:30	31:48	3	DVDOpen
arg	31:39	31:48	4	psz_path
water	31:39	0:0	5	psz_path
call	32:4	32:25	2	LocaleFree
arg	32:16	32:25	3	psz_path
water	32:16	0:0	4	psz_path
water	32:26	0:0	2	;
if	33:4	40:4	2	(p_dvdread == NULL)
cond	33:8	33:21	3	p_dvdread == NULL
water	33:8	0:0	4	p_dvdread
op	33:18	0:0	4	==
water	33:21	0:0	4	NULL
stmts	34:4	40:4	3	
water	34:4	0:0	4	{
call	35:8	35:69	4	msg_Err
arg	35:17	35:24	5	p_demux
water	35:17	0:0	6	p_demux
arg	35:26	35:58	5	"DVDRead cannot open source: %s"
water	35:26	0:0	6	"DVDRead cannot open source: %s"
arg	35:60	35:69	5	psz_file
water	35:60	0:0	6	psz_file
water	35:70	0:0	4	;
call	36:8	37:77	4	dialog_Fatal
arg	36:22	36:29	5	p_demux
water	36:22	0:0	6	p_demux
arg	36:31	36:52	5	_("Playback failure")
call	36:31	36:51	6	_
arg	36:33	36:51	7	"Playback failure"
water	36:33	0:0	8	"Playback failure"
arg	37:22	37:66	5	_("DVDRead could not open the disc \"%s\".")
call	37:22	37:65	6	_
arg	37:24	37:65	7	"DVDRead could not open the disc \"%s\"."
water	37:24	0:0	8	"DVDRead could not open the disc \"%s\"."
arg	37:68	37:77	5	psz_file
water	37:68	0:0	6	psz_file
water	37:78	0:0	4	;
call	38:8	38:23	4	free
arg	38:14	38:23	5	psz_file
water	38:14	0:0	6	psz_file
water	38:24	0:0	4	;
return	39:8	39:27	4	VLC_EGENERIC
water	39:15	0:0	5	VLC_EGENERIC
water	40:4	0:0	4	}
call	41:4	41:19	2	free
arg	41:10	41:19	3	psz_file
water	41:10	0:0	4	psz_file
water	41:20	0:0	2	;
if	43:4	47:4	2	(! ( p_vmg_file =ifoOpen (p_dvdread ,0 ) ))
cond	43:8	43:48	3	! ( p_vmg_file =ifoOpen (p_dvdread ,0 ) )
op	43:8	0:0	4	!
water	43:9	0:0	4	(
water	43:11	0:0	4	p_vmg_file
op	43:22	0:0	4	=
call	43:24	43:46	4	ifoOpen
arg	43:33	43:42	5	p_dvdread
water	43:33	0:0	6	p_dvdread
arg	43:44	43:46	5	0
water	43:44	0:0	6	0
water	43:48	0:0	4	)
stmts	44:4	47:4	3	
water	44:4	0:0	4	{
call	45:8	45:50	4	msg_Warn
arg	45:18	45:25	5	p_demux
water	45:18	0:0	6	p_demux
arg	45:27	45:50	5	"cannot open VMG info"
water	45:27	0:0	6	"cannot open VMG info"
water	45:51	0:0	4	;
return	46:8	46:27	4	VLC_EGENERIC
water	46:15	0:0	5	VLC_EGENERIC
water	47:4	0:0	4	}
call	48:4	48:35	2	msg_Dbg
arg	48:13	48:20	3	p_demux
water	48:13	0:0	4	p_demux
arg	48:22	48:35	3	"VMG opened"
water	48:22	0:0	4	"VMG opened"
water	48:36	0:0	2	;
call	50:4	50:22	2	DEMUX_INIT_COMMON
water	50:23	0:0	2	;
water	50:25	0:0	2	p_sys
op	50:31	0:0	2	=
water	50:33	0:0	2	p_demux
op	50:40	0:0	2	->
water	50:42	0:0	2	p_sys
water	50:47	0:0	2	;
call	51:4	51:29	2	ps_track_init
arg	51:19	51:29	3	p_sys->tk
water	51:19	0:0	4	p_sys
op	51:24	0:0	4	->
water	51:26	0:0	4	tk
water	51:30	0:0	2	;
water	52:4	0:0	2	p_sys
op	52:9	0:0	2	->
water	52:11	0:0	2	i_sar_num
op	52:21	0:0	2	=
water	52:23	0:0	2	0
water	52:24	0:0	2	;
water	53:4	0:0	2	p_sys
op	53:9	0:0	2	->
water	53:11	0:0	2	i_sar_den
op	53:21	0:0	2	=
water	53:23	0:0	2	0
water	53:24	0:0	2	;
water	54:4	0:0	2	p_sys
op	54:9	0:0	2	->
water	54:11	0:0	2	i_title_cur_time
op	54:28	0:0	2	=
water	54:30	0:0	2	(
water	54:31	0:0	2	mtime_t
water	54:38	0:0	2	)
water	54:40	0:0	2	0
water	54:41	0:0	2	;
water	55:4	0:0	2	p_sys
op	55:9	0:0	2	->
water	55:11	0:0	2	i_cell_cur_time
op	55:27	0:0	2	=
water	55:29	0:0	2	(
water	55:30	0:0	2	mtime_t
water	55:37	0:0	2	)
water	55:39	0:0	2	0
water	55:40	0:0	2	;
water	56:4	0:0	2	p_sys
op	56:9	0:0	2	->
water	56:11	0:0	2	i_cell_duration
op	56:27	0:0	2	=
water	56:29	0:0	2	(
water	56:30	0:0	2	mtime_t
water	56:37	0:0	2	)
water	56:39	0:0	2	0
water	56:40	0:0	2	;
water	57:4	0:0	2	p_sys
op	57:9	0:0	2	->
water	57:11	0:0	2	p_dvdread
op	57:21	0:0	2	=
water	57:23	0:0	2	p_dvdread
water	57:32	0:0	2	;
water	58:4	0:0	2	p_sys
op	58:9	0:0	2	->
water	58:11	0:0	2	p_vmg_file
op	58:22	0:0	2	=
water	58:24	0:0	2	p_vmg_file
water	58:34	0:0	2	;
water	59:4	0:0	2	p_sys
op	59:9	0:0	2	->
water	59:11	0:0	2	p_title
op	59:19	0:0	2	=
water	59:21	0:0	2	NULL
water	59:25	0:0	2	;
water	60:4	0:0	2	p_sys
op	60:9	0:0	2	->
water	60:11	0:0	2	p_vts_file
op	60:22	0:0	2	=
water	60:24	0:0	2	NULL
water	60:28	0:0	2	;
water	61:4	0:0	2	p_sys
op	61:9	0:0	2	->
water	61:11	0:0	2	i_title
op	61:19	0:0	2	=
water	61:21	0:0	2	p_sys
op	61:26	0:0	2	->
water	61:28	0:0	2	i_chapter
op	61:38	0:0	2	=
op	61:40	0:0	2	-
water	61:41	0:0	2	1
water	61:42	0:0	2	;
water	62:4	0:0	2	p_sys
op	62:9	0:0	2	->
water	62:11	0:0	2	i_mux_rate
op	62:22	0:0	2	=
water	62:24	0:0	2	0
water	62:25	0:0	2	;
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	i_angle
op	63:19	0:0	2	=
call	63:21	63:68	2	var_CreateGetInteger
arg	63:43	63:50	3	p_demux
water	63:43	0:0	4	p_demux
arg	63:52	63:68	3	"dvdread-angle"
water	63:52	0:0	4	"dvdread-angle"
water	63:69	0:0	2	;
if	64:4	64:48	2	(p_sys -> i_angle <= 0)
cond	64:8	64:26	3	p_sys -> i_angle <= 0
water	64:8	0:0	4	p_sys
op	64:13	0:0	4	->
water	64:15	0:0	4	i_angle
op	64:23	0:0	4	<=
water	64:26	0:0	4	0
stmts	64:30	64:48	3	
water	64:30	0:0	4	p_sys
op	64:35	0:0	4	->
water	64:37	0:0	4	i_angle
op	64:45	0:0	4	=
water	64:47	0:0	4	1
water	64:48	0:0	4	;
call	65:4	65:42	2	DemuxTitles
arg	65:17	65:24	3	p_demux
water	65:17	0:0	4	p_demux
arg	65:26	65:42	3	&p_sys->i_angle
op	65:26	0:0	4	&
water	65:27	0:0	4	p_sys
op	65:32	0:0	4	->
water	65:34	0:0	4	i_angle
water	65:43	0:0	2	;
if	66:4	72:4	2	(DvdReadSetArea (p_demux ,0 ,0 ,p_sys -> i_angle ) != VLC_SUCCESS)
cond	66:8	66:59	3	DvdReadSetArea (p_demux ,0 ,0 ,p_sys -> i_angle ) != VLC_SUCCESS
call	66:8	66:54	4	DvdReadSetArea
arg	66:24	66:31	5	p_demux
water	66:24	0:0	6	p_demux
arg	66:33	66:34	5	0
water	66:33	0:0	6	0
arg	66:36	66:37	5	0
water	66:36	0:0	6	0
arg	66:39	66:54	5	p_sys->i_angle
water	66:39	0:0	6	p_sys
op	66:44	0:0	6	->
water	66:46	0:0	6	i_angle
op	66:56	0:0	4	!=
water	66:59	0:0	4	VLC_SUCCESS
stmts	67:4	72:4	3	
water	67:4	0:0	4	{
call	68:8	69:32	4	msg_Err
arg	68:17	68:24	5	p_demux
water	68:17	0:0	6	p_demux
arg	68:26	68:78	5	"DvdReadSetArea(0,0,%i) failed (can't decrypt DVD?)"
water	68:26	0:0	6	"DvdReadSetArea(0,0,%i) failed (can't decrypt DVD?)"
arg	69:17	69:32	5	p_sys->i_angle
water	69:17	0:0	6	p_sys
op	69:22	0:0	6	->
water	69:24	0:0	6	i_angle
water	69:33	0:0	4	;
call	70:8	70:22	4	Close
arg	70:15	70:22	5	p_this
water	70:15	0:0	6	p_this
water	70:23	0:0	4	;
return	71:8	71:27	4	VLC_EGENERIC
water	71:15	0:0	5	VLC_EGENERIC
water	72:4	0:0	4	}
return	73:4	73:22	2	VLC_SUCCESS
water	73:11	0:0	3	VLC_SUCCESS

func	2:0	40:0	0	static int	srtcp_crypt
params	2:23	0:0	1	
param	2:24	2:41	2	srtp_session_t *	s
param	2:43	2:55	2	uint8_t *	buf
param	2:57	2:67	2	size_t	len
stmnts	4:4	39:12	1	
call	4:4	4:21	2	assert
arg	4:12	4:21	3	s!=NULL
water	4:12	0:0	4	s
op	4:14	0:0	4	!=
water	4:17	0:0	4	NULL
water	4:22	0:0	2	;
if	6:4	7:21	2	(( len < 12 ) || ( ( buf [ 0 ] >> 6 ) != 2 ))
cond	6:8	6:41	3	( len < 12 ) || ( ( buf [ 0 ] >> 6 ) != 2 )
water	6:8	0:0	4	(
water	6:9	0:0	4	len
op	6:13	0:0	4	<
water	6:15	0:0	4	12
water	6:17	0:0	4	)
op	6:19	0:0	4	||
water	6:22	0:0	4	(
water	6:23	0:0	4	(
water	6:24	0:0	4	buf
op	6:27	0:0	4	[
water	6:28	0:0	4	0
op	6:29	0:0	4	]
op	6:31	0:0	4	>>
water	6:34	0:0	4	6
water	6:35	0:0	4	)
op	6:37	0:0	4	!=
water	6:40	0:0	4	2
water	6:41	0:0	4	)
stmts	7:8	7:21	3	
return	7:8	7:21	4	EINVAL
water	7:15	0:0	5	EINVAL
decl	8:4	8:18	2	uint32_t	index
call	9:4	9:32	2	memcpy
arg	9:12	9:18	3	&index
op	9:12	0:0	4	&
water	9:13	0:0	4	index
arg	9:20	9:29	3	buf+len
water	9:20	0:0	4	buf
op	9:24	0:0	4	+
water	9:26	0:0	4	len
arg	9:31	9:32	3	4
water	9:31	0:0	4	4
water	9:33	0:0	2	;
water	10:4	0:0	2	index
op	10:10	0:0	2	=
call	10:12	10:24	2	ntohl
arg	10:19	10:24	3	index
water	10:19	0:0	4	index
water	10:25	0:0	2	;
if	11:4	12:21	2	(( ( index >> 31 ) != 0 ) != ( ( s -> flags & SRTCP_UNENCRYPTED ) == 0 ))
cond	11:8	11:68	3	( ( index >> 31 ) != 0 ) != ( ( s -> flags & SRTCP_UNENCRYPTED ) == 0 )
water	11:8	0:0	4	(
water	11:9	0:0	4	(
water	11:10	0:0	4	index
op	11:16	0:0	4	>>
water	11:19	0:0	4	31
water	11:21	0:0	4	)
op	11:23	0:0	4	!=
water	11:26	0:0	4	0
water	11:27	0:0	4	)
op	11:29	0:0	4	!=
water	11:32	0:0	4	(
water	11:33	0:0	4	(
water	11:34	0:0	4	s
op	11:35	0:0	4	->
water	11:37	0:0	4	flags
op	11:43	0:0	4	&
water	11:45	0:0	4	SRTCP_UNENCRYPTED
water	11:62	0:0	4	)
op	11:64	0:0	4	==
water	11:67	0:0	4	0
water	11:68	0:0	4	)
stmts	12:8	12:21	3	
return	12:8	12:21	4	EINVAL
water	12:15	0:0	5	EINVAL
water	13:4	0:0	2	index
op	13:10	0:0	2	&=
op	13:13	0:0	2	~
water	13:14	0:0	2	(
water	13:15	0:0	2	1
op	13:17	0:0	2	<<
water	13:20	0:0	2	31
water	13:22	0:0	2	)
water	13:23	0:0	2	;
decl	15:4	15:40	2	int32_t	diff
op	15:17	0:0	2	=
water	15:19	0:0	2	index
op	15:25	0:0	2	-
water	15:27	0:0	2	s
op	15:28	0:0	2	->
water	15:30	0:0	2	rtcp_index
if	16:4	22:4	2	(diff > 0)
cond	16:8	16:15	3	diff > 0
water	16:8	0:0	4	diff
op	16:13	0:0	4	>
water	16:15	0:0	4	0
stmts	17:4	22:4	3	
water	17:4	0:0	4	{
water	19:8	0:0	4	s
op	19:9	0:0	4	->
water	19:11	0:0	4	rtcp
op	19:15	0:0	4	.
water	19:16	0:0	4	window
op	19:23	0:0	4	=
water	19:25	0:0	4	s
op	19:26	0:0	4	->
water	19:28	0:0	4	rtcp
op	19:32	0:0	4	.
water	19:33	0:0	4	window
op	19:40	0:0	4	<<
water	19:43	0:0	4	diff
water	19:47	0:0	4	;
water	20:8	0:0	4	s
op	20:9	0:0	4	->
water	20:11	0:0	4	rtcp
op	20:15	0:0	4	.
water	20:16	0:0	4	window
op	20:23	0:0	4	|=
call	20:26	20:36	4	UINT64_C
arg	20:35	20:36	5	1
water	20:35	0:0	6	1
water	20:37	0:0	4	;
water	21:8	0:0	4	s
op	21:9	0:0	4	->
water	21:11	0:0	4	rtcp_index
op	21:22	0:0	4	=
water	21:24	0:0	4	index
water	21:29	0:0	4	;
water	22:4	0:0	4	}
else	23:4	30:4	2
stmts	24:4	30:4	3	
water	24:4	0:0	4	{
water	26:8	0:0	4	diff
op	26:13	0:0	4	=
op	26:15	0:0	4	-
water	26:16	0:0	4	diff
water	26:20	0:0	4	;
if	27:8	28:25	4	(( diff >= 64 ) || ( ( s -> rtcp . window >> diff ) & 1 ))
cond	27:12	27:57	5	( diff >= 64 ) || ( ( s -> rtcp . window >> diff ) & 1 )
water	27:12	0:0	6	(
water	27:13	0:0	6	diff
op	27:18	0:0	6	>=
water	27:21	0:0	6	64
water	27:23	0:0	6	)
op	27:25	0:0	6	||
water	27:28	0:0	6	(
water	27:29	0:0	6	(
water	27:30	0:0	6	s
op	27:31	0:0	6	->
water	27:33	0:0	6	rtcp
op	27:37	0:0	6	.
water	27:38	0:0	6	window
op	27:45	0:0	6	>>
water	27:48	0:0	6	diff
water	27:52	0:0	6	)
op	27:54	0:0	6	&
water	27:56	0:0	6	1
water	27:57	0:0	6	)
stmts	28:12	28:25	5	
return	28:12	28:25	6	EACCES
water	28:19	0:0	7	EACCES
water	29:8	0:0	4	s
op	29:9	0:0	4	->
water	29:11	0:0	4	rtp
op	29:14	0:0	4	.
water	29:15	0:0	4	window
op	29:22	0:0	4	|=
call	29:25	29:35	4	UINT64_C
arg	29:34	29:35	5	1
water	29:34	0:0	6	1
op	29:37	0:0	4	<<
water	29:40	0:0	4	diff
water	29:44	0:0	4	;
water	30:4	0:0	4	}
if	32:4	33:16	2	(s -> flags & SRTCP_UNENCRYPTED)
cond	32:8	32:19	3	s -> flags & SRTCP_UNENCRYPTED
water	32:8	0:0	4	s
op	32:9	0:0	4	->
water	32:11	0:0	4	flags
op	32:17	0:0	4	&
water	32:19	0:0	4	SRTCP_UNENCRYPTED
stmts	33:8	33:16	3	
return	33:8	33:16	4	0
water	33:15	0:0	5	0
decl	34:4	34:17	2	uint32_t	ssrc
call	35:4	35:29	2	memcpy
arg	35:12	35:17	3	&ssrc
op	35:12	0:0	4	&
water	35:13	0:0	4	ssrc
arg	35:19	35:26	3	buf+4
water	35:19	0:0	4	buf
op	35:23	0:0	4	+
water	35:25	0:0	4	4
arg	35:28	35:29	3	4
water	35:28	0:0	4	4
water	35:30	0:0	2	;
if	36:4	38:21	2	(rtcp_crypt (s -> rtcp . cipher ,ssrc ,index ,s -> rtp . salt ,buf + 8 ,len - 8 ))
cond	36:8	37:36	3	rtcp_crypt (s -> rtcp . cipher ,ssrc ,index ,s -> rtp . salt ,buf + 8 ,len - 8 )
call	36:8	37:36	4	rtcp_crypt
arg	36:20	36:34	5	s->rtcp.cipher
water	36:20	0:0	6	s
op	36:21	0:0	6	->
water	36:23	0:0	6	rtcp
op	36:27	0:0	6	.
water	36:28	0:0	6	cipher
arg	36:36	36:40	5	ssrc
water	36:36	0:0	6	ssrc
arg	36:42	36:47	5	index
water	36:42	0:0	6	index
arg	36:49	36:60	5	s->rtp.salt
water	36:49	0:0	6	s
op	36:50	0:0	6	->
water	36:52	0:0	6	rtp
op	36:55	0:0	6	.
water	36:56	0:0	6	salt
arg	37:20	37:27	5	buf+8
water	37:20	0:0	6	buf
op	37:24	0:0	6	+
water	37:26	0:0	6	8
arg	37:29	37:36	5	len-8
water	37:29	0:0	6	len
op	37:33	0:0	6	-
water	37:35	0:0	6	8
stmts	38:8	38:21	3	
return	38:8	38:21	4	EINVAL
water	38:15	0:0	5	EINVAL
return	39:4	39:12	2	0
water	39:11	0:0	3	0

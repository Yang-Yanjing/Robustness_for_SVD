func	2:0	49:0	0	static sout_stream_id_sys_t *	Add
params	2:32	0:0	1	
param	2:34	2:57	2	sout_stream_t *	p_stream
param	2:59	2:78	2	es_format_t *	p_fmt
stmnts	0:0	48:15	1	
decl	4:4	4:46	2	sout_stream_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	p_stream
op	4:39	0:0	2	->
water	4:41	0:0	2	p_sys
decl	5:4	5:35	2	sout_stream_id_sys_t	*id
op	5:29	0:0	2	=
water	5:31	0:0	2	NULL
water	6:4	0:0	2	id
op	6:7	0:0	2	=
call	6:9	6:34	2	calloc
arg	6:17	6:18	3	1
water	6:17	0:0	4	1
arg	6:20	6:34	3	sizeof(*id)
op	6:20	0:0	4	sizeof
water	6:26	0:0	4	(
op	6:28	0:0	4	*
water	6:29	0:0	4	id
water	6:32	0:0	4	)
water	6:35	0:0	2	;
if	7:4	8:18	2	(id == NULL)
cond	7:9	7:15	3	id == NULL
water	7:9	0:0	4	id
op	7:12	0:0	4	==
water	7:15	0:0	4	NULL
stmts	8:8	8:18	3	
goto	8:8	8:18	4	error
water	8:13	0:0	5	error
call	9:4	9:36	2	es_format_Copy
arg	9:20	9:28	3	&id->fmt
op	9:20	0:0	4	&
water	9:21	0:0	4	id
op	9:23	0:0	4	->
water	9:25	0:0	4	fmt
arg	9:30	9:36	3	p_fmt
water	9:30	0:0	4	p_fmt
water	9:37	0:0	2	;
switch	10:4	44:4	2	(id -> fmt . i_cat)
cond	10:13	10:21	3	id -> fmt . i_cat
water	10:13	0:0	4	id
op	10:15	0:0	4	->
water	10:17	0:0	4	fmt
op	10:20	0:0	4	.
water	10:21	0:0	4	i_cat
stmts	11:4	44:4	3	
water	11:4	0:0	4	{
label	12:4	12:17	4	case AUDIO_ES :
if	13:8	31:8	4	(id -> fmt . i_codec == VLC_CODEC_ALAC)
cond	13:13	13:32	5	id -> fmt . i_codec == VLC_CODEC_ALAC
water	13:13	0:0	6	id
op	13:15	0:0	6	->
water	13:17	0:0	6	fmt
op	13:20	0:0	6	.
water	13:21	0:0	6	i_codec
op	13:29	0:0	6	==
water	13:32	0:0	6	VLC_CODEC_ALAC
stmts	14:8	31:8	5	
water	14:8	0:0	6	{
if	15:12	19:12	6	(p_sys -> p_audio_stream)
cond	15:17	15:24	7	p_sys -> p_audio_stream
water	15:17	0:0	8	p_sys
op	15:22	0:0	8	->
water	15:24	0:0	8	p_audio_stream
stmts	16:12	19:12	7	
water	16:12	0:0	8	{
call	17:16	18:53	8	msg_Warn
arg	17:26	17:34	9	p_stream
water	17:26	0:0	10	p_stream
arg	17:36	18:53	9	"Only the first Apple Lossless audio ""stream is used"
water	17:36	0:0	10	"Only the first Apple Lossless audio "
water	18:36	0:0	10	"stream is used"
water	18:54	0:0	8	;
water	19:12	0:0	8	}
else	20:12	25:12	6
stmts	20:17	25:12	7	
if	20:17	25:12	8	(id -> fmt . audio . i_rate != 44100 || id -> fmt . audio . i_channels != 2)
cond	20:22	21:50	9	id -> fmt . audio . i_rate != 44100 || id -> fmt . audio . i_channels != 2
water	20:22	0:0	10	id
op	20:24	0:0	10	->
water	20:26	0:0	10	fmt
op	20:29	0:0	10	.
water	20:30	0:0	10	audio
op	20:35	0:0	10	.
water	20:36	0:0	10	i_rate
op	20:43	0:0	10	!=
water	20:46	0:0	10	44100
op	20:52	0:0	10	||
water	21:22	0:0	10	id
op	21:24	0:0	10	->
water	21:26	0:0	10	fmt
op	21:29	0:0	10	.
water	21:30	0:0	10	audio
op	21:35	0:0	10	.
water	21:36	0:0	10	i_channels
op	21:47	0:0	10	!=
water	21:50	0:0	10	2
stmts	22:12	25:12	9	
water	22:12	0:0	10	{
call	23:16	24:74	10	msg_Err
arg	23:25	23:33	11	p_stream
water	23:25	0:0	12	p_stream
arg	23:35	24:74	11	"The Apple Lossless audio stream must be ""encoded with 44100 Hz and 2 channels"
water	23:35	0:0	12	"The Apple Lossless audio stream must be "
water	24:35	0:0	12	"encoded with 44100 Hz and 2 channels"
water	24:75	0:0	10	;
water	25:12	0:0	10	}
else	26:12	30:12	6
stmts	27:12	30:12	7	
water	27:12	0:0	8	{
water	29:16	0:0	8	p_sys
op	29:21	0:0	8	->
water	29:23	0:0	8	p_audio_stream
op	29:38	0:0	8	=
water	29:40	0:0	8	id
water	29:42	0:0	8	;
water	30:12	0:0	8	}
water	31:8	0:0	6	}
else	32:8	39:8	4
stmts	32:13	39:8	5	
if	32:13	39:8	6	(! p_sys -> b_alac_warning)
cond	32:18	32:26	7	! p_sys -> b_alac_warning
op	32:18	0:0	8	!
water	32:19	0:0	8	p_sys
op	32:24	0:0	8	->
water	32:26	0:0	8	b_alac_warning
stmts	33:8	39:8	7	
water	33:8	0:0	8	{
call	34:12	37:49	8	msg_Err
arg	34:21	34:29	9	p_stream
water	34:21	0:0	10	p_stream
arg	34:31	37:49	9	"Apple Lossless is the only codec supported. ""Use the \"transcode\" module for conversion ""(e.g. \"transcode{acodec=alac,""channels=2}\")."
water	34:31	0:0	10	"Apple Lossless is the only codec supported. "
water	35:31	0:0	10	"Use the \"transcode\" module for conversion "
water	36:31	0:0	10	"(e.g. \"transcode{acodec=alac,"
water	37:31	0:0	10	"channels=2}\")."
water	37:50	0:0	8	;
water	38:12	0:0	8	p_sys
op	38:17	0:0	8	->
water	38:19	0:0	8	b_alac_warning
op	38:34	0:0	8	=
water	38:36	0:0	8	true
water	38:40	0:0	8	;
water	39:8	0:0	8	}
break	40:8	40:13	4	
label	41:4	41:11	4	default :
break	43:8	43:13	4	
water	44:4	0:0	4	}
return	45:4	45:13	2	id
water	45:11	0:0	3	id
label	46:0	46:5	2	error :
call	47:4	47:15	2	FreeId
arg	47:12	47:15	3	id
water	47:12	0:0	4	id
water	47:16	0:0	2	;
return	48:4	48:15	2	NULL
water	48:11	0:0	3	NULL

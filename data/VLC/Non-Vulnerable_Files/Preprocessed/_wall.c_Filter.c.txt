func	2:0	33:0	0	static int	Filter
params	2:17	0:0	1	
param	2:19	2:47	2	video_splitter_t *	p_splitter
param	2:49	2:68	2	picture_t *	pp_dst[]
param	2:70	2:87	2	picture_t *	p_src
stmnts	0:0	32:22	1	
decl	4:4	4:51	2	video_splitter_sys_t	*p_sys
op	4:32	0:0	2	=
water	4:34	0:0	2	p_splitter
op	4:44	0:0	2	->
water	4:46	0:0	2	p_sys
if	5:4	9:4	2	(video_splitter_NewPicture (p_splitter ,pp_dst ))
cond	5:8	5:54	3	video_splitter_NewPicture (p_splitter ,pp_dst )
call	5:8	5:54	4	video_splitter_NewPicture
arg	5:35	5:45	5	p_splitter
water	5:35	0:0	6	p_splitter
arg	5:47	5:54	5	pp_dst
water	5:47	0:0	6	pp_dst
stmts	6:4	9:4	3	
water	6:4	0:0	4	{
call	7:8	7:31	4	picture_Release
arg	7:25	7:31	5	p_src
water	7:25	0:0	6	p_src
water	7:32	0:0	4	;
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
water	9:4	0:0	4	}
for	10:4	30:4	2	( int y = 0 ;y < p_sys -> i_row;y ++)
forinit	0:0	10:18	3	 int y = 0 ;
decl	10:9	10:18	4	int	y
op	10:15	0:0	4	=
water	10:17	0:0	4	0
cond	10:20	10:31	3	y < p_sys -> i_row
water	10:20	0:0	4	y
op	10:22	0:0	4	<
water	10:24	0:0	4	p_sys
op	10:29	0:0	4	->
water	10:31	0:0	4	i_row
forexpr	10:38	10:39	3	y ++
water	10:38	0:0	4	y
op	10:39	0:0	4	++
stmts	11:4	30:4	3	
water	11:4	0:0	4	{
for	12:8	29:8	4	( int x = 0 ;x < p_sys -> i_col;x ++)
forinit	0:0	12:22	5	 int x = 0 ;
decl	12:13	12:22	6	int	x
op	12:19	0:0	6	=
water	12:21	0:0	6	0
cond	12:24	12:35	5	x < p_sys -> i_col
water	12:24	0:0	6	x
op	12:26	0:0	6	<
water	12:28	0:0	6	p_sys
op	12:33	0:0	6	->
water	12:35	0:0	6	i_col
forexpr	12:42	12:43	5	x ++
water	12:42	0:0	6	x
op	12:43	0:0	6	++
stmts	13:8	29:8	5	
water	13:8	0:0	6	{
decl	14:12	14:61	6	wall_output_t	*p_output
op	14:36	0:0	6	=
op	14:38	0:0	6	&
water	14:39	0:0	6	p_sys
op	14:44	0:0	6	->
water	14:46	0:0	6	pp_output
op	14:55	0:0	6	[
water	14:56	0:0	6	x
op	14:57	0:0	6	]
op	14:58	0:0	6	[
water	14:59	0:0	6	y
op	14:60	0:0	6	]
if	15:12	16:24	6	(! p_output -> b_active)
cond	15:16	15:27	7	! p_output -> b_active
op	15:16	0:0	8	!
water	15:17	0:0	8	p_output
op	15:25	0:0	8	->
water	15:27	0:0	8	b_active
stmts	16:16	16:24	7	
continue	16:16	16:24	8	
decl	17:12	17:57	6	picture_t	*p_dst
op	17:29	0:0	6	=
water	17:31	0:0	6	pp_dst
op	17:37	0:0	6	[
water	17:38	0:0	6	p_output
op	17:46	0:0	6	->
water	17:48	0:0	6	i_output
op	17:56	0:0	6	]
decl	19:12	19:34	6	picture_t	tmp
op	19:26	0:0	6	=
op	19:28	0:0	6	*
water	19:29	0:0	6	p_src
for	20:12	27:12	6	( int i = 0 ;i < tmp . i_planes;i ++)
forinit	0:0	20:26	7	 int i = 0 ;
decl	20:17	20:26	8	int	i
op	20:23	0:0	8	=
water	20:25	0:0	8	0
cond	20:28	20:36	7	i < tmp . i_planes
water	20:28	0:0	8	i
op	20:30	0:0	8	<
water	20:32	0:0	8	tmp
op	20:35	0:0	8	.
water	20:36	0:0	8	i_planes
forexpr	20:46	20:47	7	i ++
water	20:46	0:0	8	i
op	20:47	0:0	8	++
stmts	21:12	27:12	7	
water	21:12	0:0	8	{
decl	22:16	22:39	8	plane_t	*p0
op	22:28	0:0	8	=
op	22:30	0:0	8	&
water	22:31	0:0	8	tmp
op	22:34	0:0	8	.
water	22:35	0:0	8	p
op	22:36	0:0	8	[
water	22:37	0:0	8	0
op	22:38	0:0	8	]
decl	23:16	23:38	8	plane_t	*p
op	23:27	0:0	8	=
op	23:29	0:0	8	&
water	23:30	0:0	8	tmp
op	23:33	0:0	8	.
water	23:34	0:0	8	p
op	23:35	0:0	8	[
water	23:36	0:0	8	i
op	23:37	0:0	8	]
decl	24:16	24:91	8	const int	i_y
op	24:30	0:0	8	=
water	24:32	0:0	8	p_output
op	24:40	0:0	8	->
water	24:42	0:0	8	i_top
op	24:49	0:0	8	*
water	24:51	0:0	8	p
op	24:52	0:0	8	->
water	24:54	0:0	8	i_visible_pitch
op	24:70	0:0	8	/
water	24:72	0:0	8	p0
op	24:74	0:0	8	->
water	24:76	0:0	8	i_visible_pitch
decl	25:16	25:91	8	const int	i_x
op	25:30	0:0	8	=
water	25:32	0:0	8	p_output
op	25:40	0:0	8	->
water	25:42	0:0	8	i_left
op	25:49	0:0	8	*
water	25:51	0:0	8	p
op	25:52	0:0	8	->
water	25:54	0:0	8	i_visible_lines
op	25:70	0:0	8	/
water	25:72	0:0	8	p0
op	25:74	0:0	8	->
water	25:76	0:0	8	i_visible_lines
water	26:16	0:0	8	p
op	26:17	0:0	8	->
water	26:19	0:0	8	p_pixels
op	26:28	0:0	8	+=
water	26:31	0:0	8	i_y
op	26:35	0:0	8	*
water	26:37	0:0	8	p
op	26:38	0:0	8	->
water	26:40	0:0	8	i_pitch
op	26:48	0:0	8	+
water	26:50	0:0	8	(
water	26:52	0:0	8	i_x
op	26:56	0:0	8	-
water	26:58	0:0	8	(
water	26:59	0:0	8	i_x
op	26:63	0:0	8	%
water	26:65	0:0	8	p
op	26:66	0:0	8	->
water	26:68	0:0	8	i_pixel_pitch
water	26:81	0:0	8	)
water	26:82	0:0	8	)
water	26:83	0:0	8	;
water	27:12	0:0	8	}
call	28:12	28:38	6	picture_Copy
arg	28:26	28:31	7	p_dst
water	28:26	0:0	8	p_dst
arg	28:33	28:38	7	&tmp
op	28:33	0:0	8	&
water	28:34	0:0	8	tmp
water	28:39	0:0	6	;
water	29:8	0:0	6	}
water	30:4	0:0	4	}
call	31:4	31:27	2	picture_Release
arg	31:21	31:27	3	p_src
water	31:21	0:0	4	p_src
water	31:28	0:0	2	;
return	32:4	32:22	2	VLC_SUCCESS
water	32:11	0:0	3	VLC_SUCCESS

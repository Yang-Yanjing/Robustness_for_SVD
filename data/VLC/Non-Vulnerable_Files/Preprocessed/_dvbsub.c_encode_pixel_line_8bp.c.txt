func	2:0	52:0	0	static void	encode_pixel_line_8bp
params	2:33	0:0	1	
param	2:35	2:42	2	bs_t *	s
param	2:44	2:73	2	subpicture_region_t *	p_region
param	3:35	3:46	2	int	i_line
stmnts	0:0	51:19	1	
decl	5:4	5:32	2	unsigned int	i
water	5:18	0:0	2	,
decl	5:4	5:32	2	unsigned int	i_length
op	5:29	0:0	2	=
water	5:31	0:0	2	0
decl	6:4	6:49	2	int	i_pitch
op	6:16	0:0	2	=
water	6:18	0:0	2	p_region
op	6:26	0:0	2	->
water	6:28	0:0	2	p_picture
op	6:37	0:0	2	->
water	6:39	0:0	2	p
op	6:40	0:0	2	->
water	6:42	0:0	2	i_pitch
decl	7:4	7:75	2	uint8_t	*p_data
op	7:20	0:0	2	=
op	7:22	0:0	2	&
water	7:23	0:0	2	p_region
op	7:31	0:0	2	->
water	7:33	0:0	2	p_picture
op	7:42	0:0	2	->
water	7:44	0:0	2	p
op	7:45	0:0	2	->
water	7:47	0:0	2	p_pixels
op	7:55	0:0	2	[
water	7:57	0:0	2	i_pitch
op	7:65	0:0	2	*
water	7:67	0:0	2	i_line
op	7:74	0:0	2	]
decl	8:4	8:32	2	int	i_last_pixel
op	8:21	0:0	2	=
water	8:23	0:0	2	p_data
op	8:29	0:0	2	[
water	8:30	0:0	2	0
op	8:31	0:0	2	]
for	9:4	46:4	2	(i = 0 ;i <= p_region -> fmt . i_visible_width;i ++)
forinit	9:9	9:14	3	i = 0 ;
water	9:9	0:0	4	i
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:35	3	i <= p_region -> fmt . i_visible_width
water	9:16	0:0	4	i
op	9:18	0:0	4	<=
water	9:21	0:0	4	p_region
op	9:29	0:0	4	->
water	9:31	0:0	4	fmt
op	9:34	0:0	4	.
water	9:35	0:0	4	i_visible_width
forexpr	9:52	9:53	3	i ++
water	9:52	0:0	4	i
op	9:53	0:0	4	++
stmts	10:4	46:4	3	
water	10:4	0:0	4	{
if	11:8	16:8	4	(( i != p_region -> fmt . i_visible_width ) && ( p_data [ i ] == i_last_pixel ) && ( i_length != 127 ))
cond	11:12	12:63	5	( i != p_region -> fmt . i_visible_width ) && ( p_data [ i ] == i_last_pixel ) && ( i_length != 127 )
water	11:12	0:0	6	(
water	11:14	0:0	6	i
op	11:16	0:0	6	!=
water	11:19	0:0	6	p_region
op	11:27	0:0	6	->
water	11:29	0:0	6	fmt
op	11:32	0:0	6	.
water	11:33	0:0	6	i_visible_width
water	11:49	0:0	6	)
op	11:51	0:0	6	&&
water	12:12	0:0	6	(
water	12:14	0:0	6	p_data
op	12:20	0:0	6	[
water	12:21	0:0	6	i
op	12:22	0:0	6	]
op	12:24	0:0	6	==
water	12:27	0:0	6	i_last_pixel
water	12:40	0:0	6	)
op	12:42	0:0	6	&&
water	12:45	0:0	6	(
water	12:47	0:0	6	i_length
op	12:56	0:0	6	!=
water	12:59	0:0	6	127
water	12:63	0:0	6	)
stmts	13:8	16:8	5	
water	13:8	0:0	6	{
water	14:12	0:0	6	i_length
op	14:20	0:0	6	++
water	14:22	0:0	6	;
continue	15:12	15:20	6	
water	16:8	0:0	6	}
if	17:8	21:8	4	(( i_length == 1 ) && i_last_pixel)
cond	17:12	17:33	5	( i_length == 1 ) && i_last_pixel
water	17:12	0:0	6	(
water	17:14	0:0	6	i_length
op	17:23	0:0	6	==
water	17:26	0:0	6	1
water	17:28	0:0	6	)
op	17:30	0:0	6	&&
water	17:33	0:0	6	i_last_pixel
stmts	18:8	21:8	5	
water	18:8	0:0	6	{
call	20:12	20:41	6	bs_write
arg	20:22	20:23	7	s
water	20:22	0:0	8	s
arg	20:25	20:26	7	8
water	20:25	0:0	8	8
arg	20:28	20:41	7	i_last_pixel
water	20:28	0:0	8	i_last_pixel
water	20:42	0:0	6	;
water	21:8	0:0	6	}
else	22:8	27:8	4
stmts	22:13	27:8	5	
if	22:13	27:8	6	(( i_length == 2 ) && i_last_pixel)
cond	22:17	22:38	7	( i_length == 2 ) && i_last_pixel
water	22:17	0:0	8	(
water	22:19	0:0	8	i_length
op	22:28	0:0	8	==
water	22:31	0:0	8	2
water	22:33	0:0	8	)
op	22:35	0:0	8	&&
water	22:38	0:0	8	i_last_pixel
stmts	23:8	27:8	7	
water	23:8	0:0	8	{
call	25:12	25:41	8	bs_write
arg	25:22	25:23	9	s
water	25:22	0:0	10	s
arg	25:25	25:26	9	8
water	25:25	0:0	10	8
arg	25:28	25:41	9	i_last_pixel
water	25:28	0:0	10	i_last_pixel
water	25:42	0:0	8	;
call	26:12	26:41	8	bs_write
arg	26:22	26:23	9	s
water	26:22	0:0	10	s
arg	26:25	26:26	9	8
water	26:25	0:0	10	8
arg	26:28	26:41	9	i_last_pixel
water	26:28	0:0	10	i_last_pixel
water	26:42	0:0	8	;
water	27:8	0:0	8	}
else	28:8	42:8	4
stmts	28:13	42:8	5	
if	28:13	42:8	6	(i_length <= 127)
cond	28:17	28:29	7	i_length <= 127
water	28:17	0:0	8	i_length
op	28:26	0:0	8	<=
water	28:29	0:0	8	127
stmts	29:8	42:8	7	
water	29:8	0:0	8	{
call	30:12	30:30	8	bs_write
arg	30:22	30:23	9	s
water	30:22	0:0	10	s
arg	30:25	30:26	9	8
water	30:25	0:0	10	8
arg	30:28	30:30	9	0
water	30:28	0:0	10	0
water	30:31	0:0	8	;
if	31:12	35:12	8	(! i_last_pixel)
cond	31:16	31:17	9	! i_last_pixel
op	31:16	0:0	10	!
water	31:17	0:0	10	i_last_pixel
stmts	32:12	35:12	9	
water	32:12	0:0	10	{
call	33:16	33:34	10	bs_write
arg	33:26	33:27	11	s
water	33:26	0:0	12	s
arg	33:29	33:30	11	1
water	33:29	0:0	12	1
arg	33:32	33:34	11	0
water	33:32	0:0	12	0
water	33:35	0:0	10	;
call	34:16	34:41	10	bs_write
arg	34:26	34:27	11	s
water	34:26	0:0	12	s
arg	34:29	34:30	11	7
water	34:29	0:0	12	7
arg	34:32	34:41	11	i_length
water	34:32	0:0	12	i_length
water	34:42	0:0	10	;
water	35:12	0:0	10	}
else	36:12	41:12	8
stmts	37:12	41:12	9	
water	37:12	0:0	10	{
call	38:16	38:34	10	bs_write
arg	38:26	38:27	11	s
water	38:26	0:0	12	s
arg	38:29	38:30	11	1
water	38:29	0:0	12	1
arg	38:32	38:34	11	1
water	38:32	0:0	12	1
water	38:35	0:0	10	;
call	39:16	39:41	10	bs_write
arg	39:26	39:27	11	s
water	39:26	0:0	12	s
arg	39:29	39:30	11	7
water	39:29	0:0	12	7
arg	39:32	39:41	11	i_length
water	39:32	0:0	12	i_length
water	39:42	0:0	10	;
call	40:16	40:45	10	bs_write
arg	40:26	40:27	11	s
water	40:26	0:0	12	s
arg	40:29	40:30	11	8
water	40:29	0:0	12	8
arg	40:32	40:45	11	i_last_pixel
water	40:32	0:0	12	i_last_pixel
water	40:46	0:0	10	;
water	41:12	0:0	10	}
water	42:8	0:0	8	}
if	43:8	43:54	4	(i == p_region -> fmt . i_visible_width)
cond	43:12	43:31	5	i == p_region -> fmt . i_visible_width
water	43:12	0:0	6	i
op	43:14	0:0	6	==
water	43:17	0:0	6	p_region
op	43:25	0:0	6	->
water	43:27	0:0	6	fmt
op	43:30	0:0	6	.
water	43:31	0:0	6	i_visible_width
stmts	43:49	43:54	5	
break	43:49	43:54	6	
water	44:8	0:0	4	i_last_pixel
op	44:21	0:0	4	=
water	44:23	0:0	4	p_data
op	44:29	0:0	4	[
water	44:30	0:0	4	i
op	44:31	0:0	4	]
water	44:32	0:0	4	;
water	45:8	0:0	4	i_length
op	45:17	0:0	4	=
water	45:19	0:0	4	1
water	45:20	0:0	4	;
water	46:4	0:0	4	}
call	48:4	48:22	2	bs_write
arg	48:14	48:15	3	s
water	48:14	0:0	4	s
arg	48:17	48:18	3	8
water	48:17	0:0	4	8
arg	48:20	48:22	3	0
water	48:20	0:0	4	0
water	48:23	0:0	2	;
call	49:4	49:22	2	bs_write
arg	49:14	49:15	3	s
water	49:14	0:0	4	s
arg	49:17	49:18	3	8
water	49:17	0:0	4	8
arg	49:20	49:22	3	0
water	49:20	0:0	4	0
water	49:23	0:0	2	;
call	51:4	51:18	2	bs_align_0
arg	51:16	51:18	3	s
water	51:16	0:0	4	s
water	51:19	0:0	2	;

func	2:0	32:0	0	static picture_t *	DecodeFrame
params	2:29	0:0	1	
param	2:31	2:47	2	decoder_t *	p_dec
param	2:49	2:68	2	block_t * *	pp_block
stmnts	0:0	31:16	1	
decl	4:4	4:53	2	block_t	*p_block
op	4:21	0:0	2	=
call	4:23	4:52	3	DecodeBlock
arg	4:36	4:41	4	p_dec
water	4:36	0:0	5	p_dec
arg	4:43	4:52	4	pp_block
water	4:43	0:0	5	pp_block
if	5:4	6:19	2	(p_block == NULL)
cond	5:8	5:19	3	p_block == NULL
water	5:8	0:0	4	p_block
op	5:16	0:0	4	==
water	5:19	0:0	4	NULL
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
decl	7:4	7:39	2	decoder_sys_t	*p_sys
op	7:25	0:0	2	=
water	7:27	0:0	2	p_dec
op	7:32	0:0	2	->
water	7:34	0:0	2	p_sys
decl	9:4	9:50	2	picture_t	*p_pic
op	9:21	0:0	2	=
call	9:23	9:49	3	decoder_NewPicture
arg	9:43	9:49	4	p_dec
water	9:43	0:0	5	p_dec
if	10:4	14:4	2	(p_pic == NULL)
cond	10:8	10:17	3	p_pic == NULL
water	10:8	0:0	4	p_pic
op	10:14	0:0	4	==
water	10:17	0:0	4	NULL
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
call	12:8	12:31	4	block_Release
arg	12:23	12:31	5	p_block
water	12:23	0:0	6	p_block
water	12:32	0:0	4	;
return	13:8	13:19	4	NULL
water	13:15	0:0	5	NULL
water	14:4	0:0	4	}
call	15:4	15:39	2	FillPicture
arg	15:17	15:22	3	p_dec
water	15:17	0:0	4	p_dec
arg	15:24	15:31	3	p_block
water	15:24	0:0	4	p_block
arg	15:33	15:39	3	p_pic
water	15:33	0:0	4	p_pic
water	15:40	0:0	2	;
water	17:4	0:0	2	p_pic
op	17:9	0:0	2	->
water	17:11	0:0	2	date
op	17:16	0:0	2	=
call	17:18	17:47	2	date_Get
arg	17:28	17:47	3	&p_dec->p_sys->pts
op	17:28	0:0	4	&
water	17:29	0:0	4	p_dec
op	17:34	0:0	4	->
water	17:36	0:0	4	p_sys
op	17:41	0:0	4	->
water	17:43	0:0	4	pts
water	17:48	0:0	2	;
call	18:4	18:35	2	date_Increment
arg	18:20	18:31	3	&p_sys->pts
op	18:20	0:0	4	&
water	18:21	0:0	4	p_sys
op	18:26	0:0	4	->
water	18:28	0:0	4	pts
arg	18:33	18:35	3	1
water	18:33	0:0	4	1
water	18:36	0:0	2	;
if	19:4	27:4	2	(p_block -> i_flags & BLOCK_FLAG_INTERLACED_MASK)
cond	19:8	19:27	3	p_block -> i_flags & BLOCK_FLAG_INTERLACED_MASK
water	19:8	0:0	4	p_block
op	19:15	0:0	4	->
water	19:17	0:0	4	i_flags
op	19:25	0:0	4	&
water	19:27	0:0	4	BLOCK_FLAG_INTERLACED_MASK
stmts	20:4	27:4	3	
water	20:4	0:0	4	{
water	21:8	0:0	4	p_pic
op	21:13	0:0	4	->
water	21:15	0:0	4	b_progressive
op	21:29	0:0	4	=
water	21:31	0:0	4	false
water	21:36	0:0	4	;
water	22:8	0:0	4	p_pic
op	22:13	0:0	4	->
water	22:15	0:0	4	i_nb_fields
op	22:27	0:0	4	=
water	22:29	0:0	4	2
water	22:30	0:0	4	;
if	23:8	24:43	4	(p_block -> i_flags & BLOCK_FLAG_TOP_FIELD_FIRST)
cond	23:12	23:31	5	p_block -> i_flags & BLOCK_FLAG_TOP_FIELD_FIRST
water	23:12	0:0	6	p_block
op	23:19	0:0	6	->
water	23:21	0:0	6	i_flags
op	23:29	0:0	6	&
water	23:31	0:0	6	BLOCK_FLAG_TOP_FIELD_FIRST
stmts	24:12	24:43	5	
water	24:12	0:0	6	p_pic
op	24:17	0:0	6	->
water	24:19	0:0	6	b_top_field_first
op	24:37	0:0	6	=
water	24:39	0:0	6	true
water	24:43	0:0	6	;
else	25:8	26:44	4
stmts	26:12	26:44	5	
water	26:12	0:0	6	p_pic
op	26:17	0:0	6	->
water	26:19	0:0	6	b_top_field_first
op	26:37	0:0	6	=
water	26:39	0:0	6	false
water	26:44	0:0	6	;
water	27:4	0:0	4	}
else	28:4	29:35	2
stmts	29:8	29:35	3	
water	29:8	0:0	4	p_pic
op	29:13	0:0	4	->
water	29:15	0:0	4	b_progressive
op	29:29	0:0	4	=
water	29:31	0:0	4	true
water	29:35	0:0	4	;
call	30:4	30:27	2	block_Release
arg	30:19	30:27	3	p_block
water	30:19	0:0	4	p_block
water	30:28	0:0	2	;
return	31:4	31:16	2	p_pic
water	31:11	0:0	3	p_pic

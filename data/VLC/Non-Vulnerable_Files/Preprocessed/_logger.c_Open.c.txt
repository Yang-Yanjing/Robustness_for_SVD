func	2:0	124:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	123:22	1	
decl	4:4	4:51	2	intf_thread_t	*p_intf
op	4:26	0:0	2	=
water	4:28	0:0	2	(
water	4:29	0:0	2	intf_thread_t
op	4:43	0:0	2	*
water	4:44	0:0	2	)
water	4:45	0:0	2	p_this
decl	5:4	5:21	2	intf_sys_t	*p_sys
water	6:4	0:0	2	CONSOLE_INTRO_MSG
water	6:21	0:0	2	;
call	7:4	7:38	2	msg_Info
arg	7:14	7:20	3	p_intf
water	7:14	0:0	4	p_intf
arg	7:22	7:38	3	"using logger."
water	7:22	0:0	4	"using logger."
water	7:39	0:0	2	;
water	9:4	0:0	2	p_sys
op	9:10	0:0	2	=
water	9:12	0:0	2	p_intf
op	9:18	0:0	2	->
water	9:20	0:0	2	p_sys
op	9:26	0:0	2	=
water	9:28	0:0	2	(
water	9:29	0:0	2	intf_sys_t
op	9:40	0:0	2	*
water	9:41	0:0	2	)
call	9:42	9:71	2	malloc
arg	9:50	9:71	3	sizeof(intf_sys_t)
op	9:50	0:0	4	sizeof
water	9:56	0:0	4	(
water	9:58	0:0	4	intf_sys_t
water	9:69	0:0	4	)
water	9:72	0:0	2	;
if	10:4	11:25	2	(p_sys == NULL)
cond	10:8	10:17	3	p_sys == NULL
water	10:8	0:0	4	p_sys
op	10:14	0:0	4	==
water	10:17	0:0	4	NULL
stmts	11:8	11:25	3	
return	11:8	11:25	4	VLC_ENOMEM
water	11:15	0:0	5	VLC_ENOMEM
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	p_file
op	12:18	0:0	2	=
water	12:20	0:0	2	NULL
water	12:24	0:0	2	;
decl	13:4	13:29	2	vlc_log_cb	cb
op	13:18	0:0	2	=
water	13:20	0:0	2	TextPrint
decl	14:4	14:63	2	const char	*filename
op	14:25	0:0	2	=
water	14:27	0:0	2	LOG_FILE_TEXT
water	14:40	0:0	2	,
decl	14:4	14:63	2	const char	*header
op	14:50	0:0	2	=
water	14:52	0:0	2	TEXT_HEADER
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	footer
op	15:18	0:0	2	=
water	15:20	0:0	2	TEXT_FOOTER
water	15:31	0:0	2	;
decl	16:4	16:55	2	char	*mode
op	16:15	0:0	2	=
call	16:17	16:54	3	var_InheritString
arg	16:36	16:42	4	p_intf
water	16:36	0:0	5	p_intf
arg	16:44	16:54	4	"logmode"
water	16:44	0:0	5	"logmode"
if	17:4	37:4	2	(mode != NULL)
cond	17:8	17:16	3	mode != NULL
water	17:8	0:0	4	mode
op	17:13	0:0	4	!=
water	17:16	0:0	4	NULL
stmts	18:4	37:4	3	
water	18:4	0:0	4	{
if	19:8	25:8	4	(!strcmp (mode ,"html" ))
cond	19:12	19:34	5	!strcmp (mode ,"html" )
op	19:12	0:0	6	!
call	19:13	19:34	6	strcmp
arg	19:21	19:25	7	mode
water	19:21	0:0	8	mode
arg	19:27	19:34	7	"html"
water	19:27	0:0	8	"html"
stmts	20:8	25:8	5	
water	20:8	0:0	6	{
water	21:12	0:0	6	p_sys
op	21:17	0:0	6	->
water	21:19	0:0	6	footer
op	21:26	0:0	6	=
water	21:28	0:0	6	HTML_FOOTER
water	21:39	0:0	6	;
water	22:12	0:0	6	filename
op	22:21	0:0	6	=
water	22:23	0:0	6	LOG_FILE_HTML
water	22:36	0:0	6	;
water	23:12	0:0	6	header
op	23:19	0:0	6	=
water	23:21	0:0	6	HTML_HEADER
water	23:32	0:0	6	;
water	24:12	0:0	6	cb
op	24:15	0:0	6	=
water	24:17	0:0	6	HtmlPrint
water	24:26	0:0	6	;
water	25:8	0:0	6	}
else	27:8	28:28	4
stmts	27:13	28:28	5	
if	27:13	28:28	6	(!strcmp (mode ,"syslog" ))
cond	27:17	27:41	7	!strcmp (mode ,"syslog" )
op	27:17	0:0	8	!
call	27:18	27:41	8	strcmp
arg	27:26	27:30	9	mode
water	27:26	0:0	10	mode
arg	27:32	27:41	9	"syslog"
water	27:32	0:0	10	"syslog"
stmts	28:12	28:28	7	
water	28:12	0:0	8	cb
op	28:15	0:0	8	=
water	28:17	0:0	8	SyslogPrint
water	28:28	0:0	8	;
else	31:8	32:29	4
stmts	31:13	32:29	5	
if	31:13	32:29	6	(!strcmp (mode ,"android" ))
cond	31:17	31:42	7	!strcmp (mode ,"android" )
op	31:17	0:0	8	!
call	31:18	31:42	8	strcmp
arg	31:26	31:30	9	mode
water	31:26	0:0	10	mode
arg	31:32	31:42	9	"android"
water	31:32	0:0	10	"android"
stmts	32:12	32:29	7	
water	32:12	0:0	8	cb
op	32:15	0:0	8	=
water	32:17	0:0	8	AndroidPrint
water	32:29	0:0	8	;
else	34:8	35:75	4
stmts	34:13	35:75	5	
if	34:13	35:75	6	(strcmp (mode ,"text" ))
cond	34:17	34:38	7	strcmp (mode ,"text" )
call	34:17	34:38	8	strcmp
arg	34:25	34:29	9	mode
water	34:25	0:0	10	mode
arg	34:31	34:38	9	"text"
water	34:31	0:0	10	"text"
stmts	35:12	35:75	7	
call	35:12	35:74	8	msg_Warn
arg	35:22	35:28	9	p_intf
water	35:22	0:0	10	p_intf
arg	35:30	35:67	9	"invalid log mode `%s', using `text'"
water	35:30	0:0	10	"invalid log mode `%s', using `text'"
arg	35:69	35:74	9	mode
water	35:69	0:0	10	mode
water	35:75	0:0	8	;
call	36:8	36:19	4	free
arg	36:14	36:19	5	mode
water	36:14	0:0	6	mode
water	36:20	0:0	4	;
water	37:4	0:0	4	}
if	39:4	78:4	2	(cb == SyslogPrint)
cond	39:8	39:14	3	cb == SyslogPrint
water	39:8	0:0	4	cb
op	39:11	0:0	4	==
water	39:14	0:0	4	SyslogPrint
stmts	40:4	78:4	3	
water	40:4	0:0	4	{
decl	41:8	41:22	4	int	i_facility
decl	42:8	42:75	4	char	*psz_facility
op	42:27	0:0	4	=
call	42:29	42:74	5	var_InheritString
arg	42:48	42:54	6	p_intf
water	42:48	0:0	7	p_intf
arg	42:56	42:74	6	"syslog-facility"
water	42:56	0:0	7	"syslog-facility"
if	43:8	62:8	4	(psz_facility)
cond	43:12	43:12	5	psz_facility
water	43:12	0:0	6	psz_facility
stmts	44:8	62:8	5	
water	44:8	0:0	6	{
decl	45:12	45:28	6	bool	b_valid
op	45:25	0:0	6	=
water	45:27	0:0	6	0
for	46:12	54:12	6	( size_t i = 0 ;i < fac_entries;++ i)
forinit	0:0	46:29	7	 size_t i = 0 ;
decl	46:17	46:29	8	size_t	i
op	46:26	0:0	8	=
water	46:28	0:0	8	0
cond	46:31	46:35	7	i < fac_entries
water	46:31	0:0	8	i
op	46:33	0:0	8	<
water	46:35	0:0	8	fac_entries
forexpr	46:48	46:50	7	++ i
op	46:48	0:0	8	++
water	46:50	0:0	8	i
stmts	47:12	54:12	7	
water	47:12	0:0	8	{
if	48:16	53:16	8	(!strcmp (psz_facility ,fac_name [ i ] ))
cond	48:20	48:55	9	!strcmp (psz_facility ,fac_name [ i ] )
op	48:20	0:0	10	!
call	48:21	48:55	10	strcmp
arg	48:29	48:41	11	psz_facility
water	48:29	0:0	12	psz_facility
arg	48:43	48:55	11	fac_name[i]
water	48:43	0:0	12	fac_name
op	48:51	0:0	12	[
water	48:52	0:0	12	i
op	48:53	0:0	12	]
stmts	49:16	53:16	9	
water	49:16	0:0	10	{
water	50:20	0:0	10	i_facility
op	50:31	0:0	10	=
water	50:33	0:0	10	fac_number
op	50:43	0:0	10	[
water	50:44	0:0	10	i
op	50:45	0:0	10	]
water	50:46	0:0	10	;
water	51:20	0:0	10	b_valid
op	51:28	0:0	10	=
water	51:30	0:0	10	1
water	51:31	0:0	10	;
break	52:20	52:25	10	
water	53:16	0:0	10	}
water	54:12	0:0	8	}
if	55:12	60:12	6	(! b_valid)
cond	55:16	55:17	7	! b_valid
op	55:16	0:0	8	!
water	55:17	0:0	8	b_valid
stmts	56:12	60:12	7	
water	56:12	0:0	8	{
call	57:16	58:52	8	msg_Warn
arg	57:26	57:32	9	p_intf
water	57:26	0:0	10	p_intf
arg	57:34	57:76	9	"invalid syslog facility `%s', using `%s'"
water	57:34	0:0	10	"invalid syslog facility `%s', using `%s'"
arg	58:26	58:38	9	psz_facility
water	58:26	0:0	10	psz_facility
arg	58:40	58:52	9	fac_name[0]
water	58:40	0:0	10	fac_name
op	58:48	0:0	10	[
water	58:49	0:0	10	0
op	58:50	0:0	10	]
water	58:53	0:0	8	;
water	59:16	0:0	8	i_facility
op	59:27	0:0	8	=
water	59:29	0:0	8	fac_number
op	59:39	0:0	8	[
water	59:40	0:0	8	0
op	59:41	0:0	8	]
water	59:42	0:0	8	;
water	60:12	0:0	8	}
call	61:12	61:31	6	free
arg	61:18	61:31	7	psz_facility
water	61:18	0:0	8	psz_facility
water	61:32	0:0	6	;
water	62:8	0:0	6	}
else	63:8	68:8	4
stmts	64:8	68:8	5	
water	64:8	0:0	6	{
call	65:12	66:34	6	msg_Warn
arg	65:22	65:28	7	p_intf
water	65:22	0:0	8	p_intf
arg	65:30	65:72	7	"no syslog facility specified, using `%s'"
water	65:30	0:0	8	"no syslog facility specified, using `%s'"
arg	66:22	66:34	7	fac_name[0]
water	66:22	0:0	8	fac_name
op	66:30	0:0	8	[
water	66:31	0:0	8	0
op	66:32	0:0	8	]
water	66:35	0:0	6	;
water	67:12	0:0	6	i_facility
op	67:23	0:0	6	=
water	67:25	0:0	6	fac_number
op	67:35	0:0	6	[
water	67:36	0:0	6	0
op	67:37	0:0	6	]
water	67:38	0:0	6	;
water	68:8	0:0	6	}
decl	69:8	69:76	4	char	*psz_syslog_ident
op	69:31	0:0	4	=
call	69:33	69:75	5	var_InheritString
arg	69:52	69:58	6	p_intf
water	69:52	0:0	7	p_intf
arg	69:60	69:75	6	"syslog-ident"
water	69:60	0:0	7	"syslog-ident"
if	70:8	74:8	4	(unlikely (psz_syslog_ident == NULL ))
cond	70:12	70:45	5	unlikely (psz_syslog_ident == NULL )
call	70:12	70:45	6	unlikely
arg	70:21	70:45	7	psz_syslog_ident==NULL
water	70:21	0:0	8	psz_syslog_ident
op	70:38	0:0	8	==
water	70:41	0:0	8	NULL
stmts	71:8	74:8	5	
water	71:8	0:0	6	{
call	72:12	72:24	6	free
arg	72:18	72:24	7	p_sys
water	72:18	0:0	8	p_sys
water	72:25	0:0	6	;
return	73:12	73:29	6	VLC_ENOMEM
water	73:19	0:0	7	VLC_ENOMEM
water	74:8	0:0	6	}
water	75:8	0:0	4	p_sys
op	75:13	0:0	4	->
water	75:15	0:0	4	ident
op	75:21	0:0	4	=
water	75:23	0:0	4	psz_syslog_ident
water	75:39	0:0	4	;
call	76:8	76:62	4	openlog
arg	76:17	76:29	5	p_sys->ident
water	76:17	0:0	6	p_sys
op	76:22	0:0	6	->
water	76:24	0:0	6	ident
arg	76:31	76:49	5	LOG_PID|LOG_NDELAY
water	76:31	0:0	6	LOG_PID
op	76:38	0:0	6	|
water	76:39	0:0	6	LOG_NDELAY
arg	76:51	76:62	5	i_facility
water	76:51	0:0	6	i_facility
water	76:63	0:0	4	;
water	77:8	0:0	4	p_sys
op	77:13	0:0	4	->
water	77:15	0:0	4	p_file
op	77:22	0:0	4	=
water	77:24	0:0	4	NULL
water	77:28	0:0	4	;
water	78:4	0:0	4	}
else	79:4	85:4	2
stmts	82:4	85:4	3	
if	82:4	85:4	4	(cb == AndroidPrint)
cond	82:8	82:14	5	cb == AndroidPrint
water	82:8	0:0	6	cb
op	82:11	0:0	6	==
water	82:14	0:0	6	AndroidPrint
stmts	83:4	85:4	5	
water	83:4	0:0	6	{
water	0:0	0:0	6	STATEMENTS
water	85:4	0:0	6	}
else	86:4	121:4	2
stmts	88:4	121:4	3	
water	88:4	0:0	4	{
decl	89:8	89:63	4	char	*psz_file
op	89:23	0:0	4	=
call	89:25	89:62	5	var_InheritString
arg	89:44	89:50	6	p_intf
water	89:44	0:0	7	p_intf
arg	89:52	89:62	6	"logfile"
water	89:52	0:0	7	"logfile"
if	90:8	104:8	4	(! psz_file)
cond	90:12	90:13	5	! psz_file
op	90:12	0:0	6	!
water	90:13	0:0	6	psz_file
stmts	91:8	104:8	5	
water	91:8	0:0	6	{
decl	94:12	94:56	6	char	*home
op	94:23	0:0	6	=
call	94:25	94:55	7	config_GetUserDir
arg	94:43	94:55	8	VLC_HOME_DIR
water	94:43	0:0	9	VLC_HOME_DIR
if	95:12	98:31	6	(home == NULL ||asprintf (& psz_file ,"%s/" LOG_DIR "/%s" ,home ,filename ) == - 1)
cond	95:16	97:41	7	home == NULL ||asprintf (& psz_file ,"%s/" LOG_DIR "/%s" ,home ,filename ) == - 1
water	95:16	0:0	8	home
op	95:21	0:0	8	==
water	95:24	0:0	8	NULL
op	96:13	0:0	8	||
call	96:16	97:35	8	asprintf
arg	96:26	96:35	9	&psz_file
op	96:26	0:0	10	&
water	96:27	0:0	10	psz_file
arg	96:37	96:54	9	"%s/"LOG_DIR"/%s"
water	96:37	0:0	10	"%s/"
water	96:42	0:0	10	LOG_DIR
water	96:49	0:0	10	"/%s"
arg	96:56	96:60	9	home
water	96:56	0:0	10	home
arg	97:26	97:35	9	filename
water	97:26	0:0	10	filename
op	97:37	0:0	8	==
op	97:40	0:0	8	-
water	97:41	0:0	8	1
stmts	98:16	98:31	7	
water	98:16	0:0	8	psz_file
op	98:25	0:0	8	=
water	98:27	0:0	8	NULL
water	98:31	0:0	8	;
call	99:12	99:21	6	free
arg	99:17	99:21	7	home
water	99:17	0:0	8	home
water	99:22	0:0	6	;
water	100:12	0:0	6	filename
op	100:21	0:0	6	=
water	100:23	0:0	6	psz_file
water	100:31	0:0	6	;
call	102:12	103:31	6	msg_Warn
arg	102:22	102:28	7	p_intf
water	102:22	0:0	8	p_intf
arg	102:30	102:68	7	"no log filename provided, using `%s'"
water	102:30	0:0	8	"no log filename provided, using `%s'"
arg	103:22	103:31	7	filename
water	103:22	0:0	8	filename
water	103:32	0:0	6	;
water	104:8	0:0	6	}
else	105:8	106:31	4
stmts	106:12	106:31	5	
water	106:12	0:0	6	filename
op	106:21	0:0	6	=
water	106:23	0:0	6	psz_file
water	106:31	0:0	6	;
call	108:8	108:58	4	msg_Dbg
arg	108:17	108:23	5	p_intf
water	108:17	0:0	6	p_intf
arg	108:25	108:47	5	"opening logfile `%s'"
water	108:25	0:0	6	"opening logfile `%s'"
arg	108:49	108:58	5	filename
water	108:49	0:0	6	filename
water	108:59	0:0	4	;
water	109:8	0:0	4	p_sys
op	109:13	0:0	4	->
water	109:15	0:0	4	p_file
op	109:22	0:0	4	=
call	109:24	109:50	4	vlc_fopen
arg	109:35	109:43	5	filename
water	109:35	0:0	6	filename
arg	109:45	109:50	5	"at"
water	109:45	0:0	6	"at"
water	109:51	0:0	4	;
if	110:8	117:8	4	(p_sys -> p_file == NULL)
cond	110:12	110:29	5	p_sys -> p_file == NULL
water	110:12	0:0	6	p_sys
op	110:17	0:0	6	->
water	110:19	0:0	6	p_file
op	110:26	0:0	6	==
water	110:29	0:0	6	NULL
stmts	111:8	117:8	5	
water	111:8	0:0	6	{
call	112:12	113:43	6	msg_Err
arg	112:21	112:27	7	p_intf
water	112:21	0:0	8	p_intf
arg	112:29	112:61	7	"error opening logfile `%s': %s"
water	112:29	0:0	8	"error opening logfile `%s': %s"
arg	112:63	112:71	7	filename
water	112:63	0:0	8	filename
arg	113:21	113:43	7	vlc_strerror_c(errno)
call	113:21	113:41	8	vlc_strerror_c
arg	113:36	113:41	9	errno
water	113:36	0:0	10	errno
water	113:44	0:0	6	;
call	114:12	114:27	6	free
arg	114:18	114:27	7	psz_file
water	114:18	0:0	8	psz_file
water	114:28	0:0	6	;
call	115:12	115:24	6	free
arg	115:18	115:24	7	p_sys
water	115:18	0:0	8	p_sys
water	115:25	0:0	6	;
return	116:12	116:31	6	VLC_EGENERIC
water	116:19	0:0	7	VLC_EGENERIC
water	117:8	0:0	6	}
call	118:8	118:23	4	free
arg	118:14	118:23	5	psz_file
water	118:14	0:0	6	psz_file
water	118:24	0:0	4	;
call	119:8	119:48	4	setvbuf
arg	119:17	119:30	5	p_sys->p_file
water	119:17	0:0	6	p_sys
op	119:22	0:0	6	->
water	119:24	0:0	6	p_file
arg	119:32	119:36	5	NULL
water	119:32	0:0	6	NULL
arg	119:38	119:44	5	_IONBF
water	119:38	0:0	6	_IONBF
arg	119:46	119:48	5	0
water	119:46	0:0	6	0
water	119:49	0:0	4	;
call	120:8	120:37	4	fputs
arg	120:15	120:21	5	header
water	120:15	0:0	6	header
arg	120:23	120:37	5	p_sys->p_file
water	120:23	0:0	6	p_sys
op	120:28	0:0	6	->
water	120:30	0:0	6	p_file
water	120:38	0:0	4	;
water	121:4	0:0	4	}
call	122:4	122:45	2	vlc_LogSet
arg	122:16	122:32	3	p_intf->p_libvlc
water	122:16	0:0	4	p_intf
op	122:22	0:0	4	->
water	122:24	0:0	4	p_libvlc
arg	122:34	122:36	3	cb
water	122:34	0:0	4	cb
arg	122:38	122:45	3	p_intf
water	122:38	0:0	4	p_intf
water	122:46	0:0	2	;
return	123:4	123:22	2	VLC_SUCCESS
water	123:11	0:0	3	VLC_SUCCESS

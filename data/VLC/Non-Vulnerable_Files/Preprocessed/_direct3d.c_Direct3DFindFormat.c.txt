func	2:0	30:0	0	static const d3d_format_t *	Direct3DFindFormat
params	2:45	0:0	1	
param	2:46	2:64	2	vout_display_t *	vd
param	2:66	2:85	2	vlc_fourcc_t	chroma
param	2:87	2:103	2	D3DFORMAT	target
stmnts	0:0	29:15	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
decl	5:4	5:94	2	bool	hardware_scale_ok
op	5:27	0:0	2	=
op	5:29	0:0	2	!
water	5:30	0:0	2	(
water	5:31	0:0	2	vd
op	5:33	0:0	2	->
water	5:35	0:0	2	fmt
op	5:38	0:0	2	.
water	5:39	0:0	2	i_visible_width
op	5:55	0:0	2	&
water	5:57	0:0	2	1
water	5:58	0:0	2	)
op	5:60	0:0	2	&&
op	5:63	0:0	2	!
water	5:64	0:0	2	(
water	5:65	0:0	2	vd
op	5:67	0:0	2	->
water	5:69	0:0	2	fmt
op	5:72	0:0	2	.
water	5:73	0:0	2	i_visible_height
op	5:90	0:0	2	&
water	5:92	0:0	2	1
water	5:93	0:0	2	)
for	6:4	28:4	2	(unsigned pass = 0 ;pass < 2;pass ++)
forinit	6:9	6:26	3	unsigned pass = 0 ;
water	6:9	0:0	4	unsigned
water	6:18	0:0	4	pass
op	6:23	0:0	4	=
water	6:25	0:0	4	0
water	6:26	0:0	4	;
cond	6:28	6:35	3	pass < 2
water	6:28	0:0	4	pass
op	6:33	0:0	4	<
water	6:35	0:0	4	2
forexpr	6:38	6:42	3	pass ++
water	6:38	0:0	4	pass
op	6:42	0:0	4	++
stmts	6:46	28:4	3	
water	6:46	0:0	4	{
decl	7:8	7:32	4	const vlc_fourcc_t	*list
if	8:8	9:52	4	(pass == 0 && hardware_scale_ok && sys -> allow_hw_yuv &&vlc_fourcc_IsYUV (chroma ))
cond	8:12	8:90	5	pass == 0 && hardware_scale_ok && sys -> allow_hw_yuv &&vlc_fourcc_IsYUV (chroma )
water	8:12	0:0	6	pass
op	8:17	0:0	6	==
water	8:20	0:0	6	0
op	8:22	0:0	6	&&
water	8:25	0:0	6	hardware_scale_ok
op	8:43	0:0	6	&&
water	8:46	0:0	6	sys
op	8:49	0:0	6	->
water	8:51	0:0	6	allow_hw_yuv
op	8:64	0:0	6	&&
call	8:67	8:90	6	vlc_fourcc_IsYUV
arg	8:84	8:90	7	chroma
water	8:84	0:0	8	chroma
stmts	9:12	9:52	5	
water	9:12	0:0	6	list
op	9:17	0:0	6	=
call	9:19	9:51	6	vlc_fourcc_GetYUVFallback
arg	9:45	9:51	7	chroma
water	9:45	0:0	8	chroma
water	9:52	0:0	6	;
else	10:8	11:52	4
stmts	10:13	11:52	5	
if	10:13	11:52	6	(pass == 1)
cond	10:17	10:25	7	pass == 1
water	10:17	0:0	8	pass
op	10:22	0:0	8	==
water	10:25	0:0	8	1
stmts	11:12	11:52	7	
water	11:12	0:0	8	list
op	11:17	0:0	8	=
call	11:19	11:51	8	vlc_fourcc_GetRGBFallback
arg	11:45	11:51	9	chroma
water	11:45	0:0	10	chroma
water	11:52	0:0	8	;
else	12:8	13:20	4
stmts	13:12	13:20	5	
continue	13:12	13:20	6	
for	14:8	27:8	4	(unsigned i = 0 ;list [ i ] != 0;i ++)
forinit	14:13	14:27	5	unsigned i = 0 ;
water	14:13	0:0	6	unsigned
water	14:22	0:0	6	i
op	14:24	0:0	6	=
water	14:26	0:0	6	0
water	14:27	0:0	6	;
cond	14:29	14:40	5	list [ i ] != 0
water	14:29	0:0	6	list
op	14:33	0:0	6	[
water	14:34	0:0	6	i
op	14:35	0:0	6	]
op	14:37	0:0	6	!=
water	14:40	0:0	6	0
forexpr	14:43	14:44	5	i ++
water	14:43	0:0	6	i
op	14:44	0:0	6	++
stmts	14:48	27:8	5	
water	14:48	0:0	6	{
for	15:12	26:12	6	(unsigned j = 0 ;d3d_formats [ j ] . name;j ++)
forinit	15:17	15:31	7	unsigned j = 0 ;
water	15:17	0:0	8	unsigned
water	15:26	0:0	8	j
op	15:28	0:0	8	=
water	15:30	0:0	8	0
water	15:31	0:0	8	;
cond	15:33	15:48	7	d3d_formats [ j ] . name
water	15:33	0:0	8	d3d_formats
op	15:44	0:0	8	[
water	15:45	0:0	8	j
op	15:46	0:0	8	]
op	15:47	0:0	8	.
water	15:48	0:0	8	name
forexpr	15:54	15:55	7	j ++
water	15:54	0:0	8	j
op	15:55	0:0	8	++
stmts	15:59	26:12	7	
water	15:59	0:0	8	{
decl	16:16	16:60	8	const d3d_format_t	*format
op	16:43	0:0	8	=
op	16:45	0:0	8	&
water	16:46	0:0	8	d3d_formats
op	16:57	0:0	8	[
water	16:58	0:0	8	j
op	16:59	0:0	8	]
if	17:16	18:28	8	(format -> fourcc != list [ i ])
cond	17:20	17:44	9	format -> fourcc != list [ i ]
water	17:20	0:0	10	format
op	17:26	0:0	10	->
water	17:28	0:0	10	fourcc
op	17:35	0:0	10	!=
water	17:38	0:0	10	list
op	17:42	0:0	10	[
water	17:43	0:0	10	i
op	17:44	0:0	10	]
stmts	18:20	18:28	9	
continue	18:20	18:28	10	
call	19:16	20:37	8	msg_Warn
arg	19:25	19:27	9	vd
water	19:25	0:0	10	vd
arg	19:29	19:62	9	"trying surface pixel format: %s"
water	19:29	0:0	10	"trying surface pixel format: %s"
arg	20:25	20:37	9	format->name
water	20:25	0:0	10	format
op	20:31	0:0	10	->
water	20:33	0:0	10	name
water	20:38	0:0	8	;
if	21:16	25:16	8	(!Direct3DCheckConversion (vd ,format -> format ,target ))
cond	21:20	21:71	9	!Direct3DCheckConversion (vd ,format -> format ,target )
op	21:20	0:0	10	!
call	21:21	21:71	10	Direct3DCheckConversion
arg	21:45	21:47	11	vd
water	21:45	0:0	12	vd
arg	21:49	21:63	11	format->format
water	21:49	0:0	12	format
op	21:55	0:0	12	->
water	21:57	0:0	12	format
arg	21:65	21:71	11	target
water	21:65	0:0	12	target
stmts	21:74	25:16	9	
water	21:74	0:0	10	{
call	22:20	23:40	10	msg_Dbg
arg	22:28	22:30	11	vd
water	22:28	0:0	12	vd
arg	22:32	22:69	11	"selected surface pixel format is %s"
water	22:32	0:0	12	"selected surface pixel format is %s"
arg	23:28	23:40	11	format->name
water	23:28	0:0	12	format
op	23:34	0:0	12	->
water	23:36	0:0	12	name
water	23:41	0:0	10	;
return	24:20	24:33	10	format
water	24:27	0:0	11	format
water	25:16	0:0	10	}
water	26:12	0:0	8	}
water	27:8	0:0	6	}
water	28:4	0:0	4	}
return	29:4	29:15	2	NULL
water	29:11	0:0	3	NULL

func	2:16	57:0	0		CountMonitors
params	2:29	0:0	1	
param	2:31	2:49	2	vlc_object_t *	obj
stmnts	0:0	56:12	1	
decl	4:4	4:63	2	char	*psz_display
op	4:22	0:0	2	=
call	4:24	4:62	3	var_InheritString
arg	4:43	4:46	4	obj
water	4:43	0:0	5	obj
arg	4:48	4:62	4	"x11-display"
water	4:48	0:0	5	"x11-display"
decl	5:4	5:12	2	int	snum
decl	6:4	6:62	2	xcb_connection_t	*conn
op	6:27	0:0	2	=
call	6:29	6:61	3	xcb_connect
arg	6:42	6:53	4	psz_display
water	6:42	0:0	5	psz_display
arg	6:55	6:61	4	&snum
op	6:55	0:0	5	&
water	6:56	0:0	5	snum
call	7:4	7:22	2	free
arg	7:10	7:22	3	psz_display
water	7:10	0:0	4	psz_display
water	7:23	0:0	2	;
if	8:4	9:16	2	(xcb_connection_has_error (conn ))
cond	8:8	8:39	3	xcb_connection_has_error (conn )
call	8:8	8:39	4	xcb_connection_has_error
arg	8:34	8:39	5	conn
water	8:34	0:0	6	conn
stmts	9:8	9:16	3	
return	9:8	9:16	4	0
water	9:15	0:0	5	0
decl	10:4	10:52	2	const xcb_setup_t	*setup
op	10:29	0:0	2	=
call	10:31	10:51	3	xcb_get_setup
arg	10:46	10:51	4	conn
water	10:46	0:0	5	conn
decl	11:4	11:28	2	xcb_screen_t	*scr
op	11:22	0:0	2	=
water	11:24	0:0	2	NULL
for	12:4	21:4	2	( xcb_screen_iterator_t i =xcb_setup_roots_iterator (setup ) ;i . rem > 0;xcb_screen_next (& i ))
forinit	0:0	12:68	3	 xcb_screen_iterator_t i =xcb_setup_roots_iterator (setup ) ;
decl	12:9	12:68	4	xcb_screen_iterator_t	i
op	12:33	0:0	4	=
call	12:35	12:67	5	xcb_setup_roots_iterator
arg	12:61	12:67	6	setup
water	12:61	0:0	7	setup
cond	13:9	13:17	3	i . rem > 0
water	13:9	0:0	4	i
op	13:10	0:0	4	.
water	13:11	0:0	4	rem
op	13:15	0:0	4	>
water	13:17	0:0	4	0
forexpr	13:20	13:40	3	xcb_screen_next (& i )
call	13:20	13:40	4	xcb_screen_next
arg	13:37	13:40	5	&i
op	13:37	0:0	6	&
water	13:38	0:0	6	i
stmts	14:4	21:4	3	
water	14:4	0:0	4	{
if	15:9	19:9	4	(snum == 0)
cond	15:13	15:21	5	snum == 0
water	15:13	0:0	6	snum
op	15:18	0:0	6	==
water	15:21	0:0	6	0
stmts	16:9	19:9	5	
water	16:9	0:0	6	{
water	17:13	0:0	6	scr
op	17:17	0:0	6	=
water	17:19	0:0	6	i
op	17:20	0:0	6	.
water	17:21	0:0	6	data
water	17:25	0:0	6	;
break	18:13	18:18	6	
water	19:9	0:0	6	}
water	20:9	0:0	4	snum
op	20:13	0:0	4	--
water	20:15	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	unsigned
water	22:13	0:0	2	n
op	22:15	0:0	2	=
water	22:17	0:0	2	0
water	22:18	0:0	2	;
if	23:4	24:18	2	(scr == NULL)
cond	23:8	23:15	3	scr == NULL
water	23:8	0:0	4	scr
op	23:12	0:0	4	==
water	23:15	0:0	4	NULL
stmts	24:8	24:18	3	
goto	24:8	24:18	4	error
water	24:13	0:0	5	error
decl	25:4	27:57	2	xcb_randr_query_version_reply_t	*v
op	25:39	0:0	2	=
call	26:8	27:56	3	xcb_randr_query_version_reply
arg	26:39	26:43	4	conn
water	26:39	0:0	5	conn
arg	27:12	27:49	4	xcb_randr_query_version(conn,1,2)
call	27:12	27:48	5	xcb_randr_query_version
arg	27:37	27:41	6	conn
water	27:37	0:0	7	conn
arg	27:43	27:44	6	1
water	27:43	0:0	7	1
arg	27:46	27:48	6	2
water	27:46	0:0	7	2
arg	27:51	27:56	4	NULL
water	27:51	0:0	5	NULL
if	28:4	29:18	2	(v == NULL)
cond	28:8	28:13	3	v == NULL
water	28:8	0:0	4	v
op	28:10	0:0	4	==
water	28:13	0:0	4	NULL
stmts	29:8	29:18	3	
goto	29:8	29:18	4	error
water	29:13	0:0	5	error
call	30:4	31:48	2	msg_Dbg
arg	30:13	30:16	3	obj
water	30:13	0:0	4	obj
arg	30:18	30:62	3	"using X RandR extension v%"PRIu32".%"PRIu32
water	30:18	0:0	4	"using X RandR extension v%"
water	30:46	0:0	4	PRIu32
water	30:52	0:0	4	".%"
water	30:56	0:0	4	PRIu32
arg	31:13	31:29	3	v->major_version
water	31:13	0:0	4	v
op	31:14	0:0	4	->
water	31:16	0:0	4	major_version
arg	31:31	31:48	3	v->minor_version
water	31:31	0:0	4	v
op	31:32	0:0	4	->
water	31:34	0:0	4	minor_version
water	31:49	0:0	2	;
call	32:4	32:12	2	free
arg	32:10	32:12	3	v
water	32:10	0:0	4	v
water	32:13	0:0	2	;
decl	33:4	35:69	2	xcb_randr_get_screen_resources_reply_t	*r
op	33:46	0:0	2	=
call	34:8	35:68	3	xcb_randr_get_screen_resources_reply
arg	34:46	34:50	4	conn
water	34:46	0:0	5	conn
arg	35:12	35:61	4	xcb_randr_get_screen_resources(conn,scr->root)
call	35:12	35:60	5	xcb_randr_get_screen_resources
arg	35:44	35:48	6	conn
water	35:44	0:0	7	conn
arg	35:50	35:60	6	scr->root
water	35:50	0:0	7	scr
op	35:53	0:0	7	->
water	35:55	0:0	7	root
arg	35:63	35:68	4	NULL
water	35:63	0:0	5	NULL
if	36:4	37:18	2	(r == NULL)
cond	36:8	36:13	3	r == NULL
water	36:8	0:0	4	r
op	36:10	0:0	4	==
water	36:13	0:0	4	NULL
stmts	37:8	37:18	3	
goto	37:8	37:18	4	error
water	37:13	0:0	5	error
decl	38:4	39:51	2	const xcb_randr_output_t	*outputs
op	38:38	0:0	2	=
call	39:8	39:50	3	xcb_randr_get_screen_resources_outputs
arg	39:48	39:50	4	r
water	39:48	0:0	5	r
for	40:4	51:4	2	(unsigned i = 0 ;i < r -> num_outputs;i ++)
forinit	40:9	40:23	3	unsigned i = 0 ;
water	40:9	0:0	4	unsigned
water	40:18	0:0	4	i
op	40:20	0:0	4	=
water	40:22	0:0	4	0
water	40:23	0:0	4	;
cond	40:25	40:32	3	i < r -> num_outputs
water	40:25	0:0	4	i
op	40:27	0:0	4	<
water	40:29	0:0	4	r
op	40:30	0:0	4	->
water	40:32	0:0	4	num_outputs
forexpr	40:45	40:46	3	i ++
water	40:45	0:0	4	i
op	40:46	0:0	4	++
stmts	41:4	51:4	3	
water	41:4	0:0	4	{
decl	42:8	44:72	4	xcb_randr_get_output_info_reply_t	*output
op	42:50	0:0	4	=
call	43:12	44:71	5	xcb_randr_get_output_info_reply
arg	43:45	43:49	6	conn
water	43:45	0:0	7	conn
arg	44:16	44:64	6	xcb_randr_get_output_info(conn,outputs[i],0)
call	44:16	44:63	7	xcb_randr_get_output_info
arg	44:43	44:47	8	conn
water	44:43	0:0	9	conn
arg	44:49	44:59	8	outputs[i]
water	44:49	0:0	9	outputs
op	44:56	0:0	9	[
water	44:57	0:0	9	i
op	44:58	0:0	9	]
arg	44:61	44:63	8	0
water	44:61	0:0	9	0
arg	44:66	44:71	6	NULL
water	44:66	0:0	7	NULL
if	45:8	46:20	4	(output == NULL)
cond	45:12	45:22	5	output == NULL
water	45:12	0:0	6	output
op	45:19	0:0	6	==
water	45:22	0:0	6	NULL
stmts	46:12	46:20	5	
continue	46:12	46:20	6	
water	49:8	0:0	4	n
op	49:10	0:0	4	+=
water	49:13	0:0	4	output
op	49:19	0:0	4	->
water	49:21	0:0	4	connection
op	49:32	0:0	4	==
water	49:35	0:0	4	XCB_RANDR_CONNECTION_CONNECTED
water	49:65	0:0	4	;
call	50:8	50:21	4	free
arg	50:14	50:21	5	output
water	50:14	0:0	6	output
water	50:22	0:0	4	;
water	51:4	0:0	4	}
call	52:4	52:12	2	free
arg	52:10	52:12	3	r
water	52:10	0:0	4	r
water	52:13	0:0	2	;
call	53:4	53:46	2	msg_Dbg
arg	53:13	53:16	3	obj
water	53:13	0:0	4	obj
arg	53:18	53:42	3	"X randr has %u outputs"
water	53:18	0:0	4	"X randr has %u outputs"
arg	53:44	53:46	3	n
water	53:44	0:0	4	n
water	53:47	0:0	2	;
label	54:0	54:5	2	error :
call	55:4	55:25	2	xcb_disconnect
arg	55:20	55:25	3	conn
water	55:20	0:0	4	conn
water	55:26	0:0	2	;
return	56:4	56:12	2	n
water	56:11	0:0	3	n

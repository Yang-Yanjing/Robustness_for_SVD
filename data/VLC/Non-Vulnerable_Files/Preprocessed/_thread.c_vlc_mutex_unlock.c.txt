func	2:0	16:0	0	void	vlc_mutex_unlock
params	2:22	0:0	1	
param	2:23	2:43	2	vlc_mutex_t *	p_mutex
stmnts	4:4	15:42	1	
if	4:4	14:4	2	(! p_mutex -> dynamic)
cond	4:8	4:18	3	! p_mutex -> dynamic
op	4:8	0:0	4	!
water	4:9	0:0	4	p_mutex
op	4:16	0:0	4	->
water	4:18	0:0	4	dynamic
stmts	5:4	14:4	3	
water	5:4	0:0	4	{
call	6:8	6:39	4	assert
arg	6:16	6:39	5	p_mutex!=&super_mutex
water	6:16	0:0	6	p_mutex
op	6:24	0:0	6	!=
op	6:27	0:0	6	&
water	6:28	0:0	6	super_mutex
water	6:40	0:0	4	;
call	7:8	7:36	4	vlc_mutex_lock
arg	7:24	7:36	5	&super_mutex
op	7:24	0:0	6	&
water	7:25	0:0	6	super_mutex
water	7:37	0:0	4	;
call	8:8	8:31	4	assert
arg	8:16	8:31	5	p_mutex->locked
water	8:16	0:0	6	p_mutex
op	8:23	0:0	6	->
water	8:25	0:0	6	locked
water	8:32	0:0	4	;
water	9:8	0:0	4	p_mutex
op	9:15	0:0	4	->
water	9:17	0:0	4	locked
op	9:24	0:0	4	=
water	9:26	0:0	4	false
water	9:31	0:0	4	;
if	10:8	11:48	4	(p_mutex -> contention)
cond	10:12	10:21	5	p_mutex -> contention
water	10:12	0:0	6	p_mutex
op	10:19	0:0	6	->
water	10:21	0:0	6	contention
stmts	11:12	11:48	5	
call	11:12	11:47	6	vlc_cond_broadcast
arg	11:32	11:47	7	&super_variable
op	11:32	0:0	8	&
water	11:33	0:0	8	super_variable
water	11:48	0:0	6	;
call	12:8	12:38	4	vlc_mutex_unlock
arg	12:26	12:38	5	&super_mutex
op	12:26	0:0	6	&
water	12:27	0:0	6	super_mutex
water	12:39	0:0	4	;
return	13:8	13:14	4	
water	14:4	0:0	4	}
call	15:4	15:41	2	LeaveCriticalSection
arg	15:26	15:41	3	&p_mutex->mutex
op	15:26	0:0	4	&
water	15:27	0:0	4	p_mutex
op	15:34	0:0	4	->
water	15:36	0:0	4	mutex
water	15:42	0:0	2	;

func	2:0	70:0	0	static int	Extract
params	2:18	0:0	1	
param	2:20	2:32	2	vlc_va_t *	va
param	2:34	2:54	2	picture_t *	p_picture
param	2:56	2:68	2	void *	opaque
param	3:20	3:34	2	uint8_t *	data
stmnts	0:0	69:22	1	
decl	5:4	5:31	2	vlc_va_sys_t	*sys
op	5:22	0:0	2	=
water	5:24	0:0	2	va
op	5:26	0:0	2	->
water	5:28	0:0	2	sys
decl	6:4	6:59	2	VASurfaceID	i_surface_id
op	6:29	0:0	2	=
call	6:31	6:54	3	(VASurfaceID)
arg	6:45	6:54	4	uintptr_t
water	6:45	0:0	5	uintptr_t
water	6:55	0:0	2	data
if	8:4	12:27	2	(vaSyncSurface (sys -> p_display ,i_surface_id ))
cond	8:8	8:52	3	vaSyncSurface (sys -> p_display ,i_surface_id )
call	8:8	8:52	4	vaSyncSurface
arg	8:23	8:37	5	sys->p_display
water	8:23	0:0	6	sys
op	8:26	0:0	6	->
water	8:28	0:0	6	p_display
arg	8:39	8:52	5	i_surface_id
water	8:39	0:0	6	i_surface_id
stmts	10:4	12:27	3	
if	10:4	12:27	4	(vaSyncSurface (sys -> p_display ,sys -> i_context_id ,i_surface_id ))
cond	10:8	10:71	5	vaSyncSurface (sys -> p_display ,sys -> i_context_id ,i_surface_id )
call	10:8	10:71	6	vaSyncSurface
arg	10:23	10:37	7	sys->p_display
water	10:23	0:0	8	sys
op	10:26	0:0	8	->
water	10:28	0:0	8	p_display
arg	10:39	10:56	7	sys->i_context_id
water	10:39	0:0	8	sys
op	10:42	0:0	8	->
water	10:44	0:0	8	i_context_id
arg	10:58	10:71	7	i_surface_id
water	10:58	0:0	8	i_surface_id
stmts	12:8	12:27	5	
return	12:8	12:27	6	VLC_EGENERIC
water	12:15	0:0	7	VLC_EGENERIC
if	13:4	17:4	2	(sys -> b_supports_derive)
cond	13:7	13:12	3	sys -> b_supports_derive
water	13:7	0:0	4	sys
op	13:10	0:0	4	->
water	13:12	0:0	4	b_supports_derive
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
if	15:8	16:31	4	(vaDeriveImage (sys -> p_display ,i_surface_id ,& ( sys -> image ) ) != VA_STATUS_SUCCESS)
cond	15:11	15:73	5	vaDeriveImage (sys -> p_display ,i_surface_id ,& ( sys -> image ) ) != VA_STATUS_SUCCESS
call	15:11	15:68	6	vaDeriveImage
arg	15:25	15:39	7	sys->p_display
water	15:25	0:0	8	sys
op	15:28	0:0	8	->
water	15:30	0:0	8	p_display
arg	15:41	15:53	7	i_surface_id
water	15:41	0:0	8	i_surface_id
arg	15:55	15:68	7	&(sys->image)
op	15:55	0:0	8	&
water	15:56	0:0	8	(
water	15:57	0:0	8	sys
op	15:60	0:0	8	->
water	15:62	0:0	8	image
water	15:67	0:0	8	)
op	15:70	0:0	6	!=
water	15:73	0:0	6	VA_STATUS_SUCCESS
stmts	16:12	16:31	5	
return	16:12	16:31	6	VLC_EGENERIC
water	16:19	0:0	7	VLC_EGENERIC
water	17:4	0:0	4	}
else	18:4	24:4	2
stmts	19:4	24:4	3	
water	19:4	0:0	4	{
if	20:8	23:31	4	(vaGetImage (sys -> p_display ,i_surface_id ,0 ,0 ,sys -> i_surface_width ,sys -> i_surface_height ,sys -> image . image_id ))
cond	20:12	22:43	5	vaGetImage (sys -> p_display ,i_surface_id ,0 ,0 ,sys -> i_surface_width ,sys -> i_surface_height ,sys -> image . image_id )
call	20:12	22:43	6	vaGetImage
arg	20:24	20:38	7	sys->p_display
water	20:24	0:0	8	sys
op	20:27	0:0	8	->
water	20:29	0:0	8	p_display
arg	20:40	20:52	7	i_surface_id
water	20:40	0:0	8	i_surface_id
arg	21:24	21:25	7	0
water	21:24	0:0	8	0
arg	21:27	21:28	7	0
water	21:27	0:0	8	0
arg	21:30	21:50	7	sys->i_surface_width
water	21:30	0:0	8	sys
op	21:33	0:0	8	->
water	21:35	0:0	8	i_surface_width
arg	21:52	21:73	7	sys->i_surface_height
water	21:52	0:0	8	sys
op	21:55	0:0	8	->
water	21:57	0:0	8	i_surface_height
arg	22:24	22:43	7	sys->image.image_id
water	22:24	0:0	8	sys
op	22:27	0:0	8	->
water	22:29	0:0	8	image
op	22:34	0:0	8	.
water	22:35	0:0	8	image_id
stmts	23:12	23:31	5	
return	23:12	23:31	6	VLC_EGENERIC
water	23:19	0:0	7	VLC_EGENERIC
water	24:4	0:0	4	}
decl	25:4	25:16	2	void	*p_base
if	26:4	27:27	2	(vaMapBuffer (sys -> p_display ,sys -> image . buf ,& p_base ))
cond	26:8	26:61	3	vaMapBuffer (sys -> p_display ,sys -> image . buf ,& p_base )
call	26:8	26:61	4	vaMapBuffer
arg	26:21	26:35	5	sys->p_display
water	26:21	0:0	6	sys
op	26:24	0:0	6	->
water	26:26	0:0	6	p_display
arg	26:37	26:51	5	sys->image.buf
water	26:37	0:0	6	sys
op	26:40	0:0	6	->
water	26:42	0:0	6	image
op	26:47	0:0	6	.
water	26:48	0:0	6	buf
arg	26:53	26:61	5	&p_base
op	26:53	0:0	6	&
water	26:54	0:0	6	p_base
stmts	27:8	27:27	3	
return	27:8	27:27	4	VLC_EGENERIC
water	27:15	0:0	5	VLC_EGENERIC
decl	28:4	28:54	2	const uint32_t	i_fourcc
op	28:28	0:0	2	=
water	28:30	0:0	2	sys
op	28:33	0:0	2	->
water	28:35	0:0	2	image
op	28:40	0:0	2	.
water	28:41	0:0	2	format
op	28:47	0:0	2	.
water	28:48	0:0	2	fourcc
if	29:4	45:4	2	(i_fourcc == VA_FOURCC_YV12 || i_fourcc == VA_FOURCC_IYUV)
cond	29:8	30:20	3	i_fourcc == VA_FOURCC_YV12 || i_fourcc == VA_FOURCC_IYUV
water	29:8	0:0	4	i_fourcc
op	29:17	0:0	4	==
water	29:20	0:0	4	VA_FOURCC_YV12
op	29:35	0:0	4	||
water	30:8	0:0	4	i_fourcc
op	30:17	0:0	4	==
water	30:20	0:0	4	VA_FOURCC_IYUV
stmts	31:4	45:4	3	
water	31:4	0:0	4	{
decl	32:8	32:51	4	bool	b_swap_uv
op	32:23	0:0	4	=
water	32:25	0:0	4	i_fourcc
op	32:34	0:0	4	==
water	32:37	0:0	4	VA_FOURCC_IYUV
decl	33:8	33:28	4	uint8_t	*pp_plane[3]
decl	34:8	34:27	4	size_t	pi_pitch[3]
for	35:8	40:8	4	( int i = 0 ;i < 3;i ++)
forinit	0:0	35:22	5	 int i = 0 ;
decl	35:13	35:22	6	int	i
op	35:19	0:0	6	=
water	35:21	0:0	6	0
cond	35:24	35:28	5	i < 3
water	35:24	0:0	6	i
op	35:26	0:0	6	<
water	35:28	0:0	6	3
forexpr	35:31	35:32	5	i ++
water	35:31	0:0	6	i
op	35:32	0:0	6	++
stmts	36:8	40:8	5	
water	36:8	0:0	6	{
decl	37:12	37:72	6	const int	i_src_plane
op	37:34	0:0	6	=
water	37:36	0:0	6	(
water	37:37	0:0	6	b_swap_uv
op	37:47	0:0	6	&&
water	37:50	0:0	6	i
op	37:52	0:0	6	!=
water	37:55	0:0	6	0
water	37:56	0:0	6	)
water	37:58	0:0	6	?
water	37:61	0:0	6	(
water	37:62	0:0	6	3
op	37:64	0:0	6	-
water	37:66	0:0	6	i
water	37:67	0:0	6	)
water	37:69	0:0	6	:
water	37:71	0:0	6	i
water	38:12	0:0	6	pp_plane
op	38:20	0:0	6	[
water	38:21	0:0	6	i
op	38:22	0:0	6	]
op	38:24	0:0	6	=
water	38:26	0:0	6	(
water	38:27	0:0	6	uint8_t
op	38:34	0:0	6	*
water	38:35	0:0	6	)
water	38:36	0:0	6	p_base
op	38:43	0:0	6	+
water	38:45	0:0	6	sys
op	38:48	0:0	6	->
water	38:50	0:0	6	image
op	38:55	0:0	6	.
water	38:56	0:0	6	offsets
op	38:63	0:0	6	[
water	38:64	0:0	6	i_src_plane
op	38:75	0:0	6	]
water	38:76	0:0	6	;
water	39:12	0:0	6	pi_pitch
op	39:20	0:0	6	[
water	39:21	0:0	6	i
op	39:22	0:0	6	]
op	39:24	0:0	6	=
water	39:26	0:0	6	sys
op	39:29	0:0	6	->
water	39:31	0:0	6	image
op	39:36	0:0	6	.
water	39:37	0:0	6	pitches
op	39:44	0:0	6	[
water	39:45	0:0	6	i_src_plane
op	39:56	0:0	6	]
water	39:57	0:0	6	;
water	40:8	0:0	6	}
call	41:8	44:40	4	CopyFromYv12
arg	41:22	41:31	5	p_picture
water	41:22	0:0	6	p_picture
arg	41:33	41:41	5	pp_plane
water	41:33	0:0	6	pp_plane
arg	41:43	41:51	5	pi_pitch
water	41:43	0:0	6	pi_pitch
arg	42:22	42:42	5	sys->i_surface_width
water	42:22	0:0	6	sys
op	42:25	0:0	6	->
water	42:27	0:0	6	i_surface_width
arg	43:22	43:43	5	sys->i_surface_height
water	43:22	0:0	6	sys
op	43:25	0:0	6	->
water	43:27	0:0	6	i_surface_height
arg	44:22	44:40	5	&sys->image_cache
op	44:22	0:0	6	&
water	44:23	0:0	6	sys
op	44:26	0:0	6	->
water	44:28	0:0	6	image_cache
water	44:41	0:0	4	;
water	45:4	0:0	4	}
else	46:4	60:4	2
stmts	47:4	60:4	3	
water	47:4	0:0	4	{
call	48:8	48:43	4	assert
arg	48:16	48:43	5	i_fourcc==VA_FOURCC_NV12
water	48:16	0:0	6	i_fourcc
op	48:25	0:0	6	==
water	48:28	0:0	6	VA_FOURCC_NV12
water	48:44	0:0	4	;
decl	49:8	49:28	4	uint8_t	*pp_plane[2]
decl	50:8	50:27	4	size_t	pi_pitch[2]
for	51:8	55:8	4	( int i = 0 ;i < 2;i ++)
forinit	0:0	51:22	5	 int i = 0 ;
decl	51:13	51:22	6	int	i
op	51:19	0:0	6	=
water	51:21	0:0	6	0
cond	51:24	51:28	5	i < 2
water	51:24	0:0	6	i
op	51:26	0:0	6	<
water	51:28	0:0	6	2
forexpr	51:31	51:32	5	i ++
water	51:31	0:0	6	i
op	51:32	0:0	6	++
stmts	52:8	55:8	5	
water	52:8	0:0	6	{
water	53:12	0:0	6	pp_plane
op	53:20	0:0	6	[
water	53:21	0:0	6	i
op	53:22	0:0	6	]
op	53:24	0:0	6	=
water	53:26	0:0	6	(
water	53:27	0:0	6	uint8_t
op	53:34	0:0	6	*
water	53:35	0:0	6	)
water	53:36	0:0	6	p_base
op	53:43	0:0	6	+
water	53:45	0:0	6	sys
op	53:48	0:0	6	->
water	53:50	0:0	6	image
op	53:55	0:0	6	.
water	53:56	0:0	6	offsets
op	53:63	0:0	6	[
water	53:64	0:0	6	i
op	53:65	0:0	6	]
water	53:66	0:0	6	;
water	54:12	0:0	6	pi_pitch
op	54:20	0:0	6	[
water	54:21	0:0	6	i
op	54:22	0:0	6	]
op	54:24	0:0	6	=
water	54:26	0:0	6	sys
op	54:29	0:0	6	->
water	54:31	0:0	6	image
op	54:36	0:0	6	.
water	54:37	0:0	6	pitches
op	54:44	0:0	6	[
water	54:45	0:0	6	i
op	54:46	0:0	6	]
water	54:47	0:0	6	;
water	55:8	0:0	6	}
call	56:8	59:40	4	CopyFromNv12
arg	56:22	56:31	5	p_picture
water	56:22	0:0	6	p_picture
arg	56:33	56:41	5	pp_plane
water	56:33	0:0	6	pp_plane
arg	56:43	56:51	5	pi_pitch
water	56:43	0:0	6	pi_pitch
arg	57:22	57:42	5	sys->i_surface_width
water	57:22	0:0	6	sys
op	57:25	0:0	6	->
water	57:27	0:0	6	i_surface_width
arg	58:22	58:43	5	sys->i_surface_height
water	58:22	0:0	6	sys
op	58:25	0:0	6	->
water	58:27	0:0	6	i_surface_height
arg	59:22	59:40	5	&sys->image_cache
op	59:22	0:0	6	&
water	59:23	0:0	6	sys
op	59:26	0:0	6	->
water	59:28	0:0	6	image_cache
water	59:41	0:0	4	;
water	60:4	0:0	4	}
if	61:4	62:27	2	(vaUnmapBuffer (sys -> p_display ,sys -> image . buf ))
cond	61:8	61:54	3	vaUnmapBuffer (sys -> p_display ,sys -> image . buf )
call	61:8	61:54	4	vaUnmapBuffer
arg	61:23	61:37	5	sys->p_display
water	61:23	0:0	6	sys
op	61:26	0:0	6	->
water	61:28	0:0	6	p_display
arg	61:39	61:54	5	sys->image.buf
water	61:39	0:0	6	sys
op	61:42	0:0	6	->
water	61:44	0:0	6	image
op	61:49	0:0	6	.
water	61:50	0:0	6	buf
stmts	62:8	62:27	3	
return	62:8	62:27	4	VLC_EGENERIC
water	62:15	0:0	5	VLC_EGENERIC
if	63:4	67:4	2	(sys -> b_supports_derive)
cond	63:7	63:12	3	sys -> b_supports_derive
water	63:7	0:0	4	sys
op	63:10	0:0	4	->
water	63:12	0:0	4	b_supports_derive
stmts	64:4	67:4	3	
water	64:4	0:0	4	{
call	65:8	65:60	4	vaDestroyImage
arg	65:24	65:38	5	sys->p_display
water	65:24	0:0	6	sys
op	65:27	0:0	6	->
water	65:29	0:0	6	p_display
arg	65:40	65:60	5	sys->image.image_id
water	65:40	0:0	6	sys
op	65:43	0:0	6	->
water	65:45	0:0	6	image
op	65:50	0:0	6	.
water	65:51	0:0	6	image_id
water	65:61	0:0	4	;
water	66:8	0:0	4	sys
op	66:11	0:0	4	->
water	66:13	0:0	4	image
op	66:18	0:0	4	.
water	66:19	0:0	4	image_id
op	66:28	0:0	4	=
water	66:30	0:0	4	VA_INVALID_ID
water	66:43	0:0	4	;
water	67:4	0:0	4	}
water	68:4	0:0	2	(
water	68:5	0:0	2	void
water	68:9	0:0	2	)
water	68:11	0:0	2	opaque
water	68:17	0:0	2	;
return	69:4	69:22	2	VLC_SUCCESS
water	69:11	0:0	3	VLC_SUCCESS

func	2:0	24:0	0	static int	FrontendSetATSC
params	2:26	0:0	1	
param	2:28	2:47	2	access_t *	p_access
stmnts	0:0	23:22	1	
decl	4:4	4:41	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_access
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:38	2	struct dvb_frontend_parameters	fep
water	7:4	0:0	2	fep
op	7:7	0:0	2	.
water	7:8	0:0	2	frequency
op	7:18	0:0	2	=
call	7:20	7:62	2	var_GetInteger
arg	7:36	7:44	3	p_access
water	7:36	0:0	4	p_access
arg	7:46	7:62	3	"dvb-frequency"
water	7:46	0:0	4	"dvb-frequency"
water	7:63	0:0	2	;
water	8:4	0:0	2	fep
op	8:7	0:0	2	.
water	8:8	0:0	2	u
op	8:9	0:0	2	.
water	8:10	0:0	2	vsb
op	8:13	0:0	2	.
water	8:14	0:0	2	modulation
op	8:25	0:0	2	=
water	8:27	0:0	2	VSB_8
water	8:32	0:0	2	;
for	10:4	16:4	2	(;;)
forinit	10:9	10:9	3	;
water	10:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	11:4	16:4	3	
water	11:4	0:0	4	{
decl	12:8	12:39	4	struct dvb_frontend_event	event
if	13:8	15:17	4	(ioctl (p_sys -> i_frontend_handle ,FE_GET_EVENT ,& event ) < 0 && errno == EWOULDBLOCK)
cond	13:13	14:26	5	ioctl (p_sys -> i_frontend_handle ,FE_GET_EVENT ,& event ) < 0 && errno == EWOULDBLOCK
call	13:13	13:67	6	ioctl
arg	13:20	13:44	7	p_sys->i_frontend_handle
water	13:20	0:0	8	p_sys
op	13:25	0:0	8	->
water	13:27	0:0	8	i_frontend_handle
arg	13:46	13:58	7	FE_GET_EVENT
water	13:46	0:0	8	FE_GET_EVENT
arg	13:60	13:67	7	&event
op	13:60	0:0	8	&
water	13:61	0:0	8	event
op	13:69	0:0	6	<
water	13:71	0:0	6	0
op	14:14	0:0	6	&&
water	14:17	0:0	6	errno
op	14:23	0:0	6	==
water	14:26	0:0	6	EWOULDBLOCK
stmts	15:12	15:17	5	
break	15:12	15:17	6	
water	16:4	0:0	4	}
if	18:4	22:4	2	(ioctl (p_sys -> i_frontend_handle ,FE_SET_FRONTEND ,& fep ) < 0)
cond	18:8	18:67	3	ioctl (p_sys -> i_frontend_handle ,FE_SET_FRONTEND ,& fep ) < 0
call	18:8	18:63	4	ioctl
arg	18:15	18:39	5	p_sys->i_frontend_handle
water	18:15	0:0	6	p_sys
op	18:20	0:0	6	->
water	18:22	0:0	6	i_frontend_handle
arg	18:41	18:56	5	FE_SET_FRONTEND
water	18:41	0:0	6	FE_SET_FRONTEND
arg	18:58	18:63	5	&fep
op	18:58	0:0	6	&
water	18:59	0:0	6	fep
op	18:65	0:0	4	<
water	18:67	0:0	4	0
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:71	4	msg_Err
arg	20:17	20:25	5	p_access
water	20:17	0:0	6	p_access
arg	20:27	20:47	5	"frontend error: %s"
water	20:27	0:0	6	"frontend error: %s"
arg	20:49	20:71	5	vlc_strerror_c(errno)
call	20:49	20:69	6	vlc_strerror_c
arg	20:64	20:69	7	errno
water	20:64	0:0	8	errno
water	20:72	0:0	4	;
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
return	23:4	23:22	2	VLC_SUCCESS
water	23:11	0:0	3	VLC_SUCCESS

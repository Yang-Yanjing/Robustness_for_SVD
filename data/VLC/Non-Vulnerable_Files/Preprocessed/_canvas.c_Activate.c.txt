func	2:0	186:0	0	static int	Activate
params	2:19	0:0	1	
param	2:21	2:42	2	vlc_object_t *	p_this
stmnts	0:0	185:22	1	
decl	4:4	4:43	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
water	5:4	0:0	2	unsigned
water	5:13	0:0	2	i_canvas_width
water	5:27	0:0	2	;
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	i_canvas_height
water	6:28	0:0	2	;
water	7:4	0:0	2	unsigned
water	7:13	0:0	2	i_canvas_aspect
water	7:28	0:0	2	;
decl	8:4	8:19	2	es_format_t	fmt
decl	9:4	9:26	2	char	psz_croppadd[100]
decl	10:4	10:23	2	int	i_padd
water	10:14	0:0	2	,
decl	10:4	10:23	2	int	i_offset
decl	11:4	11:33	2	char	*psz_aspect
water	11:20	0:0	2	,
decl	11:4	11:33	2	char	*psz_parser
decl	12:4	12:15	2	bool	b_padd
water	13:4	0:0	2	unsigned
water	13:13	0:0	2	i_fmt_in_aspect
water	13:28	0:0	2	;
if	14:4	18:4	2	(! p_filter -> b_allow_fmt_out_change)
cond	14:8	14:19	3	! p_filter -> b_allow_fmt_out_change
op	14:8	0:0	4	!
water	14:9	0:0	4	p_filter
op	14:17	0:0	4	->
water	14:19	0:0	4	b_allow_fmt_out_change
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:65	4	msg_Err
arg	16:17	16:25	5	p_filter
water	16:17	0:0	6	p_filter
arg	16:27	16:65	5	"Picture format change isn't allowed"
water	16:27	0:0	6	"Picture format change isn't allowed"
water	16:66	0:0	4	;
return	17:8	17:27	4	VLC_EGENERIC
water	17:15	0:0	5	VLC_EGENERIC
water	18:4	0:0	4	}
if	19:4	23:4	2	(p_filter -> fmt_in . video . i_chroma != p_filter -> fmt_out . video . i_chroma)
cond	19:8	19:67	3	p_filter -> fmt_in . video . i_chroma != p_filter -> fmt_out . video . i_chroma
water	19:8	0:0	4	p_filter
op	19:16	0:0	4	->
water	19:18	0:0	4	fmt_in
op	19:24	0:0	4	.
water	19:25	0:0	4	video
op	19:30	0:0	4	.
water	19:31	0:0	4	i_chroma
op	19:40	0:0	4	!=
water	19:43	0:0	4	p_filter
op	19:51	0:0	4	->
water	19:53	0:0	4	fmt_out
op	19:60	0:0	4	.
water	19:61	0:0	4	video
op	19:66	0:0	4	.
water	19:67	0:0	4	i_chroma
stmts	20:4	23:4	3	
water	20:4	0:0	4	{
call	21:8	21:66	4	msg_Err
arg	21:17	21:25	5	p_filter
water	21:17	0:0	6	p_filter
arg	21:27	21:66	5	"Input and output chromas don't match"
water	21:27	0:0	6	"Input and output chromas don't match"
water	21:67	0:0	4	;
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
water	23:4	0:0	4	}
call	24:4	25:39	2	config_ChainParse
arg	24:23	24:31	3	p_filter
water	24:23	0:0	4	p_filter
arg	24:33	24:43	3	CFG_PREFIX
water	24:33	0:0	4	CFG_PREFIX
arg	24:45	24:64	3	ppsz_filter_options
water	24:45	0:0	4	ppsz_filter_options
arg	25:23	25:39	3	p_filter->p_cfg
water	25:23	0:0	4	p_filter
op	25:31	0:0	4	->
water	25:33	0:0	4	p_cfg
water	25:40	0:0	2	;
water	26:4	0:0	2	i_canvas_width
op	26:19	0:0	2	=
call	26:21	26:72	2	var_CreateGetInteger
arg	26:43	26:51	3	p_filter
water	26:43	0:0	4	p_filter
arg	26:53	26:72	3	CFG_PREFIX"width"
water	26:53	0:0	4	CFG_PREFIX
water	26:64	0:0	4	"width"
water	26:73	0:0	2	;
water	27:4	0:0	2	i_canvas_height
op	27:20	0:0	2	=
call	27:22	27:74	2	var_CreateGetInteger
arg	27:44	27:52	3	p_filter
water	27:44	0:0	4	p_filter
arg	27:54	27:74	3	CFG_PREFIX"height"
water	27:54	0:0	4	CFG_PREFIX
water	27:65	0:0	4	"height"
water	27:75	0:0	2	;
if	28:4	32:4	2	(i_canvas_width == 0 || i_canvas_height == 0)
cond	28:8	28:50	3	i_canvas_width == 0 || i_canvas_height == 0
water	28:8	0:0	4	i_canvas_width
op	28:23	0:0	4	==
water	28:26	0:0	4	0
op	28:28	0:0	4	||
water	28:31	0:0	4	i_canvas_height
op	28:47	0:0	4	==
water	28:50	0:0	4	0
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
call	30:8	30:66	4	msg_Err
arg	30:17	30:25	5	p_filter
water	30:17	0:0	6	p_filter
arg	30:27	30:66	5	"Width and height options must be set"
water	30:27	0:0	6	"Width and height options must be set"
water	30:67	0:0	4	;
return	31:8	31:27	4	VLC_EGENERIC
water	31:15	0:0	5	VLC_EGENERIC
water	32:4	0:0	4	}
if	33:4	39:4	2	(i_canvas_width & 1 || i_canvas_height & 1)
cond	33:8	33:48	3	i_canvas_width & 1 || i_canvas_height & 1
water	33:8	0:0	4	i_canvas_width
op	33:23	0:0	4	&
water	33:25	0:0	4	1
op	33:27	0:0	4	||
water	33:30	0:0	4	i_canvas_height
op	33:46	0:0	4	&
water	33:48	0:0	4	1
stmts	34:4	39:4	3	
water	34:4	0:0	4	{
call	37:8	37:76	4	msg_Err
arg	37:17	37:25	5	p_filter
water	37:17	0:0	6	p_filter
arg	37:27	37:76	5	"Width and height options must be even integers"
water	37:27	0:0	6	"Width and height options must be even integers"
water	37:77	0:0	4	;
return	38:8	38:27	4	VLC_EGENERIC
water	38:15	0:0	5	VLC_EGENERIC
water	39:4	0:0	4	}
if	40:4	45:61	2	(p_filter -> fmt_in . video . i_sar_num)
cond	40:8	40:31	3	p_filter -> fmt_in . video . i_sar_num
water	40:8	0:0	4	p_filter
op	40:16	0:0	4	->
water	40:18	0:0	4	fmt_in
op	40:24	0:0	4	.
water	40:25	0:0	4	video
op	40:30	0:0	4	.
water	40:31	0:0	4	i_sar_num
stmts	41:8	45:61	3	
water	41:8	0:0	4	i_fmt_in_aspect
op	41:24	0:0	4	=
water	41:26	0:0	4	(
water	41:27	0:0	4	int64_t
water	41:34	0:0	4	)
water	41:35	0:0	4	p_filter
op	41:43	0:0	4	->
water	41:45	0:0	4	fmt_in
op	41:51	0:0	4	.
water	41:52	0:0	4	video
op	41:57	0:0	4	.
water	41:58	0:0	4	i_sar_num
op	41:68	0:0	4	*
water	42:22	0:0	4	p_filter
op	42:30	0:0	4	->
water	42:32	0:0	4	fmt_in
op	42:38	0:0	4	.
water	42:39	0:0	4	video
op	42:44	0:0	4	.
water	42:45	0:0	4	i_visible_width
op	42:61	0:0	4	*
water	43:22	0:0	4	VOUT_ASPECT_FACTOR
op	43:41	0:0	4	/
water	44:22	0:0	4	p_filter
op	44:30	0:0	4	->
water	44:32	0:0	4	fmt_in
op	44:38	0:0	4	.
water	44:39	0:0	4	video
op	44:44	0:0	4	.
water	44:45	0:0	4	i_sar_den
op	44:55	0:0	4	/
water	45:22	0:0	4	p_filter
op	45:30	0:0	4	->
water	45:32	0:0	4	fmt_in
op	45:38	0:0	4	.
water	45:39	0:0	4	video
op	45:44	0:0	4	.
water	45:45	0:0	4	i_visible_height
water	45:61	0:0	4	;
else	46:4	49:61	2
stmts	47:8	49:61	3	
water	47:8	0:0	4	i_fmt_in_aspect
op	47:24	0:0	4	=
water	47:26	0:0	4	(
water	47:27	0:0	4	int64_t
water	47:34	0:0	4	)
water	47:35	0:0	4	p_filter
op	47:43	0:0	4	->
water	47:45	0:0	4	fmt_in
op	47:51	0:0	4	.
water	47:52	0:0	4	video
op	47:57	0:0	4	.
water	47:58	0:0	4	i_visible_width
op	47:74	0:0	4	*
water	48:22	0:0	4	VOUT_ASPECT_FACTOR
op	48:41	0:0	4	/
water	49:22	0:0	4	p_filter
op	49:30	0:0	4	->
water	49:32	0:0	4	fmt_in
op	49:38	0:0	4	.
water	49:39	0:0	4	video
op	49:44	0:0	4	.
water	49:45	0:0	4	i_visible_height
water	49:61	0:0	4	;
water	50:4	0:0	2	psz_aspect
op	50:15	0:0	2	=
call	50:17	50:76	2	var_CreateGetNonEmptyString
arg	50:46	50:54	3	p_filter
water	50:46	0:0	4	p_filter
arg	50:56	50:76	3	CFG_PREFIX"aspect"
water	50:56	0:0	4	CFG_PREFIX
water	50:67	0:0	4	"aspect"
water	50:77	0:0	2	;
if	51:4	64:4	2	(psz_aspect)
cond	51:8	51:8	3	psz_aspect
water	51:8	0:0	4	psz_aspect
stmts	52:4	64:4	3	
water	52:4	0:0	4	{
water	53:8	0:0	4	psz_parser
op	53:19	0:0	4	=
call	53:21	53:45	4	strchr
arg	53:29	53:39	5	psz_aspect
water	53:29	0:0	6	psz_aspect
arg	53:41	53:45	5	':'
water	53:41	0:0	6	':'
water	53:46	0:0	4	;
decl	54:8	54:42	4	int	numerator
op	54:22	0:0	4	=
call	54:24	54:41	5	atoi
arg	54:30	54:41	6	psz_aspect
water	54:30	0:0	7	psz_aspect
decl	55:8	55:63	4	int	denominator
op	55:24	0:0	4	=
water	55:26	0:0	4	psz_parser
water	55:37	0:0	4	?
call	55:39	55:58	5	atoi
arg	55:45	55:58	6	psz_parser+1
water	55:45	0:0	7	psz_parser
op	55:55	0:0	7	+
water	55:56	0:0	7	1
water	55:60	0:0	4	:
water	55:62	0:0	4	0
water	56:8	0:0	4	denominator
op	56:20	0:0	4	=
water	56:22	0:0	4	denominator
op	56:34	0:0	4	==
water	56:37	0:0	4	0
water	56:39	0:0	4	?
water	56:41	0:0	4	1
water	56:43	0:0	4	:
water	56:45	0:0	4	denominator
water	56:56	0:0	4	;
water	57:8	0:0	4	i_canvas_aspect
op	57:24	0:0	4	=
water	57:26	0:0	4	numerator
op	57:36	0:0	4	*
water	57:38	0:0	4	VOUT_ASPECT_FACTOR
op	57:57	0:0	4	/
water	57:59	0:0	4	denominator
water	57:70	0:0	4	;
call	58:8	58:25	4	free
arg	58:14	58:25	5	psz_aspect
water	58:14	0:0	6	psz_aspect
water	58:26	0:0	4	;
if	59:8	63:8	4	(numerator <= 0 || denominator < 0)
cond	59:12	59:44	5	numerator <= 0 || denominator < 0
water	59:12	0:0	6	numerator
op	59:22	0:0	6	<=
water	59:25	0:0	6	0
op	59:27	0:0	6	||
water	59:30	0:0	6	denominator
op	59:42	0:0	6	<
water	59:44	0:0	6	0
stmts	60:8	63:8	5	
water	60:8	0:0	6	{
call	61:12	61:72	6	msg_Err
arg	61:21	61:29	7	p_filter
water	61:21	0:0	8	p_filter
arg	61:31	61:72	7	"Aspect ratio must be strictly positive"
water	61:31	0:0	8	"Aspect ratio must be strictly positive"
water	61:73	0:0	6	;
return	62:12	62:31	6	VLC_EGENERIC
water	62:19	0:0	7	VLC_EGENERIC
water	63:8	0:0	6	}
water	64:4	0:0	4	}
else	65:4	75:4	2
stmts	66:4	75:4	3	
water	66:4	0:0	4	{
water	71:8	0:0	4	i_canvas_aspect
op	71:24	0:0	4	=
water	71:26	0:0	4	(
water	71:27	0:0	4	uint64_t
water	71:35	0:0	4	)
water	71:37	0:0	4	p_filter
op	71:45	0:0	4	->
water	71:47	0:0	4	fmt_in
op	71:53	0:0	4	.
water	71:54	0:0	4	video
op	71:59	0:0	4	.
water	71:60	0:0	4	i_visible_height
op	72:24	0:0	4	*
water	72:26	0:0	4	i_fmt_in_aspect
op	73:24	0:0	4	*
water	73:26	0:0	4	i_canvas_width
op	74:24	0:0	4	/
water	74:26	0:0	4	(
water	74:27	0:0	4	i_canvas_height
op	74:43	0:0	4	*
water	74:45	0:0	4	p_filter
op	74:53	0:0	4	->
water	74:55	0:0	4	fmt_in
op	74:61	0:0	4	.
water	74:62	0:0	4	video
op	74:67	0:0	4	.
water	74:68	0:0	4	i_visible_width
water	74:83	0:0	4	)
water	74:84	0:0	4	;
water	75:4	0:0	4	}
water	76:4	0:0	2	b_padd
op	76:11	0:0	2	=
call	76:13	76:60	2	var_CreateGetBool
arg	76:32	76:40	3	p_filter
water	76:32	0:0	4	p_filter
arg	76:42	76:60	3	CFG_PREFIX"padd"
water	76:42	0:0	4	CFG_PREFIX
water	76:53	0:0	4	"padd"
water	76:61	0:0	2	;
decl	77:4	77:74	2	filter_sys_t	*p_sys
op	77:24	0:0	2	=
water	77:26	0:0	2	(
water	77:27	0:0	2	filter_sys_t
op	77:40	0:0	2	*
water	77:41	0:0	2	)
call	77:42	77:73	3	malloc
arg	77:50	77:73	4	sizeof(filter_sys_t)
op	77:50	0:0	5	sizeof
water	77:56	0:0	5	(
water	77:58	0:0	5	filter_sys_t
water	77:71	0:0	5	)
if	78:4	79:25	2	(! p_sys)
cond	78:8	78:9	3	! p_sys
op	78:8	0:0	4	!
water	78:9	0:0	4	p_sys
stmts	79:8	79:25	3	
return	79:8	79:25	4	VLC_ENOMEM
water	79:15	0:0	5	VLC_ENOMEM
water	80:4	0:0	2	p_filter
op	80:12	0:0	2	->
water	80:14	0:0	2	p_sys
op	80:20	0:0	2	=
water	80:22	0:0	2	p_sys
water	80:27	0:0	2	;
water	81:4	0:0	2	p_sys
op	81:9	0:0	2	->
water	81:11	0:0	2	p_chain
op	81:19	0:0	2	=
call	81:21	82:66	2	filter_chain_New
arg	81:39	81:47	3	p_filter
water	81:39	0:0	4	p_filter
arg	81:49	81:64	3	"video filter2"
water	81:49	0:0	4	"video filter2"
arg	81:66	81:70	3	true
water	81:66	0:0	4	true
arg	82:39	82:49	3	alloc_init
water	82:39	0:0	4	alloc_init
arg	82:51	82:55	3	NULL
water	82:51	0:0	4	NULL
arg	82:57	82:66	3	p_filter
water	82:57	0:0	4	p_filter
water	82:67	0:0	2	;
if	83:4	88:4	2	(! p_sys -> p_chain)
cond	83:8	83:16	3	! p_sys -> p_chain
op	83:8	0:0	4	!
water	83:9	0:0	4	p_sys
op	83:14	0:0	4	->
water	83:16	0:0	4	p_chain
stmts	84:4	88:4	3	
water	84:4	0:0	4	{
call	85:8	85:61	4	msg_Err
arg	85:17	85:25	5	p_filter
water	85:17	0:0	6	p_filter
arg	85:27	85:61	5	"Could not allocate filter chain"
water	85:27	0:0	6	"Could not allocate filter chain"
water	85:62	0:0	4	;
call	86:8	86:20	4	free
arg	86:14	86:20	5	p_sys
water	86:14	0:0	6	p_sys
water	86:21	0:0	4	;
return	87:8	87:27	4	VLC_EGENERIC
water	87:15	0:0	5	VLC_EGENERIC
water	88:4	0:0	4	}
call	89:4	89:44	2	es_format_Copy
arg	89:20	89:24	3	&fmt
op	89:20	0:0	4	&
water	89:21	0:0	4	fmt
arg	89:26	89:44	3	&p_filter->fmt_in
op	89:26	0:0	4	&
water	89:27	0:0	4	p_filter
op	89:35	0:0	4	->
water	89:37	0:0	4	fmt_in
water	89:45	0:0	2	;
water	91:4	0:0	2	fmt
op	91:7	0:0	2	.
water	91:8	0:0	2	video
op	91:13	0:0	2	.
water	91:14	0:0	2	i_visible_width
op	91:30	0:0	2	=
water	91:32	0:0	2	i_canvas_width
water	91:46	0:0	2	;
water	92:4	0:0	2	fmt
op	92:7	0:0	2	.
water	92:8	0:0	2	video
op	92:13	0:0	2	.
water	92:14	0:0	2	i_visible_height
op	92:31	0:0	2	=
water	92:33	0:0	2	i_canvas_height
water	92:48	0:0	2	;
if	93:4	126:4	2	(b_padd)
cond	93:8	93:8	3	b_padd
water	93:8	0:0	4	b_padd
stmts	94:4	126:4	3	
water	94:4	0:0	4	{
if	96:8	112:8	4	(i_canvas_aspect > i_fmt_in_aspect)
cond	96:12	96:30	5	i_canvas_aspect > i_fmt_in_aspect
water	96:12	0:0	6	i_canvas_aspect
op	96:28	0:0	6	>
water	96:30	0:0	6	i_fmt_in_aspect
stmts	97:8	112:8	5	
water	97:8	0:0	6	{
water	104:12	0:0	6	fmt
op	104:15	0:0	6	.
water	104:16	0:0	6	video
op	104:21	0:0	6	.
water	104:22	0:0	6	i_visible_width
op	104:38	0:0	6	=
water	104:40	0:0	6	i_canvas_width
op	105:30	0:0	6	*
water	105:32	0:0	6	i_fmt_in_aspect
op	106:30	0:0	6	/
water	106:32	0:0	6	i_canvas_aspect
water	106:47	0:0	6	;
if	107:12	107:78	6	(fmt . video . i_visible_width & 1)
cond	107:16	107:44	7	fmt . video . i_visible_width & 1
water	107:16	0:0	8	fmt
op	107:19	0:0	8	.
water	107:20	0:0	8	video
op	107:25	0:0	8	.
water	107:26	0:0	8	i_visible_width
op	107:42	0:0	8	&
water	107:44	0:0	8	1
stmts	107:48	107:78	7	
water	107:48	0:0	8	fmt
op	107:51	0:0	8	.
water	107:52	0:0	8	video
op	107:57	0:0	8	.
water	107:58	0:0	8	i_visible_width
op	107:74	0:0	8	-=
water	107:77	0:0	8	1
water	107:78	0:0	8	;
water	108:12	0:0	6	i_padd
op	108:19	0:0	6	=
water	108:21	0:0	6	(
water	108:22	0:0	6	i_canvas_width
op	108:37	0:0	6	-
water	108:39	0:0	6	fmt
op	108:42	0:0	6	.
water	108:43	0:0	6	video
op	108:48	0:0	6	.
water	108:49	0:0	6	i_visible_width
water	108:64	0:0	6	)
op	108:66	0:0	6	/
water	108:68	0:0	6	2
water	108:69	0:0	6	;
water	109:12	0:0	6	i_offset
op	109:21	0:0	6	=
water	109:23	0:0	6	(
water	109:24	0:0	6	i_padd
op	109:31	0:0	6	&
water	109:33	0:0	6	1
water	109:34	0:0	6	)
water	109:35	0:0	6	;
call	110:12	111:59	6	snprintf
arg	110:22	110:34	7	psz_croppadd
water	110:22	0:0	8	psz_croppadd
arg	110:36	110:39	7	100
water	110:36	0:0	8	100
arg	110:41	110:77	7	"croppadd{paddleft=%d,paddright=%d}"
water	110:41	0:0	8	"croppadd{paddleft=%d,paddright=%d}"
arg	111:22	111:39	7	i_padd-i_offset
water	111:22	0:0	8	i_padd
op	111:29	0:0	8	-
water	111:31	0:0	8	i_offset
arg	111:41	111:59	7	i_padd+i_offset
water	111:41	0:0	8	i_padd
op	111:48	0:0	8	+
water	111:50	0:0	8	i_offset
water	111:60	0:0	6	;
water	112:8	0:0	6	}
else	113:8	125:8	4
stmts	114:8	125:8	5	
water	114:8	0:0	6	{
water	117:12	0:0	6	fmt
op	117:15	0:0	6	.
water	117:16	0:0	6	video
op	117:21	0:0	6	.
water	117:22	0:0	6	i_visible_height
op	117:39	0:0	6	=
water	117:41	0:0	6	i_canvas_height
op	118:31	0:0	6	*
water	118:33	0:0	6	i_canvas_aspect
op	119:31	0:0	6	/
water	119:33	0:0	6	i_fmt_in_aspect
water	119:48	0:0	6	;
if	120:12	120:80	6	(fmt . video . i_visible_height & 1)
cond	120:16	120:45	7	fmt . video . i_visible_height & 1
water	120:16	0:0	8	fmt
op	120:19	0:0	8	.
water	120:20	0:0	8	video
op	120:25	0:0	8	.
water	120:26	0:0	8	i_visible_height
op	120:43	0:0	8	&
water	120:45	0:0	8	1
stmts	120:49	120:80	7	
water	120:49	0:0	8	fmt
op	120:52	0:0	8	.
water	120:53	0:0	8	video
op	120:58	0:0	8	.
water	120:59	0:0	8	i_visible_height
op	120:76	0:0	8	-=
water	120:79	0:0	8	1
water	120:80	0:0	8	;
water	121:12	0:0	6	i_padd
op	121:19	0:0	6	=
water	121:21	0:0	6	(
water	121:22	0:0	6	i_canvas_height
op	121:38	0:0	6	-
water	121:40	0:0	6	fmt
op	121:43	0:0	6	.
water	121:44	0:0	6	video
op	121:49	0:0	6	.
water	121:50	0:0	6	i_visible_height
water	121:67	0:0	6	)
op	121:69	0:0	6	/
water	121:71	0:0	6	2
water	121:72	0:0	6	;
water	122:12	0:0	6	i_offset
op	122:21	0:0	6	=
water	122:23	0:0	6	(
water	122:24	0:0	6	i_padd
op	122:31	0:0	6	&
water	122:33	0:0	6	1
water	122:34	0:0	6	)
water	122:35	0:0	6	;
call	123:12	124:59	6	snprintf
arg	123:22	123:34	7	psz_croppadd
water	123:22	0:0	8	psz_croppadd
arg	123:36	123:39	7	100
water	123:36	0:0	8	100
arg	123:41	123:77	7	"croppadd{paddtop=%d,paddbottom=%d}"
water	123:41	0:0	8	"croppadd{paddtop=%d,paddbottom=%d}"
arg	124:22	124:39	7	i_padd-i_offset
water	124:22	0:0	8	i_padd
op	124:29	0:0	8	-
water	124:31	0:0	8	i_offset
arg	124:41	124:59	7	i_padd+i_offset
water	124:41	0:0	8	i_padd
op	124:48	0:0	8	+
water	124:50	0:0	8	i_offset
water	124:60	0:0	6	;
water	125:8	0:0	6	}
water	126:4	0:0	4	}
else	127:4	156:4	2
stmts	128:4	156:4	3	
water	128:4	0:0	4	{
if	130:8	142:8	4	(i_canvas_aspect < i_fmt_in_aspect)
cond	130:12	130:30	5	i_canvas_aspect < i_fmt_in_aspect
water	130:12	0:0	6	i_canvas_aspect
op	130:28	0:0	6	<
water	130:30	0:0	6	i_fmt_in_aspect
stmts	131:8	142:8	5	
water	131:8	0:0	6	{
water	134:12	0:0	6	fmt
op	134:15	0:0	6	.
water	134:16	0:0	6	video
op	134:21	0:0	6	.
water	134:22	0:0	6	i_visible_width
op	134:38	0:0	6	=
water	134:40	0:0	6	i_canvas_width
op	135:30	0:0	6	*
water	135:32	0:0	6	i_fmt_in_aspect
op	136:30	0:0	6	/
water	136:32	0:0	6	i_canvas_aspect
water	136:47	0:0	6	;
if	137:12	137:78	6	(fmt . video . i_visible_width & 1)
cond	137:16	137:44	7	fmt . video . i_visible_width & 1
water	137:16	0:0	8	fmt
op	137:19	0:0	8	.
water	137:20	0:0	8	video
op	137:25	0:0	8	.
water	137:26	0:0	8	i_visible_width
op	137:42	0:0	8	&
water	137:44	0:0	8	1
stmts	137:48	137:78	7	
water	137:48	0:0	8	fmt
op	137:51	0:0	8	.
water	137:52	0:0	8	video
op	137:57	0:0	8	.
water	137:58	0:0	8	i_visible_width
op	137:74	0:0	8	-=
water	137:77	0:0	8	1
water	137:78	0:0	8	;
water	138:12	0:0	6	i_padd
op	138:19	0:0	6	=
water	138:21	0:0	6	(
water	138:22	0:0	6	fmt
op	138:25	0:0	6	.
water	138:26	0:0	6	video
op	138:31	0:0	6	.
water	138:32	0:0	6	i_visible_width
op	138:48	0:0	6	-
water	138:50	0:0	6	i_canvas_width
water	138:64	0:0	6	)
op	138:66	0:0	6	/
water	138:68	0:0	6	2
water	138:69	0:0	6	;
water	139:12	0:0	6	i_offset
op	139:21	0:0	6	=
water	139:23	0:0	6	(
water	139:24	0:0	6	i_padd
op	139:31	0:0	6	&
water	139:33	0:0	6	1
water	139:34	0:0	6	)
water	139:35	0:0	6	;
call	140:12	141:59	6	snprintf
arg	140:22	140:34	7	psz_croppadd
water	140:22	0:0	8	psz_croppadd
arg	140:36	140:39	7	100
water	140:36	0:0	8	100
arg	140:41	140:77	7	"croppadd{cropleft=%d,cropright=%d}"
water	140:41	0:0	8	"croppadd{cropleft=%d,cropright=%d}"
arg	141:22	141:39	7	i_padd-i_offset
water	141:22	0:0	8	i_padd
op	141:29	0:0	8	-
water	141:31	0:0	8	i_offset
arg	141:41	141:59	7	i_padd+i_offset
water	141:41	0:0	8	i_padd
op	141:48	0:0	8	+
water	141:50	0:0	8	i_offset
water	141:60	0:0	6	;
water	142:8	0:0	6	}
else	143:8	155:8	4
stmts	144:8	155:8	5	
water	144:8	0:0	6	{
water	147:12	0:0	6	fmt
op	147:15	0:0	6	.
water	147:16	0:0	6	video
op	147:21	0:0	6	.
water	147:22	0:0	6	i_visible_height
op	147:39	0:0	6	=
water	147:41	0:0	6	i_canvas_height
op	148:31	0:0	6	*
water	148:33	0:0	6	i_canvas_aspect
op	149:31	0:0	6	/
water	149:33	0:0	6	i_fmt_in_aspect
water	149:48	0:0	6	;
if	150:12	150:80	6	(fmt . video . i_visible_height & 1)
cond	150:16	150:45	7	fmt . video . i_visible_height & 1
water	150:16	0:0	8	fmt
op	150:19	0:0	8	.
water	150:20	0:0	8	video
op	150:25	0:0	8	.
water	150:26	0:0	8	i_visible_height
op	150:43	0:0	8	&
water	150:45	0:0	8	1
stmts	150:49	150:80	7	
water	150:49	0:0	8	fmt
op	150:52	0:0	8	.
water	150:53	0:0	8	video
op	150:58	0:0	8	.
water	150:59	0:0	8	i_visible_height
op	150:76	0:0	8	-=
water	150:79	0:0	8	1
water	150:80	0:0	8	;
water	151:12	0:0	6	i_padd
op	151:19	0:0	6	=
water	151:21	0:0	6	(
water	151:22	0:0	6	fmt
op	151:25	0:0	6	.
water	151:26	0:0	6	video
op	151:31	0:0	6	.
water	151:32	0:0	6	i_visible_height
op	151:49	0:0	6	-
water	151:51	0:0	6	i_canvas_height
water	151:66	0:0	6	)
op	151:68	0:0	6	/
water	151:70	0:0	6	2
water	151:71	0:0	6	;
water	152:12	0:0	6	i_offset
op	152:21	0:0	6	=
water	152:23	0:0	6	(
water	152:24	0:0	6	i_padd
op	152:31	0:0	6	&
water	152:33	0:0	6	1
water	152:34	0:0	6	)
water	152:35	0:0	6	;
call	153:12	154:59	6	snprintf
arg	153:22	153:34	7	psz_croppadd
water	153:22	0:0	8	psz_croppadd
arg	153:36	153:39	7	100
water	153:36	0:0	8	100
arg	153:41	153:77	7	"croppadd{croptop=%d,cropbottom=%d}"
water	153:41	0:0	8	"croppadd{croptop=%d,cropbottom=%d}"
arg	154:22	154:39	7	i_padd-i_offset
water	154:22	0:0	8	i_padd
op	154:29	0:0	8	-
water	154:31	0:0	8	i_offset
arg	154:41	154:59	7	i_padd+i_offset
water	154:41	0:0	8	i_padd
op	154:48	0:0	8	+
water	154:50	0:0	8	i_offset
water	154:60	0:0	6	;
water	155:8	0:0	6	}
water	156:4	0:0	4	}
water	161:4	0:0	2	fmt
op	161:7	0:0	2	.
water	161:8	0:0	2	video
op	161:13	0:0	2	.
water	161:14	0:0	2	i_width
op	161:22	0:0	2	=
water	161:24	0:0	2	p_filter
op	161:32	0:0	2	->
water	161:34	0:0	2	fmt_in
op	161:40	0:0	2	.
water	161:41	0:0	2	video
op	161:46	0:0	2	.
water	161:47	0:0	2	i_width
op	161:55	0:0	2	*
water	161:57	0:0	2	fmt
op	161:60	0:0	2	.
water	161:61	0:0	2	video
op	161:66	0:0	2	.
water	161:67	0:0	2	i_visible_width
op	161:83	0:0	2	/
water	161:85	0:0	2	p_filter
op	161:93	0:0	2	->
water	161:95	0:0	2	fmt_in
op	161:101	0:0	2	.
water	161:102	0:0	2	video
op	161:107	0:0	2	.
water	161:108	0:0	2	i_visible_width
water	161:123	0:0	2	;
water	162:4	0:0	2	fmt
op	162:7	0:0	2	.
water	162:8	0:0	2	video
op	162:13	0:0	2	.
water	162:14	0:0	2	i_height
op	162:23	0:0	2	=
water	162:25	0:0	2	p_filter
op	162:33	0:0	2	->
water	162:35	0:0	2	fmt_in
op	162:41	0:0	2	.
water	162:42	0:0	2	video
op	162:47	0:0	2	.
water	162:48	0:0	2	i_height
op	162:57	0:0	2	*
water	162:59	0:0	2	fmt
op	162:62	0:0	2	.
water	162:63	0:0	2	video
op	162:68	0:0	2	.
water	162:69	0:0	2	i_visible_height
op	162:86	0:0	2	/
water	162:88	0:0	2	p_filter
op	162:96	0:0	2	->
water	162:98	0:0	2	fmt_in
op	162:104	0:0	2	.
water	162:105	0:0	2	video
op	162:110	0:0	2	.
water	162:111	0:0	2	i_visible_height
water	162:127	0:0	2	;
call	163:4	163:64	2	filter_chain_Reset
arg	163:24	163:38	3	p_sys->p_chain
water	163:24	0:0	4	p_sys
op	163:29	0:0	4	->
water	163:31	0:0	4	p_chain
arg	163:40	163:57	3	&p_filter->fmt_in
op	163:40	0:0	4	&
water	163:41	0:0	4	p_filter
op	163:49	0:0	4	->
water	163:51	0:0	4	fmt_in
arg	163:59	163:64	3	&fmt
op	163:59	0:0	4	&
water	163:60	0:0	4	fmt
water	163:65	0:0	2	;
call	165:4	165:70	2	filter_chain_AppendFilter
arg	165:31	165:45	3	p_sys->p_chain
water	165:31	0:0	4	p_sys
op	165:36	0:0	4	->
water	165:38	0:0	4	p_chain
arg	165:47	165:51	3	NULL
water	165:47	0:0	4	NULL
arg	165:53	165:57	3	NULL
water	165:53	0:0	4	NULL
arg	165:59	165:63	3	NULL
water	165:59	0:0	4	NULL
arg	165:65	165:70	3	NULL
water	165:65	0:0	4	NULL
water	165:71	0:0	2	;
call	167:4	167:64	2	filter_chain_AppendFromString
arg	167:35	167:49	3	p_sys->p_chain
water	167:35	0:0	4	p_sys
op	167:40	0:0	4	->
water	167:42	0:0	4	p_chain
arg	167:51	167:64	3	psz_croppadd
water	167:51	0:0	4	psz_croppadd
water	167:65	0:0	2	;
water	168:4	0:0	2	fmt
op	168:8	0:0	2	=
call	168:10	168:50	2	*filter_chain_GetFmtOut
arg	168:35	168:50	3	p_sys->p_chain
water	168:35	0:0	4	p_sys
op	168:40	0:0	4	->
water	168:42	0:0	4	p_chain
water	168:51	0:0	2	;
call	169:4	169:45	2	es_format_Copy
arg	169:20	169:38	3	&p_filter->fmt_out
op	169:20	0:0	4	&
water	169:21	0:0	4	p_filter
op	169:29	0:0	4	->
water	169:31	0:0	4	fmt_out
arg	169:40	169:45	3	&fmt
op	169:40	0:0	4	&
water	169:41	0:0	4	fmt
water	169:46	0:0	2	;
call	170:4	174:9	2	vlc_ureduce
arg	170:17	170:51	3	&p_filter->fmt_out.video.i_sar_num
op	170:17	0:0	4	&
water	170:18	0:0	4	p_filter
op	170:26	0:0	4	->
water	170:28	0:0	4	fmt_out
op	170:35	0:0	4	.
water	170:36	0:0	4	video
op	170:41	0:0	4	.
water	170:42	0:0	4	i_sar_num
arg	171:8	171:42	3	&p_filter->fmt_out.video.i_sar_den
op	171:8	0:0	4	&
water	171:9	0:0	4	p_filter
op	171:17	0:0	4	->
water	171:19	0:0	4	fmt_out
op	171:26	0:0	4	.
water	171:27	0:0	4	video
op	171:32	0:0	4	.
water	171:33	0:0	4	i_sar_den
arg	172:8	172:69	3	i_canvas_aspect*p_filter->fmt_out.video.i_visible_height
water	172:8	0:0	4	i_canvas_aspect
op	172:27	0:0	4	*
water	172:29	0:0	4	p_filter
op	172:37	0:0	4	->
water	172:39	0:0	4	fmt_out
op	172:46	0:0	4	.
water	172:47	0:0	4	video
op	172:52	0:0	4	.
water	172:53	0:0	4	i_visible_height
arg	173:8	173:68	3	VOUT_ASPECT_FACTOR*p_filter->fmt_out.video.i_visible_width
water	173:8	0:0	4	VOUT_ASPECT_FACTOR
op	173:27	0:0	4	*
water	173:29	0:0	4	p_filter
op	173:37	0:0	4	->
water	173:39	0:0	4	fmt_out
op	173:46	0:0	4	.
water	173:47	0:0	4	video
op	173:52	0:0	4	.
water	173:53	0:0	4	i_visible_width
arg	174:8	174:9	3	0
water	174:8	0:0	4	0
water	174:10	0:0	2	;
if	175:4	183:4	2	(p_filter -> fmt_out . video . i_visible_width != i_canvas_width || p_filter -> fmt_out . video . i_visible_height != i_canvas_height)
cond	175:8	176:52	3	p_filter -> fmt_out . video . i_visible_width != i_canvas_width || p_filter -> fmt_out . video . i_visible_height != i_canvas_height
water	175:8	0:0	4	p_filter
op	175:16	0:0	4	->
water	175:18	0:0	4	fmt_out
op	175:25	0:0	4	.
water	175:26	0:0	4	video
op	175:31	0:0	4	.
water	175:32	0:0	4	i_visible_width
op	175:48	0:0	4	!=
water	175:51	0:0	4	i_canvas_width
op	176:5	0:0	4	||
water	176:8	0:0	4	p_filter
op	176:16	0:0	4	->
water	176:18	0:0	4	fmt_out
op	176:25	0:0	4	.
water	176:26	0:0	4	video
op	176:31	0:0	4	.
water	176:32	0:0	4	i_visible_height
op	176:49	0:0	4	!=
water	176:52	0:0	4	i_canvas_height
stmts	177:4	183:4	3	
water	177:4	0:0	4	{
call	178:8	182:50	4	msg_Warn
arg	178:18	178:26	5	p_filter
water	178:18	0:0	6	p_filter
arg	178:28	179:65	5	"Looks like something went wrong. ""Output size is %dx%d while we asked for %dx%d"
water	178:28	0:0	6	"Looks like something went wrong. "
water	179:18	0:0	6	"Output size is %dx%d while we asked for %dx%d"
arg	180:18	180:57	5	p_filter->fmt_out.video.i_visible_width
water	180:18	0:0	6	p_filter
op	180:26	0:0	6	->
water	180:28	0:0	6	fmt_out
op	180:35	0:0	6	.
water	180:36	0:0	6	video
op	180:41	0:0	6	.
water	180:42	0:0	6	i_visible_width
arg	181:18	181:58	5	p_filter->fmt_out.video.i_visible_height
water	181:18	0:0	6	p_filter
op	181:26	0:0	6	->
water	181:28	0:0	6	fmt_out
op	181:35	0:0	6	.
water	181:36	0:0	6	video
op	181:41	0:0	6	.
water	181:42	0:0	6	i_visible_height
arg	182:18	182:32	5	i_canvas_width
water	182:18	0:0	6	i_canvas_width
arg	182:34	182:50	5	i_canvas_height
water	182:34	0:0	6	i_canvas_height
water	182:51	0:0	4	;
water	183:4	0:0	4	}
water	184:4	0:0	2	p_filter
op	184:12	0:0	2	->
water	184:14	0:0	2	pf_video_filter
op	184:30	0:0	2	=
water	184:32	0:0	2	Filter
water	184:38	0:0	2	;
return	185:4	185:22	2	VLC_SUCCESS
water	185:11	0:0	3	VLC_SUCCESS

func	2:0	32:0	0	void	vout_OSDText
params	2:17	0:0	1	
param	2:18	2:37	2	vout_thread_t *	vout
param	2:39	2:50	2	int	channel
param	3:19	3:31	2	int	position
param	3:33	3:49	2	mtime_t	duration
param	3:51	3:67	2	const char *	text
stmnts	5:4	31:36	1	
call	5:4	5:52	2	assert
arg	5:12	5:52	3	(position&~SUBPICTURE_ALIGN_MASK)==0
water	5:12	0:0	4	(
water	5:13	0:0	4	position
op	5:22	0:0	4	&
water	5:24	0:0	4	~SUBPICTURE_ALIGN_MASK
water	5:46	0:0	4	)
op	5:48	0:0	4	==
water	5:51	0:0	4	0
water	5:53	0:0	2	;
if	6:4	7:14	2	(!var_InheritBool (vout ,"osd" ) || duration <= 0)
cond	6:8	6:53	3	!var_InheritBool (vout ,"osd" ) || duration <= 0
op	6:8	0:0	4	!
call	6:9	6:36	4	var_InheritBool
arg	6:25	6:29	5	vout
water	6:25	0:0	6	vout
arg	6:31	6:36	5	"osd"
water	6:31	0:0	6	"osd"
op	6:38	0:0	4	||
water	6:41	0:0	4	duration
op	6:50	0:0	4	<=
water	6:53	0:0	4	0
stmts	7:8	7:14	3	
return	7:8	7:14	4	
decl	8:4	8:56	2	subpicture_updater_sys_t	*sys
op	8:34	0:0	2	=
call	8:36	8:55	3	malloc
arg	8:43	8:55	4	sizeof(*sys)
op	8:43	0:0	5	sizeof
water	8:49	0:0	5	(
op	8:50	0:0	5	*
water	8:51	0:0	5	sys
water	8:54	0:0	5	)
if	9:4	10:14	2	(! sys)
cond	9:8	9:9	3	! sys
op	9:8	0:0	4	!
water	9:9	0:0	4	sys
stmts	10:8	10:14	3	
return	10:8	10:14	4	
water	11:4	0:0	2	sys
op	11:7	0:0	2	->
water	11:9	0:0	2	position
op	11:18	0:0	2	=
water	11:20	0:0	2	position
water	11:28	0:0	2	;
water	12:4	0:0	2	sys
op	12:7	0:0	2	->
water	12:9	0:0	2	text
op	12:18	0:0	2	=
call	12:20	12:31	2	strdup
arg	12:27	12:31	3	text
water	12:27	0:0	4	text
water	12:32	0:0	2	;
decl	13:4	18:5	2	subpicture_updater_t	updater
op	13:33	0:0	2	=
water	13:35	0:0	2	{
op	14:8	0:0	2	.
water	14:9	0:0	2	pf_validate
op	14:21	0:0	2	=
water	14:23	0:0	2	OSDTextValidate
water	14:38	0:0	2	,
op	15:8	0:0	2	.
water	15:9	0:0	2	pf_update
op	15:21	0:0	2	=
water	15:23	0:0	2	OSDTextUpdate
water	15:36	0:0	2	,
op	16:8	0:0	2	.
water	16:9	0:0	2	pf_destroy
op	16:21	0:0	2	=
water	16:23	0:0	2	OSDTextDestroy
water	16:37	0:0	2	,
op	17:8	0:0	2	.
water	17:9	0:0	2	p_sys
op	17:21	0:0	2	=
water	17:23	0:0	2	sys
water	17:26	0:0	2	,
water	18:4	0:0	2	}
decl	19:4	19:51	2	subpicture_t	*subpic
op	19:25	0:0	2	=
call	19:27	19:50	3	subpicture_New
arg	19:42	19:50	4	&updater
op	19:42	0:0	5	&
water	19:43	0:0	5	updater
if	20:4	24:4	2	(! subpic)
cond	20:8	20:9	3	! subpic
op	20:8	0:0	4	!
water	20:9	0:0	4	subpic
stmts	20:17	24:4	3	
water	20:17	0:0	4	{
call	21:8	21:22	4	free
arg	21:13	21:22	5	sys->text
water	21:13	0:0	6	sys
op	21:16	0:0	6	->
water	21:18	0:0	6	text
water	21:23	0:0	4	;
call	22:8	22:16	4	free
arg	22:13	22:16	5	sys
water	22:13	0:0	6	sys
water	22:17	0:0	4	;
return	23:8	23:14	4	
water	24:4	0:0	4	}
water	25:4	0:0	2	subpic
op	25:10	0:0	2	->
water	25:12	0:0	2	i_channel
op	25:23	0:0	2	=
water	25:25	0:0	2	channel
water	25:32	0:0	2	;
water	26:4	0:0	2	subpic
op	26:10	0:0	2	->
water	26:12	0:0	2	i_start
op	26:23	0:0	2	=
call	26:25	26:31	2	mdate
water	26:32	0:0	2	;
water	27:4	0:0	2	subpic
op	27:10	0:0	2	->
water	27:12	0:0	2	i_stop
op	27:23	0:0	2	=
water	27:25	0:0	2	subpic
op	27:31	0:0	2	->
water	27:33	0:0	2	i_start
op	27:41	0:0	2	+
water	27:43	0:0	2	duration
water	27:51	0:0	2	;
water	28:4	0:0	2	subpic
op	28:10	0:0	2	->
water	28:12	0:0	2	b_ephemer
op	28:23	0:0	2	=
water	28:25	0:0	2	true
water	28:29	0:0	2	;
water	29:4	0:0	2	subpic
op	29:10	0:0	2	->
water	29:12	0:0	2	b_absolute
op	29:23	0:0	2	=
water	29:25	0:0	2	false
water	29:30	0:0	2	;
water	30:4	0:0	2	subpic
op	30:10	0:0	2	->
water	30:12	0:0	2	b_fade
op	30:23	0:0	2	=
water	30:25	0:0	2	true
water	30:29	0:0	2	;
call	31:4	31:35	2	vout_PutSubpicture
arg	31:23	31:27	3	vout
water	31:23	0:0	4	vout
arg	31:29	31:35	3	subpic
water	31:29	0:0	4	subpic
water	31:36	0:0	2	;

func	2:0	62:0	0	void	rmff_print_header
params	2:22	0:0	1	
param	2:23	2:39	2	rmff_header_t *	h
stmnts	0:0	61:2	1	
decl	3:2	3:22	2	rmff_mdpr_t	**stream
if	4:2	7:2	2	(! h)
cond	4:5	4:6	3	! h
op	4:5	0:0	4	!
water	4:6	0:0	4	h
stmts	4:9	7:2	3	
water	4:9	0:0	4	{
call	5:4	5:44	4	printf
arg	5:11	5:44	5	"rmff_print_header: NULL given\n"
water	5:11	0:0	6	"rmff_print_header: NULL given\n"
water	5:45	0:0	4	;
return	6:4	6:10	4	
water	7:2	0:0	4	}
if	8:2	13:2	2	(h -> fileheader)
cond	8:5	8:8	3	h -> fileheader
water	8:5	0:0	4	h
op	8:6	0:0	4	->
water	8:8	0:0	4	fileheader
stmts	9:2	13:2	3	
water	9:2	0:0	4	{
call	10:4	10:22	4	printf
arg	10:11	10:22	5	"\nFILE:\n"
water	10:11	0:0	6	"\nFILE:\n"
water	10:23	0:0	4	;
call	11:4	11:66	4	printf
arg	11:11	11:37	5	"file version      : %d\n"
water	11:11	0:0	6	"file version      : %d\n"
arg	11:39	11:66	5	h->fileheader->file_version
water	11:39	0:0	6	h
op	11:40	0:0	6	->
water	11:42	0:0	6	fileheader
op	11:52	0:0	6	->
water	11:54	0:0	6	file_version
water	11:67	0:0	4	;
call	12:4	12:65	4	printf
arg	12:11	12:37	5	"number of headers : %d\n"
water	12:11	0:0	6	"number of headers : %d\n"
arg	12:39	12:65	5	h->fileheader->num_headers
water	12:39	0:0	6	h
op	12:40	0:0	6	->
water	12:42	0:0	6	fileheader
op	12:52	0:0	6	->
water	12:54	0:0	6	num_headers
water	12:66	0:0	4	;
water	13:2	0:0	4	}
if	14:2	21:2	2	(h -> cont)
cond	14:5	14:8	3	h -> cont
water	14:5	0:0	4	h
op	14:6	0:0	4	->
water	14:8	0:0	4	cont
stmts	15:2	21:2	3	
water	15:2	0:0	4	{
call	16:4	16:25	4	printf
arg	16:11	16:25	5	"\nCONTENT:\n"
water	16:11	0:0	6	"\nCONTENT:\n"
water	16:26	0:0	4	;
call	17:4	17:45	4	printf
arg	17:11	17:29	5	"title     : %s\n"
water	17:11	0:0	6	"title     : %s\n"
arg	17:31	17:45	5	h->cont->title
water	17:31	0:0	6	h
op	17:32	0:0	6	->
water	17:34	0:0	6	cont
op	17:38	0:0	6	->
water	17:40	0:0	6	title
water	17:46	0:0	4	;
call	18:4	18:46	4	printf
arg	18:11	18:29	5	"author    : %s\n"
water	18:11	0:0	6	"author    : %s\n"
arg	18:31	18:46	5	h->cont->author
water	18:31	0:0	6	h
op	18:32	0:0	6	->
water	18:34	0:0	6	cont
op	18:38	0:0	6	->
water	18:40	0:0	6	author
water	18:47	0:0	4	;
call	19:4	19:49	4	printf
arg	19:11	19:29	5	"copyright : %s\n"
water	19:11	0:0	6	"copyright : %s\n"
arg	19:31	19:49	5	h->cont->copyright
water	19:31	0:0	6	h
op	19:32	0:0	6	->
water	19:34	0:0	6	cont
op	19:38	0:0	6	->
water	19:40	0:0	6	copyright
water	19:50	0:0	4	;
call	20:4	20:47	4	printf
arg	20:11	20:29	5	"comment   : %s\n"
water	20:11	0:0	6	"comment   : %s\n"
arg	20:31	20:47	5	h->cont->comment
water	20:31	0:0	6	h
op	20:32	0:0	6	->
water	20:34	0:0	6	cont
op	20:38	0:0	6	->
water	20:40	0:0	6	comment
water	20:48	0:0	4	;
water	21:2	0:0	4	}
if	22:2	38:2	2	(h -> prop)
cond	22:5	22:8	3	h -> prop
water	22:5	0:0	4	h
op	22:6	0:0	4	->
water	22:8	0:0	4	prop
stmts	23:2	38:2	3	
water	23:2	0:0	4	{
call	24:4	24:35	4	printf
arg	24:11	24:35	5	"\nSTREAM PROPERTIES:\n"
water	24:11	0:0	6	"\nSTREAM PROPERTIES:\n"
water	24:36	0:0	4	;
call	25:4	25:90	4	printf
arg	25:11	25:44	5	"bit rate (max/avg)    : %i/%i\n"
water	25:11	0:0	6	"bit rate (max/avg)    : %i/%i\n"
arg	25:46	25:67	5	h->prop->max_bit_rate
water	25:46	0:0	6	h
op	25:47	0:0	6	->
water	25:49	0:0	6	prop
op	25:53	0:0	6	->
water	25:55	0:0	6	max_bit_rate
arg	25:69	25:90	5	h->prop->avg_bit_rate
water	25:69	0:0	6	h
op	25:70	0:0	6	->
water	25:72	0:0	6	prop
op	25:76	0:0	6	->
water	25:78	0:0	6	avg_bit_rate
water	25:91	0:0	4	;
call	26:4	26:102	4	printf
arg	26:11	26:50	5	"packet size (max/avg) : %i/%i bytes\n"
water	26:11	0:0	6	"packet size (max/avg) : %i/%i bytes\n"
arg	26:52	26:76	5	h->prop->max_packet_size
water	26:52	0:0	6	h
op	26:53	0:0	6	->
water	26:55	0:0	6	prop
op	26:59	0:0	6	->
water	26:61	0:0	6	max_packet_size
arg	26:78	26:102	5	h->prop->avg_packet_size
water	26:78	0:0	6	h
op	26:79	0:0	6	->
water	26:81	0:0	6	prop
op	26:85	0:0	6	->
water	26:87	0:0	6	avg_packet_size
water	26:103	0:0	4	;
call	27:4	27:55	4	printf
arg	27:11	27:33	5	"packets       : %i\n"
water	27:11	0:0	6	"packets       : %i\n"
arg	27:35	27:55	5	h->prop->num_packets
water	27:35	0:0	6	h
op	27:36	0:0	6	->
water	27:38	0:0	6	prop
op	27:42	0:0	6	->
water	27:44	0:0	6	num_packets
water	27:56	0:0	4	;
call	28:4	28:55	4	printf
arg	28:11	28:36	5	"duration      : %i ms\n"
water	28:11	0:0	6	"duration      : %i ms\n"
arg	28:38	28:55	5	h->prop->duration
water	28:38	0:0	6	h
op	28:39	0:0	6	->
water	28:41	0:0	6	prop
op	28:45	0:0	6	->
water	28:47	0:0	6	duration
water	28:56	0:0	4	;
call	29:4	29:54	4	printf
arg	29:11	29:36	5	"pre-buffer    : %i ms\n"
water	29:11	0:0	6	"pre-buffer    : %i ms\n"
arg	29:38	29:54	5	h->prop->preroll
water	29:38	0:0	6	h
op	29:39	0:0	6	->
water	29:41	0:0	6	prop
op	29:45	0:0	6	->
water	29:47	0:0	6	preroll
water	29:55	0:0	4	;
call	30:4	30:62	4	printf
arg	30:11	30:39	5	"index offset  : %i bytes\n"
water	30:11	0:0	6	"index offset  : %i bytes\n"
arg	30:41	30:62	5	h->prop->index_offset
water	30:41	0:0	6	h
op	30:42	0:0	6	->
water	30:44	0:0	6	prop
op	30:48	0:0	6	->
water	30:50	0:0	6	index_offset
water	30:63	0:0	4	;
call	31:4	31:61	4	printf
arg	31:11	31:39	5	"data offset   : %i bytes\n"
water	31:11	0:0	6	"data offset   : %i bytes\n"
arg	31:41	31:61	5	h->prop->data_offset
water	31:41	0:0	6	h
op	31:42	0:0	6	->
water	31:44	0:0	6	prop
op	31:48	0:0	6	->
water	31:50	0:0	6	data_offset
water	31:62	0:0	4	;
call	32:4	32:55	4	printf
arg	32:11	32:33	5	"media streams : %i\n"
water	32:11	0:0	6	"media streams : %i\n"
arg	32:35	32:55	5	h->prop->num_streams
water	32:35	0:0	6	h
op	32:36	0:0	6	->
water	32:38	0:0	6	prop
op	32:42	0:0	6	->
water	32:44	0:0	6	num_streams
water	32:56	0:0	4	;
call	33:4	33:29	4	printf
arg	33:11	33:29	5	"flags         : "
water	33:11	0:0	6	"flags         : "
water	33:30	0:0	4	;
if	34:4	34:65	4	(h -> prop -> flags & PN_SAVE_ENABLED)
cond	34:8	34:25	5	h -> prop -> flags & PN_SAVE_ENABLED
water	34:8	0:0	6	h
op	34:9	0:0	6	->
water	34:11	0:0	6	prop
op	34:15	0:0	6	->
water	34:17	0:0	6	flags
op	34:23	0:0	6	&
water	34:25	0:0	6	PN_SAVE_ENABLED
stmts	34:42	34:65	5	
call	34:42	34:64	6	printf
arg	34:49	34:64	7	"save_enabled "
water	34:49	0:0	8	"save_enabled "
water	34:65	0:0	6	;
if	35:4	35:81	4	(h -> prop -> flags & PN_PERFECT_PLAY_ENABLED)
cond	35:8	35:25	5	h -> prop -> flags & PN_PERFECT_PLAY_ENABLED
water	35:8	0:0	6	h
op	35:9	0:0	6	->
water	35:11	0:0	6	prop
op	35:15	0:0	6	->
water	35:17	0:0	6	flags
op	35:23	0:0	6	&
water	35:25	0:0	6	PN_PERFECT_PLAY_ENABLED
stmts	35:50	35:81	5	
call	35:50	35:80	6	printf
arg	35:57	35:80	7	"perfect_play_enabled "
water	35:57	0:0	8	"perfect_play_enabled "
water	35:81	0:0	6	;
if	36:4	36:69	4	(h -> prop -> flags & PN_LIVE_BROADCAST)
cond	36:8	36:25	5	h -> prop -> flags & PN_LIVE_BROADCAST
water	36:8	0:0	6	h
op	36:9	0:0	6	->
water	36:11	0:0	6	prop
op	36:15	0:0	6	->
water	36:17	0:0	6	flags
op	36:23	0:0	6	&
water	36:25	0:0	6	PN_LIVE_BROADCAST
stmts	36:44	36:69	5	
call	36:44	36:68	6	printf
arg	36:51	36:68	7	"live_broadcast "
water	36:51	0:0	8	"live_broadcast "
water	36:69	0:0	6	;
call	37:4	37:15	4	printf
arg	37:11	37:15	5	"\n"
water	37:11	0:0	6	"\n"
water	37:16	0:0	4	;
water	38:2	0:0	4	}
water	39:2	0:0	2	stream
op	39:8	0:0	2	=
water	39:9	0:0	2	h
op	39:10	0:0	2	->
water	39:12	0:0	2	streams
water	39:19	0:0	2	;
if	40:2	54:2	2	(stream)
cond	40:5	40:5	3	stream
water	40:5	0:0	4	stream
stmts	41:2	54:2	3	
water	41:2	0:0	4	{
while	42:4	53:4	4	(* stream)
cond	42:11	42:12	5	* stream
op	42:11	0:0	6	*
water	42:12	0:0	6	stream
stmts	43:4	53:4	5	
water	43:4	0:0	6	{
call	44:6	44:55	6	printf
arg	44:13	44:29	7	"\nSTREAM %i:\n"
water	44:13	0:0	8	"\nSTREAM %i:\n"
arg	44:31	44:55	7	(*stream)->stream_number
water	44:31	0:0	8	(
op	44:32	0:0	8	*
water	44:33	0:0	8	stream
water	44:39	0:0	8	)
op	44:40	0:0	8	->
water	44:42	0:0	8	stream_number
water	44:56	0:0	6	;
call	45:6	45:96	6	printf
arg	45:13	45:50	7	"stream name [mime type] : %s [%s]\n"
water	45:13	0:0	8	"stream name [mime type] : %s [%s]\n"
arg	45:52	45:74	7	(*stream)->stream_name
water	45:52	0:0	8	(
op	45:53	0:0	8	*
water	45:54	0:0	8	stream
water	45:60	0:0	8	)
op	45:61	0:0	8	->
water	45:63	0:0	8	stream_name
arg	45:76	45:96	7	(*stream)->mime_type
water	45:76	0:0	8	(
op	45:77	0:0	8	*
water	45:78	0:0	8	stream
water	45:84	0:0	8	)
op	45:85	0:0	8	->
water	45:87	0:0	8	mime_type
water	45:97	0:0	6	;
call	46:6	46:98	6	printf
arg	46:13	46:48	7	"bit rate (max/avg)      : %i/%i\n"
water	46:13	0:0	8	"bit rate (max/avg)      : %i/%i\n"
arg	46:50	46:73	7	(*stream)->max_bit_rate
water	46:50	0:0	8	(
op	46:51	0:0	8	*
water	46:52	0:0	8	stream
water	46:58	0:0	8	)
op	46:59	0:0	8	->
water	46:61	0:0	8	max_bit_rate
arg	46:75	46:98	7	(*stream)->avg_bit_rate
water	46:75	0:0	8	(
op	46:76	0:0	8	*
water	46:77	0:0	8	stream
water	46:83	0:0	8	)
op	46:84	0:0	8	->
water	46:86	0:0	8	avg_bit_rate
water	46:99	0:0	6	;
call	47:6	47:110	6	printf
arg	47:13	47:54	7	"packet size (max/avg)   : %i/%i bytes\n"
water	47:13	0:0	8	"packet size (max/avg)   : %i/%i bytes\n"
arg	47:56	47:82	7	(*stream)->max_packet_size
water	47:56	0:0	8	(
op	47:57	0:0	8	*
water	47:58	0:0	8	stream
water	47:64	0:0	8	)
op	47:65	0:0	8	->
water	47:67	0:0	8	max_packet_size
arg	47:84	47:110	7	(*stream)->avg_packet_size
water	47:84	0:0	8	(
op	47:85	0:0	8	*
water	47:86	0:0	8	stream
water	47:92	0:0	8	)
op	47:93	0:0	8	->
water	47:95	0:0	8	avg_packet_size
water	47:111	0:0	6	;
call	48:6	48:55	6	printf
arg	48:13	48:32	7	"start time : %i\n"
water	48:13	0:0	8	"start time : %i\n"
arg	48:34	48:55	7	(*stream)->start_time
water	48:34	0:0	8	(
op	48:35	0:0	8	*
water	48:36	0:0	8	stream
water	48:42	0:0	8	)
op	48:43	0:0	8	->
water	48:45	0:0	8	start_time
water	48:56	0:0	6	;
call	49:6	49:55	6	printf
arg	49:13	49:35	7	"pre-buffer : %i ms\n"
water	49:13	0:0	8	"pre-buffer : %i ms\n"
arg	49:37	49:55	7	(*stream)->preroll
water	49:37	0:0	8	(
op	49:38	0:0	8	*
water	49:39	0:0	8	stream
water	49:45	0:0	8	)
op	49:46	0:0	8	->
water	49:48	0:0	8	preroll
water	49:56	0:0	6	;
call	50:6	50:56	6	printf
arg	50:13	50:35	7	"duration   : %i ms\n"
water	50:13	0:0	8	"duration   : %i ms\n"
arg	50:37	50:56	7	(*stream)->duration
water	50:37	0:0	8	(
op	50:38	0:0	8	*
water	50:39	0:0	8	stream
water	50:45	0:0	8	)
op	50:46	0:0	8	->
water	50:48	0:0	8	duration
water	50:57	0:0	6	;
call	51:6	51:36	6	printf
arg	51:13	51:36	7	"type specific data:\n"
water	51:13	0:0	8	"type specific data:\n"
water	51:37	0:0	6	;
water	52:6	0:0	6	stream
op	52:12	0:0	6	++
water	52:14	0:0	6	;
water	53:4	0:0	6	}
water	54:2	0:0	4	}
if	55:2	61:2	2	(h -> data)
cond	55:5	55:8	3	h -> data
water	55:5	0:0	4	h
op	55:6	0:0	4	->
water	55:8	0:0	4	data
stmts	56:2	61:2	3	
water	56:2	0:0	4	{
call	57:4	57:22	4	printf
arg	57:11	57:22	5	"\nDATA:\n"
water	57:11	0:0	6	"\nDATA:\n"
water	57:23	0:0	4	;
call	58:4	58:44	4	printf
arg	58:11	58:29	5	"size      : %i\n"
water	58:11	0:0	6	"size      : %i\n"
arg	58:31	58:44	5	h->data->size
water	58:31	0:0	6	h
op	58:32	0:0	6	->
water	58:34	0:0	6	data
op	58:38	0:0	6	->
water	58:40	0:0	6	size
water	58:45	0:0	4	;
call	59:4	59:51	4	printf
arg	59:11	59:29	5	"packets   : %i\n"
water	59:11	0:0	6	"packets   : %i\n"
arg	59:31	59:51	5	h->data->num_packets
water	59:31	0:0	6	h
op	59:32	0:0	6	->
water	59:34	0:0	6	data
op	59:38	0:0	6	->
water	59:40	0:0	6	num_packets
water	59:52	0:0	4	;
call	60:4	60:60	4	printf
arg	60:11	60:33	5	"next DATA : 0x%08x\n"
water	60:11	0:0	6	"next DATA : 0x%08x\n"
arg	60:35	60:60	5	h->data->next_data_header
water	60:35	0:0	6	h
op	60:36	0:0	6	->
water	60:38	0:0	6	data
op	60:42	0:0	6	->
water	60:44	0:0	6	next_data_header
water	60:61	0:0	4	;
water	61:2	0:0	4	}

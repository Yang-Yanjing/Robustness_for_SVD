func	2:0	58:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	57:23	1	
decl	4:4	4:44	2	demux_t	*p_demux
op	4:26	0:0	2	=
water	4:28	0:0	2	(
water	4:29	0:0	2	demux_t
op	4:36	0:0	2	*
water	4:37	0:0	2	)
water	4:38	0:0	2	p_this
decl	5:4	5:23	2	demux_sys_t	*p_sys
water	6:4	0:0	2	p_sys
op	6:10	0:0	2	=
call	6:12	6:43	2	calloc
arg	6:20	6:21	3	1
water	6:20	0:0	4	1
arg	6:23	6:43	3	sizeof(demux_sys_t)
op	6:23	0:0	4	sizeof
water	6:29	0:0	4	(
water	6:30	0:0	4	demux_sys_t
water	6:41	0:0	4	)
water	6:44	0:0	2	;
if	7:4	7:34	2	(! p_sys)
cond	7:8	7:9	3	! p_sys
op	7:8	0:0	4	!
water	7:9	0:0	4	p_sys
stmts	7:17	7:34	3	
return	7:17	7:34	4	VLC_ENOMEM
water	7:24	0:0	5	VLC_ENOMEM
water	8:4	0:0	2	p_sys
op	8:9	0:0	2	->
water	8:11	0:0	2	f_fps
op	8:17	0:0	2	=
call	8:19	8:63	2	var_InheritFloat
arg	8:37	8:44	3	p_demux
water	8:37	0:0	4	p_demux
arg	8:46	8:63	3	CFG_PREFIX"fps"
water	8:46	0:0	4	CFG_PREFIX
water	8:57	0:0	4	"fps"
water	8:64	0:0	2	;
if	9:4	9:47	2	(p_sys -> f_fps <= 0)
cond	9:9	9:25	3	p_sys -> f_fps <= 0
water	9:9	0:0	4	p_sys
op	9:14	0:0	4	->
water	9:16	0:0	4	f_fps
op	9:22	0:0	4	<=
water	9:25	0:0	4	0
stmts	9:29	9:47	3	
water	9:29	0:0	4	p_sys
op	9:34	0:0	4	->
water	9:36	0:0	4	f_fps
op	9:42	0:0	4	=
water	9:44	0:0	4	1
op	9:45	0:0	4	.
water	9:46	0:0	4	0
water	9:47	0:0	4	;
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	i_frame_interval
op	10:28	0:0	2	=
water	10:30	0:0	2	1000000
op	10:38	0:0	2	/
water	10:40	0:0	2	p_sys
op	10:45	0:0	2	->
water	10:47	0:0	2	f_fps
water	10:52	0:0	2	;
call	12:4	12:33	2	freerdp_channels_global_init
water	12:34	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	p_instance
op	14:22	0:0	2	=
call	14:24	14:36	2	freerdp_new
water	14:37	0:0	2	;
if	15:4	20:4	2	(! p_sys -> p_instance)
cond	15:9	15:17	3	! p_sys -> p_instance
op	15:9	0:0	4	!
water	15:10	0:0	4	p_sys
op	15:15	0:0	4	->
water	15:17	0:0	4	p_instance
stmts	16:4	20:4	3	
water	16:4	0:0	4	{
call	17:8	17:52	4	msg_Err
arg	17:17	17:24	5	p_demux
water	17:17	0:0	6	p_demux
arg	17:26	17:52	5	"rdp instanciation error"
water	17:26	0:0	6	"rdp instanciation error"
water	17:53	0:0	4	;
call	18:8	18:20	4	free
arg	18:14	18:20	5	p_sys
water	18:14	0:0	6	p_sys
water	18:21	0:0	4	;
return	19:8	19:27	4	VLC_EGENERIC
water	19:15	0:0	5	VLC_EGENERIC
water	20:4	0:0	4	}
water	21:4	0:0	2	p_demux
op	21:11	0:0	2	->
water	21:13	0:0	2	p_sys
op	21:19	0:0	2	=
water	21:21	0:0	2	p_sys
water	21:26	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	p_instance
op	22:21	0:0	2	->
water	22:23	0:0	2	PreConnect
op	22:34	0:0	2	=
water	22:36	0:0	2	preConnectHandler
water	22:53	0:0	2	;
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	p_instance
op	23:21	0:0	2	->
water	23:23	0:0	2	PostConnect
op	23:35	0:0	2	=
water	23:37	0:0	2	postConnectHandler
water	23:55	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	p_instance
op	24:21	0:0	2	->
water	24:23	0:0	2	Authenticate
op	24:36	0:0	2	=
water	24:38	0:0	2	authenticateHandler
water	24:57	0:0	2	;
water	26:4	0:0	2	p_sys
op	26:9	0:0	2	->
water	26:11	0:0	2	p_instance
op	26:21	0:0	2	->
water	26:23	0:0	2	ContextSize
op	26:35	0:0	2	=
op	26:37	0:0	2	sizeof
water	26:43	0:0	2	(
water	26:45	0:0	2	vlcrdp_context_t
water	26:62	0:0	2	)
water	26:63	0:0	2	;
call	27:4	27:43	2	freerdp_context_new
arg	27:25	27:43	3	p_sys->p_instance
water	27:25	0:0	4	p_sys
op	27:30	0:0	4	->
water	27:32	0:0	4	p_instance
water	27:44	0:0	2	;
decl	28:4	28:85	2	vlcrdp_context_t	*p_vlccontext
op	28:36	0:0	2	=
water	28:38	0:0	2	(
water	28:39	0:0	2	vlcrdp_context_t
op	28:56	0:0	2	*
water	28:57	0:0	2	)
water	28:59	0:0	2	p_sys
op	28:64	0:0	2	->
water	28:66	0:0	2	p_instance
op	28:76	0:0	2	->
water	28:78	0:0	2	context
water	29:4	0:0	2	p_vlccontext
op	29:16	0:0	2	->
water	29:18	0:0	2	p_demux
op	29:26	0:0	2	=
water	29:28	0:0	2	p_demux
water	29:35	0:0	2	;
decl	31:4	31:17	2	vlc_url_t	url
call	32:4	32:49	2	vlc_UrlParse
arg	32:18	32:22	3	&url
op	32:18	0:0	4	&
water	32:19	0:0	4	url
arg	32:24	32:45	3	p_demux->psz_location
water	32:24	0:0	4	p_demux
op	32:31	0:0	4	->
water	32:33	0:0	4	psz_location
arg	32:47	32:49	3	0
water	32:47	0:0	4	0
water	32:50	0:0	2	;
if	33:4	34:52	2	(!EMPTY_STR (url . psz_host ))
cond	33:9	33:32	3	!EMPTY_STR (url . psz_host )
op	33:9	0:0	4	!
call	33:10	33:32	4	EMPTY_STR
arg	33:20	33:32	5	url.psz_host
water	33:20	0:0	6	url
op	33:23	0:0	6	.
water	33:24	0:0	6	psz_host
stmts	34:8	34:52	3	
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	psz_hostname
op	34:28	0:0	4	=
call	34:30	34:51	4	strdup
arg	34:38	34:51	5	url.psz_host
water	34:38	0:0	6	url
op	34:41	0:0	6	.
water	34:42	0:0	6	psz_host
water	34:52	0:0	4	;
else	35:4	36:51	2
stmts	36:8	36:51	3	
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	psz_hostname
op	36:28	0:0	4	=
call	36:30	36:50	4	strdup
arg	36:38	36:50	5	"localhost"
water	36:38	0:0	6	"localhost"
water	36:51	0:0	4	;
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	i_port
op	37:18	0:0	2	=
water	37:20	0:0	2	(
water	37:22	0:0	2	url
op	37:25	0:0	2	.
water	37:26	0:0	2	i_port
op	37:33	0:0	2	>
water	37:35	0:0	2	0
water	37:37	0:0	2	)
water	37:39	0:0	2	?
water	37:41	0:0	2	url
op	37:44	0:0	2	.
water	37:45	0:0	2	i_port
water	37:52	0:0	2	:
water	37:54	0:0	2	3389
water	37:58	0:0	2	;
call	38:4	38:23	2	vlc_UrlClean
arg	38:18	38:23	3	&url
op	38:18	0:0	4	&
water	38:19	0:0	4	url
water	38:24	0:0	2	;
if	39:4	43:4	2	(!freerdp_connect (p_sys -> p_instance ))
cond	39:9	39:46	3	!freerdp_connect (p_sys -> p_instance )
op	39:9	0:0	4	!
call	39:11	39:46	4	freerdp_connect
arg	39:28	39:46	5	p_sys->p_instance
water	39:28	0:0	6	p_sys
op	39:33	0:0	6	->
water	39:35	0:0	6	p_instance
stmts	40:4	43:4	3	
water	40:4	0:0	4	{
call	41:8	41:56	4	msg_Err
arg	41:17	41:24	5	p_demux
water	41:17	0:0	6	p_demux
arg	41:26	41:56	5	"can't connect to rdp server"
water	41:26	0:0	6	"can't connect to rdp server"
water	41:57	0:0	4	;
goto	42:8	42:18	4	error
water	42:13	0:0	5	error
water	43:4	0:0	4	}
if	44:4	49:4	2	(vlc_clone (& p_sys -> thread ,DemuxThread ,p_demux ,VLC_THREAD_PRIORITY_INPUT ) != VLC_SUCCESS)
cond	44:9	44:89	3	vlc_clone (& p_sys -> thread ,DemuxThread ,p_demux ,VLC_THREAD_PRIORITY_INPUT ) != VLC_SUCCESS
call	44:9	44:84	4	vlc_clone
arg	44:20	44:34	5	&p_sys->thread
op	44:20	0:0	6	&
water	44:21	0:0	6	p_sys
op	44:26	0:0	6	->
water	44:28	0:0	6	thread
arg	44:36	44:47	5	DemuxThread
water	44:36	0:0	6	DemuxThread
arg	44:49	44:56	5	p_demux
water	44:49	0:0	6	p_demux
arg	44:58	44:84	5	VLC_THREAD_PRIORITY_INPUT
water	44:58	0:0	6	VLC_THREAD_PRIORITY_INPUT
op	44:86	0:0	4	!=
water	44:89	0:0	4	VLC_SUCCESS
stmts	45:4	49:4	3	
water	45:4	0:0	4	{
call	46:8	46:47	4	msg_Err
arg	46:17	46:24	5	p_demux
water	46:17	0:0	6	p_demux
arg	46:26	46:47	5	"can't spawn thread"
water	46:26	0:0	6	"can't spawn thread"
water	46:48	0:0	4	;
call	47:8	47:46	4	freerdp_disconnect
arg	47:28	47:46	5	p_sys->p_instance
water	47:28	0:0	6	p_sys
op	47:33	0:0	6	->
water	47:35	0:0	6	p_instance
water	47:47	0:0	4	;
goto	48:8	48:18	4	error
water	48:13	0:0	5	error
water	49:4	0:0	4	}
water	50:4	0:0	2	p_demux
op	50:11	0:0	2	->
water	50:13	0:0	2	pf_demux
op	50:22	0:0	2	=
water	50:24	0:0	2	NULL
water	50:28	0:0	2	;
water	51:4	0:0	2	p_demux
op	51:11	0:0	2	->
water	51:13	0:0	2	pf_control
op	51:24	0:0	2	=
water	51:26	0:0	2	Control
water	51:33	0:0	2	;
return	52:4	52:22	2	VLC_SUCCESS
water	52:11	0:0	3	VLC_SUCCESS
label	53:0	53:5	2	error :
call	54:4	54:36	2	freerdp_free
arg	54:18	54:36	3	p_sys->p_instance
water	54:18	0:0	4	p_sys
op	54:23	0:0	4	->
water	54:25	0:0	4	p_instance
water	54:37	0:0	2	;
call	55:4	55:30	2	free
arg	55:10	55:30	3	p_sys->psz_hostname
water	55:10	0:0	4	p_sys
op	55:15	0:0	4	->
water	55:17	0:0	4	psz_hostname
water	55:31	0:0	2	;
call	56:4	56:16	2	free
arg	56:10	56:16	3	p_sys
water	56:10	0:0	4	p_sys
water	56:17	0:0	2	;
return	57:4	57:23	2	VLC_EGENERIC
water	57:11	0:0	3	VLC_EGENERIC

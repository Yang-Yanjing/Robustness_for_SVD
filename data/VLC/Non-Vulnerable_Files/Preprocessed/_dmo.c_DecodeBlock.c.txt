func	2:0	22:0	0	static void *	DecodeBlock
params	2:24	0:0	1	
param	2:26	2:42	2	decoder_t *	p_dec
param	2:44	2:63	2	block_t * *	pp_block
stmnts	0:0	21:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:15	2	void	*p_ret
call	6:4	6:33	2	vlc_mutex_lock
arg	6:20	6:33	3	&p_sys->lock
op	6:20	0:0	4	&
water	6:21	0:0	4	p_sys
op	6:26	0:0	4	->
water	6:28	0:0	4	lock
water	6:34	0:0	2	;
if	7:4	13:4	2	(p_sys -> i_output <= 0)
cond	7:8	7:27	3	p_sys -> i_output <= 0
water	7:8	0:0	4	p_sys
op	7:13	0:0	4	->
water	7:15	0:0	4	i_output
op	7:24	0:0	4	<=
water	7:27	0:0	4	0
stmts	8:4	13:4	3	
water	8:4	0:0	4	{
water	9:8	0:0	4	p_sys
op	9:13	0:0	4	->
water	9:15	0:0	4	pp_input
op	9:24	0:0	4	=
water	9:26	0:0	4	pp_block
water	9:34	0:0	4	;
call	10:8	10:44	4	vlc_cond_signal
arg	10:25	10:44	5	&p_sys->wait_input
op	10:25	0:0	6	&
water	10:26	0:0	6	p_sys
op	10:31	0:0	6	->
water	10:33	0:0	6	wait_input
water	10:45	0:0	4	;
while	11:8	12:62	4	(p_sys -> pp_input)
cond	11:15	11:22	5	p_sys -> pp_input
water	11:15	0:0	6	p_sys
op	11:20	0:0	6	->
water	11:22	0:0	6	pp_input
stmts	12:12	12:62	5	
call	12:12	12:61	6	vlc_cond_wait
arg	12:27	12:46	7	&p_sys->wait_output
op	12:27	0:0	8	&
water	12:28	0:0	8	p_sys
op	12:33	0:0	8	->
water	12:35	0:0	8	wait_output
arg	12:48	12:61	7	&p_sys->lock
op	12:48	0:0	8	&
water	12:49	0:0	8	p_sys
op	12:54	0:0	8	->
water	12:56	0:0	8	lock
water	12:62	0:0	6	;
water	13:4	0:0	4	}
water	14:4	0:0	2	p_ret
op	14:10	0:0	2	=
water	14:12	0:0	2	NULL
water	14:16	0:0	2	;
if	15:4	19:4	2	(p_sys -> i_output > 0)
cond	15:8	15:26	3	p_sys -> i_output > 0
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	i_output
op	15:24	0:0	4	>
water	15:26	0:0	4	0
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	p_ret
op	17:14	0:0	4	=
water	17:16	0:0	4	p_sys
op	17:21	0:0	4	->
water	17:23	0:0	4	pp_output
op	17:32	0:0	4	[
water	17:33	0:0	4	0
op	17:34	0:0	4	]
water	17:35	0:0	4	;
call	18:8	18:61	4	TAB_REMOVE
arg	18:20	18:35	5	p_sys->i_output
water	18:20	0:0	6	p_sys
op	18:25	0:0	6	->
water	18:27	0:0	6	i_output
arg	18:37	18:53	5	p_sys->pp_output
water	18:37	0:0	6	p_sys
op	18:42	0:0	6	->
water	18:44	0:0	6	pp_output
arg	18:55	18:61	5	p_ret
water	18:55	0:0	6	p_ret
water	18:62	0:0	4	;
water	19:4	0:0	4	}
call	20:4	20:35	2	vlc_mutex_unlock
arg	20:22	20:35	3	&p_sys->lock
op	20:22	0:0	4	&
water	20:23	0:0	4	p_sys
op	20:28	0:0	4	->
water	20:30	0:0	4	lock
water	20:36	0:0	2	;
return	21:4	21:16	2	p_ret
water	21:11	0:0	3	p_ret

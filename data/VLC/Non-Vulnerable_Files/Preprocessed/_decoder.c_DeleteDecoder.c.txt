func	2:0	71:0	0	static void	DeleteDecoder
params	2:25	0:0	1	
param	2:27	2:45	2	decoder_t *	p_dec
stmnts	0:0	70:19	1	
decl	4:4	4:49	2	decoder_owner_sys_t	*p_owner
op	4:33	0:0	2	=
water	4:35	0:0	2	p_dec
op	4:40	0:0	2	->
water	4:42	0:0	2	p_owner
call	5:4	7:58	2	msg_Dbg
arg	5:13	5:18	3	p_dec
water	5:13	0:0	4	p_dec
arg	5:20	5:68	3	"killing decoder fourcc `%4.4s', %u PES in FIFO"
water	5:20	0:0	4	"killing decoder fourcc `%4.4s', %u PES in FIFO"
arg	6:13	6:42	3	(char*)&p_dec->fmt_in.i_codec
water	6:13	0:0	4	(
water	6:14	0:0	4	char
op	6:18	0:0	4	*
water	6:19	0:0	4	)
op	6:20	0:0	4	&
water	6:21	0:0	4	p_dec
op	6:26	0:0	4	->
water	6:28	0:0	4	fmt_in
op	6:34	0:0	4	.
water	6:35	0:0	4	i_codec
arg	7:13	7:58	3	(unsigned)block_FifoCount(p_owner->p_fifo)
water	7:13	0:0	4	(
water	7:14	0:0	4	unsigned
water	7:22	0:0	4	)
call	7:23	7:56	4	block_FifoCount
arg	7:40	7:56	5	p_owner->p_fifo
water	7:40	0:0	6	p_owner
op	7:47	0:0	6	->
water	7:49	0:0	6	p_fifo
water	7:59	0:0	2	;
call	9:4	9:37	2	block_FifoEmpty
arg	9:21	9:37	3	p_owner->p_fifo
water	9:21	0:0	4	p_owner
op	9:28	0:0	4	->
water	9:30	0:0	4	p_fifo
water	9:38	0:0	2	;
call	10:4	10:39	2	block_FifoRelease
arg	10:23	10:39	3	p_owner->p_fifo
water	10:23	0:0	4	p_owner
op	10:30	0:0	4	->
water	10:32	0:0	4	p_fifo
water	10:40	0:0	2	;
if	12:4	20:4	2	(p_owner -> p_aout)
cond	12:8	12:17	3	p_owner -> p_aout
water	12:8	0:0	4	p_owner
op	12:15	0:0	4	->
water	12:17	0:0	4	p_aout
stmts	13:4	20:4	3	
water	13:4	0:0	4	{
call	15:8	15:39	4	aout_DecFlush
arg	15:23	15:39	5	p_owner->p_aout
water	15:23	0:0	6	p_owner
op	15:30	0:0	6	->
water	15:32	0:0	6	p_aout
water	15:40	0:0	4	;
call	16:8	16:40	4	aout_DecDelete
arg	16:24	16:40	5	p_owner->p_aout
water	16:24	0:0	6	p_owner
op	16:31	0:0	6	->
water	16:33	0:0	6	p_aout
water	16:41	0:0	4	;
call	17:8	17:69	4	input_resource_PutAout
arg	17:32	17:51	5	p_owner->p_resource
water	17:32	0:0	6	p_owner
op	17:39	0:0	6	->
water	17:41	0:0	6	p_resource
arg	17:53	17:69	5	p_owner->p_aout
water	17:53	0:0	6	p_owner
op	17:60	0:0	6	->
water	17:62	0:0	6	p_aout
water	17:70	0:0	4	;
if	18:8	19:51	4	(p_owner -> p_input != NULL)
cond	18:12	18:32	5	p_owner -> p_input != NULL
water	18:12	0:0	6	p_owner
op	18:19	0:0	6	->
water	18:21	0:0	6	p_input
op	18:29	0:0	6	!=
water	18:32	0:0	6	NULL
stmts	19:12	19:51	5	
call	19:12	19:50	6	input_SendEventAout
arg	19:33	19:50	7	p_owner->p_input
water	19:33	0:0	8	p_owner
op	19:40	0:0	8	->
water	19:42	0:0	8	p_input
water	19:51	0:0	6	;
water	20:4	0:0	4	}
if	21:4	31:4	2	(p_owner -> p_vout)
cond	21:8	21:17	3	p_owner -> p_vout
water	21:8	0:0	4	p_owner
op	21:15	0:0	4	->
water	21:17	0:0	4	p_vout
stmts	22:4	31:4	3	
water	22:4	0:0	4	{
call	25:8	25:36	4	vout_Reset
arg	25:20	25:36	5	p_owner->p_vout
water	25:20	0:0	6	p_owner
op	25:27	0:0	6	->
water	25:29	0:0	6	p_vout
water	25:37	0:0	4	;
call	27:8	28:44	4	input_resource_RequestVout
arg	27:36	27:55	5	p_owner->p_resource
water	27:36	0:0	6	p_owner
op	27:43	0:0	6	->
water	27:45	0:0	6	p_resource
arg	27:57	27:72	5	p_owner->p_vout
water	27:57	0:0	6	p_owner
op	27:64	0:0	6	->
water	27:66	0:0	6	p_vout
arg	27:74	27:78	5	NULL
water	27:74	0:0	6	NULL
arg	28:36	28:37	5	0
water	28:36	0:0	6	0
arg	28:39	28:44	5	true
water	28:39	0:0	6	true
water	28:45	0:0	4	;
if	29:8	30:51	4	(p_owner -> p_input != NULL)
cond	29:12	29:32	5	p_owner -> p_input != NULL
water	29:12	0:0	6	p_owner
op	29:19	0:0	6	->
water	29:21	0:0	6	p_input
op	29:29	0:0	6	!=
water	29:32	0:0	6	NULL
stmts	30:12	30:51	5	
call	30:12	30:50	6	input_SendEventVout
arg	30:33	30:50	7	p_owner->p_input
water	30:33	0:0	8	p_owner
op	30:40	0:0	8	->
water	30:42	0:0	8	p_input
water	30:51	0:0	6	;
water	31:4	0:0	4	}
if	33:4	37:4	2	(p_owner -> p_sout_input)
cond	33:8	33:17	3	p_owner -> p_sout_input
water	33:8	0:0	4	p_owner
op	33:15	0:0	4	->
water	33:17	0:0	4	p_sout_input
stmts	34:4	37:4	3	
water	34:4	0:0	4	{
call	35:8	35:48	4	sout_InputDelete
arg	35:26	35:48	5	p_owner->p_sout_input
water	35:26	0:0	6	p_owner
op	35:33	0:0	6	->
water	35:35	0:0	6	p_sout_input
water	35:49	0:0	4	;
call	36:8	36:40	4	es_format_Clean
arg	36:25	36:40	5	&p_owner->sout
op	36:25	0:0	6	&
water	36:26	0:0	6	p_owner
op	36:33	0:0	6	->
water	36:35	0:0	6	sout
water	36:41	0:0	4	;
water	37:4	0:0	4	}
if	39:4	48:4	2	(p_dec -> fmt_out . i_cat == SPU_ES)
cond	39:8	39:32	3	p_dec -> fmt_out . i_cat == SPU_ES
water	39:8	0:0	4	p_dec
op	39:13	0:0	4	->
water	39:15	0:0	4	fmt_out
op	39:22	0:0	4	.
water	39:23	0:0	4	i_cat
op	39:29	0:0	4	==
water	39:32	0:0	4	SPU_ES
stmts	40:4	48:4	3	
water	40:4	0:0	4	{
decl	41:8	41:78	4	vout_thread_t	*p_vout
op	41:30	0:0	4	=
call	41:32	41:77	5	input_resource_HoldVout
arg	41:57	41:77	6	p_owner->p_resource
water	41:57	0:0	7	p_owner
op	41:64	0:0	7	->
water	41:66	0:0	7	p_resource
if	42:8	47:8	4	(p_vout)
cond	42:12	42:12	5	p_vout
water	42:12	0:0	6	p_vout
stmts	43:8	47:8	5	
water	43:8	0:0	6	{
if	44:12	45:77	6	(p_owner -> p_spu_vout == p_vout)
cond	44:16	44:39	7	p_owner -> p_spu_vout == p_vout
water	44:16	0:0	8	p_owner
op	44:23	0:0	8	->
water	44:25	0:0	8	p_spu_vout
op	44:36	0:0	8	==
water	44:39	0:0	8	p_vout
stmts	45:16	45:77	7	
call	45:16	45:76	8	vout_FlushSubpictureChannel
arg	45:45	45:51	9	p_vout
water	45:45	0:0	10	p_vout
arg	45:53	45:76	9	p_owner->i_spu_channel
water	45:53	0:0	10	p_owner
op	45:60	0:0	10	->
water	45:62	0:0	10	i_spu_channel
water	45:77	0:0	8	;
call	46:12	46:39	6	vlc_object_release
arg	46:32	46:39	7	p_vout
water	46:32	0:0	8	p_vout
water	46:40	0:0	6	;
water	47:8	0:0	6	}
water	48:4	0:0	4	}
call	49:4	49:36	2	es_format_Clean
arg	49:21	49:36	3	&p_dec->fmt_in
op	49:21	0:0	4	&
water	49:22	0:0	4	p_dec
op	49:27	0:0	4	->
water	49:29	0:0	4	fmt_in
water	49:37	0:0	2	;
call	50:4	50:37	2	es_format_Clean
arg	50:21	50:37	3	&p_dec->fmt_out
op	50:21	0:0	4	&
water	50:22	0:0	4	p_dec
op	50:27	0:0	4	->
water	50:29	0:0	4	fmt_out
water	50:38	0:0	2	;
if	51:4	52:47	2	(p_dec -> p_description)
cond	51:8	51:15	3	p_dec -> p_description
water	51:8	0:0	4	p_dec
op	51:13	0:0	4	->
water	51:15	0:0	4	p_description
stmts	52:8	52:47	3	
call	52:8	52:46	4	vlc_meta_Delete
arg	52:25	52:46	5	p_dec->p_description
water	52:25	0:0	6	p_dec
op	52:30	0:0	6	->
water	52:32	0:0	6	p_description
water	52:47	0:0	4	;
call	53:4	53:47	2	es_format_Clean
arg	53:21	53:47	3	&p_owner->fmt_description
op	53:21	0:0	4	&
water	53:22	0:0	4	p_owner
op	53:29	0:0	4	->
water	53:31	0:0	4	fmt_description
water	53:48	0:0	2	;
if	54:4	55:49	2	(p_owner -> p_description)
cond	54:8	54:17	3	p_owner -> p_description
water	54:8	0:0	4	p_owner
op	54:15	0:0	4	->
water	54:17	0:0	4	p_description
stmts	55:8	55:49	3	
call	55:8	55:48	4	vlc_meta_Delete
arg	55:25	55:48	5	p_owner->p_description
water	55:25	0:0	6	p_owner
op	55:32	0:0	6	->
water	55:34	0:0	6	p_description
water	55:49	0:0	4	;
if	56:4	65:4	2	(p_owner -> p_packetizer)
cond	56:8	56:17	3	p_owner -> p_packetizer
water	56:8	0:0	4	p_owner
op	56:15	0:0	4	->
water	56:17	0:0	4	p_packetizer
stmts	57:4	65:4	3	
water	57:4	0:0	4	{
call	58:8	59:55	4	module_unneed
arg	58:23	58:44	5	p_owner->p_packetizer
water	58:23	0:0	6	p_owner
op	58:30	0:0	6	->
water	58:32	0:0	6	p_packetizer
arg	59:23	59:55	5	p_owner->p_packetizer->p_module
water	59:23	0:0	6	p_owner
op	59:30	0:0	6	->
water	59:32	0:0	6	p_packetizer
op	59:44	0:0	6	->
water	59:46	0:0	6	p_module
water	59:56	0:0	4	;
call	60:8	60:56	4	es_format_Clean
arg	60:25	60:56	5	&p_owner->p_packetizer->fmt_in
op	60:25	0:0	6	&
water	60:26	0:0	6	p_owner
op	60:33	0:0	6	->
water	60:35	0:0	6	p_packetizer
op	60:47	0:0	6	->
water	60:49	0:0	6	fmt_in
water	60:57	0:0	4	;
call	61:8	61:57	4	es_format_Clean
arg	61:25	61:57	5	&p_owner->p_packetizer->fmt_out
op	61:25	0:0	6	&
water	61:26	0:0	6	p_owner
op	61:33	0:0	6	->
water	61:35	0:0	6	p_packetizer
op	61:47	0:0	6	->
water	61:49	0:0	6	fmt_out
water	61:58	0:0	4	;
if	62:8	63:67	4	(p_owner -> p_packetizer -> p_description)
cond	62:12	62:35	5	p_owner -> p_packetizer -> p_description
water	62:12	0:0	6	p_owner
op	62:19	0:0	6	->
water	62:21	0:0	6	p_packetizer
op	62:33	0:0	6	->
water	62:35	0:0	6	p_description
stmts	63:12	63:67	5	
call	63:12	63:66	6	vlc_meta_Delete
arg	63:29	63:66	7	p_owner->p_packetizer->p_description
water	63:29	0:0	8	p_owner
op	63:36	0:0	8	->
water	63:38	0:0	8	p_packetizer
op	63:50	0:0	8	->
water	63:52	0:0	8	p_description
water	63:67	0:0	6	;
call	64:8	64:50	4	vlc_object_release
arg	64:28	64:50	5	p_owner->p_packetizer
water	64:28	0:0	6	p_owner
op	64:35	0:0	6	->
water	64:37	0:0	6	p_packetizer
water	64:51	0:0	4	;
water	65:4	0:0	4	}
call	66:4	66:49	2	vlc_cond_destroy
arg	66:22	66:49	3	&p_owner->wait_acknowledge
op	66:22	0:0	4	&
water	66:23	0:0	4	p_owner
op	66:30	0:0	4	->
water	66:32	0:0	4	wait_acknowledge
water	66:50	0:0	2	;
call	67:4	67:45	2	vlc_cond_destroy
arg	67:22	67:45	3	&p_owner->wait_request
op	67:22	0:0	4	&
water	67:23	0:0	4	p_owner
op	67:30	0:0	4	->
water	67:32	0:0	4	wait_request
water	67:46	0:0	2	;
call	68:4	68:38	2	vlc_mutex_destroy
arg	68:23	68:38	3	&p_owner->lock
op	68:23	0:0	4	&
water	68:24	0:0	4	p_owner
op	68:31	0:0	4	->
water	68:33	0:0	4	lock
water	68:39	0:0	2	;
call	69:4	69:30	2	vlc_object_release
arg	69:24	69:30	3	p_dec
water	69:24	0:0	4	p_dec
water	69:31	0:0	2	;
call	70:4	70:18	2	free
arg	70:10	70:18	3	p_owner
water	70:10	0:0	4	p_owner
water	70:19	0:0	2	;

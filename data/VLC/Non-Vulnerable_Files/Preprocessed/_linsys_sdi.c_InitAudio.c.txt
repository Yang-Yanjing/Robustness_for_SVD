func	2:0	30:0	0	static int	InitAudio
params	2:20	0:0	1	
param	2:22	2:38	2	demux_t *	p_demux
param	2:40	2:61	2	sdi_audio_t *	p_audio
stmnts	0:0	29:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:19	2	es_format_t	fmt
call	6:4	7:64	2	msg_Dbg
arg	6:13	6:20	3	p_demux
water	6:13	0:0	4	p_demux
arg	6:22	6:61	3	"starting audio %u/%u rate:%u delay:%d"
water	6:22	0:0	4	"starting audio %u/%u rate:%u delay:%d"
arg	6:63	6:79	3	p_audio->i_group
water	6:63	0:0	4	p_audio
op	6:70	0:0	4	->
water	6:72	0:0	4	i_group
arg	7:13	7:28	3	p_audio->i_pair
water	7:13	0:0	4	p_audio
op	7:20	0:0	4	->
water	7:22	0:0	4	i_pair
arg	7:30	7:45	3	p_audio->i_rate
water	7:30	0:0	4	p_audio
op	7:37	0:0	4	->
water	7:39	0:0	4	i_rate
arg	7:47	7:64	3	p_audio->i_delay
water	7:47	0:0	4	p_audio
op	7:54	0:0	4	->
water	7:56	0:0	4	i_delay
water	7:65	0:0	2	;
call	8:4	8:51	2	es_format_Init
arg	8:20	8:24	3	&fmt
op	8:20	0:0	4	&
water	8:21	0:0	4	fmt
arg	8:26	8:34	3	AUDIO_ES
water	8:26	0:0	4	AUDIO_ES
arg	8:36	8:51	3	VLC_CODEC_S16L
water	8:36	0:0	4	VLC_CODEC_S16L
water	8:52	0:0	2	;
water	9:4	0:0	2	fmt
op	9:7	0:0	2	.
water	9:8	0:0	2	i_id
op	9:13	0:0	2	=
water	9:15	0:0	2	p_audio
op	9:22	0:0	2	->
water	9:24	0:0	2	i_id
water	9:28	0:0	2	;
water	10:4	0:0	2	fmt
op	10:7	0:0	2	.
water	10:8	0:0	2	audio
op	10:13	0:0	2	.
water	10:14	0:0	2	i_channels
op	10:34	0:0	2	=
water	10:36	0:0	2	2
water	10:37	0:0	2	;
water	11:4	0:0	2	fmt
op	11:7	0:0	2	.
water	11:8	0:0	2	audio
op	11:13	0:0	2	.
water	11:14	0:0	2	i_original_channels
op	11:34	0:0	2	=
water	12:4	0:0	2	fmt
op	12:7	0:0	2	.
water	12:8	0:0	2	audio
op	12:13	0:0	2	.
water	12:14	0:0	2	i_physical_channels
op	12:34	0:0	2	=
water	12:36	0:0	2	AOUT_CHANS_STEREO
water	12:53	0:0	2	;
water	13:4	0:0	2	fmt
op	13:7	0:0	2	.
water	13:8	0:0	2	audio
op	13:13	0:0	2	.
water	13:14	0:0	2	i_rate
op	13:34	0:0	2	=
water	13:36	0:0	2	p_audio
op	13:43	0:0	2	->
water	13:45	0:0	2	i_rate
water	13:51	0:0	2	;
water	14:4	0:0	2	fmt
op	14:7	0:0	2	.
water	14:8	0:0	2	audio
op	14:13	0:0	2	.
water	14:14	0:0	2	i_bitspersample
op	14:34	0:0	2	=
water	14:36	0:0	2	16
water	14:38	0:0	2	;
water	15:4	0:0	2	fmt
op	15:7	0:0	2	.
water	15:8	0:0	2	audio
op	15:13	0:0	2	.
water	15:14	0:0	2	i_blockalign
op	15:34	0:0	2	=
water	15:36	0:0	2	fmt
op	15:39	0:0	2	.
water	15:40	0:0	2	audio
op	15:45	0:0	2	.
water	15:46	0:0	2	i_channels
op	15:57	0:0	2	*
water	16:36	0:0	2	fmt
op	16:39	0:0	2	.
water	16:40	0:0	2	audio
op	16:45	0:0	2	.
water	16:46	0:0	2	i_bitspersample
op	16:62	0:0	2	/
water	16:64	0:0	2	8
water	16:65	0:0	2	;
water	17:4	0:0	2	fmt
op	17:7	0:0	2	.
water	17:8	0:0	2	i_bitrate
op	17:34	0:0	2	=
water	17:36	0:0	2	fmt
op	17:39	0:0	2	.
water	17:40	0:0	2	audio
op	17:45	0:0	2	.
water	17:46	0:0	2	i_channels
op	17:57	0:0	2	*
water	17:59	0:0	2	fmt
op	17:62	0:0	2	.
water	17:63	0:0	2	audio
op	17:68	0:0	2	.
water	17:69	0:0	2	i_rate
op	17:76	0:0	2	*
water	18:36	0:0	2	fmt
op	18:39	0:0	2	.
water	18:40	0:0	2	audio
op	18:45	0:0	2	.
water	18:46	0:0	2	i_bitspersample
water	18:61	0:0	2	;
water	19:4	0:0	2	p_audio
op	19:11	0:0	2	->
water	19:13	0:0	2	p_es
op	19:34	0:0	2	=
call	19:36	19:67	2	es_out_Add
arg	19:48	19:60	3	p_demux->out
water	19:48	0:0	4	p_demux
op	19:55	0:0	4	->
water	19:57	0:0	4	out
arg	19:62	19:67	3	&fmt
op	19:62	0:0	4	&
water	19:63	0:0	4	fmt
water	19:68	0:0	2	;
water	20:4	0:0	2	p_audio
op	20:11	0:0	2	->
water	20:13	0:0	2	i_nb_samples
op	20:34	0:0	2	=
water	20:36	0:0	2	p_audio
op	20:43	0:0	2	->
water	20:45	0:0	2	i_rate
op	20:52	0:0	2	*
water	20:54	0:0	2	p_sys
op	20:59	0:0	2	->
water	20:61	0:0	2	i_frame_rate_base
op	21:36	0:0	2	/
water	21:38	0:0	2	p_sys
op	21:43	0:0	2	->
water	21:45	0:0	2	i_frame_rate
water	21:57	0:0	2	;
water	22:4	0:0	2	p_audio
op	22:11	0:0	2	->
water	22:13	0:0	2	i_max_samples
op	22:34	0:0	2	=
water	22:36	0:0	2	(
water	22:37	0:0	2	float
water	22:42	0:0	2	)
water	22:43	0:0	2	p_audio
op	22:50	0:0	2	->
water	22:52	0:0	2	i_nb_samples
op	22:65	0:0	2	*
water	23:36	0:0	2	(
water	23:37	0:0	2	1
op	23:38	0:0	2	.
op	23:40	0:0	2	+
water	23:42	0:0	2	SAMPLERATE_TOLERANCE
water	23:62	0:0	2	)
water	23:63	0:0	2	;
water	24:4	0:0	2	p_audio
op	24:11	0:0	2	->
water	24:13	0:0	2	p_buffer
op	24:34	0:0	2	=
call	24:36	24:89	2	malloc
arg	24:44	24:89	3	p_audio->i_max_samples*sizeof(int16_t)*2
water	24:44	0:0	4	p_audio
op	24:51	0:0	4	->
water	24:53	0:0	4	i_max_samples
op	24:67	0:0	4	*
op	24:69	0:0	4	sizeof
water	24:75	0:0	4	(
water	24:76	0:0	4	int16_t
water	24:83	0:0	4	)
op	24:85	0:0	4	*
water	24:87	0:0	4	2
water	24:90	0:0	2	;
water	25:4	0:0	2	p_audio
op	25:11	0:0	2	->
water	25:13	0:0	2	i_left_samples
op	25:34	0:0	2	=
water	25:36	0:0	2	p_audio
op	25:43	0:0	2	->
water	25:45	0:0	2	i_right_samples
op	25:61	0:0	2	=
water	25:63	0:0	2	0
water	25:64	0:0	2	;
water	26:4	0:0	2	p_audio
op	26:11	0:0	2	->
water	26:13	0:0	2	i_block_number
op	26:34	0:0	2	=
water	26:36	0:0	2	0
water	26:37	0:0	2	;
if	27:4	28:25	2	(unlikely (! p_audio -> p_buffer ))
cond	27:8	27:37	3	unlikely (! p_audio -> p_buffer )
call	27:8	27:37	4	unlikely
arg	27:18	27:37	5	!p_audio->p_buffer
op	27:18	0:0	6	!
water	27:19	0:0	6	p_audio
op	27:26	0:0	6	->
water	27:28	0:0	6	p_buffer
stmts	28:8	28:25	3	
return	28:8	28:25	4	VLC_ENOMEM
water	28:15	0:0	5	VLC_ENOMEM
return	29:4	29:22	2	VLC_SUCCESS
water	29:11	0:0	3	VLC_SUCCESS

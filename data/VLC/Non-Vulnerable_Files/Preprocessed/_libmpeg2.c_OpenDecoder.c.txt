func	2:0	89:0	0	static int	OpenDecoder
params	2:22	0:0	1	
param	2:24	2:45	2	vlc_object_t *	p_this
stmnts	0:0	88:22	1	
decl	4:4	4:41	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:24	2	decoder_sys_t	*p_sys
decl	6:4	6:24	2	uint32_t	i_accel
op	6:21	0:0	2	=
water	6:23	0:0	2	0
if	7:4	8:27	2	(p_dec -> fmt_in . i_codec != VLC_CODEC_MPGV)
cond	7:8	7:33	3	p_dec -> fmt_in . i_codec != VLC_CODEC_MPGV
water	7:8	0:0	4	p_dec
op	7:13	0:0	4	->
water	7:15	0:0	4	fmt_in
op	7:21	0:0	4	.
water	7:22	0:0	4	i_codec
op	7:30	0:0	4	!=
water	7:33	0:0	4	VLC_CODEC_MPGV
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
switch	10:4	22:4	2	(p_dec -> fmt_in . i_original_fourcc)
cond	10:12	10:26	3	p_dec -> fmt_in . i_original_fourcc
water	10:12	0:0	4	p_dec
op	10:17	0:0	4	->
water	10:19	0:0	4	fmt_in
op	10:25	0:0	4	.
water	10:26	0:0	4	i_original_fourcc
stmts	11:4	22:4	3	
water	11:4	0:0	4	{
water	12:4	0:0	4	case
call	12:9	12:35	4	VLC_FOURCC
arg	12:20	12:23	5	'm'
water	12:20	0:0	6	'm'
arg	12:24	12:27	5	'p'
water	12:24	0:0	6	'p'
arg	12:28	12:31	5	'g'
water	12:28	0:0	6	'g'
arg	12:32	12:35	5	'1'
water	12:32	0:0	6	'1'
water	12:36	0:0	4	:
water	13:4	0:0	4	case
call	13:9	13:35	4	VLC_FOURCC
arg	13:20	13:23	5	'm'
water	13:20	0:0	6	'm'
arg	13:24	13:27	5	'p'
water	13:24	0:0	6	'p'
arg	13:28	13:31	5	'g'
water	13:28	0:0	6	'g'
arg	13:32	13:35	5	'2'
water	13:32	0:0	6	'2'
water	13:36	0:0	4	:
water	14:4	0:0	4	case
call	14:9	14:35	4	VLC_FOURCC
arg	14:20	14:23	5	'm'
water	14:20	0:0	6	'm'
arg	14:24	14:27	5	'p'
water	14:24	0:0	6	'p'
arg	14:28	14:31	5	'g'
water	14:28	0:0	6	'g'
arg	14:32	14:35	5	'v'
water	14:32	0:0	6	'v'
water	14:36	0:0	4	:
water	15:4	0:0	4	case
call	15:9	15:35	4	VLC_FOURCC
arg	15:20	15:23	5	'P'
water	15:20	0:0	6	'P'
arg	15:24	15:27	5	'I'
water	15:24	0:0	6	'I'
arg	15:28	15:31	5	'M'
water	15:28	0:0	6	'M'
arg	15:32	15:35	5	'1'
water	15:32	0:0	6	'1'
water	15:36	0:0	4	:
water	16:4	0:0	4	case
call	16:9	16:35	4	VLC_FOURCC
arg	16:20	16:23	5	'h'
water	16:20	0:0	6	'h'
arg	16:24	16:27	5	'd'
water	16:24	0:0	6	'd'
arg	16:28	16:31	5	'v'
water	16:28	0:0	6	'v'
arg	16:32	16:35	5	'2'
water	16:32	0:0	6	'2'
water	16:36	0:0	4	:
water	17:8	0:0	4	break
water	17:13	0:0	4	;
label	18:4	18:11	4	default :
if	19:8	20:31	4	(p_dec -> fmt_in . i_original_fourcc)
cond	19:12	19:26	5	p_dec -> fmt_in . i_original_fourcc
water	19:12	0:0	6	p_dec
op	19:17	0:0	6	->
water	19:19	0:0	6	fmt_in
op	19:25	0:0	6	.
water	19:26	0:0	6	i_original_fourcc
stmts	20:12	20:31	5	
return	20:12	20:31	6	VLC_EGENERIC
water	20:19	0:0	7	VLC_EGENERIC
break	21:8	21:13	4	
water	22:4	0:0	4	}
if	24:4	25:25	2	(( p_dec -> p_sys = p_sys =calloc (1 ,sizeof ( * p_sys ) ) ) == NULL)
cond	24:8	24:65	3	( p_dec -> p_sys = p_sys =calloc (1 ,sizeof ( * p_sys ) ) ) == NULL
water	24:8	0:0	4	(
water	24:10	0:0	4	p_dec
op	24:15	0:0	4	->
water	24:17	0:0	4	p_sys
op	24:23	0:0	4	=
water	24:25	0:0	4	p_sys
op	24:31	0:0	4	=
call	24:33	24:58	4	calloc
arg	24:41	24:42	5	1
water	24:41	0:0	6	1
arg	24:44	24:58	5	sizeof(*p_sys)
op	24:44	0:0	6	sizeof
water	24:50	0:0	6	(
op	24:51	0:0	6	*
water	24:52	0:0	6	p_sys
water	24:57	0:0	6	)
water	24:60	0:0	4	)
op	24:62	0:0	4	==
water	24:65	0:0	4	NULL
stmts	25:8	25:25	3	
return	25:8	25:25	4	VLC_ENOMEM
water	25:15	0:0	5	VLC_ENOMEM
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	p_mpeg2dec
op	27:22	0:0	2	=
water	27:24	0:0	2	NULL
water	27:28	0:0	2	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	p_synchro
op	28:22	0:0	2	=
water	28:24	0:0	2	NULL
water	28:28	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	p_info
op	29:22	0:0	2	=
water	29:24	0:0	2	NULL
water	29:28	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	i_current_pts
op	30:26	0:0	2	=
water	30:28	0:0	2	0
water	30:29	0:0	2	;
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	i_previous_pts
op	31:26	0:0	2	=
water	31:28	0:0	2	0
water	31:29	0:0	2	;
water	32:4	0:0	2	p_sys
op	32:9	0:0	2	->
water	32:11	0:0	2	i_current_dts
op	32:26	0:0	2	=
water	32:28	0:0	2	0
water	32:29	0:0	2	;
water	33:4	0:0	2	p_sys
op	33:9	0:0	2	->
water	33:11	0:0	2	i_previous_dts
op	33:26	0:0	2	=
water	33:28	0:0	2	0
water	33:29	0:0	2	;
water	34:4	0:0	2	p_sys
op	34:9	0:0	2	->
water	34:11	0:0	2	i_sar_num
op	34:21	0:0	2	=
water	34:23	0:0	2	0
water	34:24	0:0	2	;
water	35:4	0:0	2	p_sys
op	35:9	0:0	2	->
water	35:11	0:0	2	i_sar_den
op	35:21	0:0	2	=
water	35:23	0:0	2	0
water	35:24	0:0	2	;
water	36:4	0:0	2	p_sys
op	36:9	0:0	2	->
water	36:11	0:0	2	b_garbage_pic
op	36:25	0:0	2	=
water	36:27	0:0	2	false
water	36:32	0:0	2	;
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	b_slice_i
op	37:22	0:0	2	=
water	37:24	0:0	2	false
water	37:29	0:0	2	;
water	38:4	0:0	2	p_sys
op	38:9	0:0	2	->
water	38:11	0:0	2	b_second_field
op	38:26	0:0	2	=
water	38:28	0:0	2	false
water	38:33	0:0	2	;
water	39:4	0:0	2	p_sys
op	39:9	0:0	2	->
water	39:11	0:0	2	b_skip
op	39:22	0:0	2	=
water	39:24	0:0	2	false
water	39:29	0:0	2	;
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	b_preroll
op	40:21	0:0	2	=
water	40:23	0:0	2	false
water	40:28	0:0	2	;
call	41:4	41:19	2	DpbInit
arg	41:13	41:19	3	p_dec
water	41:13	0:0	4	p_dec
water	41:20	0:0	2	;
water	42:4	0:0	2	p_sys
op	42:9	0:0	2	->
water	42:11	0:0	2	i_cc_pts
op	42:20	0:0	2	=
water	42:22	0:0	2	0
water	42:23	0:0	2	;
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	i_cc_dts
op	43:20	0:0	2	=
water	43:22	0:0	2	0
water	43:23	0:0	2	;
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	i_cc_flags
op	44:22	0:0	2	=
water	44:24	0:0	2	0
water	44:25	0:0	2	;
water	46:4	0:0	2	p_dec
op	46:9	0:0	2	->
water	46:11	0:0	2	pf_get_cc
op	46:21	0:0	2	=
water	46:23	0:0	2	GetCc
water	46:28	0:0	2	;
call	47:4	47:24	2	cc_Init
arg	47:13	47:24	3	&p_sys->cc
op	47:13	0:0	4	&
water	47:14	0:0	4	p_sys
op	47:19	0:0	4	->
water	47:21	0:0	4	cc
water	47:25	0:0	2	;
water	49:4	0:0	2	p_sys
op	49:9	0:0	2	->
water	49:11	0:0	2	p_gop_user_data
op	49:27	0:0	2	=
water	49:29	0:0	2	NULL
water	49:33	0:0	2	;
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	i_gop_user_data
op	50:27	0:0	2	=
water	50:29	0:0	2	0
water	50:30	0:0	2	;
if	52:4	53:38	2	(vlc_CPU_MMX ( ))
cond	52:8	52:20	3	vlc_CPU_MMX ( )
call	52:8	52:20	4	vlc_CPU_MMX
stmts	53:8	53:38	3	
water	53:8	0:0	4	i_accel
op	53:16	0:0	4	|=
water	53:19	0:0	4	MPEG2_ACCEL_X86_MMX
water	53:38	0:0	4	;
if	54:4	55:40	2	(vlc_CPU_3dNOW ( ))
cond	54:8	54:22	3	vlc_CPU_3dNOW ( )
call	54:8	54:22	4	vlc_CPU_3dNOW
stmts	55:8	55:40	3	
water	55:8	0:0	4	i_accel
op	55:16	0:0	4	|=
water	55:19	0:0	4	MPEG2_ACCEL_X86_3DNOW
water	55:40	0:0	4	;
if	56:4	57:41	2	(vlc_CPU_MMXEXT ( ))
cond	56:8	56:23	3	vlc_CPU_MMXEXT ( )
call	56:8	56:23	4	vlc_CPU_MMXEXT
stmts	57:8	57:41	3	
water	57:8	0:0	4	i_accel
op	57:16	0:0	4	|=
water	57:19	0:0	4	MPEG2_ACCEL_X86_MMXEXT
water	57:41	0:0	4	;
if	59:4	60:42	2	(vlc_CPU_ALTIVEC ( ))
cond	59:8	59:24	3	vlc_CPU_ALTIVEC ( )
call	59:8	59:24	4	vlc_CPU_ALTIVEC
stmts	60:8	60:42	3	
water	60:8	0:0	4	i_accel
op	60:16	0:0	4	|=
water	60:19	0:0	4	MPEG2_ACCEL_PPC_ALTIVEC
water	60:42	0:0	4	;
water	63:4	0:0	2	i_accel
op	63:12	0:0	2	|=
water	63:15	0:0	2	MPEG2_ACCEL_ARM
water	63:30	0:0	2	;
if	66:4	67:39	2	(vlc_CPU_ARM_NEON ( ))
cond	66:8	66:25	3	vlc_CPU_ARM_NEON ( )
call	66:8	66:25	4	vlc_CPU_ARM_NEON
stmts	67:8	67:39	3	
water	67:8	0:0	4	i_accel
op	67:16	0:0	4	|=
water	67:19	0:0	4	MPEG2_ACCEL_ARM_NEON
water	67:39	0:0	4	;
water	72:4	0:0	2	i_accel
op	72:12	0:0	2	=
water	72:14	0:0	2	MPEG2_ACCEL_DETECT
water	72:32	0:0	2	;
call	75:4	75:25	2	mpeg2_accel
arg	75:17	75:25	3	i_accel
water	75:17	0:0	4	i_accel
water	75:26	0:0	2	;
water	77:4	0:0	2	p_sys
op	77:9	0:0	2	->
water	77:11	0:0	2	p_mpeg2dec
op	77:22	0:0	2	=
call	77:24	77:35	2	mpeg2_init
water	77:36	0:0	2	;
if	78:4	83:4	2	(p_sys -> p_mpeg2dec == NULL)
cond	78:8	78:29	3	p_sys -> p_mpeg2dec == NULL
water	78:8	0:0	4	p_sys
op	78:13	0:0	4	->
water	78:15	0:0	4	p_mpeg2dec
op	78:26	0:0	4	==
water	78:29	0:0	4	NULL
stmts	79:4	83:4	3	
water	79:4	0:0	4	{
call	80:8	80:46	4	msg_Err
arg	80:17	80:22	5	p_dec
water	80:17	0:0	6	p_dec
arg	80:24	80:46	5	"mpeg2_init() failed"
water	80:24	0:0	6	"mpeg2_init() failed"
water	80:47	0:0	4	;
call	81:8	81:20	4	free
arg	81:14	81:20	5	p_sys
water	81:14	0:0	6	p_sys
water	81:21	0:0	4	;
return	82:8	82:27	4	VLC_EGENERIC
water	82:15	0:0	5	VLC_EGENERIC
water	83:4	0:0	4	}
water	84:4	0:0	2	p_sys
op	84:9	0:0	2	->
water	84:11	0:0	2	p_info
op	84:18	0:0	2	=
call	84:20	84:50	2	mpeg2_info
arg	84:32	84:50	3	p_sys->p_mpeg2dec
water	84:32	0:0	4	p_sys
op	84:37	0:0	4	->
water	84:39	0:0	4	p_mpeg2dec
water	84:51	0:0	2	;
water	85:4	0:0	2	p_dec
op	85:9	0:0	2	->
water	85:11	0:0	2	pf_decode_video
op	85:27	0:0	2	=
water	85:29	0:0	2	DecodeBlock
water	85:40	0:0	2	;
water	86:4	0:0	2	p_dec
op	86:9	0:0	2	->
water	86:11	0:0	2	fmt_out
op	86:18	0:0	2	.
water	86:19	0:0	2	i_cat
op	86:25	0:0	2	=
water	86:27	0:0	2	VIDEO_ES
water	86:35	0:0	2	;
water	87:4	0:0	2	p_dec
op	87:9	0:0	2	->
water	87:11	0:0	2	fmt_out
op	87:18	0:0	2	.
water	87:19	0:0	2	i_codec
op	87:27	0:0	2	=
water	87:29	0:0	2	0
water	87:30	0:0	2	;
return	88:4	88:22	2	VLC_SUCCESS
water	88:11	0:0	3	VLC_SUCCESS

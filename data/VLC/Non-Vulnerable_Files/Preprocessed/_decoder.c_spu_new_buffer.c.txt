func	2:0	38:0	0	static subpicture_t *	spu_new_buffer
params	2:35	0:0	1	
param	2:37	2:53	2	decoder_t *	p_dec
param	3:37	3:75	2	const subpicture_updater_t *	p_updater
stmnts	0:0	37:19	1	
decl	5:4	5:49	2	decoder_owner_sys_t	*p_owner
op	5:33	0:0	2	=
water	5:35	0:0	2	p_dec
op	5:40	0:0	2	->
water	5:42	0:0	2	p_owner
decl	6:4	6:32	2	vout_thread_t	*p_vout
op	6:26	0:0	2	=
water	6:28	0:0	2	NULL
decl	7:4	7:26	2	subpicture_t	*p_subpic
decl	8:4	8:23	2	int	i_attempts
op	8:19	0:0	2	=
water	8:21	0:0	2	30
while	9:4	17:4	2	(i_attempts --)
cond	9:11	9:21	3	i_attempts --
water	9:11	0:0	4	i_attempts
op	9:21	0:0	4	--
stmts	10:4	17:4	3	
water	10:4	0:0	4	{
if	11:8	12:17	4	(DecoderIsExitRequested (p_dec ) || p_dec -> b_error)
cond	11:12	11:54	5	DecoderIsExitRequested (p_dec ) || p_dec -> b_error
call	11:12	11:42	6	DecoderIsExitRequested
arg	11:36	11:42	7	p_dec
water	11:36	0:0	8	p_dec
op	11:44	0:0	6	||
water	11:47	0:0	6	p_dec
op	11:52	0:0	6	->
water	11:54	0:0	6	b_error
stmts	12:12	12:17	5	
break	12:12	12:17	6	
water	13:8	0:0	4	p_vout
op	13:15	0:0	4	=
call	13:17	13:62	4	input_resource_HoldVout
arg	13:42	13:62	5	p_owner->p_resource
water	13:42	0:0	6	p_owner
op	13:49	0:0	6	->
water	13:51	0:0	6	p_resource
water	13:63	0:0	4	;
if	14:8	15:17	4	(p_vout)
cond	14:12	14:12	5	p_vout
water	14:12	0:0	6	p_vout
stmts	15:12	15:17	5	
break	15:12	15:17	6	
call	16:8	16:47	4	msleep
arg	16:16	16:47	5	DECODER_SPU_VOUT_WAIT_DURATION
water	16:16	0:0	6	DECODER_SPU_VOUT_WAIT_DURATION
water	16:48	0:0	4	;
water	17:4	0:0	4	}
if	18:4	22:4	2	(! p_vout)
cond	18:8	18:9	3	! p_vout
op	18:8	0:0	4	!
water	18:9	0:0	4	p_vout
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:62	4	msg_Warn
arg	20:18	20:23	5	p_dec
water	20:18	0:0	6	p_dec
arg	20:25	20:62	5	"no vout found, dropping subpicture"
water	20:25	0:0	6	"no vout found, dropping subpicture"
water	20:63	0:0	4	;
return	21:8	21:19	4	NULL
water	21:15	0:0	5	NULL
water	22:4	0:0	4	}
if	23:4	28:4	2	(p_owner -> p_spu_vout != p_vout)
cond	23:8	23:31	3	p_owner -> p_spu_vout != p_vout
water	23:8	0:0	4	p_owner
op	23:15	0:0	4	->
water	23:17	0:0	4	p_spu_vout
op	23:28	0:0	4	!=
water	23:31	0:0	4	p_vout
stmts	24:4	28:4	3	
water	24:4	0:0	4	{
water	25:8	0:0	4	p_owner
op	25:15	0:0	4	->
water	25:17	0:0	4	i_spu_channel
op	25:31	0:0	4	=
call	25:33	25:72	4	vout_RegisterSubpictureChannel
arg	25:65	25:72	5	p_vout
water	25:65	0:0	6	p_vout
water	25:73	0:0	4	;
water	26:8	0:0	4	p_owner
op	26:15	0:0	4	->
water	26:17	0:0	4	i_spu_order
op	26:29	0:0	4	=
water	26:31	0:0	4	0
water	26:32	0:0	4	;
water	27:8	0:0	4	p_owner
op	27:15	0:0	4	->
water	27:17	0:0	4	p_spu_vout
op	27:28	0:0	4	=
water	27:30	0:0	4	p_vout
water	27:36	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	p_subpic
op	29:13	0:0	2	=
call	29:15	29:41	2	subpicture_New
arg	29:31	29:41	3	p_updater
water	29:31	0:0	4	p_updater
water	29:42	0:0	2	;
if	30:4	35:4	2	(p_subpic)
cond	30:8	30:8	3	p_subpic
water	30:8	0:0	4	p_subpic
stmts	31:4	35:4	3	
water	31:4	0:0	4	{
water	32:8	0:0	4	p_subpic
op	32:16	0:0	4	->
water	32:18	0:0	4	i_channel
op	32:28	0:0	4	=
water	32:30	0:0	4	p_owner
op	32:37	0:0	4	->
water	32:39	0:0	4	i_spu_channel
water	32:52	0:0	4	;
water	33:8	0:0	4	p_subpic
op	33:16	0:0	4	->
water	33:18	0:0	4	i_order
op	33:26	0:0	4	=
water	33:28	0:0	4	p_owner
op	33:35	0:0	4	->
water	33:37	0:0	4	i_spu_order
op	33:48	0:0	4	++
water	33:50	0:0	4	;
water	34:8	0:0	4	p_subpic
op	34:16	0:0	4	->
water	34:18	0:0	4	b_subtitle
op	34:29	0:0	4	=
water	34:31	0:0	4	true
water	34:35	0:0	4	;
water	35:4	0:0	4	}
call	36:4	36:31	2	vlc_object_release
arg	36:24	36:31	3	p_vout
water	36:24	0:0	4	p_vout
water	36:32	0:0	2	;
return	37:4	37:19	2	p_subpic
water	37:11	0:0	3	p_subpic

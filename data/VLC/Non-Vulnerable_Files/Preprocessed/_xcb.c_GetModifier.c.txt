func	2:16	49:0	0		GetModifier
params	2:27	0:0	1	
param	2:29	2:59	2	xcb_connection_t *	p_connection
param	2:61	2:89	2	xcb_key_symbols_t *	p_symbols
param	2:91	2:108	2	xcb_keysym_t	sym
stmnts	4:4	48:12	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	unsigned
water	4:26	0:0	2	pi_mask
op	4:33	0:0	2	[
water	4:34	0:0	2	8
op	4:35	0:0	2	]
op	4:37	0:0	2	=
water	4:39	0:0	2	{
water	5:8	0:0	2	XCB_MOD_MASK_SHIFT
water	5:26	0:0	2	,
water	5:28	0:0	2	XCB_MOD_MASK_LOCK
water	5:45	0:0	2	,
water	5:47	0:0	2	XCB_MOD_MASK_CONTROL
water	5:67	0:0	2	,
water	6:8	0:0	2	XCB_MOD_MASK_1
water	6:22	0:0	2	,
water	6:24	0:0	2	XCB_MOD_MASK_2
water	6:38	0:0	2	,
water	6:40	0:0	2	XCB_MOD_MASK_3
water	6:54	0:0	2	,
water	7:8	0:0	2	XCB_MOD_MASK_4
water	7:22	0:0	2	,
water	7:24	0:0	2	XCB_MOD_MASK_5
water	8:4	0:0	2	}
water	8:5	0:0	2	;
if	9:4	10:16	2	(sym == 0)
cond	9:8	9:15	3	sym == 0
water	9:8	0:0	4	sym
op	9:12	0:0	4	==
water	9:15	0:0	4	0
stmts	10:8	10:16	3	
return	10:8	10:16	4	0
water	10:15	0:0	5	0
decl	11:4	12:52	2	xcb_get_modifier_mapping_cookie_t	r
op	11:40	0:0	2	=
call	12:12	12:51	3	xcb_get_modifier_mapping
arg	12:38	12:51	4	p_connection
water	12:38	0:0	5	p_connection
decl	13:4	14:67	2	xcb_get_modifier_mapping_reply_t	*p_map
op	13:44	0:0	2	=
call	14:12	14:66	3	xcb_get_modifier_mapping_reply
arg	14:44	14:56	4	p_connection
water	14:44	0:0	5	p_connection
arg	14:58	14:59	4	r
water	14:58	0:0	5	r
arg	14:61	14:66	4	NULL
water	14:61	0:0	5	NULL
if	15:4	16:16	2	(! p_map)
cond	15:8	15:9	3	! p_map
op	15:8	0:0	4	!
water	15:9	0:0	4	p_map
stmts	16:8	16:16	3	
return	16:8	16:16	4	0
water	16:15	0:0	5	0
decl	17:4	17:73	2	xcb_keycode_t	*p_keys
op	17:26	0:0	2	=
call	17:28	17:72	3	xcb_key_symbols_get_keycode
arg	17:57	17:66	4	p_symbols
water	17:57	0:0	5	p_symbols
arg	17:68	17:72	4	sym
water	17:68	0:0	5	sym
if	18:4	19:16	2	(! p_keys)
cond	18:8	18:9	3	! p_keys
op	18:8	0:0	4	!
water	18:9	0:0	4	p_keys
stmts	19:8	19:16	3	
goto	19:8	19:16	4	end
water	19:13	0:0	5	end
decl	20:4	20:13	2	int	i
op	20:10	0:0	2	=
water	20:12	0:0	2	0
decl	21:4	21:27	2	bool	no_modifier
op	21:21	0:0	2	=
water	21:23	0:0	2	true
while	22:4	30:4	2	(p_keys [ i ] != XCB_NO_SYMBOL)
cond	22:11	22:24	3	p_keys [ i ] != XCB_NO_SYMBOL
water	22:11	0:0	4	p_keys
op	22:17	0:0	4	[
water	22:18	0:0	4	i
op	22:19	0:0	4	]
op	22:21	0:0	4	!=
water	22:24	0:0	4	XCB_NO_SYMBOL
stmts	23:4	30:4	3	
water	23:4	0:0	4	{
if	24:8	28:8	4	(p_keys [ i ] != 0)
cond	24:12	24:25	5	p_keys [ i ] != 0
water	24:12	0:0	6	p_keys
op	24:18	0:0	6	[
water	24:19	0:0	6	i
op	24:20	0:0	6	]
op	24:22	0:0	6	!=
water	24:25	0:0	6	0
stmts	25:8	28:8	5	
water	25:8	0:0	6	{
water	26:12	0:0	6	no_modifier
op	26:24	0:0	6	=
water	26:26	0:0	6	false
water	26:31	0:0	6	;
break	27:12	27:17	6	
water	28:8	0:0	6	}
water	29:8	0:0	4	i
op	29:9	0:0	4	++
water	29:11	0:0	4	;
water	30:4	0:0	4	}
if	31:4	32:16	2	(no_modifier)
cond	31:8	31:8	3	no_modifier
water	31:8	0:0	4	no_modifier
stmts	32:8	32:16	3	
goto	32:8	32:16	4	end
water	32:13	0:0	5	end
decl	33:4	33:73	2	xcb_keycode_t	*p_keycode
op	33:29	0:0	2	=
call	33:31	33:72	3	xcb_get_modifier_mapping_keycodes
arg	33:66	33:72	4	p_map
water	33:66	0:0	5	p_map
if	34:4	35:16	2	(! p_keycode)
cond	34:8	34:9	3	! p_keycode
op	34:8	0:0	4	!
water	34:9	0:0	4	p_keycode
stmts	35:8	35:16	3	
goto	35:8	35:16	4	end
water	35:13	0:0	5	end
for	36:4	44:16	2	( int i = 0 ;i < 8;i ++)
forinit	0:0	36:18	3	 int i = 0 ;
decl	36:9	36:18	4	int	i
op	36:15	0:0	4	=
water	36:17	0:0	4	0
cond	36:20	36:24	3	i < 8
water	36:20	0:0	4	i
op	36:22	0:0	4	<
water	36:24	0:0	4	8
forexpr	36:27	36:28	3	i ++
water	36:27	0:0	4	i
op	36:28	0:0	4	++
stmts	37:8	44:16	3	
for	37:8	44:16	4	( int j = 0 ;j < p_map -> keycodes_per_modifier;j ++)
forinit	0:0	37:22	5	 int j = 0 ;
decl	37:13	37:22	6	int	j
op	37:19	0:0	6	=
water	37:21	0:0	6	0
cond	37:24	37:35	5	j < p_map -> keycodes_per_modifier
water	37:24	0:0	6	j
op	37:26	0:0	6	<
water	37:28	0:0	6	p_map
op	37:33	0:0	6	->
water	37:35	0:0	6	keycodes_per_modifier
forexpr	37:58	37:59	5	j ++
water	37:58	0:0	6	j
op	37:59	0:0	6	++
stmts	38:12	44:16	5	
for	38:12	44:16	6	( int k = 0 ;p_keys [ k ] != XCB_NO_SYMBOL;k ++)
forinit	0:0	38:26	7	 int k = 0 ;
decl	38:17	38:26	8	int	k
op	38:23	0:0	8	=
water	38:25	0:0	8	0
cond	38:28	38:41	7	p_keys [ k ] != XCB_NO_SYMBOL
water	38:28	0:0	8	p_keys
op	38:34	0:0	8	[
water	38:35	0:0	8	k
op	38:36	0:0	8	]
op	38:38	0:0	8	!=
water	38:41	0:0	8	XCB_NO_SYMBOL
forexpr	38:56	38:57	7	k ++
water	38:56	0:0	8	k
op	38:57	0:0	8	++
stmts	39:16	44:16	7	
if	39:16	44:16	8	(p_keycode [ i * p_map -> keycodes_per_modifier + j ] == p_keys [ k ])
cond	39:20	39:77	9	p_keycode [ i * p_map -> keycodes_per_modifier + j ] == p_keys [ k ]
water	39:20	0:0	10	p_keycode
op	39:29	0:0	10	[
water	39:30	0:0	10	i
op	39:31	0:0	10	*
water	39:32	0:0	10	p_map
op	39:37	0:0	10	->
water	39:39	0:0	10	keycodes_per_modifier
op	39:61	0:0	10	+
water	39:63	0:0	10	j
op	39:64	0:0	10	]
op	39:66	0:0	10	==
water	39:69	0:0	10	p_keys
op	39:75	0:0	10	[
water	39:76	0:0	10	k
op	39:77	0:0	10	]
stmts	40:16	44:16	9	
water	40:16	0:0	10	{
call	41:20	41:33	10	free
arg	41:26	41:33	11	p_keys
water	41:26	0:0	12	p_keys
water	41:34	0:0	10	;
call	42:20	42:32	10	free
arg	42:26	42:32	11	p_map
water	42:26	0:0	12	p_map
water	42:33	0:0	10	;
return	43:20	43:37	10	pi_mask[i]
water	43:27	0:0	11	pi_mask
op	43:34	0:0	11	[
water	43:35	0:0	11	i
op	43:36	0:0	11	]
water	44:16	0:0	10	}
label	45:0	45:3	2	end :
call	46:4	46:17	2	free
arg	46:10	46:17	3	p_keys
water	46:10	0:0	4	p_keys
water	46:18	0:0	2	;
call	47:4	47:16	2	free
arg	47:10	47:16	3	p_map
water	47:10	0:0	4	p_map
water	47:17	0:0	2	;
return	48:4	48:12	2	0
water	48:11	0:0	3	0

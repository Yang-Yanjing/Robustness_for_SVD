func	2:0	80:0	0	int	OpenAvio
params	2:12	0:0	1	
param	2:13	2:33	2	vlc_object_t *	object
stmnts	0:0	79:23	1	
decl	4:4	4:40	2	access_t	*access
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	access_t
op	4:32	0:0	2	*
water	4:33	0:0	2	)
water	4:34	0:0	2	object
decl	5:4	5:44	2	access_sys_t	*sys
op	5:22	0:0	2	=
call	5:24	5:43	3	malloc
arg	5:31	5:43	4	sizeof(*sys)
op	5:31	0:0	5	sizeof
water	5:37	0:0	5	(
op	5:38	0:0	5	*
water	5:39	0:0	5	sys
water	5:42	0:0	5	)
if	6:4	7:25	2	(! sys)
cond	6:8	6:9	3	! sys
op	6:8	0:0	4	!
water	6:9	0:0	4	sys
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
water	8:4	0:0	2	sys
op	8:7	0:0	2	->
water	8:9	0:0	2	context
op	8:17	0:0	2	=
water	8:19	0:0	2	NULL
water	8:23	0:0	2	;
decl	13:4	13:13	2	char	*url
if	14:4	15:42	2	(!strcmp (access -> psz_access ,"avio" ))
cond	14:8	14:42	3	!strcmp (access -> psz_access ,"avio" )
op	14:8	0:0	4	!
call	14:9	14:42	4	strcmp
arg	14:16	14:34	5	access->psz_access
water	14:16	0:0	6	access
op	14:22	0:0	6	->
water	14:24	0:0	6	psz_access
arg	14:36	14:42	5	"avio"
water	14:36	0:0	6	"avio"
stmts	15:8	15:42	3	
water	15:8	0:0	4	url
op	15:12	0:0	4	=
call	15:14	15:41	4	strdup
arg	15:21	15:41	5	access->psz_location
water	15:21	0:0	6	access
op	15:27	0:0	6	->
water	15:29	0:0	6	psz_location
water	15:42	0:0	4	;
else	16:4	18:18	2
stmts	16:9	18:18	3	
if	16:9	18:18	4	(asprintf (& url ,"%s://%s" ,access -> psz_access ,access -> psz_location ) < 0)
cond	16:13	17:46	5	asprintf (& url ,"%s://%s" ,access -> psz_access ,access -> psz_location ) < 0
call	16:13	17:42	6	asprintf
arg	16:22	16:26	7	&url
op	16:22	0:0	8	&
water	16:23	0:0	8	url
arg	16:28	16:37	7	"%s://%s"
water	16:28	0:0	8	"%s://%s"
arg	16:39	16:57	7	access->psz_access
water	16:39	0:0	8	access
op	16:45	0:0	8	->
water	16:47	0:0	8	psz_access
arg	17:22	17:42	7	access->psz_location
water	17:22	0:0	8	access
op	17:28	0:0	8	->
water	17:30	0:0	8	psz_location
op	17:44	0:0	6	<
water	17:46	0:0	6	0
stmts	18:8	18:18	5	
water	18:8	0:0	6	url
op	18:12	0:0	6	=
water	18:14	0:0	6	NULL
water	18:18	0:0	6	;
if	19:4	22:4	2	(! url)
cond	19:8	19:9	3	! url
op	19:8	0:0	4	!
water	19:9	0:0	4	url
stmts	19:14	22:4	3	
water	19:14	0:0	4	{
call	20:8	20:16	4	free
arg	20:13	20:16	5	sys
water	20:13	0:0	6	sys
water	20:17	0:0	4	;
return	21:8	21:25	4	VLC_ENOMEM
water	21:15	0:0	5	VLC_ENOMEM
water	22:4	0:0	4	}
call	24:4	24:28	2	vlc_init_avformat
arg	24:22	24:28	3	object
water	24:22	0:0	4	object
water	24:29	0:0	2	;
decl	25:4	25:11	2	int	ret
water	27:4	0:0	2	ret
op	27:8	0:0	2	=
call	27:10	27:54	2	avio_open
arg	27:20	27:33	3	&sys->context
op	27:20	0:0	4	&
water	27:21	0:0	4	sys
op	27:24	0:0	4	->
water	27:26	0:0	4	context
arg	27:35	27:38	3	url
water	27:35	0:0	4	url
arg	27:40	27:54	3	AVIO_FLAG_READ
water	27:40	0:0	4	AVIO_FLAG_READ
water	27:55	0:0	2	;
decl	29:4	32:5	2	AVIOInterruptCB	cb
op	29:23	0:0	2	=
water	29:25	0:0	2	{
op	30:8	0:0	2	.
water	30:9	0:0	2	callback
op	30:18	0:0	2	=
water	30:20	0:0	2	UrlInterruptCallback
water	30:40	0:0	2	,
op	31:8	0:0	2	.
water	31:9	0:0	2	opaque
op	31:16	0:0	2	=
water	31:18	0:0	2	access
water	31:24	0:0	2	,
water	32:4	0:0	2	}
decl	33:4	33:32	2	AVDictionary	*options
op	33:26	0:0	2	=
water	33:28	0:0	2	NULL
decl	34:4	34:62	2	char	*psz_opts
op	34:19	0:0	2	=
call	34:21	34:61	3	var_InheritString
arg	34:39	34:45	4	access
water	34:39	0:0	5	access
arg	34:47	34:61	4	"avio-options"
water	34:47	0:0	5	"avio-options"
if	35:4	38:4	2	(psz_opts && * psz_opts)
cond	35:8	35:21	3	psz_opts && * psz_opts
water	35:8	0:0	4	psz_opts
op	35:17	0:0	4	&&
op	35:20	0:0	4	*
water	35:21	0:0	4	psz_opts
stmts	35:31	38:4	3	
water	35:31	0:0	4	{
water	36:8	0:0	4	options
op	36:16	0:0	4	=
call	36:18	36:45	4	vlc_av_get_options
arg	36:37	36:45	5	psz_opts
water	36:37	0:0	6	psz_opts
water	36:46	0:0	4	;
call	37:8	37:21	4	free
arg	37:13	37:21	5	psz_opts
water	37:13	0:0	6	psz_opts
water	37:22	0:0	4	;
water	38:4	0:0	4	}
water	39:4	0:0	2	ret
op	39:8	0:0	2	=
call	39:10	39:70	2	avio_open2
arg	39:21	39:34	3	&sys->context
op	39:21	0:0	4	&
water	39:22	0:0	4	sys
op	39:25	0:0	4	->
water	39:27	0:0	4	context
arg	39:36	39:39	3	url
water	39:36	0:0	4	url
arg	39:41	39:55	3	AVIO_FLAG_READ
water	39:41	0:0	4	AVIO_FLAG_READ
arg	39:57	39:60	3	&cb
op	39:57	0:0	4	&
water	39:58	0:0	4	cb
arg	39:62	39:70	3	&options
op	39:62	0:0	4	&
water	39:63	0:0	4	options
water	39:71	0:0	2	;
decl	40:4	40:31	2	AVDictionaryEntry	*t
op	40:25	0:0	2	=
water	40:27	0:0	2	NULL
while	41:4	42:58	2	(( t =av_dict_get (options ,"" ,t ,AV_DICT_IGNORE_SUFFIX ) ))
cond	41:11	41:66	3	( t =av_dict_get (options ,"" ,t ,AV_DICT_IGNORE_SUFFIX ) )
water	41:11	0:0	4	(
water	41:12	0:0	4	t
op	41:14	0:0	4	=
call	41:16	41:65	4	av_dict_get
arg	41:28	41:35	5	options
water	41:28	0:0	6	options
arg	41:37	41:39	5	""
water	41:37	0:0	6	""
arg	41:41	41:42	5	t
water	41:41	0:0	6	t
arg	41:44	41:65	5	AV_DICT_IGNORE_SUFFIX
water	41:44	0:0	6	AV_DICT_IGNORE_SUFFIX
water	41:66	0:0	4	)
stmts	42:8	42:58	3	
call	42:8	42:57	4	msg_Err
arg	42:17	42:23	5	access
water	42:17	0:0	6	access
arg	42:25	42:48	5	"unknown option \"%s\""
water	42:25	0:0	6	"unknown option \"%s\""
arg	42:50	42:57	5	t->key
water	42:50	0:0	6	t
op	42:51	0:0	6	->
water	42:53	0:0	6	key
water	42:58	0:0	4	;
call	43:4	43:25	2	av_dict_free
arg	43:17	43:25	3	&options
op	43:17	0:0	4	&
water	43:18	0:0	4	options
water	43:26	0:0	2	;
if	45:4	50:4	2	(ret < 0)
cond	45:8	45:14	3	ret < 0
water	45:8	0:0	4	ret
op	45:12	0:0	4	<
water	45:14	0:0	4	0
stmts	45:17	50:4	3	
water	45:17	0:0	4	{
call	46:8	47:46	4	msg_Err
arg	46:16	46:22	5	access
water	46:16	0:0	6	access
arg	46:24	46:47	5	"Failed to open %s: %s"
water	46:24	0:0	6	"Failed to open %s: %s"
arg	46:49	46:52	5	url
water	46:49	0:0	6	url
arg	47:16	47:46	5	vlc_strerror_c(AVUNERROR(ret))
call	47:16	47:45	6	vlc_strerror_c
arg	47:31	47:45	7	AVUNERROR(ret)
call	47:31	47:44	8	AVUNERROR
arg	47:41	47:44	9	ret
water	47:41	0:0	10	ret
water	47:47	0:0	4	;
call	48:8	48:16	4	free
arg	48:13	48:16	5	url
water	48:13	0:0	6	url
water	48:17	0:0	4	;
goto	49:8	49:18	4	error
water	49:13	0:0	5	error
water	50:4	0:0	4	}
call	51:4	51:12	2	free
arg	51:9	51:12	3	url
water	51:9	0:0	4	url
water	51:13	0:0	2	;
if	54:4	58:4	2	(SetupAvioCb (VLC_OBJECT (access ) ))
cond	54:8	54:38	3	SetupAvioCb (VLC_OBJECT (access ) )
call	54:8	54:38	4	SetupAvioCb
arg	54:20	54:38	5	VLC_OBJECT(access)
call	54:20	54:37	6	VLC_OBJECT
arg	54:31	54:37	7	access
water	54:31	0:0	8	access
stmts	54:41	58:4	3	
water	54:41	0:0	4	{
call	55:8	55:46	4	msg_Err
arg	55:16	55:22	5	access
water	55:16	0:0	6	access
arg	55:24	55:46	5	"Module aready in use"
water	55:24	0:0	6	"Module aready in use"
water	55:47	0:0	4	;
call	56:8	56:31	4	avio_close
arg	56:19	56:31	5	sys->context
water	56:19	0:0	6	sys
op	56:22	0:0	6	->
water	56:24	0:0	6	context
water	56:32	0:0	4	;
goto	57:8	57:18	4	error
water	57:13	0:0	5	error
water	58:4	0:0	4	}
decl	60:4	60:42	2	int64_t	size
op	60:17	0:0	2	=
call	60:19	60:41	3	avio_size
arg	60:29	60:41	4	sys->context
water	60:29	0:0	5	sys
op	60:32	0:0	5	->
water	60:34	0:0	5	context
decl	61:4	61:17	2	bool	seekable
water	63:4	0:0	2	seekable
op	63:13	0:0	2	=
op	63:15	0:0	2	!
water	63:16	0:0	2	sys
op	63:19	0:0	2	->
water	63:21	0:0	2	context
op	63:28	0:0	2	->
water	63:30	0:0	2	is_streamed
water	63:41	0:0	2	;
water	65:4	0:0	2	seekable
op	65:13	0:0	2	=
water	65:15	0:0	2	sys
op	65:18	0:0	2	->
water	65:20	0:0	2	context
op	65:27	0:0	2	->
water	65:29	0:0	2	seekable
water	65:37	0:0	2	;
call	67:4	67:76	2	msg_Dbg
arg	67:12	67:18	3	access
water	67:12	0:0	4	access
arg	67:20	67:46	3	"%sseekable, size=%"PRIi64
water	67:20	0:0	4	"%sseekable, size=%"
water	67:40	0:0	4	PRIi64
arg	67:48	67:70	3	seekable?"":"not "
water	67:48	0:0	4	seekable
water	67:57	0:0	4	?
water	67:59	0:0	4	""
water	67:62	0:0	4	:
water	67:64	0:0	4	"not "
arg	67:72	67:76	3	size
water	67:72	0:0	4	size
water	67:77	0:0	2	;
water	68:4	0:0	2	sys
op	68:7	0:0	2	->
water	68:9	0:0	2	size
op	68:14	0:0	2	=
water	68:16	0:0	2	size
op	68:21	0:0	2	>
water	68:23	0:0	2	0
water	68:25	0:0	2	?
water	68:27	0:0	2	size
water	68:32	0:0	2	:
water	68:34	0:0	2	0
water	68:35	0:0	2	;
call	70:4	70:28	2	access_InitFields
arg	70:22	70:28	3	access
water	70:22	0:0	4	access
water	70:29	0:0	2	;
water	71:4	0:0	2	access
op	71:10	0:0	2	->
water	71:12	0:0	2	pf_read
op	71:20	0:0	2	=
water	71:22	0:0	2	Read
water	71:26	0:0	2	;
water	72:4	0:0	2	access
op	72:10	0:0	2	->
water	72:12	0:0	2	pf_block
op	72:21	0:0	2	=
water	72:23	0:0	2	NULL
water	72:27	0:0	2	;
water	73:4	0:0	2	access
op	73:10	0:0	2	->
water	73:12	0:0	2	pf_control
op	73:23	0:0	2	=
water	73:25	0:0	2	Control
water	73:32	0:0	2	;
water	74:4	0:0	2	access
op	74:10	0:0	2	->
water	74:12	0:0	2	pf_seek
op	74:20	0:0	2	=
water	74:22	0:0	2	Seek
water	74:26	0:0	2	;
water	75:4	0:0	2	access
op	75:10	0:0	2	->
water	75:12	0:0	2	p_sys
op	75:18	0:0	2	=
water	75:20	0:0	2	sys
water	75:23	0:0	2	;
return	76:4	76:22	2	VLC_SUCCESS
water	76:11	0:0	3	VLC_SUCCESS
label	77:0	77:5	2	error :
call	78:4	78:12	2	free
arg	78:9	78:12	3	sys
water	78:9	0:0	4	sys
water	78:13	0:0	2	;
return	79:4	79:23	2	VLC_EGENERIC
water	79:11	0:0	3	VLC_EGENERIC

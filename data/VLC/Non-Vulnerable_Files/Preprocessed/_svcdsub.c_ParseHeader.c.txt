func	2:0	48:0	0	static void	ParseHeader
params	2:23	0:0	1	
param	2:25	2:41	2	decoder_t *	p_dec
param	2:43	2:60	2	block_t *	p_block
stmnts	0:0	46:4	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:34	2	uint8_t	*p
op	5:15	0:0	2	=
water	5:17	0:0	2	p_block
op	5:24	0:0	2	->
water	5:26	0:0	2	p_buffer
decl	6:4	6:51	2	uint8_t	i_options
water	6:21	0:0	2	,
decl	6:4	6:51	2	uint8_t	i_options2
water	6:33	0:0	2	,
decl	6:4	6:51	2	uint8_t	i_cmd
water	6:40	0:0	2	,
decl	6:4	6:51	2	uint8_t	i_cmd_arg
decl	7:4	7:9	2	int	i
water	8:4	0:0	2	p_sys
op	8:9	0:0	2	->
water	8:11	0:0	2	i_spu_size
op	8:22	0:0	2	=
call	8:24	8:34	2	GETINT16
arg	8:33	8:34	3	p
water	8:33	0:0	4	p
water	8:35	0:0	2	;
water	9:4	0:0	2	i_options
op	9:15	0:0	2	=
op	9:17	0:0	2	*
water	9:18	0:0	2	p
op	9:19	0:0	2	++
water	9:21	0:0	2	;
water	10:4	0:0	2	i_options2
op	10:15	0:0	2	=
op	10:17	0:0	2	*
water	10:18	0:0	2	p
op	10:19	0:0	2	++
water	10:21	0:0	2	;
if	11:4	11:62	2	(i_options & 0 x08)
cond	11:8	11:21	3	i_options & 0 x08
water	11:8	0:0	4	i_options
op	11:18	0:0	4	&
water	11:20	0:0	4	0
water	11:21	0:0	4	x08
stmts	11:27	11:62	3	
water	11:27	0:0	4	{
water	11:29	0:0	4	p_sys
op	11:34	0:0	4	->
water	11:36	0:0	4	i_duration
op	11:47	0:0	4	=
call	11:49	11:59	4	GETINT32
arg	11:58	11:59	5	p
water	11:58	0:0	6	p
water	11:60	0:0	4	;
water	11:62	0:0	4	}
else	12:4	12:30	2
stmts	12:9	12:30	3	
water	12:9	0:0	4	p_sys
op	12:14	0:0	4	->
water	12:16	0:0	4	i_duration
op	12:27	0:0	4	=
water	12:29	0:0	4	0
water	12:30	0:0	4	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	i_duration
op	13:22	0:0	2	*=
water	13:25	0:0	2	100
op	13:29	0:0	2	/
water	13:31	0:0	2	9
water	13:32	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	i_x_start
op	14:21	0:0	2	=
call	14:23	14:33	2	GETINT16
arg	14:32	14:33	3	p
water	14:32	0:0	4	p
water	14:34	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	i_y_start
op	15:21	0:0	2	=
call	15:23	15:33	2	GETINT16
arg	15:32	15:33	3	p
water	15:32	0:0	4	p
water	15:34	0:0	2	;
water	16:4	0:0	2	p_sys
op	16:9	0:0	2	->
water	16:11	0:0	2	i_width
op	16:21	0:0	2	=
call	16:23	16:33	2	GETINT16
arg	16:32	16:33	3	p
water	16:32	0:0	4	p
water	16:34	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	i_height
op	17:21	0:0	2	=
call	17:23	17:33	2	GETINT16
arg	17:32	17:33	3	p
water	17:32	0:0	4	p
water	17:34	0:0	2	;
for	18:4	24:4	2	(i = 0 ;i < 4;i ++)
forinit	18:9	18:14	3	i = 0 ;
water	18:9	0:0	4	i
op	18:11	0:0	4	=
water	18:13	0:0	4	0
water	18:14	0:0	4	;
cond	18:16	18:20	3	i < 4
water	18:16	0:0	4	i
op	18:18	0:0	4	<
water	18:20	0:0	4	4
forexpr	18:23	18:24	3	i ++
water	18:23	0:0	4	i
op	18:24	0:0	4	++
stmts	19:4	24:4	3	
water	19:4	0:0	4	{
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	p_palette
op	20:24	0:0	4	[
water	20:25	0:0	4	i
op	20:26	0:0	4	]
op	20:27	0:0	4	[
water	20:28	0:0	4	0
op	20:29	0:0	4	]
op	20:31	0:0	4	=
op	20:33	0:0	4	*
water	20:34	0:0	4	p
op	20:35	0:0	4	++
water	20:37	0:0	4	;
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	p_palette
op	21:24	0:0	4	[
water	21:25	0:0	4	i
op	21:26	0:0	4	]
op	21:27	0:0	4	[
water	21:28	0:0	4	2
op	21:29	0:0	4	]
op	21:31	0:0	4	=
op	21:33	0:0	4	*
water	21:34	0:0	4	p
op	21:35	0:0	4	++
water	21:37	0:0	4	;
water	22:8	0:0	4	p_sys
op	22:13	0:0	4	->
water	22:15	0:0	4	p_palette
op	22:24	0:0	4	[
water	22:25	0:0	4	i
op	22:26	0:0	4	]
op	22:27	0:0	4	[
water	22:28	0:0	4	1
op	22:29	0:0	4	]
op	22:31	0:0	4	=
op	22:33	0:0	4	*
water	22:34	0:0	4	p
op	22:35	0:0	4	++
water	22:37	0:0	4	;
water	23:8	0:0	4	p_sys
op	23:13	0:0	4	->
water	23:15	0:0	4	p_palette
op	23:24	0:0	4	[
water	23:25	0:0	4	i
op	23:26	0:0	4	]
op	23:27	0:0	4	[
water	23:28	0:0	4	3
op	23:29	0:0	4	]
op	23:31	0:0	4	=
op	23:33	0:0	4	*
water	23:34	0:0	4	p
op	23:35	0:0	4	++
water	23:37	0:0	4	;
water	24:4	0:0	4	}
water	25:4	0:0	2	i_cmd
op	25:10	0:0	2	=
op	25:12	0:0	2	*
water	25:13	0:0	2	p
op	25:14	0:0	2	++
water	25:16	0:0	2	;
if	27:4	27:41	2	(i_cmd)
cond	27:8	27:8	3	i_cmd
water	27:8	0:0	4	i_cmd
stmts	27:16	27:41	3	
water	27:16	0:0	4	{
water	27:17	0:0	4	i_cmd_arg
op	27:27	0:0	4	=
call	27:29	27:39	4	GETINT32
arg	27:38	27:39	5	p
water	27:38	0:0	6	p
water	27:40	0:0	4	;
water	27:41	0:0	4	}
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	second_field_offset
op	30:31	0:0	2	=
call	30:33	30:43	2	GETINT16
arg	30:42	30:43	3	p
water	30:42	0:0	4	p
water	30:44	0:0	2	;
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	i_image_offset
op	31:27	0:0	2	=
water	31:29	0:0	2	p
op	31:31	0:0	2	-
water	31:33	0:0	2	p_block
op	31:40	0:0	2	->
water	31:42	0:0	2	p_buffer
water	31:50	0:0	2	;
water	32:4	0:0	2	p_sys
op	32:9	0:0	2	->
water	32:11	0:0	2	i_image_length
op	32:27	0:0	2	=
water	32:29	0:0	2	p_sys
op	32:34	0:0	2	->
water	32:36	0:0	2	i_spu_size
op	32:47	0:0	2	-
water	32:49	0:0	2	p_sys
op	32:54	0:0	2	->
water	32:56	0:0	2	i_image_offset
water	32:70	0:0	2	;
water	33:4	0:0	2	p_sys
op	33:9	0:0	2	->
water	33:11	0:0	2	metadata_length
op	33:27	0:0	2	=
water	33:29	0:0	2	p_sys
op	33:34	0:0	2	->
water	33:36	0:0	2	i_image_offset
water	33:50	0:0	2	;
call	35:4	40:57	2	msg_Dbg
arg	35:13	35:18	3	p_dec
water	35:13	0:0	4	p_dec
arg	35:20	36:69	3	"x-start: %d, y-start: %d, width: %d, height %d, ""spu size: %zu, duration: %"PRIu64" (d:%zu p:%"PRIu16")"
water	35:20	0:0	4	"x-start: %d, y-start: %d, width: %d, height %d, "
water	36:13	0:0	4	"spu size: %zu, duration: %"
water	36:41	0:0	4	PRIu64
water	36:47	0:0	4	" (d:%zu p:%"
water	36:60	0:0	4	PRIu16
water	36:66	0:0	4	")"
arg	37:13	37:29	3	p_sys->i_x_start
water	37:13	0:0	4	p_sys
op	37:18	0:0	4	->
water	37:20	0:0	4	i_x_start
arg	37:31	37:47	3	p_sys->i_y_start
water	37:31	0:0	4	p_sys
op	37:36	0:0	4	->
water	37:38	0:0	4	i_y_start
arg	38:13	38:27	3	p_sys->i_width
water	38:13	0:0	4	p_sys
op	38:18	0:0	4	->
water	38:20	0:0	4	i_width
arg	38:29	38:44	3	p_sys->i_height
water	38:29	0:0	4	p_sys
op	38:34	0:0	4	->
water	38:36	0:0	4	i_height
arg	39:13	39:30	3	p_sys->i_spu_size
water	39:13	0:0	4	p_sys
op	39:18	0:0	4	->
water	39:20	0:0	4	i_spu_size
arg	39:32	39:49	3	p_sys->i_duration
water	39:32	0:0	4	p_sys
op	39:37	0:0	4	->
water	39:39	0:0	4	i_duration
arg	40:13	40:34	3	p_sys->i_image_length
water	40:13	0:0	4	p_sys
op	40:18	0:0	4	->
water	40:20	0:0	4	i_image_length
arg	40:36	40:57	3	p_sys->i_image_offset
water	40:36	0:0	4	p_sys
op	40:41	0:0	4	->
water	40:43	0:0	4	i_image_offset
water	40:58	0:0	2	;
for	41:4	46:4	2	(i = 0 ;i < 4;i ++)
forinit	41:9	41:14	3	i = 0 ;
water	41:9	0:0	4	i
op	41:11	0:0	4	=
water	41:13	0:0	4	0
water	41:14	0:0	4	;
cond	41:16	41:20	3	i < 4
water	41:16	0:0	4	i
op	41:18	0:0	4	<
water	41:20	0:0	4	4
forexpr	41:23	41:24	3	i ++
water	41:23	0:0	4	i
op	41:24	0:0	4	++
stmts	42:4	46:4	3	
water	42:4	0:0	4	{
call	43:8	45:64	4	msg_Dbg
arg	43:17	43:22	5	p_dec
water	43:17	0:0	6	p_dec
arg	43:24	43:69	5	"palette[%d]= T: %2x, Y: %2x, u: %2x, v: %2x"
water	43:24	0:0	6	"palette[%d]= T: %2x, Y: %2x, u: %2x, v: %2x"
arg	43:71	43:72	5	i
water	43:71	0:0	6	i
arg	44:17	44:39	5	p_sys->p_palette[i][3]
water	44:17	0:0	6	p_sys
op	44:22	0:0	6	->
water	44:24	0:0	6	p_palette
op	44:33	0:0	6	[
water	44:34	0:0	6	i
op	44:35	0:0	6	]
op	44:36	0:0	6	[
water	44:37	0:0	6	3
op	44:38	0:0	6	]
arg	44:41	44:63	5	p_sys->p_palette[i][0]
water	44:41	0:0	6	p_sys
op	44:46	0:0	6	->
water	44:48	0:0	6	p_palette
op	44:57	0:0	6	[
water	44:58	0:0	6	i
op	44:59	0:0	6	]
op	44:60	0:0	6	[
water	44:61	0:0	6	0
op	44:62	0:0	6	]
arg	45:17	45:39	5	p_sys->p_palette[i][1]
water	45:17	0:0	6	p_sys
op	45:22	0:0	6	->
water	45:24	0:0	6	p_palette
op	45:33	0:0	6	[
water	45:34	0:0	6	i
op	45:35	0:0	6	]
op	45:36	0:0	6	[
water	45:37	0:0	6	1
op	45:38	0:0	6	]
arg	45:41	45:64	5	p_sys->p_palette[i][2]
water	45:41	0:0	6	p_sys
op	45:46	0:0	6	->
water	45:48	0:0	6	p_palette
op	45:57	0:0	6	[
water	45:58	0:0	6	i
op	45:59	0:0	6	]
op	45:60	0:0	6	[
water	45:61	0:0	6	2
op	45:62	0:0	6	]
water	45:65	0:0	4	;
water	46:4	0:0	4	}

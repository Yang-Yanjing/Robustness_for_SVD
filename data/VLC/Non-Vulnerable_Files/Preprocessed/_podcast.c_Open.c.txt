func	2:0	39:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	4:4	38:22	1	
if	4:4	5:27	2	(strcmp (p_this -> p_parent -> psz_object_type ,"playlist" ))
cond	4:8	4:62	3	strcmp (p_this -> p_parent -> psz_object_type ,"playlist" )
call	4:8	4:62	4	strcmp
arg	4:16	4:49	5	p_this->p_parent->psz_object_type
water	4:16	0:0	6	p_this
op	4:22	0:0	6	->
water	4:24	0:0	6	p_parent
op	4:32	0:0	6	->
water	4:34	0:0	6	psz_object_type
arg	4:51	4:62	5	"playlist"
water	4:51	0:0	6	"playlist"
stmts	5:8	5:27	3	
return	5:8	5:27	4	VLC_EGENERIC
water	5:15	0:0	5	VLC_EGENERIC
decl	6:4	6:64	2	services_discovery_t	*p_sd
op	6:31	0:0	2	=
water	6:33	0:0	2	(
water	6:35	0:0	2	services_discovery_t
op	6:55	0:0	2	*
water	6:57	0:0	2	)
water	6:58	0:0	2	p_this
decl	7:4	7:64	2	services_discovery_sys_t	*p_sys
op	7:36	0:0	2	=
call	7:38	7:63	3	malloc
arg	7:46	7:63	4	sizeof(*p_sys)
op	7:46	0:0	5	sizeof
water	7:52	0:0	5	(
op	7:54	0:0	5	*
water	7:55	0:0	5	p_sys
water	7:61	0:0	5	)
if	8:4	9:25	2	(! p_sys)
cond	8:8	8:9	3	! p_sys
op	8:8	0:0	4	!
water	8:9	0:0	4	p_sys
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	i_urls
op	10:18	0:0	2	=
water	10:20	0:0	2	0
water	10:21	0:0	2	;
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	ppsz_urls
op	11:21	0:0	2	=
water	11:23	0:0	2	NULL
water	11:27	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	i_input
op	12:19	0:0	2	=
water	12:21	0:0	2	0
water	12:22	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	pp_input
op	13:20	0:0	2	=
water	13:22	0:0	2	NULL
water	13:26	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	pp_items
op	14:20	0:0	2	=
water	14:22	0:0	2	NULL
water	14:26	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	i_items
op	15:19	0:0	2	=
water	15:21	0:0	2	0
water	15:22	0:0	2	;
call	16:4	16:33	2	vlc_mutex_init
arg	16:20	16:33	3	&p_sys->lock
op	16:20	0:0	4	&
water	16:21	0:0	4	p_sys
op	16:26	0:0	4	->
water	16:28	0:0	4	lock
water	16:34	0:0	2	;
call	17:4	17:32	2	vlc_cond_init
arg	17:19	17:32	3	&p_sys->wait
op	17:19	0:0	4	&
water	17:20	0:0	4	p_sys
op	17:25	0:0	4	->
water	17:27	0:0	4	wait
water	17:33	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	b_update
op	18:20	0:0	2	=
water	18:22	0:0	2	true
water	18:26	0:0	2	;
water	19:4	0:0	2	p_sys
op	19:9	0:0	2	->
water	19:11	0:0	2	b_savedurls_loaded
op	19:30	0:0	2	=
water	19:32	0:0	2	false
water	19:37	0:0	2	;
water	20:4	0:0	2	p_sys
op	20:9	0:0	2	->
water	20:11	0:0	2	psz_request
op	20:23	0:0	2	=
water	20:25	0:0	2	NULL
water	20:29	0:0	2	;
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	update_type
op	21:23	0:0	2	=
water	21:25	0:0	2	UPDATE_URLS
water	21:36	0:0	2	;
water	22:4	0:0	2	p_sd
op	22:8	0:0	2	->
water	22:10	0:0	2	p_sys
op	22:17	0:0	2	=
water	22:19	0:0	2	p_sys
water	22:24	0:0	2	;
decl	24:4	24:37	2	vlc_object_t	*pl
op	24:21	0:0	2	=
water	24:23	0:0	2	p_sd
op	24:27	0:0	2	->
water	24:29	0:0	2	p_parent
call	25:4	25:71	2	var_Create
arg	25:16	25:18	3	pl
water	25:16	0:0	4	pl
arg	25:20	25:34	3	"podcast-urls"
water	25:20	0:0	4	"podcast-urls"
arg	25:36	25:71	3	VLC_VAR_STRING|VLC_VAR_DOINHERIT
water	25:36	0:0	4	VLC_VAR_STRING
op	25:51	0:0	4	|
water	25:53	0:0	4	VLC_VAR_DOINHERIT
water	25:72	0:0	2	;
call	26:4	26:59	2	var_AddCallback
arg	26:21	26:23	3	pl
water	26:21	0:0	4	pl
arg	26:25	26:39	3	"podcast-urls"
water	26:25	0:0	4	"podcast-urls"
arg	26:41	26:51	3	UrlsChange
water	26:41	0:0	4	UrlsChange
arg	26:53	26:59	3	p_sys
water	26:53	0:0	4	p_sys
water	26:60	0:0	2	;
call	27:4	27:54	2	var_Create
arg	27:16	27:18	3	pl
water	27:16	0:0	4	pl
arg	27:20	27:37	3	"podcast-request"
water	27:20	0:0	4	"podcast-request"
arg	27:39	27:54	3	VLC_VAR_STRING
water	27:39	0:0	4	VLC_VAR_STRING
water	27:55	0:0	2	;
call	28:4	28:59	2	var_AddCallback
arg	28:21	28:23	3	pl
water	28:21	0:0	4	pl
arg	28:25	28:42	3	"podcast-request"
water	28:25	0:0	4	"podcast-request"
arg	28:44	28:51	3	Request
water	28:44	0:0	4	Request
arg	28:53	28:59	3	p_sys
water	28:53	0:0	4	p_sys
water	28:60	0:0	2	;
if	29:4	37:4	2	(vlc_clone (& p_sys -> thread ,Run ,p_sd ,VLC_THREAD_PRIORITY_LOW ))
cond	29:8	29:69	3	vlc_clone (& p_sys -> thread ,Run ,p_sd ,VLC_THREAD_PRIORITY_LOW )
call	29:8	29:69	4	vlc_clone
arg	29:19	29:33	5	&p_sys->thread
op	29:19	0:0	6	&
water	29:20	0:0	6	p_sys
op	29:25	0:0	6	->
water	29:27	0:0	6	thread
arg	29:35	29:38	5	Run
water	29:35	0:0	6	Run
arg	29:40	29:44	5	p_sd
water	29:40	0:0	6	p_sd
arg	29:46	29:69	5	VLC_THREAD_PRIORITY_LOW
water	29:46	0:0	6	VLC_THREAD_PRIORITY_LOW
stmts	30:4	37:4	3	
water	30:4	0:0	4	{
call	31:8	31:63	4	var_DelCallback
arg	31:25	31:27	5	pl
water	31:25	0:0	6	pl
arg	31:29	31:46	5	"podcast-request"
water	31:29	0:0	6	"podcast-request"
arg	31:48	31:55	5	Request
water	31:48	0:0	6	Request
arg	31:57	31:63	5	p_sys
water	31:57	0:0	6	p_sys
water	31:64	0:0	4	;
call	32:8	32:63	4	var_DelCallback
arg	32:25	32:27	5	pl
water	32:25	0:0	6	pl
arg	32:29	32:43	5	"podcast-urls"
water	32:29	0:0	6	"podcast-urls"
arg	32:45	32:55	5	UrlsChange
water	32:45	0:0	6	UrlsChange
arg	32:57	32:63	5	p_sys
water	32:57	0:0	6	p_sys
water	32:64	0:0	4	;
call	33:8	33:39	4	vlc_cond_destroy
arg	33:26	33:39	5	&p_sys->wait
op	33:26	0:0	6	&
water	33:27	0:0	6	p_sys
op	33:32	0:0	6	->
water	33:34	0:0	6	wait
water	33:40	0:0	4	;
call	34:8	34:40	4	vlc_mutex_destroy
arg	34:27	34:40	5	&p_sys->lock
op	34:27	0:0	6	&
water	34:28	0:0	6	p_sys
op	34:33	0:0	6	->
water	34:35	0:0	6	lock
water	34:41	0:0	4	;
call	35:8	35:19	4	free
arg	35:14	35:19	5	p_sys
water	35:14	0:0	6	p_sys
water	35:20	0:0	4	;
return	36:8	36:27	4	VLC_EGENERIC
water	36:15	0:0	5	VLC_EGENERIC
water	37:4	0:0	4	}
return	38:4	38:22	2	VLC_SUCCESS
water	38:11	0:0	3	VLC_SUCCESS

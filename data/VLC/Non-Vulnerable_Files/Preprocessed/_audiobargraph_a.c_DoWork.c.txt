func	2:0	64:0	0	static block_t *	DoWork
params	2:22	0:0	1	
param	2:24	2:42	2	filter_t *	p_filter
param	2:44	2:62	2	block_t *	p_in_buf
stmnts	0:0	63:19	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:49	2	float	*p_sample
op	5:20	0:0	2	=
water	5:22	0:0	2	(
water	5:23	0:0	2	float
op	5:29	0:0	2	*
water	5:30	0:0	2	)
water	5:31	0:0	2	p_in_buf
op	5:39	0:0	2	->
water	5:41	0:0	2	p_buffer
decl	6:4	6:32	2	float	i_value[AOUT_CHAN_MAX]
decl	7:4	7:67	2	int	nbChannels
op	7:19	0:0	2	=
call	7:21	7:66	3	aout_FormatNbChannels
arg	7:43	7:66	4	&p_filter->fmt_in.audio
op	7:43	0:0	5	&
water	7:44	0:0	5	p_filter
op	7:52	0:0	5	->
water	7:54	0:0	5	fmt_in
op	7:60	0:0	5	.
water	7:61	0:0	5	audio
for	8:4	9:23	2	( int i = 0 ;i < nbChannels;i ++)
forinit	0:0	8:18	3	 int i = 0 ;
decl	8:9	8:18	4	int	i
op	8:15	0:0	4	=
water	8:17	0:0	4	0
cond	8:20	8:24	3	i < nbChannels
water	8:20	0:0	4	i
op	8:22	0:0	4	<
water	8:24	0:0	4	nbChannels
forexpr	8:36	8:37	3	i ++
water	8:36	0:0	4	i
op	8:37	0:0	4	++
stmts	9:8	9:23	3	
water	9:8	0:0	4	i_value
op	9:15	0:0	4	[
water	9:16	0:0	4	i
op	9:17	0:0	4	]
op	9:19	0:0	4	=
water	9:21	0:0	4	0
op	9:22	0:0	4	.
water	9:23	0:0	4	;
decl	11:4	11:19	2	float	max
op	11:14	0:0	2	=
water	11:16	0:0	2	0
op	11:17	0:0	2	.
water	11:18	0:0	2	0
for	12:4	20:4	2	( size_t i = 0 ;i < p_in_buf -> i_nb_samples;i ++)
forinit	0:0	12:21	3	 size_t i = 0 ;
decl	12:9	12:21	4	size_t	i
op	12:18	0:0	4	=
water	12:20	0:0	4	0
cond	12:23	12:37	3	i < p_in_buf -> i_nb_samples
water	12:23	0:0	4	i
op	12:25	0:0	4	<
water	12:27	0:0	4	p_in_buf
op	12:35	0:0	4	->
water	12:37	0:0	4	i_nb_samples
forexpr	12:51	12:52	3	i ++
water	12:51	0:0	4	i
op	12:52	0:0	4	++
stmts	12:56	20:4	3	
water	12:56	0:0	4	{
for	13:8	19:8	4	( int j = 0 ;j < nbChannels;j ++)
forinit	0:0	13:22	5	 int j = 0 ;
decl	13:13	13:22	6	int	j
op	13:19	0:0	6	=
water	13:21	0:0	6	0
cond	13:24	13:26	5	j < nbChannels
water	13:24	0:0	6	j
op	13:25	0:0	6	<
water	13:26	0:0	6	nbChannels
forexpr	13:38	13:39	5	j ++
water	13:38	0:0	6	j
op	13:39	0:0	6	++
stmts	13:43	19:8	5	
water	13:43	0:0	6	{
decl	14:12	14:36	6	float	ch
op	14:21	0:0	6	=
water	14:23	0:0	6	(
op	14:24	0:0	6	*
water	14:25	0:0	6	p_sample
op	14:33	0:0	6	++
water	14:35	0:0	6	)
if	15:12	16:31	6	(ch > i_value [ j ])
cond	15:16	15:30	7	ch > i_value [ j ]
water	15:16	0:0	8	ch
op	15:19	0:0	8	>
water	15:21	0:0	8	i_value
op	15:28	0:0	8	[
water	15:29	0:0	8	j
op	15:30	0:0	8	]
stmts	16:16	16:31	7	
water	16:16	0:0	8	i_value
op	16:23	0:0	8	[
water	16:24	0:0	8	j
op	16:25	0:0	8	]
op	16:27	0:0	8	=
water	16:29	0:0	8	ch
water	16:31	0:0	8	;
if	17:12	18:24	6	(ch > max)
cond	17:16	17:21	7	ch > max
water	17:16	0:0	8	ch
op	17:19	0:0	8	>
water	17:21	0:0	8	max
stmts	18:16	18:24	7	
water	18:16	0:0	8	max
op	18:20	0:0	8	=
water	18:22	0:0	8	ch
water	18:24	0:0	8	;
water	19:8	0:0	6	}
water	20:4	0:0	4	}
water	21:4	0:0	2	max
op	21:8	0:0	2	*=
water	21:11	0:0	2	max
water	21:14	0:0	2	;
if	22:4	58:4	2	(p_sys -> silence)
cond	22:8	22:15	3	p_sys -> silence
water	22:8	0:0	4	p_sys
op	22:13	0:0	4	->
water	22:15	0:0	4	silence
stmts	22:24	58:4	3	
water	22:24	0:0	4	{
water	24:8	0:0	4	ValueDate_t
op	24:20	0:0	4	*
op	24:21	0:0	4	new
op	24:25	0:0	4	=
call	24:27	24:47	4	xmalloc
arg	24:35	24:47	5	sizeof(*new)
op	24:35	0:0	6	sizeof
water	24:41	0:0	6	(
op	24:42	0:0	6	*
op	24:43	0:0	6	new
water	24:46	0:0	6	)
water	24:48	0:0	4	;
op	25:8	0:0	4	new
op	25:11	0:0	4	->
water	25:13	0:0	4	value
op	25:19	0:0	4	=
water	25:21	0:0	4	max
water	25:24	0:0	4	;
op	26:8	0:0	4	new
op	26:11	0:0	4	->
water	26:13	0:0	4	date
op	26:18	0:0	4	=
water	26:20	0:0	4	p_in_buf
op	26:28	0:0	4	->
water	26:30	0:0	4	i_pts
water	26:35	0:0	4	;
op	27:8	0:0	4	new
op	27:11	0:0	4	->
water	27:13	0:0	4	next
op	27:18	0:0	4	=
water	27:20	0:0	4	NULL
water	27:24	0:0	4	;
if	28:8	29:35	4	(p_sys -> last != NULL)
cond	28:12	28:27	5	p_sys -> last != NULL
water	28:12	0:0	6	p_sys
op	28:17	0:0	6	->
water	28:19	0:0	6	last
op	28:24	0:0	6	!=
water	28:27	0:0	6	NULL
stmts	29:12	29:35	5	
water	29:12	0:0	6	p_sys
op	29:17	0:0	6	->
water	29:19	0:0	6	last
op	29:23	0:0	6	->
water	29:25	0:0	6	next
op	29:30	0:0	6	=
op	29:32	0:0	6	new
water	29:35	0:0	6	;
water	30:8	0:0	4	p_sys
op	30:13	0:0	4	->
water	30:15	0:0	4	last
op	30:20	0:0	4	=
op	30:22	0:0	4	new
water	30:25	0:0	4	;
if	31:8	32:30	4	(p_sys -> first == NULL)
cond	31:12	31:28	5	p_sys -> first == NULL
water	31:12	0:0	6	p_sys
op	31:17	0:0	6	->
water	31:19	0:0	6	first
op	31:25	0:0	6	==
water	31:28	0:0	6	NULL
stmts	32:12	32:30	5	
water	32:12	0:0	6	p_sys
op	32:17	0:0	6	->
water	32:19	0:0	6	first
op	32:25	0:0	6	=
op	32:27	0:0	6	new
water	32:30	0:0	6	;
while	34:8	39:8	4	(p_sys -> first -> date < new -> date - p_sys -> time_window)
cond	34:15	34:55	5	p_sys -> first -> date < new -> date - p_sys -> time_window
water	34:15	0:0	6	p_sys
op	34:20	0:0	6	->
water	34:22	0:0	6	first
op	34:27	0:0	6	->
water	34:29	0:0	6	date
op	34:34	0:0	6	<
op	34:36	0:0	6	new
op	34:39	0:0	6	->
water	34:41	0:0	6	date
op	34:46	0:0	6	-
water	34:48	0:0	6	p_sys
op	34:53	0:0	6	->
water	34:55	0:0	6	time_window
stmts	34:68	39:8	5	
water	34:68	0:0	6	{
water	35:12	0:0	6	p_sys
op	35:17	0:0	6	->
water	35:19	0:0	6	started
op	35:27	0:0	6	=
water	35:29	0:0	6	1
water	35:30	0:0	6	;
decl	36:12	36:47	6	ValueDate_t	*current
op	36:33	0:0	6	=
water	36:35	0:0	6	p_sys
op	36:40	0:0	6	->
water	36:42	0:0	6	first
water	37:12	0:0	6	p_sys
op	37:17	0:0	6	->
water	37:19	0:0	6	first
op	37:25	0:0	6	=
water	37:27	0:0	6	p_sys
op	37:32	0:0	6	->
water	37:34	0:0	6	first
op	37:39	0:0	6	->
water	37:41	0:0	6	next
water	37:45	0:0	6	;
call	38:12	38:24	6	free
arg	38:17	38:24	7	current
water	38:17	0:0	8	current
water	38:25	0:0	6	;
water	39:8	0:0	6	}
if	41:8	57:8	4	(p_sys -> started && p_in_buf -> i_pts > p_sys -> lastAlarm + p_sys -> repetition_time)
cond	41:12	41:74	5	p_sys -> started && p_in_buf -> i_pts > p_sys -> lastAlarm + p_sys -> repetition_time
water	41:12	0:0	6	p_sys
op	41:17	0:0	6	->
water	41:19	0:0	6	started
op	41:27	0:0	6	&&
water	41:30	0:0	6	p_in_buf
op	41:38	0:0	6	->
water	41:40	0:0	6	i_pts
op	41:46	0:0	6	>
water	41:48	0:0	6	p_sys
op	41:53	0:0	6	->
water	41:55	0:0	6	lastAlarm
op	41:65	0:0	6	+
water	41:67	0:0	6	p_sys
op	41:72	0:0	6	->
water	41:74	0:0	6	repetition_time
stmts	41:91	57:8	5	
water	41:91	0:0	6	{
decl	43:12	43:47	6	ValueDate_t	*current
op	43:33	0:0	6	=
water	43:35	0:0	6	p_sys
op	43:40	0:0	6	->
water	43:42	0:0	6	first
decl	44:12	44:27	6	float	sum
op	44:22	0:0	6	=
water	44:24	0:0	6	0
op	44:25	0:0	6	.
water	44:26	0:0	6	0
decl	45:12	45:25	6	int	count
op	45:22	0:0	6	=
water	45:24	0:0	6	0
while	46:12	50:12	6	(current != NULL)
cond	46:19	46:30	7	current != NULL
water	46:19	0:0	8	current
op	46:27	0:0	8	!=
water	46:30	0:0	8	NULL
stmts	46:36	50:12	7	
water	46:36	0:0	8	{
water	47:16	0:0	8	sum
op	47:20	0:0	8	+=
water	47:23	0:0	8	current
op	47:30	0:0	8	->
water	47:32	0:0	8	value
water	47:37	0:0	8	;
water	48:16	0:0	8	count
op	48:21	0:0	8	++
water	48:23	0:0	8	;
water	49:16	0:0	8	current
op	49:24	0:0	8	=
water	49:26	0:0	8	current
op	49:33	0:0	8	->
water	49:35	0:0	8	next
water	49:39	0:0	8	;
water	50:12	0:0	8	}
water	51:12	0:0	6	sum
op	51:16	0:0	6	/=
water	51:19	0:0	6	count
water	51:24	0:0	6	;
water	52:12	0:0	6	sum
op	52:16	0:0	6	=
call	52:18	52:27	6	sqrtf
arg	52:24	52:27	7	sum
water	52:24	0:0	8	sum
water	52:28	0:0	6	;
call	54:12	55:52	6	var_SetBool
arg	54:24	54:42	7	p_filter->p_libvlc
water	54:24	0:0	8	p_filter
op	54:32	0:0	8	->
water	54:34	0:0	8	p_libvlc
arg	54:44	54:67	7	"audiobargraph_v-alarm"
water	54:44	0:0	8	"audiobargraph_v-alarm"
arg	55:24	55:52	7	sum<p_sys->alarm_threshold
water	55:24	0:0	8	sum
op	55:28	0:0	8	<
water	55:30	0:0	8	p_sys
op	55:35	0:0	8	->
water	55:37	0:0	8	alarm_threshold
water	55:53	0:0	6	;
water	56:12	0:0	6	p_sys
op	56:17	0:0	6	->
water	56:19	0:0	6	lastAlarm
op	56:29	0:0	6	=
water	56:31	0:0	6	p_in_buf
op	56:39	0:0	6	->
water	56:41	0:0	6	i_pts
water	56:46	0:0	6	;
water	57:8	0:0	6	}
water	58:4	0:0	4	}
if	59:4	62:4	2	(p_sys -> bargraph && nbChannels > 0 && p_sys -> counter ++ > p_sys -> bargraph_repetition)
cond	59:8	59:71	3	p_sys -> bargraph && nbChannels > 0 && p_sys -> counter ++ > p_sys -> bargraph_repetition
water	59:8	0:0	4	p_sys
op	59:13	0:0	4	->
water	59:15	0:0	4	bargraph
op	59:24	0:0	4	&&
water	59:27	0:0	4	nbChannels
op	59:38	0:0	4	>
water	59:40	0:0	4	0
op	59:42	0:0	4	&&
water	59:45	0:0	4	p_sys
op	59:50	0:0	4	->
water	59:52	0:0	4	counter
op	59:59	0:0	4	++
op	59:62	0:0	4	>
water	59:64	0:0	4	p_sys
op	59:69	0:0	4	->
water	59:71	0:0	4	bargraph_repetition
stmts	59:92	62:4	3	
water	59:92	0:0	4	{
call	60:8	60:48	4	SendValues
arg	60:19	60:27	5	p_filter
water	60:19	0:0	6	p_filter
arg	60:29	60:36	5	i_value
water	60:29	0:0	6	i_value
arg	60:38	60:48	5	nbChannels
water	60:38	0:0	6	nbChannels
water	60:49	0:0	4	;
water	61:8	0:0	4	p_sys
op	61:13	0:0	4	->
water	61:15	0:0	4	counter
op	61:23	0:0	4	=
water	61:25	0:0	4	0
water	61:26	0:0	4	;
water	62:4	0:0	4	}
return	63:4	63:19	2	p_in_buf
water	63:11	0:0	3	p_in_buf

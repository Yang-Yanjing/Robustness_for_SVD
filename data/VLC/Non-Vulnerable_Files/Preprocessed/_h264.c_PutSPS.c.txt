func	2:0	185:0	0	static void	PutSPS
params	2:18	0:0	1	
param	2:20	2:36	2	decoder_t *	p_dec
param	2:38	2:54	2	block_t *	p_frag
stmnts	0:0	184:36	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:26	2	uint8_t	*pb_dec
op	5:20	0:0	2	=
water	5:22	0:0	2	NULL
decl	6:4	6:21	2	int	i_dec
op	6:18	0:0	2	=
water	6:20	0:0	2	0
decl	7:4	7:10	2	bs_t	s
decl	8:4	8:13	2	int	i_tmp
decl	9:4	9:21	2	uint32_t	i_sps_id
call	10:4	11:42	2	CreateDecodedNAL
arg	10:22	10:29	3	&pb_dec
op	10:22	0:0	4	&
water	10:23	0:0	4	pb_dec
arg	10:31	10:37	3	&i_dec
op	10:31	0:0	4	&
water	10:32	0:0	4	i_dec
arg	10:39	10:59	3	&p_frag->p_buffer[5]
op	10:39	0:0	4	&
water	10:40	0:0	4	p_frag
op	10:46	0:0	4	->
water	10:48	0:0	4	p_buffer
op	10:56	0:0	4	[
water	10:57	0:0	4	5
op	10:58	0:0	4	]
arg	11:21	11:42	3	p_frag->i_buffer-5
water	11:21	0:0	4	p_frag
op	11:27	0:0	4	->
water	11:29	0:0	4	i_buffer
op	11:38	0:0	4	-
water	11:40	0:0	4	5
water	11:43	0:0	2	;
call	12:4	12:31	2	bs_init
arg	12:13	12:15	3	&s
op	12:13	0:0	4	&
water	12:14	0:0	4	s
arg	12:17	12:23	3	pb_dec
water	12:17	0:0	4	pb_dec
arg	12:25	12:31	3	i_dec
water	12:25	0:0	4	i_dec
water	12:32	0:0	2	;
decl	13:4	13:40	2	int	i_profile_idc
op	13:22	0:0	2	=
call	13:24	13:39	3	bs_read
arg	13:33	13:35	4	&s
op	13:33	0:0	5	&
water	13:34	0:0	5	s
arg	13:37	13:39	4	8
water	13:37	0:0	5	8
water	14:4	0:0	2	p_dec
op	14:9	0:0	2	->
water	14:11	0:0	2	fmt_out
op	14:18	0:0	2	.
water	14:19	0:0	2	i_profile
op	14:29	0:0	2	=
water	14:31	0:0	2	i_profile_idc
water	14:44	0:0	2	;
call	16:4	16:29	2	bs_skip
arg	16:13	16:15	3	&s
op	16:13	0:0	4	&
water	16:14	0:0	4	s
arg	16:17	16:29	3	1+1+1+1+4
water	16:17	0:0	4	1
op	16:18	0:0	4	+
water	16:19	0:0	4	1
op	16:20	0:0	4	+
water	16:21	0:0	4	1
op	16:22	0:0	4	+
water	16:23	0:0	4	1
op	16:25	0:0	4	+
water	16:27	0:0	4	4
water	16:30	0:0	2	;
water	17:4	0:0	2	p_dec
op	17:9	0:0	2	->
water	17:11	0:0	2	fmt_out
op	17:18	0:0	2	.
water	17:19	0:0	2	i_level
op	17:27	0:0	2	=
call	17:29	17:44	2	bs_read
arg	17:38	17:40	3	&s
op	17:38	0:0	4	&
water	17:39	0:0	4	s
arg	17:42	17:44	3	8
water	17:42	0:0	4	8
water	17:45	0:0	2	;
water	19:4	0:0	2	i_sps_id
op	19:13	0:0	2	=
call	19:15	19:30	2	bs_read_ue
arg	19:27	19:30	3	&s
op	19:27	0:0	4	&
water	19:28	0:0	4	s
water	19:31	0:0	2	;
if	20:4	26:4	2	(i_sps_id >= SPS_MAX)
cond	20:8	20:20	3	i_sps_id >= SPS_MAX
water	20:8	0:0	4	i_sps_id
op	20:17	0:0	4	>=
water	20:20	0:0	4	SPS_MAX
stmts	21:4	26:4	3	
water	21:4	0:0	4	{
call	22:8	22:61	4	msg_Warn
arg	22:18	22:23	5	p_dec
water	22:18	0:0	6	p_dec
arg	22:25	22:50	5	"invalid SPS (sps_id=%u)"
water	22:25	0:0	6	"invalid SPS (sps_id=%u)"
arg	22:52	22:61	5	i_sps_id
water	22:52	0:0	6	i_sps_id
water	22:62	0:0	4	;
call	23:8	23:21	4	free
arg	23:14	23:21	5	pb_dec
water	23:14	0:0	6	pb_dec
water	23:22	0:0	4	;
call	24:8	24:30	4	block_Release
arg	24:23	24:30	5	p_frag
water	24:23	0:0	6	p_frag
water	24:31	0:0	4	;
return	25:8	25:14	4	
water	26:4	0:0	4	}
if	27:4	70:4	2	(i_profile_idc == 100 || i_profile_idc == 110 || i_profile_idc == 122 || i_profile_idc == 244 || i_profile_idc == 44 || i_profile_idc == 83 || i_profile_idc == 86)
cond	27:8	30:26	3	i_profile_idc == 100 || i_profile_idc == 110 || i_profile_idc == 122 || i_profile_idc == 244 || i_profile_idc == 44 || i_profile_idc == 83 || i_profile_idc == 86
water	27:8	0:0	4	i_profile_idc
op	27:22	0:0	4	==
water	27:25	0:0	4	100
op	27:29	0:0	4	||
water	27:32	0:0	4	i_profile_idc
op	27:46	0:0	4	==
water	27:49	0:0	4	110
op	27:53	0:0	4	||
water	28:8	0:0	4	i_profile_idc
op	28:22	0:0	4	==
water	28:25	0:0	4	122
op	28:29	0:0	4	||
water	28:32	0:0	4	i_profile_idc
op	28:46	0:0	4	==
water	28:49	0:0	4	244
op	28:53	0:0	4	||
water	29:8	0:0	4	i_profile_idc
op	29:22	0:0	4	==
water	29:26	0:0	4	44
op	29:29	0:0	4	||
water	29:32	0:0	4	i_profile_idc
op	29:46	0:0	4	==
water	29:50	0:0	4	83
op	29:53	0:0	4	||
water	30:8	0:0	4	i_profile_idc
op	30:22	0:0	4	==
water	30:26	0:0	4	86
stmts	31:4	70:4	3	
water	31:4	0:0	4	{
decl	33:8	33:56	4	const int	i_chroma_format_idc
op	33:38	0:0	4	=
call	33:40	33:55	5	bs_read_ue
arg	33:52	33:55	6	&s
op	33:52	0:0	7	&
water	33:53	0:0	7	s
if	34:8	35:28	4	(i_chroma_format_idc == 3)
cond	34:12	34:35	5	i_chroma_format_idc == 3
water	34:12	0:0	6	i_chroma_format_idc
op	34:32	0:0	6	==
water	34:35	0:0	6	3
stmts	35:12	35:28	5	
call	35:12	35:27	6	bs_skip
arg	35:21	35:23	7	&s
op	35:21	0:0	8	&
water	35:22	0:0	8	s
arg	35:25	35:27	7	1
water	35:25	0:0	8	1
water	35:28	0:0	6	;
call	37:8	37:23	4	bs_read_ue
arg	37:20	37:23	5	&s
op	37:20	0:0	6	&
water	37:21	0:0	6	s
water	37:24	0:0	4	;
call	39:8	39:23	4	bs_read_ue
arg	39:20	39:23	5	&s
op	39:20	0:0	6	&
water	39:21	0:0	6	s
water	39:24	0:0	4	;
call	41:8	41:23	4	bs_skip
arg	41:17	41:19	5	&s
op	41:17	0:0	6	&
water	41:18	0:0	6	s
arg	41:21	41:23	5	1
water	41:21	0:0	6	1
water	41:24	0:0	4	;
water	43:8	0:0	4	i_tmp
op	43:14	0:0	4	=
call	43:16	43:31	4	bs_read
arg	43:25	43:27	5	&s
op	43:25	0:0	6	&
water	43:26	0:0	6	s
arg	43:29	43:31	5	1
water	43:29	0:0	6	1
water	43:32	0:0	4	;
if	44:8	69:8	4	(i_tmp)
cond	44:12	44:12	5	i_tmp
water	44:12	0:0	6	i_tmp
stmts	45:8	69:8	5	
water	45:8	0:0	6	{
for	46:12	68:12	6	( int i = 0 ;i < ( ( 3 != i_chroma_format_idc ) ? 8 : 12 );i ++)
forinit	0:0	46:26	7	 int i = 0 ;
decl	46:17	46:26	8	int	i
op	46:23	0:0	8	=
water	46:25	0:0	8	0
cond	46:28	46:68	7	i < ( ( 3 != i_chroma_format_idc ) ? 8 : 12 )
water	46:28	0:0	8	i
op	46:30	0:0	8	<
water	46:32	0:0	8	(
water	46:33	0:0	8	(
water	46:34	0:0	8	3
op	46:36	0:0	8	!=
water	46:39	0:0	8	i_chroma_format_idc
water	46:58	0:0	8	)
water	46:60	0:0	8	?
water	46:62	0:0	8	8
water	46:64	0:0	8	:
water	46:66	0:0	8	12
water	46:68	0:0	8	)
forexpr	46:71	46:72	7	i ++
water	46:71	0:0	8	i
op	46:72	0:0	8	++
stmts	47:12	68:12	7	
water	47:12	0:0	8	{
water	49:16	0:0	8	i_tmp
op	49:22	0:0	8	=
call	49:24	49:39	8	bs_read
arg	49:33	49:35	9	&s
op	49:33	0:0	10	&
water	49:34	0:0	10	s
arg	49:37	49:39	9	1
water	49:37	0:0	10	1
water	49:40	0:0	8	;
if	50:16	51:28	8	(! i_tmp)
cond	50:20	50:21	9	! i_tmp
op	50:20	0:0	10	!
water	50:21	0:0	10	i_tmp
stmts	51:20	51:28	9	
continue	51:20	51:28	10	
decl	52:16	52:69	8	const int	i_size_of_scaling_list
op	52:49	0:0	8	=
water	52:51	0:0	8	(
water	52:52	0:0	8	i
op	52:54	0:0	8	<
water	52:56	0:0	8	6
water	52:58	0:0	8	)
water	52:60	0:0	8	?
water	52:62	0:0	8	16
water	52:65	0:0	8	:
water	52:67	0:0	8	64
decl	54:16	54:35	8	int	i_lastscale
op	54:32	0:0	8	=
water	54:34	0:0	8	8
decl	55:16	55:35	8	int	i_nextscale
op	55:32	0:0	8	=
water	55:34	0:0	8	8
for	56:16	67:16	8	( int j = 0 ;j < i_size_of_scaling_list;j ++)
forinit	0:0	56:30	9	 int j = 0 ;
decl	56:21	56:30	10	int	j
op	56:27	0:0	10	=
water	56:29	0:0	10	0
cond	56:32	56:36	9	j < i_size_of_scaling_list
water	56:32	0:0	10	j
op	56:34	0:0	10	<
water	56:36	0:0	10	i_size_of_scaling_list
forexpr	56:60	56:61	9	j ++
water	56:60	0:0	10	j
op	56:61	0:0	10	++
stmts	57:16	67:16	9	
water	57:16	0:0	10	{
if	58:20	64:20	10	(i_nextscale != 0)
cond	58:24	58:39	11	i_nextscale != 0
water	58:24	0:0	12	i_nextscale
op	58:36	0:0	12	!=
water	58:39	0:0	12	0
stmts	59:20	64:20	11	
water	59:20	0:0	12	{
water	61:24	0:0	12	i_tmp
op	61:30	0:0	12	=
call	61:32	61:47	12	bs_read_se
arg	61:44	61:47	13	&s
op	61:44	0:0	14	&
water	61:45	0:0	14	s
water	61:48	0:0	12	;
water	62:24	0:0	12	i_nextscale
op	62:36	0:0	12	=
water	62:38	0:0	12	(
water	62:40	0:0	12	i_lastscale
op	62:52	0:0	12	+
water	62:54	0:0	12	i_tmp
op	62:60	0:0	12	+
water	62:62	0:0	12	256
water	62:66	0:0	12	)
op	62:68	0:0	12	%
water	62:70	0:0	12	256
water	62:73	0:0	12	;
water	64:20	0:0	12	}
water	66:20	0:0	10	i_lastscale
op	66:32	0:0	10	=
water	66:34	0:0	10	(
water	66:36	0:0	10	i_nextscale
op	66:48	0:0	10	==
water	66:51	0:0	10	0
water	66:53	0:0	10	)
water	66:55	0:0	10	?
water	66:57	0:0	10	i_lastscale
water	66:69	0:0	10	:
water	66:71	0:0	10	i_nextscale
water	66:82	0:0	10	;
water	67:16	0:0	10	}
water	68:12	0:0	8	}
water	69:8	0:0	6	}
water	70:4	0:0	4	}
water	72:4	0:0	2	p_sys
op	72:9	0:0	2	->
water	72:11	0:0	2	i_log2_max_frame_num
op	72:32	0:0	2	=
call	72:34	72:49	2	bs_read_ue
arg	72:46	72:49	3	&s
op	72:46	0:0	4	&
water	72:47	0:0	4	s
water	72:50	0:0	2	;
if	73:4	74:40	2	(p_sys -> i_log2_max_frame_num > 12)
cond	73:8	73:38	3	p_sys -> i_log2_max_frame_num > 12
water	73:8	0:0	4	p_sys
op	73:13	0:0	4	->
water	73:15	0:0	4	i_log2_max_frame_num
op	73:36	0:0	4	>
water	73:38	0:0	4	12
stmts	74:8	74:40	3	
water	74:8	0:0	4	p_sys
op	74:13	0:0	4	->
water	74:15	0:0	4	i_log2_max_frame_num
op	74:36	0:0	4	=
water	74:38	0:0	4	12
water	74:40	0:0	4	;
water	76:4	0:0	2	p_sys
op	76:9	0:0	2	->
water	76:11	0:0	2	i_pic_order_cnt_type
op	76:32	0:0	2	=
call	76:34	76:49	2	bs_read_ue
arg	76:46	76:49	3	&s
op	76:46	0:0	4	&
water	76:47	0:0	4	s
water	76:50	0:0	2	;
if	77:4	83:4	2	(p_sys -> i_pic_order_cnt_type == 0)
cond	77:8	77:39	3	p_sys -> i_pic_order_cnt_type == 0
water	77:8	0:0	4	p_sys
op	77:13	0:0	4	->
water	77:15	0:0	4	i_pic_order_cnt_type
op	77:36	0:0	4	==
water	77:39	0:0	4	0
stmts	78:4	83:4	3	
water	78:4	0:0	4	{
water	80:8	0:0	4	p_sys
op	80:13	0:0	4	->
water	80:15	0:0	4	i_log2_max_pic_order_cnt_lsb
op	80:44	0:0	4	=
call	80:46	80:61	4	bs_read_ue
arg	80:58	80:61	5	&s
op	80:58	0:0	6	&
water	80:59	0:0	6	s
water	80:62	0:0	4	;
if	81:8	82:52	4	(p_sys -> i_log2_max_pic_order_cnt_lsb > 12)
cond	81:12	81:50	5	p_sys -> i_log2_max_pic_order_cnt_lsb > 12
water	81:12	0:0	6	p_sys
op	81:17	0:0	6	->
water	81:19	0:0	6	i_log2_max_pic_order_cnt_lsb
op	81:48	0:0	6	>
water	81:50	0:0	6	12
stmts	82:12	82:52	5	
water	82:12	0:0	6	p_sys
op	82:17	0:0	6	->
water	82:19	0:0	6	i_log2_max_pic_order_cnt_lsb
op	82:48	0:0	6	=
water	82:50	0:0	6	12
water	82:52	0:0	6	;
water	83:4	0:0	4	}
else	84:4	102:4	2
stmts	84:9	102:4	3	
if	84:9	102:4	4	(p_sys -> i_pic_order_cnt_type == 1)
cond	84:13	84:44	5	p_sys -> i_pic_order_cnt_type == 1
water	84:13	0:0	6	p_sys
op	84:18	0:0	6	->
water	84:20	0:0	6	i_pic_order_cnt_type
op	84:41	0:0	6	==
water	84:44	0:0	6	1
stmts	85:4	102:4	5	
water	85:4	0:0	6	{
decl	86:8	86:19	6	int	i_cycle
water	88:8	0:0	6	p_sys
op	88:13	0:0	6	->
water	88:15	0:0	6	i_delta_pic_order_always_zero_flag
op	88:50	0:0	6	=
call	88:52	88:67	6	bs_read
arg	88:61	88:63	7	&s
op	88:61	0:0	8	&
water	88:62	0:0	8	s
arg	88:65	88:67	7	1
water	88:65	0:0	8	1
water	88:68	0:0	6	;
call	90:8	90:23	6	bs_read_se
arg	90:20	90:23	7	&s
op	90:20	0:0	8	&
water	90:21	0:0	8	s
water	90:24	0:0	6	;
call	92:8	92:23	6	bs_read_se
arg	92:20	92:23	7	&s
op	92:20	0:0	8	&
water	92:21	0:0	8	s
water	92:24	0:0	6	;
water	94:8	0:0	6	i_cycle
op	94:16	0:0	6	=
call	94:18	94:33	6	bs_read_ue
arg	94:30	94:33	7	&s
op	94:30	0:0	8	&
water	94:31	0:0	8	s
water	94:34	0:0	6	;
if	95:8	95:41	6	(i_cycle > 256)
cond	95:12	95:22	7	i_cycle > 256
water	95:12	0:0	8	i_cycle
op	95:20	0:0	8	>
water	95:22	0:0	8	256
stmts	95:28	95:41	7	
water	95:28	0:0	8	i_cycle
op	95:36	0:0	8	=
water	95:38	0:0	8	256
water	95:41	0:0	8	;
while	96:8	101:8	6	(i_cycle > 0)
cond	96:15	96:25	7	i_cycle > 0
water	96:15	0:0	8	i_cycle
op	96:23	0:0	8	>
water	96:25	0:0	8	0
stmts	97:8	101:8	7	
water	97:8	0:0	8	{
call	99:12	99:26	8	bs_read_se
arg	99:23	99:26	9	&s
op	99:23	0:0	10	&
water	99:24	0:0	10	s
water	99:27	0:0	8	;
water	100:12	0:0	8	i_cycle
op	100:19	0:0	8	--
water	100:21	0:0	8	;
water	101:8	0:0	8	}
water	102:4	0:0	6	}
call	104:4	104:19	2	bs_read_ue
arg	104:16	104:19	3	&s
op	104:16	0:0	4	&
water	104:17	0:0	4	s
water	104:20	0:0	2	;
call	106:4	106:19	2	bs_skip
arg	106:13	106:15	3	&s
op	106:13	0:0	4	&
water	106:14	0:0	4	s
arg	106:17	106:19	3	1
water	106:17	0:0	4	1
water	106:20	0:0	2	;
water	108:4	0:0	2	p_dec
op	108:9	0:0	2	->
water	108:11	0:0	2	fmt_out
op	108:18	0:0	2	.
water	108:19	0:0	2	video
op	108:24	0:0	2	.
water	108:25	0:0	2	i_width
op	108:34	0:0	2	=
water	108:36	0:0	2	16
op	108:39	0:0	2	*
water	108:41	0:0	2	(
call	108:43	108:58	2	bs_read_ue
arg	108:55	108:58	3	&s
op	108:55	0:0	4	&
water	108:56	0:0	4	s
op	108:60	0:0	2	+
water	108:62	0:0	2	1
water	108:64	0:0	2	)
water	108:65	0:0	2	;
water	109:4	0:0	2	p_dec
op	109:9	0:0	2	->
water	109:11	0:0	2	fmt_out
op	109:18	0:0	2	.
water	109:19	0:0	2	video
op	109:24	0:0	2	.
water	109:25	0:0	2	i_height
op	109:34	0:0	2	=
water	109:36	0:0	2	16
op	109:39	0:0	2	*
water	109:41	0:0	2	(
call	109:43	109:58	2	bs_read_ue
arg	109:55	109:58	3	&s
op	109:55	0:0	4	&
water	109:56	0:0	4	s
op	109:60	0:0	2	+
water	109:62	0:0	2	1
water	109:64	0:0	2	)
water	109:65	0:0	2	;
water	111:4	0:0	2	p_sys
op	111:9	0:0	2	->
water	111:11	0:0	2	b_frame_mbs_only
op	111:28	0:0	2	=
call	111:30	111:45	2	bs_read
arg	111:39	111:41	3	&s
op	111:39	0:0	4	&
water	111:40	0:0	4	s
arg	111:43	111:45	3	1
water	111:43	0:0	4	1
water	111:46	0:0	2	;
water	112:4	0:0	2	p_dec
op	112:9	0:0	2	->
water	112:11	0:0	2	fmt_out
op	112:18	0:0	2	.
water	112:19	0:0	2	video
op	112:24	0:0	2	.
water	112:25	0:0	2	i_height
op	112:34	0:0	2	*=
water	112:38	0:0	2	(
water	112:40	0:0	2	2
op	112:42	0:0	2	-
water	112:44	0:0	2	p_sys
op	112:49	0:0	2	->
water	112:51	0:0	2	b_frame_mbs_only
water	112:68	0:0	2	)
water	112:69	0:0	2	;
if	113:4	116:4	2	(p_sys -> b_frame_mbs_only == 0)
cond	113:8	113:35	3	p_sys -> b_frame_mbs_only == 0
water	113:8	0:0	4	p_sys
op	113:13	0:0	4	->
water	113:15	0:0	4	b_frame_mbs_only
op	113:32	0:0	4	==
water	113:35	0:0	4	0
stmts	114:4	116:4	3	
water	114:4	0:0	4	{
call	115:8	115:23	4	bs_skip
arg	115:17	115:19	5	&s
op	115:17	0:0	6	&
water	115:18	0:0	6	s
arg	115:21	115:23	5	1
water	115:21	0:0	6	1
water	115:24	0:0	4	;
water	116:4	0:0	4	}
call	118:4	118:19	2	bs_skip
arg	118:13	118:15	3	&s
op	118:13	0:0	4	&
water	118:14	0:0	4	s
arg	118:17	118:19	3	1
water	118:17	0:0	4	1
water	118:20	0:0	2	;
water	120:4	0:0	2	i_tmp
op	120:10	0:0	2	=
call	120:12	120:27	2	bs_read
arg	120:21	120:23	3	&s
op	120:21	0:0	4	&
water	120:22	0:0	4	s
arg	120:25	120:27	3	1
water	120:25	0:0	4	1
water	120:28	0:0	2	;
if	121:4	131:4	2	(i_tmp)
cond	121:8	121:8	3	i_tmp
water	121:8	0:0	4	i_tmp
stmts	122:4	131:4	3	
water	122:4	0:0	4	{
call	124:8	124:23	4	bs_read_ue
arg	124:20	124:23	5	&s
op	124:20	0:0	6	&
water	124:21	0:0	6	s
water	124:24	0:0	4	;
call	126:8	126:23	4	bs_read_ue
arg	126:20	126:23	5	&s
op	126:20	0:0	6	&
water	126:21	0:0	6	s
water	126:24	0:0	4	;
call	128:8	128:23	4	bs_read_ue
arg	128:20	128:23	5	&s
op	128:20	0:0	6	&
water	128:21	0:0	6	s
water	128:24	0:0	4	;
call	130:8	130:23	4	bs_read_ue
arg	130:20	130:23	5	&s
op	130:20	0:0	6	&
water	130:21	0:0	6	s
water	130:24	0:0	4	;
water	131:4	0:0	4	}
water	133:4	0:0	2	i_tmp
op	133:10	0:0	2	=
call	133:12	133:27	2	bs_read
arg	133:21	133:23	3	&s
op	133:21	0:0	4	&
water	133:22	0:0	4	s
arg	133:25	133:27	3	1
water	133:25	0:0	4	1
water	133:28	0:0	2	;
if	134:4	176:4	2	(i_tmp)
cond	134:8	134:8	3	i_tmp
water	134:8	0:0	4	i_tmp
stmts	135:4	176:4	3	
water	135:4	0:0	4	{
water	137:8	0:0	4	i_tmp
op	137:14	0:0	4	=
call	137:16	137:31	4	bs_read
arg	137:25	137:27	5	&s
op	137:25	0:0	6	&
water	137:26	0:0	6	s
arg	137:29	137:31	5	1
water	137:29	0:0	6	1
water	137:32	0:0	4	;
if	138:8	175:8	4	(i_tmp)
cond	138:12	138:12	5	i_tmp
water	138:12	0:0	6	i_tmp
stmts	139:8	175:8	5	
water	139:8	0:0	6	{
water	140:12	0:0	6	static
water	140:19	0:0	6	const
water	140:25	0:0	6	struct
water	140:32	0:0	6	{
water	140:34	0:0	6	int
water	140:38	0:0	6	w
water	140:39	0:0	6	,
water	140:41	0:0	6	h
water	140:42	0:0	6	;
water	140:44	0:0	6	}
water	140:46	0:0	6	sar
op	140:49	0:0	6	[
water	140:50	0:0	6	17
op	140:52	0:0	6	]
op	140:54	0:0	6	=
water	141:12	0:0	6	{
water	142:16	0:0	6	{
water	142:18	0:0	6	0
water	142:19	0:0	6	,
water	142:23	0:0	6	0
water	142:25	0:0	6	}
water	142:26	0:0	6	,
water	142:28	0:0	6	{
water	142:30	0:0	6	1
water	142:31	0:0	6	,
water	142:35	0:0	6	1
water	142:37	0:0	6	}
water	142:38	0:0	6	,
water	142:40	0:0	6	{
water	142:42	0:0	6	12
water	142:44	0:0	6	,
water	142:46	0:0	6	11
water	142:49	0:0	6	}
water	142:50	0:0	6	,
water	142:52	0:0	6	{
water	142:54	0:0	6	10
water	142:56	0:0	6	,
water	142:58	0:0	6	11
water	142:61	0:0	6	}
water	142:62	0:0	6	,
water	143:16	0:0	6	{
water	143:18	0:0	6	16
water	143:20	0:0	6	,
water	143:22	0:0	6	11
water	143:25	0:0	6	}
water	143:26	0:0	6	,
water	143:28	0:0	6	{
water	143:30	0:0	6	40
water	143:32	0:0	6	,
water	143:34	0:0	6	33
water	143:37	0:0	6	}
water	143:38	0:0	6	,
water	143:40	0:0	6	{
water	143:42	0:0	6	24
water	143:44	0:0	6	,
water	143:46	0:0	6	11
water	143:49	0:0	6	}
water	143:50	0:0	6	,
water	143:52	0:0	6	{
water	143:54	0:0	6	20
water	143:56	0:0	6	,
water	143:58	0:0	6	11
water	143:61	0:0	6	}
water	143:62	0:0	6	,
water	144:16	0:0	6	{
water	144:18	0:0	6	32
water	144:20	0:0	6	,
water	144:22	0:0	6	11
water	144:25	0:0	6	}
water	144:26	0:0	6	,
water	144:28	0:0	6	{
water	144:30	0:0	6	80
water	144:32	0:0	6	,
water	144:34	0:0	6	33
water	144:37	0:0	6	}
water	144:38	0:0	6	,
water	144:40	0:0	6	{
water	144:42	0:0	6	18
water	144:44	0:0	6	,
water	144:46	0:0	6	11
water	144:49	0:0	6	}
water	144:50	0:0	6	,
water	144:52	0:0	6	{
water	144:54	0:0	6	15
water	144:56	0:0	6	,
water	144:58	0:0	6	11
water	144:61	0:0	6	}
water	144:62	0:0	6	,
water	145:16	0:0	6	{
water	145:18	0:0	6	64
water	145:20	0:0	6	,
water	145:22	0:0	6	33
water	145:25	0:0	6	}
water	145:26	0:0	6	,
water	145:28	0:0	6	{
water	145:30	0:0	6	160
water	145:33	0:0	6	,
water	145:34	0:0	6	99
water	145:37	0:0	6	}
water	145:38	0:0	6	,
water	145:40	0:0	6	{
water	145:43	0:0	6	4
water	145:44	0:0	6	,
water	145:47	0:0	6	3
water	145:49	0:0	6	}
water	145:50	0:0	6	,
water	145:52	0:0	6	{
water	145:55	0:0	6	3
water	145:56	0:0	6	,
water	145:59	0:0	6	2
water	145:61	0:0	6	}
water	145:62	0:0	6	,
water	146:16	0:0	6	{
water	146:19	0:0	6	2
water	146:20	0:0	6	,
water	146:23	0:0	6	1
water	146:25	0:0	6	}
water	146:26	0:0	6	,
water	147:12	0:0	6	}
water	147:13	0:0	6	;
decl	148:12	148:40	6	int	i_sar
op	148:22	0:0	6	=
call	148:24	148:39	7	bs_read
arg	148:33	148:35	8	&s
op	148:33	0:0	9	&
water	148:34	0:0	9	s
arg	148:37	148:39	8	8
water	148:37	0:0	9	8
decl	149:12	149:20	6	int	w
water	149:17	0:0	6	,
decl	149:12	149:20	6	int	h
if	150:12	154:12	6	(i_sar < 17)
cond	150:16	150:24	7	i_sar < 17
water	150:16	0:0	8	i_sar
op	150:22	0:0	8	<
water	150:24	0:0	8	17
stmts	151:12	154:12	7	
water	151:12	0:0	8	{
water	152:16	0:0	8	w
op	152:18	0:0	8	=
water	152:20	0:0	8	sar
op	152:23	0:0	8	[
water	152:24	0:0	8	i_sar
op	152:29	0:0	8	]
op	152:30	0:0	8	.
water	152:31	0:0	8	w
water	152:32	0:0	8	;
water	153:16	0:0	8	h
op	153:18	0:0	8	=
water	153:20	0:0	8	sar
op	153:23	0:0	8	[
water	153:24	0:0	8	i_sar
op	153:29	0:0	8	]
op	153:30	0:0	8	.
water	153:31	0:0	8	h
water	153:32	0:0	8	;
water	154:12	0:0	8	}
else	155:12	159:12	6
stmts	155:17	159:12	7	
if	155:17	159:12	8	(i_sar == 255)
cond	155:21	155:30	9	i_sar == 255
water	155:21	0:0	10	i_sar
op	155:27	0:0	10	==
water	155:30	0:0	10	255
stmts	156:12	159:12	9	
water	156:12	0:0	10	{
water	157:16	0:0	10	w
op	157:18	0:0	10	=
call	157:20	157:36	10	bs_read
arg	157:29	157:31	11	&s
op	157:29	0:0	12	&
water	157:30	0:0	12	s
arg	157:33	157:36	11	16
water	157:33	0:0	12	16
water	157:37	0:0	10	;
water	158:16	0:0	10	h
op	158:18	0:0	10	=
call	158:20	158:36	10	bs_read
arg	158:29	158:31	11	&s
op	158:29	0:0	12	&
water	158:30	0:0	12	s
arg	158:33	158:36	11	16
water	158:33	0:0	12	16
water	158:37	0:0	10	;
water	159:12	0:0	10	}
else	160:12	164:12	6
stmts	161:12	164:12	7	
water	161:12	0:0	8	{
water	162:16	0:0	8	w
op	162:18	0:0	8	=
water	162:20	0:0	8	0
water	162:21	0:0	8	;
water	163:16	0:0	8	h
op	163:18	0:0	8	=
water	163:20	0:0	8	0
water	163:21	0:0	8	;
water	164:12	0:0	8	}
if	165:12	169:12	6	(w != 0 && h != 0)
cond	165:16	165:31	7	w != 0 && h != 0
water	165:16	0:0	8	w
op	165:18	0:0	8	!=
water	165:21	0:0	8	0
op	165:23	0:0	8	&&
water	165:26	0:0	8	h
op	165:28	0:0	8	!=
water	165:31	0:0	8	0
stmts	166:12	169:12	7	
water	166:12	0:0	8	{
water	167:16	0:0	8	p_dec
op	167:21	0:0	8	->
water	167:23	0:0	8	fmt_out
op	167:30	0:0	8	.
water	167:31	0:0	8	video
op	167:36	0:0	8	.
water	167:37	0:0	8	i_sar_num
op	167:47	0:0	8	=
water	167:49	0:0	8	w
water	167:50	0:0	8	;
water	168:16	0:0	8	p_dec
op	168:21	0:0	8	->
water	168:23	0:0	8	fmt_out
op	168:30	0:0	8	.
water	168:31	0:0	8	video
op	168:36	0:0	8	.
water	168:37	0:0	8	i_sar_den
op	168:47	0:0	8	=
water	168:49	0:0	8	h
water	168:50	0:0	8	;
water	169:12	0:0	8	}
else	170:12	174:12	6
stmts	171:12	174:12	7	
water	171:12	0:0	8	{
water	172:16	0:0	8	p_dec
op	172:21	0:0	8	->
water	172:23	0:0	8	fmt_out
op	172:30	0:0	8	.
water	172:31	0:0	8	video
op	172:36	0:0	8	.
water	172:37	0:0	8	i_sar_num
op	172:47	0:0	8	=
water	172:49	0:0	8	1
water	172:50	0:0	8	;
water	173:16	0:0	8	p_dec
op	173:21	0:0	8	->
water	173:23	0:0	8	fmt_out
op	173:30	0:0	8	.
water	173:31	0:0	8	video
op	173:36	0:0	8	.
water	173:37	0:0	8	i_sar_den
op	173:47	0:0	8	=
water	173:49	0:0	8	1
water	173:50	0:0	8	;
water	174:12	0:0	8	}
water	175:8	0:0	6	}
water	176:4	0:0	4	}
call	177:4	177:17	2	free
arg	177:10	177:17	3	pb_dec
water	177:10	0:0	4	pb_dec
water	177:18	0:0	2	;
if	179:4	180:63	2	(! p_sys -> b_sps)
cond	179:8	179:16	3	! p_sys -> b_sps
op	179:8	0:0	4	!
water	179:9	0:0	4	p_sys
op	179:14	0:0	4	->
water	179:16	0:0	4	b_sps
stmts	180:8	180:63	3	
call	180:8	180:62	4	msg_Dbg
arg	180:17	180:22	5	p_dec
water	180:17	0:0	6	p_dec
arg	180:24	180:51	5	"found NAL_SPS (sps_id=%d)"
water	180:24	0:0	6	"found NAL_SPS (sps_id=%d)"
arg	180:53	180:62	5	i_sps_id
water	180:53	0:0	6	i_sps_id
water	180:63	0:0	4	;
water	181:4	0:0	2	p_sys
op	181:9	0:0	2	->
water	181:11	0:0	2	b_sps
op	181:17	0:0	2	=
water	181:19	0:0	2	true
water	181:23	0:0	2	;
if	182:4	183:48	2	(p_sys -> pp_sps [ i_sps_id ])
cond	182:8	182:30	3	p_sys -> pp_sps [ i_sps_id ]
water	182:8	0:0	4	p_sys
op	182:13	0:0	4	->
water	182:15	0:0	4	pp_sps
op	182:21	0:0	4	[
water	182:22	0:0	4	i_sps_id
op	182:30	0:0	4	]
stmts	183:8	183:48	3	
call	183:8	183:47	4	block_Release
arg	183:23	183:47	5	p_sys->pp_sps[i_sps_id]
water	183:23	0:0	6	p_sys
op	183:28	0:0	6	->
water	183:30	0:0	6	pp_sps
op	183:36	0:0	6	[
water	183:37	0:0	6	i_sps_id
op	183:45	0:0	6	]
water	183:48	0:0	4	;
water	184:4	0:0	2	p_sys
op	184:9	0:0	2	->
water	184:11	0:0	2	pp_sps
op	184:17	0:0	2	[
water	184:18	0:0	2	i_sps_id
op	184:26	0:0	2	]
op	184:28	0:0	2	=
water	184:30	0:0	2	p_frag
water	184:36	0:0	2	;

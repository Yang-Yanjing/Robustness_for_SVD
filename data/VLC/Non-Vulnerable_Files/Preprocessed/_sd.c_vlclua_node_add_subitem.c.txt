func	2:0	64:0	0	static int	vlclua_node_add_subitem
params	2:34	0:0	1	
param	2:36	2:49	2	lua_State *	L
stmnts	0:0	63:12	1	
decl	4:4	4:77	2	services_discovery_t	*p_sd
op	4:31	0:0	2	=
water	4:33	0:0	2	(
water	4:34	0:0	2	services_discovery_t
op	4:55	0:0	2	*
water	4:56	0:0	2	)
call	4:57	4:76	3	vlclua_get_this
arg	4:74	4:76	4	L
water	4:74	0:0	5	L
decl	5:4	5:77	2	input_item_t	**pp_node
op	5:27	0:0	2	=
water	5:29	0:0	2	(
water	5:30	0:0	2	input_item_t
op	5:43	0:0	2	*
op	5:44	0:0	2	*
water	5:45	0:0	2	)
call	5:46	5:76	3	luaL_checkudata
arg	5:63	5:64	4	L
water	5:63	0:0	5	L
arg	5:66	5:67	4	1
water	5:66	0:0	5	1
arg	5:69	5:76	4	"node"
water	5:69	0:0	5	"node"
if	6:4	62:4	2	(* pp_node)
cond	6:8	6:9	3	* pp_node
op	6:8	0:0	4	*
water	6:9	0:0	4	pp_node
stmts	7:4	62:4	3	
water	7:4	0:0	4	{
if	8:8	59:8	4	(lua_istable (L ,- 1 ))
cond	8:12	8:31	5	lua_istable (L ,- 1 )
call	8:12	8:31	6	lua_istable
arg	8:25	8:26	7	L
water	8:25	0:0	8	L
arg	8:28	8:31	7	-1
op	8:28	0:0	8	-
water	8:29	0:0	8	1
stmts	9:8	59:8	5	
water	9:8	0:0	6	{
call	10:12	10:40	6	lua_getfield
arg	10:26	10:27	7	L
water	10:26	0:0	8	L
arg	10:29	10:31	7	-1
op	10:29	0:0	8	-
water	10:30	0:0	8	1
arg	10:33	10:40	7	"path"
water	10:33	0:0	8	"path"
water	10:41	0:0	6	;
if	11:12	56:12	6	(lua_isstring (L ,- 1 ))
cond	11:16	11:36	7	lua_isstring (L ,- 1 )
call	11:16	11:36	8	lua_isstring
arg	11:30	11:31	9	L
water	11:30	0:0	10	L
arg	11:33	11:36	9	-1
op	11:33	0:0	10	-
water	11:34	0:0	10	1
stmts	12:12	56:12	7	
water	12:12	0:0	8	{
decl	13:16	13:60	8	const char	*psz_path
op	13:37	0:0	8	=
call	13:39	13:59	9	lua_tostring
arg	13:53	13:54	10	L
water	13:53	0:0	11	L
arg	13:56	13:59	10	-1
op	13:56	0:0	11	-
water	13:57	0:0	11	1
decl	16:16	16:42	8	char	**ppsz_options
op	16:36	0:0	8	=
water	16:38	0:0	8	NULL
decl	17:16	17:33	8	int	i_options
op	17:30	0:0	8	=
water	17:32	0:0	8	0
call	18:16	18:37	8	lua_pushvalue
arg	18:31	18:32	9	L
water	18:31	0:0	10	L
arg	18:34	18:37	9	-2
op	18:34	0:0	10	-
water	18:35	0:0	10	2
water	18:38	0:0	8	;
call	19:16	19:72	8	vlclua_read_options
arg	19:37	19:41	9	p_sd
water	19:37	0:0	10	p_sd
arg	19:43	19:44	9	L
water	19:43	0:0	10	L
arg	19:46	19:56	9	&i_options
op	19:46	0:0	10	&
water	19:47	0:0	10	i_options
arg	19:58	19:72	9	&ppsz_options
op	19:58	0:0	10	&
water	19:59	0:0	10	ppsz_options
water	19:73	0:0	8	;
decl	20:16	23:89	8	input_item_t	*p_input
op	20:38	0:0	8	=
call	20:40	23:88	9	input_item_NewExt
arg	20:59	20:67	10	psz_path
water	20:59	0:0	11	psz_path
arg	21:59	21:67	10	psz_path
water	21:59	0:0	11	psz_path
arg	21:69	21:78	10	i_options
water	21:69	0:0	11	i_options
arg	22:59	22:86	10	(constchar**)ppsz_options
water	22:59	0:0	11	(
water	22:60	0:0	11	const
water	22:66	0:0	11	char
op	22:71	0:0	11	*
op	22:72	0:0	11	*
water	22:73	0:0	11	)
water	22:74	0:0	11	ppsz_options
arg	23:59	23:83	10	VLC_INPUT_OPTION_TRUSTED
water	23:59	0:0	11	VLC_INPUT_OPTION_TRUSTED
arg	23:85	23:88	10	-1
op	23:85	0:0	11	-
water	23:86	0:0	11	1
call	24:16	24:30	8	lua_pop
arg	24:25	24:26	9	L
water	24:25	0:0	10	L
arg	24:28	24:30	9	2
water	24:28	0:0	10	2
water	24:31	0:0	8	;
if	25:16	52:16	8	(p_input)
cond	25:20	25:20	9	p_input
water	25:20	0:0	10	p_input
stmts	26:16	52:16	9	
water	26:16	0:0	10	{
decl	27:20	27:88	10	input_item_node_t	*p_input_node
op	27:52	0:0	10	=
call	27:54	27:87	11	input_item_node_Create
arg	27:78	27:87	12	*pp_node
op	27:78	0:0	13	*
water	27:79	0:0	13	pp_node
call	28:20	28:60	10	vlclua_read_meta_data
arg	28:43	28:47	11	p_sd
water	28:43	0:0	12	p_sd
arg	28:49	28:50	11	L
water	28:49	0:0	12	L
arg	28:52	28:60	11	p_input
water	28:52	0:0	12	p_input
water	28:61	0:0	10	;
call	30:20	30:67	10	vlclua_read_custom_meta_data
arg	30:50	30:54	11	p_sd
water	30:50	0:0	12	p_sd
arg	30:56	30:57	11	L
water	30:56	0:0	12	L
arg	30:59	30:67	11	p_input
water	30:59	0:0	12	p_input
water	30:68	0:0	10	;
call	31:20	31:52	10	lua_getfield
arg	31:34	31:35	11	L
water	31:34	0:0	12	L
arg	31:37	31:39	11	-1
op	31:37	0:0	12	-
water	31:38	0:0	12	1
arg	31:41	31:52	11	"duration"
water	31:41	0:0	12	"duration"
water	31:53	0:0	10	;
if	32:20	33:86	10	(lua_isnumber (L ,- 1 ))
cond	32:24	32:44	11	lua_isnumber (L ,- 1 )
call	32:24	32:44	12	lua_isnumber
arg	32:38	32:39	13	L
water	32:38	0:0	14	L
arg	32:41	32:44	13	-1
op	32:41	0:0	14	-
water	32:42	0:0	14	1
stmts	33:24	33:86	11	
call	33:24	33:85	12	input_item_SetDuration
arg	33:48	33:55	13	p_input
water	33:48	0:0	14	p_input
arg	33:57	33:85	13	(lua_tonumber(L,-1)*1e6)
water	33:57	0:0	14	(
call	33:58	33:78	14	lua_tonumber
arg	33:72	33:73	15	L
water	33:72	0:0	16	L
arg	33:75	33:78	15	-1
op	33:75	0:0	16	-
water	33:76	0:0	16	1
op	33:79	0:0	14	*
water	33:80	0:0	14	1
water	33:81	0:0	14	e6
water	33:83	0:0	14	)
water	33:86	0:0	12	;
else	34:20	35:90	10
stmts	34:25	35:90	11	
if	34:25	35:90	12	(!lua_isnil (L ,- 1 ))
cond	34:29	34:47	13	!lua_isnil (L ,- 1 )
op	34:29	0:0	14	!
call	34:30	34:47	14	lua_isnil
arg	34:41	34:42	15	L
water	34:41	0:0	16	L
arg	34:44	34:47	15	-1
op	34:44	0:0	16	-
water	34:45	0:0	16	1
stmts	35:24	35:90	13	
call	35:24	35:89	14	msg_Warn
arg	35:34	35:38	15	p_sd
water	35:34	0:0	16	p_sd
arg	35:40	35:89	15	"Item duration should be a number (in seconds)."
water	35:40	0:0	16	"Item duration should be a number (in seconds)."
water	35:90	0:0	14	;
call	36:20	36:34	10	lua_pop
arg	36:29	36:30	11	L
water	36:29	0:0	12	L
arg	36:32	36:34	11	1
water	36:32	0:0	12	1
water	36:35	0:0	10	;
call	37:20	37:70	10	input_item_node_AppendItem
arg	37:48	37:60	11	p_input_node
water	37:48	0:0	12	p_input_node
arg	37:62	37:70	11	p_input
water	37:62	0:0	12	p_input
water	37:71	0:0	10	;
call	38:20	38:64	10	input_item_node_PostAndDelete
arg	38:51	38:64	11	p_input_node
water	38:51	0:0	12	p_input_node
water	38:65	0:0	10	;
decl	39:20	40:89	10	input_item_t	**udata
op	39:41	0:0	10	=
water	39:43	0:0	10	(
water	39:44	0:0	10	input_item_t
op	39:57	0:0	10	*
op	39:58	0:0	10	*
water	39:59	0:0	10	)
call	40:43	40:88	11	lua_newuserdata
arg	40:60	40:61	12	L
water	40:60	0:0	13	L
arg	40:63	40:88	12	sizeof(input_item_t*)
op	40:63	0:0	13	sizeof
water	40:69	0:0	13	(
water	40:71	0:0	13	input_item_t
op	40:84	0:0	13	*
water	40:86	0:0	13	)
op	41:20	0:0	10	*
water	41:21	0:0	10	udata
op	41:27	0:0	10	=
water	41:29	0:0	10	p_input
water	41:36	0:0	10	;
if	42:20	49:20	10	(luaL_newmetatable (L ,"input_item_t" ))
cond	42:24	42:61	11	luaL_newmetatable (L ,"input_item_t" )
call	42:24	42:61	12	luaL_newmetatable
arg	42:43	42:44	13	L
water	42:43	0:0	14	L
arg	42:46	42:61	13	"input_item_t"
water	42:46	0:0	14	"input_item_t"
stmts	43:20	49:20	11	
water	43:20	0:0	12	{
call	44:24	44:40	12	lua_newtable
arg	44:38	44:40	13	L
water	44:38	0:0	14	L
water	44:41	0:0	12	;
call	45:24	45:64	12	luaL_register
arg	45:39	45:40	13	L
water	45:39	0:0	14	L
arg	45:42	45:46	13	NULL
water	45:42	0:0	14	NULL
arg	45:48	45:64	13	vlclua_item_reg
water	45:48	0:0	14	vlclua_item_reg
water	45:65	0:0	12	;
call	46:24	46:55	12	lua_setfield
arg	46:38	46:39	13	L
water	46:38	0:0	14	L
arg	46:41	46:43	13	-2
op	46:41	0:0	14	-
water	46:42	0:0	14	2
arg	46:45	46:55	13	"__index"
water	46:45	0:0	14	"__index"
water	46:56	0:0	12	;
call	47:24	47:68	12	lua_pushliteral
arg	47:41	47:42	13	L
water	47:41	0:0	14	L
arg	47:44	47:68	13	"none of your business"
water	47:44	0:0	14	"none of your business"
water	47:69	0:0	12	;
call	48:24	48:59	12	lua_setfield
arg	48:38	48:39	13	L
water	48:38	0:0	14	L
arg	48:41	48:43	13	-2
op	48:41	0:0	14	-
water	48:42	0:0	14	2
arg	48:45	48:59	13	"__metatable"
water	48:45	0:0	14	"__metatable"
water	48:60	0:0	12	;
water	49:20	0:0	12	}
call	50:20	50:44	10	lua_setmetatable
arg	50:38	50:39	11	L
water	50:38	0:0	12	L
arg	50:41	50:44	11	-2
op	50:41	0:0	12	-
water	50:42	0:0	12	2
water	50:45	0:0	10	;
call	51:20	51:43	10	vlc_gc_decref
arg	51:35	51:43	11	p_input
water	51:35	0:0	12	p_input
water	51:44	0:0	10	;
water	52:16	0:0	10	}
while	53:16	54:53	8	(i_options > 0)
cond	53:23	53:35	9	i_options > 0
water	53:23	0:0	10	i_options
op	53:33	0:0	10	>
water	53:35	0:0	10	0
stmts	54:20	54:53	9	
call	54:20	54:52	10	free
arg	54:26	54:52	11	ppsz_options[--i_options]
water	54:26	0:0	12	ppsz_options
op	54:38	0:0	12	[
op	54:39	0:0	12	--
water	54:41	0:0	12	i_options
op	54:50	0:0	12	]
water	54:53	0:0	10	;
call	55:16	55:35	8	free
arg	55:22	55:35	9	ppsz_options
water	55:22	0:0	10	ppsz_options
water	55:36	0:0	8	;
water	56:12	0:0	8	}
else	57:12	58:90	6
stmts	58:16	58:90	7	
call	58:16	58:89	8	msg_Err
arg	58:25	58:29	9	p_sd
water	58:25	0:0	10	p_sd
arg	58:31	58:89	9	"node:add_subitem: the \"path\" parameter can't be empty"
water	58:31	0:0	10	"node:add_subitem: the \"path\" parameter can't be empty"
water	58:90	0:0	8	;
water	59:8	0:0	6	}
else	60:8	61:66	4
stmts	61:12	61:66	5	
call	61:12	61:65	6	msg_Err
arg	61:21	61:25	7	p_sd
water	61:21	0:0	8	p_sd
arg	61:27	61:65	7	"Error parsing add_subitem arguments"
water	61:27	0:0	8	"Error parsing add_subitem arguments"
water	61:66	0:0	6	;
water	62:4	0:0	4	}
return	63:4	63:12	2	1
water	63:11	0:0	3	1

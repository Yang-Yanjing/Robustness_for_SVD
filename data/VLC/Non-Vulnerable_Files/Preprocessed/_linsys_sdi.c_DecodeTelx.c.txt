func	2:0	43:0	0	static int	DecodeTelx
params	2:21	0:0	1	
param	2:23	2:40	2	demux_t *	p_demux
stmnts	0:0	42:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:48	2	vbi_sliced	p_sliced[p_sys->i_telx_count*2]
decl	6:4	7:48	2	int	i_nb_slices
op	6:20	0:0	2	=
call	6:22	7:47	3	vbi_raw_decode
arg	6:38	6:53	4	&p_sys->rd_telx
op	6:38	0:0	5	&
water	6:39	0:0	5	p_sys
op	6:44	0:0	5	->
water	6:46	0:0	5	rd_telx
arg	6:55	6:75	4	p_sys->p_telx_buffer
water	6:55	0:0	5	p_sys
op	6:60	0:0	5	->
water	6:62	0:0	5	p_telx_buffer
arg	7:38	7:47	4	p_sliced
water	7:38	0:0	5	p_sliced
if	8:4	41:4	2	(i_nb_slices)
cond	8:9	8:9	3	i_nb_slices
water	8:9	0:0	4	i_nb_slices
stmts	9:4	41:4	3	
water	9:4	0:0	4	{
decl	11:8	11:59	4	int	i_nb_slices_rounded
op	11:32	0:0	4	=
water	11:34	0:0	4	3
op	11:36	0:0	4	+
water	11:38	0:0	4	(
water	11:39	0:0	4	i_nb_slices
op	11:51	0:0	4	/
water	11:53	0:0	4	4
water	11:54	0:0	4	)
op	11:56	0:0	4	*
water	11:58	0:0	4	4
decl	12:8	12:13	4	int	i
decl	13:8	13:18	4	uint8_t	*p
decl	14:8	14:70	4	block_t	*p_block
op	14:25	0:0	4	=
call	14:27	14:69	5	block_Alloc
arg	14:40	14:69	6	1+i_nb_slices_rounded*46
water	14:40	0:0	7	1
op	14:42	0:0	7	+
water	14:44	0:0	7	i_nb_slices_rounded
op	14:64	0:0	7	*
water	14:66	0:0	7	46
if	15:8	16:29	4	(unlikely (! p_block ))
cond	15:12	15:31	5	unlikely (! p_block )
call	15:12	15:31	6	unlikely
arg	15:22	15:31	7	!p_block
op	15:22	0:0	8	!
water	15:23	0:0	8	p_block
stmts	16:12	16:29	5	
return	16:12	16:29	6	VLC_ENOMEM
water	16:19	0:0	7	VLC_ENOMEM
water	17:8	0:0	4	p_block
op	17:15	0:0	4	->
water	17:17	0:0	4	p_buffer
op	17:25	0:0	4	[
water	17:26	0:0	4	0
op	17:27	0:0	4	]
op	17:29	0:0	4	=
water	17:31	0:0	4	0
water	17:32	0:0	4	x10
water	17:35	0:0	4	;
water	18:8	0:0	4	p
op	18:10	0:0	4	=
water	18:12	0:0	4	p_block
op	18:19	0:0	4	->
water	18:21	0:0	4	p_buffer
op	18:30	0:0	4	+
water	18:32	0:0	4	1
water	18:33	0:0	4	;
for	19:8	30:8	4	(i = 0 ;i < i_nb_slices;i ++)
forinit	19:14	19:19	5	i = 0 ;
water	19:14	0:0	6	i
op	19:16	0:0	6	=
water	19:18	0:0	6	0
water	19:19	0:0	6	;
cond	19:21	19:25	5	i < i_nb_slices
water	19:21	0:0	6	i
op	19:23	0:0	6	<
water	19:25	0:0	6	i_nb_slices
forexpr	19:38	19:39	5	i ++
water	19:38	0:0	6	i
op	19:39	0:0	6	++
stmts	20:8	30:8	5	
water	20:8	0:0	6	{
decl	21:12	21:41	6	int	i_line
op	21:23	0:0	6	=
water	21:25	0:0	6	p_sliced
op	21:33	0:0	6	[
water	21:34	0:0	6	i
op	21:35	0:0	6	]
op	21:36	0:0	6	.
water	21:37	0:0	6	line
water	22:12	0:0	6	p
op	22:13	0:0	6	[
water	22:14	0:0	6	0
op	22:15	0:0	6	]
op	22:17	0:0	6	=
water	22:19	0:0	6	0
water	22:20	0:0	6	x3
water	22:22	0:0	6	;
water	23:12	0:0	6	p
op	23:13	0:0	6	[
water	23:14	0:0	6	1
op	23:15	0:0	6	]
op	23:17	0:0	6	=
water	23:19	0:0	6	0
water	23:20	0:0	6	x2c
water	23:23	0:0	6	;
water	25:12	0:0	6	p
op	25:13	0:0	6	[
water	25:14	0:0	6	2
op	25:15	0:0	6	]
op	25:17	0:0	6	=
water	25:19	0:0	6	0
water	25:20	0:0	6	xc0
op	25:24	0:0	6	|
water	25:26	0:0	6	(
water	25:27	0:0	6	i_line
op	25:34	0:0	6	>
water	25:36	0:0	6	313
water	25:40	0:0	6	?
water	25:42	0:0	6	0
water	25:44	0:0	6	:
water	25:46	0:0	6	0
water	25:47	0:0	6	x20
water	25:50	0:0	6	)
op	25:52	0:0	6	|
water	25:54	0:0	6	(
water	25:55	0:0	6	i_line
op	25:62	0:0	6	%
water	25:64	0:0	6	313
water	25:67	0:0	6	)
water	25:68	0:0	6	;
water	26:12	0:0	6	p
op	26:13	0:0	6	[
water	26:14	0:0	6	3
op	26:15	0:0	6	]
op	26:17	0:0	6	=
water	26:19	0:0	6	0
water	26:20	0:0	6	xe4
water	26:23	0:0	6	;
for	27:12	28:58	6	( int j = 0 ;j < 42;j ++)
forinit	0:0	27:27	7	 int j = 0 ;
decl	27:18	27:27	8	int	j
op	27:24	0:0	8	=
water	27:26	0:0	8	0
cond	27:29	27:33	7	j < 42
water	27:29	0:0	8	j
op	27:31	0:0	8	<
water	27:33	0:0	8	42
forexpr	27:37	27:38	7	j ++
water	27:37	0:0	8	j
op	27:38	0:0	8	++
stmts	28:16	28:58	7	
water	28:16	0:0	8	p
op	28:17	0:0	8	[
water	28:18	0:0	8	4
op	28:20	0:0	8	+
water	28:22	0:0	8	j
op	28:23	0:0	8	]
op	28:25	0:0	8	=
call	28:27	28:57	8	vbi_rev8
arg	28:37	28:57	9	p_sliced[i].data[j]
water	28:37	0:0	10	p_sliced
op	28:45	0:0	10	[
water	28:46	0:0	10	i
op	28:47	0:0	10	]
op	28:48	0:0	10	.
water	28:49	0:0	10	data
op	28:53	0:0	10	[
water	28:54	0:0	10	j
op	28:55	0:0	10	]
water	28:58	0:0	8	;
water	29:12	0:0	6	p
op	29:14	0:0	6	+=
water	29:17	0:0	6	46
water	29:19	0:0	6	;
water	30:8	0:0	6	}
for	32:8	38:8	4	(;i < i_nb_slices_rounded;i ++)
forinit	32:14	32:14	5	;
water	32:14	0:0	6	;
cond	32:16	32:20	5	i < i_nb_slices_rounded
water	32:16	0:0	6	i
op	32:18	0:0	6	<
water	32:20	0:0	6	i_nb_slices_rounded
forexpr	32:41	32:42	5	i ++
water	32:41	0:0	6	i
op	32:42	0:0	6	++
stmts	33:8	38:8	5	
water	33:8	0:0	6	{
water	34:12	0:0	6	p
op	34:13	0:0	6	[
water	34:14	0:0	6	0
op	34:15	0:0	6	]
op	34:17	0:0	6	=
water	34:19	0:0	6	0
water	34:20	0:0	6	xff
water	34:23	0:0	6	;
water	35:12	0:0	6	p
op	35:13	0:0	6	[
water	35:14	0:0	6	1
op	35:15	0:0	6	]
op	35:17	0:0	6	=
water	35:19	0:0	6	0
water	35:20	0:0	6	x2c
water	35:23	0:0	6	;
call	36:12	36:36	6	memset
arg	36:20	36:25	7	p+2
water	36:20	0:0	8	p
op	36:22	0:0	8	+
water	36:24	0:0	8	2
arg	36:27	36:31	7	0xff
water	36:27	0:0	8	0
water	36:28	0:0	8	xff
arg	36:33	36:36	7	44
water	36:33	0:0	8	44
water	36:37	0:0	6	;
water	37:12	0:0	6	p
op	37:14	0:0	6	+=
water	37:17	0:0	6	46
water	37:19	0:0	6	;
water	38:8	0:0	6	}
water	39:8	0:0	4	p_block
op	39:15	0:0	4	->
water	39:17	0:0	4	i_dts
op	39:23	0:0	4	=
water	39:25	0:0	4	p_block
op	39:32	0:0	4	->
water	39:34	0:0	4	i_pts
op	39:40	0:0	4	=
water	39:42	0:0	4	p_sys
op	39:47	0:0	4	->
water	39:49	0:0	4	i_next_date
water	39:60	0:0	4	;
call	40:8	40:61	4	es_out_Send
arg	40:21	40:33	5	p_demux->out
water	40:21	0:0	6	p_demux
op	40:28	0:0	6	->
water	40:30	0:0	6	out
arg	40:35	40:51	5	p_sys->p_es_telx
water	40:35	0:0	6	p_sys
op	40:40	0:0	6	->
water	40:42	0:0	6	p_es_telx
arg	40:53	40:61	5	p_block
water	40:53	0:0	6	p_block
water	40:62	0:0	4	;
water	41:4	0:0	4	}
return	42:4	42:22	2	VLC_SUCCESS
water	42:11	0:0	3	VLC_SUCCESS

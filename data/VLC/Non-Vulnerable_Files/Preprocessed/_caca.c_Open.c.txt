func	2:0	117:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	object
stmnts	0:0	116:23	1	
decl	4:4	4:49	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:41	0:0	2	*
water	4:42	0:0	2	)
water	4:43	0:0	2	object
decl	5:4	5:27	2	vout_display_sys_t	*sys
if	8:4	9:27	2	(!vlc_xlib_init (object ))
cond	8:8	8:29	3	!vlc_xlib_init (object )
op	8:8	0:0	4	!
call	8:9	8:29	4	vlc_xlib_init
arg	8:23	8:29	5	object
water	8:23	0:0	6	object
stmts	9:8	9:27	3	
return	9:8	9:27	4	VLC_EGENERIC
water	9:15	0:0	5	VLC_EGENERIC
decl	13:4	13:39	2	CONSOLE_SCREEN_BUFFER_INFO	csbiInfo
decl	14:4	14:19	2	SMALL_RECT	rect
decl	15:4	15:15	2	COORD	coord
decl	16:4	16:18	2	HANDLE	hstdout
if	17:4	20:4	2	(!AllocConsole ( ))
cond	17:8	17:22	3	!AllocConsole ( )
op	17:8	0:0	4	!
call	17:9	17:22	4	AllocConsole
stmts	17:25	20:4	3	
water	17:25	0:0	4	{
call	18:8	18:43	4	msg_Err
arg	18:16	18:18	5	vd
water	18:16	0:0	6	vd
arg	18:20	18:43	5	"cannot create console"
water	18:20	0:0	6	"cannot create console"
water	18:44	0:0	4	;
return	19:8	19:27	4	VLC_EGENERIC
water	19:15	0:0	5	VLC_EGENERIC
water	20:4	0:0	4	}
water	21:4	0:0	2	hstdout
op	21:12	0:0	2	=
call	22:8	24:69	2	CreateConsoleScreenBuffer
arg	22:34	22:62	3	GENERIC_READ|GENERIC_WRITE
water	22:34	0:0	4	GENERIC_READ
op	22:47	0:0	4	|
water	22:49	0:0	4	GENERIC_WRITE
arg	23:34	23:68	3	FILE_SHARE_READ|FILE_SHARE_WRITE
water	23:34	0:0	4	FILE_SHARE_READ
op	23:50	0:0	4	|
water	23:52	0:0	4	FILE_SHARE_WRITE
arg	24:34	24:38	3	NULL
water	24:34	0:0	4	NULL
arg	24:40	24:63	3	CONSOLE_TEXTMODE_BUFFER
water	24:40	0:0	4	CONSOLE_TEXTMODE_BUFFER
arg	24:65	24:69	3	NULL
water	24:65	0:0	4	NULL
water	24:70	0:0	2	;
if	25:4	29:4	2	(! hstdout || hstdout == INVALID_HANDLE_VALUE)
cond	25:8	25:31	3	! hstdout || hstdout == INVALID_HANDLE_VALUE
op	25:8	0:0	4	!
water	25:9	0:0	4	hstdout
op	25:17	0:0	4	||
water	25:20	0:0	4	hstdout
op	25:28	0:0	4	==
water	25:31	0:0	4	INVALID_HANDLE_VALUE
stmts	25:53	29:4	3	
water	25:53	0:0	4	{
call	26:8	26:49	4	msg_Err
arg	26:16	26:18	5	vd
water	26:16	0:0	6	vd
arg	26:20	26:49	5	"cannot create screen buffer"
water	26:20	0:0	6	"cannot create screen buffer"
water	26:50	0:0	4	;
call	27:8	27:20	4	FreeConsole
water	27:21	0:0	4	;
return	28:8	28:27	4	VLC_EGENERIC
water	28:15	0:0	5	VLC_EGENERIC
water	29:4	0:0	4	}
if	30:4	34:4	2	(!SetConsoleActiveScreenBuffer (hstdout ))
cond	30:8	30:45	3	!SetConsoleActiveScreenBuffer (hstdout )
op	30:8	0:0	4	!
call	30:9	30:45	4	SetConsoleActiveScreenBuffer
arg	30:38	30:45	5	hstdout
water	30:38	0:0	6	hstdout
stmts	30:48	34:4	3	
water	30:48	0:0	4	{
call	31:8	31:53	4	msg_Err
arg	31:16	31:18	5	vd
water	31:16	0:0	6	vd
arg	31:20	31:53	5	"cannot set active screen buffer"
water	31:20	0:0	6	"cannot set active screen buffer"
water	31:54	0:0	4	;
call	32:8	32:20	4	FreeConsole
water	32:21	0:0	4	;
return	33:8	33:27	4	VLC_EGENERIC
water	33:15	0:0	5	VLC_EGENERIC
water	34:4	0:0	4	}
water	35:4	0:0	2	coord
op	35:10	0:0	2	=
call	35:12	35:47	2	GetLargestConsoleWindowSize
arg	35:40	35:47	3	hstdout
water	35:40	0:0	4	hstdout
water	35:48	0:0	2	;
call	36:4	36:63	2	msg_Dbg
arg	36:12	36:14	3	vd
water	36:12	0:0	4	vd
arg	36:16	36:45	3	"SetConsoleWindowInfo: %ix%i"
water	36:16	0:0	4	"SetConsoleWindowInfo: %ix%i"
arg	36:47	36:54	3	coord.X
water	36:47	0:0	4	coord
op	36:52	0:0	4	.
water	36:53	0:0	4	X
arg	36:56	36:63	3	coord.Y
water	36:56	0:0	4	coord
op	36:61	0:0	4	.
water	36:62	0:0	4	Y
water	36:64	0:0	2	;
water	38:4	0:0	2	coord
op	38:9	0:0	2	.
water	38:10	0:0	2	X
op	38:12	0:0	2	=
water	38:14	0:0	2	100
water	38:17	0:0	2	;
water	39:4	0:0	2	coord
op	39:9	0:0	2	.
water	39:10	0:0	2	Y
op	39:12	0:0	2	=
water	39:14	0:0	2	40
water	39:16	0:0	2	;
if	40:4	42:35	2	(!SetConsoleScreenBufferSize (hstdout ,coord ))
cond	40:8	40:50	3	!SetConsoleScreenBufferSize (hstdout ,coord )
op	40:8	0:0	4	!
call	40:9	40:50	4	SetConsoleScreenBufferSize
arg	40:36	40:43	5	hstdout
water	40:36	0:0	6	hstdout
arg	40:45	40:50	5	coord
water	40:45	0:0	6	coord
stmts	41:8	42:35	3	
call	41:8	42:34	4	msg_Warn
arg	41:17	41:19	5	vd
water	41:17	0:0	6	vd
arg	41:21	41:55	5	"SetConsoleScreenBufferSize %i %i"
water	41:21	0:0	6	"SetConsoleScreenBufferSize %i %i"
arg	42:18	42:25	5	coord.X
water	42:18	0:0	6	coord
op	42:23	0:0	6	.
water	42:24	0:0	6	X
arg	42:27	42:34	5	coord.Y
water	42:27	0:0	6	coord
op	42:32	0:0	6	.
water	42:33	0:0	6	Y
water	42:35	0:0	4	;
if	44:4	51:4	2	(GetConsoleScreenBufferInfo (hstdout ,& csbiInfo ))
cond	44:8	44:53	3	GetConsoleScreenBufferInfo (hstdout ,& csbiInfo )
call	44:8	44:53	4	GetConsoleScreenBufferInfo
arg	44:35	44:42	5	hstdout
water	44:35	0:0	6	hstdout
arg	44:44	44:53	5	&csbiInfo
op	44:44	0:0	6	&
water	44:45	0:0	6	csbiInfo
stmts	44:56	51:4	3	
water	44:56	0:0	4	{
water	45:8	0:0	4	rect
op	45:12	0:0	4	.
water	45:13	0:0	4	Top
op	45:17	0:0	4	=
water	45:19	0:0	4	0
water	45:20	0:0	4	;
water	45:22	0:0	4	rect
op	45:26	0:0	4	.
water	45:27	0:0	4	Left
op	45:32	0:0	4	=
water	45:34	0:0	4	0
water	45:35	0:0	4	;
water	46:8	0:0	4	rect
op	46:12	0:0	4	.
water	46:13	0:0	4	Right
op	46:19	0:0	4	=
water	46:21	0:0	4	csbiInfo
op	46:29	0:0	4	.
water	46:30	0:0	4	dwMaximumWindowSize
op	46:49	0:0	4	.
water	46:50	0:0	4	X
op	46:52	0:0	4	-
water	46:54	0:0	4	1
water	46:55	0:0	4	;
water	47:8	0:0	4	rect
op	47:12	0:0	4	.
water	47:13	0:0	4	Bottom
op	47:20	0:0	4	=
water	47:22	0:0	4	csbiInfo
op	47:30	0:0	4	.
water	47:31	0:0	4	dwMaximumWindowSize
op	47:50	0:0	4	.
water	47:51	0:0	4	Y
op	47:53	0:0	4	-
water	47:55	0:0	4	1
water	47:56	0:0	4	;
if	48:8	50:45	4	(!SetConsoleWindowInfo (hstdout ,TRUE ,& rect ))
cond	48:12	48:54	5	!SetConsoleWindowInfo (hstdout ,TRUE ,& rect )
op	48:12	0:0	6	!
call	48:13	48:54	6	SetConsoleWindowInfo
arg	48:34	48:41	7	hstdout
water	48:34	0:0	8	hstdout
arg	48:43	48:47	7	TRUE
water	48:43	0:0	8	TRUE
arg	48:49	48:54	7	&rect
op	48:49	0:0	8	&
water	48:50	0:0	8	rect
stmts	49:12	50:45	5	
call	49:12	50:44	6	msg_Dbg
arg	49:20	49:22	7	vd
water	49:20	0:0	8	vd
arg	49:24	49:60	7	"SetConsoleWindowInfo failed: %ix%i"
water	49:24	0:0	8	"SetConsoleWindowInfo failed: %ix%i"
arg	50:21	50:31	7	rect.Right
water	50:21	0:0	8	rect
op	50:25	0:0	8	.
water	50:26	0:0	8	Right
arg	50:33	50:44	7	rect.Bottom
water	50:33	0:0	8	rect
op	50:37	0:0	8	.
water	50:38	0:0	8	Bottom
water	50:45	0:0	6	;
water	51:4	0:0	4	}
water	54:4	0:0	2	vd
op	54:6	0:0	2	->
water	54:8	0:0	2	sys
op	54:12	0:0	2	=
water	54:14	0:0	2	sys
op	54:18	0:0	2	=
call	54:20	54:42	2	calloc
arg	54:27	54:28	3	1
water	54:27	0:0	4	1
arg	54:30	54:42	3	sizeof(*sys)
op	54:30	0:0	4	sizeof
water	54:36	0:0	4	(
op	54:37	0:0	4	*
water	54:38	0:0	4	sys
water	54:41	0:0	4	)
water	54:43	0:0	2	;
if	55:4	56:18	2	(! sys)
cond	55:8	55:9	3	! sys
op	55:8	0:0	4	!
water	55:9	0:0	4	sys
stmts	56:8	56:18	3	
goto	56:8	56:18	4	error
water	56:13	0:0	5	error
water	57:4	0:0	2	sys
op	57:7	0:0	2	->
water	57:9	0:0	2	cv
op	57:12	0:0	2	=
call	57:14	57:38	2	cucul_create_canvas
arg	57:34	57:35	3	0
water	57:34	0:0	4	0
arg	57:37	57:38	3	0
water	57:37	0:0	4	0
water	57:39	0:0	2	;
if	58:4	61:4	2	(! sys -> cv)
cond	58:8	58:14	3	! sys -> cv
op	58:8	0:0	4	!
water	58:9	0:0	4	sys
op	58:12	0:0	4	->
water	58:14	0:0	4	cv
stmts	58:18	61:4	3	
water	58:18	0:0	4	{
call	59:8	59:48	4	msg_Err
arg	59:16	59:18	5	vd
water	59:16	0:0	6	vd
arg	59:20	59:48	5	"cannot initialize libcucul"
water	59:20	0:0	6	"cannot initialize libcucul"
water	59:49	0:0	4	;
goto	60:8	60:18	4	error
water	60:13	0:0	5	error
water	61:4	0:0	4	}
decl	62:4	62:29	2	const char	*driver
op	62:23	0:0	2	=
water	62:25	0:0	2	NULL
water	65:4	0:0	2	driver
op	65:11	0:0	2	=
water	65:13	0:0	2	"ncurses"
water	65:22	0:0	2	;
water	67:4	0:0	2	sys
op	67:7	0:0	2	->
water	67:9	0:0	2	dp
op	67:12	0:0	2	=
call	67:14	67:61	2	caca_create_display_with_driver
arg	67:46	67:53	3	sys->cv
water	67:46	0:0	4	sys
op	67:49	0:0	4	->
water	67:51	0:0	4	cv
arg	67:55	67:61	3	driver
water	67:55	0:0	4	driver
water	67:62	0:0	2	;
if	68:4	71:4	2	(! sys -> dp)
cond	68:8	68:14	3	! sys -> dp
op	68:8	0:0	4	!
water	68:9	0:0	4	sys
op	68:12	0:0	4	->
water	68:14	0:0	4	dp
stmts	68:18	71:4	3	
water	68:18	0:0	4	{
call	69:8	69:47	4	msg_Err
arg	69:16	69:18	5	vd
water	69:16	0:0	6	vd
arg	69:20	69:47	5	"cannot initialize libcaca"
water	69:20	0:0	6	"cannot initialize libcaca"
water	69:48	0:0	4	;
goto	70:8	70:18	4	error
water	70:13	0:0	5	error
water	71:4	0:0	4	}
call	72:4	72:38	2	vout_display_DeleteWindow
arg	72:30	72:32	3	vd
water	72:30	0:0	4	vd
arg	72:34	72:38	3	NULL
water	72:34	0:0	4	NULL
water	72:39	0:0	2	;
if	73:4	75:54	2	(vd -> cfg -> display . title)
cond	73:8	73:25	3	vd -> cfg -> display . title
water	73:8	0:0	4	vd
op	73:10	0:0	4	->
water	73:12	0:0	4	cfg
op	73:15	0:0	4	->
water	73:17	0:0	4	display
op	73:24	0:0	4	.
water	73:25	0:0	4	title
stmts	74:8	75:54	3	
call	74:8	75:53	4	caca_set_display_title
arg	74:31	74:38	5	sys->dp
water	74:31	0:0	6	sys
op	74:34	0:0	6	->
water	74:36	0:0	6	dp
arg	75:31	75:53	5	vd->cfg->display.title
water	75:31	0:0	6	vd
op	75:33	0:0	6	->
water	75:35	0:0	6	cfg
op	75:38	0:0	6	->
water	75:40	0:0	6	display
op	75:47	0:0	6	.
water	75:48	0:0	6	title
water	75:54	0:0	4	;
else	76:4	78:63	2
stmts	77:8	78:63	3	
call	77:8	78:62	4	caca_set_display_title
arg	77:31	77:38	5	sys->dp
water	77:31	0:0	6	sys
op	77:34	0:0	6	->
water	77:36	0:0	6	dp
arg	78:31	78:62	5	VOUT_TITLE"(Colour AsCii Art)"
water	78:31	0:0	6	VOUT_TITLE
water	78:42	0:0	6	"(Colour AsCii Art)"
water	78:63	0:0	4	;
decl	80:4	80:32	2	video_format_t	fmt
op	80:23	0:0	2	=
water	80:25	0:0	2	vd
op	80:27	0:0	2	->
water	80:29	0:0	2	fmt
if	81:4	86:4	2	(fmt . i_chroma != VLC_CODEC_RGB32)
cond	81:8	81:24	3	fmt . i_chroma != VLC_CODEC_RGB32
water	81:8	0:0	4	fmt
op	81:11	0:0	4	.
water	81:12	0:0	4	i_chroma
op	81:21	0:0	4	!=
water	81:24	0:0	4	VLC_CODEC_RGB32
stmts	81:41	86:4	3	
water	81:41	0:0	4	{
water	82:8	0:0	4	fmt
op	82:11	0:0	4	.
water	82:12	0:0	4	i_chroma
op	82:21	0:0	4	=
water	82:23	0:0	4	VLC_CODEC_RGB32
water	82:38	0:0	4	;
water	83:8	0:0	4	fmt
op	83:11	0:0	4	.
water	83:12	0:0	4	i_rmask
op	83:20	0:0	4	=
water	83:22	0:0	4	0
water	83:23	0:0	4	x00ff0000
water	83:32	0:0	4	;
water	84:8	0:0	4	fmt
op	84:11	0:0	4	.
water	84:12	0:0	4	i_gmask
op	84:20	0:0	4	=
water	84:22	0:0	4	0
water	84:23	0:0	4	x0000ff00
water	84:32	0:0	4	;
water	85:8	0:0	4	fmt
op	85:11	0:0	4	.
water	85:12	0:0	4	i_bmask
op	85:20	0:0	4	=
water	85:22	0:0	4	0
water	85:23	0:0	4	x000000ff
water	85:32	0:0	4	;
water	86:4	0:0	4	}
decl	88:4	88:39	2	vout_display_info_t	info
op	88:29	0:0	2	=
water	88:31	0:0	2	vd
op	88:33	0:0	2	->
water	88:35	0:0	2	info
water	90:4	0:0	2	vd
op	90:6	0:0	2	->
water	90:8	0:0	2	fmt
op	90:12	0:0	2	=
water	90:14	0:0	2	fmt
water	90:17	0:0	2	;
water	91:4	0:0	2	vd
op	91:6	0:0	2	->
water	91:8	0:0	2	info
op	91:13	0:0	2	=
water	91:15	0:0	2	info
water	91:19	0:0	2	;
water	92:4	0:0	2	vd
op	92:6	0:0	2	->
water	92:8	0:0	2	pool
op	92:16	0:0	2	=
water	92:18	0:0	2	Pool
water	92:22	0:0	2	;
water	93:4	0:0	2	vd
op	93:6	0:0	2	->
water	93:8	0:0	2	prepare
op	93:16	0:0	2	=
water	93:18	0:0	2	Prepare
water	93:25	0:0	2	;
water	94:4	0:0	2	vd
op	94:6	0:0	2	->
water	94:8	0:0	2	display
op	94:16	0:0	2	=
water	94:18	0:0	2	PictureDisplay
water	94:32	0:0	2	;
water	95:4	0:0	2	vd
op	95:6	0:0	2	->
water	95:8	0:0	2	control
op	95:16	0:0	2	=
water	95:18	0:0	2	Control
water	95:25	0:0	2	;
water	96:4	0:0	2	vd
op	96:6	0:0	2	->
water	96:8	0:0	2	manage
op	96:16	0:0	2	=
water	96:18	0:0	2	Manage
water	96:24	0:0	2	;
call	98:4	98:46	2	vout_display_SendEventFullscreen
arg	98:37	98:39	3	vd
water	98:37	0:0	4	vd
arg	98:41	98:46	3	false
water	98:41	0:0	4	false
water	98:47	0:0	2	;
call	99:4	99:14	2	Refresh
arg	99:12	99:14	3	vd
water	99:12	0:0	4	vd
water	99:15	0:0	2	;
return	100:4	100:22	2	VLC_SUCCESS
water	100:11	0:0	3	VLC_SUCCESS
label	101:0	101:5	2	error :
if	102:4	112:4	2	(sys)
cond	102:8	102:8	3	sys
water	102:8	0:0	4	sys
stmts	102:13	112:4	3	
water	102:13	0:0	4	{
if	103:8	104:42	4	(sys -> pool)
cond	103:12	103:17	5	sys -> pool
water	103:12	0:0	6	sys
op	103:15	0:0	6	->
water	103:17	0:0	6	pool
stmts	104:12	104:42	5	
call	104:12	104:41	6	picture_pool_Delete
arg	104:32	104:41	7	sys->pool
water	104:32	0:0	8	sys
op	104:35	0:0	8	->
water	104:37	0:0	8	pool
water	104:42	0:0	6	;
if	105:8	106:42	4	(sys -> dither)
cond	105:12	105:17	5	sys -> dither
water	105:12	0:0	6	sys
op	105:15	0:0	6	->
water	105:17	0:0	6	dither
stmts	106:12	106:42	5	
call	106:12	106:41	6	cucul_free_dither
arg	106:30	106:41	7	sys->dither
water	106:30	0:0	8	sys
op	106:33	0:0	8	->
water	106:35	0:0	8	dither
water	106:42	0:0	6	;
if	107:8	108:38	4	(sys -> dp)
cond	107:12	107:17	5	sys -> dp
water	107:12	0:0	6	sys
op	107:15	0:0	6	->
water	107:17	0:0	6	dp
stmts	108:12	108:38	5	
call	108:12	108:37	6	caca_free_display
arg	108:30	108:37	7	sys->dp
water	108:30	0:0	8	sys
op	108:33	0:0	8	->
water	108:35	0:0	8	dp
water	108:38	0:0	6	;
if	109:8	110:38	4	(sys -> cv)
cond	109:12	109:17	5	sys -> cv
water	109:12	0:0	6	sys
op	109:15	0:0	6	->
water	109:17	0:0	6	cv
stmts	110:12	110:38	5	
call	110:12	110:37	6	cucul_free_canvas
arg	110:30	110:37	7	sys->cv
water	110:30	0:0	8	sys
op	110:33	0:0	8	->
water	110:35	0:0	8	cv
water	110:38	0:0	6	;
call	111:8	111:16	4	free
arg	111:13	111:16	5	sys
water	111:13	0:0	6	sys
water	111:17	0:0	4	;
water	112:4	0:0	4	}
call	114:4	114:16	2	FreeConsole
water	114:17	0:0	2	;
return	116:4	116:23	2	VLC_EGENERIC
water	116:11	0:0	3	VLC_EGENERIC

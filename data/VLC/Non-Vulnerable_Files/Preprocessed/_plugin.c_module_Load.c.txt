func	2:0	30:0	0	int	module_Load
params	2:15	0:0	1	
param	2:17	2:37	2	vlc_object_t *	p_this
param	2:39	2:59	2	const char *	psz_file
param	3:17	3:42	2	module_handle_t *	p_handle
param	3:44	3:54	2	bool	lazy
stmnts	0:0	29:12	1	
decl	5:4	5:38	2	wchar_t	*wfile
op	5:19	0:0	2	=
call	5:21	5:37	3	ToWide
arg	5:29	5:37	4	psz_file
water	5:29	0:0	5	psz_file
if	6:4	7:17	2	(wfile == NULL)
cond	6:8	6:17	3	wfile == NULL
water	6:8	0:0	4	wfile
op	6:14	0:0	4	==
water	6:17	0:0	4	NULL
stmts	7:8	7:17	3	
return	7:8	7:17	4	-1
op	7:15	0:0	5	-
water	7:16	0:0	5	1
decl	8:4	8:33	2	module_handle_t	handle
op	8:27	0:0	2	=
water	8:29	0:0	2	NULL
decl	10:4	10:14	2	DWORD	mode
if	11:4	18:4	2	(SetThreadErrorMode (SEM_FAILCRITICALERRORS ,& mode ) != 0)
cond	11:8	11:62	3	SetThreadErrorMode (SEM_FAILCRITICALERRORS ,& mode ) != 0
call	11:8	11:57	4	SetThreadErrorMode
arg	11:28	11:50	5	SEM_FAILCRITICALERRORS
water	11:28	0:0	6	SEM_FAILCRITICALERRORS
arg	11:52	11:57	5	&mode
op	11:52	0:0	6	&
water	11:53	0:0	6	mode
op	11:59	0:0	4	!=
water	11:62	0:0	4	0
stmts	13:4	18:4	3	
water	13:4	0:0	4	{
water	14:8	0:0	4	handle
op	14:15	0:0	4	=
call	14:17	14:63	4	LoadLibraryExW
arg	14:33	14:38	5	wfile
water	14:33	0:0	6	wfile
arg	14:40	14:44	5	NULL
water	14:40	0:0	6	NULL
arg	14:46	14:63	5	LoadLibraryFlags
water	14:46	0:0	6	LoadLibraryFlags
water	14:64	0:0	4	;
call	16:8	16:38	4	SetThreadErrorMode
arg	16:28	16:32	5	mode
water	16:28	0:0	6	mode
arg	16:34	16:38	5	NULL
water	16:34	0:0	6	NULL
water	16:39	0:0	4	;
water	18:4	0:0	4	}
call	19:4	19:15	2	free
arg	19:10	19:15	3	wfile
water	19:10	0:0	4	wfile
water	19:16	0:0	2	;
if	20:4	26:4	2	(handle == NULL)
cond	20:8	20:18	3	handle == NULL
water	20:8	0:0	4	handle
op	20:15	0:0	4	==
water	20:18	0:0	4	NULL
stmts	21:4	26:4	3	
water	21:4	0:0	4	{
decl	22:8	22:41	4	char	*psz_err
op	22:22	0:0	4	=
call	22:24	22:40	5	GetWindowsError
call	23:8	23:76	4	msg_Warn
arg	23:18	23:24	5	p_this
water	23:18	0:0	6	p_this
arg	23:26	23:56	5	"cannot load module `%s' (%s)"
water	23:26	0:0	6	"cannot load module `%s' (%s)"
arg	23:58	23:66	5	psz_file
water	23:58	0:0	6	psz_file
arg	23:68	23:76	5	psz_err
water	23:68	0:0	6	psz_err
water	23:77	0:0	4	;
call	24:8	24:22	4	free
arg	24:14	24:22	5	psz_err
water	24:14	0:0	6	psz_err
water	24:23	0:0	4	;
return	25:8	25:17	4	-1
op	25:15	0:0	5	-
water	25:16	0:0	5	1
water	26:4	0:0	4	}
op	27:4	0:0	2	*
water	27:5	0:0	2	p_handle
op	27:14	0:0	2	=
water	27:16	0:0	2	handle
water	27:22	0:0	2	;
water	28:4	0:0	2	(
water	28:5	0:0	2	void
water	28:9	0:0	2	)
water	28:11	0:0	2	lazy
water	28:15	0:0	2	;
return	29:4	29:12	2	0
water	29:11	0:0	3	0

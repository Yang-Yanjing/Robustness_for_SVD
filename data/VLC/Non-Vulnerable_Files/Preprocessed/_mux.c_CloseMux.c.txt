func	2:0	14:0	0	void	CloseMux
params	2:13	0:0	1	
param	2:15	2:36	2	vlc_object_t *	p_this
stmnts	0:0	13:17	1	
decl	4:4	4:43	2	sout_mux_t	*p_mux
op	4:22	0:0	2	=
water	4:24	0:0	2	(
water	4:25	0:0	2	sout_mux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:40	2	sout_mux_sys_t	*p_sys
op	5:26	0:0	2	=
water	5:28	0:0	2	p_mux
op	5:33	0:0	2	->
water	5:35	0:0	2	p_sys
if	6:4	9:4	2	(! p_sys -> b_write_header && ! p_sys -> b_error &&av_write_trailer (p_sys -> oc ) < 0)
cond	6:8	6:85	3	! p_sys -> b_write_header && ! p_sys -> b_error &&av_write_trailer (p_sys -> oc ) < 0
op	6:8	0:0	4	!
water	6:9	0:0	4	p_sys
op	6:14	0:0	4	->
water	6:16	0:0	4	b_write_header
op	6:31	0:0	4	&&
op	6:34	0:0	4	!
water	6:35	0:0	4	p_sys
op	6:40	0:0	4	->
water	6:42	0:0	4	b_error
op	6:50	0:0	4	&&
call	6:53	6:81	4	av_write_trailer
arg	6:71	6:81	5	p_sys->oc
water	6:71	0:0	6	p_sys
op	6:76	0:0	6	->
water	6:78	0:0	6	oc
op	6:83	0:0	4	<
water	6:85	0:0	4	0
stmts	7:4	9:4	3	
water	7:4	0:0	4	{
call	8:8	8:50	4	msg_Err
arg	8:17	8:22	5	p_mux
water	8:17	0:0	6	p_mux
arg	8:24	8:50	5	"could not write trailer"
water	8:24	0:0	6	"could not write trailer"
water	8:51	0:0	4	;
water	9:4	0:0	4	}
call	10:4	10:35	2	avformat_free_context
arg	10:26	10:35	3	p_sys->oc
water	10:26	0:0	4	p_sys
op	10:31	0:0	4	->
water	10:33	0:0	4	oc
water	10:36	0:0	2	;
call	11:4	11:21	2	av_free
arg	11:12	11:21	3	p_sys->io
water	11:12	0:0	4	p_sys
op	11:17	0:0	4	->
water	11:19	0:0	4	io
water	11:22	0:0	2	;
call	12:4	12:27	2	free
arg	12:10	12:27	3	p_sys->io_buffer
water	12:10	0:0	4	p_sys
op	12:15	0:0	4	->
water	12:17	0:0	4	io_buffer
water	12:28	0:0	2	;
call	13:4	13:16	2	free
arg	13:10	13:16	3	p_sys
water	13:10	0:0	4	p_sys
water	13:17	0:0	2	;

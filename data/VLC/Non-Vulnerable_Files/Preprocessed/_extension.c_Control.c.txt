func	2:0	114:0	0	static int	Control
params	2:18	0:0	1	
param	2:20	2:47	2	extensions_manager_t *	p_mgr
param	2:49	2:62	2	int	i_control
param	2:64	2:77	2	va_list	args
stmnts	0:0	113:22	1	
decl	4:4	4:29	2	extension_t	*p_ext
op	4:23	0:0	2	=
water	4:25	0:0	2	NULL
decl	5:4	5:19	2	bool	*pb
op	5:13	0:0	2	=
water	5:15	0:0	2	NULL
decl	6:4	6:26	2	uint16_t	**ppus
op	6:20	0:0	2	=
water	6:22	0:0	2	NULL
decl	7:4	7:24	2	char	***pppsz
op	7:18	0:0	2	=
water	7:20	0:0	2	NULL
decl	8:4	8:13	2	int	i
op	8:10	0:0	2	=
water	8:12	0:0	2	0
switch	9:4	112:4	2	(i_control)
cond	9:12	9:12	3	i_control
water	9:12	0:0	4	i_control
stmts	10:4	112:4	3	
water	10:4	0:0	4	{
label	11:8	11:31	4	case EXTENSION_ACTIVATE :
water	12:12	0:0	4	p_ext
op	12:18	0:0	4	=
water	12:20	0:0	4	(
water	12:22	0:0	4	extension_t
op	12:33	0:0	4	*
water	12:35	0:0	4	)
call	12:37	12:64	4	va_arg
arg	12:45	12:49	5	args
water	12:45	0:0	6	args
arg	12:51	12:64	5	extension_t*
water	12:51	0:0	6	extension_t
op	12:62	0:0	6	*
water	12:65	0:0	4	;
return	13:12	13:43	4	Activate(p_mgr,p_ext)
call	13:19	13:42	5	Activate
arg	13:29	13:34	6	p_mgr
water	13:29	0:0	7	p_mgr
arg	13:36	13:42	6	p_ext
water	13:36	0:0	7	p_ext
label	14:8	14:33	4	case EXTENSION_DEACTIVATE :
water	15:12	0:0	4	p_ext
op	15:18	0:0	4	=
water	15:20	0:0	4	(
water	15:22	0:0	4	extension_t
op	15:33	0:0	4	*
water	15:35	0:0	4	)
call	15:37	15:64	4	va_arg
arg	15:45	15:49	5	args
water	15:45	0:0	6	args
arg	15:51	15:64	5	extension_t*
water	15:51	0:0	6	extension_t
op	15:62	0:0	6	*
water	15:65	0:0	4	;
return	16:12	16:45	4	Deactivate(p_mgr,p_ext)
call	16:19	16:44	5	Deactivate
arg	16:31	16:36	6	p_mgr
water	16:31	0:0	7	p_mgr
arg	16:38	16:44	6	p_ext
water	16:38	0:0	7	p_ext
label	17:8	17:35	4	case EXTENSION_IS_ACTIVATED :
water	18:12	0:0	4	p_ext
op	18:18	0:0	4	=
water	18:20	0:0	4	(
water	18:22	0:0	4	extension_t
op	18:33	0:0	4	*
water	18:35	0:0	4	)
call	18:37	18:64	4	va_arg
arg	18:45	18:49	5	args
water	18:45	0:0	6	args
arg	18:51	18:64	5	extension_t*
water	18:51	0:0	6	extension_t
op	18:62	0:0	6	*
water	18:65	0:0	4	;
water	19:12	0:0	4	pb
op	19:15	0:0	4	=
water	19:17	0:0	4	(
water	19:19	0:0	4	bool
op	19:23	0:0	4	*
water	19:25	0:0	4	)
call	19:27	19:47	4	va_arg
arg	19:35	19:39	5	args
water	19:35	0:0	6	args
arg	19:41	19:47	5	bool*
water	19:41	0:0	6	bool
op	19:45	0:0	6	*
water	19:48	0:0	4	;
op	20:12	0:0	4	*
water	20:13	0:0	4	pb
op	20:16	0:0	4	=
call	20:18	20:44	4	IsActivated
arg	20:31	20:36	5	p_mgr
water	20:31	0:0	6	p_mgr
arg	20:38	20:44	5	p_ext
water	20:38	0:0	6	p_ext
water	20:45	0:0	4	;
break	21:12	21:17	4	
label	22:8	22:31	4	case EXTENSION_HAS_MENU :
water	23:12	0:0	4	p_ext
op	23:18	0:0	4	=
water	23:20	0:0	4	(
water	23:22	0:0	4	extension_t
op	23:33	0:0	4	*
water	23:35	0:0	4	)
call	23:37	23:64	4	va_arg
arg	23:45	23:49	5	args
water	23:45	0:0	6	args
arg	23:51	23:64	5	extension_t*
water	23:51	0:0	6	extension_t
op	23:62	0:0	6	*
water	23:65	0:0	4	;
water	24:12	0:0	4	pb
op	24:15	0:0	4	=
water	24:17	0:0	4	(
water	24:19	0:0	4	bool
op	24:23	0:0	4	*
water	24:25	0:0	4	)
call	24:27	24:47	4	va_arg
arg	24:35	24:39	5	args
water	24:35	0:0	6	args
arg	24:41	24:47	5	bool*
water	24:41	0:0	6	bool
op	24:45	0:0	6	*
water	24:48	0:0	4	;
op	25:12	0:0	4	*
water	25:13	0:0	4	pb
op	25:16	0:0	4	=
water	25:18	0:0	4	(
water	25:20	0:0	4	p_ext
op	25:25	0:0	4	->
water	25:27	0:0	4	p_sys
op	25:32	0:0	4	->
water	25:34	0:0	4	i_capabilities
op	25:49	0:0	4	&
water	25:51	0:0	4	EXT_HAS_MENU
water	25:64	0:0	4	)
water	25:66	0:0	4	?
water	25:68	0:0	4	1
water	25:70	0:0	4	:
water	25:72	0:0	4	0
water	25:73	0:0	4	;
break	26:12	26:17	4	
label	27:8	27:31	4	case EXTENSION_GET_MENU :
water	28:12	0:0	4	p_ext
op	28:18	0:0	4	=
water	28:20	0:0	4	(
water	28:22	0:0	4	extension_t
op	28:33	0:0	4	*
water	28:35	0:0	4	)
call	28:37	28:64	4	va_arg
arg	28:45	28:49	5	args
water	28:45	0:0	6	args
arg	28:51	28:64	5	extension_t*
water	28:51	0:0	6	extension_t
op	28:62	0:0	6	*
water	28:65	0:0	4	;
water	29:12	0:0	4	pppsz
op	29:18	0:0	4	=
water	29:20	0:0	4	(
water	29:22	0:0	4	char
op	29:26	0:0	4	*
op	29:27	0:0	4	*
op	29:28	0:0	4	*
water	29:30	0:0	4	)
call	29:32	29:54	4	va_arg
arg	29:40	29:44	5	args
water	29:40	0:0	6	args
arg	29:46	29:54	5	char***
water	29:46	0:0	6	char
op	29:50	0:0	6	*
op	29:51	0:0	6	*
op	29:52	0:0	6	*
water	29:55	0:0	4	;
water	30:12	0:0	4	ppus
op	30:17	0:0	4	=
water	30:19	0:0	4	(
water	30:21	0:0	4	uint16_t
op	30:29	0:0	4	*
op	30:30	0:0	4	*
water	30:32	0:0	4	)
call	30:34	30:59	4	va_arg
arg	30:42	30:46	5	args
water	30:42	0:0	6	args
arg	30:48	30:59	5	uint16_t**
water	30:48	0:0	6	uint16_t
op	30:56	0:0	6	*
op	30:57	0:0	6	*
water	30:60	0:0	4	;
return	31:12	31:62	4	GetMenuEntries(p_mgr,p_ext,pppsz,ppus)
call	31:19	31:61	5	GetMenuEntries
arg	31:35	31:40	6	p_mgr
water	31:35	0:0	7	p_mgr
arg	31:42	31:47	6	p_ext
water	31:42	0:0	7	p_ext
arg	31:49	31:54	6	pppsz
water	31:49	0:0	7	pppsz
arg	31:56	31:61	6	ppus
water	31:56	0:0	7	ppus
label	32:8	32:35	4	case EXTENSION_TRIGGER_ONLY :
water	33:12	0:0	4	p_ext
op	33:18	0:0	4	=
water	33:20	0:0	4	(
water	33:22	0:0	4	extension_t
op	33:33	0:0	4	*
water	33:35	0:0	4	)
call	33:37	33:64	4	va_arg
arg	33:45	33:49	5	args
water	33:45	0:0	6	args
arg	33:51	33:64	5	extension_t*
water	33:51	0:0	6	extension_t
op	33:62	0:0	6	*
water	33:65	0:0	4	;
water	34:12	0:0	4	pb
op	34:15	0:0	4	=
water	34:17	0:0	4	(
water	34:19	0:0	4	bool
op	34:23	0:0	4	*
water	34:25	0:0	4	)
call	34:27	34:47	4	va_arg
arg	34:35	34:39	5	args
water	34:35	0:0	6	args
arg	34:41	34:47	5	bool*
water	34:41	0:0	6	bool
op	34:45	0:0	6	*
water	34:48	0:0	4	;
op	35:12	0:0	4	*
water	35:13	0:0	4	pb
op	35:16	0:0	4	=
water	35:18	0:0	4	(
water	35:20	0:0	4	p_ext
op	35:25	0:0	4	->
water	35:27	0:0	4	p_sys
op	35:32	0:0	4	->
water	35:34	0:0	4	i_capabilities
op	35:49	0:0	4	&
water	35:51	0:0	4	EXT_TRIGGER_ONLY
water	35:68	0:0	4	)
water	35:70	0:0	4	?
water	35:72	0:0	4	1
water	35:74	0:0	4	:
water	35:76	0:0	4	0
water	35:77	0:0	4	;
break	36:12	36:17	4	
label	37:8	37:30	4	case EXTENSION_TRIGGER :
water	38:12	0:0	4	p_ext
op	38:18	0:0	4	=
water	38:20	0:0	4	(
water	38:22	0:0	4	extension_t
op	38:33	0:0	4	*
water	38:35	0:0	4	)
call	38:37	38:64	4	va_arg
arg	38:45	38:49	5	args
water	38:45	0:0	6	args
arg	38:51	38:64	5	extension_t*
water	38:51	0:0	6	extension_t
op	38:62	0:0	6	*
water	38:65	0:0	4	;
return	39:12	39:51	4	TriggerExtension(p_mgr,p_ext)
call	39:19	39:50	5	TriggerExtension
arg	39:37	39:42	6	p_mgr
water	39:37	0:0	7	p_mgr
arg	39:44	39:50	6	p_ext
water	39:44	0:0	7	p_ext
label	40:8	40:35	4	case EXTENSION_TRIGGER_MENU :
water	41:12	0:0	4	p_ext
op	41:18	0:0	4	=
water	41:20	0:0	4	(
water	41:22	0:0	4	extension_t
op	41:33	0:0	4	*
water	41:35	0:0	4	)
call	41:37	41:64	4	va_arg
arg	41:45	41:49	5	args
water	41:45	0:0	6	args
arg	41:51	41:64	5	extension_t*
water	41:51	0:0	6	extension_t
op	41:62	0:0	6	*
water	41:65	0:0	4	;
water	43:12	0:0	4	i
op	43:14	0:0	4	=
water	43:16	0:0	4	(
water	43:18	0:0	4	int
water	43:22	0:0	4	)
call	43:24	43:42	4	va_arg
arg	43:32	43:36	5	args
water	43:32	0:0	6	args
arg	43:38	43:42	5	int
water	43:38	0:0	6	int
water	43:43	0:0	4	;
return	44:12	44:42	4	TriggerMenu(p_ext,i)
call	44:19	44:41	5	TriggerMenu
arg	44:32	44:37	6	p_ext
water	44:32	0:0	7	p_ext
arg	44:39	44:41	6	i
water	44:39	0:0	7	i
label	45:8	45:32	4	case EXTENSION_SET_INPUT :
water	46:8	0:0	4	{
water	47:12	0:0	4	p_ext
op	47:18	0:0	4	=
water	47:20	0:0	4	(
water	47:22	0:0	4	extension_t
op	47:33	0:0	4	*
water	47:35	0:0	4	)
call	47:37	47:64	4	va_arg
arg	47:45	47:49	5	args
water	47:45	0:0	6	args
arg	47:51	47:64	5	extension_t*
water	47:51	0:0	6	extension_t
op	47:62	0:0	6	*
water	47:65	0:0	4	;
decl	48:12	48:77	4	input_thread_t	*p_input
op	48:36	0:0	4	=
call	48:38	48:76	5	va_arg
arg	48:46	48:50	6	args
water	48:46	0:0	7	args
arg	48:52	48:76	6	structinput_thread_t*
water	48:52	0:0	7	struct
water	48:59	0:0	7	input_thread_t
op	48:74	0:0	7	*
if	49:12	50:35	4	(!LockExtension (p_ext ))
cond	49:16	49:38	5	!LockExtension (p_ext )
op	49:16	0:0	6	!
call	49:17	49:38	6	LockExtension
arg	49:32	49:38	7	p_ext
water	49:32	0:0	8	p_ext
stmts	50:16	50:35	5	
return	50:16	50:35	6	VLC_EGENERIC
water	50:23	0:0	7	VLC_EGENERIC
decl	52:12	52:55	4	input_thread_t	*old
op	52:32	0:0	4	=
water	52:34	0:0	4	p_ext
op	52:39	0:0	4	->
water	52:41	0:0	4	p_sys
op	52:46	0:0	4	->
water	52:48	0:0	4	p_input
decl	53:12	53:32	4	input_item_t	*p_item
if	54:12	67:12	4	(old)
cond	54:16	54:16	5	old
water	54:16	0:0	6	old
stmts	55:12	67:12	5	
water	55:12	0:0	6	{
if	57:16	65:16	6	(p_ext -> p_sys -> i_capabilities & EXT_META_LISTENER)
cond	57:20	57:51	7	p_ext -> p_sys -> i_capabilities & EXT_META_LISTENER
water	57:20	0:0	8	p_ext
op	57:25	0:0	8	->
water	57:27	0:0	8	p_sys
op	57:32	0:0	8	->
water	57:34	0:0	8	i_capabilities
op	57:49	0:0	8	&
water	57:51	0:0	8	EXT_META_LISTENER
stmts	58:16	65:16	7	
water	58:16	0:0	8	{
water	59:20	0:0	8	p_item
op	59:27	0:0	8	=
call	59:29	59:48	8	input_GetItem
arg	59:44	59:48	9	old
water	59:44	0:0	10	old
water	59:49	0:0	8	;
call	60:20	63:44	8	vlc_event_detach
arg	60:38	60:60	9	&p_item->event_manager
op	60:38	0:0	10	&
water	60:39	0:0	10	p_item
op	60:45	0:0	10	->
water	60:47	0:0	10	event_manager
arg	61:38	61:62	9	vlc_InputItemMetaChanged
water	61:38	0:0	10	vlc_InputItemMetaChanged
arg	62:38	62:58	9	inputItemMetaChanged
water	62:38	0:0	10	inputItemMetaChanged
arg	63:38	63:44	9	p_ext
water	63:38	0:0	10	p_ext
water	63:45	0:0	8	;
call	64:20	64:42	8	vlc_gc_decref
arg	64:35	64:42	9	p_item
water	64:35	0:0	10	p_item
water	64:43	0:0	8	;
water	65:16	0:0	8	}
call	66:16	66:40	6	vlc_object_release
arg	66:36	66:40	7	old
water	66:36	0:0	8	old
water	66:41	0:0	6	;
water	67:12	0:0	6	}
water	68:12	0:0	4	p_ext
op	68:17	0:0	4	->
water	68:19	0:0	4	p_sys
op	68:24	0:0	4	->
water	68:26	0:0	4	p_input
op	68:34	0:0	4	=
water	68:36	0:0	4	p_input
water	68:44	0:0	4	?
call	68:46	68:71	4	vlc_object_hold
arg	68:63	68:71	5	p_input
water	68:63	0:0	6	p_input
water	69:44	0:0	4	:
water	69:46	0:0	4	p_input
water	69:53	0:0	4	;
if	71:12	74:12	4	(p_ext -> p_sys -> i_capabilities & EXT_INPUT_LISTENER)
cond	71:16	71:47	5	p_ext -> p_sys -> i_capabilities & EXT_INPUT_LISTENER
water	71:16	0:0	6	p_ext
op	71:21	0:0	6	->
water	71:23	0:0	6	p_sys
op	71:28	0:0	6	->
water	71:30	0:0	6	i_capabilities
op	71:45	0:0	6	&
water	71:47	0:0	6	EXT_INPUT_LISTENER
stmts	72:12	74:12	5	
water	72:12	0:0	6	{
call	73:16	73:56	6	PushCommandUnique
arg	73:35	73:40	7	p_ext
water	73:35	0:0	8	p_ext
arg	73:42	73:56	7	CMD_SET_INPUT
water	73:42	0:0	8	CMD_SET_INPUT
water	73:57	0:0	6	;
water	74:12	0:0	6	}
if	76:12	85:12	4	(p_ext -> p_sys -> p_input && p_ext -> p_sys -> i_capabilities & EXT_META_LISTENER)
cond	76:16	77:47	5	p_ext -> p_sys -> p_input && p_ext -> p_sys -> i_capabilities & EXT_META_LISTENER
water	76:16	0:0	6	p_ext
op	76:21	0:0	6	->
water	76:23	0:0	6	p_sys
op	76:28	0:0	6	->
water	76:30	0:0	6	p_input
op	76:38	0:0	6	&&
water	77:16	0:0	6	p_ext
op	77:21	0:0	6	->
water	77:23	0:0	6	p_sys
op	77:28	0:0	6	->
water	77:30	0:0	6	i_capabilities
op	77:45	0:0	6	&
water	77:47	0:0	6	EXT_META_LISTENER
stmts	78:12	85:12	5	
water	78:12	0:0	6	{
water	79:16	0:0	6	p_item
op	79:23	0:0	6	=
call	79:25	79:62	6	input_GetItem
arg	79:40	79:62	7	p_ext->p_sys->p_input
water	79:40	0:0	8	p_ext
op	79:45	0:0	8	->
water	79:47	0:0	8	p_sys
op	79:52	0:0	8	->
water	79:54	0:0	8	p_input
water	79:63	0:0	6	;
call	80:16	80:38	6	vlc_gc_incref
arg	80:31	80:38	7	p_item
water	80:31	0:0	8	p_item
water	80:39	0:0	6	;
call	81:16	84:40	6	vlc_event_attach
arg	81:34	81:56	7	&p_item->event_manager
op	81:34	0:0	8	&
water	81:35	0:0	8	p_item
op	81:41	0:0	8	->
water	81:43	0:0	8	event_manager
arg	82:34	82:58	7	vlc_InputItemMetaChanged
water	82:34	0:0	8	vlc_InputItemMetaChanged
arg	83:34	83:54	7	inputItemMetaChanged
water	83:34	0:0	8	inputItemMetaChanged
arg	84:34	84:40	7	p_ext
water	84:34	0:0	8	p_ext
water	84:41	0:0	6	;
water	85:12	0:0	6	}
call	86:12	86:35	4	UnlockExtension
arg	86:29	86:35	5	p_ext
water	86:29	0:0	6	p_ext
water	86:36	0:0	4	;
break	87:12	87:17	4	
water	88:8	0:0	4	}
label	89:8	89:38	4	case EXTENSION_PLAYING_CHANGED :
water	90:8	0:0	4	{
decl	91:12	91:30	4	extension_t	*p_ext
water	92:12	0:0	4	p_ext
op	92:18	0:0	4	=
water	92:20	0:0	4	(
water	92:22	0:0	4	extension_t
op	92:33	0:0	4	*
water	92:35	0:0	4	)
call	92:37	92:64	4	va_arg
arg	92:45	92:49	5	args
water	92:45	0:0	6	args
arg	92:51	92:64	5	extension_t*
water	92:51	0:0	6	extension_t
op	92:62	0:0	6	*
water	92:65	0:0	4	;
call	93:12	93:44	4	assert
arg	93:20	93:44	5	p_ext->psz_name!=NULL
water	93:20	0:0	6	p_ext
op	93:25	0:0	6	->
water	93:27	0:0	6	psz_name
op	93:36	0:0	6	!=
water	93:39	0:0	6	NULL
water	93:45	0:0	4	;
water	94:12	0:0	4	i
op	94:14	0:0	4	=
water	94:16	0:0	4	(
water	94:18	0:0	4	int
water	94:22	0:0	4	)
call	94:24	94:42	4	va_arg
arg	94:32	94:36	5	args
water	94:32	0:0	6	args
arg	94:38	94:42	5	int
water	94:38	0:0	6	int
water	94:43	0:0	4	;
if	95:12	98:12	4	(p_ext -> p_sys -> i_capabilities & EXT_PLAYING_LISTENER)
cond	95:16	95:47	5	p_ext -> p_sys -> i_capabilities & EXT_PLAYING_LISTENER
water	95:16	0:0	6	p_ext
op	95:21	0:0	6	->
water	95:23	0:0	6	p_sys
op	95:28	0:0	6	->
water	95:30	0:0	6	i_capabilities
op	95:45	0:0	6	&
water	95:47	0:0	6	EXT_PLAYING_LISTENER
stmts	96:12	98:12	5	
water	96:12	0:0	6	{
call	97:16	97:59	6	PushCommand
arg	97:29	97:34	7	p_ext
water	97:29	0:0	8	p_ext
arg	97:36	97:55	7	CMD_PLAYING_CHANGED
water	97:36	0:0	8	CMD_PLAYING_CHANGED
arg	97:57	97:59	7	i
water	97:57	0:0	8	i
water	97:60	0:0	6	;
water	98:12	0:0	6	}
break	99:12	99:17	4	
water	100:8	0:0	4	}
label	101:8	101:35	4	case EXTENSION_META_CHANGED :
water	102:8	0:0	4	{
decl	103:12	103:30	4	extension_t	*p_ext
water	104:12	0:0	4	p_ext
op	104:18	0:0	4	=
water	104:20	0:0	4	(
water	104:22	0:0	4	extension_t
op	104:33	0:0	4	*
water	104:35	0:0	4	)
call	104:37	104:64	4	va_arg
arg	104:45	104:49	5	args
water	104:45	0:0	6	args
arg	104:51	104:64	5	extension_t*
water	104:51	0:0	6	extension_t
op	104:62	0:0	6	*
water	104:65	0:0	4	;
call	105:12	105:48	4	PushCommand
arg	105:25	105:30	5	p_ext
water	105:25	0:0	6	p_ext
arg	105:32	105:48	5	CMD_UPDATE_META
water	105:32	0:0	6	CMD_UPDATE_META
water	105:49	0:0	4	;
break	106:12	106:17	4	
water	107:8	0:0	4	}
label	108:8	108:15	4	default :
call	109:12	110:32	4	msg_Warn
arg	109:22	109:27	5	p_mgr
water	109:22	0:0	6	p_mgr
arg	109:29	109:76	5	"Control '%d' not yet implemented in Extension"
water	109:29	0:0	6	"Control '%d' not yet implemented in Extension"
arg	110:22	110:32	5	i_control
water	110:22	0:0	6	i_control
water	110:33	0:0	4	;
return	111:12	111:31	4	VLC_EGENERIC
water	111:19	0:0	5	VLC_EGENERIC
water	112:4	0:0	4	}
return	113:4	113:22	2	VLC_SUCCESS
water	113:11	0:0	3	VLC_SUCCESS

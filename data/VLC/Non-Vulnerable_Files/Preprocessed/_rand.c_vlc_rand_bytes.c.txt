func	2:0	63:0	0	void	vlc_rand_bytes
params	2:20	0:0	1	
param	2:21	2:30	2	void *	buf
param	2:32	2:42	2	size_t	len
stmnts	0:0	61:4	1	
decl	4:4	4:22	2	size_t	count
op	4:17	0:0	2	=
water	4:19	0:0	2	len
decl	5:4	5:35	2	uint8_t	*p_buf
op	5:19	0:0	2	=
water	5:21	0:0	2	(
water	5:22	0:0	2	uint8_t
op	5:30	0:0	2	*
water	5:31	0:0	2	)
water	5:32	0:0	2	buf
while	7:4	19:4	2	(count > 0)
cond	7:11	7:19	3	count > 0
water	7:11	0:0	4	count
op	7:17	0:0	4	>
water	7:19	0:0	4	0
stmts	8:4	19:4	3	
water	8:4	0:0	4	{
decl	9:8	9:24	4	unsigned int	val
water	10:8	0:0	4	val
op	10:12	0:0	4	=
call	10:14	10:19	4	rand
water	10:20	0:0	4	;
if	11:8	15:8	4	(count < sizeof ( val ))
cond	11:12	11:31	5	count < sizeof ( val )
water	11:12	0:0	6	count
op	11:18	0:0	6	<
op	11:20	0:0	6	sizeof
water	11:27	0:0	6	(
water	11:28	0:0	6	val
water	11:31	0:0	6	)
stmts	12:8	15:8	5	
water	12:8	0:0	6	{
call	13:12	13:38	6	memcpy
arg	13:20	13:25	7	p_buf
water	13:20	0:0	8	p_buf
arg	13:27	13:31	7	&val
op	13:27	0:0	8	&
water	13:28	0:0	8	val
arg	13:33	13:38	7	count
water	13:33	0:0	8	count
water	13:39	0:0	6	;
break	14:12	14:17	6	
water	15:8	0:0	6	}
call	16:8	16:41	4	memcpy
arg	16:16	16:21	5	p_buf
water	16:16	0:0	6	p_buf
arg	16:23	16:27	5	&val
op	16:23	0:0	6	&
water	16:24	0:0	6	val
arg	16:29	16:41	5	sizeof(val)
op	16:29	0:0	6	sizeof
water	16:36	0:0	6	(
water	16:37	0:0	6	val
water	16:40	0:0	6	)
water	16:42	0:0	4	;
water	17:8	0:0	4	count
op	17:14	0:0	4	-=
op	17:17	0:0	4	sizeof
water	17:24	0:0	4	(
water	17:25	0:0	4	val
water	17:28	0:0	4	)
water	17:29	0:0	4	;
water	18:8	0:0	4	p_buf
op	18:14	0:0	4	+=
op	18:17	0:0	4	sizeof
water	18:24	0:0	4	(
water	18:25	0:0	4	val
water	18:28	0:0	4	)
water	18:29	0:0	4	;
water	19:4	0:0	4	}
water	21:4	0:0	2	static
water	21:11	0:0	2	const
water	21:17	0:0	2	WCHAR
op	21:23	0:0	2	*
water	21:24	0:0	2	className
op	21:34	0:0	2	=
water	21:36	0:0	2	L
water	21:37	0:0	2	"Windows.Security.Cryptography.CryptographicBuffer"
water	21:88	0:0	2	;
decl	22:4	22:41	2	const UINT32	clen
op	22:22	0:0	2	=
call	22:24	22:40	3	wcslen
arg	22:31	22:40	4	className
water	22:31	0:0	5	className
decl	23:4	23:29	2	HSTRING	hClassName
op	23:23	0:0	2	=
water	23:25	0:0	2	NULL
decl	24:4	24:25	2	HSTRING_HEADER	header
decl	25:4	25:84	2	HRESULT	hr
op	25:15	0:0	2	=
call	25:17	25:83	3	WindowsCreateStringReference
arg	25:46	25:55	4	className
water	25:46	0:0	5	className
arg	25:57	25:61	4	clen
water	25:57	0:0	5	clen
arg	25:63	25:70	4	&header
op	25:63	0:0	5	&
water	25:64	0:0	5	header
arg	25:72	25:83	4	&hClassName
op	25:72	0:0	5	&
water	25:73	0:0	5	hClassName
if	26:4	29:4	2	(hr)
cond	26:8	26:8	3	hr
water	26:8	0:0	4	hr
stmts	26:12	29:4	3	
water	26:12	0:0	4	{
call	27:8	27:38	4	WindowsDeleteString
arg	27:28	27:38	5	hClassName
water	27:28	0:0	6	hClassName
water	27:39	0:0	4	;
return	28:8	28:14	4	
water	29:4	0:0	4	}
decl	30:4	30:53	2	ICryptographicBufferStatics	*cryptoStatics
op	30:47	0:0	2	=
water	30:49	0:0	2	NULL
water	31:4	0:0	2	hr
op	31:7	0:0	2	=
call	31:9	31:100	2	RoGetActivationFactory
arg	31:32	31:42	3	hClassName
water	31:32	0:0	4	hClassName
arg	31:44	31:76	3	&IID_ICryptographicBufferStatics
op	31:44	0:0	4	&
water	31:45	0:0	4	IID_ICryptographicBufferStatics
arg	31:78	31:100	3	(void**)&cryptoStatics
water	31:78	0:0	4	(
water	31:79	0:0	4	void
op	31:83	0:0	4	*
op	31:84	0:0	4	*
water	31:85	0:0	4	)
op	31:86	0:0	4	&
water	31:87	0:0	4	cryptoStatics
water	31:101	0:0	2	;
call	32:4	32:34	2	WindowsDeleteString
arg	32:24	32:34	3	hClassName
water	32:24	0:0	4	hClassName
water	32:35	0:0	2	;
if	33:4	34:14	2	(hr)
cond	33:8	33:8	3	hr
water	33:8	0:0	4	hr
stmts	34:8	34:14	3	
return	34:8	34:14	4	
decl	35:4	35:26	2	IBuffer	*buffer
op	35:20	0:0	2	=
water	35:22	0:0	2	NULL
water	36:4	0:0	2	hr
op	36:7	0:0	2	=
call	36:9	36:79	2	ICryptographicBufferStatics_GenerateRandom
arg	36:52	36:65	3	cryptoStatics
water	36:52	0:0	4	cryptoStatics
arg	36:67	36:70	3	len
water	36:67	0:0	4	len
arg	36:72	36:79	3	&buffer
op	36:72	0:0	4	&
water	36:73	0:0	4	buffer
water	36:80	0:0	2	;
if	37:4	40:4	2	(hr)
cond	37:8	37:8	3	hr
water	37:8	0:0	4	hr
stmts	37:12	40:4	3	
water	37:12	0:0	4	{
call	38:8	38:57	4	ICryptographicBufferStatics_Release
arg	38:44	38:57	5	cryptoStatics
water	38:44	0:0	6	cryptoStatics
water	38:58	0:0	4	;
return	39:8	39:14	4	
water	40:4	0:0	4	}
decl	41:4	41:18	2	UINT32	olength
decl	42:4	42:29	2	unsigned char	*rnd
op	42:23	0:0	2	=
water	42:25	0:0	2	NULL
water	43:4	0:0	2	hr
op	43:7	0:0	2	=
call	43:9	43:98	2	ICryptographicBufferStatics_CopyToByteArray
arg	43:53	43:66	3	cryptoStatics
water	43:53	0:0	4	cryptoStatics
arg	43:68	43:74	3	buffer
water	43:68	0:0	4	buffer
arg	43:76	43:84	3	&olength
op	43:76	0:0	4	&
water	43:77	0:0	4	olength
arg	43:86	43:98	3	(BYTE**)&rnd
water	43:86	0:0	4	(
water	43:87	0:0	4	BYTE
op	43:91	0:0	4	*
op	43:92	0:0	4	*
water	43:93	0:0	4	)
op	43:94	0:0	4	&
water	43:95	0:0	4	rnd
water	43:99	0:0	2	;
call	44:4	44:24	2	memcpy
arg	44:11	44:14	3	buf
water	44:11	0:0	4	buf
arg	44:16	44:19	3	rnd
water	44:16	0:0	4	rnd
arg	44:21	44:24	3	len
water	44:21	0:0	4	len
water	44:25	0:0	2	;
call	45:4	45:26	2	IBuffer_Release
arg	45:20	45:26	3	buffer
water	45:20	0:0	4	buffer
water	45:27	0:0	2	;
call	46:4	46:53	2	ICryptographicBufferStatics_Release
arg	46:40	46:53	3	cryptoStatics
water	46:40	0:0	4	cryptoStatics
water	46:54	0:0	2	;
decl	48:4	48:20	2	HCRYPTPROV	hProv
if	50:4	61:4	2	(CryptAcquireContext (& hProv ,NULL ,MS_DEF_PROV ,PROV_RSA_FULL ,CRYPT_VERIFYCONTEXT ))
cond	50:8	55:27	3	CryptAcquireContext (& hProv ,NULL ,MS_DEF_PROV ,PROV_RSA_FULL ,CRYPT_VERIFYCONTEXT )
call	50:8	55:27	4	CryptAcquireContext
arg	51:8	51:14	5	&hProv
op	51:8	0:0	6	&
water	51:9	0:0	6	hProv
arg	52:8	52:12	5	NULL
water	52:8	0:0	6	NULL
arg	53:8	53:19	5	MS_DEF_PROV
water	53:8	0:0	6	MS_DEF_PROV
arg	54:8	54:21	5	PROV_RSA_FULL
water	54:8	0:0	6	PROV_RSA_FULL
arg	55:8	55:27	5	CRYPT_VERIFYCONTEXT
water	55:8	0:0	6	CRYPT_VERIFYCONTEXT
stmts	56:4	61:4	3	
water	56:4	0:0	4	{
call	59:8	59:38	4	CryptGenRandom
arg	59:23	59:28	5	hProv
water	59:23	0:0	6	hProv
arg	59:30	59:33	5	len
water	59:30	0:0	6	len
arg	59:35	59:38	5	buf
water	59:35	0:0	6	buf
water	59:39	0:0	4	;
call	60:8	60:36	4	CryptReleaseContext
arg	60:28	60:33	5	hProv
water	60:28	0:0	6	hProv
arg	60:35	60:36	5	0
water	60:35	0:0	6	0
water	60:37	0:0	4	;
water	61:4	0:0	4	}

func	2:0	34:0	0	static void	Win32DebugOutputMsg
params	2:32	0:0	1	
param	2:33	2:40	2	void *	d
param	2:42	2:50	2	int	type
param	2:52	2:75	2	const vlc_log_t *	p_item
param	3:33	3:51	2	const char *	format
param	3:53	3:64	2	va_list	dol
stmnts	5:4	33:13	1	
call	5:4	5:21	2	VLC_UNUSED
arg	5:15	5:21	3	p_item
water	5:15	0:0	4	p_item
water	5:22	0:0	2	;
decl	6:4	6:35	2	const signed char	*pverbose
op	6:32	0:0	2	=
water	6:34	0:0	2	d
if	7:4	8:14	2	(pverbose && ( * pverbose < 0 || * pverbose < ( type - VLC_MSG_ERR ) ))
cond	7:8	7:70	3	pverbose && ( * pverbose < 0 || * pverbose < ( type - VLC_MSG_ERR ) )
water	7:8	0:0	4	pverbose
op	7:17	0:0	4	&&
water	7:20	0:0	4	(
op	7:21	0:0	4	*
water	7:22	0:0	4	pverbose
op	7:31	0:0	4	<
water	7:33	0:0	4	0
op	7:35	0:0	4	||
op	7:38	0:0	4	*
water	7:39	0:0	4	pverbose
op	7:48	0:0	4	<
water	7:50	0:0	4	(
water	7:51	0:0	4	type
op	7:56	0:0	4	-
water	7:58	0:0	4	VLC_MSG_ERR
water	7:69	0:0	4	)
water	7:70	0:0	4	)
stmts	8:8	8:14	3	
return	8:8	8:14	4	
decl	9:4	9:16	2	va_list	dol2
call	10:4	10:22	2	va_copy
arg	10:13	10:17	3	dol2
water	10:13	0:0	4	dol2
arg	10:19	10:22	3	dol
water	10:19	0:0	4	dol
water	10:23	0:0	2	;
decl	11:4	11:50	2	int	msg_len
op	11:16	0:0	2	=
call	11:18	11:49	3	vsnprintf
arg	11:28	11:32	4	NULL
water	11:28	0:0	5	NULL
arg	11:34	11:35	4	0
water	11:34	0:0	5	0
arg	11:37	11:43	4	format
water	11:37	0:0	5	format
arg	11:45	11:49	4	dol2
water	11:45	0:0	5	dol2
call	12:4	12:16	2	va_end
arg	12:12	12:16	3	dol2
water	12:12	0:0	4	dol2
water	12:17	0:0	2	;
if	13:4	14:14	2	(msg_len <= 0)
cond	13:7	13:18	3	msg_len <= 0
water	13:7	0:0	4	msg_len
op	13:15	0:0	4	<=
water	13:18	0:0	4	0
stmts	14:8	14:14	3	
return	14:8	14:14	4	
decl	15:4	15:39	2	char	*msg
op	15:14	0:0	2	=
call	15:16	15:38	3	malloc
arg	15:23	15:38	4	msg_len+1+1
water	15:23	0:0	5	msg_len
op	15:31	0:0	5	+
water	15:33	0:0	5	1
op	15:35	0:0	5	+
water	15:37	0:0	5	1
if	16:4	17:14	2	(! msg)
cond	16:8	16:9	3	! msg
op	16:8	0:0	4	!
water	16:9	0:0	4	msg
stmts	17:8	17:14	3	
return	17:8	17:14	4	
water	18:4	0:0	2	msg_len
op	18:12	0:0	2	=
call	18:14	18:51	2	vsnprintf
arg	18:24	18:27	3	msg
water	18:24	0:0	4	msg
arg	18:29	18:38	3	msg_len+1
water	18:29	0:0	4	msg_len
op	18:36	0:0	4	+
water	18:37	0:0	4	1
arg	18:40	18:46	3	format
water	18:40	0:0	4	format
arg	18:48	18:51	3	dol
water	18:48	0:0	4	dol
water	18:52	0:0	2	;
if	19:4	32:4	2	(msg_len > 0)
cond	19:8	19:18	3	msg_len > 0
water	19:8	0:0	4	msg_len
op	19:16	0:0	4	>
water	19:18	0:0	4	0
stmts	19:20	32:4	3	
water	19:20	0:0	4	{
if	20:8	23:8	4	(msg [ msg_len - 1 ] != '\n')
cond	20:11	20:29	5	msg [ msg_len - 1 ] != '\n'
water	20:11	0:0	6	msg
op	20:14	0:0	6	[
water	20:15	0:0	6	msg_len
op	20:22	0:0	6	-
water	20:23	0:0	6	1
op	20:24	0:0	6	]
op	20:26	0:0	6	!=
water	20:29	0:0	6	'\n'
stmts	20:34	23:8	5	
water	20:34	0:0	6	{
water	21:12	0:0	6	msg
op	21:15	0:0	6	[
water	21:16	0:0	6	msg_len
op	21:23	0:0	6	]
op	21:25	0:0	6	=
water	21:27	0:0	6	'\n'
water	21:31	0:0	6	;
water	22:12	0:0	6	msg
op	22:15	0:0	6	[
water	22:16	0:0	6	msg_len
op	22:24	0:0	6	+
water	22:26	0:0	6	1
op	22:27	0:0	6	]
op	22:29	0:0	6	=
water	22:31	0:0	6	'\0'
water	22:35	0:0	6	;
water	23:8	0:0	6	}
decl	24:8	24:28	4	char	*psz_msg
op	24:22	0:0	4	=
water	24:24	0:0	4	NULL
if	25:8	31:8	4	(asprintf (& psz_msg ,"%s %s%s: %s" ,p_item -> psz_module ,p_item -> psz_object_type ,msg_type [ type ] ,msg ) > 0)
cond	25:11	26:68	5	asprintf (& psz_msg ,"%s %s%s: %s" ,p_item -> psz_module ,p_item -> psz_object_type ,msg_type [ type ] ,msg ) > 0
call	25:11	26:64	6	asprintf
arg	25:20	25:28	7	&psz_msg
op	25:20	0:0	8	&
water	25:21	0:0	8	psz_msg
arg	25:30	25:43	7	"%s %s%s: %s"
water	25:30	0:0	8	"%s %s%s: %s"
arg	25:45	25:63	7	p_item->psz_module
water	25:45	0:0	8	p_item
op	25:51	0:0	8	->
water	25:53	0:0	8	psz_module
arg	26:20	26:43	7	p_item->psz_object_type
water	26:20	0:0	8	p_item
op	26:26	0:0	8	->
water	26:28	0:0	8	psz_object_type
arg	26:45	26:59	7	msg_type[type]
water	26:45	0:0	8	msg_type
op	26:53	0:0	8	[
water	26:54	0:0	8	type
op	26:58	0:0	8	]
arg	26:61	26:64	7	msg
water	26:61	0:0	8	msg
op	26:66	0:0	6	>
water	26:68	0:0	6	0
stmts	26:71	31:8	5	
water	26:71	0:0	6	{
decl	27:12	27:43	6	wchar_t	*wmsg
op	27:26	0:0	6	=
call	27:28	27:42	7	ToWide
arg	27:35	27:42	8	psz_msg
water	27:35	0:0	9	psz_msg
call	28:12	28:35	6	OutputDebugStringW
arg	28:31	28:35	7	wmsg
water	28:31	0:0	8	wmsg
water	28:36	0:0	6	;
call	29:12	29:21	6	free
arg	29:17	29:21	7	wmsg
water	29:17	0:0	8	wmsg
water	29:22	0:0	6	;
call	30:12	30:24	6	free
arg	30:17	30:24	7	psz_msg
water	30:17	0:0	8	psz_msg
water	30:25	0:0	6	;
water	31:8	0:0	6	}
water	32:4	0:0	4	}
call	33:4	33:12	2	free
arg	33:9	33:12	3	msg
water	33:9	0:0	4	msg
water	33:13	0:0	2	;

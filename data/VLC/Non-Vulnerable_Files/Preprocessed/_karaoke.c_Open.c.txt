decl	1:7	1:47	0	block_t	*Process
water	1:24	0:0	0	(
water	1:25	0:0	0	filter_t
op	1:34	0:0	0	*
water	1:35	0:0	0	,
water	1:37	0:0	0	block_t
op	1:45	0:0	0	*
water	1:46	0:0	0	)
func	2:0	14:0	0	static int	Open
params	2:16	0:0	1	
param	2:17	2:34	2	vlc_object_t *	obj
stmnts	0:0	13:22	1	
decl	4:4	4:38	2	filter_t	*filter
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	filter_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	obj
if	5:4	9:4	2	(filter -> fmt_in . audio . i_channels != 2)
cond	5:8	5:43	3	filter -> fmt_in . audio . i_channels != 2
water	5:8	0:0	4	filter
op	5:14	0:0	4	->
water	5:16	0:0	4	fmt_in
op	5:22	0:0	4	.
water	5:23	0:0	4	audio
op	5:28	0:0	4	.
water	5:29	0:0	4	i_channels
op	5:40	0:0	4	!=
water	5:43	0:0	4	2
stmts	6:4	9:4	3	
water	6:4	0:0	4	{
call	7:8	7:56	4	msg_Err
arg	7:17	7:23	5	filter
water	7:17	0:0	6	filter
arg	7:25	7:56	5	"voice removal requires stereo"
water	7:25	0:0	6	"voice removal requires stereo"
water	7:57	0:0	4	;
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
water	9:4	0:0	4	}
water	10:4	0:0	2	filter
op	10:10	0:0	2	->
water	10:12	0:0	2	fmt_in
op	10:18	0:0	2	.
water	10:19	0:0	2	audio
op	10:24	0:0	2	.
water	10:25	0:0	2	i_format
op	10:34	0:0	2	=
water	10:36	0:0	2	VLC_CODEC_FL32
water	10:50	0:0	2	;
water	11:4	0:0	2	filter
op	11:10	0:0	2	->
water	11:12	0:0	2	fmt_out
op	11:19	0:0	2	.
water	11:20	0:0	2	audio
op	11:26	0:0	2	=
water	11:28	0:0	2	filter
op	11:34	0:0	2	->
water	11:36	0:0	2	fmt_in
op	11:42	0:0	2	.
water	11:43	0:0	2	audio
water	11:48	0:0	2	;
water	12:4	0:0	2	filter
op	12:10	0:0	2	->
water	12:12	0:0	2	pf_audio_filter
op	12:28	0:0	2	=
water	12:30	0:0	2	Process
water	12:37	0:0	2	;
return	13:4	13:22	2	VLC_SUCCESS
water	13:11	0:0	3	VLC_SUCCESS

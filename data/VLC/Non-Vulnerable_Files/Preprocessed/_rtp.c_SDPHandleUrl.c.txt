func	2:0	72:0	0	static void	SDPHandleUrl
params	2:24	0:0	1	
param	2:26	2:49	2	sout_stream_t *	p_stream
param	2:51	2:71	2	const char *	psz_url
stmnts	0:0	71:24	1	
decl	4:4	4:46	2	sout_stream_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	p_stream
op	4:39	0:0	2	->
water	4:41	0:0	2	p_sys
decl	5:4	5:17	2	vlc_url_t	url
call	6:4	6:35	2	vlc_UrlParse
arg	6:18	6:22	3	&url
op	6:18	0:0	4	&
water	6:19	0:0	4	url
arg	6:24	6:31	3	psz_url
water	6:24	0:0	4	psz_url
arg	6:33	6:35	3	0
water	6:33	0:0	4	0
water	6:36	0:0	2	;
if	7:4	18:4	2	(url . psz_protocol && !strcasecmp (url . psz_protocol ,"http" ))
cond	7:8	7:66	3	url . psz_protocol && !strcasecmp (url . psz_protocol ,"http" )
water	7:8	0:0	4	url
op	7:11	0:0	4	.
water	7:12	0:0	4	psz_protocol
op	7:25	0:0	4	&&
op	7:28	0:0	4	!
call	7:29	7:66	4	strcasecmp
arg	7:41	7:57	5	url.psz_protocol
water	7:41	0:0	6	url
op	7:44	0:0	6	.
water	7:45	0:0	6	psz_protocol
arg	7:59	7:66	5	"http"
water	7:59	0:0	6	"http"
stmts	8:4	18:4	3	
water	8:4	0:0	4	{
if	9:8	13:8	4	(p_sys -> p_httpd_file)
cond	9:12	9:19	5	p_sys -> p_httpd_file
water	9:12	0:0	6	p_sys
op	9:17	0:0	6	->
water	9:19	0:0	6	p_httpd_file
stmts	10:8	13:8	5	
water	10:8	0:0	6	{
call	11:12	11:67	6	msg_Err
arg	11:21	11:29	7	p_stream
water	11:21	0:0	8	p_stream
arg	11:31	11:67	7	"you can use sdp=http:// only once"
water	11:31	0:0	8	"you can use sdp=http:// only once"
water	11:68	0:0	6	;
goto	12:12	12:20	6	out
water	12:17	0:0	7	out
water	13:8	0:0	6	}
if	14:8	17:8	4	(HttpSetup (p_stream ,& url ))
cond	14:12	14:38	5	HttpSetup (p_stream ,& url )
call	14:12	14:38	6	HttpSetup
arg	14:23	14:31	7	p_stream
water	14:23	0:0	8	p_stream
arg	14:33	14:38	7	&url
op	14:33	0:0	8	&
water	14:34	0:0	8	url
stmts	15:8	17:8	5	
water	15:8	0:0	6	{
call	16:12	16:59	6	msg_Err
arg	16:21	16:29	7	p_stream
water	16:21	0:0	8	p_stream
arg	16:31	16:59	7	"cannot export SDP as HTTP"
water	16:31	0:0	8	"cannot export SDP as HTTP"
water	16:60	0:0	6	;
water	17:8	0:0	6	}
water	18:4	0:0	4	}
else	19:4	46:4	2
stmts	19:9	46:4	3	
if	19:9	46:4	4	(url . psz_protocol && !strcasecmp (url . psz_protocol ,"rtsp" ))
cond	19:13	19:71	5	url . psz_protocol && !strcasecmp (url . psz_protocol ,"rtsp" )
water	19:13	0:0	6	url
op	19:16	0:0	6	.
water	19:17	0:0	6	psz_protocol
op	19:30	0:0	6	&&
op	19:33	0:0	6	!
call	19:34	19:71	6	strcasecmp
arg	19:46	19:62	7	url.psz_protocol
water	19:46	0:0	8	url
op	19:49	0:0	8	.
water	19:50	0:0	8	psz_protocol
arg	19:64	19:71	7	"rtsp"
water	19:64	0:0	8	"rtsp"
stmts	20:4	46:4	5	
water	20:4	0:0	6	{
if	21:8	25:8	6	(p_sys -> rtsp != NULL)
cond	21:12	21:27	7	p_sys -> rtsp != NULL
water	21:12	0:0	8	p_sys
op	21:17	0:0	8	->
water	21:19	0:0	8	rtsp
op	21:24	0:0	8	!=
water	21:27	0:0	8	NULL
stmts	22:8	25:8	7	
water	22:8	0:0	8	{
call	23:12	23:67	8	msg_Err
arg	23:21	23:29	9	p_stream
water	23:21	0:0	10	p_stream
arg	23:31	23:67	9	"you can use sdp=rtsp:// only once"
water	23:31	0:0	10	"you can use sdp=rtsp:// only once"
water	23:68	0:0	8	;
goto	24:12	24:20	8	out
water	24:17	0:0	9	out
water	25:8	0:0	8	}
if	26:8	35:8	6	(url . psz_host != NULL && * url . psz_host)
cond	26:12	26:41	7	url . psz_host != NULL && * url . psz_host
water	26:12	0:0	8	url
op	26:15	0:0	8	.
water	26:16	0:0	8	psz_host
op	26:25	0:0	8	!=
water	26:28	0:0	8	NULL
op	26:33	0:0	8	&&
op	26:36	0:0	8	*
water	26:37	0:0	8	url
op	26:40	0:0	8	.
water	26:41	0:0	8	psz_host
stmts	27:8	35:8	7	
water	27:8	0:0	8	{
call	28:12	30:35	8	msg_Warn
arg	28:22	28:30	9	p_stream
water	28:22	0:0	10	p_stream
arg	28:32	29:76	9	"\"%s\" RTSP host might be ignored in ""multiple-host configurations, use at your own risks."
water	28:32	0:0	10	"\"%s\" RTSP host might be ignored in "
water	29:22	0:0	10	"multiple-host configurations, use at your own risks."
arg	30:22	30:35	9	url.psz_host
water	30:22	0:0	10	url
op	30:25	0:0	10	.
water	30:26	0:0	10	psz_host
water	30:36	0:0	8	;
call	31:12	32:56	8	msg_Info
arg	31:22	31:30	9	p_stream
water	31:22	0:0	10	p_stream
arg	31:32	32:56	9	"Consider passing --rtsp-host=IP on the ""command line instead."
water	31:32	0:0	10	"Consider passing --rtsp-host=IP on the "
water	32:32	0:0	10	"command line instead."
water	32:57	0:0	8	;
call	33:12	33:62	8	var_Create
arg	33:24	33:32	9	p_stream
water	33:24	0:0	10	p_stream
arg	33:34	33:45	9	"rtsp-host"
water	33:34	0:0	10	"rtsp-host"
arg	33:47	33:62	9	VLC_VAR_STRING
water	33:47	0:0	10	VLC_VAR_STRING
water	33:63	0:0	8	;
call	34:12	34:63	8	var_SetString
arg	34:27	34:35	9	p_stream
water	34:27	0:0	10	p_stream
arg	34:37	34:48	9	"rtsp-host"
water	34:37	0:0	10	"rtsp-host"
arg	34:50	34:63	9	url.psz_host
water	34:50	0:0	10	url
op	34:53	0:0	10	.
water	34:54	0:0	10	psz_host
water	34:64	0:0	8	;
water	35:8	0:0	8	}
if	36:8	42:8	6	(url . i_port != 0)
cond	36:12	36:26	7	url . i_port != 0
water	36:12	0:0	8	url
op	36:15	0:0	8	.
water	36:16	0:0	8	i_port
op	36:23	0:0	8	!=
water	36:26	0:0	8	0
stmts	37:8	42:8	7	
water	37:8	0:0	8	{
call	40:12	40:63	8	var_Create
arg	40:24	40:32	9	p_stream
water	40:24	0:0	10	p_stream
arg	40:34	40:45	9	"rtsp-port"
water	40:34	0:0	10	"rtsp-port"
arg	40:47	40:63	9	VLC_VAR_INTEGER
water	40:47	0:0	10	VLC_VAR_INTEGER
water	40:64	0:0	8	;
call	41:12	41:62	8	var_SetInteger
arg	41:28	41:36	9	p_stream
water	41:28	0:0	10	p_stream
arg	41:38	41:49	9	"rtsp-port"
water	41:38	0:0	10	"rtsp-port"
arg	41:51	41:62	9	url.i_port
water	41:51	0:0	10	url
op	41:54	0:0	10	.
water	41:55	0:0	10	i_port
water	41:63	0:0	8	;
water	42:8	0:0	8	}
water	43:8	0:0	6	p_sys
op	43:13	0:0	6	->
water	43:15	0:0	6	rtsp
op	43:20	0:0	6	=
call	43:22	43:74	6	RtspSetup
arg	43:33	43:53	7	VLC_OBJECT(p_stream)
call	43:33	43:52	8	VLC_OBJECT
arg	43:44	43:52	9	p_stream
water	43:44	0:0	10	p_stream
arg	43:55	43:59	7	NULL
water	43:55	0:0	8	NULL
arg	43:61	43:74	7	url.psz_path
water	43:61	0:0	8	url
op	43:64	0:0	8	.
water	43:65	0:0	8	psz_path
water	43:75	0:0	6	;
if	44:8	45:60	6	(p_sys -> rtsp == NULL)
cond	44:12	44:27	7	p_sys -> rtsp == NULL
water	44:12	0:0	8	p_sys
op	44:17	0:0	8	->
water	44:19	0:0	8	rtsp
op	44:24	0:0	8	==
water	44:27	0:0	8	NULL
stmts	45:12	45:60	7	
call	45:12	45:59	8	msg_Err
arg	45:21	45:29	9	p_stream
water	45:21	0:0	10	p_stream
arg	45:31	45:59	9	"cannot export SDP as RTSP"
water	45:31	0:0	10	"cannot export SDP as RTSP"
water	45:60	0:0	8	;
water	46:4	0:0	6	}
else	47:4	52:4	2
stmts	47:9	52:4	3	
if	47:9	52:4	4	(( url . psz_protocol && !strcasecmp (url . psz_protocol ,"sap" ) ) || ( url . psz_host && !strcasecmp (url . psz_host ,"sap" ) ))
cond	47:13	48:66	5	( url . psz_protocol && !strcasecmp (url . psz_protocol ,"sap" ) ) || ( url . psz_host && !strcasecmp (url . psz_host ,"sap" ) )
water	47:13	0:0	6	(
water	47:15	0:0	6	url
op	47:18	0:0	6	.
water	47:19	0:0	6	psz_protocol
op	47:32	0:0	6	&&
op	47:35	0:0	6	!
call	47:36	47:72	6	strcasecmp
arg	47:48	47:64	7	url.psz_protocol
water	47:48	0:0	8	url
op	47:51	0:0	8	.
water	47:52	0:0	8	psz_protocol
arg	47:66	47:72	7	"sap"
water	47:66	0:0	8	"sap"
water	47:74	0:0	6	)
op	47:76	0:0	6	||
water	48:13	0:0	6	(
water	48:15	0:0	6	url
op	48:18	0:0	6	.
water	48:19	0:0	6	psz_host
op	48:28	0:0	6	&&
op	48:31	0:0	6	!
call	48:32	48:64	6	strcasecmp
arg	48:44	48:56	7	url.psz_host
water	48:44	0:0	8	url
op	48:47	0:0	8	.
water	48:48	0:0	8	psz_host
arg	48:58	48:64	7	"sap"
water	48:58	0:0	8	"sap"
water	48:66	0:0	6	)
stmts	49:4	52:4	5	
water	49:4	0:0	6	{
water	50:8	0:0	6	p_sys
op	50:13	0:0	6	->
water	50:15	0:0	6	b_export_sap
op	50:28	0:0	6	=
water	50:30	0:0	6	true
water	50:34	0:0	6	;
call	51:8	51:27	6	SapSetup
arg	51:18	51:27	7	p_stream
water	51:18	0:0	8	p_stream
water	51:28	0:0	6	;
water	52:4	0:0	6	}
else	53:4	64:4	2
stmts	53:9	64:4	3	
if	53:9	64:4	4	(url . psz_protocol && !strcasecmp (url . psz_protocol ,"file" ))
cond	53:13	53:71	5	url . psz_protocol && !strcasecmp (url . psz_protocol ,"file" )
water	53:13	0:0	6	url
op	53:16	0:0	6	.
water	53:17	0:0	6	psz_protocol
op	53:30	0:0	6	&&
op	53:33	0:0	6	!
call	53:34	53:71	6	strcasecmp
arg	53:46	53:62	7	url.psz_protocol
water	53:46	0:0	8	url
op	53:49	0:0	8	.
water	53:50	0:0	8	psz_protocol
arg	53:64	53:71	7	"file"
water	53:64	0:0	8	"file"
stmts	54:4	64:4	5	
water	54:4	0:0	6	{
if	55:8	59:8	6	(p_sys -> psz_sdp_file != NULL)
cond	55:12	55:35	7	p_sys -> psz_sdp_file != NULL
water	55:12	0:0	8	p_sys
op	55:17	0:0	8	->
water	55:19	0:0	8	psz_sdp_file
op	55:32	0:0	8	!=
water	55:35	0:0	8	NULL
stmts	56:8	59:8	7	
water	56:8	0:0	8	{
call	57:12	57:67	8	msg_Err
arg	57:21	57:29	9	p_stream
water	57:21	0:0	10	p_stream
arg	57:31	57:67	9	"you can use sdp=file:// only once"
water	57:31	0:0	10	"you can use sdp=file:// only once"
water	57:68	0:0	8	;
goto	58:12	58:20	8	out
water	58:17	0:0	9	out
water	59:8	0:0	8	}
water	60:8	0:0	6	p_sys
op	60:13	0:0	6	->
water	60:15	0:0	6	psz_sdp_file
op	60:28	0:0	6	=
call	60:30	60:49	6	make_path
arg	60:41	60:49	7	psz_url
water	60:41	0:0	8	psz_url
water	60:50	0:0	6	;
if	61:8	62:20	6	(p_sys -> psz_sdp_file == NULL)
cond	61:12	61:35	7	p_sys -> psz_sdp_file == NULL
water	61:12	0:0	8	p_sys
op	61:17	0:0	8	->
water	61:19	0:0	8	psz_sdp_file
op	61:32	0:0	8	==
water	61:35	0:0	8	NULL
stmts	62:12	62:20	7	
goto	62:12	62:20	8	out
water	62:17	0:0	9	out
call	63:8	63:28	6	FileSetup
arg	63:19	63:28	7	p_stream
water	63:19	0:0	8	p_stream
water	63:29	0:0	6	;
water	64:4	0:0	6	}
else	65:4	69:4	2
stmts	66:4	69:4	3	
water	66:4	0:0	4	{
call	67:8	68:35	4	msg_Warn
arg	67:18	67:26	5	p_stream
water	67:18	0:0	6	p_stream
arg	67:28	67:59	5	"unknown protocol for SDP (%s)"
water	67:28	0:0	6	"unknown protocol for SDP (%s)"
arg	68:18	68:35	5	url.psz_protocol
water	68:18	0:0	6	url
op	68:21	0:0	6	.
water	68:22	0:0	6	psz_protocol
water	68:36	0:0	4	;
water	69:4	0:0	4	}
label	70:0	70:3	2	out :
call	71:4	71:23	2	vlc_UrlClean
arg	71:18	71:23	3	&url
op	71:18	0:0	4	&
water	71:19	0:0	4	url
water	71:24	0:0	2	;

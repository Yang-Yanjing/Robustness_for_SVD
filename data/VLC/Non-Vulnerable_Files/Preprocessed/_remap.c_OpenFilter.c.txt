func	2:0	75:0	0	static int	OpenFilter
params	2:21	0:0	1	
param	2:23	2:44	2	vlc_object_t *	p_this
stmnts	0:0	74:22	1	
decl	4:4	4:43	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:23	2	filter_sys_t	*p_sys
decl	6:4	6:55	2	audio_format_t	*audio_in
op	6:30	0:0	2	=
op	6:32	0:0	2	&
water	6:33	0:0	2	p_filter
op	6:41	0:0	2	->
water	6:43	0:0	2	fmt_in
op	6:49	0:0	2	.
water	6:50	0:0	2	audio
decl	7:4	7:56	2	audio_format_t	*audio_out
op	7:30	0:0	2	=
op	7:32	0:0	2	&
water	7:33	0:0	2	p_filter
op	7:41	0:0	2	->
water	7:43	0:0	2	fmt_out
op	7:50	0:0	2	.
water	7:51	0:0	2	audio
if	8:4	10:27	2	(( audio_in -> i_format != audio_out -> i_format ) || ( audio_in -> i_rate != audio_out -> i_rate ))
cond	8:8	9:48	3	( audio_in -> i_format != audio_out -> i_format ) || ( audio_in -> i_rate != audio_out -> i_rate )
water	8:8	0:0	4	(
water	8:10	0:0	4	audio_in
op	8:18	0:0	4	->
water	8:20	0:0	4	i_format
op	8:29	0:0	4	!=
water	8:32	0:0	4	audio_out
op	8:41	0:0	4	->
water	8:43	0:0	4	i_format
water	8:52	0:0	4	)
op	8:54	0:0	4	||
water	9:8	0:0	4	(
water	9:10	0:0	4	audio_in
op	9:18	0:0	4	->
water	9:20	0:0	4	i_rate
op	9:27	0:0	4	!=
water	9:30	0:0	4	audio_out
op	9:39	0:0	4	->
water	9:41	0:0	4	i_rate
water	9:48	0:0	4	)
stmts	10:8	10:27	3	
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
water	12:4	0:0	2	p_sys
op	12:10	0:0	2	=
water	12:12	0:0	2	p_filter
op	12:20	0:0	2	->
water	12:22	0:0	2	p_sys
op	12:28	0:0	2	=
call	12:30	12:59	2	malloc
arg	12:38	12:59	3	sizeof(filter_sys_t)
op	12:38	0:0	4	sizeof
water	12:44	0:0	4	(
water	12:45	0:0	4	filter_sys_t
water	12:57	0:0	4	)
water	12:60	0:0	2	;
if	13:4	14:25	2	(unlikely (p_sys == NULL ))
cond	13:8	13:32	3	unlikely (p_sys == NULL )
call	13:8	13:32	4	unlikely
arg	13:18	13:32	5	p_sys==NULL
water	13:18	0:0	6	p_sys
op	13:24	0:0	6	==
water	13:27	0:0	6	NULL
stmts	14:8	14:25	3	
return	14:8	14:25	4	VLC_ENOMEM
water	14:15	0:0	5	VLC_ENOMEM
decl	16:4	16:34	2	uint32_t	i_output_physical
op	16:31	0:0	2	=
water	16:33	0:0	2	0
decl	17:4	17:46	2	uint8_t	pi_map_ch[AOUT_CHAN_MAX]
op	17:39	0:0	2	=
water	17:41	0:0	2	{
water	17:43	0:0	2	0
water	17:45	0:0	2	}
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	b_normalize
op	18:23	0:0	2	=
call	18:25	18:72	2	var_InheritBool
arg	18:42	18:48	3	p_this
water	18:42	0:0	4	p_this
arg	18:50	18:72	3	REMAP_CFG"normalize"
water	18:50	0:0	4	REMAP_CFG
water	18:60	0:0	4	"normalize"
water	18:73	0:0	2	;
for	19:4	34:4	2	( uint8_t in_ch = 0 ,wg4_i = 0 ;in_ch < audio_in -> i_channels;in_ch ++ , wg4_i ++)
forinit	0:0	19:37	3	 uint8_t in_ch = 0 ,wg4_i = 0 ;
decl	19:9	19:37	4	uint8_t	in_ch
op	19:23	0:0	4	=
water	19:25	0:0	4	0
water	19:26	0:0	4	,
decl	19:9	19:37	4	uint8_t	wg4_i
op	19:34	0:0	4	=
water	19:36	0:0	4	0
cond	19:39	19:57	3	in_ch < audio_in -> i_channels
water	19:39	0:0	4	in_ch
op	19:45	0:0	4	<
water	19:47	0:0	4	audio_in
op	19:55	0:0	4	->
water	19:57	0:0	4	i_channels
forexpr	19:69	19:83	3	in_ch ++ , wg4_i ++
water	19:69	0:0	4	in_ch
op	19:74	0:0	4	++
water	19:76	0:0	4	,
water	19:78	0:0	4	wg4_i
op	19:83	0:0	4	++
stmts	20:4	34:4	3	
water	20:4	0:0	4	{
while	22:8	26:8	4	(( audio_in -> i_physical_channels & pi_vlc_chan_order_wg4 [ wg4_i ] ) == 0)
cond	22:15	22:85	5	( audio_in -> i_physical_channels & pi_vlc_chan_order_wg4 [ wg4_i ] ) == 0
water	22:15	0:0	6	(
water	22:17	0:0	6	audio_in
op	22:25	0:0	6	->
water	22:27	0:0	6	i_physical_channels
op	22:47	0:0	6	&
water	22:49	0:0	6	pi_vlc_chan_order_wg4
op	22:70	0:0	6	[
water	22:72	0:0	6	wg4_i
op	22:78	0:0	6	]
water	22:80	0:0	6	)
op	22:82	0:0	6	==
water	22:85	0:0	6	0
stmts	23:8	26:8	5	
water	23:8	0:0	6	{
water	24:12	0:0	6	wg4_i
op	24:17	0:0	6	++
water	24:19	0:0	6	;
call	25:12	25:95	6	assert
arg	25:20	25:95	7	wg4_i<sizeof(pi_vlc_chan_order_wg4)/sizeof(pi_vlc_chan_order_wg4[0])
water	25:20	0:0	8	wg4_i
op	25:26	0:0	8	<
op	25:28	0:0	8	sizeof
water	25:34	0:0	8	(
water	25:36	0:0	8	pi_vlc_chan_order_wg4
water	25:58	0:0	8	)
op	25:59	0:0	8	/
op	25:60	0:0	8	sizeof
water	25:66	0:0	8	(
water	25:68	0:0	8	pi_vlc_chan_order_wg4
op	25:89	0:0	8	[
water	25:90	0:0	8	0
op	25:91	0:0	8	]
water	25:93	0:0	8	)
water	25:96	0:0	6	;
water	26:8	0:0	6	}
water	27:8	0:0	4	unsigned
water	27:17	0:0	4	channel_wg4idx_len
op	27:36	0:0	4	=
op	27:38	0:0	4	sizeof
water	27:44	0:0	4	(
water	27:46	0:0	4	channel_wg4idx
water	27:61	0:0	4	)
op	27:62	0:0	4	/
op	27:63	0:0	4	sizeof
water	27:69	0:0	4	(
water	27:71	0:0	4	channel_wg4idx
op	27:85	0:0	4	[
water	27:86	0:0	4	0
op	27:87	0:0	4	]
water	27:89	0:0	4	)
water	27:90	0:0	4	;
decl	28:8	28:80	4	uint8_t	*pi_chnidx
op	28:27	0:0	4	=
call	28:29	28:79	5	memchr
arg	28:37	28:51	6	channel_wg4idx
water	28:37	0:0	7	channel_wg4idx
arg	28:53	28:58	6	wg4_i
water	28:53	0:0	7	wg4_i
arg	28:60	28:79	6	channel_wg4idx_len
water	28:60	0:0	7	channel_wg4idx_len
call	29:8	29:34	4	assert
arg	29:16	29:34	5	pi_chnidx!=NULL
water	29:16	0:0	6	pi_chnidx
op	29:26	0:0	6	!=
water	29:29	0:0	6	NULL
water	29:35	0:0	4	;
decl	30:8	30:51	4	uint8_t	chnidx
op	30:23	0:0	4	=
water	30:25	0:0	4	pi_chnidx
op	30:35	0:0	4	-
water	30:37	0:0	4	channel_wg4idx
decl	31:8	31:76	4	uint8_t	out_idx
op	31:24	0:0	4	=
call	31:26	31:75	5	var_InheritInteger
arg	31:46	31:52	6	p_this
water	31:46	0:0	7	p_this
arg	31:54	31:75	6	channel_name[chnidx]
water	31:54	0:0	7	channel_name
op	31:66	0:0	7	[
water	31:67	0:0	7	chnidx
op	31:73	0:0	7	]
water	32:8	0:0	4	pi_map_ch
op	32:17	0:0	4	[
water	32:18	0:0	4	in_ch
op	32:23	0:0	4	]
op	32:25	0:0	4	=
water	32:27	0:0	4	channel_wg4idx
op	32:41	0:0	4	[
water	32:43	0:0	4	out_idx
op	32:51	0:0	4	]
water	32:52	0:0	4	;
water	33:8	0:0	4	i_output_physical
op	33:26	0:0	4	|=
water	33:29	0:0	4	channel_flag
op	33:41	0:0	4	[
water	33:43	0:0	4	out_idx
op	33:51	0:0	4	]
water	33:52	0:0	4	;
water	34:4	0:0	4	}
water	35:4	0:0	2	i_output_physical
op	35:22	0:0	2	=
call	35:24	35:64	2	CanonicaliseChannels
arg	35:46	35:64	3	i_output_physical
water	35:46	0:0	4	i_output_physical
water	35:65	0:0	2	;
water	36:4	0:0	2	audio_out
op	36:13	0:0	2	->
water	36:15	0:0	2	i_physical_channels
op	36:35	0:0	2	=
water	36:37	0:0	2	i_output_physical
water	36:54	0:0	2	;
call	37:4	37:34	2	aout_FormatPrepare
arg	37:24	37:34	3	audio_out
water	37:24	0:0	4	audio_out
water	37:35	0:0	2	;
decl	39:4	39:42	2	uint8_t	out_ch_sorted[AOUT_CHAN_MAX]
for	40:4	48:4	2	( uint8_t i = 0 ,wg4_i = 0 ;i < audio_out -> i_channels;i ++ , wg4_i ++)
forinit	0:0	40:33	3	 uint8_t i = 0 ,wg4_i = 0 ;
decl	40:9	40:33	4	uint8_t	i
op	40:19	0:0	4	=
water	40:21	0:0	4	0
water	40:22	0:0	4	,
decl	40:9	40:33	4	uint8_t	wg4_i
op	40:30	0:0	4	=
water	40:32	0:0	4	0
cond	40:35	40:50	3	i < audio_out -> i_channels
water	40:35	0:0	4	i
op	40:37	0:0	4	<
water	40:39	0:0	4	audio_out
op	40:48	0:0	4	->
water	40:50	0:0	4	i_channels
forexpr	40:62	40:72	3	i ++ , wg4_i ++
water	40:62	0:0	4	i
op	40:63	0:0	4	++
water	40:65	0:0	4	,
water	40:67	0:0	4	wg4_i
op	40:72	0:0	4	++
stmts	41:4	48:4	3	
water	41:4	0:0	4	{
while	42:8	46:8	4	(( audio_out -> i_physical_channels & pi_vlc_chan_order_wg4 [ wg4_i ] ) == 0)
cond	42:15	42:86	5	( audio_out -> i_physical_channels & pi_vlc_chan_order_wg4 [ wg4_i ] ) == 0
water	42:15	0:0	6	(
water	42:17	0:0	6	audio_out
op	42:26	0:0	6	->
water	42:28	0:0	6	i_physical_channels
op	42:48	0:0	6	&
water	42:50	0:0	6	pi_vlc_chan_order_wg4
op	42:71	0:0	6	[
water	42:73	0:0	6	wg4_i
op	42:79	0:0	6	]
water	42:81	0:0	6	)
op	42:83	0:0	6	==
water	42:86	0:0	6	0
stmts	43:8	46:8	5	
water	43:8	0:0	6	{
water	44:12	0:0	6	wg4_i
op	44:17	0:0	6	++
water	44:19	0:0	6	;
call	45:12	45:95	6	assert
arg	45:20	45:95	7	wg4_i<sizeof(pi_vlc_chan_order_wg4)/sizeof(pi_vlc_chan_order_wg4[0])
water	45:20	0:0	8	wg4_i
op	45:26	0:0	8	<
op	45:28	0:0	8	sizeof
water	45:34	0:0	8	(
water	45:36	0:0	8	pi_vlc_chan_order_wg4
water	45:58	0:0	8	)
op	45:59	0:0	8	/
op	45:60	0:0	8	sizeof
water	45:66	0:0	8	(
water	45:68	0:0	8	pi_vlc_chan_order_wg4
op	45:89	0:0	8	[
water	45:90	0:0	8	0
op	45:91	0:0	8	]
water	45:93	0:0	8	)
water	45:96	0:0	6	;
water	46:8	0:0	6	}
water	47:8	0:0	4	out_ch_sorted
op	47:21	0:0	4	[
water	47:23	0:0	4	i
op	47:25	0:0	4	]
op	47:27	0:0	4	=
water	47:29	0:0	4	wg4_i
water	47:34	0:0	4	;
water	48:4	0:0	4	}
decl	49:4	49:27	2	bool	b_multiple
op	49:20	0:0	2	=
water	49:22	0:0	2	false
call	50:4	50:58	2	memset
arg	50:12	50:27	3	p_sys->nb_in_ch
water	50:12	0:0	4	p_sys
op	50:17	0:0	4	->
water	50:19	0:0	4	nb_in_ch
arg	50:29	50:30	3	0
water	50:29	0:0	4	0
arg	50:32	50:58	3	sizeof(p_sys->nb_in_ch)
op	50:32	0:0	4	sizeof
water	50:38	0:0	4	(
water	50:40	0:0	4	p_sys
op	50:45	0:0	4	->
water	50:47	0:0	4	nb_in_ch
water	50:56	0:0	4	)
water	50:59	0:0	2	;
for	51:4	59:4	2	( uint8_t i = 0 ;i < audio_in -> i_channels;i ++)
forinit	0:0	51:22	3	 uint8_t i = 0 ;
decl	51:9	51:22	4	uint8_t	i
op	51:19	0:0	4	=
water	51:21	0:0	4	0
cond	51:24	51:38	3	i < audio_in -> i_channels
water	51:24	0:0	4	i
op	51:26	0:0	4	<
water	51:28	0:0	4	audio_in
op	51:36	0:0	4	->
water	51:38	0:0	4	i_channels
forexpr	51:50	51:51	3	i ++
water	51:50	0:0	4	i
op	51:51	0:0	4	++
stmts	52:4	59:4	3	
water	52:4	0:0	4	{
decl	53:8	53:41	4	uint8_t	wg4_out_ch
op	53:27	0:0	4	=
water	53:29	0:0	4	pi_map_ch
op	53:38	0:0	4	[
water	53:39	0:0	4	i
op	53:40	0:0	4	]
decl	54:8	54:87	4	uint8_t	*pi_out_ch
op	54:27	0:0	4	=
call	54:29	54:86	5	memchr
arg	54:37	54:50	6	out_ch_sorted
water	54:37	0:0	7	out_ch_sorted
arg	54:52	54:62	6	wg4_out_ch
water	54:52	0:0	7	wg4_out_ch
arg	54:64	54:86	6	audio_out->i_channels
water	54:64	0:0	7	audio_out
op	54:73	0:0	7	->
water	54:75	0:0	7	i_channels
call	55:8	55:34	4	assert
arg	55:16	55:34	5	pi_out_ch!=NULL
water	55:16	0:0	6	pi_out_ch
op	55:26	0:0	6	!=
water	55:29	0:0	6	NULL
water	55:35	0:0	4	;
water	56:8	0:0	4	p_sys
op	56:13	0:0	4	->
water	56:15	0:0	4	map_ch
op	56:21	0:0	4	[
water	56:22	0:0	4	i
op	56:23	0:0	4	]
op	56:25	0:0	4	=
water	56:27	0:0	4	pi_out_ch
op	56:37	0:0	4	-
water	56:39	0:0	4	out_ch_sorted
water	56:52	0:0	4	;
if	57:8	58:29	4	(++ p_sys -> nb_in_ch [ p_sys -> map_ch [ i ] ] > 1)
cond	57:12	57:52	5	++ p_sys -> nb_in_ch [ p_sys -> map_ch [ i ] ] > 1
op	57:12	0:0	6	++
water	57:14	0:0	6	p_sys
op	57:19	0:0	6	->
water	57:21	0:0	6	nb_in_ch
op	57:29	0:0	6	[
water	57:31	0:0	6	p_sys
op	57:36	0:0	6	->
water	57:38	0:0	6	map_ch
op	57:44	0:0	6	[
water	57:45	0:0	6	i
op	57:46	0:0	6	]
op	57:48	0:0	6	]
op	57:50	0:0	6	>
water	57:52	0:0	6	1
stmts	58:12	58:29	5	
water	58:12	0:0	6	b_multiple
op	58:23	0:0	6	=
water	58:25	0:0	6	true
water	58:29	0:0	6	;
water	59:4	0:0	4	}
call	60:4	65:51	2	msg_Dbg
arg	60:13	60:21	3	p_filter
water	60:13	0:0	4	p_filter
arg	60:23	60:64	3	"%s '%4.4s'->'%4.4s' %d Hz->%d Hz %s->%s"
water	60:23	0:0	4	"%s '%4.4s'->'%4.4s' %d Hz->%d Hz %s->%s"
arg	61:13	61:27	3	"Remap filter"
water	61:13	0:0	4	"Remap filter"
arg	62:13	62:40	3	(char*)&audio_in->i_format
water	62:13	0:0	4	(
water	62:14	0:0	4	char
op	62:19	0:0	4	*
water	62:20	0:0	4	)
op	62:21	0:0	4	&
water	62:22	0:0	4	audio_in
op	62:30	0:0	4	->
water	62:32	0:0	4	i_format
arg	62:42	62:70	3	(char*)&audio_out->i_format
water	62:42	0:0	4	(
water	62:43	0:0	4	char
op	62:48	0:0	4	*
water	62:49	0:0	4	)
op	62:50	0:0	4	&
water	62:51	0:0	4	audio_out
op	62:60	0:0	4	->
water	62:62	0:0	4	i_format
arg	63:13	63:29	3	audio_in->i_rate
water	63:13	0:0	4	audio_in
op	63:21	0:0	4	->
water	63:23	0:0	4	i_rate
arg	63:31	63:48	3	audio_out->i_rate
water	63:31	0:0	4	audio_out
op	63:40	0:0	4	->
water	63:42	0:0	4	i_rate
arg	64:13	64:49	3	aout_FormatPrintChannels(audio_in)
call	64:13	64:48	4	aout_FormatPrintChannels
arg	64:39	64:48	5	audio_in
water	64:39	0:0	6	audio_in
arg	65:13	65:51	3	aout_FormatPrintChannels(audio_out)
call	65:13	65:49	4	aout_FormatPrintChannels
arg	65:39	65:49	5	audio_out
water	65:39	0:0	6	audio_out
water	65:52	0:0	2	;
water	66:4	0:0	2	p_sys
op	66:9	0:0	2	->
water	66:11	0:0	2	pf_remap
op	66:20	0:0	2	=
call	66:22	66:56	2	GetRemapFun
arg	66:35	66:43	3	audio_in
water	66:35	0:0	4	audio_in
arg	66:45	66:56	3	b_multiple
water	66:45	0:0	4	b_multiple
water	66:57	0:0	2	;
if	67:4	72:4	2	(! p_sys -> pf_remap)
cond	67:8	67:16	3	! p_sys -> pf_remap
op	67:8	0:0	4	!
water	67:9	0:0	4	p_sys
op	67:14	0:0	4	->
water	67:16	0:0	4	pf_remap
stmts	68:4	72:4	3	
water	68:4	0:0	4	{
call	69:8	69:101	4	msg_Err
arg	69:17	69:25	5	p_filter
water	69:17	0:0	6	p_filter
arg	69:27	69:66	5	"Could not decide on %s remap function"
water	69:27	0:0	6	"Could not decide on %s remap function"
arg	69:68	69:101	5	b_multiple?"an add":"a copy"
water	69:68	0:0	6	b_multiple
water	69:79	0:0	6	?
water	69:81	0:0	6	"an add"
water	69:90	0:0	6	:
water	69:92	0:0	6	"a copy"
water	69:102	0:0	4	;
call	70:8	70:20	4	free
arg	70:14	70:20	5	p_sys
water	70:14	0:0	6	p_sys
water	70:21	0:0	4	;
return	71:8	71:27	4	VLC_EGENERIC
water	71:15	0:0	5	VLC_EGENERIC
water	72:4	0:0	4	}
water	73:4	0:0	2	p_filter
op	73:12	0:0	2	->
water	73:14	0:0	2	pf_audio_filter
op	73:30	0:0	2	=
water	73:32	0:0	2	Remap
water	73:37	0:0	2	;
return	74:4	74:22	2	VLC_SUCCESS
water	74:11	0:0	3	VLC_SUCCESS

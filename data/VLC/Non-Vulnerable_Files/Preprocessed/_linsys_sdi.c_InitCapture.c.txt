func	2:0	59:0	0	static int	InitCapture
params	2:22	0:0	1	
param	2:24	2:41	2	demux_t *	p_demux
stmnts	0:0	58:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:41	2	const int	i_page_size
op	5:26	0:0	2	=
call	5:28	5:40	3	getpagesize
decl	6:4	6:29	2	unsigned int	i_bufmemsize
decl	7:4	7:13	2	int	i_ret
decl	8:4	8:24	2	char	psz_dev[MAXLEN]
if	10:4	14:4	2	(WriteULSysfs (SDI_MODE_FILE ,p_sys -> i_link ,SDI_CTL_MODE_10BIT ) < 0)
cond	10:9	10:76	3	WriteULSysfs (SDI_MODE_FILE ,p_sys -> i_link ,SDI_CTL_MODE_10BIT ) < 0
call	10:9	10:72	4	WriteULSysfs
arg	10:23	10:36	5	SDI_MODE_FILE
water	10:23	0:0	6	SDI_MODE_FILE
arg	10:38	10:51	5	p_sys->i_link
water	10:38	0:0	6	p_sys
op	10:43	0:0	6	->
water	10:45	0:0	6	i_link
arg	10:53	10:72	5	SDI_CTL_MODE_10BIT
water	10:53	0:0	6	SDI_CTL_MODE_10BIT
op	10:74	0:0	4	<
water	10:76	0:0	4	0
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
call	12:8	12:78	4	msg_Err
arg	12:17	12:24	5	p_demux
water	12:17	0:0	6	p_demux
arg	12:26	12:62	5	"couldn't write file "SDI_MODE_FILE
water	12:26	0:0	6	"couldn't write file "
water	12:49	0:0	6	SDI_MODE_FILE
arg	12:64	12:78	5	p_sys->i_link
water	12:64	0:0	6	p_sys
op	12:69	0:0	6	->
water	12:71	0:0	6	i_link
water	12:79	0:0	4	;
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	14:4	0:0	4	}
if	15:4	20:4	2	(( i_ret =ReadULSysfs (SDI_BUFFERS_FILE ,p_sys -> i_link ) ) < 0)
cond	15:9	15:68	3	( i_ret =ReadULSysfs (SDI_BUFFERS_FILE ,p_sys -> i_link ) ) < 0
water	15:9	0:0	4	(
water	15:10	0:0	4	i_ret
op	15:16	0:0	4	=
call	15:18	15:63	4	ReadULSysfs
arg	15:31	15:47	5	SDI_BUFFERS_FILE
water	15:31	0:0	6	SDI_BUFFERS_FILE
arg	15:49	15:63	5	p_sys->i_link
water	15:49	0:0	6	p_sys
op	15:54	0:0	6	->
water	15:56	0:0	6	i_link
water	15:64	0:0	4	)
op	15:66	0:0	4	<
water	15:68	0:0	4	0
stmts	16:4	20:4	3	
water	16:4	0:0	4	{
call	17:8	18:31	4	msg_Err
arg	17:17	17:24	5	p_demux
water	17:17	0:0	6	p_demux
arg	17:26	17:64	5	"couldn't read file "SDI_BUFFERS_FILE
water	17:26	0:0	6	"couldn't read file "
water	17:48	0:0	6	SDI_BUFFERS_FILE
arg	18:17	18:31	5	p_sys->i_link
water	18:17	0:0	6	p_sys
op	18:22	0:0	6	->
water	18:24	0:0	6	i_link
water	18:32	0:0	4	;
return	19:8	19:27	4	VLC_EGENERIC
water	19:15	0:0	5	VLC_EGENERIC
water	20:4	0:0	4	}
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	i_buffers
op	21:21	0:0	2	=
water	21:23	0:0	2	i_ret
water	21:28	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	i_current_buffer
op	22:28	0:0	2	=
water	22:30	0:0	2	0
water	22:31	0:0	2	;
if	23:4	28:4	2	(( i_ret =ReadULSysfs (SDI_BUFSIZE_FILE ,p_sys -> i_link ) ) < 0)
cond	23:9	23:68	3	( i_ret =ReadULSysfs (SDI_BUFSIZE_FILE ,p_sys -> i_link ) ) < 0
water	23:9	0:0	4	(
water	23:10	0:0	4	i_ret
op	23:16	0:0	4	=
call	23:18	23:63	4	ReadULSysfs
arg	23:31	23:47	5	SDI_BUFSIZE_FILE
water	23:31	0:0	6	SDI_BUFSIZE_FILE
arg	23:49	23:63	5	p_sys->i_link
water	23:49	0:0	6	p_sys
op	23:54	0:0	6	->
water	23:56	0:0	6	i_link
water	23:64	0:0	4	)
op	23:66	0:0	4	<
water	23:68	0:0	4	0
stmts	24:4	28:4	3	
water	24:4	0:0	4	{
call	25:8	26:31	4	msg_Err
arg	25:17	25:24	5	p_demux
water	25:17	0:0	6	p_demux
arg	25:26	25:64	5	"couldn't read file "SDI_BUFSIZE_FILE
water	25:26	0:0	6	"couldn't read file "
water	25:48	0:0	6	SDI_BUFSIZE_FILE
arg	26:17	26:31	5	p_sys->i_link
water	26:17	0:0	6	p_sys
op	26:22	0:0	6	->
water	26:24	0:0	6	i_link
water	26:32	0:0	4	;
return	27:8	27:27	4	VLC_EGENERIC
water	27:15	0:0	5	VLC_EGENERIC
water	28:4	0:0	4	}
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	i_buffer_size
op	29:25	0:0	2	=
water	29:27	0:0	2	i_ret
water	29:32	0:0	2	;
if	30:4	34:4	2	(p_sys -> i_buffer_size % 20)
cond	30:9	30:32	3	p_sys -> i_buffer_size % 20
water	30:9	0:0	4	p_sys
op	30:14	0:0	4	->
water	30:16	0:0	4	i_buffer_size
op	30:30	0:0	4	%
water	30:32	0:0	4	20
stmts	31:4	34:4	3	
water	31:4	0:0	4	{
call	32:8	32:65	4	msg_Err
arg	32:17	32:24	5	p_demux
water	32:17	0:0	6	p_demux
arg	32:26	32:65	5	"buffer size must be a multiple of 20"
water	32:26	0:0	6	"buffer size must be a multiple of 20"
water	32:66	0:0	4	;
return	33:8	33:27	4	VLC_EGENERIC
water	33:15	0:0	5	VLC_EGENERIC
water	34:4	0:0	4	}
call	35:4	35:70	2	snprintf
arg	35:14	35:21	3	psz_dev
water	35:14	0:0	4	psz_dev
arg	35:23	35:42	3	sizeof(psz_dev)-1
op	35:23	0:0	4	sizeof
water	35:29	0:0	4	(
water	35:30	0:0	4	psz_dev
water	35:37	0:0	4	)
op	35:39	0:0	4	-
water	35:41	0:0	4	1
arg	35:44	35:54	3	SDI_DEVICE
water	35:44	0:0	4	SDI_DEVICE
arg	35:56	35:70	3	p_sys->i_link
water	35:56	0:0	4	p_sys
op	35:61	0:0	4	->
water	35:63	0:0	4	i_link
water	35:71	0:0	2	;
if	36:4	40:4	2	(( p_sys -> i_fd =vlc_open (psz_dev ,O_RDONLY ) ) < 0)
cond	36:9	36:58	3	( p_sys -> i_fd =vlc_open (psz_dev ,O_RDONLY ) ) < 0
water	36:9	0:0	4	(
water	36:10	0:0	4	p_sys
op	36:15	0:0	4	->
water	36:17	0:0	4	i_fd
op	36:22	0:0	4	=
call	36:24	36:52	4	vlc_open
arg	36:34	36:41	5	psz_dev
water	36:34	0:0	6	psz_dev
arg	36:43	36:52	5	O_RDONLY
water	36:43	0:0	6	O_RDONLY
water	36:54	0:0	4	)
op	36:56	0:0	4	<
water	36:58	0:0	4	0
stmts	37:4	40:4	3	
water	37:4	0:0	4	{
call	38:8	38:61	4	msg_Err
arg	38:17	38:24	5	p_demux
water	38:17	0:0	6	p_demux
arg	38:26	38:51	5	"couldn't open device %s"
water	38:26	0:0	6	"couldn't open device %s"
arg	38:53	38:61	5	psz_dev
water	38:53	0:0	6	psz_dev
water	38:62	0:0	4	;
return	39:8	39:27	4	VLC_EGENERIC
water	39:15	0:0	5	VLC_EGENERIC
water	40:4	0:0	4	}
water	41:4	0:0	2	i_bufmemsize
op	41:17	0:0	2	=
water	41:19	0:0	2	(
water	41:20	0:0	2	(
water	41:21	0:0	2	p_sys
op	41:26	0:0	2	->
water	41:28	0:0	2	i_buffer_size
op	41:42	0:0	2	+
water	41:44	0:0	2	i_page_size
op	41:56	0:0	2	-
water	41:58	0:0	2	1
water	41:59	0:0	2	)
op	41:61	0:0	2	/
water	41:63	0:0	2	i_page_size
water	41:74	0:0	2	)
op	42:21	0:0	2	*
water	42:23	0:0	2	i_page_size
water	42:34	0:0	2	;
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	pp_buffers
op	43:22	0:0	2	=
call	43:24	43:69	2	malloc
arg	43:32	43:69	3	p_sys->i_buffers*sizeof(uint8_t*)
water	43:32	0:0	4	p_sys
op	43:37	0:0	4	->
water	43:39	0:0	4	i_buffers
op	43:49	0:0	4	*
op	43:51	0:0	4	sizeof
water	43:57	0:0	4	(
water	43:58	0:0	4	uint8_t
op	43:66	0:0	4	*
water	43:67	0:0	4	)
water	43:70	0:0	2	;
if	44:4	45:25	2	(! p_sys -> pp_buffers)
cond	44:8	44:16	3	! p_sys -> pp_buffers
op	44:8	0:0	4	!
water	44:9	0:0	4	p_sys
op	44:14	0:0	4	->
water	44:16	0:0	4	pp_buffers
stmts	45:8	45:25	3	
return	45:8	45:25	4	VLC_ENOMEM
water	45:15	0:0	5	VLC_ENOMEM
for	46:4	57:4	2	( unsigned int i = 0 ;i < p_sys -> i_buffers;i ++)
forinit	0:0	46:28	3	 unsigned int i = 0 ;
decl	46:10	46:28	4	unsigned int	i
op	46:25	0:0	4	=
water	46:27	0:0	4	0
cond	46:30	46:41	3	i < p_sys -> i_buffers
water	46:30	0:0	4	i
op	46:32	0:0	4	<
water	46:34	0:0	4	p_sys
op	46:39	0:0	4	->
water	46:41	0:0	4	i_buffers
forexpr	46:52	46:53	3	i ++
water	46:52	0:0	4	i
op	46:53	0:0	4	++
stmts	47:4	57:4	3	
water	47:4	0:0	4	{
if	48:8	56:8	4	(( p_sys -> pp_buffers [ i ] =mmap (NULL ,p_sys -> i_buffer_size ,PROT_READ ,MAP_SHARED ,p_sys -> i_fd ,i * i_bufmemsize ) ) == MAP_FAILED)
cond	48:13	50:66	5	( p_sys -> pp_buffers [ i ] =mmap (NULL ,p_sys -> i_buffer_size ,PROT_READ ,MAP_SHARED ,p_sys -> i_fd ,i * i_bufmemsize ) ) == MAP_FAILED
water	48:13	0:0	6	(
water	48:14	0:0	6	p_sys
op	48:19	0:0	6	->
water	48:21	0:0	6	pp_buffers
op	48:31	0:0	6	[
water	48:32	0:0	6	i
op	48:33	0:0	6	]
op	48:35	0:0	6	=
call	48:37	50:60	6	mmap
arg	48:43	48:47	7	NULL
water	48:43	0:0	8	NULL
arg	48:49	48:69	7	p_sys->i_buffer_size
water	48:49	0:0	8	p_sys
op	48:54	0:0	8	->
water	48:56	0:0	8	i_buffer_size
arg	49:43	49:52	7	PROT_READ
water	49:43	0:0	8	PROT_READ
arg	49:54	49:64	7	MAP_SHARED
water	49:54	0:0	8	MAP_SHARED
arg	49:66	49:77	7	p_sys->i_fd
water	49:66	0:0	8	p_sys
op	49:71	0:0	8	->
water	49:73	0:0	8	i_fd
arg	50:43	50:60	7	i*i_bufmemsize
water	50:43	0:0	8	i
op	50:45	0:0	8	*
water	50:47	0:0	8	i_bufmemsize
water	50:61	0:0	6	)
op	50:63	0:0	6	==
water	50:66	0:0	6	MAP_FAILED
stmts	51:8	56:8	5	
water	51:8	0:0	6	{
call	52:12	53:43	6	msg_Err
arg	52:21	52:28	7	p_demux
water	52:21	0:0	8	p_demux
arg	52:30	52:53	7	"couldn't mmap(%d): %s"
water	52:30	0:0	8	"couldn't mmap(%d): %s"
arg	52:55	52:56	7	i
water	52:55	0:0	8	i
arg	53:21	53:43	7	vlc_strerror_c(errno)
call	53:21	53:41	8	vlc_strerror_c
arg	53:36	53:41	9	errno
water	53:36	0:0	10	errno
water	53:44	0:0	6	;
call	54:12	54:36	6	free
arg	54:18	54:36	7	p_sys->pp_buffers
water	54:18	0:0	8	p_sys
op	54:23	0:0	8	->
water	54:25	0:0	8	pp_buffers
water	54:37	0:0	6	;
return	55:12	55:31	6	VLC_EGENERIC
water	55:19	0:0	7	VLC_EGENERIC
water	56:8	0:0	6	}
water	57:4	0:0	4	}
return	58:4	58:22	2	VLC_SUCCESS
water	58:11	0:0	3	VLC_SUCCESS

func	2:0	85:0	0	static void	asmrp_get_sym
params	2:26	0:0	1	
param	2:27	2:37	2	asmrp_t *	p
stmnts	3:2	83:21	1	
while	3:2	9:2	2	(p -> ch <= 32)
cond	3:9	3:18	3	p -> ch <= 32
water	3:9	0:0	4	p
op	3:10	0:0	4	->
water	3:12	0:0	4	ch
op	3:15	0:0	4	<=
water	3:18	0:0	4	32
stmts	3:22	9:2	3	
water	3:22	0:0	4	{
if	4:4	7:4	4	(p -> ch == 0)
cond	4:8	4:17	5	p -> ch == 0
water	4:8	0:0	6	p
op	4:9	0:0	6	->
water	4:11	0:0	6	ch
op	4:14	0:0	6	==
water	4:17	0:0	6	0
stmts	4:20	7:4	5	
water	4:20	0:0	6	{
water	5:6	0:0	6	p
op	5:7	0:0	6	->
water	5:9	0:0	6	sym
op	5:13	0:0	6	=
water	5:15	0:0	6	ASMRP_SYM_EOF
water	5:28	0:0	6	;
return	6:6	6:12	6	
water	7:4	0:0	6	}
call	8:4	8:18	4	asmrp_getch
arg	8:17	8:18	5	p
water	8:17	0:0	6	p
water	8:19	0:0	4	;
water	9:2	0:0	4	}
if	10:2	11:19	2	(p -> ch == '\\')
cond	10:6	10:15	3	p -> ch == '\\'
water	10:6	0:0	4	p
op	10:7	0:0	4	->
water	10:9	0:0	4	ch
op	10:12	0:0	4	==
water	10:15	0:0	4	'\\'
stmts	11:4	11:19	3	
call	11:4	11:18	4	asmrp_getch
arg	11:17	11:18	5	p
water	11:17	0:0	6	p
water	11:19	0:0	4	;
switch	12:2	81:2	2	(p -> ch)
cond	12:10	12:13	3	p -> ch
water	12:10	0:0	4	p
op	12:11	0:0	4	->
water	12:13	0:0	4	ch
stmts	12:17	81:2	3	
water	12:17	0:0	4	{
water	13:2	0:0	4	case
water	13:7	0:0	4	'#'
water	13:10	0:0	4	:
water	14:4	0:0	4	p
op	14:5	0:0	4	->
water	14:7	0:0	4	sym
op	14:11	0:0	4	=
water	14:13	0:0	4	ASMRP_SYM_HASH
water	14:27	0:0	4	;
call	15:4	15:18	4	asmrp_getch
arg	15:17	15:18	5	p
water	15:17	0:0	6	p
water	15:19	0:0	4	;
break	16:4	16:9	4	
water	17:2	0:0	4	case
water	17:7	0:0	4	';'
water	17:10	0:0	4	:
water	18:4	0:0	4	p
op	18:5	0:0	4	->
water	18:7	0:0	4	sym
op	18:11	0:0	4	=
water	18:13	0:0	4	ASMRP_SYM_SEMICOLON
water	18:32	0:0	4	;
call	19:4	19:18	4	asmrp_getch
arg	19:17	19:18	5	p
water	19:17	0:0	6	p
water	19:19	0:0	4	;
break	20:4	20:9	4	
water	21:2	0:0	4	case
water	21:7	0:0	4	','
water	21:10	0:0	4	:
water	22:4	0:0	4	p
op	22:5	0:0	4	->
water	22:7	0:0	4	sym
op	22:11	0:0	4	=
water	22:13	0:0	4	ASMRP_SYM_COMMA
water	22:28	0:0	4	;
call	23:4	23:18	4	asmrp_getch
arg	23:17	23:18	5	p
water	23:17	0:0	6	p
water	23:19	0:0	4	;
break	24:4	24:9	4	
water	25:2	0:0	4	case
water	25:7	0:0	4	'='
water	25:10	0:0	4	:
water	26:4	0:0	4	p
op	26:5	0:0	4	->
water	26:7	0:0	4	sym
op	26:11	0:0	4	=
water	26:13	0:0	4	ASMRP_SYM_EQUALS
water	26:29	0:0	4	;
call	27:4	27:18	4	asmrp_getch
arg	27:17	27:18	5	p
water	27:17	0:0	6	p
water	27:19	0:0	4	;
if	28:4	29:21	4	(p -> ch == '=')
cond	28:8	28:15	5	p -> ch == '='
water	28:8	0:0	6	p
op	28:9	0:0	6	->
water	28:11	0:0	6	ch
op	28:13	0:0	6	==
water	28:15	0:0	6	'='
stmts	29:6	29:21	5	
call	29:6	29:20	6	asmrp_getch
arg	29:19	29:20	7	p
water	29:19	0:0	8	p
water	29:21	0:0	6	;
break	30:4	30:9	4	
water	31:2	0:0	4	case
water	31:7	0:0	4	'&'
water	31:10	0:0	4	:
water	32:4	0:0	4	p
op	32:5	0:0	4	->
water	32:7	0:0	4	sym
op	32:11	0:0	4	=
water	32:13	0:0	4	ASMRP_SYM_AND
water	32:26	0:0	4	;
call	33:4	33:18	4	asmrp_getch
arg	33:17	33:18	5	p
water	33:17	0:0	6	p
water	33:19	0:0	4	;
if	34:4	35:21	4	(p -> ch == '&')
cond	34:8	34:15	5	p -> ch == '&'
water	34:8	0:0	6	p
op	34:9	0:0	6	->
water	34:11	0:0	6	ch
op	34:13	0:0	6	==
water	34:15	0:0	6	'&'
stmts	35:6	35:21	5	
call	35:6	35:20	6	asmrp_getch
arg	35:19	35:20	7	p
water	35:19	0:0	8	p
water	35:21	0:0	6	;
break	36:4	36:9	4	
water	37:2	0:0	4	case
water	37:7	0:0	4	'|'
water	37:10	0:0	4	:
water	38:4	0:0	4	p
op	38:5	0:0	4	->
water	38:7	0:0	4	sym
op	38:11	0:0	4	=
water	38:13	0:0	4	ASMRP_SYM_OR
water	38:25	0:0	4	;
call	39:4	39:18	4	asmrp_getch
arg	39:17	39:18	5	p
water	39:17	0:0	6	p
water	39:19	0:0	4	;
if	40:4	41:21	4	(p -> ch == '|')
cond	40:8	40:15	5	p -> ch == '|'
water	40:8	0:0	6	p
op	40:9	0:0	6	->
water	40:11	0:0	6	ch
op	40:13	0:0	6	==
water	40:15	0:0	6	'|'
stmts	41:6	41:21	5	
call	41:6	41:20	6	asmrp_getch
arg	41:19	41:20	7	p
water	41:19	0:0	8	p
water	41:21	0:0	6	;
break	42:4	42:9	4	
water	43:2	0:0	4	case
water	43:7	0:0	4	'<'
water	43:10	0:0	4	:
water	44:4	0:0	4	p
op	44:5	0:0	4	->
water	44:7	0:0	4	sym
op	44:11	0:0	4	=
water	44:13	0:0	4	ASMRP_SYM_LESS
water	44:27	0:0	4	;
call	45:4	45:18	4	asmrp_getch
arg	45:17	45:18	5	p
water	45:17	0:0	6	p
water	45:19	0:0	4	;
if	46:4	49:4	4	(p -> ch == '=')
cond	46:8	46:15	5	p -> ch == '='
water	46:8	0:0	6	p
op	46:9	0:0	6	->
water	46:11	0:0	6	ch
op	46:13	0:0	6	==
water	46:15	0:0	6	'='
stmts	46:20	49:4	5	
water	46:20	0:0	6	{
water	47:6	0:0	6	p
op	47:7	0:0	6	->
water	47:9	0:0	6	sym
op	47:13	0:0	6	=
water	47:15	0:0	6	ASMRP_SYM_LEQ
water	47:28	0:0	6	;
call	48:6	48:20	6	asmrp_getch
arg	48:19	48:20	7	p
water	48:19	0:0	8	p
water	48:21	0:0	6	;
water	49:4	0:0	6	}
break	50:4	50:9	4	
water	51:2	0:0	4	case
water	51:7	0:0	4	'>'
water	51:10	0:0	4	:
water	52:4	0:0	4	p
op	52:5	0:0	4	->
water	52:7	0:0	4	sym
op	52:11	0:0	4	=
water	52:13	0:0	4	ASMRP_SYM_GREATER
water	52:30	0:0	4	;
call	53:4	53:18	4	asmrp_getch
arg	53:17	53:18	5	p
water	53:17	0:0	6	p
water	53:19	0:0	4	;
if	54:4	57:4	4	(p -> ch == '=')
cond	54:8	54:15	5	p -> ch == '='
water	54:8	0:0	6	p
op	54:9	0:0	6	->
water	54:11	0:0	6	ch
op	54:13	0:0	6	==
water	54:15	0:0	6	'='
stmts	54:20	57:4	5	
water	54:20	0:0	6	{
water	55:6	0:0	6	p
op	55:7	0:0	6	->
water	55:9	0:0	6	sym
op	55:13	0:0	6	=
water	55:15	0:0	6	ASMRP_SYM_GEQ
water	55:28	0:0	6	;
call	56:6	56:20	6	asmrp_getch
arg	56:19	56:20	7	p
water	56:19	0:0	8	p
water	56:21	0:0	6	;
water	57:4	0:0	6	}
break	58:4	58:9	4	
water	59:2	0:0	4	case
water	59:7	0:0	4	'$'
water	59:10	0:0	4	:
water	60:4	0:0	4	p
op	60:5	0:0	4	->
water	60:7	0:0	4	sym
op	60:11	0:0	4	=
water	60:13	0:0	4	ASMRP_SYM_DOLLAR
water	60:29	0:0	4	;
call	61:4	61:18	4	asmrp_getch
arg	61:17	61:18	5	p
water	61:17	0:0	6	p
water	61:19	0:0	4	;
break	62:4	62:9	4	
water	63:2	0:0	4	case
water	63:7	0:0	4	'('
water	63:10	0:0	4	:
water	64:4	0:0	4	p
op	64:5	0:0	4	->
water	64:7	0:0	4	sym
op	64:11	0:0	4	=
water	64:13	0:0	4	ASMRP_SYM_LPAREN
water	64:29	0:0	4	;
call	65:4	65:18	4	asmrp_getch
arg	65:17	65:18	5	p
water	65:17	0:0	6	p
water	65:19	0:0	4	;
break	66:4	66:9	4	
water	67:2	0:0	4	case
water	67:7	0:0	4	')'
water	67:10	0:0	4	:
water	68:4	0:0	4	p
op	68:5	0:0	4	->
water	68:7	0:0	4	sym
op	68:11	0:0	4	=
water	68:13	0:0	4	ASMRP_SYM_RPAREN
water	68:29	0:0	4	;
call	69:4	69:18	4	asmrp_getch
arg	69:17	69:18	5	p
water	69:17	0:0	6	p
water	69:19	0:0	4	;
break	70:4	70:9	4	
water	71:2	0:0	4	case
water	71:7	0:0	4	'"'
water	71:10	0:0	4	:
call	72:4	72:18	4	asmrp_getch
arg	72:17	72:18	5	p
water	72:17	0:0	6	p
water	72:19	0:0	4	;
call	73:4	73:19	4	asmrp_string
arg	73:18	73:19	5	p
water	73:18	0:0	6	p
water	73:20	0:0	4	;
break	74:4	74:9	4	
water	75:2	0:0	4	case
water	75:7	0:0	4	'0'
water	75:10	0:0	4	:
water	75:12	0:0	4	case
water	75:17	0:0	4	'1'
water	75:20	0:0	4	:
water	75:22	0:0	4	case
water	75:27	0:0	4	'2'
water	75:30	0:0	4	:
water	75:32	0:0	4	case
water	75:37	0:0	4	'3'
water	75:40	0:0	4	:
water	75:42	0:0	4	case
water	75:47	0:0	4	'4'
water	75:50	0:0	4	:
water	76:2	0:0	4	case
water	76:7	0:0	4	'5'
water	76:10	0:0	4	:
water	76:12	0:0	4	case
water	76:17	0:0	4	'6'
water	76:20	0:0	4	:
water	76:22	0:0	4	case
water	76:27	0:0	4	'7'
water	76:30	0:0	4	:
water	76:32	0:0	4	case
water	76:37	0:0	4	'8'
water	76:40	0:0	4	:
water	76:42	0:0	4	case
water	76:47	0:0	4	'9'
water	76:50	0:0	4	:
call	77:4	77:19	4	asmrp_number
arg	77:18	77:19	5	p
water	77:18	0:0	6	p
water	77:20	0:0	4	;
break	78:4	78:9	4	
label	79:2	79:9	4	default :
call	80:4	80:23	4	asmrp_identifier
arg	80:22	80:23	5	p
water	80:22	0:0	6	p
water	80:24	0:0	4	;
water	81:2	0:0	4	}
call	83:2	83:20	2	asmrp_print_sym
arg	83:19	83:20	3	p
water	83:19	0:0	4	p
water	83:21	0:0	2	;
func	87:0	170:0	0	static void	asmrp_get_sym
params	87:26	0:0	1	
param	87:27	87:37	2	asmrp_t *	p
stmnts	88:2	168:21	1	
while	88:2	94:2	2	(p -> ch <= 32)
cond	88:9	88:18	3	p -> ch <= 32
water	88:9	0:0	4	p
op	88:10	0:0	4	->
water	88:12	0:0	4	ch
op	88:15	0:0	4	<=
water	88:18	0:0	4	32
stmts	88:22	94:2	3	
water	88:22	0:0	4	{
if	89:4	92:4	4	(p -> ch == 0)
cond	89:8	89:17	5	p -> ch == 0
water	89:8	0:0	6	p
op	89:9	0:0	6	->
water	89:11	0:0	6	ch
op	89:14	0:0	6	==
water	89:17	0:0	6	0
stmts	89:20	92:4	5	
water	89:20	0:0	6	{
water	90:6	0:0	6	p
op	90:7	0:0	6	->
water	90:9	0:0	6	sym
op	90:13	0:0	6	=
water	90:15	0:0	6	ASMRP_SYM_EOF
water	90:28	0:0	6	;
return	91:6	91:12	6	
water	92:4	0:0	6	}
call	93:4	93:18	4	asmrp_getch
arg	93:17	93:18	5	p
water	93:17	0:0	6	p
water	93:19	0:0	4	;
water	94:2	0:0	4	}
if	95:2	96:19	2	(p -> ch == '\\')
cond	95:6	95:15	3	p -> ch == '\\'
water	95:6	0:0	4	p
op	95:7	0:0	4	->
water	95:9	0:0	4	ch
op	95:12	0:0	4	==
water	95:15	0:0	4	'\\'
stmts	96:4	96:19	3	
call	96:4	96:18	4	asmrp_getch
arg	96:17	96:18	5	p
water	96:17	0:0	6	p
water	96:19	0:0	4	;
switch	97:2	166:2	2	(p -> ch)
cond	97:10	97:13	3	p -> ch
water	97:10	0:0	4	p
op	97:11	0:0	4	->
water	97:13	0:0	4	ch
stmts	97:17	166:2	3	
water	97:17	0:0	4	{
water	98:2	0:0	4	case
water	98:7	0:0	4	'#'
water	98:10	0:0	4	:
water	99:4	0:0	4	p
op	99:5	0:0	4	->
water	99:7	0:0	4	sym
op	99:11	0:0	4	=
water	99:13	0:0	4	ASMRP_SYM_HASH
water	99:27	0:0	4	;
call	100:4	100:18	4	asmrp_getch
arg	100:17	100:18	5	p
water	100:17	0:0	6	p
water	100:19	0:0	4	;
break	101:4	101:9	4	
water	102:2	0:0	4	case
water	102:7	0:0	4	';'
water	102:10	0:0	4	:
water	103:4	0:0	4	p
op	103:5	0:0	4	->
water	103:7	0:0	4	sym
op	103:11	0:0	4	=
water	103:13	0:0	4	ASMRP_SYM_SEMICOLON
water	103:32	0:0	4	;
call	104:4	104:18	4	asmrp_getch
arg	104:17	104:18	5	p
water	104:17	0:0	6	p
water	104:19	0:0	4	;
break	105:4	105:9	4	
water	106:2	0:0	4	case
water	106:7	0:0	4	','
water	106:10	0:0	4	:
water	107:4	0:0	4	p
op	107:5	0:0	4	->
water	107:7	0:0	4	sym
op	107:11	0:0	4	=
water	107:13	0:0	4	ASMRP_SYM_COMMA
water	107:28	0:0	4	;
call	108:4	108:18	4	asmrp_getch
arg	108:17	108:18	5	p
water	108:17	0:0	6	p
water	108:19	0:0	4	;
break	109:4	109:9	4	
water	110:2	0:0	4	case
water	110:7	0:0	4	'='
water	110:10	0:0	4	:
water	111:4	0:0	4	p
op	111:5	0:0	4	->
water	111:7	0:0	4	sym
op	111:11	0:0	4	=
water	111:13	0:0	4	ASMRP_SYM_EQUALS
water	111:29	0:0	4	;
call	112:4	112:18	4	asmrp_getch
arg	112:17	112:18	5	p
water	112:17	0:0	6	p
water	112:19	0:0	4	;
if	113:4	114:21	4	(p -> ch == '=')
cond	113:8	113:15	5	p -> ch == '='
water	113:8	0:0	6	p
op	113:9	0:0	6	->
water	113:11	0:0	6	ch
op	113:13	0:0	6	==
water	113:15	0:0	6	'='
stmts	114:6	114:21	5	
call	114:6	114:20	6	asmrp_getch
arg	114:19	114:20	7	p
water	114:19	0:0	8	p
water	114:21	0:0	6	;
break	115:4	115:9	4	
water	116:2	0:0	4	case
water	116:7	0:0	4	'&'
water	116:10	0:0	4	:
water	117:4	0:0	4	p
op	117:5	0:0	4	->
water	117:7	0:0	4	sym
op	117:11	0:0	4	=
water	117:13	0:0	4	ASMRP_SYM_AND
water	117:26	0:0	4	;
call	118:4	118:18	4	asmrp_getch
arg	118:17	118:18	5	p
water	118:17	0:0	6	p
water	118:19	0:0	4	;
if	119:4	120:21	4	(p -> ch == '&')
cond	119:8	119:15	5	p -> ch == '&'
water	119:8	0:0	6	p
op	119:9	0:0	6	->
water	119:11	0:0	6	ch
op	119:13	0:0	6	==
water	119:15	0:0	6	'&'
stmts	120:6	120:21	5	
call	120:6	120:20	6	asmrp_getch
arg	120:19	120:20	7	p
water	120:19	0:0	8	p
water	120:21	0:0	6	;
break	121:4	121:9	4	
water	122:2	0:0	4	case
water	122:7	0:0	4	'|'
water	122:10	0:0	4	:
water	123:4	0:0	4	p
op	123:5	0:0	4	->
water	123:7	0:0	4	sym
op	123:11	0:0	4	=
water	123:13	0:0	4	ASMRP_SYM_OR
water	123:25	0:0	4	;
call	124:4	124:18	4	asmrp_getch
arg	124:17	124:18	5	p
water	124:17	0:0	6	p
water	124:19	0:0	4	;
if	125:4	126:21	4	(p -> ch == '|')
cond	125:8	125:15	5	p -> ch == '|'
water	125:8	0:0	6	p
op	125:9	0:0	6	->
water	125:11	0:0	6	ch
op	125:13	0:0	6	==
water	125:15	0:0	6	'|'
stmts	126:6	126:21	5	
call	126:6	126:20	6	asmrp_getch
arg	126:19	126:20	7	p
water	126:19	0:0	8	p
water	126:21	0:0	6	;
break	127:4	127:9	4	
water	128:2	0:0	4	case
water	128:7	0:0	4	'<'
water	128:10	0:0	4	:
water	129:4	0:0	4	p
op	129:5	0:0	4	->
water	129:7	0:0	4	sym
op	129:11	0:0	4	=
water	129:13	0:0	4	ASMRP_SYM_LESS
water	129:27	0:0	4	;
call	130:4	130:18	4	asmrp_getch
arg	130:17	130:18	5	p
water	130:17	0:0	6	p
water	130:19	0:0	4	;
if	131:4	134:4	4	(p -> ch == '=')
cond	131:8	131:15	5	p -> ch == '='
water	131:8	0:0	6	p
op	131:9	0:0	6	->
water	131:11	0:0	6	ch
op	131:13	0:0	6	==
water	131:15	0:0	6	'='
stmts	131:20	134:4	5	
water	131:20	0:0	6	{
water	132:6	0:0	6	p
op	132:7	0:0	6	->
water	132:9	0:0	6	sym
op	132:13	0:0	6	=
water	132:15	0:0	6	ASMRP_SYM_LEQ
water	132:28	0:0	6	;
call	133:6	133:20	6	asmrp_getch
arg	133:19	133:20	7	p
water	133:19	0:0	8	p
water	133:21	0:0	6	;
water	134:4	0:0	6	}
break	135:4	135:9	4	
water	136:2	0:0	4	case
water	136:7	0:0	4	'>'
water	136:10	0:0	4	:
water	137:4	0:0	4	p
op	137:5	0:0	4	->
water	137:7	0:0	4	sym
op	137:11	0:0	4	=
water	137:13	0:0	4	ASMRP_SYM_GREATER
water	137:30	0:0	4	;
call	138:4	138:18	4	asmrp_getch
arg	138:17	138:18	5	p
water	138:17	0:0	6	p
water	138:19	0:0	4	;
if	139:4	142:4	4	(p -> ch == '=')
cond	139:8	139:15	5	p -> ch == '='
water	139:8	0:0	6	p
op	139:9	0:0	6	->
water	139:11	0:0	6	ch
op	139:13	0:0	6	==
water	139:15	0:0	6	'='
stmts	139:20	142:4	5	
water	139:20	0:0	6	{
water	140:6	0:0	6	p
op	140:7	0:0	6	->
water	140:9	0:0	6	sym
op	140:13	0:0	6	=
water	140:15	0:0	6	ASMRP_SYM_GEQ
water	140:28	0:0	6	;
call	141:6	141:20	6	asmrp_getch
arg	141:19	141:20	7	p
water	141:19	0:0	8	p
water	141:21	0:0	6	;
water	142:4	0:0	6	}
break	143:4	143:9	4	
water	144:2	0:0	4	case
water	144:7	0:0	4	'$'
water	144:10	0:0	4	:
water	145:4	0:0	4	p
op	145:5	0:0	4	->
water	145:7	0:0	4	sym
op	145:11	0:0	4	=
water	145:13	0:0	4	ASMRP_SYM_DOLLAR
water	145:29	0:0	4	;
call	146:4	146:18	4	asmrp_getch
arg	146:17	146:18	5	p
water	146:17	0:0	6	p
water	146:19	0:0	4	;
break	147:4	147:9	4	
water	148:2	0:0	4	case
water	148:7	0:0	4	'('
water	148:10	0:0	4	:
water	149:4	0:0	4	p
op	149:5	0:0	4	->
water	149:7	0:0	4	sym
op	149:11	0:0	4	=
water	149:13	0:0	4	ASMRP_SYM_LPAREN
water	149:29	0:0	4	;
call	150:4	150:18	4	asmrp_getch
arg	150:17	150:18	5	p
water	150:17	0:0	6	p
water	150:19	0:0	4	;
break	151:4	151:9	4	
water	152:2	0:0	4	case
water	152:7	0:0	4	')'
water	152:10	0:0	4	:
water	153:4	0:0	4	p
op	153:5	0:0	4	->
water	153:7	0:0	4	sym
op	153:11	0:0	4	=
water	153:13	0:0	4	ASMRP_SYM_RPAREN
water	153:29	0:0	4	;
call	154:4	154:18	4	asmrp_getch
arg	154:17	154:18	5	p
water	154:17	0:0	6	p
water	154:19	0:0	4	;
break	155:4	155:9	4	
water	156:2	0:0	4	case
water	156:7	0:0	4	'"'
water	156:10	0:0	4	:
call	157:4	157:18	4	asmrp_getch
arg	157:17	157:18	5	p
water	157:17	0:0	6	p
water	157:19	0:0	4	;
call	158:4	158:19	4	asmrp_string
arg	158:18	158:19	5	p
water	158:18	0:0	6	p
water	158:20	0:0	4	;
break	159:4	159:9	4	
water	160:2	0:0	4	case
water	160:7	0:0	4	'0'
water	160:10	0:0	4	:
water	160:12	0:0	4	case
water	160:17	0:0	4	'1'
water	160:20	0:0	4	:
water	160:22	0:0	4	case
water	160:27	0:0	4	'2'
water	160:30	0:0	4	:
water	160:32	0:0	4	case
water	160:37	0:0	4	'3'
water	160:40	0:0	4	:
water	160:42	0:0	4	case
water	160:47	0:0	4	'4'
water	160:50	0:0	4	:
water	161:2	0:0	4	case
water	161:7	0:0	4	'5'
water	161:10	0:0	4	:
water	161:12	0:0	4	case
water	161:17	0:0	4	'6'
water	161:20	0:0	4	:
water	161:22	0:0	4	case
water	161:27	0:0	4	'7'
water	161:30	0:0	4	:
water	161:32	0:0	4	case
water	161:37	0:0	4	'8'
water	161:40	0:0	4	:
water	161:42	0:0	4	case
water	161:47	0:0	4	'9'
water	161:50	0:0	4	:
call	162:4	162:19	4	asmrp_number
arg	162:18	162:19	5	p
water	162:18	0:0	6	p
water	162:20	0:0	4	;
break	163:4	163:9	4	
label	164:2	164:9	4	default :
call	165:4	165:23	4	asmrp_identifier
arg	165:22	165:23	5	p
water	165:22	0:0	6	p
water	165:24	0:0	4	;
water	166:2	0:0	4	}
call	168:2	168:20	2	asmrp_print_sym
arg	168:19	168:20	3	p
water	168:19	0:0	4	p
water	168:21	0:0	2	;

decl	1:7	1:104	0	void	DummyVoutSendDisplayEventMouse
water	1:42	0:0	0	(
water	1:43	0:0	0	vout_thread_t
op	1:57	0:0	0	*
water	1:58	0:0	0	,
water	1:60	0:0	0	vlc_mouse_t
op	1:72	0:0	0	*
water	1:73	0:0	0	fallback
water	1:81	0:0	0	,
water	1:83	0:0	0	const
water	1:89	0:0	0	vlc_mouse_t
op	1:101	0:0	0	*
water	1:102	0:0	0	m
water	1:103	0:0	0	)
func	2:0	44:0	0	static void	VoutDisplayCreateRender
params	2:35	0:0	1	
param	2:36	2:54	2	vout_display_t *	vd
stmnts	0:0	43:64	1	
decl	4:4	4:50	2	vout_display_owner_sys_t	*osys
op	4:35	0:0	2	=
water	4:37	0:0	2	vd
op	4:39	0:0	2	->
water	4:41	0:0	2	owner
op	4:46	0:0	2	.
water	4:47	0:0	2	sys
water	5:4	0:0	2	osys
op	5:8	0:0	2	->
water	5:10	0:0	2	filters
op	5:18	0:0	2	=
water	5:20	0:0	2	NULL
water	5:24	0:0	2	;
decl	6:4	6:37	2	video_format_t	v_src
op	6:25	0:0	2	=
water	6:27	0:0	2	vd
op	6:29	0:0	2	->
water	6:31	0:0	2	source
water	7:4	0:0	2	v_src
op	7:9	0:0	2	.
water	7:10	0:0	2	i_sar_num
op	7:20	0:0	2	=
water	7:22	0:0	2	0
water	7:23	0:0	2	;
water	8:4	0:0	2	v_src
op	8:9	0:0	2	.
water	8:10	0:0	2	i_sar_den
op	8:20	0:0	2	=
water	8:22	0:0	2	0
water	8:23	0:0	2	;
decl	9:4	9:34	2	video_format_t	v_dst
op	9:25	0:0	2	=
water	9:27	0:0	2	vd
op	9:29	0:0	2	->
water	9:31	0:0	2	fmt
water	10:4	0:0	2	v_dst
op	10:9	0:0	2	.
water	10:10	0:0	2	i_sar_num
op	10:20	0:0	2	=
water	10:22	0:0	2	0
water	10:23	0:0	2	;
water	11:4	0:0	2	v_dst
op	11:9	0:0	2	.
water	11:10	0:0	2	i_sar_den
op	11:20	0:0	2	=
water	11:22	0:0	2	0
water	11:23	0:0	2	;
decl	12:4	12:36	2	video_format_t	v_dst_cmp
op	12:29	0:0	2	=
water	12:31	0:0	2	v_dst
if	13:4	17:43	2	(( v_src . i_chroma == VLC_CODEC_J420 && v_dst . i_chroma == VLC_CODEC_I420 ) || ( v_src . i_chroma == VLC_CODEC_J422 && v_dst . i_chroma == VLC_CODEC_I422 ) || ( v_src . i_chroma == VLC_CODEC_J440 && v_dst . i_chroma == VLC_CODEC_I440 ) || ( v_src . i_chroma == VLC_CODEC_J444 && v_dst . i_chroma == VLC_CODEC_I444 ))
cond	13:8	16:77	3	( v_src . i_chroma == VLC_CODEC_J420 && v_dst . i_chroma == VLC_CODEC_I420 ) || ( v_src . i_chroma == VLC_CODEC_J422 && v_dst . i_chroma == VLC_CODEC_I422 ) || ( v_src . i_chroma == VLC_CODEC_J440 && v_dst . i_chroma == VLC_CODEC_I440 ) || ( v_src . i_chroma == VLC_CODEC_J444 && v_dst . i_chroma == VLC_CODEC_I444 )
water	13:8	0:0	4	(
water	13:9	0:0	4	v_src
op	13:14	0:0	4	.
water	13:15	0:0	4	i_chroma
op	13:24	0:0	4	==
water	13:27	0:0	4	VLC_CODEC_J420
op	13:42	0:0	4	&&
water	13:45	0:0	4	v_dst
op	13:50	0:0	4	.
water	13:51	0:0	4	i_chroma
op	13:60	0:0	4	==
water	13:63	0:0	4	VLC_CODEC_I420
water	13:77	0:0	4	)
op	13:79	0:0	4	||
water	14:8	0:0	4	(
water	14:9	0:0	4	v_src
op	14:14	0:0	4	.
water	14:15	0:0	4	i_chroma
op	14:24	0:0	4	==
water	14:27	0:0	4	VLC_CODEC_J422
op	14:42	0:0	4	&&
water	14:45	0:0	4	v_dst
op	14:50	0:0	4	.
water	14:51	0:0	4	i_chroma
op	14:60	0:0	4	==
water	14:63	0:0	4	VLC_CODEC_I422
water	14:77	0:0	4	)
op	14:79	0:0	4	||
water	15:8	0:0	4	(
water	15:9	0:0	4	v_src
op	15:14	0:0	4	.
water	15:15	0:0	4	i_chroma
op	15:24	0:0	4	==
water	15:27	0:0	4	VLC_CODEC_J440
op	15:42	0:0	4	&&
water	15:45	0:0	4	v_dst
op	15:50	0:0	4	.
water	15:51	0:0	4	i_chroma
op	15:60	0:0	4	==
water	15:63	0:0	4	VLC_CODEC_I440
water	15:77	0:0	4	)
op	15:79	0:0	4	||
water	16:8	0:0	4	(
water	16:9	0:0	4	v_src
op	16:14	0:0	4	.
water	16:15	0:0	4	i_chroma
op	16:24	0:0	4	==
water	16:27	0:0	4	VLC_CODEC_J444
op	16:42	0:0	4	&&
water	16:45	0:0	4	v_dst
op	16:50	0:0	4	.
water	16:51	0:0	4	i_chroma
op	16:60	0:0	4	==
water	16:63	0:0	4	VLC_CODEC_I444
water	16:77	0:0	4	)
stmts	17:8	17:43	3	
water	17:8	0:0	4	v_dst_cmp
op	17:17	0:0	4	.
water	17:18	0:0	4	i_chroma
op	17:27	0:0	4	=
water	17:29	0:0	4	v_src
op	17:34	0:0	4	.
water	17:35	0:0	4	i_chroma
water	17:43	0:0	4	;
decl	18:4	18:71	2	const bool	convert
op	18:23	0:0	2	=
call	18:25	18:65	3	memcmp
arg	18:32	18:38	4	&v_src
op	18:32	0:0	5	&
water	18:33	0:0	5	v_src
arg	18:40	18:50	4	&v_dst_cmp
op	18:40	0:0	5	&
water	18:41	0:0	5	v_dst_cmp
arg	18:52	18:65	4	sizeof(v_src)
op	18:52	0:0	5	sizeof
water	18:58	0:0	5	(
water	18:59	0:0	5	v_src
water	18:64	0:0	5	)
op	18:67	0:0	2	!=
water	18:70	0:0	2	0
if	19:4	20:14	2	(! convert)
cond	19:8	19:9	3	! convert
op	19:8	0:0	4	!
water	19:9	0:0	4	convert
stmts	20:8	20:14	3	
return	20:8	20:14	4	
call	21:4	21:64	2	msg_Dbg
arg	21:12	21:14	3	vd
water	21:12	0:0	4	vd
arg	21:16	21:64	3	"A filter to adapt decoder to display is needed"
water	21:16	0:0	4	"A filter to adapt decoder to display is needed"
water	21:65	0:0	2	;
water	22:4	0:0	2	osys
op	22:8	0:0	2	->
water	22:10	0:0	2	filters
op	22:18	0:0	2	=
call	22:20	24:62	2	filter_chain_New
arg	22:37	22:39	3	vd
water	22:37	0:0	4	vd
arg	22:41	22:56	3	"video filter2"
water	22:41	0:0	4	"video filter2"
arg	22:58	22:63	3	false
water	22:58	0:0	4	false
arg	23:37	23:57	3	FilterAllocationInit
water	23:37	0:0	4	FilterAllocationInit
arg	24:37	24:58	3	FilterAllocationClean
water	24:37	0:0	4	FilterAllocationClean
arg	24:60	24:62	3	vd
water	24:60	0:0	4	vd
water	24:63	0:0	2	;
call	25:4	25:24	2	assert
arg	25:11	25:24	3	osys->filters
water	25:11	0:0	4	osys
op	25:15	0:0	4	->
water	25:17	0:0	4	filters
water	25:25	0:0	2	;
decl	27:4	27:19	2	es_format_t	src
call	28:4	28:40	2	es_format_InitFromVideo
arg	28:28	28:32	3	&src
op	28:28	0:0	4	&
water	28:29	0:0	4	src
arg	28:34	28:40	3	&v_src
op	28:34	0:0	4	&
water	28:35	0:0	4	v_src
water	28:41	0:0	2	;
decl	30:4	30:20	2	filter_t	*filter
for	31:4	40:4	2	( int i = 0 ;i < 1 + ( v_dst_cmp . i_chroma != v_dst . i_chroma );i ++)
forinit	0:0	31:18	3	 int i = 0 ;
decl	31:9	31:18	4	int	i
op	31:15	0:0	4	=
water	31:17	0:0	4	0
cond	31:20	31:65	3	i < 1 + ( v_dst_cmp . i_chroma != v_dst . i_chroma )
water	31:20	0:0	4	i
op	31:22	0:0	4	<
water	31:24	0:0	4	1
op	31:26	0:0	4	+
water	31:28	0:0	4	(
water	31:29	0:0	4	v_dst_cmp
op	31:38	0:0	4	.
water	31:39	0:0	4	i_chroma
op	31:48	0:0	4	!=
water	31:51	0:0	4	v_dst
op	31:56	0:0	4	.
water	31:57	0:0	4	i_chroma
water	31:65	0:0	4	)
forexpr	31:68	31:69	3	i ++
water	31:68	0:0	4	i
op	31:69	0:0	4	++
stmts	31:73	40:4	3	
water	31:73	0:0	4	{
decl	32:8	32:23	4	es_format_t	dst
call	33:8	33:66	4	es_format_InitFromVideo
arg	33:32	33:36	5	&dst
op	33:32	0:0	6	&
water	33:33	0:0	6	dst
arg	33:38	33:66	5	i==0?&v_dst:&v_dst_cmp
water	33:38	0:0	6	i
op	33:40	0:0	6	==
water	33:43	0:0	6	0
water	33:45	0:0	6	?
op	33:47	0:0	6	&
water	33:48	0:0	6	v_dst
water	33:54	0:0	6	:
op	33:56	0:0	6	&
water	33:57	0:0	6	v_dst_cmp
water	33:67	0:0	4	;
call	34:8	34:52	4	filter_chain_Reset
arg	34:27	34:40	5	osys->filters
water	34:27	0:0	6	osys
op	34:31	0:0	6	->
water	34:33	0:0	6	filters
arg	34:42	34:46	5	&src
op	34:42	0:0	6	&
water	34:43	0:0	6	src
arg	34:48	34:52	5	&dst
op	34:48	0:0	6	&
water	34:49	0:0	6	dst
water	34:53	0:0	4	;
water	35:8	0:0	4	filter
op	35:15	0:0	4	=
call	35:17	36:65	4	filter_chain_AppendFilter
arg	35:43	35:56	5	osys->filters
water	35:43	0:0	6	osys
op	35:47	0:0	6	->
water	35:49	0:0	6	filters
arg	36:43	36:47	5	NULL
water	36:43	0:0	6	NULL
arg	36:49	36:53	5	NULL
water	36:49	0:0	6	NULL
arg	36:55	36:59	5	&src
op	36:55	0:0	6	&
water	36:56	0:0	6	src
arg	36:61	36:65	5	&dst
op	36:61	0:0	6	&
water	36:62	0:0	6	dst
water	36:66	0:0	4	;
call	37:8	37:28	4	es_format_Clean
arg	37:24	37:28	5	&dst
op	37:24	0:0	6	&
water	37:25	0:0	6	dst
water	37:29	0:0	4	;
if	38:8	39:17	4	(filter)
cond	38:12	38:12	5	filter
water	38:12	0:0	6	filter
stmts	39:12	39:17	5	
break	39:12	39:17	6	
water	40:4	0:0	4	}
call	41:4	41:24	2	es_format_Clean
arg	41:20	41:24	3	&src
op	41:20	0:0	4	&
water	41:21	0:0	4	src
water	41:25	0:0	2	;
if	42:4	43:64	2	(! filter)
cond	42:8	42:9	3	! filter
op	42:8	0:0	4	!
water	42:9	0:0	4	filter
stmts	43:8	43:64	3	
call	43:8	43:63	4	msg_Err
arg	43:16	43:18	5	vd
water	43:16	0:0	6	vd
arg	43:20	43:63	5	"Failed to adapt decoder format to display"
water	43:20	0:0	6	"Failed to adapt decoder format to display"
water	43:64	0:0	4	;

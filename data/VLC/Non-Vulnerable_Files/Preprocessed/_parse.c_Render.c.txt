func	2:0	51:0	0	static void	Render
params	2:18	0:0	1	
param	2:20	2:36	2	decoder_t *	p_dec
param	2:38	2:57	2	subpicture_t *	p_spu
param	3:20	3:49	2	subpicture_data_t *	p_spu_data
param	4:20	4:61	2	const spu_properties_t *	p_spu_properties
stmnts	0:0	50:4	1	
decl	6:4	6:16	2	uint8_t	*p_p
decl	7:4	7:41	2	int	i_x
water	7:11	0:0	2	,
decl	7:4	7:41	2	int	i_y
water	7:16	0:0	2	,
decl	7:4	7:41	2	int	i_len
water	7:23	0:0	2	,
decl	7:4	7:41	2	int	i_color
water	7:32	0:0	2	,
decl	7:4	7:41	2	int	i_pitch
decl	8:4	8:49	2	const uint16_t	*p_source
op	8:29	0:0	2	=
water	8:31	0:0	2	p_spu_data
op	8:41	0:0	2	->
water	8:43	0:0	2	p_data
decl	9:4	9:22	2	video_format_t	fmt
decl	10:4	10:27	2	video_palette_t	palette
call	12:4	12:44	2	memset
arg	12:12	12:16	3	&fmt
op	12:12	0:0	4	&
water	12:13	0:0	4	fmt
arg	12:18	12:19	3	0
water	12:18	0:0	4	0
arg	12:21	12:44	3	sizeof(video_format_t)
op	12:21	0:0	4	sizeof
water	12:27	0:0	4	(
water	12:28	0:0	4	video_format_t
water	12:42	0:0	4	)
water	12:45	0:0	2	;
water	13:4	0:0	2	fmt
op	13:7	0:0	2	.
water	13:8	0:0	2	i_chroma
op	13:17	0:0	2	=
water	13:19	0:0	2	VLC_CODEC_YUVP
water	13:33	0:0	2	;
water	14:4	0:0	2	fmt
op	14:7	0:0	2	.
water	14:8	0:0	2	i_sar_num
op	14:18	0:0	2	=
water	14:20	0:0	2	0
water	14:21	0:0	2	;
water	15:4	0:0	2	fmt
op	15:7	0:0	2	.
water	15:8	0:0	2	i_sar_den
op	15:18	0:0	2	=
water	15:20	0:0	2	1
water	15:21	0:0	2	;
water	16:4	0:0	2	fmt
op	16:7	0:0	2	.
water	16:8	0:0	2	i_width
op	16:16	0:0	2	=
water	16:18	0:0	2	fmt
op	16:21	0:0	2	.
water	16:22	0:0	2	i_visible_width
op	16:38	0:0	2	=
water	16:40	0:0	2	p_spu_properties
op	16:56	0:0	2	->
water	16:58	0:0	2	i_width
water	16:65	0:0	2	;
water	17:4	0:0	2	fmt
op	17:7	0:0	2	.
water	17:8	0:0	2	i_height
op	17:17	0:0	2	=
water	17:19	0:0	2	fmt
op	17:22	0:0	2	.
water	17:23	0:0	2	i_visible_height
op	17:40	0:0	2	=
water	17:42	0:0	2	p_spu_properties
op	17:58	0:0	2	->
water	17:60	0:0	2	i_height
op	17:69	0:0	2	-
water	18:8	0:0	2	p_spu_data
op	18:18	0:0	2	->
water	18:20	0:0	2	i_y_top_offset
op	18:35	0:0	2	-
water	18:37	0:0	2	p_spu_data
op	18:47	0:0	2	->
water	18:49	0:0	2	i_y_bottom_offset
water	18:66	0:0	2	;
water	19:4	0:0	2	fmt
op	19:7	0:0	2	.
water	19:8	0:0	2	i_x_offset
op	19:19	0:0	2	=
water	19:21	0:0	2	fmt
op	19:24	0:0	2	.
water	19:25	0:0	2	i_y_offset
op	19:36	0:0	2	=
water	19:38	0:0	2	0
water	19:39	0:0	2	;
water	20:4	0:0	2	fmt
op	20:7	0:0	2	.
water	20:8	0:0	2	p_palette
op	20:18	0:0	2	=
op	20:20	0:0	2	&
water	20:21	0:0	2	palette
water	20:28	0:0	2	;
water	21:4	0:0	2	fmt
op	21:7	0:0	2	.
water	21:8	0:0	2	p_palette
op	21:17	0:0	2	->
water	21:19	0:0	2	i_entries
op	21:29	0:0	2	=
water	21:31	0:0	2	4
water	21:32	0:0	2	;
for	22:4	28:4	2	(i_x = 0 ;i_x < fmt . p_palette -> i_entries;i_x ++)
forinit	22:9	22:16	3	i_x = 0 ;
water	22:9	0:0	4	i_x
op	22:13	0:0	4	=
water	22:15	0:0	4	0
water	22:16	0:0	4	;
cond	22:18	22:39	3	i_x < fmt . p_palette -> i_entries
water	22:18	0:0	4	i_x
op	22:22	0:0	4	<
water	22:24	0:0	4	fmt
op	22:27	0:0	4	.
water	22:28	0:0	4	p_palette
op	22:37	0:0	4	->
water	22:39	0:0	4	i_entries
forexpr	22:50	22:53	3	i_x ++
water	22:50	0:0	4	i_x
op	22:53	0:0	4	++
stmts	23:4	28:4	3	
water	23:4	0:0	4	{
water	24:8	0:0	4	fmt
op	24:11	0:0	4	.
water	24:12	0:0	4	p_palette
op	24:21	0:0	4	->
water	24:23	0:0	4	palette
op	24:30	0:0	4	[
water	24:31	0:0	4	i_x
op	24:34	0:0	4	]
op	24:35	0:0	4	[
water	24:36	0:0	4	0
op	24:37	0:0	4	]
op	24:39	0:0	4	=
water	24:41	0:0	4	p_spu_data
op	24:51	0:0	4	->
water	24:53	0:0	4	pi_yuv
op	24:59	0:0	4	[
water	24:60	0:0	4	i_x
op	24:63	0:0	4	]
op	24:64	0:0	4	[
water	24:65	0:0	4	0
op	24:66	0:0	4	]
water	24:67	0:0	4	;
water	25:8	0:0	4	fmt
op	25:11	0:0	4	.
water	25:12	0:0	4	p_palette
op	25:21	0:0	4	->
water	25:23	0:0	4	palette
op	25:30	0:0	4	[
water	25:31	0:0	4	i_x
op	25:34	0:0	4	]
op	25:35	0:0	4	[
water	25:36	0:0	4	1
op	25:37	0:0	4	]
op	25:39	0:0	4	=
water	25:41	0:0	4	p_spu_data
op	25:51	0:0	4	->
water	25:53	0:0	4	pi_yuv
op	25:59	0:0	4	[
water	25:60	0:0	4	i_x
op	25:63	0:0	4	]
op	25:64	0:0	4	[
water	25:65	0:0	4	1
op	25:66	0:0	4	]
water	25:67	0:0	4	;
water	26:8	0:0	4	fmt
op	26:11	0:0	4	.
water	26:12	0:0	4	p_palette
op	26:21	0:0	4	->
water	26:23	0:0	4	palette
op	26:30	0:0	4	[
water	26:31	0:0	4	i_x
op	26:34	0:0	4	]
op	26:35	0:0	4	[
water	26:36	0:0	4	2
op	26:37	0:0	4	]
op	26:39	0:0	4	=
water	26:41	0:0	4	p_spu_data
op	26:51	0:0	4	->
water	26:53	0:0	4	pi_yuv
op	26:59	0:0	4	[
water	26:60	0:0	4	i_x
op	26:63	0:0	4	]
op	26:64	0:0	4	[
water	26:65	0:0	4	2
op	26:66	0:0	4	]
water	26:67	0:0	4	;
water	27:8	0:0	4	fmt
op	27:11	0:0	4	.
water	27:12	0:0	4	p_palette
op	27:21	0:0	4	->
water	27:23	0:0	4	palette
op	27:30	0:0	4	[
water	27:31	0:0	4	i_x
op	27:34	0:0	4	]
op	27:35	0:0	4	[
water	27:36	0:0	4	3
op	27:37	0:0	4	]
op	27:39	0:0	4	=
water	27:41	0:0	4	p_spu_data
op	27:51	0:0	4	->
water	27:53	0:0	4	pi_alpha
op	27:61	0:0	4	[
water	27:62	0:0	4	i_x
op	27:65	0:0	4	]
op	27:67	0:0	4	*
water	27:69	0:0	4	0
water	27:70	0:0	4	x11
water	27:73	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	p_spu
op	29:9	0:0	2	->
water	29:11	0:0	2	p_region
op	29:20	0:0	2	=
call	29:22	29:50	2	subpicture_region_New
arg	29:45	29:50	3	&fmt
op	29:45	0:0	4	&
water	29:46	0:0	4	fmt
water	29:51	0:0	2	;
if	30:4	34:4	2	(! p_spu -> p_region)
cond	30:8	30:16	3	! p_spu -> p_region
op	30:8	0:0	4	!
water	30:9	0:0	4	p_spu
op	30:14	0:0	4	->
water	30:16	0:0	4	p_region
stmts	31:4	34:4	3	
water	31:4	0:0	4	{
call	32:8	32:53	4	msg_Err
arg	32:17	32:22	5	p_dec
water	32:17	0:0	6	p_dec
arg	32:24	32:53	5	"cannot allocate SPU region"
water	32:24	0:0	6	"cannot allocate SPU region"
water	32:54	0:0	4	;
return	33:8	33:14	4	
water	34:4	0:0	4	}
water	35:4	0:0	2	p_spu
op	35:9	0:0	2	->
water	35:11	0:0	2	p_region
op	35:19	0:0	2	->
water	35:21	0:0	2	i_x
op	35:25	0:0	2	=
water	35:27	0:0	2	p_spu_properties
op	35:43	0:0	2	->
water	35:45	0:0	2	i_x
water	35:48	0:0	2	;
water	36:4	0:0	2	p_spu
op	36:9	0:0	2	->
water	36:11	0:0	2	p_region
op	36:19	0:0	2	->
water	36:21	0:0	2	i_y
op	36:25	0:0	2	=
water	36:27	0:0	2	p_spu_properties
op	36:43	0:0	2	->
water	36:45	0:0	2	i_y
op	36:49	0:0	2	+
water	36:51	0:0	2	p_spu_data
op	36:61	0:0	2	->
water	36:63	0:0	2	i_y_top_offset
water	36:77	0:0	2	;
water	37:4	0:0	2	p_p
op	37:8	0:0	2	=
water	37:10	0:0	2	p_spu
op	37:15	0:0	2	->
water	37:17	0:0	2	p_region
op	37:25	0:0	2	->
water	37:27	0:0	2	p_picture
op	37:36	0:0	2	->
water	37:38	0:0	2	p
op	37:39	0:0	2	->
water	37:41	0:0	2	p_pixels
water	37:49	0:0	2	;
water	38:4	0:0	2	i_pitch
op	38:12	0:0	2	=
water	38:14	0:0	2	p_spu
op	38:19	0:0	2	->
water	38:21	0:0	2	p_region
op	38:29	0:0	2	->
water	38:31	0:0	2	p_picture
op	38:40	0:0	2	->
water	38:42	0:0	2	p
op	38:43	0:0	2	->
water	38:45	0:0	2	i_pitch
water	38:52	0:0	2	;
for	40:4	50:4	2	(i_y = 0 ;i_y < ( int ) fmt . i_height * i_pitch;i_y += i_pitch)
forinit	40:9	40:16	3	i_y = 0 ;
water	40:9	0:0	4	i_y
op	40:13	0:0	4	=
water	40:15	0:0	4	0
water	40:16	0:0	4	;
cond	40:18	40:44	3	i_y < ( int ) fmt . i_height * i_pitch
water	40:18	0:0	4	i_y
op	40:22	0:0	4	<
water	40:24	0:0	4	(
water	40:25	0:0	4	int
water	40:28	0:0	4	)
water	40:29	0:0	4	fmt
op	40:32	0:0	4	.
water	40:33	0:0	4	i_height
op	40:42	0:0	4	*
water	40:44	0:0	4	i_pitch
forexpr	40:53	40:60	3	i_y += i_pitch
water	40:53	0:0	4	i_y
op	40:57	0:0	4	+=
water	40:60	0:0	4	i_pitch
stmts	41:4	50:4	3	
water	41:4	0:0	4	{
for	43:8	49:8	4	(i_x = 0 ;i_x < ( int ) fmt . i_width;i_x += i_len)
forinit	43:13	43:21	5	i_x = 0 ;
water	43:13	0:0	6	i_x
op	43:17	0:0	6	=
water	43:19	0:0	6	0
water	43:21	0:0	6	;
cond	43:23	43:38	5	i_x < ( int ) fmt . i_width
water	43:23	0:0	6	i_x
op	43:27	0:0	6	<
water	43:29	0:0	6	(
water	43:30	0:0	6	int
water	43:33	0:0	6	)
water	43:34	0:0	6	fmt
op	43:37	0:0	6	.
water	43:38	0:0	6	i_width
forexpr	43:47	43:54	5	i_x += i_len
water	43:47	0:0	6	i_x
op	43:51	0:0	6	+=
water	43:54	0:0	6	i_len
stmts	44:8	49:8	5	
water	44:8	0:0	6	{
water	46:12	0:0	6	i_color
op	46:20	0:0	6	=
op	46:22	0:0	6	*
water	46:23	0:0	6	p_source
op	46:32	0:0	6	&
water	46:34	0:0	6	0
water	46:35	0:0	6	x3
water	46:37	0:0	6	;
water	47:12	0:0	6	i_len
op	47:18	0:0	6	=
op	47:20	0:0	6	*
water	47:21	0:0	6	p_source
op	47:29	0:0	6	++
op	47:32	0:0	6	>>
water	47:35	0:0	6	2
water	47:36	0:0	6	;
call	48:12	48:52	6	memset
arg	48:20	48:35	7	p_p+i_x+i_y
water	48:20	0:0	8	p_p
op	48:24	0:0	8	+
water	48:26	0:0	8	i_x
op	48:30	0:0	8	+
water	48:32	0:0	8	i_y
arg	48:37	48:44	7	i_color
water	48:37	0:0	8	i_color
arg	48:46	48:52	7	i_len
water	48:46	0:0	8	i_len
water	48:53	0:0	6	;
water	49:8	0:0	6	}
water	50:4	0:0	4	}

func	2:0	22:0	0	void	es_format_Clean
params	2:20	0:0	1	
param	2:22	2:39	2	es_format_t *	fmt
stmnts	4:4	21:34	1	
call	4:4	4:28	2	free
arg	4:10	4:28	3	fmt->psz_language
water	4:10	0:0	4	fmt
op	4:13	0:0	4	->
water	4:15	0:0	4	psz_language
water	4:29	0:0	2	;
call	5:4	5:31	2	free
arg	5:10	5:31	3	fmt->psz_description
water	5:10	0:0	4	fmt
op	5:13	0:0	4	->
water	5:15	0:0	4	psz_description
water	5:32	0:0	2	;
if	6:4	6:47	2	(fmt -> i_extra > 0)
cond	6:8	6:23	3	fmt -> i_extra > 0
water	6:8	0:0	4	fmt
op	6:11	0:0	4	->
water	6:13	0:0	4	i_extra
op	6:21	0:0	4	>
water	6:23	0:0	4	0
stmts	6:27	6:47	3	
call	6:27	6:46	4	free
arg	6:33	6:46	5	fmt->p_extra
water	6:33	0:0	6	fmt
op	6:36	0:0	6	->
water	6:38	0:0	6	p_extra
water	6:47	0:0	4	;
call	7:4	7:31	2	free
arg	7:10	7:31	3	fmt->video.p_palette
water	7:10	0:0	4	fmt
op	7:13	0:0	4	->
water	7:15	0:0	4	video
op	7:20	0:0	4	.
water	7:21	0:0	4	p_palette
water	7:32	0:0	2	;
call	8:4	8:33	2	free
arg	8:10	8:33	3	fmt->subs.psz_encoding
water	8:10	0:0	4	fmt
op	8:13	0:0	4	->
water	8:15	0:0	4	subs
op	8:19	0:0	4	.
water	8:20	0:0	4	psz_encoding
water	8:34	0:0	2	;
if	9:4	9:67	2	(fmt -> subs . p_style)
cond	9:9	9:19	3	fmt -> subs . p_style
water	9:9	0:0	4	fmt
op	9:12	0:0	4	->
water	9:14	0:0	4	subs
op	9:18	0:0	4	.
water	9:19	0:0	4	p_style
stmts	9:29	9:67	3	
call	9:29	9:66	4	text_style_Delete
arg	9:48	9:66	5	fmt->subs.p_style
water	9:48	0:0	6	fmt
op	9:51	0:0	6	->
water	9:53	0:0	6	subs
op	9:57	0:0	6	.
water	9:58	0:0	6	p_style
water	9:67	0:0	4	;
if	10:4	19:4	2	(fmt -> i_extra_languages > 0 && fmt -> p_extra_languages)
cond	10:8	10:43	3	fmt -> i_extra_languages > 0 && fmt -> p_extra_languages
water	10:8	0:0	4	fmt
op	10:11	0:0	4	->
water	10:13	0:0	4	i_extra_languages
op	10:31	0:0	4	>
water	10:33	0:0	4	0
op	10:35	0:0	4	&&
water	10:38	0:0	4	fmt
op	10:41	0:0	4	->
water	10:43	0:0	4	p_extra_languages
stmts	11:4	19:4	3	
water	11:4	0:0	4	{
decl	12:8	12:13	4	int	i
for	13:8	17:8	4	(i = 0 ;i < fmt -> i_extra_languages;i ++)
forinit	13:13	13:18	5	i = 0 ;
water	13:13	0:0	6	i
op	13:15	0:0	6	=
water	13:17	0:0	6	0
water	13:18	0:0	6	;
cond	13:20	13:29	5	i < fmt -> i_extra_languages
water	13:20	0:0	6	i
op	13:22	0:0	6	<
water	13:24	0:0	6	fmt
op	13:27	0:0	6	->
water	13:29	0:0	6	i_extra_languages
forexpr	13:48	13:49	5	i ++
water	13:48	0:0	6	i
op	13:49	0:0	6	++
stmts	14:8	17:8	5	
water	14:8	0:0	6	{
call	15:12	15:57	6	free
arg	15:18	15:57	7	fmt->p_extra_languages[i].psz_language
water	15:18	0:0	8	fmt
op	15:21	0:0	8	->
water	15:23	0:0	8	p_extra_languages
op	15:40	0:0	8	[
water	15:41	0:0	8	i
op	15:42	0:0	8	]
op	15:43	0:0	8	.
water	15:44	0:0	8	psz_language
water	15:58	0:0	6	;
call	16:12	16:60	6	free
arg	16:18	16:60	7	fmt->p_extra_languages[i].psz_description
water	16:18	0:0	8	fmt
op	16:21	0:0	8	->
water	16:23	0:0	8	p_extra_languages
op	16:40	0:0	8	[
water	16:41	0:0	8	i
op	16:42	0:0	8	]
op	16:43	0:0	8	.
water	16:44	0:0	8	psz_description
water	16:61	0:0	6	;
water	17:8	0:0	6	}
call	18:8	18:37	4	free
arg	18:14	18:37	5	fmt->p_extra_languages
water	18:14	0:0	6	fmt
op	18:17	0:0	6	->
water	18:19	0:0	6	p_extra_languages
water	18:38	0:0	4	;
water	19:4	0:0	4	}
call	21:4	21:33	2	memset
arg	21:12	21:15	3	fmt
water	21:12	0:0	4	fmt
arg	21:17	21:18	3	0
water	21:17	0:0	4	0
arg	21:20	21:33	3	sizeof(*fmt)
op	21:20	0:0	4	sizeof
water	21:26	0:0	4	(
op	21:27	0:0	4	*
water	21:28	0:0	4	fmt
water	21:31	0:0	4	)
water	21:34	0:0	2	;

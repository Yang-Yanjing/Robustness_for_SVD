func	2:0	92:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:39	2	vlc_object_t *	p_this
stmnts	0:0	91:22	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
water	6:4	0:0	2	p_demux
op	6:11	0:0	2	->
water	6:13	0:0	2	p_sys
op	6:24	0:0	2	=
water	6:26	0:0	2	p_sys
op	6:32	0:0	2	=
call	6:34	6:64	2	malloc
arg	6:42	6:64	3	sizeof(demux_sys_t)
op	6:42	0:0	4	sizeof
water	6:48	0:0	4	(
water	6:50	0:0	4	demux_sys_t
water	6:62	0:0	4	)
water	6:65	0:0	2	;
if	7:4	8:25	2	(! p_sys)
cond	7:8	7:9	3	! p_sys
op	7:8	0:0	4	!
water	7:9	0:0	4	p_sys
stmts	8:8	8:25	3	
return	8:8	8:25	4	VLC_ENOMEM
water	8:15	0:0	5	VLC_ENOMEM
call	9:4	9:45	2	es_format_Init
arg	9:20	9:31	3	&p_sys->fmt
op	9:20	0:0	4	&
water	9:21	0:0	4	p_sys
op	9:26	0:0	4	->
water	9:28	0:0	4	fmt
arg	9:33	9:41	3	AUDIO_ES
water	9:33	0:0	4	AUDIO_ES
arg	9:43	9:45	3	0
water	9:43	0:0	4	0
water	9:46	0:0	2	;
decl	10:4	10:70	2	char	*psz_fourcc
op	10:21	0:0	2	=
call	10:23	10:69	3	var_CreateGetString
arg	10:44	10:51	4	p_demux
water	10:44	0:0	5	p_demux
arg	10:53	10:69	4	"rawaud-fourcc"
water	10:53	0:0	5	"rawaud-fourcc"
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	fmt
op	11:14	0:0	2	.
water	11:15	0:0	2	i_codec
op	11:23	0:0	2	=
call	11:25	11:77	2	vlc_fourcc_GetCodecFromString
arg	11:56	11:64	3	AUDIO_ES
water	11:56	0:0	4	AUDIO_ES
arg	11:66	11:77	3	psz_fourcc
water	11:66	0:0	4	psz_fourcc
water	11:78	0:0	2	;
call	12:4	12:21	2	free
arg	12:10	12:21	3	psz_fourcc
water	12:10	0:0	4	psz_fourcc
water	12:22	0:0	2	;
if	13:4	19:4	2	(! p_sys -> fmt . i_codec)
cond	13:8	13:20	3	! p_sys -> fmt . i_codec
op	13:8	0:0	4	!
water	13:9	0:0	4	p_sys
op	13:14	0:0	4	->
water	13:16	0:0	4	fmt
op	13:19	0:0	4	.
water	13:20	0:0	4	i_codec
stmts	14:4	19:4	3	
water	14:4	0:0	4	{
call	15:8	15:70	4	msg_Err
arg	15:17	15:24	5	p_demux
water	15:17	0:0	6	p_demux
arg	15:26	15:70	5	"rawaud-fourcc must be a 4 character string"
water	15:26	0:0	6	"rawaud-fourcc must be a 4 character string"
water	15:71	0:0	4	;
call	16:8	16:37	4	es_format_Clean
arg	16:25	16:37	5	&p_sys->fmt
op	16:25	0:0	6	&
water	16:26	0:0	6	p_sys
op	16:31	0:0	6	->
water	16:33	0:0	6	fmt
water	16:38	0:0	4	;
call	17:8	17:20	4	free
arg	17:14	17:20	5	p_sys
water	17:14	0:0	6	p_sys
water	17:21	0:0	4	;
return	18:8	18:27	4	VLC_EGENERIC
water	18:15	0:0	5	VLC_EGENERIC
water	19:4	0:0	4	}
switch	21:4	49:4	2	(p_sys -> fmt . i_codec)
cond	21:12	21:23	3	p_sys -> fmt . i_codec
water	21:12	0:0	4	p_sys
op	21:17	0:0	4	->
water	21:19	0:0	4	fmt
op	21:22	0:0	4	.
water	21:23	0:0	4	i_codec
stmts	22:4	49:4	3	
water	22:4	0:0	4	{
label	23:8	23:27	4	case VLC_CODEC_FL64 :
water	24:12	0:0	4	p_sys
op	24:17	0:0	4	->
water	24:19	0:0	4	fmt
op	24:22	0:0	4	.
water	24:23	0:0	4	audio
op	24:28	0:0	4	.
water	24:29	0:0	4	i_bitspersample
op	24:45	0:0	4	=
water	24:47	0:0	4	64
water	24:49	0:0	4	;
break	25:12	25:17	4	
label	26:8	26:27	4	case VLC_CODEC_FL32 :
label	27:8	27:27	4	case VLC_CODEC_S32L :
label	28:8	28:27	4	case VLC_CODEC_S32B :
water	29:12	0:0	4	p_sys
op	29:17	0:0	4	->
water	29:19	0:0	4	fmt
op	29:22	0:0	4	.
water	29:23	0:0	4	audio
op	29:28	0:0	4	.
water	29:29	0:0	4	i_bitspersample
op	29:45	0:0	4	=
water	29:47	0:0	4	32
water	29:49	0:0	4	;
break	30:12	30:17	4	
label	31:8	31:27	4	case VLC_CODEC_S24L :
label	32:8	32:27	4	case VLC_CODEC_S24B :
water	33:12	0:0	4	p_sys
op	33:17	0:0	4	->
water	33:19	0:0	4	fmt
op	33:22	0:0	4	.
water	33:23	0:0	4	audio
op	33:28	0:0	4	.
water	33:29	0:0	4	i_bitspersample
op	33:45	0:0	4	=
water	33:47	0:0	4	24
water	33:49	0:0	4	;
break	34:12	34:17	4	
label	35:8	35:27	4	case VLC_CODEC_S16L :
label	36:8	36:27	4	case VLC_CODEC_S16B :
water	37:12	0:0	4	p_sys
op	37:17	0:0	4	->
water	37:19	0:0	4	fmt
op	37:22	0:0	4	.
water	37:23	0:0	4	audio
op	37:28	0:0	4	.
water	37:29	0:0	4	i_bitspersample
op	37:45	0:0	4	=
water	37:47	0:0	4	16
water	37:49	0:0	4	;
break	38:12	38:17	4	
label	39:8	39:25	4	case VLC_CODEC_S8 :
label	40:8	40:25	4	case VLC_CODEC_U8 :
water	41:12	0:0	4	p_sys
op	41:17	0:0	4	->
water	41:19	0:0	4	fmt
op	41:22	0:0	4	.
water	41:23	0:0	4	audio
op	41:28	0:0	4	.
water	41:29	0:0	4	i_bitspersample
op	41:45	0:0	4	=
water	41:47	0:0	4	8
water	41:48	0:0	4	;
break	42:12	42:17	4	
label	43:8	43:15	4	default :
call	44:12	45:48	4	msg_Err
arg	44:21	44:28	5	p_demux
water	44:21	0:0	6	p_demux
arg	44:30	44:59	5	"unknown fourcc format %4.4s"
water	44:30	0:0	6	"unknown fourcc format %4.4s"
arg	45:21	45:48	5	(char*)&p_sys->fmt.i_codec
water	45:21	0:0	6	(
water	45:22	0:0	6	char
op	45:27	0:0	6	*
water	45:28	0:0	6	)
op	45:29	0:0	6	&
water	45:30	0:0	6	p_sys
op	45:35	0:0	6	->
water	45:37	0:0	6	fmt
op	45:40	0:0	6	.
water	45:41	0:0	6	i_codec
water	45:49	0:0	4	;
call	46:12	46:41	4	es_format_Clean
arg	46:29	46:41	5	&p_sys->fmt
op	46:29	0:0	6	&
water	46:30	0:0	6	p_sys
op	46:35	0:0	6	->
water	46:37	0:0	6	fmt
water	46:42	0:0	4	;
call	47:12	47:24	4	free
arg	47:18	47:24	5	p_sys
water	47:18	0:0	6	p_sys
water	47:25	0:0	4	;
return	48:12	48:31	4	VLC_EGENERIC
water	48:19	0:0	5	VLC_EGENERIC
water	49:4	0:0	4	}
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	fmt
op	50:14	0:0	2	.
water	50:15	0:0	2	psz_language
op	50:28	0:0	2	=
call	50:30	50:74	2	var_CreateGetString
arg	50:51	50:58	3	p_demux
water	50:51	0:0	4	p_demux
arg	50:60	50:74	3	"rawaud-lang"
water	50:60	0:0	4	"rawaud-lang"
water	50:75	0:0	2	;
water	51:4	0:0	2	p_sys
op	51:9	0:0	2	->
water	51:11	0:0	2	fmt
op	51:14	0:0	2	.
water	51:15	0:0	2	audio
op	51:20	0:0	2	.
water	51:21	0:0	2	i_channels
op	51:32	0:0	2	=
call	51:34	51:83	2	var_CreateGetInteger
arg	51:56	51:63	3	p_demux
water	51:56	0:0	4	p_demux
arg	51:65	51:83	3	"rawaud-channels"
water	51:65	0:0	4	"rawaud-channels"
water	51:84	0:0	2	;
water	52:4	0:0	2	p_sys
op	52:9	0:0	2	->
water	52:11	0:0	2	fmt
op	52:14	0:0	2	.
water	52:15	0:0	2	audio
op	52:20	0:0	2	.
water	52:21	0:0	2	i_rate
op	52:28	0:0	2	=
call	52:30	52:81	2	var_CreateGetInteger
arg	52:52	52:59	3	p_demux
water	52:52	0:0	4	p_demux
arg	52:61	52:81	3	"rawaud-samplerate"
water	52:61	0:0	4	"rawaud-samplerate"
water	52:82	0:0	2	;
if	53:4	59:4	2	(p_sys -> fmt . audio . i_rate <= 0)
cond	53:8	53:35	3	p_sys -> fmt . audio . i_rate <= 0
water	53:8	0:0	4	p_sys
op	53:13	0:0	4	->
water	53:15	0:0	4	fmt
op	53:18	0:0	4	.
water	53:19	0:0	4	audio
op	53:24	0:0	4	.
water	53:25	0:0	4	i_rate
op	53:32	0:0	4	<=
water	53:35	0:0	4	0
stmts	54:4	59:4	3	
water	54:4	0:0	4	{
call	55:6	55:45	4	msg_Err
arg	55:15	55:22	5	p_demux
water	55:15	0:0	6	p_demux
arg	55:24	55:45	5	"invalid sample rate"
water	55:24	0:0	6	"invalid sample rate"
water	55:46	0:0	4	;
call	56:6	56:35	4	es_format_Clean
arg	56:23	56:35	5	&p_sys->fmt
op	56:23	0:0	6	&
water	56:24	0:0	6	p_sys
op	56:29	0:0	6	->
water	56:31	0:0	6	fmt
water	56:36	0:0	4	;
call	57:6	57:18	4	free
arg	57:12	57:18	5	p_sys
water	57:12	0:0	6	p_sys
water	57:19	0:0	4	;
return	58:6	58:25	4	VLC_EGENERIC
water	58:13	0:0	5	VLC_EGENERIC
water	59:4	0:0	4	}
if	60:4	66:4	2	(p_sys -> fmt . audio . i_channels <= 0)
cond	60:8	60:39	3	p_sys -> fmt . audio . i_channels <= 0
water	60:8	0:0	4	p_sys
op	60:13	0:0	4	->
water	60:15	0:0	4	fmt
op	60:18	0:0	4	.
water	60:19	0:0	4	audio
op	60:24	0:0	4	.
water	60:25	0:0	4	i_channels
op	60:36	0:0	4	<=
water	60:39	0:0	4	0
stmts	61:4	66:4	3	
water	61:4	0:0	4	{
call	62:6	62:52	4	msg_Err
arg	62:15	62:22	5	p_demux
water	62:15	0:0	6	p_demux
arg	62:24	62:52	5	"invalid number of channels"
water	62:24	0:0	6	"invalid number of channels"
water	62:53	0:0	4	;
call	63:6	63:35	4	es_format_Clean
arg	63:23	63:35	5	&p_sys->fmt
op	63:23	0:0	6	&
water	63:24	0:0	6	p_sys
op	63:29	0:0	6	->
water	63:31	0:0	6	fmt
water	63:36	0:0	4	;
call	64:6	64:18	4	free
arg	64:12	64:18	5	p_sys
water	64:12	0:0	6	p_sys
water	64:19	0:0	4	;
return	65:6	65:25	4	VLC_EGENERIC
water	65:13	0:0	5	VLC_EGENERIC
water	66:4	0:0	4	}
water	67:4	0:0	2	p_sys
op	67:9	0:0	2	->
water	67:11	0:0	2	fmt
op	67:14	0:0	2	.
water	67:15	0:0	2	i_bitrate
op	67:25	0:0	2	=
water	67:27	0:0	2	p_sys
op	67:32	0:0	2	->
water	67:34	0:0	2	fmt
op	67:37	0:0	2	.
water	67:38	0:0	2	audio
op	67:43	0:0	2	.
water	67:44	0:0	2	i_rate
op	67:51	0:0	2	*
water	68:27	0:0	2	p_sys
op	68:32	0:0	2	->
water	68:34	0:0	2	fmt
op	68:37	0:0	2	.
water	68:38	0:0	2	audio
op	68:43	0:0	2	.
water	68:44	0:0	2	i_channels
op	68:55	0:0	2	*
water	69:27	0:0	2	p_sys
op	69:32	0:0	2	->
water	69:34	0:0	2	fmt
op	69:37	0:0	2	.
water	69:38	0:0	2	audio
op	69:43	0:0	2	.
water	69:44	0:0	2	i_bitspersample
water	69:59	0:0	2	;
call	70:4	76:25	2	msg_Dbg
arg	70:13	70:20	3	p_demux
water	70:13	0:0	4	p_demux
arg	71:5	71:113	3	"format initialized: channels=%d , samplerate=%d Hz, fourcc=%4.4s, bits per sample = %d, bitrate = %d bit/s"
water	71:5	0:0	4	"format initialized: channels=%d , samplerate=%d Hz, fourcc=%4.4s, bits per sample = %d, bitrate = %d bit/s"
arg	72:5	72:32	3	p_sys->fmt.audio.i_channels
water	72:5	0:0	4	p_sys
op	72:10	0:0	4	->
water	72:12	0:0	4	fmt
op	72:15	0:0	4	.
water	72:16	0:0	4	audio
op	72:21	0:0	4	.
water	72:22	0:0	4	i_channels
arg	73:5	73:28	3	p_sys->fmt.audio.i_rate
water	73:5	0:0	4	p_sys
op	73:10	0:0	4	->
water	73:12	0:0	4	fmt
op	73:15	0:0	4	.
water	73:16	0:0	4	audio
op	73:21	0:0	4	.
water	73:22	0:0	4	i_rate
arg	74:5	74:31	3	(char*)&p_sys->fmt.i_codec
water	74:5	0:0	4	(
water	74:6	0:0	4	char
op	74:10	0:0	4	*
water	74:11	0:0	4	)
op	74:12	0:0	4	&
water	74:13	0:0	4	p_sys
op	74:18	0:0	4	->
water	74:20	0:0	4	fmt
op	74:23	0:0	4	.
water	74:24	0:0	4	i_codec
arg	75:5	75:37	3	p_sys->fmt.audio.i_bitspersample
water	75:5	0:0	4	p_sys
op	75:10	0:0	4	->
water	75:12	0:0	4	fmt
op	75:15	0:0	4	.
water	75:16	0:0	4	audio
op	75:21	0:0	4	.
water	75:22	0:0	4	i_bitspersample
arg	76:5	76:25	3	p_sys->fmt.i_bitrate
water	76:5	0:0	4	p_sys
op	76:10	0:0	4	->
water	76:12	0:0	4	fmt
op	76:15	0:0	4	.
water	76:16	0:0	4	i_bitrate
water	76:26	0:0	2	;
water	78:4	0:0	2	p_sys
op	78:9	0:0	2	->
water	78:11	0:0	2	p_es
op	78:16	0:0	2	=
call	78:18	78:56	2	es_out_Add
arg	78:30	78:42	3	p_demux->out
water	78:30	0:0	4	p_demux
op	78:37	0:0	4	->
water	78:39	0:0	4	out
arg	78:44	78:56	3	&p_sys->fmt
op	78:44	0:0	4	&
water	78:45	0:0	4	p_sys
op	78:50	0:0	4	->
water	78:52	0:0	4	fmt
water	78:57	0:0	2	;
call	79:4	79:47	2	msg_Dbg
arg	79:13	79:20	3	p_demux
water	79:13	0:0	4	p_demux
arg	79:22	79:47	3	"elementary stream added"
water	79:22	0:0	4	"elementary stream added"
water	79:48	0:0	2	;
call	81:4	81:55	2	date_Init
arg	81:15	81:26	3	&p_sys->pts
op	81:15	0:0	4	&
water	81:16	0:0	4	p_sys
op	81:21	0:0	4	->
water	81:23	0:0	4	pts
arg	81:28	81:51	3	p_sys->fmt.audio.i_rate
water	81:28	0:0	4	p_sys
op	81:33	0:0	4	->
water	81:35	0:0	4	fmt
op	81:38	0:0	4	.
water	81:39	0:0	4	audio
op	81:44	0:0	4	.
water	81:45	0:0	4	i_rate
arg	81:53	81:55	3	1
water	81:53	0:0	4	1
water	81:56	0:0	2	;
call	82:4	82:29	2	date_Set
arg	82:14	82:25	3	&p_sys->pts
op	82:14	0:0	4	&
water	82:15	0:0	4	p_sys
op	82:20	0:0	4	->
water	82:22	0:0	4	pts
arg	82:27	82:29	3	0
water	82:27	0:0	4	0
water	82:30	0:0	2	;
water	84:4	0:0	2	p_sys
op	84:9	0:0	2	->
water	84:11	0:0	2	i_frame_samples
op	84:27	0:0	2	=
call	84:29	84:68	2	__MAX
arg	84:36	84:64	3	p_sys->fmt.audio.i_rate/20
water	84:36	0:0	4	p_sys
op	84:41	0:0	4	->
water	84:43	0:0	4	fmt
op	84:46	0:0	4	.
water	84:47	0:0	4	audio
op	84:52	0:0	4	.
water	84:53	0:0	4	i_rate
op	84:60	0:0	4	/
water	84:62	0:0	4	20
arg	84:66	84:68	3	1
water	84:66	0:0	4	1
water	84:69	0:0	2	;
water	85:4	0:0	2	p_sys
op	85:9	0:0	2	->
water	85:11	0:0	2	i_seek_step
op	85:23	0:0	2	=
water	85:25	0:0	2	p_sys
op	85:30	0:0	2	->
water	85:32	0:0	2	fmt
op	85:35	0:0	2	.
water	85:36	0:0	2	audio
op	85:41	0:0	2	.
water	85:42	0:0	2	i_channels
op	85:53	0:0	2	*
water	86:26	0:0	2	(
water	86:28	0:0	2	(
water	86:29	0:0	2	p_sys
op	86:34	0:0	2	->
water	86:36	0:0	2	fmt
op	86:39	0:0	2	.
water	86:40	0:0	2	audio
op	86:45	0:0	2	.
water	86:46	0:0	2	i_bitspersample
op	86:62	0:0	2	+
water	86:64	0:0	2	7
water	86:65	0:0	2	)
op	86:67	0:0	2	/
water	86:69	0:0	2	8
water	86:71	0:0	2	)
water	86:72	0:0	2	;
water	87:4	0:0	2	p_sys
op	87:9	0:0	2	->
water	87:11	0:0	2	i_frame_size
op	87:24	0:0	2	=
water	87:26	0:0	2	p_sys
op	87:31	0:0	2	->
water	87:33	0:0	2	i_frame_samples
op	87:49	0:0	2	*
water	87:51	0:0	2	p_sys
op	87:56	0:0	2	->
water	87:58	0:0	2	i_seek_step
water	87:69	0:0	2	;
call	88:4	88:68	2	msg_Dbg
arg	88:13	88:20	3	p_demux
water	88:13	0:0	4	p_demux
arg	88:22	88:47	3	"frame size is %d bytes "
water	88:22	0:0	4	"frame size is %d bytes "
arg	88:49	88:68	3	p_sys->i_frame_size
water	88:49	0:0	4	p_sys
op	88:54	0:0	4	->
water	88:56	0:0	4	i_frame_size
water	88:69	0:0	2	;
water	89:4	0:0	2	p_demux
op	89:11	0:0	2	->
water	89:13	0:0	2	pf_demux
op	89:24	0:0	2	=
water	89:26	0:0	2	Demux
water	89:31	0:0	2	;
water	90:4	0:0	2	p_demux
op	90:11	0:0	2	->
water	90:13	0:0	2	pf_control
op	90:24	0:0	2	=
water	90:26	0:0	2	Control
water	90:33	0:0	2	;
return	91:4	91:22	2	VLC_SUCCESS
water	91:11	0:0	3	VLC_SUCCESS

func	2:0	127:0	0	static int	FrontendInfo
params	2:23	0:0	1	
param	2:25	2:44	2	access_t *	p_access
stmnts	0:0	126:22	1	
decl	4:4	4:41	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_access
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:46	2	frontend_t	*p_frontend
op	5:27	0:0	2	=
water	5:29	0:0	2	p_sys
op	5:34	0:0	2	->
water	5:36	0:0	2	p_frontend
if	7:4	12:4	2	(ioctl (p_sys -> i_frontend_handle ,FE_GET_INFO ,& p_frontend -> info ) < 0)
cond	7:8	7:76	3	ioctl (p_sys -> i_frontend_handle ,FE_GET_INFO ,& p_frontend -> info ) < 0
call	7:8	7:72	4	ioctl
arg	7:15	7:39	5	p_sys->i_frontend_handle
water	7:15	0:0	6	p_sys
op	7:20	0:0	6	->
water	7:22	0:0	6	i_frontend_handle
arg	7:41	7:52	5	FE_GET_INFO
water	7:41	0:0	6	FE_GET_INFO
arg	7:54	7:72	5	&p_frontend->info
op	7:54	0:0	6	&
water	7:55	0:0	6	p_frontend
op	7:65	0:0	6	->
water	7:67	0:0	6	info
op	7:74	0:0	4	<
water	7:76	0:0	4	0
stmts	8:4	12:4	3	
water	8:4	0:0	4	{
call	9:8	10:39	4	msg_Err
arg	9:17	9:25	5	p_access
water	9:17	0:0	6	p_access
arg	9:27	9:60	5	"frontend info request error: %s"
water	9:27	0:0	6	"frontend info request error: %s"
arg	10:17	10:39	5	vlc_strerror_c(errno)
call	10:17	10:37	6	vlc_strerror_c
arg	10:32	10:37	7	errno
water	10:32	0:0	8	errno
water	10:40	0:0	4	;
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
water	12:4	0:0	4	}
call	14:4	14:39	2	msg_Dbg
arg	14:12	14:20	3	p_access
water	14:12	0:0	4	p_access
arg	14:22	14:39	3	"Frontend Info:"
water	14:22	0:0	4	"Frontend Info:"
water	14:40	0:0	2	;
call	15:4	15:59	2	msg_Dbg
arg	15:12	15:20	3	p_access
water	15:12	0:0	4	p_access
arg	15:22	15:35	3	"  name = %s"
water	15:22	0:0	4	"  name = %s"
arg	15:37	15:59	3	p_frontend->info.name
water	15:37	0:0	4	p_frontend
op	15:47	0:0	4	->
water	15:49	0:0	4	info
op	15:53	0:0	4	.
water	15:54	0:0	4	name
water	15:60	0:0	2	;
switch	16:4	42:4	2	(p_frontend -> info . type)
cond	16:12	16:29	3	p_frontend -> info . type
water	16:12	0:0	4	p_frontend
op	16:22	0:0	4	->
water	16:24	0:0	4	info
op	16:28	0:0	4	.
water	16:29	0:0	4	type
stmts	17:4	42:4	3	
water	17:4	0:0	4	{
label	18:8	18:20	4	case FE_QPSK :
call	19:12	19:55	4	msg_Dbg
arg	19:21	19:29	5	p_access
water	19:21	0:0	6	p_access
arg	19:31	19:55	5	"  type = QPSK (DVB-S)"
water	19:31	0:0	6	"  type = QPSK (DVB-S)"
water	19:56	0:0	4	;
break	20:12	20:17	4	
label	21:8	21:19	4	case FE_QAM :
call	22:12	22:54	4	msg_Dbg
arg	22:21	22:29	5	p_access
water	22:21	0:0	6	p_access
arg	22:31	22:54	5	"  type = QAM (DVB-C)"
water	22:31	0:0	6	"  type = QAM (DVB-C)"
water	22:55	0:0	4	;
break	23:12	23:17	4	
label	24:8	24:20	4	case FE_OFDM :
call	25:12	25:55	4	msg_Dbg
arg	25:21	25:29	5	p_access
water	25:21	0:0	6	p_access
arg	25:31	25:55	5	"  type = OFDM (DVB-T)"
water	25:31	0:0	6	"  type = OFDM (DVB-T)"
water	25:56	0:0	4	;
break	26:12	26:17	4	
label	27:8	27:20	4	case FE_ATSC :
call	28:12	28:53	4	msg_Dbg
arg	28:21	28:29	5	p_access
water	28:21	0:0	6	p_access
arg	28:31	28:53	5	"  type = ATSC (USA)"
water	28:31	0:0	6	"  type = ATSC (USA)"
water	28:54	0:0	4	;
break	29:12	29:17	4	
label	31:8	31:22	4	case FE_MEMORY :
call	32:12	32:48	4	msg_Dbg
arg	32:20	32:28	5	p_access
water	32:20	0:0	6	p_access
arg	32:30	32:48	5	"  type = MEMORY"
water	32:30	0:0	6	"  type = MEMORY"
water	32:49	0:0	4	;
break	33:12	33:17	4	
label	34:8	34:19	4	case FE_NET :
call	35:12	35:49	4	msg_Dbg
arg	35:20	35:28	5	p_access
water	35:20	0:0	6	p_access
arg	35:30	35:49	5	"  type = NETWORK"
water	35:30	0:0	6	"  type = NETWORK"
water	35:50	0:0	4	;
break	36:12	36:17	4	
label	38:8	38:15	4	default :
call	39:12	40:43	4	msg_Err
arg	39:21	39:29	5	p_access
water	39:21	0:0	6	p_access
arg	39:31	39:61	5	"  unknown frontend type (%d)"
water	39:31	0:0	6	"  unknown frontend type (%d)"
arg	40:21	40:43	5	p_frontend->info.type
water	40:21	0:0	6	p_frontend
op	40:31	0:0	6	->
water	40:33	0:0	6	info
op	40:37	0:0	6	.
water	40:38	0:0	6	type
water	40:44	0:0	4	;
return	41:12	41:31	4	VLC_EGENERIC
water	41:19	0:0	5	VLC_EGENERIC
water	42:4	0:0	4	}
call	43:4	44:42	2	msg_Dbg
arg	43:12	43:20	3	p_access
water	43:12	0:0	4	p_access
arg	43:22	43:50	3	"  frequency_min = %u (kHz)"
water	43:22	0:0	4	"  frequency_min = %u (kHz)"
arg	44:12	44:42	3	p_frontend->info.frequency_min
water	44:12	0:0	4	p_frontend
op	44:22	0:0	4	->
water	44:24	0:0	4	info
op	44:28	0:0	4	.
water	44:29	0:0	4	frequency_min
water	44:43	0:0	2	;
call	45:4	46:42	2	msg_Dbg
arg	45:12	45:20	3	p_access
water	45:12	0:0	4	p_access
arg	45:22	45:50	3	"  frequency_max = %u (kHz)"
water	45:22	0:0	4	"  frequency_max = %u (kHz)"
arg	46:12	46:42	3	p_frontend->info.frequency_max
water	46:12	0:0	4	p_frontend
op	46:22	0:0	4	->
water	46:24	0:0	4	info
op	46:28	0:0	4	.
water	46:29	0:0	4	frequency_max
water	46:43	0:0	2	;
call	47:4	48:47	2	msg_Dbg
arg	47:12	47:20	3	p_access
water	47:12	0:0	4	p_access
arg	47:22	47:49	3	"  frequency_stepsize = %u"
water	47:22	0:0	4	"  frequency_stepsize = %u"
arg	48:12	48:47	3	p_frontend->info.frequency_stepsize
water	48:12	0:0	4	p_frontend
op	48:22	0:0	4	->
water	48:24	0:0	4	info
op	48:28	0:0	4	.
water	48:29	0:0	4	frequency_stepsize
water	48:48	0:0	2	;
call	49:4	50:48	2	msg_Dbg
arg	49:12	49:20	3	p_access
water	49:12	0:0	4	p_access
arg	49:22	49:50	3	"  frequency_tolerance = %u"
water	49:22	0:0	4	"  frequency_tolerance = %u"
arg	50:12	50:48	3	p_frontend->info.frequency_tolerance
water	50:12	0:0	4	p_frontend
op	50:22	0:0	4	->
water	50:24	0:0	4	info
op	50:28	0:0	4	.
water	50:29	0:0	4	frequency_tolerance
water	50:49	0:0	2	;
call	51:4	52:44	2	msg_Dbg
arg	51:12	51:20	3	p_access
water	51:12	0:0	4	p_access
arg	51:22	51:52	3	"  symbol_rate_min = %u (kHz)"
water	51:22	0:0	4	"  symbol_rate_min = %u (kHz)"
arg	52:12	52:44	3	p_frontend->info.symbol_rate_min
water	52:12	0:0	4	p_frontend
op	52:22	0:0	4	->
water	52:24	0:0	4	info
op	52:28	0:0	4	.
water	52:29	0:0	4	symbol_rate_min
water	52:45	0:0	2	;
call	53:4	54:44	2	msg_Dbg
arg	53:12	53:20	3	p_access
water	53:12	0:0	4	p_access
arg	53:22	53:52	3	"  symbol_rate_max = %u (kHz)"
water	53:22	0:0	4	"  symbol_rate_max = %u (kHz)"
arg	54:12	54:44	3	p_frontend->info.symbol_rate_max
water	54:12	0:0	4	p_frontend
op	54:22	0:0	4	->
water	54:24	0:0	4	info
op	54:28	0:0	4	.
water	54:29	0:0	4	symbol_rate_max
water	54:45	0:0	2	;
call	55:4	56:50	2	msg_Dbg
arg	55:12	55:20	3	p_access
water	55:12	0:0	4	p_access
arg	55:22	55:58	3	"  symbol_rate_tolerance (ppm) = %u"
water	55:22	0:0	4	"  symbol_rate_tolerance (ppm) = %u"
arg	56:12	56:50	3	p_frontend->info.symbol_rate_tolerance
water	56:12	0:0	4	p_frontend
op	56:22	0:0	4	->
water	56:24	0:0	4	info
op	56:28	0:0	4	.
water	56:29	0:0	4	symbol_rate_tolerance
water	56:51	0:0	2	;
call	57:4	58:44	2	msg_Dbg
arg	57:12	57:20	3	p_access
water	57:12	0:0	4	p_access
arg	57:22	57:50	3	"  notifier_delay (ms) = %u"
water	57:22	0:0	4	"  notifier_delay (ms) = %u"
arg	58:12	58:44	3	p_frontend->info.notifier_delay
water	58:12	0:0	4	p_frontend
op	58:22	0:0	4	->
water	58:24	0:0	4	info
op	58:28	0:0	4	.
water	58:29	0:0	4	notifier_delay
water	58:45	0:0	2	;
call	59:4	59:54	2	msg_Dbg
arg	59:12	59:20	3	p_access
water	59:12	0:0	4	p_access
arg	59:22	59:54	3	"Frontend Info capability list:"
water	59:22	0:0	4	"Frontend Info capability list:"
water	59:55	0:0	2	;
if	60:4	61:68	2	(p_frontend -> info . caps == FE_IS_STUPID)
cond	60:8	60:33	3	p_frontend -> info . caps == FE_IS_STUPID
water	60:8	0:0	4	p_frontend
op	60:18	0:0	4	->
water	60:20	0:0	4	info
op	60:24	0:0	4	.
water	60:25	0:0	4	caps
op	60:30	0:0	4	==
water	60:33	0:0	4	FE_IS_STUPID
stmts	61:8	61:68	3	
call	61:8	61:67	4	msg_Dbg
arg	61:16	61:24	5	p_access
water	61:16	0:0	6	p_access
arg	61:26	61:67	5	"  no capabilities - frontend is stupid!"
water	61:26	0:0	6	"  no capabilities - frontend is stupid!"
water	61:68	0:0	4	;
if	62:4	63:45	2	(p_frontend -> info . caps & FE_CAN_INVERSION_AUTO)
cond	62:8	62:32	3	p_frontend -> info . caps & FE_CAN_INVERSION_AUTO
water	62:8	0:0	4	p_frontend
op	62:18	0:0	4	->
water	62:20	0:0	4	info
op	62:24	0:0	4	.
water	62:25	0:0	4	caps
op	62:30	0:0	4	&
water	62:32	0:0	4	FE_CAN_INVERSION_AUTO
stmts	63:8	63:45	3	
call	63:8	63:44	4	msg_Dbg
arg	63:16	63:24	5	p_access
water	63:16	0:0	6	p_access
arg	63:26	63:44	5	"  inversion auto"
water	63:26	0:0	6	"  inversion auto"
water	63:45	0:0	4	;
if	64:4	65:59	2	(p_frontend -> info . caps & FE_CAN_FEC_1_2)
cond	64:8	64:32	3	p_frontend -> info . caps & FE_CAN_FEC_1_2
water	64:8	0:0	4	p_frontend
op	64:18	0:0	4	->
water	64:20	0:0	4	info
op	64:24	0:0	4	.
water	64:25	0:0	4	caps
op	64:30	0:0	4	&
water	64:32	0:0	4	FE_CAN_FEC_1_2
stmts	65:8	65:59	3	
call	65:8	65:58	4	msg_Dbg
arg	65:16	65:24	5	p_access
water	65:16	0:0	6	p_access
arg	65:26	65:58	5	"  forward error correction 1/2"
water	65:26	0:0	6	"  forward error correction 1/2"
water	65:59	0:0	4	;
if	66:4	67:59	2	(p_frontend -> info . caps & FE_CAN_FEC_2_3)
cond	66:8	66:32	3	p_frontend -> info . caps & FE_CAN_FEC_2_3
water	66:8	0:0	4	p_frontend
op	66:18	0:0	4	->
water	66:20	0:0	4	info
op	66:24	0:0	4	.
water	66:25	0:0	4	caps
op	66:30	0:0	4	&
water	66:32	0:0	4	FE_CAN_FEC_2_3
stmts	67:8	67:59	3	
call	67:8	67:58	4	msg_Dbg
arg	67:16	67:24	5	p_access
water	67:16	0:0	6	p_access
arg	67:26	67:58	5	"  forward error correction 2/3"
water	67:26	0:0	6	"  forward error correction 2/3"
water	67:59	0:0	4	;
if	68:4	69:59	2	(p_frontend -> info . caps & FE_CAN_FEC_3_4)
cond	68:8	68:32	3	p_frontend -> info . caps & FE_CAN_FEC_3_4
water	68:8	0:0	4	p_frontend
op	68:18	0:0	4	->
water	68:20	0:0	4	info
op	68:24	0:0	4	.
water	68:25	0:0	4	caps
op	68:30	0:0	4	&
water	68:32	0:0	4	FE_CAN_FEC_3_4
stmts	69:8	69:59	3	
call	69:8	69:58	4	msg_Dbg
arg	69:16	69:24	5	p_access
water	69:16	0:0	6	p_access
arg	69:26	69:58	5	"  forward error correction 3/4"
water	69:26	0:0	6	"  forward error correction 3/4"
water	69:59	0:0	4	;
if	70:4	71:59	2	(p_frontend -> info . caps & FE_CAN_FEC_4_5)
cond	70:8	70:32	3	p_frontend -> info . caps & FE_CAN_FEC_4_5
water	70:8	0:0	4	p_frontend
op	70:18	0:0	4	->
water	70:20	0:0	4	info
op	70:24	0:0	4	.
water	70:25	0:0	4	caps
op	70:30	0:0	4	&
water	70:32	0:0	4	FE_CAN_FEC_4_5
stmts	71:8	71:59	3	
call	71:8	71:58	4	msg_Dbg
arg	71:16	71:24	5	p_access
water	71:16	0:0	6	p_access
arg	71:26	71:58	5	"  forward error correction 4/5"
water	71:26	0:0	6	"  forward error correction 4/5"
water	71:59	0:0	4	;
if	72:4	73:59	2	(p_frontend -> info . caps & FE_CAN_FEC_5_6)
cond	72:8	72:32	3	p_frontend -> info . caps & FE_CAN_FEC_5_6
water	72:8	0:0	4	p_frontend
op	72:18	0:0	4	->
water	72:20	0:0	4	info
op	72:24	0:0	4	.
water	72:25	0:0	4	caps
op	72:30	0:0	4	&
water	72:32	0:0	4	FE_CAN_FEC_5_6
stmts	73:8	73:59	3	
call	73:8	73:58	4	msg_Dbg
arg	73:16	73:24	5	p_access
water	73:16	0:0	6	p_access
arg	73:26	73:58	5	"  forward error correction 5/6"
water	73:26	0:0	6	"  forward error correction 5/6"
water	73:59	0:0	4	;
if	74:4	75:59	2	(p_frontend -> info . caps & FE_CAN_FEC_6_7)
cond	74:8	74:32	3	p_frontend -> info . caps & FE_CAN_FEC_6_7
water	74:8	0:0	4	p_frontend
op	74:18	0:0	4	->
water	74:20	0:0	4	info
op	74:24	0:0	4	.
water	74:25	0:0	4	caps
op	74:30	0:0	4	&
water	74:32	0:0	4	FE_CAN_FEC_6_7
stmts	75:8	75:59	3	
call	75:8	75:58	4	msg_Dbg
arg	75:16	75:24	5	p_access
water	75:16	0:0	6	p_access
arg	75:26	75:58	5	"  forward error correction 6/7"
water	75:26	0:0	6	"  forward error correction 6/7"
water	75:59	0:0	4	;
if	76:4	77:59	2	(p_frontend -> info . caps & FE_CAN_FEC_7_8)
cond	76:8	76:32	3	p_frontend -> info . caps & FE_CAN_FEC_7_8
water	76:8	0:0	4	p_frontend
op	76:18	0:0	4	->
water	76:20	0:0	4	info
op	76:24	0:0	4	.
water	76:25	0:0	4	caps
op	76:30	0:0	4	&
water	76:32	0:0	4	FE_CAN_FEC_7_8
stmts	77:8	77:59	3	
call	77:8	77:58	4	msg_Dbg
arg	77:16	77:24	5	p_access
water	77:16	0:0	6	p_access
arg	77:26	77:58	5	"  forward error correction 7/8"
water	77:26	0:0	6	"  forward error correction 7/8"
water	77:59	0:0	4	;
if	78:4	79:59	2	(p_frontend -> info . caps & FE_CAN_FEC_8_9)
cond	78:8	78:32	3	p_frontend -> info . caps & FE_CAN_FEC_8_9
water	78:8	0:0	4	p_frontend
op	78:18	0:0	4	->
water	78:20	0:0	4	info
op	78:24	0:0	4	.
water	78:25	0:0	4	caps
op	78:30	0:0	4	&
water	78:32	0:0	4	FE_CAN_FEC_8_9
stmts	79:8	79:59	3	
call	79:8	79:58	4	msg_Dbg
arg	79:16	79:24	5	p_access
water	79:16	0:0	6	p_access
arg	79:26	79:58	5	"  forward error correction 8/9"
water	79:26	0:0	6	"  forward error correction 8/9"
water	79:59	0:0	4	;
if	80:4	81:60	2	(p_frontend -> info . caps & FE_CAN_FEC_AUTO)
cond	80:8	80:32	3	p_frontend -> info . caps & FE_CAN_FEC_AUTO
water	80:8	0:0	4	p_frontend
op	80:18	0:0	4	->
water	80:20	0:0	4	info
op	80:24	0:0	4	.
water	80:25	0:0	4	caps
op	80:30	0:0	4	&
water	80:32	0:0	4	FE_CAN_FEC_AUTO
stmts	81:8	81:60	3	
call	81:8	81:59	4	msg_Dbg
arg	81:16	81:24	5	p_access
water	81:16	0:0	6	p_access
arg	81:26	81:59	5	"  forward error correction auto"
water	81:26	0:0	6	"  forward error correction auto"
water	81:60	0:0	4	;
if	82:4	83:46	2	(p_frontend -> info . caps & FE_CAN_QPSK)
cond	82:8	82:32	3	p_frontend -> info . caps & FE_CAN_QPSK
water	82:8	0:0	4	p_frontend
op	82:18	0:0	4	->
water	82:20	0:0	4	info
op	82:24	0:0	4	.
water	82:25	0:0	4	caps
op	82:30	0:0	4	&
water	82:32	0:0	4	FE_CAN_QPSK
stmts	83:8	83:46	3	
call	83:8	83:45	4	msg_Dbg
arg	83:16	83:24	5	p_access
water	83:16	0:0	6	p_access
arg	83:26	83:45	5	"  QPSK modulation"
water	83:26	0:0	6	"  QPSK modulation"
water	83:46	0:0	4	;
if	84:4	85:48	2	(p_frontend -> info . caps & FE_CAN_QAM_16)
cond	84:8	84:32	3	p_frontend -> info . caps & FE_CAN_QAM_16
water	84:8	0:0	4	p_frontend
op	84:18	0:0	4	->
water	84:20	0:0	4	info
op	84:24	0:0	4	.
water	84:25	0:0	4	caps
op	84:30	0:0	4	&
water	84:32	0:0	4	FE_CAN_QAM_16
stmts	85:8	85:48	3	
call	85:8	85:47	4	msg_Dbg
arg	85:16	85:24	5	p_access
water	85:16	0:0	6	p_access
arg	85:26	85:47	5	"  QAM 16 modulation"
water	85:26	0:0	6	"  QAM 16 modulation"
water	85:48	0:0	4	;
if	86:4	87:48	2	(p_frontend -> info . caps & FE_CAN_QAM_32)
cond	86:8	86:32	3	p_frontend -> info . caps & FE_CAN_QAM_32
water	86:8	0:0	4	p_frontend
op	86:18	0:0	4	->
water	86:20	0:0	4	info
op	86:24	0:0	4	.
water	86:25	0:0	4	caps
op	86:30	0:0	4	&
water	86:32	0:0	4	FE_CAN_QAM_32
stmts	87:8	87:48	3	
call	87:8	87:47	4	msg_Dbg
arg	87:16	87:24	5	p_access
water	87:16	0:0	6	p_access
arg	87:26	87:47	5	"  QAM 32 modulation"
water	87:26	0:0	6	"  QAM 32 modulation"
water	87:48	0:0	4	;
if	88:4	89:48	2	(p_frontend -> info . caps & FE_CAN_QAM_64)
cond	88:8	88:32	3	p_frontend -> info . caps & FE_CAN_QAM_64
water	88:8	0:0	4	p_frontend
op	88:18	0:0	4	->
water	88:20	0:0	4	info
op	88:24	0:0	4	.
water	88:25	0:0	4	caps
op	88:30	0:0	4	&
water	88:32	0:0	4	FE_CAN_QAM_64
stmts	89:8	89:48	3	
call	89:8	89:47	4	msg_Dbg
arg	89:16	89:24	5	p_access
water	89:16	0:0	6	p_access
arg	89:26	89:47	5	"  QAM 64 modulation"
water	89:26	0:0	6	"  QAM 64 modulation"
water	89:48	0:0	4	;
if	90:4	91:49	2	(p_frontend -> info . caps & FE_CAN_QAM_128)
cond	90:8	90:32	3	p_frontend -> info . caps & FE_CAN_QAM_128
water	90:8	0:0	4	p_frontend
op	90:18	0:0	4	->
water	90:20	0:0	4	info
op	90:24	0:0	4	.
water	90:25	0:0	4	caps
op	90:30	0:0	4	&
water	90:32	0:0	4	FE_CAN_QAM_128
stmts	91:8	91:49	3	
call	91:8	91:48	4	msg_Dbg
arg	91:16	91:24	5	p_access
water	91:16	0:0	6	p_access
arg	91:26	91:48	5	"  QAM 128 modulation"
water	91:26	0:0	6	"  QAM 128 modulation"
water	91:49	0:0	4	;
if	92:4	93:49	2	(p_frontend -> info . caps & FE_CAN_QAM_256)
cond	92:8	92:32	3	p_frontend -> info . caps & FE_CAN_QAM_256
water	92:8	0:0	4	p_frontend
op	92:18	0:0	4	->
water	92:20	0:0	4	info
op	92:24	0:0	4	.
water	92:25	0:0	4	caps
op	92:30	0:0	4	&
water	92:32	0:0	4	FE_CAN_QAM_256
stmts	93:8	93:49	3	
call	93:8	93:48	4	msg_Dbg
arg	93:16	93:24	5	p_access
water	93:16	0:0	6	p_access
arg	93:26	93:48	5	"  QAM 256 modulation"
water	93:26	0:0	6	"  QAM 256 modulation"
water	93:49	0:0	4	;
if	94:4	95:50	2	(p_frontend -> info . caps & FE_CAN_QAM_AUTO)
cond	94:8	94:32	3	p_frontend -> info . caps & FE_CAN_QAM_AUTO
water	94:8	0:0	4	p_frontend
op	94:18	0:0	4	->
water	94:20	0:0	4	info
op	94:24	0:0	4	.
water	94:25	0:0	4	caps
op	94:30	0:0	4	&
water	94:32	0:0	4	FE_CAN_QAM_AUTO
stmts	95:8	95:50	3	
call	95:8	95:49	4	msg_Dbg
arg	95:16	95:24	5	p_access
water	95:16	0:0	6	p_access
arg	95:26	95:49	5	"  QAM auto modulation"
water	95:26	0:0	6	"  QAM auto modulation"
water	95:50	0:0	4	;
if	96:4	97:53	2	(p_frontend -> info . caps & FE_CAN_TRANSMISSION_MODE_AUTO)
cond	96:8	96:32	3	p_frontend -> info . caps & FE_CAN_TRANSMISSION_MODE_AUTO
water	96:8	0:0	4	p_frontend
op	96:18	0:0	4	->
water	96:20	0:0	4	info
op	96:24	0:0	4	.
water	96:25	0:0	4	caps
op	96:30	0:0	4	&
water	96:32	0:0	4	FE_CAN_TRANSMISSION_MODE_AUTO
stmts	97:8	97:53	3	
call	97:8	97:52	4	msg_Dbg
arg	97:16	97:24	5	p_access
water	97:16	0:0	6	p_access
arg	97:26	97:52	5	"  transmission mode auto"
water	97:26	0:0	6	"  transmission mode auto"
water	97:53	0:0	4	;
if	98:4	99:50	2	(p_frontend -> info . caps & FE_CAN_BANDWIDTH_AUTO)
cond	98:8	98:32	3	p_frontend -> info . caps & FE_CAN_BANDWIDTH_AUTO
water	98:8	0:0	4	p_frontend
op	98:18	0:0	4	->
water	98:20	0:0	4	info
op	98:24	0:0	4	.
water	98:25	0:0	4	caps
op	98:30	0:0	4	&
water	98:32	0:0	4	FE_CAN_BANDWIDTH_AUTO
stmts	99:8	99:50	3	
call	99:8	99:49	4	msg_Dbg
arg	99:16	99:24	5	p_access
water	99:16	0:0	6	p_access
arg	99:26	99:49	5	"  bandwidth mode auto"
water	99:26	0:0	6	"  bandwidth mode auto"
water	99:50	0:0	4	;
if	100:4	101:55	2	(p_frontend -> info . caps & FE_CAN_GUARD_INTERVAL_AUTO)
cond	100:8	100:32	3	p_frontend -> info . caps & FE_CAN_GUARD_INTERVAL_AUTO
water	100:8	0:0	4	p_frontend
op	100:18	0:0	4	->
water	100:20	0:0	4	info
op	100:24	0:0	4	.
water	100:25	0:0	4	caps
op	100:30	0:0	4	&
water	100:32	0:0	4	FE_CAN_GUARD_INTERVAL_AUTO
stmts	101:8	101:55	3	
call	101:8	101:54	4	msg_Dbg
arg	101:16	101:24	5	p_access
water	101:16	0:0	6	p_access
arg	101:26	101:54	5	"  guard interval mode auto"
water	101:26	0:0	6	"  guard interval mode auto"
water	101:55	0:0	4	;
if	102:4	103:50	2	(p_frontend -> info . caps & FE_CAN_HIERARCHY_AUTO)
cond	102:8	102:32	3	p_frontend -> info . caps & FE_CAN_HIERARCHY_AUTO
water	102:8	0:0	4	p_frontend
op	102:18	0:0	4	->
water	102:20	0:0	4	info
op	102:24	0:0	4	.
water	102:25	0:0	4	caps
op	102:30	0:0	4	&
water	102:32	0:0	4	FE_CAN_HIERARCHY_AUTO
stmts	103:8	103:50	3	
call	103:8	103:49	4	msg_Dbg
arg	103:16	103:24	5	p_access
water	103:16	0:0	6	p_access
arg	103:26	103:49	5	"  hierarchy mode auto"
water	103:26	0:0	6	"  hierarchy mode auto"
water	103:50	0:0	4	;
if	104:4	105:53	2	(p_frontend -> info . caps & FE_CAN_8VSB)
cond	104:8	104:32	3	p_frontend -> info . caps & FE_CAN_8VSB
water	104:8	0:0	4	p_frontend
op	104:18	0:0	4	->
water	104:20	0:0	4	info
op	104:24	0:0	4	.
water	104:25	0:0	4	caps
op	104:30	0:0	4	&
water	104:32	0:0	4	FE_CAN_8VSB
stmts	105:8	105:53	3	
call	105:8	105:52	4	msg_Dbg
arg	105:16	105:24	5	p_access
water	105:16	0:0	6	p_access
arg	105:26	105:52	5	"  8-level VSB modulation"
water	105:26	0:0	6	"  8-level VSB modulation"
water	105:53	0:0	4	;
if	106:4	107:54	2	(p_frontend -> info . caps & FE_CAN_16VSB)
cond	106:8	106:32	3	p_frontend -> info . caps & FE_CAN_16VSB
water	106:8	0:0	4	p_frontend
op	106:18	0:0	4	->
water	106:20	0:0	4	info
op	106:24	0:0	4	.
water	106:25	0:0	4	caps
op	106:30	0:0	4	&
water	106:32	0:0	4	FE_CAN_16VSB
stmts	107:8	107:54	3	
call	107:8	107:53	4	msg_Dbg
arg	107:16	107:24	5	p_access
water	107:16	0:0	6	p_access
arg	107:26	107:53	5	"  16-level VSB modulation"
water	107:26	0:0	6	"  16-level VSB modulation"
water	107:54	0:0	4	;
if	108:4	109:52	2	(p_frontend -> info . caps & FE_HAS_EXTENDED_CAPS)
cond	108:8	108:32	3	p_frontend -> info . caps & FE_HAS_EXTENDED_CAPS
water	108:8	0:0	4	p_frontend
op	108:18	0:0	4	->
water	108:20	0:0	4	info
op	108:24	0:0	4	.
water	108:25	0:0	4	caps
op	108:30	0:0	4	&
water	108:32	0:0	4	FE_HAS_EXTENDED_CAPS
stmts	109:8	109:52	3	
call	109:8	109:51	4	msg_Dbg
arg	109:16	109:24	5	p_access
water	109:16	0:0	6	p_access
arg	109:26	109:51	5	"  extended capabilities"
water	109:26	0:0	6	"  extended capabilities"
water	109:52	0:0	4	;
op	112:1	0:0	2	||
water	112:4	0:0	2	(
water	112:5	0:0	2	(
water	112:6	0:0	2	DVB_API_VERSION
op	112:22	0:0	2	==
water	112:25	0:0	2	5
op	112:27	0:0	2	&&
water	112:30	0:0	2	DVB_API_VERSION_MINOR
op	112:52	0:0	2	>=
water	112:55	0:0	2	2
water	112:56	0:0	2	)
water	112:57	0:0	2	)
water	113:4	0:0	2	if
water	113:6	0:0	2	(
water	113:8	0:0	2	p_frontend
op	113:18	0:0	2	->
water	113:20	0:0	2	info
op	113:24	0:0	2	.
water	113:25	0:0	2	caps
op	113:30	0:0	2	&
water	113:32	0:0	2	FE_CAN_TURBO_FEC
water	113:48	0:0	2	)
call	114:8	114:50	2	msg_Dbg
arg	114:16	114:24	3	p_access
water	114:16	0:0	4	p_access
arg	114:26	114:50	3	"  Turbo FEC modulation"
water	114:26	0:0	4	"  Turbo FEC modulation"
water	114:51	0:0	2	;
if	118:4	119:65	2	(p_frontend -> info . caps & FE_CAN_2G_MODULATION)
cond	118:8	118:32	3	p_frontend -> info . caps & FE_CAN_2G_MODULATION
water	118:8	0:0	4	p_frontend
op	118:18	0:0	4	->
water	118:20	0:0	4	info
op	118:24	0:0	4	.
water	118:25	0:0	4	caps
op	118:30	0:0	4	&
water	118:32	0:0	4	FE_CAN_2G_MODULATION
stmts	119:8	119:65	3	
call	119:8	119:64	4	msg_Dbg
arg	119:16	119:24	5	p_access
water	119:16	0:0	6	p_access
arg	119:26	119:64	5	"  2nd generation modulation (DVB-S2)"
water	119:26	0:0	6	"  2nd generation modulation (DVB-S2)"
water	119:65	0:0	4	;
if	121:4	122:52	2	(p_frontend -> info . caps & FE_CAN_RECOVER)
cond	121:8	121:32	3	p_frontend -> info . caps & FE_CAN_RECOVER
water	121:8	0:0	4	p_frontend
op	121:18	0:0	4	->
water	121:20	0:0	4	info
op	121:24	0:0	4	.
water	121:25	0:0	4	caps
op	121:30	0:0	4	&
water	121:32	0:0	4	FE_CAN_RECOVER
stmts	122:8	122:52	3	
call	122:8	122:51	4	msg_Dbg
arg	122:16	122:24	5	p_access
water	122:16	0:0	6	p_access
arg	122:26	122:51	5	"  cable unplug recovery"
water	122:26	0:0	6	"  cable unplug recovery"
water	122:52	0:0	4	;
if	123:4	124:49	2	(p_frontend -> info . caps & FE_CAN_MUTE_TS)
cond	123:8	123:32	3	p_frontend -> info . caps & FE_CAN_MUTE_TS
water	123:8	0:0	4	p_frontend
op	123:18	0:0	4	->
water	123:20	0:0	4	info
op	123:24	0:0	4	.
water	123:25	0:0	4	caps
op	123:30	0:0	4	&
water	123:32	0:0	4	FE_CAN_MUTE_TS
stmts	124:8	124:49	3	
call	124:8	124:48	4	msg_Dbg
arg	124:16	124:24	5	p_access
water	124:16	0:0	6	p_access
arg	124:26	124:48	5	"  spurious TS muting"
water	124:26	0:0	6	"  spurious TS muting"
water	124:49	0:0	4	;
call	125:3	125:45	2	msg_Dbg
arg	125:11	125:19	3	p_access
water	125:11	0:0	4	p_access
arg	125:21	125:45	3	"End of capability list"
water	125:21	0:0	4	"End of capability list"
water	125:46	0:0	2	;
return	126:4	126:22	2	VLC_SUCCESS
water	126:11	0:0	3	VLC_SUCCESS

decl	1:7	1:66	0	block_t	*DecodeBlock
water	1:28	0:0	0	(
water	1:29	0:0	0	decoder_t
op	1:39	0:0	0	*
water	1:40	0:0	0	p_dec
water	1:45	0:0	0	,
water	1:47	0:0	0	block_t
op	1:55	0:0	0	*
op	1:56	0:0	0	*
water	1:57	0:0	0	pp_block
water	1:65	0:0	0	)
func	2:0	75:0	0	static int	Open
params	2:16	0:0	1	
param	2:17	2:37	2	vlc_object_t *	p_this
stmnts	0:0	74:22	1	
decl	4:4	4:42	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:34	0:0	2	*
water	4:35	0:0	2	)
water	4:36	0:0	2	p_this
if	5:4	6:27	2	(p_dec -> fmt_in . i_codec != VLC_CODEC_MIDI)
cond	5:8	5:33	3	p_dec -> fmt_in . i_codec != VLC_CODEC_MIDI
water	5:8	0:0	4	p_dec
op	5:13	0:0	4	->
water	5:15	0:0	4	fmt_in
op	5:21	0:0	4	.
water	5:22	0:0	4	i_codec
op	5:30	0:0	4	!=
water	5:33	0:0	4	VLC_CODEC_MIDI
stmts	6:8	6:27	3	
return	6:8	6:27	4	VLC_EGENERIC
water	6:15	0:0	5	VLC_EGENERIC
decl	7:4	7:51	2	decoder_sys_t	*p_sys
op	7:25	0:0	2	=
call	7:27	7:50	3	malloc
arg	7:35	7:50	4	sizeof(*p_sys)
op	7:35	0:0	5	sizeof
water	7:42	0:0	5	(
op	7:43	0:0	5	*
water	7:44	0:0	5	p_sys
water	7:49	0:0	5	)
if	8:4	9:25	2	(unlikely (p_sys == NULL ))
cond	8:8	8:30	3	unlikely (p_sys == NULL )
call	8:8	8:30	4	unlikely
arg	8:17	8:30	5	p_sys==NULL
water	8:17	0:0	6	p_sys
op	8:23	0:0	6	==
water	8:26	0:0	6	NULL
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	settings
op	10:20	0:0	2	=
call	10:22	10:42	2	new_fluid_settings
water	10:43	0:0	2	;
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	synth
op	11:17	0:0	2	=
call	11:19	11:51	2	new_fluid_synth
arg	11:36	11:51	3	p_sys->settings
water	11:36	0:0	4	p_sys
op	11:41	0:0	4	->
water	11:43	0:0	4	settings
water	11:52	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	soundfont
op	12:21	0:0	2	=
op	12:23	0:0	2	-
water	12:24	0:0	2	1
water	12:25	0:0	2	;
decl	13:4	13:61	2	char	*font_path
op	13:20	0:0	2	=
call	13:22	13:60	3	var_InheritString
arg	13:41	13:47	4	p_this
water	13:41	0:0	5	p_this
arg	13:49	13:60	4	"soundfont"
water	13:49	0:0	5	"soundfont"
if	14:4	21:4	2	(font_path != NULL)
cond	14:8	14:21	3	font_path != NULL
water	14:8	0:0	4	font_path
op	14:18	0:0	4	!=
water	14:21	0:0	4	NULL
stmts	15:4	21:4	3	
water	15:4	0:0	4	{
call	16:8	16:65	4	msg_Dbg
arg	16:17	16:23	5	p_this
water	16:17	0:0	6	p_this
arg	16:25	16:54	5	"loading sound fonts file %s"
water	16:25	0:0	6	"loading sound fonts file %s"
arg	16:56	16:65	5	font_path
water	16:56	0:0	6	font_path
water	16:66	0:0	4	;
water	17:8	0:0	4	p_sys
op	17:13	0:0	4	->
water	17:15	0:0	4	soundfont
op	17:25	0:0	4	=
call	17:27	17:73	4	fluid_synth_sfload
arg	17:47	17:59	5	p_sys->synth
water	17:47	0:0	6	p_sys
op	17:52	0:0	6	->
water	17:54	0:0	6	synth
arg	17:61	17:70	5	font_path
water	17:61	0:0	6	font_path
arg	17:72	17:73	5	1
water	17:72	0:0	6	1
water	17:74	0:0	4	;
if	18:8	19:74	4	(p_sys -> soundfont == - 1)
cond	18:12	18:33	5	p_sys -> soundfont == - 1
water	18:12	0:0	6	p_sys
op	18:17	0:0	6	->
water	18:19	0:0	6	soundfont
op	18:29	0:0	6	==
op	18:32	0:0	6	-
water	18:33	0:0	6	1
stmts	19:12	19:74	5	
call	19:12	19:73	6	msg_Err
arg	19:21	19:27	7	p_this
water	19:21	0:0	8	p_this
arg	19:29	19:62	7	"cannot load sound fonts file %s"
water	19:29	0:0	8	"cannot load sound fonts file %s"
arg	19:64	19:73	7	font_path
water	19:64	0:0	8	font_path
water	19:74	0:0	6	;
call	20:8	20:23	4	free
arg	20:14	20:23	5	font_path
water	20:14	0:0	6	font_path
water	20:24	0:0	4	;
water	21:4	0:0	4	}
else	23:4	37:4	2
stmts	24:4	37:4	3	
water	24:4	0:0	4	{
decl	25:8	25:17	4	glob_t	gl
call	26:8	26:69	4	glob
arg	26:14	26:43	5	"/usr/share/sounds/sf2/*.sf2"
water	26:14	0:0	6	"/usr/share/sounds/sf2/*.sf2"
arg	26:45	26:58	5	GLOB_NOESCAPE
water	26:45	0:0	6	GLOB_NOESCAPE
arg	26:60	26:64	5	NULL
water	26:60	0:0	6	NULL
arg	26:66	26:69	5	&gl
op	26:66	0:0	6	&
water	26:67	0:0	6	gl
water	26:70	0:0	4	;
for	27:8	35:8	4	( size_t i = 0 ;i < gl . gl_pathc;i ++)
forinit	0:0	27:25	5	 size_t i = 0 ;
decl	27:13	27:25	6	size_t	i
op	27:22	0:0	6	=
water	27:24	0:0	6	0
cond	27:27	27:34	5	i < gl . gl_pathc
water	27:27	0:0	6	i
op	27:29	0:0	6	<
water	27:31	0:0	6	gl
op	27:33	0:0	6	.
water	27:34	0:0	6	gl_pathc
forexpr	27:44	27:45	5	i ++
water	27:44	0:0	6	i
op	27:45	0:0	6	++
stmts	28:8	35:8	5	
water	28:8	0:0	6	{
decl	29:12	29:45	6	const char	*path
op	29:29	0:0	6	=
water	29:31	0:0	6	gl
op	29:33	0:0	6	.
water	29:34	0:0	6	gl_pathv
op	29:42	0:0	6	[
water	29:43	0:0	6	i
op	29:44	0:0	6	]
call	30:12	30:64	6	msg_Dbg
arg	30:21	30:27	7	p_this
water	30:21	0:0	8	p_this
arg	30:29	30:58	7	"loading sound fonts file %s"
water	30:29	0:0	8	"loading sound fonts file %s"
arg	30:60	30:64	7	path
water	30:60	0:0	8	path
water	30:65	0:0	6	;
water	31:12	0:0	6	p_sys
op	31:17	0:0	6	->
water	31:19	0:0	6	soundfont
op	31:29	0:0	6	=
call	31:31	31:72	6	fluid_synth_sfload
arg	31:51	31:63	7	p_sys->synth
water	31:51	0:0	8	p_sys
op	31:56	0:0	8	->
water	31:58	0:0	8	synth
arg	31:65	31:69	7	path
water	31:65	0:0	8	path
arg	31:71	31:72	7	1
water	31:71	0:0	8	1
water	31:73	0:0	6	;
if	32:12	33:21	6	(p_sys -> soundfont != - 1)
cond	32:16	32:37	7	p_sys -> soundfont != - 1
water	32:16	0:0	8	p_sys
op	32:21	0:0	8	->
water	32:23	0:0	8	soundfont
op	32:33	0:0	8	!=
op	32:36	0:0	8	-
water	32:37	0:0	8	1
stmts	33:16	33:21	7	
break	33:16	33:21	8	
call	34:12	34:68	6	msg_Err
arg	34:21	34:27	7	p_this
water	34:21	0:0	8	p_this
arg	34:29	34:62	7	"cannot load sound fonts file %s"
water	34:29	0:0	8	"cannot load sound fonts file %s"
arg	34:64	34:68	7	path
water	34:64	0:0	8	path
water	34:69	0:0	6	;
water	35:8	0:0	6	}
call	36:8	36:21	4	globfree
arg	36:18	36:21	5	&gl
op	36:18	0:0	6	&
water	36:19	0:0	6	gl
water	36:22	0:0	4	;
water	37:4	0:0	4	}
if	39:4	51:4	2	(p_sys -> soundfont == - 1)
cond	39:8	39:29	3	p_sys -> soundfont == - 1
water	39:8	0:0	4	p_sys
op	39:13	0:0	4	->
water	39:15	0:0	4	soundfont
op	39:25	0:0	4	==
op	39:28	0:0	4	-
water	39:29	0:0	4	1
stmts	40:4	51:4	3	
water	40:4	0:0	4	{
call	41:8	41:65	4	msg_Err
arg	41:17	41:23	5	p_this
water	41:17	0:0	6	p_this
arg	41:25	41:65	5	"sound font file required for synthesis"
water	41:25	0:0	6	"sound font file required for synthesis"
water	41:66	0:0	4	;
call	42:8	46:64	4	dialog_Fatal
arg	42:22	42:28	5	p_this
water	42:22	0:0	6	p_this
arg	42:30	42:60	5	_("MIDI synthesis not set up")
call	42:30	42:59	6	_
arg	42:32	42:59	7	"MIDI synthesis not set up"
water	42:32	0:0	8	"MIDI synthesis not set up"
arg	43:12	46:64	5	_("A sound font file (.SF2) is required for MIDI synthesis.\n""Please install a sound font and configure it ""from the VLC preferences ""(Input / Codecs > Audio codecs > FluidSynth).\n")
call	43:12	46:63	6	_
arg	43:14	46:63	7	"A sound font file (.SF2) is required for MIDI synthesis.\n""Please install a sound font and configure it ""from the VLC preferences ""(Input / Codecs > Audio codecs > FluidSynth).\n"
water	43:14	0:0	8	"A sound font file (.SF2) is required for MIDI synthesis.\n"
water	44:14	0:0	8	"Please install a sound font and configure it "
water	45:14	0:0	8	"from the VLC preferences "
water	46:14	0:0	8	"(Input / Codecs > Audio codecs > FluidSynth).\n"
water	46:65	0:0	4	;
call	47:8	47:40	4	delete_fluid_synth
arg	47:28	47:40	5	p_sys->synth
water	47:28	0:0	6	p_sys
op	47:33	0:0	6	->
water	47:35	0:0	6	synth
water	47:41	0:0	4	;
call	48:8	48:46	4	delete_fluid_settings
arg	48:31	48:46	5	p_sys->settings
water	48:31	0:0	6	p_sys
op	48:36	0:0	6	->
water	48:38	0:0	6	settings
water	48:47	0:0	4	;
call	49:8	49:19	4	free
arg	49:14	49:19	5	p_sys
water	49:14	0:0	6	p_sys
water	49:20	0:0	4	;
return	50:8	50:27	4	VLC_EGENERIC
water	50:15	0:0	5	VLC_EGENERIC
water	51:4	0:0	4	}
call	52:4	53:71	2	fluid_synth_set_chorus_on
arg	52:31	52:43	3	p_sys->synth
water	52:31	0:0	4	p_sys
op	52:36	0:0	4	->
water	52:38	0:0	4	synth
arg	53:31	53:71	3	var_InheritBool(p_this,"synth-chorus")
call	53:31	53:70	4	var_InheritBool
arg	53:48	53:54	5	p_this
water	53:48	0:0	6	p_this
arg	53:56	53:70	5	"synth-chorus"
water	53:56	0:0	6	"synth-chorus"
water	53:72	0:0	2	;
call	54:4	55:65	2	fluid_synth_set_gain
arg	54:26	54:38	3	p_sys->synth
water	54:26	0:0	4	p_sys
op	54:31	0:0	4	->
water	54:33	0:0	4	synth
arg	55:26	55:65	3	var_InheritFloat(p_this,"synth-gain")
call	55:26	55:64	4	var_InheritFloat
arg	55:44	55:50	5	p_this
water	55:44	0:0	6	p_this
arg	55:52	55:64	5	"synth-gain"
water	55:52	0:0	6	"synth-gain"
water	55:66	0:0	2	;
call	56:4	57:77	2	fluid_synth_set_polyphony
arg	56:31	56:43	3	p_sys->synth
water	56:31	0:0	4	p_sys
op	56:36	0:0	4	->
water	56:38	0:0	4	synth
arg	57:31	57:77	3	var_InheritInteger(p_this,"synth-polyphony")
call	57:31	57:76	4	var_InheritInteger
arg	57:51	57:57	5	p_this
water	57:51	0:0	6	p_this
arg	57:59	57:76	5	"synth-polyphony"
water	57:59	0:0	6	"synth-polyphony"
water	57:78	0:0	2	;
call	58:4	59:71	2	fluid_synth_set_reverb_on
arg	58:31	58:43	3	p_sys->synth
water	58:31	0:0	4	p_sys
op	58:36	0:0	4	->
water	58:38	0:0	4	synth
arg	59:31	59:71	3	var_InheritBool(p_this,"synth-reverb")
call	59:31	59:70	4	var_InheritBool
arg	59:48	59:54	5	p_this
water	59:48	0:0	6	p_this
arg	59:56	59:70	5	"synth-reverb"
water	59:56	0:0	6	"synth-reverb"
water	59:72	0:0	2	;
water	60:4	0:0	2	p_dec
op	60:9	0:0	2	->
water	60:11	0:0	2	fmt_out
op	60:18	0:0	2	.
water	60:19	0:0	2	i_cat
op	60:25	0:0	2	=
water	60:27	0:0	2	AUDIO_ES
water	60:35	0:0	2	;
water	61:4	0:0	2	p_dec
op	61:9	0:0	2	->
water	61:11	0:0	2	fmt_out
op	61:18	0:0	2	.
water	61:19	0:0	2	audio
op	61:24	0:0	2	.
water	61:25	0:0	2	i_rate
op	61:32	0:0	2	=
call	62:8	62:55	2	var_InheritInteger
arg	62:28	62:34	3	p_this
water	62:28	0:0	4	p_this
arg	62:36	62:55	3	"synth-sample-rate"
water	62:36	0:0	4	"synth-sample-rate"
water	62:56	0:0	2	;
water	62:57	0:0	2	;
call	63:4	63:74	2	fluid_synth_set_sample_rate
arg	63:33	63:45	3	p_sys->synth
water	63:33	0:0	4	p_sys
op	63:38	0:0	4	->
water	63:40	0:0	4	synth
arg	63:47	63:74	3	p_dec->fmt_out.audio.i_rate
water	63:47	0:0	4	p_dec
op	63:52	0:0	4	->
water	63:54	0:0	4	fmt_out
op	63:61	0:0	4	.
water	63:62	0:0	4	audio
op	63:67	0:0	4	.
water	63:68	0:0	4	i_rate
water	63:75	0:0	2	;
water	64:4	0:0	2	p_dec
op	64:9	0:0	2	->
water	64:11	0:0	2	fmt_out
op	64:18	0:0	2	.
water	64:19	0:0	2	audio
op	64:24	0:0	2	.
water	64:25	0:0	2	i_channels
op	64:36	0:0	2	=
water	64:38	0:0	2	2
water	64:39	0:0	2	;
water	65:4	0:0	2	p_dec
op	65:9	0:0	2	->
water	65:11	0:0	2	fmt_out
op	65:18	0:0	2	.
water	65:19	0:0	2	audio
op	65:24	0:0	2	.
water	65:25	0:0	2	i_original_channels
op	65:45	0:0	2	=
water	66:4	0:0	2	p_dec
op	66:9	0:0	2	->
water	66:11	0:0	2	fmt_out
op	66:18	0:0	2	.
water	66:19	0:0	2	audio
op	66:24	0:0	2	.
water	66:25	0:0	2	i_physical_channels
op	66:45	0:0	2	=
water	67:8	0:0	2	AOUT_CHAN_LEFT
op	67:23	0:0	2	|
water	67:25	0:0	2	AOUT_CHAN_RIGHT
water	67:40	0:0	2	;
water	68:4	0:0	2	p_dec
op	68:9	0:0	2	->
water	68:11	0:0	2	fmt_out
op	68:18	0:0	2	.
water	68:19	0:0	2	i_codec
op	68:27	0:0	2	=
water	68:29	0:0	2	VLC_CODEC_FL32
water	68:43	0:0	2	;
water	69:4	0:0	2	p_dec
op	69:9	0:0	2	->
water	69:11	0:0	2	fmt_out
op	69:18	0:0	2	.
water	69:19	0:0	2	audio
op	69:24	0:0	2	.
water	69:25	0:0	2	i_bitspersample
op	69:41	0:0	2	=
water	69:43	0:0	2	32
water	69:45	0:0	2	;
call	70:4	70:63	2	date_Init
arg	70:15	70:31	3	&p_sys->end_date
op	70:15	0:0	4	&
water	70:16	0:0	4	p_sys
op	70:21	0:0	4	->
water	70:23	0:0	4	end_date
arg	70:33	70:60	3	p_dec->fmt_out.audio.i_rate
water	70:33	0:0	4	p_dec
op	70:38	0:0	4	->
water	70:40	0:0	4	fmt_out
op	70:47	0:0	4	.
water	70:48	0:0	4	audio
op	70:53	0:0	4	.
water	70:54	0:0	4	i_rate
arg	70:62	70:63	3	1
water	70:62	0:0	4	1
water	70:64	0:0	2	;
call	71:4	71:33	2	date_Set
arg	71:14	71:30	3	&p_sys->end_date
op	71:14	0:0	4	&
water	71:15	0:0	4	p_sys
op	71:20	0:0	4	->
water	71:22	0:0	4	end_date
arg	71:32	71:33	3	0
water	71:32	0:0	4	0
water	71:34	0:0	2	;
water	72:4	0:0	2	p_dec
op	72:9	0:0	2	->
water	72:11	0:0	2	p_sys
op	72:17	0:0	2	=
water	72:19	0:0	2	p_sys
water	72:24	0:0	2	;
water	73:4	0:0	2	p_dec
op	73:9	0:0	2	->
water	73:11	0:0	2	pf_decode_audio
op	73:27	0:0	2	=
water	73:29	0:0	2	DecodeBlock
water	73:40	0:0	2	;
return	74:4	74:22	2	VLC_SUCCESS
water	74:11	0:0	3	VLC_SUCCESS

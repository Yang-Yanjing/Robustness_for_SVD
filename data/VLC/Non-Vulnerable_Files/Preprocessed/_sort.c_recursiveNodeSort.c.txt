func	2:0	15:0	0	static int	recursiveNodeSort
params	2:28	0:0	1	
param	2:30	2:52	2	playlist_t *	p_playlist
param	2:54	2:77	2	playlist_item_t *	p_node
param	3:30	3:48	2	sortfn_t	p_sortfn
stmnts	0:0	14:22	1	
decl	5:4	5:9	2	int	i
call	6:4	6:74	2	playlist_ItemArraySort
arg	6:27	6:45	3	p_node->i_children
water	6:27	0:0	4	p_node
op	6:33	0:0	4	->
water	6:35	0:0	4	i_children
arg	6:46	6:65	3	p_node->pp_children
water	6:46	0:0	4	p_node
op	6:52	0:0	4	->
water	6:54	0:0	4	pp_children
arg	6:66	6:74	3	p_sortfn
water	6:66	0:0	4	p_sortfn
water	6:75	0:0	2	;
for	7:4	13:4	2	(i = 0 ;i < p_node -> i_children;i ++)
forinit	7:9	7:15	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:15	0:0	4	;
cond	7:17	7:28	3	i < p_node -> i_children
water	7:17	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	p_node
op	7:26	0:0	4	->
water	7:28	0:0	4	i_children
forexpr	7:40	7:41	3	i ++
water	7:40	0:0	4	i
op	7:41	0:0	4	++
stmts	8:4	13:4	3	
water	8:4	0:0	4	{
if	9:8	12:8	4	(p_node -> pp_children [ i ] -> i_children != - 1)
cond	9:12	9:51	5	p_node -> pp_children [ i ] -> i_children != - 1
water	9:12	0:0	6	p_node
op	9:18	0:0	6	->
water	9:20	0:0	6	pp_children
op	9:31	0:0	6	[
water	9:32	0:0	6	i
op	9:33	0:0	6	]
op	9:34	0:0	6	->
water	9:36	0:0	6	i_children
op	9:47	0:0	6	!=
op	9:50	0:0	6	-
water	9:51	0:0	6	1
stmts	10:8	12:8	5	
water	10:8	0:0	6	{
call	11:12	11:76	6	recursiveNodeSort
arg	11:31	11:41	7	p_playlist
water	11:31	0:0	8	p_playlist
arg	11:43	11:65	7	p_node->pp_children[i]
water	11:43	0:0	8	p_node
op	11:49	0:0	8	->
water	11:51	0:0	8	pp_children
op	11:62	0:0	8	[
water	11:63	0:0	8	i
op	11:64	0:0	8	]
arg	11:67	11:76	7	p_sortfn
water	11:67	0:0	8	p_sortfn
water	11:77	0:0	6	;
water	12:8	0:0	6	}
water	13:4	0:0	4	}
return	14:4	14:22	2	VLC_SUCCESS
water	14:11	0:0	3	VLC_SUCCESS

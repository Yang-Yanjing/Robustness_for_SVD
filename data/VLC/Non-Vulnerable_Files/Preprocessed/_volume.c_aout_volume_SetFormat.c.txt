func	2:0	22:0	0	int	aout_volume_SetFormat
params	2:25	0:0	1	
param	2:26	2:44	2	aout_volume_t *	vol
param	2:46	2:65	2	vlc_fourcc_t	format
stmnts	4:4	21:12	1	
if	4:4	5:17	2	(unlikely (vol == NULL ))
cond	4:8	4:28	3	unlikely (vol == NULL )
call	4:8	4:28	4	unlikely
arg	4:17	4:28	5	vol==NULL
water	4:17	0:0	6	vol
op	4:21	0:0	6	==
water	4:24	0:0	6	NULL
stmts	5:8	5:17	3	
return	5:8	5:17	4	-1
op	5:15	0:0	5	-
water	5:16	0:0	5	1
decl	6:4	6:38	2	audio_volume_t	*obj
op	6:24	0:0	2	=
op	6:26	0:0	2	&
water	6:27	0:0	2	vol
op	6:30	0:0	2	->
water	6:32	0:0	2	object
if	7:4	16:4	2	(vol -> module != NULL)
cond	7:8	7:23	3	vol -> module != NULL
water	7:8	0:0	4	vol
op	7:11	0:0	4	->
water	7:13	0:0	4	module
op	7:20	0:0	4	!=
water	7:23	0:0	4	NULL
stmts	8:4	16:4	3	
water	8:4	0:0	4	{
if	9:8	13:8	4	(obj -> format == format)
cond	9:12	9:27	5	obj -> format == format
water	9:12	0:0	6	obj
op	9:15	0:0	6	->
water	9:17	0:0	6	format
op	9:24	0:0	6	==
water	9:27	0:0	6	format
stmts	10:8	13:8	5	
water	10:8	0:0	6	{
call	11:12	11:51	6	msg_Dbg
arg	11:21	11:24	7	obj
water	11:21	0:0	8	obj
arg	11:26	11:51	7	"retaining sample format"
water	11:26	0:0	8	"retaining sample format"
water	11:52	0:0	6	;
return	12:12	12:20	6	0
water	12:19	0:0	7	0
water	13:8	0:0	6	}
call	14:8	14:46	4	msg_Dbg
arg	14:17	14:20	5	obj
water	14:17	0:0	6	obj
arg	14:22	14:46	5	"changing sample format"
water	14:22	0:0	6	"changing sample format"
water	14:47	0:0	4	;
call	15:8	15:38	4	module_unneed
arg	15:22	15:25	5	obj
water	15:22	0:0	6	obj
arg	15:27	15:38	5	vol->module
water	15:27	0:0	6	vol
op	15:30	0:0	6	->
water	15:32	0:0	6	module
water	15:39	0:0	4	;
water	16:4	0:0	4	}
water	17:4	0:0	2	obj
op	17:7	0:0	2	->
water	17:9	0:0	2	format
op	17:16	0:0	2	=
water	17:18	0:0	2	format
water	17:24	0:0	2	;
water	18:4	0:0	2	vol
op	18:7	0:0	2	->
water	18:9	0:0	2	module
op	18:16	0:0	2	=
call	18:18	18:62	2	module_need
arg	18:30	18:33	3	obj
water	18:30	0:0	4	obj
arg	18:35	18:49	3	"audio volume"
water	18:35	0:0	4	"audio volume"
arg	18:51	18:55	3	NULL
water	18:51	0:0	4	NULL
arg	18:57	18:62	3	false
water	18:57	0:0	4	false
water	18:63	0:0	2	;
if	19:4	20:17	2	(vol -> module == NULL)
cond	19:8	19:23	3	vol -> module == NULL
water	19:8	0:0	4	vol
op	19:11	0:0	4	->
water	19:13	0:0	4	module
op	19:20	0:0	4	==
water	19:23	0:0	4	NULL
stmts	20:8	20:17	3	
return	20:8	20:17	4	-1
op	20:15	0:0	5	-
water	20:16	0:0	5	1
return	21:4	21:12	2	0
water	21:11	0:0	3	0

func	2:0	52:0	0	static int	OpenDemux
params	2:20	0:0	1	
param	2:22	2:43	2	vlc_object_t *	p_this
stmnts	0:0	51:23	1	
decl	4:4	4:39	2	demux_t	*p_demux
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	demux_t
op	4:31	0:0	2	*
water	4:32	0:0	2	)
water	4:33	0:0	2	p_this
decl	5:4	5:43	2	char	*psz_name
op	5:20	0:0	2	=
water	5:22	0:0	2	p_demux
op	5:29	0:0	2	->
water	5:31	0:0	2	psz_location
water	6:4	0:0	2	p_demux
op	6:11	0:0	2	->
water	6:13	0:0	2	p_sys
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
water	6:25	0:0	2	;
if	8:4	15:4	2	(!strcasecmp (psz_name ,"nop" ))
cond	8:8	8:37	3	!strcasecmp (psz_name ,"nop" )
op	8:8	0:0	4	!
call	8:9	8:37	4	strcasecmp
arg	8:21	8:29	5	psz_name
water	8:21	0:0	6	psz_name
arg	8:31	8:37	5	"nop"
water	8:31	0:0	6	"nop"
stmts	9:4	15:4	3	
water	9:4	0:0	4	{
label	10:0	10:3	4	nop :
call	11:8	11:43	4	msg_Info
arg	11:18	11:25	5	p_demux
water	11:18	0:0	6	p_demux
arg	11:27	11:43	5	"command `nop'"
water	11:27	0:0	6	"command `nop'"
water	11:44	0:0	4	;
water	12:8	0:0	4	p_demux
op	12:15	0:0	4	->
water	12:17	0:0	4	pf_demux
op	12:26	0:0	4	=
water	12:28	0:0	4	DemuxNoOp
water	12:37	0:0	4	;
water	13:8	0:0	4	p_demux
op	13:15	0:0	4	->
water	13:17	0:0	4	pf_control
op	13:28	0:0	4	=
water	13:30	0:0	4	DemuxControl
water	13:42	0:0	4	;
return	14:8	14:26	4	VLC_SUCCESS
water	14:15	0:0	5	VLC_SUCCESS
water	15:4	0:0	4	}
if	17:4	24:4	2	(!strcasecmp (psz_name ,"quit" ))
cond	17:8	17:38	3	!strcasecmp (psz_name ,"quit" )
op	17:8	0:0	4	!
call	17:9	17:38	4	strcasecmp
arg	17:21	17:29	5	psz_name
water	17:21	0:0	6	psz_name
arg	17:31	17:38	5	"quit"
water	17:31	0:0	6	"quit"
stmts	18:4	24:4	3	
water	18:4	0:0	4	{
call	19:8	19:44	4	msg_Info
arg	19:18	19:25	5	p_demux
water	19:18	0:0	6	p_demux
arg	19:27	19:44	5	"command `quit'"
water	19:27	0:0	6	"command `quit'"
water	19:45	0:0	4	;
water	20:8	0:0	4	p_demux
op	20:15	0:0	4	->
water	20:17	0:0	4	pf_demux
op	20:26	0:0	4	=
water	20:28	0:0	4	DemuxNoOp
water	20:37	0:0	4	;
water	21:8	0:0	4	p_demux
op	21:15	0:0	4	->
water	21:17	0:0	4	pf_control
op	21:28	0:0	4	=
water	21:30	0:0	4	DemuxControl
water	21:42	0:0	4	;
call	22:8	22:39	4	libvlc_Quit
arg	22:21	22:39	5	p_demux->p_libvlc
water	22:21	0:0	6	p_demux
op	22:28	0:0	6	->
water	22:30	0:0	6	p_libvlc
water	22:40	0:0	4	;
return	23:8	23:26	4	VLC_SUCCESS
water	23:15	0:0	5	VLC_SUCCESS
water	24:4	0:0	4	}
if	25:4	31:4	2	(!strcasecmp (psz_name ,"pause" ))
cond	25:8	25:39	3	!strcasecmp (psz_name ,"pause" )
op	25:8	0:0	4	!
call	25:9	25:39	4	strcasecmp
arg	25:21	25:29	5	psz_name
water	25:21	0:0	6	psz_name
arg	25:31	25:39	5	"pause"
water	25:31	0:0	6	"pause"
stmts	26:4	31:4	3	
water	26:4	0:0	4	{
call	27:8	27:45	4	msg_Info
arg	27:18	27:25	5	p_demux
water	27:18	0:0	6	p_demux
arg	27:27	27:45	5	"command `pause'"
water	27:27	0:0	6	"command `pause'"
water	27:46	0:0	4	;
water	28:8	0:0	4	p_demux
op	28:15	0:0	4	->
water	28:17	0:0	4	pf_demux
op	28:26	0:0	4	=
water	28:28	0:0	4	DemuxHold
water	28:37	0:0	4	;
water	29:8	0:0	4	p_demux
op	29:15	0:0	4	->
water	29:17	0:0	4	pf_control
op	29:28	0:0	4	=
water	29:30	0:0	4	DemuxControl
water	29:42	0:0	4	;
return	30:8	30:26	4	VLC_SUCCESS
water	30:15	0:0	5	VLC_SUCCESS
water	31:4	0:0	4	}
if	33:4	49:4	2	(!strncasecmp (psz_name ,"pause:" ,6 ))
cond	33:8	33:44	3	!strncasecmp (psz_name ,"pause:" ,6 )
op	33:8	0:0	4	!
call	33:9	33:44	4	strncasecmp
arg	33:22	33:30	5	psz_name
water	33:22	0:0	6	psz_name
arg	33:32	33:40	5	"pause:"
water	33:32	0:0	6	"pause:"
arg	33:42	33:44	5	6
water	33:42	0:0	6	6
stmts	34:4	49:4	3	
water	34:4	0:0	4	{
decl	35:8	35:42	4	double	f
op	35:17	0:0	4	=
call	35:19	35:41	5	us_atof
arg	35:28	35:41	6	psz_name+6
water	35:28	0:0	7	psz_name
op	35:37	0:0	7	+
water	35:39	0:0	7	6
decl	36:8	36:39	4	mtime_t	length
op	36:23	0:0	4	=
water	36:25	0:0	4	f
op	36:27	0:0	4	*
water	36:29	0:0	4	CLOCK_FREQ
call	37:8	37:51	4	msg_Info
arg	37:18	37:25	5	p_demux
water	37:18	0:0	6	p_demux
arg	37:27	37:47	5	"command `pause %f'"
water	37:27	0:0	6	"command `pause %f'"
arg	37:49	37:51	5	f
water	37:49	0:0	6	f
water	37:52	0:0	4	;
if	38:8	39:20	4	(length == 0)
cond	38:12	38:22	5	length == 0
water	38:12	0:0	6	length
op	38:19	0:0	6	==
water	38:22	0:0	6	0
stmts	39:12	39:20	5	
goto	39:12	39:20	6	nop
water	39:17	0:0	7	nop
decl	40:8	40:55	4	demux_sys_t	*p_sys
op	40:27	0:0	4	=
call	40:29	40:54	5	malloc
arg	40:37	40:54	6	sizeof(*p_sys)
op	40:37	0:0	7	sizeof
water	40:43	0:0	7	(
op	40:45	0:0	7	*
water	40:46	0:0	7	p_sys
water	40:52	0:0	7	)
if	41:8	42:29	4	(p_sys == NULL)
cond	41:12	41:21	5	p_sys == NULL
water	41:12	0:0	6	p_sys
op	41:18	0:0	6	==
water	41:21	0:0	6	NULL
stmts	42:12	42:29	5	
return	42:12	42:29	6	VLC_ENOMEM
water	42:19	0:0	7	VLC_ENOMEM
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	end
op	43:19	0:0	4	=
call	43:21	43:27	4	mdate
op	43:29	0:0	4	+
water	43:31	0:0	4	length
water	43:37	0:0	4	;
water	44:8	0:0	4	p_sys
op	44:13	0:0	4	->
water	44:15	0:0	4	length
op	44:22	0:0	4	=
water	44:24	0:0	4	length
water	44:30	0:0	4	;
water	45:8	0:0	4	p_demux
op	45:15	0:0	4	->
water	45:17	0:0	4	p_sys
op	45:23	0:0	4	=
water	45:25	0:0	4	p_sys
water	45:30	0:0	4	;
water	46:8	0:0	4	p_demux
op	46:15	0:0	4	->
water	46:17	0:0	4	pf_demux
op	46:26	0:0	4	=
water	46:28	0:0	4	DemuxPause
water	46:38	0:0	4	;
water	47:8	0:0	4	p_demux
op	47:15	0:0	4	->
water	47:17	0:0	4	pf_control
op	47:28	0:0	4	=
water	47:30	0:0	4	ControlPause
water	47:42	0:0	4	;
return	48:8	48:26	4	VLC_SUCCESS
water	48:15	0:0	5	VLC_SUCCESS
water	49:4	0:0	4	}
call	50:4	50:55	2	msg_Err
arg	50:13	50:20	3	p_demux
water	50:13	0:0	4	p_demux
arg	50:22	50:44	3	"unknown command `%s'"
water	50:22	0:0	4	"unknown command `%s'"
arg	50:46	50:55	3	psz_name
water	50:46	0:0	4	psz_name
water	50:56	0:0	2	;
return	51:4	51:23	2	VLC_EGENERIC
water	51:11	0:0	3	VLC_EGENERIC

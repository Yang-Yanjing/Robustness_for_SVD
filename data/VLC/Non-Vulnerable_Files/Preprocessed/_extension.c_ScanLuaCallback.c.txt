func	2:0	211:0	0	int	ScanLuaCallback
params	2:19	0:0	1	
param	2:21	2:41	2	vlc_object_t *	p_this
param	2:43	2:67	2	const char *	psz_filename
param	3:21	3:60	2	const struct luabatch_context_t *	dummy
stmnts	5:4	210:23	1	
call	5:4	5:20	2	VLC_UNUSED
arg	5:15	5:20	3	dummy
water	5:15	0:0	4	dummy
water	5:21	0:0	2	;
decl	6:4	6:66	2	extensions_manager_t	*p_mgr
op	6:32	0:0	2	=
water	6:34	0:0	2	(
water	6:36	0:0	2	extensions_manager_t
op	6:56	0:0	2	*
water	6:58	0:0	2	)
water	6:60	0:0	2	p_this
decl	7:4	7:21	2	bool	b_ok
op	7:14	0:0	2	=
water	7:16	0:0	2	false
call	8:4	8:59	2	msg_Dbg
arg	8:13	8:18	3	p_mgr
water	8:13	0:0	4	p_mgr
arg	8:20	8:44	3	"Scanning Lua script %s"
water	8:20	0:0	4	"Scanning Lua script %s"
arg	8:46	8:59	3	psz_filename
water	8:46	0:0	4	psz_filename
water	8:60	0:0	2	;
decl	10:4	10:27	2	char	*psz_script
op	10:21	0:0	2	=
water	10:23	0:0	2	NULL
decl	11:4	11:39	2	int	i_flen
op	11:15	0:0	2	=
call	11:17	11:38	3	strlen
arg	11:25	11:38	4	psz_filename
water	11:25	0:0	5	psz_filename
if	12:4	21:4	2	(!strncasecmp (psz_filename + i_flen - 4 ,".vle" ,4 ))
cond	12:8	12:59	3	!strncasecmp (psz_filename + i_flen - 4 ,".vle" ,4 )
op	12:8	0:0	4	!
call	12:9	12:59	4	strncasecmp
arg	12:22	12:47	5	psz_filename+i_flen-4
water	12:22	0:0	6	psz_filename
op	12:35	0:0	6	+
water	12:37	0:0	6	i_flen
op	12:44	0:0	6	-
water	12:46	0:0	6	4
arg	12:49	12:55	5	".vle"
water	12:49	0:0	6	".vle"
arg	12:57	12:59	5	4
water	12:57	0:0	6	4
stmts	13:4	21:4	3	
water	13:4	0:0	4	{
call	14:8	14:63	4	msg_Dbg
arg	14:17	14:23	5	p_this
water	14:17	0:0	6	p_this
arg	14:25	14:63	5	"reading Lua script in a zip archive"
water	14:25	0:0	6	"reading Lua script in a zip archive"
water	14:64	0:0	4	;
water	15:8	0:0	4	psz_script
op	15:19	0:0	4	=
call	15:21	15:52	4	calloc
arg	15:29	15:30	5	1
water	15:29	0:0	6	1
arg	15:32	15:52	5	i_flen+6+12+1
water	15:32	0:0	6	i_flen
op	15:39	0:0	6	+
water	15:41	0:0	6	6
op	15:43	0:0	6	+
water	15:45	0:0	6	12
op	15:48	0:0	6	+
water	15:50	0:0	6	1
water	15:53	0:0	4	;
if	16:8	17:20	4	(! psz_script)
cond	16:12	16:13	5	! psz_script
op	16:12	0:0	6	!
water	16:13	0:0	6	psz_script
stmts	17:12	17:20	5	
return	17:12	17:20	6	0
water	17:19	0:0	7	0
call	18:8	18:37	4	strcpy
arg	18:16	18:26	5	psz_script
water	18:16	0:0	6	psz_script
arg	18:28	18:37	5	"zip://"
water	18:28	0:0	6	"zip://"
water	18:38	0:0	4	;
call	19:8	19:55	4	strncat
arg	19:17	19:27	5	psz_script
water	19:17	0:0	6	psz_script
arg	19:29	19:41	5	psz_filename
water	19:29	0:0	6	psz_filename
arg	19:43	19:55	5	i_flen+19
water	19:43	0:0	6	i_flen
op	19:50	0:0	6	+
water	19:52	0:0	6	19
water	19:56	0:0	4	;
call	20:8	20:57	4	strncat
arg	20:17	20:27	5	psz_script
water	20:17	0:0	6	psz_script
arg	20:29	20:43	5	"!/script.lua"
water	20:29	0:0	6	"!/script.lua"
arg	20:45	20:57	5	i_flen+19
water	20:45	0:0	6	i_flen
op	20:52	0:0	6	+
water	20:54	0:0	6	19
water	20:58	0:0	4	;
water	21:4	0:0	4	}
else	22:4	27:4	2
stmts	23:4	27:4	3	
water	23:4	0:0	4	{
water	24:8	0:0	4	psz_script
op	24:19	0:0	4	=
call	24:21	24:42	4	strdup
arg	24:29	24:42	5	psz_filename
water	24:29	0:0	6	psz_filename
water	24:43	0:0	4	;
if	25:8	26:20	4	(! psz_script)
cond	25:12	25:13	5	! psz_script
op	25:12	0:0	6	!
water	25:13	0:0	6	psz_script
stmts	26:12	26:20	5	
return	26:12	26:20	6	0
water	26:19	0:0	7	0
water	27:4	0:0	4	}
decl	29:4	29:76	2	extension_t	*p_ext
op	29:23	0:0	2	=
water	29:25	0:0	2	(
water	29:27	0:0	2	extension_t
op	29:38	0:0	2	*
water	29:40	0:0	2	)
call	29:42	29:75	3	calloc
arg	29:50	29:51	4	1
water	29:50	0:0	5	1
arg	29:53	29:75	4	sizeof(extension_t)
op	29:53	0:0	5	sizeof
water	29:59	0:0	5	(
water	29:61	0:0	5	extension_t
water	29:73	0:0	5	)
if	30:4	34:4	2	(! p_ext)
cond	30:8	30:9	3	! p_ext
op	30:8	0:0	4	!
water	30:9	0:0	4	p_ext
stmts	31:4	34:4	3	
water	31:4	0:0	4	{
call	32:8	32:25	4	free
arg	32:14	32:25	5	psz_script
water	32:14	0:0	6	psz_script
water	32:26	0:0	4	;
return	33:8	33:16	4	0
water	33:15	0:0	5	0
water	34:4	0:0	4	}
water	35:4	0:0	2	p_ext
op	35:9	0:0	2	->
water	35:11	0:0	2	psz_name
op	35:20	0:0	2	=
water	35:22	0:0	2	psz_script
water	35:32	0:0	2	;
water	36:4	0:0	2	p_ext
op	36:9	0:0	2	->
water	36:11	0:0	2	p_sys
op	36:17	0:0	2	=
water	36:19	0:0	2	(
water	36:20	0:0	2	extension_sys_t
op	36:35	0:0	2	*
water	36:36	0:0	2	)
call	36:38	36:75	2	calloc
arg	36:46	36:47	3	1
water	36:46	0:0	4	1
arg	36:49	36:75	3	sizeof(extension_sys_t)
op	36:49	0:0	4	sizeof
water	36:55	0:0	4	(
water	36:57	0:0	4	extension_sys_t
water	36:73	0:0	4	)
water	36:76	0:0	2	;
if	37:4	43:4	2	(! p_ext -> p_sys || ! p_ext -> psz_name)
cond	37:8	37:33	3	! p_ext -> p_sys || ! p_ext -> psz_name
op	37:8	0:0	4	!
water	37:9	0:0	4	p_ext
op	37:14	0:0	4	->
water	37:16	0:0	4	p_sys
op	37:22	0:0	4	||
op	37:25	0:0	4	!
water	37:26	0:0	4	p_ext
op	37:31	0:0	4	->
water	37:33	0:0	4	psz_name
stmts	38:4	43:4	3	
water	38:4	0:0	4	{
call	39:8	39:30	4	free
arg	39:14	39:30	5	p_ext->psz_name
water	39:14	0:0	6	p_ext
op	39:19	0:0	6	->
water	39:21	0:0	6	psz_name
water	39:31	0:0	4	;
call	40:8	40:27	4	free
arg	40:14	40:27	5	p_ext->p_sys
water	40:14	0:0	6	p_ext
op	40:19	0:0	6	->
water	40:21	0:0	6	p_sys
water	40:28	0:0	4	;
call	41:8	41:20	4	free
arg	41:14	41:20	5	p_ext
water	41:14	0:0	6	p_ext
water	41:21	0:0	4	;
return	42:8	42:16	4	0
water	42:15	0:0	5	0
water	43:4	0:0	4	}
water	44:4	0:0	2	p_ext
op	44:9	0:0	2	->
water	44:11	0:0	2	p_sys
op	44:16	0:0	2	->
water	44:18	0:0	2	p_mgr
op	44:24	0:0	2	=
water	44:26	0:0	2	p_mgr
water	44:31	0:0	2	;
if	46:4	52:4	2	(vlc_timer_create (& p_ext -> p_sys -> timer ,WatchTimerCallback ,p_ext ))
cond	46:8	46:74	3	vlc_timer_create (& p_ext -> p_sys -> timer ,WatchTimerCallback ,p_ext )
call	46:8	46:74	4	vlc_timer_create
arg	46:26	46:46	5	&p_ext->p_sys->timer
op	46:26	0:0	6	&
water	46:27	0:0	6	p_ext
op	46:32	0:0	6	->
water	46:34	0:0	6	p_sys
op	46:39	0:0	6	->
water	46:41	0:0	6	timer
arg	46:48	46:66	5	WatchTimerCallback
water	46:48	0:0	6	WatchTimerCallback
arg	46:68	46:74	5	p_ext
water	46:68	0:0	6	p_ext
stmts	47:4	52:4	3	
water	47:4	0:0	4	{
call	48:8	48:30	4	free
arg	48:14	48:30	5	p_ext->psz_name
water	48:14	0:0	6	p_ext
op	48:19	0:0	6	->
water	48:21	0:0	6	psz_name
water	48:31	0:0	4	;
call	49:8	49:27	4	free
arg	49:14	49:27	5	p_ext->p_sys
water	49:14	0:0	6	p_ext
op	49:19	0:0	6	->
water	49:21	0:0	6	p_sys
water	49:28	0:0	4	;
call	50:8	50:20	4	free
arg	50:14	50:20	5	p_ext
water	50:14	0:0	6	p_ext
water	50:21	0:0	4	;
return	51:8	51:16	4	0
water	51:15	0:0	5	0
water	52:4	0:0	4	}
call	54:4	54:48	2	vlc_mutex_init
arg	54:20	54:48	3	&p_ext->p_sys->command_lock
op	54:20	0:0	4	&
water	54:21	0:0	4	p_ext
op	54:26	0:0	4	->
water	54:28	0:0	4	p_sys
op	54:33	0:0	4	->
water	54:35	0:0	4	command_lock
water	54:49	0:0	2	;
call	55:4	55:48	2	vlc_mutex_init
arg	55:20	55:48	3	&p_ext->p_sys->running_lock
op	55:20	0:0	4	&
water	55:21	0:0	4	p_ext
op	55:26	0:0	4	->
water	55:28	0:0	4	p_sys
op	55:33	0:0	4	->
water	55:35	0:0	4	running_lock
water	55:49	0:0	2	;
call	56:4	56:39	2	vlc_cond_init
arg	56:19	56:39	3	&p_ext->p_sys->wait
op	56:19	0:0	4	&
water	56:20	0:0	4	p_ext
op	56:25	0:0	4	->
water	56:27	0:0	4	p_sys
op	56:32	0:0	4	->
water	56:34	0:0	4	wait
water	56:40	0:0	2	;
decl	58:4	58:34	2	lua_State	*L
op	58:17	0:0	2	=
call	58:19	58:33	3	luaL_newstate
call	59:4	59:54	2	lua_register
arg	59:18	59:19	3	L
water	59:18	0:0	4	L
arg	59:21	59:30	3	"require"
water	59:21	0:0	4	"require"
arg	59:32	59:54	3	&vlclua_dummy_require
op	59:32	0:0	4	&
water	59:33	0:0	4	vlclua_dummy_require
water	59:55	0:0	2	;
if	61:4	67:4	2	(vlclua_dofile (p_this ,L ,psz_script ))
cond	61:8	61:45	3	vlclua_dofile (p_this ,L ,psz_script )
call	61:8	61:45	4	vlclua_dofile
arg	61:23	61:29	5	p_this
water	61:23	0:0	6	p_this
arg	61:31	61:32	5	L
water	61:31	0:0	6	L
arg	61:34	61:45	5	psz_script
water	61:34	0:0	6	psz_script
stmts	62:4	67:4	3	
water	62:4	0:0	4	{
call	63:8	64:53	4	msg_Warn
arg	63:18	63:23	5	p_mgr
water	63:18	0:0	6	p_mgr
arg	63:25	63:54	5	"Error loading script %s: %s"
water	63:25	0:0	6	"Error loading script %s: %s"
arg	63:56	63:66	5	psz_script
water	63:56	0:0	6	psz_script
arg	64:18	64:53	5	lua_tostring(L,lua_gettop(L))
call	64:18	64:51	6	lua_tostring
arg	64:32	64:33	7	L
water	64:32	0:0	8	L
arg	64:35	64:51	7	lua_gettop(L)
call	64:35	64:49	8	lua_gettop
arg	64:47	64:49	9	L
water	64:47	0:0	10	L
water	64:54	0:0	4	;
call	65:8	65:22	4	lua_pop
arg	65:17	65:18	5	L
water	65:17	0:0	6	L
arg	65:20	65:22	5	1
water	65:20	0:0	6	1
water	65:23	0:0	4	;
goto	66:8	66:17	4	exit
water	66:13	0:0	5	exit
water	67:4	0:0	4	}
call	69:4	69:35	2	lua_getglobal
arg	69:19	69:20	3	L
water	69:19	0:0	4	L
arg	69:22	69:35	3	"descriptor"
water	69:22	0:0	4	"descriptor"
water	69:36	0:0	2	;
if	70:4	75:4	2	(!lua_isfunction (L ,- 1 ))
cond	70:8	70:31	3	!lua_isfunction (L ,- 1 )
op	70:8	0:0	4	!
call	70:9	70:31	4	lua_isfunction
arg	70:25	70:26	5	L
water	70:25	0:0	6	L
arg	70:28	70:31	5	-1
op	70:28	0:0	6	-
water	70:29	0:0	6	1
stmts	71:4	75:4	3	
water	71:4	0:0	4	{
call	72:8	73:64	4	msg_Warn
arg	72:18	72:23	5	p_mgr
water	72:18	0:0	6	p_mgr
arg	72:25	73:51	5	"Error while running script %s, ""function descriptor() not found"
water	72:25	0:0	6	"Error while running script %s, "
water	73:18	0:0	6	"function descriptor() not found"
arg	73:53	73:64	5	psz_script
water	73:53	0:0	6	psz_script
water	73:65	0:0	4	;
goto	74:8	74:17	4	exit
water	74:13	0:0	5	exit
water	75:4	0:0	4	}
if	76:4	82:4	2	(lua_pcall (L ,0 ,1 ,0 ))
cond	76:8	76:30	3	lua_pcall (L ,0 ,1 ,0 )
call	76:8	76:30	4	lua_pcall
arg	76:19	76:20	5	L
water	76:19	0:0	6	L
arg	76:22	76:23	5	0
water	76:22	0:0	6	0
arg	76:25	76:26	5	1
water	76:25	0:0	6	1
arg	76:28	76:30	5	0
water	76:28	0:0	6	0
stmts	77:4	82:4	3	
water	77:4	0:0	4	{
call	78:8	80:53	4	msg_Warn
arg	78:18	78:23	5	p_mgr
water	78:18	0:0	6	p_mgr
arg	78:25	79:45	5	"Error while running script %s, ""function descriptor(): %s"
water	78:25	0:0	6	"Error while running script %s, "
water	79:18	0:0	6	"function descriptor(): %s"
arg	79:47	79:57	5	psz_script
water	79:47	0:0	6	psz_script
arg	80:18	80:53	5	lua_tostring(L,lua_gettop(L))
call	80:18	80:51	6	lua_tostring
arg	80:32	80:33	7	L
water	80:32	0:0	8	L
arg	80:35	80:51	7	lua_gettop(L)
call	80:35	80:49	8	lua_gettop
arg	80:47	80:49	9	L
water	80:47	0:0	10	L
water	80:54	0:0	4	;
goto	81:8	81:17	4	exit
water	81:13	0:0	5	exit
water	82:4	0:0	4	}
if	83:4	178:4	2	(lua_gettop (L ))
cond	83:8	83:22	3	lua_gettop (L )
call	83:8	83:22	4	lua_gettop
arg	83:20	83:22	5	L
water	83:20	0:0	6	L
stmts	84:4	178:4	3	
water	84:4	0:0	4	{
if	85:8	171:8	4	(lua_istable (L ,- 1 ))
cond	85:12	85:31	5	lua_istable (L ,- 1 )
call	85:12	85:31	6	lua_istable
arg	85:25	85:26	7	L
water	85:25	0:0	8	L
arg	85:28	85:31	7	-1
op	85:28	0:0	8	-
water	85:29	0:0	8	1
stmts	86:8	171:8	5	
water	86:8	0:0	6	{
call	88:12	88:48	6	lua_getfield
arg	88:26	88:27	7	L
water	88:26	0:0	8	L
arg	88:29	88:31	7	-1
op	88:29	0:0	8	-
water	88:30	0:0	8	1
arg	88:33	88:48	7	"capabilities"
water	88:33	0:0	8	"capabilities"
water	88:49	0:0	6	;
if	89:12	116:12	6	(lua_istable (L ,- 1 ))
cond	89:16	89:35	7	lua_istable (L ,- 1 )
call	89:16	89:35	8	lua_istable
arg	89:29	89:30	9	L
water	89:29	0:0	10	L
arg	89:32	89:35	9	-1
op	89:32	0:0	10	-
water	89:33	0:0	10	1
stmts	90:12	116:12	7	
water	90:12	0:0	8	{
call	91:16	91:31	8	lua_pushnil
arg	91:29	91:31	9	L
water	91:29	0:0	10	L
water	91:32	0:0	8	;
while	92:16	115:16	8	(lua_next (L ,- 2 ) != 0)
cond	92:23	92:44	9	lua_next (L ,- 2 ) != 0
call	92:23	92:39	10	lua_next
arg	92:33	92:34	11	L
water	92:33	0:0	12	L
arg	92:36	92:39	11	-2
op	92:36	0:0	12	-
water	92:37	0:0	12	2
op	92:41	0:0	10	!=
water	92:44	0:0	10	0
stmts	93:16	115:16	9	
water	93:16	0:0	10	{
decl	95:20	95:67	10	const char	*psz_cap
op	95:40	0:0	10	=
call	95:42	95:66	11	luaL_checkstring
arg	95:60	95:61	12	L
water	95:60	0:0	13	L
arg	95:63	95:66	12	-1
op	95:63	0:0	13	-
water	95:64	0:0	13	1
decl	96:20	96:37	10	bool	b_ok
op	96:30	0:0	10	=
water	96:32	0:0	10	false
for	98:20	107:20	10	( size_t i = 0 ;i < sizeof ( caps ) / sizeof ( caps [ 0 ] );i ++)
forinit	0:0	98:37	11	 size_t i = 0 ;
decl	98:25	98:37	12	size_t	i
op	98:34	0:0	12	=
water	98:36	0:0	12	0
cond	98:39	98:70	11	i < sizeof ( caps ) / sizeof ( caps [ 0 ] )
water	98:39	0:0	12	i
op	98:41	0:0	12	<
op	98:43	0:0	12	sizeof
water	98:49	0:0	12	(
water	98:50	0:0	12	caps
water	98:54	0:0	12	)
op	98:55	0:0	12	/
op	98:56	0:0	12	sizeof
water	98:62	0:0	12	(
water	98:63	0:0	12	caps
op	98:67	0:0	12	[
water	98:68	0:0	12	0
op	98:69	0:0	12	]
water	98:70	0:0	12	)
forexpr	98:73	98:74	11	i ++
water	98:73	0:0	12	i
op	98:74	0:0	12	++
stmts	99:20	107:20	11	
water	99:20	0:0	12	{
if	100:24	106:24	12	(!strcmp (caps [ i ] ,psz_cap ))
cond	100:28	100:54	13	!strcmp (caps [ i ] ,psz_cap )
op	100:28	0:0	14	!
call	100:29	100:54	14	strcmp
arg	100:37	100:44	15	caps[i]
water	100:37	0:0	16	caps
op	100:41	0:0	16	[
water	100:42	0:0	16	i
op	100:43	0:0	16	]
arg	100:46	100:54	15	psz_cap
water	100:46	0:0	16	psz_cap
stmts	101:24	106:24	13	
water	101:24	0:0	14	{
water	103:28	0:0	14	p_ext
op	103:33	0:0	14	->
water	103:35	0:0	14	p_sys
op	103:40	0:0	14	->
water	103:42	0:0	14	i_capabilities
op	103:57	0:0	14	|=
water	103:60	0:0	14	1
op	103:62	0:0	14	<<
water	103:65	0:0	14	i
water	103:66	0:0	14	;
water	104:28	0:0	14	b_ok
op	104:33	0:0	14	=
water	104:35	0:0	14	true
water	104:39	0:0	14	;
break	105:28	105:33	14	
water	106:24	0:0	14	}
water	107:20	0:0	12	}
if	108:20	112:20	10	(! b_ok)
cond	108:24	108:25	11	! b_ok
op	108:24	0:0	12	!
water	108:25	0:0	12	b_ok
stmts	109:20	112:20	11	
water	109:20	0:0	12	{
call	110:24	111:68	12	msg_Warn
arg	110:34	110:39	13	p_mgr
water	110:34	0:0	14	p_mgr
arg	110:41	111:46	13	"Extension capability '%s' unknown in"" script %s"
water	110:41	0:0	14	"Extension capability '%s' unknown in"
water	111:34	0:0	14	" script %s"
arg	111:48	111:55	13	psz_cap
water	111:48	0:0	14	psz_cap
arg	111:57	111:68	13	psz_script
water	111:57	0:0	14	psz_script
water	111:69	0:0	12	;
water	112:20	0:0	12	}
call	114:20	114:34	10	lua_pop
arg	114:29	114:30	11	L
water	114:29	0:0	12	L
arg	114:32	114:34	11	1
water	114:32	0:0	12	1
water	114:35	0:0	10	;
water	115:16	0:0	10	}
water	116:12	0:0	8	}
else	117:12	122:12	6
stmts	118:12	122:12	7	
water	118:12	0:0	8	{
call	119:16	121:41	8	msg_Warn
arg	119:26	119:31	9	p_mgr
water	119:26	0:0	10	p_mgr
arg	119:33	120:71	9	"In script %s, function descriptor() ""did not return a table of capabilities."
water	119:33	0:0	10	"In script %s, function descriptor() "
water	120:30	0:0	10	"did not return a table of capabilities."
arg	121:30	121:41	9	psz_script
water	121:30	0:0	10	psz_script
water	121:42	0:0	8	;
water	122:12	0:0	8	}
call	123:12	123:26	6	lua_pop
arg	123:21	123:22	7	L
water	123:21	0:0	8	L
arg	123:24	123:26	7	1
water	123:24	0:0	8	1
water	123:27	0:0	6	;
call	125:12	125:41	6	lua_getfield
arg	125:26	125:27	7	L
water	125:26	0:0	8	L
arg	125:29	125:31	7	-1
op	125:29	0:0	8	-
water	125:30	0:0	8	1
arg	125:33	125:41	7	"title"
water	125:33	0:0	8	"title"
water	125:42	0:0	6	;
if	126:12	129:12	6	(lua_isstring (L ,- 1 ))
cond	126:16	126:36	7	lua_isstring (L ,- 1 )
call	126:16	126:36	8	lua_isstring
arg	126:30	126:31	9	L
water	126:30	0:0	10	L
arg	126:33	126:36	9	-1
op	126:33	0:0	10	-
water	126:34	0:0	10	1
stmts	127:12	129:12	7	
water	127:12	0:0	8	{
water	128:16	0:0	8	p_ext
op	128:21	0:0	8	->
water	128:23	0:0	8	psz_title
op	128:33	0:0	8	=
call	128:35	128:69	8	strdup
arg	128:43	128:69	9	luaL_checkstring(L,-1)
call	128:43	128:67	10	luaL_checkstring
arg	128:61	128:62	11	L
water	128:61	0:0	12	L
arg	128:64	128:67	11	-1
op	128:64	0:0	12	-
water	128:65	0:0	12	1
water	128:70	0:0	8	;
water	129:12	0:0	8	}
else	130:12	136:12	6
stmts	131:12	136:12	7	
water	131:12	0:0	8	{
call	132:16	134:43	8	msg_Dbg
arg	132:25	132:30	9	p_mgr
water	132:25	0:0	10	p_mgr
arg	132:32	133:67	9	"In script %s, function descriptor() ""did not return a string as title."
water	132:32	0:0	10	"In script %s, function descriptor() "
water	133:32	0:0	10	"did not return a string as title."
arg	134:32	134:43	9	psz_script
water	134:32	0:0	10	psz_script
water	134:44	0:0	8	;
water	135:16	0:0	8	p_ext
op	135:21	0:0	8	->
water	135:23	0:0	8	psz_title
op	135:33	0:0	8	=
call	135:35	135:54	8	strdup
arg	135:43	135:54	9	psz_script
water	135:43	0:0	10	psz_script
water	135:55	0:0	8	;
water	136:12	0:0	8	}
call	137:12	137:26	6	lua_pop
arg	137:21	137:22	7	L
water	137:21	0:0	8	L
arg	137:24	137:26	7	1
water	137:24	0:0	8	1
water	137:27	0:0	6	;
call	139:12	139:42	6	lua_getfield
arg	139:26	139:27	7	L
water	139:26	0:0	8	L
arg	139:29	139:31	7	-1
op	139:29	0:0	8	-
water	139:30	0:0	8	1
arg	139:33	139:42	7	"author"
water	139:33	0:0	8	"author"
water	139:43	0:0	6	;
water	140:12	0:0	6	p_ext
op	140:17	0:0	6	->
water	140:19	0:0	6	psz_author
op	140:30	0:0	6	=
call	140:32	140:57	6	luaL_strdupornull
arg	140:51	140:52	7	L
water	140:51	0:0	8	L
arg	140:54	140:57	7	-1
op	140:54	0:0	8	-
water	140:55	0:0	8	1
water	140:58	0:0	6	;
call	141:12	141:26	6	lua_pop
arg	141:21	141:22	7	L
water	141:21	0:0	8	L
arg	141:24	141:26	7	1
water	141:24	0:0	8	1
water	141:27	0:0	6	;
call	143:12	143:47	6	lua_getfield
arg	143:26	143:27	7	L
water	143:26	0:0	8	L
arg	143:29	143:31	7	-1
op	143:29	0:0	8	-
water	143:30	0:0	8	1
arg	143:33	143:47	7	"description"
water	143:33	0:0	8	"description"
water	143:48	0:0	6	;
water	144:12	0:0	6	p_ext
op	144:17	0:0	6	->
water	144:19	0:0	6	psz_description
op	144:35	0:0	6	=
call	144:37	144:62	6	luaL_strdupornull
arg	144:56	144:57	7	L
water	144:56	0:0	8	L
arg	144:59	144:62	7	-1
op	144:59	0:0	8	-
water	144:60	0:0	8	1
water	144:63	0:0	6	;
call	145:12	145:26	6	lua_pop
arg	145:21	145:22	7	L
water	145:21	0:0	8	L
arg	145:24	145:26	7	1
water	145:24	0:0	8	1
water	145:27	0:0	6	;
call	147:12	147:45	6	lua_getfield
arg	147:26	147:27	7	L
water	147:26	0:0	8	L
arg	147:29	147:31	7	-1
op	147:29	0:0	8	-
water	147:30	0:0	8	1
arg	147:33	147:45	7	"shortdesc"
water	147:33	0:0	8	"shortdesc"
water	147:46	0:0	6	;
water	148:12	0:0	6	p_ext
op	148:17	0:0	6	->
water	148:19	0:0	6	psz_shortdescription
op	148:40	0:0	6	=
call	148:42	148:67	6	luaL_strdupornull
arg	148:61	148:62	7	L
water	148:61	0:0	8	L
arg	148:64	148:67	7	-1
op	148:64	0:0	8	-
water	148:65	0:0	8	1
water	148:68	0:0	6	;
call	149:12	149:26	6	lua_pop
arg	149:21	149:22	7	L
water	149:21	0:0	8	L
arg	149:24	149:26	7	1
water	149:24	0:0	8	1
water	149:27	0:0	6	;
call	151:12	151:39	6	lua_getfield
arg	151:26	151:27	7	L
water	151:26	0:0	8	L
arg	151:29	151:31	7	-1
op	151:29	0:0	8	-
water	151:30	0:0	8	1
arg	151:33	151:39	7	"url"
water	151:33	0:0	8	"url"
water	151:40	0:0	6	;
water	152:12	0:0	6	p_ext
op	152:17	0:0	6	->
water	152:19	0:0	6	psz_url
op	152:27	0:0	6	=
call	152:29	152:54	6	luaL_strdupornull
arg	152:48	152:49	7	L
water	152:48	0:0	8	L
arg	152:51	152:54	7	-1
op	152:51	0:0	8	-
water	152:52	0:0	8	1
water	152:55	0:0	6	;
call	153:12	153:26	6	lua_pop
arg	153:21	153:22	7	L
water	153:21	0:0	8	L
arg	153:24	153:26	7	1
water	153:24	0:0	8	1
water	153:27	0:0	6	;
call	155:12	155:43	6	lua_getfield
arg	155:26	155:27	7	L
water	155:26	0:0	8	L
arg	155:29	155:31	7	-1
op	155:29	0:0	8	-
water	155:30	0:0	8	1
arg	155:33	155:43	7	"version"
water	155:33	0:0	8	"version"
water	155:44	0:0	6	;
water	156:12	0:0	6	p_ext
op	156:17	0:0	6	->
water	156:19	0:0	6	psz_version
op	156:31	0:0	6	=
call	156:33	156:58	6	luaL_strdupornull
arg	156:52	156:53	7	L
water	156:52	0:0	8	L
arg	156:55	156:58	7	-1
op	156:55	0:0	8	-
water	156:56	0:0	8	1
water	156:59	0:0	6	;
call	157:12	157:26	6	lua_pop
arg	157:21	157:22	7	L
water	157:21	0:0	8	L
arg	157:24	157:26	7	1
water	157:24	0:0	8	1
water	157:27	0:0	6	;
call	159:12	159:40	6	lua_getfield
arg	159:26	159:27	7	L
water	159:26	0:0	8	L
arg	159:29	159:31	7	-1
op	159:29	0:0	8	-
water	159:30	0:0	8	1
arg	159:33	159:40	7	"icon"
water	159:33	0:0	8	"icon"
water	159:41	0:0	6	;
if	160:12	169:12	6	(!lua_isnil (L ,- 1 ) &&lua_isstring (L ,- 1 ))
cond	160:16	160:59	7	!lua_isnil (L ,- 1 ) &&lua_isstring (L ,- 1 )
op	160:16	0:0	8	!
call	160:17	160:34	8	lua_isnil
arg	160:28	160:29	9	L
water	160:28	0:0	10	L
arg	160:31	160:34	9	-1
op	160:31	0:0	10	-
water	160:32	0:0	10	1
op	160:36	0:0	8	&&
call	160:39	160:59	8	lua_isstring
arg	160:53	160:54	9	L
water	160:53	0:0	10	L
arg	160:56	160:59	9	-1
op	160:56	0:0	10	-
water	160:57	0:0	10	1
stmts	161:12	169:12	7	
water	161:12	0:0	8	{
decl	162:16	162:45	8	int	len
op	162:24	0:0	8	=
call	162:26	162:44	9	lua_strlen
arg	162:38	162:39	10	L
water	162:38	0:0	11	L
arg	162:41	162:44	10	-1
op	162:41	0:0	11	-
water	162:42	0:0	11	1
water	163:16	0:0	8	p_ext
op	163:21	0:0	8	->
water	163:23	0:0	8	p_icondata
op	163:34	0:0	8	=
call	163:36	163:48	8	malloc
arg	163:44	163:48	9	len
water	163:44	0:0	10	len
water	163:49	0:0	8	;
if	164:16	168:16	8	(p_ext -> p_icondata)
cond	164:20	164:27	9	p_ext -> p_icondata
water	164:20	0:0	10	p_ext
op	164:25	0:0	10	->
water	164:27	0:0	10	p_icondata
stmts	165:16	168:16	9	
water	165:16	0:0	10	{
water	166:20	0:0	10	p_ext
op	166:25	0:0	10	->
water	166:27	0:0	10	i_icondata_size
op	166:43	0:0	10	=
water	166:45	0:0	10	len
water	166:48	0:0	10	;
call	167:20	167:74	10	memcpy
arg	167:28	167:45	11	p_ext->p_icondata
water	167:28	0:0	12	p_ext
op	167:33	0:0	12	->
water	167:35	0:0	12	p_icondata
arg	167:47	167:68	11	lua_tostring(L,-1)
call	167:47	167:67	12	lua_tostring
arg	167:61	167:62	13	L
water	167:61	0:0	14	L
arg	167:64	167:67	13	-1
op	167:64	0:0	14	-
water	167:65	0:0	14	1
arg	167:70	167:74	11	len
water	167:70	0:0	12	len
water	167:75	0:0	10	;
water	168:16	0:0	10	}
water	169:12	0:0	8	}
call	170:12	170:26	6	lua_pop
arg	170:21	170:22	7	L
water	170:21	0:0	8	L
arg	170:24	170:26	7	1
water	170:24	0:0	8	1
water	170:27	0:0	6	;
water	171:8	0:0	6	}
else	172:8	177:8	4
stmts	173:8	177:8	5	
water	173:8	0:0	6	{
call	174:12	175:60	6	msg_Warn
arg	174:22	174:27	7	p_mgr
water	174:22	0:0	8	p_mgr
arg	174:29	175:47	7	"In script %s, function descriptor() ""did not return a table!"
water	174:29	0:0	8	"In script %s, function descriptor() "
water	175:22	0:0	8	"did not return a table!"
arg	175:49	175:60	7	psz_script
water	175:49	0:0	8	psz_script
water	175:61	0:0	6	;
goto	176:12	176:21	6	exit
water	176:17	0:0	7	exit
water	177:8	0:0	6	}
water	178:4	0:0	4	}
else	179:4	183:4	2
stmts	180:4	183:4	3	
water	180:4	0:0	4	{
call	181:8	181:71	4	msg_Err
arg	181:17	181:22	5	p_mgr
water	181:17	0:0	6	p_mgr
arg	181:24	181:58	5	"Script %s went completely foobar"
water	181:24	0:0	6	"Script %s went completely foobar"
arg	181:60	181:71	5	psz_script
water	181:60	0:0	6	psz_script
water	181:72	0:0	4	;
goto	182:8	182:17	4	exit
water	182:13	0:0	5	exit
water	183:4	0:0	4	}
call	184:4	185:54	2	msg_Dbg
arg	184:13	184:18	3	p_mgr
water	184:13	0:0	4	p_mgr
arg	184:20	184:72	3	"Script %s has the following capability flags: 0x%x"
water	184:20	0:0	4	"Script %s has the following capability flags: 0x%x"
arg	185:13	185:23	3	psz_script
water	185:13	0:0	4	psz_script
arg	185:25	185:54	3	p_ext->p_sys->i_capabilities
water	185:25	0:0	4	p_ext
op	185:30	0:0	4	->
water	185:32	0:0	4	p_sys
op	185:37	0:0	4	->
water	185:39	0:0	4	i_capabilities
water	185:55	0:0	2	;
water	186:4	0:0	2	b_ok
op	186:9	0:0	2	=
water	186:11	0:0	2	true
water	186:15	0:0	2	;
label	187:0	187:4	2	exit :
call	188:4	188:17	2	lua_close
arg	188:15	188:17	3	L
water	188:15	0:0	4	L
water	188:18	0:0	2	;
if	189:4	203:4	2	(! b_ok)
cond	189:8	189:9	3	! b_ok
op	189:8	0:0	4	!
water	189:9	0:0	4	b_ok
stmts	190:4	203:4	3	
water	190:4	0:0	4	{
call	191:8	191:30	4	free
arg	191:14	191:30	5	p_ext->psz_name
water	191:14	0:0	6	p_ext
op	191:19	0:0	6	->
water	191:21	0:0	6	psz_name
water	191:31	0:0	4	;
call	192:8	192:31	4	free
arg	192:14	192:31	5	p_ext->psz_title
water	192:14	0:0	6	p_ext
op	192:19	0:0	6	->
water	192:21	0:0	6	psz_title
water	192:32	0:0	4	;
call	193:8	193:29	4	free
arg	193:14	193:29	5	p_ext->psz_url
water	193:14	0:0	6	p_ext
op	193:19	0:0	6	->
water	193:21	0:0	6	psz_url
water	193:30	0:0	4	;
call	194:8	194:32	4	free
arg	194:14	194:32	5	p_ext->psz_author
water	194:14	0:0	6	p_ext
op	194:19	0:0	6	->
water	194:21	0:0	6	psz_author
water	194:33	0:0	4	;
call	195:8	195:37	4	free
arg	195:14	195:37	5	p_ext->psz_description
water	195:14	0:0	6	p_ext
op	195:19	0:0	6	->
water	195:21	0:0	6	psz_description
water	195:38	0:0	4	;
call	196:8	196:42	4	free
arg	196:14	196:42	5	p_ext->psz_shortdescription
water	196:14	0:0	6	p_ext
op	196:19	0:0	6	->
water	196:21	0:0	6	psz_shortdescription
water	196:43	0:0	4	;
call	197:8	197:33	4	free
arg	197:14	197:33	5	p_ext->psz_version
water	197:14	0:0	6	p_ext
op	197:19	0:0	6	->
water	197:21	0:0	6	psz_version
water	197:34	0:0	4	;
call	198:8	198:55	4	vlc_mutex_destroy
arg	198:27	198:55	5	&p_ext->p_sys->command_lock
op	198:27	0:0	6	&
water	198:28	0:0	6	p_ext
op	198:33	0:0	6	->
water	198:35	0:0	6	p_sys
op	198:40	0:0	6	->
water	198:42	0:0	6	command_lock
water	198:56	0:0	4	;
call	199:8	199:55	4	vlc_mutex_destroy
arg	199:27	199:55	5	&p_ext->p_sys->running_lock
op	199:27	0:0	6	&
water	199:28	0:0	6	p_ext
op	199:33	0:0	6	->
water	199:35	0:0	6	p_sys
op	199:40	0:0	6	->
water	199:42	0:0	6	running_lock
water	199:56	0:0	4	;
call	200:8	200:46	4	vlc_cond_destroy
arg	200:26	200:46	5	&p_ext->p_sys->wait
op	200:26	0:0	6	&
water	200:27	0:0	6	p_ext
op	200:32	0:0	6	->
water	200:34	0:0	6	p_sys
op	200:39	0:0	6	->
water	200:41	0:0	6	wait
water	200:47	0:0	4	;
call	201:8	201:27	4	free
arg	201:14	201:27	5	p_ext->p_sys
water	201:14	0:0	6	p_ext
op	201:19	0:0	6	->
water	201:21	0:0	6	p_sys
water	201:28	0:0	4	;
call	202:8	202:20	4	free
arg	202:14	202:20	5	p_ext
water	202:14	0:0	6	p_ext
water	202:21	0:0	4	;
water	203:4	0:0	4	}
else	204:4	208:4	2
stmts	205:4	208:4	3	
water	205:4	0:0	4	{
call	207:8	207:47	4	ARRAY_APPEND
arg	207:22	207:39	5	p_mgr->extensions
water	207:22	0:0	6	p_mgr
op	207:27	0:0	6	->
water	207:29	0:0	6	extensions
arg	207:41	207:47	5	p_ext
water	207:41	0:0	6	p_ext
water	207:48	0:0	4	;
water	208:4	0:0	4	}
return	210:4	210:23	2	VLC_EGENERIC
water	210:11	0:0	3	VLC_EGENERIC

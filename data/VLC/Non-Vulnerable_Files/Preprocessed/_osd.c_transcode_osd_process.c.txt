func	2:0	39:0	0	int	transcode_osd_process
params	2:25	0:0	1	
param	2:27	2:50	2	sout_stream_t *	p_stream
param	2:52	2:76	2	sout_stream_id_sys_t *	id
param	3:34	3:45	2	block_t *	in
param	3:47	3:61	2	block_t * *	out
stmnts	0:0	38:23	1	
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
decl	6:4	6:33	2	subpicture_t	*p_subpic
op	6:27	0:0	2	=
water	6:29	0:0	2	NULL
if	8:4	14:4	2	(p_sys -> p_spu && in -> i_dts > VLC_TS_INVALID)
cond	8:8	8:36	3	p_sys -> p_spu && in -> i_dts > VLC_TS_INVALID
water	8:8	0:0	4	p_sys
op	8:13	0:0	4	->
water	8:15	0:0	4	p_spu
op	8:21	0:0	4	&&
water	8:24	0:0	4	in
op	8:26	0:0	4	->
water	8:28	0:0	4	i_dts
op	8:34	0:0	4	>
water	8:36	0:0	4	VLC_TS_INVALID
stmts	9:4	14:4	3	
water	9:4	0:0	4	{
decl	10:8	10:26	4	video_format_t	fmt
call	11:8	11:35	4	video_format_Init
arg	11:27	11:31	5	&fmt
op	11:27	0:0	6	&
water	11:28	0:0	6	fmt
arg	11:33	11:35	5	0
water	11:33	0:0	6	0
water	11:36	0:0	4	;
call	12:8	12:62	4	video_format_Setup
arg	12:28	12:32	5	&fmt
op	12:28	0:0	6	&
water	12:29	0:0	6	fmt
arg	12:34	12:35	5	0
water	12:34	0:0	6	0
arg	12:37	12:40	5	720
water	12:37	0:0	6	720
arg	12:42	12:45	5	576
water	12:42	0:0	6	576
arg	12:47	12:50	5	720
water	12:47	0:0	6	720
arg	12:52	12:55	5	576
water	12:52	0:0	6	576
arg	12:57	12:58	5	1
water	12:57	0:0	6	1
arg	12:60	12:62	5	1
water	12:60	0:0	6	1
water	12:63	0:0	4	;
water	13:8	0:0	4	p_subpic
op	13:17	0:0	4	=
call	13:19	13:91	4	spu_Render
arg	13:31	13:43	5	p_sys->p_spu
water	13:31	0:0	6	p_sys
op	13:36	0:0	6	->
water	13:38	0:0	6	p_spu
arg	13:45	13:49	5	NULL
water	13:45	0:0	6	NULL
arg	13:51	13:55	5	&fmt
op	13:51	0:0	6	&
water	13:52	0:0	6	fmt
arg	13:57	13:61	5	&fmt
op	13:57	0:0	6	&
water	13:58	0:0	6	fmt
arg	13:63	13:72	5	in->i_dts
water	13:63	0:0	6	in
op	13:65	0:0	6	->
water	13:67	0:0	6	i_dts
arg	13:74	13:83	5	in->i_dts
water	13:74	0:0	6	in
op	13:76	0:0	6	->
water	13:78	0:0	6	i_dts
arg	13:85	13:91	5	false
water	13:85	0:0	6	false
water	13:92	0:0	4	;
water	14:4	0:0	4	}
else	15:4	20:4	2
stmts	16:4	20:4	3	
water	16:4	0:0	4	{
call	17:8	17:72	4	msg_Warn
arg	17:18	17:26	5	p_stream
water	17:18	0:0	6	p_stream
arg	17:28	17:72	5	"spu channel not initialized, doing it now"
water	17:28	0:0	6	"spu channel not initialized, doing it now"
water	17:73	0:0	4	;
if	18:8	19:49	4	(! p_sys -> p_spu)
cond	18:12	18:20	5	! p_sys -> p_spu
op	18:12	0:0	6	!
water	18:13	0:0	6	p_sys
op	18:18	0:0	6	->
water	18:20	0:0	6	p_spu
stmts	19:12	19:49	5	
water	19:12	0:0	6	p_sys
op	19:17	0:0	6	->
water	19:19	0:0	6	p_spu
op	19:25	0:0	6	=
call	19:27	19:48	6	spu_Create
arg	19:39	19:48	7	p_stream
water	19:39	0:0	8	p_stream
water	19:49	0:0	6	;
water	20:4	0:0	4	}
if	21:4	37:4	2	(p_subpic)
cond	21:8	21:8	3	p_subpic
water	21:8	0:0	4	p_subpic
stmts	22:4	37:4	3	
water	22:4	0:0	4	{
decl	23:8	23:31	4	block_t	*p_block
op	23:25	0:0	4	=
water	23:27	0:0	4	NULL
if	24:8	28:8	4	(p_sys -> b_master_sync && p_sys -> i_master_drift)
cond	24:12	24:43	5	p_sys -> b_master_sync && p_sys -> i_master_drift
water	24:12	0:0	6	p_sys
op	24:17	0:0	6	->
water	24:19	0:0	6	b_master_sync
op	24:33	0:0	6	&&
water	24:36	0:0	6	p_sys
op	24:41	0:0	6	->
water	24:43	0:0	6	i_master_drift
stmts	25:8	28:8	5	
water	25:8	0:0	6	{
water	26:12	0:0	6	p_subpic
op	26:20	0:0	6	->
water	26:22	0:0	6	i_start
op	26:30	0:0	6	-=
water	26:33	0:0	6	p_sys
op	26:38	0:0	6	->
water	26:40	0:0	6	i_master_drift
water	26:54	0:0	6	;
if	27:12	27:76	6	(p_subpic -> i_stop)
cond	27:16	27:26	7	p_subpic -> i_stop
water	27:16	0:0	8	p_subpic
op	27:24	0:0	8	->
water	27:26	0:0	8	i_stop
stmts	27:35	27:76	7	
water	27:35	0:0	8	p_subpic
op	27:43	0:0	8	->
water	27:45	0:0	8	i_stop
op	27:52	0:0	8	-=
water	27:55	0:0	8	p_sys
op	27:60	0:0	8	->
water	27:62	0:0	8	i_master_drift
water	27:76	0:0	8	;
water	28:8	0:0	6	}
water	29:8	0:0	4	p_block
op	29:16	0:0	4	=
call	29:18	29:72	4	id->p_encoder->pf_encode_sub
arg	29:48	29:61	5	id->p_encoder
water	29:48	0:0	6	id
op	29:50	0:0	6	->
water	29:52	0:0	6	p_encoder
arg	29:63	29:72	5	p_subpic
water	29:63	0:0	6	p_subpic
water	29:73	0:0	4	;
call	30:8	30:36	4	subpicture_Delete
arg	30:27	30:36	5	p_subpic
water	30:27	0:0	6	p_subpic
water	30:37	0:0	4	;
if	31:8	36:8	4	(p_block)
cond	31:12	31:12	5	p_block
water	31:12	0:0	6	p_block
stmts	32:8	36:8	5	
water	32:8	0:0	6	{
water	33:12	0:0	6	p_block
op	33:19	0:0	6	->
water	33:21	0:0	6	i_dts
op	33:27	0:0	6	=
water	33:29	0:0	6	p_block
op	33:36	0:0	6	->
water	33:38	0:0	6	i_pts
op	33:44	0:0	6	=
water	33:46	0:0	6	in
op	33:48	0:0	6	->
water	33:50	0:0	6	i_dts
water	33:55	0:0	6	;
call	34:12	34:44	6	block_ChainAppend
arg	34:31	34:34	7	out
water	34:31	0:0	8	out
arg	34:36	34:44	7	p_block
water	34:36	0:0	8	p_block
water	34:45	0:0	6	;
return	35:12	35:30	6	VLC_SUCCESS
water	35:19	0:0	7	VLC_SUCCESS
water	36:8	0:0	6	}
water	37:4	0:0	4	}
return	38:4	38:23	2	VLC_EGENERIC
water	38:11	0:0	3	VLC_EGENERIC

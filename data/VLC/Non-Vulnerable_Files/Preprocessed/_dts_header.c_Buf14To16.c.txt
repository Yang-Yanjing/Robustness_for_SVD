func	2:0	41:0	0	static int	Buf14To16
params	2:20	0:0	1	
param	2:22	2:36	2	uint8_t *	p_out
param	2:38	2:57	2	const uint8_t *	p_in
param	2:59	2:67	2	int	i_in
param	2:69	2:78	2	int	i_le
stmnts	0:0	40:16	1	
decl	4:4	4:30	2	unsigned char	tmp
water	4:21	0:0	2	,
decl	4:4	4:30	2	unsigned char	cur
op	4:27	0:0	2	=
water	4:29	0:0	2	0
decl	5:4	5:29	2	int	bits_in
water	5:15	0:0	2	,
decl	5:4	5:29	2	int	bits_out
op	5:26	0:0	2	=
water	5:28	0:0	2	0
decl	6:4	6:20	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:20	2	int	i_out
op	6:17	0:0	2	=
water	6:19	0:0	2	0
for	7:4	39:4	2	(i = 0 ;i < i_in;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	i < i_in
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	i_in
forexpr	7:26	7:27	3	i ++
water	7:26	0:0	4	i
op	7:27	0:0	4	++
stmts	8:4	39:4	3	
water	8:4	0:0	4	{
if	9:8	13:8	4	(i % 2)
cond	9:12	9:14	5	i % 2
water	9:12	0:0	6	i
op	9:13	0:0	6	%
water	9:14	0:0	6	2
stmts	10:8	13:8	5	
water	10:8	0:0	6	{
water	11:12	0:0	6	tmp
op	11:16	0:0	6	=
water	11:18	0:0	6	p_in
op	11:22	0:0	6	[
water	11:23	0:0	6	i
op	11:24	0:0	6	-
water	11:25	0:0	6	i_le
op	11:29	0:0	6	]
water	11:30	0:0	6	;
water	12:12	0:0	6	bits_in
op	12:20	0:0	6	=
water	12:22	0:0	6	8
water	12:23	0:0	6	;
water	13:8	0:0	6	}
else	14:8	18:8	4
stmts	15:8	18:8	5	
water	15:8	0:0	6	{
water	16:12	0:0	6	tmp
op	16:16	0:0	6	=
water	16:18	0:0	6	p_in
op	16:22	0:0	6	[
water	16:23	0:0	6	i
op	16:24	0:0	6	+
water	16:25	0:0	6	i_le
op	16:29	0:0	6	]
op	16:31	0:0	6	&
water	16:33	0:0	6	0
water	16:34	0:0	6	x3F
water	16:37	0:0	6	;
water	17:12	0:0	6	bits_in
op	17:20	0:0	6	=
water	17:22	0:0	6	8
op	17:24	0:0	6	-
water	17:26	0:0	6	2
water	17:27	0:0	6	;
water	18:8	0:0	6	}
if	19:8	28:8	4	(bits_out < 8)
cond	19:12	19:23	5	bits_out < 8
water	19:12	0:0	6	bits_out
op	19:21	0:0	6	<
water	19:23	0:0	6	8
stmts	20:8	28:8	5	
water	20:8	0:0	6	{
decl	21:12	21:53	6	int	need
op	21:21	0:0	6	=
call	21:23	21:52	7	__MIN
arg	21:30	21:42	8	8-bits_out
water	21:30	0:0	9	8
op	21:32	0:0	9	-
water	21:34	0:0	9	bits_out
arg	21:44	21:52	8	bits_in
water	21:44	0:0	9	bits_in
water	22:12	0:0	6	cur
op	22:16	0:0	6	<<=
water	22:20	0:0	6	need
water	22:24	0:0	6	;
water	23:12	0:0	6	cur
op	23:16	0:0	6	|=
water	23:19	0:0	6	(
water	23:21	0:0	6	tmp
op	23:25	0:0	6	>>
water	23:28	0:0	6	(
water	23:29	0:0	6	bits_in
op	23:37	0:0	6	-
water	23:39	0:0	6	need
water	23:43	0:0	6	)
water	23:45	0:0	6	)
water	23:46	0:0	6	;
water	24:12	0:0	6	tmp
op	24:16	0:0	6	<<=
water	24:20	0:0	6	(
water	24:21	0:0	6	8
op	24:23	0:0	6	-
water	24:25	0:0	6	bits_in
op	24:33	0:0	6	+
water	24:35	0:0	6	need
water	24:39	0:0	6	)
water	24:40	0:0	6	;
water	25:12	0:0	6	tmp
op	25:16	0:0	6	>>=
water	25:20	0:0	6	(
water	25:21	0:0	6	8
op	25:23	0:0	6	-
water	25:25	0:0	6	bits_in
op	25:33	0:0	6	+
water	25:35	0:0	6	need
water	25:39	0:0	6	)
water	25:40	0:0	6	;
water	26:12	0:0	6	bits_in
op	26:20	0:0	6	-=
water	26:23	0:0	6	need
water	26:27	0:0	6	;
water	27:12	0:0	6	bits_out
op	27:21	0:0	6	+=
water	27:24	0:0	6	need
water	27:28	0:0	6	;
water	28:8	0:0	6	}
if	29:8	35:8	4	(bits_out == 8)
cond	29:12	29:24	5	bits_out == 8
water	29:12	0:0	6	bits_out
op	29:21	0:0	6	==
water	29:24	0:0	6	8
stmts	30:8	35:8	5	
water	30:8	0:0	6	{
water	31:12	0:0	6	p_out
op	31:17	0:0	6	[
water	31:18	0:0	6	i_out
op	31:23	0:0	6	]
op	31:25	0:0	6	=
water	31:27	0:0	6	cur
water	31:30	0:0	6	;
water	32:12	0:0	6	cur
op	32:16	0:0	6	=
water	32:18	0:0	6	0
water	32:19	0:0	6	;
water	33:12	0:0	6	bits_out
op	33:21	0:0	6	=
water	33:23	0:0	6	0
water	33:24	0:0	6	;
water	34:12	0:0	6	i_out
op	34:17	0:0	6	++
water	34:19	0:0	6	;
water	35:8	0:0	6	}
water	36:8	0:0	4	bits_out
op	36:17	0:0	4	+=
water	36:20	0:0	4	bits_in
water	36:27	0:0	4	;
water	37:8	0:0	4	cur
op	37:12	0:0	4	<<=
water	37:16	0:0	4	bits_in
water	37:23	0:0	4	;
water	38:8	0:0	4	cur
op	38:12	0:0	4	|=
water	38:15	0:0	4	tmp
water	38:18	0:0	4	;
water	39:4	0:0	4	}
return	40:4	40:16	2	i_out
water	40:11	0:0	3	i_out

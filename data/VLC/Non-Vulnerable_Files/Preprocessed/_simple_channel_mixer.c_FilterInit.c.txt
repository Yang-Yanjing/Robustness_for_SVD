func	2:0	29:0	0	static bool	FilterInit
params	2:22	0:0	1	
param	2:24	2:42	2	filter_t *	p_filter
param	2:44	2:60	2	block_t *	p_block
param	2:62	2:79	2	block_t * *	pp_out
stmnts	4:4	28:15	1	
if	4:4	9:4	2	(! p_block || ! p_block -> i_nb_samples)
cond	4:8	4:30	3	! p_block || ! p_block -> i_nb_samples
op	4:8	0:0	4	!
water	4:9	0:0	4	p_block
op	4:17	0:0	4	||
op	4:20	0:0	4	!
water	4:21	0:0	4	p_block
op	4:28	0:0	4	->
water	4:30	0:0	4	i_nb_samples
stmts	5:4	9:4	3	
water	5:4	0:0	4	{
if	6:8	7:36	4	(p_block)
cond	6:12	6:12	5	p_block
water	6:12	0:0	6	p_block
stmts	7:12	7:36	5	
call	7:12	7:35	6	block_Release
arg	7:27	7:35	7	p_block
water	7:27	0:0	8	p_block
water	7:36	0:0	6	;
return	8:8	8:20	4	false
water	8:15	0:0	5	false
water	9:4	0:0	4	}
decl	10:4	12:46	2	size_t	i_out_size
op	10:22	0:0	2	=
water	10:24	0:0	2	p_block
op	10:31	0:0	2	->
water	10:33	0:0	2	i_nb_samples
op	10:46	0:0	2	*
water	11:8	0:0	2	p_filter
op	11:16	0:0	2	->
water	11:18	0:0	2	fmt_out
op	11:25	0:0	2	.
water	11:26	0:0	2	audio
op	11:31	0:0	2	.
water	11:32	0:0	2	i_bitspersample
op	11:48	0:0	2	*
water	12:8	0:0	2	p_filter
op	12:16	0:0	2	->
water	12:18	0:0	2	fmt_out
op	12:25	0:0	2	.
water	12:26	0:0	2	audio
op	12:31	0:0	2	.
water	12:32	0:0	2	i_channels
op	12:43	0:0	2	/
water	12:45	0:0	2	8
decl	13:4	13:46	2	block_t	*p_out
op	13:19	0:0	2	=
call	13:21	13:45	3	block_Alloc
arg	13:34	13:45	4	i_out_size
water	13:34	0:0	5	i_out_size
if	14:4	19:4	2	(! p_out)
cond	14:8	14:9	3	! p_out
op	14:8	0:0	4	!
water	14:9	0:0	4	p_out
stmts	15:4	19:4	3	
water	15:4	0:0	4	{
call	16:8	16:54	4	msg_Warn
arg	16:18	16:26	5	p_filter
water	16:18	0:0	6	p_filter
arg	16:28	16:54	5	"can't get output buffer"
water	16:28	0:0	6	"can't get output buffer"
water	16:55	0:0	4	;
call	17:8	17:31	4	block_Release
arg	17:23	17:31	5	p_block
water	17:23	0:0	6	p_block
water	17:32	0:0	4	;
return	18:8	18:20	4	false
water	18:15	0:0	5	false
water	19:4	0:0	4	}
water	20:4	0:0	2	p_out
op	20:9	0:0	2	->
water	20:11	0:0	2	i_nb_samples
op	20:24	0:0	2	=
water	20:26	0:0	2	p_block
op	20:33	0:0	2	->
water	20:35	0:0	2	i_nb_samples
water	20:47	0:0	2	;
water	21:4	0:0	2	p_out
op	21:9	0:0	2	->
water	21:11	0:0	2	i_dts
op	21:17	0:0	2	=
water	21:19	0:0	2	p_block
op	21:26	0:0	2	->
water	21:28	0:0	2	i_dts
water	21:33	0:0	2	;
water	22:4	0:0	2	p_out
op	22:9	0:0	2	->
water	22:11	0:0	2	i_pts
op	22:17	0:0	2	=
water	22:19	0:0	2	p_block
op	22:26	0:0	2	->
water	22:28	0:0	2	i_pts
water	22:33	0:0	2	;
water	23:4	0:0	2	p_out
op	23:9	0:0	2	->
water	23:11	0:0	2	i_length
op	23:20	0:0	2	=
water	23:22	0:0	2	p_block
op	23:29	0:0	2	->
water	23:31	0:0	2	i_length
water	23:39	0:0	2	;
decl	24:4	24:69	2	int	i_input_nb
op	24:19	0:0	2	=
call	24:21	24:68	3	aout_FormatNbChannels
arg	24:44	24:68	4	&p_filter->fmt_in.audio
op	24:44	0:0	5	&
water	24:45	0:0	5	p_filter
op	24:53	0:0	5	->
water	24:55	0:0	5	fmt_in
op	24:61	0:0	5	.
water	24:62	0:0	5	audio
decl	25:4	25:71	2	int	i_output_nb
op	25:20	0:0	2	=
call	25:22	25:70	3	aout_FormatNbChannels
arg	25:45	25:70	4	&p_filter->fmt_out.audio
op	25:45	0:0	5	&
water	25:46	0:0	5	p_filter
op	25:54	0:0	5	->
water	25:56	0:0	5	fmt_out
op	25:63	0:0	5	.
water	25:64	0:0	5	audio
water	26:4	0:0	2	p_out
op	26:9	0:0	2	->
water	26:11	0:0	2	i_buffer
op	26:20	0:0	2	=
water	26:22	0:0	2	p_block
op	26:29	0:0	2	->
water	26:31	0:0	2	i_buffer
op	26:40	0:0	2	*
water	26:42	0:0	2	i_output_nb
op	26:54	0:0	2	/
water	26:56	0:0	2	i_input_nb
water	26:66	0:0	2	;
op	27:4	0:0	2	*
water	27:5	0:0	2	pp_out
op	27:12	0:0	2	=
water	27:14	0:0	2	p_out
water	27:19	0:0	2	;
return	28:4	28:15	2	true
water	28:11	0:0	3	true

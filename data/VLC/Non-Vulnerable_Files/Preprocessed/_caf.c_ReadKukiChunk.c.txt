func	2:0	38:0	0	static int	ReadKukiChunk
params	2:24	0:0	1	
param	2:26	2:42	2	demux_t *	p_demux
param	2:44	2:60	2	uint64_t	i_size
stmnts	0:0	37:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:25	2	const uint8_t	*p_peek
if	7:4	11:4	2	(i_size > INT32_MAX)
cond	7:8	7:17	3	i_size > INT32_MAX
water	7:8	0:0	4	i_size
op	7:15	0:0	4	>
water	7:17	0:0	4	INT32_MAX
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
call	9:8	9:55	4	msg_Err
arg	9:17	9:24	5	p_demux
water	9:17	0:0	6	p_demux
arg	9:26	9:55	5	"Magic Cookie chunk too big"
water	9:26	0:0	6	"Magic Cookie chunk too big"
water	9:56	0:0	4	;
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
water	11:4	0:0	4	}
if	12:4	16:4	2	(( unsigned int )stream_Peek (p_demux -> s ,& p_peek ,( int ) i_size ) < i_size)
cond	12:8	12:72	3	( unsigned int )stream_Peek (p_demux -> s ,& p_peek ,( int ) i_size ) < i_size
water	12:8	0:0	4	(
water	12:9	0:0	4	unsigned
water	12:18	0:0	4	int
water	12:21	0:0	4	)
call	12:22	12:68	4	stream_Peek
arg	12:35	12:45	5	p_demux->s
water	12:35	0:0	6	p_demux
op	12:42	0:0	6	->
water	12:44	0:0	6	s
arg	12:47	12:54	5	&p_peek
op	12:47	0:0	6	&
water	12:48	0:0	6	p_peek
arg	12:56	12:68	5	(int)i_size
water	12:56	0:0	6	(
water	12:57	0:0	6	int
water	12:60	0:0	6	)
water	12:61	0:0	6	i_size
op	12:70	0:0	4	<
water	12:72	0:0	4	i_size
stmts	13:4	16:4	3	
water	13:4	0:0	4	{
call	14:8	14:53	4	msg_Err
arg	14:17	14:24	5	p_demux
water	14:17	0:0	6	p_demux
arg	14:26	14:53	5	"Couldn't peek extra data"
water	14:26	0:0	6	"Couldn't peek extra data"
water	14:54	0:0	4	;
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
if	17:4	21:4	2	(p_sys -> fmt . i_codec == VLC_CODEC_ALAC)
cond	17:8	17:31	3	p_sys -> fmt . i_codec == VLC_CODEC_ALAC
water	17:8	0:0	4	p_sys
op	17:13	0:0	4	->
water	17:15	0:0	4	fmt
op	17:18	0:0	4	.
water	17:19	0:0	4	i_codec
op	17:28	0:0	4	==
water	17:31	0:0	4	VLC_CODEC_ALAC
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
decl	19:8	19:64	4	int	error
op	19:18	0:0	4	=
call	19:20	19:63	5	ProcessALACCookie
arg	19:39	19:46	6	p_demux
water	19:39	0:0	7	p_demux
arg	19:48	19:54	6	p_peek
water	19:48	0:0	7	p_peek
arg	19:56	19:63	6	i_size
water	19:56	0:0	7	i_size
if	20:8	20:32	4	(error)
cond	20:12	20:12	5	error
water	20:12	0:0	6	error
stmts	20:20	20:32	5	
return	20:20	20:32	6	error
water	20:27	0:0	7	error
water	21:4	0:0	4	}
else	22:4	26:4	2
stmts	22:9	26:4	3	
if	22:9	26:4	4	(p_sys -> fmt . i_codec == VLC_CODEC_MP4A)
cond	22:13	22:35	5	p_sys -> fmt . i_codec == VLC_CODEC_MP4A
water	22:13	0:0	6	p_sys
op	22:18	0:0	6	->
water	22:20	0:0	6	fmt
op	22:23	0:0	6	.
water	22:24	0:0	6	i_codec
op	22:32	0:0	6	==
water	22:35	0:0	6	VLC_CODEC_MP4A
stmts	23:4	26:4	5	
water	23:4	0:0	6	{
decl	24:8	24:63	6	int	error
op	24:18	0:0	6	=
call	24:20	24:62	7	ProcessAACCookie
arg	24:38	24:45	8	p_demux
water	24:38	0:0	9	p_demux
arg	24:47	24:53	8	p_peek
water	24:47	0:0	9	p_peek
arg	24:55	24:62	8	i_size
water	24:55	0:0	9	i_size
if	25:8	25:32	6	(error)
cond	25:12	25:12	7	error
water	25:12	0:0	8	error
stmts	25:20	25:32	7	
return	25:20	25:32	8	error
water	25:27	0:0	9	error
water	26:4	0:0	6	}
else	27:4	36:4	2
stmts	28:4	36:4	3	
water	28:4	0:0	4	{
water	29:8	0:0	4	p_sys
op	29:13	0:0	4	->
water	29:15	0:0	4	fmt
op	29:18	0:0	4	.
water	29:19	0:0	4	i_extra
op	29:27	0:0	4	=
water	29:29	0:0	4	(
water	29:30	0:0	4	int
water	29:33	0:0	4	)
water	29:34	0:0	4	i_size
water	29:40	0:0	4	;
water	30:8	0:0	4	p_sys
op	30:13	0:0	4	->
water	30:15	0:0	4	fmt
op	30:18	0:0	4	.
water	30:19	0:0	4	p_extra
op	30:27	0:0	4	=
call	30:29	30:44	4	malloc
arg	30:37	30:44	5	i_size
water	30:37	0:0	6	i_size
water	30:45	0:0	4	;
if	31:8	34:8	4	(! p_sys -> fmt . p_extra)
cond	31:12	31:24	5	! p_sys -> fmt . p_extra
op	31:12	0:0	6	!
water	31:13	0:0	6	p_sys
op	31:18	0:0	6	->
water	31:20	0:0	6	fmt
op	31:23	0:0	6	.
water	31:24	0:0	6	p_extra
stmts	32:8	34:8	5	
water	32:8	0:0	6	{
return	33:12	33:29	6	VLC_ENOMEM
water	33:19	0:0	7	VLC_ENOMEM
water	34:8	0:0	6	}
call	35:8	35:63	4	memcpy
arg	35:16	35:34	5	p_sys->fmt.p_extra
water	35:16	0:0	6	p_sys
op	35:21	0:0	6	->
water	35:23	0:0	6	fmt
op	35:26	0:0	6	.
water	35:27	0:0	6	p_extra
arg	35:36	35:42	5	p_peek
water	35:36	0:0	6	p_peek
arg	35:44	35:63	5	p_sys->fmt.i_extra
water	35:44	0:0	6	p_sys
op	35:49	0:0	6	->
water	35:51	0:0	6	fmt
op	35:54	0:0	6	.
water	35:55	0:0	6	i_extra
water	35:64	0:0	4	;
water	36:4	0:0	4	}
return	37:4	37:22	2	VLC_SUCCESS
water	37:11	0:0	3	VLC_SUCCESS

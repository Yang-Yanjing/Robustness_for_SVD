func	2:0	129:0	0	audio_output_t *	aout_New
params	2:25	0:0	1	
param	2:26	2:46	2	vlc_object_t *	parent
stmnts	0:0	128:15	1	
decl	4:4	4:25	2	vlc_value_t	val
water	4:19	0:0	2	,
decl	4:4	4:25	2	vlc_value_t	text
decl	5:4	6:61	2	audio_output_t	*aout
op	5:25	0:0	2	=
call	5:27	6:60	3	vlc_custom_create
arg	5:46	5:52	4	parent
water	5:46	0:0	5	parent
arg	5:54	5:78	4	sizeof(aout_instance_t)
op	5:54	0:0	5	sizeof
water	5:61	0:0	5	(
water	5:62	0:0	5	aout_instance_t
water	5:77	0:0	5	)
arg	6:46	6:60	4	"audio output"
water	6:46	0:0	5	"audio output"
if	7:4	8:19	2	(unlikely (aout == NULL ))
cond	7:8	7:29	3	unlikely (aout == NULL )
call	7:8	7:29	4	unlikely
arg	7:17	7:29	5	aout==NULL
water	7:17	0:0	6	aout
op	7:22	0:0	6	==
water	7:25	0:0	6	NULL
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
decl	9:4	9:43	2	aout_owner_t	*owner
op	9:24	0:0	2	=
call	9:26	9:42	3	aout_owner
arg	9:38	9:42	4	aout
water	9:38	0:0	5	aout
call	10:4	10:32	2	vlc_mutex_init
arg	10:20	10:32	3	&owner->lock
op	10:20	0:0	4	&
water	10:21	0:0	4	owner
op	10:26	0:0	4	->
water	10:28	0:0	4	lock
water	10:33	0:0	2	;
call	11:4	11:36	2	vlc_mutex_init
arg	11:20	11:36	3	&owner->req.lock
op	11:20	0:0	4	&
water	11:21	0:0	4	owner
op	11:26	0:0	4	->
water	11:28	0:0	4	req
op	11:31	0:0	4	.
water	11:32	0:0	4	lock
water	11:37	0:0	2	;
call	12:4	12:36	2	vlc_mutex_init
arg	12:20	12:36	3	&owner->dev.lock
op	12:20	0:0	4	&
water	12:21	0:0	4	owner
op	12:26	0:0	4	->
water	12:28	0:0	4	dev
op	12:31	0:0	4	.
water	12:32	0:0	4	lock
water	12:37	0:0	2	;
water	13:4	0:0	2	owner
op	13:9	0:0	2	->
water	13:11	0:0	2	req
op	13:14	0:0	2	.
water	13:15	0:0	2	device
op	13:22	0:0	2	=
water	13:24	0:0	2	(
water	13:25	0:0	2	char
op	13:30	0:0	2	*
water	13:31	0:0	2	)
water	13:32	0:0	2	unset_str
water	13:41	0:0	2	;
water	14:4	0:0	2	owner
op	14:9	0:0	2	->
water	14:11	0:0	2	req
op	14:14	0:0	2	.
water	14:15	0:0	2	volume
op	14:22	0:0	2	=
op	14:24	0:0	2	-
water	14:25	0:0	2	1
op	14:26	0:0	2	.
water	14:27	0:0	2	f
water	14:28	0:0	2	;
water	15:4	0:0	2	owner
op	15:9	0:0	2	->
water	15:11	0:0	2	req
op	15:14	0:0	2	.
water	15:15	0:0	2	mute
op	15:20	0:0	2	=
op	15:22	0:0	2	-
water	15:23	0:0	2	1
water	15:24	0:0	2	;
call	16:4	16:52	2	vlc_object_set_destructor
arg	16:31	16:35	3	aout
water	16:31	0:0	4	aout
arg	16:37	16:52	3	aout_Destructor
water	16:37	0:0	4	aout_Destructor
water	16:53	0:0	2	;
call	18:4	18:45	2	var_Create
arg	18:16	18:20	3	aout
water	18:16	0:0	4	aout
arg	18:22	18:30	3	"volume"
water	18:22	0:0	4	"volume"
arg	18:32	18:45	3	VLC_VAR_FLOAT
water	18:32	0:0	4	VLC_VAR_FLOAT
water	18:46	0:0	2	;
call	19:4	19:53	2	var_AddCallback
arg	19:21	19:25	3	aout
water	19:21	0:0	4	aout
arg	19:27	19:35	3	"volume"
water	19:27	0:0	4	"volume"
arg	19:37	19:45	3	var_Copy
water	19:37	0:0	4	var_Copy
arg	19:47	19:53	3	parent
water	19:47	0:0	4	parent
water	19:54	0:0	2	;
call	20:4	20:62	2	var_Create
arg	20:16	20:20	3	aout
water	20:16	0:0	4	aout
arg	20:22	20:28	3	"mute"
water	20:22	0:0	4	"mute"
arg	20:30	20:62	3	VLC_VAR_BOOL|VLC_VAR_DOINHERIT
water	20:30	0:0	4	VLC_VAR_BOOL
op	20:43	0:0	4	|
water	20:45	0:0	4	VLC_VAR_DOINHERIT
water	20:63	0:0	2	;
call	21:4	21:51	2	var_AddCallback
arg	21:21	21:25	3	aout
water	21:21	0:0	4	aout
arg	21:27	21:33	3	"mute"
water	21:27	0:0	4	"mute"
arg	21:35	21:43	3	var_Copy
water	21:35	0:0	4	var_Copy
arg	21:45	21:51	3	parent
water	21:45	0:0	4	parent
water	21:52	0:0	2	;
call	22:4	22:46	2	var_Create
arg	22:16	22:20	3	aout
water	22:16	0:0	4	aout
arg	22:22	22:30	3	"device"
water	22:22	0:0	4	"device"
arg	22:32	22:46	3	VLC_VAR_STRING
water	22:32	0:0	4	VLC_VAR_STRING
water	22:47	0:0	2	;
water	23:4	0:0	2	aout
op	23:8	0:0	2	->
water	23:10	0:0	2	event
op	23:15	0:0	2	.
water	23:16	0:0	2	volume_report
op	23:30	0:0	2	=
water	23:32	0:0	2	aout_VolumeNotify
water	23:49	0:0	2	;
water	24:4	0:0	2	aout
op	24:8	0:0	2	->
water	24:10	0:0	2	event
op	24:15	0:0	2	.
water	24:16	0:0	2	mute_report
op	24:28	0:0	2	=
water	24:30	0:0	2	aout_MuteNotify
water	24:45	0:0	2	;
water	25:4	0:0	2	aout
op	25:8	0:0	2	->
water	25:10	0:0	2	event
op	25:15	0:0	2	.
water	25:16	0:0	2	policy_report
op	25:30	0:0	2	=
water	25:32	0:0	2	aout_PolicyNotify
water	25:49	0:0	2	;
water	26:4	0:0	2	aout
op	26:8	0:0	2	->
water	26:10	0:0	2	event
op	26:15	0:0	2	.
water	26:16	0:0	2	device_report
op	26:30	0:0	2	=
water	26:32	0:0	2	aout_DeviceNotify
water	26:49	0:0	2	;
water	27:4	0:0	2	aout
op	27:8	0:0	2	->
water	27:10	0:0	2	event
op	27:15	0:0	2	.
water	27:16	0:0	2	hotplug_report
op	27:31	0:0	2	=
water	27:33	0:0	2	aout_HotplugNotify
water	27:51	0:0	2	;
water	28:4	0:0	2	aout
op	28:8	0:0	2	->
water	28:10	0:0	2	event
op	28:15	0:0	2	.
water	28:16	0:0	2	gain_request
op	28:29	0:0	2	=
water	28:31	0:0	2	aout_GainNotify
water	28:46	0:0	2	;
water	29:4	0:0	2	aout
op	29:8	0:0	2	->
water	29:10	0:0	2	event
op	29:15	0:0	2	.
water	29:16	0:0	2	restart_request
op	29:32	0:0	2	=
water	29:34	0:0	2	aout_RestartNotify
water	29:52	0:0	2	;
water	31:4	0:0	2	aout
op	31:8	0:0	2	->
water	31:10	0:0	2	start
op	31:16	0:0	2	=
water	31:18	0:0	2	NULL
water	31:22	0:0	2	;
water	32:4	0:0	2	aout
op	32:8	0:0	2	->
water	32:10	0:0	2	stop
op	32:15	0:0	2	=
water	32:17	0:0	2	NULL
water	32:21	0:0	2	;
water	33:4	0:0	2	aout
op	33:8	0:0	2	->
water	33:10	0:0	2	volume_set
op	33:21	0:0	2	=
water	33:23	0:0	2	NULL
water	33:27	0:0	2	;
water	34:4	0:0	2	aout
op	34:8	0:0	2	->
water	34:10	0:0	2	mute_set
op	34:19	0:0	2	=
water	34:21	0:0	2	NULL
water	34:25	0:0	2	;
water	35:4	0:0	2	aout
op	35:8	0:0	2	->
water	35:10	0:0	2	device_select
op	35:24	0:0	2	=
water	35:26	0:0	2	NULL
water	35:30	0:0	2	;
water	36:4	0:0	2	owner
op	36:9	0:0	2	->
water	36:11	0:0	2	module
op	36:18	0:0	2	=
call	36:20	36:69	2	module_need
arg	36:33	36:37	3	aout
water	36:33	0:0	4	aout
arg	36:39	36:53	3	"audio output"
water	36:39	0:0	4	"audio output"
arg	36:55	36:62	3	"$aout"
water	36:55	0:0	4	"$aout"
arg	36:64	36:69	3	false
water	36:64	0:0	4	false
water	36:70	0:0	2	;
if	37:4	42:4	2	(owner -> module == NULL)
cond	37:8	37:25	3	owner -> module == NULL
water	37:8	0:0	4	owner
op	37:13	0:0	4	->
water	37:15	0:0	4	module
op	37:22	0:0	4	==
water	37:25	0:0	4	NULL
stmts	38:4	42:4	3	
water	38:4	0:0	4	{
call	39:8	39:56	4	msg_Err
arg	39:17	39:21	5	aout
water	39:17	0:0	6	aout
arg	39:23	39:56	5	"no suitable audio output module"
water	39:23	0:0	6	"no suitable audio output module"
water	39:57	0:0	4	;
call	40:8	40:32	4	vlc_object_release
arg	40:28	40:32	5	aout
water	40:28	0:0	6	aout
water	40:33	0:0	4	;
return	41:8	41:19	4	NULL
water	41:15	0:0	5	NULL
water	42:4	0:0	4	}
decl	46:4	46:24	2	module_config_t	*cfg
decl	47:4	47:13	2	char	*str
call	49:4	49:66	2	var_Create
arg	49:16	49:20	3	aout
water	49:16	0:0	4	aout
arg	49:22	49:30	3	"visual"
water	49:22	0:0	4	"visual"
arg	49:32	49:66	3	VLC_VAR_STRING|VLC_VAR_HASCHOICE
water	49:32	0:0	4	VLC_VAR_STRING
op	49:47	0:0	4	|
water	49:49	0:0	4	VLC_VAR_HASCHOICE
water	49:67	0:0	2	;
water	50:4	0:0	2	text
op	50:8	0:0	2	.
water	50:9	0:0	2	psz_string
op	50:20	0:0	2	=
call	50:22	50:40	2	_
arg	50:24	50:40	3	"Visualizations"
water	50:24	0:0	4	"Visualizations"
water	50:41	0:0	2	;
call	51:4	51:60	2	var_Change
arg	51:16	51:20	3	aout
water	51:16	0:0	4	aout
arg	51:22	51:30	3	"visual"
water	51:22	0:0	4	"visual"
arg	51:32	51:47	3	VLC_VAR_SETTEXT
water	51:32	0:0	4	VLC_VAR_SETTEXT
arg	51:49	51:54	3	&text
op	51:49	0:0	4	&
water	51:50	0:0	4	text
arg	51:56	51:60	3	NULL
water	51:56	0:0	4	NULL
water	51:61	0:0	2	;
water	52:4	0:0	2	val
op	52:7	0:0	2	.
water	52:8	0:0	2	psz_string
op	52:19	0:0	2	=
water	52:21	0:0	2	(
water	52:22	0:0	2	char
op	52:27	0:0	2	*
water	52:28	0:0	2	)
water	52:29	0:0	2	""
water	52:31	0:0	2	;
water	53:4	0:0	2	text
op	53:8	0:0	2	.
water	53:9	0:0	2	psz_string
op	53:20	0:0	2	=
call	53:22	53:33	2	_
arg	53:24	53:33	3	"Disable"
water	53:24	0:0	4	"Disable"
water	53:34	0:0	2	;
call	54:4	54:62	2	var_Change
arg	54:16	54:20	3	aout
water	54:16	0:0	4	aout
arg	54:22	54:30	3	"visual"
water	54:22	0:0	4	"visual"
arg	54:32	54:49	3	VLC_VAR_ADDCHOICE
water	54:32	0:0	4	VLC_VAR_ADDCHOICE
arg	54:51	54:55	3	&val
op	54:51	0:0	4	&
water	54:52	0:0	4	val
arg	54:57	54:62	3	&text
op	54:57	0:0	4	&
water	54:58	0:0	4	text
water	54:63	0:0	2	;
water	55:4	0:0	2	val
op	55:7	0:0	2	.
water	55:8	0:0	2	psz_string
op	55:19	0:0	2	=
water	55:21	0:0	2	(
water	55:22	0:0	2	char
op	55:27	0:0	2	*
water	55:28	0:0	2	)
water	55:29	0:0	2	"spectrometer"
water	55:43	0:0	2	;
water	56:4	0:0	2	text
op	56:8	0:0	2	.
water	56:9	0:0	2	psz_string
op	56:20	0:0	2	=
call	56:22	56:38	2	_
arg	56:24	56:38	3	"Spectrometer"
water	56:24	0:0	4	"Spectrometer"
water	56:39	0:0	2	;
call	57:4	57:62	2	var_Change
arg	57:16	57:20	3	aout
water	57:16	0:0	4	aout
arg	57:22	57:30	3	"visual"
water	57:22	0:0	4	"visual"
arg	57:32	57:49	3	VLC_VAR_ADDCHOICE
water	57:32	0:0	4	VLC_VAR_ADDCHOICE
arg	57:51	57:55	3	&val
op	57:51	0:0	4	&
water	57:52	0:0	4	val
arg	57:57	57:62	3	&text
op	57:57	0:0	4	&
water	57:58	0:0	4	text
water	57:63	0:0	2	;
water	58:4	0:0	2	val
op	58:7	0:0	2	.
water	58:8	0:0	2	psz_string
op	58:19	0:0	2	=
water	58:21	0:0	2	(
water	58:22	0:0	2	char
op	58:27	0:0	2	*
water	58:28	0:0	2	)
water	58:29	0:0	2	"scope"
water	58:36	0:0	2	;
water	59:4	0:0	2	text
op	59:8	0:0	2	.
water	59:9	0:0	2	psz_string
op	59:20	0:0	2	=
call	59:22	59:31	2	_
arg	59:24	59:31	3	"Scope"
water	59:24	0:0	4	"Scope"
water	59:32	0:0	2	;
call	60:4	60:62	2	var_Change
arg	60:16	60:20	3	aout
water	60:16	0:0	4	aout
arg	60:22	60:30	3	"visual"
water	60:22	0:0	4	"visual"
arg	60:32	60:49	3	VLC_VAR_ADDCHOICE
water	60:32	0:0	4	VLC_VAR_ADDCHOICE
arg	60:51	60:55	3	&val
op	60:51	0:0	4	&
water	60:52	0:0	4	val
arg	60:57	60:62	3	&text
op	60:57	0:0	4	&
water	60:58	0:0	4	text
water	60:63	0:0	2	;
water	61:4	0:0	2	val
op	61:7	0:0	2	.
water	61:8	0:0	2	psz_string
op	61:19	0:0	2	=
water	61:21	0:0	2	(
water	61:22	0:0	2	char
op	61:27	0:0	2	*
water	61:28	0:0	2	)
water	61:29	0:0	2	"spectrum"
water	61:39	0:0	2	;
water	62:4	0:0	2	text
op	62:8	0:0	2	.
water	62:9	0:0	2	psz_string
op	62:20	0:0	2	=
call	62:22	62:34	2	_
arg	62:24	62:34	3	"Spectrum"
water	62:24	0:0	4	"Spectrum"
water	62:35	0:0	2	;
call	63:4	63:62	2	var_Change
arg	63:16	63:20	3	aout
water	63:16	0:0	4	aout
arg	63:22	63:30	3	"visual"
water	63:22	0:0	4	"visual"
arg	63:32	63:49	3	VLC_VAR_ADDCHOICE
water	63:32	0:0	4	VLC_VAR_ADDCHOICE
arg	63:51	63:55	3	&val
op	63:51	0:0	4	&
water	63:52	0:0	4	val
arg	63:57	63:62	3	&text
op	63:57	0:0	4	&
water	63:58	0:0	4	text
water	63:63	0:0	2	;
water	64:4	0:0	2	val
op	64:7	0:0	2	.
water	64:8	0:0	2	psz_string
op	64:19	0:0	2	=
water	64:21	0:0	2	(
water	64:22	0:0	2	char
op	64:27	0:0	2	*
water	64:28	0:0	2	)
water	64:29	0:0	2	"vuMeter"
water	64:38	0:0	2	;
water	65:4	0:0	2	text
op	65:8	0:0	2	.
water	65:9	0:0	2	psz_string
op	65:20	0:0	2	=
call	65:22	65:34	2	_
arg	65:24	65:34	3	"Vu meter"
water	65:24	0:0	4	"Vu meter"
water	65:35	0:0	2	;
call	66:4	66:62	2	var_Change
arg	66:16	66:20	3	aout
water	66:16	0:0	4	aout
arg	66:22	66:30	3	"visual"
water	66:22	0:0	4	"visual"
arg	66:32	66:49	3	VLC_VAR_ADDCHOICE
water	66:32	0:0	4	VLC_VAR_ADDCHOICE
arg	66:51	66:55	3	&val
op	66:51	0:0	4	&
water	66:52	0:0	4	val
arg	66:57	66:62	3	&text
op	66:57	0:0	4	&
water	66:58	0:0	4	text
water	66:63	0:0	2	;
if	68:4	73:4	2	(module_exists ("goom" ))
cond	68:8	68:29	3	module_exists ("goom" )
call	68:8	68:29	4	module_exists
arg	68:23	68:29	5	"goom"
water	68:23	0:0	6	"goom"
stmts	69:4	73:4	3	
water	69:4	0:0	4	{
water	70:8	0:0	4	val
op	70:11	0:0	4	.
water	70:12	0:0	4	psz_string
op	70:23	0:0	4	=
water	70:25	0:0	4	(
water	70:26	0:0	4	char
op	70:31	0:0	4	*
water	70:32	0:0	4	)
water	70:33	0:0	4	"goom"
water	70:39	0:0	4	;
water	71:8	0:0	4	text
op	71:12	0:0	4	.
water	71:13	0:0	4	psz_string
op	71:24	0:0	4	=
water	71:26	0:0	4	(
water	71:27	0:0	4	char
op	71:32	0:0	4	*
water	71:33	0:0	4	)
water	71:34	0:0	4	"Goom"
water	71:40	0:0	4	;
call	72:8	72:66	4	var_Change
arg	72:20	72:24	5	aout
water	72:20	0:0	6	aout
arg	72:26	72:34	5	"visual"
water	72:26	0:0	6	"visual"
arg	72:36	72:53	5	VLC_VAR_ADDCHOICE
water	72:36	0:0	6	VLC_VAR_ADDCHOICE
arg	72:55	72:59	5	&val
op	72:55	0:0	6	&
water	72:56	0:0	6	val
arg	72:61	72:66	5	&text
op	72:61	0:0	6	&
water	72:62	0:0	6	text
water	72:67	0:0	4	;
water	73:4	0:0	4	}
if	76:4	81:4	2	(module_exists ("projectm" ))
cond	76:8	76:33	3	module_exists ("projectm" )
call	76:8	76:33	4	module_exists
arg	76:23	76:33	5	"projectm"
water	76:23	0:0	6	"projectm"
stmts	77:4	81:4	3	
water	77:4	0:0	4	{
water	78:8	0:0	4	val
op	78:11	0:0	4	.
water	78:12	0:0	4	psz_string
op	78:23	0:0	4	=
water	78:25	0:0	4	(
water	78:26	0:0	4	char
op	78:31	0:0	4	*
water	78:32	0:0	4	)
water	78:33	0:0	4	"projectm"
water	78:43	0:0	4	;
water	79:8	0:0	4	text
op	79:12	0:0	4	.
water	79:13	0:0	4	psz_string
op	79:24	0:0	4	=
water	79:26	0:0	4	(
water	79:27	0:0	4	char
op	79:31	0:0	4	*
water	79:32	0:0	4	)
water	79:33	0:0	4	"projectM"
water	79:43	0:0	4	;
call	80:8	80:66	4	var_Change
arg	80:20	80:24	5	aout
water	80:20	0:0	6	aout
arg	80:26	80:34	5	"visual"
water	80:26	0:0	6	"visual"
arg	80:36	80:53	5	VLC_VAR_ADDCHOICE
water	80:36	0:0	6	VLC_VAR_ADDCHOICE
arg	80:55	80:59	5	&val
op	80:55	0:0	6	&
water	80:56	0:0	6	val
arg	80:61	80:66	5	&text
op	80:61	0:0	6	&
water	80:62	0:0	6	text
water	80:67	0:0	4	;
water	81:4	0:0	4	}
if	83:4	88:4	2	(module_exists ("vsxu" ))
cond	83:8	83:29	3	module_exists ("vsxu" )
call	83:8	83:29	4	module_exists
arg	83:23	83:29	5	"vsxu"
water	83:23	0:0	6	"vsxu"
stmts	84:4	88:4	3	
water	84:4	0:0	4	{
water	85:8	0:0	4	val
op	85:11	0:0	4	.
water	85:12	0:0	4	psz_string
op	85:23	0:0	4	=
water	85:25	0:0	4	(
water	85:26	0:0	4	char
op	85:31	0:0	4	*
water	85:32	0:0	4	)
water	85:33	0:0	4	"vsxu"
water	85:39	0:0	4	;
water	86:8	0:0	4	text
op	86:12	0:0	4	.
water	86:13	0:0	4	psz_string
op	86:24	0:0	4	=
water	86:26	0:0	4	(
water	86:27	0:0	4	char
op	86:31	0:0	4	*
water	86:32	0:0	4	)
water	86:33	0:0	4	"Vovoid VSXu"
water	86:46	0:0	4	;
call	87:8	87:66	4	var_Change
arg	87:20	87:24	5	aout
water	87:20	0:0	6	aout
arg	87:26	87:34	5	"visual"
water	87:26	0:0	6	"visual"
arg	87:36	87:53	5	VLC_VAR_ADDCHOICE
water	87:36	0:0	6	VLC_VAR_ADDCHOICE
arg	87:55	87:59	5	&val
op	87:55	0:0	6	&
water	87:56	0:0	6	val
arg	87:61	87:66	5	&text
op	87:61	0:0	6	&
water	87:62	0:0	6	text
water	87:67	0:0	4	;
water	88:4	0:0	4	}
if	90:4	95:4	2	(module_exists ("glspectrum" ))
cond	90:8	90:35	3	module_exists ("glspectrum" )
call	90:8	90:35	4	module_exists
arg	90:23	90:35	5	"glspectrum"
water	90:23	0:0	6	"glspectrum"
stmts	91:4	95:4	3	
water	91:4	0:0	4	{
water	92:8	0:0	4	val
op	92:11	0:0	4	.
water	92:12	0:0	4	psz_string
op	92:23	0:0	4	=
water	92:25	0:0	4	(
water	92:26	0:0	4	char
op	92:31	0:0	4	*
water	92:32	0:0	4	)
water	92:33	0:0	4	"glspectrum"
water	92:45	0:0	4	;
water	93:8	0:0	4	text
op	93:12	0:0	4	.
water	93:13	0:0	4	psz_string
op	93:24	0:0	4	=
water	93:26	0:0	4	(
water	93:27	0:0	4	char
op	93:31	0:0	4	*
water	93:32	0:0	4	)
water	93:33	0:0	4	"3D spectrum"
water	93:46	0:0	4	;
call	94:8	94:66	4	var_Change
arg	94:20	94:24	5	aout
water	94:20	0:0	6	aout
arg	94:26	94:34	5	"visual"
water	94:26	0:0	6	"visual"
arg	94:36	94:53	5	VLC_VAR_ADDCHOICE
water	94:36	0:0	6	VLC_VAR_ADDCHOICE
arg	94:55	94:59	5	&val
op	94:55	0:0	6	&
water	94:56	0:0	6	val
arg	94:61	94:66	5	&text
op	94:61	0:0	6	&
water	94:62	0:0	6	text
water	94:67	0:0	4	;
water	95:4	0:0	4	}
water	97:4	0:0	2	str
op	97:8	0:0	2	=
call	97:10	97:52	2	var_GetNonEmptyString
arg	97:33	97:37	3	aout
water	97:33	0:0	4	aout
arg	97:39	97:52	3	"effect-list"
water	97:39	0:0	4	"effect-list"
water	97:53	0:0	2	;
if	98:4	102:4	2	(str != NULL)
cond	98:8	98:15	3	str != NULL
water	98:8	0:0	4	str
op	98:12	0:0	4	!=
water	98:15	0:0	4	NULL
stmts	99:4	102:4	3	
water	99:4	0:0	4	{
call	100:8	100:42	4	var_SetString
arg	100:23	100:27	5	aout
water	100:23	0:0	6	aout
arg	100:29	100:37	5	"visual"
water	100:29	0:0	6	"visual"
arg	100:39	100:42	5	str
water	100:39	0:0	6	str
water	100:43	0:0	4	;
call	101:8	101:17	4	free
arg	101:14	101:17	5	str
water	101:14	0:0	6	str
water	101:18	0:0	4	;
water	102:4	0:0	4	}
call	103:4	103:72	2	var_Create
arg	103:16	103:20	3	aout
water	103:16	0:0	4	aout
arg	103:22	103:36	3	"audio-filter"
water	103:22	0:0	4	"audio-filter"
arg	103:38	103:72	3	VLC_VAR_STRING|VLC_VAR_DOINHERIT
water	103:38	0:0	4	VLC_VAR_STRING
op	103:53	0:0	4	|
water	103:55	0:0	4	VLC_VAR_DOINHERIT
water	103:73	0:0	2	;
call	104:4	104:63	2	var_AddCallback
arg	104:21	104:25	3	aout
water	104:21	0:0	4	aout
arg	104:27	104:41	3	"audio-filter"
water	104:27	0:0	4	"audio-filter"
arg	104:43	104:57	3	FilterCallback
water	104:43	0:0	4	FilterCallback
arg	104:59	104:63	3	NULL
water	104:59	0:0	4	NULL
water	104:64	0:0	2	;
water	105:4	0:0	2	text
op	105:8	0:0	2	.
water	105:9	0:0	2	psz_string
op	105:20	0:0	2	=
call	105:22	105:39	2	_
arg	105:24	105:39	3	"Audio filters"
water	105:24	0:0	4	"Audio filters"
water	105:40	0:0	2	;
call	106:4	106:66	2	var_Change
arg	106:16	106:20	3	aout
water	106:16	0:0	4	aout
arg	106:22	106:36	3	"audio-filter"
water	106:22	0:0	4	"audio-filter"
arg	106:38	106:53	3	VLC_VAR_SETTEXT
water	106:38	0:0	4	VLC_VAR_SETTEXT
arg	106:55	106:60	3	&text
op	106:55	0:0	4	&
water	106:56	0:0	4	text
arg	106:62	106:66	3	NULL
water	106:62	0:0	4	NULL
water	106:67	0:0	2	;
call	107:4	107:72	2	var_Create
arg	107:16	107:20	3	aout
water	107:16	0:0	4	aout
arg	107:22	107:36	3	"audio-visual"
water	107:22	0:0	4	"audio-visual"
arg	107:38	107:72	3	VLC_VAR_STRING|VLC_VAR_DOINHERIT
water	107:38	0:0	4	VLC_VAR_STRING
op	107:53	0:0	4	|
water	107:55	0:0	4	VLC_VAR_DOINHERIT
water	107:73	0:0	2	;
water	108:4	0:0	2	text
op	108:8	0:0	2	.
water	108:9	0:0	2	psz_string
op	108:20	0:0	2	=
call	108:22	108:46	2	_
arg	108:24	108:46	3	"Audio visualizations"
water	108:24	0:0	4	"Audio visualizations"
water	108:47	0:0	2	;
call	109:4	109:66	2	var_Change
arg	109:16	109:20	3	aout
water	109:16	0:0	4	aout
arg	109:22	109:36	3	"audio-visual"
water	109:22	0:0	4	"audio-visual"
arg	109:38	109:53	3	VLC_VAR_SETTEXT
water	109:38	0:0	4	VLC_VAR_SETTEXT
arg	109:55	109:60	3	&text
op	109:55	0:0	4	&
water	109:56	0:0	4	text
arg	109:62	109:66	3	NULL
water	109:62	0:0	4	NULL
water	109:67	0:0	2	;
call	111:4	112:51	2	var_Create
arg	111:16	111:20	3	aout
water	111:16	0:0	4	aout
arg	111:22	111:46	3	"audio-replay-gain-mode"
water	111:22	0:0	4	"audio-replay-gain-mode"
arg	112:16	112:51	3	VLC_VAR_STRING|VLC_VAR_DOINHERIT
water	112:16	0:0	4	VLC_VAR_STRING
op	112:31	0:0	4	|
water	112:33	0:0	4	VLC_VAR_DOINHERIT
water	112:52	0:0	2	;
water	113:4	0:0	2	text
op	113:8	0:0	2	.
water	113:9	0:0	2	psz_string
op	113:20	0:0	2	=
call	113:22	113:37	2	_
arg	113:24	113:37	3	"Replay gain"
water	113:24	0:0	4	"Replay gain"
water	113:38	0:0	2	;
call	114:4	114:76	2	var_Change
arg	114:16	114:20	3	aout
water	114:16	0:0	4	aout
arg	114:22	114:46	3	"audio-replay-gain-mode"
water	114:22	0:0	4	"audio-replay-gain-mode"
arg	114:48	114:63	3	VLC_VAR_SETTEXT
water	114:48	0:0	4	VLC_VAR_SETTEXT
arg	114:65	114:70	3	&text
op	114:65	0:0	4	&
water	114:66	0:0	4	text
arg	114:72	114:76	3	NULL
water	114:72	0:0	4	NULL
water	114:77	0:0	2	;
water	115:4	0:0	2	cfg
op	115:8	0:0	2	=
call	115:10	115:71	2	config_FindConfig
arg	115:29	115:45	3	VLC_OBJECT(aout)
call	115:29	115:44	4	VLC_OBJECT
arg	115:40	115:44	5	aout
water	115:40	0:0	6	aout
arg	115:47	115:71	3	"audio-replay-gain-mode"
water	115:47	0:0	4	"audio-replay-gain-mode"
water	115:72	0:0	2	;
if	116:4	123:8	2	(likely (cfg != NULL ))
cond	116:8	116:26	3	likely (cfg != NULL )
call	116:8	116:26	4	likely
arg	116:15	116:26	5	cfg!=NULL
water	116:15	0:0	6	cfg
op	116:19	0:0	6	!=
water	116:22	0:0	6	NULL
stmts	117:8	123:8	3	
for	117:8	123:8	4	(unsigned i = 0 ;i < cfg -> list_count;i ++)
forinit	117:13	117:27	5	unsigned i = 0 ;
water	117:13	0:0	6	unsigned
water	117:22	0:0	6	i
op	117:24	0:0	6	=
water	117:26	0:0	6	0
water	117:27	0:0	6	;
cond	117:29	117:38	5	i < cfg -> list_count
water	117:29	0:0	6	i
op	117:31	0:0	6	<
water	117:33	0:0	6	cfg
op	117:36	0:0	6	->
water	117:38	0:0	6	list_count
forexpr	117:50	117:51	5	i ++
water	117:50	0:0	6	i
op	117:51	0:0	6	++
stmts	118:8	123:8	5	
water	118:8	0:0	6	{
water	119:12	0:0	6	val
op	119:15	0:0	6	.
water	119:16	0:0	6	psz_string
op	119:27	0:0	6	=
water	119:29	0:0	6	cfg
op	119:32	0:0	6	->
water	119:34	0:0	6	list
op	119:38	0:0	6	.
water	119:39	0:0	6	psz
op	119:42	0:0	6	[
water	119:43	0:0	6	i
op	119:44	0:0	6	]
water	119:45	0:0	6	;
water	120:12	0:0	6	text
op	120:16	0:0	6	.
water	120:17	0:0	6	psz_string
op	120:28	0:0	6	=
call	120:30	120:59	6	vlc_gettext
arg	120:42	120:59	7	cfg->list_text[i]
water	120:42	0:0	8	cfg
op	120:45	0:0	8	->
water	120:47	0:0	8	list_text
op	120:56	0:0	8	[
water	120:57	0:0	8	i
op	120:58	0:0	8	]
water	120:60	0:0	6	;
call	121:12	122:39	6	var_Change
arg	121:24	121:28	7	aout
water	121:24	0:0	8	aout
arg	121:30	121:54	7	"audio-replay-gain-mode"
water	121:30	0:0	8	"audio-replay-gain-mode"
arg	121:56	121:73	7	VLC_VAR_ADDCHOICE
water	121:56	0:0	8	VLC_VAR_ADDCHOICE
arg	122:28	122:32	7	&val
op	122:28	0:0	8	&
water	122:29	0:0	8	val
arg	122:34	122:39	7	&text
op	122:34	0:0	8	&
water	122:35	0:0	8	text
water	122:40	0:0	6	;
water	123:8	0:0	6	}
call	125:4	125:75	2	var_Create
arg	125:16	125:20	3	aout
water	125:16	0:0	4	aout
arg	125:22	125:40	3	"equalizer-preamp"
water	125:22	0:0	4	"equalizer-preamp"
arg	125:42	125:75	3	VLC_VAR_FLOAT|VLC_VAR_DOINHERIT
water	125:42	0:0	4	VLC_VAR_FLOAT
op	125:56	0:0	4	|
water	125:58	0:0	4	VLC_VAR_DOINHERIT
water	125:76	0:0	2	;
call	126:4	126:75	2	var_Create
arg	126:16	126:20	3	aout
water	126:16	0:0	4	aout
arg	126:22	126:39	3	"equalizer-bands"
water	126:22	0:0	4	"equalizer-bands"
arg	126:41	126:75	3	VLC_VAR_STRING|VLC_VAR_DOINHERIT
water	126:41	0:0	4	VLC_VAR_STRING
op	126:56	0:0	4	|
water	126:58	0:0	4	VLC_VAR_DOINHERIT
water	126:76	0:0	2	;
call	127:4	127:76	2	var_Create
arg	127:16	127:20	3	aout
water	127:16	0:0	4	aout
arg	127:22	127:40	3	"equalizer-preset"
water	127:22	0:0	4	"equalizer-preset"
arg	127:42	127:76	3	VLC_VAR_STRING|VLC_VAR_DOINHERIT
water	127:42	0:0	4	VLC_VAR_STRING
op	127:57	0:0	4	|
water	127:59	0:0	4	VLC_VAR_DOINHERIT
water	127:77	0:0	2	;
return	128:4	128:15	2	aout
water	128:11	0:0	3	aout

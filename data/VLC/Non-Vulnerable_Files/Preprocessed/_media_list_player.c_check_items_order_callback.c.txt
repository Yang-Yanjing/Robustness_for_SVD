func	2:0	23:0	0	static void	check_items_order_callback
params	2:38	0:0	1	
param	2:39	2:69	2	const libvlc_event_t *	p_event
param	2:71	2:87	2	void *	user_data
stmnts	0:0	22:19	1	
decl	4:4	4:53	2	struct check_items_order_data	*checks
op	4:42	0:0	2	=
water	4:44	0:0	2	user_data
decl	5:4	5:72	2	libvlc_media_t	*md
op	5:23	0:0	2	=
water	5:25	0:0	2	p_event
op	5:32	0:0	2	->
water	5:34	0:0	2	u
op	5:35	0:0	2	.
water	5:36	0:0	2	media_list_player_next_item_set
op	5:67	0:0	2	.
water	5:68	0:0	2	item
call	6:4	6:40	2	assert
arg	6:11	6:40	3	checks->index<checks->count
water	6:11	0:0	4	checks
op	6:17	0:0	4	->
water	6:19	0:0	4	index
op	6:25	0:0	4	<
water	6:27	0:0	4	checks
op	6:33	0:0	4	->
water	6:35	0:0	4	count
water	6:41	0:0	2	;
if	7:4	12:4	2	(checks -> items [ checks -> index ] != md)
cond	7:8	7:40	3	checks -> items [ checks -> index ] != md
water	7:8	0:0	4	checks
op	7:14	0:0	4	->
water	7:16	0:0	4	items
op	7:21	0:0	4	[
water	7:22	0:0	4	checks
op	7:28	0:0	4	->
water	7:30	0:0	4	index
op	7:35	0:0	4	]
op	7:37	0:0	4	!=
water	7:40	0:0	4	md
stmts	8:4	12:4	3	
water	8:4	0:0	4	{
decl	9:8	9:66	4	char	*title
op	9:20	0:0	4	=
call	9:22	9:65	5	libvlc_media_get_meta
arg	9:44	9:46	6	md
water	9:44	0:0	7	md
arg	9:48	9:65	6	libvlc_meta_Title
water	9:48	0:0	7	libvlc_meta_Title
call	10:8	10:36	4	log
arg	10:13	10:29	5	"Got items %s\n"
water	10:13	0:0	6	"Got items %s\n"
arg	10:31	10:36	5	title
water	10:31	0:0	6	title
water	10:37	0:0	4	;
call	11:8	11:18	4	free
arg	11:13	11:18	5	title
water	11:13	0:0	6	title
water	11:19	0:0	4	;
water	12:4	0:0	4	}
call	13:4	13:45	2	assert
arg	13:11	13:45	3	checks->items[checks->index]==md
water	13:11	0:0	4	checks
op	13:17	0:0	4	->
water	13:19	0:0	4	items
op	13:24	0:0	4	[
water	13:25	0:0	4	checks
op	13:31	0:0	4	->
water	13:33	0:0	4	index
op	13:38	0:0	4	]
op	13:40	0:0	4	==
water	13:43	0:0	4	md
water	13:46	0:0	2	;
decl	14:4	14:62	2	char	*title
op	14:16	0:0	2	=
call	14:18	14:61	3	libvlc_media_get_meta
arg	14:40	14:42	4	md
water	14:40	0:0	5	md
arg	14:44	14:61	4	libvlc_meta_Title
water	14:44	0:0	5	libvlc_meta_Title
call	15:4	15:68	2	log
arg	15:9	15:46	3	"Item %d '%s' was correctly queued\n"
water	15:9	0:0	4	"Item %d '%s' was correctly queued\n"
arg	15:48	15:61	3	checks->index
water	15:48	0:0	4	checks
op	15:54	0:0	4	->
water	15:56	0:0	4	index
arg	15:63	15:68	3	title
water	15:63	0:0	4	title
water	15:69	0:0	2	;
call	16:4	16:14	2	free
arg	16:9	16:14	3	title
water	16:9	0:0	4	title
water	16:15	0:0	2	;
if	17:4	21:4	2	(checks -> index == ( checks -> count - 1 ))
cond	17:8	17:43	3	checks -> index == ( checks -> count - 1 )
water	17:8	0:0	4	checks
op	17:14	0:0	4	->
water	17:16	0:0	4	index
op	17:22	0:0	4	==
water	17:25	0:0	4	(
water	17:26	0:0	4	checks
op	17:32	0:0	4	->
water	17:34	0:0	4	count
op	17:40	0:0	4	-
water	17:42	0:0	4	1
water	17:43	0:0	4	)
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
call	19:8	19:42	4	log
arg	19:13	19:42	5	"Done playing with success\n"
water	19:13	0:0	6	"Done playing with success\n"
water	19:43	0:0	4	;
water	20:8	0:0	4	checks
op	20:14	0:0	4	->
water	20:16	0:0	4	done_playing
op	20:29	0:0	4	=
water	20:31	0:0	4	true
water	20:35	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	checks
op	22:10	0:0	2	->
water	22:12	0:0	2	index
op	22:17	0:0	2	++
water	22:19	0:0	2	;

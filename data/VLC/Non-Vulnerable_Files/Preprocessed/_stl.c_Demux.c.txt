func	2:0	20:0	0	static int	Demux
params	2:16	0:0	1	
param	2:17	2:31	2	demux_t *	demux
stmnts	0:0	19:44	1	
decl	4:4	4:35	2	demux_sys_t	*sys
op	4:21	0:0	2	=
water	4:23	0:0	2	demux
op	4:28	0:0	2	->
water	4:30	0:0	2	p_sys
while	5:4	18:4	2	(sys -> current < sys -> count)
cond	5:10	5:30	3	sys -> current < sys -> count
water	5:10	0:0	4	sys
op	5:13	0:0	4	->
water	5:15	0:0	4	current
op	5:23	0:0	4	<
water	5:25	0:0	4	sys
op	5:28	0:0	4	->
water	5:30	0:0	4	count
stmts	5:37	18:4	3	
water	5:37	0:0	4	{
decl	6:8	6:50	4	stl_entry_t	*s
op	6:23	0:0	4	=
op	6:25	0:0	4	&
water	6:26	0:0	4	sys
op	6:29	0:0	4	->
water	6:31	0:0	4	index
op	6:36	0:0	4	[
water	6:37	0:0	4	sys
op	6:40	0:0	4	->
water	6:42	0:0	4	current
op	6:49	0:0	4	]
if	7:8	8:17	4	(s -> start > sys -> next_date)
cond	7:12	7:28	5	s -> start > sys -> next_date
water	7:12	0:0	6	s
op	7:13	0:0	6	->
water	7:15	0:0	6	start
op	7:21	0:0	6	>
water	7:23	0:0	6	sys
op	7:26	0:0	6	->
water	7:28	0:0	6	next_date
stmts	8:12	8:17	5	
break	8:12	8:17	6	
decl	9:8	9:59	4	block_t	*b
op	9:19	0:0	4	=
call	9:21	9:58	5	stream_Block
arg	9:34	9:42	6	demux->s
water	9:34	0:0	7	demux
op	9:39	0:0	7	->
water	9:41	0:0	7	s
arg	9:44	9:58	6	128*s->count
water	9:44	0:0	7	128
op	9:48	0:0	7	*
water	9:50	0:0	7	s
op	9:51	0:0	7	->
water	9:53	0:0	7	count
if	10:8	16:8	4	(b)
cond	10:12	10:12	5	b
water	10:12	0:0	6	b
stmts	10:15	16:8	5	
water	10:15	0:0	6	{
water	11:12	0:0	6	b
op	11:13	0:0	6	->
water	11:15	0:0	6	i_dts
op	11:21	0:0	6	=
water	12:12	0:0	6	b
op	12:13	0:0	6	->
water	12:15	0:0	6	i_pts
op	12:21	0:0	6	=
water	12:23	0:0	6	VLC_TS_0
op	12:32	0:0	6	+
water	12:34	0:0	6	s
op	12:35	0:0	6	->
water	12:37	0:0	6	start
water	12:42	0:0	6	;
if	13:12	14:48	6	(s -> stop > s -> start)
cond	13:16	13:29	7	s -> stop > s -> start
water	13:16	0:0	8	s
op	13:17	0:0	8	->
water	13:19	0:0	8	stop
op	13:24	0:0	8	>
water	13:26	0:0	8	s
op	13:27	0:0	8	->
water	13:29	0:0	8	start
stmts	14:16	14:48	7	
water	14:16	0:0	8	b
op	14:17	0:0	8	->
water	14:19	0:0	8	i_length
op	14:28	0:0	8	=
water	14:30	0:0	8	s
op	14:31	0:0	8	->
water	14:33	0:0	8	stop
op	14:38	0:0	8	-
water	14:40	0:0	8	s
op	14:41	0:0	8	->
water	14:43	0:0	8	start
water	14:48	0:0	8	;
call	15:12	15:46	6	es_out_Send
arg	15:24	15:34	7	demux->out
water	15:24	0:0	8	demux
op	15:29	0:0	8	->
water	15:31	0:0	8	out
arg	15:36	15:43	7	sys->es
water	15:36	0:0	8	sys
op	15:39	0:0	8	->
water	15:41	0:0	8	es
arg	15:45	15:46	7	b
water	15:45	0:0	8	b
water	15:47	0:0	6	;
water	16:8	0:0	6	}
water	17:8	0:0	4	sys
op	17:11	0:0	4	->
water	17:13	0:0	4	current
op	17:20	0:0	4	++
water	17:22	0:0	4	;
water	18:4	0:0	4	}
return	19:4	19:44	2	sys->current<sys->count?1:0
water	19:11	0:0	3	sys
op	19:14	0:0	3	->
water	19:16	0:0	3	current
op	19:24	0:0	3	<
water	19:26	0:0	3	sys
op	19:29	0:0	3	->
water	19:31	0:0	3	count
water	19:37	0:0	3	?
water	19:39	0:0	3	1
water	19:41	0:0	3	:
water	19:43	0:0	3	0

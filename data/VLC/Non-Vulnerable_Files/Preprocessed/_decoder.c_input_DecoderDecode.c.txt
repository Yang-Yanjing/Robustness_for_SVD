func	2:0	27:0	0	void	input_DecoderDecode
params	2:24	0:0	1	
param	2:26	2:42	2	decoder_t *	p_dec
param	2:44	2:60	2	block_t *	p_block
param	2:62	2:77	2	bool	b_do_pace
stmnts	0:0	26:45	1	
decl	4:4	4:49	2	decoder_owner_sys_t	*p_owner
op	4:33	0:0	2	=
water	4:35	0:0	2	p_dec
op	4:40	0:0	2	->
water	4:42	0:0	2	p_owner
if	5:4	13:4	2	(b_do_pace)
cond	5:8	5:8	3	b_do_pace
water	5:8	0:0	4	b_do_pace
stmts	6:4	13:4	3	
water	6:4	0:0	4	{
if	11:8	12:59	4	(! p_owner -> b_waiting)
cond	11:12	11:22	5	! p_owner -> b_waiting
op	11:12	0:0	6	!
water	11:13	0:0	6	p_owner
op	11:20	0:0	6	->
water	11:22	0:0	6	b_waiting
stmts	12:12	12:59	5	
call	12:12	12:58	6	block_FifoPace
arg	12:28	12:43	7	p_owner->p_fifo
water	12:28	0:0	8	p_owner
op	12:35	0:0	8	->
water	12:37	0:0	8	p_fifo
arg	12:45	12:47	7	10
water	12:45	0:0	8	10
arg	12:49	12:58	7	SIZE_MAX
water	12:49	0:0	8	SIZE_MAX
water	12:59	0:0	6	;
water	13:4	0:0	4	}
else	15:4	25:4	2
stmts	15:9	25:4	3	
if	15:9	25:4	4	(block_FifoSize (p_owner -> p_fifo ) > 50 * 1024 * 1024)
cond	15:13	15:57	5	block_FifoSize (p_owner -> p_fifo ) > 50 * 1024 * 1024
call	15:13	15:45	6	block_FifoSize
arg	15:29	15:45	7	p_owner->p_fifo
water	15:29	0:0	8	p_owner
op	15:36	0:0	8	->
water	15:38	0:0	8	p_fifo
op	15:47	0:0	6	>
water	15:49	0:0	6	50
op	15:51	0:0	6	*
water	15:52	0:0	6	1024
op	15:56	0:0	6	*
water	15:57	0:0	6	1024
stmts	17:4	25:4	5	
else	17:4	25:4	6
stmts	17:9	25:4	7	
if	17:9	25:4	8	(block_FifoSize (p_owner -> p_fifo ) > 400 * 1024 * 1024)
cond	17:13	17:58	9	block_FifoSize (p_owner -> p_fifo ) > 400 * 1024 * 1024
call	17:13	17:45	10	block_FifoSize
arg	17:29	17:45	11	p_owner->p_fifo
water	17:29	0:0	12	p_owner
op	17:36	0:0	12	->
water	17:38	0:0	12	p_fifo
op	17:47	0:0	10	>
water	17:49	0:0	10	400
op	17:52	0:0	10	*
water	17:53	0:0	10	1024
op	17:57	0:0	10	*
water	17:58	0:0	10	1024
stmts	19:4	25:4	9	
water	19:4	0:0	10	{
call	22:8	23:62	10	msg_Warn
arg	22:18	22:23	11	p_dec
water	22:18	0:0	12	p_dec
arg	22:25	23:62	11	"decoder/packetizer fifo full (data not ""consumed quickly enough), resetting fifo!"
water	22:25	0:0	12	"decoder/packetizer fifo full (data not "
water	23:18	0:0	12	"consumed quickly enough), resetting fifo!"
water	23:63	0:0	10	;
call	24:8	24:41	10	block_FifoEmpty
arg	24:25	24:41	11	p_owner->p_fifo
water	24:25	0:0	12	p_owner
op	24:32	0:0	12	->
water	24:34	0:0	12	p_fifo
water	24:42	0:0	10	;
water	25:4	0:0	10	}
call	26:4	26:44	2	block_FifoPut
arg	26:19	26:34	3	p_owner->p_fifo
water	26:19	0:0	4	p_owner
op	26:26	0:0	4	->
water	26:28	0:0	4	p_fifo
arg	26:36	26:44	3	p_block
water	26:36	0:0	4	p_block
water	26:45	0:0	2	;

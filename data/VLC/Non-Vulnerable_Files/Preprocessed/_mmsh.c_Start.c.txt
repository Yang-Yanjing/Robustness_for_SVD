func	2:0	104:0	0	static int	Start
params	2:16	0:0	1	
param	2:18	2:36	2	access_t *	p_access
param	2:38	2:53	2	uint64_t	i_pos
stmnts	0:0	103:22	1	
decl	4:4	4:41	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_access
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:22	2	int	i_streams
op	5:19	0:0	2	=
water	5:21	0:0	2	0
decl	6:4	6:31	2	int	i_streams_selected
op	6:28	0:0	2	=
water	6:30	0:0	2	0
decl	7:4	7:10	2	int	i
decl	8:4	8:20	2	char	*psz
op	8:14	0:0	2	=
water	8:16	0:0	2	NULL
call	9:4	9:41	2	msg_Dbg
arg	9:13	9:21	3	p_access
water	9:13	0:0	4	p_access
arg	9:23	9:41	3	"starting stream"
water	9:23	0:0	4	"starting stream"
water	9:42	0:0	2	;
for	10:4	17:4	2	(i = 1 ;i < 128;i ++)
forinit	10:9	10:14	3	i = 1 ;
water	10:9	0:0	4	i
op	10:11	0:0	4	=
water	10:13	0:0	4	1
water	10:14	0:0	4	;
cond	10:16	10:20	3	i < 128
water	10:16	0:0	4	i
op	10:18	0:0	4	<
water	10:20	0:0	4	128
forexpr	10:25	10:26	3	i ++
water	10:25	0:0	4	i
op	10:26	0:0	4	++
stmts	11:4	17:4	3	
water	11:4	0:0	4	{
if	12:8	13:20	4	(p_sys -> asfh . stream [ i ] . i_cat == ASF_CODEC_TYPE_UNKNOWN)
cond	12:12	12:43	5	p_sys -> asfh . stream [ i ] . i_cat == ASF_CODEC_TYPE_UNKNOWN
water	12:12	0:0	6	p_sys
op	12:17	0:0	6	->
water	12:19	0:0	6	asfh
op	12:23	0:0	6	.
water	12:24	0:0	6	stream
op	12:30	0:0	6	[
water	12:31	0:0	6	i
op	12:32	0:0	6	]
op	12:33	0:0	6	.
water	12:34	0:0	6	i_cat
op	12:40	0:0	6	==
water	12:43	0:0	6	ASF_CODEC_TYPE_UNKNOWN
stmts	13:12	13:20	5	
continue	13:12	13:20	6	
water	14:8	0:0	4	i_streams
op	14:17	0:0	4	++
water	14:19	0:0	4	;
if	15:8	16:32	4	(p_sys -> asfh . stream [ i ] . i_selected)
cond	15:12	15:34	5	p_sys -> asfh . stream [ i ] . i_selected
water	15:12	0:0	6	p_sys
op	15:17	0:0	6	->
water	15:19	0:0	6	asfh
op	15:23	0:0	6	.
water	15:24	0:0	6	stream
op	15:30	0:0	6	[
water	15:31	0:0	6	i
op	15:32	0:0	6	]
op	15:33	0:0	6	.
water	15:34	0:0	6	i_selected
stmts	16:12	16:32	5	
water	16:12	0:0	6	i_streams_selected
op	16:30	0:0	6	++
water	16:32	0:0	6	;
water	17:4	0:0	4	}
if	18:4	22:4	2	(i_streams_selected <= 0)
cond	18:8	18:30	3	i_streams_selected <= 0
water	18:8	0:0	4	i_streams_selected
op	18:27	0:0	4	<=
water	18:30	0:0	4	0
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:48	4	msg_Err
arg	20:17	20:25	5	p_access
water	20:17	0:0	6	p_access
arg	20:27	20:48	5	"no stream selected"
water	20:27	0:0	6	"no stream selected"
water	20:49	0:0	4	;
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
if	23:4	24:27	2	(OpenConnection (p_access ))
cond	23:8	23:33	3	OpenConnection (p_access )
call	23:8	23:33	4	OpenConnection
arg	23:24	23:33	5	p_access
water	23:24	0:0	6	p_access
stmts	24:8	24:27	3	
return	24:8	24:27	4	VLC_EGENERIC
water	24:15	0:0	5	VLC_EGENERIC
call	25:4	27:52	2	net_Printf
arg	25:16	25:24	3	p_access
water	25:16	0:0	4	p_access
arg	25:26	25:35	3	p_sys->fd
water	25:26	0:0	4	p_sys
op	25:31	0:0	4	->
water	25:33	0:0	4	fd
arg	25:37	25:41	3	NULL
water	25:37	0:0	4	NULL
arg	26:16	27:52	3	"Accept: */*\r\n""User-Agent: "MMSH_USER_AGENT"\r\n"
water	26:16	0:0	4	"Accept: */*\r\n"
water	27:16	0:0	4	"User-Agent: "
water	27:30	0:0	4	MMSH_USER_AGENT
water	27:45	0:0	4	"\r\n"
water	27:53	0:0	2	;
if	28:4	33:4	2	(p_sys -> b_broadcast)
cond	28:8	28:15	3	p_sys -> b_broadcast
water	28:8	0:0	4	p_sys
op	28:13	0:0	4	->
water	28:15	0:0	4	b_broadcast
stmts	29:4	33:4	3	
water	29:4	0:0	4	{
call	30:8	32:47	4	net_Printf
arg	30:20	30:28	5	p_access
water	30:20	0:0	6	p_access
arg	30:30	30:39	5	p_sys->fd
water	30:30	0:0	6	p_sys
op	30:35	0:0	6	->
water	30:37	0:0	6	fd
arg	30:41	30:45	5	NULL
water	30:41	0:0	6	NULL
arg	31:20	31:75	5	"Pragma: no-cache,rate=1.000000,request-context=%d\r\n"
water	31:20	0:0	6	"Pragma: no-cache,rate=1.000000,request-context=%d\r\n"
arg	32:20	32:47	5	p_sys->i_request_context++
water	32:20	0:0	6	p_sys
op	32:25	0:0	6	->
water	32:27	0:0	6	i_request_context
op	32:44	0:0	6	++
water	32:48	0:0	4	;
water	33:4	0:0	4	}
else	34:4	41:4	2
stmts	35:4	41:4	3	
water	35:4	0:0	4	{
call	36:8	40:47	4	net_Printf
arg	36:20	36:28	5	p_access
water	36:20	0:0	6	p_access
arg	36:30	36:39	5	p_sys->fd
water	36:30	0:0	6	p_sys
op	36:35	0:0	6	->
water	36:37	0:0	6	fd
arg	36:41	36:45	5	NULL
water	36:41	0:0	6	NULL
arg	37:20	37:124	5	"Pragma: no-cache,rate=1.000000,stream-time=0,stream-offset=%u:%u,request-context=%d,max-duration=0\r\n"
water	37:20	0:0	6	"Pragma: no-cache,rate=1.000000,stream-time=0,stream-offset=%u:%u,request-context=%d,max-duration=0\r\n"
arg	38:20	38:56	5	(uint32_t)((i_pos>>32)&0xffffffff)
call	38:20	38:55	6	(uint32_t)
arg	38:31	38:55	7	(i_pos>>32)&0xffffffff
water	38:31	0:0	8	(
water	38:32	0:0	8	i_pos
op	38:38	0:0	8	>>
water	38:41	0:0	8	32
water	38:43	0:0	8	)
op	38:44	0:0	8	&
water	38:45	0:0	8	0
water	38:46	0:0	8	xffffffff
arg	39:20	39:48	5	(uint32_t)(i_pos&0xffffffff)
call	39:20	39:47	6	(uint32_t)
arg	39:31	39:47	7	i_pos&0xffffffff
water	39:31	0:0	8	i_pos
op	39:36	0:0	8	&
water	39:37	0:0	8	0
water	39:38	0:0	8	xffffffff
arg	40:20	40:47	5	p_sys->i_request_context++
water	40:20	0:0	6	p_sys
op	40:25	0:0	6	->
water	40:27	0:0	6	i_request_context
op	40:44	0:0	6	++
water	40:48	0:0	4	;
water	41:4	0:0	4	}
call	42:4	48:25	2	net_Printf
arg	42:16	42:24	3	p_access
water	42:16	0:0	4	p_access
arg	42:26	42:35	3	p_sys->fd
water	42:26	0:0	4	p_sys
op	42:31	0:0	4	->
water	42:33	0:0	4	fd
arg	42:37	42:41	3	NULL
water	42:37	0:0	4	NULL
arg	43:16	46:46	3	"Pragma: xPlayStrm=1\r\n""Pragma: xClientGUID={"GUID_FMT"}\r\n""Pragma: stream-switch-count=%d\r\n""Pragma: stream-switch-entry="
water	43:16	0:0	4	"Pragma: xPlayStrm=1\r\n"
water	44:16	0:0	4	"Pragma: xClientGUID={"
water	44:39	0:0	4	GUID_FMT
water	44:47	0:0	4	"}\r\n"
water	45:16	0:0	4	"Pragma: stream-switch-count=%d\r\n"
water	46:16	0:0	4	"Pragma: stream-switch-entry="
arg	47:16	47:41	3	GUID_PRINT(p_sys->guid)
call	47:16	47:40	4	GUID_PRINT
arg	47:28	47:40	5	p_sys->guid
water	47:28	0:0	6	p_sys
op	47:33	0:0	6	->
water	47:35	0:0	6	guid
arg	48:16	48:25	3	i_streams
water	48:16	0:0	4	i_streams
water	48:26	0:0	2	;
for	49:4	61:4	2	(i = 1 ;i < 128;i ++)
forinit	49:9	49:14	3	i = 1 ;
water	49:9	0:0	4	i
op	49:11	0:0	4	=
water	49:13	0:0	4	1
water	49:14	0:0	4	;
cond	49:16	49:20	3	i < 128
water	49:16	0:0	4	i
op	49:18	0:0	4	<
water	49:20	0:0	4	128
forexpr	49:25	49:26	3	i ++
water	49:25	0:0	4	i
op	49:26	0:0	4	++
stmts	50:4	61:4	3	
water	50:4	0:0	4	{
if	51:8	60:8	4	(p_sys -> asfh . stream [ i ] . i_cat != ASF_CODEC_TYPE_UNKNOWN)
cond	51:12	51:43	5	p_sys -> asfh . stream [ i ] . i_cat != ASF_CODEC_TYPE_UNKNOWN
water	51:12	0:0	6	p_sys
op	51:17	0:0	6	->
water	51:19	0:0	6	asfh
op	51:23	0:0	6	.
water	51:24	0:0	6	stream
op	51:30	0:0	6	[
water	51:31	0:0	6	i
op	51:32	0:0	6	]
op	51:33	0:0	6	.
water	51:34	0:0	6	i_cat
op	51:40	0:0	6	!=
water	51:43	0:0	6	ASF_CODEC_TYPE_UNKNOWN
stmts	52:8	60:8	5	
water	52:8	0:0	6	{
decl	53:12	53:28	6	int	i_select
op	53:25	0:0	6	=
water	53:27	0:0	6	2
if	54:12	57:12	6	(p_sys -> asfh . stream [ i ] . i_selected)
cond	54:16	54:38	7	p_sys -> asfh . stream [ i ] . i_selected
water	54:16	0:0	8	p_sys
op	54:21	0:0	8	->
water	54:23	0:0	8	asfh
op	54:27	0:0	8	.
water	54:28	0:0	8	stream
op	54:34	0:0	8	[
water	54:35	0:0	8	i
op	54:36	0:0	8	]
op	54:37	0:0	8	.
water	54:38	0:0	8	i_selected
stmts	55:12	57:12	7	
water	55:12	0:0	8	{
water	56:16	0:0	8	i_select
op	56:25	0:0	8	=
water	56:27	0:0	8	0
water	56:28	0:0	8	;
water	57:12	0:0	8	}
call	58:12	59:51	6	net_Printf
arg	58:24	58:32	7	p_access
water	58:24	0:0	8	p_access
arg	58:34	58:43	7	p_sys->fd
water	58:34	0:0	8	p_sys
op	58:39	0:0	8	->
water	58:41	0:0	8	fd
arg	58:45	58:49	7	NULL
water	58:45	0:0	8	NULL
arg	59:24	59:37	7	"ffff:%x:%d "
water	59:24	0:0	8	"ffff:%x:%d "
arg	59:39	59:40	7	i
water	59:39	0:0	8	i
arg	59:42	59:51	7	i_select
water	59:42	0:0	8	i_select
water	59:52	0:0	6	;
water	60:8	0:0	6	}
water	61:4	0:0	4	}
call	62:4	62:50	2	net_Printf
arg	62:16	62:24	3	p_access
water	62:16	0:0	4	p_access
arg	62:26	62:35	3	p_sys->fd
water	62:26	0:0	4	p_sys
op	62:31	0:0	4	->
water	62:33	0:0	4	fd
arg	62:37	62:41	3	NULL
water	62:37	0:0	4	NULL
arg	62:43	62:50	3	"\r\n"
water	62:43	0:0	4	"\r\n"
water	62:51	0:0	2	;
call	63:4	64:40	2	net_Printf
arg	63:16	63:24	3	p_access
water	63:16	0:0	4	p_access
arg	63:26	63:35	3	p_sys->fd
water	63:26	0:0	4	p_sys
op	63:31	0:0	4	->
water	63:33	0:0	4	fd
arg	63:37	63:41	3	NULL
water	63:37	0:0	4	NULL
arg	64:16	64:40	3	"Connection: Close\r\n"
water	64:16	0:0	4	"Connection: Close\r\n"
water	64:41	0:0	2	;
if	65:4	69:4	2	(net_Printf (p_access ,p_sys -> fd ,NULL ,"\r\n" ) < 0)
cond	65:8	65:58	3	net_Printf (p_access ,p_sys -> fd ,NULL ,"\r\n" ) < 0
call	65:8	65:54	4	net_Printf
arg	65:20	65:28	5	p_access
water	65:20	0:0	6	p_access
arg	65:30	65:39	5	p_sys->fd
water	65:30	0:0	6	p_sys
op	65:35	0:0	6	->
water	65:37	0:0	6	fd
arg	65:41	65:45	5	NULL
water	65:41	0:0	6	NULL
arg	65:47	65:54	5	"\r\n"
water	65:47	0:0	6	"\r\n"
op	65:56	0:0	4	<
water	65:58	0:0	4	0
stmts	66:4	69:4	3	
water	66:4	0:0	4	{
call	67:8	67:52	4	msg_Err
arg	67:17	67:25	5	p_access
water	67:17	0:0	6	p_access
arg	67:27	67:52	5	"failed to send request"
water	67:27	0:0	6	"failed to send request"
water	67:53	0:0	4	;
return	68:8	68:27	4	VLC_EGENERIC
water	68:15	0:0	5	VLC_EGENERIC
water	69:4	0:0	4	}
water	70:4	0:0	2	psz
op	70:8	0:0	2	=
call	70:10	70:46	2	net_Gets
arg	70:20	70:28	3	p_access
water	70:20	0:0	4	p_access
arg	70:30	70:39	3	p_sys->fd
water	70:30	0:0	4	p_sys
op	70:35	0:0	4	->
water	70:37	0:0	4	fd
arg	70:41	70:46	3	NULL
water	70:41	0:0	4	NULL
water	70:47	0:0	2	;
if	71:4	75:4	2	(psz == NULL)
cond	71:8	71:15	3	psz == NULL
water	71:8	0:0	4	psz
op	71:12	0:0	4	==
water	71:15	0:0	4	NULL
stmts	72:4	75:4	3	
water	72:4	0:0	4	{
call	73:8	73:48	4	msg_Err
arg	73:17	73:25	5	p_access
water	73:17	0:0	6	p_access
arg	73:27	73:48	5	"cannot read data 0"
water	73:27	0:0	6	"cannot read data 0"
water	73:49	0:0	4	;
return	74:8	74:27	4	VLC_EGENERIC
water	74:15	0:0	5	VLC_EGENERIC
water	75:4	0:0	4	}
if	76:4	81:4	2	(atoi (& psz [ 9 ] ) >= 400)
cond	76:8	76:27	3	atoi (& psz [ 9 ] ) >= 400
call	76:8	76:22	4	atoi
arg	76:14	76:22	5	&psz[9]
op	76:14	0:0	6	&
water	76:15	0:0	6	psz
op	76:18	0:0	6	[
water	76:19	0:0	6	9
op	76:20	0:0	6	]
op	76:24	0:0	4	>=
water	76:27	0:0	4	400
stmts	77:4	81:4	3	
water	77:4	0:0	4	{
call	78:8	78:44	4	msg_Err
arg	78:17	78:25	5	p_access
water	78:17	0:0	6	p_access
arg	78:27	78:38	5	"error: %s"
water	78:27	0:0	6	"error: %s"
arg	78:40	78:44	5	psz
water	78:40	0:0	6	psz
water	78:45	0:0	4	;
call	79:8	79:18	4	free
arg	79:14	79:18	5	psz
water	79:14	0:0	6	psz
water	79:19	0:0	4	;
return	80:8	80:27	4	VLC_EGENERIC
water	80:15	0:0	5	VLC_EGENERIC
water	81:4	0:0	4	}
call	82:4	82:46	2	msg_Dbg
arg	82:13	82:21	3	p_access
water	82:13	0:0	4	p_access
arg	82:23	82:40	3	"HTTP reply '%s'"
water	82:23	0:0	4	"HTTP reply '%s'"
arg	82:42	82:46	3	psz
water	82:42	0:0	4	psz
water	82:47	0:0	2	;
call	83:4	83:14	2	free
arg	83:10	83:14	3	psz
water	83:10	0:0	4	psz
water	83:15	0:0	2	;
for	85:4	100:4	2	(;;)
forinit	85:9	85:9	3	;
water	85:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	86:4	100:4	3	
water	86:4	0:0	4	{
decl	87:8	87:57	4	char	*psz
op	87:18	0:0	4	=
call	87:20	87:56	5	net_Gets
arg	87:30	87:38	6	p_access
water	87:30	0:0	7	p_access
arg	87:40	87:49	6	p_sys->fd
water	87:40	0:0	7	p_sys
op	87:45	0:0	7	->
water	87:47	0:0	7	fd
arg	87:51	87:56	6	NULL
water	87:51	0:0	7	NULL
if	88:8	92:8	4	(psz == NULL)
cond	88:12	88:19	5	psz == NULL
water	88:12	0:0	6	psz
op	88:16	0:0	6	==
water	88:19	0:0	6	NULL
stmts	89:8	92:8	5	
water	89:8	0:0	6	{
call	90:12	90:52	6	msg_Err
arg	90:21	90:29	7	p_access
water	90:21	0:0	8	p_access
arg	90:31	90:52	7	"cannot read data 1"
water	90:31	0:0	8	"cannot read data 1"
water	90:53	0:0	6	;
return	91:12	91:31	6	VLC_EGENERIC
water	91:19	0:0	7	VLC_EGENERIC
water	92:8	0:0	6	}
if	93:8	97:8	4	(* psz == '\0')
cond	93:12	93:20	5	* psz == '\0'
op	93:12	0:0	6	*
water	93:13	0:0	6	psz
op	93:17	0:0	6	==
water	93:20	0:0	6	'\0'
stmts	94:8	97:8	5	
water	94:8	0:0	6	{
call	95:12	95:22	6	free
arg	95:18	95:22	7	psz
water	95:18	0:0	8	psz
water	95:23	0:0	6	;
break	96:12	96:17	6	
water	97:8	0:0	6	}
call	98:8	98:37	4	msg_Dbg
arg	98:17	98:25	5	p_access
water	98:17	0:0	6	p_access
arg	98:27	98:31	5	"%s"
water	98:27	0:0	6	"%s"
arg	98:33	98:37	5	psz
water	98:33	0:0	6	psz
water	98:38	0:0	4	;
call	99:8	99:18	4	free
arg	99:14	99:18	5	psz
water	99:14	0:0	6	psz
water	99:19	0:0	4	;
water	100:4	0:0	4	}
water	101:4	0:0	2	p_sys
op	101:9	0:0	2	->
water	101:11	0:0	2	i_packet_used
op	101:27	0:0	2	=
water	101:29	0:0	2	0
water	101:30	0:0	2	;
water	102:4	0:0	2	p_sys
op	102:9	0:0	2	->
water	102:11	0:0	2	i_packet_length
op	102:27	0:0	2	=
water	102:29	0:0	2	0
water	102:30	0:0	2	;
return	103:4	103:22	2	VLC_SUCCESS
water	103:11	0:0	3	VLC_SUCCESS

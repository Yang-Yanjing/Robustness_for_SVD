func	2:0	17:0	0	void	input_DecoderChangePause
params	2:29	0:0	1	
param	2:31	2:47	2	decoder_t *	p_dec
param	2:49	2:62	2	bool	b_paused
param	2:64	2:79	2	mtime_t	i_date
stmnts	0:0	16:38	1	
decl	4:4	4:49	2	decoder_owner_sys_t	*p_owner
op	4:33	0:0	2	=
water	4:35	0:0	2	p_dec
op	4:40	0:0	2	->
water	4:42	0:0	2	p_owner
call	5:4	5:35	2	vlc_mutex_lock
arg	5:20	5:35	3	&p_owner->lock
op	5:20	0:0	4	&
water	5:21	0:0	4	p_owner
op	5:28	0:0	4	->
water	5:30	0:0	4	lock
water	5:36	0:0	2	;
if	9:4	15:4	2	(likely (p_owner -> b_paused != b_paused ))
cond	9:8	9:44	3	likely (p_owner -> b_paused != b_paused )
call	9:8	9:44	4	likely
arg	9:15	9:44	5	p_owner->b_paused!=b_paused
water	9:15	0:0	6	p_owner
op	9:22	0:0	6	->
water	9:24	0:0	6	b_paused
op	9:33	0:0	6	!=
water	9:36	0:0	6	b_paused
stmts	9:48	15:4	3	
water	9:48	0:0	4	{
water	10:8	0:0	4	p_owner
op	10:15	0:0	4	->
water	10:17	0:0	4	b_paused
op	10:26	0:0	4	=
water	10:28	0:0	4	b_paused
water	10:36	0:0	4	;
water	11:8	0:0	4	p_owner
op	11:15	0:0	4	->
water	11:17	0:0	4	pause
op	11:22	0:0	4	.
water	11:23	0:0	4	i_date
op	11:30	0:0	4	=
water	11:32	0:0	4	i_date
water	11:38	0:0	4	;
water	12:8	0:0	4	p_owner
op	12:15	0:0	4	->
water	12:17	0:0	4	pause
op	12:22	0:0	4	.
water	12:23	0:0	4	i_ignore
op	12:32	0:0	4	=
water	12:34	0:0	4	0
water	12:35	0:0	4	;
call	13:8	13:48	4	vlc_cond_signal
arg	13:25	13:48	5	&p_owner->wait_request
op	13:25	0:0	6	&
water	13:26	0:0	6	p_owner
op	13:33	0:0	6	->
water	13:35	0:0	6	wait_request
water	13:49	0:0	4	;
call	14:8	14:58	4	DecoderOutputChangePause
arg	14:34	14:39	5	p_dec
water	14:34	0:0	6	p_dec
arg	14:41	14:49	5	b_paused
water	14:41	0:0	6	b_paused
arg	14:51	14:58	5	i_date
water	14:51	0:0	6	i_date
water	14:59	0:0	4	;
water	15:4	0:0	4	}
call	16:4	16:37	2	vlc_mutex_unlock
arg	16:22	16:37	3	&p_owner->lock
op	16:22	0:0	4	&
water	16:23	0:0	4	p_owner
op	16:30	0:0	4	->
water	16:32	0:0	4	lock
water	16:38	0:0	2	;

func	2:0	50:0	0	static void *	hls_Reload
params	2:23	0:0	1	
param	2:24	2:36	2	void *	p_this
stmnts	0:0	49:15	1	
decl	4:4	4:36	2	stream_t	*s
op	4:16	0:0	2	=
water	4:18	0:0	2	(
water	4:19	0:0	2	stream_t
op	4:28	0:0	2	*
water	4:29	0:0	2	)
water	4:30	0:0	2	p_this
decl	5:4	5:34	2	stream_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	s
op	5:27	0:0	2	->
water	5:29	0:0	2	p_sys
call	6:4	6:24	2	assert
arg	6:11	6:24	3	p_sys->b_live
water	6:11	0:0	4	p_sys
op	6:16	0:0	4	->
water	6:18	0:0	4	b_live
water	6:25	0:0	2	;
decl	7:4	7:21	2	double	wait
op	7:16	0:0	2	=
water	7:18	0:0	2	1
op	7:19	0:0	2	.
water	7:20	0:0	2	0
for	8:4	48:4	2	(;;)
forinit	8:10	8:10	3	;
water	8:10	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	9:4	48:4	3	
water	9:4	0:0	4	{
decl	10:8	10:29	4	mtime_t	now
op	10:20	0:0	4	=
call	10:22	10:28	5	mdate
if	11:8	46:8	4	(now >= p_sys -> playlist . wakeup)
cond	11:12	11:35	5	now >= p_sys -> playlist . wakeup
water	11:12	0:0	6	now
op	11:16	0:0	6	>=
water	11:19	0:0	6	p_sys
op	11:24	0:0	6	->
water	11:26	0:0	6	playlist
op	11:34	0:0	6	.
water	11:35	0:0	6	wakeup
stmts	12:8	46:8	5	
water	12:8	0:0	6	{
decl	13:12	13:39	6	int	canc
op	13:21	0:0	6	=
call	13:23	13:38	7	vlc_savecancel
if	15:12	29:12	6	(( p_sys -> download . segment - p_sys -> playback . segment < 3 ) && (hls_ReloadPlaylist (s ) != VLC_SUCCESS ))
cond	15:17	16:55	7	( p_sys -> download . segment - p_sys -> playback . segment < 3 ) && (hls_ReloadPlaylist (s ) != VLC_SUCCESS )
water	15:17	0:0	8	(
water	15:19	0:0	8	p_sys
op	15:24	0:0	8	->
water	15:26	0:0	8	download
op	15:34	0:0	8	.
water	15:35	0:0	8	segment
op	15:43	0:0	8	-
water	15:45	0:0	8	p_sys
op	15:50	0:0	8	->
water	15:52	0:0	8	playback
op	15:60	0:0	8	.
water	15:61	0:0	8	segment
op	15:69	0:0	8	<
water	15:71	0:0	8	3
water	15:73	0:0	8	)
op	15:75	0:0	8	&&
water	16:17	0:0	8	(
call	16:19	16:39	8	hls_ReloadPlaylist
arg	16:38	16:39	9	s
water	16:38	0:0	10	s
op	16:41	0:0	8	!=
water	16:44	0:0	8	VLC_SUCCESS
water	16:55	0:0	8	)
stmts	17:12	29:12	7	
water	17:12	0:0	8	{
water	19:16	0:0	8	p_sys
op	19:21	0:0	8	->
water	19:23	0:0	8	playlist
op	19:31	0:0	8	.
water	19:32	0:0	8	tries
op	19:37	0:0	8	++
water	19:39	0:0	8	;
if	20:16	20:58	8	(p_sys -> playlist . tries == 1)
cond	20:20	20:45	9	p_sys -> playlist . tries == 1
water	20:20	0:0	10	p_sys
op	20:25	0:0	10	->
water	20:27	0:0	10	playlist
op	20:35	0:0	10	.
water	20:36	0:0	10	tries
op	20:42	0:0	10	==
water	20:45	0:0	10	1
stmts	20:48	20:58	9	
water	20:48	0:0	10	wait
op	20:53	0:0	10	=
water	20:55	0:0	10	0
op	20:56	0:0	10	.
water	20:57	0:0	10	5
water	20:58	0:0	10	;
else	21:16	21:61	8
stmts	21:21	21:61	9	
if	21:21	21:61	10	(p_sys -> playlist . tries == 2)
cond	21:25	21:50	11	p_sys -> playlist . tries == 2
water	21:25	0:0	12	p_sys
op	21:30	0:0	12	->
water	21:32	0:0	12	playlist
op	21:40	0:0	12	.
water	21:41	0:0	12	tries
op	21:47	0:0	12	==
water	21:50	0:0	12	2
stmts	21:53	21:61	11	
water	21:53	0:0	12	wait
op	21:58	0:0	12	=
water	21:60	0:0	12	1
water	21:61	0:0	12	;
else	22:16	22:63	8
stmts	22:21	22:63	9	
if	22:21	22:63	10	(p_sys -> playlist . tries >= 3)
cond	22:25	22:50	11	p_sys -> playlist . tries >= 3
water	22:25	0:0	12	p_sys
op	22:30	0:0	12	->
water	22:32	0:0	12	playlist
op	22:40	0:0	12	.
water	22:41	0:0	12	tries
op	22:47	0:0	12	>=
water	22:50	0:0	12	3
stmts	22:53	22:63	11	
water	22:53	0:0	12	wait
op	22:58	0:0	12	=
water	22:60	0:0	12	1
op	22:61	0:0	12	.
water	22:62	0:0	12	5
water	22:63	0:0	12	;
if	24:16	28:16	8	(p_sys -> download . segment - p_sys -> playback . segment < 3)
cond	24:20	24:72	9	p_sys -> download . segment - p_sys -> playback . segment < 3
water	24:20	0:0	10	p_sys
op	24:25	0:0	10	->
water	24:27	0:0	10	download
op	24:35	0:0	10	.
water	24:36	0:0	10	segment
op	24:44	0:0	10	-
water	24:46	0:0	10	p_sys
op	24:51	0:0	10	->
water	24:53	0:0	10	playback
op	24:61	0:0	10	.
water	24:62	0:0	10	segment
op	24:70	0:0	10	<
water	24:72	0:0	10	3
stmts	25:16	28:16	9	
water	25:16	0:0	10	{
water	26:20	0:0	10	p_sys
op	26:25	0:0	10	->
water	26:27	0:0	10	playlist
op	26:35	0:0	10	.
water	26:36	0:0	10	tries
op	26:42	0:0	10	=
water	26:44	0:0	10	0
water	26:45	0:0	10	;
water	27:20	0:0	10	wait
op	27:25	0:0	10	=
water	27:27	0:0	10	0
op	27:28	0:0	10	.
water	27:29	0:0	10	5
water	27:30	0:0	10	;
water	28:16	0:0	10	}
water	29:12	0:0	8	}
else	30:12	34:12	6
stmts	31:12	34:12	7	
water	31:12	0:0	8	{
water	32:16	0:0	8	p_sys
op	32:21	0:0	8	->
water	32:23	0:0	8	playlist
op	32:31	0:0	8	.
water	32:32	0:0	8	tries
op	32:38	0:0	8	=
water	32:40	0:0	8	0
water	32:41	0:0	8	;
water	33:16	0:0	8	wait
op	33:21	0:0	8	=
water	33:23	0:0	8	1
op	33:24	0:0	8	.
water	33:25	0:0	8	0
water	33:26	0:0	8	;
water	34:12	0:0	8	}
call	35:12	35:34	6	vlc_restorecancel
arg	35:30	35:34	7	canc
water	35:30	0:0	8	canc
water	35:35	0:0	6	;
decl	36:12	36:82	6	hls_stream_t	*hls
op	36:30	0:0	6	=
call	36:32	36:81	7	hls_Get
arg	36:40	36:57	8	p_sys->hls_stream
water	36:40	0:0	9	p_sys
op	36:45	0:0	9	->
water	36:47	0:0	9	hls_stream
arg	36:59	36:81	8	p_sys->download.stream
water	36:59	0:0	9	p_sys
op	36:64	0:0	9	->
water	36:66	0:0	9	download
op	36:74	0:0	9	.
water	36:75	0:0	9	stream
call	37:12	37:22	6	assert
arg	37:19	37:22	7	hls
water	37:19	0:0	8	hls
water	37:23	0:0	6	;
water	39:12	0:0	6	p_sys
op	39:17	0:0	6	->
water	39:19	0:0	6	playlist
op	39:27	0:0	6	.
water	39:28	0:0	6	last
op	39:33	0:0	6	=
water	39:35	0:0	6	now
water	39:38	0:0	6	;
water	40:12	0:0	6	p_sys
op	40:17	0:0	6	->
water	40:19	0:0	6	playlist
op	40:27	0:0	6	.
water	40:28	0:0	6	wakeup
op	40:35	0:0	6	=
water	40:37	0:0	6	now
water	40:40	0:0	6	;
if	42:12	43:98	6	(likely (hls -> max_segment_length > 0 ))
cond	42:16	42:52	7	likely (hls -> max_segment_length > 0 )
call	42:16	42:52	8	likely
arg	42:24	42:52	9	hls->max_segment_length>0
water	42:24	0:0	10	hls
op	42:27	0:0	10	->
water	42:29	0:0	10	max_segment_length
op	42:48	0:0	10	>
water	42:50	0:0	10	0
stmts	43:16	43:98	7	
water	43:16	0:0	8	p_sys
op	43:21	0:0	8	->
water	43:23	0:0	8	playlist
op	43:31	0:0	8	.
water	43:32	0:0	8	wakeup
op	43:39	0:0	8	+=
call	43:42	43:97	8	(mtime_t)
arg	43:52	43:97	9	(hls->max_segment_length*wait)*CLOCK_FREQ
water	43:52	0:0	10	(
water	43:53	0:0	10	hls
op	43:56	0:0	10	->
water	43:58	0:0	10	max_segment_length
op	43:77	0:0	10	*
water	43:79	0:0	10	wait
water	43:83	0:0	10	)
op	43:85	0:0	10	*
water	43:87	0:0	10	CLOCK_FREQ
water	43:98	0:0	8	;
else	44:12	45:88	6
stmts	45:16	45:88	7	
water	45:16	0:0	8	p_sys
op	45:21	0:0	8	->
water	45:23	0:0	8	playlist
op	45:31	0:0	8	.
water	45:32	0:0	8	wakeup
op	45:39	0:0	8	+=
call	45:42	45:87	8	(mtime_t)
arg	45:52	45:87	9	(hls->duration*wait)*CLOCK_FREQ
water	45:52	0:0	10	(
water	45:53	0:0	10	hls
op	45:56	0:0	10	->
water	45:58	0:0	10	duration
op	45:67	0:0	10	*
water	45:69	0:0	10	wait
water	45:73	0:0	10	)
op	45:75	0:0	10	*
water	45:77	0:0	10	CLOCK_FREQ
water	45:88	0:0	8	;
water	46:8	0:0	6	}
call	47:8	47:36	4	mwait
arg	47:14	47:36	5	p_sys->playlist.wakeup
water	47:14	0:0	6	p_sys
op	47:19	0:0	6	->
water	47:21	0:0	6	playlist
op	47:29	0:0	6	.
water	47:30	0:0	6	wakeup
water	47:37	0:0	4	;
water	48:4	0:0	4	}
return	49:4	49:15	2	NULL
water	49:11	0:0	3	NULL

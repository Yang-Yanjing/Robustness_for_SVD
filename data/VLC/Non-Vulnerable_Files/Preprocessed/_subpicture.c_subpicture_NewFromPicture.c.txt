func	2:0	40:0	0	subpicture_t *	subpicture_NewFromPicture
params	2:39	0:0	1	
param	2:41	2:60	2	vlc_object_t *	p_obj
param	3:41	3:61	2	picture_t *	p_picture
param	3:63	3:85	2	vlc_fourcc_t	i_chroma
stmnts	0:0	39:19	1	
decl	6:4	6:45	2	video_format_t	fmt_in
op	6:26	0:0	2	=
water	6:28	0:0	2	p_picture
op	6:37	0:0	2	->
water	6:39	0:0	2	format
decl	8:4	8:26	2	video_format_t	fmt_out
water	9:4	0:0	2	fmt_out
op	9:12	0:0	2	=
water	9:14	0:0	2	fmt_in
water	9:20	0:0	2	;
water	10:4	0:0	2	fmt_out
op	10:11	0:0	2	.
water	10:12	0:0	2	i_chroma
op	10:21	0:0	2	=
water	10:23	0:0	2	i_chroma
water	10:31	0:0	2	;
decl	12:4	12:59	2	image_handler_t	*p_image
op	12:29	0:0	2	=
call	12:31	12:58	3	image_HandlerCreate
arg	12:52	12:58	4	p_obj
water	12:52	0:0	5	p_obj
if	13:4	14:19	2	(! p_image)
cond	13:8	13:9	3	! p_image
op	13:8	0:0	4	!
water	13:9	0:0	4	p_image
stmts	14:8	14:19	3	
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
decl	15:4	15:77	2	picture_t	*p_pip
op	15:21	0:0	2	=
call	15:23	15:76	3	image_Convert
arg	15:38	15:45	4	p_image
water	15:38	0:0	5	p_image
arg	15:47	15:56	4	p_picture
water	15:47	0:0	5	p_picture
arg	15:58	15:65	4	&fmt_in
op	15:58	0:0	5	&
water	15:59	0:0	5	fmt_in
arg	15:67	15:76	4	&fmt_out
op	15:67	0:0	5	&
water	15:68	0:0	5	fmt_out
call	16:4	16:33	2	image_HandlerDelete
arg	16:25	16:33	3	p_image
water	16:25	0:0	4	p_image
water	16:34	0:0	2	;
if	17:4	18:19	2	(! p_pip)
cond	17:8	17:9	3	! p_pip
op	17:8	0:0	4	!
water	17:9	0:0	4	p_pip
stmts	18:8	18:19	3	
return	18:8	18:19	4	NULL
water	18:15	0:0	5	NULL
decl	19:4	19:51	2	subpicture_t	*p_subpic
op	19:27	0:0	2	=
call	19:29	19:50	3	subpicture_New
arg	19:45	19:50	4	NULL
water	19:45	0:0	5	NULL
if	20:4	24:4	2	(! p_subpic)
cond	20:8	20:9	3	! p_subpic
op	20:8	0:0	4	!
water	20:9	0:0	4	p_subpic
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
call	22:9	22:32	4	picture_Release
arg	22:26	22:32	5	p_pip
water	22:26	0:0	6	p_pip
water	22:33	0:0	4	;
return	23:9	23:20	4	NULL
water	23:16	0:0	5	NULL
water	24:4	0:0	4	}
water	25:4	0:0	2	p_subpic
op	25:12	0:0	2	->
water	25:14	0:0	2	i_original_picture_width
op	25:40	0:0	2	=
water	25:42	0:0	2	fmt_out
op	25:49	0:0	2	.
water	25:50	0:0	2	i_width
water	25:57	0:0	2	;
water	26:4	0:0	2	p_subpic
op	26:12	0:0	2	->
water	26:14	0:0	2	i_original_picture_height
op	26:40	0:0	2	=
water	26:42	0:0	2	fmt_out
op	26:49	0:0	2	.
water	26:50	0:0	2	i_height
water	26:58	0:0	2	;
water	27:4	0:0	2	fmt_out
op	27:11	0:0	2	.
water	27:12	0:0	2	i_sar_num
op	27:22	0:0	2	=
water	28:4	0:0	2	fmt_out
op	28:11	0:0	2	.
water	28:12	0:0	2	i_sar_den
op	28:22	0:0	2	=
water	28:24	0:0	2	0
water	28:25	0:0	2	;
water	29:4	0:0	2	p_subpic
op	29:12	0:0	2	->
water	29:14	0:0	2	p_region
op	29:23	0:0	2	=
call	29:25	29:57	2	subpicture_region_New
arg	29:48	29:57	3	&fmt_out
op	29:48	0:0	4	&
water	29:49	0:0	4	fmt_out
water	29:58	0:0	2	;
if	30:4	34:4	2	(p_subpic -> p_region)
cond	30:8	30:18	3	p_subpic -> p_region
water	30:8	0:0	4	p_subpic
op	30:16	0:0	4	->
water	30:18	0:0	4	p_region
stmts	31:4	34:4	3	
water	31:4	0:0	4	{
call	32:8	32:55	4	picture_Release
arg	32:25	32:55	5	p_subpic->p_region->p_picture
water	32:25	0:0	6	p_subpic
op	32:33	0:0	6	->
water	32:35	0:0	6	p_region
op	32:43	0:0	6	->
water	32:45	0:0	6	p_picture
water	32:56	0:0	4	;
water	33:8	0:0	4	p_subpic
op	33:16	0:0	4	->
water	33:18	0:0	4	p_region
op	33:26	0:0	4	->
water	33:28	0:0	4	p_picture
op	33:38	0:0	4	=
water	33:40	0:0	4	p_pip
water	33:45	0:0	4	;
water	34:4	0:0	4	}
else	35:4	38:4	2
stmts	36:4	38:4	3	
water	36:4	0:0	4	{
call	37:8	37:31	4	picture_Release
arg	37:25	37:31	5	p_pip
water	37:25	0:0	6	p_pip
water	37:32	0:0	4	;
water	38:4	0:0	4	}
return	39:4	39:19	2	p_subpic
water	39:11	0:0	3	p_subpic

func	2:0	54:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:34	2	vlc_object_t *	this
stmnts	0:0	53:22	1	
decl	4:4	4:39	2	filter_t	*filter
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	filter_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	this
decl	5:4	5:21	2	filter_sys_t	*sys
decl	6:4	6:25	2	struct vf_priv_s	*cfg
decl	7:4	7:57	2	const video_format_t	*fmt_in
op	7:34	0:0	2	=
op	7:36	0:0	2	&
water	7:37	0:0	2	filter
op	7:43	0:0	2	->
water	7:45	0:0	2	fmt_in
op	7:51	0:0	2	.
water	7:52	0:0	2	video
decl	8:4	8:58	2	const video_format_t	*fmt_out
op	8:34	0:0	2	=
op	8:36	0:0	2	&
water	8:37	0:0	2	filter
op	8:43	0:0	2	->
water	8:45	0:0	2	fmt_out
op	8:52	0:0	2	.
water	8:53	0:0	2	video
decl	9:4	9:52	2	const vlc_fourcc_t	fourcc_in
op	9:34	0:0	2	=
water	9:36	0:0	2	fmt_in
op	9:42	0:0	2	->
water	9:44	0:0	2	i_chroma
decl	10:4	10:53	2	const vlc_fourcc_t	fourcc_out
op	10:34	0:0	2	=
water	10:36	0:0	2	fmt_out
op	10:43	0:0	2	->
water	10:45	0:0	2	i_chroma
decl	11:4	11:16	2	int	wmax
op	11:13	0:0	2	=
water	11:15	0:0	2	0
decl	12:4	13:54	2	const vlc_chroma_description_t	*chroma
op	12:43	0:0	2	=
call	13:12	13:53	3	vlc_fourcc_GetChromaDescription
arg	13:44	13:53	4	fourcc_in
water	13:44	0:0	5	fourcc_in
if	14:4	17:4	2	(! chroma || chroma -> plane_count != 3 || chroma -> pixel_size != 1)
cond	14:8	14:69	3	! chroma || chroma -> plane_count != 3 || chroma -> pixel_size != 1
op	14:8	0:0	4	!
water	14:9	0:0	4	chroma
op	14:16	0:0	4	||
water	14:19	0:0	4	chroma
op	14:25	0:0	4	->
water	14:27	0:0	4	plane_count
op	14:39	0:0	4	!=
water	14:42	0:0	4	3
op	14:44	0:0	4	||
water	14:47	0:0	4	chroma
op	14:53	0:0	4	->
water	14:55	0:0	4	pixel_size
op	14:66	0:0	4	!=
water	14:69	0:0	4	1
stmts	14:72	17:4	3	
water	14:72	0:0	4	{
call	15:8	15:71	4	msg_Err
arg	15:16	15:22	5	filter
water	15:16	0:0	6	filter
arg	15:24	15:52	5	"Unsupported chroma (%4.4s)"
water	15:24	0:0	6	"Unsupported chroma (%4.4s)"
arg	15:54	15:71	5	(char*)&fourcc_in
water	15:54	0:0	6	(
water	15:55	0:0	6	char
op	15:59	0:0	6	*
water	15:60	0:0	6	)
op	15:61	0:0	6	&
water	15:62	0:0	6	fourcc_in
water	15:72	0:0	4	;
return	16:8	16:27	4	VLC_EGENERIC
water	16:15	0:0	5	VLC_EGENERIC
water	17:4	0:0	4	}
if	18:4	21:4	2	(fourcc_in != fourcc_out)
cond	18:8	18:21	3	fourcc_in != fourcc_out
water	18:8	0:0	4	fourcc_in
op	18:18	0:0	4	!=
water	18:21	0:0	4	fourcc_out
stmts	18:33	21:4	3	
water	18:33	0:0	4	{
call	19:8	19:62	4	msg_Err
arg	19:16	19:22	5	filter
water	19:16	0:0	6	filter
arg	19:24	19:62	5	"Input and output chromas don't match"
water	19:24	0:0	6	"Input and output chromas don't match"
water	19:63	0:0	4	;
return	20:8	20:27	4	VLC_EGENERIC
water	20:15	0:0	5	VLC_EGENERIC
water	21:4	0:0	4	}
water	23:4	0:0	2	sys
op	23:8	0:0	2	=
call	23:10	23:40	2	calloc
arg	23:17	23:18	3	1
water	23:17	0:0	4	1
arg	23:20	23:40	3	sizeof(filter_sys_t)
op	23:20	0:0	4	sizeof
water	23:26	0:0	4	(
water	23:27	0:0	4	filter_sys_t
water	23:39	0:0	4	)
water	23:41	0:0	2	;
if	24:4	26:4	2	(! sys)
cond	24:8	24:9	3	! sys
op	24:8	0:0	4	!
water	24:9	0:0	4	sys
stmts	24:14	26:4	3	
water	24:14	0:0	4	{
return	25:8	25:25	4	VLC_ENOMEM
water	25:15	0:0	5	VLC_ENOMEM
water	26:4	0:0	4	}
water	27:4	0:0	2	cfg
op	27:8	0:0	2	=
op	27:10	0:0	2	&
water	27:11	0:0	2	sys
op	27:14	0:0	2	->
water	27:16	0:0	2	cfg
water	27:19	0:0	2	;
water	28:4	0:0	2	sys
op	28:7	0:0	2	->
water	28:9	0:0	2	chroma
op	28:16	0:0	2	=
water	28:18	0:0	2	chroma
water	28:24	0:0	2	;
for	29:4	33:4	2	( int i = 0 ;i < 3;++ i)
forinit	0:0	29:18	3	 int i = 0 ;
decl	29:9	29:18	4	int	i
op	29:15	0:0	4	=
water	29:17	0:0	4	0
cond	29:20	29:24	3	i < 3
water	29:20	0:0	4	i
op	29:22	0:0	4	<
water	29:24	0:0	4	3
forexpr	29:27	29:29	3	++ i
op	29:27	0:0	4	++
water	29:29	0:0	4	i
stmts	29:32	33:4	3	
water	29:32	0:0	4	{
water	30:8	0:0	4	sys
op	30:11	0:0	4	->
water	30:13	0:0	4	w
op	30:14	0:0	4	[
water	30:15	0:0	4	i
op	30:16	0:0	4	]
op	30:18	0:0	4	=
water	30:20	0:0	4	fmt_in
op	30:26	0:0	4	->
water	30:28	0:0	4	i_width
op	30:37	0:0	4	*
water	30:39	0:0	4	chroma
op	30:45	0:0	4	->
water	30:47	0:0	4	p
op	30:48	0:0	4	[
water	30:49	0:0	4	i
op	30:50	0:0	4	]
op	30:51	0:0	4	.
water	30:52	0:0	4	w
op	30:53	0:0	4	.
water	30:54	0:0	4	num
op	30:58	0:0	4	/
water	30:60	0:0	4	chroma
op	30:66	0:0	4	->
water	30:68	0:0	4	p
op	30:69	0:0	4	[
water	30:70	0:0	4	i
op	30:71	0:0	4	]
op	30:72	0:0	4	.
water	30:73	0:0	4	w
op	30:74	0:0	4	.
water	30:75	0:0	4	den
water	30:78	0:0	4	;
if	31:8	31:46	4	(sys -> w [ i ] > wmax)
cond	31:12	31:24	5	sys -> w [ i ] > wmax
water	31:12	0:0	6	sys
op	31:15	0:0	6	->
water	31:17	0:0	6	w
op	31:18	0:0	6	[
water	31:19	0:0	6	i
op	31:20	0:0	6	]
op	31:22	0:0	6	>
water	31:24	0:0	6	wmax
stmts	31:30	31:46	5	
water	31:30	0:0	6	wmax
op	31:35	0:0	6	=
water	31:37	0:0	6	sys
op	31:40	0:0	6	->
water	31:42	0:0	6	w
op	31:43	0:0	6	[
water	31:44	0:0	6	i
op	31:45	0:0	6	]
water	31:46	0:0	6	;
water	32:8	0:0	4	sys
op	32:11	0:0	4	->
water	32:13	0:0	4	h
op	32:14	0:0	4	[
water	32:15	0:0	4	i
op	32:16	0:0	4	]
op	32:18	0:0	4	=
water	32:20	0:0	4	fmt_out
op	32:27	0:0	4	->
water	32:29	0:0	4	i_height
op	32:38	0:0	4	*
water	32:40	0:0	4	chroma
op	32:46	0:0	4	->
water	32:48	0:0	4	p
op	32:49	0:0	4	[
water	32:50	0:0	4	i
op	32:51	0:0	4	]
op	32:52	0:0	4	.
water	32:53	0:0	4	h
op	32:54	0:0	4	.
water	32:55	0:0	4	num
op	32:59	0:0	4	/
water	32:61	0:0	4	chroma
op	32:67	0:0	4	->
water	32:69	0:0	4	p
op	32:70	0:0	4	[
water	32:71	0:0	4	i
op	32:72	0:0	4	]
op	32:73	0:0	4	.
water	32:74	0:0	4	h
op	32:75	0:0	4	.
water	32:76	0:0	4	den
water	32:79	0:0	4	;
water	33:4	0:0	4	}
water	34:4	0:0	2	cfg
op	34:7	0:0	2	->
water	34:9	0:0	2	Line
op	34:14	0:0	2	=
call	34:16	34:48	2	malloc
arg	34:23	34:48	3	wmax*sizeof(unsignedint)
water	34:23	0:0	4	wmax
op	34:27	0:0	4	*
op	34:28	0:0	4	sizeof
water	34:34	0:0	4	(
water	34:35	0:0	4	unsigned
water	34:44	0:0	4	int
water	34:47	0:0	4	)
water	34:49	0:0	2	;
if	35:4	38:4	2	(! cfg -> Line)
cond	35:8	35:14	3	! cfg -> Line
op	35:8	0:0	4	!
water	35:9	0:0	4	cfg
op	35:12	0:0	4	->
water	35:14	0:0	4	Line
stmts	35:20	38:4	3	
water	35:20	0:0	4	{
call	36:8	36:16	4	free
arg	36:13	36:16	5	sys
water	36:13	0:0	6	sys
water	36:17	0:0	4	;
return	37:8	37:25	4	VLC_ENOMEM
water	37:15	0:0	5	VLC_ENOMEM
water	38:4	0:0	4	}
call	39:4	40:35	2	config_ChainParse
arg	39:22	39:28	3	filter
water	39:22	0:0	4	filter
arg	39:30	39:43	3	FILTER_PREFIX
water	39:30	0:0	4	FILTER_PREFIX
arg	39:45	39:59	3	filter_options
water	39:45	0:0	4	filter_options
arg	40:22	40:35	3	filter->p_cfg
water	40:22	0:0	4	filter
op	40:28	0:0	4	->
water	40:30	0:0	4	p_cfg
water	40:36	0:0	2	;
call	41:4	41:38	2	vlc_mutex_init
arg	41:20	41:38	3	&sys->coefs_mutex
op	41:20	0:0	4	&
water	41:21	0:0	4	sys
op	41:24	0:0	4	->
water	41:26	0:0	4	coefs_mutex
water	41:39	0:0	2	;
water	42:4	0:0	2	sys
op	42:7	0:0	2	->
water	42:9	0:0	2	b_recalc_coefs
op	42:24	0:0	2	=
water	42:26	0:0	2	true
water	42:30	0:0	2	;
water	43:4	0:0	2	sys
op	43:7	0:0	2	->
water	43:9	0:0	2	luma_spat
op	43:19	0:0	2	=
call	43:21	43:80	2	var_CreateGetFloatCommand
arg	43:47	43:53	3	filter
water	43:47	0:0	4	filter
arg	43:55	43:80	3	FILTER_PREFIX"luma-spat"
water	43:55	0:0	4	FILTER_PREFIX
water	43:69	0:0	4	"luma-spat"
water	43:81	0:0	2	;
water	44:4	0:0	2	sys
op	44:7	0:0	2	->
water	44:9	0:0	2	chroma_spat
op	44:21	0:0	2	=
call	44:23	44:84	2	var_CreateGetFloatCommand
arg	44:49	44:55	3	filter
water	44:49	0:0	4	filter
arg	44:57	44:84	3	FILTER_PREFIX"chroma-spat"
water	44:57	0:0	4	FILTER_PREFIX
water	44:71	0:0	4	"chroma-spat"
water	44:85	0:0	2	;
water	45:4	0:0	2	sys
op	45:7	0:0	2	->
water	45:9	0:0	2	luma_temp
op	45:19	0:0	2	=
call	45:21	45:80	2	var_CreateGetFloatCommand
arg	45:47	45:53	3	filter
water	45:47	0:0	4	filter
arg	45:55	45:80	3	FILTER_PREFIX"luma-temp"
water	45:55	0:0	4	FILTER_PREFIX
water	45:69	0:0	4	"luma-temp"
water	45:81	0:0	2	;
water	46:4	0:0	2	sys
op	46:7	0:0	2	->
water	46:9	0:0	2	chroma_temp
op	46:21	0:0	2	=
call	46:23	46:84	2	var_CreateGetFloatCommand
arg	46:49	46:55	3	filter
water	46:49	0:0	4	filter
arg	46:57	46:84	3	FILTER_PREFIX"chroma-temp"
water	46:57	0:0	4	FILTER_PREFIX
water	46:71	0:0	4	"chroma-temp"
water	46:85	0:0	2	;
water	47:4	0:0	2	filter
op	47:10	0:0	2	->
water	47:12	0:0	2	p_sys
op	47:18	0:0	2	=
water	47:20	0:0	2	sys
water	47:23	0:0	2	;
water	48:4	0:0	2	filter
op	48:10	0:0	2	->
water	48:12	0:0	2	pf_video_filter
op	48:28	0:0	2	=
water	48:30	0:0	2	Filter
water	48:36	0:0	2	;
call	49:4	49:77	2	var_AddCallback
arg	49:21	49:27	3	filter
water	49:21	0:0	4	filter
arg	49:29	49:54	3	FILTER_PREFIX"luma-spat"
water	49:29	0:0	4	FILTER_PREFIX
water	49:43	0:0	4	"luma-spat"
arg	49:56	49:71	3	DenoiseCallback
water	49:56	0:0	4	DenoiseCallback
arg	49:73	49:77	3	sys
water	49:73	0:0	4	sys
water	49:78	0:0	2	;
call	50:4	50:79	2	var_AddCallback
arg	50:21	50:27	3	filter
water	50:21	0:0	4	filter
arg	50:29	50:56	3	FILTER_PREFIX"chroma-spat"
water	50:29	0:0	4	FILTER_PREFIX
water	50:43	0:0	4	"chroma-spat"
arg	50:58	50:73	3	DenoiseCallback
water	50:58	0:0	4	DenoiseCallback
arg	50:75	50:79	3	sys
water	50:75	0:0	4	sys
water	50:80	0:0	2	;
call	51:4	51:77	2	var_AddCallback
arg	51:21	51:27	3	filter
water	51:21	0:0	4	filter
arg	51:29	51:54	3	FILTER_PREFIX"luma-temp"
water	51:29	0:0	4	FILTER_PREFIX
water	51:43	0:0	4	"luma-temp"
arg	51:56	51:71	3	DenoiseCallback
water	51:56	0:0	4	DenoiseCallback
arg	51:73	51:77	3	sys
water	51:73	0:0	4	sys
water	51:78	0:0	2	;
call	52:4	52:79	2	var_AddCallback
arg	52:21	52:27	3	filter
water	52:21	0:0	4	filter
arg	52:29	52:56	3	FILTER_PREFIX"chroma-temp"
water	52:29	0:0	4	FILTER_PREFIX
water	52:43	0:0	4	"chroma-temp"
arg	52:58	52:73	3	DenoiseCallback
water	52:58	0:0	4	DenoiseCallback
arg	52:75	52:79	3	sys
water	52:75	0:0	4	sys
water	52:80	0:0	2	;
return	53:4	53:22	2	VLC_SUCCESS
water	53:11	0:0	3	VLC_SUCCESS

func	2:0	69:0	0	static int	Direct3DCreatePool
params	2:29	0:0	1	
param	2:30	2:48	2	vout_display_t *	vd
param	2:50	2:69	2	video_format_t *	fmt
stmnts	0:0	68:22	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
decl	5:4	5:42	2	LPDIRECT3DDEVICE9	d3ddev
op	5:29	0:0	2	=
water	5:31	0:0	2	sys
op	5:34	0:0	2	->
water	5:36	0:0	2	d3ddev
op	7:4	0:0	2	*
water	7:5	0:0	2	fmt
op	7:9	0:0	2	=
water	7:11	0:0	2	vd
op	7:13	0:0	2	->
water	7:15	0:0	2	source
water	7:21	0:0	2	;
decl	11:4	11:99	2	const d3d_format_t	*d3dfmt
op	11:31	0:0	2	=
call	11:33	11:98	3	Direct3DFindFormat
arg	11:52	11:54	4	vd
water	11:52	0:0	5	vd
arg	11:56	11:69	4	fmt->i_chroma
water	11:56	0:0	5	fmt
op	11:59	0:0	5	->
water	11:61	0:0	5	i_chroma
arg	11:71	11:98	4	sys->d3dpp.BackBufferFormat
water	11:71	0:0	5	sys
op	11:74	0:0	5	->
water	11:76	0:0	5	d3dpp
op	11:81	0:0	5	.
water	11:82	0:0	5	BackBufferFormat
if	12:4	15:4	2	(! d3dfmt)
cond	12:8	12:9	3	! d3dfmt
op	12:8	0:0	4	!
water	12:9	0:0	4	d3dfmt
stmts	12:17	15:4	3	
water	12:17	0:0	4	{
call	13:8	13:60	4	msg_Err
arg	13:16	13:18	5	vd
water	13:16	0:0	6	vd
arg	13:20	13:60	5	"surface pixel format is not supported."
water	13:20	0:0	6	"surface pixel format is not supported."
water	13:61	0:0	4	;
return	14:8	14:27	4	VLC_EGENERIC
water	14:15	0:0	5	VLC_EGENERIC
water	15:4	0:0	4	}
water	16:4	0:0	2	fmt
op	16:7	0:0	2	->
water	16:9	0:0	2	i_chroma
op	16:18	0:0	2	=
water	16:20	0:0	2	d3dfmt
op	16:26	0:0	2	->
water	16:28	0:0	2	fourcc
water	16:34	0:0	2	;
water	17:4	0:0	2	fmt
op	17:7	0:0	2	->
water	17:9	0:0	2	i_rmask
op	17:18	0:0	2	=
water	17:20	0:0	2	d3dfmt
op	17:26	0:0	2	->
water	17:28	0:0	2	rmask
water	17:33	0:0	2	;
water	18:4	0:0	2	fmt
op	18:7	0:0	2	->
water	18:9	0:0	2	i_gmask
op	18:18	0:0	2	=
water	18:20	0:0	2	d3dfmt
op	18:26	0:0	2	->
water	18:28	0:0	2	gmask
water	18:33	0:0	2	;
water	19:4	0:0	2	fmt
op	19:7	0:0	2	->
water	19:9	0:0	2	i_bmask
op	19:18	0:0	2	=
water	19:20	0:0	2	d3dfmt
op	19:26	0:0	2	->
water	19:28	0:0	2	bmask
water	19:33	0:0	2	;
decl	23:4	23:30	2	LPDIRECT3DSURFACE9	surface
decl	24:4	30:67	2	HRESULT	hr
op	24:15	0:0	2	=
call	24:17	30:66	3	IDirect3DDevice9_CreateOffscreenPlainSurface
arg	24:62	24:68	4	d3ddev
water	24:62	0:0	5	d3ddev
arg	25:62	25:74	4	fmt->i_width
water	25:62	0:0	5	fmt
op	25:65	0:0	5	->
water	25:67	0:0	5	i_width
arg	26:62	26:75	4	fmt->i_height
water	26:62	0:0	5	fmt
op	26:65	0:0	5	->
water	26:67	0:0	5	i_height
arg	27:62	27:76	4	d3dfmt->format
water	27:62	0:0	5	d3dfmt
op	27:68	0:0	5	->
water	27:70	0:0	5	format
arg	28:62	28:77	4	D3DPOOL_DEFAULT
water	28:62	0:0	5	D3DPOOL_DEFAULT
arg	29:62	29:70	4	&surface
op	29:62	0:0	5	&
water	29:63	0:0	5	surface
arg	30:62	30:66	4	NULL
water	30:62	0:0	5	NULL
if	31:4	34:4	2	(FAILED (hr ))
cond	31:8	31:17	3	FAILED (hr )
call	31:8	31:17	4	FAILED
arg	31:15	31:17	5	hr
water	31:15	0:0	6	hr
stmts	31:20	34:4	3	
water	31:20	0:0	4	{
call	32:8	32:70	4	msg_Err
arg	32:16	32:18	5	vd
water	32:16	0:0	6	vd
arg	32:20	32:66	5	"Failed to create picture surface. (hr=0x%lx)"
water	32:20	0:0	6	"Failed to create picture surface. (hr=0x%lx)"
arg	32:68	32:70	5	hr
water	32:68	0:0	6	hr
water	32:71	0:0	4	;
return	33:8	33:27	4	VLC_EGENERIC
water	33:15	0:0	5	VLC_EGENERIC
water	34:4	0:0	4	}
call	36:4	36:82	2	IDirect3DDevice9_ColorFill
arg	36:31	36:37	3	d3ddev
water	36:31	0:0	4	d3ddev
arg	36:39	36:46	3	surface
water	36:39	0:0	4	surface
arg	36:48	36:52	3	NULL
water	36:48	0:0	4	NULL
arg	36:54	36:82	3	D3DCOLOR_ARGB(0xFF,0,0,0)
call	36:54	36:81	4	D3DCOLOR_ARGB
arg	36:68	36:72	5	0xFF
water	36:68	0:0	6	0
water	36:69	0:0	6	xFF
arg	36:74	36:75	5	0
water	36:74	0:0	6	0
arg	36:77	36:78	5	0
water	36:77	0:0	6	0
arg	36:80	36:81	5	0
water	36:80	0:0	6	0
water	36:83	0:0	2	;
decl	38:4	38:51	2	picture_sys_t	*picsys
op	38:26	0:0	2	=
call	38:28	38:50	3	malloc
arg	38:35	38:50	4	sizeof(*picsys)
op	38:35	0:0	5	sizeof
water	38:41	0:0	5	(
op	38:42	0:0	5	*
water	38:43	0:0	5	picsys
water	38:49	0:0	5	)
if	39:4	42:4	2	(unlikely (picsys == NULL ))
cond	39:8	39:31	3	unlikely (picsys == NULL )
call	39:8	39:31	4	unlikely
arg	39:17	39:31	5	picsys==NULL
water	39:17	0:0	6	picsys
op	39:24	0:0	6	==
water	39:27	0:0	6	NULL
stmts	39:34	42:4	3	
water	39:34	0:0	4	{
call	40:8	40:41	4	IDirect3DSurface9_Release
arg	40:34	40:41	5	surface
water	40:34	0:0	6	surface
water	40:42	0:0	4	;
return	41:8	41:25	4	VLC_ENOMEM
water	41:15	0:0	5	VLC_ENOMEM
water	42:4	0:0	4	}
water	43:4	0:0	2	picsys
op	43:10	0:0	2	->
water	43:12	0:0	2	surface
op	43:20	0:0	2	=
water	43:22	0:0	2	surface
water	43:29	0:0	2	;
water	44:4	0:0	2	picsys
op	44:10	0:0	2	->
water	44:12	0:0	2	fallback
op	44:21	0:0	2	=
water	44:23	0:0	2	NULL
water	44:27	0:0	2	;
decl	45:4	45:53	2	picture_resource_t	resource
op	45:32	0:0	2	=
water	45:34	0:0	2	{
op	45:36	0:0	2	.
water	45:37	0:0	2	p_sys
op	45:43	0:0	2	=
water	45:45	0:0	2	picsys
water	45:52	0:0	2	}
for	46:4	47:63	2	( int i = 0 ;i < PICTURE_PLANE_MAX;i ++)
forinit	0:0	46:18	3	 int i = 0 ;
decl	46:9	46:18	4	int	i
op	46:15	0:0	4	=
water	46:17	0:0	4	0
cond	46:20	46:24	3	i < PICTURE_PLANE_MAX
water	46:20	0:0	4	i
op	46:22	0:0	4	<
water	46:24	0:0	4	PICTURE_PLANE_MAX
forexpr	46:43	46:44	3	i ++
water	46:43	0:0	4	i
op	46:44	0:0	4	++
stmts	47:8	47:63	3	
water	47:8	0:0	4	resource
op	47:16	0:0	4	.
water	47:17	0:0	4	p
op	47:18	0:0	4	[
water	47:19	0:0	4	i
op	47:20	0:0	4	]
op	47:21	0:0	4	.
water	47:22	0:0	4	i_lines
op	47:30	0:0	4	=
water	47:32	0:0	4	fmt
op	47:35	0:0	4	->
water	47:37	0:0	4	i_height
op	47:46	0:0	4	/
water	47:48	0:0	4	(
water	47:49	0:0	4	i
op	47:51	0:0	4	>
water	47:53	0:0	4	0
water	47:55	0:0	4	?
water	47:57	0:0	4	2
water	47:59	0:0	4	:
water	47:61	0:0	4	1
water	47:62	0:0	4	)
water	47:63	0:0	4	;
decl	48:4	48:64	2	picture_t	*picture
op	48:23	0:0	2	=
call	48:25	48:63	3	picture_NewFromResource
arg	48:49	48:52	4	fmt
water	48:49	0:0	5	fmt
arg	48:54	48:63	4	&resource
op	48:54	0:0	5	&
water	48:55	0:0	5	resource
if	49:4	53:4	2	(! picture)
cond	49:8	49:9	3	! picture
op	49:8	0:0	4	!
water	49:9	0:0	4	picture
stmts	49:18	53:4	3	
water	49:18	0:0	4	{
call	50:8	50:41	4	IDirect3DSurface9_Release
arg	50:34	50:41	5	surface
water	50:34	0:0	6	surface
water	50:42	0:0	4	;
call	51:8	51:19	4	free
arg	51:13	51:19	5	picsys
water	51:13	0:0	6	picsys
water	51:20	0:0	4	;
return	52:8	52:25	4	VLC_ENOMEM
water	52:15	0:0	5	VLC_ENOMEM
water	53:4	0:0	4	}
water	54:4	0:0	2	sys
op	54:7	0:0	2	->
water	54:9	0:0	2	picsys
op	54:16	0:0	2	=
water	54:18	0:0	2	picsys
water	54:24	0:0	2	;
decl	56:4	56:41	2	picture_pool_configuration_t	pool_cfg
call	57:4	57:41	2	memset
arg	57:11	57:20	3	&pool_cfg
op	57:11	0:0	4	&
water	57:12	0:0	4	pool_cfg
arg	57:22	57:23	3	0
water	57:22	0:0	4	0
arg	57:25	57:41	3	sizeof(pool_cfg)
op	57:25	0:0	4	sizeof
water	57:31	0:0	4	(
water	57:32	0:0	4	pool_cfg
water	57:40	0:0	4	)
water	57:42	0:0	2	;
water	58:4	0:0	2	pool_cfg
op	58:12	0:0	2	.
water	58:13	0:0	2	picture_count
op	58:27	0:0	2	=
water	58:29	0:0	2	1
water	58:30	0:0	2	;
water	59:4	0:0	2	pool_cfg
op	59:12	0:0	2	.
water	59:13	0:0	2	picture
op	59:27	0:0	2	=
op	59:29	0:0	2	&
water	59:30	0:0	2	picture
water	59:37	0:0	2	;
water	60:4	0:0	2	pool_cfg
op	60:12	0:0	2	.
water	60:13	0:0	2	lock
op	60:27	0:0	2	=
water	60:29	0:0	2	Direct3DLockSurface
water	60:48	0:0	2	;
water	61:4	0:0	2	pool_cfg
op	61:12	0:0	2	.
water	61:13	0:0	2	unlock
op	61:27	0:0	2	=
water	61:29	0:0	2	Direct3DUnlockSurface
water	61:50	0:0	2	;
water	62:4	0:0	2	sys
op	62:7	0:0	2	->
water	62:9	0:0	2	pool
op	62:14	0:0	2	=
call	62:16	62:50	2	picture_pool_NewExtended
arg	62:41	62:50	3	&pool_cfg
op	62:41	0:0	4	&
water	62:42	0:0	4	pool_cfg
water	62:51	0:0	2	;
if	63:4	67:4	2	(! sys -> pool)
cond	63:8	63:14	3	! sys -> pool
op	63:8	0:0	4	!
water	63:9	0:0	4	sys
op	63:12	0:0	4	->
water	63:14	0:0	4	pool
stmts	63:20	67:4	3	
water	63:20	0:0	4	{
call	64:8	64:31	4	picture_Release
arg	64:24	64:31	5	picture
water	64:24	0:0	6	picture
water	64:32	0:0	4	;
call	65:8	65:41	4	IDirect3DSurface9_Release
arg	65:34	65:41	5	surface
water	65:34	0:0	6	surface
water	65:42	0:0	4	;
return	66:8	66:25	4	VLC_ENOMEM
water	66:15	0:0	5	VLC_ENOMEM
water	67:4	0:0	4	}
return	68:4	68:22	2	VLC_SUCCESS
water	68:11	0:0	3	VLC_SUCCESS

func	2:0	58:0	0	static int	Demux
params	2:16	0:0	1	
param	2:18	2:35	2	demux_t *	p_demux
stmnts	0:0	57:12	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:24	2	block_t	*p_block
if	6:4	10:4	2	(p_sys -> i_data_size != kCHUNK_SIZE_EOF && p_sys -> position . i_bytes >= p_sys -> i_data_size)
cond	6:8	6:83	3	p_sys -> i_data_size != kCHUNK_SIZE_EOF && p_sys -> position . i_bytes >= p_sys -> i_data_size
water	6:8	0:0	4	p_sys
op	6:13	0:0	4	->
water	6:15	0:0	4	i_data_size
op	6:27	0:0	4	!=
water	6:30	0:0	4	kCHUNK_SIZE_EOF
op	6:46	0:0	4	&&
water	6:49	0:0	4	p_sys
op	6:54	0:0	4	->
water	6:56	0:0	4	position
op	6:64	0:0	4	.
water	6:65	0:0	4	i_bytes
op	6:73	0:0	4	>=
water	6:76	0:0	4	p_sys
op	6:81	0:0	4	->
water	6:83	0:0	4	i_data_size
stmts	7:4	10:4	3	
water	7:4	0:0	4	{
return	9:8	9:16	4	0
water	9:15	0:0	5	0
water	10:4	0:0	4	}
decl	11:4	11:44	2	frame_span_t	advance
op	11:25	0:0	2	=
water	11:27	0:0	2	(
water	11:28	0:0	2	frame_span_t
water	11:40	0:0	2	)
water	11:41	0:0	2	{
water	11:42	0:0	2	0
water	11:43	0:0	2	}
decl	13:4	13:69	2	uint64_t	i_req_samples
op	13:27	0:0	2	=
call	13:29	13:68	3	__MAX
arg	13:36	13:64	4	p_sys->fmt.audio.i_rate/20
water	13:36	0:0	5	p_sys
op	13:41	0:0	5	->
water	13:43	0:0	5	fmt
op	13:46	0:0	5	.
water	13:47	0:0	5	audio
op	13:52	0:0	5	.
water	13:53	0:0	5	i_rate
op	13:60	0:0	5	/
water	13:62	0:0	5	20
arg	13:66	13:68	4	1
water	13:66	0:0	5	1
if	14:4	24:4	2	(!NeedsPacketTable (p_sys ))
cond	14:8	14:33	3	!NeedsPacketTable (p_sys )
op	14:8	0:0	4	!
call	14:9	14:33	4	NeedsPacketTable
arg	14:27	14:33	5	p_sys
water	14:27	0:0	6	p_sys
stmts	15:4	24:4	3	
water	15:4	0:0	4	{
decl	16:8	16:123	4	int64_t	i_req_frames
op	16:29	0:0	4	=
water	16:31	0:0	4	(
water	16:33	0:0	4	i_req_samples
op	16:47	0:0	4	+
water	16:49	0:0	4	(
water	16:51	0:0	4	p_sys
op	16:56	0:0	4	->
water	16:58	0:0	4	fmt
op	16:61	0:0	4	.
water	16:62	0:0	4	audio
op	16:67	0:0	4	.
water	16:68	0:0	4	i_frame_length
op	16:83	0:0	4	-
water	16:85	0:0	4	1
water	16:87	0:0	4	)
water	16:88	0:0	4	)
op	16:90	0:0	4	/
water	16:92	0:0	4	p_sys
op	16:97	0:0	4	->
water	16:99	0:0	4	fmt
op	16:102	0:0	4	.
water	16:103	0:0	4	audio
op	16:108	0:0	4	.
water	16:109	0:0	4	i_frame_length
if	17:8	20:8	4	(p_sys -> i_data_size != kCHUNK_SIZE_EOF && ( p_sys -> position . i_bytes + i_req_frames * p_sys -> fmt . audio . i_bytes_per_frame ) > p_sys -> i_data_size)
cond	17:12	17:142	5	p_sys -> i_data_size != kCHUNK_SIZE_EOF && ( p_sys -> position . i_bytes + i_req_frames * p_sys -> fmt . audio . i_bytes_per_frame ) > p_sys -> i_data_size
water	17:12	0:0	6	p_sys
op	17:17	0:0	6	->
water	17:19	0:0	6	i_data_size
op	17:31	0:0	6	!=
water	17:34	0:0	6	kCHUNK_SIZE_EOF
op	17:50	0:0	6	&&
water	17:53	0:0	6	(
water	17:55	0:0	6	p_sys
op	17:60	0:0	6	->
water	17:62	0:0	6	position
op	17:70	0:0	6	.
water	17:71	0:0	6	i_bytes
op	17:79	0:0	6	+
water	17:81	0:0	6	i_req_frames
op	17:94	0:0	6	*
water	17:96	0:0	6	p_sys
op	17:101	0:0	6	->
water	17:103	0:0	6	fmt
op	17:106	0:0	6	.
water	17:107	0:0	6	audio
op	17:112	0:0	6	.
water	17:113	0:0	6	i_bytes_per_frame
water	17:131	0:0	6	)
op	17:133	0:0	6	>
water	17:135	0:0	6	p_sys
op	17:140	0:0	6	->
water	17:142	0:0	6	i_data_size
stmts	18:8	20:8	5	
water	18:8	0:0	6	{
water	19:12	0:0	6	i_req_frames
op	19:25	0:0	6	=
water	19:27	0:0	6	(
water	19:29	0:0	6	p_sys
op	19:34	0:0	6	->
water	19:36	0:0	6	i_data_size
op	19:48	0:0	6	-
water	19:50	0:0	6	p_sys
op	19:55	0:0	6	->
water	19:57	0:0	6	position
op	19:65	0:0	6	.
water	19:66	0:0	6	i_frames
op	19:75	0:0	6	*
water	19:77	0:0	6	p_sys
op	19:82	0:0	6	->
water	19:84	0:0	6	fmt
op	19:87	0:0	6	.
water	19:88	0:0	6	audio
op	19:93	0:0	6	.
water	19:94	0:0	6	i_bytes_per_frame
water	19:112	0:0	6	)
op	19:114	0:0	6	/
water	19:116	0:0	6	p_sys
op	19:121	0:0	6	->
water	19:123	0:0	6	fmt
op	19:126	0:0	6	.
water	19:127	0:0	6	audio
op	19:132	0:0	6	.
water	19:133	0:0	6	i_bytes_per_frame
water	19:150	0:0	6	;
water	20:8	0:0	6	}
water	21:8	0:0	4	advance
op	21:15	0:0	4	.
water	21:16	0:0	4	i_frames
op	21:25	0:0	4	=
water	21:27	0:0	4	i_req_frames
water	21:39	0:0	4	;
water	22:8	0:0	4	advance
op	22:15	0:0	4	.
water	22:16	0:0	4	i_samples
op	22:26	0:0	4	=
water	22:28	0:0	4	i_req_frames
op	22:41	0:0	4	*
water	22:43	0:0	4	p_sys
op	22:48	0:0	4	->
water	22:50	0:0	4	fmt
op	22:53	0:0	4	.
water	22:54	0:0	4	audio
op	22:59	0:0	4	.
water	22:60	0:0	4	i_frame_length
water	22:74	0:0	4	;
water	23:8	0:0	4	advance
op	23:15	0:0	4	.
water	23:16	0:0	4	i_bytes
op	23:24	0:0	4	=
water	23:26	0:0	4	p_sys
op	23:31	0:0	4	->
water	23:33	0:0	4	fmt
op	23:36	0:0	4	.
water	23:37	0:0	4	audio
op	23:42	0:0	4	.
water	23:43	0:0	4	i_bytes_per_frame
op	23:61	0:0	4	*
water	23:63	0:0	4	advance
op	23:70	0:0	4	.
water	23:71	0:0	4	i_frames
water	23:79	0:0	4	;
water	24:4	0:0	4	}
else	25:4	33:4	2
stmts	26:4	33:4	3	
water	26:4	0:0	4	{
do	27:8	31:8	4	(( i_req_samples > advance . i_samples ) && ( p_sys -> position . i_frames + advance . i_frames ) < p_sys -> packet_table . i_num_packets)
cond	32:15	32:126	5	( i_req_samples > advance . i_samples ) && ( p_sys -> position . i_frames + advance . i_frames ) < p_sys -> packet_table . i_num_packets
water	32:15	0:0	6	(
water	32:17	0:0	6	i_req_samples
op	32:31	0:0	6	>
water	32:33	0:0	6	advance
op	32:40	0:0	6	.
water	32:41	0:0	6	i_samples
water	32:51	0:0	6	)
op	32:53	0:0	6	&&
water	32:56	0:0	6	(
water	32:58	0:0	6	p_sys
op	32:63	0:0	6	->
water	32:65	0:0	6	position
op	32:73	0:0	6	.
water	32:74	0:0	6	i_frames
op	32:83	0:0	6	+
water	32:85	0:0	6	advance
op	32:92	0:0	6	.
water	32:93	0:0	6	i_frames
water	32:102	0:0	6	)
op	32:104	0:0	6	<
water	32:106	0:0	6	p_sys
op	32:111	0:0	6	->
water	32:113	0:0	6	packet_table
op	32:125	0:0	6	.
water	32:126	0:0	6	i_num_packets
stmts	28:8	31:8	5	
water	28:8	0:0	6	{
if	29:12	30:21	6	(FrameSpanAddDescription (p_demux ,p_sys -> position . i_desc_bytes + advance . i_desc_bytes ,& advance ))
cond	29:16	29:112	7	FrameSpanAddDescription (p_demux ,p_sys -> position . i_desc_bytes + advance . i_desc_bytes ,& advance )
call	29:16	29:112	8	FrameSpanAddDescription
arg	29:41	29:48	9	p_demux
water	29:41	0:0	10	p_demux
arg	29:50	29:101	9	p_sys->position.i_desc_bytes+advance.i_desc_bytes
water	29:50	0:0	10	p_sys
op	29:55	0:0	10	->
water	29:57	0:0	10	position
op	29:65	0:0	10	.
water	29:66	0:0	10	i_desc_bytes
op	29:79	0:0	10	+
water	29:81	0:0	10	advance
op	29:88	0:0	10	.
water	29:89	0:0	10	i_desc_bytes
arg	29:103	29:112	9	&advance
op	29:103	0:0	10	&
water	29:104	0:0	10	advance
stmts	30:16	30:21	7	
break	30:16	30:21	8	
water	31:8	0:0	6	}
water	32:141	0:0	4	;
water	33:4	0:0	4	}
if	34:4	38:4	2	(! advance . i_frames)
cond	34:8	34:17	3	! advance . i_frames
op	34:8	0:0	4	!
water	34:9	0:0	4	advance
op	34:16	0:0	4	.
water	34:17	0:0	4	i_frames
stmts	35:4	38:4	3	
water	35:4	0:0	4	{
call	36:8	36:51	4	msg_Err
arg	36:17	36:24	5	p_demux
water	36:17	0:0	6	p_demux
arg	36:26	36:51	5	"Unexpected end of file"
water	36:26	0:0	6	"Unexpected end of file"
water	36:52	0:0	4	;
return	37:8	37:17	4	-1
op	37:15	0:0	5	-
water	37:16	0:0	5	1
water	38:4	0:0	4	}
if	39:4	45:4	2	(stream_Seek (p_demux -> s ,p_sys -> i_data_offset + p_sys -> position . i_bytes ))
cond	39:8	39:80	3	stream_Seek (p_demux -> s ,p_sys -> i_data_offset + p_sys -> position . i_bytes )
call	39:8	39:80	4	stream_Seek
arg	39:21	39:31	5	p_demux->s
water	39:21	0:0	6	p_demux
op	39:28	0:0	6	->
water	39:30	0:0	6	s
arg	39:33	39:80	5	p_sys->i_data_offset+p_sys->position.i_bytes
water	39:33	0:0	6	p_sys
op	39:38	0:0	6	->
water	39:40	0:0	6	i_data_offset
op	39:54	0:0	6	+
water	39:56	0:0	6	p_sys
op	39:61	0:0	6	->
water	39:63	0:0	6	position
op	39:71	0:0	6	.
water	39:72	0:0	6	i_bytes
stmts	40:4	45:4	3	
water	40:4	0:0	4	{
if	41:8	42:20	4	(p_sys -> i_data_size == kCHUNK_SIZE_EOF)
cond	41:12	41:34	5	p_sys -> i_data_size == kCHUNK_SIZE_EOF
water	41:12	0:0	6	p_sys
op	41:17	0:0	6	->
water	41:19	0:0	6	i_data_size
op	41:31	0:0	6	==
water	41:34	0:0	6	kCHUNK_SIZE_EOF
stmts	42:12	42:20	5	
return	42:12	42:20	6	0
water	42:19	0:0	7	0
call	43:8	43:45	4	msg_Err
arg	43:17	43:24	5	p_demux
water	43:17	0:0	6	p_demux
arg	43:26	43:45	5	"cannot seek data"
water	43:26	0:0	6	"cannot seek data"
water	43:46	0:0	4	;
return	44:8	44:17	4	-1
op	44:15	0:0	5	-
water	44:16	0:0	5	1
water	45:4	0:0	4	}
if	46:4	50:4	2	(( p_block =stream_Block (p_demux -> s ,( int ) advance . i_bytes ) ) == NULL)
cond	46:7	46:72	3	( p_block =stream_Block (p_demux -> s ,( int ) advance . i_bytes ) ) == NULL
water	46:7	0:0	4	(
water	46:9	0:0	4	p_block
op	46:17	0:0	4	=
call	46:19	46:66	4	stream_Block
arg	46:33	46:43	5	p_demux->s
water	46:33	0:0	6	p_demux
op	46:40	0:0	6	->
water	46:42	0:0	6	s
arg	46:45	46:66	5	(int)advance.i_bytes
water	46:45	0:0	6	(
water	46:46	0:0	6	int
water	46:49	0:0	6	)
water	46:50	0:0	6	advance
op	46:57	0:0	6	.
water	46:58	0:0	6	i_bytes
water	46:67	0:0	4	)
op	46:69	0:0	4	==
water	46:72	0:0	4	NULL
stmts	47:4	50:4	3	
water	47:4	0:0	4	{
call	48:8	48:45	4	msg_Err
arg	48:17	48:24	5	p_demux
water	48:17	0:0	6	p_demux
arg	48:26	48:45	5	"cannot read data"
water	48:26	0:0	6	"cannot read data"
water	48:46	0:0	4	;
return	49:8	49:17	4	-1
op	49:15	0:0	5	-
water	49:16	0:0	5	1
water	50:4	0:0	4	}
water	51:4	0:0	2	p_block
op	51:11	0:0	2	->
water	51:13	0:0	2	i_dts
op	51:19	0:0	2	=
water	52:4	0:0	2	p_block
op	52:11	0:0	2	->
water	52:13	0:0	2	i_pts
op	52:19	0:0	2	=
water	52:21	0:0	2	VLC_TS_0
op	52:30	0:0	2	+
call	52:32	52:92	2	FrameSpanGetTime
arg	52:50	52:66	3	&p_sys->position
op	52:50	0:0	4	&
water	52:51	0:0	4	p_sys
op	52:56	0:0	4	->
water	52:58	0:0	4	position
arg	52:68	52:92	3	p_sys->fmt.audio.i_rate
water	52:68	0:0	4	p_sys
op	52:73	0:0	4	->
water	52:75	0:0	4	fmt
op	52:78	0:0	4	.
water	52:79	0:0	4	audio
op	52:84	0:0	4	.
water	52:85	0:0	4	i_rate
water	52:93	0:0	2	;
call	53:4	53:49	2	FrameSpanAddSpan
arg	53:22	53:38	3	&p_sys->position
op	53:22	0:0	4	&
water	53:23	0:0	4	p_sys
op	53:28	0:0	4	->
water	53:30	0:0	4	position
arg	53:40	53:49	3	&advance
op	53:40	0:0	4	&
water	53:41	0:0	4	advance
water	53:50	0:0	2	;
call	55:4	55:65	2	es_out_Control
arg	55:20	55:32	3	p_demux->out
water	55:20	0:0	4	p_demux
op	55:27	0:0	4	->
water	55:29	0:0	4	out
arg	55:34	55:48	3	ES_OUT_SET_PCR
water	55:34	0:0	4	ES_OUT_SET_PCR
arg	55:50	55:65	3	p_block->i_pts
water	55:50	0:0	4	p_block
op	55:57	0:0	4	->
water	55:59	0:0	4	i_pts
water	55:66	0:0	2	;
call	56:4	56:50	2	es_out_Send
arg	56:17	56:29	3	p_demux->out
water	56:17	0:0	4	p_demux
op	56:24	0:0	4	->
water	56:26	0:0	4	out
arg	56:31	56:40	3	p_sys->es
water	56:31	0:0	4	p_sys
op	56:36	0:0	4	->
water	56:38	0:0	4	es
arg	56:42	56:50	3	p_block
water	56:42	0:0	4	p_block
water	56:51	0:0	2	;
return	57:4	57:12	2	1
water	57:11	0:0	3	1

func	2:0	38:0	0	vout_window_t *	vout_NewDisplayWindow
params	2:37	0:0	1	
param	2:38	2:57	2	vout_thread_t *	vout
param	2:59	2:77	2	vout_display_t *	vd
param	3:38	3:66	2	const vout_window_cfg_t *	cfg
stmnts	5:4	37:17	1	
call	5:4	5:17	2	VLC_UNUSED
arg	5:15	5:17	3	vd
water	5:15	0:0	4	vd
water	5:18	0:0	2	;
decl	6:4	6:41	2	vout_window_cfg_t	cfg_override
op	6:35	0:0	2	=
op	6:37	0:0	2	*
water	6:38	0:0	2	cfg
if	7:4	8:41	2	(!var_InheritBool (vout ,"embedded-video" ))
cond	7:8	7:48	3	!var_InheritBool (vout ,"embedded-video" )
op	7:8	0:0	4	!
call	7:9	7:48	4	var_InheritBool
arg	7:26	7:30	5	vout
water	7:26	0:0	6	vout
arg	7:32	7:48	5	"embedded-video"
water	7:32	0:0	6	"embedded-video"
stmts	8:8	8:41	3	
water	8:8	0:0	4	cfg_override
op	8:20	0:0	4	.
water	8:21	0:0	4	is_standalone
op	8:35	0:0	4	=
water	8:37	0:0	4	true
water	8:41	0:0	4	;
if	9:4	27:4	2	(vout -> p -> window . is_unused && vout -> p -> window . object)
cond	9:8	9:53	3	vout -> p -> window . is_unused && vout -> p -> window . object
water	9:8	0:0	4	vout
op	9:12	0:0	4	->
water	9:14	0:0	4	p
op	9:15	0:0	4	->
water	9:17	0:0	4	window
op	9:23	0:0	4	.
water	9:24	0:0	4	is_unused
op	9:34	0:0	4	&&
water	9:37	0:0	4	vout
op	9:41	0:0	4	->
water	9:43	0:0	4	p
op	9:44	0:0	4	->
water	9:46	0:0	4	window
op	9:52	0:0	4	.
water	9:53	0:0	4	object
stmts	9:61	27:4	3	
water	9:61	0:0	4	{
call	10:8	10:38	4	assert
arg	10:15	10:38	5	!vout->p->splitter_name
op	10:15	0:0	6	!
water	10:16	0:0	6	vout
op	10:20	0:0	6	->
water	10:22	0:0	6	p
op	10:23	0:0	6	->
water	10:25	0:0	6	splitter_name
water	10:39	0:0	4	;
if	11:8	23:8	4	(! cfg_override . is_standalone == ! vout -> p -> window . cfg . is_standalone && cfg_override . type == vout -> p -> window . cfg . type)
cond	11:12	12:63	5	! cfg_override . is_standalone == ! vout -> p -> window . cfg . is_standalone && cfg_override . type == vout -> p -> window . cfg . type
op	11:12	0:0	6	!
water	11:13	0:0	6	cfg_override
op	11:25	0:0	6	.
water	11:26	0:0	6	is_standalone
op	11:40	0:0	6	==
op	11:43	0:0	6	!
water	11:44	0:0	6	vout
op	11:48	0:0	6	->
water	11:50	0:0	6	p
op	11:51	0:0	6	->
water	11:53	0:0	6	window
op	11:59	0:0	6	.
water	11:60	0:0	6	cfg
op	11:63	0:0	6	.
water	11:64	0:0	6	is_standalone
op	11:78	0:0	6	&&
water	12:12	0:0	6	cfg_override
op	12:24	0:0	6	.
water	12:25	0:0	6	type
op	12:40	0:0	6	==
water	12:43	0:0	6	vout
op	12:47	0:0	6	->
water	12:49	0:0	6	p
op	12:50	0:0	6	->
water	12:52	0:0	6	window
op	12:58	0:0	6	.
water	12:59	0:0	6	cfg
op	12:62	0:0	6	.
water	12:63	0:0	6	type
stmts	12:69	23:8	5	
water	12:69	0:0	6	{
call	14:12	14:56	6	msg_Dbg
arg	14:20	14:24	7	vout
water	14:20	0:0	8	vout
arg	14:26	14:56	7	"Reusing previous vout window"
water	14:26	0:0	8	"Reusing previous vout window"
water	14:57	0:0	6	;
decl	15:12	15:58	6	vout_window_t	*window
op	15:34	0:0	6	=
water	15:36	0:0	6	vout
op	15:40	0:0	6	->
water	15:42	0:0	6	p
op	15:43	0:0	6	->
water	15:45	0:0	6	window
op	15:51	0:0	6	.
water	15:52	0:0	6	object
if	16:12	19:76	6	(cfg_override . width != vout -> p -> window . cfg . width || cfg_override . height != vout -> p -> window . cfg . height)
cond	16:16	17:59	7	cfg_override . width != vout -> p -> window . cfg . width || cfg_override . height != vout -> p -> window . cfg . height
water	16:16	0:0	8	cfg_override
op	16:28	0:0	8	.
water	16:29	0:0	8	width
op	16:36	0:0	8	!=
water	16:39	0:0	8	vout
op	16:43	0:0	8	->
water	16:45	0:0	8	p
op	16:46	0:0	8	->
water	16:48	0:0	8	window
op	16:54	0:0	8	.
water	16:55	0:0	8	cfg
op	16:58	0:0	8	.
water	16:59	0:0	8	width
op	16:65	0:0	8	||
water	17:16	0:0	8	cfg_override
op	17:28	0:0	8	.
water	17:29	0:0	8	height
op	17:36	0:0	8	!=
water	17:39	0:0	8	vout
op	17:43	0:0	8	->
water	17:45	0:0	8	p
op	17:46	0:0	8	->
water	17:48	0:0	8	window
op	17:54	0:0	8	.
water	17:55	0:0	8	cfg
op	17:58	0:0	8	.
water	17:59	0:0	8	height
stmts	18:16	19:76	7	
call	18:16	19:75	8	vout_window_SetSize
arg	18:36	18:42	9	window
water	18:36	0:0	10	window
arg	19:36	19:54	9	cfg_override.width
water	19:36	0:0	10	cfg_override
op	19:48	0:0	10	.
water	19:49	0:0	10	width
arg	19:56	19:75	9	cfg_override.height
water	19:56	0:0	10	cfg_override
op	19:68	0:0	10	.
water	19:69	0:0	10	height
water	19:76	0:0	8	;
water	20:12	0:0	6	vout
op	20:16	0:0	6	->
water	20:18	0:0	6	p
op	20:19	0:0	6	->
water	20:21	0:0	6	window
op	20:27	0:0	6	.
water	20:28	0:0	6	is_unused
op	20:38	0:0	6	=
water	20:40	0:0	6	false
water	20:45	0:0	6	;
water	21:12	0:0	6	vout
op	21:16	0:0	6	->
water	21:18	0:0	6	p
op	21:19	0:0	6	->
water	21:21	0:0	6	window
op	21:27	0:0	6	.
water	21:28	0:0	6	cfg
op	21:38	0:0	6	=
water	21:40	0:0	6	cfg_override
water	21:52	0:0	6	;
return	22:12	22:25	6	window
water	22:19	0:0	7	window
water	23:8	0:0	6	}
call	24:8	24:49	4	vout_window_Delete
arg	24:27	24:49	5	vout->p->window.object
water	24:27	0:0	6	vout
op	24:31	0:0	6	->
water	24:33	0:0	6	p
op	24:34	0:0	6	->
water	24:36	0:0	6	window
op	24:42	0:0	6	.
water	24:43	0:0	6	object
water	24:50	0:0	4	;
water	25:8	0:0	4	vout
op	25:12	0:0	4	->
water	25:14	0:0	4	p
op	25:15	0:0	4	->
water	25:17	0:0	4	window
op	25:23	0:0	4	.
water	25:24	0:0	4	is_unused
op	25:34	0:0	4	=
water	25:36	0:0	4	true
water	25:40	0:0	4	;
water	26:8	0:0	4	vout
op	26:12	0:0	4	->
water	26:14	0:0	4	p
op	26:15	0:0	4	->
water	26:17	0:0	4	window
op	26:23	0:0	4	.
water	26:24	0:0	4	object
op	26:34	0:0	4	=
water	26:36	0:0	4	NULL
water	26:40	0:0	4	;
water	27:4	0:0	4	}
decl	28:4	29:58	2	vout_window_t	*window
op	28:26	0:0	2	=
call	28:28	29:57	3	vout_window_New
arg	28:44	28:60	4	VLC_OBJECT(vout)
call	28:44	28:59	5	VLC_OBJECT
arg	28:55	28:59	6	vout
water	28:55	0:0	7	vout
arg	28:62	28:71	4	"$window"
water	28:62	0:0	5	"$window"
arg	29:44	29:57	4	&cfg_override
op	29:44	0:0	5	&
water	29:45	0:0	5	cfg_override
if	30:4	31:19	2	(! window)
cond	30:8	30:9	3	! window
op	30:8	0:0	4	!
water	30:9	0:0	4	window
stmts	31:8	31:19	3	
return	31:8	31:19	4	NULL
water	31:15	0:0	5	NULL
if	32:4	36:4	2	(! vout -> p -> splitter_name)
cond	32:8	32:18	3	! vout -> p -> splitter_name
op	32:8	0:0	4	!
water	32:9	0:0	4	vout
op	32:13	0:0	4	->
water	32:15	0:0	4	p
op	32:16	0:0	4	->
water	32:18	0:0	4	splitter_name
stmts	32:33	36:4	3	
water	32:33	0:0	4	{
water	33:8	0:0	4	vout
op	33:12	0:0	4	->
water	33:14	0:0	4	p
op	33:15	0:0	4	->
water	33:17	0:0	4	window
op	33:23	0:0	4	.
water	33:24	0:0	4	is_unused
op	33:34	0:0	4	=
water	33:36	0:0	4	false
water	33:41	0:0	4	;
water	34:8	0:0	4	vout
op	34:12	0:0	4	->
water	34:14	0:0	4	p
op	34:15	0:0	4	->
water	34:17	0:0	4	window
op	34:23	0:0	4	.
water	34:24	0:0	4	cfg
op	34:34	0:0	4	=
water	34:36	0:0	4	cfg_override
water	34:48	0:0	4	;
water	35:8	0:0	4	vout
op	35:12	0:0	4	->
water	35:14	0:0	4	p
op	35:15	0:0	4	->
water	35:17	0:0	4	window
op	35:23	0:0	4	.
water	35:24	0:0	4	object
op	35:34	0:0	4	=
water	35:36	0:0	4	window
water	35:42	0:0	4	;
water	36:4	0:0	4	}
return	37:4	37:17	2	window
water	37:11	0:0	3	window

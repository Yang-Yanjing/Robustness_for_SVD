func	2:0	52:0	0	static inline int	XDeint8x8DetectMMXEXT
params	2:39	0:0	1	
param	2:41	2:53	2	uint8_t *	src
param	2:55	2:65	2	int	i_src
stmnts	0:0	51:13	1	
decl	4:4	4:12	2	int	y
water	4:9	0:0	2	,
decl	4:4	4:12	2	int	x
decl	5:4	5:18	2	int32_t	ff
water	5:14	0:0	2	,
decl	5:4	5:18	2	int32_t	fr
decl	6:4	6:10	2	int	fc
water	8:4	0:0	2	fc
op	8:7	0:0	2	=
water	8:9	0:0	2	0
water	8:10	0:0	2	;
call	9:4	9:23	2	pxor_r2r
arg	9:14	9:17	3	mm7
water	9:14	0:0	4	mm7
arg	9:19	9:23	3	mm7
water	9:19	0:0	4	mm7
water	9:24	0:0	2	;
for	10:4	50:4	2	(y = 0 ;y < 9;y += 2)
forinit	10:9	10:14	3	y = 0 ;
water	10:9	0:0	4	y
op	10:11	0:0	4	=
water	10:13	0:0	4	0
water	10:14	0:0	4	;
cond	10:16	10:20	3	y < 9
water	10:16	0:0	4	y
op	10:18	0:0	4	<
water	10:20	0:0	4	9
forexpr	10:23	10:28	3	y += 2
water	10:23	0:0	4	y
op	10:25	0:0	4	+=
water	10:28	0:0	4	2
stmts	11:4	50:4	3	
water	11:4	0:0	4	{
water	12:8	0:0	4	ff
op	12:11	0:0	4	=
water	12:13	0:0	4	fr
op	12:16	0:0	4	=
water	12:18	0:0	4	0
water	12:19	0:0	4	;
call	13:8	13:27	4	pxor_r2r
arg	13:18	13:21	5	mm5
water	13:18	0:0	6	mm5
arg	13:23	13:27	5	mm5
water	13:23	0:0	6	mm5
water	13:28	0:0	4	;
call	14:8	14:27	4	pxor_r2r
arg	14:18	14:21	5	mm6
water	14:18	0:0	6	mm6
arg	14:23	14:27	5	mm6
water	14:23	0:0	6	mm6
water	14:28	0:0	4	;
for	15:8	38:8	4	(x = 0 ;x < 8;x += 4)
forinit	15:13	15:18	5	x = 0 ;
water	15:13	0:0	6	x
op	15:15	0:0	6	=
water	15:17	0:0	6	0
water	15:18	0:0	6	;
cond	15:20	15:24	5	x < 8
water	15:20	0:0	6	x
op	15:22	0:0	6	<
water	15:24	0:0	6	8
forexpr	15:27	15:30	5	x += 4
water	15:27	0:0	6	x
op	15:28	0:0	6	+=
water	15:30	0:0	6	4
stmts	16:8	38:8	5	
water	16:8	0:0	6	{
call	17:12	17:42	6	movd_m2r
arg	17:22	17:36	7	src[x]
water	17:22	0:0	8	src
op	17:25	0:0	8	[
water	17:34	0:0	8	x
op	17:35	0:0	8	]
arg	17:38	17:42	7	mm0
water	17:38	0:0	8	mm0
water	17:43	0:0	6	;
call	18:12	18:42	6	movd_m2r
arg	18:22	18:36	7	src[1*i_src+x]
water	18:22	0:0	8	src
op	18:25	0:0	8	[
water	18:26	0:0	8	1
op	18:27	0:0	8	*
water	18:28	0:0	8	i_src
op	18:33	0:0	8	+
water	18:34	0:0	8	x
op	18:35	0:0	8	]
arg	18:38	18:42	7	mm1
water	18:38	0:0	8	mm1
water	18:43	0:0	6	;
call	19:12	19:42	6	movd_m2r
arg	19:22	19:36	7	src[2*i_src+x]
water	19:22	0:0	8	src
op	19:25	0:0	8	[
water	19:26	0:0	8	2
op	19:27	0:0	8	*
water	19:28	0:0	8	i_src
op	19:33	0:0	8	+
water	19:34	0:0	8	x
op	19:35	0:0	8	]
arg	19:38	19:42	7	mm2
water	19:38	0:0	8	mm2
water	19:43	0:0	6	;
call	20:12	20:42	6	movd_m2r
arg	20:22	20:36	7	src[3*i_src+x]
water	20:22	0:0	8	src
op	20:25	0:0	8	[
water	20:26	0:0	8	3
op	20:27	0:0	8	*
water	20:28	0:0	8	i_src
op	20:33	0:0	8	+
water	20:34	0:0	8	x
op	20:35	0:0	8	]
arg	20:38	20:42	7	mm3
water	20:38	0:0	8	mm3
water	20:43	0:0	6	;
call	21:12	21:36	6	punpcklbw_r2r
arg	21:27	21:30	7	mm7
water	21:27	0:0	8	mm7
arg	21:32	21:36	7	mm0
water	21:32	0:0	8	mm0
water	21:37	0:0	6	;
call	22:12	22:36	6	punpcklbw_r2r
arg	22:27	22:30	7	mm7
water	22:27	0:0	8	mm7
arg	22:32	22:36	7	mm1
water	22:32	0:0	8	mm1
water	22:37	0:0	6	;
call	23:12	23:36	6	punpcklbw_r2r
arg	23:27	23:30	7	mm7
water	23:27	0:0	8	mm7
arg	23:32	23:36	7	mm2
water	23:32	0:0	8	mm2
water	23:37	0:0	6	;
call	24:12	24:36	6	punpcklbw_r2r
arg	24:27	24:30	7	mm7
water	24:27	0:0	8	mm7
arg	24:32	24:36	7	mm3
water	24:32	0:0	8	mm3
water	24:37	0:0	6	;
call	25:12	25:31	6	movq_r2r
arg	25:22	25:25	7	mm0
water	25:22	0:0	8	mm0
arg	25:27	25:31	7	mm4
water	25:27	0:0	8	mm4
water	25:32	0:0	6	;
call	26:12	26:32	6	psubw_r2r
arg	26:23	26:26	7	mm1
water	26:23	0:0	8	mm1
arg	26:28	26:32	7	mm0
water	26:28	0:0	8	mm0
water	26:33	0:0	6	;
call	27:12	27:32	6	psubw_r2r
arg	27:23	27:26	7	mm2
water	27:23	0:0	8	mm2
arg	27:28	27:32	7	mm4
water	27:28	0:0	8	mm4
water	27:33	0:0	6	;
call	28:12	28:32	6	psubw_r2r
arg	28:23	28:26	7	mm1
water	28:23	0:0	8	mm1
arg	28:28	28:32	7	mm2
water	28:28	0:0	8	mm2
water	28:33	0:0	6	;
call	29:12	29:32	6	psubw_r2r
arg	29:23	29:26	7	mm1
water	29:23	0:0	8	mm1
arg	29:28	29:32	7	mm3
water	29:28	0:0	8	mm3
water	29:33	0:0	6	;
call	30:12	30:34	6	pmaddwd_r2r
arg	30:25	30:28	7	mm0
water	30:25	0:0	8	mm0
arg	30:30	30:34	7	mm0
water	30:30	0:0	8	mm0
water	30:35	0:0	6	;
call	31:12	31:34	6	pmaddwd_r2r
arg	31:25	31:28	7	mm4
water	31:25	0:0	8	mm4
arg	31:30	31:34	7	mm4
water	31:30	0:0	8	mm4
water	31:35	0:0	6	;
call	32:12	32:34	6	pmaddwd_r2r
arg	32:25	32:28	7	mm2
water	32:25	0:0	8	mm2
arg	32:30	32:34	7	mm2
water	32:30	0:0	8	mm2
water	32:35	0:0	6	;
call	33:12	33:34	6	pmaddwd_r2r
arg	33:25	33:28	7	mm3
water	33:25	0:0	8	mm3
arg	33:30	33:34	7	mm3
water	33:30	0:0	8	mm3
water	33:35	0:0	6	;
call	34:12	34:32	6	paddd_r2r
arg	34:23	34:26	7	mm0
water	34:23	0:0	8	mm0
arg	34:28	34:32	7	mm2
water	34:28	0:0	8	mm2
water	34:33	0:0	6	;
call	35:12	35:32	6	paddd_r2r
arg	35:23	35:26	7	mm4
water	35:23	0:0	8	mm4
arg	35:28	35:32	7	mm3
water	35:28	0:0	8	mm3
water	35:33	0:0	6	;
call	36:12	36:32	6	paddd_r2r
arg	36:23	36:26	7	mm2
water	36:23	0:0	8	mm2
arg	36:28	36:32	7	mm5
water	36:28	0:0	8	mm5
water	36:33	0:0	6	;
call	37:12	37:32	6	paddd_r2r
arg	37:23	37:26	7	mm3
water	37:23	0:0	8	mm3
arg	37:28	37:32	7	mm6
water	37:28	0:0	8	mm6
water	37:33	0:0	6	;
water	38:8	0:0	6	}
call	39:8	39:27	4	movq_r2r
arg	39:18	39:21	5	mm5
water	39:18	0:0	6	mm5
arg	39:23	39:27	5	mm0
water	39:23	0:0	6	mm0
water	39:28	0:0	4	;
call	40:8	40:27	4	psrlq_i2r
arg	40:19	40:21	5	32
water	40:19	0:0	6	32
arg	40:23	40:27	5	mm0
water	40:23	0:0	6	mm0
water	40:28	0:0	4	;
call	41:8	41:28	4	paddd_r2r
arg	41:19	41:22	5	mm0
water	41:19	0:0	6	mm0
arg	41:24	41:28	5	mm5
water	41:24	0:0	6	mm5
water	41:29	0:0	4	;
call	42:8	42:26	4	movd_r2m
arg	42:18	42:21	5	mm5
water	42:18	0:0	6	mm5
arg	42:23	42:26	5	fr
water	42:23	0:0	6	fr
water	42:27	0:0	4	;
call	43:8	43:27	4	movq_r2r
arg	43:18	43:21	5	mm6
water	43:18	0:0	6	mm6
arg	43:23	43:27	5	mm0
water	43:23	0:0	6	mm0
water	43:28	0:0	4	;
call	44:8	44:27	4	psrlq_i2r
arg	44:19	44:21	5	32
water	44:19	0:0	6	32
arg	44:23	44:27	5	mm0
water	44:23	0:0	6	mm0
water	44:28	0:0	4	;
call	45:8	45:28	4	paddd_r2r
arg	45:19	45:22	5	mm0
water	45:19	0:0	6	mm0
arg	45:24	45:28	5	mm6
water	45:24	0:0	6	mm6
water	45:29	0:0	4	;
call	46:8	46:26	4	movd_r2m
arg	46:18	46:21	5	mm6
water	46:18	0:0	6	mm6
arg	46:23	46:26	5	ff
water	46:23	0:0	6	ff
water	46:27	0:0	4	;
if	47:8	48:16	4	(ff < 6 * fr / 8 && fr > 32)
cond	47:12	47:32	5	ff < 6 * fr / 8 && fr > 32
water	47:12	0:0	6	ff
op	47:15	0:0	6	<
water	47:17	0:0	6	6
op	47:18	0:0	6	*
water	47:19	0:0	6	fr
op	47:21	0:0	6	/
water	47:22	0:0	6	8
op	47:24	0:0	6	&&
water	47:27	0:0	6	fr
op	47:30	0:0	6	>
water	47:32	0:0	6	32
stmts	48:12	48:16	5	
water	48:12	0:0	6	fc
op	48:14	0:0	6	++
water	48:16	0:0	6	;
water	49:8	0:0	4	src
op	49:12	0:0	4	+=
water	49:15	0:0	4	2
op	49:16	0:0	4	*
water	49:17	0:0	4	i_src
water	49:22	0:0	4	;
water	50:4	0:0	4	}
return	51:4	51:13	2	fc
water	51:11	0:0	3	fc

func	2:0	76:0	0	int	CalculateInterlaceScore
params	2:27	0:0	1	
param	2:29	2:55	2	const picture_t *	p_pic_top
param	3:29	3:56	2	const picture_t *	p_pic_bot
stmnts	13:4	75:18	1	
call	13:4	13:30	2	assert
arg	13:12	13:30	3	p_pic_top!=NULL
water	13:12	0:0	4	p_pic_top
op	13:22	0:0	4	!=
water	13:25	0:0	4	NULL
water	13:31	0:0	2	;
call	14:4	14:30	2	assert
arg	14:12	14:30	3	p_pic_bot!=NULL
water	14:12	0:0	4	p_pic_bot
op	14:22	0:0	4	!=
water	14:25	0:0	4	NULL
water	14:31	0:0	2	;
if	15:4	16:17	2	(p_pic_top -> i_planes != p_pic_bot -> i_planes)
cond	15:8	15:42	3	p_pic_top -> i_planes != p_pic_bot -> i_planes
water	15:8	0:0	4	p_pic_top
op	15:17	0:0	4	->
water	15:19	0:0	4	i_planes
op	15:28	0:0	4	!=
water	15:31	0:0	4	p_pic_bot
op	15:40	0:0	4	->
water	15:42	0:0	4	i_planes
stmts	16:8	16:17	3	
return	16:8	16:17	4	-1
op	16:15	0:0	5	-
water	16:16	0:0	5	1
if	18:4	19:65	2	(vlc_CPU_MMXEXT ( ))
cond	18:8	18:23	3	vlc_CPU_MMXEXT ( )
call	18:8	18:23	4	vlc_CPU_MMXEXT
stmts	19:8	19:65	3	
return	19:8	19:65	4	CalculateInterlaceScoreMMX(p_pic_top,p_pic_bot)
call	19:15	19:64	5	CalculateInterlaceScoreMMX
arg	19:43	19:52	6	p_pic_top
water	19:43	0:0	7	p_pic_top
arg	19:54	19:64	6	p_pic_bot
water	19:54	0:0	7	p_pic_bot
decl	21:4	21:23	2	int32_t	i_score
op	21:20	0:0	2	=
water	21:22	0:0	2	0
for	22:4	74:4	2	( int i_plane = 0 ;i_plane < p_pic_top -> i_planes;++ i_plane)
forinit	0:0	22:25	3	 int i_plane = 0 ;
decl	22:9	22:25	4	int	i_plane
op	22:21	0:0	4	=
water	22:23	0:0	4	0
cond	22:27	22:48	3	i_plane < p_pic_top -> i_planes
water	22:27	0:0	4	i_plane
op	22:35	0:0	4	<
water	22:37	0:0	4	p_pic_top
op	22:46	0:0	4	->
water	22:48	0:0	4	i_planes
forexpr	22:59	22:61	3	++ i_plane
op	22:59	0:0	4	++
water	22:61	0:0	4	i_plane
stmts	23:4	74:4	3	
water	23:4	0:0	4	{
if	25:8	27:21	4	(p_pic_top -> p [ i_plane ] . i_visible_lines != p_pic_bot -> p [ i_plane ] . i_visible_lines)
cond	25:12	26:34	5	p_pic_top -> p [ i_plane ] . i_visible_lines != p_pic_bot -> p [ i_plane ] . i_visible_lines
water	25:12	0:0	6	p_pic_top
op	25:21	0:0	6	->
water	25:23	0:0	6	p
op	25:24	0:0	6	[
water	25:25	0:0	6	i_plane
op	25:32	0:0	6	]
op	25:33	0:0	6	.
water	25:34	0:0	6	i_visible_lines
op	25:50	0:0	6	!=
water	26:12	0:0	6	p_pic_bot
op	26:21	0:0	6	->
water	26:23	0:0	6	p
op	26:24	0:0	6	[
water	26:25	0:0	6	i_plane
op	26:32	0:0	6	]
op	26:33	0:0	6	.
water	26:34	0:0	6	i_visible_lines
stmts	27:12	27:21	5	
return	27:12	27:21	6	-1
op	27:19	0:0	7	-
water	27:20	0:0	7	1
decl	28:8	28:67	4	const int	i_lasty
op	28:26	0:0	4	=
water	28:28	0:0	4	p_pic_top
op	28:37	0:0	4	->
water	28:39	0:0	4	p
op	28:40	0:0	4	[
water	28:41	0:0	4	i_plane
op	28:48	0:0	4	]
op	28:49	0:0	4	.
water	28:50	0:0	4	i_visible_lines
op	28:65	0:0	4	-
water	28:66	0:0	4	1
decl	29:8	30:68	4	const int	w
op	29:20	0:0	4	=
call	29:22	30:67	5	FFMIN
arg	29:29	29:66	6	p_pic_top->p[i_plane].i_visible_pitch
water	29:29	0:0	7	p_pic_top
op	29:38	0:0	7	->
water	29:40	0:0	7	p
op	29:41	0:0	7	[
water	29:42	0:0	7	i_plane
op	29:49	0:0	7	]
op	29:50	0:0	7	.
water	29:51	0:0	7	i_visible_pitch
arg	30:29	30:67	6	p_pic_bot->p[i_plane].i_visible_pitch
water	30:29	0:0	7	p_pic_bot
op	30:38	0:0	7	->
water	30:40	0:0	7	p
op	30:41	0:0	7	[
water	30:42	0:0	7	i_plane
op	30:49	0:0	7	]
op	30:50	0:0	7	.
water	30:51	0:0	7	i_visible_pitch
decl	32:8	32:40	4	const picture_t	*cur
op	32:29	0:0	4	=
water	32:31	0:0	4	p_pic_bot
decl	33:8	33:40	4	const picture_t	*ngh
op	33:29	0:0	4	=
water	33:31	0:0	4	p_pic_top
decl	34:8	34:40	4	int	wc
op	34:15	0:0	4	=
water	34:17	0:0	4	cur
op	34:20	0:0	4	->
water	34:22	0:0	4	p
op	34:23	0:0	4	[
water	34:24	0:0	4	i_plane
op	34:31	0:0	4	]
op	34:32	0:0	4	.
water	34:33	0:0	4	i_pitch
decl	35:8	35:40	4	int	wn
op	35:15	0:0	4	=
water	35:17	0:0	4	ngh
op	35:20	0:0	4	->
water	35:22	0:0	4	p
op	35:23	0:0	4	[
water	35:24	0:0	4	i_plane
op	35:31	0:0	4	]
op	35:32	0:0	4	.
water	35:33	0:0	4	i_pitch
for	40:8	73:8	4	( int y = 1 ;y < i_lasty;++ y)
forinit	0:0	40:22	5	 int y = 1 ;
decl	40:13	40:22	6	int	y
op	40:19	0:0	6	=
water	40:21	0:0	6	1
cond	40:24	40:28	5	y < i_lasty
water	40:24	0:0	6	y
op	40:26	0:0	6	<
water	40:28	0:0	6	i_lasty
forexpr	40:37	40:39	5	++ y
op	40:37	0:0	6	++
water	40:39	0:0	6	y
stmts	41:8	73:8	5	
water	41:8	0:0	6	{
decl	42:12	42:58	6	uint8_t	*p_c
op	42:25	0:0	6	=
op	42:27	0:0	6	&
water	42:28	0:0	6	cur
op	42:31	0:0	6	->
water	42:33	0:0	6	p
op	42:34	0:0	6	[
water	42:35	0:0	6	i_plane
op	42:42	0:0	6	]
op	42:43	0:0	6	.
water	42:44	0:0	6	p_pixels
op	42:52	0:0	6	[
water	42:53	0:0	6	y
op	42:54	0:0	6	*
water	42:55	0:0	6	wc
op	42:57	0:0	6	]
decl	43:12	43:62	6	uint8_t	*p_p
op	43:25	0:0	6	=
op	43:27	0:0	6	&
water	43:28	0:0	6	ngh
op	43:31	0:0	6	->
water	43:33	0:0	6	p
op	43:34	0:0	6	[
water	43:35	0:0	6	i_plane
op	43:42	0:0	6	]
op	43:43	0:0	6	.
water	43:44	0:0	6	p_pixels
op	43:52	0:0	6	[
water	43:53	0:0	6	(
water	43:54	0:0	6	y
op	43:55	0:0	6	-
water	43:56	0:0	6	1
water	43:57	0:0	6	)
op	43:58	0:0	6	*
water	43:59	0:0	6	wn
op	43:61	0:0	6	]
decl	44:12	44:62	6	uint8_t	*p_n
op	44:25	0:0	6	=
op	44:27	0:0	6	&
water	44:28	0:0	6	ngh
op	44:31	0:0	6	->
water	44:33	0:0	6	p
op	44:34	0:0	6	[
water	44:35	0:0	6	i_plane
op	44:42	0:0	6	]
op	44:43	0:0	6	.
water	44:44	0:0	6	p_pixels
op	44:52	0:0	6	[
water	44:53	0:0	6	(
water	44:54	0:0	6	y
op	44:55	0:0	6	+
water	44:56	0:0	6	1
water	44:57	0:0	6	)
op	44:58	0:0	6	*
water	44:59	0:0	6	wn
op	44:61	0:0	6	]
for	45:12	65:12	6	( int x = 0 ;x < w;++ x)
forinit	0:0	45:26	7	 int x = 0 ;
decl	45:17	45:26	8	int	x
op	45:23	0:0	8	=
water	45:25	0:0	8	0
cond	45:28	45:32	7	x < w
water	45:28	0:0	8	x
op	45:30	0:0	8	<
water	45:32	0:0	8	w
forexpr	45:35	45:37	7	++ x
op	45:35	0:0	8	++
water	45:37	0:0	8	x
stmts	46:12	65:12	7	
water	46:12	0:0	8	{
decl	48:16	48:37	8	int_fast32_t	C
op	48:31	0:0	8	=
op	48:33	0:0	8	*
water	48:34	0:0	8	p_c
decl	49:16	49:37	8	int_fast32_t	P
op	49:31	0:0	8	=
op	49:33	0:0	8	*
water	49:34	0:0	8	p_p
decl	50:16	50:37	8	int_fast32_t	N
op	50:31	0:0	8	=
op	50:33	0:0	8	*
water	50:34	0:0	8	p_n
decl	59:16	59:53	8	int_fast32_t	comb
op	59:34	0:0	8	=
water	59:36	0:0	8	(
water	59:37	0:0	8	P
op	59:39	0:0	8	-
water	59:41	0:0	8	C
water	59:42	0:0	8	)
op	59:44	0:0	8	*
water	59:46	0:0	8	(
water	59:47	0:0	8	N
op	59:49	0:0	8	-
water	59:51	0:0	8	C
water	59:52	0:0	8	)
if	60:16	61:29	8	(comb > T)
cond	60:20	60:27	9	comb > T
water	60:20	0:0	10	comb
op	60:25	0:0	10	>
water	60:27	0:0	10	T
stmts	61:20	61:29	9	
op	61:20	0:0	10	++
water	61:22	0:0	10	i_score
water	61:29	0:0	10	;
op	62:16	0:0	8	++
water	62:18	0:0	8	p_c
water	62:21	0:0	8	;
op	63:16	0:0	8	++
water	63:18	0:0	8	p_p
water	63:21	0:0	8	;
op	64:16	0:0	8	++
water	64:18	0:0	8	p_n
water	64:21	0:0	8	;
water	65:12	0:0	8	}
decl	67:12	67:38	6	const picture_t	*tmp
op	67:33	0:0	6	=
water	67:35	0:0	6	cur
water	68:12	0:0	6	cur
op	68:16	0:0	6	=
water	68:18	0:0	6	ngh
water	68:21	0:0	6	;
water	69:12	0:0	6	ngh
op	69:16	0:0	6	=
water	69:18	0:0	6	tmp
water	69:21	0:0	6	;
decl	70:12	70:30	6	int	tmp_pitch
op	70:26	0:0	6	=
water	70:28	0:0	6	wc
water	71:12	0:0	6	wc
op	71:15	0:0	6	=
water	71:17	0:0	6	wn
water	71:19	0:0	6	;
water	72:12	0:0	6	wn
op	72:15	0:0	6	=
water	72:17	0:0	6	tmp_pitch
water	72:26	0:0	6	;
water	73:8	0:0	6	}
water	74:4	0:0	4	}
return	75:4	75:18	2	i_score
water	75:11	0:0	3	i_score

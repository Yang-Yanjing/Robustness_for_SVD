func	2:0	17:0	0	static void	Flush
params	2:17	0:0	1	
param	2:19	2:39	2	audio_output_t *	aout
param	2:41	2:52	2	bool	drain
stmnts	0:0	16:38	1	
decl	4:4	4:46	2	audio_buffer_t	*buffer
op	4:27	0:0	2	=
water	4:29	0:0	2	aout
op	4:33	0:0	2	->
water	4:35	0:0	2	sys
op	4:38	0:0	2	->
water	4:40	0:0	2	buffer
call	5:4	5:35	2	vlc_mutex_lock
arg	5:20	5:35	3	&buffer->mutex
op	5:20	0:0	4	&
water	5:21	0:0	4	buffer
op	5:27	0:0	4	->
water	5:29	0:0	4	mutex
water	5:36	0:0	2	;
if	6:4	10:4	2	(drain)
cond	6:8	6:8	3	drain
water	6:8	0:0	4	drain
stmts	7:4	10:4	3	
water	7:4	0:0	4	{
while	8:8	9:58	4	(buffer -> length > 0)
cond	8:15	8:32	5	buffer -> length > 0
water	8:15	0:0	6	buffer
op	8:21	0:0	6	->
water	8:23	0:0	6	length
op	8:30	0:0	6	>
water	8:32	0:0	6	0
stmts	9:12	9:58	5	
call	9:12	9:57	6	vlc_cond_wait
arg	9:27	9:40	7	&buffer->cond
op	9:27	0:0	8	&
water	9:28	0:0	8	buffer
op	9:34	0:0	8	->
water	9:36	0:0	8	cond
arg	9:42	9:57	7	&buffer->mutex
op	9:42	0:0	8	&
water	9:43	0:0	8	buffer
op	9:49	0:0	8	->
water	9:51	0:0	8	mutex
water	9:58	0:0	6	;
water	10:4	0:0	4	}
else	11:4	15:4	2
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
water	13:8	0:0	4	buffer
op	13:14	0:0	4	->
water	13:16	0:0	4	read_pos
op	13:25	0:0	4	=
water	13:27	0:0	4	buffer
op	13:33	0:0	4	->
water	13:35	0:0	4	write_pos
water	13:44	0:0	4	;
water	14:8	0:0	4	buffer
op	14:14	0:0	4	->
water	14:16	0:0	4	length
op	14:25	0:0	4	=
water	14:27	0:0	4	0
water	14:28	0:0	4	;
water	15:4	0:0	4	}
call	16:4	16:37	2	vlc_mutex_unlock
arg	16:22	16:37	3	&buffer->mutex
op	16:22	0:0	4	&
water	16:23	0:0	4	buffer
op	16:29	0:0	4	->
water	16:31	0:0	4	mutex
water	16:38	0:0	2	;

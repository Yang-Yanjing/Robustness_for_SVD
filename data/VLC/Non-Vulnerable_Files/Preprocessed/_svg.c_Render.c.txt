func	2:0	106:0	0	static int	Render
params	2:17	0:0	1	
param	2:19	2:37	2	filter_t *	p_filter
param	2:39	2:68	2	subpicture_region_t *	p_region
param	3:19	3:41	2	svg_rendition_t *	p_svg
param	3:43	3:54	2	int	i_width
param	3:56	3:69	2	int	i_height
stmnts	0:0	105:22	1	
decl	5:4	5:22	2	video_format_t	fmt
decl	6:4	6:34	2	uint8_t	*p_y
water	6:16	0:0	2	,
decl	6:4	6:34	2	uint8_t	*p_u
water	6:22	0:0	2	,
decl	6:4	6:34	2	uint8_t	*p_v
water	6:28	0:0	2	,
decl	6:4	6:34	2	uint8_t	*p_a
decl	7:4	7:32	2	int	x
water	7:9	0:0	2	,
decl	7:4	7:32	2	int	y
water	7:12	0:0	2	,
decl	7:4	7:32	2	int	i_pitch
water	7:21	0:0	2	,
decl	7:4	7:32	2	int	i_u_pitch
decl	8:4	8:28	2	guchar	*pixels_in
op	8:22	0:0	2	=
water	8:24	0:0	2	NULL
decl	9:4	9:20	2	int	rowstride_in
decl	10:4	10:19	2	int	channels_in
decl	11:4	11:13	2	int	alpha
decl	12:4	12:20	2	picture_t	*p_pic
if	13:4	18:4	2	(p_filter -> p_sys -> i_width != i_width || p_filter -> p_sys -> i_height != i_height)
cond	13:9	14:38	3	p_filter -> p_sys -> i_width != i_width || p_filter -> p_sys -> i_height != i_height
water	13:9	0:0	4	p_filter
op	13:17	0:0	4	->
water	13:19	0:0	4	p_sys
op	13:24	0:0	4	->
water	13:26	0:0	4	i_width
op	13:34	0:0	4	!=
water	13:37	0:0	4	i_width
op	13:45	0:0	4	||
water	14:9	0:0	4	p_filter
op	14:17	0:0	4	->
water	14:19	0:0	4	p_sys
op	14:24	0:0	4	->
water	14:26	0:0	4	i_height
op	14:35	0:0	4	!=
water	14:38	0:0	4	i_height
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:50	4	svg_set_size
arg	16:22	16:30	5	p_filter
water	16:22	0:0	6	p_filter
arg	16:32	16:39	5	i_width
water	16:32	0:0	6	i_width
arg	16:41	16:50	5	i_height
water	16:41	0:0	6	i_height
water	16:51	0:0	4	;
water	17:8	0:0	4	p_svg
op	17:13	0:0	4	->
water	17:15	0:0	4	p_rendition
op	17:27	0:0	4	=
water	17:29	0:0	4	NULL
water	17:33	0:0	4	;
water	18:4	0:0	4	}
if	19:4	26:4	2	(p_svg -> p_rendition == NULL)
cond	19:8	19:30	3	p_svg -> p_rendition == NULL
water	19:8	0:0	4	p_svg
op	19:13	0:0	4	->
water	19:15	0:0	4	p_rendition
op	19:27	0:0	4	==
water	19:30	0:0	4	NULL
stmts	19:37	26:4	3	
water	19:37	0:0	4	{
call	20:8	20:43	4	svg_RenderPicture
arg	20:27	20:35	5	p_filter
water	20:27	0:0	6	p_filter
arg	20:37	20:43	5	p_svg
water	20:37	0:0	6	p_svg
water	20:44	0:0	4	;
if	21:8	25:8	4	(! p_svg -> p_rendition)
cond	21:12	21:21	5	! p_svg -> p_rendition
op	21:12	0:0	6	!
water	21:14	0:0	6	p_svg
op	21:19	0:0	6	->
water	21:21	0:0	6	p_rendition
stmts	22:8	25:8	5	
water	22:8	0:0	6	{
call	23:12	23:51	6	msg_Err
arg	23:21	23:29	7	p_filter
water	23:21	0:0	8	p_filter
arg	23:31	23:51	7	"Cannot render SVG"
water	23:31	0:0	8	"Cannot render SVG"
water	23:52	0:0	6	;
return	24:12	24:31	6	VLC_EGENERIC
water	24:19	0:0	7	VLC_EGENERIC
water	25:8	0:0	6	}
water	26:4	0:0	4	}
water	27:4	0:0	2	i_width
op	27:12	0:0	2	=
call	27:14	27:55	2	gdk_pixbuf_get_width
arg	27:36	27:55	3	p_svg->p_rendition
water	27:36	0:0	4	p_svg
op	27:41	0:0	4	->
water	27:43	0:0	4	p_rendition
water	27:56	0:0	2	;
water	28:4	0:0	2	i_height
op	28:13	0:0	2	=
call	28:15	28:57	2	gdk_pixbuf_get_height
arg	28:38	28:57	3	p_svg->p_rendition
water	28:38	0:0	4	p_svg
op	28:43	0:0	4	->
water	28:45	0:0	4	p_rendition
water	28:58	0:0	2	;
call	30:4	30:46	2	memset
arg	30:12	30:16	3	&fmt
op	30:12	0:0	4	&
water	30:13	0:0	4	fmt
arg	30:18	30:19	3	0
water	30:18	0:0	4	0
arg	30:21	30:46	3	sizeof(video_format_t)
op	30:21	0:0	4	sizeof
water	30:27	0:0	4	(
water	30:29	0:0	4	video_format_t
water	30:44	0:0	4	)
water	30:47	0:0	2	;
water	31:4	0:0	2	fmt
op	31:7	0:0	2	.
water	31:8	0:0	2	i_chroma
op	31:17	0:0	2	=
water	31:19	0:0	2	VLC_CODEC_YUVA
water	31:33	0:0	2	;
water	32:4	0:0	2	fmt
op	32:7	0:0	2	.
water	32:8	0:0	2	i_width
op	32:16	0:0	2	=
water	32:18	0:0	2	fmt
op	32:21	0:0	2	.
water	32:22	0:0	2	i_visible_width
op	32:38	0:0	2	=
water	32:40	0:0	2	i_width
water	32:47	0:0	2	;
water	33:4	0:0	2	fmt
op	33:7	0:0	2	.
water	33:8	0:0	2	i_height
op	33:17	0:0	2	=
water	33:19	0:0	2	fmt
op	33:22	0:0	2	.
water	33:23	0:0	2	i_visible_height
op	33:40	0:0	2	=
water	33:42	0:0	2	i_height
water	33:50	0:0	2	;
water	34:4	0:0	2	fmt
op	34:7	0:0	2	.
water	34:8	0:0	2	i_x_offset
op	34:19	0:0	2	=
water	34:21	0:0	2	fmt
op	34:24	0:0	2	.
water	34:25	0:0	2	i_y_offset
op	34:36	0:0	2	=
water	34:38	0:0	2	0
water	34:39	0:0	2	;
water	35:4	0:0	2	fmt
op	35:7	0:0	2	.
water	35:8	0:0	2	i_sar_num
op	35:18	0:0	2	=
water	35:20	0:0	2	1
water	35:21	0:0	2	;
water	36:4	0:0	2	fmt
op	36:7	0:0	2	.
water	36:8	0:0	2	i_sar_den
op	36:18	0:0	2	=
water	36:20	0:0	2	1
water	36:21	0:0	2	;
water	37:4	0:0	2	p_region
op	37:12	0:0	2	->
water	37:14	0:0	2	p_picture
op	37:24	0:0	2	=
call	37:26	37:54	2	picture_NewFromFormat
arg	37:49	37:54	3	&fmt
op	37:49	0:0	4	&
water	37:50	0:0	4	fmt
water	37:55	0:0	2	;
if	38:4	39:27	2	(! p_region -> p_picture)
cond	38:8	38:19	3	! p_region -> p_picture
op	38:8	0:0	4	!
water	38:9	0:0	4	p_region
op	38:17	0:0	4	->
water	38:19	0:0	4	p_picture
stmts	39:8	39:27	3	
return	39:8	39:27	4	VLC_EGENERIC
water	39:15	0:0	5	VLC_EGENERIC
water	40:4	0:0	2	p_region
op	40:12	0:0	2	->
water	40:14	0:0	2	fmt
op	40:18	0:0	2	=
water	40:20	0:0	2	fmt
water	40:23	0:0	2	;
water	41:4	0:0	2	p_region
op	41:12	0:0	2	->
water	41:14	0:0	2	i_x
op	41:18	0:0	2	=
water	41:20	0:0	2	p_region
op	41:28	0:0	2	->
water	41:30	0:0	2	i_y
op	41:34	0:0	2	=
water	41:36	0:0	2	0
water	41:37	0:0	2	;
water	42:4	0:0	2	p_y
op	42:8	0:0	2	=
water	42:10	0:0	2	p_region
op	42:18	0:0	2	->
water	42:20	0:0	2	p_picture
op	42:29	0:0	2	->
water	42:31	0:0	2	Y_PIXELS
water	42:39	0:0	2	;
water	43:4	0:0	2	p_u
op	43:8	0:0	2	=
water	43:10	0:0	2	p_region
op	43:18	0:0	2	->
water	43:20	0:0	2	p_picture
op	43:29	0:0	2	->
water	43:31	0:0	2	U_PIXELS
water	43:39	0:0	2	;
water	44:4	0:0	2	p_v
op	44:8	0:0	2	=
water	44:10	0:0	2	p_region
op	44:18	0:0	2	->
water	44:20	0:0	2	p_picture
op	44:29	0:0	2	->
water	44:31	0:0	2	V_PIXELS
water	44:39	0:0	2	;
water	45:4	0:0	2	p_a
op	45:8	0:0	2	=
water	45:10	0:0	2	p_region
op	45:18	0:0	2	->
water	45:20	0:0	2	p_picture
op	45:29	0:0	2	->
water	45:31	0:0	2	A_PIXELS
water	45:39	0:0	2	;
water	46:4	0:0	2	i_pitch
op	46:12	0:0	2	=
water	46:14	0:0	2	p_region
op	46:22	0:0	2	->
water	46:24	0:0	2	p_picture
op	46:33	0:0	2	->
water	46:35	0:0	2	Y_PITCH
water	46:42	0:0	2	;
water	47:4	0:0	2	i_u_pitch
op	47:14	0:0	2	=
water	47:16	0:0	2	p_region
op	47:24	0:0	2	->
water	47:26	0:0	2	p_picture
op	47:35	0:0	2	->
water	47:37	0:0	2	U_PITCH
water	47:44	0:0	2	;
call	49:4	49:56	2	memset
arg	49:12	49:15	3	p_y
water	49:12	0:0	4	p_y
arg	49:17	49:21	3	0x00
water	49:17	0:0	4	0
water	49:18	0:0	4	x00
arg	49:23	49:56	3	i_pitch*p_region->fmt.i_height
water	49:23	0:0	4	i_pitch
op	49:31	0:0	4	*
water	49:33	0:0	4	p_region
op	49:41	0:0	4	->
water	49:43	0:0	4	fmt
op	49:46	0:0	4	.
water	49:47	0:0	4	i_height
water	49:57	0:0	2	;
call	50:4	50:58	2	memset
arg	50:12	50:15	3	p_u
water	50:12	0:0	4	p_u
arg	50:17	50:21	3	0x80
water	50:17	0:0	4	0
water	50:18	0:0	4	x80
arg	50:23	50:58	3	i_u_pitch*p_region->fmt.i_height
water	50:23	0:0	4	i_u_pitch
op	50:33	0:0	4	*
water	50:35	0:0	4	p_region
op	50:43	0:0	4	->
water	50:45	0:0	4	fmt
op	50:48	0:0	4	.
water	50:49	0:0	4	i_height
water	50:59	0:0	2	;
call	51:4	51:58	2	memset
arg	51:12	51:15	3	p_v
water	51:12	0:0	4	p_v
arg	51:17	51:21	3	0x80
water	51:17	0:0	4	0
water	51:18	0:0	4	x80
arg	51:23	51:58	3	i_u_pitch*p_region->fmt.i_height
water	51:23	0:0	4	i_u_pitch
op	51:33	0:0	4	*
water	51:35	0:0	4	p_region
op	51:43	0:0	4	->
water	51:45	0:0	4	fmt
op	51:48	0:0	4	.
water	51:49	0:0	4	i_height
water	51:59	0:0	2	;
water	52:4	0:0	2	p_pic
op	52:10	0:0	2	=
water	52:12	0:0	2	p_region
op	52:20	0:0	2	->
water	52:22	0:0	2	p_picture
water	52:31	0:0	2	;
water	68:4	0:0	2	pixels_in
op	68:14	0:0	2	=
call	68:16	68:58	2	gdk_pixbuf_get_pixels
arg	68:39	68:58	3	p_svg->p_rendition
water	68:39	0:0	4	p_svg
op	68:44	0:0	4	->
water	68:46	0:0	4	p_rendition
water	68:59	0:0	2	;
water	69:4	0:0	2	rowstride_in
op	69:17	0:0	2	=
call	69:19	69:64	2	gdk_pixbuf_get_rowstride
arg	69:45	69:64	3	p_svg->p_rendition
water	69:45	0:0	4	p_svg
op	69:50	0:0	4	->
water	69:52	0:0	4	p_rendition
water	69:65	0:0	2	;
water	70:4	0:0	2	channels_in
op	70:16	0:0	2	=
call	70:18	70:64	2	gdk_pixbuf_get_n_channels
arg	70:45	70:64	3	p_svg->p_rendition
water	70:45	0:0	4	p_svg
op	70:50	0:0	4	->
water	70:52	0:0	4	p_rendition
water	70:65	0:0	2	;
water	71:4	0:0	2	alpha
op	71:10	0:0	2	=
call	71:12	71:57	2	gdk_pixbuf_get_has_alpha
arg	71:38	71:57	3	p_svg->p_rendition
water	71:38	0:0	4	p_svg
op	71:43	0:0	4	->
water	71:45	0:0	4	p_rendition
water	71:58	0:0	2	;
for	80:4	104:4	2	(y = 0 ;y < i_height;y ++)
forinit	80:9	80:14	3	y = 0 ;
water	80:9	0:0	4	y
op	80:11	0:0	4	=
water	80:13	0:0	4	0
water	80:14	0:0	4	;
cond	80:16	80:20	3	y < i_height
water	80:16	0:0	4	y
op	80:18	0:0	4	<
water	80:20	0:0	4	i_height
forexpr	80:30	80:31	3	y ++
water	80:30	0:0	4	y
op	80:31	0:0	4	++
stmts	81:4	104:4	3	
water	81:4	0:0	4	{
for	82:8	103:8	4	(x = 0 ;x < i_width;x ++)
forinit	82:13	82:18	5	x = 0 ;
water	82:13	0:0	6	x
op	82:15	0:0	6	=
water	82:17	0:0	6	0
water	82:18	0:0	6	;
cond	82:20	82:24	5	x < i_width
water	82:20	0:0	6	x
op	82:22	0:0	6	<
water	82:24	0:0	6	i_width
forexpr	82:33	82:34	5	x ++
water	82:33	0:0	6	x
op	82:34	0:0	6	++
stmts	83:8	103:8	5	
water	83:8	0:0	6	{
decl	84:12	84:24	6	guchar	*p_in
decl	85:12	85:21	6	int	i_out
water	86:12	0:0	6	p_in
op	86:17	0:0	6	=
op	86:19	0:0	6	&
water	86:20	0:0	6	pixels_in
op	86:29	0:0	6	[
call	86:30	86:45	6	INDEX_IN
arg	86:40	86:41	7	x
water	86:40	0:0	8	x
arg	86:43	86:45	7	y
water	86:43	0:0	8	y
op	86:46	0:0	6	]
water	86:47	0:0	6	;
if	96:12	102:12	6	(alpha)
cond	96:17	96:17	7	alpha
water	96:17	0:0	8	alpha
stmts	96:25	102:12	7	
water	96:25	0:0	8	{
water	97:16	0:0	8	i_out
op	97:22	0:0	8	=
call	97:24	97:40	8	INDEX_OUT
arg	97:35	97:36	9	x
water	97:35	0:0	10	x
arg	97:38	97:40	9	y
water	97:38	0:0	10	y
water	97:41	0:0	8	;
water	98:16	0:0	8	p_pic
op	98:21	0:0	8	->
water	98:23	0:0	8	Y_PIXELS
op	98:31	0:0	8	[
water	98:32	0:0	8	i_out
op	98:37	0:0	8	]
op	98:39	0:0	8	=
op	98:41	0:0	8	.
water	98:42	0:0	8	299
call	98:46	98:56	8	*R
arg	98:51	98:56	9	p_in
water	98:51	0:0	10	p_in
op	98:58	0:0	8	+
op	98:60	0:0	8	.
water	98:61	0:0	8	587
call	98:65	98:75	8	*G
arg	98:70	98:75	9	p_in
water	98:70	0:0	10	p_in
op	98:77	0:0	8	+
op	98:79	0:0	8	.
water	98:80	0:0	8	114
call	98:84	98:94	8	*B
arg	98:89	98:94	9	p_in
water	98:89	0:0	10	p_in
water	98:95	0:0	8	;
water	99:16	0:0	8	p_pic
op	99:21	0:0	8	->
water	99:23	0:0	8	U_PIXELS
op	99:31	0:0	8	[
water	99:32	0:0	8	i_out
op	99:37	0:0	8	]
op	99:39	0:0	8	=
op	99:41	0:0	8	-
op	99:42	0:0	8	.
water	99:43	0:0	8	1687
call	99:48	99:58	8	*R
arg	99:53	99:58	9	p_in
water	99:53	0:0	10	p_in
op	99:60	0:0	8	-
op	99:62	0:0	8	.
water	99:63	0:0	8	3313
call	99:68	99:78	8	*G
arg	99:73	99:78	9	p_in
water	99:73	0:0	10	p_in
op	99:80	0:0	8	+
op	99:82	0:0	8	.
water	99:83	0:0	8	5
call	99:85	99:95	8	*B
arg	99:90	99:95	9	p_in
water	99:90	0:0	10	p_in
op	99:97	0:0	8	+
water	99:99	0:0	8	128
water	99:102	0:0	8	;
water	100:16	0:0	8	p_pic
op	100:21	0:0	8	->
water	100:23	0:0	8	V_PIXELS
op	100:31	0:0	8	[
water	100:32	0:0	8	i_out
op	100:37	0:0	8	]
op	100:39	0:0	8	=
op	100:41	0:0	8	.
water	100:42	0:0	8	5
call	100:44	100:54	8	*R
arg	100:49	100:54	9	p_in
water	100:49	0:0	10	p_in
op	100:56	0:0	8	-
op	100:58	0:0	8	.
water	100:59	0:0	8	4187
call	100:64	100:74	8	*G
arg	100:69	100:74	9	p_in
water	100:69	0:0	10	p_in
op	100:76	0:0	8	-
op	100:78	0:0	8	.
water	100:79	0:0	8	0813
call	100:84	100:94	8	*B
arg	100:89	100:94	9	p_in
water	100:89	0:0	10	p_in
op	100:96	0:0	8	+
water	100:98	0:0	8	128
water	100:101	0:0	8	;
water	101:16	0:0	8	p_pic
op	101:21	0:0	8	->
water	101:23	0:0	8	A_PIXELS
op	101:31	0:0	8	[
water	101:32	0:0	8	i_out
op	101:37	0:0	8	]
op	101:39	0:0	8	=
call	101:41	101:53	8	ALPHA
arg	101:48	101:53	9	p_in
water	101:48	0:0	10	p_in
water	101:54	0:0	8	;
water	102:12	0:0	8	}
water	103:8	0:0	6	}
water	104:4	0:0	4	}
return	105:4	105:22	2	VLC_SUCCESS
water	105:11	0:0	3	VLC_SUCCESS

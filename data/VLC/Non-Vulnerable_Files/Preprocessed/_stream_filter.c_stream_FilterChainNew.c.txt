func	2:0	40:0	0	stream_t *	stream_FilterChainNew
params	2:31	0:0	1	
param	2:33	2:51	2	stream_t *	p_source
param	3:33	3:54	2	const char *	psz_chain
param	4:33	4:47	2	bool	b_record
stmnts	7:4	39:19	1	
for	7:4	14:4	2	(;;)
forinit	7:9	7:9	3	;
water	7:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	8:4	14:4	3	
water	8:4	0:0	4	{
decl	9:8	9:63	4	stream_t	*p_filter
op	9:27	0:0	4	=
call	9:29	9:62	5	stream_FilterNew
arg	9:47	9:55	6	p_source
water	9:47	0:0	7	p_source
arg	9:57	9:62	6	NULL
water	9:57	0:0	7	NULL
if	10:8	11:17	4	(! p_filter)
cond	10:12	10:13	5	! p_filter
op	10:12	0:0	6	!
water	10:13	0:0	6	p_filter
stmts	11:12	11:17	5	
break	11:12	11:17	6	
call	12:8	12:54	4	msg_Dbg
arg	12:17	12:25	5	p_filter
water	12:17	0:0	6	p_filter
arg	12:27	12:54	5	"Inserted a stream filter"
water	12:27	0:0	6	"Inserted a stream filter"
water	12:55	0:0	4	;
water	13:8	0:0	4	p_source
op	13:17	0:0	4	=
water	13:19	0:0	4	p_filter
water	13:27	0:0	4	;
water	14:4	0:0	4	}
decl	16:4	16:58	2	char	*psz_tmp
op	16:18	0:0	2	=
water	16:20	0:0	2	psz_chain
water	16:30	0:0	2	?
call	16:32	16:50	3	strdup
arg	16:40	16:50	4	psz_chain
water	16:40	0:0	5	psz_chain
water	16:52	0:0	2	:
water	16:54	0:0	2	NULL
decl	17:4	17:23	2	char	*psz
op	17:14	0:0	2	=
water	17:16	0:0	2	psz_tmp
while	18:4	30:4	2	(psz && * psz)
cond	18:11	18:19	3	psz && * psz
water	18:11	0:0	4	psz
op	18:15	0:0	4	&&
op	18:18	0:0	4	*
water	18:19	0:0	4	psz
stmts	19:4	30:4	3	
water	19:4	0:0	4	{
decl	20:8	20:26	4	stream_t	*p_filter
decl	21:8	21:42	4	char	*psz_end
op	21:22	0:0	4	=
call	21:24	21:41	5	strchr
arg	21:32	21:35	6	psz
water	21:32	0:0	7	psz
arg	21:37	21:41	6	':'
water	21:37	0:0	7	':'
if	22:8	23:29	4	(psz_end)
cond	22:12	22:12	5	psz_end
water	22:12	0:0	6	psz_end
stmts	23:12	23:29	5	
op	23:12	0:0	6	*
water	23:13	0:0	6	psz_end
op	23:20	0:0	6	++
op	23:23	0:0	6	=
water	23:25	0:0	6	'\0'
water	23:29	0:0	6	;
water	24:8	0:0	4	p_filter
op	24:17	0:0	4	=
call	24:19	24:51	4	stream_FilterNew
arg	24:37	24:45	5	p_source
water	24:37	0:0	6	p_source
arg	24:47	24:51	5	psz
water	24:47	0:0	6	psz
water	24:52	0:0	4	;
if	25:8	26:31	4	(p_filter)
cond	25:12	25:12	5	p_filter
water	25:12	0:0	6	p_filter
stmts	26:12	26:31	5	
water	26:12	0:0	6	p_source
op	26:21	0:0	6	=
water	26:23	0:0	6	p_filter
water	26:31	0:0	6	;
else	27:8	28:74	4
stmts	28:12	28:74	5	
call	28:12	28:73	6	msg_Warn
arg	28:22	28:30	7	p_source
water	28:22	0:0	8	p_source
arg	28:32	28:67	7	"failed to insert stream filter %s"
water	28:32	0:0	8	"failed to insert stream filter %s"
arg	28:69	28:73	7	psz
water	28:69	0:0	8	psz
water	28:74	0:0	6	;
water	29:8	0:0	4	psz
op	29:12	0:0	4	=
water	29:14	0:0	4	psz_end
water	29:21	0:0	4	;
water	30:4	0:0	4	}
call	31:4	31:18	2	free
arg	31:10	31:18	3	psz_tmp
water	31:10	0:0	4	psz_tmp
water	31:19	0:0	2	;
if	33:4	38:4	2	(b_record)
cond	33:8	33:8	3	b_record
water	33:8	0:0	4	b_record
stmts	34:4	38:4	3	
water	34:4	0:0	4	{
decl	35:8	35:67	4	stream_t	*p_filter
op	35:27	0:0	4	=
call	35:29	35:66	5	stream_FilterNew
arg	35:47	35:55	6	p_source
water	35:47	0:0	7	p_source
arg	35:57	35:66	6	"record"
water	35:57	0:0	7	"record"
if	36:8	37:31	4	(p_filter)
cond	36:12	36:12	5	p_filter
water	36:12	0:0	6	p_filter
stmts	37:12	37:31	5	
water	37:12	0:0	6	p_source
op	37:21	0:0	6	=
water	37:23	0:0	6	p_filter
water	37:31	0:0	6	;
water	38:4	0:0	4	}
return	39:4	39:19	2	p_source
water	39:11	0:0	3	p_source

func	2:0	125:0	0	static int	CommonOpen
params	2:21	0:0	1	
param	2:23	2:43	2	vlc_object_t *	p_this
param	3:23	3:41	2	dvdnav_t *	p_dvdnav
param	3:43	3:60	2	bool	b_readahead
stmnts	0:0	124:22	1	
decl	5:4	5:43	2	demux_t	*p_demux
op	5:25	0:0	2	=
water	5:27	0:0	2	(
water	5:28	0:0	2	demux_t
op	5:35	0:0	2	*
water	5:36	0:0	2	)
water	5:37	0:0	2	p_this
decl	6:4	6:22	2	demux_sys_t	*p_sys
decl	7:4	7:23	2	int	i_angle
decl	8:4	8:25	2	char	*psz_code
call	9:4	9:21	2	assert
arg	9:12	9:21	3	p_dvdnav
water	9:12	0:0	4	p_dvdnav
water	9:22	0:0	2	;
call	11:4	11:22	2	DEMUX_INIT_COMMON
water	11:23	0:0	2	;
water	11:25	0:0	2	p_sys
op	11:31	0:0	2	=
water	11:33	0:0	2	p_demux
op	11:40	0:0	2	->
water	11:42	0:0	2	p_sys
water	11:47	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	dvdnav
op	12:18	0:0	2	=
water	12:20	0:0	2	p_dvdnav
water	12:28	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	b_reset_pcr
op	13:23	0:0	2	=
water	13:25	0:0	2	false
water	13:30	0:0	2	;
call	14:4	14:29	2	ps_track_init
arg	14:19	14:29	3	p_sys->tk
water	14:19	0:0	4	p_sys
op	14:24	0:0	4	->
water	14:26	0:0	4	tk
water	14:30	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	sar
op	15:14	0:0	2	.
water	15:15	0:0	2	i_num
op	15:21	0:0	2	=
water	15:23	0:0	2	0
water	15:24	0:0	2	;
water	16:4	0:0	2	p_sys
op	16:9	0:0	2	->
water	16:11	0:0	2	sar
op	16:14	0:0	2	.
water	16:15	0:0	2	i_den
op	16:21	0:0	2	=
water	16:23	0:0	2	0
water	16:24	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	i_mux_rate
op	17:22	0:0	2	=
water	17:24	0:0	2	0
water	17:25	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	i_pgc_length
op	18:24	0:0	2	=
water	18:26	0:0	2	0
water	18:27	0:0	2	;
water	19:4	0:0	2	p_sys
op	19:9	0:0	2	->
water	19:11	0:0	2	b_spu_change
op	19:24	0:0	2	=
water	19:26	0:0	2	false
water	19:31	0:0	2	;
water	20:4	0:0	2	p_sys
op	20:9	0:0	2	->
water	20:11	0:0	2	i_vobu_index
op	20:24	0:0	2	=
water	20:26	0:0	2	0
water	20:27	0:0	2	;
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	i_vobu_flush
op	21:24	0:0	2	=
water	21:26	0:0	2	0
water	21:27	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	b_readahead
op	22:23	0:0	2	=
water	22:25	0:0	2	b_readahead
water	22:36	0:0	2	;
if	23:4	36:4	2	(1)
cond	23:8	23:8	3	1
water	23:8	0:0	4	1
stmts	24:4	36:4	3	
water	24:4	0:0	4	{
decl	28:8	28:40	4	uint8_t	buffer[DVD_VIDEO_LB_LEN]
decl	29:8	29:26	4	int	i_event
water	29:19	0:0	4	,
decl	29:8	29:26	4	int	i_len
if	30:8	34:8	4	(dvdnav_get_next_block (p_sys -> dvdnav ,buffer ,& i_event ,& i_len ) == DVDNAV_STATUS_ERR)
cond	30:12	31:17	5	dvdnav_get_next_block (p_sys -> dvdnav ,buffer ,& i_event ,& i_len ) == DVDNAV_STATUS_ERR
call	30:12	30:75	6	dvdnav_get_next_block
arg	30:35	30:48	7	p_sys->dvdnav
water	30:35	0:0	8	p_sys
op	30:40	0:0	8	->
water	30:42	0:0	8	dvdnav
arg	30:50	30:56	7	buffer
water	30:50	0:0	8	buffer
arg	30:58	30:66	7	&i_event
op	30:58	0:0	8	&
water	30:59	0:0	8	i_event
arg	30:68	30:75	7	&i_len
op	30:68	0:0	8	&
water	30:69	0:0	8	i_len
op	31:14	0:0	6	==
water	31:17	0:0	6	DVDNAV_STATUS_ERR
stmts	32:8	34:8	5	
water	32:8	0:0	6	{
call	33:12	33:62	6	msg_Warn
arg	33:22	33:29	7	p_demux
water	33:22	0:0	8	p_demux
arg	33:31	33:62	7	"dvdnav_get_next_block failed"
water	33:31	0:0	8	"dvdnav_get_next_block failed"
water	33:63	0:0	6	;
water	34:8	0:0	6	}
call	35:8	35:57	4	dvdnav_sector_search
arg	35:30	35:43	5	p_sys->dvdnav
water	35:30	0:0	6	p_sys
op	35:35	0:0	6	->
water	35:37	0:0	6	dvdnav
arg	35:45	35:46	5	0
water	35:45	0:0	6	0
arg	35:48	35:57	5	SEEK_SET
water	35:48	0:0	6	SEEK_SET
water	35:58	0:0	4	;
water	36:4	0:0	4	}
if	38:4	42:4	2	(dvdnav_set_readahead_flag (p_sys -> dvdnav ,p_sys -> b_readahead ) != DVDNAV_STATUS_OK)
cond	38:8	39:10	3	dvdnav_set_readahead_flag (p_sys -> dvdnav ,p_sys -> b_readahead ) != DVDNAV_STATUS_OK
call	38:8	38:69	4	dvdnav_set_readahead_flag
arg	38:35	38:48	5	p_sys->dvdnav
water	38:35	0:0	6	p_sys
op	38:40	0:0	6	->
water	38:42	0:0	6	dvdnav
arg	38:50	38:69	5	p_sys->b_readahead
water	38:50	0:0	6	p_sys
op	38:55	0:0	6	->
water	38:57	0:0	6	b_readahead
op	38:71	0:0	4	!=
water	39:10	0:0	4	DVDNAV_STATUS_OK
stmts	40:4	42:4	3	
water	40:4	0:0	4	{
call	41:8	41:57	4	msg_Warn
arg	41:18	41:25	5	p_demux
water	41:18	0:0	6	p_demux
arg	41:27	41:57	5	"cannot set read-a-head flag"
water	41:27	0:0	6	"cannot set read-a-head flag"
water	41:58	0:0	4	;
water	42:4	0:0	4	}
if	43:4	47:4	2	(dvdnav_set_PGC_positioning_flag (p_sys -> dvdnav ,1 ) != DVDNAV_STATUS_OK)
cond	43:8	44:10	3	dvdnav_set_PGC_positioning_flag (p_sys -> dvdnav ,1 ) != DVDNAV_STATUS_OK
call	43:8	43:58	4	dvdnav_set_PGC_positioning_flag
arg	43:41	43:54	5	p_sys->dvdnav
water	43:41	0:0	6	p_sys
op	43:46	0:0	6	->
water	43:48	0:0	6	dvdnav
arg	43:56	43:58	5	1
water	43:56	0:0	6	1
op	43:60	0:0	4	!=
water	44:10	0:0	4	DVDNAV_STATUS_OK
stmts	45:4	47:4	3	
water	45:4	0:0	4	{
call	46:8	46:61	4	msg_Warn
arg	46:18	46:25	5	p_demux
water	46:18	0:0	6	p_demux
arg	46:27	46:61	5	"cannot set PGC positioning flag"
water	46:27	0:0	6	"cannot set PGC positioning flag"
water	46:62	0:0	4	;
water	47:4	0:0	4	}
water	49:4	0:0	2	psz_code
op	49:13	0:0	2	=
call	49:15	49:62	2	DemuxGetLanguageCode
arg	49:37	49:44	3	p_demux
water	49:37	0:0	4	p_demux
arg	49:46	49:62	3	"menu-language"
water	49:46	0:0	4	"menu-language"
water	49:63	0:0	2	;
if	50:4	58:4	2	(dvdnav_menu_language_select (p_sys -> dvdnav ,psz_code ) != DVDNAV_STATUS_OK)
cond	50:8	51:8	3	dvdnav_menu_language_select (p_sys -> dvdnav ,psz_code ) != DVDNAV_STATUS_OK
call	50:8	50:61	4	dvdnav_menu_language_select
arg	50:37	50:50	5	p_sys->dvdnav
water	50:37	0:0	6	p_sys
op	50:42	0:0	6	->
water	50:44	0:0	6	dvdnav
arg	50:52	50:61	5	psz_code
water	50:52	0:0	6	psz_code
op	50:63	0:0	4	!=
water	51:8	0:0	4	DVDNAV_STATUS_OK
stmts	52:4	58:4	3	
water	52:4	0:0	4	{
call	53:8	54:66	4	msg_Warn
arg	53:18	53:25	5	p_demux
water	53:18	0:0	6	p_demux
arg	53:27	53:65	5	"can't set menu language to '%s' (%s)"
water	53:27	0:0	6	"can't set menu language to '%s' (%s)"
arg	54:18	54:26	5	psz_code
water	54:18	0:0	6	psz_code
arg	54:28	54:66	5	dvdnav_err_to_string(p_sys->dvdnav)
call	54:28	54:64	6	dvdnav_err_to_string
arg	54:50	54:64	7	p_sys->dvdnav
water	54:50	0:0	8	p_sys
op	54:55	0:0	8	->
water	54:57	0:0	8	dvdnav
water	54:67	0:0	4	;
if	56:8	57:81	4	(strcmp (psz_code ,LANGUAGE_DEFAULT ))
cond	56:12	56:47	5	strcmp (psz_code ,LANGUAGE_DEFAULT )
call	56:12	56:47	6	strcmp
arg	56:20	56:28	7	psz_code
water	56:20	0:0	8	psz_code
arg	56:30	56:47	7	LANGUAGE_DEFAULT
water	56:30	0:0	8	LANGUAGE_DEFAULT
stmts	57:12	57:81	5	
call	57:12	57:80	6	dvdnav_menu_language_select
arg	57:41	57:54	7	p_sys->dvdnav
water	57:41	0:0	8	p_sys
op	57:46	0:0	8	->
water	57:48	0:0	8	dvdnav
arg	57:56	57:80	7	(char*)LANGUAGE_DEFAULT
water	57:56	0:0	8	(
water	57:57	0:0	8	char
op	57:61	0:0	8	*
water	57:62	0:0	8	)
water	57:63	0:0	8	LANGUAGE_DEFAULT
water	57:81	0:0	6	;
water	58:4	0:0	4	}
call	59:4	59:19	2	free
arg	59:10	59:19	3	psz_code
water	59:10	0:0	4	psz_code
water	59:20	0:0	2	;
water	61:4	0:0	2	psz_code
op	61:13	0:0	2	=
call	61:15	61:63	2	DemuxGetLanguageCode
arg	61:37	61:44	3	p_demux
water	61:37	0:0	4	p_demux
arg	61:46	61:63	3	"audio-language"
water	61:46	0:0	4	"audio-language"
water	61:64	0:0	2	;
if	62:4	70:4	2	(dvdnav_audio_language_select (p_sys -> dvdnav ,psz_code ) != DVDNAV_STATUS_OK)
cond	62:8	63:8	3	dvdnav_audio_language_select (p_sys -> dvdnav ,psz_code ) != DVDNAV_STATUS_OK
call	62:8	62:62	4	dvdnav_audio_language_select
arg	62:38	62:51	5	p_sys->dvdnav
water	62:38	0:0	6	p_sys
op	62:43	0:0	6	->
water	62:45	0:0	6	dvdnav
arg	62:53	62:62	5	psz_code
water	62:53	0:0	6	psz_code
op	62:64	0:0	4	!=
water	63:8	0:0	4	DVDNAV_STATUS_OK
stmts	64:4	70:4	3	
water	64:4	0:0	4	{
call	65:8	66:66	4	msg_Warn
arg	65:18	65:25	5	p_demux
water	65:18	0:0	6	p_demux
arg	65:27	65:66	5	"can't set audio language to '%s' (%s)"
water	65:27	0:0	6	"can't set audio language to '%s' (%s)"
arg	66:18	66:26	5	psz_code
water	66:18	0:0	6	psz_code
arg	66:28	66:66	5	dvdnav_err_to_string(p_sys->dvdnav)
call	66:28	66:64	6	dvdnav_err_to_string
arg	66:50	66:64	7	p_sys->dvdnav
water	66:50	0:0	8	p_sys
op	66:55	0:0	8	->
water	66:57	0:0	8	dvdnav
water	66:67	0:0	4	;
if	68:8	69:82	4	(strcmp (psz_code ,LANGUAGE_DEFAULT ))
cond	68:12	68:47	5	strcmp (psz_code ,LANGUAGE_DEFAULT )
call	68:12	68:47	6	strcmp
arg	68:20	68:28	7	psz_code
water	68:20	0:0	8	psz_code
arg	68:30	68:47	7	LANGUAGE_DEFAULT
water	68:30	0:0	8	LANGUAGE_DEFAULT
stmts	69:12	69:82	5	
call	69:12	69:81	6	dvdnav_audio_language_select
arg	69:42	69:55	7	p_sys->dvdnav
water	69:42	0:0	8	p_sys
op	69:47	0:0	8	->
water	69:49	0:0	8	dvdnav
arg	69:57	69:81	7	(char*)LANGUAGE_DEFAULT
water	69:57	0:0	8	(
water	69:58	0:0	8	char
op	69:62	0:0	8	*
water	69:63	0:0	8	)
water	69:64	0:0	8	LANGUAGE_DEFAULT
water	69:82	0:0	6	;
water	70:4	0:0	4	}
call	71:4	71:19	2	free
arg	71:10	71:19	3	psz_code
water	71:10	0:0	4	psz_code
water	71:20	0:0	2	;
water	73:4	0:0	2	psz_code
op	73:13	0:0	2	=
call	73:15	73:61	2	DemuxGetLanguageCode
arg	73:37	73:44	3	p_demux
water	73:37	0:0	4	p_demux
arg	73:46	73:61	3	"sub-language"
water	73:46	0:0	4	"sub-language"
water	73:62	0:0	2	;
if	74:4	82:4	2	(dvdnav_spu_language_select (p_sys -> dvdnav ,psz_code ) != DVDNAV_STATUS_OK)
cond	74:8	75:8	3	dvdnav_spu_language_select (p_sys -> dvdnav ,psz_code ) != DVDNAV_STATUS_OK
call	74:8	74:60	4	dvdnav_spu_language_select
arg	74:36	74:49	5	p_sys->dvdnav
water	74:36	0:0	6	p_sys
op	74:41	0:0	6	->
water	74:43	0:0	6	dvdnav
arg	74:51	74:60	5	psz_code
water	74:51	0:0	6	psz_code
op	74:62	0:0	4	!=
water	75:8	0:0	4	DVDNAV_STATUS_OK
stmts	76:4	82:4	3	
water	76:4	0:0	4	{
call	77:8	78:66	4	msg_Warn
arg	77:18	77:25	5	p_demux
water	77:18	0:0	6	p_demux
arg	77:27	77:64	5	"can't set spu language to '%s' (%s)"
water	77:27	0:0	6	"can't set spu language to '%s' (%s)"
arg	78:18	78:26	5	psz_code
water	78:18	0:0	6	psz_code
arg	78:28	78:66	5	dvdnav_err_to_string(p_sys->dvdnav)
call	78:28	78:64	6	dvdnav_err_to_string
arg	78:50	78:64	7	p_sys->dvdnav
water	78:50	0:0	8	p_sys
op	78:55	0:0	8	->
water	78:57	0:0	8	dvdnav
water	78:67	0:0	4	;
if	80:8	81:79	4	(strcmp (psz_code ,LANGUAGE_DEFAULT ))
cond	80:12	80:47	5	strcmp (psz_code ,LANGUAGE_DEFAULT )
call	80:12	80:47	6	strcmp
arg	80:20	80:28	7	psz_code
water	80:20	0:0	8	psz_code
arg	80:30	80:47	7	LANGUAGE_DEFAULT
water	80:30	0:0	8	LANGUAGE_DEFAULT
stmts	81:12	81:79	5	
call	81:12	81:78	6	dvdnav_spu_language_select
arg	81:39	81:52	7	p_sys->dvdnav
water	81:39	0:0	8	p_sys
op	81:44	0:0	8	->
water	81:46	0:0	8	dvdnav
arg	81:54	81:78	7	(char*)LANGUAGE_DEFAULT
water	81:54	0:0	8	(
water	81:55	0:0	8	char
op	81:59	0:0	8	*
water	81:60	0:0	8	)
water	81:61	0:0	8	LANGUAGE_DEFAULT
water	81:79	0:0	6	;
water	82:4	0:0	4	}
call	83:4	83:19	2	free
arg	83:10	83:19	3	psz_code
water	83:10	0:0	4	psz_code
water	83:20	0:0	2	;
call	84:4	84:25	2	DemuxTitles
arg	84:17	84:25	3	p_demux
water	84:17	0:0	4	p_demux
water	84:26	0:0	2	;
if	85:4	105:4	2	(var_CreateGetBool (p_demux ,"dvdnav-menu" ))
cond	85:8	85:50	3	var_CreateGetBool (p_demux ,"dvdnav-menu" )
call	85:8	85:50	4	var_CreateGetBool
arg	85:27	85:34	5	p_demux
water	85:27	0:0	6	p_demux
arg	85:36	85:50	5	"dvdnav-menu"
water	85:36	0:0	6	"dvdnav-menu"
stmts	86:4	105:4	3	
water	86:4	0:0	4	{
call	87:8	87:53	4	msg_Dbg
arg	87:17	87:24	5	p_demux
water	87:17	0:0	6	p_demux
arg	87:26	87:53	5	"trying to go to dvd menu"
water	87:26	0:0	6	"trying to go to dvd menu"
water	87:54	0:0	4	;
if	88:8	96:8	4	(dvdnav_title_play (p_sys -> dvdnav ,1 ) != DVDNAV_STATUS_OK)
cond	88:12	88:53	5	dvdnav_title_play (p_sys -> dvdnav ,1 ) != DVDNAV_STATUS_OK
call	88:12	88:48	6	dvdnav_title_play
arg	88:31	88:44	7	p_sys->dvdnav
water	88:31	0:0	8	p_sys
op	88:36	0:0	8	->
water	88:38	0:0	8	dvdnav
arg	88:46	88:48	7	1
water	88:46	0:0	8	1
op	88:50	0:0	6	!=
water	88:53	0:0	6	DVDNAV_STATUS_OK
stmts	89:8	96:8	5	
water	89:8	0:0	6	{
call	90:12	90:70	6	msg_Err
arg	90:21	90:28	7	p_demux
water	90:21	0:0	8	p_demux
arg	90:30	90:70	7	"cannot set title (can't decrypt DVD?)"
water	90:30	0:0	8	"cannot set title (can't decrypt DVD?)"
water	90:71	0:0	6	;
call	91:12	93:65	6	dialog_Fatal
arg	91:26	91:33	7	p_demux
water	91:26	0:0	8	p_demux
arg	91:35	91:56	7	_("Playback failure")
call	91:35	91:55	8	_
arg	91:37	91:55	9	"Playback failure"
water	91:37	0:0	10	"Playback failure"
arg	91:58	91:62	7	"%s"
water	91:58	0:0	8	"%s"
arg	92:28	93:65	7	_("VLC cannot set the DVD's title. It possibly ""cannot decrypt the entire disc.")
call	92:28	93:63	8	_
arg	92:30	93:63	9	"VLC cannot set the DVD's title. It possibly ""cannot decrypt the entire disc."
water	92:30	0:0	10	"VLC cannot set the DVD's title. It possibly "
water	93:30	0:0	10	"cannot decrypt the entire disc."
water	93:66	0:0	6	;
call	94:12	94:24	6	free
arg	94:18	94:24	7	p_sys
water	94:18	0:0	8	p_sys
water	94:25	0:0	6	;
return	95:12	95:31	6	VLC_EGENERIC
water	95:19	0:0	7	VLC_EGENERIC
water	96:8	0:0	6	}
if	97:8	104:8	4	(dvdnav_menu_call (p_sys -> dvdnav ,DVD_MENU_Title ) != DVDNAV_STATUS_OK)
cond	97:12	98:12	5	dvdnav_menu_call (p_sys -> dvdnav ,DVD_MENU_Title ) != DVDNAV_STATUS_OK
call	97:12	97:60	6	dvdnav_menu_call
arg	97:30	97:43	7	p_sys->dvdnav
water	97:30	0:0	8	p_sys
op	97:35	0:0	8	->
water	97:37	0:0	8	dvdnav
arg	97:45	97:60	7	DVD_MENU_Title
water	97:45	0:0	8	DVD_MENU_Title
op	97:62	0:0	6	!=
water	98:12	0:0	6	DVDNAV_STATUS_OK
stmts	99:8	104:8	5	
water	99:8	0:0	6	{
if	101:12	103:64	6	(dvdnav_menu_call (p_sys -> dvdnav ,DVD_MENU_Root ) != DVDNAV_STATUS_OK)
cond	101:16	102:16	7	dvdnav_menu_call (p_sys -> dvdnav ,DVD_MENU_Root ) != DVDNAV_STATUS_OK
call	101:16	101:63	8	dvdnav_menu_call
arg	101:34	101:47	9	p_sys->dvdnav
water	101:34	0:0	10	p_sys
op	101:39	0:0	10	->
water	101:41	0:0	10	dvdnav
arg	101:49	101:63	9	DVD_MENU_Root
water	101:49	0:0	10	DVD_MENU_Root
op	101:65	0:0	8	!=
water	102:16	0:0	8	DVDNAV_STATUS_OK
stmts	103:20	103:64	7	
call	103:20	103:63	8	msg_Warn
arg	103:30	103:37	9	p_demux
water	103:30	0:0	10	p_demux
arg	103:39	103:63	9	"cannot go to dvd menu"
water	103:39	0:0	10	"cannot go to dvd menu"
water	103:64	0:0	8	;
water	104:8	0:0	6	}
water	105:4	0:0	4	}
water	106:4	0:0	2	i_angle
op	106:12	0:0	2	=
call	106:14	106:60	2	var_CreateGetInteger
arg	106:36	106:43	3	p_demux
water	106:36	0:0	4	p_demux
arg	106:45	106:60	3	"dvdnav-angle"
water	106:45	0:0	4	"dvdnav-angle"
water	106:61	0:0	2	;
if	107:4	107:34	2	(i_angle <= 0)
cond	107:8	107:19	3	i_angle <= 0
water	107:8	0:0	4	i_angle
op	107:16	0:0	4	<=
water	107:19	0:0	4	0
stmts	107:23	107:34	3	
water	107:23	0:0	4	i_angle
op	107:31	0:0	4	=
water	107:33	0:0	4	1
water	107:34	0:0	4	;
water	110:4	0:0	2	p_sys
op	110:9	0:0	2	->
water	110:11	0:0	2	p_input
op	110:19	0:0	2	=
call	110:21	110:51	2	demux_GetParentInput
arg	110:43	110:51	3	p_demux
water	110:43	0:0	4	p_demux
water	110:52	0:0	2	;
call	111:4	111:59	2	var_Create
arg	111:16	111:30	3	p_sys->p_input
water	111:16	0:0	4	p_sys
op	111:21	0:0	4	->
water	111:23	0:0	4	p_input
arg	111:32	111:41	3	"x-start"
water	111:32	0:0	4	"x-start"
arg	111:43	111:59	3	VLC_VAR_INTEGER
water	111:43	0:0	4	VLC_VAR_INTEGER
water	111:60	0:0	2	;
call	112:4	112:59	2	var_Create
arg	112:16	112:30	3	p_sys->p_input
water	112:16	0:0	4	p_sys
op	112:21	0:0	4	->
water	112:23	0:0	4	p_input
arg	112:32	112:41	3	"y-start"
water	112:32	0:0	4	"y-start"
arg	112:43	112:59	3	VLC_VAR_INTEGER
water	112:43	0:0	4	VLC_VAR_INTEGER
water	112:60	0:0	2	;
call	113:4	113:57	2	var_Create
arg	113:16	113:30	3	p_sys->p_input
water	113:16	0:0	4	p_sys
op	113:21	0:0	4	->
water	113:23	0:0	4	p_input
arg	113:32	113:39	3	"x-end"
water	113:32	0:0	4	"x-end"
arg	113:41	113:57	3	VLC_VAR_INTEGER
water	113:41	0:0	4	VLC_VAR_INTEGER
water	113:58	0:0	2	;
call	114:4	114:57	2	var_Create
arg	114:16	114:30	3	p_sys->p_input
water	114:16	0:0	4	p_sys
op	114:21	0:0	4	->
water	114:23	0:0	4	p_input
arg	114:32	114:39	3	"y-end"
water	114:32	0:0	4	"y-end"
arg	114:41	114:57	3	VLC_VAR_INTEGER
water	114:41	0:0	4	VLC_VAR_INTEGER
water	114:58	0:0	2	;
call	115:4	115:57	2	var_Create
arg	115:16	115:30	3	p_sys->p_input
water	115:16	0:0	4	p_sys
op	115:21	0:0	4	->
water	115:23	0:0	4	p_input
arg	115:32	115:39	3	"color"
water	115:32	0:0	4	"color"
arg	115:41	115:57	3	VLC_VAR_ADDRESS
water	115:41	0:0	4	VLC_VAR_ADDRESS
water	115:58	0:0	2	;
call	116:4	116:64	2	var_Create
arg	116:16	116:30	3	p_sys->p_input
water	116:16	0:0	4	p_sys
op	116:21	0:0	4	->
water	116:23	0:0	4	p_input
arg	116:32	116:46	3	"menu-palette"
water	116:32	0:0	4	"menu-palette"
arg	116:48	116:64	3	VLC_VAR_ADDRESS
water	116:48	0:0	4	VLC_VAR_ADDRESS
water	116:65	0:0	2	;
call	117:4	117:58	2	var_Create
arg	117:16	117:30	3	p_sys->p_input
water	117:16	0:0	4	p_sys
op	117:21	0:0	4	->
water	117:23	0:0	4	p_input
arg	117:32	117:43	3	"highlight"
water	117:32	0:0	4	"highlight"
arg	117:45	117:58	3	VLC_VAR_BOOL
water	117:45	0:0	4	VLC_VAR_BOOL
water	117:59	0:0	2	;
call	119:4	119:70	2	var_AddCallback
arg	119:21	119:35	3	p_sys->p_input
water	119:21	0:0	4	p_sys
op	119:26	0:0	4	->
water	119:28	0:0	4	p_input
arg	119:37	119:49	3	"intf-event"
water	119:37	0:0	4	"intf-event"
arg	119:51	119:60	3	EventIntf
water	119:51	0:0	4	EventIntf
arg	119:62	119:70	3	p_demux
water	119:62	0:0	4	p_demux
water	119:71	0:0	2	;
water	120:4	0:0	2	p_sys
op	120:9	0:0	2	->
water	120:11	0:0	2	still
op	120:16	0:0	2	.
water	120:17	0:0	2	b_enabled
op	120:27	0:0	2	=
water	120:29	0:0	2	false
water	120:34	0:0	2	;
call	121:4	121:39	2	vlc_mutex_init
arg	121:20	121:39	3	&p_sys->still.lock
op	121:20	0:0	4	&
water	121:21	0:0	4	p_sys
op	121:26	0:0	4	->
water	121:28	0:0	4	still
op	121:33	0:0	4	.
water	121:34	0:0	4	lock
water	121:40	0:0	2	;
if	122:4	123:37	2	(!vlc_timer_create (& p_sys -> still . timer ,StillTimer ,p_sys ))
cond	122:8	122:66	3	!vlc_timer_create (& p_sys -> still . timer ,StillTimer ,p_sys )
op	122:8	0:0	4	!
call	122:9	122:66	4	vlc_timer_create
arg	122:27	122:46	5	&p_sys->still.timer
op	122:27	0:0	6	&
water	122:28	0:0	6	p_sys
op	122:33	0:0	6	->
water	122:35	0:0	6	still
op	122:40	0:0	6	.
water	122:41	0:0	6	timer
arg	122:48	122:58	5	StillTimer
water	122:48	0:0	6	StillTimer
arg	122:60	122:66	5	p_sys
water	122:60	0:0	6	p_sys
stmts	123:8	123:37	3	
water	123:8	0:0	4	p_sys
op	123:13	0:0	4	->
water	123:15	0:0	4	still
op	123:20	0:0	4	.
water	123:21	0:0	4	b_created
op	123:31	0:0	4	=
water	123:33	0:0	4	true
water	123:37	0:0	4	;
return	124:4	124:22	2	VLC_SUCCESS
water	124:11	0:0	3	VLC_SUCCESS

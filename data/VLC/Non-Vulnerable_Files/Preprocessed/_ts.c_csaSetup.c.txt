decl	1:7	1:52	0	void	TSSetPCR
water	1:20	0:0	0	(
water	1:22	0:0	0	block_t
op	1:30	0:0	0	*
water	1:31	0:0	0	p_ts
water	1:35	0:0	0	,
water	1:37	0:0	0	mtime_t
water	1:45	0:0	0	i_dts
water	1:51	0:0	0	)
func	2:0	42:0	0	static csa_t *	csaSetup
params	2:22	0:0	1	
param	2:24	2:45	2	vlc_object_t *	p_this
stmnts	0:0	41:14	1	
decl	4:4	4:43	2	sout_mux_t	*p_mux
op	4:22	0:0	2	=
water	4:24	0:0	2	(
water	4:25	0:0	2	sout_mux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:40	2	sout_mux_sys_t	*p_sys
op	5:26	0:0	2	=
water	5:28	0:0	2	p_mux
op	5:33	0:0	2	->
water	5:35	0:0	2	p_sys
decl	6:4	6:87	2	char	*csack
op	6:16	0:0	2	=
call	6:18	6:86	3	var_CreateGetNonEmptyStringCommand
arg	6:54	6:59	4	p_mux
water	6:54	0:0	5	p_mux
arg	6:61	6:86	4	SOUT_CFG_PREFIX"csa-ck"
water	6:61	0:0	5	SOUT_CFG_PREFIX
water	6:77	0:0	5	"csa-ck"
if	7:4	8:19	2	(! csack)
cond	7:8	7:9	3	! csack
op	7:8	0:0	4	!
water	7:9	0:0	4	csack
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
decl	9:4	9:26	2	csa_t	*csa
op	9:15	0:0	2	=
call	9:17	9:25	3	csa_New
if	10:4	15:4	2	(csa_SetCW (p_this ,csa ,csack ,true ))
cond	10:8	10:44	3	csa_SetCW (p_this ,csa ,csack ,true )
call	10:8	10:44	4	csa_SetCW
arg	10:19	10:25	5	p_this
water	10:19	0:0	6	p_this
arg	10:27	10:30	5	csa
water	10:27	0:0	6	csa
arg	10:32	10:37	5	csack
water	10:32	0:0	6	csack
arg	10:39	10:44	5	true
water	10:39	0:0	6	true
stmts	11:4	15:4	3	
water	11:4	0:0	4	{
call	12:8	12:18	4	free
arg	12:13	12:18	5	csack
water	12:13	0:0	6	csack
water	12:19	0:0	4	;
call	13:8	13:24	4	csa_Delete
arg	13:20	13:24	5	csa
water	13:20	0:0	6	csa
water	13:25	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
call	16:4	16:37	2	vlc_mutex_init
arg	16:20	16:37	3	&p_sys->csa_lock
op	16:20	0:0	4	&
water	16:21	0:0	4	p_sys
op	16:26	0:0	4	->
water	16:28	0:0	4	csa_lock
water	16:38	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	b_crypt_audio
op	17:25	0:0	2	=
call	17:27	17:77	2	var_GetBool
arg	17:40	17:45	3	p_mux
water	17:40	0:0	4	p_mux
arg	17:47	17:77	3	SOUT_CFG_PREFIX"crypt-audio"
water	17:47	0:0	4	SOUT_CFG_PREFIX
water	17:63	0:0	4	"crypt-audio"
water	17:78	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	b_crypt_video
op	18:25	0:0	2	=
call	18:27	18:77	2	var_GetBool
arg	18:40	18:45	3	p_mux
water	18:40	0:0	4	p_mux
arg	18:47	18:77	3	SOUT_CFG_PREFIX"crypt-video"
water	18:47	0:0	4	SOUT_CFG_PREFIX
water	18:63	0:0	4	"crypt-video"
water	18:78	0:0	2	;
decl	19:4	19:88	2	char	*csa2ck
op	19:17	0:0	2	=
call	19:19	19:87	3	var_CreateGetNonEmptyStringCommand
arg	19:55	19:60	4	p_mux
water	19:55	0:0	5	p_mux
arg	19:62	19:87	4	SOUT_CFG_PREFIX"csa2-ck"
water	19:62	0:0	5	SOUT_CFG_PREFIX
water	19:78	0:0	5	"csa2-ck"
if	20:4	21:46	2	(! csa2ck ||csa_SetCW (p_this ,csa ,csa2ck ,false ))
cond	20:8	20:57	3	! csa2ck ||csa_SetCW (p_this ,csa ,csa2ck ,false )
op	20:8	0:0	4	!
water	20:9	0:0	4	csa2ck
op	20:16	0:0	4	||
call	20:19	20:57	4	csa_SetCW
arg	20:30	20:36	5	p_this
water	20:30	0:0	6	p_this
arg	20:38	20:41	5	csa
water	20:38	0:0	6	csa
arg	20:43	20:49	5	csa2ck
water	20:43	0:0	6	csa2ck
arg	20:51	20:57	5	false
water	20:51	0:0	6	false
stmts	21:8	21:46	3	
call	21:8	21:45	4	csa_SetCW
arg	21:19	21:25	5	p_this
water	21:19	0:0	6	p_this
arg	21:27	21:30	5	csa
water	21:27	0:0	6	csa
arg	21:32	21:37	5	csack
water	21:32	0:0	6	csack
arg	21:39	21:45	5	false
water	21:39	0:0	6	false
water	21:46	0:0	4	;
call	22:4	22:15	2	free
arg	22:9	22:15	3	csa2ck
water	22:9	0:0	4	csa2ck
water	22:16	0:0	2	;
call	23:4	23:105	2	var_Create
arg	23:16	23:21	3	p_mux
water	23:16	0:0	4	p_mux
arg	23:23	23:48	3	SOUT_CFG_PREFIX"csa-use"
water	23:23	0:0	4	SOUT_CFG_PREFIX
water	23:39	0:0	4	"csa-use"
arg	23:50	23:105	3	VLC_VAR_STRING|VLC_VAR_DOINHERIT|VLC_VAR_ISCOMMAND
water	23:50	0:0	4	VLC_VAR_STRING
op	23:65	0:0	4	|
water	23:67	0:0	4	VLC_VAR_DOINHERIT
op	23:85	0:0	4	|
water	23:87	0:0	4	VLC_VAR_ISCOMMAND
water	23:106	0:0	2	;
call	24:4	24:79	2	var_AddCallback
arg	24:21	24:26	3	p_mux
water	24:21	0:0	4	p_mux
arg	24:28	24:53	3	SOUT_CFG_PREFIX"csa-use"
water	24:28	0:0	4	SOUT_CFG_PREFIX
water	24:44	0:0	4	"csa-use"
arg	24:55	24:72	3	ActiveKeyCallback
water	24:55	0:0	4	ActiveKeyCallback
arg	24:74	24:79	3	NULL
water	24:74	0:0	4	NULL
water	24:80	0:0	2	;
call	25:4	25:83	2	var_AddCallback
arg	25:21	25:26	3	p_mux
water	25:21	0:0	4	p_mux
arg	25:28	25:52	3	SOUT_CFG_PREFIX"csa-ck"
water	25:28	0:0	4	SOUT_CFG_PREFIX
water	25:44	0:0	4	"csa-ck"
arg	25:54	25:71	3	ChangeKeyCallback
water	25:54	0:0	4	ChangeKeyCallback
arg	25:73	25:83	3	(void*)1
water	25:73	0:0	4	(
water	25:74	0:0	4	void
op	25:79	0:0	4	*
water	25:80	0:0	4	)
water	25:81	0:0	4	1
water	25:84	0:0	2	;
call	26:4	26:79	2	var_AddCallback
arg	26:21	26:26	3	p_mux
water	26:21	0:0	4	p_mux
arg	26:28	26:53	3	SOUT_CFG_PREFIX"csa2-ck"
water	26:28	0:0	4	SOUT_CFG_PREFIX
water	26:44	0:0	4	"csa2-ck"
arg	26:55	26:72	3	ChangeKeyCallback
water	26:55	0:0	4	ChangeKeyCallback
arg	26:74	26:79	3	NULL
water	26:74	0:0	4	NULL
water	26:80	0:0	2	;
decl	27:4	27:23	2	vlc_value_t	use_val
call	28:4	28:56	2	var_Get
arg	28:13	28:18	3	p_mux
water	28:13	0:0	4	p_mux
arg	28:20	28:45	3	SOUT_CFG_PREFIX"csa-use"
water	28:20	0:0	4	SOUT_CFG_PREFIX
water	28:36	0:0	4	"csa-use"
arg	28:47	28:56	3	&use_val
op	28:47	0:0	4	&
water	28:48	0:0	4	use_val
water	28:57	0:0	2	;
if	29:4	30:64	2	(var_Set (p_mux ,SOUT_CFG_PREFIX "csa-use" ,use_val ))
cond	29:9	29:60	3	var_Set (p_mux ,SOUT_CFG_PREFIX "csa-use" ,use_val )
call	29:9	29:60	4	var_Set
arg	29:18	29:23	5	p_mux
water	29:18	0:0	6	p_mux
arg	29:25	29:50	5	SOUT_CFG_PREFIX"csa-use"
water	29:25	0:0	6	SOUT_CFG_PREFIX
water	29:41	0:0	6	"csa-use"
arg	29:52	29:60	5	use_val
water	29:52	0:0	6	use_val
stmts	30:8	30:64	3	
call	30:8	30:63	4	var_SetString
arg	30:23	30:28	5	p_mux
water	30:23	0:0	6	p_mux
arg	30:30	30:55	5	SOUT_CFG_PREFIX"csa-use"
water	30:30	0:0	6	SOUT_CFG_PREFIX
water	30:46	0:0	6	"csa-use"
arg	30:57	30:63	5	"odd"
water	30:57	0:0	6	"odd"
water	30:64	0:0	4	;
call	31:4	31:29	2	free
arg	31:10	31:29	3	use_val.psz_string
water	31:10	0:0	4	use_val
op	31:17	0:0	4	.
water	31:18	0:0	4	psz_string
water	31:30	0:0	2	;
water	32:4	0:0	2	p_sys
op	32:9	0:0	2	->
water	32:11	0:0	2	i_csa_pkt_size
op	32:26	0:0	2	=
call	32:28	32:77	2	var_GetInteger
arg	32:44	32:49	3	p_mux
water	32:44	0:0	4	p_mux
arg	32:51	32:77	3	SOUT_CFG_PREFIX"csa-pkt"
water	32:51	0:0	4	SOUT_CFG_PREFIX
water	32:67	0:0	4	"csa-pkt"
water	32:78	0:0	2	;
if	33:4	38:4	2	(p_sys -> i_csa_pkt_size < 12 || p_sys -> i_csa_pkt_size > 188)
cond	33:8	33:62	3	p_sys -> i_csa_pkt_size < 12 || p_sys -> i_csa_pkt_size > 188
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	i_csa_pkt_size
op	33:30	0:0	4	<
water	33:32	0:0	4	12
op	33:35	0:0	4	||
water	33:38	0:0	4	p_sys
op	33:43	0:0	4	->
water	33:45	0:0	4	i_csa_pkt_size
op	33:60	0:0	4	>
water	33:62	0:0	4	188
stmts	34:4	38:4	3	
water	34:4	0:0	4	{
call	35:8	36:34	4	msg_Err
arg	35:17	35:22	5	p_mux
water	35:17	0:0	6	p_mux
arg	35:24	35:56	5	"wrong packet size %d specified"
water	35:24	0:0	6	"wrong packet size %d specified"
arg	36:12	36:34	5	p_sys->i_csa_pkt_size
water	36:12	0:0	6	p_sys
op	36:17	0:0	6	->
water	36:19	0:0	6	i_csa_pkt_size
water	36:35	0:0	4	;
water	37:8	0:0	4	p_sys
op	37:13	0:0	4	->
water	37:15	0:0	4	i_csa_pkt_size
op	37:30	0:0	4	=
water	37:32	0:0	4	188
water	37:35	0:0	4	;
water	38:4	0:0	4	}
call	39:4	39:75	2	msg_Dbg
arg	39:13	39:18	3	p_mux
water	39:13	0:0	4	p_mux
arg	39:20	39:51	3	"encrypting %d bytes of packet"
water	39:20	0:0	4	"encrypting %d bytes of packet"
arg	39:53	39:75	3	p_sys->i_csa_pkt_size
water	39:53	0:0	4	p_sys
op	39:58	0:0	4	->
water	39:60	0:0	4	i_csa_pkt_size
water	39:76	0:0	2	;
call	40:4	40:14	2	free
arg	40:9	40:14	3	csack
water	40:9	0:0	4	csack
water	40:15	0:0	2	;
return	41:4	41:14	2	csa
water	41:11	0:0	3	csa

func	2:0	52:0	0	static void	InitPrograms
params	2:24	0:0	1	
param	2:26	2:51	2	input_thread_t *	p_input
stmnts	0:0	51:4	1	
decl	4:4	4:21	2	int	i_es_out_mode
decl	5:4	5:19	2	vlc_list_t	list
call	7:4	7:28	2	UpdatePtsDelay
arg	7:20	7:28	3	p_input
water	7:20	0:0	4	p_input
water	7:29	0:0	2	;
water	9:4	0:0	2	i_es_out_mode
op	9:18	0:0	2	=
water	9:20	0:0	2	ES_OUT_MODE_AUTO
water	9:36	0:0	2	;
if	10:4	34:4	2	(p_input -> p -> p_sout)
cond	10:8	10:20	3	p_input -> p -> p_sout
water	10:8	0:0	4	p_input
op	10:15	0:0	4	->
water	10:17	0:0	4	p
op	10:18	0:0	4	->
water	10:20	0:0	4	p_sout
stmts	11:4	34:4	3	
water	11:4	0:0	4	{
decl	12:8	12:19	4	char	*prgms
if	13:8	16:8	4	(var_GetBool (p_input ,"sout-all" ))
cond	13:12	13:45	5	var_GetBool (p_input ,"sout-all" )
call	13:12	13:45	6	var_GetBool
arg	13:25	13:32	7	p_input
water	13:25	0:0	8	p_input
arg	13:34	13:45	7	"sout-all"
water	13:34	0:0	8	"sout-all"
stmts	14:8	16:8	5	
water	14:8	0:0	6	{
water	15:12	0:0	6	i_es_out_mode
op	15:26	0:0	6	=
water	15:28	0:0	6	ES_OUT_MODE_ALL
water	15:43	0:0	6	;
water	16:8	0:0	6	}
else	17:8	33:8	4
stmts	18:8	33:8	5	
if	18:8	33:8	6	(( prgms =var_GetNonEmptyString (p_input ,"programs" ) ) != NULL)
cond	18:12	18:70	7	( prgms =var_GetNonEmptyString (p_input ,"programs" ) ) != NULL
water	18:12	0:0	8	(
water	18:13	0:0	8	prgms
op	18:19	0:0	8	=
call	18:21	18:64	8	var_GetNonEmptyString
arg	18:44	18:51	9	p_input
water	18:44	0:0	10	p_input
arg	18:53	18:64	9	"programs"
water	18:53	0:0	10	"programs"
water	18:65	0:0	8	)
op	18:67	0:0	8	!=
water	18:70	0:0	8	NULL
stmts	19:8	33:8	7	
water	19:8	0:0	8	{
decl	20:12	20:21	8	char	*buf
call	21:12	21:50	8	TAB_INIT
arg	21:22	21:34	9	list.i_count
water	21:22	0:0	10	list
op	21:26	0:0	10	.
water	21:27	0:0	10	i_count
arg	21:36	21:50	9	list.p_values
water	21:36	0:0	10	list
op	21:40	0:0	10	.
water	21:41	0:0	10	p_values
water	21:51	0:0	8	;
for	22:12	28:12	8	( const char * prgm =strtok_r (prgms ,"," ,& buf ) ;prgm != NULL;prgm =strtok_r (NULL ,"," ,& buf ))
forinit	0:0	22:64	9	 const char * prgm =strtok_r (prgms ,"," ,& buf ) ;
decl	22:17	22:64	10	const char	*prgm
op	22:34	0:0	10	=
call	22:36	22:63	11	strtok_r
arg	22:46	22:51	12	prgms
water	22:46	0:0	13	prgms
arg	22:53	22:56	12	","
water	22:53	0:0	13	","
arg	22:58	22:63	12	&buf
op	22:58	0:0	13	&
water	22:59	0:0	13	buf
cond	23:17	23:25	9	prgm != NULL
water	23:17	0:0	10	prgm
op	23:22	0:0	10	!=
water	23:25	0:0	10	NULL
forexpr	24:17	24:50	9	prgm =strtok_r (NULL ,"," ,& buf )
water	24:17	0:0	10	prgm
op	24:22	0:0	10	=
call	24:24	24:50	10	strtok_r
arg	24:34	24:38	11	NULL
water	24:34	0:0	12	NULL
arg	24:40	24:43	11	","
water	24:40	0:0	12	","
arg	24:45	24:50	11	&buf
op	24:45	0:0	12	&
water	24:46	0:0	12	buf
stmts	25:12	28:12	9	
water	25:12	0:0	10	{
decl	26:16	26:59	10	vlc_value_t	val
op	26:32	0:0	10	=
water	26:34	0:0	10	{
op	26:36	0:0	10	.
water	26:37	0:0	10	i_int
op	26:43	0:0	10	=
call	26:45	26:56	11	atoi
arg	26:51	26:56	12	prgm
water	26:51	0:0	13	prgm
water	26:58	0:0	10	}
call	27:16	27:76	10	INSERT_ELEM
arg	27:29	27:42	11	list.p_values
water	27:29	0:0	12	list
op	27:33	0:0	12	.
water	27:34	0:0	12	p_values
arg	27:44	27:56	11	list.i_count
water	27:44	0:0	12	list
op	27:48	0:0	12	.
water	27:49	0:0	12	i_count
arg	27:58	27:70	11	list.i_count
water	27:58	0:0	12	list
op	27:62	0:0	12	.
water	27:63	0:0	12	i_count
arg	27:72	27:76	11	val
water	27:72	0:0	12	val
water	27:77	0:0	10	;
water	28:12	0:0	10	}
if	29:12	30:51	8	(list . i_count > 0)
cond	29:16	29:31	9	list . i_count > 0
water	29:16	0:0	10	list
op	29:20	0:0	10	.
water	29:21	0:0	10	i_count
op	29:29	0:0	10	>
water	29:31	0:0	10	0
stmts	30:16	30:51	9	
water	30:16	0:0	10	i_es_out_mode
op	30:30	0:0	10	=
water	30:32	0:0	10	ES_OUT_MODE_PARTIAL
water	30:51	0:0	10	;
call	32:12	32:24	8	free
arg	32:18	32:24	9	prgms
water	32:18	0:0	10	prgms
water	32:25	0:0	8	;
water	33:8	0:0	8	}
water	34:4	0:0	4	}
call	35:4	35:56	2	es_out_SetMode
arg	35:20	35:40	3	p_input->p->p_es_out
water	35:20	0:0	4	p_input
op	35:27	0:0	4	->
water	35:29	0:0	4	p
op	35:30	0:0	4	->
water	35:32	0:0	4	p_es_out
arg	35:42	35:56	3	i_es_out_mode
water	35:42	0:0	4	i_es_out_mode
water	35:57	0:0	2	;
if	37:4	40:4	2	(i_es_out_mode == ES_OUT_MODE_ALL)
cond	37:8	37:25	3	i_es_out_mode == ES_OUT_MODE_ALL
water	37:8	0:0	4	i_es_out_mode
op	37:22	0:0	4	==
water	37:25	0:0	4	ES_OUT_MODE_ALL
stmts	38:4	40:4	3	
water	38:4	0:0	4	{
call	39:8	39:76	4	demux_Control
arg	39:23	39:48	5	p_input->p->input.p_demux
water	39:23	0:0	6	p_input
op	39:30	0:0	6	->
water	39:32	0:0	6	p
op	39:33	0:0	6	->
water	39:35	0:0	6	input
op	39:40	0:0	6	.
water	39:41	0:0	6	p_demux
arg	39:50	39:65	5	DEMUX_SET_GROUP
water	39:50	0:0	6	DEMUX_SET_GROUP
arg	39:67	39:69	5	-1
op	39:67	0:0	6	-
water	39:68	0:0	6	1
arg	39:71	39:76	5	NULL
water	39:71	0:0	6	NULL
water	39:77	0:0	4	;
water	40:4	0:0	4	}
else	41:4	46:4	2
stmts	41:9	46:4	3	
if	41:9	46:4	4	(i_es_out_mode == ES_OUT_MODE_PARTIAL)
cond	41:13	41:30	5	i_es_out_mode == ES_OUT_MODE_PARTIAL
water	41:13	0:0	6	i_es_out_mode
op	41:27	0:0	6	==
water	41:30	0:0	6	ES_OUT_MODE_PARTIAL
stmts	42:4	46:4	5	
water	42:4	0:0	6	{
call	43:8	44:29	6	demux_Control
arg	43:23	43:48	7	p_input->p->input.p_demux
water	43:23	0:0	8	p_input
op	43:30	0:0	8	->
water	43:32	0:0	8	p
op	43:33	0:0	8	->
water	43:35	0:0	8	input
op	43:40	0:0	8	.
water	43:41	0:0	8	p_demux
arg	43:50	43:65	7	DEMUX_SET_GROUP
water	43:50	0:0	8	DEMUX_SET_GROUP
arg	43:67	43:69	7	-1
op	43:67	0:0	8	-
water	43:68	0:0	8	1
arg	44:23	44:29	7	&list
op	44:23	0:0	8	&
water	44:24	0:0	8	list
water	44:30	0:0	6	;
call	45:8	45:47	6	TAB_CLEAN
arg	45:19	45:31	7	list.i_count
water	45:19	0:0	8	list
op	45:23	0:0	8	.
water	45:24	0:0	8	i_count
arg	45:33	45:47	7	list.p_values
water	45:33	0:0	8	list
op	45:37	0:0	8	.
water	45:38	0:0	8	p_values
water	45:48	0:0	6	;
water	46:4	0:0	6	}
else	47:4	51:4	2
stmts	48:4	51:4	3	
water	48:4	0:0	4	{
call	49:8	50:75	4	demux_Control
arg	49:23	49:48	5	p_input->p->input.p_demux
water	49:23	0:0	6	p_input
op	49:30	0:0	6	->
water	49:32	0:0	6	p
op	49:33	0:0	6	->
water	49:35	0:0	6	input
op	49:40	0:0	6	.
water	49:41	0:0	6	p_demux
arg	49:50	49:65	5	DEMUX_SET_GROUP
water	49:50	0:0	6	DEMUX_SET_GROUP
arg	50:23	50:68	5	es_out_GetGroupForced(p_input->p->p_es_out)
call	50:23	50:67	6	es_out_GetGroupForced
arg	50:46	50:67	7	p_input->p->p_es_out
water	50:46	0:0	8	p_input
op	50:53	0:0	8	->
water	50:55	0:0	8	p
op	50:56	0:0	8	->
water	50:58	0:0	8	p_es_out
arg	50:70	50:75	5	NULL
water	50:70	0:0	6	NULL
water	50:76	0:0	4	;
water	51:4	0:0	4	}

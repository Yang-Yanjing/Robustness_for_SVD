func	2:0	46:0	0	static int	freeze_mouse
params	2:23	0:0	1	
param	2:25	2:43	2	filter_t *	p_filter
param	2:45	2:65	2	vlc_mouse_t *	p_mouse
param	3:18	3:42	2	const vlc_mouse_t *	p_old
param	3:44	3:69	2	const vlc_mouse_t *	p_new
stmnts	0:0	45:23	1	
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
decl	6:4	6:61	2	const video_format_t	*p_fmt_in
op	6:36	0:0	2	=
op	6:38	0:0	2	&
water	6:39	0:0	2	p_filter
op	6:47	0:0	2	->
water	6:49	0:0	2	fmt_in
op	6:55	0:0	2	.
water	6:56	0:0	2	video
if	8:4	10:27	2	(p_new -> i_x < 0 || p_new -> i_x >= ( int ) p_fmt_in -> i_width || p_new -> i_y < 0 || p_new -> i_y >= ( int ) p_fmt_in -> i_height)
cond	8:8	9:55	3	p_new -> i_x < 0 || p_new -> i_x >= ( int ) p_fmt_in -> i_width || p_new -> i_y < 0 || p_new -> i_y >= ( int ) p_fmt_in -> i_height
water	8:8	0:0	4	p_new
op	8:13	0:0	4	->
water	8:15	0:0	4	i_x
op	8:19	0:0	4	<
water	8:21	0:0	4	0
op	8:23	0:0	4	||
water	8:26	0:0	4	p_new
op	8:31	0:0	4	->
water	8:33	0:0	4	i_x
op	8:37	0:0	4	>=
water	8:40	0:0	4	(
water	8:41	0:0	4	int
water	8:44	0:0	4	)
water	8:45	0:0	4	p_fmt_in
op	8:53	0:0	4	->
water	8:55	0:0	4	i_width
op	8:63	0:0	4	||
water	9:8	0:0	4	p_new
op	9:13	0:0	4	->
water	9:15	0:0	4	i_y
op	9:19	0:0	4	<
water	9:21	0:0	4	0
op	9:23	0:0	4	||
water	9:26	0:0	4	p_new
op	9:31	0:0	4	->
water	9:33	0:0	4	i_y
op	9:37	0:0	4	>=
water	9:40	0:0	4	(
water	9:41	0:0	4	int
water	9:44	0:0	4	)
water	9:45	0:0	4	p_fmt_in
op	9:53	0:0	4	->
water	9:55	0:0	4	i_height
stmts	10:8	10:27	3	
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
if	11:4	15:4	2	(unlikely (! p_sys -> b_init ))
cond	11:9	11:32	3	unlikely (! p_sys -> b_init )
call	11:9	11:32	4	unlikely
arg	11:18	11:32	5	!p_sys->b_init
op	11:18	0:0	6	!
water	11:19	0:0	6	p_sys
op	11:24	0:0	6	->
water	11:26	0:0	6	b_init
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
op	13:8	0:0	4	*
water	13:9	0:0	4	p_mouse
op	13:17	0:0	4	=
op	13:19	0:0	4	*
water	13:20	0:0	4	p_new
water	13:25	0:0	4	;
return	14:8	14:26	4	VLC_SUCCESS
water	14:15	0:0	5	VLC_SUCCESS
water	15:4	0:0	4	}
decl	16:4	16:30	2	int32_t	i_base_timeout
op	16:27	0:0	2	=
water	16:29	0:0	2	0
if	17:4	18:28	2	(vlc_mouse_HasPressed (p_old ,p_new ,MOUSE_BUTTON_LEFT ))
cond	17:8	17:62	3	vlc_mouse_HasPressed (p_old ,p_new ,MOUSE_BUTTON_LEFT )
call	17:8	17:62	4	vlc_mouse_HasPressed
arg	17:30	17:35	5	p_old
water	17:30	0:0	6	p_old
arg	17:37	17:42	5	p_new
water	17:37	0:0	6	p_new
arg	17:44	17:62	5	MOUSE_BUTTON_LEFT
water	17:44	0:0	6	MOUSE_BUTTON_LEFT
stmts	18:8	18:28	3	
water	18:8	0:0	4	i_base_timeout
op	18:23	0:0	4	=
water	18:25	0:0	4	100
water	18:28	0:0	4	;
else	19:4	20:27	2
stmts	19:9	20:27	3	
if	19:9	20:27	4	(vlc_mouse_IsLeftPressed (p_new ))
cond	19:13	19:44	5	vlc_mouse_IsLeftPressed (p_new )
call	19:13	19:44	6	vlc_mouse_IsLeftPressed
arg	19:38	19:44	7	p_new
water	19:38	0:0	8	p_new
stmts	20:8	20:27	5	
water	20:8	0:0	6	i_base_timeout
op	20:23	0:0	6	=
water	20:25	0:0	6	50
water	20:27	0:0	6	;
if	21:4	44:4	2	(i_base_timeout > 0)
cond	21:8	21:25	3	i_base_timeout > 0
water	21:8	0:0	4	i_base_timeout
op	21:23	0:0	4	>
water	21:25	0:0	4	0
stmts	22:4	44:4	3	
water	22:4	0:0	4	{
decl	26:8	27:64	4	int32_t	i_min_sq_radius
op	26:32	0:0	4	=
water	26:34	0:0	4	(
water	26:35	0:0	4	p_sys
op	26:40	0:0	4	->
water	26:42	0:0	4	i_width
op	26:49	0:0	4	[
water	26:50	0:0	4	Y_PLANE
op	26:57	0:0	4	]
op	26:59	0:0	4	/
water	26:61	0:0	4	15
water	26:63	0:0	4	)
op	27:32	0:0	4	*
water	27:34	0:0	4	(
water	27:35	0:0	4	p_sys
op	27:40	0:0	4	->
water	27:42	0:0	4	i_width
op	27:49	0:0	4	[
water	27:50	0:0	4	Y_PLANE
op	27:57	0:0	4	]
op	27:59	0:0	4	/
water	27:61	0:0	4	15
water	27:63	0:0	4	)
for	28:8	43:12	4	( int32_t i_r = 0 ;i_r < p_sys -> i_height [ Y_PLANE ];i_r ++)
forinit	0:0	28:29	5	 int32_t i_r = 0 ;
decl	28:14	28:29	6	int32_t	i_r
op	28:26	0:0	6	=
water	28:28	0:0	6	0
cond	28:31	28:60	5	i_r < p_sys -> i_height [ Y_PLANE ]
water	28:31	0:0	6	i_r
op	28:35	0:0	6	<
water	28:37	0:0	6	p_sys
op	28:42	0:0	6	->
water	28:44	0:0	6	i_height
op	28:52	0:0	6	[
water	28:53	0:0	6	Y_PLANE
op	28:60	0:0	6	]
forexpr	28:63	28:66	5	i_r ++
water	28:63	0:0	6	i_r
op	28:66	0:0	6	++
stmts	29:12	43:12	5	
for	29:12	43:12	6	( int32_t i_c = 0 ;i_c < p_sys -> i_width [ Y_PLANE ];i_c ++)
forinit	0:0	29:33	7	 int32_t i_c = 0 ;
decl	29:18	29:33	8	int32_t	i_c
op	29:30	0:0	8	=
water	29:32	0:0	8	0
cond	29:35	29:63	7	i_c < p_sys -> i_width [ Y_PLANE ]
water	29:35	0:0	8	i_c
op	29:39	0:0	8	<
water	29:41	0:0	8	p_sys
op	29:46	0:0	8	->
water	29:48	0:0	8	i_width
op	29:55	0:0	8	[
water	29:56	0:0	8	Y_PLANE
op	29:63	0:0	8	]
forexpr	29:66	29:69	7	i_c ++
water	29:66	0:0	8	i_c
op	29:69	0:0	8	++
stmts	30:12	43:12	7	
water	30:12	0:0	8	{
decl	31:16	34:58	8	int32_t	i_sq_dist
op	31:34	0:0	8	=
water	31:38	0:0	8	(
water	31:40	0:0	8	p_new
op	31:45	0:0	8	->
water	31:47	0:0	8	i_x
op	31:51	0:0	8	-
water	31:53	0:0	8	i_c
water	31:57	0:0	8	)
op	32:36	0:0	8	*
water	32:38	0:0	8	(
water	32:40	0:0	8	p_new
op	32:45	0:0	8	->
water	32:47	0:0	8	i_x
op	32:51	0:0	8	-
water	32:53	0:0	8	i_c
water	32:57	0:0	8	)
op	33:36	0:0	8	+
water	33:38	0:0	8	(
water	33:40	0:0	8	p_new
op	33:45	0:0	8	->
water	33:47	0:0	8	i_y
op	33:51	0:0	8	-
water	33:53	0:0	8	i_r
water	33:57	0:0	8	)
op	34:36	0:0	8	*
water	34:38	0:0	8	(
water	34:40	0:0	8	p_new
op	34:45	0:0	8	->
water	34:47	0:0	8	i_y
op	34:51	0:0	8	-
water	34:53	0:0	8	i_r
water	34:57	0:0	8	)
water	35:16	0:0	8	i_sq_dist
op	35:26	0:0	8	=
call	35:28	35:64	8	__MAX
arg	35:34	35:35	9	0
water	35:34	0:0	10	0
arg	35:37	35:64	9	i_sq_dist-i_min_sq_radius
water	35:37	0:0	10	i_sq_dist
op	35:47	0:0	10	-
water	35:49	0:0	10	i_min_sq_radius
water	35:65	0:0	8	;
decl	36:16	36:73	8	uint16_t	i_timeout
op	36:35	0:0	8	=
call	36:37	36:72	9	__MAX
arg	36:43	36:69	10	i_base_timeout-i_sq_dist
water	36:43	0:0	11	i_base_timeout
op	36:58	0:0	11	-
water	36:60	0:0	11	i_sq_dist
arg	36:71	36:72	10	0
water	36:71	0:0	11	0
if	38:16	39:60	8	(p_sys -> pi_freezing_countdown [ i_r ] [ i_c ] == 0 && i_timeout > 0)
cond	38:21	38:80	9	p_sys -> pi_freezing_countdown [ i_r ] [ i_c ] == 0 && i_timeout > 0
water	38:21	0:0	10	p_sys
op	38:26	0:0	10	->
water	38:28	0:0	10	pi_freezing_countdown
op	38:49	0:0	10	[
water	38:50	0:0	10	i_r
op	38:53	0:0	10	]
op	38:54	0:0	10	[
water	38:55	0:0	10	i_c
op	38:58	0:0	10	]
op	38:60	0:0	10	==
water	38:63	0:0	10	0
op	38:65	0:0	10	&&
water	38:68	0:0	10	i_timeout
op	38:78	0:0	10	>
water	38:80	0:0	10	0
stmts	39:21	39:60	9	
water	39:21	0:0	10	p_sys
op	39:26	0:0	10	->
water	39:28	0:0	10	pb_update_cache
op	39:43	0:0	10	[
water	39:44	0:0	10	i_r
op	39:47	0:0	10	]
op	39:48	0:0	10	[
water	39:49	0:0	10	i_c
op	39:52	0:0	10	]
op	39:54	0:0	10	=
water	39:56	0:0	10	true
water	39:60	0:0	10	;
if	41:16	42:71	8	(p_sys -> pi_freezing_countdown [ i_r ] [ i_c ] < i_timeout)
cond	41:21	41:62	9	p_sys -> pi_freezing_countdown [ i_r ] [ i_c ] < i_timeout
water	41:21	0:0	10	p_sys
op	41:26	0:0	10	->
water	41:28	0:0	10	pi_freezing_countdown
op	41:49	0:0	10	[
water	41:50	0:0	10	i_r
op	41:53	0:0	10	]
op	41:54	0:0	10	[
water	41:55	0:0	10	i_c
op	41:58	0:0	10	]
op	41:60	0:0	10	<
water	41:62	0:0	10	i_timeout
stmts	42:21	42:71	9	
water	42:21	0:0	10	p_sys
op	42:26	0:0	10	->
water	42:28	0:0	10	pi_freezing_countdown
op	42:49	0:0	10	[
water	42:50	0:0	10	i_r
op	42:53	0:0	10	]
op	42:54	0:0	10	[
water	42:55	0:0	10	i_c
op	42:58	0:0	10	]
op	42:60	0:0	10	=
water	42:62	0:0	10	i_timeout
water	42:71	0:0	10	;
water	43:12	0:0	8	}
water	44:4	0:0	4	}
return	45:4	45:23	2	VLC_EGENERIC
water	45:11	0:0	3	VLC_EGENERIC

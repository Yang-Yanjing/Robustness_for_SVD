func	2:0	18:0	0	module_t *	module_find_by_shortcut
params	2:34	0:0	1	
param	2:35	2:59	2	const char *	psz_shortcut
stmnts	0:0	17:15	1	
decl	4:4	4:16	2	size_t	count
decl	5:4	5:46	2	module_t	**list
op	5:20	0:0	2	=
call	5:22	5:45	3	module_list_get
arg	5:39	5:45	4	&count
op	5:39	0:0	5	&
water	5:40	0:0	5	count
for	6:4	15:4	2	( size_t i = 0 ;i < count;i ++)
forinit	0:0	6:21	3	 size_t i = 0 ;
decl	6:9	6:21	4	size_t	i
op	6:18	0:0	4	=
water	6:20	0:0	4	0
cond	6:23	6:27	3	i < count
water	6:23	0:0	4	i
op	6:25	0:0	4	<
water	6:27	0:0	4	count
forexpr	6:34	6:35	3	i ++
water	6:34	0:0	4	i
op	6:35	0:0	4	++
stmts	7:4	15:4	3	
water	7:4	0:0	4	{
decl	8:8	8:38	4	module_t	*module
op	8:25	0:0	4	=
water	8:27	0:0	4	list
op	8:31	0:0	4	[
water	8:32	0:0	4	count
op	8:37	0:0	4	]
for	9:8	14:12	4	( size_t j = 0 ;j < module -> i_shortcuts;j ++)
forinit	0:0	9:25	5	 size_t j = 0 ;
decl	9:13	9:25	6	size_t	j
op	9:22	0:0	6	=
water	9:24	0:0	6	0
cond	9:27	9:39	5	j < module -> i_shortcuts
water	9:27	0:0	6	j
op	9:29	0:0	6	<
water	9:31	0:0	6	module
op	9:37	0:0	6	->
water	9:39	0:0	6	i_shortcuts
forexpr	9:52	9:53	5	j ++
water	9:52	0:0	6	j
op	9:53	0:0	6	++
stmts	10:12	14:12	5	
if	10:12	14:12	6	(!strcmp (module -> pp_shortcuts [ j ] ,psz_shortcut ))
cond	10:16	10:62	7	!strcmp (module -> pp_shortcuts [ j ] ,psz_shortcut )
op	10:16	0:0	8	!
call	10:17	10:62	8	strcmp
arg	10:25	10:48	9	module->pp_shortcuts[j]
water	10:25	0:0	10	module
op	10:31	0:0	10	->
water	10:33	0:0	10	pp_shortcuts
op	10:45	0:0	10	[
water	10:46	0:0	10	j
op	10:47	0:0	10	]
arg	10:50	10:62	9	psz_shortcut
water	10:50	0:0	10	psz_shortcut
stmts	11:12	14:12	7	
water	11:12	0:0	8	{
call	12:16	12:38	8	module_list_free
arg	12:34	12:38	9	list
water	12:34	0:0	10	list
water	12:39	0:0	8	;
return	13:16	13:29	8	module
water	13:23	0:0	9	module
water	14:12	0:0	8	}
water	15:4	0:0	4	}
call	16:4	16:26	2	module_list_free
arg	16:22	16:26	3	list
water	16:22	0:0	4	list
water	16:27	0:0	2	;
return	17:4	17:15	2	NULL
water	17:11	0:0	3	NULL

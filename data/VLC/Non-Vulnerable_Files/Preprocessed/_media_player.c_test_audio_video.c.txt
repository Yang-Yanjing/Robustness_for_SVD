func	2:0	28:0	0	static void	test_audio_video
params	2:28	0:0	1	
param	2:29	2:54	2	libvlc_media_player_t *	mp
stmnts	0:0	27:52	1	
decl	4:4	4:39	2	bool	fs
op	4:12	0:0	2	=
call	4:14	4:38	3	libvlc_get_fullscreen
arg	4:36	4:38	4	mp
water	4:36	0:0	5	mp
call	5:4	5:34	2	libvlc_set_fullscreen
arg	5:26	5:28	3	mp
water	5:26	0:0	4	mp
arg	5:30	5:34	3	true
water	5:30	0:0	4	true
water	5:35	0:0	2	;
call	6:4	6:36	2	assert
arg	6:11	6:36	3	libvlc_get_fullscreen(mp)
call	6:11	6:35	4	libvlc_get_fullscreen
arg	6:33	6:35	5	mp
water	6:33	0:0	6	mp
water	6:37	0:0	2	;
call	7:4	7:35	2	libvlc_set_fullscreen
arg	7:26	7:28	3	mp
water	7:26	0:0	4	mp
arg	7:30	7:35	3	false
water	7:30	0:0	4	false
water	7:36	0:0	2	;
call	8:4	8:37	2	assert
arg	8:11	8:37	3	!libvlc_get_fullscreen(mp)
op	8:11	0:0	4	!
call	8:12	8:36	4	libvlc_get_fullscreen
arg	8:34	8:36	5	mp
water	8:34	0:0	6	mp
water	8:38	0:0	2	;
call	9:4	9:31	2	libvlc_toggle_fullscreen
arg	9:29	9:31	3	mp
water	9:29	0:0	4	mp
water	9:32	0:0	2	;
call	10:4	10:36	2	assert
arg	10:11	10:36	3	libvlc_get_fullscreen(mp)
call	10:11	10:35	4	libvlc_get_fullscreen
arg	10:33	10:35	5	mp
water	10:33	0:0	6	mp
water	10:37	0:0	2	;
call	11:4	11:31	2	libvlc_toggle_fullscreen
arg	11:29	11:31	3	mp
water	11:29	0:0	4	mp
water	11:32	0:0	2	;
call	12:4	12:37	2	assert
arg	12:11	12:37	3	!libvlc_get_fullscreen(mp)
op	12:11	0:0	4	!
call	12:12	12:36	4	libvlc_get_fullscreen
arg	12:34	12:36	5	mp
water	12:34	0:0	6	mp
water	12:38	0:0	2	;
call	13:4	13:32	2	libvlc_set_fullscreen
arg	13:26	13:28	3	mp
water	13:26	0:0	4	mp
arg	13:30	13:32	3	fs
water	13:30	0:0	4	fs
water	13:33	0:0	2	;
call	14:4	14:42	2	assert
arg	14:11	14:42	3	libvlc_get_fullscreen(mp)==fs
call	14:11	14:35	4	libvlc_get_fullscreen
arg	14:33	14:35	5	mp
water	14:33	0:0	6	mp
op	14:37	0:0	4	==
water	14:40	0:0	4	fs
water	14:43	0:0	2	;
call	15:4	15:43	2	assert
arg	15:11	15:43	3	libvlc_video_get_scale(mp)==0.
call	15:11	15:36	4	libvlc_video_get_scale
arg	15:34	15:36	5	mp
water	15:34	0:0	6	mp
op	15:38	0:0	4	==
water	15:41	0:0	4	0
op	15:42	0:0	4	.
water	15:44	0:0	2	;
call	16:4	16:33	2	libvlc_video_set_scale
arg	16:27	16:29	3	mp
water	16:27	0:0	4	mp
arg	16:31	16:33	3	0.
water	16:31	0:0	4	0
op	16:32	0:0	4	.
water	16:34	0:0	2	;
call	17:4	17:34	2	libvlc_video_set_scale
arg	17:27	17:29	3	mp
water	17:27	0:0	4	mp
arg	17:31	17:34	3	2.5
water	17:31	0:0	4	2
op	17:32	0:0	4	.
water	17:33	0:0	4	5
water	17:35	0:0	2	;
call	18:4	18:44	2	assert
arg	18:11	18:44	3	libvlc_video_get_scale(mp)==2.5
call	18:11	18:36	4	libvlc_video_get_scale
arg	18:34	18:36	5	mp
water	18:34	0:0	6	mp
op	18:38	0:0	4	==
water	18:41	0:0	4	2
op	18:42	0:0	4	.
water	18:43	0:0	4	5
water	18:45	0:0	2	;
call	19:4	19:33	2	libvlc_video_set_scale
arg	19:27	19:29	3	mp
water	19:27	0:0	4	mp
arg	19:31	19:33	3	0.
water	19:31	0:0	4	0
op	19:32	0:0	4	.
water	19:34	0:0	2	;
call	20:4	20:33	2	libvlc_video_set_scale
arg	20:27	20:29	3	mp
water	20:27	0:0	4	mp
arg	20:31	20:33	3	0.
water	20:31	0:0	4	0
op	20:32	0:0	4	.
water	20:34	0:0	2	;
call	21:4	21:43	2	assert
arg	21:11	21:43	3	libvlc_video_get_scale(mp)==0.
call	21:11	21:36	4	libvlc_video_get_scale
arg	21:34	21:36	5	mp
water	21:34	0:0	6	mp
op	21:38	0:0	4	==
water	21:41	0:0	4	0
op	21:42	0:0	4	.
water	21:44	0:0	2	;
decl	22:4	22:77	2	libvlc_audio_output_device_t	*aouts
op	22:40	0:0	2	=
call	22:42	22:76	3	libvlc_audio_output_device_enum
arg	22:74	22:76	4	mp
water	22:74	0:0	5	mp
for	23:4	26:4	2	( libvlc_audio_output_device_t * e = aouts ;e != NULL;e = e -> p_next)
forinit	0:0	23:48	3	 libvlc_audio_output_device_t * e = aouts ;
decl	23:9	23:48	4	libvlc_audio_output_device_t	*e
op	23:41	0:0	4	=
water	23:43	0:0	4	aouts
cond	23:50	23:55	3	e != NULL
water	23:50	0:0	4	e
op	23:52	0:0	4	!=
water	23:55	0:0	4	NULL
forexpr	23:61	23:68	3	e = e -> p_next
water	23:61	0:0	4	e
op	23:63	0:0	4	=
water	23:65	0:0	4	e
op	23:66	0:0	4	->
water	23:68	0:0	4	p_next
stmts	24:4	26:4	3	
water	24:4	0:0	4	{
call	25:8	25:64	4	libvlc_audio_output_device_set
arg	25:40	25:42	5	mp
water	25:40	0:0	6	mp
arg	25:44	25:48	5	NULL
water	25:44	0:0	6	NULL
arg	25:50	25:64	5	e->psz_device
water	25:50	0:0	6	e
op	25:51	0:0	6	->
water	25:53	0:0	6	psz_device
water	25:65	0:0	4	;
water	26:4	0:0	4	}
call	27:4	27:51	2	libvlc_audio_output_device_list_release
arg	27:45	27:51	3	aouts
water	27:45	0:0	4	aouts
water	27:52	0:0	2	;

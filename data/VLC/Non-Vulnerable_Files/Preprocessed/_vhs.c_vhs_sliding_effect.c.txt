func	2:0	85:0	0	static int	vhs_sliding_effect
params	2:29	0:0	1	
param	2:31	2:49	2	filter_t *	p_filter
param	2:51	2:72	2	picture_t *	p_pic_out
stmnts	0:0	84:58	1	
decl	3:4	3:41	2	filter_sys_t	*p_sys
op	3:24	0:0	2	=
water	3:26	0:0	2	p_filter
op	3:34	0:0	2	->
water	3:36	0:0	2	p_sys
if	9:4	16:4	2	(p_sys -> i_offset_trigger == 0 || p_sys -> i_sliding_speed != 0)
cond	9:9	10:38	3	p_sys -> i_offset_trigger == 0 || p_sys -> i_sliding_speed != 0
water	9:9	0:0	4	p_sys
op	9:14	0:0	4	->
water	9:16	0:0	4	i_offset_trigger
op	9:33	0:0	4	==
water	9:36	0:0	4	0
op	10:9	0:0	4	||
water	10:12	0:0	4	p_sys
op	10:17	0:0	4	->
water	10:19	0:0	4	i_sliding_speed
op	10:35	0:0	4	!=
water	10:38	0:0	4	0
stmts	10:42	16:4	3	
water	10:42	0:0	4	{
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	i_offset_trigger
op	12:32	0:0	4	=
water	12:34	0:0	4	p_sys
op	12:39	0:0	4	->
water	12:41	0:0	4	i_cur_time
op	13:32	0:0	4	+
water	13:34	0:0	4	(
water	13:35	0:0	4	(
water	13:36	0:0	4	uint64_t
water	13:44	0:0	4	)
call	13:46	13:58	4	vlc_mrand48
water	13:60	0:0	4	)
op	13:62	0:0	4	%
water	13:64	0:0	4	OFFSET_AVERAGE_PERIOD
op	14:32	0:0	4	+
water	14:34	0:0	4	OFFSET_AVERAGE_PERIOD
op	14:56	0:0	4	/
water	14:58	0:0	4	2
water	14:59	0:0	4	;
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	i_offset_ofs
op	15:28	0:0	4	=
water	15:30	0:0	4	0
water	15:31	0:0	4	;
water	16:4	0:0	4	}
else	16:6	21:4	2
stmts	16:11	21:4	3	
if	16:11	21:4	4	(p_sys -> i_offset_trigger <= p_sys -> i_cur_time)
cond	16:15	16:49	5	p_sys -> i_offset_trigger <= p_sys -> i_cur_time
water	16:15	0:0	6	p_sys
op	16:20	0:0	6	->
water	16:22	0:0	6	i_offset_trigger
op	16:39	0:0	6	<=
water	16:42	0:0	6	p_sys
op	16:47	0:0	6	->
water	16:49	0:0	6	i_cur_time
stmts	16:61	21:4	5	
water	16:61	0:0	6	{
water	18:8	0:0	6	p_sys
op	18:13	0:0	6	->
water	18:15	0:0	6	i_offset_trigger
op	18:32	0:0	6	=
water	18:34	0:0	6	0
water	18:35	0:0	6	;
water	19:8	0:0	6	p_sys
op	19:13	0:0	6	->
water	19:15	0:0	6	i_offset_ofs
op	19:28	0:0	6	=
water	19:30	0:0	6	(
water	19:31	0:0	6	uint32_t
water	19:39	0:0	6	)
call	19:40	19:52	6	vlc_mrand48
op	20:28	0:0	6	%
water	20:30	0:0	6	p_sys
op	20:35	0:0	6	->
water	20:37	0:0	6	i_height
op	20:45	0:0	6	[
water	20:46	0:0	6	Y_PLANE
op	20:53	0:0	6	]
water	20:54	0:0	6	;
water	21:4	0:0	6	}
else	22:4	23:31	2
stmts	23:8	23:31	3	
water	23:8	0:0	4	p_sys
op	23:13	0:0	4	->
water	23:15	0:0	4	i_offset_ofs
op	23:28	0:0	4	=
water	23:30	0:0	4	0
water	23:31	0:0	4	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	i_phase_speed
op	28:25	0:0	2	+=
call	28:28	28:58	2	MOD
arg	28:33	28:55	3	(int32_t)vlc_mrand48()
water	28:33	0:0	4	(
water	28:34	0:0	4	int32_t
water	28:41	0:0	4	)
call	28:42	28:54	4	vlc_mrand48
arg	28:57	28:58	3	3
water	28:57	0:0	4	3
op	28:60	0:0	2	-
water	28:62	0:0	2	1
water	28:63	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	i_phase_ofs
op	29:25	0:0	2	+=
water	29:28	0:0	2	p_sys
op	29:33	0:0	2	->
water	29:35	0:0	2	i_phase_speed
water	29:48	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	i_phase_ofs
op	30:26	0:0	2	=
call	30:28	30:88	2	VLC_CLIP
arg	30:38	30:56	3	p_sys->i_phase_ofs
water	30:38	0:0	4	p_sys
op	30:43	0:0	4	->
water	30:45	0:0	4	i_phase_ofs
arg	30:58	30:72	3	-MAX_PHASE_OFS
op	30:58	0:0	4	-
water	30:59	0:0	4	MAX_PHASE_OFS
arg	30:74	30:88	3	+MAX_PHASE_OFS
op	30:74	0:0	4	+
water	30:75	0:0	4	MAX_PHASE_OFS
water	30:89	0:0	2	;
if	31:4	32:32	2	(abs (p_sys -> i_phase_ofs ) >= MAX_PHASE_OFS)
cond	31:9	31:38	3	abs (p_sys -> i_phase_ofs ) >= MAX_PHASE_OFS
call	31:9	31:33	4	abs
arg	31:14	31:33	5	p_sys->i_phase_ofs
water	31:14	0:0	6	p_sys
op	31:19	0:0	6	->
water	31:21	0:0	6	i_phase_ofs
op	31:35	0:0	4	>=
water	31:38	0:0	4	MAX_PHASE_OFS
stmts	32:8	32:32	3	
water	32:8	0:0	4	p_sys
op	32:13	0:0	4	->
water	32:15	0:0	4	i_phase_speed
op	32:29	0:0	4	=
water	32:31	0:0	4	0
water	32:32	0:0	4	;
if	39:4	46:4	2	(( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger == 0 ) && ( p_sys -> i_sliding_speed == 0 ))
cond	39:9	41:44	3	( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger == 0 ) && ( p_sys -> i_sliding_speed == 0 )
water	39:9	0:0	4	(
water	39:11	0:0	4	p_sys
op	39:16	0:0	4	->
water	39:18	0:0	4	i_sliding_stop_trig
op	39:39	0:0	4	==
water	39:42	0:0	4	0
water	39:44	0:0	4	)
op	39:46	0:0	4	&&
water	40:9	0:0	4	(
water	40:11	0:0	4	p_sys
op	40:16	0:0	4	->
water	40:18	0:0	4	i_sliding_trigger
op	40:39	0:0	4	==
water	40:42	0:0	4	0
water	40:44	0:0	4	)
op	40:46	0:0	4	&&
water	41:9	0:0	4	(
water	41:11	0:0	4	p_sys
op	41:16	0:0	4	->
water	41:18	0:0	4	i_sliding_speed
op	41:39	0:0	4	==
water	41:42	0:0	4	0
water	41:44	0:0	4	)
stmts	41:48	46:4	3	
water	41:48	0:0	4	{
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	i_sliding_trigger
op	43:33	0:0	4	=
water	43:35	0:0	4	p_sys
op	43:40	0:0	4	->
water	43:42	0:0	4	i_cur_time
op	44:33	0:0	4	+
water	44:35	0:0	4	(
water	44:36	0:0	4	uint64_t
water	44:44	0:0	4	)
call	44:45	44:57	4	vlc_mrand48
op	44:59	0:0	4	%
water	44:61	0:0	4	SLIDING_AVERAGE_PERIOD
op	45:33	0:0	4	+
water	45:35	0:0	4	SLIDING_AVERAGE_PERIOD
op	45:58	0:0	4	/
water	45:60	0:0	4	2
water	45:61	0:0	4	;
water	46:4	0:0	4	}
else	48:4	60:4	2
stmts	48:9	60:4	3	
if	48:9	60:4	4	(( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_speed == 0 ))
cond	48:14	50:49	5	( p_sys -> i_sliding_stop_trig == 0 ) && ( p_sys -> i_sliding_trigger <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_speed == 0 )
water	48:14	0:0	6	(
water	48:16	0:0	6	p_sys
op	48:21	0:0	6	->
water	48:23	0:0	6	i_sliding_stop_trig
op	48:44	0:0	6	==
water	48:47	0:0	6	0
water	48:49	0:0	6	)
op	48:51	0:0	6	&&
water	49:14	0:0	6	(
water	49:16	0:0	6	p_sys
op	49:21	0:0	6	->
water	49:23	0:0	6	i_sliding_trigger
op	49:44	0:0	6	<=
water	49:47	0:0	6	p_sys
op	49:52	0:0	6	->
water	49:54	0:0	6	i_cur_time
water	49:65	0:0	6	)
op	49:67	0:0	6	&&
water	50:14	0:0	6	(
water	50:16	0:0	6	p_sys
op	50:21	0:0	6	->
water	50:23	0:0	6	i_sliding_speed
op	50:44	0:0	6	==
water	50:47	0:0	6	0
water	50:49	0:0	6	)
stmts	50:53	60:4	5	
water	50:53	0:0	6	{
water	52:8	0:0	6	p_sys
op	52:13	0:0	6	->
water	52:15	0:0	6	i_sliding_trigger
op	52:33	0:0	6	=
water	52:35	0:0	6	0
water	52:36	0:0	6	;
water	53:8	0:0	6	p_sys
op	53:13	0:0	6	->
water	53:15	0:0	6	i_sliding_stop_trig
op	53:35	0:0	6	=
water	53:37	0:0	6	p_sys
op	53:42	0:0	6	->
water	53:44	0:0	6	i_cur_time
op	54:35	0:0	6	+
water	54:37	0:0	6	(
water	54:38	0:0	6	uint64_t
water	54:46	0:0	6	)
call	54:47	54:59	6	vlc_mrand48
op	54:61	0:0	6	%
water	54:63	0:0	6	SLIDING_AVERAGE_DURATION
op	55:35	0:0	6	+
water	55:37	0:0	6	SLIDING_AVERAGE_DURATION
op	55:62	0:0	6	/
water	55:64	0:0	6	2
water	55:65	0:0	6	;
water	56:8	0:0	6	p_sys
op	56:13	0:0	6	->
water	56:15	0:0	6	i_sliding_ofs
op	56:29	0:0	6	=
water	56:31	0:0	6	0
water	56:32	0:0	6	;
water	58:8	0:0	6	p_sys
op	58:13	0:0	6	->
water	58:15	0:0	6	i_sliding_speed
op	58:31	0:0	6	=
call	58:33	58:67	6	MOD
arg	58:38	58:60	7	(int32_t)vlc_mrand48()
water	58:38	0:0	8	(
water	58:39	0:0	8	int32_t
water	58:46	0:0	8	)
call	58:47	58:59	8	vlc_mrand48
arg	58:62	58:67	7	1001
water	58:62	0:0	8	1001
op	58:69	0:0	6	-
water	58:71	0:0	6	500
water	58:74	0:0	6	;
water	59:8	0:0	6	p_sys
op	59:13	0:0	6	->
water	59:15	0:0	6	i_sliding_type_duplicate
op	59:40	0:0	6	=
water	59:42	0:0	6	(
water	59:43	0:0	6	unsigned
water	59:51	0:0	6	)
call	59:52	59:64	6	vlc_mrand48
op	59:66	0:0	6	&
water	59:68	0:0	6	0
water	59:69	0:0	6	x01
water	59:72	0:0	6	;
water	60:4	0:0	6	}
else	62:4	77:4	2
stmts	62:9	77:4	3	
if	62:9	77:4	4	(( p_sys -> i_sliding_stop_trig <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_trigger == 0 ))
cond	62:14	63:49	5	( p_sys -> i_sliding_stop_trig <= p_sys -> i_cur_time ) && ( p_sys -> i_sliding_trigger == 0 )
water	62:14	0:0	6	(
water	62:16	0:0	6	p_sys
op	62:21	0:0	6	->
water	62:23	0:0	6	i_sliding_stop_trig
op	62:44	0:0	6	<=
water	62:47	0:0	6	p_sys
op	62:52	0:0	6	->
water	62:54	0:0	6	i_cur_time
water	62:65	0:0	6	)
op	63:14	0:0	6	&&
water	63:17	0:0	6	(
water	63:19	0:0	6	p_sys
op	63:24	0:0	6	->
water	63:26	0:0	6	i_sliding_trigger
op	63:44	0:0	6	==
water	63:47	0:0	6	0
water	63:49	0:0	6	)
stmts	63:53	77:4	5	
water	63:53	0:0	6	{
if	65:8	66:39	6	(abs (p_sys -> i_sliding_speed ) < 5)
cond	65:13	65:45	7	abs (p_sys -> i_sliding_speed ) < 5
call	65:13	65:41	8	abs
arg	65:18	65:41	9	p_sys->i_sliding_speed
water	65:18	0:0	10	p_sys
op	65:23	0:0	10	->
water	65:25	0:0	10	i_sliding_speed
op	65:43	0:0	8	<
water	65:45	0:0	8	5
stmts	66:12	66:39	7	
water	66:12	0:0	8	p_sys
op	66:17	0:0	8	->
water	66:19	0:0	8	i_sliding_speed
op	66:35	0:0	8	+=
water	66:38	0:0	8	1
water	66:39	0:0	8	;
if	68:8	76:8	6	(abs (p_sys -> i_sliding_ofs ) <abs (p_sys -> i_sliding_speed * p_sys -> i_height [ Y_PLANE ] * ( p_sys -> i_cur_time - p_sys -> i_last_time ) / TIME_UNIT_PER_S ) ||abs (p_sys -> i_sliding_ofs ) < p_sys -> i_height [ Y_PLANE ] * 100 / 20)
cond	68:13	71:79	7	abs (p_sys -> i_sliding_ofs ) <abs (p_sys -> i_sliding_speed * p_sys -> i_height [ Y_PLANE ] * ( p_sys -> i_cur_time - p_sys -> i_last_time ) / TIME_UNIT_PER_S ) ||abs (p_sys -> i_sliding_ofs ) < p_sys -> i_height [ Y_PLANE ] * 100 / 20
call	68:13	68:39	8	abs
arg	68:18	68:39	9	p_sys->i_sliding_ofs
water	68:18	0:0	10	p_sys
op	68:23	0:0	10	->
water	68:25	0:0	10	i_sliding_ofs
op	68:41	0:0	8	<
call	68:43	70:76	8	abs
arg	68:48	70:76	9	p_sys->i_sliding_speed*p_sys->i_height[Y_PLANE]*(p_sys->i_cur_time-p_sys->i_last_time)/TIME_UNIT_PER_S
water	68:48	0:0	10	p_sys
op	68:53	0:0	10	->
water	68:55	0:0	10	i_sliding_speed
op	69:13	0:0	10	*
water	69:15	0:0	10	p_sys
op	69:20	0:0	10	->
water	69:22	0:0	10	i_height
op	69:30	0:0	10	[
water	69:31	0:0	10	Y_PLANE
op	69:38	0:0	10	]
op	70:13	0:0	10	*
water	70:15	0:0	10	(
water	70:17	0:0	10	p_sys
op	70:22	0:0	10	->
water	70:24	0:0	10	i_cur_time
op	70:35	0:0	10	-
water	70:37	0:0	10	p_sys
op	70:42	0:0	10	->
water	70:44	0:0	10	i_last_time
water	70:56	0:0	10	)
op	70:58	0:0	10	/
water	70:60	0:0	10	TIME_UNIT_PER_S
op	71:13	0:0	8	||
call	71:16	71:42	8	abs
arg	71:21	71:42	9	p_sys->i_sliding_ofs
water	71:21	0:0	10	p_sys
op	71:26	0:0	10	->
water	71:28	0:0	10	i_sliding_ofs
op	71:44	0:0	8	<
water	71:46	0:0	8	p_sys
op	71:51	0:0	8	->
water	71:53	0:0	8	i_height
op	71:61	0:0	8	[
water	71:62	0:0	8	Y_PLANE
op	71:69	0:0	8	]
op	71:71	0:0	8	*
water	71:73	0:0	8	100
op	71:77	0:0	8	/
water	71:79	0:0	8	20
stmts	71:84	76:8	7	
water	71:84	0:0	8	{
water	73:12	0:0	8	p_sys
op	73:17	0:0	8	->
water	73:19	0:0	8	i_sliding_ofs
op	73:33	0:0	8	=
water	73:35	0:0	8	p_sys
op	73:40	0:0	8	->
water	73:42	0:0	8	i_sliding_speed
op	73:58	0:0	8	=
water	73:60	0:0	8	0
water	73:61	0:0	8	;
water	74:12	0:0	8	p_sys
op	74:17	0:0	8	->
water	74:19	0:0	8	i_sliding_trigger
op	74:37	0:0	8	=
water	74:39	0:0	8	p_sys
op	74:44	0:0	8	->
water	74:46	0:0	8	i_sliding_stop_trig
op	74:66	0:0	8	=
water	74:68	0:0	8	0
water	74:69	0:0	8	;
water	75:12	0:0	8	p_sys
op	75:17	0:0	8	->
water	75:19	0:0	8	i_sliding_type_duplicate
op	75:44	0:0	8	=
water	75:46	0:0	8	false
water	75:51	0:0	8	;
water	76:8	0:0	8	}
water	77:4	0:0	6	}
water	79:4	0:0	2	p_sys
op	79:9	0:0	2	->
water	79:11	0:0	2	i_sliding_ofs
op	79:25	0:0	2	=
call	79:27	83:63	2	MOD
arg	79:32	82:49	3	p_sys->i_sliding_ofs+p_sys->i_sliding_speed*p_sys->i_height[Y_PLANE]*(p_sys->i_cur_time-p_sys->i_last_time)/TIME_UNIT_PER_S
water	79:32	0:0	4	p_sys
op	79:37	0:0	4	->
water	79:39	0:0	4	i_sliding_ofs
op	80:32	0:0	4	+
water	80:34	0:0	4	p_sys
op	80:39	0:0	4	->
water	80:41	0:0	4	i_sliding_speed
op	80:57	0:0	4	*
water	80:59	0:0	4	p_sys
op	80:64	0:0	4	->
water	80:66	0:0	4	i_height
op	80:74	0:0	4	[
water	80:75	0:0	4	Y_PLANE
op	80:82	0:0	4	]
op	81:32	0:0	4	*
water	81:34	0:0	4	(
water	81:36	0:0	4	p_sys
op	81:41	0:0	4	->
water	81:43	0:0	4	i_cur_time
op	81:54	0:0	4	-
water	81:56	0:0	4	p_sys
op	81:61	0:0	4	->
water	81:63	0:0	4	i_last_time
water	81:74	0:0	4	)
op	82:32	0:0	4	/
water	82:34	0:0	4	TIME_UNIT_PER_S
arg	83:32	83:63	3	p_sys->i_height[Y_PLANE]*100
water	83:32	0:0	4	p_sys
op	83:37	0:0	4	->
water	83:39	0:0	4	i_height
op	83:47	0:0	4	[
water	83:48	0:0	4	Y_PLANE
op	83:55	0:0	4	]
op	83:57	0:0	4	*
water	83:59	0:0	4	100
water	83:64	0:0	2	;
return	84:4	84:58	2	vhs_sliding_effect_apply(p_filter,p_pic_out)
call	84:11	84:57	3	vhs_sliding_effect_apply
arg	84:37	84:45	4	p_filter
water	84:37	0:0	5	p_filter
arg	84:47	84:57	4	p_pic_out
water	84:47	0:0	5	p_pic_out

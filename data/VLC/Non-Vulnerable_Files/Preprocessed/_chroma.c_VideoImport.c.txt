func	2:0	73:0	0	static picture_t *	VideoImport
params	2:29	0:0	1	
param	2:30	2:46	2	filter_t *	filter
param	2:48	2:62	2	picture_t *	src
stmnts	0:0	72:15	1	
decl	4:4	4:37	2	filter_sys_t	*sys
op	4:22	0:0	2	=
water	4:24	0:0	2	filter
op	4:30	0:0	2	->
water	4:32	0:0	2	p_sys
decl	5:4	5:27	2	VdpVideoSurface	surface
decl	6:4	6:17	2	VdpStatus	err
if	7:4	8:17	2	(sys -> vdp == NULL)
cond	7:8	7:20	3	sys -> vdp == NULL
water	7:8	0:0	4	sys
op	7:11	0:0	4	->
water	7:13	0:0	4	vdp
op	7:17	0:0	4	==
water	7:20	0:0	4	NULL
stmts	8:8	8:17	3	
goto	8:8	8:17	4	drop
water	8:13	0:0	5	drop
water	10:4	0:0	2	err
op	10:8	0:0	2	=
call	10:10	13:43	2	vdp_video_surface_create
arg	10:35	10:43	3	sys->vdp
water	10:35	0:0	4	sys
op	10:38	0:0	4	->
water	10:40	0:0	4	vdp
arg	10:45	10:56	3	sys->device
water	10:45	0:0	4	sys
op	10:48	0:0	4	->
water	10:50	0:0	4	device
arg	10:58	10:69	3	sys->chroma
water	10:58	0:0	4	sys
op	10:61	0:0	4	->
water	10:63	0:0	4	chroma
arg	11:35	11:63	3	filter->fmt_in.video.i_width
water	11:35	0:0	4	filter
op	11:41	0:0	4	->
water	11:43	0:0	4	fmt_in
op	11:49	0:0	4	.
water	11:50	0:0	4	video
op	11:55	0:0	4	.
water	11:56	0:0	4	i_width
arg	12:35	12:72	3	filter->fmt_in.video.i_visible_height
water	12:35	0:0	4	filter
op	12:41	0:0	4	->
water	12:43	0:0	4	fmt_in
op	12:49	0:0	4	.
water	12:50	0:0	4	video
op	12:55	0:0	4	.
water	12:56	0:0	4	i_visible_height
arg	13:35	13:43	3	&surface
op	13:35	0:0	4	&
water	13:36	0:0	4	surface
water	13:44	0:0	2	;
if	14:4	19:4	2	(err != VDP_STATUS_OK)
cond	14:8	14:15	3	err != VDP_STATUS_OK
water	14:8	0:0	4	err
op	14:12	0:0	4	!=
water	14:15	0:0	4	VDP_STATUS_OK
stmts	15:4	19:4	3	
water	15:4	0:0	4	{
call	16:8	17:51	4	msg_Err
arg	16:16	16:22	5	filter
water	16:16	0:0	6	filter
arg	16:24	16:49	5	"video %s %s failure: %s"
water	16:24	0:0	6	"video %s %s failure: %s"
arg	16:51	16:60	5	"surface"
water	16:51	0:0	6	"surface"
arg	16:62	16:72	5	"creation"
water	16:62	0:0	6	"creation"
arg	17:16	17:51	5	vdp_get_error_string(sys->vdp,err)
call	17:16	17:50	6	vdp_get_error_string
arg	17:37	17:45	7	sys->vdp
water	17:37	0:0	8	sys
op	17:40	0:0	8	->
water	17:42	0:0	8	vdp
arg	17:47	17:50	7	err
water	17:47	0:0	8	err
water	17:52	0:0	4	;
goto	18:8	18:17	4	drop
water	18:13	0:0	5	drop
water	19:4	0:0	4	}
decl	21:4	21:25	2	const void	*planes[3]
decl	22:4	22:23	2	uint32_t	pitches[3]
for	23:4	28:4	2	( int i = 0 ;i < src -> i_planes;i ++)
forinit	0:0	23:18	3	 int i = 0 ;
decl	23:9	23:18	4	int	i
op	23:15	0:0	4	=
water	23:17	0:0	4	0
cond	23:20	23:29	3	i < src -> i_planes
water	23:20	0:0	4	i
op	23:22	0:0	4	<
water	23:24	0:0	4	src
op	23:27	0:0	4	->
water	23:29	0:0	4	i_planes
forexpr	23:39	23:40	3	i ++
water	23:39	0:0	4	i
op	23:40	0:0	4	++
stmts	24:4	28:4	3	
water	24:4	0:0	4	{
water	25:8	0:0	4	planes
op	25:14	0:0	4	[
water	25:15	0:0	4	i
op	25:16	0:0	4	]
op	25:18	0:0	4	=
water	25:20	0:0	4	src
op	25:23	0:0	4	->
water	25:25	0:0	4	p
op	25:26	0:0	4	[
water	25:27	0:0	4	i
op	25:28	0:0	4	]
op	25:29	0:0	4	.
water	25:30	0:0	4	p_pixels
op	26:18	0:0	4	+
water	26:20	0:0	4	filter
op	26:26	0:0	4	->
water	26:28	0:0	4	fmt_in
op	26:34	0:0	4	.
water	26:35	0:0	4	video
op	26:40	0:0	4	.
water	26:41	0:0	4	i_y_offset
op	26:52	0:0	4	*
water	26:54	0:0	4	src
op	26:57	0:0	4	->
water	26:59	0:0	4	p
op	26:60	0:0	4	[
water	26:61	0:0	4	i
op	26:62	0:0	4	]
op	26:63	0:0	4	.
water	26:64	0:0	4	i_pitch
water	26:71	0:0	4	;
water	27:8	0:0	4	pitches
op	27:15	0:0	4	[
water	27:16	0:0	4	i
op	27:17	0:0	4	]
op	27:19	0:0	4	=
water	27:21	0:0	4	src
op	27:24	0:0	4	->
water	27:26	0:0	4	p
op	27:27	0:0	4	[
water	27:28	0:0	4	i
op	27:29	0:0	4	]
op	27:30	0:0	4	.
water	27:31	0:0	4	i_pitch
water	27:38	0:0	4	;
water	28:4	0:0	4	}
if	29:4	35:4	2	(src -> format . i_chroma == VLC_CODEC_I420)
cond	29:8	29:32	3	src -> format . i_chroma == VLC_CODEC_I420
water	29:8	0:0	4	src
op	29:11	0:0	4	->
water	29:13	0:0	4	format
op	29:19	0:0	4	.
water	29:20	0:0	4	i_chroma
op	29:29	0:0	4	==
water	29:32	0:0	4	VLC_CODEC_I420
stmts	30:4	35:4	3	
water	30:4	0:0	4	{
water	31:8	0:0	4	planes
op	31:14	0:0	4	[
water	31:15	0:0	4	1
op	31:16	0:0	4	]
op	31:18	0:0	4	=
water	31:20	0:0	4	src
op	31:23	0:0	4	->
water	31:25	0:0	4	p
op	31:26	0:0	4	[
water	31:27	0:0	4	2
op	31:28	0:0	4	]
op	31:29	0:0	4	.
water	31:30	0:0	4	p_pixels
water	31:38	0:0	4	;
water	32:8	0:0	4	planes
op	32:14	0:0	4	[
water	32:15	0:0	4	2
op	32:16	0:0	4	]
op	32:18	0:0	4	=
water	32:20	0:0	4	src
op	32:23	0:0	4	->
water	32:25	0:0	4	p
op	32:26	0:0	4	[
water	32:27	0:0	4	1
op	32:28	0:0	4	]
op	32:29	0:0	4	.
water	32:30	0:0	4	p_pixels
water	32:38	0:0	4	;
water	33:8	0:0	4	pitches
op	33:15	0:0	4	[
water	33:16	0:0	4	1
op	33:17	0:0	4	]
op	33:19	0:0	4	=
water	33:21	0:0	4	src
op	33:24	0:0	4	->
water	33:26	0:0	4	p
op	33:27	0:0	4	[
water	33:28	0:0	4	2
op	33:29	0:0	4	]
op	33:30	0:0	4	.
water	33:31	0:0	4	i_pitch
water	33:38	0:0	4	;
water	34:8	0:0	4	pitches
op	34:15	0:0	4	[
water	34:16	0:0	4	2
op	34:17	0:0	4	]
op	34:19	0:0	4	=
water	34:21	0:0	4	src
op	34:24	0:0	4	->
water	34:26	0:0	4	p
op	34:27	0:0	4	[
water	34:28	0:0	4	1
op	34:29	0:0	4	]
op	34:30	0:0	4	.
water	34:31	0:0	4	i_pitch
water	34:38	0:0	4	;
water	35:4	0:0	4	}
if	36:4	43:4	2	(src -> format . i_chroma == VLC_CODEC_I420 || src -> format . i_chroma == VLC_CODEC_YV12 || src -> format . i_chroma == VLC_CODEC_NV12)
cond	36:8	38:32	3	src -> format . i_chroma == VLC_CODEC_I420 || src -> format . i_chroma == VLC_CODEC_YV12 || src -> format . i_chroma == VLC_CODEC_NV12
water	36:8	0:0	4	src
op	36:11	0:0	4	->
water	36:13	0:0	4	format
op	36:19	0:0	4	.
water	36:20	0:0	4	i_chroma
op	36:29	0:0	4	==
water	36:32	0:0	4	VLC_CODEC_I420
op	37:5	0:0	4	||
water	37:8	0:0	4	src
op	37:11	0:0	4	->
water	37:13	0:0	4	format
op	37:19	0:0	4	.
water	37:20	0:0	4	i_chroma
op	37:29	0:0	4	==
water	37:32	0:0	4	VLC_CODEC_YV12
op	38:5	0:0	4	||
water	38:8	0:0	4	src
op	38:11	0:0	4	->
water	38:13	0:0	4	format
op	38:19	0:0	4	.
water	38:20	0:0	4	i_chroma
op	38:29	0:0	4	==
water	38:32	0:0	4	VLC_CODEC_NV12
stmts	39:4	43:4	3	
water	39:4	0:0	4	{
for	40:8	42:75	4	( int i = 1 ;i < src -> i_planes;i ++)
forinit	0:0	40:22	5	 int i = 1 ;
decl	40:13	40:22	6	int	i
op	40:19	0:0	6	=
water	40:21	0:0	6	1
cond	40:24	40:33	5	i < src -> i_planes
water	40:24	0:0	6	i
op	40:26	0:0	6	<
water	40:28	0:0	6	src
op	40:31	0:0	6	->
water	40:33	0:0	6	i_planes
forexpr	40:43	40:44	5	i ++
water	40:43	0:0	6	i
op	40:44	0:0	6	++
stmts	41:12	42:75	5	
water	41:12	0:0	6	planes
op	41:18	0:0	6	[
water	41:19	0:0	6	i
op	41:20	0:0	6	]
op	41:22	0:0	6	=
water	41:24	0:0	6	(
water	41:25	0:0	6	(
water	41:26	0:0	6	const
water	41:32	0:0	6	uint8_t
op	41:40	0:0	6	*
water	41:41	0:0	6	)
water	41:42	0:0	6	planes
op	41:48	0:0	6	[
water	41:49	0:0	6	i
op	41:50	0:0	6	]
water	41:51	0:0	6	)
op	42:16	0:0	6	+
water	42:18	0:0	6	(
water	42:19	0:0	6	filter
op	42:25	0:0	6	->
water	42:27	0:0	6	fmt_in
op	42:33	0:0	6	.
water	42:34	0:0	6	video
op	42:39	0:0	6	.
water	42:40	0:0	6	i_y_offset
op	42:51	0:0	6	/
water	42:53	0:0	6	2
water	42:54	0:0	6	)
op	42:56	0:0	6	*
water	42:58	0:0	6	src
op	42:61	0:0	6	->
water	42:63	0:0	6	p
op	42:64	0:0	6	[
water	42:65	0:0	6	i
op	42:66	0:0	6	]
op	42:67	0:0	6	.
water	42:68	0:0	6	i_pitch
water	42:75	0:0	6	;
water	43:4	0:0	4	}
water	44:4	0:0	2	err
op	44:8	0:0	2	=
call	44:10	45:60	2	vdp_video_surface_put_bits_y_cb_cr
arg	44:45	44:53	3	sys->vdp
water	44:45	0:0	4	sys
op	44:48	0:0	4	->
water	44:50	0:0	4	vdp
arg	44:55	44:62	3	surface
water	44:55	0:0	4	surface
arg	44:64	44:75	3	sys->format
water	44:64	0:0	4	sys
op	44:67	0:0	4	->
water	44:69	0:0	4	format
arg	45:45	45:51	3	planes
water	45:45	0:0	4	planes
arg	45:53	45:60	3	pitches
water	45:53	0:0	4	pitches
water	45:61	0:0	2	;
if	46:4	51:4	2	(err != VDP_STATUS_OK)
cond	46:8	46:15	3	err != VDP_STATUS_OK
water	46:8	0:0	4	err
op	46:12	0:0	4	!=
water	46:15	0:0	4	VDP_STATUS_OK
stmts	47:4	51:4	3	
water	47:4	0:0	4	{
call	48:8	49:51	4	msg_Err
arg	48:16	48:22	5	filter
water	48:16	0:0	6	filter
arg	48:24	48:49	5	"video %s %s failure: %s"
water	48:24	0:0	6	"video %s %s failure: %s"
arg	48:51	48:60	5	"surface"
water	48:51	0:0	6	"surface"
arg	48:62	48:70	5	"import"
water	48:62	0:0	6	"import"
arg	49:16	49:51	5	vdp_get_error_string(sys->vdp,err)
call	49:16	49:50	6	vdp_get_error_string
arg	49:37	49:45	7	sys->vdp
water	49:37	0:0	8	sys
op	49:40	0:0	8	->
water	49:42	0:0	8	vdp
arg	49:47	49:50	7	err
water	49:47	0:0	8	err
water	49:52	0:0	4	;
goto	50:8	50:18	4	error
water	50:13	0:0	5	error
water	51:4	0:0	4	}
decl	53:4	53:36	2	video_format_t	fmt
op	53:23	0:0	2	=
water	53:25	0:0	2	src
op	53:28	0:0	2	->
water	53:30	0:0	2	format
water	54:4	0:0	2	fmt
op	54:7	0:0	2	.
water	54:8	0:0	2	i_chroma
op	54:17	0:0	2	=
water	54:19	0:0	2	(
water	54:20	0:0	2	sys
op	54:23	0:0	2	->
water	54:25	0:0	2	chroma
op	54:32	0:0	2	==
water	54:35	0:0	2	VDP_CHROMA_TYPE_420
water	54:54	0:0	2	)
water	55:8	0:0	2	?
water	55:10	0:0	2	VLC_CODEC_VDPAU_VIDEO_420
water	55:36	0:0	2	:
water	55:38	0:0	2	VLC_CODEC_VDPAU_VIDEO_422
water	55:63	0:0	2	;
decl	56:4	56:48	2	picture_t	*dst
op	56:19	0:0	2	=
call	56:21	56:47	3	picture_NewFromFormat
arg	56:43	56:47	4	&fmt
op	56:43	0:0	5	&
water	56:44	0:0	5	fmt
if	57:4	58:18	2	(unlikely (dst == NULL ))
cond	57:8	57:28	3	unlikely (dst == NULL )
call	57:8	57:28	4	unlikely
arg	57:17	57:28	5	dst==NULL
water	57:17	0:0	6	dst
op	57:21	0:0	6	==
water	57:24	0:0	6	NULL
stmts	58:8	58:18	3	
goto	58:8	58:18	4	error
water	58:13	0:0	5	error
call	59:4	59:35	2	picture_CopyProperties
arg	59:27	59:30	3	dst
water	59:27	0:0	4	dst
arg	59:32	59:35	3	src
water	59:32	0:0	4	src
water	59:36	0:0	2	;
call	60:4	60:23	2	picture_Release
arg	60:20	60:23	3	src
water	60:20	0:0	4	src
water	60:24	0:0	2	;
water	61:4	0:0	2	err
op	61:8	0:0	2	=
call	61:10	61:53	2	vlc_vdp_video_attach
arg	61:31	61:39	3	sys->vdp
water	61:31	0:0	4	sys
op	61:34	0:0	4	->
water	61:36	0:0	4	vdp
arg	61:41	61:48	3	surface
water	61:41	0:0	4	surface
arg	61:50	61:53	3	dst
water	61:50	0:0	4	dst
water	61:54	0:0	2	;
if	62:4	66:4	2	(unlikely (err != VDP_STATUS_OK ))
cond	62:8	62:37	3	unlikely (err != VDP_STATUS_OK )
call	62:8	62:37	4	unlikely
arg	62:17	62:37	5	err!=VDP_STATUS_OK
water	62:17	0:0	6	err
op	62:21	0:0	6	!=
water	62:24	0:0	6	VDP_STATUS_OK
stmts	63:4	66:4	3	
water	63:4	0:0	4	{
call	64:8	64:27	4	picture_Release
arg	64:24	64:27	5	dst
water	64:24	0:0	6	dst
water	64:28	0:0	4	;
water	65:8	0:0	4	dst
op	65:12	0:0	4	=
water	65:14	0:0	4	NULL
water	65:18	0:0	4	;
water	66:4	0:0	4	}
return	67:4	67:14	2	dst
water	67:11	0:0	3	dst
label	68:0	68:5	2	error :
call	69:4	69:47	2	vdp_video_surface_destroy
arg	69:30	69:38	3	sys->vdp
water	69:30	0:0	4	sys
op	69:33	0:0	4	->
water	69:35	0:0	4	vdp
arg	69:40	69:47	3	surface
water	69:40	0:0	4	surface
water	69:48	0:0	2	;
label	70:0	70:4	2	drop :
call	71:4	71:23	2	picture_Release
arg	71:20	71:23	3	src
water	71:20	0:0	4	src
water	71:24	0:0	2	;
return	72:4	72:15	2	NULL
water	72:11	0:0	3	NULL

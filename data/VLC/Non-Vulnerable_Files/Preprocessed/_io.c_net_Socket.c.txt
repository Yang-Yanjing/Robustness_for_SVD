func	2:0	45:0	0	int	net_Socket
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	p_this
param	2:38	2:48	2	int	family
param	2:50	2:62	2	int	socktype
param	3:16	3:28	2	int	protocol
stmnts	0:0	44:13	1	
decl	5:4	5:58	2	int	fd
op	5:11	0:0	2	=
call	5:13	5:57	3	vlc_socket
arg	5:25	5:31	4	family
water	5:25	0:0	5	family
arg	5:33	5:41	4	socktype
water	5:33	0:0	5	socktype
arg	5:43	5:51	4	protocol
water	5:43	0:0	5	protocol
arg	5:53	5:57	4	true
water	5:53	0:0	5	true
if	6:4	12:4	2	(fd == - 1)
cond	6:8	6:15	3	fd == - 1
water	6:8	0:0	4	fd
op	6:11	0:0	4	==
op	6:14	0:0	4	-
water	6:15	0:0	4	1
stmts	7:4	12:4	3	
water	7:4	0:0	4	{
if	8:8	10:47	4	(net_errno != EAFNOSUPPORT)
cond	8:12	8:25	5	net_errno != EAFNOSUPPORT
water	8:12	0:0	6	net_errno
op	8:22	0:0	6	!=
water	8:25	0:0	6	EAFNOSUPPORT
stmts	9:12	10:47	5	
call	9:12	10:46	6	msg_Err
arg	9:21	9:27	7	p_this
water	9:21	0:0	8	p_this
arg	9:29	9:55	7	"cannot create socket: %s"
water	9:29	0:0	8	"cannot create socket: %s"
arg	10:21	10:46	7	vlc_strerror_c(net_errno)
call	10:21	10:45	8	vlc_strerror_c
arg	10:36	10:45	9	net_errno
water	10:36	0:0	10	net_errno
water	10:47	0:0	6	;
return	11:8	11:17	4	-1
op	11:15	0:0	5	-
water	11:16	0:0	5	1
water	12:4	0:0	4	}
call	13:4	13:71	2	setsockopt
arg	13:16	13:18	3	fd
water	13:16	0:0	4	fd
arg	13:20	13:30	3	SOL_SOCKET
water	13:20	0:0	4	SOL_SOCKET
arg	13:32	13:44	3	SO_REUSEADDR
water	13:32	0:0	4	SO_REUSEADDR
arg	13:46	13:57	3	&(int){1}
op	13:46	0:0	4	&
water	13:47	0:0	4	(
water	13:48	0:0	4	int
water	13:51	0:0	4	)
water	13:52	0:0	4	{
water	13:54	0:0	4	1
water	13:56	0:0	4	}
arg	13:59	13:71	3	sizeof(int)
op	13:59	0:0	4	sizeof
water	13:66	0:0	4	(
water	13:67	0:0	4	int
water	13:70	0:0	4	)
water	13:72	0:0	2	;
if	19:4	20:77	2	(family == AF_INET6)
cond	19:8	19:18	3	family == AF_INET6
water	19:8	0:0	4	family
op	19:15	0:0	4	==
water	19:18	0:0	4	AF_INET6
stmts	20:8	20:77	3	
call	20:8	20:76	4	setsockopt
arg	20:20	20:22	5	fd
water	20:20	0:0	6	fd
arg	20:24	20:36	5	IPPROTO_IPV6
water	20:24	0:0	6	IPPROTO_IPV6
arg	20:38	20:49	5	IPV6_V6ONLY
water	20:38	0:0	6	IPV6_V6ONLY
arg	20:51	20:62	5	&(int){1}
op	20:51	0:0	6	&
water	20:52	0:0	6	(
water	20:53	0:0	6	int
water	20:56	0:0	6	)
water	20:57	0:0	6	{
water	20:59	0:0	6	1
water	20:61	0:0	6	}
arg	20:64	20:76	5	sizeof(int)
op	20:64	0:0	6	sizeof
water	20:71	0:0	6	(
water	20:72	0:0	6	int
water	20:75	0:0	6	)
water	20:77	0:0	4	;
if	28:4	30:74	2	(family == AF_INET6)
cond	28:8	28:18	3	family == AF_INET6
water	28:8	0:0	4	family
op	28:15	0:0	4	==
water	28:18	0:0	4	AF_INET6
stmts	29:8	30:74	3	
call	29:8	30:73	4	setsockopt
arg	29:20	29:22	5	fd
water	29:20	0:0	6	fd
arg	29:24	29:36	5	IPPROTO_IPV6
water	29:24	0:0	6	IPPROTO_IPV6
arg	29:38	29:59	5	IPV6_PROTECTION_LEVEL
water	29:38	0:0	6	IPV6_PROTECTION_LEVEL
arg	30:20	30:59	5	&(int){PROTECTION_LEVEL_UNRESTRICTED}
op	30:20	0:0	6	&
water	30:21	0:0	6	(
water	30:22	0:0	6	int
water	30:25	0:0	6	)
water	30:26	0:0	6	{
water	30:28	0:0	6	PROTECTION_LEVEL_UNRESTRICTED
water	30:58	0:0	6	}
arg	30:61	30:73	5	sizeof(int)
op	30:61	0:0	6	sizeof
water	30:68	0:0	6	(
water	30:69	0:0	6	int
water	30:72	0:0	6	)
water	30:74	0:0	4	;
if	33:4	42:4	2	(socktype == SOL_DCCP)
cond	33:8	33:20	3	socktype == SOL_DCCP
water	33:8	0:0	4	socktype
op	33:17	0:0	4	==
water	33:20	0:0	4	SOL_DCCP
stmts	34:4	42:4	3	
water	34:4	0:0	4	{
decl	35:8	35:64	4	char	*dccps
op	35:20	0:0	4	=
call	35:22	35:63	5	var_InheritString
arg	35:41	35:47	6	p_this
water	35:41	0:0	7	p_this
arg	35:49	35:63	6	"dccp-service"
water	35:49	0:0	7	"dccp-service"
if	36:8	41:8	4	(dccps != NULL)
cond	36:12	36:21	5	dccps != NULL
water	36:12	0:0	6	dccps
op	36:18	0:0	6	!=
water	36:21	0:0	6	NULL
stmts	37:8	41:8	5	
water	37:8	0:0	6	{
call	38:12	39:49	6	setsockopt
arg	38:24	38:26	7	fd
water	38:24	0:0	8	fd
arg	38:28	38:36	7	SOL_DCCP
water	38:28	0:0	8	SOL_DCCP
arg	38:38	38:58	7	DCCP_SOCKOPT_SERVICE
water	38:38	0:0	8	DCCP_SOCKOPT_SERVICE
arg	38:60	38:65	7	dccps
water	38:60	0:0	8	dccps
arg	39:24	39:49	7	(strlen(dccps)+3)&~3
water	39:24	0:0	8	(
call	39:25	39:38	8	strlen
arg	39:33	39:38	9	dccps
water	39:33	0:0	10	dccps
op	39:40	0:0	8	+
water	39:42	0:0	8	3
water	39:43	0:0	8	)
op	39:45	0:0	8	&
water	39:47	0:0	8	~3
water	39:50	0:0	6	;
call	40:12	40:23	6	free
arg	40:18	40:23	7	dccps
water	40:18	0:0	8	dccps
water	40:24	0:0	6	;
water	41:8	0:0	6	}
water	42:4	0:0	4	}
return	44:4	44:13	2	fd
water	44:11	0:0	3	fd

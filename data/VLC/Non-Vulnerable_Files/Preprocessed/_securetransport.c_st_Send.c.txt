func	2:0	43:0	0	static int	st_Send
params	2:19	0:0	1	
param	2:20	2:32	2	void *	opaque
param	2:34	2:49	2	const void *	buf
param	2:51	2:64	2	size_t	length
stmnts	0:0	42:61	1	
decl	4:4	4:31	2	vlc_tls_t	*session
op	4:23	0:0	2	=
water	4:25	0:0	2	opaque
decl	5:4	5:37	2	vlc_tls_sys_t	*sys
op	5:23	0:0	2	=
water	5:25	0:0	2	session
op	5:32	0:0	2	->
water	5:34	0:0	2	sys
decl	6:4	6:24	2	OSStatus	ret
op	6:17	0:0	2	=
water	6:19	0:0	2	noErr
decl	22:4	22:54	2	int	againErr
op	22:17	0:0	2	=
water	22:19	0:0	2	sys
op	22:22	0:0	2	->
water	22:24	0:0	2	b_server_mode
water	22:38	0:0	2	?
water	22:40	0:0	2	EAGAIN
water	22:47	0:0	2	:
water	22:49	0:0	2	EINTR
decl	23:4	23:21	2	size_t	actualSize
if	24:4	34:4	2	(sys -> i_send_buffered_bytes > 0)
cond	24:8	24:37	3	sys -> i_send_buffered_bytes > 0
water	24:8	0:0	4	sys
op	24:11	0:0	4	->
water	24:13	0:0	4	i_send_buffered_bytes
op	24:35	0:0	4	>
water	24:37	0:0	4	0
stmts	24:40	34:4	3	
water	24:40	0:0	4	{
water	25:8	0:0	4	ret
op	25:12	0:0	4	=
call	25:14	25:59	4	SSLWrite
arg	25:23	25:37	5	sys->p_context
water	25:23	0:0	6	sys
op	25:26	0:0	6	->
water	25:28	0:0	6	p_context
arg	25:39	25:43	5	NULL
water	25:39	0:0	6	NULL
arg	25:45	25:46	5	0
water	25:45	0:0	6	0
arg	25:48	25:59	5	&actualSize
op	25:48	0:0	6	&
water	25:49	0:0	6	actualSize
water	25:60	0:0	4	;
if	26:8	30:8	4	(ret == noErr)
cond	26:12	26:19	5	ret == noErr
water	26:12	0:0	6	ret
op	26:16	0:0	6	==
water	26:19	0:0	6	noErr
stmts	26:26	30:8	5	
water	26:26	0:0	6	{
water	28:12	0:0	6	actualSize
op	28:23	0:0	6	=
water	28:25	0:0	6	sys
op	28:28	0:0	6	->
water	28:30	0:0	6	i_send_buffered_bytes
water	28:51	0:0	6	;
water	29:12	0:0	6	sys
op	29:15	0:0	6	->
water	29:17	0:0	6	i_send_buffered_bytes
op	29:39	0:0	6	=
water	29:41	0:0	6	0
water	29:42	0:0	6	;
water	30:8	0:0	6	}
else	30:10	33:8	4
stmts	30:15	33:8	5	
if	30:15	33:8	6	(ret == errSSLWouldBlock)
cond	30:19	30:26	7	ret == errSSLWouldBlock
water	30:19	0:0	8	ret
op	30:23	0:0	8	==
water	30:26	0:0	8	errSSLWouldBlock
stmts	30:44	33:8	7	
water	30:44	0:0	8	{
water	31:12	0:0	8	errno
op	31:18	0:0	8	=
water	31:20	0:0	8	againErr
water	31:28	0:0	8	;
return	32:12	32:21	8	-1
op	32:19	0:0	9	-
water	32:20	0:0	9	1
water	33:8	0:0	8	}
water	34:4	0:0	4	}
else	34:6	41:4	2
stmts	34:11	41:4	3	
water	34:11	0:0	4	{
water	35:8	0:0	4	ret
op	35:12	0:0	4	=
call	35:14	35:63	4	SSLWrite
arg	35:23	35:37	5	sys->p_context
water	35:23	0:0	6	sys
op	35:26	0:0	6	->
water	35:28	0:0	6	p_context
arg	35:39	35:42	5	buf
water	35:39	0:0	6	buf
arg	35:44	35:50	5	length
water	35:44	0:0	6	length
arg	35:52	35:63	5	&actualSize
op	35:52	0:0	6	&
water	35:53	0:0	6	actualSize
water	35:64	0:0	4	;
if	36:8	40:8	4	(ret == errSSLWouldBlock)
cond	36:12	36:19	5	ret == errSSLWouldBlock
water	36:12	0:0	6	ret
op	36:16	0:0	6	==
water	36:19	0:0	6	errSSLWouldBlock
stmts	36:37	40:8	5	
water	36:37	0:0	6	{
water	37:12	0:0	6	sys
op	37:15	0:0	6	->
water	37:17	0:0	6	i_send_buffered_bytes
op	37:39	0:0	6	=
water	37:41	0:0	6	length
water	37:47	0:0	6	;
water	38:12	0:0	6	errno
op	38:18	0:0	6	=
water	38:20	0:0	6	againErr
water	38:28	0:0	6	;
return	39:12	39:21	6	-1
op	39:19	0:0	7	-
water	39:20	0:0	7	1
water	40:8	0:0	6	}
water	41:4	0:0	4	}
return	42:4	42:61	2	ret!=noErr?st_Error(session,ret):actualSize
water	42:11	0:0	3	ret
op	42:15	0:0	3	!=
water	42:18	0:0	3	noErr
water	42:24	0:0	3	?
call	42:26	42:47	3	st_Error
arg	42:35	42:42	4	session
water	42:35	0:0	5	session
arg	42:44	42:47	4	ret
water	42:44	0:0	5	ret
water	42:49	0:0	3	:
water	42:51	0:0	3	actualSize

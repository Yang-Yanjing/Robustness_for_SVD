func	2:0	234:0	0	int	config_LoadCmdLine
params	2:22	0:0	1	
param	2:24	2:44	2	vlc_object_t *	p_this
param	2:46	2:56	2	int	i_argc
param	3:24	3:47	2	const char *	ppsz_argv[]
param	3:49	3:61	2	int *	pindex
stmnts	0:0	233:14	1	
decl	5:4	5:64	2	int	i_cmd
water	5:13	0:0	2	,
decl	5:4	5:64	2	int	i_index
water	5:22	0:0	2	,
decl	5:4	5:64	2	int	i_opts
water	5:30	0:0	2	,
decl	5:4	5:64	2	int	i_shortopts
water	5:43	0:0	2	,
decl	5:4	5:64	2	int	flag
water	5:49	0:0	2	,
decl	5:4	5:64	2	int	i_verbose
op	5:61	0:0	2	=
water	5:63	0:0	2	0
decl	6:4	6:33	2	struct vlc_option	*p_longopts
decl	7:4	7:33	2	const char	**argv_copy
op	7:27	0:0	2	=
water	7:29	0:0	2	NULL
decl	10:4	10:38	2	module_config_t	*pp_shortopts[256]
decl	11:4	11:23	2	char	*psz_shortopts
decl	13:4	13:16	2	size_t	count
decl	14:4	14:46	2	module_t	**list
op	14:20	0:0	2	=
call	14:22	14:45	3	module_list_get
arg	14:39	14:45	4	&count
op	14:39	0:0	5	&
water	14:40	0:0	5	count
water	18:4	0:0	2	i_opts
op	18:11	0:0	2	=
water	18:13	0:0	2	0
water	18:14	0:0	2	;
for	19:4	26:4	2	( size_t i = 0 ;i < count;i ++)
forinit	0:0	19:21	3	 size_t i = 0 ;
decl	19:9	19:21	4	size_t	i
op	19:18	0:0	4	=
water	19:20	0:0	4	0
cond	19:23	19:27	3	i < count
water	19:23	0:0	4	i
op	19:25	0:0	4	<
water	19:27	0:0	4	count
forexpr	19:34	19:35	3	i ++
water	19:34	0:0	4	i
op	19:35	0:0	4	++
stmts	20:4	26:4	3	
water	20:4	0:0	4	{
decl	24:8	24:36	4	module_t	*p_parser
op	24:27	0:0	4	=
water	24:29	0:0	4	list
op	24:33	0:0	4	[
water	24:34	0:0	4	i
op	24:35	0:0	4	]
water	25:8	0:0	4	i_opts
op	25:15	0:0	4	+=
water	25:18	0:0	4	p_parser
op	25:26	0:0	4	->
water	25:28	0:0	4	i_config_items
op	25:43	0:0	4	+
water	25:45	0:0	4	2
op	25:47	0:0	4	*
water	25:49	0:0	4	p_parser
op	25:57	0:0	4	->
water	25:59	0:0	4	i_bool_items
water	25:71	0:0	4	;
water	26:4	0:0	4	}
water	27:4	0:0	2	p_longopts
op	27:15	0:0	2	=
call	27:17	27:60	2	malloc
arg	27:25	27:60	3	sizeof(*p_longopts)*(i_opts+1)
op	27:25	0:0	4	sizeof
water	27:31	0:0	4	(
op	27:32	0:0	4	*
water	27:33	0:0	4	p_longopts
water	27:43	0:0	4	)
op	27:45	0:0	4	*
water	27:47	0:0	4	(
water	27:48	0:0	4	i_opts
op	27:55	0:0	4	+
water	27:57	0:0	4	1
water	27:58	0:0	4	)
water	27:61	0:0	2	;
if	28:4	32:4	2	(p_longopts == NULL)
cond	28:8	28:22	3	p_longopts == NULL
water	28:8	0:0	4	p_longopts
op	28:19	0:0	4	==
water	28:22	0:0	4	NULL
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
call	30:8	30:30	4	module_list_free
arg	30:26	30:30	5	list
water	30:26	0:0	6	list
water	30:31	0:0	4	;
return	31:8	31:17	4	-1
op	31:15	0:0	5	-
water	31:16	0:0	5	1
water	32:4	0:0	4	}
water	33:4	0:0	2	psz_shortopts
op	33:18	0:0	2	=
call	33:20	33:43	2	malloc
arg	33:28	33:43	3	2*i_opts+1
water	33:28	0:0	4	2
op	33:30	0:0	4	*
water	33:32	0:0	4	i_opts
op	33:39	0:0	4	+
water	33:41	0:0	4	1
water	33:44	0:0	2	;
if	34:4	39:4	2	(psz_shortopts == NULL)
cond	34:8	34:25	3	psz_shortopts == NULL
water	34:8	0:0	4	psz_shortopts
op	34:22	0:0	4	==
water	34:25	0:0	4	NULL
stmts	35:4	39:4	3	
water	35:4	0:0	4	{
call	36:8	36:25	4	free
arg	36:14	36:25	5	p_longopts
water	36:14	0:0	6	p_longopts
water	36:26	0:0	4	;
call	37:8	37:30	4	module_list_free
arg	37:26	37:30	5	list
water	37:26	0:0	6	list
water	37:31	0:0	4	;
return	38:8	38:17	4	-1
op	38:15	0:0	5	-
water	38:16	0:0	5	1
water	39:4	0:0	4	}
if	43:4	55:4	2	(b_ignore_errors)
cond	43:8	43:8	3	b_ignore_errors
water	43:8	0:0	4	b_ignore_errors
stmts	44:4	55:4	3	
water	44:4	0:0	4	{
water	45:8	0:0	4	argv_copy
op	45:18	0:0	4	=
water	45:20	0:0	4	(
water	45:21	0:0	4	const
water	45:27	0:0	4	char
op	45:31	0:0	4	*
op	45:32	0:0	4	*
water	45:33	0:0	4	)
call	45:34	45:66	4	malloc
arg	45:42	45:66	5	i_argc*sizeof(char*)
water	45:42	0:0	6	i_argc
op	45:49	0:0	6	*
op	45:51	0:0	6	sizeof
water	45:57	0:0	6	(
water	45:58	0:0	6	char
op	45:63	0:0	6	*
water	45:64	0:0	6	)
water	45:67	0:0	4	;
if	46:8	52:8	4	(argv_copy == NULL)
cond	46:12	46:25	5	argv_copy == NULL
water	46:12	0:0	6	argv_copy
op	46:22	0:0	6	==
water	46:25	0:0	6	NULL
stmts	47:8	52:8	5	
water	47:8	0:0	6	{
call	48:12	48:32	6	free
arg	48:18	48:32	7	psz_shortopts
water	48:18	0:0	8	psz_shortopts
water	48:33	0:0	6	;
call	49:12	49:29	6	free
arg	49:18	49:29	7	p_longopts
water	49:18	0:0	8	p_longopts
water	49:30	0:0	6	;
call	50:12	50:34	6	module_list_free
arg	50:30	50:34	7	list
water	50:30	0:0	8	list
water	50:35	0:0	6	;
return	51:12	51:21	6	-1
op	51:19	0:0	7	-
water	51:20	0:0	7	1
water	52:8	0:0	6	}
call	53:8	53:62	4	memcpy
arg	53:16	53:25	5	argv_copy
water	53:16	0:0	6	argv_copy
arg	53:27	53:36	5	ppsz_argv
water	53:27	0:0	6	ppsz_argv
arg	53:38	53:62	5	i_argc*sizeof(char*)
water	53:38	0:0	6	i_argc
op	53:45	0:0	6	*
op	53:47	0:0	6	sizeof
water	53:53	0:0	6	(
water	53:54	0:0	6	char
op	53:59	0:0	6	*
water	53:60	0:0	6	)
water	53:63	0:0	4	;
water	54:8	0:0	4	ppsz_argv
op	54:18	0:0	4	=
water	54:20	0:0	4	argv_copy
water	54:29	0:0	4	;
water	55:4	0:0	4	}
water	56:4	0:0	2	i_shortopts
op	56:16	0:0	2	=
water	56:18	0:0	2	0
water	56:19	0:0	2	;
for	57:4	60:4	2	(i_index = 0 ;i_index < 256;i_index ++)
forinit	57:9	57:20	3	i_index = 0 ;
water	57:9	0:0	4	i_index
op	57:17	0:0	4	=
water	57:19	0:0	4	0
water	57:20	0:0	4	;
cond	57:22	57:32	3	i_index < 256
water	57:22	0:0	4	i_index
op	57:30	0:0	4	<
water	57:32	0:0	4	256
forexpr	57:37	57:44	3	i_index ++
water	57:37	0:0	4	i_index
op	57:44	0:0	4	++
stmts	58:4	60:4	3	
water	58:4	0:0	4	{
water	59:8	0:0	4	pp_shortopts
op	59:20	0:0	4	[
water	59:21	0:0	4	i_index
op	59:28	0:0	4	]
op	59:30	0:0	4	=
water	59:32	0:0	4	NULL
water	59:36	0:0	4	;
water	60:4	0:0	4	}
water	62:4	0:0	2	i_index
op	62:12	0:0	2	=
water	62:14	0:0	2	0
water	62:15	0:0	2	;
for	63:4	118:4	2	( size_t i = 0 ;i < count;i ++)
forinit	0:0	63:21	3	 size_t i = 0 ;
decl	63:9	63:21	4	size_t	i
op	63:18	0:0	4	=
water	63:20	0:0	4	0
cond	63:23	63:27	3	i < count
water	63:23	0:0	4	i
op	63:25	0:0	4	<
water	63:27	0:0	4	count
forexpr	63:34	63:35	3	i ++
water	63:34	0:0	4	i
op	63:35	0:0	4	++
stmts	64:4	118:4	3	
water	64:4	0:0	4	{
decl	65:8	65:36	4	module_t	*p_parser
op	65:27	0:0	4	=
water	65:29	0:0	4	list
op	65:33	0:0	4	[
water	65:34	0:0	4	i
op	65:35	0:0	4	]
decl	66:8	66:39	4	module_config_t	*p_item
water	66:31	0:0	4	,
decl	66:8	66:39	4	module_config_t	*p_end
if	67:8	68:20	4	(! p_parser -> i_config_items)
cond	67:12	67:23	5	! p_parser -> i_config_items
op	67:12	0:0	6	!
water	67:13	0:0	6	p_parser
op	67:21	0:0	6	->
water	67:23	0:0	6	i_config_items
stmts	68:12	68:20	5	
continue	68:12	68:20	6	
for	69:8	117:8	4	(p_item = p_parser -> p_config , p_end = p_item + p_parser -> confsize ;p_item < p_end;p_item ++)
forinit	69:13	69:77	5	p_item = p_parser -> p_config , p_end = p_item + p_parser -> confsize ;
water	69:13	0:0	6	p_item
op	69:20	0:0	6	=
water	69:22	0:0	6	p_parser
op	69:30	0:0	6	->
water	69:32	0:0	6	p_config
water	69:40	0:0	6	,
water	69:42	0:0	6	p_end
op	69:48	0:0	6	=
water	69:50	0:0	6	p_item
op	69:57	0:0	6	+
water	69:59	0:0	6	p_parser
op	69:67	0:0	6	->
water	69:69	0:0	6	confsize
water	69:77	0:0	6	;
cond	70:13	70:22	5	p_item < p_end
water	70:13	0:0	6	p_item
op	70:20	0:0	6	<
water	70:22	0:0	6	p_end
forexpr	71:13	71:19	5	p_item ++
water	71:13	0:0	6	p_item
op	71:19	0:0	6	++
stmts	72:8	117:8	5	
water	72:8	0:0	6	{
if	74:12	75:24	6	(!CONFIG_ITEM (p_item -> i_type ))
cond	74:16	74:43	7	!CONFIG_ITEM (p_item -> i_type )
op	74:16	0:0	8	!
call	74:17	74:43	8	CONFIG_ITEM
arg	74:29	74:43	9	p_item->i_type
water	74:29	0:0	10	p_item
op	74:35	0:0	10	->
water	74:37	0:0	10	i_type
stmts	75:16	75:24	7	
continue	75:16	75:24	8	
water	77:12	0:0	6	p_longopts
op	77:22	0:0	6	[
water	77:23	0:0	6	i_index
op	77:30	0:0	6	]
op	77:31	0:0	6	.
water	77:32	0:0	6	name
op	77:37	0:0	6	=
call	77:39	77:64	6	strdup
arg	77:47	77:64	7	p_item->psz_name
water	77:47	0:0	8	p_item
op	77:53	0:0	8	->
water	77:55	0:0	8	psz_name
water	77:65	0:0	6	;
if	78:12	78:59	6	(p_longopts [ i_index ] . name == NULL)
cond	78:16	78:44	7	p_longopts [ i_index ] . name == NULL
water	78:16	0:0	8	p_longopts
op	78:26	0:0	8	[
water	78:27	0:0	8	i_index
op	78:34	0:0	8	]
op	78:35	0:0	8	.
water	78:36	0:0	8	name
op	78:41	0:0	8	==
water	78:44	0:0	8	NULL
stmts	78:51	78:59	7	
continue	78:51	78:59	8	
water	79:12	0:0	6	p_longopts
op	79:22	0:0	6	[
water	79:23	0:0	6	i_index
op	79:30	0:0	6	]
op	79:31	0:0	6	.
water	79:32	0:0	6	flag
op	79:37	0:0	6	=
op	79:39	0:0	6	&
water	79:40	0:0	6	flag
water	79:44	0:0	6	;
water	80:12	0:0	6	p_longopts
op	80:22	0:0	6	[
water	80:23	0:0	6	i_index
op	80:30	0:0	6	]
op	80:31	0:0	6	.
water	80:32	0:0	6	val
op	80:36	0:0	6	=
water	80:38	0:0	6	0
water	80:39	0:0	6	;
if	81:12	82:50	6	(CONFIG_CLASS (p_item -> i_type ) != CONFIG_ITEM_BOOL)
cond	81:16	81:48	7	CONFIG_CLASS (p_item -> i_type ) != CONFIG_ITEM_BOOL
call	81:16	81:43	8	CONFIG_CLASS
arg	81:29	81:43	9	p_item->i_type
water	81:29	0:0	10	p_item
op	81:35	0:0	10	->
water	81:37	0:0	10	i_type
op	81:45	0:0	8	!=
water	81:48	0:0	8	CONFIG_ITEM_BOOL
stmts	82:16	82:50	7	
water	82:16	0:0	8	p_longopts
op	82:26	0:0	8	[
water	82:27	0:0	8	i_index
op	82:34	0:0	8	]
op	82:35	0:0	8	.
water	82:36	0:0	8	has_arg
op	82:44	0:0	8	=
water	82:46	0:0	8	true
water	82:50	0:0	8	;
else	83:12	102:12	6
stmts	85:12	102:12	7	
water	85:12	0:0	8	{
decl	86:16	86:30	8	char	*psz_name
water	87:16	0:0	8	p_longopts
op	87:26	0:0	8	[
water	87:27	0:0	8	i_index
op	87:34	0:0	8	]
op	87:35	0:0	8	.
water	87:36	0:0	8	has_arg
op	87:44	0:0	8	=
water	87:46	0:0	8	false
water	87:51	0:0	8	;
water	88:16	0:0	8	i_index
op	88:23	0:0	8	++
water	88:25	0:0	8	;
if	89:16	90:28	8	(asprintf (& psz_name ,"no%s" ,p_item -> psz_name ) == - 1)
cond	89:20	89:72	9	asprintf (& psz_name ,"no%s" ,p_item -> psz_name ) == - 1
call	89:20	89:66	10	asprintf
arg	89:30	89:39	11	&psz_name
op	89:30	0:0	12	&
water	89:31	0:0	12	psz_name
arg	89:41	89:47	11	"no%s"
water	89:41	0:0	12	"no%s"
arg	89:49	89:66	11	p_item->psz_name
water	89:49	0:0	12	p_item
op	89:55	0:0	12	->
water	89:57	0:0	12	psz_name
op	89:68	0:0	10	==
op	89:71	0:0	10	-
water	89:72	0:0	10	1
stmts	90:20	90:28	9	
continue	90:20	90:28	10	
water	91:16	0:0	8	p_longopts
op	91:26	0:0	8	[
water	91:27	0:0	8	i_index
op	91:34	0:0	8	]
op	91:35	0:0	8	.
water	91:36	0:0	8	name
op	91:41	0:0	8	=
water	91:43	0:0	8	psz_name
water	91:51	0:0	8	;
water	92:16	0:0	8	p_longopts
op	92:26	0:0	8	[
water	92:27	0:0	8	i_index
op	92:34	0:0	8	]
op	92:35	0:0	8	.
water	92:36	0:0	8	has_arg
op	92:44	0:0	8	=
water	92:46	0:0	8	false
water	92:51	0:0	8	;
water	93:16	0:0	8	p_longopts
op	93:26	0:0	8	[
water	93:27	0:0	8	i_index
op	93:34	0:0	8	]
op	93:35	0:0	8	.
water	93:36	0:0	8	flag
op	93:41	0:0	8	=
op	93:43	0:0	8	&
water	93:44	0:0	8	flag
water	93:48	0:0	8	;
water	94:16	0:0	8	p_longopts
op	94:26	0:0	8	[
water	94:27	0:0	8	i_index
op	94:34	0:0	8	]
op	94:35	0:0	8	.
water	94:36	0:0	8	val
op	94:40	0:0	8	=
water	94:42	0:0	8	1
water	94:43	0:0	8	;
water	95:16	0:0	8	i_index
op	95:23	0:0	8	++
water	95:25	0:0	8	;
if	96:16	97:28	8	(asprintf (& psz_name ,"no-%s" ,p_item -> psz_name ) == - 1)
cond	96:20	96:73	9	asprintf (& psz_name ,"no-%s" ,p_item -> psz_name ) == - 1
call	96:20	96:67	10	asprintf
arg	96:30	96:39	11	&psz_name
op	96:30	0:0	12	&
water	96:31	0:0	12	psz_name
arg	96:41	96:48	11	"no-%s"
water	96:41	0:0	12	"no-%s"
arg	96:50	96:67	11	p_item->psz_name
water	96:50	0:0	12	p_item
op	96:56	0:0	12	->
water	96:58	0:0	12	psz_name
op	96:69	0:0	10	==
op	96:72	0:0	10	-
water	96:73	0:0	10	1
stmts	97:20	97:28	9	
continue	97:20	97:28	10	
water	98:16	0:0	8	p_longopts
op	98:26	0:0	8	[
water	98:27	0:0	8	i_index
op	98:34	0:0	8	]
op	98:35	0:0	8	.
water	98:36	0:0	8	name
op	98:41	0:0	8	=
water	98:43	0:0	8	psz_name
water	98:51	0:0	8	;
water	99:16	0:0	8	p_longopts
op	99:26	0:0	8	[
water	99:27	0:0	8	i_index
op	99:34	0:0	8	]
op	99:35	0:0	8	.
water	99:36	0:0	8	has_arg
op	99:44	0:0	8	=
water	99:46	0:0	8	false
water	99:51	0:0	8	;
water	100:16	0:0	8	p_longopts
op	100:26	0:0	8	[
water	100:27	0:0	8	i_index
op	100:34	0:0	8	]
op	100:35	0:0	8	.
water	100:36	0:0	8	flag
op	100:41	0:0	8	=
op	100:43	0:0	8	&
water	100:44	0:0	8	flag
water	100:48	0:0	8	;
water	101:16	0:0	8	p_longopts
op	101:26	0:0	8	[
water	101:27	0:0	8	i_index
op	101:34	0:0	8	]
op	101:35	0:0	8	.
water	101:36	0:0	8	val
op	101:40	0:0	8	=
water	101:42	0:0	8	1
water	101:43	0:0	8	;
water	102:12	0:0	8	}
water	103:12	0:0	6	i_index
op	103:19	0:0	6	++
water	103:21	0:0	6	;
if	105:12	116:12	6	(p_item -> i_short)
cond	105:16	105:24	7	p_item -> i_short
water	105:16	0:0	8	p_item
op	105:22	0:0	8	->
water	105:24	0:0	8	i_short
stmts	106:12	116:12	7	
water	106:12	0:0	8	{
water	107:16	0:0	8	pp_shortopts
op	107:28	0:0	8	[
water	107:29	0:0	8	(
water	107:30	0:0	8	int
water	107:33	0:0	8	)
water	107:34	0:0	8	p_item
op	107:40	0:0	8	->
water	107:42	0:0	8	i_short
op	107:49	0:0	8	]
op	107:51	0:0	8	=
water	107:53	0:0	8	p_item
water	107:59	0:0	8	;
water	108:16	0:0	8	psz_shortopts
op	108:29	0:0	8	[
water	108:30	0:0	8	i_shortopts
op	108:41	0:0	8	]
op	108:43	0:0	8	=
water	108:45	0:0	8	p_item
op	108:51	0:0	8	->
water	108:53	0:0	8	i_short
water	108:60	0:0	8	;
water	109:16	0:0	8	i_shortopts
op	109:27	0:0	8	++
water	109:29	0:0	8	;
if	110:16	115:16	8	(p_item -> i_type != CONFIG_ITEM_BOOL && p_item -> i_short != 'v')
cond	110:20	111:39	9	p_item -> i_type != CONFIG_ITEM_BOOL && p_item -> i_short != 'v'
water	110:20	0:0	10	p_item
op	110:26	0:0	10	->
water	110:28	0:0	10	i_type
op	110:35	0:0	10	!=
water	110:38	0:0	10	CONFIG_ITEM_BOOL
op	111:17	0:0	10	&&
water	111:20	0:0	10	p_item
op	111:26	0:0	10	->
water	111:28	0:0	10	i_short
op	111:36	0:0	10	!=
water	111:39	0:0	10	'v'
stmts	112:16	115:16	9	
water	112:16	0:0	10	{
water	113:20	0:0	10	psz_shortopts
op	113:33	0:0	10	[
water	113:34	0:0	10	i_shortopts
op	113:45	0:0	10	]
op	113:47	0:0	10	=
water	113:49	0:0	10	':'
water	113:52	0:0	10	;
water	114:20	0:0	10	i_shortopts
op	114:31	0:0	10	++
water	114:33	0:0	10	;
water	115:16	0:0	10	}
water	116:12	0:0	8	}
water	117:8	0:0	6	}
water	118:4	0:0	4	}
call	120:4	120:27	2	module_list_free
arg	120:22	120:27	3	list
water	120:22	0:0	4	list
water	120:28	0:0	2	;
call	122:4	122:57	2	memset
arg	122:12	122:32	3	&p_longopts[i_index]
op	122:12	0:0	4	&
water	122:13	0:0	4	p_longopts
op	122:23	0:0	4	[
water	122:24	0:0	4	i_index
op	122:31	0:0	4	]
arg	122:34	122:35	3	0
water	122:34	0:0	4	0
arg	122:37	122:57	3	sizeof(*p_longopts)
op	122:37	0:0	4	sizeof
water	122:43	0:0	4	(
op	122:44	0:0	4	*
water	122:45	0:0	4	p_longopts
water	122:55	0:0	4	)
water	122:58	0:0	2	;
water	123:4	0:0	2	psz_shortopts
op	123:17	0:0	2	[
water	123:18	0:0	2	i_shortopts
op	123:29	0:0	2	]
op	123:31	0:0	2	=
water	123:33	0:0	2	'\0'
water	123:37	0:0	2	;
decl	124:4	124:16	2	int	ret
op	124:12	0:0	2	=
op	124:14	0:0	2	-
water	124:15	0:0	2	1
decl	128:4	128:22	2	vlc_getopt_t	state
water	129:4	0:0	2	state
op	129:9	0:0	2	.
water	129:10	0:0	2	ind
op	129:14	0:0	2	=
water	129:16	0:0	2	0
water	129:18	0:0	2	;
while	130:4	222:4	2	(( i_cmd =vlc_getopt_long (i_argc ,( char * * ) ppsz_argv ,psz_shortopts ,p_longopts ,& i_index ,& state ) ) != - 1)
cond	130:11	132:75	3	( i_cmd =vlc_getopt_long (i_argc ,( char * * ) ppsz_argv ,psz_shortopts ,p_longopts ,& i_index ,& state ) ) != - 1
water	130:11	0:0	4	(
water	130:13	0:0	4	i_cmd
op	130:19	0:0	4	=
call	130:21	132:67	4	vlc_getopt_long
arg	130:38	130:44	5	i_argc
water	130:38	0:0	6	i_argc
arg	130:46	130:64	5	(char**)ppsz_argv
water	130:46	0:0	6	(
water	130:47	0:0	6	char
op	130:52	0:0	6	*
op	130:53	0:0	6	*
water	130:54	0:0	6	)
water	130:55	0:0	6	ppsz_argv
arg	131:38	131:51	5	psz_shortopts
water	131:38	0:0	6	psz_shortopts
arg	132:38	132:48	5	p_longopts
water	132:38	0:0	6	p_longopts
arg	132:50	132:58	5	&i_index
op	132:50	0:0	6	&
water	132:51	0:0	6	i_index
arg	132:60	132:67	5	&state
op	132:60	0:0	6	&
water	132:61	0:0	6	state
water	132:69	0:0	4	)
op	132:71	0:0	4	!=
op	132:74	0:0	4	-
water	132:75	0:0	4	1
stmts	133:4	222:4	3	
water	133:4	0:0	4	{
if	135:8	175:8	4	(i_cmd == 0)
cond	135:12	135:21	5	i_cmd == 0
water	135:12	0:0	6	i_cmd
op	135:18	0:0	6	==
water	135:21	0:0	6	0
stmts	136:8	175:8	5	
water	136:8	0:0	6	{
decl	137:12	137:35	6	module_config_t	*p_conf
decl	138:12	138:59	6	const char	*psz_name
op	138:33	0:0	6	=
water	138:35	0:0	6	p_longopts
op	138:45	0:0	6	[
water	138:46	0:0	6	i_index
op	138:53	0:0	6	]
op	138:54	0:0	6	.
water	138:55	0:0	6	name
if	140:12	140:61	6	(flag)
cond	140:16	140:16	7	flag
water	140:16	0:0	8	flag
stmts	140:23	140:61	7	
water	140:23	0:0	8	psz_name
op	140:32	0:0	8	+=
water	140:35	0:0	8	psz_name
op	140:43	0:0	8	[
water	140:44	0:0	8	2
op	140:45	0:0	8	]
op	140:47	0:0	8	==
water	140:50	0:0	8	'-'
water	140:54	0:0	8	?
water	140:56	0:0	8	3
water	140:58	0:0	8	:
water	140:60	0:0	8	2
water	140:61	0:0	8	;
water	142:12	0:0	6	p_conf
op	142:19	0:0	6	=
call	142:21	142:57	6	config_FindConfig
arg	142:40	142:46	7	p_this
water	142:40	0:0	8	p_this
arg	142:48	142:57	7	psz_name
water	142:48	0:0	8	psz_name
water	142:58	0:0	6	;
if	143:12	174:12	6	(p_conf)
cond	143:16	143:16	7	p_conf
water	143:16	0:0	8	p_conf
stmts	144:12	174:12	7	
water	144:12	0:0	8	{
if	146:16	152:16	8	(p_conf -> b_removed)
cond	146:20	146:28	9	p_conf -> b_removed
water	146:20	0:0	10	p_conf
op	146:26	0:0	10	->
water	146:28	0:0	10	b_removed
stmts	147:16	152:16	9	
water	147:16	0:0	10	{
call	148:20	150:36	10	fprintf
arg	148:28	148:34	11	stderr
water	148:28	0:0	12	stderr
arg	149:28	149:70	11	"Warning: option --%s no longer exists.\n"
water	149:28	0:0	12	"Warning: option --%s no longer exists.\n"
arg	150:28	150:36	11	psz_name
water	150:28	0:0	12	psz_name
water	150:37	0:0	10	;
continue	151:20	151:28	10	
water	152:16	0:0	10	}
switch	153:16	172:16	8	(CONFIG_CLASS (p_conf -> i_type ))
cond	153:24	153:51	9	CONFIG_CLASS (p_conf -> i_type )
call	153:24	153:51	10	CONFIG_CLASS
arg	153:37	153:51	11	p_conf->i_type
water	153:37	0:0	12	p_conf
op	153:43	0:0	12	->
water	153:45	0:0	12	i_type
stmts	154:16	172:16	9	
water	154:16	0:0	10	{
label	155:20	155:43	10	case CONFIG_ITEM_STRING :
call	156:24	156:69	10	var_Create
arg	156:36	156:42	11	p_this
water	156:36	0:0	12	p_this
arg	156:44	156:52	11	psz_name
water	156:44	0:0	12	psz_name
arg	156:54	156:69	11	VLC_VAR_STRING
water	156:54	0:0	12	VLC_VAR_STRING
water	156:70	0:0	10	;
call	157:24	157:67	10	var_SetString
arg	157:39	157:45	11	p_this
water	157:39	0:0	12	p_this
arg	157:47	157:55	11	psz_name
water	157:47	0:0	12	psz_name
arg	157:57	157:67	11	state.arg
water	157:57	0:0	12	state
op	157:62	0:0	12	.
water	157:63	0:0	12	arg
water	157:68	0:0	10	;
break	158:24	158:29	10	
label	159:20	159:44	10	case CONFIG_ITEM_INTEGER :
call	160:24	160:70	10	var_Create
arg	160:36	160:42	11	p_this
water	160:36	0:0	12	p_this
arg	160:44	160:52	11	psz_name
water	160:44	0:0	12	psz_name
arg	160:54	160:70	11	VLC_VAR_INTEGER
water	160:54	0:0	12	VLC_VAR_INTEGER
water	160:71	0:0	10	;
call	161:24	162:67	10	var_SetInteger
arg	161:40	161:46	11	p_this
water	161:40	0:0	12	p_this
arg	161:48	161:56	11	psz_name
water	161:48	0:0	12	psz_name
arg	162:40	162:67	11	strtoll(state.arg,NULL,0)
call	162:40	162:66	12	strtoll
arg	162:48	162:57	13	state.arg
water	162:48	0:0	14	state
op	162:53	0:0	14	.
water	162:54	0:0	14	arg
arg	162:59	162:63	13	NULL
water	162:59	0:0	14	NULL
arg	162:65	162:66	13	0
water	162:65	0:0	14	0
water	162:68	0:0	10	;
break	163:24	163:29	10	
label	164:20	164:42	10	case CONFIG_ITEM_FLOAT :
call	165:24	165:68	10	var_Create
arg	165:36	165:42	11	p_this
water	165:36	0:0	12	p_this
arg	165:44	165:52	11	psz_name
water	165:44	0:0	12	psz_name
arg	165:54	165:68	11	VLC_VAR_FLOAT
water	165:54	0:0	12	VLC_VAR_FLOAT
water	165:69	0:0	10	;
call	166:24	166:75	10	var_SetFloat
arg	166:38	166:44	11	p_this
water	166:38	0:0	12	p_this
arg	166:46	166:54	11	psz_name
water	166:46	0:0	12	psz_name
arg	166:56	166:75	11	us_atof(state.arg)
call	166:56	166:73	12	us_atof
arg	166:64	166:73	13	state.arg
water	166:64	0:0	14	state
op	166:69	0:0	14	.
water	166:70	0:0	14	arg
water	166:76	0:0	10	;
break	167:24	167:29	10	
label	168:20	168:41	10	case CONFIG_ITEM_BOOL :
call	169:24	169:67	10	var_Create
arg	169:36	169:42	11	p_this
water	169:36	0:0	12	p_this
arg	169:44	169:52	11	psz_name
water	169:44	0:0	12	psz_name
arg	169:54	169:67	11	VLC_VAR_BOOL
water	169:54	0:0	12	VLC_VAR_BOOL
water	169:68	0:0	10	;
call	170:24	170:61	10	var_SetBool
arg	170:37	170:43	11	p_this
water	170:37	0:0	12	p_this
arg	170:45	170:53	11	psz_name
water	170:45	0:0	12	psz_name
arg	170:55	170:61	11	!flag
op	170:55	0:0	12	!
water	170:56	0:0	12	flag
water	170:62	0:0	10	;
break	171:24	171:29	10	
water	172:16	0:0	10	}
continue	173:16	173:24	8	
water	174:12	0:0	8	}
water	175:8	0:0	6	}
if	177:8	205:8	4	(pp_shortopts [ i_cmd ] != NULL)
cond	177:12	177:35	5	pp_shortopts [ i_cmd ] != NULL
water	177:12	0:0	6	pp_shortopts
op	177:24	0:0	6	[
water	177:25	0:0	6	i_cmd
op	177:30	0:0	6	]
op	177:32	0:0	6	!=
water	177:35	0:0	6	NULL
stmts	178:8	205:8	5	
water	178:8	0:0	6	{
decl	179:12	179:60	6	const char	*name
op	179:29	0:0	6	=
water	179:31	0:0	6	pp_shortopts
op	179:43	0:0	6	[
water	179:44	0:0	6	i_cmd
op	179:49	0:0	6	]
op	179:50	0:0	6	->
water	179:52	0:0	6	psz_name
switch	180:12	203:12	6	(CONFIG_CLASS (pp_shortopts [ i_cmd ] -> i_type ))
cond	180:20	180:60	7	CONFIG_CLASS (pp_shortopts [ i_cmd ] -> i_type )
call	180:20	180:60	8	CONFIG_CLASS
arg	180:33	180:60	9	pp_shortopts[i_cmd]->i_type
water	180:33	0:0	10	pp_shortopts
op	180:45	0:0	10	[
water	180:46	0:0	10	i_cmd
op	180:51	0:0	10	]
op	180:52	0:0	10	->
water	180:54	0:0	10	i_type
stmts	181:12	203:12	7	
water	181:12	0:0	8	{
label	182:16	182:39	8	case CONFIG_ITEM_STRING :
call	183:20	183:61	8	var_Create
arg	183:32	183:38	9	p_this
water	183:32	0:0	10	p_this
arg	183:40	183:44	9	name
water	183:40	0:0	10	name
arg	183:46	183:61	9	VLC_VAR_STRING
water	183:46	0:0	10	VLC_VAR_STRING
water	183:62	0:0	8	;
call	184:20	184:59	8	var_SetString
arg	184:35	184:41	9	p_this
water	184:35	0:0	10	p_this
arg	184:43	184:47	9	name
water	184:43	0:0	10	name
arg	184:49	184:59	9	state.arg
water	184:49	0:0	10	state
op	184:54	0:0	10	.
water	184:55	0:0	10	arg
water	184:60	0:0	8	;
break	185:20	185:25	8	
label	186:16	186:40	8	case CONFIG_ITEM_INTEGER :
call	187:20	187:62	8	var_Create
arg	187:32	187:38	9	p_this
water	187:32	0:0	10	p_this
arg	187:40	187:44	9	name
water	187:40	0:0	10	name
arg	187:46	187:62	9	VLC_VAR_INTEGER
water	187:46	0:0	10	VLC_VAR_INTEGER
water	187:63	0:0	8	;
if	188:20	192:20	8	(i_cmd == 'v')
cond	188:24	188:33	9	i_cmd == 'v'
water	188:24	0:0	10	i_cmd
op	188:30	0:0	10	==
water	188:33	0:0	10	'v'
stmts	189:20	192:20	9	
water	189:20	0:0	10	{
water	190:24	0:0	10	i_verbose
op	190:33	0:0	10	++
water	190:35	0:0	10	;
call	191:24	191:64	10	var_SetInteger
arg	191:40	191:46	11	p_this
water	191:40	0:0	12	p_this
arg	191:48	191:52	11	name
water	191:48	0:0	12	name
arg	191:54	191:64	11	i_verbose
water	191:54	0:0	12	i_verbose
water	191:65	0:0	10	;
water	192:20	0:0	10	}
else	193:20	197:20	8
stmts	194:20	197:20	9	
water	194:20	0:0	10	{
call	195:24	196:68	10	var_SetInteger
arg	195:40	195:46	11	p_this
water	195:40	0:0	12	p_this
arg	195:48	195:52	11	name
water	195:48	0:0	12	name
arg	196:40	196:68	11	strtoll(state.arg,NULL,0)
call	196:40	196:66	12	strtoll
arg	196:48	196:57	13	state.arg
water	196:48	0:0	14	state
op	196:53	0:0	14	.
water	196:54	0:0	14	arg
arg	196:59	196:63	13	NULL
water	196:59	0:0	14	NULL
arg	196:65	196:66	13	0
water	196:65	0:0	14	0
water	196:69	0:0	10	;
water	197:20	0:0	10	}
break	198:20	198:25	8	
label	199:16	199:37	8	case CONFIG_ITEM_BOOL :
call	200:20	200:59	8	var_Create
arg	200:32	200:38	9	p_this
water	200:32	0:0	10	p_this
arg	200:40	200:44	9	name
water	200:40	0:0	10	name
arg	200:46	200:59	9	VLC_VAR_BOOL
water	200:46	0:0	10	VLC_VAR_BOOL
water	200:60	0:0	8	;
call	201:20	201:52	8	var_SetBool
arg	201:33	201:39	9	p_this
water	201:33	0:0	10	p_this
arg	201:41	201:45	9	name
water	201:41	0:0	10	name
arg	201:47	201:52	9	true
water	201:47	0:0	10	true
water	201:53	0:0	8	;
break	202:20	202:25	8	
water	203:12	0:0	8	}
continue	204:12	204:20	6	
water	205:8	0:0	6	}
if	207:8	221:8	4	(! b_ignore_errors)
cond	207:12	207:13	5	! b_ignore_errors
op	207:12	0:0	6	!
water	207:13	0:0	6	b_ignore_errors
stmts	208:8	221:8	5	
water	208:8	0:0	6	{
call	209:12	210:63	6	fputs
arg	209:19	210:54	7	"vlc: unknown option"" or missing mandatory argument "
water	209:19	0:0	8	"vlc: unknown option"
water	210:21	0:0	8	" or missing mandatory argument "
arg	210:56	210:63	7	stderr
water	210:56	0:0	8	stderr
water	210:64	0:0	6	;
if	211:12	214:12	6	(state . opt)
cond	211:16	211:22	7	state . opt
water	211:16	0:0	8	state
op	211:21	0:0	8	.
water	211:22	0:0	8	opt
stmts	212:12	214:12	7	
water	212:12	0:0	8	{
call	213:16	213:54	8	fprintf
arg	213:25	213:31	9	stderr
water	213:25	0:0	10	stderr
arg	213:33	213:42	9	"`-%c'\n"
water	213:33	0:0	10	"`-%c'\n"
arg	213:44	213:54	9	state.opt
water	213:44	0:0	10	state
op	213:49	0:0	10	.
water	213:50	0:0	10	opt
water	213:55	0:0	8	;
water	214:12	0:0	8	}
else	215:12	218:12	6
stmts	216:12	218:12	7	
water	216:12	0:0	8	{
call	217:16	217:66	8	fprintf
arg	217:25	217:31	9	stderr
water	217:25	0:0	10	stderr
arg	217:33	217:41	9	"`%s'\n"
water	217:33	0:0	10	"`%s'\n"
arg	217:43	217:66	9	ppsz_argv[state.ind-1]
water	217:43	0:0	10	ppsz_argv
op	217:52	0:0	10	[
water	217:53	0:0	10	state
op	217:58	0:0	10	.
water	217:59	0:0	10	ind
op	217:62	0:0	10	-
water	217:63	0:0	10	1
op	217:64	0:0	10	]
water	217:67	0:0	8	;
water	218:12	0:0	8	}
call	219:12	219:70	6	fputs
arg	219:19	219:61	7	"Try `vlc --help' for more information.\n"
water	219:19	0:0	8	"Try `vlc --help' for more information.\n"
arg	219:63	219:70	7	stderr
water	219:63	0:0	8	stderr
water	219:71	0:0	6	;
goto	220:12	220:20	6	out
water	220:17	0:0	7	out
water	221:8	0:0	6	}
water	222:4	0:0	4	}
water	223:4	0:0	2	ret
op	223:8	0:0	2	=
water	223:10	0:0	2	0
water	223:11	0:0	2	;
if	224:4	225:27	2	(pindex != NULL)
cond	224:8	224:18	3	pindex != NULL
water	224:8	0:0	4	pindex
op	224:15	0:0	4	!=
water	224:18	0:0	4	NULL
stmts	225:8	225:27	3	
op	225:8	0:0	4	*
water	225:9	0:0	4	pindex
op	225:16	0:0	4	=
water	225:18	0:0	4	state
op	225:23	0:0	4	.
water	225:24	0:0	4	ind
water	225:27	0:0	4	;
label	226:0	226:3	2	out :
for	228:4	229:48	2	(i_index = 0 ;p_longopts [ i_index ] . name;i_index ++)
forinit	228:9	228:20	3	i_index = 0 ;
water	228:9	0:0	4	i_index
op	228:17	0:0	4	=
water	228:19	0:0	4	0
water	228:20	0:0	4	;
cond	228:22	228:42	3	p_longopts [ i_index ] . name
water	228:22	0:0	4	p_longopts
op	228:32	0:0	4	[
water	228:33	0:0	4	i_index
op	228:40	0:0	4	]
op	228:41	0:0	4	.
water	228:42	0:0	4	name
forexpr	228:48	228:55	3	i_index ++
water	228:48	0:0	4	i_index
op	228:55	0:0	4	++
stmts	229:8	229:48	3	
call	229:8	229:47	4	free
arg	229:14	229:47	5	(char*)p_longopts[i_index].name
water	229:14	0:0	6	(
water	229:15	0:0	6	char
op	229:20	0:0	6	*
water	229:21	0:0	6	)
water	229:22	0:0	6	p_longopts
op	229:32	0:0	6	[
water	229:33	0:0	6	i_index
op	229:40	0:0	6	]
op	229:41	0:0	6	.
water	229:42	0:0	6	name
water	229:48	0:0	4	;
call	230:4	230:21	2	free
arg	230:10	230:21	3	p_longopts
water	230:10	0:0	4	p_longopts
water	230:22	0:0	2	;
call	231:4	231:24	2	free
arg	231:10	231:24	3	psz_shortopts
water	231:10	0:0	4	psz_shortopts
water	231:25	0:0	2	;
call	232:4	232:20	2	free
arg	232:10	232:20	3	argv_copy
water	232:10	0:0	4	argv_copy
water	232:21	0:0	2	;
return	233:4	233:14	2	ret
water	233:11	0:0	3	ret

func	2:0	41:0	0	void	puzzle_draw_preview
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:65	2	picture_t *	p_pic_in
param	2:67	2:87	2	picture_t *	p_pic_out
stmnts	0:0	40:4	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
for	5:4	40:4	2	( uint8_t i_plane = 0 ;i_plane < p_pic_out -> i_planes;i_plane ++)
forinit	0:0	5:29	3	 uint8_t i_plane = 0 ;
decl	5:9	5:29	4	uint8_t	i_plane
op	5:26	0:0	4	=
water	5:28	0:0	4	0
cond	5:31	5:52	3	i_plane < p_pic_out -> i_planes
water	5:31	0:0	4	i_plane
op	5:39	0:0	4	<
water	5:41	0:0	4	p_pic_out
op	5:50	0:0	4	->
water	5:52	0:0	4	i_planes
forexpr	5:62	5:69	3	i_plane ++
water	5:62	0:0	4	i_plane
op	5:69	0:0	4	++
stmts	5:74	40:4	3	
water	5:74	0:0	4	{
decl	6:8	6:36	4	int32_t	i_preview_offset
op	6:33	0:0	4	=
water	6:35	0:0	4	0
decl	7:8	7:119	4	int32_t	i_preview_width
op	7:33	0:0	4	=
water	7:35	0:0	4	p_sys
op	7:40	0:0	4	->
water	7:42	0:0	4	ps_desk_planes
op	7:56	0:0	4	[
water	7:57	0:0	4	i_plane
op	7:64	0:0	4	]
op	7:65	0:0	4	.
water	7:66	0:0	4	i_width
op	7:74	0:0	4	*
water	7:76	0:0	4	p_sys
op	7:81	0:0	4	->
water	7:83	0:0	4	s_current_param
op	7:98	0:0	4	.
water	7:99	0:0	4	i_preview_size
op	7:114	0:0	4	/
water	7:116	0:0	4	100
decl	8:8	8:118	4	int32_t	i_preview_lines
op	8:33	0:0	4	=
water	8:35	0:0	4	p_pic_out
op	8:44	0:0	4	->
water	8:46	0:0	4	p
op	8:47	0:0	4	[
water	8:48	0:0	4	i_plane
op	8:55	0:0	4	]
op	8:56	0:0	4	.
water	8:57	0:0	4	i_visible_lines
op	8:73	0:0	4	*
water	8:75	0:0	4	p_sys
op	8:80	0:0	4	->
water	8:82	0:0	4	s_current_param
op	8:97	0:0	4	.
water	8:98	0:0	4	i_preview_size
op	8:113	0:0	4	/
water	8:115	0:0	4	100
decl	9:8	9:70	4	int32_t	i_pixel_pitch
op	9:33	0:0	4	=
water	9:35	0:0	4	p_pic_out
op	9:44	0:0	4	->
water	9:46	0:0	4	p
op	9:47	0:0	4	[
water	9:48	0:0	4	i_plane
op	9:55	0:0	4	]
op	9:56	0:0	4	.
water	9:57	0:0	4	i_pixel_pitch
decl	10:8	10:65	4	const int32_t	i_src_pitch
op	10:35	0:0	4	=
water	10:37	0:0	4	p_pic_in
op	10:45	0:0	4	->
water	10:47	0:0	4	p
op	10:48	0:0	4	[
water	10:49	0:0	4	i_plane
op	10:56	0:0	4	]
op	10:57	0:0	4	.
water	10:58	0:0	4	i_pitch
decl	11:8	11:66	4	const int32_t	i_dst_pitch
op	11:35	0:0	4	=
water	11:37	0:0	4	p_pic_out
op	11:46	0:0	4	->
water	11:48	0:0	4	p
op	11:49	0:0	4	[
water	11:50	0:0	4	i_plane
op	11:57	0:0	4	]
op	11:58	0:0	4	.
water	11:59	0:0	4	i_pitch
decl	12:8	12:54	4	uint8_t	*p_src
op	12:23	0:0	4	=
water	12:25	0:0	4	p_pic_in
op	12:33	0:0	4	->
water	12:35	0:0	4	p
op	12:36	0:0	4	[
water	12:37	0:0	4	i_plane
op	12:44	0:0	4	]
op	12:45	0:0	4	.
water	12:46	0:0	4	p_pixels
decl	13:8	13:55	4	uint8_t	*p_dst
op	13:23	0:0	4	=
water	13:25	0:0	4	p_pic_out
op	13:34	0:0	4	->
water	13:36	0:0	4	p
op	13:37	0:0	4	[
water	13:38	0:0	4	i_plane
op	13:45	0:0	4	]
op	13:46	0:0	4	.
water	13:47	0:0	4	p_pixels
switch	14:8	33:8	4	(p_sys -> i_preview_pos)
cond	14:17	14:24	5	p_sys -> i_preview_pos
water	14:17	0:0	6	p_sys
op	14:22	0:0	6	->
water	14:24	0:0	6	i_preview_pos
stmts	14:40	33:8	5	
water	14:40	0:0	6	{
label	15:8	15:14	6	case 0 :
water	16:12	0:0	6	i_preview_offset
op	16:29	0:0	6	=
water	16:31	0:0	6	0
water	16:32	0:0	6	;
break	17:12	17:17	6	
label	18:8	18:14	6	case 1 :
water	19:12	0:0	6	i_preview_offset
op	19:29	0:0	6	=
water	20:16	0:0	6	(
water	20:17	0:0	6	p_sys
op	20:22	0:0	6	->
water	20:24	0:0	6	ps_desk_planes
op	20:38	0:0	6	[
water	20:39	0:0	6	i_plane
op	20:46	0:0	6	]
op	20:47	0:0	6	.
water	20:48	0:0	6	i_width
op	20:56	0:0	6	-
water	20:58	0:0	6	1
op	20:60	0:0	6	-
water	20:62	0:0	6	i_preview_width
water	20:77	0:0	6	)
op	20:79	0:0	6	*
water	20:81	0:0	6	i_pixel_pitch
water	20:94	0:0	6	;
break	21:12	21:17	6	
label	22:8	22:14	6	case 2 :
water	23:12	0:0	6	i_preview_offset
op	23:29	0:0	6	=
water	24:16	0:0	6	(
water	24:17	0:0	6	p_sys
op	24:22	0:0	6	->
water	24:24	0:0	6	ps_desk_planes
op	24:38	0:0	6	[
water	24:39	0:0	6	i_plane
op	24:46	0:0	6	]
op	24:47	0:0	6	.
water	24:48	0:0	6	i_width
op	24:56	0:0	6	-
water	24:58	0:0	6	1
op	24:60	0:0	6	-
water	24:62	0:0	6	i_preview_width
water	24:77	0:0	6	)
op	24:79	0:0	6	*
water	24:81	0:0	6	i_pixel_pitch
op	25:16	0:0	6	+
water	25:18	0:0	6	(
call	25:19	25:92	6	(int32_t)
arg	25:31	25:92	7	p_sys->ps_desk_planes[i_plane].i_lines-1-i_preview_lines
water	25:31	0:0	8	p_sys
op	25:36	0:0	8	->
water	25:38	0:0	8	ps_desk_planes
op	25:52	0:0	8	[
water	25:53	0:0	8	i_plane
op	25:60	0:0	8	]
op	25:61	0:0	8	.
water	25:62	0:0	8	i_lines
op	25:70	0:0	8	-
water	25:72	0:0	8	1
op	25:74	0:0	8	-
water	25:76	0:0	8	i_preview_lines
water	25:93	0:0	6	)
op	25:95	0:0	6	*
water	25:97	0:0	6	i_dst_pitch
water	25:108	0:0	6	;
break	26:12	26:17	6	
label	27:8	27:14	6	case 3 :
water	28:12	0:0	6	i_preview_offset
op	28:29	0:0	6	=
water	28:31	0:0	6	(
call	28:32	28:105	6	(int32_t)
arg	28:44	28:105	7	p_sys->ps_desk_planes[i_plane].i_lines-1-i_preview_lines
water	28:44	0:0	8	p_sys
op	28:49	0:0	8	->
water	28:51	0:0	8	ps_desk_planes
op	28:65	0:0	8	[
water	28:66	0:0	8	i_plane
op	28:73	0:0	8	]
op	28:74	0:0	8	.
water	28:75	0:0	8	i_lines
op	28:83	0:0	8	-
water	28:85	0:0	8	1
op	28:87	0:0	8	-
water	28:89	0:0	8	i_preview_lines
water	28:106	0:0	6	)
op	28:108	0:0	6	*
water	28:110	0:0	6	i_dst_pitch
water	28:121	0:0	6	;
break	29:12	29:17	6	
label	30:8	30:15	6	default :
water	31:12	0:0	6	i_preview_offset
op	31:29	0:0	6	=
water	31:31	0:0	6	0
water	31:32	0:0	6	;
break	32:12	32:17	6	
water	33:8	0:0	6	}
for	34:8	39:39	4	( int32_t y = 0 ;y < i_preview_lines;y ++)
forinit	0:0	34:27	5	 int32_t y = 0 ;
decl	34:14	34:27	6	int32_t	y
op	34:24	0:0	6	=
water	34:26	0:0	6	0
cond	34:29	34:33	5	y < i_preview_lines
water	34:29	0:0	6	y
op	34:31	0:0	6	<
water	34:33	0:0	6	i_preview_lines
forexpr	34:50	34:51	5	y ++
water	34:50	0:0	6	y
op	34:51	0:0	6	++
stmts	35:12	39:39	5	
for	35:12	39:39	6	( int32_t x = 0 ;x < i_preview_width;x ++)
forinit	0:0	35:31	7	 int32_t x = 0 ;
decl	35:18	35:31	8	int32_t	x
op	35:28	0:0	8	=
water	35:30	0:0	8	0
cond	35:33	35:37	7	x < i_preview_width
water	35:33	0:0	8	x
op	35:35	0:0	8	<
water	35:37	0:0	8	i_preview_width
forexpr	35:54	35:55	7	x ++
water	35:54	0:0	8	x
op	35:55	0:0	8	++
stmts	36:16	39:39	7	
call	36:16	39:38	8	memcpy
arg	36:24	36:88	9	&p_dst[y*i_dst_pitch+x*i_pixel_pitch+i_preview_offset]
op	36:24	0:0	10	&
water	36:25	0:0	10	p_dst
op	36:30	0:0	10	[
water	36:32	0:0	10	y
op	36:34	0:0	10	*
water	36:36	0:0	10	i_dst_pitch
op	36:48	0:0	10	+
water	36:50	0:0	10	x
op	36:52	0:0	10	*
water	36:54	0:0	10	i_pixel_pitch
op	36:68	0:0	10	+
water	36:70	0:0	10	i_preview_offset
op	36:87	0:0	10	]
arg	37:24	38:103	9	&p_src[(y*100/p_sys->s_current_param.i_preview_size)*i_src_pitch+(x*100/p_sys->s_current_param.i_preview_size)*i_pixel_pitch]
op	37:24	0:0	10	&
water	37:25	0:0	10	p_src
op	37:30	0:0	10	[
water	37:32	0:0	10	(
water	37:34	0:0	10	y
op	37:36	0:0	10	*
water	37:38	0:0	10	100
op	37:42	0:0	10	/
water	37:44	0:0	10	p_sys
op	37:49	0:0	10	->
water	37:51	0:0	10	s_current_param
op	37:66	0:0	10	.
water	37:67	0:0	10	i_preview_size
water	37:82	0:0	10	)
op	37:84	0:0	10	*
water	37:86	0:0	10	i_src_pitch
op	38:32	0:0	10	+
water	38:34	0:0	10	(
water	38:36	0:0	10	x
op	38:38	0:0	10	*
water	38:40	0:0	10	100
op	38:44	0:0	10	/
water	38:46	0:0	10	p_sys
op	38:51	0:0	10	->
water	38:53	0:0	10	s_current_param
op	38:68	0:0	10	.
water	38:69	0:0	10	i_preview_size
water	38:84	0:0	10	)
op	38:86	0:0	10	*
water	38:88	0:0	10	i_pixel_pitch
op	38:102	0:0	10	]
arg	39:24	39:38	9	i_pixel_pitch
water	39:24	0:0	10	i_pixel_pitch
water	39:39	0:0	8	;
water	40:4	0:0	4	}

func	2:0	12:0	0	void	aout_FormatPrepare
params	2:23	0:0	1	
param	2:25	2:58	2	audio_sample_format_t *	p_format
stmnts	4:4	11:4	1	
water	4:4	0:0	2	p_format
op	4:12	0:0	2	->
water	4:14	0:0	2	i_channels
op	4:25	0:0	2	=
call	4:27	4:59	2	aout_FormatNbChannels
arg	4:50	4:59	3	p_format
water	4:50	0:0	4	p_format
water	4:60	0:0	2	;
water	5:4	0:0	2	p_format
op	5:12	0:0	2	->
water	5:14	0:0	2	i_bitspersample
op	5:30	0:0	2	=
call	5:32	5:71	2	aout_BitsPerSample
arg	5:52	5:71	3	p_format->i_format
water	5:52	0:0	4	p_format
op	5:60	0:0	4	->
water	5:62	0:0	4	i_format
water	5:72	0:0	2	;
if	6:4	11:4	2	(p_format -> i_bitspersample > 0)
cond	6:8	6:36	3	p_format -> i_bitspersample > 0
water	6:8	0:0	4	p_format
op	6:16	0:0	4	->
water	6:18	0:0	4	i_bitspersample
op	6:34	0:0	4	>
water	6:36	0:0	4	0
stmts	7:4	11:4	3	
water	7:4	0:0	4	{
water	8:8	0:0	4	p_format
op	8:16	0:0	4	->
water	8:18	0:0	4	i_bytes_per_frame
op	8:36	0:0	4	=
water	8:38	0:0	4	(
water	8:40	0:0	4	p_format
op	8:48	0:0	4	->
water	8:50	0:0	4	i_bitspersample
op	8:66	0:0	4	/
water	8:68	0:0	4	8
water	8:70	0:0	4	)
call	9:36	9:70	4	*aout_FormatNbChannels
arg	9:61	9:70	5	p_format
water	9:61	0:0	6	p_format
water	9:71	0:0	4	;
water	10:8	0:0	4	p_format
op	10:16	0:0	4	->
water	10:18	0:0	4	i_frame_length
op	10:33	0:0	4	=
water	10:35	0:0	4	1
water	10:36	0:0	4	;
water	11:4	0:0	4	}

func	2:0	58:0	0	static int	TestForMotionInBlockMMX
params	2:34	0:0	1	
param	2:36	2:52	2	uint8_t *	p_pix_p
param	2:54	2:70	2	uint8_t *	p_pix_c
param	3:36	3:52	2	int	i_pitch_prev
param	3:54	3:70	2	int	i_pitch_curr
param	4:36	4:47	2	int *	pi_top
param	4:49	4:61	2	int *	pi_bot
stmnts	0:0	57:26	1	
decl	6:4	6:24	2	int32_t	i_motion
op	6:21	0:0	2	=
water	6:23	0:0	2	0
decl	7:4	7:28	2	int32_t	i_top_motion
op	7:25	0:0	2	=
water	7:27	0:0	2	0
decl	8:4	8:28	2	int32_t	i_bot_motion
op	8:25	0:0	2	=
water	8:27	0:0	2	0
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	mmx_t
water	9:23	0:0	2	bT
op	9:28	0:0	2	=
water	9:30	0:0	2	{
op	9:32	0:0	2	.
water	9:33	0:0	2	ub
op	9:36	0:0	2	=
water	9:38	0:0	2	{
water	9:40	0:0	2	T
water	9:41	0:0	2	,
water	9:43	0:0	2	T
water	9:44	0:0	2	,
water	9:46	0:0	2	T
water	9:47	0:0	2	,
water	9:49	0:0	2	T
water	9:50	0:0	2	,
water	9:52	0:0	2	T
water	9:53	0:0	2	,
water	9:55	0:0	2	T
water	9:56	0:0	2	,
water	9:58	0:0	2	T
water	9:59	0:0	2	,
water	9:61	0:0	2	T
water	9:63	0:0	2	}
water	9:65	0:0	2	}
water	9:66	0:0	2	;
call	10:4	10:23	2	pxor_r2r
arg	10:14	10:17	3	mm6
water	10:14	0:0	4	mm6
arg	10:19	10:23	3	mm6
water	10:19	0:0	4	mm6
water	10:24	0:0	2	;
call	11:4	11:23	2	movq_m2r
arg	11:14	11:16	3	bT
water	11:14	0:0	4	bT
arg	11:19	11:23	3	mm5
water	11:19	0:0	4	mm5
water	11:24	0:0	2	;
call	12:4	12:23	2	pxor_r2r
arg	12:14	12:17	3	mm3
water	12:14	0:0	4	mm3
arg	12:19	12:23	3	mm3
water	12:19	0:0	4	mm3
water	12:24	0:0	2	;
call	13:4	13:23	2	pxor_r2r
arg	13:14	13:17	3	mm4
water	13:14	0:0	4	mm4
arg	13:19	13:23	3	mm4
water	13:19	0:0	4	mm4
water	13:24	0:0	2	;
for	14:4	44:4	2	( int y = 0 ;y < 8;y += 2)
forinit	0:0	14:18	3	 int y = 0 ;
decl	14:9	14:18	4	int	y
op	14:15	0:0	4	=
water	14:17	0:0	4	0
cond	14:20	14:24	3	y < 8
water	14:20	0:0	4	y
op	14:22	0:0	4	<
water	14:24	0:0	4	8
forexpr	14:27	14:30	3	y += 2
water	14:27	0:0	4	y
op	14:28	0:0	4	+=
water	14:30	0:0	4	2
stmts	15:4	44:4	3	
water	15:4	0:0	4	{
call	17:8	17:45	4	movq_m2r
arg	17:18	17:39	5	*((uint64_t*)p_pix_c)
op	17:18	0:0	6	*
water	17:19	0:0	6	(
water	17:20	0:0	6	(
water	17:21	0:0	6	uint64_t
op	17:29	0:0	6	*
water	17:30	0:0	6	)
water	17:31	0:0	6	p_pix_c
water	17:38	0:0	6	)
arg	17:41	17:45	5	mm0
water	17:41	0:0	6	mm0
water	17:46	0:0	4	;
call	18:8	18:45	4	movq_m2r
arg	18:18	18:39	5	*((uint64_t*)p_pix_p)
op	18:18	0:0	6	*
water	18:19	0:0	6	(
water	18:20	0:0	6	(
water	18:21	0:0	6	uint64_t
op	18:29	0:0	6	*
water	18:30	0:0	6	)
water	18:31	0:0	6	p_pix_p
water	18:38	0:0	6	)
arg	18:41	18:45	5	mm1
water	18:41	0:0	6	mm1
water	18:46	0:0	4	;
call	19:8	19:27	4	movq_r2r
arg	19:18	19:21	5	mm0
water	19:18	0:0	6	mm0
arg	19:23	19:27	5	mm2
water	19:23	0:0	6	mm2
water	19:28	0:0	4	;
call	20:8	20:30	4	psubusb_r2r
arg	20:21	20:24	5	mm1
water	20:21	0:0	6	mm1
arg	20:26	20:30	5	mm2
water	20:26	0:0	6	mm2
water	20:31	0:0	4	;
call	21:8	21:30	4	psubusb_r2r
arg	21:21	21:24	5	mm0
water	21:21	0:0	6	mm0
arg	21:26	21:30	5	mm1
water	21:26	0:0	6	mm1
water	21:31	0:0	4	;
call	22:8	22:30	4	pcmpgtb_r2r
arg	22:21	22:24	5	mm5
water	22:21	0:0	6	mm5
arg	22:26	22:30	5	mm2
water	22:26	0:0	6	mm2
water	22:31	0:0	4	;
call	23:8	23:30	4	pcmpgtb_r2r
arg	23:21	23:24	5	mm5
water	23:21	0:0	6	mm5
arg	23:26	23:30	5	mm1
water	23:26	0:0	6	mm1
water	23:31	0:0	4	;
call	24:8	24:30	4	psadbw_r2r
arg	24:21	24:24	5	mm6
water	24:21	0:0	6	mm6
arg	24:26	24:30	5	mm2
water	24:26	0:0	6	mm2
water	24:31	0:0	4	;
call	25:8	25:30	4	psadbw_r2r
arg	25:21	25:24	5	mm6
water	25:21	0:0	6	mm6
arg	25:26	25:30	5	mm1
water	25:26	0:0	6	mm1
water	25:31	0:0	4	;
call	26:8	26:28	4	paddd_r2r
arg	26:19	26:22	5	mm2
water	26:19	0:0	6	mm2
arg	26:24	26:28	5	mm1
water	26:24	0:0	6	mm1
water	26:29	0:0	4	;
call	27:8	27:28	4	paddd_r2r
arg	27:19	27:22	5	mm1
water	27:19	0:0	6	mm1
arg	27:24	27:28	5	mm3
water	27:24	0:0	6	mm3
water	27:29	0:0	4	;
water	28:8	0:0	4	p_pix_c
op	28:16	0:0	4	+=
water	28:19	0:0	4	i_pitch_curr
water	28:31	0:0	4	;
water	29:8	0:0	4	p_pix_p
op	29:16	0:0	4	+=
water	29:19	0:0	4	i_pitch_prev
water	29:31	0:0	4	;
call	31:8	31:45	4	movq_m2r
arg	31:18	31:39	5	*((uint64_t*)p_pix_c)
op	31:18	0:0	6	*
water	31:19	0:0	6	(
water	31:20	0:0	6	(
water	31:21	0:0	6	uint64_t
op	31:29	0:0	6	*
water	31:30	0:0	6	)
water	31:31	0:0	6	p_pix_c
water	31:38	0:0	6	)
arg	31:41	31:45	5	mm0
water	31:41	0:0	6	mm0
water	31:46	0:0	4	;
call	32:8	32:45	4	movq_m2r
arg	32:18	32:39	5	*((uint64_t*)p_pix_p)
op	32:18	0:0	6	*
water	32:19	0:0	6	(
water	32:20	0:0	6	(
water	32:21	0:0	6	uint64_t
op	32:29	0:0	6	*
water	32:30	0:0	6	)
water	32:31	0:0	6	p_pix_p
water	32:38	0:0	6	)
arg	32:41	32:45	5	mm1
water	32:41	0:0	6	mm1
water	32:46	0:0	4	;
call	33:8	33:27	4	movq_r2r
arg	33:18	33:21	5	mm0
water	33:18	0:0	6	mm0
arg	33:23	33:27	5	mm2
water	33:23	0:0	6	mm2
water	33:28	0:0	4	;
call	34:8	34:30	4	psubusb_r2r
arg	34:21	34:24	5	mm1
water	34:21	0:0	6	mm1
arg	34:26	34:30	5	mm2
water	34:26	0:0	6	mm2
water	34:31	0:0	4	;
call	35:8	35:30	4	psubusb_r2r
arg	35:21	35:24	5	mm0
water	35:21	0:0	6	mm0
arg	35:26	35:30	5	mm1
water	35:26	0:0	6	mm1
water	35:31	0:0	4	;
call	36:8	36:30	4	pcmpgtb_r2r
arg	36:21	36:24	5	mm5
water	36:21	0:0	6	mm5
arg	36:26	36:30	5	mm2
water	36:26	0:0	6	mm2
water	36:31	0:0	4	;
call	37:8	37:30	4	pcmpgtb_r2r
arg	37:21	37:24	5	mm5
water	37:21	0:0	6	mm5
arg	37:26	37:30	5	mm1
water	37:26	0:0	6	mm1
water	37:31	0:0	4	;
call	38:8	38:30	4	psadbw_r2r
arg	38:21	38:24	5	mm6
water	38:21	0:0	6	mm6
arg	38:26	38:30	5	mm2
water	38:26	0:0	6	mm2
water	38:31	0:0	4	;
call	39:8	39:30	4	psadbw_r2r
arg	39:21	39:24	5	mm6
water	39:21	0:0	6	mm6
arg	39:26	39:30	5	mm1
water	39:26	0:0	6	mm1
water	39:31	0:0	4	;
call	40:8	40:28	4	paddd_r2r
arg	40:19	40:22	5	mm2
water	40:19	0:0	6	mm2
arg	40:24	40:28	5	mm1
water	40:24	0:0	6	mm1
water	40:29	0:0	4	;
call	41:8	41:28	4	paddd_r2r
arg	41:19	41:22	5	mm1
water	41:19	0:0	6	mm1
arg	41:24	41:28	5	mm4
water	41:24	0:0	6	mm4
water	41:29	0:0	4	;
water	42:8	0:0	4	p_pix_c
op	42:16	0:0	4	+=
water	42:19	0:0	4	i_pitch_curr
water	42:31	0:0	4	;
water	43:8	0:0	4	p_pix_p
op	43:16	0:0	4	+=
water	43:19	0:0	4	i_pitch_prev
water	43:31	0:0	4	;
water	44:4	0:0	4	}
call	45:4	45:24	2	movq_r2r
arg	45:15	45:18	3	mm3
water	45:15	0:0	4	mm3
arg	45:20	45:24	3	mm7
water	45:20	0:0	4	mm7
water	45:25	0:0	2	;
call	46:4	46:24	2	paddd_r2r
arg	46:15	46:18	3	mm4
water	46:15	0:0	4	mm4
arg	46:20	46:24	3	mm7
water	46:20	0:0	4	mm7
water	46:25	0:0	2	;
call	47:4	47:32	2	movd_r2m
arg	47:14	47:17	3	mm3
water	47:14	0:0	4	mm3
arg	47:19	47:32	3	i_top_motion
water	47:19	0:0	4	i_top_motion
water	47:33	0:0	2	;
call	48:4	48:32	2	movd_r2m
arg	48:14	48:17	3	mm4
water	48:14	0:0	4	mm4
arg	48:19	48:32	3	i_bot_motion
water	48:19	0:0	4	i_bot_motion
water	48:33	0:0	2	;
call	49:4	49:28	2	movd_r2m
arg	49:14	49:17	3	mm7
water	49:14	0:0	4	mm7
arg	49:19	49:28	3	i_motion
water	49:19	0:0	4	i_motion
water	49:29	0:0	2	;
water	51:4	0:0	2	i_top_motion
op	51:17	0:0	2	/=
water	51:20	0:0	2	255
water	51:23	0:0	2	;
water	52:4	0:0	2	i_bot_motion
op	52:17	0:0	2	/=
water	52:20	0:0	2	255
water	52:23	0:0	2	;
water	53:4	0:0	2	i_motion
op	53:17	0:0	2	/=
water	53:20	0:0	2	255
water	53:23	0:0	2	;
call	54:4	54:9	2	emms
water	54:10	0:0	2	;
water	55:4	0:0	2	(
op	55:5	0:0	2	*
water	55:6	0:0	2	pi_top
water	55:12	0:0	2	)
op	55:14	0:0	2	=
water	55:16	0:0	2	(
water	55:18	0:0	2	i_top_motion
op	55:31	0:0	2	>=
water	55:34	0:0	2	8
water	55:36	0:0	2	)
water	55:37	0:0	2	;
water	56:4	0:0	2	(
op	56:5	0:0	2	*
water	56:6	0:0	2	pi_bot
water	56:12	0:0	2	)
op	56:14	0:0	2	=
water	56:16	0:0	2	(
water	56:18	0:0	2	i_bot_motion
op	56:31	0:0	2	>=
water	56:34	0:0	2	8
water	56:36	0:0	2	)
water	56:37	0:0	2	;
return	57:4	57:26	2	(i_motion>=8)
water	57:11	0:0	3	(
water	57:12	0:0	3	i_motion
op	57:21	0:0	3	>=
water	57:24	0:0	3	8
water	57:25	0:0	3	)

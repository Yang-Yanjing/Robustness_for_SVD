func	2:0	42:0	0	void	CacheSave
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	p_this
param	2:38	2:53	2	const char *	dir
param	3:15	3:38	2	module_cache_t *	entries
param	3:40	3:48	2	size_t	n
stmnts	0:0	41:18	1	
decl	5:4	5:42	2	char	*filename
op	5:19	0:0	2	=
water	5:21	0:0	2	NULL
water	5:25	0:0	2	,
decl	5:4	5:42	2	char	*tmpname
op	5:36	0:0	2	=
water	5:38	0:0	2	NULL
if	6:4	7:16	2	(asprintf (& filename ,"%s" DIR_SEP CACHE_NAME ,dir ) == - 1)
cond	6:8	6:63	3	asprintf (& filename ,"%s" DIR_SEP CACHE_NAME ,dir ) == - 1
call	6:8	6:57	4	asprintf
arg	6:18	6:27	5	&filename
op	6:18	0:0	6	&
water	6:19	0:0	6	filename
arg	6:29	6:51	5	"%s"DIR_SEPCACHE_NAME
water	6:29	0:0	6	"%s"
water	6:33	0:0	6	DIR_SEP
water	6:41	0:0	6	CACHE_NAME
arg	6:53	6:57	5	dir
water	6:53	0:0	6	dir
op	6:59	0:0	4	==
op	6:62	0:0	4	-
water	6:63	0:0	4	1
stmts	7:8	7:16	3	
goto	7:8	7:16	4	out
water	7:13	0:0	5	out
if	8:4	9:16	2	(asprintf (& tmpname ,"%s.%" PRIu32 ,filename ,( uint32_t )getpid ( ) ) == - 1)
cond	8:8	8:77	3	asprintf (& tmpname ,"%s.%" PRIu32 ,filename ,( uint32_t )getpid ( ) ) == - 1
call	8:8	8:71	4	asprintf
arg	8:18	8:26	5	&tmpname
op	8:18	0:0	6	&
water	8:19	0:0	6	tmpname
arg	8:28	8:40	5	"%s.%"PRIu32
water	8:28	0:0	6	"%s.%"
water	8:34	0:0	6	PRIu32
arg	8:42	8:50	5	filename
water	8:42	0:0	6	filename
arg	8:52	8:71	5	(uint32_t)getpid()
water	8:52	0:0	6	(
water	8:53	0:0	6	uint32_t
water	8:61	0:0	6	)
call	8:62	8:70	6	getpid
op	8:73	0:0	4	==
op	8:76	0:0	4	-
water	8:77	0:0	4	1
stmts	9:8	9:16	3	
goto	9:8	9:16	4	out
water	9:13	0:0	5	out
call	10:4	10:56	2	msg_Dbg
arg	10:13	10:19	3	p_this
water	10:13	0:0	4	p_this
arg	10:21	10:46	3	"saving plugins cache %s"
water	10:21	0:0	4	"saving plugins cache %s"
arg	10:48	10:56	3	filename
water	10:48	0:0	4	filename
water	10:57	0:0	2	;
decl	11:4	11:42	2	FILE	*file
op	11:15	0:0	2	=
call	11:17	11:41	3	vlc_fopen
arg	11:28	11:35	4	tmpname
water	11:28	0:0	5	tmpname
arg	11:37	11:41	4	"wb"
water	11:37	0:0	5	"wb"
if	12:4	18:4	2	(file == NULL)
cond	12:8	12:16	3	file == NULL
water	12:8	0:0	4	file
op	12:13	0:0	4	==
water	12:16	0:0	4	NULL
stmts	13:4	18:4	3	
water	13:4	0:0	4	{
if	14:8	16:44	4	(errno != EACCES && errno != ENOENT)
cond	14:12	14:40	5	errno != EACCES && errno != ENOENT
water	14:12	0:0	6	errno
op	14:18	0:0	6	!=
water	14:21	0:0	6	EACCES
op	14:28	0:0	6	&&
water	14:31	0:0	6	errno
op	14:37	0:0	6	!=
water	14:40	0:0	6	ENOENT
stmts	15:12	16:44	5	
call	15:12	16:43	6	msg_Warn
arg	15:22	15:28	7	p_this
water	15:22	0:0	8	p_this
arg	15:30	15:52	7	"cannot create %s: %s"
water	15:30	0:0	8	"cannot create %s: %s"
arg	15:54	15:61	7	tmpname
water	15:54	0:0	8	tmpname
arg	16:22	16:43	7	vlc_strerror_c(errno)
call	16:22	16:42	8	vlc_strerror_c
arg	16:37	16:42	9	errno
water	16:37	0:0	10	errno
water	16:44	0:0	6	;
goto	17:8	17:16	4	out
water	17:13	0:0	5	out
water	18:4	0:0	4	}
if	19:4	27:4	2	(CacheSaveBank (file ,entries ,n ))
cond	19:8	19:39	3	CacheSaveBank (file ,entries ,n )
call	19:8	19:39	4	CacheSaveBank
arg	19:23	19:27	5	file
water	19:23	0:0	6	file
arg	19:29	19:36	5	entries
water	19:29	0:0	6	entries
arg	19:38	19:39	5	n
water	19:38	0:0	6	n
stmts	20:4	27:4	3	
water	20:4	0:0	4	{
call	21:8	22:39	4	msg_Warn
arg	21:18	21:24	5	p_this
water	21:18	0:0	6	p_this
arg	21:26	21:47	5	"cannot write %s: %s"
water	21:26	0:0	6	"cannot write %s: %s"
arg	21:49	21:56	5	tmpname
water	21:49	0:0	6	tmpname
arg	22:18	22:39	5	vlc_strerror_c(errno)
call	22:18	22:38	6	vlc_strerror_c
arg	22:33	22:38	7	errno
water	22:33	0:0	8	errno
water	22:40	0:0	4	;
call	23:8	23:22	4	clearerr
arg	23:18	23:22	5	file
water	23:18	0:0	6	file
water	23:23	0:0	4	;
call	24:8	24:20	4	fclose
arg	24:16	24:20	5	file
water	24:16	0:0	6	file
water	24:21	0:0	4	;
call	25:8	25:27	4	vlc_unlink
arg	25:20	25:27	5	tmpname
water	25:20	0:0	6	tmpname
water	25:28	0:0	4	;
goto	26:8	26:16	4	out
water	26:13	0:0	5	out
water	27:4	0:0	4	}
call	29:4	29:33	2	vlc_rename
arg	29:16	29:23	3	tmpname
water	29:16	0:0	4	tmpname
arg	29:25	29:33	3	filename
water	29:25	0:0	4	filename
water	29:34	0:0	2	;
call	30:4	30:16	2	fclose
arg	30:12	30:16	3	file
water	30:12	0:0	4	file
water	30:17	0:0	2	;
call	32:4	32:24	2	vlc_unlink
arg	32:16	32:24	3	filename
water	32:16	0:0	4	filename
water	32:25	0:0	2	;
call	33:4	33:16	2	fclose
arg	33:12	33:16	3	file
water	33:12	0:0	4	file
water	33:17	0:0	2	;
call	34:4	34:33	2	vlc_rename
arg	34:16	34:23	3	tmpname
water	34:16	0:0	4	tmpname
arg	34:25	34:33	3	filename
water	34:25	0:0	4	filename
water	34:34	0:0	2	;
label	36:0	36:3	2	out :
call	37:4	37:18	2	free
arg	37:10	37:18	3	filename
water	37:10	0:0	4	filename
water	37:19	0:0	2	;
call	38:4	38:17	2	free
arg	38:10	38:17	3	tmpname
water	38:10	0:0	4	tmpname
water	38:18	0:0	2	;
for	39:4	40:30	2	( size_t i = 0 ;i < n;i ++)
forinit	0:0	39:21	3	 size_t i = 0 ;
decl	39:9	39:21	4	size_t	i
op	39:18	0:0	4	=
water	39:20	0:0	4	0
cond	39:23	39:27	3	i < n
water	39:23	0:0	4	i
op	39:25	0:0	4	<
water	39:27	0:0	4	n
forexpr	39:30	39:31	3	i ++
water	39:30	0:0	4	i
op	39:31	0:0	4	++
stmts	40:8	40:30	3	
call	40:8	40:29	4	free
arg	40:14	40:29	5	entries[i].path
water	40:14	0:0	6	entries
op	40:21	0:0	6	[
water	40:22	0:0	6	i
op	40:23	0:0	6	]
op	40:24	0:0	6	.
water	40:25	0:0	6	path
water	40:30	0:0	4	;
call	41:4	41:17	2	free
arg	41:10	41:17	3	entries
water	41:10	0:0	4	entries
water	41:18	0:0	2	;

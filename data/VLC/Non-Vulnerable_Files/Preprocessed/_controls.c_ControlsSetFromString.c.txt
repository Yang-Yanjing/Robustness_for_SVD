func	2:0	86:0	0	static void	ControlsSetFromString
params	2:34	0:0	1	
param	2:35	2:52	2	vlc_object_t *	obj
param	3:35	3:62	2	const vlc_v4l2_ctrl_t *	list
stmnts	0:0	85:14	1	
decl	5:4	5:62	2	char	*buf
op	5:14	0:0	2	=
call	5:16	5:61	3	var_InheritString
arg	5:35	5:38	4	obj
water	5:35	0:0	5	obj
arg	5:40	5:61	4	CFG_PREFIX"set-ctrls"
water	5:40	0:0	5	CFG_PREFIX
water	5:50	0:0	5	"set-ctrls"
if	6:4	7:14	2	(buf == NULL)
cond	6:8	6:15	3	buf == NULL
water	6:8	0:0	4	buf
op	6:12	0:0	4	==
water	6:15	0:0	4	NULL
stmts	7:8	7:14	3	
return	7:8	7:14	4	
decl	8:4	8:17	2	char	*p
op	8:12	0:0	2	=
water	8:14	0:0	2	buf
if	9:4	10:11	2	(* p == '{')
cond	9:8	9:14	3	* p == '{'
op	9:8	0:0	4	*
water	9:9	0:0	4	p
op	9:11	0:0	4	==
water	9:14	0:0	4	'{'
stmts	10:8	10:11	3	
water	10:8	0:0	4	p
op	10:9	0:0	4	++
water	10:11	0:0	4	;
decl	11:4	11:31	2	char	*end
op	11:14	0:0	2	=
call	11:16	11:30	3	strchr
arg	11:24	11:25	4	p
water	11:24	0:0	5	p
arg	11:27	11:30	4	'}'
water	11:27	0:0	5	'}'
if	12:4	13:19	2	(end != NULL)
cond	12:8	12:15	3	end != NULL
water	12:8	0:0	4	end
op	12:12	0:0	4	!=
water	12:15	0:0	4	NULL
stmts	13:8	13:19	3	
op	13:8	0:0	4	*
water	13:9	0:0	4	end
op	13:13	0:0	4	=
water	13:15	0:0	4	'\0'
water	13:19	0:0	4	;
label	14:0	14:4	2	next :
while	15:4	84:4	2	(p != NULL && * p)
cond	15:11	15:25	3	p != NULL && * p
water	15:11	0:0	4	p
op	15:13	0:0	4	!=
water	15:16	0:0	4	NULL
op	15:21	0:0	4	&&
op	15:24	0:0	4	*
water	15:25	0:0	4	p
stmts	16:4	84:4	3	
water	16:4	0:0	4	{
decl	17:8	17:32	4	const char	*name
water	17:24	0:0	4	,
decl	17:8	17:32	4	const char	*value
water	18:8	0:0	4	p
op	18:10	0:0	4	+=
call	18:13	18:28	4	strspn
arg	18:21	18:22	5	p
water	18:21	0:0	6	p
arg	18:24	18:28	5	", "
water	18:24	0:0	6	", "
water	18:29	0:0	4	;
water	19:8	0:0	4	name
op	19:13	0:0	4	=
water	19:15	0:0	4	p
water	19:16	0:0	4	;
water	20:8	0:0	4	end
op	20:12	0:0	4	=
call	20:14	20:28	4	strchr
arg	20:22	20:23	5	p
water	20:22	0:0	6	p
arg	20:25	20:28	5	','
water	20:25	0:0	6	','
water	20:29	0:0	4	;
if	21:8	22:27	4	(end != NULL)
cond	21:12	21:19	5	end != NULL
water	21:12	0:0	6	end
op	21:16	0:0	6	!=
water	21:19	0:0	6	NULL
stmts	22:12	22:27	5	
op	22:12	0:0	6	*
water	22:13	0:0	6	(
water	22:14	0:0	6	end
op	22:17	0:0	6	++
water	22:19	0:0	6	)
op	22:21	0:0	6	=
water	22:23	0:0	6	'\0'
water	22:27	0:0	6	;
water	23:8	0:0	4	p
op	23:10	0:0	4	=
water	23:12	0:0	4	end
water	23:15	0:0	4	;
water	24:8	0:0	4	end
op	24:12	0:0	4	=
call	24:14	24:31	4	strchr
arg	24:22	24:26	5	name
water	24:22	0:0	6	name
arg	24:28	24:31	5	'='
water	24:28	0:0	6	'='
water	24:32	0:0	4	;
if	25:8	30:8	4	(end == NULL)
cond	25:12	25:19	5	end == NULL
water	25:12	0:0	6	end
op	25:16	0:0	6	==
water	25:19	0:0	6	NULL
stmts	26:8	30:8	5	
water	26:8	0:0	6	{
call	28:12	28:69	6	msg_Err
arg	28:21	28:24	7	obj
water	28:21	0:0	8	obj
arg	28:26	28:63	7	"syntax error in \"%s\": missing '='"
water	28:26	0:0	8	"syntax error in \"%s\": missing '='"
arg	28:65	28:69	7	name
water	28:65	0:0	8	name
water	28:70	0:0	6	;
continue	29:12	29:20	6	
water	30:8	0:0	6	}
op	31:8	0:0	4	*
water	31:9	0:0	4	(
water	31:10	0:0	4	end
op	31:13	0:0	4	++
water	31:15	0:0	4	)
op	31:17	0:0	4	=
water	31:19	0:0	4	'\0'
water	31:23	0:0	4	;
water	32:8	0:0	4	value
op	32:14	0:0	4	=
water	32:16	0:0	4	end
water	32:19	0:0	4	;
for	33:8	82:16	4	( const vlc_v4l2_ctrl_t * c = list ;c != NULL;c = c -> next)
forinit	0:0	33:44	5	 const vlc_v4l2_ctrl_t * c = list ;
decl	33:13	33:44	6	const vlc_v4l2_ctrl_t	*c
op	33:38	0:0	6	=
water	33:40	0:0	6	list
cond	33:46	33:51	5	c != NULL
water	33:46	0:0	6	c
op	33:48	0:0	6	!=
water	33:51	0:0	6	NULL
forexpr	33:57	33:64	5	c = c -> next
water	33:57	0:0	6	c
op	33:59	0:0	6	=
water	33:61	0:0	6	c
op	33:62	0:0	6	->
water	33:64	0:0	6	next
stmts	34:12	82:16	5	
if	34:12	82:16	6	(!strcasecmp (name ,c -> name ))
cond	34:16	34:42	7	!strcasecmp (name ,c -> name )
op	34:16	0:0	8	!
call	34:17	34:42	8	strcasecmp
arg	34:29	34:33	9	name
water	34:29	0:0	10	name
arg	34:35	34:42	9	c->name
water	34:35	0:0	10	c
op	34:36	0:0	10	->
water	34:38	0:0	10	name
stmts	35:16	82:16	7	
switch	35:16	82:16	8	(c -> type)
cond	35:24	35:27	9	c -> type
water	35:24	0:0	10	c
op	35:25	0:0	10	->
water	35:27	0:0	10	type
stmts	36:16	82:16	9	
water	36:16	0:0	10	{
label	37:20	37:47	10	case V4L2_CTRL_TYPE_INTEGER :
label	38:20	38:47	10	case V4L2_CTRL_TYPE_BOOLEAN :
label	39:20	39:44	10	case V4L2_CTRL_TYPE_MENU :
label	40:20	40:52	10	case V4L2_CTRL_TYPE_INTEGER_MENU :
water	41:20	0:0	10	{
decl	42:24	42:58	10	long	val
op	42:33	0:0	10	=
call	42:35	42:57	11	strtol
arg	42:43	42:48	12	value
water	42:43	0:0	13	value
arg	42:50	42:54	12	&end
op	42:50	0:0	13	&
water	42:51	0:0	13	end
arg	42:56	42:57	12	0
water	42:56	0:0	13	0
if	43:24	48:24	10	(* end)
cond	43:28	43:29	11	* end
op	43:28	0:0	12	*
water	43:29	0:0	12	end
stmts	44:24	48:24	11	
water	44:24	0:0	12	{
call	45:28	46:61	12	msg_Err
arg	45:37	45:40	13	obj
water	45:37	0:0	14	obj
arg	45:42	46:54	13	"syntax error in \"%s\": "" not an integer"
water	45:42	0:0	14	"syntax error in \"%s\": "
water	46:37	0:0	14	" not an integer"
arg	46:56	46:61	13	value
water	46:56	0:0	14	value
water	46:62	0:0	12	;
goto	47:28	47:37	12	next
water	47:33	0:0	13	next
water	48:24	0:0	12	}
call	49:24	49:42	10	ControlSet
arg	49:36	49:37	11	c
water	49:36	0:0	12	c
arg	49:39	49:42	11	val
water	49:39	0:0	12	val
water	49:43	0:0	10	;
break	50:24	50:29	10	
water	51:20	0:0	10	}
label	52:20	52:49	10	case V4L2_CTRL_TYPE_INTEGER64 :
water	53:20	0:0	10	{
water	54:24	0:0	10	long
water	54:29	0:0	10	long
water	54:34	0:0	10	val
op	54:38	0:0	10	=
call	54:40	54:63	10	strtoll
arg	54:49	54:54	11	value
water	54:49	0:0	12	value
arg	54:56	54:60	11	&end
op	54:56	0:0	12	&
water	54:57	0:0	12	end
arg	54:62	54:63	11	0
water	54:62	0:0	12	0
water	54:64	0:0	10	;
if	55:24	60:24	10	(* end)
cond	55:28	55:29	11	* end
op	55:28	0:0	12	*
water	55:29	0:0	12	end
stmts	56:24	60:24	11	
water	56:24	0:0	12	{
call	57:28	58:61	12	msg_Err
arg	57:37	57:40	13	obj
water	57:37	0:0	14	obj
arg	57:42	58:54	13	"syntax error in \"%s\": "" not an integer"
water	57:42	0:0	14	"syntax error in \"%s\": "
water	58:37	0:0	14	" not an integer"
arg	58:56	58:61	13	value
water	58:56	0:0	14	value
water	58:62	0:0	12	;
goto	59:28	59:37	12	next
water	59:33	0:0	13	next
water	60:24	0:0	12	}
call	61:24	61:44	10	ControlSet64
arg	61:38	61:39	11	c
water	61:38	0:0	12	c
arg	61:41	61:44	11	val
water	61:41	0:0	12	val
water	61:45	0:0	10	;
break	62:24	62:29	10	
water	63:20	0:0	10	}
label	64:20	64:46	10	case V4L2_CTRL_TYPE_STRING :
call	65:24	65:47	10	ControlSetStr
arg	65:39	65:40	11	c
water	65:39	0:0	12	c
arg	65:42	65:47	11	value
water	65:42	0:0	12	value
water	65:48	0:0	10	;
break	66:24	66:29	10	
label	67:20	67:47	10	case V4L2_CTRL_TYPE_BITMASK :
water	68:20	0:0	10	{
decl	69:24	69:68	10	unsigned long	val
op	69:42	0:0	10	=
call	69:44	69:67	11	strtoul
arg	69:53	69:58	12	value
water	69:53	0:0	13	value
arg	69:60	69:64	12	&end
op	69:60	0:0	13	&
water	69:61	0:0	13	end
arg	69:66	69:67	12	0
water	69:66	0:0	13	0
if	70:24	75:24	10	(* end)
cond	70:28	70:29	11	* end
op	70:28	0:0	12	*
water	70:29	0:0	12	end
stmts	71:24	75:24	11	
water	71:24	0:0	12	{
call	72:28	73:61	12	msg_Err
arg	72:37	72:40	13	obj
water	72:37	0:0	14	obj
arg	72:42	73:54	13	"syntax error in \"%s\": "" not an integer"
water	72:42	0:0	14	"syntax error in \"%s\": "
water	73:37	0:0	14	" not an integer"
arg	73:56	73:61	13	value
water	73:56	0:0	14	value
water	73:62	0:0	12	;
goto	74:28	74:37	12	next
water	74:33	0:0	13	next
water	75:24	0:0	12	}
call	76:24	76:42	10	ControlSet
arg	76:36	76:37	11	c
water	76:36	0:0	12	c
arg	76:39	76:42	11	val
water	76:39	0:0	12	val
water	76:43	0:0	10	;
break	77:24	77:29	10	
water	78:20	0:0	10	}
label	79:20	79:27	10	default :
call	80:24	80:74	10	msg_Err
arg	80:33	80:36	11	obj
water	80:33	0:0	12	obj
arg	80:38	80:68	11	"setting \"%s\" not supported"
water	80:38	0:0	12	"setting \"%s\" not supported"
arg	80:70	80:74	11	name
water	80:70	0:0	12	name
water	80:75	0:0	10	;
goto	81:24	81:33	10	next
water	81:29	0:0	11	next
water	82:16	0:0	10	}
call	83:8	83:58	4	msg_Err
arg	83:17	83:20	5	obj
water	83:17	0:0	6	obj
arg	83:22	83:52	5	"control \"%s\" not available"
water	83:22	0:0	6	"control \"%s\" not available"
arg	83:54	83:58	5	name
water	83:54	0:0	6	name
water	83:59	0:0	4	;
water	84:4	0:0	4	}
call	85:4	85:13	2	free
arg	85:10	85:13	3	buf
water	85:10	0:0	4	buf
water	85:14	0:0	2	;

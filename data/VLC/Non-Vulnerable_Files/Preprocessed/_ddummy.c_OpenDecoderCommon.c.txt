func	2:0	31:0	0	static int	OpenDecoderCommon
params	2:28	0:0	1	
param	2:30	2:50	2	vlc_object_t *	p_this
param	2:52	2:70	2	bool	b_force_dump
stmnts	0:0	30:22	1	
decl	4:4	4:41	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:42	2	char	psz_file[10+3*sizeof(p_dec)]
call	6:4	6:62	2	snprintf
arg	6:14	6:22	3	psz_file
water	6:14	0:0	4	psz_file
arg	6:24	6:41	3	sizeof(psz_file)
op	6:24	0:0	4	sizeof
water	6:30	0:0	4	(
water	6:32	0:0	4	psz_file
water	6:40	0:0	4	)
arg	6:43	6:54	3	"stream.%p"
water	6:43	0:0	4	"stream.%p"
arg	6:56	6:62	3	p_dec
water	6:56	0:0	4	p_dec
water	6:63	0:0	2	;
if	7:4	8:64	2	(! b_force_dump)
cond	7:8	7:9	3	! b_force_dump
op	7:8	0:0	4	!
water	7:9	0:0	4	b_force_dump
stmts	8:8	8:64	3	
water	8:8	0:0	4	b_force_dump
op	8:21	0:0	4	=
call	8:23	8:63	4	var_InheritBool
arg	8:40	8:45	5	p_dec
water	8:40	0:0	6	p_dec
arg	8:47	8:63	5	"dummy-save-es"
water	8:47	0:0	6	"dummy-save-es"
water	8:64	0:0	4	;
if	9:4	19:4	2	(b_force_dump)
cond	9:8	9:8	3	b_force_dump
water	9:8	0:0	4	b_force_dump
stmts	10:4	19:4	3	
water	10:4	0:0	4	{
decl	11:8	11:50	4	FILE	*stream
op	11:21	0:0	4	=
call	11:23	11:49	5	vlc_fopen
arg	11:34	11:42	6	psz_file
water	11:34	0:0	7	psz_file
arg	11:44	11:49	6	"wb"
water	11:44	0:0	7	"wb"
if	12:8	16:8	4	(stream == NULL)
cond	12:12	12:22	5	stream == NULL
water	12:12	0:0	6	stream
op	12:19	0:0	6	==
water	12:22	0:0	6	NULL
stmts	13:8	16:8	5	
water	13:8	0:0	6	{
call	14:12	14:59	6	msg_Err
arg	14:21	14:26	7	p_dec
water	14:21	0:0	8	p_dec
arg	14:28	14:48	7	"cannot create `%s'"
water	14:28	0:0	8	"cannot create `%s'"
arg	14:50	14:59	7	psz_file
water	14:50	0:0	8	psz_file
water	14:60	0:0	6	;
return	15:12	15:31	6	VLC_EGENERIC
water	15:19	0:0	7	VLC_EGENERIC
water	16:8	0:0	6	}
call	17:8	17:64	4	msg_Dbg
arg	17:17	17:22	5	p_dec
water	17:17	0:0	6	p_dec
arg	17:24	17:53	5	"dumping stream to file `%s'"
water	17:24	0:0	6	"dumping stream to file `%s'"
arg	17:55	17:64	5	psz_file
water	17:55	0:0	6	psz_file
water	17:65	0:0	4	;
water	18:8	0:0	4	p_dec
op	18:13	0:0	4	->
water	18:15	0:0	4	p_sys
op	18:21	0:0	4	=
water	18:23	0:0	4	(
water	18:24	0:0	4	void
op	18:29	0:0	4	*
water	18:30	0:0	4	)
water	18:31	0:0	4	stream
water	18:37	0:0	4	;
water	19:4	0:0	4	}
else	20:4	21:27	2
stmts	21:8	21:27	3	
water	21:8	0:0	4	p_dec
op	21:13	0:0	4	->
water	21:15	0:0	4	p_sys
op	21:21	0:0	4	=
water	21:23	0:0	4	NULL
water	21:27	0:0	4	;
water	23:4	0:0	2	p_dec
op	23:9	0:0	2	->
water	23:11	0:0	2	pf_decode_video
op	23:27	0:0	2	=
water	23:29	0:0	2	(
water	23:30	0:0	2	picture_t
op	23:40	0:0	2	*
call	23:41	23:68	2	(*)
arg	23:45	23:56	3	decoder_t*
water	23:45	0:0	4	decoder_t
op	23:55	0:0	4	*
arg	23:58	23:68	3	block_t**
water	23:58	0:0	4	block_t
op	23:66	0:0	4	*
op	23:67	0:0	4	*
water	23:69	0:0	2	)
water	24:8	0:0	2	DecodeBlock
water	24:19	0:0	2	;
water	25:4	0:0	2	p_dec
op	25:9	0:0	2	->
water	25:11	0:0	2	pf_decode_audio
op	25:27	0:0	2	=
water	25:29	0:0	2	(
water	25:30	0:0	2	block_t
op	25:38	0:0	2	*
call	25:39	25:66	2	(*)
arg	25:43	25:54	3	decoder_t*
water	25:43	0:0	4	decoder_t
op	25:53	0:0	4	*
arg	25:56	25:66	3	block_t**
water	25:56	0:0	4	block_t
op	25:64	0:0	4	*
op	25:65	0:0	4	*
water	25:67	0:0	2	)
water	26:8	0:0	2	DecodeBlock
water	26:19	0:0	2	;
water	27:4	0:0	2	p_dec
op	27:9	0:0	2	->
water	27:11	0:0	2	pf_decode_sub
op	27:25	0:0	2	=
water	27:27	0:0	2	(
water	27:28	0:0	2	subpicture_t
op	27:41	0:0	2	*
call	27:42	27:69	2	(*)
arg	27:46	27:57	3	decoder_t*
water	27:46	0:0	4	decoder_t
op	27:56	0:0	4	*
arg	27:59	27:69	3	block_t**
water	27:59	0:0	4	block_t
op	27:67	0:0	4	*
op	27:68	0:0	4	*
water	27:70	0:0	2	)
water	28:8	0:0	2	DecodeBlock
water	28:19	0:0	2	;
call	29:4	29:52	2	es_format_Copy
arg	29:20	29:35	3	&p_dec->fmt_out
op	29:20	0:0	4	&
water	29:21	0:0	4	p_dec
op	29:26	0:0	4	->
water	29:28	0:0	4	fmt_out
arg	29:37	29:52	3	&p_dec->fmt_in
op	29:37	0:0	4	&
water	29:38	0:0	4	p_dec
op	29:43	0:0	4	->
water	29:45	0:0	4	fmt_in
water	29:53	0:0	2	;
return	30:4	30:22	2	VLC_SUCCESS
water	30:11	0:0	3	VLC_SUCCESS

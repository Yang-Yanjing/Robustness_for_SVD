func	2:0	77:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	76:22	1	
decl	4:4	4:42	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:34	0:0	2	*
water	4:35	0:0	2	)
water	4:36	0:0	2	p_this
decl	5:4	5:70	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
op	5:42	0:0	2	=
call	5:44	5:69	3	malloc
arg	5:52	5:69	4	sizeof(*p_sys)
op	5:52	0:0	5	sizeof
water	5:58	0:0	5	(
op	5:60	0:0	5	*
water	5:61	0:0	5	p_sys
water	5:67	0:0	5	)
if	6:4	7:25	2	(! p_sys)
cond	6:8	6:9	3	! p_sys
op	6:8	0:0	4	!
water	6:9	0:0	4	p_sys
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
water	8:4	0:0	2	p_sys
op	8:9	0:0	2	->
water	8:11	0:0	2	i_channels
op	8:28	0:0	2	=
call	8:30	8:77	2	aout_FormatNbChannels
arg	8:53	8:77	3	&p_filter->fmt_in.audio
op	8:53	0:0	4	&
water	8:54	0:0	4	p_filter
op	8:62	0:0	4	->
water	8:64	0:0	4	fmt_in
op	8:70	0:0	4	.
water	8:71	0:0	4	audio
water	8:78	0:0	2	;
water	9:4	0:0	2	p_sys
op	9:9	0:0	2	->
water	9:11	0:0	2	f_delayTime
op	9:28	0:0	2	=
call	9:30	9:71	2	var_CreateGetFloat
arg	9:50	9:56	3	p_this
water	9:50	0:0	4	p_this
arg	9:58	9:71	3	"delay-time"
water	9:58	0:0	4	"delay-time"
water	9:72	0:0	2	;
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	f_sweepDepth
op	10:28	0:0	2	=
call	10:30	10:72	2	var_CreateGetFloat
arg	10:50	10:56	3	p_this
water	10:50	0:0	4	p_this
arg	10:58	10:72	3	"sweep-depth"
water	10:58	0:0	4	"sweep-depth"
water	10:73	0:0	2	;
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	f_sweepRate
op	11:28	0:0	2	=
call	11:30	11:71	2	var_CreateGetFloat
arg	11:50	11:56	3	p_this
water	11:50	0:0	4	p_this
arg	11:58	11:71	3	"sweep-rate"
water	11:58	0:0	4	"sweep-rate"
water	11:72	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	f_feedbackGain
op	12:28	0:0	2	=
call	12:30	12:74	2	var_CreateGetFloat
arg	12:50	12:56	3	p_this
water	12:50	0:0	4	p_this
arg	12:58	12:74	3	"feedback-gain"
water	12:58	0:0	4	"feedback-gain"
water	12:75	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	f_dryLevel
op	13:28	0:0	2	=
call	13:30	13:68	2	var_CreateGetFloat
arg	13:50	13:56	3	p_this
water	13:50	0:0	4	p_this
arg	13:58	13:68	3	"dry-mix"
water	13:58	0:0	4	"dry-mix"
water	13:69	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	f_wetLevel
op	14:28	0:0	2	=
call	14:30	14:68	2	var_CreateGetFloat
arg	14:50	14:56	3	p_this
water	14:50	0:0	4	p_this
arg	14:58	14:68	3	"wet-mix"
water	14:58	0:0	4	"wet-mix"
water	14:69	0:0	2	;
call	15:4	15:64	2	var_AddCallback
arg	15:21	15:27	3	p_this
water	15:21	0:0	4	p_this
arg	15:29	15:41	3	"delay-time"
water	15:29	0:0	4	"delay-time"
arg	15:43	15:56	3	paramCallback
water	15:43	0:0	4	paramCallback
arg	15:58	15:64	3	p_sys
water	15:58	0:0	4	p_sys
water	15:65	0:0	2	;
call	16:4	16:65	2	var_AddCallback
arg	16:21	16:27	3	p_this
water	16:21	0:0	4	p_this
arg	16:29	16:42	3	"sweep-depth"
water	16:29	0:0	4	"sweep-depth"
arg	16:44	16:57	3	paramCallback
water	16:44	0:0	4	paramCallback
arg	16:59	16:65	3	p_sys
water	16:59	0:0	4	p_sys
water	16:66	0:0	2	;
call	17:4	17:64	2	var_AddCallback
arg	17:21	17:27	3	p_this
water	17:21	0:0	4	p_this
arg	17:29	17:41	3	"sweep-rate"
water	17:29	0:0	4	"sweep-rate"
arg	17:43	17:56	3	paramCallback
water	17:43	0:0	4	paramCallback
arg	17:58	17:64	3	p_sys
water	17:58	0:0	4	p_sys
water	17:65	0:0	2	;
call	18:4	18:67	2	var_AddCallback
arg	18:21	18:27	3	p_this
water	18:21	0:0	4	p_this
arg	18:29	18:44	3	"feedback-gain"
water	18:29	0:0	4	"feedback-gain"
arg	18:46	18:59	3	paramCallback
water	18:46	0:0	4	paramCallback
arg	18:61	18:67	3	p_sys
water	18:61	0:0	4	p_sys
water	18:68	0:0	2	;
call	19:4	19:61	2	var_AddCallback
arg	19:21	19:27	3	p_this
water	19:21	0:0	4	p_this
arg	19:29	19:38	3	"dry-mix"
water	19:29	0:0	4	"dry-mix"
arg	19:40	19:53	3	paramCallback
water	19:40	0:0	4	paramCallback
arg	19:55	19:61	3	p_sys
water	19:55	0:0	4	p_sys
water	19:62	0:0	2	;
call	20:4	20:61	2	var_AddCallback
arg	20:21	20:27	3	p_this
water	20:21	0:0	4	p_this
arg	20:29	20:38	3	"wet-mix"
water	20:29	0:0	4	"wet-mix"
arg	20:40	20:53	3	paramCallback
water	20:40	0:0	4	paramCallback
arg	20:55	20:61	3	p_sys
water	20:55	0:0	4	p_sys
water	20:62	0:0	2	;
if	21:4	26:4	2	(p_sys -> f_delayTime < 0 . 0)
cond	21:8	21:31	3	p_sys -> f_delayTime < 0 . 0
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	f_delayTime
op	21:27	0:0	4	<
water	21:29	0:0	4	0
op	21:30	0:0	4	.
water	21:31	0:0	4	0
stmts	22:4	26:4	3	
water	22:4	0:0	4	{
call	23:8	23:51	4	msg_Err
arg	23:17	23:25	5	p_filter
water	23:17	0:0	6	p_filter
arg	23:27	23:51	5	"Delay Time is invalid"
water	23:27	0:0	6	"Delay Time is invalid"
water	23:52	0:0	4	;
call	24:8	24:18	4	free
arg	24:13	24:18	5	p_sys
water	24:13	0:0	6	p_sys
water	24:19	0:0	4	;
return	25:8	25:27	4	VLC_EGENERIC
water	25:15	0:0	5	VLC_EGENERIC
water	26:4	0:0	4	}
if	27:4	32:4	2	(p_sys -> f_sweepDepth > p_sys -> f_delayTime || p_sys -> f_sweepDepth < 0 . 0)
cond	27:8	27:76	3	p_sys -> f_sweepDepth > p_sys -> f_delayTime || p_sys -> f_sweepDepth < 0 . 0
water	27:8	0:0	4	p_sys
op	27:13	0:0	4	->
water	27:15	0:0	4	f_sweepDepth
op	27:28	0:0	4	>
water	27:30	0:0	4	p_sys
op	27:35	0:0	4	->
water	27:37	0:0	4	f_delayTime
op	27:49	0:0	4	||
water	27:52	0:0	4	p_sys
op	27:57	0:0	4	->
water	27:59	0:0	4	f_sweepDepth
op	27:72	0:0	4	<
water	27:74	0:0	4	0
op	27:75	0:0	4	.
water	27:76	0:0	4	0
stmts	28:4	32:4	3	
water	28:4	0:0	4	{
call	29:8	29:52	4	msg_Err
arg	29:17	29:25	5	p_filter
water	29:17	0:0	6	p_filter
arg	29:27	29:52	5	"Sweep Depth is invalid"
water	29:27	0:0	6	"Sweep Depth is invalid"
water	29:53	0:0	4	;
call	30:8	30:20	4	free
arg	30:14	30:20	5	p_sys
water	30:14	0:0	6	p_sys
water	30:21	0:0	4	;
return	31:8	31:27	4	VLC_EGENERIC
water	31:15	0:0	5	VLC_EGENERIC
water	32:4	0:0	4	}
if	33:4	38:4	2	(p_sys -> f_sweepRate < 0 . 0)
cond	33:8	33:31	3	p_sys -> f_sweepRate < 0 . 0
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	f_sweepRate
op	33:27	0:0	4	<
water	33:29	0:0	4	0
op	33:30	0:0	4	.
water	33:31	0:0	4	0
stmts	34:4	38:4	3	
water	34:4	0:0	4	{
call	35:8	35:51	4	msg_Err
arg	35:17	35:25	5	p_filter
water	35:17	0:0	6	p_filter
arg	35:27	35:51	5	"Sweep Rate is invalid"
water	35:27	0:0	6	"Sweep Rate is invalid"
water	35:52	0:0	4	;
call	36:8	36:20	4	free
arg	36:14	36:20	5	p_sys
water	36:14	0:0	6	p_sys
water	36:21	0:0	4	;
return	37:8	37:27	4	VLC_EGENERIC
water	37:15	0:0	5	VLC_EGENERIC
water	38:4	0:0	4	}
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	i_bufferLength
op	40:26	0:0	2	=
water	40:28	0:0	2	p_sys
op	40:33	0:0	2	->
water	40:35	0:0	2	i_channels
op	40:46	0:0	2	*
water	40:48	0:0	2	(
call	40:50	41:77	2	(int)
arg	40:57	41:77	3	(p_sys->f_delayTime+p_sys->f_sweepDepth)*p_filter->fmt_in.audio.i_rate/1000
water	40:57	0:0	4	(
water	40:59	0:0	4	p_sys
op	40:64	0:0	4	->
water	40:66	0:0	4	f_delayTime
op	41:16	0:0	4	+
water	41:18	0:0	4	p_sys
op	41:23	0:0	4	->
water	41:25	0:0	4	f_sweepDepth
water	41:38	0:0	4	)
op	41:40	0:0	4	*
water	41:42	0:0	4	p_filter
op	41:50	0:0	4	->
water	41:52	0:0	4	fmt_in
op	41:58	0:0	4	.
water	41:59	0:0	4	audio
op	41:64	0:0	4	.
water	41:65	0:0	4	i_rate
op	41:71	0:0	4	/
water	41:72	0:0	4	1000
op	41:79	0:0	2	+
water	41:81	0:0	2	1
water	41:83	0:0	2	)
water	41:84	0:0	2	;
call	42:4	45:62	2	msg_Dbg
arg	42:13	42:22	3	p_filter
water	42:13	0:0	4	p_filter
arg	42:24	43:53	3	"Buffer length:%d, Channels:%d, Sweep Depth:%f, Delay ""time:%f, Sweep Rate:%f, Sample Rate: %d"
water	42:24	0:0	4	"Buffer length:%d, Channels:%d, Sweep Depth:%f, Delay "
water	43:12	0:0	4	"time:%f, Sweep Rate:%f, Sample Rate: %d"
arg	43:55	43:76	3	p_sys->i_bufferLength
water	43:55	0:0	4	p_sys
op	43:60	0:0	4	->
water	43:62	0:0	4	i_bufferLength
arg	44:12	44:29	3	p_sys->i_channels
water	44:12	0:0	4	p_sys
op	44:17	0:0	4	->
water	44:19	0:0	4	i_channels
arg	44:31	44:50	3	p_sys->f_sweepDepth
water	44:31	0:0	4	p_sys
op	44:36	0:0	4	->
water	44:38	0:0	4	f_sweepDepth
arg	44:52	44:70	3	p_sys->f_delayTime
water	44:52	0:0	4	p_sys
op	44:57	0:0	4	->
water	44:59	0:0	4	f_delayTime
arg	45:12	45:30	3	p_sys->f_sweepRate
water	45:12	0:0	4	p_sys
op	45:17	0:0	4	->
water	45:19	0:0	4	f_sweepRate
arg	45:32	45:62	3	p_filter->fmt_in.audio.i_rate
water	45:32	0:0	4	p_filter
op	45:40	0:0	4	->
water	45:42	0:0	4	fmt_in
op	45:48	0:0	4	.
water	45:49	0:0	4	audio
op	45:54	0:0	4	.
water	45:55	0:0	4	i_rate
water	45:63	0:0	2	;
if	46:4	51:4	2	(p_sys -> i_bufferLength <= 0)
cond	46:8	46:33	3	p_sys -> i_bufferLength <= 0
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	i_bufferLength
op	46:30	0:0	4	<=
water	46:33	0:0	4	0
stmts	47:4	51:4	3	
water	47:4	0:0	4	{
call	48:8	48:79	4	msg_Err
arg	48:17	48:25	5	p_filter
water	48:17	0:0	6	p_filter
arg	48:27	48:79	5	"Delay-time, Sample rate or Channels was incorrect"
water	48:27	0:0	6	"Delay-time, Sample rate or Channels was incorrect"
water	48:80	0:0	4	;
call	49:8	49:18	4	free
arg	49:13	49:18	5	p_sys
water	49:13	0:0	6	p_sys
water	49:19	0:0	4	;
return	50:8	50:27	4	VLC_EGENERIC
water	50:15	0:0	5	VLC_EGENERIC
water	51:4	0:0	4	}
water	52:4	0:0	2	p_sys
op	52:9	0:0	2	->
water	52:11	0:0	2	p_delayLineStart
op	52:28	0:0	2	=
call	52:30	52:77	2	calloc
arg	52:38	52:59	3	p_sys->i_bufferLength
water	52:38	0:0	4	p_sys
op	52:43	0:0	4	->
water	52:45	0:0	4	i_bufferLength
arg	52:61	52:77	3	sizeof(float)
op	52:61	0:0	4	sizeof
water	52:67	0:0	4	(
water	52:69	0:0	4	float
water	52:75	0:0	4	)
water	52:78	0:0	2	;
if	53:4	57:4	2	(! p_sys -> p_delayLineStart)
cond	53:8	53:16	3	! p_sys -> p_delayLineStart
op	53:8	0:0	4	!
water	53:9	0:0	4	p_sys
op	53:14	0:0	4	->
water	53:16	0:0	4	p_delayLineStart
stmts	54:4	57:4	3	
water	54:4	0:0	4	{
call	55:8	55:20	4	free
arg	55:14	55:20	5	p_sys
water	55:14	0:0	6	p_sys
water	55:21	0:0	4	;
return	56:8	56:25	4	VLC_ENOMEM
water	56:15	0:0	5	VLC_ENOMEM
water	57:4	0:0	4	}
water	58:4	0:0	2	p_sys
op	58:9	0:0	2	->
water	58:11	0:0	2	i_cumulative
op	58:24	0:0	2	=
water	58:26	0:0	2	0
water	58:27	0:0	2	;
water	59:4	0:0	2	p_sys
op	59:9	0:0	2	->
water	59:11	0:0	2	i_step
op	59:18	0:0	2	=
water	59:20	0:0	2	p_sys
op	59:25	0:0	2	->
water	59:27	0:0	2	f_sweepRate
op	59:39	0:0	2	>
water	59:41	0:0	2	0
water	59:43	0:0	2	?
water	59:45	0:0	2	1
water	59:47	0:0	2	:
water	59:49	0:0	2	0
water	59:50	0:0	2	;
water	60:4	0:0	2	p_sys
op	60:9	0:0	2	->
water	60:11	0:0	2	f_offset
op	60:20	0:0	2	=
water	60:22	0:0	2	0
water	60:23	0:0	2	;
water	61:4	0:0	2	p_sys
op	61:9	0:0	2	->
water	61:11	0:0	2	f_temp
op	61:18	0:0	2	=
water	61:20	0:0	2	0
water	61:21	0:0	2	;
water	62:4	0:0	2	p_sys
op	62:9	0:0	2	->
water	62:11	0:0	2	p_delayLineEnd
op	62:26	0:0	2	=
water	62:28	0:0	2	p_sys
op	62:33	0:0	2	->
water	62:35	0:0	2	p_delayLineStart
op	62:52	0:0	2	+
water	62:54	0:0	2	p_sys
op	62:59	0:0	2	->
water	62:61	0:0	2	i_bufferLength
water	62:75	0:0	2	;
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	p_write
op	63:19	0:0	2	=
water	63:21	0:0	2	p_sys
op	63:26	0:0	2	->
water	63:28	0:0	2	p_delayLineStart
water	63:44	0:0	2	;
if	64:4	67:4	2	(p_sys -> f_sweepDepth <small_value ( ) || p_filter -> fmt_in . audio . i_rate <small_value ( ))
cond	64:8	65:56	3	p_sys -> f_sweepDepth <small_value ( ) || p_filter -> fmt_in . audio . i_rate <small_value ( )
water	64:8	0:0	4	p_sys
op	64:13	0:0	4	->
water	64:15	0:0	4	f_sweepDepth
op	64:28	0:0	4	<
call	64:30	64:42	4	small_value
op	64:44	0:0	4	||
water	65:12	0:0	4	p_filter
op	65:20	0:0	4	->
water	65:22	0:0	4	fmt_in
op	65:28	0:0	4	.
water	65:29	0:0	4	audio
op	65:34	0:0	4	.
water	65:35	0:0	4	i_rate
op	65:42	0:0	4	<
call	65:44	65:56	4	small_value
stmts	65:60	67:4	3	
water	65:60	0:0	4	{
water	66:8	0:0	4	p_sys
op	66:13	0:0	4	->
water	66:15	0:0	4	f_sinMultiplier
op	66:31	0:0	4	=
water	66:33	0:0	4	0
op	66:34	0:0	4	.
water	66:35	0:0	4	0
water	66:36	0:0	4	;
water	67:4	0:0	4	}
else	68:4	71:4	2
stmts	68:9	71:4	3	
water	68:9	0:0	4	{
water	69:8	0:0	4	p_sys
op	69:13	0:0	4	->
water	69:15	0:0	4	f_sinMultiplier
op	69:31	0:0	4	=
water	69:33	0:0	4	11
op	69:36	0:0	4	*
water	69:38	0:0	4	p_sys
op	69:43	0:0	4	->
water	69:45	0:0	4	f_sweepRate
op	69:57	0:0	4	/
water	70:12	0:0	4	(
water	70:14	0:0	4	7
op	70:16	0:0	4	*
water	70:18	0:0	4	p_sys
op	70:23	0:0	4	->
water	70:25	0:0	4	f_sweepDepth
op	70:38	0:0	4	*
water	70:40	0:0	4	p_filter
op	70:48	0:0	4	->
water	70:50	0:0	4	fmt_in
op	70:56	0:0	4	.
water	70:57	0:0	4	audio
op	70:62	0:0	4	.
water	70:63	0:0	4	i_rate
water	70:70	0:0	4	)
water	70:72	0:0	4	;
water	71:4	0:0	4	}
water	72:4	0:0	2	p_sys
op	72:9	0:0	2	->
water	72:11	0:0	2	i_sampleRate
op	72:24	0:0	2	=
water	72:26	0:0	2	p_filter
op	72:34	0:0	2	->
water	72:36	0:0	2	fmt_in
op	72:42	0:0	2	.
water	72:43	0:0	2	audio
op	72:48	0:0	2	.
water	72:49	0:0	2	i_rate
water	72:55	0:0	2	;
water	73:4	0:0	2	p_filter
op	73:12	0:0	2	->
water	73:14	0:0	2	fmt_in
op	73:20	0:0	2	.
water	73:21	0:0	2	audio
op	73:26	0:0	2	.
water	73:27	0:0	2	i_format
op	73:36	0:0	2	=
water	73:38	0:0	2	VLC_CODEC_FL32
water	73:52	0:0	2	;
water	74:4	0:0	2	p_filter
op	74:12	0:0	2	->
water	74:14	0:0	2	fmt_out
op	74:21	0:0	2	.
water	74:22	0:0	2	audio
op	74:28	0:0	2	=
water	74:30	0:0	2	p_filter
op	74:38	0:0	2	->
water	74:40	0:0	2	fmt_in
op	74:46	0:0	2	.
water	74:47	0:0	2	audio
water	74:52	0:0	2	;
water	75:4	0:0	2	p_filter
op	75:12	0:0	2	->
water	75:14	0:0	2	pf_audio_filter
op	75:30	0:0	2	=
water	75:32	0:0	2	DoWork
water	75:38	0:0	2	;
return	76:4	76:22	2	VLC_SUCCESS
water	76:11	0:0	3	VLC_SUCCESS

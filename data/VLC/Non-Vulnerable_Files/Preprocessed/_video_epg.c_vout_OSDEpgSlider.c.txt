func	2:0	45:0	0	static subpicture_region_t *	vout_OSDEpgSlider
params	2:46	0:0	1	
param	2:47	2:52	2	int	x
param	2:54	2:59	2	int	y
param	3:47	3:56	2	int	width
param	3:58	3:68	2	int	height
param	4:47	4:58	2	float	ratio
stmnts	0:0	44:17	1	
decl	7:4	15:5	2	video_palette_t	palette
op	7:28	0:0	2	=
water	7:30	0:0	2	{
op	8:8	0:0	2	.
water	8:9	0:0	2	i_entries
op	8:19	0:0	2	=
water	8:21	0:0	2	4
water	8:22	0:0	2	,
op	9:8	0:0	2	.
water	9:9	0:0	2	palette
op	9:17	0:0	2	=
water	9:19	0:0	2	{
op	10:12	0:0	2	[
water	10:13	0:0	2	0
op	10:14	0:0	2	]
op	10:16	0:0	2	=
water	10:18	0:0	2	{
water	10:20	0:0	2	0
water	10:21	0:0	2	xff
water	10:24	0:0	2	,
water	10:26	0:0	2	0
water	10:27	0:0	2	x80
water	10:30	0:0	2	,
water	10:32	0:0	2	0
water	10:33	0:0	2	x80
water	10:36	0:0	2	,
water	10:38	0:0	2	0
water	10:39	0:0	2	x00
water	10:43	0:0	2	}
water	10:44	0:0	2	,
op	11:12	0:0	2	[
water	11:13	0:0	2	1
op	11:14	0:0	2	]
op	11:16	0:0	2	=
water	11:18	0:0	2	{
water	11:20	0:0	2	0
water	11:21	0:0	2	x00
water	11:24	0:0	2	,
water	11:26	0:0	2	0
water	11:27	0:0	2	x80
water	11:30	0:0	2	,
water	11:32	0:0	2	0
water	11:33	0:0	2	x80
water	11:36	0:0	2	,
water	11:38	0:0	2	0
water	11:39	0:0	2	x00
water	11:43	0:0	2	}
water	11:44	0:0	2	,
op	12:12	0:0	2	[
water	12:13	0:0	2	2
op	12:14	0:0	2	]
op	12:16	0:0	2	=
water	12:18	0:0	2	{
water	12:20	0:0	2	0
water	12:21	0:0	2	xff
water	12:24	0:0	2	,
water	12:26	0:0	2	0
water	12:27	0:0	2	x80
water	12:30	0:0	2	,
water	12:32	0:0	2	0
water	12:33	0:0	2	x80
water	12:36	0:0	2	,
water	12:38	0:0	2	0
water	12:39	0:0	2	xff
water	12:43	0:0	2	}
water	12:44	0:0	2	,
op	13:12	0:0	2	[
water	13:13	0:0	2	3
op	13:14	0:0	2	]
op	13:16	0:0	2	=
water	13:18	0:0	2	{
water	13:20	0:0	2	0
water	13:21	0:0	2	x00
water	13:24	0:0	2	,
water	13:26	0:0	2	0
water	13:27	0:0	2	x80
water	13:30	0:0	2	,
water	13:32	0:0	2	0
water	13:33	0:0	2	x80
water	13:36	0:0	2	,
water	13:38	0:0	2	0
water	13:39	0:0	2	xff
water	13:43	0:0	2	}
water	13:44	0:0	2	,
water	14:8	0:0	2	}
water	14:9	0:0	2	,
water	15:4	0:0	2	}
decl	16:4	16:22	2	video_format_t	fmt
call	17:4	17:42	2	video_format_Init
arg	17:22	17:26	3	&fmt
op	17:22	0:0	4	&
water	17:23	0:0	4	fmt
arg	17:28	17:42	3	VLC_CODEC_YUVP
water	17:28	0:0	4	VLC_CODEC_YUVP
water	17:43	0:0	2	;
water	18:4	0:0	2	fmt
op	18:7	0:0	2	.
water	18:8	0:0	2	i_width
op	18:17	0:0	2	=
water	18:19	0:0	2	fmt
op	18:22	0:0	2	.
water	18:23	0:0	2	i_visible_width
op	18:40	0:0	2	=
water	18:42	0:0	2	width
water	18:47	0:0	2	;
water	19:4	0:0	2	fmt
op	19:7	0:0	2	.
water	19:8	0:0	2	i_height
op	19:17	0:0	2	=
water	19:19	0:0	2	fmt
op	19:22	0:0	2	.
water	19:23	0:0	2	i_visible_height
op	19:40	0:0	2	=
water	19:42	0:0	2	height
water	19:48	0:0	2	;
water	20:4	0:0	2	fmt
op	20:7	0:0	2	.
water	20:8	0:0	2	i_sar_num
op	20:18	0:0	2	=
water	20:20	0:0	2	1
water	20:21	0:0	2	;
water	21:4	0:0	2	fmt
op	21:7	0:0	2	.
water	21:8	0:0	2	i_sar_den
op	21:18	0:0	2	=
water	21:20	0:0	2	1
water	21:21	0:0	2	;
water	22:4	0:0	2	fmt
op	22:7	0:0	2	.
water	22:8	0:0	2	p_palette
op	22:18	0:0	2	=
op	22:20	0:0	2	&
water	22:21	0:0	2	palette
water	22:28	0:0	2	;
decl	23:4	23:61	2	subpicture_region_t	*region
op	23:32	0:0	2	=
call	23:34	23:60	3	subpicture_region_New
arg	23:56	23:60	4	&fmt
op	23:56	0:0	5	&
water	23:57	0:0	5	fmt
if	24:4	25:19	2	(! region)
cond	24:8	24:9	3	! region
op	24:8	0:0	4	!
water	24:9	0:0	4	region
stmts	25:8	25:19	3	
return	25:8	25:19	4	NULL
water	25:15	0:0	5	NULL
water	26:4	0:0	2	region
op	26:10	0:0	2	->
water	26:12	0:0	2	i_x
op	26:16	0:0	2	=
water	26:18	0:0	2	x
water	26:19	0:0	2	;
water	27:4	0:0	2	region
op	27:10	0:0	2	->
water	27:12	0:0	2	i_y
op	27:16	0:0	2	=
water	27:18	0:0	2	y
water	27:19	0:0	2	;
decl	28:4	28:42	2	picture_t	*picture
op	28:23	0:0	2	=
water	28:25	0:0	2	region
op	28:31	0:0	2	->
water	28:33	0:0	2	p_picture
water	29:4	0:0	2	ratio
op	29:10	0:0	2	=
call	29:12	29:32	2	VLC_CLIP
arg	29:21	29:26	3	ratio
water	29:21	0:0	4	ratio
arg	29:28	29:29	3	0
water	29:28	0:0	4	0
arg	29:31	29:32	3	1
water	29:31	0:0	4	1
water	29:33	0:0	2	;
decl	30:4	30:41	2	int	filled_part_width
op	30:26	0:0	2	=
water	30:28	0:0	2	ratio
op	30:34	0:0	2	*
water	30:36	0:0	2	width
for	31:4	43:4	2	( int j = 0 ;j < height;j ++)
forinit	0:0	31:18	3	 int j = 0 ;
decl	31:9	31:18	4	int	j
op	31:15	0:0	4	=
water	31:17	0:0	4	0
cond	31:20	31:24	3	j < height
water	31:20	0:0	4	j
op	31:22	0:0	4	<
water	31:24	0:0	4	height
forexpr	31:32	31:33	3	j ++
water	31:32	0:0	4	j
op	31:33	0:0	4	++
stmts	31:37	43:4	3	
water	31:37	0:0	4	{
for	32:8	42:8	4	( int i = 0 ;i < width;i ++)
forinit	0:0	32:22	5	 int i = 0 ;
decl	32:13	32:22	6	int	i
op	32:19	0:0	6	=
water	32:21	0:0	6	0
cond	32:24	32:28	5	i < width
water	32:24	0:0	6	i
op	32:26	0:0	6	<
water	32:28	0:0	6	width
forexpr	32:35	32:36	5	i ++
water	32:35	0:0	6	i
op	32:36	0:0	6	++
stmts	32:40	42:8	5	
water	32:40	0:0	6	{
decl	34:12	35:55	6	bool	is_outline
op	34:28	0:0	6	=
water	34:30	0:0	6	j
op	34:32	0:0	6	==
water	34:35	0:0	6	0
op	34:37	0:0	6	||
water	34:40	0:0	6	j
op	34:42	0:0	6	==
water	34:45	0:0	6	height
op	34:52	0:0	6	-
water	34:54	0:0	6	1
op	34:56	0:0	6	||
water	35:30	0:0	6	i
op	35:32	0:0	6	==
water	35:35	0:0	6	0
op	35:37	0:0	6	||
water	35:40	0:0	6	i
op	35:42	0:0	6	==
water	35:45	0:0	6	width
op	35:52	0:0	6	-
water	35:54	0:0	6	1
decl	38:12	40:50	6	bool	is_border
op	38:27	0:0	6	=
water	38:29	0:0	6	j
op	38:31	0:0	6	<
water	38:33	0:0	6	3
op	38:35	0:0	6	||
water	38:38	0:0	6	j
op	38:40	0:0	6	>
water	38:42	0:0	6	height
op	38:49	0:0	6	-
water	38:51	0:0	6	4
op	38:53	0:0	6	||
water	39:29	0:0	6	i
op	39:31	0:0	6	<
water	39:33	0:0	6	3
op	39:35	0:0	6	||
water	39:38	0:0	6	i
op	39:40	0:0	6	>
water	39:42	0:0	6	width
op	39:49	0:0	6	-
water	39:51	0:0	6	4
op	39:53	0:0	6	||
water	40:29	0:0	6	i
op	40:31	0:0	6	<
water	40:33	0:0	6	filled_part_width
water	41:12	0:0	6	picture
op	41:19	0:0	6	->
water	41:21	0:0	6	p
op	41:22	0:0	6	->
water	41:24	0:0	6	p_pixels
op	41:32	0:0	6	[
water	41:33	0:0	6	picture
op	41:40	0:0	6	->
water	41:42	0:0	6	p
op	41:43	0:0	6	->
water	41:45	0:0	6	i_pitch
op	41:53	0:0	6	*
water	41:55	0:0	6	j
op	41:57	0:0	6	+
water	41:59	0:0	6	i
op	41:60	0:0	6	]
op	41:62	0:0	6	=
water	41:64	0:0	6	2
op	41:66	0:0	6	*
water	41:68	0:0	6	is_border
op	41:78	0:0	6	+
water	41:80	0:0	6	is_outline
water	41:90	0:0	6	;
water	42:8	0:0	6	}
water	43:4	0:0	4	}
return	44:4	44:17	2	region
water	44:11	0:0	3	region

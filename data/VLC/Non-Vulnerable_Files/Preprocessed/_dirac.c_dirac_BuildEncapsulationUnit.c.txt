func	2:0	65:0	0	static block_t *	dirac_BuildEncapsulationUnit
params	2:44	0:0	1	
param	2:46	2:62	2	decoder_t *	p_dec
param	2:64	2:81	2	block_t *	p_block
stmnts	0:0	64:18	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
call	5:4	5:80	2	assert
arg	5:11	5:80	3	p_block->i_buffer>=13&&0x42424344==GetDWBE(p_block->p_buffer)
water	5:11	0:0	4	p_block
op	5:18	0:0	4	->
water	5:20	0:0	4	i_buffer
op	5:29	0:0	4	>=
water	5:32	0:0	4	13
op	5:35	0:0	4	&&
water	5:38	0:0	4	0
water	5:39	0:0	4	x42424344
op	5:49	0:0	4	==
call	5:52	5:79	4	GetDWBE
arg	5:61	5:79	5	p_block->p_buffer
water	5:61	0:0	6	p_block
op	5:68	0:0	6	->
water	5:70	0:0	6	p_buffer
water	5:81	0:0	2	;
if	6:4	16:4	2	(p_sys -> i_eu_pts <= VLC_TS_INVALID && p_sys -> i_eu_dts <= VLC_TS_INVALID)
cond	6:8	6:64	3	p_sys -> i_eu_pts <= VLC_TS_INVALID && p_sys -> i_eu_dts <= VLC_TS_INVALID
water	6:8	0:0	4	p_sys
op	6:13	0:0	4	->
water	6:15	0:0	4	i_eu_pts
op	6:24	0:0	4	<=
water	6:27	0:0	4	VLC_TS_INVALID
op	6:42	0:0	4	&&
water	6:45	0:0	4	p_sys
op	6:50	0:0	4	->
water	6:52	0:0	4	i_eu_dts
op	6:61	0:0	4	<=
water	6:64	0:0	4	VLC_TS_INVALID
stmts	7:4	16:4	3	
water	7:4	0:0	4	{
if	11:8	15:8	4	(p_block -> i_pts > VLC_TS_INVALID || p_block -> i_dts > VLC_TS_INVALID)
cond	11:12	11:64	5	p_block -> i_pts > VLC_TS_INVALID || p_block -> i_dts > VLC_TS_INVALID
water	11:12	0:0	6	p_block
op	11:19	0:0	6	->
water	11:21	0:0	6	i_pts
op	11:27	0:0	6	>
water	11:29	0:0	6	VLC_TS_INVALID
op	11:44	0:0	6	||
water	11:47	0:0	6	p_block
op	11:54	0:0	6	->
water	11:56	0:0	6	i_dts
op	11:62	0:0	6	>
water	11:64	0:0	6	VLC_TS_INVALID
stmts	12:8	15:8	5	
water	12:8	0:0	6	{
water	13:12	0:0	6	p_sys
op	13:17	0:0	6	->
water	13:19	0:0	6	i_eu_pts
op	13:28	0:0	6	=
water	13:30	0:0	6	p_block
op	13:37	0:0	6	->
water	13:39	0:0	6	i_pts
water	13:44	0:0	6	;
water	14:12	0:0	6	p_sys
op	14:17	0:0	6	->
water	14:19	0:0	6	i_eu_dts
op	14:28	0:0	6	=
water	14:30	0:0	6	p_block
op	14:37	0:0	6	->
water	14:39	0:0	6	i_dts
water	14:44	0:0	6	;
water	15:8	0:0	6	}
water	16:4	0:0	4	}
decl	21:4	21:55	2	block_t	*p_eu
op	21:18	0:0	2	=
water	21:20	0:0	2	p_sys
op	21:25	0:0	2	->
water	21:27	0:0	2	p_eu
water	21:32	0:0	2	?
water	21:34	0:0	2	p_sys
op	21:39	0:0	2	->
water	21:41	0:0	2	p_eu
water	21:46	0:0	2	:
water	21:48	0:0	2	p_block
decl	22:4	22:63	2	int	i_block
op	22:16	0:0	2	=
call	22:18	22:62	3	dirac_InspectDataUnit
arg	22:41	22:46	4	p_dec
water	22:41	0:0	5	p_dec
arg	22:48	22:56	4	&p_block
op	22:48	0:0	5	&
water	22:49	0:0	5	p_block
arg	22:58	22:62	4	p_eu
water	22:58	0:0	5	p_eu
if	23:4	31:4	2	(! p_block)
cond	23:8	23:9	3	! p_block
op	23:8	0:0	4	!
water	23:9	0:0	4	p_block
stmts	24:4	31:4	3	
water	24:4	0:0	4	{
return	30:8	30:19	4	NULL
water	30:15	0:0	5	NULL
water	31:4	0:0	4	}
call	32:4	32:55	2	block_ChainLastAppend
arg	32:27	32:45	3	&p_sys->pp_eu_last
op	32:27	0:0	4	&
water	32:28	0:0	4	p_sys
op	32:33	0:0	4	->
water	32:35	0:0	4	pp_eu_last
arg	32:47	32:55	3	p_block
water	32:47	0:0	4	p_block
water	32:56	0:0	2	;
decl	33:4	33:63	2	dirac_block_encap_t	*p_dbe
op	33:31	0:0	2	=
call	33:33	33:62	3	dirac_GetBlockEncap
arg	33:54	33:62	4	p_block
water	33:54	0:0	5	p_block
if	37:4	41:4	2	(p_dbe)
cond	37:8	37:8	3	p_dbe
water	37:8	0:0	4	p_dbe
stmts	38:4	41:4	3	
water	38:4	0:0	4	{
call	39:8	39:61	4	SetDWBE
arg	39:17	39:38	5	p_block->p_buffer+9
water	39:17	0:0	6	p_block
op	39:24	0:0	6	->
water	39:26	0:0	6	p_buffer
op	39:35	0:0	6	+
water	39:37	0:0	6	9
arg	39:40	39:61	5	p_sys->u_eu_last_npo
water	39:40	0:0	6	p_sys
op	39:45	0:0	6	->
water	39:47	0:0	6	u_eu_last_npo
water	39:62	0:0	4	;
water	40:8	0:0	4	p_sys
op	40:13	0:0	4	->
water	40:15	0:0	4	u_eu_last_npo
op	40:29	0:0	4	=
water	40:31	0:0	4	p_dbe
op	40:36	0:0	4	->
water	40:38	0:0	4	u_last_next_offset
water	40:56	0:0	4	;
water	41:4	0:0	4	}
if	43:4	47:4	2	(i_block != DIRAC_DU_ENDS_EU)
cond	43:8	43:19	3	i_block != DIRAC_DU_ENDS_EU
water	43:8	0:0	4	i_block
op	43:16	0:0	4	!=
water	43:19	0:0	4	DIRAC_DU_ENDS_EU
stmts	44:4	47:4	3	
water	44:4	0:0	4	{
return	46:8	46:19	4	NULL
water	46:15	0:0	5	NULL
water	47:4	0:0	4	}
decl	50:4	50:83	2	block_t	*p_eu_last
op	50:23	0:0	2	=
water	50:25	0:0	2	(
water	50:26	0:0	2	block_t
op	50:33	0:0	2	*
water	50:34	0:0	2	)
water	50:36	0:0	2	p_sys
op	50:41	0:0	2	->
water	50:43	0:0	2	pp_eu_last
op	50:54	0:0	2	-
call	50:56	50:82	3	offsetof
arg	50:66	50:73	4	block_t
water	50:66	0:0	5	block_t
arg	50:75	50:82	4	p_next
water	50:75	0:0	5	p_next
water	51:4	0:0	2	p_dbe
op	51:10	0:0	2	=
call	51:12	51:46	2	dirac_RemoveBlockEncap
arg	51:36	51:46	3	p_eu_last
water	51:36	0:0	4	p_eu_last
water	51:47	0:0	2	;
decl	52:4	52:47	2	uint8_t	u_parse_code
op	52:25	0:0	2	=
water	52:27	0:0	2	p_block
op	52:34	0:0	2	->
water	52:36	0:0	2	p_buffer
op	52:44	0:0	2	[
water	52:45	0:0	2	4
op	52:46	0:0	2	]
water	54:4	0:0	2	p_block
op	54:12	0:0	2	=
call	54:14	54:45	2	block_ChainGather
arg	54:33	54:45	3	p_sys->p_eu
water	54:33	0:0	4	p_sys
op	54:38	0:0	4	->
water	54:40	0:0	4	p_eu
water	54:46	0:0	2	;
call	55:4	55:20	2	assert
arg	55:12	55:20	3	p_block
water	55:12	0:0	4	p_block
water	55:21	0:0	2	;
water	56:4	0:0	2	p_block
op	56:11	0:0	2	->
water	56:13	0:0	2	i_flags
op	56:21	0:0	2	|=
water	56:24	0:0	2	DIRAC_NON_DATED
water	56:39	0:0	2	;
if	57:4	61:4	2	(p_dbe)
cond	57:8	57:8	3	p_dbe
water	57:8	0:0	4	p_dbe
stmts	58:4	61:4	3	
water	58:4	0:0	4	{
call	59:8	59:45	4	dirac_AddBlockEncap
arg	59:29	59:37	5	&p_block
op	59:29	0:0	6	&
water	59:30	0:0	6	p_block
arg	59:39	59:45	5	p_dbe
water	59:39	0:0	6	p_dbe
water	59:46	0:0	4	;
if	60:8	60:82	4	(dirac_isPicture (u_parse_code ))
cond	60:12	60:42	5	dirac_isPicture (u_parse_code )
call	60:12	60:42	6	dirac_isPicture
arg	60:29	60:42	7	u_parse_code
water	60:29	0:0	8	u_parse_code
stmts	60:46	60:82	5	
water	60:46	0:0	6	p_block
op	60:53	0:0	6	->
water	60:55	0:0	6	i_flags
op	60:63	0:0	6	&=
water	60:66	0:0	6	~DIRAC_NON_DATED
water	60:82	0:0	6	;
water	61:4	0:0	4	}
water	62:4	0:0	2	p_sys
op	62:9	0:0	2	->
water	62:11	0:0	2	p_eu
op	62:16	0:0	2	=
water	62:18	0:0	2	NULL
water	62:22	0:0	2	;
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	pp_eu_last
op	63:22	0:0	2	=
op	63:24	0:0	2	&
water	63:25	0:0	2	p_sys
op	63:30	0:0	2	->
water	63:32	0:0	2	p_eu
water	63:36	0:0	2	;
return	64:4	64:18	2	p_block
water	64:11	0:0	3	p_block

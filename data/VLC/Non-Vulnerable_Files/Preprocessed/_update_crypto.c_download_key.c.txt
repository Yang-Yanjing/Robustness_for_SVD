func	2:0	50:0	0	public_key_t *	download_key
params	2:26	0:0	1	
param	2:28	2:48	2	vlc_object_t *	p_this
param	3:20	3:43	2	const uint8_t *	p_longid
param	3:45	3:79	2	const uint8_t *	p_signature_issuer
stmnts	0:0	49:17	1	
decl	5:4	5:17	2	char	*psz_url
if	6:4	9:19	2	(asprintf (& psz_url ,"http://download.videolan.org/pub/keys/%.2X%.2X%.2X%.2X%.2X%.2X%.2X%.2X.asc" ,p_longid [ 0 ] ,p_longid [ 1 ] ,p_longid [ 2 ] ,p_longid [ 3 ] ,p_longid [ 4 ] ,p_longid [ 5 ] ,p_longid [ 6 ] ,p_longid [ 7 ] ) == - 1)
cond	6:8	8:77	3	asprintf (& psz_url ,"http://download.videolan.org/pub/keys/%.2X%.2X%.2X%.2X%.2X%.2X%.2X%.2X.asc" ,p_longid [ 0 ] ,p_longid [ 1 ] ,p_longid [ 2 ] ,p_longid [ 3 ] ,p_longid [ 4 ] ,p_longid [ 5 ] ,p_longid [ 6 ] ,p_longid [ 7 ] ) == - 1
call	6:8	8:71	4	asprintf
arg	6:18	6:26	5	&psz_url
op	6:18	0:0	6	&
water	6:19	0:0	6	psz_url
arg	6:28	6:104	5	"http://download.videolan.org/pub/keys/%.2X%.2X%.2X%.2X%.2X%.2X%.2X%.2X.asc"
water	6:28	0:0	6	"http://download.videolan.org/pub/keys/%.2X%.2X%.2X%.2X%.2X%.2X%.2X%.2X.asc"
arg	7:20	7:31	5	p_longid[0]
water	7:20	0:0	6	p_longid
op	7:28	0:0	6	[
water	7:29	0:0	6	0
op	7:30	0:0	6	]
arg	7:33	7:44	5	p_longid[1]
water	7:33	0:0	6	p_longid
op	7:41	0:0	6	[
water	7:42	0:0	6	1
op	7:43	0:0	6	]
arg	7:46	7:57	5	p_longid[2]
water	7:46	0:0	6	p_longid
op	7:54	0:0	6	[
water	7:55	0:0	6	2
op	7:56	0:0	6	]
arg	7:59	7:70	5	p_longid[3]
water	7:59	0:0	6	p_longid
op	7:67	0:0	6	[
water	7:68	0:0	6	3
op	7:69	0:0	6	]
arg	8:20	8:31	5	p_longid[4]
water	8:20	0:0	6	p_longid
op	8:28	0:0	6	[
water	8:29	0:0	6	4
op	8:30	0:0	6	]
arg	8:33	8:44	5	p_longid[5]
water	8:33	0:0	6	p_longid
op	8:41	0:0	6	[
water	8:42	0:0	6	5
op	8:43	0:0	6	]
arg	8:46	8:57	5	p_longid[6]
water	8:46	0:0	6	p_longid
op	8:54	0:0	6	[
water	8:55	0:0	6	6
op	8:56	0:0	6	]
arg	8:59	8:71	5	p_longid[7]
water	8:59	0:0	6	p_longid
op	8:67	0:0	6	[
water	8:68	0:0	6	7
op	8:69	0:0	6	]
op	8:73	0:0	4	==
op	8:76	0:0	4	-
water	8:77	0:0	4	1
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
decl	10:4	10:57	2	stream_t	*p_stream
op	10:23	0:0	2	=
call	10:25	10:56	3	stream_UrlNew
arg	10:40	10:46	4	p_this
water	10:40	0:0	5	p_this
arg	10:48	10:56	4	psz_url
water	10:48	0:0	5	psz_url
call	11:4	11:18	2	free
arg	11:10	11:18	3	psz_url
water	11:10	0:0	4	psz_url
water	11:19	0:0	2	;
if	12:4	13:19	2	(! p_stream)
cond	12:8	12:9	3	! p_stream
op	12:8	0:0	4	!
water	12:9	0:0	4	p_stream
stmts	13:8	13:19	3	
return	13:8	13:19	4	NULL
water	13:15	0:0	5	NULL
decl	14:4	14:44	2	int64_t	i_size
op	14:19	0:0	2	=
call	14:21	14:43	3	stream_Size
arg	14:34	14:43	4	p_stream
water	14:34	0:0	5	p_stream
if	15:4	19:4	2	(i_size < 0)
cond	15:8	15:17	3	i_size < 0
water	15:8	0:0	4	i_size
op	15:15	0:0	4	<
water	15:17	0:0	4	0
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
call	17:8	17:32	4	stream_Delete
arg	17:23	17:32	5	p_stream
water	17:23	0:0	6	p_stream
water	17:33	0:0	4	;
return	18:8	18:19	4	NULL
water	18:15	0:0	5	NULL
water	19:4	0:0	4	}
decl	20:4	20:47	2	uint8_t	*p_buf
op	20:19	0:0	2	=
water	20:21	0:0	2	(
water	20:22	0:0	2	uint8_t
op	20:29	0:0	2	*
water	20:30	0:0	2	)
call	20:31	20:46	3	malloc
arg	20:39	20:46	4	i_size
water	20:39	0:0	5	i_size
if	21:4	25:4	2	(! p_buf)
cond	21:8	21:9	3	! p_buf
op	21:8	0:0	4	!
water	21:9	0:0	4	p_buf
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:32	4	stream_Delete
arg	23:23	23:32	5	p_stream
water	23:23	0:0	6	p_stream
water	23:33	0:0	4	;
return	24:8	24:19	4	NULL
water	24:15	0:0	5	NULL
water	25:4	0:0	4	}
decl	26:4	26:60	2	int	i_read
op	26:15	0:0	2	=
call	26:17	26:59	3	stream_Read
arg	26:30	26:38	4	p_stream
water	26:30	0:0	5	p_stream
arg	26:40	26:45	4	p_buf
water	26:40	0:0	5	p_buf
arg	26:47	26:59	4	(int)i_size
water	26:47	0:0	5	(
water	26:48	0:0	5	int
water	26:51	0:0	5	)
water	26:52	0:0	5	i_size
call	27:4	27:28	2	stream_Delete
arg	27:19	27:28	3	p_stream
water	27:19	0:0	4	p_stream
water	27:29	0:0	2	;
if	28:4	33:4	2	(i_read != ( int ) i_size)
cond	28:8	28:23	3	i_read != ( int ) i_size
water	28:8	0:0	4	i_read
op	28:15	0:0	4	!=
water	28:18	0:0	4	(
water	28:19	0:0	4	int
water	28:22	0:0	4	)
water	28:23	0:0	4	i_size
stmts	29:4	33:4	3	
water	29:4	0:0	4	{
call	30:8	30:54	4	msg_Dbg
arg	30:17	30:23	5	p_this
water	30:17	0:0	6	p_this
arg	30:25	30:54	5	"Couldn't read full GPG key"
water	30:25	0:0	6	"Couldn't read full GPG key"
water	30:55	0:0	4	;
call	31:8	31:20	4	free
arg	31:14	31:20	5	p_buf
water	31:14	0:0	6	p_buf
water	31:21	0:0	4	;
return	32:8	32:19	4	NULL
water	32:15	0:0	5	NULL
water	33:4	0:0	4	}
decl	34:4	34:75	2	public_key_t	*p_pkey
op	34:25	0:0	2	=
water	34:27	0:0	2	(
water	34:28	0:0	2	public_key_t
op	34:40	0:0	2	*
water	34:41	0:0	2	)
call	34:43	34:74	3	malloc
arg	34:51	34:74	4	sizeof(public_key_t)
op	34:51	0:0	5	sizeof
water	34:57	0:0	5	(
water	34:59	0:0	5	public_key_t
water	34:72	0:0	5	)
if	35:4	39:4	2	(! p_pkey)
cond	35:8	35:9	3	! p_pkey
op	35:8	0:0	4	!
water	35:9	0:0	4	p_pkey
stmts	36:4	39:4	3	
water	36:4	0:0	4	{
call	37:8	37:20	4	free
arg	37:14	37:20	5	p_buf
water	37:14	0:0	6	p_buf
water	37:21	0:0	4	;
return	38:8	38:19	4	NULL
water	38:15	0:0	5	NULL
water	39:4	0:0	4	}
call	40:4	40:40	2	memcpy
arg	40:12	40:26	3	p_pkey->longid
water	40:12	0:0	4	p_pkey
op	40:18	0:0	4	->
water	40:20	0:0	4	longid
arg	40:28	40:36	3	p_longid
water	40:28	0:0	4	p_longid
arg	40:38	40:40	3	8
water	40:38	0:0	4	8
water	40:41	0:0	2	;
decl	41:4	41:79	2	int	i_error
op	41:16	0:0	2	=
call	41:18	41:78	3	parse_public_key
arg	41:36	41:41	4	p_buf
water	41:36	0:0	5	p_buf
arg	41:43	41:49	4	i_read
water	41:43	0:0	5	i_read
arg	41:51	41:57	4	p_pkey
water	41:51	0:0	5	p_pkey
arg	41:59	41:78	4	p_signature_issuer
water	41:59	0:0	5	p_signature_issuer
call	42:4	42:16	2	free
arg	42:10	42:16	3	p_buf
water	42:10	0:0	4	p_buf
water	42:17	0:0	2	;
if	43:4	48:4	2	(i_error != VLC_SUCCESS)
cond	43:8	43:19	3	i_error != VLC_SUCCESS
water	43:8	0:0	4	i_error
op	43:16	0:0	4	!=
water	43:19	0:0	4	VLC_SUCCESS
stmts	44:4	48:4	3	
water	44:4	0:0	4	{
call	45:8	45:50	4	msg_Dbg
arg	45:17	45:23	5	p_this
water	45:17	0:0	6	p_this
arg	45:25	45:50	5	"Couldn't parse GPG key"
water	45:25	0:0	6	"Couldn't parse GPG key"
water	45:51	0:0	4	;
call	46:8	46:21	4	free
arg	46:14	46:21	5	p_pkey
water	46:14	0:0	6	p_pkey
water	46:22	0:0	4	;
return	47:8	47:19	4	NULL
water	47:15	0:0	5	NULL
water	48:4	0:0	4	}
return	49:4	49:17	2	p_pkey
water	49:11	0:0	3	p_pkey

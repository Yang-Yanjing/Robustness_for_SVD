func	2:0	60:0	0	char *	SDPGenerateVoD
params	2:20	0:0	1	
param	2:22	2:48	2	const vod_media_t *	p_media
param	2:50	2:71	2	const char *	rtsp_url
stmnts	0:0	59:18	1	
decl	4:4	4:17	2	char	*psz_sdp
call	5:4	5:27	2	assert
arg	5:11	5:27	3	rtsp_url!=NULL
water	5:11	0:0	4	rtsp_url
op	5:20	0:0	4	!=
water	5:23	0:0	4	NULL
water	5:28	0:0	2	;
decl	7:4	7:60	2	bool	ipv6
op	7:14	0:0	2	=
call	7:16	7:33	3	strlen
arg	7:24	7:33	4	rtsp_url
water	7:24	0:0	5	rtsp_url
op	7:35	0:0	2	>
water	7:37	0:0	2	7
op	7:39	0:0	2	&&
water	7:42	0:0	2	rtsp_url
op	7:50	0:0	2	[
water	7:51	0:0	2	7
op	7:52	0:0	2	]
op	7:54	0:0	2	==
water	7:57	0:0	2	'['
decl	9:4	9:31	2	struct sockaddr_storage	dst
decl	10:4	11:58	2	socklen_t	dstlen
op	10:21	0:0	2	=
water	10:23	0:0	2	ipv6
water	10:28	0:0	2	?
op	10:30	0:0	2	sizeof
water	10:36	0:0	2	(
water	10:38	0:0	2	struct
water	10:45	0:0	2	sockaddr_in6
water	10:58	0:0	2	)
water	11:28	0:0	2	:
op	11:30	0:0	2	sizeof
water	11:36	0:0	2	(
water	11:38	0:0	2	struct
water	11:45	0:0	2	sockaddr_in
water	11:57	0:0	2	)
call	12:4	12:27	2	memset
arg	12:12	12:16	3	&dst
op	12:12	0:0	4	&
water	12:13	0:0	4	dst
arg	12:18	12:19	3	0
water	12:18	0:0	4	0
arg	12:21	12:27	3	dstlen
water	12:21	0:0	4	dstlen
water	12:28	0:0	2	;
water	13:4	0:0	2	dst
op	13:7	0:0	2	.
water	13:8	0:0	2	ss_family
op	13:18	0:0	2	=
water	13:20	0:0	2	ipv6
water	13:25	0:0	2	?
water	13:27	0:0	2	AF_INET6
water	13:36	0:0	2	:
water	13:38	0:0	2	AF_INET
water	13:45	0:0	2	;
water	15:4	0:0	2	dst
op	15:7	0:0	2	.
water	15:8	0:0	2	ss_len
op	15:15	0:0	2	=
water	15:17	0:0	2	dstlen
water	15:23	0:0	2	;
water	17:4	0:0	2	psz_sdp
op	17:12	0:0	2	=
call	17:14	18:70	2	vlc_sdp_Start
arg	17:29	17:57	3	VLC_OBJECT(p_media->p_vod)
call	17:29	17:56	4	VLC_OBJECT
arg	17:41	17:56	5	p_media->p_vod
water	17:41	0:0	6	p_media
op	17:48	0:0	6	->
water	17:50	0:0	6	p_vod
arg	17:59	17:70	3	"sout-rtp-"
water	17:59	0:0	4	"sout-rtp-"
arg	18:29	18:33	3	NULL
water	18:29	0:0	4	NULL
arg	18:35	18:36	3	0
water	18:35	0:0	4	0
arg	18:38	18:61	3	(structsockaddr*)&dst
water	18:38	0:0	4	(
water	18:39	0:0	4	struct
water	18:46	0:0	4	sockaddr
op	18:55	0:0	4	*
water	18:56	0:0	4	)
op	18:57	0:0	4	&
water	18:58	0:0	4	dst
arg	18:63	18:70	3	dstlen
water	18:63	0:0	4	dstlen
water	18:71	0:0	2	;
if	19:4	20:19	2	(psz_sdp == NULL)
cond	19:8	19:19	3	psz_sdp == NULL
water	19:8	0:0	4	psz_sdp
op	19:16	0:0	4	==
water	19:19	0:0	4	NULL
stmts	20:8	20:19	3	
return	20:8	20:19	4	NULL
water	20:15	0:0	5	NULL
if	21:4	26:4	2	(p_media -> i_length > 0)
cond	21:8	21:28	3	p_media -> i_length > 0
water	21:8	0:0	4	p_media
op	21:15	0:0	4	->
water	21:17	0:0	4	i_length
op	21:26	0:0	4	>
water	21:28	0:0	4	0
stmts	22:4	26:4	3	
water	22:4	0:0	4	{
decl	23:8	23:59	4	lldiv_t	d
op	23:18	0:0	4	=
call	23:20	23:58	5	lldiv
arg	23:27	23:51	6	p_media->i_length/1000
water	23:27	0:0	7	p_media
op	23:34	0:0	7	->
water	23:36	0:0	7	i_length
op	23:45	0:0	7	/
water	23:47	0:0	7	1000
arg	23:53	23:58	6	1000
water	23:53	0:0	7	1000
call	24:8	25:42	4	sdp_AddAttribute
arg	24:26	24:34	5	&psz_sdp
op	24:26	0:0	6	&
water	24:27	0:0	6	psz_sdp
arg	24:36	24:43	5	"range"
water	24:36	0:0	6	"range"
arg	24:44	24:62	5	" npt=0-%lld.%03u"
water	24:44	0:0	6	" npt=0-%lld.%03u"
arg	24:64	24:70	5	d.quot
water	24:64	0:0	6	d
op	24:65	0:0	6	.
water	24:66	0:0	6	quot
arg	25:26	25:42	5	(unsigned)d.rem
water	25:26	0:0	6	(
water	25:27	0:0	6	unsigned
water	25:35	0:0	6	)
water	25:36	0:0	6	d
op	25:37	0:0	6	.
water	25:38	0:0	6	rem
water	25:43	0:0	4	;
water	26:4	0:0	4	}
call	27:4	27:59	2	sdp_AddAttribute
arg	27:23	27:31	3	&psz_sdp
op	27:23	0:0	4	&
water	27:24	0:0	4	psz_sdp
arg	27:33	27:42	3	"control"
water	27:33	0:0	4	"control"
arg	27:44	27:48	3	"%s"
water	27:44	0:0	4	"%s"
arg	27:50	27:59	3	rtsp_url
water	27:50	0:0	4	rtsp_url
water	27:60	0:0	2	;
for	29:4	58:4	2	( int i = 0 ;i < p_media -> i_es;i ++)
forinit	0:0	29:18	3	 int i = 0 ;
decl	29:9	29:18	4	int	i
op	29:15	0:0	4	=
water	29:17	0:0	4	0
cond	29:20	29:33	3	i < p_media -> i_es
water	29:20	0:0	4	i
op	29:22	0:0	4	<
water	29:24	0:0	4	p_media
op	29:31	0:0	4	->
water	29:33	0:0	4	i_es
forexpr	29:39	29:40	3	i ++
water	29:39	0:0	4	i
op	29:40	0:0	4	++
stmts	30:4	58:4	3	
water	30:4	0:0	4	{
decl	31:8	31:41	4	media_es_t	*p_es
op	31:25	0:0	4	=
water	31:27	0:0	4	p_media
op	31:34	0:0	4	->
water	31:36	0:0	4	es
op	31:38	0:0	4	[
water	31:39	0:0	4	i
op	31:40	0:0	4	]
decl	32:8	32:46	4	rtp_format_t	*rtp_fmt
op	32:30	0:0	4	=
op	32:32	0:0	4	&
water	32:33	0:0	4	p_es
op	32:37	0:0	4	->
water	32:39	0:0	4	rtp_fmt
decl	33:8	33:30	4	const char	*mime_major
switch	34:8	47:8	4	(rtp_fmt -> cat)
cond	34:16	34:25	5	rtp_fmt -> cat
water	34:16	0:0	6	rtp_fmt
op	34:23	0:0	6	->
water	34:25	0:0	6	cat
stmts	35:8	47:8	5	
water	35:8	0:0	6	{
label	36:12	36:25	6	case VIDEO_ES :
water	37:16	0:0	6	mime_major
op	37:27	0:0	6	=
water	37:29	0:0	6	"video"
water	37:36	0:0	6	;
break	38:16	38:21	6	
label	39:12	39:25	6	case AUDIO_ES :
water	40:16	0:0	6	mime_major
op	40:27	0:0	6	=
water	40:29	0:0	6	"audio"
water	40:36	0:0	6	;
break	41:16	41:21	6	
label	42:12	42:23	6	case SPU_ES :
water	43:16	0:0	6	mime_major
op	43:27	0:0	6	=
water	43:29	0:0	6	"text"
water	43:35	0:0	6	;
break	44:16	44:21	6	
label	45:12	45:19	6	default :
continue	46:16	46:24	6	
water	47:8	0:0	6	}
call	48:8	51:36	4	sdp_AddMedia
arg	48:22	48:30	5	&psz_sdp
op	48:22	0:0	6	&
water	48:23	0:0	6	psz_sdp
arg	48:32	48:42	5	mime_major
water	48:32	0:0	6	mime_major
arg	48:44	48:53	5	"RTP/AVP"
water	48:44	0:0	6	"RTP/AVP"
arg	48:55	48:56	5	0
water	48:55	0:0	6	0
arg	49:22	49:43	5	rtp_fmt->payload_type
water	49:22	0:0	6	rtp_fmt
op	49:29	0:0	6	->
water	49:31	0:0	6	payload_type
arg	49:45	49:50	5	false
water	49:45	0:0	6	false
arg	49:52	49:53	5	0
water	49:52	0:0	6	0
arg	50:22	50:37	5	rtp_fmt->ptname
water	50:22	0:0	6	rtp_fmt
op	50:29	0:0	6	->
water	50:31	0:0	6	ptname
arg	50:39	50:58	5	rtp_fmt->clock_rate
water	50:39	0:0	6	rtp_fmt
op	50:46	0:0	6	->
water	50:48	0:0	6	clock_rate
arg	50:60	50:77	5	rtp_fmt->channels
water	50:60	0:0	6	rtp_fmt
op	50:67	0:0	6	->
water	50:69	0:0	6	channels
arg	51:22	51:36	5	rtp_fmt->fmtp
water	51:22	0:0	6	rtp_fmt
op	51:29	0:0	6	->
water	51:31	0:0	6	fmtp
water	51:37	0:0	4	;
decl	52:8	52:72	4	char	*track_url
op	52:24	0:0	4	=
call	52:26	52:71	5	RtspAppendTrackPath
arg	52:47	52:60	6	p_es->rtsp_id
water	52:47	0:0	7	p_es
op	52:51	0:0	7	->
water	52:53	0:0	7	rtsp_id
arg	52:62	52:71	6	rtsp_url
water	52:62	0:0	7	rtsp_url
if	53:8	57:8	4	(track_url != NULL)
cond	53:12	53:25	5	track_url != NULL
water	53:12	0:0	6	track_url
op	53:22	0:0	6	!=
water	53:25	0:0	6	NULL
stmts	54:8	57:8	5	
water	54:8	0:0	6	{
call	55:12	55:68	6	sdp_AddAttribute
arg	55:31	55:39	7	&psz_sdp
op	55:31	0:0	8	&
water	55:32	0:0	8	psz_sdp
arg	55:41	55:50	7	"control"
water	55:41	0:0	8	"control"
arg	55:52	55:56	7	"%s"
water	55:52	0:0	8	"%s"
arg	55:58	55:68	7	track_url
water	55:58	0:0	8	track_url
water	55:69	0:0	6	;
call	56:12	56:28	6	free
arg	56:18	56:28	7	track_url
water	56:18	0:0	8	track_url
water	56:29	0:0	6	;
water	57:8	0:0	6	}
water	58:4	0:0	4	}
return	59:4	59:18	2	psz_sdp
water	59:11	0:0	3	psz_sdp

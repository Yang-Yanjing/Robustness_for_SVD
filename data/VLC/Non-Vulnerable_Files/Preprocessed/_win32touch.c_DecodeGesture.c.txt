func	2:0	147:0	0	LRESULT	DecodeGesture
params	2:21	0:0	1	
param	2:23	2:43	2	vlc_object_t *	p_this
param	2:45	2:75	2	win32_gesture_sys_t *	p_gesture
param	3:23	3:32	2	HWND	hWnd
param	3:34	3:46	2	UINT	message
param	3:48	3:61	2	WPARAM	wParam
param	3:63	3:77	2	LPARAM	lParam
stmnts	5:4	146:61	1	
if	5:4	6:61	2	(! p_gesture)
cond	5:8	5:9	3	! p_gesture
op	5:8	0:0	4	!
water	5:9	0:0	4	p_gesture
stmts	6:8	6:61	3	
return	6:8	6:61	4	DefWindowProc(hWnd,message,wParam,lParam)
call	6:15	6:60	5	DefWindowProc
arg	6:30	6:34	6	hWnd
water	6:30	0:0	7	hWnd
arg	6:36	6:43	6	message
water	6:36	0:0	7	message
arg	6:45	6:51	6	wParam
water	6:45	0:0	7	wParam
arg	6:53	6:60	6	lParam
water	6:53	0:0	7	lParam
decl	7:4	7:18	2	GESTUREINFO	gi
call	8:4	8:43	2	ZeroMemory
arg	8:16	8:19	3	&gi
op	8:16	0:0	4	&
water	8:17	0:0	4	gi
arg	8:21	8:43	3	sizeof(GESTUREINFO)
op	8:21	0:0	4	sizeof
water	8:27	0:0	4	(
water	8:29	0:0	4	GESTUREINFO
water	8:41	0:0	4	)
water	8:44	0:0	2	;
water	9:4	0:0	2	gi
op	9:6	0:0	2	.
water	9:7	0:0	2	cbSize
op	9:14	0:0	2	=
op	9:16	0:0	2	sizeof
water	9:22	0:0	2	(
water	9:24	0:0	2	GESTUREINFO
water	9:36	0:0	2	)
water	9:37	0:0	2	;
decl	10:4	10:75	2	BOOL	bResult
op	10:18	0:0	2	=
call	10:20	10:74	3	p_gesture->OurGetGestureInfo
arg	10:49	10:69	4	(HGESTUREINFO)lParam
water	10:49	0:0	5	(
water	10:50	0:0	5	HGESTUREINFO
water	10:62	0:0	5	)
water	10:63	0:0	5	lParam
arg	10:71	10:74	4	&gi
op	10:71	0:0	5	&
water	10:72	0:0	5	gi
decl	11:4	11:25	2	BOOL	bHandled
op	11:18	0:0	2	=
water	11:20	0:0	2	FALSE
if	12:4	131:4	2	(bResult)
cond	12:8	12:8	3	bResult
water	12:8	0:0	4	bResult
stmts	13:4	131:4	3	
water	13:4	0:0	4	{
switch	14:8	130:8	4	(gi . dwID)
cond	14:17	14:20	5	gi . dwID
water	14:17	0:0	6	gi
op	14:19	0:0	6	.
water	14:20	0:0	6	dwID
stmts	15:8	130:8	5	
water	15:8	0:0	6	{
label	16:12	16:26	6	case GID_BEGIN :
water	18:16	0:0	6	p_gesture
op	18:25	0:0	6	->
water	18:27	0:0	6	i_beginx
op	18:41	0:0	6	=
water	18:43	0:0	6	gi
op	18:45	0:0	6	.
water	18:46	0:0	6	ptsLocation
op	18:57	0:0	6	.
water	18:58	0:0	6	x
water	18:59	0:0	6	;
water	19:16	0:0	6	p_gesture
op	19:25	0:0	6	->
water	19:27	0:0	6	i_beginy
op	19:41	0:0	6	=
water	19:43	0:0	6	gi
op	19:45	0:0	6	.
water	19:46	0:0	6	ptsLocation
op	19:57	0:0	6	.
water	19:58	0:0	6	y
water	19:59	0:0	6	;
water	20:16	0:0	6	p_gesture
op	20:25	0:0	6	->
water	20:27	0:0	6	i_lasty
op	20:41	0:0	6	=
water	20:43	0:0	6	p_gesture
op	20:52	0:0	6	->
water	20:54	0:0	6	i_beginy
water	20:62	0:0	6	;
water	21:16	0:0	6	p_gesture
op	21:25	0:0	6	->
water	21:27	0:0	6	b_2fingers
op	21:41	0:0	6	=
water	21:43	0:0	6	false
water	21:48	0:0	6	;
break	22:16	22:21	6	
label	23:12	23:24	6	case GID_END :
if	24:16	43:16	6	(p_gesture -> i_type != 0 && p_gesture -> i_action == GESTURE_ACTION_JUMP)
cond	24:20	25:43	7	p_gesture -> i_type != 0 && p_gesture -> i_action == GESTURE_ACTION_JUMP
water	24:20	0:0	8	p_gesture
op	24:29	0:0	8	->
water	24:31	0:0	8	i_type
op	24:38	0:0	8	!=
water	24:41	0:0	8	0
op	24:43	0:0	8	&&
water	25:20	0:0	8	p_gesture
op	25:29	0:0	8	->
water	25:31	0:0	8	i_action
op	25:40	0:0	8	==
water	25:43	0:0	8	GESTURE_ACTION_JUMP
stmts	26:16	43:16	7	
water	26:16	0:0	8	{
decl	27:20	27:33	8	int	action_id
if	28:20	34:20	8	(p_gesture -> i_beginx > gi . ptsLocation . x)
cond	28:24	28:61	9	p_gesture -> i_beginx > gi . ptsLocation . x
water	28:24	0:0	10	p_gesture
op	28:33	0:0	10	->
water	28:35	0:0	10	i_beginx
op	28:44	0:0	10	>
water	28:46	0:0	10	gi
op	28:48	0:0	10	.
water	28:49	0:0	10	ptsLocation
op	28:60	0:0	10	.
water	28:61	0:0	10	x
stmts	29:20	34:20	9	
water	29:20	0:0	10	{
if	30:24	31:69	10	(p_gesture -> b_2fingers)
cond	30:28	30:39	11	p_gesture -> b_2fingers
water	30:28	0:0	12	p_gesture
op	30:37	0:0	12	->
water	30:39	0:0	12	b_2fingers
stmts	31:28	31:69	11	
water	31:28	0:0	12	action_id
op	31:38	0:0	12	=
water	31:40	0:0	12	ACTIONID_JUMP_BACKWARD_MEDIUM
water	31:69	0:0	12	;
else	32:24	33:68	10
stmts	33:28	33:68	11	
water	33:28	0:0	12	action_id
op	33:38	0:0	12	=
water	33:40	0:0	12	ACTIONID_JUMP_BACKWARD_SHORT
water	33:68	0:0	12	;
water	34:20	0:0	10	}
else	35:20	41:20	8
stmts	36:20	41:20	9	
water	36:20	0:0	10	{
if	37:24	38:68	10	(p_gesture -> b_2fingers)
cond	37:28	37:39	11	p_gesture -> b_2fingers
water	37:28	0:0	12	p_gesture
op	37:37	0:0	12	->
water	37:39	0:0	12	b_2fingers
stmts	38:28	38:68	11	
water	38:28	0:0	12	action_id
op	38:38	0:0	12	=
water	38:40	0:0	12	ACTIONID_JUMP_FORWARD_MEDIUM
water	38:68	0:0	12	;
else	39:24	40:67	10
stmts	40:28	40:67	11	
water	40:28	0:0	12	action_id
op	40:38	0:0	12	=
water	40:40	0:0	12	ACTIONID_JUMP_FORWARD_SHORT
water	40:67	0:0	12	;
water	41:20	0:0	10	}
call	42:20	42:78	8	var_SetInteger
arg	42:36	42:52	9	p_this->p_libvlc
water	42:36	0:0	10	p_this
op	42:42	0:0	10	->
water	42:44	0:0	10	p_libvlc
arg	42:54	42:66	9	"key-action"
water	42:54	0:0	10	"key-action"
arg	42:68	42:78	9	action_id
water	42:68	0:0	10	action_id
water	42:79	0:0	8	;
water	43:16	0:0	8	}
water	45:16	0:0	6	p_gesture
op	45:25	0:0	6	->
water	45:27	0:0	6	i_action
op	45:36	0:0	6	=
water	45:38	0:0	6	GESTURE_ACTION_UNDEFINED
water	45:62	0:0	6	;
water	46:16	0:0	6	p_gesture
op	46:25	0:0	6	->
water	46:27	0:0	6	i_type
op	46:34	0:0	6	=
water	46:36	0:0	6	p_gesture
op	46:45	0:0	6	->
water	46:47	0:0	6	i_beginx
op	46:56	0:0	6	=
water	46:58	0:0	6	p_gesture
op	46:67	0:0	6	->
water	46:69	0:0	6	i_beginy
op	46:78	0:0	6	=
op	46:80	0:0	6	-
water	46:81	0:0	6	1
water	46:82	0:0	6	;
water	47:16	0:0	6	p_gesture
op	47:25	0:0	6	->
water	47:27	0:0	6	b_2fingers
op	47:38	0:0	6	=
water	47:40	0:0	6	false
water	47:45	0:0	6	;
break	48:16	48:21	6	
label	49:12	49:24	6	case GID_PAN :
water	50:16	0:0	6	p_gesture
op	50:25	0:0	6	->
water	50:27	0:0	6	i_type
op	50:34	0:0	6	=
water	50:36	0:0	6	GID_PAN
water	50:43	0:0	6	;
water	51:16	0:0	6	bHandled
op	51:25	0:0	6	=
water	51:27	0:0	6	TRUE
water	51:31	0:0	6	;
if	52:16	53:48	6	(( DWORD ) gi . ullArguments > 0)
cond	52:20	52:45	7	( DWORD ) gi . ullArguments > 0
water	52:20	0:0	8	(
water	52:21	0:0	8	DWORD
water	52:26	0:0	8	)
water	52:27	0:0	8	gi
op	52:29	0:0	8	.
water	52:30	0:0	8	ullArguments
op	52:43	0:0	8	>
water	52:45	0:0	8	0
stmts	53:20	53:48	7	
water	53:20	0:0	8	p_gesture
op	53:29	0:0	8	->
water	53:31	0:0	8	b_2fingers
op	53:42	0:0	8	=
water	53:44	0:0	8	true
water	53:48	0:0	8	;
if	54:16	67:16	6	(p_gesture -> i_action == GESTURE_ACTION_UNDEFINED)
cond	54:20	54:43	7	p_gesture -> i_action == GESTURE_ACTION_UNDEFINED
water	54:20	0:0	8	p_gesture
op	54:29	0:0	8	->
water	54:31	0:0	8	i_action
op	54:40	0:0	8	==
water	54:43	0:0	8	GESTURE_ACTION_UNDEFINED
stmts	55:16	67:16	7	
water	55:16	0:0	8	{
if	56:20	66:20	8	(abs (p_gesture -> i_beginx - gi . ptsLocation . x ) +abs (p_gesture -> i_beginy - gi . ptsLocation . y ) > 50)
cond	56:24	57:72	9	abs (p_gesture -> i_beginx - gi . ptsLocation . x ) +abs (p_gesture -> i_beginy - gi . ptsLocation . y ) > 50
call	56:24	56:68	10	abs
arg	56:29	56:68	11	p_gesture->i_beginx-gi.ptsLocation.x
water	56:29	0:0	12	p_gesture
op	56:38	0:0	12	->
water	56:40	0:0	12	i_beginx
op	56:49	0:0	12	-
water	56:51	0:0	12	gi
op	56:53	0:0	12	.
water	56:54	0:0	12	ptsLocation
op	56:65	0:0	12	.
water	56:66	0:0	12	x
op	56:70	0:0	10	+
call	57:24	57:68	10	abs
arg	57:29	57:68	11	p_gesture->i_beginy-gi.ptsLocation.y
water	57:29	0:0	12	p_gesture
op	57:38	0:0	12	->
water	57:40	0:0	12	i_beginy
op	57:49	0:0	12	-
water	57:51	0:0	12	gi
op	57:53	0:0	12	.
water	57:54	0:0	12	ptsLocation
op	57:65	0:0	12	.
water	57:66	0:0	12	y
op	57:70	0:0	10	>
water	57:72	0:0	10	50
stmts	58:20	66:20	9	
water	58:20	0:0	10	{
if	59:24	61:69	10	(abs (p_gesture -> i_beginx - gi . ptsLocation . x ) >abs (p_gesture -> i_beginy - gi . ptsLocation . y ))
cond	59:28	60:72	11	abs (p_gesture -> i_beginx - gi . ptsLocation . x ) >abs (p_gesture -> i_beginy - gi . ptsLocation . y )
call	59:28	59:72	12	abs
arg	59:33	59:72	13	p_gesture->i_beginx-gi.ptsLocation.x
water	59:33	0:0	14	p_gesture
op	59:42	0:0	14	->
water	59:44	0:0	14	i_beginx
op	59:53	0:0	14	-
water	59:55	0:0	14	gi
op	59:57	0:0	14	.
water	59:58	0:0	14	ptsLocation
op	59:69	0:0	14	.
water	59:70	0:0	14	x
op	59:74	0:0	12	>
call	60:28	60:72	12	abs
arg	60:33	60:72	13	p_gesture->i_beginy-gi.ptsLocation.y
water	60:33	0:0	14	p_gesture
op	60:42	0:0	14	->
water	60:44	0:0	14	i_beginy
op	60:53	0:0	14	-
water	60:55	0:0	14	gi
op	60:57	0:0	14	.
water	60:58	0:0	14	ptsLocation
op	60:69	0:0	14	.
water	60:70	0:0	14	y
stmts	61:27	61:69	11	
water	61:27	0:0	12	p_gesture
op	61:36	0:0	12	->
water	61:38	0:0	12	i_action
op	61:47	0:0	12	=
water	61:50	0:0	12	GESTURE_ACTION_JUMP
water	61:69	0:0	12	;
else	62:24	63:74	10
stmts	62:29	63:74	11	
if	62:29	63:74	12	(p_gesture -> b_2fingers)
cond	62:34	62:45	13	p_gesture -> b_2fingers
water	62:34	0:0	14	p_gesture
op	62:43	0:0	14	->
water	62:45	0:0	14	b_2fingers
stmts	63:27	63:74	13	
water	63:27	0:0	14	p_gesture
op	63:36	0:0	14	->
water	63:38	0:0	14	i_action
op	63:47	0:0	14	=
water	63:49	0:0	14	GESTURE_ACTION_BRIGHTNESS
water	63:74	0:0	14	;
else	64:24	65:71	10
stmts	65:27	65:71	11	
water	65:27	0:0	12	p_gesture
op	65:36	0:0	12	->
water	65:38	0:0	12	i_action
op	65:47	0:0	12	=
water	65:50	0:0	12	GESTURE_ACTION_VOLUME
water	65:71	0:0	12	;
water	66:20	0:0	10	}
water	67:16	0:0	8	}
if	68:16	78:16	6	(p_gesture -> i_action == GESTURE_ACTION_VOLUME)
cond	68:20	68:43	7	p_gesture -> i_action == GESTURE_ACTION_VOLUME
water	68:20	0:0	8	p_gesture
op	68:29	0:0	8	->
water	68:31	0:0	8	i_action
op	68:40	0:0	8	==
water	68:43	0:0	8	GESTURE_ACTION_VOLUME
stmts	69:16	78:16	7	
water	69:16	0:0	8	{
decl	70:20	70:70	8	int	offset
op	70:31	0:0	8	=
water	70:33	0:0	8	p_gesture
op	70:42	0:0	8	->
water	70:44	0:0	8	i_lasty
op	70:52	0:0	8	-
water	70:54	0:0	8	gi
op	70:56	0:0	8	.
water	70:57	0:0	8	ptsLocation
op	70:68	0:0	8	.
water	70:69	0:0	8	y
if	71:20	72:89	8	(offset > 100)
cond	71:24	71:33	9	offset > 100
water	71:24	0:0	10	offset
op	71:31	0:0	10	>
water	71:33	0:0	10	100
stmts	72:24	72:89	9	
call	72:24	72:88	10	var_SetInteger
arg	72:40	72:56	11	p_this->p_libvlc
water	72:40	0:0	12	p_this
op	72:46	0:0	12	->
water	72:48	0:0	12	p_libvlc
arg	72:58	72:70	11	"key-action"
water	72:58	0:0	12	"key-action"
arg	72:72	72:88	11	ACTIONID_VOL_UP
water	72:72	0:0	12	ACTIONID_VOL_UP
water	72:89	0:0	10	;
else	73:20	74:91	8
stmts	73:25	74:91	9	
if	73:25	74:91	10	(offset < - 100)
cond	73:29	73:39	11	offset < - 100
water	73:29	0:0	12	offset
op	73:36	0:0	12	<
op	73:38	0:0	12	-
water	73:39	0:0	12	100
stmts	74:24	74:91	11	
call	74:24	74:90	12	var_SetInteger
arg	74:40	74:56	13	p_this->p_libvlc
water	74:40	0:0	14	p_this
op	74:46	0:0	14	->
water	74:48	0:0	14	p_libvlc
arg	74:58	74:70	13	"key-action"
water	74:58	0:0	14	"key-action"
arg	74:72	74:90	13	ACTIONID_VOL_DOWN
water	74:72	0:0	14	ACTIONID_VOL_DOWN
water	74:91	0:0	12	;
else	75:20	76:29	8
stmts	76:24	76:29	9	
break	76:24	76:29	10	
water	77:20	0:0	8	p_gesture
op	77:29	0:0	8	->
water	77:31	0:0	8	i_lasty
op	77:39	0:0	8	=
water	77:41	0:0	8	gi
op	77:43	0:0	8	.
water	77:44	0:0	8	ptsLocation
op	77:55	0:0	8	.
water	77:56	0:0	8	y
water	77:57	0:0	8	;
water	78:16	0:0	8	}
else	79:16	94:16	6
stmts	79:21	94:16	7	
if	79:21	94:16	8	(p_gesture -> i_action == GESTURE_ACTION_BRIGHTNESS)
cond	79:26	79:49	9	p_gesture -> i_action == GESTURE_ACTION_BRIGHTNESS
water	79:26	0:0	10	p_gesture
op	79:35	0:0	10	->
water	79:37	0:0	10	i_action
op	79:46	0:0	10	==
water	79:49	0:0	10	GESTURE_ACTION_BRIGHTNESS
stmts	80:16	94:16	9	
water	80:16	0:0	10	{
water	0:0	0:0	10	STATEMENTS
water	94:16	0:0	10	}
break	95:16	95:21	6	
label	96:12	96:33	6	case GID_TWOFINGERTAP :
water	97:16	0:0	6	p_gesture
op	97:25	0:0	6	->
water	97:27	0:0	6	i_type
op	97:34	0:0	6	=
water	97:36	0:0	6	GID_TWOFINGERTAP
water	97:52	0:0	6	;
call	98:16	98:84	6	var_SetInteger
arg	98:32	98:48	7	p_this->p_libvlc
water	98:32	0:0	8	p_this
op	98:38	0:0	8	->
water	98:40	0:0	8	p_libvlc
arg	98:50	98:62	7	"key-action"
water	98:50	0:0	8	"key-action"
arg	98:64	98:84	7	ACTIONID_PLAY_PAUSE
water	98:64	0:0	8	ACTIONID_PLAY_PAUSE
water	98:85	0:0	6	;
water	99:16	0:0	6	bHandled
op	99:25	0:0	6	=
water	99:27	0:0	6	TRUE
water	99:31	0:0	6	;
break	100:16	100:21	6	
label	101:12	101:25	6	case GID_ZOOM :
water	102:16	0:0	6	p_gesture
op	102:25	0:0	6	->
water	102:27	0:0	6	i_type
op	102:34	0:0	6	=
water	102:36	0:0	6	GID_ZOOM
water	102:44	0:0	6	;
switch	103:16	122:16	6	(gi . dwFlags)
cond	103:24	103:27	7	gi . dwFlags
water	103:24	0:0	8	gi
op	103:26	0:0	8	.
water	103:27	0:0	8	dwFlags
stmts	104:16	122:16	7	
water	104:16	0:0	8	{
label	105:20	105:33	8	case GF_BEGIN :
water	106:24	0:0	8	p_gesture
op	106:33	0:0	8	->
water	106:35	0:0	8	i_ullArguments
op	106:50	0:0	8	=
water	106:52	0:0	8	gi
op	106:54	0:0	8	.
water	106:55	0:0	8	ullArguments
water	106:67	0:0	8	;
break	107:24	107:29	8	
label	108:20	108:31	8	case GF_END :
water	109:24	0:0	8	{
decl	110:28	111:74	8	double	k
op	110:37	0:0	8	=
call	110:39	110:63	9	(double)
arg	110:48	110:63	10	gi.ullArguments
water	110:48	0:0	11	gi
op	110:50	0:0	11	.
water	110:51	0:0	11	ullArguments
op	110:65	0:0	8	/
call	111:39	111:73	9	(double)
arg	111:48	111:73	10	p_gesture->i_ullArguments
water	111:48	0:0	11	p_gesture
op	111:57	0:0	11	->
water	111:59	0:0	11	i_ullArguments
if	112:28	114:68	8	(k > 1)
cond	112:32	112:36	9	k > 1
water	112:32	0:0	10	k
op	112:34	0:0	10	>
water	112:36	0:0	10	1
stmts	113:32	114:68	9	
call	113:32	114:67	10	var_SetInteger
arg	113:48	113:64	11	p_this->p_libvlc
water	113:48	0:0	12	p_this
op	113:54	0:0	12	->
water	113:56	0:0	12	p_libvlc
arg	113:66	113:78	11	"key-action"
water	113:66	0:0	12	"key-action"
arg	114:40	114:67	11	ACTIONID_TOGGLE_FULLSCREEN
water	114:40	0:0	12	ACTIONID_TOGGLE_FULLSCREEN
water	114:68	0:0	10	;
else	115:28	117:67	8
stmts	116:32	117:67	9	
call	116:32	117:66	10	var_SetInteger
arg	116:48	116:64	11	p_this->p_libvlc
water	116:48	0:0	12	p_this
op	116:54	0:0	12	->
water	116:56	0:0	12	p_libvlc
arg	116:66	116:78	11	"key-action"
water	116:66	0:0	12	"key-action"
arg	117:40	117:66	11	ACTIONID_LEAVE_FULLSCREEN
water	117:40	0:0	12	ACTIONID_LEAVE_FULLSCREEN
water	117:67	0:0	10	;
water	118:24	0:0	8	}
break	119:24	119:29	8	
label	120:20	120:27	8	default :
call	121:24	121:77	8	msg_Err
arg	121:33	121:39	9	p_this
water	121:33	0:0	10	p_this
arg	121:41	121:64	9	"Unmanaged dwFlag: %lx"
water	121:41	0:0	10	"Unmanaged dwFlag: %lx"
arg	121:66	121:77	9	gi.dwFlags
water	121:66	0:0	10	gi
op	121:68	0:0	10	.
water	121:69	0:0	10	dwFlags
water	121:78	0:0	8	;
water	122:16	0:0	8	}
water	123:16	0:0	6	bHandled
op	123:25	0:0	6	=
water	123:27	0:0	6	TRUE
water	123:31	0:0	6	;
break	124:16	124:21	6	
label	125:12	125:27	6	case WM_VSCROLL :
water	126:16	0:0	6	bHandled
op	126:25	0:0	6	=
water	126:27	0:0	6	TRUE
water	126:31	0:0	6	;
break	127:16	127:21	6	
label	128:12	128:19	6	default :
break	129:16	129:21	6	
water	130:8	0:0	6	}
water	131:4	0:0	4	}
else	132:4	137:4	2
stmts	133:4	137:4	3	
water	133:4	0:0	4	{
decl	134:8	134:36	4	DWORD	dwErr
op	134:20	0:0	4	=
call	134:22	134:35	5	GetLastError
if	135:8	136:81	4	(dwErr > 0)
cond	135:12	135:20	5	dwErr > 0
water	135:12	0:0	6	dwErr
op	135:18	0:0	6	>
water	135:20	0:0	6	0
stmts	136:12	136:81	5	
call	136:12	136:80	6	msg_Err
arg	136:21	136:27	7	p_this
water	136:21	0:0	8	p_this
arg	136:29	136:80	7	"Could not retrieve a valid GESTUREINFO structure"
water	136:29	0:0	8	"Could not retrieve a valid GESTUREINFO structure"
water	136:81	0:0	6	;
water	137:4	0:0	4	}
if	138:4	144:4	2	(bHandled)
cond	138:8	138:8	3	bHandled
water	138:8	0:0	4	bHandled
stmts	139:4	144:4	3	
water	139:4	0:0	4	{
call	142:8	142:65	4	p_gesture->OurCloseGestureInfoHandle
arg	142:45	142:65	5	(HGESTUREINFO)lParam
water	142:45	0:0	6	(
water	142:46	0:0	6	HGESTUREINFO
water	142:58	0:0	6	)
water	142:59	0:0	6	lParam
water	142:66	0:0	4	;
return	143:8	143:16	4	0
water	143:15	0:0	5	0
water	144:4	0:0	4	}
else	145:4	146:61	2
stmts	146:8	146:61	3	
return	146:8	146:61	4	DefWindowProc(hWnd,message,wParam,lParam)
call	146:15	146:60	5	DefWindowProc
arg	146:30	146:34	6	hWnd
water	146:30	0:0	7	hWnd
arg	146:36	146:43	6	message
water	146:36	0:0	7	message
arg	146:45	146:51	6	wParam
water	146:45	0:0	7	wParam
arg	146:53	146:60	6	lParam
water	146:53	0:0	7	lParam

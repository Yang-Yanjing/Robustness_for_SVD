func	2:0	40:0	0	static int	OpenDecoder
params	2:22	0:0	1	
param	2:24	2:45	2	vlc_object_t *	p_this
stmnts	0:0	39:22	1	
decl	4:4	4:41	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:24	2	decoder_sys_t	*p_sys
if	6:4	7:27	2	(p_dec -> fmt_in . i_codec != VLC_CODEC_SPEEX)
cond	6:8	6:33	3	p_dec -> fmt_in . i_codec != VLC_CODEC_SPEEX
water	6:8	0:0	4	p_dec
op	6:13	0:0	4	->
water	6:15	0:0	4	fmt_in
op	6:21	0:0	4	.
water	6:22	0:0	4	i_codec
op	6:30	0:0	4	!=
water	6:33	0:0	4	VLC_CODEC_SPEEX
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
if	9:4	10:25	2	(( p_dec -> p_sys = p_sys =malloc (sizeof ( decoder_sys_t ) ) ) == NULL)
cond	9:8	9:68	3	( p_dec -> p_sys = p_sys =malloc (sizeof ( decoder_sys_t ) ) ) == NULL
water	9:8	0:0	4	(
water	9:10	0:0	4	p_dec
op	9:15	0:0	4	->
water	9:17	0:0	4	p_sys
op	9:23	0:0	4	=
water	9:25	0:0	4	p_sys
op	9:31	0:0	4	=
call	9:33	9:61	4	malloc
arg	9:40	9:61	5	sizeof(decoder_sys_t)
op	9:40	0:0	6	sizeof
water	9:46	0:0	6	(
water	9:47	0:0	6	decoder_sys_t
water	9:60	0:0	6	)
water	9:63	0:0	4	)
op	9:65	0:0	4	==
water	9:68	0:0	4	NULL
stmts	10:8	10:25	3	
return	10:8	10:25	4	VLC_ENOMEM
water	10:15	0:0	5	VLC_ENOMEM
water	11:4	0:0	2	p_dec
op	11:9	0:0	2	->
water	11:11	0:0	2	p_sys
op	11:16	0:0	2	->
water	11:18	0:0	2	bits
op	11:22	0:0	2	.
water	11:23	0:0	2	buf_size
op	11:32	0:0	2	=
water	11:34	0:0	2	0
water	11:35	0:0	2	;
water	12:4	0:0	2	p_dec
op	12:9	0:0	2	->
water	12:11	0:0	2	p_sys
op	12:16	0:0	2	->
water	12:18	0:0	2	b_packetizer
op	12:31	0:0	2	=
water	12:33	0:0	2	false
water	12:38	0:0	2	;
water	13:4	0:0	2	p_dec
op	13:9	0:0	2	->
water	13:11	0:0	2	p_sys
op	13:16	0:0	2	->
water	13:18	0:0	2	rtp_rate
op	13:27	0:0	2	=
water	13:29	0:0	2	p_dec
op	13:34	0:0	2	->
water	13:36	0:0	2	fmt_in
op	13:42	0:0	2	.
water	13:43	0:0	2	audio
op	13:48	0:0	2	.
water	13:49	0:0	2	i_rate
water	13:55	0:0	2	;
water	14:4	0:0	2	p_dec
op	14:9	0:0	2	->
water	14:11	0:0	2	p_sys
op	14:16	0:0	2	->
water	14:18	0:0	2	b_has_headers
op	14:32	0:0	2	=
water	14:34	0:0	2	false
water	14:39	0:0	2	;
call	15:4	15:34	2	date_Set
arg	15:14	15:30	3	&p_sys->end_date
op	15:14	0:0	4	&
water	15:15	0:0	4	p_sys
op	15:20	0:0	4	->
water	15:22	0:0	4	end_date
arg	15:32	15:34	3	0
water	15:32	0:0	4	0
water	15:35	0:0	2	;
water	17:4	0:0	2	p_dec
op	17:9	0:0	2	->
water	17:11	0:0	2	fmt_out
op	17:18	0:0	2	.
water	17:19	0:0	2	i_cat
op	17:25	0:0	2	=
water	17:27	0:0	2	AUDIO_ES
water	17:35	0:0	2	;
water	18:4	0:0	2	p_dec
op	18:9	0:0	2	->
water	18:11	0:0	2	fmt_out
op	18:18	0:0	2	.
water	18:19	0:0	2	i_codec
op	18:27	0:0	2	=
water	18:29	0:0	2	VLC_CODEC_S16N
water	18:43	0:0	2	;
if	25:4	30:4	2	(p_dec -> fmt_in . i_original_fourcc ==VLC_FOURCC ('s' ,'p' ,'x' ,'r' ))
cond	25:8	25:72	3	p_dec -> fmt_in . i_original_fourcc ==VLC_FOURCC ('s' ,'p' ,'x' ,'r' )
water	25:8	0:0	4	p_dec
op	25:13	0:0	4	->
water	25:15	0:0	4	fmt_in
op	25:21	0:0	4	.
water	25:22	0:0	4	i_original_fourcc
op	25:40	0:0	4	==
call	25:43	25:72	4	VLC_FOURCC
arg	25:54	25:57	5	's'
water	25:54	0:0	6	's'
arg	25:59	25:62	5	'p'
water	25:59	0:0	6	'p'
arg	25:64	25:67	5	'x'
water	25:64	0:0	6	'x'
arg	25:69	25:72	5	'r'
water	25:69	0:0	6	'r'
stmts	26:4	30:4	3	
water	26:4	0:0	4	{
call	27:8	28:35	4	msg_Dbg
arg	27:17	27:22	5	p_dec
water	27:17	0:0	6	p_dec
arg	27:24	27:71	5	"Using RTP version of Speex decoder @ rate %d."
water	27:24	0:0	6	"Using RTP version of Speex decoder @ rate %d."
arg	28:8	28:35	5	p_dec->fmt_in.audio.i_rate
water	28:8	0:0	6	p_dec
op	28:13	0:0	6	->
water	28:15	0:0	6	fmt_in
op	28:21	0:0	6	.
water	28:22	0:0	6	audio
op	28:27	0:0	6	.
water	28:28	0:0	6	i_rate
water	28:36	0:0	4	;
water	29:8	0:0	4	p_dec
op	29:13	0:0	4	->
water	29:15	0:0	4	pf_decode_audio
op	29:31	0:0	4	=
water	29:33	0:0	4	DecodeRtpSpeexPacket
water	29:53	0:0	4	;
water	30:4	0:0	4	}
else	31:4	34:4	2
stmts	32:4	34:4	3	
water	32:4	0:0	4	{
water	33:8	0:0	4	p_dec
op	33:13	0:0	4	->
water	33:15	0:0	4	pf_decode_audio
op	33:31	0:0	4	=
water	33:33	0:0	4	DecodeBlock
water	33:44	0:0	4	;
water	34:4	0:0	4	}
water	35:4	0:0	2	p_dec
op	35:9	0:0	2	->
water	35:11	0:0	2	pf_packetize
op	35:27	0:0	2	=
water	35:29	0:0	2	DecodeBlock
water	35:40	0:0	2	;
water	36:4	0:0	2	p_sys
op	36:9	0:0	2	->
water	36:11	0:0	2	p_state
op	36:19	0:0	2	=
water	36:21	0:0	2	NULL
water	36:25	0:0	2	;
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	p_header
op	37:20	0:0	2	=
water	37:22	0:0	2	NULL
water	37:26	0:0	2	;
water	38:4	0:0	2	p_sys
op	38:9	0:0	2	->
water	38:11	0:0	2	i_frame_in_packet
op	38:29	0:0	2	=
water	38:31	0:0	2	0
water	38:32	0:0	2	;
return	39:4	39:22	2	VLC_SUCCESS
water	39:11	0:0	3	VLC_SUCCESS

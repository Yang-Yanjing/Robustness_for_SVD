func	2:0	62:0	0	static int	oldmovie_lens_hair_effect
params	2:36	0:0	1	
param	2:38	2:56	2	filter_t *	p_filter
param	2:58	2:79	2	picture_t *	p_pic_out
stmnts	0:0	61:22	1	
decl	3:4	3:41	2	filter_sys_t	*p_sys
op	3:24	0:0	2	=
water	3:26	0:0	2	p_filter
op	3:34	0:0	2	->
water	3:36	0:0	2	p_sys
if	5:4	25:4	2	(p_sys -> i_hair_trigger <= p_sys -> i_cur_time)
cond	5:9	5:41	3	p_sys -> i_hair_trigger <= p_sys -> i_cur_time
water	5:9	0:0	4	p_sys
op	5:14	0:0	4	->
water	5:16	0:0	4	i_hair_trigger
op	5:31	0:0	4	<=
water	5:34	0:0	4	p_sys
op	5:39	0:0	4	->
water	5:41	0:0	4	i_cur_time
stmts	5:54	25:4	3	
water	5:54	0:0	4	{
for	6:8	21:12	4	( uint32_t i_h = 0 ;i_h < MAX_HAIR;i_h ++)
forinit	0:0	6:30	5	 uint32_t i_h = 0 ;
decl	6:14	6:30	6	uint32_t	i_h
op	6:27	0:0	6	=
water	6:29	0:0	6	0
cond	6:32	6:38	5	i_h < MAX_HAIR
water	6:32	0:0	6	i_h
op	6:36	0:0	6	<
water	6:38	0:0	6	MAX_HAIR
forexpr	6:48	6:51	5	i_h ++
water	6:48	0:0	6	i_h
op	6:51	0:0	6	++
stmts	7:12	21:12	5	
if	7:12	21:12	6	(p_sys -> p_hair [ i_h ] == NULL)
cond	7:17	7:39	7	p_sys -> p_hair [ i_h ] == NULL
water	7:17	0:0	8	p_sys
op	7:22	0:0	8	->
water	7:24	0:0	8	p_hair
op	7:30	0:0	8	[
water	7:31	0:0	8	i_h
op	7:34	0:0	8	]
op	7:36	0:0	8	==
water	7:39	0:0	8	NULL
stmts	7:46	21:12	7	
water	7:46	0:0	8	{
water	9:16	0:0	8	p_sys
op	9:21	0:0	8	->
water	9:23	0:0	8	p_hair
op	9:29	0:0	8	[
water	9:30	0:0	8	i_h
op	9:33	0:0	8	]
op	9:35	0:0	8	=
call	9:37	9:63	8	calloc
arg	9:45	9:46	9	1
water	9:45	0:0	10	1
arg	9:48	9:63	9	sizeof(hair_t)
op	9:48	0:0	10	sizeof
water	9:54	0:0	10	(
water	9:55	0:0	10	hair_t
water	9:61	0:0	10	)
water	9:64	0:0	8	;
if	10:16	11:37	8	(unlikely (! p_sys -> p_hair [ i_h ] ))
cond	10:21	10:51	9	unlikely (! p_sys -> p_hair [ i_h ] )
call	10:21	10:51	10	unlikely
arg	10:31	10:51	11	!p_sys->p_hair[i_h]
op	10:31	0:0	12	!
water	10:32	0:0	12	p_sys
op	10:37	0:0	12	->
water	10:39	0:0	12	p_hair
op	10:45	0:0	12	[
water	10:46	0:0	12	i_h
op	10:49	0:0	12	]
stmts	11:20	11:37	9	
return	11:20	11:37	10	VLC_ENOMEM
water	11:27	0:0	11	VLC_ENOMEM
water	13:16	0:0	8	p_sys
op	13:21	0:0	8	->
water	13:23	0:0	8	p_hair
op	13:29	0:0	8	[
water	13:30	0:0	8	i_h
op	13:33	0:0	8	]
op	13:34	0:0	8	->
water	13:36	0:0	8	i_length
op	13:45	0:0	8	=
water	13:47	0:0	8	(
water	13:48	0:0	8	unsigned
water	13:56	0:0	8	)
call	13:57	13:69	8	vlc_mrand48
op	14:45	0:0	8	%
water	14:47	0:0	8	(
water	14:49	0:0	8	p_sys
op	14:54	0:0	8	->
water	14:56	0:0	8	i_width
op	14:63	0:0	8	[
water	14:64	0:0	8	Y_PLANE
op	14:71	0:0	8	]
op	14:73	0:0	8	/
water	14:75	0:0	8	3
water	14:77	0:0	8	)
op	14:79	0:0	8	+
water	14:81	0:0	8	5
water	14:82	0:0	8	;
water	15:16	0:0	8	p_sys
op	15:21	0:0	8	->
water	15:23	0:0	8	p_hair
op	15:29	0:0	8	[
water	15:30	0:0	8	i_h
op	15:33	0:0	8	]
op	15:34	0:0	8	->
water	15:36	0:0	8	i_curve
op	15:45	0:0	8	=
call	15:47	15:79	8	MOD
arg	15:52	15:74	9	(int32_t)vlc_mrand48()
water	15:52	0:0	10	(
water	15:53	0:0	10	int32_t
water	15:60	0:0	10	)
call	15:61	15:73	10	vlc_mrand48
arg	15:76	15:79	9	80
water	15:76	0:0	10	80
op	15:81	0:0	8	-
water	15:83	0:0	8	40
water	15:85	0:0	8	;
water	16:16	0:0	8	p_sys
op	16:21	0:0	8	->
water	16:23	0:0	8	p_hair
op	16:29	0:0	8	[
water	16:30	0:0	8	i_h
op	16:33	0:0	8	]
op	16:34	0:0	8	->
water	16:36	0:0	8	i_width
op	16:45	0:0	8	=
water	16:47	0:0	8	(
water	16:48	0:0	8	unsigned
water	16:56	0:0	8	)
call	16:57	16:69	8	vlc_mrand48
op	17:45	0:0	8	%
call	17:47	17:88	8	__MAX
arg	17:54	17:55	9	1
water	17:54	0:0	10	1
arg	17:57	17:88	9	p_sys->i_width[Y_PLANE]/1500
water	17:57	0:0	10	p_sys
op	17:62	0:0	10	->
water	17:64	0:0	10	i_width
op	17:71	0:0	10	[
water	17:72	0:0	10	Y_PLANE
op	17:79	0:0	10	]
op	17:81	0:0	10	/
water	17:83	0:0	10	1500
op	17:90	0:0	8	+
water	17:92	0:0	8	1
water	17:93	0:0	8	;
water	18:16	0:0	8	p_sys
op	18:21	0:0	8	->
water	18:23	0:0	8	p_hair
op	18:29	0:0	8	[
water	18:30	0:0	8	i_h
op	18:33	0:0	8	]
op	18:34	0:0	8	->
water	18:36	0:0	8	i_intensity
op	18:48	0:0	8	=
water	18:50	0:0	8	(
water	18:51	0:0	8	unsigned
water	18:59	0:0	8	)
call	18:60	18:72	8	vlc_mrand48
op	18:74	0:0	8	%
water	18:76	0:0	8	50
op	18:79	0:0	8	+
water	18:81	0:0	8	20
water	18:83	0:0	8	;
call	19:16	19:76	8	oldmovie_define_hair_location
arg	19:47	19:55	9	p_filter
water	19:47	0:0	10	p_filter
arg	19:57	19:76	9	p_sys->p_hair[i_h]
water	19:57	0:0	10	p_sys
op	19:62	0:0	10	->
water	19:64	0:0	10	p_hair
op	19:70	0:0	10	[
water	19:71	0:0	10	i_h
op	19:74	0:0	10	]
water	19:77	0:0	8	;
break	20:16	20:21	8	
water	21:12	0:0	8	}
water	22:8	0:0	4	p_sys
op	22:13	0:0	4	->
water	22:15	0:0	4	i_hair_trigger
op	22:30	0:0	4	=
water	22:32	0:0	4	p_sys
op	22:37	0:0	4	->
water	22:39	0:0	4	i_cur_time
op	23:30	0:0	4	+
water	23:32	0:0	4	(
water	23:33	0:0	4	uint64_t
water	23:41	0:0	4	)
call	23:42	23:54	4	vlc_mrand48
op	23:56	0:0	4	%
water	23:58	0:0	4	HAIR_GENERATOR_PERIOD
op	24:30	0:0	4	+
water	24:32	0:0	4	HAIR_GENERATOR_PERIOD
op	24:54	0:0	4	/
water	24:56	0:0	4	2
water	24:57	0:0	4	;
water	25:4	0:0	4	}
for	27:4	60:8	2	( uint32_t i_h = 0 ;i_h < MAX_HAIR;i_h ++)
forinit	0:0	27:26	3	 uint32_t i_h = 0 ;
decl	27:10	27:26	4	uint32_t	i_h
op	27:23	0:0	4	=
water	27:25	0:0	4	0
cond	27:28	27:34	3	i_h < MAX_HAIR
water	27:28	0:0	4	i_h
op	27:32	0:0	4	<
water	27:34	0:0	4	MAX_HAIR
forexpr	27:44	27:47	3	i_h ++
water	27:44	0:0	4	i_h
op	27:47	0:0	4	++
stmts	28:8	60:8	3	
if	28:8	60:8	4	(p_sys -> p_hair [ i_h ])
cond	28:13	28:30	5	p_sys -> p_hair [ i_h ]
water	28:13	0:0	6	p_sys
op	28:18	0:0	6	->
water	28:20	0:0	6	p_hair
op	28:26	0:0	6	[
water	28:27	0:0	6	i_h
op	28:30	0:0	6	]
stmts	28:34	60:8	5	
water	28:34	0:0	6	{
if	30:12	40:12	6	(p_sys -> p_hair [ i_h ] -> i_stop_trigger <= p_sys -> i_cur_time)
cond	30:17	30:62	7	p_sys -> p_hair [ i_h ] -> i_stop_trigger <= p_sys -> i_cur_time
water	30:17	0:0	8	p_sys
op	30:22	0:0	8	->
water	30:24	0:0	8	p_hair
op	30:30	0:0	8	[
water	30:31	0:0	8	i_h
op	30:34	0:0	8	]
op	30:35	0:0	8	->
water	30:37	0:0	8	i_stop_trigger
op	30:52	0:0	8	<=
water	30:55	0:0	8	p_sys
op	30:60	0:0	8	->
water	30:62	0:0	8	i_cur_time
stmts	30:75	40:12	7	
water	30:75	0:0	8	{
if	32:16	34:81	8	(( unsigned )vlc_mrand48 ( ) % 2 == 0)
cond	32:21	32:52	9	( unsigned )vlc_mrand48 ( ) % 2 == 0
water	32:21	0:0	10	(
water	32:22	0:0	10	unsigned
water	32:30	0:0	10	)
call	32:31	32:43	10	vlc_mrand48
op	32:45	0:0	10	%
water	32:47	0:0	10	2
op	32:49	0:0	10	==
water	32:52	0:0	10	0
stmts	34:20	34:81	9	
call	34:20	34:80	10	oldmovie_define_hair_location
arg	34:51	34:59	11	p_filter
water	34:51	0:0	12	p_filter
arg	34:61	34:80	11	p_sys->p_hair[i_h]
water	34:61	0:0	12	p_sys
op	34:66	0:0	12	->
water	34:68	0:0	12	p_hair
op	34:74	0:0	12	[
water	34:75	0:0	12	i_h
op	34:78	0:0	12	]
water	34:81	0:0	10	;
else	35:16	39:16	8
stmts	35:21	39:16	9	
water	35:21	0:0	10	{
call	37:20	37:49	10	FREENULL
arg	37:30	37:49	11	p_sys->p_hair[i_h]
water	37:30	0:0	12	p_sys
op	37:35	0:0	12	->
water	37:37	0:0	12	p_hair
op	37:43	0:0	12	[
water	37:44	0:0	12	i_h
op	37:47	0:0	12	]
water	37:50	0:0	10	;
continue	38:20	38:28	10	
water	39:16	0:0	10	}
water	40:12	0:0	8	}
decl	42:12	42:64	6	double	f_base_x
op	42:31	0:0	6	=
water	42:33	0:0	6	(
water	42:34	0:0	6	double
water	42:40	0:0	6	)
water	42:41	0:0	6	p_sys
op	42:46	0:0	6	->
water	42:48	0:0	6	p_hair
op	42:54	0:0	6	[
water	42:55	0:0	6	i_h
op	42:58	0:0	6	]
op	42:59	0:0	6	->
water	42:61	0:0	6	i_x
decl	43:12	43:64	6	double	f_base_y
op	43:31	0:0	6	=
water	43:33	0:0	6	(
water	43:34	0:0	6	double
water	43:40	0:0	6	)
water	43:41	0:0	6	p_sys
op	43:46	0:0	6	->
water	43:48	0:0	6	p_hair
op	43:54	0:0	6	[
water	43:55	0:0	6	i_h
op	43:58	0:0	6	]
op	43:59	0:0	6	->
water	43:61	0:0	6	i_y
for	44:12	59:12	6	( int32_t i_l = 0 ;i_l < p_sys -> p_hair [ i_h ] -> i_length;i_l ++)
forinit	0:0	44:33	7	 int32_t i_l = 0 ;
decl	44:18	44:33	8	int32_t	i_l
op	44:30	0:0	8	=
water	44:32	0:0	8	0
cond	44:35	44:61	7	i_l < p_sys -> p_hair [ i_h ] -> i_length
water	44:35	0:0	8	i_l
op	44:39	0:0	8	<
water	44:41	0:0	8	p_sys
op	44:46	0:0	8	->
water	44:48	0:0	8	p_hair
op	44:54	0:0	8	[
water	44:55	0:0	8	i_h
op	44:58	0:0	8	]
op	44:59	0:0	8	->
water	44:61	0:0	8	i_length
forexpr	44:71	44:74	7	i_l ++
water	44:71	0:0	8	i_l
op	44:74	0:0	8	++
stmts	44:79	59:12	7	
water	44:79	0:0	8	{
decl	45:16	46:80	8	uint32_t	i_current_rot
op	45:39	0:0	8	=
water	45:41	0:0	8	p_sys
op	45:46	0:0	8	->
water	45:48	0:0	8	p_hair
op	45:54	0:0	8	[
water	45:55	0:0	8	i_h
op	45:58	0:0	8	]
op	45:59	0:0	8	->
water	45:61	0:0	8	i_rotation
op	46:39	0:0	8	+
water	46:41	0:0	8	p_sys
op	46:46	0:0	8	->
water	46:48	0:0	8	p_hair
op	46:54	0:0	8	[
water	46:55	0:0	8	i_h
op	46:58	0:0	8	]
op	46:59	0:0	8	->
water	46:61	0:0	8	i_curve
op	46:69	0:0	8	*
water	46:71	0:0	8	i_l
op	46:75	0:0	8	/
water	46:77	0:0	8	100
water	47:16	0:0	8	f_base_x
op	47:25	0:0	8	+=
call	47:28	47:70	8	cos
arg	47:33	47:70	9	(double)i_current_rot/128.0*M_PI
water	47:33	0:0	10	(
water	47:34	0:0	10	double
water	47:40	0:0	10	)
water	47:41	0:0	10	i_current_rot
op	47:55	0:0	10	/
water	47:57	0:0	10	128
op	47:60	0:0	10	.
water	47:61	0:0	10	0
op	47:63	0:0	10	*
water	47:65	0:0	10	M_PI
water	47:71	0:0	8	;
water	48:16	0:0	8	f_base_y
op	48:25	0:0	8	+=
call	48:28	48:70	8	sin
arg	48:33	48:70	9	(double)i_current_rot/128.0*M_PI
water	48:33	0:0	10	(
water	48:34	0:0	10	double
water	48:40	0:0	10	)
water	48:41	0:0	10	i_current_rot
op	48:55	0:0	10	/
water	48:57	0:0	10	128
op	48:60	0:0	10	.
water	48:61	0:0	10	0
op	48:63	0:0	10	*
water	48:65	0:0	10	M_PI
water	48:71	0:0	8	;
decl	49:16	49:45	8	double	f_current_x
op	49:35	0:0	8	=
water	49:37	0:0	8	f_base_x
decl	50:16	50:45	8	double	f_current_y
op	50:35	0:0	8	=
water	50:37	0:0	8	f_base_y
for	51:16	58:16	8	( int32_t i_w = 0 ;i_w < p_sys -> p_hair [ i_h ] -> i_width;i_w ++)
forinit	0:0	51:37	9	 int32_t i_w = 0 ;
decl	51:22	51:37	10	int32_t	i_w
op	51:34	0:0	10	=
water	51:36	0:0	10	0
cond	51:39	51:65	9	i_w < p_sys -> p_hair [ i_h ] -> i_width
water	51:39	0:0	10	i_w
op	51:43	0:0	10	<
water	51:45	0:0	10	p_sys
op	51:50	0:0	10	->
water	51:52	0:0	10	p_hair
op	51:58	0:0	10	[
water	51:59	0:0	10	i_h
op	51:62	0:0	10	]
op	51:63	0:0	10	->
water	51:65	0:0	10	i_width
forexpr	51:74	51:77	9	i_w ++
water	51:74	0:0	10	i_w
op	51:77	0:0	10	++
stmts	51:82	58:16	9	
water	51:82	0:0	10	{
water	52:20	0:0	10	f_current_x
op	52:32	0:0	10	+=
call	52:35	52:77	10	sin
arg	52:40	52:77	11	(double)i_current_rot/128.0*M_PI
water	52:40	0:0	12	(
water	52:41	0:0	12	double
water	52:47	0:0	12	)
water	52:48	0:0	12	i_current_rot
op	52:62	0:0	12	/
water	52:64	0:0	12	128
op	52:67	0:0	12	.
water	52:68	0:0	12	0
op	52:70	0:0	12	*
water	52:72	0:0	12	M_PI
water	52:78	0:0	10	;
water	53:20	0:0	10	f_current_y
op	53:32	0:0	10	+=
call	53:35	53:77	10	cos
arg	53:40	53:77	11	(double)i_current_rot/128.0*M_PI
water	53:40	0:0	12	(
water	53:41	0:0	12	double
water	53:47	0:0	12	)
water	53:48	0:0	12	i_current_rot
op	53:62	0:0	12	/
water	53:64	0:0	12	128
op	53:67	0:0	12	.
water	53:68	0:0	12	0
op	53:70	0:0	12	*
water	53:72	0:0	12	M_PI
water	53:78	0:0	10	;
call	54:20	57:65	10	CHECK_N_DARKEN_PIXEL
arg	54:42	54:63	11	(int32_t)f_current_x
water	54:42	0:0	12	(
water	54:43	0:0	12	int32_t
water	54:50	0:0	12	)
water	54:52	0:0	12	f_current_x
arg	55:42	55:63	11	(int32_t)f_current_y
water	55:42	0:0	12	(
water	55:43	0:0	12	int32_t
water	55:50	0:0	12	)
water	55:52	0:0	12	f_current_y
arg	56:42	56:73	11	p_sys->p_hair[i_h]->i_intensity
water	56:42	0:0	12	p_sys
op	56:47	0:0	12	->
water	56:49	0:0	12	p_hair
op	56:55	0:0	12	[
water	56:56	0:0	12	i_h
op	56:59	0:0	12	]
op	56:60	0:0	12	->
water	56:62	0:0	12	i_intensity
arg	57:42	57:65	11	&p_pic_out->p[Y_PLANE]
op	57:42	0:0	12	&
water	57:43	0:0	12	p_pic_out
op	57:52	0:0	12	->
water	57:54	0:0	12	p
op	57:55	0:0	12	[
water	57:56	0:0	12	Y_PLANE
op	57:63	0:0	12	]
water	57:66	0:0	10	;
water	58:16	0:0	10	}
water	59:12	0:0	8	}
water	60:8	0:0	6	}
return	61:4	61:22	2	VLC_SUCCESS
water	61:11	0:0	3	VLC_SUCCESS

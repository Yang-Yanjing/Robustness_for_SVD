func	2:0	54:0	0	static int	Open
params	2:16	0:0	1	
param	2:17	2:34	2	vlc_object_t *	obj
stmnts	0:0	53:22	1	
decl	4:4	4:48	2	audio_output_t	*aout
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	audio_output_t
op	4:43	0:0	2	*
water	4:44	0:0	2	)
water	4:45	0:0	2	obj
decl	5:4	5:44	2	aout_sys_t	*sys
op	5:20	0:0	2	=
call	5:22	5:43	3	malloc
arg	5:30	5:43	4	sizeof(*sys)
op	5:30	0:0	5	sizeof
water	5:37	0:0	5	(
op	5:38	0:0	5	*
water	5:39	0:0	5	sys
water	5:42	0:0	5	)
if	6:4	7:25	2	(unlikely (sys == NULL ))
cond	6:8	6:28	3	unlikely (sys == NULL )
call	6:8	6:28	4	unlikely
arg	6:17	6:28	5	sys==NULL
water	6:17	0:0	6	sys
op	6:21	0:0	6	==
water	6:24	0:0	6	NULL
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
decl	8:4	8:56	2	void	*opaque
op	8:17	0:0	2	=
call	8:19	8:55	3	var_InheritAddress
arg	8:39	8:42	4	obj
water	8:39	0:0	5	obj
arg	8:44	8:55	4	"amem-data"
water	8:44	0:0	5	"amem-data"
water	9:4	0:0	2	sys
op	9:7	0:0	2	->
water	9:9	0:0	2	setup
op	9:15	0:0	2	=
call	9:17	9:54	2	var_InheritAddress
arg	9:37	9:40	3	obj
water	9:37	0:0	4	obj
arg	9:42	9:54	3	"amem-setup"
water	9:42	0:0	4	"amem-setup"
water	9:55	0:0	2	;
if	10:4	14:4	2	(sys -> setup != NULL)
cond	10:8	10:22	3	sys -> setup != NULL
water	10:8	0:0	4	sys
op	10:11	0:0	4	->
water	10:13	0:0	4	setup
op	10:19	0:0	4	!=
water	10:22	0:0	4	NULL
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
water	12:8	0:0	4	sys
op	12:11	0:0	4	->
water	12:13	0:0	4	cleanup
op	12:21	0:0	4	=
call	12:23	12:62	4	var_InheritAddress
arg	12:43	12:46	5	obj
water	12:43	0:0	6	obj
arg	12:48	12:62	5	"amem-cleanup"
water	12:48	0:0	6	"amem-cleanup"
water	12:63	0:0	4	;
water	13:8	0:0	4	sys
op	13:11	0:0	4	->
water	13:13	0:0	4	setup_opaque
op	13:26	0:0	4	=
water	13:28	0:0	4	opaque
water	13:34	0:0	4	;
water	14:4	0:0	4	}
else	15:4	21:4	2
stmts	16:4	21:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	sys
op	17:11	0:0	4	->
water	17:13	0:0	4	cleanup
op	17:21	0:0	4	=
water	17:23	0:0	4	NULL
water	17:27	0:0	4	;
water	18:8	0:0	4	sys
op	18:11	0:0	4	->
water	18:13	0:0	4	opaque
op	18:20	0:0	4	=
water	18:22	0:0	4	opaque
water	18:28	0:0	4	;
water	19:8	0:0	4	sys
op	19:11	0:0	4	->
water	19:13	0:0	4	rate
op	19:18	0:0	4	=
call	19:20	19:56	4	var_InheritInteger
arg	19:40	19:43	5	obj
water	19:40	0:0	6	obj
arg	19:45	19:56	5	"amem-rate"
water	19:45	0:0	6	"amem-rate"
water	19:57	0:0	4	;
water	20:8	0:0	4	sys
op	20:11	0:0	4	->
water	20:13	0:0	4	channels
op	20:22	0:0	4	=
call	20:24	20:64	4	var_InheritInteger
arg	20:44	20:47	5	obj
water	20:44	0:0	6	obj
arg	20:49	20:64	5	"amem-channels"
water	20:49	0:0	6	"amem-channels"
water	20:65	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	sys
op	22:7	0:0	2	->
water	22:9	0:0	2	play
op	22:14	0:0	2	=
call	22:16	22:52	2	var_InheritAddress
arg	22:36	22:39	3	obj
water	22:36	0:0	4	obj
arg	22:41	22:52	3	"amem-play"
water	22:41	0:0	4	"amem-play"
water	22:53	0:0	2	;
water	23:4	0:0	2	sys
op	23:7	0:0	2	->
water	23:9	0:0	2	pause
op	23:15	0:0	2	=
call	23:17	23:54	2	var_InheritAddress
arg	23:37	23:40	3	obj
water	23:37	0:0	4	obj
arg	23:42	23:54	3	"amem-pause"
water	23:42	0:0	4	"amem-pause"
water	23:55	0:0	2	;
water	24:4	0:0	2	sys
op	24:7	0:0	2	->
water	24:9	0:0	2	resume
op	24:16	0:0	2	=
call	24:18	24:56	2	var_InheritAddress
arg	24:38	24:41	3	obj
water	24:38	0:0	4	obj
arg	24:43	24:56	3	"amem-resume"
water	24:43	0:0	4	"amem-resume"
water	24:57	0:0	2	;
water	25:4	0:0	2	sys
op	25:7	0:0	2	->
water	25:9	0:0	2	flush
op	25:15	0:0	2	=
call	25:17	25:54	2	var_InheritAddress
arg	25:37	25:40	3	obj
water	25:37	0:0	4	obj
arg	25:42	25:54	3	"amem-flush"
water	25:42	0:0	4	"amem-flush"
water	25:55	0:0	2	;
water	26:4	0:0	2	sys
op	26:7	0:0	2	->
water	26:9	0:0	2	drain
op	26:15	0:0	2	=
call	26:17	26:54	2	var_InheritAddress
arg	26:37	26:40	3	obj
water	26:37	0:0	4	obj
arg	26:42	26:54	3	"amem-drain"
water	26:42	0:0	4	"amem-drain"
water	26:55	0:0	2	;
water	27:4	0:0	2	sys
op	27:7	0:0	2	->
water	27:9	0:0	2	set_volume
op	27:20	0:0	2	=
call	27:22	27:64	2	var_InheritAddress
arg	27:42	27:45	3	obj
water	27:42	0:0	4	obj
arg	27:47	27:64	3	"amem-set-volume"
water	27:47	0:0	4	"amem-set-volume"
water	27:65	0:0	2	;
water	28:4	0:0	2	sys
op	28:7	0:0	2	->
water	28:9	0:0	2	volume
op	28:16	0:0	2	=
water	28:18	0:0	2	1
op	28:19	0:0	2	.
water	28:20	0:0	2	;
water	29:4	0:0	2	sys
op	29:7	0:0	2	->
water	29:9	0:0	2	mute
op	29:14	0:0	2	=
water	29:16	0:0	2	false
water	29:21	0:0	2	;
water	30:4	0:0	2	sys
op	30:7	0:0	2	->
water	30:9	0:0	2	ready
op	30:15	0:0	2	=
water	30:17	0:0	2	false
water	30:22	0:0	2	;
if	31:4	35:4	2	(sys -> play == NULL)
cond	31:8	31:21	3	sys -> play == NULL
water	31:8	0:0	4	sys
op	31:11	0:0	4	->
water	31:13	0:0	4	play
op	31:18	0:0	4	==
water	31:21	0:0	4	NULL
stmts	32:4	35:4	3	
water	32:4	0:0	4	{
call	33:8	33:17	4	free
arg	33:14	33:17	5	sys
water	33:14	0:0	6	sys
water	33:18	0:0	4	;
return	34:8	34:27	4	VLC_EGENERIC
water	34:15	0:0	5	VLC_EGENERIC
water	35:4	0:0	4	}
water	36:4	0:0	2	aout
op	36:8	0:0	2	->
water	36:10	0:0	2	sys
op	36:14	0:0	2	=
water	36:16	0:0	2	sys
water	36:19	0:0	2	;
water	37:4	0:0	2	aout
op	37:8	0:0	2	->
water	37:10	0:0	2	start
op	37:16	0:0	2	=
water	37:18	0:0	2	Start
water	37:23	0:0	2	;
water	38:4	0:0	2	aout
op	38:8	0:0	2	->
water	38:10	0:0	2	stop
op	38:15	0:0	2	=
water	38:17	0:0	2	Stop
water	38:21	0:0	2	;
water	39:4	0:0	2	aout
op	39:8	0:0	2	->
water	39:10	0:0	2	time_get
op	39:19	0:0	2	=
water	39:21	0:0	2	NULL
water	39:25	0:0	2	;
water	40:4	0:0	2	aout
op	40:8	0:0	2	->
water	40:10	0:0	2	play
op	40:15	0:0	2	=
water	40:17	0:0	2	Play
water	40:21	0:0	2	;
water	41:4	0:0	2	aout
op	41:8	0:0	2	->
water	41:10	0:0	2	pause
op	41:16	0:0	2	=
water	41:18	0:0	2	Pause
water	41:23	0:0	2	;
water	42:4	0:0	2	aout
op	42:8	0:0	2	->
water	42:10	0:0	2	flush
op	42:16	0:0	2	=
water	42:18	0:0	2	Flush
water	42:23	0:0	2	;
if	43:4	47:4	2	(sys -> set_volume != NULL)
cond	43:8	43:27	3	sys -> set_volume != NULL
water	43:8	0:0	4	sys
op	43:11	0:0	4	->
water	43:13	0:0	4	set_volume
op	43:24	0:0	4	!=
water	43:27	0:0	4	NULL
stmts	44:4	47:4	3	
water	44:4	0:0	4	{
water	45:8	0:0	4	aout
op	45:12	0:0	4	->
water	45:14	0:0	4	volume_set
op	45:25	0:0	4	=
water	45:27	0:0	4	VolumeSet
water	45:36	0:0	4	;
water	46:8	0:0	4	aout
op	46:12	0:0	4	->
water	46:14	0:0	4	mute_set
op	46:23	0:0	4	=
water	46:25	0:0	4	MuteSet
water	46:32	0:0	4	;
water	47:4	0:0	4	}
else	48:4	52:4	2
stmts	49:4	52:4	3	
water	49:4	0:0	4	{
water	50:8	0:0	4	aout
op	50:12	0:0	4	->
water	50:14	0:0	4	volume_set
op	50:25	0:0	4	=
water	50:27	0:0	4	SoftVolumeSet
water	50:40	0:0	4	;
water	51:8	0:0	4	aout
op	51:12	0:0	4	->
water	51:14	0:0	4	mute_set
op	51:23	0:0	4	=
water	51:25	0:0	4	SoftMuteSet
water	51:36	0:0	4	;
water	52:4	0:0	4	}
return	53:4	53:22	2	VLC_SUCCESS
water	53:11	0:0	3	VLC_SUCCESS

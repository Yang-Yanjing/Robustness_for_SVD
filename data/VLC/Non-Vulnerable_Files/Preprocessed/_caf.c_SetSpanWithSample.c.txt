func	2:0	38:0	0	static int	SetSpanWithSample
params	2:28	0:0	1	
param	2:30	2:46	2	demux_t *	p_demux
param	2:48	2:68	2	frame_span_t *	p_span
param	2:70	2:95	2	uint64_t	i_target_sample
stmnts	0:0	37:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:53	2	uint64_t	i_num_frames
op	5:26	0:0	2	=
call	5:28	5:52	3	TotalNumFrames
arg	5:44	5:52	4	p_demux
water	5:44	0:0	5	p_demux
if	6:4	18:4	2	(!NeedsPacketTable (p_sys ))
cond	6:8	6:33	3	!NeedsPacketTable (p_sys )
op	6:8	0:0	4	!
call	6:9	6:33	4	NeedsPacketTable
arg	6:27	6:33	5	p_sys
water	6:27	0:0	6	p_sys
stmts	7:4	18:4	3	
water	7:4	0:0	4	{
decl	8:8	8:76	4	uint64_t	i_frame
op	8:25	0:0	4	=
water	8:27	0:0	4	i_target_sample
op	8:43	0:0	4	/
water	8:45	0:0	4	p_sys
op	8:50	0:0	4	->
water	8:52	0:0	4	fmt
op	8:55	0:0	4	.
water	8:56	0:0	4	audio
op	8:61	0:0	4	.
water	8:62	0:0	4	i_frame_length
decl	9:8	9:90	4	uint64_t	i_remaining
op	9:29	0:0	4	=
water	9:31	0:0	4	i_target_sample
op	9:47	0:0	4	-
water	9:49	0:0	4	i_frame
op	9:57	0:0	4	*
water	9:59	0:0	4	p_sys
op	9:64	0:0	4	->
water	9:66	0:0	4	fmt
op	9:69	0:0	4	.
water	9:70	0:0	4	audio
op	9:75	0:0	4	.
water	9:76	0:0	4	i_frame_length
if	10:8	11:21	4	(i_remaining > ( p_sys -> fmt . audio . i_frame_length / 2 ))
cond	10:12	10:64	5	i_remaining > ( p_sys -> fmt . audio . i_frame_length / 2 )
water	10:12	0:0	6	i_remaining
op	10:24	0:0	6	>
water	10:26	0:0	6	(
water	10:28	0:0	6	p_sys
op	10:33	0:0	6	->
water	10:35	0:0	6	fmt
op	10:38	0:0	6	.
water	10:39	0:0	6	audio
op	10:44	0:0	6	.
water	10:45	0:0	6	i_frame_length
op	10:60	0:0	6	/
water	10:62	0:0	6	2
water	10:64	0:0	6	)
stmts	11:12	11:21	5	
water	11:12	0:0	6	i_frame
op	11:19	0:0	6	++
water	11:21	0:0	6	;
if	12:8	13:34	4	(i_frame > i_num_frames)
cond	12:12	12:22	5	i_frame > i_num_frames
water	12:12	0:0	6	i_frame
op	12:20	0:0	6	>
water	12:22	0:0	6	i_num_frames
stmts	13:12	13:34	5	
water	13:12	0:0	6	i_frame
op	13:20	0:0	6	=
water	13:22	0:0	6	i_num_frames
water	13:34	0:0	6	;
water	14:8	0:0	4	p_span
op	14:14	0:0	4	->
water	14:16	0:0	4	i_frames
op	14:25	0:0	4	=
water	14:27	0:0	4	i_frame
water	14:34	0:0	4	;
water	15:8	0:0	4	p_span
op	15:14	0:0	4	->
water	15:16	0:0	4	i_samples
op	15:26	0:0	4	=
water	15:28	0:0	4	i_frame
op	15:36	0:0	4	*
water	15:38	0:0	4	p_sys
op	15:43	0:0	4	->
water	15:45	0:0	4	fmt
op	15:48	0:0	4	.
water	15:49	0:0	4	audio
op	15:54	0:0	4	.
water	15:55	0:0	4	i_frame_length
water	15:69	0:0	4	;
water	16:8	0:0	4	p_span
op	16:14	0:0	4	->
water	16:16	0:0	4	i_bytes
op	16:24	0:0	4	=
water	16:26	0:0	4	i_frame
op	16:34	0:0	4	*
water	16:36	0:0	4	p_sys
op	16:41	0:0	4	->
water	16:43	0:0	4	fmt
op	16:46	0:0	4	.
water	16:47	0:0	4	audio
op	16:52	0:0	4	.
water	16:53	0:0	4	i_bytes_per_frame
water	16:70	0:0	4	;
water	17:8	0:0	4	p_span
op	17:14	0:0	4	->
water	17:16	0:0	4	i_desc_bytes
op	17:29	0:0	4	=
water	17:31	0:0	4	0
water	17:32	0:0	4	;
water	18:4	0:0	4	}
else	19:4	36:4	2
stmts	20:4	36:4	3	
water	20:4	0:0	4	{
op	21:8	0:0	4	*
water	21:9	0:0	4	p_span
op	21:16	0:0	4	=
water	21:18	0:0	4	(
water	21:19	0:0	4	frame_span_t
water	21:31	0:0	4	)
water	21:32	0:0	4	{
water	21:33	0:0	4	0
water	21:34	0:0	4	}
water	21:35	0:0	4	;
decl	22:8	22:30	4	frame_span_t	prev_span
while	23:8	35:8	4	(p_span -> i_samples < i_target_sample && p_span -> i_frames < i_num_frames)
cond	23:15	23:73	5	p_span -> i_samples < i_target_sample && p_span -> i_frames < i_num_frames
water	23:15	0:0	6	p_span
op	23:21	0:0	6	->
water	23:23	0:0	6	i_samples
op	23:33	0:0	6	<
water	23:35	0:0	6	i_target_sample
op	23:51	0:0	6	&&
water	23:54	0:0	6	p_span
op	23:60	0:0	6	->
water	23:62	0:0	6	i_frames
op	23:71	0:0	6	<
water	23:73	0:0	6	i_num_frames
stmts	24:8	35:8	5	
water	24:8	0:0	6	{
water	25:12	0:0	6	prev_span
op	25:22	0:0	6	=
op	25:24	0:0	6	*
water	25:25	0:0	6	p_span
water	25:31	0:0	6	;
if	26:12	27:35	6	(FrameSpanAddDescription (p_demux ,p_span -> i_desc_bytes ,p_span ))
cond	26:16	26:79	7	FrameSpanAddDescription (p_demux ,p_span -> i_desc_bytes ,p_span )
call	26:16	26:79	8	FrameSpanAddDescription
arg	26:41	26:48	9	p_demux
water	26:41	0:0	10	p_demux
arg	26:50	26:70	9	p_span->i_desc_bytes
water	26:50	0:0	10	p_span
op	26:56	0:0	10	->
water	26:58	0:0	10	i_desc_bytes
arg	26:72	26:79	9	p_span
water	26:72	0:0	10	p_span
stmts	27:16	27:35	7	
return	27:16	27:35	8	VLC_EGENERIC
water	27:23	0:0	9	VLC_EGENERIC
if	28:12	34:12	6	(p_span -> i_samples >= i_target_sample)
cond	28:16	28:37	7	p_span -> i_samples >= i_target_sample
water	28:16	0:0	8	p_span
op	28:22	0:0	8	->
water	28:24	0:0	8	i_samples
op	28:34	0:0	8	>=
water	28:37	0:0	8	i_target_sample
stmts	29:12	34:12	7	
water	29:12	0:0	8	{
decl	30:16	30:81	8	uint64_t	i_this_samples
op	30:40	0:0	8	=
water	30:42	0:0	8	p_span
op	30:48	0:0	8	->
water	30:50	0:0	8	i_samples
op	30:60	0:0	8	-
water	30:62	0:0	8	prev_span
op	30:71	0:0	8	.
water	30:72	0:0	8	i_samples
if	31:16	32:39	8	(i_target_sample - prev_span . i_samples < i_this_samples / 2)
cond	31:20	31:77	9	i_target_sample - prev_span . i_samples < i_this_samples / 2
water	31:20	0:0	10	i_target_sample
op	31:36	0:0	10	-
water	31:38	0:0	10	prev_span
op	31:47	0:0	10	.
water	31:48	0:0	10	i_samples
op	31:58	0:0	10	<
water	31:60	0:0	10	i_this_samples
op	31:75	0:0	10	/
water	31:77	0:0	10	2
stmts	32:20	32:39	9	
op	32:20	0:0	10	*
water	32:21	0:0	10	p_span
op	32:28	0:0	10	=
water	32:30	0:0	10	prev_span
water	32:39	0:0	10	;
break	33:16	33:21	8	
water	34:12	0:0	8	}
water	35:8	0:0	6	}
water	36:4	0:0	4	}
return	37:4	37:22	2	VLC_SUCCESS
water	37:11	0:0	3	VLC_SUCCESS

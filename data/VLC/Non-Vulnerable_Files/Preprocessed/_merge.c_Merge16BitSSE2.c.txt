func	2:0	24:0	0	void	Merge16BitSSE2
params	2:19	0:0	1	
param	2:21	2:34	2	void *	_p_dest
param	2:36	2:53	2	const void *	_p_s1
param	2:55	2:72	2	const void *	_p_s2
param	3:21	3:36	2	size_t	i_bytes
stmnts	0:0	23:46	1	
decl	5:4	5:30	2	uint16_t	*p_dest
op	5:21	0:0	2	=
water	5:23	0:0	2	_p_dest
decl	6:4	6:32	2	const uint16_t	*p_s1
op	6:25	0:0	2	=
water	6:27	0:0	2	_p_s1
decl	7:4	7:32	2	const uint16_t	*p_s2
op	7:25	0:0	2	=
water	7:27	0:0	2	_p_s2
decl	8:4	8:32	2	size_t	i_words
op	8:19	0:0	2	=
water	8:21	0:0	2	i_bytes
op	8:29	0:0	2	/
water	8:31	0:0	2	2
for	9:4	10:46	2	(;i_words > 0 && ( ( uintptr_t ) p_s1 & 15 );i_words --)
forinit	9:9	9:9	3	;
water	9:9	0:0	4	;
cond	9:11	9:47	3	i_words > 0 && ( ( uintptr_t ) p_s1 & 15 )
water	9:11	0:0	4	i_words
op	9:19	0:0	4	>
water	9:21	0:0	4	0
op	9:23	0:0	4	&&
water	9:26	0:0	4	(
water	9:27	0:0	4	(
water	9:28	0:0	4	uintptr_t
water	9:37	0:0	4	)
water	9:38	0:0	4	p_s1
op	9:43	0:0	4	&
water	9:45	0:0	4	15
water	9:47	0:0	4	)
forexpr	9:50	9:57	3	i_words --
water	9:50	0:0	4	i_words
op	9:57	0:0	4	--
stmts	10:8	10:46	3	
op	10:8	0:0	4	*
water	10:9	0:0	4	p_dest
op	10:15	0:0	4	++
op	10:18	0:0	4	=
water	10:20	0:0	4	(
op	10:22	0:0	4	*
water	10:23	0:0	4	p_s1
op	10:27	0:0	4	++
op	10:30	0:0	4	+
op	10:32	0:0	4	*
water	10:33	0:0	4	p_s2
op	10:37	0:0	4	++
water	10:40	0:0	4	)
op	10:42	0:0	4	>>
water	10:45	0:0	4	1
water	10:46	0:0	4	;
for	11:4	21:4	2	(;i_words >= 8;i_words -= 8)
forinit	11:9	11:9	3	;
water	11:9	0:0	4	;
cond	11:11	11:22	3	i_words >= 8
water	11:11	0:0	4	i_words
op	11:19	0:0	4	>=
water	11:22	0:0	4	8
forexpr	11:25	11:36	3	i_words -= 8
water	11:25	0:0	4	i_words
op	11:33	0:0	4	-=
water	11:36	0:0	4	8
stmts	12:4	21:4	3	
water	12:4	0:0	4	{
decl	13:8	17:71	4	__asm__	__volatile__
water	13:29	0:0	4	(
water	13:31	0:0	4	"movdqu %2,%%xmm1;"
water	14:31	0:0	4	"pavgw %1, %%xmm1;"
water	15:31	0:0	4	"movdqu %%xmm1, %0"
water	15:51	0:0	4	:
water	15:52	0:0	4	"=m"
water	15:57	0:0	4	(
op	15:58	0:0	4	*
water	15:59	0:0	4	p_dest
water	15:65	0:0	4	)
water	15:66	0:0	4	:
water	16:49	0:0	4	"m"
water	16:53	0:0	4	(
op	16:54	0:0	4	*
water	16:55	0:0	4	p_s1
water	16:59	0:0	4	)
water	16:60	0:0	4	,
water	17:49	0:0	4	"m"
water	17:53	0:0	4	(
op	17:54	0:0	4	*
water	17:55	0:0	4	p_s2
water	17:59	0:0	4	)
water	17:61	0:0	4	:
water	17:63	0:0	4	"xmm1"
water	17:70	0:0	4	)
water	18:8	0:0	4	p_dest
op	18:15	0:0	4	+=
water	18:18	0:0	4	8
water	18:19	0:0	4	;
water	19:8	0:0	4	p_s1
op	19:13	0:0	4	+=
water	19:16	0:0	4	8
water	19:17	0:0	4	;
water	20:8	0:0	4	p_s2
op	20:13	0:0	4	+=
water	20:16	0:0	4	8
water	20:17	0:0	4	;
water	21:4	0:0	4	}
for	22:4	23:46	2	(;i_words > 0;i_words --)
forinit	22:9	22:9	3	;
water	22:9	0:0	4	;
cond	22:11	22:21	3	i_words > 0
water	22:11	0:0	4	i_words
op	22:19	0:0	4	>
water	22:21	0:0	4	0
forexpr	22:24	22:31	3	i_words --
water	22:24	0:0	4	i_words
op	22:31	0:0	4	--
stmts	23:8	23:46	3	
op	23:8	0:0	4	*
water	23:9	0:0	4	p_dest
op	23:15	0:0	4	++
op	23:18	0:0	4	=
water	23:20	0:0	4	(
op	23:22	0:0	4	*
water	23:23	0:0	4	p_s1
op	23:27	0:0	4	++
op	23:30	0:0	4	+
op	23:32	0:0	4	*
water	23:33	0:0	4	p_s2
op	23:37	0:0	4	++
water	23:40	0:0	4	)
op	23:42	0:0	4	>>
water	23:45	0:0	4	1
water	23:46	0:0	4	;

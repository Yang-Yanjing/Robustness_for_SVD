func	2:0	74:0	0	static block_t *	OutputPicture
params	2:29	0:0	1	
param	2:31	2:48	2	decoder_t *	p_dec
stmnts	0:0	73:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:18	2	block_t	*p_pic
if	6:4	14:4	2	(! p_sys -> b_header && p_sys -> i_recovery_frames != - 1)
cond	6:9	6:58	3	! p_sys -> b_header && p_sys -> i_recovery_frames != - 1
op	6:9	0:0	4	!
water	6:10	0:0	4	p_sys
op	6:15	0:0	4	->
water	6:17	0:0	4	b_header
op	6:26	0:0	4	&&
water	6:29	0:0	4	p_sys
op	6:34	0:0	4	->
water	6:36	0:0	4	i_recovery_frames
op	6:54	0:0	4	!=
op	6:57	0:0	4	-
water	6:58	0:0	4	1
stmts	7:4	14:4	3	
water	7:4	0:0	4	{
if	8:8	12:8	4	(p_sys -> i_recovery_frames == 0)
cond	8:12	8:40	5	p_sys -> i_recovery_frames == 0
water	8:12	0:0	6	p_sys
op	8:17	0:0	6	->
water	8:19	0:0	6	i_recovery_frames
op	8:37	0:0	6	==
water	8:40	0:0	6	0
stmts	9:8	12:8	5	
water	9:8	0:0	6	{
call	10:12	10:72	6	msg_Dbg
arg	10:21	10:26	7	p_dec
water	10:21	0:0	8	p_dec
arg	10:28	10:72	7	"Recovery from SEI recovery point complete"
water	10:28	0:0	8	"Recovery from SEI recovery point complete"
water	10:73	0:0	6	;
water	11:12	0:0	6	p_sys
op	11:17	0:0	6	->
water	11:19	0:0	6	b_header
op	11:28	0:0	6	=
water	11:30	0:0	6	true
water	11:34	0:0	6	;
water	12:8	0:0	6	}
op	13:8	0:0	4	--
water	13:10	0:0	4	p_sys
op	13:15	0:0	4	->
water	13:17	0:0	4	i_recovery_frames
water	13:34	0:0	4	;
water	14:4	0:0	4	}
if	15:4	17:19	2	(! p_sys -> b_header && p_sys -> i_recovery_frames == - 1 && p_sys -> slice . i_frame_type != BLOCK_FLAG_TYPE_I)
cond	15:8	16:38	3	! p_sys -> b_header && p_sys -> i_recovery_frames == - 1 && p_sys -> slice . i_frame_type != BLOCK_FLAG_TYPE_I
op	15:8	0:0	4	!
water	15:9	0:0	4	p_sys
op	15:14	0:0	4	->
water	15:16	0:0	4	b_header
op	15:25	0:0	4	&&
water	15:28	0:0	4	p_sys
op	15:33	0:0	4	->
water	15:35	0:0	4	i_recovery_frames
op	15:53	0:0	4	==
op	15:56	0:0	4	-
water	15:57	0:0	4	1
op	15:59	0:0	4	&&
water	16:9	0:0	4	p_sys
op	16:14	0:0	4	->
water	16:16	0:0	4	slice
op	16:21	0:0	4	.
water	16:22	0:0	4	i_frame_type
op	16:35	0:0	4	!=
water	16:38	0:0	4	BLOCK_FLAG_TYPE_I
stmts	17:8	17:19	3	
return	17:8	17:19	4	NULL
water	17:15	0:0	5	NULL
decl	18:4	20:41	2	const bool	b_sps_pps_i
op	18:27	0:0	2	=
water	18:29	0:0	2	p_sys
op	18:34	0:0	2	->
water	18:36	0:0	2	slice
op	18:41	0:0	2	.
water	18:42	0:0	2	i_frame_type
op	18:55	0:0	2	==
water	18:58	0:0	2	BLOCK_FLAG_TYPE_I
op	18:76	0:0	2	&&
water	19:29	0:0	2	p_sys
op	19:34	0:0	2	->
water	19:36	0:0	2	b_sps
op	19:42	0:0	2	&&
water	20:29	0:0	2	p_sys
op	20:34	0:0	2	->
water	20:36	0:0	2	b_pps
if	21:4	48:4	2	(b_sps_pps_i || p_sys -> b_frame_sps || p_sys -> b_frame_pps)
cond	21:8	21:52	3	b_sps_pps_i || p_sys -> b_frame_sps || p_sys -> b_frame_pps
water	21:8	0:0	4	b_sps_pps_i
op	21:20	0:0	4	||
water	21:23	0:0	4	p_sys
op	21:28	0:0	4	->
water	21:30	0:0	4	b_frame_sps
op	21:42	0:0	4	||
water	21:45	0:0	4	p_sys
op	21:50	0:0	4	->
water	21:52	0:0	4	b_frame_pps
stmts	22:4	48:4	3	
water	22:4	0:0	4	{
decl	23:8	23:30	4	block_t	*p_head
op	23:24	0:0	4	=
water	23:26	0:0	4	NULL
if	24:8	28:8	4	(p_sys -> p_frame -> i_flags & BLOCK_FLAG_PRIVATE_AUD)
cond	24:12	24:38	5	p_sys -> p_frame -> i_flags & BLOCK_FLAG_PRIVATE_AUD
water	24:12	0:0	6	p_sys
op	24:17	0:0	6	->
water	24:19	0:0	6	p_frame
op	24:26	0:0	6	->
water	24:28	0:0	6	i_flags
op	24:36	0:0	6	&
water	24:38	0:0	6	BLOCK_FLAG_PRIVATE_AUD
stmts	25:8	28:8	5	
water	25:8	0:0	6	{
water	26:12	0:0	6	p_head
op	26:19	0:0	6	=
water	26:21	0:0	6	p_sys
op	26:26	0:0	6	->
water	26:28	0:0	6	p_frame
water	26:35	0:0	6	;
water	27:12	0:0	6	p_sys
op	27:17	0:0	6	->
water	27:19	0:0	6	p_frame
op	27:27	0:0	6	=
water	27:29	0:0	6	p_sys
op	27:34	0:0	6	->
water	27:36	0:0	6	p_frame
op	27:43	0:0	6	->
water	27:45	0:0	6	p_next
water	27:51	0:0	6	;
water	28:8	0:0	6	}
decl	29:8	29:30	4	block_t	*p_list
op	29:24	0:0	4	=
water	29:26	0:0	4	NULL
for	30:8	34:8	4	( int i = 0 ;i < SPS_MAX && ( b_sps_pps_i || p_sys -> b_frame_sps );i ++)
forinit	0:0	30:22	5	 int i = 0 ;
decl	30:13	30:22	6	int	i
op	30:19	0:0	6	=
water	30:21	0:0	6	0
cond	30:24	30:73	5	i < SPS_MAX && ( b_sps_pps_i || p_sys -> b_frame_sps )
water	30:24	0:0	6	i
op	30:26	0:0	6	<
water	30:28	0:0	6	SPS_MAX
op	30:36	0:0	6	&&
water	30:39	0:0	6	(
water	30:40	0:0	6	b_sps_pps_i
op	30:52	0:0	6	||
water	30:55	0:0	6	p_sys
op	30:60	0:0	6	->
water	30:62	0:0	6	b_frame_sps
water	30:73	0:0	6	)
forexpr	30:76	30:77	5	i ++
water	30:76	0:0	6	i
op	30:77	0:0	6	++
stmts	31:8	34:8	5	
water	31:8	0:0	6	{
if	32:12	33:81	6	(p_sys -> pp_sps [ i ])
cond	32:16	32:31	7	p_sys -> pp_sps [ i ]
water	32:16	0:0	8	p_sys
op	32:21	0:0	8	->
water	32:23	0:0	8	pp_sps
op	32:29	0:0	8	[
water	32:30	0:0	8	i
op	32:31	0:0	8	]
stmts	33:16	33:81	7	
call	33:16	33:80	8	block_ChainAppend
arg	33:35	33:42	9	&p_list
op	33:35	0:0	10	&
water	33:36	0:0	10	p_list
arg	33:44	33:80	9	block_Duplicate(p_sys->pp_sps[i])
call	33:44	33:78	10	block_Duplicate
arg	33:61	33:78	11	p_sys->pp_sps[i]
water	33:61	0:0	12	p_sys
op	33:66	0:0	12	->
water	33:68	0:0	12	pp_sps
op	33:74	0:0	12	[
water	33:75	0:0	12	i
op	33:76	0:0	12	]
water	33:81	0:0	8	;
water	34:8	0:0	6	}
for	35:8	39:8	4	( int i = 0 ;i < PPS_MAX && ( b_sps_pps_i || p_sys -> b_frame_pps );i ++)
forinit	0:0	35:22	5	 int i = 0 ;
decl	35:13	35:22	6	int	i
op	35:19	0:0	6	=
water	35:21	0:0	6	0
cond	35:24	35:73	5	i < PPS_MAX && ( b_sps_pps_i || p_sys -> b_frame_pps )
water	35:24	0:0	6	i
op	35:26	0:0	6	<
water	35:28	0:0	6	PPS_MAX
op	35:36	0:0	6	&&
water	35:39	0:0	6	(
water	35:40	0:0	6	b_sps_pps_i
op	35:52	0:0	6	||
water	35:55	0:0	6	p_sys
op	35:60	0:0	6	->
water	35:62	0:0	6	b_frame_pps
water	35:73	0:0	6	)
forexpr	35:76	35:77	5	i ++
water	35:76	0:0	6	i
op	35:77	0:0	6	++
stmts	36:8	39:8	5	
water	36:8	0:0	6	{
if	37:12	38:81	6	(p_sys -> pp_pps [ i ])
cond	37:16	37:31	7	p_sys -> pp_pps [ i ]
water	37:16	0:0	8	p_sys
op	37:21	0:0	8	->
water	37:23	0:0	8	pp_pps
op	37:29	0:0	8	[
water	37:30	0:0	8	i
op	37:31	0:0	8	]
stmts	38:16	38:81	7	
call	38:16	38:80	8	block_ChainAppend
arg	38:35	38:42	9	&p_list
op	38:35	0:0	10	&
water	38:36	0:0	10	p_list
arg	38:44	38:80	9	block_Duplicate(p_sys->pp_pps[i])
call	38:44	38:78	10	block_Duplicate
arg	38:61	38:78	11	p_sys->pp_pps[i]
water	38:61	0:0	12	p_sys
op	38:66	0:0	12	->
water	38:68	0:0	12	pp_pps
op	38:74	0:0	12	[
water	38:75	0:0	12	i
op	38:76	0:0	12	]
water	38:81	0:0	8	;
water	39:8	0:0	6	}
if	40:8	41:34	4	(b_sps_pps_i && p_list)
cond	40:12	40:27	5	b_sps_pps_i && p_list
water	40:12	0:0	6	b_sps_pps_i
op	40:24	0:0	6	&&
water	40:27	0:0	6	p_list
stmts	41:12	41:34	5	
water	41:12	0:0	6	p_sys
op	41:17	0:0	6	->
water	41:19	0:0	6	b_header
op	41:28	0:0	6	=
water	41:30	0:0	6	true
water	41:34	0:0	6	;
if	42:8	43:35	4	(p_head)
cond	42:12	42:12	5	p_head
water	42:12	0:0	6	p_head
stmts	43:12	43:35	5	
water	43:12	0:0	6	p_head
op	43:18	0:0	6	->
water	43:20	0:0	6	p_next
op	43:27	0:0	6	=
water	43:29	0:0	6	p_list
water	43:35	0:0	6	;
else	44:8	45:27	4
stmts	45:12	45:27	5	
water	45:12	0:0	6	p_head
op	45:19	0:0	6	=
water	45:21	0:0	6	p_list
water	45:27	0:0	6	;
call	46:8	46:51	4	block_ChainAppend
arg	46:27	46:34	5	&p_head
op	46:27	0:0	6	&
water	46:28	0:0	6	p_head
arg	46:36	46:51	5	p_sys->p_frame
water	46:36	0:0	6	p_sys
op	46:41	0:0	6	->
water	46:43	0:0	6	p_frame
water	46:52	0:0	4	;
water	47:8	0:0	4	p_pic
op	47:14	0:0	4	=
call	47:16	47:42	4	block_ChainGather
arg	47:35	47:42	5	p_head
water	47:35	0:0	6	p_head
water	47:43	0:0	4	;
water	48:4	0:0	4	}
else	49:4	52:4	2
stmts	50:4	52:4	3	
water	50:4	0:0	4	{
water	51:8	0:0	4	p_pic
op	51:14	0:0	4	=
call	51:16	51:50	4	block_ChainGather
arg	51:35	51:50	5	p_sys->p_frame
water	51:35	0:0	6	p_sys
op	51:40	0:0	6	->
water	51:42	0:0	6	p_frame
water	51:51	0:0	4	;
water	52:4	0:0	4	}
water	53:4	0:0	2	p_pic
op	53:9	0:0	2	->
water	53:11	0:0	2	i_dts
op	53:17	0:0	2	=
water	53:19	0:0	2	p_sys
op	53:24	0:0	2	->
water	53:26	0:0	2	i_frame_dts
water	53:37	0:0	2	;
water	54:4	0:0	2	p_pic
op	54:9	0:0	2	->
water	54:11	0:0	2	i_pts
op	54:17	0:0	2	=
water	54:19	0:0	2	p_sys
op	54:24	0:0	2	->
water	54:26	0:0	2	i_frame_pts
water	54:37	0:0	2	;
water	55:4	0:0	2	p_pic
op	55:9	0:0	2	->
water	55:11	0:0	2	i_length
op	55:20	0:0	2	=
water	55:22	0:0	2	0
water	55:23	0:0	2	;
water	56:4	0:0	2	p_pic
op	56:9	0:0	2	->
water	56:11	0:0	2	i_flags
op	56:19	0:0	2	|=
water	56:22	0:0	2	p_sys
op	56:27	0:0	2	->
water	56:29	0:0	2	slice
op	56:34	0:0	2	.
water	56:35	0:0	2	i_frame_type
water	56:47	0:0	2	;
water	57:4	0:0	2	p_pic
op	57:9	0:0	2	->
water	57:11	0:0	2	i_flags
op	57:19	0:0	2	&=
water	57:22	0:0	2	~BLOCK_FLAG_PRIVATE_AUD
water	57:45	0:0	2	;
if	58:4	59:44	2	(! p_sys -> b_header)
cond	58:8	58:16	3	! p_sys -> b_header
op	58:8	0:0	4	!
water	58:9	0:0	4	p_sys
op	58:14	0:0	4	->
water	58:16	0:0	4	b_header
stmts	59:8	59:44	3	
water	59:8	0:0	4	p_pic
op	59:13	0:0	4	->
water	59:15	0:0	4	i_flags
op	59:23	0:0	4	|=
water	59:26	0:0	4	BLOCK_FLAG_PREROLL
water	59:44	0:0	4	;
water	60:4	0:0	2	p_sys
op	60:9	0:0	2	->
water	60:11	0:0	2	slice
op	60:16	0:0	2	.
water	60:17	0:0	2	i_frame_type
op	60:30	0:0	2	=
water	60:32	0:0	2	0
water	60:33	0:0	2	;
water	61:4	0:0	2	p_sys
op	61:9	0:0	2	->
water	61:11	0:0	2	p_frame
op	61:19	0:0	2	=
water	61:21	0:0	2	NULL
water	61:25	0:0	2	;
water	62:4	0:0	2	p_sys
op	62:9	0:0	2	->
water	62:11	0:0	2	i_frame_dts
op	62:23	0:0	2	=
water	62:25	0:0	2	VLC_TS_INVALID
water	62:39	0:0	2	;
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	i_frame_pts
op	63:23	0:0	2	=
water	63:25	0:0	2	VLC_TS_INVALID
water	63:39	0:0	2	;
water	64:4	0:0	2	p_sys
op	64:9	0:0	2	->
water	64:11	0:0	2	b_frame_sps
op	64:23	0:0	2	=
water	64:25	0:0	2	false
water	64:30	0:0	2	;
water	65:4	0:0	2	p_sys
op	65:9	0:0	2	->
water	65:11	0:0	2	b_frame_pps
op	65:23	0:0	2	=
water	65:25	0:0	2	false
water	65:30	0:0	2	;
water	66:4	0:0	2	p_sys
op	66:9	0:0	2	->
water	66:11	0:0	2	b_slice
op	66:19	0:0	2	=
water	66:21	0:0	2	false
water	66:26	0:0	2	;
water	68:4	0:0	2	p_sys
op	68:9	0:0	2	->
water	68:11	0:0	2	i_cc_pts
op	68:20	0:0	2	=
water	68:22	0:0	2	p_pic
op	68:27	0:0	2	->
water	68:29	0:0	2	i_pts
water	68:34	0:0	2	;
water	69:4	0:0	2	p_sys
op	69:9	0:0	2	->
water	69:11	0:0	2	i_cc_dts
op	69:20	0:0	2	=
water	69:22	0:0	2	p_pic
op	69:27	0:0	2	->
water	69:29	0:0	2	i_dts
water	69:34	0:0	2	;
water	70:4	0:0	2	p_sys
op	70:9	0:0	2	->
water	70:11	0:0	2	i_cc_flags
op	70:22	0:0	2	=
water	70:24	0:0	2	p_pic
op	70:29	0:0	2	->
water	70:31	0:0	2	i_flags
water	70:38	0:0	2	;
water	71:4	0:0	2	p_sys
op	71:9	0:0	2	->
water	71:11	0:0	2	cc
op	71:14	0:0	2	=
water	71:16	0:0	2	p_sys
op	71:21	0:0	2	->
water	71:23	0:0	2	cc_next
water	71:30	0:0	2	;
call	72:4	72:30	2	cc_Flush
arg	72:14	72:30	3	&p_sys->cc_next
op	72:14	0:0	4	&
water	72:15	0:0	4	p_sys
op	72:20	0:0	4	->
water	72:22	0:0	4	cc_next
water	72:31	0:0	2	;
return	73:4	73:16	2	p_pic
water	73:11	0:0	3	p_pic

func	2:0	15:0	0	static bool	open_vnc_connection
params	2:32	0:0	1	
param	2:34	2:53	2	filter_t *	p_filter
stmnts	0:0	14:15	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
call	5:4	6:45	2	msg_Dbg
arg	5:13	5:21	3	p_filter
water	5:13	0:0	4	p_filter
arg	5:23	5:60	3	"Open socket to vnc server on %s:%u."
water	5:23	0:0	4	"Open socket to vnc server on %s:%u."
arg	6:14	6:29	3	p_sys->psz_host
water	6:14	0:0	4	p_sys
op	6:19	0:0	4	->
water	6:21	0:0	4	psz_host
arg	6:31	6:45	3	p_sys->i_port
water	6:31	0:0	4	p_sys
op	6:36	0:0	4	->
water	6:38	0:0	4	i_port
water	6:46	0:0	2	;
water	7:4	0:0	2	p_sys
op	7:9	0:0	2	->
water	7:11	0:0	2	i_socket
op	7:20	0:0	2	=
call	7:22	7:79	2	net_ConnectTCP
arg	7:38	7:46	3	p_filter
water	7:38	0:0	4	p_filter
arg	7:48	7:63	3	p_sys->psz_host
water	7:48	0:0	4	p_sys
op	7:53	0:0	4	->
water	7:55	0:0	4	psz_host
arg	7:65	7:79	3	p_sys->i_port
water	7:65	0:0	4	p_sys
op	7:70	0:0	4	->
water	7:72	0:0	4	i_port
water	7:80	0:0	2	;
if	8:4	12:4	2	(p_sys -> i_socket < 0)
cond	8:8	8:26	3	p_sys -> i_socket < 0
water	8:8	0:0	4	p_sys
op	8:13	0:0	4	->
water	8:15	0:0	4	i_socket
op	8:24	0:0	4	<
water	8:26	0:0	4	0
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
call	10:8	10:51	4	msg_Err
arg	10:17	10:25	5	p_filter
water	10:17	0:0	6	p_filter
arg	10:27	10:51	5	"Could not open socket"
water	10:27	0:0	6	"Could not open socket"
water	10:52	0:0	4	;
return	11:8	11:20	4	false
water	11:15	0:0	5	false
water	12:4	0:0	4	}
call	13:4	13:41	2	msg_Dbg
arg	13:13	13:21	3	p_filter
water	13:13	0:0	4	p_filter
arg	13:23	13:41	3	"socket is open."
water	13:23	0:0	4	"socket is open."
water	13:42	0:0	2	;
return	14:4	14:15	2	true
water	14:11	0:0	3	true

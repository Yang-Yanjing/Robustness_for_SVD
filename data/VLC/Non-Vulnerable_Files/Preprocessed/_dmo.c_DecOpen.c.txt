func	2:0	250:0	0	static int	DecOpen
params	2:18	0:0	1	
param	2:20	2:37	2	decoder_t *	p_dec
stmnts	0:0	249:23	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:50	2	DMO_MEDIA_TYPE	dmo_input_type
water	5:33	0:0	2	,
decl	5:4	5:50	2	DMO_MEDIA_TYPE	dmo_output_type
decl	6:4	6:30	2	IMediaObject	*p_dmo
op	6:24	0:0	2	=
water	6:26	0:0	2	NULL
decl	7:4	7:31	2	HINSTANCE	hmsdmo_dll
op	7:25	0:0	2	=
water	7:27	0:0	2	NULL
decl	8:4	8:33	2	VIDEOINFOHEADER	*p_vih
op	8:27	0:0	2	=
water	8:29	0:0	2	NULL
decl	9:4	9:29	2	WAVEFORMATEX	*p_wf
op	9:23	0:0	2	=
water	9:25	0:0	2	NULL
call	11:4	11:51	2	CoInitializeEx
arg	11:20	11:24	3	NULL
water	11:20	0:0	4	NULL
arg	11:26	11:51	3	COINIT_APARTMENTTHREADED
water	11:26	0:0	4	COINIT_APARTMENTTHREADED
water	11:52	0:0	2	;
if	12:4	18:4	2	(LoadDMO (VLC_OBJECT (p_dec ) ,& hmsdmo_dll ,& p_dmo ,& p_dec -> fmt_in ,false ) != VLC_SUCCESS)
cond	12:8	13:11	3	LoadDMO (VLC_OBJECT (p_dec ) ,& hmsdmo_dll ,& p_dmo ,& p_dec -> fmt_in ,false ) != VLC_SUCCESS
call	12:8	12:79	4	LoadDMO
arg	12:17	12:34	5	VLC_OBJECT(p_dec)
call	12:17	12:33	6	VLC_OBJECT
arg	12:28	12:33	7	p_dec
water	12:28	0:0	8	p_dec
arg	12:36	12:47	5	&hmsdmo_dll
op	12:36	0:0	6	&
water	12:37	0:0	6	hmsdmo_dll
arg	12:49	12:55	5	&p_dmo
op	12:49	0:0	6	&
water	12:50	0:0	6	p_dmo
arg	12:57	12:71	5	&p_dec->fmt_in
op	12:57	0:0	6	&
water	12:58	0:0	6	p_dec
op	12:63	0:0	6	->
water	12:65	0:0	6	fmt_in
arg	12:73	12:79	5	false
water	12:73	0:0	6	false
op	13:8	0:0	4	!=
water	13:11	0:0	4	VLC_SUCCESS
stmts	14:4	18:4	3	
water	14:4	0:0	4	{
water	15:8	0:0	4	hmsdmo_dll
op	15:19	0:0	4	=
water	15:21	0:0	4	0
water	15:22	0:0	4	;
water	16:8	0:0	4	p_dmo
op	16:14	0:0	4	=
water	16:16	0:0	4	0
water	16:17	0:0	4	;
goto	17:8	17:18	4	error
water	17:13	0:0	5	error
water	18:4	0:0	4	}
call	20:4	20:55	2	memset
arg	20:12	20:27	3	&dmo_input_type
op	20:12	0:0	4	&
water	20:13	0:0	4	dmo_input_type
arg	20:29	20:30	3	0
water	20:29	0:0	4	0
arg	20:32	20:55	3	sizeof(dmo_input_type)
op	20:32	0:0	4	sizeof
water	20:38	0:0	4	(
water	20:39	0:0	4	dmo_input_type
water	20:53	0:0	4	)
water	20:56	0:0	2	;
water	21:4	0:0	2	dmo_input_type
op	21:18	0:0	2	.
water	21:19	0:0	2	pUnk
op	21:24	0:0	2	=
water	21:26	0:0	2	0
water	21:27	0:0	2	;
if	22:4	48:4	2	(p_dec -> fmt_in . i_cat == AUDIO_ES)
cond	22:8	22:31	3	p_dec -> fmt_in . i_cat == AUDIO_ES
water	22:8	0:0	4	p_dec
op	22:13	0:0	4	->
water	22:15	0:0	4	fmt_in
op	22:21	0:0	4	.
water	22:22	0:0	4	i_cat
op	22:28	0:0	4	==
water	22:31	0:0	4	AUDIO_ES
stmts	23:4	48:4	3	
water	23:4	0:0	4	{
decl	24:8	24:22	4	uint16_t	i_tag
decl	25:8	25:65	4	int	i_size
op	25:19	0:0	4	=
op	25:21	0:0	4	sizeof
water	25:27	0:0	4	(
water	25:28	0:0	4	WAVEFORMATEX
water	25:40	0:0	4	)
op	25:42	0:0	4	+
water	25:44	0:0	4	p_dec
op	25:49	0:0	4	->
water	25:51	0:0	4	fmt_in
op	25:57	0:0	4	.
water	25:58	0:0	4	i_extra
water	26:8	0:0	4	p_wf
op	26:13	0:0	4	=
call	26:15	26:30	4	malloc
arg	26:23	26:30	5	i_size
water	26:23	0:0	6	i_size
water	26:31	0:0	4	;
call	27:8	27:46	4	memset
arg	27:16	27:20	5	p_wf
water	27:16	0:0	6	p_wf
arg	27:22	27:23	5	0
water	27:22	0:0	6	0
arg	27:25	27:46	5	sizeof(WAVEFORMATEX)
op	27:25	0:0	6	sizeof
water	27:31	0:0	6	(
water	27:32	0:0	6	WAVEFORMATEX
water	27:44	0:0	6	)
water	27:47	0:0	4	;
if	28:8	29:76	4	(p_dec -> fmt_in . i_extra)
cond	28:12	28:26	5	p_dec -> fmt_in . i_extra
water	28:12	0:0	6	p_dec
op	28:17	0:0	6	->
water	28:19	0:0	6	fmt_in
op	28:25	0:0	6	.
water	28:26	0:0	6	i_extra
stmts	29:12	29:76	5	
call	29:12	29:75	6	memcpy
arg	29:20	29:28	7	&p_wf[1]
op	29:20	0:0	8	&
water	29:21	0:0	8	p_wf
op	29:25	0:0	8	[
water	29:26	0:0	8	1
op	29:27	0:0	8	]
arg	29:30	29:51	7	p_dec->fmt_in.p_extra
water	29:30	0:0	8	p_dec
op	29:35	0:0	8	->
water	29:37	0:0	8	fmt_in
op	29:43	0:0	8	.
water	29:44	0:0	8	p_extra
arg	29:53	29:75	7	p_dec->fmt_in.i_extra
water	29:53	0:0	8	p_dec
op	29:58	0:0	8	->
water	29:60	0:0	8	fmt_in
op	29:66	0:0	8	.
water	29:67	0:0	8	i_extra
water	29:76	0:0	6	;
water	30:8	0:0	4	dmo_input_type
op	30:22	0:0	4	.
water	30:23	0:0	4	majortype
op	30:34	0:0	4	=
water	30:36	0:0	4	MEDIATYPE_Audio
water	30:51	0:0	4	;
water	31:8	0:0	4	dmo_input_type
op	31:22	0:0	4	.
water	31:23	0:0	4	subtype
op	31:34	0:0	4	=
water	31:36	0:0	4	dmo_input_type
op	31:50	0:0	4	.
water	31:51	0:0	4	majortype
water	31:60	0:0	4	;
water	32:8	0:0	4	dmo_input_type
op	32:22	0:0	4	.
water	32:23	0:0	4	subtype
op	32:30	0:0	4	.
water	32:31	0:0	4	Data1
op	32:37	0:0	4	=
water	32:39	0:0	4	p_dec
op	32:44	0:0	4	->
water	32:46	0:0	4	fmt_in
op	32:52	0:0	4	.
water	32:53	0:0	4	i_original_fourcc
water	32:71	0:0	4	?
water	32:72	0:0	4	:
water	32:74	0:0	4	p_dec
op	32:79	0:0	4	->
water	32:81	0:0	4	fmt_in
op	32:87	0:0	4	.
water	32:88	0:0	4	i_codec
water	32:95	0:0	4	;
call	33:8	33:56	4	fourcc_to_wf_tag
arg	33:26	33:47	5	p_dec->fmt_in.i_codec
water	33:26	0:0	6	p_dec
op	33:31	0:0	6	->
water	33:33	0:0	6	fmt_in
op	33:39	0:0	6	.
water	33:40	0:0	6	i_codec
arg	33:49	33:56	5	&i_tag
op	33:49	0:0	6	&
water	33:50	0:0	6	i_tag
water	33:57	0:0	4	;
if	34:8	34:56	4	(i_tag)
cond	34:12	34:12	5	i_tag
water	34:12	0:0	6	i_tag
stmts	34:20	34:56	5	
water	34:20	0:0	6	dmo_input_type
op	34:34	0:0	6	.
water	34:35	0:0	6	subtype
op	34:42	0:0	6	.
water	34:43	0:0	6	Data1
op	34:49	0:0	6	=
water	34:51	0:0	6	i_tag
water	34:56	0:0	6	;
water	35:8	0:0	4	p_wf
op	35:12	0:0	4	->
water	35:14	0:0	4	wFormatTag
op	35:25	0:0	4	=
water	35:27	0:0	4	dmo_input_type
op	35:41	0:0	4	.
water	35:42	0:0	4	subtype
op	35:49	0:0	4	.
water	35:50	0:0	4	Data1
water	35:55	0:0	4	;
water	36:8	0:0	4	p_wf
op	36:12	0:0	4	->
water	36:14	0:0	4	nSamplesPerSec
op	36:29	0:0	4	=
water	36:31	0:0	4	p_dec
op	36:36	0:0	4	->
water	36:38	0:0	4	fmt_in
op	36:44	0:0	4	.
water	36:45	0:0	4	audio
op	36:50	0:0	4	.
water	36:51	0:0	4	i_rate
water	36:57	0:0	4	;
water	37:8	0:0	4	p_wf
op	37:12	0:0	4	->
water	37:14	0:0	4	nChannels
op	37:24	0:0	4	=
water	37:26	0:0	4	p_dec
op	37:31	0:0	4	->
water	37:33	0:0	4	fmt_in
op	37:39	0:0	4	.
water	37:40	0:0	4	audio
op	37:45	0:0	4	.
water	37:46	0:0	4	i_channels
water	37:56	0:0	4	;
water	38:8	0:0	4	p_wf
op	38:12	0:0	4	->
water	38:14	0:0	4	wBitsPerSample
op	38:29	0:0	4	=
water	38:31	0:0	4	p_dec
op	38:36	0:0	4	->
water	38:38	0:0	4	fmt_in
op	38:44	0:0	4	.
water	38:45	0:0	4	audio
op	38:50	0:0	4	.
water	38:51	0:0	4	i_bitspersample
water	38:66	0:0	4	;
water	39:8	0:0	4	p_wf
op	39:12	0:0	4	->
water	39:14	0:0	4	nBlockAlign
op	39:26	0:0	4	=
water	39:28	0:0	4	p_dec
op	39:33	0:0	4	->
water	39:35	0:0	4	fmt_in
op	39:41	0:0	4	.
water	39:42	0:0	4	audio
op	39:47	0:0	4	.
water	39:48	0:0	4	i_blockalign
water	39:60	0:0	4	;
water	40:8	0:0	4	p_wf
op	40:12	0:0	4	->
water	40:14	0:0	4	nAvgBytesPerSec
op	40:30	0:0	4	=
water	40:32	0:0	4	p_dec
op	40:37	0:0	4	->
water	40:39	0:0	4	fmt_in
op	40:45	0:0	4	.
water	40:46	0:0	4	i_bitrate
op	40:56	0:0	4	/
water	40:58	0:0	4	8
water	40:59	0:0	4	;
water	41:8	0:0	4	p_wf
op	41:12	0:0	4	->
water	41:14	0:0	4	cbSize
op	41:21	0:0	4	=
water	41:23	0:0	4	p_dec
op	41:28	0:0	4	->
water	41:30	0:0	4	fmt_in
op	41:36	0:0	4	.
water	41:37	0:0	4	i_extra
water	41:44	0:0	4	;
water	42:8	0:0	4	dmo_input_type
op	42:22	0:0	4	.
water	42:23	0:0	4	formattype
op	42:34	0:0	4	=
water	42:36	0:0	4	FORMAT_WaveFormatEx
water	42:55	0:0	4	;
water	43:8	0:0	4	dmo_input_type
op	43:22	0:0	4	.
water	43:23	0:0	4	cbFormat
op	43:34	0:0	4	=
water	43:36	0:0	4	i_size
water	43:42	0:0	4	;
water	44:8	0:0	4	dmo_input_type
op	44:22	0:0	4	.
water	44:23	0:0	4	pbFormat
op	44:34	0:0	4	=
water	44:36	0:0	4	(
water	44:37	0:0	4	char
op	44:42	0:0	4	*
water	44:43	0:0	4	)
water	44:44	0:0	4	p_wf
water	44:48	0:0	4	;
water	45:8	0:0	4	dmo_input_type
op	45:22	0:0	4	.
water	45:23	0:0	4	bFixedSizeSamples
op	45:41	0:0	4	=
water	45:43	0:0	4	1
water	45:44	0:0	4	;
water	46:8	0:0	4	dmo_input_type
op	46:22	0:0	4	.
water	46:23	0:0	4	bTemporalCompression
op	46:44	0:0	4	=
water	46:46	0:0	4	0
water	46:47	0:0	4	;
water	47:8	0:0	4	dmo_input_type
op	47:22	0:0	4	.
water	47:23	0:0	4	lSampleSize
op	47:35	0:0	4	=
water	47:37	0:0	4	p_wf
op	47:41	0:0	4	->
water	47:43	0:0	4	nBlockAlign
water	47:54	0:0	4	;
water	48:4	0:0	4	}
else	49:4	77:4	2
stmts	50:4	77:4	3	
water	50:4	0:0	4	{
decl	51:8	51:35	4	VLC_BITMAPINFOHEADER	*p_bih
decl	52:8	52:68	4	int	i_size
op	52:19	0:0	4	=
op	52:21	0:0	4	sizeof
water	52:27	0:0	4	(
water	52:28	0:0	4	VIDEOINFOHEADER
water	52:43	0:0	4	)
op	52:45	0:0	4	+
water	52:47	0:0	4	p_dec
op	52:52	0:0	4	->
water	52:54	0:0	4	fmt_in
op	52:60	0:0	4	.
water	52:61	0:0	4	i_extra
water	53:8	0:0	4	p_vih
op	53:14	0:0	4	=
call	53:16	53:31	4	malloc
arg	53:24	53:31	5	i_size
water	53:24	0:0	6	i_size
water	53:32	0:0	4	;
call	54:8	54:50	4	memset
arg	54:16	54:21	5	p_vih
water	54:16	0:0	6	p_vih
arg	54:23	54:24	5	0
water	54:23	0:0	6	0
arg	54:26	54:50	5	sizeof(VIDEOINFOHEADER)
op	54:26	0:0	6	sizeof
water	54:32	0:0	6	(
water	54:33	0:0	6	VIDEOINFOHEADER
water	54:48	0:0	6	)
water	54:51	0:0	4	;
if	55:8	56:77	4	(p_dec -> fmt_in . i_extra)
cond	55:12	55:26	5	p_dec -> fmt_in . i_extra
water	55:12	0:0	6	p_dec
op	55:17	0:0	6	->
water	55:19	0:0	6	fmt_in
op	55:25	0:0	6	.
water	55:26	0:0	6	i_extra
stmts	56:12	56:77	5	
call	56:12	56:76	6	memcpy
arg	56:20	56:29	7	&p_vih[1]
op	56:20	0:0	8	&
water	56:21	0:0	8	p_vih
op	56:26	0:0	8	[
water	56:27	0:0	8	1
op	56:28	0:0	8	]
arg	56:31	56:52	7	p_dec->fmt_in.p_extra
water	56:31	0:0	8	p_dec
op	56:36	0:0	8	->
water	56:38	0:0	8	fmt_in
op	56:44	0:0	8	.
water	56:45	0:0	8	p_extra
arg	56:54	56:76	7	p_dec->fmt_in.i_extra
water	56:54	0:0	8	p_dec
op	56:59	0:0	8	->
water	56:61	0:0	8	fmt_in
op	56:67	0:0	8	.
water	56:68	0:0	8	i_extra
water	56:77	0:0	6	;
water	57:8	0:0	4	p_bih
op	57:14	0:0	4	=
op	57:16	0:0	4	&
water	57:17	0:0	4	p_vih
op	57:22	0:0	4	->
water	57:24	0:0	4	bmiHeader
water	57:33	0:0	4	;
water	58:8	0:0	4	p_bih
op	58:13	0:0	4	->
water	58:15	0:0	4	biCompression
op	58:29	0:0	4	=
water	58:31	0:0	4	p_dec
op	58:36	0:0	4	->
water	58:38	0:0	4	fmt_in
op	58:44	0:0	4	.
water	58:45	0:0	4	i_original_fourcc
water	58:63	0:0	4	?
water	58:64	0:0	4	:
water	58:66	0:0	4	p_dec
op	58:71	0:0	4	->
water	58:73	0:0	4	fmt_in
op	58:79	0:0	4	.
water	58:80	0:0	4	i_codec
water	58:87	0:0	4	;
water	59:8	0:0	4	p_bih
op	59:13	0:0	4	->
water	59:15	0:0	4	biWidth
op	59:23	0:0	4	=
water	59:25	0:0	4	p_dec
op	59:30	0:0	4	->
water	59:32	0:0	4	fmt_in
op	59:38	0:0	4	.
water	59:39	0:0	4	video
op	59:44	0:0	4	.
water	59:45	0:0	4	i_width
water	59:52	0:0	4	;
water	60:8	0:0	4	p_bih
op	60:13	0:0	4	->
water	60:15	0:0	4	biHeight
op	60:24	0:0	4	=
water	60:26	0:0	4	p_dec
op	60:31	0:0	4	->
water	60:33	0:0	4	fmt_in
op	60:39	0:0	4	.
water	60:40	0:0	4	video
op	60:45	0:0	4	.
water	60:46	0:0	4	i_height
water	60:54	0:0	4	;
water	61:8	0:0	4	p_bih
op	61:13	0:0	4	->
water	61:15	0:0	4	biBitCount
op	61:26	0:0	4	=
water	61:28	0:0	4	p_dec
op	61:33	0:0	4	->
water	61:35	0:0	4	fmt_in
op	61:41	0:0	4	.
water	61:42	0:0	4	video
op	61:47	0:0	4	.
water	61:48	0:0	4	i_bits_per_pixel
water	61:64	0:0	4	;
water	62:8	0:0	4	p_bih
op	62:13	0:0	4	->
water	62:15	0:0	4	biPlanes
op	62:24	0:0	4	=
water	62:26	0:0	4	1
water	62:27	0:0	4	;
water	63:8	0:0	4	p_bih
op	63:13	0:0	4	->
water	63:15	0:0	4	biSize
op	63:22	0:0	4	=
water	63:24	0:0	4	i_size
op	63:31	0:0	4	-
op	63:33	0:0	4	sizeof
water	63:39	0:0	4	(
water	63:40	0:0	4	VIDEOINFOHEADER
water	63:55	0:0	4	)
op	63:57	0:0	4	+
op	64:12	0:0	4	sizeof
water	64:18	0:0	4	(
water	64:19	0:0	4	VLC_BITMAPINFOHEADER
water	64:39	0:0	4	)
water	64:40	0:0	4	;
water	65:8	0:0	4	p_vih
op	65:13	0:0	4	->
water	65:15	0:0	4	rcSource
op	65:23	0:0	4	.
water	65:24	0:0	4	left
op	65:29	0:0	4	=
water	65:31	0:0	4	p_vih
op	65:36	0:0	4	->
water	65:38	0:0	4	rcSource
op	65:46	0:0	4	.
water	65:47	0:0	4	top
op	65:51	0:0	4	=
water	65:53	0:0	4	0
water	65:54	0:0	4	;
water	66:8	0:0	4	p_vih
op	66:13	0:0	4	->
water	66:15	0:0	4	rcSource
op	66:23	0:0	4	.
water	66:24	0:0	4	right
op	66:30	0:0	4	=
water	66:32	0:0	4	p_dec
op	66:37	0:0	4	->
water	66:39	0:0	4	fmt_in
op	66:45	0:0	4	.
water	66:46	0:0	4	video
op	66:51	0:0	4	.
water	66:52	0:0	4	i_width
water	66:59	0:0	4	;
water	67:8	0:0	4	p_vih
op	67:13	0:0	4	->
water	67:15	0:0	4	rcSource
op	67:23	0:0	4	.
water	67:24	0:0	4	bottom
op	67:31	0:0	4	=
water	67:33	0:0	4	p_dec
op	67:38	0:0	4	->
water	67:40	0:0	4	fmt_in
op	67:46	0:0	4	.
water	67:47	0:0	4	video
op	67:52	0:0	4	.
water	67:53	0:0	4	i_height
water	67:61	0:0	4	;
water	68:8	0:0	4	p_vih
op	68:13	0:0	4	->
water	68:15	0:0	4	rcTarget
op	68:24	0:0	4	=
water	68:26	0:0	4	p_vih
op	68:31	0:0	4	->
water	68:33	0:0	4	rcSource
water	68:41	0:0	4	;
water	69:8	0:0	4	dmo_input_type
op	69:22	0:0	4	.
water	69:23	0:0	4	majortype
op	69:34	0:0	4	=
water	69:36	0:0	4	MEDIATYPE_Video
water	69:51	0:0	4	;
water	70:8	0:0	4	dmo_input_type
op	70:22	0:0	4	.
water	70:23	0:0	4	subtype
op	70:34	0:0	4	=
water	70:36	0:0	4	dmo_input_type
op	70:50	0:0	4	.
water	70:51	0:0	4	majortype
water	70:60	0:0	4	;
water	71:8	0:0	4	dmo_input_type
op	71:22	0:0	4	.
water	71:23	0:0	4	subtype
op	71:30	0:0	4	.
water	71:31	0:0	4	Data1
op	71:37	0:0	4	=
water	71:39	0:0	4	p_dec
op	71:44	0:0	4	->
water	71:46	0:0	4	fmt_in
op	71:52	0:0	4	.
water	71:53	0:0	4	i_original_fourcc
water	71:71	0:0	4	?
water	71:72	0:0	4	:
water	71:74	0:0	4	p_dec
op	71:79	0:0	4	->
water	71:81	0:0	4	fmt_in
op	71:87	0:0	4	.
water	71:88	0:0	4	i_codec
water	71:95	0:0	4	;
water	72:8	0:0	4	dmo_input_type
op	72:22	0:0	4	.
water	72:23	0:0	4	formattype
op	72:34	0:0	4	=
water	72:36	0:0	4	FORMAT_VideoInfo
water	72:52	0:0	4	;
water	73:8	0:0	4	dmo_input_type
op	73:22	0:0	4	.
water	73:23	0:0	4	bFixedSizeSamples
op	73:41	0:0	4	=
water	73:43	0:0	4	0
water	73:44	0:0	4	;
water	74:8	0:0	4	dmo_input_type
op	74:22	0:0	4	.
water	74:23	0:0	4	bTemporalCompression
op	74:44	0:0	4	=
water	74:46	0:0	4	1
water	74:47	0:0	4	;
water	75:8	0:0	4	dmo_input_type
op	75:22	0:0	4	.
water	75:23	0:0	4	cbFormat
op	75:32	0:0	4	=
water	75:34	0:0	4	i_size
water	75:40	0:0	4	;
water	76:8	0:0	4	dmo_input_type
op	76:22	0:0	4	.
water	76:23	0:0	4	pbFormat
op	76:32	0:0	4	=
water	76:34	0:0	4	(
water	76:35	0:0	4	char
op	76:40	0:0	4	*
water	76:41	0:0	4	)
water	76:42	0:0	4	p_vih
water	76:47	0:0	4	;
water	77:4	0:0	4	}
if	78:4	82:4	2	(p_dmo -> vt -> SetInputType (p_dmo ,0 ,& dmo_input_type ,0 ))
cond	78:8	78:62	3	p_dmo -> vt -> SetInputType (p_dmo ,0 ,& dmo_input_type ,0 )
call	78:8	78:62	4	p_dmo->vt->SetInputType
arg	78:33	78:38	5	p_dmo
water	78:33	0:0	6	p_dmo
arg	78:40	78:41	5	0
water	78:40	0:0	6	0
arg	78:43	78:58	5	&dmo_input_type
op	78:43	0:0	6	&
water	78:44	0:0	6	dmo_input_type
arg	78:60	78:62	5	0
water	78:60	0:0	6	0
stmts	79:4	82:4	3	
water	79:4	0:0	4	{
call	80:8	80:51	4	msg_Err
arg	80:17	80:22	5	p_dec
water	80:17	0:0	6	p_dec
arg	80:24	80:51	5	"can't set DMO input type"
water	80:24	0:0	6	"can't set DMO input type"
water	80:52	0:0	4	;
goto	81:8	81:18	4	error
water	81:13	0:0	5	error
water	82:4	0:0	4	}
call	83:4	83:41	2	msg_Dbg
arg	83:13	83:18	3	p_dec
water	83:13	0:0	4	p_dec
arg	83:20	83:41	3	"DMO input type set"
water	83:20	0:0	4	"DMO input type set"
water	83:42	0:0	2	;
call	85:4	85:57	2	memset
arg	85:12	85:28	3	&dmo_output_type
op	85:12	0:0	4	&
water	85:13	0:0	4	dmo_output_type
arg	85:30	85:31	3	0
water	85:30	0:0	4	0
arg	85:33	85:57	3	sizeof(dmo_output_type)
op	85:33	0:0	4	sizeof
water	85:39	0:0	4	(
water	85:40	0:0	4	dmo_output_type
water	85:55	0:0	4	)
water	85:58	0:0	2	;
water	86:4	0:0	2	dmo_output_type
op	86:19	0:0	2	.
water	86:20	0:0	2	pUnk
op	86:25	0:0	2	=
water	86:27	0:0	2	0
water	86:28	0:0	2	;
if	87:4	114:4	2	(p_dec -> fmt_in . i_cat == AUDIO_ES)
cond	87:8	87:31	3	p_dec -> fmt_in . i_cat == AUDIO_ES
water	87:8	0:0	4	p_dec
op	87:13	0:0	4	->
water	87:15	0:0	4	fmt_in
op	87:21	0:0	4	.
water	87:22	0:0	4	i_cat
op	87:28	0:0	4	==
water	87:31	0:0	4	AUDIO_ES
stmts	88:4	114:4	3	
water	88:4	0:0	4	{
water	90:8	0:0	4	p_dec
op	90:13	0:0	4	->
water	90:15	0:0	4	fmt_out
op	90:22	0:0	4	.
water	90:23	0:0	4	i_codec
op	90:31	0:0	4	=
water	90:33	0:0	4	VLC_CODEC_S16N
water	90:47	0:0	4	;
water	91:8	0:0	4	p_dec
op	91:13	0:0	4	->
water	91:15	0:0	4	fmt_out
op	91:22	0:0	4	.
water	91:23	0:0	4	audio
op	91:28	0:0	4	.
water	91:29	0:0	4	i_rate
op	91:40	0:0	4	=
water	91:42	0:0	4	p_dec
op	91:47	0:0	4	->
water	91:49	0:0	4	fmt_in
op	91:55	0:0	4	.
water	91:56	0:0	4	audio
op	91:61	0:0	4	.
water	91:62	0:0	4	i_rate
water	91:68	0:0	4	;
water	92:8	0:0	4	p_dec
op	92:13	0:0	4	->
water	92:15	0:0	4	fmt_out
op	92:22	0:0	4	.
water	92:23	0:0	4	audio
op	92:28	0:0	4	.
water	92:29	0:0	4	i_channels
op	92:40	0:0	4	=
water	92:42	0:0	4	p_dec
op	92:47	0:0	4	->
water	92:49	0:0	4	fmt_in
op	92:55	0:0	4	.
water	92:56	0:0	4	audio
op	92:61	0:0	4	.
water	92:62	0:0	4	i_channels
water	92:72	0:0	4	;
water	93:8	0:0	4	p_dec
op	93:13	0:0	4	->
water	93:15	0:0	4	fmt_out
op	93:22	0:0	4	.
water	93:23	0:0	4	audio
op	93:28	0:0	4	.
water	93:29	0:0	4	i_bitspersample
op	93:45	0:0	4	=
water	93:47	0:0	4	16
water	93:49	0:0	4	;
water	94:8	0:0	4	p_dec
op	94:13	0:0	4	->
water	94:15	0:0	4	fmt_out
op	94:22	0:0	4	.
water	94:23	0:0	4	audio
op	94:28	0:0	4	.
water	94:29	0:0	4	i_physical_channels
op	94:49	0:0	4	=
water	95:12	0:0	4	p_dec
op	95:17	0:0	4	->
water	95:19	0:0	4	fmt_out
op	95:26	0:0	4	.
water	95:27	0:0	4	audio
op	95:32	0:0	4	.
water	95:33	0:0	4	i_original_channels
op	95:53	0:0	4	=
water	96:16	0:0	4	pi_channels_maps
op	96:32	0:0	4	[
water	96:33	0:0	4	p_dec
op	96:38	0:0	4	->
water	96:40	0:0	4	fmt_out
op	96:47	0:0	4	.
water	96:48	0:0	4	audio
op	96:53	0:0	4	.
water	96:54	0:0	4	i_channels
op	96:64	0:0	4	]
water	96:65	0:0	4	;
water	97:8	0:0	4	p_wf
op	97:12	0:0	4	->
water	97:14	0:0	4	wFormatTag
op	97:25	0:0	4	=
water	97:27	0:0	4	WAVE_FORMAT_PCM
water	97:42	0:0	4	;
water	98:8	0:0	4	p_wf
op	98:12	0:0	4	->
water	98:14	0:0	4	nSamplesPerSec
op	98:29	0:0	4	=
water	98:31	0:0	4	p_dec
op	98:36	0:0	4	->
water	98:38	0:0	4	fmt_out
op	98:45	0:0	4	.
water	98:46	0:0	4	audio
op	98:51	0:0	4	.
water	98:52	0:0	4	i_rate
water	98:58	0:0	4	;
water	99:8	0:0	4	p_wf
op	99:12	0:0	4	->
water	99:14	0:0	4	nChannels
op	99:24	0:0	4	=
water	99:26	0:0	4	p_dec
op	99:31	0:0	4	->
water	99:33	0:0	4	fmt_out
op	99:40	0:0	4	.
water	99:41	0:0	4	audio
op	99:46	0:0	4	.
water	99:47	0:0	4	i_channels
water	99:57	0:0	4	;
water	100:8	0:0	4	p_wf
op	100:12	0:0	4	->
water	100:14	0:0	4	wBitsPerSample
op	100:29	0:0	4	=
water	100:31	0:0	4	p_dec
op	100:36	0:0	4	->
water	100:38	0:0	4	fmt_out
op	100:45	0:0	4	.
water	100:46	0:0	4	audio
op	100:51	0:0	4	.
water	100:52	0:0	4	i_bitspersample
water	100:67	0:0	4	;
water	101:8	0:0	4	p_wf
op	101:12	0:0	4	->
water	101:14	0:0	4	nBlockAlign
op	101:26	0:0	4	=
water	102:12	0:0	4	p_wf
op	102:16	0:0	4	->
water	102:18	0:0	4	wBitsPerSample
op	102:33	0:0	4	/
water	102:35	0:0	4	8
op	102:37	0:0	4	*
water	102:39	0:0	4	p_wf
op	102:43	0:0	4	->
water	102:45	0:0	4	nChannels
water	102:54	0:0	4	;
water	103:8	0:0	4	p_wf
op	103:12	0:0	4	->
water	103:14	0:0	4	nAvgBytesPerSec
op	103:30	0:0	4	=
water	104:12	0:0	4	p_wf
op	104:16	0:0	4	->
water	104:18	0:0	4	nSamplesPerSec
op	104:33	0:0	4	*
water	104:35	0:0	4	p_wf
op	104:39	0:0	4	->
water	104:41	0:0	4	nBlockAlign
water	104:52	0:0	4	;
water	105:8	0:0	4	p_wf
op	105:12	0:0	4	->
water	105:14	0:0	4	cbSize
op	105:21	0:0	4	=
water	105:23	0:0	4	0
water	105:24	0:0	4	;
water	106:8	0:0	4	dmo_output_type
op	106:23	0:0	4	.
water	106:24	0:0	4	majortype
op	106:35	0:0	4	=
water	106:37	0:0	4	MEDIATYPE_Audio
water	106:52	0:0	4	;
water	107:8	0:0	4	dmo_output_type
op	107:23	0:0	4	.
water	107:24	0:0	4	formattype
op	107:35	0:0	4	=
water	107:37	0:0	4	FORMAT_WaveFormatEx
water	107:56	0:0	4	;
water	108:8	0:0	4	dmo_output_type
op	108:23	0:0	4	.
water	108:24	0:0	4	subtype
op	108:35	0:0	4	=
water	108:37	0:0	4	MEDIASUBTYPE_PCM
water	108:53	0:0	4	;
water	109:8	0:0	4	dmo_output_type
op	109:23	0:0	4	.
water	109:24	0:0	4	cbFormat
op	109:35	0:0	4	=
op	109:37	0:0	4	sizeof
water	109:43	0:0	4	(
water	109:44	0:0	4	WAVEFORMATEX
water	109:56	0:0	4	)
water	109:57	0:0	4	;
water	110:8	0:0	4	dmo_output_type
op	110:23	0:0	4	.
water	110:24	0:0	4	pbFormat
op	110:35	0:0	4	=
water	110:37	0:0	4	(
water	110:38	0:0	4	char
op	110:43	0:0	4	*
water	110:44	0:0	4	)
water	110:45	0:0	4	p_wf
water	110:49	0:0	4	;
water	111:8	0:0	4	dmo_output_type
op	111:23	0:0	4	.
water	111:24	0:0	4	bFixedSizeSamples
op	111:42	0:0	4	=
water	111:44	0:0	4	1
water	111:45	0:0	4	;
water	112:8	0:0	4	dmo_output_type
op	112:23	0:0	4	.
water	112:24	0:0	4	bTemporalCompression
op	112:45	0:0	4	=
water	112:47	0:0	4	0
water	112:48	0:0	4	;
water	113:8	0:0	4	dmo_output_type
op	113:23	0:0	4	.
water	113:24	0:0	4	lSampleSize
op	113:36	0:0	4	=
water	113:38	0:0	4	p_wf
op	113:42	0:0	4	->
water	113:44	0:0	4	nBlockAlign
water	113:55	0:0	4	;
water	114:4	0:0	4	}
else	115:4	182:4	2
stmts	116:4	182:4	3	
water	116:4	0:0	4	{
decl	117:8	117:35	4	VLC_BITMAPINFOHEADER	*p_bih
decl	118:8	118:25	4	DMO_MEDIA_TYPE	mt
water	119:8	0:0	4	unsigned
water	119:17	0:0	4	i_chroma
op	119:26	0:0	4	=
water	119:28	0:0	4	VLC_CODEC_YUYV
water	119:42	0:0	4	;
decl	120:8	120:22	4	int	i_bpp
op	120:18	0:0	4	=
water	120:20	0:0	4	16
decl	121:8	121:17	4	int	i
op	121:14	0:0	4	=
water	121:16	0:0	4	0
while	123:8	140:8	4	(!p_dmo -> vt -> GetOutputType (p_dmo ,0 ,i ++ ,& mt ))
cond	123:15	123:61	5	!p_dmo -> vt -> GetOutputType (p_dmo ,0 ,i ++ ,& mt )
op	123:15	0:0	6	!
call	123:16	123:61	6	p_dmo->vt->GetOutputType
arg	123:42	123:47	7	p_dmo
water	123:42	0:0	8	p_dmo
arg	123:49	123:50	7	0
water	123:49	0:0	8	0
arg	123:52	123:55	7	i++
water	123:52	0:0	8	i
op	123:53	0:0	8	++
arg	123:57	123:61	7	&mt
op	123:57	0:0	8	&
water	123:58	0:0	8	mt
stmts	124:8	140:8	5	
water	124:8	0:0	6	{
if	125:12	131:12	6	(mt . subtype . Data1 == VLC_CODEC_YV12)
cond	125:16	125:36	7	mt . subtype . Data1 == VLC_CODEC_YV12
water	125:16	0:0	8	mt
op	125:18	0:0	8	.
water	125:19	0:0	8	subtype
op	125:26	0:0	8	.
water	125:27	0:0	8	Data1
op	125:33	0:0	8	==
water	125:36	0:0	8	VLC_CODEC_YV12
stmts	126:12	131:12	7	
water	126:12	0:0	8	{
water	127:16	0:0	8	i_chroma
op	127:25	0:0	8	=
water	127:27	0:0	8	mt
op	127:29	0:0	8	.
water	127:30	0:0	8	subtype
op	127:37	0:0	8	.
water	127:38	0:0	8	Data1
water	127:43	0:0	8	;
water	128:16	0:0	8	i_bpp
op	128:22	0:0	8	=
water	128:24	0:0	8	12
water	128:26	0:0	8	;
call	129:16	129:38	8	DMOFreeMediaType
arg	129:34	129:38	9	&mt
op	129:34	0:0	10	&
water	129:35	0:0	10	mt
water	129:39	0:0	8	;
break	130:16	130:21	8	
water	131:12	0:0	8	}
else	132:12	138:12	6
stmts	132:17	138:12	7	
if	132:17	138:12	8	(( p_dec -> fmt_in . i_codec == VLC_CODEC_MSS1 || p_dec -> fmt_in . i_codec == VLC_CODEC_MSS2 ) &&guidcmp (& mt . subtype ,& MEDIASUBTYPE_RGB24 ))
cond	132:21	134:64	9	( p_dec -> fmt_in . i_codec == VLC_CODEC_MSS1 || p_dec -> fmt_in . i_codec == VLC_CODEC_MSS2 ) &&guidcmp (& mt . subtype ,& MEDIASUBTYPE_RGB24 )
water	132:21	0:0	10	(
water	132:22	0:0	10	p_dec
op	132:27	0:0	10	->
water	132:29	0:0	10	fmt_in
op	132:35	0:0	10	.
water	132:36	0:0	10	i_codec
op	132:44	0:0	10	==
water	132:47	0:0	10	VLC_CODEC_MSS1
op	132:62	0:0	10	||
water	133:22	0:0	10	p_dec
op	133:27	0:0	10	->
water	133:29	0:0	10	fmt_in
op	133:35	0:0	10	.
water	133:36	0:0	10	i_codec
op	133:44	0:0	10	==
water	133:47	0:0	10	VLC_CODEC_MSS2
water	133:62	0:0	10	)
op	133:64	0:0	10	&&
call	134:22	134:64	10	guidcmp
arg	134:31	134:42	11	&mt.subtype
op	134:31	0:0	12	&
water	134:32	0:0	12	mt
op	134:34	0:0	12	.
water	134:35	0:0	12	subtype
arg	134:44	134:64	11	&MEDIASUBTYPE_RGB24
op	134:44	0:0	12	&
water	134:45	0:0	12	MEDIASUBTYPE_RGB24
stmts	135:12	138:12	9	
water	135:12	0:0	10	{
water	136:16	0:0	10	i_chroma
op	136:25	0:0	10	=
water	136:27	0:0	10	VLC_CODEC_RGB24
water	136:42	0:0	10	;
water	137:16	0:0	10	i_bpp
op	137:22	0:0	10	=
water	137:24	0:0	10	24
water	137:26	0:0	10	;
water	138:12	0:0	10	}
call	139:12	139:34	6	DMOFreeMediaType
arg	139:30	139:34	7	&mt
op	139:30	0:0	8	&
water	139:31	0:0	8	mt
water	139:35	0:0	6	;
water	140:8	0:0	6	}
water	141:8	0:0	4	p_dec
op	141:13	0:0	4	->
water	141:15	0:0	4	fmt_out
op	141:22	0:0	4	.
water	141:23	0:0	4	i_codec
op	141:31	0:0	4	=
water	141:33	0:0	4	i_chroma
op	141:42	0:0	4	==
water	141:45	0:0	4	VLC_CODEC_YV12
water	141:60	0:0	4	?
water	141:62	0:0	4	VLC_CODEC_I420
water	141:77	0:0	4	:
water	141:79	0:0	4	i_chroma
water	141:87	0:0	4	;
water	142:8	0:0	4	p_dec
op	142:13	0:0	4	->
water	142:15	0:0	4	fmt_out
op	142:22	0:0	4	.
water	142:23	0:0	4	video
op	142:28	0:0	4	.
water	142:29	0:0	4	i_width
op	142:37	0:0	4	=
water	142:39	0:0	4	p_dec
op	142:44	0:0	4	->
water	142:46	0:0	4	fmt_in
op	142:52	0:0	4	.
water	142:53	0:0	4	video
op	142:58	0:0	4	.
water	142:59	0:0	4	i_width
water	142:66	0:0	4	;
water	143:8	0:0	4	p_dec
op	143:13	0:0	4	->
water	143:15	0:0	4	fmt_out
op	143:22	0:0	4	.
water	143:23	0:0	4	video
op	143:28	0:0	4	.
water	143:29	0:0	4	i_height
op	143:38	0:0	4	=
water	143:40	0:0	4	p_dec
op	143:45	0:0	4	->
water	143:47	0:0	4	fmt_in
op	143:53	0:0	4	.
water	143:54	0:0	4	video
op	143:59	0:0	4	.
water	143:60	0:0	4	i_height
water	143:68	0:0	4	;
water	144:8	0:0	4	p_dec
op	144:13	0:0	4	->
water	144:15	0:0	4	fmt_out
op	144:22	0:0	4	.
water	144:23	0:0	4	video
op	144:28	0:0	4	.
water	144:29	0:0	4	i_bits_per_pixel
op	144:46	0:0	4	=
water	144:48	0:0	4	i_bpp
water	144:53	0:0	4	;
if	146:8	151:8	4	(p_dec -> fmt_in . video . i_sar_num > 0 && p_dec -> fmt_in . video . i_sar_den > 0)
cond	146:12	147:44	5	p_dec -> fmt_in . video . i_sar_num > 0 && p_dec -> fmt_in . video . i_sar_den > 0
water	146:12	0:0	6	p_dec
op	146:17	0:0	6	->
water	146:19	0:0	6	fmt_in
op	146:25	0:0	6	.
water	146:26	0:0	6	video
op	146:31	0:0	6	.
water	146:32	0:0	6	i_sar_num
op	146:42	0:0	6	>
water	146:44	0:0	6	0
op	146:46	0:0	6	&&
water	147:12	0:0	6	p_dec
op	147:17	0:0	6	->
water	147:19	0:0	6	fmt_in
op	147:25	0:0	6	.
water	147:26	0:0	6	video
op	147:31	0:0	6	.
water	147:32	0:0	6	i_sar_den
op	147:42	0:0	6	>
water	147:44	0:0	6	0
stmts	148:8	151:8	5	
water	148:8	0:0	6	{
water	149:12	0:0	6	p_dec
op	149:17	0:0	6	->
water	149:19	0:0	6	fmt_out
op	149:26	0:0	6	.
water	149:27	0:0	6	video
op	149:32	0:0	6	.
water	149:33	0:0	6	i_sar_num
op	149:43	0:0	6	=
water	149:45	0:0	6	p_dec
op	149:50	0:0	6	->
water	149:52	0:0	6	fmt_in
op	149:58	0:0	6	.
water	149:59	0:0	6	video
op	149:64	0:0	6	.
water	149:65	0:0	6	i_sar_num
water	149:74	0:0	6	;
water	150:12	0:0	6	p_dec
op	150:17	0:0	6	->
water	150:19	0:0	6	fmt_out
op	150:26	0:0	6	.
water	150:27	0:0	6	video
op	150:32	0:0	6	.
water	150:33	0:0	6	i_sar_den
op	150:43	0:0	6	=
water	150:45	0:0	6	p_dec
op	150:50	0:0	6	->
water	150:52	0:0	6	fmt_in
op	150:58	0:0	6	.
water	150:59	0:0	6	video
op	150:64	0:0	6	.
water	150:65	0:0	6	i_sar_den
water	150:74	0:0	6	;
water	151:8	0:0	6	}
else	152:8	156:8	4
stmts	153:8	156:8	5	
water	153:8	0:0	6	{
water	154:12	0:0	6	p_dec
op	154:17	0:0	6	->
water	154:19	0:0	6	fmt_out
op	154:26	0:0	6	.
water	154:27	0:0	6	video
op	154:32	0:0	6	.
water	154:33	0:0	6	i_sar_num
op	154:43	0:0	6	=
water	154:45	0:0	6	1
water	154:46	0:0	6	;
water	155:12	0:0	6	p_dec
op	155:17	0:0	6	->
water	155:19	0:0	6	fmt_out
op	155:26	0:0	6	.
water	155:27	0:0	6	video
op	155:32	0:0	6	.
water	155:33	0:0	6	i_sar_den
op	155:43	0:0	6	=
water	155:45	0:0	6	1
water	155:46	0:0	6	;
water	156:8	0:0	6	}
water	157:8	0:0	4	p_bih
op	157:14	0:0	4	=
op	157:16	0:0	4	&
water	157:17	0:0	4	p_vih
op	157:22	0:0	4	->
water	157:24	0:0	4	bmiHeader
water	157:33	0:0	4	;
water	158:8	0:0	4	p_bih
op	158:13	0:0	4	->
water	158:15	0:0	4	biCompression
op	158:29	0:0	4	=
water	158:31	0:0	4	i_chroma
op	158:40	0:0	4	==
water	158:43	0:0	4	VLC_CODEC_RGB24
water	158:59	0:0	4	?
water	158:61	0:0	4	BI_RGB
water	158:68	0:0	4	:
water	158:70	0:0	4	i_chroma
water	158:78	0:0	4	;
water	159:8	0:0	4	p_bih
op	159:13	0:0	4	->
water	159:15	0:0	4	biHeight
op	159:24	0:0	4	*=
op	159:27	0:0	4	-
water	159:28	0:0	4	1
water	159:29	0:0	4	;
water	160:8	0:0	4	p_bih
op	160:13	0:0	4	->
water	160:15	0:0	4	biBitCount
op	160:26	0:0	4	=
water	160:28	0:0	4	p_dec
op	160:33	0:0	4	->
water	160:35	0:0	4	fmt_out
op	160:42	0:0	4	.
water	160:43	0:0	4	video
op	160:48	0:0	4	.
water	160:49	0:0	4	i_bits_per_pixel
water	160:65	0:0	4	;
water	161:8	0:0	4	p_bih
op	161:13	0:0	4	->
water	161:15	0:0	4	biSizeImage
op	161:27	0:0	4	=
water	161:29	0:0	4	p_dec
op	161:34	0:0	4	->
water	161:36	0:0	4	fmt_in
op	161:42	0:0	4	.
water	161:43	0:0	4	video
op	161:48	0:0	4	.
water	161:49	0:0	4	i_width
op	161:57	0:0	4	*
water	162:12	0:0	4	p_dec
op	162:17	0:0	4	->
water	162:19	0:0	4	fmt_in
op	162:25	0:0	4	.
water	162:26	0:0	4	video
op	162:31	0:0	4	.
water	162:32	0:0	4	i_height
op	162:41	0:0	4	*
water	163:12	0:0	4	(
water	163:13	0:0	4	p_dec
op	163:18	0:0	4	->
water	163:20	0:0	4	fmt_in
op	163:26	0:0	4	.
water	163:27	0:0	4	video
op	163:32	0:0	4	.
water	163:33	0:0	4	i_bits_per_pixel
op	163:50	0:0	4	+
water	163:52	0:0	4	7
water	163:53	0:0	4	)
op	163:55	0:0	4	/
water	163:57	0:0	4	8
water	163:58	0:0	4	;
water	164:8	0:0	4	p_bih
op	164:13	0:0	4	->
water	164:15	0:0	4	biPlanes
op	164:24	0:0	4	=
water	164:26	0:0	4	1
water	164:27	0:0	4	;
water	165:8	0:0	4	p_bih
op	165:13	0:0	4	->
water	165:15	0:0	4	biSize
op	165:22	0:0	4	=
op	165:24	0:0	4	sizeof
water	165:30	0:0	4	(
water	165:31	0:0	4	VLC_BITMAPINFOHEADER
water	165:51	0:0	4	)
water	165:52	0:0	4	;
water	166:8	0:0	4	dmo_output_type
op	166:23	0:0	4	.
water	166:24	0:0	4	majortype
op	166:34	0:0	4	=
water	166:36	0:0	4	MEDIATYPE_Video
water	166:51	0:0	4	;
water	167:8	0:0	4	dmo_output_type
op	167:23	0:0	4	.
water	167:24	0:0	4	formattype
op	167:35	0:0	4	=
water	167:37	0:0	4	FORMAT_VideoInfo
water	167:53	0:0	4	;
if	168:8	171:8	4	(i_chroma == VLC_CODEC_RGB24)
cond	168:12	168:24	5	i_chroma == VLC_CODEC_RGB24
water	168:12	0:0	6	i_chroma
op	168:21	0:0	6	==
water	168:24	0:0	6	VLC_CODEC_RGB24
stmts	169:8	171:8	5	
water	169:8	0:0	6	{
water	170:12	0:0	6	dmo_output_type
op	170:27	0:0	6	.
water	170:28	0:0	6	subtype
op	170:36	0:0	6	=
water	170:38	0:0	6	MEDIASUBTYPE_RGB24
water	170:56	0:0	6	;
water	171:8	0:0	6	}
else	172:8	176:8	4
stmts	173:8	176:8	5	
water	173:8	0:0	6	{
water	174:12	0:0	6	dmo_output_type
op	174:27	0:0	6	.
water	174:28	0:0	6	subtype
op	174:36	0:0	6	=
water	174:38	0:0	6	dmo_output_type
op	174:53	0:0	6	.
water	174:54	0:0	6	majortype
water	174:63	0:0	6	;
water	175:12	0:0	6	dmo_output_type
op	175:27	0:0	6	.
water	175:28	0:0	6	subtype
op	175:35	0:0	6	.
water	175:36	0:0	6	Data1
op	175:42	0:0	6	=
water	175:44	0:0	6	p_bih
op	175:49	0:0	6	->
water	175:51	0:0	6	biCompression
water	175:64	0:0	6	;
water	176:8	0:0	6	}
water	177:8	0:0	4	dmo_output_type
op	177:23	0:0	4	.
water	177:24	0:0	4	bFixedSizeSamples
op	177:42	0:0	4	=
water	177:44	0:0	4	true
water	177:48	0:0	4	;
water	178:8	0:0	4	dmo_output_type
op	178:23	0:0	4	.
water	178:24	0:0	4	bTemporalCompression
op	178:45	0:0	4	=
water	178:47	0:0	4	0
water	178:48	0:0	4	;
water	179:8	0:0	4	dmo_output_type
op	179:23	0:0	4	.
water	179:24	0:0	4	lSampleSize
op	179:36	0:0	4	=
water	179:38	0:0	4	p_bih
op	179:43	0:0	4	->
water	179:45	0:0	4	biSizeImage
water	179:56	0:0	4	;
water	180:8	0:0	4	dmo_output_type
op	180:23	0:0	4	.
water	180:24	0:0	4	cbFormat
op	180:33	0:0	4	=
op	180:35	0:0	4	sizeof
water	180:41	0:0	4	(
water	180:42	0:0	4	VIDEOINFOHEADER
water	180:57	0:0	4	)
water	180:58	0:0	4	;
water	181:8	0:0	4	dmo_output_type
op	181:23	0:0	4	.
water	181:24	0:0	4	pbFormat
op	181:33	0:0	4	=
water	181:35	0:0	4	(
water	181:36	0:0	4	char
op	181:41	0:0	4	*
water	181:42	0:0	4	)
water	181:43	0:0	4	p_vih
water	181:48	0:0	4	;
water	182:4	0:0	4	}
if	185:4	194:4	2	(p_dec -> fmt_in . i_cat == VIDEO_ES)
cond	185:8	185:31	3	p_dec -> fmt_in . i_cat == VIDEO_ES
water	185:8	0:0	4	p_dec
op	185:13	0:0	4	->
water	185:15	0:0	4	fmt_in
op	185:21	0:0	4	.
water	185:22	0:0	4	i_cat
op	185:28	0:0	4	==
water	185:31	0:0	4	VIDEO_ES
stmts	186:4	194:4	3	
water	186:4	0:0	4	{
decl	187:8	187:17	4	int	i
op	187:14	0:0	4	=
water	187:16	0:0	4	0
decl	188:8	188:25	4	DMO_MEDIA_TYPE	mt
while	189:8	193:8	4	(!p_dmo -> vt -> GetOutputType (p_dmo ,0 ,i ++ ,& mt ))
cond	189:15	189:61	5	!p_dmo -> vt -> GetOutputType (p_dmo ,0 ,i ++ ,& mt )
op	189:15	0:0	6	!
call	189:16	189:61	6	p_dmo->vt->GetOutputType
arg	189:42	189:47	7	p_dmo
water	189:42	0:0	8	p_dmo
arg	189:49	189:50	7	0
water	189:49	0:0	8	0
arg	189:52	189:55	7	i++
water	189:52	0:0	8	i
op	189:53	0:0	8	++
arg	189:57	189:61	7	&mt
op	189:57	0:0	8	&
water	189:58	0:0	8	mt
stmts	190:8	193:8	5	
water	190:8	0:0	6	{
call	191:12	191:88	6	msg_Dbg
arg	191:21	191:26	7	p_dec
water	191:21	0:0	8	p_dec
arg	191:28	191:60	7	"available output chroma: %4.4s"
water	191:28	0:0	8	"available output chroma: %4.4s"
arg	191:62	191:88	7	(char*)&mt.subtype.Data1
water	191:62	0:0	8	(
water	191:63	0:0	8	char
op	191:68	0:0	8	*
water	191:69	0:0	8	)
op	191:70	0:0	8	&
water	191:71	0:0	8	mt
op	191:73	0:0	8	.
water	191:74	0:0	8	subtype
op	191:81	0:0	8	.
water	191:82	0:0	8	Data1
water	191:89	0:0	6	;
call	192:12	192:34	6	DMOFreeMediaType
arg	192:30	192:34	7	&mt
op	192:30	0:0	8	&
water	192:31	0:0	8	mt
water	192:35	0:0	6	;
water	193:8	0:0	6	}
water	194:4	0:0	4	}
water	196:4	0:0	2	unsigned
water	196:13	0:0	2	i_err
op	196:19	0:0	2	=
call	196:21	196:77	2	p_dmo->vt->SetOutputType
arg	196:47	196:52	3	p_dmo
water	196:47	0:0	4	p_dmo
arg	196:54	196:55	3	0
water	196:54	0:0	4	0
arg	196:57	196:73	3	&dmo_output_type
op	196:57	0:0	4	&
water	196:58	0:0	4	dmo_output_type
arg	196:75	196:77	3	0
water	196:75	0:0	4	0
water	196:78	0:0	2	;
if	197:4	201:4	2	(i_err)
cond	197:8	197:8	3	i_err
water	197:8	0:0	4	i_err
stmts	198:4	201:4	3	
water	198:4	0:0	4	{
call	199:8	199:77	4	msg_Err
arg	199:17	199:22	5	p_dec
water	199:17	0:0	6	p_dec
arg	199:24	199:69	5	"can't set DMO output type for decoder: 0x%x"
water	199:24	0:0	6	"can't set DMO output type for decoder: 0x%x"
arg	199:71	199:77	5	i_err
water	199:71	0:0	6	i_err
water	199:78	0:0	4	;
goto	200:8	200:18	4	error
water	200:13	0:0	5	error
water	201:4	0:0	4	}
call	202:4	202:54	2	msg_Dbg
arg	202:13	202:18	3	p_dec
water	202:13	0:0	4	p_dec
arg	202:20	202:54	3	"DMO output type set for decoder"
water	202:20	0:0	4	"DMO output type set for decoder"
water	202:55	0:0	2	;
water	204:4	0:0	2	p_sys
op	204:9	0:0	2	->
water	204:11	0:0	2	hmsdmo_dll
op	204:22	0:0	2	=
water	204:24	0:0	2	hmsdmo_dll
water	204:34	0:0	2	;
water	205:4	0:0	2	p_sys
op	205:9	0:0	2	->
water	205:11	0:0	2	p_dmo
op	205:17	0:0	2	=
water	205:19	0:0	2	p_dmo
water	205:24	0:0	2	;
water	207:4	0:0	2	{
decl	208:8	208:32	2	uint32_t	i_size
water	208:23	0:0	2	,
decl	208:8	208:32	2	uint32_t	i_align
water	209:8	0:0	2	p_sys
op	209:13	0:0	2	->
water	209:15	0:0	2	i_min_output
op	209:28	0:0	2	=
water	209:30	0:0	2	0
water	209:31	0:0	2	;
if	210:8	214:8	2	(p_dmo -> vt -> GetOutputSizeInfo (p_dmo ,0 ,& i_size ,& i_align ))
cond	210:12	210:70	3	p_dmo -> vt -> GetOutputSizeInfo (p_dmo ,0 ,& i_size ,& i_align )
call	210:12	210:70	4	p_dmo->vt->GetOutputSizeInfo
arg	210:42	210:47	5	p_dmo
water	210:42	0:0	6	p_dmo
arg	210:49	210:50	5	0
water	210:49	0:0	6	0
arg	210:52	210:59	5	&i_size
op	210:52	0:0	6	&
water	210:53	0:0	6	i_size
arg	210:61	210:70	5	&i_align
op	210:61	0:0	6	&
water	210:62	0:0	6	i_align
stmts	211:8	214:8	3	
water	211:8	0:0	4	{
call	212:12	212:57	4	msg_Err
arg	212:21	212:26	5	p_dec
water	212:21	0:0	6	p_dec
arg	212:28	212:57	5	"GetOutputSizeInfo() failed"
water	212:28	0:0	6	"GetOutputSizeInfo() failed"
water	212:58	0:0	4	;
goto	213:12	213:22	4	error
water	213:17	0:0	5	error
water	214:8	0:0	4	}
else	215:8	222:8	2
stmts	216:8	222:8	3	
water	216:8	0:0	4	{
call	217:12	218:37	4	msg_Dbg
arg	217:21	217:26	5	p_dec
water	217:21	0:0	6	p_dec
arg	217:28	217:69	5	"GetOutputSizeInfo(): bytes %i, align %i"
water	217:28	0:0	6	"GetOutputSizeInfo(): bytes %i, align %i"
arg	218:21	218:27	5	i_size
water	218:21	0:0	6	i_size
arg	218:29	218:37	5	i_align
water	218:29	0:0	6	i_align
water	218:38	0:0	4	;
water	219:12	0:0	4	p_sys
op	219:17	0:0	4	->
water	219:19	0:0	4	i_min_output
op	219:32	0:0	4	=
water	219:34	0:0	4	i_size
water	219:40	0:0	4	;
water	220:12	0:0	4	p_sys
op	220:17	0:0	4	->
water	220:19	0:0	4	p_buffer
op	220:28	0:0	4	=
call	220:30	220:45	4	malloc
arg	220:38	220:45	5	i_size
water	220:38	0:0	6	i_size
water	220:46	0:0	4	;
if	221:12	221:45	4	(! p_sys -> p_buffer)
cond	221:16	221:24	5	! p_sys -> p_buffer
op	221:16	0:0	6	!
water	221:17	0:0	6	p_sys
op	221:22	0:0	6	->
water	221:24	0:0	6	p_buffer
stmts	221:35	221:45	5	
goto	221:35	221:45	6	error
water	221:40	0:0	7	error
water	222:8	0:0	4	}
water	223:4	0:0	2	}
water	225:4	0:0	2	p_dec
op	225:9	0:0	2	->
water	225:11	0:0	2	fmt_out
op	225:18	0:0	2	.
water	225:19	0:0	2	i_cat
op	225:25	0:0	2	=
water	225:27	0:0	2	p_dec
op	225:32	0:0	2	->
water	225:34	0:0	2	fmt_in
op	225:40	0:0	2	.
water	225:41	0:0	2	i_cat
water	225:46	0:0	2	;
if	226:4	227:68	2	(p_dec -> fmt_out . i_cat == AUDIO_ES)
cond	226:8	226:32	3	p_dec -> fmt_out . i_cat == AUDIO_ES
water	226:8	0:0	4	p_dec
op	226:13	0:0	4	->
water	226:15	0:0	4	fmt_out
op	226:22	0:0	4	.
water	226:23	0:0	4	i_cat
op	226:29	0:0	4	==
water	226:32	0:0	4	AUDIO_ES
stmts	227:8	227:68	3	
call	227:8	227:67	4	date_Init
arg	227:19	227:35	5	&p_sys->end_date
op	227:19	0:0	6	&
water	227:20	0:0	6	p_sys
op	227:25	0:0	6	->
water	227:27	0:0	6	end_date
arg	227:37	227:63	5	p_dec->fmt_in.audio.i_rate
water	227:37	0:0	6	p_dec
op	227:42	0:0	6	->
water	227:44	0:0	6	fmt_in
op	227:50	0:0	6	.
water	227:51	0:0	6	audio
op	227:56	0:0	6	.
water	227:57	0:0	6	i_rate
arg	227:65	227:67	5	1
water	227:65	0:0	6	1
water	227:68	0:0	4	;
else	228:4	229:56	2
stmts	229:8	229:56	3	
call	229:8	229:55	4	date_Init
arg	229:19	229:35	5	&p_sys->end_date
op	229:19	0:0	6	&
water	229:20	0:0	6	p_sys
op	229:25	0:0	6	->
water	229:27	0:0	6	end_date
arg	229:37	229:51	5	25
water	229:37	0:0	6	25
arg	229:53	229:55	5	1
water	229:53	0:0	6	1
water	229:56	0:0	4	;
call	230:4	230:16	2	free
arg	230:10	230:16	3	p_vih
water	230:10	0:0	4	p_vih
water	230:17	0:0	2	;
call	231:4	231:15	2	free
arg	231:10	231:15	3	p_wf
water	231:10	0:0	4	p_wf
water	231:16	0:0	2	;
call	232:4	232:33	2	vlc_mutex_lock
arg	232:20	232:33	3	&p_sys->lock
op	232:20	0:0	4	&
water	232:21	0:0	4	p_sys
op	232:26	0:0	4	->
water	232:28	0:0	4	lock
water	232:34	0:0	2	;
water	233:4	0:0	2	p_sys
op	233:9	0:0	2	->
water	233:11	0:0	2	b_ready
op	233:19	0:0	2	=
water	234:4	0:0	2	p_sys
op	234:9	0:0	2	->
water	234:11	0:0	2	b_works
op	234:19	0:0	2	=
water	234:21	0:0	2	true
water	234:25	0:0	2	;
call	235:4	235:41	2	vlc_cond_signal
arg	235:21	235:41	3	&p_sys->wait_output
op	235:21	0:0	4	&
water	235:22	0:0	4	p_sys
op	235:27	0:0	4	->
water	235:29	0:0	4	wait_output
water	235:42	0:0	2	;
call	236:4	236:35	2	vlc_mutex_unlock
arg	236:22	236:35	3	&p_sys->lock
op	236:22	0:0	4	&
water	236:23	0:0	4	p_sys
op	236:28	0:0	4	->
water	236:30	0:0	4	lock
water	236:36	0:0	2	;
return	237:4	237:22	2	VLC_SUCCESS
water	237:11	0:0	3	VLC_SUCCESS
label	238:1	238:6	2	error :
if	239:4	239:55	2	(p_dmo)
cond	239:8	239:8	3	p_dmo
water	239:8	0:0	4	p_dmo
stmts	239:16	239:55	3	
call	239:16	239:54	4	p_dmo->vt->Release
arg	239:36	239:54	5	(IUnknown*)p_dmo
water	239:36	0:0	6	(
water	239:37	0:0	6	IUnknown
op	239:46	0:0	6	*
water	239:47	0:0	6	)
water	239:48	0:0	6	p_dmo
water	239:55	0:0	4	;
if	240:4	240:46	2	(hmsdmo_dll)
cond	240:8	240:8	3	hmsdmo_dll
water	240:8	0:0	4	hmsdmo_dll
stmts	240:21	240:46	3	
call	240:21	240:45	4	FreeLibrary
arg	240:34	240:45	5	hmsdmo_dll
water	240:34	0:0	6	hmsdmo_dll
water	240:46	0:0	4	;
call	242:4	242:19	2	CoUninitialize
water	242:20	0:0	2	;
call	243:4	243:16	2	free
arg	243:10	243:16	3	p_vih
water	243:10	0:0	4	p_vih
water	243:17	0:0	2	;
call	244:4	244:15	2	free
arg	244:10	244:15	3	p_wf
water	244:10	0:0	4	p_wf
water	244:16	0:0	2	;
call	245:4	245:33	2	vlc_mutex_lock
arg	245:20	245:33	3	&p_sys->lock
op	245:20	0:0	4	&
water	245:21	0:0	4	p_sys
op	245:26	0:0	4	->
water	245:28	0:0	4	lock
water	245:34	0:0	2	;
water	246:4	0:0	2	p_sys
op	246:9	0:0	2	->
water	246:11	0:0	2	b_ready
op	246:19	0:0	2	=
water	246:21	0:0	2	true
water	246:25	0:0	2	;
call	247:4	247:41	2	vlc_cond_signal
arg	247:21	247:41	3	&p_sys->wait_output
op	247:21	0:0	4	&
water	247:22	0:0	4	p_sys
op	247:27	0:0	4	->
water	247:29	0:0	4	wait_output
water	247:42	0:0	2	;
call	248:4	248:35	2	vlc_mutex_unlock
arg	248:22	248:35	3	&p_sys->lock
op	248:22	0:0	4	&
water	248:23	0:0	4	p_sys
op	248:28	0:0	4	->
water	248:30	0:0	4	lock
water	248:36	0:0	2	;
return	249:4	249:23	2	VLC_EGENERIC
water	249:11	0:0	3	VLC_EGENERIC

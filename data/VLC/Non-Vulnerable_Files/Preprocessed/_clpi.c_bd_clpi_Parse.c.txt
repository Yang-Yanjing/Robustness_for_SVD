func	2:0	80:0	0	int	bd_clpi_Parse
params	2:17	0:0	1	
param	2:19	2:36	2	bd_clpi_t *	p_clpi
param	2:38	2:45	2	bs_t *	s
param	2:47	2:56	2	int	i_id
stmnts	0:0	79:22	1	
decl	4:4	4:39	2	const int	i_start
op	4:22	0:0	2	=
call	4:24	4:34	3	bs_pos
arg	4:32	4:34	4	s
water	4:32	0:0	5	s
op	4:36	0:0	2	/
water	4:38	0:0	2	8
if	6:4	7:27	2	(bs_read (s ,32 ) != 0 x48444D56)
cond	6:8	6:29	3	bs_read (s ,32 ) != 0 x48444D56
call	6:8	6:23	4	bs_read
arg	6:17	6:18	5	s
water	6:17	0:0	6	s
arg	6:20	6:23	5	32
water	6:20	0:0	6	32
op	6:25	0:0	4	!=
water	6:28	0:0	4	0
water	6:29	0:0	4	x48444D56
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
decl	8:4	8:47	2	const uint32_t	i_version
op	8:29	0:0	2	=
call	8:31	8:46	3	bs_read
arg	8:40	8:41	4	s
water	8:40	0:0	5	s
arg	8:43	8:46	4	32
water	8:43	0:0	5	32
if	9:4	10:27	2	(i_version != 0 x30313030 && i_version != 0 x30323030)
cond	9:8	9:49	3	i_version != 0 x30313030 && i_version != 0 x30323030
water	9:8	0:0	4	i_version
op	9:18	0:0	4	!=
water	9:21	0:0	4	0
water	9:22	0:0	4	x30313030
op	9:32	0:0	4	&&
water	9:35	0:0	4	i_version
op	9:45	0:0	4	!=
water	9:48	0:0	4	0
water	9:49	0:0	4	x30323030
stmts	10:8	10:27	3	
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
decl	12:4	12:54	2	const uint32_t	i_sequence_start
op	12:36	0:0	2	=
call	12:38	12:53	3	bs_read
arg	12:47	12:48	4	s
water	12:47	0:0	5	s
arg	12:50	12:53	4	32
water	12:50	0:0	5	32
decl	13:4	13:53	2	const uint32_t	i_program_start
op	13:35	0:0	2	=
call	13:37	13:52	3	bs_read
arg	13:46	13:47	4	s
water	13:46	0:0	5	s
arg	13:49	13:52	4	32
water	13:49	0:0	5	32
decl	14:4	14:49	2	const uint32_t	i_cpi_start
op	14:31	0:0	2	=
call	14:33	14:48	3	bs_read
arg	14:42	14:43	4	s
water	14:42	0:0	5	s
arg	14:45	14:48	4	32
water	14:45	0:0	5	32
call	15:4	15:19	2	bs_skip
arg	15:13	15:14	3	s
water	15:13	0:0	4	s
arg	15:16	15:19	3	32
water	15:16	0:0	4	32
water	15:20	0:0	2	;
call	16:4	16:19	2	bs_skip
arg	16:13	16:14	3	s
water	16:13	0:0	4	s
arg	16:16	16:19	3	32
water	16:16	0:0	4	32
water	16:20	0:0	2	;
water	18:4	0:0	2	p_clpi
op	18:10	0:0	2	->
water	18:12	0:0	2	i_id
op	18:17	0:0	2	=
water	18:19	0:0	2	i_id
water	18:23	0:0	2	;
decl	20:4	20:16	2	bs_t	ss
op	20:12	0:0	2	=
op	20:14	0:0	2	*
water	20:15	0:0	2	s
call	21:4	21:67	2	bs_skip
arg	21:13	21:16	3	&ss
op	21:13	0:0	4	&
water	21:14	0:0	4	ss
arg	21:18	21:67	3	8*(i_start+i_sequence_start)-bs_pos(s)
water	21:18	0:0	4	8
op	21:20	0:0	4	*
water	21:22	0:0	4	(
water	21:24	0:0	4	i_start
op	21:32	0:0	4	+
water	21:34	0:0	4	i_sequence_start
water	21:51	0:0	4	)
op	21:53	0:0	4	-
call	21:55	21:65	4	bs_pos
arg	21:63	21:65	5	s
water	21:63	0:0	6	s
water	21:68	0:0	2	;
call	22:4	22:21	2	bs_skip
arg	22:13	22:16	3	&ss
op	22:13	0:0	4	&
water	22:14	0:0	4	ss
arg	22:18	22:21	3	32
water	22:18	0:0	4	32
water	22:22	0:0	2	;
call	23:4	23:20	2	bs_skip
arg	23:13	23:16	3	&ss
op	23:13	0:0	4	&
water	23:14	0:0	4	ss
arg	23:18	23:20	3	8
water	23:18	0:0	4	8
water	23:21	0:0	2	;
call	24:4	24:20	2	bs_skip
arg	24:13	24:16	3	&ss
op	24:13	0:0	4	&
water	24:14	0:0	4	ss
arg	24:18	24:20	3	8
water	24:18	0:0	4	8
water	24:21	0:0	2	;
call	25:4	25:21	2	bs_skip
arg	25:13	25:16	3	&ss
op	25:13	0:0	4	&
water	25:14	0:0	4	ss
arg	25:18	25:21	3	32
water	25:18	0:0	4	32
water	25:22	0:0	2	;
decl	26:4	26:39	2	const int	i_stc
op	26:20	0:0	2	=
call	26:22	26:38	3	bs_read
arg	26:31	26:34	4	&ss
op	26:31	0:0	5	&
water	26:32	0:0	5	ss
arg	26:36	26:38	4	8
water	26:36	0:0	5	8
call	27:4	27:20	2	bs_skip
arg	27:13	27:16	3	&ss
op	27:13	0:0	4	&
water	27:14	0:0	4	ss
arg	27:18	27:20	3	8
water	27:18	0:0	4	8
water	27:21	0:0	2	;
water	28:4	0:0	2	p_clpi
op	28:10	0:0	2	->
water	28:12	0:0	2	p_stc
op	28:18	0:0	2	=
call	28:20	28:58	2	calloc
arg	28:28	28:33	3	i_stc
water	28:28	0:0	4	i_stc
arg	28:35	28:58	3	sizeof(*p_clpi->p_stc)
op	28:35	0:0	4	sizeof
water	28:41	0:0	4	(
op	28:42	0:0	4	*
water	28:43	0:0	4	p_clpi
op	28:49	0:0	4	->
water	28:51	0:0	4	p_stc
water	28:56	0:0	4	)
water	28:59	0:0	2	;
for	29:4	34:4	2	(p_clpi -> i_stc = 0 ;p_clpi -> i_stc < i_stc;p_clpi -> i_stc ++)
forinit	29:9	29:26	3	p_clpi -> i_stc = 0 ;
water	29:9	0:0	4	p_clpi
op	29:15	0:0	4	->
water	29:17	0:0	4	i_stc
op	29:23	0:0	4	=
water	29:25	0:0	4	0
water	29:26	0:0	4	;
cond	29:28	29:44	3	p_clpi -> i_stc < i_stc
water	29:28	0:0	4	p_clpi
op	29:34	0:0	4	->
water	29:36	0:0	4	i_stc
op	29:42	0:0	4	<
water	29:44	0:0	4	i_stc
forexpr	29:51	29:64	3	p_clpi -> i_stc ++
water	29:51	0:0	4	p_clpi
op	29:57	0:0	4	->
water	29:59	0:0	4	i_stc
op	29:64	0:0	4	++
stmts	30:4	34:4	3	
water	30:4	0:0	4	{
if	31:8	32:17	4	(! p_clpi -> p_stc)
cond	31:12	31:21	5	! p_clpi -> p_stc
op	31:12	0:0	6	!
water	31:13	0:0	6	p_clpi
op	31:19	0:0	6	->
water	31:21	0:0	6	p_stc
stmts	32:12	32:17	5	
break	32:12	32:17	6	
call	33:8	33:62	4	bd_clpi_stc_Parse
arg	33:27	33:56	5	&p_clpi->p_stc[p_clpi->i_stc]
op	33:27	0:0	6	&
water	33:28	0:0	6	p_clpi
op	33:34	0:0	6	->
water	33:36	0:0	6	p_stc
op	33:41	0:0	6	[
water	33:42	0:0	6	p_clpi
op	33:48	0:0	6	->
water	33:50	0:0	6	i_stc
op	33:55	0:0	6	]
arg	33:58	33:62	5	&ss
op	33:58	0:0	6	&
water	33:59	0:0	6	ss
water	33:63	0:0	4	;
water	34:4	0:0	4	}
decl	36:4	36:16	2	bs_t	ps
op	36:12	0:0	2	=
op	36:14	0:0	2	*
water	36:15	0:0	2	s
call	37:4	37:66	2	bs_skip
arg	37:13	37:16	3	&ps
op	37:13	0:0	4	&
water	37:14	0:0	4	ps
arg	37:18	37:66	3	8*(i_start+i_program_start)-bs_pos(s)
water	37:18	0:0	4	8
op	37:20	0:0	4	*
water	37:22	0:0	4	(
water	37:24	0:0	4	i_start
op	37:32	0:0	4	+
water	37:34	0:0	4	i_program_start
water	37:50	0:0	4	)
op	37:52	0:0	4	-
call	37:54	37:64	4	bs_pos
arg	37:62	37:64	5	s
water	37:62	0:0	6	s
water	37:67	0:0	2	;
call	38:4	38:21	2	bs_skip
arg	38:13	38:16	3	&ps
op	38:13	0:0	4	&
water	38:14	0:0	4	ps
arg	38:18	38:21	3	32
water	38:18	0:0	4	32
water	38:22	0:0	2	;
call	39:4	39:20	2	bs_skip
arg	39:13	39:16	3	&ps
op	39:13	0:0	4	&
water	39:14	0:0	4	ps
arg	39:18	39:20	3	8
water	39:18	0:0	4	8
water	39:21	0:0	2	;
call	40:4	40:20	2	bs_skip
arg	40:13	40:16	3	&ps
op	40:13	0:0	4	&
water	40:14	0:0	4	ps
arg	40:18	40:20	3	8
water	40:18	0:0	4	8
water	40:21	0:0	2	;
call	41:4	41:21	2	bs_skip
arg	41:13	41:16	3	&ps
op	41:13	0:0	4	&
water	41:14	0:0	4	ps
arg	41:18	41:21	3	32
water	41:18	0:0	4	32
water	41:22	0:0	2	;
water	42:4	0:0	2	p_clpi
op	42:10	0:0	2	->
water	42:12	0:0	2	i_pmt_pid
op	42:22	0:0	2	=
call	42:24	42:41	2	bs_read
arg	42:33	42:36	3	&ps
op	42:33	0:0	4	&
water	42:34	0:0	4	ps
arg	42:38	42:41	3	16
water	42:38	0:0	4	16
water	42:42	0:0	2	;
decl	43:4	43:42	2	const int	i_stream
op	43:23	0:0	2	=
call	43:25	43:41	3	bs_read
arg	43:34	43:37	4	&ps
op	43:34	0:0	5	&
water	43:35	0:0	5	ps
arg	43:39	43:41	4	8
water	43:39	0:0	5	8
call	44:4	44:20	2	bs_skip
arg	44:13	44:16	3	&ps
op	44:13	0:0	4	&
water	44:14	0:0	4	ps
arg	44:18	44:20	3	8
water	44:18	0:0	4	8
water	44:21	0:0	2	;
water	45:4	0:0	2	p_clpi
op	45:10	0:0	2	->
water	45:12	0:0	2	p_stream
op	45:21	0:0	2	=
call	45:23	45:67	2	calloc
arg	45:31	45:39	3	i_stream
water	45:31	0:0	4	i_stream
arg	45:41	45:67	3	sizeof(*p_clpi->p_stream)
op	45:41	0:0	4	sizeof
water	45:47	0:0	4	(
op	45:48	0:0	4	*
water	45:49	0:0	4	p_clpi
op	45:55	0:0	4	->
water	45:57	0:0	4	p_stream
water	45:65	0:0	4	)
water	45:68	0:0	2	;
for	46:4	51:4	2	(p_clpi -> i_stream = 0 ;p_clpi -> i_stream < i_stream;p_clpi -> i_stream ++)
forinit	46:9	46:29	3	p_clpi -> i_stream = 0 ;
water	46:9	0:0	4	p_clpi
op	46:15	0:0	4	->
water	46:17	0:0	4	i_stream
op	46:26	0:0	4	=
water	46:28	0:0	4	0
water	46:29	0:0	4	;
cond	46:31	46:50	3	p_clpi -> i_stream < i_stream
water	46:31	0:0	4	p_clpi
op	46:37	0:0	4	->
water	46:39	0:0	4	i_stream
op	46:48	0:0	4	<
water	46:50	0:0	4	i_stream
forexpr	46:60	46:76	3	p_clpi -> i_stream ++
water	46:60	0:0	4	p_clpi
op	46:66	0:0	4	->
water	46:68	0:0	4	i_stream
op	46:76	0:0	4	++
stmts	47:4	51:4	3	
water	47:4	0:0	4	{
if	48:8	49:17	4	(! p_clpi -> p_stream)
cond	48:12	48:21	5	! p_clpi -> p_stream
op	48:12	0:0	6	!
water	48:13	0:0	6	p_clpi
op	48:19	0:0	6	->
water	48:21	0:0	6	p_stream
stmts	49:12	49:17	5	
break	49:12	49:17	6	
call	50:8	50:71	4	bd_clpi_stream_Parse
arg	50:30	50:65	5	&p_clpi->p_stream[p_clpi->i_stream]
op	50:30	0:0	6	&
water	50:31	0:0	6	p_clpi
op	50:37	0:0	6	->
water	50:39	0:0	6	p_stream
op	50:47	0:0	6	[
water	50:48	0:0	6	p_clpi
op	50:54	0:0	6	->
water	50:56	0:0	6	i_stream
op	50:64	0:0	6	]
arg	50:67	50:71	5	&ps
op	50:67	0:0	6	&
water	50:68	0:0	6	ps
water	50:72	0:0	4	;
water	51:4	0:0	4	}
decl	53:4	53:16	2	bs_t	cs
op	53:12	0:0	2	=
op	53:14	0:0	2	*
water	53:15	0:0	2	s
call	54:4	54:62	2	bs_skip
arg	54:13	54:16	3	&cs
op	54:13	0:0	4	&
water	54:14	0:0	4	cs
arg	54:18	54:62	3	8*(i_start+i_cpi_start)-bs_pos(s)
water	54:18	0:0	4	8
op	54:20	0:0	4	*
water	54:22	0:0	4	(
water	54:24	0:0	4	i_start
op	54:32	0:0	4	+
water	54:34	0:0	4	i_cpi_start
water	54:46	0:0	4	)
op	54:48	0:0	4	-
call	54:50	54:60	4	bs_pos
arg	54:58	54:60	5	s
water	54:58	0:0	6	s
water	54:63	0:0	2	;
decl	55:4	55:52	2	const uint32_t	i_cpi_length
op	55:32	0:0	2	=
call	55:34	55:51	3	bs_read
arg	55:43	55:46	4	&cs
op	55:43	0:0	5	&
water	55:44	0:0	5	cs
arg	55:48	55:51	4	32
water	55:48	0:0	5	32
if	56:4	73:4	2	(i_cpi_length > 0)
cond	56:8	56:23	3	i_cpi_length > 0
water	56:8	0:0	4	i_cpi_length
op	56:21	0:0	4	>
water	56:23	0:0	4	0
stmts	57:4	73:4	3	
water	57:4	0:0	4	{
call	58:8	58:25	4	bs_skip
arg	58:17	58:20	5	&cs
op	58:17	0:0	6	&
water	58:18	0:0	6	cs
arg	58:22	58:25	5	12
water	58:22	0:0	6	12
water	58:26	0:0	4	;
call	59:8	59:24	4	bs_skip
arg	59:17	59:20	5	&cs
op	59:17	0:0	6	&
water	59:18	0:0	6	cs
arg	59:22	59:24	5	4
water	59:22	0:0	6	4
water	59:25	0:0	4	;
decl	61:8	61:51	4	const int	i_epmap_start
op	61:32	0:0	4	=
call	61:34	61:46	5	bs_pos
arg	61:42	61:46	6	&cs
op	61:42	0:0	7	&
water	61:43	0:0	7	cs
op	61:48	0:0	4	/
water	61:50	0:0	4	8
call	62:8	62:24	4	bs_skip
arg	62:17	62:20	5	&cs
op	62:17	0:0	6	&
water	62:18	0:0	6	cs
arg	62:22	62:24	5	8
water	62:22	0:0	6	8
water	62:25	0:0	4	;
decl	63:8	63:46	4	const int	i_ep_map
op	63:27	0:0	4	=
call	63:29	63:45	5	bs_read
arg	63:38	63:41	6	&cs
op	63:38	0:0	7	&
water	63:39	0:0	7	cs
arg	63:43	63:45	6	8
water	63:43	0:0	7	8
water	64:8	0:0	4	p_clpi
op	64:14	0:0	4	->
water	64:16	0:0	4	p_ep_map
op	64:25	0:0	4	=
call	64:27	64:71	4	calloc
arg	64:35	64:43	5	i_ep_map
water	64:35	0:0	6	i_ep_map
arg	64:45	64:71	5	sizeof(*p_clpi->p_ep_map)
op	64:45	0:0	6	sizeof
water	64:51	0:0	6	(
op	64:52	0:0	6	*
water	64:53	0:0	6	p_clpi
op	64:59	0:0	6	->
water	64:61	0:0	6	p_ep_map
water	64:69	0:0	6	)
water	64:72	0:0	4	;
for	65:8	72:8	4	(p_clpi -> i_ep_map = 0 ;p_clpi -> i_ep_map < i_ep_map;p_clpi -> i_ep_map ++)
forinit	65:13	65:33	5	p_clpi -> i_ep_map = 0 ;
water	65:13	0:0	6	p_clpi
op	65:19	0:0	6	->
water	65:21	0:0	6	i_ep_map
op	65:30	0:0	6	=
water	65:32	0:0	6	0
water	65:33	0:0	6	;
cond	65:35	65:54	5	p_clpi -> i_ep_map < i_ep_map
water	65:35	0:0	6	p_clpi
op	65:41	0:0	6	->
water	65:43	0:0	6	i_ep_map
op	65:52	0:0	6	<
water	65:54	0:0	6	i_ep_map
forexpr	65:64	65:80	5	p_clpi -> i_ep_map ++
water	65:64	0:0	6	p_clpi
op	65:70	0:0	6	->
water	65:72	0:0	6	i_ep_map
op	65:80	0:0	6	++
stmts	66:8	72:8	5	
water	66:8	0:0	6	{
if	67:12	68:21	6	(! p_clpi -> p_ep_map)
cond	67:16	67:25	7	! p_clpi -> p_ep_map
op	67:16	0:0	8	!
water	67:17	0:0	8	p_clpi
op	67:23	0:0	8	->
water	67:25	0:0	8	p_ep_map
stmts	68:16	68:21	7	
break	68:16	68:21	8	
if	69:12	71:21	6	(bd_clpi_ep_map_Parse (& p_clpi -> p_ep_map [ p_clpi -> i_ep_map ] ,& cs ,i_epmap_start ))
cond	69:16	70:57	7	bd_clpi_ep_map_Parse (& p_clpi -> p_ep_map [ p_clpi -> i_ep_map ] ,& cs ,i_epmap_start )
call	69:16	70:57	8	bd_clpi_ep_map_Parse
arg	69:38	69:73	9	&p_clpi->p_ep_map[p_clpi->i_ep_map]
op	69:38	0:0	10	&
water	69:39	0:0	10	p_clpi
op	69:45	0:0	10	->
water	69:47	0:0	10	p_ep_map
op	69:55	0:0	10	[
water	69:56	0:0	10	p_clpi
op	69:62	0:0	10	->
water	69:64	0:0	10	i_ep_map
op	69:72	0:0	10	]
arg	70:38	70:41	9	&cs
op	70:38	0:0	10	&
water	70:39	0:0	10	cs
arg	70:43	70:57	9	i_epmap_start
water	70:43	0:0	10	i_epmap_start
stmts	71:16	71:21	7	
break	71:16	71:21	8	
water	72:8	0:0	6	}
water	73:4	0:0	4	}
else	74:4	78:4	2
stmts	75:4	78:4	3	
water	75:4	0:0	4	{
water	76:8	0:0	4	p_clpi
op	76:14	0:0	4	->
water	76:16	0:0	4	i_ep_map
op	76:25	0:0	4	=
water	76:27	0:0	4	0
water	76:28	0:0	4	;
water	77:8	0:0	4	p_clpi
op	77:14	0:0	4	->
water	77:16	0:0	4	p_ep_map
op	77:25	0:0	4	=
water	77:27	0:0	4	NULL
water	77:31	0:0	4	;
water	78:4	0:0	4	}
return	79:4	79:22	2	VLC_SUCCESS
water	79:11	0:0	3	VLC_SUCCESS

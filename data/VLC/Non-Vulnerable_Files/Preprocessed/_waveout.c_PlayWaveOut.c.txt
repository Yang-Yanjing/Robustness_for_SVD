func	2:0	54:0	0	static int	PlayWaveOut
params	2:22	0:0	1	
param	2:24	2:46	2	audio_output_t *	p_aout
param	2:48	2:66	2	HWAVEOUT	h_waveout
param	3:24	3:54	2	struct lkwavehdr *	p_waveheader
param	3:56	3:73	2	block_t *	p_buffer
param	3:75	3:87	2	bool	b_spdif
stmnts	0:0	53:22	1	
decl	5:4	5:19	2	MMRESULT	result
if	7:4	24:4	2	(p_buffer != NULL)
cond	7:8	7:20	3	p_buffer != NULL
water	7:8	0:0	4	p_buffer
op	7:17	0:0	4	!=
water	7:20	0:0	4	NULL
stmts	8:4	24:4	3	
water	8:4	0:0	4	{
water	9:8	0:0	4	p_waveheader
op	9:20	0:0	4	->
water	9:22	0:0	4	hdr
op	9:25	0:0	4	.
water	9:26	0:0	4	lpData
op	9:33	0:0	4	=
water	9:35	0:0	4	(
water	9:36	0:0	4	LPSTR
water	9:41	0:0	4	)
water	9:42	0:0	4	p_buffer
op	9:50	0:0	4	->
water	9:52	0:0	4	p_buffer
water	9:60	0:0	4	;
water	10:8	0:0	4	p_waveheader
op	10:20	0:0	4	->
water	10:22	0:0	4	hdr
op	10:25	0:0	4	.
water	10:26	0:0	4	dwBufferLength
op	10:41	0:0	4	=
water	10:43	0:0	4	p_buffer
op	10:51	0:0	4	->
water	10:53	0:0	4	i_buffer
water	10:61	0:0	4	;
if	17:8	23:8	4	(b_spdif)
cond	17:11	17:11	5	b_spdif
water	17:11	0:0	6	b_spdif
stmts	18:8	23:8	5	
water	18:8	0:0	6	{
call	19:11	21:50	6	memcpy
arg	19:19	19:48	7	p_aout->sys->p_silence_buffer
water	19:19	0:0	8	p_aout
op	19:25	0:0	8	->
water	19:27	0:0	8	sys
op	19:30	0:0	8	->
water	19:32	0:0	8	p_silence_buffer
arg	20:23	20:41	7	p_buffer->p_buffer
water	20:23	0:0	8	p_buffer
op	20:31	0:0	8	->
water	20:33	0:0	8	p_buffer
arg	21:23	21:50	7	p_aout->sys->i_buffer_size
water	21:23	0:0	8	p_aout
op	21:29	0:0	8	->
water	21:31	0:0	8	sys
op	21:34	0:0	8	->
water	21:36	0:0	8	i_buffer_size
water	21:51	0:0	6	;
water	22:11	0:0	6	p_aout
op	22:17	0:0	6	->
water	22:19	0:0	6	sys
op	22:22	0:0	6	->
water	22:24	0:0	6	i_repeat_counter
op	22:41	0:0	6	=
water	22:43	0:0	6	2
water	22:44	0:0	6	;
water	23:8	0:0	6	}
water	24:4	0:0	4	}
else	24:6	37:4	2
stmts	24:11	37:4	3	
water	24:11	0:0	4	{
if	26:8	34:8	4	(p_aout -> sys -> i_repeat_counter)
cond	26:11	26:24	5	p_aout -> sys -> i_repeat_counter
water	26:11	0:0	6	p_aout
op	26:17	0:0	6	->
water	26:19	0:0	6	sys
op	26:22	0:0	6	->
water	26:24	0:0	6	i_repeat_counter
stmts	27:8	34:8	5	
water	27:8	0:0	6	{
water	28:11	0:0	6	p_aout
op	28:17	0:0	6	->
water	28:19	0:0	6	sys
op	28:22	0:0	6	->
water	28:24	0:0	6	i_repeat_counter
op	28:40	0:0	6	--
water	28:42	0:0	6	;
if	29:11	33:11	6	(! p_aout -> sys -> i_repeat_counter)
cond	29:14	29:28	7	! p_aout -> sys -> i_repeat_counter
op	29:14	0:0	8	!
water	29:15	0:0	8	p_aout
op	29:21	0:0	8	->
water	29:23	0:0	8	sys
op	29:26	0:0	8	->
water	29:28	0:0	8	i_repeat_counter
stmts	30:11	33:11	7	
water	30:11	0:0	8	{
call	31:15	32:60	8	memset
arg	31:23	31:52	9	p_aout->sys->p_silence_buffer
water	31:23	0:0	10	p_aout
op	31:29	0:0	10	->
water	31:31	0:0	10	sys
op	31:34	0:0	10	->
water	31:36	0:0	10	p_silence_buffer
arg	32:27	32:31	9	0x00
water	32:27	0:0	10	0
water	32:28	0:0	10	x00
arg	32:33	32:60	9	p_aout->sys->i_buffer_size
water	32:33	0:0	10	p_aout
op	32:39	0:0	10	->
water	32:41	0:0	10	sys
op	32:44	0:0	10	->
water	32:46	0:0	10	i_buffer_size
water	32:61	0:0	8	;
water	33:11	0:0	8	}
water	34:8	0:0	6	}
water	35:8	0:0	4	p_waveheader
op	35:20	0:0	4	->
water	35:22	0:0	4	hdr
op	35:25	0:0	4	.
water	35:26	0:0	4	lpData
op	35:33	0:0	4	=
water	35:35	0:0	4	(
water	35:36	0:0	4	LPSTR
water	35:41	0:0	4	)
water	35:42	0:0	4	p_aout
op	35:48	0:0	4	->
water	35:50	0:0	4	sys
op	35:53	0:0	4	->
water	35:55	0:0	4	p_silence_buffer
water	35:71	0:0	4	;
water	36:8	0:0	4	p_waveheader
op	36:20	0:0	4	->
water	36:22	0:0	4	hdr
op	36:25	0:0	4	.
water	36:26	0:0	4	dwBufferLength
op	36:41	0:0	4	=
water	36:43	0:0	4	p_aout
op	36:49	0:0	4	->
water	36:51	0:0	4	sys
op	36:54	0:0	4	->
water	36:56	0:0	4	i_buffer_size
water	36:69	0:0	4	;
water	37:4	0:0	4	}
water	38:4	0:0	2	p_waveheader
op	38:16	0:0	2	->
water	38:18	0:0	2	hdr
op	38:21	0:0	2	.
water	38:22	0:0	2	dwUser
op	38:29	0:0	2	=
water	38:31	0:0	2	p_buffer
water	38:40	0:0	2	?
water	38:42	0:0	2	(
water	38:43	0:0	2	DWORD_PTR
water	38:52	0:0	2	)
water	38:53	0:0	2	p_buffer
water	38:62	0:0	2	:
water	38:64	0:0	2	(
water	38:65	0:0	2	DWORD_PTR
water	38:74	0:0	2	)
water	38:75	0:0	2	1
water	38:76	0:0	2	;
water	39:4	0:0	2	p_waveheader
op	39:16	0:0	2	->
water	39:18	0:0	2	hdr
op	39:21	0:0	2	.
water	39:22	0:0	2	dwFlags
op	39:30	0:0	2	=
water	39:32	0:0	2	0
water	39:33	0:0	2	;
water	40:4	0:0	2	result
op	40:11	0:0	2	=
call	40:13	40:82	2	waveOutPrepareHeader
arg	40:35	40:44	3	h_waveout
water	40:35	0:0	4	h_waveout
arg	40:46	40:64	3	&p_waveheader->hdr
op	40:46	0:0	4	&
water	40:47	0:0	4	p_waveheader
op	40:59	0:0	4	->
water	40:61	0:0	4	hdr
arg	40:66	40:82	3	sizeof(WAVEHDR)
op	40:66	0:0	4	sizeof
water	40:72	0:0	4	(
water	40:73	0:0	4	WAVEHDR
water	40:80	0:0	4	)
water	40:83	0:0	2	;
if	41:4	45:4	2	(result != MMSYSERR_NOERROR)
cond	41:8	41:18	3	result != MMSYSERR_NOERROR
water	41:8	0:0	4	result
op	41:15	0:0	4	!=
water	41:18	0:0	4	MMSYSERR_NOERROR
stmts	42:4	45:4	3	
water	42:4	0:0	4	{
call	43:8	43:55	4	msg_Err
arg	43:17	43:23	5	p_aout
water	43:17	0:0	6	p_aout
arg	43:25	43:55	5	"waveOutPrepareHeader failed"
water	43:25	0:0	6	"waveOutPrepareHeader failed"
water	43:56	0:0	4	;
return	44:8	44:27	4	VLC_EGENERIC
water	44:15	0:0	5	VLC_EGENERIC
water	45:4	0:0	4	}
water	47:4	0:0	2	result
op	47:11	0:0	2	=
call	47:13	47:74	2	waveOutWrite
arg	47:27	47:36	3	h_waveout
water	47:27	0:0	4	h_waveout
arg	47:38	47:56	3	&p_waveheader->hdr
op	47:38	0:0	4	&
water	47:39	0:0	4	p_waveheader
op	47:51	0:0	4	->
water	47:53	0:0	4	hdr
arg	47:58	47:74	3	sizeof(WAVEHDR)
op	47:58	0:0	4	sizeof
water	47:64	0:0	4	(
water	47:65	0:0	4	WAVEHDR
water	47:72	0:0	4	)
water	47:75	0:0	2	;
if	48:4	52:4	2	(result != MMSYSERR_NOERROR)
cond	48:8	48:18	3	result != MMSYSERR_NOERROR
water	48:8	0:0	4	result
op	48:15	0:0	4	!=
water	48:18	0:0	4	MMSYSERR_NOERROR
stmts	49:4	52:4	3	
water	49:4	0:0	4	{
call	50:8	50:47	4	msg_Err
arg	50:17	50:23	5	p_aout
water	50:17	0:0	6	p_aout
arg	50:25	50:47	5	"waveOutWrite failed"
water	50:25	0:0	6	"waveOutWrite failed"
water	50:48	0:0	4	;
return	51:8	51:27	4	VLC_EGENERIC
water	51:15	0:0	5	VLC_EGENERIC
water	52:4	0:0	4	}
return	53:4	53:22	2	VLC_SUCCESS
water	53:11	0:0	3	VLC_SUCCESS

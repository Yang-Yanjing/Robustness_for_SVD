func	2:0	174:0	0	static void	EsOutSelect
params	2:23	0:0	1	
param	2:25	2:38	2	es_out_t *	out
param	2:40	2:55	2	es_out_id_t *	es
param	2:57	2:70	2	bool	b_force
stmnts	0:0	173:4	1	
decl	4:4	4:41	2	es_out_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	out
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:29	2	int	i_cat
op	5:14	0:0	2	=
water	5:16	0:0	2	es
op	5:18	0:0	2	->
water	5:20	0:0	2	fmt
op	5:23	0:0	2	.
water	5:24	0:0	2	i_cat
if	6:4	10:4	2	(! p_sys -> b_active || ( ! b_force && es -> fmt . i_priority < ES_PRIORITY_SELECTABLE_MIN ))
cond	6:8	7:70	3	! p_sys -> b_active || ( ! b_force && es -> fmt . i_priority < ES_PRIORITY_SELECTABLE_MIN )
op	6:8	0:0	4	!
water	6:9	0:0	4	p_sys
op	6:14	0:0	4	->
water	6:16	0:0	4	b_active
op	6:25	0:0	4	||
water	7:8	0:0	4	(
op	7:10	0:0	4	!
water	7:11	0:0	4	b_force
op	7:19	0:0	4	&&
water	7:22	0:0	4	es
op	7:24	0:0	4	->
water	7:26	0:0	4	fmt
op	7:29	0:0	4	.
water	7:30	0:0	4	i_priority
op	7:41	0:0	4	<
water	7:43	0:0	4	ES_PRIORITY_SELECTABLE_MIN
water	7:70	0:0	4	)
stmts	8:4	10:4	3	
water	8:4	0:0	4	{
return	9:8	9:14	4	
water	10:4	0:0	4	}
if	11:4	15:4	2	(p_sys -> i_mode == ES_OUT_MODE_ALL || b_force)
cond	11:8	11:44	3	p_sys -> i_mode == ES_OUT_MODE_ALL || b_force
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	i_mode
op	11:22	0:0	4	==
water	11:25	0:0	4	ES_OUT_MODE_ALL
op	11:41	0:0	4	||
water	11:44	0:0	4	b_force
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
if	13:8	14:31	4	(!EsIsSelected (es ))
cond	13:12	13:30	5	!EsIsSelected (es )
op	13:12	0:0	6	!
call	13:13	13:30	6	EsIsSelected
arg	13:27	13:30	7	es
water	13:27	0:0	8	es
stmts	14:12	14:31	5	
call	14:12	14:30	6	EsSelect
arg	14:22	14:25	7	out
water	14:22	0:0	8	out
arg	14:27	14:30	7	es
water	14:27	0:0	8	es
water	14:31	0:0	6	;
water	15:4	0:0	4	}
else	16:4	35:4	2
stmts	16:9	35:4	3	
if	16:9	35:4	4	(p_sys -> i_mode == ES_OUT_MODE_PARTIAL)
cond	16:13	16:30	5	p_sys -> i_mode == ES_OUT_MODE_PARTIAL
water	16:13	0:0	6	p_sys
op	16:18	0:0	6	->
water	16:20	0:0	6	i_mode
op	16:27	0:0	6	==
water	16:30	0:0	6	ES_OUT_MODE_PARTIAL
stmts	17:4	35:4	5	
water	17:4	0:0	6	{
decl	18:8	18:73	6	char	*prgms
op	18:20	0:0	6	=
call	18:22	18:72	7	var_GetNonEmptyString
arg	18:45	18:59	8	p_sys->p_input
water	18:45	0:0	9	p_sys
op	18:50	0:0	9	->
water	18:52	0:0	9	p_input
arg	18:61	18:72	8	"programs"
water	18:61	0:0	9	"programs"
if	19:8	34:8	6	(prgms != NULL)
cond	19:12	19:21	7	prgms != NULL
water	19:12	0:0	8	prgms
op	19:18	0:0	8	!=
water	19:21	0:0	8	NULL
stmts	20:8	34:8	7	
water	20:8	0:0	8	{
decl	21:12	21:21	8	char	*buf
for	22:12	32:12	8	( const char * prgm =strtok_r (prgms ,"," ,& buf ) ;prgm != NULL;prgm =strtok_r (NULL ,"," ,& buf ))
forinit	0:0	22:65	9	 const char * prgm =strtok_r (prgms ,"," ,& buf ) ;
decl	22:18	22:65	10	const char	*prgm
op	22:35	0:0	10	=
call	22:37	22:64	11	strtok_r
arg	22:47	22:52	12	prgms
water	22:47	0:0	13	prgms
arg	22:54	22:57	12	","
water	22:54	0:0	13	","
arg	22:59	22:64	12	&buf
op	22:59	0:0	13	&
water	22:60	0:0	13	buf
cond	23:18	23:26	9	prgm != NULL
water	23:18	0:0	10	prgm
op	23:23	0:0	10	!=
water	23:26	0:0	10	NULL
forexpr	24:18	24:51	9	prgm =strtok_r (NULL ,"," ,& buf )
water	24:18	0:0	10	prgm
op	24:23	0:0	10	=
call	24:25	24:51	10	strtok_r
arg	24:35	24:39	11	NULL
water	24:35	0:0	12	NULL
arg	24:41	24:44	11	","
water	24:41	0:0	12	","
arg	24:46	24:51	11	&buf
op	24:46	0:0	12	&
water	24:47	0:0	12	buf
stmts	25:12	32:12	9	
water	25:12	0:0	10	{
if	26:16	31:16	10	(atoi (prgm ) == es -> p_pgrm -> i_id || b_force)
cond	26:20	26:56	11	atoi (prgm ) == es -> p_pgrm -> i_id || b_force
call	26:20	26:31	12	atoi
arg	26:26	26:31	13	prgm
water	26:26	0:0	14	prgm
op	26:33	0:0	12	==
water	26:36	0:0	12	es
op	26:38	0:0	12	->
water	26:40	0:0	12	p_pgrm
op	26:46	0:0	12	->
water	26:48	0:0	12	i_id
op	26:53	0:0	12	||
water	26:56	0:0	12	b_force
stmts	27:16	31:16	11	
water	27:16	0:0	12	{
if	28:20	29:43	12	(!EsIsSelected (es ))
cond	28:24	28:42	13	!EsIsSelected (es )
op	28:24	0:0	14	!
call	28:25	28:42	14	EsIsSelected
arg	28:39	28:42	15	es
water	28:39	0:0	16	es
stmts	29:24	29:43	13	
call	29:24	29:42	14	EsSelect
arg	29:34	29:37	15	out
water	29:34	0:0	16	out
arg	29:39	29:42	15	es
water	29:39	0:0	16	es
water	29:43	0:0	14	;
break	30:20	30:25	12	
water	31:16	0:0	12	}
water	32:12	0:0	10	}
call	33:12	33:24	8	free
arg	33:18	33:24	9	prgms
water	33:18	0:0	10	prgms
water	33:25	0:0	8	;
water	34:8	0:0	8	}
water	35:4	0:0	6	}
else	36:4	143:4	2
stmts	36:9	143:4	3	
if	36:9	143:4	4	(p_sys -> i_mode == ES_OUT_MODE_AUTO)
cond	36:13	36:30	5	p_sys -> i_mode == ES_OUT_MODE_AUTO
water	36:13	0:0	6	p_sys
op	36:18	0:0	6	->
water	36:20	0:0	6	i_mode
op	36:27	0:0	6	==
water	36:30	0:0	6	ES_OUT_MODE_AUTO
stmts	37:4	143:4	5	
water	37:4	0:0	6	{
decl	38:8	38:26	6	int	i_wanted
op	38:22	0:0	6	=
op	38:24	0:0	6	-
water	38:25	0:0	6	1
if	39:8	40:18	6	(es -> p_pgrm != p_sys -> p_pgrm)
cond	39:12	39:33	7	es -> p_pgrm != p_sys -> p_pgrm
water	39:12	0:0	8	es
op	39:14	0:0	8	->
water	39:16	0:0	8	p_pgrm
op	39:23	0:0	8	!=
water	39:26	0:0	8	p_sys
op	39:31	0:0	8	->
water	39:33	0:0	8	p_pgrm
stmts	40:12	40:18	7	
return	40:12	40:18	8	
if	41:8	82:8	6	(i_cat == AUDIO_ES)
cond	41:12	41:21	7	i_cat == AUDIO_ES
water	41:12	0:0	8	i_cat
op	41:18	0:0	8	==
water	41:21	0:0	8	AUDIO_ES
stmts	42:8	82:8	7	
water	42:8	0:0	8	{
if	43:12	64:12	8	(p_sys -> ppsz_audio_language)
cond	43:16	43:23	9	p_sys -> ppsz_audio_language
water	43:16	0:0	10	p_sys
op	43:21	0:0	10	->
water	43:23	0:0	10	ppsz_audio_language
stmts	44:12	64:12	9	
water	44:12	0:0	10	{
decl	45:16	46:72	10	int	es_idx
op	45:27	0:0	10	=
call	45:29	46:71	11	LanguageArrayIndex
arg	45:49	45:75	12	p_sys->ppsz_audio_language
water	45:49	0:0	13	p_sys
op	45:54	0:0	13	->
water	45:56	0:0	13	ppsz_audio_language
arg	46:49	46:71	12	es->psz_language_code
water	46:49	0:0	13	es
op	46:51	0:0	13	->
water	46:53	0:0	13	psz_language_code
if	47:16	52:16	10	(! p_sys -> p_es_audio)
cond	47:20	47:28	11	! p_sys -> p_es_audio
op	47:20	0:0	12	!
water	47:21	0:0	12	p_sys
op	47:26	0:0	12	->
water	47:28	0:0	12	p_es_audio
stmts	48:16	52:16	11	
water	48:16	0:0	12	{
if	50:20	51:48	12	(es_idx >= 0)
cond	50:24	50:34	13	es_idx >= 0
water	50:24	0:0	14	es_idx
op	50:31	0:0	14	>=
water	50:34	0:0	14	0
stmts	51:24	51:48	13	
water	51:24	0:0	14	i_wanted
op	51:33	0:0	14	=
water	51:35	0:0	14	es
op	51:37	0:0	14	->
water	51:39	0:0	14	i_channel
water	51:48	0:0	14	;
water	52:16	0:0	12	}
else	53:16	63:16	10
stmts	54:16	63:16	11	
water	54:16	0:0	12	{
decl	55:20	57:82	12	int	selected_es_idx
op	55:40	0:0	12	=
call	56:24	57:81	13	LanguageArrayIndex
arg	56:44	56:70	14	p_sys->ppsz_audio_language
water	56:44	0:0	15	p_sys
op	56:49	0:0	15	->
water	56:51	0:0	15	ppsz_audio_language
arg	57:44	57:81	14	p_sys->p_es_audio->psz_language_code
water	57:44	0:0	15	p_sys
op	57:49	0:0	15	->
water	57:51	0:0	15	p_es_audio
op	57:61	0:0	15	->
water	57:63	0:0	15	psz_language_code
if	58:20	62:48	12	(es_idx >= 0 && ( selected_es_idx < 0 || es_idx < selected_es_idx || ( es_idx == selected_es_idx && p_sys -> p_es_audio -> fmt . i_priority < es -> fmt . i_priority ) ))
cond	58:24	61:85	13	es_idx >= 0 && ( selected_es_idx < 0 || es_idx < selected_es_idx || ( es_idx == selected_es_idx && p_sys -> p_es_audio -> fmt . i_priority < es -> fmt . i_priority ) )
water	58:24	0:0	14	es_idx
op	58:31	0:0	14	>=
water	58:34	0:0	14	0
op	58:36	0:0	14	&&
water	59:24	0:0	14	(
water	59:26	0:0	14	selected_es_idx
op	59:42	0:0	14	<
water	59:44	0:0	14	0
op	59:46	0:0	14	||
water	59:49	0:0	14	es_idx
op	59:56	0:0	14	<
water	59:58	0:0	14	selected_es_idx
op	59:74	0:0	14	||
water	60:26	0:0	14	(
water	60:28	0:0	14	es_idx
op	60:35	0:0	14	==
water	60:38	0:0	14	selected_es_idx
op	60:54	0:0	14	&&
water	61:28	0:0	14	p_sys
op	61:33	0:0	14	->
water	61:35	0:0	14	p_es_audio
op	61:45	0:0	14	->
water	61:47	0:0	14	fmt
op	61:50	0:0	14	.
water	61:51	0:0	14	i_priority
op	61:62	0:0	14	<
water	61:64	0:0	14	es
op	61:66	0:0	14	->
water	61:68	0:0	14	fmt
op	61:71	0:0	14	.
water	61:72	0:0	14	i_priority
water	61:83	0:0	14	)
water	61:85	0:0	14	)
stmts	62:24	62:48	13	
water	62:24	0:0	14	i_wanted
op	62:33	0:0	14	=
water	62:35	0:0	14	es
op	62:37	0:0	14	->
water	62:39	0:0	14	i_channel
water	62:48	0:0	14	;
water	63:16	0:0	12	}
water	64:12	0:0	10	}
else	65:12	72:12	8
stmts	66:12	72:12	9	
water	66:12	0:0	10	{
if	69:16	71:44	10	(! p_sys -> p_es_audio || p_sys -> p_es_audio -> fmt . i_priority < es -> fmt . i_priority)
cond	69:20	70:64	11	! p_sys -> p_es_audio || p_sys -> p_es_audio -> fmt . i_priority < es -> fmt . i_priority
op	69:20	0:0	12	!
water	69:21	0:0	12	p_sys
op	69:26	0:0	12	->
water	69:28	0:0	12	p_es_audio
op	69:39	0:0	12	||
water	70:20	0:0	12	p_sys
op	70:25	0:0	12	->
water	70:27	0:0	12	p_es_audio
op	70:37	0:0	12	->
water	70:39	0:0	12	fmt
op	70:42	0:0	12	.
water	70:43	0:0	12	i_priority
op	70:54	0:0	12	<
water	70:56	0:0	12	es
op	70:58	0:0	12	->
water	70:60	0:0	12	fmt
op	70:63	0:0	12	.
water	70:64	0:0	12	i_priority
stmts	71:20	71:44	11	
water	71:20	0:0	12	i_wanted
op	71:29	0:0	12	=
water	71:31	0:0	12	es
op	71:33	0:0	12	->
water	71:35	0:0	12	i_channel
water	71:44	0:0	12	;
water	72:12	0:0	10	}
if	73:12	74:46	8	(p_sys -> i_audio_last >= 0)
cond	73:16	73:39	9	p_sys -> i_audio_last >= 0
water	73:16	0:0	10	p_sys
op	73:21	0:0	10	->
water	73:23	0:0	10	i_audio_last
op	73:36	0:0	10	>=
water	73:39	0:0	10	0
stmts	74:16	74:46	9	
water	74:16	0:0	10	i_wanted
op	74:25	0:0	10	=
water	74:27	0:0	10	p_sys
op	74:32	0:0	10	->
water	74:34	0:0	10	i_audio_last
water	74:46	0:0	10	;
if	75:12	81:12	8	(p_sys -> i_audio_id >= 0)
cond	75:16	75:37	9	p_sys -> i_audio_id >= 0
water	75:16	0:0	10	p_sys
op	75:21	0:0	10	->
water	75:23	0:0	10	i_audio_id
op	75:34	0:0	10	>=
water	75:37	0:0	10	0
stmts	76:12	81:12	9	
water	76:12	0:0	10	{
if	77:16	78:44	10	(es -> i_id == p_sys -> i_audio_id)
cond	77:20	77:39	11	es -> i_id == p_sys -> i_audio_id
water	77:20	0:0	12	es
op	77:22	0:0	12	->
water	77:24	0:0	12	i_id
op	77:29	0:0	12	==
water	77:32	0:0	12	p_sys
op	77:37	0:0	12	->
water	77:39	0:0	12	i_audio_id
stmts	78:20	78:44	11	
water	78:20	0:0	12	i_wanted
op	78:29	0:0	12	=
water	78:31	0:0	12	es
op	78:33	0:0	12	->
water	78:35	0:0	12	i_channel
water	78:44	0:0	12	;
else	79:16	80:26	10
stmts	80:20	80:26	11	
return	80:20	80:26	12	
water	81:12	0:0	10	}
water	82:8	0:0	8	}
else	83:8	136:8	6
stmts	83:13	136:8	7	
if	83:13	136:8	8	(i_cat == SPU_ES)
cond	83:17	83:26	9	i_cat == SPU_ES
water	83:17	0:0	10	i_cat
op	83:23	0:0	10	==
water	83:26	0:0	10	SPU_ES
stmts	84:8	136:8	9	
water	84:8	0:0	10	{
if	85:12	112:12	10	(p_sys -> ppsz_sub_language)
cond	85:16	85:23	11	p_sys -> ppsz_sub_language
water	85:16	0:0	12	p_sys
op	85:21	0:0	12	->
water	85:23	0:0	12	ppsz_sub_language
stmts	86:12	112:12	11	
water	86:12	0:0	12	{
decl	87:16	88:60	12	int	es_idx
op	87:27	0:0	12	=
call	87:29	88:59	13	LanguageArrayIndex
arg	87:49	87:73	14	p_sys->ppsz_sub_language
water	87:49	0:0	15	p_sys
op	87:54	0:0	15	->
water	87:56	0:0	15	ppsz_sub_language
arg	88:37	88:59	14	es->psz_language_code
water	88:37	0:0	15	es
op	88:39	0:0	15	->
water	88:41	0:0	15	psz_language_code
if	89:16	100:16	12	(! p_sys -> p_es_sub)
cond	89:20	89:28	13	! p_sys -> p_es_sub
op	89:20	0:0	14	!
water	89:21	0:0	14	p_sys
op	89:26	0:0	14	->
water	89:28	0:0	14	p_es_sub
stmts	90:16	100:16	13	
water	90:16	0:0	14	{
if	92:20	99:48	14	(es_idx >= 0 || ( p_sys -> i_default_sub_id >= 0 &&LanguageArrayIndex (p_sys -> ppsz_sub_language ,"none" ) < 0 && es -> i_id == p_sys -> i_default_sub_id ))
cond	92:24	98:62	15	es_idx >= 0 || ( p_sys -> i_default_sub_id >= 0 &&LanguageArrayIndex (p_sys -> ppsz_sub_language ,"none" ) < 0 && es -> i_id == p_sys -> i_default_sub_id )
water	92:24	0:0	16	es_idx
op	92:31	0:0	16	>=
water	92:34	0:0	16	0
op	92:36	0:0	16	||
water	95:24	0:0	16	(
water	95:26	0:0	16	p_sys
op	95:31	0:0	16	->
water	95:33	0:0	16	i_default_sub_id
op	95:50	0:0	16	>=
water	95:53	0:0	16	0
op	95:55	0:0	16	&&
call	97:26	97:79	16	LanguageArrayIndex
arg	97:46	97:70	17	p_sys->ppsz_sub_language
water	97:46	0:0	18	p_sys
op	97:51	0:0	18	->
water	97:53	0:0	18	ppsz_sub_language
arg	97:72	97:79	17	"none"
water	97:72	0:0	18	"none"
op	97:81	0:0	16	<
water	97:83	0:0	16	0
op	97:85	0:0	16	&&
water	98:26	0:0	16	es
op	98:28	0:0	16	->
water	98:30	0:0	16	i_id
op	98:35	0:0	16	==
water	98:38	0:0	16	p_sys
op	98:43	0:0	16	->
water	98:45	0:0	16	i_default_sub_id
water	98:62	0:0	16	)
stmts	99:24	99:48	15	
water	99:24	0:0	16	i_wanted
op	99:33	0:0	16	=
water	99:35	0:0	16	es
op	99:37	0:0	16	->
water	99:39	0:0	16	i_channel
water	99:48	0:0	16	;
water	100:16	0:0	14	}
else	101:16	111:16	12
stmts	102:16	111:16	13	
water	102:16	0:0	14	{
decl	103:20	105:80	14	int	selected_es_idx
op	103:40	0:0	14	=
call	104:24	105:79	15	LanguageArrayIndex
arg	104:44	104:68	16	p_sys->ppsz_sub_language
water	104:44	0:0	17	p_sys
op	104:49	0:0	17	->
water	104:51	0:0	17	ppsz_sub_language
arg	105:44	105:79	16	p_sys->p_es_sub->psz_language_code
water	105:44	0:0	17	p_sys
op	105:49	0:0	17	->
water	105:51	0:0	17	p_es_sub
op	105:59	0:0	17	->
water	105:61	0:0	17	psz_language_code
if	106:20	110:48	14	(es_idx >= 0 && ( selected_es_idx < 0 || es_idx < selected_es_idx || ( es_idx == selected_es_idx && p_sys -> p_es_sub -> fmt . i_priority < es -> fmt . i_priority ) ))
cond	106:24	109:83	15	es_idx >= 0 && ( selected_es_idx < 0 || es_idx < selected_es_idx || ( es_idx == selected_es_idx && p_sys -> p_es_sub -> fmt . i_priority < es -> fmt . i_priority ) )
water	106:24	0:0	16	es_idx
op	106:31	0:0	16	>=
water	106:34	0:0	16	0
op	106:36	0:0	16	&&
water	107:24	0:0	16	(
water	107:26	0:0	16	selected_es_idx
op	107:42	0:0	16	<
water	107:44	0:0	16	0
op	107:46	0:0	16	||
water	107:49	0:0	16	es_idx
op	107:56	0:0	16	<
water	107:58	0:0	16	selected_es_idx
op	107:74	0:0	16	||
water	108:26	0:0	16	(
water	108:28	0:0	16	es_idx
op	108:35	0:0	16	==
water	108:38	0:0	16	selected_es_idx
op	108:54	0:0	16	&&
water	109:28	0:0	16	p_sys
op	109:33	0:0	16	->
water	109:35	0:0	16	p_es_sub
op	109:43	0:0	16	->
water	109:45	0:0	16	fmt
op	109:48	0:0	16	.
water	109:49	0:0	16	i_priority
op	109:60	0:0	16	<
water	109:62	0:0	16	es
op	109:64	0:0	16	->
water	109:66	0:0	16	fmt
op	109:69	0:0	16	.
water	109:70	0:0	16	i_priority
water	109:81	0:0	16	)
water	109:83	0:0	16	)
stmts	110:24	110:48	15	
water	110:24	0:0	16	i_wanted
op	110:33	0:0	16	=
water	110:35	0:0	16	es
op	110:37	0:0	16	->
water	110:39	0:0	16	i_channel
water	110:48	0:0	16	;
water	111:16	0:0	14	}
water	112:12	0:0	12	}
else	113:12	126:12	10
stmts	114:12	126:12	11	
water	114:12	0:0	12	{
if	117:16	122:44	12	(( ! p_sys -> p_es_sub && ( p_sys -> i_default_sub_id >= 0 && es -> i_id == p_sys -> i_default_sub_id ) ) || ( p_sys -> p_es_sub && p_sys -> p_es_sub -> fmt . i_priority < es -> fmt . i_priority ))
cond	117:20	121:75	13	( ! p_sys -> p_es_sub && ( p_sys -> i_default_sub_id >= 0 && es -> i_id == p_sys -> i_default_sub_id ) ) || ( p_sys -> p_es_sub && p_sys -> p_es_sub -> fmt . i_priority < es -> fmt . i_priority )
water	117:20	0:0	14	(
op	117:22	0:0	14	!
water	117:23	0:0	14	p_sys
op	117:28	0:0	14	->
water	117:30	0:0	14	p_es_sub
op	117:39	0:0	14	&&
water	118:22	0:0	14	(
water	118:24	0:0	14	p_sys
op	118:29	0:0	14	->
water	118:31	0:0	14	i_default_sub_id
op	118:48	0:0	14	>=
water	118:51	0:0	14	0
op	118:53	0:0	14	&&
water	119:24	0:0	14	es
op	119:26	0:0	14	->
water	119:28	0:0	14	i_id
op	119:33	0:0	14	==
water	119:36	0:0	14	p_sys
op	119:41	0:0	14	->
water	119:43	0:0	14	i_default_sub_id
water	119:60	0:0	14	)
water	119:62	0:0	14	)
op	119:64	0:0	14	||
water	120:20	0:0	14	(
water	120:22	0:0	14	p_sys
op	120:27	0:0	14	->
water	120:29	0:0	14	p_es_sub
op	120:38	0:0	14	&&
water	121:22	0:0	14	p_sys
op	121:27	0:0	14	->
water	121:29	0:0	14	p_es_sub
op	121:37	0:0	14	->
water	121:39	0:0	14	fmt
op	121:42	0:0	14	.
water	121:43	0:0	14	i_priority
op	121:54	0:0	14	<
water	121:56	0:0	14	es
op	121:58	0:0	14	->
water	121:60	0:0	14	fmt
op	121:63	0:0	14	.
water	121:64	0:0	14	i_priority
water	121:75	0:0	14	)
stmts	122:20	122:44	13	
water	122:20	0:0	14	i_wanted
op	122:29	0:0	14	=
water	122:31	0:0	14	es
op	122:33	0:0	14	->
water	122:35	0:0	14	i_channel
water	122:44	0:0	14	;
else	123:16	125:57	12
stmts	123:21	125:57	13	
if	123:21	125:57	14	(p_sys -> p_es_sub && p_sys -> p_es_sub -> fmt . i_priority >= es -> fmt . i_priority)
cond	123:25	124:68	15	p_sys -> p_es_sub && p_sys -> p_es_sub -> fmt . i_priority >= es -> fmt . i_priority
water	123:25	0:0	16	p_sys
op	123:30	0:0	16	->
water	123:32	0:0	16	p_es_sub
op	123:41	0:0	16	&&
water	124:25	0:0	16	p_sys
op	124:30	0:0	16	->
water	124:32	0:0	16	p_es_sub
op	124:40	0:0	16	->
water	124:42	0:0	16	fmt
op	124:45	0:0	16	.
water	124:46	0:0	16	i_priority
op	124:57	0:0	16	>=
water	124:60	0:0	16	es
op	124:62	0:0	16	->
water	124:64	0:0	16	fmt
op	124:67	0:0	16	.
water	124:68	0:0	16	i_priority
stmts	125:20	125:57	15	
water	125:20	0:0	16	i_wanted
op	125:29	0:0	16	=
water	125:31	0:0	16	p_sys
op	125:36	0:0	16	->
water	125:38	0:0	16	p_es_sub
op	125:46	0:0	16	->
water	125:48	0:0	16	i_channel
water	125:57	0:0	16	;
water	126:12	0:0	12	}
if	127:12	128:45	10	(p_sys -> i_sub_last >= 0)
cond	127:16	127:37	11	p_sys -> i_sub_last >= 0
water	127:16	0:0	12	p_sys
op	127:21	0:0	12	->
water	127:23	0:0	12	i_sub_last
op	127:34	0:0	12	>=
water	127:37	0:0	12	0
stmts	128:16	128:45	11	
water	128:16	0:0	12	i_wanted
op	128:26	0:0	12	=
water	128:28	0:0	12	p_sys
op	128:33	0:0	12	->
water	128:35	0:0	12	i_sub_last
water	128:45	0:0	12	;
if	129:12	135:12	10	(p_sys -> i_sub_id >= 0)
cond	129:16	129:35	11	p_sys -> i_sub_id >= 0
water	129:16	0:0	12	p_sys
op	129:21	0:0	12	->
water	129:23	0:0	12	i_sub_id
op	129:32	0:0	12	>=
water	129:35	0:0	12	0
stmts	130:12	135:12	11	
water	130:12	0:0	12	{
if	131:16	132:44	12	(es -> i_id == p_sys -> i_sub_id)
cond	131:20	131:39	13	es -> i_id == p_sys -> i_sub_id
water	131:20	0:0	14	es
op	131:22	0:0	14	->
water	131:24	0:0	14	i_id
op	131:29	0:0	14	==
water	131:32	0:0	14	p_sys
op	131:37	0:0	14	->
water	131:39	0:0	14	i_sub_id
stmts	132:20	132:44	13	
water	132:20	0:0	14	i_wanted
op	132:29	0:0	14	=
water	132:31	0:0	14	es
op	132:33	0:0	14	->
water	132:35	0:0	14	i_channel
water	132:44	0:0	14	;
else	133:16	134:26	12
stmts	134:20	134:26	13	
return	134:20	134:26	14	
water	135:12	0:0	12	}
water	136:8	0:0	10	}
else	137:8	140:8	6
stmts	137:13	140:8	7	
if	137:13	140:8	8	(i_cat == VIDEO_ES)
cond	137:17	137:26	9	i_cat == VIDEO_ES
water	137:17	0:0	10	i_cat
op	137:23	0:0	10	==
water	137:26	0:0	10	VIDEO_ES
stmts	138:8	140:8	9	
water	138:8	0:0	10	{
water	139:12	0:0	10	i_wanted
op	139:22	0:0	10	=
water	139:24	0:0	10	es
op	139:26	0:0	10	->
water	139:28	0:0	10	i_channel
water	139:37	0:0	10	;
water	140:8	0:0	10	}
if	141:8	142:31	6	(i_wanted == es -> i_channel && !EsIsSelected (es ))
cond	141:12	141:59	7	i_wanted == es -> i_channel && !EsIsSelected (es )
water	141:12	0:0	8	i_wanted
op	141:21	0:0	8	==
water	141:24	0:0	8	es
op	141:26	0:0	8	->
water	141:28	0:0	8	i_channel
op	141:38	0:0	8	&&
op	141:41	0:0	8	!
call	141:42	141:59	8	EsIsSelected
arg	141:56	141:59	9	es
water	141:56	0:0	10	es
stmts	142:12	142:31	7	
call	142:12	142:30	8	EsSelect
arg	142:22	142:25	9	out
water	142:22	0:0	10	out
arg	142:27	142:30	9	es
water	142:27	0:0	10	es
water	142:31	0:0	8	;
water	143:4	0:0	6	}
if	145:4	173:4	2	(EsIsSelected (es ))
cond	145:8	145:25	3	EsIsSelected (es )
call	145:8	145:25	4	EsIsSelected
arg	145:22	145:25	5	es
water	145:22	0:0	6	es
stmts	146:4	173:4	3	
water	146:4	0:0	4	{
if	147:8	157:8	4	(i_cat == AUDIO_ES)
cond	147:12	147:21	5	i_cat == AUDIO_ES
water	147:12	0:0	6	i_cat
op	147:18	0:0	6	==
water	147:21	0:0	6	AUDIO_ES
stmts	148:8	157:8	5	
water	148:8	0:0	6	{
if	149:12	155:12	6	(p_sys -> i_mode == ES_OUT_MODE_AUTO && p_sys -> p_es_audio && p_sys -> p_es_audio != es &&EsIsSelected (p_sys -> p_es_audio ))
cond	149:16	152:48	7	p_sys -> i_mode == ES_OUT_MODE_AUTO && p_sys -> p_es_audio && p_sys -> p_es_audio != es &&EsIsSelected (p_sys -> p_es_audio )
water	149:16	0:0	8	p_sys
op	149:21	0:0	8	->
water	149:23	0:0	8	i_mode
op	149:30	0:0	8	==
water	149:33	0:0	8	ES_OUT_MODE_AUTO
op	149:50	0:0	8	&&
water	150:16	0:0	8	p_sys
op	150:21	0:0	8	->
water	150:23	0:0	8	p_es_audio
op	150:34	0:0	8	&&
water	151:16	0:0	8	p_sys
op	151:21	0:0	8	->
water	151:23	0:0	8	p_es_audio
op	151:34	0:0	8	!=
water	151:37	0:0	8	es
op	151:40	0:0	8	&&
call	152:16	152:48	8	EsIsSelected
arg	152:30	152:48	9	p_sys->p_es_audio
water	152:30	0:0	10	p_sys
op	152:35	0:0	10	->
water	152:37	0:0	10	p_es_audio
stmts	153:12	155:12	7	
water	153:12	0:0	8	{
call	154:16	154:58	8	EsUnselect
arg	154:28	154:31	9	out
water	154:28	0:0	10	out
arg	154:33	154:50	9	p_sys->p_es_audio
water	154:33	0:0	10	p_sys
op	154:38	0:0	10	->
water	154:40	0:0	10	p_es_audio
arg	154:52	154:58	9	false
water	154:52	0:0	10	false
water	154:59	0:0	8	;
water	155:12	0:0	8	}
water	156:12	0:0	6	p_sys
op	156:17	0:0	6	->
water	156:19	0:0	6	p_es_audio
op	156:30	0:0	6	=
water	156:32	0:0	6	es
water	156:34	0:0	6	;
water	157:8	0:0	6	}
else	158:8	168:8	4
stmts	158:13	168:8	5	
if	158:13	168:8	6	(i_cat == SPU_ES)
cond	158:17	158:26	7	i_cat == SPU_ES
water	158:17	0:0	8	i_cat
op	158:23	0:0	8	==
water	158:26	0:0	8	SPU_ES
stmts	159:8	168:8	7	
water	159:8	0:0	8	{
if	160:12	166:12	8	(p_sys -> i_mode == ES_OUT_MODE_AUTO && p_sys -> p_es_sub && p_sys -> p_es_sub != es &&EsIsSelected (p_sys -> p_es_sub ))
cond	160:16	163:46	9	p_sys -> i_mode == ES_OUT_MODE_AUTO && p_sys -> p_es_sub && p_sys -> p_es_sub != es &&EsIsSelected (p_sys -> p_es_sub )
water	160:16	0:0	10	p_sys
op	160:21	0:0	10	->
water	160:23	0:0	10	i_mode
op	160:30	0:0	10	==
water	160:33	0:0	10	ES_OUT_MODE_AUTO
op	160:50	0:0	10	&&
water	161:16	0:0	10	p_sys
op	161:21	0:0	10	->
water	161:23	0:0	10	p_es_sub
op	161:32	0:0	10	&&
water	162:16	0:0	10	p_sys
op	162:21	0:0	10	->
water	162:23	0:0	10	p_es_sub
op	162:32	0:0	10	!=
water	162:35	0:0	10	es
op	162:38	0:0	10	&&
call	163:16	163:46	10	EsIsSelected
arg	163:30	163:46	11	p_sys->p_es_sub
water	163:30	0:0	12	p_sys
op	163:35	0:0	12	->
water	163:37	0:0	12	p_es_sub
stmts	164:12	166:12	9	
water	164:12	0:0	10	{
call	165:16	165:56	10	EsUnselect
arg	165:28	165:31	11	out
water	165:28	0:0	12	out
arg	165:33	165:48	11	p_sys->p_es_sub
water	165:33	0:0	12	p_sys
op	165:38	0:0	12	->
water	165:40	0:0	12	p_es_sub
arg	165:50	165:56	11	false
water	165:50	0:0	12	false
water	165:57	0:0	10	;
water	166:12	0:0	10	}
water	167:12	0:0	8	p_sys
op	167:17	0:0	8	->
water	167:19	0:0	8	p_es_sub
op	167:28	0:0	8	=
water	167:30	0:0	8	es
water	167:32	0:0	8	;
water	168:8	0:0	8	}
else	169:8	172:8	4
stmts	169:13	172:8	5	
if	169:13	172:8	6	(i_cat == VIDEO_ES)
cond	169:17	169:26	7	i_cat == VIDEO_ES
water	169:17	0:0	8	i_cat
op	169:23	0:0	8	==
water	169:26	0:0	8	VIDEO_ES
stmts	170:8	172:8	7	
water	170:8	0:0	8	{
water	171:12	0:0	8	p_sys
op	171:17	0:0	8	->
water	171:19	0:0	8	p_es_video
op	171:30	0:0	8	=
water	171:32	0:0	8	es
water	171:34	0:0	8	;
water	172:8	0:0	8	}
water	173:4	0:0	4	}

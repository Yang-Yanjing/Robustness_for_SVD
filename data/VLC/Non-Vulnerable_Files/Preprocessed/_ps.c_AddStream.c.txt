func	2:0	111:0	0	static int	AddStream
params	2:20	0:0	1	
param	2:22	2:39	2	sout_mux_t *	p_mux
param	2:41	2:63	2	sout_input_t *	p_input
stmnts	0:0	110:23	1	
decl	4:4	4:41	2	sout_mux_sys_t	*p_sys
op	4:27	0:0	2	=
water	4:29	0:0	2	p_mux
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:25	2	ps_stream_t	*p_stream
call	6:4	7:45	2	msg_Dbg
arg	6:13	6:18	3	p_mux
water	6:13	0:0	4	p_mux
arg	6:20	6:46	3	"adding input codec=%4.4s"
water	6:20	0:0	4	"adding input codec=%4.4s"
arg	7:13	7:45	3	(char*)&p_input->p_fmt->i_codec
water	7:13	0:0	4	(
water	7:14	0:0	4	char
op	7:18	0:0	4	*
water	7:19	0:0	4	)
op	7:20	0:0	4	&
water	7:21	0:0	4	p_input
op	7:28	0:0	4	->
water	7:30	0:0	4	p_fmt
op	7:35	0:0	4	->
water	7:37	0:0	4	i_codec
water	7:46	0:0	2	;
water	8:4	0:0	2	p_input
op	8:11	0:0	2	->
water	8:13	0:0	2	p_sys
op	8:19	0:0	2	=
water	8:21	0:0	2	p_stream
op	8:30	0:0	2	=
call	8:32	8:62	2	malloc
arg	8:40	8:62	3	sizeof(ps_stream_t)
op	8:40	0:0	4	sizeof
water	8:46	0:0	4	(
water	8:48	0:0	4	ps_stream_t
water	8:60	0:0	4	)
water	8:63	0:0	2	;
water	9:4	0:0	2	p_stream
op	9:12	0:0	2	->
water	9:14	0:0	2	i_stream_type
op	9:28	0:0	2	=
water	9:30	0:0	2	0
water	9:31	0:0	2	x81
water	9:34	0:0	2	;
switch	11:4	58:4	2	(p_input -> p_fmt -> i_codec)
cond	11:12	11:28	3	p_input -> p_fmt -> i_codec
water	11:12	0:0	4	p_input
op	11:19	0:0	4	->
water	11:21	0:0	4	p_fmt
op	11:26	0:0	4	->
water	11:28	0:0	4	i_codec
stmts	12:4	58:4	3	
water	12:4	0:0	4	{
label	13:8	13:27	4	case VLC_CODEC_MPGV :
label	14:8	14:27	4	case VLC_CODEC_MP2V :
label	15:8	15:27	4	case VLC_CODEC_MP1V :
water	16:12	0:0	4	p_stream
op	16:20	0:0	4	->
water	16:22	0:0	4	i_stream_id
op	16:34	0:0	4	=
call	17:16	17:63	4	StreamIdGet
arg	17:29	17:50	5	p_sys->stream_id_mpgv
water	17:29	0:0	6	p_sys
op	17:34	0:0	6	->
water	17:36	0:0	6	stream_id_mpgv
arg	17:52	17:56	5	0xe0
water	17:52	0:0	6	0
water	17:53	0:0	6	xe0
arg	17:58	17:63	5	0xef
water	17:58	0:0	6	0
water	17:59	0:0	6	xef
water	17:64	0:0	4	;
water	18:12	0:0	4	p_stream
op	18:20	0:0	4	->
water	18:22	0:0	4	i_stream_type
op	18:36	0:0	4	=
water	18:38	0:0	4	0
water	18:39	0:0	4	x02
water	18:42	0:0	4	;
break	19:12	19:17	4	
label	20:8	20:27	4	case VLC_CODEC_MP4V :
water	21:12	0:0	4	p_stream
op	21:20	0:0	4	->
water	21:22	0:0	4	i_stream_id
op	21:34	0:0	4	=
call	22:16	22:63	4	StreamIdGet
arg	22:29	22:50	5	p_sys->stream_id_mpgv
water	22:29	0:0	6	p_sys
op	22:34	0:0	6	->
water	22:36	0:0	6	stream_id_mpgv
arg	22:52	22:56	5	0xe0
water	22:52	0:0	6	0
water	22:53	0:0	6	xe0
arg	22:58	22:63	5	0xef
water	22:58	0:0	6	0
water	22:59	0:0	6	xef
water	22:64	0:0	4	;
water	23:12	0:0	4	p_stream
op	23:20	0:0	4	->
water	23:22	0:0	4	i_stream_type
op	23:36	0:0	4	=
water	23:38	0:0	4	0
water	23:39	0:0	4	x10
water	23:42	0:0	4	;
break	24:12	24:17	4	
label	25:8	25:27	4	case VLC_CODEC_H264 :
water	26:12	0:0	4	p_stream
op	26:20	0:0	4	->
water	26:22	0:0	4	i_stream_id
op	26:34	0:0	4	=
call	27:16	27:63	4	StreamIdGet
arg	27:29	27:50	5	p_sys->stream_id_mpgv
water	27:29	0:0	6	p_sys
op	27:34	0:0	6	->
water	27:36	0:0	6	stream_id_mpgv
arg	27:52	27:56	5	0xe0
water	27:52	0:0	6	0
water	27:53	0:0	6	xe0
arg	27:58	27:63	5	0xef
water	27:58	0:0	6	0
water	27:59	0:0	6	xef
water	27:64	0:0	4	;
water	28:12	0:0	4	p_stream
op	28:20	0:0	4	->
water	28:22	0:0	4	i_stream_type
op	28:36	0:0	4	=
water	28:38	0:0	4	0
water	28:39	0:0	4	x1b
water	28:42	0:0	4	;
break	29:12	29:17	4	
label	30:8	30:31	4	case VLC_CODEC_DVD_LPCM :
water	31:12	0:0	4	p_stream
op	31:20	0:0	4	->
water	31:22	0:0	4	i_stream_id
op	31:34	0:0	4	=
water	32:16	0:0	4	0
water	32:17	0:0	4	xbd00
op	32:23	0:0	4	|
call	32:25	32:72	4	StreamIdGet
arg	32:38	32:59	5	p_sys->stream_id_lpcm
water	32:38	0:0	6	p_sys
op	32:43	0:0	6	->
water	32:45	0:0	6	stream_id_lpcm
arg	32:61	32:65	5	0xa0
water	32:61	0:0	6	0
water	32:62	0:0	6	xa0
arg	32:67	32:72	5	0xaf
water	32:67	0:0	6	0
water	32:68	0:0	6	xaf
water	32:73	0:0	4	;
break	33:12	33:17	4	
label	34:8	34:26	4	case VLC_CODEC_DTS :
water	35:12	0:0	4	p_stream
op	35:20	0:0	4	->
water	35:22	0:0	4	i_stream_id
op	35:34	0:0	4	=
water	36:16	0:0	4	0
water	36:17	0:0	4	xbd00
op	36:23	0:0	4	|
call	36:25	36:71	4	StreamIdGet
arg	36:38	36:58	5	p_sys->stream_id_dts
water	36:38	0:0	6	p_sys
op	36:43	0:0	6	->
water	36:45	0:0	6	stream_id_dts
arg	36:60	36:64	5	0x88
water	36:60	0:0	6	0
water	36:61	0:0	6	x88
arg	36:66	36:71	5	0x8f
water	36:66	0:0	6	0
water	36:67	0:0	6	x8f
water	36:72	0:0	4	;
break	37:12	37:17	4	
label	38:8	38:26	4	case VLC_CODEC_A52 :
water	39:12	0:0	4	p_stream
op	39:20	0:0	4	->
water	39:22	0:0	4	i_stream_id
op	39:34	0:0	4	=
water	40:16	0:0	4	0
water	40:17	0:0	4	xbd00
op	40:23	0:0	4	|
call	40:25	40:71	4	StreamIdGet
arg	40:38	40:58	5	p_sys->stream_id_a52
water	40:38	0:0	6	p_sys
op	40:43	0:0	6	->
water	40:45	0:0	6	stream_id_a52
arg	40:60	40:64	5	0x80
water	40:60	0:0	6	0
water	40:61	0:0	6	x80
arg	40:66	40:71	5	0x87
water	40:66	0:0	6	0
water	40:67	0:0	6	x87
water	40:72	0:0	4	;
break	41:12	41:17	4	
label	42:8	42:27	4	case VLC_CODEC_MPGA :
water	43:12	0:0	4	p_stream
op	43:20	0:0	4	->
water	43:22	0:0	4	i_stream_id
op	43:34	0:0	4	=
call	44:16	44:63	4	StreamIdGet
arg	44:29	44:50	5	p_sys->stream_id_mpga
water	44:29	0:0	6	p_sys
op	44:34	0:0	6	->
water	44:36	0:0	6	stream_id_mpga
arg	44:52	44:56	5	0xc0
water	44:52	0:0	6	0
water	44:53	0:0	6	xc0
arg	44:58	44:63	5	0xcf
water	44:58	0:0	6	0
water	44:59	0:0	6	xcf
water	44:64	0:0	4	;
water	45:12	0:0	4	p_stream
op	45:20	0:0	4	->
water	45:22	0:0	4	i_stream_type
op	45:36	0:0	4	=
water	45:38	0:0	4	0
water	45:39	0:0	4	x03
water	45:42	0:0	4	;
break	46:12	46:17	4	
label	47:8	47:27	4	case VLC_CODEC_MP4A :
water	48:12	0:0	4	p_stream
op	48:20	0:0	4	->
water	48:22	0:0	4	i_stream_id
op	48:34	0:0	4	=
call	49:16	49:63	4	StreamIdGet
arg	49:29	49:50	5	p_sys->stream_id_mpga
water	49:29	0:0	6	p_sys
op	49:34	0:0	6	->
water	49:36	0:0	6	stream_id_mpga
arg	49:52	49:56	5	0xc0
water	49:52	0:0	6	0
water	49:53	0:0	6	xc0
arg	49:58	49:63	5	0xcf
water	49:58	0:0	6	0
water	49:59	0:0	6	xcf
water	49:64	0:0	4	;
water	50:12	0:0	4	p_stream
op	50:20	0:0	4	->
water	50:22	0:0	4	i_stream_type
op	50:36	0:0	4	=
water	50:38	0:0	4	0
water	50:39	0:0	4	x0f
water	50:42	0:0	4	;
break	51:12	51:17	4	
label	52:8	52:26	4	case VLC_CODEC_SPU :
water	53:12	0:0	4	p_stream
op	53:20	0:0	4	->
water	53:22	0:0	4	i_stream_id
op	53:34	0:0	4	=
water	54:16	0:0	4	0
water	54:17	0:0	4	xbd00
op	54:23	0:0	4	|
call	54:25	54:71	4	StreamIdGet
arg	54:38	54:58	5	p_sys->stream_id_spu
water	54:38	0:0	6	p_sys
op	54:43	0:0	6	->
water	54:45	0:0	6	stream_id_spu
arg	54:60	54:64	5	0x20
water	54:60	0:0	6	0
water	54:61	0:0	6	x20
arg	54:66	54:71	5	0x3f
water	54:66	0:0	6	0
water	54:67	0:0	6	x3f
water	54:72	0:0	4	;
break	55:12	55:17	4	
label	56:8	56:15	4	default :
goto	57:12	57:22	4	error
water	57:17	0:0	5	error
water	58:4	0:0	4	}
if	59:4	59:46	2	(p_stream -> i_stream_id < 0)
cond	59:8	59:32	3	p_stream -> i_stream_id < 0
water	59:8	0:0	4	p_stream
op	59:16	0:0	4	->
water	59:18	0:0	4	i_stream_id
op	59:30	0:0	4	<
water	59:32	0:0	4	0
stmts	59:36	59:46	3	
goto	59:36	59:46	4	error
water	59:41	0:0	5	error
if	60:4	64:4	2	(p_input -> p_fmt -> i_cat == AUDIO_ES)
cond	60:8	60:33	3	p_input -> p_fmt -> i_cat == AUDIO_ES
water	60:8	0:0	4	p_input
op	60:15	0:0	4	->
water	60:17	0:0	4	p_fmt
op	60:22	0:0	4	->
water	60:24	0:0	4	i_cat
op	60:30	0:0	4	==
water	60:33	0:0	4	AUDIO_ES
stmts	61:4	64:4	3	
water	61:4	0:0	4	{
water	62:8	0:0	4	p_sys
op	62:13	0:0	4	->
water	62:15	0:0	4	i_audio_bound
op	62:28	0:0	4	++
water	62:30	0:0	4	;
water	63:8	0:0	4	p_stream
op	63:16	0:0	4	->
water	63:18	0:0	4	i_max_buff_size
op	63:34	0:0	4	=
water	63:36	0:0	4	4
op	63:38	0:0	4	*
water	63:40	0:0	4	1024
water	63:44	0:0	4	;
water	64:4	0:0	4	}
else	65:4	70:4	2
stmts	65:9	70:4	3	
if	65:9	70:4	4	(p_input -> p_fmt -> i_cat == VIDEO_ES)
cond	65:13	65:38	5	p_input -> p_fmt -> i_cat == VIDEO_ES
water	65:13	0:0	6	p_input
op	65:20	0:0	6	->
water	65:22	0:0	6	p_fmt
op	65:27	0:0	6	->
water	65:29	0:0	6	i_cat
op	65:35	0:0	6	==
water	65:38	0:0	6	VIDEO_ES
stmts	66:4	70:4	5	
water	66:4	0:0	6	{
water	67:8	0:0	6	p_sys
op	67:13	0:0	6	->
water	67:15	0:0	6	i_video_bound
op	67:28	0:0	6	++
water	67:30	0:0	6	;
water	68:8	0:0	6	p_stream
op	68:16	0:0	6	->
water	68:18	0:0	6	i_max_buff_size
op	68:34	0:0	6	=
water	68:36	0:0	6	400
op	68:40	0:0	6	*
water	68:42	0:0	6	1024
water	68:46	0:0	6	;
water	70:4	0:0	6	}
else	71:4	74:4	2
stmts	72:4	74:4	3	
water	72:4	0:0	4	{
water	73:8	0:0	4	p_stream
op	73:16	0:0	4	->
water	73:18	0:0	4	i_max_buff_size
op	73:34	0:0	4	=
water	73:36	0:0	4	4
op	73:38	0:0	4	*
water	73:40	0:0	4	1024
water	73:44	0:0	4	;
water	74:4	0:0	4	}
water	76:4	0:0	2	p_sys
op	76:9	0:0	2	->
water	76:11	0:0	2	i_instant_bitrate
op	76:29	0:0	2	+=
water	76:32	0:0	2	p_input
op	76:39	0:0	2	->
water	76:41	0:0	2	p_fmt
op	76:46	0:0	2	->
water	76:48	0:0	2	i_bitrate
op	76:58	0:0	2	+
water	76:60	0:0	2	1000
water	76:78	0:0	2	;
water	79:4	0:0	2	p_sys
op	79:9	0:0	2	->
water	79:11	0:0	2	i_rate_bound
op	79:24	0:0	2	+=
water	79:27	0:0	2	p_input
op	79:34	0:0	2	->
water	79:36	0:0	2	p_fmt
op	79:41	0:0	2	->
water	79:43	0:0	2	i_bitrate
op	79:53	0:0	2	*
water	79:55	0:0	2	2
op	79:57	0:0	2	/
water	79:59	0:0	2	(
water	79:60	0:0	2	8
op	79:62	0:0	2	*
water	79:64	0:0	2	50
water	79:66	0:0	2	)
water	79:67	0:0	2	;
water	80:4	0:0	2	p_sys
op	80:9	0:0	2	->
water	80:11	0:0	2	i_psm_version
op	80:24	0:0	2	++
water	80:26	0:0	2	;
water	81:4	0:0	2	p_stream
op	81:12	0:0	2	->
water	81:14	0:0	2	lang
op	81:18	0:0	2	[
water	81:19	0:0	2	0
op	81:20	0:0	2	]
op	81:22	0:0	2	=
water	81:24	0:0	2	p_stream
op	81:32	0:0	2	->
water	81:34	0:0	2	lang
op	81:38	0:0	2	[
water	81:39	0:0	2	1
op	81:40	0:0	2	]
op	81:42	0:0	2	=
water	81:44	0:0	2	p_stream
op	81:52	0:0	2	->
water	81:54	0:0	2	lang
op	81:58	0:0	2	[
water	81:59	0:0	2	2
op	81:60	0:0	2	]
op	81:62	0:0	2	=
water	81:64	0:0	2	0
water	81:65	0:0	2	;
if	82:4	106:4	2	(p_input -> p_fmt -> psz_language)
cond	82:8	82:24	3	p_input -> p_fmt -> psz_language
water	82:8	0:0	4	p_input
op	82:15	0:0	4	->
water	82:17	0:0	4	p_fmt
op	82:22	0:0	4	->
water	82:24	0:0	4	psz_language
stmts	83:4	106:4	3	
water	83:4	0:0	4	{
decl	84:8	84:48	4	char	*psz
op	84:18	0:0	4	=
water	84:20	0:0	4	p_input
op	84:27	0:0	4	->
water	84:29	0:0	4	p_fmt
op	84:34	0:0	4	->
water	84:36	0:0	4	psz_language
decl	85:8	85:38	4	const iso639_lang_t	*pl
op	85:32	0:0	4	=
water	85:34	0:0	4	NULL
if	86:8	89:8	4	(strlen (psz ) == 2)
cond	86:12	86:29	5	strlen (psz ) == 2
call	86:12	86:24	6	strlen
arg	86:20	86:24	7	psz
water	86:20	0:0	8	psz
op	86:26	0:0	6	==
water	86:29	0:0	6	2
stmts	87:8	89:8	5	
water	87:8	0:0	6	{
water	88:12	0:0	6	pl
op	88:15	0:0	6	=
call	88:17	88:32	6	GetLang_1
arg	88:28	88:32	7	psz
water	88:28	0:0	8	psz
water	88:33	0:0	6	;
water	89:8	0:0	6	}
else	90:8	97:8	4
stmts	90:13	97:8	5	
if	90:13	97:8	6	(strlen (psz ) == 3)
cond	90:17	90:34	7	strlen (psz ) == 3
call	90:17	90:29	8	strlen
arg	90:25	90:29	9	psz
water	90:25	0:0	10	psz
op	90:31	0:0	8	==
water	90:34	0:0	8	3
stmts	91:8	97:8	7	
water	91:8	0:0	8	{
water	92:12	0:0	8	pl
op	92:15	0:0	8	=
call	92:17	92:33	8	GetLang_2B
arg	92:29	92:33	9	psz
water	92:29	0:0	10	psz
water	92:34	0:0	8	;
if	93:12	96:12	8	(!strcmp (pl -> psz_iso639_1 ,"??" ))
cond	93:16	93:48	9	!strcmp (pl -> psz_iso639_1 ,"??" )
op	93:16	0:0	10	!
call	93:17	93:48	10	strcmp
arg	93:25	93:41	11	pl->psz_iso639_1
water	93:25	0:0	12	pl
op	93:27	0:0	12	->
water	93:29	0:0	12	psz_iso639_1
arg	93:43	93:48	11	"??"
water	93:43	0:0	12	"??"
stmts	94:12	96:12	9	
water	94:12	0:0	10	{
water	95:16	0:0	10	pl
op	95:19	0:0	10	=
call	95:21	95:37	10	GetLang_2T
arg	95:33	95:37	11	psz
water	95:33	0:0	12	psz
water	95:38	0:0	10	;
water	96:12	0:0	10	}
water	97:8	0:0	8	}
if	98:8	105:8	4	(pl &&strcmp (pl -> psz_iso639_1 ,"??" ))
cond	98:12	98:49	5	pl &&strcmp (pl -> psz_iso639_1 ,"??" )
water	98:12	0:0	6	pl
op	98:15	0:0	6	&&
call	98:18	98:49	6	strcmp
arg	98:26	98:42	7	pl->psz_iso639_1
water	98:26	0:0	8	pl
op	98:28	0:0	8	->
water	98:30	0:0	8	psz_iso639_1
arg	98:44	98:49	7	"??"
water	98:44	0:0	8	"??"
stmts	99:8	105:8	5	
water	99:8	0:0	6	{
water	100:12	0:0	6	p_stream
op	100:20	0:0	6	->
water	100:22	0:0	6	lang
op	100:26	0:0	6	[
water	100:27	0:0	6	0
op	100:28	0:0	6	]
op	100:30	0:0	6	=
water	100:32	0:0	6	pl
op	100:34	0:0	6	->
water	100:36	0:0	6	psz_iso639_2T
op	100:49	0:0	6	[
water	100:50	0:0	6	0
op	100:51	0:0	6	]
water	100:52	0:0	6	;
water	101:12	0:0	6	p_stream
op	101:20	0:0	6	->
water	101:22	0:0	6	lang
op	101:26	0:0	6	[
water	101:27	0:0	6	1
op	101:28	0:0	6	]
op	101:30	0:0	6	=
water	101:32	0:0	6	pl
op	101:34	0:0	6	->
water	101:36	0:0	6	psz_iso639_2T
op	101:49	0:0	6	[
water	101:50	0:0	6	1
op	101:51	0:0	6	]
water	101:52	0:0	6	;
water	102:12	0:0	6	p_stream
op	102:20	0:0	6	->
water	102:22	0:0	6	lang
op	102:26	0:0	6	[
water	102:27	0:0	6	2
op	102:28	0:0	6	]
op	102:30	0:0	6	=
water	102:32	0:0	6	pl
op	102:34	0:0	6	->
water	102:36	0:0	6	psz_iso639_2T
op	102:49	0:0	6	[
water	102:50	0:0	6	2
op	102:51	0:0	6	]
water	102:52	0:0	6	;
call	103:12	104:77	6	msg_Dbg
arg	103:21	103:26	7	p_mux
water	103:21	0:0	8	p_mux
arg	103:28	103:47	7	"    - lang=%c%c%c"
water	103:28	0:0	8	"    - lang=%c%c%c"
arg	104:21	104:38	7	p_stream->lang[0]
water	104:21	0:0	8	p_stream
op	104:29	0:0	8	->
water	104:31	0:0	8	lang
op	104:35	0:0	8	[
water	104:36	0:0	8	0
op	104:37	0:0	8	]
arg	104:40	104:57	7	p_stream->lang[1]
water	104:40	0:0	8	p_stream
op	104:48	0:0	8	->
water	104:50	0:0	8	lang
op	104:54	0:0	8	[
water	104:55	0:0	8	1
op	104:56	0:0	8	]
arg	104:59	104:77	7	p_stream->lang[2]
water	104:59	0:0	8	p_stream
op	104:67	0:0	8	->
water	104:69	0:0	8	lang
op	104:73	0:0	8	[
water	104:74	0:0	8	2
op	104:75	0:0	8	]
water	104:78	0:0	6	;
water	105:8	0:0	6	}
water	106:4	0:0	4	}
return	107:4	107:22	2	VLC_SUCCESS
water	107:11	0:0	3	VLC_SUCCESS
label	108:0	108:5	2	error :
call	109:4	109:19	2	free
arg	109:10	109:19	3	p_stream
water	109:10	0:0	4	p_stream
water	109:20	0:0	2	;
return	110:4	110:23	2	VLC_EGENERIC
water	110:11	0:0	3	VLC_EGENERIC

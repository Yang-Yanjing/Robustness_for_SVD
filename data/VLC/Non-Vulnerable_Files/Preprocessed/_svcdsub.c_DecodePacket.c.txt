func	2:0	52:0	0	static subpicture_t *	DecodePacket
params	2:33	0:0	1	
param	2:35	2:51	2	decoder_t *	p_dec
param	2:53	2:69	2	block_t *	p_data
stmnts	0:0	51:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:24	2	subpicture_t	*p_spu
decl	6:4	6:33	2	subpicture_region_t	*p_region
decl	7:4	7:22	2	video_format_t	fmt
decl	8:4	8:27	2	video_palette_t	palette
decl	9:4	9:9	2	int	i
water	11:4	0:0	2	p_spu
op	11:10	0:0	2	=
call	11:12	11:47	2	decoder_NewSubpicture
arg	11:35	11:40	3	p_dec
water	11:35	0:0	4	p_dec
arg	11:42	11:47	3	NULL
water	11:42	0:0	4	NULL
water	11:48	0:0	2	;
if	12:4	12:28	2	(! p_spu)
cond	12:8	12:9	3	! p_spu
op	12:8	0:0	4	!
water	12:9	0:0	4	p_spu
stmts	12:17	12:28	3	
return	12:17	12:28	4	NULL
water	12:24	0:0	5	NULL
water	13:4	0:0	2	p_spu
op	13:9	0:0	2	->
water	13:11	0:0	2	i_start
op	13:19	0:0	2	=
water	13:21	0:0	2	p_data
op	13:27	0:0	2	->
water	13:29	0:0	2	i_pts
water	13:34	0:0	2	;
water	14:4	0:0	2	p_spu
op	14:9	0:0	2	->
water	14:11	0:0	2	i_stop
op	14:19	0:0	2	=
water	14:21	0:0	2	p_data
op	14:27	0:0	2	->
water	14:29	0:0	2	i_pts
op	14:35	0:0	2	+
water	14:37	0:0	2	p_sys
op	14:42	0:0	2	->
water	14:44	0:0	2	i_duration
water	14:54	0:0	2	;
water	15:4	0:0	2	p_spu
op	15:9	0:0	2	->
water	15:11	0:0	2	b_ephemer
op	15:21	0:0	2	=
water	15:23	0:0	2	true
water	15:27	0:0	2	;
call	17:4	17:44	2	memset
arg	17:12	17:16	3	&fmt
op	17:12	0:0	4	&
water	17:13	0:0	4	fmt
arg	17:18	17:19	3	0
water	17:18	0:0	4	0
arg	17:21	17:44	3	sizeof(video_format_t)
op	17:21	0:0	4	sizeof
water	17:27	0:0	4	(
water	17:28	0:0	4	video_format_t
water	17:42	0:0	4	)
water	17:45	0:0	2	;
water	18:4	0:0	2	fmt
op	18:7	0:0	2	.
water	18:8	0:0	2	i_chroma
op	18:17	0:0	2	=
water	18:19	0:0	2	VLC_CODEC_YUVP
water	18:33	0:0	2	;
water	26:4	0:0	2	fmt
op	26:7	0:0	2	.
water	26:8	0:0	2	i_sar_num
op	26:18	0:0	2	=
water	26:20	0:0	2	p_sys
op	26:25	0:0	2	->
water	26:27	0:0	2	i_height
water	26:35	0:0	2	;
water	27:4	0:0	2	fmt
op	27:7	0:0	2	.
water	27:8	0:0	2	i_sar_den
op	27:18	0:0	2	=
water	27:20	0:0	2	p_sys
op	27:25	0:0	2	->
water	27:27	0:0	2	i_width
water	27:34	0:0	2	;
water	28:4	0:0	2	fmt
op	28:7	0:0	2	.
water	28:8	0:0	2	i_width
op	28:16	0:0	2	=
water	28:18	0:0	2	fmt
op	28:21	0:0	2	.
water	28:22	0:0	2	i_visible_width
op	28:38	0:0	2	=
water	28:40	0:0	2	p_sys
op	28:45	0:0	2	->
water	28:47	0:0	2	i_width
water	28:54	0:0	2	;
water	29:4	0:0	2	fmt
op	29:7	0:0	2	.
water	29:8	0:0	2	i_height
op	29:17	0:0	2	=
water	29:19	0:0	2	fmt
op	29:22	0:0	2	.
water	29:23	0:0	2	i_visible_height
op	29:40	0:0	2	=
water	29:42	0:0	2	p_sys
op	29:47	0:0	2	->
water	29:49	0:0	2	i_height
water	29:57	0:0	2	;
water	30:4	0:0	2	fmt
op	30:7	0:0	2	.
water	30:8	0:0	2	i_x_offset
op	30:19	0:0	2	=
water	30:21	0:0	2	fmt
op	30:24	0:0	2	.
water	30:25	0:0	2	i_y_offset
op	30:36	0:0	2	=
water	30:38	0:0	2	0
water	30:39	0:0	2	;
water	31:4	0:0	2	fmt
op	31:7	0:0	2	.
water	31:8	0:0	2	p_palette
op	31:18	0:0	2	=
op	31:20	0:0	2	&
water	31:21	0:0	2	palette
water	31:28	0:0	2	;
water	32:4	0:0	2	fmt
op	32:7	0:0	2	.
water	32:8	0:0	2	p_palette
op	32:17	0:0	2	->
water	32:19	0:0	2	i_entries
op	32:29	0:0	2	=
water	32:31	0:0	2	4
water	32:32	0:0	2	;
for	33:4	39:4	2	(i = 0 ;i < fmt . p_palette -> i_entries;i ++)
forinit	33:9	33:14	3	i = 0 ;
water	33:9	0:0	4	i
op	33:11	0:0	4	=
water	33:13	0:0	4	0
water	33:14	0:0	4	;
cond	33:16	33:35	3	i < fmt . p_palette -> i_entries
water	33:16	0:0	4	i
op	33:18	0:0	4	<
water	33:20	0:0	4	fmt
op	33:23	0:0	4	.
water	33:24	0:0	4	p_palette
op	33:33	0:0	4	->
water	33:35	0:0	4	i_entries
forexpr	33:46	33:47	3	i ++
water	33:46	0:0	4	i
op	33:47	0:0	4	++
stmts	34:4	39:4	3	
water	34:4	0:0	4	{
water	35:8	0:0	4	fmt
op	35:11	0:0	4	.
water	35:12	0:0	4	p_palette
op	35:21	0:0	4	->
water	35:23	0:0	4	palette
op	35:30	0:0	4	[
water	35:31	0:0	4	i
op	35:32	0:0	4	]
op	35:33	0:0	4	[
water	35:34	0:0	4	0
op	35:35	0:0	4	]
op	35:37	0:0	4	=
water	35:39	0:0	4	p_sys
op	35:44	0:0	4	->
water	35:46	0:0	4	p_palette
op	35:55	0:0	4	[
water	35:56	0:0	4	i
op	35:57	0:0	4	]
op	35:58	0:0	4	[
water	35:59	0:0	4	0
op	35:60	0:0	4	]
water	35:61	0:0	4	;
water	36:8	0:0	4	fmt
op	36:11	0:0	4	.
water	36:12	0:0	4	p_palette
op	36:21	0:0	4	->
water	36:23	0:0	4	palette
op	36:30	0:0	4	[
water	36:31	0:0	4	i
op	36:32	0:0	4	]
op	36:33	0:0	4	[
water	36:34	0:0	4	1
op	36:35	0:0	4	]
op	36:37	0:0	4	=
water	36:39	0:0	4	p_sys
op	36:44	0:0	4	->
water	36:46	0:0	4	p_palette
op	36:55	0:0	4	[
water	36:56	0:0	4	i
op	36:57	0:0	4	]
op	36:58	0:0	4	[
water	36:59	0:0	4	1
op	36:60	0:0	4	]
water	36:61	0:0	4	;
water	37:8	0:0	4	fmt
op	37:11	0:0	4	.
water	37:12	0:0	4	p_palette
op	37:21	0:0	4	->
water	37:23	0:0	4	palette
op	37:30	0:0	4	[
water	37:31	0:0	4	i
op	37:32	0:0	4	]
op	37:33	0:0	4	[
water	37:34	0:0	4	2
op	37:35	0:0	4	]
op	37:37	0:0	4	=
water	37:39	0:0	4	p_sys
op	37:44	0:0	4	->
water	37:46	0:0	4	p_palette
op	37:55	0:0	4	[
water	37:56	0:0	4	i
op	37:57	0:0	4	]
op	37:58	0:0	4	[
water	37:59	0:0	4	2
op	37:60	0:0	4	]
water	37:61	0:0	4	;
water	38:8	0:0	4	fmt
op	38:11	0:0	4	.
water	38:12	0:0	4	p_palette
op	38:21	0:0	4	->
water	38:23	0:0	4	palette
op	38:30	0:0	4	[
water	38:31	0:0	4	i
op	38:32	0:0	4	]
op	38:33	0:0	4	[
water	38:34	0:0	4	3
op	38:35	0:0	4	]
op	38:37	0:0	4	=
water	38:39	0:0	4	p_sys
op	38:44	0:0	4	->
water	38:46	0:0	4	p_palette
op	38:55	0:0	4	[
water	38:56	0:0	4	i
op	38:57	0:0	4	]
op	38:58	0:0	4	[
water	38:59	0:0	4	3
op	38:60	0:0	4	]
water	38:61	0:0	4	;
water	39:4	0:0	4	}
water	40:4	0:0	2	p_region
op	40:13	0:0	2	=
call	40:15	40:43	2	subpicture_region_New
arg	40:38	40:43	3	&fmt
op	40:38	0:0	4	&
water	40:39	0:0	4	fmt
water	40:44	0:0	2	;
if	41:4	46:4	2	(! p_region)
cond	41:8	41:9	3	! p_region
op	41:8	0:0	4	!
water	41:9	0:0	4	p_region
stmts	42:4	46:4	3	
water	42:4	0:0	4	{
call	43:8	43:63	4	msg_Err
arg	43:17	43:22	5	p_dec
water	43:17	0:0	6	p_dec
arg	43:24	43:63	5	"cannot allocate SVCD subtitle region"
water	43:24	0:0	6	"cannot allocate SVCD subtitle region"
water	43:64	0:0	4	;
call	44:8	44:47	4	decoder_DeleteSubpicture
arg	44:34	44:39	5	p_dec
water	44:34	0:0	6	p_dec
arg	44:41	44:47	5	p_spu
water	44:41	0:0	6	p_spu
water	44:48	0:0	4	;
return	45:8	45:19	4	NULL
water	45:15	0:0	5	NULL
water	46:4	0:0	4	}
water	47:4	0:0	2	p_spu
op	47:9	0:0	2	->
water	47:11	0:0	2	p_region
op	47:20	0:0	2	=
water	47:22	0:0	2	p_region
water	47:30	0:0	2	;
water	48:4	0:0	2	p_region
op	48:12	0:0	2	->
water	48:14	0:0	2	i_x
op	48:18	0:0	2	=
water	48:20	0:0	2	p_sys
op	48:25	0:0	2	->
water	48:27	0:0	2	i_x_start
water	48:36	0:0	2	;
water	49:4	0:0	2	p_region
op	49:12	0:0	2	->
water	49:14	0:0	2	i_y
op	49:18	0:0	2	=
water	49:20	0:0	2	p_sys
op	49:25	0:0	2	->
water	49:27	0:0	2	i_y_start
water	49:36	0:0	2	;
call	50:4	50:48	2	SVCDSubRenderImage
arg	50:24	50:29	3	p_dec
water	50:24	0:0	4	p_dec
arg	50:31	50:37	3	p_data
water	50:31	0:0	4	p_data
arg	50:39	50:48	3	p_region
water	50:39	0:0	4	p_region
water	50:49	0:0	2	;
return	51:4	51:16	2	p_spu
water	51:11	0:0	3	p_spu

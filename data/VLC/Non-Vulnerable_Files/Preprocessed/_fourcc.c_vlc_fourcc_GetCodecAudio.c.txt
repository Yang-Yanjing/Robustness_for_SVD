func	2:0	70:0	0	vlc_fourcc_t	vlc_fourcc_GetCodecAudio
params	2:37	0:0	1	
param	2:39	2:60	2	vlc_fourcc_t	i_fourcc
param	2:62	2:73	2	int	i_bits
stmnts	0:0	69:4	1	
decl	4:4	4:42	2	const int	i_bytes
op	4:22	0:0	2	=
water	4:24	0:0	2	(
water	4:26	0:0	2	i_bits
op	4:33	0:0	2	+
water	4:35	0:0	2	7
water	4:37	0:0	2	)
op	4:39	0:0	2	/
water	4:41	0:0	2	8
if	5:4	16:4	2	(i_fourcc ==VLC_FOURCC ('a' ,'f' ,'l' ,'t' ))
cond	5:8	5:51	3	i_fourcc ==VLC_FOURCC ('a' ,'f' ,'l' ,'t' )
water	5:8	0:0	4	i_fourcc
op	5:17	0:0	4	==
call	5:20	5:51	4	VLC_FOURCC
arg	5:32	5:35	5	'a'
water	5:32	0:0	6	'a'
arg	5:37	5:40	5	'f'
water	5:37	0:0	6	'f'
arg	5:42	5:45	5	'l'
water	5:42	0:0	6	'l'
arg	5:47	5:51	5	't'
water	5:47	0:0	6	't'
stmts	6:4	16:4	3	
water	6:4	0:0	4	{
switch	7:8	15:8	4	(i_bytes)
cond	7:16	7:16	5	i_bytes
water	7:16	0:0	6	i_bytes
stmts	8:8	15:8	5	
water	8:8	0:0	6	{
label	9:8	9:14	6	case 4 :
return	10:12	10:33	6	VLC_CODEC_FL32
water	10:19	0:0	7	VLC_CODEC_FL32
label	11:8	11:14	6	case 8 :
return	12:12	12:33	6	VLC_CODEC_FL64
water	12:19	0:0	7	VLC_CODEC_FL64
label	13:8	13:15	6	default :
return	14:12	14:20	6	0
water	14:19	0:0	7	0
water	15:8	0:0	6	}
water	16:4	0:0	4	}
else	17:4	33:4	2
stmts	17:9	33:4	3	
if	17:9	33:4	4	(i_fourcc ==VLC_FOURCC ('a' ,'r' ,'a' ,'w' ))
cond	17:13	17:56	5	i_fourcc ==VLC_FOURCC ('a' ,'r' ,'a' ,'w' )
water	17:13	0:0	6	i_fourcc
op	17:22	0:0	6	==
call	17:25	17:56	6	VLC_FOURCC
arg	17:37	17:40	7	'a'
water	17:37	0:0	8	'a'
arg	17:42	17:45	7	'r'
water	17:42	0:0	8	'r'
arg	17:47	17:50	7	'a'
water	17:47	0:0	8	'a'
arg	17:52	17:56	7	'w'
water	17:52	0:0	8	'w'
stmts	18:4	33:4	5	
water	18:4	0:0	6	{
switch	19:8	32:8	6	(i_bytes)
cond	19:16	19:16	7	i_bytes
water	19:16	0:0	8	i_bytes
stmts	20:8	32:8	7	
water	20:8	0:0	8	{
label	21:8	21:14	8	case 1 :
return	22:12	22:31	8	VLC_CODEC_U8
water	22:19	0:0	9	VLC_CODEC_U8
label	23:8	23:14	8	case 2 :
return	24:12	24:33	8	VLC_CODEC_S16L
water	24:19	0:0	9	VLC_CODEC_S16L
label	25:8	25:14	8	case 3 :
return	26:12	26:33	8	VLC_CODEC_S24L
water	26:19	0:0	9	VLC_CODEC_S24L
break	27:12	27:17	8	
label	28:8	28:14	8	case 4 :
return	29:12	29:33	8	VLC_CODEC_S32L
water	29:19	0:0	9	VLC_CODEC_S32L
label	30:8	30:15	8	default :
return	31:12	31:20	8	0
water	31:19	0:0	9	0
water	32:8	0:0	8	}
water	33:4	0:0	6	}
else	34:4	49:4	2
stmts	34:9	49:4	3	
if	34:9	49:4	4	(i_fourcc ==VLC_FOURCC ('t' ,'w' ,'o' ,'s' ))
cond	34:13	34:56	5	i_fourcc ==VLC_FOURCC ('t' ,'w' ,'o' ,'s' )
water	34:13	0:0	6	i_fourcc
op	34:22	0:0	6	==
call	34:25	34:56	6	VLC_FOURCC
arg	34:37	34:40	7	't'
water	34:37	0:0	8	't'
arg	34:42	34:45	7	'w'
water	34:42	0:0	8	'w'
arg	34:47	34:50	7	'o'
water	34:47	0:0	8	'o'
arg	34:52	34:56	7	's'
water	34:52	0:0	8	's'
stmts	35:4	49:4	5	
water	35:4	0:0	6	{
switch	36:8	48:8	6	(i_bytes)
cond	36:16	36:16	7	i_bytes
water	36:16	0:0	8	i_bytes
stmts	37:8	48:8	7	
water	37:8	0:0	8	{
label	38:8	38:14	8	case 1 :
return	39:12	39:31	8	VLC_CODEC_S8
water	39:19	0:0	9	VLC_CODEC_S8
label	40:8	40:14	8	case 2 :
return	41:12	41:33	8	VLC_CODEC_S16B
water	41:19	0:0	9	VLC_CODEC_S16B
label	42:8	42:14	8	case 3 :
return	43:12	43:33	8	VLC_CODEC_S24B
water	43:19	0:0	9	VLC_CODEC_S24B
label	44:8	44:14	8	case 4 :
return	45:12	45:33	8	VLC_CODEC_S32B
water	45:19	0:0	9	VLC_CODEC_S32B
label	46:8	46:15	8	default :
return	47:12	47:20	8	0
water	47:19	0:0	9	0
water	48:8	0:0	8	}
water	49:4	0:0	6	}
else	50:4	65:4	2
stmts	50:9	65:4	3	
if	50:9	65:4	4	(i_fourcc ==VLC_FOURCC ('s' ,'o' ,'w' ,'t' ))
cond	50:13	50:56	5	i_fourcc ==VLC_FOURCC ('s' ,'o' ,'w' ,'t' )
water	50:13	0:0	6	i_fourcc
op	50:22	0:0	6	==
call	50:25	50:56	6	VLC_FOURCC
arg	50:37	50:40	7	's'
water	50:37	0:0	8	's'
arg	50:42	50:45	7	'o'
water	50:42	0:0	8	'o'
arg	50:47	50:50	7	'w'
water	50:47	0:0	8	'w'
arg	50:52	50:56	7	't'
water	50:52	0:0	8	't'
stmts	51:4	65:4	5	
water	51:4	0:0	6	{
switch	52:8	64:8	6	(i_bytes)
cond	52:16	52:16	7	i_bytes
water	52:16	0:0	8	i_bytes
stmts	53:8	64:8	7	
water	53:8	0:0	8	{
label	54:8	54:14	8	case 1 :
return	55:12	55:31	8	VLC_CODEC_S8
water	55:19	0:0	9	VLC_CODEC_S8
label	56:8	56:14	8	case 2 :
return	57:12	57:33	8	VLC_CODEC_S16L
water	57:19	0:0	9	VLC_CODEC_S16L
label	58:8	58:14	8	case 3 :
return	59:12	59:33	8	VLC_CODEC_S24L
water	59:19	0:0	9	VLC_CODEC_S24L
label	60:8	60:14	8	case 4 :
return	61:12	61:33	8	VLC_CODEC_S32L
water	61:19	0:0	9	VLC_CODEC_S32L
label	62:8	62:15	8	default :
return	63:12	63:20	8	0
water	63:19	0:0	9	0
water	64:8	0:0	8	}
water	65:4	0:0	6	}
else	66:4	69:4	2
stmts	67:4	69:4	3	
water	67:4	0:0	4	{
return	68:8	68:56	4	vlc_fourcc_GetCodec(AUDIO_ES,i_fourcc)
call	68:15	68:55	5	vlc_fourcc_GetCodec
arg	68:36	68:44	6	AUDIO_ES
water	68:36	0:0	7	AUDIO_ES
arg	68:46	68:55	6	i_fourcc
water	68:46	0:0	7	i_fourcc
water	69:4	0:0	4	}

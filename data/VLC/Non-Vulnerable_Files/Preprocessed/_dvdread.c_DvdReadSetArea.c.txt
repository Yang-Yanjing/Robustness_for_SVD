func	2:0	282:0	0	static int	DvdReadSetArea
params	2:25	0:0	1	
param	2:27	2:43	2	demux_t *	p_demux
param	2:45	2:56	2	int	i_title
param	2:58	2:71	2	int	i_chapter
param	3:27	3:39	2	int	i_angle
stmnts	5:4	281:22	1	
call	5:4	5:24	2	VLC_UNUSED
arg	5:16	5:24	3	i_angle
water	5:16	0:0	4	i_angle
water	5:25	0:0	2	;
decl	6:4	6:39	2	demux_sys_t	*p_sys
op	6:23	0:0	2	=
water	6:25	0:0	2	p_demux
op	6:32	0:0	2	->
water	6:34	0:0	2	p_sys
decl	7:4	7:27	2	int	pgc_id
op	7:15	0:0	2	=
water	7:17	0:0	2	0
water	7:18	0:0	2	,
decl	7:4	7:27	2	int	pgn
op	7:24	0:0	2	=
water	7:26	0:0	2	0
decl	8:4	8:9	2	int	i
if	12:4	239:4	2	(i_title >= 0 && i_title < p_sys -> i_titles && i_title != p_sys -> i_title)
cond	12:8	13:26	3	i_title >= 0 && i_title < p_sys -> i_titles && i_title != p_sys -> i_title
water	12:8	0:0	4	i_title
op	12:16	0:0	4	>=
water	12:19	0:0	4	0
op	12:21	0:0	4	&&
water	12:24	0:0	4	i_title
op	12:32	0:0	4	<
water	12:34	0:0	4	p_sys
op	12:39	0:0	4	->
water	12:41	0:0	4	i_titles
op	12:50	0:0	4	&&
water	13:8	0:0	4	i_title
op	13:16	0:0	4	!=
water	13:19	0:0	4	p_sys
op	13:24	0:0	4	->
water	13:26	0:0	4	i_title
stmts	14:4	239:4	3	
water	14:4	0:0	4	{
decl	15:8	15:36	4	int	i_start_cell
water	15:24	0:0	4	,
decl	15:8	15:36	4	int	i_end_cell
if	16:8	20:8	4	(p_sys -> p_title != NULL)
cond	16:12	16:30	5	p_sys -> p_title != NULL
water	16:12	0:0	6	p_sys
op	16:17	0:0	6	->
water	16:19	0:0	6	p_title
op	16:27	0:0	6	!=
water	16:30	0:0	6	NULL
stmts	17:8	20:8	5	
water	17:8	0:0	6	{
call	18:12	18:41	6	DVDCloseFile
arg	18:26	18:41	7	p_sys->p_title
water	18:26	0:0	8	p_sys
op	18:31	0:0	8	->
water	18:33	0:0	8	p_title
water	18:42	0:0	6	;
water	19:12	0:0	6	p_sys
op	19:17	0:0	6	->
water	19:19	0:0	6	p_title
op	19:27	0:0	6	=
water	19:29	0:0	6	NULL
water	19:33	0:0	6	;
water	20:8	0:0	6	}
if	21:8	21:45	4	(p_vts != NULL)
cond	21:12	21:21	5	p_vts != NULL
water	21:12	0:0	6	p_vts
op	21:18	0:0	6	!=
water	21:21	0:0	6	NULL
stmts	21:28	21:45	5	
call	21:28	21:44	6	ifoClose
arg	21:38	21:44	7	p_vts
water	21:38	0:0	8	p_vts
water	21:45	0:0	6	;
water	22:8	0:0	4	p_sys
op	22:13	0:0	4	->
water	22:15	0:0	4	i_title
op	22:23	0:0	4	=
water	22:25	0:0	4	i_title
water	22:32	0:0	4	;
call	26:8	27:74	4	msg_Dbg
arg	26:17	26:24	5	p_demux
water	26:17	0:0	6	p_demux
arg	26:26	26:53	5	"open VTS %d, for title %d"
water	26:26	0:0	6	"open VTS %d, for title %d"
arg	27:17	27:60	5	p_vmg->tt_srpt->title[i_title].title_set_nr
water	27:17	0:0	6	p_vmg
op	27:22	0:0	6	->
water	27:24	0:0	6	tt_srpt
op	27:31	0:0	6	->
water	27:33	0:0	6	title
op	27:38	0:0	6	[
water	27:39	0:0	6	i_title
op	27:46	0:0	6	]
op	27:47	0:0	6	.
water	27:48	0:0	6	title_set_nr
arg	27:62	27:74	5	i_title+1
water	27:62	0:0	6	i_title
op	27:70	0:0	6	+
water	27:72	0:0	6	1
water	27:75	0:0	4	;
if	29:8	34:8	4	(! ( p_vts =ifoOpen (p_sys -> p_dvdread ,p_vmg -> tt_srpt -> title [ i_title ] . title_set_nr ) ))
cond	29:12	30:61	5	! ( p_vts =ifoOpen (p_sys -> p_dvdread ,p_vmg -> tt_srpt -> title [ i_title ] . title_set_nr ) )
op	29:12	0:0	6	!
water	29:13	0:0	6	(
water	29:15	0:0	6	p_vts
op	29:21	0:0	6	=
call	29:23	30:59	6	ifoOpen
arg	29:32	29:48	7	p_sys->p_dvdread
water	29:32	0:0	8	p_sys
op	29:37	0:0	8	->
water	29:39	0:0	8	p_dvdread
arg	30:15	30:59	7	p_vmg->tt_srpt->title[i_title].title_set_nr
water	30:15	0:0	8	p_vmg
op	30:20	0:0	8	->
water	30:22	0:0	8	tt_srpt
op	30:29	0:0	8	->
water	30:31	0:0	8	title
op	30:36	0:0	8	[
water	30:37	0:0	8	i_title
op	30:44	0:0	8	]
op	30:45	0:0	8	.
water	30:46	0:0	8	title_set_nr
water	30:61	0:0	6	)
stmts	31:8	34:8	5	
water	31:8	0:0	6	{
call	32:12	32:55	6	msg_Err
arg	32:21	32:28	7	p_demux
water	32:21	0:0	8	p_demux
arg	32:30	32:55	7	"fatal error in vts ifo"
water	32:30	0:0	8	"fatal error in vts ifo"
water	32:56	0:0	6	;
return	33:12	33:31	6	VLC_EGENERIC
water	33:19	0:0	7	VLC_EGENERIC
water	34:8	0:0	6	}
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	i_ttn
op	36:21	0:0	4	=
water	36:23	0:0	4	p_vmg
op	36:28	0:0	4	->
water	36:30	0:0	4	tt_srpt
op	36:37	0:0	4	->
water	36:39	0:0	4	title
op	36:44	0:0	4	[
water	36:45	0:0	4	i_title
op	36:52	0:0	4	]
op	36:53	0:0	4	.
water	36:54	0:0	4	vts_ttn
water	36:61	0:0	4	;
water	38:8	0:0	4	pgc_id
op	38:15	0:0	4	=
water	38:17	0:0	4	p_vts
op	38:22	0:0	4	->
water	38:24	0:0	4	vts_ptt_srpt
op	38:36	0:0	4	->
water	38:38	0:0	4	title
op	38:43	0:0	4	[
water	38:44	0:0	4	p_sys
op	38:49	0:0	4	->
water	38:51	0:0	4	i_ttn
op	38:57	0:0	4	-
water	38:59	0:0	4	1
op	38:60	0:0	4	]
op	38:61	0:0	4	.
water	38:62	0:0	4	ptt
op	38:65	0:0	4	[
water	38:66	0:0	4	0
op	38:67	0:0	4	]
op	38:68	0:0	4	.
water	38:69	0:0	4	pgcn
water	38:73	0:0	4	;
water	39:8	0:0	4	pgn
op	39:12	0:0	4	=
water	39:14	0:0	4	p_vts
op	39:19	0:0	4	->
water	39:21	0:0	4	vts_ptt_srpt
op	39:33	0:0	4	->
water	39:35	0:0	4	title
op	39:40	0:0	4	[
water	39:41	0:0	4	p_sys
op	39:46	0:0	4	->
water	39:48	0:0	4	i_ttn
op	39:54	0:0	4	-
water	39:56	0:0	4	1
op	39:57	0:0	4	]
op	39:58	0:0	4	.
water	39:59	0:0	4	ptt
op	39:62	0:0	4	[
water	39:63	0:0	4	0
op	39:64	0:0	4	]
op	39:65	0:0	4	.
water	39:66	0:0	4	pgn
water	39:69	0:0	4	;
water	40:8	0:0	4	p_pgc
op	40:14	0:0	4	=
water	40:16	0:0	4	p_vts
op	40:21	0:0	4	->
water	40:23	0:0	4	vts_pgcit
op	40:32	0:0	4	->
water	40:34	0:0	4	pgci_srp
op	40:42	0:0	4	[
water	40:43	0:0	4	pgc_id
op	40:50	0:0	4	-
water	40:52	0:0	4	1
op	40:53	0:0	4	]
op	40:54	0:0	4	.
water	40:55	0:0	4	pgc
water	40:58	0:0	4	;
if	41:8	45:8	4	(p_pgc -> cell_playback == NULL)
cond	41:12	41:36	5	p_pgc -> cell_playback == NULL
water	41:12	0:0	6	p_pgc
op	41:17	0:0	6	->
water	41:19	0:0	6	cell_playback
op	41:33	0:0	6	==
water	41:36	0:0	6	NULL
stmts	42:8	45:8	5	
water	42:8	0:0	6	{
call	43:12	43:67	6	msg_Err
arg	43:21	43:28	7	p_demux
water	43:21	0:0	8	p_demux
arg	43:30	43:67	7	"Invalid PGC (cell_playback_offset)"
water	43:30	0:0	8	"Invalid PGC (cell_playback_offset)"
water	43:68	0:0	6	;
return	44:12	44:31	6	VLC_EGENERIC
water	44:19	0:0	7	VLC_EGENERIC
water	45:8	0:0	6	}
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	i_title_start_cell
op	46:34	0:0	4	=
water	47:12	0:0	4	i_start_cell
op	47:25	0:0	4	=
water	47:27	0:0	4	p_pgc
op	47:32	0:0	4	->
water	47:34	0:0	4	program_map
op	47:45	0:0	4	[
water	47:46	0:0	4	pgn
op	47:50	0:0	4	-
water	47:52	0:0	4	1
op	47:53	0:0	4	]
op	47:55	0:0	4	-
water	47:57	0:0	4	1
water	47:58	0:0	4	;
water	48:8	0:0	4	p_sys
op	48:13	0:0	4	->
water	48:15	0:0	4	i_title_start_block
op	48:35	0:0	4	=
water	49:12	0:0	4	p_pgc
op	49:17	0:0	4	->
water	49:19	0:0	4	cell_playback
op	49:32	0:0	4	[
water	49:33	0:0	4	i_start_cell
op	49:45	0:0	4	]
op	49:46	0:0	4	.
water	49:47	0:0	4	first_sector
water	49:59	0:0	4	;
water	50:8	0:0	4	p_sys
op	50:13	0:0	4	->
water	50:15	0:0	4	i_title_end_cell
op	50:32	0:0	4	=
water	51:12	0:0	4	i_end_cell
op	51:23	0:0	4	=
water	51:25	0:0	4	p_pgc
op	51:30	0:0	4	->
water	51:32	0:0	4	nr_of_cells
op	51:44	0:0	4	-
water	51:46	0:0	4	1
water	51:47	0:0	4	;
water	52:8	0:0	4	p_sys
op	52:13	0:0	4	->
water	52:15	0:0	4	i_title_end_block
op	52:33	0:0	4	=
water	53:12	0:0	4	p_pgc
op	53:17	0:0	4	->
water	53:19	0:0	4	cell_playback
op	53:32	0:0	4	[
water	53:33	0:0	4	i_end_cell
op	53:43	0:0	4	]
op	53:44	0:0	4	.
water	53:45	0:0	4	last_sector
water	53:56	0:0	4	;
water	54:8	0:0	4	p_sys
op	54:13	0:0	4	->
water	54:15	0:0	4	i_title_offset
op	54:30	0:0	4	=
water	54:32	0:0	4	0
water	54:33	0:0	4	;
water	55:8	0:0	4	p_sys
op	55:13	0:0	4	->
water	55:15	0:0	4	i_title_blocks
op	55:30	0:0	4	=
water	55:32	0:0	4	0
water	55:33	0:0	4	;
for	56:8	60:8	4	(i = i_start_cell ;i <= i_end_cell;i ++)
forinit	56:13	56:29	5	i = i_start_cell ;
water	56:13	0:0	6	i
op	56:15	0:0	6	=
water	56:17	0:0	6	i_start_cell
water	56:29	0:0	6	;
cond	56:31	56:36	5	i <= i_end_cell
water	56:31	0:0	6	i
op	56:33	0:0	6	<=
water	56:36	0:0	6	i_end_cell
forexpr	56:48	56:49	5	i ++
water	56:48	0:0	6	i
op	56:49	0:0	6	++
stmts	57:8	60:8	5	
water	57:8	0:0	6	{
water	58:12	0:0	6	p_sys
op	58:17	0:0	6	->
water	58:19	0:0	6	i_title_blocks
op	58:34	0:0	6	+=
water	58:37	0:0	6	p_pgc
op	58:42	0:0	6	->
water	58:44	0:0	6	cell_playback
op	58:57	0:0	6	[
water	58:58	0:0	6	i
op	58:59	0:0	6	]
op	58:60	0:0	6	.
water	58:61	0:0	6	last_sector
op	58:73	0:0	6	-
water	59:16	0:0	6	p_pgc
op	59:21	0:0	6	->
water	59:23	0:0	6	cell_playback
op	59:36	0:0	6	[
water	59:37	0:0	6	i
op	59:38	0:0	6	]
op	59:39	0:0	6	.
water	59:40	0:0	6	first_sector
op	59:53	0:0	6	+
water	59:55	0:0	6	1
water	59:56	0:0	6	;
water	60:8	0:0	6	}
call	61:8	65:39	4	msg_Dbg
arg	61:17	61:24	5	p_demux
water	61:17	0:0	6	p_demux
arg	61:26	62:45	5	"title %d vts_title %d pgc %d pgn %d ""start %d end %d blocks: %d"
water	61:26	0:0	6	"title %d vts_title %d pgc %d pgn %d "
water	62:17	0:0	6	"start %d end %d blocks: %d"
arg	63:17	63:28	5	i_title+1
water	63:17	0:0	6	i_title
op	63:25	0:0	6	+
water	63:27	0:0	6	1
arg	63:30	63:42	5	p_sys->i_ttn
water	63:30	0:0	6	p_sys
op	63:35	0:0	6	->
water	63:37	0:0	6	i_ttn
arg	63:44	63:50	5	pgc_id
water	63:44	0:0	6	pgc_id
arg	63:52	63:55	5	pgn
water	63:52	0:0	6	pgn
arg	64:17	64:43	5	p_sys->i_title_start_block
water	64:17	0:0	6	p_sys
op	64:22	0:0	6	->
water	64:24	0:0	6	i_title_start_block
arg	64:45	64:69	5	p_sys->i_title_end_block
water	64:45	0:0	6	p_sys
op	64:50	0:0	6	->
water	64:52	0:0	6	i_title_end_block
arg	65:17	65:39	5	p_sys->i_title_blocks
water	65:17	0:0	6	p_sys
op	65:22	0:0	6	->
water	65:24	0:0	6	i_title_blocks
water	65:40	0:0	4	;
water	69:8	0:0	4	p_sys
op	69:13	0:0	4	->
water	69:15	0:0	4	i_chapter
op	69:25	0:0	4	=
water	69:27	0:0	4	0
water	69:28	0:0	4	;
water	70:8	0:0	4	p_sys
op	70:13	0:0	4	->
water	70:15	0:0	4	i_chapters
op	70:26	0:0	4	=
water	71:12	0:0	4	p_vts
op	71:17	0:0	4	->
water	71:19	0:0	4	vts_ptt_srpt
op	71:31	0:0	4	->
water	71:33	0:0	4	title
op	71:38	0:0	4	[
water	71:39	0:0	4	p_sys
op	71:44	0:0	4	->
water	71:46	0:0	4	i_ttn
op	71:52	0:0	4	-
water	71:54	0:0	4	1
op	71:55	0:0	4	]
op	71:56	0:0	4	.
water	71:57	0:0	4	nr_of_ptts
water	71:67	0:0	4	;
water	72:8	0:0	4	pgc_id
op	72:15	0:0	4	=
water	72:17	0:0	4	p_vts
op	72:22	0:0	4	->
water	72:24	0:0	4	vts_ptt_srpt
op	72:36	0:0	4	->
water	72:38	0:0	4	title
op	72:43	0:0	4	[
water	73:20	0:0	4	p_sys
op	73:25	0:0	4	->
water	73:27	0:0	4	i_ttn
op	73:33	0:0	4	-
water	73:35	0:0	4	1
op	73:36	0:0	4	]
op	73:37	0:0	4	.
water	73:38	0:0	4	ptt
op	73:41	0:0	4	[
water	73:42	0:0	4	p_sys
op	73:47	0:0	4	->
water	73:49	0:0	4	i_chapter
op	73:58	0:0	4	]
op	73:59	0:0	4	.
water	73:60	0:0	4	pgcn
water	73:64	0:0	4	;
water	74:8	0:0	4	pgn
op	74:12	0:0	4	=
water	74:14	0:0	4	p_vts
op	74:19	0:0	4	->
water	74:21	0:0	4	vts_ptt_srpt
op	74:33	0:0	4	->
water	74:35	0:0	4	title
op	74:40	0:0	4	[
water	75:20	0:0	4	p_sys
op	75:25	0:0	4	->
water	75:27	0:0	4	i_ttn
op	75:33	0:0	4	-
water	75:35	0:0	4	1
op	75:36	0:0	4	]
op	75:37	0:0	4	.
water	75:38	0:0	4	ptt
op	75:41	0:0	4	[
water	75:42	0:0	4	p_sys
op	75:47	0:0	4	->
water	75:49	0:0	4	i_chapter
op	75:58	0:0	4	]
op	75:59	0:0	4	.
water	75:60	0:0	4	pgn
water	75:63	0:0	4	;
water	76:8	0:0	4	p_pgc
op	76:14	0:0	4	=
water	76:16	0:0	4	p_vts
op	76:21	0:0	4	->
water	76:23	0:0	4	vts_pgcit
op	76:32	0:0	4	->
water	76:34	0:0	4	pgci_srp
op	76:42	0:0	4	[
water	76:43	0:0	4	pgc_id
op	76:50	0:0	4	-
water	76:52	0:0	4	1
op	76:53	0:0	4	]
op	76:54	0:0	4	.
water	76:55	0:0	4	pgc
water	76:58	0:0	4	;
water	77:8	0:0	4	p_sys
op	77:13	0:0	4	->
water	77:15	0:0	4	i_pack_len
op	77:26	0:0	4	=
water	77:28	0:0	4	0
water	77:29	0:0	4	;
water	78:8	0:0	4	p_sys
op	78:13	0:0	4	->
water	78:15	0:0	4	i_next_cell
op	78:27	0:0	4	=
water	79:12	0:0	4	p_sys
op	79:17	0:0	4	->
water	79:19	0:0	4	i_cur_cell
op	79:30	0:0	4	=
water	79:32	0:0	4	p_pgc
op	79:37	0:0	4	->
water	79:39	0:0	4	program_map
op	79:50	0:0	4	[
water	79:51	0:0	4	pgn
op	79:55	0:0	4	-
water	79:57	0:0	4	1
op	79:58	0:0	4	]
op	79:60	0:0	4	-
water	79:62	0:0	4	1
water	79:63	0:0	4	;
call	80:8	80:33	4	DvdReadFindCell
arg	80:25	80:33	5	p_demux
water	80:25	0:0	6	p_demux
water	80:34	0:0	4	;
water	81:8	0:0	4	p_sys
op	81:13	0:0	4	->
water	81:15	0:0	4	i_next_vobu
op	81:27	0:0	4	=
water	81:29	0:0	4	p_sys
op	81:34	0:0	4	->
water	81:36	0:0	4	i_cur_block
op	81:48	0:0	4	=
water	82:12	0:0	4	p_pgc
op	82:17	0:0	4	->
water	82:19	0:0	4	cell_playback
op	82:32	0:0	4	[
water	82:33	0:0	4	p_sys
op	82:38	0:0	4	->
water	82:40	0:0	4	i_cur_cell
op	82:50	0:0	4	]
op	82:51	0:0	4	.
water	82:52	0:0	4	first_sector
water	82:64	0:0	4	;
water	86:8	0:0	4	p_sys
op	86:13	0:0	4	->
water	86:15	0:0	4	i_angles
op	86:24	0:0	4	=
water	86:26	0:0	4	p_vmg
op	86:31	0:0	4	->
water	86:33	0:0	4	tt_srpt
op	86:40	0:0	4	->
water	86:42	0:0	4	title
op	86:47	0:0	4	[
water	86:48	0:0	4	i_title
op	86:55	0:0	4	]
op	86:56	0:0	4	.
water	86:57	0:0	4	nr_of_angles
water	86:69	0:0	4	;
if	87:8	87:65	4	(p_sys -> i_angle > p_sys -> i_angles)
cond	87:12	87:36	5	p_sys -> i_angle > p_sys -> i_angles
water	87:12	0:0	6	p_sys
op	87:17	0:0	6	->
water	87:19	0:0	6	i_angle
op	87:27	0:0	6	>
water	87:29	0:0	6	p_sys
op	87:34	0:0	6	->
water	87:36	0:0	6	i_angles
stmts	87:47	87:65	5	
water	87:47	0:0	6	p_sys
op	87:52	0:0	6	->
water	87:54	0:0	6	i_angle
op	87:62	0:0	6	=
water	87:64	0:0	6	1
water	87:65	0:0	6	;
if	91:8	98:8	4	(! ( p_sys -> p_title =DVDOpenFile (p_sys -> p_dvdread ,p_vmg -> tt_srpt -> title [ i_title ] . title_set_nr ,DVD_READ_TITLE_VOBS ) ))
cond	91:12	93:34	5	! ( p_sys -> p_title =DVDOpenFile (p_sys -> p_dvdread ,p_vmg -> tt_srpt -> title [ i_title ] . title_set_nr ,DVD_READ_TITLE_VOBS ) )
op	91:12	0:0	6	!
water	91:13	0:0	6	(
water	91:15	0:0	6	p_sys
op	91:20	0:0	6	->
water	91:22	0:0	6	p_title
op	91:30	0:0	6	=
call	91:32	93:32	6	DVDOpenFile
arg	91:45	91:61	7	p_sys->p_dvdread
water	91:45	0:0	8	p_sys
op	91:50	0:0	8	->
water	91:52	0:0	8	p_dvdread
arg	92:12	92:55	7	p_vmg->tt_srpt->title[i_title].title_set_nr
water	92:12	0:0	8	p_vmg
op	92:17	0:0	8	->
water	92:19	0:0	8	tt_srpt
op	92:26	0:0	8	->
water	92:28	0:0	8	title
op	92:33	0:0	8	[
water	92:34	0:0	8	i_title
op	92:41	0:0	8	]
op	92:42	0:0	8	.
water	92:43	0:0	8	title_set_nr
arg	93:12	93:32	7	DVD_READ_TITLE_VOBS
water	93:12	0:0	8	DVD_READ_TITLE_VOBS
water	93:34	0:0	6	)
stmts	94:8	98:8	5	
water	94:8	0:0	6	{
call	95:12	96:65	6	msg_Err
arg	95:21	95:28	7	p_demux
water	95:21	0:0	8	p_demux
arg	95:30	95:66	7	"cannot open title (VTS_%02d_1.VOB)"
water	95:30	0:0	8	"cannot open title (VTS_%02d_1.VOB)"
arg	96:21	96:65	7	p_vmg->tt_srpt->title[i_title].title_set_nr
water	96:21	0:0	8	p_vmg
op	96:26	0:0	8	->
water	96:28	0:0	8	tt_srpt
op	96:35	0:0	8	->
water	96:37	0:0	8	title
op	96:42	0:0	8	[
water	96:43	0:0	8	i_title
op	96:50	0:0	8	]
op	96:51	0:0	8	.
water	96:52	0:0	8	title_set_nr
water	96:66	0:0	6	;
return	97:12	97:31	6	VLC_EGENERIC
water	97:19	0:0	7	VLC_EGENERIC
water	98:8	0:0	6	}
call	104:8	104:55	4	es_out_Control
arg	104:24	104:36	5	p_demux->out
water	104:24	0:0	6	p_demux
op	104:31	0:0	6	->
water	104:33	0:0	6	out
arg	104:38	104:55	5	ES_OUT_RESET_PCR
water	104:38	0:0	6	ES_OUT_RESET_PCR
water	104:56	0:0	4	;
for	105:8	114:8	4	(i = 0 ;i < PS_TK_COUNT;i ++)
forinit	105:13	105:18	5	i = 0 ;
water	105:13	0:0	6	i
op	105:15	0:0	6	=
water	105:17	0:0	6	0
water	105:18	0:0	6	;
cond	105:20	105:24	5	i < PS_TK_COUNT
water	105:20	0:0	6	i
op	105:22	0:0	6	<
water	105:24	0:0	6	PS_TK_COUNT
forexpr	105:37	105:38	5	i ++
water	105:37	0:0	6	i
op	105:38	0:0	6	++
stmts	106:8	114:8	5	
water	106:8	0:0	6	{
decl	107:12	107:42	6	ps_track_t	*tk
op	107:27	0:0	6	=
op	107:29	0:0	6	&
water	107:30	0:0	6	p_sys
op	107:35	0:0	6	->
water	107:37	0:0	6	tk
op	107:39	0:0	6	[
water	107:40	0:0	6	i
op	107:41	0:0	6	]
if	108:12	112:12	6	(tk -> b_seen)
cond	108:16	108:20	7	tk -> b_seen
water	108:16	0:0	8	tk
op	108:18	0:0	8	->
water	108:20	0:0	8	b_seen
stmts	109:12	112:12	7	
water	109:12	0:0	8	{
call	110:16	110:42	8	es_format_Clean
arg	110:33	110:42	9	&tk->fmt
op	110:33	0:0	10	&
water	110:34	0:0	10	tk
op	110:36	0:0	10	->
water	110:38	0:0	10	fmt
water	110:43	0:0	8	;
if	111:16	111:63	8	(tk -> es)
cond	111:20	111:24	9	tk -> es
water	111:20	0:0	10	tk
op	111:22	0:0	10	->
water	111:24	0:0	10	es
stmts	111:29	111:63	9	
call	111:29	111:62	10	es_out_Del
arg	111:41	111:53	11	p_demux->out
water	111:41	0:0	12	p_demux
op	111:48	0:0	12	->
water	111:50	0:0	12	out
arg	111:55	111:62	11	tk->es
water	111:55	0:0	12	tk
op	111:57	0:0	12	->
water	111:59	0:0	12	es
water	111:63	0:0	10	;
water	112:12	0:0	8	}
water	113:12	0:0	6	tk
op	113:14	0:0	6	->
water	113:16	0:0	6	b_seen
op	113:23	0:0	6	=
water	113:25	0:0	6	false
water	113:30	0:0	6	;
water	114:8	0:0	6	}
if	115:8	121:8	4	(p_demux -> info . i_title != i_title)
cond	115:12	115:37	5	p_demux -> info . i_title != i_title
water	115:12	0:0	6	p_demux
op	115:19	0:0	6	->
water	115:21	0:0	6	info
op	115:25	0:0	6	.
water	115:26	0:0	6	i_title
op	115:34	0:0	6	!=
water	115:37	0:0	6	i_title
stmts	116:8	121:8	5	
water	116:8	0:0	6	{
water	117:12	0:0	6	p_demux
op	117:19	0:0	6	->
water	117:21	0:0	6	info
op	117:25	0:0	6	.
water	117:26	0:0	6	i_update
op	117:35	0:0	6	|=
water	118:16	0:0	6	INPUT_UPDATE_TITLE
op	118:35	0:0	6	|
water	118:37	0:0	6	INPUT_UPDATE_SEEKPOINT
water	118:59	0:0	6	;
water	119:12	0:0	6	p_demux
op	119:19	0:0	6	->
water	119:21	0:0	6	info
op	119:25	0:0	6	.
water	119:26	0:0	6	i_title
op	119:34	0:0	6	=
water	119:36	0:0	6	i_title
water	119:43	0:0	6	;
water	120:12	0:0	6	p_demux
op	120:19	0:0	6	->
water	120:21	0:0	6	info
op	120:25	0:0	6	.
water	120:26	0:0	6	i_seekpoint
op	120:38	0:0	6	=
water	120:40	0:0	6	0
water	120:41	0:0	6	;
water	121:8	0:0	6	}
call	123:8	123:32	4	ESNew
arg	123:15	123:22	5	p_demux
water	123:15	0:0	6	p_demux
arg	123:24	123:28	5	0xe0
water	123:24	0:0	6	0
water	123:25	0:0	6	xe0
arg	123:30	123:32	5	0
water	123:30	0:0	6	0
water	123:33	0:0	4	;
decl	124:8	124:69	4	const video_attr_t	*p_attr
op	124:35	0:0	4	=
op	124:37	0:0	4	&
water	124:38	0:0	4	p_vts
op	124:43	0:0	4	->
water	124:45	0:0	4	vtsi_mat
op	124:53	0:0	4	->
water	124:55	0:0	4	vts_video_attr
decl	125:8	125:66	4	int	i_video_height
op	125:27	0:0	4	=
water	125:29	0:0	4	p_attr
op	125:35	0:0	4	->
water	125:37	0:0	4	video_format
op	125:50	0:0	4	!=
water	125:53	0:0	4	0
water	125:55	0:0	4	?
water	125:57	0:0	4	576
water	125:61	0:0	4	:
water	125:63	0:0	4	480
decl	126:8	126:25	4	int	i_video_width
switch	127:8	143:8	4	(p_attr -> picture_size)
cond	127:16	127:24	5	p_attr -> picture_size
water	127:16	0:0	6	p_attr
op	127:22	0:0	6	->
water	127:24	0:0	6	picture_size
stmts	128:8	143:8	5	
water	128:8	0:0	6	{
label	129:8	129:14	6	case 0 :
water	130:12	0:0	6	i_video_width
op	130:26	0:0	6	=
water	130:28	0:0	6	720
water	130:31	0:0	6	;
break	131:12	131:17	6	
label	132:8	132:14	6	case 1 :
water	133:12	0:0	6	i_video_width
op	133:26	0:0	6	=
water	133:28	0:0	6	704
water	133:31	0:0	6	;
break	134:12	134:17	6	
label	135:8	135:14	6	case 2 :
water	136:12	0:0	6	i_video_width
op	136:26	0:0	6	=
water	136:28	0:0	6	352
water	136:31	0:0	6	;
break	137:12	137:17	6	
label	138:8	138:15	6	default :
label	139:8	139:14	6	case 3 :
water	140:12	0:0	6	i_video_width
op	140:26	0:0	6	=
water	140:28	0:0	6	352
water	140:31	0:0	6	;
water	141:12	0:0	6	i_video_height
op	141:27	0:0	6	/=
water	141:30	0:0	6	2
water	141:31	0:0	6	;
break	142:12	142:17	6	
water	143:8	0:0	6	}
switch	144:8	158:8	4	(p_attr -> display_aspect_ratio)
cond	144:16	144:24	5	p_attr -> display_aspect_ratio
water	144:16	0:0	6	p_attr
op	144:22	0:0	6	->
water	144:24	0:0	6	display_aspect_ratio
stmts	145:8	158:8	5	
water	145:8	0:0	6	{
label	146:8	146:14	6	case 0 :
water	147:12	0:0	6	p_sys
op	147:17	0:0	6	->
water	147:19	0:0	6	i_sar_num
op	147:29	0:0	6	=
water	147:31	0:0	6	4
op	147:33	0:0	6	*
water	147:35	0:0	6	i_video_height
water	147:49	0:0	6	;
water	148:12	0:0	6	p_sys
op	148:17	0:0	6	->
water	148:19	0:0	6	i_sar_den
op	148:29	0:0	6	=
water	148:31	0:0	6	3
op	148:33	0:0	6	*
water	148:35	0:0	6	i_video_width
water	148:48	0:0	6	;
break	149:12	149:17	6	
label	150:8	150:14	6	case 3 :
water	151:12	0:0	6	p_sys
op	151:17	0:0	6	->
water	151:19	0:0	6	i_sar_num
op	151:29	0:0	6	=
water	151:31	0:0	6	16
op	151:34	0:0	6	*
water	151:36	0:0	6	i_video_height
water	151:50	0:0	6	;
water	152:12	0:0	6	p_sys
op	152:17	0:0	6	->
water	152:19	0:0	6	i_sar_den
op	152:29	0:0	6	=
water	152:32	0:0	6	9
op	152:34	0:0	6	*
water	152:36	0:0	6	i_video_width
water	152:49	0:0	6	;
break	153:12	153:17	6	
label	154:8	154:15	6	default :
water	155:12	0:0	6	p_sys
op	155:17	0:0	6	->
water	155:19	0:0	6	i_sar_num
op	155:29	0:0	6	=
water	155:31	0:0	6	0
water	155:32	0:0	6	;
water	156:12	0:0	6	p_sys
op	156:17	0:0	6	->
water	156:19	0:0	6	i_sar_den
op	156:29	0:0	6	=
water	156:31	0:0	6	0
water	156:32	0:0	6	;
break	157:12	157:17	6	
water	158:8	0:0	6	}
water	160:4	0:0	4	p_sys
op	160:9	0:0	4	->
water	160:11	0:0	4	p_vts_file
op	160:21	0:0	4	->
water	160:23	0:0	4	vts_pgcit
op	160:32	0:0	4	->
water	160:34	0:0	4	pgci_srp
op	160:42	0:0	4	[
water	160:43	0:0	4	pgc_id
op	160:49	0:0	4	-
water	160:50	0:0	4	1
op	160:51	0:0	4	]
op	160:52	0:0	4	.
water	160:53	0:0	4	pgc
op	160:56	0:0	4	->
water	160:58	0:0	4	audio_control
op	160:71	0:0	4	[
water	160:72	0:0	4	i
op	160:73	0:0	4	-
water	160:74	0:0	4	1
op	160:75	0:0	4	]
water	162:8	0:0	4	for
water	162:11	0:0	4	(
water	162:13	0:0	4	i
op	162:15	0:0	4	=
water	162:17	0:0	4	1
water	162:18	0:0	4	;
water	162:20	0:0	4	i
op	162:22	0:0	4	<=
water	162:25	0:0	4	p_vts
op	162:30	0:0	4	->
water	162:32	0:0	4	vtsi_mat
op	162:40	0:0	4	->
water	162:42	0:0	4	nr_of_vts_audio_streams
water	162:65	0:0	4	;
water	162:67	0:0	4	i
op	162:68	0:0	4	++
water	162:71	0:0	4	)
water	163:8	0:0	4	{
water	164:12	0:0	4	int
water	164:16	0:0	4	i_position
op	164:27	0:0	4	=
water	164:29	0:0	4	0
water	164:30	0:0	4	;
water	165:12	0:0	4	uint16_t
water	165:21	0:0	4	i_id
water	165:25	0:0	4	;
water	168:12	0:0	4	if
water	168:14	0:0	4	(
water	168:16	0:0	4	audio_control
op	168:30	0:0	4	&
water	168:32	0:0	4	0
water	168:33	0:0	4	x8000
water	168:39	0:0	4	)
water	169:12	0:0	4	{
water	170:16	0:0	4	i_position
op	170:27	0:0	4	=
water	170:29	0:0	4	(
water	170:31	0:0	4	audio_control
op	170:45	0:0	4	&
water	170:47	0:0	4	0
water	170:48	0:0	4	x7F00
water	170:54	0:0	4	)
op	170:56	0:0	4	>>
water	170:59	0:0	4	8
water	170:60	0:0	4	;
call	171:16	171:67	4	msg_Dbg
arg	171:25	171:32	5	p_demux
water	171:25	0:0	6	p_demux
arg	171:34	171:54	5	"audio position  %d"
water	171:34	0:0	6	"audio position  %d"
arg	171:56	171:67	5	i_position
water	171:56	0:0	6	i_position
water	171:68	0:0	4	;
water	172:16	0:0	4	switch
water	172:22	0:0	4	(
water	172:24	0:0	4	p_vts
op	172:29	0:0	4	->
water	172:31	0:0	4	vtsi_mat
op	172:39	0:0	4	->
water	172:41	0:0	4	vts_audio_attr
op	172:55	0:0	4	[
water	172:56	0:0	4	i
op	172:58	0:0	4	-
water	172:60	0:0	4	1
op	172:61	0:0	4	]
op	172:62	0:0	4	.
water	172:63	0:0	4	audio_format
water	172:76	0:0	4	)
water	173:16	0:0	4	{
water	174:16	0:0	4	case
water	174:21	0:0	4	0
water	174:22	0:0	4	x00
water	174:25	0:0	4	:
water	175:20	0:0	4	i_id
op	175:25	0:0	4	=
water	175:27	0:0	4	(
water	175:28	0:0	4	0
water	175:29	0:0	4	x80
op	175:33	0:0	4	+
water	175:35	0:0	4	i_position
water	175:45	0:0	4	)
op	175:47	0:0	4	|
water	175:49	0:0	4	0
water	175:50	0:0	4	xbd00
water	175:55	0:0	4	;
water	176:20	0:0	4	break
water	176:25	0:0	4	;
water	177:16	0:0	4	case
water	177:21	0:0	4	0
water	177:22	0:0	4	x02
water	177:25	0:0	4	:
water	178:16	0:0	4	case
water	178:21	0:0	4	0
water	178:22	0:0	4	x03
water	178:25	0:0	4	:
water	179:20	0:0	4	i_id
op	179:25	0:0	4	=
water	179:27	0:0	4	0
water	179:28	0:0	4	xc000
op	179:34	0:0	4	+
water	179:36	0:0	4	i_position
water	179:46	0:0	4	;
water	180:20	0:0	4	break
water	180:25	0:0	4	;
water	181:16	0:0	4	case
water	181:21	0:0	4	0
water	181:22	0:0	4	x04
water	181:25	0:0	4	:
water	182:20	0:0	4	i_id
op	182:25	0:0	4	=
water	182:27	0:0	4	(
water	182:28	0:0	4	0
water	182:29	0:0	4	xa0
op	182:33	0:0	4	+
water	182:35	0:0	4	i_position
water	182:45	0:0	4	)
op	182:47	0:0	4	|
water	182:49	0:0	4	0
water	182:50	0:0	4	xbd00
water	182:55	0:0	4	;
water	183:20	0:0	4	break
water	183:25	0:0	4	;
water	184:16	0:0	4	case
water	184:21	0:0	4	0
water	184:22	0:0	4	x06
water	184:25	0:0	4	:
water	185:20	0:0	4	i_id
op	185:25	0:0	4	=
water	185:27	0:0	4	(
water	185:28	0:0	4	0
water	185:29	0:0	4	x88
op	185:33	0:0	4	+
water	185:35	0:0	4	i_position
water	185:45	0:0	4	)
op	185:47	0:0	4	|
water	185:49	0:0	4	0
water	185:50	0:0	4	xbd00
water	185:55	0:0	4	;
water	186:20	0:0	4	break
water	186:25	0:0	4	;
water	187:16	0:0	4	default
water	187:23	0:0	4	:
water	188:20	0:0	4	i_id
op	188:25	0:0	4	=
water	188:27	0:0	4	0
water	188:28	0:0	4	;
call	189:20	190:76	4	msg_Err
arg	189:29	189:36	5	p_demux
water	189:29	0:0	6	p_demux
arg	189:38	189:63	5	"unknown audio type %.2x"
water	189:38	0:0	6	"unknown audio type %.2x"
arg	190:24	190:76	5	p_vts->vtsi_mat->vts_audio_attr[i-1].audio_format
water	190:24	0:0	6	p_vts
op	190:29	0:0	6	->
water	190:31	0:0	6	vtsi_mat
op	190:39	0:0	6	->
water	190:41	0:0	6	vts_audio_attr
op	190:55	0:0	6	[
water	190:56	0:0	6	i
op	190:58	0:0	6	-
water	190:60	0:0	6	1
op	190:61	0:0	6	]
op	190:62	0:0	6	.
water	190:63	0:0	6	audio_format
water	190:77	0:0	4	;
water	191:16	0:0	4	}
call	192:16	193:55	4	ESNew
arg	192:23	192:30	5	p_demux
water	192:23	0:0	6	p_demux
arg	192:32	192:36	5	i_id
water	192:32	0:0	6	i_id
arg	192:38	193:55	5	p_sys->p_vts_file->vtsi_mat->vts_audio_attr[i-1].lang_code
water	192:38	0:0	6	p_sys
op	192:43	0:0	6	->
water	192:45	0:0	6	p_vts_file
op	192:55	0:0	6	->
water	192:57	0:0	6	vtsi_mat
op	192:65	0:0	6	->
water	193:23	0:0	6	vts_audio_attr
op	193:37	0:0	6	[
water	193:38	0:0	6	i
op	193:40	0:0	6	-
water	193:42	0:0	6	1
op	193:43	0:0	6	]
op	193:44	0:0	6	.
water	193:45	0:0	6	lang_code
water	193:56	0:0	4	;
water	194:12	0:0	4	}
water	195:8	0:0	4	}
water	198:4	0:0	4	p_sys
op	198:9	0:0	4	->
water	198:11	0:0	4	p_vts_file
op	198:21	0:0	4	->
water	198:23	0:0	4	vts_pgcit
op	198:32	0:0	4	->
water	198:34	0:0	4	pgci_srp
op	198:42	0:0	4	[
water	198:43	0:0	4	pgc_id
op	198:49	0:0	4	-
water	198:50	0:0	4	1
op	198:51	0:0	4	]
op	198:52	0:0	4	.
water	198:53	0:0	4	pgc
op	198:56	0:0	4	->
water	198:58	0:0	4	palette
call	199:8	199:66	4	memcpy
arg	199:16	199:27	5	p_sys->clut
water	199:16	0:0	6	p_sys
op	199:21	0:0	6	->
water	199:23	0:0	6	clut
arg	199:29	199:40	5	spu_palette
water	199:29	0:0	6	spu_palette
arg	199:42	199:66	5	16*sizeof(uint32_t)
water	199:42	0:0	6	16
op	199:45	0:0	6	*
op	199:47	0:0	6	sizeof
water	199:53	0:0	6	(
water	199:55	0:0	6	uint32_t
water	199:64	0:0	6	)
water	199:67	0:0	4	;
water	201:4	0:0	4	p_sys
op	201:9	0:0	4	->
water	201:11	0:0	4	p_vts_file
op	201:21	0:0	4	->
water	201:23	0:0	4	vts_pgcit
op	201:32	0:0	4	->
water	201:34	0:0	4	pgci_srp
op	201:42	0:0	4	[
water	201:43	0:0	4	pgc_id
op	201:49	0:0	4	-
water	201:50	0:0	4	1
op	201:51	0:0	4	]
op	201:52	0:0	4	.
water	201:53	0:0	4	pgc
op	201:56	0:0	4	->
water	201:58	0:0	4	subp_control
op	201:70	0:0	4	[
water	201:71	0:0	4	i
op	201:72	0:0	4	-
water	201:73	0:0	4	1
op	201:74	0:0	4	]
water	203:8	0:0	4	for
water	203:11	0:0	4	(
water	203:13	0:0	4	i
op	203:15	0:0	4	=
water	203:17	0:0	4	1
water	203:18	0:0	4	;
water	203:20	0:0	4	i
op	203:22	0:0	4	<=
water	203:25	0:0	4	p_vts
op	203:30	0:0	4	->
water	203:32	0:0	4	vtsi_mat
op	203:40	0:0	4	->
water	203:42	0:0	4	nr_of_vts_subp_streams
water	203:64	0:0	4	;
water	203:66	0:0	4	i
op	203:67	0:0	4	++
water	203:70	0:0	4	)
water	204:8	0:0	4	{
decl	205:12	205:30	4	int	i_position
op	205:27	0:0	4	=
water	205:29	0:0	4	0
decl	206:12	206:25	4	uint16_t	i_id
call	208:12	208:62	4	msg_Dbg
arg	208:21	208:28	5	p_demux
water	208:21	0:0	6	p_demux
arg	208:30	208:45	5	"spu %d 0x%02x"
water	208:30	0:0	6	"spu %d 0x%02x"
arg	208:47	208:48	5	i
water	208:47	0:0	6	i
arg	208:50	208:62	5	spu_control
water	208:50	0:0	6	spu_control
water	208:63	0:0	4	;
if	209:12	236:12	4	(spu_control & 0 x80000000)
cond	209:16	209:31	5	spu_control & 0 x80000000
water	209:16	0:0	6	spu_control
op	209:28	0:0	6	&
water	209:30	0:0	6	0
water	209:31	0:0	6	x80000000
stmts	210:12	236:12	5	
water	210:12	0:0	6	{
if	212:16	227:16	6	(p_vts -> vtsi_mat -> vts_video_attr . display_aspect_ratio)
cond	212:20	212:52	7	p_vts -> vtsi_mat -> vts_video_attr . display_aspect_ratio
water	212:20	0:0	8	p_vts
op	212:25	0:0	8	->
water	212:27	0:0	8	vtsi_mat
op	212:35	0:0	8	->
water	212:37	0:0	8	vts_video_attr
op	212:51	0:0	8	.
water	212:52	0:0	8	display_aspect_ratio
stmts	213:16	227:16	7	
water	213:16	0:0	8	{
switch	215:20	226:20	8	(p_vts -> vtsi_mat -> vts_video_attr . permitted_df)
cond	215:28	215:60	9	p_vts -> vtsi_mat -> vts_video_attr . permitted_df
water	215:28	0:0	10	p_vts
op	215:33	0:0	10	->
water	215:35	0:0	10	vtsi_mat
op	215:43	0:0	10	->
water	215:45	0:0	10	vts_video_attr
op	215:59	0:0	10	.
water	215:60	0:0	10	permitted_df
stmts	216:20	226:20	9	
water	216:20	0:0	10	{
label	217:20	217:26	10	case 1 :
water	218:24	0:0	10	i_position
op	218:35	0:0	10	=
water	218:37	0:0	10	spu_control
op	218:49	0:0	10	&
water	218:51	0:0	10	0
water	218:52	0:0	10	xff
water	218:55	0:0	10	;
break	219:24	219:29	10	
label	220:20	220:26	10	case 2 :
water	221:24	0:0	10	i_position
op	221:35	0:0	10	=
water	221:37	0:0	10	(
water	221:39	0:0	10	spu_control
op	221:51	0:0	10	>>
water	221:54	0:0	10	8
water	221:56	0:0	10	)
op	221:58	0:0	10	&
water	221:60	0:0	10	0
water	221:61	0:0	10	xff
water	221:64	0:0	10	;
break	222:24	222:29	10	
label	223:20	223:27	10	default :
water	224:24	0:0	10	i_position
op	224:35	0:0	10	=
water	224:37	0:0	10	(
water	224:39	0:0	10	spu_control
op	224:51	0:0	10	>>
water	224:54	0:0	10	16
water	224:57	0:0	10	)
op	224:59	0:0	10	&
water	224:61	0:0	10	0
water	224:62	0:0	10	xff
water	224:65	0:0	10	;
break	225:24	225:29	10	
water	226:20	0:0	10	}
water	227:16	0:0	8	}
else	228:16	232:16	6
stmts	229:16	232:16	7	
water	229:16	0:0	8	{
water	231:20	0:0	8	i_position
op	231:31	0:0	8	=
water	231:33	0:0	8	(
water	231:35	0:0	8	spu_control
op	231:47	0:0	8	>>
water	231:50	0:0	8	24
water	231:53	0:0	8	)
op	231:55	0:0	8	&
water	231:57	0:0	8	0
water	231:58	0:0	8	x7F
water	231:61	0:0	8	;
water	232:16	0:0	8	}
water	233:16	0:0	6	i_id
op	233:21	0:0	6	=
water	233:23	0:0	6	(
water	233:24	0:0	6	0
water	233:25	0:0	6	x20
op	233:29	0:0	6	+
water	233:31	0:0	6	i_position
water	233:41	0:0	6	)
op	233:43	0:0	6	|
water	233:45	0:0	6	0
water	233:46	0:0	6	xbd00
water	233:51	0:0	6	;
call	234:16	235:54	6	ESNew
arg	234:23	234:30	7	p_demux
water	234:23	0:0	8	p_demux
arg	234:32	234:36	7	i_id
water	234:32	0:0	8	i_id
arg	234:38	235:54	7	p_sys->p_vts_file->vtsi_mat->vts_subp_attr[i-1].lang_code
water	234:38	0:0	8	p_sys
op	234:43	0:0	8	->
water	234:45	0:0	8	p_vts_file
op	234:55	0:0	8	->
water	234:57	0:0	8	vtsi_mat
op	234:65	0:0	8	->
water	235:23	0:0	8	vts_subp_attr
op	235:36	0:0	8	[
water	235:37	0:0	8	i
op	235:39	0:0	8	-
water	235:41	0:0	8	1
op	235:42	0:0	8	]
op	235:43	0:0	8	.
water	235:44	0:0	8	lang_code
water	235:55	0:0	6	;
water	236:12	0:0	6	}
water	237:8	0:0	4	}
water	239:4	0:0	4	}
else	240:4	243:4	2
stmts	240:9	243:4	3	
if	240:9	243:4	4	(i_title != - 1 && i_title != p_sys -> i_title)
cond	240:13	240:48	5	i_title != - 1 && i_title != p_sys -> i_title
water	240:13	0:0	6	i_title
op	240:21	0:0	6	!=
op	240:24	0:0	6	-
water	240:25	0:0	6	1
op	240:27	0:0	6	&&
water	240:30	0:0	6	i_title
op	240:38	0:0	6	!=
water	240:41	0:0	6	p_sys
op	240:46	0:0	6	->
water	240:48	0:0	6	i_title
stmts	241:4	243:4	5	
water	241:4	0:0	6	{
return	242:8	242:27	6	VLC_EGENERIC
water	242:15	0:0	7	VLC_EGENERIC
water	243:4	0:0	6	}
if	247:4	273:4	2	(i_chapter >= 0 && i_chapter < p_sys -> i_chapters)
cond	247:8	247:45	3	i_chapter >= 0 && i_chapter < p_sys -> i_chapters
water	247:8	0:0	4	i_chapter
op	247:18	0:0	4	>=
water	247:21	0:0	4	0
op	247:23	0:0	4	&&
water	247:26	0:0	4	i_chapter
op	247:36	0:0	4	<
water	247:38	0:0	4	p_sys
op	247:43	0:0	4	->
water	247:45	0:0	4	i_chapters
stmts	248:4	273:4	3	
water	248:4	0:0	4	{
water	249:8	0:0	4	pgc_id
op	249:15	0:0	4	=
water	249:17	0:0	4	p_vts
op	249:22	0:0	4	->
water	249:24	0:0	4	vts_ptt_srpt
op	249:36	0:0	4	->
water	249:38	0:0	4	title
op	249:43	0:0	4	[
water	250:21	0:0	4	p_sys
op	250:26	0:0	4	->
water	250:28	0:0	4	i_ttn
op	250:34	0:0	4	-
water	250:36	0:0	4	1
op	250:37	0:0	4	]
op	250:38	0:0	4	.
water	250:39	0:0	4	ptt
op	250:42	0:0	4	[
water	250:43	0:0	4	i_chapter
op	250:52	0:0	4	]
op	250:53	0:0	4	.
water	250:54	0:0	4	pgcn
water	250:58	0:0	4	;
water	251:8	0:0	4	pgn
op	251:12	0:0	4	=
water	251:14	0:0	4	p_vts
op	251:19	0:0	4	->
water	251:21	0:0	4	vts_ptt_srpt
op	251:33	0:0	4	->
water	251:35	0:0	4	title
op	251:40	0:0	4	[
water	252:18	0:0	4	p_sys
op	252:23	0:0	4	->
water	252:25	0:0	4	i_ttn
op	252:31	0:0	4	-
water	252:33	0:0	4	1
op	252:34	0:0	4	]
op	252:35	0:0	4	.
water	252:36	0:0	4	ptt
op	252:39	0:0	4	[
water	252:40	0:0	4	i_chapter
op	252:49	0:0	4	]
op	252:50	0:0	4	.
water	252:51	0:0	4	pgn
water	252:54	0:0	4	;
water	253:8	0:0	4	p_pgc
op	253:14	0:0	4	=
water	253:16	0:0	4	p_vts
op	253:21	0:0	4	->
water	253:23	0:0	4	vts_pgcit
op	253:32	0:0	4	->
water	253:34	0:0	4	pgci_srp
op	253:42	0:0	4	[
water	253:43	0:0	4	pgc_id
op	253:50	0:0	4	-
water	253:52	0:0	4	1
op	253:53	0:0	4	]
op	253:54	0:0	4	.
water	253:55	0:0	4	pgc
water	253:58	0:0	4	;
if	254:8	255:31	4	(p_pgc -> cell_playback == NULL)
cond	254:12	254:36	5	p_pgc -> cell_playback == NULL
water	254:12	0:0	6	p_pgc
op	254:17	0:0	6	->
water	254:19	0:0	6	cell_playback
op	254:33	0:0	6	==
water	254:36	0:0	6	NULL
stmts	255:12	255:31	5	
return	255:12	255:31	6	VLC_EGENERIC
water	255:19	0:0	7	VLC_EGENERIC
water	256:8	0:0	4	p_sys
op	256:13	0:0	4	->
water	256:15	0:0	4	i_cur_cell
op	256:26	0:0	4	=
water	256:28	0:0	4	p_pgc
op	256:33	0:0	4	->
water	256:35	0:0	4	program_map
op	256:46	0:0	4	[
water	256:47	0:0	4	pgn
op	256:51	0:0	4	-
water	256:53	0:0	4	1
op	256:54	0:0	4	]
op	256:56	0:0	4	-
water	256:58	0:0	4	1
water	256:59	0:0	4	;
water	257:8	0:0	4	p_sys
op	257:13	0:0	4	->
water	257:15	0:0	4	i_chapter
op	257:25	0:0	4	=
water	257:27	0:0	4	i_chapter
water	257:36	0:0	4	;
call	258:8	258:33	4	DvdReadFindCell
arg	258:25	258:33	5	p_demux
water	258:25	0:0	6	p_demux
water	258:34	0:0	4	;
water	259:8	0:0	4	p_sys
op	259:13	0:0	4	->
water	259:15	0:0	4	i_title_offset
op	259:30	0:0	4	=
water	259:32	0:0	4	0
water	259:33	0:0	4	;
for	260:8	264:8	4	(i = p_sys -> i_title_start_cell ;i < p_sys -> i_cur_cell;i ++)
forinit	260:13	260:42	5	i = p_sys -> i_title_start_cell ;
water	260:13	0:0	6	i
op	260:15	0:0	6	=
water	260:17	0:0	6	p_sys
op	260:22	0:0	6	->
water	260:24	0:0	6	i_title_start_cell
water	260:42	0:0	6	;
cond	260:44	260:55	5	i < p_sys -> i_cur_cell
water	260:44	0:0	6	i
op	260:46	0:0	6	<
water	260:48	0:0	6	p_sys
op	260:53	0:0	6	->
water	260:55	0:0	6	i_cur_cell
forexpr	260:67	260:68	5	i ++
water	260:67	0:0	6	i
op	260:68	0:0	6	++
stmts	261:8	264:8	5	
water	261:8	0:0	6	{
water	262:12	0:0	6	p_sys
op	262:17	0:0	6	->
water	262:19	0:0	6	i_title_offset
op	262:34	0:0	6	+=
water	262:37	0:0	6	p_pgc
op	262:42	0:0	6	->
water	262:44	0:0	6	cell_playback
op	262:57	0:0	6	[
water	262:58	0:0	6	i
op	262:59	0:0	6	]
op	262:60	0:0	6	.
water	262:61	0:0	6	last_sector
op	262:73	0:0	6	-
water	263:16	0:0	6	p_pgc
op	263:21	0:0	6	->
water	263:23	0:0	6	cell_playback
op	263:36	0:0	6	[
water	263:37	0:0	6	i
op	263:38	0:0	6	]
op	263:39	0:0	6	.
water	263:40	0:0	6	first_sector
op	263:53	0:0	6	+
water	263:55	0:0	6	1
water	263:56	0:0	6	;
water	264:8	0:0	6	}
water	265:8	0:0	4	p_sys
op	265:13	0:0	4	->
water	265:15	0:0	4	i_pack_len
op	265:26	0:0	4	=
water	265:28	0:0	4	0
water	265:29	0:0	4	;
water	266:8	0:0	4	p_sys
op	266:13	0:0	4	->
water	266:15	0:0	4	i_next_vobu
op	266:27	0:0	4	=
water	266:29	0:0	4	p_sys
op	266:34	0:0	4	->
water	266:36	0:0	4	i_cur_block
op	266:48	0:0	4	=
water	267:12	0:0	4	p_pgc
op	267:17	0:0	4	->
water	267:19	0:0	4	cell_playback
op	267:32	0:0	4	[
water	267:33	0:0	4	p_sys
op	267:38	0:0	4	->
water	267:40	0:0	4	i_cur_cell
op	267:50	0:0	4	]
op	267:51	0:0	4	.
water	267:52	0:0	4	first_sector
water	267:64	0:0	4	;
if	268:8	272:8	4	(p_demux -> info . i_seekpoint != i_chapter)
cond	268:12	268:41	5	p_demux -> info . i_seekpoint != i_chapter
water	268:12	0:0	6	p_demux
op	268:19	0:0	6	->
water	268:21	0:0	6	info
op	268:25	0:0	6	.
water	268:26	0:0	6	i_seekpoint
op	268:38	0:0	6	!=
water	268:41	0:0	6	i_chapter
stmts	269:8	272:8	5	
water	269:8	0:0	6	{
water	270:12	0:0	6	p_demux
op	270:19	0:0	6	->
water	270:21	0:0	6	info
op	270:25	0:0	6	.
water	270:26	0:0	6	i_update
op	270:35	0:0	6	|=
water	270:38	0:0	6	INPUT_UPDATE_SEEKPOINT
water	270:60	0:0	6	;
water	271:12	0:0	6	p_demux
op	271:19	0:0	6	->
water	271:21	0:0	6	info
op	271:25	0:0	6	.
water	271:26	0:0	6	i_seekpoint
op	271:38	0:0	6	=
water	271:40	0:0	6	i_chapter
water	271:49	0:0	6	;
water	272:8	0:0	6	}
water	273:4	0:0	4	}
else	274:4	277:4	2
stmts	274:9	277:4	3	
if	274:9	277:4	4	(i_chapter != - 1)
cond	274:13	274:27	5	i_chapter != - 1
water	274:13	0:0	6	i_chapter
op	274:23	0:0	6	!=
op	274:26	0:0	6	-
water	274:27	0:0	6	1
stmts	275:4	277:4	5	
water	275:4	0:0	6	{
return	276:8	276:27	6	VLC_EGENERIC
water	276:15	0:0	7	VLC_EGENERIC
water	277:4	0:0	6	}
return	281:4	281:22	2	VLC_SUCCESS
water	281:11	0:0	3	VLC_SUCCESS

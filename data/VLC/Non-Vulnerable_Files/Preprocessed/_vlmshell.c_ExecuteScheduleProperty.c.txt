func	2:0	58:0	0	static int	ExecuteScheduleProperty
params	2:34	0:0	1	
param	2:36	2:48	2	vlm_t *	p_vlm
param	2:50	2:80	2	vlm_schedule_sys_t *	p_schedule
param	2:82	2:92	2	bool	b_new
param	3:36	3:56	2	const int	i_property
param	3:58	3:79	2	char *	ppsz_property[]
param	3:81	3:107	2	vlm_message_t * *	pp_status
stmnts	0:0	57:23	1	
decl	5:4	5:49	2	const char	*psz_cmd
op	5:24	0:0	2	=
water	5:26	0:0	2	b_new
water	5:32	0:0	2	?
water	5:34	0:0	2	"new"
water	5:40	0:0	2	:
water	5:42	0:0	2	"setup"
decl	6:4	6:9	2	int	i
for	7:4	47:4	2	(i = 0 ;i < i_property;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	i < i_property
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	i_property
forexpr	7:32	7:33	3	i ++
water	7:32	0:0	4	i
op	7:33	0:0	4	++
stmts	8:4	47:4	3	
water	8:4	0:0	4	{
if	9:8	14:8	4	(!strcmp (ppsz_property [ i ] ,"enabled" ) || !strcmp (ppsz_property [ i ] ,"disabled" ))
cond	9:12	10:50	5	!strcmp (ppsz_property [ i ] ,"enabled" ) || !strcmp (ppsz_property [ i ] ,"disabled" )
op	9:12	0:0	6	!
call	9:13	9:49	6	strcmp
arg	9:21	9:37	7	ppsz_property[i]
water	9:21	0:0	8	ppsz_property
op	9:34	0:0	8	[
water	9:35	0:0	8	i
op	9:36	0:0	8	]
arg	9:39	9:49	7	"enabled"
water	9:39	0:0	8	"enabled"
op	9:51	0:0	6	||
op	10:12	0:0	6	!
call	10:13	10:50	6	strcmp
arg	10:21	10:37	7	ppsz_property[i]
water	10:21	0:0	8	ppsz_property
op	10:34	0:0	8	[
water	10:35	0:0	8	i
op	10:36	0:0	8	]
arg	10:39	10:50	7	"disabled"
water	10:39	0:0	8	"disabled"
stmts	11:8	14:8	5	
water	11:8	0:0	6	{
if	12:12	13:26	6	(vlm_ScheduleSetup (p_schedule ,ppsz_property [ i ] ,NULL ))
cond	12:17	12:71	7	vlm_ScheduleSetup (p_schedule ,ppsz_property [ i ] ,NULL )
call	12:17	12:71	8	vlm_ScheduleSetup
arg	12:36	12:46	9	p_schedule
water	12:36	0:0	10	p_schedule
arg	12:48	12:64	9	ppsz_property[i]
water	12:48	0:0	10	ppsz_property
op	12:61	0:0	10	[
water	12:62	0:0	10	i
op	12:63	0:0	10	]
arg	12:66	12:71	9	NULL
water	12:66	0:0	10	NULL
stmts	13:16	13:26	7	
goto	13:16	13:26	8	error
water	13:21	0:0	9	error
water	14:8	0:0	6	}
else	15:8	34:8	4
stmts	15:13	34:8	5	
if	15:13	34:8	6	(!strcmp (ppsz_property [ i ] ,"append" ))
cond	15:17	15:53	7	!strcmp (ppsz_property [ i ] ,"append" )
op	15:17	0:0	8	!
call	15:18	15:53	8	strcmp
arg	15:26	15:42	9	ppsz_property[i]
water	15:26	0:0	10	ppsz_property
op	15:39	0:0	10	[
water	15:40	0:0	10	i
op	15:41	0:0	10	]
arg	15:44	15:53	9	"append"
water	15:44	0:0	10	"append"
stmts	16:8	34:8	7	
water	16:8	0:0	8	{
decl	17:12	17:26	8	char	*psz_line
decl	18:12	18:17	8	int	j
if	21:12	22:21	8	(++ i >= i_property)
cond	21:16	21:23	9	++ i >= i_property
op	21:16	0:0	10	++
water	21:18	0:0	10	i
op	21:20	0:0	10	>=
water	21:23	0:0	10	i_property
stmts	22:16	22:21	9	
break	22:16	22:21	10	
water	23:12	0:0	8	psz_line
op	23:21	0:0	8	=
call	23:23	23:48	8	strdup
arg	23:31	23:48	9	ppsz_property[i]
water	23:31	0:0	10	ppsz_property
op	23:44	0:0	10	[
water	23:45	0:0	10	i
op	23:46	0:0	10	]
water	23:49	0:0	8	;
for	24:12	30:12	8	(j = i + 1 ;j < i_property;j ++)
forinit	24:17	24:24	9	j = i + 1 ;
water	24:17	0:0	10	j
op	24:19	0:0	10	=
water	24:21	0:0	10	i
op	24:22	0:0	10	+
water	24:23	0:0	10	1
water	24:24	0:0	10	;
cond	24:26	24:30	9	j < i_property
water	24:26	0:0	10	j
op	24:28	0:0	10	<
water	24:30	0:0	10	i_property
forexpr	24:42	24:43	9	j ++
water	24:42	0:0	10	j
op	24:43	0:0	10	++
stmts	25:12	30:12	9	
water	25:12	0:0	10	{
water	26:16	0:0	10	psz_line
op	26:25	0:0	10	=
call	26:27	27:76	10	xrealloc
arg	26:37	26:45	11	psz_line
water	26:37	0:0	12	psz_line
arg	27:24	27:76	11	strlen(psz_line)+strlen(ppsz_property[j])+1+1
call	27:24	27:39	12	strlen
arg	27:31	27:39	13	psz_line
water	27:31	0:0	14	psz_line
op	27:41	0:0	12	+
call	27:43	27:66	12	strlen
arg	27:50	27:66	13	ppsz_property[j]
water	27:50	0:0	14	ppsz_property
op	27:63	0:0	14	[
water	27:64	0:0	14	j
op	27:65	0:0	14	]
op	27:68	0:0	12	+
water	27:70	0:0	12	1
op	27:72	0:0	12	+
water	27:74	0:0	12	1
water	27:77	0:0	10	;
call	28:16	28:38	10	strcat
arg	28:24	28:32	11	psz_line
water	28:24	0:0	12	psz_line
arg	28:34	28:38	11	" "
water	28:34	0:0	12	" "
water	28:39	0:0	10	;
call	29:16	29:51	10	strcat
arg	29:24	29:32	11	psz_line
water	29:24	0:0	12	psz_line
arg	29:34	29:51	11	ppsz_property[j]
water	29:34	0:0	12	ppsz_property
op	29:47	0:0	12	[
water	29:48	0:0	12	j
op	29:49	0:0	12	]
water	29:52	0:0	10	;
water	30:12	0:0	10	}
if	31:12	32:26	8	(vlm_ScheduleSetup (p_schedule ,"append" ,psz_line ))
cond	31:16	31:66	9	vlm_ScheduleSetup (p_schedule ,"append" ,psz_line )
call	31:16	31:66	10	vlm_ScheduleSetup
arg	31:35	31:45	11	p_schedule
water	31:35	0:0	12	p_schedule
arg	31:47	31:55	11	"append"
water	31:47	0:0	12	"append"
arg	31:57	31:66	11	psz_line
water	31:57	0:0	12	psz_line
stmts	32:16	32:26	9	
goto	32:16	32:26	10	error
water	32:21	0:0	11	error
break	33:12	33:17	8	
water	34:8	0:0	8	}
else	35:8	46:8	4
stmts	36:8	46:8	5	
water	36:8	0:0	6	{
if	37:12	42:12	6	(i + 1 >= i_property)
cond	37:16	37:25	7	i + 1 >= i_property
water	37:16	0:0	8	i
op	37:18	0:0	8	+
water	37:20	0:0	8	1
op	37:22	0:0	8	>=
water	37:25	0:0	8	i_property
stmts	38:12	42:12	7	
water	38:12	0:0	8	{
if	39:16	40:59	8	(b_new)
cond	39:20	39:20	9	b_new
water	39:20	0:0	10	b_new
stmts	40:20	40:59	9	
call	40:20	40:58	10	vlm_ScheduleDelete
arg	40:40	40:45	11	p_vlm
water	40:40	0:0	12	p_vlm
arg	40:47	40:58	11	p_schedule
water	40:47	0:0	12	p_schedule
water	40:59	0:0	10	;
return	41:16	41:63	8	ExecuteSyntaxError(psz_cmd,pp_status)
call	41:23	41:62	9	ExecuteSyntaxError
arg	41:43	41:50	10	psz_cmd
water	41:43	0:0	11	psz_cmd
arg	41:52	41:62	10	pp_status
water	41:52	0:0	11	pp_status
water	42:12	0:0	8	}
if	43:12	44:26	6	(vlm_ScheduleSetup (p_schedule ,ppsz_property [ i ] ,ppsz_property [ i + 1 ] ))
cond	43:16	43:84	7	vlm_ScheduleSetup (p_schedule ,ppsz_property [ i ] ,ppsz_property [ i + 1 ] )
call	43:16	43:84	8	vlm_ScheduleSetup
arg	43:35	43:45	9	p_schedule
water	43:35	0:0	10	p_schedule
arg	43:47	43:63	9	ppsz_property[i]
water	43:47	0:0	10	ppsz_property
op	43:60	0:0	10	[
water	43:61	0:0	10	i
op	43:62	0:0	10	]
arg	43:65	43:84	9	ppsz_property[i+1]
water	43:65	0:0	10	ppsz_property
op	43:78	0:0	10	[
water	43:79	0:0	10	i
op	43:80	0:0	10	+
water	43:81	0:0	10	1
op	43:82	0:0	10	]
stmts	44:16	44:26	7	
goto	44:16	44:26	8	error
water	44:21	0:0	9	error
water	45:12	0:0	6	i
op	45:13	0:0	6	++
water	45:15	0:0	6	;
water	46:8	0:0	6	}
water	47:4	0:0	4	}
op	48:4	0:0	2	*
water	48:5	0:0	2	pp_status
op	48:15	0:0	2	=
call	48:17	48:47	2	vlm_MessageSimpleNew
arg	48:39	48:47	3	psz_cmd
water	48:39	0:0	4	psz_cmd
water	48:48	0:0	2	;
call	49:4	49:40	2	vlc_mutex_lock
arg	49:20	49:40	3	&p_vlm->lock_manage
op	49:20	0:0	4	&
water	49:21	0:0	4	p_vlm
op	49:26	0:0	4	->
water	49:28	0:0	4	lock_manage
water	49:41	0:0	2	;
water	50:4	0:0	2	p_vlm
op	50:9	0:0	2	->
water	50:11	0:0	2	input_state_changed
op	50:31	0:0	2	=
water	50:33	0:0	2	true
water	50:37	0:0	2	;
call	51:4	51:41	2	vlc_cond_signal
arg	51:21	51:41	3	&p_vlm->wait_manage
op	51:21	0:0	4	&
water	51:22	0:0	4	p_vlm
op	51:27	0:0	4	->
water	51:29	0:0	4	wait_manage
water	51:42	0:0	2	;
call	52:4	52:42	2	vlc_mutex_unlock
arg	52:22	52:42	3	&p_vlm->lock_manage
op	52:22	0:0	4	&
water	52:23	0:0	4	p_vlm
op	52:28	0:0	4	->
water	52:30	0:0	4	lock_manage
water	52:43	0:0	2	;
return	53:4	53:22	2	VLC_SUCCESS
water	53:11	0:0	3	VLC_SUCCESS
label	54:0	54:5	2	error :
op	55:4	0:0	2	*
water	55:5	0:0	2	pp_status
op	55:15	0:0	2	=
call	55:17	56:50	2	vlm_MessageNew
arg	55:33	55:40	3	psz_cmd
water	55:33	0:0	4	psz_cmd
arg	55:42	55:97	3	"Error while setting the property '%s' to the schedule"
water	55:42	0:0	4	"Error while setting the property '%s' to the schedule"
arg	56:33	56:50	3	ppsz_property[i]
water	56:33	0:0	4	ppsz_property
op	56:46	0:0	4	[
water	56:47	0:0	4	i
op	56:48	0:0	4	]
water	56:51	0:0	2	;
return	57:4	57:23	2	VLC_EGENERIC
water	57:11	0:0	3	VLC_EGENERIC

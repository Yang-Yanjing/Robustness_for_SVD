func	2:0	53:0	0	static void	Close
params	2:17	0:0	1	
param	2:19	2:41	2	vlc_object_t *	p_this
stmnts	0:0	52:17	1	
decl	4:4	4:48	2	sout_mux_t	*p_mux
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	sout_mux_t
op	4:40	0:0	2	*
water	4:41	0:0	2	)
water	4:42	0:0	2	p_this
decl	5:4	5:41	2	sout_mux_sys_t	*p_sys
op	5:27	0:0	2	=
water	5:29	0:0	2	p_mux
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
decl	6:4	6:33	2	block_t	*p_hdr
water	6:24	0:0	2	,
decl	6:4	6:33	2	block_t	*p_idx1
decl	7:4	7:32	2	int	i_stream
call	8:4	8:39	2	msg_Dbg
arg	8:13	8:18	3	p_mux
water	8:13	0:0	4	p_mux
arg	8:20	8:39	3	"AVI muxer closed"
water	8:20	0:0	4	"AVI muxer closed"
water	8:40	0:0	2	;
water	10:4	0:0	2	p_idx1
op	10:11	0:0	2	=
call	10:13	10:41	2	avi_HeaderCreateidx1
arg	10:35	10:41	3	p_mux
water	10:35	0:0	4	p_mux
water	10:42	0:0	2	;
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	i_idx1_size
op	11:23	0:0	2	=
water	11:25	0:0	2	p_idx1
op	11:31	0:0	2	->
water	11:33	0:0	2	i_buffer
water	11:41	0:0	2	;
call	12:4	12:49	2	sout_AccessOutWrite
arg	12:25	12:40	3	p_mux->p_access
water	12:25	0:0	4	p_mux
op	12:30	0:0	4	->
water	12:32	0:0	4	p_access
arg	12:42	12:49	3	p_idx1
water	12:42	0:0	4	p_idx1
water	12:50	0:0	2	;
for	14:4	40:4	2	(i_stream = 0 ;i_stream < p_sys -> i_streams;i_stream ++)
forinit	14:9	14:21	3	i_stream = 0 ;
water	14:9	0:0	4	i_stream
op	14:18	0:0	4	=
water	14:20	0:0	4	0
water	14:21	0:0	4	;
cond	14:23	14:41	3	i_stream < p_sys -> i_streams
water	14:23	0:0	4	i_stream
op	14:32	0:0	4	<
water	14:34	0:0	4	p_sys
op	14:39	0:0	4	->
water	14:41	0:0	4	i_streams
forexpr	14:52	14:60	3	i_stream ++
water	14:52	0:0	4	i_stream
op	14:60	0:0	4	++
stmts	15:4	40:4	3	
water	15:4	0:0	4	{
decl	16:8	16:30	4	avi_stream_t	*p_stream
water	17:8	0:0	4	p_stream
op	17:17	0:0	4	=
op	17:19	0:0	4	&
water	17:20	0:0	4	p_sys
op	17:25	0:0	4	->
water	17:27	0:0	4	stream
op	17:33	0:0	4	[
water	17:34	0:0	4	i_stream
op	17:42	0:0	4	]
water	17:43	0:0	4	;
water	18:8	0:0	4	p_stream
op	18:16	0:0	4	->
water	18:18	0:0	4	f_fps
op	18:24	0:0	4	=
water	18:26	0:0	4	25
water	18:28	0:0	4	;
if	19:8	24:8	4	(p_stream -> i_duration > 0)
cond	19:12	19:35	5	p_stream -> i_duration > 0
water	19:12	0:0	6	p_stream
op	19:20	0:0	6	->
water	19:22	0:0	6	i_duration
op	19:33	0:0	6	>
water	19:35	0:0	6	0
stmts	20:8	24:8	5	
water	20:8	0:0	6	{
water	21:12	0:0	6	p_stream
op	21:20	0:0	6	->
water	21:22	0:0	6	f_fps
op	21:28	0:0	6	=
water	21:30	0:0	6	(
water	21:31	0:0	6	float
water	21:36	0:0	6	)
water	21:37	0:0	6	p_stream
op	21:45	0:0	6	->
water	21:47	0:0	6	i_frames
op	21:56	0:0	6	/
water	22:30	0:0	6	(
water	22:32	0:0	6	(
water	22:33	0:0	6	float
water	22:38	0:0	6	)
water	22:39	0:0	6	p_stream
op	22:47	0:0	6	->
water	22:49	0:0	6	i_duration
op	22:60	0:0	6	/
water	23:32	0:0	6	(
water	23:33	0:0	6	float
water	23:38	0:0	6	)
water	23:39	0:0	6	1000000
water	23:47	0:0	6	)
water	23:48	0:0	6	;
water	24:8	0:0	6	}
water	25:8	0:0	4	p_stream
op	25:16	0:0	4	->
water	25:18	0:0	4	i_bitrate
op	25:28	0:0	4	=
water	25:30	0:0	4	128
op	25:34	0:0	4	*
water	25:36	0:0	4	1024
water	25:40	0:0	4	;
if	26:8	32:8	4	(p_stream -> i_duration > 0)
cond	26:12	26:35	5	p_stream -> i_duration > 0
water	26:12	0:0	6	p_stream
op	26:20	0:0	6	->
water	26:22	0:0	6	i_duration
op	26:33	0:0	6	>
water	26:35	0:0	6	0
stmts	27:8	32:8	5	
water	27:8	0:0	6	{
water	28:12	0:0	6	p_stream
op	28:20	0:0	6	->
water	28:22	0:0	6	i_bitrate
op	28:32	0:0	6	=
water	29:16	0:0	6	8
op	29:18	0:0	6	*
water	29:20	0:0	6	(
water	29:21	0:0	6	uint64_t
water	29:29	0:0	6	)
water	29:30	0:0	6	1000000
op	29:38	0:0	6	*
water	30:20	0:0	6	(
water	30:21	0:0	6	uint64_t
water	30:29	0:0	6	)
water	30:30	0:0	6	p_stream
op	30:38	0:0	6	->
water	30:40	0:0	6	i_totalsize
op	30:52	0:0	6	/
water	31:20	0:0	6	(
water	31:21	0:0	6	uint64_t
water	31:29	0:0	6	)
water	31:30	0:0	6	p_stream
op	31:38	0:0	6	->
water	31:40	0:0	6	i_duration
water	31:50	0:0	6	;
water	32:8	0:0	6	}
call	33:8	39:60	4	msg_Info
arg	33:18	33:23	5	p_mux
water	33:18	0:0	6	p_mux
arg	33:25	34:46	5	"stream[%d] duration:%"PRId64" totalsize:%"PRId64" frames:%d fps:%f KiB/s:%d"
water	33:25	0:0	6	"stream[%d] duration:%"
water	33:48	0:0	6	PRId64
water	33:54	0:0	6	" totalsize:%"
water	33:68	0:0	6	PRId64
water	34:18	0:0	6	" frames:%d fps:%f KiB/s:%d"
arg	35:18	35:26	5	i_stream
water	35:18	0:0	6	i_stream
arg	36:18	36:66	5	(int64_t)p_stream->i_duration/(int64_t)1000000
water	36:18	0:0	6	(
water	36:19	0:0	6	int64_t
water	36:26	0:0	6	)
water	36:27	0:0	6	p_stream
op	36:35	0:0	6	->
water	36:37	0:0	6	i_duration
op	36:48	0:0	6	/
water	36:50	0:0	6	(
water	36:51	0:0	6	int64_t
water	36:58	0:0	6	)
water	36:59	0:0	6	1000000
arg	37:18	37:39	5	p_stream->i_totalsize
water	37:18	0:0	6	p_stream
op	37:26	0:0	6	->
water	37:28	0:0	6	i_totalsize
arg	38:18	38:36	5	p_stream->i_frames
water	38:18	0:0	6	p_stream
op	38:26	0:0	6	->
water	38:28	0:0	6	i_frames
arg	39:18	39:33	5	p_stream->f_fps
water	39:18	0:0	6	p_stream
op	39:26	0:0	6	->
water	39:28	0:0	6	f_fps
arg	39:35	39:60	5	p_stream->i_bitrate/1024
water	39:35	0:0	6	p_stream
op	39:43	0:0	6	->
water	39:45	0:0	6	i_bitrate
op	39:54	0:0	6	/
water	39:55	0:0	6	1024
water	39:61	0:0	4	;
water	40:4	0:0	4	}
water	41:4	0:0	2	p_hdr
op	41:10	0:0	2	=
call	41:12	41:40	2	avi_HeaderCreateRIFF
arg	41:34	41:40	3	p_mux
water	41:34	0:0	4	p_mux
water	41:41	0:0	2	;
call	42:4	42:43	2	sout_AccessOutSeek
arg	42:24	42:39	3	p_mux->p_access
water	42:24	0:0	4	p_mux
op	42:29	0:0	4	->
water	42:31	0:0	4	p_access
arg	42:41	42:43	3	0
water	42:41	0:0	4	0
water	42:44	0:0	2	;
call	43:4	43:48	2	sout_AccessOutWrite
arg	43:25	43:40	3	p_mux->p_access
water	43:25	0:0	4	p_mux
op	43:30	0:0	4	->
water	43:32	0:0	4	p_access
arg	43:42	43:48	3	p_hdr
water	43:42	0:0	4	p_hdr
water	43:49	0:0	2	;
for	44:4	50:4	2	(i_stream = 0 ;i_stream < p_sys -> i_streams;i_stream ++)
forinit	44:9	44:21	3	i_stream = 0 ;
water	44:9	0:0	4	i_stream
op	44:18	0:0	4	=
water	44:20	0:0	4	0
water	44:21	0:0	4	;
cond	44:23	44:41	3	i_stream < p_sys -> i_streams
water	44:23	0:0	4	i_stream
op	44:32	0:0	4	<
water	44:34	0:0	4	p_sys
op	44:39	0:0	4	->
water	44:41	0:0	4	i_streams
forexpr	44:52	44:60	3	i_stream ++
water	44:52	0:0	4	i_stream
op	44:60	0:0	4	++
stmts	45:4	50:4	3	
water	45:4	0:0	4	{
decl	46:8	46:30	4	avi_stream_t	*p_stream
water	47:8	0:0	4	p_stream
op	47:17	0:0	4	=
op	47:19	0:0	4	&
water	47:20	0:0	4	p_sys
op	47:25	0:0	4	->
water	47:27	0:0	4	stream
op	47:33	0:0	4	[
water	47:34	0:0	4	i_stream
op	47:42	0:0	4	]
water	47:43	0:0	4	;
call	48:8	48:30	4	free
arg	48:14	48:30	5	p_stream->p_bih
water	48:14	0:0	6	p_stream
op	48:22	0:0	6	->
water	48:24	0:0	6	p_bih
water	48:31	0:0	4	;
call	49:8	49:29	4	free
arg	49:14	49:29	5	p_stream->p_wf
water	49:14	0:0	6	p_stream
op	49:22	0:0	6	->
water	49:24	0:0	6	p_wf
water	49:30	0:0	4	;
water	50:4	0:0	4	}
call	51:4	51:28	2	free
arg	51:10	51:28	3	p_sys->idx1.entry
water	51:10	0:0	4	p_sys
op	51:15	0:0	4	->
water	51:17	0:0	4	idx1
op	51:21	0:0	4	.
water	51:22	0:0	4	entry
water	51:29	0:0	2	;
call	52:4	52:16	2	free
arg	52:10	52:16	3	p_sys
water	52:10	0:0	4	p_sys
water	52:17	0:0	2	;

func	2:0	56:0	0	static void	RV24VerticalMirror
params	2:30	0:0	1	
param	2:32	2:48	2	picture_t *	p_pic
param	2:50	2:69	2	picture_t *	p_outpic
param	3:33	3:44	2	int	i_plane
param	3:46	3:67	2	bool	b_left_to_right
stmnts	0:0	55:4	1	
decl	5:4	5:64	2	uint8_t	*p_in
water	5:17	0:0	2	,
decl	5:4	5:64	2	uint8_t	*p_in_end
water	5:28	0:0	2	,
decl	5:4	5:64	2	uint8_t	*p_line_start
water	5:43	0:0	2	,
decl	5:4	5:64	2	uint8_t	*p_line_end
water	5:56	0:0	2	,
decl	5:4	5:64	2	uint8_t	*p_out
water	6:4	0:0	2	p_in
op	6:9	0:0	2	=
water	6:11	0:0	2	p_pic
op	6:16	0:0	2	->
water	6:18	0:0	2	p
op	6:19	0:0	2	[
water	6:20	0:0	2	i_plane
op	6:27	0:0	2	]
op	6:28	0:0	2	.
water	6:29	0:0	2	p_pixels
water	6:37	0:0	2	;
water	7:4	0:0	2	p_in_end
op	7:13	0:0	2	=
water	7:15	0:0	2	p_in
op	7:20	0:0	2	+
water	7:22	0:0	2	p_pic
op	7:27	0:0	2	->
water	7:29	0:0	2	p
op	7:30	0:0	2	[
water	7:31	0:0	2	i_plane
op	7:38	0:0	2	]
op	7:39	0:0	2	.
water	7:40	0:0	2	i_visible_lines
op	8:8	0:0	2	*
water	8:10	0:0	2	p_pic
op	8:15	0:0	2	->
water	8:17	0:0	2	p
op	8:18	0:0	2	[
water	8:19	0:0	2	i_plane
op	8:26	0:0	2	]
op	8:27	0:0	2	.
water	8:28	0:0	2	i_pitch
water	8:35	0:0	2	;
water	9:4	0:0	2	p_out
op	9:10	0:0	2	=
water	9:12	0:0	2	p_outpic
op	9:20	0:0	2	->
water	9:22	0:0	2	p
op	9:23	0:0	2	[
water	9:24	0:0	2	i_plane
op	9:31	0:0	2	]
op	9:32	0:0	2	.
water	9:33	0:0	2	p_pixels
water	9:41	0:0	2	;
while	10:4	55:4	2	(p_in < p_in_end)
cond	10:11	10:18	3	p_in < p_in_end
water	10:11	0:0	4	p_in
op	10:16	0:0	4	<
water	10:18	0:0	4	p_in_end
stmts	11:4	55:4	3	
water	11:4	0:0	4	{
water	12:8	0:0	4	p_line_start
op	12:21	0:0	4	=
water	12:23	0:0	4	p_in
water	12:27	0:0	4	;
water	13:8	0:0	4	p_line_end
op	13:19	0:0	4	=
water	13:21	0:0	4	p_in
op	13:26	0:0	4	+
water	13:28	0:0	4	p_pic
op	13:33	0:0	4	->
water	13:35	0:0	4	p
op	13:36	0:0	4	[
water	13:37	0:0	4	i_plane
op	13:44	0:0	4	]
op	13:45	0:0	4	.
water	13:46	0:0	4	i_visible_pitch
water	13:61	0:0	4	;
while	14:8	51:8	4	(p_in < p_line_end)
cond	14:15	14:22	5	p_in < p_line_end
water	14:15	0:0	6	p_in
op	14:20	0:0	6	<
water	14:22	0:0	6	p_line_end
stmts	15:8	51:8	5	
water	15:8	0:0	6	{
if	17:12	33:12	6	(p_in < p_line_start + ( p_line_end - p_line_start ) / 2)
cond	17:17	17:71	7	p_in < p_line_start + ( p_line_end - p_line_start ) / 2
water	17:17	0:0	8	p_in
op	17:22	0:0	8	<
water	17:24	0:0	8	p_line_start
op	17:37	0:0	8	+
water	17:39	0:0	8	(
water	17:41	0:0	8	p_line_end
op	17:52	0:0	8	-
water	17:54	0:0	8	p_line_start
water	17:67	0:0	8	)
op	17:69	0:0	8	/
water	17:71	0:0	8	2
stmts	18:12	33:12	7	
water	18:12	0:0	8	{
if	19:16	24:16	8	(b_left_to_right)
cond	19:21	19:21	9	b_left_to_right
water	19:21	0:0	10	b_left_to_right
stmts	20:16	24:16	9	
water	20:16	0:0	10	{
op	21:20	0:0	10	*
water	21:21	0:0	10	p_out
op	21:26	0:0	10	++
op	21:29	0:0	10	=
op	21:31	0:0	10	*
water	21:32	0:0	10	p_in
op	21:36	0:0	10	++
water	21:38	0:0	10	;
op	22:20	0:0	10	*
water	22:21	0:0	10	p_out
op	22:26	0:0	10	++
op	22:29	0:0	10	=
op	22:31	0:0	10	*
water	22:32	0:0	10	p_in
op	22:36	0:0	10	++
water	22:38	0:0	10	;
op	23:20	0:0	10	*
water	23:21	0:0	10	p_out
op	23:26	0:0	10	++
op	23:29	0:0	10	=
op	23:31	0:0	10	*
water	23:32	0:0	10	p_in
op	23:36	0:0	10	++
water	23:38	0:0	10	;
water	24:16	0:0	10	}
else	25:16	32:16	8
stmts	26:16	32:16	9	
water	26:16	0:0	10	{
decl	27:20	27:75	10	uint8_t	*p_pixel
op	27:37	0:0	10	=
water	27:39	0:0	10	p_line_end
op	27:50	0:0	10	-
water	27:52	0:0	10	(
water	27:54	0:0	10	p_in
op	27:59	0:0	10	-
water	27:61	0:0	10	p_line_start
water	27:74	0:0	10	)
water	28:20	0:0	10	p_in
op	28:25	0:0	10	+=
water	28:28	0:0	10	3
water	28:29	0:0	10	;
op	29:20	0:0	10	*
water	29:21	0:0	10	p_out
op	29:26	0:0	10	++
op	29:29	0:0	10	=
op	29:31	0:0	10	*
water	29:32	0:0	10	p_pixel
op	29:39	0:0	10	++
water	29:41	0:0	10	;
op	30:20	0:0	10	*
water	30:21	0:0	10	p_out
op	30:26	0:0	10	++
op	30:29	0:0	10	=
op	30:31	0:0	10	*
water	30:32	0:0	10	p_pixel
op	30:39	0:0	10	++
water	30:41	0:0	10	;
op	31:20	0:0	10	*
water	31:21	0:0	10	p_out
op	31:26	0:0	10	++
op	31:29	0:0	10	=
op	31:31	0:0	10	*
water	31:32	0:0	10	p_pixel
op	31:39	0:0	10	++
water	31:41	0:0	10	;
water	32:16	0:0	10	}
water	33:12	0:0	8	}
else	34:12	50:12	6
stmts	35:12	50:12	7	
water	35:12	0:0	8	{
if	36:16	43:16	8	(b_left_to_right)
cond	36:21	36:21	9	b_left_to_right
water	36:21	0:0	10	b_left_to_right
stmts	37:16	43:16	9	
water	37:16	0:0	10	{
decl	38:20	38:75	10	uint8_t	*p_pixel
op	38:37	0:0	10	=
water	38:39	0:0	10	p_line_end
op	38:50	0:0	10	-
water	38:52	0:0	10	(
water	38:54	0:0	10	p_in
op	38:59	0:0	10	-
water	38:61	0:0	10	p_line_start
water	38:74	0:0	10	)
water	39:20	0:0	10	p_in
op	39:25	0:0	10	+=
water	39:28	0:0	10	3
water	39:29	0:0	10	;
op	40:20	0:0	10	*
water	40:21	0:0	10	p_out
op	40:26	0:0	10	++
op	40:29	0:0	10	=
op	40:31	0:0	10	*
water	40:32	0:0	10	p_pixel
op	40:39	0:0	10	++
water	40:41	0:0	10	;
op	41:20	0:0	10	*
water	41:21	0:0	10	p_out
op	41:26	0:0	10	++
op	41:29	0:0	10	=
op	41:31	0:0	10	*
water	41:32	0:0	10	p_pixel
op	41:39	0:0	10	++
water	41:41	0:0	10	;
op	42:20	0:0	10	*
water	42:21	0:0	10	p_out
op	42:26	0:0	10	++
op	42:29	0:0	10	=
op	42:31	0:0	10	*
water	42:32	0:0	10	p_pixel
op	42:39	0:0	10	++
water	42:41	0:0	10	;
water	43:16	0:0	10	}
else	44:16	49:16	8
stmts	45:16	49:16	9	
water	45:16	0:0	10	{
op	46:20	0:0	10	*
water	46:21	0:0	10	p_out
op	46:26	0:0	10	++
op	46:29	0:0	10	=
op	46:31	0:0	10	*
water	46:32	0:0	10	p_in
op	46:36	0:0	10	++
water	46:38	0:0	10	;
op	47:20	0:0	10	*
water	47:21	0:0	10	p_out
op	47:26	0:0	10	++
op	47:29	0:0	10	=
op	47:31	0:0	10	*
water	47:32	0:0	10	p_in
op	47:36	0:0	10	++
water	47:38	0:0	10	;
op	48:20	0:0	10	*
water	48:21	0:0	10	p_out
op	48:26	0:0	10	++
op	48:29	0:0	10	=
op	48:31	0:0	10	*
water	48:32	0:0	10	p_in
op	48:36	0:0	10	++
water	48:38	0:0	10	;
water	49:16	0:0	10	}
water	50:12	0:0	8	}
water	51:8	0:0	6	}
water	52:8	0:0	4	p_in
op	52:13	0:0	4	+=
water	52:16	0:0	4	p_pic
op	52:21	0:0	4	->
water	52:23	0:0	4	p
op	52:24	0:0	4	[
water	52:25	0:0	4	i_plane
op	52:32	0:0	4	]
op	52:33	0:0	4	.
water	52:34	0:0	4	i_pitch
op	52:42	0:0	4	-
water	52:44	0:0	4	p_pic
op	52:49	0:0	4	->
water	52:51	0:0	4	p
op	52:52	0:0	4	[
water	52:53	0:0	4	i_plane
op	52:60	0:0	4	]
op	52:61	0:0	4	.
water	52:62	0:0	4	i_visible_pitch
water	52:77	0:0	4	;
water	53:8	0:0	4	p_out
op	53:14	0:0	4	+=
water	53:17	0:0	4	p_outpic
op	53:25	0:0	4	->
water	53:27	0:0	4	p
op	53:28	0:0	4	[
water	53:29	0:0	4	i_plane
op	53:36	0:0	4	]
op	53:37	0:0	4	.
water	53:38	0:0	4	i_pitch
op	54:12	0:0	4	-
water	54:14	0:0	4	p_outpic
op	54:22	0:0	4	->
water	54:24	0:0	4	p
op	54:25	0:0	4	[
water	54:26	0:0	4	i_plane
op	54:33	0:0	4	]
op	54:34	0:0	4	.
water	54:35	0:0	4	i_visible_pitch
water	54:50	0:0	4	;
water	55:4	0:0	4	}

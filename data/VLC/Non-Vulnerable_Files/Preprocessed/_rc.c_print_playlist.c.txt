func	2:0	18:0	0	static void	print_playlist
params	2:26	0:0	1	
param	2:28	2:49	2	intf_thread_t *	p_intf
param	2:51	2:74	2	playlist_item_t *	p_item
param	2:76	2:88	2	int	i_level
stmnts	0:0	17:4	1	
decl	4:4	4:9	2	int	i
decl	5:4	5:38	2	char	psz_buffer[MSTRTIME_MAX_SIZE]
for	6:4	17:4	2	(i = 0 ;i < p_item -> i_children;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:27	3	i < p_item -> i_children
water	6:16	0:0	4	i
op	6:17	0:0	4	<
water	6:19	0:0	4	p_item
op	6:25	0:0	4	->
water	6:27	0:0	4	i_children
forexpr	6:39	6:40	3	i ++
water	6:39	0:0	4	i
op	6:40	0:0	4	++
stmts	7:4	17:4	3	
water	7:4	0:0	4	{
if	8:8	12:8	4	(p_item -> pp_children [ i ] -> p_input -> i_duration != - 1)
cond	8:12	8:60	5	p_item -> pp_children [ i ] -> p_input -> i_duration != - 1
water	8:12	0:0	6	p_item
op	8:18	0:0	6	->
water	8:20	0:0	6	pp_children
op	8:31	0:0	6	[
water	8:32	0:0	6	i
op	8:33	0:0	6	]
op	8:34	0:0	6	->
water	8:36	0:0	6	p_input
op	8:43	0:0	6	->
water	8:45	0:0	6	i_duration
op	8:56	0:0	6	!=
op	8:59	0:0	6	-
water	8:60	0:0	6	1
stmts	9:8	12:8	5	
water	9:8	0:0	6	{
call	10:12	10:93	6	secstotimestr
arg	10:27	10:37	7	psz_buffer
water	10:27	0:0	8	psz_buffer
arg	10:39	10:93	7	p_item->pp_children[i]->p_input->i_duration/1000000
water	10:39	0:0	8	p_item
op	10:45	0:0	8	->
water	10:47	0:0	8	pp_children
op	10:58	0:0	8	[
water	10:59	0:0	8	i
op	10:60	0:0	8	]
op	10:61	0:0	8	->
water	10:63	0:0	8	p_input
op	10:70	0:0	8	->
water	10:72	0:0	8	i_duration
op	10:83	0:0	8	/
water	10:85	0:0	8	1000000
water	10:94	0:0	6	;
call	11:12	11:108	6	msg_rc
arg	11:20	11:35	7	"|%*s- %s (%s)"
water	11:20	0:0	8	"|%*s- %s (%s)"
arg	11:37	11:48	7	2*i_level
water	11:37	0:0	8	2
op	11:39	0:0	8	*
water	11:41	0:0	8	i_level
arg	11:50	11:52	7	""
water	11:50	0:0	8	""
arg	11:54	11:95	7	p_item->pp_children[i]->p_input->psz_name
water	11:54	0:0	8	p_item
op	11:60	0:0	8	->
water	11:62	0:0	8	pp_children
op	11:73	0:0	8	[
water	11:74	0:0	8	i
op	11:75	0:0	8	]
op	11:76	0:0	8	->
water	11:78	0:0	8	p_input
op	11:85	0:0	8	->
water	11:87	0:0	8	psz_name
arg	11:97	11:108	7	psz_buffer
water	11:97	0:0	8	psz_buffer
water	11:109	0:0	6	;
water	12:8	0:0	6	}
else	13:8	14:92	4
stmts	14:12	14:92	5	
call	14:12	14:91	6	msg_rc
arg	14:20	14:30	7	"|%*s- %s"
water	14:20	0:0	8	"|%*s- %s"
arg	14:32	14:43	7	2*i_level
water	14:32	0:0	8	2
op	14:34	0:0	8	*
water	14:36	0:0	8	i_level
arg	14:45	14:47	7	""
water	14:45	0:0	8	""
arg	14:49	14:91	7	p_item->pp_children[i]->p_input->psz_name
water	14:49	0:0	8	p_item
op	14:55	0:0	8	->
water	14:57	0:0	8	pp_children
op	14:68	0:0	8	[
water	14:69	0:0	8	i
op	14:70	0:0	8	]
op	14:71	0:0	8	->
water	14:73	0:0	8	p_input
op	14:80	0:0	8	->
water	14:82	0:0	8	psz_name
water	14:92	0:0	6	;
if	15:8	16:73	4	(p_item -> pp_children [ i ] -> i_children >= 0)
cond	15:12	15:50	5	p_item -> pp_children [ i ] -> i_children >= 0
water	15:12	0:0	6	p_item
op	15:18	0:0	6	->
water	15:20	0:0	6	pp_children
op	15:31	0:0	6	[
water	15:32	0:0	6	i
op	15:33	0:0	6	]
op	15:34	0:0	6	->
water	15:36	0:0	6	i_children
op	15:47	0:0	6	>=
water	15:50	0:0	6	0
stmts	16:12	16:73	5	
call	16:12	16:72	6	print_playlist
arg	16:28	16:34	7	p_intf
water	16:28	0:0	8	p_intf
arg	16:36	16:58	7	p_item->pp_children[i]
water	16:36	0:0	8	p_item
op	16:42	0:0	8	->
water	16:44	0:0	8	pp_children
op	16:55	0:0	8	[
water	16:56	0:0	8	i
op	16:57	0:0	8	]
arg	16:60	16:72	7	i_level+1
water	16:60	0:0	8	i_level
op	16:68	0:0	8	+
water	16:70	0:0	8	1
water	16:73	0:0	6	;
water	17:4	0:0	4	}

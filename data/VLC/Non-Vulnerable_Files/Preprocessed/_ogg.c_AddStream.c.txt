func	2:0	170:0	0	static int	AddStream
params	2:20	0:0	1	
param	2:22	2:39	2	sout_mux_t *	p_mux
param	2:41	2:63	2	sout_input_t *	p_input
stmnts	0:0	169:22	1	
decl	4:4	4:40	2	sout_mux_sys_t	*p_sys
op	4:26	0:0	2	=
water	4:28	0:0	2	p_mux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
decl	5:4	5:28	2	ogg_stream_t	*p_stream
decl	6:4	6:18	2	uint16_t	i_tag
call	7:4	7:35	2	msg_Dbg
arg	7:13	7:18	3	p_mux
water	7:13	0:0	4	p_mux
arg	7:20	7:35	3	"adding input"
water	7:20	0:0	4	"adding input"
water	7:36	0:0	2	;
water	8:4	0:0	2	p_input
op	8:11	0:0	2	->
water	8:13	0:0	2	p_sys
op	8:19	0:0	2	=
water	8:21	0:0	2	p_stream
op	8:30	0:0	2	=
call	8:32	8:66	2	calloc
arg	8:40	8:41	3	1
water	8:40	0:0	4	1
arg	8:43	8:66	3	sizeof(ogg_stream_t)
op	8:43	0:0	4	sizeof
water	8:49	0:0	4	(
water	8:51	0:0	4	ogg_stream_t
water	8:64	0:0	4	)
water	8:67	0:0	2	;
if	9:4	10:25	2	(! p_stream)
cond	9:8	9:9	3	! p_stream
op	9:8	0:0	4	!
water	9:9	0:0	4	p_stream
stmts	10:8	10:25	3	
return	10:8	10:25	4	VLC_ENOMEM
water	10:15	0:0	5	VLC_ENOMEM
water	11:4	0:0	2	p_stream
op	11:12	0:0	2	->
water	11:14	0:0	2	i_cat
op	11:26	0:0	2	=
water	11:28	0:0	2	p_input
op	11:35	0:0	2	->
water	11:37	0:0	2	p_fmt
op	11:42	0:0	2	->
water	11:44	0:0	2	i_cat
water	11:49	0:0	2	;
water	12:4	0:0	2	p_stream
op	12:12	0:0	2	->
water	12:14	0:0	2	i_fourcc
op	12:26	0:0	2	=
water	12:28	0:0	2	p_input
op	12:35	0:0	2	->
water	12:37	0:0	2	p_fmt
op	12:42	0:0	2	->
water	12:44	0:0	2	i_codec
water	12:51	0:0	2	;
water	13:4	0:0	2	p_stream
op	13:12	0:0	2	->
water	13:14	0:0	2	i_serial_no
op	13:26	0:0	2	=
water	13:28	0:0	2	p_sys
op	13:33	0:0	2	->
water	13:35	0:0	2	i_next_serial_no
op	13:51	0:0	2	++
water	13:53	0:0	2	;
water	14:4	0:0	2	p_stream
op	14:12	0:0	2	->
water	14:14	0:0	2	i_packet_no
op	14:26	0:0	2	=
water	14:28	0:0	2	0
water	14:29	0:0	2	;
water	15:4	0:0	2	p_stream
op	15:12	0:0	2	->
water	15:14	0:0	2	i_last_keyframe
op	15:30	0:0	2	=
water	15:32	0:0	2	0
water	15:33	0:0	2	;
water	16:4	0:0	2	p_stream
op	16:12	0:0	2	->
water	16:14	0:0	2	i_num_keyframes
op	16:30	0:0	2	=
water	16:32	0:0	2	0
water	16:33	0:0	2	;
water	17:4	0:0	2	p_stream
op	17:12	0:0	2	->
water	17:14	0:0	2	i_num_frames
op	17:27	0:0	2	=
water	17:29	0:0	2	0
water	17:30	0:0	2	;
water	18:4	0:0	2	p_stream
op	18:12	0:0	2	->
water	18:14	0:0	2	p_oggds_header
op	18:29	0:0	2	=
water	18:31	0:0	2	0
water	18:32	0:0	2	;
water	19:4	0:0	2	p_stream
op	19:12	0:0	2	->
water	19:14	0:0	2	i_baseptsdelay
op	19:29	0:0	2	=
op	19:31	0:0	2	-
water	19:32	0:0	2	1
water	19:33	0:0	2	;
water	20:4	0:0	2	p_stream
op	20:12	0:0	2	->
water	20:14	0:0	2	i_dirac_last_pt
op	20:30	0:0	2	=
op	20:32	0:0	2	-
water	20:33	0:0	2	1
water	20:34	0:0	2	;
water	21:4	0:0	2	p_stream
op	21:12	0:0	2	->
water	21:14	0:0	2	i_dirac_last_dt
op	21:30	0:0	2	=
op	21:32	0:0	2	-
water	21:33	0:0	2	1
water	21:34	0:0	2	;
switch	22:4	166:4	2	(p_input -> p_fmt -> i_cat)
cond	22:12	22:28	3	p_input -> p_fmt -> i_cat
water	22:12	0:0	4	p_input
op	22:19	0:0	4	->
water	22:21	0:0	4	p_fmt
op	22:26	0:0	4	->
water	22:28	0:0	4	i_cat
stmts	23:4	166:4	3	
water	23:4	0:0	4	{
label	24:4	24:17	4	case VIDEO_ES :
if	25:8	31:8	4	(! p_input -> p_fmt -> video . i_frame_rate || ! p_input -> p_fmt -> video . i_frame_rate_base)
cond	25:12	26:35	5	! p_input -> p_fmt -> video . i_frame_rate || ! p_input -> p_fmt -> video . i_frame_rate_base
op	25:12	0:0	6	!
water	25:13	0:0	6	p_input
op	25:20	0:0	6	->
water	25:22	0:0	6	p_fmt
op	25:27	0:0	6	->
water	25:29	0:0	6	video
op	25:34	0:0	6	.
water	25:35	0:0	6	i_frame_rate
op	25:48	0:0	6	||
op	26:12	0:0	6	!
water	26:13	0:0	6	p_input
op	26:20	0:0	6	->
water	26:22	0:0	6	p_fmt
op	26:27	0:0	6	->
water	26:29	0:0	6	video
op	26:34	0:0	6	.
water	26:35	0:0	6	i_frame_rate_base
stmts	27:8	31:8	5	
water	27:8	0:0	6	{
call	28:12	28:66	6	msg_Warn
arg	28:22	28:27	7	p_mux
water	28:22	0:0	8	p_mux
arg	28:29	28:66	7	"Missing frame rate, assuming 25fps"
water	28:29	0:0	8	"Missing frame rate, assuming 25fps"
water	28:67	0:0	6	;
water	29:12	0:0	6	p_input
op	29:19	0:0	6	->
water	29:21	0:0	6	p_fmt
op	29:26	0:0	6	->
water	29:28	0:0	6	video
op	29:33	0:0	6	.
water	29:34	0:0	6	i_frame_rate
op	29:47	0:0	6	=
water	29:49	0:0	6	25
water	29:51	0:0	6	;
water	30:12	0:0	6	p_input
op	30:19	0:0	6	->
water	30:21	0:0	6	p_fmt
op	30:26	0:0	6	->
water	30:28	0:0	6	video
op	30:33	0:0	6	.
water	30:34	0:0	6	i_frame_rate_base
op	30:52	0:0	6	=
water	30:54	0:0	6	1
water	30:55	0:0	6	;
water	31:8	0:0	6	}
switch	32:8	88:8	4	(p_stream -> i_fourcc)
cond	32:16	32:26	5	p_stream -> i_fourcc
water	32:16	0:0	6	p_stream
op	32:24	0:0	6	->
water	32:26	0:0	6	i_fourcc
stmts	33:8	88:8	5	
water	33:8	0:0	6	{
label	34:8	34:27	6	case VLC_CODEC_MP4V :
label	35:8	35:27	6	case VLC_CODEC_MPGV :
label	36:8	36:27	6	case VLC_CODEC_MP1V :
label	37:8	37:27	6	case VLC_CODEC_MP2V :
label	38:8	38:27	6	case VLC_CODEC_DIV3 :
label	39:8	39:27	6	case VLC_CODEC_MJPG :
label	40:8	40:27	6	case VLC_CODEC_WMV1 :
label	41:8	41:27	6	case VLC_CODEC_WMV2 :
label	42:8	42:27	6	case VLC_CODEC_WMV3 :
water	43:12	0:0	6	p_stream
op	43:20	0:0	6	->
water	43:22	0:0	6	p_oggds_header
op	43:37	0:0	6	=
call	43:39	43:73	6	calloc
arg	43:47	43:48	7	1
water	43:47	0:0	8	1
arg	43:50	43:73	7	sizeof(oggds_header_t)
op	43:50	0:0	8	sizeof
water	43:56	0:0	8	(
water	43:57	0:0	8	oggds_header_t
water	43:71	0:0	8	)
water	43:74	0:0	6	;
if	44:12	48:12	6	(! p_stream -> p_oggds_header)
cond	44:16	44:27	7	! p_stream -> p_oggds_header
op	44:16	0:0	8	!
water	44:17	0:0	8	p_stream
op	44:25	0:0	8	->
water	44:27	0:0	8	p_oggds_header
stmts	45:12	48:12	7	
water	45:12	0:0	8	{
call	46:16	46:31	8	free
arg	46:22	46:31	9	p_stream
water	46:22	0:0	10	p_stream
water	46:32	0:0	8	;
return	47:16	47:33	8	VLC_ENOMEM
water	47:23	0:0	9	VLC_ENOMEM
water	48:12	0:0	8	}
water	49:12	0:0	6	p_stream
op	49:20	0:0	6	->
water	49:22	0:0	6	p_oggds_header
op	49:36	0:0	6	->
water	49:38	0:0	6	i_packet_type
op	49:52	0:0	6	=
water	49:54	0:0	6	PACKET_TYPE_HEADER
water	49:72	0:0	6	;
call	50:12	50:70	6	memcpy
arg	50:20	50:57	7	p_stream->p_oggds_header->stream_type
water	50:20	0:0	8	p_stream
op	50:28	0:0	8	->
water	50:30	0:0	8	p_oggds_header
op	50:44	0:0	8	->
water	50:46	0:0	8	stream_type
arg	50:59	50:66	7	"video"
water	50:59	0:0	8	"video"
arg	50:68	50:70	7	5
water	50:68	0:0	8	5
water	50:71	0:0	6	;
if	51:12	54:12	6	(p_stream -> i_fourcc == VLC_CODEC_MP4V)
cond	51:16	51:38	7	p_stream -> i_fourcc == VLC_CODEC_MP4V
water	51:16	0:0	8	p_stream
op	51:24	0:0	8	->
water	51:26	0:0	8	i_fourcc
op	51:35	0:0	8	==
water	51:38	0:0	8	VLC_CODEC_MP4V
stmts	52:12	54:12	7	
water	52:12	0:0	8	{
call	53:16	53:70	8	memcpy
arg	53:24	53:58	9	p_stream->p_oggds_header->sub_type
water	53:24	0:0	10	p_stream
op	53:32	0:0	10	->
water	53:34	0:0	10	p_oggds_header
op	53:48	0:0	10	->
water	53:50	0:0	10	sub_type
arg	53:60	53:66	9	"XVID"
water	53:60	0:0	10	"XVID"
arg	53:68	53:70	9	4
water	53:68	0:0	10	4
water	53:71	0:0	8	;
water	54:12	0:0	8	}
else	55:12	58:12	6
stmts	55:17	58:12	7	
if	55:17	58:12	8	(p_stream -> i_fourcc == VLC_CODEC_DIV3)
cond	55:21	55:43	9	p_stream -> i_fourcc == VLC_CODEC_DIV3
water	55:21	0:0	10	p_stream
op	55:29	0:0	10	->
water	55:31	0:0	10	i_fourcc
op	55:40	0:0	10	==
water	55:43	0:0	10	VLC_CODEC_DIV3
stmts	56:12	58:12	9	
water	56:12	0:0	10	{
call	57:16	57:70	10	memcpy
arg	57:24	57:58	11	p_stream->p_oggds_header->sub_type
water	57:24	0:0	12	p_stream
op	57:32	0:0	12	->
water	57:34	0:0	12	p_oggds_header
op	57:48	0:0	12	->
water	57:50	0:0	12	sub_type
arg	57:60	57:66	11	"DIV3"
water	57:60	0:0	12	"DIV3"
arg	57:68	57:70	11	4
water	57:68	0:0	12	4
water	57:71	0:0	10	;
water	58:12	0:0	10	}
else	59:12	63:12	6
stmts	60:12	63:12	7	
water	60:12	0:0	8	{
call	61:16	62:47	8	memcpy
arg	61:24	61:58	9	p_stream->p_oggds_header->sub_type
water	61:24	0:0	10	p_stream
op	61:32	0:0	10	->
water	61:34	0:0	10	p_oggds_header
op	61:48	0:0	10	->
water	61:50	0:0	10	sub_type
arg	62:24	62:43	9	&p_stream->i_fourcc
op	62:24	0:0	10	&
water	62:25	0:0	10	p_stream
op	62:33	0:0	10	->
water	62:35	0:0	10	i_fourcc
arg	62:45	62:47	9	4
water	62:45	0:0	10	4
water	62:48	0:0	8	;
water	63:12	0:0	8	}
water	64:12	0:0	6	p_stream
op	64:20	0:0	6	->
water	64:22	0:0	6	p_oggds_header
op	64:36	0:0	6	->
water	64:38	0:0	6	i_size
op	64:45	0:0	6	=
water	64:47	0:0	6	0
water	64:49	0:0	6	;
water	65:12	0:0	6	p_stream
op	65:20	0:0	6	->
water	65:22	0:0	6	p_oggds_header
op	65:36	0:0	6	->
water	65:38	0:0	6	i_time_unit
op	65:50	0:0	6	=
call	66:21	66:37	6	INT64_C
arg	66:29	66:37	7	10000000
water	66:29	0:0	8	10000000
op	66:39	0:0	6	*
water	66:41	0:0	6	p_input
op	66:48	0:0	6	->
water	66:50	0:0	6	p_fmt
op	66:55	0:0	6	->
water	66:57	0:0	6	video
op	66:62	0:0	6	.
water	66:63	0:0	6	i_frame_rate_base
op	66:81	0:0	6	/
water	67:21	0:0	6	(
water	67:22	0:0	6	int64_t
water	67:29	0:0	6	)
water	67:30	0:0	6	p_input
op	67:37	0:0	6	->
water	67:39	0:0	6	p_fmt
op	67:44	0:0	6	->
water	67:46	0:0	6	video
op	67:51	0:0	6	.
water	67:52	0:0	6	i_frame_rate
water	67:64	0:0	6	;
water	68:12	0:0	6	p_stream
op	68:20	0:0	6	->
water	68:22	0:0	6	p_oggds_header
op	68:36	0:0	6	->
water	68:38	0:0	6	i_samples_per_unit
op	68:57	0:0	6	=
water	68:59	0:0	6	1
water	68:60	0:0	6	;
water	69:12	0:0	6	p_stream
op	69:20	0:0	6	->
water	69:22	0:0	6	p_oggds_header
op	69:36	0:0	6	->
water	69:38	0:0	6	i_default_len
op	69:52	0:0	6	=
water	69:54	0:0	6	1
water	69:56	0:0	6	;
water	70:12	0:0	6	p_stream
op	70:20	0:0	6	->
water	70:22	0:0	6	p_oggds_header
op	70:36	0:0	6	->
water	70:38	0:0	6	i_buffer_size
op	70:52	0:0	6	=
water	70:54	0:0	6	1024
op	70:58	0:0	6	*
water	70:59	0:0	6	1024
water	70:63	0:0	6	;
water	71:12	0:0	6	p_stream
op	71:20	0:0	6	->
water	71:22	0:0	6	p_oggds_header
op	71:36	0:0	6	->
water	71:38	0:0	6	i_bits_per_sample
op	71:56	0:0	6	=
water	71:58	0:0	6	0
water	71:59	0:0	6	;
water	72:12	0:0	6	p_stream
op	72:20	0:0	6	->
water	72:22	0:0	6	p_oggds_header
op	72:36	0:0	6	->
water	72:38	0:0	6	header
op	72:44	0:0	6	.
water	72:45	0:0	6	video
op	72:50	0:0	6	.
water	72:51	0:0	6	i_width
op	72:59	0:0	6	=
water	72:61	0:0	6	p_input
op	72:68	0:0	6	->
water	72:70	0:0	6	p_fmt
op	72:75	0:0	6	->
water	72:77	0:0	6	video
op	72:82	0:0	6	.
water	72:83	0:0	6	i_width
water	72:90	0:0	6	;
water	73:12	0:0	6	p_stream
op	73:20	0:0	6	->
water	73:22	0:0	6	p_oggds_header
op	73:36	0:0	6	->
water	73:38	0:0	6	header
op	73:44	0:0	6	.
water	73:45	0:0	6	video
op	73:50	0:0	6	.
water	73:51	0:0	6	i_height
op	73:60	0:0	6	=
water	73:62	0:0	6	p_input
op	73:69	0:0	6	->
water	73:71	0:0	6	p_fmt
op	73:76	0:0	6	->
water	73:78	0:0	6	video
op	73:83	0:0	6	.
water	73:84	0:0	6	i_height
water	73:92	0:0	6	;
call	74:12	74:72	6	msg_Dbg
arg	74:21	74:26	7	p_mux
water	74:21	0:0	8	p_mux
arg	74:28	74:42	7	"%4.4s stream"
water	74:28	0:0	8	"%4.4s stream"
arg	74:44	74:72	7	(char*)&p_stream->i_fourcc
water	74:44	0:0	8	(
water	74:45	0:0	8	char
op	74:50	0:0	8	*
water	74:51	0:0	8	)
op	74:52	0:0	8	&
water	74:53	0:0	8	p_stream
op	74:61	0:0	8	->
water	74:63	0:0	8	i_fourcc
water	74:73	0:0	6	;
break	75:12	75:17	6	
label	76:8	76:28	6	case VLC_CODEC_DIRAC :
call	77:12	77:43	6	msg_Dbg
arg	77:21	77:26	7	p_mux
water	77:21	0:0	8	p_mux
arg	77:28	77:43	7	"dirac stream"
water	77:28	0:0	8	"dirac stream"
water	77:44	0:0	6	;
break	78:12	78:17	6	
label	79:8	79:29	6	case VLC_CODEC_THEORA :
call	80:12	80:44	6	msg_Dbg
arg	80:21	80:26	7	p_mux
water	80:21	0:0	8	p_mux
arg	80:28	80:44	7	"theora stream"
water	80:28	0:0	8	"theora stream"
water	80:45	0:0	6	;
break	81:12	81:17	6	
label	82:8	82:26	6	case VLC_CODEC_VP8 :
call	83:12	83:41	6	msg_Dbg
arg	83:21	83:26	7	p_mux
water	83:21	0:0	8	p_mux
arg	83:28	83:41	7	"VP8 stream"
water	83:28	0:0	8	"VP8 stream"
water	83:42	0:0	6	;
break	84:12	84:17	6	
label	85:8	85:15	6	default :
call	86:12	86:37	6	FREENULL
arg	86:22	86:37	7	p_input->p_sys
water	86:22	0:0	8	p_input
op	86:29	0:0	8	->
water	86:31	0:0	8	p_sys
water	86:38	0:0	6	;
return	87:12	87:31	6	VLC_EGENERIC
water	87:19	0:0	7	VLC_EGENERIC
water	88:8	0:0	6	}
break	89:8	89:13	4	
label	90:4	90:17	4	case AUDIO_ES :
switch	91:8	142:8	4	(p_stream -> i_fourcc)
cond	91:16	91:26	5	p_stream -> i_fourcc
water	91:16	0:0	6	p_stream
op	91:24	0:0	6	->
water	91:26	0:0	6	i_fourcc
stmts	92:8	142:8	5	
water	92:8	0:0	6	{
label	93:8	93:27	6	case VLC_CODEC_OPUS :
call	94:12	94:42	6	msg_Dbg
arg	94:21	94:26	7	p_mux
water	94:21	0:0	8	p_mux
arg	94:28	94:42	7	"opus stream"
water	94:28	0:0	8	"opus stream"
water	94:43	0:0	6	;
break	95:12	95:17	6	
label	96:8	96:29	6	case VLC_CODEC_VORBIS :
call	97:12	97:44	6	msg_Dbg
arg	97:21	97:26	7	p_mux
water	97:21	0:0	8	p_mux
arg	97:28	97:44	7	"vorbis stream"
water	97:28	0:0	8	"vorbis stream"
water	97:45	0:0	6	;
break	98:12	98:17	6	
label	99:8	99:28	6	case VLC_CODEC_SPEEX :
call	100:12	100:43	6	msg_Dbg
arg	100:21	100:26	7	p_mux
water	100:21	0:0	8	p_mux
arg	100:28	100:43	7	"speex stream"
water	100:28	0:0	8	"speex stream"
water	100:44	0:0	6	;
break	101:12	101:17	6	
label	102:8	102:27	6	case VLC_CODEC_FLAC :
call	103:12	103:42	6	msg_Dbg
arg	103:21	103:26	7	p_mux
water	103:21	0:0	8	p_mux
arg	103:28	103:42	7	"flac stream"
water	103:28	0:0	8	"flac stream"
water	103:43	0:0	6	;
break	104:12	104:17	6	
label	105:8	105:15	6	default :
call	106:12	106:57	6	fourcc_to_wf_tag
arg	106:30	106:48	7	p_stream->i_fourcc
water	106:30	0:0	8	p_stream
op	106:38	0:0	8	->
water	106:40	0:0	8	i_fourcc
arg	106:50	106:57	7	&i_tag
op	106:50	0:0	8	&
water	106:51	0:0	8	i_tag
water	106:58	0:0	6	;
if	107:12	111:12	6	(i_tag == WAVE_FORMAT_UNKNOWN)
cond	107:16	107:25	7	i_tag == WAVE_FORMAT_UNKNOWN
water	107:16	0:0	8	i_tag
op	107:22	0:0	8	==
water	107:25	0:0	8	WAVE_FORMAT_UNKNOWN
stmts	108:12	111:12	7	
water	108:12	0:0	8	{
call	109:16	109:41	8	FREENULL
arg	109:26	109:41	9	p_input->p_sys
water	109:26	0:0	10	p_input
op	109:33	0:0	10	->
water	109:35	0:0	10	p_sys
water	109:42	0:0	8	;
return	110:16	110:35	8	VLC_EGENERIC
water	110:23	0:0	9	VLC_EGENERIC
water	111:12	0:0	8	}
water	112:12	0:0	6	p_stream
op	112:20	0:0	6	->
water	112:22	0:0	6	p_oggds_header
op	112:37	0:0	6	=
call	113:16	113:73	6	malloc
arg	113:24	113:73	7	sizeof(oggds_header_t)+p_input->p_fmt->i_extra
op	113:24	0:0	8	sizeof
water	113:30	0:0	8	(
water	113:31	0:0	8	oggds_header_t
water	113:45	0:0	8	)
op	113:47	0:0	8	+
water	113:49	0:0	8	p_input
op	113:56	0:0	8	->
water	113:58	0:0	8	p_fmt
op	113:63	0:0	8	->
water	113:65	0:0	8	i_extra
water	113:74	0:0	6	;
if	114:12	118:12	6	(! p_stream -> p_oggds_header)
cond	114:16	114:27	7	! p_stream -> p_oggds_header
op	114:16	0:0	8	!
water	114:17	0:0	8	p_stream
op	114:25	0:0	8	->
water	114:27	0:0	8	p_oggds_header
stmts	115:12	118:12	7	
water	115:12	0:0	8	{
call	116:16	116:31	8	free
arg	116:22	116:31	9	p_stream
water	116:22	0:0	10	p_stream
water	116:32	0:0	8	;
return	117:16	117:33	8	VLC_ENOMEM
water	117:23	0:0	9	VLC_ENOMEM
water	118:12	0:0	8	}
call	119:12	119:72	6	memset
arg	119:20	119:44	7	p_stream->p_oggds_header
water	119:20	0:0	8	p_stream
op	119:28	0:0	8	->
water	119:30	0:0	8	p_oggds_header
arg	119:46	119:47	7	0
water	119:46	0:0	8	0
arg	119:49	119:72	7	sizeof(oggds_header_t)
op	119:49	0:0	8	sizeof
water	119:55	0:0	8	(
water	119:56	0:0	8	oggds_header_t
water	119:70	0:0	8	)
water	119:73	0:0	6	;
water	120:12	0:0	6	p_stream
op	120:20	0:0	6	->
water	120:22	0:0	6	p_oggds_header
op	120:36	0:0	6	->
water	120:38	0:0	6	i_packet_type
op	120:52	0:0	6	=
water	120:54	0:0	6	PACKET_TYPE_HEADER
water	120:72	0:0	6	;
water	121:12	0:0	6	p_stream
op	121:20	0:0	6	->
water	121:22	0:0	6	p_oggds_header
op	121:36	0:0	6	->
water	121:38	0:0	6	i_size
op	121:45	0:0	6	=
water	121:47	0:0	6	p_input
op	121:54	0:0	6	->
water	121:56	0:0	6	p_fmt
op	121:61	0:0	6	->
water	121:63	0:0	6	i_extra
water	121:70	0:0	6	;
if	122:12	126:12	6	(p_input -> p_fmt -> i_extra)
cond	122:16	122:32	7	p_input -> p_fmt -> i_extra
water	122:16	0:0	8	p_input
op	122:23	0:0	8	->
water	122:25	0:0	8	p_fmt
op	122:30	0:0	8	->
water	122:32	0:0	8	i_extra
stmts	123:12	126:12	7	
water	123:12	0:0	8	{
call	124:16	125:73	8	memcpy
arg	124:24	124:52	9	&p_stream->p_oggds_header[1]
op	124:24	0:0	10	&
water	124:25	0:0	10	p_stream
op	124:33	0:0	10	->
water	124:35	0:0	10	p_oggds_header
op	124:49	0:0	10	[
water	124:50	0:0	10	1
op	124:51	0:0	10	]
arg	125:24	125:47	9	p_input->p_fmt->p_extra
water	125:24	0:0	10	p_input
op	125:31	0:0	10	->
water	125:33	0:0	10	p_fmt
op	125:38	0:0	10	->
water	125:40	0:0	10	p_extra
arg	125:49	125:73	9	p_input->p_fmt->i_extra
water	125:49	0:0	10	p_input
op	125:56	0:0	10	->
water	125:58	0:0	10	p_fmt
op	125:63	0:0	10	->
water	125:65	0:0	10	i_extra
water	125:74	0:0	8	;
water	126:12	0:0	8	}
call	127:12	127:70	6	memcpy
arg	127:20	127:57	7	p_stream->p_oggds_header->stream_type
water	127:20	0:0	8	p_stream
op	127:28	0:0	8	->
water	127:30	0:0	8	p_oggds_header
op	127:44	0:0	8	->
water	127:46	0:0	8	stream_type
arg	127:59	127:66	7	"audio"
water	127:59	0:0	8	"audio"
arg	127:68	127:70	7	5
water	127:68	0:0	8	5
water	127:71	0:0	6	;
call	128:12	128:61	6	memset
arg	128:20	128:54	7	p_stream->p_oggds_header->sub_type
water	128:20	0:0	8	p_stream
op	128:28	0:0	8	->
water	128:30	0:0	8	p_oggds_header
op	128:44	0:0	8	->
water	128:46	0:0	8	sub_type
arg	128:56	128:57	7	0
water	128:56	0:0	8	0
arg	128:59	128:61	7	4
water	128:59	0:0	8	4
water	128:62	0:0	6	;
decl	129:12	129:23	6	char	buf[5]
call	130:12	130:57	6	snprintf
arg	130:22	130:25	7	buf
water	130:22	0:0	8	buf
arg	130:27	130:38	7	sizeof(buf)
op	130:27	0:0	8	sizeof
water	130:33	0:0	8	(
water	130:34	0:0	8	buf
water	130:37	0:0	8	)
arg	130:40	130:49	7	"%"PRIx16
water	130:40	0:0	8	"%"
water	130:43	0:0	8	PRIx16
arg	130:51	130:57	7	i_tag
water	130:51	0:0	8	i_tag
water	130:58	0:0	6	;
call	131:12	131:64	6	strncpy
arg	131:21	131:55	7	p_stream->p_oggds_header->sub_type
water	131:21	0:0	8	p_stream
op	131:29	0:0	8	->
water	131:31	0:0	8	p_oggds_header
op	131:45	0:0	8	->
water	131:47	0:0	8	sub_type
arg	131:57	131:60	7	buf
water	131:57	0:0	8	buf
arg	131:62	131:64	7	4
water	131:62	0:0	8	4
water	131:65	0:0	6	;
water	132:12	0:0	6	p_stream
op	132:20	0:0	6	->
water	132:22	0:0	6	p_oggds_header
op	132:36	0:0	6	->
water	132:38	0:0	6	i_time_unit
op	132:50	0:0	6	=
call	132:52	132:68	6	INT64_C
arg	132:60	132:68	7	10000000
water	132:60	0:0	8	10000000
water	132:69	0:0	6	;
water	133:12	0:0	6	p_stream
op	133:20	0:0	6	->
water	133:22	0:0	6	p_oggds_header
op	133:36	0:0	6	->
water	133:38	0:0	6	i_default_len
op	133:52	0:0	6	=
water	133:54	0:0	6	1
water	133:55	0:0	6	;
water	134:12	0:0	6	p_stream
op	134:20	0:0	6	->
water	134:22	0:0	6	p_oggds_header
op	134:36	0:0	6	->
water	134:38	0:0	6	i_buffer_size
op	134:52	0:0	6	=
water	134:54	0:0	6	30
op	134:56	0:0	6	*
water	134:57	0:0	6	1024
water	134:62	0:0	6	;
water	135:12	0:0	6	p_stream
op	135:20	0:0	6	->
water	135:22	0:0	6	p_oggds_header
op	135:36	0:0	6	->
water	135:38	0:0	6	i_samples_per_unit
op	135:57	0:0	6	=
water	135:59	0:0	6	p_input
op	135:66	0:0	6	->
water	135:68	0:0	6	p_fmt
op	135:73	0:0	6	->
water	135:75	0:0	6	audio
op	135:80	0:0	6	.
water	135:81	0:0	6	i_rate
water	135:87	0:0	6	;
water	136:12	0:0	6	p_stream
op	136:20	0:0	6	->
water	136:22	0:0	6	p_oggds_header
op	136:36	0:0	6	->
water	136:38	0:0	6	i_bits_per_sample
op	136:56	0:0	6	=
water	136:58	0:0	6	p_input
op	136:65	0:0	6	->
water	136:67	0:0	6	p_fmt
op	136:72	0:0	6	->
water	136:74	0:0	6	audio
op	136:79	0:0	6	.
water	136:80	0:0	6	i_bitspersample
water	136:95	0:0	6	;
water	137:12	0:0	6	p_stream
op	137:20	0:0	6	->
water	137:22	0:0	6	p_oggds_header
op	137:36	0:0	6	->
water	137:38	0:0	6	header
op	137:44	0:0	6	.
water	137:45	0:0	6	audio
op	137:50	0:0	6	.
water	137:51	0:0	6	i_channels
op	137:62	0:0	6	=
water	137:64	0:0	6	p_input
op	137:71	0:0	6	->
water	137:73	0:0	6	p_fmt
op	137:78	0:0	6	->
water	137:80	0:0	6	audio
op	137:85	0:0	6	.
water	137:86	0:0	6	i_channels
water	137:96	0:0	6	;
water	138:12	0:0	6	p_stream
op	138:20	0:0	6	->
water	138:22	0:0	6	p_oggds_header
op	138:36	0:0	6	->
water	138:38	0:0	6	header
op	138:44	0:0	6	.
water	138:45	0:0	6	audio
op	138:50	0:0	6	.
water	138:51	0:0	6	i_block_align
op	138:65	0:0	6	=
water	138:68	0:0	6	p_input
op	138:75	0:0	6	->
water	138:77	0:0	6	p_fmt
op	138:82	0:0	6	->
water	138:84	0:0	6	audio
op	138:89	0:0	6	.
water	138:90	0:0	6	i_blockalign
water	138:102	0:0	6	;
water	139:12	0:0	6	p_stream
op	139:20	0:0	6	->
water	139:22	0:0	6	p_oggds_header
op	139:36	0:0	6	->
water	139:38	0:0	6	header
op	139:44	0:0	6	.
water	139:45	0:0	6	audio
op	139:50	0:0	6	.
water	139:51	0:0	6	i_avgbytespersec
op	139:68	0:0	6	=
water	139:71	0:0	6	p_input
op	139:78	0:0	6	->
water	139:80	0:0	6	p_fmt
op	139:85	0:0	6	->
water	139:87	0:0	6	i_bitrate
op	139:97	0:0	6	/
water	139:99	0:0	6	8
water	139:100	0:0	6	;
call	140:12	140:72	6	msg_Dbg
arg	140:21	140:26	7	p_mux
water	140:21	0:0	8	p_mux
arg	140:28	140:42	7	"%4.4s stream"
water	140:28	0:0	8	"%4.4s stream"
arg	140:44	140:72	7	(char*)&p_stream->i_fourcc
water	140:44	0:0	8	(
water	140:45	0:0	8	char
op	140:50	0:0	8	*
water	140:51	0:0	8	)
op	140:52	0:0	8	&
water	140:53	0:0	8	p_stream
op	140:61	0:0	8	->
water	140:63	0:0	8	i_fourcc
water	140:73	0:0	6	;
break	141:12	141:17	6	
water	142:8	0:0	6	}
break	143:8	143:13	4	
label	144:4	144:15	4	case SPU_ES :
switch	145:8	161:8	4	(p_stream -> i_fourcc)
cond	145:16	145:26	5	p_stream -> i_fourcc
water	145:16	0:0	6	p_stream
op	145:24	0:0	6	->
water	145:26	0:0	6	i_fourcc
stmts	146:8	161:8	5	
water	146:8	0:0	6	{
label	147:8	147:27	6	case VLC_CODEC_SUBT :
water	148:12	0:0	6	p_stream
op	148:20	0:0	6	->
water	148:22	0:0	6	p_oggds_header
op	148:37	0:0	6	=
call	148:39	148:73	6	calloc
arg	148:47	148:48	7	1
water	148:47	0:0	8	1
arg	148:50	148:73	7	sizeof(oggds_header_t)
op	148:50	0:0	8	sizeof
water	148:56	0:0	8	(
water	148:57	0:0	8	oggds_header_t
water	148:71	0:0	8	)
water	148:74	0:0	6	;
if	149:12	153:12	6	(! p_stream -> p_oggds_header)
cond	149:16	149:27	7	! p_stream -> p_oggds_header
op	149:16	0:0	8	!
water	149:17	0:0	8	p_stream
op	149:25	0:0	8	->
water	149:27	0:0	8	p_oggds_header
stmts	150:12	153:12	7	
water	150:12	0:0	8	{
call	151:16	151:31	8	free
arg	151:22	151:31	9	p_stream
water	151:22	0:0	10	p_stream
water	151:32	0:0	8	;
return	152:16	152:33	8	VLC_ENOMEM
water	152:23	0:0	9	VLC_ENOMEM
water	153:12	0:0	8	}
water	154:12	0:0	6	p_stream
op	154:20	0:0	6	->
water	154:22	0:0	6	p_oggds_header
op	154:36	0:0	6	->
water	154:38	0:0	6	i_packet_type
op	154:52	0:0	6	=
water	154:54	0:0	6	PACKET_TYPE_HEADER
water	154:72	0:0	6	;
call	155:12	155:69	6	memcpy
arg	155:20	155:57	7	p_stream->p_oggds_header->stream_type
water	155:20	0:0	8	p_stream
op	155:28	0:0	8	->
water	155:30	0:0	8	p_oggds_header
op	155:44	0:0	8	->
water	155:46	0:0	8	stream_type
arg	155:59	155:65	7	"text"
water	155:59	0:0	8	"text"
arg	155:67	155:69	7	4
water	155:67	0:0	8	4
water	155:70	0:0	6	;
call	156:12	156:47	6	msg_Dbg
arg	156:21	156:26	7	p_mux
water	156:21	0:0	8	p_mux
arg	156:28	156:47	7	"subtitles stream"
water	156:28	0:0	8	"subtitles stream"
water	156:48	0:0	6	;
break	157:12	157:17	6	
label	158:8	158:15	6	default :
call	159:12	159:37	6	FREENULL
arg	159:22	159:37	7	p_input->p_sys
water	159:22	0:0	8	p_input
op	159:29	0:0	8	->
water	159:31	0:0	8	p_sys
water	159:38	0:0	6	;
return	160:12	160:31	6	VLC_EGENERIC
water	160:19	0:0	7	VLC_EGENERIC
water	161:8	0:0	6	}
break	162:8	162:13	4	
label	163:4	163:11	4	default :
call	164:8	164:33	4	FREENULL
arg	164:18	164:33	5	p_input->p_sys
water	164:18	0:0	6	p_input
op	164:25	0:0	6	->
water	164:27	0:0	6	p_sys
water	164:34	0:0	4	;
return	165:8	165:27	4	VLC_EGENERIC
water	165:15	0:0	5	VLC_EGENERIC
water	166:4	0:0	4	}
water	167:4	0:0	2	p_stream
op	167:12	0:0	2	->
water	167:14	0:0	2	b_new
op	167:20	0:0	2	=
water	167:22	0:0	2	true
water	167:26	0:0	2	;
water	168:4	0:0	2	p_sys
op	168:9	0:0	2	->
water	168:11	0:0	2	i_add_streams
op	168:24	0:0	2	++
water	168:26	0:0	2	;
return	169:4	169:22	2	VLC_SUCCESS
water	169:11	0:0	3	VLC_SUCCESS

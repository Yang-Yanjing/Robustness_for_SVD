func	2:0	254:0	0	static subpicture_t *	Decode
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	253:15	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:26	2	block_t	*p_block
decl	6:4	6:31	2	subpicture_t	*p_spu
op	6:25	0:0	2	=
water	6:27	0:0	2	NULL
decl	7:4	7:22	2	video_format_t	fmt
decl	9:4	9:19	2	int	len
water	9:11	0:0	2	,
decl	9:4	9:19	2	int	offset
decl	11:4	11:52	2	int	i_wanted_magazine
op	11:26	0:0	2	=
water	11:28	0:0	2	i_conf_wanted_page
op	11:47	0:0	2	/
water	11:49	0:0	2	100
decl	12:4	13:52	2	int	i_wanted_page
op	12:22	0:0	2	=
water	12:24	0:0	2	0
water	12:25	0:0	2	x10
op	12:29	0:0	2	*
water	12:31	0:0	2	(
water	12:32	0:0	2	(
water	12:33	0:0	2	i_conf_wanted_page
op	12:52	0:0	2	%
water	12:54	0:0	2	100
water	12:57	0:0	2	)
op	12:59	0:0	2	/
water	12:61	0:0	2	10
water	12:63	0:0	2	)
op	13:25	0:0	2	|
water	13:27	0:0	2	(
water	13:28	0:0	2	i_conf_wanted_page
op	13:47	0:0	2	%
water	13:49	0:0	2	10
water	13:51	0:0	2	)
decl	15:4	15:25	2	bool	b_update
op	15:18	0:0	2	=
water	15:20	0:0	2	false
decl	16:4	16:38	2	char	psz_text[512]
water	16:22	0:0	2	,
decl	16:4	16:38	2	char	*pt
op	16:28	0:0	2	=
water	16:30	0:0	2	psz_text
decl	17:4	17:22	2	char	psz_line[256]
decl	18:4	18:16	2	int	i
water	18:9	0:0	2	,
decl	18:4	18:16	2	int	total
if	19:4	20:19	2	(pp_block == NULL || * pp_block == NULL)
cond	19:8	19:41	3	pp_block == NULL || * pp_block == NULL
water	19:8	0:0	4	pp_block
op	19:17	0:0	4	==
water	19:20	0:0	4	NULL
op	19:25	0:0	4	||
op	19:28	0:0	4	*
water	19:29	0:0	4	pp_block
op	19:38	0:0	4	==
water	19:41	0:0	4	NULL
stmts	20:8	20:19	3	
return	20:8	20:19	4	NULL
water	20:15	0:0	5	NULL
water	21:4	0:0	2	p_block
op	21:12	0:0	2	=
op	21:14	0:0	2	*
water	21:15	0:0	2	pp_block
water	21:23	0:0	2	;
op	22:4	0:0	2	*
water	22:5	0:0	2	pp_block
op	22:14	0:0	2	=
water	22:16	0:0	2	NULL
water	22:20	0:0	2	;
call	23:4	24:48	2	dbg
arg	23:8	24:48	3	(p_dec,"start of telx packet with header %2x\n",*(uint8_t*)p_block->p_buffer)
water	23:8	0:0	4	(
water	23:9	0:0	4	p_dec
water	23:14	0:0	4	,
water	23:16	0:0	4	"start of telx packet with header %2x\n"
water	23:56	0:0	4	,
op	24:16	0:0	4	*
water	24:18	0:0	4	(
water	24:19	0:0	4	uint8_t
op	24:27	0:0	4	*
water	24:28	0:0	4	)
water	24:30	0:0	4	p_block
op	24:37	0:0	4	->
water	24:39	0:0	4	p_buffer
water	24:47	0:0	4	)
water	24:49	0:0	2	;
water	25:4	0:0	2	len
op	25:8	0:0	2	=
water	25:10	0:0	2	p_block
op	25:17	0:0	2	->
water	25:19	0:0	2	i_buffer
water	25:27	0:0	2	;
for	26:4	189:4	2	(offset = 1 ;offset + 46 <= len;offset += 46)
forinit	26:10	26:20	3	offset = 1 ;
water	26:10	0:0	4	offset
op	26:17	0:0	4	=
water	26:19	0:0	4	1
water	26:20	0:0	4	;
cond	26:22	26:37	3	offset + 46 <= len
water	26:22	0:0	4	offset
op	26:29	0:0	4	+
water	26:31	0:0	4	46
op	26:34	0:0	4	<=
water	26:37	0:0	4	len
forexpr	26:42	26:52	3	offset += 46
water	26:42	0:0	4	offset
op	26:49	0:0	4	+=
water	26:52	0:0	4	46
stmts	27:4	189:4	3	
water	27:4	0:0	4	{
decl	28:8	28:63	4	uint8_t	*packet
op	28:25	0:0	4	=
water	28:27	0:0	4	(
water	28:28	0:0	4	uint8_t
op	28:36	0:0	4	*
water	28:37	0:0	4	)
water	28:39	0:0	4	p_block
op	28:46	0:0	4	->
water	28:48	0:0	4	p_buffer
op	28:56	0:0	4	+
water	28:57	0:0	4	offset
if	31:8	31:41	4	(packet [ 0 ] == 0 xFF)
cond	31:13	31:27	5	packet [ 0 ] == 0 xFF
water	31:13	0:0	6	packet
op	31:19	0:0	6	[
water	31:20	0:0	6	0
op	31:21	0:0	6	]
op	31:23	0:0	6	==
water	31:26	0:0	6	0
water	31:27	0:0	6	xFF
stmts	31:33	31:41	5	
continue	31:33	31:41	6	
decl	37:8	37:77	4	int	mpag
op	37:17	0:0	4	=
water	37:19	0:0	4	(
call	37:20	37:43	5	hamming_8_4
arg	37:33	37:43	6	packet[4]
water	37:33	0:0	7	packet
op	37:39	0:0	7	[
water	37:40	0:0	7	4
op	37:41	0:0	7	]
op	37:45	0:0	4	<<
water	37:48	0:0	4	4
water	37:49	0:0	4	)
op	37:51	0:0	4	|
call	37:53	37:76	5	hamming_8_4
arg	37:66	37:76	6	packet[5]
water	37:66	0:0	7	packet
op	37:72	0:0	7	[
water	37:73	0:0	7	5
op	37:74	0:0	7	]
decl	38:8	38:25	4	int	row
water	38:15	0:0	4	,
decl	38:8	38:25	4	int	magazine
if	39:8	44:8	4	(mpag < 0)
cond	39:13	39:20	5	mpag < 0
water	39:13	0:0	6	mpag
op	39:18	0:0	6	<
water	39:20	0:0	6	0
stmts	40:8	44:8	5	
water	40:8	0:0	6	{
call	42:12	42:47	6	dbg
arg	42:16	42:47	7	(p_dec,"mpag hamming error\n")
water	42:16	0:0	8	(
water	42:17	0:0	8	p_dec
water	42:22	0:0	8	,
water	42:24	0:0	8	"mpag hamming error\n"
water	42:46	0:0	8	)
water	42:48	0:0	6	;
continue	43:12	43:20	6	
water	44:8	0:0	6	}
water	45:8	0:0	4	row
op	45:12	0:0	4	=
water	45:14	0:0	4	0
water	45:15	0:0	4	xFF
call	45:19	45:37	4	&bytereverse
arg	45:33	45:37	5	mpag
water	45:33	0:0	6	mpag
water	45:38	0:0	4	;
water	46:8	0:0	4	magazine
op	46:17	0:0	4	=
water	46:19	0:0	4	(
water	46:20	0:0	4	7
op	46:22	0:0	4	&
water	46:24	0:0	4	row
water	46:27	0:0	4	)
op	46:29	0:0	4	==
water	46:32	0:0	4	0
water	46:34	0:0	4	?
water	46:36	0:0	4	8
water	46:38	0:0	4	:
water	46:40	0:0	4	(
water	46:41	0:0	4	7
op	46:43	0:0	4	&
water	46:45	0:0	4	row
water	46:48	0:0	4	)
water	46:49	0:0	4	;
water	47:8	0:0	4	row
op	47:12	0:0	4	>>=
water	47:16	0:0	4	3
water	47:17	0:0	4	;
if	48:8	50:20	4	(p_sys -> i_wanted_page != - 1 && magazine != p_sys -> i_wanted_magazine)
cond	48:13	49:36	5	p_sys -> i_wanted_page != - 1 && magazine != p_sys -> i_wanted_magazine
water	48:13	0:0	6	p_sys
op	48:18	0:0	6	->
water	48:20	0:0	6	i_wanted_page
op	48:34	0:0	6	!=
op	48:37	0:0	6	-
water	48:38	0:0	6	1
op	49:14	0:0	6	&&
water	49:17	0:0	6	magazine
op	49:26	0:0	6	!=
water	49:29	0:0	6	p_sys
op	49:34	0:0	6	->
water	49:36	0:0	6	i_wanted_magazine
stmts	50:12	50:20	5	
continue	50:12	50:20	6	
if	51:8	116:8	4	(row == 0)
cond	51:13	51:20	5	row == 0
water	51:13	0:0	6	row
op	51:17	0:0	6	==
water	51:20	0:0	6	0
stmts	52:8	116:8	5	
water	52:8	0:0	6	{
decl	54:12	54:24	6	int	flag
op	54:21	0:0	6	=
water	54:23	0:0	6	0
decl	55:12	55:17	6	int	a
for	56:12	60:12	6	(a = 0 ;a < 6;a ++)
forinit	56:18	56:23	7	a = 0 ;
water	56:18	0:0	8	a
op	56:20	0:0	8	=
water	56:22	0:0	8	0
water	56:23	0:0	8	;
cond	56:25	56:29	7	a < 6
water	56:25	0:0	8	a
op	56:27	0:0	8	<
water	56:29	0:0	8	6
forexpr	56:32	56:33	7	a ++
water	56:32	0:0	8	a
op	56:33	0:0	8	++
stmts	57:12	60:12	7	
water	57:12	0:0	8	{
water	58:16	0:0	8	flag
op	58:21	0:0	8	|=
water	58:24	0:0	8	(
water	58:25	0:0	8	0
water	58:26	0:0	8	xF
op	58:29	0:0	8	&
water	58:31	0:0	8	(
call	58:32	58:72	8	bytereverse
arg	58:45	58:72	9	hamming_8_4(packet[8+a])
call	58:45	58:70	10	hamming_8_4
arg	58:57	58:70	11	packet[8+a]
water	58:57	0:0	12	packet
op	58:63	0:0	12	[
water	58:64	0:0	12	8
op	58:66	0:0	12	+
water	58:68	0:0	12	a
op	58:69	0:0	12	]
op	58:74	0:0	8	>>
water	58:77	0:0	8	4
water	58:78	0:0	8	)
water	58:79	0:0	8	)
op	59:26	0:0	8	<<
water	59:29	0:0	8	(
water	59:30	0:0	8	a
op	59:32	0:0	8	*
water	59:34	0:0	8	4
water	59:35	0:0	8	)
water	59:36	0:0	8	;
water	60:12	0:0	8	}
water	63:12	0:0	6	p_sys
op	63:17	0:0	6	->
water	63:19	0:0	6	i_page
op	63:25	0:0	6	[
water	63:26	0:0	6	magazine
op	63:34	0:0	6	]
op	63:36	0:0	6	=
water	63:38	0:0	6	(
water	63:39	0:0	6	0
water	63:40	0:0	6	xF0
call	63:44	63:82	6	&bytereverse
arg	63:59	63:82	7	hamming_8_4(packet[7])
call	63:59	63:80	8	hamming_8_4
arg	63:71	63:80	9	packet[7]
water	63:71	0:0	10	packet
op	63:77	0:0	10	[
water	63:78	0:0	10	7
op	63:79	0:0	10	]
water	63:83	0:0	6	)
op	63:85	0:0	6	|
water	64:29	0:0	6	(
water	64:30	0:0	6	0
water	64:31	0:0	6	xF
op	64:34	0:0	6	&
water	64:36	0:0	6	(
call	64:37	64:73	6	bytereverse
arg	64:50	64:73	7	hamming_8_4(packet[6])
call	64:50	64:71	8	hamming_8_4
arg	64:62	64:71	9	packet[6]
water	64:62	0:0	10	packet
op	64:68	0:0	10	[
water	64:69	0:0	10	6
op	64:70	0:0	10	]
op	64:75	0:0	6	>>
water	64:78	0:0	6	4
water	64:79	0:0	6	)
water	64:81	0:0	6	)
water	64:82	0:0	6	;
call	65:12	66:48	6	decode_string
arg	65:27	65:35	7	psz_line
water	65:27	0:0	8	psz_line
arg	65:37	65:53	7	sizeof(psz_line)
op	65:37	0:0	8	sizeof
water	65:43	0:0	8	(
water	65:44	0:0	8	psz_line
water	65:52	0:0	8	)
arg	65:55	65:60	7	p_sys
water	65:55	0:0	8	p_sys
arg	65:62	65:70	7	magazine
water	65:62	0:0	8	magazine
arg	66:27	66:38	7	packet+14
water	66:27	0:0	8	packet
op	66:34	0:0	8	+
water	66:36	0:0	8	14
arg	66:40	66:48	7	40-14
water	66:40	0:0	8	40
op	66:43	0:0	8	-
water	66:45	0:0	8	14
water	66:49	0:0	6	;
call	67:12	69:54	6	dbg
arg	67:16	69:54	7	(p_dec,"mag %d flags %x page %x character set %d subtitles %d",magazine,flag,p_sys->i_page[magazine],7&flag>>21,1&flag>>15,psz_line)
water	67:16	0:0	8	(
water	67:17	0:0	8	p_dec
water	67:22	0:0	8	,
water	67:24	0:0	8	"mag %d flags %x page %x character set %d subtitles %d"
water	67:79	0:0	8	,
water	67:81	0:0	8	magazine
water	67:89	0:0	8	,
water	67:91	0:0	8	flag
water	67:95	0:0	8	,
water	68:17	0:0	8	p_sys
op	68:22	0:0	8	->
water	68:24	0:0	8	i_page
op	68:30	0:0	8	[
water	68:31	0:0	8	magazine
op	68:39	0:0	8	]
water	68:40	0:0	8	,
water	69:17	0:0	8	7
op	69:19	0:0	8	&
water	69:21	0:0	8	flag
op	69:25	0:0	8	>>
water	69:27	0:0	8	21
water	69:29	0:0	8	,
water	69:31	0:0	8	1
op	69:33	0:0	8	&
water	69:35	0:0	8	flag
op	69:39	0:0	8	>>
water	69:41	0:0	8	15
water	69:43	0:0	8	,
water	69:45	0:0	8	psz_line
water	69:53	0:0	8	)
water	69:55	0:0	6	;
water	70:12	0:0	6	p_sys
op	70:17	0:0	6	->
water	70:19	0:0	6	pi_active_national_set
op	70:41	0:0	6	[
water	70:42	0:0	6	magazine
op	70:50	0:0	6	]
op	70:52	0:0	6	=
water	71:33	0:0	6	ppi_national_subsets
op	71:53	0:0	6	[
water	71:54	0:0	6	7
op	71:56	0:0	6	&
water	71:58	0:0	6	(
water	71:59	0:0	6	flag
op	71:64	0:0	6	>>
water	71:67	0:0	6	21
water	71:69	0:0	6	)
op	71:70	0:0	6	]
water	71:71	0:0	6	;
water	72:12	0:0	6	p_sys
op	72:17	0:0	6	->
water	72:19	0:0	6	b_is_subtitle
op	72:32	0:0	6	[
water	72:33	0:0	6	magazine
op	72:41	0:0	6	]
op	72:43	0:0	6	=
water	72:45	0:0	6	p_sys
op	72:50	0:0	6	->
water	72:52	0:0	6	b_ignore_sub_flag
op	73:46	0:0	6	||
water	73:49	0:0	6	(
water	73:51	0:0	6	(
water	73:52	0:0	6	1
op	73:54	0:0	6	&
water	73:56	0:0	6	(
water	73:57	0:0	6	flag
op	73:62	0:0	6	>>
water	73:65	0:0	6	15
water	73:67	0:0	6	)
water	73:68	0:0	6	)
op	74:50	0:0	6	&&
water	74:53	0:0	6	(
water	74:54	0:0	6	1
op	74:56	0:0	6	&
water	74:58	0:0	6	(
water	74:59	0:0	6	flag
op	74:63	0:0	6	>>
water	74:65	0:0	6	16
water	74:67	0:0	6	)
water	74:68	0:0	6	)
water	74:70	0:0	6	)
water	74:71	0:0	6	;
call	75:12	83:36	6	dbg
arg	75:16	83:36	7	(p_dec,"FLAGS%s%s%s%s%s%s%s mag_ser %d",(1&(flag>>14))?" news":"",(1&(flag>>15))?" subtitle":"",(1&(flag>>7))?" erase":"",(1&(flag>>16))?" suppressed_head":"",(1&(flag>>17))?" update":"",(1&(flag>>18))?" interrupt":"",(1&(flag>>19))?" inhibit":"",(1&(flag>>20)))
water	75:16	0:0	8	(
water	75:18	0:0	8	p_dec
water	75:23	0:0	8	,
water	75:25	0:0	8	"FLAGS%s%s%s%s%s%s%s mag_ser %d"
water	75:57	0:0	8	,
water	76:18	0:0	8	(
water	76:19	0:0	8	1
op	76:21	0:0	8	&
water	76:23	0:0	8	(
water	76:24	0:0	8	flag
op	76:28	0:0	8	>>
water	76:30	0:0	8	14
water	76:32	0:0	8	)
water	76:33	0:0	8	)
water	76:34	0:0	8	?
water	76:36	0:0	8	" news"
water	76:44	0:0	8	:
water	76:46	0:0	8	""
water	76:48	0:0	8	,
water	77:18	0:0	8	(
water	77:19	0:0	8	1
op	77:21	0:0	8	&
water	77:23	0:0	8	(
water	77:24	0:0	8	flag
op	77:28	0:0	8	>>
water	77:30	0:0	8	15
water	77:32	0:0	8	)
water	77:33	0:0	8	)
water	77:34	0:0	8	?
water	77:36	0:0	8	" subtitle"
water	77:48	0:0	8	:
water	77:50	0:0	8	""
water	77:52	0:0	8	,
water	78:18	0:0	8	(
water	78:19	0:0	8	1
op	78:21	0:0	8	&
water	78:23	0:0	8	(
water	78:24	0:0	8	flag
op	78:28	0:0	8	>>
water	78:30	0:0	8	7
water	78:31	0:0	8	)
water	78:32	0:0	8	)
water	78:33	0:0	8	?
water	78:35	0:0	8	" erase"
water	78:44	0:0	8	:
water	78:46	0:0	8	""
water	78:48	0:0	8	,
water	79:18	0:0	8	(
water	79:19	0:0	8	1
op	79:21	0:0	8	&
water	79:23	0:0	8	(
water	79:24	0:0	8	flag
op	79:28	0:0	8	>>
water	79:30	0:0	8	16
water	79:32	0:0	8	)
water	79:33	0:0	8	)
water	79:34	0:0	8	?
water	79:36	0:0	8	" suppressed_head"
water	79:55	0:0	8	:
water	79:57	0:0	8	""
water	79:59	0:0	8	,
water	80:18	0:0	8	(
water	80:19	0:0	8	1
op	80:21	0:0	8	&
water	80:23	0:0	8	(
water	80:24	0:0	8	flag
op	80:28	0:0	8	>>
water	80:30	0:0	8	17
water	80:32	0:0	8	)
water	80:33	0:0	8	)
water	80:34	0:0	8	?
water	80:36	0:0	8	" update"
water	80:46	0:0	8	:
water	80:48	0:0	8	""
water	80:50	0:0	8	,
water	81:18	0:0	8	(
water	81:19	0:0	8	1
op	81:21	0:0	8	&
water	81:23	0:0	8	(
water	81:24	0:0	8	flag
op	81:28	0:0	8	>>
water	81:30	0:0	8	18
water	81:32	0:0	8	)
water	81:33	0:0	8	)
water	81:34	0:0	8	?
water	81:36	0:0	8	" interrupt"
water	81:49	0:0	8	:
water	81:51	0:0	8	""
water	81:53	0:0	8	,
water	82:18	0:0	8	(
water	82:19	0:0	8	1
op	82:21	0:0	8	&
water	82:23	0:0	8	(
water	82:24	0:0	8	flag
op	82:28	0:0	8	>>
water	82:30	0:0	8	19
water	82:32	0:0	8	)
water	82:33	0:0	8	)
water	82:34	0:0	8	?
water	82:36	0:0	8	" inhibit"
water	82:47	0:0	8	:
water	82:49	0:0	8	""
water	82:51	0:0	8	,
water	83:18	0:0	8	(
water	83:19	0:0	8	1
op	83:21	0:0	8	&
water	83:23	0:0	8	(
water	83:24	0:0	8	flag
op	83:28	0:0	8	>>
water	83:30	0:0	8	20
water	83:32	0:0	8	)
water	83:33	0:0	8	)
water	83:35	0:0	8	)
water	83:37	0:0	6	;
if	84:12	87:24	6	(( p_sys -> i_wanted_page != - 1 && p_sys -> i_page [ magazine ] != p_sys -> i_wanted_page ) || ! p_sys -> b_is_subtitle [ magazine ])
cond	84:17	86:52	7	( p_sys -> i_wanted_page != - 1 && p_sys -> i_page [ magazine ] != p_sys -> i_wanted_page ) || ! p_sys -> b_is_subtitle [ magazine ]
water	84:17	0:0	8	(
water	84:18	0:0	8	p_sys
op	84:23	0:0	8	->
water	84:25	0:0	8	i_wanted_page
op	84:39	0:0	8	!=
op	84:42	0:0	8	-
water	84:43	0:0	8	1
op	85:19	0:0	8	&&
water	85:22	0:0	8	p_sys
op	85:27	0:0	8	->
water	85:29	0:0	8	i_page
op	85:35	0:0	8	[
water	85:36	0:0	8	magazine
op	85:44	0:0	8	]
op	85:46	0:0	8	!=
water	85:49	0:0	8	p_sys
op	85:54	0:0	8	->
water	85:56	0:0	8	i_wanted_page
water	85:69	0:0	8	)
op	86:19	0:0	8	||
op	86:22	0:0	8	!
water	86:23	0:0	8	p_sys
op	86:28	0:0	8	->
water	86:30	0:0	8	b_is_subtitle
op	86:43	0:0	8	[
water	86:44	0:0	8	magazine
op	86:52	0:0	8	]
stmts	87:16	87:24	7	
continue	87:16	87:24	8	
water	88:12	0:0	6	p_sys
op	88:17	0:0	6	->
water	88:19	0:0	6	b_erase
op	88:26	0:0	6	[
water	88:27	0:0	6	magazine
op	88:35	0:0	6	]
op	88:37	0:0	6	=
water	88:39	0:0	6	(
water	88:40	0:0	6	1
op	88:42	0:0	6	&
water	88:44	0:0	6	(
water	88:45	0:0	6	flag
op	88:50	0:0	6	>>
water	88:53	0:0	6	7
water	88:54	0:0	6	)
water	88:55	0:0	6	)
water	88:56	0:0	6	;
call	89:12	89:104	6	dbg
arg	89:16	89:104	7	(p_dec,"%ld --> %ld\n",(longint)p_block->i_pts,(longint)(p_sys->prev_pts+1500000))
water	89:16	0:0	8	(
water	89:17	0:0	8	p_dec
water	89:22	0:0	8	,
water	89:24	0:0	8	"%ld --> %ld\n"
water	89:39	0:0	8	,
water	89:41	0:0	8	(
water	89:42	0:0	8	long
water	89:47	0:0	8	int
water	89:50	0:0	8	)
water	89:52	0:0	8	p_block
op	89:59	0:0	8	->
water	89:61	0:0	8	i_pts
water	89:66	0:0	8	,
call	89:68	89:102	8	(longint)
arg	89:79	89:102	9	p_sys->prev_pts+1500000
water	89:79	0:0	10	p_sys
op	89:84	0:0	10	->
water	89:86	0:0	10	prev_pts
op	89:94	0:0	10	+
water	89:95	0:0	10	1500000
water	89:103	0:0	8	)
water	89:105	0:0	6	;
if	96:12	108:12	6	(p_sys -> b_erase [ magazine ])
cond	97:17	97:40	7	p_sys -> b_erase [ magazine ]
water	97:17	0:0	8	p_sys
op	97:22	0:0	8	->
water	97:24	0:0	8	b_erase
op	97:31	0:0	8	[
water	97:32	0:0	8	magazine
op	97:40	0:0	8	]
stmts	98:12	108:12	7	
water	98:12	0:0	8	{
decl	99:16	99:21	8	int	i
call	100:16	100:40	8	dbg
arg	100:20	100:40	9	(p_dec,"ERASE !\n")
water	100:20	0:0	10	(
water	100:21	0:0	10	p_dec
water	100:26	0:0	10	,
water	100:28	0:0	10	"ERASE !\n"
water	100:39	0:0	10	)
water	100:41	0:0	8	;
water	101:16	0:0	8	p_sys
op	101:21	0:0	8	->
water	101:23	0:0	8	b_erase
op	101:30	0:0	8	[
water	101:31	0:0	8	magazine
op	101:39	0:0	8	]
op	101:41	0:0	8	=
water	101:43	0:0	8	0
water	101:44	0:0	8	;
for	102:16	107:16	8	(i = 1 ;i < 32;i ++)
forinit	102:22	102:27	9	i = 1 ;
water	102:22	0:0	10	i
op	102:24	0:0	10	=
water	102:26	0:0	10	1
water	102:27	0:0	10	;
cond	102:29	102:33	9	i < 32
water	102:29	0:0	10	i
op	102:31	0:0	10	<
water	102:33	0:0	10	32
forexpr	102:37	102:38	9	i ++
water	102:37	0:0	10	i
op	102:38	0:0	10	++
stmts	103:16	107:16	9	
water	103:16	0:0	10	{
if	104:20	104:60	10	(! p_sys -> ppsz_lines [ i ] [ 0 ])
cond	104:25	104:48	11	! p_sys -> ppsz_lines [ i ] [ 0 ]
op	104:25	0:0	12	!
water	104:26	0:0	12	p_sys
op	104:31	0:0	12	->
water	104:33	0:0	12	ppsz_lines
op	104:43	0:0	12	[
water	104:44	0:0	12	i
op	104:45	0:0	12	]
op	104:46	0:0	12	[
water	104:47	0:0	12	0
op	104:48	0:0	12	]
stmts	104:52	104:60	11	
continue	104:52	104:60	12	
water	106:20	0:0	10	p_sys
op	106:25	0:0	10	->
water	106:27	0:0	10	ppsz_lines
op	106:37	0:0	10	[
water	106:38	0:0	10	i
op	106:39	0:0	10	]
op	106:40	0:0	10	[
water	106:41	0:0	10	0
op	106:42	0:0	10	]
op	106:44	0:0	10	=
water	106:46	0:0	10	0
water	106:47	0:0	10	;
water	107:16	0:0	10	}
water	108:12	0:0	8	}
if	110:12	114:12	6	(strcmp (psz_line ,p_sys -> ppsz_lines [ row ] ))
cond	110:17	110:56	7	strcmp (psz_line ,p_sys -> ppsz_lines [ row ] )
call	110:17	110:56	8	strcmp
arg	110:24	110:32	9	psz_line
water	110:24	0:0	10	psz_line
arg	110:34	110:56	9	p_sys->ppsz_lines[row]
water	110:34	0:0	10	p_sys
op	110:39	0:0	10	->
water	110:41	0:0	10	ppsz_lines
op	110:51	0:0	10	[
water	110:52	0:0	10	row
op	110:55	0:0	10	]
stmts	111:12	114:12	7	
water	111:12	0:0	8	{
call	112:16	113:59	8	strncpy
arg	112:25	112:47	9	p_sys->ppsz_lines[row]
water	112:25	0:0	10	p_sys
op	112:30	0:0	10	->
water	112:32	0:0	10	ppsz_lines
op	112:42	0:0	10	[
water	112:43	0:0	10	row
op	112:46	0:0	10	]
arg	112:49	112:57	9	psz_line
water	112:49	0:0	10	psz_line
arg	113:25	113:59	9	sizeof(p_sys->ppsz_lines[row])-1
op	113:25	0:0	10	sizeof
water	113:31	0:0	10	(
water	113:32	0:0	10	p_sys
op	113:37	0:0	10	->
water	113:39	0:0	10	ppsz_lines
op	113:49	0:0	10	[
water	113:50	0:0	10	row
op	113:53	0:0	10	]
water	113:54	0:0	10	)
op	113:56	0:0	10	-
water	113:58	0:0	10	1
water	113:60	0:0	8	;
water	114:12	0:0	8	}
water	115:12	0:0	6	b_update
op	115:21	0:0	6	=
water	115:23	0:0	6	true
water	115:27	0:0	6	;
water	116:8	0:0	6	}
else	117:8	167:8	4
stmts	117:13	167:8	5	
if	117:13	167:8	6	(row < 24)
cond	117:18	117:24	7	row < 24
water	117:18	0:0	8	row
op	117:22	0:0	8	<
water	117:24	0:0	8	24
stmts	118:8	167:8	7	
water	118:8	0:0	8	{
decl	119:12	119:20	8	char	*t
decl	120:12	120:17	8	int	i
if	122:12	127:24	8	(( p_sys -> i_wanted_page != - 1 && p_sys -> i_page [ magazine ] != p_sys -> i_wanted_page ) || ! p_sys -> b_is_subtitle [ magazine ] || ( p_sys -> i_wanted_page == - 1 && p_sys -> i_page [ magazine ] > 0 x99 ))
cond	122:17	126:57	9	( p_sys -> i_wanted_page != - 1 && p_sys -> i_page [ magazine ] != p_sys -> i_wanted_page ) || ! p_sys -> b_is_subtitle [ magazine ] || ( p_sys -> i_wanted_page == - 1 && p_sys -> i_page [ magazine ] > 0 x99 )
water	122:17	0:0	10	(
water	122:18	0:0	10	p_sys
op	122:23	0:0	10	->
water	122:25	0:0	10	i_wanted_page
op	122:39	0:0	10	!=
op	122:42	0:0	10	-
water	122:43	0:0	10	1
op	123:19	0:0	10	&&
water	123:22	0:0	10	p_sys
op	123:27	0:0	10	->
water	123:29	0:0	10	i_page
op	123:35	0:0	10	[
water	123:36	0:0	10	magazine
op	123:44	0:0	10	]
op	123:46	0:0	10	!=
water	123:49	0:0	10	p_sys
op	123:54	0:0	10	->
water	123:56	0:0	10	i_wanted_page
water	123:69	0:0	10	)
op	124:19	0:0	10	||
op	124:22	0:0	10	!
water	124:23	0:0	10	p_sys
op	124:28	0:0	10	->
water	124:30	0:0	10	b_is_subtitle
op	124:43	0:0	10	[
water	124:44	0:0	10	magazine
op	124:52	0:0	10	]
op	125:19	0:0	10	||
water	125:22	0:0	10	(
water	125:23	0:0	10	p_sys
op	125:28	0:0	10	->
water	125:30	0:0	10	i_wanted_page
op	125:44	0:0	10	==
op	125:47	0:0	10	-
water	125:48	0:0	10	1
op	126:24	0:0	10	&&
water	126:27	0:0	10	p_sys
op	126:32	0:0	10	->
water	126:34	0:0	10	i_page
op	126:40	0:0	10	[
water	126:41	0:0	10	magazine
op	126:49	0:0	10	]
op	126:51	0:0	10	>
water	126:53	0:0	10	0
water	126:54	0:0	10	x99
water	126:57	0:0	10	)
stmts	127:16	127:24	9	
continue	127:16	127:24	10	
call	128:12	129:42	8	decode_string
arg	128:27	128:35	9	psz_line
water	128:27	0:0	10	psz_line
arg	128:37	128:53	9	sizeof(psz_line)
op	128:37	0:0	10	sizeof
water	128:43	0:0	10	(
water	128:44	0:0	10	psz_line
water	128:52	0:0	10	)
arg	128:55	128:60	9	p_sys
water	128:55	0:0	10	p_sys
arg	128:62	128:70	9	magazine
water	128:62	0:0	10	magazine
arg	129:27	129:37	9	packet+6
water	129:27	0:0	10	packet
op	129:34	0:0	10	+
water	129:36	0:0	10	6
arg	129:39	129:42	9	40
water	129:39	0:0	10	40
water	129:43	0:0	8	;
water	130:12	0:0	8	t
op	130:14	0:0	8	=
water	130:16	0:0	8	psz_line
water	130:24	0:0	8	;
while	132:12	132:34	8	(* t == 32)
cond	132:20	132:26	9	* t == 32
op	132:20	0:0	10	*
water	132:21	0:0	10	t
op	132:23	0:0	10	==
water	132:26	0:0	10	32
stmts	132:31	132:34	9	
water	132:31	0:0	10	t
op	132:32	0:0	10	++
water	132:34	0:0	10	;
for	134:12	134:64	8	(i =strlen (t ) - 1 ;i >= 0 && t [ i ] == 32;i --)
forinit	134:18	134:35	9	i =strlen (t ) - 1 ;
water	134:18	0:0	10	i
op	134:20	0:0	10	=
call	134:22	134:30	10	strlen
arg	134:29	134:30	11	t
water	134:29	0:0	12	t
op	134:32	0:0	10	-
water	134:34	0:0	10	1
water	134:35	0:0	10	;
cond	134:37	134:55	9	i >= 0 && t [ i ] == 32
water	134:37	0:0	10	i
op	134:39	0:0	10	>=
water	134:42	0:0	10	0
op	134:44	0:0	10	&&
water	134:47	0:0	10	t
op	134:48	0:0	10	[
water	134:49	0:0	10	i
op	134:50	0:0	10	]
op	134:52	0:0	10	==
water	134:55	0:0	10	32
forexpr	134:59	134:60	9	i --
water	134:59	0:0	10	i
op	134:60	0:0	10	--
stmts	134:64	134:64	9	
water	134:64	0:0	10	;
water	135:12	0:0	8	t
op	135:13	0:0	8	[
water	135:14	0:0	8	i
op	135:16	0:0	8	+
water	135:18	0:0	8	1
op	135:19	0:0	8	]
op	135:21	0:0	8	=
water	135:23	0:0	8	0
water	135:24	0:0	8	;
if	137:12	142:12	8	(strcmp (t ,p_sys -> ppsz_lines [ row ] ))
cond	137:17	137:51	9	strcmp (t ,p_sys -> ppsz_lines [ row ] )
call	137:17	137:51	10	strcmp
arg	137:25	137:26	11	t
water	137:25	0:0	12	t
arg	137:28	137:51	11	p_sys->ppsz_lines[row]
water	137:28	0:0	12	p_sys
op	137:33	0:0	12	->
water	137:35	0:0	12	ppsz_lines
op	137:45	0:0	12	[
water	137:46	0:0	12	row
op	137:49	0:0	12	]
stmts	138:12	142:12	9	
water	138:12	0:0	10	{
call	139:16	140:60	10	strncpy
arg	139:25	139:47	11	p_sys->ppsz_lines[row]
water	139:25	0:0	12	p_sys
op	139:30	0:0	12	->
water	139:32	0:0	12	ppsz_lines
op	139:42	0:0	12	[
water	139:43	0:0	12	row
op	139:46	0:0	12	]
arg	139:49	139:50	11	t
water	139:49	0:0	12	t
arg	140:25	140:60	11	sizeof(p_sys->ppsz_lines[row])-1
op	140:25	0:0	12	sizeof
water	140:31	0:0	12	(
water	140:32	0:0	12	p_sys
op	140:37	0:0	12	->
water	140:39	0:0	12	ppsz_lines
op	140:49	0:0	12	[
water	140:50	0:0	12	row
op	140:53	0:0	12	]
water	140:54	0:0	12	)
op	140:56	0:0	12	-
water	140:58	0:0	12	1
water	140:61	0:0	10	;
water	141:16	0:0	10	b_update
op	141:25	0:0	10	=
water	141:27	0:0	10	true
water	141:31	0:0	10	;
water	142:12	0:0	10	}
if	143:12	144:48	8	(t [ 0 ])
cond	143:16	143:19	9	t [ 0 ]
water	143:16	0:0	10	t
op	143:17	0:0	10	[
water	143:18	0:0	10	0
op	143:19	0:0	10	]
stmts	144:16	144:48	9	
water	144:16	0:0	10	p_sys
op	144:21	0:0	10	->
water	144:23	0:0	10	prev_pts
op	144:32	0:0	10	=
water	144:34	0:0	10	p_block
op	144:41	0:0	10	->
water	144:43	0:0	10	i_pts
water	144:48	0:0	10	;
call	145:12	145:50	8	dbg
arg	145:16	145:50	9	(p_dec,"%d %d : ",magazine,row)
water	145:16	0:0	10	(
water	145:17	0:0	10	p_dec
water	145:22	0:0	10	,
water	145:24	0:0	10	"%d %d : "
water	145:34	0:0	10	,
water	145:36	0:0	10	magazine
water	145:44	0:0	10	,
water	145:46	0:0	10	row
water	145:49	0:0	10	)
water	145:51	0:0	8	;
call	146:12	146:34	8	dbg
arg	146:16	146:34	9	(p_dec,"%s\n",t)
water	146:16	0:0	10	(
water	146:17	0:0	10	p_dec
water	146:22	0:0	10	,
water	146:24	0:0	10	"%s\n"
water	146:30	0:0	10	,
water	146:32	0:0	10	t
water	146:33	0:0	10	)
water	146:35	0:0	8	;
water	148:12	0:0	8	{
decl	149:16	149:29	8	char	dbg[256]
water	150:16	0:0	8	dbg
op	150:19	0:0	8	[
water	150:20	0:0	8	0
op	150:21	0:0	8	]
op	150:23	0:0	8	=
water	150:25	0:0	8	0
water	150:26	0:0	8	;
for	151:16	155:16	8	(i = 0 ;i < 40;i ++)
forinit	151:22	151:27	9	i = 0 ;
water	151:22	0:0	10	i
op	151:24	0:0	10	=
water	151:26	0:0	10	0
water	151:27	0:0	10	;
cond	151:29	151:33	9	i < 40
water	151:29	0:0	10	i
op	151:31	0:0	10	<
water	151:33	0:0	10	40
forexpr	151:37	151:38	9	i ++
water	151:37	0:0	10	i
op	151:38	0:0	10	++
stmts	152:16	155:16	9	
water	152:16	0:0	10	{
decl	153:20	153:62	10	int	in
op	153:27	0:0	10	=
call	153:29	153:54	11	bytereverse
arg	153:41	153:54	12	packet[6+i]
water	153:41	0:0	13	packet
op	153:47	0:0	13	[
water	153:48	0:0	13	6
op	153:50	0:0	13	+
water	153:52	0:0	13	i
op	153:53	0:0	13	]
op	153:56	0:0	10	&
water	153:58	0:0	10	0
water	153:59	0:0	10	x7f
call	154:20	154:58	10	sprintf
arg	154:28	154:45	11	dbg+strlen(dbg)
water	154:28	0:0	12	dbg
op	154:32	0:0	12	+
call	154:34	154:44	12	strlen
arg	154:41	154:44	13	dbg
water	154:41	0:0	14	dbg
arg	154:47	154:54	11	"%02x "
water	154:47	0:0	12	"%02x "
arg	154:56	154:58	11	in
water	154:56	0:0	12	in
water	154:59	0:0	10	;
water	155:16	0:0	10	}
call	156:16	156:40	8	dbg
arg	156:20	156:40	9	(p_dec,"%s\n",dbg)
water	156:20	0:0	10	(
water	156:21	0:0	10	p_dec
water	156:26	0:0	10	,
water	156:28	0:0	10	"%s\n"
water	156:34	0:0	10	,
water	156:36	0:0	10	dbg
water	156:39	0:0	10	)
water	156:41	0:0	8	;
water	157:16	0:0	8	dbg
op	157:19	0:0	8	[
water	157:20	0:0	8	0
op	157:21	0:0	8	]
op	157:23	0:0	8	=
water	157:25	0:0	8	0
water	157:26	0:0	8	;
for	158:16	163:16	8	(i = 0 ;i < 40;i ++)
forinit	158:22	158:27	9	i = 0 ;
water	158:22	0:0	10	i
op	158:24	0:0	10	=
water	158:26	0:0	10	0
water	158:27	0:0	10	;
cond	158:29	158:33	9	i < 40
water	158:29	0:0	10	i
op	158:31	0:0	10	<
water	158:33	0:0	10	40
forexpr	158:37	158:38	9	i ++
water	158:37	0:0	10	i
op	158:38	0:0	10	++
stmts	159:16	163:16	9	
water	159:16	0:0	10	{
call	160:20	161:53	10	decode_string
arg	160:35	160:43	11	psz_line
water	160:35	0:0	12	psz_line
arg	160:45	160:61	11	sizeof(psz_line)
op	160:45	0:0	12	sizeof
water	160:51	0:0	12	(
water	160:52	0:0	12	psz_line
water	160:60	0:0	12	)
arg	160:63	160:68	11	p_sys
water	160:63	0:0	12	p_sys
arg	160:70	160:78	11	magazine
water	160:70	0:0	12	magazine
arg	161:35	161:49	11	packet+6+i
water	161:35	0:0	12	packet
op	161:42	0:0	12	+
water	161:44	0:0	12	6
op	161:46	0:0	12	+
water	161:48	0:0	12	i
arg	161:51	161:53	11	1
water	161:51	0:0	12	1
water	161:54	0:0	10	;
call	162:20	162:65	10	sprintf
arg	162:29	162:46	11	dbg+strlen(dbg)
water	162:29	0:0	12	dbg
op	162:33	0:0	12	+
call	162:35	162:45	12	strlen
arg	162:42	162:45	13	dbg
water	162:42	0:0	14	dbg
arg	162:48	162:54	11	"%s  "
water	162:48	0:0	12	"%s  "
arg	162:56	162:65	11	psz_line
water	162:56	0:0	12	psz_line
water	162:66	0:0	10	;
water	163:16	0:0	10	}
call	164:16	164:40	8	dbg
arg	164:20	164:40	9	(p_dec,"%s\n",dbg)
water	164:20	0:0	10	(
water	164:21	0:0	10	p_dec
water	164:26	0:0	10	,
water	164:28	0:0	10	"%s\n"
water	164:34	0:0	10	,
water	164:36	0:0	10	dbg
water	164:39	0:0	10	)
water	164:41	0:0	8	;
water	165:12	0:0	8	}
water	167:8	0:0	8	}
else	168:8	184:8	4
stmts	168:13	184:8	5	
if	168:13	184:8	6	(row == 25)
cond	168:18	168:25	7	row == 25
water	168:18	0:0	8	row
op	168:22	0:0	8	==
water	168:25	0:0	8	25
stmts	169:8	184:8	7	
water	169:8	0:0	8	{
if	171:12	174:24	8	(( p_sys -> i_wanted_page != - 1 && p_sys -> i_page [ magazine ] != p_sys -> i_wanted_page ) || ! p_sys -> b_is_subtitle [ magazine ])
cond	171:17	173:52	9	( p_sys -> i_wanted_page != - 1 && p_sys -> i_page [ magazine ] != p_sys -> i_wanted_page ) || ! p_sys -> b_is_subtitle [ magazine ]
water	171:17	0:0	10	(
water	171:18	0:0	10	p_sys
op	171:23	0:0	10	->
water	171:25	0:0	10	i_wanted_page
op	171:39	0:0	10	!=
op	171:42	0:0	10	-
water	171:43	0:0	10	1
op	172:19	0:0	10	&&
water	172:22	0:0	10	p_sys
op	172:27	0:0	10	->
water	172:29	0:0	10	i_page
op	172:35	0:0	10	[
water	172:36	0:0	10	magazine
op	172:44	0:0	10	]
op	172:46	0:0	10	!=
water	172:49	0:0	10	p_sys
op	172:54	0:0	10	->
water	172:56	0:0	10	i_wanted_page
water	172:69	0:0	10	)
op	173:19	0:0	10	||
op	173:22	0:0	10	!
water	173:23	0:0	10	p_sys
op	173:28	0:0	10	->
water	173:30	0:0	10	b_is_subtitle
op	173:43	0:0	10	[
water	173:44	0:0	10	magazine
op	173:52	0:0	10	]
stmts	174:16	174:24	9	
continue	174:16	174:24	10	
call	175:12	176:42	8	decode_string
arg	175:27	175:35	9	psz_line
water	175:27	0:0	10	psz_line
arg	175:37	175:53	9	sizeof(psz_line)
op	175:37	0:0	10	sizeof
water	175:43	0:0	10	(
water	175:44	0:0	10	psz_line
water	175:52	0:0	10	)
arg	175:55	175:60	9	p_sys
water	175:55	0:0	10	p_sys
arg	175:62	175:70	9	magazine
water	175:62	0:0	10	magazine
arg	176:27	176:37	9	packet+6
water	176:27	0:0	10	packet
op	176:34	0:0	10	+
water	176:36	0:0	10	6
arg	176:39	176:42	9	40
water	176:39	0:0	10	40
water	176:43	0:0	8	;
if	178:12	183:12	8	(strcmp (psz_line ,p_sys -> ppsz_lines [ 0 ] ))
cond	178:17	178:56	9	strcmp (psz_line ,p_sys -> ppsz_lines [ 0 ] )
call	178:17	178:56	10	strcmp
arg	178:25	178:33	11	psz_line
water	178:25	0:0	12	psz_line
arg	178:35	178:56	11	p_sys->ppsz_lines[0]
water	178:35	0:0	12	p_sys
op	178:40	0:0	12	->
water	178:42	0:0	12	ppsz_lines
op	178:52	0:0	12	[
water	178:53	0:0	12	0
op	178:54	0:0	12	]
stmts	179:12	183:12	9	
water	179:12	0:0	10	{
call	180:16	181:58	10	strncpy
arg	180:25	180:45	11	p_sys->ppsz_lines[0]
water	180:25	0:0	12	p_sys
op	180:30	0:0	12	->
water	180:32	0:0	12	ppsz_lines
op	180:42	0:0	12	[
water	180:43	0:0	12	0
op	180:44	0:0	12	]
arg	180:47	180:55	11	psz_line
water	180:47	0:0	12	psz_line
arg	181:25	181:58	11	sizeof(p_sys->ppsz_lines[0])-1
op	181:25	0:0	12	sizeof
water	181:31	0:0	12	(
water	181:32	0:0	12	p_sys
op	181:37	0:0	12	->
water	181:39	0:0	12	ppsz_lines
op	181:49	0:0	12	[
water	181:50	0:0	12	0
op	181:51	0:0	12	]
water	181:52	0:0	12	)
op	181:54	0:0	12	-
water	181:56	0:0	12	1
water	181:59	0:0	10	;
water	183:12	0:0	10	}
water	184:8	0:0	8	}
water	189:4	0:0	4	}
if	190:4	191:18	2	(! b_update)
cond	190:9	190:10	3	! b_update
op	190:9	0:0	4	!
water	190:10	0:0	4	b_update
stmts	191:8	191:18	3	
goto	191:8	191:18	4	error
water	191:13	0:0	5	error
water	192:4	0:0	2	total
op	192:10	0:0	2	=
water	192:12	0:0	2	0
water	192:13	0:0	2	;
for	193:4	209:4	2	(i = 1 ;i < 24;i ++)
forinit	193:10	193:15	3	i = 1 ;
water	193:10	0:0	4	i
op	193:12	0:0	4	=
water	193:14	0:0	4	1
water	193:15	0:0	4	;
cond	193:17	193:21	3	i < 24
water	193:17	0:0	4	i
op	193:19	0:0	4	<
water	193:21	0:0	4	24
forexpr	193:25	193:26	3	i ++
water	193:25	0:0	4	i
op	193:26	0:0	4	++
stmts	194:4	209:4	3	
water	194:4	0:0	4	{
decl	195:8	195:49	4	size_t	l
op	195:17	0:0	4	=
call	195:19	195:48	5	strlen
arg	195:27	195:48	6	p_sys->ppsz_lines[i]
water	195:27	0:0	7	p_sys
op	195:32	0:0	7	->
water	195:34	0:0	7	ppsz_lines
op	195:44	0:0	7	[
water	195:45	0:0	7	i
op	195:46	0:0	7	]
if	196:8	197:44	4	(l > sizeof ( psz_text ) - total - 1)
cond	196:13	196:44	5	l > sizeof ( psz_text ) - total - 1
water	196:13	0:0	6	l
op	196:15	0:0	6	>
op	196:17	0:0	6	sizeof
water	196:23	0:0	6	(
water	196:24	0:0	6	psz_text
water	196:32	0:0	6	)
op	196:34	0:0	6	-
water	196:36	0:0	6	total
op	196:42	0:0	6	-
water	196:44	0:0	6	1
stmts	197:12	197:44	5	
water	197:12	0:0	6	l
op	197:14	0:0	6	=
op	197:16	0:0	6	sizeof
water	197:22	0:0	6	(
water	197:23	0:0	6	psz_text
water	197:31	0:0	6	)
op	197:33	0:0	6	-
water	197:35	0:0	6	total
op	197:41	0:0	6	-
water	197:43	0:0	6	1
water	197:44	0:0	6	;
if	198:8	208:8	4	(l > 0)
cond	198:13	198:17	5	l > 0
water	198:13	0:0	6	l
op	198:15	0:0	6	>
water	198:17	0:0	6	0
stmts	199:8	208:8	5	
water	199:8	0:0	6	{
call	200:12	200:48	6	memcpy
arg	200:20	200:22	7	pt
water	200:20	0:0	8	pt
arg	200:24	200:44	7	p_sys->ppsz_lines[i]
water	200:24	0:0	8	p_sys
op	200:29	0:0	8	->
water	200:31	0:0	8	ppsz_lines
op	200:41	0:0	8	[
water	200:42	0:0	8	i
op	200:43	0:0	8	]
arg	200:46	200:48	7	l
water	200:46	0:0	8	l
water	200:49	0:0	6	;
water	201:12	0:0	6	total
op	201:18	0:0	6	+=
water	201:21	0:0	6	l
water	201:22	0:0	6	;
water	202:12	0:0	6	pt
op	202:15	0:0	6	+=
water	202:18	0:0	6	l
water	202:19	0:0	6	;
if	203:12	207:12	6	(sizeof ( psz_text ) - total - 1 > 0)
cond	203:17	203:48	7	sizeof ( psz_text ) - total - 1 > 0
op	203:17	0:0	8	sizeof
water	203:23	0:0	8	(
water	203:24	0:0	8	psz_text
water	203:32	0:0	8	)
op	203:34	0:0	8	-
water	203:36	0:0	8	total
op	203:42	0:0	8	-
water	203:44	0:0	8	1
op	203:46	0:0	8	>
water	203:48	0:0	8	0
stmts	204:12	207:12	7	
water	204:12	0:0	8	{
op	205:16	0:0	8	*
water	205:17	0:0	8	pt
op	205:19	0:0	8	++
op	205:22	0:0	8	=
water	205:24	0:0	8	'\n'
water	205:28	0:0	8	;
water	206:16	0:0	8	total
op	206:21	0:0	8	++
water	206:23	0:0	8	;
water	207:12	0:0	8	}
water	208:8	0:0	6	}
water	209:4	0:0	4	}
op	210:4	0:0	2	*
water	210:5	0:0	2	pt
op	210:8	0:0	2	=
water	210:10	0:0	2	0
water	210:11	0:0	2	;
if	211:4	212:18	2	(!strcmp (psz_text ,p_sys -> psz_prev_text ))
cond	211:9	211:47	3	!strcmp (psz_text ,p_sys -> psz_prev_text )
op	211:9	0:0	4	!
call	211:10	211:47	4	strcmp
arg	211:17	211:25	5	psz_text
water	211:17	0:0	6	psz_text
arg	211:27	211:47	5	p_sys->psz_prev_text
water	211:27	0:0	6	p_sys
op	211:32	0:0	6	->
water	211:34	0:0	6	psz_prev_text
stmts	212:8	212:18	3	
goto	212:8	212:18	4	error
water	212:13	0:0	5	error
call	213:4	213:44	2	dbg
arg	213:8	213:44	3	(p_dec,"UPDATE TELETEXT PICTURE\n")
water	213:8	0:0	4	(
water	213:9	0:0	4	p_dec
water	213:14	0:0	4	,
water	213:16	0:0	4	"UPDATE TELETEXT PICTURE\n"
water	213:43	0:0	4	)
water	213:45	0:0	2	;
call	214:4	214:61	2	assert
arg	214:12	214:61	3	sizeof(p_sys->psz_prev_text)>=sizeof(psz_text)
op	214:12	0:0	4	sizeof
water	214:18	0:0	4	(
water	214:19	0:0	4	p_sys
op	214:24	0:0	4	->
water	214:26	0:0	4	psz_prev_text
water	214:39	0:0	4	)
op	214:41	0:0	4	>=
op	214:44	0:0	4	sizeof
water	214:50	0:0	4	(
water	214:51	0:0	4	psz_text
water	214:59	0:0	4	)
water	214:62	0:0	2	;
call	215:4	215:43	2	strcpy
arg	215:12	215:32	3	p_sys->psz_prev_text
water	215:12	0:0	4	p_sys
op	215:17	0:0	4	->
water	215:19	0:0	4	psz_prev_text
arg	215:34	215:43	3	psz_text
water	215:34	0:0	4	psz_text
water	215:44	0:0	2	;
water	217:4	0:0	2	p_spu
op	217:10	0:0	2	=
call	217:12	217:47	2	decoder_NewSubpicture
arg	217:35	217:40	3	p_dec
water	217:35	0:0	4	p_dec
arg	217:42	217:47	3	NULL
water	217:42	0:0	4	NULL
water	217:48	0:0	2	;
if	218:4	222:4	2	(! p_spu)
cond	218:8	218:9	3	! p_spu
op	218:8	0:0	4	!
water	218:9	0:0	4	p_spu
stmts	219:4	222:4	3	
water	219:4	0:0	4	{
call	220:8	220:48	4	msg_Warn
arg	220:18	220:23	5	p_dec
water	220:18	0:0	6	p_dec
arg	220:25	220:48	5	"can't get spu buffer"
water	220:25	0:0	6	"can't get spu buffer"
water	220:49	0:0	4	;
goto	221:8	221:18	4	error
water	221:13	0:0	5	error
water	222:4	0:0	4	}
call	224:4	224:44	2	memset
arg	224:12	224:16	3	&fmt
op	224:12	0:0	4	&
water	224:13	0:0	4	fmt
arg	224:18	224:19	3	0
water	224:18	0:0	4	0
arg	224:21	224:44	3	sizeof(video_format_t)
op	224:21	0:0	4	sizeof
water	224:27	0:0	4	(
water	224:28	0:0	4	video_format_t
water	224:42	0:0	4	)
water	224:45	0:0	2	;
water	225:4	0:0	2	fmt
op	225:7	0:0	2	.
water	225:8	0:0	2	i_chroma
op	225:17	0:0	2	=
water	225:19	0:0	2	VLC_CODEC_TEXT
water	225:33	0:0	2	;
water	226:4	0:0	2	fmt
op	226:7	0:0	2	.
water	226:8	0:0	2	i_width
op	226:16	0:0	2	=
water	226:18	0:0	2	fmt
op	226:21	0:0	2	.
water	226:22	0:0	2	i_height
op	226:31	0:0	2	=
water	226:33	0:0	2	0
water	226:34	0:0	2	;
water	227:4	0:0	2	fmt
op	227:7	0:0	2	.
water	227:8	0:0	2	i_x_offset
op	227:19	0:0	2	=
water	227:21	0:0	2	fmt
op	227:24	0:0	2	.
water	227:25	0:0	2	i_y_offset
op	227:36	0:0	2	=
water	227:38	0:0	2	0
water	227:39	0:0	2	;
water	228:4	0:0	2	p_spu
op	228:9	0:0	2	->
water	228:11	0:0	2	p_region
op	228:20	0:0	2	=
call	228:22	228:50	2	subpicture_region_New
arg	228:45	228:50	3	&fmt
op	228:45	0:0	4	&
water	228:46	0:0	4	fmt
water	228:51	0:0	2	;
if	229:4	233:4	2	(p_spu -> p_region == NULL)
cond	229:8	229:27	3	p_spu -> p_region == NULL
water	229:8	0:0	4	p_spu
op	229:13	0:0	4	->
water	229:15	0:0	4	p_region
op	229:24	0:0	4	==
water	229:27	0:0	4	NULL
stmts	230:4	233:4	3	
water	230:4	0:0	4	{
call	231:8	231:53	4	msg_Err
arg	231:17	231:22	5	p_dec
water	231:17	0:0	6	p_dec
arg	231:24	231:53	5	"cannot allocate SPU region"
water	231:24	0:0	6	"cannot allocate SPU region"
water	231:54	0:0	4	;
goto	232:8	232:18	4	error
water	232:13	0:0	5	error
water	233:4	0:0	4	}
water	235:4	0:0	2	p_spu
op	235:9	0:0	2	->
water	235:11	0:0	2	p_region
op	235:19	0:0	2	->
water	235:21	0:0	2	i_align
op	235:29	0:0	2	=
water	235:31	0:0	2	SUBPICTURE_ALIGN_BOTTOM
op	235:55	0:0	2	|
water	235:57	0:0	2	p_sys
op	235:62	0:0	2	->
water	235:64	0:0	2	i_align
water	235:71	0:0	2	;
water	236:4	0:0	2	p_spu
op	236:9	0:0	2	->
water	236:11	0:0	2	p_region
op	236:19	0:0	2	->
water	236:21	0:0	2	i_x
op	236:25	0:0	2	=
water	236:27	0:0	2	p_sys
op	236:32	0:0	2	->
water	236:34	0:0	2	i_align
water	236:42	0:0	2	?
water	236:44	0:0	2	20
water	236:47	0:0	2	:
water	236:49	0:0	2	0
water	236:50	0:0	2	;
water	237:4	0:0	2	p_spu
op	237:9	0:0	2	->
water	237:11	0:0	2	p_region
op	237:19	0:0	2	->
water	237:21	0:0	2	i_y
op	237:25	0:0	2	=
water	237:27	0:0	2	10
water	237:29	0:0	2	;
water	238:4	0:0	2	p_spu
op	238:9	0:0	2	->
water	238:11	0:0	2	p_region
op	238:19	0:0	2	->
water	238:21	0:0	2	psz_text
op	238:30	0:0	2	=
call	238:32	238:47	2	strdup
arg	238:39	238:47	3	psz_text
water	238:39	0:0	4	psz_text
water	238:48	0:0	2	;
water	239:4	0:0	2	p_spu
op	239:9	0:0	2	->
water	239:11	0:0	2	i_start
op	239:19	0:0	2	=
water	239:21	0:0	2	p_block
op	239:28	0:0	2	->
water	239:30	0:0	2	i_pts
water	239:35	0:0	2	;
water	240:4	0:0	2	p_spu
op	240:9	0:0	2	->
water	240:11	0:0	2	i_stop
op	240:18	0:0	2	=
water	240:20	0:0	2	p_block
op	240:27	0:0	2	->
water	240:29	0:0	2	i_pts
op	240:35	0:0	2	+
water	240:37	0:0	2	p_block
op	240:44	0:0	2	->
water	240:46	0:0	2	i_length
water	240:54	0:0	2	;
water	241:4	0:0	2	p_spu
op	241:9	0:0	2	->
water	241:11	0:0	2	b_ephemer
op	241:21	0:0	2	=
water	241:23	0:0	2	(
water	241:24	0:0	2	p_block
op	241:31	0:0	2	->
water	241:33	0:0	2	i_length
op	241:42	0:0	2	==
water	241:45	0:0	2	0
water	241:46	0:0	2	)
water	241:47	0:0	2	;
water	242:4	0:0	2	p_spu
op	242:9	0:0	2	->
water	242:11	0:0	2	b_absolute
op	242:22	0:0	2	=
water	242:24	0:0	2	false
water	242:29	0:0	2	;
call	243:4	243:102	2	dbg
arg	243:8	243:102	3	(p_dec,"%ld --> %ld\n",(longint)p_block->i_pts/100000,(longint)p_block->i_length/100000)
water	243:8	0:0	4	(
water	243:9	0:0	4	p_dec
water	243:14	0:0	4	,
water	243:16	0:0	4	"%ld --> %ld\n"
water	243:31	0:0	4	,
water	243:33	0:0	4	(
water	243:34	0:0	4	long
water	243:39	0:0	4	int
water	243:42	0:0	4	)
water	243:44	0:0	4	p_block
op	243:51	0:0	4	->
water	243:53	0:0	4	i_pts
op	243:58	0:0	4	/
water	243:59	0:0	4	100000
water	243:65	0:0	4	,
water	243:67	0:0	4	(
water	243:68	0:0	4	long
water	243:73	0:0	4	int
water	243:76	0:0	4	)
water	243:77	0:0	4	p_block
op	243:84	0:0	4	->
water	243:86	0:0	4	i_length
op	243:94	0:0	4	/
water	243:95	0:0	4	100000
water	243:101	0:0	4	)
water	243:103	0:0	2	;
call	244:4	244:27	2	block_Release
arg	244:19	244:27	3	p_block
water	244:19	0:0	4	p_block
water	244:28	0:0	2	;
return	245:4	245:16	2	p_spu
water	245:11	0:0	3	p_spu
label	246:0	246:5	2	error :
if	247:4	251:4	2	(p_spu != NULL)
cond	247:9	247:18	3	p_spu != NULL
water	247:9	0:0	4	p_spu
op	247:15	0:0	4	!=
water	247:18	0:0	4	NULL
stmts	248:4	251:4	3	
water	248:4	0:0	4	{
call	249:8	249:47	4	decoder_DeleteSubpicture
arg	249:34	249:39	5	p_dec
water	249:34	0:0	6	p_dec
arg	249:41	249:47	5	p_spu
water	249:41	0:0	6	p_spu
water	249:48	0:0	4	;
water	250:8	0:0	4	p_spu
op	250:14	0:0	4	=
water	250:16	0:0	4	NULL
water	250:20	0:0	4	;
water	251:4	0:0	4	}
call	252:4	252:27	2	block_Release
arg	252:19	252:27	3	p_block
water	252:19	0:0	4	p_block
water	252:28	0:0	2	;
return	253:4	253:15	2	NULL
water	253:11	0:0	3	NULL

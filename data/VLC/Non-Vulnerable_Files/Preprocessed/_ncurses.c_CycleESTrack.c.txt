func	2:0	19:0	0	static void	CycleESTrack
params	2:24	0:0	1	
param	2:25	2:40	2	intf_sys_t *	sys
param	2:42	2:57	2	const char *	var
stmnts	0:0	18:55	1	
decl	4:4	4:40	2	input_thread_t	*input
op	4:26	0:0	2	=
water	4:28	0:0	2	sys
op	4:31	0:0	2	->
water	4:33	0:0	2	p_input
if	5:4	6:14	2	(! input)
cond	5:8	5:9	3	! input
op	5:8	0:0	4	!
water	5:9	0:0	4	input
stmts	6:8	6:14	3	
return	6:8	6:14	4	
decl	7:4	7:19	2	vlc_value_t	val
if	8:4	9:14	2	(var_Change (input ,var ,VLC_VAR_GETLIST ,& val ,NULL ) < 0)
cond	8:8	8:62	3	var_Change (input ,var ,VLC_VAR_GETLIST ,& val ,NULL ) < 0
call	8:8	8:58	4	var_Change
arg	8:19	8:24	5	input
water	8:19	0:0	6	input
arg	8:26	8:29	5	var
water	8:26	0:0	6	var
arg	8:31	8:46	5	VLC_VAR_GETLIST
water	8:31	0:0	6	VLC_VAR_GETLIST
arg	8:48	8:52	5	&val
op	8:48	0:0	6	&
water	8:49	0:0	6	val
arg	8:54	8:58	5	NULL
water	8:54	0:0	6	NULL
op	8:60	0:0	4	<
water	8:62	0:0	4	0
stmts	9:8	9:14	3	
return	9:8	9:14	4	
decl	10:4	10:33	2	vlc_list_t	*list
op	10:21	0:0	2	=
water	10:23	0:0	2	val
op	10:26	0:0	2	.
water	10:27	0:0	2	p_list
decl	11:4	11:48	2	int64_t	current
op	11:20	0:0	2	=
call	11:22	11:47	3	var_GetInteger
arg	11:37	11:42	4	input
water	11:37	0:0	5	input
arg	11:44	11:47	4	var
water	11:44	0:0	5	var
decl	12:4	12:9	2	int	i
for	13:4	15:17	2	(i = 0 ;i < list -> i_count;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:26	3	i < list -> i_count
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	list
op	13:24	0:0	4	->
water	13:26	0:0	4	i_count
forexpr	13:35	13:36	3	i ++
water	13:35	0:0	4	i
op	13:36	0:0	4	++
stmts	14:8	15:17	3	
if	14:8	15:17	4	(list -> p_values [ i ] . i_int == current)
cond	14:12	14:39	5	list -> p_values [ i ] . i_int == current
water	14:12	0:0	6	list
op	14:16	0:0	6	->
water	14:18	0:0	6	p_values
op	14:26	0:0	6	[
water	14:27	0:0	6	i
op	14:28	0:0	6	]
op	14:29	0:0	6	.
water	14:30	0:0	6	i_int
op	14:36	0:0	6	==
water	14:39	0:0	6	current
stmts	15:12	15:17	5	
break	15:12	15:17	6	
if	16:4	17:13	2	(++ i >= list -> i_count)
cond	16:8	16:21	3	++ i >= list -> i_count
op	16:8	0:0	4	++
water	16:10	0:0	4	i
op	16:12	0:0	4	>=
water	16:15	0:0	4	list
op	16:19	0:0	4	->
water	16:21	0:0	4	i_count
stmts	17:8	17:13	3	
water	17:8	0:0	4	i
op	17:10	0:0	4	=
water	17:12	0:0	4	0
water	17:13	0:0	4	;
call	18:4	18:54	2	var_SetInteger
arg	18:19	18:24	3	input
water	18:19	0:0	4	input
arg	18:26	18:29	3	var
water	18:26	0:0	4	var
arg	18:31	18:54	3	list->p_values[i].i_int
water	18:31	0:0	4	list
op	18:35	0:0	4	->
water	18:37	0:0	4	p_values
op	18:45	0:0	4	[
water	18:46	0:0	4	i
op	18:47	0:0	4	]
op	18:48	0:0	4	.
water	18:49	0:0	4	i_int
water	18:55	0:0	2	;

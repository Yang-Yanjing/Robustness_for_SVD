func	2:0	27:0	0	static int	asmrp_rule
params	2:22	0:0	1	
param	2:23	2:33	2	asmrp_t *	p
stmnts	0:0	26:12	1	
decl	3:2	3:9	2	int	ret
call	4:2	4:19	2	lprintf
arg	4:11	4:19	3	"rule\n"
water	4:11	0:0	4	"rule\n"
water	4:20	0:0	2	;
water	5:2	0:0	2	ret
op	5:6	0:0	2	=
water	5:8	0:0	2	1
water	5:9	0:0	2	;
if	6:2	13:2	2	(p -> sym == ASMRP_SYM_HASH)
cond	6:6	6:16	3	p -> sym == ASMRP_SYM_HASH
water	6:6	0:0	4	p
op	6:7	0:0	4	->
water	6:9	0:0	4	sym
op	6:13	0:0	4	==
water	6:16	0:0	4	ASMRP_SYM_HASH
stmts	6:32	13:2	3	
water	6:32	0:0	4	{
call	7:4	7:20	4	asmrp_get_sym
arg	7:19	7:20	5	p
water	7:19	0:0	6	p
water	7:21	0:0	4	;
water	8:4	0:0	4	ret
op	8:8	0:0	4	=
call	8:10	8:28	4	asmrp_condition
arg	8:27	8:28	5	p
water	8:27	0:0	6	p
water	8:29	0:0	4	;
while	9:4	12:4	4	(p -> sym == ASMRP_SYM_COMMA)
cond	9:11	9:21	5	p -> sym == ASMRP_SYM_COMMA
water	9:11	0:0	6	p
op	9:12	0:0	6	->
water	9:14	0:0	6	sym
op	9:18	0:0	6	==
water	9:21	0:0	6	ASMRP_SYM_COMMA
stmts	9:38	12:4	5	
water	9:38	0:0	6	{
call	10:6	10:22	6	asmrp_get_sym
arg	10:21	10:22	7	p
water	10:21	0:0	8	p
water	10:23	0:0	6	;
call	11:6	11:25	6	asmrp_assignment
arg	11:24	11:25	7	p
water	11:24	0:0	8	p
water	11:26	0:0	6	;
water	12:4	0:0	6	}
water	13:2	0:0	4	}
else	13:4	19:2	2
stmts	13:9	19:2	3	
if	13:9	19:2	4	(p -> sym != ASMRP_SYM_SEMICOLON)
cond	13:13	13:23	5	p -> sym != ASMRP_SYM_SEMICOLON
water	13:13	0:0	6	p
op	13:14	0:0	6	->
water	13:16	0:0	6	sym
op	13:20	0:0	6	!=
water	13:23	0:0	6	ASMRP_SYM_SEMICOLON
stmts	13:44	19:2	5	
water	13:44	0:0	6	{
call	14:4	14:23	6	asmrp_assignment
arg	14:22	14:23	7	p
water	14:22	0:0	8	p
water	14:24	0:0	6	;
while	15:4	18:4	6	(p -> sym == ASMRP_SYM_COMMA)
cond	15:11	15:21	7	p -> sym == ASMRP_SYM_COMMA
water	15:11	0:0	8	p
op	15:12	0:0	8	->
water	15:14	0:0	8	sym
op	15:18	0:0	8	==
water	15:21	0:0	8	ASMRP_SYM_COMMA
stmts	15:38	18:4	7	
water	15:38	0:0	8	{
call	16:6	16:22	8	asmrp_get_sym
arg	16:21	16:22	9	p
water	16:21	0:0	10	p
water	16:23	0:0	8	;
call	17:6	17:25	8	asmrp_assignment
arg	17:24	17:25	9	p
water	17:24	0:0	10	p
water	17:26	0:0	8	;
water	18:4	0:0	8	}
water	19:2	0:0	6	}
call	20:2	20:34	2	lprintf
arg	20:11	20:29	3	"rule done = %d\n"
water	20:11	0:0	4	"rule done = %d\n"
arg	20:31	20:34	3	ret
water	20:31	0:0	4	ret
water	20:35	0:0	2	;
if	21:2	24:2	2	(p -> sym != ASMRP_SYM_SEMICOLON)
cond	21:6	21:16	3	p -> sym != ASMRP_SYM_SEMICOLON
water	21:6	0:0	4	p
op	21:7	0:0	4	->
water	21:9	0:0	4	sym
op	21:13	0:0	4	!=
water	21:16	0:0	4	ASMRP_SYM_SEMICOLON
stmts	21:37	24:2	3	
water	21:37	0:0	4	{
call	22:4	22:35	4	printf
arg	22:12	22:35	5	"semicolon expected.\n"
water	22:12	0:0	6	"semicolon expected.\n"
water	22:36	0:0	4	;
return	23:4	23:14	4	ret
water	23:11	0:0	5	ret
water	24:2	0:0	4	}
call	25:2	25:18	2	asmrp_get_sym
arg	25:17	25:18	3	p
water	25:17	0:0	4	p
water	25:19	0:0	2	;
return	26:2	26:12	2	ret
water	26:9	0:0	3	ret

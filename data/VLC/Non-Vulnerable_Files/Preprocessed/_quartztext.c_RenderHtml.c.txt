func	2:0	66:0	0	static int	RenderHtml
params	2:21	0:0	1	
param	2:22	2:40	2	filter_t *	p_filter
param	2:42	2:75	2	subpicture_region_t *	p_region_out
param	3:23	3:55	2	subpicture_region_t *	p_region_in
param	4:23	4:56	2	const vlc_fourcc_t *	p_chroma_list
stmnts	0:0	65:13	1	
decl	6:4	6:33	2	int	rv
op	6:20	0:0	2	=
water	6:22	0:0	2	VLC_SUCCESS
decl	7:4	7:30	2	stream_t	*p_sub
op	7:24	0:0	2	=
water	7:26	0:0	2	NULL
decl	8:4	8:30	2	xml_t	*p_xml
op	8:24	0:0	2	=
water	8:26	0:0	2	NULL
decl	9:4	9:37	2	xml_reader_t	*p_xml_reader
op	9:31	0:0	2	=
water	9:33	0:0	2	NULL
call	10:4	10:28	2	VLC_UNUSED
arg	10:15	10:28	3	p_chroma_list
water	10:15	0:0	4	p_chroma_list
water	10:29	0:0	2	;
if	11:4	12:27	2	(! p_region_in || ! p_region_in -> psz_html)
cond	11:8	11:38	3	! p_region_in || ! p_region_in -> psz_html
op	11:8	0:0	4	!
water	11:9	0:0	4	p_region_in
op	11:21	0:0	4	||
op	11:24	0:0	4	!
water	11:25	0:0	4	p_region_in
op	11:36	0:0	4	->
water	11:38	0:0	4	psz_html
stmts	12:8	12:27	3	
return	12:8	12:27	4	VLC_EGENERIC
water	12:15	0:0	5	VLC_EGENERIC
water	14:4	0:0	2	p_filter
op	14:12	0:0	2	->
water	14:14	0:0	2	p_sys
op	14:19	0:0	2	->
water	14:21	0:0	2	i_font_size
op	14:33	0:0	2	=
call	14:35	14:55	2	GetFontSize
arg	14:47	14:55	3	p_filter
water	14:47	0:0	4	p_filter
water	14:56	0:0	2	;
water	15:4	0:0	2	p_sub
op	15:10	0:0	2	=
call	15:12	18:34	2	stream_MemoryNew
arg	15:29	15:49	3	VLC_OBJECT(p_filter)
call	15:29	15:48	4	VLC_OBJECT
arg	15:40	15:48	5	p_filter
water	15:40	0:0	6	p_filter
arg	16:30	16:63	3	(uint8_t*)p_region_in->psz_html
water	16:30	0:0	4	(
water	16:31	0:0	4	uint8_t
op	16:39	0:0	4	*
water	16:40	0:0	4	)
water	16:42	0:0	4	p_region_in
op	16:53	0:0	4	->
water	16:55	0:0	4	psz_html
arg	17:30	17:59	3	strlen(p_region_in->psz_html)
call	17:30	17:58	4	strlen
arg	17:37	17:58	5	p_region_in->psz_html
water	17:37	0:0	6	p_region_in
op	17:48	0:0	6	->
water	17:50	0:0	6	psz_html
arg	18:30	18:34	3	true
water	18:30	0:0	4	true
water	18:35	0:0	2	;
if	19:4	64:4	2	(p_sub)
cond	19:8	19:8	3	p_sub
water	19:8	0:0	4	p_sub
stmts	19:15	64:4	3	
water	19:15	0:0	4	{
water	20:8	0:0	4	p_xml
op	20:14	0:0	4	=
call	20:16	20:35	4	xml_Create
arg	20:27	20:35	5	p_filter
water	20:27	0:0	6	p_filter
water	20:36	0:0	4	;
if	21:8	62:8	4	(p_xml)
cond	21:12	21:12	5	p_xml
water	21:12	0:0	6	p_xml
stmts	21:19	62:8	5	
water	21:19	0:0	6	{
water	22:12	0:0	6	p_xml_reader
op	22:25	0:0	6	=
call	22:27	22:56	6	xml_ReaderCreate
arg	22:44	22:49	7	p_xml
water	22:44	0:0	8	p_xml
arg	22:51	22:56	7	p_sub
water	22:51	0:0	8	p_sub
water	22:57	0:0	6	;
if	23:12	47:12	6	(p_xml_reader)
cond	23:16	23:16	7	p_xml_reader
water	23:16	0:0	8	p_xml_reader
stmts	23:30	47:12	7	
water	23:30	0:0	8	{
decl	25:16	25:32	8	const char	*name
if	26:16	39:16	8	(xml_ReaderNextNode (p_xml_reader ,& name ) == XML_READER_STARTELEM)
cond	26:20	27:27	9	xml_ReaderNextNode (p_xml_reader ,& name ) == XML_READER_STARTELEM
call	26:20	26:58	10	xml_ReaderNextNode
arg	26:39	26:51	11	p_xml_reader
water	26:39	0:0	12	p_xml_reader
arg	26:53	26:58	11	&name
op	26:53	0:0	12	&
water	26:54	0:0	12	name
op	27:24	0:0	10	==
water	27:27	0:0	10	XML_READER_STARTELEM
stmts	27:49	39:16	9	
water	27:49	0:0	10	{
if	28:20	33:20	10	(!strcasecmp ("karaoke" ,name ))
cond	28:24	28:51	11	!strcasecmp ("karaoke" ,name )
op	28:24	0:0	12	!
call	28:25	28:51	12	strcasecmp
arg	28:36	28:45	13	"karaoke"
water	28:36	0:0	14	"karaoke"
arg	28:47	28:51	13	name
water	28:47	0:0	14	name
stmts	28:54	33:20	11	
water	28:54	0:0	12	{
call	32:24	32:67	12	var_SetBool
arg	32:36	32:44	13	p_filter
water	32:36	0:0	14	p_filter
arg	32:46	32:61	13	"text-rerender"
water	32:46	0:0	14	"text-rerender"
arg	32:63	32:67	13	true
water	32:63	0:0	14	true
water	32:68	0:0	12	;
water	33:20	0:0	12	}
else	33:22	38:20	10
stmts	33:27	38:20	11	
if	33:27	38:20	12	(strcasecmp ("text" ,name ))
cond	33:31	33:54	13	strcasecmp ("text" ,name )
call	33:31	33:54	14	strcasecmp
arg	33:42	33:48	15	"text"
water	33:42	0:0	16	"text"
arg	33:50	33:54	15	name
water	33:50	0:0	16	name
stmts	33:57	38:20	13	
water	33:57	0:0	14	{
call	35:24	36:64	14	msg_Dbg
arg	35:32	35:40	15	p_filter
water	35:32	0:0	16	p_filter
arg	35:42	36:58	15	"Unsupported top-level tag ""<%s> ignored."
water	35:42	0:0	16	"Unsupported top-level tag "
water	36:43	0:0	16	"<%s> ignored."
arg	36:60	36:64	15	name
water	36:60	0:0	16	name
water	36:65	0:0	14	;
water	37:24	0:0	14	rv
op	37:27	0:0	14	=
water	37:29	0:0	14	VLC_EGENERIC
water	37:41	0:0	14	;
water	38:20	0:0	14	}
water	39:16	0:0	10	}
else	39:18	42:16	8
stmts	39:23	42:16	9	
water	39:23	0:0	10	{
call	40:20	40:63	10	msg_Err
arg	40:28	40:36	11	p_filter
water	40:28	0:0	12	p_filter
arg	40:38	40:63	11	"Malformed HTML subtitle"
water	40:38	0:0	12	"Malformed HTML subtitle"
water	40:64	0:0	10	;
water	41:20	0:0	10	rv
op	41:23	0:0	10	=
water	41:25	0:0	10	VLC_EGENERIC
water	41:37	0:0	10	;
water	42:16	0:0	10	}
if	43:16	46:16	8	(rv != VLC_SUCCESS)
cond	43:20	43:26	9	rv != VLC_SUCCESS
water	43:20	0:0	10	rv
op	43:23	0:0	10	!=
water	43:26	0:0	10	VLC_SUCCESS
stmts	43:39	46:16	9	
water	43:39	0:0	10	{
call	44:20	44:49	10	xml_ReaderDelete
arg	44:37	44:49	11	p_xml_reader
water	44:37	0:0	12	p_xml_reader
water	44:50	0:0	10	;
water	45:20	0:0	10	p_xml_reader
op	45:33	0:0	10	=
water	45:35	0:0	10	NULL
water	45:39	0:0	10	;
water	46:16	0:0	10	}
water	47:12	0:0	8	}
if	48:12	60:12	6	(p_xml_reader)
cond	48:16	48:16	7	p_xml_reader
water	48:16	0:0	8	p_xml_reader
stmts	48:30	60:12	7	
water	48:30	0:0	8	{
decl	49:16	49:33	8	int	i_len
decl	50:16	50:115	8	CFMutableAttributedStringRef	p_attrString
op	50:58	0:0	8	=
call	50:60	50:114	9	CFAttributedStringCreateMutable
arg	50:92	50:111	10	kCFAllocatorDefault
water	50:92	0:0	11	kCFAllocatorDefault
arg	50:113	50:114	10	0
water	50:113	0:0	11	0
water	51:16	0:0	8	rv
op	51:19	0:0	8	=
call	51:21	52:64	8	ProcessNodes
arg	51:34	51:42	9	p_filter
water	51:34	0:0	10	p_filter
arg	51:44	51:56	9	p_xml_reader
water	51:44	0:0	10	p_xml_reader
arg	52:30	52:50	9	p_region_in->p_style
water	52:30	0:0	10	p_region_in
op	52:41	0:0	10	->
water	52:43	0:0	10	p_style
arg	52:52	52:64	9	p_attrString
water	52:52	0:0	10	p_attrString
water	52:65	0:0	8	;
water	53:16	0:0	8	i_len
op	53:22	0:0	8	=
call	53:24	53:64	8	CFAttributedStringGetLength
arg	53:52	53:64	9	p_attrString
water	53:52	0:0	10	p_attrString
water	53:65	0:0	8	;
water	54:16	0:0	8	p_region_out
op	54:28	0:0	8	->
water	54:30	0:0	8	i_x
op	54:34	0:0	8	=
water	54:36	0:0	8	p_region_in
op	54:47	0:0	8	->
water	54:49	0:0	8	i_x
water	54:52	0:0	8	;
water	55:16	0:0	8	p_region_out
op	55:28	0:0	8	->
water	55:30	0:0	8	i_y
op	55:34	0:0	8	=
water	55:36	0:0	8	p_region_in
op	55:47	0:0	8	->
water	55:49	0:0	8	i_y
water	55:52	0:0	8	;
if	56:16	57:68	8	(( rv == VLC_SUCCESS ) && ( i_len > 0 ))
cond	56:20	56:53	9	( rv == VLC_SUCCESS ) && ( i_len > 0 )
water	56:20	0:0	10	(
water	56:21	0:0	10	rv
op	56:24	0:0	10	==
water	56:27	0:0	10	VLC_SUCCESS
water	56:38	0:0	10	)
op	56:40	0:0	10	&&
water	56:43	0:0	10	(
water	56:44	0:0	10	i_len
op	56:50	0:0	10	>
water	56:52	0:0	10	0
water	56:53	0:0	10	)
stmts	57:20	57:68	9	
call	57:20	57:67	10	RenderYUVA
arg	57:31	57:39	11	p_filter
water	57:31	0:0	12	p_filter
arg	57:41	57:53	11	p_region_out
water	57:41	0:0	12	p_region_out
arg	57:55	57:67	11	p_attrString
water	57:55	0:0	12	p_attrString
water	57:68	0:0	10	;
call	58:16	58:38	8	CFRelease
arg	58:26	58:38	9	p_attrString
water	58:26	0:0	10	p_attrString
water	58:39	0:0	8	;
call	59:16	59:45	8	xml_ReaderDelete
arg	59:33	59:45	9	p_xml_reader
water	59:33	0:0	10	p_xml_reader
water	59:46	0:0	8	;
water	60:12	0:0	8	}
call	61:12	61:28	6	xml_Delete
arg	61:23	61:28	7	p_xml
water	61:23	0:0	8	p_xml
water	61:29	0:0	6	;
water	62:8	0:0	6	}
call	63:8	63:27	4	stream_Delete
arg	63:22	63:27	5	p_sub
water	63:22	0:0	6	p_sub
water	63:28	0:0	4	;
water	64:4	0:0	4	}
return	65:4	65:13	2	rv
water	65:11	0:0	3	rv

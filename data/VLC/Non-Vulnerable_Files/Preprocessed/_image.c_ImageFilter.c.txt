func	2:0	26:0	0	static picture_t *	ImageFilter
params	2:29	0:0	1	
param	2:31	2:55	2	image_handler_t *	p_image
param	2:57	2:73	2	picture_t *	p_pic
param	3:31	3:52	2	video_format_t *	p_fmt
param	3:54	3:77	2	const char *	psz_module
stmnts	6:4	25:73	1	
if	6:4	17:4	2	(! p_image -> p_filter)
cond	6:8	6:18	3	! p_image -> p_filter
op	6:8	0:0	4	!
water	6:9	0:0	4	p_image
op	6:16	0:0	4	->
water	6:18	0:0	4	p_filter
stmts	7:4	17:4	3	
water	7:4	0:0	4	{
decl	8:8	8:23	4	es_format_t	fmt
call	9:8	9:56	4	es_format_Init
arg	9:24	9:28	5	&fmt
op	9:24	0:0	6	&
water	9:25	0:0	6	fmt
arg	9:30	9:38	5	VIDEO_ES
water	9:30	0:0	6	VIDEO_ES
arg	9:40	9:56	5	p_fmt->i_chroma
water	9:40	0:0	6	p_fmt
op	9:45	0:0	6	->
water	9:47	0:0	6	i_chroma
water	9:57	0:0	4	;
water	10:8	0:0	4	fmt
op	10:11	0:0	4	.
water	10:12	0:0	4	video
op	10:18	0:0	4	=
op	10:20	0:0	4	*
water	10:21	0:0	4	p_fmt
water	10:26	0:0	4	;
water	11:8	0:0	4	p_image
op	11:15	0:0	4	->
water	11:17	0:0	4	p_filter
op	11:26	0:0	4	=
call	12:12	12:74	4	CreateFilter
arg	12:26	12:43	5	p_image->p_parent
water	12:26	0:0	6	p_image
op	12:33	0:0	6	->
water	12:35	0:0	6	p_parent
arg	12:45	12:49	5	&fmt
op	12:45	0:0	6	&
water	12:46	0:0	6	fmt
arg	12:51	12:61	5	&fmt.video
op	12:51	0:0	6	&
water	12:52	0:0	6	fmt
op	12:55	0:0	6	.
water	12:56	0:0	6	video
arg	12:63	12:74	5	psz_module
water	12:63	0:0	6	psz_module
water	12:75	0:0	4	;
if	13:8	16:8	4	(! p_image -> p_filter)
cond	13:12	13:22	5	! p_image -> p_filter
op	13:12	0:0	6	!
water	13:13	0:0	6	p_image
op	13:20	0:0	6	->
water	13:22	0:0	6	p_filter
stmts	14:8	16:8	5	
water	14:8	0:0	6	{
return	15:12	15:23	6	NULL
water	15:19	0:0	7	NULL
water	16:8	0:0	6	}
water	17:4	0:0	4	}
else	18:4	23:4	2
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
water	21:8	0:0	4	p_image
op	21:15	0:0	4	->
water	21:17	0:0	4	p_filter
op	21:25	0:0	4	->
water	21:27	0:0	4	fmt_in
op	21:33	0:0	4	.
water	21:34	0:0	4	video
op	21:40	0:0	4	=
op	21:42	0:0	4	*
water	21:43	0:0	4	p_fmt
water	21:48	0:0	4	;
water	22:8	0:0	4	p_image
op	22:15	0:0	4	->
water	22:17	0:0	4	p_filter
op	22:25	0:0	4	->
water	22:27	0:0	4	fmt_out
op	22:34	0:0	4	.
water	22:35	0:0	4	video
op	22:41	0:0	4	=
op	22:43	0:0	4	*
water	22:44	0:0	4	p_fmt
water	22:49	0:0	4	;
water	23:4	0:0	4	}
call	24:4	24:24	2	picture_Hold
arg	24:18	24:24	3	p_pic
water	24:18	0:0	4	p_pic
water	24:25	0:0	2	;
return	25:4	25:73	2	p_image->p_filter->pf_video_filter(p_image->p_filter,p_pic)
call	25:11	25:72	3	p_image->p_filter->pf_video_filter
arg	25:47	25:64	4	p_image->p_filter
water	25:47	0:0	5	p_image
op	25:54	0:0	5	->
water	25:56	0:0	5	p_filter
arg	25:66	25:72	4	p_pic
water	25:66	0:0	5	p_pic

func	1:0	1:45	0	static inline int	ssd
params	1:21	0:0	1	
param	1:23	1:29	2	int	a
stmnts	1:33	1:43	1	
return	1:33	1:43	2	a*a
water	1:40	0:0	3	a
op	1:41	0:0	3	*
water	1:42	0:0	3	a
func	2:0	24:0	0	static inline int	XDeint8x8DetectC
params	2:34	0:0	1	
param	2:36	2:48	2	uint8_t *	src
param	2:50	2:60	2	int	i_src
stmnts	0:0	23:32	1	
decl	4:4	4:12	2	int	y
water	4:9	0:0	2	,
decl	4:4	4:12	2	int	x
decl	5:4	5:14	2	int	ff
water	5:10	0:0	2	,
decl	5:4	5:14	2	int	fr
decl	6:4	6:10	2	int	fc
water	8:4	0:0	2	fc
op	8:7	0:0	2	=
water	8:9	0:0	2	0
water	8:10	0:0	2	;
for	9:4	22:4	2	(y = 0 ;y < 7;y += 2)
forinit	9:9	9:14	3	y = 0 ;
water	9:9	0:0	4	y
op	9:11	0:0	4	=
water	9:13	0:0	4	0
water	9:14	0:0	4	;
cond	9:16	9:20	3	y < 7
water	9:16	0:0	4	y
op	9:18	0:0	4	<
water	9:20	0:0	4	7
forexpr	9:23	9:28	3	y += 2
water	9:23	0:0	4	y
op	9:25	0:0	4	+=
water	9:28	0:0	4	2
stmts	10:4	22:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	ff
op	11:11	0:0	4	=
water	11:13	0:0	4	fr
op	11:16	0:0	4	=
water	11:18	0:0	4	0
water	11:19	0:0	4	;
for	12:8	18:8	4	(x = 0 ;x < 8;x ++)
forinit	12:13	12:18	5	x = 0 ;
water	12:13	0:0	6	x
op	12:15	0:0	6	=
water	12:17	0:0	6	0
water	12:18	0:0	6	;
cond	12:20	12:24	5	x < 8
water	12:20	0:0	6	x
op	12:22	0:0	6	<
water	12:24	0:0	6	8
forexpr	12:27	12:28	5	x ++
water	12:27	0:0	6	x
op	12:28	0:0	6	++
stmts	13:8	18:8	5	
water	13:8	0:0	6	{
water	14:12	0:0	6	fr
op	14:15	0:0	6	+=
call	14:18	14:51	6	ssd
arg	14:22	14:51	7	src[x]-src[1*i_src+x]
water	14:22	0:0	8	src
op	14:25	0:0	8	[
water	14:32	0:0	8	x
op	14:33	0:0	8	]
op	14:35	0:0	8	-
water	14:37	0:0	8	src
op	14:40	0:0	8	[
water	14:41	0:0	8	1
op	14:42	0:0	8	*
water	14:43	0:0	8	i_src
op	14:48	0:0	8	+
water	14:49	0:0	8	x
op	14:50	0:0	8	]
op	14:53	0:0	6	+
call	15:18	15:51	6	ssd
arg	15:22	15:51	7	src[i_src+x]-src[2*i_src+x]
water	15:22	0:0	8	src
op	15:25	0:0	8	[
water	15:26	0:0	8	i_src
op	15:31	0:0	8	+
water	15:32	0:0	8	x
op	15:33	0:0	8	]
op	15:35	0:0	8	-
water	15:37	0:0	8	src
op	15:40	0:0	8	[
water	15:41	0:0	8	2
op	15:42	0:0	8	*
water	15:43	0:0	8	i_src
op	15:48	0:0	8	+
water	15:49	0:0	8	x
op	15:50	0:0	8	]
water	15:52	0:0	6	;
water	16:12	0:0	6	ff
op	16:15	0:0	6	+=
call	16:18	16:51	6	ssd
arg	16:22	16:51	7	src[x]-src[2*i_src+x]
water	16:22	0:0	8	src
op	16:25	0:0	8	[
water	16:32	0:0	8	x
op	16:33	0:0	8	]
op	16:35	0:0	8	-
water	16:37	0:0	8	src
op	16:40	0:0	8	[
water	16:41	0:0	8	2
op	16:42	0:0	8	*
water	16:43	0:0	8	i_src
op	16:48	0:0	8	+
water	16:49	0:0	8	x
op	16:50	0:0	8	]
op	16:53	0:0	6	+
call	17:18	17:51	6	ssd
arg	17:22	17:51	7	src[i_src+x]-src[3*i_src+x]
water	17:22	0:0	8	src
op	17:25	0:0	8	[
water	17:26	0:0	8	i_src
op	17:31	0:0	8	+
water	17:32	0:0	8	x
op	17:33	0:0	8	]
op	17:35	0:0	8	-
water	17:37	0:0	8	src
op	17:40	0:0	8	[
water	17:41	0:0	8	3
op	17:42	0:0	8	*
water	17:43	0:0	8	i_src
op	17:48	0:0	8	+
water	17:49	0:0	8	x
op	17:50	0:0	8	]
water	17:52	0:0	6	;
water	18:8	0:0	6	}
if	19:8	20:16	4	(ff < 6 * fr / 8 && fr > 32)
cond	19:12	19:32	5	ff < 6 * fr / 8 && fr > 32
water	19:12	0:0	6	ff
op	19:15	0:0	6	<
water	19:17	0:0	6	6
op	19:18	0:0	6	*
water	19:19	0:0	6	fr
op	19:21	0:0	6	/
water	19:22	0:0	6	8
op	19:24	0:0	6	&&
water	19:27	0:0	6	fr
op	19:30	0:0	6	>
water	19:32	0:0	6	32
stmts	20:12	20:16	5	
water	20:12	0:0	6	fc
op	20:14	0:0	6	++
water	20:16	0:0	6	;
water	21:8	0:0	4	src
op	21:12	0:0	4	+=
water	21:15	0:0	4	2
op	21:16	0:0	4	*
water	21:17	0:0	4	i_src
water	21:22	0:0	4	;
water	22:4	0:0	4	}
return	23:4	23:32	2	fc<1?false:true
water	23:11	0:0	3	fc
op	23:14	0:0	3	<
water	23:16	0:0	3	1
water	23:18	0:0	3	?
water	23:20	0:0	3	false
water	23:26	0:0	3	:
water	23:28	0:0	3	true

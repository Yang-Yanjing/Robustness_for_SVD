func	2:0	37:0	0	int	transcode_spu_process
params	2:25	0:0	1	
param	2:27	2:50	2	sout_stream_t *	p_stream
param	3:34	3:58	2	sout_stream_id_sys_t *	id
param	4:34	4:45	2	block_t *	in
param	4:47	4:61	2	block_t * *	out
stmnts	0:0	36:23	1	
decl	6:4	6:46	2	sout_stream_sys_t	*p_sys
op	6:29	0:0	2	=
water	6:31	0:0	2	p_stream
op	6:39	0:0	2	->
water	6:41	0:0	2	p_sys
decl	7:4	7:26	2	subpicture_t	*p_subpic
op	8:4	0:0	2	*
water	8:5	0:0	2	out
op	8:9	0:0	2	=
water	8:11	0:0	2	NULL
water	8:15	0:0	2	;
water	9:4	0:0	2	p_subpic
op	9:13	0:0	2	=
call	9:15	9:64	2	id->p_decoder->pf_decode_sub
arg	9:45	9:58	3	id->p_decoder
water	9:45	0:0	4	id
op	9:47	0:0	4	->
water	9:49	0:0	4	p_decoder
arg	9:60	9:64	3	&in
op	9:60	0:0	4	&
water	9:61	0:0	4	in
water	9:65	0:0	2	;
if	10:4	14:4	2	(! p_subpic)
cond	10:8	10:9	3	! p_subpic
op	10:8	0:0	4	!
water	10:9	0:0	4	p_subpic
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
return	13:8	13:26	4	VLC_SUCCESS
water	13:15	0:0	5	VLC_SUCCESS
water	14:4	0:0	4	}
if	15:4	19:4	2	(p_sys -> b_master_sync && p_sys -> i_master_drift)
cond	15:8	15:39	3	p_sys -> b_master_sync && p_sys -> i_master_drift
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	b_master_sync
op	15:29	0:0	4	&&
water	15:32	0:0	4	p_sys
op	15:37	0:0	4	->
water	15:39	0:0	4	i_master_drift
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	p_subpic
op	17:16	0:0	4	->
water	17:18	0:0	4	i_start
op	17:26	0:0	4	-=
water	17:29	0:0	4	p_sys
op	17:34	0:0	4	->
water	17:36	0:0	4	i_master_drift
water	17:50	0:0	4	;
if	18:8	18:72	4	(p_subpic -> i_stop)
cond	18:12	18:22	5	p_subpic -> i_stop
water	18:12	0:0	6	p_subpic
op	18:20	0:0	6	->
water	18:22	0:0	6	i_stop
stmts	18:31	18:72	5	
water	18:31	0:0	6	p_subpic
op	18:39	0:0	6	->
water	18:41	0:0	6	i_stop
op	18:48	0:0	6	-=
water	18:51	0:0	6	p_sys
op	18:56	0:0	6	->
water	18:58	0:0	6	i_master_drift
water	18:72	0:0	6	;
water	19:4	0:0	4	}
if	20:4	24:4	2	(p_sys -> b_soverlay)
cond	20:8	20:15	3	p_sys -> b_soverlay
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	b_soverlay
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
call	22:8	22:50	4	spu_PutSubpicture
arg	22:27	22:39	5	p_sys->p_spu
water	22:27	0:0	6	p_sys
op	22:32	0:0	6	->
water	22:34	0:0	6	p_spu
arg	22:41	22:50	5	p_subpic
water	22:41	0:0	6	p_subpic
water	22:51	0:0	4	;
return	23:8	23:26	4	VLC_SUCCESS
water	23:15	0:0	5	VLC_SUCCESS
water	24:4	0:0	4	}
else	25:4	35:4	2
stmts	26:4	35:4	3	
water	26:4	0:0	4	{
decl	27:8	27:24	4	block_t	*p_block
water	28:8	0:0	4	p_block
op	28:16	0:0	4	=
call	28:18	28:72	4	id->p_encoder->pf_encode_sub
arg	28:48	28:61	5	id->p_encoder
water	28:48	0:0	6	id
op	28:50	0:0	6	->
water	28:52	0:0	6	p_encoder
arg	28:63	28:72	5	p_subpic
water	28:63	0:0	6	p_subpic
water	28:73	0:0	4	;
call	29:8	29:48	4	spu_del_buffer
arg	29:24	29:37	5	id->p_decoder
water	29:24	0:0	6	id
op	29:26	0:0	6	->
water	29:28	0:0	6	p_decoder
arg	29:39	29:48	5	p_subpic
water	29:39	0:0	6	p_subpic
water	29:49	0:0	4	;
if	30:8	34:8	4	(p_block)
cond	30:12	30:12	5	p_block
water	30:12	0:0	6	p_block
stmts	31:8	34:8	5	
water	31:8	0:0	6	{
call	32:12	32:44	6	block_ChainAppend
arg	32:31	32:34	7	out
water	32:31	0:0	8	out
arg	32:36	32:44	7	p_block
water	32:36	0:0	8	p_block
water	32:45	0:0	6	;
return	33:12	33:30	6	VLC_SUCCESS
water	33:19	0:0	7	VLC_SUCCESS
water	34:8	0:0	6	}
water	35:4	0:0	4	}
return	36:4	36:23	2	VLC_EGENERIC
water	36:11	0:0	3	VLC_EGENERIC

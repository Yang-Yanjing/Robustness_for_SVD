func	2:0	35:0	0	subpicture_t *	subpicture_New
params	2:28	0:0	1	
param	2:30	2:64	2	const subpicture_updater_t *	p_upd
stmnts	0:0	34:19	1	
decl	4:4	4:59	2	subpicture_t	*p_subpic
op	4:27	0:0	2	=
call	4:29	4:58	3	calloc
arg	4:37	4:38	4	1
water	4:37	0:0	5	1
arg	4:40	4:58	4	sizeof(*p_subpic)
op	4:40	0:0	5	sizeof
water	4:46	0:0	5	(
op	4:47	0:0	5	*
water	4:48	0:0	5	p_subpic
water	4:56	0:0	5	)
if	5:4	6:19	2	(! p_subpic)
cond	5:8	5:9	3	! p_subpic
op	5:8	0:0	4	!
water	5:9	0:0	4	p_subpic
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
water	7:4	0:0	2	p_subpic
op	7:12	0:0	2	->
water	7:14	0:0	2	i_order
op	7:25	0:0	2	=
water	7:27	0:0	2	0
water	7:28	0:0	2	;
water	8:4	0:0	2	p_subpic
op	8:12	0:0	2	->
water	8:14	0:0	2	b_absolute
op	8:25	0:0	2	=
water	8:27	0:0	2	true
water	8:31	0:0	2	;
water	9:4	0:0	2	p_subpic
op	9:12	0:0	2	->
water	9:14	0:0	2	b_fade
op	9:25	0:0	2	=
water	9:27	0:0	2	false
water	9:32	0:0	2	;
water	10:4	0:0	2	p_subpic
op	10:12	0:0	2	->
water	10:14	0:0	2	b_subtitle
op	10:25	0:0	2	=
water	10:27	0:0	2	false
water	10:32	0:0	2	;
water	11:4	0:0	2	p_subpic
op	11:12	0:0	2	->
water	11:14	0:0	2	i_alpha
op	11:25	0:0	2	=
water	11:27	0:0	2	0
water	11:28	0:0	2	xFF
water	11:31	0:0	2	;
water	12:4	0:0	2	p_subpic
op	12:12	0:0	2	->
water	12:14	0:0	2	p_region
op	12:25	0:0	2	=
water	12:27	0:0	2	NULL
water	12:31	0:0	2	;
if	13:4	25:4	2	(p_upd)
cond	13:8	13:8	3	p_upd
water	13:8	0:0	4	p_upd
stmts	14:4	25:4	3	
water	14:4	0:0	4	{
decl	15:8	15:70	4	subpicture_private_t	*p_private
op	15:40	0:0	4	=
call	15:42	15:69	5	malloc
arg	15:50	15:69	6	sizeof(*p_private)
op	15:50	0:0	7	sizeof
water	15:56	0:0	7	(
op	15:57	0:0	7	*
water	15:58	0:0	7	p_private
water	15:67	0:0	7	)
if	16:8	20:8	4	(! p_private)
cond	16:12	16:13	5	! p_private
op	16:12	0:0	6	!
water	16:13	0:0	6	p_private
stmts	17:8	20:8	5	
water	17:8	0:0	6	{
call	18:12	18:27	6	free
arg	18:18	18:27	7	p_subpic
water	18:18	0:0	8	p_subpic
water	18:28	0:0	6	;
return	19:12	19:23	6	NULL
water	19:19	0:0	7	NULL
water	20:8	0:0	6	}
call	21:8	21:46	4	video_format_Init
arg	21:27	21:42	5	&p_private->src
op	21:27	0:0	6	&
water	21:28	0:0	6	p_private
op	21:37	0:0	6	->
water	21:39	0:0	6	src
arg	21:44	21:46	5	0
water	21:44	0:0	6	0
water	21:47	0:0	4	;
call	22:8	22:46	4	video_format_Init
arg	22:27	22:42	5	&p_private->dst
op	22:27	0:0	6	&
water	22:28	0:0	6	p_private
op	22:37	0:0	6	->
water	22:39	0:0	6	dst
arg	22:44	22:46	5	0
water	22:44	0:0	6	0
water	22:47	0:0	4	;
water	23:8	0:0	4	p_subpic
op	23:16	0:0	4	->
water	23:18	0:0	4	updater
op	23:28	0:0	4	=
op	23:30	0:0	4	*
water	23:31	0:0	4	p_upd
water	23:36	0:0	4	;
water	24:8	0:0	4	p_subpic
op	24:16	0:0	4	->
water	24:18	0:0	4	p_private
op	24:28	0:0	4	=
water	24:30	0:0	4	p_private
water	24:39	0:0	4	;
water	25:4	0:0	4	}
else	26:4	33:4	2
stmts	27:4	33:4	3	
water	27:4	0:0	4	{
water	28:8	0:0	4	p_subpic
op	28:16	0:0	4	->
water	28:18	0:0	4	p_private
op	28:28	0:0	4	=
water	28:30	0:0	4	NULL
water	28:34	0:0	4	;
water	29:8	0:0	4	p_subpic
op	29:16	0:0	4	->
water	29:18	0:0	4	updater
op	29:25	0:0	4	.
water	29:26	0:0	4	pf_validate
op	29:38	0:0	4	=
water	29:40	0:0	4	NULL
water	29:44	0:0	4	;
water	30:8	0:0	4	p_subpic
op	30:16	0:0	4	->
water	30:18	0:0	4	updater
op	30:25	0:0	4	.
water	30:26	0:0	4	pf_update
op	30:38	0:0	4	=
water	30:40	0:0	4	NULL
water	30:44	0:0	4	;
water	31:8	0:0	4	p_subpic
op	31:16	0:0	4	->
water	31:18	0:0	4	updater
op	31:25	0:0	4	.
water	31:26	0:0	4	pf_destroy
op	31:38	0:0	4	=
water	31:40	0:0	4	NULL
water	31:44	0:0	4	;
water	32:8	0:0	4	p_subpic
op	32:16	0:0	4	->
water	32:18	0:0	4	updater
op	32:25	0:0	4	.
water	32:26	0:0	4	p_sys
op	32:38	0:0	4	=
water	32:40	0:0	4	NULL
water	32:44	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:19	2	p_subpic
water	34:11	0:0	3	p_subpic

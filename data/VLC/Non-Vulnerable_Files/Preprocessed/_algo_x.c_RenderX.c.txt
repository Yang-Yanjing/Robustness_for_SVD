func	2:0	48:0	0	void	RenderX
params	2:12	0:0	1	
param	2:14	2:33	2	picture_t *	p_outpic
param	2:35	2:52	2	picture_t *	p_pic
stmnts	0:0	46:14	1	
decl	4:4	4:15	2	int	i_plane
decl	6:4	6:40	2	const bool	mmxext
op	6:22	0:0	2	=
call	6:24	6:39	3	vlc_CPU_MMXEXT
for	9:4	43:4	2	(i_plane = 0 ;i_plane < p_pic -> i_planes;i_plane ++)
forinit	9:9	9:21	3	i_plane = 0 ;
water	9:9	0:0	4	i_plane
op	9:17	0:0	4	=
water	9:19	0:0	4	0
water	9:21	0:0	4	;
cond	9:23	9:40	3	i_plane < p_pic -> i_planes
water	9:23	0:0	4	i_plane
op	9:31	0:0	4	<
water	9:33	0:0	4	p_pic
op	9:38	0:0	4	->
water	9:40	0:0	4	i_planes
forexpr	9:51	9:58	3	i_plane ++
water	9:51	0:0	4	i_plane
op	9:58	0:0	4	++
stmts	10:4	43:4	3	
water	10:4	0:0	4	{
decl	11:8	11:76	4	const int	i_mby
op	11:24	0:0	4	=
water	11:26	0:0	4	(
water	11:28	0:0	4	p_outpic
op	11:36	0:0	4	->
water	11:38	0:0	4	p
op	11:39	0:0	4	[
water	11:40	0:0	4	i_plane
op	11:47	0:0	4	]
op	11:48	0:0	4	.
water	11:49	0:0	4	i_visible_lines
op	11:65	0:0	4	+
water	11:67	0:0	4	7
water	11:69	0:0	4	)
op	11:70	0:0	4	/
water	11:71	0:0	4	8
op	11:73	0:0	4	-
water	11:75	0:0	4	1
decl	12:8	12:64	4	const int	i_mbx
op	12:24	0:0	4	=
water	12:26	0:0	4	p_outpic
op	12:34	0:0	4	->
water	12:36	0:0	4	p
op	12:37	0:0	4	[
water	12:38	0:0	4	i_plane
op	12:45	0:0	4	]
op	12:46	0:0	4	.
water	12:47	0:0	4	i_visible_pitch
op	12:62	0:0	4	/
water	12:63	0:0	4	8
decl	13:8	13:73	4	const int	i_mody
op	13:25	0:0	4	=
water	13:27	0:0	4	p_outpic
op	13:35	0:0	4	->
water	13:37	0:0	4	p
op	13:38	0:0	4	[
water	13:39	0:0	4	i_plane
op	13:46	0:0	4	]
op	13:47	0:0	4	.
water	13:48	0:0	4	i_visible_lines
op	13:64	0:0	4	-
water	13:66	0:0	4	8
op	13:67	0:0	4	*
water	13:68	0:0	4	i_mby
decl	14:8	14:73	4	const int	i_modx
op	14:25	0:0	4	=
water	14:27	0:0	4	p_outpic
op	14:35	0:0	4	->
water	14:37	0:0	4	p
op	14:38	0:0	4	[
water	14:39	0:0	4	i_plane
op	14:46	0:0	4	]
op	14:47	0:0	4	.
water	14:48	0:0	4	i_visible_pitch
op	14:64	0:0	4	-
water	14:66	0:0	4	8
op	14:67	0:0	4	*
water	14:68	0:0	4	i_mbx
decl	15:8	15:54	4	const int	i_dst
op	15:24	0:0	4	=
water	15:26	0:0	4	p_outpic
op	15:34	0:0	4	->
water	15:36	0:0	4	p
op	15:37	0:0	4	[
water	15:38	0:0	4	i_plane
op	15:45	0:0	4	]
op	15:46	0:0	4	.
water	15:47	0:0	4	i_pitch
decl	16:8	16:51	4	const int	i_src
op	16:24	0:0	4	=
water	16:26	0:0	4	p_pic
op	16:31	0:0	4	->
water	16:33	0:0	4	p
op	16:34	0:0	4	[
water	16:35	0:0	4	i_plane
op	16:42	0:0	4	]
op	16:43	0:0	4	.
water	16:44	0:0	4	i_pitch
decl	17:8	17:16	4	int	y
water	17:13	0:0	4	,
decl	17:8	17:16	4	int	x
for	18:8	28:8	4	(y = 0 ;y < i_mby;y ++)
forinit	18:13	18:18	5	y = 0 ;
water	18:13	0:0	6	y
op	18:15	0:0	6	=
water	18:17	0:0	6	0
water	18:18	0:0	6	;
cond	18:20	18:24	5	y < i_mby
water	18:20	0:0	6	y
op	18:22	0:0	6	<
water	18:24	0:0	6	i_mby
forexpr	18:31	18:32	5	y ++
water	18:31	0:0	6	y
op	18:32	0:0	6	++
stmts	19:8	28:8	5	
water	19:8	0:0	6	{
decl	20:12	20:68	6	uint8_t	*dst
op	20:25	0:0	6	=
op	20:27	0:0	6	&
water	20:28	0:0	6	p_outpic
op	20:36	0:0	6	->
water	20:38	0:0	6	p
op	20:39	0:0	6	[
water	20:40	0:0	6	i_plane
op	20:47	0:0	6	]
op	20:48	0:0	6	.
water	20:49	0:0	6	p_pixels
op	20:57	0:0	6	[
water	20:58	0:0	6	8
op	20:59	0:0	6	*
water	20:60	0:0	6	y
op	20:61	0:0	6	*
water	20:62	0:0	6	i_dst
op	20:67	0:0	6	]
decl	21:12	21:65	6	uint8_t	*src
op	21:25	0:0	6	=
op	21:27	0:0	6	&
water	21:28	0:0	6	p_pic
op	21:33	0:0	6	->
water	21:35	0:0	6	p
op	21:36	0:0	6	[
water	21:37	0:0	6	i_plane
op	21:44	0:0	6	]
op	21:45	0:0	6	.
water	21:46	0:0	6	p_pixels
op	21:54	0:0	6	[
water	21:55	0:0	6	8
op	21:56	0:0	6	*
water	21:57	0:0	6	y
op	21:58	0:0	6	*
water	21:59	0:0	6	i_src
op	21:64	0:0	6	]
if	23:12	24:76	6	(mmxext)
cond	23:16	23:16	7	mmxext
water	23:16	0:0	8	mmxext
stmts	24:16	24:76	7	
call	24:16	24:75	8	XDeintBand8x8MMXEXT
arg	24:37	24:40	9	dst
water	24:37	0:0	10	dst
arg	24:42	24:47	9	i_dst
water	24:42	0:0	10	i_dst
arg	24:49	24:52	9	src
water	24:49	0:0	10	src
arg	24:54	24:59	9	i_src
water	24:54	0:0	10	i_src
arg	24:61	24:66	9	i_mbx
water	24:61	0:0	10	i_mbx
arg	24:68	24:75	9	i_modx
water	24:68	0:0	10	i_modx
water	24:76	0:0	8	;
else	25:12	27:71	6
stmts	27:16	27:71	7	
call	27:16	27:70	8	XDeintBand8x8C
arg	27:32	27:35	9	dst
water	27:32	0:0	10	dst
arg	27:37	27:42	9	i_dst
water	27:37	0:0	10	i_dst
arg	27:44	27:47	9	src
water	27:44	0:0	10	src
arg	27:49	27:54	9	i_src
water	27:49	0:0	10	i_src
arg	27:56	27:61	9	i_mbx
water	27:56	0:0	10	i_mbx
arg	27:63	27:70	9	i_modx
water	27:63	0:0	10	i_modx
water	27:71	0:0	8	;
water	28:8	0:0	6	}
if	30:8	42:8	4	(i_mody)
cond	30:12	30:12	5	i_mody
water	30:12	0:0	6	i_mody
stmts	31:8	42:8	5	
water	31:8	0:0	6	{
decl	32:12	32:68	6	uint8_t	*dst
op	32:25	0:0	6	=
op	32:27	0:0	6	&
water	32:28	0:0	6	p_outpic
op	32:36	0:0	6	->
water	32:38	0:0	6	p
op	32:39	0:0	6	[
water	32:40	0:0	6	i_plane
op	32:47	0:0	6	]
op	32:48	0:0	6	.
water	32:49	0:0	6	p_pixels
op	32:57	0:0	6	[
water	32:58	0:0	6	8
op	32:59	0:0	6	*
water	32:60	0:0	6	y
op	32:61	0:0	6	*
water	32:62	0:0	6	i_dst
op	32:67	0:0	6	]
decl	33:12	33:65	6	uint8_t	*src
op	33:25	0:0	6	=
op	33:27	0:0	6	&
water	33:28	0:0	6	p_pic
op	33:33	0:0	6	->
water	33:35	0:0	6	p
op	33:36	0:0	6	[
water	33:37	0:0	6	i_plane
op	33:44	0:0	6	]
op	33:45	0:0	6	.
water	33:46	0:0	6	p_pixels
op	33:54	0:0	6	[
water	33:55	0:0	6	8
op	33:56	0:0	6	*
water	33:57	0:0	6	y
op	33:58	0:0	6	*
water	33:59	0:0	6	i_src
op	33:64	0:0	6	]
for	34:12	39:12	6	(x = 0 ;x < i_mbx;x ++)
forinit	34:17	34:22	7	x = 0 ;
water	34:17	0:0	8	x
op	34:19	0:0	8	=
water	34:21	0:0	8	0
water	34:22	0:0	8	;
cond	34:24	34:28	7	x < i_mbx
water	34:24	0:0	8	x
op	34:26	0:0	8	<
water	34:28	0:0	8	i_mbx
forexpr	34:35	34:36	7	x ++
water	34:35	0:0	8	x
op	34:36	0:0	8	++
stmts	35:12	39:12	7	
water	35:12	0:0	8	{
call	36:16	36:61	8	XDeintNxN
arg	36:27	36:30	9	dst
water	36:27	0:0	10	dst
arg	36:32	36:37	9	i_dst
water	36:32	0:0	10	i_dst
arg	36:39	36:42	9	src
water	36:39	0:0	10	src
arg	36:44	36:49	9	i_src
water	36:44	0:0	10	i_src
arg	36:51	36:52	9	8
water	36:51	0:0	10	8
arg	36:54	36:61	9	i_mody
water	36:54	0:0	10	i_mody
water	36:62	0:0	8	;
water	37:16	0:0	8	dst
op	37:20	0:0	8	+=
water	37:23	0:0	8	8
water	37:24	0:0	8	;
water	38:16	0:0	8	src
op	38:20	0:0	8	+=
water	38:23	0:0	8	8
water	38:24	0:0	8	;
water	39:12	0:0	8	}
if	40:12	41:67	6	(i_modx)
cond	40:16	40:16	7	i_modx
water	40:16	0:0	8	i_modx
stmts	41:16	41:67	7	
call	41:16	41:66	8	XDeintNxN
arg	41:27	41:30	9	dst
water	41:27	0:0	10	dst
arg	41:32	41:37	9	i_dst
water	41:32	0:0	10	i_dst
arg	41:39	41:42	9	src
water	41:39	0:0	10	src
arg	41:44	41:49	9	i_src
water	41:44	0:0	10	i_src
arg	41:51	41:57	9	i_modx
water	41:51	0:0	10	i_modx
arg	41:59	41:66	9	i_mody
water	41:59	0:0	10	i_mody
water	41:67	0:0	8	;
water	42:8	0:0	6	}
water	43:4	0:0	4	}
if	45:4	46:14	2	(mmxext)
cond	45:8	45:8	3	mmxext
water	45:8	0:0	4	mmxext
stmts	46:8	46:14	3	
call	46:8	46:13	4	emms
water	46:14	0:0	4	;

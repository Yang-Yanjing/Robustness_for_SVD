func	2:0	65:0	0	static void	dvbsub_pdata4bpp
params	2:28	0:0	1	
param	2:30	2:37	2	bs_t *	s
param	2:39	2:49	2	uint8_t *	p
param	2:51	2:62	2	int	i_width
param	2:64	2:76	2	int *	pi_off
stmnts	0:0	64:17	1	
decl	4:4	4:23	2	bool	b_stop
op	4:16	0:0	2	=
water	4:18	0:0	2	false
while	5:4	63:4	2	(! b_stop && !bs_eof (s ))
cond	5:11	5:33	3	! b_stop && !bs_eof (s )
op	5:11	0:0	4	!
water	5:12	0:0	4	b_stop
op	5:19	0:0	4	&&
op	5:22	0:0	4	!
call	5:23	5:33	4	bs_eof
arg	5:31	5:33	5	s
water	5:31	0:0	6	s
stmts	6:4	63:4	3	
water	6:4	0:0	4	{
decl	7:8	7:36	4	int	i_count
op	7:20	0:0	4	=
water	7:22	0:0	4	0
water	7:23	0:0	4	,
decl	7:8	7:36	4	int	i_color
op	7:33	0:0	4	=
water	7:35	0:0	4	0
water	8:8	0:0	4	i_color
op	8:16	0:0	4	=
call	8:18	8:32	4	bs_read
arg	8:27	8:28	5	s
water	8:27	0:0	6	s
arg	8:30	8:32	5	4
water	8:30	0:0	6	4
water	8:33	0:0	4	;
if	9:8	13:8	4	(i_color != 0 x00)
cond	9:12	9:24	5	i_color != 0 x00
water	9:12	0:0	6	i_color
op	9:20	0:0	6	!=
water	9:23	0:0	6	0
water	9:24	0:0	6	x00
stmts	10:8	13:8	5	
water	10:8	0:0	6	{
water	12:12	0:0	6	i_count
op	12:20	0:0	6	=
water	12:22	0:0	6	1
water	12:23	0:0	6	;
water	13:8	0:0	6	}
else	14:8	56:8	4
stmts	15:8	56:8	5	
water	15:8	0:0	6	{
if	16:12	27:12	6	(bs_read (s ,1 ) == 0 x00)
cond	16:16	16:36	7	bs_read (s ,1 ) == 0 x00
call	16:16	16:30	8	bs_read
arg	16:25	16:26	9	s
water	16:25	0:0	10	s
arg	16:28	16:30	9	1
water	16:28	0:0	10	1
op	16:32	0:0	8	==
water	16:35	0:0	8	0
water	16:36	0:0	8	x00
stmts	17:12	27:12	7	
water	17:12	0:0	8	{
if	18:16	21:16	8	(bs_show (s ,3 ) != 0 x00)
cond	18:20	18:40	9	bs_show (s ,3 ) != 0 x00
call	18:20	18:34	10	bs_show
arg	18:29	18:30	11	s
water	18:29	0:0	12	s
arg	18:32	18:34	11	3
water	18:32	0:0	12	3
op	18:36	0:0	10	!=
water	18:39	0:0	10	0
water	18:40	0:0	10	x00
stmts	19:16	21:16	9	
water	19:16	0:0	10	{
water	20:20	0:0	10	i_count
op	20:28	0:0	10	=
water	20:30	0:0	10	2
op	20:32	0:0	10	+
call	20:34	20:48	10	bs_read
arg	20:43	20:44	11	s
water	20:43	0:0	12	s
arg	20:46	20:48	11	3
water	20:46	0:0	12	3
water	20:49	0:0	10	;
water	21:16	0:0	10	}
else	22:16	26:16	8
stmts	23:16	26:16	9	
water	23:16	0:0	10	{
call	24:20	24:34	10	bs_skip
arg	24:29	24:30	11	s
water	24:29	0:0	12	s
arg	24:32	24:34	11	3
water	24:32	0:0	12	3
water	24:35	0:0	10	;
water	25:20	0:0	10	b_stop
op	25:27	0:0	10	=
water	25:29	0:0	10	true
water	25:33	0:0	10	;
water	26:16	0:0	10	}
water	27:12	0:0	8	}
else	28:12	55:12	6
stmts	29:12	55:12	7	
water	29:12	0:0	8	{
if	30:16	34:16	8	(bs_read (s ,1 ) == 0 x00)
cond	30:20	30:40	9	bs_read (s ,1 ) == 0 x00
call	30:20	30:34	10	bs_read
arg	30:29	30:30	11	s
water	30:29	0:0	12	s
arg	30:32	30:34	11	1
water	30:32	0:0	12	1
op	30:36	0:0	10	==
water	30:39	0:0	10	0
water	30:40	0:0	10	x00
stmts	31:16	34:16	9	
water	31:16	0:0	10	{
water	32:20	0:0	10	i_count
op	32:28	0:0	10	=
water	32:31	0:0	10	4
op	32:33	0:0	10	+
call	32:35	32:49	10	bs_read
arg	32:44	32:45	11	s
water	32:44	0:0	12	s
arg	32:47	32:49	11	2
water	32:47	0:0	12	2
water	32:50	0:0	10	;
water	33:20	0:0	10	i_color
op	33:28	0:0	10	=
call	33:30	33:44	10	bs_read
arg	33:39	33:40	11	s
water	33:39	0:0	12	s
arg	33:42	33:44	11	4
water	33:42	0:0	12	4
water	33:45	0:0	10	;
water	34:16	0:0	10	}
else	35:16	54:16	8
stmts	36:16	54:16	9	
water	36:16	0:0	10	{
switch	37:20	53:20	10	(bs_read (s ,2 ))
cond	37:29	37:43	11	bs_read (s ,2 )
call	37:29	37:43	12	bs_read
arg	37:38	37:39	13	s
water	37:38	0:0	14	s
arg	37:41	37:43	13	2
water	37:41	0:0	14	2
stmts	38:20	53:20	11	
water	38:20	0:0	12	{
label	39:20	39:28	12	case 0 x0 :
water	40:24	0:0	12	i_count
op	40:32	0:0	12	=
water	40:34	0:0	12	1
water	40:35	0:0	12	;
break	41:24	41:29	12	
label	42:20	42:28	12	case 0 x1 :
water	43:24	0:0	12	i_count
op	43:32	0:0	12	=
water	43:34	0:0	12	2
water	43:35	0:0	12	;
break	44:24	44:29	12	
label	45:20	45:28	12	case 0 x2 :
water	46:24	0:0	12	i_count
op	46:32	0:0	12	=
water	46:34	0:0	12	9
op	46:36	0:0	12	+
call	46:38	46:52	12	bs_read
arg	46:47	46:48	13	s
water	46:47	0:0	14	s
arg	46:50	46:52	13	4
water	46:50	0:0	14	4
water	46:53	0:0	12	;
water	47:24	0:0	12	i_color
op	47:32	0:0	12	=
call	47:34	47:48	12	bs_read
arg	47:43	47:44	13	s
water	47:43	0:0	14	s
arg	47:46	47:48	13	4
water	47:46	0:0	14	4
water	47:49	0:0	12	;
break	48:24	48:29	12	
label	49:20	49:28	12	case 0 x3 :
water	50:24	0:0	12	i_count
op	50:31	0:0	12	=
water	50:33	0:0	12	25
op	50:36	0:0	12	+
call	50:38	50:52	12	bs_read
arg	50:47	50:48	13	s
water	50:47	0:0	14	s
arg	50:50	50:52	13	8
water	50:50	0:0	14	8
water	50:53	0:0	12	;
water	51:24	0:0	12	i_color
op	51:32	0:0	12	=
call	51:34	51:48	12	bs_read
arg	51:43	51:44	13	s
water	51:43	0:0	14	s
arg	51:46	51:48	13	4
water	51:46	0:0	14	4
water	51:49	0:0	12	;
break	52:24	52:29	12	
water	53:20	0:0	12	}
water	54:16	0:0	10	}
water	55:12	0:0	8	}
water	56:8	0:0	6	}
if	57:8	57:31	4	(! i_count)
cond	57:12	57:13	5	! i_count
op	57:12	0:0	6	!
water	57:13	0:0	6	i_count
stmts	57:23	57:31	5	
continue	57:23	57:31	6	
if	59:8	59:51	4	(( i_count + * pi_off ) > i_width)
cond	59:12	59:36	5	( i_count + * pi_off ) > i_width
water	59:12	0:0	6	(
water	59:14	0:0	6	i_count
op	59:22	0:0	6	+
op	59:24	0:0	6	*
water	59:25	0:0	6	pi_off
water	59:32	0:0	6	)
op	59:34	0:0	6	>
water	59:36	0:0	6	i_width
stmts	59:46	59:51	5	
break	59:46	59:51	6	
if	60:8	60:47	4	(i_count == 1)
cond	60:12	60:23	5	i_count == 1
water	60:12	0:0	6	i_count
op	60:20	0:0	6	==
water	60:23	0:0	6	1
stmts	60:27	60:47	5	
water	60:27	0:0	6	p
op	60:28	0:0	6	[
op	60:29	0:0	6	*
water	60:30	0:0	6	pi_off
op	60:36	0:0	6	]
op	60:38	0:0	6	=
water	60:40	0:0	6	i_color
water	60:47	0:0	6	;
else	61:8	61:56	4
stmts	61:13	61:56	5	
call	61:13	61:55	6	memset
arg	61:21	61:36	7	(p+*pi_off)
water	61:21	0:0	8	(
water	61:23	0:0	8	p
op	61:25	0:0	8	+
op	61:27	0:0	8	*
water	61:28	0:0	8	pi_off
water	61:35	0:0	8	)
arg	61:38	61:45	7	i_color
water	61:38	0:0	8	i_color
arg	61:47	61:55	7	i_count
water	61:47	0:0	8	i_count
water	61:56	0:0	6	;
water	62:8	0:0	4	(
op	62:9	0:0	4	*
water	62:10	0:0	4	pi_off
water	62:16	0:0	4	)
op	62:18	0:0	4	+=
water	62:21	0:0	4	i_count
water	62:28	0:0	4	;
water	63:4	0:0	4	}
call	64:4	64:16	2	bs_align
arg	64:14	64:16	3	s
water	64:14	0:0	4	s
water	64:17	0:0	2	;

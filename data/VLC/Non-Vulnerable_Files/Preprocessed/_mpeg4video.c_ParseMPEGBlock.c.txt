func	2:0	64:0	0	static block_t *	ParseMPEGBlock
params	2:30	0:0	1	
param	2:32	2:48	2	decoder_t *	p_dec
param	2:50	2:66	2	block_t *	p_frag
stmnts	0:0	63:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:25	2	block_t	*p_pic
op	5:19	0:0	2	=
water	5:21	0:0	2	NULL
if	6:4	17:4	2	(p_frag -> p_buffer [ 3 ] == 0 xB0 || p_frag -> p_buffer [ 3 ] == 0 xB1 || p_frag -> p_buffer [ 3 ] == 0 xB2)
cond	6:8	6:94	3	p_frag -> p_buffer [ 3 ] == 0 xB0 || p_frag -> p_buffer [ 3 ] == 0 xB1 || p_frag -> p_buffer [ 3 ] == 0 xB2
water	6:8	0:0	4	p_frag
op	6:14	0:0	4	->
water	6:16	0:0	4	p_buffer
op	6:24	0:0	4	[
water	6:25	0:0	4	3
op	6:26	0:0	4	]
op	6:28	0:0	4	==
water	6:31	0:0	4	0
water	6:32	0:0	4	xB0
op	6:36	0:0	4	||
water	6:39	0:0	4	p_frag
op	6:45	0:0	4	->
water	6:47	0:0	4	p_buffer
op	6:55	0:0	4	[
water	6:56	0:0	4	3
op	6:57	0:0	4	]
op	6:59	0:0	4	==
water	6:62	0:0	4	0
water	6:63	0:0	4	xB1
op	6:67	0:0	4	||
water	6:70	0:0	4	p_frag
op	6:76	0:0	4	->
water	6:78	0:0	4	p_buffer
op	6:86	0:0	4	[
water	6:87	0:0	4	3
op	6:88	0:0	4	]
op	6:90	0:0	4	==
water	6:93	0:0	4	0
water	6:94	0:0	4	xB2
stmts	7:4	17:4	3	
water	7:4	0:0	4	{
call	10:8	10:30	4	block_Release
arg	10:23	10:30	5	p_frag
water	10:23	0:0	6	p_frag
water	10:31	0:0	4	;
call	14:8	14:55	4	block_ChainLastAppend
arg	14:31	14:46	5	&p_sys->pp_last
op	14:31	0:0	6	&
water	14:32	0:0	6	p_sys
op	14:37	0:0	6	->
water	14:39	0:0	6	pp_last
arg	14:48	14:55	5	p_frag
water	14:48	0:0	6	p_frag
water	14:56	0:0	4	;
return	16:8	16:19	4	NULL
water	16:15	0:0	5	NULL
water	17:4	0:0	4	}
if	18:4	39:4	2	(p_frag -> p_buffer [ 3 ] >= 0 x20 && p_frag -> p_buffer [ 3 ] <= 0 x2f)
cond	18:8	18:63	3	p_frag -> p_buffer [ 3 ] >= 0 x20 && p_frag -> p_buffer [ 3 ] <= 0 x2f
water	18:8	0:0	4	p_frag
op	18:14	0:0	4	->
water	18:16	0:0	4	p_buffer
op	18:24	0:0	4	[
water	18:25	0:0	4	3
op	18:26	0:0	4	]
op	18:28	0:0	4	>=
water	18:31	0:0	4	0
water	18:32	0:0	4	x20
op	18:36	0:0	4	&&
water	18:39	0:0	4	p_frag
op	18:45	0:0	4	->
water	18:47	0:0	4	p_buffer
op	18:55	0:0	4	[
water	18:56	0:0	4	3
op	18:57	0:0	4	]
op	18:59	0:0	4	<=
water	18:62	0:0	4	0
water	18:63	0:0	4	x2f
stmts	19:4	39:4	3	
water	19:4	0:0	4	{
if	21:8	26:8	4	(( size_t ) p_dec -> fmt_out . i_extra != p_frag -> i_buffer)
cond	21:12	21:54	5	( size_t ) p_dec -> fmt_out . i_extra != p_frag -> i_buffer
water	21:12	0:0	6	(
water	21:13	0:0	6	size_t
water	21:19	0:0	6	)
water	21:20	0:0	6	p_dec
op	21:25	0:0	6	->
water	21:27	0:0	6	fmt_out
op	21:34	0:0	6	.
water	21:35	0:0	6	i_extra
op	21:43	0:0	6	!=
water	21:46	0:0	6	p_frag
op	21:52	0:0	6	->
water	21:54	0:0	6	i_buffer
stmts	22:8	26:8	5	
water	22:8	0:0	6	{
water	23:12	0:0	6	p_dec
op	23:17	0:0	6	->
water	23:19	0:0	6	fmt_out
op	23:26	0:0	6	.
water	23:27	0:0	6	p_extra
op	23:35	0:0	6	=
call	24:16	24:67	6	xrealloc
arg	24:26	24:48	7	p_dec->fmt_out.p_extra
water	24:26	0:0	8	p_dec
op	24:31	0:0	8	->
water	24:33	0:0	8	fmt_out
op	24:40	0:0	8	.
water	24:41	0:0	8	p_extra
arg	24:50	24:67	7	p_frag->i_buffer
water	24:50	0:0	8	p_frag
op	24:56	0:0	8	->
water	24:58	0:0	8	i_buffer
water	24:68	0:0	6	;
water	25:12	0:0	6	p_dec
op	25:17	0:0	6	->
water	25:19	0:0	6	fmt_out
op	25:26	0:0	6	.
water	25:27	0:0	6	i_extra
op	25:35	0:0	6	=
water	25:37	0:0	6	p_frag
op	25:43	0:0	6	->
water	25:45	0:0	6	i_buffer
water	25:53	0:0	6	;
water	26:8	0:0	6	}
call	27:8	27:75	4	memcpy
arg	27:16	27:38	5	p_dec->fmt_out.p_extra
water	27:16	0:0	6	p_dec
op	27:21	0:0	6	->
water	27:23	0:0	6	fmt_out
op	27:30	0:0	6	.
water	27:31	0:0	6	p_extra
arg	27:40	27:56	5	p_frag->p_buffer
water	27:40	0:0	6	p_frag
op	27:46	0:0	6	->
water	27:48	0:0	6	p_buffer
arg	27:58	27:75	5	p_frag->i_buffer
water	27:58	0:0	6	p_frag
op	27:64	0:0	6	->
water	27:66	0:0	6	i_buffer
water	27:76	0:0	4	;
call	28:8	29:65	4	ParseVOL
arg	28:18	28:23	5	p_dec
water	28:18	0:0	6	p_dec
arg	28:25	28:40	5	&p_dec->fmt_out
op	28:25	0:0	6	&
water	28:26	0:0	6	p_dec
op	28:31	0:0	6	->
water	28:33	0:0	6	fmt_out
arg	29:18	29:40	5	p_dec->fmt_out.p_extra
water	29:18	0:0	6	p_dec
op	29:23	0:0	6	->
water	29:25	0:0	6	fmt_out
op	29:32	0:0	6	.
water	29:33	0:0	6	p_extra
arg	29:42	29:65	5	p_dec->fmt_out.i_extra
water	29:42	0:0	6	p_dec
op	29:47	0:0	6	->
water	29:49	0:0	6	fmt_out
op	29:56	0:0	6	.
water	29:57	0:0	6	i_extra
water	29:66	0:0	4	;
call	32:8	32:30	4	block_Release
arg	32:23	32:30	5	p_frag
water	32:23	0:0	6	p_frag
water	32:31	0:0	4	;
call	36:8	36:55	4	block_ChainLastAppend
arg	36:31	36:46	5	&p_sys->pp_last
op	36:31	0:0	6	&
water	36:32	0:0	6	p_sys
op	36:37	0:0	6	->
water	36:39	0:0	6	pp_last
arg	36:48	36:55	5	p_frag
water	36:48	0:0	6	p_frag
water	36:56	0:0	4	;
return	38:8	38:19	4	NULL
water	38:15	0:0	5	NULL
water	39:4	0:0	4	}
else	40:4	50:4	2
stmts	41:4	50:4	3	
water	41:4	0:0	4	{
if	42:8	47:8	4	(! p_dec -> fmt_out . i_extra)
cond	42:12	42:28	5	! p_dec -> fmt_out . i_extra
op	42:12	0:0	6	!
water	42:13	0:0	6	p_dec
op	42:18	0:0	6	->
water	42:20	0:0	6	fmt_out
op	42:27	0:0	6	.
water	42:28	0:0	6	i_extra
stmts	43:8	47:8	5	
water	43:8	0:0	6	{
call	44:12	44:47	6	msg_Warn
arg	44:22	44:27	7	p_dec
water	44:22	0:0	8	p_dec
arg	44:29	44:47	7	"waiting for VOL"
water	44:29	0:0	8	"waiting for VOL"
water	44:48	0:0	6	;
call	45:12	45:34	6	block_Release
arg	45:27	45:34	7	p_frag
water	45:27	0:0	8	p_frag
water	45:35	0:0	6	;
return	46:12	46:23	6	NULL
water	46:19	0:0	7	NULL
water	47:8	0:0	6	}
call	49:8	49:55	4	block_ChainLastAppend
arg	49:31	49:46	5	&p_sys->pp_last
op	49:31	0:0	6	&
water	49:32	0:0	6	p_sys
op	49:37	0:0	6	->
water	49:39	0:0	6	pp_last
arg	49:48	49:55	5	p_frag
water	49:48	0:0	6	p_frag
water	49:56	0:0	4	;
water	50:4	0:0	4	}
if	51:4	62:4	2	(p_frag -> p_buffer [ 3 ] == 0 xb6 &&ParseVOP (p_dec ,p_frag ) == VLC_SUCCESS)
cond	51:8	52:37	3	p_frag -> p_buffer [ 3 ] == 0 xb6 &&ParseVOP (p_dec ,p_frag ) == VLC_SUCCESS
water	51:8	0:0	4	p_frag
op	51:14	0:0	4	->
water	51:16	0:0	4	p_buffer
op	51:24	0:0	4	[
water	51:25	0:0	4	3
op	51:26	0:0	4	]
op	51:28	0:0	4	==
water	51:31	0:0	4	0
water	51:32	0:0	4	xb6
op	51:36	0:0	4	&&
call	52:8	52:32	4	ParseVOP
arg	52:18	52:23	5	p_dec
water	52:18	0:0	6	p_dec
arg	52:25	52:32	5	p_frag
water	52:25	0:0	6	p_frag
op	52:34	0:0	4	==
water	52:37	0:0	4	VLC_SUCCESS
stmts	53:4	62:4	3	
water	53:4	0:0	4	{
water	55:8	0:0	4	p_pic
op	55:14	0:0	4	=
call	55:16	55:50	4	block_ChainGather
arg	55:35	55:50	5	p_sys->p_frame
water	55:35	0:0	6	p_sys
op	55:40	0:0	6	->
water	55:42	0:0	6	p_frame
water	55:51	0:0	4	;
water	56:8	0:0	4	p_pic
op	56:13	0:0	4	->
water	56:15	0:0	4	i_flags
op	56:23	0:0	4	=
water	56:25	0:0	4	p_sys
op	56:30	0:0	4	->
water	56:32	0:0	4	i_flags
water	56:39	0:0	4	;
water	57:8	0:0	4	p_pic
op	57:13	0:0	4	->
water	57:15	0:0	4	i_pts
op	57:21	0:0	4	=
water	57:23	0:0	4	p_sys
op	57:28	0:0	4	->
water	57:30	0:0	4	i_interpolated_pts
water	57:48	0:0	4	;
water	58:8	0:0	4	p_pic
op	58:13	0:0	4	->
water	58:15	0:0	4	i_dts
op	58:21	0:0	4	=
water	58:23	0:0	4	p_sys
op	58:28	0:0	4	->
water	58:30	0:0	4	i_interpolated_dts
water	58:48	0:0	4	;
water	60:8	0:0	4	p_sys
op	60:13	0:0	4	->
water	60:15	0:0	4	p_frame
op	60:23	0:0	4	=
water	60:25	0:0	4	NULL
water	60:29	0:0	4	;
water	61:8	0:0	4	p_sys
op	61:13	0:0	4	->
water	61:15	0:0	4	pp_last
op	61:23	0:0	4	=
op	61:25	0:0	4	&
water	61:26	0:0	4	p_sys
op	61:31	0:0	4	->
water	61:33	0:0	4	p_frame
water	61:40	0:0	4	;
water	62:4	0:0	4	}
return	63:4	63:16	2	p_pic
water	63:11	0:0	3	p_pic

func	2:0	69:0	0	static int	EnumAdaptors
params	2:24	0:0	1	
param	2:25	2:42	2	vlc_object_t *	obj
param	2:44	2:59	2	const char *	var
param	3:25	3:37	2	int64_t * *	vp
param	3:39	3:49	2	char * * *	tp
stmnts	0:0	68:23	1	
decl	6:4	6:58	2	char	*display
op	6:18	0:0	2	=
call	6:20	6:57	3	var_InheritString
arg	6:39	6:42	4	obj
water	6:39	0:0	5	obj
arg	6:44	6:57	4	"x11-display"
water	6:44	0:0	5	"x11-display"
decl	7:4	7:26	2	xcb_connection_t	*conn
decl	8:4	8:12	2	int	snum
water	9:4	0:0	2	conn
op	9:9	0:0	2	=
call	9:11	9:38	2	xcb_connect
arg	9:24	9:31	3	display
water	9:24	0:0	4	display
arg	9:33	9:38	3	&snum
op	9:33	0:0	4	&
water	9:34	0:0	4	snum
water	9:39	0:0	2	;
call	10:4	10:17	2	free
arg	10:10	10:17	3	display
water	10:10	0:0	4	display
water	10:18	0:0	2	;
if	11:4	12:17	2	(xcb_connection_has_error (conn ))
cond	11:8	11:38	3	xcb_connection_has_error (conn )
call	11:8	11:38	4	xcb_connection_has_error
arg	11:34	11:38	5	conn
water	11:34	0:0	6	conn
stmts	12:8	12:17	3	
return	12:8	12:17	4	-1
op	12:15	0:0	5	-
water	12:16	0:0	5	1
decl	14:4	14:51	2	const xcb_setup_t	*setup
op	14:29	0:0	2	=
call	14:31	14:50	3	xcb_get_setup
arg	14:46	14:50	4	conn
water	14:46	0:0	5	conn
decl	15:4	15:34	2	const xcb_screen_t	*scr
op	15:28	0:0	2	=
water	15:30	0:0	2	NULL
for	16:4	25:4	2	( xcb_screen_iterator_t i =xcb_setup_roots_iterator (setup ) ;i . rem > 0;xcb_screen_next (& i ))
forinit	0:0	16:67	3	 xcb_screen_iterator_t i =xcb_setup_roots_iterator (setup ) ;
decl	16:9	16:67	4	xcb_screen_iterator_t	i
op	16:33	0:0	4	=
call	16:35	16:66	5	xcb_setup_roots_iterator
arg	16:61	16:66	6	setup
water	16:61	0:0	7	setup
cond	17:9	17:17	3	i . rem > 0
water	17:9	0:0	4	i
op	17:10	0:0	4	.
water	17:11	0:0	4	rem
op	17:15	0:0	4	>
water	17:17	0:0	4	0
forexpr	17:20	17:39	3	xcb_screen_next (& i )
call	17:20	17:39	4	xcb_screen_next
arg	17:37	17:39	5	&i
op	17:37	0:0	6	&
water	17:38	0:0	6	i
stmts	18:4	25:4	3	
water	18:4	0:0	4	{
if	19:8	23:8	4	(snum == 0)
cond	19:12	19:20	5	snum == 0
water	19:12	0:0	6	snum
op	19:17	0:0	6	==
water	19:20	0:0	6	0
stmts	20:8	23:8	5	
water	20:8	0:0	6	{
water	21:12	0:0	6	scr
op	21:16	0:0	6	=
water	21:18	0:0	6	i
op	21:19	0:0	6	.
water	21:20	0:0	6	data
water	21:24	0:0	6	;
break	22:12	22:17	6	
water	23:8	0:0	6	}
water	24:8	0:0	4	snum
op	24:12	0:0	4	--
water	24:14	0:0	4	;
water	25:4	0:0	4	}
if	26:4	30:4	2	(scr == NULL)
cond	26:8	26:15	3	scr == NULL
water	26:8	0:0	4	scr
op	26:12	0:0	4	==
water	26:15	0:0	4	NULL
stmts	27:4	30:4	3	
water	27:4	0:0	4	{
call	28:8	28:28	4	xcb_disconnect
arg	28:24	28:28	5	conn
water	28:24	0:0	6	conn
water	28:29	0:0	4	;
return	29:8	29:17	4	-1
op	29:15	0:0	5	-
water	29:16	0:0	5	1
water	30:4	0:0	4	}
decl	31:4	33:58	2	xcb_xv_query_adaptors_reply_t	*adaptors
op	31:44	0:0	2	=
call	32:8	33:57	3	xcb_xv_query_adaptors_reply
arg	32:37	32:41	4	conn
water	32:37	0:0	5	conn
arg	33:12	33:51	4	xcb_xv_query_adaptors(conn,scr->root)
call	33:12	33:50	5	xcb_xv_query_adaptors
arg	33:35	33:39	6	conn
water	33:35	0:0	7	conn
arg	33:41	33:50	6	scr->root
water	33:41	0:0	7	scr
op	33:44	0:0	7	->
water	33:46	0:0	7	root
arg	33:53	33:57	4	NULL
water	33:53	0:0	5	NULL
call	34:4	34:24	2	xcb_disconnect
arg	34:20	34:24	3	conn
water	34:20	0:0	4	conn
water	34:25	0:0	2	;
if	35:4	36:17	2	(adaptors == NULL)
cond	35:8	35:20	3	adaptors == NULL
water	35:8	0:0	4	adaptors
op	35:17	0:0	4	==
water	35:20	0:0	4	NULL
stmts	36:8	36:17	3	
return	36:8	36:17	4	-1
op	36:15	0:0	5	-
water	36:16	0:0	5	1
decl	37:4	37:37	2	xcb_xv_adaptor_info_iterator_t	it
decl	38:4	38:16	2	size_t	n
op	38:13	0:0	2	=
water	38:15	0:0	2	0
for	39:4	47:4	2	(it =xcb_xv_query_adaptors_info_iterator (adaptors ) ;it . rem > 0;xcb_xv_adaptor_info_next (& it ))
forinit	39:9	39:60	3	it =xcb_xv_query_adaptors_info_iterator (adaptors ) ;
water	39:9	0:0	4	it
op	39:12	0:0	4	=
call	39:14	39:59	4	xcb_xv_query_adaptors_info_iterator
arg	39:51	39:59	5	adaptors
water	39:51	0:0	6	adaptors
water	39:60	0:0	4	;
cond	40:9	40:18	3	it . rem > 0
water	40:9	0:0	4	it
op	40:11	0:0	4	.
water	40:12	0:0	4	rem
op	40:16	0:0	4	>
water	40:18	0:0	4	0
forexpr	41:9	41:38	3	xcb_xv_adaptor_info_next (& it )
call	41:9	41:38	4	xcb_xv_adaptor_info_next
arg	41:35	41:38	5	&it
op	41:35	0:0	6	&
water	41:36	0:0	6	it
stmts	42:4	47:4	3	
water	42:4	0:0	4	{
decl	43:8	43:48	4	const xcb_xv_adaptor_info_t	*a
op	43:39	0:0	4	=
water	43:41	0:0	4	it
op	43:43	0:0	4	.
water	43:44	0:0	4	data
if	44:8	46:15	4	(( a -> type & XCB_XV_TYPE_INPUT_MASK ) && ( a -> type & XCB_XV_TYPE_IMAGE_MASK ))
cond	44:12	45:45	5	( a -> type & XCB_XV_TYPE_INPUT_MASK ) && ( a -> type & XCB_XV_TYPE_IMAGE_MASK )
water	44:12	0:0	6	(
water	44:13	0:0	6	a
op	44:14	0:0	6	->
water	44:16	0:0	6	type
op	44:21	0:0	6	&
water	44:23	0:0	6	XCB_XV_TYPE_INPUT_MASK
water	44:45	0:0	6	)
op	45:9	0:0	6	&&
water	45:12	0:0	6	(
water	45:13	0:0	6	a
op	45:14	0:0	6	->
water	45:16	0:0	6	type
op	45:21	0:0	6	&
water	45:23	0:0	6	XCB_XV_TYPE_IMAGE_MASK
water	45:45	0:0	6	)
stmts	46:12	46:15	5	
water	46:12	0:0	6	n
op	46:13	0:0	6	++
water	46:15	0:0	6	;
water	47:4	0:0	4	}
decl	48:4	48:58	2	int64_t	*values
op	48:20	0:0	2	=
call	48:22	48:57	3	xmalloc
arg	48:31	48:57	4	(n+1)*sizeof(*values)
water	48:31	0:0	5	(
water	48:32	0:0	5	n
op	48:34	0:0	5	+
water	48:36	0:0	5	1
water	48:37	0:0	5	)
op	48:39	0:0	5	*
op	48:41	0:0	5	sizeof
water	48:48	0:0	5	(
op	48:49	0:0	5	*
water	48:50	0:0	5	values
water	48:56	0:0	5	)
decl	49:4	49:54	2	char	**texts
op	49:17	0:0	2	=
call	49:19	49:53	3	xmalloc
arg	49:28	49:53	4	(n+1)*sizeof(*texts)
water	49:28	0:0	5	(
water	49:29	0:0	5	n
op	49:31	0:0	5	+
water	49:33	0:0	5	1
water	49:34	0:0	5	)
op	49:36	0:0	5	*
op	49:38	0:0	5	sizeof
water	49:45	0:0	5	(
op	49:46	0:0	5	*
water	49:47	0:0	5	texts
water	49:52	0:0	5	)
op	50:4	0:0	2	*
water	50:5	0:0	2	vp
op	50:8	0:0	2	=
water	50:10	0:0	2	values
water	50:16	0:0	2	;
op	51:4	0:0	2	*
water	51:5	0:0	2	tp
op	51:8	0:0	2	=
water	51:10	0:0	2	texts
water	51:15	0:0	2	;
op	52:4	0:0	2	*
water	52:5	0:0	2	(
water	52:6	0:0	2	values
op	52:12	0:0	2	++
water	52:14	0:0	2	)
op	52:16	0:0	2	=
op	52:18	0:0	2	-
water	52:19	0:0	2	1
water	52:20	0:0	2	;
op	53:4	0:0	2	*
water	53:5	0:0	2	(
water	53:6	0:0	2	texts
op	53:11	0:0	2	++
water	53:13	0:0	2	)
op	53:15	0:0	2	=
call	53:17	53:35	2	strdup
arg	53:25	53:35	3	N_("Auto")
call	53:25	53:34	4	N_
arg	53:28	53:34	5	"Auto"
water	53:28	0:0	6	"Auto"
water	53:36	0:0	2	;
for	54:4	65:4	2	(it =xcb_xv_query_adaptors_info_iterator (adaptors ) , n = - 1 ;it . rem > 0;xcb_xv_adaptor_info_next (& it ))
forinit	54:9	54:68	3	it =xcb_xv_query_adaptors_info_iterator (adaptors ) , n = - 1 ;
water	54:9	0:0	4	it
op	54:12	0:0	4	=
call	54:14	54:59	4	xcb_xv_query_adaptors_info_iterator
arg	54:51	54:59	5	adaptors
water	54:51	0:0	6	adaptors
water	54:60	0:0	4	,
water	54:62	0:0	4	n
op	54:64	0:0	4	=
op	54:66	0:0	4	-
water	54:67	0:0	4	1
water	54:68	0:0	4	;
cond	55:9	55:18	3	it . rem > 0
water	55:9	0:0	4	it
op	55:11	0:0	4	.
water	55:12	0:0	4	rem
op	55:16	0:0	4	>
water	55:18	0:0	4	0
forexpr	56:9	56:38	3	xcb_xv_adaptor_info_next (& it )
call	56:9	56:38	4	xcb_xv_adaptor_info_next
arg	56:35	56:38	5	&it
op	56:35	0:0	6	&
water	56:36	0:0	6	it
stmts	57:4	65:4	3	
water	57:4	0:0	4	{
decl	58:8	58:48	4	const xcb_xv_adaptor_info_t	*a
op	58:39	0:0	4	=
water	58:41	0:0	4	it
op	58:43	0:0	4	.
water	58:44	0:0	4	data
water	59:8	0:0	4	n
op	59:9	0:0	4	++
water	59:11	0:0	4	;
if	60:8	62:20	4	(! ( a -> type & XCB_XV_TYPE_INPUT_MASK ) || ! ( a -> type & XCB_XV_TYPE_IMAGE_MASK ))
cond	60:12	61:46	5	! ( a -> type & XCB_XV_TYPE_INPUT_MASK ) || ! ( a -> type & XCB_XV_TYPE_IMAGE_MASK )
op	60:12	0:0	6	!
water	60:13	0:0	6	(
water	60:14	0:0	6	a
op	60:15	0:0	6	->
water	60:17	0:0	6	type
op	60:22	0:0	6	&
water	60:24	0:0	6	XCB_XV_TYPE_INPUT_MASK
water	60:46	0:0	6	)
op	61:9	0:0	6	||
op	61:12	0:0	6	!
water	61:13	0:0	6	(
water	61:14	0:0	6	a
op	61:15	0:0	6	->
water	61:17	0:0	6	type
op	61:22	0:0	6	&
water	61:24	0:0	6	XCB_XV_TYPE_IMAGE_MASK
water	61:46	0:0	6	)
stmts	62:12	62:20	5	
continue	62:12	62:20	6	
op	63:8	0:0	4	*
water	63:9	0:0	4	(
water	63:10	0:0	4	values
op	63:16	0:0	4	++
water	63:18	0:0	4	)
op	63:20	0:0	4	=
water	63:22	0:0	4	n
water	63:23	0:0	4	;
op	64:8	0:0	4	*
water	64:9	0:0	4	(
water	64:10	0:0	4	texts
op	64:15	0:0	4	++
water	64:17	0:0	4	)
op	64:19	0:0	4	=
call	64:21	64:72	4	strndup
arg	64:30	64:58	5	xcb_xv_adaptor_info_name(a)
call	64:30	64:57	6	xcb_xv_adaptor_info_name
arg	64:56	64:57	7	a
water	64:56	0:0	8	a
arg	64:60	64:72	5	a->name_size
water	64:60	0:0	6	a
op	64:61	0:0	6	->
water	64:63	0:0	6	name_size
water	64:73	0:0	4	;
water	65:4	0:0	4	}
call	66:4	66:18	2	free
arg	66:10	66:18	3	adaptors
water	66:10	0:0	4	adaptors
water	66:19	0:0	2	;
water	67:4	0:0	2	(
water	67:5	0:0	2	void
water	67:9	0:0	2	)
water	67:11	0:0	2	obj
water	67:14	0:0	2	;
water	67:16	0:0	2	(
water	67:17	0:0	2	void
water	67:21	0:0	2	)
water	67:23	0:0	2	var
water	67:26	0:0	2	;
return	68:4	68:23	2	values-*vp
water	68:11	0:0	3	values
op	68:18	0:0	3	-
op	68:20	0:0	3	*
water	68:21	0:0	3	vp

func	2:0	81:0	0	static int	Send
params	2:15	0:0	1	
param	2:17	2:40	2	sout_stream_t *	p_stream
param	2:42	2:66	2	sout_stream_id_sys_t *	id
param	3:17	3:35	2	block_t *	p_buffer
stmnts	0:0	80:22	1	
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
decl	6:4	6:20	2	picture_t	*p_pic
if	7:4	11:4	2	(( sout_stream_sys_t * ) id != p_sys)
cond	7:9	7:36	3	( sout_stream_sys_t * ) id != p_sys
water	7:9	0:0	4	(
water	7:10	0:0	4	sout_stream_sys_t
op	7:28	0:0	4	*
water	7:29	0:0	4	)
water	7:30	0:0	4	id
op	7:33	0:0	4	!=
water	7:36	0:0	4	p_sys
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
call	9:8	9:37	4	block_ChainRelease
arg	9:28	9:37	5	p_buffer
water	9:28	0:0	6	p_buffer
water	9:38	0:0	4	;
return	10:8	10:26	4	VLC_SUCCESS
water	10:15	0:0	5	VLC_SUCCESS
water	11:4	0:0	4	}
while	12:4	79:4	2	(( p_pic =p_sys -> p_decoder -> pf_decode_video (p_sys -> p_decoder ,& p_buffer ) ))
cond	12:12	13:67	3	( p_pic =p_sys -> p_decoder -> pf_decode_video (p_sys -> p_decoder ,& p_buffer ) )
water	12:12	0:0	4	(
water	12:13	0:0	4	p_pic
op	12:19	0:0	4	=
call	12:21	13:66	4	p_sys->p_decoder->pf_decode_video
arg	12:56	12:72	5	p_sys->p_decoder
water	12:56	0:0	6	p_sys
op	12:61	0:0	6	->
water	12:63	0:0	6	p_decoder
arg	13:56	13:66	5	&p_buffer
op	13:56	0:0	6	&
water	13:57	0:0	6	p_buffer
water	13:67	0:0	4	)
stmts	14:4	79:4	3	
water	14:4	0:0	4	{
decl	15:8	15:28	4	picture_t	*p_new_pic
if	16:8	59:8	4	(p_sys -> i_height || p_sys -> i_width)
cond	16:12	16:38	5	p_sys -> i_height || p_sys -> i_width
water	16:12	0:0	6	p_sys
op	16:17	0:0	6	->
water	16:19	0:0	6	i_height
op	16:28	0:0	6	||
water	16:31	0:0	6	p_sys
op	16:36	0:0	6	->
water	16:38	0:0	6	i_width
stmts	17:8	59:8	5	
water	17:8	0:0	6	{
decl	18:12	18:42	6	video_format_t	fmt_out
water	18:34	0:0	6	,
decl	18:12	18:42	6	video_format_t	fmt_in
call	19:12	19:55	6	memset
arg	19:20	19:27	7	&fmt_in
op	19:20	0:0	8	&
water	19:21	0:0	8	fmt_in
arg	19:29	19:30	7	0
water	19:29	0:0	8	0
arg	19:32	19:55	7	sizeof(video_format_t)
op	19:32	0:0	8	sizeof
water	19:38	0:0	8	(
water	19:39	0:0	8	video_format_t
water	19:53	0:0	8	)
water	19:56	0:0	6	;
call	20:12	20:56	6	memset
arg	20:20	20:28	7	&fmt_out
op	20:20	0:0	8	&
water	20:21	0:0	8	fmt_out
arg	20:30	20:31	7	0
water	20:30	0:0	8	0
arg	20:33	20:56	7	sizeof(video_format_t)
op	20:33	0:0	8	sizeof
water	20:39	0:0	8	(
water	20:40	0:0	8	video_format_t
water	20:54	0:0	8	)
water	20:57	0:0	6	;
water	21:12	0:0	6	fmt_in
op	21:19	0:0	6	=
water	21:21	0:0	6	p_sys
op	21:26	0:0	6	->
water	21:28	0:0	6	p_decoder
op	21:37	0:0	6	->
water	21:39	0:0	6	fmt_out
op	21:46	0:0	6	.
water	21:47	0:0	6	video
water	21:52	0:0	6	;
if	22:12	23:50	6	(p_sys -> i_chroma)
cond	22:16	22:23	7	p_sys -> i_chroma
water	22:16	0:0	8	p_sys
op	22:21	0:0	8	->
water	22:23	0:0	8	i_chroma
stmts	23:16	23:50	7	
water	23:16	0:0	8	fmt_out
op	23:23	0:0	8	.
water	23:24	0:0	8	i_chroma
op	23:33	0:0	8	=
water	23:35	0:0	8	p_sys
op	23:40	0:0	8	->
water	23:42	0:0	8	i_chroma
water	23:50	0:0	8	;
else	24:12	25:49	6
stmts	25:16	25:49	7	
water	25:16	0:0	8	fmt_out
op	25:23	0:0	8	.
water	25:24	0:0	8	i_chroma
op	25:33	0:0	8	=
water	25:35	0:0	8	VLC_CODEC_I420
water	25:49	0:0	8	;
water	26:12	0:0	6	const
water	26:18	0:0	6	unsigned
water	26:27	0:0	6	i_fmt_in_aspect
op	26:43	0:0	6	=
water	27:16	0:0	6	(
water	27:17	0:0	6	int64_t
water	27:24	0:0	6	)
water	27:25	0:0	6	VOUT_ASPECT_FACTOR
op	27:44	0:0	6	*
water	28:16	0:0	6	fmt_in
op	28:22	0:0	6	.
water	28:23	0:0	6	i_sar_num
op	28:33	0:0	6	*
water	28:35	0:0	6	fmt_in
op	28:41	0:0	6	.
water	28:42	0:0	6	i_width
op	28:50	0:0	6	/
water	29:16	0:0	6	(
water	29:17	0:0	6	fmt_in
op	29:23	0:0	6	.
water	29:24	0:0	6	i_sar_den
op	29:34	0:0	6	*
water	29:36	0:0	6	fmt_in
op	29:42	0:0	6	.
water	29:43	0:0	6	i_height
water	29:51	0:0	6	)
water	29:52	0:0	6	;
if	30:12	36:12	6	(! p_sys -> i_height)
cond	30:17	30:25	7	! p_sys -> i_height
op	30:17	0:0	8	!
water	30:18	0:0	8	p_sys
op	30:23	0:0	8	->
water	30:25	0:0	8	i_height
stmts	31:12	36:12	7	
water	31:12	0:0	8	{
water	32:16	0:0	8	fmt_out
op	32:23	0:0	8	.
water	32:24	0:0	8	i_width
op	32:32	0:0	8	=
water	32:34	0:0	8	p_sys
op	32:39	0:0	8	->
water	32:41	0:0	8	i_width
water	32:48	0:0	8	;
water	33:16	0:0	8	fmt_out
op	33:23	0:0	8	.
water	33:24	0:0	8	i_height
op	33:33	0:0	8	=
water	33:35	0:0	8	(
water	33:36	0:0	8	p_sys
op	33:41	0:0	8	->
water	33:43	0:0	8	i_width
op	33:51	0:0	8	*
water	33:53	0:0	8	VOUT_ASPECT_FACTOR
op	34:20	0:0	8	*
water	34:22	0:0	8	p_sys
op	34:27	0:0	8	->
water	34:29	0:0	8	i_sar_num
op	34:39	0:0	8	/
water	34:41	0:0	8	p_sys
op	34:46	0:0	8	->
water	34:48	0:0	8	i_sar_den
op	34:58	0:0	8	/
water	34:60	0:0	8	i_fmt_in_aspect
water	34:75	0:0	8	)
op	35:22	0:0	8	&
water	35:24	0:0	8	~0x1
water	35:28	0:0	8	;
water	36:12	0:0	8	}
else	37:12	43:12	6
stmts	37:17	43:12	7	
if	37:17	43:12	8	(! p_sys -> i_width)
cond	37:22	37:30	9	! p_sys -> i_width
op	37:22	0:0	10	!
water	37:23	0:0	10	p_sys
op	37:28	0:0	10	->
water	37:30	0:0	10	i_width
stmts	38:12	43:12	9	
water	38:12	0:0	10	{
water	39:16	0:0	10	fmt_out
op	39:23	0:0	10	.
water	39:24	0:0	10	i_height
op	39:33	0:0	10	=
water	39:35	0:0	10	p_sys
op	39:40	0:0	10	->
water	39:42	0:0	10	i_height
water	39:50	0:0	10	;
water	40:16	0:0	10	fmt_out
op	40:23	0:0	10	.
water	40:24	0:0	10	i_width
op	40:32	0:0	10	=
water	40:34	0:0	10	(
water	40:35	0:0	10	p_sys
op	40:40	0:0	10	->
water	40:42	0:0	10	i_height
op	40:51	0:0	10	*
water	40:53	0:0	10	i_fmt_in_aspect
op	41:20	0:0	10	*
water	41:22	0:0	10	p_sys
op	41:27	0:0	10	->
water	41:29	0:0	10	i_sar_den
op	41:39	0:0	10	/
water	41:41	0:0	10	p_sys
op	41:46	0:0	10	->
water	41:48	0:0	10	i_sar_num
op	41:58	0:0	10	/
water	41:60	0:0	10	VOUT_ASPECT_FACTOR
water	41:78	0:0	10	)
op	42:22	0:0	10	&
water	42:24	0:0	10	~0x1
water	42:28	0:0	10	;
water	43:12	0:0	10	}
else	44:12	48:12	6
stmts	45:12	48:12	7	
water	45:12	0:0	8	{
water	46:16	0:0	8	fmt_out
op	46:23	0:0	8	.
water	46:24	0:0	8	i_width
op	46:32	0:0	8	=
water	46:34	0:0	8	p_sys
op	46:39	0:0	8	->
water	46:41	0:0	8	i_width
water	46:48	0:0	8	;
water	47:16	0:0	8	fmt_out
op	47:23	0:0	8	.
water	47:24	0:0	8	i_height
op	47:33	0:0	8	=
water	47:35	0:0	8	p_sys
op	47:40	0:0	8	->
water	47:42	0:0	8	i_height
water	47:50	0:0	8	;
water	48:12	0:0	8	}
water	49:12	0:0	6	fmt_out
op	49:19	0:0	6	.
water	49:20	0:0	6	i_visible_width
op	49:36	0:0	6	=
water	49:38	0:0	6	fmt_out
op	49:45	0:0	6	.
water	49:46	0:0	6	i_width
water	49:53	0:0	6	;
water	50:12	0:0	6	fmt_out
op	50:19	0:0	6	.
water	50:20	0:0	6	i_visible_height
op	50:37	0:0	6	=
water	50:39	0:0	6	fmt_out
op	50:46	0:0	6	.
water	50:47	0:0	6	i_height
water	50:55	0:0	6	;
water	51:12	0:0	6	p_new_pic
op	51:22	0:0	6	=
call	51:24	52:64	6	image_Convert
arg	51:39	51:53	7	p_sys->p_image
water	51:39	0:0	8	p_sys
op	51:44	0:0	8	->
water	51:46	0:0	8	p_image
arg	52:39	52:44	7	p_pic
water	52:39	0:0	8	p_pic
arg	52:46	52:53	7	&fmt_in
op	52:46	0:0	8	&
water	52:47	0:0	8	fmt_in
arg	52:55	52:64	7	&fmt_out
op	52:55	0:0	8	&
water	52:56	0:0	8	fmt_out
water	52:65	0:0	6	;
if	53:12	58:12	6	(p_new_pic == NULL)
cond	53:16	53:29	7	p_new_pic == NULL
water	53:16	0:0	8	p_new_pic
op	53:26	0:0	8	==
water	53:29	0:0	8	NULL
stmts	54:12	58:12	7	
water	54:12	0:0	8	{
call	55:16	55:61	8	msg_Err
arg	55:25	55:33	9	p_stream
water	55:25	0:0	10	p_stream
arg	55:35	55:61	9	"image conversion failed"
water	55:35	0:0	10	"image conversion failed"
water	55:62	0:0	8	;
call	56:16	56:39	8	picture_Release
arg	56:33	56:39	9	p_pic
water	56:33	0:0	10	p_pic
water	56:40	0:0	8	;
continue	57:16	57:24	8	
water	58:12	0:0	8	}
water	59:8	0:0	6	}
else	60:8	74:8	4
stmts	61:8	74:8	5	
water	61:8	0:0	6	{
water	63:12	0:0	6	p_new_pic
op	63:22	0:0	6	=
call	63:24	66:79	6	picture_New
arg	63:37	63:59	7	p_pic->format.i_chroma
water	63:37	0:0	8	p_pic
op	63:42	0:0	8	->
water	63:44	0:0	8	format
op	63:50	0:0	8	.
water	63:51	0:0	8	i_chroma
arg	64:37	64:58	7	p_pic->format.i_width
water	64:37	0:0	8	p_pic
op	64:42	0:0	8	->
water	64:44	0:0	8	format
op	64:50	0:0	8	.
water	64:51	0:0	8	i_width
arg	64:60	64:82	7	p_pic->format.i_height
water	64:60	0:0	8	p_pic
op	64:65	0:0	8	->
water	64:67	0:0	8	format
op	64:73	0:0	8	.
water	64:74	0:0	8	i_height
arg	65:37	65:78	7	p_sys->p_decoder->fmt_out.video.i_sar_num
water	65:37	0:0	8	p_sys
op	65:42	0:0	8	->
water	65:44	0:0	8	p_decoder
op	65:53	0:0	8	->
water	65:55	0:0	8	fmt_out
op	65:62	0:0	8	.
water	65:63	0:0	8	video
op	65:68	0:0	8	.
water	65:69	0:0	8	i_sar_num
arg	66:37	66:79	7	p_sys->p_decoder->fmt_out.video.i_sar_den
water	66:37	0:0	8	p_sys
op	66:42	0:0	8	->
water	66:44	0:0	8	p_decoder
op	66:53	0:0	8	->
water	66:55	0:0	8	fmt_out
op	66:62	0:0	8	.
water	66:63	0:0	8	video
op	66:68	0:0	8	.
water	66:69	0:0	8	i_sar_den
water	66:80	0:0	6	;
if	67:12	72:12	6	(! p_new_pic)
cond	67:16	67:17	7	! p_new_pic
op	67:16	0:0	8	!
water	67:17	0:0	8	p_new_pic
stmts	68:12	72:12	7	
water	68:12	0:0	8	{
call	69:16	69:39	8	picture_Release
arg	69:33	69:39	9	p_pic
water	69:33	0:0	10	p_pic
water	69:40	0:0	8	;
call	70:16	70:61	8	msg_Err
arg	70:25	70:33	9	p_stream
water	70:25	0:0	10	p_stream
arg	70:35	70:61	9	"image allocation failed"
water	70:35	0:0	10	"image allocation failed"
water	70:62	0:0	8	;
continue	71:16	71:24	8	
water	72:12	0:0	8	}
call	73:12	73:43	6	picture_Copy
arg	73:26	73:35	7	p_new_pic
water	73:26	0:0	8	p_new_pic
arg	73:37	73:43	7	p_pic
water	73:37	0:0	8	p_pic
water	73:44	0:0	6	;
water	74:8	0:0	6	}
call	75:8	75:31	4	picture_Release
arg	75:25	75:31	5	p_pic
water	75:25	0:0	6	p_pic
water	75:32	0:0	4	;
if	76:8	77:75	4	(p_sys -> p_vf2)
cond	76:12	76:19	5	p_sys -> p_vf2
water	76:12	0:0	6	p_sys
op	76:17	0:0	6	->
water	76:19	0:0	6	p_vf2
stmts	77:12	77:75	5	
water	77:12	0:0	6	p_new_pic
op	77:22	0:0	6	=
call	77:24	77:74	6	filter_chain_VideoFilter
arg	77:50	77:62	7	p_sys->p_vf2
water	77:50	0:0	8	p_sys
op	77:55	0:0	8	->
water	77:57	0:0	8	p_vf2
arg	77:64	77:74	7	p_new_pic
water	77:64	0:0	8	p_new_pic
water	77:75	0:0	6	;
call	78:8	78:41	4	PushPicture
arg	78:21	78:29	5	p_stream
water	78:21	0:0	6	p_stream
arg	78:31	78:41	5	p_new_pic
water	78:31	0:0	6	p_new_pic
water	78:42	0:0	4	;
water	79:4	0:0	4	}
return	80:4	80:22	2	VLC_SUCCESS
water	80:11	0:0	3	VLC_SUCCESS

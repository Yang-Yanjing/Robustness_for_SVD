func	2:0	71:0	0	void	vlc_event_send
params	2:19	0:0	1	
param	2:21	2:47	2	vlc_event_manager_t *	p_em
param	3:21	3:43	2	vlc_event_t *	p_event
stmnts	0:0	70:37	1	
decl	5:4	5:56	2	vlc_event_listeners_group_t	*listeners_group
op	5:50	0:0	2	=
water	5:52	0:0	2	NULL
decl	6:4	6:35	2	vlc_event_listener_t	*listener
decl	7:4	7:59	2	vlc_event_listener_t	*array_of_cached_listeners
op	7:53	0:0	2	=
water	7:55	0:0	2	NULL
decl	8:4	8:42	2	vlc_event_listener_t	*cached_listener
decl	9:4	9:33	2	int	i
water	9:9	0:0	2	,
decl	9:4	9:33	2	int	i_cached_listeners
op	9:30	0:0	2	=
water	9:32	0:0	2	0
water	11:4	0:0	2	p_event
op	11:11	0:0	2	->
water	11:13	0:0	2	p_obj
op	11:19	0:0	2	=
water	11:21	0:0	2	p_em
op	11:25	0:0	2	->
water	11:27	0:0	2	p_obj
water	11:32	0:0	2	;
call	12:4	12:46	2	vlc_mutex_lock
arg	12:20	12:46	3	&p_em->event_sending_lock
op	12:20	0:0	4	&
water	12:21	0:0	4	p_em
op	12:25	0:0	4	->
water	12:27	0:0	4	event_sending_lock
water	12:48	0:0	2	;
call	13:4	13:39	2	vlc_mutex_lock
arg	13:20	13:39	3	&p_em->object_lock
op	13:20	0:0	4	&
water	13:21	0:0	4	p_em
op	13:25	0:0	4	->
water	13:27	0:0	4	object_lock
water	13:40	0:0	2	;
call	14:4	14:59	2	FOREACH_ARRAY
arg	14:19	14:34	3	listeners_group
water	14:19	0:0	4	listeners_group
arg	14:36	14:59	3	p_em->listeners_groups
water	14:36	0:0	4	p_em
op	14:40	0:0	4	->
water	14:42	0:0	4	listeners_groups
water	15:8	0:0	2	if
water	15:10	0:0	2	(
water	15:12	0:0	2	listeners_group
op	15:27	0:0	2	->
water	15:29	0:0	2	event_type
op	15:40	0:0	2	==
water	15:43	0:0	2	p_event
op	15:50	0:0	2	->
water	15:52	0:0	2	type
water	15:57	0:0	2	)
water	16:8	0:0	2	{
water	17:12	0:0	2	if
water	17:14	0:0	2	(
water	17:16	0:0	2	listeners_group
op	17:31	0:0	2	->
water	17:33	0:0	2	listeners
op	17:42	0:0	2	.
water	17:43	0:0	2	i_size
op	17:50	0:0	2	<=
water	17:53	0:0	2	0
water	17:55	0:0	2	)
water	18:16	0:0	2	break
water	18:21	0:0	2	;
water	20:12	0:0	2	i_cached_listeners
op	20:31	0:0	2	=
water	20:33	0:0	2	listeners_group
op	20:48	0:0	2	->
water	20:50	0:0	2	listeners
op	20:59	0:0	2	.
water	20:60	0:0	2	i_size
water	20:66	0:0	2	;
water	21:12	0:0	2	array_of_cached_listeners
op	21:38	0:0	2	=
call	21:40	22:68	2	malloc
arg	22:20	22:68	3	sizeof(vlc_event_listener_t)*i_cached_listeners
op	22:20	0:0	4	sizeof
water	22:26	0:0	4	(
water	22:27	0:0	4	vlc_event_listener_t
water	22:47	0:0	4	)
op	22:48	0:0	4	*
water	22:49	0:0	4	i_cached_listeners
water	22:69	0:0	2	;
water	23:12	0:0	2	if
water	23:14	0:0	2	(
op	23:16	0:0	2	!
water	23:17	0:0	2	array_of_cached_listeners
water	23:43	0:0	2	)
water	24:12	0:0	2	{
call	25:16	25:53	2	vlc_mutex_unlock
arg	25:34	25:53	3	&p_em->object_lock
op	25:34	0:0	4	&
water	25:35	0:0	4	p_em
op	25:39	0:0	4	->
water	25:41	0:0	4	object_lock
water	25:54	0:0	2	;
call	26:16	26:60	2	vlc_mutex_unlock
arg	26:34	26:60	3	&p_em->event_sending_lock
op	26:34	0:0	4	&
water	26:35	0:0	4	p_em
op	26:39	0:0	4	->
water	26:41	0:0	4	event_sending_lock
water	26:62	0:0	2	;
water	27:16	0:0	2	return
water	27:22	0:0	2	;
water	28:12	0:0	2	}
water	29:12	0:0	2	cached_listener
op	29:28	0:0	2	=
water	29:30	0:0	2	array_of_cached_listeners
water	29:55	0:0	2	;
call	30:12	30:64	2	FOREACH_ARRAY
arg	30:27	30:35	3	listener
water	30:27	0:0	4	listener
arg	30:37	30:64	3	listeners_group->listeners
water	30:37	0:0	4	listeners_group
op	30:52	0:0	4	->
water	30:54	0:0	4	listeners
call	31:16	31:79	2	memcpy
arg	31:24	31:39	3	cached_listener
water	31:24	0:0	4	cached_listener
arg	31:41	31:49	3	listener
water	31:41	0:0	4	listener
arg	31:51	31:79	3	sizeof(vlc_event_listener_t)
op	31:51	0:0	4	sizeof
water	31:57	0:0	4	(
water	31:58	0:0	4	vlc_event_listener_t
water	31:78	0:0	4	)
water	31:80	0:0	2	;
water	32:16	0:0	2	cached_listener
op	32:31	0:0	2	++
water	32:33	0:0	2	;
call	33:12	33:24	2	FOREACH_END
water	34:12	0:0	2	break
water	34:17	0:0	2	;
water	35:8	0:0	2	}
call	36:4	36:16	2	FOREACH_END
water	40:4	0:0	2	listeners_group
op	40:19	0:0	2	->
water	40:21	0:0	2	b_sublistener_removed
op	40:43	0:0	2	=
water	40:45	0:0	2	false
water	40:50	0:0	2	;
call	41:4	41:41	2	vlc_mutex_unlock
arg	41:22	41:41	3	&p_em->object_lock
op	41:22	0:0	4	&
water	41:23	0:0	4	p_em
op	41:27	0:0	4	->
water	41:29	0:0	4	object_lock
water	41:42	0:0	2	;
water	43:4	0:0	2	cached_listener
op	43:20	0:0	2	=
water	43:22	0:0	2	array_of_cached_listeners
water	43:47	0:0	2	;
if	44:4	49:4	2	(! listeners_group || ! array_of_cached_listeners)
cond	44:8	44:29	3	! listeners_group || ! array_of_cached_listeners
op	44:8	0:0	4	!
water	44:9	0:0	4	listeners_group
op	44:25	0:0	4	||
op	44:28	0:0	4	!
water	44:29	0:0	4	array_of_cached_listeners
stmts	45:4	49:4	3	
water	45:4	0:0	4	{
call	46:8	46:40	4	free
arg	46:14	46:40	5	array_of_cached_listeners
water	46:14	0:0	6	array_of_cached_listeners
water	46:41	0:0	4	;
call	47:8	47:52	4	vlc_mutex_unlock
arg	47:26	47:52	5	&p_em->event_sending_lock
op	47:26	0:0	6	&
water	47:27	0:0	6	p_em
op	47:31	0:0	6	->
water	47:33	0:0	6	event_sending_lock
water	47:53	0:0	4	;
return	48:8	48:14	4	
water	49:4	0:0	4	}
for	50:4	68:4	2	(i = 0 ;i < i_cached_listeners;i ++)
forinit	50:9	50:14	3	i = 0 ;
water	50:9	0:0	4	i
op	50:11	0:0	4	=
water	50:13	0:0	4	0
water	50:14	0:0	4	;
cond	50:16	50:20	3	i < i_cached_listeners
water	50:16	0:0	4	i
op	50:18	0:0	4	<
water	50:20	0:0	4	i_cached_listeners
forexpr	50:40	50:41	3	i ++
water	50:40	0:0	4	i
op	50:41	0:0	4	++
stmts	51:4	68:4	3	
water	51:4	0:0	4	{
if	52:8	65:8	4	(listeners_group -> b_sublistener_removed)
cond	52:12	52:29	5	listeners_group -> b_sublistener_removed
water	52:12	0:0	6	listeners_group
op	52:27	0:0	6	->
water	52:29	0:0	6	b_sublistener_removed
stmts	53:8	65:8	5	
water	53:8	0:0	6	{
decl	56:12	56:31	6	bool	valid_listener
call	57:12	57:47	6	vlc_mutex_lock
arg	57:28	57:47	7	&p_em->object_lock
op	57:28	0:0	8	&
water	57:29	0:0	8	p_em
op	57:33	0:0	8	->
water	57:35	0:0	8	object_lock
water	57:48	0:0	6	;
water	58:12	0:0	6	valid_listener
op	58:27	0:0	6	=
call	58:29	58:87	6	group_contains_listener
arg	58:54	58:69	7	listeners_group
water	58:54	0:0	8	listeners_group
arg	58:71	58:87	7	cached_listener
water	58:71	0:0	8	cached_listener
water	58:88	0:0	6	;
call	59:12	59:49	6	vlc_mutex_unlock
arg	59:30	59:49	7	&p_em->object_lock
op	59:30	0:0	8	&
water	59:31	0:0	8	p_em
op	59:35	0:0	8	->
water	59:37	0:0	8	object_lock
water	59:50	0:0	6	;
if	60:12	64:12	6	(! valid_listener)
cond	60:16	60:17	7	! valid_listener
op	60:16	0:0	8	!
water	60:17	0:0	8	valid_listener
stmts	61:12	64:12	7	
water	61:12	0:0	8	{
water	62:16	0:0	8	cached_listener
op	62:31	0:0	8	++
water	62:33	0:0	8	;
continue	63:16	63:24	8	
water	64:12	0:0	8	}
water	65:8	0:0	6	}
call	66:8	66:76	4	cached_listener->pf_callback
arg	66:38	66:45	5	p_event
water	66:38	0:0	6	p_event
arg	66:47	66:76	5	cached_listener->p_user_data
water	66:47	0:0	6	cached_listener
op	66:62	0:0	6	->
water	66:64	0:0	6	p_user_data
water	66:77	0:0	4	;
water	67:8	0:0	4	cached_listener
op	67:23	0:0	4	++
water	67:25	0:0	4	;
water	68:4	0:0	4	}
call	69:4	69:48	2	vlc_mutex_unlock
arg	69:22	69:48	3	&p_em->event_sending_lock
op	69:22	0:0	4	&
water	69:23	0:0	4	p_em
op	69:27	0:0	4	->
water	69:29	0:0	4	event_sending_lock
water	69:49	0:0	2	;
call	70:4	70:36	2	free
arg	70:10	70:36	3	array_of_cached_listeners
water	70:10	0:0	4	array_of_cached_listeners
water	70:37	0:0	2	;

func	2:0	29:0	0	static bool	SegmentSplit
params	2:24	0:0	1	
param	2:26	2:43	2	segment_t *	p_prev
param	2:45	2:67	2	segment_t * *	pp_segment
param	3:26	3:48	2	const uint16_t	i_start
param	3:50	3:70	2	const uint16_t	i_end
param	4:26	4:58	2	const segment_style_t *	p_styles
stmnts	0:0	28:15	1	
decl	6:4	6:87	2	segment_t	*p_segment_left
op	6:30	0:0	2	=
water	6:32	0:0	2	NULL
water	6:36	0:0	2	,
decl	6:4	6:87	2	segment_t	*p_segment_middle
op	6:56	0:0	2	=
water	6:58	0:0	2	NULL
water	6:62	0:0	2	,
decl	6:4	6:87	2	segment_t	*p_segment_right
op	6:81	0:0	2	=
water	6:83	0:0	2	NULL
if	7:4	7:50	2	(( * pp_segment ) -> i_size == 0)
cond	7:9	7:34	3	( * pp_segment ) -> i_size == 0
water	7:9	0:0	4	(
op	7:10	0:0	4	*
water	7:11	0:0	4	pp_segment
water	7:21	0:0	4	)
op	7:22	0:0	4	->
water	7:24	0:0	4	i_size
op	7:31	0:0	4	==
water	7:34	0:0	4	0
stmts	7:38	7:50	3	
return	7:38	7:50	4	false
water	7:45	0:0	5	false
if	8:4	8:39	2	(i_start > i_end)
cond	8:9	8:19	3	i_start > i_end
water	8:9	0:0	4	i_start
op	8:17	0:0	4	>
water	8:19	0:0	4	i_end
stmts	8:27	8:39	3	
return	8:27	8:39	4	false
water	8:34	0:0	5	false
if	9:4	9:77	2	(( size_t ) (i_end - i_start ) > ( * pp_segment ) -> i_size - 1)
cond	9:9	9:61	3	( size_t ) (i_end - i_start ) > ( * pp_segment ) -> i_size - 1
call	9:9	9:33	4	(size_t)
arg	9:18	9:33	5	i_end-i_start
water	9:18	0:0	6	i_end
op	9:24	0:0	6	-
water	9:26	0:0	6	i_start
op	9:35	0:0	4	>
water	9:37	0:0	4	(
op	9:38	0:0	4	*
water	9:39	0:0	4	pp_segment
water	9:49	0:0	4	)
op	9:50	0:0	4	->
water	9:52	0:0	4	i_size
op	9:59	0:0	4	-
water	9:61	0:0	4	1
stmts	9:65	9:77	3	
return	9:65	9:77	4	false
water	9:72	0:0	5	false
if	10:4	10:57	2	(i_end > ( * pp_segment ) -> i_size - 1)
cond	10:9	10:41	3	i_end > ( * pp_segment ) -> i_size - 1
water	10:9	0:0	4	i_end
op	10:15	0:0	4	>
water	10:17	0:0	4	(
op	10:18	0:0	4	*
water	10:19	0:0	4	pp_segment
water	10:29	0:0	4	)
op	10:30	0:0	4	->
water	10:32	0:0	4	i_size
op	10:39	0:0	4	-
water	10:41	0:0	4	1
stmts	10:45	10:57	3	
return	10:45	10:57	4	false
water	10:52	0:0	5	false
call	11:4	11:102	2	SegmentDoSplit
arg	11:20	11:31	3	*pp_segment
op	11:20	0:0	4	*
water	11:21	0:0	4	pp_segment
arg	11:33	11:40	3	i_start
water	11:33	0:0	4	i_start
arg	11:42	11:47	3	i_end
water	11:42	0:0	4	i_end
arg	11:49	11:64	3	&p_segment_left
op	11:49	0:0	4	&
water	11:50	0:0	4	p_segment_left
arg	11:66	11:83	3	&p_segment_middle
op	11:66	0:0	4	&
water	11:67	0:0	4	p_segment_middle
arg	11:85	11:102	3	&p_segment_right
op	11:85	0:0	4	&
water	11:86	0:0	4	p_segment_right
water	11:103	0:0	2	;
if	12:4	18:4	2	(! p_segment_middle)
cond	12:9	12:10	3	! p_segment_middle
op	12:9	0:0	4	!
water	12:10	0:0	4	p_segment_middle
stmts	13:4	18:4	3	
water	13:4	0:0	4	{
call	15:8	15:36	4	SegmentFree
arg	15:21	15:36	5	p_segment_left
water	15:21	0:0	6	p_segment_left
water	15:37	0:0	4	;
call	16:8	16:37	4	SegmentFree
arg	16:21	16:37	5	p_segment_right
water	16:21	0:0	6	p_segment_right
water	16:38	0:0	4	;
return	17:8	17:20	4	false
water	17:15	0:0	5	false
water	18:4	0:0	4	}
decl	19:4	19:45	2	segment_t	*p_next
op	19:22	0:0	2	=
water	19:24	0:0	2	(
op	19:25	0:0	2	*
water	19:26	0:0	2	pp_segment
water	19:36	0:0	2	)
op	19:37	0:0	2	->
water	19:39	0:0	2	p_next
call	20:4	20:29	2	SegmentFree
arg	20:17	20:29	3	*pp_segment
op	20:17	0:0	4	*
water	20:18	0:0	4	pp_segment
water	20:30	0:0	2	;
op	21:4	0:0	2	*
water	21:5	0:0	2	pp_segment
op	21:16	0:0	2	=
water	21:18	0:0	2	(
water	21:20	0:0	2	p_segment_left
water	21:35	0:0	2	)
water	21:37	0:0	2	?
water	21:39	0:0	2	p_segment_left
water	21:54	0:0	2	:
water	21:56	0:0	2	p_segment_middle
water	21:73	0:0	2	;
if	22:4	22:46	2	(p_prev)
cond	22:9	22:9	3	p_prev
water	22:9	0:0	4	p_prev
stmts	22:18	22:46	3	
water	22:18	0:0	4	p_prev
op	22:24	0:0	4	->
water	22:26	0:0	4	p_next
op	22:33	0:0	4	=
op	22:35	0:0	4	*
water	22:36	0:0	4	pp_segment
water	22:46	0:0	4	;
if	23:4	24:40	2	(p_segment_right)
cond	23:9	23:9	3	p_segment_right
water	23:9	0:0	4	p_segment_right
stmts	24:8	24:40	3	
water	24:8	0:0	4	p_segment_right
op	24:23	0:0	4	->
water	24:25	0:0	4	p_next
op	24:32	0:0	4	=
water	24:34	0:0	4	p_next
water	24:40	0:0	4	;
else	25:4	26:41	2
stmts	26:8	26:41	3	
water	26:8	0:0	4	p_segment_middle
op	26:24	0:0	4	->
water	26:26	0:0	4	p_next
op	26:33	0:0	4	=
water	26:35	0:0	4	p_next
water	26:41	0:0	4	;
water	27:4	0:0	2	p_segment_middle
op	27:20	0:0	2	->
water	27:22	0:0	2	styles
op	27:29	0:0	2	=
op	27:31	0:0	2	*
water	27:32	0:0	2	p_styles
water	27:40	0:0	2	;
return	28:4	28:15	2	true
water	28:11	0:0	3	true

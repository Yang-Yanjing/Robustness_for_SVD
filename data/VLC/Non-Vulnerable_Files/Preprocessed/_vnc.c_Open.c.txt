func	2:0	86:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	85:23	1	
decl	4:4	4:44	2	demux_t	*p_demux
op	4:26	0:0	2	=
water	4:28	0:0	2	(
water	4:29	0:0	2	demux_t
op	4:36	0:0	2	*
water	4:37	0:0	2	)
water	4:38	0:0	2	p_this
decl	5:4	5:23	2	demux_sys_t	*p_sys
water	6:4	0:0	2	p_sys
op	6:10	0:0	2	=
call	6:12	6:43	2	calloc
arg	6:20	6:21	3	1
water	6:20	0:0	4	1
arg	6:23	6:43	3	sizeof(demux_sys_t)
op	6:23	0:0	4	sizeof
water	6:29	0:0	4	(
water	6:30	0:0	4	demux_sys_t
water	6:41	0:0	4	)
water	6:44	0:0	2	;
if	7:4	7:34	2	(! p_sys)
cond	7:8	7:9	3	! p_sys
op	7:8	0:0	4	!
water	7:9	0:0	4	p_sys
stmts	7:17	7:34	3	
return	7:17	7:34	4	VLC_ENOMEM
water	7:24	0:0	5	VLC_ENOMEM
water	8:4	0:0	2	p_sys
op	8:9	0:0	2	->
water	8:11	0:0	2	f_fps
op	8:17	0:0	2	=
call	8:19	8:63	2	var_InheritFloat
arg	8:37	8:44	3	p_demux
water	8:37	0:0	4	p_demux
arg	8:46	8:63	3	CFG_PREFIX"fps"
water	8:46	0:0	4	CFG_PREFIX
water	8:57	0:0	4	"fps"
water	8:64	0:0	2	;
if	9:4	9:47	2	(p_sys -> f_fps <= 0)
cond	9:9	9:25	3	p_sys -> f_fps <= 0
water	9:9	0:0	4	p_sys
op	9:14	0:0	4	->
water	9:16	0:0	4	f_fps
op	9:22	0:0	4	<=
water	9:25	0:0	4	0
stmts	9:29	9:47	3	
water	9:29	0:0	4	p_sys
op	9:34	0:0	4	->
water	9:36	0:0	4	f_fps
op	9:42	0:0	4	=
water	9:44	0:0	4	1
op	9:45	0:0	4	.
water	9:46	0:0	4	0
water	9:47	0:0	4	;
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	i_frame_interval
op	10:28	0:0	2	=
water	10:30	0:0	2	1000000
op	10:38	0:0	2	/
water	10:40	0:0	2	p_sys
op	10:45	0:0	2	->
water	10:47	0:0	2	f_fps
water	10:53	0:0	2	;
decl	11:4	11:72	2	char	*psz_chroma
op	11:21	0:0	2	=
call	11:23	11:71	3	var_InheritString
arg	11:42	11:49	4	p_demux
water	11:42	0:0	5	p_demux
arg	11:51	11:71	4	CFG_PREFIX"chroma"
water	11:51	0:0	5	CFG_PREFIX
water	11:62	0:0	5	"chroma"
decl	12:4	12:81	2	vlc_fourcc_t	i_chroma
op	12:26	0:0	2	=
call	12:28	12:80	3	vlc_fourcc_GetCodecFromString
arg	12:59	12:67	4	VIDEO_ES
water	12:59	0:0	5	VIDEO_ES
arg	12:69	12:80	4	psz_chroma
water	12:69	0:0	5	psz_chroma
call	13:4	13:21	2	free
arg	13:10	13:21	3	psz_chroma
water	13:10	0:0	4	psz_chroma
water	13:22	0:0	2	;
if	14:4	19:4	2	(! i_chroma ||vlc_fourcc_IsYUV (i_chroma ))
cond	14:9	14:49	3	! i_chroma ||vlc_fourcc_IsYUV (i_chroma )
op	14:9	0:0	4	!
water	14:10	0:0	4	i_chroma
op	14:19	0:0	4	||
call	14:22	14:49	4	vlc_fourcc_IsYUV
arg	14:40	14:49	5	i_chroma
water	14:40	0:0	6	i_chroma
stmts	15:4	19:4	3	
water	15:4	0:0	4	{
call	16:8	16:58	4	msg_Err
arg	16:17	16:24	5	p_demux
water	16:17	0:0	6	p_demux
arg	16:26	16:58	5	"Only RGB chroma are supported"
water	16:26	0:0	6	"Only RGB chroma are supported"
water	16:59	0:0	4	;
call	17:8	17:20	4	free
arg	17:14	17:20	5	p_sys
water	17:14	0:0	6	p_sys
water	17:21	0:0	4	;
return	18:8	18:27	4	VLC_EGENERIC
water	18:15	0:0	5	VLC_EGENERIC
water	19:4	0:0	4	}
decl	20:4	20:95	2	const vlc_chroma_description_t	*p_chroma_desc
op	20:50	0:0	2	=
call	20:52	20:94	3	vlc_fourcc_GetChromaDescription
arg	20:85	20:94	4	i_chroma
water	20:85	0:0	5	i_chroma
if	21:4	26:4	2	(! p_chroma_desc)
cond	21:9	21:10	3	! p_chroma_desc
op	21:9	0:0	4	!
water	21:10	0:0	4	p_chroma_desc
stmts	22:4	26:4	3	
water	22:4	0:0	4	{
call	23:8	23:65	4	msg_Err
arg	23:17	23:24	5	p_demux
water	23:17	0:0	6	p_demux
arg	23:26	23:65	5	"Unable to get RGB chroma description"
water	23:26	0:0	6	"Unable to get RGB chroma description"
water	23:66	0:0	4	;
call	24:8	24:20	4	free
arg	24:14	24:20	5	p_sys
water	24:14	0:0	6	p_sys
water	24:21	0:0	4	;
return	25:8	25:27	4	VLC_EGENERIC
water	25:15	0:0	5	VLC_EGENERIC
water	26:4	0:0	4	}
water	28:4	0:0	2	rfbEnableClientLogging
op	28:27	0:0	2	=
water	28:29	0:0	2	FALSE
water	28:34	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	p_client
op	30:20	0:0	2	=
call	30:22	32:62	2	rfbGetClient
arg	30:36	30:65	3	p_chroma_desc->pixel_bits/3
water	30:36	0:0	4	p_chroma_desc
op	30:49	0:0	4	->
water	30:51	0:0	4	pixel_bits
op	30:62	0:0	4	/
water	30:64	0:0	4	3
arg	31:36	31:37	3	3
water	31:36	0:0	4	3
arg	32:36	32:62	3	p_chroma_desc->pixel_size
water	32:36	0:0	4	p_chroma_desc
op	32:49	0:0	4	->
water	32:51	0:0	4	pixel_size
water	32:63	0:0	2	;
if	33:4	39:4	2	(! p_sys -> p_client)
cond	33:9	33:18	3	! p_sys -> p_client
op	33:9	0:0	4	!
water	33:11	0:0	4	p_sys
op	33:16	0:0	4	->
water	33:18	0:0	4	p_client
stmts	34:4	39:4	3	
water	34:4	0:0	4	{
call	35:8	36:65	4	msg_Dbg
arg	35:17	35:24	5	p_demux
water	35:17	0:0	6	p_demux
arg	35:26	35:58	5	"Unable to set up client for %s"
water	35:26	0:0	6	"Unable to set up client for %s"
arg	36:17	36:65	5	vlc_fourcc_GetDescription(VIDEO_ES,i_chroma)
call	36:17	36:63	6	vlc_fourcc_GetDescription
arg	36:44	36:52	7	VIDEO_ES
water	36:44	0:0	8	VIDEO_ES
arg	36:54	36:63	7	i_chroma
water	36:54	0:0	8	i_chroma
water	36:66	0:0	4	;
call	37:8	37:20	4	free
arg	37:14	37:20	5	p_sys
water	37:14	0:0	6	p_sys
water	37:21	0:0	4	;
return	38:8	38:27	4	VLC_EGENERIC
water	38:15	0:0	5	VLC_EGENERIC
water	39:4	0:0	4	}
call	40:4	42:73	2	msg_Dbg
arg	40:13	40:20	3	p_demux
water	40:13	0:0	4	p_demux
arg	40:22	40:53	3	"set up client for %s %d %d %d"
water	40:22	0:0	4	"set up client for %s %d %d %d"
arg	41:13	41:60	3	vlc_fourcc_GetDescription(VIDEO_ES,i_chroma)
call	41:13	41:59	4	vlc_fourcc_GetDescription
arg	41:40	41:48	5	VIDEO_ES
water	41:40	0:0	6	VIDEO_ES
arg	41:50	41:59	5	i_chroma
water	41:50	0:0	6	i_chroma
arg	42:13	42:42	3	p_chroma_desc->pixel_bits/3
water	42:13	0:0	4	p_chroma_desc
op	42:26	0:0	4	->
water	42:28	0:0	4	pixel_bits
op	42:39	0:0	4	/
water	42:41	0:0	4	3
arg	42:44	42:45	3	3
water	42:44	0:0	4	3
arg	42:47	42:73	3	p_chroma_desc->pixel_size
water	42:47	0:0	4	p_chroma_desc
op	42:60	0:0	4	->
water	42:62	0:0	4	pixel_size
water	42:74	0:0	2	;
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	p_client
op	43:19	0:0	2	->
water	43:21	0:0	2	MallocFrameBuffer
op	43:39	0:0	2	=
water	43:41	0:0	2	mallocFrameBufferHandler
water	43:65	0:0	2	;
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	p_client
op	44:19	0:0	2	->
water	44:21	0:0	2	canHandleNewFBSize
op	44:40	0:0	2	=
water	44:42	0:0	2	TRUE
water	44:46	0:0	2	;
water	45:4	0:0	2	p_sys
op	45:9	0:0	2	->
water	45:11	0:0	2	p_client
op	45:19	0:0	2	->
water	45:21	0:0	2	GetCredential
op	45:35	0:0	2	=
water	45:37	0:0	2	getCredentialHandler
water	45:57	0:0	2	;
water	46:4	0:0	2	p_sys
op	46:9	0:0	2	->
water	46:11	0:0	2	p_client
op	46:19	0:0	2	->
water	46:21	0:0	2	GetPassword
op	46:33	0:0	2	=
water	46:35	0:0	2	getPasswordHandler
water	46:53	0:0	2	;
water	48:4	0:0	2	p_sys
op	48:9	0:0	2	->
water	48:11	0:0	2	p_client
op	48:19	0:0	2	->
water	48:21	0:0	2	appData
op	48:28	0:0	2	.
water	48:29	0:0	2	compressLevel
op	48:43	0:0	2	=
call	49:12	49:69	2	var_InheritInteger
arg	49:32	49:39	3	p_demux
water	49:32	0:0	4	p_demux
arg	49:41	49:69	3	CFG_PREFIX"compress-level"
water	49:41	0:0	4	CFG_PREFIX
water	49:52	0:0	4	"compress-level"
water	49:70	0:0	2	;
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	p_client
op	50:19	0:0	2	->
water	50:21	0:0	2	appData
op	50:28	0:0	2	.
water	50:29	0:0	2	qualityLevel
op	50:42	0:0	2	=
call	51:12	51:68	2	var_InheritInteger
arg	51:32	51:39	3	p_demux
water	51:32	0:0	4	p_demux
arg	51:41	51:68	3	CFG_PREFIX"quality-level"
water	51:41	0:0	4	CFG_PREFIX
water	51:52	0:0	4	"quality-level"
water	51:69	0:0	2	;
decl	53:4	53:17	2	vlc_url_t	url
call	54:4	54:49	2	vlc_UrlParse
arg	54:18	54:22	3	&url
op	54:18	0:0	4	&
water	54:19	0:0	4	url
arg	54:24	54:45	3	p_demux->psz_location
water	54:24	0:0	4	p_demux
op	54:31	0:0	4	->
water	54:33	0:0	4	psz_location
arg	54:47	54:49	3	0
water	54:47	0:0	4	0
water	54:50	0:0	2	;
if	55:4	56:60	2	(!EMPTY_STR (url . psz_host ))
cond	55:9	55:32	3	!EMPTY_STR (url . psz_host )
op	55:9	0:0	4	!
call	55:10	55:32	4	EMPTY_STR
arg	55:20	55:32	5	url.psz_host
water	55:20	0:0	6	url
op	55:23	0:0	6	.
water	55:24	0:0	6	psz_host
stmts	56:8	56:60	3	
water	56:8	0:0	4	p_sys
op	56:13	0:0	4	->
water	56:15	0:0	4	p_client
op	56:23	0:0	4	->
water	56:25	0:0	4	serverHost
op	56:36	0:0	4	=
call	56:38	56:59	4	strdup
arg	56:46	56:59	5	url.psz_host
water	56:46	0:0	6	url
op	56:49	0:0	6	.
water	56:50	0:0	6	psz_host
water	56:60	0:0	4	;
else	57:4	58:59	2
stmts	58:8	58:59	3	
water	58:8	0:0	4	p_sys
op	58:13	0:0	4	->
water	58:15	0:0	4	p_client
op	58:23	0:0	4	->
water	58:25	0:0	4	serverHost
op	58:36	0:0	4	=
call	58:38	58:58	4	strdup
arg	58:46	58:58	5	"localhost"
water	58:46	0:0	6	"localhost"
water	58:59	0:0	4	;
water	59:4	0:0	2	p_sys
op	59:9	0:0	2	->
water	59:11	0:0	2	p_client
op	59:19	0:0	2	->
water	59:21	0:0	2	appData
op	59:28	0:0	2	.
water	59:29	0:0	2	viewOnly
op	59:38	0:0	2	=
water	59:40	0:0	2	TRUE
water	59:44	0:0	2	;
water	60:4	0:0	2	p_sys
op	60:9	0:0	2	->
water	60:11	0:0	2	p_client
op	60:19	0:0	2	->
water	60:21	0:0	2	serverPort
op	60:32	0:0	2	=
water	60:34	0:0	2	(
water	60:36	0:0	2	url
op	60:39	0:0	2	.
water	60:40	0:0	2	i_port
op	60:47	0:0	2	>
water	60:49	0:0	2	0
water	60:51	0:0	2	)
water	60:53	0:0	2	?
water	60:55	0:0	2	url
op	60:58	0:0	2	.
water	60:59	0:0	2	i_port
water	60:66	0:0	2	:
water	60:68	0:0	2	5900
water	60:72	0:0	2	;
call	61:4	64:41	2	msg_Dbg
arg	61:13	61:20	3	p_demux
water	61:13	0:0	4	p_demux
arg	61:22	61:51	3	"VNC init %s host=%s port=%d"
water	61:22	0:0	4	"VNC init %s host=%s port=%d"
arg	62:13	62:34	3	p_demux->psz_location
water	62:13	0:0	4	p_demux
op	62:20	0:0	4	->
water	62:22	0:0	4	psz_location
arg	63:13	63:40	3	p_sys->p_client->serverHost
water	63:13	0:0	4	p_sys
op	63:18	0:0	4	->
water	63:20	0:0	4	p_client
op	63:28	0:0	4	->
water	63:30	0:0	4	serverHost
arg	64:13	64:41	3	p_sys->p_client->serverPort
water	64:13	0:0	4	p_sys
op	64:18	0:0	4	->
water	64:20	0:0	4	p_client
op	64:28	0:0	4	->
water	64:30	0:0	4	serverPort
water	64:42	0:0	2	;
call	65:4	65:23	2	vlc_UrlClean
arg	65:18	65:23	3	&url
op	65:18	0:0	4	&
water	65:19	0:0	4	url
water	65:24	0:0	2	;
call	67:4	67:66	2	rfbClientSetClientData
arg	67:28	67:43	3	p_sys->p_client
water	67:28	0:0	4	p_sys
op	67:33	0:0	4	->
water	67:35	0:0	4	p_client
arg	67:45	67:56	3	DemuxThread
water	67:45	0:0	4	DemuxThread
arg	67:58	67:66	3	p_demux
water	67:58	0:0	4	p_demux
water	67:67	0:0	2	;
water	68:4	0:0	2	p_demux
op	68:11	0:0	2	->
water	68:13	0:0	2	p_sys
op	68:19	0:0	2	=
water	68:21	0:0	2	p_sys
water	68:26	0:0	2	;
if	69:4	73:4	2	(!rfbInitClient (p_sys -> p_client ,NULL ,NULL ))
cond	69:8	69:52	3	!rfbInitClient (p_sys -> p_client ,NULL ,NULL )
op	69:8	0:0	4	!
call	69:9	69:52	4	rfbInitClient
arg	69:24	69:39	5	p_sys->p_client
water	69:24	0:0	6	p_sys
op	69:29	0:0	6	->
water	69:31	0:0	6	p_client
arg	69:41	69:45	5	NULL
water	69:41	0:0	6	NULL
arg	69:47	69:52	5	NULL
water	69:47	0:0	6	NULL
stmts	70:4	73:4	3	
water	70:4	0:0	4	{
call	71:8	71:56	4	msg_Err
arg	71:17	71:24	5	p_demux
water	71:17	0:0	6	p_demux
arg	71:26	71:56	5	"can't connect to RFB server"
water	71:26	0:0	6	"can't connect to RFB server"
water	71:57	0:0	4	;
goto	72:8	72:18	4	error
water	72:13	0:0	5	error
water	73:4	0:0	4	}
water	74:4	0:0	2	p_sys
op	74:9	0:0	2	->
water	74:11	0:0	2	i_starttime
op	74:23	0:0	2	=
call	74:25	74:31	2	mdate
water	74:32	0:0	2	;
if	75:4	79:4	2	(vlc_clone (& p_sys -> thread ,DemuxThread ,p_demux ,VLC_THREAD_PRIORITY_INPUT ) != VLC_SUCCESS)
cond	75:9	75:89	3	vlc_clone (& p_sys -> thread ,DemuxThread ,p_demux ,VLC_THREAD_PRIORITY_INPUT ) != VLC_SUCCESS
call	75:9	75:84	4	vlc_clone
arg	75:20	75:34	5	&p_sys->thread
op	75:20	0:0	6	&
water	75:21	0:0	6	p_sys
op	75:26	0:0	6	->
water	75:28	0:0	6	thread
arg	75:36	75:47	5	DemuxThread
water	75:36	0:0	6	DemuxThread
arg	75:49	75:56	5	p_demux
water	75:49	0:0	6	p_demux
arg	75:58	75:84	5	VLC_THREAD_PRIORITY_INPUT
water	75:58	0:0	6	VLC_THREAD_PRIORITY_INPUT
op	75:86	0:0	4	!=
water	75:89	0:0	4	VLC_SUCCESS
stmts	76:4	79:4	3	
water	76:4	0:0	4	{
call	77:8	77:47	4	msg_Err
arg	77:17	77:24	5	p_demux
water	77:17	0:0	6	p_demux
arg	77:26	77:47	5	"can't spawn thread"
water	77:26	0:0	6	"can't spawn thread"
water	77:48	0:0	4	;
goto	78:8	78:18	4	error
water	78:13	0:0	5	error
water	79:4	0:0	4	}
water	80:4	0:0	2	p_demux
op	80:11	0:0	2	->
water	80:13	0:0	2	pf_demux
op	80:22	0:0	2	=
water	80:24	0:0	2	NULL
water	80:28	0:0	2	;
water	81:4	0:0	2	p_demux
op	81:11	0:0	2	->
water	81:13	0:0	2	pf_control
op	81:24	0:0	2	=
water	81:26	0:0	2	Control
water	81:33	0:0	2	;
return	82:4	82:22	2	VLC_SUCCESS
water	82:11	0:0	3	VLC_SUCCESS
label	83:0	83:5	2	error :
call	84:4	84:16	2	free
arg	84:10	84:16	3	p_sys
water	84:10	0:0	4	p_sys
water	84:17	0:0	2	;
return	85:4	85:23	2	VLC_EGENERIC
water	85:11	0:0	3	VLC_EGENERIC

func	2:0	15:0	0	static void *	json_alloc
params	2:25	0:0	1	
param	2:26	2:44	2	json_state *	state
param	2:46	2:64	2	unsigned long	size
param	2:66	2:74	2	int	zero
stmnts	0:0	14:13	1	
decl	4:3	4:13	2	void	*mem
if	5:3	6:14	2	(( state -> ulong_max - state -> used_memory ) < size)
cond	5:7	5:49	3	( state -> ulong_max - state -> used_memory ) < size
water	5:7	0:0	4	(
water	5:8	0:0	4	state
op	5:13	0:0	4	->
water	5:15	0:0	4	ulong_max
op	5:25	0:0	4	-
water	5:27	0:0	4	state
op	5:32	0:0	4	->
water	5:34	0:0	4	used_memory
water	5:45	0:0	4	)
op	5:47	0:0	4	<
water	5:49	0:0	4	size
stmts	6:6	6:14	3	
return	6:6	6:14	4	0
water	6:13	0:0	5	0
if	7:3	11:3	2	(state -> settings . max_memory && ( state -> used_memory += size ) > state -> settings . max_memory)
cond	7:7	8:59	3	state -> settings . max_memory && ( state -> used_memory += size ) > state -> settings . max_memory
water	7:7	0:0	4	state
op	7:12	0:0	4	->
water	7:14	0:0	4	settings
op	7:22	0:0	4	.
water	7:23	0:0	4	max_memory
op	8:9	0:0	4	&&
water	8:12	0:0	4	(
water	8:13	0:0	4	state
op	8:18	0:0	4	->
water	8:20	0:0	4	used_memory
op	8:32	0:0	4	+=
water	8:35	0:0	4	size
water	8:39	0:0	4	)
op	8:41	0:0	4	>
water	8:43	0:0	4	state
op	8:48	0:0	4	->
water	8:50	0:0	4	settings
op	8:58	0:0	4	.
water	8:59	0:0	4	max_memory
stmts	9:3	11:3	3	
water	9:3	0:0	4	{
return	10:6	10:14	4	0
water	10:13	0:0	5	0
water	11:3	0:0	4	}
if	12:3	13:14	2	(! ( mem = zero ?calloc (size ,1 ) :malloc (size ) ))
cond	12:7	12:55	3	! ( mem = zero ?calloc (size ,1 ) :malloc (size ) )
op	12:7	0:0	4	!
water	12:9	0:0	4	(
water	12:10	0:0	4	mem
op	12:14	0:0	4	=
water	12:16	0:0	4	zero
water	12:21	0:0	4	?
call	12:23	12:38	4	calloc
arg	12:31	12:35	5	size
water	12:31	0:0	6	size
arg	12:37	12:38	5	1
water	12:37	0:0	6	1
water	12:40	0:0	4	:
call	12:42	12:54	4	malloc
arg	12:50	12:54	5	size
water	12:50	0:0	6	size
water	12:55	0:0	4	)
stmts	13:6	13:14	3	
return	13:6	13:14	4	0
water	13:13	0:0	5	0
return	14:3	14:13	2	mem
water	14:10	0:0	3	mem

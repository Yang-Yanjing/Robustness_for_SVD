func	2:0	53:0	0	static void	Display
params	2:19	0:0	1	
param	2:20	2:38	2	vout_display_t *	vd
param	2:40	2:58	2	picture_t *	picture
param	2:60	2:84	2	subpicture_t *	subpicture
stmnts	0:0	52:26	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
call	5:4	5:23	2	assert
arg	5:11	5:23	3	sys->display
water	5:11	0:0	4	sys
op	5:14	0:0	4	->
water	5:16	0:0	4	display
water	5:24	0:0	2	;
if	8:4	13:4	2	(IDirectDrawSurface2_IsLost (sys -> display ) == DDERR_SURFACELOST)
cond	8:8	8:52	3	IDirectDrawSurface2_IsLost (sys -> display ) == DDERR_SURFACELOST
call	8:8	8:47	4	IDirectDrawSurface2_IsLost
arg	8:35	8:47	5	sys->display
water	8:35	0:0	6	sys
op	8:38	0:0	6	->
water	8:40	0:0	6	display
op	8:49	0:0	4	==
water	8:52	0:0	4	DDERR_SURFACELOST
stmts	8:71	13:4	3	
water	8:71	0:0	4	{
if	9:8	12:8	4	(IDirectDrawSurface2_Restore (sys -> display ) == DD_OK)
cond	9:12	9:57	5	IDirectDrawSurface2_Restore (sys -> display ) == DD_OK
call	9:12	9:52	6	IDirectDrawSurface2_Restore
arg	9:40	9:52	7	sys->display
water	9:40	0:0	8	sys
op	9:43	0:0	8	->
water	9:45	0:0	8	display
op	9:54	0:0	6	==
water	9:57	0:0	6	DD_OK
stmts	9:64	12:8	5	
water	9:64	0:0	6	{
if	10:12	11:46	6	(sys -> use_overlay)
cond	10:16	10:21	7	sys -> use_overlay
water	10:16	0:0	8	sys
op	10:19	0:0	8	->
water	10:21	0:0	8	use_overlay
stmts	11:16	11:46	7	
call	11:16	11:45	8	DirectXUpdateOverlay
arg	11:37	11:39	9	vd
water	11:37	0:0	10	vd
arg	11:41	11:45	9	NULL
water	11:41	0:0	10	NULL
water	11:46	0:0	8	;
water	12:8	0:0	6	}
water	13:4	0:0	4	}
if	14:4	15:38	2	(sys -> restore_overlay)
cond	14:8	14:13	3	sys -> restore_overlay
water	14:8	0:0	4	sys
op	14:11	0:0	4	->
water	14:13	0:0	4	restore_overlay
stmts	15:8	15:38	3	
call	15:8	15:37	4	DirectXUpdateOverlay
arg	15:29	15:31	5	vd
water	15:29	0:0	6	vd
arg	15:33	15:37	5	NULL
water	15:33	0:0	6	NULL
water	15:38	0:0	4	;
call	17:4	17:25	2	DirectXUnlock
arg	17:18	17:25	3	picture
water	17:18	0:0	4	picture
water	17:26	0:0	2	;
if	18:4	26:4	2	(sys -> use_overlay)
cond	18:8	18:13	3	sys -> use_overlay
water	18:8	0:0	4	sys
op	18:11	0:0	4	->
water	18:13	0:0	4	use_overlay
stmts	18:26	26:4	3	
water	18:26	0:0	4	{
if	20:8	25:8	4	(picture -> p_sys -> surface != picture -> p_sys -> front_surface)
cond	20:12	20:55	5	picture -> p_sys -> surface != picture -> p_sys -> front_surface
water	20:12	0:0	6	picture
op	20:19	0:0	6	->
water	20:21	0:0	6	p_sys
op	20:26	0:0	6	->
water	20:28	0:0	6	surface
op	20:36	0:0	6	!=
water	20:39	0:0	6	picture
op	20:46	0:0	6	->
water	20:48	0:0	6	p_sys
op	20:53	0:0	6	->
water	20:55	0:0	6	front_surface
stmts	20:70	25:8	5	
water	20:70	0:0	6	{
decl	21:12	22:68	6	HRESULT	hr
op	21:23	0:0	6	=
call	21:25	22:67	7	IDirectDrawSurface2_Flip
arg	21:50	21:79	8	picture->p_sys->front_surface
water	21:50	0:0	9	picture
op	21:57	0:0	9	->
water	21:59	0:0	9	p_sys
op	21:64	0:0	9	->
water	21:66	0:0	9	front_surface
arg	22:50	22:54	8	NULL
water	22:50	0:0	9	NULL
arg	22:56	22:67	8	DDFLIP_WAIT
water	22:56	0:0	9	DDFLIP_WAIT
if	23:12	24:70	6	(hr != DD_OK)
cond	23:16	23:22	7	hr != DD_OK
water	23:16	0:0	8	hr
op	23:19	0:0	8	!=
water	23:22	0:0	8	DD_OK
stmts	24:16	24:70	7	
call	24:16	24:69	8	msg_Warn
arg	24:25	24:27	9	vd
water	24:25	0:0	10	vd
arg	24:29	24:65	9	"could not flip overlay (error %li)"
water	24:29	0:0	10	"could not flip overlay (error %li)"
arg	24:67	24:69	9	hr
water	24:67	0:0	10	hr
water	24:70	0:0	8	;
water	25:8	0:0	6	}
water	26:4	0:0	4	}
else	26:6	39:4	2
stmts	26:11	39:4	3	
water	26:11	0:0	4	{
decl	28:8	28:24	4	DDBLTFX	ddbltfx
call	29:8	29:44	4	ZeroMemory
arg	29:19	29:27	5	&ddbltfx
op	29:19	0:0	6	&
water	29:20	0:0	6	ddbltfx
arg	29:29	29:44	5	sizeof(ddbltfx)
op	29:29	0:0	6	sizeof
water	29:35	0:0	6	(
water	29:36	0:0	6	ddbltfx
water	29:43	0:0	6	)
water	29:45	0:0	4	;
water	30:8	0:0	4	ddbltfx
op	30:15	0:0	4	.
water	30:16	0:0	4	dwSize
op	30:23	0:0	4	=
op	30:25	0:0	4	sizeof
water	30:31	0:0	4	(
water	30:32	0:0	4	ddbltfx
water	30:39	0:0	4	)
water	30:40	0:0	4	;
water	31:8	0:0	4	ddbltfx
op	31:15	0:0	4	.
water	31:16	0:0	4	dwDDFX
op	31:23	0:0	4	=
water	31:25	0:0	4	DDBLTFX_NOTEARING
water	31:42	0:0	4	;
decl	32:8	36:67	4	HRESULT	hr
op	32:19	0:0	4	=
call	32:21	36:66	5	IDirectDrawSurface2_Blt
arg	32:45	32:57	6	sys->display
water	32:45	0:0	7	sys
op	32:48	0:0	7	->
water	32:50	0:0	7	display
arg	33:45	33:68	6	&sys->rect_dest_clipped
op	33:45	0:0	7	&
water	33:46	0:0	7	sys
op	33:49	0:0	7	->
water	33:51	0:0	7	rect_dest_clipped
arg	34:45	34:68	6	picture->p_sys->surface
water	34:45	0:0	7	picture
op	34:52	0:0	7	->
water	34:54	0:0	7	p_sys
op	34:59	0:0	7	->
water	34:61	0:0	7	surface
arg	35:45	35:67	6	&sys->rect_src_clipped
op	35:45	0:0	7	&
water	35:46	0:0	7	sys
op	35:49	0:0	7	->
water	35:51	0:0	7	rect_src_clipped
arg	36:45	36:56	6	DDBLT_ASYNC
water	36:45	0:0	7	DDBLT_ASYNC
arg	36:58	36:66	6	&ddbltfx
op	36:58	0:0	7	&
water	36:59	0:0	7	ddbltfx
if	37:8	38:66	4	(hr != DD_OK)
cond	37:12	37:18	5	hr != DD_OK
water	37:12	0:0	6	hr
op	37:15	0:0	6	!=
water	37:18	0:0	6	DD_OK
stmts	38:12	38:66	5	
call	38:12	38:65	6	msg_Warn
arg	38:21	38:23	7	vd
water	38:21	0:0	8	vd
arg	38:25	38:61	7	"could not blit surface (error %li)"
water	38:25	0:0	8	"could not blit surface (error %li)"
arg	38:63	38:65	7	hr
water	38:63	0:0	8	hr
water	38:66	0:0	6	;
water	39:4	0:0	4	}
call	40:4	40:23	2	DirectXLock
arg	40:16	40:23	3	picture
water	40:16	0:0	4	picture
water	40:24	0:0	2	;
if	41:4	49:4	2	(sys -> is_first_display)
cond	41:8	41:13	3	sys -> is_first_display
water	41:8	0:0	4	sys
op	41:11	0:0	4	->
water	41:13	0:0	4	is_first_display
stmts	41:31	49:4	3	
water	41:31	0:0	4	{
call	42:8	43:66	4	IDirectDraw_WaitForVerticalBlank
arg	42:41	42:54	5	sys->ddobject
water	42:41	0:0	6	sys
op	42:44	0:0	6	->
water	42:46	0:0	6	ddobject
arg	43:41	43:60	5	DDWAITVB_BLOCKBEGIN
water	43:41	0:0	6	DDWAITVB_BLOCKBEGIN
arg	43:62	43:66	5	NULL
water	43:62	0:0	6	NULL
water	43:67	0:0	4	;
if	44:8	48:8	4	(sys -> use_overlay)
cond	44:12	44:17	5	sys -> use_overlay
water	44:12	0:0	6	sys
op	44:15	0:0	6	->
water	44:17	0:0	6	use_overlay
stmts	44:30	48:8	5	
water	44:30	0:0	6	{
decl	45:12	45:64	6	HBRUSH	brush
op	45:25	0:0	6	=
call	45:27	45:63	7	CreateSolidBrush
arg	45:44	45:63	8	sys->i_rgb_colorkey
water	45:44	0:0	9	sys
op	45:47	0:0	9	->
water	45:49	0:0	9	i_rgb_colorkey
call	47:12	47:79	6	SetClassLongPtr
arg	47:28	47:42	7	sys->hvideownd
water	47:28	0:0	8	sys
op	47:31	0:0	8	->
water	47:33	0:0	8	hvideownd
arg	47:44	47:62	7	GCLP_HBRBACKGROUND
water	47:44	0:0	8	GCLP_HBRBACKGROUND
arg	47:64	47:79	7	(LONG_PTR)brush
water	47:64	0:0	8	(
water	47:65	0:0	8	LONG_PTR
water	47:73	0:0	8	)
water	47:74	0:0	8	brush
water	47:80	0:0	6	;
water	48:8	0:0	6	}
water	49:4	0:0	4	}
call	50:4	50:20	2	CommonDisplay
arg	50:18	50:20	3	vd
water	50:18	0:0	4	vd
water	50:21	0:0	2	;
call	51:4	51:27	2	picture_Release
arg	51:20	51:27	3	picture
water	51:20	0:0	4	picture
water	51:28	0:0	2	;
call	52:4	52:25	2	VLC_UNUSED
arg	52:15	52:25	3	subpicture
water	52:15	0:0	4	subpicture
water	52:26	0:0	2	;

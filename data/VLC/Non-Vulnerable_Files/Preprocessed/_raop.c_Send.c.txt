func	2:0	16:0	0	static int	Send
params	2:15	0:0	1	
param	2:17	2:40	2	sout_stream_t *	p_stream
param	2:42	2:66	2	sout_stream_id_sys_t *	id
param	3:17	3:35	2	block_t *	p_buffer
stmnts	0:0	15:22	1	
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
if	6:4	10:4	2	(id -> fmt . i_cat == AUDIO_ES && id == p_sys -> p_audio_stream)
cond	6:9	6:51	3	id -> fmt . i_cat == AUDIO_ES && id == p_sys -> p_audio_stream
water	6:9	0:0	4	id
op	6:11	0:0	4	->
water	6:13	0:0	4	fmt
op	6:16	0:0	4	.
water	6:17	0:0	4	i_cat
op	6:23	0:0	4	==
water	6:26	0:0	4	AUDIO_ES
op	6:35	0:0	4	&&
water	6:38	0:0	4	id
op	6:41	0:0	4	==
water	6:44	0:0	4	p_sys
op	6:49	0:0	4	->
water	6:51	0:0	4	p_audio_stream
stmts	7:4	10:4	3	
water	7:4	0:0	4	{
call	9:8	9:38	4	SendAudio
arg	9:19	9:27	5	p_stream
water	9:19	0:0	6	p_stream
arg	9:29	9:38	5	p_buffer
water	9:29	0:0	6	p_buffer
water	9:39	0:0	4	;
water	10:4	0:0	4	}
else	11:4	14:4	2
stmts	12:4	14:4	3	
water	12:4	0:0	4	{
call	13:8	13:37	4	block_ChainRelease
arg	13:28	13:37	5	p_buffer
water	13:28	0:0	6	p_buffer
water	13:38	0:0	4	;
water	14:4	0:0	4	}
return	15:4	15:22	2	VLC_SUCCESS
water	15:11	0:0	3	VLC_SUCCESS

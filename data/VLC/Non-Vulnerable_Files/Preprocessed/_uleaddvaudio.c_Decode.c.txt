func	2:0	50:0	0	static block_t *	Decode
params	2:22	0:0	1	
param	2:23	2:37	2	decoder_t *	dec
param	2:39	2:58	2	block_t * *	block_ptr
stmnts	0:0	49:15	1	
decl	4:4	4:36	2	decoder_sys_t	*sys
op	4:24	0:0	2	=
water	4:26	0:0	2	dec
op	4:29	0:0	2	->
water	4:31	0:0	2	p_sys
if	5:4	6:19	2	(! block_ptr || ! * block_ptr)
cond	5:8	5:24	3	! block_ptr || ! * block_ptr
op	5:8	0:0	4	!
water	5:9	0:0	4	block_ptr
op	5:19	0:0	4	||
op	5:22	0:0	4	!
op	5:23	0:0	4	*
water	5:24	0:0	4	block_ptr
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
decl	7:4	7:31	2	block_t	*block
op	7:19	0:0	2	=
op	7:21	0:0	2	*
water	7:22	0:0	2	block_ptr
if	8:4	14:4	2	(block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ))
cond	8:8	8:73	3	block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED )
water	8:8	0:0	4	block
op	8:13	0:0	4	->
water	8:15	0:0	4	i_flags
op	8:23	0:0	4	&
water	8:25	0:0	4	(
water	8:26	0:0	4	BLOCK_FLAG_DISCONTINUITY
op	8:51	0:0	4	|
water	8:53	0:0	4	BLOCK_FLAG_CORRUPTED
water	8:73	0:0	4	)
stmts	8:76	14:4	3	
water	8:76	0:0	4	{
if	9:8	10:8	4	(block -> i_flags & BLOCK_FLAG_CORRUPTED)
cond	9:12	9:29	5	block -> i_flags & BLOCK_FLAG_CORRUPTED
water	9:12	0:0	6	block
op	9:17	0:0	6	->
water	9:19	0:0	6	i_flags
op	9:27	0:0	6	&
water	9:29	0:0	6	BLOCK_FLAG_CORRUPTED
stmts	9:51	10:8	5	
water	9:51	0:0	6	{
water	0:0	0:0	6	STATEMENTS
water	10:8	0:0	6	}
call	11:8	11:34	4	date_Set
arg	11:17	11:31	5	&sys->end_date
op	11:17	0:0	6	&
water	11:18	0:0	6	sys
op	11:21	0:0	6	->
water	11:23	0:0	6	end_date
arg	11:33	11:34	5	0
water	11:33	0:0	6	0
water	11:35	0:0	4	;
call	12:8	12:27	4	block_Release
arg	12:22	12:27	5	block
water	12:22	0:0	6	block
water	12:28	0:0	4	;
return	13:8	13:19	4	NULL
water	13:15	0:0	5	NULL
water	14:4	0:0	4	}
if	15:4	17:46	2	(block -> i_pts > VLC_TS_INVALID && block -> i_pts !=date_Get (& sys -> end_date ))
cond	15:8	16:47	3	block -> i_pts > VLC_TS_INVALID && block -> i_pts !=date_Get (& sys -> end_date )
water	15:8	0:0	4	block
op	15:13	0:0	4	->
water	15:15	0:0	4	i_pts
op	15:21	0:0	4	>
water	15:23	0:0	4	VLC_TS_INVALID
op	15:38	0:0	4	&&
water	16:8	0:0	4	block
op	16:13	0:0	4	->
water	16:15	0:0	4	i_pts
op	16:21	0:0	4	!=
call	16:24	16:47	4	date_Get
arg	16:33	16:47	5	&sys->end_date
op	16:33	0:0	6	&
water	16:34	0:0	6	sys
op	16:37	0:0	6	->
water	16:39	0:0	6	end_date
stmts	17:8	17:46	3	
call	17:8	17:45	4	date_Set
arg	17:17	17:31	5	&sys->end_date
op	17:17	0:0	6	&
water	17:18	0:0	6	sys
op	17:21	0:0	6	->
water	17:23	0:0	6	end_date
arg	17:33	17:45	5	block->i_pts
water	17:33	0:0	6	block
op	17:38	0:0	6	->
water	17:40	0:0	6	i_pts
water	17:46	0:0	4	;
water	18:4	0:0	2	block
op	18:9	0:0	2	->
water	18:11	0:0	2	i_pts
op	18:17	0:0	2	=
water	18:19	0:0	2	VLC_TS_INVALID
water	18:33	0:0	2	;
if	19:4	23:4	2	(!date_Get (& sys -> end_date ))
cond	19:8	19:32	3	!date_Get (& sys -> end_date )
op	19:8	0:0	4	!
call	19:9	19:32	4	date_Get
arg	19:18	19:32	5	&sys->end_date
op	19:18	0:0	6	&
water	19:19	0:0	6	sys
op	19:22	0:0	6	->
water	19:24	0:0	6	end_date
stmts	19:35	23:4	3	
water	19:35	0:0	4	{
call	21:8	21:27	4	block_Release
arg	21:22	21:27	5	block
water	21:22	0:0	6	block
water	21:28	0:0	4	;
return	22:8	22:19	4	NULL
water	22:15	0:0	5	NULL
water	23:4	0:0	4	}
decl	24:4	24:61	2	const unsigned int	block_size
op	24:34	0:0	2	=
water	24:36	0:0	2	sys
op	24:39	0:0	2	->
water	24:41	0:0	2	is_pal
water	24:48	0:0	2	?
water	24:50	0:0	2	8640
water	24:55	0:0	2	:
water	24:57	0:0	2	7200
if	25:4	47:4	2	(block -> i_buffer >= block_size)
cond	25:8	25:27	3	block -> i_buffer >= block_size
water	25:8	0:0	4	block
op	25:13	0:0	4	->
water	25:15	0:0	4	i_buffer
op	25:24	0:0	4	>=
water	25:27	0:0	4	block_size
stmts	25:39	47:4	3	
water	25:39	0:0	4	{
decl	26:8	26:38	4	uint8_t	*src
op	26:21	0:0	4	=
water	26:23	0:0	4	block
op	26:28	0:0	4	->
water	26:30	0:0	4	p_buffer
water	27:8	0:0	4	block
op	27:13	0:0	4	->
water	27:15	0:0	4	i_buffer
op	27:24	0:0	4	-=
water	27:27	0:0	4	block_size
water	27:37	0:0	4	;
water	28:8	0:0	4	block
op	28:13	0:0	4	->
water	28:15	0:0	4	p_buffer
op	28:24	0:0	4	+=
water	28:27	0:0	4	block_size
water	28:37	0:0	4	;
decl	29:8	29:76	4	int	sample_count
op	29:25	0:0	4	=
call	29:27	29:75	5	dv_get_audio_sample_count
arg	29:53	29:62	6	&src[244]
op	29:53	0:0	7	&
water	29:54	0:0	7	src
op	29:57	0:0	7	[
water	29:58	0:0	7	244
op	29:61	0:0	7	]
arg	29:64	29:75	6	sys->is_pal
water	29:64	0:0	7	sys
op	29:67	0:0	7	->
water	29:69	0:0	7	is_pal
decl	30:8	30:67	4	block_t	*output
op	30:24	0:0	4	=
call	30:26	30:66	5	decoder_NewAudioBuffer
arg	30:49	30:52	6	dec
water	30:49	0:0	7	dec
arg	30:54	30:66	6	sample_count
water	30:54	0:0	7	sample_count
if	31:8	32:23	4	(! output)
cond	31:12	31:13	5	! output
op	31:12	0:0	6	!
water	31:13	0:0	6	output
stmts	32:12	32:23	5	
return	32:12	32:23	6	NULL
water	32:19	0:0	7	NULL
water	33:8	0:0	4	output
op	33:14	0:0	4	->
water	33:16	0:0	4	i_pts
op	33:25	0:0	4	=
call	33:27	33:50	4	date_Get
arg	33:36	33:50	5	&sys->end_date
op	33:36	0:0	6	&
water	33:37	0:0	6	sys
op	33:40	0:0	6	->
water	33:42	0:0	6	end_date
water	33:51	0:0	4	;
water	34:8	0:0	4	output
op	34:14	0:0	4	->
water	34:16	0:0	4	i_length
op	34:25	0:0	4	=
call	34:27	34:70	4	date_Increment
arg	34:42	34:56	5	&sys->end_date
op	34:42	0:0	6	&
water	34:43	0:0	6	sys
op	34:46	0:0	6	->
water	34:48	0:0	6	end_date
arg	34:58	34:70	5	sample_count
water	34:58	0:0	6	sample_count
op	34:72	0:0	4	-
water	34:74	0:0	4	output
op	34:80	0:0	4	->
water	34:82	0:0	4	i_pts
water	34:87	0:0	4	;
decl	35:8	35:49	4	int16_t	*dst
op	35:21	0:0	4	=
water	35:23	0:0	4	(
water	35:24	0:0	4	int16_t
op	35:31	0:0	4	*
water	35:32	0:0	4	)
water	35:33	0:0	4	output
op	35:39	0:0	4	->
water	35:41	0:0	4	p_buffer
for	36:8	45:8	4	( int i = 0 ;i < sample_count;i ++)
forinit	0:0	36:22	5	 int i = 0 ;
decl	36:13	36:22	6	int	i
op	36:19	0:0	6	=
water	36:21	0:0	6	0
cond	36:24	36:28	5	i < sample_count
water	36:24	0:0	6	i
op	36:26	0:0	6	<
water	36:28	0:0	6	sample_count
forexpr	36:42	36:43	5	i ++
water	36:42	0:0	6	i
op	36:43	0:0	6	++
stmts	36:47	45:8	5	
water	36:47	0:0	6	{
decl	37:10	37:50	6	const uint8_t	*v
op	37:27	0:0	6	=
op	37:29	0:0	6	&
water	37:30	0:0	6	src
op	37:33	0:0	6	[
water	37:34	0:0	6	sys
op	37:37	0:0	6	->
water	37:39	0:0	6	shuffle
op	37:46	0:0	6	[
water	37:47	0:0	6	i
op	37:48	0:0	6	]
op	37:49	0:0	6	]
if	38:10	41:10	6	(sys -> is_12bit)
cond	38:14	38:19	7	sys -> is_12bit
water	38:14	0:0	8	sys
op	38:17	0:0	8	->
water	38:19	0:0	8	is_12bit
stmts	38:29	41:10	7	
water	38:29	0:0	8	{
op	39:14	0:0	8	*
water	39:15	0:0	8	dst
op	39:18	0:0	8	++
op	39:21	0:0	8	=
call	39:23	39:73	8	dv_audio_12to16
arg	39:39	39:73	9	(v[0]<<4)|((v[2]>>4)&0x0f)
water	39:39	0:0	10	(
water	39:40	0:0	10	v
op	39:41	0:0	10	[
water	39:42	0:0	10	0
op	39:43	0:0	10	]
op	39:45	0:0	10	<<
water	39:48	0:0	10	4
water	39:49	0:0	10	)
op	39:51	0:0	10	|
water	39:53	0:0	10	(
water	39:54	0:0	10	(
water	39:55	0:0	10	v
op	39:56	0:0	10	[
water	39:57	0:0	10	2
op	39:58	0:0	10	]
op	39:60	0:0	10	>>
water	39:63	0:0	10	4
water	39:64	0:0	10	)
op	39:66	0:0	10	&
water	39:68	0:0	10	0
water	39:69	0:0	10	x0f
water	39:72	0:0	10	)
water	39:74	0:0	8	;
op	40:14	0:0	8	*
water	40:15	0:0	8	dst
op	40:18	0:0	8	++
op	40:21	0:0	8	=
call	40:23	40:73	8	dv_audio_12to16
arg	40:39	40:73	9	(v[1]<<4)|((v[2]>>0)&0x0f)
water	40:39	0:0	10	(
water	40:40	0:0	10	v
op	40:41	0:0	10	[
water	40:42	0:0	10	1
op	40:43	0:0	10	]
op	40:45	0:0	10	<<
water	40:48	0:0	10	4
water	40:49	0:0	10	)
op	40:51	0:0	10	|
water	40:53	0:0	10	(
water	40:54	0:0	10	(
water	40:55	0:0	10	v
op	40:56	0:0	10	[
water	40:57	0:0	10	2
op	40:58	0:0	10	]
op	40:60	0:0	10	>>
water	40:63	0:0	10	0
water	40:64	0:0	10	)
op	40:66	0:0	10	&
water	40:68	0:0	10	0
water	40:69	0:0	10	x0f
water	40:72	0:0	10	)
water	40:74	0:0	8	;
water	41:10	0:0	8	}
else	41:12	44:10	6
stmts	41:17	44:10	7	
water	41:17	0:0	8	{
op	42:14	0:0	8	*
water	42:15	0:0	8	dst
op	42:18	0:0	8	++
op	42:21	0:0	8	=
call	42:23	42:35	8	GetWBE
arg	42:30	42:35	9	&v[0]
op	42:30	0:0	10	&
water	42:31	0:0	10	v
op	42:32	0:0	10	[
water	42:33	0:0	10	0
op	42:34	0:0	10	]
water	42:36	0:0	8	;
op	43:14	0:0	8	*
water	43:15	0:0	8	dst
op	43:18	0:0	8	++
op	43:21	0:0	8	=
call	43:23	43:59	8	GetWBE
arg	43:30	43:59	9	&v[sys->is_pal?4320:3600]
op	43:30	0:0	10	&
water	43:31	0:0	10	v
op	43:32	0:0	10	[
water	43:33	0:0	10	sys
op	43:36	0:0	10	->
water	43:38	0:0	10	is_pal
water	43:45	0:0	10	?
water	43:47	0:0	10	4320
water	43:52	0:0	10	:
water	43:54	0:0	10	3600
op	43:58	0:0	10	]
water	43:60	0:0	8	;
water	44:10	0:0	8	}
water	45:8	0:0	6	}
return	46:8	46:21	4	output
water	46:15	0:0	5	output
water	47:4	0:0	4	}
call	48:4	48:23	2	block_Release
arg	48:18	48:23	3	block
water	48:18	0:0	4	block
water	48:24	0:0	2	;
return	49:4	49:15	2	NULL
water	49:11	0:0	3	NULL

func	2:0	168:0	0	static int	OpenVideo
params	2:20	0:0	1	
param	2:22	2:39	2	decoder_t *	p_dec
stmnts	0:0	167:23	1	
decl	5:4	5:60	2	decoder_sys_t	*p_sys
op	5:25	0:0	2	=
call	5:27	5:59	3	malloc
arg	5:35	5:59	4	sizeof(decoder_sys_t)
op	5:35	0:0	5	sizeof
water	5:41	0:0	5	(
water	5:43	0:0	5	decoder_sys_t
water	5:57	0:0	5	)
if	6:4	7:25	2	(! p_sys)
cond	6:8	6:9	3	! p_sys
op	6:8	0:0	4	!
water	6:9	0:0	4	p_sys
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
decl	8:4	8:48	2	long	i_result
decl	9:4	9:44	2	ComponentDescription	desc
decl	10:4	10:44	2	Component	prev
decl	11:4	11:44	2	ComponentResult	cres
decl	12:4	12:44	2	ImageSubCodecDecompressCapabilities	icap
decl	13:4	13:45	2	CodecInfo	cinfo
decl	14:4	14:43	2	ImageDescription	*id
decl	15:4	15:30	2	char	fcc[4]
decl	16:4	16:42	2	int	i_vide
op	16:19	0:0	2	=
water	16:21	0:0	2	p_dec
op	16:26	0:0	2	->
water	16:28	0:0	2	fmt_in
op	16:34	0:0	2	.
water	16:35	0:0	2	i_extra
decl	17:4	17:43	2	uint8_t	*p_vide
op	17:20	0:0	2	=
water	17:22	0:0	2	p_dec
op	17:27	0:0	2	->
water	17:29	0:0	2	fmt_in
op	17:35	0:0	2	.
water	17:36	0:0	2	p_extra
water	18:4	0:0	2	p_dec
op	18:9	0:0	2	->
water	18:11	0:0	2	p_sys
op	18:17	0:0	2	=
water	18:19	0:0	2	p_sys
water	18:24	0:0	2	;
water	19:4	0:0	2	p_dec
op	19:9	0:0	2	->
water	19:11	0:0	2	pf_decode_video
op	19:27	0:0	2	=
water	19:29	0:0	2	DecodeVideo
water	19:40	0:0	2	;
water	20:4	0:0	2	p_sys
op	20:9	0:0	2	->
water	20:11	0:0	2	i_late
op	20:18	0:0	2	=
water	20:20	0:0	2	0
water	20:21	0:0	2	;
if	21:4	26:4	2	(i_vide <= 0)
cond	21:8	21:18	3	i_vide <= 0
water	21:8	0:0	4	i_vide
op	21:15	0:0	4	<=
water	21:18	0:0	4	0
stmts	22:4	26:4	3	
water	22:4	0:0	4	{
call	23:8	23:45	4	msg_Err
arg	23:17	23:22	5	p_dec
water	23:17	0:0	6	p_dec
arg	23:24	23:45	5	"missing extra info"
water	23:24	0:0	6	"missing extra info"
water	23:46	0:0	4	;
call	24:8	24:20	4	free
arg	24:14	24:20	5	p_sys
water	24:14	0:0	6	p_sys
water	24:21	0:0	4	;
return	25:8	25:27	4	VLC_EGENERIC
water	25:15	0:0	5	VLC_EGENERIC
water	26:4	0:0	4	}
if	27:4	28:58	2	(p_dec -> fmt_in . i_original_fourcc)
cond	27:8	27:22	3	p_dec -> fmt_in . i_original_fourcc
water	27:8	0:0	4	p_dec
op	27:13	0:0	4	->
water	27:15	0:0	4	fmt_in
op	27:21	0:0	4	.
water	27:22	0:0	4	i_original_fourcc
stmts	28:8	28:58	3	
call	28:8	28:57	4	memcpy
arg	28:16	28:19	5	fcc
water	28:16	0:0	6	fcc
arg	28:21	28:53	5	&p_dec->fmt_in.i_original_fourcc
op	28:21	0:0	6	&
water	28:22	0:0	6	p_dec
op	28:27	0:0	6	->
water	28:29	0:0	6	fmt_in
op	28:35	0:0	6	.
water	28:36	0:0	6	i_original_fourcc
arg	28:55	28:57	5	4
water	28:55	0:0	6	4
water	28:58	0:0	4	;
else	29:4	30:48	2
stmts	30:8	30:48	3	
call	30:8	30:47	4	memcpy
arg	30:16	30:19	5	fcc
water	30:16	0:0	6	fcc
arg	30:21	30:43	5	&p_dec->fmt_in.i_codec
op	30:21	0:0	6	&
water	30:22	0:0	6	p_dec
op	30:27	0:0	6	->
water	30:29	0:0	6	fmt_in
op	30:35	0:0	6	.
water	30:36	0:0	6	i_codec
arg	30:45	30:47	5	4
water	30:45	0:0	6	4
water	30:48	0:0	4	;
call	31:4	32:76	2	msg_Dbg
arg	31:13	31:18	3	p_dec
water	31:13	0:0	4	p_dec
arg	31:20	31:49	3	"quicktime_video %4.4s %dx%d"
water	31:20	0:0	4	"quicktime_video %4.4s %dx%d"
arg	32:13	32:16	3	fcc
water	32:13	0:0	4	fcc
arg	32:18	32:45	3	p_dec->fmt_in.video.i_width
water	32:18	0:0	4	p_dec
op	32:23	0:0	4	->
water	32:25	0:0	4	fmt_in
op	32:31	0:0	4	.
water	32:32	0:0	4	video
op	32:37	0:0	4	.
water	32:38	0:0	4	i_width
arg	32:47	32:76	3	p_dec->fmt_in.video.i_height
water	32:47	0:0	4	p_dec
op	32:52	0:0	4	->
water	32:54	0:0	4	fmt_in
op	32:60	0:0	4	.
water	32:61	0:0	4	video
op	32:66	0:0	4	.
water	32:67	0:0	4	i_height
water	32:77	0:0	2	;
call	34:4	34:30	2	vlc_mutex_lock
arg	34:20	34:30	3	&qt_mutex
op	34:20	0:0	4	&
water	34:21	0:0	4	qt_mutex
water	34:31	0:0	2	;
call	36:4	36:16	2	EnterMovies
water	36:17	0:0	2	;
if	38:4	42:4	2	(QTVideoInit (p_dec ))
cond	38:8	38:27	3	QTVideoInit (p_dec )
call	38:8	38:27	4	QTVideoInit
arg	38:21	38:27	5	p_dec
water	38:21	0:0	6	p_dec
stmts	39:4	42:4	3	
water	39:4	0:0	4	{
call	40:8	40:46	4	msg_Err
arg	40:17	40:22	5	p_dec
water	40:17	0:0	6	p_dec
arg	40:24	40:46	5	"cannot initialize QT"
water	40:24	0:0	6	"cannot initialize QT"
water	40:47	0:0	4	;
goto	41:8	41:23	4	exit_error
water	41:13	0:0	5	exit_error
water	42:4	0:0	4	}
if	44:4	48:4	2	(( i_result =p_sys -> InitializeQTML (6 + 16 ) ))
cond	44:8	44:53	3	( i_result =p_sys -> InitializeQTML (6 + 16 ) )
water	44:8	0:0	4	(
water	44:10	0:0	4	i_result
op	44:19	0:0	4	=
call	44:21	44:51	4	p_sys->InitializeQTML
arg	44:44	44:51	5	6+16
water	44:44	0:0	6	6
op	44:46	0:0	6	+
water	44:48	0:0	6	16
water	44:53	0:0	4	)
stmts	45:4	48:4	3	
water	45:4	0:0	4	{
call	46:8	46:70	4	msg_Dbg
arg	46:17	46:22	5	p_dec
water	46:17	0:0	6	p_dec
arg	46:24	46:54	5	"error on InitializeQTML = %d"
water	46:24	0:0	6	"error on InitializeQTML = %d"
arg	46:56	46:70	5	(int)i_result
water	46:56	0:0	6	(
water	46:57	0:0	6	int
water	46:60	0:0	6	)
water	46:61	0:0	6	i_result
water	46:71	0:0	4	;
goto	47:8	47:23	4	exit_error
water	47:13	0:0	5	exit_error
water	48:4	0:0	4	}
call	51:4	51:53	2	memset
arg	51:12	51:17	3	&desc
op	51:12	0:0	4	&
water	51:13	0:0	4	desc
arg	51:19	51:20	3	0
water	51:19	0:0	4	0
arg	51:22	51:53	3	sizeof(ComponentDescription)
op	51:22	0:0	4	sizeof
water	51:28	0:0	4	(
water	51:30	0:0	4	ComponentDescription
water	51:51	0:0	4	)
water	51:54	0:0	2	;
water	52:4	0:0	2	desc
op	52:8	0:0	2	.
water	52:9	0:0	2	componentType
op	52:28	0:0	2	=
call	52:30	52:54	2	FCC
arg	52:35	52:38	3	'i'
water	52:35	0:0	4	'i'
arg	52:40	52:43	3	'm'
water	52:40	0:0	4	'm'
arg	52:45	52:48	3	'd'
water	52:45	0:0	4	'd'
arg	52:50	52:54	3	'c'
water	52:50	0:0	4	'c'
water	52:55	0:0	2	;
water	53:4	0:0	2	desc
op	53:8	0:0	2	.
water	53:9	0:0	2	componentSubType
op	53:28	0:0	2	=
call	53:30	53:66	2	FCC
arg	53:35	53:41	3	fcc[0]
water	53:35	0:0	4	fcc
op	53:38	0:0	4	[
water	53:39	0:0	4	0
op	53:40	0:0	4	]
arg	53:43	53:49	3	fcc[1]
water	53:43	0:0	4	fcc
op	53:46	0:0	4	[
water	53:47	0:0	4	1
op	53:48	0:0	4	]
arg	53:51	53:57	3	fcc[2]
water	53:51	0:0	4	fcc
op	53:54	0:0	4	[
water	53:55	0:0	4	2
op	53:56	0:0	4	]
arg	53:59	53:66	3	fcc[3]
water	53:59	0:0	4	fcc
op	53:62	0:0	4	[
water	53:63	0:0	4	3
op	53:64	0:0	4	]
water	53:67	0:0	2	;
water	54:4	0:0	2	desc
op	54:8	0:0	2	.
water	54:9	0:0	2	componentManufacturer
op	54:31	0:0	2	=
water	54:33	0:0	2	0
water	54:34	0:0	2	;
water	55:4	0:0	2	desc
op	55:8	0:0	2	.
water	55:9	0:0	2	componentFlags
op	55:31	0:0	2	=
water	55:33	0:0	2	0
water	55:34	0:0	2	;
water	56:4	0:0	2	desc
op	56:8	0:0	2	.
water	56:9	0:0	2	componentFlagsMask
op	56:31	0:0	2	=
water	56:33	0:0	2	0
water	56:34	0:0	2	;
if	57:4	61:4	2	(! ( prev =p_sys -> FindNextComponent (NULL ,& desc ) ))
cond	57:8	57:58	3	! ( prev =p_sys -> FindNextComponent (NULL ,& desc ) )
op	57:8	0:0	4	!
water	57:9	0:0	4	(
water	57:11	0:0	4	prev
op	57:16	0:0	4	=
call	57:18	57:56	4	p_sys->FindNextComponent
arg	57:44	57:48	5	NULL
water	57:44	0:0	6	NULL
arg	57:50	57:56	5	&desc
op	57:50	0:0	6	&
water	57:51	0:0	6	desc
water	57:58	0:0	4	)
stmts	58:4	61:4	3	
water	58:4	0:0	4	{
call	59:8	59:58	4	msg_Err
arg	59:17	59:22	5	p_dec
water	59:17	0:0	6	p_dec
arg	59:24	59:58	5	"cannot find requested component"
water	59:24	0:0	6	"cannot find requested component"
water	59:59	0:0	4	;
goto	60:8	60:23	4	exit_error
water	60:13	0:0	5	exit_error
water	61:4	0:0	4	}
call	62:4	62:46	2	msg_Dbg
arg	62:13	62:18	3	p_dec
water	62:13	0:0	4	p_dec
arg	62:20	62:39	3	"component id=0x%p"
water	62:20	0:0	4	"component id=0x%p"
arg	62:41	62:46	3	prev
water	62:41	0:0	4	prev
water	62:47	0:0	2	;
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	ci
op	63:14	0:0	2	=
call	63:17	63:44	2	p_sys->OpenComponent
arg	63:39	63:44	3	prev
water	63:39	0:0	4	prev
water	63:45	0:0	2	;
call	64:4	64:59	2	msg_Dbg
arg	64:13	64:18	3	p_dec
water	64:13	0:0	4	p_dec
arg	64:20	64:47	3	"component instance p=0x%p"
water	64:20	0:0	4	"component instance p=0x%p"
arg	64:49	64:59	3	p_sys->ci
water	64:49	0:0	4	p_sys
op	64:54	0:0	4	->
water	64:56	0:0	4	ci
water	64:60	0:0	2	;
call	65:4	65:68	2	memset
arg	65:12	65:17	3	&icap
op	65:12	0:0	4	&
water	65:13	0:0	4	icap
arg	65:19	65:20	3	0
water	65:19	0:0	4	0
arg	65:22	65:68	3	sizeof(ImageSubCodecDecompressCapabilities)
op	65:22	0:0	4	sizeof
water	65:28	0:0	4	(
water	65:30	0:0	4	ImageSubCodecDecompressCapabilities
water	65:66	0:0	4	)
water	65:69	0:0	2	;
water	66:4	0:0	2	cres
op	66:9	0:0	2	=
call	66:12	66:58	2	p_sys->ImageCodecInitialize
arg	66:41	66:50	3	p_sys->ci
water	66:41	0:0	4	p_sys
op	66:46	0:0	4	->
water	66:48	0:0	4	ci
arg	66:52	66:58	3	&icap
op	66:52	0:0	4	&
water	66:53	0:0	4	icap
water	66:59	0:0	2	;
call	67:4	68:76	2	msg_Dbg
arg	67:13	67:18	3	p_dec
water	67:13	0:0	4	p_dec
arg	67:20	67:61	3	"ImageCodecInitialize->0x%X size=%d (%d)"
water	67:20	0:0	4	"ImageCodecInitialize->0x%X size=%d (%d)"
arg	68:13	68:22	3	(int)cres
water	68:13	0:0	4	(
water	68:14	0:0	4	int
water	68:17	0:0	4	)
water	68:18	0:0	4	cres
arg	68:24	68:44	3	(int)icap.recordSize
water	68:24	0:0	4	(
water	68:25	0:0	4	int
water	68:28	0:0	4	)
water	68:29	0:0	4	icap
op	68:33	0:0	4	.
water	68:34	0:0	4	recordSize
arg	68:46	68:76	3	(int)icap.decompressRecordSize
water	68:46	0:0	4	(
water	68:47	0:0	4	int
water	68:50	0:0	4	)
water	68:51	0:0	4	icap
op	68:55	0:0	4	.
water	68:56	0:0	4	decompressRecordSize
water	68:77	0:0	2	;
call	69:4	69:43	2	memset
arg	69:12	69:18	3	&cinfo
op	69:12	0:0	4	&
water	69:13	0:0	4	cinfo
arg	69:20	69:21	3	0
water	69:20	0:0	4	0
arg	69:23	69:43	3	sizeof(CodecInfo)
op	69:23	0:0	4	sizeof
water	69:29	0:0	4	(
water	69:31	0:0	4	CodecInfo
water	69:41	0:0	4	)
water	69:44	0:0	2	;
water	70:4	0:0	2	cres
op	70:9	0:0	2	=
call	70:12	70:61	2	p_sys->ImageCodecGetCodecInfo
arg	70:43	70:52	3	p_sys->ci
water	70:43	0:0	4	p_sys
op	70:48	0:0	4	->
water	70:50	0:0	4	ci
arg	70:54	70:61	3	&cinfo
op	70:54	0:0	4	&
water	70:55	0:0	4	cinfo
water	70:62	0:0	2	;
call	71:4	75:45	2	msg_Dbg
arg	71:13	71:18	3	p_dec
water	71:13	0:0	4	p_dec
arg	72:13	72:59	3	"Flags: compr: 0x%x decomp: 0x%x format: 0x%x"
water	72:13	0:0	4	"Flags: compr: 0x%x decomp: 0x%x format: 0x%x"
arg	73:13	73:46	3	(unsignedint)cinfo.compressFlags
water	73:13	0:0	4	(
water	73:14	0:0	4	unsigned
water	73:23	0:0	4	int
water	73:26	0:0	4	)
water	73:27	0:0	4	cinfo
op	73:32	0:0	4	.
water	73:33	0:0	4	compressFlags
arg	74:13	74:48	3	(unsignedint)cinfo.decompressFlags
water	74:13	0:0	4	(
water	74:14	0:0	4	unsigned
water	74:23	0:0	4	int
water	74:26	0:0	4	)
water	74:27	0:0	4	cinfo
op	74:32	0:0	4	.
water	74:33	0:0	4	decompressFlags
arg	75:13	75:45	3	(unsignedint)cinfo.formatFlags
water	75:13	0:0	4	(
water	75:14	0:0	4	unsigned
water	75:23	0:0	4	int
water	75:26	0:0	4	)
water	75:27	0:0	4	cinfo
op	75:32	0:0	4	.
water	75:33	0:0	4	formatFlags
water	75:46	0:0	2	;
call	76:4	78:49	2	msg_Dbg
arg	76:13	76:18	3	p_dec
water	76:13	0:0	4	p_dec
arg	76:20	76:55	3	"quicktime_video: Codec name: %.*s"
water	76:20	0:0	4	"quicktime_video: Codec name: %.*s"
arg	77:13	77:49	3	((unsignedchar*)&cinfo.typeName)[0]
water	77:13	0:0	4	(
water	77:14	0:0	4	(
water	77:15	0:0	4	unsigned
water	77:24	0:0	4	char
op	77:28	0:0	4	*
water	77:29	0:0	4	)
op	77:30	0:0	4	&
water	77:31	0:0	4	cinfo
op	77:36	0:0	4	.
water	77:37	0:0	4	typeName
water	77:45	0:0	4	)
op	77:46	0:0	4	[
water	77:47	0:0	4	0
op	77:48	0:0	4	]
arg	78:13	78:49	3	((unsignedchar*)&cinfo.typeName)+1
water	78:13	0:0	4	(
water	78:14	0:0	4	(
water	78:15	0:0	4	unsigned
water	78:24	0:0	4	char
op	78:28	0:0	4	*
water	78:29	0:0	4	)
op	78:30	0:0	4	&
water	78:31	0:0	4	cinfo
op	78:36	0:0	4	.
water	78:37	0:0	4	typeName
water	78:45	0:0	4	)
op	78:46	0:0	4	+
water	78:47	0:0	4	1
water	78:50	0:0	2	;
water	80:4	0:0	2	p_sys
op	80:9	0:0	2	->
water	80:11	0:0	2	OutBufferRect
op	80:24	0:0	2	.
water	80:25	0:0	2	top
op	80:32	0:0	2	=
water	80:34	0:0	2	0
water	80:35	0:0	2	;
water	81:4	0:0	2	p_sys
op	81:9	0:0	2	->
water	81:11	0:0	2	OutBufferRect
op	81:24	0:0	2	.
water	81:25	0:0	2	left
op	81:32	0:0	2	=
water	81:34	0:0	2	0
water	81:35	0:0	2	;
water	82:4	0:0	2	p_sys
op	82:9	0:0	2	->
water	82:11	0:0	2	OutBufferRect
op	82:24	0:0	2	.
water	82:25	0:0	2	right
op	82:32	0:0	2	=
water	82:34	0:0	2	p_dec
op	82:39	0:0	2	->
water	82:41	0:0	2	fmt_in
op	82:47	0:0	2	.
water	82:48	0:0	2	video
op	82:53	0:0	2	.
water	82:54	0:0	2	i_width
water	82:61	0:0	2	;
water	83:4	0:0	2	p_sys
op	83:9	0:0	2	->
water	83:11	0:0	2	OutBufferRect
op	83:24	0:0	2	.
water	83:25	0:0	2	bottom
op	83:32	0:0	2	=
water	83:34	0:0	2	p_dec
op	83:39	0:0	2	->
water	83:41	0:0	2	fmt_in
op	83:47	0:0	2	.
water	83:48	0:0	2	video
op	83:53	0:0	2	.
water	83:54	0:0	2	i_height
water	83:62	0:0	2	;
call	85:4	85:41	2	msg_Dbg
arg	85:13	85:18	3	p_dec
water	85:13	0:0	4	p_dec
arg	85:20	85:31	3	"vide = %d"
water	85:20	0:0	4	"vide = %d"
arg	85:33	85:41	3	i_vide
water	85:33	0:0	4	i_vide
water	85:42	0:0	2	;
water	86:4	0:0	2	id
op	86:7	0:0	2	=
call	86:9	86:62	2	malloc
arg	86:17	86:62	3	sizeof(ImageDescription)+(i_vide-70)
op	86:17	0:0	4	sizeof
water	86:23	0:0	4	(
water	86:25	0:0	4	ImageDescription
water	86:42	0:0	4	)
op	86:44	0:0	4	+
water	86:46	0:0	4	(
water	86:48	0:0	4	i_vide
op	86:55	0:0	4	-
water	86:57	0:0	4	70
water	86:60	0:0	4	)
water	86:63	0:0	2	;
if	87:4	88:23	2	(! id)
cond	87:8	87:9	3	! id
op	87:8	0:0	4	!
water	87:9	0:0	4	id
stmts	88:8	88:23	3	
goto	88:8	88:23	4	exit_error
water	88:13	0:0	5	exit_error
water	89:4	0:0	2	id
op	89:6	0:0	2	->
water	89:8	0:0	2	idSize
op	89:24	0:0	2	=
op	89:26	0:0	2	sizeof
water	89:32	0:0	2	(
water	89:34	0:0	2	ImageDescription
water	89:51	0:0	2	)
op	89:53	0:0	2	+
water	89:55	0:0	2	(
water	89:57	0:0	2	i_vide
op	89:64	0:0	2	-
water	89:66	0:0	2	70
water	89:69	0:0	2	)
water	89:70	0:0	2	;
water	90:4	0:0	2	id
op	90:6	0:0	2	->
water	90:8	0:0	2	cType
op	90:24	0:0	2	=
call	90:26	90:62	2	FCC
arg	90:31	90:37	3	fcc[0]
water	90:31	0:0	4	fcc
op	90:34	0:0	4	[
water	90:35	0:0	4	0
op	90:36	0:0	4	]
arg	90:39	90:45	3	fcc[1]
water	90:39	0:0	4	fcc
op	90:42	0:0	4	[
water	90:43	0:0	4	1
op	90:44	0:0	4	]
arg	90:47	90:53	3	fcc[2]
water	90:47	0:0	4	fcc
op	90:50	0:0	4	[
water	90:51	0:0	4	2
op	90:52	0:0	4	]
arg	90:55	90:62	3	fcc[3]
water	90:55	0:0	4	fcc
op	90:58	0:0	4	[
water	90:59	0:0	4	3
op	90:60	0:0	4	]
water	90:63	0:0	2	;
water	91:4	0:0	2	id
op	91:6	0:0	2	->
water	91:8	0:0	2	version
op	91:24	0:0	2	=
call	91:26	91:47	2	GetWBE
arg	91:35	91:47	3	p_vide+0
water	91:35	0:0	4	p_vide
op	91:42	0:0	4	+
water	91:45	0:0	4	0
water	91:48	0:0	2	;
water	92:4	0:0	2	id
op	92:6	0:0	2	->
water	92:8	0:0	2	revisionLevel
op	92:24	0:0	2	=
call	92:26	92:47	2	GetWBE
arg	92:35	92:47	3	p_vide+2
water	92:35	0:0	4	p_vide
op	92:42	0:0	4	+
water	92:45	0:0	4	2
water	92:48	0:0	2	;
water	93:4	0:0	2	id
op	93:6	0:0	2	->
water	93:8	0:0	2	vendor
op	93:24	0:0	2	=
call	93:26	93:47	2	GetDWBE
arg	93:35	93:47	3	p_vide+4
water	93:35	0:0	4	p_vide
op	93:42	0:0	4	+
water	93:45	0:0	4	4
water	93:48	0:0	2	;
water	94:4	0:0	2	id
op	94:6	0:0	2	->
water	94:8	0:0	2	temporalQuality
op	94:24	0:0	2	=
call	94:26	94:47	2	GetDWBE
arg	94:35	94:47	3	p_vide+8
water	94:35	0:0	4	p_vide
op	94:42	0:0	4	+
water	94:45	0:0	4	8
water	94:48	0:0	2	;
water	95:4	0:0	2	id
op	95:6	0:0	2	->
water	95:8	0:0	2	spatialQuality
op	95:24	0:0	2	=
call	95:26	95:47	2	GetDWBE
arg	95:35	95:47	3	p_vide+12
water	95:35	0:0	4	p_vide
op	95:42	0:0	4	+
water	95:44	0:0	4	12
water	95:48	0:0	2	;
water	96:4	0:0	2	id
op	96:6	0:0	2	->
water	96:8	0:0	2	width
op	96:24	0:0	2	=
call	96:26	96:47	2	GetWBE
arg	96:35	96:47	3	p_vide+16
water	96:35	0:0	4	p_vide
op	96:42	0:0	4	+
water	96:44	0:0	4	16
water	96:48	0:0	2	;
water	97:4	0:0	2	id
op	97:6	0:0	2	->
water	97:8	0:0	2	height
op	97:24	0:0	2	=
call	97:26	97:47	2	GetWBE
arg	97:35	97:47	3	p_vide+18
water	97:35	0:0	4	p_vide
op	97:42	0:0	4	+
water	97:44	0:0	4	18
water	97:48	0:0	2	;
water	98:4	0:0	2	id
op	98:6	0:0	2	->
water	98:8	0:0	2	hRes
op	98:24	0:0	2	=
call	98:26	98:47	2	GetDWBE
arg	98:35	98:47	3	p_vide+20
water	98:35	0:0	4	p_vide
op	98:42	0:0	4	+
water	98:44	0:0	4	20
water	98:48	0:0	2	;
water	99:4	0:0	2	id
op	99:6	0:0	2	->
water	99:8	0:0	2	vRes
op	99:24	0:0	2	=
call	99:26	99:47	2	GetDWBE
arg	99:35	99:47	3	p_vide+24
water	99:35	0:0	4	p_vide
op	99:42	0:0	4	+
water	99:44	0:0	4	24
water	99:48	0:0	2	;
water	100:4	0:0	2	id
op	100:6	0:0	2	->
water	100:8	0:0	2	dataSize
op	100:24	0:0	2	=
call	100:26	100:47	2	GetDWBE
arg	100:35	100:47	3	p_vide+28
water	100:35	0:0	4	p_vide
op	100:42	0:0	4	+
water	100:44	0:0	4	28
water	100:48	0:0	2	;
water	101:4	0:0	2	id
op	101:6	0:0	2	->
water	101:8	0:0	2	frameCount
op	101:24	0:0	2	=
call	101:26	101:47	2	GetWBE
arg	101:35	101:47	3	p_vide+32
water	101:35	0:0	4	p_vide
op	101:42	0:0	4	+
water	101:44	0:0	4	32
water	101:48	0:0	2	;
call	102:4	102:39	2	memcpy
arg	102:12	102:21	3	&id->name
op	102:12	0:0	4	&
water	102:13	0:0	4	id
op	102:15	0:0	4	->
water	102:17	0:0	4	name
arg	102:23	102:34	3	p_vide+34
water	102:23	0:0	4	p_vide
op	102:30	0:0	4	+
water	102:32	0:0	4	34
arg	102:36	102:39	3	32
water	102:36	0:0	4	32
water	102:40	0:0	2	;
water	103:4	0:0	2	id
op	103:6	0:0	2	->
water	103:8	0:0	2	depth
op	103:24	0:0	2	=
call	103:26	103:47	2	GetWBE
arg	103:35	103:47	3	p_vide+66
water	103:35	0:0	4	p_vide
op	103:42	0:0	4	+
water	103:44	0:0	4	66
water	103:48	0:0	2	;
water	104:4	0:0	2	id
op	104:6	0:0	2	->
water	104:8	0:0	2	clutID
op	104:24	0:0	2	=
call	104:26	104:47	2	GetWBE
arg	104:35	104:47	3	p_vide+68
water	104:35	0:0	4	p_vide
op	104:42	0:0	4	+
water	104:44	0:0	4	68
water	104:48	0:0	2	;
if	105:4	108:4	2	(i_vide > 70)
cond	105:8	105:17	3	i_vide > 70
water	105:8	0:0	4	i_vide
op	105:15	0:0	4	>
water	105:17	0:0	4	70
stmts	106:4	108:4	3	
water	106:4	0:0	4	{
call	107:8	107:67	4	memcpy
arg	107:16	107:40	5	((char*)&id->clutID)+2
water	107:16	0:0	6	(
water	107:17	0:0	6	(
water	107:18	0:0	6	char
op	107:22	0:0	6	*
water	107:23	0:0	6	)
op	107:24	0:0	6	&
water	107:25	0:0	6	id
op	107:27	0:0	6	->
water	107:29	0:0	6	clutID
water	107:35	0:0	6	)
op	107:37	0:0	6	+
water	107:39	0:0	6	2
arg	107:42	107:53	5	p_vide+70
water	107:42	0:0	6	p_vide
op	107:49	0:0	6	+
water	107:51	0:0	6	70
arg	107:55	107:67	5	i_vide-70
water	107:55	0:0	6	i_vide
op	107:62	0:0	6	-
water	107:64	0:0	6	70
water	107:68	0:0	4	;
water	108:4	0:0	4	}
call	109:4	118:24	2	msg_Dbg
arg	109:13	109:18	3	p_dec
water	109:13	0:0	4	p_dec
arg	109:20	110:86	3	"idSize=%d ver=%d rev=%d vendor=%d tempQ=%d ""spaQ=%d w=%d h=%d dpi=%d%d dataSize=%d depth=%d frameCount=%d clutID=%d"
water	109:20	0:0	4	"idSize=%d ver=%d rev=%d vendor=%d tempQ=%d "
water	110:13	0:0	4	"spaQ=%d w=%d h=%d dpi=%d%d dataSize=%d depth=%d frameCount=%d clutID=%d"
arg	111:13	111:28	3	(int)id->idSize
water	111:13	0:0	4	(
water	111:14	0:0	4	int
water	111:17	0:0	4	)
water	111:18	0:0	4	id
op	111:20	0:0	4	->
water	111:22	0:0	4	idSize
arg	111:30	111:41	3	id->version
water	111:30	0:0	4	id
op	111:32	0:0	4	->
water	111:34	0:0	4	version
arg	111:43	111:60	3	id->revisionLevel
water	111:43	0:0	4	id
op	111:45	0:0	4	->
water	111:47	0:0	4	revisionLevel
arg	111:62	111:77	3	(int)id->vendor
water	111:62	0:0	4	(
water	111:63	0:0	4	int
water	111:66	0:0	4	)
water	111:67	0:0	4	id
op	111:69	0:0	4	->
water	111:71	0:0	4	vendor
arg	112:13	112:37	3	(int)id->temporalQuality
water	112:13	0:0	4	(
water	112:14	0:0	4	int
water	112:17	0:0	4	)
water	112:18	0:0	4	id
op	112:20	0:0	4	->
water	112:22	0:0	4	temporalQuality
arg	112:39	112:62	3	(int)id->spatialQuality
water	112:39	0:0	4	(
water	112:40	0:0	4	int
water	112:43	0:0	4	)
water	112:44	0:0	4	id
op	112:46	0:0	4	->
water	112:48	0:0	4	spatialQuality
arg	113:13	113:27	3	(int)id->width
water	113:13	0:0	4	(
water	113:14	0:0	4	int
water	113:17	0:0	4	)
water	113:18	0:0	4	id
op	113:20	0:0	4	->
water	113:22	0:0	4	width
arg	113:29	113:44	3	(int)id->height
water	113:29	0:0	4	(
water	113:30	0:0	4	int
water	113:33	0:0	4	)
water	113:34	0:0	4	id
op	113:36	0:0	4	->
water	113:38	0:0	4	height
arg	114:13	114:26	3	(int)id->hRes
water	114:13	0:0	4	(
water	114:14	0:0	4	int
water	114:17	0:0	4	)
water	114:18	0:0	4	id
op	114:20	0:0	4	->
water	114:22	0:0	4	hRes
arg	114:28	114:41	3	(int)id->vRes
water	114:28	0:0	4	(
water	114:29	0:0	4	int
water	114:32	0:0	4	)
water	114:33	0:0	4	id
op	114:35	0:0	4	->
water	114:37	0:0	4	vRes
arg	115:13	115:30	3	(int)id->dataSize
water	115:13	0:0	4	(
water	115:14	0:0	4	int
water	115:17	0:0	4	)
water	115:18	0:0	4	id
op	115:20	0:0	4	->
water	115:22	0:0	4	dataSize
arg	116:13	116:22	3	id->depth
water	116:13	0:0	4	id
op	116:15	0:0	4	->
water	116:17	0:0	4	depth
arg	117:13	117:27	3	id->frameCount
water	117:13	0:0	4	id
op	117:15	0:0	4	->
water	117:17	0:0	4	frameCount
arg	118:13	118:24	3	id->clutID
water	118:13	0:0	4	id
op	118:15	0:0	4	->
water	118:17	0:0	4	clutID
water	118:25	0:0	2	;
water	119:4	0:0	2	p_sys
op	119:9	0:0	2	->
water	119:11	0:0	2	framedescHandle
op	119:27	0:0	2	=
water	119:29	0:0	2	(
water	119:30	0:0	2	ImageDescriptionHandle
water	119:52	0:0	2	)
call	119:54	119:81	2	NewHandleClear
arg	119:70	119:81	3	id->idSize
water	119:70	0:0	4	id
op	119:72	0:0	4	->
water	119:74	0:0	4	idSize
water	119:82	0:0	2	;
call	120:4	120:52	2	memcpy
arg	120:12	120:35	3	*p_sys->framedescHandle
op	120:12	0:0	4	*
water	120:13	0:0	4	p_sys
op	120:18	0:0	4	->
water	120:20	0:0	4	framedescHandle
arg	120:37	120:39	3	id
water	120:37	0:0	4	id
arg	120:41	120:52	3	id->idSize
water	120:41	0:0	4	id
op	120:43	0:0	4	->
water	120:45	0:0	4	idSize
water	120:53	0:0	2	;
if	121:4	122:95	2	(p_dec -> fmt_in . video . i_width != 0 && p_dec -> fmt_in . video . i_height != 0)
cond	121:8	121:76	3	p_dec -> fmt_in . video . i_width != 0 && p_dec -> fmt_in . video . i_height != 0
water	121:8	0:0	4	p_dec
op	121:13	0:0	4	->
water	121:15	0:0	4	fmt_in
op	121:21	0:0	4	.
water	121:22	0:0	4	video
op	121:27	0:0	4	.
water	121:28	0:0	4	i_width
op	121:36	0:0	4	!=
water	121:39	0:0	4	0
op	121:41	0:0	4	&&
water	121:44	0:0	4	p_dec
op	121:49	0:0	4	->
water	121:51	0:0	4	fmt_in
op	121:57	0:0	4	.
water	121:58	0:0	4	video
op	121:63	0:0	4	.
water	121:64	0:0	4	i_height
op	121:73	0:0	4	!=
water	121:76	0:0	4	0
stmts	122:8	122:95	3	
water	122:8	0:0	4	p_sys
op	122:13	0:0	4	->
water	122:15	0:0	4	plane
op	122:21	0:0	4	=
call	122:23	122:94	4	malloc
arg	122:31	122:94	5	p_dec->fmt_in.video.i_width*p_dec->fmt_in.video.i_height*3
water	122:31	0:0	6	p_dec
op	122:36	0:0	6	->
water	122:38	0:0	6	fmt_in
op	122:44	0:0	6	.
water	122:45	0:0	6	video
op	122:50	0:0	6	.
water	122:51	0:0	6	i_width
op	122:59	0:0	6	*
water	122:61	0:0	6	p_dec
op	122:66	0:0	6	->
water	122:68	0:0	6	fmt_in
op	122:74	0:0	6	.
water	122:75	0:0	6	video
op	122:80	0:0	6	.
water	122:81	0:0	6	i_height
op	122:90	0:0	6	*
water	122:92	0:0	6	3
water	122:95	0:0	4	;
if	123:4	124:23	2	(! p_sys -> plane)
cond	123:8	123:16	3	! p_sys -> plane
op	123:8	0:0	4	!
water	123:9	0:0	4	p_sys
op	123:14	0:0	4	->
water	123:16	0:0	4	plane
stmts	124:8	124:23	3	
goto	124:8	124:23	4	exit_error
water	124:13	0:0	5	exit_error
water	125:4	0:0	2	i_result
op	125:13	0:0	2	=
call	125:15	133:74	2	p_sys->QTNewGWorldFromPtr
arg	125:42	125:65	3	&p_sys->OutBufferGWorld
op	125:42	0:0	4	&
water	125:43	0:0	4	p_sys
op	125:48	0:0	4	->
water	125:50	0:0	4	OutBufferGWorld
arg	127:42	127:58	3	kYUVSPixelFormat
water	127:42	0:0	4	kYUVSPixelFormat
arg	130:42	130:63	3	&p_sys->OutBufferRect
op	130:42	0:0	4	&
water	130:43	0:0	4	p_sys
op	130:48	0:0	4	->
water	130:50	0:0	4	OutBufferRect
arg	131:42	131:43	3	0
water	131:42	0:0	4	0
arg	131:45	131:46	3	0
water	131:45	0:0	4	0
arg	131:48	131:49	3	0
water	131:48	0:0	4	0
arg	132:42	132:54	3	p_sys->plane
water	132:42	0:0	4	p_sys
op	132:47	0:0	4	->
water	132:49	0:0	4	plane
arg	133:42	133:74	3	p_dec->fmt_in.video.i_width*2
water	133:42	0:0	4	p_dec
op	133:47	0:0	4	->
water	133:49	0:0	4	fmt_in
op	133:55	0:0	4	.
water	133:56	0:0	4	video
op	133:61	0:0	4	.
water	133:62	0:0	4	i_width
op	133:70	0:0	4	*
water	133:72	0:0	4	2
water	133:75	0:0	2	;
call	134:4	135:41	2	msg_Dbg
arg	134:13	134:18	3	p_dec
water	134:13	0:0	4	p_dec
arg	134:20	134:51	3	"NewGWorldFromPtr returned:%ld"
water	134:20	0:0	4	"NewGWorldFromPtr returned:%ld"
arg	135:13	135:41	3	65536-(i_result&0xffff)
water	135:13	0:0	4	65536
op	135:19	0:0	4	-
water	135:21	0:0	4	(
water	135:23	0:0	4	i_result
op	135:31	0:0	4	&
water	135:32	0:0	4	0
water	135:33	0:0	4	xffff
water	135:39	0:0	4	)
water	135:42	0:0	2	;
call	136:4	136:63	2	memset
arg	136:12	136:26	3	&p_sys->decpar
op	136:12	0:0	4	&
water	136:13	0:0	4	p_sys
op	136:18	0:0	4	->
water	136:20	0:0	4	decpar
arg	136:28	136:29	3	0
water	136:28	0:0	4	0
arg	136:31	136:63	3	sizeof(CodecDecompressParams)
op	136:31	0:0	4	sizeof
water	136:37	0:0	4	(
water	136:39	0:0	4	CodecDecompressParams
water	136:61	0:0	4	)
water	136:64	0:0	2	;
water	137:4	0:0	2	p_sys
op	137:9	0:0	2	->
water	137:11	0:0	2	decpar
op	137:17	0:0	2	.
water	137:18	0:0	2	imageDescription
op	137:35	0:0	2	=
water	137:37	0:0	2	p_sys
op	137:42	0:0	2	->
water	137:44	0:0	2	framedescHandle
water	137:59	0:0	2	;
water	138:4	0:0	2	p_sys
op	138:9	0:0	2	->
water	138:11	0:0	2	decpar
op	138:17	0:0	2	.
water	138:18	0:0	2	startLine
op	138:35	0:0	2	=
water	138:37	0:0	2	0
water	138:38	0:0	2	;
water	139:4	0:0	2	p_sys
op	139:9	0:0	2	->
water	139:11	0:0	2	decpar
op	139:17	0:0	2	.
water	139:18	0:0	2	stopLine
op	139:35	0:0	2	=
water	139:37	0:0	2	(
op	139:39	0:0	2	*
op	139:40	0:0	2	*
water	139:41	0:0	2	p_sys
op	139:46	0:0	2	->
water	139:48	0:0	2	framedescHandle
water	139:64	0:0	2	)
op	139:65	0:0	2	.
water	139:66	0:0	2	height
water	139:72	0:0	2	;
water	140:4	0:0	2	p_sys
op	140:9	0:0	2	->
water	140:11	0:0	2	decpar
op	140:17	0:0	2	.
water	140:18	0:0	2	frameNumber
op	140:35	0:0	2	=
water	140:37	0:0	2	1
water	140:38	0:0	2	;
water	141:4	0:0	2	p_sys
op	141:9	0:0	2	->
water	141:11	0:0	2	decpar
op	141:17	0:0	2	.
water	141:18	0:0	2	matrixFlags
op	141:35	0:0	2	=
water	141:37	0:0	2	0
water	141:38	0:0	2	;
water	142:4	0:0	2	p_sys
op	142:9	0:0	2	->
water	142:11	0:0	2	decpar
op	142:17	0:0	2	.
water	142:18	0:0	2	matrixType
op	142:35	0:0	2	=
water	142:37	0:0	2	0
water	142:38	0:0	2	;
water	143:4	0:0	2	p_sys
op	143:9	0:0	2	->
water	143:11	0:0	2	decpar
op	143:17	0:0	2	.
water	143:18	0:0	2	matrix
op	143:35	0:0	2	=
water	143:37	0:0	2	0
water	143:38	0:0	2	;
water	144:4	0:0	2	p_sys
op	144:9	0:0	2	->
water	144:11	0:0	2	decpar
op	144:17	0:0	2	.
water	144:18	0:0	2	capabilities
op	144:35	0:0	2	=
op	144:37	0:0	2	&
water	144:38	0:0	2	p_sys
op	144:43	0:0	2	->
water	144:45	0:0	2	codeccap
water	144:53	0:0	2	;
water	145:4	0:0	2	p_sys
op	145:9	0:0	2	->
water	145:11	0:0	2	decpar
op	145:17	0:0	2	.
water	145:18	0:0	2	accuracy
op	145:35	0:0	2	=
water	145:37	0:0	2	codecNormalQuality
water	145:55	0:0	2	;
water	146:4	0:0	2	p_sys
op	146:9	0:0	2	->
water	146:11	0:0	2	decpar
op	146:17	0:0	2	.
water	146:18	0:0	2	srcRect
op	146:35	0:0	2	=
water	146:37	0:0	2	p_sys
op	146:42	0:0	2	->
water	146:44	0:0	2	OutBufferRect
water	146:57	0:0	2	;
water	147:4	0:0	2	p_sys
op	147:9	0:0	2	->
water	147:11	0:0	2	decpar
op	147:17	0:0	2	.
water	147:18	0:0	2	transferMode
op	147:35	0:0	2	=
water	147:37	0:0	2	srcCopy
water	147:44	0:0	2	;
water	148:4	0:0	2	p_sys
op	148:9	0:0	2	->
water	148:11	0:0	2	decpar
op	148:17	0:0	2	.
water	148:18	0:0	2	dstPixMap
op	148:35	0:0	2	=
call	148:37	148:86	2	**p_sys->GetGWorldPixMap
arg	148:63	148:86	3	p_sys->OutBufferGWorld
water	148:63	0:0	4	p_sys
op	148:68	0:0	4	->
water	148:70	0:0	4	OutBufferGWorld
water	148:87	0:0	2	;
water	149:4	0:0	2	cres
op	149:9	0:0	2	=
call	149:12	149:70	2	p_sys->ImageCodecPreDecompress
arg	149:44	149:53	3	p_sys->ci
water	149:44	0:0	4	p_sys
op	149:49	0:0	4	->
water	149:51	0:0	4	ci
arg	149:55	149:70	3	&p_sys->decpar
op	149:55	0:0	4	&
water	149:56	0:0	4	p_sys
op	149:61	0:0	4	->
water	149:63	0:0	4	decpar
water	149:71	0:0	2	;
call	150:4	151:23	2	msg_Dbg
arg	150:13	150:18	3	p_dec
water	150:13	0:0	4	p_dec
arg	150:20	150:72	3	"quicktime_video: ImageCodecPreDecompress cres=0x%X"
water	150:20	0:0	4	"quicktime_video: ImageCodecPreDecompress cres=0x%X"
arg	151:13	151:23	3	(int)cres
water	151:13	0:0	4	(
water	151:14	0:0	4	int
water	151:17	0:0	4	)
water	151:18	0:0	4	cres
water	151:24	0:0	2	;
call	152:4	152:61	2	es_format_Init
arg	152:20	152:35	3	&p_dec->fmt_out
op	152:20	0:0	4	&
water	152:21	0:0	4	p_dec
op	152:26	0:0	4	->
water	152:28	0:0	4	fmt_out
arg	152:37	152:45	3	VIDEO_ES
water	152:37	0:0	4	VIDEO_ES
arg	152:47	152:61	3	VLC_CODEC_YUYV
water	152:47	0:0	4	VLC_CODEC_YUYV
water	152:62	0:0	2	;
water	153:4	0:0	2	p_dec
op	153:9	0:0	2	->
water	153:11	0:0	2	fmt_out
op	153:18	0:0	2	.
water	153:19	0:0	2	video
op	153:24	0:0	2	.
water	153:25	0:0	2	i_width
op	153:33	0:0	2	=
water	153:35	0:0	2	p_dec
op	153:40	0:0	2	->
water	153:42	0:0	2	fmt_in
op	153:48	0:0	2	.
water	153:49	0:0	2	video
op	153:54	0:0	2	.
water	153:55	0:0	2	i_width
water	153:62	0:0	2	;
water	154:4	0:0	2	p_dec
op	154:9	0:0	2	->
water	154:11	0:0	2	fmt_out
op	154:18	0:0	2	.
water	154:19	0:0	2	video
op	154:24	0:0	2	.
water	154:25	0:0	2	i_height
op	154:33	0:0	2	=
water	154:35	0:0	2	p_dec
op	154:40	0:0	2	->
water	154:42	0:0	2	fmt_in
op	154:48	0:0	2	.
water	154:49	0:0	2	video
op	154:54	0:0	2	.
water	154:55	0:0	2	i_height
water	154:63	0:0	2	;
water	155:4	0:0	2	p_dec
op	155:9	0:0	2	->
water	155:11	0:0	2	fmt_out
op	155:18	0:0	2	.
water	155:19	0:0	2	video
op	155:24	0:0	2	.
water	155:25	0:0	2	i_sar_num
op	155:35	0:0	2	=
water	155:37	0:0	2	1
water	155:38	0:0	2	;
water	156:4	0:0	2	p_dec
op	156:9	0:0	2	->
water	156:11	0:0	2	fmt_out
op	156:18	0:0	2	.
water	156:19	0:0	2	video
op	156:24	0:0	2	.
water	156:25	0:0	2	i_sar_den
op	156:35	0:0	2	=
water	156:37	0:0	2	1
water	156:38	0:0	2	;
call	157:4	157:32	2	vlc_mutex_unlock
arg	157:22	157:32	3	&qt_mutex
op	157:22	0:0	4	&
water	157:23	0:0	4	qt_mutex
water	157:33	0:0	2	;
return	158:4	158:22	2	VLC_SUCCESS
water	158:11	0:0	3	VLC_SUCCESS
label	159:0	159:10	2	exit_error :
call	161:4	161:38	2	Restore_LDT_Keeper
arg	161:24	161:38	3	p_sys->ldt_fs
water	161:24	0:0	4	p_sys
op	161:29	0:0	4	->
water	161:31	0:0	4	ldt_fs
water	161:39	0:0	2	;
call	163:4	163:32	2	vlc_mutex_unlock
arg	163:22	163:32	3	&qt_mutex
op	163:22	0:0	4	&
water	163:23	0:0	4	qt_mutex
water	163:33	0:0	2	;
call	165:4	165:22	2	VLC_UNUSED
arg	165:16	165:22	3	p_dec
water	165:16	0:0	4	p_dec
water	165:23	0:0	2	;
return	167:4	167:23	2	VLC_EGENERIC
water	167:11	0:0	3	VLC_EGENERIC

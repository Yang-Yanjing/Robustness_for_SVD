func	2:0	30:0	0	static void	SetupPictureYV12
params	2:28	0:0	1	
param	2:30	2:56	2	SurfaceInfo *	p_surfaceInfo
param	2:58	2:79	2	picture_t *	p_picture
stmnts	0:0	29:4	1	
decl	5:4	5:54	2	int	i_stride
op	5:17	0:0	2	=
call	5:19	5:53	3	ALIGN_16_PIXELS
arg	5:36	5:53	4	p_surfaceInfo->s
water	5:36	0:0	5	p_surfaceInfo
op	5:49	0:0	5	->
water	5:51	0:0	5	s
decl	6:4	6:52	2	int	i_c_stride
op	6:19	0:0	2	=
call	6:21	6:51	3	ALIGN_16_PIXELS
arg	6:38	6:51	4	i_stride/2
water	6:38	0:0	5	i_stride
op	6:47	0:0	5	/
water	6:49	0:0	5	2
water	7:4	0:0	2	p_picture
op	7:13	0:0	2	->
water	7:15	0:0	2	p
op	7:16	0:0	2	->
water	7:18	0:0	2	i_pitch
op	7:26	0:0	2	=
water	7:28	0:0	2	i_stride
water	7:36	0:0	2	;
for	9:4	23:4	2	( int n = 1 ;n < p_picture -> i_planes;n ++)
forinit	0:0	9:18	3	 int n = 1 ;
decl	9:9	9:18	4	int	n
op	9:15	0:0	4	=
water	9:17	0:0	4	1
cond	9:20	9:35	3	n < p_picture -> i_planes
water	9:20	0:0	4	n
op	9:22	0:0	4	<
water	9:24	0:0	4	p_picture
op	9:33	0:0	4	->
water	9:35	0:0	4	i_planes
forexpr	9:45	9:46	3	n ++
water	9:45	0:0	4	n
op	9:46	0:0	4	++
stmts	10:4	23:4	3	
water	10:4	0:0	4	{
decl	11:8	11:45	4	const plane_t	*o
op	11:25	0:0	4	=
op	11:27	0:0	4	&
water	11:28	0:0	4	p_picture
op	11:37	0:0	4	->
water	11:39	0:0	4	p
op	11:40	0:0	4	[
water	11:41	0:0	4	n
op	11:42	0:0	4	-
water	11:43	0:0	4	1
op	11:44	0:0	4	]
decl	12:8	12:37	4	plane_t	*p
op	12:19	0:0	4	=
op	12:21	0:0	4	&
water	12:22	0:0	4	p_picture
op	12:31	0:0	4	->
water	12:33	0:0	4	p
op	12:34	0:0	4	[
water	12:35	0:0	4	n
op	12:36	0:0	4	]
water	13:8	0:0	4	p
op	13:9	0:0	4	->
water	13:11	0:0	4	p_pixels
op	13:20	0:0	4	=
water	13:22	0:0	4	o
op	13:23	0:0	4	->
water	13:25	0:0	4	p_pixels
op	13:34	0:0	4	+
water	13:36	0:0	4	o
op	13:37	0:0	4	->
water	13:39	0:0	4	i_lines
op	13:47	0:0	4	*
water	13:49	0:0	4	o
op	13:50	0:0	4	->
water	13:52	0:0	4	i_pitch
water	13:59	0:0	4	;
water	14:8	0:0	4	p
op	14:9	0:0	4	->
water	14:11	0:0	4	i_pitch
op	14:20	0:0	4	=
water	14:22	0:0	4	i_c_stride
water	14:32	0:0	4	;
water	15:8	0:0	4	p
op	15:9	0:0	4	->
water	15:11	0:0	4	i_lines
op	15:20	0:0	4	=
water	15:22	0:0	4	p_picture
op	15:31	0:0	4	->
water	15:33	0:0	4	format
op	15:39	0:0	4	.
water	15:40	0:0	4	i_height
op	15:49	0:0	4	/
water	15:51	0:0	4	2
water	15:52	0:0	4	;
decl	20:8	20:66	4	int	visible_lines
op	20:26	0:0	4	=
water	20:28	0:0	4	p_picture
op	20:37	0:0	4	->
water	20:39	0:0	4	format
op	20:45	0:0	4	.
water	20:46	0:0	4	i_visible_height
op	20:63	0:0	4	/
water	20:65	0:0	4	2
if	21:8	22:108	4	(visible_lines < p -> i_lines)
cond	21:12	21:31	5	visible_lines < p -> i_lines
water	21:12	0:0	6	visible_lines
op	21:26	0:0	6	<
water	21:28	0:0	6	p
op	21:29	0:0	6	->
water	21:31	0:0	6	i_lines
stmts	22:12	22:108	5	
call	22:12	22:107	6	memset
arg	22:19	22:59	7	&p->p_pixels[visible_lines*p->i_pitch]
op	22:19	0:0	8	&
water	22:20	0:0	8	p
op	22:21	0:0	8	->
water	22:23	0:0	8	p_pixels
op	22:31	0:0	8	[
water	22:32	0:0	8	visible_lines
op	22:46	0:0	8	*
water	22:48	0:0	8	p
op	22:49	0:0	8	->
water	22:51	0:0	8	i_pitch
op	22:58	0:0	8	]
arg	22:61	22:64	7	127
water	22:61	0:0	8	127
arg	22:66	22:107	7	(p->i_lines-visible_lines)*p->i_pitch
water	22:66	0:0	8	(
water	22:67	0:0	8	p
op	22:68	0:0	8	->
water	22:70	0:0	8	i_lines
op	22:78	0:0	8	-
water	22:80	0:0	8	visible_lines
water	22:93	0:0	8	)
op	22:95	0:0	8	*
water	22:97	0:0	8	p
op	22:98	0:0	8	->
water	22:100	0:0	8	i_pitch
water	22:108	0:0	6	;
water	23:4	0:0	4	}
if	24:4	29:4	2	(vlc_fourcc_AreUVPlanesSwapped (p_picture -> format . i_chroma ,VLC_CODEC_YV12 ))
cond	24:8	25:54	3	vlc_fourcc_AreUVPlanesSwapped (p_picture -> format . i_chroma ,VLC_CODEC_YV12 )
call	24:8	25:54	4	vlc_fourcc_AreUVPlanesSwapped
arg	24:39	24:65	5	p_picture->format.i_chroma
water	24:39	0:0	6	p_picture
op	24:48	0:0	6	->
water	24:50	0:0	6	format
op	24:56	0:0	6	.
water	24:57	0:0	6	i_chroma
arg	25:39	25:54	5	VLC_CODEC_YV12
water	25:39	0:0	6	VLC_CODEC_YV12
stmts	25:58	29:4	3	
water	25:58	0:0	4	{
decl	26:8	26:49	4	uint8_t	*p_tmp
op	26:23	0:0	4	=
water	26:25	0:0	4	p_picture
op	26:34	0:0	4	->
water	26:36	0:0	4	p
op	26:37	0:0	4	[
water	26:38	0:0	4	1
op	26:39	0:0	4	]
op	26:40	0:0	4	.
water	26:41	0:0	4	p_pixels
water	27:8	0:0	4	p_picture
op	27:17	0:0	4	->
water	27:19	0:0	4	p
op	27:20	0:0	4	[
water	27:21	0:0	4	1
op	27:22	0:0	4	]
op	27:23	0:0	4	.
water	27:24	0:0	4	p_pixels
op	27:33	0:0	4	=
water	27:35	0:0	4	p_picture
op	27:44	0:0	4	->
water	27:46	0:0	4	p
op	27:47	0:0	4	[
water	27:48	0:0	4	2
op	27:49	0:0	4	]
op	27:50	0:0	4	.
water	27:51	0:0	4	p_pixels
water	27:59	0:0	4	;
water	28:8	0:0	4	p_picture
op	28:17	0:0	4	->
water	28:19	0:0	4	p
op	28:20	0:0	4	[
water	28:21	0:0	4	2
op	28:22	0:0	4	]
op	28:23	0:0	4	.
water	28:24	0:0	4	p_pixels
op	28:33	0:0	4	=
water	28:35	0:0	4	p_tmp
water	28:40	0:0	4	;
water	29:4	0:0	4	}

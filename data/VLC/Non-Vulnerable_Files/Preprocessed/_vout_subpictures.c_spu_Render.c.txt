func	2:0	76:0	0	subpicture_t *	spu_Render
params	2:24	0:0	1	
param	2:25	2:35	2	spu_t *	spu
param	3:25	3:56	2	const vlc_fourcc_t *	chroma_list
param	4:25	4:54	2	const video_format_t *	fmt_dst
param	5:25	5:54	2	const video_format_t *	fmt_src
param	6:25	6:53	2	mtime_t	render_subtitle_date
param	7:25	7:48	2	mtime_t	render_osd_date
param	8:25	8:40	2	bool	ignore_osd
stmnts	0:0	75:17	1	
decl	10:4	10:31	2	spu_private_t	*sys
op	10:23	0:0	2	=
water	10:25	0:0	2	spu
op	10:28	0:0	2	->
water	10:30	0:0	2	p
call	12:4	12:29	2	vlc_mutex_lock
arg	12:19	12:29	3	&sys->lock
op	12:19	0:0	4	&
water	12:20	0:0	4	sys
op	12:23	0:0	4	->
water	12:25	0:0	4	lock
water	12:30	0:0	2	;
decl	13:4	13:49	2	char	*chain_update
op	13:23	0:0	2	=
water	13:25	0:0	2	sys
op	13:28	0:0	2	->
water	13:30	0:0	2	source_chain_update
water	14:4	0:0	2	sys
op	14:7	0:0	2	->
water	14:9	0:0	2	source_chain_update
op	14:29	0:0	2	=
water	14:31	0:0	2	NULL
water	14:35	0:0	2	;
call	15:4	15:31	2	vlc_mutex_unlock
arg	15:21	15:31	3	&sys->lock
op	15:21	0:0	4	&
water	15:22	0:0	4	sys
op	15:25	0:0	4	->
water	15:27	0:0	4	lock
water	15:32	0:0	2	;
call	16:4	16:42	2	vlc_mutex_lock
arg	16:19	16:42	3	&sys->source_chain_lock
op	16:19	0:0	4	&
water	16:20	0:0	4	sys
op	16:23	0:0	4	->
water	16:25	0:0	4	source_chain_lock
water	16:43	0:0	2	;
if	17:4	25:4	2	(chain_update)
cond	17:8	17:8	3	chain_update
water	17:8	0:0	4	chain_update
stmts	17:22	25:4	3	
water	17:22	0:0	4	{
if	18:8	21:8	4	(* chain_update)
cond	18:12	18:13	5	* chain_update
op	18:12	0:0	6	*
water	18:13	0:0	6	chain_update
stmts	18:27	21:8	5	
water	18:27	0:0	6	{
call	19:12	19:60	6	filter_chain_Reset
arg	19:31	19:48	7	sys->source_chain
water	19:31	0:0	8	sys
op	19:34	0:0	8	->
water	19:36	0:0	8	source_chain
arg	19:50	19:54	7	NULL
water	19:50	0:0	8	NULL
arg	19:56	19:60	7	NULL
water	19:56	0:0	8	NULL
water	19:61	0:0	6	;
call	20:12	20:76	6	filter_chain_AppendFromString
arg	20:42	20:62	7	spu->p->source_chain
water	20:42	0:0	8	spu
op	20:45	0:0	8	->
water	20:47	0:0	8	p
op	20:48	0:0	8	->
water	20:50	0:0	8	source_chain
arg	20:64	20:76	7	chain_update
water	20:64	0:0	8	chain_update
water	20:77	0:0	6	;
water	21:8	0:0	6	}
else	22:8	23:61	4
stmts	22:13	23:61	5	
if	22:13	23:61	6	(filter_chain_GetLength (spu -> p -> source_chain ) > 0)
cond	22:17	22:64	7	filter_chain_GetLength (spu -> p -> source_chain ) > 0
call	22:17	22:60	8	filter_chain_GetLength
arg	22:40	22:60	9	spu->p->source_chain
water	22:40	0:0	10	spu
op	22:43	0:0	10	->
water	22:45	0:0	10	p
op	22:46	0:0	10	->
water	22:48	0:0	10	source_chain
op	22:62	0:0	8	>
water	22:64	0:0	8	0
stmts	23:12	23:61	7	
call	23:12	23:60	8	filter_chain_Reset
arg	23:31	23:48	9	sys->source_chain
water	23:31	0:0	10	sys
op	23:34	0:0	10	->
water	23:36	0:0	10	source_chain
arg	23:50	23:54	9	NULL
water	23:50	0:0	10	NULL
arg	23:56	23:60	9	NULL
water	23:56	0:0	10	NULL
water	23:61	0:0	8	;
call	24:8	24:25	4	free
arg	24:13	24:25	5	chain_update
water	24:13	0:0	6	chain_update
water	24:26	0:0	4	;
water	25:4	0:0	4	}
call	27:4	27:61	2	filter_chain_SubSource
arg	27:27	27:44	3	sys->source_chain
water	27:27	0:0	4	sys
op	27:30	0:0	4	->
water	27:32	0:0	4	source_chain
arg	27:46	27:61	3	render_osd_date
water	27:46	0:0	4	render_osd_date
water	27:62	0:0	2	;
call	28:4	28:44	2	vlc_mutex_unlock
arg	28:21	28:44	3	&sys->source_chain_lock
op	28:21	0:0	4	&
water	28:22	0:0	4	sys
op	28:25	0:0	4	->
water	28:27	0:0	4	source_chain_lock
water	28:45	0:0	2	;
water	29:4	0:0	2	static
water	29:11	0:0	2	const
water	29:17	0:0	2	vlc_fourcc_t
water	29:30	0:0	2	chroma_list_default_yuv
op	29:53	0:0	2	[
op	29:54	0:0	2	]
op	29:56	0:0	2	=
water	29:58	0:0	2	{
water	30:8	0:0	2	VLC_CODEC_YUVA
water	30:22	0:0	2	,
water	31:8	0:0	2	VLC_CODEC_RGBA
water	31:22	0:0	2	,
water	32:8	0:0	2	VLC_CODEC_ARGB
water	32:22	0:0	2	,
water	33:8	0:0	2	VLC_CODEC_YUVP
water	33:22	0:0	2	,
water	34:8	0:0	2	0
water	34:9	0:0	2	,
water	35:4	0:0	2	}
water	35:5	0:0	2	;
water	36:4	0:0	2	static
water	36:11	0:0	2	const
water	36:17	0:0	2	vlc_fourcc_t
water	36:30	0:0	2	chroma_list_default_rgb
op	36:53	0:0	2	[
op	36:54	0:0	2	]
op	36:56	0:0	2	=
water	36:58	0:0	2	{
water	37:8	0:0	2	VLC_CODEC_RGBA
water	37:22	0:0	2	,
water	38:8	0:0	2	VLC_CODEC_ARGB
water	38:22	0:0	2	,
water	39:8	0:0	2	VLC_CODEC_YUVA
water	39:22	0:0	2	,
water	40:8	0:0	2	VLC_CODEC_YUVP
water	40:22	0:0	2	,
water	41:8	0:0	2	0
water	41:9	0:0	2	,
water	42:4	0:0	2	}
water	42:5	0:0	2	;
if	43:4	45:83	2	(! chroma_list || * chroma_list == 0)
cond	43:8	43:40	3	! chroma_list || * chroma_list == 0
op	43:8	0:0	4	!
water	43:9	0:0	4	chroma_list
op	43:21	0:0	4	||
op	43:24	0:0	4	*
water	43:25	0:0	4	chroma_list
op	43:37	0:0	4	==
water	43:40	0:0	4	0
stmts	44:8	45:83	3	
water	44:8	0:0	4	chroma_list
op	44:20	0:0	4	=
call	44:22	44:56	4	vlc_fourcc_IsYUV
arg	44:39	44:56	5	fmt_dst->i_chroma
water	44:39	0:0	6	fmt_dst
op	44:46	0:0	6	->
water	44:48	0:0	6	i_chroma
water	44:58	0:0	4	?
water	44:60	0:0	4	chroma_list_default_yuv
water	45:58	0:0	4	:
water	45:60	0:0	4	chroma_list_default_rgb
water	45:83	0:0	4	;
call	46:4	46:29	2	vlc_mutex_lock
arg	46:19	46:29	3	&sys->lock
op	46:19	0:0	4	&
water	46:20	0:0	4	sys
op	46:23	0:0	4	->
water	46:25	0:0	4	lock
water	46:30	0:0	2	;
decl	47:4	47:33	2	unsigned int	subpicture_count
decl	48:4	48:56	2	subpicture_t	*subpicture_array[VOUT_MAX_SUBPICTURES]
call	50:4	51:74	2	SpuSelectSubpictures
arg	50:25	50:28	3	spu
water	50:25	0:0	4	spu
arg	50:30	50:47	3	&subpicture_count
op	50:30	0:0	4	&
water	50:31	0:0	4	subpicture_count
arg	50:49	50:65	3	subpicture_array
water	50:49	0:0	4	subpicture_array
arg	51:25	51:45	3	render_subtitle_date
water	51:25	0:0	4	render_subtitle_date
arg	51:47	51:62	3	render_osd_date
water	51:47	0:0	4	render_osd_date
arg	51:64	51:74	3	ignore_osd
water	51:64	0:0	4	ignore_osd
water	51:75	0:0	2	;
if	52:4	55:4	2	(subpicture_count <= 0)
cond	52:8	52:28	3	subpicture_count <= 0
water	52:8	0:0	4	subpicture_count
op	52:25	0:0	4	<=
water	52:28	0:0	4	0
stmts	52:31	55:4	3	
water	52:31	0:0	4	{
call	53:8	53:35	4	vlc_mutex_unlock
arg	53:25	53:35	5	&sys->lock
op	53:25	0:0	6	&
water	53:26	0:0	6	sys
op	53:29	0:0	6	->
water	53:31	0:0	6	lock
water	53:36	0:0	4	;
return	54:8	54:19	4	NULL
water	54:15	0:0	5	NULL
water	55:4	0:0	4	}
for	57:4	62:4	2	(unsigned i = 0 ;i < subpicture_count;i ++)
forinit	57:9	57:23	3	unsigned i = 0 ;
water	57:9	0:0	4	unsigned
water	57:18	0:0	4	i
op	57:20	0:0	4	=
water	57:22	0:0	4	0
water	57:23	0:0	4	;
cond	57:25	57:29	3	i < subpicture_count
water	57:25	0:0	4	i
op	57:27	0:0	4	<
water	57:29	0:0	4	subpicture_count
forexpr	57:47	57:48	3	i ++
water	57:47	0:0	4	i
op	57:48	0:0	4	++
stmts	57:52	62:4	3	
water	57:52	0:0	4	{
decl	58:8	58:50	4	subpicture_t	*subpic
op	58:29	0:0	4	=
water	58:31	0:0	4	subpicture_array
op	58:47	0:0	4	[
water	58:48	0:0	4	i
op	58:49	0:0	4	]
call	59:8	61:85	4	subpicture_Update
arg	59:26	59:32	5	subpic
water	59:26	0:0	6	subpic
arg	60:26	60:33	5	fmt_src
water	60:26	0:0	6	fmt_src
arg	60:35	60:42	5	fmt_dst
water	60:35	0:0	6	fmt_dst
arg	61:26	61:85	5	subpic->b_subtitle?render_subtitle_date:render_osd_date
water	61:26	0:0	6	subpic
op	61:32	0:0	6	->
water	61:34	0:0	6	b_subtitle
water	61:45	0:0	6	?
water	61:47	0:0	6	render_subtitle_date
water	61:68	0:0	6	:
water	61:70	0:0	6	render_osd_date
water	61:86	0:0	4	;
water	62:4	0:0	4	}
call	65:4	65:86	2	qsort
arg	65:10	65:26	3	subpicture_array
water	65:10	0:0	4	subpicture_array
arg	65:28	65:44	3	subpicture_count
water	65:28	0:0	4	subpicture_count
arg	65:46	65:71	3	sizeof(*subpicture_array)
op	65:46	0:0	4	sizeof
water	65:52	0:0	4	(
op	65:53	0:0	4	*
water	65:54	0:0	4	subpicture_array
water	65:70	0:0	4	)
arg	65:73	65:86	3	SubpictureCmp
water	65:73	0:0	4	SubpictureCmp
water	65:87	0:0	2	;
decl	67:4	73:64	2	subpicture_t	*render
op	67:25	0:0	2	=
call	67:27	73:63	3	SpuRenderSubpictures
arg	67:48	67:51	4	spu
water	67:48	0:0	5	spu
arg	68:48	68:64	4	subpicture_count
water	68:48	0:0	5	subpicture_count
arg	68:66	68:82	4	subpicture_array
water	68:66	0:0	5	subpicture_array
arg	69:48	69:59	4	chroma_list
water	69:48	0:0	5	chroma_list
arg	70:48	70:55	4	fmt_dst
water	70:48	0:0	5	fmt_dst
arg	71:48	71:55	4	fmt_src
water	71:48	0:0	5	fmt_src
arg	72:48	72:68	4	render_subtitle_date
water	72:48	0:0	5	render_subtitle_date
arg	73:48	73:63	4	render_osd_date
water	73:48	0:0	5	render_osd_date
call	74:4	74:31	2	vlc_mutex_unlock
arg	74:21	74:31	3	&sys->lock
op	74:21	0:0	4	&
water	74:22	0:0	4	sys
op	74:25	0:0	4	->
water	74:27	0:0	4	lock
water	74:32	0:0	2	;
return	75:4	75:17	2	render
water	75:11	0:0	3	render

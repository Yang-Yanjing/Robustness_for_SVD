func	2:0	39:0	0	static void *	ProcessPacket
params	2:26	0:0	1	
param	2:28	2:44	2	decoder_t *	p_dec
param	2:46	2:69	2	ogg_packet *	p_oggpacket
param	3:28	3:47	2	block_t * *	pp_block
stmnts	0:0	38:16	1	
decl	5:4	5:39	2	decoder_sys_t	*p_sys
op	5:25	0:0	2	=
water	5:27	0:0	2	p_dec
op	5:32	0:0	2	->
water	5:34	0:0	2	p_sys
decl	6:4	6:32	2	block_t	*p_block
op	6:21	0:0	2	=
op	6:23	0:0	2	*
water	6:24	0:0	2	pp_block
decl	7:4	7:15	2	void	*p_buf
if	8:4	15:4	2	(( p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ) ) != 0)
cond	8:8	8:80	3	( p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ) ) != 0
water	8:8	0:0	4	(
water	8:10	0:0	4	p_block
op	8:17	0:0	4	->
water	8:19	0:0	4	i_flags
op	8:26	0:0	4	&
water	8:27	0:0	4	(
water	8:28	0:0	4	BLOCK_FLAG_DISCONTINUITY
op	8:52	0:0	4	|
water	8:53	0:0	4	BLOCK_FLAG_CORRUPTED
water	8:73	0:0	4	)
water	8:75	0:0	4	)
op	8:77	0:0	4	!=
water	8:80	0:0	4	0
stmts	9:4	15:4	3	
water	9:4	0:0	4	{
call	13:8	13:29	4	block_Release
arg	13:22	13:29	5	p_block
water	13:22	0:0	6	p_block
water	13:30	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
if	17:4	20:4	2	(p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts != p_sys -> i_pts)
cond	17:8	17:68	3	p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts != p_sys -> i_pts
water	17:8	0:0	4	p_block
op	17:15	0:0	4	->
water	17:17	0:0	4	i_pts
op	17:23	0:0	4	>
water	17:25	0:0	4	VLC_TS_INVALID
op	17:40	0:0	4	&&
water	17:43	0:0	4	p_block
op	17:50	0:0	4	->
water	17:52	0:0	4	i_pts
op	17:58	0:0	4	!=
water	17:61	0:0	4	p_sys
op	17:66	0:0	4	->
water	17:68	0:0	4	i_pts
stmts	18:4	20:4	3	
water	18:4	0:0	4	{
water	19:8	0:0	4	p_sys
op	19:13	0:0	4	->
water	19:15	0:0	4	i_pts
op	19:21	0:0	4	=
water	19:23	0:0	4	p_block
op	19:30	0:0	4	->
water	19:32	0:0	4	i_pts
water	19:37	0:0	4	;
water	20:4	0:0	4	}
op	21:4	0:0	2	*
water	21:5	0:0	2	pp_block
op	21:14	0:0	2	=
water	21:16	0:0	2	NULL
water	21:20	0:0	2	;
if	22:4	28:4	2	(p_sys -> b_packetizer)
cond	22:8	22:15	3	p_sys -> b_packetizer
water	22:8	0:0	4	p_sys
op	22:13	0:0	4	->
water	22:15	0:0	4	b_packetizer
stmts	23:4	28:4	3	
water	23:4	0:0	4	{
water	25:8	0:0	4	p_block
op	25:15	0:0	4	->
water	25:17	0:0	4	i_dts
op	25:23	0:0	4	=
water	25:25	0:0	4	p_block
op	25:32	0:0	4	->
water	25:34	0:0	4	i_pts
op	25:40	0:0	4	=
water	25:42	0:0	4	p_sys
op	25:47	0:0	4	->
water	25:49	0:0	4	i_pts
water	25:54	0:0	4	;
water	26:8	0:0	4	p_block
op	26:15	0:0	4	->
water	26:17	0:0	4	i_length
op	26:26	0:0	4	=
water	26:28	0:0	4	p_sys
op	26:33	0:0	4	->
water	26:35	0:0	4	i_pts
op	26:41	0:0	4	-
water	26:43	0:0	4	p_block
op	26:50	0:0	4	->
water	26:52	0:0	4	i_pts
water	26:57	0:0	4	;
water	27:8	0:0	4	p_buf
op	27:14	0:0	4	=
water	27:16	0:0	4	p_block
water	27:23	0:0	4	;
water	28:4	0:0	4	}
else	29:4	34:4	2
stmts	30:4	34:4	3	
water	30:4	0:0	4	{
water	31:8	0:0	4	p_buf
op	31:14	0:0	4	=
call	31:16	31:49	4	DecodePacket
arg	31:30	31:35	5	p_dec
water	31:30	0:0	6	p_dec
arg	31:37	31:49	5	p_oggpacket
water	31:37	0:0	6	p_oggpacket
water	31:50	0:0	4	;
if	32:8	33:36	4	(p_block)
cond	32:12	32:12	5	p_block
water	32:12	0:0	6	p_block
stmts	33:12	33:36	5	
call	33:12	33:35	6	block_Release
arg	33:27	33:35	7	p_block
water	33:27	0:0	8	p_block
water	33:36	0:0	6	;
water	34:4	0:0	4	}
water	36:4	0:0	2	p_sys
op	36:9	0:0	2	->
water	36:11	0:0	2	i_pts
op	36:17	0:0	2	+=
water	36:20	0:0	2	(
call	36:22	36:37	2	INT64_C
arg	36:30	36:37	3	1000000
water	36:30	0:0	4	1000000
op	36:39	0:0	2	*
water	36:41	0:0	2	p_sys
op	36:46	0:0	2	->
water	36:48	0:0	2	ti
op	36:50	0:0	2	.
water	36:51	0:0	2	fps_denominator
op	36:67	0:0	2	/
water	37:22	0:0	2	p_sys
op	37:27	0:0	2	->
water	37:29	0:0	2	ti
op	37:31	0:0	2	.
water	37:32	0:0	2	fps_numerator
water	37:46	0:0	2	)
water	37:47	0:0	2	;
return	38:4	38:16	2	p_buf
water	38:11	0:0	3	p_buf

func	2:0	36:0	0	static block_t *	DecodeBlock
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	35:55	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:24	2	ogg_packet	oggpacket
if	6:4	6:31	2	(! pp_block)
cond	6:8	6:9	3	! pp_block
op	6:8	0:0	4	!
water	6:9	0:0	4	pp_block
stmts	6:20	6:31	3	
return	6:20	6:31	4	NULL
water	6:27	0:0	5	NULL
if	7:4	12:4	2	(* pp_block)
cond	7:8	7:9	3	* pp_block
op	7:8	0:0	4	*
water	7:9	0:0	4	pp_block
stmts	8:4	12:4	3	
water	8:4	0:0	4	{
water	10:8	0:0	4	oggpacket
op	10:17	0:0	4	.
water	10:18	0:0	4	packet
op	10:25	0:0	4	=
water	10:27	0:0	4	(
op	10:28	0:0	4	*
water	10:29	0:0	4	pp_block
water	10:37	0:0	4	)
op	10:38	0:0	4	->
water	10:40	0:0	4	p_buffer
water	10:48	0:0	4	;
water	11:8	0:0	4	oggpacket
op	11:17	0:0	4	.
water	11:18	0:0	4	bytes
op	11:24	0:0	4	=
water	11:26	0:0	4	(
op	11:27	0:0	4	*
water	11:28	0:0	4	pp_block
water	11:36	0:0	4	)
op	11:37	0:0	4	->
water	11:39	0:0	4	i_buffer
water	11:47	0:0	4	;
water	12:4	0:0	4	}
else	13:4	19:4	2
stmts	14:4	19:4	3	
water	14:4	0:0	4	{
if	15:8	15:45	4	(p_sys -> b_packetizer)
cond	15:12	15:19	5	p_sys -> b_packetizer
water	15:12	0:0	6	p_sys
op	15:17	0:0	6	->
water	15:19	0:0	6	b_packetizer
stmts	15:34	15:45	5	
return	15:34	15:45	6	NULL
water	15:41	0:0	7	NULL
water	17:8	0:0	4	oggpacket
op	17:17	0:0	4	.
water	17:18	0:0	4	packet
op	17:25	0:0	4	=
water	17:27	0:0	4	NULL
water	17:31	0:0	4	;
water	18:8	0:0	4	oggpacket
op	18:17	0:0	4	.
water	18:18	0:0	4	bytes
op	18:24	0:0	4	=
water	18:26	0:0	4	0
water	18:27	0:0	4	;
water	19:4	0:0	4	}
water	20:4	0:0	2	oggpacket
op	20:13	0:0	2	.
water	20:14	0:0	2	granulepos
op	20:25	0:0	2	=
op	20:27	0:0	2	-
water	20:28	0:0	2	1
water	20:29	0:0	2	;
water	21:4	0:0	2	oggpacket
op	21:13	0:0	2	.
water	21:14	0:0	2	b_o_s
op	21:20	0:0	2	=
water	21:22	0:0	2	0
water	21:23	0:0	2	;
water	22:4	0:0	2	oggpacket
op	22:13	0:0	2	.
water	22:14	0:0	2	e_o_s
op	22:20	0:0	2	=
water	22:22	0:0	2	0
water	22:23	0:0	2	;
water	23:4	0:0	2	oggpacket
op	23:13	0:0	2	.
water	23:14	0:0	2	packetno
op	23:23	0:0	2	=
water	23:25	0:0	2	0
water	23:26	0:0	2	;
if	25:4	34:4	2	(! p_sys -> b_has_headers)
cond	25:8	25:16	3	! p_sys -> b_has_headers
op	25:8	0:0	4	!
water	25:9	0:0	4	p_sys
op	25:14	0:0	4	->
water	25:16	0:0	4	b_has_headers
stmts	26:4	34:4	3	
water	26:4	0:0	4	{
if	27:8	32:8	4	(ProcessHeaders (p_dec ))
cond	27:12	27:34	5	ProcessHeaders (p_dec )
call	27:12	27:34	6	ProcessHeaders
arg	27:28	27:34	7	p_dec
water	27:28	0:0	8	p_dec
stmts	28:8	32:8	5	
water	28:8	0:0	6	{
if	29:12	30:42	6	(* pp_block)
cond	29:16	29:17	7	* pp_block
op	29:16	0:0	8	*
water	29:17	0:0	8	pp_block
stmts	30:16	30:42	7	
call	30:16	30:41	8	block_Release
arg	30:31	30:41	9	*pp_block
op	30:31	0:0	10	*
water	30:32	0:0	10	pp_block
water	30:42	0:0	8	;
return	31:12	31:23	6	NULL
water	31:19	0:0	7	NULL
water	32:8	0:0	6	}
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	b_has_headers
op	33:29	0:0	4	=
water	33:31	0:0	4	true
water	33:35	0:0	4	;
water	34:4	0:0	4	}
return	35:4	35:55	2	ProcessPacket(p_dec,&oggpacket,pp_block)
call	35:11	35:54	3	ProcessPacket
arg	35:26	35:31	4	p_dec
water	35:26	0:0	5	p_dec
arg	35:33	35:43	4	&oggpacket
op	35:33	0:0	5	&
water	35:34	0:0	5	oggpacket
arg	35:45	35:54	4	pp_block
water	35:45	0:0	5	pp_block

func	2:0	21:0	0	static void	test_address
params	2:24	0:0	1	
param	2:26	2:49	2	libvlc_int_t *	p_libvlc
stmnts	0:0	20:48	1	
decl	4:4	4:27	2	char	dummy[i_var_count]
decl	5:4	5:9	2	int	i
for	6:4	7:65	2	(i = 0 ;i < i_var_count;i ++)
forinit	6:9	6:14	3	i = 0 ;
water	6:9	0:0	4	i
op	6:11	0:0	4	=
water	6:13	0:0	4	0
water	6:14	0:0	4	;
cond	6:16	6:20	3	i < i_var_count
water	6:16	0:0	4	i
op	6:18	0:0	4	<
water	6:20	0:0	4	i_var_count
forexpr	6:33	6:34	3	i ++
water	6:33	0:0	4	i
op	6:34	0:0	4	++
stmts	7:9	7:65	3	
call	7:9	7:64	4	var_Create
arg	7:21	7:29	5	p_libvlc
water	7:21	0:0	6	p_libvlc
arg	7:31	7:46	5	psz_var_name[i]
water	7:31	0:0	6	psz_var_name
op	7:43	0:0	6	[
water	7:44	0:0	6	i
op	7:45	0:0	6	]
arg	7:48	7:64	5	VLC_VAR_ADDRESS
water	7:48	0:0	6	VLC_VAR_ADDRESS
water	7:65	0:0	4	;
for	8:4	12:4	2	(i = 0 ;i < i_var_count;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:20	3	i < i_var_count
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	i_var_count
forexpr	8:33	8:34	3	i ++
water	8:33	0:0	4	i
op	8:34	0:0	4	++
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
water	10:8	0:0	4	var_value
op	10:17	0:0	4	[
water	10:18	0:0	4	i
op	10:19	0:0	4	]
op	10:20	0:0	4	.
water	10:21	0:0	4	p_address
op	10:31	0:0	4	=
water	10:33	0:0	4	dummy
op	10:39	0:0	4	+
water	10:41	0:0	4	i
water	10:42	0:0	4	;
call	11:8	11:74	4	var_SetAddress
arg	11:24	11:32	5	p_libvlc
water	11:24	0:0	6	p_libvlc
arg	11:34	11:49	5	psz_var_name[i]
water	11:34	0:0	6	psz_var_name
op	11:46	0:0	6	[
water	11:47	0:0	6	i
op	11:48	0:0	6	]
arg	11:51	11:74	5	var_value[i].p_address
water	11:51	0:0	6	var_value
op	11:60	0:0	6	[
water	11:61	0:0	6	i
op	11:62	0:0	6	]
op	11:63	0:0	6	.
water	11:64	0:0	6	p_address
water	11:75	0:0	4	;
water	12:4	0:0	4	}
for	13:4	18:4	2	(i = 0 ;i < i_var_count;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:20	3	i < i_var_count
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	i_var_count
forexpr	13:33	13:34	3	i ++
water	13:33	0:0	4	i
op	13:34	0:0	4	++
stmts	14:4	18:4	3	
water	14:4	0:0	4	{
decl	15:8	15:23	4	vlc_value_t	val
call	16:8	16:49	4	var_Get
arg	16:17	16:25	5	p_libvlc
water	16:17	0:0	6	p_libvlc
arg	16:27	16:42	5	psz_var_name[i]
water	16:27	0:0	6	psz_var_name
op	16:39	0:0	6	[
water	16:40	0:0	6	i
op	16:41	0:0	6	]
arg	16:44	16:49	5	&val
op	16:44	0:0	6	&
water	16:45	0:0	6	val
water	16:50	0:0	4	;
call	17:8	17:56	4	assert
arg	17:16	17:56	5	val.p_address==var_value[i].p_address
water	17:16	0:0	6	val
op	17:19	0:0	6	.
water	17:20	0:0	6	p_address
op	17:30	0:0	6	==
water	17:33	0:0	6	var_value
op	17:42	0:0	6	[
water	17:43	0:0	6	i
op	17:44	0:0	6	]
op	17:45	0:0	6	.
water	17:46	0:0	6	p_address
water	17:57	0:0	4	;
water	18:4	0:0	4	}
for	19:4	20:48	2	(i = 0 ;i < i_var_count;i ++)
forinit	19:9	19:14	3	i = 0 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:20	3	i < i_var_count
water	19:16	0:0	4	i
op	19:18	0:0	4	<
water	19:20	0:0	4	i_var_count
forexpr	19:33	19:34	3	i ++
water	19:33	0:0	4	i
op	19:34	0:0	4	++
stmts	20:8	20:48	3	
call	20:8	20:47	4	var_Destroy
arg	20:21	20:29	5	p_libvlc
water	20:21	0:0	6	p_libvlc
arg	20:31	20:47	5	psz_var_name[i]
water	20:31	0:0	6	psz_var_name
op	20:43	0:0	6	[
water	20:44	0:0	6	i
op	20:45	0:0	6	]
water	20:48	0:0	4	;

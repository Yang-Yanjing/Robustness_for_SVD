func	2:0	55:0	0	int	main
params	2:9	0:0	1	
param	2:10	2:18	2	int	argc
param	2:20	2:32	2	char *	argv[]
stmnts	5:4	54:12	1	
call	5:4	5:39	2	SetErrorMode
arg	5:17	5:39	3	SEM_FAILCRITICALERRORS
water	5:17	0:0	4	SEM_FAILCRITICALERRORS
water	5:40	0:0	2	;
water	7:4	0:0	2	static
water	7:11	0:0	2	const
water	7:17	0:0	2	struct
water	7:24	0:0	2	option
water	7:31	0:0	2	opts
op	7:35	0:0	2	[
op	7:36	0:0	2	]
op	7:38	0:0	2	=
water	8:4	0:0	2	{
water	9:8	0:0	2	{
water	9:10	0:0	2	"force"
water	9:17	0:0	2	,
water	9:24	0:0	2	no_argument
water	9:35	0:0	2	,
water	9:43	0:0	2	NULL
water	9:47	0:0	2	,
water	9:49	0:0	2	'f'
water	9:53	0:0	2	}
water	9:54	0:0	2	,
water	10:8	0:0	2	{
water	10:10	0:0	2	"help"
water	10:16	0:0	2	,
water	10:24	0:0	2	no_argument
water	10:35	0:0	2	,
water	10:43	0:0	2	NULL
water	10:47	0:0	2	,
water	10:49	0:0	2	'h'
water	10:53	0:0	2	}
water	10:54	0:0	2	,
water	11:8	0:0	2	{
water	11:10	0:0	2	"version"
water	11:19	0:0	2	,
water	11:24	0:0	2	no_argument
water	11:35	0:0	2	,
water	11:43	0:0	2	NULL
water	11:47	0:0	2	,
water	11:49	0:0	2	'V'
water	11:53	0:0	2	}
water	11:54	0:0	2	,
water	12:8	0:0	2	{
water	12:10	0:0	2	NULL
water	12:14	0:0	2	,
water	12:24	0:0	2	no_argument
water	12:35	0:0	2	,
water	12:43	0:0	2	NULL
water	12:47	0:0	2	,
water	12:49	0:0	2	'\0'
water	12:53	0:0	2	}
water	13:4	0:0	2	}
water	13:5	0:0	2	;
decl	14:4	14:9	2	int	c
decl	15:4	15:22	2	bool	force
op	15:15	0:0	2	=
water	15:17	0:0	2	false
while	16:4	31:8	2	(( c =getopt_long (argc ,argv ,"fhV" ,opts ,NULL ) ) != - 1)
cond	16:11	16:65	3	( c =getopt_long (argc ,argv ,"fhV" ,opts ,NULL ) ) != - 1
water	16:11	0:0	4	(
water	16:12	0:0	4	c
op	16:14	0:0	4	=
call	16:16	16:58	4	getopt_long
arg	16:29	16:33	5	argc
water	16:29	0:0	6	argc
arg	16:35	16:39	5	argv
water	16:35	0:0	6	argv
arg	16:41	16:46	5	"fhV"
water	16:41	0:0	6	"fhV"
arg	16:48	16:52	5	opts
water	16:48	0:0	6	opts
arg	16:54	16:58	5	NULL
water	16:54	0:0	6	NULL
water	16:59	0:0	4	)
op	16:61	0:0	4	!=
op	16:64	0:0	4	-
water	16:65	0:0	4	1
stmts	17:8	31:8	3	
switch	17:8	31:8	4	(c)
cond	17:16	17:16	5	c
water	17:16	0:0	6	c
stmts	18:8	31:8	5	
water	18:8	0:0	6	{
water	19:12	0:0	6	case
water	19:17	0:0	6	'f'
water	19:20	0:0	6	:
water	20:16	0:0	6	force
op	20:22	0:0	6	=
water	20:24	0:0	6	true
water	20:28	0:0	6	;
break	21:16	21:21	6	
water	22:12	0:0	6	case
water	22:17	0:0	6	'h'
water	22:20	0:0	6	:
call	23:16	23:30	6	usage
arg	23:23	23:30	7	argv[0]
water	23:23	0:0	8	argv
op	23:27	0:0	8	[
water	23:28	0:0	8	0
op	23:29	0:0	8	]
water	23:31	0:0	6	;
return	24:16	24:24	6	0
water	24:23	0:0	7	0
water	25:12	0:0	6	case
water	25:17	0:0	6	'V'
water	25:20	0:0	6	:
call	26:16	26:25	6	version
water	26:26	0:0	6	;
return	27:16	27:24	6	0
water	27:23	0:0	7	0
label	28:12	28:19	6	default :
call	29:16	29:30	6	usage
arg	29:23	29:30	7	argv[0]
water	29:23	0:0	8	argv
op	29:27	0:0	8	[
water	29:28	0:0	8	0
op	29:29	0:0	8	]
water	29:31	0:0	6	;
return	30:16	30:24	6	1
water	30:23	0:0	7	1
water	31:8	0:0	6	}
for	32:4	53:4	2	( int i = optind ;i < argc;i ++)
forinit	0:0	32:23	3	 int i = optind ;
decl	32:9	32:23	4	int	i
op	32:15	0:0	4	=
water	32:17	0:0	4	optind
cond	32:25	32:29	3	i < argc
water	32:25	0:0	4	i
op	32:27	0:0	4	<
water	32:29	0:0	4	argc
forexpr	32:35	32:36	3	i ++
water	32:35	0:0	4	i
op	32:36	0:0	4	++
stmts	33:4	53:4	3	
water	33:4	0:0	4	{
decl	34:8	34:34	4	const char	*path
op	34:25	0:0	4	=
water	34:27	0:0	4	argv
op	34:31	0:0	4	[
water	34:32	0:0	4	i
op	34:33	0:0	4	]
if	35:8	36:20	4	(setenv ("VLC_PLUGIN_PATH" ,path ,1 ))
cond	35:12	35:46	5	setenv ("VLC_PLUGIN_PATH" ,path ,1 )
call	35:12	35:46	6	setenv
arg	35:20	35:37	7	"VLC_PLUGIN_PATH"
water	35:20	0:0	8	"VLC_PLUGIN_PATH"
arg	35:39	35:43	7	path
water	35:39	0:0	8	path
arg	35:45	35:46	7	1
water	35:45	0:0	8	1
stmts	36:12	36:20	5	
call	36:12	36:19	6	abort
water	36:20	0:0	6	;
decl	37:8	37:31	4	const char	*vlc_argv[4]
decl	38:8	38:24	4	int	vlc_argc
op	38:21	0:0	4	=
water	38:23	0:0	4	0
water	39:8	0:0	4	vlc_argv
op	39:16	0:0	4	[
water	39:17	0:0	4	vlc_argc
op	39:25	0:0	4	++
op	39:27	0:0	4	]
op	39:29	0:0	4	=
water	39:31	0:0	4	"--quiet"
water	39:40	0:0	4	;
if	41:8	43:58	4	(force)
cond	41:12	41:12	5	force
water	41:12	0:0	6	force
stmts	43:12	43:58	5	
water	43:12	0:0	6	vlc_argv
op	43:20	0:0	6	[
water	43:21	0:0	6	vlc_argc
op	43:29	0:0	6	++
op	43:31	0:0	6	]
op	43:33	0:0	6	=
water	43:35	0:0	6	"--reset-plugins-cache"
water	43:58	0:0	6	;
water	44:8	0:0	4	vlc_argv
op	44:16	0:0	4	[
water	44:17	0:0	4	vlc_argc
op	44:25	0:0	4	++
op	44:27	0:0	4	]
op	44:29	0:0	4	=
water	44:31	0:0	4	"--"
water	44:35	0:0	4	;
water	45:8	0:0	4	vlc_argv
op	45:16	0:0	4	[
water	45:17	0:0	4	vlc_argc
op	45:25	0:0	4	]
op	45:27	0:0	4	=
water	45:29	0:0	4	NULL
water	45:33	0:0	4	;
decl	46:8	46:64	4	libvlc_instance_t	*vlc
op	46:31	0:0	4	=
call	46:33	46:63	5	libvlc_new
arg	46:45	46:53	6	vlc_argc
water	46:45	0:0	7	vlc_argc
arg	46:55	46:63	6	vlc_argv
water	46:55	0:0	7	vlc_argv
if	47:8	48:32	4	(vlc != NULL)
cond	47:12	47:19	5	vlc != NULL
water	47:12	0:0	6	vlc
op	47:16	0:0	6	!=
water	47:19	0:0	6	NULL
stmts	48:12	48:32	5	
call	48:12	48:31	6	libvlc_release
arg	48:28	48:31	7	vlc
water	48:28	0:0	8	vlc
water	48:32	0:0	6	;
if	49:8	50:56	4	(vlc == NULL)
cond	49:12	49:19	5	vlc == NULL
water	49:12	0:0	6	vlc
op	49:16	0:0	6	==
water	49:19	0:0	6	NULL
stmts	50:12	50:56	5	
call	50:12	50:55	6	fprintf
arg	50:21	50:27	7	stderr
water	50:21	0:0	8	stderr
arg	50:29	50:49	7	"No plugins in %s\n"
water	50:29	0:0	8	"No plugins in %s\n"
arg	50:51	50:55	7	path
water	50:51	0:0	8	path
water	50:56	0:0	6	;
if	51:8	52:20	4	(vlc == NULL)
cond	51:12	51:19	5	vlc == NULL
water	51:12	0:0	6	vlc
op	51:16	0:0	6	==
water	51:19	0:0	6	NULL
stmts	52:12	52:20	5	
return	52:12	52:20	6	1
water	52:19	0:0	7	1
water	53:4	0:0	4	}
return	54:4	54:12	2	0
water	54:11	0:0	3	0

func	2:0	52:0	0	static int	DelStream
params	2:20	0:0	1	
param	2:22	2:39	2	sout_mux_t *	p_mux
param	2:41	2:63	2	sout_input_t *	p_input
stmnts	0:0	51:22	1	
decl	4:4	4:40	2	sout_mux_sys_t	*p_sys
op	4:26	0:0	2	=
water	4:28	0:0	2	p_mux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
decl	5:4	5:55	2	ps_stream_t	*p_stream
op	5:26	0:0	2	=
water	5:27	0:0	2	(
water	5:28	0:0	2	ps_stream_t
op	5:39	0:0	2	*
water	5:40	0:0	2	)
water	5:41	0:0	2	p_input
op	5:48	0:0	2	->
water	5:50	0:0	2	p_sys
call	6:4	6:37	2	msg_Dbg
arg	6:13	6:18	3	p_mux
water	6:13	0:0	4	p_mux
arg	6:20	6:37	3	"removing input"
water	6:20	0:0	4	"removing input"
water	6:38	0:0	2	;
switch	7:4	36:4	2	(p_input -> p_fmt -> i_codec)
cond	7:12	7:28	3	p_input -> p_fmt -> i_codec
water	7:12	0:0	4	p_input
op	7:19	0:0	4	->
water	7:21	0:0	4	p_fmt
op	7:26	0:0	4	->
water	7:28	0:0	4	i_codec
stmts	8:4	36:4	3	
water	8:4	0:0	4	{
label	9:8	9:27	4	case VLC_CODEC_MPGV :
call	10:12	11:51	4	StreamIdRelease
arg	10:29	10:50	5	p_sys->stream_id_mpgv
water	10:29	0:0	6	p_sys
op	10:34	0:0	6	->
water	10:36	0:0	6	stream_id_mpgv
arg	10:52	10:56	5	0xe0
water	10:52	0:0	6	0
water	10:53	0:0	6	xe0
arg	11:29	11:51	5	p_stream->i_stream_id
water	11:29	0:0	6	p_stream
op	11:37	0:0	6	->
water	11:39	0:0	6	i_stream_id
water	11:52	0:0	4	;
break	12:12	12:17	4	
label	13:8	13:31	4	case VLC_CODEC_DVD_LPCM :
call	14:12	15:56	4	StreamIdRelease
arg	14:29	14:50	5	p_sys->stream_id_lpcm
water	14:29	0:0	6	p_sys
op	14:34	0:0	6	->
water	14:36	0:0	6	stream_id_lpcm
arg	14:52	14:56	5	0xa0
water	14:52	0:0	6	0
water	14:53	0:0	6	xa0
arg	15:29	15:56	5	p_stream->i_stream_id&0xff
water	15:29	0:0	6	p_stream
op	15:37	0:0	6	->
water	15:39	0:0	6	i_stream_id
op	15:50	0:0	6	&
water	15:51	0:0	6	0
water	15:52	0:0	6	xff
water	15:57	0:0	4	;
break	16:12	16:17	4	
label	17:8	17:26	4	case VLC_CODEC_DTS :
call	18:12	19:56	4	StreamIdRelease
arg	18:29	18:49	5	p_sys->stream_id_dts
water	18:29	0:0	6	p_sys
op	18:34	0:0	6	->
water	18:36	0:0	6	stream_id_dts
arg	18:51	18:55	5	0x88
water	18:51	0:0	6	0
water	18:52	0:0	6	x88
arg	19:29	19:56	5	p_stream->i_stream_id&0xff
water	19:29	0:0	6	p_stream
op	19:37	0:0	6	->
water	19:39	0:0	6	i_stream_id
op	19:50	0:0	6	&
water	19:51	0:0	6	0
water	19:52	0:0	6	xff
water	19:57	0:0	4	;
break	20:12	20:17	4	
label	21:8	21:26	4	case VLC_CODEC_A52 :
call	22:12	23:56	4	StreamIdRelease
arg	22:29	22:49	5	p_sys->stream_id_a52
water	22:29	0:0	6	p_sys
op	22:34	0:0	6	->
water	22:36	0:0	6	stream_id_a52
arg	22:51	22:55	5	0x80
water	22:51	0:0	6	0
water	22:52	0:0	6	x80
arg	23:29	23:56	5	p_stream->i_stream_id&0xff
water	23:29	0:0	6	p_stream
op	23:37	0:0	6	->
water	23:39	0:0	6	i_stream_id
op	23:50	0:0	6	&
water	23:51	0:0	6	0
water	23:52	0:0	6	xff
water	23:57	0:0	4	;
break	24:12	24:17	4	
label	25:8	25:27	4	case VLC_CODEC_MPGA :
call	26:12	27:52	4	StreamIdRelease
arg	26:29	26:50	5	p_sys->stream_id_mpga
water	26:29	0:0	6	p_sys
op	26:34	0:0	6	->
water	26:36	0:0	6	stream_id_mpga
arg	26:52	26:56	5	0xc0
water	26:52	0:0	6	0
water	26:53	0:0	6	xc0
arg	27:29	27:52	5	p_stream->i_stream_id
water	27:29	0:0	6	p_stream
op	27:37	0:0	6	->
water	27:39	0:0	6	i_stream_id
water	27:53	0:0	4	;
break	28:12	28:17	4	
label	29:8	29:26	4	case VLC_CODEC_SPU :
call	30:12	31:56	4	StreamIdRelease
arg	30:29	30:49	5	p_sys->stream_id_spu
water	30:29	0:0	6	p_sys
op	30:34	0:0	6	->
water	30:36	0:0	6	stream_id_spu
arg	30:51	30:55	5	0x20
water	30:51	0:0	6	0
water	30:52	0:0	6	x20
arg	31:29	31:56	5	p_stream->i_stream_id&0xff
water	31:29	0:0	6	p_stream
op	31:37	0:0	6	->
water	31:39	0:0	6	i_stream_id
op	31:50	0:0	6	&
water	31:51	0:0	6	0
water	31:52	0:0	6	xff
water	31:57	0:0	4	;
break	32:12	32:17	4	
label	33:8	33:15	4	default :
break	35:12	35:17	4	
water	36:4	0:0	4	}
if	37:4	40:4	2	(p_input -> p_fmt -> i_cat == AUDIO_ES)
cond	37:8	37:33	3	p_input -> p_fmt -> i_cat == AUDIO_ES
water	37:8	0:0	4	p_input
op	37:15	0:0	4	->
water	37:17	0:0	4	p_fmt
op	37:22	0:0	4	->
water	37:24	0:0	4	i_cat
op	37:30	0:0	4	==
water	37:33	0:0	4	AUDIO_ES
stmts	38:4	40:4	3	
water	38:4	0:0	4	{
water	39:8	0:0	4	p_sys
op	39:13	0:0	4	->
water	39:15	0:0	4	i_audio_bound
op	39:28	0:0	4	--
water	39:30	0:0	4	;
water	40:4	0:0	4	}
else	41:4	44:4	2
stmts	41:9	44:4	3	
if	41:9	44:4	4	(p_input -> p_fmt -> i_cat == VIDEO_ES)
cond	41:13	41:38	5	p_input -> p_fmt -> i_cat == VIDEO_ES
water	41:13	0:0	6	p_input
op	41:20	0:0	6	->
water	41:22	0:0	6	p_fmt
op	41:27	0:0	6	->
water	41:29	0:0	6	i_cat
op	41:35	0:0	6	==
water	41:38	0:0	6	VIDEO_ES
stmts	42:4	44:4	5	
water	42:4	0:0	6	{
water	43:8	0:0	6	p_sys
op	43:13	0:0	6	->
water	43:15	0:0	6	i_video_bound
op	43:28	0:0	6	--
water	43:30	0:0	6	;
water	44:4	0:0	6	}
water	46:4	0:0	2	p_sys
op	46:9	0:0	2	->
water	46:11	0:0	2	i_instant_bitrate
op	46:29	0:0	2	-=
water	46:32	0:0	2	(
water	46:33	0:0	2	p_input
op	46:40	0:0	2	->
water	46:42	0:0	2	p_fmt
op	46:47	0:0	2	->
water	46:49	0:0	2	i_bitrate
op	46:59	0:0	2	+
water	46:61	0:0	2	1000
water	46:65	0:0	2	)
water	46:66	0:0	2	;
water	48:4	0:0	2	p_sys
op	48:9	0:0	2	->
water	48:11	0:0	2	i_rate_bound
op	48:24	0:0	2	-=
water	48:27	0:0	2	(
water	48:28	0:0	2	p_input
op	48:35	0:0	2	->
water	48:37	0:0	2	p_fmt
op	48:42	0:0	2	->
water	48:44	0:0	2	i_bitrate
op	48:54	0:0	2	*
water	48:56	0:0	2	2
water	48:57	0:0	2	)
op	48:58	0:0	2	/
water	48:59	0:0	2	(
water	48:60	0:0	2	8
op	48:62	0:0	2	*
water	48:64	0:0	2	50
water	48:66	0:0	2	)
water	48:67	0:0	2	;
water	49:4	0:0	2	p_sys
op	49:9	0:0	2	->
water	49:11	0:0	2	i_psm_version
op	49:24	0:0	2	++
water	49:26	0:0	2	;
call	50:4	50:19	2	free
arg	50:10	50:19	3	p_stream
water	50:10	0:0	4	p_stream
water	50:20	0:0	2	;
return	51:4	51:22	2	VLC_SUCCESS
water	51:11	0:0	3	VLC_SUCCESS

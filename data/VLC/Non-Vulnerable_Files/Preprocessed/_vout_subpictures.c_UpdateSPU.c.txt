func	2:0	27:0	0	static void	UpdateSPU
params	2:21	0:0	1	
param	2:22	2:32	2	spu_t *	spu
param	2:34	2:54	2	vlc_object_t *	object
stmnts	0:0	26:31	1	
decl	4:4	4:31	2	spu_private_t	*sys
op	4:23	0:0	2	=
water	4:25	0:0	2	spu
op	4:28	0:0	2	->
water	4:30	0:0	2	p
decl	5:4	5:19	2	vlc_value_t	val
call	6:4	6:29	2	vlc_mutex_lock
arg	6:19	6:29	3	&sys->lock
op	6:19	0:0	4	&
water	6:20	0:0	4	sys
op	6:23	0:0	4	->
water	6:25	0:0	4	lock
water	6:30	0:0	2	;
water	7:4	0:0	2	sys
op	7:7	0:0	2	->
water	7:9	0:0	2	force_palette
op	7:23	0:0	2	=
water	7:25	0:0	2	false
water	7:30	0:0	2	;
water	8:4	0:0	2	sys
op	8:7	0:0	2	->
water	8:9	0:0	2	force_crop
op	8:20	0:0	2	=
water	8:22	0:0	2	false
water	8:27	0:0	2	;
if	9:4	12:4	2	(var_Get (object ,"highlight" ,& val ) || ! val . b_bool)
cond	9:8	9:51	3	var_Get (object ,"highlight" ,& val ) || ! val . b_bool
call	9:8	9:41	4	var_Get
arg	9:16	9:22	5	object
water	9:16	0:0	6	object
arg	9:24	9:35	5	"highlight"
water	9:24	0:0	6	"highlight"
arg	9:37	9:41	5	&val
op	9:37	0:0	6	&
water	9:38	0:0	6	val
op	9:43	0:0	4	||
op	9:46	0:0	4	!
water	9:47	0:0	4	val
op	9:50	0:0	4	.
water	9:51	0:0	4	b_bool
stmts	9:59	12:4	3	
water	9:59	0:0	4	{
call	10:8	10:35	4	vlc_mutex_unlock
arg	10:25	10:35	5	&sys->lock
op	10:25	0:0	6	&
water	10:26	0:0	6	sys
op	10:29	0:0	6	->
water	10:31	0:0	6	lock
water	10:36	0:0	4	;
return	11:8	11:14	4	
water	12:4	0:0	4	}
water	13:4	0:0	2	sys
op	13:7	0:0	2	->
water	13:9	0:0	2	force_crop
op	13:20	0:0	2	=
water	13:22	0:0	2	true
water	13:26	0:0	2	;
water	14:4	0:0	2	sys
op	14:7	0:0	2	->
water	14:9	0:0	2	crop
op	14:13	0:0	2	.
water	14:14	0:0	2	x
op	14:21	0:0	2	=
call	14:23	14:55	2	var_GetInteger
arg	14:38	14:44	3	object
water	14:38	0:0	4	object
arg	14:46	14:55	3	"x-start"
water	14:46	0:0	4	"x-start"
water	14:56	0:0	2	;
water	15:4	0:0	2	sys
op	15:7	0:0	2	->
water	15:9	0:0	2	crop
op	15:13	0:0	2	.
water	15:14	0:0	2	y
op	15:21	0:0	2	=
call	15:23	15:55	2	var_GetInteger
arg	15:38	15:44	3	object
water	15:38	0:0	4	object
arg	15:46	15:55	3	"y-start"
water	15:46	0:0	4	"y-start"
water	15:56	0:0	2	;
water	16:4	0:0	2	sys
op	16:7	0:0	2	->
water	16:9	0:0	2	crop
op	16:13	0:0	2	.
water	16:14	0:0	2	width
op	16:21	0:0	2	=
call	16:23	16:53	2	var_GetInteger
arg	16:38	16:44	3	object
water	16:38	0:0	4	object
arg	16:46	16:53	3	"x-end"
water	16:46	0:0	4	"x-end"
op	16:55	0:0	2	-
water	16:57	0:0	2	sys
op	16:60	0:0	2	->
water	16:62	0:0	2	crop
op	16:66	0:0	2	.
water	16:67	0:0	2	x
water	16:68	0:0	2	;
water	17:4	0:0	2	sys
op	17:7	0:0	2	->
water	17:9	0:0	2	crop
op	17:13	0:0	2	.
water	17:14	0:0	2	height
op	17:21	0:0	2	=
call	17:23	17:53	2	var_GetInteger
arg	17:38	17:44	3	object
water	17:38	0:0	4	object
arg	17:46	17:53	3	"y-end"
water	17:46	0:0	4	"y-end"
op	17:55	0:0	2	-
water	17:57	0:0	2	sys
op	17:60	0:0	2	->
water	17:62	0:0	2	crop
op	17:66	0:0	2	.
water	17:67	0:0	2	y
water	17:68	0:0	2	;
if	18:4	21:4	2	(var_Get (object ,"menu-palette" ,& val ) == VLC_SUCCESS)
cond	18:8	18:49	3	var_Get (object ,"menu-palette" ,& val ) == VLC_SUCCESS
call	18:8	18:44	4	var_Get
arg	18:16	18:22	5	object
water	18:16	0:0	6	object
arg	18:24	18:38	5	"menu-palette"
water	18:24	0:0	6	"menu-palette"
arg	18:40	18:44	5	&val
op	18:40	0:0	6	&
water	18:41	0:0	6	val
op	18:46	0:0	4	==
water	18:49	0:0	4	VLC_SUCCESS
stmts	18:62	21:4	3	
water	18:62	0:0	4	{
call	19:8	19:46	4	memcpy
arg	19:15	19:27	5	sys->palette
water	19:15	0:0	6	sys
op	19:18	0:0	6	->
water	19:20	0:0	6	palette
arg	19:29	19:42	5	val.p_address
water	19:29	0:0	6	val
op	19:32	0:0	6	.
water	19:33	0:0	6	p_address
arg	19:44	19:46	5	16
water	19:44	0:0	6	16
water	19:47	0:0	4	;
water	20:8	0:0	4	sys
op	20:11	0:0	4	->
water	20:13	0:0	4	force_palette
op	20:27	0:0	4	=
water	20:29	0:0	4	true
water	20:33	0:0	4	;
water	21:4	0:0	4	}
call	22:4	22:31	2	vlc_mutex_unlock
arg	22:21	22:31	3	&sys->lock
op	22:21	0:0	4	&
water	22:22	0:0	4	sys
op	22:25	0:0	4	->
water	22:27	0:0	4	lock
water	22:32	0:0	2	;
call	23:4	26:30	2	msg_Dbg
arg	23:12	23:18	3	object
water	23:12	0:0	4	object
arg	23:20	23:59	3	"crop: %i,%i,%i,%i, palette forced: %i"
water	23:20	0:0	4	"crop: %i,%i,%i,%i, palette forced: %i"
arg	24:12	24:23	3	sys->crop.x
water	24:12	0:0	4	sys
op	24:15	0:0	4	->
water	24:17	0:0	4	crop
op	24:21	0:0	4	.
water	24:22	0:0	4	x
arg	24:25	24:36	3	sys->crop.y
water	24:25	0:0	4	sys
op	24:28	0:0	4	->
water	24:30	0:0	4	crop
op	24:34	0:0	4	.
water	24:35	0:0	4	y
arg	25:12	25:27	3	sys->crop.width
water	25:12	0:0	4	sys
op	25:15	0:0	4	->
water	25:17	0:0	4	crop
op	25:21	0:0	4	.
water	25:22	0:0	4	width
arg	25:29	25:45	3	sys->crop.height
water	25:29	0:0	4	sys
op	25:32	0:0	4	->
water	25:34	0:0	4	crop
op	25:38	0:0	4	.
water	25:39	0:0	4	height
arg	26:12	26:30	3	sys->force_palette
water	26:12	0:0	4	sys
op	26:15	0:0	4	->
water	26:17	0:0	4	force_palette
water	26:31	0:0	2	;

func	2:0	51:0	0	static void *	Thread
params	2:19	0:0	1	
param	2:21	2:34	2	void *	p_data
stmnts	0:0	50:15	1	
decl	4:4	4:34	2	intf_thread_t	*p_intf
op	4:26	0:0	2	=
water	4:28	0:0	2	p_data
decl	5:4	5:37	2	intf_sys_t	*p_sys
op	5:22	0:0	2	=
water	5:24	0:0	2	p_intf
op	5:30	0:0	2	->
water	5:32	0:0	2	p_sys
decl	6:4	6:56	2	xcb_connection_t	*p_connection
op	6:35	0:0	2	=
water	6:37	0:0	2	p_sys
op	6:42	0:0	2	->
water	6:44	0:0	2	p_connection
decl	7:4	7:31	2	int	canc
op	7:13	0:0	2	=
call	7:15	7:30	3	vlc_savecancel
call	9:4	9:28	2	xcb_flush
arg	9:15	9:28	3	p_connection
water	9:15	0:0	4	p_connection
water	9:29	0:0	2	;
decl	11:4	11:52	2	int	fd
op	11:11	0:0	2	=
call	11:13	11:51	3	xcb_get_file_descriptor
arg	11:38	11:51	4	p_connection
water	11:38	0:0	5	p_connection
for	12:4	49:4	2	(;;)
forinit	12:9	12:9	3	;
water	12:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	13:4	49:4	3	
water	13:4	0:0	4	{
call	15:8	15:32	4	vlc_restorecancel
arg	15:27	15:32	5	canc
water	15:27	0:0	6	canc
water	15:33	0:0	4	;
decl	16:8	16:59	4	struct pollfd	fds
op	16:26	0:0	4	=
water	16:28	0:0	4	{
op	16:30	0:0	4	.
water	16:31	0:0	4	fd
op	16:34	0:0	4	=
water	16:36	0:0	4	fd
water	16:38	0:0	4	,
op	16:40	0:0	4	.
water	16:41	0:0	4	events
op	16:48	0:0	4	=
water	16:50	0:0	4	POLLIN
water	16:56	0:0	4	,
water	16:58	0:0	4	}
if	17:8	23:8	4	(poll (& fds ,1 ,- 1 ) < 0)
cond	17:12	17:34	5	poll (& fds ,1 ,- 1 ) < 0
call	17:12	17:30	6	poll
arg	17:18	17:22	7	&fds
op	17:18	0:0	8	&
water	17:19	0:0	8	fds
arg	17:24	17:25	7	1
water	17:24	0:0	8	1
arg	17:27	17:30	7	-1
op	17:27	0:0	8	-
water	17:28	0:0	8	1
op	17:32	0:0	6	<
water	17:34	0:0	6	0
stmts	18:8	23:8	5	
water	18:8	0:0	6	{
if	19:12	20:21	6	(errno != EINTR)
cond	19:16	19:25	7	errno != EINTR
water	19:16	0:0	8	errno
op	19:22	0:0	8	!=
water	19:25	0:0	8	EINTR
stmts	20:16	20:21	7	
break	20:16	20:21	8	
water	21:12	0:0	6	canc
op	21:17	0:0	6	=
call	21:19	21:34	6	vlc_savecancel
water	21:35	0:0	6	;
continue	22:12	22:20	6	
water	23:8	0:0	6	}
water	24:8	0:0	4	canc
op	24:13	0:0	4	=
call	24:15	24:30	4	vlc_savecancel
water	24:31	0:0	4	;
decl	25:8	25:36	4	xcb_generic_event_t	*p_event
while	26:8	48:8	4	(( p_event =xcb_poll_for_event (p_connection ) ))
cond	26:15	26:62	5	( p_event =xcb_poll_for_event (p_connection ) )
water	26:15	0:0	6	(
water	26:17	0:0	6	p_event
op	26:25	0:0	6	=
call	26:27	26:60	6	xcb_poll_for_event
arg	26:47	26:60	7	p_connection
water	26:47	0:0	8	p_connection
water	26:62	0:0	6	)
stmts	27:8	48:8	5	
water	27:8	0:0	6	{
if	28:12	32:12	6	(( p_event -> response_type & 0 x7f ) != XCB_KEY_PRESS)
cond	28:16	28:53	7	( p_event -> response_type & 0 x7f ) != XCB_KEY_PRESS
water	28:16	0:0	8	(
water	28:18	0:0	8	p_event
op	28:25	0:0	8	->
water	28:27	0:0	8	response_type
op	28:41	0:0	8	&
water	28:43	0:0	8	0
water	28:44	0:0	8	x7f
water	28:48	0:0	8	)
op	28:50	0:0	8	!=
water	28:53	0:0	8	XCB_KEY_PRESS
stmts	29:12	32:12	7	
water	29:12	0:0	8	{
call	30:16	30:30	8	free
arg	30:22	30:30	9	p_event
water	30:22	0:0	10	p_event
water	30:31	0:0	8	;
continue	31:16	31:24	8	
water	32:12	0:0	8	}
decl	33:12	33:71	6	xcb_key_press_event_t	*e
op	33:37	0:0	6	=
water	33:39	0:0	6	(
water	33:40	0:0	6	xcb_key_press_event_t
op	33:62	0:0	6	*
water	33:63	0:0	6	)
water	33:64	0:0	6	p_event
for	34:12	45:12	6	( int i = 0 ;i < p_sys -> i_map;i ++)
forinit	0:0	34:26	7	 int i = 0 ;
decl	34:17	34:26	8	int	i
op	34:23	0:0	8	=
water	34:25	0:0	8	0
cond	34:28	34:39	7	i < p_sys -> i_map
water	34:28	0:0	8	i
op	34:30	0:0	8	<
water	34:32	0:0	8	p_sys
op	34:37	0:0	8	->
water	34:39	0:0	8	i_map
forexpr	34:46	34:47	7	i ++
water	34:46	0:0	8	i
op	34:47	0:0	8	++
stmts	35:12	45:12	7	
water	35:12	0:0	8	{
decl	36:16	36:58	8	hotkey_mapping_t	*p_map
op	36:40	0:0	8	=
op	36:42	0:0	8	&
water	36:43	0:0	8	p_sys
op	36:48	0:0	8	->
water	36:50	0:0	8	p_map
op	36:55	0:0	8	[
water	36:56	0:0	8	i
op	36:57	0:0	8	]
for	37:16	44:20	8	( int j = 0 ;p_map -> p_keys [ j ] != XCB_NO_SYMBOL;j ++)
forinit	0:0	37:30	9	 int j = 0 ;
decl	37:21	37:30	10	int	j
op	37:27	0:0	10	=
water	37:29	0:0	10	0
cond	37:32	37:52	9	p_map -> p_keys [ j ] != XCB_NO_SYMBOL
water	37:32	0:0	10	p_map
op	37:37	0:0	10	->
water	37:39	0:0	10	p_keys
op	37:45	0:0	10	[
water	37:46	0:0	10	j
op	37:47	0:0	10	]
op	37:49	0:0	10	!=
water	37:52	0:0	10	XCB_NO_SYMBOL
forexpr	37:67	37:68	9	j ++
water	37:67	0:0	10	j
op	37:68	0:0	10	++
stmts	38:20	44:20	9	
if	38:20	44:20	10	(p_map -> p_keys [ j ] == e -> detail && p_map -> i_modifier == e -> state)
cond	38:24	39:48	11	p_map -> p_keys [ j ] == e -> detail && p_map -> i_modifier == e -> state
water	38:24	0:0	12	p_map
op	38:29	0:0	12	->
water	38:31	0:0	12	p_keys
op	38:37	0:0	12	[
water	38:38	0:0	12	j
op	38:39	0:0	12	]
op	38:41	0:0	12	==
water	38:44	0:0	12	e
op	38:45	0:0	12	->
water	38:47	0:0	12	detail
op	38:54	0:0	12	&&
water	39:24	0:0	12	p_map
op	39:29	0:0	12	->
water	39:31	0:0	12	i_modifier
op	39:42	0:0	12	==
water	39:45	0:0	12	e
op	39:46	0:0	12	->
water	39:48	0:0	12	state
stmts	40:20	44:20	11	
water	40:20	0:0	12	{
call	41:24	42:53	12	var_SetInteger
arg	41:40	41:56	13	p_intf->p_libvlc
water	41:40	0:0	14	p_intf
op	41:46	0:0	14	->
water	41:48	0:0	14	p_libvlc
arg	41:58	41:78	13	"global-key-pressed"
water	41:58	0:0	14	"global-key-pressed"
arg	42:40	42:53	13	p_map->i_vlc
water	42:40	0:0	14	p_map
op	42:45	0:0	14	->
water	42:47	0:0	14	i_vlc
water	42:54	0:0	12	;
goto	43:24	43:33	12	done
water	43:29	0:0	13	done
water	44:20	0:0	12	}
water	45:12	0:0	8	}
label	46:8	46:12	6	done :
call	47:12	47:26	6	free
arg	47:18	47:26	7	p_event
water	47:18	0:0	8	p_event
water	47:27	0:0	6	;
water	48:8	0:0	6	}
water	49:4	0:0	4	}
return	50:4	50:15	2	NULL
water	50:11	0:0	3	NULL

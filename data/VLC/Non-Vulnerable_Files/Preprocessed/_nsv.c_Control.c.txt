func	2:0	68:0	0	static int	Control
params	2:18	0:0	1	
param	2:20	2:36	2	demux_t *	p_demux
param	2:38	2:49	2	int	i_query
param	2:51	2:64	2	va_list	args
stmnts	0:0	67:4	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:17	2	double	f
water	5:12	0:0	2	,
decl	5:4	5:17	2	double	*pf
decl	6:4	6:25	2	bool	b_bool
water	6:15	0:0	2	,
decl	6:4	6:25	2	bool	*pb_bool
decl	7:4	7:22	2	int64_t	i64
water	7:15	0:0	2	,
decl	7:4	7:22	2	int64_t	*pi64
switch	8:4	67:4	2	(i_query)
cond	8:12	8:12	3	i_query
water	8:12	0:0	4	i_query
stmts	9:4	67:4	3	
water	9:4	0:0	4	{
label	10:8	10:31	4	case DEMUX_GET_POSITION :
water	11:12	0:0	4	pf
op	11:15	0:0	4	=
water	11:17	0:0	4	(
water	11:18	0:0	4	double
op	11:24	0:0	4	*
water	11:25	0:0	4	)
call	11:27	11:49	4	va_arg
arg	11:35	11:39	5	args
water	11:35	0:0	6	args
arg	11:41	11:49	5	double*
water	11:41	0:0	6	double
op	11:47	0:0	6	*
water	11:50	0:0	4	;
water	12:12	0:0	4	i64
op	12:16	0:0	4	=
call	12:18	12:42	4	stream_Size
arg	12:31	12:42	5	p_demux->s
water	12:31	0:0	6	p_demux
op	12:38	0:0	6	->
water	12:40	0:0	6	s
water	12:43	0:0	4	;
if	13:12	17:12	4	(i64 > 0)
cond	13:16	13:22	5	i64 > 0
water	13:16	0:0	6	i64
op	13:20	0:0	6	>
water	13:22	0:0	6	0
stmts	14:12	17:12	5	
water	14:12	0:0	6	{
decl	15:16	15:58	6	double	current
op	15:31	0:0	6	=
call	15:33	15:57	7	stream_Tell
arg	15:46	15:57	8	p_demux->s
water	15:46	0:0	9	p_demux
op	15:53	0:0	9	->
water	15:55	0:0	9	s
op	16:16	0:0	6	*
water	16:17	0:0	6	pf
op	16:20	0:0	6	=
water	16:22	0:0	6	current
op	16:30	0:0	6	/
water	16:32	0:0	6	(
water	16:33	0:0	6	double
water	16:39	0:0	6	)
water	16:40	0:0	6	i64
water	16:43	0:0	6	;
water	17:12	0:0	6	}
else	18:12	21:12	4
stmts	19:12	21:12	5	
water	19:12	0:0	6	{
op	20:16	0:0	6	*
water	20:17	0:0	6	pf
op	20:20	0:0	6	=
water	20:22	0:0	6	0
op	20:23	0:0	6	.
water	20:24	0:0	6	0
water	20:25	0:0	6	;
water	21:12	0:0	6	}
return	22:12	22:30	4	VLC_SUCCESS
water	22:19	0:0	5	VLC_SUCCESS
label	23:8	23:31	4	case DEMUX_SET_POSITION :
water	24:12	0:0	4	f
op	24:14	0:0	4	=
water	24:16	0:0	4	(
water	24:17	0:0	4	double
water	24:23	0:0	4	)
call	24:25	24:46	4	va_arg
arg	24:33	24:37	5	args
water	24:33	0:0	6	args
arg	24:39	24:46	5	double
water	24:39	0:0	6	double
water	24:47	0:0	4	;
water	25:12	0:0	4	i64
op	25:16	0:0	4	=
call	25:18	25:42	4	stream_Size
arg	25:31	25:42	5	p_demux->s
water	25:31	0:0	6	p_demux
op	25:38	0:0	6	->
water	25:40	0:0	6	s
water	25:43	0:0	4	;
if	26:12	27:35	4	(stream_Seek (p_demux -> s ,( int64_t ) (i64 * f ) ) ||ReSynch (p_demux ))
cond	26:16	26:82	5	stream_Seek (p_demux -> s ,( int64_t ) (i64 * f ) ) ||ReSynch (p_demux )
call	26:16	26:60	6	stream_Seek
arg	26:29	26:39	7	p_demux->s
water	26:29	0:0	8	p_demux
op	26:36	0:0	8	->
water	26:38	0:0	8	s
arg	26:41	26:60	7	(int64_t)(i64*f)
call	26:41	26:58	8	(int64_t)
arg	26:51	26:58	9	i64*f
water	26:51	0:0	10	i64
op	26:55	0:0	10	*
water	26:57	0:0	10	f
op	26:62	0:0	6	||
call	26:65	26:82	6	ReSynch
arg	26:74	26:82	7	p_demux
water	26:74	0:0	8	p_demux
stmts	27:16	27:35	5	
return	27:16	27:35	6	VLC_EGENERIC
water	27:23	0:0	7	VLC_EGENERIC
water	28:12	0:0	4	p_sys
op	28:17	0:0	4	->
water	28:19	0:0	4	i_time
op	28:26	0:0	4	=
op	28:28	0:0	4	-
water	28:29	0:0	4	1
water	28:30	0:0	4	;
return	29:12	29:30	4	VLC_SUCCESS
water	29:19	0:0	5	VLC_SUCCESS
label	30:8	30:27	4	case DEMUX_GET_TIME :
water	31:12	0:0	4	pi64
op	31:17	0:0	4	=
water	31:19	0:0	4	(
water	31:20	0:0	4	int64_t
op	31:27	0:0	4	*
water	31:28	0:0	4	)
call	31:29	31:53	4	va_arg
arg	31:37	31:41	5	args
water	31:37	0:0	6	args
arg	31:43	31:53	5	int64_t*
water	31:43	0:0	6	int64_t
op	31:51	0:0	6	*
water	31:54	0:0	4	;
if	32:12	36:12	4	(p_sys -> i_time < 0)
cond	32:16	32:32	5	p_sys -> i_time < 0
water	32:16	0:0	6	p_sys
op	32:21	0:0	6	->
water	32:23	0:0	6	i_time
op	32:30	0:0	6	<
water	32:32	0:0	6	0
stmts	33:12	36:12	5	
water	33:12	0:0	6	{
op	34:16	0:0	6	*
water	34:17	0:0	6	pi64
op	34:22	0:0	6	=
water	34:24	0:0	6	0
water	34:25	0:0	6	;
return	35:16	35:35	6	VLC_EGENERIC
water	35:23	0:0	7	VLC_EGENERIC
water	36:12	0:0	6	}
op	37:12	0:0	4	*
water	37:13	0:0	4	pi64
op	37:18	0:0	4	=
water	37:20	0:0	4	p_sys
op	37:25	0:0	4	->
water	37:27	0:0	4	i_time
water	37:33	0:0	4	;
return	38:12	38:30	4	VLC_SUCCESS
water	38:19	0:0	5	VLC_SUCCESS
label	40:8	40:29	4	case DEMUX_GET_LENGTH :
water	41:12	0:0	4	pi64
op	41:17	0:0	4	=
water	41:19	0:0	4	(
water	41:20	0:0	4	int64_t
op	41:27	0:0	4	*
water	41:28	0:0	4	)
call	41:29	41:53	4	va_arg
arg	41:37	41:41	5	args
water	41:37	0:0	6	args
arg	41:43	41:53	5	int64_t*
water	41:43	0:0	6	int64_t
op	41:51	0:0	6	*
water	41:54	0:0	4	;
if	42:12	46:12	4	(p_sys -> i_mux_rate > 0)
cond	42:16	42:36	5	p_sys -> i_mux_rate > 0
water	42:16	0:0	6	p_sys
op	42:21	0:0	6	->
water	42:23	0:0	6	i_mux_rate
op	42:34	0:0	6	>
water	42:36	0:0	6	0
stmts	43:12	46:12	5	
water	43:12	0:0	6	{
op	44:16	0:0	6	*
water	44:17	0:0	6	pi64
op	44:22	0:0	6	=
water	44:24	0:0	6	(
water	44:25	0:0	6	int64_t
water	44:32	0:0	6	)
water	44:33	0:0	6	1000000
op	44:41	0:0	6	*
water	44:43	0:0	6	(
call	44:45	44:69	6	stream_Size
arg	44:58	44:69	7	p_demux->s
water	44:58	0:0	8	p_demux
op	44:65	0:0	8	->
water	44:67	0:0	8	s
op	44:71	0:0	6	/
water	44:73	0:0	6	50
water	44:76	0:0	6	)
op	44:78	0:0	6	/
water	44:80	0:0	6	p_sys
op	44:85	0:0	6	->
water	44:87	0:0	6	i_mux_rate
water	44:97	0:0	6	;
return	45:16	45:34	6	VLC_SUCCESS
water	45:23	0:0	7	VLC_SUCCESS
water	46:12	0:0	6	}
op	47:12	0:0	4	*
water	47:13	0:0	4	pi64
op	47:18	0:0	4	=
water	47:20	0:0	4	0
water	47:21	0:0	4	;
return	48:12	48:31	4	VLC_EGENERIC
water	48:19	0:0	5	VLC_EGENERIC
label	50:8	50:26	4	case DEMUX_GET_FPS :
water	51:12	0:0	4	pf
op	51:15	0:0	4	=
water	51:17	0:0	4	(
water	51:18	0:0	4	double
op	51:24	0:0	4	*
water	51:25	0:0	4	)
call	51:26	51:49	4	va_arg
arg	51:34	51:38	5	args
water	51:34	0:0	6	args
arg	51:40	51:49	5	double*
water	51:40	0:0	6	double
op	51:47	0:0	6	*
water	51:50	0:0	4	;
op	52:12	0:0	4	*
water	52:13	0:0	4	pf
op	52:16	0:0	4	=
water	52:18	0:0	4	(
water	52:19	0:0	4	double
water	52:25	0:0	4	)
water	52:26	0:0	4	1000000
op	52:33	0:0	4	.
water	52:34	0:0	4	0
op	52:36	0:0	4	/
water	52:38	0:0	4	(
water	52:39	0:0	4	double
water	52:45	0:0	4	)
water	52:46	0:0	4	p_sys
op	52:51	0:0	4	->
water	52:53	0:0	4	i_pcr_inc
water	52:62	0:0	4	;
return	53:12	53:30	4	VLC_SUCCESS
water	53:19	0:0	5	VLC_SUCCESS
label	54:8	54:29	4	case DEMUX_CAN_RECORD :
water	55:12	0:0	4	pb_bool
op	55:20	0:0	4	=
water	55:22	0:0	4	(
water	55:23	0:0	4	bool
op	55:27	0:0	4	*
water	55:28	0:0	4	)
call	55:29	55:50	4	va_arg
arg	55:37	55:41	5	args
water	55:37	0:0	6	args
arg	55:43	55:50	5	bool*
water	55:43	0:0	6	bool
op	55:48	0:0	6	*
water	55:51	0:0	4	;
op	56:12	0:0	4	*
water	56:13	0:0	4	pb_bool
op	56:21	0:0	4	=
water	56:23	0:0	4	true
water	56:27	0:0	4	;
return	57:12	57:30	4	VLC_SUCCESS
water	57:19	0:0	5	VLC_SUCCESS
label	58:8	58:35	4	case DEMUX_SET_RECORD_STATE :
water	59:12	0:0	4	b_bool
op	59:19	0:0	4	=
water	59:21	0:0	4	(
water	59:22	0:0	4	bool
water	59:26	0:0	4	)
call	59:27	59:45	4	va_arg
arg	59:35	59:39	5	args
water	59:35	0:0	6	args
arg	59:41	59:45	5	int
water	59:41	0:0	6	int
water	59:46	0:0	4	;
if	60:12	61:76	4	(! b_bool)
cond	60:16	60:17	5	! b_bool
op	60:16	0:0	6	!
water	60:17	0:0	6	b_bool
stmts	61:16	61:76	5	
call	61:16	61:75	6	stream_Control
arg	61:32	61:42	7	p_demux->s
water	61:32	0:0	8	p_demux
op	61:39	0:0	8	->
water	61:41	0:0	8	s
arg	61:44	61:67	7	STREAM_SET_RECORD_STATE
water	61:44	0:0	8	STREAM_SET_RECORD_STATE
arg	61:69	61:75	7	false
water	61:69	0:0	8	false
water	61:76	0:0	6	;
water	62:12	0:0	4	p_sys
op	62:17	0:0	4	->
water	62:19	0:0	4	b_start_record
op	62:34	0:0	4	=
water	62:36	0:0	4	b_bool
water	62:42	0:0	4	;
return	63:12	63:30	4	VLC_SUCCESS
water	63:19	0:0	5	VLC_SUCCESS
label	64:8	64:27	4	case DEMUX_SET_TIME :
label	65:8	65:15	4	default :
return	66:12	66:31	4	VLC_EGENERIC
water	66:19	0:0	5	VLC_EGENERIC
water	67:4	0:0	4	}

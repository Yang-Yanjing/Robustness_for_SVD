func	2:0	40:0	0	static void	DoChildren
params	2:22	0:0	1	
param	2:24	2:51	2	playlist_export_t *	p_export
param	2:53	2:77	2	playlist_item_t *	p_root
stmnts	5:4	39:4	1	
for	5:4	39:4	2	( int i = 0 ;i < p_root -> i_children;i ++)
forinit	0:0	5:18	3	 int i = 0 ;
decl	5:9	5:18	4	int	i
op	5:15	0:0	4	=
water	5:17	0:0	4	0
cond	5:20	5:32	3	i < p_root -> i_children
water	5:20	0:0	4	i
op	5:22	0:0	4	<
water	5:24	0:0	4	p_root
op	5:30	0:0	4	->
water	5:32	0:0	4	i_children
forexpr	5:45	5:46	3	i ++
water	5:45	0:0	4	i
op	5:46	0:0	4	++
stmts	6:4	39:4	3	
water	6:4	0:0	4	{
decl	7:8	7:59	4	playlist_item_t	*p_current
op	7:35	0:0	4	=
water	7:37	0:0	4	p_root
op	7:43	0:0	4	->
water	7:45	0:0	4	pp_children
op	7:56	0:0	4	[
water	7:57	0:0	4	i
op	7:58	0:0	4	]
call	8:8	8:26	4	assert
arg	8:16	8:26	5	p_current
water	8:16	0:0	6	p_current
water	8:27	0:0	4	;
if	9:8	10:20	4	(p_current -> i_flags & PLAYLIST_SAVE_FLAG)
cond	9:12	9:33	5	p_current -> i_flags & PLAYLIST_SAVE_FLAG
water	9:12	0:0	6	p_current
op	9:21	0:0	6	->
water	9:23	0:0	6	i_flags
op	9:31	0:0	6	&
water	9:33	0:0	6	PLAYLIST_SAVE_FLAG
stmts	10:12	10:20	5	
continue	10:12	10:20	6	
if	11:8	15:8	4	(p_current -> i_children >= 0)
cond	11:12	11:37	5	p_current -> i_children >= 0
water	11:12	0:0	6	p_current
op	11:21	0:0	6	->
water	11:23	0:0	6	i_children
op	11:34	0:0	6	>=
water	11:37	0:0	6	0
stmts	12:8	15:8	5	
water	12:8	0:0	6	{
call	13:12	13:44	6	DoChildren
arg	13:24	13:32	7	p_export
water	13:24	0:0	8	p_export
arg	13:34	13:44	7	p_current
water	13:34	0:0	8	p_current
water	13:45	0:0	6	;
continue	14:12	14:20	6	
water	15:8	0:0	6	}
decl	16:8	16:29	4	char	*psz_name
op	16:23	0:0	4	=
water	16:25	0:0	4	NULL
decl	17:8	17:64	4	char	*psz_tmp
op	17:22	0:0	4	=
call	17:24	17:63	5	input_item_GetName
arg	17:44	17:63	6	p_current->p_input
water	17:44	0:0	7	p_current
op	17:53	0:0	7	->
water	17:55	0:0	7	p_input
if	18:8	19:59	4	(psz_tmp)
cond	18:12	18:12	5	psz_tmp
water	18:12	0:0	6	psz_tmp
stmts	19:12	19:59	5	
water	19:12	0:0	6	psz_name
op	19:21	0:0	6	=
call	19:23	19:58	6	convert_xml_special_chars
arg	19:50	19:58	7	psz_tmp
water	19:50	0:0	8	psz_tmp
water	19:59	0:0	6	;
call	20:8	20:22	4	free
arg	20:14	20:22	5	psz_tmp
water	20:14	0:0	6	psz_tmp
water	20:23	0:0	4	;
if	21:8	37:8	4	(psz_name)
cond	21:12	21:12	5	psz_name
water	21:12	0:0	6	psz_name
stmts	22:8	37:8	5	
water	22:8	0:0	6	{
decl	23:12	23:35	6	char	*psz_artist
op	23:29	0:0	6	=
water	23:31	0:0	6	NULL
water	24:12	0:0	6	psz_tmp
op	24:20	0:0	6	=
call	24:22	24:63	6	input_item_GetArtist
arg	24:44	24:63	7	p_current->p_input
water	24:44	0:0	8	p_current
op	24:53	0:0	8	->
water	24:55	0:0	8	p_input
water	24:64	0:0	6	;
if	25:12	26:65	6	(psz_tmp)
cond	25:16	25:16	7	psz_tmp
water	25:16	0:0	8	psz_tmp
stmts	26:16	26:65	7	
water	26:16	0:0	8	psz_artist
op	26:27	0:0	8	=
call	26:29	26:64	8	convert_xml_special_chars
arg	26:56	26:64	9	psz_tmp
water	26:56	0:0	10	psz_tmp
water	26:65	0:0	8	;
call	27:12	27:26	6	free
arg	27:18	27:26	7	psz_tmp
water	27:18	0:0	8	psz_tmp
water	27:27	0:0	6	;
decl	28:12	28:77	6	mtime_t	i_duration
op	28:31	0:0	6	=
call	28:33	28:76	7	input_item_GetDuration
arg	28:57	28:76	8	p_current->p_input
water	28:57	0:0	9	p_current
op	28:66	0:0	9	->
water	28:68	0:0	9	p_input
decl	29:12	29:51	6	int	min
op	29:20	0:0	6	=
water	29:22	0:0	6	(
water	29:24	0:0	6	i_duration
op	29:35	0:0	6	/
water	29:37	0:0	6	1000000
water	29:45	0:0	6	)
op	29:47	0:0	6	/
water	29:49	0:0	6	60
decl	30:12	30:57	6	int	sec
op	30:20	0:0	6	=
water	30:22	0:0	6	(
water	30:24	0:0	6	i_duration
op	30:35	0:0	6	/
water	30:37	0:0	6	1000000
water	30:45	0:0	6	)
op	30:47	0:0	6	-
water	30:49	0:0	6	min
op	30:53	0:0	6	*
water	30:55	0:0	6	60
if	32:12	33:113	6	(psz_artist && * psz_artist)
cond	32:16	32:31	7	psz_artist && * psz_artist
water	32:16	0:0	8	psz_artist
op	32:27	0:0	8	&&
op	32:30	0:0	8	*
water	32:31	0:0	8	psz_artist
stmts	33:16	33:113	7	
call	33:16	33:112	8	fprintf
arg	33:25	33:41	9	p_export->p_file
water	33:25	0:0	10	p_export
op	33:33	0:0	10	->
water	33:35	0:0	10	p_file
arg	33:43	33:79	9	"    <li>%s - %s (%02d:%02d)</li>\n"
water	33:43	0:0	10	"    <li>%s - %s (%02d:%02d)</li>\n"
arg	33:81	33:91	9	psz_artist
water	33:81	0:0	10	psz_artist
arg	33:93	33:101	9	psz_name
water	33:93	0:0	10	psz_name
arg	33:103	33:106	9	min
water	33:103	0:0	10	min
arg	33:108	33:112	9	sec
water	33:108	0:0	10	sec
water	33:113	0:0	8	;
else	34:12	35:94	6
stmts	35:16	35:94	7	
call	35:16	35:93	8	fprintf
arg	35:25	35:41	9	p_export->p_file
water	35:25	0:0	10	p_export
op	35:33	0:0	10	->
water	35:35	0:0	10	p_file
arg	35:43	35:72	9	"    <li>%s (%2d:%2d)</li>\n"
water	35:43	0:0	10	"    <li>%s (%2d:%2d)</li>\n"
arg	35:74	35:82	9	psz_name
water	35:74	0:0	10	psz_name
arg	35:84	35:87	9	min
water	35:84	0:0	10	min
arg	35:89	35:93	9	sec
water	35:89	0:0	10	sec
water	35:94	0:0	8	;
call	36:12	36:29	6	free
arg	36:18	36:29	7	psz_artist
water	36:18	0:0	8	psz_artist
water	36:30	0:0	6	;
water	37:8	0:0	6	}
call	38:8	38:23	4	free
arg	38:14	38:23	5	psz_name
water	38:14	0:0	6	psz_name
water	38:24	0:0	4	;
water	39:4	0:0	4	}

func	2:0	59:0	0	static int	CacheLoadConfig
params	2:27	0:0	1	
param	2:28	2:48	2	module_config_t *	cfg
param	2:50	2:60	2	FILE *	file
stmnts	4:4	58:13	1	
call	4:4	4:31	2	LOAD_IMMEDIATE
arg	4:20	4:31	3	cfg->i_type
water	4:20	0:0	4	cfg
op	4:23	0:0	4	->
water	4:25	0:0	4	i_type
water	4:32	0:0	2	;
call	5:4	5:32	2	LOAD_IMMEDIATE
arg	5:20	5:32	3	cfg->i_short
water	5:20	0:0	4	cfg
op	5:23	0:0	4	->
water	5:25	0:0	4	i_short
water	5:33	0:0	2	;
call	6:4	6:30	2	LOAD_FLAG
arg	6:15	6:30	3	cfg->b_advanced
water	6:15	0:0	4	cfg
op	6:18	0:0	4	->
water	6:20	0:0	4	b_advanced
water	6:31	0:0	2	;
call	7:4	7:30	2	LOAD_FLAG
arg	7:15	7:30	3	cfg->b_internal
water	7:15	0:0	4	cfg
op	7:18	0:0	4	->
water	7:20	0:0	4	b_internal
water	7:31	0:0	2	;
call	8:4	8:32	2	LOAD_FLAG
arg	8:15	8:32	3	cfg->b_unsaveable
water	8:15	0:0	4	cfg
op	8:18	0:0	4	->
water	8:20	0:0	4	b_unsaveable
water	8:33	0:0	2	;
call	9:4	9:26	2	LOAD_FLAG
arg	9:15	9:26	3	cfg->b_safe
water	9:15	0:0	4	cfg
op	9:18	0:0	4	->
water	9:20	0:0	4	b_safe
water	9:27	0:0	2	;
call	10:4	10:29	2	LOAD_FLAG
arg	10:15	10:29	3	cfg->b_removed
water	10:15	0:0	4	cfg
op	10:18	0:0	4	->
water	10:20	0:0	4	b_removed
water	10:30	0:0	2	;
call	11:4	11:30	2	LOAD_STRING
arg	11:17	11:30	3	cfg->psz_type
water	11:17	0:0	4	cfg
op	11:20	0:0	4	->
water	11:22	0:0	4	psz_type
water	11:31	0:0	2	;
call	12:4	12:30	2	LOAD_STRING
arg	12:17	12:30	3	cfg->psz_name
water	12:17	0:0	4	cfg
op	12:20	0:0	4	->
water	12:22	0:0	4	psz_name
water	12:31	0:0	2	;
call	13:4	13:30	2	LOAD_STRING
arg	13:17	13:30	3	cfg->psz_text
water	13:17	0:0	4	cfg
op	13:20	0:0	4	->
water	13:22	0:0	4	psz_text
water	13:31	0:0	2	;
call	14:4	14:34	2	LOAD_STRING
arg	14:17	14:34	3	cfg->psz_longtext
water	14:17	0:0	4	cfg
op	14:20	0:0	4	->
water	14:22	0:0	4	psz_longtext
water	14:35	0:0	2	;
call	15:4	15:35	2	LOAD_IMMEDIATE
arg	15:20	15:35	3	cfg->list_count
water	15:20	0:0	4	cfg
op	15:23	0:0	4	->
water	15:25	0:0	4	list_count
water	15:36	0:0	2	;
if	16:4	34:4	2	(IsConfigStringType (cfg -> i_type ))
cond	16:8	16:39	3	IsConfigStringType (cfg -> i_type )
call	16:8	16:39	4	IsConfigStringType
arg	16:28	16:39	5	cfg->i_type
water	16:28	0:0	6	cfg
op	16:31	0:0	6	->
water	16:33	0:0	6	i_type
stmts	17:4	34:4	3	
water	17:4	0:0	4	{
call	18:8	18:34	4	LOAD_STRING
arg	18:21	18:34	5	cfg->orig.psz
water	18:21	0:0	6	cfg
op	18:24	0:0	6	->
water	18:26	0:0	6	orig
op	18:30	0:0	6	.
water	18:31	0:0	6	psz
water	18:35	0:0	4	;
if	19:8	20:51	4	(cfg -> orig . psz != NULL)
cond	19:12	19:29	5	cfg -> orig . psz != NULL
water	19:12	0:0	6	cfg
op	19:15	0:0	6	->
water	19:17	0:0	6	orig
op	19:21	0:0	6	.
water	19:22	0:0	6	psz
op	19:26	0:0	6	!=
water	19:29	0:0	6	NULL
stmts	20:12	20:51	5	
water	20:12	0:0	6	cfg
op	20:15	0:0	6	->
water	20:17	0:0	6	value
op	20:22	0:0	6	.
water	20:23	0:0	6	psz
op	20:27	0:0	6	=
call	20:29	20:50	6	strdup
arg	20:37	20:50	7	cfg->orig.psz
water	20:37	0:0	8	cfg
op	20:40	0:0	8	->
water	20:42	0:0	8	orig
op	20:46	0:0	8	.
water	20:47	0:0	8	psz
water	20:51	0:0	6	;
else	21:8	22:33	4
stmts	22:12	22:33	5	
water	22:12	0:0	6	cfg
op	22:15	0:0	6	->
water	22:17	0:0	6	value
op	22:22	0:0	6	.
water	22:23	0:0	6	psz
op	22:27	0:0	6	=
water	22:29	0:0	6	NULL
water	22:33	0:0	6	;
if	23:8	24:71	4	(cfg -> list_count)
cond	23:12	23:17	5	cfg -> list_count
water	23:12	0:0	6	cfg
op	23:15	0:0	6	->
water	23:17	0:0	6	list_count
stmts	24:12	24:71	5	
water	24:12	0:0	6	cfg
op	24:15	0:0	6	->
water	24:17	0:0	6	list
op	24:21	0:0	6	.
water	24:22	0:0	6	psz
op	24:26	0:0	6	=
call	24:28	24:70	6	xmalloc
arg	24:37	24:70	7	cfg->list_count*sizeof(char*)
water	24:37	0:0	8	cfg
op	24:40	0:0	8	->
water	24:42	0:0	8	list_count
op	24:53	0:0	8	*
op	24:55	0:0	8	sizeof
water	24:62	0:0	8	(
water	24:63	0:0	8	char
op	24:68	0:0	8	*
water	24:69	0:0	8	)
water	24:71	0:0	6	;
else	25:8	26:44	4
stmts	26:12	26:44	5	
call	26:12	26:43	6	LOAD_IMMEDIATE
arg	26:27	26:43	7	cfg->list.psz_cb
water	26:27	0:0	8	cfg
op	26:30	0:0	8	->
water	26:32	0:0	8	list
op	26:36	0:0	8	.
water	26:37	0:0	8	psz_cb
water	26:44	0:0	6	;
for	27:8	33:8	4	(unsigned i = 0 ;i < cfg -> list_count;i ++)
forinit	27:13	27:27	5	unsigned i = 0 ;
water	27:13	0:0	6	unsigned
water	27:22	0:0	6	i
op	27:24	0:0	6	=
water	27:26	0:0	6	0
water	27:27	0:0	6	;
cond	27:29	27:38	5	i < cfg -> list_count
water	27:29	0:0	6	i
op	27:31	0:0	6	<
water	27:33	0:0	6	cfg
op	27:36	0:0	6	->
water	27:38	0:0	6	list_count
forexpr	27:50	27:51	5	i ++
water	27:50	0:0	6	i
op	27:51	0:0	6	++
stmts	28:8	33:8	5	
water	28:8	0:0	6	{
call	29:12	29:41	6	LOAD_STRING
arg	29:25	29:41	7	cfg->list.psz[i]
water	29:25	0:0	8	cfg
op	29:28	0:0	8	->
water	29:30	0:0	8	list
op	29:34	0:0	8	.
water	29:35	0:0	8	psz
op	29:38	0:0	8	[
water	29:39	0:0	8	i
op	29:40	0:0	8	]
water	29:42	0:0	6	;
if	30:12	32:26	6	(cfg -> list . psz [ i ] == NULL && ( cfg -> list . psz [ i ] =calloc (1 ,1 ) ) == NULL)
cond	30:16	31:54	7	cfg -> list . psz [ i ] == NULL && ( cfg -> list . psz [ i ] =calloc (1 ,1 ) ) == NULL
water	30:16	0:0	8	cfg
op	30:19	0:0	8	->
water	30:21	0:0	8	list
op	30:25	0:0	8	.
water	30:26	0:0	8	psz
op	30:29	0:0	8	[
water	30:30	0:0	8	i
op	30:31	0:0	8	]
op	30:33	0:0	8	==
water	30:36	0:0	8	NULL
op	31:13	0:0	8	&&
water	31:16	0:0	8	(
water	31:17	0:0	8	cfg
op	31:20	0:0	8	->
water	31:22	0:0	8	list
op	31:26	0:0	8	.
water	31:27	0:0	8	psz
op	31:30	0:0	8	[
water	31:31	0:0	8	i
op	31:32	0:0	8	]
op	31:34	0:0	8	=
call	31:36	31:48	8	calloc
arg	31:44	31:45	9	1
water	31:44	0:0	10	1
arg	31:47	31:48	9	1
water	31:47	0:0	10	1
water	31:49	0:0	8	)
op	31:51	0:0	8	==
water	31:54	0:0	8	NULL
stmts	32:16	32:26	7	
goto	32:16	32:26	8	error
water	32:21	0:0	9	error
water	33:8	0:0	6	}
water	34:4	0:0	4	}
else	35:4	47:4	2
stmts	36:4	47:4	3	
water	36:4	0:0	4	{
call	37:8	37:33	4	LOAD_IMMEDIATE
arg	37:24	37:33	5	cfg->orig
water	37:24	0:0	6	cfg
op	37:27	0:0	6	->
water	37:29	0:0	6	orig
water	37:34	0:0	4	;
call	38:8	38:32	4	LOAD_IMMEDIATE
arg	38:24	38:32	5	cfg->min
water	38:24	0:0	6	cfg
op	38:27	0:0	6	->
water	38:29	0:0	6	min
water	38:33	0:0	4	;
call	39:8	39:32	4	LOAD_IMMEDIATE
arg	39:24	39:32	5	cfg->max
water	39:24	0:0	6	cfg
op	39:27	0:0	6	->
water	39:29	0:0	6	max
water	39:33	0:0	4	;
water	40:8	0:0	4	cfg
op	40:11	0:0	4	->
water	40:13	0:0	4	value
op	40:19	0:0	4	=
water	40:21	0:0	4	cfg
op	40:24	0:0	4	->
water	40:26	0:0	4	orig
water	40:30	0:0	4	;
if	41:8	42:66	4	(cfg -> list_count)
cond	41:12	41:17	5	cfg -> list_count
water	41:12	0:0	6	cfg
op	41:15	0:0	6	->
water	41:17	0:0	6	list_count
stmts	42:12	42:66	5	
water	42:12	0:0	6	cfg
op	42:15	0:0	6	->
water	42:17	0:0	6	list
op	42:21	0:0	6	.
water	42:22	0:0	6	i
op	42:24	0:0	6	=
call	42:26	42:65	6	xmalloc
arg	42:35	42:65	7	cfg->list_count*sizeof(int)
water	42:35	0:0	8	cfg
op	42:38	0:0	8	->
water	42:40	0:0	8	list_count
op	42:51	0:0	8	*
op	42:53	0:0	8	sizeof
water	42:60	0:0	8	(
water	42:61	0:0	8	int
water	42:64	0:0	8	)
water	42:66	0:0	6	;
else	43:8	44:42	4
stmts	44:12	44:42	5	
call	44:12	44:41	6	LOAD_IMMEDIATE
arg	44:27	44:41	7	cfg->list.i_cb
water	44:27	0:0	8	cfg
op	44:30	0:0	8	->
water	44:32	0:0	8	list
op	44:36	0:0	8	.
water	44:37	0:0	8	i_cb
water	44:42	0:0	6	;
for	45:8	46:44	4	(unsigned i = 0 ;i < cfg -> list_count;i ++)
forinit	45:13	45:27	5	unsigned i = 0 ;
water	45:13	0:0	6	unsigned
water	45:22	0:0	6	i
op	45:24	0:0	6	=
water	45:26	0:0	6	0
water	45:27	0:0	6	;
cond	45:29	45:38	5	i < cfg -> list_count
water	45:29	0:0	6	i
op	45:31	0:0	6	<
water	45:33	0:0	6	cfg
op	45:36	0:0	6	->
water	45:38	0:0	6	list_count
forexpr	45:50	45:51	5	i ++
water	45:50	0:0	6	i
op	45:51	0:0	6	++
stmts	46:13	46:44	5	
call	46:13	46:43	6	LOAD_IMMEDIATE
arg	46:29	46:43	7	cfg->list.i[i]
water	46:29	0:0	8	cfg
op	46:32	0:0	8	->
water	46:34	0:0	8	list
op	46:38	0:0	8	.
water	46:39	0:0	8	i
op	46:40	0:0	8	[
water	46:41	0:0	8	i
op	46:42	0:0	8	]
water	46:44	0:0	6	;
water	47:4	0:0	4	}
water	48:4	0:0	2	cfg
op	48:7	0:0	2	->
water	48:9	0:0	2	list_text
op	48:19	0:0	2	=
call	48:21	48:63	2	xmalloc
arg	48:30	48:63	3	cfg->list_count*sizeof(char*)
water	48:30	0:0	4	cfg
op	48:33	0:0	4	->
water	48:35	0:0	4	list_count
op	48:46	0:0	4	*
op	48:48	0:0	4	sizeof
water	48:55	0:0	4	(
water	48:56	0:0	4	char
op	48:61	0:0	4	*
water	48:62	0:0	4	)
water	48:64	0:0	2	;
for	49:4	55:4	2	(unsigned i = 0 ;i < cfg -> list_count;i ++)
forinit	49:9	49:23	3	unsigned i = 0 ;
water	49:9	0:0	4	unsigned
water	49:18	0:0	4	i
op	49:20	0:0	4	=
water	49:22	0:0	4	0
water	49:23	0:0	4	;
cond	49:25	49:34	3	i < cfg -> list_count
water	49:25	0:0	4	i
op	49:27	0:0	4	<
water	49:29	0:0	4	cfg
op	49:32	0:0	4	->
water	49:34	0:0	4	list_count
forexpr	49:46	49:47	3	i ++
water	49:46	0:0	4	i
op	49:47	0:0	4	++
stmts	50:4	55:4	3	
water	50:4	0:0	4	{
call	51:8	51:38	4	LOAD_STRING
arg	51:21	51:38	5	cfg->list_text[i]
water	51:21	0:0	6	cfg
op	51:24	0:0	6	->
water	51:26	0:0	6	list_text
op	51:35	0:0	6	[
water	51:36	0:0	6	i
op	51:37	0:0	6	]
water	51:39	0:0	4	;
if	52:8	54:22	4	(cfg -> list_text [ i ] == NULL && ( cfg -> list_text [ i ] =calloc (1 ,1 ) ) == NULL)
cond	52:12	53:51	5	cfg -> list_text [ i ] == NULL && ( cfg -> list_text [ i ] =calloc (1 ,1 ) ) == NULL
water	52:12	0:0	6	cfg
op	52:15	0:0	6	->
water	52:17	0:0	6	list_text
op	52:26	0:0	6	[
water	52:27	0:0	6	i
op	52:28	0:0	6	]
op	52:30	0:0	6	==
water	52:33	0:0	6	NULL
op	53:9	0:0	6	&&
water	53:12	0:0	6	(
water	53:13	0:0	6	cfg
op	53:16	0:0	6	->
water	53:18	0:0	6	list_text
op	53:27	0:0	6	[
water	53:28	0:0	6	i
op	53:29	0:0	6	]
op	53:31	0:0	6	=
call	53:33	53:45	6	calloc
arg	53:41	53:42	7	1
water	53:41	0:0	8	1
arg	53:44	53:45	7	1
water	53:44	0:0	8	1
water	53:46	0:0	6	)
op	53:48	0:0	6	==
water	53:51	0:0	6	NULL
stmts	54:12	54:22	5	
goto	54:12	54:22	6	error
water	54:17	0:0	7	error
water	55:4	0:0	4	}
return	56:4	56:12	2	0
water	56:11	0:0	3	0
label	57:0	57:5	2	error :
return	58:4	58:13	2	-1
op	58:11	0:0	3	-
water	58:12	0:0	3	1

func	2:0	59:0	0	static int	DecoderOpen
params	2:22	0:0	1	
param	2:24	2:45	2	vlc_object_t *	p_this
stmnts	0:0	58:22	1	
decl	4:4	4:41	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:24	2	const int16_t	*table
switch	6:4	16:4	2	(p_dec -> fmt_in . i_codec)
cond	6:12	6:26	3	p_dec -> fmt_in . i_codec
water	6:12	0:0	4	p_dec
op	6:17	0:0	4	->
water	6:19	0:0	4	fmt_in
op	6:25	0:0	4	.
water	6:26	0:0	4	i_codec
stmts	7:4	16:4	3	
water	7:4	0:0	4	{
label	8:8	8:27	4	case VLC_CODEC_ALAW :
water	9:12	0:0	4	table
op	9:18	0:0	4	=
water	9:20	0:0	4	alawtos16
water	9:29	0:0	4	;
break	10:12	10:17	4	
label	11:8	11:28	4	case VLC_CODEC_MULAW :
water	12:12	0:0	4	table
op	12:18	0:0	4	=
water	12:20	0:0	4	ulawtos16
water	12:29	0:0	4	;
break	13:12	13:17	4	
label	14:8	14:15	4	default :
return	15:12	15:31	4	VLC_EGENERIC
water	15:19	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
if	17:4	23:4	2	(p_dec -> fmt_in . audio . i_channels <= 0 || p_dec -> fmt_in . audio . i_channels > AOUT_CHAN_MAX)
cond	17:8	18:41	3	p_dec -> fmt_in . audio . i_channels <= 0 || p_dec -> fmt_in . audio . i_channels > AOUT_CHAN_MAX
water	17:8	0:0	4	p_dec
op	17:13	0:0	4	->
water	17:15	0:0	4	fmt_in
op	17:21	0:0	4	.
water	17:22	0:0	4	audio
op	17:27	0:0	4	.
water	17:28	0:0	4	i_channels
op	17:39	0:0	4	<=
water	17:42	0:0	4	0
op	17:44	0:0	4	||
water	18:8	0:0	4	p_dec
op	18:13	0:0	4	->
water	18:15	0:0	4	fmt_in
op	18:21	0:0	4	.
water	18:22	0:0	4	audio
op	18:27	0:0	4	.
water	18:28	0:0	4	i_channels
op	18:39	0:0	4	>
water	18:41	0:0	4	AOUT_CHAN_MAX
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
call	20:8	21:48	4	msg_Err
arg	20:17	20:22	5	p_dec
water	20:17	0:0	6	p_dec
arg	20:24	20:54	5	"bad channels count (1-9): %i"
water	20:24	0:0	6	"bad channels count (1-9): %i"
arg	21:17	21:48	5	p_dec->fmt_in.audio.i_channels
water	21:17	0:0	6	p_dec
op	21:22	0:0	6	->
water	21:24	0:0	6	fmt_in
op	21:30	0:0	6	.
water	21:31	0:0	6	audio
op	21:36	0:0	6	.
water	21:37	0:0	6	i_channels
water	21:49	0:0	4	;
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
water	23:4	0:0	4	}
if	24:4	28:4	2	(p_dec -> fmt_in . audio . i_rate <= 0)
cond	24:8	24:38	3	p_dec -> fmt_in . audio . i_rate <= 0
water	24:8	0:0	4	p_dec
op	24:13	0:0	4	->
water	24:15	0:0	4	fmt_in
op	24:21	0:0	4	.
water	24:22	0:0	4	audio
op	24:27	0:0	4	.
water	24:28	0:0	4	i_rate
op	24:35	0:0	4	<=
water	24:38	0:0	4	0
stmts	25:4	28:4	3	
water	25:4	0:0	4	{
call	26:8	26:76	4	msg_Err
arg	26:17	26:22	5	p_dec
water	26:17	0:0	6	p_dec
arg	26:24	26:47	5	"bad samplerate: %d Hz"
water	26:24	0:0	6	"bad samplerate: %d Hz"
arg	26:49	26:76	5	p_dec->fmt_in.audio.i_rate
water	26:49	0:0	6	p_dec
op	26:54	0:0	6	->
water	26:56	0:0	6	fmt_in
op	26:62	0:0	6	.
water	26:63	0:0	6	audio
op	26:68	0:0	6	.
water	26:69	0:0	6	i_rate
water	26:77	0:0	4	;
return	27:8	27:27	4	VLC_EGENERIC
water	27:15	0:0	5	VLC_EGENERIC
water	28:4	0:0	4	}
call	29:4	30:72	2	msg_Dbg
arg	29:13	29:18	3	p_dec
water	29:13	0:0	4	p_dec
arg	29:20	29:49	3	"samplerate:%dHz channels:%d"
water	29:20	0:0	4	"samplerate:%dHz channels:%d"
arg	30:13	30:39	3	p_dec->fmt_in.audio.i_rate
water	30:13	0:0	4	p_dec
op	30:18	0:0	4	->
water	30:20	0:0	4	fmt_in
op	30:26	0:0	4	.
water	30:27	0:0	4	audio
op	30:32	0:0	4	.
water	30:33	0:0	4	i_rate
arg	30:41	30:72	3	p_dec->fmt_in.audio.i_channels
water	30:41	0:0	4	p_dec
op	30:46	0:0	4	->
water	30:48	0:0	4	fmt_in
op	30:54	0:0	4	.
water	30:55	0:0	4	audio
op	30:60	0:0	4	.
water	30:61	0:0	4	i_channels
water	30:73	0:0	2	;
decl	32:4	32:49	2	decoder_sys_t	*p_sys
op	32:25	0:0	2	=
call	32:27	32:48	3	malloc
arg	32:34	32:48	4	sizeof(*p_sys)
op	32:34	0:0	5	sizeof
water	32:40	0:0	5	(
op	32:41	0:0	5	*
water	32:42	0:0	5	p_sys
water	32:47	0:0	5	)
if	33:4	34:25	2	(unlikely (p_sys == NULL ))
cond	33:8	33:30	3	unlikely (p_sys == NULL )
call	33:8	33:30	4	unlikely
arg	33:17	33:30	5	p_sys==NULL
water	33:17	0:0	6	p_sys
op	33:23	0:0	6	==
water	33:26	0:0	6	NULL
stmts	34:8	34:25	3	
return	34:8	34:25	4	VLC_ENOMEM
water	34:15	0:0	5	VLC_ENOMEM
water	36:4	0:0	2	p_dec
op	36:9	0:0	2	->
water	36:11	0:0	2	pf_decode_audio
op	36:27	0:0	2	=
water	36:29	0:0	2	DecodeBlock
water	36:40	0:0	2	;
water	37:4	0:0	2	p_dec
op	37:9	0:0	2	->
water	37:11	0:0	2	p_sys
op	37:17	0:0	2	=
water	37:19	0:0	2	p_sys
water	37:24	0:0	2	;
water	38:4	0:0	2	p_dec
op	38:9	0:0	2	->
water	38:11	0:0	2	fmt_out
op	38:18	0:0	2	.
water	38:19	0:0	2	i_cat
op	38:25	0:0	2	=
water	38:27	0:0	2	AUDIO_ES
water	38:35	0:0	2	;
water	39:4	0:0	2	p_dec
op	39:9	0:0	2	->
water	39:11	0:0	2	fmt_out
op	39:18	0:0	2	.
water	39:19	0:0	2	i_codec
op	39:27	0:0	2	=
water	39:29	0:0	2	VLC_CODEC_S16N
water	39:43	0:0	2	;
water	40:4	0:0	2	p_dec
op	40:9	0:0	2	->
water	40:11	0:0	2	fmt_out
op	40:18	0:0	2	.
water	40:19	0:0	2	audio
op	40:24	0:0	2	.
water	40:25	0:0	2	i_format
op	40:34	0:0	2	=
water	40:36	0:0	2	VLC_CODEC_S16N
water	40:50	0:0	2	;
water	41:4	0:0	2	p_dec
op	41:9	0:0	2	->
water	41:11	0:0	2	fmt_out
op	41:18	0:0	2	.
water	41:19	0:0	2	audio
op	41:24	0:0	2	.
water	41:25	0:0	2	i_rate
op	41:32	0:0	2	=
water	41:34	0:0	2	p_dec
op	41:39	0:0	2	->
water	41:41	0:0	2	fmt_in
op	41:47	0:0	2	.
water	41:48	0:0	2	audio
op	41:53	0:0	2	.
water	41:54	0:0	2	i_rate
water	41:60	0:0	2	;
if	42:4	44:78	2	(p_dec -> fmt_in . audio . i_physical_channels)
cond	42:8	42:28	3	p_dec -> fmt_in . audio . i_physical_channels
water	42:8	0:0	4	p_dec
op	42:13	0:0	4	->
water	42:15	0:0	4	fmt_in
op	42:21	0:0	4	.
water	42:22	0:0	4	audio
op	42:27	0:0	4	.
water	42:28	0:0	4	i_physical_channels
stmts	43:8	44:78	3	
water	43:8	0:0	4	p_dec
op	43:13	0:0	4	->
water	43:15	0:0	4	fmt_out
op	43:22	0:0	4	.
water	43:23	0:0	4	audio
op	43:28	0:0	4	.
water	43:29	0:0	4	i_physical_channels
op	43:49	0:0	4	=
water	44:39	0:0	4	p_dec
op	44:44	0:0	4	->
water	44:46	0:0	4	fmt_in
op	44:52	0:0	4	.
water	44:53	0:0	4	audio
op	44:58	0:0	4	.
water	44:59	0:0	4	i_physical_channels
water	44:78	0:0	4	;
else	45:4	47:78	2
stmts	46:8	47:78	3	
water	46:8	0:0	4	p_dec
op	46:13	0:0	4	->
water	46:15	0:0	4	fmt_out
op	46:22	0:0	4	.
water	46:23	0:0	4	audio
op	46:28	0:0	4	.
water	46:29	0:0	4	i_physical_channels
op	46:49	0:0	4	=
water	47:30	0:0	4	pi_channels_maps
op	47:46	0:0	4	[
water	47:47	0:0	4	p_dec
op	47:52	0:0	4	->
water	47:54	0:0	4	fmt_in
op	47:60	0:0	4	.
water	47:61	0:0	4	audio
op	47:66	0:0	4	.
water	47:67	0:0	4	i_channels
op	47:77	0:0	4	]
water	47:78	0:0	4	;
if	48:4	50:78	2	(p_dec -> fmt_in . audio . i_original_channels)
cond	48:8	48:28	3	p_dec -> fmt_in . audio . i_original_channels
water	48:8	0:0	4	p_dec
op	48:13	0:0	4	->
water	48:15	0:0	4	fmt_in
op	48:21	0:0	4	.
water	48:22	0:0	4	audio
op	48:27	0:0	4	.
water	48:28	0:0	4	i_original_channels
stmts	49:8	50:78	3	
water	49:8	0:0	4	p_dec
op	49:13	0:0	4	->
water	49:15	0:0	4	fmt_out
op	49:22	0:0	4	.
water	49:23	0:0	4	audio
op	49:28	0:0	4	.
water	49:29	0:0	4	i_original_channels
op	49:49	0:0	4	=
water	50:39	0:0	4	p_dec
op	50:44	0:0	4	->
water	50:46	0:0	4	fmt_in
op	50:52	0:0	4	.
water	50:53	0:0	4	audio
op	50:58	0:0	4	.
water	50:59	0:0	4	i_original_channels
water	50:78	0:0	4	;
else	51:4	53:78	2
stmts	52:8	53:78	3	
water	52:8	0:0	4	p_dec
op	52:13	0:0	4	->
water	52:15	0:0	4	fmt_out
op	52:22	0:0	4	.
water	52:23	0:0	4	audio
op	52:28	0:0	4	.
water	52:29	0:0	4	i_original_channels
op	52:49	0:0	4	=
water	53:38	0:0	4	p_dec
op	53:43	0:0	4	->
water	53:45	0:0	4	fmt_out
op	53:52	0:0	4	.
water	53:53	0:0	4	audio
op	53:58	0:0	4	.
water	53:59	0:0	4	i_physical_channels
water	53:78	0:0	4	;
call	54:4	54:46	2	aout_FormatPrepare
arg	54:24	54:46	3	&p_dec->fmt_out.audio
op	54:24	0:0	4	&
water	54:25	0:0	4	p_dec
op	54:30	0:0	4	->
water	54:32	0:0	4	fmt_out
op	54:39	0:0	4	.
water	54:40	0:0	4	audio
water	54:47	0:0	2	;
water	55:4	0:0	2	p_sys
op	55:9	0:0	2	->
water	55:11	0:0	2	table
op	55:17	0:0	2	=
water	55:19	0:0	2	table
water	55:24	0:0	2	;
call	56:4	56:64	2	date_Init
arg	56:15	56:31	3	&p_sys->end_date
op	56:15	0:0	4	&
water	56:16	0:0	4	p_sys
op	56:21	0:0	4	->
water	56:23	0:0	4	end_date
arg	56:33	56:60	3	p_dec->fmt_out.audio.i_rate
water	56:33	0:0	4	p_dec
op	56:38	0:0	4	->
water	56:40	0:0	4	fmt_out
op	56:47	0:0	4	.
water	56:48	0:0	4	audio
op	56:53	0:0	4	.
water	56:54	0:0	4	i_rate
arg	56:62	56:64	3	1
water	56:62	0:0	4	1
water	56:65	0:0	2	;
call	57:4	57:34	2	date_Set
arg	57:14	57:30	3	&p_sys->end_date
op	57:14	0:0	4	&
water	57:15	0:0	4	p_sys
op	57:20	0:0	4	->
water	57:22	0:0	4	end_date
arg	57:32	57:34	3	0
water	57:32	0:0	4	0
water	57:35	0:0	2	;
return	58:4	58:22	2	VLC_SUCCESS
water	58:11	0:0	3	VLC_SUCCESS

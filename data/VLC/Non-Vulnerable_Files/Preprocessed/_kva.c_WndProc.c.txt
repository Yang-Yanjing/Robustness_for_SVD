func	2:15	176:0	0	EXPENTRY	WndProc
params	2:31	0:0	1	
param	2:33	2:42	2	HWND	hwnd
param	2:44	2:53	2	ULONG	msg
param	2:55	2:65	2	MPARAM	mp1
param	2:67	2:78	2	MPARAM	mp2
stmnts	0:0	175:17	1	
decl	4:4	4:54	2	vout_display_t	*vd
op	4:24	0:0	2	=
call	4:26	4:53	3	WinQueryWindowPtr
arg	4:45	4:49	4	hwnd
water	4:45	0:0	5	hwnd
arg	4:51	4:53	4	0
water	4:51	0:0	5	0
decl	5:4	5:36	2	MRESULT	result
op	5:19	0:0	2	=
water	5:21	0:0	2	(
water	5:23	0:0	2	MRESULT
water	5:31	0:0	2	)
water	5:32	0:0	2	TRUE
if	6:4	7:54	2	(! vd)
cond	6:9	6:10	3	! vd
op	6:9	0:0	4	!
water	6:10	0:0	4	vd
stmts	7:8	7:54	3	
return	7:8	7:54	4	WinDefWindowProc(hwnd,msg,mp1,mp2)
call	7:15	7:53	5	WinDefWindowProc
arg	7:33	7:37	6	hwnd
water	7:33	0:0	7	hwnd
arg	7:39	7:42	6	msg
water	7:39	0:0	7	msg
arg	7:44	7:47	6	mp1
water	7:44	0:0	7	mp1
arg	7:49	7:53	6	mp2
water	7:49	0:0	7	mp2
decl	8:4	8:38	2	vout_display_sys_t	*sys
op	8:29	0:0	2	=
water	8:31	0:0	2	vd
op	8:33	0:0	2	->
water	8:35	0:0	2	sys
decl	9:4	9:13	2	RECTL	rcl
decl	10:4	10:13	2	SWP	swp
if	11:4	18:4	2	(sys -> is_mouse_hidden && ( ( msg >= WM_MOUSEFIRST && msg <= WM_MOUSELAST ) || ( msg >= WM_EXTMOUSEFIRST && msg <= WM_EXTMOUSELAST ) || msg == WM_MOUSELEAVE ))
cond	11:9	14:31	3	sys -> is_mouse_hidden && ( ( msg >= WM_MOUSEFIRST && msg <= WM_MOUSELAST ) || ( msg >= WM_EXTMOUSEFIRST && msg <= WM_EXTMOUSELAST ) || msg == WM_MOUSELEAVE )
water	11:9	0:0	4	sys
op	11:12	0:0	4	->
water	11:14	0:0	4	is_mouse_hidden
op	11:30	0:0	4	&&
water	12:9	0:0	4	(
water	12:10	0:0	4	(
water	12:11	0:0	4	msg
op	12:15	0:0	4	>=
water	12:18	0:0	4	WM_MOUSEFIRST
op	12:35	0:0	4	&&
water	12:38	0:0	4	msg
op	12:42	0:0	4	<=
water	12:45	0:0	4	WM_MOUSELAST
water	12:57	0:0	4	)
op	12:59	0:0	4	||
water	13:10	0:0	4	(
water	13:11	0:0	4	msg
op	13:15	0:0	4	>=
water	13:18	0:0	4	WM_EXTMOUSEFIRST
op	13:35	0:0	4	&&
water	13:38	0:0	4	msg
op	13:42	0:0	4	<=
water	13:45	0:0	4	WM_EXTMOUSELAST
water	13:60	0:0	4	)
op	13:62	0:0	4	||
water	14:11	0:0	4	msg
op	14:15	0:0	4	==
water	14:18	0:0	4	WM_MOUSELEAVE
water	14:31	0:0	4	)
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:41	4	WinShowPointer
arg	16:23	16:35	5	HWND_DESKTOP
water	16:23	0:0	6	HWND_DESKTOP
arg	16:37	16:41	5	TRUE
water	16:37	0:0	6	TRUE
water	16:42	0:0	4	;
water	17:8	0:0	4	sys
op	17:11	0:0	4	->
water	17:13	0:0	4	is_mouse_hidden
op	17:29	0:0	4	=
water	17:31	0:0	4	false
water	17:36	0:0	4	;
water	18:4	0:0	4	}
switch	19:4	156:4	2	(msg)
cond	19:12	19:12	3	msg
water	19:12	0:0	4	msg
stmts	20:4	156:4	3	
water	20:4	0:0	4	{
label	22:8	22:21	4	case WM_CLOSE :
call	23:12	23:42	4	vout_display_SendEventClose
arg	23:40	23:42	5	vd
water	23:40	0:0	6	vd
water	23:43	0:0	4	;
water	24:12	0:0	4	result
op	24:19	0:0	4	=
water	24:21	0:0	4	0
water	24:22	0:0	4	;
break	25:12	25:17	4	
label	26:8	26:26	4	case WM_MOUSEMOVE :
water	27:8	0:0	4	{
decl	28:12	28:49	4	SHORT	i_mouse_x
op	28:28	0:0	4	=
call	28:30	28:48	5	SHORT1FROMMP
arg	28:44	28:48	6	mp1
water	28:44	0:0	7	mp1
decl	29:12	29:49	4	SHORT	i_mouse_y
op	29:28	0:0	4	=
call	29:30	29:48	5	SHORT2FROMMP
arg	29:44	29:48	6	mp1
water	29:44	0:0	7	mp1
decl	30:12	30:28	4	RECTL	movie_rect
decl	31:12	31:47	4	int	i_movie_width
water	31:31	0:0	4	,
decl	31:12	31:47	4	int	i_movie_height
decl	32:12	32:43	4	int	i_src_width
water	32:29	0:0	4	,
decl	32:12	32:43	4	int	i_src_height
call	34:12	34:65	4	kvaAdjustDstRect
arg	34:30	34:51	5	&sys->kvas.rclSrcRect
op	34:30	0:0	6	&
water	34:31	0:0	6	sys
op	34:34	0:0	6	->
water	34:36	0:0	6	kvas
op	34:40	0:0	6	.
water	34:41	0:0	6	rclSrcRect
arg	34:53	34:65	5	&movie_rect
op	34:53	0:0	6	&
water	34:54	0:0	6	movie_rect
water	34:66	0:0	4	;
water	35:12	0:0	4	i_movie_width
op	35:26	0:0	4	=
water	35:28	0:0	4	movie_rect
op	35:38	0:0	4	.
water	35:39	0:0	4	xRight
op	35:46	0:0	4	-
water	35:48	0:0	4	movie_rect
op	35:58	0:0	4	.
water	35:59	0:0	4	xLeft
water	35:64	0:0	4	;
water	36:12	0:0	4	i_movie_height
op	36:27	0:0	4	=
water	36:29	0:0	4	movie_rect
op	36:39	0:0	4	.
water	36:40	0:0	4	yTop
op	36:45	0:0	4	-
water	36:47	0:0	4	movie_rect
op	36:57	0:0	4	.
water	36:58	0:0	4	yBottom
water	36:65	0:0	4	;
water	37:12	0:0	4	i_src_width
op	37:24	0:0	4	=
water	37:27	0:0	4	sys
op	37:30	0:0	4	->
water	37:32	0:0	4	kvas
op	37:36	0:0	4	.
water	37:37	0:0	4	rclSrcRect
op	37:47	0:0	4	.
water	37:48	0:0	4	xRight
op	37:55	0:0	4	-
water	38:27	0:0	4	sys
op	38:30	0:0	4	->
water	38:32	0:0	4	kvas
op	38:36	0:0	4	.
water	38:37	0:0	4	rclSrcRect
op	38:47	0:0	4	.
water	38:48	0:0	4	xLeft
water	38:53	0:0	4	;
water	39:12	0:0	4	i_src_height
op	39:25	0:0	4	=
water	39:27	0:0	4	sys
op	39:30	0:0	4	->
water	39:32	0:0	4	kvas
op	39:36	0:0	4	.
water	39:37	0:0	4	rclSrcRect
op	39:47	0:0	4	.
water	39:48	0:0	4	yBottom
op	39:56	0:0	4	-
water	40:27	0:0	4	sys
op	40:30	0:0	4	->
water	40:32	0:0	4	kvas
op	40:36	0:0	4	.
water	40:37	0:0	4	rclSrcRect
op	40:47	0:0	4	.
water	40:48	0:0	4	yTop
water	40:52	0:0	4	;
decl	41:12	43:46	4	int	x
op	41:18	0:0	4	=
water	41:20	0:0	4	(
water	41:22	0:0	4	i_mouse_x
op	41:32	0:0	4	-
water	41:34	0:0	4	movie_rect
op	41:44	0:0	4	.
water	41:45	0:0	4	xLeft
water	41:51	0:0	4	)
op	41:53	0:0	4	*
water	42:20	0:0	4	i_src_width
op	42:32	0:0	4	/
water	42:34	0:0	4	i_movie_width
op	42:48	0:0	4	+
water	43:20	0:0	4	sys
op	43:23	0:0	4	->
water	43:25	0:0	4	kvas
op	43:29	0:0	4	.
water	43:30	0:0	4	rclSrcRect
op	43:40	0:0	4	.
water	43:41	0:0	4	xLeft
decl	44:12	45:49	4	int	y
op	44:18	0:0	4	=
water	44:20	0:0	4	(
water	44:22	0:0	4	i_mouse_y
op	44:32	0:0	4	-
water	44:34	0:0	4	movie_rect
op	44:44	0:0	4	.
water	44:45	0:0	4	yBottom
water	44:53	0:0	4	)
op	44:55	0:0	4	*
water	45:20	0:0	4	i_src_height
op	45:33	0:0	4	/
water	45:35	0:0	4	i_movie_height
water	47:12	0:0	4	y
op	47:14	0:0	4	=
water	47:16	0:0	4	(
water	47:18	0:0	4	i_src_height
op	47:31	0:0	4	-
water	47:33	0:0	4	y
water	47:35	0:0	4	)
op	47:37	0:0	4	+
water	47:39	0:0	4	sys
op	47:42	0:0	4	->
water	47:44	0:0	4	kvas
op	47:48	0:0	4	.
water	47:49	0:0	4	rclSrcRect
op	47:59	0:0	4	.
water	47:60	0:0	4	yTop
water	47:64	0:0	4	;
water	47:65	0:0	4	;
call	48:12	48:53	4	vout_display_SendEventMouseMoved
arg	48:45	48:47	5	vd
water	48:45	0:0	6	vd
arg	48:49	48:50	5	x
water	48:49	0:0	6	x
arg	48:52	48:53	5	y
water	48:52	0:0	6	y
water	48:54	0:0	4	;
water	49:12	0:0	4	result
op	49:19	0:0	4	=
call	49:21	49:58	4	WinDefWindowProc
arg	49:39	49:43	5	hwnd
water	49:39	0:0	6	hwnd
arg	49:45	49:48	5	msg
water	49:45	0:0	6	msg
arg	49:50	49:53	5	mp1
water	49:50	0:0	6	mp1
arg	49:54	49:58	5	mp2
water	49:54	0:0	6	mp2
water	49:59	0:0	4	;
break	50:12	50:17	4	
water	51:8	0:0	4	}
label	52:8	52:28	4	case WM_BUTTON1DOWN :
call	53:12	53:54	4	MousePressed
arg	53:26	53:28	5	vd
water	53:26	0:0	6	vd
arg	53:30	53:34	5	hwnd
water	53:30	0:0	6	hwnd
arg	53:36	53:54	5	MOUSE_BUTTON_LEFT
water	53:36	0:0	6	MOUSE_BUTTON_LEFT
water	53:55	0:0	4	;
break	54:12	54:17	4	
label	55:8	55:28	4	case WM_BUTTON2DOWN :
call	56:12	56:55	4	MousePressed
arg	56:26	56:28	5	vd
water	56:26	0:0	6	vd
arg	56:30	56:34	5	hwnd
water	56:30	0:0	6	hwnd
arg	56:36	56:55	5	MOUSE_BUTTON_RIGHT
water	56:36	0:0	6	MOUSE_BUTTON_RIGHT
water	56:56	0:0	4	;
break	57:12	57:17	4	
label	58:8	58:28	4	case WM_BUTTON3DOWN :
call	59:12	59:56	4	MousePressed
arg	59:26	59:28	5	vd
water	59:26	0:0	6	vd
arg	59:30	59:34	5	hwnd
water	59:30	0:0	6	hwnd
arg	59:36	59:56	5	MOUSE_BUTTON_CENTER
water	59:36	0:0	6	MOUSE_BUTTON_CENTER
water	59:57	0:0	4	;
break	60:12	60:17	4	
label	61:8	61:26	4	case WM_BUTTON1UP :
call	62:12	62:49	4	MouseReleased
arg	62:27	62:29	5	vd
water	62:27	0:0	6	vd
arg	62:31	62:49	5	MOUSE_BUTTON_LEFT
water	62:31	0:0	6	MOUSE_BUTTON_LEFT
water	62:50	0:0	4	;
break	63:12	63:17	4	
label	64:8	64:26	4	case WM_BUTTON2UP :
call	65:12	65:50	4	MouseReleased
arg	65:27	65:29	5	vd
water	65:27	0:0	6	vd
arg	65:31	65:50	5	MOUSE_BUTTON_RIGHT
water	65:31	0:0	6	MOUSE_BUTTON_RIGHT
water	65:51	0:0	4	;
break	66:12	66:17	4	
label	67:8	67:26	4	case WM_BUTTON3UP :
call	68:12	68:51	4	MouseReleased
arg	68:27	68:29	5	vd
water	68:27	0:0	6	vd
arg	68:31	68:51	5	MOUSE_BUTTON_CENTER
water	68:31	0:0	6	MOUSE_BUTTON_CENTER
water	68:52	0:0	4	;
break	69:12	69:17	4	
label	70:8	70:30	4	case WM_BUTTON1DBLCLK :
call	71:12	71:53	4	vout_display_SendEventMouseDoubleClick
arg	71:51	71:53	5	vd
water	71:51	0:0	6	vd
water	71:54	0:0	4	;
break	72:12	72:17	4	
label	73:8	73:31	4	case WM_TRANSLATEACCEL :
water	75:12	0:0	4	result
op	75:19	0:0	4	=
water	75:21	0:0	4	(
water	75:23	0:0	4	MRESULT
water	75:31	0:0	4	)
water	75:32	0:0	4	FALSE
water	75:37	0:0	4	;
break	76:12	76:17	4	
label	77:8	77:21	4	case WM_CHAR :
water	78:8	0:0	4	{
decl	79:12	79:48	4	USHORT	i_flags
op	79:27	0:0	4	=
call	79:29	79:47	5	SHORT1FROMMP
arg	79:43	79:47	6	mp1
water	79:43	0:0	7	mp1
decl	80:12	80:48	4	USHORT	i_ch
op	80:27	0:0	4	=
call	80:29	80:47	5	SHORT1FROMMP
arg	80:43	80:47	6	mp2
water	80:43	0:0	7	mp2
decl	81:12	81:48	4	USHORT	i_vk
op	81:27	0:0	4	=
call	81:29	81:47	5	SHORT2FROMMP
arg	81:43	81:47	6	mp2
water	81:43	0:0	7	mp2
decl	82:12	82:30	4	int	i_key
op	82:27	0:0	4	=
water	82:29	0:0	4	0
if	84:12	88:12	4	(sys -> parent_window)
cond	84:16	84:21	5	sys -> parent_window
water	84:16	0:0	6	sys
op	84:19	0:0	6	->
water	84:21	0:0	6	parent_window
stmts	85:12	88:12	5	
water	85:12	0:0	6	{
call	86:16	86:55	6	WinPostMsg
arg	86:28	86:39	7	sys->parent
water	86:28	0:0	8	sys
op	86:31	0:0	8	->
water	86:33	0:0	8	parent
arg	86:41	86:44	7	msg
water	86:41	0:0	8	msg
arg	86:46	86:49	7	mp1
water	86:46	0:0	8	mp1
arg	86:51	86:55	7	mp2
water	86:51	0:0	8	mp2
water	86:56	0:0	6	;
break	87:16	87:21	6	
water	88:12	0:0	6	}
if	89:12	106:12	4	(! ( i_flags & KC_KEYUP ))
cond	89:16	89:38	5	! ( i_flags & KC_KEYUP )
op	89:16	0:0	6	!
water	89:17	0:0	6	(
water	89:19	0:0	6	i_flags
op	89:27	0:0	6	&
water	89:29	0:0	6	KC_KEYUP
water	89:38	0:0	6	)
stmts	90:12	106:12	5	
water	90:12	0:0	6	{
if	91:16	93:46	6	(i_flags & KC_VIRTUALKEY)
cond	91:20	91:30	7	i_flags & KC_VIRTUALKEY
water	91:20	0:0	8	i_flags
op	91:28	0:0	8	&
water	91:30	0:0	8	KC_VIRTUALKEY
stmts	93:20	93:46	7	
water	93:20	0:0	8	i_key
op	93:26	0:0	8	=
call	93:28	93:45	8	ConvertKey
arg	93:40	93:45	9	i_vk
water	93:40	0:0	10	i_vk
water	93:46	0:0	8	;
else	94:16	95:43	6
stmts	94:21	95:43	7	
if	94:21	95:43	8	(( i_flags & KC_CHAR ) && !HIBYTE (i_ch ))
cond	94:24	94:63	9	( i_flags & KC_CHAR ) && !HIBYTE (i_ch )
water	94:24	0:0	10	(
water	94:26	0:0	10	i_flags
op	94:34	0:0	10	&
water	94:36	0:0	10	KC_CHAR
water	94:44	0:0	10	)
op	94:46	0:0	10	&&
op	94:49	0:0	10	!
call	94:50	94:63	10	HIBYTE
arg	94:58	94:63	11	i_ch
water	94:58	0:0	12	i_ch
stmts	95:20	95:43	9	
water	95:20	0:0	10	i_key
op	95:26	0:0	10	=
call	95:28	95:42	10	tolower
arg	95:37	95:42	11	i_ch
water	95:37	0:0	12	i_ch
water	95:43	0:0	10	;
if	96:16	105:16	6	(i_key)
cond	96:20	96:20	7	i_key
water	96:20	0:0	8	i_key
stmts	97:16	105:16	7	
water	97:16	0:0	8	{
if	98:20	99:50	8	(i_flags & KC_SHIFT)
cond	98:24	98:34	9	i_flags & KC_SHIFT
water	98:24	0:0	10	i_flags
op	98:32	0:0	10	&
water	98:34	0:0	10	KC_SHIFT
stmts	99:23	99:50	9	
water	99:23	0:0	10	i_key
op	99:29	0:0	10	|=
water	99:32	0:0	10	KEY_MODIFIER_SHIFT
water	99:50	0:0	10	;
if	100:20	101:50	8	(i_flags & KC_CTRL)
cond	100:24	100:34	9	i_flags & KC_CTRL
water	100:24	0:0	10	i_flags
op	100:32	0:0	10	&
water	100:34	0:0	10	KC_CTRL
stmts	101:24	101:50	9	
water	101:24	0:0	10	i_key
op	101:30	0:0	10	|=
water	101:33	0:0	10	KEY_MODIFIER_CTRL
water	101:50	0:0	10	;
if	102:20	103:49	8	(i_flags & KC_ALT)
cond	102:24	102:34	9	i_flags & KC_ALT
water	102:24	0:0	10	i_flags
op	102:32	0:0	10	&
water	102:34	0:0	10	KC_ALT
stmts	103:24	103:49	9	
water	103:24	0:0	10	i_key
op	103:30	0:0	10	|=
water	103:33	0:0	10	KEY_MODIFIER_ALT
water	103:49	0:0	10	;
call	104:20	104:55	8	vout_display_SendEventKey
arg	104:46	104:48	9	vd
water	104:46	0:0	10	vd
arg	104:50	104:55	9	i_key
water	104:50	0:0	10	i_key
water	104:56	0:0	8	;
water	105:16	0:0	8	}
water	106:12	0:0	6	}
break	107:12	107:17	4	
water	108:8	0:0	4	}
label	110:8	110:27	4	case WM_VLC_MANAGE :
break	111:12	111:17	4	
label	113:8	113:38	4	case WM_VLC_FULLSCREEN_CHANGE :
if	114:12	126:12	4	(LONGFROMMP (mp1 ))
cond	114:16	114:32	5	LONGFROMMP (mp1 )
call	114:16	114:32	6	LONGFROMMP
arg	114:28	114:32	7	mp1
water	114:28	0:0	8	mp1
stmts	115:12	126:12	5	
water	115:12	0:0	6	{
call	116:16	116:52	6	WinQueryWindowPos
arg	116:35	116:45	7	sys->frame
water	116:35	0:0	8	sys
op	116:38	0:0	8	->
water	116:40	0:0	8	frame
arg	116:47	116:52	7	&swp
op	116:47	0:0	8	&
water	116:48	0:0	8	swp
water	116:53	0:0	6	;
water	117:16	0:0	6	sys
op	117:19	0:0	6	->
water	117:21	0:0	6	client_rect
op	117:32	0:0	6	.
water	117:33	0:0	6	xLeft
op	117:41	0:0	6	=
water	117:43	0:0	6	swp
op	117:46	0:0	6	.
water	117:47	0:0	6	x
water	117:48	0:0	6	;
water	118:16	0:0	6	sys
op	118:19	0:0	6	->
water	118:21	0:0	6	client_rect
op	118:32	0:0	6	.
water	118:33	0:0	6	yBottom
op	118:41	0:0	6	=
water	118:43	0:0	6	swp
op	118:46	0:0	6	.
water	118:47	0:0	6	y
water	118:48	0:0	6	;
water	119:16	0:0	6	sys
op	119:19	0:0	6	->
water	119:21	0:0	6	client_rect
op	119:32	0:0	6	.
water	119:33	0:0	6	xRight
op	119:41	0:0	6	=
water	119:43	0:0	6	sys
op	119:46	0:0	6	->
water	119:48	0:0	6	client_rect
op	119:59	0:0	6	.
water	119:60	0:0	6	xLeft
op	119:68	0:0	6	+
water	119:70	0:0	6	swp
op	119:73	0:0	6	.
water	119:74	0:0	6	cx
water	119:76	0:0	6	;
water	120:16	0:0	6	sys
op	120:19	0:0	6	->
water	120:21	0:0	6	client_rect
op	120:32	0:0	6	.
water	120:33	0:0	6	yTop
op	120:41	0:0	6	=
water	120:43	0:0	6	sys
op	120:46	0:0	6	->
water	120:48	0:0	6	client_rect
op	120:59	0:0	6	.
water	120:60	0:0	6	yBottom
op	120:68	0:0	6	+
water	120:70	0:0	6	swp
op	120:73	0:0	6	.
water	120:74	0:0	6	cy
water	120:76	0:0	6	;
call	121:16	121:70	6	WinCalcFrameRect
arg	121:34	121:44	7	sys->frame
water	121:34	0:0	8	sys
op	121:37	0:0	8	->
water	121:39	0:0	8	frame
arg	121:46	121:63	7	&sys->client_rect
op	121:46	0:0	8	&
water	121:47	0:0	8	sys
op	121:50	0:0	8	->
water	121:52	0:0	8	client_rect
arg	121:65	121:70	7	TRUE
water	121:65	0:0	8	TRUE
water	121:71	0:0	6	;
water	122:16	0:0	6	rcl
op	122:19	0:0	6	.
water	122:20	0:0	6	xLeft
op	122:28	0:0	6	=
water	122:30	0:0	6	0
water	122:31	0:0	6	;
water	123:16	0:0	6	rcl
op	123:19	0:0	6	.
water	123:20	0:0	6	yBottom
op	123:28	0:0	6	=
water	123:30	0:0	6	0
water	123:31	0:0	6	;
water	124:16	0:0	6	rcl
op	124:19	0:0	6	.
water	124:20	0:0	6	xRight
op	124:28	0:0	6	=
water	124:30	0:0	6	sys
op	124:33	0:0	6	->
water	124:35	0:0	6	i_screen_width
water	124:49	0:0	6	;
water	125:16	0:0	6	rcl
op	125:19	0:0	6	.
water	125:20	0:0	6	yTop
op	125:28	0:0	6	=
water	125:30	0:0	6	sys
op	125:33	0:0	6	->
water	125:35	0:0	6	i_screen_height
water	125:50	0:0	6	;
water	126:12	0:0	6	}
else	127:12	128:38	4
stmts	128:16	128:38	5	
water	128:16	0:0	6	rcl
op	128:20	0:0	6	=
water	128:22	0:0	6	sys
op	128:25	0:0	6	->
water	128:27	0:0	6	client_rect
water	128:38	0:0	6	;
call	129:12	129:54	4	WinCalcFrameRect
arg	129:30	129:40	5	sys->frame
water	129:30	0:0	6	sys
op	129:33	0:0	6	->
water	129:35	0:0	6	frame
arg	129:42	129:46	5	&rcl
op	129:42	0:0	6	&
water	129:43	0:0	6	rcl
arg	129:48	129:54	5	FALSE
water	129:48	0:0	6	FALSE
water	129:55	0:0	4	;
call	130:12	134:42	4	WinSetWindowPos
arg	130:29	130:39	5	sys->frame
water	130:29	0:0	6	sys
op	130:32	0:0	6	->
water	130:34	0:0	6	frame
arg	130:41	130:49	5	HWND_TOP
water	130:41	0:0	6	HWND_TOP
arg	131:29	131:38	5	rcl.xLeft
water	131:29	0:0	6	rcl
op	131:32	0:0	6	.
water	131:33	0:0	6	xLeft
arg	131:40	131:51	5	rcl.yBottom
water	131:40	0:0	6	rcl
op	131:43	0:0	6	.
water	131:44	0:0	6	yBottom
arg	132:29	132:51	5	rcl.xRight-rcl.xLeft
water	132:29	0:0	6	rcl
op	132:32	0:0	6	.
water	132:33	0:0	6	xRight
op	132:40	0:0	6	-
water	132:42	0:0	6	rcl
op	132:45	0:0	6	.
water	132:46	0:0	6	xLeft
arg	132:53	132:75	5	rcl.yTop-rcl.yBottom
water	132:53	0:0	6	rcl
op	132:56	0:0	6	.
water	132:57	0:0	6	yTop
op	132:62	0:0	6	-
water	132:64	0:0	6	rcl
op	132:67	0:0	6	.
water	132:68	0:0	6	yBottom
arg	133:29	134:42	5	SWP_MOVE|SWP_SIZE|SWP_ZORDER|SWP_SHOW|SWP_ACTIVATE
water	133:29	0:0	6	SWP_MOVE
op	133:38	0:0	6	|
water	133:40	0:0	6	SWP_SIZE
op	133:49	0:0	6	|
water	133:51	0:0	6	SWP_ZORDER
op	133:62	0:0	6	|
water	133:64	0:0	6	SWP_SHOW
op	133:73	0:0	6	|
water	134:29	0:0	6	SWP_ACTIVATE
water	134:43	0:0	4	;
break	135:12	135:17	4	
label	137:8	137:32	4	case WM_VLC_SIZE_CHANGE :
water	138:12	0:0	4	rcl
op	138:15	0:0	4	.
water	138:16	0:0	4	xLeft
op	138:24	0:0	4	=
water	138:26	0:0	4	0
water	138:27	0:0	4	;
water	139:12	0:0	4	rcl
op	139:15	0:0	4	.
water	139:16	0:0	4	yBottom
op	139:24	0:0	4	=
water	139:26	0:0	4	0
water	139:27	0:0	4	;
water	140:12	0:0	4	rcl
op	140:15	0:0	4	.
water	140:16	0:0	4	xRight
op	140:24	0:0	4	=
call	140:26	140:42	4	LONGFROMMP
arg	140:38	140:42	5	mp1
water	140:38	0:0	6	mp1
water	140:43	0:0	4	;
water	141:12	0:0	4	rcl
op	141:15	0:0	4	.
water	141:16	0:0	4	yTop
op	141:24	0:0	4	=
call	141:26	141:42	4	LONGFROMMP
arg	141:38	141:42	5	mp2
water	141:38	0:0	6	mp2
water	141:43	0:0	4	;
call	142:12	142:54	4	WinCalcFrameRect
arg	142:30	142:40	5	sys->frame
water	142:30	0:0	6	sys
op	142:33	0:0	6	->
water	142:35	0:0	6	frame
arg	142:42	142:46	5	&rcl
op	142:42	0:0	6	&
water	142:43	0:0	6	rcl
arg	142:48	142:54	5	FALSE
water	142:48	0:0	6	FALSE
water	142:55	0:0	4	;
call	143:12	146:38	4	WinSetWindowPos
arg	143:29	143:39	5	sys->frame
water	143:29	0:0	6	sys
op	143:32	0:0	6	->
water	143:34	0:0	6	frame
arg	143:41	143:51	5	NULLHANDLE
water	143:41	0:0	6	NULLHANDLE
arg	144:29	144:30	5	0
water	144:29	0:0	6	0
arg	144:32	144:33	5	0
water	144:32	0:0	6	0
arg	145:29	145:51	5	rcl.xRight-rcl.xLeft
water	145:29	0:0	6	rcl
op	145:32	0:0	6	.
water	145:33	0:0	6	xRight
op	145:40	0:0	6	-
water	145:42	0:0	6	rcl
op	145:45	0:0	6	.
water	145:46	0:0	6	xLeft
arg	145:53	145:75	5	rcl.yTop-rcl.yBottom
water	145:53	0:0	6	rcl
op	145:56	0:0	6	.
water	145:57	0:0	6	yTop
op	145:62	0:0	6	-
water	145:64	0:0	6	rcl
op	145:67	0:0	6	.
water	145:68	0:0	6	yBottom
arg	146:29	146:38	5	SWP_SIZE
water	146:29	0:0	6	SWP_SIZE
water	146:39	0:0	4	;
call	147:12	147:48	4	WinQueryWindowPos
arg	147:31	147:41	5	sys->frame
water	147:31	0:0	6	sys
op	147:34	0:0	6	->
water	147:36	0:0	6	frame
arg	147:43	147:48	5	&swp
op	147:43	0:0	6	&
water	147:44	0:0	6	swp
water	147:49	0:0	4	;
water	148:12	0:0	4	sys
op	148:15	0:0	4	->
water	148:17	0:0	4	client_rect
op	148:28	0:0	4	.
water	148:29	0:0	4	xLeft
op	148:37	0:0	4	=
water	148:39	0:0	4	swp
op	148:42	0:0	4	.
water	148:43	0:0	4	x
water	148:44	0:0	4	;
water	149:12	0:0	4	sys
op	149:15	0:0	4	->
water	149:17	0:0	4	client_rect
op	149:28	0:0	4	.
water	149:29	0:0	4	yBottom
op	149:37	0:0	4	=
water	149:39	0:0	4	swp
op	149:42	0:0	4	.
water	149:43	0:0	4	y
water	149:44	0:0	4	;
water	150:12	0:0	4	sys
op	150:15	0:0	4	->
water	150:17	0:0	4	client_rect
op	150:28	0:0	4	.
water	150:29	0:0	4	xRight
op	150:37	0:0	4	=
water	150:39	0:0	4	sys
op	150:42	0:0	4	->
water	150:44	0:0	4	client_rect
op	150:55	0:0	4	.
water	150:56	0:0	4	xLeft
op	150:64	0:0	4	+
water	150:66	0:0	4	swp
op	150:69	0:0	4	.
water	150:70	0:0	4	cx
water	150:72	0:0	4	;
water	151:12	0:0	4	sys
op	151:15	0:0	4	->
water	151:17	0:0	4	client_rect
op	151:28	0:0	4	.
water	151:29	0:0	4	yTop
op	151:37	0:0	4	=
water	151:39	0:0	4	sys
op	151:42	0:0	4	->
water	151:44	0:0	4	client_rect
op	151:55	0:0	4	.
water	151:56	0:0	4	yBottom
op	151:64	0:0	4	+
water	151:66	0:0	4	swp
op	151:69	0:0	4	.
water	151:70	0:0	4	cy
water	151:72	0:0	4	;
call	152:12	152:66	4	WinCalcFrameRect
arg	152:30	152:40	5	sys->frame
water	152:30	0:0	6	sys
op	152:33	0:0	6	->
water	152:35	0:0	6	frame
arg	152:42	152:59	5	&sys->client_rect
op	152:42	0:0	6	&
water	152:43	0:0	6	sys
op	152:46	0:0	6	->
water	152:48	0:0	6	client_rect
arg	152:61	152:66	5	TRUE
water	152:61	0:0	6	TRUE
water	152:67	0:0	4	;
break	153:12	153:17	4	
label	154:8	154:16	4	default :
return	155:12	155:58	4	WinDefWindowProc(hwnd,msg,mp1,mp2)
call	155:19	155:57	5	WinDefWindowProc
arg	155:37	155:41	6	hwnd
water	155:37	0:0	7	hwnd
arg	155:43	155:46	6	msg
water	155:43	0:0	7	msg
arg	155:48	155:51	6	mp1
water	155:48	0:0	7	mp1
arg	155:53	155:57	6	mp2
water	155:53	0:0	7	mp2
water	156:4	0:0	4	}
if	159:4	174:4	2	(sys -> parent_window)
cond	159:8	159:13	3	sys -> parent_window
water	159:8	0:0	4	sys
op	159:11	0:0	4	->
water	159:13	0:0	4	parent_window
stmts	160:4	174:4	3	
water	160:4	0:0	4	{
call	161:8	161:46	4	WinQueryWindowRect
arg	161:28	161:39	5	sys->parent
water	161:28	0:0	6	sys
op	161:31	0:0	6	->
water	161:33	0:0	6	parent
arg	161:41	161:46	5	&rcl
op	161:41	0:0	6	&
water	161:42	0:0	6	rcl
water	161:47	0:0	4	;
if	162:8	173:8	4	(rcl . xLeft != sys -> parent_rect . xLeft || rcl . yBottom != sys -> parent_rect . yBottom || rcl . xRight != sys -> parent_rect . xRight || rcl . yTop != sys -> parent_rect . yTop)
cond	162:12	165:44	5	rcl . xLeft != sys -> parent_rect . xLeft || rcl . yBottom != sys -> parent_rect . yBottom || rcl . xRight != sys -> parent_rect . xRight || rcl . yTop != sys -> parent_rect . yTop
water	162:12	0:0	6	rcl
op	162:15	0:0	6	.
water	162:16	0:0	6	xLeft
op	162:24	0:0	6	!=
water	162:27	0:0	6	sys
op	162:30	0:0	6	->
water	162:32	0:0	6	parent_rect
op	162:43	0:0	6	.
water	162:44	0:0	6	xLeft
op	162:52	0:0	6	||
water	163:12	0:0	6	rcl
op	163:15	0:0	6	.
water	163:16	0:0	6	yBottom
op	163:24	0:0	6	!=
water	163:27	0:0	6	sys
op	163:30	0:0	6	->
water	163:32	0:0	6	parent_rect
op	163:43	0:0	6	.
water	163:44	0:0	6	yBottom
op	163:52	0:0	6	||
water	164:12	0:0	6	rcl
op	164:15	0:0	6	.
water	164:16	0:0	6	xRight
op	164:24	0:0	6	!=
water	164:27	0:0	6	sys
op	164:30	0:0	6	->
water	164:32	0:0	6	parent_rect
op	164:43	0:0	6	.
water	164:44	0:0	6	xRight
op	164:52	0:0	6	||
water	165:12	0:0	6	rcl
op	165:15	0:0	6	.
water	165:16	0:0	6	yTop
op	165:24	0:0	6	!=
water	165:27	0:0	6	sys
op	165:30	0:0	6	->
water	165:32	0:0	6	parent_rect
op	165:43	0:0	6	.
water	165:44	0:0	6	yTop
stmts	166:8	173:8	5	
water	166:8	0:0	6	{
water	167:12	0:0	6	sys
op	167:15	0:0	6	->
water	167:17	0:0	6	parent_rect
op	167:29	0:0	6	=
water	167:31	0:0	6	rcl
water	167:34	0:0	6	;
call	168:12	168:54	6	WinCalcFrameRect
arg	168:30	168:40	7	sys->frame
water	168:30	0:0	8	sys
op	168:33	0:0	8	->
water	168:35	0:0	8	frame
arg	168:42	168:46	7	&rcl
op	168:42	0:0	8	&
water	168:43	0:0	8	rcl
arg	168:48	168:54	7	FALSE
water	168:48	0:0	8	FALSE
water	168:55	0:0	6	;
call	169:12	172:49	6	WinSetWindowPos
arg	169:29	169:39	7	sys->frame
water	169:29	0:0	8	sys
op	169:32	0:0	8	->
water	169:34	0:0	8	frame
arg	169:41	169:51	7	NULLHANDLE
water	169:41	0:0	8	NULLHANDLE
arg	170:29	170:38	7	rcl.xLeft
water	170:29	0:0	8	rcl
op	170:32	0:0	8	.
water	170:33	0:0	8	xLeft
arg	170:40	170:51	7	rcl.yBottom
water	170:40	0:0	8	rcl
op	170:43	0:0	8	.
water	170:44	0:0	8	yBottom
arg	171:29	171:51	7	rcl.xRight-rcl.xLeft
water	171:29	0:0	8	rcl
op	171:32	0:0	8	.
water	171:33	0:0	8	xRight
op	171:40	0:0	8	-
water	171:42	0:0	8	rcl
op	171:45	0:0	8	.
water	171:46	0:0	8	xLeft
arg	171:53	171:75	7	rcl.yTop-rcl.yBottom
water	171:53	0:0	8	rcl
op	171:56	0:0	8	.
water	171:57	0:0	8	yTop
op	171:62	0:0	8	-
water	171:64	0:0	8	rcl
op	171:67	0:0	8	.
water	171:68	0:0	8	yBottom
arg	172:29	172:49	7	SWP_SIZE|SWP_MOVE
water	172:29	0:0	8	SWP_SIZE
op	172:38	0:0	8	|
water	172:40	0:0	8	SWP_MOVE
water	172:50	0:0	6	;
water	173:8	0:0	6	}
water	174:4	0:0	4	}
return	175:4	175:17	2	result
water	175:11	0:0	3	result

func	2:0	20:0	0	int	aout_DeviceSet
params	2:19	0:0	1	
param	2:20	2:40	2	audio_output_t *	aout
param	2:42	2:56	2	const char *	id
stmnts	0:0	19:12	1	
decl	4:4	4:43	2	aout_owner_t	*owner
op	4:24	0:0	2	=
call	4:26	4:42	3	aout_owner
arg	4:38	4:42	4	aout
water	4:38	0:0	5	aout
decl	5:4	5:20	2	char	*dev
op	5:14	0:0	2	=
water	5:16	0:0	2	NULL
if	6:4	11:4	2	(id != NULL)
cond	6:8	6:14	3	id != NULL
water	6:8	0:0	4	id
op	6:11	0:0	4	!=
water	6:14	0:0	4	NULL
stmts	7:4	11:4	3	
water	7:4	0:0	4	{
water	8:8	0:0	4	dev
op	8:12	0:0	4	=
call	8:14	8:24	4	strdup
arg	8:22	8:24	5	id
water	8:22	0:0	6	id
water	8:25	0:0	4	;
if	9:8	10:21	4	(unlikely (dev == NULL ))
cond	9:12	9:32	5	unlikely (dev == NULL )
call	9:12	9:32	6	unlikely
arg	9:21	9:32	7	dev==NULL
water	9:21	0:0	8	dev
op	9:25	0:0	8	==
water	9:28	0:0	8	NULL
stmts	10:12	10:21	5	
return	10:12	10:21	6	-1
op	10:19	0:0	7	-
water	10:20	0:0	7	1
water	11:4	0:0	4	}
call	12:4	12:36	2	vlc_mutex_lock
arg	12:20	12:36	3	&owner->req.lock
op	12:20	0:0	4	&
water	12:21	0:0	4	owner
op	12:26	0:0	4	->
water	12:28	0:0	4	req
op	12:31	0:0	4	.
water	12:32	0:0	4	lock
water	12:37	0:0	2	;
if	13:4	14:32	2	(owner -> req . device != unset_str)
cond	13:8	13:29	3	owner -> req . device != unset_str
water	13:8	0:0	4	owner
op	13:13	0:0	4	->
water	13:15	0:0	4	req
op	13:18	0:0	4	.
water	13:19	0:0	4	device
op	13:26	0:0	4	!=
water	13:29	0:0	4	unset_str
stmts	14:8	14:32	3	
call	14:8	14:31	4	free
arg	14:14	14:31	5	owner->req.device
water	14:14	0:0	6	owner
op	14:19	0:0	6	->
water	14:21	0:0	6	req
op	14:24	0:0	6	.
water	14:25	0:0	6	device
water	14:32	0:0	4	;
water	15:4	0:0	2	owner
op	15:9	0:0	2	->
water	15:11	0:0	2	req
op	15:14	0:0	2	.
water	15:15	0:0	2	device
op	15:22	0:0	2	=
water	15:24	0:0	2	dev
water	15:27	0:0	2	;
call	16:4	16:38	2	vlc_mutex_unlock
arg	16:22	16:38	3	&owner->req.lock
op	16:22	0:0	4	&
water	16:23	0:0	4	owner
op	16:28	0:0	4	->
water	16:30	0:0	4	req
op	16:33	0:0	4	.
water	16:34	0:0	4	lock
water	16:39	0:0	2	;
if	17:4	18:32	2	(aout_OutputTryLock (aout ) == 0)
cond	17:8	17:37	3	aout_OutputTryLock (aout ) == 0
call	17:8	17:32	4	aout_OutputTryLock
arg	17:28	17:32	5	aout
water	17:28	0:0	6	aout
op	17:34	0:0	4	==
water	17:37	0:0	4	0
stmts	18:8	18:32	3	
call	18:8	18:31	4	aout_OutputUnlock
arg	18:27	18:31	5	aout
water	18:27	0:0	6	aout
water	18:32	0:0	4	;
return	19:4	19:12	2	0
water	19:11	0:0	3	0

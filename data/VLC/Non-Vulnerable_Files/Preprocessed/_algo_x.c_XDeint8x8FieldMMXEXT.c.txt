func	2:0	34:0	0	static inline void	XDeint8x8FieldMMXEXT
params	2:39	0:0	1	
param	2:41	2:53	2	uint8_t *	dst
param	2:55	2:64	2	int	i_dst
param	3:41	3:53	2	uint8_t *	src
param	3:55	3:65	2	int	i_src
stmnts	0:0	33:4	1	
decl	5:4	5:12	2	int	y
water	5:9	0:0	2	,
decl	5:4	5:12	2	int	x
for	7:4	33:4	2	(y = 0 ;y < 8;y += 2)
forinit	7:9	7:14	3	y = 0 ;
water	7:9	0:0	4	y
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	y < 8
water	7:16	0:0	4	y
op	7:18	0:0	4	<
water	7:20	0:0	4	8
forexpr	7:23	7:28	3	y += 2
water	7:23	0:0	4	y
op	7:25	0:0	4	+=
water	7:28	0:0	4	2
stmts	8:4	33:4	3	
water	8:4	0:0	4	{
call	9:8	9:28	4	memcpy
arg	9:16	9:19	5	dst
water	9:16	0:0	6	dst
arg	9:21	9:24	5	src
water	9:21	0:0	6	src
arg	9:26	9:28	5	8
water	9:26	0:0	6	8
water	9:29	0:0	4	;
water	10:8	0:0	4	dst
op	10:12	0:0	4	+=
water	10:15	0:0	4	i_dst
water	10:20	0:0	4	;
for	11:8	30:8	4	(x = 0 ;x < 8;x ++)
forinit	11:13	11:18	5	x = 0 ;
water	11:13	0:0	6	x
op	11:15	0:0	6	=
water	11:17	0:0	6	0
water	11:18	0:0	6	;
cond	11:20	11:24	5	x < 8
water	11:20	0:0	6	x
op	11:22	0:0	6	<
water	11:24	0:0	6	8
forexpr	11:27	11:28	5	x ++
water	11:27	0:0	6	x
op	11:28	0:0	6	++
stmts	12:8	30:8	5	
water	12:8	0:0	6	{
decl	13:12	13:41	6	uint8_t	*src2
op	13:26	0:0	6	=
op	13:28	0:0	6	&
water	13:29	0:0	6	src
op	13:32	0:0	6	[
water	13:33	0:0	6	2
op	13:34	0:0	6	*
water	13:35	0:0	6	i_src
op	13:40	0:0	6	]
decl	14:12	14:30	6	int32_t	c0
water	14:22	0:0	6	,
decl	14:12	14:30	6	int32_t	c1
water	14:26	0:0	6	,
decl	14:12	14:30	6	int32_t	c2
call	15:12	15:36	6	movq_m2r
arg	15:22	15:30	7	src[x-2]
water	15:22	0:0	8	src
op	15:25	0:0	8	[
water	15:26	0:0	8	x
op	15:27	0:0	8	-
water	15:28	0:0	8	2
op	15:29	0:0	8	]
arg	15:32	15:36	7	mm0
water	15:32	0:0	8	mm0
water	15:37	0:0	6	;
call	16:12	16:36	6	movq_m2r
arg	16:22	16:30	7	src[x-3]
water	16:22	0:0	8	src
op	16:25	0:0	8	[
water	16:26	0:0	8	x
op	16:27	0:0	8	-
water	16:28	0:0	8	3
op	16:29	0:0	8	]
arg	16:32	16:36	7	mm1
water	16:32	0:0	8	mm1
water	16:37	0:0	6	;
call	17:12	17:36	6	movq_m2r
arg	17:22	17:30	7	src[x-4]
water	17:22	0:0	8	src
op	17:25	0:0	8	[
water	17:26	0:0	8	x
op	17:27	0:0	8	-
water	17:28	0:0	8	4
op	17:29	0:0	8	]
arg	17:32	17:36	7	mm2
water	17:32	0:0	8	mm2
water	17:37	0:0	6	;
call	18:12	18:39	6	psadbw_m2r
arg	18:24	18:33	7	src2[x-4]
water	18:24	0:0	8	src2
op	18:28	0:0	8	[
water	18:29	0:0	8	x
op	18:30	0:0	8	-
water	18:31	0:0	8	4
op	18:32	0:0	8	]
arg	18:35	18:39	7	mm0
water	18:35	0:0	8	mm0
water	18:40	0:0	6	;
call	19:12	19:39	6	psadbw_m2r
arg	19:24	19:33	7	src2[x-3]
water	19:24	0:0	8	src2
op	19:28	0:0	8	[
water	19:29	0:0	8	x
op	19:30	0:0	8	-
water	19:31	0:0	8	3
op	19:32	0:0	8	]
arg	19:35	19:39	7	mm1
water	19:35	0:0	8	mm1
water	19:40	0:0	6	;
call	20:12	20:39	6	psadbw_m2r
arg	20:24	20:33	7	src2[x-2]
water	20:24	0:0	8	src2
op	20:28	0:0	8	[
water	20:29	0:0	8	x
op	20:30	0:0	8	-
water	20:31	0:0	8	2
op	20:32	0:0	8	]
arg	20:35	20:39	7	mm2
water	20:35	0:0	8	mm2
water	20:40	0:0	6	;
call	21:12	21:30	6	movd_r2m
arg	21:22	21:25	7	mm0
water	21:22	0:0	8	mm0
arg	21:27	21:30	7	c2
water	21:27	0:0	8	c2
water	21:31	0:0	6	;
call	22:12	22:30	6	movd_r2m
arg	22:22	22:25	7	mm1
water	22:22	0:0	8	mm1
arg	22:27	22:30	7	c1
water	22:27	0:0	8	c1
water	22:31	0:0	6	;
call	23:12	23:30	6	movd_r2m
arg	23:22	23:25	7	mm2
water	23:22	0:0	8	mm2
arg	23:27	23:30	7	c0
water	23:27	0:0	8	c0
water	23:31	0:0	6	;
if	24:12	25:52	6	(c0 < c1 && c1 <= c2)
cond	24:16	24:33	7	c0 < c1 && c1 <= c2
water	24:16	0:0	8	c0
op	24:19	0:0	8	<
water	24:21	0:0	8	c1
op	24:24	0:0	8	&&
water	24:27	0:0	8	c1
op	24:30	0:0	8	<=
water	24:33	0:0	8	c2
stmts	25:16	25:52	7	
water	25:16	0:0	8	dst
op	25:19	0:0	8	[
water	25:20	0:0	8	x
op	25:21	0:0	8	]
op	25:23	0:0	8	=
water	25:25	0:0	8	(
water	25:26	0:0	8	src
op	25:29	0:0	8	[
water	25:30	0:0	8	x
op	25:31	0:0	8	-
water	25:32	0:0	8	1
op	25:33	0:0	8	]
op	25:35	0:0	8	+
water	25:37	0:0	8	src2
op	25:41	0:0	8	[
water	25:42	0:0	8	x
op	25:43	0:0	8	+
water	25:44	0:0	8	1
op	25:45	0:0	8	]
water	25:46	0:0	8	)
op	25:48	0:0	8	>>
water	25:51	0:0	8	1
water	25:52	0:0	8	;
else	26:12	27:52	6
stmts	26:17	27:52	7	
if	26:17	27:52	8	(c2 < c1 && c1 <= c0)
cond	26:21	26:38	9	c2 < c1 && c1 <= c0
water	26:21	0:0	10	c2
op	26:24	0:0	10	<
water	26:26	0:0	10	c1
op	26:29	0:0	10	&&
water	26:32	0:0	10	c1
op	26:35	0:0	10	<=
water	26:38	0:0	10	c0
stmts	27:16	27:52	9	
water	27:16	0:0	10	dst
op	27:19	0:0	10	[
water	27:20	0:0	10	x
op	27:21	0:0	10	]
op	27:23	0:0	10	=
water	27:25	0:0	10	(
water	27:26	0:0	10	src
op	27:29	0:0	10	[
water	27:30	0:0	10	x
op	27:31	0:0	10	+
water	27:32	0:0	10	1
op	27:33	0:0	10	]
op	27:35	0:0	10	+
water	27:37	0:0	10	src2
op	27:41	0:0	10	[
water	27:42	0:0	10	x
op	27:43	0:0	10	-
water	27:44	0:0	10	1
op	27:45	0:0	10	]
water	27:46	0:0	10	)
op	27:48	0:0	10	>>
water	27:51	0:0	10	1
water	27:52	0:0	10	;
else	28:12	29:52	6
stmts	29:16	29:52	7	
water	29:16	0:0	8	dst
op	29:19	0:0	8	[
water	29:20	0:0	8	x
op	29:21	0:0	8	]
op	29:23	0:0	8	=
water	29:25	0:0	8	(
water	29:26	0:0	8	src
op	29:29	0:0	8	[
water	29:30	0:0	8	x
op	29:31	0:0	8	+
water	29:32	0:0	8	0
op	29:33	0:0	8	]
op	29:35	0:0	8	+
water	29:37	0:0	8	src2
op	29:41	0:0	8	[
water	29:42	0:0	8	x
op	29:43	0:0	8	+
water	29:44	0:0	8	0
op	29:45	0:0	8	]
water	29:46	0:0	8	)
op	29:48	0:0	8	>>
water	29:51	0:0	8	1
water	29:52	0:0	8	;
water	30:8	0:0	6	}
water	31:8	0:0	4	dst
op	31:12	0:0	4	+=
water	31:15	0:0	4	1
op	31:16	0:0	4	*
water	31:17	0:0	4	i_dst
water	31:22	0:0	4	;
water	32:8	0:0	4	src
op	32:12	0:0	4	+=
water	32:15	0:0	4	2
op	32:16	0:0	4	*
water	32:17	0:0	4	i_src
water	32:22	0:0	4	;
water	33:4	0:0	4	}

func	2:0	137:0	0	static int	OpenVCDImage
params	2:23	0:0	1	
param	2:25	2:46	2	vlc_object_t *	p_this
param	2:48	2:67	2	const char *	psz_dev
param	3:25	3:44	2	vcddev_t *	p_vcddev
stmnts	0:0	136:16	1	
decl	5:4	5:18	2	int	i_ret
op	5:14	0:0	2	=
op	5:16	0:0	2	-
water	5:17	0:0	2	1
decl	6:4	6:15	2	char	*p_pos
decl	7:4	7:28	2	char	*psz_vcdfile
op	7:22	0:0	2	=
water	7:24	0:0	2	NULL
decl	8:4	8:28	2	char	*psz_cuefile
op	8:22	0:0	2	=
water	8:24	0:0	2	NULL
decl	9:4	9:28	2	FILE	*cuefile
op	9:22	0:0	2	=
water	9:24	0:0	2	NULL
decl	10:4	10:28	2	int	*p_sectors
op	10:22	0:0	2	=
water	10:24	0:0	2	NULL
decl	11:4	11:19	2	char	line[1024]
decl	12:4	12:29	2	bool	b_found
op	12:22	0:0	2	=
water	12:24	0:0	2	false
water	14:4	0:0	2	p_pos
op	14:10	0:0	2	=
call	14:12	14:34	2	strrchr
arg	14:21	14:28	3	psz_dev
water	14:21	0:0	4	psz_dev
arg	14:30	14:34	3	'.'
water	14:30	0:0	4	'.'
water	14:35	0:0	2	;
if	15:4	23:4	2	(p_pos && !strcmp (p_pos ,".cue" ))
cond	15:8	15:40	3	p_pos && !strcmp (p_pos ,".cue" )
water	15:8	0:0	4	p_pos
op	15:14	0:0	4	&&
op	15:17	0:0	4	!
call	15:18	15:40	4	strcmp
arg	15:26	15:31	5	p_pos
water	15:26	0:0	6	p_pos
arg	15:33	15:40	5	".cue"
water	15:33	0:0	6	".cue"
stmts	16:4	23:4	3	
water	16:4	0:0	4	{
if	19:8	21:30	4	(asprintf (& psz_vcdfile ,"%.*s.bin" ,( int ) (p_pos - psz_dev ) ,psz_dev ) < 0)
cond	19:12	20:34	5	asprintf (& psz_vcdfile ,"%.*s.bin" ,( int ) (p_pos - psz_dev ) ,psz_dev ) < 0
call	19:12	20:30	6	asprintf
arg	19:22	19:34	7	&psz_vcdfile
op	19:22	0:0	8	&
water	19:23	0:0	8	psz_vcdfile
arg	19:36	19:46	7	"%.*s.bin"
water	19:36	0:0	8	"%.*s.bin"
arg	19:48	19:70	7	(int)(p_pos-psz_dev)
call	19:48	19:69	8	(int)
arg	19:54	19:69	9	p_pos-psz_dev
water	19:54	0:0	10	p_pos
op	19:60	0:0	10	-
water	19:62	0:0	10	psz_dev
arg	20:22	20:30	7	psz_dev
water	20:22	0:0	8	psz_dev
op	20:32	0:0	6	<
water	20:34	0:0	6	0
stmts	21:12	21:30	5	
water	21:12	0:0	6	psz_vcdfile
op	21:24	0:0	6	=
water	21:26	0:0	6	NULL
water	21:30	0:0	6	;
water	22:8	0:0	4	psz_cuefile
op	22:20	0:0	4	=
call	22:22	22:38	4	strdup
arg	22:30	22:38	5	psz_dev
water	22:30	0:0	6	psz_dev
water	22:39	0:0	4	;
water	23:4	0:0	4	}
else	24:4	33:4	2
stmts	25:4	33:4	3	
if	25:4	33:4	4	(p_pos)
cond	25:8	25:8	5	p_pos
water	25:8	0:0	6	p_pos
stmts	26:4	33:4	5	
water	26:4	0:0	6	{
if	29:8	31:30	6	(asprintf (& psz_cuefile ,"%.*s.cue" ,( int ) (p_pos - psz_dev ) ,psz_dev ) < 0)
cond	29:12	30:34	7	asprintf (& psz_cuefile ,"%.*s.cue" ,( int ) (p_pos - psz_dev ) ,psz_dev ) < 0
call	29:12	30:30	8	asprintf
arg	29:22	29:34	9	&psz_cuefile
op	29:22	0:0	10	&
water	29:23	0:0	10	psz_cuefile
arg	29:36	29:46	9	"%.*s.cue"
water	29:36	0:0	10	"%.*s.cue"
arg	29:48	29:70	9	(int)(p_pos-psz_dev)
call	29:48	29:69	10	(int)
arg	29:54	29:69	11	p_pos-psz_dev
water	29:54	0:0	12	p_pos
op	29:60	0:0	12	-
water	29:62	0:0	12	psz_dev
arg	30:22	30:30	9	psz_dev
water	30:22	0:0	10	psz_dev
op	30:32	0:0	8	<
water	30:34	0:0	8	0
stmts	31:12	31:30	7	
water	31:12	0:0	8	psz_cuefile
op	31:24	0:0	8	=
water	31:26	0:0	8	NULL
water	31:30	0:0	8	;
water	32:8	0:0	6	psz_vcdfile
op	32:20	0:0	6	=
call	32:22	32:38	6	strdup
arg	32:30	32:38	7	psz_dev
water	32:30	0:0	8	psz_dev
water	32:39	0:0	6	;
water	33:4	0:0	6	}
else	34:4	41:4	2
stmts	35:4	41:4	3	
water	35:4	0:0	4	{
if	36:8	37:30	4	(asprintf (& psz_cuefile ,"%s.cue" ,psz_dev ) == - 1)
cond	36:12	36:60	5	asprintf (& psz_cuefile ,"%s.cue" ,psz_dev ) == - 1
call	36:12	36:54	6	asprintf
arg	36:22	36:34	7	&psz_cuefile
op	36:22	0:0	8	&
water	36:23	0:0	8	psz_cuefile
arg	36:36	36:44	7	"%s.cue"
water	36:36	0:0	8	"%s.cue"
arg	36:46	36:54	7	psz_dev
water	36:46	0:0	8	psz_dev
op	36:56	0:0	6	==
op	36:59	0:0	6	-
water	36:60	0:0	6	1
stmts	37:12	37:30	5	
water	37:12	0:0	6	psz_cuefile
op	37:24	0:0	6	=
water	37:26	0:0	6	NULL
water	37:30	0:0	6	;
water	40:8	0:0	4	psz_vcdfile
op	40:20	0:0	4	=
call	40:22	40:38	4	strdup
arg	40:30	40:38	5	psz_dev
water	40:30	0:0	6	psz_dev
water	40:39	0:0	4	;
water	41:4	0:0	4	}
if	42:4	43:18	2	(psz_cuefile == NULL || psz_vcdfile == NULL)
cond	42:8	42:46	3	psz_cuefile == NULL || psz_vcdfile == NULL
water	42:8	0:0	4	psz_cuefile
op	42:20	0:0	4	==
water	42:23	0:0	4	NULL
op	42:28	0:0	4	||
water	42:31	0:0	4	psz_vcdfile
op	42:43	0:0	4	==
water	42:46	0:0	4	NULL
stmts	43:8	43:18	3	
goto	43:8	43:18	4	error
water	43:13	0:0	5	error
call	45:4	45:56	2	msg_Dbg
arg	45:13	45:19	3	p_this
water	45:13	0:0	4	p_this
arg	45:20	45:42	3	"trying .cue file: %s"
water	45:20	0:0	4	"trying .cue file: %s"
arg	45:44	45:56	3	psz_cuefile
water	45:44	0:0	4	psz_cuefile
water	45:57	0:0	2	;
water	46:4	0:0	2	cuefile
op	46:12	0:0	2	=
call	46:14	46:43	2	vlc_fopen
arg	46:25	46:36	3	psz_cuefile
water	46:25	0:0	4	psz_cuefile
arg	46:38	46:43	3	"rt"
water	46:38	0:0	4	"rt"
water	46:44	0:0	2	;
if	47:4	51:4	2	(cuefile == NULL)
cond	47:8	47:19	3	cuefile == NULL
water	47:8	0:0	4	cuefile
op	47:16	0:0	4	==
water	47:19	0:0	4	NULL
stmts	48:4	51:4	3	
water	48:4	0:0	4	{
call	49:8	49:52	4	msg_Dbg
arg	49:17	49:23	5	p_this
water	49:17	0:0	6	p_this
arg	49:25	49:52	5	"could not find .cue file"
water	49:25	0:0	6	"could not find .cue file"
water	49:53	0:0	4	;
goto	50:8	50:18	4	error
water	50:13	0:0	5	error
water	51:4	0:0	4	}
call	52:4	52:63	2	msg_Dbg
arg	52:13	52:19	3	p_this
water	52:13	0:0	4	p_this
arg	52:20	52:49	3	"guessing vcd image file: %s"
water	52:20	0:0	4	"guessing vcd image file: %s"
arg	52:51	52:63	3	psz_vcdfile
water	52:51	0:0	4	psz_vcdfile
water	52:64	0:0	2	;
water	53:4	0:0	2	p_vcddev
op	53:12	0:0	2	->
water	53:14	0:0	2	i_vcdimage_handle
op	53:32	0:0	2	=
call	53:34	54:69	2	vlc_open
arg	53:44	53:55	3	psz_vcdfile
water	53:44	0:0	4	psz_vcdfile
arg	54:36	54:69	3	O_RDONLY|O_NONBLOCK|O_BINARY
water	54:36	0:0	4	O_RDONLY
op	54:45	0:0	4	|
water	54:47	0:0	4	O_NONBLOCK
op	54:58	0:0	4	|
water	54:60	0:0	4	O_BINARY
water	54:70	0:0	2	;
while	55:4	88:4	2	(fgets (line ,1024 ,cuefile ) && ! b_found)
cond	55:11	55:44	3	fgets (line ,1024 ,cuefile ) && ! b_found
call	55:11	55:38	4	fgets
arg	55:18	55:22	5	line
water	55:18	0:0	6	line
arg	55:24	55:28	5	1024
water	55:24	0:0	6	1024
arg	55:30	55:38	5	cuefile
water	55:30	0:0	6	cuefile
op	55:40	0:0	4	&&
op	55:43	0:0	4	!
water	55:44	0:0	4	b_found
stmts	56:4	88:4	3	
water	56:4	0:0	4	{
decl	58:8	58:27	4	char	filename[1024]
decl	59:8	59:21	4	char	type[16]
decl	60:8	60:79	4	int	i_temp
op	60:19	0:0	4	=
call	60:21	60:78	5	sscanf
arg	60:29	60:33	6	line
water	60:29	0:0	7	line
arg	60:35	60:61	6	"FILE \"%1023[^\"]\" %15s"
water	60:35	0:0	7	"FILE \"%1023[^\"]\" %15s"
arg	60:63	60:71	6	filename
water	60:63	0:0	7	filename
arg	60:73	60:78	6	type
water	60:73	0:0	7	type
switch	61:8	87:8	4	(i_temp)
cond	61:16	61:16	5	i_temp
water	61:16	0:0	6	i_temp
stmts	62:8	87:8	5	
water	62:8	0:0	6	{
label	63:12	63:18	6	case 2 :
call	64:16	64:79	6	msg_Dbg
arg	64:25	64:31	7	p_this
water	64:25	0:0	8	p_this
arg	64:33	64:72	7	"the cue file says the data file is %s"
water	64:33	0:0	8	"the cue file says the data file is %s"
arg	64:74	64:79	7	type
water	64:74	0:0	8	type
water	64:80	0:0	6	;
if	65:16	66:30	6	(strcasecmp (type ,"BINARY" ))
cond	65:20	65:47	7	strcasecmp (type ,"BINARY" )
call	65:20	65:47	8	strcasecmp
arg	65:32	65:36	9	type
water	65:32	0:0	10	type
arg	65:38	65:47	9	"BINARY"
water	65:38	0:0	10	"BINARY"
stmts	66:20	66:30	7	
goto	66:20	66:30	8	error
water	66:25	0:0	9	error
label	67:12	67:18	6	case 1 :
if	68:16	83:16	6	(p_vcddev -> i_vcdimage_handle == - 1)
cond	68:20	68:52	7	p_vcddev -> i_vcdimage_handle == - 1
water	68:20	0:0	8	p_vcddev
op	68:28	0:0	8	->
water	68:30	0:0	8	i_vcdimage_handle
op	68:48	0:0	8	==
op	68:51	0:0	8	-
water	68:52	0:0	8	1
stmts	69:16	83:16	7	
water	69:16	0:0	8	{
call	70:20	70:96	8	msg_Dbg
arg	70:29	70:35	9	p_this
water	70:29	0:0	10	p_this
arg	70:37	70:96	9	"we could not find the data file, but we found a new path"
water	70:37	0:0	10	"we could not find the data file, but we found a new path"
water	70:97	0:0	8	;
call	71:20	71:37	8	free
arg	71:26	71:37	9	psz_vcdfile
water	71:26	0:0	10	psz_vcdfile
water	71:38	0:0	8	;
if	72:20	79:20	8	(* filename != '/' && ( ( p_pos =strrchr (psz_cuefile ,'/' ) ) || ( p_pos =strrchr (psz_cuefile ,'\\' ) ) ))
cond	72:24	73:66	9	* filename != '/' && ( ( p_pos =strrchr (psz_cuefile ,'/' ) ) || ( p_pos =strrchr (psz_cuefile ,'\\' ) ) )
op	72:24	0:0	10	*
water	72:25	0:0	10	filename
op	72:34	0:0	10	!=
water	72:37	0:0	10	'/'
op	72:41	0:0	10	&&
water	72:44	0:0	10	(
water	72:45	0:0	10	(
water	72:46	0:0	10	p_pos
op	72:52	0:0	10	=
call	72:54	72:80	10	strrchr
arg	72:63	72:74	11	psz_cuefile
water	72:63	0:0	12	psz_cuefile
arg	72:76	72:80	11	'/'
water	72:76	0:0	12	'/'
water	72:81	0:0	10	)
op	73:24	0:0	10	||
water	73:27	0:0	10	(
water	73:28	0:0	10	p_pos
op	73:34	0:0	10	=
call	73:36	73:63	10	strrchr
arg	73:45	73:56	11	psz_cuefile
water	73:45	0:0	12	psz_cuefile
arg	73:58	73:63	11	'\\'
water	73:58	0:0	12	'\\'
water	73:65	0:0	10	)
water	73:66	0:0	10	)
stmts	74:20	79:20	9	
water	74:20	0:0	10	{
water	75:24	0:0	10	psz_vcdfile
op	75:36	0:0	10	=
call	75:38	76:68	10	malloc
arg	75:46	76:68	11	strlen(filename)+(p_pos-psz_cuefile+1)+1
call	75:46	75:61	12	strlen
arg	75:53	75:61	13	filename
water	75:53	0:0	14	filename
op	75:63	0:0	12	+
water	76:38	0:0	12	(
water	76:39	0:0	12	p_pos
op	76:45	0:0	12	-
water	76:47	0:0	12	psz_cuefile
op	76:59	0:0	12	+
water	76:61	0:0	12	1
water	76:62	0:0	12	)
op	76:64	0:0	12	+
water	76:66	0:0	12	1
water	76:69	0:0	10	;
call	77:24	77:85	10	strncpy
arg	77:33	77:44	11	psz_vcdfile
water	77:33	0:0	12	psz_vcdfile
arg	77:46	77:57	11	psz_cuefile
water	77:46	0:0	12	psz_cuefile
arg	77:59	77:85	11	(p_pos-psz_cuefile+1)
water	77:59	0:0	12	(
water	77:60	0:0	12	p_pos
op	77:66	0:0	12	-
water	77:68	0:0	12	psz_cuefile
op	77:80	0:0	12	+
water	77:82	0:0	12	1
water	77:83	0:0	12	)
water	77:86	0:0	10	;
call	78:24	78:82	10	strcpy
arg	78:32	78:71	11	psz_vcdfile+(p_pos-psz_cuefile+1)
water	78:32	0:0	12	psz_vcdfile
op	78:44	0:0	12	+
water	78:46	0:0	12	(
water	78:47	0:0	12	p_pos
op	78:53	0:0	12	-
water	78:55	0:0	12	psz_cuefile
op	78:67	0:0	12	+
water	78:69	0:0	12	1
water	78:70	0:0	12	)
arg	78:73	78:82	11	filename
water	78:73	0:0	12	filename
water	78:83	0:0	10	;
water	79:20	0:0	10	}
else	79:22	79:59	8
stmts	79:27	79:59	9	
water	79:27	0:0	10	psz_vcdfile
op	79:39	0:0	10	=
call	79:41	79:58	10	strdup
arg	79:49	79:58	11	filename
water	79:49	0:0	12	filename
water	79:59	0:0	10	;
call	80:20	80:76	8	msg_Dbg
arg	80:29	80:35	9	p_this
water	80:29	0:0	10	p_this
arg	80:36	80:62	9	"using vcd image file: %s"
water	80:36	0:0	10	"using vcd image file: %s"
arg	80:64	80:76	9	psz_vcdfile
water	80:64	0:0	10	psz_vcdfile
water	80:77	0:0	8	;
water	81:20	0:0	8	p_vcddev
op	81:28	0:0	8	->
water	81:30	0:0	8	i_vcdimage_handle
op	81:48	0:0	8	=
call	81:50	82:73	8	vlc_open
arg	81:60	81:71	9	psz_vcdfile
water	81:60	0:0	10	psz_vcdfile
arg	82:40	82:73	9	O_RDONLY|O_NONBLOCK|O_BINARY
water	82:40	0:0	10	O_RDONLY
op	82:49	0:0	10	|
water	82:51	0:0	10	O_NONBLOCK
op	82:62	0:0	10	|
water	82:64	0:0	10	O_BINARY
water	82:74	0:0	8	;
water	83:16	0:0	8	}
water	84:16	0:0	6	b_found
op	84:24	0:0	6	=
water	84:26	0:0	6	true
water	84:30	0:0	6	;
label	85:12	85:19	6	default :
break	86:16	86:21	6	
water	87:8	0:0	6	}
water	88:4	0:0	4	}
if	89:4	90:18	2	(p_vcddev -> i_vcdimage_handle == - 1)
cond	89:8	89:40	3	p_vcddev -> i_vcdimage_handle == - 1
water	89:8	0:0	4	p_vcddev
op	89:16	0:0	4	->
water	89:18	0:0	4	i_vcdimage_handle
op	89:36	0:0	4	==
op	89:39	0:0	4	-
water	89:40	0:0	4	1
stmts	90:8	90:18	3	
goto	90:8	90:18	4	error
water	90:13	0:0	5	error
decl	93:4	93:23	2	size_t	i_tracks
op	93:20	0:0	2	=
water	93:22	0:0	2	0
while	94:4	117:4	2	(fgets (line ,1024 ,cuefile ) && i_tracks < INT_MAX - 1)
cond	94:11	94:62	3	fgets (line ,1024 ,cuefile ) && i_tracks < INT_MAX - 1
call	94:11	94:38	4	fgets
arg	94:18	94:22	5	line
water	94:18	0:0	6	line
arg	94:24	94:28	5	1024
water	94:24	0:0	6	1024
arg	94:30	94:38	5	cuefile
water	94:30	0:0	6	cuefile
op	94:40	0:0	4	&&
water	94:43	0:0	4	i_tracks
op	94:52	0:0	4	<
water	94:54	0:0	4	INT_MAX
op	94:61	0:0	4	-
water	94:62	0:0	4	1
stmts	95:4	117:4	3	
water	95:4	0:0	4	{
decl	97:8	97:26	4	char	psz_dummy[10]
if	98:8	99:20	4	(!sscanf (line ,"%9s" ,psz_dummy ) ||strcmp (psz_dummy ,"TRACK" ))
cond	98:12	98:74	5	!sscanf (line ,"%9s" ,psz_dummy ) ||strcmp (psz_dummy ,"TRACK" )
op	98:12	0:0	6	!
call	98:13	98:44	6	sscanf
arg	98:21	98:25	7	line
water	98:21	0:0	8	line
arg	98:27	98:32	7	"%9s"
water	98:27	0:0	8	"%9s"
arg	98:34	98:44	7	psz_dummy
water	98:34	0:0	8	psz_dummy
op	98:46	0:0	6	||
call	98:49	98:74	6	strcmp
arg	98:56	98:65	7	psz_dummy
water	98:56	0:0	8	psz_dummy
arg	98:67	98:74	7	"TRACK"
water	98:67	0:0	8	"TRACK"
stmts	99:12	99:20	5	
continue	99:12	99:20	6	
while	101:8	116:8	4	(fgets (line ,1024 ,cuefile ))
cond	101:15	101:42	5	fgets (line ,1024 ,cuefile )
call	101:15	101:42	6	fgets
arg	101:22	101:26	7	line
water	101:22	0:0	8	line
arg	101:28	101:32	7	1024
water	101:28	0:0	8	1024
arg	101:34	101:42	7	cuefile
water	101:34	0:0	8	cuefile
stmts	102:8	116:8	5	
water	102:8	0:0	6	{
decl	103:12	103:44	6	int	i_num
water	103:21	0:0	6	,
decl	103:12	103:44	6	int	i_min
water	103:28	0:0	6	,
decl	103:12	103:44	6	int	i_sec
water	103:35	0:0	6	,
decl	103:12	103:44	6	int	i_frame
if	104:12	106:24	6	((sscanf (line ,"%*9s %2u %2u:%2u:%2u" ,& i_num ,& i_min ,& i_sec ,& i_frame ) != 4 ) || ( i_num != 1 ))
cond	104:16	105:72	7	(sscanf (line ,"%*9s %2u %2u:%2u:%2u" ,& i_num ,& i_min ,& i_sec ,& i_frame ) != 4 ) || ( i_num != 1 )
water	104:16	0:0	8	(
call	104:17	105:50	8	sscanf
arg	104:25	104:29	9	line
water	104:25	0:0	10	line
arg	104:31	104:53	9	"%*9s %2u %2u:%2u:%2u"
water	104:31	0:0	10	"%*9s %2u %2u:%2u:%2u"
arg	104:55	104:61	9	&i_num
op	104:55	0:0	10	&
water	104:56	0:0	10	i_num
arg	105:25	105:31	9	&i_min
op	105:25	0:0	10	&
water	105:26	0:0	10	i_min
arg	105:33	105:39	9	&i_sec
op	105:33	0:0	10	&
water	105:34	0:0	10	i_sec
arg	105:41	105:50	9	&i_frame
op	105:41	0:0	10	&
water	105:42	0:0	10	i_frame
op	105:52	0:0	8	!=
water	105:55	0:0	8	4
water	105:56	0:0	8	)
op	105:58	0:0	8	||
water	105:61	0:0	8	(
water	105:62	0:0	8	i_num
op	105:68	0:0	8	!=
water	105:71	0:0	8	1
water	105:72	0:0	8	)
stmts	106:16	106:24	7	
continue	106:16	106:24	8	
decl	107:12	107:74	6	int	*buf
op	107:21	0:0	6	=
call	107:23	107:73	7	realloc
arg	107:32	107:41	8	p_sectors
water	107:32	0:0	9	p_sectors
arg	107:43	107:73	8	(i_tracks+1)*sizeof(*buf)
water	107:43	0:0	9	(
water	107:44	0:0	9	i_tracks
op	107:53	0:0	9	+
water	107:55	0:0	9	1
water	107:56	0:0	9	)
op	107:58	0:0	9	*
op	107:60	0:0	9	sizeof
water	107:67	0:0	9	(
op	107:68	0:0	9	*
water	107:69	0:0	9	buf
water	107:72	0:0	9	)
if	108:12	109:26	6	(buf == NULL)
cond	108:16	108:23	7	buf == NULL
water	108:16	0:0	8	buf
op	108:20	0:0	8	==
water	108:23	0:0	8	NULL
stmts	109:16	109:26	7	
goto	109:16	109:26	8	error
water	109:21	0:0	9	error
water	110:12	0:0	6	p_sectors
op	110:22	0:0	6	=
water	110:24	0:0	6	buf
water	110:27	0:0	6	;
water	111:12	0:0	6	p_sectors
op	111:21	0:0	6	[
water	111:22	0:0	6	i_tracks
op	111:30	0:0	6	]
op	111:32	0:0	6	=
call	111:34	111:66	6	MSF_TO_LBA
arg	111:45	111:50	7	i_min
water	111:45	0:0	8	i_min
arg	111:52	111:57	7	i_sec
water	111:52	0:0	8	i_sec
arg	111:59	111:66	7	i_frame
water	111:59	0:0	8	i_frame
water	111:67	0:0	6	;
call	112:12	113:61	6	msg_Dbg
arg	112:21	112:27	7	p_this
water	112:21	0:0	8	p_this
arg	112:29	112:63	7	"vcd track %i begins at sector:%i"
water	112:29	0:0	8	"vcd track %i begins at sector:%i"
arg	113:21	113:34	7	(int)i_tracks
water	113:21	0:0	8	(
water	113:22	0:0	8	int
water	113:25	0:0	8	)
water	113:26	0:0	8	i_tracks
arg	113:36	113:61	7	(int)p_sectors[i_tracks]
water	113:36	0:0	8	(
water	113:37	0:0	8	int
water	113:40	0:0	8	)
water	113:41	0:0	8	p_sectors
op	113:50	0:0	8	[
water	113:51	0:0	8	i_tracks
op	113:59	0:0	8	]
water	113:62	0:0	6	;
water	114:12	0:0	6	i_tracks
op	114:20	0:0	6	++
water	114:22	0:0	6	;
break	115:12	115:17	6	
water	116:8	0:0	6	}
water	117:4	0:0	4	}
decl	119:4	119:66	2	int	*buf
op	119:13	0:0	2	=
call	119:15	119:65	3	realloc
arg	119:24	119:33	4	p_sectors
water	119:24	0:0	5	p_sectors
arg	119:35	119:65	4	(i_tracks+1)*sizeof(*buf)
water	119:35	0:0	5	(
water	119:36	0:0	5	i_tracks
op	119:45	0:0	5	+
water	119:47	0:0	5	1
water	119:48	0:0	5	)
op	119:50	0:0	5	*
op	119:52	0:0	5	sizeof
water	119:59	0:0	5	(
op	119:60	0:0	5	*
water	119:61	0:0	5	buf
water	119:64	0:0	5	)
if	120:4	121:18	2	(buf == NULL)
cond	120:8	120:15	3	buf == NULL
water	120:8	0:0	4	buf
op	120:12	0:0	4	==
water	120:15	0:0	4	NULL
stmts	121:8	121:18	3	
goto	121:8	121:18	4	error
water	121:13	0:0	5	error
water	122:4	0:0	2	p_sectors
op	122:14	0:0	2	=
water	122:16	0:0	2	buf
water	122:19	0:0	2	;
water	123:4	0:0	2	p_sectors
op	123:13	0:0	2	[
water	123:14	0:0	2	i_tracks
op	123:22	0:0	2	]
op	123:24	0:0	2	=
call	123:26	123:72	2	lseek
arg	123:32	123:59	3	p_vcddev->i_vcdimage_handle
water	123:32	0:0	4	p_vcddev
op	123:40	0:0	4	->
water	123:42	0:0	4	i_vcdimage_handle
arg	123:61	123:62	3	0
water	123:61	0:0	4	0
arg	123:64	123:72	3	SEEK_END
water	123:64	0:0	4	SEEK_END
op	124:33	0:0	2	/
water	124:35	0:0	2	VCD_SECTOR_SIZE
water	124:50	0:0	2	;
call	125:4	126:53	2	msg_Dbg
arg	125:13	125:19	3	p_this
water	125:13	0:0	4	p_this
arg	125:21	125:56	3	"vcd track %i, begins at sector:%i"
water	125:21	0:0	4	"vcd track %i, begins at sector:%i"
arg	126:13	126:26	3	(int)i_tracks
water	126:13	0:0	4	(
water	126:14	0:0	4	int
water	126:17	0:0	4	)
water	126:18	0:0	4	i_tracks
arg	126:28	126:53	3	(int)p_sectors[i_tracks]
water	126:28	0:0	4	(
water	126:29	0:0	4	int
water	126:32	0:0	4	)
water	126:33	0:0	4	p_sectors
op	126:42	0:0	4	[
water	126:43	0:0	4	i_tracks
op	126:51	0:0	4	]
water	126:54	0:0	2	;
water	127:4	0:0	2	p_vcddev
op	127:12	0:0	2	->
water	127:14	0:0	2	i_tracks
op	127:23	0:0	2	=
op	127:25	0:0	2	++
water	127:27	0:0	2	i_tracks
water	127:35	0:0	2	;
water	128:4	0:0	2	p_vcddev
op	128:12	0:0	2	->
water	128:14	0:0	2	p_sectors
op	128:24	0:0	2	=
water	128:26	0:0	2	p_sectors
water	128:35	0:0	2	;
water	129:4	0:0	2	p_sectors
op	129:14	0:0	2	=
water	129:16	0:0	2	NULL
water	129:20	0:0	2	;
water	130:4	0:0	2	i_ret
op	130:10	0:0	2	=
water	130:12	0:0	2	0
water	130:13	0:0	2	;
label	131:0	131:5	2	error :
if	132:4	132:35	2	(cuefile)
cond	132:8	132:8	3	cuefile
water	132:8	0:0	4	cuefile
stmts	132:18	132:35	3	
call	132:18	132:34	4	fclose
arg	132:26	132:34	5	cuefile
water	132:26	0:0	6	cuefile
water	132:35	0:0	4	;
call	133:4	133:20	2	free
arg	133:10	133:20	3	p_sectors
water	133:10	0:0	4	p_sectors
water	133:21	0:0	2	;
call	134:4	134:22	2	free
arg	134:10	134:22	3	psz_cuefile
water	134:10	0:0	4	psz_cuefile
water	134:23	0:0	2	;
call	135:4	135:22	2	free
arg	135:10	135:22	3	psz_vcdfile
water	135:10	0:0	4	psz_vcdfile
water	135:23	0:0	2	;
return	136:4	136:16	2	i_ret
water	136:11	0:0	3	i_ret

func	2:0	41:0	0	void	RenderLinear
params	2:17	0:0	1	
param	2:19	2:37	2	filter_t *	p_filter
param	3:19	3:38	2	picture_t *	p_outpic
param	3:40	3:56	2	picture_t *	p_pic
param	3:58	3:70	2	int	i_field
stmnts	0:0	40:14	1	
decl	5:4	5:15	2	int	i_plane
for	7:4	39:4	2	(i_plane = 0 ;i_plane < p_pic -> i_planes;i_plane ++)
forinit	7:9	7:21	3	i_plane = 0 ;
water	7:9	0:0	4	i_plane
op	7:17	0:0	4	=
water	7:19	0:0	4	0
water	7:21	0:0	4	;
cond	7:23	7:40	3	i_plane < p_pic -> i_planes
water	7:23	0:0	4	i_plane
op	7:31	0:0	4	<
water	7:33	0:0	4	p_pic
op	7:38	0:0	4	->
water	7:40	0:0	4	i_planes
forexpr	7:51	7:58	3	i_plane ++
water	7:51	0:0	4	i_plane
op	7:58	0:0	4	++
stmts	8:4	39:4	3	
water	8:4	0:0	4	{
decl	9:8	9:41	4	uint8_t	*p_in
water	9:21	0:0	4	,
decl	9:8	9:41	4	uint8_t	*p_out_end
water	9:33	0:0	4	,
decl	9:8	9:41	4	uint8_t	*p_out
water	10:8	0:0	4	p_in
op	10:13	0:0	4	=
water	10:15	0:0	4	p_pic
op	10:20	0:0	4	->
water	10:22	0:0	4	p
op	10:23	0:0	4	[
water	10:24	0:0	4	i_plane
op	10:31	0:0	4	]
op	10:32	0:0	4	.
water	10:33	0:0	4	p_pixels
water	10:41	0:0	4	;
water	11:8	0:0	4	p_out
op	11:14	0:0	4	=
water	11:16	0:0	4	p_outpic
op	11:24	0:0	4	->
water	11:26	0:0	4	p
op	11:27	0:0	4	[
water	11:28	0:0	4	i_plane
op	11:35	0:0	4	]
op	11:36	0:0	4	.
water	11:37	0:0	4	p_pixels
water	11:45	0:0	4	;
water	12:8	0:0	4	p_out_end
op	12:18	0:0	4	=
water	12:20	0:0	4	p_out
op	12:26	0:0	4	+
water	12:28	0:0	4	p_outpic
op	12:36	0:0	4	->
water	12:38	0:0	4	p
op	12:39	0:0	4	[
water	12:40	0:0	4	i_plane
op	12:47	0:0	4	]
op	12:48	0:0	4	.
water	12:49	0:0	4	i_pitch
op	13:29	0:0	4	*
water	13:31	0:0	4	p_outpic
op	13:39	0:0	4	->
water	13:41	0:0	4	p
op	13:42	0:0	4	[
water	13:43	0:0	4	i_plane
op	13:50	0:0	4	]
op	13:51	0:0	4	.
water	13:52	0:0	4	i_visible_lines
water	13:67	0:0	4	;
if	15:8	20:8	4	(i_field == 1)
cond	15:12	15:23	5	i_field == 1
water	15:12	0:0	6	i_field
op	15:20	0:0	6	==
water	15:23	0:0	6	1
stmts	16:8	20:8	5	
water	16:8	0:0	6	{
call	17:12	17:59	6	memcpy
arg	17:20	17:25	7	p_out
water	17:20	0:0	8	p_out
arg	17:27	17:31	7	p_in
water	17:27	0:0	8	p_in
arg	17:33	17:59	7	p_pic->p[i_plane].i_pitch
water	17:33	0:0	8	p_pic
op	17:38	0:0	8	->
water	17:40	0:0	8	p
op	17:41	0:0	8	[
water	17:42	0:0	8	i_plane
op	17:49	0:0	8	]
op	17:50	0:0	8	.
water	17:51	0:0	8	i_pitch
water	17:60	0:0	6	;
water	18:12	0:0	6	p_in
op	18:17	0:0	6	+=
water	18:20	0:0	6	p_pic
op	18:25	0:0	6	->
water	18:27	0:0	6	p
op	18:28	0:0	6	[
water	18:29	0:0	6	i_plane
op	18:36	0:0	6	]
op	18:37	0:0	6	.
water	18:38	0:0	6	i_pitch
water	18:45	0:0	6	;
water	19:12	0:0	6	p_out
op	19:18	0:0	6	+=
water	19:21	0:0	6	p_outpic
op	19:29	0:0	6	->
water	19:31	0:0	6	p
op	19:32	0:0	6	[
water	19:33	0:0	6	i_plane
op	19:40	0:0	6	]
op	19:41	0:0	6	.
water	19:42	0:0	6	i_pitch
water	19:49	0:0	6	;
water	20:8	0:0	6	}
water	21:8	0:0	4	p_out_end
op	21:18	0:0	4	-=
water	21:21	0:0	4	2
op	21:23	0:0	4	*
water	21:25	0:0	4	p_outpic
op	21:33	0:0	4	->
water	21:35	0:0	4	p
op	21:36	0:0	4	[
water	21:37	0:0	4	i_plane
op	21:44	0:0	4	]
op	21:45	0:0	4	.
water	21:46	0:0	4	i_pitch
water	21:53	0:0	4	;
for	22:8	30:8	4	(;p_out < p_out_end;)
forinit	22:13	22:13	5	;
water	22:13	0:0	6	;
cond	22:15	22:23	5	p_out < p_out_end
water	22:15	0:0	6	p_out
op	22:21	0:0	6	<
water	22:23	0:0	6	p_out_end
forexpr	0:0	0:0	5	
stmts	23:8	30:8	5	
water	23:8	0:0	6	{
call	24:12	24:59	6	memcpy
arg	24:20	24:25	7	p_out
water	24:20	0:0	8	p_out
arg	24:27	24:31	7	p_in
water	24:27	0:0	8	p_in
arg	24:33	24:59	7	p_pic->p[i_plane].i_pitch
water	24:33	0:0	8	p_pic
op	24:38	0:0	8	->
water	24:40	0:0	8	p
op	24:41	0:0	8	[
water	24:42	0:0	8	i_plane
op	24:49	0:0	8	]
op	24:50	0:0	8	.
water	24:51	0:0	8	i_pitch
water	24:60	0:0	6	;
water	25:12	0:0	6	p_out
op	25:18	0:0	6	+=
water	25:21	0:0	6	p_outpic
op	25:29	0:0	6	->
water	25:31	0:0	6	p
op	25:32	0:0	6	[
water	25:33	0:0	6	i_plane
op	25:40	0:0	6	]
op	25:41	0:0	6	.
water	25:42	0:0	6	i_pitch
water	25:49	0:0	6	;
call	26:12	27:45	6	Merge
arg	26:19	26:24	7	p_out
water	26:19	0:0	8	p_out
arg	26:26	26:30	7	p_in
water	26:26	0:0	8	p_in
arg	26:32	26:68	7	p_in+2*p_pic->p[i_plane].i_pitch
water	26:32	0:0	8	p_in
op	26:37	0:0	8	+
water	26:39	0:0	8	2
op	26:41	0:0	8	*
water	26:43	0:0	8	p_pic
op	26:48	0:0	8	->
water	26:50	0:0	8	p
op	26:51	0:0	8	[
water	26:52	0:0	8	i_plane
op	26:59	0:0	8	]
op	26:60	0:0	8	.
water	26:61	0:0	8	i_pitch
arg	27:19	27:45	7	p_pic->p[i_plane].i_pitch
water	27:19	0:0	8	p_pic
op	27:24	0:0	8	->
water	27:26	0:0	8	p
op	27:27	0:0	8	[
water	27:28	0:0	8	i_plane
op	27:35	0:0	8	]
op	27:36	0:0	8	.
water	27:37	0:0	8	i_pitch
water	27:46	0:0	6	;
water	28:12	0:0	6	p_in
op	28:17	0:0	6	+=
water	28:20	0:0	6	2
op	28:22	0:0	6	*
water	28:24	0:0	6	p_pic
op	28:29	0:0	6	->
water	28:31	0:0	6	p
op	28:32	0:0	6	[
water	28:33	0:0	6	i_plane
op	28:40	0:0	6	]
op	28:41	0:0	6	.
water	28:42	0:0	6	i_pitch
water	28:49	0:0	6	;
water	29:12	0:0	6	p_out
op	29:18	0:0	6	+=
water	29:21	0:0	6	p_outpic
op	29:29	0:0	6	->
water	29:31	0:0	6	p
op	29:32	0:0	6	[
water	29:33	0:0	6	i_plane
op	29:40	0:0	6	]
op	29:41	0:0	6	.
water	29:42	0:0	6	i_pitch
water	29:49	0:0	6	;
water	30:8	0:0	6	}
call	31:8	31:55	4	memcpy
arg	31:16	31:21	5	p_out
water	31:16	0:0	6	p_out
arg	31:23	31:27	5	p_in
water	31:23	0:0	6	p_in
arg	31:29	31:55	5	p_pic->p[i_plane].i_pitch
water	31:29	0:0	6	p_pic
op	31:34	0:0	6	->
water	31:36	0:0	6	p
op	31:37	0:0	6	[
water	31:38	0:0	6	i_plane
op	31:45	0:0	6	]
op	31:46	0:0	6	.
water	31:47	0:0	6	i_pitch
water	31:56	0:0	4	;
if	33:8	38:8	4	(i_field == 0)
cond	33:12	33:23	5	i_field == 0
water	33:12	0:0	6	i_field
op	33:20	0:0	6	==
water	33:23	0:0	6	0
stmts	34:8	38:8	5	
water	34:8	0:0	6	{
water	35:12	0:0	6	p_in
op	35:17	0:0	6	+=
water	35:20	0:0	6	p_pic
op	35:25	0:0	6	->
water	35:27	0:0	6	p
op	35:28	0:0	6	[
water	35:29	0:0	6	i_plane
op	35:36	0:0	6	]
op	35:37	0:0	6	.
water	35:38	0:0	6	i_pitch
water	35:45	0:0	6	;
water	36:12	0:0	6	p_out
op	36:18	0:0	6	+=
water	36:21	0:0	6	p_outpic
op	36:29	0:0	6	->
water	36:31	0:0	6	p
op	36:32	0:0	6	[
water	36:33	0:0	6	i_plane
op	36:40	0:0	6	]
op	36:41	0:0	6	.
water	36:42	0:0	6	i_pitch
water	36:49	0:0	6	;
call	37:12	37:59	6	memcpy
arg	37:20	37:25	7	p_out
water	37:20	0:0	8	p_out
arg	37:27	37:31	7	p_in
water	37:27	0:0	8	p_in
arg	37:33	37:59	7	p_pic->p[i_plane].i_pitch
water	37:33	0:0	8	p_pic
op	37:38	0:0	8	->
water	37:40	0:0	8	p
op	37:41	0:0	8	[
water	37:42	0:0	8	i_plane
op	37:49	0:0	8	]
op	37:50	0:0	8	.
water	37:51	0:0	8	i_pitch
water	37:60	0:0	6	;
water	38:8	0:0	6	}
water	39:4	0:0	4	}
call	40:4	40:13	2	EndMerge
water	40:14	0:0	2	;

func	2:0	69:0	0	int	InitOmxCore
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	p_this
stmnts	0:0	68:22	1	
decl	4:4	4:9	2	int	i
call	5:4	5:36	2	vlc_mutex_lock
arg	5:20	5:36	3	&omx_core_mutex
op	5:20	0:0	4	&
water	5:21	0:0	4	omx_core_mutex
water	5:37	0:0	2	;
if	6:4	10:4	2	(omx_refcount > 0)
cond	6:8	6:23	3	omx_refcount > 0
water	6:8	0:0	4	omx_refcount
op	6:21	0:0	4	>
water	6:23	0:0	4	0
stmts	6:27	10:4	3	
water	6:27	0:0	4	{
water	7:8	0:0	4	omx_refcount
op	7:20	0:0	4	++
water	7:22	0:0	4	;
call	8:8	8:42	4	vlc_mutex_unlock
arg	8:26	8:42	5	&omx_core_mutex
op	8:26	0:0	6	&
water	8:27	0:0	6	omx_core_mutex
water	8:43	0:0	4	;
return	9:8	9:26	4	VLC_SUCCESS
water	9:15	0:0	5	VLC_SUCCESS
water	10:4	0:0	4	}
water	13:4	0:0	2	extra_dll_handle
op	13:21	0:0	2	=
water	13:23	0:0	2	NULL
water	13:27	0:0	2	;
for	14:4	18:4	2	(i = 0 ;ppsz_extra_dll_list [ i ];i ++)
forinit	14:9	14:14	3	i = 0 ;
water	14:9	0:0	4	i
op	14:11	0:0	4	=
water	14:13	0:0	4	0
water	14:14	0:0	4	;
cond	14:16	14:37	3	ppsz_extra_dll_list [ i ]
water	14:16	0:0	4	ppsz_extra_dll_list
op	14:35	0:0	4	[
water	14:36	0:0	4	i
op	14:37	0:0	4	]
forexpr	14:40	14:41	3	i ++
water	14:40	0:0	4	i
op	14:41	0:0	4	++
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
water	16:8	0:0	4	extra_dll_handle
op	16:25	0:0	4	=
call	16:27	16:60	4	dll_open
arg	16:37	16:60	5	ppsz_extra_dll_list[i]
water	16:37	0:0	6	ppsz_extra_dll_list
op	16:56	0:0	6	[
water	16:57	0:0	6	i
op	16:58	0:0	6	]
water	16:61	0:0	4	;
if	17:8	17:36	4	(extra_dll_handle)
cond	17:12	17:12	5	extra_dll_handle
water	17:12	0:0	6	extra_dll_handle
stmts	17:31	17:36	5	
break	17:31	17:36	6	
water	18:4	0:0	4	}
if	19:4	25:4	2	(extra_dll_handle)
cond	19:8	19:8	3	extra_dll_handle
water	19:8	0:0	4	extra_dll_handle
stmts	20:4	25:4	3	
water	20:4	0:0	4	{
water	21:8	0:0	4	pf_host_init
op	21:21	0:0	4	=
call	21:23	21:64	4	dlsym
arg	21:30	21:46	5	extra_dll_handle
water	21:30	0:0	6	extra_dll_handle
arg	21:48	21:64	5	"bcm_host_init"
water	21:48	0:0	6	"bcm_host_init"
water	21:65	0:0	4	;
water	22:8	0:0	4	pf_host_deinit
op	22:23	0:0	4	=
call	22:25	22:68	4	dlsym
arg	22:32	22:48	5	extra_dll_handle
water	22:32	0:0	6	extra_dll_handle
arg	22:50	22:68	5	"bcm_host_deinit"
water	22:50	0:0	6	"bcm_host_deinit"
water	22:69	0:0	4	;
if	23:8	24:26	4	(pf_host_init)
cond	23:12	23:12	5	pf_host_init
water	23:12	0:0	6	pf_host_init
stmts	24:12	24:26	5	
call	24:12	24:25	6	pf_host_init
water	24:26	0:0	6	;
water	25:4	0:0	4	}
for	28:4	32:4	2	(i = 0 ;ppsz_dll_list [ i ];i ++)
forinit	28:9	28:14	3	i = 0 ;
water	28:9	0:0	4	i
op	28:11	0:0	4	=
water	28:13	0:0	4	0
water	28:14	0:0	4	;
cond	28:16	28:31	3	ppsz_dll_list [ i ]
water	28:16	0:0	4	ppsz_dll_list
op	28:29	0:0	4	[
water	28:30	0:0	4	i
op	28:31	0:0	4	]
forexpr	28:34	28:35	3	i ++
water	28:34	0:0	4	i
op	28:35	0:0	4	++
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
water	30:8	0:0	4	dll_handle
op	30:19	0:0	4	=
call	30:21	30:48	4	dll_open
arg	30:31	30:48	5	ppsz_dll_list[i]
water	30:31	0:0	6	ppsz_dll_list
op	30:44	0:0	6	[
water	30:45	0:0	6	i
op	30:46	0:0	6	]
water	30:49	0:0	4	;
if	31:8	31:30	4	(dll_handle)
cond	31:12	31:12	5	dll_handle
water	31:12	0:0	6	dll_handle
stmts	31:25	31:30	5	
break	31:25	31:30	6	
water	32:4	0:0	4	}
if	33:4	38:4	2	(! dll_handle)
cond	33:8	33:9	3	! dll_handle
op	33:8	0:0	4	!
water	33:9	0:0	4	dll_handle
stmts	34:4	38:4	3	
water	34:4	0:0	4	{
call	35:8	35:22	4	CloseExtraDll
water	35:23	0:0	4	;
call	36:8	36:42	4	vlc_mutex_unlock
arg	36:26	36:42	5	&omx_core_mutex
op	36:26	0:0	6	&
water	36:27	0:0	6	omx_core_mutex
water	36:43	0:0	4	;
return	37:8	37:27	4	VLC_EGENERIC
water	37:15	0:0	5	VLC_EGENERIC
water	38:4	0:0	4	}
water	39:4	0:0	2	pf_init
op	39:12	0:0	2	=
call	39:14	39:44	2	dlsym
arg	39:21	39:31	3	dll_handle
water	39:21	0:0	4	dll_handle
arg	39:33	39:44	3	"OMX_Init"
water	39:33	0:0	4	"OMX_Init"
water	39:45	0:0	2	;
water	40:4	0:0	2	pf_deinit
op	40:14	0:0	2	=
call	40:16	40:48	2	dlsym
arg	40:23	40:33	3	dll_handle
water	40:23	0:0	4	dll_handle
arg	40:35	40:48	3	"OMX_Deinit"
water	40:35	0:0	4	"OMX_Deinit"
water	40:49	0:0	2	;
water	41:4	0:0	2	pf_get_handle
op	41:18	0:0	2	=
call	41:20	41:55	2	dlsym
arg	41:27	41:37	3	dll_handle
water	41:27	0:0	4	dll_handle
arg	41:39	41:55	3	"OMX_GetHandle"
water	41:39	0:0	4	"OMX_GetHandle"
water	41:56	0:0	2	;
water	42:4	0:0	2	pf_free_handle
op	42:19	0:0	2	=
call	42:21	42:57	2	dlsym
arg	42:28	42:38	3	dll_handle
water	42:28	0:0	4	dll_handle
arg	42:40	42:57	3	"OMX_FreeHandle"
water	42:40	0:0	4	"OMX_FreeHandle"
water	42:58	0:0	2	;
water	43:4	0:0	2	pf_component_enum
op	43:22	0:0	2	=
call	43:24	43:67	2	dlsym
arg	43:31	43:41	3	dll_handle
water	43:31	0:0	4	dll_handle
arg	43:43	43:67	3	"OMX_ComponentNameEnum"
water	43:43	0:0	4	"OMX_ComponentNameEnum"
water	43:68	0:0	2	;
water	44:4	0:0	2	pf_get_roles_of_component
op	44:30	0:0	2	=
call	44:32	44:77	2	dlsym
arg	44:39	44:49	3	dll_handle
water	44:39	0:0	4	dll_handle
arg	44:51	44:77	3	"OMX_GetRolesOfComponent"
water	44:51	0:0	4	"OMX_GetRolesOfComponent"
water	44:78	0:0	2	;
if	45:4	54:4	2	(! pf_init || ! pf_deinit || ! pf_get_handle || ! pf_free_handle || ! pf_component_enum || ! pf_get_roles_of_component)
cond	45:8	46:31	3	! pf_init || ! pf_deinit || ! pf_get_handle || ! pf_free_handle || ! pf_component_enum || ! pf_get_roles_of_component
op	45:8	0:0	4	!
water	45:9	0:0	4	pf_init
op	45:17	0:0	4	||
op	45:20	0:0	4	!
water	45:21	0:0	4	pf_deinit
op	45:31	0:0	4	||
op	45:34	0:0	4	!
water	45:35	0:0	4	pf_get_handle
op	45:49	0:0	4	||
op	45:52	0:0	4	!
water	45:53	0:0	4	pf_free_handle
op	45:68	0:0	4	||
op	46:8	0:0	4	!
water	46:9	0:0	4	pf_component_enum
op	46:27	0:0	4	||
op	46:30	0:0	4	!
water	46:31	0:0	4	pf_get_roles_of_component
stmts	47:4	54:4	3	
water	47:4	0:0	4	{
call	48:8	49:46	4	msg_Warn
arg	48:18	48:24	5	p_this
water	48:18	0:0	6	p_this
arg	48:26	48:66	5	"cannot find OMX_* symbols in `%s' (%s)"
water	48:26	0:0	6	"cannot find OMX_* symbols in `%s' (%s)"
arg	49:18	49:34	5	ppsz_dll_list[i]
water	49:18	0:0	6	ppsz_dll_list
op	49:31	0:0	6	[
water	49:32	0:0	6	i
op	49:33	0:0	6	]
arg	49:36	49:46	5	dlerror()
call	49:36	49:44	6	dlerror
water	49:47	0:0	4	;
call	50:8	50:28	4	dll_close
arg	50:18	50:28	5	dll_handle
water	50:18	0:0	6	dll_handle
water	50:29	0:0	4	;
call	51:8	51:22	4	CloseExtraDll
water	51:23	0:0	4	;
call	52:8	52:42	4	vlc_mutex_unlock
arg	52:26	52:42	5	&omx_core_mutex
op	52:26	0:0	6	&
water	52:27	0:0	6	omx_core_mutex
water	52:43	0:0	4	;
return	53:8	53:27	4	VLC_EGENERIC
water	53:15	0:0	5	VLC_EGENERIC
water	54:4	0:0	4	}
decl	56:4	56:39	2	OMX_ERRORTYPE	omx_error
op	56:28	0:0	2	=
call	56:30	56:38	3	pf_init
if	57:4	65:4	2	(omx_error != OMX_ErrorNone)
cond	57:7	57:20	3	omx_error != OMX_ErrorNone
water	57:7	0:0	4	omx_error
op	57:17	0:0	4	!=
water	57:20	0:0	4	OMX_ErrorNone
stmts	58:4	65:4	3	
water	58:4	0:0	4	{
call	59:8	60:43	4	msg_Warn
arg	59:18	59:24	5	p_this
water	59:18	0:0	6	p_this
arg	59:26	59:52	5	"OMX_Init failed (%x: %s)"
water	59:26	0:0	6	"OMX_Init failed (%x: %s)"
arg	59:54	59:63	5	omx_error
water	59:54	0:0	6	omx_error
arg	60:18	60:43	5	ErrorToString(omx_error)
call	60:18	60:41	6	ErrorToString
arg	60:32	60:41	7	omx_error
water	60:32	0:0	8	omx_error
water	60:44	0:0	4	;
call	61:8	61:28	4	dll_close
arg	61:18	61:28	5	dll_handle
water	61:18	0:0	6	dll_handle
water	61:29	0:0	4	;
call	62:8	62:22	4	CloseExtraDll
water	62:23	0:0	4	;
call	63:8	63:42	4	vlc_mutex_unlock
arg	63:26	63:42	5	&omx_core_mutex
op	63:26	0:0	6	&
water	63:27	0:0	6	omx_core_mutex
water	63:43	0:0	4	;
return	64:8	64:27	4	VLC_EGENERIC
water	64:15	0:0	5	VLC_EGENERIC
water	65:4	0:0	4	}
water	66:4	0:0	2	omx_refcount
op	66:16	0:0	2	++
water	66:18	0:0	2	;
call	67:4	67:38	2	vlc_mutex_unlock
arg	67:22	67:38	3	&omx_core_mutex
op	67:22	0:0	4	&
water	67:23	0:0	4	omx_core_mutex
water	67:39	0:0	2	;
return	68:4	68:22	2	VLC_SUCCESS
water	68:11	0:0	3	VLC_SUCCESS

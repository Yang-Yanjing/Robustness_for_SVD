func	2:0	38:0	0	static void	InputUpdateMeta
params	2:27	0:0	1	
param	2:29	2:52	2	input_thread_t *	p_input
param	2:54	2:71	2	demux_t *	p_demux
stmnts	0:0	37:29	1	
decl	4:4	4:39	2	vlc_meta_t	*p_meta
op	4:23	0:0	2	=
call	4:25	4:38	3	vlc_meta_New
if	5:4	6:14	2	(unlikely (p_meta == NULL ))
cond	5:8	5:31	3	unlikely (p_meta == NULL )
call	5:8	5:31	4	unlikely
arg	5:17	5:31	5	p_meta==NULL
water	5:17	0:0	6	p_meta
op	5:24	0:0	6	==
water	5:27	0:0	6	NULL
stmts	6:8	6:14	3	
return	6:8	6:14	4	
call	7:4	7:51	2	demux_Control
arg	7:19	7:26	3	p_demux
water	7:19	0:0	4	p_demux
arg	7:28	7:42	3	DEMUX_GET_META
water	7:28	0:0	4	DEMUX_GET_META
arg	7:44	7:51	3	p_meta
water	7:44	0:0	4	p_meta
water	7:52	0:0	2	;
decl	10:4	10:35	2	input_attachment_t	**attachment
decl	11:4	11:20	2	int	i_attachment
if	12:4	35:4	2	(!demux_Control (p_demux ,DEMUX_GET_ATTACHMENTS ,& attachment ,& i_attachment ))
cond	12:8	13:51	3	!demux_Control (p_demux ,DEMUX_GET_ATTACHMENTS ,& attachment ,& i_attachment )
op	12:8	0:0	4	!
call	12:9	13:51	4	demux_Control
arg	12:24	12:31	5	p_demux
water	12:24	0:0	6	p_demux
arg	12:33	12:54	5	DEMUX_GET_ATTACHMENTS
water	12:33	0:0	6	DEMUX_GET_ATTACHMENTS
arg	13:24	13:35	5	&attachment
op	13:24	0:0	6	&
water	13:25	0:0	6	attachment
arg	13:37	13:51	5	&i_attachment
op	13:37	0:0	6	&
water	13:38	0:0	6	i_attachment
stmts	14:4	35:4	3	
water	14:4	0:0	4	{
call	15:8	15:50	4	vlc_mutex_lock
arg	15:24	15:50	5	&p_input->p->p_item->lock
op	15:24	0:0	6	&
water	15:25	0:0	6	p_input
op	15:32	0:0	6	->
water	15:34	0:0	6	p
op	15:35	0:0	6	->
water	15:37	0:0	6	p_item
op	15:43	0:0	6	->
water	15:45	0:0	6	lock
water	15:51	0:0	4	;
if	16:8	31:8	4	(p_input -> p -> i_attachment > 0)
cond	16:12	16:39	5	p_input -> p -> i_attachment > 0
water	16:12	0:0	6	p_input
op	16:19	0:0	6	->
water	16:21	0:0	6	p
op	16:22	0:0	6	->
water	16:24	0:0	6	i_attachment
op	16:37	0:0	6	>
water	16:39	0:0	6	0
stmts	17:8	31:8	5	
water	17:8	0:0	6	{
decl	18:12	18:21	6	int	j
op	18:18	0:0	6	=
water	18:20	0:0	6	0
for	19:12	29:12	6	( int i = 0 ;i < p_input -> p -> i_attachment;i ++)
forinit	0:0	19:26	7	 int i = 0 ;
decl	19:17	19:26	8	int	i
op	19:23	0:0	8	=
water	19:25	0:0	8	0
cond	19:28	19:44	7	i < p_input -> p -> i_attachment
water	19:28	0:0	8	i
op	19:30	0:0	8	<
water	19:32	0:0	8	p_input
op	19:39	0:0	8	->
water	19:41	0:0	8	p
op	19:42	0:0	8	->
water	19:44	0:0	8	i_attachment
forexpr	19:58	19:59	7	i ++
water	19:58	0:0	8	i
op	19:59	0:0	8	++
stmts	20:12	29:12	7	
water	20:12	0:0	8	{
if	21:16	22:76	8	(p_input -> p -> attachment_demux [ i ] == p_demux)
cond	21:20	21:55	9	p_input -> p -> attachment_demux [ i ] == p_demux
water	21:20	0:0	10	p_input
op	21:27	0:0	10	->
water	21:29	0:0	10	p
op	21:30	0:0	10	->
water	21:32	0:0	10	attachment_demux
op	21:48	0:0	10	[
water	21:49	0:0	10	i
op	21:50	0:0	10	]
op	21:52	0:0	10	==
water	21:55	0:0	10	p_demux
stmts	22:20	22:76	9	
call	22:20	22:75	10	vlc_input_attachment_Delete
arg	22:49	22:75	11	p_input->p->attachment[i]
water	22:49	0:0	12	p_input
op	22:56	0:0	12	->
water	22:58	0:0	12	p
op	22:59	0:0	12	->
water	22:61	0:0	12	attachment
op	22:71	0:0	12	[
water	22:72	0:0	12	i
op	22:73	0:0	12	]
water	22:76	0:0	10	;
else	23:16	28:16	8
stmts	24:16	28:16	9	
water	24:16	0:0	10	{
water	25:20	0:0	10	p_input
op	25:27	0:0	10	->
water	25:29	0:0	10	p
op	25:30	0:0	10	->
water	25:32	0:0	10	attachment
op	25:42	0:0	10	[
water	25:43	0:0	10	j
op	25:44	0:0	10	]
op	25:46	0:0	10	=
water	25:48	0:0	10	p_input
op	25:55	0:0	10	->
water	25:57	0:0	10	p
op	25:58	0:0	10	->
water	25:60	0:0	10	attachment
op	25:70	0:0	10	[
water	25:71	0:0	10	i
op	25:72	0:0	10	]
water	25:73	0:0	10	;
water	26:20	0:0	10	p_input
op	26:27	0:0	10	->
water	26:29	0:0	10	p
op	26:30	0:0	10	->
water	26:32	0:0	10	attachment_demux
op	26:48	0:0	10	[
water	26:49	0:0	10	j
op	26:50	0:0	10	]
op	26:52	0:0	10	=
water	26:54	0:0	10	p_input
op	26:61	0:0	10	->
water	26:63	0:0	10	p
op	26:64	0:0	10	->
water	26:66	0:0	10	attachment_demux
op	26:82	0:0	10	[
water	26:83	0:0	10	i
op	26:84	0:0	10	]
water	26:85	0:0	10	;
water	27:20	0:0	10	j
op	27:21	0:0	10	++
water	27:23	0:0	10	;
water	28:16	0:0	10	}
water	29:12	0:0	8	}
water	30:12	0:0	6	p_input
op	30:19	0:0	6	->
water	30:21	0:0	6	p
op	30:22	0:0	6	->
water	30:24	0:0	6	i_attachment
op	30:37	0:0	6	=
water	30:39	0:0	6	j
water	30:40	0:0	6	;
water	31:8	0:0	6	}
call	32:8	33:60	4	AppendAttachment
arg	32:26	32:51	5	&p_input->p->i_attachment
op	32:26	0:0	6	&
water	32:27	0:0	6	p_input
op	32:34	0:0	6	->
water	32:36	0:0	6	p
op	32:37	0:0	6	->
water	32:39	0:0	6	i_attachment
arg	32:53	32:76	5	&p_input->p->attachment
op	32:53	0:0	6	&
water	32:54	0:0	6	p_input
op	32:61	0:0	6	->
water	32:63	0:0	6	p
op	32:64	0:0	6	->
water	32:66	0:0	6	attachment
arg	32:78	32:107	5	&p_input->p->attachment_demux
op	32:78	0:0	6	&
water	32:79	0:0	6	p_input
op	32:86	0:0	6	->
water	32:88	0:0	6	p
op	32:89	0:0	6	->
water	32:91	0:0	6	attachment_demux
arg	33:26	33:38	5	i_attachment
water	33:26	0:0	6	i_attachment
arg	33:40	33:50	5	attachment
water	33:40	0:0	6	attachment
arg	33:52	33:60	5	p_demux
water	33:52	0:0	6	p_demux
water	33:61	0:0	4	;
call	34:8	34:52	4	vlc_mutex_unlock
arg	34:26	34:52	5	&p_input->p->p_item->lock
op	34:26	0:0	6	&
water	34:27	0:0	6	p_input
op	34:34	0:0	6	->
water	34:36	0:0	6	p
op	34:37	0:0	6	->
water	34:39	0:0	6	p_item
op	34:45	0:0	6	->
water	34:47	0:0	6	lock
water	34:53	0:0	4	;
water	35:4	0:0	4	}
call	36:4	36:56	2	es_out_ControlSetMeta
arg	36:27	36:47	3	p_input->p->p_es_out
water	36:27	0:0	4	p_input
op	36:34	0:0	4	->
water	36:36	0:0	4	p
op	36:37	0:0	4	->
water	36:39	0:0	4	p_es_out
arg	36:49	36:56	3	p_meta
water	36:49	0:0	4	p_meta
water	36:57	0:0	2	;
call	37:4	37:28	2	vlc_meta_Delete
arg	37:21	37:28	3	p_meta
water	37:21	0:0	4	p_meta
water	37:29	0:0	2	;

func	2:0	134:0	0	static int	blurayControl
params	2:24	0:0	1	
param	2:25	2:41	2	demux_t *	p_demux
param	2:43	2:52	2	int	query
param	2:54	2:66	2	va_list	args
stmnts	0:0	133:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:21	2	bool	*pb_bool
decl	6:4	6:19	2	int64_t	*pi_64
switch	7:4	132:4	2	(query)
cond	7:12	7:12	3	query
water	7:12	0:0	4	query
stmts	7:19	132:4	3	
water	7:19	0:0	4	{
label	8:4	8:23	4	case DEMUX_CAN_SEEK :
label	9:4	9:24	4	case DEMUX_CAN_PAUSE :
label	10:4	10:31	4	case DEMUX_CAN_CONTROL_PACE :
water	11:9	0:0	4	pb_bool
op	11:17	0:0	4	=
water	11:19	0:0	4	(
water	11:20	0:0	4	bool
op	11:24	0:0	4	*
water	11:25	0:0	4	)
call	11:26	11:45	4	va_arg
arg	11:33	11:37	5	args
water	11:33	0:0	6	args
arg	11:39	11:45	5	bool*
water	11:39	0:0	6	bool
op	11:44	0:0	6	*
water	11:46	0:0	4	;
op	12:9	0:0	4	*
water	12:10	0:0	4	pb_bool
op	12:18	0:0	4	=
water	12:20	0:0	4	true
water	12:24	0:0	4	;
break	13:9	13:14	4	
label	14:4	14:28	4	case DEMUX_GET_PTS_DELAY :
water	15:8	0:0	4	pi_64
op	15:14	0:0	4	=
water	15:16	0:0	4	(
water	15:17	0:0	4	int64_t
op	15:24	0:0	4	*
water	15:25	0:0	4	)
call	15:26	15:48	4	va_arg
arg	15:33	15:37	5	args
water	15:33	0:0	6	args
arg	15:39	15:48	5	int64_t*
water	15:39	0:0	6	int64_t
op	15:47	0:0	6	*
water	15:49	0:0	4	;
op	16:8	0:0	4	*
water	16:9	0:0	4	pi_64
op	16:15	0:0	4	=
call	16:17	16:29	4	INT64_C
arg	16:25	16:29	5	1000
water	16:25	0:0	6	1000
call	16:31	16:75	4	*var_InheritInteger
arg	16:52	16:59	5	p_demux
water	16:52	0:0	6	p_demux
arg	16:61	16:75	5	"disc-caching"
water	16:61	0:0	6	"disc-caching"
water	16:76	0:0	4	;
break	17:8	17:13	4	
label	18:4	18:30	4	case DEMUX_SET_PAUSE_STATE :
break	20:8	20:13	4	
label	21:4	21:24	4	case DEMUX_SET_TITLE :
water	22:4	0:0	4	{
decl	23:8	23:44	4	int	i_title
op	23:20	0:0	4	=
water	23:22	0:0	4	(
water	23:23	0:0	4	int
water	23:26	0:0	4	)
call	23:27	23:43	5	va_arg
arg	23:34	23:38	6	args
water	23:34	0:0	7	args
arg	23:40	23:43	6	int
water	23:40	0:0	7	int
if	24:8	25:31	4	(bluraySetTitle (p_demux ,i_title ) != VLC_SUCCESS)
cond	24:12	24:48	5	bluraySetTitle (p_demux ,i_title ) != VLC_SUCCESS
call	24:12	24:43	6	bluraySetTitle
arg	24:27	24:34	7	p_demux
water	24:27	0:0	8	p_demux
arg	24:36	24:43	7	i_title
water	24:36	0:0	8	i_title
op	24:45	0:0	6	!=
water	24:48	0:0	6	VLC_SUCCESS
stmts	25:12	25:31	5	
return	25:12	25:31	6	VLC_EGENERIC
water	25:19	0:0	7	VLC_EGENERIC
break	26:8	26:13	4	
water	27:4	0:0	4	}
label	28:4	28:28	4	case DEMUX_SET_SEEKPOINT :
water	29:4	0:0	4	{
decl	30:8	30:46	4	int	i_chapter
op	30:22	0:0	4	=
water	30:24	0:0	4	(
water	30:25	0:0	4	int
water	30:28	0:0	4	)
call	30:29	30:45	5	va_arg
arg	30:36	30:40	6	args
water	30:36	0:0	7	args
arg	30:42	30:45	6	int
water	30:42	0:0	7	int
call	31:8	31:48	4	bd_seek_chapter
arg	31:24	31:37	5	p_sys->bluray
water	31:24	0:0	6	p_sys
op	31:29	0:0	6	->
water	31:31	0:0	6	bluray
arg	31:39	31:48	5	i_chapter
water	31:39	0:0	6	i_chapter
water	31:49	0:0	4	;
water	32:8	0:0	4	p_demux
op	32:15	0:0	4	->
water	32:17	0:0	4	info
op	32:21	0:0	4	.
water	32:22	0:0	4	i_update
op	32:31	0:0	4	=
water	32:33	0:0	4	INPUT_UPDATE_SEEKPOINT
water	32:55	0:0	4	;
break	33:8	33:13	4	
water	34:4	0:0	4	}
label	35:4	35:29	4	case DEMUX_GET_TITLE_INFO :
water	36:4	0:0	4	{
decl	37:8	37:85	4	input_title_t	***ppp_title
op	37:35	0:0	4	=
water	37:37	0:0	4	(
water	37:38	0:0	4	input_title_t
op	37:51	0:0	4	*
op	37:52	0:0	4	*
op	37:53	0:0	4	*
water	37:54	0:0	4	)
call	37:55	37:84	5	va_arg
arg	37:62	37:66	6	args
water	37:62	0:0	7	args
arg	37:68	37:84	6	input_title_t***
water	37:68	0:0	7	input_title_t
op	37:81	0:0	7	*
op	37:82	0:0	7	*
op	37:83	0:0	7	*
decl	38:8	38:58	4	int	*pi_int
op	38:32	0:0	4	=
water	38:34	0:0	4	(
water	38:35	0:0	4	int
op	38:38	0:0	4	*
water	38:39	0:0	4	)
call	38:40	38:57	5	va_arg
arg	38:47	38:51	6	args
water	38:47	0:0	7	args
arg	38:53	38:57	6	int*
water	38:53	0:0	7	int
op	38:56	0:0	7	*
decl	39:8	39:58	4	int	*pi_title_offset
op	39:32	0:0	4	=
water	39:34	0:0	4	(
water	39:35	0:0	4	int
op	39:38	0:0	4	*
water	39:39	0:0	4	)
call	39:40	39:57	5	va_arg
arg	39:47	39:51	6	args
water	39:47	0:0	7	args
arg	39:53	39:57	6	int*
water	39:53	0:0	7	int
op	39:56	0:0	7	*
decl	40:8	40:58	4	int	*pi_chapter_offset
op	40:32	0:0	4	=
water	40:34	0:0	4	(
water	40:35	0:0	4	int
op	40:38	0:0	4	*
water	40:39	0:0	4	)
call	40:40	40:57	5	va_arg
arg	40:47	40:51	6	args
water	40:47	0:0	7	args
arg	40:53	40:57	6	int*
water	40:53	0:0	7	int
op	40:56	0:0	7	*
op	42:8	0:0	4	*
water	42:9	0:0	4	pi_title_offset
op	42:27	0:0	4	=
water	42:29	0:0	4	0
water	42:30	0:0	4	;
op	43:8	0:0	4	*
water	43:9	0:0	4	pi_chapter_offset
op	43:27	0:0	4	=
water	43:29	0:0	4	0
water	43:30	0:0	4	;
op	45:8	0:0	4	*
water	45:9	0:0	4	pi_int
op	45:16	0:0	4	=
water	45:18	0:0	4	p_sys
op	45:23	0:0	4	->
water	45:25	0:0	4	i_title
water	45:32	0:0	4	;
op	46:8	0:0	4	*
water	46:9	0:0	4	ppp_title
op	46:19	0:0	4	=
call	46:21	46:68	4	malloc
arg	46:28	46:68	5	p_sys->i_title*sizeof(input_title_t*)
water	46:28	0:0	6	p_sys
op	46:33	0:0	6	->
water	46:35	0:0	6	i_title
op	46:43	0:0	6	*
op	46:45	0:0	6	sizeof
water	46:51	0:0	6	(
water	46:52	0:0	6	input_title_t
op	46:66	0:0	6	*
water	46:67	0:0	6	)
water	46:69	0:0	4	;
for	47:8	48:75	4	( unsigned int i = 0 ;i < p_sys -> i_title;i ++)
forinit	0:0	47:31	5	 unsigned int i = 0 ;
decl	47:13	47:31	6	unsigned int	i
op	47:28	0:0	6	=
water	47:30	0:0	6	0
cond	47:33	47:44	5	i < p_sys -> i_title
water	47:33	0:0	6	i
op	47:35	0:0	6	<
water	47:37	0:0	6	p_sys
op	47:42	0:0	6	->
water	47:44	0:0	6	i_title
forexpr	47:53	47:54	5	i ++
water	47:53	0:0	6	i
op	47:54	0:0	6	++
stmts	48:12	48:75	5	
water	48:12	0:0	6	(
op	48:13	0:0	6	*
water	48:14	0:0	6	ppp_title
water	48:23	0:0	6	)
op	48:24	0:0	6	[
water	48:25	0:0	6	i
op	48:26	0:0	6	]
op	48:28	0:0	6	=
call	48:30	48:74	6	vlc_input_title_Duplicate
arg	48:56	48:74	7	p_sys->pp_title[i]
water	48:56	0:0	8	p_sys
op	48:61	0:0	8	->
water	48:63	0:0	8	pp_title
op	48:71	0:0	8	[
water	48:72	0:0	8	i
op	48:73	0:0	8	]
water	48:75	0:0	6	;
return	49:8	49:26	4	VLC_SUCCESS
water	49:15	0:0	5	VLC_SUCCESS
water	50:4	0:0	4	}
label	51:4	51:25	4	case DEMUX_GET_LENGTH :
water	52:4	0:0	4	{
decl	53:8	53:62	4	int64_t	*pi_length
op	53:27	0:0	4	=
water	53:29	0:0	4	(
water	53:30	0:0	4	int64_t
op	53:37	0:0	4	*
water	53:38	0:0	4	)
call	53:39	53:61	5	va_arg
arg	53:46	53:50	6	args
water	53:46	0:0	7	args
arg	53:52	53:61	6	int64_t*
water	53:52	0:0	7	int64_t
op	53:60	0:0	7	*
op	54:8	0:0	4	*
water	54:9	0:0	4	pi_length
op	54:19	0:0	4	=
water	54:21	0:0	4	p_demux
op	54:28	0:0	4	->
water	54:30	0:0	4	info
op	54:34	0:0	4	.
water	54:35	0:0	4	i_title
op	54:43	0:0	4	<
water	54:45	0:0	4	(
water	54:46	0:0	4	int
water	54:49	0:0	4	)
water	54:50	0:0	4	p_sys
op	54:55	0:0	4	->
water	54:57	0:0	4	i_title
water	54:65	0:0	4	?
water	54:67	0:0	4	CUR_LENGTH
water	54:78	0:0	4	:
water	54:80	0:0	4	0
water	54:81	0:0	4	;
return	55:8	55:26	4	VLC_SUCCESS
water	55:15	0:0	5	VLC_SUCCESS
water	56:4	0:0	4	}
label	57:4	57:23	4	case DEMUX_SET_TIME :
water	58:4	0:0	4	{
decl	59:8	59:55	4	int64_t	i_time
op	59:23	0:0	4	=
water	59:25	0:0	4	(
water	59:26	0:0	4	int64_t
water	59:33	0:0	4	)
call	59:34	59:54	5	va_arg
arg	59:41	59:45	6	args
water	59:41	0:0	7	args
arg	59:47	59:54	6	int64_t
water	59:47	0:0	7	int64_t
call	60:8	60:52	4	bd_seek_time
arg	60:21	60:34	5	p_sys->bluray
water	60:21	0:0	6	p_sys
op	60:26	0:0	6	->
water	60:28	0:0	6	bluray
arg	60:36	60:52	5	TO_TICKS(i_time)
call	60:36	60:51	6	TO_TICKS
arg	60:45	60:51	7	i_time
water	60:45	0:0	8	i_time
water	60:53	0:0	4	;
return	61:8	61:26	4	VLC_SUCCESS
water	61:15	0:0	5	VLC_SUCCESS
water	62:4	0:0	4	}
label	63:4	63:23	4	case DEMUX_GET_TIME :
water	64:4	0:0	4	{
decl	65:8	65:60	4	int64_t	*pi_time
op	65:25	0:0	4	=
water	65:27	0:0	4	(
water	65:28	0:0	4	int64_t
op	65:35	0:0	4	*
water	65:36	0:0	4	)
call	65:37	65:59	5	va_arg
arg	65:44	65:48	6	args
water	65:44	0:0	7	args
arg	65:50	65:59	6	int64_t*
water	65:50	0:0	7	int64_t
op	65:58	0:0	7	*
op	66:8	0:0	4	*
water	66:9	0:0	4	pi_time
op	66:17	0:0	4	=
water	66:19	0:0	4	(
water	66:20	0:0	4	int64_t
water	66:27	0:0	4	)
call	66:28	66:66	4	FROM_TICKS
arg	66:39	66:66	5	bd_tell_time(p_sys->bluray)
call	66:39	66:65	6	bd_tell_time
arg	66:52	66:65	7	p_sys->bluray
water	66:52	0:0	8	p_sys
op	66:57	0:0	8	->
water	66:59	0:0	8	bluray
water	66:67	0:0	4	;
return	67:8	67:26	4	VLC_SUCCESS
water	67:15	0:0	5	VLC_SUCCESS
water	68:4	0:0	4	}
label	69:4	69:27	4	case DEMUX_GET_POSITION :
water	70:4	0:0	4	{
decl	71:8	71:61	4	double	*pf_position
op	71:28	0:0	4	=
water	71:30	0:0	4	(
water	71:31	0:0	4	double
op	71:37	0:0	4	*
water	71:38	0:0	4	)
call	71:39	71:60	5	va_arg
arg	71:46	71:50	6	args
water	71:46	0:0	7	args
arg	71:52	71:60	6	double*
water	71:52	0:0	7	double
op	71:59	0:0	7	*
op	72:8	0:0	4	*
water	72:9	0:0	4	pf_position
op	72:21	0:0	4	=
water	72:23	0:0	4	p_demux
op	72:30	0:0	4	->
water	72:32	0:0	4	info
op	72:36	0:0	4	.
water	72:37	0:0	4	i_title
op	72:45	0:0	4	<
water	72:47	0:0	4	(
water	72:48	0:0	4	int
water	72:51	0:0	4	)
water	72:52	0:0	4	p_sys
op	72:57	0:0	4	->
water	72:59	0:0	4	i_title
op	72:67	0:0	4	&&
water	72:70	0:0	4	CUR_LENGTH
op	72:81	0:0	4	>
water	72:83	0:0	4	0
water	72:85	0:0	4	?
water	73:22	0:0	4	(
water	73:23	0:0	4	double
water	73:29	0:0	4	)
call	73:30	73:68	4	FROM_TICKS
arg	73:41	73:68	5	bd_tell_time(p_sys->bluray)
call	73:41	73:67	6	bd_tell_time
arg	73:54	73:67	7	p_sys->bluray
water	73:54	0:0	8	p_sys
op	73:59	0:0	8	->
water	73:61	0:0	8	bluray
op	73:69	0:0	4	/
water	73:70	0:0	4	CUR_LENGTH
water	73:81	0:0	4	:
water	73:83	0:0	4	0
op	73:84	0:0	4	.
water	73:85	0:0	4	0
water	73:86	0:0	4	;
return	74:8	74:26	4	VLC_SUCCESS
water	74:15	0:0	5	VLC_SUCCESS
water	75:4	0:0	4	}
label	76:4	76:27	4	case DEMUX_SET_POSITION :
water	77:4	0:0	4	{
decl	78:8	78:56	4	double	f_position
op	78:26	0:0	4	=
water	78:28	0:0	4	(
water	78:29	0:0	4	double
water	78:35	0:0	4	)
call	78:36	78:55	5	va_arg
arg	78:43	78:47	6	args
water	78:43	0:0	7	args
arg	78:49	78:55	6	double
water	78:49	0:0	7	double
call	79:8	79:67	4	bd_seek_time
arg	79:21	79:34	5	p_sys->bluray
water	79:21	0:0	6	p_sys
op	79:26	0:0	6	->
water	79:28	0:0	6	bluray
arg	79:36	79:67	5	TO_TICKS(f_position*CUR_LENGTH)
call	79:36	79:66	6	TO_TICKS
arg	79:45	79:66	7	f_position*CUR_LENGTH
water	79:45	0:0	8	f_position
op	79:55	0:0	8	*
water	79:56	0:0	8	CUR_LENGTH
water	79:68	0:0	4	;
return	80:8	80:26	4	VLC_SUCCESS
water	80:15	0:0	5	VLC_SUCCESS
water	81:4	0:0	4	}
label	82:4	82:23	4	case DEMUX_GET_META :
water	83:4	0:0	4	{
decl	84:8	84:70	4	vlc_meta_t	*p_meta
op	84:27	0:0	4	=
water	84:29	0:0	4	(
water	84:30	0:0	4	vlc_meta_t
op	84:41	0:0	4	*
water	84:42	0:0	4	)
call	84:44	84:69	5	va_arg
arg	84:52	84:56	6	args
water	84:52	0:0	7	args
arg	84:58	84:69	6	vlc_meta_t*
water	84:58	0:0	7	vlc_meta_t
op	84:68	0:0	7	*
decl	85:8	85:43	4	const META_DL	*meta
op	85:28	0:0	4	=
water	85:30	0:0	4	p_sys
op	85:35	0:0	4	->
water	85:37	0:0	4	p_meta
if	86:8	87:31	4	(meta == NULL)
cond	86:12	86:20	5	meta == NULL
water	86:12	0:0	6	meta
op	86:17	0:0	6	==
water	86:20	0:0	6	NULL
stmts	87:12	87:31	5	
return	87:12	87:31	6	VLC_EGENERIC
water	87:19	0:0	7	VLC_EGENERIC
if	88:8	88:79	4	(!EMPTY_STR (meta -> di_name ))
cond	88:12	88:36	5	!EMPTY_STR (meta -> di_name )
op	88:12	0:0	6	!
call	88:13	88:36	6	EMPTY_STR
arg	88:23	88:36	7	meta->di_name
water	88:23	0:0	8	meta
op	88:27	0:0	8	->
water	88:29	0:0	8	di_name
stmts	88:39	88:79	5	
call	88:39	88:78	6	vlc_meta_SetTitle
arg	88:57	88:63	7	p_meta
water	88:57	0:0	8	p_meta
arg	88:65	88:78	7	meta->di_name
water	88:65	0:0	8	meta
op	88:69	0:0	8	->
water	88:71	0:0	8	di_name
water	88:79	0:0	6	;
if	89:8	89:103	4	(!EMPTY_STR (meta -> language_code ))
cond	89:12	89:42	5	!EMPTY_STR (meta -> language_code )
op	89:12	0:0	6	!
call	89:13	89:42	6	EMPTY_STR
arg	89:23	89:42	7	meta->language_code
water	89:23	0:0	8	meta
op	89:27	0:0	8	->
water	89:29	0:0	8	language_code
stmts	89:45	89:103	5	
call	89:45	89:102	6	vlc_meta_AddExtra
arg	89:63	89:69	7	p_meta
water	89:63	0:0	8	p_meta
arg	89:71	89:81	7	"Language"
water	89:71	0:0	8	"Language"
arg	89:83	89:102	7	meta->language_code
water	89:83	0:0	8	meta
op	89:87	0:0	8	->
water	89:89	0:0	8	language_code
water	89:103	0:0	6	;
if	90:8	90:93	4	(!EMPTY_STR (meta -> filename ))
cond	90:12	90:37	5	!EMPTY_STR (meta -> filename )
op	90:12	0:0	6	!
call	90:13	90:37	6	EMPTY_STR
arg	90:23	90:37	7	meta->filename
water	90:23	0:0	8	meta
op	90:27	0:0	8	->
water	90:29	0:0	8	filename
stmts	90:40	90:93	5	
call	90:40	90:92	6	vlc_meta_AddExtra
arg	90:58	90:64	7	p_meta
water	90:58	0:0	8	p_meta
arg	90:66	90:76	7	"Filename"
water	90:66	0:0	8	"Filename"
arg	90:78	90:92	7	meta->filename
water	90:78	0:0	8	meta
op	90:82	0:0	8	->
water	90:84	0:0	8	filename
water	90:93	0:0	6	;
if	91:8	91:108	4	(!EMPTY_STR (meta -> di_alternative ))
cond	91:12	91:43	5	!EMPTY_STR (meta -> di_alternative )
op	91:12	0:0	6	!
call	91:13	91:43	6	EMPTY_STR
arg	91:23	91:43	7	meta->di_alternative
water	91:23	0:0	8	meta
op	91:27	0:0	8	->
water	91:29	0:0	8	di_alternative
stmts	91:46	91:108	5	
call	91:46	91:107	6	vlc_meta_AddExtra
arg	91:64	91:70	7	p_meta
water	91:64	0:0	8	p_meta
arg	91:72	91:85	7	"Alternative"
water	91:72	0:0	8	"Alternative"
arg	91:87	91:107	7	meta->di_alternative
water	91:87	0:0	8	meta
op	91:91	0:0	8	->
water	91:93	0:0	8	di_alternative
water	91:108	0:0	6	;
if	94:8	107:8	4	(meta -> thumb_count > 0 && meta -> thumbnails)
cond	94:12	94:43	5	meta -> thumb_count > 0 && meta -> thumbnails
water	94:12	0:0	6	meta
op	94:16	0:0	6	->
water	94:18	0:0	6	thumb_count
op	94:30	0:0	6	>
water	94:32	0:0	6	0
op	94:34	0:0	6	&&
water	94:37	0:0	6	meta
op	94:41	0:0	6	->
water	94:43	0:0	6	thumbnails
stmts	94:55	107:8	5	
water	94:55	0:0	6	{
decl	95:12	95:31	6	char	*psz_thumbpath
if	96:12	105:12	6	(asprintf (& psz_thumbpath ,"%s" DIR_SEP "BDMV" DIR_SEP "META" DIR_SEP "DL" DIR_SEP "%s" ,p_sys -> psz_bd_path ,meta -> thumbnails [ 0 ] . path ) > 0)
cond	96:16	97:74	7	asprintf (& psz_thumbpath ,"%s" DIR_SEP "BDMV" DIR_SEP "META" DIR_SEP "DL" DIR_SEP "%s" ,p_sys -> psz_bd_path ,meta -> thumbnails [ 0 ] . path ) > 0
call	96:16	97:70	8	asprintf
arg	96:25	96:39	9	&psz_thumbpath
op	96:25	0:0	10	&
water	96:26	0:0	10	psz_thumbpath
arg	96:41	96:101	9	"%s"DIR_SEP"BDMV"DIR_SEP"META"DIR_SEP"DL"DIR_SEP"%s"
water	96:41	0:0	10	"%s"
water	96:46	0:0	10	DIR_SEP
water	96:54	0:0	10	"BDMV"
water	96:61	0:0	10	DIR_SEP
water	96:69	0:0	10	"META"
water	96:76	0:0	10	DIR_SEP
water	96:84	0:0	10	"DL"
water	96:89	0:0	10	DIR_SEP
water	96:97	0:0	10	"%s"
arg	97:26	97:44	9	p_sys->psz_bd_path
water	97:26	0:0	10	p_sys
op	97:31	0:0	10	->
water	97:33	0:0	10	psz_bd_path
arg	97:46	97:70	9	meta->thumbnails[0].path
water	97:46	0:0	10	meta
op	97:50	0:0	10	->
water	97:52	0:0	10	thumbnails
op	97:62	0:0	10	[
water	97:63	0:0	10	0
op	97:64	0:0	10	]
op	97:65	0:0	10	.
water	97:66	0:0	10	path
op	97:72	0:0	8	>
water	97:74	0:0	8	0
stmts	97:77	105:12	7	
water	97:77	0:0	8	{
decl	98:16	98:72	8	char	*psz_thumburl
op	98:35	0:0	8	=
call	98:37	98:71	9	vlc_path2uri
arg	98:50	98:63	10	psz_thumbpath
water	98:50	0:0	11	psz_thumbpath
arg	98:65	98:71	10	"file"
water	98:65	0:0	11	"file"
if	99:16	102:16	8	(unlikely (psz_thumburl == NULL ))
cond	99:20	99:49	9	unlikely (psz_thumburl == NULL )
call	99:20	99:49	10	unlikely
arg	99:29	99:49	11	psz_thumburl==NULL
water	99:29	0:0	12	psz_thumburl
op	99:42	0:0	12	==
water	99:45	0:0	12	NULL
stmts	99:52	102:16	9	
water	99:52	0:0	10	{
call	100:20	100:38	10	free
arg	100:25	100:38	11	psz_thumbpath
water	100:25	0:0	12	psz_thumbpath
water	100:39	0:0	10	;
return	101:20	101:37	10	VLC_ENOMEM
water	101:27	0:0	11	VLC_ENOMEM
water	102:16	0:0	10	}
call	103:16	103:55	8	vlc_meta_SetArtURL
arg	103:35	103:41	9	p_meta
water	103:35	0:0	10	p_meta
arg	103:43	103:55	9	psz_thumburl
water	103:43	0:0	10	psz_thumburl
water	103:56	0:0	8	;
call	104:16	104:33	8	free
arg	104:21	104:33	9	psz_thumburl
water	104:21	0:0	10	psz_thumburl
water	104:34	0:0	8	;
water	105:12	0:0	8	}
call	106:12	106:30	6	free
arg	106:17	106:30	7	psz_thumbpath
water	106:17	0:0	8	psz_thumbpath
water	106:31	0:0	6	;
water	107:8	0:0	6	}
return	108:8	108:26	4	VLC_SUCCESS
water	108:15	0:0	5	VLC_SUCCESS
water	109:4	0:0	4	}
label	110:4	110:27	4	case DEMUX_NAV_ACTIVATE :
if	111:8	113:8	4	(p_sys -> b_popup_available && ! p_sys -> b_menu_open)
cond	111:12	111:48	5	p_sys -> b_popup_available && ! p_sys -> b_menu_open
water	111:12	0:0	6	p_sys
op	111:17	0:0	6	->
water	111:19	0:0	6	b_popup_available
op	111:37	0:0	6	&&
op	111:40	0:0	6	!
water	111:41	0:0	6	p_sys
op	111:46	0:0	6	->
water	111:48	0:0	6	b_menu_open
stmts	111:61	113:8	5	
water	111:61	0:0	6	{
return	112:12	112:51	6	sendKeyEvent(p_sys,BD_VK_POPUP)
call	112:19	112:50	7	sendKeyEvent
arg	112:32	112:37	8	p_sys
water	112:32	0:0	9	p_sys
arg	112:39	112:50	8	BD_VK_POPUP
water	112:39	0:0	9	BD_VK_POPUP
water	113:8	0:0	6	}
return	114:8	114:47	4	sendKeyEvent(p_sys,BD_VK_ENTER)
call	114:15	114:46	5	sendKeyEvent
arg	114:28	114:33	6	p_sys
water	114:28	0:0	7	p_sys
arg	114:35	114:46	6	BD_VK_ENTER
water	114:35	0:0	7	BD_VK_ENTER
label	115:4	115:21	4	case DEMUX_NAV_UP :
return	116:8	116:44	4	sendKeyEvent(p_sys,BD_VK_UP)
call	116:15	116:43	5	sendKeyEvent
arg	116:28	116:33	6	p_sys
water	116:28	0:0	7	p_sys
arg	116:35	116:43	6	BD_VK_UP
water	116:35	0:0	7	BD_VK_UP
label	117:4	117:23	4	case DEMUX_NAV_DOWN :
return	118:8	118:46	4	sendKeyEvent(p_sys,BD_VK_DOWN)
call	118:15	118:45	5	sendKeyEvent
arg	118:28	118:33	6	p_sys
water	118:28	0:0	7	p_sys
arg	118:35	118:45	6	BD_VK_DOWN
water	118:35	0:0	7	BD_VK_DOWN
label	119:4	119:23	4	case DEMUX_NAV_LEFT :
return	120:8	120:46	4	sendKeyEvent(p_sys,BD_VK_LEFT)
call	120:15	120:45	5	sendKeyEvent
arg	120:28	120:33	6	p_sys
water	120:28	0:0	7	p_sys
arg	120:35	120:45	6	BD_VK_LEFT
water	120:35	0:0	7	BD_VK_LEFT
label	121:4	121:24	4	case DEMUX_NAV_RIGHT :
return	122:8	122:47	4	sendKeyEvent(p_sys,BD_VK_RIGHT)
call	122:15	122:46	5	sendKeyEvent
arg	122:28	122:33	6	p_sys
water	122:28	0:0	7	p_sys
arg	122:35	122:46	6	BD_VK_RIGHT
water	122:35	0:0	7	BD_VK_RIGHT
label	123:4	123:25	4	case DEMUX_CAN_RECORD :
label	124:4	124:22	4	case DEMUX_GET_FPS :
label	125:4	125:24	4	case DEMUX_SET_GROUP :
label	126:4	126:35	4	case DEMUX_HAS_UNSUPPORTED_META :
label	127:4	127:30	4	case DEMUX_GET_ATTACHMENTS :
return	128:8	128:27	4	VLC_EGENERIC
water	128:15	0:0	5	VLC_EGENERIC
label	129:4	129:11	4	default :
call	130:8	130:70	4	msg_Warn
arg	130:17	130:24	5	p_demux
water	130:17	0:0	6	p_demux
arg	130:26	130:63	5	"unimplemented query (%d) in control"
water	130:26	0:0	6	"unimplemented query (%d) in control"
arg	130:65	130:70	5	query
water	130:65	0:0	6	query
water	130:71	0:0	4	;
return	131:8	131:27	4	VLC_EGENERIC
water	131:15	0:0	5	VLC_EGENERIC
water	132:4	0:0	4	}
return	133:4	133:22	2	VLC_SUCCESS
water	133:11	0:0	3	VLC_SUCCESS

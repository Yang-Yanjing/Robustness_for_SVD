func	2:0	81:0	0	static size_t	ISO6937toUTF8
params	2:27	0:0	1	
param	2:29	2:56	2	const unsigned char * *	inbuf
param	2:58	2:77	2	size_t *	inbytesleft
param	3:29	3:51	2	unsigned char * *	outbuf
param	3:53	3:74	2	size_t *	outbytesleft
stmnts	5:4	80:22	1	
if	5:4	6:26	2	(! inbuf || ! ( * inbuf ))
cond	5:8	5:26	3	! inbuf || ! ( * inbuf )
op	5:8	0:0	4	!
water	5:9	0:0	4	inbuf
op	5:15	0:0	4	||
op	5:18	0:0	4	!
water	5:19	0:0	4	(
op	5:20	0:0	4	*
water	5:21	0:0	4	inbuf
water	5:26	0:0	4	)
stmts	6:8	6:26	3	
return	6:8	6:26	4	(size_t)(0)
call	6:15	6:25	5	(size_t)
arg	6:24	6:25	6	0
water	6:24	0:0	7	0
decl	7:4	7:38	2	const unsigned char	*iptr
op	7:30	0:0	2	=
op	7:32	0:0	2	*
water	7:33	0:0	2	inbuf
decl	8:4	8:51	2	const unsigned char	*iend
op	8:30	0:0	2	=
water	8:32	0:0	2	iptr
op	8:37	0:0	2	+
op	8:39	0:0	2	*
water	8:40	0:0	2	inbytesleft
decl	9:4	9:33	2	unsigned char	*optr
op	9:24	0:0	2	=
op	9:26	0:0	2	*
water	9:27	0:0	2	outbuf
decl	10:4	10:46	2	unsigned char	*oend
op	10:24	0:0	2	=
water	10:26	0:0	2	optr
op	10:31	0:0	2	+
op	10:33	0:0	2	*
water	10:34	0:0	2	outbytesleft
decl	11:4	11:15	2	uint16_t	ch
decl	12:4	12:15	2	int	err
op	12:12	0:0	2	=
water	12:14	0:0	2	0
while	13:4	70:4	2	(iptr < iend)
cond	13:12	13:19	3	iptr < iend
water	13:12	0:0	4	iptr
op	13:17	0:0	4	<
water	13:19	0:0	4	iend
stmts	14:4	70:4	3	
water	14:4	0:0	4	{
if	15:8	24:8	4	(* iptr < 0 x80)
cond	15:12	15:21	5	* iptr < 0 x80
op	15:12	0:0	6	*
water	15:13	0:0	6	iptr
op	15:18	0:0	6	<
water	15:20	0:0	6	0
water	15:21	0:0	6	x80
stmts	16:8	24:8	5	
water	16:8	0:0	6	{
if	17:12	21:12	6	(optr >= oend)
cond	17:16	17:24	7	optr >= oend
water	17:16	0:0	8	optr
op	17:21	0:0	8	>=
water	17:24	0:0	8	oend
stmts	18:12	21:12	7	
water	18:12	0:0	8	{
water	19:16	0:0	8	err
op	19:20	0:0	8	=
water	19:22	0:0	8	E2BIG
water	19:27	0:0	8	;
break	20:16	20:21	8	
water	21:12	0:0	8	}
op	22:12	0:0	6	*
water	22:13	0:0	6	optr
op	22:17	0:0	6	++
op	22:20	0:0	6	=
op	22:22	0:0	6	*
water	22:23	0:0	6	iptr
op	22:27	0:0	6	++
water	22:29	0:0	6	;
continue	23:12	23:20	6	
water	24:8	0:0	6	}
if	25:8	29:8	4	(optr + 2 >= oend)
cond	25:13	25:25	5	optr + 2 >= oend
water	25:13	0:0	6	optr
op	25:18	0:0	6	+
water	25:20	0:0	6	2
op	25:22	0:0	6	>=
water	25:25	0:0	6	oend
stmts	26:8	29:8	5	
water	26:8	0:0	6	{
water	27:12	0:0	6	err
op	27:16	0:0	6	=
water	27:18	0:0	6	E2BIG
water	27:23	0:0	6	;
break	28:12	28:17	6	
water	29:8	0:0	6	}
water	30:8	0:0	4	ch
op	30:11	0:0	4	=
water	30:13	0:0	4	to_ucs4
op	30:20	0:0	4	[
op	30:21	0:0	4	*
water	30:22	0:0	4	iptr
op	30:27	0:0	4	-
water	30:29	0:0	4	0
water	30:30	0:0	4	x80
op	30:33	0:0	4	]
water	30:34	0:0	4	;
if	31:8	46:8	4	(ch == 0 xffff)
cond	31:12	31:19	5	ch == 0 xffff
water	31:12	0:0	6	ch
op	31:15	0:0	6	==
water	31:18	0:0	6	0
water	31:19	0:0	6	xffff
stmts	32:8	46:8	5	
water	32:8	0:0	6	{
if	34:12	38:12	6	(iptr + 1 >= iend)
cond	34:17	34:29	7	iptr + 1 >= iend
water	34:17	0:0	8	iptr
op	34:22	0:0	8	+
water	34:24	0:0	8	1
op	34:26	0:0	8	>=
water	34:29	0:0	8	iend
stmts	35:12	38:12	7	
water	35:12	0:0	8	{
water	36:16	0:0	8	err
op	36:20	0:0	8	=
water	36:22	0:0	8	EINVAL
water	36:28	0:0	8	;
break	37:16	37:21	8	
water	38:12	0:0	8	}
if	39:12	44:12	6	(iptr [ 1 ] < 0 x40 || iptr [ 1 ] >= 0 x80 || ! ( ch = to_ucs4_comb [ iptr [ 0 ] - 0 xc1 ] [ iptr [ 1 ] - 0 x40 ] ))
cond	39:17	40:68	7	iptr [ 1 ] < 0 x40 || iptr [ 1 ] >= 0 x80 || ! ( ch = to_ucs4_comb [ iptr [ 0 ] - 0 xc1 ] [ iptr [ 1 ] - 0 x40 ] )
water	39:17	0:0	8	iptr
op	39:21	0:0	8	[
water	39:22	0:0	8	1
op	39:23	0:0	8	]
op	39:25	0:0	8	<
water	39:27	0:0	8	0
water	39:28	0:0	8	x40
op	39:32	0:0	8	||
water	39:35	0:0	8	iptr
op	39:39	0:0	8	[
water	39:40	0:0	8	1
op	39:41	0:0	8	]
op	39:43	0:0	8	>=
water	39:46	0:0	8	0
water	39:47	0:0	8	x80
op	39:51	0:0	8	||
op	40:17	0:0	8	!
water	40:18	0:0	8	(
water	40:19	0:0	8	ch
op	40:22	0:0	8	=
water	40:24	0:0	8	to_ucs4_comb
op	40:36	0:0	8	[
water	40:37	0:0	8	iptr
op	40:41	0:0	8	[
water	40:42	0:0	8	0
op	40:43	0:0	8	]
op	40:45	0:0	8	-
water	40:47	0:0	8	0
water	40:48	0:0	8	xc1
op	40:51	0:0	8	]
op	40:52	0:0	8	[
water	40:53	0:0	8	iptr
op	40:57	0:0	8	[
water	40:58	0:0	8	1
op	40:59	0:0	8	]
op	40:61	0:0	8	-
water	40:63	0:0	8	0
water	40:64	0:0	8	x40
op	40:67	0:0	8	]
water	40:68	0:0	8	)
stmts	41:12	44:12	7	
water	41:12	0:0	8	{
water	42:16	0:0	8	err
op	42:20	0:0	8	=
water	42:22	0:0	8	EILSEQ
water	42:28	0:0	8	;
break	43:16	43:21	8	
water	44:12	0:0	8	}
water	45:12	0:0	6	iptr
op	45:17	0:0	6	+=
water	45:20	0:0	6	2
water	45:21	0:0	6	;
water	46:8	0:0	6	}
else	47:8	55:8	4
stmts	48:8	55:8	5	
water	48:8	0:0	6	{
if	49:12	53:12	6	(! ch)
cond	49:17	49:18	7	! ch
op	49:17	0:0	8	!
water	49:18	0:0	8	ch
stmts	50:12	53:12	7	
water	50:12	0:0	8	{
water	51:16	0:0	8	err
op	51:20	0:0	8	=
water	51:22	0:0	8	EILSEQ
water	51:28	0:0	8	;
break	52:16	52:21	8	
water	53:12	0:0	8	}
water	54:12	0:0	6	iptr
op	54:16	0:0	6	++
water	54:18	0:0	6	;
water	55:8	0:0	6	}
if	56:8	61:8	4	(ch < 0 x800)
cond	56:13	56:19	5	ch < 0 x800
water	56:13	0:0	6	ch
op	56:16	0:0	6	<
water	56:18	0:0	6	0
water	56:19	0:0	6	x800
stmts	57:8	61:8	5	
water	57:8	0:0	6	{
water	58:12	0:0	6	optr
op	58:16	0:0	6	[
water	58:17	0:0	6	1
op	58:18	0:0	6	]
op	58:20	0:0	6	=
water	58:22	0:0	6	0
water	58:23	0:0	6	x80
op	58:27	0:0	6	|
water	58:29	0:0	6	(
water	58:30	0:0	6	ch
op	58:33	0:0	6	&
water	58:35	0:0	6	0
water	58:36	0:0	6	x3f
water	58:39	0:0	6	)
water	58:40	0:0	6	;
water	59:12	0:0	6	optr
op	59:16	0:0	6	[
water	59:17	0:0	6	0
op	59:18	0:0	6	]
op	59:20	0:0	6	=
water	59:22	0:0	6	0
water	59:23	0:0	6	xc0
op	59:27	0:0	6	|
water	59:29	0:0	6	(
water	59:30	0:0	6	ch
op	59:33	0:0	6	>>
water	59:36	0:0	6	6
water	59:37	0:0	6	)
water	59:38	0:0	6	;
water	60:12	0:0	6	optr
op	60:17	0:0	6	+=
water	60:19	0:0	6	2
water	60:20	0:0	6	;
water	61:8	0:0	6	}
else	62:8	69:8	4
stmts	63:8	69:8	5	
water	63:8	0:0	6	{
water	64:12	0:0	6	optr
op	64:16	0:0	6	[
water	64:17	0:0	6	2
op	64:18	0:0	6	]
op	64:20	0:0	6	=
water	64:22	0:0	6	0
water	64:23	0:0	6	x80
op	64:27	0:0	6	|
water	64:29	0:0	6	(
water	64:30	0:0	6	ch
op	64:33	0:0	6	&
water	64:35	0:0	6	0
water	64:36	0:0	6	x3f
water	64:39	0:0	6	)
water	64:40	0:0	6	;
water	65:12	0:0	6	ch
op	65:15	0:0	6	>>=
water	65:19	0:0	6	6
water	65:20	0:0	6	;
water	66:12	0:0	6	optr
op	66:16	0:0	6	[
water	66:17	0:0	6	1
op	66:18	0:0	6	]
op	66:20	0:0	6	=
water	66:22	0:0	6	0
water	66:23	0:0	6	x80
op	66:27	0:0	6	|
water	66:29	0:0	6	(
water	66:30	0:0	6	ch
op	66:33	0:0	6	&
water	66:35	0:0	6	0
water	66:36	0:0	6	x3f
water	66:39	0:0	6	)
water	66:40	0:0	6	;
water	67:12	0:0	6	optr
op	67:16	0:0	6	[
water	67:17	0:0	6	0
op	67:18	0:0	6	]
op	67:20	0:0	6	=
water	67:22	0:0	6	0
water	67:23	0:0	6	xe0
op	67:27	0:0	6	|
water	67:29	0:0	6	(
water	67:30	0:0	6	ch
op	67:33	0:0	6	>>
water	67:36	0:0	6	6
water	67:37	0:0	6	)
water	67:38	0:0	6	;
water	68:12	0:0	6	optr
op	68:17	0:0	6	+=
water	68:20	0:0	6	3
water	68:21	0:0	6	;
water	69:8	0:0	6	}
water	70:4	0:0	4	}
op	71:4	0:0	2	*
water	71:5	0:0	2	inbuf
op	71:11	0:0	2	=
water	71:13	0:0	2	iptr
water	71:17	0:0	2	;
op	72:4	0:0	2	*
water	72:5	0:0	2	outbuf
op	72:12	0:0	2	=
water	72:14	0:0	2	optr
water	72:18	0:0	2	;
op	73:4	0:0	2	*
water	73:5	0:0	2	inbytesleft
op	73:17	0:0	2	=
water	73:19	0:0	2	iend
op	73:24	0:0	2	-
water	73:26	0:0	2	iptr
water	73:30	0:0	2	;
op	74:4	0:0	2	*
water	74:5	0:0	2	outbytesleft
op	74:18	0:0	2	=
water	74:20	0:0	2	oend
op	74:25	0:0	2	-
water	74:27	0:0	2	optr
water	74:31	0:0	2	;
if	75:4	79:4	2	(err)
cond	75:8	75:8	3	err
water	75:8	0:0	4	err
stmts	76:4	79:4	3	
water	76:4	0:0	4	{
water	77:8	0:0	4	errno
op	77:14	0:0	4	=
water	77:16	0:0	4	err
water	77:19	0:0	4	;
return	78:8	78:27	4	(size_t)(-1)
call	78:15	78:26	5	(size_t)
arg	78:24	78:26	6	-1
op	78:24	0:0	7	-
water	78:25	0:0	7	1
water	79:4	0:0	4	}
return	80:4	80:22	2	(size_t)(0)
call	80:11	80:21	3	(size_t)
arg	80:20	80:21	4	0
water	80:20	0:0	5	0

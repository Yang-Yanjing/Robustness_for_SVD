func	2:0	79:0	0	static segment_t *	GetSegment
params	2:28	0:0	1	
param	2:29	2:40	2	stream_t *	s
stmnts	0:0	78:18	1	
decl	4:4	4:34	2	stream_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	p_sys
decl	5:4	5:29	2	segment_t	*segment
op	5:23	0:0	2	=
water	5:25	0:0	2	NULL
decl	7:4	7:74	2	hls_stream_t	*hls
op	7:22	0:0	2	=
call	7:24	7:73	3	hls_Get
arg	7:32	7:49	4	p_sys->hls_stream
water	7:32	0:0	5	p_sys
op	7:37	0:0	5	->
water	7:39	0:0	5	hls_stream
arg	7:51	7:73	4	p_sys->playback.stream
water	7:51	0:0	5	p_sys
op	7:56	0:0	5	->
water	7:58	0:0	5	playback
op	7:66	0:0	5	.
water	7:67	0:0	5	stream
if	8:4	26:4	2	(hls != NULL)
cond	8:8	8:15	3	hls != NULL
water	8:8	0:0	4	hls
op	8:12	0:0	4	!=
water	8:15	0:0	4	NULL
stmts	9:4	26:4	3	
water	9:4	0:0	4	{
call	10:8	10:33	4	vlc_mutex_lock
arg	10:23	10:33	5	&hls->lock
op	10:23	0:0	6	&
water	10:24	0:0	6	hls
op	10:27	0:0	6	->
water	10:29	0:0	6	lock
water	10:34	0:0	4	;
water	11:8	0:0	4	segment
op	11:16	0:0	4	=
call	11:18	11:65	4	segment_GetSegment
arg	11:37	11:40	5	hls
water	11:37	0:0	6	hls
arg	11:42	11:65	5	p_sys->playback.segment
water	11:42	0:0	6	p_sys
op	11:47	0:0	6	->
water	11:49	0:0	6	playback
op	11:57	0:0	6	.
water	11:58	0:0	6	segment
water	11:66	0:0	4	;
if	12:8	24:8	4	(segment != NULL)
cond	12:12	12:23	5	segment != NULL
water	12:12	0:0	6	segment
op	12:20	0:0	6	!=
water	12:23	0:0	6	NULL
stmts	13:8	24:8	5	
water	13:8	0:0	6	{
call	14:12	14:41	6	vlc_mutex_lock
arg	14:27	14:41	7	&segment->lock
op	14:27	0:0	8	&
water	14:28	0:0	8	segment
op	14:35	0:0	8	->
water	14:37	0:0	8	lock
water	14:42	0:0	6	;
if	16:12	22:12	6	(segment -> data != NULL)
cond	16:16	16:33	7	segment -> data != NULL
water	16:16	0:0	8	segment
op	16:23	0:0	8	->
water	16:25	0:0	8	data
op	16:30	0:0	8	!=
water	16:33	0:0	8	NULL
stmts	17:12	22:12	7	
water	17:12	0:0	8	{
call	18:16	18:47	8	vlc_mutex_unlock
arg	18:33	18:47	9	&segment->lock
op	18:33	0:0	10	&
water	18:34	0:0	10	segment
op	18:41	0:0	10	->
water	18:43	0:0	10	lock
water	18:48	0:0	8	;
water	19:16	0:0	8	p_sys
op	19:21	0:0	8	->
water	19:23	0:0	8	b_cache
op	19:31	0:0	8	=
water	19:33	0:0	8	hls
op	19:36	0:0	8	->
water	19:38	0:0	8	b_cache
water	19:45	0:0	8	;
call	20:16	20:43	8	vlc_mutex_unlock
arg	20:33	20:43	9	&hls->lock
op	20:33	0:0	10	&
water	20:34	0:0	10	hls
op	20:37	0:0	10	->
water	20:39	0:0	10	lock
water	20:44	0:0	8	;
goto	21:16	21:26	8	check
water	21:21	0:0	9	check
water	22:12	0:0	8	}
call	23:12	23:43	6	vlc_mutex_unlock
arg	23:29	23:43	7	&segment->lock
op	23:29	0:0	8	&
water	23:30	0:0	8	segment
op	23:37	0:0	8	->
water	23:39	0:0	8	lock
water	23:44	0:0	6	;
water	24:8	0:0	6	}
call	25:8	25:35	4	vlc_mutex_unlock
arg	25:25	25:35	5	&hls->lock
op	25:25	0:0	6	&
water	25:26	0:0	6	hls
op	25:29	0:0	6	->
water	25:31	0:0	6	lock
water	25:36	0:0	4	;
water	26:4	0:0	4	}
water	28:4	0:0	2	segment
op	28:12	0:0	2	=
water	28:14	0:0	2	NULL
water	28:18	0:0	2	;
for	29:4	60:4	2	( int i_stream = 0 ;i_stream <vlc_array_count (p_sys -> hls_stream );i_stream ++)
forinit	0:0	29:25	3	 int i_stream = 0 ;
decl	29:9	29:25	4	int	i_stream
op	29:22	0:0	4	=
water	29:24	0:0	4	0
cond	29:27	29:71	3	i_stream <vlc_array_count (p_sys -> hls_stream )
water	29:27	0:0	4	i_stream
op	29:36	0:0	4	<
call	29:38	29:71	4	vlc_array_count
arg	29:54	29:71	5	p_sys->hls_stream
water	29:54	0:0	6	p_sys
op	29:59	0:0	6	->
water	29:61	0:0	6	hls_stream
forexpr	29:74	29:82	3	i_stream ++
water	29:74	0:0	4	i_stream
op	29:82	0:0	4	++
stmts	30:4	60:4	3	
water	30:4	0:0	4	{
decl	32:8	32:64	4	hls_stream_t	*hls
op	32:26	0:0	4	=
call	32:28	32:63	5	hls_Get
arg	32:36	32:53	6	p_sys->hls_stream
water	32:36	0:0	7	p_sys
op	32:41	0:0	7	->
water	32:43	0:0	7	hls_stream
arg	32:55	32:63	6	i_stream
water	32:55	0:0	7	i_stream
if	33:8	34:23	4	(hls == NULL)
cond	33:12	33:19	5	hls == NULL
water	33:12	0:0	6	hls
op	33:16	0:0	6	==
water	33:19	0:0	6	NULL
stmts	34:12	34:23	5	
return	34:12	34:23	6	NULL
water	34:19	0:0	7	NULL
call	35:8	35:33	4	vlc_mutex_lock
arg	35:23	35:33	5	&hls->lock
op	35:23	0:0	6	&
water	35:24	0:0	6	hls
op	35:27	0:0	6	->
water	35:29	0:0	6	lock
water	35:34	0:0	4	;
water	36:8	0:0	4	segment
op	36:16	0:0	4	=
call	36:18	36:65	4	segment_GetSegment
arg	36:37	36:40	5	hls
water	36:37	0:0	6	hls
arg	36:42	36:65	5	p_sys->playback.segment
water	36:42	0:0	6	p_sys
op	36:47	0:0	6	->
water	36:49	0:0	6	playback
op	36:57	0:0	6	.
water	36:58	0:0	6	segment
water	36:66	0:0	4	;
if	37:8	41:8	4	(segment == NULL)
cond	37:12	37:23	5	segment == NULL
water	37:12	0:0	6	segment
op	37:20	0:0	6	==
water	37:23	0:0	6	NULL
stmts	38:8	41:8	5	
water	38:8	0:0	6	{
call	39:12	39:39	6	vlc_mutex_unlock
arg	39:29	39:39	7	&hls->lock
op	39:29	0:0	8	&
water	39:30	0:0	8	hls
op	39:33	0:0	8	->
water	39:35	0:0	8	lock
water	39:40	0:0	6	;
break	40:12	40:17	6	
water	41:8	0:0	6	}
call	42:8	42:49	4	vlc_mutex_lock
arg	42:23	42:49	5	&p_sys->download.lock_wait
op	42:23	0:0	6	&
water	42:24	0:0	6	p_sys
op	42:29	0:0	6	->
water	42:31	0:0	6	download
op	42:39	0:0	6	.
water	42:40	0:0	6	lock_wait
water	42:50	0:0	4	;
decl	43:8	43:47	4	int	i_segment
op	43:22	0:0	4	=
water	43:24	0:0	4	p_sys
op	43:29	0:0	4	->
water	43:31	0:0	4	download
op	43:39	0:0	4	.
water	43:40	0:0	4	segment
call	44:8	44:51	4	vlc_mutex_unlock
arg	44:25	44:51	5	&p_sys->download.lock_wait
op	44:25	0:0	6	&
water	44:26	0:0	6	p_sys
op	44:31	0:0	6	->
water	44:33	0:0	6	download
op	44:41	0:0	6	.
water	44:42	0:0	6	lock_wait
water	44:52	0:0	4	;
call	45:8	45:37	4	vlc_mutex_lock
arg	45:23	45:37	5	&segment->lock
op	45:23	0:0	6	&
water	45:24	0:0	6	segment
op	45:31	0:0	6	->
water	45:33	0:0	6	lock
water	45:38	0:0	4	;
if	47:8	55:8	4	(( segment -> data != NULL ) && ( p_sys -> playback . segment < i_segment ))
cond	47:12	48:48	5	( segment -> data != NULL ) && ( p_sys -> playback . segment < i_segment )
water	47:12	0:0	6	(
water	47:13	0:0	6	segment
op	47:20	0:0	6	->
water	47:22	0:0	6	data
op	47:27	0:0	6	!=
water	47:30	0:0	6	NULL
water	47:34	0:0	6	)
op	47:36	0:0	6	&&
water	48:12	0:0	6	(
water	48:13	0:0	6	p_sys
op	48:18	0:0	6	->
water	48:20	0:0	6	playback
op	48:28	0:0	6	.
water	48:29	0:0	6	segment
op	48:37	0:0	6	<
water	48:39	0:0	6	i_segment
water	48:48	0:0	6	)
stmts	49:8	55:8	5	
water	49:8	0:0	6	{
water	50:12	0:0	6	p_sys
op	50:17	0:0	6	->
water	50:19	0:0	6	playback
op	50:27	0:0	6	.
water	50:28	0:0	6	stream
op	50:35	0:0	6	=
water	50:37	0:0	6	i_stream
water	50:45	0:0	6	;
water	51:12	0:0	6	p_sys
op	51:17	0:0	6	->
water	51:19	0:0	6	b_cache
op	51:27	0:0	6	=
water	51:29	0:0	6	hls
op	51:32	0:0	6	->
water	51:34	0:0	6	b_cache
water	51:41	0:0	6	;
call	52:12	52:43	6	vlc_mutex_unlock
arg	52:29	52:43	7	&segment->lock
op	52:29	0:0	8	&
water	52:30	0:0	8	segment
op	52:37	0:0	8	->
water	52:39	0:0	8	lock
water	52:44	0:0	6	;
call	53:12	53:39	6	vlc_mutex_unlock
arg	53:29	53:39	7	&hls->lock
op	53:29	0:0	8	&
water	53:30	0:0	8	hls
op	53:33	0:0	8	->
water	53:35	0:0	8	lock
water	53:40	0:0	6	;
goto	54:12	54:22	6	check
water	54:17	0:0	7	check
water	55:8	0:0	6	}
call	56:8	56:39	4	vlc_mutex_unlock
arg	56:25	56:39	5	&segment->lock
op	56:25	0:0	6	&
water	56:26	0:0	6	segment
op	56:33	0:0	6	->
water	56:35	0:0	6	lock
water	56:40	0:0	4	;
call	57:8	57:35	4	vlc_mutex_unlock
arg	57:25	57:35	5	&hls->lock
op	57:25	0:0	6	&
water	57:26	0:0	6	hls
op	57:29	0:0	6	->
water	57:31	0:0	6	lock
water	57:36	0:0	4	;
if	58:8	59:17	4	(! p_sys -> b_meta)
cond	58:12	58:20	5	! p_sys -> b_meta
op	58:12	0:0	6	!
water	58:13	0:0	6	p_sys
op	58:18	0:0	6	->
water	58:20	0:0	6	b_meta
stmts	59:12	59:17	5	
break	59:12	59:17	6	
water	60:4	0:0	4	}
return	62:4	62:15	2	NULL
water	62:11	0:0	3	NULL
label	63:0	63:5	2	check :
call	65:4	65:24	2	assert
arg	65:11	65:24	3	segment->data
water	65:11	0:0	4	segment
op	65:18	0:0	4	->
water	65:20	0:0	4	data
water	65:25	0:0	2	;
if	66:4	77:4	2	(segment -> data -> i_buffer == 0)
cond	66:8	66:35	3	segment -> data -> i_buffer == 0
water	66:8	0:0	4	segment
op	66:15	0:0	4	->
water	66:17	0:0	4	data
op	66:21	0:0	4	->
water	66:23	0:0	4	i_buffer
op	66:32	0:0	4	==
water	66:35	0:0	4	0
stmts	67:4	77:4	3	
water	67:4	0:0	4	{
call	68:8	68:33	4	vlc_mutex_lock
arg	68:23	68:33	5	&hls->lock
op	68:23	0:0	6	&
water	68:24	0:0	6	hls
op	68:27	0:0	6	->
water	68:29	0:0	6	lock
water	68:34	0:0	4	;
decl	69:8	69:50	4	int	count
op	69:18	0:0	4	=
call	69:20	69:49	5	vlc_array_count
arg	69:36	69:49	6	hls->segments
water	69:36	0:0	7	hls
op	69:39	0:0	7	->
water	69:41	0:0	7	segments
call	70:8	70:35	4	vlc_mutex_unlock
arg	70:25	70:35	5	&hls->lock
op	70:25	0:0	6	&
water	70:26	0:0	6	hls
op	70:29	0:0	6	->
water	70:31	0:0	6	lock
water	70:36	0:0	4	;
if	71:8	73:45	4	(( p_sys -> download . segment - p_sys -> playback . segment == 0 ) && ( ( count != p_sys -> download . segment ) || p_sys -> b_live ))
cond	71:12	72:64	5	( p_sys -> download . segment - p_sys -> playback . segment == 0 ) && ( ( count != p_sys -> download . segment ) || p_sys -> b_live )
water	71:12	0:0	6	(
water	71:13	0:0	6	p_sys
op	71:18	0:0	6	->
water	71:20	0:0	6	download
op	71:28	0:0	6	.
water	71:29	0:0	6	segment
op	71:37	0:0	6	-
water	71:39	0:0	6	p_sys
op	71:44	0:0	6	->
water	71:46	0:0	6	playback
op	71:54	0:0	6	.
water	71:55	0:0	6	segment
op	71:63	0:0	6	==
water	71:66	0:0	6	0
water	71:67	0:0	6	)
op	71:69	0:0	6	&&
water	72:12	0:0	6	(
water	72:13	0:0	6	(
water	72:14	0:0	6	count
op	72:20	0:0	6	!=
water	72:23	0:0	6	p_sys
op	72:28	0:0	6	->
water	72:30	0:0	6	download
op	72:38	0:0	6	.
water	72:39	0:0	6	segment
water	72:46	0:0	6	)
op	72:48	0:0	6	||
water	72:51	0:0	6	p_sys
op	72:56	0:0	6	->
water	72:58	0:0	6	b_live
water	72:64	0:0	6	)
stmts	73:12	73:45	5	
call	73:12	73:44	6	msg_Err
arg	73:20	73:21	7	s
water	73:20	0:0	8	s
arg	73:23	73:44	7	"playback will stall"
water	73:23	0:0	8	"playback will stall"
water	73:45	0:0	6	;
else	74:8	76:57	4
stmts	74:13	76:57	5	
if	74:13	76:57	6	(( p_sys -> download . segment - p_sys -> playback . segment < 3 ) && ( ( count != p_sys -> download . segment ) || p_sys -> b_live ))
cond	74:17	75:69	7	( p_sys -> download . segment - p_sys -> playback . segment < 3 ) && ( ( count != p_sys -> download . segment ) || p_sys -> b_live )
water	74:17	0:0	8	(
water	74:18	0:0	8	p_sys
op	74:23	0:0	8	->
water	74:25	0:0	8	download
op	74:33	0:0	8	.
water	74:34	0:0	8	segment
op	74:42	0:0	8	-
water	74:44	0:0	8	p_sys
op	74:49	0:0	8	->
water	74:51	0:0	8	playback
op	74:59	0:0	8	.
water	74:60	0:0	8	segment
op	74:68	0:0	8	<
water	74:70	0:0	8	3
water	74:71	0:0	8	)
op	74:73	0:0	8	&&
water	75:17	0:0	8	(
water	75:18	0:0	8	(
water	75:19	0:0	8	count
op	75:25	0:0	8	!=
water	75:28	0:0	8	p_sys
op	75:33	0:0	8	->
water	75:35	0:0	8	download
op	75:43	0:0	8	.
water	75:44	0:0	8	segment
water	75:51	0:0	8	)
op	75:53	0:0	8	||
water	75:56	0:0	8	p_sys
op	75:61	0:0	8	->
water	75:63	0:0	8	b_live
water	75:69	0:0	8	)
stmts	76:12	76:57	7	
call	76:12	76:56	8	msg_Warn
arg	76:21	76:22	9	s
water	76:21	0:0	10	s
arg	76:24	76:56	9	"playback in danger of stalling"
water	76:24	0:0	10	"playback in danger of stalling"
water	76:57	0:0	8	;
water	77:4	0:0	4	}
return	78:4	78:18	2	segment
water	78:11	0:0	3	segment

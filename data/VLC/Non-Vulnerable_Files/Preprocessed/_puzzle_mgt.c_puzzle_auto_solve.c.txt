func	2:0	29:0	0	void	puzzle_auto_solve
params	2:22	0:0	1	
param	2:24	2:42	2	filter_t *	p_filter
stmnts	0:0	28:4	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
if	5:4	6:14	2	(p_sys -> s_current_param . i_auto_solve_speed < 500)
cond	5:9	5:53	3	p_sys -> s_current_param . i_auto_solve_speed < 500
water	5:9	0:0	4	p_sys
op	5:14	0:0	4	->
water	5:16	0:0	4	s_current_param
op	5:31	0:0	4	.
water	5:32	0:0	4	i_auto_solve_speed
op	5:51	0:0	4	<
water	5:53	0:0	4	500
stmts	6:8	6:14	3	
return	6:8	6:14	4	
if	7:4	8:14	2	(-- p_sys -> i_auto_solve_countdown_val > 0)
cond	7:9	7:47	3	-- p_sys -> i_auto_solve_countdown_val > 0
op	7:9	0:0	4	--
water	7:11	0:0	4	p_sys
op	7:16	0:0	4	->
water	7:18	0:0	4	i_auto_solve_countdown_val
op	7:45	0:0	4	>
water	7:47	0:0	4	0
stmts	8:8	8:14	3	
return	8:8	8:14	4	
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	i_auto_solve_countdown_val
op	10:38	0:0	2	=
call	10:40	10:96	2	init_countdown
arg	10:55	10:96	3	p_sys->s_current_param.i_auto_solve_speed
water	10:55	0:0	4	p_sys
op	10:60	0:0	4	->
water	10:62	0:0	4	s_current_param
op	10:77	0:0	4	.
water	10:78	0:0	4	i_auto_solve_speed
water	10:97	0:0	2	;
decl	12:4	12:81	2	int32_t	i_start
op	12:20	0:0	2	=
water	12:22	0:0	2	(
water	12:23	0:0	2	(
water	12:24	0:0	2	unsigned
water	12:32	0:0	2	)
call	12:33	12:45	3	vlc_mrand48
water	12:46	0:0	2	)
op	12:48	0:0	2	%
water	12:50	0:0	2	p_sys
op	12:55	0:0	2	->
water	12:57	0:0	2	s_allocated
op	12:68	0:0	2	.
water	12:69	0:0	2	i_pieces_nbr
for	14:4	28:4	2	( uint32_t i_l = 0 ;i_l < p_sys -> s_allocated . i_pieces_nbr;i_l ++)
forinit	0:0	14:25	3	 uint32_t i_l = 0 ;
decl	14:9	14:25	4	uint32_t	i_l
op	14:22	0:0	4	=
water	14:24	0:0	4	0
cond	14:27	14:52	3	i_l < p_sys -> s_allocated . i_pieces_nbr
water	14:27	0:0	4	i_l
op	14:31	0:0	4	<
water	14:33	0:0	4	p_sys
op	14:38	0:0	4	->
water	14:40	0:0	4	s_allocated
op	14:51	0:0	4	.
water	14:52	0:0	4	i_pieces_nbr
forexpr	14:66	14:69	3	i_l ++
water	14:66	0:0	4	i_l
op	14:69	0:0	4	++
stmts	14:73	28:4	3	
water	14:73	0:0	4	{
decl	15:8	15:71	4	int32_t	i
op	15:18	0:0	4	=
water	15:20	0:0	4	(
water	15:22	0:0	4	i_l
op	15:26	0:0	4	+
water	15:28	0:0	4	i_start
water	15:36	0:0	4	)
op	15:38	0:0	4	%
water	15:40	0:0	4	p_sys
op	15:45	0:0	4	->
water	15:47	0:0	4	s_allocated
op	15:58	0:0	4	.
water	15:59	0:0	4	i_pieces_nbr
if	16:8	27:8	4	(! p_sys -> ps_pieces [ i ] . b_finished)
cond	16:13	16:34	5	! p_sys -> ps_pieces [ i ] . b_finished
op	16:13	0:0	6	!
water	16:14	0:0	6	p_sys
op	16:19	0:0	6	->
water	16:21	0:0	6	ps_pieces
op	16:30	0:0	6	[
water	16:31	0:0	6	i
op	16:32	0:0	6	]
op	16:33	0:0	6	.
water	16:34	0:0	6	b_finished
stmts	16:47	27:8	5	
water	16:47	0:0	6	{
for	17:12	25:12	6	( uint32_t j = 0 ;j < p_sys -> s_allocated . i_pieces_nbr;j ++)
forinit	0:0	17:31	7	 uint32_t j = 0 ;
decl	17:17	17:31	8	uint32_t	j
op	17:28	0:0	8	=
water	17:30	0:0	8	0
cond	17:33	17:56	7	j < p_sys -> s_allocated . i_pieces_nbr
water	17:33	0:0	8	j
op	17:35	0:0	8	<
water	17:37	0:0	8	p_sys
op	17:42	0:0	8	->
water	17:44	0:0	8	s_allocated
op	17:55	0:0	8	.
water	17:56	0:0	8	i_pieces_nbr
forexpr	17:70	17:71	7	j ++
water	17:70	0:0	8	j
op	17:71	0:0	8	++
stmts	17:75	25:12	7	
water	17:75	0:0	8	{
if	18:16	24:16	8	(p_sys -> ps_pieces [ j ] . i_group_ID == p_sys -> ps_pieces [ i ] . i_group_ID)
cond	18:21	18:75	9	p_sys -> ps_pieces [ j ] . i_group_ID == p_sys -> ps_pieces [ i ] . i_group_ID
water	18:21	0:0	10	p_sys
op	18:26	0:0	10	->
water	18:28	0:0	10	ps_pieces
op	18:37	0:0	10	[
water	18:38	0:0	10	j
op	18:39	0:0	10	]
op	18:40	0:0	10	.
water	18:41	0:0	10	i_group_ID
op	18:52	0:0	10	==
water	18:55	0:0	10	p_sys
op	18:60	0:0	10	->
water	18:62	0:0	10	ps_pieces
op	18:71	0:0	10	[
water	18:72	0:0	10	i
op	18:73	0:0	10	]
op	18:74	0:0	10	.
water	18:75	0:0	10	i_group_ID
stmts	18:88	24:16	9	
water	18:88	0:0	10	{
water	19:20	0:0	10	p_sys
op	19:25	0:0	10	->
water	19:27	0:0	10	ps_pieces
op	19:36	0:0	10	[
water	19:37	0:0	10	j
op	19:38	0:0	10	]
op	19:39	0:0	10	.
water	19:40	0:0	10	i_actual_angle
op	19:57	0:0	10	=
water	19:59	0:0	10	0
water	19:60	0:0	10	;
water	20:20	0:0	10	p_sys
op	20:25	0:0	10	->
water	20:27	0:0	10	ps_pieces
op	20:36	0:0	10	[
water	20:37	0:0	10	j
op	20:38	0:0	10	]
op	20:39	0:0	10	.
water	20:40	0:0	10	i_actual_mirror
op	20:57	0:0	10	=
op	20:59	0:0	10	+
water	20:60	0:0	10	1
water	20:61	0:0	10	;
water	21:20	0:0	10	p_sys
op	21:25	0:0	10	->
water	21:27	0:0	10	ps_pieces
op	21:36	0:0	10	[
water	21:37	0:0	10	j
op	21:38	0:0	10	]
op	21:39	0:0	10	.
water	21:40	0:0	10	ps_piece_in_plane
op	21:57	0:0	10	[
water	21:58	0:0	10	0
op	21:59	0:0	10	]
op	21:60	0:0	10	.
water	21:61	0:0	10	i_actual_x
op	21:72	0:0	10	=
water	21:74	0:0	10	p_sys
op	21:79	0:0	10	->
water	21:81	0:0	10	ps_pieces
op	21:90	0:0	10	[
water	21:91	0:0	10	j
op	21:92	0:0	10	]
op	21:93	0:0	10	.
water	21:94	0:0	10	ps_piece_in_plane
op	21:111	0:0	10	[
water	21:112	0:0	10	0
op	21:113	0:0	10	]
op	21:114	0:0	10	.
water	21:115	0:0	10	i_original_x
water	21:127	0:0	10	;
water	22:20	0:0	10	p_sys
op	22:25	0:0	10	->
water	22:27	0:0	10	ps_pieces
op	22:36	0:0	10	[
water	22:37	0:0	10	j
op	22:38	0:0	10	]
op	22:39	0:0	10	.
water	22:40	0:0	10	ps_piece_in_plane
op	22:57	0:0	10	[
water	22:58	0:0	10	0
op	22:59	0:0	10	]
op	22:60	0:0	10	.
water	22:61	0:0	10	i_actual_y
op	22:72	0:0	10	=
water	22:74	0:0	10	p_sys
op	22:79	0:0	10	->
water	22:81	0:0	10	ps_pieces
op	22:90	0:0	10	[
water	22:91	0:0	10	j
op	22:92	0:0	10	]
op	22:93	0:0	10	.
water	22:94	0:0	10	ps_piece_in_plane
op	22:111	0:0	10	[
water	22:112	0:0	10	0
op	22:113	0:0	10	]
op	22:114	0:0	10	.
water	22:115	0:0	10	i_original_y
water	22:127	0:0	10	;
call	23:20	23:58	10	puzzle_calculate_corners
arg	23:46	23:54	11	p_filter
water	23:46	0:0	12	p_filter
arg	23:56	23:58	11	j
water	23:56	0:0	12	j
water	23:59	0:0	10	;
water	24:16	0:0	10	}
water	25:12	0:0	8	}
break	26:12	26:17	6	
water	27:8	0:0	6	}
water	28:4	0:0	4	}

func	2:0	111:0	0	static int	ItemChange
params	2:21	0:0	1	
param	2:23	2:43	2	vlc_object_t *	p_this
param	2:45	2:64	2	const char *	psz_var
param	3:23	3:41	2	vlc_value_t	oldval
param	3:43	3:61	2	vlc_value_t	newval
param	3:63	3:75	2	void *	param
stmnts	5:4	110:22	1	
call	5:4	5:22	2	VLC_UNUSED
arg	5:15	5:22	3	psz_var
water	5:15	0:0	4	psz_var
water	5:23	0:0	2	;
call	5:25	5:42	2	VLC_UNUSED
arg	5:36	5:42	3	oldval
water	5:36	0:0	4	oldval
water	5:43	0:0	2	;
call	5:45	5:62	2	VLC_UNUSED
arg	5:56	5:62	3	newval
water	5:56	0:0	4	newval
water	5:63	0:0	2	;
decl	6:4	6:38	2	char	psz_tmp[MAX_LENGTH]
decl	7:4	7:41	2	char	psz_notify[MAX_LENGTH]
decl	8:4	8:29	2	char	*psz_title
decl	9:4	9:30	2	char	*psz_artist
decl	10:4	10:29	2	char	*psz_album
decl	11:4	11:30	2	char	*psz_arturl
decl	12:4	12:74	2	input_thread_t	*p_input
op	12:28	0:0	2	=
call	12:30	12:73	3	playlist_CurrentInput
arg	12:53	12:73	4	(playlist_t*)p_this
water	12:53	0:0	5	(
water	12:54	0:0	5	playlist_t
op	12:64	0:0	5	*
water	12:65	0:0	5	)
water	12:66	0:0	5	p_this
decl	13:4	13:35	2	intf_thread_t	*p_intf
op	13:28	0:0	2	=
water	13:30	0:0	2	param
decl	14:4	14:43	2	intf_sys_t	*p_sys
op	14:28	0:0	2	=
water	14:30	0:0	2	p_intf
op	14:36	0:0	2	->
water	14:38	0:0	2	p_sys
if	15:4	16:26	2	(! p_input)
cond	15:8	15:9	3	! p_input
op	15:8	0:0	4	!
water	15:9	0:0	4	p_input
stmts	16:8	16:26	3	
return	16:8	16:26	4	VLC_SUCCESS
water	16:15	0:0	5	VLC_SUCCESS
if	17:4	22:4	2	(p_input -> b_dead)
cond	17:8	17:17	3	p_input -> b_dead
water	17:8	0:0	4	p_input
op	17:15	0:0	4	->
water	17:17	0:0	4	b_dead
stmts	18:4	22:4	3	
water	18:4	0:0	4	{
call	20:8	20:36	4	vlc_object_release
arg	20:28	20:36	5	p_input
water	20:28	0:0	6	p_input
water	20:37	0:0	4	;
return	21:8	21:26	4	VLC_SUCCESS
water	21:15	0:0	5	VLC_SUCCESS
water	22:4	0:0	4	}
call	25:4	25:18	2	msleep
arg	25:12	25:18	3	10000
water	25:12	0:0	4	10000
water	25:19	0:0	2	;
decl	27:4	27:57	2	input_item_t	*p_input_item
op	27:31	0:0	2	=
call	27:33	27:56	3	input_GetItem
arg	27:48	27:56	4	p_input
water	27:48	0:0	5	p_input
water	28:4	0:0	2	psz_title
op	28:14	0:0	2	=
call	28:16	28:56	2	input_item_GetTitleFbName
arg	28:43	28:56	3	p_input_item
water	28:43	0:0	4	p_input_item
water	28:57	0:0	2	;
if	30:4	35:4	2	(EMPTY_STR (psz_title ))
cond	30:8	30:29	3	EMPTY_STR (psz_title )
call	30:8	30:29	4	EMPTY_STR
arg	30:19	30:29	5	psz_title
water	30:19	0:0	6	psz_title
stmts	31:4	35:4	3	
water	31:4	0:0	4	{
call	32:8	32:24	4	free
arg	32:14	32:24	5	psz_title
water	32:14	0:0	6	psz_title
water	32:25	0:0	4	;
call	33:8	33:36	4	vlc_object_release
arg	33:28	33:36	5	p_input
water	33:28	0:0	6	p_input
water	33:37	0:0	4	;
return	34:8	34:26	4	VLC_SUCCESS
water	34:15	0:0	5	VLC_SUCCESS
water	35:4	0:0	4	}
water	36:4	0:0	2	psz_artist
op	36:15	0:0	2	=
call	36:17	36:52	2	input_item_GetArtist
arg	36:39	36:52	3	p_input_item
water	36:39	0:0	4	p_input_item
water	36:53	0:0	2	;
water	37:4	0:0	2	psz_album
op	37:14	0:0	2	=
call	37:16	37:50	2	input_item_GetAlbum
arg	37:37	37:50	3	p_input_item
water	37:37	0:0	4	p_input_item
water	37:51	0:0	2	;
if	38:4	46:4	2	(!EMPTY_STR (psz_artist ))
cond	38:8	38:31	3	!EMPTY_STR (psz_artist )
op	38:8	0:0	4	!
call	38:9	38:31	4	EMPTY_STR
arg	38:20	38:31	5	psz_artist
water	38:20	0:0	6	psz_artist
stmts	39:4	46:4	3	
water	39:4	0:0	4	{
if	40:8	42:56	4	(!EMPTY_STR (psz_album ))
cond	40:12	40:34	5	!EMPTY_STR (psz_album )
op	40:12	0:0	6	!
call	40:13	40:34	6	EMPTY_STR
arg	40:24	40:34	7	psz_album
water	40:24	0:0	8	psz_album
stmts	41:12	42:56	5	
call	41:12	42:55	6	snprintf
arg	41:22	41:29	7	psz_tmp
water	41:22	0:0	8	psz_tmp
arg	41:31	41:41	7	MAX_LENGTH
water	41:31	0:0	8	MAX_LENGTH
arg	41:43	41:64	7	"<b>%s</b>\n%s\n[%s]"
water	41:43	0:0	8	"<b>%s</b>\n%s\n[%s]"
arg	42:22	42:31	7	psz_title
water	42:22	0:0	8	psz_title
arg	42:33	42:43	7	psz_artist
water	42:33	0:0	8	psz_artist
arg	42:45	42:55	7	psz_album
water	42:45	0:0	8	psz_album
water	42:56	0:0	6	;
else	43:8	45:45	4
stmts	44:12	45:45	5	
call	44:12	45:44	6	snprintf
arg	44:22	44:29	7	psz_tmp
water	44:22	0:0	8	psz_tmp
arg	44:31	44:41	7	MAX_LENGTH
water	44:31	0:0	8	MAX_LENGTH
arg	44:43	44:58	7	"<b>%s</b>\n%s"
water	44:43	0:0	8	"<b>%s</b>\n%s"
arg	45:22	45:31	7	psz_title
water	45:22	0:0	8	psz_title
arg	45:33	45:44	7	psz_artist
water	45:33	0:0	8	psz_artist
water	45:45	0:0	6	;
water	46:4	0:0	4	}
else	47:4	48:63	2
stmts	48:8	48:63	3	
call	48:8	48:62	4	snprintf
arg	48:18	48:25	5	psz_tmp
water	48:18	0:0	6	psz_tmp
arg	48:27	48:37	5	MAX_LENGTH
water	48:27	0:0	6	MAX_LENGTH
arg	48:39	48:50	5	"<b>%s</b>"
water	48:39	0:0	6	"<b>%s</b>"
arg	48:52	48:62	5	psz_title
water	48:52	0:0	6	psz_title
water	48:63	0:0	4	;
call	49:4	49:20	2	free
arg	49:10	49:20	3	psz_title
water	49:10	0:0	4	psz_title
water	49:21	0:0	2	;
call	50:4	50:21	2	free
arg	50:10	50:21	3	psz_artist
water	50:10	0:0	4	psz_artist
water	50:22	0:0	2	;
call	51:4	51:20	2	free
arg	51:10	51:20	3	psz_album
water	51:10	0:0	4	psz_album
water	51:21	0:0	2	;
decl	52:4	52:25	2	GdkPixbuf	*pix
op	52:19	0:0	2	=
water	52:21	0:0	2	NULL
water	53:4	0:0	2	psz_arturl
op	53:15	0:0	2	=
call	53:17	53:52	2	input_item_GetArtURL
arg	53:39	53:52	3	p_input_item
water	53:39	0:0	4	p_input_item
water	53:53	0:0	2	;
call	54:4	54:32	2	vlc_object_release
arg	54:24	54:32	3	p_input
water	54:24	0:0	4	p_input
water	54:33	0:0	2	;
if	55:4	60:4	2	(psz_arturl)
cond	55:8	55:8	3	psz_arturl
water	55:8	0:0	4	psz_arturl
stmts	56:4	60:4	3	
water	56:4	0:0	4	{
decl	57:8	57:43	4	char	*psz
op	57:18	0:0	4	=
call	57:20	57:42	5	make_path
arg	57:31	57:42	6	psz_arturl
water	57:31	0:0	7	psz_arturl
call	58:8	58:25	4	free
arg	58:14	58:25	5	psz_arturl
water	58:14	0:0	6	psz_arturl
water	58:26	0:0	4	;
water	59:8	0:0	4	psz_arturl
op	59:19	0:0	4	=
water	59:21	0:0	4	psz
water	59:24	0:0	4	;
water	60:4	0:0	4	}
if	61:4	66:4	2	(psz_arturl)
cond	61:8	61:8	3	psz_arturl
water	61:8	0:0	4	psz_arturl
stmts	62:4	66:4	3	
water	62:4	0:0	4	{
decl	63:8	63:30	4	GError	*p_error
op	63:24	0:0	4	=
water	63:26	0:0	4	NULL
water	64:8	0:0	4	pix
op	64:12	0:0	4	=
call	64:14	65:72	4	gdk_pixbuf_new_from_file_at_scale
arg	64:49	64:59	5	psz_arturl
water	64:49	0:0	6	psz_arturl
arg	65:49	65:51	5	72
water	65:49	0:0	6	72
arg	65:53	65:55	5	72
water	65:53	0:0	6	72
arg	65:57	65:61	5	TRUE
water	65:57	0:0	6	TRUE
arg	65:63	65:72	5	&p_error
op	65:63	0:0	6	&
water	65:64	0:0	6	p_error
water	65:73	0:0	4	;
water	66:4	0:0	4	}
else	67:4	85:4	2
stmts	68:4	85:4	3	
water	68:4	0:0	4	{
decl	70:8	70:60	4	GtkIconTheme	*p_theme
op	70:30	0:0	4	=
call	70:32	70:59	5	gtk_icon_theme_get_default
water	71:8	0:0	4	pix
op	71:12	0:0	4	=
call	71:14	71:67	4	gtk_icon_theme_load_icon
arg	71:40	71:47	5	p_theme
water	71:40	0:0	6	p_theme
arg	71:49	71:54	5	"vlc"
water	71:49	0:0	6	"vlc"
arg	71:56	71:58	5	72
water	71:56	0:0	6	72
arg	71:60	71:61	5	0
water	71:60	0:0	6	0
arg	71:63	71:67	5	NULL
water	71:63	0:0	6	NULL
water	71:68	0:0	4	;
if	72:8	84:8	4	(! pix)
cond	72:12	72:13	5	! pix
op	72:12	0:0	6	!
water	72:13	0:0	6	pix
stmts	73:8	84:8	5	
water	73:8	0:0	6	{
decl	75:12	75:34	6	GError	*p_error
op	75:28	0:0	6	=
water	75:30	0:0	6	NULL
decl	76:12	76:28	6	char	*psz_pixbuf
decl	77:12	77:48	6	char	*psz_data
op	77:27	0:0	6	=
call	77:29	77:47	7	config_GetDataDir
if	78:12	82:12	6	(asprintf (& psz_pixbuf ,"%s/icons/48x48/vlc.png" ,psz_data ) >= 0)
cond	78:16	78:79	7	asprintf (& psz_pixbuf ,"%s/icons/48x48/vlc.png" ,psz_data ) >= 0
call	78:16	78:74	8	asprintf
arg	78:26	78:37	9	&psz_pixbuf
op	78:26	0:0	10	&
water	78:27	0:0	10	psz_pixbuf
arg	78:39	78:63	9	"%s/icons/48x48/vlc.png"
water	78:39	0:0	10	"%s/icons/48x48/vlc.png"
arg	78:65	78:74	9	psz_data
water	78:65	0:0	10	psz_data
op	78:76	0:0	8	>=
water	78:79	0:0	8	0
stmts	79:12	82:12	7	
water	79:12	0:0	8	{
water	80:16	0:0	8	pix
op	80:20	0:0	8	=
call	80:22	80:69	8	gdk_pixbuf_new_from_file
arg	80:48	80:58	9	psz_pixbuf
water	80:48	0:0	10	psz_pixbuf
arg	80:60	80:69	9	&p_error
op	80:60	0:0	10	&
water	80:61	0:0	10	p_error
water	80:70	0:0	8	;
call	81:16	81:33	8	free
arg	81:22	81:33	9	psz_pixbuf
water	81:22	0:0	10	psz_pixbuf
water	81:34	0:0	8	;
water	82:12	0:0	8	}
call	83:12	83:27	6	free
arg	83:18	83:27	7	psz_data
water	83:18	0:0	8	psz_data
water	83:28	0:0	6	;
water	84:8	0:0	6	}
water	85:4	0:0	4	}
call	86:4	86:21	2	free
arg	86:10	86:21	3	psz_arturl
water	86:10	0:0	4	psz_arturl
water	86:22	0:0	2	;
decl	89:4	89:39	2	const int	i_len
op	89:20	0:0	2	=
call	89:22	89:38	3	strlen
arg	89:30	89:38	4	psz_tmp
water	89:30	0:0	5	psz_tmp
decl	90:4	90:20	2	int	i_notify
op	90:17	0:0	2	=
water	90:19	0:0	2	0
for	91:4	105:4	2	( int i = 0 ;i < i_len && i_notify < ( MAX_LENGTH - 5 );i ++)
forinit	0:0	91:18	3	 int i = 0 ;
decl	91:9	91:18	4	int	i
op	91:15	0:0	4	=
water	91:17	0:0	4	0
cond	91:20	91:61	3	i < i_len && i_notify < ( MAX_LENGTH - 5 )
water	91:20	0:0	4	i
op	91:22	0:0	4	<
water	91:24	0:0	4	i_len
op	91:30	0:0	4	&&
water	91:33	0:0	4	i_notify
op	91:42	0:0	4	<
water	91:44	0:0	4	(
water	91:46	0:0	4	MAX_LENGTH
op	91:57	0:0	4	-
water	91:59	0:0	4	5
water	91:61	0:0	4	)
forexpr	91:64	91:65	3	i ++
water	91:64	0:0	4	i
op	91:65	0:0	4	++
stmts	92:4	105:4	3	
water	92:4	0:0	4	{
if	95:8	98:8	4	(psz_tmp [ i ] != '&')
cond	95:12	95:26	5	psz_tmp [ i ] != '&'
water	95:12	0:0	6	psz_tmp
op	95:19	0:0	6	[
water	95:20	0:0	6	i
op	95:21	0:0	6	]
op	95:23	0:0	6	!=
water	95:26	0:0	6	'&'
stmts	96:8	98:8	5	
water	96:8	0:0	6	{
water	97:12	0:0	6	psz_notify
op	97:22	0:0	6	[
water	97:23	0:0	6	i_notify
op	97:31	0:0	6	]
op	97:33	0:0	6	=
water	97:35	0:0	6	psz_tmp
op	97:42	0:0	6	[
water	97:43	0:0	6	i
op	97:44	0:0	6	]
water	97:45	0:0	6	;
water	98:8	0:0	6	}
else	99:8	103:8	4
stmts	100:8	103:8	5	
water	100:8	0:0	6	{
call	101:12	101:51	6	strcpy
arg	101:20	101:41	7	&psz_notify[i_notify]
op	101:20	0:0	8	&
water	101:21	0:0	8	psz_notify
op	101:31	0:0	8	[
water	101:32	0:0	8	i_notify
op	101:40	0:0	8	]
arg	101:43	101:51	7	"&amp;"
water	101:43	0:0	8	"&amp;"
water	101:52	0:0	6	;
water	102:12	0:0	6	i_notify
op	102:21	0:0	6	+=
water	102:24	0:0	6	4
water	102:25	0:0	6	;
water	103:8	0:0	6	}
water	104:8	0:0	4	i_notify
op	104:16	0:0	4	++
water	104:18	0:0	4	;
water	105:4	0:0	4	}
water	106:4	0:0	2	psz_notify
op	106:14	0:0	2	[
water	106:15	0:0	2	i_notify
op	106:23	0:0	2	]
op	106:25	0:0	2	=
water	106:27	0:0	2	'\0'
water	106:31	0:0	2	;
call	107:4	107:33	2	vlc_mutex_lock
arg	107:20	107:33	3	&p_sys->lock
op	107:20	0:0	4	&
water	107:21	0:0	4	p_sys
op	107:26	0:0	4	->
water	107:28	0:0	4	lock
water	107:34	0:0	2	;
call	108:4	108:44	2	Notify
arg	108:12	108:18	3	p_this
water	108:12	0:0	4	p_this
arg	108:20	108:30	3	psz_notify
water	108:20	0:0	4	psz_notify
arg	108:32	108:35	3	pix
water	108:32	0:0	4	pix
arg	108:37	108:44	3	p_intf
water	108:37	0:0	4	p_intf
water	108:45	0:0	2	;
call	109:4	109:35	2	vlc_mutex_unlock
arg	109:22	109:35	3	&p_sys->lock
op	109:22	0:0	4	&
water	109:23	0:0	4	p_sys
op	109:28	0:0	4	->
water	109:30	0:0	4	lock
water	109:36	0:0	2	;
return	110:4	110:22	2	VLC_SUCCESS
water	110:11	0:0	3	VLC_SUCCESS

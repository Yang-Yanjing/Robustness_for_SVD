func	1:0	17:0	0	static int	MarshalPosition
params	2:15	0:0	1	
param	2:17	2:38	2	intf_thread_t *	p_intf
param	2:40	2:67	2	DBusMessageIter *	container
stmnts	0:0	16:22	1	
decl	5:4	5:22	2	dbus_int64_t	i_pos
decl	6:4	6:55	2	input_thread_t	*p_input
op	6:28	0:0	2	=
call	6:30	6:54	3	pl_CurrentInput
arg	6:47	6:54	4	p_intf
water	6:47	0:0	5	p_intf
if	7:4	8:17	2	(! p_input)
cond	7:8	7:9	3	! p_input
op	7:8	0:0	4	!
water	7:9	0:0	4	p_input
stmts	8:8	8:17	3	
water	8:8	0:0	4	i_pos
op	8:14	0:0	4	=
water	8:16	0:0	4	0
water	8:17	0:0	4	;
else	9:4	13:4	2
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	i_pos
op	11:14	0:0	4	=
call	11:16	11:45	4	var_GetTime
arg	11:29	11:36	5	p_input
water	11:29	0:0	6	p_input
arg	11:38	11:45	5	"time"
water	11:38	0:0	6	"time"
water	11:46	0:0	4	;
call	12:8	12:36	4	vlc_object_release
arg	12:28	12:36	5	p_input
water	12:28	0:0	6	p_input
water	12:37	0:0	4	;
water	13:4	0:0	4	}
if	14:4	15:25	2	(!dbus_message_iter_append_basic (container ,DBUS_TYPE_INT64 ,& i_pos ))
cond	14:8	14:76	3	!dbus_message_iter_append_basic (container ,DBUS_TYPE_INT64 ,& i_pos )
op	14:8	0:0	4	!
call	14:9	14:76	4	dbus_message_iter_append_basic
arg	14:41	14:50	5	container
water	14:41	0:0	6	container
arg	14:52	14:67	5	DBUS_TYPE_INT64
water	14:52	0:0	6	DBUS_TYPE_INT64
arg	14:69	14:76	5	&i_pos
op	14:69	0:0	6	&
water	14:70	0:0	6	i_pos
stmts	15:8	15:25	3	
return	15:8	15:25	4	VLC_ENOMEM
water	15:15	0:0	5	VLC_ENOMEM
return	16:4	16:22	2	VLC_SUCCESS
water	16:11	0:0	3	VLC_SUCCESS

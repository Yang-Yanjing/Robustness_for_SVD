func	2:0	70:0	0	static subpicture_t *	DecodeBlock
params	2:32	0:0	1	
param	2:34	2:50	2	decoder_t *	p_dec
param	2:52	2:71	2	block_t * *	pp_block
stmnts	0:0	69:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:30	2	subpicture_t	*p_spu
op	5:24	0:0	2	=
water	5:26	0:0	2	NULL
decl	6:4	6:20	2	block_t	*p_block
if	7:4	8:19	2	(! pp_block || * pp_block == NULL)
cond	7:8	7:34	3	! pp_block || * pp_block == NULL
op	7:8	0:0	4	!
water	7:9	0:0	4	pp_block
op	7:18	0:0	4	||
op	7:21	0:0	4	*
water	7:22	0:0	4	pp_block
op	7:31	0:0	4	==
water	7:34	0:0	4	NULL
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
water	9:4	0:0	2	p_block
op	9:12	0:0	2	=
op	9:14	0:0	2	*
water	9:15	0:0	2	pp_block
water	9:23	0:0	2	;
if	10:4	15:4	2	(p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ))
cond	10:8	10:73	3	p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED )
water	10:8	0:0	4	p_block
op	10:15	0:0	4	->
water	10:17	0:0	4	i_flags
op	10:25	0:0	4	&
water	10:27	0:0	4	(
water	10:28	0:0	4	BLOCK_FLAG_DISCONTINUITY
op	10:52	0:0	4	|
water	10:53	0:0	4	BLOCK_FLAG_CORRUPTED
water	10:73	0:0	4	)
stmts	11:4	15:4	3	
water	11:4	0:0	4	{
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	i_max_stop
op	12:26	0:0	4	=
water	12:28	0:0	4	VLC_TS_INVALID
water	12:42	0:0	4	;
call	13:8	13:31	4	block_Release
arg	13:23	13:31	5	p_block
water	13:23	0:0	6	p_block
water	13:32	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
op	16:4	0:0	2	*
water	16:5	0:0	2	pp_block
op	16:14	0:0	2	=
water	16:16	0:0	2	NULL
water	16:20	0:0	2	;
if	17:4	21:4	2	(p_block -> i_buffer == 0 || p_block -> p_buffer [ 0 ] == '\0')
cond	17:8	17:58	3	p_block -> i_buffer == 0 || p_block -> p_buffer [ 0 ] == '\0'
water	17:8	0:0	4	p_block
op	17:15	0:0	4	->
water	17:17	0:0	4	i_buffer
op	17:26	0:0	4	==
water	17:29	0:0	4	0
op	17:31	0:0	4	||
water	17:34	0:0	4	p_block
op	17:41	0:0	4	->
water	17:43	0:0	4	p_buffer
op	17:51	0:0	4	[
water	17:52	0:0	4	0
op	17:53	0:0	4	]
op	17:55	0:0	4	==
water	17:58	0:0	4	'\0'
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
call	19:8	19:31	4	block_Release
arg	19:23	19:31	5	p_block
water	19:23	0:0	6	p_block
water	19:32	0:0	4	;
return	20:8	20:19	4	NULL
water	20:15	0:0	5	NULL
water	21:4	0:0	4	}
decl	22:4	22:70	2	subpicture_updater_sys_t	*p_spu_sys
op	22:40	0:0	2	=
call	22:42	22:69	3	malloc
arg	22:50	22:69	4	sizeof(*p_spu_sys)
op	22:50	0:0	5	sizeof
water	22:56	0:0	5	(
op	22:57	0:0	5	*
water	22:58	0:0	5	p_spu_sys
water	22:67	0:0	5	)
if	23:4	27:4	2	(! p_spu_sys)
cond	23:8	23:9	3	! p_spu_sys
op	23:8	0:0	4	!
water	23:9	0:0	4	p_spu_sys
stmts	24:4	27:4	3	
water	24:4	0:0	4	{
call	25:8	25:31	4	block_Release
arg	25:23	25:31	5	p_block
water	25:23	0:0	6	p_block
water	25:32	0:0	4	;
return	26:8	26:19	4	NULL
water	26:15	0:0	5	NULL
water	27:4	0:0	4	}
decl	28:4	33:5	2	subpicture_updater_t	updater
op	28:33	0:0	2	=
water	28:35	0:0	2	{
op	29:8	0:0	2	.
water	29:9	0:0	2	pf_validate
op	29:21	0:0	2	=
water	29:23	0:0	2	SubpictureValidate
water	29:41	0:0	2	,
op	30:8	0:0	2	.
water	30:9	0:0	2	pf_update
op	30:21	0:0	2	=
water	30:23	0:0	2	SubpictureUpdate
water	30:39	0:0	2	,
op	31:8	0:0	2	.
water	31:9	0:0	2	pf_destroy
op	31:21	0:0	2	=
water	31:23	0:0	2	SubpictureDestroy
water	31:40	0:0	2	,
op	32:8	0:0	2	.
water	32:9	0:0	2	p_sys
op	32:21	0:0	2	=
water	32:23	0:0	2	p_spu_sys
water	32:32	0:0	2	,
water	33:4	0:0	2	}
water	34:4	0:0	2	p_spu
op	34:10	0:0	2	=
call	34:12	34:51	2	decoder_NewSubpicture
arg	34:35	34:40	3	p_dec
water	34:35	0:0	4	p_dec
arg	34:42	34:51	3	&updater
op	34:42	0:0	4	&
water	34:43	0:0	4	updater
water	34:52	0:0	2	;
if	35:4	41:4	2	(! p_spu)
cond	35:8	35:9	3	! p_spu
op	35:8	0:0	4	!
water	35:9	0:0	4	p_spu
stmts	36:4	41:4	3	
water	36:4	0:0	4	{
call	37:8	37:48	4	msg_Warn
arg	37:18	37:23	5	p_dec
water	37:18	0:0	6	p_dec
arg	37:25	37:48	5	"can't get spu buffer"
water	37:25	0:0	6	"can't get spu buffer"
water	37:49	0:0	4	;
call	38:8	38:24	4	free
arg	38:14	38:24	5	p_spu_sys
water	38:14	0:0	6	p_spu_sys
water	38:25	0:0	4	;
call	39:8	39:31	4	block_Release
arg	39:23	39:31	5	p_block
water	39:23	0:0	6	p_block
water	39:32	0:0	4	;
return	40:8	40:19	4	NULL
water	40:15	0:0	5	NULL
water	41:4	0:0	4	}
water	42:4	0:0	2	p_spu_sys
op	42:13	0:0	2	->
water	42:15	0:0	2	p_img
op	42:21	0:0	2	=
water	42:23	0:0	2	NULL
water	42:27	0:0	2	;
water	43:4	0:0	2	p_spu_sys
op	43:13	0:0	2	->
water	43:15	0:0	2	p_dec_sys
op	43:25	0:0	2	=
water	43:27	0:0	2	p_sys
water	43:32	0:0	2	;
water	44:4	0:0	2	p_spu_sys
op	44:13	0:0	2	->
water	44:15	0:0	2	i_subs_len
op	44:26	0:0	2	=
water	44:28	0:0	2	p_block
op	44:35	0:0	2	->
water	44:37	0:0	2	i_buffer
water	44:45	0:0	2	;
water	45:4	0:0	2	p_spu_sys
op	45:13	0:0	2	->
water	45:15	0:0	2	p_subs_data
op	45:27	0:0	2	=
call	45:29	45:55	2	malloc
arg	45:37	45:55	3	p_block->i_buffer
water	45:37	0:0	4	p_block
op	45:44	0:0	4	->
water	45:46	0:0	4	i_buffer
water	45:56	0:0	2	;
water	46:4	0:0	2	p_spu_sys
op	46:13	0:0	2	->
water	46:15	0:0	2	i_pts
op	46:21	0:0	2	=
water	46:23	0:0	2	p_block
op	46:30	0:0	2	->
water	46:32	0:0	2	i_pts
water	46:37	0:0	2	;
if	47:4	52:4	2	(! p_spu_sys -> p_subs_data)
cond	47:8	47:20	3	! p_spu_sys -> p_subs_data
op	47:8	0:0	4	!
water	47:9	0:0	4	p_spu_sys
op	47:18	0:0	4	->
water	47:20	0:0	4	p_subs_data
stmts	48:4	52:4	3	
water	48:4	0:0	4	{
call	49:8	49:47	4	decoder_DeleteSubpicture
arg	49:34	49:39	5	p_dec
water	49:34	0:0	6	p_dec
arg	49:41	49:47	5	p_spu
water	49:41	0:0	6	p_spu
water	49:48	0:0	4	;
call	50:8	50:31	4	block_Release
arg	50:23	50:31	5	p_block
water	50:23	0:0	6	p_block
water	50:32	0:0	4	;
return	51:8	51:19	4	NULL
water	51:15	0:0	5	NULL
water	52:4	0:0	4	}
call	53:4	54:30	2	memcpy
arg	53:12	53:34	3	p_spu_sys->p_subs_data
water	53:12	0:0	4	p_spu_sys
op	53:21	0:0	4	->
water	53:23	0:0	4	p_subs_data
arg	53:36	53:53	3	p_block->p_buffer
water	53:36	0:0	4	p_block
op	53:43	0:0	4	->
water	53:45	0:0	4	p_buffer
arg	54:12	54:30	3	p_block->i_buffer
water	54:12	0:0	4	p_block
op	54:19	0:0	4	->
water	54:21	0:0	4	i_buffer
water	54:31	0:0	2	;
water	55:4	0:0	2	p_spu
op	55:9	0:0	2	->
water	55:11	0:0	2	i_start
op	55:19	0:0	2	=
water	55:21	0:0	2	p_block
op	55:28	0:0	2	->
water	55:30	0:0	2	i_pts
water	55:35	0:0	2	;
water	56:4	0:0	2	p_spu
op	56:9	0:0	2	->
water	56:11	0:0	2	i_stop
op	56:18	0:0	2	=
call	56:20	56:81	2	__MAX
arg	56:27	56:44	3	p_sys->i_max_stop
water	56:27	0:0	4	p_sys
op	56:32	0:0	4	->
water	56:34	0:0	4	i_max_stop
arg	56:46	56:81	3	p_block->i_pts+p_block->i_length
water	56:46	0:0	4	p_block
op	56:53	0:0	4	->
water	56:55	0:0	4	i_pts
op	56:61	0:0	4	+
water	56:63	0:0	4	p_block
op	56:70	0:0	4	->
water	56:72	0:0	4	i_length
water	56:82	0:0	2	;
water	57:4	0:0	2	p_spu
op	57:9	0:0	2	->
water	57:11	0:0	2	b_ephemer
op	57:21	0:0	2	=
water	57:23	0:0	2	true
water	57:27	0:0	2	;
water	58:4	0:0	2	p_spu
op	58:9	0:0	2	->
water	58:11	0:0	2	b_absolute
op	58:22	0:0	2	=
water	58:24	0:0	2	true
water	58:28	0:0	2	;
water	59:4	0:0	2	p_sys
op	59:9	0:0	2	->
water	59:11	0:0	2	i_max_stop
op	59:22	0:0	2	=
water	59:24	0:0	2	p_spu
op	59:29	0:0	2	->
water	59:31	0:0	2	i_stop
water	59:37	0:0	2	;
call	60:4	60:33	2	vlc_mutex_lock
arg	60:20	60:33	3	&p_sys->lock
op	60:20	0:0	4	&
water	60:21	0:0	4	p_sys
op	60:26	0:0	4	->
water	60:28	0:0	4	lock
water	60:34	0:0	2	;
if	61:4	65:4	2	(p_sys -> p_track)
cond	61:8	61:15	3	p_sys -> p_track
water	61:8	0:0	4	p_sys
op	61:13	0:0	4	->
water	61:15	0:0	4	p_track
stmts	62:4	65:4	3	
water	62:4	0:0	4	{
call	63:8	64:75	4	ass_process_chunk
arg	63:27	63:41	5	p_sys->p_track
water	63:27	0:0	6	p_sys
op	63:32	0:0	6	->
water	63:34	0:0	6	p_track
arg	63:43	63:65	5	p_spu_sys->p_subs_data
water	63:43	0:0	6	p_spu_sys
op	63:52	0:0	6	->
water	63:54	0:0	6	p_subs_data
arg	63:67	63:88	5	p_spu_sys->i_subs_len
water	63:67	0:0	6	p_spu_sys
op	63:76	0:0	6	->
water	63:78	0:0	6	i_subs_len
arg	64:27	64:48	5	p_block->i_pts/1000
water	64:27	0:0	6	p_block
op	64:34	0:0	6	->
water	64:36	0:0	6	i_pts
op	64:42	0:0	6	/
water	64:44	0:0	6	1000
arg	64:50	64:75	5	p_block->i_length/1000
water	64:50	0:0	6	p_block
op	64:57	0:0	6	->
water	64:59	0:0	6	i_length
op	64:68	0:0	6	/
water	64:70	0:0	6	1000
water	64:76	0:0	4	;
water	65:4	0:0	4	}
call	66:4	66:35	2	vlc_mutex_unlock
arg	66:22	66:35	3	&p_sys->lock
op	66:22	0:0	4	&
water	66:23	0:0	4	p_sys
op	66:28	0:0	4	->
water	66:30	0:0	4	lock
water	66:36	0:0	2	;
call	67:4	67:22	2	DecSysHold
arg	67:16	67:22	3	p_sys
water	67:16	0:0	4	p_sys
water	67:23	0:0	2	;
call	68:4	68:27	2	block_Release
arg	68:19	68:27	3	p_block
water	68:19	0:0	4	p_block
water	68:28	0:0	2	;
return	69:4	69:16	2	p_spu
water	69:11	0:0	3	p_spu

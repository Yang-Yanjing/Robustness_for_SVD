func	2:0	84:0	0	static void	VoutDisplayEventMouse
params	2:33	0:0	1	
param	2:34	2:52	2	vout_display_t *	vd
param	2:54	2:63	2	int	event
param	2:65	2:77	2	va_list	args
stmnts	0:0	83:33	1	
decl	4:4	4:50	2	vout_display_owner_sys_t	*osys
op	4:35	0:0	2	=
water	4:37	0:0	2	vd
op	4:39	0:0	2	->
water	4:41	0:0	2	owner
op	4:46	0:0	2	.
water	4:47	0:0	2	sys
call	5:4	5:30	2	vlc_mutex_lock
arg	5:19	5:30	3	&osys->lock
op	5:19	0:0	4	&
water	5:20	0:0	4	osys
op	5:24	0:0	4	->
water	5:26	0:0	4	lock
water	5:31	0:0	2	;
decl	7:4	7:37	2	vlc_mouse_t	m
op	7:18	0:0	2	=
water	7:20	0:0	2	osys
op	7:24	0:0	2	->
water	7:26	0:0	2	mouse
op	7:31	0:0	2	.
water	7:32	0:0	2	state
decl	8:4	8:27	2	bool	is_ignored
op	8:20	0:0	2	=
water	8:22	0:0	2	false
switch	9:4	54:4	2	(event)
cond	9:12	9:12	3	event
water	9:12	0:0	4	event
stmts	9:19	54:4	3	
water	9:19	0:0	4	{
label	10:4	10:39	4	case VOUT_DISPLAY_EVENT_MOUSE_STATE :
water	10:41	0:0	4	{
decl	11:8	11:44	4	const int	x
op	11:20	0:0	4	=
water	11:22	0:0	4	(
water	11:23	0:0	4	int
water	11:26	0:0	4	)
call	11:27	11:43	5	va_arg
arg	11:34	11:38	6	args
water	11:34	0:0	7	args
arg	11:40	11:43	6	int
water	11:40	0:0	7	int
decl	12:8	12:44	4	const int	y
op	12:20	0:0	4	=
water	12:22	0:0	4	(
water	12:23	0:0	4	int
water	12:26	0:0	4	)
call	12:27	12:43	5	va_arg
arg	12:34	12:38	6	args
water	12:34	0:0	7	args
arg	12:40	12:43	6	int
water	12:40	0:0	7	int
decl	13:8	13:54	4	const int	button_mask
op	13:30	0:0	4	=
water	13:32	0:0	4	(
water	13:33	0:0	4	int
water	13:36	0:0	4	)
call	13:37	13:53	5	va_arg
arg	13:44	13:48	6	args
water	13:44	0:0	7	args
arg	13:50	13:53	6	int
water	13:50	0:0	7	int
call	14:8	14:25	4	vlc_mouse_Init
arg	14:23	14:25	5	&m
op	14:23	0:0	6	&
water	14:24	0:0	6	m
water	14:26	0:0	4	;
water	15:8	0:0	4	m
op	15:9	0:0	4	.
water	15:10	0:0	4	i_x
op	15:14	0:0	4	=
water	15:16	0:0	4	x
water	15:17	0:0	4	;
water	16:8	0:0	4	m
op	16:9	0:0	4	.
water	16:10	0:0	4	i_y
op	16:14	0:0	4	=
water	16:16	0:0	4	y
water	16:17	0:0	4	;
water	17:8	0:0	4	m
op	17:9	0:0	4	.
water	17:10	0:0	4	i_pressed
op	17:20	0:0	4	=
water	17:22	0:0	4	button_mask
water	17:33	0:0	4	;
break	18:8	18:13	4	
water	19:4	0:0	4	}
label	20:4	20:39	4	case VOUT_DISPLAY_EVENT_MOUSE_MOVED :
water	20:41	0:0	4	{
decl	21:8	21:44	4	const int	x
op	21:20	0:0	4	=
water	21:22	0:0	4	(
water	21:23	0:0	4	int
water	21:26	0:0	4	)
call	21:27	21:43	5	va_arg
arg	21:34	21:38	6	args
water	21:34	0:0	7	args
arg	21:40	21:43	6	int
water	21:40	0:0	7	int
decl	22:8	22:44	4	const int	y
op	22:20	0:0	4	=
water	22:22	0:0	4	(
water	22:23	0:0	4	int
water	22:26	0:0	4	)
call	22:27	22:43	5	va_arg
arg	22:34	22:38	6	args
water	22:34	0:0	7	args
arg	22:40	22:43	6	int
water	22:40	0:0	7	int
water	24:8	0:0	4	m
op	24:9	0:0	4	.
water	24:10	0:0	4	i_x
op	24:14	0:0	4	=
water	24:16	0:0	4	x
water	24:17	0:0	4	;
water	25:8	0:0	4	m
op	25:9	0:0	4	.
water	25:10	0:0	4	i_y
op	25:14	0:0	4	=
water	25:16	0:0	4	y
water	25:17	0:0	4	;
water	26:8	0:0	4	m
op	26:9	0:0	4	.
water	26:10	0:0	4	b_double_click
op	26:25	0:0	4	=
water	26:27	0:0	4	false
water	26:32	0:0	4	;
break	27:8	27:13	4	
water	28:4	0:0	4	}
label	29:4	29:41	4	case VOUT_DISPLAY_EVENT_MOUSE_PRESSED :
label	30:4	30:42	4	case VOUT_DISPLAY_EVENT_MOUSE_RELEASED :
water	30:44	0:0	4	{
decl	31:8	31:49	4	const int	button
op	31:25	0:0	4	=
water	31:27	0:0	4	(
water	31:28	0:0	4	int
water	31:31	0:0	4	)
call	31:32	31:48	5	va_arg
arg	31:39	31:43	6	args
water	31:39	0:0	7	args
arg	31:45	31:48	6	int
water	31:45	0:0	7	int
decl	32:8	32:43	4	const int	button_mask
op	32:30	0:0	4	=
water	32:32	0:0	4	1
op	32:34	0:0	4	<<
water	32:37	0:0	4	button
if	34:8	38:8	4	(( event == VOUT_DISPLAY_EVENT_MOUSE_PRESSED && ( osys -> mouse . state . i_pressed & button_mask ) ) || ( event == VOUT_DISPLAY_EVENT_MOUSE_RELEASED && ! ( osys -> mouse . state . i_pressed & button_mask ) ))
cond	34:12	35:103	5	( event == VOUT_DISPLAY_EVENT_MOUSE_PRESSED && ( osys -> mouse . state . i_pressed & button_mask ) ) || ( event == VOUT_DISPLAY_EVENT_MOUSE_RELEASED && ! ( osys -> mouse . state . i_pressed & button_mask ) )
water	34:12	0:0	6	(
water	34:13	0:0	6	event
op	34:19	0:0	6	==
water	34:22	0:0	6	VOUT_DISPLAY_EVENT_MOUSE_PRESSED
op	34:56	0:0	6	&&
water	34:60	0:0	6	(
water	34:61	0:0	6	osys
op	34:65	0:0	6	->
water	34:67	0:0	6	mouse
op	34:72	0:0	6	.
water	34:73	0:0	6	state
op	34:78	0:0	6	.
water	34:79	0:0	6	i_pressed
op	34:89	0:0	6	&
water	34:91	0:0	6	button_mask
water	34:102	0:0	6	)
water	34:103	0:0	6	)
op	34:105	0:0	6	||
water	35:12	0:0	6	(
water	35:13	0:0	6	event
op	35:19	0:0	6	==
water	35:22	0:0	6	VOUT_DISPLAY_EVENT_MOUSE_RELEASED
op	35:56	0:0	6	&&
op	35:59	0:0	6	!
water	35:60	0:0	6	(
water	35:61	0:0	6	osys
op	35:65	0:0	6	->
water	35:67	0:0	6	mouse
op	35:72	0:0	6	.
water	35:73	0:0	6	state
op	35:78	0:0	6	.
water	35:79	0:0	6	i_pressed
op	35:89	0:0	6	&
water	35:91	0:0	6	button_mask
water	35:102	0:0	6	)
water	35:103	0:0	6	)
stmts	35:106	38:8	5	
water	35:106	0:0	6	{
water	36:12	0:0	6	is_ignored
op	36:23	0:0	6	=
water	36:25	0:0	6	true
water	36:29	0:0	6	;
break	37:12	37:17	6	
water	38:8	0:0	6	}
call	40:8	40:76	4	msg_Dbg
arg	40:16	40:18	5	vd
water	40:16	0:0	6	vd
arg	40:20	40:61	5	"VoutDisplayEvent 'mouse button' %d t=%d"
water	40:20	0:0	6	"VoutDisplayEvent 'mouse button' %d t=%d"
arg	40:63	40:69	5	button
water	40:63	0:0	6	button
arg	40:71	40:76	5	event
water	40:71	0:0	6	event
water	40:77	0:0	4	;
water	41:8	0:0	4	m
op	41:9	0:0	4	.
water	41:10	0:0	4	b_double_click
op	41:25	0:0	4	=
water	41:27	0:0	4	false
water	41:32	0:0	4	;
if	42:8	43:38	4	(event == VOUT_DISPLAY_EVENT_MOUSE_PRESSED)
cond	42:12	42:21	5	event == VOUT_DISPLAY_EVENT_MOUSE_PRESSED
water	42:12	0:0	6	event
op	42:18	0:0	6	==
water	42:21	0:0	6	VOUT_DISPLAY_EVENT_MOUSE_PRESSED
stmts	43:12	43:38	5	
water	43:12	0:0	6	m
op	43:13	0:0	6	.
water	43:14	0:0	6	i_pressed
op	43:24	0:0	6	|=
water	43:27	0:0	6	button_mask
water	43:38	0:0	6	;
else	44:8	45:39	4
stmts	45:12	45:39	5	
water	45:12	0:0	6	m
op	45:13	0:0	6	.
water	45:14	0:0	6	i_pressed
op	45:24	0:0	6	&=
water	45:27	0:0	6	~button_mask
water	45:39	0:0	6	;
break	46:8	46:13	4	
water	47:4	0:0	4	}
label	48:4	48:46	4	case VOUT_DISPLAY_EVENT_MOUSE_DOUBLE_CLICK :
call	49:8	49:53	4	msg_Dbg
arg	49:16	49:18	5	vd
water	49:16	0:0	6	vd
arg	49:20	49:53	5	"VoutDisplayEvent 'double click'"
water	49:20	0:0	6	"VoutDisplayEvent 'double click'"
water	49:54	0:0	4	;
water	50:8	0:0	4	m
op	50:9	0:0	4	.
water	50:10	0:0	4	b_double_click
op	50:25	0:0	4	=
water	50:27	0:0	4	true
water	50:31	0:0	4	;
break	51:8	51:13	4	
label	52:4	52:11	4	default :
call	53:8	53:16	4	assert
arg	53:15	53:16	5	0
water	53:15	0:0	6	0
water	53:17	0:0	4	;
water	54:4	0:0	4	}
if	55:4	58:4	2	(is_ignored)
cond	55:8	55:8	3	is_ignored
water	55:8	0:0	4	is_ignored
stmts	55:20	58:4	3	
water	55:20	0:0	4	{
call	56:8	56:36	4	vlc_mutex_unlock
arg	56:25	56:36	5	&osys->lock
op	56:25	0:0	6	&
water	56:26	0:0	6	osys
op	56:30	0:0	6	->
water	56:32	0:0	6	lock
water	56:37	0:0	4	;
return	57:8	57:14	4	
water	58:4	0:0	4	}
if	60:4	69:4	2	(! vd -> info . has_double_click &&vlc_mouse_HasPressed (& osys -> mouse . state ,& m ,MOUSE_BUTTON_LEFT ))
cond	60:8	61:70	3	! vd -> info . has_double_click &&vlc_mouse_HasPressed (& osys -> mouse . state ,& m ,MOUSE_BUTTON_LEFT )
op	60:8	0:0	4	!
water	60:9	0:0	4	vd
op	60:11	0:0	4	->
water	60:13	0:0	4	info
op	60:17	0:0	4	.
water	60:18	0:0	4	has_double_click
op	60:35	0:0	4	&&
call	61:8	61:70	4	vlc_mouse_HasPressed
arg	61:29	61:47	5	&osys->mouse.state
op	61:29	0:0	6	&
water	61:30	0:0	6	osys
op	61:34	0:0	6	->
water	61:36	0:0	6	mouse
op	61:41	0:0	6	.
water	61:42	0:0	6	state
arg	61:49	61:51	5	&m
op	61:49	0:0	6	&
water	61:50	0:0	6	m
arg	61:53	61:70	5	MOUSE_BUTTON_LEFT
water	61:53	0:0	6	MOUSE_BUTTON_LEFT
stmts	61:73	69:4	3	
water	61:73	0:0	4	{
decl	62:8	62:38	4	const mtime_t	i_date
op	62:29	0:0	4	=
call	62:31	62:37	5	mdate
if	63:8	66:8	4	(i_date - osys -> mouse . last_pressed < osys -> mouse . double_click_timeout)
cond	63:12	63:60	5	i_date - osys -> mouse . last_pressed < osys -> mouse . double_click_timeout
water	63:12	0:0	6	i_date
op	63:19	0:0	6	-
water	63:21	0:0	6	osys
op	63:25	0:0	6	->
water	63:27	0:0	6	mouse
op	63:32	0:0	6	.
water	63:33	0:0	6	last_pressed
op	63:46	0:0	6	<
water	63:48	0:0	6	osys
op	63:52	0:0	6	->
water	63:54	0:0	6	mouse
op	63:59	0:0	6	.
water	63:60	0:0	6	double_click_timeout
stmts	63:83	66:8	5	
water	63:83	0:0	6	{
water	64:12	0:0	6	m
op	64:13	0:0	6	.
water	64:14	0:0	6	b_double_click
op	64:29	0:0	6	=
water	64:31	0:0	6	true
water	64:35	0:0	6	;
water	65:12	0:0	6	osys
op	65:16	0:0	6	->
water	65:18	0:0	6	mouse
op	65:23	0:0	6	.
water	65:24	0:0	6	last_pressed
op	65:37	0:0	6	=
water	65:39	0:0	6	0
water	65:40	0:0	6	;
water	66:8	0:0	6	}
else	66:10	68:8	4
stmts	66:15	68:8	5	
water	66:15	0:0	6	{
water	67:12	0:0	6	osys
op	67:16	0:0	6	->
water	67:18	0:0	6	mouse
op	67:23	0:0	6	.
water	67:24	0:0	6	last_pressed
op	67:37	0:0	6	=
call	67:39	67:45	6	mdate
water	67:46	0:0	6	;
water	68:8	0:0	6	}
water	69:4	0:0	4	}
water	71:4	0:0	2	osys
op	71:8	0:0	2	->
water	71:10	0:0	2	mouse
op	71:15	0:0	2	.
water	71:16	0:0	2	state
op	71:22	0:0	2	=
water	71:24	0:0	2	m
water	71:25	0:0	2	;
water	73:4	0:0	2	osys
op	73:8	0:0	2	->
water	73:10	0:0	2	mouse
op	73:15	0:0	2	.
water	73:16	0:0	2	ch_activity
op	73:28	0:0	2	=
water	73:30	0:0	2	true
water	73:34	0:0	2	;
if	74:4	75:40	2	(! vd -> info . has_hide_mouse)
cond	74:8	74:18	3	! vd -> info . has_hide_mouse
op	74:8	0:0	4	!
water	74:9	0:0	4	vd
op	74:11	0:0	4	->
water	74:13	0:0	4	info
op	74:17	0:0	4	.
water	74:18	0:0	4	has_hide_mouse
stmts	75:8	75:40	3	
water	75:8	0:0	4	osys
op	75:12	0:0	4	->
water	75:14	0:0	4	mouse
op	75:19	0:0	4	.
water	75:20	0:0	4	last_moved
op	75:31	0:0	4	=
call	75:33	75:39	4	mdate
water	75:40	0:0	4	;
call	77:4	77:41	2	vout_SendEventMouseVisible
arg	77:31	77:41	3	osys->vout
water	77:31	0:0	4	osys
op	77:35	0:0	4	->
water	77:37	0:0	4	vout
water	77:42	0:0	2	;
call	79:4	79:68	2	DummyVoutSendDisplayEventMouse
arg	79:35	79:45	3	osys->vout
water	79:35	0:0	4	osys
op	79:39	0:0	4	->
water	79:41	0:0	4	vout
arg	79:47	79:64	3	&osys->vout_mouse
op	79:47	0:0	4	&
water	79:48	0:0	4	osys
op	79:52	0:0	4	->
water	79:54	0:0	4	vout_mouse
arg	79:66	79:68	3	&m
op	79:66	0:0	4	&
water	79:67	0:0	4	m
water	79:69	0:0	2	;
call	81:4	81:45	2	vout_SendDisplayEventMouse
arg	81:31	81:41	3	osys->vout
water	81:31	0:0	4	osys
op	81:35	0:0	4	->
water	81:37	0:0	4	vout
arg	81:43	81:45	3	&m
op	81:43	0:0	4	&
water	81:44	0:0	4	m
water	81:46	0:0	2	;
call	83:4	83:32	2	vlc_mutex_unlock
arg	83:21	83:32	3	&osys->lock
op	83:21	0:0	4	&
water	83:22	0:0	4	osys
op	83:26	0:0	4	->
water	83:28	0:0	4	lock
water	83:33	0:0	2	;

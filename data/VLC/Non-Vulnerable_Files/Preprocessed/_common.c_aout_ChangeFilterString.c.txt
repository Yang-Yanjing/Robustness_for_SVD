func	2:0	94:0	0	bool	aout_ChangeFilterString
params	2:28	0:0	1	
param	2:30	2:49	2	vlc_object_t *	p_obj
param	2:51	2:71	2	vlc_object_t *	p_aout
param	3:30	3:54	2	const char *	psz_variable
param	4:30	4:50	2	const char *	psz_name
param	4:52	4:63	2	bool	b_add
stmnts	6:4	93:15	1	
if	6:4	7:20	2	(* psz_name == '\0')
cond	6:8	6:21	3	* psz_name == '\0'
op	6:8	0:0	4	*
water	6:9	0:0	4	psz_name
op	6:18	0:0	4	==
water	6:21	0:0	4	'\0'
stmts	7:8	7:20	3	
return	7:8	7:20	4	false
water	7:15	0:0	5	false
decl	8:4	8:18	2	char	*psz_list
if	9:4	12:4	2	(p_aout)
cond	9:8	9:8	3	p_aout
water	9:8	0:0	4	p_aout
stmts	10:4	12:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	psz_list
op	11:17	0:0	4	=
call	11:19	11:55	4	var_GetString
arg	11:34	11:40	5	p_aout
water	11:34	0:0	6	p_aout
arg	11:42	11:55	5	psz_variable
water	11:42	0:0	6	psz_variable
water	11:56	0:0	4	;
water	12:4	0:0	4	}
else	13:4	17:4	2
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
water	15:8	0:0	4	psz_list
op	15:17	0:0	4	=
call	15:19	15:70	4	var_CreateGetString
arg	15:40	15:55	5	p_obj->p_libvlc
water	15:40	0:0	6	p_obj
op	15:45	0:0	6	->
water	15:47	0:0	6	p_libvlc
arg	15:57	15:70	5	psz_variable
water	15:57	0:0	6	psz_variable
water	15:71	0:0	4	;
call	16:8	16:51	4	var_Destroy
arg	16:21	16:36	5	p_obj->p_libvlc
water	16:21	0:0	6	p_obj
op	16:26	0:0	6	->
water	16:28	0:0	6	p_libvlc
arg	16:38	16:51	5	psz_variable
water	16:38	0:0	6	psz_variable
water	16:52	0:0	4	;
water	17:4	0:0	4	}
decl	19:4	19:19	2	int	i_count
op	19:16	0:0	2	=
water	19:18	0:0	2	1
for	20:4	21:28	2	( char * p = psz_list ;p && * p;p ++)
forinit	0:0	20:27	3	 char * p = psz_list ;
decl	20:9	20:27	4	char	*p
op	20:17	0:0	4	=
water	20:19	0:0	4	psz_list
cond	20:29	20:35	3	p && * p
water	20:29	0:0	4	p
op	20:31	0:0	4	&&
op	20:34	0:0	4	*
water	20:35	0:0	4	p
forexpr	20:38	20:39	3	p ++
water	20:38	0:0	4	p
op	20:39	0:0	4	++
stmts	21:8	21:28	3	
water	21:8	0:0	4	i_count
op	21:16	0:0	4	+=
op	21:19	0:0	4	*
water	21:20	0:0	4	p
op	21:22	0:0	4	==
water	21:25	0:0	4	':'
water	21:28	0:0	4	;
water	22:4	0:0	2	i_count
op	22:12	0:0	2	+=
water	22:15	0:0	2	b_add
water	22:20	0:0	2	;
decl	23:4	23:70	2	const char	**ppsz_filter
op	23:29	0:0	2	=
call	23:31	23:69	3	calloc
arg	23:39	23:46	4	i_count
water	23:39	0:0	5	i_count
arg	23:48	23:69	4	sizeof(*ppsz_filter)
op	23:48	0:0	5	sizeof
water	23:54	0:0	5	(
op	23:55	0:0	5	*
water	23:56	0:0	5	ppsz_filter
water	23:67	0:0	5	)
if	24:4	28:4	2	(! ppsz_filter)
cond	24:8	24:9	3	! ppsz_filter
op	24:8	0:0	4	!
water	24:9	0:0	4	ppsz_filter
stmts	25:4	28:4	3	
water	25:4	0:0	4	{
call	26:8	26:23	4	free
arg	26:14	26:23	5	psz_list
water	26:14	0:0	6	psz_list
water	26:24	0:0	4	;
return	27:8	27:20	4	false
water	27:15	0:0	5	false
water	28:4	0:0	4	}
decl	29:4	29:26	2	bool	b_present
op	29:19	0:0	2	=
water	29:21	0:0	2	false
water	30:4	0:0	2	i_count
op	30:12	0:0	2	=
water	30:14	0:0	2	0
water	30:15	0:0	2	;
for	31:4	44:4	2	( char * p = psz_list ;p && * p;)
forinit	0:0	31:27	3	 char * p = psz_list ;
decl	31:9	31:27	4	char	*p
op	31:17	0:0	4	=
water	31:19	0:0	4	psz_list
cond	31:29	31:35	3	p && * p
water	31:29	0:0	4	p
op	31:31	0:0	4	&&
op	31:34	0:0	4	*
water	31:35	0:0	4	p
forexpr	0:0	0:0	3	
stmts	32:4	44:4	3	
water	32:4	0:0	4	{
decl	33:8	33:38	4	char	*psz_end
op	33:22	0:0	4	=
call	33:24	33:37	5	strchr
arg	33:31	33:32	6	p
water	33:31	0:0	7	p
arg	33:34	33:37	6	':'
water	33:34	0:0	7	':'
if	34:8	35:29	4	(psz_end)
cond	34:12	34:12	5	psz_end
water	34:12	0:0	6	psz_end
stmts	35:12	35:29	5	
op	35:12	0:0	6	*
water	35:13	0:0	6	psz_end
op	35:20	0:0	6	++
op	35:23	0:0	6	=
water	35:25	0:0	6	'\0'
water	35:29	0:0	6	;
else	36:8	37:35	4
stmts	37:12	37:35	5	
water	37:12	0:0	6	psz_end
op	37:20	0:0	6	=
water	37:22	0:0	6	p
op	37:24	0:0	6	+
call	37:26	37:34	6	strlen
arg	37:33	37:34	7	p
water	37:33	0:0	8	p
water	37:35	0:0	6	;
if	38:8	42:8	4	(* p)
cond	38:12	38:13	5	* p
op	38:12	0:0	6	*
water	38:13	0:0	6	p
stmts	39:8	42:8	5	
water	39:8	0:0	6	{
water	40:12	0:0	6	b_present
op	40:22	0:0	6	|=
op	40:25	0:0	6	!
call	40:26	40:46	6	strcmp
arg	40:34	40:35	7	p
water	40:34	0:0	8	p
arg	40:37	40:46	7	psz_name
water	40:37	0:0	8	psz_name
water	40:47	0:0	6	;
water	41:12	0:0	6	ppsz_filter
op	41:23	0:0	6	[
water	41:24	0:0	6	i_count
op	41:31	0:0	6	++
op	41:33	0:0	6	]
op	41:35	0:0	6	=
water	41:37	0:0	6	p
water	41:38	0:0	6	;
water	42:8	0:0	6	}
water	43:8	0:0	4	p
op	43:10	0:0	4	=
water	43:12	0:0	4	psz_end
water	43:19	0:0	4	;
water	44:4	0:0	4	}
if	45:4	50:4	2	(b_present == b_add)
cond	45:8	45:21	3	b_present == b_add
water	45:8	0:0	4	b_present
op	45:18	0:0	4	==
water	45:21	0:0	4	b_add
stmts	46:4	50:4	3	
water	46:4	0:0	4	{
call	47:8	47:26	4	free
arg	47:14	47:26	5	ppsz_filter
water	47:14	0:0	6	ppsz_filter
water	47:27	0:0	4	;
call	48:8	48:23	4	free
arg	48:14	48:23	5	psz_list
water	48:14	0:0	6	psz_list
water	48:24	0:0	4	;
return	49:8	49:20	4	false
water	49:15	0:0	5	false
water	50:4	0:0	4	}
if	51:4	64:4	2	(b_add)
cond	51:8	51:8	3	b_add
water	51:8	0:0	4	b_add
stmts	52:4	64:4	3	
water	52:4	0:0	4	{
decl	53:8	53:45	4	int	i_order
op	53:20	0:0	4	=
call	53:22	53:44	5	FilterOrder
arg	53:35	53:44	6	psz_name
water	53:35	0:0	7	psz_name
decl	54:8	54:13	4	int	i
for	55:8	59:8	4	(i = 0 ;i < i_count;i ++)
forinit	55:13	55:18	5	i = 0 ;
water	55:13	0:0	6	i
op	55:15	0:0	6	=
water	55:17	0:0	6	0
water	55:18	0:0	6	;
cond	55:20	55:24	5	i < i_count
water	55:20	0:0	6	i
op	55:22	0:0	6	<
water	55:24	0:0	6	i_count
forexpr	55:33	55:34	5	i ++
water	55:33	0:0	6	i
op	55:34	0:0	6	++
stmts	56:8	59:8	5	
water	56:8	0:0	6	{
if	57:12	58:21	6	(FilterOrder (ppsz_filter [ i ] ) > i_order)
cond	57:16	57:48	7	FilterOrder (ppsz_filter [ i ] ) > i_order
call	57:16	57:44	8	FilterOrder
arg	57:29	57:44	9	ppsz_filter[i]
water	57:29	0:0	10	ppsz_filter
op	57:40	0:0	10	[
water	57:41	0:0	10	i
op	57:42	0:0	10	]
op	57:46	0:0	8	>
water	57:48	0:0	8	i_order
stmts	58:16	58:21	7	
break	58:16	58:21	8	
water	59:8	0:0	6	}
if	60:8	61:95	4	(i < i_count)
cond	60:12	60:16	5	i < i_count
water	60:12	0:0	6	i
op	60:14	0:0	6	<
water	60:16	0:0	6	i_count
stmts	61:12	61:95	5	
call	61:12	61:94	6	memmove
arg	61:21	61:38	7	&ppsz_filter[i+1]
op	61:21	0:0	8	&
water	61:22	0:0	8	ppsz_filter
op	61:33	0:0	8	[
water	61:34	0:0	8	i
op	61:35	0:0	8	+
water	61:36	0:0	8	1
op	61:37	0:0	8	]
arg	61:40	61:55	7	&ppsz_filter[i]
op	61:40	0:0	8	&
water	61:41	0:0	8	ppsz_filter
op	61:52	0:0	8	[
water	61:53	0:0	8	i
op	61:54	0:0	8	]
arg	61:57	61:94	7	(i_count-i)*sizeof(*ppsz_filter)
water	61:57	0:0	8	(
water	61:58	0:0	8	i_count
op	61:66	0:0	8	-
water	61:68	0:0	8	i
water	61:69	0:0	8	)
op	61:71	0:0	8	*
op	61:73	0:0	8	sizeof
water	61:79	0:0	8	(
op	61:80	0:0	8	*
water	61:81	0:0	8	ppsz_filter
water	61:92	0:0	8	)
water	61:95	0:0	6	;
water	62:8	0:0	4	ppsz_filter
op	62:19	0:0	4	[
water	62:20	0:0	4	i
op	62:21	0:0	4	]
op	62:23	0:0	4	=
water	62:25	0:0	4	psz_name
water	62:33	0:0	4	;
water	63:8	0:0	4	i_count
op	63:15	0:0	4	++
water	63:17	0:0	4	;
water	64:4	0:0	4	}
else	65:4	72:4	2
stmts	66:4	72:4	3	
water	66:4	0:0	4	{
for	67:8	71:8	4	( int i = 0 ;i < i_count;i ++)
forinit	0:0	67:22	5	 int i = 0 ;
decl	67:13	67:22	6	int	i
op	67:19	0:0	6	=
water	67:21	0:0	6	0
cond	67:24	67:28	5	i < i_count
water	67:24	0:0	6	i
op	67:26	0:0	6	<
water	67:28	0:0	6	i_count
forexpr	67:37	67:38	5	i ++
water	67:37	0:0	6	i
op	67:38	0:0	6	++
stmts	68:8	71:8	5	
water	68:8	0:0	6	{
if	69:12	70:35	6	(!strcmp (ppsz_filter [ i ] ,psz_name ))
cond	69:16	69:50	7	!strcmp (ppsz_filter [ i ] ,psz_name )
op	69:16	0:0	8	!
call	69:17	69:50	8	strcmp
arg	69:25	69:39	9	ppsz_filter[i]
water	69:25	0:0	10	ppsz_filter
op	69:36	0:0	10	[
water	69:37	0:0	10	i
op	69:38	0:0	10	]
arg	69:41	69:50	9	psz_name
water	69:41	0:0	10	psz_name
stmts	70:16	70:35	7	
water	70:16	0:0	8	ppsz_filter
op	70:27	0:0	8	[
water	70:28	0:0	8	i
op	70:29	0:0	8	]
op	70:31	0:0	8	=
water	70:33	0:0	8	""
water	70:35	0:0	8	;
water	71:8	0:0	6	}
water	72:4	0:0	4	}
decl	73:4	73:23	2	size_t	i_length
op	73:20	0:0	2	=
water	73:22	0:0	2	0
for	74:4	75:48	2	( int i = 0 ;i < i_count;i ++)
forinit	0:0	74:18	3	 int i = 0 ;
decl	74:9	74:18	4	int	i
op	74:15	0:0	4	=
water	74:17	0:0	4	0
cond	74:20	74:24	3	i < i_count
water	74:20	0:0	4	i
op	74:22	0:0	4	<
water	74:24	0:0	4	i_count
forexpr	74:33	74:34	3	i ++
water	74:33	0:0	4	i
op	74:34	0:0	4	++
stmts	75:8	75:48	3	
water	75:8	0:0	4	i_length
op	75:17	0:0	4	+=
water	75:20	0:0	4	1
op	75:22	0:0	4	+
call	75:24	75:47	4	strlen
arg	75:32	75:47	5	ppsz_filter[i]
water	75:32	0:0	6	ppsz_filter
op	75:43	0:0	6	[
water	75:44	0:0	6	i
op	75:45	0:0	6	]
water	75:48	0:0	4	;
decl	76:4	76:42	2	char	*psz_new
op	76:18	0:0	2	=
call	76:20	76:41	3	malloc
arg	76:28	76:41	4	i_length+1
water	76:28	0:0	5	i_length
op	76:37	0:0	5	+
water	76:39	0:0	5	1
op	77:4	0:0	2	*
water	77:5	0:0	2	psz_new
op	77:13	0:0	2	=
water	77:15	0:0	2	'\0'
water	77:19	0:0	2	;
for	78:4	85:4	2	( int i = 0 ;i < i_count;i ++)
forinit	0:0	78:18	3	 int i = 0 ;
decl	78:9	78:18	4	int	i
op	78:15	0:0	4	=
water	78:17	0:0	4	0
cond	78:20	78:24	3	i < i_count
water	78:20	0:0	4	i
op	78:22	0:0	4	<
water	78:24	0:0	4	i_count
forexpr	78:33	78:34	3	i ++
water	78:33	0:0	4	i
op	78:34	0:0	4	++
stmts	79:4	85:4	3	
water	79:4	0:0	4	{
if	80:8	81:20	4	(* ppsz_filter [ i ] == '\0')
cond	80:12	80:31	5	* ppsz_filter [ i ] == '\0'
op	80:12	0:0	6	*
water	80:13	0:0	6	ppsz_filter
op	80:24	0:0	6	[
water	80:25	0:0	6	i
op	80:26	0:0	6	]
op	80:28	0:0	6	==
water	80:31	0:0	6	'\0'
stmts	81:12	81:20	5	
continue	81:12	81:20	6	
if	82:8	83:34	4	(* psz_new)
cond	82:12	82:13	5	* psz_new
op	82:12	0:0	6	*
water	82:13	0:0	6	psz_new
stmts	83:12	83:34	5	
call	83:12	83:33	6	strcat
arg	83:20	83:27	7	psz_new
water	83:20	0:0	8	psz_new
arg	83:29	83:33	7	":"
water	83:29	0:0	8	":"
water	83:34	0:0	6	;
call	84:8	84:40	4	strcat
arg	84:16	84:23	5	psz_new
water	84:16	0:0	6	psz_new
arg	84:25	84:40	5	ppsz_filter[i]
water	84:25	0:0	6	ppsz_filter
op	84:36	0:0	6	[
water	84:37	0:0	6	i
op	84:38	0:0	6	]
water	84:41	0:0	4	;
water	85:4	0:0	4	}
call	86:4	86:22	2	free
arg	86:10	86:22	3	ppsz_filter
water	86:10	0:0	4	ppsz_filter
water	86:23	0:0	2	;
call	87:4	87:19	2	free
arg	87:10	87:19	3	psz_list
water	87:10	0:0	4	psz_list
water	87:20	0:0	2	;
if	88:4	89:54	2	(p_aout)
cond	88:8	88:8	3	p_aout
water	88:8	0:0	4	p_aout
stmts	89:8	89:54	3	
call	89:8	89:53	4	var_SetString
arg	89:23	89:29	5	p_aout
water	89:23	0:0	6	p_aout
arg	89:31	89:43	5	psz_variable
water	89:31	0:0	6	psz_variable
arg	89:45	89:53	5	psz_new
water	89:45	0:0	6	psz_new
water	89:54	0:0	4	;
else	90:4	91:53	2
stmts	91:8	91:53	3	
call	91:8	91:52	4	config_PutPsz
arg	91:23	91:28	5	p_obj
water	91:23	0:0	6	p_obj
arg	91:30	91:42	5	psz_variable
water	91:30	0:0	6	psz_variable
arg	91:44	91:52	5	psz_new
water	91:44	0:0	6	psz_new
water	91:53	0:0	4	;
call	92:4	92:18	2	free
arg	92:10	92:18	3	psz_new
water	92:10	0:0	4	psz_new
water	92:19	0:0	2	;
return	93:4	93:15	2	true
water	93:11	0:0	3	true

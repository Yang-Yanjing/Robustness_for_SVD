func	2:0	34:0	0	void	vlclua_read_custom_meta_data
params	2:33	0:0	1	
param	2:35	2:55	2	vlc_object_t *	p_this
param	2:57	2:69	2	lua_State *	L
param	3:37	3:59	2	input_item_t *	p_input
stmnts	6:4	33:38	1	
call	6:4	6:35	2	vlc_mutex_lock
arg	6:20	6:35	3	&p_input->lock
op	6:20	0:0	4	&
water	6:21	0:0	4	p_input
op	6:28	0:0	4	->
water	6:30	0:0	4	lock
water	6:36	0:0	2	;
if	7:4	8:40	2	(! p_input -> p_meta)
cond	7:8	7:18	3	! p_input -> p_meta
op	7:8	0:0	4	!
water	7:9	0:0	4	p_input
op	7:16	0:0	4	->
water	7:18	0:0	4	p_meta
stmts	8:8	8:40	3	
water	8:8	0:0	4	p_input
op	8:15	0:0	4	->
water	8:17	0:0	4	p_meta
op	8:24	0:0	4	=
call	8:26	8:39	4	vlc_meta_New
water	8:40	0:0	4	;
call	10:4	10:32	2	lua_getfield
arg	10:18	10:19	3	L
water	10:18	0:0	4	L
arg	10:21	10:23	3	-1
op	10:21	0:0	4	-
water	10:22	0:0	4	1
arg	10:25	10:32	3	"meta"
water	10:25	0:0	4	"meta"
water	10:33	0:0	2	;
if	12:4	30:4	2	(lua_istable (L ,- 1 ))
cond	12:8	12:27	3	lua_istable (L ,- 1 )
call	12:8	12:27	4	lua_istable
arg	12:21	12:22	5	L
water	12:21	0:0	6	L
arg	12:24	12:27	5	-1
op	12:24	0:0	6	-
water	12:25	0:0	6	1
stmts	13:4	30:4	3	
water	13:4	0:0	4	{
call	14:8	14:23	4	lua_pushnil
arg	14:21	14:23	5	L
water	14:21	0:0	6	L
water	14:24	0:0	4	;
while	16:8	29:8	4	(lua_next (L ,- 2 ))
cond	16:15	16:31	5	lua_next (L ,- 2 )
call	16:15	16:31	6	lua_next
arg	16:25	16:26	7	L
water	16:25	0:0	8	L
arg	16:28	16:31	7	-2
op	16:28	0:0	8	-
water	16:29	0:0	8	2
stmts	17:8	29:8	5	
water	17:8	0:0	6	{
if	19:12	24:12	6	(!lua_isstring (L ,- 2 ) || !lua_isstring (L ,- 1 ))
cond	19:16	19:63	7	!lua_isstring (L ,- 2 ) || !lua_isstring (L ,- 1 )
op	19:16	0:0	8	!
call	19:17	19:37	8	lua_isstring
arg	19:31	19:32	9	L
water	19:31	0:0	10	L
arg	19:34	19:37	9	-2
op	19:34	0:0	10	-
water	19:35	0:0	10	2
op	19:39	0:0	8	||
op	19:42	0:0	8	!
call	19:43	19:63	8	lua_isstring
arg	19:57	19:58	9	L
water	19:57	0:0	10	L
arg	19:60	19:63	9	-1
op	19:60	0:0	10	-
water	19:61	0:0	10	1
stmts	20:12	24:12	7	
water	20:12	0:0	8	{
call	21:16	21:73	8	msg_Err
arg	21:25	21:31	9	p_this
water	21:25	0:0	10	p_this
arg	21:33	21:73	9	"'meta' keys and values must be strings"
water	21:33	0:0	10	"'meta' keys and values must be strings"
water	21:74	0:0	8	;
call	22:16	22:30	8	lua_pop
arg	22:25	22:26	9	L
water	22:25	0:0	10	L
arg	22:28	22:30	9	1
water	22:28	0:0	10	1
water	22:31	0:0	8	;
continue	23:16	23:24	8	
water	24:12	0:0	8	}
decl	25:12	25:55	6	const char	*psz_key
op	25:32	0:0	6	=
call	25:34	25:54	7	lua_tostring
arg	25:48	25:49	8	L
water	25:48	0:0	9	L
arg	25:51	25:54	8	-2
op	25:51	0:0	9	-
water	25:52	0:0	9	2
decl	26:12	26:57	6	const char	*psz_value
op	26:34	0:0	6	=
call	26:36	26:56	7	lua_tostring
arg	26:50	26:51	8	L
water	26:50	0:0	9	L
arg	26:53	26:56	8	-1
op	26:53	0:0	9	-
water	26:54	0:0	9	1
call	27:12	27:67	6	vlc_meta_AddExtra
arg	27:31	27:46	7	p_input->p_meta
water	27:31	0:0	8	p_input
op	27:38	0:0	8	->
water	27:40	0:0	8	p_meta
arg	27:48	27:55	7	psz_key
water	27:48	0:0	8	psz_key
arg	27:57	27:67	7	psz_value
water	27:57	0:0	8	psz_value
water	27:68	0:0	6	;
call	28:12	28:26	6	lua_pop
arg	28:21	28:22	7	L
water	28:21	0:0	8	L
arg	28:24	28:26	7	1
water	28:24	0:0	8	1
water	28:27	0:0	6	;
water	29:8	0:0	6	}
water	30:4	0:0	4	}
call	31:4	31:18	2	lua_pop
arg	31:13	31:14	3	L
water	31:13	0:0	4	L
arg	31:16	31:18	3	1
water	31:16	0:0	4	1
water	31:19	0:0	2	;
call	33:4	33:37	2	vlc_mutex_unlock
arg	33:22	33:37	3	&p_input->lock
op	33:22	0:0	4	&
water	33:23	0:0	4	p_input
op	33:30	0:0	4	->
water	33:32	0:0	4	lock
water	33:38	0:0	2	;

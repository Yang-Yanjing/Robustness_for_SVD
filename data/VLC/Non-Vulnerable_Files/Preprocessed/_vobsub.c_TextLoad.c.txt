func	2:0	29:0	0	static int	TextLoad
params	2:19	0:0	1	
param	2:21	2:32	2	text_t *	txt
param	2:34	2:46	2	stream_t *	s
stmnts	0:0	28:22	1	
decl	4:4	4:23	2	char	**lines
op	4:17	0:0	2	=
water	4:19	0:0	2	NULL
decl	5:4	5:16	2	size_t	n
op	5:13	0:0	2	=
water	5:15	0:0	2	0
for	7:4	24:4	2	(;;)
forinit	7:9	7:9	3	;
water	7:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	8:4	24:4	3	
water	8:4	0:0	4	{
decl	9:8	9:40	4	char	*psz
op	9:18	0:0	4	=
call	9:20	9:39	5	stream_ReadLine
arg	9:37	9:39	6	s
water	9:37	0:0	7	s
decl	10:8	10:23	4	char	**ppsz_new
if	11:8	15:8	4	(psz == NULL || ( n >= INT_MAX / sizeof ( char * ) ))
cond	11:12	11:55	5	psz == NULL || ( n >= INT_MAX / sizeof ( char * ) )
water	11:12	0:0	6	psz
op	11:16	0:0	6	==
water	11:19	0:0	6	NULL
op	11:24	0:0	6	||
water	11:27	0:0	6	(
water	11:28	0:0	6	n
op	11:30	0:0	6	>=
water	11:33	0:0	6	INT_MAX
op	11:40	0:0	6	/
op	11:41	0:0	6	sizeof
water	11:47	0:0	6	(
water	11:48	0:0	6	char
op	11:53	0:0	6	*
water	11:54	0:0	6	)
water	11:55	0:0	6	)
stmts	12:8	15:8	5	
water	12:8	0:0	6	{
call	13:12	13:22	6	free
arg	13:18	13:22	7	psz
water	13:18	0:0	8	psz
water	13:23	0:0	6	;
break	14:12	14:17	6	
water	15:8	0:0	6	}
water	16:8	0:0	4	ppsz_new
op	16:17	0:0	4	=
call	16:19	16:61	4	realloc
arg	16:28	16:33	5	lines
water	16:28	0:0	6	lines
arg	16:35	16:61	5	(n+1)*sizeof(char*)
water	16:35	0:0	6	(
water	16:36	0:0	6	n
op	16:38	0:0	6	+
water	16:40	0:0	6	1
water	16:41	0:0	6	)
op	16:43	0:0	6	*
op	16:45	0:0	6	sizeof
water	16:52	0:0	6	(
water	16:53	0:0	6	char
op	16:58	0:0	6	*
water	16:59	0:0	6	)
water	16:62	0:0	4	;
if	17:8	21:8	4	(ppsz_new == NULL)
cond	17:12	17:24	5	ppsz_new == NULL
water	17:12	0:0	6	ppsz_new
op	17:21	0:0	6	==
water	17:24	0:0	6	NULL
stmts	18:8	21:8	5	
water	18:8	0:0	6	{
call	19:12	19:22	6	free
arg	19:18	19:22	7	psz
water	19:18	0:0	8	psz
water	19:23	0:0	6	;
break	20:12	20:17	6	
water	21:8	0:0	6	}
water	22:8	0:0	4	lines
op	22:14	0:0	4	=
water	22:16	0:0	4	ppsz_new
water	22:24	0:0	4	;
water	23:8	0:0	4	lines
op	23:13	0:0	4	[
water	23:14	0:0	4	n
op	23:15	0:0	4	++
op	23:17	0:0	4	]
op	23:19	0:0	4	=
water	23:21	0:0	4	psz
water	23:24	0:0	4	;
water	24:4	0:0	4	}
water	25:4	0:0	2	txt
op	25:7	0:0	2	->
water	25:9	0:0	2	i_line_count
op	25:22	0:0	2	=
water	25:24	0:0	2	n
water	25:25	0:0	2	;
water	26:4	0:0	2	txt
op	26:7	0:0	2	->
water	26:9	0:0	2	i_line
op	26:22	0:0	2	=
water	26:24	0:0	2	0
water	26:25	0:0	2	;
water	27:4	0:0	2	txt
op	27:7	0:0	2	->
water	27:9	0:0	2	line
op	27:22	0:0	2	=
water	27:24	0:0	2	lines
water	27:29	0:0	2	;
return	28:4	28:22	2	VLC_SUCCESS
water	28:11	0:0	3	VLC_SUCCESS

func	2:0	33:0	0	block_t *	block_FifoGet
params	2:22	0:0	1	
param	2:24	2:45	2	block_fifo_t *	p_fifo
stmnts	0:0	32:12	1	
decl	4:4	4:14	2	block_t	*b
call	5:4	5:20	2	vlc_testcancel
water	5:21	0:0	2	;
call	6:4	6:34	2	vlc_mutex_lock
arg	6:20	6:34	3	&p_fifo->lock
op	6:20	0:0	4	&
water	6:21	0:0	4	p_fifo
op	6:27	0:0	4	->
water	6:29	0:0	4	lock
water	6:35	0:0	2	;
call	7:4	7:38	2	mutex_cleanup_push
arg	7:24	7:38	3	&p_fifo->lock
op	7:24	0:0	4	&
water	7:25	0:0	4	p_fifo
op	7:31	0:0	4	->
water	7:33	0:0	4	lock
water	7:39	0:0	2	;
while	10:4	11:53	2	(( p_fifo -> p_first == NULL ) && ! p_fifo -> b_force_wake)
cond	10:11	10:51	3	( p_fifo -> p_first == NULL ) && ! p_fifo -> b_force_wake
water	10:11	0:0	4	(
water	10:13	0:0	4	p_fifo
op	10:19	0:0	4	->
water	10:21	0:0	4	p_first
op	10:29	0:0	4	==
water	10:32	0:0	4	NULL
water	10:37	0:0	4	)
op	10:39	0:0	4	&&
op	10:42	0:0	4	!
water	10:43	0:0	4	p_fifo
op	10:49	0:0	4	->
water	10:51	0:0	4	b_force_wake
stmts	11:8	11:53	3	
call	11:8	11:52	4	vlc_cond_wait
arg	11:23	11:36	5	&p_fifo->wait
op	11:23	0:0	6	&
water	11:24	0:0	6	p_fifo
op	11:30	0:0	6	->
water	11:32	0:0	6	wait
arg	11:38	11:52	5	&p_fifo->lock
op	11:38	0:0	6	&
water	11:39	0:0	6	p_fifo
op	11:45	0:0	6	->
water	11:47	0:0	6	lock
water	11:53	0:0	4	;
call	12:4	12:20	2	vlc_cleanup_pop
water	12:21	0:0	2	;
water	13:4	0:0	2	b
op	13:6	0:0	2	=
water	13:8	0:0	2	p_fifo
op	13:14	0:0	2	->
water	13:16	0:0	2	p_first
water	13:23	0:0	2	;
water	14:4	0:0	2	p_fifo
op	14:10	0:0	2	->
water	14:12	0:0	2	b_force_wake
op	14:25	0:0	2	=
water	14:27	0:0	2	false
water	14:32	0:0	2	;
if	15:4	20:4	2	(b == NULL)
cond	15:8	15:13	3	b == NULL
water	15:8	0:0	4	b
op	15:10	0:0	4	==
water	15:13	0:0	4	NULL
stmts	16:4	20:4	3	
water	16:4	0:0	4	{
call	18:8	18:40	4	vlc_mutex_unlock
arg	18:26	18:40	5	&p_fifo->lock
op	18:26	0:0	6	&
water	18:27	0:0	6	p_fifo
op	18:33	0:0	6	->
water	18:35	0:0	6	lock
water	18:41	0:0	4	;
return	19:8	19:19	4	NULL
water	19:15	0:0	5	NULL
water	20:4	0:0	4	}
water	21:4	0:0	2	p_fifo
op	21:10	0:0	2	->
water	21:12	0:0	2	p_first
op	21:20	0:0	2	=
water	21:22	0:0	2	b
op	21:23	0:0	2	->
water	21:25	0:0	2	p_next
water	21:31	0:0	2	;
water	22:4	0:0	2	p_fifo
op	22:10	0:0	2	->
water	22:12	0:0	2	i_depth
op	22:19	0:0	2	--
water	22:21	0:0	2	;
water	23:4	0:0	2	p_fifo
op	23:10	0:0	2	->
water	23:12	0:0	2	i_size
op	23:19	0:0	2	-=
water	23:22	0:0	2	b
op	23:23	0:0	2	->
water	23:25	0:0	2	i_buffer
water	23:33	0:0	2	;
if	24:4	27:4	2	(p_fifo -> p_first == NULL)
cond	24:8	24:27	3	p_fifo -> p_first == NULL
water	24:8	0:0	4	p_fifo
op	24:14	0:0	4	->
water	24:16	0:0	4	p_first
op	24:24	0:0	4	==
water	24:27	0:0	4	NULL
stmts	25:4	27:4	3	
water	25:4	0:0	4	{
water	26:8	0:0	4	p_fifo
op	26:14	0:0	4	->
water	26:16	0:0	4	pp_last
op	26:24	0:0	4	=
op	26:26	0:0	4	&
water	26:27	0:0	4	p_fifo
op	26:33	0:0	4	->
water	26:35	0:0	4	p_first
water	26:42	0:0	4	;
water	27:4	0:0	4	}
call	29:4	29:43	2	vlc_cond_broadcast
arg	29:24	29:43	3	&p_fifo->wait_room
op	29:24	0:0	4	&
water	29:25	0:0	4	p_fifo
op	29:31	0:0	4	->
water	29:33	0:0	4	wait_room
water	29:44	0:0	2	;
call	30:4	30:36	2	vlc_mutex_unlock
arg	30:22	30:36	3	&p_fifo->lock
op	30:22	0:0	4	&
water	30:23	0:0	4	p_fifo
op	30:29	0:0	4	->
water	30:31	0:0	4	lock
water	30:37	0:0	2	;
water	31:4	0:0	2	b
op	31:5	0:0	2	->
water	31:7	0:0	2	p_next
op	31:14	0:0	2	=
water	31:16	0:0	2	NULL
water	31:20	0:0	2	;
return	32:4	32:12	2	b
water	32:11	0:0	3	b

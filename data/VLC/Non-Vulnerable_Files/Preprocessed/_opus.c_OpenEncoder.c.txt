func	2:0	93:0	0	static int	OpenEncoder
params	2:22	0:0	1	
param	2:23	2:43	2	vlc_object_t *	p_this
stmnts	0:0	92:17	1	
decl	4:4	4:40	2	encoder_t	*enc
op	4:19	0:0	2	=
water	4:21	0:0	2	(
water	4:22	0:0	2	encoder_t
op	4:32	0:0	2	*
water	4:33	0:0	2	)
water	4:34	0:0	2	p_this
if	5:4	6:27	2	(enc -> fmt_out . i_codec != VLC_CODEC_OPUS)
cond	5:8	5:32	3	enc -> fmt_out . i_codec != VLC_CODEC_OPUS
water	5:8	0:0	4	enc
op	5:11	0:0	4	->
water	5:13	0:0	4	fmt_out
op	5:20	0:0	4	.
water	5:21	0:0	4	i_codec
op	5:29	0:0	4	!=
water	5:32	0:0	4	VLC_CODEC_OPUS
stmts	6:8	6:27	3	
return	6:8	6:27	4	VLC_EGENERIC
water	6:15	0:0	5	VLC_EGENERIC
decl	7:4	7:45	2	encoder_sys_t	*sys
op	7:23	0:0	2	=
call	7:25	7:44	3	malloc
arg	7:32	7:44	4	sizeof(*sys)
op	7:32	0:0	5	sizeof
water	7:38	0:0	5	(
op	7:39	0:0	5	*
water	7:40	0:0	5	sys
water	7:43	0:0	5	)
if	8:4	9:25	2	(! sys)
cond	8:8	8:9	3	! sys
op	8:8	0:0	4	!
water	8:9	0:0	4	sys
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
decl	10:4	10:28	2	int	status
op	10:15	0:0	2	=
water	10:17	0:0	2	VLC_SUCCESS
water	11:4	0:0	2	sys
op	11:7	0:0	2	->
water	11:9	0:0	2	buffer
op	11:16	0:0	2	=
water	11:18	0:0	2	NULL
water	11:22	0:0	2	;
water	12:4	0:0	2	sys
op	12:7	0:0	2	->
water	12:9	0:0	2	enc
op	12:13	0:0	2	=
water	12:15	0:0	2	NULL
water	12:19	0:0	2	;
water	13:4	0:0	2	enc
op	13:7	0:0	2	->
water	13:9	0:0	2	pf_encode_audio
op	13:25	0:0	2	=
water	13:27	0:0	2	Encode
water	13:33	0:0	2	;
water	14:4	0:0	2	enc
op	14:7	0:0	2	->
water	14:9	0:0	2	fmt_in
op	14:15	0:0	2	.
water	14:16	0:0	2	i_codec
op	14:24	0:0	2	=
water	14:26	0:0	2	VLC_CODEC_FL32
water	14:40	0:0	2	;
water	15:4	0:0	2	enc
op	15:7	0:0	2	->
water	15:9	0:0	2	fmt_in
op	15:15	0:0	2	.
water	15:16	0:0	2	audio
op	15:21	0:0	2	.
water	15:22	0:0	2	i_rate
op	15:29	0:0	2	=
water	16:4	0:0	2	enc
op	16:7	0:0	2	->
water	16:9	0:0	2	fmt_out
op	16:16	0:0	2	.
water	16:17	0:0	2	audio
op	16:22	0:0	2	.
water	16:23	0:0	2	i_rate
op	16:30	0:0	2	=
water	16:32	0:0	2	48000
water	16:37	0:0	2	;
water	17:4	0:0	2	enc
op	17:7	0:0	2	->
water	17:9	0:0	2	fmt_out
op	17:16	0:0	2	.
water	17:17	0:0	2	audio
op	17:22	0:0	2	.
water	17:23	0:0	2	i_channels
op	17:34	0:0	2	=
water	17:36	0:0	2	enc
op	17:39	0:0	2	->
water	17:41	0:0	2	fmt_in
op	17:47	0:0	2	.
water	17:48	0:0	2	audio
op	17:53	0:0	2	.
water	17:54	0:0	2	i_channels
water	17:64	0:0	2	;
decl	18:4	18:21	2	OpusHeader	header
if	19:4	26:4	2	(opus_prepare_header (enc -> fmt_out . audio . i_channels ,enc -> fmt_out . audio . i_rate ,& header ))
cond	19:8	21:19	3	opus_prepare_header (enc -> fmt_out . audio . i_channels ,enc -> fmt_out . audio . i_rate ,& header )
call	19:8	21:19	4	opus_prepare_header
arg	19:28	19:57	5	enc->fmt_out.audio.i_channels
water	19:28	0:0	6	enc
op	19:31	0:0	6	->
water	19:33	0:0	6	fmt_out
op	19:40	0:0	6	.
water	19:41	0:0	6	audio
op	19:46	0:0	6	.
water	19:47	0:0	6	i_channels
arg	20:12	20:37	5	enc->fmt_out.audio.i_rate
water	20:12	0:0	6	enc
op	20:15	0:0	6	->
water	20:17	0:0	6	fmt_out
op	20:24	0:0	6	.
water	20:25	0:0	6	audio
op	20:30	0:0	6	.
water	20:31	0:0	6	i_rate
arg	21:12	21:19	5	&header
op	21:12	0:0	6	&
water	21:13	0:0	6	header
stmts	22:4	26:4	3	
water	22:4	0:0	4	{
call	23:8	23:48	4	msg_Err
arg	23:16	23:19	5	enc
water	23:16	0:0	6	enc
arg	23:21	23:48	5	"Failed to prepare header."
water	23:21	0:0	6	"Failed to prepare header."
water	23:49	0:0	4	;
water	24:8	0:0	4	status
op	24:15	0:0	4	=
water	24:17	0:0	4	VLC_ENOMEM
water	24:27	0:0	4	;
goto	25:8	25:18	4	error
water	25:13	0:0	5	error
water	26:4	0:0	4	}
water	28:4	0:0	2	sys
op	28:7	0:0	2	->
water	28:9	0:0	2	nb_streams
op	28:20	0:0	2	=
water	28:22	0:0	2	header
op	28:28	0:0	2	.
water	28:29	0:0	2	nb_streams
water	28:39	0:0	2	;
decl	29:4	29:11	2	int	err
water	30:4	0:0	2	sys
op	30:7	0:0	2	->
water	30:9	0:0	2	enc
op	30:13	0:0	2	=
call	31:8	34:44	2	opus_multistream_surround_encoder_create
arg	31:49	31:73	3	enc->fmt_in.audio.i_rate
water	31:49	0:0	4	enc
op	31:52	0:0	4	->
water	31:54	0:0	4	fmt_in
op	31:60	0:0	4	.
water	31:61	0:0	4	audio
op	31:66	0:0	4	.
water	31:67	0:0	4	i_rate
arg	32:16	32:44	3	enc->fmt_in.audio.i_channels
water	32:16	0:0	4	enc
op	32:19	0:0	4	->
water	32:21	0:0	4	fmt_in
op	32:27	0:0	4	.
water	32:28	0:0	4	audio
op	32:33	0:0	4	.
water	32:34	0:0	4	i_channels
arg	32:46	32:68	3	header.channel_mapping
water	32:46	0:0	4	header
op	32:52	0:0	4	.
water	32:53	0:0	4	channel_mapping
arg	33:16	33:34	3	&header.nb_streams
op	33:16	0:0	4	&
water	33:17	0:0	4	header
op	33:23	0:0	4	.
water	33:24	0:0	4	nb_streams
arg	33:36	33:54	3	&header.nb_coupled
op	33:36	0:0	4	&
water	33:37	0:0	4	header
op	33:43	0:0	4	.
water	33:44	0:0	4	nb_coupled
arg	33:56	33:73	3	header.stream_map
water	33:56	0:0	4	header
op	33:62	0:0	4	.
water	33:63	0:0	4	stream_map
arg	34:16	34:38	3	OPUS_APPLICATION_AUDIO
water	34:16	0:0	4	OPUS_APPLICATION_AUDIO
arg	34:40	34:44	3	&err
op	34:40	0:0	4	&
water	34:41	0:0	4	err
water	34:45	0:0	2	;
if	35:4	41:4	2	(err != OPUS_OK)
cond	35:8	35:15	3	err != OPUS_OK
water	35:8	0:0	4	err
op	35:12	0:0	4	!=
water	35:15	0:0	4	OPUS_OK
stmts	36:4	41:4	3	
water	36:4	0:0	4	{
call	37:8	37:62	4	msg_Err
arg	37:16	37:19	5	enc
water	37:16	0:0	6	enc
arg	37:21	37:57	5	"Could not create encoder: error %d"
water	37:21	0:0	6	"Could not create encoder: error %d"
arg	37:59	37:62	5	err
water	37:59	0:0	6	err
water	37:63	0:0	4	;
water	38:8	0:0	4	sys
op	38:11	0:0	4	->
water	38:13	0:0	4	enc
op	38:17	0:0	4	=
water	38:19	0:0	4	NULL
water	38:23	0:0	4	;
water	39:8	0:0	4	status
op	39:15	0:0	4	=
water	39:17	0:0	4	VLC_EGENERIC
water	39:29	0:0	4	;
goto	40:8	40:18	4	error
water	40:13	0:0	5	error
water	41:4	0:0	4	}
if	43:4	44:90	2	(enc -> fmt_out . i_bitrate)
cond	43:8	43:21	3	enc -> fmt_out . i_bitrate
water	43:8	0:0	4	enc
op	43:11	0:0	4	->
water	43:13	0:0	4	fmt_out
op	43:20	0:0	4	.
water	43:21	0:0	4	i_bitrate
stmts	44:8	44:90	3	
call	44:8	44:89	4	opus_multistream_encoder_ctl
arg	44:37	44:45	5	sys->enc
water	44:37	0:0	6	sys
op	44:40	0:0	6	->
water	44:42	0:0	6	enc
arg	44:47	44:89	5	OPUS_SET_BITRATE(enc->fmt_out.i_bitrate)
call	44:47	44:88	6	OPUS_SET_BITRATE
arg	44:65	44:88	7	enc->fmt_out.i_bitrate
water	44:65	0:0	8	enc
op	44:68	0:0	8	->
water	44:70	0:0	8	fmt_out
op	44:77	0:0	8	.
water	44:78	0:0	8	i_bitrate
water	44:90	0:0	4	;
water	47:4	0:0	2	enc
op	47:7	0:0	2	->
water	47:9	0:0	2	p_sys
op	47:15	0:0	2	=
water	47:17	0:0	2	sys
water	47:20	0:0	2	;
water	48:4	0:0	2	sys
op	48:7	0:0	2	->
water	48:9	0:0	2	buffer
op	48:16	0:0	2	=
call	48:18	48:74	2	malloc
arg	48:25	48:74	3	OPUS_FRAME_SIZE*header.channels*sizeof(float)
water	48:25	0:0	4	OPUS_FRAME_SIZE
op	48:41	0:0	4	*
water	48:43	0:0	4	header
op	48:49	0:0	4	.
water	48:50	0:0	4	channels
op	48:59	0:0	4	*
op	48:61	0:0	4	sizeof
water	48:67	0:0	4	(
water	48:68	0:0	4	float
water	48:73	0:0	4	)
water	48:75	0:0	2	;
if	49:4	52:4	2	(! sys -> buffer)
cond	49:8	49:14	3	! sys -> buffer
op	49:8	0:0	4	!
water	49:9	0:0	4	sys
op	49:12	0:0	4	->
water	49:14	0:0	4	buffer
stmts	49:22	52:4	3	
water	49:22	0:0	4	{
water	50:8	0:0	4	status
op	50:15	0:0	4	=
water	50:17	0:0	4	VLC_ENOMEM
water	50:27	0:0	4	;
goto	51:8	51:18	4	error
water	51:13	0:0	5	error
water	52:4	0:0	4	}
water	53:4	0:0	2	sys
op	53:7	0:0	2	->
water	53:9	0:0	2	i_nb_samples
op	53:22	0:0	2	=
water	53:24	0:0	2	0
water	53:25	0:0	2	;
water	54:4	0:0	2	sys
op	54:7	0:0	2	->
water	54:9	0:0	2	i_samples_delay
op	54:25	0:0	2	=
water	54:27	0:0	2	0
water	54:28	0:0	2	;
decl	55:4	56:54	2	int	ret
op	55:12	0:0	2	=
call	55:14	56:53	3	opus_multistream_encoder_ctl
arg	55:43	55:58	4	enc->p_sys->enc
water	55:43	0:0	5	enc
op	55:46	0:0	5	->
water	55:48	0:0	5	p_sys
op	55:53	0:0	5	->
water	55:55	0:0	5	enc
arg	56:12	56:53	4	OPUS_GET_LOOKAHEAD(&sys->i_samples_delay)
call	56:12	56:52	5	OPUS_GET_LOOKAHEAD
arg	56:31	56:52	6	&sys->i_samples_delay
op	56:31	0:0	7	&
water	56:32	0:0	7	sys
op	56:35	0:0	7	->
water	56:37	0:0	7	i_samples_delay
if	57:4	59:35	2	(ret != OPUS_OK)
cond	57:8	57:15	3	ret != OPUS_OK
water	57:8	0:0	4	ret
op	57:12	0:0	4	!=
water	57:15	0:0	4	OPUS_OK
stmts	58:8	59:35	3	
call	58:8	59:34	4	msg_Err
arg	58:16	58:19	5	enc
water	58:16	0:0	6	enc
arg	58:21	58:70	5	"Unable to get number of lookahead samples: %s\n"
water	58:21	0:0	6	"Unable to get number of lookahead samples: %s\n"
arg	59:16	59:34	5	opus_strerror(ret)
call	59:16	59:33	6	opus_strerror
arg	59:30	59:33	7	ret
water	59:30	0:0	8	ret
water	59:35	0:0	4	;
water	60:4	0:0	2	header
op	60:10	0:0	2	.
water	60:11	0:0	2	preskip
op	60:19	0:0	2	=
water	60:21	0:0	2	sys
op	60:24	0:0	2	->
water	60:26	0:0	2	i_samples_delay
water	60:41	0:0	2	;
if	62:4	68:4	2	(opus_write_header (( uint8_t * * ) & enc -> fmt_out . p_extra ,& enc -> fmt_out . i_extra ,& header ,opus_get_version_string ( ) ))
cond	62:8	63:83	3	opus_write_header (( uint8_t * * ) & enc -> fmt_out . p_extra ,& enc -> fmt_out . i_extra ,& header ,opus_get_version_string ( ) )
call	62:8	63:83	4	opus_write_header
arg	62:26	62:60	5	(uint8_t**)&enc->fmt_out.p_extra
water	62:26	0:0	6	(
water	62:27	0:0	6	uint8_t
op	62:35	0:0	6	*
op	62:36	0:0	6	*
water	62:37	0:0	6	)
op	62:39	0:0	6	&
water	62:40	0:0	6	enc
op	62:43	0:0	6	->
water	62:45	0:0	6	fmt_out
op	62:52	0:0	6	.
water	62:53	0:0	6	p_extra
arg	63:26	63:47	5	&enc->fmt_out.i_extra
op	63:26	0:0	6	&
water	63:27	0:0	6	enc
op	63:30	0:0	6	->
water	63:32	0:0	6	fmt_out
op	63:39	0:0	6	.
water	63:40	0:0	6	i_extra
arg	63:49	63:56	5	&header
op	63:49	0:0	6	&
water	63:50	0:0	6	header
arg	63:58	63:83	5	opus_get_version_string()
call	63:58	63:82	6	opus_get_version_string
stmts	64:4	68:4	3	
water	64:4	0:0	4	{
call	65:8	65:46	4	msg_Err
arg	65:16	65:19	5	enc
water	65:16	0:0	6	enc
arg	65:21	65:46	5	"Failed to write header."
water	65:21	0:0	6	"Failed to write header."
water	65:47	0:0	4	;
water	66:8	0:0	4	status
op	66:15	0:0	4	=
water	66:17	0:0	4	VLC_ENOMEM
water	66:27	0:0	4	;
goto	67:8	67:18	4	error
water	67:13	0:0	5	error
water	68:4	0:0	4	}
if	69:4	81:4	2	(sys -> i_samples_delay > 0)
cond	69:8	69:31	3	sys -> i_samples_delay > 0
water	69:8	0:0	4	sys
op	69:11	0:0	4	->
water	69:13	0:0	4	i_samples_delay
op	69:29	0:0	4	>
water	69:31	0:0	4	0
stmts	70:4	81:4	3	
water	70:4	0:0	4	{
water	71:8	0:0	4	const
water	71:14	0:0	4	unsigned
water	71:23	0:0	4	padding_samples
op	71:39	0:0	4	=
water	71:41	0:0	4	sys
op	71:44	0:0	4	->
water	71:46	0:0	4	i_samples_delay
op	71:62	0:0	4	*
water	72:12	0:0	4	enc
op	72:15	0:0	4	->
water	72:17	0:0	4	fmt_out
op	72:24	0:0	4	.
water	72:25	0:0	4	audio
op	72:30	0:0	4	.
water	72:31	0:0	4	i_channels
water	72:41	0:0	4	;
water	73:8	0:0	4	sys
op	73:11	0:0	4	->
water	73:13	0:0	4	padding
op	73:21	0:0	4	=
call	73:23	73:66	4	block_Alloc
arg	73:35	73:66	5	padding_samples*sizeof(float)
water	73:35	0:0	6	padding_samples
op	73:51	0:0	6	*
op	73:53	0:0	6	sizeof
water	73:59	0:0	6	(
water	73:60	0:0	6	float
water	73:65	0:0	6	)
water	73:67	0:0	4	;
if	74:8	77:8	4	(! sys -> padding)
cond	74:12	74:18	5	! sys -> padding
op	74:12	0:0	6	!
water	74:13	0:0	6	sys
op	74:16	0:0	6	->
water	74:18	0:0	6	padding
stmts	74:27	77:8	5	
water	74:27	0:0	6	{
water	75:12	0:0	6	status
op	75:19	0:0	6	=
water	75:21	0:0	6	VLC_ENOMEM
water	75:31	0:0	6	;
goto	76:12	76:22	6	error
water	76:17	0:0	7	error
water	77:8	0:0	6	}
water	78:8	0:0	4	sys
op	78:11	0:0	4	->
water	78:13	0:0	4	padding
op	78:20	0:0	4	->
water	78:22	0:0	4	i_nb_samples
op	78:35	0:0	4	=
water	78:37	0:0	4	sys
op	78:40	0:0	4	->
water	78:42	0:0	4	i_samples_delay
water	78:57	0:0	4	;
decl	79:8	79:57	4	float	*pad_ptr
op	79:23	0:0	4	=
water	79:25	0:0	4	(
water	79:26	0:0	4	float
op	79:32	0:0	4	*
water	79:33	0:0	4	)
water	79:35	0:0	4	sys
op	79:38	0:0	4	->
water	79:40	0:0	4	padding
op	79:47	0:0	4	->
water	79:49	0:0	4	p_buffer
call	80:8	80:58	4	memset
arg	80:15	80:22	5	pad_ptr
water	80:15	0:0	6	pad_ptr
arg	80:24	80:25	5	0
water	80:24	0:0	6	0
arg	80:27	80:58	5	padding_samples*sizeof(float)
water	80:27	0:0	6	padding_samples
op	80:43	0:0	6	*
op	80:45	0:0	6	sizeof
water	80:51	0:0	6	(
water	80:52	0:0	6	float
water	80:57	0:0	6	)
water	80:59	0:0	4	;
water	81:4	0:0	4	}
else	82:4	85:4	2
stmts	83:4	85:4	3	
water	83:4	0:0	4	{
water	84:8	0:0	4	sys
op	84:11	0:0	4	->
water	84:13	0:0	4	padding
op	84:21	0:0	4	=
water	84:23	0:0	4	NULL
water	84:27	0:0	4	;
water	85:4	0:0	4	}
return	86:4	86:17	2	status
water	86:11	0:0	3	status
label	87:0	87:5	2	error :
if	88:4	89:50	2	(sys -> enc)
cond	88:8	88:13	3	sys -> enc
water	88:8	0:0	4	sys
op	88:11	0:0	4	->
water	88:13	0:0	4	enc
stmts	89:8	89:50	3	
call	89:8	89:49	4	opus_multistream_encoder_destroy
arg	89:41	89:49	5	sys->enc
water	89:41	0:0	6	sys
op	89:44	0:0	6	->
water	89:46	0:0	6	enc
water	89:50	0:0	4	;
call	90:4	90:20	2	free
arg	90:9	90:20	3	sys->buffer
water	90:9	0:0	4	sys
op	90:12	0:0	4	->
water	90:14	0:0	4	buffer
water	90:21	0:0	2	;
call	91:4	91:12	2	free
arg	91:9	91:12	3	sys
water	91:9	0:0	4	sys
water	91:13	0:0	2	;
return	92:4	92:17	2	status
water	92:11	0:0	3	status

func	2:0	52:0	0	static int	SetFont
params	2:18	0:0	1	
param	2:20	2:38	2	filter_t *	p_filter
param	2:40	2:51	2	int	i_size
stmnts	0:0	51:22	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:19	2	LOGFONT	logfont
if	6:4	6:67	2	(i_size && i_size == p_sys -> i_font_size)
cond	6:8	6:35	3	i_size && i_size == p_sys -> i_font_size
water	6:8	0:0	4	i_size
op	6:15	0:0	4	&&
water	6:18	0:0	4	i_size
op	6:25	0:0	4	==
water	6:28	0:0	4	p_sys
op	6:33	0:0	4	->
water	6:35	0:0	4	i_font_size
stmts	6:49	6:67	3	
return	6:49	6:67	4	VLC_SUCCESS
water	6:56	0:0	5	VLC_SUCCESS
if	7:4	30:4	2	(! i_size)
cond	7:8	7:9	3	! i_size
op	7:8	0:0	4	!
water	7:9	0:0	4	i_size
stmts	8:4	30:4	3	
water	8:4	0:0	4	{
decl	9:8	9:23	4	vlc_value_t	val
if	10:8	12:30	4	(! p_sys -> i_default_font_size && p_sys -> i_display_height == ( int ) p_filter -> fmt_out . video . i_height)
cond	10:12	11:68	5	! p_sys -> i_default_font_size && p_sys -> i_display_height == ( int ) p_filter -> fmt_out . video . i_height
op	10:12	0:0	6	!
water	10:13	0:0	6	p_sys
op	10:18	0:0	6	->
water	10:20	0:0	6	i_default_font_size
op	10:40	0:0	6	&&
water	11:12	0:0	6	p_sys
op	11:17	0:0	6	->
water	11:19	0:0	6	i_display_height
op	11:36	0:0	6	==
water	11:39	0:0	6	(
water	11:40	0:0	6	int
water	11:43	0:0	6	)
water	11:44	0:0	6	p_filter
op	11:52	0:0	6	->
water	11:54	0:0	6	fmt_out
op	11:61	0:0	6	.
water	11:62	0:0	6	video
op	11:67	0:0	6	.
water	11:68	0:0	6	i_height
stmts	12:12	12:30	5	
return	12:12	12:30	6	VLC_SUCCESS
water	12:19	0:0	7	VLC_SUCCESS
if	13:8	16:8	4	(p_sys -> i_default_font_size)
cond	13:12	13:19	5	p_sys -> i_default_font_size
water	13:12	0:0	6	p_sys
op	13:17	0:0	6	->
water	13:19	0:0	6	i_default_font_size
stmts	14:8	16:8	5	
water	14:8	0:0	6	{
water	15:12	0:0	6	i_size
op	15:19	0:0	6	=
water	15:21	0:0	6	p_sys
op	15:26	0:0	6	->
water	15:28	0:0	6	i_default_font_size
water	15:47	0:0	6	;
water	16:8	0:0	6	}
else	17:8	23:8	4
stmts	18:8	23:8	5	
water	18:8	0:0	6	{
call	19:12	19:62	6	var_Get
arg	19:21	19:29	7	p_filter
water	19:21	0:0	8	p_filter
arg	19:31	19:55	7	"win32text-rel-fontsize"
water	19:31	0:0	8	"win32text-rel-fontsize"
arg	19:57	19:62	7	&val
op	19:57	0:0	8	&
water	19:58	0:0	8	val
water	19:63	0:0	6	;
water	20:12	0:0	6	i_size
op	20:19	0:0	6	=
water	20:21	0:0	6	(
water	20:22	0:0	6	int
water	20:25	0:0	6	)
water	20:26	0:0	6	p_filter
op	20:34	0:0	6	->
water	20:36	0:0	6	fmt_out
op	20:43	0:0	6	.
water	20:44	0:0	6	video
op	20:49	0:0	6	.
water	20:50	0:0	6	i_height
op	20:59	0:0	6	/
water	20:61	0:0	6	val
op	20:64	0:0	6	.
water	20:65	0:0	6	i_int
water	20:70	0:0	6	;
water	21:12	0:0	6	p_filter
op	21:20	0:0	6	->
water	21:22	0:0	6	p_sys
op	21:27	0:0	6	->
water	21:29	0:0	6	i_display_height
op	21:46	0:0	6	=
water	22:16	0:0	6	p_filter
op	22:24	0:0	6	->
water	22:26	0:0	6	fmt_out
op	22:33	0:0	6	.
water	22:34	0:0	6	video
op	22:39	0:0	6	.
water	22:40	0:0	6	i_height
water	22:48	0:0	6	;
water	23:8	0:0	6	}
if	24:8	28:8	4	(i_size <= 0)
cond	24:12	24:22	5	i_size <= 0
water	24:12	0:0	6	i_size
op	24:19	0:0	6	<=
water	24:22	0:0	6	0
stmts	25:8	28:8	5	
water	25:8	0:0	6	{
call	26:12	26:61	6	msg_Warn
arg	26:22	26:30	7	p_filter
water	26:22	0:0	8	p_filter
arg	26:32	26:61	7	"invalid fontsize, using 12"
water	26:32	0:0	8	"invalid fontsize, using 12"
water	26:62	0:0	6	;
water	27:12	0:0	6	i_size
op	27:19	0:0	6	=
water	27:21	0:0	6	12
water	27:23	0:0	6	;
water	28:8	0:0	6	}
call	29:8	29:56	4	msg_Dbg
arg	29:17	29:25	5	p_filter
water	29:17	0:0	6	p_filter
arg	29:27	29:47	5	"using fontsize: %i"
water	29:27	0:0	6	"using fontsize: %i"
arg	29:49	29:56	5	i_size
water	29:49	0:0	6	i_size
water	29:57	0:0	4	;
water	30:4	0:0	4	}
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	i_font_size
op	31:23	0:0	2	=
water	31:25	0:0	2	i_size
water	31:31	0:0	2	;
if	32:4	32:72	2	(p_sys -> hfont_bak)
cond	32:8	32:15	3	p_sys -> hfont_bak
water	32:8	0:0	4	p_sys
op	32:13	0:0	4	->
water	32:15	0:0	4	hfont_bak
stmts	32:27	32:72	3	
call	32:27	32:71	4	SelectObject
arg	32:41	32:52	5	p_sys->hcdc
water	32:41	0:0	6	p_sys
op	32:46	0:0	6	->
water	32:48	0:0	6	hcdc
arg	32:54	32:71	5	p_sys->hfont_bak
water	32:54	0:0	6	p_sys
op	32:59	0:0	6	->
water	32:61	0:0	6	hfont_bak
water	32:72	0:0	4	;
if	33:4	33:51	2	(p_sys -> hfont)
cond	33:8	33:15	3	p_sys -> hfont
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	hfont
stmts	33:23	33:51	3	
call	33:23	33:50	4	DeleteObject
arg	33:37	33:50	5	p_sys->hfont
water	33:37	0:0	6	p_sys
op	33:42	0:0	6	->
water	33:44	0:0	6	hfont
water	33:51	0:0	4	;
water	34:4	0:0	2	i_size
op	34:11	0:0	2	=
water	34:13	0:0	2	i_size
op	34:20	0:0	2	*
water	34:22	0:0	2	(
water	34:23	0:0	2	int64_t
water	34:30	0:0	2	)
water	34:31	0:0	2	p_sys
op	34:36	0:0	2	->
water	34:38	0:0	2	i_logpy
op	34:46	0:0	2	/
water	34:48	0:0	2	72
water	34:50	0:0	2	;
water	35:4	0:0	2	logfont
op	35:11	0:0	2	.
water	35:12	0:0	2	lfHeight
op	35:21	0:0	2	=
water	35:23	0:0	2	i_size
water	35:29	0:0	2	;
water	36:4	0:0	2	logfont
op	36:11	0:0	2	.
water	36:12	0:0	2	lfWidth
op	36:20	0:0	2	=
water	36:22	0:0	2	0
water	36:23	0:0	2	;
water	37:4	0:0	2	logfont
op	37:11	0:0	2	.
water	37:12	0:0	2	lfEscapement
op	37:25	0:0	2	=
water	37:27	0:0	2	0
water	37:28	0:0	2	;
water	38:4	0:0	2	logfont
op	38:11	0:0	2	.
water	38:12	0:0	2	lfOrientation
op	38:26	0:0	2	=
water	38:28	0:0	2	0
water	38:29	0:0	2	;
water	39:4	0:0	2	logfont
op	39:11	0:0	2	.
water	39:12	0:0	2	lfWeight
op	39:21	0:0	2	=
water	39:23	0:0	2	0
water	39:24	0:0	2	;
water	40:4	0:0	2	logfont
op	40:11	0:0	2	.
water	40:12	0:0	2	lfItalic
op	40:21	0:0	2	=
water	40:23	0:0	2	FALSE
water	40:28	0:0	2	;
water	41:4	0:0	2	logfont
op	41:11	0:0	2	.
water	41:12	0:0	2	lfUnderline
op	41:24	0:0	2	=
water	41:26	0:0	2	FALSE
water	41:31	0:0	2	;
water	42:4	0:0	2	logfont
op	42:11	0:0	2	.
water	42:12	0:0	2	lfStrikeOut
op	42:24	0:0	2	=
water	42:26	0:0	2	FALSE
water	42:31	0:0	2	;
water	43:4	0:0	2	logfont
op	43:11	0:0	2	.
water	43:12	0:0	2	lfCharSet
op	43:22	0:0	2	=
water	43:24	0:0	2	ANSI_CHARSET
water	43:36	0:0	2	;
water	44:4	0:0	2	logfont
op	44:11	0:0	2	.
water	44:12	0:0	2	lfOutPrecision
op	44:27	0:0	2	=
water	44:29	0:0	2	OUT_DEFAULT_PRECIS
water	44:47	0:0	2	;
water	45:4	0:0	2	logfont
op	45:11	0:0	2	.
water	45:12	0:0	2	lfClipPrecision
op	45:28	0:0	2	=
water	45:30	0:0	2	CLIP_DEFAULT_PRECIS
water	45:49	0:0	2	;
water	46:4	0:0	2	logfont
op	46:11	0:0	2	.
water	46:12	0:0	2	lfQuality
op	46:22	0:0	2	=
water	46:24	0:0	2	ANTIALIASED_QUALITY
water	46:43	0:0	2	;
water	47:4	0:0	2	logfont
op	47:11	0:0	2	.
water	47:12	0:0	2	lfPitchAndFamily
op	47:29	0:0	2	=
water	47:31	0:0	2	DEFAULT_PITCH
water	47:44	0:0	2	;
call	48:4	48:65	2	memcpy
arg	48:12	48:30	3	logfont.lfFaceName
water	48:12	0:0	4	logfont
op	48:19	0:0	4	.
water	48:20	0:0	4	lfFaceName
arg	48:32	48:43	3	_T("Arial")
call	48:32	48:42	4	_T
arg	48:35	48:42	5	"Arial"
water	48:35	0:0	6	"Arial"
arg	48:45	48:65	3	sizeof(_T("Arial"))
op	48:45	0:0	4	sizeof
water	48:51	0:0	4	(
call	48:52	48:62	4	_T
arg	48:55	48:62	5	"Arial"
water	48:55	0:0	6	"Arial"
water	48:63	0:0	4	)
water	48:66	0:0	2	;
water	49:4	0:0	2	p_sys
op	49:9	0:0	2	->
water	49:11	0:0	2	hfont
op	49:17	0:0	2	=
call	49:19	49:48	2	CreateFontIndirect
arg	49:39	49:48	3	&logfont
op	49:39	0:0	4	&
water	49:40	0:0	4	logfont
water	49:49	0:0	2	;
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	hfont_bak
op	50:21	0:0	2	=
call	50:23	50:63	2	SelectObject
arg	50:37	50:48	3	p_sys->hcdc
water	50:37	0:0	4	p_sys
op	50:42	0:0	4	->
water	50:44	0:0	4	hcdc
arg	50:50	50:63	3	p_sys->hfont
water	50:50	0:0	4	p_sys
op	50:55	0:0	4	->
water	50:57	0:0	4	hfont
water	50:64	0:0	2	;
return	51:4	51:22	2	VLC_SUCCESS
water	51:11	0:0	3	VLC_SUCCESS

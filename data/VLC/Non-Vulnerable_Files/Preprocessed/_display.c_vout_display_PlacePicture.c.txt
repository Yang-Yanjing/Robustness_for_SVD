func	2:0	68:0	0	void	vout_display_PlacePicture
params	2:30	0:0	1	
param	2:31	2:58	2	vout_display_place_t *	place
param	3:31	3:59	2	const video_format_t *	source
param	4:31	4:60	2	const vout_display_cfg_t *	cfg
param	5:31	5:47	2	bool	do_clipping
stmnts	8:4	67:4	1	
call	8:4	8:35	2	memset
arg	8:11	8:16	3	place
water	8:11	0:0	4	place
arg	8:18	8:19	3	0
water	8:18	0:0	4	0
arg	8:21	8:35	3	sizeof(*place)
op	8:21	0:0	4	sizeof
water	8:27	0:0	4	(
op	8:28	0:0	4	*
water	8:29	0:0	4	place
water	8:34	0:0	4	)
water	8:36	0:0	2	;
if	9:4	10:14	2	(cfg -> display . width <= 0 || cfg -> display . height <= 0)
cond	9:8	9:58	3	cfg -> display . width <= 0 || cfg -> display . height <= 0
water	9:8	0:0	4	cfg
op	9:11	0:0	4	->
water	9:13	0:0	4	display
op	9:20	0:0	4	.
water	9:21	0:0	4	width
op	9:27	0:0	4	<=
water	9:30	0:0	4	0
op	9:32	0:0	4	||
water	9:35	0:0	4	cfg
op	9:38	0:0	4	->
water	9:40	0:0	4	display
op	9:47	0:0	4	.
water	9:48	0:0	4	height
op	9:55	0:0	4	<=
water	9:58	0:0	4	0
stmts	10:8	10:14	3	
return	10:8	10:14	4	
water	12:4	0:0	2	unsigned
water	12:13	0:0	2	display_width
water	12:26	0:0	2	;
water	13:4	0:0	2	unsigned
water	13:13	0:0	2	display_height
water	13:27	0:0	2	;
decl	14:4	14:29	2	video_format_t	source_rot
call	15:4	15:50	2	video_format_ApplyRotation
arg	15:31	15:42	3	&source_rot
op	15:31	0:0	4	&
water	15:32	0:0	4	source_rot
arg	15:44	15:50	3	source
water	15:44	0:0	4	source
water	15:51	0:0	2	;
water	16:4	0:0	2	source
op	16:11	0:0	2	=
op	16:13	0:0	2	&
water	16:14	0:0	2	source_rot
water	16:24	0:0	2	;
if	17:4	20:4	2	(cfg -> is_display_filled)
cond	17:8	17:13	3	cfg -> is_display_filled
water	17:8	0:0	4	cfg
op	17:11	0:0	4	->
water	17:13	0:0	4	is_display_filled
stmts	17:32	20:4	3	
water	17:32	0:0	4	{
water	18:8	0:0	4	display_width
op	18:23	0:0	4	=
water	18:25	0:0	4	cfg
op	18:28	0:0	4	->
water	18:30	0:0	4	display
op	18:37	0:0	4	.
water	18:38	0:0	4	width
water	18:43	0:0	4	;
water	19:8	0:0	4	display_height
op	19:23	0:0	4	=
water	19:25	0:0	4	cfg
op	19:28	0:0	4	->
water	19:30	0:0	4	display
op	19:37	0:0	4	.
water	19:38	0:0	4	height
water	19:44	0:0	4	;
water	20:4	0:0	4	}
else	20:6	30:4	2
stmts	20:11	30:4	3	
water	20:11	0:0	4	{
decl	21:8	21:41	4	vout_display_cfg_t	cfg_tmp
op	21:35	0:0	4	=
op	21:37	0:0	4	*
water	21:38	0:0	4	cfg
water	22:8	0:0	4	cfg_tmp
op	22:15	0:0	4	.
water	22:16	0:0	4	display
op	22:23	0:0	4	.
water	22:24	0:0	4	width
op	22:31	0:0	4	=
water	22:33	0:0	4	0
water	22:34	0:0	4	;
water	23:8	0:0	4	cfg_tmp
op	23:15	0:0	4	.
water	23:16	0:0	4	display
op	23:23	0:0	4	.
water	23:24	0:0	4	height
op	23:31	0:0	4	=
water	23:33	0:0	4	0
water	23:34	0:0	4	;
call	24:8	25:59	4	vout_display_GetDefaultDisplaySize
arg	24:43	24:57	5	&display_width
op	24:43	0:0	6	&
water	24:44	0:0	6	display_width
arg	24:59	24:74	5	&display_height
op	24:59	0:0	6	&
water	24:60	0:0	6	display_height
arg	25:43	25:49	5	source
water	25:43	0:0	6	source
arg	25:51	25:59	5	&cfg_tmp
op	25:51	0:0	6	&
water	25:52	0:0	6	cfg_tmp
water	25:60	0:0	4	;
if	26:8	29:8	4	(do_clipping)
cond	26:12	26:12	5	do_clipping
water	26:12	0:0	6	do_clipping
stmts	26:25	29:8	5	
water	26:25	0:0	6	{
water	27:12	0:0	6	display_width
op	27:27	0:0	6	=
call	27:29	27:69	6	__MIN
arg	27:35	27:48	7	display_width
water	27:35	0:0	8	display_width
arg	27:51	27:69	7	cfg->display.width
water	27:51	0:0	8	cfg
op	27:54	0:0	8	->
water	27:56	0:0	8	display
op	27:63	0:0	8	.
water	27:64	0:0	8	width
water	27:70	0:0	6	;
water	28:12	0:0	6	display_height
op	28:27	0:0	6	=
call	28:29	28:70	6	__MIN
arg	28:35	28:49	7	display_height
water	28:35	0:0	8	display_height
arg	28:51	28:70	7	cfg->display.height
water	28:51	0:0	8	cfg
op	28:54	0:0	8	->
water	28:56	0:0	8	display
op	28:63	0:0	8	.
water	28:64	0:0	8	height
water	28:71	0:0	6	;
water	29:8	0:0	6	}
water	30:4	0:0	4	}
water	31:4	0:0	2	const
water	31:10	0:0	2	unsigned
water	31:19	0:0	2	width
op	31:26	0:0	2	=
water	31:28	0:0	2	source
op	31:34	0:0	2	->
water	31:36	0:0	2	i_visible_width
water	31:51	0:0	2	;
water	32:4	0:0	2	const
water	32:10	0:0	2	unsigned
water	32:19	0:0	2	height
op	32:26	0:0	2	=
water	32:28	0:0	2	source
op	32:34	0:0	2	->
water	32:36	0:0	2	i_visible_height
water	32:52	0:0	2	;
decl	34:4	34:161	2	const int64_t	scaled_height
op	34:32	0:0	2	=
water	34:34	0:0	2	(
water	34:35	0:0	2	int64_t
water	34:42	0:0	2	)
water	34:43	0:0	2	height
op	34:50	0:0	2	*
water	34:52	0:0	2	display_width
op	34:67	0:0	2	*
water	34:69	0:0	2	cfg
op	34:72	0:0	2	->
water	34:74	0:0	2	display
op	34:81	0:0	2	.
water	34:82	0:0	2	sar
op	34:85	0:0	2	.
water	34:86	0:0	2	num
op	34:90	0:0	2	*
water	34:92	0:0	2	source
op	34:98	0:0	2	->
water	34:100	0:0	2	i_sar_den
op	34:110	0:0	2	/
water	34:112	0:0	2	width
op	34:119	0:0	2	/
water	34:121	0:0	2	source
op	34:127	0:0	2	->
water	34:129	0:0	2	i_sar_num
op	34:139	0:0	2	/
water	34:141	0:0	2	cfg
op	34:144	0:0	2	->
water	34:146	0:0	2	display
op	34:153	0:0	2	.
water	34:154	0:0	2	sar
op	34:157	0:0	2	.
water	34:158	0:0	2	den
decl	36:4	36:161	2	const int64_t	scaled_width
op	36:32	0:0	2	=
water	36:34	0:0	2	(
water	36:35	0:0	2	int64_t
water	36:42	0:0	2	)
water	36:43	0:0	2	width
op	36:50	0:0	2	*
water	36:52	0:0	2	display_height
op	36:67	0:0	2	*
water	36:69	0:0	2	cfg
op	36:72	0:0	2	->
water	36:74	0:0	2	display
op	36:81	0:0	2	.
water	36:82	0:0	2	sar
op	36:85	0:0	2	.
water	36:86	0:0	2	den
op	36:90	0:0	2	*
water	36:92	0:0	2	source
op	36:98	0:0	2	->
water	36:100	0:0	2	i_sar_num
op	36:110	0:0	2	/
water	36:112	0:0	2	height
op	36:119	0:0	2	/
water	36:121	0:0	2	source
op	36:127	0:0	2	->
water	36:129	0:0	2	i_sar_den
op	36:139	0:0	2	/
water	36:141	0:0	2	cfg
op	36:144	0:0	2	->
water	36:146	0:0	2	display
op	36:153	0:0	2	.
water	36:154	0:0	2	sar
op	36:157	0:0	2	.
water	36:158	0:0	2	num
if	38:4	41:4	2	(scaled_width <= cfg -> display . width)
cond	38:8	38:37	3	scaled_width <= cfg -> display . width
water	38:8	0:0	4	scaled_width
op	38:21	0:0	4	<=
water	38:24	0:0	4	cfg
op	38:27	0:0	4	->
water	38:29	0:0	4	display
op	38:36	0:0	4	.
water	38:37	0:0	4	width
stmts	38:44	41:4	3	
water	38:44	0:0	4	{
water	39:8	0:0	4	place
op	39:13	0:0	4	->
water	39:15	0:0	4	width
op	39:22	0:0	4	=
water	39:24	0:0	4	scaled_width
water	39:36	0:0	4	;
water	40:8	0:0	4	place
op	40:13	0:0	4	->
water	40:15	0:0	4	height
op	40:22	0:0	4	=
water	40:24	0:0	4	display_height
water	40:38	0:0	4	;
water	41:4	0:0	4	}
else	41:6	44:4	2
stmts	41:11	44:4	3	
water	41:11	0:0	4	{
water	42:8	0:0	4	place
op	42:13	0:0	4	->
water	42:15	0:0	4	width
op	42:22	0:0	4	=
water	42:24	0:0	4	display_width
water	42:37	0:0	4	;
water	43:8	0:0	4	place
op	43:13	0:0	4	->
water	43:15	0:0	4	height
op	43:22	0:0	4	=
water	43:24	0:0	4	scaled_height
water	43:37	0:0	4	;
water	44:4	0:0	4	}
switch	46:4	56:4	2	(cfg -> align . horizontal)
cond	46:12	46:23	3	cfg -> align . horizontal
water	46:12	0:0	4	cfg
op	46:15	0:0	4	->
water	46:17	0:0	4	align
op	46:22	0:0	4	.
water	46:23	0:0	4	horizontal
stmts	46:35	56:4	3	
water	46:35	0:0	4	{
label	47:4	47:32	4	case VOUT_DISPLAY_ALIGN_LEFT :
water	48:8	0:0	4	place
op	48:13	0:0	4	->
water	48:15	0:0	4	x
op	48:17	0:0	4	=
water	48:19	0:0	4	0
water	48:20	0:0	4	;
break	49:8	49:13	4	
label	50:4	50:33	4	case VOUT_DISPLAY_ALIGN_RIGHT :
water	51:8	0:0	4	place
op	51:13	0:0	4	->
water	51:15	0:0	4	x
op	51:17	0:0	4	=
water	51:19	0:0	4	cfg
op	51:22	0:0	4	->
water	51:24	0:0	4	display
op	51:31	0:0	4	.
water	51:32	0:0	4	width
op	51:38	0:0	4	-
water	51:40	0:0	4	place
op	51:45	0:0	4	->
water	51:47	0:0	4	width
water	51:52	0:0	4	;
break	52:8	52:13	4	
label	53:4	53:11	4	default :
water	54:8	0:0	4	place
op	54:13	0:0	4	->
water	54:15	0:0	4	x
op	54:17	0:0	4	=
water	54:19	0:0	4	(
water	54:20	0:0	4	(
water	54:21	0:0	4	int
water	54:24	0:0	4	)
water	54:25	0:0	4	cfg
op	54:28	0:0	4	->
water	54:30	0:0	4	display
op	54:37	0:0	4	.
water	54:38	0:0	4	width
op	54:44	0:0	4	-
water	54:46	0:0	4	(
water	54:47	0:0	4	int
water	54:50	0:0	4	)
water	54:51	0:0	4	place
op	54:56	0:0	4	->
water	54:58	0:0	4	width
water	54:63	0:0	4	)
op	54:65	0:0	4	/
water	54:67	0:0	4	2
water	54:68	0:0	4	;
break	55:8	55:13	4	
water	56:4	0:0	4	}
switch	57:4	67:4	2	(cfg -> align . vertical)
cond	57:12	57:23	3	cfg -> align . vertical
water	57:12	0:0	4	cfg
op	57:15	0:0	4	->
water	57:17	0:0	4	align
op	57:22	0:0	4	.
water	57:23	0:0	4	vertical
stmts	57:33	67:4	3	
water	57:33	0:0	4	{
label	58:4	58:31	4	case VOUT_DISPLAY_ALIGN_TOP :
water	59:8	0:0	4	place
op	59:13	0:0	4	->
water	59:15	0:0	4	y
op	59:17	0:0	4	=
water	59:19	0:0	4	0
water	59:20	0:0	4	;
break	60:8	60:13	4	
label	61:4	61:34	4	case VOUT_DISPLAY_ALIGN_BOTTOM :
water	62:8	0:0	4	place
op	62:13	0:0	4	->
water	62:15	0:0	4	y
op	62:17	0:0	4	=
water	62:19	0:0	4	cfg
op	62:22	0:0	4	->
water	62:24	0:0	4	display
op	62:31	0:0	4	.
water	62:32	0:0	4	height
op	62:39	0:0	4	-
water	62:41	0:0	4	place
op	62:46	0:0	4	->
water	62:48	0:0	4	height
water	62:54	0:0	4	;
break	63:8	63:13	4	
label	64:4	64:11	4	default :
water	65:8	0:0	4	place
op	65:13	0:0	4	->
water	65:15	0:0	4	y
op	65:17	0:0	4	=
water	65:19	0:0	4	(
water	65:20	0:0	4	(
water	65:21	0:0	4	int
water	65:24	0:0	4	)
water	65:25	0:0	4	cfg
op	65:28	0:0	4	->
water	65:30	0:0	4	display
op	65:37	0:0	4	.
water	65:38	0:0	4	height
op	65:45	0:0	4	-
water	65:47	0:0	4	(
water	65:48	0:0	4	int
water	65:51	0:0	4	)
water	65:52	0:0	4	place
op	65:57	0:0	4	->
water	65:59	0:0	4	height
water	65:65	0:0	4	)
op	65:67	0:0	4	/
water	65:69	0:0	4	2
water	65:70	0:0	4	;
break	66:8	66:13	4	
water	67:4	0:0	4	}

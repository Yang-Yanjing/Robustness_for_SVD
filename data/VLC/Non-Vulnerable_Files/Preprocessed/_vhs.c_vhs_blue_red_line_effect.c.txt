func	2:0	61:0	0	static int	vhs_blue_red_line_effect
params	2:35	0:0	1	
param	2:37	2:55	2	filter_t *	p_filter
param	2:57	2:78	2	picture_t *	p_pic_out
stmnts	0:0	60:22	1	
decl	3:4	3:41	2	filter_sys_t	*p_sys
op	3:24	0:0	2	=
water	3:26	0:0	2	p_filter
op	3:34	0:0	2	->
water	3:36	0:0	2	p_sys
if	7:4	27:4	2	(p_sys -> i_BR_line_trigger <= p_sys -> i_cur_time)
cond	7:9	7:44	3	p_sys -> i_BR_line_trigger <= p_sys -> i_cur_time
water	7:9	0:0	4	p_sys
op	7:14	0:0	4	->
water	7:16	0:0	4	i_BR_line_trigger
op	7:34	0:0	4	<=
water	7:37	0:0	4	p_sys
op	7:42	0:0	4	->
water	7:44	0:0	4	i_cur_time
stmts	7:57	27:4	3	
water	7:57	0:0	4	{
for	8:8	23:12	4	( uint32_t i_b = 0 ;i_b < MAX_BLUE_RED_LINES;i_b ++)
forinit	0:0	8:30	5	 uint32_t i_b = 0 ;
decl	8:14	8:30	6	uint32_t	i_b
op	8:27	0:0	6	=
water	8:29	0:0	6	0
cond	8:32	8:38	5	i_b < MAX_BLUE_RED_LINES
water	8:32	0:0	6	i_b
op	8:36	0:0	6	<
water	8:38	0:0	6	MAX_BLUE_RED_LINES
forexpr	8:58	8:61	5	i_b ++
water	8:58	0:0	6	i_b
op	8:61	0:0	6	++
stmts	9:12	23:12	5	
if	9:12	23:12	6	(p_sys -> p_BR_lines [ i_b ] == NULL)
cond	9:16	9:42	7	p_sys -> p_BR_lines [ i_b ] == NULL
water	9:16	0:0	8	p_sys
op	9:21	0:0	8	->
water	9:23	0:0	8	p_BR_lines
op	9:33	0:0	8	[
water	9:34	0:0	8	i_b
op	9:37	0:0	8	]
op	9:39	0:0	8	==
water	9:42	0:0	8	NULL
stmts	9:48	23:12	7	
water	9:48	0:0	8	{
water	11:16	0:0	8	p_sys
op	11:21	0:0	8	->
water	11:23	0:0	8	p_BR_lines
op	11:33	0:0	8	[
water	11:34	0:0	8	i_b
op	11:37	0:0	8	]
op	11:39	0:0	8	=
call	11:41	11:76	8	calloc
arg	11:49	11:50	9	1
water	11:49	0:0	10	1
arg	11:52	11:76	9	sizeof(blue_red_line_t)
op	11:52	0:0	10	sizeof
water	11:58	0:0	10	(
water	11:59	0:0	10	blue_red_line_t
water	11:74	0:0	10	)
water	11:77	0:0	8	;
if	12:16	13:37	8	(unlikely (! p_sys -> p_BR_lines [ i_b ] ))
cond	12:21	12:55	9	unlikely (! p_sys -> p_BR_lines [ i_b ] )
call	12:21	12:55	10	unlikely
arg	12:31	12:55	11	!p_sys->p_BR_lines[i_b]
op	12:31	0:0	12	!
water	12:32	0:0	12	p_sys
op	12:37	0:0	12	->
water	12:39	0:0	12	p_BR_lines
op	12:49	0:0	12	[
water	12:50	0:0	12	i_b
op	12:53	0:0	12	]
stmts	13:20	13:37	9	
return	13:20	13:37	10	VLC_ENOMEM
water	13:27	0:0	11	VLC_ENOMEM
water	15:16	0:0	8	p_sys
op	15:21	0:0	8	->
water	15:23	0:0	8	p_BR_lines
op	15:33	0:0	8	[
water	15:34	0:0	8	i_b
op	15:37	0:0	8	]
op	15:38	0:0	8	->
water	15:40	0:0	8	i_offset
op	15:49	0:0	8	=
water	15:51	0:0	8	(
water	15:52	0:0	8	unsigned
water	15:60	0:0	8	)
call	15:61	15:73	8	vlc_mrand48
op	16:49	0:0	8	%
call	16:51	16:91	8	__MAX
arg	16:58	16:59	9	1
water	16:58	0:0	10	1
arg	16:61	16:91	9	p_sys->i_height[Y_PLANE]-10
water	16:61	0:0	10	p_sys
op	16:66	0:0	10	->
water	16:68	0:0	10	i_height
op	16:76	0:0	10	[
water	16:77	0:0	10	Y_PLANE
op	16:84	0:0	10	]
op	16:86	0:0	10	-
water	16:88	0:0	10	10
op	17:49	0:0	8	+
water	17:51	0:0	8	5
water	17:52	0:0	8	;
water	18:16	0:0	8	p_sys
op	18:21	0:0	8	->
water	18:23	0:0	8	p_BR_lines
op	18:33	0:0	8	[
water	18:34	0:0	8	i_b
op	18:37	0:0	8	]
op	18:38	0:0	8	->
water	18:40	0:0	8	b_blue_red
op	18:51	0:0	8	=
water	18:53	0:0	8	(
water	18:54	0:0	8	unsigned
water	18:62	0:0	8	)
call	18:63	18:75	8	vlc_mrand48
op	18:77	0:0	8	&
water	18:79	0:0	8	0
water	18:80	0:0	8	x01
water	18:83	0:0	8	;
water	19:16	0:0	8	p_sys
op	19:21	0:0	8	->
water	19:23	0:0	8	p_BR_lines
op	19:33	0:0	8	[
water	19:34	0:0	8	i_b
op	19:37	0:0	8	]
op	19:38	0:0	8	->
water	19:40	0:0	8	i_stop_trigger
op	19:55	0:0	8	=
water	19:57	0:0	8	p_sys
op	19:62	0:0	8	->
water	19:64	0:0	8	i_cur_time
op	20:55	0:0	8	+
water	20:57	0:0	8	(
water	20:58	0:0	8	uint64_t
water	20:66	0:0	8	)
call	20:67	20:79	8	vlc_mrand48
op	20:81	0:0	8	%
water	20:83	0:0	8	BR_LINES_DURATION
op	21:55	0:0	8	+
water	21:57	0:0	8	BR_LINES_DURATION
op	21:75	0:0	8	/
water	21:77	0:0	8	2
water	21:78	0:0	8	;
break	22:16	22:21	8	
water	23:12	0:0	8	}
water	24:8	0:0	4	p_sys
op	24:13	0:0	4	->
water	24:15	0:0	4	i_BR_line_trigger
op	24:33	0:0	4	=
water	24:35	0:0	4	p_sys
op	24:40	0:0	4	->
water	24:42	0:0	4	i_cur_time
op	25:33	0:0	4	+
water	25:35	0:0	4	(
water	25:36	0:0	4	uint64_t
water	25:44	0:0	4	)
call	25:45	25:57	4	vlc_mrand48
op	25:59	0:0	4	%
water	25:61	0:0	4	BR_LINES_GENERATOR_PERIOD
op	26:33	0:0	4	+
water	26:35	0:0	4	BR_LINES_GENERATOR_PERIOD
op	26:61	0:0	4	/
water	26:63	0:0	4	2
water	26:64	0:0	4	;
water	27:4	0:0	4	}
for	29:4	59:8	2	( uint8_t i_b = 0 ;i_b < MAX_BLUE_RED_LINES;i_b ++)
forinit	0:0	29:25	3	 uint8_t i_b = 0 ;
decl	29:10	29:25	4	uint8_t	i_b
op	29:22	0:0	4	=
water	29:24	0:0	4	0
cond	29:27	29:33	3	i_b < MAX_BLUE_RED_LINES
water	29:27	0:0	4	i_b
op	29:31	0:0	4	<
water	29:33	0:0	4	MAX_BLUE_RED_LINES
forexpr	29:53	29:56	3	i_b ++
water	29:53	0:0	4	i_b
op	29:56	0:0	4	++
stmts	30:8	59:8	3	
if	30:8	59:8	4	(p_sys -> p_BR_lines [ i_b ])
cond	30:13	30:34	5	p_sys -> p_BR_lines [ i_b ]
water	30:13	0:0	6	p_sys
op	30:18	0:0	6	->
water	30:20	0:0	6	p_BR_lines
op	30:30	0:0	6	[
water	30:31	0:0	6	i_b
op	30:34	0:0	6	]
stmts	30:38	59:8	5	
water	30:38	0:0	6	{
if	32:12	35:12	6	(p_sys -> p_BR_lines [ i_b ] -> i_stop_trigger <= p_sys -> i_cur_time)
cond	32:17	32:66	7	p_sys -> p_BR_lines [ i_b ] -> i_stop_trigger <= p_sys -> i_cur_time
water	32:17	0:0	8	p_sys
op	32:22	0:0	8	->
water	32:24	0:0	8	p_BR_lines
op	32:34	0:0	8	[
water	32:35	0:0	8	i_b
op	32:38	0:0	8	]
op	32:39	0:0	8	->
water	32:41	0:0	8	i_stop_trigger
op	32:56	0:0	8	<=
water	32:59	0:0	8	p_sys
op	32:64	0:0	8	->
water	32:66	0:0	8	i_cur_time
stmts	32:79	35:12	7	
water	32:79	0:0	8	{
call	33:16	33:49	8	FREENULL
arg	33:26	33:49	9	p_sys->p_BR_lines[i_b]
water	33:26	0:0	10	p_sys
op	33:31	0:0	10	->
water	33:33	0:0	10	p_BR_lines
op	33:43	0:0	10	[
water	33:44	0:0	10	i_b
op	33:47	0:0	10	]
water	33:50	0:0	8	;
continue	34:16	34:24	8	
water	35:12	0:0	8	}
for	37:12	58:12	6	( int32_t i_p = 0 ;i_p < p_sys -> i_planes;i_p ++)
forinit	0:0	37:31	7	 int32_t i_p = 0 ;
decl	37:18	37:31	8	int32_t	i_p
op	37:29	0:0	8	=
water	37:30	0:0	8	0
cond	37:33	37:46	7	i_p < p_sys -> i_planes
water	37:33	0:0	8	i_p
op	37:37	0:0	8	<
water	37:39	0:0	8	p_sys
op	37:44	0:0	8	->
water	37:46	0:0	8	i_planes
forexpr	37:56	37:59	7	i_p ++
water	37:56	0:0	8	i_p
op	37:59	0:0	8	++
stmts	37:64	58:12	7	
water	37:64	0:0	8	{
decl	38:16	41:62	8	uint32_t	i_pix_ofs
op	38:35	0:0	8	=
water	38:37	0:0	8	p_sys
op	38:42	0:0	8	->
water	38:44	0:0	8	p_BR_lines
op	38:54	0:0	8	[
water	38:55	0:0	8	i_b
op	38:58	0:0	8	]
op	38:59	0:0	8	->
water	38:61	0:0	8	i_offset
op	39:35	0:0	8	*
water	39:37	0:0	8	p_pic_out
op	39:46	0:0	8	->
water	39:48	0:0	8	p
op	39:49	0:0	8	[
water	39:50	0:0	8	i_p
op	39:53	0:0	8	]
op	39:54	0:0	8	.
water	39:55	0:0	8	i_visible_lines
op	40:35	0:0	8	/
water	40:37	0:0	8	p_sys
op	40:42	0:0	8	->
water	40:44	0:0	8	i_height
op	40:52	0:0	8	[
water	40:53	0:0	8	Y_PLANE
op	40:60	0:0	8	]
op	41:35	0:0	8	*
water	41:37	0:0	8	p_pic_out
op	41:46	0:0	8	->
water	41:48	0:0	8	p
op	41:49	0:0	8	[
water	41:50	0:0	8	i_p
op	41:53	0:0	8	]
op	41:54	0:0	8	.
water	41:55	0:0	8	i_pitch
switch	42:16	57:16	8	(i_p)
cond	42:25	42:25	9	i_p
water	42:25	0:0	10	i_p
stmts	42:31	57:16	9	
water	42:31	0:0	10	{
label	43:18	43:30	10	case Y_PLANE :
call	44:20	45:61	10	memset
arg	44:28	44:66	11	&p_pic_out->p[i_p].p_pixels[i_pix_ofs]
op	44:28	0:0	12	&
water	44:29	0:0	12	p_pic_out
op	44:38	0:0	12	->
water	44:40	0:0	12	p
op	44:41	0:0	12	[
water	44:42	0:0	12	i_p
op	44:45	0:0	12	]
op	44:46	0:0	12	.
water	44:47	0:0	12	p_pixels
op	44:55	0:0	12	[
water	44:56	0:0	12	i_pix_ofs
op	44:65	0:0	12	]
arg	44:68	44:71	11	127
water	44:68	0:0	12	127
arg	45:28	45:61	11	p_pic_out->p[i_p].i_visible_pitch
water	45:28	0:0	12	p_pic_out
op	45:37	0:0	12	->
water	45:39	0:0	12	p
op	45:40	0:0	12	[
water	45:41	0:0	12	i_p
op	45:44	0:0	12	]
op	45:45	0:0	12	.
water	45:46	0:0	12	i_visible_pitch
water	45:62	0:0	10	;
break	46:20	46:25	10	
label	47:18	47:30	10	case U_PLANE :
call	48:20	50:61	10	memset
arg	48:28	48:66	11	&p_pic_out->p[i_p].p_pixels[i_pix_ofs]
op	48:28	0:0	12	&
water	48:29	0:0	12	p_pic_out
op	48:38	0:0	12	->
water	48:40	0:0	12	p
op	48:41	0:0	12	[
water	48:42	0:0	12	i_p
op	48:45	0:0	12	]
op	48:46	0:0	12	.
water	48:47	0:0	12	p_pixels
op	48:55	0:0	12	[
water	48:56	0:0	12	i_pix_ofs
op	48:65	0:0	12	]
arg	49:28	49:70	11	(p_sys->p_BR_lines[i_b]->b_blue_red?255:0)
water	49:28	0:0	12	(
water	49:29	0:0	12	p_sys
op	49:34	0:0	12	->
water	49:36	0:0	12	p_BR_lines
op	49:46	0:0	12	[
water	49:47	0:0	12	i_b
op	49:50	0:0	12	]
op	49:51	0:0	12	->
water	49:53	0:0	12	b_blue_red
water	49:63	0:0	12	?
water	49:64	0:0	12	255
water	49:67	0:0	12	:
water	49:68	0:0	12	0
water	49:69	0:0	12	)
arg	50:28	50:61	11	p_pic_out->p[i_p].i_visible_pitch
water	50:28	0:0	12	p_pic_out
op	50:37	0:0	12	->
water	50:39	0:0	12	p
op	50:40	0:0	12	[
water	50:41	0:0	12	i_p
op	50:44	0:0	12	]
op	50:45	0:0	12	.
water	50:46	0:0	12	i_visible_pitch
water	50:62	0:0	10	;
break	51:20	51:25	10	
label	52:18	52:30	10	case V_PLANE :
call	53:20	55:61	10	memset
arg	53:28	53:66	11	&p_pic_out->p[i_p].p_pixels[i_pix_ofs]
op	53:28	0:0	12	&
water	53:29	0:0	12	p_pic_out
op	53:38	0:0	12	->
water	53:40	0:0	12	p
op	53:41	0:0	12	[
water	53:42	0:0	12	i_p
op	53:45	0:0	12	]
op	53:46	0:0	12	.
water	53:47	0:0	12	p_pixels
op	53:55	0:0	12	[
water	53:56	0:0	12	i_pix_ofs
op	53:65	0:0	12	]
arg	54:28	54:70	11	(p_sys->p_BR_lines[i_b]->b_blue_red?0:255)
water	54:28	0:0	12	(
water	54:29	0:0	12	p_sys
op	54:34	0:0	12	->
water	54:36	0:0	12	p_BR_lines
op	54:46	0:0	12	[
water	54:47	0:0	12	i_b
op	54:50	0:0	12	]
op	54:51	0:0	12	->
water	54:53	0:0	12	b_blue_red
water	54:63	0:0	12	?
water	54:64	0:0	12	0
water	54:65	0:0	12	:
water	54:66	0:0	12	255
water	54:69	0:0	12	)
arg	55:28	55:61	11	p_pic_out->p[i_p].i_visible_pitch
water	55:28	0:0	12	p_pic_out
op	55:37	0:0	12	->
water	55:39	0:0	12	p
op	55:40	0:0	12	[
water	55:41	0:0	12	i_p
op	55:44	0:0	12	]
op	55:45	0:0	12	.
water	55:46	0:0	12	i_visible_pitch
water	55:62	0:0	10	;
break	56:20	56:25	10	
water	57:16	0:0	10	}
water	58:12	0:0	8	}
water	59:8	0:0	6	}
return	60:4	60:22	2	VLC_SUCCESS
water	60:11	0:0	3	VLC_SUCCESS

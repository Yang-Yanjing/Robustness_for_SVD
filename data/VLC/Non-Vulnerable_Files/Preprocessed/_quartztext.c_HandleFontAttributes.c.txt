func	2:0	65:0	0	static int	HandleFontAttributes
params	2:31	0:0	1	
param	2:32	2:58	2	xml_reader_t *	p_xml_reader
param	3:34	3:56	2	font_stack_t * *	p_fonts
stmnts	0:0	64:13	1	
decl	5:4	5:17	2	int	rv
decl	6:4	6:34	2	char	*psz_fontname
op	6:28	0:0	2	=
water	6:30	0:0	2	NULL
decl	7:4	7:38	2	uint32_t	i_font_color
op	7:28	0:0	2	=
water	7:30	0:0	2	0
water	7:31	0:0	2	xffffff
decl	8:4	8:31	2	int	i_font_alpha
op	8:28	0:0	2	=
water	8:30	0:0	2	0
decl	9:4	9:32	2	int	i_font_size
op	9:28	0:0	2	=
water	9:30	0:0	2	24
decl	10:4	10:28	2	const char	*attr
water	10:20	0:0	2	,
decl	10:4	10:28	2	const char	*value
if	13:4	20:4	2	(VLC_SUCCESS ==PeekFont (p_fonts ,& psz_fontname ,& i_font_size ,& i_font_color ))
cond	13:8	16:45	3	VLC_SUCCESS ==PeekFont (p_fonts ,& psz_fontname ,& i_font_size ,& i_font_color )
water	13:8	0:0	4	VLC_SUCCESS
op	13:20	0:0	4	==
call	13:23	16:45	4	PeekFont
arg	13:32	13:39	5	p_fonts
water	13:32	0:0	6	p_fonts
arg	14:32	14:45	5	&psz_fontname
op	14:32	0:0	6	&
water	14:33	0:0	6	psz_fontname
arg	15:32	15:44	5	&i_font_size
op	15:32	0:0	6	&
water	15:33	0:0	6	i_font_size
arg	16:32	16:45	5	&i_font_color
op	16:32	0:0	6	&
water	16:33	0:0	6	i_font_color
stmts	16:48	20:4	3	
water	16:48	0:0	4	{
if	17:8	18:47	4	(psz_fontname)
cond	17:12	17:12	5	psz_fontname
water	17:12	0:0	6	psz_fontname
stmts	18:12	18:47	5	
water	18:12	0:0	6	psz_fontname
op	18:25	0:0	6	=
call	18:27	18:46	6	strdup
arg	18:34	18:46	7	psz_fontname
water	18:34	0:0	8	psz_fontname
water	18:47	0:0	6	;
water	19:8	0:0	4	i_font_size
op	19:20	0:0	4	=
water	19:22	0:0	4	i_font_size
water	19:33	0:0	4	;
water	20:4	0:0	4	}
water	21:4	0:0	2	i_font_alpha
op	21:17	0:0	2	=
water	21:19	0:0	2	(
water	21:20	0:0	2	i_font_color
op	21:33	0:0	2	>>
water	21:36	0:0	2	24
water	21:38	0:0	2	)
op	21:40	0:0	2	&
water	21:42	0:0	2	0
water	21:43	0:0	2	xff
water	21:46	0:0	2	;
water	22:4	0:0	2	i_font_color
op	22:17	0:0	2	&=
water	22:20	0:0	2	0
water	22:21	0:0	2	x00ffffff
water	22:30	0:0	2	;
while	23:4	58:4	2	(( attr =xml_ReaderNextAttr (p_xml_reader ,& value ) ))
cond	23:11	23:59	3	( attr =xml_ReaderNextAttr (p_xml_reader ,& value ) )
water	23:11	0:0	4	(
water	23:12	0:0	4	attr
op	23:17	0:0	4	=
call	23:19	23:58	4	xml_ReaderNextAttr
arg	23:38	23:50	5	p_xml_reader
water	23:38	0:0	6	p_xml_reader
arg	23:52	23:58	5	&value
op	23:52	0:0	6	&
water	23:53	0:0	6	value
water	23:59	0:0	4	)
stmts	23:62	58:4	3	
water	23:62	0:0	4	{
if	24:8	28:8	4	(!strcasecmp ("face" ,attr ))
cond	24:12	24:36	5	!strcasecmp ("face" ,attr )
op	24:12	0:0	6	!
call	24:13	24:36	6	strcasecmp
arg	24:24	24:30	7	"face"
water	24:24	0:0	8	"face"
arg	24:32	24:36	7	attr
water	24:32	0:0	8	attr
stmts	24:39	28:8	5	
water	24:39	0:0	6	{
call	25:12	25:29	6	free
arg	25:17	25:29	7	psz_fontname
water	25:17	0:0	8	psz_fontname
water	25:30	0:0	6	;
if	26:12	27:44	6	(value)
cond	26:16	26:16	7	value
water	26:16	0:0	8	value
stmts	27:16	27:44	7	
water	27:16	0:0	8	psz_fontname
op	27:29	0:0	8	=
call	27:31	27:43	8	strdup
arg	27:38	27:43	9	value
water	27:38	0:0	10	value
water	27:44	0:0	8	;
water	28:8	0:0	6	}
else	28:10	40:8	4
stmts	28:15	40:8	5	
if	28:15	40:8	6	(!strcasecmp ("size" ,attr ))
cond	28:19	28:43	7	!strcasecmp ("size" ,attr )
op	28:19	0:0	8	!
call	28:20	28:43	8	strcasecmp
arg	28:31	28:37	9	"size"
water	28:31	0:0	10	"size"
arg	28:39	28:43	9	attr
water	28:39	0:0	10	attr
stmts	28:46	40:8	7	
water	28:46	0:0	8	{
if	29:12	37:12	8	(( * value == '+' ) || ( * value == '-' ))
cond	29:16	29:49	9	( * value == '+' ) || ( * value == '-' )
water	29:16	0:0	10	(
op	29:17	0:0	10	*
water	29:18	0:0	10	value
op	29:24	0:0	10	==
water	29:27	0:0	10	'+'
water	29:30	0:0	10	)
op	29:32	0:0	10	||
water	29:35	0:0	10	(
op	29:36	0:0	10	*
water	29:37	0:0	10	value
op	29:43	0:0	10	==
water	29:46	0:0	10	'-'
water	29:49	0:0	10	)
stmts	29:52	37:12	9	
water	29:52	0:0	10	{
decl	30:16	30:41	10	int	i_value
op	30:28	0:0	10	=
call	30:30	30:40	11	atoi
arg	30:35	30:40	12	value
water	30:35	0:0	13	value
if	31:16	32:63	10	(( i_value >= - 5 ) && ( i_value <= 5 ))
cond	31:20	31:52	11	( i_value >= - 5 ) && ( i_value <= 5 )
water	31:20	0:0	12	(
water	31:21	0:0	12	i_value
op	31:29	0:0	12	>=
op	31:32	0:0	12	-
water	31:33	0:0	12	5
water	31:34	0:0	12	)
op	31:36	0:0	12	&&
water	31:39	0:0	12	(
water	31:40	0:0	12	i_value
op	31:48	0:0	12	<=
water	31:51	0:0	12	5
water	31:52	0:0	12	)
stmts	32:20	32:63	11	
water	32:20	0:0	12	i_font_size
op	32:32	0:0	12	+=
water	32:35	0:0	12	(
water	32:36	0:0	12	i_value
op	32:44	0:0	12	*
water	32:46	0:0	12	i_font_size
water	32:57	0:0	12	)
op	32:59	0:0	12	/
water	32:61	0:0	12	10
water	32:63	0:0	12	;
else	33:16	34:43	10
stmts	33:21	34:43	11	
if	33:21	34:43	12	(i_value < - 5)
cond	33:25	33:36	13	i_value < - 5
water	33:25	0:0	14	i_value
op	33:33	0:0	14	<
op	33:35	0:0	14	-
water	33:36	0:0	14	5
stmts	34:20	34:43	13	
water	34:20	0:0	14	i_font_size
op	34:32	0:0	14	=
op	34:34	0:0	14	-
water	34:36	0:0	14	i_value
water	34:43	0:0	14	;
else	35:16	36:41	10
stmts	35:21	36:41	11	
if	35:21	36:41	12	(i_value > 5)
cond	35:25	35:35	13	i_value > 5
water	35:25	0:0	14	i_value
op	35:33	0:0	14	>
water	35:35	0:0	14	5
stmts	36:20	36:41	13	
water	36:20	0:0	14	i_font_size
op	36:32	0:0	14	=
water	36:34	0:0	14	i_value
water	36:41	0:0	14	;
water	37:12	0:0	10	}
else	38:12	39:41	8
stmts	39:16	39:41	9	
water	39:16	0:0	10	i_font_size
op	39:28	0:0	10	=
call	39:30	39:40	10	atoi
arg	39:35	39:40	11	value
water	39:35	0:0	12	value
water	39:41	0:0	10	;
water	40:8	0:0	8	}
else	40:10	54:8	4
stmts	40:15	54:8	5	
if	40:15	54:8	6	(!strcasecmp ("color" ,attr ))
cond	40:19	40:44	7	!strcasecmp ("color" ,attr )
op	40:19	0:0	8	!
call	40:20	40:44	8	strcasecmp
arg	40:31	40:38	9	"color"
water	40:31	0:0	10	"color"
arg	40:40	40:44	9	attr
water	40:40	0:0	10	attr
stmts	40:47	54:8	7	
water	40:47	0:0	8	{
if	41:12	44:12	8	(value [ 0 ] == '#')
cond	41:16	41:28	9	value [ 0 ] == '#'
water	41:16	0:0	10	value
op	41:21	0:0	10	[
water	41:22	0:0	10	0
op	41:23	0:0	10	]
op	41:25	0:0	10	==
water	41:28	0:0	10	'#'
stmts	41:33	44:12	9	
water	41:33	0:0	10	{
water	42:16	0:0	10	i_font_color
op	42:29	0:0	10	=
call	42:31	42:57	10	strtol
arg	42:38	42:47	11	value+1
water	42:38	0:0	12	value
op	42:44	0:0	12	+
water	42:46	0:0	12	1
arg	42:49	42:53	11	NULL
water	42:49	0:0	12	NULL
arg	42:55	42:57	11	16
water	42:55	0:0	12	16
water	42:58	0:0	10	;
water	43:16	0:0	10	i_font_color
op	43:29	0:0	10	&=
water	43:32	0:0	10	0
water	43:33	0:0	10	x00ffffff
water	43:42	0:0	10	;
water	44:12	0:0	10	}
else	44:14	53:12	8
stmts	44:19	53:12	9	
water	44:19	0:0	10	{
decl	46:16	46:61	10	unsigned int	count
op	46:35	0:0	10	=
op	46:37	0:0	10	sizeof
water	46:43	0:0	10	(
water	46:44	0:0	10	ppsz_color_names
water	46:60	0:0	10	)
for	47:16	52:16	10	(unsigned x = 0 ;x < count;x ++)
forinit	47:21	47:35	11	unsigned x = 0 ;
water	47:21	0:0	12	unsigned
water	47:30	0:0	12	x
op	47:32	0:0	12	=
water	47:34	0:0	12	0
water	47:35	0:0	12	;
cond	47:37	47:41	11	x < count
water	47:37	0:0	12	x
op	47:39	0:0	12	<
water	47:41	0:0	12	count
forexpr	47:48	47:49	11	x ++
water	47:48	0:0	12	x
op	47:49	0:0	12	++
stmts	47:53	52:16	11	
water	47:53	0:0	12	{
if	48:20	51:20	12	(!strcmp (value ,ppsz_color_names [ x ] ))
cond	48:24	48:58	13	!strcmp (value ,ppsz_color_names [ x ] )
op	48:24	0:0	14	!
call	48:25	48:58	14	strcmp
arg	48:32	48:37	15	value
water	48:32	0:0	16	value
arg	48:39	48:58	15	ppsz_color_names[x]
water	48:39	0:0	16	ppsz_color_names
op	48:55	0:0	16	[
water	48:56	0:0	16	x
op	48:57	0:0	16	]
stmts	48:61	51:20	13	
water	48:61	0:0	14	{
water	49:24	0:0	14	i_font_color
op	49:37	0:0	14	=
water	49:39	0:0	14	pi_color_values
op	49:54	0:0	14	[
water	49:55	0:0	14	x
op	49:56	0:0	14	]
water	49:57	0:0	14	;
break	50:24	50:29	14	
water	51:20	0:0	14	}
water	52:16	0:0	12	}
water	53:12	0:0	10	}
water	54:8	0:0	8	}
else	54:10	57:8	4
stmts	54:15	57:8	5	
if	54:15	57:8	6	(!strcasecmp ("alpha" ,attr ) && ( value [ 0 ] == '#' ))
cond	54:19	54:65	7	!strcasecmp ("alpha" ,attr ) && ( value [ 0 ] == '#' )
op	54:19	0:0	8	!
call	54:20	54:44	8	strcasecmp
arg	54:31	54:38	9	"alpha"
water	54:31	0:0	10	"alpha"
arg	54:40	54:44	9	attr
water	54:40	0:0	10	attr
op	54:46	0:0	8	&&
water	54:49	0:0	8	(
water	54:50	0:0	8	value
op	54:55	0:0	8	[
water	54:56	0:0	8	0
op	54:57	0:0	8	]
op	54:59	0:0	8	==
water	54:62	0:0	8	'#'
water	54:65	0:0	8	)
stmts	54:68	57:8	7	
water	54:68	0:0	8	{
water	55:12	0:0	8	i_font_alpha
op	55:25	0:0	8	=
call	55:27	55:53	8	strtol
arg	55:34	55:43	9	value+1
water	55:34	0:0	10	value
op	55:40	0:0	10	+
water	55:42	0:0	10	1
arg	55:45	55:49	9	NULL
water	55:45	0:0	10	NULL
arg	55:51	55:53	9	16
water	55:51	0:0	10	16
water	55:54	0:0	8	;
water	56:12	0:0	8	i_font_alpha
op	56:25	0:0	8	&=
water	56:28	0:0	8	0
water	56:29	0:0	8	xff
water	56:32	0:0	8	;
water	57:8	0:0	8	}
water	58:4	0:0	4	}
water	59:4	0:0	2	rv
op	59:7	0:0	2	=
call	59:9	62:75	2	PushFont
arg	59:18	59:25	3	p_fonts
water	59:18	0:0	4	p_fonts
arg	60:18	60:30	3	psz_fontname
water	60:18	0:0	4	psz_fontname
arg	61:18	61:29	3	i_font_size
water	61:18	0:0	4	i_font_size
arg	62:18	62:75	3	(i_font_color&0xffffff)|((i_font_alpha&0xff)<<24)
water	62:18	0:0	4	(
water	62:19	0:0	4	i_font_color
op	62:32	0:0	4	&
water	62:34	0:0	4	0
water	62:35	0:0	4	xffffff
water	62:42	0:0	4	)
op	62:44	0:0	4	|
water	62:46	0:0	4	(
water	62:47	0:0	4	(
water	62:48	0:0	4	i_font_alpha
op	62:61	0:0	4	&
water	62:63	0:0	4	0
water	62:64	0:0	4	xff
water	62:67	0:0	4	)
op	62:69	0:0	4	<<
water	62:72	0:0	4	24
water	62:74	0:0	4	)
water	62:76	0:0	2	;
call	63:4	63:21	2	free
arg	63:9	63:21	3	psz_fontname
water	63:9	0:0	4	psz_fontname
water	63:22	0:0	2	;
return	64:4	64:13	2	rv
water	64:11	0:0	3	rv

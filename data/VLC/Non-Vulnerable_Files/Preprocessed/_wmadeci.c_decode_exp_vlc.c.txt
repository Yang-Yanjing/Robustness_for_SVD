func	2:0	54:0	0	static int	decode_exp_vlc
params	2:25	0:0	1	
param	2:26	2:45	2	WMADecodeContext *	s
param	2:47	2:53	2	int	ch
stmnts	0:0	53:12	1	
decl	4:4	4:25	2	int	last_exp
water	4:16	0:0	2	,
decl	4:4	4:25	2	int	n
water	4:19	0:0	2	,
decl	4:4	4:25	2	int	code
decl	5:4	5:34	2	const uint16_t	*ptr
water	5:23	0:0	2	,
decl	5:4	5:34	2	const uint16_t	*band_ptr
decl	6:4	6:24	2	int32_t	v
water	6:13	0:0	2	,
decl	6:4	6:24	2	int32_t	max_scale
decl	7:4	7:21	2	int32_t	*q
water	7:14	0:0	2	,
decl	7:4	7:21	2	int32_t	*q_end
decl	9:4	9:65	2	const int32_t	*pow_10_to_yover16_ptr
op	9:41	0:0	2	=
op	9:43	0:0	2	&
water	9:44	0:0	2	pow_10_to_yover16
op	9:61	0:0	2	[
water	9:62	0:0	2	61
op	9:64	0:0	2	]
water	10:4	0:0	2	band_ptr
op	10:13	0:0	2	=
water	10:15	0:0	2	s
op	10:16	0:0	2	->
water	10:18	0:0	2	exponent_bands
op	10:32	0:0	2	[
water	10:33	0:0	2	s
op	10:34	0:0	2	->
water	10:36	0:0	2	frame_len_bits
op	10:51	0:0	2	-
water	10:53	0:0	2	s
op	10:54	0:0	2	->
water	10:56	0:0	2	block_len_bits
op	10:70	0:0	2	]
water	10:71	0:0	2	;
water	11:4	0:0	2	ptr
op	11:8	0:0	2	=
water	11:10	0:0	2	band_ptr
water	11:18	0:0	2	;
water	12:4	0:0	2	q
op	12:6	0:0	2	=
water	12:8	0:0	2	s
op	12:9	0:0	2	->
water	12:11	0:0	2	exponents
op	12:20	0:0	2	[
water	12:21	0:0	2	ch
op	12:23	0:0	2	]
water	12:24	0:0	2	;
water	13:4	0:0	2	q_end
op	13:10	0:0	2	=
water	13:12	0:0	2	q
op	13:14	0:0	2	+
water	13:16	0:0	2	s
op	13:17	0:0	2	->
water	13:19	0:0	2	block_len
water	13:28	0:0	2	;
water	14:4	0:0	2	max_scale
op	14:14	0:0	2	=
water	14:16	0:0	2	0
water	14:17	0:0	2	;
if	15:4	27:4	2	(s -> version == 1)
cond	15:8	15:22	3	s -> version == 1
water	15:8	0:0	4	s
op	15:9	0:0	4	->
water	15:11	0:0	4	version
op	15:19	0:0	4	==
water	15:22	0:0	4	1
stmts	16:4	27:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	last_exp
op	17:17	0:0	4	=
call	17:19	17:37	4	get_bits
arg	17:28	17:34	5	&s->gb
op	17:28	0:0	6	&
water	17:29	0:0	6	s
op	17:30	0:0	6	->
water	17:32	0:0	6	gb
arg	17:36	17:37	5	5
water	17:36	0:0	6	5
op	17:39	0:0	4	+
water	17:41	0:0	4	10
water	17:43	0:0	4	;
water	19:8	0:0	4	v
op	19:10	0:0	4	=
water	19:12	0:0	4	pow_10_to_yover16_ptr
op	19:33	0:0	4	[
water	19:34	0:0	4	last_exp
op	19:42	0:0	4	]
water	19:43	0:0	4	;
water	20:8	0:0	4	max_scale
op	20:18	0:0	4	=
water	20:20	0:0	4	v
water	20:21	0:0	4	;
water	21:8	0:0	4	n
op	21:10	0:0	4	=
op	21:12	0:0	4	*
water	21:13	0:0	4	ptr
op	21:16	0:0	4	++
water	21:18	0:0	4	;
do	22:8	25:8	4	(-- n)
cond	26:15	26:17	5	-- n
op	26:15	0:0	6	--
water	26:17	0:0	6	n
stmts	23:8	25:8	5	
water	23:8	0:0	6	{
op	24:12	0:0	6	*
water	24:13	0:0	6	q
op	24:14	0:0	6	++
op	24:17	0:0	6	=
water	24:19	0:0	6	v
water	24:20	0:0	6	;
water	25:8	0:0	6	}
water	26:19	0:0	4	;
water	27:4	0:0	4	}
else	28:4	29:21	2
stmts	29:8	29:21	3	
water	29:8	0:0	4	last_exp
op	29:17	0:0	4	=
water	29:19	0:0	4	36
water	29:21	0:0	4	;
while	30:4	51:4	2	(q < q_end)
cond	30:11	30:15	3	q < q_end
water	30:11	0:0	4	q
op	30:13	0:0	4	<
water	30:15	0:0	4	q_end
stmts	31:4	51:4	3	
water	31:4	0:0	4	{
water	32:8	0:0	4	code
op	32:13	0:0	4	=
call	32:15	32:68	4	get_vlc2
arg	32:24	32:30	5	&s->gb
op	32:24	0:0	6	&
water	32:25	0:0	6	s
op	32:26	0:0	6	->
water	32:28	0:0	6	gb
arg	32:32	32:48	5	s->exp_vlc.table
water	32:32	0:0	6	s
op	32:33	0:0	6	->
water	32:35	0:0	6	exp_vlc
op	32:42	0:0	6	.
water	32:43	0:0	6	table
arg	32:50	32:60	5	EXPVLCBITS
water	32:50	0:0	6	EXPVLCBITS
arg	32:62	32:68	5	EXPMAX
water	32:62	0:0	6	EXPMAX
water	32:69	0:0	4	;
if	33:8	36:8	4	(code < 0)
cond	33:12	33:19	5	code < 0
water	33:12	0:0	6	code
op	33:17	0:0	6	<
water	33:19	0:0	6	0
stmts	34:8	36:8	5	
water	34:8	0:0	6	{
return	35:12	35:21	6	-1
op	35:19	0:0	7	-
water	35:20	0:0	7	1
water	36:8	0:0	6	}
water	38:8	0:0	4	last_exp
op	38:17	0:0	4	+=
water	38:20	0:0	4	code
op	38:25	0:0	4	-
water	38:27	0:0	4	60
water	38:29	0:0	4	;
water	40:8	0:0	4	v
op	40:10	0:0	4	=
water	40:12	0:0	4	pow_10_to_yover16_ptr
op	40:33	0:0	4	[
water	40:34	0:0	4	last_exp
op	40:42	0:0	4	]
water	40:43	0:0	4	;
if	41:8	44:8	4	(v > max_scale)
cond	41:12	41:16	5	v > max_scale
water	41:12	0:0	6	v
op	41:14	0:0	6	>
water	41:16	0:0	6	max_scale
stmts	42:8	44:8	5	
water	42:8	0:0	6	{
water	43:12	0:0	6	max_scale
op	43:22	0:0	6	=
water	43:24	0:0	6	v
water	43:25	0:0	6	;
water	44:8	0:0	6	}
water	45:8	0:0	4	n
op	45:10	0:0	4	=
op	45:12	0:0	4	*
water	45:13	0:0	4	ptr
op	45:16	0:0	4	++
water	45:18	0:0	4	;
do	46:8	49:8	4	(-- n)
cond	50:15	50:17	5	-- n
op	50:15	0:0	6	--
water	50:17	0:0	6	n
stmts	47:8	49:8	5	
water	47:8	0:0	6	{
op	48:12	0:0	6	*
water	48:13	0:0	6	q
op	48:14	0:0	6	++
op	48:17	0:0	6	=
water	48:19	0:0	6	v
water	48:20	0:0	6	;
water	49:8	0:0	6	}
water	50:19	0:0	4	;
water	51:4	0:0	4	}
water	52:4	0:0	2	s
op	52:5	0:0	2	->
water	52:7	0:0	2	max_exponent
op	52:19	0:0	2	[
water	52:20	0:0	2	ch
op	52:22	0:0	2	]
op	52:24	0:0	2	=
water	52:26	0:0	2	max_scale
water	52:35	0:0	2	;
return	53:4	53:12	2	0
water	53:11	0:0	3	0

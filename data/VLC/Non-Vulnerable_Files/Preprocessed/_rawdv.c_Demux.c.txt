func	2:0	39:0	0	static int	Demux
params	2:16	0:0	1	
param	2:18	2:35	2	demux_t *	p_demux
stmnts	0:0	38:12	1	
decl	4:4	4:40	2	demux_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_demux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
decl	5:4	5:24	2	block_t	*p_block
decl	6:4	6:25	2	bool	b_audio
op	6:18	0:0	2	=
water	6:20	0:0	2	false
if	7:4	11:4	2	(p_sys -> b_hurry_up)
cond	7:8	7:15	3	p_sys -> b_hurry_up
water	7:8	0:0	4	p_sys
op	7:13	0:0	4	->
water	7:15	0:0	4	b_hurry_up
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
water	10:8	0:0	4	p_sys
op	10:13	0:0	4	->
water	10:15	0:0	4	i_pcr
op	10:21	0:0	4	=
call	10:23	10:29	4	mdate
op	10:31	0:0	4	+
water	10:33	0:0	4	(
water	10:34	0:0	4	p_sys
op	10:39	0:0	4	->
water	10:41	0:0	4	i_dsf
water	10:47	0:0	4	?
water	10:49	0:0	4	120000
water	10:56	0:0	4	:
water	10:58	0:0	4	90000
water	10:63	0:0	4	)
water	10:64	0:0	4	;
water	11:4	0:0	4	}
call	13:4	13:74	2	es_out_Control
arg	13:20	13:32	3	p_demux->out
water	13:20	0:0	4	p_demux
op	13:27	0:0	4	->
water	13:29	0:0	4	out
arg	13:34	13:48	3	ES_OUT_SET_PCR
water	13:34	0:0	4	ES_OUT_SET_PCR
arg	13:50	13:74	3	VLC_TS_0+p_sys->i_pcr
water	13:50	0:0	4	VLC_TS_0
op	13:59	0:0	4	+
water	13:61	0:0	4	p_sys
op	13:66	0:0	4	->
water	13:68	0:0	4	i_pcr
water	13:75	0:0	2	;
water	14:4	0:0	2	p_block
op	14:12	0:0	2	=
call	14:14	14:58	2	stream_Block
arg	14:28	14:38	3	p_demux->s
water	14:28	0:0	4	p_demux
op	14:35	0:0	4	->
water	14:37	0:0	4	s
arg	14:40	14:58	3	p_sys->frame_size
water	14:40	0:0	4	p_sys
op	14:45	0:0	4	->
water	14:47	0:0	4	frame_size
water	14:59	0:0	2	;
if	15:4	19:4	2	(p_block == NULL)
cond	15:8	15:19	3	p_block == NULL
water	15:8	0:0	4	p_block
op	15:16	0:0	4	==
water	15:19	0:0	4	NULL
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
return	18:8	18:16	4	0
water	18:15	0:0	5	0
water	19:4	0:0	4	}
if	20:4	24:4	2	(p_sys -> p_es_audio)
cond	20:8	20:15	3	p_sys -> p_es_audio
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	p_es_audio
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
call	22:8	23:52	4	es_out_Control
arg	22:24	22:36	5	p_demux->out
water	22:24	0:0	6	p_demux
op	22:31	0:0	6	->
water	22:33	0:0	6	out
arg	22:38	22:57	5	ES_OUT_GET_ES_STATE
water	22:38	0:0	6	ES_OUT_GET_ES_STATE
arg	23:24	23:41	5	p_sys->p_es_audio
water	23:24	0:0	6	p_sys
op	23:29	0:0	6	->
water	23:31	0:0	6	p_es_audio
arg	23:43	23:52	5	&b_audio
op	23:43	0:0	6	&
water	23:44	0:0	6	b_audio
water	23:53	0:0	4	;
water	24:4	0:0	4	}
water	25:4	0:0	2	p_block
op	25:11	0:0	2	->
water	25:13	0:0	2	i_dts
op	25:19	0:0	2	=
water	26:4	0:0	2	p_block
op	26:11	0:0	2	->
water	26:13	0:0	2	i_pts
op	26:19	0:0	2	=
water	26:21	0:0	2	VLC_TS_0
op	26:30	0:0	2	+
water	26:32	0:0	2	p_sys
op	26:37	0:0	2	->
water	26:39	0:0	2	i_pcr
water	26:44	0:0	2	;
if	27:4	32:4	2	(b_audio)
cond	27:8	27:8	3	b_audio
water	27:8	0:0	4	b_audio
stmts	28:4	32:4	3	
water	28:4	0:0	4	{
decl	29:8	29:60	4	block_t	*p_audio_block
op	29:31	0:0	4	=
call	29:33	29:59	5	dv_extract_audio
arg	29:51	29:59	6	p_block
water	29:51	0:0	7	p_block
if	30:8	31:73	4	(p_audio_block)
cond	30:12	30:12	5	p_audio_block
water	30:12	0:0	6	p_audio_block
stmts	31:12	31:73	5	
call	31:12	31:72	6	es_out_Send
arg	31:25	31:37	7	p_demux->out
water	31:25	0:0	8	p_demux
op	31:32	0:0	8	->
water	31:34	0:0	8	out
arg	31:39	31:56	7	p_sys->p_es_audio
water	31:39	0:0	8	p_sys
op	31:44	0:0	8	->
water	31:46	0:0	8	p_es_audio
arg	31:58	31:72	7	p_audio_block
water	31:58	0:0	8	p_audio_block
water	31:73	0:0	6	;
water	32:4	0:0	4	}
call	33:4	33:58	2	es_out_Send
arg	33:17	33:29	3	p_demux->out
water	33:17	0:0	4	p_demux
op	33:24	0:0	4	->
water	33:26	0:0	4	out
arg	33:31	33:48	3	p_sys->p_es_video
water	33:31	0:0	4	p_sys
op	33:36	0:0	4	->
water	33:38	0:0	4	p_es_video
arg	33:50	33:58	3	p_block
water	33:50	0:0	4	p_block
water	33:59	0:0	2	;
if	34:4	37:4	2	(! p_sys -> b_hurry_up)
cond	34:8	34:16	3	! p_sys -> b_hurry_up
op	34:8	0:0	4	!
water	34:9	0:0	4	p_sys
op	34:14	0:0	4	->
water	34:16	0:0	4	b_hurry_up
stmts	35:4	37:4	3	
water	35:4	0:0	4	{
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	i_pcr
op	36:21	0:0	4	+=
water	36:24	0:0	4	(
call	36:26	36:41	4	INT64_C
arg	36:34	36:41	5	1000000
water	36:34	0:0	6	1000000
op	36:43	0:0	4	/
water	36:45	0:0	4	p_sys
op	36:50	0:0	4	->
water	36:52	0:0	4	f_rate
water	36:59	0:0	4	)
water	36:60	0:0	4	;
water	37:4	0:0	4	}
return	38:4	38:12	2	1
water	38:11	0:0	3	1

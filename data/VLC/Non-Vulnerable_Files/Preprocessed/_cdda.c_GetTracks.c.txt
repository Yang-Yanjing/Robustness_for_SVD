func	2:0	202:0	0	static int	GetTracks
params	2:20	0:0	1	
param	2:22	2:40	2	access_t *	p_access
param	2:42	2:66	2	input_item_t *	p_current
stmnts	0:0	201:22	1	
decl	4:4	4:41	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_access
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	6:79	2	const int	i_titles
op	5:23	0:0	2	=
call	5:25	6:78	3	ioctl_GetTracksMap
arg	5:45	5:65	4	VLC_OBJECT(p_access)
call	5:45	5:64	5	VLC_OBJECT
arg	5:56	5:64	6	p_access
water	5:56	0:0	7	p_access
arg	6:45	6:58	4	p_sys->vcddev
water	6:45	0:0	5	p_sys
op	6:50	0:0	5	->
water	6:52	0:0	5	vcddev
arg	6:60	6:78	4	&p_sys->p_sectors
op	6:60	0:0	5	&
water	6:61	0:0	5	p_sys
op	6:66	0:0	5	->
water	6:68	0:0	5	p_sectors
if	7:4	14:4	2	(i_titles <= 0)
cond	7:8	7:20	3	i_titles <= 0
water	7:8	0:0	4	i_titles
op	7:17	0:0	4	<=
water	7:20	0:0	4	0
stmts	8:4	14:4	3	
water	8:4	0:0	4	{
if	9:8	10:57	4	(i_titles < 0)
cond	9:12	9:23	5	i_titles < 0
water	9:12	0:0	6	i_titles
op	9:21	0:0	6	<
water	9:23	0:0	6	0
stmts	10:12	10:57	5	
call	10:12	10:56	6	msg_Err
arg	10:21	10:29	7	p_access
water	10:21	0:0	8	p_access
arg	10:31	10:56	7	"unable to count tracks"
water	10:31	0:0	8	"unable to count tracks"
water	10:57	0:0	6	;
else	11:8	12:56	4
stmts	11:13	12:56	5	
if	11:13	12:56	6	(i_titles <= 0)
cond	11:17	11:29	7	i_titles <= 0
water	11:17	0:0	8	i_titles
op	11:26	0:0	8	<=
water	11:29	0:0	8	0
stmts	12:12	12:56	7	
call	12:12	12:55	8	msg_Err
arg	12:21	12:29	9	p_access
water	12:21	0:0	10	p_access
arg	12:31	12:55	9	"no audio tracks found"
water	12:31	0:0	10	"no audio tracks found"
water	12:56	0:0	8	;
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	13:28	0:0	4	;
water	14:4	0:0	4	}
call	16:4	16:46	2	input_item_SetName
arg	16:24	16:33	3	p_current
water	16:24	0:0	4	p_current
arg	16:35	16:46	3	"Audio CD"
water	16:35	0:0	4	"Audio CD"
water	16:47	0:0	2	;
decl	17:4	17:32	2	const char	*psz_album
op	17:26	0:0	2	=
water	17:28	0:0	2	NULL
decl	18:4	18:31	2	const char	*psz_year
op	18:25	0:0	2	=
water	18:27	0:0	2	NULL
decl	19:4	19:32	2	const char	*psz_genre
op	19:26	0:0	2	=
water	19:28	0:0	2	NULL
decl	20:4	20:33	2	const char	*psz_artist
op	20:27	0:0	2	=
water	20:29	0:0	2	NULL
decl	21:4	21:38	2	const char	*psz_description
op	21:32	0:0	2	=
water	21:34	0:0	2	NULL
decl	28:4	28:29	2	char	psz_year_buffer[4+1]
call	29:4	29:50	2	msg_Dbg
arg	29:13	29:21	3	p_access
water	29:13	0:0	4	p_access
arg	29:23	29:50	3	"fetching infos with CDDB"
water	29:23	0:0	4	"fetching infos with CDDB"
water	29:51	0:0	2	;
decl	30:4	30:77	2	cddb_disc_t	*p_disc
op	30:24	0:0	2	=
call	30:26	30:76	3	GetCDDBInfo
arg	30:39	30:47	4	p_access
water	30:39	0:0	5	p_access
arg	30:49	30:57	4	i_titles
water	30:49	0:0	5	i_titles
arg	30:59	30:76	4	p_sys->p_sectors
water	30:59	0:0	5	p_sys
op	30:64	0:0	5	->
water	30:66	0:0	5	p_sectors
if	31:4	57:4	2	(p_disc)
cond	31:8	31:8	3	p_disc
water	31:8	0:0	4	p_disc
stmts	32:4	57:4	3	
water	32:4	0:0	4	{
water	33:8	0:0	4	psz_album
op	33:18	0:0	4	=
call	33:20	33:48	4	cddb_disc_get_title
arg	33:41	33:48	5	p_disc
water	33:41	0:0	6	p_disc
water	33:49	0:0	4	;
water	34:8	0:0	4	psz_genre
op	34:18	0:0	4	=
call	34:20	34:48	4	cddb_disc_get_genre
arg	34:41	34:48	5	p_disc
water	34:41	0:0	6	p_disc
water	34:49	0:0	4	;
water	36:8	0:0	4	const
water	36:14	0:0	4	unsigned
water	36:23	0:0	4	i_year
op	36:30	0:0	4	=
call	36:32	36:59	4	cddb_disc_get_year
arg	36:52	36:59	5	p_disc
water	36:52	0:0	6	p_disc
water	36:60	0:0	4	;
if	37:8	41:8	4	(i_year > 0)
cond	37:12	37:21	5	i_year > 0
water	37:12	0:0	6	i_year
op	37:19	0:0	6	>
water	37:21	0:0	6	0
stmts	38:8	41:8	5	
water	38:8	0:0	6	{
water	39:12	0:0	6	psz_year
op	39:21	0:0	6	=
water	39:23	0:0	6	psz_year_buffer
water	39:38	0:0	6	;
call	40:12	40:77	6	snprintf
arg	40:22	40:37	7	psz_year_buffer
water	40:22	0:0	8	psz_year_buffer
arg	40:39	40:62	7	sizeof(psz_year_buffer)
op	40:39	0:0	8	sizeof
water	40:45	0:0	8	(
water	40:46	0:0	8	psz_year_buffer
water	40:61	0:0	8	)
arg	40:64	40:68	7	"%u"
water	40:64	0:0	8	"%u"
arg	40:70	40:77	7	i_year
water	40:70	0:0	8	i_year
water	40:78	0:0	6	;
water	41:8	0:0	6	}
for	43:8	56:8	4	( int i = 0 ;i < i_titles;i ++)
forinit	0:0	43:22	5	 int i = 0 ;
decl	43:13	43:22	6	int	i
op	43:19	0:0	6	=
water	43:21	0:0	6	0
cond	43:24	43:28	5	i < i_titles
water	43:24	0:0	6	i
op	43:26	0:0	6	<
water	43:28	0:0	6	i_titles
forexpr	43:38	43:39	5	i ++
water	43:38	0:0	6	i
op	43:39	0:0	6	++
stmts	44:8	56:8	5	
water	44:8	0:0	6	{
decl	45:12	45:62	6	cddb_track_t	*t
op	45:28	0:0	6	=
call	45:30	45:61	7	cddb_disc_get_track
arg	45:51	45:57	8	p_disc
water	45:51	0:0	9	p_disc
arg	45:59	45:61	8	i
water	45:59	0:0	9	i
if	46:12	47:24	6	(! t)
cond	46:16	46:17	7	! t
op	46:16	0:0	8	!
water	46:17	0:0	8	t
stmts	47:16	47:24	7	
continue	47:16	47:24	8	
decl	48:12	48:69	6	const char	*psz_track_artist
op	48:41	0:0	6	=
call	48:43	48:68	7	cddb_track_get_artist
arg	48:66	48:68	8	t
water	48:66	0:0	9	t
if	49:12	54:12	6	(psz_artist && psz_track_artist &&strcmp (psz_artist ,psz_track_artist ))
cond	49:16	50:53	7	psz_artist && psz_track_artist &&strcmp (psz_artist ,psz_track_artist )
water	49:16	0:0	8	psz_artist
op	49:27	0:0	8	&&
water	49:30	0:0	8	psz_track_artist
op	49:47	0:0	8	&&
call	50:16	50:53	8	strcmp
arg	50:24	50:34	9	psz_artist
water	50:24	0:0	10	psz_artist
arg	50:36	50:53	9	psz_track_artist
water	50:36	0:0	10	psz_track_artist
stmts	51:12	54:12	7	
water	51:12	0:0	8	{
water	52:16	0:0	8	psz_artist
op	52:27	0:0	8	=
water	52:29	0:0	8	NULL
water	52:33	0:0	8	;
break	53:16	53:21	8	
water	54:12	0:0	8	}
water	55:12	0:0	6	psz_artist
op	55:23	0:0	6	=
water	55:25	0:0	6	psz_track_artist
water	55:41	0:0	6	;
water	56:8	0:0	6	}
water	57:4	0:0	4	}
else	58:4	59:49	2
stmts	59:8	59:49	3	
call	59:8	59:48	4	msg_Dbg
arg	59:17	59:25	5	p_access
water	59:17	0:0	6	p_access
arg	59:27	59:48	5	"GetCDDBInfo failed"
water	59:27	0:0	6	"GetCDDBInfo failed"
water	59:49	0:0	4	;
decl	62:4	62:27	2	vlc_meta_t	**pp_cd_text
decl	63:4	63:24	2	int	i_cd_text
if	64:4	69:4	2	(ioctl_GetCdText (VLC_OBJECT (p_access ) ,p_sys -> vcddev ,& pp_cd_text ,& i_cd_text ))
cond	64:8	64:86	3	ioctl_GetCdText (VLC_OBJECT (p_access ) ,p_sys -> vcddev ,& pp_cd_text ,& i_cd_text )
call	64:8	64:86	4	ioctl_GetCdText
arg	64:25	64:45	5	VLC_OBJECT(p_access)
call	64:25	64:44	6	VLC_OBJECT
arg	64:36	64:44	7	p_access
water	64:36	0:0	8	p_access
arg	64:47	64:60	5	p_sys->vcddev
water	64:47	0:0	6	p_sys
op	64:52	0:0	6	->
water	64:54	0:0	6	vcddev
arg	64:62	64:73	5	&pp_cd_text
op	64:62	0:0	6	&
water	64:63	0:0	6	pp_cd_text
arg	64:75	64:86	5	&i_cd_text
op	64:75	0:0	6	&
water	64:76	0:0	6	i_cd_text
stmts	65:4	69:4	3	
water	65:4	0:0	4	{
call	66:8	66:57	4	msg_Dbg
arg	66:17	66:25	5	p_access
water	66:17	0:0	6	p_access
arg	66:27	66:57	5	"CD-TEXT information missing"
water	66:27	0:0	6	"CD-TEXT information missing"
water	66:58	0:0	4	;
water	67:8	0:0	4	i_cd_text
op	67:18	0:0	4	=
water	67:20	0:0	4	0
water	67:21	0:0	4	;
water	68:8	0:0	4	pp_cd_text
op	68:19	0:0	4	=
water	68:21	0:0	4	NULL
water	68:25	0:0	4	;
water	69:4	0:0	4	}
if	71:4	78:4	2	(i_cd_text > 0 && pp_cd_text [ 0 ])
cond	71:8	71:37	3	i_cd_text > 0 && pp_cd_text [ 0 ]
water	71:8	0:0	4	i_cd_text
op	71:18	0:0	4	>
water	71:20	0:0	4	0
op	71:22	0:0	4	&&
water	71:25	0:0	4	pp_cd_text
op	71:35	0:0	4	[
water	71:36	0:0	4	0
op	71:37	0:0	4	]
stmts	72:4	78:4	3	
water	72:4	0:0	4	{
decl	73:8	73:48	4	const vlc_meta_t	*p_disc
op	73:33	0:0	4	=
water	73:35	0:0	4	pp_cd_text
op	73:45	0:0	4	[
water	73:46	0:0	4	0
op	73:47	0:0	4	]
call	74:8	74:74	4	ON_EMPTY
arg	74:18	74:27	5	psz_album
water	74:18	0:0	6	psz_album
arg	74:35	74:74	5	vlc_meta_Get(p_disc,vlc_meta_Album)
call	74:35	74:72	6	vlc_meta_Get
arg	74:49	74:55	7	p_disc
water	74:49	0:0	8	p_disc
arg	74:57	74:72	7	vlc_meta_Album
water	74:57	0:0	8	vlc_meta_Album
water	74:75	0:0	4	;
call	75:8	75:74	4	ON_EMPTY
arg	75:18	75:27	5	psz_genre
water	75:18	0:0	6	psz_genre
arg	75:35	75:74	5	vlc_meta_Get(p_disc,vlc_meta_Genre)
call	75:35	75:72	6	vlc_meta_Get
arg	75:49	75:55	7	p_disc
water	75:49	0:0	8	p_disc
arg	75:57	75:72	7	vlc_meta_Genre
water	75:57	0:0	8	vlc_meta_Genre
water	75:75	0:0	4	;
call	76:8	76:75	4	ON_EMPTY
arg	76:18	76:28	5	psz_artist
water	76:18	0:0	6	psz_artist
arg	76:35	76:75	5	vlc_meta_Get(p_disc,vlc_meta_Artist)
call	76:35	76:73	6	vlc_meta_Get
arg	76:49	76:55	7	p_disc
water	76:49	0:0	8	p_disc
arg	76:57	76:73	7	vlc_meta_Artist
water	76:57	0:0	8	vlc_meta_Artist
water	76:76	0:0	4	;
call	77:8	77:80	4	ON_EMPTY
arg	77:18	77:33	5	psz_description
water	77:18	0:0	6	psz_description
arg	77:35	77:80	5	vlc_meta_Get(p_disc,vlc_meta_Description)
call	77:35	77:78	6	vlc_meta_Get
arg	77:49	77:55	7	p_disc
water	77:49	0:0	8	p_disc
arg	77:57	77:78	7	vlc_meta_Description
water	77:57	0:0	8	vlc_meta_Description
water	77:81	0:0	4	;
water	78:4	0:0	4	}
if	79:4	83:4	2	(NONEMPTY (psz_album ))
cond	79:8	79:28	3	NONEMPTY (psz_album )
call	79:8	79:28	4	NONEMPTY
arg	79:18	79:28	5	psz_album
water	79:18	0:0	6	psz_album
stmts	80:4	83:4	3	
water	80:4	0:0	4	{
call	81:8	81:49	4	input_item_SetName
arg	81:28	81:37	5	p_current
water	81:28	0:0	6	p_current
arg	81:39	81:49	5	psz_album
water	81:39	0:0	6	psz_album
water	81:50	0:0	4	;
call	82:8	82:50	4	input_item_SetAlbum
arg	82:29	82:38	5	p_current
water	82:29	0:0	6	p_current
arg	82:40	82:50	5	psz_album
water	82:40	0:0	6	psz_album
water	82:51	0:0	4	;
water	83:4	0:0	4	}
if	84:4	85:51	2	(NONEMPTY (psz_genre ))
cond	84:8	84:28	3	NONEMPTY (psz_genre )
call	84:8	84:28	4	NONEMPTY
arg	84:18	84:28	5	psz_genre
water	84:18	0:0	6	psz_genre
stmts	85:8	85:51	3	
call	85:8	85:50	4	input_item_SetGenre
arg	85:29	85:38	5	p_current
water	85:29	0:0	6	p_current
arg	85:40	85:50	5	psz_genre
water	85:40	0:0	6	psz_genre
water	85:51	0:0	4	;
if	86:4	87:53	2	(NONEMPTY (psz_artist ))
cond	86:8	86:29	3	NONEMPTY (psz_artist )
call	86:8	86:29	4	NONEMPTY
arg	86:18	86:29	5	psz_artist
water	86:18	0:0	6	psz_artist
stmts	87:8	87:53	3	
call	87:8	87:52	4	input_item_SetArtist
arg	87:30	87:39	5	p_current
water	87:30	0:0	6	p_current
arg	87:41	87:52	5	psz_artist
water	87:41	0:0	6	psz_artist
water	87:53	0:0	4	;
if	88:4	89:49	2	(NONEMPTY (psz_year ))
cond	88:8	88:27	3	NONEMPTY (psz_year )
call	88:8	88:27	4	NONEMPTY
arg	88:18	88:27	5	psz_year
water	88:18	0:0	6	psz_year
stmts	89:8	89:49	3	
call	89:8	89:48	4	input_item_SetDate
arg	89:28	89:37	5	p_current
water	89:28	0:0	6	p_current
arg	89:39	89:48	5	psz_year
water	89:39	0:0	6	psz_year
water	89:49	0:0	4	;
if	90:4	91:63	2	(NONEMPTY (psz_description ))
cond	90:8	90:34	3	NONEMPTY (psz_description )
call	90:8	90:34	4	NONEMPTY
arg	90:18	90:34	5	psz_description
water	90:18	0:0	6	psz_description
stmts	91:8	91:63	3	
call	91:8	91:62	4	input_item_SetDescription
arg	91:35	91:44	5	p_current
water	91:35	0:0	6	p_current
arg	91:46	91:62	5	psz_description
water	91:46	0:0	6	psz_description
water	91:63	0:0	4	;
decl	92:4	93:71	2	const mtime_t	i_duration
op	92:29	0:0	2	=
call	92:31	92:91	3	(int64_t)
arg	92:42	92:91	4	p_sys->p_sectors[i_titles]-p_sys->p_sectors[0]
water	92:42	0:0	5	p_sys
op	92:47	0:0	5	->
water	92:49	0:0	5	p_sectors
op	92:58	0:0	5	[
water	92:59	0:0	5	i_titles
op	92:67	0:0	5	]
op	92:69	0:0	5	-
water	92:71	0:0	5	p_sys
op	92:76	0:0	5	->
water	92:78	0:0	5	p_sectors
op	92:87	0:0	5	[
water	92:88	0:0	5	0
op	92:89	0:0	5	]
op	92:93	0:0	2	*
water	93:31	0:0	2	CDDA_DATA_SIZE
op	93:46	0:0	2	*
water	93:48	0:0	2	1000000
op	93:56	0:0	2	/
water	93:58	0:0	2	44100
op	93:64	0:0	2	/
water	93:66	0:0	2	2
op	93:68	0:0	2	/
water	93:70	0:0	2	2
call	94:4	94:50	2	input_item_SetDuration
arg	94:28	94:37	3	p_current
water	94:28	0:0	4	p_current
arg	94:39	94:50	3	i_duration
water	94:39	0:0	4	i_duration
water	94:51	0:0	2	;
decl	95:4	95:67	2	input_item_node_t	*p_root
op	95:30	0:0	2	=
call	95:32	95:66	3	input_item_node_Create
arg	95:56	95:66	4	p_current
water	95:56	0:0	5	p_current
for	97:4	184:4	2	( int i = 0 ;i < i_titles;i ++)
forinit	0:0	97:18	3	 int i = 0 ;
decl	97:9	97:18	4	int	i
op	97:15	0:0	4	=
water	97:17	0:0	4	0
cond	97:20	97:24	3	i < i_titles
water	97:20	0:0	4	i
op	97:22	0:0	4	<
water	97:24	0:0	4	i_titles
forexpr	97:34	97:35	3	i ++
water	97:34	0:0	4	i
op	97:35	0:0	4	++
stmts	98:4	184:4	3	
water	98:4	0:0	4	{
decl	99:8	99:42	4	char	*psz_uri
water	99:21	0:0	4	,
decl	99:8	99:42	4	char	*psz_opt
water	99:31	0:0	4	,
decl	99:8	99:42	4	char	*psz_name
call	100:8	100:72	4	msg_Dbg
arg	100:17	100:25	5	p_access
water	100:17	0:0	6	p_access
arg	100:27	100:47	5	"track[%d] start=%d"
water	100:27	0:0	6	"track[%d] start=%d"
arg	100:49	100:50	5	i
water	100:49	0:0	6	i
arg	100:52	100:72	5	p_sys->p_sectors[i]
water	100:52	0:0	6	p_sys
op	100:57	0:0	6	->
water	100:59	0:0	6	p_sectors
op	100:68	0:0	6	[
water	100:69	0:0	6	i
op	100:70	0:0	6	]
water	100:73	0:0	4	;
if	101:8	102:20	4	(asprintf (& psz_uri ,"cdda://%s" ,p_access -> psz_location ) == - 1)
cond	101:12	101:74	5	asprintf (& psz_uri ,"cdda://%s" ,p_access -> psz_location ) == - 1
call	101:12	101:68	6	asprintf
arg	101:22	101:30	7	&psz_uri
op	101:22	0:0	8	&
water	101:23	0:0	8	psz_uri
arg	101:32	101:43	7	"cdda://%s"
water	101:32	0:0	8	"cdda://%s"
arg	101:45	101:68	7	p_access->psz_location
water	101:45	0:0	8	p_access
op	101:53	0:0	8	->
water	101:55	0:0	8	psz_location
op	101:70	0:0	6	==
op	101:73	0:0	6	-
water	101:74	0:0	6	1
stmts	102:12	102:20	5	
continue	102:12	102:20	6	
if	104:8	105:30	4	(asprintf (& psz_name ,_ ("Audio CD - Track %02i" ) ,( i + 1 ) ) == - 1)
cond	104:12	104:73	5	asprintf (& psz_name ,_ ("Audio CD - Track %02i" ) ,( i + 1 ) ) == - 1
call	104:12	104:67	6	asprintf
arg	104:22	104:31	7	&psz_name
op	104:22	0:0	8	&
water	104:23	0:0	8	psz_name
arg	104:33	104:59	7	_("Audio CD - Track %02i")
call	104:33	104:58	8	_
arg	104:35	104:58	9	"Audio CD - Track %02i"
water	104:35	0:0	10	"Audio CD - Track %02i"
arg	104:61	104:67	7	(i+1)
water	104:61	0:0	8	(
water	104:62	0:0	8	i
op	104:63	0:0	8	+
water	104:64	0:0	8	1
water	104:65	0:0	8	)
op	104:69	0:0	6	==
op	104:72	0:0	6	-
water	104:73	0:0	6	1
stmts	105:12	105:30	5	
water	105:12	0:0	6	psz_name
op	105:21	0:0	6	=
water	105:23	0:0	6	psz_uri
water	105:30	0:0	6	;
decl	107:8	108:75	4	const mtime_t	i_duration
op	107:33	0:0	4	=
call	107:35	107:90	5	(int64_t)
arg	107:46	107:90	6	p_sys->p_sectors[i+1]-p_sys->p_sectors[i]
water	107:46	0:0	7	p_sys
op	107:51	0:0	7	->
water	107:53	0:0	7	p_sectors
op	107:62	0:0	7	[
water	107:63	0:0	7	i
op	107:64	0:0	7	+
water	107:65	0:0	7	1
op	107:66	0:0	7	]
op	107:68	0:0	7	-
water	107:70	0:0	7	p_sys
op	107:75	0:0	7	->
water	107:77	0:0	7	p_sectors
op	107:86	0:0	7	[
water	107:87	0:0	7	i
op	107:88	0:0	7	]
op	107:92	0:0	4	*
water	108:35	0:0	4	CDDA_DATA_SIZE
op	108:50	0:0	4	*
water	108:52	0:0	4	1000000
op	108:60	0:0	4	/
water	108:62	0:0	4	44100
op	108:68	0:0	4	/
water	108:70	0:0	4	2
op	108:72	0:0	4	/
water	108:74	0:0	4	2
decl	109:8	110:78	4	input_item_t	*p_item
op	109:29	0:0	4	=
call	109:31	110:77	5	input_item_NewWithType
arg	109:55	109:62	6	psz_uri
water	109:55	0:0	7	psz_uri
arg	109:64	109:72	6	psz_name
water	109:64	0:0	7	psz_name
arg	109:74	109:75	6	0
water	109:74	0:0	7	0
arg	110:41	110:45	6	NULL
water	110:41	0:0	7	NULL
arg	110:47	110:48	6	0
water	110:47	0:0	7	0
arg	110:50	110:60	6	i_duration
water	110:50	0:0	7	i_duration
arg	110:62	110:77	6	ITEM_TYPE_DISC
water	110:62	0:0	7	ITEM_TYPE_DISC
if	111:8	112:28	4	(likely (psz_name != psz_uri ))
cond	111:12	111:38	5	likely (psz_name != psz_uri )
call	111:12	111:38	6	likely
arg	111:19	111:38	7	psz_name!=psz_uri
water	111:19	0:0	8	psz_name
op	111:28	0:0	8	!=
water	111:31	0:0	8	psz_uri
stmts	112:12	112:28	5	
call	112:12	112:27	6	free
arg	112:18	112:27	7	psz_name
water	112:18	0:0	8	psz_name
water	112:28	0:0	6	;
call	113:8	113:22	4	free
arg	113:14	113:22	5	psz_uri
water	113:14	0:0	6	psz_uri
water	113:23	0:0	4	;
if	114:8	115:20	4	(unlikely (p_item == NULL ))
cond	114:12	114:35	5	unlikely (p_item == NULL )
call	114:12	114:35	6	unlikely
arg	114:21	114:35	7	p_item==NULL
water	114:21	0:0	8	p_item
op	114:28	0:0	8	==
water	114:31	0:0	8	NULL
stmts	115:12	115:20	5	
continue	115:12	115:20	6	
call	116:8	116:50	4	input_item_CopyOptions
arg	116:32	116:41	5	p_current
water	116:32	0:0	6	p_current
arg	116:43	116:50	5	p_item
water	116:43	0:0	6	p_item
water	116:51	0:0	4	;
if	117:8	121:8	4	(likely (asprintf (& psz_opt ,"cdda-track=%i" ,i + 1 ) != - 1 ))
cond	117:12	117:67	5	likely (asprintf (& psz_opt ,"cdda-track=%i" ,i + 1 ) != - 1 )
call	117:12	117:67	6	likely
arg	117:19	117:67	7	asprintf(&psz_opt,"cdda-track=%i",i+1)!=-1
call	117:19	117:60	8	asprintf
arg	117:29	117:37	9	&psz_opt
op	117:29	0:0	10	&
water	117:30	0:0	10	psz_opt
arg	117:39	117:54	9	"cdda-track=%i"
water	117:39	0:0	10	"cdda-track=%i"
arg	117:56	117:60	9	i+1
water	117:56	0:0	10	i
op	117:57	0:0	10	+
water	117:58	0:0	10	1
op	117:62	0:0	8	!=
op	117:65	0:0	8	-
water	117:66	0:0	8	1
stmts	118:8	121:8	5	
water	118:8	0:0	6	{
call	119:12	119:76	6	input_item_AddOption
arg	119:34	119:40	7	p_item
water	119:34	0:0	8	p_item
arg	119:42	119:49	7	psz_opt
water	119:42	0:0	8	psz_opt
arg	119:51	119:76	7	VLC_INPUT_OPTION_TRUSTED
water	119:51	0:0	8	VLC_INPUT_OPTION_TRUSTED
water	119:77	0:0	6	;
call	120:12	120:26	6	free
arg	120:18	120:26	7	psz_opt
water	120:18	0:0	8	psz_opt
water	120:27	0:0	6	;
water	121:8	0:0	6	}
if	122:8	127:8	4	(likely (asprintf (& psz_opt ,"cdda-first-sector=%i" ,p_sys -> p_sectors [ i ] ) != - 1 ))
cond	122:12	123:56	5	likely (asprintf (& psz_opt ,"cdda-first-sector=%i" ,p_sys -> p_sectors [ i ] ) != - 1 )
call	122:12	123:56	6	likely
arg	122:19	123:56	7	asprintf(&psz_opt,"cdda-first-sector=%i",p_sys->p_sectors[i])!=-1
call	122:19	123:49	8	asprintf
arg	122:29	122:37	9	&psz_opt
op	122:29	0:0	10	&
water	122:30	0:0	10	psz_opt
arg	122:39	122:61	9	"cdda-first-sector=%i"
water	122:39	0:0	10	"cdda-first-sector=%i"
arg	123:29	123:49	9	p_sys->p_sectors[i]
water	123:29	0:0	10	p_sys
op	123:34	0:0	10	->
water	123:36	0:0	10	p_sectors
op	123:45	0:0	10	[
water	123:46	0:0	10	i
op	123:47	0:0	10	]
op	123:51	0:0	8	!=
op	123:54	0:0	8	-
water	123:55	0:0	8	1
stmts	124:8	127:8	5	
water	124:8	0:0	6	{
call	125:12	125:76	6	input_item_AddOption
arg	125:34	125:40	7	p_item
water	125:34	0:0	8	p_item
arg	125:42	125:49	7	psz_opt
water	125:42	0:0	8	psz_opt
arg	125:51	125:76	7	VLC_INPUT_OPTION_TRUSTED
water	125:51	0:0	8	VLC_INPUT_OPTION_TRUSTED
water	125:77	0:0	6	;
call	126:12	126:26	6	free
arg	126:18	126:26	7	psz_opt
water	126:18	0:0	8	psz_opt
water	126:27	0:0	6	;
water	127:8	0:0	6	}
if	128:8	133:8	4	(likely (asprintf (& psz_opt ,"cdda-last-sector=%i" ,p_sys -> p_sectors [ i + 1 ] ) != - 1 ))
cond	128:12	129:58	5	likely (asprintf (& psz_opt ,"cdda-last-sector=%i" ,p_sys -> p_sectors [ i + 1 ] ) != - 1 )
call	128:12	129:58	6	likely
arg	128:19	129:58	7	asprintf(&psz_opt,"cdda-last-sector=%i",p_sys->p_sectors[i+1])!=-1
call	128:19	129:51	8	asprintf
arg	128:29	128:37	9	&psz_opt
op	128:29	0:0	10	&
water	128:30	0:0	10	psz_opt
arg	128:39	128:60	9	"cdda-last-sector=%i"
water	128:39	0:0	10	"cdda-last-sector=%i"
arg	129:29	129:51	9	p_sys->p_sectors[i+1]
water	129:29	0:0	10	p_sys
op	129:34	0:0	10	->
water	129:36	0:0	10	p_sectors
op	129:45	0:0	10	[
water	129:46	0:0	10	i
op	129:47	0:0	10	+
water	129:48	0:0	10	1
op	129:49	0:0	10	]
op	129:53	0:0	8	!=
op	129:56	0:0	8	-
water	129:57	0:0	8	1
stmts	130:8	133:8	5	
water	130:8	0:0	6	{
call	131:12	131:76	6	input_item_AddOption
arg	131:34	131:40	7	p_item
water	131:34	0:0	8	p_item
arg	131:42	131:49	7	psz_opt
water	131:42	0:0	8	psz_opt
arg	131:51	131:76	7	VLC_INPUT_OPTION_TRUSTED
water	131:51	0:0	8	VLC_INPUT_OPTION_TRUSTED
water	131:77	0:0	6	;
call	132:12	132:26	6	free
arg	132:18	132:26	7	psz_opt
water	132:18	0:0	8	psz_opt
water	132:27	0:0	6	;
water	133:8	0:0	6	}
decl	134:8	134:42	4	const char	*psz_track_title
op	134:36	0:0	4	=
water	134:38	0:0	4	NULL
decl	135:8	135:43	4	const char	*psz_track_artist
op	135:37	0:0	4	=
water	135:39	0:0	4	NULL
decl	136:8	136:42	4	const char	*psz_track_genre
op	136:36	0:0	4	=
water	136:38	0:0	4	NULL
decl	137:8	137:48	4	const char	*psz_track_description
op	137:42	0:0	4	=
water	137:44	0:0	4	NULL
if	140:8	148:8	4	(p_disc)
cond	140:12	140:12	5	p_disc
water	140:12	0:0	6	p_disc
stmts	141:8	148:8	5	
water	141:8	0:0	6	{
decl	142:12	142:62	6	cddb_track_t	*t
op	142:28	0:0	6	=
call	142:30	142:61	7	cddb_disc_get_track
arg	142:51	142:57	8	p_disc
water	142:51	0:0	9	p_disc
arg	142:59	142:61	8	i
water	142:59	0:0	9	i
if	143:12	147:12	6	(t != NULL)
cond	143:16	143:21	7	t != NULL
water	143:16	0:0	8	t
op	143:18	0:0	8	!=
water	143:21	0:0	8	NULL
stmts	144:12	147:12	7	
water	144:12	0:0	8	{
water	145:16	0:0	8	psz_track_title
op	145:32	0:0	8	=
call	145:34	145:58	8	cddb_track_get_title
arg	145:56	145:58	9	t
water	145:56	0:0	10	t
water	145:59	0:0	8	;
water	146:16	0:0	8	psz_track_artist
op	146:33	0:0	8	=
call	146:35	146:60	8	cddb_track_get_artist
arg	146:58	146:60	9	t
water	146:58	0:0	10	t
water	146:61	0:0	8	;
water	147:12	0:0	8	}
water	148:8	0:0	6	}
if	151:8	158:8	4	(i + 1 < i_cd_text && pp_cd_text [ i + 1 ])
cond	151:12	151:45	5	i + 1 < i_cd_text && pp_cd_text [ i + 1 ]
water	151:12	0:0	6	i
op	151:13	0:0	6	+
water	151:14	0:0	6	1
op	151:16	0:0	6	<
water	151:18	0:0	6	i_cd_text
op	151:28	0:0	6	&&
water	151:31	0:0	6	pp_cd_text
op	151:41	0:0	6	[
water	151:42	0:0	6	i
op	151:43	0:0	6	+
water	151:44	0:0	6	1
op	151:45	0:0	6	]
stmts	152:8	158:8	5	
water	152:8	0:0	6	{
decl	153:12	153:49	6	const vlc_meta_t	*t
op	153:32	0:0	6	=
water	153:34	0:0	6	pp_cd_text
op	153:44	0:0	6	[
water	153:45	0:0	6	i
op	153:46	0:0	6	+
water	153:47	0:0	6	1
op	153:48	0:0	6	]
call	154:12	154:79	6	ON_EMPTY
arg	154:22	154:37	7	psz_track_title
water	154:22	0:0	8	psz_track_title
arg	154:45	154:79	7	vlc_meta_Get(t,vlc_meta_Title)
call	154:45	154:77	8	vlc_meta_Get
arg	154:59	154:60	9	t
water	154:59	0:0	10	t
arg	154:62	154:77	9	vlc_meta_Title
water	154:62	0:0	10	vlc_meta_Title
water	154:80	0:0	6	;
call	155:12	155:80	6	ON_EMPTY
arg	155:22	155:38	7	psz_track_artist
water	155:22	0:0	8	psz_track_artist
arg	155:45	155:80	7	vlc_meta_Get(t,vlc_meta_Artist)
call	155:45	155:78	8	vlc_meta_Get
arg	155:59	155:60	9	t
water	155:59	0:0	10	t
arg	155:62	155:78	9	vlc_meta_Artist
water	155:62	0:0	10	vlc_meta_Artist
water	155:81	0:0	6	;
call	156:12	156:79	6	ON_EMPTY
arg	156:22	156:37	7	psz_track_genre
water	156:22	0:0	8	psz_track_genre
arg	156:45	156:79	7	vlc_meta_Get(t,vlc_meta_Genre)
call	156:45	156:77	8	vlc_meta_Get
arg	156:59	156:60	9	t
water	156:59	0:0	10	t
arg	156:62	156:77	9	vlc_meta_Genre
water	156:62	0:0	10	vlc_meta_Genre
water	156:80	0:0	6	;
call	157:12	157:85	6	ON_EMPTY
arg	157:22	157:43	7	psz_track_description
water	157:22	0:0	8	psz_track_description
arg	157:45	157:85	7	vlc_meta_Get(t,vlc_meta_Description)
call	157:45	157:83	8	vlc_meta_Get
arg	157:59	157:60	9	t
water	157:59	0:0	10	t
arg	157:62	157:83	9	vlc_meta_Description
water	157:62	0:0	10	vlc_meta_Description
water	157:86	0:0	6	;
water	158:8	0:0	6	}
call	160:8	160:53	4	ON_EMPTY
arg	160:18	160:34	5	psz_track_artist
water	160:18	0:0	6	psz_track_artist
arg	160:42	160:53	5	psz_artist
water	160:42	0:0	6	psz_artist
water	160:54	0:0	4	;
call	161:8	161:52	4	ON_EMPTY
arg	161:18	161:33	5	psz_track_genre
water	161:18	0:0	6	psz_track_genre
arg	161:42	161:52	5	psz_genre
water	161:42	0:0	6	psz_genre
water	161:53	0:0	4	;
call	162:8	162:58	4	ON_EMPTY
arg	162:18	162:39	5	psz_track_description
water	162:18	0:0	6	psz_track_description
arg	162:42	162:58	5	psz_description
water	162:42	0:0	6	psz_description
water	162:59	0:0	4	;
if	164:8	168:8	4	(NONEMPTY (psz_track_title ))
cond	164:12	164:38	5	NONEMPTY (psz_track_title )
call	164:12	164:38	6	NONEMPTY
arg	164:22	164:38	7	psz_track_title
water	164:22	0:0	8	psz_track_title
stmts	165:8	168:8	5	
water	165:8	0:0	6	{
call	166:12	166:56	6	input_item_SetName
arg	166:32	166:38	7	p_item
water	166:32	0:0	8	p_item
arg	166:40	166:56	7	psz_track_title
water	166:40	0:0	8	psz_track_title
water	166:57	0:0	6	;
call	167:12	167:57	6	input_item_SetTitle
arg	167:33	167:39	7	p_item
water	167:33	0:0	8	p_item
arg	167:41	167:57	7	psz_track_title
water	167:41	0:0	8	psz_track_title
water	167:58	0:0	6	;
water	168:8	0:0	6	}
if	169:8	170:60	4	(NONEMPTY (psz_track_artist ))
cond	169:12	169:39	5	NONEMPTY (psz_track_artist )
call	169:12	169:39	6	NONEMPTY
arg	169:22	169:39	7	psz_track_artist
water	169:22	0:0	8	psz_track_artist
stmts	170:12	170:60	5	
call	170:12	170:59	6	input_item_SetArtist
arg	170:34	170:40	7	p_item
water	170:34	0:0	8	p_item
arg	170:42	170:59	7	psz_track_artist
water	170:42	0:0	8	psz_track_artist
water	170:60	0:0	6	;
if	171:8	172:58	4	(NONEMPTY (psz_track_genre ))
cond	171:12	171:38	5	NONEMPTY (psz_track_genre )
call	171:12	171:38	6	NONEMPTY
arg	171:22	171:38	7	psz_track_genre
water	171:22	0:0	8	psz_track_genre
stmts	172:12	172:58	5	
call	172:12	172:57	6	input_item_SetGenre
arg	172:33	172:39	7	p_item
water	172:33	0:0	8	p_item
arg	172:41	172:57	7	psz_track_genre
water	172:41	0:0	8	psz_track_genre
water	172:58	0:0	6	;
if	173:8	174:70	4	(NONEMPTY (psz_track_description ))
cond	173:12	173:44	5	NONEMPTY (psz_track_description )
call	173:12	173:44	6	NONEMPTY
arg	173:22	173:44	7	psz_track_description
water	173:22	0:0	8	psz_track_description
stmts	174:12	174:70	5	
call	174:12	174:69	6	input_item_SetDescription
arg	174:39	174:45	7	p_item
water	174:39	0:0	8	p_item
arg	174:47	174:69	7	psz_track_description
water	174:47	0:0	8	psz_track_description
water	174:70	0:0	6	;
if	175:8	176:52	4	(NONEMPTY (psz_album ))
cond	175:12	175:32	5	NONEMPTY (psz_album )
call	175:12	175:32	6	NONEMPTY
arg	175:22	175:32	7	psz_album
water	175:22	0:0	8	psz_album
stmts	176:12	176:52	5	
call	176:12	176:51	6	input_item_SetAlbum
arg	176:33	176:39	7	p_item
water	176:33	0:0	8	p_item
arg	176:41	176:51	7	psz_album
water	176:41	0:0	8	psz_album
water	176:52	0:0	6	;
if	177:8	178:50	4	(NONEMPTY (psz_year ))
cond	177:12	177:31	5	NONEMPTY (psz_year )
call	177:12	177:31	6	NONEMPTY
arg	177:22	177:31	7	psz_year
water	177:22	0:0	8	psz_year
stmts	178:12	178:50	5	
call	178:12	178:49	6	input_item_SetDate
arg	178:32	178:38	7	p_item
water	178:32	0:0	8	p_item
arg	178:40	178:49	7	psz_year
water	178:40	0:0	8	psz_year
water	178:50	0:0	6	;
decl	179:8	179:25	4	char	psz_num[3+1]
call	180:8	180:54	4	snprintf
arg	180:18	180:25	5	psz_num
water	180:18	0:0	6	psz_num
arg	180:27	180:42	5	sizeof(psz_num)
op	180:27	0:0	6	sizeof
water	180:33	0:0	6	(
water	180:34	0:0	6	psz_num
water	180:41	0:0	6	)
arg	180:44	180:48	5	"%d"
water	180:44	0:0	6	"%d"
arg	180:50	180:54	5	1+i
water	180:50	0:0	6	1
op	180:51	0:0	6	+
water	180:52	0:0	6	i
water	180:55	0:0	4	;
call	181:8	181:48	4	input_item_SetTrackNum
arg	181:32	181:38	5	p_item
water	181:32	0:0	6	p_item
arg	181:40	181:48	5	psz_num
water	181:40	0:0	6	psz_num
water	181:49	0:0	4	;
call	182:8	182:51	4	input_item_node_AppendItem
arg	182:36	182:42	5	p_root
water	182:36	0:0	6	p_root
arg	182:44	182:51	5	p_item
water	182:44	0:0	6	p_item
water	182:52	0:0	4	;
call	183:8	183:30	4	vlc_gc_decref
arg	183:23	183:30	5	p_item
water	183:23	0:0	6	p_item
water	183:31	0:0	4	;
water	184:4	0:0	4	}
call	187:4	187:42	2	input_item_node_PostAndDelete
arg	187:35	187:42	3	p_root
water	187:35	0:0	4	p_root
water	187:43	0:0	2	;
for	189:4	195:4	2	( int i = 0 ;i < i_cd_text;i ++)
forinit	0:0	189:18	3	 int i = 0 ;
decl	189:9	189:18	4	int	i
op	189:15	0:0	4	=
water	189:17	0:0	4	0
cond	189:20	189:24	3	i < i_cd_text
water	189:20	0:0	4	i
op	189:22	0:0	4	<
water	189:24	0:0	4	i_cd_text
forexpr	189:35	189:36	3	i ++
water	189:35	0:0	4	i
op	189:36	0:0	4	++
stmts	190:4	195:4	3	
water	190:4	0:0	4	{
decl	191:8	191:42	4	vlc_meta_t	*p_meta
op	191:27	0:0	4	=
water	191:29	0:0	4	pp_cd_text
op	191:39	0:0	4	[
water	191:40	0:0	4	i
op	191:41	0:0	4	]
if	192:8	193:20	4	(! p_meta)
cond	192:12	192:13	5	! p_meta
op	192:12	0:0	6	!
water	192:13	0:0	6	p_meta
stmts	193:12	193:20	5	
continue	193:12	193:20	6	
call	194:8	194:32	4	vlc_meta_Delete
arg	194:25	194:32	5	p_meta
water	194:25	0:0	6	p_meta
water	194:33	0:0	4	;
water	195:4	0:0	4	}
call	196:4	196:21	2	free
arg	196:10	196:21	3	pp_cd_text
water	196:10	0:0	4	pp_cd_text
water	196:22	0:0	2	;
if	198:4	199:35	2	(p_disc)
cond	198:8	198:8	3	p_disc
water	198:8	0:0	4	p_disc
stmts	199:8	199:35	3	
call	199:8	199:34	4	cddb_disc_destroy
arg	199:27	199:34	5	p_disc
water	199:27	0:0	6	p_disc
water	199:35	0:0	4	;
return	201:4	201:22	2	VLC_SUCCESS
water	201:11	0:0	3	VLC_SUCCESS

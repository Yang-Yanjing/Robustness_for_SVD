func	2:0	101:0	0	static void	input_item_add_subitem_tree
params	2:40	0:0	1	
param	2:42	2:69	2	const vlc_event_t *	p_event
param	3:42	3:59	2	void *	user_data
stmnts	0:0	100:13	1	
decl	5:4	5:42	2	input_item_t	*p_input
op	5:26	0:0	2	=
water	5:28	0:0	2	p_event
op	5:35	0:0	2	->
water	5:37	0:0	2	p_obj
decl	6:4	6:73	2	playlist_t	*p_playlist
op	6:27	0:0	2	=
water	6:29	0:0	2	(
water	6:30	0:0	2	(
water	6:32	0:0	2	playlist_item_t
op	6:47	0:0	2	*
water	6:49	0:0	2	)
water	6:51	0:0	2	user_data
water	6:60	0:0	2	)
op	6:61	0:0	2	->
water	6:63	0:0	2	p_playlist
decl	7:4	7:83	2	input_item_node_t	*p_new_root
op	7:34	0:0	2	=
water	7:36	0:0	2	p_event
op	7:43	0:0	2	->
water	7:45	0:0	2	u
op	7:46	0:0	2	.
water	7:47	0:0	2	input_item_subitem_tree_added
op	7:76	0:0	2	.
water	7:77	0:0	2	p_root
water	8:4	0:0	2	PL_LOCK
water	8:11	0:0	2	;
decl	9:4	10:54	2	playlist_item_t	*p_item
op	9:28	0:0	2	=
call	10:8	10:53	3	playlist_ItemGetByInput
arg	10:33	10:43	4	p_playlist
water	10:33	0:0	5	p_playlist
arg	10:45	10:53	4	p_input
water	10:45	0:0	5	p_input
call	11:4	11:27	2	assert
arg	11:12	11:27	3	p_item!=NULL
water	11:12	0:0	4	p_item
op	11:19	0:0	4	!=
water	11:22	0:0	4	NULL
water	11:28	0:0	2	;
decl	12:4	12:68	2	bool	b_current
op	12:19	0:0	2	=
call	12:21	12:57	3	get_current_status_item
arg	12:46	12:57	4	p_playlist
water	12:46	0:0	5	p_playlist
op	12:59	0:0	2	==
water	12:62	0:0	2	p_item
decl	13:4	13:70	2	bool	b_autostart
op	13:21	0:0	2	=
call	13:23	13:69	3	var_GetBool
arg	13:36	13:46	4	p_playlist
water	13:36	0:0	5	p_playlist
arg	13:48	13:69	4	"playlist-autostart"
water	13:48	0:0	5	"playlist-autostart"
decl	14:4	14:62	2	bool	b_stop
op	14:16	0:0	2	=
water	14:18	0:0	2	p_item
op	14:24	0:0	2	->
water	14:26	0:0	2	i_flags
op	14:34	0:0	2	&
water	14:36	0:0	2	PLAYLIST_SUBITEM_STOP_FLAG
decl	15:4	15:23	2	bool	b_flat
op	15:16	0:0	2	=
water	15:18	0:0	2	false
water	16:4	0:0	2	p_item
op	16:10	0:0	2	->
water	16:12	0:0	2	i_flags
op	16:20	0:0	2	&=
water	16:23	0:0	2	~PLAYLIST_SUBITEM_STOP_FLAG
water	16:50	0:0	2	;
if	19:4	30:4	2	(!pl_priv (p_playlist ) -> b_tree)
cond	19:8	19:30	3	!pl_priv (p_playlist ) -> b_tree
op	19:8	0:0	4	!
call	19:9	19:27	4	pl_priv
arg	19:17	19:27	5	p_playlist
water	19:17	0:0	6	p_playlist
op	19:28	0:0	4	->
water	19:30	0:0	4	b_tree
stmts	19:39	30:4	3	
water	19:39	0:0	4	{
decl	20:8	20:38	4	playlist_item_t	*p_up
op	20:30	0:0	4	=
water	20:32	0:0	4	p_item
while	21:8	29:8	4	(p_up -> p_parent)
cond	21:15	21:21	5	p_up -> p_parent
water	21:15	0:0	6	p_up
op	21:19	0:0	6	->
water	21:21	0:0	6	p_parent
stmts	22:8	29:8	5	
water	22:8	0:0	6	{
if	23:12	27:12	6	(p_up -> p_parent == p_playlist -> p_playing)
cond	23:16	23:46	7	p_up -> p_parent == p_playlist -> p_playing
water	23:16	0:0	8	p_up
op	23:20	0:0	8	->
water	23:22	0:0	8	p_parent
op	23:31	0:0	8	==
water	23:34	0:0	8	p_playlist
op	23:44	0:0	8	->
water	23:46	0:0	8	p_playing
stmts	24:12	27:12	7	
water	24:12	0:0	8	{
water	25:16	0:0	8	b_flat
op	25:23	0:0	8	=
water	25:25	0:0	8	true
water	25:29	0:0	8	;
break	26:16	26:21	8	
water	27:12	0:0	8	}
water	28:12	0:0	6	p_up
op	28:17	0:0	6	=
water	28:19	0:0	6	p_up
op	28:23	0:0	6	->
water	28:25	0:0	6	p_parent
water	28:33	0:0	6	;
water	29:8	0:0	6	}
water	30:4	0:0	4	}
decl	31:4	31:15	2	int	pos
op	31:12	0:0	2	=
water	31:14	0:0	2	0
if	34:4	50:4	2	(b_flat)
cond	34:8	34:8	3	b_flat
water	34:8	0:0	4	b_flat
stmts	35:4	50:4	3	
water	35:4	0:0	4	{
decl	36:8	36:52	4	playlist_item_t	*p_parent
op	36:34	0:0	4	=
water	36:36	0:0	4	p_item
op	36:42	0:0	4	->
water	36:44	0:0	4	p_parent
call	37:8	37:33	4	assert
arg	37:16	37:33	5	p_parent!=NULL
water	37:16	0:0	6	p_parent
op	37:25	0:0	6	!=
water	37:28	0:0	6	NULL
water	37:34	0:0	4	;
decl	38:8	38:13	4	int	i
for	39:8	46:8	4	(i = 0 ;i < p_parent -> i_children;i ++)
forinit	39:13	39:18	5	i = 0 ;
water	39:13	0:0	6	i
op	39:15	0:0	6	=
water	39:17	0:0	6	0
water	39:18	0:0	6	;
cond	39:20	39:34	5	i < p_parent -> i_children
water	39:20	0:0	6	i
op	39:22	0:0	6	<
water	39:24	0:0	6	p_parent
op	39:32	0:0	6	->
water	39:34	0:0	6	i_children
forexpr	39:46	39:47	5	i ++
water	39:46	0:0	6	i
op	39:47	0:0	6	++
stmts	40:8	46:8	5	
water	40:8	0:0	6	{
if	41:12	45:12	6	(p_parent -> pp_children [ i ] == p_item)
cond	41:16	41:44	7	p_parent -> pp_children [ i ] == p_item
water	41:16	0:0	8	p_parent
op	41:24	0:0	8	->
water	41:26	0:0	8	pp_children
op	41:37	0:0	8	[
water	41:38	0:0	8	i
op	41:39	0:0	8	]
op	41:41	0:0	8	==
water	41:44	0:0	8	p_item
stmts	42:12	45:12	7	
water	42:12	0:0	8	{
water	43:16	0:0	8	pos
op	43:20	0:0	8	=
water	43:22	0:0	8	i
water	43:23	0:0	8	;
break	44:16	44:21	8	
water	45:12	0:0	8	}
water	46:8	0:0	6	}
call	47:8	47:41	4	assert
arg	47:16	47:41	5	i<p_parent->i_children
water	47:16	0:0	6	i
op	47:18	0:0	6	<
water	47:20	0:0	6	p_parent
op	47:28	0:0	6	->
water	47:30	0:0	6	i_children
water	47:42	0:0	4	;
call	48:8	48:54	4	playlist_DeleteItem
arg	48:29	48:39	5	p_playlist
water	48:29	0:0	6	p_playlist
arg	48:41	48:47	5	p_item
water	48:41	0:0	6	p_item
arg	48:49	48:54	5	true
water	48:49	0:0	6	true
water	48:55	0:0	4	;
water	49:8	0:0	4	p_item
op	49:15	0:0	4	=
water	49:17	0:0	4	p_parent
water	49:25	0:0	4	;
water	50:4	0:0	4	}
else	51:4	54:4	2
stmts	52:4	54:4	3	
water	52:4	0:0	4	{
water	53:8	0:0	4	pos
op	53:12	0:0	4	=
water	53:14	0:0	4	p_item
op	53:20	0:0	4	->
water	53:22	0:0	4	i_children
op	53:33	0:0	4	>=
water	53:36	0:0	4	0
water	53:38	0:0	4	?
water	53:40	0:0	4	p_item
op	53:46	0:0	4	->
water	53:48	0:0	4	i_children
water	53:59	0:0	4	:
water	53:61	0:0	4	0
water	53:62	0:0	4	;
water	54:4	0:0	4	}
decl	58:4	62:57	2	int	last_pos
op	58:17	0:0	2	=
call	58:19	62:56	3	playlist_InsertInputItemTree
arg	58:49	58:59	4	p_playlist
water	58:49	0:0	5	p_playlist
arg	59:49	59:55	4	p_item
water	59:49	0:0	5	p_item
arg	60:49	60:59	4	p_new_root
water	60:49	0:0	5	p_new_root
arg	61:49	61:52	4	pos
water	61:49	0:0	5	pos
arg	62:49	62:56	4	b_flat
water	62:49	0:0	5	b_flat
if	63:4	63:78	2	(! b_flat)
cond	63:8	63:9	3	! b_flat
op	63:8	0:0	4	!
water	63:9	0:0	4	b_flat
stmts	63:18	63:78	3	
call	63:18	63:77	4	var_SetInteger
arg	63:34	63:44	5	p_playlist
water	63:34	0:0	6	p_playlist
arg	63:46	63:62	5	"leaf-to-parent"
water	63:46	0:0	6	"leaf-to-parent"
arg	63:64	63:77	5	p_item->i_id
water	63:64	0:0	6	p_item
op	63:70	0:0	6	->
water	63:72	0:0	6	i_id
water	63:78	0:0	4	;
if	65:4	99:4	2	(b_current)
cond	65:8	65:8	3	b_current
water	65:8	0:0	4	b_current
stmts	66:4	99:4	3	
water	66:4	0:0	4	{
if	67:8	74:8	4	(last_pos == pos || ( b_stop && ! b_flat ) || ! b_autostart)
cond	67:12	67:57	5	last_pos == pos || ( b_stop && ! b_flat ) || ! b_autostart
water	67:12	0:0	6	last_pos
op	67:21	0:0	6	==
water	67:24	0:0	6	pos
op	67:28	0:0	6	||
water	67:31	0:0	6	(
water	67:33	0:0	6	b_stop
op	67:40	0:0	6	&&
op	67:43	0:0	6	!
water	67:44	0:0	6	b_flat
water	67:51	0:0	6	)
op	67:53	0:0	6	||
op	67:56	0:0	6	!
water	67:57	0:0	6	b_autostart
stmts	68:8	74:8	5	
water	68:8	0:0	6	{
water	71:12	0:0	6	PL_UNLOCK
water	71:21	0:0	6	;
call	72:12	72:38	6	playlist_Stop
arg	72:27	72:38	7	p_playlist
water	72:27	0:0	8	p_playlist
water	72:39	0:0	6	;
return	73:12	73:18	6	
water	74:8	0:0	6	}
else	75:8	98:8	4
stmts	76:8	98:8	5	
water	76:8	0:0	6	{
decl	78:12	78:40	6	playlist_item_t	*p_play_item
if	79:12	82:12	6	(var_GetBool (p_playlist ,"random" ))
cond	79:16	79:50	7	var_GetBool (p_playlist ,"random" )
call	79:16	79:50	8	var_GetBool
arg	79:29	79:39	9	p_playlist
water	79:29	0:0	10	p_playlist
arg	79:41	79:50	9	"random"
water	79:41	0:0	10	"random"
stmts	80:12	82:12	7	
water	80:12	0:0	8	{
water	81:16	0:0	8	p_play_item
op	81:28	0:0	8	=
water	81:30	0:0	8	NULL
water	81:34	0:0	8	;
water	82:12	0:0	8	}
else	83:12	93:12	6
stmts	84:12	93:12	7	
water	84:12	0:0	8	{
water	85:16	0:0	8	p_play_item
op	85:28	0:0	8	=
water	85:30	0:0	8	p_item
op	85:36	0:0	8	->
water	85:38	0:0	8	pp_children
op	85:49	0:0	8	[
water	85:50	0:0	8	pos
op	85:53	0:0	8	]
water	85:54	0:0	8	;
while	91:16	92:61	8	(p_play_item -> i_children > 0)
cond	91:23	91:49	9	p_play_item -> i_children > 0
water	91:23	0:0	10	p_play_item
op	91:34	0:0	10	->
water	91:36	0:0	10	i_children
op	91:47	0:0	10	>
water	91:49	0:0	10	0
stmts	92:20	92:61	9	
water	92:20	0:0	10	p_play_item
op	92:32	0:0	10	=
water	92:34	0:0	10	p_play_item
op	92:45	0:0	10	->
water	92:47	0:0	10	pp_children
op	92:58	0:0	10	[
water	92:59	0:0	10	0
op	92:60	0:0	10	]
water	92:61	0:0	10	;
water	93:12	0:0	8	}
call	94:12	97:46	6	playlist_Control
arg	94:30	94:40	7	p_playlist
water	94:30	0:0	8	p_playlist
arg	94:42	94:59	7	PLAYLIST_VIEWPLAY
water	94:42	0:0	8	PLAYLIST_VIEWPLAY
arg	95:34	95:43	7	pl_Locked
water	95:34	0:0	8	pl_Locked
arg	96:34	96:71	7	get_current_status_node(p_playlist)
call	96:34	96:70	8	get_current_status_node
arg	96:59	96:70	9	p_playlist
water	96:59	0:0	10	p_playlist
arg	97:34	97:46	7	p_play_item
water	97:34	0:0	8	p_play_item
water	97:47	0:0	6	;
water	98:8	0:0	6	}
water	99:4	0:0	4	}
water	100:4	0:0	2	PL_UNLOCK
water	100:13	0:0	2	;

func	2:0	39:0	0	static int	parser_DataSharedMem
params	2:31	0:0	1	
param	2:33	2:50	2	char *	psz_command
param	3:33	3:46	2	char *	psz_end
param	4:33	4:59	2	commandparams_t *	p_params
stmnts	7:4	38:22	1	
call	7:4	7:29	2	skip_space
arg	7:16	7:29	3	&psz_command
op	7:16	0:0	4	&
water	7:17	0:0	4	psz_command
water	7:30	0:0	2	;
if	8:4	12:4	2	(isdigit (( unsigned char ) * psz_command ))
cond	8:8	8:45	3	isdigit (( unsigned char ) * psz_command )
call	8:8	8:45	4	isdigit
arg	8:17	8:45	5	(unsignedchar)*psz_command
water	8:17	0:0	6	(
water	8:18	0:0	6	unsigned
water	8:27	0:0	6	char
water	8:31	0:0	6	)
op	8:32	0:0	6	*
water	8:33	0:0	6	psz_command
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
if	10:8	11:31	4	(parse_digit (& psz_command ,& p_params -> i_id ) == VLC_EGENERIC)
cond	10:12	10:60	5	parse_digit (& psz_command ,& p_params -> i_id ) == VLC_EGENERIC
call	10:12	10:55	6	parse_digit
arg	10:25	10:37	7	&psz_command
op	10:25	0:0	8	&
water	10:26	0:0	8	psz_command
arg	10:39	10:55	7	&p_params->i_id
op	10:39	0:0	8	&
water	10:40	0:0	8	p_params
op	10:48	0:0	8	->
water	10:50	0:0	8	i_id
op	10:57	0:0	6	==
water	10:60	0:0	6	VLC_EGENERIC
stmts	11:12	11:31	5	
return	11:12	11:31	6	VLC_EGENERIC
water	11:19	0:0	7	VLC_EGENERIC
water	12:4	0:0	4	}
call	13:4	13:29	2	skip_space
arg	13:16	13:29	3	&psz_command
op	13:16	0:0	4	&
water	13:17	0:0	4	psz_command
water	13:30	0:0	2	;
if	14:4	18:4	2	(isdigit (( unsigned char ) * psz_command ))
cond	14:8	14:45	3	isdigit (( unsigned char ) * psz_command )
call	14:8	14:45	4	isdigit
arg	14:17	14:45	5	(unsignedchar)*psz_command
water	14:17	0:0	6	(
water	14:18	0:0	6	unsigned
water	14:27	0:0	6	char
water	14:31	0:0	6	)
op	14:32	0:0	6	*
water	14:33	0:0	6	psz_command
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
if	16:8	17:31	4	(parse_digit (& psz_command ,& p_params -> i_width ) == VLC_EGENERIC)
cond	16:12	16:63	5	parse_digit (& psz_command ,& p_params -> i_width ) == VLC_EGENERIC
call	16:12	16:58	6	parse_digit
arg	16:25	16:37	7	&psz_command
op	16:25	0:0	8	&
water	16:26	0:0	8	psz_command
arg	16:39	16:58	7	&p_params->i_width
op	16:39	0:0	8	&
water	16:40	0:0	8	p_params
op	16:48	0:0	8	->
water	16:50	0:0	8	i_width
op	16:60	0:0	6	==
water	16:63	0:0	6	VLC_EGENERIC
stmts	17:12	17:31	5	
return	17:12	17:31	6	VLC_EGENERIC
water	17:19	0:0	7	VLC_EGENERIC
water	18:4	0:0	4	}
call	19:4	19:29	2	skip_space
arg	19:16	19:29	3	&psz_command
op	19:16	0:0	4	&
water	19:17	0:0	4	psz_command
water	19:30	0:0	2	;
if	20:4	24:4	2	(isdigit (( unsigned char ) * psz_command ))
cond	20:8	20:45	3	isdigit (( unsigned char ) * psz_command )
call	20:8	20:45	4	isdigit
arg	20:17	20:45	5	(unsignedchar)*psz_command
water	20:17	0:0	6	(
water	20:18	0:0	6	unsigned
water	20:27	0:0	6	char
water	20:31	0:0	6	)
op	20:32	0:0	6	*
water	20:33	0:0	6	psz_command
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
if	22:8	23:31	4	(parse_digit (& psz_command ,& p_params -> i_height ) == VLC_EGENERIC)
cond	22:12	22:64	5	parse_digit (& psz_command ,& p_params -> i_height ) == VLC_EGENERIC
call	22:12	22:59	6	parse_digit
arg	22:25	22:37	7	&psz_command
op	22:25	0:0	8	&
water	22:26	0:0	8	psz_command
arg	22:39	22:59	7	&p_params->i_height
op	22:39	0:0	8	&
water	22:40	0:0	8	p_params
op	22:48	0:0	8	->
water	22:50	0:0	8	i_height
op	22:61	0:0	6	==
water	22:64	0:0	6	VLC_EGENERIC
stmts	23:12	23:31	5	
return	23:12	23:31	6	VLC_EGENERIC
water	23:19	0:0	7	VLC_EGENERIC
water	24:4	0:0	4	}
call	25:4	25:29	2	skip_space
arg	25:16	25:29	3	&psz_command
op	25:16	0:0	4	&
water	25:17	0:0	4	psz_command
water	25:30	0:0	2	;
if	26:4	31:4	2	(isascii (( unsigned char ) * psz_command ))
cond	26:8	26:45	3	isascii (( unsigned char ) * psz_command )
call	26:8	26:45	4	isascii
arg	26:17	26:45	5	(unsignedchar)*psz_command
water	26:17	0:0	6	(
water	26:18	0:0	6	unsigned
water	26:27	0:0	6	char
water	26:31	0:0	6	)
op	26:32	0:0	6	*
water	26:33	0:0	6	psz_command
stmts	27:4	31:4	3	
water	27:4	0:0	4	{
if	28:8	30:31	4	(parse_char (& psz_command ,& psz_end ,4 ,( char * ) & p_params -> fourcc ) == VLC_EGENERIC)
cond	28:12	29:15	5	parse_char (& psz_command ,& psz_end ,4 ,( char * ) & p_params -> fourcc ) == VLC_EGENERIC
call	28:12	28:76	6	parse_char
arg	28:24	28:36	7	&psz_command
op	28:24	0:0	8	&
water	28:25	0:0	8	psz_command
arg	28:38	28:46	7	&psz_end
op	28:38	0:0	8	&
water	28:39	0:0	8	psz_end
arg	28:48	28:49	7	4
water	28:48	0:0	8	4
arg	28:51	28:76	7	(char*)&p_params->fourcc
water	28:51	0:0	8	(
water	28:52	0:0	8	char
op	28:56	0:0	8	*
water	28:57	0:0	8	)
op	28:58	0:0	8	&
water	28:59	0:0	8	p_params
op	28:67	0:0	8	->
water	28:69	0:0	8	fourcc
op	29:12	0:0	6	==
water	29:15	0:0	6	VLC_EGENERIC
stmts	30:12	30:31	5	
return	30:12	30:31	6	VLC_EGENERIC
water	30:19	0:0	7	VLC_EGENERIC
water	31:4	0:0	4	}
call	32:4	32:29	2	skip_space
arg	32:16	32:29	3	&psz_command
op	32:16	0:0	4	&
water	32:17	0:0	4	psz_command
water	32:30	0:0	2	;
if	33:4	37:4	2	(isdigit (( unsigned char ) * psz_command ))
cond	33:8	33:45	3	isdigit (( unsigned char ) * psz_command )
call	33:8	33:45	4	isdigit
arg	33:17	33:45	5	(unsignedchar)*psz_command
water	33:17	0:0	6	(
water	33:18	0:0	6	unsigned
water	33:27	0:0	6	char
water	33:31	0:0	6	)
op	33:32	0:0	6	*
water	33:33	0:0	6	psz_command
stmts	34:4	37:4	3	
water	34:4	0:0	4	{
if	35:8	36:31	4	(parse_digit (& psz_command ,& p_params -> i_shmid ) == VLC_EGENERIC)
cond	35:12	35:63	5	parse_digit (& psz_command ,& p_params -> i_shmid ) == VLC_EGENERIC
call	35:12	35:58	6	parse_digit
arg	35:25	35:37	7	&psz_command
op	35:25	0:0	8	&
water	35:26	0:0	8	psz_command
arg	35:39	35:58	7	&p_params->i_shmid
op	35:39	0:0	8	&
water	35:40	0:0	8	p_params
op	35:48	0:0	8	->
water	35:50	0:0	8	i_shmid
op	35:60	0:0	6	==
water	35:63	0:0	6	VLC_EGENERIC
stmts	36:12	36:31	5	
return	36:12	36:31	6	VLC_EGENERIC
water	36:19	0:0	7	VLC_EGENERIC
water	37:4	0:0	4	}
return	38:4	38:22	2	VLC_SUCCESS
water	38:11	0:0	3	VLC_SUCCESS

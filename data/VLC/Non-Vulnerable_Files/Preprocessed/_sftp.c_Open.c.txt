func	2:0	146:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	145:23	1	
decl	4:4	4:44	2	access_t	*p_access
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	access_t
op	4:36	0:0	2	*
water	4:37	0:0	2	)
water	4:38	0:0	2	p_this
decl	5:4	5:23	2	access_sys_t	*p_sys
decl	6:4	6:29	2	char	*psz_username
op	6:23	0:0	2	=
water	6:25	0:0	2	NULL
decl	7:4	7:29	2	char	*psz_password
op	7:23	0:0	2	=
water	7:25	0:0	2	NULL
decl	8:4	8:14	2	int	i_port
decl	9:4	9:13	2	int	i_ret
decl	10:4	10:17	2	vlc_url_t	url
decl	11:4	11:16	2	size_t	i_len
decl	12:4	12:14	2	int	i_type
if	13:4	14:27	2	(! p_access -> psz_location)
cond	13:8	13:19	3	! p_access -> psz_location
op	13:8	0:0	4	!
water	13:9	0:0	4	p_access
op	13:17	0:0	4	->
water	13:19	0:0	4	psz_location
stmts	14:8	14:27	3	
return	14:8	14:27	4	VLC_EGENERIC
water	14:15	0:0	5	VLC_EGENERIC
water	15:4	0:0	2	STANDARD_BLOCK_ACCESS_INIT
water	15:30	0:0	2	;
water	16:4	0:0	2	p_sys
op	16:9	0:0	2	->
water	16:11	0:0	2	i_socket
op	16:20	0:0	2	=
op	16:22	0:0	2	-
water	16:23	0:0	2	1
water	16:24	0:0	2	;
decl	18:4	18:45	2	const char	*path
op	18:21	0:0	2	=
water	18:23	0:0	2	p_access
op	18:31	0:0	2	->
water	18:33	0:0	2	psz_location
call	19:4	19:32	2	vlc_UrlParse
arg	19:18	19:22	3	&url
op	19:18	0:0	4	&
water	19:19	0:0	4	url
arg	19:24	19:28	3	path
water	19:24	0:0	4	path
arg	19:30	19:32	3	0
water	19:30	0:0	4	0
water	19:33	0:0	2	;
if	21:4	25:4	2	(EMPTY_STR (url . psz_host ))
cond	21:8	21:32	3	EMPTY_STR (url . psz_host )
call	21:8	21:32	4	EMPTY_STR
arg	21:19	21:32	5	url.psz_host
water	21:19	0:0	6	url
op	21:22	0:0	6	.
water	21:23	0:0	6	psz_host
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:61	4	msg_Err
arg	23:17	23:25	5	p_access
water	23:17	0:0	6	p_access
arg	23:27	23:61	5	"You might give a non empty host"
water	23:27	0:0	6	"You might give a non empty host"
water	23:62	0:0	4	;
goto	24:8	24:18	4	error
water	24:13	0:0	5	error
water	25:4	0:0	4	}
if	27:4	31:4	2	(!EMPTY_STR (url . psz_username ) && url . psz_password)
cond	27:8	27:46	3	!EMPTY_STR (url . psz_username ) && url . psz_password
op	27:8	0:0	4	!
call	27:9	27:37	4	EMPTY_STR
arg	27:20	27:37	5	url.psz_username
water	27:20	0:0	6	url
op	27:23	0:0	6	.
water	27:24	0:0	6	psz_username
op	27:39	0:0	4	&&
water	27:42	0:0	4	url
op	27:45	0:0	4	.
water	27:46	0:0	4	psz_password
stmts	28:4	31:4	3	
water	28:4	0:0	4	{
water	29:8	0:0	4	psz_username
op	29:21	0:0	4	=
call	29:23	29:48	4	strdup
arg	29:31	29:48	5	url.psz_username
water	29:31	0:0	6	url
op	29:34	0:0	6	.
water	29:35	0:0	6	psz_username
water	29:49	0:0	4	;
water	30:8	0:0	4	psz_password
op	30:21	0:0	4	=
call	30:23	30:48	4	strdup
arg	30:31	30:48	5	url.psz_password
water	30:31	0:0	6	url
op	30:34	0:0	6	.
water	30:35	0:0	6	psz_password
water	30:49	0:0	4	;
water	31:4	0:0	4	}
else	32:4	40:4	2
stmts	33:4	40:4	3	
water	33:4	0:0	4	{
call	34:8	37:57	4	dialog_Login
arg	34:22	34:30	5	p_access
water	34:22	0:0	6	p_access
arg	34:32	34:45	5	&psz_username
op	34:32	0:0	6	&
water	34:33	0:0	6	psz_username
arg	34:47	34:60	5	&psz_password
op	34:47	0:0	6	&
water	34:48	0:0	6	psz_password
arg	35:22	35:46	5	_("SFTP authentication")
call	35:22	35:45	6	_
arg	35:24	35:45	7	"SFTP authentication"
water	35:24	0:0	8	"SFTP authentication"
arg	36:22	37:42	5	_("Please enter a valid login and password for the sftp ""connexion to %s")
call	36:22	37:41	6	_
arg	36:24	37:41	7	"Please enter a valid login and password for the sftp ""connexion to %s"
water	36:24	0:0	8	"Please enter a valid login and password for the sftp "
water	37:24	0:0	8	"connexion to %s"
arg	37:44	37:57	5	url.psz_host
water	37:44	0:0	6	url
op	37:47	0:0	6	.
water	37:48	0:0	6	psz_host
water	37:58	0:0	4	;
if	38:8	39:22	4	(EMPTY_STR (psz_username ) || ! psz_password)
cond	38:12	38:40	5	EMPTY_STR (psz_username ) || ! psz_password
call	38:12	38:34	6	EMPTY_STR
arg	38:22	38:34	7	psz_username
water	38:22	0:0	8	psz_username
op	38:36	0:0	6	||
op	38:39	0:0	6	!
water	38:40	0:0	6	psz_password
stmts	39:12	39:22	5	
goto	39:12	39:22	6	error
water	39:17	0:0	7	error
water	40:4	0:0	4	}
if	41:4	42:60	2	(url . i_port <= 0)
cond	41:8	41:22	3	url . i_port <= 0
water	41:8	0:0	4	url
op	41:11	0:0	4	.
water	41:12	0:0	4	i_port
op	41:19	0:0	4	<=
water	41:22	0:0	4	0
stmts	42:8	42:60	3	
water	42:8	0:0	4	i_port
op	42:15	0:0	4	=
call	42:17	42:59	4	var_InheritInteger
arg	42:37	42:45	5	p_access
water	42:37	0:0	6	p_access
arg	42:47	42:59	5	"sftp-port"
water	42:47	0:0	6	"sftp-port"
water	42:60	0:0	4	;
else	43:4	44:27	2
stmts	44:8	44:27	3	
water	44:8	0:0	4	i_port
op	44:15	0:0	4	=
water	44:17	0:0	4	url
op	44:20	0:0	4	.
water	44:21	0:0	4	i_port
water	44:27	0:0	4	;
water	46:4	0:0	2	p_sys
op	46:9	0:0	2	->
water	46:11	0:0	2	i_socket
op	46:20	0:0	2	=
call	46:22	46:82	2	net_Connect
arg	46:35	46:43	3	p_access
water	46:35	0:0	4	p_access
arg	46:45	46:57	3	url.psz_host
water	46:45	0:0	4	url
op	46:48	0:0	4	.
water	46:49	0:0	4	psz_host
arg	46:59	46:65	3	i_port
water	46:59	0:0	4	i_port
arg	46:67	46:78	3	SOCK_STREAM
water	46:67	0:0	4	SOCK_STREAM
arg	46:80	46:82	3	0
water	46:80	0:0	4	0
water	46:83	0:0	2	;
if	47:4	51:4	2	(p_sys -> i_socket < 0)
cond	47:8	47:26	3	p_sys -> i_socket < 0
water	47:8	0:0	4	p_sys
op	47:13	0:0	4	->
water	47:15	0:0	4	i_socket
op	47:24	0:0	4	<
water	47:26	0:0	4	0
stmts	48:4	51:4	3	
water	48:4	0:0	4	{
call	49:8	49:94	4	msg_Err
arg	49:17	49:25	5	p_access
water	49:17	0:0	6	p_access
arg	49:27	49:71	5	"Impossible to open the connection to %s:%i"
water	49:27	0:0	6	"Impossible to open the connection to %s:%i"
arg	49:73	49:85	5	url.psz_host
water	49:73	0:0	6	url
op	49:76	0:0	6	.
water	49:77	0:0	6	psz_host
arg	49:87	49:94	5	i_port
water	49:87	0:0	6	i_port
water	49:95	0:0	4	;
goto	50:8	50:18	4	error
water	50:13	0:0	5	error
water	51:4	0:0	4	}
if	53:4	54:18	2	(( p_sys -> ssh_session =libssh2_session_init ( ) ) == NULL)
cond	53:8	53:59	3	( p_sys -> ssh_session =libssh2_session_init ( ) ) == NULL
water	53:8	0:0	4	(
water	53:10	0:0	4	p_sys
op	53:15	0:0	4	->
water	53:17	0:0	4	ssh_session
op	53:29	0:0	4	=
call	53:31	53:52	4	libssh2_session_init
water	53:54	0:0	4	)
op	53:56	0:0	4	==
water	53:59	0:0	4	NULL
stmts	54:8	54:18	3	
goto	54:8	54:18	4	error
water	54:13	0:0	5	error
while	55:4	57:36	2	(( i_ret =libssh2_session_startup (p_sys -> ssh_session ,p_sys -> i_socket ) ) == LIBSSH2_ERROR_EAGAIN)
cond	55:11	57:14	3	( i_ret =libssh2_session_startup (p_sys -> ssh_session ,p_sys -> i_socket ) ) == LIBSSH2_ERROR_EAGAIN
water	55:11	0:0	4	(
water	55:13	0:0	4	i_ret
op	55:19	0:0	4	=
call	55:21	56:62	4	libssh2_session_startup
arg	55:46	55:64	5	p_sys->ssh_session
water	55:46	0:0	6	p_sys
op	55:51	0:0	6	->
water	55:53	0:0	6	ssh_session
arg	56:46	56:62	5	p_sys->i_socket
water	56:46	0:0	6	p_sys
op	56:51	0:0	6	->
water	56:53	0:0	6	i_socket
water	56:64	0:0	4	)
op	57:11	0:0	4	==
water	57:14	0:0	4	LIBSSH2_ERROR_EAGAIN
stmts	57:36	57:36	3	
water	57:36	0:0	4	;
if	58:4	62:4	2	(i_ret != 0)
cond	58:8	58:17	3	i_ret != 0
water	58:8	0:0	4	i_ret
op	58:14	0:0	4	!=
water	58:17	0:0	4	0
stmts	59:4	62:4	3	
water	59:4	0:0	4	{
call	60:8	60:94	4	msg_Err
arg	60:17	60:25	5	p_access
water	60:17	0:0	6	p_access
arg	60:27	60:71	5	"Impossible to open the connection to %s:%i"
water	60:27	0:0	6	"Impossible to open the connection to %s:%i"
arg	60:73	60:85	5	url.psz_host
water	60:73	0:0	6	url
op	60:76	0:0	6	.
water	60:77	0:0	6	psz_host
arg	60:87	60:94	5	i_port
water	60:87	0:0	6	i_port
water	60:95	0:0	4	;
goto	61:8	61:18	4	error
water	61:13	0:0	5	error
water	62:4	0:0	4	}
call	64:4	64:56	2	libssh2_session_set_blocking
arg	64:34	64:52	3	p_sys->ssh_session
water	64:34	0:0	4	p_sys
op	64:39	0:0	4	->
water	64:41	0:0	4	ssh_session
arg	64:54	64:56	3	1
water	64:54	0:0	4	1
water	64:57	0:0	2	;
decl	66:4	66:85	2	LIBSSH2_KNOWNHOSTS	*ssh_knownhosts
op	66:39	0:0	2	=
call	66:41	66:84	3	libssh2_knownhost_init
arg	66:65	66:84	4	p_sys->ssh_session
water	66:65	0:0	5	p_sys
op	66:70	0:0	5	->
water	66:72	0:0	5	ssh_session
if	67:4	68:18	2	(! ssh_knownhosts)
cond	67:8	67:9	3	! ssh_knownhosts
op	67:8	0:0	4	!
water	67:9	0:0	4	ssh_knownhosts
stmts	68:8	68:18	3	
goto	68:8	68:18	4	error
water	68:13	0:0	5	error
decl	69:4	69:54	2	char	*psz_home
op	69:19	0:0	2	=
call	69:21	69:53	3	config_GetUserDir
arg	69:40	69:53	4	VLC_HOME_DIR
water	69:40	0:0	5	VLC_HOME_DIR
decl	70:4	70:29	2	char	*psz_knownhosts_file
if	71:4	76:4	2	(asprintf (& psz_knownhosts_file ,"%s/.ssh/known_hosts" ,psz_home ) != - 1)
cond	71:8	71:78	3	asprintf (& psz_knownhosts_file ,"%s/.ssh/known_hosts" ,psz_home ) != - 1
call	71:8	71:72	4	asprintf
arg	71:18	71:38	5	&psz_knownhosts_file
op	71:18	0:0	6	&
water	71:19	0:0	6	psz_knownhosts_file
arg	71:40	71:61	5	"%s/.ssh/known_hosts"
water	71:40	0:0	6	"%s/.ssh/known_hosts"
arg	71:63	71:72	5	psz_home
water	71:63	0:0	6	psz_home
op	71:74	0:0	4	!=
op	71:77	0:0	4	-
water	71:78	0:0	4	1
stmts	72:4	76:4	3	
water	72:4	0:0	4	{
call	73:8	74:47	4	libssh2_knownhost_readfile
arg	73:36	73:50	5	ssh_knownhosts
water	73:36	0:0	6	ssh_knownhosts
arg	73:52	73:71	5	psz_knownhosts_file
water	73:52	0:0	6	psz_knownhosts_file
arg	74:16	74:47	5	LIBSSH2_KNOWNHOST_FILE_OPENSSH
water	74:16	0:0	6	LIBSSH2_KNOWNHOST_FILE_OPENSSH
water	74:48	0:0	4	;
call	75:8	75:34	4	free
arg	75:14	75:34	5	psz_knownhosts_file
water	75:14	0:0	6	psz_knownhosts_file
water	75:35	0:0	4	;
water	76:4	0:0	4	}
call	77:4	77:19	2	free
arg	77:10	77:19	3	psz_home
water	77:10	0:0	4	psz_home
water	77:20	0:0	2	;
decl	78:4	78:92	2	const char	*fingerprint
op	78:28	0:0	2	=
call	78:30	78:91	3	libssh2_session_hostkey
arg	78:55	78:73	4	p_sys->ssh_session
water	78:55	0:0	5	p_sys
op	78:60	0:0	5	->
water	78:62	0:0	5	ssh_session
arg	78:75	78:81	4	&i_len
op	78:75	0:0	5	&
water	78:76	0:0	5	i_len
arg	78:83	78:91	4	&i_type
op	78:83	0:0	5	&
water	78:84	0:0	5	i_type
decl	79:4	79:34	2	struct libssh2_knownhost	*host
decl	80:4	84:48	2	int	check
op	80:14	0:0	2	=
call	80:16	84:47	3	libssh2_knownhost_check
arg	80:41	80:55	4	ssh_knownhosts
water	80:41	0:0	5	ssh_knownhosts
arg	80:57	80:69	4	url.psz_host
water	80:57	0:0	5	url
op	80:60	0:0	5	.
water	80:61	0:0	5	psz_host
arg	81:41	81:52	4	fingerprint
water	81:41	0:0	5	fingerprint
arg	81:54	81:59	4	i_len
water	81:54	0:0	5	i_len
arg	82:41	83:69	4	LIBSSH2_KNOWNHOST_TYPE_PLAIN|LIBSSH2_KNOWNHOST_KEYENC_RAW
water	82:41	0:0	5	LIBSSH2_KNOWNHOST_TYPE_PLAIN
op	82:70	0:0	5	|
water	83:41	0:0	5	LIBSSH2_KNOWNHOST_KEYENC_RAW
arg	84:41	84:47	4	&host
op	84:41	0:0	5	&
water	84:42	0:0	5	host
call	85:4	85:43	2	libssh2_knownhost_free
arg	85:28	85:43	3	ssh_knownhosts
water	85:28	0:0	4	ssh_knownhosts
water	85:44	0:0	2	;
switch	87:4	99:4	2	(check)
cond	87:11	87:11	3	check
water	87:11	0:0	4	check
stmts	88:4	99:4	3	
water	88:4	0:0	4	{
label	89:4	89:40	4	case LIBSSH2_KNOWNHOST_CHECK_FAILURE :
label	90:4	90:41	4	case LIBSSH2_KNOWNHOST_CHECK_NOTFOUND :
call	91:8	91:61	4	msg_Dbg
arg	91:17	91:25	5	p_access
water	91:17	0:0	6	p_access
arg	91:27	91:61	5	"Unable to check the remote host"
water	91:27	0:0	6	"Unable to check the remote host"
water	91:62	0:0	4	;
break	92:8	92:13	4	
label	93:4	93:38	4	case LIBSSH2_KNOWNHOST_CHECK_MATCH :
call	94:8	94:57	4	msg_Dbg
arg	94:17	94:25	5	p_access
water	94:17	0:0	6	p_access
arg	94:27	94:57	5	"Succesfuly matched the host"
water	94:27	0:0	6	"Succesfuly matched the host"
water	94:58	0:0	4	;
break	95:8	95:13	4	
label	96:4	96:41	4	case LIBSSH2_KNOWNHOST_CHECK_MISMATCH :
call	97:8	97:82	4	msg_Err
arg	97:17	97:25	5	p_access
water	97:17	0:0	6	p_access
arg	97:27	97:82	5	"The host does not match !! The remote key changed !!"
water	97:27	0:0	6	"The host does not match !! The remote key changed !!"
water	97:83	0:0	4	;
goto	98:8	98:18	4	error
water	98:13	0:0	5	error
water	99:4	0:0	4	}
if	102:4	106:4	2	(libssh2_userauth_password (p_sys -> ssh_session ,psz_username ,psz_password ))
cond	102:8	102:82	3	libssh2_userauth_password (p_sys -> ssh_session ,psz_username ,psz_password )
call	102:8	102:82	4	libssh2_userauth_password
arg	102:35	102:53	5	p_sys->ssh_session
water	102:35	0:0	6	p_sys
op	102:40	0:0	6	->
water	102:42	0:0	6	ssh_session
arg	102:55	102:67	5	psz_username
water	102:55	0:0	6	psz_username
arg	102:69	102:82	5	psz_password
water	102:69	0:0	6	psz_password
stmts	103:4	106:4	3	
water	103:4	0:0	4	{
call	104:8	104:63	4	msg_Err
arg	104:17	104:25	5	p_access
water	104:17	0:0	6	p_access
arg	104:27	104:63	5	"Authentication by password failed"
water	104:27	0:0	6	"Authentication by password failed"
water	104:64	0:0	4	;
goto	105:8	105:18	4	error
water	105:13	0:0	5	error
water	106:4	0:0	4	}
water	108:4	0:0	2	p_sys
op	108:9	0:0	2	->
water	108:11	0:0	2	sftp_session
op	108:24	0:0	2	=
call	108:26	108:64	2	libssh2_sftp_init
arg	108:45	108:64	3	p_sys->ssh_session
water	108:45	0:0	4	p_sys
op	108:50	0:0	4	->
water	108:52	0:0	4	ssh_session
water	108:65	0:0	2	;
if	109:4	113:4	2	(! p_sys -> sftp_session)
cond	109:8	109:16	3	! p_sys -> sftp_session
op	109:8	0:0	4	!
water	109:9	0:0	4	p_sys
op	109:14	0:0	4	->
water	109:16	0:0	4	sftp_session
stmts	110:4	113:4	3	
water	110:4	0:0	4	{
call	111:8	111:67	4	msg_Err
arg	111:17	111:25	5	p_access
water	111:17	0:0	6	p_access
arg	111:27	111:67	5	"Unable to initialize the SFTP session"
water	111:27	0:0	6	"Unable to initialize the SFTP session"
water	111:68	0:0	4	;
goto	112:8	112:18	4	error
water	112:13	0:0	5	error
water	113:4	0:0	4	}
water	115:4	0:0	2	p_sys
op	115:9	0:0	2	->
water	115:11	0:0	2	file
op	115:16	0:0	2	=
call	115:18	115:92	2	libssh2_sftp_open
arg	115:37	115:56	3	p_sys->sftp_session
water	115:37	0:0	4	p_sys
op	115:42	0:0	4	->
water	115:44	0:0	4	sftp_session
arg	115:58	115:70	3	url.psz_path
water	115:58	0:0	4	url
op	115:61	0:0	4	.
water	115:62	0:0	4	psz_path
arg	115:72	115:88	3	LIBSSH2_FXF_READ
water	115:72	0:0	4	LIBSSH2_FXF_READ
arg	115:90	115:92	3	0
water	115:90	0:0	4	0
water	115:93	0:0	2	;
if	116:4	120:4	2	(! p_sys -> file)
cond	116:8	116:16	3	! p_sys -> file
op	116:8	0:0	4	!
water	116:9	0:0	4	p_sys
op	116:14	0:0	4	->
water	116:16	0:0	4	file
stmts	117:4	120:4	3	
water	117:4	0:0	4	{
call	118:8	118:77	4	msg_Err
arg	118:17	118:25	5	p_access
water	118:17	0:0	6	p_access
arg	118:27	118:62	5	"Unable to open the remote file %s"
water	118:27	0:0	6	"Unable to open the remote file %s"
arg	118:64	118:77	5	url.psz_path
water	118:64	0:0	6	url
op	118:67	0:0	6	.
water	118:68	0:0	6	psz_path
water	118:78	0:0	4	;
goto	119:8	119:18	4	error
water	119:13	0:0	5	error
water	120:4	0:0	4	}
decl	122:4	122:38	2	LIBSSH2_SFTP_ATTRIBUTES	attributes
if	123:4	127:4	2	(libssh2_sftp_stat (p_sys -> sftp_session ,url . psz_path ,& attributes ))
cond	123:8	123:74	3	libssh2_sftp_stat (p_sys -> sftp_session ,url . psz_path ,& attributes )
call	123:8	123:74	4	libssh2_sftp_stat
arg	123:27	123:46	5	p_sys->sftp_session
water	123:27	0:0	6	p_sys
op	123:32	0:0	6	->
water	123:34	0:0	6	sftp_session
arg	123:48	123:60	5	url.psz_path
water	123:48	0:0	6	url
op	123:51	0:0	6	.
water	123:52	0:0	6	psz_path
arg	123:62	123:74	5	&attributes
op	123:62	0:0	6	&
water	123:63	0:0	6	attributes
stmts	124:4	127:4	3	
water	124:4	0:0	4	{
call	125:8	125:98	4	msg_Err
arg	125:17	125:25	5	p_access
water	125:17	0:0	6	p_access
arg	125:27	125:83	5	"Impossible to get information about the remote file %s"
water	125:27	0:0	6	"Impossible to get information about the remote file %s"
arg	125:85	125:98	5	url.psz_path
water	125:85	0:0	6	url
op	125:88	0:0	6	.
water	125:89	0:0	6	psz_path
water	125:99	0:0	4	;
goto	126:8	126:18	4	error
water	126:13	0:0	5	error
water	127:4	0:0	4	}
water	128:4	0:0	2	p_sys
op	128:9	0:0	2	->
water	128:11	0:0	2	filesize
op	128:20	0:0	2	=
water	128:22	0:0	2	attributes
op	128:32	0:0	2	.
water	128:33	0:0	2	filesize
water	128:41	0:0	2	;
water	129:4	0:0	2	p_sys
op	129:9	0:0	2	->
water	129:11	0:0	2	i_read_size
op	129:23	0:0	2	=
call	129:25	129:71	2	var_InheritInteger
arg	129:45	129:53	3	p_access
water	129:45	0:0	4	p_access
arg	129:55	129:71	3	"sftp-readsize"
water	129:55	0:0	4	"sftp-readsize"
water	129:72	0:0	2	;
call	130:4	130:23	2	free
arg	130:10	130:23	3	psz_password
water	130:10	0:0	4	psz_password
water	130:24	0:0	2	;
call	131:4	131:23	2	free
arg	131:10	131:23	3	psz_username
water	131:10	0:0	4	psz_username
water	131:24	0:0	2	;
call	132:4	132:23	2	vlc_UrlClean
arg	132:18	132:23	3	&url
op	132:18	0:0	4	&
water	132:19	0:0	4	url
water	132:24	0:0	2	;
return	133:4	133:22	2	VLC_SUCCESS
water	133:11	0:0	3	VLC_SUCCESS
label	134:0	134:5	2	error :
if	135:4	136:48	2	(p_sys -> file)
cond	135:8	135:15	3	p_sys -> file
water	135:8	0:0	4	p_sys
op	135:13	0:0	4	->
water	135:15	0:0	4	file
stmts	136:8	136:48	3	
call	136:8	136:47	4	libssh2_sftp_close_handle
arg	136:35	136:47	5	p_sys->file
water	136:35	0:0	6	p_sys
op	136:40	0:0	6	->
water	136:42	0:0	6	file
water	136:48	0:0	4	;
if	137:4	138:50	2	(p_sys -> ssh_session)
cond	137:8	137:15	3	p_sys -> ssh_session
water	137:8	0:0	4	p_sys
op	137:13	0:0	4	->
water	137:15	0:0	4	ssh_session
stmts	138:8	138:50	3	
call	138:8	138:49	4	libssh2_session_free
arg	138:30	138:49	5	p_sys->ssh_session
water	138:30	0:0	6	p_sys
op	138:35	0:0	6	->
water	138:37	0:0	6	ssh_session
water	138:50	0:0	4	;
call	139:4	139:23	2	free
arg	139:10	139:23	3	psz_password
water	139:10	0:0	4	psz_password
water	139:24	0:0	2	;
call	140:4	140:23	2	free
arg	140:10	140:23	3	psz_username
water	140:10	0:0	4	psz_username
water	140:24	0:0	2	;
call	141:4	141:23	2	vlc_UrlClean
arg	141:18	141:23	3	&url
op	141:18	0:0	4	&
water	141:19	0:0	4	url
water	141:24	0:0	2	;
if	142:4	143:36	2	(p_sys -> i_socket >= 0)
cond	142:8	142:27	3	p_sys -> i_socket >= 0
water	142:8	0:0	4	p_sys
op	142:13	0:0	4	->
water	142:15	0:0	4	i_socket
op	142:24	0:0	4	>=
water	142:27	0:0	4	0
stmts	143:8	143:36	3	
call	143:8	143:35	4	net_Close
arg	143:19	143:35	5	p_sys->i_socket
water	143:19	0:0	6	p_sys
op	143:24	0:0	6	->
water	143:26	0:0	6	i_socket
water	143:36	0:0	4	;
call	144:4	144:16	2	free
arg	144:10	144:16	3	p_sys
water	144:10	0:0	4	p_sys
water	144:17	0:0	2	;
return	145:4	145:23	2	VLC_EGENERIC
water	145:11	0:0	3	VLC_EGENERIC

func	2:0	145:0	0	static int	Open
params	2:16	0:0	1	
param	2:17	2:34	2	vlc_object_t *	obj
param	2:36	2:60	2	const struct gl_api *	api
stmnts	0:0	144:23	1	
decl	4:4	4:34	2	vlc_gl_t	*gl
op	4:17	0:0	2	=
water	4:19	0:0	2	(
water	4:20	0:0	2	vlc_gl_t
op	4:29	0:0	2	*
water	4:30	0:0	2	)
water	4:31	0:0	2	obj
decl	5:4	5:36	2	vout_window_t	*wnd
op	5:23	0:0	2	=
water	5:25	0:0	2	gl
op	5:27	0:0	2	->
water	5:29	0:0	2	surface
union	6:4	9:4	2	<anonymous_6:4>
decl	7:8	7:26	3	void	*ext_platform
decl	8:8	8:34	3	EGLNativeWindowType	native
decl	6:4	9:12	2	<anonymous_6:4>	window
decl	11:4	11:65	2	PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC	createSurface
op	11:59	0:0	2	=
water	11:61	0:0	2	NULL
decl	13:4	13:45	2	vlc_gl_sys_t	*sys
op	13:22	0:0	2	=
call	13:24	13:44	3	malloc
arg	13:31	13:44	4	sizeof(*sys)
op	13:31	0:0	5	sizeof
water	13:38	0:0	5	(
op	13:39	0:0	5	*
water	13:40	0:0	5	sys
water	13:43	0:0	5	)
if	14:4	15:25	2	(unlikely (sys == NULL ))
cond	14:8	14:28	3	unlikely (sys == NULL )
call	14:8	14:28	4	unlikely
arg	14:17	14:28	5	sys==NULL
water	14:17	0:0	6	sys
op	14:21	0:0	6	==
water	14:24	0:0	6	NULL
stmts	15:8	15:25	3	
return	15:8	15:25	4	VLC_ENOMEM
water	15:15	0:0	5	VLC_ENOMEM
water	16:4	0:0	2	gl
op	16:6	0:0	2	->
water	16:8	0:0	2	sys
op	16:12	0:0	2	=
water	16:14	0:0	2	sys
water	16:17	0:0	2	;
water	17:4	0:0	2	sys
op	17:7	0:0	2	->
water	17:9	0:0	2	display
op	17:17	0:0	2	=
water	17:19	0:0	2	EGL_NO_DISPLAY
water	17:33	0:0	2	;
water	18:4	0:0	2	sys
op	18:7	0:0	2	->
water	18:9	0:0	2	surface
op	18:17	0:0	2	=
water	18:19	0:0	2	EGL_NO_SURFACE
water	18:33	0:0	2	;
water	20:4	0:0	2	sys
op	20:7	0:0	2	->
water	20:9	0:0	2	x11
op	20:13	0:0	2	=
water	20:15	0:0	2	NULL
water	20:19	0:0	2	;
if	21:4	22:18	2	(wnd -> type != VOUT_WINDOW_TYPE_XID || !vlc_xlib_init (obj ))
cond	21:8	21:63	3	wnd -> type != VOUT_WINDOW_TYPE_XID || !vlc_xlib_init (obj )
water	21:8	0:0	4	wnd
op	21:11	0:0	4	->
water	21:13	0:0	4	type
op	21:18	0:0	4	!=
water	21:21	0:0	4	VOUT_WINDOW_TYPE_XID
op	21:42	0:0	4	||
op	21:45	0:0	4	!
call	21:46	21:63	4	vlc_xlib_init
arg	21:60	21:63	5	obj
water	21:60	0:0	6	obj
stmts	22:8	22:18	3	
goto	22:8	22:18	4	error
water	22:13	0:0	5	error
water	23:4	0:0	2	sys
op	23:7	0:0	2	->
water	23:9	0:0	2	x11
op	23:13	0:0	2	=
call	23:15	23:44	2	XOpenDisplay
arg	23:28	23:44	3	wnd->display.x11
water	23:28	0:0	4	wnd
op	23:31	0:0	4	->
water	23:33	0:0	4	display
op	23:40	0:0	4	.
water	23:41	0:0	4	x11
water	23:45	0:0	2	;
if	24:4	25:18	2	(sys -> x11 == NULL)
cond	24:8	24:20	3	sys -> x11 == NULL
water	24:8	0:0	4	sys
op	24:11	0:0	4	->
water	24:13	0:0	4	x11
op	24:17	0:0	4	==
water	24:20	0:0	4	NULL
stmts	25:8	25:18	3	
goto	25:8	25:18	4	error
water	25:13	0:0	5	error
decl	26:4	26:12	2	int	snum
water	27:4	0:0	2	{
decl	28:8	28:28	2	XWindowAttributes	wa
if	29:8	30:22	2	(!XGetWindowAttributes (sys -> x11 ,wnd -> handle . xid ,& wa ))
cond	29:12	29:64	3	!XGetWindowAttributes (sys -> x11 ,wnd -> handle . xid ,& wa )
op	29:12	0:0	4	!
call	29:13	29:64	4	XGetWindowAttributes
arg	29:34	29:42	5	sys->x11
water	29:34	0:0	6	sys
op	29:37	0:0	6	->
water	29:39	0:0	6	x11
arg	29:44	29:59	5	wnd->handle.xid
water	29:44	0:0	6	wnd
op	29:47	0:0	6	->
water	29:49	0:0	6	handle
op	29:55	0:0	6	.
water	29:56	0:0	6	xid
arg	29:61	29:64	5	&wa
op	29:61	0:0	6	&
water	29:62	0:0	6	wa
stmts	30:12	30:22	3	
goto	30:12	30:22	4	error
water	30:17	0:0	5	error
water	31:8	0:0	2	snum
op	31:13	0:0	2	=
call	31:15	31:46	2	XScreenNumberOfScreen
arg	31:37	31:46	3	wa.screen
water	31:37	0:0	4	wa
op	31:39	0:0	4	.
water	31:40	0:0	4	screen
water	31:47	0:0	2	;
water	32:4	0:0	2	}
if	34:4	47:4	2	(CheckClientExt ("EGL_EXT_platform_x11" ))
cond	34:8	34:45	3	CheckClientExt ("EGL_EXT_platform_x11" )
call	34:8	34:45	4	CheckClientExt
arg	34:23	34:45	5	"EGL_EXT_platform_x11"
water	34:23	0:0	6	"EGL_EXT_platform_x11"
stmts	35:4	47:4	3	
water	35:4	0:0	4	{
decl	36:8	36:50	4	PFNEGLGETPLATFORMDISPLAYEXTPROC	getDisplay
decl	37:8	40:9	4	const EGLint	attrs[]
op	37:29	0:0	4	=
water	37:31	0:0	4	{
water	38:12	0:0	4	EGL_PLATFORM_X11_SCREEN_EXT
water	38:39	0:0	4	,
water	38:41	0:0	4	snum
water	38:45	0:0	4	,
water	39:12	0:0	4	EGL_NONE
water	40:8	0:0	4	}
water	41:8	0:0	4	getDisplay
op	41:19	0:0	4	=
water	41:21	0:0	4	(
water	41:22	0:0	4	PFNEGLGETPLATFORMDISPLAYEXTPROC
water	41:53	0:0	4	)
call	42:12	42:56	4	eglGetProcAddress
arg	42:30	42:56	5	"eglGetPlatformDisplayEXT"
water	42:30	0:0	6	"eglGetPlatformDisplayEXT"
water	42:57	0:0	4	;
water	43:8	0:0	4	createSurface
op	43:22	0:0	4	=
water	43:24	0:0	4	(
water	43:25	0:0	4	PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC
water	43:65	0:0	4	)
call	44:12	44:65	4	eglGetProcAddress
arg	44:30	44:65	5	"eglCreatePlatformWindowSurfaceEXT"
water	44:30	0:0	6	"eglCreatePlatformWindowSurfaceEXT"
water	44:66	0:0	4	;
water	45:8	0:0	4	sys
op	45:11	0:0	4	->
water	45:13	0:0	4	display
op	45:21	0:0	4	=
call	45:23	45:71	4	getDisplay
arg	45:34	45:54	5	EGL_PLATFORM_X11_EXT
water	45:34	0:0	6	EGL_PLATFORM_X11_EXT
arg	45:56	45:64	5	sys->x11
water	45:56	0:0	6	sys
op	45:59	0:0	6	->
water	45:61	0:0	6	x11
arg	45:66	45:71	5	attrs
water	45:66	0:0	6	attrs
water	45:72	0:0	4	;
water	46:8	0:0	4	window
op	46:14	0:0	4	.
water	46:15	0:0	4	ext_platform
op	46:28	0:0	4	=
op	46:30	0:0	4	&
water	46:31	0:0	4	wnd
op	46:34	0:0	4	->
water	46:36	0:0	4	handle
op	46:42	0:0	4	.
water	46:43	0:0	4	xid
water	46:46	0:0	4	;
water	47:4	0:0	4	}
else	48:4	58:4	2
stmts	50:4	58:4	3	
water	50:4	0:0	4	{
if	52:8	56:8	4	(snum ==XDefaultScreen (sys -> x11 ))
cond	52:12	52:43	5	snum ==XDefaultScreen (sys -> x11 )
water	52:12	0:0	6	snum
op	52:17	0:0	6	==
call	52:20	52:43	6	XDefaultScreen
arg	52:35	52:43	7	sys->x11
water	52:35	0:0	8	sys
op	52:38	0:0	8	->
water	52:40	0:0	8	x11
stmts	53:8	56:8	5	
water	53:8	0:0	6	{
water	54:12	0:0	6	sys
op	54:15	0:0	6	->
water	54:17	0:0	6	display
op	54:25	0:0	6	=
call	54:27	54:49	6	eglGetDisplay
arg	54:41	54:49	7	sys->x11
water	54:41	0:0	8	sys
op	54:44	0:0	8	->
water	54:46	0:0	8	x11
water	54:50	0:0	6	;
water	55:12	0:0	6	window
op	55:18	0:0	6	.
water	55:19	0:0	6	native
op	55:26	0:0	6	=
water	55:28	0:0	6	wnd
op	55:31	0:0	6	->
water	55:33	0:0	6	handle
op	55:39	0:0	6	.
water	55:40	0:0	6	xid
water	55:43	0:0	6	;
water	56:8	0:0	6	}
water	58:4	0:0	4	}
if	60:4	61:18	2	(wnd -> type != VOUT_WINDOW_TYPE_HWND)
cond	60:8	60:21	3	wnd -> type != VOUT_WINDOW_TYPE_HWND
water	60:8	0:0	4	wnd
op	60:11	0:0	4	->
water	60:13	0:0	4	type
op	60:18	0:0	4	!=
water	60:21	0:0	4	VOUT_WINDOW_TYPE_HWND
stmts	61:8	61:18	3	
goto	61:8	61:18	4	error
water	61:13	0:0	5	error
water	63:4	0:0	2	sys
op	63:7	0:0	2	->
water	63:9	0:0	2	display
op	63:17	0:0	2	=
call	63:19	63:52	2	eglGetDisplay
arg	63:33	63:52	3	EGL_DEFAULT_DISPLAY
water	63:33	0:0	4	EGL_DEFAULT_DISPLAY
water	63:53	0:0	2	;
water	64:4	0:0	2	window
op	64:10	0:0	2	.
water	64:11	0:0	2	native
op	64:18	0:0	2	=
water	64:20	0:0	2	wnd
op	64:23	0:0	2	->
water	64:25	0:0	2	handle
op	64:31	0:0	2	.
water	64:32	0:0	2	hwnd
water	64:36	0:0	2	;
if	67:4	68:18	2	(wnd -> type != VOUT_WINDOW_TYPE_ANDROID_NATIVE)
cond	67:8	67:21	3	wnd -> type != VOUT_WINDOW_TYPE_ANDROID_NATIVE
water	67:8	0:0	4	wnd
op	67:11	0:0	4	->
water	67:13	0:0	4	type
op	67:18	0:0	4	!=
water	67:21	0:0	4	VOUT_WINDOW_TYPE_ANDROID_NATIVE
stmts	68:8	68:18	3	
goto	68:8	68:18	4	error
water	68:13	0:0	5	error
water	70:4	0:0	2	sys
op	70:7	0:0	2	->
water	70:9	0:0	2	display
op	70:17	0:0	2	=
call	70:19	70:52	2	eglGetDisplay
arg	70:33	70:52	3	EGL_DEFAULT_DISPLAY
water	70:33	0:0	4	EGL_DEFAULT_DISPLAY
water	70:53	0:0	2	;
water	71:4	0:0	2	window
op	71:10	0:0	2	.
water	71:11	0:0	2	native
op	71:18	0:0	2	=
water	71:20	0:0	2	wnd
op	71:23	0:0	2	->
water	71:25	0:0	2	handle
op	71:31	0:0	2	.
water	71:32	0:0	2	anativewindow
water	71:45	0:0	2	;
if	74:4	75:18	2	(sys -> display == EGL_NO_DISPLAY)
cond	74:8	74:24	3	sys -> display == EGL_NO_DISPLAY
water	74:8	0:0	4	sys
op	74:11	0:0	4	->
water	74:13	0:0	4	display
op	74:21	0:0	4	==
water	74:24	0:0	4	EGL_NO_DISPLAY
stmts	75:8	75:18	3	
goto	75:8	75:18	4	error
water	75:13	0:0	5	error
decl	77:4	77:23	2	EGLint	major
water	77:16	0:0	2	,
decl	77:4	77:23	2	EGLint	minor
if	78:4	79:18	2	(eglInitialize (sys -> display ,& major ,& minor ) != EGL_TRUE)
cond	78:8	78:55	3	eglInitialize (sys -> display ,& major ,& minor ) != EGL_TRUE
call	78:8	78:50	4	eglInitialize
arg	78:22	78:34	5	sys->display
water	78:22	0:0	6	sys
op	78:25	0:0	6	->
water	78:27	0:0	6	display
arg	78:36	78:42	5	&major
op	78:36	0:0	6	&
water	78:37	0:0	6	major
arg	78:44	78:50	5	&minor
op	78:44	0:0	6	&
water	78:45	0:0	6	minor
op	78:52	0:0	4	!=
water	78:55	0:0	4	EGL_TRUE
stmts	79:8	79:18	3	
goto	79:8	79:18	4	error
water	79:13	0:0	5	error
call	80:4	82:52	2	msg_Dbg
arg	80:12	80:15	3	obj
water	80:12	0:0	4	obj
arg	80:17	80:39	3	"EGL version %s by %s"
water	80:17	0:0	4	"EGL version %s by %s"
arg	81:12	81:53	3	eglQueryString(sys->display,EGL_VERSION)
call	81:12	81:52	4	eglQueryString
arg	81:27	81:39	5	sys->display
water	81:27	0:0	6	sys
op	81:30	0:0	6	->
water	81:32	0:0	6	display
arg	81:41	81:52	5	EGL_VERSION
water	81:41	0:0	6	EGL_VERSION
arg	82:12	82:52	3	eglQueryString(sys->display,EGL_VENDOR)
call	82:12	82:51	4	eglQueryString
arg	82:27	82:39	5	sys->display
water	82:27	0:0	6	sys
op	82:30	0:0	6	->
water	82:32	0:0	6	display
arg	82:41	82:51	5	EGL_VENDOR
water	82:41	0:0	6	EGL_VENDOR
water	82:53	0:0	2	;
decl	83:4	83:66	2	const char	*ext
op	83:20	0:0	2	=
call	83:22	83:65	3	eglQueryString
arg	83:37	83:49	4	sys->display
water	83:37	0:0	5	sys
op	83:40	0:0	5	->
water	83:42	0:0	5	display
arg	83:51	83:65	4	EGL_EXTENSIONS
water	83:51	0:0	5	EGL_EXTENSIONS
if	84:4	85:44	2	(* ext)
cond	84:8	84:9	3	* ext
op	84:8	0:0	4	*
water	84:9	0:0	4	ext
stmts	85:8	85:44	3	
call	85:8	85:43	4	msg_Dbg
arg	85:16	85:19	5	obj
water	85:16	0:0	6	obj
arg	85:21	85:38	5	" extensions: %s"
water	85:21	0:0	6	" extensions: %s"
arg	85:40	85:43	5	ext
water	85:40	0:0	6	ext
water	85:44	0:0	4	;
if	86:4	91:4	2	(major != 1 || minor < api -> min_minor || !CheckAPI (sys -> display ,api -> name ))
cond	86:8	87:41	3	major != 1 || minor < api -> min_minor || !CheckAPI (sys -> display ,api -> name )
water	86:8	0:0	4	major
op	86:14	0:0	4	!=
water	86:17	0:0	4	1
op	86:19	0:0	4	||
water	86:22	0:0	4	minor
op	86:28	0:0	4	<
water	86:30	0:0	4	api
op	86:33	0:0	4	->
water	86:35	0:0	4	min_minor
op	87:5	0:0	4	||
op	87:8	0:0	4	!
call	87:9	87:41	4	CheckAPI
arg	87:18	87:30	5	sys->display
water	87:18	0:0	6	sys
op	87:21	0:0	6	->
water	87:23	0:0	6	display
arg	87:32	87:41	5	api->name
water	87:32	0:0	6	api
op	87:35	0:0	6	->
water	87:37	0:0	6	name
stmts	88:4	91:4	3	
water	88:4	0:0	4	{
call	89:8	89:54	4	msg_Err
arg	89:16	89:19	5	obj
water	89:16	0:0	6	obj
arg	89:21	89:43	5	"cannot select %s API"
water	89:21	0:0	6	"cannot select %s API"
arg	89:45	89:54	5	api->name
water	89:45	0:0	6	api
op	89:48	0:0	6	->
water	89:50	0:0	6	name
water	89:55	0:0	4	;
goto	90:8	90:18	4	error
water	90:13	0:0	5	error
water	91:4	0:0	4	}
decl	92:4	98:5	2	const EGLint	conf_attr[]
op	92:29	0:0	2	=
water	92:31	0:0	2	{
water	93:8	0:0	2	EGL_RED_SIZE
water	93:20	0:0	2	,
water	93:22	0:0	2	5
water	93:23	0:0	2	,
water	94:8	0:0	2	EGL_GREEN_SIZE
water	94:22	0:0	2	,
water	94:24	0:0	2	5
water	94:25	0:0	2	,
water	95:8	0:0	2	EGL_BLUE_SIZE
water	95:21	0:0	2	,
water	95:23	0:0	2	5
water	95:24	0:0	2	,
water	96:8	0:0	2	EGL_RENDERABLE_TYPE
water	96:27	0:0	2	,
water	96:29	0:0	2	api
op	96:32	0:0	2	->
water	96:34	0:0	2	render_bit
water	96:44	0:0	2	,
water	97:8	0:0	2	EGL_NONE
water	98:4	0:0	2	}
decl	99:4	99:21	2	EGLConfig	cfgv[1]
decl	100:4	100:15	2	EGLint	cfgc
if	101:4	106:4	2	(eglChooseConfig (sys -> display ,conf_attr ,cfgv ,1 ,& cfgc ) != EGL_TRUE || cfgc == 0)
cond	101:8	102:16	3	eglChooseConfig (sys -> display ,conf_attr ,cfgv ,1 ,& cfgc ) != EGL_TRUE || cfgc == 0
call	101:8	101:63	4	eglChooseConfig
arg	101:24	101:36	5	sys->display
water	101:24	0:0	6	sys
op	101:27	0:0	6	->
water	101:29	0:0	6	display
arg	101:38	101:47	5	conf_attr
water	101:38	0:0	6	conf_attr
arg	101:49	101:53	5	cfgv
water	101:49	0:0	6	cfgv
arg	101:55	101:56	5	1
water	101:55	0:0	6	1
arg	101:58	101:63	5	&cfgc
op	101:58	0:0	6	&
water	101:59	0:0	6	cfgc
op	101:65	0:0	4	!=
water	101:68	0:0	4	EGL_TRUE
op	102:5	0:0	4	||
water	102:8	0:0	4	cfgc
op	102:13	0:0	4	==
water	102:16	0:0	4	0
stmts	103:4	106:4	3	
water	103:4	0:0	4	{
call	104:8	104:55	4	msg_Err
arg	104:17	104:20	5	obj
water	104:17	0:0	6	obj
arg	104:22	104:55	5	"cannot choose EGL configuration"
water	104:22	0:0	6	"cannot choose EGL configuration"
water	104:56	0:0	4	;
goto	105:8	105:18	4	error
water	105:13	0:0	5	error
water	106:4	0:0	4	}
if	109:4	111:63	2	(createSurface != NULL)
cond	109:8	109:25	3	createSurface != NULL
water	109:8	0:0	4	createSurface
op	109:22	0:0	4	!=
water	109:25	0:0	4	NULL
stmts	110:8	111:63	3	
water	110:8	0:0	4	sys
op	110:11	0:0	4	->
water	110:13	0:0	4	surface
op	110:21	0:0	4	=
call	110:23	111:62	4	createSurface
arg	110:37	110:49	5	sys->display
water	110:37	0:0	6	sys
op	110:40	0:0	6	->
water	110:42	0:0	6	display
arg	110:51	110:58	5	cfgv[0]
water	110:51	0:0	6	cfgv
op	110:55	0:0	6	[
water	110:56	0:0	6	0
op	110:57	0:0	6	]
arg	111:37	111:56	5	window.ext_platform
water	111:37	0:0	6	window
op	111:43	0:0	6	.
water	111:44	0:0	6	ext_platform
arg	111:58	111:62	5	NULL
water	111:58	0:0	6	NULL
water	111:63	0:0	4	;
else	112:4	115:66	2
stmts	114:8	115:66	3	
water	114:8	0:0	4	sys
op	114:11	0:0	4	->
water	114:13	0:0	4	surface
op	114:21	0:0	4	=
call	114:23	115:65	4	eglCreateWindowSurface
arg	114:46	114:58	5	sys->display
water	114:46	0:0	6	sys
op	114:49	0:0	6	->
water	114:51	0:0	6	display
arg	114:60	114:67	5	cfgv[0]
water	114:60	0:0	6	cfgv
op	114:64	0:0	6	[
water	114:65	0:0	6	0
op	114:66	0:0	6	]
arg	115:46	115:59	5	window.native
water	115:46	0:0	6	window
op	115:52	0:0	6	.
water	115:53	0:0	6	native
arg	115:61	115:65	5	NULL
water	115:61	0:0	6	NULL
water	115:66	0:0	4	;
if	116:4	120:4	2	(sys -> surface == EGL_NO_SURFACE)
cond	116:8	116:24	3	sys -> surface == EGL_NO_SURFACE
water	116:8	0:0	4	sys
op	116:11	0:0	4	->
water	116:13	0:0	4	surface
op	116:21	0:0	4	==
water	116:24	0:0	4	EGL_NO_SURFACE
stmts	117:4	120:4	3	
water	117:4	0:0	4	{
call	118:8	118:56	4	msg_Err
arg	118:17	118:20	5	obj
water	118:17	0:0	6	obj
arg	118:22	118:56	5	"cannot create EGL window surface"
water	118:22	0:0	6	"cannot create EGL window surface"
water	118:57	0:0	4	;
goto	119:8	119:18	4	error
water	119:13	0:0	5	error
water	120:4	0:0	4	}
if	121:4	125:4	2	(eglBindAPI (api -> api ) != EGL_TRUE)
cond	121:8	121:33	3	eglBindAPI (api -> api ) != EGL_TRUE
call	121:8	121:28	4	eglBindAPI
arg	121:20	121:28	5	api->api
water	121:20	0:0	6	api
op	121:23	0:0	6	->
water	121:25	0:0	6	api
op	121:30	0:0	4	!=
water	121:33	0:0	4	EGL_TRUE
stmts	122:4	125:4	3	
water	122:4	0:0	4	{
call	123:8	123:43	4	msg_Err
arg	123:17	123:20	5	obj
water	123:17	0:0	6	obj
arg	123:22	123:43	5	"cannot bind EGL API"
water	123:22	0:0	6	"cannot bind EGL API"
water	123:44	0:0	4	;
goto	124:8	124:18	4	error
water	124:13	0:0	5	error
water	125:4	0:0	4	}
decl	126:4	127:48	2	EGLContext	ctx
op	126:19	0:0	2	=
call	126:21	127:47	3	eglCreateContext
arg	126:38	126:50	4	sys->display
water	126:38	0:0	5	sys
op	126:41	0:0	5	->
water	126:43	0:0	5	display
arg	126:52	126:59	4	cfgv[0]
water	126:52	0:0	5	cfgv
op	126:56	0:0	5	[
water	126:57	0:0	5	0
op	126:58	0:0	5	]
arg	126:61	126:75	4	EGL_NO_CONTEXT
water	126:61	0:0	5	EGL_NO_CONTEXT
arg	127:38	127:47	4	api->attr
water	127:38	0:0	5	api
op	127:41	0:0	5	->
water	127:43	0:0	5	attr
if	128:4	132:4	2	(ctx == EGL_NO_CONTEXT)
cond	128:8	128:15	3	ctx == EGL_NO_CONTEXT
water	128:8	0:0	4	ctx
op	128:12	0:0	4	==
water	128:15	0:0	4	EGL_NO_CONTEXT
stmts	129:4	132:4	3	
water	129:4	0:0	4	{
call	130:8	130:49	4	msg_Err
arg	130:17	130:20	5	obj
water	130:17	0:0	6	obj
arg	130:22	130:49	5	"cannot create EGL context"
water	130:22	0:0	6	"cannot create EGL context"
water	130:50	0:0	4	;
goto	131:8	131:18	4	error
water	131:13	0:0	5	error
water	132:4	0:0	4	}
water	133:4	0:0	2	sys
op	133:7	0:0	2	->
water	133:9	0:0	2	context
op	133:17	0:0	2	=
water	133:19	0:0	2	ctx
water	133:22	0:0	2	;
water	135:4	0:0	2	gl
op	135:6	0:0	2	->
water	135:8	0:0	2	makeCurrent
op	135:20	0:0	2	=
water	135:22	0:0	2	MakeCurrent
water	135:33	0:0	2	;
water	136:4	0:0	2	gl
op	136:6	0:0	2	->
water	136:8	0:0	2	releaseCurrent
op	136:23	0:0	2	=
water	136:25	0:0	2	ReleaseCurrent
water	136:39	0:0	2	;
water	137:4	0:0	2	gl
op	137:6	0:0	2	->
water	137:8	0:0	2	swap
op	137:13	0:0	2	=
water	137:15	0:0	2	SwapBuffers
water	137:26	0:0	2	;
water	138:4	0:0	2	gl
op	138:6	0:0	2	->
water	138:8	0:0	2	getProcAddress
op	138:23	0:0	2	=
water	138:25	0:0	2	GetSymbol
water	138:34	0:0	2	;
water	139:4	0:0	2	gl
op	139:6	0:0	2	->
water	139:8	0:0	2	lock
op	139:13	0:0	2	=
water	139:15	0:0	2	NULL
water	139:19	0:0	2	;
water	140:4	0:0	2	gl
op	140:6	0:0	2	->
water	140:8	0:0	2	unlock
op	140:15	0:0	2	=
water	140:17	0:0	2	NULL
water	140:21	0:0	2	;
return	141:4	141:22	2	VLC_SUCCESS
water	141:11	0:0	3	VLC_SUCCESS
label	142:0	142:5	2	error :
call	143:4	143:14	2	Close
arg	143:11	143:14	3	obj
water	143:11	0:0	4	obj
water	143:15	0:0	2	;
return	144:4	144:23	2	VLC_EGENERIC
water	144:11	0:0	3	VLC_EGENERIC

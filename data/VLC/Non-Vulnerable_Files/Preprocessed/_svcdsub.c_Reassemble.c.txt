func	2:0	75:0	0	static block_t *	Reassemble
params	2:26	0:0	1	
param	2:28	2:44	2	decoder_t *	p_dec
param	2:46	2:63	2	block_t *	p_block
stmnts	0:0	74:15	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:21	2	uint8_t	*p_buffer
decl	6:4	6:29	2	uint16_t	i_expected_image
decl	7:4	7:40	2	uint8_t	i_packet
water	7:21	0:0	2	,
decl	7:4	7:40	2	uint8_t	i_expected_packet
if	8:4	12:4	2	(p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ))
cond	8:8	8:73	3	p_block -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED )
water	8:8	0:0	4	p_block
op	8:15	0:0	4	->
water	8:17	0:0	4	i_flags
op	8:25	0:0	4	&
water	8:27	0:0	4	(
water	8:28	0:0	4	BLOCK_FLAG_DISCONTINUITY
op	8:52	0:0	4	|
water	8:53	0:0	4	BLOCK_FLAG_CORRUPTED
water	8:73	0:0	4	)
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
call	10:8	10:31	4	block_Release
arg	10:23	10:31	5	p_block
water	10:23	0:0	6	p_block
water	10:32	0:0	4	;
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
water	12:4	0:0	4	}
if	13:4	19:4	2	(p_block -> i_buffer < SPU_HEADER_LEN)
cond	13:8	13:28	3	p_block -> i_buffer < SPU_HEADER_LEN
water	13:8	0:0	4	p_block
op	13:15	0:0	4	->
water	13:17	0:0	4	i_buffer
op	13:26	0:0	4	<
water	13:28	0:0	4	SPU_HEADER_LEN
stmts	14:4	19:4	3	
water	14:4	0:0	4	{
call	15:8	16:51	4	msg_Dbg
arg	15:17	15:22	5	p_dec
water	15:17	0:0	6	p_dec
arg	15:24	15:64	5	"invalid packet header (size %zu < %u)"
water	15:24	0:0	6	"invalid packet header (size %zu < %u)"
arg	16:17	16:34	5	p_block->i_buffer
water	16:17	0:0	6	p_block
op	16:24	0:0	6	->
water	16:26	0:0	6	i_buffer
arg	16:36	16:51	5	SPU_HEADER_LEN
water	16:36	0:0	6	SPU_HEADER_LEN
water	16:52	0:0	4	;
call	17:8	17:31	4	block_Release
arg	17:23	17:31	5	p_block
water	17:23	0:0	6	p_block
water	17:32	0:0	4	;
return	18:8	18:19	4	NULL
water	18:15	0:0	5	NULL
water	19:4	0:0	4	}
water	20:4	0:0	2	p_buffer
op	20:13	0:0	2	=
water	20:15	0:0	2	p_block
op	20:22	0:0	2	->
water	20:24	0:0	2	p_buffer
water	20:32	0:0	2	;
if	21:4	25:4	2	(p_sys -> i_state == SUBTITLE_BLOCK_EMPTY)
cond	21:8	21:26	3	p_sys -> i_state == SUBTITLE_BLOCK_EMPTY
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	i_state
op	21:23	0:0	4	==
water	21:26	0:0	4	SUBTITLE_BLOCK_EMPTY
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
water	23:8	0:0	4	i_expected_image
op	23:26	0:0	4	=
water	23:28	0:0	4	p_sys
op	23:33	0:0	4	->
water	23:35	0:0	4	i_image
op	23:43	0:0	4	+
water	23:45	0:0	4	1
water	23:46	0:0	4	;
water	24:8	0:0	4	i_expected_packet
op	24:26	0:0	4	=
water	24:28	0:0	4	0
water	24:29	0:0	4	;
water	25:4	0:0	4	}
else	26:4	30:4	2
stmts	27:4	30:4	3	
water	27:4	0:0	4	{
water	28:8	0:0	4	i_expected_image
op	28:26	0:0	4	=
water	28:28	0:0	4	p_sys
op	28:33	0:0	4	->
water	28:35	0:0	4	i_image
water	28:42	0:0	4	;
water	29:8	0:0	4	i_expected_packet
op	29:26	0:0	4	=
water	29:28	0:0	4	p_sys
op	29:33	0:0	4	->
water	29:35	0:0	4	i_packet
op	29:44	0:0	4	+
water	29:46	0:0	4	1
water	29:47	0:0	4	;
water	30:4	0:0	4	}
water	33:4	0:0	2	p_buffer
op	33:13	0:0	2	+=
water	33:16	0:0	2	2
water	33:17	0:0	2	;
if	34:4	38:4	2	(* p_buffer & 0 x80)
cond	34:8	34:21	3	* p_buffer & 0 x80
op	34:8	0:0	4	*
water	34:9	0:0	4	p_buffer
op	34:18	0:0	4	&
water	34:20	0:0	4	0
water	34:21	0:0	4	x80
stmts	35:4	38:4	3	
water	35:4	0:0	4	{
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	i_state
op	36:23	0:0	4	=
water	36:25	0:0	4	SUBTITLE_BLOCK_COMPLETE
water	36:48	0:0	4	;
water	37:8	0:0	4	i_packet
op	37:23	0:0	4	=
op	37:25	0:0	4	*
water	37:26	0:0	4	p_buffer
op	37:34	0:0	4	++
op	37:37	0:0	4	&
water	37:39	0:0	4	0
water	37:40	0:0	4	x7F
water	37:43	0:0	4	;
water	38:4	0:0	4	}
else	39:4	43:4	2
stmts	40:4	43:4	3	
water	40:4	0:0	4	{
water	41:8	0:0	4	p_sys
op	41:13	0:0	4	->
water	41:15	0:0	4	i_state
op	41:23	0:0	4	=
water	41:25	0:0	4	SUBTITLE_BLOCK_PARTIAL
water	41:47	0:0	4	;
water	42:8	0:0	4	i_packet
op	42:23	0:0	4	=
op	42:25	0:0	4	*
water	42:26	0:0	4	p_buffer
op	42:34	0:0	4	++
water	42:36	0:0	4	;
water	43:4	0:0	4	}
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	i_image
op	44:19	0:0	2	=
call	44:21	44:38	2	GETINT16
arg	44:30	44:38	3	p_buffer
water	44:30	0:0	4	p_buffer
water	44:39	0:0	2	;
if	45:4	49:4	2	(p_sys -> i_image != i_expected_image)
cond	45:8	45:26	3	p_sys -> i_image != i_expected_image
water	45:8	0:0	4	p_sys
op	45:13	0:0	4	->
water	45:15	0:0	4	i_image
op	45:23	0:0	4	!=
water	45:26	0:0	4	i_expected_image
stmts	46:4	49:4	3	
water	46:4	0:0	4	{
call	47:8	48:51	4	msg_Warn
arg	47:18	47:23	5	p_dec
water	47:18	0:0	6	p_dec
arg	47:25	47:66	5	"expected subtitle image %u but found %u"
water	47:25	0:0	6	"expected subtitle image %u but found %u"
arg	48:18	48:34	5	i_expected_image
water	48:18	0:0	6	i_expected_image
arg	48:36	48:51	5	p_sys->i_image
water	48:36	0:0	6	p_sys
op	48:41	0:0	6	->
water	48:43	0:0	6	i_image
water	48:52	0:0	4	;
water	49:4	0:0	4	}
if	50:4	54:4	2	(i_packet != i_expected_packet)
cond	50:8	50:20	3	i_packet != i_expected_packet
water	50:8	0:0	4	i_packet
op	50:17	0:0	4	!=
water	50:20	0:0	4	i_expected_packet
stmts	51:4	54:4	3	
water	51:4	0:0	4	{
call	52:8	53:46	4	msg_Warn
arg	52:18	52:23	5	p_dec
water	52:18	0:0	6	p_dec
arg	52:25	52:73	5	"expected subtitle image packet %u but found %u"
water	52:25	0:0	6	"expected subtitle image packet %u but found %u"
arg	53:18	53:35	5	i_expected_packet
water	53:18	0:0	6	i_expected_packet
arg	53:37	53:46	5	i_packet
water	53:37	0:0	6	i_packet
water	53:47	0:0	4	;
water	54:4	0:0	4	}
water	55:4	0:0	2	p_block
op	55:11	0:0	2	->
water	55:13	0:0	2	p_buffer
op	55:22	0:0	2	+=
water	55:25	0:0	2	SPU_HEADER_LEN
water	55:39	0:0	2	;
water	56:4	0:0	2	p_block
op	56:11	0:0	2	->
water	56:13	0:0	2	i_buffer
op	56:22	0:0	2	-=
water	56:25	0:0	2	SPU_HEADER_LEN
water	56:39	0:0	2	;
water	57:4	0:0	2	p_sys
op	57:9	0:0	2	->
water	57:11	0:0	2	i_packet
op	57:20	0:0	2	=
water	57:22	0:0	2	i_packet
water	57:30	0:0	2	;
if	59:4	59:56	2	(! p_sys -> i_packet)
cond	59:8	59:16	3	! p_sys -> i_packet
op	59:8	0:0	4	!
water	59:9	0:0	4	p_sys
op	59:14	0:0	4	->
water	59:16	0:0	4	i_packet
stmts	59:27	59:56	3	
call	59:27	59:55	4	ParseHeader
arg	59:40	59:45	5	p_dec
water	59:40	0:0	6	p_dec
arg	59:47	59:55	5	p_block
water	59:47	0:0	6	p_block
water	59:56	0:0	4	;
call	60:4	60:46	2	block_ChainAppend
arg	60:23	60:36	3	&p_sys->p_spu
op	60:23	0:0	4	&
water	60:24	0:0	4	p_sys
op	60:29	0:0	4	->
water	60:31	0:0	4	p_spu
arg	60:38	60:46	3	p_block
water	60:38	0:0	4	p_block
water	60:47	0:0	2	;
if	61:4	73:4	2	(p_sys -> i_state == SUBTITLE_BLOCK_COMPLETE)
cond	61:8	61:26	3	p_sys -> i_state == SUBTITLE_BLOCK_COMPLETE
water	61:8	0:0	4	p_sys
op	61:13	0:0	4	->
water	61:15	0:0	4	i_state
op	61:23	0:0	4	==
water	61:26	0:0	4	SUBTITLE_BLOCK_COMPLETE
stmts	62:4	73:4	3	
water	62:4	0:0	4	{
decl	63:8	63:58	4	block_t	*p_spu
op	63:23	0:0	4	=
call	63:25	63:57	5	block_ChainGather
arg	63:44	63:57	6	p_sys->p_spu
water	63:44	0:0	7	p_sys
op	63:49	0:0	7	->
water	63:51	0:0	7	p_spu
if	64:8	68:8	4	(p_spu -> i_buffer != p_sys -> i_spu_size)
cond	64:12	64:38	5	p_spu -> i_buffer != p_sys -> i_spu_size
water	64:12	0:0	6	p_spu
op	64:17	0:0	6	->
water	64:19	0:0	6	i_buffer
op	64:28	0:0	6	!=
water	64:31	0:0	6	p_sys
op	64:36	0:0	6	->
water	64:38	0:0	6	i_spu_size
stmts	65:8	68:8	5	
water	65:8	0:0	6	{
call	66:12	67:57	6	msg_Warn
arg	66:22	66:27	7	p_dec
water	66:22	0:0	8	p_dec
arg	66:29	66:70	7	"subtitle packets size=%zu should be %zu"
water	66:29	0:0	8	"subtitle packets size=%zu should be %zu"
arg	67:22	67:37	7	p_spu->i_buffer
water	67:22	0:0	8	p_spu
op	67:27	0:0	8	->
water	67:29	0:0	8	i_buffer
arg	67:39	67:57	7	p_sys->i_spu_size
water	67:39	0:0	8	p_sys
op	67:44	0:0	8	->
water	67:46	0:0	8	i_spu_size
water	67:58	0:0	6	;
water	68:8	0:0	6	}
call	69:8	69:73	4	dbg_print
arg	69:19	69:55	5	"subtitle packet complete, size=%zu"
water	69:19	0:0	6	"subtitle packet complete, size=%zu"
arg	69:57	69:73	5	p_spu->i_buffer
water	69:57	0:0	6	p_spu
op	69:62	0:0	6	->
water	69:64	0:0	6	i_buffer
water	69:74	0:0	4	;
water	70:8	0:0	4	p_sys
op	70:13	0:0	4	->
water	70:15	0:0	4	i_state
op	70:23	0:0	4	=
water	70:25	0:0	4	SUBTITLE_BLOCK_EMPTY
water	70:45	0:0	4	;
water	71:8	0:0	4	p_sys
op	71:13	0:0	4	->
water	71:15	0:0	4	p_spu
op	71:21	0:0	4	=
water	71:23	0:0	4	0
water	71:24	0:0	4	;
return	72:8	72:20	4	p_spu
water	72:15	0:0	5	p_spu
water	73:4	0:0	4	}
return	74:4	74:15	2	NULL
water	74:11	0:0	3	NULL

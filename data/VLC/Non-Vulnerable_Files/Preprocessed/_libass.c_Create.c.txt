func	2:0	112:0	0	static int	Create
params	2:17	0:0	1	
param	2:19	2:40	2	vlc_object_t *	p_this
stmnts	0:0	111:22	1	
decl	4:4	4:42	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:34	0:0	2	*
water	4:35	0:0	2	)
water	4:36	0:0	2	p_this
decl	5:4	5:24	2	decoder_sys_t	*p_sys
if	6:4	7:27	2	(p_dec -> fmt_in . i_codec != VLC_CODEC_SSA)
cond	6:8	6:33	3	p_dec -> fmt_in . i_codec != VLC_CODEC_SSA
water	6:8	0:0	4	p_dec
op	6:13	0:0	4	->
water	6:15	0:0	4	fmt_in
op	6:21	0:0	4	.
water	6:22	0:0	4	i_codec
op	6:30	0:0	4	!=
water	6:33	0:0	4	VLC_CODEC_SSA
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
water	8:4	0:0	2	p_dec
op	8:9	0:0	2	->
water	8:11	0:0	2	pf_decode_sub
op	8:25	0:0	2	=
water	8:27	0:0	2	DecodeBlock
water	8:38	0:0	2	;
water	9:4	0:0	2	p_dec
op	9:9	0:0	2	->
water	9:11	0:0	2	p_sys
op	9:17	0:0	2	=
water	9:19	0:0	2	p_sys
op	9:25	0:0	2	=
call	9:27	9:59	2	malloc
arg	9:35	9:59	3	sizeof(decoder_sys_t)
op	9:35	0:0	4	sizeof
water	9:41	0:0	4	(
water	9:43	0:0	4	decoder_sys_t
water	9:57	0:0	4	)
water	9:60	0:0	2	;
if	10:4	11:25	2	(! p_sys)
cond	10:8	10:9	3	! p_sys
op	10:8	0:0	4	!
water	10:9	0:0	4	p_sys
stmts	11:8	11:25	3	
return	11:8	11:25	4	VLC_ENOMEM
water	11:15	0:0	5	VLC_ENOMEM
call	13:4	13:33	2	vlc_mutex_init
arg	13:20	13:33	3	&p_sys->lock
op	13:20	0:0	4	&
water	13:21	0:0	4	p_sys
op	13:26	0:0	4	->
water	13:28	0:0	4	lock
water	13:34	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	i_refcount
op	14:22	0:0	2	=
water	14:24	0:0	2	1
water	14:25	0:0	2	;
call	15:4	15:47	2	memset
arg	15:12	15:23	3	&p_sys->fmt
op	15:12	0:0	4	&
water	15:13	0:0	4	p_sys
op	15:18	0:0	4	->
water	15:20	0:0	4	fmt
arg	15:25	15:26	3	0
water	15:25	0:0	4	0
arg	15:28	15:47	3	sizeof(p_sys->fmt)
op	15:28	0:0	4	sizeof
water	15:34	0:0	4	(
water	15:35	0:0	4	p_sys
op	15:40	0:0	4	->
water	15:42	0:0	4	fmt
water	15:45	0:0	4	)
water	15:48	0:0	2	;
water	16:4	0:0	2	p_sys
op	16:9	0:0	2	->
water	16:11	0:0	2	i_max_stop
op	16:22	0:0	2	=
water	16:24	0:0	2	VLC_TS_INVALID
water	16:38	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	p_library
op	17:22	0:0	2	=
water	17:24	0:0	2	NULL
water	17:28	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	p_renderer
op	18:22	0:0	2	=
water	18:24	0:0	2	NULL
water	18:28	0:0	2	;
water	19:4	0:0	2	p_sys
op	19:9	0:0	2	->
water	19:11	0:0	2	p_track
op	19:22	0:0	2	=
water	19:24	0:0	2	NULL
water	19:28	0:0	2	;
decl	21:4	21:66	2	ASS_Library	*p_library
op	21:27	0:0	2	=
water	21:29	0:0	2	p_sys
op	21:34	0:0	2	->
water	21:36	0:0	2	p_library
op	21:46	0:0	2	=
call	21:48	21:65	3	ass_library_init
if	22:4	27:4	2	(! p_library)
cond	22:8	22:9	3	! p_library
op	22:8	0:0	4	!
water	22:9	0:0	4	p_library
stmts	23:4	27:4	3	
water	23:4	0:0	4	{
call	24:8	24:58	4	msg_Warn
arg	24:18	24:23	5	p_dec
water	24:18	0:0	6	p_dec
arg	24:25	24:58	5	"Libass library creation failed"
water	24:25	0:0	6	"Libass library creation failed"
water	24:59	0:0	4	;
call	25:8	25:29	4	DecSysRelease
arg	25:23	25:29	5	p_sys
water	25:23	0:0	6	p_sys
water	25:30	0:0	4	;
return	26:8	26:27	4	VLC_EGENERIC
water	26:15	0:0	5	VLC_EGENERIC
water	27:4	0:0	4	}
decl	29:4	29:40	2	input_attachment_t	**pp_attachments
decl	30:4	30:39	2	int	i_attachments
if	31:4	35:4	2	(decoder_GetInputAttachments (p_dec ,& pp_attachments ,& i_attachments ))
cond	31:8	31:76	3	decoder_GetInputAttachments (p_dec ,& pp_attachments ,& i_attachments )
call	31:8	31:76	4	decoder_GetInputAttachments
arg	31:37	31:42	5	p_dec
water	31:37	0:0	6	p_dec
arg	31:44	31:59	5	&pp_attachments
op	31:44	0:0	6	&
water	31:45	0:0	6	pp_attachments
arg	31:61	31:76	5	&i_attachments
op	31:61	0:0	6	&
water	31:62	0:0	6	i_attachments
stmts	32:4	35:4	3	
water	32:4	0:0	4	{
water	33:8	0:0	4	i_attachments
op	33:22	0:0	4	=
water	33:24	0:0	4	0
water	33:25	0:0	4	;
water	34:8	0:0	4	pp_attachments
op	34:23	0:0	4	=
water	34:25	0:0	4	NULL
water	34:29	0:0	4	;
water	35:4	0:0	4	}
for	36:4	56:4	2	( int k = 0 ;k < i_attachments;k ++)
forinit	0:0	36:18	3	 int k = 0 ;
decl	36:9	36:18	4	int	k
op	36:15	0:0	4	=
water	36:17	0:0	4	0
cond	36:20	36:24	3	k < i_attachments
water	36:20	0:0	4	k
op	36:22	0:0	4	<
water	36:24	0:0	4	i_attachments
forexpr	36:39	36:40	3	k ++
water	36:39	0:0	4	k
op	36:40	0:0	4	++
stmts	37:4	56:4	3	
water	37:4	0:0	4	{
decl	38:8	38:56	4	input_attachment_t	*p_attach
op	38:37	0:0	4	=
water	38:39	0:0	4	pp_attachments
op	38:53	0:0	4	[
water	38:54	0:0	4	k
op	38:55	0:0	4	]
decl	39:8	39:26	4	bool	found
op	39:19	0:0	4	=
water	39:21	0:0	4	false
if	41:8	42:24	4	(!strcasecmp (p_attach -> psz_mime ,"application/x-truetype-font" ))
cond	41:12	41:75	5	!strcasecmp (p_attach -> psz_mime ,"application/x-truetype-font" )
op	41:12	0:0	6	!
call	41:13	41:75	6	strcasecmp
arg	41:25	41:43	7	p_attach->psz_mime
water	41:25	0:0	8	p_attach
op	41:33	0:0	8	->
water	41:35	0:0	8	psz_mime
arg	41:45	41:75	7	"application/x-truetype-font"
water	41:45	0:0	8	"application/x-truetype-font"
stmts	42:12	42:24	5	
water	42:12	0:0	6	found
op	42:18	0:0	6	=
water	42:20	0:0	6	true
water	42:24	0:0	6	;
else	44:8	49:8	4
stmts	44:13	49:8	5	
if	44:13	49:8	6	(! found &&strlen (p_attach -> psz_name ) > 4)
cond	44:17	44:58	7	! found &&strlen (p_attach -> psz_name ) > 4
op	44:17	0:0	8	!
water	44:18	0:0	8	found
op	44:24	0:0	8	&&
call	44:27	44:54	8	strlen
arg	44:35	44:54	9	p_attach->psz_name
water	44:35	0:0	10	p_attach
op	44:43	0:0	10	->
water	44:45	0:0	10	psz_name
op	44:56	0:0	8	>
water	44:58	0:0	8	4
stmts	45:8	49:8	7	
water	45:8	0:0	8	{
decl	46:12	46:77	8	char	*ext
op	46:22	0:0	8	=
water	46:24	0:0	8	p_attach
op	46:32	0:0	8	->
water	46:34	0:0	8	psz_name
op	46:43	0:0	8	+
call	46:45	46:72	9	strlen
arg	46:53	46:72	10	p_attach->psz_name
water	46:53	0:0	11	p_attach
op	46:61	0:0	11	->
water	46:63	0:0	11	psz_name
op	46:74	0:0	8	-
water	46:76	0:0	8	4
if	47:12	48:28	8	(!strcasecmp (ext ,".ttf" ) || !strcasecmp (ext ,".otf" ) || !strcasecmp (ext ,".ttc" ))
cond	47:16	47:101	9	!strcasecmp (ext ,".ttf" ) || !strcasecmp (ext ,".otf" ) || !strcasecmp (ext ,".ttc" )
op	47:16	0:0	10	!
call	47:17	47:41	10	strcasecmp
arg	47:29	47:32	11	ext
water	47:29	0:0	12	ext
arg	47:34	47:41	11	".ttf"
water	47:34	0:0	12	".ttf"
op	47:43	0:0	10	||
op	47:46	0:0	10	!
call	47:47	47:71	10	strcasecmp
arg	47:59	47:62	11	ext
water	47:59	0:0	12	ext
arg	47:64	47:71	11	".otf"
water	47:64	0:0	12	".otf"
op	47:73	0:0	10	||
op	47:76	0:0	10	!
call	47:77	47:101	10	strcasecmp
arg	47:89	47:92	11	ext
water	47:89	0:0	12	ext
arg	47:94	47:101	11	".ttc"
water	47:94	0:0	12	".ttc"
stmts	48:16	48:28	9	
water	48:16	0:0	10	found
op	48:22	0:0	10	=
water	48:24	0:0	10	true
water	48:28	0:0	10	;
water	49:8	0:0	8	}
if	50:8	54:8	4	(found)
cond	50:12	50:12	5	found
water	50:12	0:0	6	found
stmts	51:8	54:8	5	
water	51:8	0:0	6	{
call	52:12	52:74	6	msg_Dbg
arg	52:21	52:26	7	p_dec
water	52:21	0:0	8	p_dec
arg	52:28	52:53	7	"adding embedded font %s"
water	52:28	0:0	8	"adding embedded font %s"
arg	52:55	52:74	7	p_attach->psz_name
water	52:55	0:0	8	p_attach
op	52:63	0:0	8	->
water	52:65	0:0	8	psz_name
water	52:75	0:0	6	;
call	53:12	53:99	6	ass_add_font
arg	53:26	53:42	7	p_sys->p_library
water	53:26	0:0	8	p_sys
op	53:31	0:0	8	->
water	53:33	0:0	8	p_library
arg	53:44	53:62	7	p_attach->psz_name
water	53:44	0:0	8	p_attach
op	53:52	0:0	8	->
water	53:54	0:0	8	psz_name
arg	53:64	53:80	7	p_attach->p_data
water	53:64	0:0	8	p_attach
op	53:72	0:0	8	->
water	53:74	0:0	8	p_data
arg	53:82	53:99	7	p_attach->i_data
water	53:82	0:0	8	p_attach
op	53:90	0:0	8	->
water	53:92	0:0	8	i_data
water	53:100	0:0	6	;
water	54:8	0:0	6	}
call	55:8	55:46	4	vlc_input_attachment_Delete
arg	55:37	55:46	5	p_attach
water	55:37	0:0	6	p_attach
water	55:47	0:0	4	;
water	56:4	0:0	4	}
call	57:4	57:25	2	free
arg	57:10	57:25	3	pp_attachments
water	57:10	0:0	4	pp_attachments
water	57:26	0:0	2	;
call	58:4	58:43	2	ass_set_extract_fonts
arg	58:27	58:36	3	p_library
water	58:27	0:0	4	p_library
arg	58:38	58:43	3	true
water	58:38	0:0	4	true
water	58:44	0:0	2	;
call	59:4	59:45	2	ass_set_style_overrides
arg	59:29	59:38	3	p_library
water	59:29	0:0	4	p_library
arg	59:40	59:45	3	NULL
water	59:40	0:0	4	NULL
water	59:46	0:0	2	;
decl	61:4	61:81	2	ASS_Renderer	*p_renderer
op	61:29	0:0	2	=
water	61:31	0:0	2	p_sys
op	61:36	0:0	2	->
water	61:38	0:0	2	p_renderer
op	61:49	0:0	2	=
call	61:51	61:80	3	ass_renderer_init
arg	61:70	61:80	4	p_library
water	61:70	0:0	5	p_library
if	62:4	67:4	2	(! p_renderer)
cond	62:8	62:9	3	! p_renderer
op	62:8	0:0	4	!
water	62:9	0:0	4	p_renderer
stmts	63:4	67:4	3	
water	63:4	0:0	4	{
call	64:8	64:59	4	msg_Warn
arg	64:18	64:23	5	p_dec
water	64:18	0:0	6	p_dec
arg	64:25	64:59	5	"Libass renderer creation failed"
water	64:25	0:0	6	"Libass renderer creation failed"
water	64:60	0:0	4	;
call	65:8	65:29	4	DecSysRelease
arg	65:23	65:29	5	p_sys
water	65:23	0:0	6	p_sys
water	65:30	0:0	4	;
return	66:8	66:27	4	VLC_EGENERIC
water	66:15	0:0	5	VLC_EGENERIC
water	67:4	0:0	4	}
call	68:4	68:42	2	ass_set_use_margins
arg	68:25	68:35	3	p_renderer
water	68:25	0:0	4	p_renderer
arg	68:37	68:42	3	false
water	68:37	0:0	4	false
water	68:43	0:0	2	;
call	71:4	71:51	2	ass_set_hinting
arg	71:21	71:31	3	p_renderer
water	71:21	0:0	4	p_renderer
arg	71:33	71:51	3	ASS_HINTING_LIGHT
water	71:33	0:0	4	ASS_HINTING_LIGHT
water	71:52	0:0	2	;
call	72:4	72:40	2	ass_set_font_scale
arg	72:24	72:34	3	p_renderer
water	72:24	0:0	4	p_renderer
arg	72:36	72:40	3	1.0
water	72:36	0:0	4	1
op	72:37	0:0	4	.
water	72:38	0:0	4	0
water	72:41	0:0	2	;
call	73:4	73:42	2	ass_set_line_spacing
arg	73:26	73:36	3	p_renderer
water	73:26	0:0	4	p_renderer
arg	73:38	73:42	3	0.0
water	73:38	0:0	4	0
op	73:39	0:0	4	.
water	73:40	0:0	4	0
water	73:43	0:0	2	;
decl	75:4	75:61	2	const char	*psz_font
op	75:25	0:0	2	=
water	75:27	0:0	2	"/system/fonts/DroidSans-Bold.ttf"
decl	76:4	76:46	2	const char	*psz_family
op	76:27	0:0	2	=
water	76:29	0:0	2	"Droid Sans Bold"
decl	78:4	78:31	2	const char	*psz_font
op	78:25	0:0	2	=
water	78:27	0:0	2	NULL
decl	79:4	79:36	2	const char	*psz_family
op	79:27	0:0	2	=
water	79:29	0:0	2	"Arial"
decl	83:4	87:82	2	dialog_progress_bar_t	*p_dialog
op	83:36	0:0	2	=
call	84:8	87:81	3	dialog_ProgressCreate
arg	84:31	84:36	4	p_dec
water	84:31	0:0	5	p_dec
arg	85:31	85:55	4	_("Building font cache")
call	85:31	85:54	5	_
arg	85:33	85:54	6	"Building font cache"
water	85:33	0:0	7	"Building font cache"
arg	86:31	87:74	4	_("Please wait while your font cache is rebuilt.\n""This should take less than a minute.")
call	86:31	87:73	5	_
arg	86:34	87:73	6	"Please wait while your font cache is rebuilt.\n""This should take less than a minute."
water	86:34	0:0	7	"Please wait while your font cache is rebuilt.\n"
water	87:34	0:0	7	"This should take less than a minute."
arg	87:76	87:81	4	NULL
water	87:76	0:0	5	NULL
call	89:4	89:64	2	ass_set_fonts
arg	89:19	89:29	3	p_renderer
water	89:19	0:0	4	p_renderer
arg	89:31	89:39	3	psz_font
water	89:31	0:0	4	psz_font
arg	89:41	89:51	3	psz_family
water	89:41	0:0	4	psz_family
arg	89:53	89:54	3	1
water	89:53	0:0	4	1
arg	89:56	89:60	3	NULL
water	89:56	0:0	4	NULL
arg	89:62	89:64	3	1
water	89:62	0:0	4	1
water	89:65	0:0	2	;
if	91:4	95:4	2	(p_dialog)
cond	91:8	91:8	3	p_dialog
water	91:8	0:0	4	p_dialog
stmts	92:4	95:4	3	
water	92:4	0:0	4	{
call	93:8	93:48	4	dialog_ProgressSet
arg	93:28	93:36	5	p_dialog
water	93:28	0:0	6	p_dialog
arg	93:38	93:42	5	NULL
water	93:38	0:0	6	NULL
arg	93:44	93:48	5	1.0
water	93:44	0:0	6	1
op	93:45	0:0	6	.
water	93:46	0:0	6	0
water	93:49	0:0	4	;
call	94:8	94:41	4	dialog_ProgressDestroy
arg	94:32	94:41	5	p_dialog
water	94:32	0:0	6	p_dialog
water	94:42	0:0	4	;
water	95:4	0:0	4	}
call	99:4	99:64	2	ass_set_fonts
arg	99:19	99:29	3	p_renderer
water	99:19	0:0	4	p_renderer
arg	99:31	99:39	3	psz_font
water	99:31	0:0	4	psz_font
arg	99:41	99:51	3	psz_family
water	99:41	0:0	4	psz_family
arg	99:53	99:54	3	1
water	99:53	0:0	4	1
arg	99:56	99:60	3	NULL
water	99:56	0:0	4	NULL
arg	99:62	99:64	3	1
water	99:62	0:0	4	1
water	99:65	0:0	2	;
decl	102:4	102:75	2	ASS_Track	*p_track
op	102:23	0:0	2	=
water	102:25	0:0	2	p_sys
op	102:30	0:0	2	->
water	102:32	0:0	2	p_track
op	102:40	0:0	2	=
call	102:42	102:74	3	ass_new_track
arg	102:57	102:74	4	p_sys->p_library
water	102:57	0:0	5	p_sys
op	102:62	0:0	5	->
water	102:64	0:0	5	p_library
if	103:4	107:4	2	(! p_track)
cond	103:8	103:9	3	! p_track
op	103:8	0:0	4	!
water	103:9	0:0	4	p_track
stmts	104:4	107:4	3	
water	104:4	0:0	4	{
call	105:8	105:29	4	DecSysRelease
arg	105:23	105:29	5	p_sys
water	105:23	0:0	6	p_sys
water	105:30	0:0	4	;
return	106:8	106:27	4	VLC_EGENERIC
water	106:15	0:0	5	VLC_EGENERIC
water	107:4	0:0	4	}
call	108:4	108:85	2	ass_process_codec_private
arg	108:31	108:38	3	p_track
water	108:31	0:0	4	p_track
arg	108:40	108:61	3	p_dec->fmt_in.p_extra
water	108:40	0:0	4	p_dec
op	108:45	0:0	4	->
water	108:47	0:0	4	fmt_in
op	108:53	0:0	4	.
water	108:54	0:0	4	p_extra
arg	108:63	108:85	3	p_dec->fmt_in.i_extra
water	108:63	0:0	4	p_dec
op	108:68	0:0	4	->
water	108:70	0:0	4	fmt_in
op	108:76	0:0	4	.
water	108:77	0:0	4	i_extra
water	108:86	0:0	2	;
water	109:4	0:0	2	p_dec
op	109:9	0:0	2	->
water	109:11	0:0	2	fmt_out
op	109:18	0:0	2	.
water	109:19	0:0	2	i_cat
op	109:25	0:0	2	=
water	109:27	0:0	2	SPU_ES
water	109:33	0:0	2	;
water	110:4	0:0	2	p_dec
op	110:9	0:0	2	->
water	110:11	0:0	2	fmt_out
op	110:18	0:0	2	.
water	110:19	0:0	2	i_codec
op	110:27	0:0	2	=
water	110:29	0:0	2	VLC_CODEC_RGBA
water	110:43	0:0	2	;
return	111:4	111:22	2	VLC_SUCCESS
water	111:11	0:0	3	VLC_SUCCESS

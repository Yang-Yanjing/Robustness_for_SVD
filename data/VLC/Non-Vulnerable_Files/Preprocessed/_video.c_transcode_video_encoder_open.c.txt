func	2:0	29:0	0	static int	transcode_video_encoder_open
params	2:39	0:0	1	
param	2:41	2:64	2	sout_stream_t *	p_stream
param	3:41	3:66	2	sout_stream_id_sys_t *	id
stmnts	0:0	28:22	1	
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
call	6:4	8:50	2	msg_Dbg
arg	6:13	6:21	3	p_stream
water	6:13	0:0	4	p_stream
arg	6:23	6:64	3	"destination (after video filters) %ix%i"
water	6:23	0:0	4	"destination (after video filters) %ix%i"
arg	7:13	7:48	3	id->p_encoder->fmt_in.video.i_width
water	7:13	0:0	4	id
op	7:15	0:0	4	->
water	7:17	0:0	4	p_encoder
op	7:26	0:0	4	->
water	7:28	0:0	4	fmt_in
op	7:34	0:0	4	.
water	7:35	0:0	4	video
op	7:40	0:0	4	.
water	7:41	0:0	4	i_width
arg	8:13	8:50	3	id->p_encoder->fmt_in.video.i_height
water	8:13	0:0	4	id
op	8:15	0:0	4	->
water	8:17	0:0	4	p_encoder
op	8:26	0:0	4	->
water	8:28	0:0	4	fmt_in
op	8:34	0:0	4	.
water	8:35	0:0	4	video
op	8:40	0:0	4	.
water	8:41	0:0	4	i_height
water	8:51	0:0	2	;
water	9:4	0:0	2	id
op	9:6	0:0	2	->
water	9:8	0:0	2	p_encoder
op	9:17	0:0	2	->
water	9:19	0:0	2	p_module
op	9:28	0:0	2	=
call	10:8	10:69	2	module_need
arg	10:21	10:34	3	id->p_encoder
water	10:21	0:0	4	id
op	10:23	0:0	4	->
water	10:25	0:0	4	p_encoder
arg	10:36	10:45	3	"encoder"
water	10:36	0:0	4	"encoder"
arg	10:47	10:62	3	p_sys->psz_venc
water	10:47	0:0	4	p_sys
op	10:52	0:0	4	->
water	10:54	0:0	4	psz_venc
arg	10:64	10:69	3	true
water	10:64	0:0	4	true
water	10:70	0:0	2	;
if	11:4	17:4	2	(! id -> p_encoder -> p_module)
cond	11:8	11:24	3	! id -> p_encoder -> p_module
op	11:8	0:0	4	!
water	11:9	0:0	4	id
op	11:11	0:0	4	->
water	11:13	0:0	4	p_encoder
op	11:22	0:0	4	->
water	11:24	0:0	4	p_module
stmts	12:4	17:4	3	
water	12:4	0:0	4	{
call	13:8	15:42	4	msg_Err
arg	13:17	13:25	5	p_stream
water	13:17	0:0	6	p_stream
arg	13:27	13:79	5	"cannot find video encoder (module:%s fourcc:%4.4s)"
water	13:27	0:0	6	"cannot find video encoder (module:%s fourcc:%4.4s)"
arg	14:17	14:58	5	p_sys->psz_venc?p_sys->psz_venc:"any"
water	14:17	0:0	6	p_sys
op	14:22	0:0	6	->
water	14:24	0:0	6	psz_venc
water	14:33	0:0	6	?
water	14:35	0:0	6	p_sys
op	14:40	0:0	6	->
water	14:42	0:0	6	psz_venc
water	14:51	0:0	6	:
water	14:53	0:0	6	"any"
arg	15:17	15:42	5	(char*)&p_sys->i_vcodec
water	15:17	0:0	6	(
water	15:18	0:0	6	char
op	15:23	0:0	6	*
water	15:24	0:0	6	)
op	15:25	0:0	6	&
water	15:26	0:0	6	p_sys
op	15:31	0:0	6	->
water	15:33	0:0	6	i_vcodec
water	15:43	0:0	4	;
return	16:8	16:27	4	VLC_EGENERIC
water	16:15	0:0	5	VLC_EGENERIC
water	17:4	0:0	4	}
water	18:4	0:0	2	id
op	18:6	0:0	2	->
water	18:8	0:0	2	p_encoder
op	18:17	0:0	2	->
water	18:19	0:0	2	fmt_in
op	18:25	0:0	2	.
water	18:26	0:0	2	video
op	18:31	0:0	2	.
water	18:32	0:0	2	i_chroma
op	18:41	0:0	2	=
water	18:43	0:0	2	id
op	18:45	0:0	2	->
water	18:47	0:0	2	p_encoder
op	18:56	0:0	2	->
water	18:58	0:0	2	fmt_in
op	18:64	0:0	2	.
water	18:65	0:0	2	i_codec
water	18:72	0:0	2	;
water	20:4	0:0	2	id
op	20:6	0:0	2	->
water	20:8	0:0	2	p_encoder
op	20:17	0:0	2	->
water	20:19	0:0	2	fmt_out
op	20:26	0:0	2	.
water	20:27	0:0	2	i_codec
op	20:35	0:0	2	=
call	21:8	21:70	2	vlc_fourcc_GetCodec
arg	21:29	21:37	3	VIDEO_ES
water	21:29	0:0	4	VIDEO_ES
arg	21:39	21:70	3	id->p_encoder->fmt_out.i_codec
water	21:39	0:0	4	id
op	21:41	0:0	4	->
water	21:43	0:0	4	p_encoder
op	21:52	0:0	4	->
water	21:54	0:0	4	fmt_out
op	21:61	0:0	4	.
water	21:62	0:0	4	i_codec
water	21:71	0:0	2	;
water	22:4	0:0	2	id
op	22:6	0:0	2	->
water	22:8	0:0	2	id
op	22:11	0:0	2	=
call	22:13	22:73	2	sout_StreamIdAdd
arg	22:31	22:47	3	p_stream->p_next
water	22:31	0:0	4	p_stream
op	22:39	0:0	4	->
water	22:41	0:0	4	p_next
arg	22:49	22:73	3	&id->p_encoder->fmt_out
op	22:49	0:0	4	&
water	22:50	0:0	4	id
op	22:52	0:0	4	->
water	22:54	0:0	4	p_encoder
op	22:63	0:0	4	->
water	22:65	0:0	4	fmt_out
water	22:74	0:0	2	;
if	23:4	27:4	2	(! id -> id)
cond	23:8	23:13	3	! id -> id
op	23:8	0:0	4	!
water	23:9	0:0	4	id
op	23:11	0:0	4	->
water	23:13	0:0	4	id
stmts	24:4	27:4	3	
water	24:4	0:0	4	{
call	25:8	25:52	4	msg_Err
arg	25:17	25:25	5	p_stream
water	25:17	0:0	6	p_stream
arg	25:27	25:52	5	"cannot add this stream"
water	25:27	0:0	6	"cannot add this stream"
water	25:53	0:0	4	;
return	26:8	26:27	4	VLC_EGENERIC
water	26:15	0:0	5	VLC_EGENERIC
water	27:4	0:0	4	}
return	28:4	28:22	2	VLC_SUCCESS
water	28:11	0:0	3	VLC_SUCCESS

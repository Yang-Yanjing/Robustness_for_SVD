func	2:0	42:0	0	int	transcode_audio_new
params	2:23	0:0	1	
param	2:25	2:48	2	sout_stream_t *	p_stream
param	3:32	3:57	2	sout_stream_id_sys_t *	id
stmnts	0:0	41:22	1	
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
decl	6:4	6:34	2	audio_sample_format_t	fmt_last
water	11:4	0:0	2	id
op	11:6	0:0	2	->
water	11:8	0:0	2	p_decoder
op	11:17	0:0	2	->
water	11:19	0:0	2	fmt_out
op	11:27	0:0	2	=
water	11:29	0:0	2	id
op	11:31	0:0	2	->
water	11:33	0:0	2	p_decoder
op	11:42	0:0	2	->
water	11:44	0:0	2	fmt_in
water	11:50	0:0	2	;
water	12:4	0:0	2	id
op	12:6	0:0	2	->
water	12:8	0:0	2	p_decoder
op	12:17	0:0	2	->
water	12:19	0:0	2	fmt_out
op	12:26	0:0	2	.
water	12:27	0:0	2	i_extra
op	12:35	0:0	2	=
water	12:37	0:0	2	0
water	12:38	0:0	2	;
water	13:4	0:0	2	id
op	13:6	0:0	2	->
water	13:8	0:0	2	p_decoder
op	13:17	0:0	2	->
water	13:19	0:0	2	fmt_out
op	13:26	0:0	2	.
water	13:27	0:0	2	p_extra
op	13:35	0:0	2	=
water	13:37	0:0	2	0
water	13:38	0:0	2	;
water	14:4	0:0	2	id
op	14:6	0:0	2	->
water	14:8	0:0	2	p_decoder
op	14:17	0:0	2	->
water	14:19	0:0	2	pf_decode_audio
op	14:35	0:0	2	=
water	14:37	0:0	2	NULL
water	14:41	0:0	2	;
water	15:4	0:0	2	id
op	15:6	0:0	2	->
water	15:8	0:0	2	p_decoder
op	15:17	0:0	2	->
water	15:19	0:0	2	pf_aout_format_update
op	15:41	0:0	2	=
water	15:43	0:0	2	audio_update_format
water	15:62	0:0	2	;
water	17:4	0:0	2	id
op	17:6	0:0	2	->
water	17:8	0:0	2	p_decoder
op	17:17	0:0	2	->
water	17:19	0:0	2	p_module
op	17:28	0:0	2	=
call	18:8	18:63	2	module_need
arg	18:21	18:34	3	id->p_decoder
water	18:21	0:0	4	id
op	18:23	0:0	4	->
water	18:25	0:0	4	p_decoder
arg	18:36	18:45	3	"decoder"
water	18:36	0:0	4	"decoder"
arg	18:47	18:55	3	"$codec"
water	18:47	0:0	4	"$codec"
arg	18:57	18:63	3	false
water	18:57	0:0	4	false
water	18:64	0:0	2	;
if	19:4	23:4	2	(! id -> p_decoder -> p_module)
cond	19:8	19:24	3	! id -> p_decoder -> p_module
op	19:8	0:0	4	!
water	19:9	0:0	4	id
op	19:11	0:0	4	->
water	19:13	0:0	4	p_decoder
op	19:22	0:0	4	->
water	19:24	0:0	4	p_module
stmts	20:4	23:4	3	
water	20:4	0:0	4	{
call	21:8	21:55	4	msg_Err
arg	21:17	21:25	5	p_stream
water	21:17	0:0	6	p_stream
arg	21:27	21:55	5	"cannot find audio decoder"
water	21:27	0:0	6	"cannot find audio decoder"
water	21:56	0:0	4	;
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
water	23:4	0:0	4	}
water	25:4	0:0	2	id
op	25:6	0:0	2	->
water	25:8	0:0	2	p_decoder
op	25:17	0:0	2	->
water	25:19	0:0	2	fmt_out
op	25:26	0:0	2	.
water	25:27	0:0	2	audio
op	25:32	0:0	2	.
water	25:33	0:0	2	i_format
op	25:42	0:0	2	=
water	25:44	0:0	2	id
op	25:46	0:0	2	->
water	25:48	0:0	2	p_decoder
op	25:57	0:0	2	->
water	25:59	0:0	2	fmt_out
op	25:66	0:0	2	.
water	25:67	0:0	2	i_codec
water	25:74	0:0	2	;
call	26:4	26:54	2	aout_FormatPrepare
arg	26:24	26:54	3	&id->p_decoder->fmt_out.audio
op	26:24	0:0	4	&
water	26:25	0:0	4	id
op	26:27	0:0	4	->
water	26:29	0:0	4	p_decoder
op	26:38	0:0	4	->
water	26:40	0:0	4	fmt_out
op	26:47	0:0	4	.
water	26:48	0:0	4	audio
water	26:55	0:0	2	;
water	27:4	0:0	2	fmt_last
op	27:13	0:0	2	=
water	27:15	0:0	2	id
op	27:17	0:0	2	->
water	27:19	0:0	2	p_decoder
op	27:28	0:0	2	->
water	27:30	0:0	2	fmt_out
op	27:37	0:0	2	.
water	27:38	0:0	2	audio
water	27:43	0:0	2	;
if	29:4	32:60	2	(! ( id -> p_decoder -> fmt_in . i_codec == VLC_CODEC_MP4A && fmt_last . i_rate != id -> p_encoder -> fmt_in . audio . i_rate && fmt_last . i_channels != id -> p_encoder -> fmt_in . audio . i_channels ))
cond	29:8	31:69	3	! ( id -> p_decoder -> fmt_in . i_codec == VLC_CODEC_MP4A && fmt_last . i_rate != id -> p_encoder -> fmt_in . audio . i_rate && fmt_last . i_channels != id -> p_encoder -> fmt_in . audio . i_channels )
op	29:8	0:0	4	!
water	29:9	0:0	4	(
water	29:10	0:0	4	id
op	29:12	0:0	4	->
water	29:14	0:0	4	p_decoder
op	29:23	0:0	4	->
water	29:25	0:0	4	fmt_in
op	29:31	0:0	4	.
water	29:32	0:0	4	i_codec
op	29:40	0:0	4	==
water	29:43	0:0	4	VLC_CODEC_MP4A
op	29:58	0:0	4	&&
water	30:8	0:0	4	fmt_last
op	30:16	0:0	4	.
water	30:17	0:0	4	i_rate
op	30:24	0:0	4	!=
water	30:27	0:0	4	id
op	30:29	0:0	4	->
water	30:31	0:0	4	p_encoder
op	30:40	0:0	4	->
water	30:42	0:0	4	fmt_in
op	30:48	0:0	4	.
water	30:49	0:0	4	audio
op	30:54	0:0	4	.
water	30:55	0:0	4	i_rate
op	30:62	0:0	4	&&
water	31:8	0:0	4	fmt_last
op	31:16	0:0	4	.
water	31:17	0:0	4	i_channels
op	31:28	0:0	4	!=
water	31:31	0:0	4	id
op	31:33	0:0	4	->
water	31:35	0:0	4	p_encoder
op	31:44	0:0	4	->
water	31:46	0:0	4	fmt_in
op	31:52	0:0	4	.
water	31:53	0:0	4	audio
op	31:58	0:0	4	.
water	31:59	0:0	4	i_channels
water	31:69	0:0	4	)
stmts	32:8	32:60	3	
water	32:8	0:0	4	fmt_last
op	32:16	0:0	4	.
water	32:17	0:0	4	i_rate
op	32:24	0:0	4	=
water	32:26	0:0	4	id
op	32:28	0:0	4	->
water	32:30	0:0	4	p_decoder
op	32:39	0:0	4	->
water	32:41	0:0	4	fmt_in
op	32:47	0:0	4	.
water	32:48	0:0	4	audio
op	32:53	0:0	4	.
water	32:54	0:0	4	i_rate
water	32:60	0:0	4	;
if	36:4	37:27	2	(transcode_audio_initialize_encoder (id ,p_stream ) == VLC_EGENERIC)
cond	36:8	36:62	3	transcode_audio_initialize_encoder (id ,p_stream ) == VLC_EGENERIC
call	36:8	36:57	4	transcode_audio_initialize_encoder
arg	36:44	36:46	5	id
water	36:44	0:0	6	id
arg	36:48	36:57	5	p_stream
water	36:48	0:0	6	p_stream
op	36:59	0:0	4	==
water	36:62	0:0	4	VLC_EGENERIC
stmts	37:8	37:27	3	
return	37:8	37:27	4	VLC_EGENERIC
water	37:15	0:0	5	VLC_EGENERIC
if	38:4	40:27	2	(unlikely (transcode_audio_initialize_filters (p_stream ,id ,p_sys ,& fmt_last ) != VLC_SUCCESS ))
cond	38:8	39:81	3	unlikely (transcode_audio_initialize_filters (p_stream ,id ,p_sys ,& fmt_last ) != VLC_SUCCESS )
call	38:8	39:81	4	unlikely
arg	38:18	39:81	5	transcode_audio_initialize_filters(p_stream,id,p_sys,&fmt_last)!=VLC_SUCCESS
call	38:18	39:64	6	transcode_audio_initialize_filters
arg	38:54	38:62	7	p_stream
water	38:54	0:0	8	p_stream
arg	38:64	38:66	7	id
water	38:64	0:0	8	id
arg	38:68	38:73	7	p_sys
water	38:68	0:0	8	p_sys
arg	39:54	39:64	7	&fmt_last
op	39:54	0:0	8	&
water	39:55	0:0	8	fmt_last
op	39:66	0:0	6	!=
water	39:69	0:0	6	VLC_SUCCESS
stmts	40:8	40:27	3	
return	40:8	40:27	4	VLC_EGENERIC
water	40:15	0:0	5	VLC_EGENERIC
return	41:4	41:22	2	VLC_SUCCESS
water	41:11	0:0	3	VLC_SUCCESS

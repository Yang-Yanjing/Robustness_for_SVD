func	2:0	43:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:39	2	vlc_object_t *	p_this
stmnts	0:0	42:22	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
decl	6:4	6:27	2	bool	b_forced
op	6:20	0:0	2	=
water	6:22	0:0	2	false
decl	7:4	7:25	2	const uint8_t	*p_peek
decl	8:4	8:20	2	es_format_t	fmt
if	9:4	13:4	2	(stream_Peek (p_demux -> s ,& p_peek ,4 ) < 4)
cond	9:8	9:48	3	stream_Peek (p_demux -> s ,& p_peek ,4 ) < 4
call	9:8	9:44	4	stream_Peek
arg	9:21	9:31	5	p_demux->s
water	9:21	0:0	6	p_demux
op	9:28	0:0	6	->
water	9:30	0:0	6	s
arg	9:33	9:40	5	&p_peek
op	9:33	0:0	6	&
water	9:34	0:0	6	p_peek
arg	9:42	9:44	5	4
water	9:42	0:0	6	4
op	9:46	0:0	4	<
water	9:48	0:0	4	4
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
call	11:8	11:40	4	msg_Err
arg	11:17	11:24	5	p_demux
water	11:17	0:0	6	p_demux
arg	11:26	11:40	5	"cannot peek"
water	11:26	0:0	6	"cannot peek"
water	11:41	0:0	4	;
return	12:8	12:27	4	VLC_EGENERIC
water	12:15	0:0	5	VLC_EGENERIC
water	13:4	0:0	4	}
if	14:4	15:23	2	(p_demux -> b_force)
cond	14:8	14:17	3	p_demux -> b_force
water	14:8	0:0	4	p_demux
op	14:15	0:0	4	->
water	14:17	0:0	4	b_force
stmts	15:8	15:23	3	
water	15:8	0:0	4	b_forced
op	15:17	0:0	4	=
water	15:19	0:0	4	true
water	15:23	0:0	4	;
if	16:4	20:4	2	(p_peek [ 0 ] != 0 x00 || p_peek [ 1 ] != 0 x00 || p_peek [ 2 ] != 0 x01)
cond	16:8	16:64	3	p_peek [ 0 ] != 0 x00 || p_peek [ 1 ] != 0 x00 || p_peek [ 2 ] != 0 x01
water	16:8	0:0	4	p_peek
op	16:14	0:0	4	[
water	16:15	0:0	4	0
op	16:16	0:0	4	]
op	16:18	0:0	4	!=
water	16:21	0:0	4	0
water	16:22	0:0	4	x00
op	16:26	0:0	4	||
water	16:29	0:0	4	p_peek
op	16:35	0:0	4	[
water	16:36	0:0	4	1
op	16:37	0:0	4	]
op	16:39	0:0	4	!=
water	16:42	0:0	4	0
water	16:43	0:0	4	x00
op	16:47	0:0	4	||
water	16:50	0:0	4	p_peek
op	16:56	0:0	4	[
water	16:57	0:0	4	2
op	16:58	0:0	4	]
op	16:60	0:0	4	!=
water	16:63	0:0	4	0
water	16:64	0:0	4	x01
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
if	18:8	18:43	4	(! b_forced)
cond	18:12	18:13	5	! b_forced
op	18:12	0:0	6	!
water	18:13	0:0	6	b_forced
stmts	18:24	18:43	5	
return	18:24	18:43	6	VLC_EGENERIC
water	18:31	0:0	7	VLC_EGENERIC
call	19:8	19:81	4	msg_Err
arg	19:17	19:24	5	p_demux
water	19:17	0:0	6	p_demux
arg	19:26	19:81	5	"this doesn't look like an MPEG ES stream, continuing"
water	19:26	0:0	6	"this doesn't look like an MPEG ES stream, continuing"
water	19:82	0:0	4	;
water	20:4	0:0	4	}
if	21:4	25:4	2	(p_peek [ 3 ] > 0 xb9)
cond	21:8	21:21	3	p_peek [ 3 ] > 0 xb9
water	21:8	0:0	4	p_peek
op	21:14	0:0	4	[
water	21:15	0:0	4	3
op	21:16	0:0	4	]
op	21:18	0:0	4	>
water	21:20	0:0	4	0
water	21:21	0:0	4	xb9
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
if	23:8	23:43	4	(! b_forced)
cond	23:12	23:13	5	! b_forced
op	23:12	0:0	6	!
water	23:13	0:0	6	b_forced
stmts	23:24	23:43	5	
return	23:24	23:43	6	VLC_EGENERIC
water	23:31	0:0	7	VLC_EGENERIC
call	24:8	24:92	4	msg_Err
arg	24:17	24:24	5	p_demux
water	24:17	0:0	6	p_demux
arg	24:26	24:92	5	"this seems to be a system stream (PS plug-in ?), but continuing"
water	24:26	0:0	6	"this seems to be a system stream (PS plug-in ?), but continuing"
water	24:93	0:0	4	;
water	25:4	0:0	4	}
water	26:4	0:0	2	p_demux
op	26:11	0:0	2	->
water	26:13	0:0	2	pf_demux
op	26:23	0:0	2	=
water	26:25	0:0	2	Demux
water	26:30	0:0	2	;
water	27:4	0:0	2	p_demux
op	27:11	0:0	2	->
water	27:13	0:0	2	pf_control
op	27:23	0:0	2	=
water	27:25	0:0	2	Control
water	27:32	0:0	2	;
water	28:4	0:0	2	p_demux
op	28:11	0:0	2	->
water	28:13	0:0	2	p_sys
op	28:23	0:0	2	=
water	28:25	0:0	2	p_sys
op	28:31	0:0	2	=
call	28:33	28:63	2	malloc
arg	28:41	28:63	3	sizeof(demux_sys_t)
op	28:41	0:0	4	sizeof
water	28:47	0:0	4	(
water	28:49	0:0	4	demux_sys_t
water	28:61	0:0	4	)
water	28:64	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	b_start
op	29:23	0:0	2	=
water	29:25	0:0	2	true
water	29:29	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	p_es
op	30:23	0:0	2	=
water	30:25	0:0	2	NULL
water	30:29	0:0	2	;
call	32:4	32:51	2	es_format_Init
arg	32:20	32:24	3	&fmt
op	32:20	0:0	4	&
water	32:21	0:0	4	fmt
arg	32:26	32:34	3	VIDEO_ES
water	32:26	0:0	4	VIDEO_ES
arg	32:36	32:51	3	VLC_CODEC_MPGV
water	32:36	0:0	4	VLC_CODEC_MPGV
water	32:52	0:0	2	;
water	33:4	0:0	2	p_sys
op	33:9	0:0	2	->
water	33:11	0:0	2	p_packetizer
op	33:24	0:0	2	=
call	33:26	33:75	2	demux_PacketizerNew
arg	33:47	33:54	3	p_demux
water	33:47	0:0	4	p_demux
arg	33:56	33:60	3	&fmt
op	33:56	0:0	4	&
water	33:57	0:0	4	fmt
arg	33:62	33:75	3	"mpeg video"
water	33:62	0:0	4	"mpeg video"
water	33:76	0:0	2	;
if	34:4	38:4	2	(! p_sys -> p_packetizer)
cond	34:8	34:16	3	! p_sys -> p_packetizer
op	34:8	0:0	4	!
water	34:9	0:0	4	p_sys
op	34:14	0:0	4	->
water	34:16	0:0	4	p_packetizer
stmts	35:4	38:4	3	
water	35:4	0:0	4	{
call	36:8	36:20	4	free
arg	36:14	36:20	5	p_sys
water	36:14	0:0	6	p_sys
water	36:21	0:0	4	;
return	37:8	37:27	4	VLC_EGENERIC
water	37:15	0:0	5	VLC_EGENERIC
water	38:4	0:0	4	}
call	40:4	40:51	2	es_format_Init
arg	40:20	40:24	3	&fmt
op	40:20	0:0	4	&
water	40:21	0:0	4	fmt
arg	40:26	40:34	3	VIDEO_ES
water	40:26	0:0	4	VIDEO_ES
arg	40:36	40:51	3	VLC_CODEC_MPGV
water	40:36	0:0	4	VLC_CODEC_MPGV
water	40:52	0:0	2	;
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	p_es
op	41:16	0:0	2	=
call	41:18	41:49	2	es_out_Add
arg	41:30	41:42	3	p_demux->out
water	41:30	0:0	4	p_demux
op	41:37	0:0	4	->
water	41:39	0:0	4	out
arg	41:44	41:49	3	&fmt
op	41:44	0:0	4	&
water	41:45	0:0	4	fmt
water	41:50	0:0	2	;
return	42:4	42:22	2	VLC_SUCCESS
water	42:11	0:0	3	VLC_SUCCESS

func	2:0	54:0	0	motion_sensors_t *	motion_create
params	2:31	0:0	1	
param	2:33	2:51	2	vlc_object_t *	obj
stmnts	0:0	53:17	1	
decl	4:4	4:11	2	FILE	*f
decl	5:4	5:24	2	int	i_x
op	5:12	0:0	2	=
water	5:14	0:0	2	0
water	5:15	0:0	2	,
decl	5:4	5:24	2	int	i_y
op	5:21	0:0	2	=
water	5:23	0:0	2	0
decl	6:4	6:67	2	motion_sensors_t	*motion
op	6:29	0:0	2	=
call	6:31	6:66	3	malloc
arg	6:39	6:66	4	sizeof(motion_sensors_t)
op	6:39	0:0	5	sizeof
water	6:45	0:0	5	(
water	6:47	0:0	5	motion_sensors_t
water	6:64	0:0	5	)
if	7:4	10:4	2	(unlikely (motion == NULL ))
cond	7:8	7:33	3	unlikely (motion == NULL )
call	7:8	7:33	4	unlikely
arg	7:18	7:33	5	motion==NULL
water	7:18	0:0	6	motion
op	7:25	0:0	6	==
water	7:28	0:0	6	NULL
stmts	8:4	10:4	3	
water	8:4	0:0	4	{
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
water	10:4	0:0	4	}
if	11:4	19:4	2	(access ("/sys/devices/platform/hdaps/position" ,R_OK ) == 0 && ( f =fopen ("/sys/devices/platform/hdaps/calibrate" ,"re" ) ))
cond	11:8	12:72	3	access ("/sys/devices/platform/hdaps/position" ,R_OK ) == 0 && ( f =fopen ("/sys/devices/platform/hdaps/calibrate" ,"re" ) )
call	11:8	11:61	4	access
arg	11:16	11:54	5	"/sys/devices/platform/hdaps/position"
water	11:16	0:0	6	"/sys/devices/platform/hdaps/position"
arg	11:56	11:61	5	R_OK
water	11:56	0:0	6	R_OK
op	11:63	0:0	4	==
water	11:66	0:0	4	0
op	12:8	0:0	4	&&
water	12:11	0:0	4	(
water	12:13	0:0	4	f
op	12:15	0:0	4	=
call	12:17	12:70	4	fopen
arg	12:24	12:63	5	"/sys/devices/platform/hdaps/calibrate"
water	12:24	0:0	6	"/sys/devices/platform/hdaps/calibrate"
arg	12:65	12:70	5	"re"
water	12:65	0:0	6	"re"
water	12:72	0:0	4	)
stmts	13:4	19:4	3	
water	13:4	0:0	4	{
water	15:8	0:0	4	motion
op	15:14	0:0	4	->
water	15:16	0:0	4	i_calibrate
op	15:28	0:0	4	=
call	15:30	15:63	4	fscanf
arg	15:38	15:39	5	f
water	15:38	0:0	6	f
arg	15:41	15:50	5	"(%d,%d)"
water	15:41	0:0	6	"(%d,%d)"
arg	15:52	15:56	5	&i_x
op	15:52	0:0	6	&
water	15:53	0:0	6	i_x
arg	15:58	15:63	5	&i_y
op	15:58	0:0	6	&
water	15:59	0:0	6	i_y
op	15:65	0:0	4	==
water	15:68	0:0	4	2
water	15:70	0:0	4	?
water	15:72	0:0	4	i_x
water	15:75	0:0	4	:
water	15:77	0:0	4	0
water	15:78	0:0	4	;
call	16:8	16:18	4	fclose
arg	16:16	16:18	5	f
water	16:16	0:0	6	f
water	16:19	0:0	4	;
water	17:8	0:0	4	motion
op	17:14	0:0	4	->
water	17:16	0:0	4	sensor
op	17:23	0:0	4	=
water	17:25	0:0	4	HDAPS_SENSOR
water	17:37	0:0	4	;
call	18:8	18:64	4	msg_Dbg
arg	18:17	18:20	5	obj
water	18:17	0:0	6	obj
arg	18:22	18:64	5	"HDAPS motion detection correctly loaded"
water	18:22	0:0	6	"HDAPS motion detection correctly loaded"
water	18:65	0:0	4	;
water	19:4	0:0	4	}
else	20:4	25:4	2
stmts	20:9	25:4	3	
if	20:9	25:4	4	(access ("/sys/devices/ams/x" ,R_OK ) == 0)
cond	20:13	20:53	5	access ("/sys/devices/ams/x" ,R_OK ) == 0
call	20:13	20:48	6	access
arg	20:21	20:41	7	"/sys/devices/ams/x"
water	20:21	0:0	8	"/sys/devices/ams/x"
arg	20:43	20:48	7	R_OK
water	20:43	0:0	8	R_OK
op	20:50	0:0	6	==
water	20:53	0:0	6	0
stmts	21:4	25:4	5	
water	21:4	0:0	6	{
water	23:8	0:0	6	motion
op	23:14	0:0	6	->
water	23:16	0:0	6	sensor
op	23:23	0:0	6	=
water	23:25	0:0	6	AMS_SENSOR
water	23:35	0:0	6	;
call	24:8	24:62	6	msg_Dbg
arg	24:17	24:20	7	obj
water	24:17	0:0	8	obj
arg	24:22	24:62	7	"AMS motion detection correctly loaded"
water	24:22	0:0	8	"AMS motion detection correctly loaded"
water	24:63	0:0	6	;
water	25:4	0:0	6	}
else	26:4	35:4	2
stmts	26:9	35:4	3	
if	26:9	35:4	4	(access ("/sys/devices/platform/applesmc.768/position" ,R_OK ) == 0 && ( f =fopen ("/sys/devices/platform/applesmc.768/calibrate" ,"re" ) ))
cond	26:13	27:84	5	access ("/sys/devices/platform/applesmc.768/position" ,R_OK ) == 0 && ( f =fopen ("/sys/devices/platform/applesmc.768/calibrate" ,"re" ) )
call	26:13	26:73	6	access
arg	26:21	26:66	7	"/sys/devices/platform/applesmc.768/position"
water	26:21	0:0	8	"/sys/devices/platform/applesmc.768/position"
arg	26:68	26:73	7	R_OK
water	26:68	0:0	8	R_OK
op	26:75	0:0	6	==
water	26:78	0:0	6	0
op	27:13	0:0	6	&&
water	27:16	0:0	6	(
water	27:18	0:0	6	f
op	27:20	0:0	6	=
call	27:22	27:82	6	fopen
arg	27:29	27:75	7	"/sys/devices/platform/applesmc.768/calibrate"
water	27:29	0:0	8	"/sys/devices/platform/applesmc.768/calibrate"
arg	27:77	27:82	7	"re"
water	27:77	0:0	8	"re"
water	27:84	0:0	6	)
stmts	28:4	35:4	5	
water	28:4	0:0	6	{
water	31:8	0:0	6	motion
op	31:14	0:0	6	->
water	31:16	0:0	6	i_calibrate
op	31:28	0:0	6	=
call	31:30	31:63	6	fscanf
arg	31:38	31:39	7	f
water	31:38	0:0	8	f
arg	31:41	31:50	7	"(%d,%d)"
water	31:41	0:0	8	"(%d,%d)"
arg	31:52	31:56	7	&i_x
op	31:52	0:0	8	&
water	31:53	0:0	8	i_x
arg	31:58	31:63	7	&i_y
op	31:58	0:0	8	&
water	31:59	0:0	8	i_y
op	31:65	0:0	6	==
water	31:68	0:0	6	2
water	31:70	0:0	6	?
water	31:72	0:0	6	i_x
water	31:75	0:0	6	:
water	31:77	0:0	6	0
water	31:78	0:0	6	;
call	32:8	32:18	6	fclose
arg	32:16	32:18	7	f
water	32:16	0:0	8	f
water	32:19	0:0	6	;
water	33:8	0:0	6	motion
op	33:14	0:0	6	->
water	33:16	0:0	6	sensor
op	33:23	0:0	6	=
water	33:25	0:0	6	APPLESMC_SENSOR
water	33:40	0:0	6	;
call	34:8	34:68	6	msg_Dbg
arg	34:17	34:20	7	obj
water	34:17	0:0	8	obj
arg	34:22	34:68	7	"Apple SMC motion detection correctly loaded"
water	34:22	0:0	8	"Apple SMC motion detection correctly loaded"
water	34:69	0:0	6	;
water	35:4	0:0	6	}
else	37:4	41:4	2
stmts	37:9	41:4	3	
if	37:9	41:4	4	(( motion -> unimotion_hw =detect_sms ( ) ))
cond	37:13	37:49	5	( motion -> unimotion_hw =detect_sms ( ) )
water	37:13	0:0	6	(
water	37:14	0:0	6	motion
op	37:20	0:0	6	->
water	37:22	0:0	6	unimotion_hw
op	37:35	0:0	6	=
call	37:37	37:48	6	detect_sms
water	37:49	0:0	6	)
stmts	38:4	41:4	5	
water	38:4	0:0	6	{
water	39:8	0:0	6	motion
op	39:14	0:0	6	->
water	39:16	0:0	6	sensor
op	39:23	0:0	6	=
water	39:25	0:0	6	UNIMOTION_SENSOR
water	39:41	0:0	6	;
call	40:8	40:68	6	msg_Dbg
arg	40:17	40:20	7	obj
water	40:17	0:0	8	obj
arg	40:22	40:68	7	"UniMotion motion detection correctly loaded"
water	40:22	0:0	8	"UniMotion motion detection correctly loaded"
water	40:69	0:0	6	;
water	41:4	0:0	6	}
else	43:4	49:4	2
stmts	44:4	49:4	3	
water	44:4	0:0	4	{
call	46:8	46:51	4	msg_Err
arg	46:17	46:20	5	obj
water	46:17	0:0	6	obj
arg	46:22	46:51	5	"No motion sensor available"
water	46:22	0:0	6	"No motion sensor available"
water	46:52	0:0	4	;
call	47:8	47:21	4	free
arg	47:14	47:21	5	motion
water	47:14	0:0	6	motion
water	47:22	0:0	4	;
return	48:8	48:19	4	NULL
water	48:15	0:0	5	NULL
water	49:4	0:0	4	}
call	50:4	50:56	2	memset
arg	50:12	50:26	3	motion->p_oldx
water	50:12	0:0	4	motion
op	50:18	0:0	4	->
water	50:20	0:0	4	p_oldx
arg	50:28	50:29	3	0
water	50:28	0:0	4	0
arg	50:31	50:56	3	sizeof(motion->p_oldx)
op	50:31	0:0	4	sizeof
water	50:37	0:0	4	(
water	50:39	0:0	4	motion
op	50:45	0:0	4	->
water	50:47	0:0	4	p_oldx
water	50:54	0:0	4	)
water	50:57	0:0	2	;
water	51:4	0:0	2	motion
op	51:10	0:0	2	->
water	51:12	0:0	2	i
op	51:14	0:0	2	=
water	51:16	0:0	2	0
water	51:17	0:0	2	;
water	52:4	0:0	2	motion
op	52:10	0:0	2	->
water	52:12	0:0	2	i_sum
op	52:18	0:0	2	=
water	52:20	0:0	2	0
water	52:21	0:0	2	;
return	53:4	53:17	2	motion
water	53:11	0:0	3	motion

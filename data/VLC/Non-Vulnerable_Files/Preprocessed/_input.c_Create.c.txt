func	2:0	161:0	0	static input_thread_t *	Create
params	2:29	0:0	1	
param	2:31	2:53	2	vlc_object_t *	p_parent
param	2:55	2:75	2	input_item_t *	p_item
param	3:31	3:53	2	const char *	psz_header
param	3:55	3:67	2	bool	b_quick
param	4:31	4:60	2	input_resource_t *	p_resource
stmnts	0:0	160:18	1	
decl	6:4	6:34	2	input_thread_t	*p_input
op	6:28	0:0	2	=
water	6:30	0:0	2	NULL
decl	7:4	7:9	2	int	i
water	9:4	0:0	2	p_input
op	9:12	0:0	2	=
call	9:14	9:71	2	vlc_custom_create
arg	9:33	9:41	3	p_parent
water	9:33	0:0	4	p_parent
arg	9:43	9:61	3	sizeof(*p_input)
op	9:43	0:0	4	sizeof
water	9:49	0:0	4	(
op	9:51	0:0	4	*
water	9:52	0:0	4	p_input
water	9:60	0:0	4	)
arg	9:63	9:71	3	"input"
water	9:63	0:0	4	"input"
water	9:72	0:0	2	;
if	10:4	11:19	2	(p_input == NULL)
cond	10:8	10:19	3	p_input == NULL
water	10:8	0:0	4	p_input
op	10:16	0:0	4	==
water	10:19	0:0	4	NULL
stmts	11:8	11:19	3	
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
decl	13:4	13:28	2	char	psz_timer_name[255]
decl	14:4	14:50	2	char	*psz_name
op	14:20	0:0	2	=
call	14:22	14:49	3	input_item_GetName
arg	14:42	14:49	4	p_item
water	14:42	0:0	5	p_item
call	15:4	16:51	2	snprintf
arg	15:14	15:28	3	psz_timer_name
water	15:14	0:0	4	psz_timer_name
arg	15:30	15:52	3	sizeof(psz_timer_name)
op	15:30	0:0	4	sizeof
water	15:36	0:0	4	(
water	15:37	0:0	4	psz_timer_name
water	15:51	0:0	4	)
arg	16:14	16:40	3	"input launching for '%s'"
water	16:14	0:0	4	"input launching for '%s'"
arg	16:42	16:51	3	psz_name
water	16:42	0:0	4	psz_name
water	16:52	0:0	2	;
call	17:4	17:60	2	msg_Dbg
arg	17:13	17:20	3	p_input
water	17:13	0:0	4	p_input
arg	17:22	17:50	3	"Creating an input for '%s'"
water	17:22	0:0	4	"Creating an input for '%s'"
arg	17:52	17:60	3	psz_name
water	17:52	0:0	4	psz_name
water	17:61	0:0	2	;
call	18:4	18:19	2	free
arg	18:10	18:19	3	psz_name
water	18:10	0:0	4	psz_name
water	18:20	0:0	2	;
water	19:4	0:0	2	p_input
op	19:11	0:0	2	->
water	19:13	0:0	2	p
op	19:15	0:0	2	=
call	19:17	19:61	2	calloc
arg	19:25	19:26	3	1
water	19:25	0:0	4	1
arg	19:28	19:61	3	sizeof(input_thread_private_t)
op	19:28	0:0	4	sizeof
water	19:34	0:0	4	(
water	19:36	0:0	4	input_thread_private_t
water	19:59	0:0	4	)
water	19:62	0:0	2	;
if	20:4	24:4	2	(! p_input -> p)
cond	20:8	20:18	3	! p_input -> p
op	20:8	0:0	4	!
water	20:9	0:0	4	p_input
op	20:16	0:0	4	->
water	20:18	0:0	4	p
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
call	22:8	22:36	4	vlc_object_release
arg	22:28	22:36	5	p_input
water	22:28	0:0	6	p_input
water	22:37	0:0	4	;
return	23:8	23:19	4	NULL
water	23:15	0:0	5	NULL
water	24:4	0:0	4	}
call	26:4	26:34	2	vlc_mutex_lock
arg	26:20	26:34	3	&p_item->lock
op	26:20	0:0	4	&
water	26:21	0:0	4	p_item
op	26:27	0:0	4	->
water	26:29	0:0	4	lock
water	26:35	0:0	2	;
call	27:4	27:55	2	assert
arg	27:12	27:55	3	(int)p_item->optflagc==p_item->i_options
water	27:12	0:0	4	(
water	27:13	0:0	4	int
water	27:16	0:0	4	)
water	27:17	0:0	4	p_item
op	27:23	0:0	4	->
water	27:25	0:0	4	optflagc
op	27:34	0:0	4	==
water	27:37	0:0	4	p_item
op	27:43	0:0	4	->
water	27:45	0:0	4	i_options
water	27:56	0:0	2	;
for	28:4	30:77	2	(i = 0 ;i < p_item -> i_options;i ++)
forinit	28:9	28:14	3	i = 0 ;
water	28:9	0:0	4	i
op	28:11	0:0	4	=
water	28:13	0:0	4	0
water	28:14	0:0	4	;
cond	28:16	28:28	3	i < p_item -> i_options
water	28:16	0:0	4	i
op	28:18	0:0	4	<
water	28:20	0:0	4	p_item
op	28:26	0:0	4	->
water	28:28	0:0	4	i_options
forexpr	28:39	28:40	3	i ++
water	28:39	0:0	4	i
op	28:40	0:0	4	++
stmts	29:8	30:77	3	
call	29:8	30:76	4	var_OptionParse
arg	29:25	29:44	5	VLC_OBJECT(p_input)
call	29:25	29:43	6	VLC_OBJECT
arg	29:36	29:43	7	p_input
water	29:36	0:0	8	p_input
arg	29:46	29:69	5	p_item->ppsz_options[i]
water	29:46	0:0	6	p_item
op	29:52	0:0	6	->
water	29:54	0:0	6	ppsz_options
op	29:66	0:0	6	[
water	29:67	0:0	6	i
op	29:68	0:0	6	]
arg	30:25	30:76	5	!!(p_item->optflagv[i]&VLC_INPUT_OPTION_TRUSTED)
op	30:25	0:0	6	!
op	30:26	0:0	6	!
water	30:27	0:0	6	(
water	30:28	0:0	6	p_item
op	30:34	0:0	6	->
water	30:36	0:0	6	optflagv
op	30:44	0:0	6	[
water	30:45	0:0	6	i
op	30:46	0:0	6	]
op	30:48	0:0	6	&
water	30:50	0:0	6	VLC_INPUT_OPTION_TRUSTED
water	30:74	0:0	6	)
water	30:77	0:0	4	;
call	31:4	31:36	2	vlc_mutex_unlock
arg	31:22	31:36	3	&p_item->lock
op	31:22	0:0	4	&
water	31:23	0:0	4	p_item
op	31:29	0:0	4	->
water	31:31	0:0	4	lock
water	31:37	0:0	2	;
water	32:4	0:0	2	p_input
op	32:11	0:0	2	->
water	32:13	0:0	2	b_preparsing
op	32:26	0:0	2	=
water	32:28	0:0	2	b_quick
water	32:35	0:0	2	;
water	33:4	0:0	2	p_input
op	33:11	0:0	2	->
water	33:13	0:0	2	psz_header
op	33:24	0:0	2	=
water	33:26	0:0	2	psz_header
water	33:37	0:0	2	?
call	33:39	33:58	2	strdup
arg	33:47	33:58	3	psz_header
water	33:47	0:0	4	psz_header
water	33:60	0:0	2	:
water	33:62	0:0	2	NULL
water	33:66	0:0	2	;
water	35:4	0:0	2	p_input
op	35:11	0:0	2	->
water	35:13	0:0	2	b_eof
op	35:19	0:0	2	=
water	35:21	0:0	2	false
water	35:26	0:0	2	;
water	36:4	0:0	2	p_input
op	36:11	0:0	2	->
water	36:13	0:0	2	p
op	36:14	0:0	2	->
water	36:16	0:0	2	b_can_pace_control
op	36:35	0:0	2	=
water	36:37	0:0	2	true
water	36:41	0:0	2	;
water	37:4	0:0	2	p_input
op	37:11	0:0	2	->
water	37:13	0:0	2	p
op	37:14	0:0	2	->
water	37:16	0:0	2	i_start
op	37:24	0:0	2	=
water	37:26	0:0	2	0
water	37:27	0:0	2	;
water	38:4	0:0	2	p_input
op	38:11	0:0	2	->
water	38:13	0:0	2	p
op	38:14	0:0	2	->
water	38:16	0:0	2	i_time
op	38:24	0:0	2	=
water	38:26	0:0	2	0
water	38:27	0:0	2	;
water	39:4	0:0	2	p_input
op	39:11	0:0	2	->
water	39:13	0:0	2	p
op	39:14	0:0	2	->
water	39:16	0:0	2	i_stop
op	39:24	0:0	2	=
water	39:26	0:0	2	0
water	39:27	0:0	2	;
water	40:4	0:0	2	p_input
op	40:11	0:0	2	->
water	40:13	0:0	2	p
op	40:14	0:0	2	->
water	40:16	0:0	2	i_run
op	40:24	0:0	2	=
water	40:26	0:0	2	0
water	40:27	0:0	2	;
water	41:4	0:0	2	p_input
op	41:11	0:0	2	->
water	41:13	0:0	2	p
op	41:14	0:0	2	->
water	41:16	0:0	2	i_title
op	41:24	0:0	2	=
water	41:26	0:0	2	0
water	41:27	0:0	2	;
water	42:4	0:0	2	p_input
op	42:11	0:0	2	->
water	42:13	0:0	2	p
op	42:14	0:0	2	->
water	42:16	0:0	2	title
op	42:22	0:0	2	=
water	42:24	0:0	2	NULL
water	42:28	0:0	2	;
water	43:4	0:0	2	p_input
op	43:11	0:0	2	->
water	43:13	0:0	2	p
op	43:14	0:0	2	->
water	43:16	0:0	2	i_title_offset
op	43:31	0:0	2	=
water	43:33	0:0	2	p_input
op	43:40	0:0	2	->
water	43:42	0:0	2	p
op	43:43	0:0	2	->
water	43:45	0:0	2	i_seekpoint_offset
op	43:64	0:0	2	=
water	43:66	0:0	2	0
water	43:67	0:0	2	;
water	44:4	0:0	2	p_input
op	44:11	0:0	2	->
water	44:13	0:0	2	p
op	44:14	0:0	2	->
water	44:16	0:0	2	i_state
op	44:24	0:0	2	=
water	44:26	0:0	2	INIT_S
water	44:32	0:0	2	;
water	45:4	0:0	2	p_input
op	45:11	0:0	2	->
water	45:13	0:0	2	p
op	45:14	0:0	2	->
water	45:16	0:0	2	i_rate
op	45:23	0:0	2	=
water	45:25	0:0	2	INPUT_RATE_DEFAULT
water	45:43	0:0	2	;
water	46:4	0:0	2	p_input
op	46:11	0:0	2	->
water	46:13	0:0	2	p
op	46:14	0:0	2	->
water	46:16	0:0	2	b_recording
op	46:28	0:0	2	=
water	46:30	0:0	2	false
water	46:35	0:0	2	;
call	47:4	47:67	2	memset
arg	47:12	47:33	3	&p_input->p->bookmark
op	47:12	0:0	4	&
water	47:13	0:0	4	p_input
op	47:20	0:0	4	->
water	47:22	0:0	4	p
op	47:23	0:0	4	->
water	47:25	0:0	4	bookmark
arg	47:35	47:36	3	0
water	47:35	0:0	4	0
arg	47:38	47:67	3	sizeof(p_input->p->bookmark)
op	47:38	0:0	4	sizeof
water	47:44	0:0	4	(
water	47:45	0:0	4	p_input
op	47:52	0:0	4	->
water	47:54	0:0	4	p
op	47:55	0:0	4	->
water	47:57	0:0	4	bookmark
water	47:65	0:0	4	)
water	47:68	0:0	2	;
call	48:4	48:62	2	TAB_INIT
arg	48:14	48:36	3	p_input->p->i_bookmark
water	48:14	0:0	4	p_input
op	48:21	0:0	4	->
water	48:23	0:0	4	p
op	48:24	0:0	4	->
water	48:26	0:0	4	i_bookmark
arg	48:38	48:62	3	p_input->p->pp_bookmark
water	48:38	0:0	4	p_input
op	48:45	0:0	4	->
water	48:47	0:0	4	p
op	48:48	0:0	4	->
water	48:50	0:0	4	pp_bookmark
water	48:63	0:0	2	;
call	49:4	49:63	2	TAB_INIT
arg	49:14	49:38	3	p_input->p->i_attachment
water	49:14	0:0	4	p_input
op	49:21	0:0	4	->
water	49:23	0:0	4	p
op	49:24	0:0	4	->
water	49:26	0:0	4	i_attachment
arg	49:40	49:63	3	p_input->p->attachment
water	49:40	0:0	4	p_input
op	49:47	0:0	4	->
water	49:49	0:0	4	p
op	49:50	0:0	4	->
water	49:52	0:0	4	attachment
water	49:64	0:0	2	;
water	50:4	0:0	2	p_input
op	50:11	0:0	2	->
water	50:13	0:0	2	p
op	50:14	0:0	2	->
water	50:16	0:0	2	attachment_demux
op	50:33	0:0	2	=
water	50:35	0:0	2	NULL
water	50:39	0:0	2	;
water	51:4	0:0	2	p_input
op	51:11	0:0	2	->
water	51:13	0:0	2	p
op	51:14	0:0	2	->
water	51:16	0:0	2	p_sout
op	51:25	0:0	2	=
water	51:27	0:0	2	NULL
water	51:31	0:0	2	;
water	52:4	0:0	2	p_input
op	52:11	0:0	2	->
water	52:13	0:0	2	p
op	52:14	0:0	2	->
water	52:16	0:0	2	b_out_pace_control
op	52:35	0:0	2	=
water	52:37	0:0	2	false
water	52:42	0:0	2	;
call	53:4	53:26	2	vlc_gc_incref
arg	53:19	53:26	3	p_item
water	53:19	0:0	4	p_item
water	53:27	0:0	2	;
water	54:4	0:0	2	p_input
op	54:11	0:0	2	->
water	54:13	0:0	2	p
op	54:14	0:0	2	->
water	54:16	0:0	2	p_item
op	54:23	0:0	2	=
water	54:25	0:0	2	p_item
water	54:31	0:0	2	;
water	56:4	0:0	2	p_input
op	56:11	0:0	2	->
water	56:13	0:0	2	p
op	56:14	0:0	2	->
water	56:16	0:0	2	input
op	56:21	0:0	2	.
water	56:22	0:0	2	p_demux
op	56:31	0:0	2	=
water	56:33	0:0	2	NULL
water	56:37	0:0	2	;
water	57:4	0:0	2	p_input
op	57:11	0:0	2	->
water	57:13	0:0	2	p
op	57:14	0:0	2	->
water	57:16	0:0	2	input
op	57:21	0:0	2	.
water	57:22	0:0	2	b_title_demux
op	57:36	0:0	2	=
water	57:38	0:0	2	false
water	57:43	0:0	2	;
water	58:4	0:0	2	p_input
op	58:11	0:0	2	->
water	58:13	0:0	2	p
op	58:14	0:0	2	->
water	58:16	0:0	2	input
op	58:21	0:0	2	.
water	58:22	0:0	2	i_title
op	58:31	0:0	2	=
water	58:33	0:0	2	0
water	58:34	0:0	2	;
water	59:4	0:0	2	p_input
op	59:11	0:0	2	->
water	59:13	0:0	2	p
op	59:14	0:0	2	->
water	59:16	0:0	2	input
op	59:21	0:0	2	.
water	59:22	0:0	2	title
op	59:31	0:0	2	=
water	59:33	0:0	2	NULL
water	59:37	0:0	2	;
water	60:4	0:0	2	p_input
op	60:11	0:0	2	->
water	60:13	0:0	2	p
op	60:14	0:0	2	->
water	60:16	0:0	2	input
op	60:21	0:0	2	.
water	60:22	0:0	2	i_title_offset
op	60:37	0:0	2	=
water	60:39	0:0	2	p_input
op	60:46	0:0	2	->
water	60:48	0:0	2	p
op	60:49	0:0	2	->
water	60:51	0:0	2	input
op	60:56	0:0	2	.
water	60:57	0:0	2	i_seekpoint_offset
op	60:76	0:0	2	=
water	60:78	0:0	2	0
water	60:79	0:0	2	;
water	61:4	0:0	2	p_input
op	61:11	0:0	2	->
water	61:13	0:0	2	p
op	61:14	0:0	2	->
water	61:16	0:0	2	input
op	61:21	0:0	2	.
water	61:22	0:0	2	b_can_pace_control
op	61:41	0:0	2	=
water	61:43	0:0	2	true
water	61:47	0:0	2	;
water	62:4	0:0	2	p_input
op	62:11	0:0	2	->
water	62:13	0:0	2	p
op	62:14	0:0	2	->
water	62:16	0:0	2	input
op	62:21	0:0	2	.
water	62:22	0:0	2	b_can_rate_control
op	62:41	0:0	2	=
water	62:43	0:0	2	true
water	62:47	0:0	2	;
water	63:4	0:0	2	p_input
op	63:11	0:0	2	->
water	63:13	0:0	2	p
op	63:14	0:0	2	->
water	63:16	0:0	2	input
op	63:21	0:0	2	.
water	63:22	0:0	2	b_rescale_ts
op	63:35	0:0	2	=
water	63:37	0:0	2	true
water	63:41	0:0	2	;
water	64:4	0:0	2	p_input
op	64:11	0:0	2	->
water	64:13	0:0	2	p
op	64:14	0:0	2	->
water	64:16	0:0	2	input
op	64:21	0:0	2	.
water	64:22	0:0	2	b_eof
op	64:28	0:0	2	=
water	64:30	0:0	2	false
water	64:35	0:0	2	;
call	65:4	65:34	2	vlc_mutex_lock
arg	65:20	65:34	3	&p_item->lock
op	65:20	0:0	4	&
water	65:21	0:0	4	p_item
op	65:27	0:0	4	->
water	65:29	0:0	4	lock
water	65:35	0:0	2	;
if	66:4	67:56	2	(! p_item -> p_stats)
cond	66:8	66:17	3	! p_item -> p_stats
op	66:8	0:0	4	!
water	66:9	0:0	4	p_item
op	66:15	0:0	4	->
water	66:17	0:0	4	p_stats
stmts	67:8	67:56	3	
water	67:8	0:0	4	p_item
op	67:14	0:0	4	->
water	67:16	0:0	4	p_stats
op	67:24	0:0	4	=
call	67:26	67:55	4	stats_NewInputStats
arg	67:47	67:55	5	p_input
water	67:47	0:0	6	p_input
water	67:56	0:0	4	;
call	68:4	68:36	2	vlc_mutex_unlock
arg	68:22	68:36	3	&p_item->lock
op	68:22	0:0	4	&
water	68:23	0:0	4	p_item
op	68:29	0:0	4	->
water	68:31	0:0	4	lock
water	68:37	0:0	2	;
water	70:4	0:0	2	p_input
op	70:11	0:0	2	->
water	70:13	0:0	2	p
op	70:14	0:0	2	->
water	70:16	0:0	2	i_slave
op	70:24	0:0	2	=
water	70:26	0:0	2	0
water	70:27	0:0	2	;
water	71:4	0:0	2	p_input
op	71:11	0:0	2	->
water	71:13	0:0	2	p
op	71:14	0:0	2	->
water	71:16	0:0	2	slave
op	71:24	0:0	2	=
water	71:26	0:0	2	NULL
water	71:30	0:0	2	;
if	73:4	77:4	2	(p_resource)
cond	73:8	73:8	3	p_resource
water	73:8	0:0	4	p_resource
stmts	74:4	77:4	3	
water	74:4	0:0	4	{
water	75:8	0:0	4	p_input
op	75:15	0:0	4	->
water	75:17	0:0	4	p
op	75:18	0:0	4	->
water	75:20	0:0	4	p_resource_private
op	75:39	0:0	4	=
water	75:41	0:0	4	NULL
water	75:45	0:0	4	;
water	76:8	0:0	4	p_input
op	76:15	0:0	4	->
water	76:17	0:0	4	p
op	76:18	0:0	4	->
water	76:20	0:0	4	p_resource
op	76:31	0:0	4	=
call	76:33	76:65	4	input_resource_Hold
arg	76:54	76:65	5	p_resource
water	76:54	0:0	6	p_resource
water	76:66	0:0	4	;
water	77:4	0:0	4	}
else	78:4	82:4	2
stmts	79:4	82:4	3	
water	79:4	0:0	4	{
water	80:8	0:0	4	p_input
op	80:15	0:0	4	->
water	80:17	0:0	4	p
op	80:18	0:0	4	->
water	80:20	0:0	4	p_resource_private
op	80:39	0:0	4	=
call	80:41	80:83	4	input_resource_New
arg	80:61	80:83	5	VLC_OBJECT(p_input)
call	80:61	80:81	6	VLC_OBJECT
arg	80:73	80:81	7	p_input
water	80:73	0:0	8	p_input
water	80:84	0:0	4	;
water	81:8	0:0	4	p_input
op	81:15	0:0	4	->
water	81:17	0:0	4	p
op	81:18	0:0	4	->
water	81:20	0:0	4	p_resource
op	81:31	0:0	4	=
call	81:33	81:85	4	input_resource_Hold
arg	81:54	81:85	5	p_input->p->p_resource_private
water	81:54	0:0	6	p_input
op	81:61	0:0	6	->
water	81:63	0:0	6	p
op	81:64	0:0	6	->
water	81:66	0:0	6	p_resource_private
water	81:86	0:0	4	;
water	82:4	0:0	4	}
call	83:4	83:61	2	input_resource_SetInput
arg	83:29	83:51	3	p_input->p->p_resource
water	83:29	0:0	4	p_input
op	83:36	0:0	4	->
water	83:38	0:0	4	p
op	83:39	0:0	4	->
water	83:41	0:0	4	p_resource
arg	83:53	83:61	3	p_input
water	83:53	0:0	4	p_input
water	83:62	0:0	2	;
call	85:4	85:46	2	vlc_mutex_init
arg	85:20	85:46	3	&p_input->p->lock_control
op	85:20	0:0	4	&
water	85:21	0:0	4	p_input
op	85:28	0:0	4	->
water	85:30	0:0	4	p
op	85:31	0:0	4	->
water	85:33	0:0	4	lock_control
water	85:47	0:0	2	;
call	86:4	86:45	2	vlc_cond_init
arg	86:19	86:45	3	&p_input->p->wait_control
op	86:19	0:0	4	&
water	86:20	0:0	4	p_input
op	86:27	0:0	4	->
water	86:29	0:0	4	p
op	86:30	0:0	4	->
water	86:32	0:0	4	wait_control
water	86:46	0:0	2	;
water	87:4	0:0	2	p_input
op	87:11	0:0	2	->
water	87:13	0:0	2	p
op	87:14	0:0	2	->
water	87:16	0:0	2	i_control
op	87:26	0:0	2	=
water	87:28	0:0	2	0
water	87:29	0:0	2	;
water	88:4	0:0	2	p_input
op	88:11	0:0	2	->
water	88:13	0:0	2	p
op	88:14	0:0	2	->
water	88:16	0:0	2	b_abort
op	88:24	0:0	2	=
water	88:26	0:0	2	false
water	88:31	0:0	2	;
water	89:4	0:0	2	p_input
op	89:11	0:0	2	->
water	89:13	0:0	2	p
op	89:14	0:0	2	->
water	89:16	0:0	2	is_running
op	89:27	0:0	2	=
water	89:29	0:0	2	false
water	89:34	0:0	2	;
call	91:4	91:33	2	input_ConfigVarInit
arg	91:25	91:33	3	p_input
water	91:25	0:0	4	p_input
water	91:34	0:0	2	;
call	93:4	93:34	2	input_ControlVarInit
arg	93:26	93:34	3	p_input
water	93:26	0:0	4	p_input
water	93:35	0:0	2	;
if	95:4	142:4	2	(! p_input -> b_preparsing)
cond	95:8	95:18	3	! p_input -> b_preparsing
op	95:8	0:0	4	!
water	95:9	0:0	4	p_input
op	95:16	0:0	4	->
water	95:18	0:0	4	b_preparsing
stmts	96:4	142:4	3	
water	96:4	0:0	4	{
decl	97:8	97:75	4	char	*psz_bookmarks
op	97:28	0:0	4	=
call	97:30	97:74	5	var_GetNonEmptyString
arg	97:53	97:60	6	p_input
water	97:53	0:0	7	p_input
arg	97:62	97:74	6	"bookmarks"
water	97:62	0:0	7	"bookmarks"
if	98:8	141:8	4	(psz_bookmarks)
cond	98:12	98:12	5	psz_bookmarks
water	98:12	0:0	6	psz_bookmarks
stmts	99:8	141:8	5	
water	99:8	0:0	6	{
decl	101:12	101:50	6	char	*psz_parser
water	101:28	0:0	6	,
decl	101:12	101:50	6	char	*psz_start
water	101:40	0:0	6	,
decl	101:12	101:50	6	char	*psz_end
water	102:12	0:0	6	psz_parser
op	102:23	0:0	6	=
water	102:25	0:0	6	psz_bookmarks
water	102:38	0:0	6	;
while	103:12	139:12	6	(( psz_start =strchr (psz_parser ,'{' ) ))
cond	103:19	103:58	7	( psz_start =strchr (psz_parser ,'{' ) )
water	103:19	0:0	8	(
water	103:20	0:0	8	psz_start
op	103:30	0:0	8	=
call	103:32	103:56	8	strchr
arg	103:40	103:50	9	psz_parser
water	103:40	0:0	10	psz_parser
arg	103:52	103:56	9	'{'
water	103:52	0:0	10	'{'
water	103:58	0:0	8	)
stmts	104:12	139:12	7	
water	104:12	0:0	8	{
decl	105:17	105:41	8	seekpoint_t	*p_seekpoint
decl	106:17	106:28	8	char	backup
water	107:17	0:0	8	psz_start
op	107:26	0:0	8	++
water	107:28	0:0	8	;
water	108:17	0:0	8	psz_end
op	108:25	0:0	8	=
call	108:27	108:50	8	strchr
arg	108:35	108:44	9	psz_start
water	108:35	0:0	10	psz_start
arg	108:46	108:50	9	'}'
water	108:46	0:0	10	'}'
water	108:51	0:0	8	;
if	109:17	109:37	8	(! psz_end)
cond	109:21	109:22	9	! psz_end
op	109:21	0:0	10	!
water	109:22	0:0	10	psz_end
stmts	109:32	109:37	9	
break	109:32	109:37	10	
water	110:17	0:0	8	psz_parser
op	110:28	0:0	8	=
water	110:30	0:0	8	psz_end
op	110:38	0:0	8	+
water	110:40	0:0	8	1
water	110:41	0:0	8	;
water	111:17	0:0	8	backup
op	111:24	0:0	8	=
op	111:26	0:0	8	*
water	111:27	0:0	8	psz_parser
water	111:37	0:0	8	;
op	112:17	0:0	8	*
water	112:18	0:0	8	psz_parser
op	112:29	0:0	8	=
water	112:31	0:0	8	0
water	112:32	0:0	8	;
op	113:17	0:0	8	*
water	113:18	0:0	8	psz_end
op	113:26	0:0	8	=
water	113:28	0:0	8	','
water	113:31	0:0	8	;
water	114:17	0:0	8	p_seekpoint
op	114:29	0:0	8	=
call	114:31	114:49	8	vlc_seekpoint_New
water	114:50	0:0	8	;
while	115:17	132:16	8	(( psz_end =strchr (psz_start ,',' ) ))
cond	115:24	115:60	9	( psz_end =strchr (psz_start ,',' ) )
water	115:24	0:0	10	(
water	115:25	0:0	10	psz_end
op	115:33	0:0	10	=
call	115:35	115:58	10	strchr
arg	115:43	115:52	11	psz_start
water	115:43	0:0	12	psz_start
arg	115:54	115:58	11	','
water	115:54	0:0	12	','
water	115:60	0:0	10	)
stmts	116:17	132:16	9	
water	116:17	0:0	10	{
op	117:21	0:0	10	*
water	117:22	0:0	10	psz_end
op	117:30	0:0	10	=
water	117:32	0:0	10	0
water	117:33	0:0	10	;
if	118:21	121:21	10	(!strncmp (psz_start ,"name=" ,5 ))
cond	118:25	118:57	11	!strncmp (psz_start ,"name=" ,5 )
op	118:25	0:0	12	!
call	118:26	118:57	12	strncmp
arg	118:35	118:44	13	psz_start
water	118:35	0:0	14	psz_start
arg	118:46	118:53	13	"name="
water	118:46	0:0	14	"name="
arg	118:55	118:57	13	5
water	118:55	0:0	14	5
stmts	119:21	121:21	11	
water	119:21	0:0	12	{
water	120:25	0:0	12	p_seekpoint
op	120:36	0:0	12	->
water	120:38	0:0	12	psz_name
op	120:47	0:0	12	=
call	120:49	120:69	12	strdup
arg	120:56	120:69	13	psz_start+5
water	120:56	0:0	14	psz_start
op	120:66	0:0	14	+
water	120:68	0:0	14	5
water	120:70	0:0	12	;
water	121:21	0:0	12	}
else	122:21	125:21	10
stmts	122:26	125:21	11	
if	122:26	125:21	12	(!strncmp (psz_start ,"bytes=" ,6 ))
cond	122:30	122:63	13	!strncmp (psz_start ,"bytes=" ,6 )
op	122:30	0:0	14	!
call	122:31	122:63	14	strncmp
arg	122:40	122:49	15	psz_start
water	122:40	0:0	16	psz_start
arg	122:51	122:59	15	"bytes="
water	122:51	0:0	16	"bytes="
arg	122:61	122:63	15	6
water	122:61	0:0	16	6
stmts	123:21	125:21	13	
water	123:21	0:0	14	{
water	124:25	0:0	14	p_seekpoint
op	124:36	0:0	14	->
water	124:38	0:0	14	i_byte_offset
op	124:52	0:0	14	=
call	124:54	124:73	14	atoll
arg	124:60	124:73	15	psz_start+6
water	124:60	0:0	16	psz_start
op	124:70	0:0	16	+
water	124:72	0:0	16	6
water	124:74	0:0	14	;
water	125:21	0:0	14	}
else	126:21	130:21	10
stmts	126:26	130:21	11	
if	126:26	130:21	12	(!strncmp (psz_start ,"time=" ,5 ))
cond	126:30	126:62	13	!strncmp (psz_start ,"time=" ,5 )
op	126:30	0:0	14	!
call	126:31	126:62	14	strncmp
arg	126:40	126:49	15	psz_start
water	126:40	0:0	16	psz_start
arg	126:51	126:58	15	"time="
water	126:51	0:0	16	"time="
arg	126:60	126:62	15	5
water	126:60	0:0	16	5
stmts	127:21	130:21	13	
water	127:21	0:0	14	{
water	128:25	0:0	14	p_seekpoint
op	128:36	0:0	14	->
water	128:38	0:0	14	i_time_offset
op	128:52	0:0	14	=
call	128:54	128:73	14	atoll
arg	128:60	128:73	15	psz_start+5
water	128:60	0:0	16	psz_start
op	128:70	0:0	16	+
water	128:72	0:0	16	5
op	128:75	0:0	14	*
water	129:56	0:0	14	1000000
water	129:63	0:0	14	;
water	130:21	0:0	14	}
water	131:21	0:0	10	psz_start
op	131:31	0:0	10	=
water	131:33	0:0	10	psz_end
op	131:41	0:0	10	+
water	131:43	0:0	10	1
water	131:44	0:0	10	;
water	132:16	0:0	10	}
call	133:16	135:61	8	msg_Dbg
arg	133:25	133:32	9	p_input
water	133:25	0:0	10	p_input
arg	133:34	133:86	9	"adding bookmark: %s, bytes=%"PRId64", time=%"PRId64
water	133:34	0:0	10	"adding bookmark: %s, bytes=%"
water	133:64	0:0	10	PRId64
water	133:70	0:0	10	", time=%"
water	133:80	0:0	10	PRId64
arg	134:34	134:55	9	p_seekpoint->psz_name
water	134:34	0:0	10	p_seekpoint
op	134:45	0:0	10	->
water	134:47	0:0	10	psz_name
arg	134:57	134:83	9	p_seekpoint->i_byte_offset
water	134:57	0:0	10	p_seekpoint
op	134:68	0:0	10	->
water	134:70	0:0	10	i_byte_offset
arg	135:34	135:61	9	p_seekpoint->i_time_offset
water	135:34	0:0	10	p_seekpoint
op	135:45	0:0	10	->
water	135:47	0:0	10	i_time_offset
water	135:62	0:0	8	;
call	136:16	136:72	8	input_Control
arg	136:31	136:38	9	p_input
water	136:31	0:0	10	p_input
arg	136:40	136:58	9	INPUT_ADD_BOOKMARK
water	136:40	0:0	10	INPUT_ADD_BOOKMARK
arg	136:60	136:72	9	p_seekpoint
water	136:60	0:0	10	p_seekpoint
water	136:73	0:0	8	;
call	137:16	137:50	8	vlc_seekpoint_Delete
arg	137:38	137:50	9	p_seekpoint
water	137:38	0:0	10	p_seekpoint
water	137:51	0:0	8	;
op	138:16	0:0	8	*
water	138:17	0:0	8	psz_parser
op	138:28	0:0	8	=
water	138:30	0:0	8	backup
water	138:36	0:0	8	;
water	139:12	0:0	8	}
call	140:12	140:32	6	free
arg	140:18	140:32	7	psz_bookmarks
water	140:18	0:0	8	psz_bookmarks
water	140:33	0:0	6	;
water	141:8	0:0	6	}
water	142:4	0:0	4	}
call	144:4	144:43	2	input_item_SetNowPlaying
arg	144:30	144:36	3	p_item
water	144:30	0:0	4	p_item
arg	144:38	144:43	3	NULL
water	144:38	0:0	4	NULL
water	144:44	0:0	2	;
call	145:4	145:45	2	input_item_SetESNowPlaying
arg	145:32	145:38	3	p_item
water	145:32	0:0	4	p_item
arg	145:40	145:45	3	NULL
water	145:40	0:0	4	NULL
water	145:46	0:0	2	;
call	146:4	146:33	2	input_SendEventMeta
arg	146:25	146:33	3	p_input
water	146:25	0:0	4	p_input
water	146:34	0:0	2	;
if	148:4	149:72	2	(p_input -> b_preparsing)
cond	148:8	148:17	3	p_input -> b_preparsing
water	148:8	0:0	4	p_input
op	148:15	0:0	4	->
water	148:17	0:0	4	b_preparsing
stmts	149:8	149:72	3	
water	149:8	0:0	4	p_input
op	149:15	0:0	4	->
water	149:17	0:0	4	i_flags
op	149:25	0:0	4	|=
water	149:28	0:0	4	OBJECT_FLAGS_QUIET
op	149:47	0:0	4	|
water	149:49	0:0	4	OBJECT_FLAGS_NOINTERACT
water	149:72	0:0	4	;
if	151:4	152:51	2	(!var_InheritBool (p_input ,"interact" ))
cond	151:8	151:46	3	!var_InheritBool (p_input ,"interact" )
op	151:8	0:0	4	!
call	151:9	151:46	4	var_InheritBool
arg	151:26	151:33	5	p_input
water	151:26	0:0	6	p_input
arg	151:35	151:46	5	"interact"
water	151:35	0:0	6	"interact"
stmts	152:8	152:51	3	
water	152:8	0:0	4	p_input
op	152:15	0:0	4	->
water	152:17	0:0	4	i_flags
op	152:25	0:0	4	|=
water	152:28	0:0	4	OBJECT_FLAGS_NOINTERACT
water	152:51	0:0	4	;
call	154:4	154:69	2	memset
arg	154:12	154:33	3	&p_input->p->counters
op	154:12	0:0	4	&
water	154:13	0:0	4	p_input
op	154:20	0:0	4	->
water	154:22	0:0	4	p
op	154:23	0:0	4	->
water	154:25	0:0	4	counters
arg	154:35	154:36	3	0
water	154:35	0:0	4	0
arg	154:38	154:69	3	sizeof(p_input->p->counters)
op	154:38	0:0	4	sizeof
water	154:44	0:0	4	(
water	154:46	0:0	4	p_input
op	154:53	0:0	4	->
water	154:55	0:0	4	p
op	154:56	0:0	4	->
water	154:58	0:0	4	counters
water	154:67	0:0	4	)
water	154:70	0:0	2	;
call	155:4	155:56	2	vlc_mutex_init
arg	155:20	155:56	3	&p_input->p->counters.counters_lock
op	155:20	0:0	4	&
water	155:21	0:0	4	p_input
op	155:28	0:0	4	->
water	155:30	0:0	4	p
op	155:31	0:0	4	->
water	155:33	0:0	4	counters
op	155:41	0:0	4	.
water	155:42	0:0	4	counters_lock
water	155:57	0:0	2	;
water	156:4	0:0	2	p_input
op	156:11	0:0	2	->
water	156:13	0:0	2	p
op	156:14	0:0	2	->
water	156:16	0:0	2	p_es_out_display
op	156:33	0:0	2	=
call	156:35	156:79	2	input_EsOutNew
arg	156:51	156:58	3	p_input
water	156:51	0:0	4	p_input
arg	156:60	156:79	3	p_input->p->i_rate
water	156:60	0:0	4	p_input
op	156:67	0:0	4	->
water	156:69	0:0	4	p
op	156:70	0:0	4	->
water	156:72	0:0	4	i_rate
water	156:80	0:0	2	;
water	157:4	0:0	2	p_input
op	157:11	0:0	2	->
water	157:13	0:0	2	p
op	157:14	0:0	2	->
water	157:16	0:0	2	p_es_out
op	157:25	0:0	2	=
water	157:27	0:0	2	NULL
water	157:31	0:0	2	;
call	159:4	159:69	2	vlc_object_set_destructor
arg	159:31	159:38	3	p_input
water	159:31	0:0	4	p_input
arg	159:40	159:69	3	(vlc_destructor_t)Destructor
water	159:40	0:0	4	(
water	159:41	0:0	4	vlc_destructor_t
water	159:57	0:0	4	)
water	159:58	0:0	4	Destructor
water	159:70	0:0	2	;
return	160:4	160:18	2	p_input
water	160:11	0:0	3	p_input

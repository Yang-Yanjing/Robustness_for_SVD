func	1:0	97:0	0	static int	HandleMessage
params	2:18	0:0	1	
param	2:19	2:35	2	demux_t *	p_demux
param	2:37	2:47	2	mtrk_t *	tr
param	2:49	2:62	2	es_out_t *	out
stmnts	0:0	96:12	1	
decl	4:4	4:28	2	stream_t	*s
op	4:16	0:0	2	=
water	4:18	0:0	2	p_demux
op	4:25	0:0	2	->
water	4:27	0:0	2	s
decl	5:4	5:18	2	block_t	*block
decl	6:4	6:24	2	uint8_t	first
water	6:17	0:0	2	,
decl	6:4	6:24	2	uint8_t	event
water	7:4	0:0	2	unsigned
water	7:13	0:0	2	datalen
water	7:20	0:0	2	;
if	8:4	10:17	2	(stream_Seek (s ,tr -> start + tr -> offset ) || (stream_Read (s ,& first ,1 ) != 1 ))
cond	8:8	9:40	3	stream_Seek (s ,tr -> start + tr -> offset ) || (stream_Read (s ,& first ,1 ) != 1 )
call	8:8	8:46	4	stream_Seek
arg	8:21	8:22	5	s
water	8:21	0:0	6	s
arg	8:24	8:46	5	tr->start+tr->offset
water	8:24	0:0	6	tr
op	8:26	0:0	6	->
water	8:28	0:0	6	start
op	8:34	0:0	6	+
water	8:36	0:0	6	tr
op	8:38	0:0	6	->
water	8:40	0:0	6	offset
op	9:5	0:0	4	||
water	9:8	0:0	4	(
call	9:9	9:34	4	stream_Read
arg	9:22	9:23	5	s
water	9:22	0:0	6	s
arg	9:25	9:31	5	&first
op	9:25	0:0	6	&
water	9:26	0:0	6	first
arg	9:33	9:34	5	1
water	9:33	0:0	6	1
op	9:36	0:0	4	!=
water	9:39	0:0	4	1
water	9:40	0:0	4	)
stmts	10:8	10:17	3	
return	10:8	10:17	4	-1
op	10:15	0:0	5	-
water	10:16	0:0	5	1
water	11:4	0:0	2	event
op	11:10	0:0	2	=
water	11:12	0:0	2	(
water	11:13	0:0	2	first
op	11:19	0:0	2	&
water	11:21	0:0	2	0
water	11:22	0:0	2	x80
water	11:25	0:0	2	)
water	11:27	0:0	2	?
water	11:29	0:0	2	first
water	11:35	0:0	2	:
water	11:37	0:0	2	tr
op	11:39	0:0	2	->
water	11:41	0:0	2	running_event
water	11:54	0:0	2	;
switch	12:4	63:4	2	(event & 0 xf0)
cond	12:12	12:21	3	event & 0 xf0
water	12:12	0:0	4	event
op	12:18	0:0	4	&
water	12:20	0:0	4	0
water	12:21	0:0	4	xf0
stmts	13:4	63:4	3	
water	13:4	0:0	4	{
label	14:8	14:17	4	case 0 xF0 :
switch	15:12	54:12	4	(event)
cond	15:20	15:20	5	event
water	15:20	0:0	6	event
stmts	16:12	54:12	5	
water	16:12	0:0	6	{
label	17:16	17:25	6	case 0 xF0 :
label	18:16	18:25	6	case 0 xF7 :
water	19:16	0:0	6	{
decl	21:20	21:48	6	int32_t	len
op	21:32	0:0	6	=
call	21:34	21:47	7	ReadVarInt
arg	21:46	21:47	8	s
water	21:46	0:0	9	s
if	22:20	23:33	6	(len == - 1)
cond	22:24	22:32	7	len == - 1
water	22:24	0:0	8	len
op	22:28	0:0	8	==
op	22:31	0:0	8	-
water	22:32	0:0	8	1
stmts	23:24	23:33	7	
return	23:24	23:33	8	-1
op	23:31	0:0	9	-
water	23:32	0:0	9	1
water	24:20	0:0	6	block
op	24:26	0:0	6	=
call	24:28	24:48	6	stream_Block
arg	24:42	24:43	7	s
water	24:42	0:0	8	s
arg	24:45	24:48	7	len
water	24:45	0:0	8	len
water	24:49	0:0	6	;
if	25:20	26:33	6	(block == NULL)
cond	25:24	25:33	7	block == NULL
water	25:24	0:0	8	block
op	25:30	0:0	8	==
water	25:33	0:0	8	NULL
stmts	26:24	26:33	7	
return	26:24	26:33	8	-1
op	26:31	0:0	9	-
water	26:32	0:0	9	1
water	27:20	0:0	6	block
op	27:26	0:0	6	=
call	27:28	27:56	6	block_Realloc
arg	27:43	27:48	7	block
water	27:43	0:0	8	block
arg	27:50	27:51	7	1
water	27:50	0:0	8	1
arg	27:53	27:56	7	len
water	27:53	0:0	8	len
water	27:57	0:0	6	;
if	28:20	29:33	6	(block == NULL)
cond	28:24	28:33	7	block == NULL
water	28:24	0:0	8	block
op	28:30	0:0	8	==
water	28:33	0:0	8	NULL
stmts	29:24	29:33	7	
return	29:24	29:33	8	-1
op	29:31	0:0	9	-
water	29:32	0:0	9	1
water	30:20	0:0	6	block
op	30:25	0:0	6	->
water	30:27	0:0	6	p_buffer
op	30:35	0:0	6	[
water	30:36	0:0	6	0
op	30:37	0:0	6	]
op	30:39	0:0	6	=
water	30:41	0:0	6	event
water	30:46	0:0	6	;
goto	31:20	31:29	6	send
water	31:25	0:0	7	send
water	32:16	0:0	6	}
label	33:16	33:25	6	case 0 xFF :
if	34:20	35:33	6	(HandleMeta (p_demux ,tr ))
cond	34:24	34:47	7	HandleMeta (p_demux ,tr )
call	34:24	34:47	8	HandleMeta
arg	34:36	34:43	9	p_demux
water	34:36	0:0	10	p_demux
arg	34:45	34:47	9	tr
water	34:45	0:0	10	tr
stmts	35:24	35:33	7	
return	35:24	35:33	8	-1
op	35:31	0:0	9	-
water	35:32	0:0	9	1
goto	38:20	38:29	6	skip
water	38:25	0:0	7	skip
label	39:16	39:25	6	case 0 xF1 :
label	40:16	40:25	6	case 0 xF3 :
water	41:20	0:0	6	datalen
op	41:28	0:0	6	=
water	41:30	0:0	6	1
water	41:31	0:0	6	;
break	42:20	42:25	6	
label	43:16	43:25	6	case 0 xF2 :
water	44:20	0:0	6	datalen
op	44:28	0:0	6	=
water	44:30	0:0	6	2
water	44:31	0:0	6	;
break	45:20	45:25	6	
label	46:16	46:25	6	case 0 xF4 :
label	47:16	47:25	6	case 0 xF5 :
label	51:16	51:23	6	default :
water	52:20	0:0	6	datalen
op	52:28	0:0	6	=
water	52:30	0:0	6	0
water	52:31	0:0	6	;
break	53:20	53:25	6	
water	54:12	0:0	6	}
break	55:12	55:17	4	
label	56:8	56:17	4	case 0 xC0 :
label	57:8	57:17	4	case 0 xD0 :
water	58:12	0:0	4	datalen
op	58:20	0:0	4	=
water	58:22	0:0	4	1
water	58:23	0:0	4	;
break	59:12	59:17	4	
label	60:8	60:15	4	default :
water	61:12	0:0	4	datalen
op	61:20	0:0	4	=
water	61:22	0:0	4	2
water	61:23	0:0	4	;
break	62:12	62:17	4	
water	63:4	0:0	4	}
water	65:4	0:0	2	block
op	65:10	0:0	2	=
call	65:12	65:36	2	block_Alloc
arg	65:25	65:36	3	1+datalen
water	65:25	0:0	4	1
op	65:27	0:0	4	+
water	65:29	0:0	4	datalen
water	65:37	0:0	2	;
if	66:4	67:17	2	(block == NULL)
cond	66:8	66:17	3	block == NULL
water	66:8	0:0	4	block
op	66:14	0:0	4	==
water	66:17	0:0	4	NULL
stmts	67:8	67:17	3	
goto	67:8	67:17	4	skip
water	67:13	0:0	5	skip
water	68:4	0:0	2	block
op	68:9	0:0	2	->
water	68:11	0:0	2	p_buffer
op	68:19	0:0	2	[
water	68:20	0:0	2	0
op	68:21	0:0	2	]
op	68:23	0:0	2	=
water	68:25	0:0	2	event
water	68:30	0:0	2	;
if	69:4	72:4	2	(first & 0 x80)
cond	69:8	69:17	3	first & 0 x80
water	69:8	0:0	4	first
op	69:14	0:0	4	&
water	69:16	0:0	4	0
water	69:17	0:0	4	x80
stmts	70:4	72:4	3	
water	70:4	0:0	4	{
call	71:8	71:52	4	stream_Read
arg	71:21	71:22	5	s
water	71:21	0:0	6	s
arg	71:24	71:43	5	block->p_buffer+1
water	71:24	0:0	6	block
op	71:29	0:0	6	->
water	71:31	0:0	6	p_buffer
op	71:40	0:0	6	+
water	71:42	0:0	6	1
arg	71:45	71:52	5	datalen
water	71:45	0:0	6	datalen
water	71:53	0:0	4	;
water	72:4	0:0	4	}
else	73:4	84:4	2
stmts	74:4	84:4	3	
water	74:4	0:0	4	{
if	75:8	80:8	4	(datalen == 0)
cond	75:12	75:23	5	datalen == 0
water	75:12	0:0	6	datalen
op	75:20	0:0	6	==
water	75:23	0:0	6	0
stmts	76:8	80:8	5	
water	76:8	0:0	6	{
call	77:12	77:55	6	msg_Err
arg	77:21	77:28	7	p_demux
water	77:21	0:0	8	p_demux
arg	77:30	77:55	7	"malformatted MIDI event"
water	77:30	0:0	8	"malformatted MIDI event"
water	77:56	0:0	6	;
call	78:12	78:31	6	block_Release
arg	78:26	78:31	7	block
water	78:26	0:0	8	block
water	78:32	0:0	6	;
return	79:12	79:21	6	-1
op	79:19	0:0	7	-
water	79:20	0:0	7	1
water	80:8	0:0	6	}
water	81:8	0:0	4	block
op	81:13	0:0	4	->
water	81:15	0:0	4	p_buffer
op	81:23	0:0	4	[
water	81:24	0:0	4	1
op	81:25	0:0	4	]
op	81:27	0:0	4	=
water	81:29	0:0	4	first
water	81:34	0:0	4	;
if	82:8	83:61	4	(datalen > 1)
cond	82:12	82:22	5	datalen > 1
water	82:12	0:0	6	datalen
op	82:20	0:0	6	>
water	82:22	0:0	6	1
stmts	83:12	83:61	5	
call	83:12	83:60	6	stream_Read
arg	83:25	83:26	7	s
water	83:25	0:0	8	s
arg	83:28	83:47	7	block->p_buffer+2
water	83:28	0:0	8	block
op	83:33	0:0	8	->
water	83:35	0:0	8	p_buffer
op	83:44	0:0	8	+
water	83:46	0:0	8	2
arg	83:49	83:60	7	datalen-1
water	83:49	0:0	8	datalen
op	83:57	0:0	8	-
water	83:59	0:0	8	1
water	83:61	0:0	6	;
water	84:4	0:0	4	}
label	85:0	85:4	2	send :
water	86:4	0:0	2	block
op	86:9	0:0	2	->
water	86:11	0:0	2	i_dts
op	86:17	0:0	2	=
water	86:19	0:0	2	block
op	86:24	0:0	2	->
water	86:26	0:0	2	i_pts
op	86:32	0:0	2	=
call	86:34	86:64	2	date_Get
arg	86:44	86:64	3	&p_demux->p_sys->pts
op	86:44	0:0	4	&
water	86:45	0:0	4	p_demux
op	86:52	0:0	4	->
water	86:54	0:0	4	p_sys
op	86:59	0:0	4	->
water	86:61	0:0	4	pts
water	86:65	0:0	2	;
if	87:4	88:52	2	(out != NULL)
cond	87:8	87:15	3	out != NULL
water	87:8	0:0	4	out
op	87:12	0:0	4	!=
water	87:15	0:0	4	NULL
stmts	88:8	88:52	3	
call	88:8	88:51	4	es_out_Send
arg	88:21	88:24	5	out
water	88:21	0:0	6	out
arg	88:26	88:44	5	p_demux->p_sys->es
water	88:26	0:0	6	p_demux
op	88:33	0:0	6	->
water	88:35	0:0	6	p_sys
op	88:40	0:0	6	->
water	88:42	0:0	6	es
arg	88:46	88:51	5	block
water	88:46	0:0	6	block
water	88:52	0:0	4	;
else	89:4	90:29	2
stmts	90:8	90:29	3	
call	90:8	90:28	4	block_Release
arg	90:23	90:28	5	block
water	90:23	0:0	6	block
water	90:29	0:0	4	;
label	91:0	91:4	2	skip :
if	92:4	94:33	2	(event < 0 xF8)
cond	92:8	92:17	3	event < 0 xF8
water	92:8	0:0	4	event
op	92:14	0:0	4	<
water	92:16	0:0	4	0
water	92:17	0:0	4	xF8
stmts	94:8	94:33	3	
water	94:8	0:0	4	tr
op	94:10	0:0	4	->
water	94:12	0:0	4	running_event
op	94:26	0:0	4	=
water	94:28	0:0	4	event
water	94:33	0:0	4	;
water	95:4	0:0	2	tr
op	95:6	0:0	2	->
water	95:8	0:0	2	offset
op	95:15	0:0	2	=
call	95:17	95:31	2	stream_Tell
arg	95:30	95:31	3	s
water	95:30	0:0	4	s
op	95:33	0:0	2	-
water	95:35	0:0	2	tr
op	95:37	0:0	2	->
water	95:39	0:0	2	start
water	95:44	0:0	2	;
return	96:4	96:12	2	0
water	96:11	0:0	3	0

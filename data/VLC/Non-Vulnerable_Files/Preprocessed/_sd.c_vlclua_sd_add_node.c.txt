func	2:0	51:0	0	static int	vlclua_sd_add_node
params	2:29	0:0	1	
param	2:31	2:44	2	lua_State *	L
stmnts	0:0	50:12	1	
decl	4:4	4:77	2	services_discovery_t	*p_sd
op	4:31	0:0	2	=
water	4:33	0:0	2	(
water	4:34	0:0	2	services_discovery_t
op	4:55	0:0	2	*
water	4:56	0:0	2	)
call	4:57	4:76	3	vlclua_get_this
arg	4:74	4:76	4	L
water	4:74	0:0	5	L
if	5:4	47:4	2	(lua_istable (L ,- 1 ))
cond	5:8	5:27	3	lua_istable (L ,- 1 )
call	5:8	5:27	4	lua_istable
arg	5:21	5:22	5	L
water	5:21	0:0	6	L
arg	5:24	5:27	5	-1
op	5:24	0:0	6	-
water	5:25	0:0	6	1
stmts	6:4	47:4	3	
water	6:4	0:0	4	{
call	7:8	7:37	4	lua_getfield
arg	7:22	7:23	5	L
water	7:22	0:0	6	L
arg	7:25	7:27	5	-1
op	7:25	0:0	6	-
water	7:26	0:0	6	1
arg	7:29	7:37	5	"title"
water	7:29	0:0	6	"title"
water	7:38	0:0	4	;
if	8:8	44:8	4	(lua_isstring (L ,- 1 ))
cond	8:12	8:32	5	lua_isstring (L ,- 1 )
call	8:12	8:32	6	lua_isstring
arg	8:26	8:27	7	L
water	8:26	0:0	8	L
arg	8:29	8:32	7	-1
op	8:29	0:0	8	-
water	8:30	0:0	8	1
stmts	9:8	44:8	5	
water	9:8	0:0	6	{
decl	10:12	10:56	6	const char	*psz_name
op	10:33	0:0	6	=
call	10:35	10:55	7	lua_tostring
arg	10:49	10:50	8	L
water	10:49	0:0	9	L
arg	10:52	10:55	8	-1
op	10:52	0:0	9	-
water	10:53	0:0	9	1
decl	11:12	13:80	6	input_item_t	*p_input
op	11:34	0:0	6	=
call	11:36	13:79	7	input_item_NewWithType
arg	11:60	11:71	8	"vlc://nop"
water	11:60	0:0	9	"vlc://nop"
arg	12:60	12:68	8	psz_name
water	12:60	0:0	9	psz_name
arg	12:70	12:71	8	0
water	12:70	0:0	9	0
arg	12:73	12:77	8	NULL
water	12:73	0:0	9	NULL
arg	12:79	12:80	8	0
water	12:79	0:0	9	0
arg	13:60	13:62	8	-1
op	13:60	0:0	9	-
water	13:61	0:0	9	1
arg	13:64	13:79	8	ITEM_TYPE_NODE
water	13:64	0:0	9	ITEM_TYPE_NODE
call	14:12	14:26	6	lua_pop
arg	14:21	14:22	7	L
water	14:21	0:0	8	L
arg	14:24	14:26	7	1
water	14:24	0:0	8	1
water	14:27	0:0	6	;
if	15:12	43:12	6	(p_input)
cond	15:16	15:16	7	p_input
water	15:16	0:0	8	p_input
stmts	16:12	43:12	7	
water	16:12	0:0	8	{
call	17:16	17:46	8	lua_getfield
arg	17:30	17:31	9	L
water	17:30	0:0	10	L
arg	17:33	17:35	9	-1
op	17:33	0:0	10	-
water	17:34	0:0	10	1
arg	17:37	17:46	9	"arturl"
water	17:37	0:0	10	"arturl"
water	17:47	0:0	8	;
if	18:16	26:16	8	(lua_isstring (L ,- 1 ) &&strcmp (lua_tostring (L ,- 1 ) ,"" ))
cond	18:20	18:79	9	lua_isstring (L ,- 1 ) &&strcmp (lua_tostring (L ,- 1 ) ,"" )
call	18:20	18:40	10	lua_isstring
arg	18:34	18:35	11	L
water	18:34	0:0	12	L
arg	18:37	18:40	11	-1
op	18:37	0:0	12	-
water	18:38	0:0	12	1
op	18:42	0:0	10	&&
call	18:45	18:79	10	strcmp
arg	18:53	18:74	11	lua_tostring(L,-1)
call	18:53	18:73	12	lua_tostring
arg	18:67	18:68	13	L
water	18:67	0:0	14	L
arg	18:70	18:73	13	-1
op	18:70	0:0	14	-
water	18:71	0:0	14	1
arg	18:76	18:79	11	""
water	18:76	0:0	12	""
stmts	19:16	26:16	9	
water	19:16	0:0	10	{
decl	20:20	20:69	10	char	*psz_value
op	20:36	0:0	10	=
call	20:38	20:68	11	strdup
arg	20:46	20:68	12	lua_tostring(L,-1)
call	20:46	20:66	13	lua_tostring
arg	20:60	20:61	14	L
water	20:60	0:0	15	L
arg	20:63	20:66	14	-1
op	20:63	0:0	15	-
water	20:64	0:0	15	1
call	21:20	21:42	10	EnsureUTF8
arg	21:32	21:42	11	psz_value
water	21:32	0:0	12	psz_value
water	21:43	0:0	10	;
call	22:20	22:59	10	msg_Dbg
arg	22:29	22:33	11	p_sd
water	22:29	0:0	12	p_sd
arg	22:35	22:47	11	"ArtURL: %s"
water	22:35	0:0	12	"ArtURL: %s"
arg	22:49	22:59	11	psz_value
water	22:49	0:0	12	psz_value
water	22:60	0:0	10	;
call	24:20	24:61	10	input_item_SetArtURL
arg	24:42	24:49	11	p_input
water	24:42	0:0	12	p_input
arg	24:51	24:61	11	psz_value
water	24:51	0:0	12	psz_value
water	24:62	0:0	10	;
call	25:20	25:36	10	free
arg	25:26	25:36	11	psz_value
water	25:26	0:0	12	psz_value
water	25:37	0:0	10	;
water	26:16	0:0	10	}
call	27:16	27:30	8	lua_pop
arg	27:25	27:26	9	L
water	27:25	0:0	10	L
arg	27:28	27:30	9	1
water	27:28	0:0	10	1
water	27:31	0:0	8	;
call	28:16	28:48	8	lua_getfield
arg	28:30	28:31	9	L
water	28:30	0:0	10	L
arg	28:33	28:35	9	-1
op	28:33	0:0	10	-
water	28:34	0:0	10	1
arg	28:37	28:48	9	"category"
water	28:37	0:0	10	"category"
water	28:49	0:0	8	;
if	29:16	30:90	8	(lua_isstring (L ,- 1 ))
cond	29:20	29:40	9	lua_isstring (L ,- 1 )
call	29:20	29:40	10	lua_isstring
arg	29:34	29:35	11	L
water	29:34	0:0	12	L
arg	29:37	29:40	11	-1
op	29:37	0:0	12	-
water	29:38	0:0	12	1
stmts	30:20	30:90	9	
call	30:20	30:89	10	services_discovery_AddItem
arg	30:48	30:52	11	p_sd
water	30:48	0:0	12	p_sd
arg	30:54	30:61	11	p_input
water	30:54	0:0	12	p_input
arg	30:63	30:89	11	luaL_checkstring(L,-1)
call	30:63	30:87	12	luaL_checkstring
arg	30:81	30:82	13	L
water	30:81	0:0	14	L
arg	30:84	30:87	13	-1
op	30:84	0:0	14	-
water	30:85	0:0	14	1
water	30:90	0:0	10	;
else	31:16	32:69	8
stmts	32:20	32:69	9	
call	32:20	32:68	10	services_discovery_AddItem
arg	32:48	32:52	11	p_sd
water	32:48	0:0	12	p_sd
arg	32:54	32:61	11	p_input
water	32:54	0:0	12	p_input
arg	32:63	32:68	11	NULL
water	32:63	0:0	12	NULL
water	32:69	0:0	10	;
decl	33:16	34:85	8	input_item_t	**udata
op	33:37	0:0	8	=
water	33:39	0:0	8	(
water	33:40	0:0	8	input_item_t
op	33:53	0:0	8	*
op	33:54	0:0	8	*
water	33:55	0:0	8	)
call	34:39	34:84	9	lua_newuserdata
arg	34:56	34:57	10	L
water	34:56	0:0	11	L
arg	34:59	34:84	10	sizeof(input_item_t*)
op	34:59	0:0	11	sizeof
water	34:65	0:0	11	(
water	34:67	0:0	11	input_item_t
op	34:80	0:0	11	*
water	34:82	0:0	11	)
op	35:16	0:0	8	*
water	35:17	0:0	8	udata
op	35:23	0:0	8	=
water	35:25	0:0	8	p_input
water	35:32	0:0	8	;
if	36:16	41:16	8	(luaL_newmetatable (L ,"node" ))
cond	36:20	36:49	9	luaL_newmetatable (L ,"node" )
call	36:20	36:49	10	luaL_newmetatable
arg	36:39	36:40	11	L
water	36:39	0:0	12	L
arg	36:42	36:49	11	"node"
water	36:42	0:0	12	"node"
stmts	37:16	41:16	9	
water	37:16	0:0	10	{
call	38:20	38:36	10	lua_newtable
arg	38:34	38:36	11	L
water	38:34	0:0	12	L
water	38:37	0:0	10	;
call	39:20	39:60	10	luaL_register
arg	39:35	39:36	11	L
water	39:35	0:0	12	L
arg	39:38	39:42	11	NULL
water	39:38	0:0	12	NULL
arg	39:44	39:60	11	vlclua_node_reg
water	39:44	0:0	12	vlclua_node_reg
water	39:61	0:0	10	;
call	40:20	40:51	10	lua_setfield
arg	40:34	40:35	11	L
water	40:34	0:0	12	L
arg	40:37	40:39	11	-2
op	40:37	0:0	12	-
water	40:38	0:0	12	2
arg	40:41	40:51	11	"__index"
water	40:41	0:0	12	"__index"
water	40:52	0:0	10	;
water	41:16	0:0	10	}
call	42:16	42:40	8	lua_setmetatable
arg	42:34	42:35	9	L
water	42:34	0:0	10	L
arg	42:37	42:40	9	-2
op	42:37	0:0	10	-
water	42:38	0:0	10	2
water	42:41	0:0	8	;
water	43:12	0:0	8	}
water	44:8	0:0	6	}
else	45:8	46:86	4
stmts	46:12	46:86	5	
call	46:12	46:85	6	msg_Err
arg	46:21	46:25	7	p_sd
water	46:21	0:0	8	p_sd
arg	46:27	46:85	7	"vlc.sd.add_node: the \"title\" parameter can't be empty"
water	46:27	0:0	8	"vlc.sd.add_node: the \"title\" parameter can't be empty"
water	46:86	0:0	6	;
water	47:4	0:0	4	}
else	48:4	49:59	2
stmts	49:8	49:59	3	
call	49:8	49:58	4	msg_Err
arg	49:17	49:21	5	p_sd
water	49:17	0:0	6	p_sd
arg	49:23	49:58	5	"Error parsing add_node arguments"
water	49:23	0:0	6	"Error parsing add_node arguments"
water	49:59	0:0	4	;
return	50:4	50:12	2	1
water	50:11	0:0	3	1

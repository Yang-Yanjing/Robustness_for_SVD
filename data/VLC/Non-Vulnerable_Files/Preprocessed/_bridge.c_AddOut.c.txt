func	2:0	49:0	0	static sout_stream_id_sys_t *	AddOut
params	2:36	0:0	1	
param	2:38	2:61	2	sout_stream_t *	p_stream
param	2:63	2:82	2	es_format_t *	p_fmt
stmnts	0:0	48:40	1	
decl	4:4	4:75	2	out_sout_stream_sys_t	*p_sys
op	4:33	0:0	2	=
water	4:35	0:0	2	(
water	4:36	0:0	2	out_sout_stream_sys_t
op	4:58	0:0	2	*
water	4:59	0:0	2	)
water	4:60	0:0	2	p_stream
op	4:68	0:0	2	->
water	4:70	0:0	2	p_sys
decl	5:4	5:22	2	bridge_t	*p_bridge
decl	6:4	6:22	2	bridged_es_t	*p_es
decl	7:4	7:9	2	int	i
if	8:4	12:4	2	(p_sys -> b_inited)
cond	8:9	8:16	3	p_sys -> b_inited
water	8:9	0:0	4	p_sys
op	8:14	0:0	4	->
water	8:16	0:0	4	b_inited
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
call	10:8	10:72	4	msg_Err
arg	10:17	10:25	5	p_stream
water	10:17	0:0	6	p_stream
arg	10:27	10:72	5	"bridge-out can only handle 1 es at a time."
water	10:27	0:0	6	"bridge-out can only handle 1 es at a time."
water	10:73	0:0	4	;
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
water	12:4	0:0	4	}
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	b_inited
op	13:20	0:0	2	=
water	13:22	0:0	2	true
water	13:26	0:0	2	;
call	14:4	14:26	2	vlc_mutex_lock
arg	14:20	14:26	3	&lock
op	14:20	0:0	4	&
water	14:21	0:0	4	lock
water	14:27	0:0	2	;
water	15:4	0:0	2	p_bridge
op	15:13	0:0	2	=
call	15:15	15:67	2	var_GetAddress
arg	15:31	15:49	3	p_stream->p_libvlc
water	15:31	0:0	4	p_stream
op	15:39	0:0	4	->
water	15:41	0:0	4	p_libvlc
arg	15:51	15:67	3	p_sys->psz_name
water	15:51	0:0	4	p_sys
op	15:56	0:0	4	->
water	15:58	0:0	4	psz_name
water	15:68	0:0	2	;
if	16:4	23:4	2	(p_bridge == NULL)
cond	16:9	16:21	3	p_bridge == NULL
water	16:9	0:0	4	p_bridge
op	16:18	0:0	4	==
water	16:21	0:0	4	NULL
stmts	17:4	23:4	3	
water	17:4	0:0	4	{
water	18:8	0:0	4	p_bridge
op	18:17	0:0	4	=
call	18:19	18:47	4	xmalloc
arg	18:28	18:47	5	sizeof(bridge_t)
op	18:28	0:0	6	sizeof
water	18:34	0:0	6	(
water	18:36	0:0	6	bridge_t
water	18:45	0:0	6	)
water	18:48	0:0	4	;
call	19:8	19:73	4	var_Create
arg	19:20	19:38	5	p_stream->p_libvlc
water	19:20	0:0	6	p_stream
op	19:28	0:0	6	->
water	19:30	0:0	6	p_libvlc
arg	19:40	19:55	5	p_sys->psz_name
water	19:40	0:0	6	p_sys
op	19:45	0:0	6	->
water	19:47	0:0	6	psz_name
arg	19:57	19:73	5	VLC_VAR_ADDRESS
water	19:57	0:0	6	VLC_VAR_ADDRESS
water	19:74	0:0	4	;
call	20:8	20:70	4	var_SetAddress
arg	20:24	20:42	5	p_stream->p_libvlc
water	20:24	0:0	6	p_stream
op	20:32	0:0	6	->
water	20:34	0:0	6	p_libvlc
arg	20:44	20:59	5	p_sys->psz_name
water	20:44	0:0	6	p_sys
op	20:49	0:0	6	->
water	20:51	0:0	6	psz_name
arg	20:61	20:70	5	p_bridge
water	20:61	0:0	6	p_bridge
water	20:71	0:0	4	;
water	21:8	0:0	4	p_bridge
op	21:16	0:0	4	->
water	21:18	0:0	4	i_es_num
op	21:27	0:0	4	=
water	21:29	0:0	4	0
water	21:30	0:0	4	;
water	22:8	0:0	4	p_bridge
op	22:16	0:0	4	->
water	22:18	0:0	4	pp_es
op	22:24	0:0	4	=
water	22:26	0:0	4	NULL
water	22:30	0:0	4	;
water	23:4	0:0	4	}
for	24:4	28:4	2	(i = 0 ;i < p_bridge -> i_es_num;i ++)
forinit	24:10	24:15	3	i = 0 ;
water	24:10	0:0	4	i
op	24:12	0:0	4	=
water	24:14	0:0	4	0
water	24:15	0:0	4	;
cond	24:17	24:31	3	i < p_bridge -> i_es_num
water	24:17	0:0	4	i
op	24:19	0:0	4	<
water	24:21	0:0	4	p_bridge
op	24:29	0:0	4	->
water	24:31	0:0	4	i_es_num
forexpr	24:41	24:42	3	i ++
water	24:41	0:0	4	i
op	24:42	0:0	4	++
stmts	25:4	28:4	3	
water	25:4	0:0	4	{
if	26:8	27:17	4	(p_bridge -> pp_es [ i ] -> b_empty && ! p_bridge -> pp_es [ i ] -> b_changed)
cond	26:13	26:65	5	p_bridge -> pp_es [ i ] -> b_empty && ! p_bridge -> pp_es [ i ] -> b_changed
water	26:13	0:0	6	p_bridge
op	26:21	0:0	6	->
water	26:23	0:0	6	pp_es
op	26:28	0:0	6	[
water	26:29	0:0	6	i
op	26:30	0:0	6	]
op	26:31	0:0	6	->
water	26:33	0:0	6	b_empty
op	26:41	0:0	6	&&
op	26:44	0:0	6	!
water	26:45	0:0	6	p_bridge
op	26:53	0:0	6	->
water	26:55	0:0	6	pp_es
op	26:60	0:0	6	[
water	26:61	0:0	6	i
op	26:62	0:0	6	]
op	26:63	0:0	6	->
water	26:65	0:0	6	b_changed
stmts	27:12	27:17	5	
break	27:12	27:17	6	
water	28:4	0:0	4	}
if	29:4	35:4	2	(i == p_bridge -> i_es_num)
cond	29:9	29:24	3	i == p_bridge -> i_es_num
water	29:9	0:0	4	i
op	29:11	0:0	4	==
water	29:14	0:0	4	p_bridge
op	29:22	0:0	4	->
water	29:24	0:0	4	i_es_num
stmts	30:4	35:4	3	
water	30:4	0:0	4	{
water	31:8	0:0	4	p_bridge
op	31:16	0:0	4	->
water	31:18	0:0	4	pp_es
op	31:24	0:0	4	=
call	31:26	32:76	4	xrealloc
arg	31:36	31:51	5	p_bridge->pp_es
water	31:36	0:0	6	p_bridge
op	31:44	0:0	6	->
water	31:46	0:0	6	pp_es
arg	32:26	32:76	5	(p_bridge->i_es_num+1)*sizeof(bridged_es_t*)
water	32:26	0:0	6	(
water	32:27	0:0	6	p_bridge
op	32:35	0:0	6	->
water	32:37	0:0	6	i_es_num
op	32:46	0:0	6	+
water	32:48	0:0	6	1
water	32:49	0:0	6	)
op	32:51	0:0	6	*
op	32:53	0:0	6	sizeof
water	32:59	0:0	6	(
water	32:60	0:0	6	bridged_es_t
op	32:73	0:0	6	*
water	32:74	0:0	6	)
water	32:77	0:0	4	;
water	33:8	0:0	4	p_bridge
op	33:16	0:0	4	->
water	33:18	0:0	4	i_es_num
op	33:26	0:0	4	++
water	33:28	0:0	4	;
water	34:8	0:0	4	p_bridge
op	34:16	0:0	4	->
water	34:18	0:0	4	pp_es
op	34:23	0:0	4	[
water	34:24	0:0	4	i
op	34:25	0:0	4	]
op	34:27	0:0	4	=
call	34:29	34:59	4	xmalloc
arg	34:38	34:59	5	sizeof(bridged_es_t)
op	34:38	0:0	6	sizeof
water	34:44	0:0	6	(
water	34:45	0:0	6	bridged_es_t
water	34:57	0:0	6	)
water	34:60	0:0	4	;
water	35:4	0:0	4	}
water	36:4	0:0	2	p_sys
op	36:9	0:0	2	->
water	36:11	0:0	2	p_es
op	36:16	0:0	2	=
water	36:18	0:0	2	p_es
op	36:23	0:0	2	=
water	36:25	0:0	2	p_bridge
op	36:33	0:0	2	->
water	36:35	0:0	2	pp_es
op	36:40	0:0	2	[
water	36:41	0:0	2	i
op	36:42	0:0	2	]
water	36:43	0:0	2	;
water	37:4	0:0	2	p_es
op	37:8	0:0	2	->
water	37:10	0:0	2	fmt
op	37:14	0:0	2	=
op	37:16	0:0	2	*
water	37:17	0:0	2	p_fmt
water	37:22	0:0	2	;
water	38:4	0:0	2	p_es
op	38:8	0:0	2	->
water	38:10	0:0	2	fmt
op	38:13	0:0	2	.
water	38:14	0:0	2	i_id
op	38:19	0:0	2	=
water	38:21	0:0	2	p_sys
op	38:26	0:0	2	->
water	38:28	0:0	2	i_id
water	38:32	0:0	2	;
water	39:4	0:0	2	p_es
op	39:8	0:0	2	->
water	39:10	0:0	2	p_block
op	39:18	0:0	2	=
water	39:20	0:0	2	NULL
water	39:24	0:0	2	;
water	40:4	0:0	2	p_es
op	40:8	0:0	2	->
water	40:10	0:0	2	pp_last
op	40:18	0:0	2	=
op	40:20	0:0	2	&
water	40:21	0:0	2	p_es
op	40:25	0:0	2	->
water	40:27	0:0	2	p_block
water	40:34	0:0	2	;
water	41:4	0:0	2	p_es
op	41:8	0:0	2	->
water	41:10	0:0	2	b_empty
op	41:18	0:0	2	=
water	41:20	0:0	2	false
water	41:25	0:0	2	;
water	42:4	0:0	2	p_es
op	42:8	0:0	2	->
water	42:10	0:0	2	id
op	42:13	0:0	2	=
water	42:15	0:0	2	NULL
water	42:19	0:0	2	;
water	43:4	0:0	2	p_es
op	43:8	0:0	2	->
water	43:10	0:0	2	i_last
op	43:17	0:0	2	=
water	43:19	0:0	2	VLC_TS_INVALID
water	43:33	0:0	2	;
water	44:4	0:0	2	p_es
op	44:8	0:0	2	->
water	44:10	0:0	2	b_changed
op	44:20	0:0	2	=
water	44:22	0:0	2	true
water	44:26	0:0	2	;
call	45:4	46:58	2	msg_Dbg
arg	45:13	45:21	3	p_stream
water	45:13	0:0	4	p_stream
arg	45:23	45:68	3	"bridging out input codec=%4.4s id=%d pos=%d"
water	45:23	0:0	4	"bridging out input codec=%4.4s id=%d pos=%d"
arg	46:13	46:38	3	(char*)&p_es->fmt.i_codec
water	46:13	0:0	4	(
water	46:14	0:0	4	char
op	46:18	0:0	4	*
water	46:19	0:0	4	)
op	46:20	0:0	4	&
water	46:21	0:0	4	p_es
op	46:25	0:0	4	->
water	46:27	0:0	4	fmt
op	46:30	0:0	4	.
water	46:31	0:0	4	i_codec
arg	46:40	46:54	3	p_es->fmt.i_id
water	46:40	0:0	4	p_es
op	46:44	0:0	4	->
water	46:46	0:0	4	fmt
op	46:49	0:0	4	.
water	46:50	0:0	4	i_id
arg	46:56	46:58	3	i
water	46:56	0:0	4	i
water	46:59	0:0	2	;
call	47:4	47:28	2	vlc_mutex_unlock
arg	47:22	47:28	3	&lock
op	47:22	0:0	4	&
water	47:23	0:0	4	lock
water	47:29	0:0	2	;
return	48:4	48:40	2	(sout_stream_id_sys_t*)p_sys
water	48:11	0:0	3	(
water	48:12	0:0	3	sout_stream_id_sys_t
op	48:33	0:0	3	*
water	48:34	0:0	3	)
water	48:35	0:0	3	p_sys

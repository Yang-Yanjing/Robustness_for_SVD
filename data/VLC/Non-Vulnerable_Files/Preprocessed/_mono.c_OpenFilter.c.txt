func	2:0	55:0	0	static int	OpenFilter
params	2:21	0:0	1	
param	2:23	2:44	2	vlc_object_t *	p_this
stmnts	0:0	54:22	1	
decl	4:4	4:44	2	filter_t	*p_filter
op	4:24	0:0	2	=
water	4:26	0:0	2	(
water	4:27	0:0	2	filter_t
op	4:36	0:0	2	*
water	4:37	0:0	2	)
water	4:38	0:0	2	p_this
decl	5:4	5:30	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	NULL
if	6:4	10:4	2	(aout_FormatNbChannels (& ( p_filter -> fmt_in . audio ) ) == 1)
cond	6:8	6:62	3	aout_FormatNbChannels (& ( p_filter -> fmt_in . audio ) ) == 1
call	6:8	6:57	4	aout_FormatNbChannels
arg	6:31	6:57	5	&(p_filter->fmt_in.audio)
op	6:31	0:0	6	&
water	6:32	0:0	6	(
water	6:33	0:0	6	p_filter
op	6:41	0:0	6	->
water	6:43	0:0	6	fmt_in
op	6:49	0:0	6	.
water	6:50	0:0	6	audio
water	6:55	0:0	6	)
op	6:59	0:0	4	==
water	6:62	0:0	4	1
stmts	7:4	10:4	3	
water	7:4	0:0	4	{
return	9:8	9:27	4	VLC_EGENERIC
water	9:15	0:0	5	VLC_EGENERIC
water	10:4	0:0	4	}
water	11:4	0:0	2	p_filter
op	11:12	0:0	2	->
water	11:14	0:0	2	fmt_in
op	11:20	0:0	2	.
water	11:21	0:0	2	audio
op	11:26	0:0	2	.
water	11:27	0:0	2	i_format
op	11:36	0:0	2	=
water	11:38	0:0	2	VLC_CODEC_S16N
water	11:52	0:0	2	;
water	12:4	0:0	2	p_filter
op	12:12	0:0	2	->
water	12:14	0:0	2	fmt_out
op	12:21	0:0	2	.
water	12:22	0:0	2	audio
op	12:27	0:0	2	.
water	12:28	0:0	2	i_format
op	12:37	0:0	2	=
water	12:39	0:0	2	VLC_CODEC_S16N
water	12:53	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:10	0:0	2	=
water	14:12	0:0	2	p_filter
op	14:20	0:0	2	->
water	14:22	0:0	2	p_sys
op	14:28	0:0	2	=
call	14:30	14:59	2	malloc
arg	14:38	14:59	3	sizeof(filter_sys_t)
op	14:38	0:0	4	sizeof
water	14:44	0:0	4	(
water	14:45	0:0	4	filter_sys_t
water	14:57	0:0	4	)
water	14:60	0:0	2	;
if	15:4	16:27	2	(p_sys == NULL)
cond	15:8	15:17	3	p_sys == NULL
water	15:8	0:0	4	p_sys
op	15:14	0:0	4	==
water	15:17	0:0	4	NULL
stmts	16:8	16:27	3	
return	16:8	16:27	4	VLC_EGENERIC
water	16:15	0:0	5	VLC_EGENERIC
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	b_downmix
op	17:21	0:0	2	=
call	17:23	17:67	2	var_InheritBool
arg	17:40	17:46	3	p_this
water	17:40	0:0	4	p_this
arg	17:48	17:67	3	MONO_CFG"downmix"
water	17:48	0:0	4	MONO_CFG
water	17:57	0:0	4	"downmix"
water	17:68	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	i_channel_selected
op	18:30	0:0	2	=
call	18:32	18:79	2	var_InheritInteger
arg	18:52	18:58	3	p_this
water	18:52	0:0	4	p_this
arg	18:60	18:79	3	MONO_CFG"channel"
water	18:60	0:0	4	MONO_CFG
water	18:69	0:0	4	"channel"
water	18:80	0:0	2	;
water	19:4	0:0	2	p_sys
op	19:9	0:0	2	->
water	19:11	0:0	2	i_nb_channels
op	19:25	0:0	2	=
call	19:27	19:76	2	aout_FormatNbChannels
arg	19:50	19:76	3	&(p_filter->fmt_in.audio)
op	19:50	0:0	4	&
water	19:51	0:0	4	(
water	19:52	0:0	4	p_filter
op	19:60	0:0	4	->
water	19:62	0:0	4	fmt_in
op	19:68	0:0	4	.
water	19:69	0:0	4	audio
water	19:74	0:0	4	)
water	19:77	0:0	2	;
water	20:4	0:0	2	p_sys
op	20:9	0:0	2	->
water	20:11	0:0	2	i_bitspersample
op	20:27	0:0	2	=
water	20:29	0:0	2	p_filter
op	20:37	0:0	2	->
water	20:39	0:0	2	fmt_out
op	20:46	0:0	2	.
water	20:47	0:0	2	audio
op	20:52	0:0	2	.
water	20:53	0:0	2	i_bitspersample
water	20:68	0:0	2	;
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	i_overflow_buffer_size
op	21:34	0:0	2	=
water	21:36	0:0	2	0
water	21:37	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	p_overflow_buffer
op	22:29	0:0	2	=
water	22:31	0:0	2	NULL
water	22:35	0:0	2	;
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	i_nb_atomic_operations
op	23:34	0:0	2	=
water	23:36	0:0	2	0
water	23:37	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	p_atomic_operations
op	24:31	0:0	2	=
water	24:33	0:0	2	NULL
water	24:37	0:0	2	;
if	25:4	32:4	2	(Init (VLC_OBJECT (p_filter ) ,p_filter -> p_sys ,aout_FormatNbChannels (& p_filter -> fmt_in . audio ) ,p_filter -> fmt_in . audio . i_physical_channels ,p_filter -> fmt_in . audio . i_rate ) < 0)
cond	25:8	28:48	3	Init (VLC_OBJECT (p_filter ) ,p_filter -> p_sys ,aout_FormatNbChannels (& p_filter -> fmt_in . audio ) ,p_filter -> fmt_in . audio . i_physical_channels ,p_filter -> fmt_in . audio . i_rate ) < 0
call	25:8	28:44	4	Init
arg	25:14	25:34	5	VLC_OBJECT(p_filter)
call	25:14	25:33	6	VLC_OBJECT
arg	25:25	25:33	7	p_filter
water	25:25	0:0	8	p_filter
arg	25:36	25:51	5	p_filter->p_sys
water	25:36	0:0	6	p_filter
op	25:44	0:0	6	->
water	25:46	0:0	6	p_sys
arg	26:14	26:62	5	aout_FormatNbChannels(&p_filter->fmt_in.audio)
call	26:14	26:61	6	aout_FormatNbChannels
arg	26:37	26:61	7	&p_filter->fmt_in.audio
op	26:37	0:0	8	&
water	26:38	0:0	8	p_filter
op	26:46	0:0	8	->
water	26:48	0:0	8	fmt_in
op	26:54	0:0	8	.
water	26:55	0:0	8	audio
arg	27:14	27:56	5	p_filter->fmt_in.audio.i_physical_channels
water	27:14	0:0	6	p_filter
op	27:22	0:0	6	->
water	27:24	0:0	6	fmt_in
op	27:30	0:0	6	.
water	27:31	0:0	6	audio
op	27:36	0:0	6	.
water	27:37	0:0	6	i_physical_channels
arg	28:14	28:44	5	p_filter->fmt_in.audio.i_rate
water	28:14	0:0	6	p_filter
op	28:22	0:0	6	->
water	28:24	0:0	6	fmt_in
op	28:30	0:0	6	.
water	28:31	0:0	6	audio
op	28:36	0:0	6	.
water	28:37	0:0	6	i_rate
op	28:46	0:0	4	<
water	28:48	0:0	4	0
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
call	30:8	30:20	4	free
arg	30:14	30:20	5	p_sys
water	30:14	0:0	6	p_sys
water	30:21	0:0	4	;
return	31:8	31:27	4	VLC_EGENERIC
water	31:15	0:0	5	VLC_EGENERIC
water	32:4	0:0	4	}
if	33:4	38:4	2	(p_sys -> b_downmix)
cond	33:8	33:15	3	p_sys -> b_downmix
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	b_downmix
stmts	34:4	38:4	3	
water	34:4	0:0	4	{
call	35:8	35:56	4	msg_Dbg
arg	35:17	35:23	5	p_this
water	35:17	0:0	6	p_this
arg	35:25	35:56	5	"using stereo to mono downmix"
water	35:25	0:0	6	"using stereo to mono downmix"
water	35:57	0:0	4	;
water	36:8	0:0	4	p_filter
op	36:16	0:0	4	->
water	36:18	0:0	4	fmt_out
op	36:25	0:0	4	.
water	36:26	0:0	4	audio
op	36:31	0:0	4	.
water	36:32	0:0	4	i_physical_channels
op	36:52	0:0	4	=
water	36:54	0:0	4	AOUT_CHAN_CENTER
water	36:70	0:0	4	;
water	37:8	0:0	4	p_filter
op	37:16	0:0	4	->
water	37:18	0:0	4	fmt_out
op	37:25	0:0	4	.
water	37:26	0:0	4	audio
op	37:31	0:0	4	.
water	37:32	0:0	4	i_channels
op	37:43	0:0	4	=
water	37:45	0:0	4	1
water	37:46	0:0	4	;
water	38:4	0:0	4	}
else	39:4	44:4	2
stmts	40:4	44:4	3	
water	40:4	0:0	4	{
call	41:8	41:45	4	msg_Dbg
arg	41:17	41:23	5	p_this
water	41:17	0:0	6	p_this
arg	41:25	41:45	5	"using pseudo mono"
water	41:25	0:0	6	"using pseudo mono"
water	41:46	0:0	4	;
water	42:8	0:0	4	p_filter
op	42:16	0:0	4	->
water	42:18	0:0	4	fmt_out
op	42:25	0:0	4	.
water	42:26	0:0	4	audio
op	42:31	0:0	4	.
water	42:32	0:0	4	i_physical_channels
op	42:52	0:0	4	=
water	42:54	0:0	4	AOUT_CHANS_STEREO
water	42:71	0:0	4	;
water	43:8	0:0	4	p_filter
op	43:16	0:0	4	->
water	43:18	0:0	4	fmt_out
op	43:25	0:0	4	.
water	43:26	0:0	4	audio
op	43:31	0:0	4	.
water	43:32	0:0	4	i_channels
op	43:43	0:0	4	=
water	43:45	0:0	4	2
water	43:46	0:0	4	;
water	44:4	0:0	4	}
water	45:4	0:0	2	p_filter
op	45:12	0:0	2	->
water	45:14	0:0	2	fmt_out
op	45:21	0:0	2	.
water	45:22	0:0	2	audio
op	45:27	0:0	2	.
water	45:28	0:0	2	i_rate
op	45:35	0:0	2	=
water	45:37	0:0	2	p_filter
op	45:45	0:0	2	->
water	45:47	0:0	2	fmt_in
op	45:53	0:0	2	.
water	45:54	0:0	2	audio
op	45:59	0:0	2	.
water	45:60	0:0	2	i_rate
water	45:66	0:0	2	;
water	46:4	0:0	2	p_filter
op	46:12	0:0	2	->
water	46:14	0:0	2	pf_audio_filter
op	46:30	0:0	2	=
water	46:32	0:0	2	Convert
water	46:39	0:0	2	;
call	47:4	53:53	2	msg_Dbg
arg	47:13	47:19	3	p_this
water	47:13	0:0	4	p_this
arg	47:21	47:77	3	"%4.4s->%4.4s, channels %d->%d, bits per sample: %i->%i"
water	47:21	0:0	4	"%4.4s->%4.4s, channels %d->%d, bits per sample: %i->%i"
arg	48:13	48:46	3	(char*)&p_filter->fmt_in.i_codec
water	48:13	0:0	4	(
water	48:14	0:0	4	char
op	48:19	0:0	4	*
water	48:20	0:0	4	)
op	48:21	0:0	4	&
water	48:22	0:0	4	p_filter
op	48:30	0:0	4	->
water	48:32	0:0	4	fmt_in
op	48:38	0:0	4	.
water	48:39	0:0	4	i_codec
arg	49:13	49:47	3	(char*)&p_filter->fmt_out.i_codec
water	49:13	0:0	4	(
water	49:14	0:0	4	char
op	49:19	0:0	4	*
water	49:20	0:0	4	)
op	49:21	0:0	4	&
water	49:22	0:0	4	p_filter
op	49:30	0:0	4	->
water	49:32	0:0	4	fmt_out
op	49:39	0:0	4	.
water	49:40	0:0	4	i_codec
arg	50:13	50:55	3	p_filter->fmt_in.audio.i_physical_channels
water	50:13	0:0	4	p_filter
op	50:21	0:0	4	->
water	50:23	0:0	4	fmt_in
op	50:29	0:0	4	.
water	50:30	0:0	4	audio
op	50:35	0:0	4	.
water	50:36	0:0	4	i_physical_channels
arg	51:13	51:56	3	p_filter->fmt_out.audio.i_physical_channels
water	51:13	0:0	4	p_filter
op	51:21	0:0	4	->
water	51:23	0:0	4	fmt_out
op	51:30	0:0	4	.
water	51:31	0:0	4	audio
op	51:36	0:0	4	.
water	51:37	0:0	4	i_physical_channels
arg	52:13	52:51	3	p_filter->fmt_in.audio.i_bitspersample
water	52:13	0:0	4	p_filter
op	52:21	0:0	4	->
water	52:23	0:0	4	fmt_in
op	52:29	0:0	4	.
water	52:30	0:0	4	audio
op	52:35	0:0	4	.
water	52:36	0:0	4	i_bitspersample
arg	53:13	53:53	3	p_filter->fmt_out.audio.i_bitspersample
water	53:13	0:0	4	p_filter
op	53:21	0:0	4	->
water	53:23	0:0	4	fmt_out
op	53:30	0:0	4	.
water	53:31	0:0	4	audio
op	53:36	0:0	4	.
water	53:37	0:0	4	i_bitspersample
water	53:54	0:0	2	;
return	54:4	54:22	2	VLC_SUCCESS
water	54:11	0:0	3	VLC_SUCCESS

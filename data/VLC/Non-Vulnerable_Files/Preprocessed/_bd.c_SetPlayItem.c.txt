func	2:0	94:0	0	static int	SetPlayItem
params	2:22	0:0	1	
param	2:24	2:40	2	demux_t *	p_demux
param	2:42	2:52	2	int	i_mpls
param	2:54	2:70	2	int	i_play_item
stmnts	0:0	93:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	9:4	9:60	2	const bool	b_same_mpls
op	9:27	0:0	2	=
water	9:29	0:0	2	i_mpls
op	9:36	0:0	2	==
water	9:39	0:0	2	p_demux
op	9:46	0:0	2	->
water	9:48	0:0	2	info
op	9:52	0:0	2	.
water	9:53	0:0	2	i_title
decl	13:4	13:52	2	const bd_mpls_t	*p_mpls
op	13:28	0:0	2	=
water	13:30	0:0	2	p_sys
op	13:35	0:0	2	->
water	13:37	0:0	2	pp_mpls
op	13:44	0:0	2	[
water	13:45	0:0	2	i_mpls
op	13:51	0:0	2	]
if	15:4	16:27	2	(i_play_item < 0 || i_play_item >= p_mpls -> i_play_item)
cond	15:8	15:50	3	i_play_item < 0 || i_play_item >= p_mpls -> i_play_item
water	15:8	0:0	4	i_play_item
op	15:20	0:0	4	<
water	15:22	0:0	4	0
op	15:24	0:0	4	||
water	15:27	0:0	4	i_play_item
op	15:39	0:0	4	>=
water	15:42	0:0	4	p_mpls
op	15:48	0:0	4	->
water	15:50	0:0	4	i_play_item
stmts	16:8	16:27	3	
return	16:8	16:27	4	VLC_EGENERIC
water	16:15	0:0	5	VLC_EGENERIC
decl	17:4	17:73	2	const bd_mpls_play_item_t	*p_item
op	17:38	0:0	2	=
op	17:40	0:0	2	&
water	17:41	0:0	2	p_mpls
op	17:47	0:0	2	->
water	17:49	0:0	2	p_play_item
op	17:60	0:0	2	[
water	17:61	0:0	2	i_play_item
op	17:72	0:0	2	]
decl	18:4	18:53	2	const bd_mpls_clpi_t	*p_mpls_clpi
op	18:38	0:0	2	=
op	18:40	0:0	2	&
water	18:41	0:0	2	p_item
op	18:47	0:0	2	->
water	18:49	0:0	2	clpi
decl	19:4	19:34	2	const bd_clpi_t	*p_clpi
op	19:28	0:0	2	=
water	19:30	0:0	2	NULL
for	20:4	24:4	2	( int i_clpi = 0 ;i_clpi < p_sys -> i_clpi && ! p_clpi;i_clpi ++)
forinit	0:0	20:23	3	 int i_clpi = 0 ;
decl	20:9	20:23	4	int	i_clpi
op	20:20	0:0	4	=
water	20:22	0:0	4	0
cond	20:25	20:52	3	i_clpi < p_sys -> i_clpi && ! p_clpi
water	20:25	0:0	4	i_clpi
op	20:32	0:0	4	<
water	20:34	0:0	4	p_sys
op	20:39	0:0	4	->
water	20:41	0:0	4	i_clpi
op	20:48	0:0	4	&&
op	20:51	0:0	4	!
water	20:52	0:0	4	p_clpi
forexpr	20:60	20:66	3	i_clpi ++
water	20:60	0:0	4	i_clpi
op	20:66	0:0	4	++
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
if	22:8	23:43	4	(p_sys -> pp_clpi [ i_clpi ] -> i_id == p_mpls_clpi -> i_id)
cond	22:12	22:57	5	p_sys -> pp_clpi [ i_clpi ] -> i_id == p_mpls_clpi -> i_id
water	22:12	0:0	6	p_sys
op	22:17	0:0	6	->
water	22:19	0:0	6	pp_clpi
op	22:26	0:0	6	[
water	22:27	0:0	6	i_clpi
op	22:33	0:0	6	]
op	22:34	0:0	6	->
water	22:36	0:0	6	i_id
op	22:41	0:0	6	==
water	22:44	0:0	6	p_mpls_clpi
op	22:55	0:0	6	->
water	22:57	0:0	6	i_id
stmts	23:12	23:43	5	
water	23:12	0:0	6	p_clpi
op	23:19	0:0	6	=
water	23:21	0:0	6	p_sys
op	23:26	0:0	6	->
water	23:28	0:0	6	pp_clpi
op	23:35	0:0	6	[
water	23:36	0:0	6	i_clpi
op	23:42	0:0	6	]
water	23:43	0:0	6	;
water	24:4	0:0	4	}
decl	25:4	25:79	2	const bool	b_same_clpi
op	25:27	0:0	2	=
water	25:29	0:0	2	b_same_mpls
op	25:41	0:0	2	&&
water	25:44	0:0	2	p_sys
op	25:49	0:0	2	->
water	25:51	0:0	2	p_clpi
op	25:57	0:0	2	->
water	25:59	0:0	2	i_id
op	25:64	0:0	2	==
water	25:67	0:0	2	p_clpi
op	25:73	0:0	2	->
water	25:75	0:0	2	i_id
decl	26:4	26:27	2	stream_t	*p_m2ts
op	26:21	0:0	2	=
water	26:23	0:0	2	NULL
if	27:4	41:4	2	(! b_same_clpi)
cond	27:8	27:9	3	! b_same_clpi
op	27:8	0:0	4	!
water	27:9	0:0	4	b_same_clpi
stmts	28:4	41:4	3	
water	28:4	0:0	4	{
decl	29:8	29:22	4	char	*psz_m2ts
if	30:8	32:31	4	(asprintf (& psz_m2ts ,"%s/STREAM/%05d.%s" ,p_sys -> psz_base ,p_mpls_clpi -> i_id ,p_sys -> b_shortname ? "MTS" : "m2ts" ) < 0)
cond	30:12	31:98	5	asprintf (& psz_m2ts ,"%s/STREAM/%05d.%s" ,p_sys -> psz_base ,p_mpls_clpi -> i_id ,p_sys -> b_shortname ? "MTS" : "m2ts" ) < 0
call	30:12	31:94	6	asprintf
arg	30:22	30:31	7	&psz_m2ts
op	30:22	0:0	8	&
water	30:23	0:0	8	psz_m2ts
arg	30:33	30:52	7	"%s/STREAM/%05d.%s"
water	30:33	0:0	8	"%s/STREAM/%05d.%s"
arg	31:22	31:37	7	p_sys->psz_base
water	31:22	0:0	8	p_sys
op	31:27	0:0	8	->
water	31:29	0:0	8	psz_base
arg	31:39	31:56	7	p_mpls_clpi->i_id
water	31:39	0:0	8	p_mpls_clpi
op	31:50	0:0	8	->
water	31:52	0:0	8	i_id
arg	31:58	31:94	7	p_sys->b_shortname?"MTS":"m2ts"
water	31:58	0:0	8	p_sys
op	31:63	0:0	8	->
water	31:65	0:0	8	b_shortname
water	31:77	0:0	8	?
water	31:79	0:0	8	"MTS"
water	31:85	0:0	8	:
water	31:87	0:0	8	"m2ts"
op	31:96	0:0	6	<
water	31:98	0:0	6	0
stmts	32:12	32:31	5	
return	32:12	32:31	6	VLC_EGENERIC
water	32:19	0:0	7	VLC_EGENERIC
water	33:8	0:0	4	p_m2ts
op	33:15	0:0	4	=
call	33:17	33:50	4	stream_UrlNew
arg	33:32	33:39	5	p_demux
water	33:32	0:0	6	p_demux
arg	33:41	33:50	5	psz_m2ts
water	33:41	0:0	6	psz_m2ts
water	33:51	0:0	4	;
if	34:8	39:8	4	(! p_m2ts)
cond	34:12	34:13	5	! p_m2ts
op	34:12	0:0	6	!
water	34:13	0:0	6	p_m2ts
stmts	35:8	39:8	5	
water	35:8	0:0	6	{
call	36:12	36:60	6	msg_Err
arg	36:21	36:28	7	p_demux
water	36:21	0:0	8	p_demux
arg	36:30	36:49	7	"Failed to open %s"
water	36:30	0:0	8	"Failed to open %s"
arg	36:51	36:60	7	psz_m2ts
water	36:51	0:0	8	psz_m2ts
water	36:61	0:0	6	;
call	37:12	37:27	6	free
arg	37:18	37:27	7	psz_m2ts
water	37:18	0:0	8	psz_m2ts
water	37:28	0:0	6	;
return	38:12	38:31	6	VLC_EGENERIC
water	38:19	0:0	7	VLC_EGENERIC
water	39:8	0:0	6	}
call	40:8	40:23	4	free
arg	40:14	40:23	5	psz_m2ts
water	40:14	0:0	6	psz_m2ts
water	40:24	0:0	4	;
water	41:4	0:0	4	}
decl	47:4	47:71	2	stream_t	*p_parser
op	47:23	0:0	2	=
call	47:25	47:70	3	stream_DemuxNew
arg	47:42	47:49	4	p_demux
water	47:42	0:0	5	p_demux
arg	47:51	47:55	4	"ts"
water	47:51	0:0	5	"ts"
arg	47:57	47:70	4	p_sys->p_out
water	47:57	0:0	5	p_sys
op	47:62	0:0	5	->
water	47:64	0:0	5	p_out
if	48:4	54:4	2	(! p_parser)
cond	48:8	48:9	3	! p_parser
op	48:8	0:0	4	!
water	48:9	0:0	4	p_parser
stmts	49:4	54:4	3	
water	49:4	0:0	4	{
call	50:8	50:56	4	msg_Err
arg	50:17	50:24	5	p_demux
water	50:17	0:0	6	p_demux
arg	50:26	50:56	5	"Failed to create TS demuxer"
water	50:26	0:0	6	"Failed to create TS demuxer"
water	50:57	0:0	4	;
if	51:8	52:35	4	(p_m2ts)
cond	51:12	51:12	5	p_m2ts
water	51:12	0:0	6	p_m2ts
stmts	52:12	52:35	5	
call	52:12	52:34	6	stream_Delete
arg	52:27	52:34	7	p_m2ts
water	52:27	0:0	8	p_m2ts
water	52:35	0:0	6	;
return	53:8	53:27	4	VLC_EGENERIC
water	53:15	0:0	5	VLC_EGENERIC
water	54:4	0:0	4	}
if	56:4	61:4	2	(! p_m2ts)
cond	56:8	56:9	3	! p_m2ts
op	56:8	0:0	4	!
water	56:9	0:0	4	p_m2ts
stmts	57:4	61:4	3	
water	57:4	0:0	4	{
call	58:8	58:48	4	msg_Dbg
arg	58:17	58:24	5	p_demux
water	58:17	0:0	6	p_demux
arg	58:26	58:48	5	"Reusing stream file"
water	58:26	0:0	6	"Reusing stream file"
water	58:49	0:0	4	;
water	59:8	0:0	4	p_m2ts
op	59:15	0:0	4	=
water	59:17	0:0	4	p_sys
op	59:22	0:0	4	->
water	59:24	0:0	4	p_m2ts
water	59:30	0:0	4	;
water	60:8	0:0	4	p_sys
op	60:13	0:0	4	->
water	60:15	0:0	4	p_m2ts
op	60:22	0:0	4	=
water	60:24	0:0	4	NULL
water	60:28	0:0	4	;
water	61:4	0:0	4	}
call	63:4	63:27	2	ClosePlayItem
arg	63:19	63:27	3	p_demux
water	63:19	0:0	4	p_demux
water	63:28	0:0	2	;
water	65:4	0:0	2	p_sys
op	65:9	0:0	2	->
water	65:11	0:0	2	p_clpi
op	65:18	0:0	2	=
water	65:20	0:0	2	p_clpi
water	65:26	0:0	2	;
water	66:4	0:0	2	p_sys
op	66:9	0:0	2	->
water	66:11	0:0	2	p_parser
op	66:20	0:0	2	=
water	66:22	0:0	2	p_parser
water	66:30	0:0	2	;
water	67:4	0:0	2	p_sys
op	67:9	0:0	2	->
water	67:11	0:0	2	p_m2ts
op	67:18	0:0	2	=
water	67:20	0:0	2	p_m2ts
water	67:26	0:0	2	;
water	68:4	0:0	2	p_sys
op	68:9	0:0	2	->
water	68:11	0:0	2	i_play_item
op	68:23	0:0	2	=
water	68:25	0:0	2	i_play_item
water	68:36	0:0	2	;
water	69:4	0:0	2	p_sys
op	69:9	0:0	2	->
water	69:11	0:0	2	i_packet_start
op	69:26	0:0	2	=
call	69:28	69:102	2	GetClpiPacket
arg	69:43	69:50	3	p_demux
water	69:43	0:0	4	p_demux
arg	69:52	69:69	3	&p_sys->i_clpi_ep
op	69:52	0:0	4	&
water	69:53	0:0	4	p_sys
op	69:58	0:0	4	->
water	69:60	0:0	4	i_clpi_ep
arg	69:71	69:82	3	p_mpls_clpi
water	69:71	0:0	4	p_mpls_clpi
arg	69:84	69:102	3	p_item->i_in_time
water	69:84	0:0	4	p_item
op	69:90	0:0	4	->
water	69:92	0:0	4	i_in_time
water	69:103	0:0	2	;
if	70:4	74:4	2	(p_sys -> i_packet_start < 0)
cond	70:8	70:32	3	p_sys -> i_packet_start < 0
water	70:8	0:0	4	p_sys
op	70:13	0:0	4	->
water	70:15	0:0	4	i_packet_start
op	70:30	0:0	4	<
water	70:32	0:0	4	0
stmts	71:4	74:4	3	
water	71:4	0:0	4	{
water	72:8	0:0	4	p_sys
op	72:13	0:0	4	->
water	72:15	0:0	4	i_packet_start
op	72:30	0:0	4	=
water	72:32	0:0	4	0
water	72:33	0:0	4	;
water	73:8	0:0	4	p_sys
op	73:13	0:0	4	->
water	73:15	0:0	4	i_clpi_ep
op	73:25	0:0	4	=
water	73:27	0:0	4	0
water	73:28	0:0	4	;
water	74:4	0:0	4	}
water	75:4	0:0	2	p_sys
op	75:9	0:0	2	->
water	75:11	0:0	2	i_packet_stop
op	75:25	0:0	2	=
call	75:27	75:89	2	GetClpiPacket
arg	75:42	75:49	3	p_demux
water	75:42	0:0	4	p_demux
arg	75:51	75:55	3	NULL
water	75:51	0:0	4	NULL
arg	75:57	75:68	3	p_mpls_clpi
water	75:57	0:0	4	p_mpls_clpi
arg	75:70	75:89	3	p_item->i_out_time
water	75:70	0:0	4	p_item
op	75:76	0:0	4	->
water	75:78	0:0	4	i_out_time
water	75:90	0:0	2	;
if	76:4	77:72	2	(p_sys -> i_packet_stop < 0)
cond	76:8	76:31	3	p_sys -> i_packet_stop < 0
water	76:8	0:0	4	p_sys
op	76:13	0:0	4	->
water	76:15	0:0	4	i_packet_stop
op	76:29	0:0	4	<
water	76:31	0:0	4	0
stmts	77:8	77:72	3	
water	77:8	0:0	4	p_sys
op	77:13	0:0	4	->
water	77:15	0:0	4	i_packet_stop
op	77:29	0:0	4	=
call	77:31	77:51	4	stream_Size
arg	77:44	77:51	5	p_m2ts
water	77:44	0:0	6	p_m2ts
op	77:53	0:0	4	/
water	77:55	0:0	4	BD_TS_PACKET_SIZE
water	77:72	0:0	4	;
water	78:4	0:0	2	p_sys
op	78:9	0:0	2	->
water	78:11	0:0	2	i_packet
op	78:20	0:0	2	=
water	78:22	0:0	2	p_sys
op	78:27	0:0	2	->
water	78:29	0:0	2	i_packet_start
water	78:43	0:0	2	;
water	82:4	0:0	2	p_sys
op	82:9	0:0	2	->
water	82:11	0:0	2	i_packet_headers
op	82:28	0:0	2	=
water	82:30	0:0	2	0
water	82:31	0:0	2	;
if	83:4	88:4	2	(p_clpi -> i_ep_map > 0)
cond	83:8	83:27	3	p_clpi -> i_ep_map > 0
water	83:8	0:0	4	p_clpi
op	83:14	0:0	4	->
water	83:16	0:0	4	i_ep_map
op	83:25	0:0	4	>
water	83:27	0:0	4	0
stmts	84:4	88:4	3	
water	84:4	0:0	4	{
decl	85:8	85:63	4	const bd_clpi_ep_map_t	*p_ep_map
op	85:41	0:0	4	=
op	85:43	0:0	4	&
water	85:44	0:0	4	p_clpi
op	85:50	0:0	4	->
water	85:52	0:0	4	p_ep_map
op	85:60	0:0	4	[
water	85:61	0:0	4	0
op	85:62	0:0	4	]
if	86:8	87:77	4	(p_ep_map -> i_ep > 0)
cond	86:12	86:29	5	p_ep_map -> i_ep > 0
water	86:12	0:0	6	p_ep_map
op	86:20	0:0	6	->
water	86:22	0:0	6	i_ep
op	86:27	0:0	6	>
water	86:29	0:0	6	0
stmts	87:12	87:77	5	
water	87:12	0:0	6	p_sys
op	87:17	0:0	6	->
water	87:19	0:0	6	i_packet_headers
op	87:36	0:0	6	=
call	87:38	87:76	6	__MIN
arg	87:45	87:71	7	p_ep_map->p_ep[0].i_packet
water	87:45	0:0	8	p_ep_map
op	87:53	0:0	8	->
water	87:55	0:0	8	p_ep
op	87:59	0:0	8	[
water	87:60	0:0	8	0
op	87:61	0:0	8	]
op	87:62	0:0	8	.
water	87:63	0:0	8	i_packet
arg	87:73	87:76	7	10
water	87:73	0:0	8	10
water	87:77	0:0	6	;
water	88:4	0:0	4	}
water	89:4	0:0	2	p_sys
op	89:9	0:0	2	->
water	89:11	0:0	2	i_atc_initial
op	89:25	0:0	2	=
op	89:27	0:0	2	-
water	89:28	0:0	2	1
water	89:29	0:0	2	;
water	90:4	0:0	2	p_sys
op	90:9	0:0	2	->
water	90:11	0:0	2	i_atc_current
op	90:25	0:0	2	=
op	90:27	0:0	2	-
water	90:28	0:0	2	1
water	90:29	0:0	2	;
water	91:4	0:0	2	p_sys
op	91:9	0:0	2	->
water	91:11	0:0	2	i_atc_last
op	91:25	0:0	2	=
op	91:27	0:0	2	-
water	91:28	0:0	2	1
water	91:29	0:0	2	;
water	92:4	0:0	2	p_sys
op	92:9	0:0	2	->
water	92:11	0:0	2	i_atc_wrap
op	92:25	0:0	2	=
water	92:27	0:0	2	0
water	92:28	0:0	2	;
return	93:4	93:22	2	VLC_SUCCESS
water	93:11	0:0	3	VLC_SUCCESS

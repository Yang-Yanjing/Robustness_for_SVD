func	2:0	27:0	0	static void	DisplayBuffer
params	2:25	0:0	1	
param	2:26	2:49	2	picture_sys_t *	p_picsys
param	2:51	2:64	2	bool	b_render
stmnts	0:0	26:48	1	
decl	4:4	4:38	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	p_picsys
op	4:31	0:0	2	->
water	4:33	0:0	2	p_dec
decl	5:4	5:39	2	decoder_sys_t	*p_sys
op	5:25	0:0	2	=
water	5:27	0:0	2	p_dec
op	5:32	0:0	2	->
water	5:34	0:0	2	p_sys
if	6:4	7:14	2	(! p_picsys -> b_valid)
cond	6:8	6:19	3	! p_picsys -> b_valid
op	6:8	0:0	4	!
water	6:9	0:0	4	p_picsys
op	6:17	0:0	4	->
water	6:19	0:0	4	b_valid
stmts	7:8	7:14	3	
return	7:8	7:14	4	
call	8:4	8:45	2	vlc_mutex_lock
arg	8:19	8:45	3	get_android_opaque_mutex()
call	8:19	8:44	4	get_android_opaque_mutex
water	8:46	0:0	2	;
if	10:4	13:4	2	(! p_picsys -> b_valid)
cond	10:8	10:19	3	! p_picsys -> b_valid
op	10:8	0:0	4	!
water	10:9	0:0	4	p_picsys
op	10:17	0:0	4	->
water	10:19	0:0	4	b_valid
stmts	10:28	13:4	3	
water	10:28	0:0	4	{
call	11:8	11:51	4	vlc_mutex_unlock
arg	11:25	11:51	5	get_android_opaque_mutex()
call	11:25	11:50	6	get_android_opaque_mutex
water	11:52	0:0	4	;
return	12:8	12:14	4	
water	13:4	0:0	4	}
decl	14:4	14:40	2	uint32_t	i_index
op	14:21	0:0	2	=
water	14:23	0:0	2	p_picsys
op	14:31	0:0	2	->
water	14:33	0:0	2	i_index
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	inflight_picture
op	15:27	0:0	2	[
water	15:28	0:0	2	i_index
op	15:35	0:0	2	]
op	15:37	0:0	2	=
water	15:39	0:0	2	NULL
water	15:43	0:0	2	;
decl	17:4	17:22	2	JNIEnv	*env
op	17:16	0:0	2	=
water	17:18	0:0	2	NULL
call	18:4	18:39	2	jni_attach_thread
arg	18:22	18:26	3	&env
op	18:22	0:0	4	&
water	18:23	0:0	4	env
arg	18:28	18:39	3	THREAD_NAME
water	18:28	0:0	4	THREAD_NAME
water	18:40	0:0	2	;
water	19:4	0:0	2	(
op	19:5	0:0	2	*
water	19:6	0:0	2	env
water	19:9	0:0	2	)
op	19:10	0:0	2	->
call	19:12	19:93	2	CallVoidMethod
arg	19:27	19:30	3	env
water	19:27	0:0	4	env
arg	19:32	19:44	3	p_sys->codec
water	19:32	0:0	4	p_sys
op	19:37	0:0	4	->
water	19:39	0:0	4	codec
arg	19:46	19:74	3	p_sys->release_output_buffer
water	19:46	0:0	4	p_sys
op	19:51	0:0	4	->
water	19:53	0:0	4	release_output_buffer
arg	19:76	19:83	3	i_index
water	19:76	0:0	4	i_index
arg	19:85	19:93	3	b_render
water	19:85	0:0	4	b_render
water	19:94	0:0	2	;
if	20:4	23:4	2	(( * env ) ->ExceptionOccurred (env ))
cond	20:8	20:37	3	( * env ) ->ExceptionOccurred (env )
water	20:8	0:0	4	(
op	20:9	0:0	4	*
water	20:10	0:0	4	env
water	20:13	0:0	4	)
op	20:14	0:0	4	->
call	20:16	20:37	4	ExceptionOccurred
arg	20:34	20:37	5	env
water	20:34	0:0	6	env
stmts	20:40	23:4	3	
water	20:40	0:0	4	{
call	21:8	21:84	4	msg_Err
arg	21:16	21:21	5	p_dec
water	21:16	0:0	6	p_dec
arg	21:23	21:84	5	"Exception in MediaCodec.releaseOutputBuffer (DisplayBuffer)"
water	21:23	0:0	6	"Exception in MediaCodec.releaseOutputBuffer (DisplayBuffer)"
water	21:85	0:0	4	;
water	22:8	0:0	4	(
op	22:9	0:0	4	*
water	22:10	0:0	4	env
water	22:13	0:0	4	)
op	22:14	0:0	4	->
call	22:16	22:34	4	ExceptionClear
arg	22:31	22:34	5	env
water	22:31	0:0	6	env
water	22:35	0:0	4	;
water	23:4	0:0	4	}
call	24:4	24:22	2	jni_detach_thread
water	24:23	0:0	2	;
water	25:4	0:0	2	p_picsys
op	25:12	0:0	2	->
water	25:14	0:0	2	b_valid
op	25:22	0:0	2	=
water	25:24	0:0	2	false
water	25:29	0:0	2	;
call	26:4	26:47	2	vlc_mutex_unlock
arg	26:21	26:47	3	get_android_opaque_mutex()
call	26:21	26:46	4	get_android_opaque_mutex
water	26:48	0:0	2	;

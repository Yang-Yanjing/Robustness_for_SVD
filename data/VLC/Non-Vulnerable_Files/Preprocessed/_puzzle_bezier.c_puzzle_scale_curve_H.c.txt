func	2:0	65:0	0	point_t *	puzzle_scale_curve_H
params	2:29	0:0	1	
param	2:30	2:45	2	int32_t	i_width
param	2:47	2:62	2	int32_t	i_lines
param	2:64	2:81	2	uint8_t	i_pts_nbr
param	2:83	2:97	2	point_t *	ps_pt
param	2:99	2:119	2	int32_t	i_shape_size
stmnts	4:4	64:20	1	
if	4:4	5:19	2	(ps_pt == NULL)
cond	4:8	4:17	3	ps_pt == NULL
water	4:8	0:0	4	ps_pt
op	4:14	0:0	4	==
water	4:17	0:0	4	NULL
stmts	5:8	5:19	3	
return	5:8	5:19	4	NULL
water	5:15	0:0	5	NULL
decl	6:4	6:53	2	float	f_x_ratio
op	6:21	0:0	2	=
water	6:23	0:0	2	(
water	6:24	0:0	2	(
water	6:25	0:0	2	float
water	6:30	0:0	2	)
water	6:32	0:0	2	i_width
water	6:39	0:0	2	)
op	6:41	0:0	2	/
water	6:43	0:0	2	(
water	6:44	0:0	2	1
op	6:46	0:0	2	-
water	6:48	0:0	2	(
op	6:49	0:0	2	-
water	6:50	0:0	2	1
water	6:51	0:0	2	)
water	6:52	0:0	2	)
decl	7:4	7:57	2	float	f_y_ratio
op	7:21	0:0	2	=
water	7:23	0:0	2	(
water	7:24	0:0	2	(
water	7:25	0:0	2	(
water	7:26	0:0	2	float
water	7:31	0:0	2	)
water	7:32	0:0	2	i_lines
water	7:39	0:0	2	)
op	7:41	0:0	2	/
water	7:43	0:0	2	2
water	7:44	0:0	2	)
op	7:46	0:0	2	/
water	7:48	0:0	2	(
water	7:49	0:0	2	1
op	7:51	0:0	2	-
water	7:53	0:0	2	(
water	7:54	0:0	2	0
water	7:55	0:0	2	)
water	7:56	0:0	2	)
decl	8:4	8:52	2	float	f_x_offset
op	8:21	0:0	2	=
water	8:23	0:0	2	(
water	8:24	0:0	2	(
water	8:25	0:0	2	float
water	8:30	0:0	2	)
water	8:31	0:0	2	i_width
water	8:38	0:0	2	)
op	8:40	0:0	2	/
water	8:42	0:0	2	(
water	8:43	0:0	2	1
op	8:45	0:0	2	-
water	8:47	0:0	2	(
op	8:48	0:0	2	-
water	8:49	0:0	2	1
water	8:50	0:0	2	)
water	8:51	0:0	2	)
decl	9:4	9:24	2	float	f_y_offset
op	9:21	0:0	2	=
water	9:23	0:0	2	0
decl	10:4	10:26	2	float	f_bez_x
water	10:17	0:0	2	,
decl	10:4	10:26	2	float	f_bez_y
decl	11:4	11:29	2	float	f_current_scale
op	11:26	0:0	2	=
water	11:28	0:0	2	1
decl	12:4	12:47	2	uint8_t	i_last_pt
op	12:22	0:0	2	=
water	12:24	0:0	2	(
water	12:25	0:0	2	3
op	12:27	0:0	2	*
water	12:29	0:0	2	(
water	12:30	0:0	2	i_pts_nbr
op	12:39	0:0	2	-
water	12:40	0:0	2	1
water	12:41	0:0	2	)
op	12:43	0:0	2	+
water	12:45	0:0	2	1
water	12:46	0:0	2	)
decl	13:4	13:64	2	point_t	*ps_new_pt
op	13:23	0:0	2	=
call	13:25	13:63	3	malloc
arg	13:33	13:63	4	sizeof(point_t)*i_last_pt
op	13:33	0:0	5	sizeof
water	13:39	0:0	5	(
water	13:41	0:0	5	point_t
water	13:49	0:0	5	)
op	13:51	0:0	5	*
water	13:53	0:0	5	i_last_pt
if	14:4	15:19	2	(ps_new_pt == NULL)
cond	14:8	14:21	3	ps_new_pt == NULL
water	14:8	0:0	4	ps_new_pt
op	14:18	0:0	4	==
water	14:21	0:0	4	NULL
stmts	15:8	15:19	3	
return	15:8	15:19	4	NULL
water	15:15	0:0	5	NULL
decl	16:4	16:21	2	bool	b_fit
op	16:15	0:0	2	=
water	16:17	0:0	2	true
do	18:4	47:4	2	(( ! b_fit ) && ( f_current_scale > 0 . 1 ))
cond	48:11	48:43	3	( ! b_fit ) && ( f_current_scale > 0 . 1 )
water	48:11	0:0	4	(
op	48:12	0:0	4	!
water	48:13	0:0	4	b_fit
water	48:18	0:0	4	)
op	48:20	0:0	4	&&
water	48:23	0:0	4	(
water	48:24	0:0	4	f_current_scale
op	48:39	0:0	4	>
water	48:40	0:0	4	0
op	48:41	0:0	4	.
water	48:42	0:0	4	1
water	48:43	0:0	4	)
stmts	18:7	47:4	3	
water	18:7	0:0	4	{
water	19:8	0:0	4	b_fit
op	19:14	0:0	4	=
water	19:16	0:0	4	true
water	19:20	0:0	4	;
for	20:8	28:8	4	( uint8_t i_p = 0 ;i_p < i_last_pt;i_p ++)
forinit	0:0	20:28	5	 uint8_t i_p = 0 ;
decl	20:13	20:28	6	uint8_t	i_p
op	20:25	0:0	6	=
water	20:27	0:0	6	0
cond	20:30	20:36	5	i_p < i_last_pt
water	20:30	0:0	6	i_p
op	20:34	0:0	6	<
water	20:36	0:0	6	i_last_pt
forexpr	20:47	20:50	5	i_p ++
water	20:47	0:0	6	i_p
op	20:50	0:0	6	++
stmts	20:54	28:8	5	
water	20:54	0:0	6	{
if	21:12	22:76	6	(i_p == 0 || i_p == 1)
cond	21:17	21:36	7	i_p == 0 || i_p == 1
water	21:17	0:0	8	i_p
op	21:21	0:0	8	==
water	21:24	0:0	8	0
op	21:26	0:0	8	||
water	21:29	0:0	8	i_p
op	21:33	0:0	8	==
water	21:36	0:0	8	1
stmts	22:16	22:76	7	
water	22:16	0:0	8	ps_new_pt
op	22:25	0:0	8	[
water	22:26	0:0	8	i_p
op	22:29	0:0	8	]
op	22:30	0:0	8	.
water	22:31	0:0	8	f_x
op	22:35	0:0	8	=
water	22:37	0:0	8	ps_pt
op	22:42	0:0	8	[
water	22:43	0:0	8	i_p
op	22:46	0:0	8	]
op	22:47	0:0	8	.
water	22:48	0:0	8	f_x
op	22:52	0:0	8	*
water	22:54	0:0	8	f_x_ratio
op	22:64	0:0	8	+
water	22:66	0:0	8	f_x_offset
water	22:76	0:0	8	;
else	23:12	24:76	6
stmts	23:17	24:76	7	
if	23:17	24:76	8	(i_p == i_last_pt - 2 || i_p == i_last_pt - 1)
cond	23:22	23:65	9	i_p == i_last_pt - 2 || i_p == i_last_pt - 1
water	23:22	0:0	10	i_p
op	23:26	0:0	10	==
water	23:29	0:0	10	i_last_pt
op	23:39	0:0	10	-
water	23:41	0:0	10	2
op	23:43	0:0	10	||
water	23:46	0:0	10	i_p
op	23:50	0:0	10	==
water	23:53	0:0	10	i_last_pt
op	23:63	0:0	10	-
water	23:65	0:0	10	1
stmts	24:16	24:76	9	
water	24:16	0:0	10	ps_new_pt
op	24:25	0:0	10	[
water	24:26	0:0	10	i_p
op	24:29	0:0	10	]
op	24:30	0:0	10	.
water	24:31	0:0	10	f_x
op	24:35	0:0	10	=
water	24:37	0:0	10	ps_pt
op	24:42	0:0	10	[
water	24:43	0:0	10	i_p
op	24:46	0:0	10	]
op	24:47	0:0	10	.
water	24:48	0:0	10	f_x
op	24:52	0:0	10	*
water	24:54	0:0	10	f_x_ratio
op	24:64	0:0	10	+
water	24:66	0:0	10	f_x_offset
water	24:76	0:0	10	;
else	25:12	26:94	6
stmts	26:16	26:94	7	
water	26:16	0:0	8	ps_new_pt
op	26:25	0:0	8	[
water	26:26	0:0	8	i_p
op	26:29	0:0	8	]
op	26:30	0:0	8	.
water	26:31	0:0	8	f_x
op	26:35	0:0	8	=
water	26:37	0:0	8	ps_pt
op	26:42	0:0	8	[
water	26:43	0:0	8	i_p
op	26:46	0:0	8	]
op	26:47	0:0	8	.
water	26:48	0:0	8	f_x
op	26:52	0:0	8	*
water	26:54	0:0	8	f_x_ratio
op	26:64	0:0	8	*
water	26:66	0:0	8	f_current_scale
op	26:82	0:0	8	+
water	26:84	0:0	8	f_x_offset
water	26:94	0:0	8	;
water	27:12	0:0	6	ps_new_pt
op	27:21	0:0	6	[
water	27:22	0:0	6	i_p
op	27:25	0:0	6	]
op	27:26	0:0	6	.
water	27:27	0:0	6	f_y
op	27:31	0:0	6	=
water	27:33	0:0	6	ps_pt
op	27:38	0:0	6	[
water	27:39	0:0	6	i_p
op	27:42	0:0	6	]
op	27:43	0:0	6	.
water	27:44	0:0	6	f_y
op	27:48	0:0	6	*
water	27:50	0:0	6	f_y_ratio
op	27:60	0:0	6	*
water	27:62	0:0	6	f_current_scale
op	27:78	0:0	6	+
water	27:80	0:0	6	f_y_offset
water	27:90	0:0	6	;
water	28:8	0:0	6	}
for	29:8	44:8	4	( float f_t = 0 ;f_t <= i_pts_nbr - 1;f_t += 0 . 1)
forinit	0:0	29:26	5	 float f_t = 0 ;
decl	29:13	29:26	6	float	f_t
op	29:23	0:0	6	=
water	29:25	0:0	6	0
cond	29:28	29:47	5	f_t <= i_pts_nbr - 1
water	29:28	0:0	6	f_t
op	29:32	0:0	6	<=
water	29:35	0:0	6	i_pts_nbr
op	29:45	0:0	6	-
water	29:47	0:0	6	1
forexpr	29:50	29:59	5	f_t += 0 . 1
water	29:50	0:0	6	f_t
op	29:54	0:0	6	+=
water	29:57	0:0	6	0
op	29:58	0:0	6	.
water	29:59	0:0	6	1
stmts	29:63	44:8	5	
water	29:63	0:0	6	{
decl	30:12	30:40	6	int8_t	i_main_t
op	30:28	0:0	6	=
call	30:30	30:39	7	floor
arg	30:36	30:39	8	f_t
water	30:36	0:0	9	f_t
if	31:12	32:40	6	(i_main_t == i_pts_nbr - 1)
cond	31:17	31:41	7	i_main_t == i_pts_nbr - 1
water	31:17	0:0	8	i_main_t
op	31:26	0:0	8	==
water	31:29	0:0	8	i_pts_nbr
op	31:39	0:0	8	-
water	31:41	0:0	8	1
stmts	32:16	32:40	7	
water	32:16	0:0	8	i_main_t
op	32:25	0:0	8	=
water	32:27	0:0	8	i_pts_nbr
op	32:37	0:0	8	-
water	32:39	0:0	8	2
water	32:40	0:0	8	;
decl	33:12	33:42	6	float	f_sub_t
op	33:26	0:0	6	=
water	33:28	0:0	6	f_t
op	33:32	0:0	6	-
water	33:34	0:0	6	i_main_t
water	34:12	0:0	6	f_bez_x
op	34:20	0:0	6	=
call	34:22	34:61	6	bezier_val
arg	34:33	34:42	7	ps_new_pt
water	34:33	0:0	8	ps_new_pt
arg	34:43	34:50	7	f_sub_t
water	34:43	0:0	8	f_sub_t
arg	34:51	34:59	7	i_main_t
water	34:51	0:0	8	i_main_t
arg	34:60	34:61	7	x
water	34:60	0:0	8	x
water	34:62	0:0	6	;
water	35:12	0:0	6	f_bez_y
op	35:20	0:0	6	=
call	35:22	35:61	6	bezier_val
arg	35:33	35:42	7	ps_new_pt
water	35:33	0:0	8	ps_new_pt
arg	35:43	35:50	7	f_sub_t
water	35:43	0:0	8	f_sub_t
arg	35:51	35:59	7	i_main_t
water	35:51	0:0	8	i_main_t
arg	35:60	35:61	7	y
water	35:60	0:0	8	y
water	35:62	0:0	6	;
if	36:12	39:12	6	(f_bez_x < ( ( float ) i_width ) / 2)
cond	36:17	36:47	7	f_bez_x < ( ( float ) i_width ) / 2
water	36:17	0:0	8	f_bez_x
op	36:25	0:0	8	<
water	36:27	0:0	8	(
water	36:28	0:0	8	(
water	36:29	0:0	8	float
water	36:34	0:0	8	)
water	36:36	0:0	8	i_width
water	36:43	0:0	8	)
op	36:45	0:0	8	/
water	36:47	0:0	8	2
stmts	36:51	39:12	7	
water	36:51	0:0	8	{
if	37:16	38:33	8	(abs (f_bez_y ) > ( f_bez_x * ( 0 . 9 * ( ( float ) i_lines ) / ( ( float ) i_width ) ) ))
cond	37:21	37:97	9	abs (f_bez_y ) > ( f_bez_x * ( 0 . 9 * ( ( float ) i_lines ) / ( ( float ) i_width ) ) )
call	37:21	37:35	10	abs
arg	37:27	37:35	11	f_bez_y
water	37:27	0:0	12	f_bez_y
op	37:37	0:0	10	>
water	37:39	0:0	10	(
water	37:41	0:0	10	f_bez_x
op	37:49	0:0	10	*
water	37:51	0:0	10	(
water	37:53	0:0	10	0
op	37:54	0:0	10	.
water	37:55	0:0	10	9
op	37:57	0:0	10	*
water	37:59	0:0	10	(
water	37:60	0:0	10	(
water	37:61	0:0	10	float
water	37:66	0:0	10	)
water	37:67	0:0	10	i_lines
water	37:74	0:0	10	)
op	37:76	0:0	10	/
water	37:78	0:0	10	(
water	37:79	0:0	10	(
water	37:80	0:0	10	float
water	37:85	0:0	10	)
water	37:86	0:0	10	i_width
water	37:93	0:0	10	)
water	37:95	0:0	10	)
water	37:97	0:0	10	)
stmts	38:20	38:33	9	
water	38:20	0:0	10	b_fit
op	38:26	0:0	10	=
water	38:28	0:0	10	false
water	38:33	0:0	10	;
water	39:12	0:0	8	}
else	40:12	43:12	6
stmts	40:18	43:12	7	
water	40:18	0:0	8	{
if	41:16	42:33	8	(abs (f_bez_y ) > ( ( ( ( float ) i_width ) - f_bez_x ) * ( 0 . 9 * ( ( float ) i_lines ) / ( ( float ) i_width ) ) ))
cond	41:21	41:120	9	abs (f_bez_y ) > ( ( ( ( float ) i_width ) - f_bez_x ) * ( 0 . 9 * ( ( float ) i_lines ) / ( ( float ) i_width ) ) )
call	41:21	41:35	10	abs
arg	41:27	41:35	11	f_bez_y
water	41:27	0:0	12	f_bez_y
op	41:37	0:0	10	>
water	41:39	0:0	10	(
water	41:41	0:0	10	(
water	41:43	0:0	10	(
water	41:44	0:0	10	(
water	41:45	0:0	10	float
water	41:50	0:0	10	)
water	41:51	0:0	10	i_width
water	41:58	0:0	10	)
op	41:60	0:0	10	-
water	41:62	0:0	10	f_bez_x
water	41:70	0:0	10	)
op	41:72	0:0	10	*
water	41:74	0:0	10	(
water	41:76	0:0	10	0
op	41:77	0:0	10	.
water	41:78	0:0	10	9
op	41:80	0:0	10	*
water	41:82	0:0	10	(
water	41:83	0:0	10	(
water	41:84	0:0	10	float
water	41:89	0:0	10	)
water	41:90	0:0	10	i_lines
water	41:97	0:0	10	)
op	41:99	0:0	10	/
water	41:101	0:0	10	(
water	41:102	0:0	10	(
water	41:103	0:0	10	float
water	41:108	0:0	10	)
water	41:109	0:0	10	i_width
water	41:116	0:0	10	)
water	41:118	0:0	10	)
water	41:120	0:0	10	)
stmts	42:20	42:33	9	
water	42:20	0:0	10	b_fit
op	42:26	0:0	10	=
water	42:28	0:0	10	false
water	42:33	0:0	10	;
water	43:12	0:0	8	}
water	44:8	0:0	6	}
if	45:8	46:51	4	(! b_fit)
cond	45:12	45:13	5	! b_fit
op	45:12	0:0	6	!
water	45:13	0:0	6	b_fit
stmts	46:12	46:51	5	
water	46:12	0:0	6	f_current_scale
op	46:28	0:0	6	=
water	46:30	0:0	6	f_current_scale
op	46:46	0:0	6	*
water	46:48	0:0	6	0
op	46:49	0:0	6	.
water	46:50	0:0	6	9
water	46:51	0:0	6	;
water	47:4	0:0	4	}
water	48:45	0:0	2	;
if	49:4	52:4	2	(! b_fit)
cond	49:8	49:9	3	! b_fit
op	49:8	0:0	4	!
water	49:9	0:0	4	b_fit
stmts	49:16	52:4	3	
water	49:16	0:0	4	{
call	50:8	50:22	4	free
arg	50:13	50:22	5	ps_new_pt
water	50:13	0:0	6	ps_new_pt
water	50:23	0:0	4	;
return	51:8	51:19	4	NULL
water	51:15	0:0	5	NULL
water	52:4	0:0	4	}
water	54:4	0:0	2	f_current_scale
op	54:20	0:0	2	=
water	54:22	0:0	2	f_current_scale
op	54:38	0:0	2	*
water	54:40	0:0	2	(
water	54:41	0:0	2	0
op	54:42	0:0	2	.
water	54:43	0:0	2	5
op	54:45	0:0	2	+
water	54:47	0:0	2	0
op	54:48	0:0	2	.
water	54:49	0:0	2	5
op	54:50	0:0	2	*
water	54:52	0:0	2	(
water	54:53	0:0	2	float
water	54:58	0:0	2	)
water	54:59	0:0	2	i_shape_size
op	54:72	0:0	2	/
water	54:74	0:0	2	100
water	54:77	0:0	2	)
water	54:78	0:0	2	;
for	55:4	63:4	2	( uint8_t i_p = 0 ;i_p < i_last_pt;i_p ++)
forinit	0:0	55:24	3	 uint8_t i_p = 0 ;
decl	55:9	55:24	4	uint8_t	i_p
op	55:21	0:0	4	=
water	55:23	0:0	4	0
cond	55:26	55:32	3	i_p < i_last_pt
water	55:26	0:0	4	i_p
op	55:30	0:0	4	<
water	55:32	0:0	4	i_last_pt
forexpr	55:43	55:46	3	i_p ++
water	55:43	0:0	4	i_p
op	55:46	0:0	4	++
stmts	55:50	63:4	3	
water	55:50	0:0	4	{
if	56:8	57:72	4	(i_p == 0 || i_p == 1)
cond	56:13	56:32	5	i_p == 0 || i_p == 1
water	56:13	0:0	6	i_p
op	56:17	0:0	6	==
water	56:20	0:0	6	0
op	56:22	0:0	6	||
water	56:25	0:0	6	i_p
op	56:29	0:0	6	==
water	56:32	0:0	6	1
stmts	57:12	57:72	5	
water	57:12	0:0	6	ps_new_pt
op	57:21	0:0	6	[
water	57:22	0:0	6	i_p
op	57:25	0:0	6	]
op	57:26	0:0	6	.
water	57:27	0:0	6	f_x
op	57:31	0:0	6	=
water	57:33	0:0	6	ps_pt
op	57:38	0:0	6	[
water	57:39	0:0	6	i_p
op	57:42	0:0	6	]
op	57:43	0:0	6	.
water	57:44	0:0	6	f_x
op	57:48	0:0	6	*
water	57:50	0:0	6	f_x_ratio
op	57:60	0:0	6	+
water	57:62	0:0	6	f_x_offset
water	57:72	0:0	6	;
else	58:8	59:72	4
stmts	58:13	59:72	5	
if	58:13	59:72	6	(i_p == i_last_pt - 2 || i_p == i_last_pt - 1)
cond	58:18	58:61	7	i_p == i_last_pt - 2 || i_p == i_last_pt - 1
water	58:18	0:0	8	i_p
op	58:22	0:0	8	==
water	58:25	0:0	8	i_last_pt
op	58:35	0:0	8	-
water	58:37	0:0	8	2
op	58:39	0:0	8	||
water	58:42	0:0	8	i_p
op	58:46	0:0	8	==
water	58:49	0:0	8	i_last_pt
op	58:59	0:0	8	-
water	58:61	0:0	8	1
stmts	59:12	59:72	7	
water	59:12	0:0	8	ps_new_pt
op	59:21	0:0	8	[
water	59:22	0:0	8	i_p
op	59:25	0:0	8	]
op	59:26	0:0	8	.
water	59:27	0:0	8	f_x
op	59:31	0:0	8	=
water	59:33	0:0	8	ps_pt
op	59:38	0:0	8	[
water	59:39	0:0	8	i_p
op	59:42	0:0	8	]
op	59:43	0:0	8	.
water	59:44	0:0	8	f_x
op	59:48	0:0	8	*
water	59:50	0:0	8	f_x_ratio
op	59:60	0:0	8	+
water	59:62	0:0	8	f_x_offset
water	59:72	0:0	8	;
else	60:8	61:90	4
stmts	61:12	61:90	5	
water	61:12	0:0	6	ps_new_pt
op	61:21	0:0	6	[
water	61:22	0:0	6	i_p
op	61:25	0:0	6	]
op	61:26	0:0	6	.
water	61:27	0:0	6	f_x
op	61:31	0:0	6	=
water	61:33	0:0	6	ps_pt
op	61:38	0:0	6	[
water	61:39	0:0	6	i_p
op	61:42	0:0	6	]
op	61:43	0:0	6	.
water	61:44	0:0	6	f_x
op	61:48	0:0	6	*
water	61:50	0:0	6	f_x_ratio
op	61:60	0:0	6	*
water	61:62	0:0	6	f_current_scale
op	61:78	0:0	6	+
water	61:80	0:0	6	f_x_offset
water	61:90	0:0	6	;
water	62:8	0:0	4	ps_new_pt
op	62:17	0:0	4	[
water	62:18	0:0	4	i_p
op	62:21	0:0	4	]
op	62:22	0:0	4	.
water	62:23	0:0	4	f_y
op	62:27	0:0	4	=
water	62:29	0:0	4	ps_pt
op	62:34	0:0	4	[
water	62:35	0:0	4	i_p
op	62:38	0:0	4	]
op	62:39	0:0	4	.
water	62:40	0:0	4	f_y
op	62:44	0:0	4	*
water	62:46	0:0	4	f_y_ratio
op	62:56	0:0	4	*
water	62:58	0:0	4	f_current_scale
op	62:74	0:0	4	+
water	62:76	0:0	4	f_y_offset
water	62:86	0:0	4	;
water	63:4	0:0	4	}
return	64:4	64:20	2	ps_new_pt
water	64:11	0:0	3	ps_new_pt

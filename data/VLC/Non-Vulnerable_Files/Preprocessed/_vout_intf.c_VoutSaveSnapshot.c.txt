func	2:0	54:0	0	static void	VoutSaveSnapshot
params	2:28	0:0	1	
param	2:30	2:52	2	vout_thread_t *	p_vout
stmnts	0:0	53:20	1	
decl	4:4	4:65	2	char	*psz_path
op	4:19	0:0	2	=
call	4:21	4:64	3	var_InheritString
arg	4:40	4:46	4	p_vout
water	4:40	0:0	5	p_vout
arg	4:48	4:64	4	"snapshot-path"
water	4:48	0:0	5	"snapshot-path"
decl	5:4	5:69	2	char	*psz_format
op	5:21	0:0	2	=
call	5:23	5:68	3	var_InheritString
arg	5:42	5:48	4	p_vout
water	5:42	0:0	5	p_vout
arg	5:50	5:68	4	"snapshot-format"
water	5:50	0:0	5	"snapshot-format"
decl	6:4	6:69	2	char	*psz_prefix
op	6:21	0:0	2	=
call	6:23	6:68	3	var_InheritString
arg	6:42	6:48	4	p_vout
water	6:42	0:0	5	p_vout
arg	6:50	6:68	4	"snapshot-prefix"
water	6:50	0:0	5	"snapshot-prefix"
decl	8:4	8:24	2	picture_t	*p_picture
decl	9:4	9:20	2	block_t	*p_image
decl	10:4	10:22	2	video_format_t	fmt
if	13:4	18:4	2	(vout_GetSnapshot (p_vout ,& p_image ,& p_picture ,& fmt ,psz_format ,500 * 1000 ))
cond	13:8	13:83	3	vout_GetSnapshot (p_vout ,& p_image ,& p_picture ,& fmt ,psz_format ,500 * 1000 )
call	13:8	13:83	4	vout_GetSnapshot
arg	13:26	13:32	5	p_vout
water	13:26	0:0	6	p_vout
arg	13:34	13:42	5	&p_image
op	13:34	0:0	6	&
water	13:35	0:0	6	p_image
arg	13:44	13:54	5	&p_picture
op	13:44	0:0	6	&
water	13:45	0:0	6	p_picture
arg	13:56	13:60	5	&fmt
op	13:56	0:0	6	&
water	13:57	0:0	6	fmt
arg	13:62	13:72	5	psz_format
water	13:62	0:0	6	psz_format
arg	13:74	13:83	5	500*1000
water	13:74	0:0	6	500
op	13:77	0:0	6	*
water	13:78	0:0	6	1000
stmts	14:4	18:4	3	
water	14:4	0:0	4	{
water	15:8	0:0	4	p_picture
op	15:18	0:0	4	=
water	15:20	0:0	4	NULL
water	15:24	0:0	4	;
water	16:8	0:0	4	p_image
op	16:16	0:0	4	=
water	16:18	0:0	4	NULL
water	16:22	0:0	4	;
goto	17:8	17:17	4	exit
water	17:13	0:0	5	exit
water	18:4	0:0	4	}
if	19:4	27:4	2	(! psz_path)
cond	19:8	19:9	3	! psz_path
op	19:8	0:0	4	!
water	19:9	0:0	4	psz_path
stmts	20:4	27:4	3	
water	20:4	0:0	4	{
water	21:8	0:0	4	psz_path
op	21:17	0:0	4	=
call	21:19	21:46	4	vout_snapshot_GetDirectory
water	21:47	0:0	4	;
if	22:8	26:8	4	(! psz_path)
cond	22:12	22:13	5	! psz_path
op	22:12	0:0	6	!
water	22:13	0:0	6	psz_path
stmts	23:8	26:8	5	
water	23:8	0:0	6	{
call	24:12	24:63	6	msg_Err
arg	24:21	24:27	7	p_vout
water	24:21	0:0	8	p_vout
arg	24:29	24:63	7	"no path specified for snapshots"
water	24:29	0:0	8	"no path specified for snapshots"
water	24:64	0:0	6	;
goto	25:12	25:21	6	exit
water	25:17	0:0	7	exit
water	26:8	0:0	6	}
water	27:4	0:0	4	}
decl	28:4	28:32	2	vout_snapshot_save_cfg_t	cfg
call	29:4	29:33	2	memset
arg	29:12	29:16	3	&cfg
op	29:12	0:0	4	&
water	29:13	0:0	4	cfg
arg	29:18	29:19	3	0
water	29:18	0:0	4	0
arg	29:21	29:33	3	sizeof(cfg)
op	29:21	0:0	4	sizeof
water	29:27	0:0	4	(
water	29:28	0:0	4	cfg
water	29:31	0:0	4	)
water	29:34	0:0	2	;
water	30:4	0:0	2	cfg
op	30:7	0:0	2	.
water	30:8	0:0	2	is_sequential
op	30:22	0:0	2	=
call	30:24	30:71	2	var_InheritBool
arg	30:41	30:47	3	p_vout
water	30:41	0:0	4	p_vout
arg	30:49	30:71	3	"snapshot-sequential"
water	30:49	0:0	4	"snapshot-sequential"
water	30:72	0:0	2	;
water	31:4	0:0	2	cfg
op	31:7	0:0	2	.
water	31:8	0:0	2	sequence
op	31:17	0:0	2	=
call	31:19	31:58	2	var_GetInteger
arg	31:35	31:41	3	p_vout
water	31:35	0:0	4	p_vout
arg	31:43	31:58	3	"snapshot-num"
water	31:43	0:0	4	"snapshot-num"
water	31:59	0:0	2	;
water	32:4	0:0	2	cfg
op	32:7	0:0	2	.
water	32:8	0:0	2	path
op	32:13	0:0	2	=
water	32:15	0:0	2	psz_path
water	32:23	0:0	2	;
water	33:4	0:0	2	cfg
op	33:7	0:0	2	.
water	33:8	0:0	2	format
op	33:15	0:0	2	=
water	33:17	0:0	2	psz_format
water	33:27	0:0	2	;
water	34:4	0:0	2	cfg
op	34:7	0:0	2	.
water	34:8	0:0	2	prefix_fmt
op	34:19	0:0	2	=
water	34:21	0:0	2	psz_prefix
water	34:31	0:0	2	;
decl	35:4	35:22	2	char	*psz_filename
decl	36:4	36:19	2	int	i_sequence
if	37:4	39:17	2	(vout_snapshot_SaveImage (& psz_filename ,& i_sequence ,p_image ,p_vout ,& cfg ))
cond	37:8	38:55	3	vout_snapshot_SaveImage (& psz_filename ,& i_sequence ,p_image ,p_vout ,& cfg )
call	37:8	38:55	4	vout_snapshot_SaveImage
arg	37:33	37:46	5	&psz_filename
op	37:33	0:0	6	&
water	37:34	0:0	6	psz_filename
arg	37:48	37:59	5	&i_sequence
op	37:48	0:0	6	&
water	37:49	0:0	6	i_sequence
arg	38:33	38:40	5	p_image
water	38:33	0:0	6	p_image
arg	38:42	38:48	5	p_vout
water	38:42	0:0	6	p_vout
arg	38:50	38:55	5	&cfg
op	38:50	0:0	6	&
water	38:51	0:0	6	cfg
stmts	39:8	39:17	3	
goto	39:8	39:17	4	exit
water	39:13	0:0	5	exit
if	40:4	41:64	2	(cfg . is_sequential)
cond	40:8	40:12	3	cfg . is_sequential
water	40:8	0:0	4	cfg
op	40:11	0:0	4	.
water	40:12	0:0	4	is_sequential
stmts	41:8	41:64	3	
call	41:8	41:63	4	var_SetInteger
arg	41:24	41:30	5	p_vout
water	41:24	0:0	6	p_vout
arg	41:32	41:46	5	"snapshot-num"
water	41:32	0:0	6	"snapshot-num"
arg	41:48	41:63	5	i_sequence+1
water	41:48	0:0	6	i_sequence
op	41:59	0:0	6	+
water	41:61	0:0	6	1
water	41:64	0:0	4	;
call	42:4	42:53	2	VoutOsdSnapshot
arg	42:21	42:27	3	p_vout
water	42:21	0:0	4	p_vout
arg	42:29	42:38	3	p_picture
water	42:29	0:0	4	p_picture
arg	42:40	42:53	3	psz_filename
water	42:40	0:0	4	psz_filename
water	42:54	0:0	2	;
call	44:4	44:67	2	var_SetString
arg	44:19	44:35	3	p_vout->p_libvlc
water	44:19	0:0	4	p_vout
op	44:25	0:0	4	->
water	44:27	0:0	4	p_libvlc
arg	44:37	44:52	3	"snapshot-file"
water	44:37	0:0	4	"snapshot-file"
arg	44:54	44:67	3	psz_filename
water	44:54	0:0	4	psz_filename
water	44:68	0:0	2	;
call	45:4	45:23	2	free
arg	45:10	45:23	3	psz_filename
water	45:10	0:0	4	psz_filename
water	45:24	0:0	2	;
label	46:0	46:4	2	exit :
if	47:4	48:32	2	(p_image)
cond	47:8	47:8	3	p_image
water	47:8	0:0	4	p_image
stmts	48:8	48:32	3	
call	48:8	48:31	4	block_Release
arg	48:23	48:31	5	p_image
water	48:23	0:0	6	p_image
water	48:32	0:0	4	;
if	49:4	50:36	2	(p_picture)
cond	49:8	49:8	3	p_picture
water	49:8	0:0	4	p_picture
stmts	50:8	50:36	3	
call	50:8	50:35	4	picture_Release
arg	50:25	50:35	5	p_picture
water	50:25	0:0	6	p_picture
water	50:36	0:0	4	;
call	51:4	51:21	2	free
arg	51:10	51:21	3	psz_prefix
water	51:10	0:0	4	psz_prefix
water	51:22	0:0	2	;
call	52:4	52:21	2	free
arg	52:10	52:21	3	psz_format
water	52:10	0:0	4	psz_format
water	52:22	0:0	2	;
call	53:4	53:19	2	free
arg	53:10	53:19	3	psz_path
water	53:10	0:0	4	psz_path
water	53:20	0:0	2	;

func	2:0	86:0	0	static void	I422_YUY2
params	2:21	0:0	1	
param	2:23	2:41	2	filter_t *	p_filter
param	2:43	2:62	2	picture_t *	p_source
param	3:43	3:61	2	picture_t *	p_dest
stmnts	0:0	83:11	1	
decl	5:4	5:41	2	uint8_t	*p_line
op	5:20	0:0	2	=
water	5:22	0:0	2	p_dest
op	5:28	0:0	2	->
water	5:30	0:0	2	p
op	5:31	0:0	2	->
water	5:33	0:0	2	p_pixels
decl	6:4	6:37	2	uint8_t	*p_y
op	6:17	0:0	2	=
water	6:19	0:0	2	p_source
op	6:27	0:0	2	->
water	6:29	0:0	2	Y_PIXELS
decl	7:4	7:37	2	uint8_t	*p_u
op	7:17	0:0	2	=
water	7:19	0:0	2	p_source
op	7:27	0:0	2	->
water	7:29	0:0	2	U_PIXELS
decl	8:4	8:37	2	uint8_t	*p_v
op	8:17	0:0	2	=
water	8:19	0:0	2	p_source
op	8:27	0:0	2	->
water	8:29	0:0	2	V_PIXELS
decl	9:4	9:16	2	int	i_x
water	9:11	0:0	2	,
decl	9:4	9:16	2	int	i_y
decl	10:4	12:68	2	const int	i_source_margin
op	10:30	0:0	2	=
water	10:32	0:0	2	p_source
op	10:40	0:0	2	->
water	10:42	0:0	2	p
op	10:43	0:0	2	[
water	10:44	0:0	2	0
op	10:45	0:0	2	]
op	10:46	0:0	2	.
water	10:47	0:0	2	i_pitch
op	11:33	0:0	2	-
water	11:35	0:0	2	p_source
op	11:43	0:0	2	->
water	11:45	0:0	2	p
op	11:46	0:0	2	[
water	11:47	0:0	2	0
op	11:48	0:0	2	]
op	11:49	0:0	2	.
water	11:50	0:0	2	i_visible_pitch
op	12:33	0:0	2	-
water	12:35	0:0	2	p_filter
op	12:43	0:0	2	->
water	12:45	0:0	2	fmt_in
op	12:51	0:0	2	.
water	12:52	0:0	2	video
op	12:57	0:0	2	.
water	12:58	0:0	2	i_x_offset
decl	13:4	15:72	2	const int	i_source_margin_c
op	13:32	0:0	2	=
water	13:34	0:0	2	p_source
op	13:42	0:0	2	->
water	13:44	0:0	2	p
op	13:45	0:0	2	[
water	13:46	0:0	2	1
op	13:47	0:0	2	]
op	13:48	0:0	2	.
water	13:49	0:0	2	i_pitch
op	14:33	0:0	2	-
water	14:35	0:0	2	p_source
op	14:43	0:0	2	->
water	14:45	0:0	2	p
op	14:46	0:0	2	[
water	14:47	0:0	2	1
op	14:48	0:0	2	]
op	14:49	0:0	2	.
water	14:50	0:0	2	i_visible_pitch
op	15:33	0:0	2	-
water	15:35	0:0	2	(
water	15:37	0:0	2	p_filter
op	15:45	0:0	2	->
water	15:47	0:0	2	fmt_in
op	15:53	0:0	2	.
water	15:54	0:0	2	video
op	15:59	0:0	2	.
water	15:60	0:0	2	i_x_offset
water	15:71	0:0	2	)
decl	16:4	18:75	2	const int	i_dest_margin
op	16:28	0:0	2	=
water	16:30	0:0	2	p_dest
op	16:36	0:0	2	->
water	16:38	0:0	2	p
op	16:39	0:0	2	->
water	16:41	0:0	2	i_pitch
op	17:31	0:0	2	-
water	17:33	0:0	2	p_dest
op	17:39	0:0	2	->
water	17:41	0:0	2	p
op	17:42	0:0	2	->
water	17:44	0:0	2	i_visible_pitch
op	18:31	0:0	2	-
water	18:33	0:0	2	(
water	18:35	0:0	2	p_filter
op	18:43	0:0	2	->
water	18:45	0:0	2	fmt_out
op	18:52	0:0	2	.
water	18:53	0:0	2	video
op	18:58	0:0	2	.
water	18:59	0:0	2	i_x_offset
op	18:70	0:0	2	*
water	18:72	0:0	2	2
water	18:74	0:0	2	)
if	20:4	39:4	2	(0 == ( 15 & ( p_source -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_line | ( intptr_t ) p_y ) ) ))
cond	20:8	21:41	3	0 == ( 15 & ( p_source -> p [ Y_PLANE ] . i_pitch | p_dest -> p -> i_pitch | ( ( intptr_t ) p_line | ( intptr_t ) p_y ) ) )
water	20:8	0:0	4	0
op	20:10	0:0	4	==
water	20:13	0:0	4	(
water	20:14	0:0	4	15
op	20:17	0:0	4	&
water	20:19	0:0	4	(
water	20:20	0:0	4	p_source
op	20:28	0:0	4	->
water	20:30	0:0	4	p
op	20:31	0:0	4	[
water	20:32	0:0	4	Y_PLANE
op	20:39	0:0	4	]
op	20:40	0:0	4	.
water	20:41	0:0	4	i_pitch
op	20:48	0:0	4	|
water	20:49	0:0	4	p_dest
op	20:55	0:0	4	->
water	20:57	0:0	4	p
op	20:58	0:0	4	->
water	20:60	0:0	4	i_pitch
op	20:67	0:0	4	|
water	21:8	0:0	4	(
water	21:9	0:0	4	(
water	21:10	0:0	4	intptr_t
water	21:18	0:0	4	)
water	21:19	0:0	4	p_line
op	21:25	0:0	4	|
water	21:26	0:0	4	(
water	21:27	0:0	4	intptr_t
water	21:35	0:0	4	)
water	21:36	0:0	4	p_y
water	21:39	0:0	4	)
water	21:40	0:0	4	)
water	21:41	0:0	4	)
stmts	22:4	39:4	3	
water	22:4	0:0	4	{
for	24:8	38:8	4	(i_y = ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height ) ;i_y --;)
forinit	24:13	24:97	5	i_y = ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height ) ;
water	24:13	0:0	6	i_y
op	24:17	0:0	6	=
water	24:19	0:0	6	(
water	24:20	0:0	6	p_filter
op	24:28	0:0	6	->
water	24:30	0:0	6	fmt_in
op	24:36	0:0	6	.
water	24:37	0:0	6	video
op	24:42	0:0	6	.
water	24:43	0:0	6	i_y_offset
op	24:54	0:0	6	+
water	24:56	0:0	6	p_filter
op	24:64	0:0	6	->
water	24:66	0:0	6	fmt_in
op	24:72	0:0	6	.
water	24:73	0:0	6	video
op	24:78	0:0	6	.
water	24:79	0:0	6	i_visible_height
water	24:95	0:0	6	)
water	24:97	0:0	6	;
cond	24:99	24:102	5	i_y --
water	24:99	0:0	6	i_y
op	24:102	0:0	6	--
forexpr	0:0	0:0	5	
stmts	25:8	38:8	5	
water	25:8	0:0	6	{
for	26:12	29:12	6	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;i_x --;)
forinit	26:17	26:105	7	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;
water	26:17	0:0	8	i_x
op	26:21	0:0	8	=
water	26:23	0:0	8	(
water	26:24	0:0	8	p_filter
op	26:32	0:0	8	->
water	26:34	0:0	8	fmt_in
op	26:40	0:0	8	.
water	26:41	0:0	8	video
op	26:46	0:0	8	.
water	26:47	0:0	8	i_x_offset
op	26:58	0:0	8	+
water	26:60	0:0	8	p_filter
op	26:68	0:0	8	->
water	26:70	0:0	8	fmt_in
op	26:76	0:0	8	.
water	26:77	0:0	8	video
op	26:82	0:0	8	.
water	26:83	0:0	8	i_visible_width
water	26:98	0:0	8	)
op	26:100	0:0	8	/
water	26:102	0:0	8	16
water	26:105	0:0	8	;
cond	26:107	26:110	7	i_x --
water	26:107	0:0	8	i_x
op	26:110	0:0	8	--
forexpr	0:0	0:0	7	
stmts	27:12	29:12	7	
water	27:12	0:0	8	{
call	28:16	28:52	8	SSE2_CALL
arg	28:27	28:52	9	SSE2_YUV422_YUYV_ALIGNED
water	28:27	0:0	10	SSE2_YUV422_YUYV_ALIGNED
water	28:53	0:0	8	;
water	29:12	0:0	8	}
for	30:12	33:12	6	(i_x = ( ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) % 16 ) / 2 ;i_x --;)
forinit	30:17	30:112	7	i_x = ( ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) % 16 ) / 2 ;
water	30:17	0:0	8	i_x
op	30:21	0:0	8	=
water	30:23	0:0	8	(
water	30:25	0:0	8	(
water	30:26	0:0	8	p_filter
op	30:34	0:0	8	->
water	30:36	0:0	8	fmt_in
op	30:42	0:0	8	.
water	30:43	0:0	8	video
op	30:48	0:0	8	.
water	30:49	0:0	8	i_x_offset
op	30:60	0:0	8	+
water	30:62	0:0	8	p_filter
op	30:70	0:0	8	->
water	30:72	0:0	8	fmt_in
op	30:78	0:0	8	.
water	30:79	0:0	8	video
op	30:84	0:0	8	.
water	30:85	0:0	8	i_visible_width
water	30:100	0:0	8	)
op	30:102	0:0	8	%
water	30:104	0:0	8	16
water	30:107	0:0	8	)
op	30:109	0:0	8	/
water	30:111	0:0	8	2
water	30:112	0:0	8	;
cond	30:114	30:117	7	i_x --
water	30:114	0:0	8	i_x
op	30:117	0:0	8	--
forexpr	0:0	0:0	7	
stmts	31:12	33:12	7	
water	31:12	0:0	8	{
call	32:16	32:53	8	C_YUV422_YUYV
arg	32:31	32:37	9	p_line
water	32:31	0:0	10	p_line
arg	32:39	32:42	9	p_y
water	32:39	0:0	10	p_y
arg	32:44	32:47	9	p_u
water	32:44	0:0	10	p_u
arg	32:49	32:53	9	p_v
water	32:49	0:0	10	p_v
water	32:54	0:0	8	;
water	33:12	0:0	8	}
water	34:12	0:0	6	p_y
op	34:16	0:0	6	+=
water	34:19	0:0	6	i_source_margin
water	34:34	0:0	6	;
water	35:12	0:0	6	p_u
op	35:16	0:0	6	+=
water	35:19	0:0	6	i_source_margin_c
water	35:36	0:0	6	;
water	36:12	0:0	6	p_v
op	36:16	0:0	6	+=
water	36:19	0:0	6	i_source_margin_c
water	36:36	0:0	6	;
water	37:12	0:0	6	p_line
op	37:19	0:0	6	+=
water	37:22	0:0	6	i_dest_margin
water	37:35	0:0	6	;
water	38:8	0:0	6	}
water	39:4	0:0	4	}
else	40:4	57:4	2
stmts	40:9	57:4	3	
water	40:9	0:0	4	{
for	42:8	56:8	4	(i_y = ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height ) ;i_y --;)
forinit	42:13	42:97	5	i_y = ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height ) ;
water	42:13	0:0	6	i_y
op	42:17	0:0	6	=
water	42:19	0:0	6	(
water	42:20	0:0	6	p_filter
op	42:28	0:0	6	->
water	42:30	0:0	6	fmt_in
op	42:36	0:0	6	.
water	42:37	0:0	6	video
op	42:42	0:0	6	.
water	42:43	0:0	6	i_y_offset
op	42:54	0:0	6	+
water	42:56	0:0	6	p_filter
op	42:64	0:0	6	->
water	42:66	0:0	6	fmt_in
op	42:72	0:0	6	.
water	42:73	0:0	6	video
op	42:78	0:0	6	.
water	42:79	0:0	6	i_visible_height
water	42:95	0:0	6	)
water	42:97	0:0	6	;
cond	42:99	42:102	5	i_y --
water	42:99	0:0	6	i_y
op	42:102	0:0	6	--
forexpr	0:0	0:0	5	
stmts	43:8	56:8	5	
water	43:8	0:0	6	{
for	44:12	47:12	6	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;i_x --;)
forinit	44:17	44:105	7	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 16 ;
water	44:17	0:0	8	i_x
op	44:21	0:0	8	=
water	44:23	0:0	8	(
water	44:24	0:0	8	p_filter
op	44:32	0:0	8	->
water	44:34	0:0	8	fmt_in
op	44:40	0:0	8	.
water	44:41	0:0	8	video
op	44:46	0:0	8	.
water	44:47	0:0	8	i_x_offset
op	44:58	0:0	8	+
water	44:60	0:0	8	p_filter
op	44:68	0:0	8	->
water	44:70	0:0	8	fmt_in
op	44:76	0:0	8	.
water	44:77	0:0	8	video
op	44:82	0:0	8	.
water	44:83	0:0	8	i_visible_width
water	44:98	0:0	8	)
op	44:100	0:0	8	/
water	44:102	0:0	8	16
water	44:105	0:0	8	;
cond	44:107	44:110	7	i_x --
water	44:107	0:0	8	i_x
op	44:110	0:0	8	--
forexpr	0:0	0:0	7	
stmts	45:12	47:12	7	
water	45:12	0:0	8	{
call	46:16	46:54	8	SSE2_CALL
arg	46:27	46:54	9	SSE2_YUV422_YUYV_UNALIGNED
water	46:27	0:0	10	SSE2_YUV422_YUYV_UNALIGNED
water	46:55	0:0	8	;
water	47:12	0:0	8	}
for	48:12	51:12	6	(i_x = ( ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) % 16 ) / 2 ;i_x --;)
forinit	48:17	48:112	7	i_x = ( ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) % 16 ) / 2 ;
water	48:17	0:0	8	i_x
op	48:21	0:0	8	=
water	48:23	0:0	8	(
water	48:25	0:0	8	(
water	48:26	0:0	8	p_filter
op	48:34	0:0	8	->
water	48:36	0:0	8	fmt_in
op	48:42	0:0	8	.
water	48:43	0:0	8	video
op	48:48	0:0	8	.
water	48:49	0:0	8	i_x_offset
op	48:60	0:0	8	+
water	48:62	0:0	8	p_filter
op	48:70	0:0	8	->
water	48:72	0:0	8	fmt_in
op	48:78	0:0	8	.
water	48:79	0:0	8	video
op	48:84	0:0	8	.
water	48:85	0:0	8	i_visible_width
water	48:100	0:0	8	)
op	48:102	0:0	8	%
water	48:104	0:0	8	16
water	48:107	0:0	8	)
op	48:109	0:0	8	/
water	48:111	0:0	8	2
water	48:112	0:0	8	;
cond	48:114	48:117	7	i_x --
water	48:114	0:0	8	i_x
op	48:117	0:0	8	--
forexpr	0:0	0:0	7	
stmts	49:12	51:12	7	
water	49:12	0:0	8	{
call	50:16	50:53	8	C_YUV422_YUYV
arg	50:31	50:37	9	p_line
water	50:31	0:0	10	p_line
arg	50:39	50:42	9	p_y
water	50:39	0:0	10	p_y
arg	50:44	50:47	9	p_u
water	50:44	0:0	10	p_u
arg	50:49	50:53	9	p_v
water	50:49	0:0	10	p_v
water	50:54	0:0	8	;
water	51:12	0:0	8	}
water	52:12	0:0	6	p_y
op	52:16	0:0	6	+=
water	52:19	0:0	6	i_source_margin
water	52:34	0:0	6	;
water	53:12	0:0	6	p_u
op	53:16	0:0	6	+=
water	53:19	0:0	6	i_source_margin_c
water	53:36	0:0	6	;
water	54:12	0:0	6	p_v
op	54:16	0:0	6	+=
water	54:19	0:0	6	i_source_margin_c
water	54:36	0:0	6	;
water	55:12	0:0	6	p_line
op	55:19	0:0	6	+=
water	55:22	0:0	6	i_dest_margin
water	55:35	0:0	6	;
water	56:8	0:0	6	}
water	57:4	0:0	4	}
water	58:4	0:0	2	SSE2_END
water	58:12	0:0	2	;
for	60:4	81:4	2	(i_y = ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height ) ;i_y --;)
forinit	60:9	60:93	3	i_y = ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height ) ;
water	60:9	0:0	4	i_y
op	60:13	0:0	4	=
water	60:15	0:0	4	(
water	60:16	0:0	4	p_filter
op	60:24	0:0	4	->
water	60:26	0:0	4	fmt_in
op	60:32	0:0	4	.
water	60:33	0:0	4	video
op	60:38	0:0	4	.
water	60:39	0:0	4	i_y_offset
op	60:50	0:0	4	+
water	60:52	0:0	4	p_filter
op	60:60	0:0	4	->
water	60:62	0:0	4	fmt_in
op	60:68	0:0	4	.
water	60:69	0:0	4	video
op	60:74	0:0	4	.
water	60:75	0:0	4	i_visible_height
water	60:91	0:0	4	)
water	60:93	0:0	4	;
cond	60:95	60:98	3	i_y --
water	60:95	0:0	4	i_y
op	60:98	0:0	4	--
forexpr	0:0	0:0	3	
stmts	61:4	81:4	3	
water	61:4	0:0	4	{
for	62:8	72:8	4	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;i_x --;)
forinit	62:13	62:100	5	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;
water	62:13	0:0	6	i_x
op	62:17	0:0	6	=
water	62:19	0:0	6	(
water	62:20	0:0	6	p_filter
op	62:28	0:0	6	->
water	62:30	0:0	6	fmt_in
op	62:36	0:0	6	.
water	62:37	0:0	6	video
op	62:42	0:0	6	.
water	62:43	0:0	6	i_x_offset
op	62:54	0:0	6	+
water	62:56	0:0	6	p_filter
op	62:64	0:0	6	->
water	62:66	0:0	6	fmt_in
op	62:72	0:0	6	.
water	62:73	0:0	6	video
op	62:78	0:0	6	.
water	62:79	0:0	6	i_visible_width
water	62:94	0:0	6	)
op	62:96	0:0	6	/
water	62:98	0:0	6	8
water	62:100	0:0	6	;
cond	62:102	62:105	5	i_x --
water	62:102	0:0	6	i_x
op	62:105	0:0	6	--
forexpr	0:0	0:0	5	
stmts	63:8	72:8	5	
water	63:8	0:0	6	{
call	65:12	65:49	6	C_YUV422_YUYV
arg	65:27	65:33	7	p_line
water	65:27	0:0	8	p_line
arg	65:35	65:38	7	p_y
water	65:35	0:0	8	p_y
arg	65:40	65:43	7	p_u
water	65:40	0:0	8	p_u
arg	65:45	65:49	7	p_v
water	65:45	0:0	8	p_v
water	65:50	0:0	6	;
call	66:12	66:49	6	C_YUV422_YUYV
arg	66:27	66:33	7	p_line
water	66:27	0:0	8	p_line
arg	66:35	66:38	7	p_y
water	66:35	0:0	8	p_y
arg	66:40	66:43	7	p_u
water	66:40	0:0	8	p_u
arg	66:45	66:49	7	p_v
water	66:45	0:0	8	p_v
water	66:50	0:0	6	;
call	67:12	67:49	6	C_YUV422_YUYV
arg	67:27	67:33	7	p_line
water	67:27	0:0	8	p_line
arg	67:35	67:38	7	p_y
water	67:35	0:0	8	p_y
arg	67:40	67:43	7	p_u
water	67:40	0:0	8	p_u
arg	67:45	67:49	7	p_v
water	67:45	0:0	8	p_v
water	67:50	0:0	6	;
call	68:12	68:49	6	C_YUV422_YUYV
arg	68:27	68:33	7	p_line
water	68:27	0:0	8	p_line
arg	68:35	68:38	7	p_y
water	68:35	0:0	8	p_y
arg	68:40	68:43	7	p_u
water	68:40	0:0	8	p_u
arg	68:45	68:49	7	p_v
water	68:45	0:0	8	p_v
water	68:50	0:0	6	;
call	70:12	70:38	6	MMX_CALL
arg	70:22	70:38	7	MMX_YUV422_YUYV
water	70:22	0:0	8	MMX_YUV422_YUYV
water	70:39	0:0	6	;
water	72:8	0:0	6	}
for	73:8	76:8	4	(i_x = ( ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) % 8 ) / 2 ;i_x --;)
forinit	73:13	73:107	5	i_x = ( ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) % 8 ) / 2 ;
water	73:13	0:0	6	i_x
op	73:17	0:0	6	=
water	73:19	0:0	6	(
water	73:21	0:0	6	(
water	73:22	0:0	6	p_filter
op	73:30	0:0	6	->
water	73:32	0:0	6	fmt_in
op	73:38	0:0	6	.
water	73:39	0:0	6	video
op	73:44	0:0	6	.
water	73:45	0:0	6	i_x_offset
op	73:56	0:0	6	+
water	73:58	0:0	6	p_filter
op	73:66	0:0	6	->
water	73:68	0:0	6	fmt_in
op	73:74	0:0	6	.
water	73:75	0:0	6	video
op	73:80	0:0	6	.
water	73:81	0:0	6	i_visible_width
water	73:96	0:0	6	)
op	73:98	0:0	6	%
water	73:100	0:0	6	8
water	73:102	0:0	6	)
op	73:104	0:0	6	/
water	73:106	0:0	6	2
water	73:107	0:0	6	;
cond	73:109	73:112	5	i_x --
water	73:109	0:0	6	i_x
op	73:112	0:0	6	--
forexpr	0:0	0:0	5	
stmts	74:8	76:8	5	
water	74:8	0:0	6	{
call	75:12	75:49	6	C_YUV422_YUYV
arg	75:27	75:33	7	p_line
water	75:27	0:0	8	p_line
arg	75:35	75:38	7	p_y
water	75:35	0:0	8	p_y
arg	75:40	75:43	7	p_u
water	75:40	0:0	8	p_u
arg	75:45	75:49	7	p_v
water	75:45	0:0	8	p_v
water	75:50	0:0	6	;
water	76:8	0:0	6	}
water	77:8	0:0	4	p_y
op	77:12	0:0	4	+=
water	77:15	0:0	4	i_source_margin
water	77:30	0:0	4	;
water	78:8	0:0	4	p_u
op	78:12	0:0	4	+=
water	78:15	0:0	4	i_source_margin_c
water	78:32	0:0	4	;
water	79:8	0:0	4	p_v
op	79:12	0:0	4	+=
water	79:15	0:0	4	i_source_margin_c
water	79:32	0:0	4	;
water	80:8	0:0	4	p_line
op	80:15	0:0	4	+=
water	80:18	0:0	4	i_dest_margin
water	80:31	0:0	4	;
water	81:4	0:0	4	}
water	83:4	0:0	2	MMX_END
water	83:11	0:0	2	;

func	2:0	36:0	0	static void	OSDTextUpdate
params	2:25	0:0	1	
param	2:26	2:46	2	subpicture_t *	subpic
param	3:26	3:55	2	const video_format_t *	fmt_src
param	4:26	4:55	2	const video_format_t *	fmt_dst
param	5:26	5:36	2	mtime_t	ts
stmnts	0:0	35:48	1	
decl	7:4	7:57	2	subpicture_updater_sys_t	*sys
op	7:34	0:0	2	=
water	7:36	0:0	2	subpic
op	7:42	0:0	2	->
water	7:44	0:0	2	updater
op	7:51	0:0	2	.
water	7:52	0:0	2	p_sys
call	8:4	8:22	2	VLC_UNUSED
arg	8:15	8:22	3	fmt_src
water	8:15	0:0	4	fmt_src
water	8:23	0:0	2	;
call	8:25	8:38	2	VLC_UNUSED
arg	8:36	8:38	3	ts
water	8:36	0:0	4	ts
water	8:39	0:0	2	;
if	9:4	10:14	2	(fmt_dst -> i_sar_num <= 0 || fmt_dst -> i_sar_den <= 0)
cond	9:8	9:57	3	fmt_dst -> i_sar_num <= 0 || fmt_dst -> i_sar_den <= 0
water	9:8	0:0	4	fmt_dst
op	9:15	0:0	4	->
water	9:17	0:0	4	i_sar_num
op	9:27	0:0	4	<=
water	9:30	0:0	4	0
op	9:32	0:0	4	||
water	9:35	0:0	4	fmt_dst
op	9:42	0:0	4	->
water	9:44	0:0	4	i_sar_den
op	9:54	0:0	4	<=
water	9:57	0:0	4	0
stmts	10:8	10:14	3	
return	10:8	10:14	4	
water	11:4	0:0	2	subpic
op	11:10	0:0	2	->
water	11:12	0:0	2	b_absolute
op	11:23	0:0	2	=
water	11:25	0:0	2	false
water	11:30	0:0	2	;
water	12:4	0:0	2	subpic
op	12:10	0:0	2	->
water	12:12	0:0	2	i_original_picture_width
op	12:38	0:0	2	=
water	12:40	0:0	2	fmt_dst
op	12:47	0:0	2	->
water	12:49	0:0	2	i_visible_width
op	12:65	0:0	2	*
water	12:67	0:0	2	fmt_dst
op	12:74	0:0	2	->
water	12:76	0:0	2	i_sar_num
op	12:86	0:0	2	/
water	12:88	0:0	2	fmt_dst
op	12:95	0:0	2	->
water	12:97	0:0	2	i_sar_den
water	12:106	0:0	2	;
water	13:4	0:0	2	subpic
op	13:10	0:0	2	->
water	13:12	0:0	2	i_original_picture_height
op	13:38	0:0	2	=
water	13:40	0:0	2	fmt_dst
op	13:47	0:0	2	->
water	13:49	0:0	2	i_visible_height
water	13:65	0:0	2	;
decl	14:4	14:22	2	video_format_t	fmt
call	15:4	15:43	2	video_format_Init
arg	15:23	15:27	3	&fmt
op	15:23	0:0	4	&
water	15:24	0:0	4	fmt
arg	15:29	15:43	3	VLC_CODEC_TEXT
water	15:29	0:0	4	VLC_CODEC_TEXT
water	15:44	0:0	2	;
water	16:4	0:0	2	fmt
op	16:7	0:0	2	.
water	16:8	0:0	2	i_sar_num
op	16:18	0:0	2	=
water	16:20	0:0	2	1
water	16:21	0:0	2	;
water	17:4	0:0	2	fmt
op	17:7	0:0	2	.
water	17:8	0:0	2	i_sar_den
op	17:18	0:0	2	=
water	17:20	0:0	2	1
water	17:21	0:0	2	;
decl	18:4	18:75	2	subpicture_region_t	*r
op	18:27	0:0	2	=
water	18:29	0:0	2	subpic
op	18:35	0:0	2	->
water	18:37	0:0	2	p_region
op	18:46	0:0	2	=
call	18:48	18:74	3	subpicture_region_New
arg	18:70	18:74	4	&fmt
op	18:70	0:0	5	&
water	18:71	0:0	5	fmt
if	19:4	20:14	2	(! r)
cond	19:8	19:9	3	! r
op	19:8	0:0	4	!
water	19:9	0:0	4	r
stmts	20:8	20:14	3	
return	20:8	20:14	4	
water	21:4	0:0	2	r
op	21:5	0:0	2	->
water	21:7	0:0	2	psz_text
op	21:16	0:0	2	=
call	21:18	21:34	2	strdup
arg	21:25	21:34	3	sys->text
water	21:25	0:0	4	sys
op	21:28	0:0	4	->
water	21:30	0:0	4	text
water	21:35	0:0	2	;
decl	22:4	22:35	2	const float	margin_ratio
op	22:29	0:0	2	=
water	22:31	0:0	2	0
op	22:32	0:0	2	.
water	22:33	0:0	2	04
decl	23:4	23:70	2	const int	margin_h
op	23:29	0:0	2	=
water	23:31	0:0	2	margin_ratio
op	23:44	0:0	2	*
water	23:46	0:0	2	fmt_dst
op	23:53	0:0	2	->
water	23:55	0:0	2	i_visible_width
decl	24:4	24:71	2	const int	margin_v
op	24:29	0:0	2	=
water	24:31	0:0	2	margin_ratio
op	24:44	0:0	2	*
water	24:46	0:0	2	fmt_dst
op	24:53	0:0	2	->
water	24:55	0:0	2	i_visible_height
water	25:4	0:0	2	r
op	25:5	0:0	2	->
water	25:7	0:0	2	i_align
op	25:15	0:0	2	=
water	25:17	0:0	2	sys
op	25:20	0:0	2	->
water	25:22	0:0	2	position
water	25:30	0:0	2	;
water	26:4	0:0	2	r
op	26:5	0:0	2	->
water	26:7	0:0	2	i_x
op	26:11	0:0	2	=
water	26:13	0:0	2	0
water	26:14	0:0	2	;
if	27:4	28:48	2	(r -> i_align & SUBPICTURE_ALIGN_LEFT)
cond	27:8	27:21	3	r -> i_align & SUBPICTURE_ALIGN_LEFT
water	27:8	0:0	4	r
op	27:9	0:0	4	->
water	27:11	0:0	4	i_align
op	27:19	0:0	4	&
water	27:21	0:0	4	SUBPICTURE_ALIGN_LEFT
stmts	28:8	28:48	3	
water	28:8	0:0	4	r
op	28:9	0:0	4	->
water	28:11	0:0	4	i_x
op	28:15	0:0	4	+=
water	28:18	0:0	4	margin_h
op	28:27	0:0	4	+
water	28:29	0:0	4	fmt_dst
op	28:36	0:0	4	->
water	28:38	0:0	4	i_x_offset
water	28:48	0:0	4	;
else	29:4	30:48	2
stmts	29:9	30:48	3	
if	29:9	30:48	4	(r -> i_align & SUBPICTURE_ALIGN_RIGHT)
cond	29:13	29:26	5	r -> i_align & SUBPICTURE_ALIGN_RIGHT
water	29:13	0:0	6	r
op	29:14	0:0	6	->
water	29:16	0:0	6	i_align
op	29:24	0:0	6	&
water	29:26	0:0	6	SUBPICTURE_ALIGN_RIGHT
stmts	30:8	30:48	5	
water	30:8	0:0	6	r
op	30:9	0:0	6	->
water	30:11	0:0	6	i_x
op	30:15	0:0	6	+=
water	30:18	0:0	6	margin_h
op	30:27	0:0	6	-
water	30:29	0:0	6	fmt_dst
op	30:36	0:0	6	->
water	30:38	0:0	6	i_x_offset
water	30:48	0:0	6	;
water	31:4	0:0	2	r
op	31:5	0:0	2	->
water	31:7	0:0	2	i_y
op	31:11	0:0	2	=
water	31:13	0:0	2	0
water	31:14	0:0	2	;
if	32:4	33:48	2	(r -> i_align & SUBPICTURE_ALIGN_TOP)
cond	32:8	32:21	3	r -> i_align & SUBPICTURE_ALIGN_TOP
water	32:8	0:0	4	r
op	32:9	0:0	4	->
water	32:11	0:0	4	i_align
op	32:19	0:0	4	&
water	32:21	0:0	4	SUBPICTURE_ALIGN_TOP
stmts	33:8	33:48	3	
water	33:8	0:0	4	r
op	33:9	0:0	4	->
water	33:11	0:0	4	i_y
op	33:15	0:0	4	+=
water	33:18	0:0	4	margin_v
op	33:27	0:0	4	+
water	33:29	0:0	4	fmt_dst
op	33:36	0:0	4	->
water	33:38	0:0	4	i_y_offset
water	33:48	0:0	4	;
else	34:4	35:48	2
stmts	34:9	35:48	3	
if	34:9	35:48	4	(r -> i_align & SUBPICTURE_ALIGN_BOTTOM)
cond	34:13	34:26	5	r -> i_align & SUBPICTURE_ALIGN_BOTTOM
water	34:13	0:0	6	r
op	34:14	0:0	6	->
water	34:16	0:0	6	i_align
op	34:24	0:0	6	&
water	34:26	0:0	6	SUBPICTURE_ALIGN_BOTTOM
stmts	35:8	35:48	5	
water	35:8	0:0	6	r
op	35:9	0:0	6	->
water	35:11	0:0	6	i_y
op	35:15	0:0	6	+=
water	35:18	0:0	6	margin_v
op	35:27	0:0	6	-
water	35:29	0:0	6	fmt_dst
op	35:36	0:0	6	->
water	35:38	0:0	6	i_y_offset
water	35:48	0:0	6	;

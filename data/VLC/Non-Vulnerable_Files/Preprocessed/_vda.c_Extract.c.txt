func	2:0	33:0	0	static int	Extract
params	2:18	0:0	1	
param	2:20	2:38	2	vlc_va_t *	external
param	2:40	2:60	2	picture_t *	p_picture
param	2:62	2:74	2	void *	opaque
param	3:20	3:34	2	uint8_t *	data
stmnts	0:0	32:22	1	
decl	5:4	5:51	2	vlc_va_vda_t	*p_va
op	5:23	0:0	2	=
call	5:25	5:50	3	vlc_va_vda_Get
arg	5:41	5:50	4	external
water	5:41	0:0	5	external
decl	6:4	6:57	2	CVPixelBufferRef	cv_buffer
op	6:31	0:0	2	=
water	6:33	0:0	2	(
water	6:35	0:0	2	CVPixelBufferRef
water	6:52	0:0	2	)
water	6:53	0:0	2	data
if	7:4	11:4	2	(! cv_buffer)
cond	7:8	7:9	3	! cv_buffer
op	7:8	0:0	4	!
water	7:9	0:0	4	cv_buffer
stmts	8:4	11:4	3	
water	8:4	0:0	4	{
call	9:8	9:54	4	msg_Dbg
arg	9:17	9:28	5	p_va->p_log
water	9:17	0:0	6	p_va
op	9:21	0:0	6	->
water	9:23	0:0	6	p_log
arg	9:30	9:54	5	"Frame buffer is empty."
water	9:30	0:0	6	"Frame buffer is empty."
water	9:55	0:0	4	;
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
water	11:4	0:0	4	}
if	12:4	16:4	2	(!CVPixelBufferGetDataSize (cv_buffer ) > 0)
cond	12:8	12:47	3	!CVPixelBufferGetDataSize (cv_buffer ) > 0
op	12:8	0:0	4	!
call	12:9	12:43	4	CVPixelBufferGetDataSize
arg	12:34	12:43	5	cv_buffer
water	12:34	0:0	6	cv_buffer
op	12:45	0:0	4	>
water	12:47	0:0	4	0
stmts	13:4	16:4	3	
water	13:4	0:0	4	{
call	14:8	14:50	4	msg_Dbg
arg	14:17	14:28	5	p_va->p_log
water	14:17	0:0	6	p_va
op	14:21	0:0	6	->
water	14:23	0:0	6	p_log
arg	14:30	14:50	5	"Empty frame buffer"
water	14:30	0:0	6	"Empty frame buffer"
water	14:51	0:0	4	;
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
if	17:4	28:4	2	(p_va -> hw_ctx . cv_pix_fmt_type == kCVPixelFormatType_420YpCbCr8Planar)
cond	17:8	17:40	3	p_va -> hw_ctx . cv_pix_fmt_type == kCVPixelFormatType_420YpCbCr8Planar
water	17:8	0:0	4	p_va
op	17:12	0:0	4	->
water	17:14	0:0	4	hw_ctx
op	17:20	0:0	4	.
water	17:21	0:0	4	cv_pix_fmt_type
op	17:37	0:0	4	==
water	17:40	0:0	4	kCVPixelFormatType_420YpCbCr8Planar
stmts	18:4	28:4	3	
water	18:4	0:0	4	{
if	19:8	22:8	4	(! p_va -> image_cache . buffer)
cond	19:12	19:31	5	! p_va -> image_cache . buffer
op	19:12	0:0	6	!
water	19:13	0:0	6	p_va
op	19:17	0:0	6	->
water	19:19	0:0	6	image_cache
op	19:30	0:0	6	.
water	19:31	0:0	6	buffer
stmts	19:40	22:8	5	
water	19:40	0:0	6	{
call	20:12	20:44	6	CVPixelBufferRelease
arg	20:34	20:44	7	cv_buffer
water	20:34	0:0	8	cv_buffer
water	20:45	0:0	6	;
return	21:12	21:31	6	VLC_EGENERIC
water	21:19	0:0	7	VLC_EGENERIC
water	22:8	0:0	6	}
call	23:8	27:53	4	vda_Copy420YpCbCr8Planar
arg	23:34	23:43	5	p_picture
water	23:34	0:0	6	p_picture
arg	24:34	24:43	5	cv_buffer
water	24:34	0:0	6	cv_buffer
arg	25:34	25:52	5	p_va->hw_ctx.width
water	25:34	0:0	6	p_va
op	25:38	0:0	6	->
water	25:40	0:0	6	hw_ctx
op	25:46	0:0	6	.
water	25:47	0:0	6	width
arg	26:34	26:53	5	p_va->hw_ctx.height
water	26:34	0:0	6	p_va
op	26:38	0:0	6	->
water	26:40	0:0	6	hw_ctx
op	26:46	0:0	6	.
water	26:47	0:0	6	height
arg	27:34	27:53	5	&p_va->image_cache
op	27:34	0:0	6	&
water	27:35	0:0	6	p_va
op	27:39	0:0	6	->
water	27:41	0:0	6	image_cache
water	27:54	0:0	4	;
water	28:4	0:0	4	}
else	29:4	30:50	2
stmts	30:8	30:50	3	
call	30:8	30:49	4	vda_Copy422YpCbCr8
arg	30:28	30:37	5	p_picture
water	30:28	0:0	6	p_picture
arg	30:39	30:49	5	cv_buffer
water	30:39	0:0	6	cv_buffer
water	30:50	0:0	4	;
water	31:4	0:0	2	(
water	31:5	0:0	2	void
water	31:9	0:0	2	)
water	31:11	0:0	2	opaque
water	31:17	0:0	2	;
return	32:4	32:22	2	VLC_SUCCESS
water	32:11	0:0	3	VLC_SUCCESS
func	35:0	53:0	0	static int	Extract
params	35:18	0:0	1	
param	35:20	35:38	2	vlc_va_t *	external
param	35:40	35:60	2	picture_t *	p_picture
param	35:62	35:74	2	void *	opaque
param	36:20	36:34	2	uint8_t *	data
stmnts	0:0	52:22	1	
decl	38:4	38:51	2	vlc_va_vda_t	*p_va
op	38:23	0:0	2	=
call	38:25	38:50	3	vlc_va_vda_Get
arg	38:41	38:50	4	external
water	38:41	0:0	5	external
decl	39:4	39:55	2	CVPixelBufferRef	cv_buffer
op	39:31	0:0	2	=
water	39:33	0:0	2	(
water	39:34	0:0	2	CVPixelBufferRef
water	39:50	0:0	2	)
water	39:51	0:0	2	data
if	40:4	44:4	2	(! cv_buffer)
cond	40:8	40:9	3	! cv_buffer
op	40:8	0:0	4	!
water	40:9	0:0	4	cv_buffer
stmts	41:4	44:4	3	
water	41:4	0:0	4	{
call	42:8	42:54	4	msg_Dbg
arg	42:17	42:28	5	p_va->p_log
water	42:17	0:0	6	p_va
op	42:21	0:0	6	->
water	42:23	0:0	6	p_log
arg	42:30	42:54	5	"Frame buffer is empty."
water	42:30	0:0	6	"Frame buffer is empty."
water	42:55	0:0	4	;
return	43:8	43:27	4	VLC_EGENERIC
water	43:15	0:0	5	VLC_EGENERIC
water	44:4	0:0	4	}
if	45:4	49:4	2	(!CVPixelBufferGetDataSize (cv_buffer ) > 0)
cond	45:8	45:47	3	!CVPixelBufferGetDataSize (cv_buffer ) > 0
op	45:8	0:0	4	!
call	45:9	45:43	4	CVPixelBufferGetDataSize
arg	45:34	45:43	5	cv_buffer
water	45:34	0:0	6	cv_buffer
op	45:45	0:0	4	>
water	45:47	0:0	4	0
stmts	46:4	49:4	3	
water	46:4	0:0	4	{
call	47:8	47:50	4	msg_Dbg
arg	47:17	47:28	5	p_va->p_log
water	47:17	0:0	6	p_va
op	47:21	0:0	6	->
water	47:23	0:0	6	p_log
arg	47:30	47:50	5	"Empty frame buffer"
water	47:30	0:0	6	"Empty frame buffer"
water	47:51	0:0	4	;
return	48:8	48:27	4	VLC_EGENERIC
water	48:15	0:0	5	VLC_EGENERIC
water	49:4	0:0	4	}
call	50:4	50:45	2	vda_Copy422YpCbCr8
arg	50:24	50:33	3	p_picture
water	50:24	0:0	4	p_picture
arg	50:35	50:45	3	cv_buffer
water	50:35	0:0	4	cv_buffer
water	50:46	0:0	2	;
water	51:4	0:0	2	(
water	51:5	0:0	2	void
water	51:9	0:0	2	)
water	51:11	0:0	2	opaque
water	51:17	0:0	2	;
return	52:4	52:22	2	VLC_SUCCESS
water	52:11	0:0	3	VLC_SUCCESS

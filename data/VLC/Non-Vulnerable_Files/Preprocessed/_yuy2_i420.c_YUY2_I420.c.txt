func	2:0	62:0	0	static void	YUY2_I420
params	2:21	0:0	1	
param	2:23	2:41	2	filter_t *	p_filter
param	2:43	2:62	2	picture_t *	p_source
param	3:43	3:61	2	picture_t *	p_dest
stmnts	0:0	61:4	1	
decl	5:4	5:43	2	uint8_t	*p_line
op	5:20	0:0	2	=
water	5:22	0:0	2	p_source
op	5:30	0:0	2	->
water	5:32	0:0	2	p
op	5:33	0:0	2	->
water	5:35	0:0	2	p_pixels
decl	6:4	6:35	2	uint8_t	*p_y
op	6:17	0:0	2	=
water	6:19	0:0	2	p_dest
op	6:25	0:0	2	->
water	6:27	0:0	2	Y_PIXELS
decl	7:4	7:35	2	uint8_t	*p_u
op	7:17	0:0	2	=
water	7:19	0:0	2	p_dest
op	7:25	0:0	2	->
water	7:27	0:0	2	U_PIXELS
decl	8:4	8:35	2	uint8_t	*p_v
op	8:17	0:0	2	=
water	8:19	0:0	2	p_dest
op	8:25	0:0	2	->
water	8:27	0:0	2	V_PIXELS
decl	9:4	9:16	2	int	i_x
water	9:11	0:0	2	,
decl	9:4	9:16	2	int	i_y
decl	10:4	12:69	2	const int	i_dest_margin
op	10:28	0:0	2	=
water	10:30	0:0	2	p_dest
op	10:36	0:0	2	->
water	10:38	0:0	2	p
op	10:39	0:0	2	[
water	10:40	0:0	2	0
op	10:41	0:0	2	]
op	10:42	0:0	2	.
water	10:43	0:0	2	i_pitch
op	11:33	0:0	2	-
water	11:35	0:0	2	p_dest
op	11:41	0:0	2	->
water	11:43	0:0	2	p
op	11:44	0:0	2	[
water	11:45	0:0	2	0
op	11:46	0:0	2	]
op	11:47	0:0	2	.
water	11:48	0:0	2	i_visible_pitch
op	12:33	0:0	2	-
water	12:35	0:0	2	p_filter
op	12:43	0:0	2	->
water	12:45	0:0	2	fmt_out
op	12:52	0:0	2	.
water	12:53	0:0	2	video
op	12:58	0:0	2	.
water	12:59	0:0	2	i_x_offset
decl	13:4	15:77	2	const int	i_dest_margin_c
op	13:30	0:0	2	=
water	13:32	0:0	2	p_dest
op	13:38	0:0	2	->
water	13:40	0:0	2	p
op	13:41	0:0	2	[
water	13:42	0:0	2	1
op	13:43	0:0	2	]
op	13:44	0:0	2	.
water	13:45	0:0	2	i_pitch
op	14:33	0:0	2	-
water	14:35	0:0	2	p_dest
op	14:41	0:0	2	->
water	14:43	0:0	2	p
op	14:44	0:0	2	[
water	14:45	0:0	2	1
op	14:46	0:0	2	]
op	14:47	0:0	2	.
water	14:48	0:0	2	i_visible_pitch
op	15:33	0:0	2	-
water	15:35	0:0	2	(
water	15:37	0:0	2	p_filter
op	15:45	0:0	2	->
water	15:47	0:0	2	fmt_out
op	15:54	0:0	2	.
water	15:55	0:0	2	video
op	15:60	0:0	2	.
water	15:61	0:0	2	i_x_offset
op	15:72	0:0	2	/
water	15:74	0:0	2	2
water	15:76	0:0	2	)
decl	16:4	18:74	2	const int	i_source_margin
op	16:30	0:0	2	=
water	16:32	0:0	2	p_source
op	16:40	0:0	2	->
water	16:42	0:0	2	p
op	16:43	0:0	2	->
water	16:45	0:0	2	i_pitch
op	17:31	0:0	2	-
water	17:33	0:0	2	p_source
op	17:41	0:0	2	->
water	17:43	0:0	2	p
op	17:44	0:0	2	->
water	17:46	0:0	2	i_visible_pitch
op	18:31	0:0	2	-
water	18:33	0:0	2	(
water	18:35	0:0	2	p_filter
op	18:43	0:0	2	->
water	18:45	0:0	2	fmt_in
op	18:51	0:0	2	.
water	18:52	0:0	2	video
op	18:57	0:0	2	.
water	18:58	0:0	2	i_x_offset
op	18:69	0:0	2	*
water	18:71	0:0	2	2
water	18:73	0:0	2	)
decl	19:4	19:23	2	bool	b_skip
op	19:16	0:0	2	=
water	19:18	0:0	2	false
for	20:4	61:4	2	(i_y = ( p_filter -> fmt_out . video . i_y_offset + p_filter -> fmt_out . video . i_visible_height ) ;i_y --;)
forinit	20:9	20:95	3	i_y = ( p_filter -> fmt_out . video . i_y_offset + p_filter -> fmt_out . video . i_visible_height ) ;
water	20:9	0:0	4	i_y
op	20:13	0:0	4	=
water	20:15	0:0	4	(
water	20:16	0:0	4	p_filter
op	20:24	0:0	4	->
water	20:26	0:0	4	fmt_out
op	20:33	0:0	4	.
water	20:34	0:0	4	video
op	20:39	0:0	4	.
water	20:40	0:0	4	i_y_offset
op	20:51	0:0	4	+
water	20:53	0:0	4	p_filter
op	20:61	0:0	4	->
water	20:63	0:0	4	fmt_out
op	20:70	0:0	4	.
water	20:71	0:0	4	video
op	20:76	0:0	4	.
water	20:77	0:0	4	i_visible_height
water	20:93	0:0	4	)
water	20:95	0:0	4	;
cond	20:97	20:100	3	i_y --
water	20:97	0:0	4	i_y
op	20:100	0:0	4	--
forexpr	0:0	0:0	3	
stmts	21:4	61:4	3	
water	21:4	0:0	4	{
if	22:8	38:8	4	(b_skip)
cond	22:12	22:12	5	b_skip
water	22:12	0:0	6	b_skip
stmts	23:8	38:8	5	
water	23:8	0:0	6	{
for	24:12	33:12	6	(i_x = ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) / 8 ;i_x --;)
forinit	24:17	24:106	7	i_x = ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) / 8 ;
water	24:17	0:0	8	i_x
op	24:21	0:0	8	=
water	24:23	0:0	8	(
water	24:24	0:0	8	p_filter
op	24:32	0:0	8	->
water	24:34	0:0	8	fmt_out
op	24:41	0:0	8	.
water	24:42	0:0	8	video
op	24:47	0:0	8	.
water	24:48	0:0	8	i_x_offset
op	24:59	0:0	8	+
water	24:61	0:0	8	p_filter
op	24:69	0:0	8	->
water	24:71	0:0	8	fmt_out
op	24:78	0:0	8	.
water	24:79	0:0	8	video
op	24:84	0:0	8	.
water	24:85	0:0	8	i_visible_width
water	24:100	0:0	8	)
op	24:102	0:0	8	/
water	24:104	0:0	8	8
water	24:106	0:0	8	;
cond	24:108	24:111	7	i_x --
water	24:108	0:0	8	i_x
op	24:111	0:0	8	--
forexpr	0:0	0:0	7	
stmts	25:12	33:12	7	
water	25:12	0:0	8	{
op	27:16	0:0	8	*
water	27:17	0:0	8	p_y
op	27:20	0:0	8	++
op	27:23	0:0	8	=
op	27:25	0:0	8	*
water	27:26	0:0	8	p_line
op	27:32	0:0	8	++
water	27:34	0:0	8	;
water	27:36	0:0	8	p_line
op	27:42	0:0	8	++
water	27:44	0:0	8	;
op	28:16	0:0	8	*
water	28:17	0:0	8	p_y
op	28:20	0:0	8	++
op	28:23	0:0	8	=
op	28:25	0:0	8	*
water	28:26	0:0	8	p_line
op	28:32	0:0	8	++
water	28:34	0:0	8	;
water	28:36	0:0	8	p_line
op	28:42	0:0	8	++
call	29:16	29:58	8	C_YUYV_YUV422_skip
arg	29:36	29:42	9	p_line
water	29:36	0:0	10	p_line
arg	29:44	29:47	9	p_y
water	29:44	0:0	10	p_y
arg	29:49	29:52	9	p_u
water	29:49	0:0	10	p_u
arg	29:54	29:58	9	p_v
water	29:54	0:0	10	p_v
water	29:59	0:0	8	;
call	30:16	30:58	8	C_YUYV_YUV422_skip
arg	30:36	30:42	9	p_line
water	30:36	0:0	10	p_line
arg	30:44	30:47	9	p_y
water	30:44	0:0	10	p_y
arg	30:49	30:52	9	p_u
water	30:49	0:0	10	p_u
arg	30:54	30:58	9	p_v
water	30:54	0:0	10	p_v
water	30:59	0:0	8	;
call	31:16	31:58	8	C_YUYV_YUV422_skip
arg	31:36	31:42	9	p_line
water	31:36	0:0	10	p_line
arg	31:44	31:47	9	p_y
water	31:44	0:0	10	p_y
arg	31:49	31:52	9	p_u
water	31:49	0:0	10	p_u
arg	31:54	31:58	9	p_v
water	31:54	0:0	10	p_v
water	31:59	0:0	8	;
call	32:16	32:58	8	C_YUYV_YUV422_skip
arg	32:36	32:42	9	p_line
water	32:36	0:0	10	p_line
arg	32:44	32:47	9	p_y
water	32:44	0:0	10	p_y
arg	32:49	32:52	9	p_u
water	32:49	0:0	10	p_u
arg	32:54	32:58	9	p_v
water	32:54	0:0	10	p_v
water	32:59	0:0	8	;
water	33:12	0:0	8	}
for	34:12	37:12	6	(i_x = ( ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) % 8 ) / 2 ;i_x --;)
forinit	34:17	34:113	7	i_x = ( ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) % 8 ) / 2 ;
water	34:17	0:0	8	i_x
op	34:21	0:0	8	=
water	34:23	0:0	8	(
water	34:25	0:0	8	(
water	34:26	0:0	8	p_filter
op	34:34	0:0	8	->
water	34:36	0:0	8	fmt_out
op	34:43	0:0	8	.
water	34:44	0:0	8	video
op	34:49	0:0	8	.
water	34:50	0:0	8	i_x_offset
op	34:61	0:0	8	+
water	34:63	0:0	8	p_filter
op	34:71	0:0	8	->
water	34:73	0:0	8	fmt_out
op	34:80	0:0	8	.
water	34:81	0:0	8	video
op	34:86	0:0	8	.
water	34:87	0:0	8	i_visible_width
water	34:102	0:0	8	)
op	34:104	0:0	8	%
water	34:106	0:0	8	8
water	34:108	0:0	8	)
op	34:110	0:0	8	/
water	34:112	0:0	8	2
water	34:113	0:0	8	;
cond	34:115	34:118	7	i_x --
water	34:115	0:0	8	i_x
op	34:118	0:0	8	--
forexpr	0:0	0:0	7	
stmts	35:12	37:12	7	
water	35:12	0:0	8	{
call	36:16	36:58	8	C_YUYV_YUV422_skip
arg	36:36	36:42	9	p_line
water	36:36	0:0	10	p_line
arg	36:44	36:47	9	p_y
water	36:44	0:0	10	p_y
arg	36:49	36:52	9	p_u
water	36:49	0:0	10	p_u
arg	36:54	36:58	9	p_v
water	36:54	0:0	10	p_v
water	36:59	0:0	8	;
water	37:12	0:0	8	}
water	38:8	0:0	6	}
else	39:8	57:8	4
stmts	40:8	57:8	5	
water	40:8	0:0	6	{
for	41:12	50:12	6	(i_x = ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) / 8 ;i_x --;)
forinit	41:17	41:106	7	i_x = ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) / 8 ;
water	41:17	0:0	8	i_x
op	41:21	0:0	8	=
water	41:23	0:0	8	(
water	41:24	0:0	8	p_filter
op	41:32	0:0	8	->
water	41:34	0:0	8	fmt_out
op	41:41	0:0	8	.
water	41:42	0:0	8	video
op	41:47	0:0	8	.
water	41:48	0:0	8	i_x_offset
op	41:59	0:0	8	+
water	41:61	0:0	8	p_filter
op	41:69	0:0	8	->
water	41:71	0:0	8	fmt_out
op	41:78	0:0	8	.
water	41:79	0:0	8	video
op	41:84	0:0	8	.
water	41:85	0:0	8	i_visible_width
water	41:100	0:0	8	)
op	41:102	0:0	8	/
water	41:104	0:0	8	8
water	41:106	0:0	8	;
cond	41:108	41:111	7	i_x --
water	41:108	0:0	8	i_x
op	41:111	0:0	8	--
forexpr	0:0	0:0	7	
stmts	42:12	50:12	7	
water	42:12	0:0	8	{
op	44:16	0:0	8	*
water	44:17	0:0	8	p_y
op	44:20	0:0	8	++
op	44:23	0:0	8	=
op	44:25	0:0	8	*
water	44:26	0:0	8	p_line
op	44:32	0:0	8	++
water	44:34	0:0	8	;
op	44:36	0:0	8	*
water	44:37	0:0	8	p_u
op	44:40	0:0	8	++
op	44:43	0:0	8	=
op	44:45	0:0	8	*
water	44:46	0:0	8	p_line
op	44:52	0:0	8	++
water	44:54	0:0	8	;
op	45:16	0:0	8	*
water	45:17	0:0	8	p_y
op	45:20	0:0	8	++
op	45:23	0:0	8	=
op	45:25	0:0	8	*
water	45:26	0:0	8	p_line
op	45:32	0:0	8	++
water	45:34	0:0	8	;
op	45:36	0:0	8	*
water	45:37	0:0	8	p_v
op	45:40	0:0	8	++
op	45:43	0:0	8	=
op	45:45	0:0	8	*
water	45:46	0:0	8	p_line
op	45:52	0:0	8	++
call	46:16	46:53	8	C_YUYV_YUV422
arg	46:31	46:37	9	p_line
water	46:31	0:0	10	p_line
arg	46:39	46:42	9	p_y
water	46:39	0:0	10	p_y
arg	46:44	46:47	9	p_u
water	46:44	0:0	10	p_u
arg	46:49	46:53	9	p_v
water	46:49	0:0	10	p_v
water	46:54	0:0	8	;
call	47:16	47:53	8	C_YUYV_YUV422
arg	47:31	47:37	9	p_line
water	47:31	0:0	10	p_line
arg	47:39	47:42	9	p_y
water	47:39	0:0	10	p_y
arg	47:44	47:47	9	p_u
water	47:44	0:0	10	p_u
arg	47:49	47:53	9	p_v
water	47:49	0:0	10	p_v
water	47:54	0:0	8	;
call	48:16	48:53	8	C_YUYV_YUV422
arg	48:31	48:37	9	p_line
water	48:31	0:0	10	p_line
arg	48:39	48:42	9	p_y
water	48:39	0:0	10	p_y
arg	48:44	48:47	9	p_u
water	48:44	0:0	10	p_u
arg	48:49	48:53	9	p_v
water	48:49	0:0	10	p_v
water	48:54	0:0	8	;
call	49:16	49:53	8	C_YUYV_YUV422
arg	49:31	49:37	9	p_line
water	49:31	0:0	10	p_line
arg	49:39	49:42	9	p_y
water	49:39	0:0	10	p_y
arg	49:44	49:47	9	p_u
water	49:44	0:0	10	p_u
arg	49:49	49:53	9	p_v
water	49:49	0:0	10	p_v
water	49:54	0:0	8	;
water	50:12	0:0	8	}
for	51:12	54:12	6	(i_x = ( ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) % 8 ) / 2 ;i_x --;)
forinit	51:17	51:113	7	i_x = ( ( p_filter -> fmt_out . video . i_x_offset + p_filter -> fmt_out . video . i_visible_width ) % 8 ) / 2 ;
water	51:17	0:0	8	i_x
op	51:21	0:0	8	=
water	51:23	0:0	8	(
water	51:25	0:0	8	(
water	51:26	0:0	8	p_filter
op	51:34	0:0	8	->
water	51:36	0:0	8	fmt_out
op	51:43	0:0	8	.
water	51:44	0:0	8	video
op	51:49	0:0	8	.
water	51:50	0:0	8	i_x_offset
op	51:61	0:0	8	+
water	51:63	0:0	8	p_filter
op	51:71	0:0	8	->
water	51:73	0:0	8	fmt_out
op	51:80	0:0	8	.
water	51:81	0:0	8	video
op	51:86	0:0	8	.
water	51:87	0:0	8	i_visible_width
water	51:102	0:0	8	)
op	51:104	0:0	8	%
water	51:106	0:0	8	8
water	51:108	0:0	8	)
op	51:110	0:0	8	/
water	51:112	0:0	8	2
water	51:113	0:0	8	;
cond	51:115	51:118	7	i_x --
water	51:115	0:0	8	i_x
op	51:118	0:0	8	--
forexpr	0:0	0:0	7	
stmts	52:12	54:12	7	
water	52:12	0:0	8	{
call	53:16	53:53	8	C_YUYV_YUV422
arg	53:31	53:37	9	p_line
water	53:31	0:0	10	p_line
arg	53:39	53:42	9	p_y
water	53:39	0:0	10	p_y
arg	53:44	53:47	9	p_u
water	53:44	0:0	10	p_u
arg	53:49	53:53	9	p_v
water	53:49	0:0	10	p_v
water	53:54	0:0	8	;
water	54:12	0:0	8	}
water	55:12	0:0	6	p_u
op	55:16	0:0	6	+=
water	55:19	0:0	6	i_dest_margin_c
water	55:34	0:0	6	;
water	56:12	0:0	6	p_v
op	56:16	0:0	6	+=
water	56:19	0:0	6	i_dest_margin_c
water	56:34	0:0	6	;
water	57:8	0:0	6	}
water	58:8	0:0	4	p_line
op	58:15	0:0	4	+=
water	58:18	0:0	4	i_source_margin
water	58:33	0:0	4	;
water	59:8	0:0	4	p_y
op	59:12	0:0	4	+=
water	59:15	0:0	4	i_dest_margin
water	59:28	0:0	4	;
water	60:8	0:0	4	b_skip
op	60:15	0:0	4	=
op	60:17	0:0	4	!
water	60:18	0:0	4	b_skip
water	60:24	0:0	4	;
water	61:4	0:0	4	}

func	2:0	33:0	0	static subpicture_t *	ProcessPacket
params	2:34	0:0	1	
param	2:36	2:52	2	decoder_t *	p_dec
param	2:54	2:71	2	kate_packet *	p_kp
param	3:28	3:47	2	block_t * *	pp_block
stmnts	0:0	32:16	1	
decl	5:4	5:39	2	decoder_sys_t	*p_sys
op	5:25	0:0	2	=
water	5:27	0:0	2	p_dec
op	5:32	0:0	2	->
water	5:34	0:0	2	p_sys
decl	6:4	6:32	2	block_t	*p_block
op	6:21	0:0	2	=
op	6:23	0:0	2	*
water	6:24	0:0	2	pp_block
decl	7:4	7:30	2	subpicture_t	*p_buf
op	7:24	0:0	2	=
water	7:26	0:0	2	NULL
if	9:4	12:4	2	(p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts != p_sys -> i_pts)
cond	9:8	9:68	3	p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts != p_sys -> i_pts
water	9:8	0:0	4	p_block
op	9:15	0:0	4	->
water	9:17	0:0	4	i_pts
op	9:23	0:0	4	>
water	9:25	0:0	4	VLC_TS_INVALID
op	9:40	0:0	4	&&
water	9:43	0:0	4	p_block
op	9:50	0:0	4	->
water	9:52	0:0	4	i_pts
op	9:58	0:0	4	!=
water	9:61	0:0	4	p_sys
op	9:66	0:0	4	->
water	9:68	0:0	4	i_pts
stmts	10:4	12:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	i_pts
op	11:21	0:0	4	=
water	11:23	0:0	4	p_block
op	11:30	0:0	4	->
water	11:32	0:0	4	i_pts
water	11:37	0:0	4	;
water	12:4	0:0	4	}
op	13:4	0:0	2	*
water	13:5	0:0	2	pp_block
op	13:14	0:0	2	=
water	13:16	0:0	2	NULL
water	13:20	0:0	2	;
if	15:4	24:4	2	(p_sys -> b_packetizer)
cond	15:8	15:15	3	p_sys -> b_packetizer
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	b_packetizer
stmts	16:4	24:4	3	
water	16:4	0:0	4	{
water	18:8	0:0	4	p_block
op	18:15	0:0	4	->
water	18:17	0:0	4	i_dts
op	18:23	0:0	4	=
water	18:25	0:0	4	p_block
op	18:32	0:0	4	->
water	18:34	0:0	4	i_pts
op	18:40	0:0	4	=
water	18:42	0:0	4	p_sys
op	18:47	0:0	4	->
water	18:49	0:0	4	i_pts
water	18:54	0:0	4	;
if	19:8	20:61	4	(p_sys -> i_headers >= p_sys -> i_num_headers)
cond	19:12	19:39	5	p_sys -> i_headers >= p_sys -> i_num_headers
water	19:12	0:0	6	p_sys
op	19:17	0:0	6	->
water	19:19	0:0	6	i_headers
op	19:29	0:0	6	>=
water	19:32	0:0	6	p_sys
op	19:37	0:0	6	->
water	19:39	0:0	6	i_num_headers
stmts	20:12	20:61	5	
water	20:12	0:0	6	p_block
op	20:19	0:0	6	->
water	20:21	0:0	6	i_length
op	20:30	0:0	6	=
water	20:32	0:0	6	p_sys
op	20:37	0:0	6	->
water	20:39	0:0	6	i_pts
op	20:45	0:0	6	-
water	20:47	0:0	6	p_block
op	20:54	0:0	6	->
water	20:56	0:0	6	i_pts
water	20:61	0:0	6	;
else	21:8	22:33	4
stmts	22:12	22:33	5	
water	22:12	0:0	6	p_block
op	22:19	0:0	6	->
water	22:21	0:0	6	i_length
op	22:30	0:0	6	=
water	22:32	0:0	6	0
water	22:33	0:0	6	;
water	23:8	0:0	4	p_buf
op	23:14	0:0	4	=
water	23:16	0:0	4	p_block
water	23:23	0:0	4	;
water	24:4	0:0	4	}
else	25:4	31:4	2
stmts	27:4	31:4	3	
water	27:4	0:0	4	{
water	28:8	0:0	4	p_buf
op	28:14	0:0	4	=
call	28:16	28:51	4	DecodePacket
arg	28:30	28:35	5	p_dec
water	28:30	0:0	6	p_dec
arg	28:37	28:41	5	p_kp
water	28:37	0:0	6	p_kp
arg	28:43	28:51	5	p_block
water	28:43	0:0	6	p_block
water	28:52	0:0	4	;
if	29:8	30:36	4	(p_block)
cond	29:12	29:12	5	p_block
water	29:12	0:0	6	p_block
stmts	30:12	30:36	5	
call	30:12	30:35	6	block_Release
arg	30:27	30:35	7	p_block
water	30:27	0:0	8	p_block
water	30:36	0:0	6	;
water	31:4	0:0	4	}
return	32:4	32:16	2	p_buf
water	32:11	0:0	3	p_buf

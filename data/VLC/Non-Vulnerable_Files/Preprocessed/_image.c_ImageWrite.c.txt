func	2:0	83:0	0	static block_t *	ImageWrite
params	2:26	0:0	1	
param	2:28	2:52	2	image_handler_t *	p_image
param	2:54	2:70	2	picture_t *	p_pic
param	3:28	3:52	2	video_format_t *	p_fmt_in
param	4:28	4:54	2	video_format_t *	p_fmt_out
stmnts	0:0	82:18	1	
decl	6:4	6:20	2	block_t	*p_block
if	8:4	15:4	2	(p_image -> p_enc && ( p_image -> p_enc -> fmt_out . i_codec != p_fmt_out -> i_chroma || p_image -> p_enc -> fmt_out . video . i_width != p_fmt_out -> i_width || p_image -> p_enc -> fmt_out . video . i_height != p_fmt_out -> i_height ))
cond	8:8	11:72	3	p_image -> p_enc && ( p_image -> p_enc -> fmt_out . i_codec != p_fmt_out -> i_chroma || p_image -> p_enc -> fmt_out . video . i_width != p_fmt_out -> i_width || p_image -> p_enc -> fmt_out . video . i_height != p_fmt_out -> i_height )
water	8:8	0:0	4	p_image
op	8:15	0:0	4	->
water	8:17	0:0	4	p_enc
op	8:23	0:0	4	&&
water	9:8	0:0	4	(
water	9:10	0:0	4	p_image
op	9:17	0:0	4	->
water	9:19	0:0	4	p_enc
op	9:24	0:0	4	->
water	9:26	0:0	4	fmt_out
op	9:33	0:0	4	.
water	9:34	0:0	4	i_codec
op	9:42	0:0	4	!=
water	9:45	0:0	4	p_fmt_out
op	9:54	0:0	4	->
water	9:56	0:0	4	i_chroma
op	9:65	0:0	4	||
water	10:10	0:0	4	p_image
op	10:17	0:0	4	->
water	10:19	0:0	4	p_enc
op	10:24	0:0	4	->
water	10:26	0:0	4	fmt_out
op	10:33	0:0	4	.
water	10:34	0:0	4	video
op	10:39	0:0	4	.
water	10:40	0:0	4	i_width
op	10:48	0:0	4	!=
water	10:51	0:0	4	p_fmt_out
op	10:60	0:0	4	->
water	10:62	0:0	4	i_width
op	10:70	0:0	4	||
water	11:10	0:0	4	p_image
op	11:17	0:0	4	->
water	11:19	0:0	4	p_enc
op	11:24	0:0	4	->
water	11:26	0:0	4	fmt_out
op	11:33	0:0	4	.
water	11:34	0:0	4	video
op	11:39	0:0	4	.
water	11:40	0:0	4	i_height
op	11:49	0:0	4	!=
water	11:52	0:0	4	p_fmt_out
op	11:61	0:0	4	->
water	11:63	0:0	4	i_height
water	11:72	0:0	4	)
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:38	4	DeleteEncoder
arg	13:23	13:38	5	p_image->p_enc
water	13:23	0:0	6	p_image
op	13:30	0:0	6	->
water	13:32	0:0	6	p_enc
water	13:39	0:0	4	;
water	14:8	0:0	4	p_image
op	14:15	0:0	4	->
water	14:17	0:0	4	p_enc
op	14:23	0:0	4	=
water	14:25	0:0	4	0
water	14:26	0:0	4	;
water	15:4	0:0	4	}
if	17:4	22:4	2	(! p_image -> p_enc)
cond	17:8	17:18	3	! p_image -> p_enc
op	17:8	0:0	4	!
water	17:9	0:0	4	p_image
op	17:16	0:0	4	->
water	17:18	0:0	4	p_enc
stmts	18:4	22:4	3	
water	18:4	0:0	4	{
water	19:8	0:0	4	p_image
op	19:15	0:0	4	->
water	19:17	0:0	4	p_enc
op	19:23	0:0	4	=
call	19:25	20:60	4	CreateEncoder
arg	19:40	19:57	5	p_image->p_parent
water	19:40	0:0	6	p_image
op	19:47	0:0	6	->
water	19:49	0:0	6	p_parent
arg	20:40	20:48	5	p_fmt_in
water	20:40	0:0	6	p_fmt_in
arg	20:50	20:60	5	p_fmt_out
water	20:50	0:0	6	p_fmt_out
water	20:61	0:0	4	;
if	21:8	21:41	4	(! p_image -> p_enc)
cond	21:12	21:22	5	! p_image -> p_enc
op	21:12	0:0	6	!
water	21:13	0:0	6	p_image
op	21:20	0:0	6	->
water	21:22	0:0	6	p_enc
stmts	21:30	21:41	5	
return	21:30	21:41	6	NULL
water	21:37	0:0	7	NULL
water	22:4	0:0	4	}
if	24:4	72:4	2	(p_image -> p_enc -> fmt_in . video . i_chroma != p_fmt_in -> i_chroma || p_image -> p_enc -> fmt_in . video . i_width != p_fmt_in -> i_width || p_image -> p_enc -> fmt_in . video . i_height != p_fmt_in -> i_height)
cond	24:8	26:59	3	p_image -> p_enc -> fmt_in . video . i_chroma != p_fmt_in -> i_chroma || p_image -> p_enc -> fmt_in . video . i_width != p_fmt_in -> i_width || p_image -> p_enc -> fmt_in . video . i_height != p_fmt_in -> i_height
water	24:8	0:0	4	p_image
op	24:15	0:0	4	->
water	24:17	0:0	4	p_enc
op	24:22	0:0	4	->
water	24:24	0:0	4	fmt_in
op	24:30	0:0	4	.
water	24:31	0:0	4	video
op	24:36	0:0	4	.
water	24:37	0:0	4	i_chroma
op	24:46	0:0	4	!=
water	24:49	0:0	4	p_fmt_in
op	24:57	0:0	4	->
water	24:59	0:0	4	i_chroma
op	24:68	0:0	4	||
water	25:8	0:0	4	p_image
op	25:15	0:0	4	->
water	25:17	0:0	4	p_enc
op	25:22	0:0	4	->
water	25:24	0:0	4	fmt_in
op	25:30	0:0	4	.
water	25:31	0:0	4	video
op	25:36	0:0	4	.
water	25:37	0:0	4	i_width
op	25:45	0:0	4	!=
water	25:48	0:0	4	p_fmt_in
op	25:56	0:0	4	->
water	25:58	0:0	4	i_width
op	25:66	0:0	4	||
water	26:8	0:0	4	p_image
op	26:15	0:0	4	->
water	26:17	0:0	4	p_enc
op	26:22	0:0	4	->
water	26:24	0:0	4	fmt_in
op	26:30	0:0	4	.
water	26:31	0:0	4	video
op	26:36	0:0	4	.
water	26:37	0:0	4	i_height
op	26:46	0:0	4	!=
water	26:49	0:0	4	p_fmt_in
op	26:57	0:0	4	->
water	26:59	0:0	4	i_height
stmts	27:4	72:4	3	
water	27:4	0:0	4	{
decl	28:8	28:28	4	picture_t	*p_tmp_pic
if	29:8	37:8	4	(p_image -> p_filter)
cond	29:12	29:21	5	p_image -> p_filter
water	29:12	0:0	6	p_image
op	29:19	0:0	6	->
water	29:21	0:0	6	p_filter
stmts	30:8	37:8	5	
if	30:8	37:8	6	(p_image -> p_filter -> fmt_in . video . i_chroma != p_fmt_in -> i_chroma || p_image -> p_filter -> fmt_out . video . i_chroma != p_image -> p_enc -> fmt_in . video . i_chroma)
cond	30:12	32:41	7	p_image -> p_filter -> fmt_in . video . i_chroma != p_fmt_in -> i_chroma || p_image -> p_filter -> fmt_out . video . i_chroma != p_image -> p_enc -> fmt_in . video . i_chroma
water	30:12	0:0	8	p_image
op	30:19	0:0	8	->
water	30:21	0:0	8	p_filter
op	30:29	0:0	8	->
water	30:31	0:0	8	fmt_in
op	30:37	0:0	8	.
water	30:38	0:0	8	video
op	30:43	0:0	8	.
water	30:44	0:0	8	i_chroma
op	30:53	0:0	8	!=
water	30:56	0:0	8	p_fmt_in
op	30:64	0:0	8	->
water	30:66	0:0	8	i_chroma
op	30:75	0:0	8	||
water	31:12	0:0	8	p_image
op	31:19	0:0	8	->
water	31:21	0:0	8	p_filter
op	31:29	0:0	8	->
water	31:31	0:0	8	fmt_out
op	31:38	0:0	8	.
water	31:39	0:0	8	video
op	31:44	0:0	8	.
water	31:45	0:0	8	i_chroma
op	31:54	0:0	8	!=
water	32:12	0:0	8	p_image
op	32:19	0:0	8	->
water	32:21	0:0	8	p_enc
op	32:26	0:0	8	->
water	32:28	0:0	8	fmt_in
op	32:34	0:0	8	.
water	32:35	0:0	8	video
op	32:40	0:0	8	.
water	32:41	0:0	8	i_chroma
stmts	33:8	37:8	7	
water	33:8	0:0	8	{
call	35:12	35:44	8	DeleteFilter
arg	35:26	35:44	9	p_image->p_filter
water	35:26	0:0	10	p_image
op	35:33	0:0	10	->
water	35:35	0:0	10	p_filter
water	35:45	0:0	8	;
water	36:12	0:0	8	p_image
op	36:19	0:0	8	->
water	36:21	0:0	8	p_filter
op	36:30	0:0	8	=
water	36:32	0:0	8	0
water	36:33	0:0	8	;
water	37:8	0:0	8	}
if	39:8	51:8	4	(! p_image -> p_filter)
cond	39:12	39:22	5	! p_image -> p_filter
op	39:12	0:0	6	!
water	39:13	0:0	6	p_image
op	39:20	0:0	6	->
water	39:22	0:0	6	p_filter
stmts	40:8	51:8	5	
water	40:8	0:0	6	{
decl	41:12	41:30	6	es_format_t	fmt_in
call	42:12	42:66	6	es_format_Init
arg	42:28	42:35	7	&fmt_in
op	42:28	0:0	8	&
water	42:29	0:0	8	fmt_in
arg	42:37	42:45	7	VIDEO_ES
water	42:37	0:0	8	VIDEO_ES
arg	42:47	42:66	7	p_fmt_in->i_chroma
water	42:47	0:0	8	p_fmt_in
op	42:55	0:0	8	->
water	42:57	0:0	8	i_chroma
water	42:67	0:0	6	;
water	43:12	0:0	6	fmt_in
op	43:18	0:0	6	.
water	43:19	0:0	6	video
op	43:25	0:0	6	=
op	43:27	0:0	6	*
water	43:28	0:0	6	p_fmt_in
water	43:36	0:0	6	;
water	44:12	0:0	6	p_image
op	44:19	0:0	6	->
water	44:21	0:0	6	p_filter
op	44:30	0:0	6	=
call	45:16	46:66	6	CreateFilter
arg	45:30	45:47	7	p_image->p_parent
water	45:30	0:0	8	p_image
op	45:37	0:0	8	->
water	45:39	0:0	8	p_parent
arg	45:49	45:56	7	&fmt_in
op	45:49	0:0	8	&
water	45:50	0:0	8	fmt_in
arg	46:30	46:59	7	&p_image->p_enc->fmt_in.video
op	46:30	0:0	8	&
water	46:31	0:0	8	p_image
op	46:38	0:0	8	->
water	46:40	0:0	8	p_enc
op	46:45	0:0	8	->
water	46:47	0:0	8	fmt_in
op	46:53	0:0	8	.
water	46:54	0:0	8	video
arg	46:61	46:66	7	NULL
water	46:61	0:0	8	NULL
water	46:67	0:0	6	;
if	47:12	50:12	6	(! p_image -> p_filter)
cond	47:16	47:26	7	! p_image -> p_filter
op	47:16	0:0	8	!
water	47:17	0:0	8	p_image
op	47:24	0:0	8	->
water	47:26	0:0	8	p_filter
stmts	48:12	50:12	7	
water	48:12	0:0	8	{
return	49:16	49:27	8	NULL
water	49:23	0:0	9	NULL
water	50:12	0:0	8	}
water	51:8	0:0	6	}
else	52:8	59:8	4
stmts	53:8	59:8	5	
water	53:8	0:0	6	{
water	55:12	0:0	6	p_image
op	55:19	0:0	6	->
water	55:21	0:0	6	p_filter
op	55:29	0:0	6	->
water	55:31	0:0	6	fmt_in
op	55:37	0:0	6	.
water	55:38	0:0	6	i_codec
op	55:46	0:0	6	=
water	55:48	0:0	6	p_fmt_in
op	55:56	0:0	6	->
water	55:58	0:0	6	i_chroma
water	55:66	0:0	6	;
water	56:12	0:0	6	p_image
op	56:19	0:0	6	->
water	56:21	0:0	6	p_filter
op	56:29	0:0	6	->
water	56:31	0:0	6	fmt_out
op	56:38	0:0	6	.
water	56:39	0:0	6	video
op	56:45	0:0	6	=
op	56:47	0:0	6	*
water	56:48	0:0	6	p_fmt_in
water	56:56	0:0	6	;
water	57:12	0:0	6	p_image
op	57:19	0:0	6	->
water	57:21	0:0	6	p_filter
op	57:29	0:0	6	->
water	57:31	0:0	6	fmt_out
op	57:38	0:0	6	.
water	57:39	0:0	6	i_codec
op	57:47	0:0	6	=
water	57:48	0:0	6	p_image
op	57:55	0:0	6	->
water	57:57	0:0	6	p_enc
op	57:62	0:0	6	->
water	57:64	0:0	6	fmt_in
op	57:70	0:0	6	.
water	57:71	0:0	6	i_codec
water	57:78	0:0	6	;
water	58:12	0:0	6	p_image
op	58:19	0:0	6	->
water	58:21	0:0	6	p_filter
op	58:29	0:0	6	->
water	58:31	0:0	6	fmt_out
op	58:38	0:0	6	.
water	58:39	0:0	6	video
op	58:45	0:0	6	=
water	58:47	0:0	6	p_image
op	58:54	0:0	6	->
water	58:56	0:0	6	p_enc
op	58:61	0:0	6	->
water	58:63	0:0	6	fmt_in
op	58:69	0:0	6	.
water	58:70	0:0	6	video
water	58:75	0:0	6	;
water	59:8	0:0	6	}
call	60:8	60:28	4	picture_Hold
arg	60:22	60:28	5	p_pic
water	60:22	0:0	6	p_pic
water	60:29	0:0	4	;
water	61:8	0:0	4	p_tmp_pic
op	61:18	0:0	4	=
call	62:12	62:73	4	p_image->p_filter->pf_video_filter
arg	62:48	62:65	5	p_image->p_filter
water	62:48	0:0	6	p_image
op	62:55	0:0	6	->
water	62:57	0:0	6	p_filter
arg	62:67	62:73	5	p_pic
water	62:67	0:0	6	p_pic
water	62:74	0:0	4	;
if	63:8	69:8	4	(likely (p_tmp_pic != NULL ))
cond	63:12	63:36	5	likely (p_tmp_pic != NULL )
call	63:12	63:36	6	likely
arg	63:19	63:36	7	p_tmp_pic!=NULL
water	63:19	0:0	8	p_tmp_pic
op	63:29	0:0	8	!=
water	63:32	0:0	8	NULL
stmts	64:8	69:8	5	
water	64:8	0:0	6	{
water	65:12	0:0	6	p_block
op	65:20	0:0	6	=
call	65:22	66:65	6	p_image->p_enc->pf_encode_video
arg	65:55	65:69	7	p_image->p_enc
water	65:55	0:0	8	p_image
op	65:62	0:0	8	->
water	65:64	0:0	8	p_enc
arg	66:55	66:65	7	p_tmp_pic
water	66:55	0:0	8	p_tmp_pic
water	66:66	0:0	6	;
call	67:12	68:62	6	p_image->p_filter->pf_video_buffer_del
arg	67:52	67:69	7	p_image->p_filter
water	67:52	0:0	8	p_image
op	67:59	0:0	8	->
water	67:61	0:0	8	p_filter
arg	68:52	68:62	7	p_tmp_pic
water	68:52	0:0	8	p_tmp_pic
water	68:63	0:0	6	;
water	69:8	0:0	6	}
else	70:8	71:26	4
stmts	71:12	71:26	5	
water	71:12	0:0	6	p_block
op	71:20	0:0	6	=
water	71:22	0:0	6	NULL
water	71:26	0:0	6	;
water	72:4	0:0	4	}
else	73:4	76:4	2
stmts	74:4	76:4	3	
water	74:4	0:0	4	{
water	75:8	0:0	4	p_block
op	75:16	0:0	4	=
call	75:18	75:73	4	p_image->p_enc->pf_encode_video
arg	75:51	75:65	5	p_image->p_enc
water	75:51	0:0	6	p_image
op	75:58	0:0	6	->
water	75:60	0:0	6	p_enc
arg	75:67	75:73	5	p_pic
water	75:67	0:0	6	p_pic
water	75:74	0:0	4	;
water	76:4	0:0	4	}
if	77:4	81:4	2	(! p_block)
cond	77:8	77:9	3	! p_block
op	77:8	0:0	4	!
water	77:9	0:0	4	p_block
stmts	78:4	81:4	3	
water	78:4	0:0	4	{
call	79:8	79:55	4	msg_Dbg
arg	79:17	79:34	5	p_image->p_parent
water	79:17	0:0	6	p_image
op	79:24	0:0	6	->
water	79:26	0:0	6	p_parent
arg	79:36	79:55	5	"no image encoded"
water	79:36	0:0	6	"no image encoded"
water	79:56	0:0	4	;
return	80:8	80:16	4	0
water	80:15	0:0	5	0
water	81:4	0:0	4	}
return	82:4	82:18	2	p_block
water	82:11	0:0	3	p_block

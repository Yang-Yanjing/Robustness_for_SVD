func	2:0	65:0	0	static int	Demux
params	2:16	0:0	1	
param	2:18	2:35	2	demux_t *	p_demux
stmnts	0:0	64:12	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:21	2	int64_t	i_maxdate
decl	6:4	6:14	2	int	i_read
for	7:4	61:4	2	( int i = 0 ;i < p_sys -> i_tracks;i ++)
forinit	0:0	7:18	3	 int i = 0 ;
decl	7:9	7:18	4	int	i
op	7:15	0:0	4	=
water	7:17	0:0	4	0
cond	7:20	7:31	3	i < p_sys -> i_tracks
water	7:20	0:0	4	i
op	7:22	0:0	4	<
water	7:24	0:0	4	p_sys
op	7:29	0:0	4	->
water	7:31	0:0	4	i_tracks
forexpr	7:41	7:42	3	i ++
water	7:41	0:0	4	i
op	7:42	0:0	4	++
stmts	8:4	61:4	3	
water	8:4	0:0	4	{
if	10:8	11:20	4	(tk . i_current_subtitle >= tk . i_subtitles)
cond	10:12	10:40	5	tk . i_current_subtitle >= tk . i_subtitles
water	10:12	0:0	6	tk
op	10:14	0:0	6	.
water	10:15	0:0	6	i_current_subtitle
op	10:34	0:0	6	>=
water	10:37	0:0	6	tk
op	10:39	0:0	6	.
water	10:40	0:0	6	i_subtitles
stmts	11:12	11:20	5	
continue	11:12	11:20	6	
water	12:8	0:0	4	i_maxdate
op	12:18	0:0	4	=
water	12:20	0:0	4	p_sys
op	12:25	0:0	4	->
water	12:27	0:0	4	i_next_demux_date
water	12:44	0:0	4	;
if	13:8	17:8	4	(i_maxdate <= 0 && tk . i_current_subtitle < tk . i_subtitles)
cond	13:12	13:57	5	i_maxdate <= 0 && tk . i_current_subtitle < tk . i_subtitles
water	13:12	0:0	6	i_maxdate
op	13:22	0:0	6	<=
water	13:25	0:0	6	0
op	13:27	0:0	6	&&
water	13:30	0:0	6	tk
op	13:32	0:0	6	.
water	13:33	0:0	6	i_current_subtitle
op	13:52	0:0	6	<
water	13:54	0:0	6	tk
op	13:56	0:0	6	.
water	13:57	0:0	6	i_subtitles
stmts	14:8	17:8	5	
water	14:8	0:0	6	{
water	16:12	0:0	6	i_maxdate
op	16:22	0:0	6	=
water	16:24	0:0	6	tk
op	16:26	0:0	6	.
water	16:27	0:0	6	p_subtitles
op	16:38	0:0	6	[
water	16:39	0:0	6	tk
op	16:41	0:0	6	.
water	16:42	0:0	6	i_current_subtitle
op	16:60	0:0	6	]
op	16:61	0:0	6	.
water	16:62	0:0	6	i_start
op	16:70	0:0	6	+
water	16:72	0:0	6	1
water	16:73	0:0	6	;
water	17:8	0:0	6	}
while	18:8	59:8	4	(tk . i_current_subtitle < tk . i_subtitles && tk . p_subtitles [ tk . i_current_subtitle ] . i_start < i_maxdate)
cond	18:15	19:63	5	tk . i_current_subtitle < tk . i_subtitles && tk . p_subtitles [ tk . i_current_subtitle ] . i_start < i_maxdate
water	18:15	0:0	6	tk
op	18:17	0:0	6	.
water	18:18	0:0	6	i_current_subtitle
op	18:37	0:0	6	<
water	18:39	0:0	6	tk
op	18:41	0:0	6	.
water	18:42	0:0	6	i_subtitles
op	18:54	0:0	6	&&
water	19:15	0:0	6	tk
op	19:17	0:0	6	.
water	19:18	0:0	6	p_subtitles
op	19:29	0:0	6	[
water	19:30	0:0	6	tk
op	19:32	0:0	6	.
water	19:33	0:0	6	i_current_subtitle
op	19:51	0:0	6	]
op	19:52	0:0	6	.
water	19:53	0:0	6	i_start
op	19:61	0:0	6	<
water	19:63	0:0	6	i_maxdate
stmts	20:8	59:8	5	
water	20:8	0:0	6	{
decl	21:12	21:79	6	int	i_pos
op	21:22	0:0	6	=
water	21:24	0:0	6	tk
op	21:26	0:0	6	.
water	21:27	0:0	6	p_subtitles
op	21:38	0:0	6	[
water	21:39	0:0	6	tk
op	21:41	0:0	6	.
water	21:42	0:0	6	i_current_subtitle
op	21:60	0:0	6	]
op	21:61	0:0	6	.
water	21:62	0:0	6	i_vobsub_location
decl	22:12	22:28	6	block_t	*p_block
decl	23:12	23:26	6	int	i_size
op	23:23	0:0	6	=
water	23:25	0:0	6	0
if	25:12	28:12	6	(tk . i_current_subtitle + 1 < tk . i_subtitles)
cond	25:16	25:47	7	tk . i_current_subtitle + 1 < tk . i_subtitles
water	25:16	0:0	8	tk
op	25:18	0:0	8	.
water	25:19	0:0	8	i_current_subtitle
op	25:38	0:0	8	+
water	25:40	0:0	8	1
op	25:42	0:0	8	<
water	25:44	0:0	8	tk
op	25:46	0:0	8	.
water	25:47	0:0	8	i_subtitles
stmts	26:12	28:12	7	
water	26:12	0:0	8	{
water	27:16	0:0	8	i_size
op	27:23	0:0	8	=
water	27:25	0:0	8	tk
op	27:27	0:0	8	.
water	27:28	0:0	8	p_subtitles
op	27:39	0:0	8	[
water	27:40	0:0	8	tk
op	27:42	0:0	8	.
water	27:43	0:0	8	i_current_subtitle
op	27:61	0:0	8	+
water	27:62	0:0	8	1
op	27:63	0:0	8	]
op	27:64	0:0	8	.
water	27:65	0:0	8	i_vobsub_location
op	27:83	0:0	8	-
water	27:85	0:0	8	i_pos
water	27:90	0:0	8	;
water	28:12	0:0	8	}
if	29:12	29:44	6	(i_size <= 0)
cond	29:16	29:26	7	i_size <= 0
water	29:16	0:0	8	i_size
op	29:23	0:0	8	<=
water	29:26	0:0	8	0
stmts	29:30	29:44	7	
water	29:30	0:0	8	i_size
op	29:37	0:0	8	=
water	29:39	0:0	8	65535
water	29:44	0:0	8	;
if	31:12	37:12	6	(stream_Seek (p_sys -> p_vobsub_stream ,i_pos ))
cond	31:16	31:59	7	stream_Seek (p_sys -> p_vobsub_stream ,i_pos )
call	31:16	31:59	8	stream_Seek
arg	31:29	31:51	9	p_sys->p_vobsub_stream
water	31:29	0:0	10	p_sys
op	31:34	0:0	10	->
water	31:36	0:0	10	p_vobsub_stream
arg	31:53	31:59	9	i_pos
water	31:53	0:0	10	i_pos
stmts	32:12	37:12	7	
water	32:12	0:0	8	{
call	33:16	34:84	8	msg_Warn
arg	33:26	33:33	9	p_demux
water	33:26	0:0	10	p_demux
arg	34:26	34:76	9	"cannot seek in the VobSub to the correct time %d"
water	34:26	0:0	10	"cannot seek in the VobSub to the correct time %d"
arg	34:78	34:84	9	i_pos
water	34:78	0:0	10	i_pos
water	34:85	0:0	8	;
water	35:16	0:0	8	tk
op	35:18	0:0	8	.
water	35:19	0:0	8	i_current_subtitle
op	35:37	0:0	8	++
water	35:39	0:0	8	;
continue	36:16	36:24	8	
water	37:12	0:0	8	}
if	39:12	43:12	6	(( p_block =block_Alloc (i_size ) ) == NULL)
cond	39:16	39:55	7	( p_block =block_Alloc (i_size ) ) == NULL
water	39:16	0:0	8	(
water	39:18	0:0	8	p_block
op	39:26	0:0	8	=
call	39:28	39:48	8	block_Alloc
arg	39:41	39:48	9	i_size
water	39:41	0:0	10	i_size
water	39:50	0:0	8	)
op	39:52	0:0	8	==
water	39:55	0:0	8	NULL
stmts	40:12	43:12	7	
water	40:12	0:0	8	{
water	41:16	0:0	8	tk
op	41:18	0:0	8	.
water	41:19	0:0	8	i_current_subtitle
op	41:37	0:0	8	++
water	41:39	0:0	8	;
continue	42:16	42:24	8	
water	43:12	0:0	8	}
water	45:12	0:0	6	i_read
op	45:19	0:0	6	=
call	45:21	45:84	6	stream_Read
arg	45:34	45:56	7	p_sys->p_vobsub_stream
water	45:34	0:0	8	p_sys
op	45:39	0:0	8	->
water	45:41	0:0	8	p_vobsub_stream
arg	45:58	45:75	7	p_block->p_buffer
water	45:58	0:0	8	p_block
op	45:65	0:0	8	->
water	45:67	0:0	8	p_buffer
arg	45:77	45:84	7	i_size
water	45:77	0:0	8	i_size
water	45:85	0:0	6	;
if	46:12	51:12	6	(i_read <= 6)
cond	46:16	46:26	7	i_read <= 6
water	46:16	0:0	8	i_read
op	46:23	0:0	8	<=
water	46:26	0:0	8	6
stmts	47:12	51:12	7	
water	47:12	0:0	8	{
call	48:16	48:39	8	block_Release
arg	48:31	48:39	9	p_block
water	48:31	0:0	10	p_block
water	48:40	0:0	8	;
water	49:16	0:0	8	tk
op	49:18	0:0	8	.
water	49:19	0:0	8	i_current_subtitle
op	49:37	0:0	8	++
water	49:39	0:0	8	;
continue	50:16	50:24	8	
water	51:12	0:0	8	}
water	52:12	0:0	6	p_block
op	52:19	0:0	6	->
water	52:21	0:0	6	i_buffer
op	52:30	0:0	6	=
water	52:32	0:0	6	i_read
water	52:38	0:0	6	;
water	54:12	0:0	6	p_block
op	54:19	0:0	6	->
water	54:21	0:0	6	i_pts
op	54:27	0:0	6	=
water	54:29	0:0	6	VLC_TS_0
op	54:38	0:0	6	+
water	54:40	0:0	6	tk
op	54:42	0:0	6	.
water	54:43	0:0	6	p_subtitles
op	54:54	0:0	6	[
water	54:55	0:0	6	tk
op	54:57	0:0	6	.
water	54:58	0:0	6	i_current_subtitle
op	54:76	0:0	6	]
op	54:77	0:0	6	.
water	54:78	0:0	6	i_start
water	54:85	0:0	6	;
call	56:12	56:42	6	DemuxVobSub
arg	56:25	56:32	7	p_demux
water	56:25	0:0	8	p_demux
arg	56:34	56:42	7	p_block
water	56:34	0:0	8	p_block
water	56:43	0:0	6	;
call	57:12	57:35	6	block_Release
arg	57:27	57:35	7	p_block
water	57:27	0:0	8	p_block
water	57:36	0:0	6	;
water	58:12	0:0	6	tk
op	58:14	0:0	6	.
water	58:15	0:0	6	i_current_subtitle
op	58:33	0:0	6	++
water	58:35	0:0	6	;
water	59:8	0:0	6	}
water	61:4	0:0	4	}
water	63:4	0:0	2	p_sys
op	63:9	0:0	2	->
water	63:11	0:0	2	i_next_demux_date
op	63:29	0:0	2	=
water	63:31	0:0	2	0
water	63:32	0:0	2	;
return	64:4	64:12	2	1
water	64:11	0:0	3	1

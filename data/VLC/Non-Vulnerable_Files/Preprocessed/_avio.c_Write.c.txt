func	2:0	32:0	0	static ssize_t	Write
params	2:20	0:0	1	
param	2:21	2:48	2	sout_access_out_t *	p_access
param	2:50	2:67	2	block_t *	p_buffer
stmnts	0:0	31:18	1	
decl	4:4	4:74	2	sout_access_out_sys_t	*p_sys
op	4:33	0:0	2	=
water	4:35	0:0	2	(
water	4:36	0:0	2	sout_access_out_sys_t
op	4:57	0:0	2	*
water	4:58	0:0	2	)
water	4:59	0:0	2	p_access
op	4:67	0:0	2	->
water	4:69	0:0	2	p_sys
decl	5:4	5:22	2	size_t	i_write
op	5:19	0:0	2	=
water	5:21	0:0	2	0
decl	6:4	6:11	2	int	val
while	7:4	25:4	2	(p_buffer != NULL)
cond	7:11	7:23	3	p_buffer != NULL
water	7:11	0:0	4	p_buffer
op	7:20	0:0	4	!=
water	7:23	0:0	4	NULL
stmts	7:29	25:4	3	
water	7:29	0:0	4	{
decl	8:8	8:42	4	block_t	*p_next
op	8:24	0:0	4	=
water	8:26	0:0	4	p_buffer
op	8:34	0:0	4	->
water	8:36	0:0	4	p_next
water	10:8	0:0	4	val
op	10:12	0:0	4	=
call	10:14	10:78	4	url_write
arg	10:24	10:38	5	p_sys->context
water	10:24	0:0	6	p_sys
op	10:29	0:0	6	->
water	10:31	0:0	6	context
arg	10:40	10:58	5	p_buffer->p_buffer
water	10:40	0:0	6	p_buffer
op	10:48	0:0	6	->
water	10:50	0:0	6	p_buffer
arg	10:60	10:78	5	p_buffer->i_buffer
water	10:60	0:0	6	p_buffer
op	10:68	0:0	6	->
water	10:70	0:0	6	i_buffer
water	10:79	0:0	4	;
if	11:8	12:22	4	(val < 0)
cond	11:12	11:18	5	val < 0
water	11:12	0:0	6	val
op	11:16	0:0	6	<
water	11:18	0:0	6	0
stmts	12:12	12:22	5	
goto	12:12	12:22	6	error
water	12:17	0:0	7	error
water	13:8	0:0	4	i_write
op	13:16	0:0	4	+=
water	13:19	0:0	4	val
water	13:22	0:0	4	;
call	15:8	15:73	4	avio_write
arg	15:19	15:33	5	p_sys->context
water	15:19	0:0	6	p_sys
op	15:24	0:0	6	->
water	15:26	0:0	6	context
arg	15:35	15:53	5	p_buffer->p_buffer
water	15:35	0:0	6	p_buffer
op	15:43	0:0	6	->
water	15:45	0:0	6	p_buffer
arg	15:55	15:73	5	p_buffer->i_buffer
water	15:55	0:0	6	p_buffer
op	15:63	0:0	6	->
water	15:65	0:0	6	i_buffer
water	15:74	0:0	4	;
call	16:8	16:33	4	avio_flush
arg	16:19	16:33	5	p_sys->context
water	16:19	0:0	6	p_sys
op	16:24	0:0	6	->
water	16:26	0:0	6	context
water	16:34	0:0	4	;
if	17:8	20:8	4	(( val = p_sys -> context -> error ) != 0)
cond	17:12	17:45	5	( val = p_sys -> context -> error ) != 0
water	17:12	0:0	6	(
water	17:13	0:0	6	val
op	17:17	0:0	6	=
water	17:19	0:0	6	p_sys
op	17:24	0:0	6	->
water	17:26	0:0	6	context
op	17:33	0:0	6	->
water	17:35	0:0	6	error
water	17:40	0:0	6	)
op	17:42	0:0	6	!=
water	17:45	0:0	6	0
stmts	17:48	20:8	5	
water	17:48	0:0	6	{
water	18:12	0:0	6	p_sys
op	18:17	0:0	6	->
water	18:19	0:0	6	context
op	18:26	0:0	6	->
water	18:28	0:0	6	error
op	18:34	0:0	6	=
water	18:36	0:0	6	0
water	18:37	0:0	6	;
goto	19:12	19:22	6	error
water	19:17	0:0	7	error
water	20:8	0:0	6	}
water	21:8	0:0	4	i_write
op	21:16	0:0	4	+=
water	21:19	0:0	4	p_buffer
op	21:27	0:0	4	->
water	21:29	0:0	4	i_buffer
water	21:37	0:0	4	;
call	23:8	23:30	4	block_Release
arg	23:22	23:30	5	p_buffer
water	23:22	0:0	6	p_buffer
water	23:31	0:0	4	;
water	24:8	0:0	4	p_buffer
op	24:17	0:0	4	=
water	24:19	0:0	4	p_next
water	24:25	0:0	4	;
water	25:4	0:0	4	}
return	26:4	26:18	2	i_write
water	26:11	0:0	3	i_write
label	27:0	27:5	2	error :
call	28:4	29:42	2	msg_Err
arg	28:12	28:20	3	p_access
water	28:12	0:0	4	p_access
arg	28:22	28:48	3	"Wrote only %zu bytes: %s"
water	28:22	0:0	4	"Wrote only %zu bytes: %s"
arg	28:50	28:57	3	i_write
water	28:50	0:0	4	i_write
arg	29:12	29:42	3	vlc_strerror_c(AVUNERROR(val))
call	29:12	29:41	4	vlc_strerror_c
arg	29:27	29:41	5	AVUNERROR(val)
call	29:27	29:40	6	AVUNERROR
arg	29:37	29:40	7	val
water	29:37	0:0	8	val
water	29:43	0:0	2	;
call	30:4	30:33	2	block_ChainRelease
arg	30:24	30:33	3	p_buffer
water	30:24	0:0	4	p_buffer
water	30:34	0:0	2	;
return	31:4	31:18	2	i_write
water	31:11	0:0	3	i_write

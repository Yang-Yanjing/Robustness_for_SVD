func	2:0	89:0	0	rtcp_sender_t *	OpenRTCP
params	2:24	0:0	1	
param	2:25	2:42	2	vlc_object_t *	obj
param	2:44	2:54	2	int	rtp_fd
param	2:56	2:65	2	int	proto
param	3:25	3:33	2	bool	mux
stmnts	0:0	88:15	1	
decl	5:4	5:23	2	rtcp_sender_t	*rtcp
decl	6:4	6:16	2	uint8_t	*ptr
decl	7:4	7:10	2	int	fd
decl	8:4	8:31	2	char	src[NI_MAXNUMERICHOST]
decl	9:4	9:13	2	int	sport
if	10:4	11:19	2	(net_GetSockAddress (rtp_fd ,src ,& sport ))
cond	10:8	10:47	3	net_GetSockAddress (rtp_fd ,src ,& sport )
call	10:8	10:47	4	net_GetSockAddress
arg	10:28	10:34	5	rtp_fd
water	10:28	0:0	6	rtp_fd
arg	10:36	10:39	5	src
water	10:36	0:0	6	src
arg	10:41	10:47	5	&sport
op	10:41	0:0	6	&
water	10:42	0:0	6	sport
stmts	11:8	11:19	3	
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
if	12:4	23:4	2	(mux)
cond	12:8	12:8	3	mux
water	12:8	0:0	4	mux
stmts	13:4	23:4	3	
water	13:4	0:0	4	{
water	16:8	0:0	4	fd
op	16:11	0:0	4	=
call	16:13	16:28	4	vlc_dup
arg	16:22	16:28	5	rtp_fd
water	16:22	0:0	6	rtp_fd
water	16:29	0:0	4	;
decl	18:8	18:29	4	WSAPROTOCOL_INFO	info
call	19:8	19:65	4	WSADuplicateSocket
arg	19:28	19:34	5	rtp_fd
water	19:28	0:0	6	rtp_fd
arg	19:36	19:58	5	GetCurrentProcessId()
call	19:36	19:57	6	GetCurrentProcessId
arg	19:60	19:65	5	&info
op	19:60	0:0	6	&
water	19:61	0:0	6	info
water	19:66	0:0	4	;
water	20:8	0:0	4	fd
op	20:11	0:0	4	=
call	20:13	21:35	4	WSASocket
arg	20:24	20:43	5	info.iAddressFamily
water	20:24	0:0	6	info
op	20:28	0:0	6	.
water	20:29	0:0	6	iAddressFamily
arg	20:45	20:61	5	info.iSocketType
water	20:45	0:0	6	info
op	20:49	0:0	6	.
water	20:50	0:0	6	iSocketType
arg	20:63	20:77	5	info.iProtocol
water	20:63	0:0	6	info
op	20:67	0:0	6	.
water	20:68	0:0	6	iProtocol
arg	21:24	21:29	5	&info
op	21:24	0:0	6	&
water	21:25	0:0	6	info
arg	21:31	21:32	5	0
water	21:31	0:0	6	0
arg	21:34	21:35	5	0
water	21:34	0:0	6	0
water	21:36	0:0	4	;
water	23:4	0:0	4	}
else	24:4	44:4	2
stmts	25:4	44:4	3	
water	25:4	0:0	4	{
decl	27:8	27:35	4	char	dst[NI_MAXNUMERICHOST]
decl	28:8	28:17	4	int	dport
if	29:8	30:23	4	(net_GetPeerAddress (rtp_fd ,dst ,& dport ))
cond	29:12	29:51	5	net_GetPeerAddress (rtp_fd ,dst ,& dport )
call	29:12	29:51	6	net_GetPeerAddress
arg	29:32	29:38	7	rtp_fd
water	29:32	0:0	8	rtp_fd
arg	29:40	29:43	7	dst
water	29:40	0:0	8	dst
arg	29:45	29:51	7	&dport
op	29:45	0:0	8	&
water	29:46	0:0	8	dport
stmts	30:12	30:23	5	
return	30:12	30:23	6	NULL
water	30:19	0:0	7	NULL
water	31:8	0:0	4	sport
op	31:13	0:0	4	++
water	31:15	0:0	4	;
water	32:8	0:0	4	dport
op	32:13	0:0	4	++
water	32:15	0:0	4	;
water	33:8	0:0	4	fd
op	33:11	0:0	4	=
call	33:13	33:62	4	net_OpenDgram
arg	33:28	33:31	5	obj
water	33:28	0:0	6	obj
arg	33:33	33:36	5	src
water	33:33	0:0	6	src
arg	33:38	33:43	5	sport
water	33:38	0:0	6	sport
arg	33:45	33:48	5	dst
water	33:45	0:0	6	dst
arg	33:50	33:55	5	dport
water	33:50	0:0	6	dport
arg	33:57	33:62	5	proto
water	33:57	0:0	6	proto
water	33:63	0:0	4	;
if	34:8	43:8	4	(fd != - 1)
cond	34:12	34:19	5	fd != - 1
water	34:12	0:0	6	fd
op	34:15	0:0	6	!=
op	34:18	0:0	6	-
water	34:19	0:0	6	1
stmts	35:8	43:8	5	
water	35:8	0:0	6	{
decl	37:12	37:19	6	int	ttl
decl	38:12	38:40	6	socklen_t	len
op	38:26	0:0	6	=
op	38:28	0:0	6	sizeof
water	38:35	0:0	6	(
water	38:36	0:0	6	ttl
water	38:39	0:0	6	)
if	39:12	40:68	6	(!getsockopt (rtp_fd ,SOL_IP ,IP_MULTICAST_TTL ,& ttl ,& len ))
cond	39:16	39:73	7	!getsockopt (rtp_fd ,SOL_IP ,IP_MULTICAST_TTL ,& ttl ,& len )
op	39:16	0:0	8	!
call	39:17	39:73	8	getsockopt
arg	39:29	39:35	9	rtp_fd
water	39:29	0:0	10	rtp_fd
arg	39:37	39:43	9	SOL_IP
water	39:37	0:0	10	SOL_IP
arg	39:45	39:61	9	IP_MULTICAST_TTL
water	39:45	0:0	10	IP_MULTICAST_TTL
arg	39:63	39:67	9	&ttl
op	39:63	0:0	10	&
water	39:64	0:0	10	ttl
arg	39:69	39:73	9	&len
op	39:69	0:0	10	&
water	39:70	0:0	10	len
stmts	40:16	40:68	7	
call	40:16	40:67	8	setsockopt
arg	40:28	40:30	9	fd
water	40:28	0:0	10	fd
arg	40:32	40:38	9	SOL_IP
water	40:32	0:0	10	SOL_IP
arg	40:40	40:56	9	IP_MULTICAST_TTL
water	40:40	0:0	10	IP_MULTICAST_TTL
arg	40:58	40:62	9	&ttl
op	40:58	0:0	10	&
water	40:59	0:0	10	ttl
arg	40:64	40:67	9	len
water	40:64	0:0	10	len
water	40:68	0:0	8	;
call	42:12	42:76	6	setsockopt
arg	42:24	42:26	7	fd
water	42:24	0:0	8	fd
arg	42:28	42:38	7	SOL_SOCKET
water	42:28	0:0	8	SOL_SOCKET
arg	42:40	42:49	7	SO_RCVBUF
water	42:40	0:0	8	SO_RCVBUF
arg	42:51	42:62	7	&(int){0}
op	42:51	0:0	8	&
water	42:52	0:0	8	(
water	42:53	0:0	8	int
water	42:56	0:0	8	)
water	42:57	0:0	8	{
water	42:59	0:0	8	0
water	42:61	0:0	8	}
arg	42:64	42:76	7	sizeof(int)
op	42:64	0:0	8	sizeof
water	42:71	0:0	8	(
water	42:72	0:0	8	int
water	42:75	0:0	8	)
water	42:77	0:0	6	;
water	43:8	0:0	6	}
water	44:4	0:0	4	}
if	45:4	46:19	2	(fd == - 1)
cond	45:8	45:15	3	fd == - 1
water	45:8	0:0	4	fd
op	45:11	0:0	4	==
op	45:14	0:0	4	-
water	45:15	0:0	4	1
stmts	46:8	46:19	3	
return	46:8	46:19	4	NULL
water	46:15	0:0	5	NULL
water	47:4	0:0	2	rtcp
op	47:9	0:0	2	=
call	47:11	47:33	2	malloc
arg	47:19	47:33	3	sizeof(*rtcp)
op	47:19	0:0	4	sizeof
water	47:26	0:0	4	(
op	47:27	0:0	4	*
water	47:28	0:0	4	rtcp
water	47:32	0:0	4	)
water	47:34	0:0	2	;
if	48:4	52:4	2	(rtcp == NULL)
cond	48:8	48:16	3	rtcp == NULL
water	48:8	0:0	4	rtcp
op	48:13	0:0	4	==
water	48:16	0:0	4	NULL
stmts	49:4	52:4	3	
water	49:4	0:0	4	{
call	50:8	50:21	4	net_Close
arg	50:19	50:21	5	fd
water	50:19	0:0	6	fd
water	50:22	0:0	4	;
return	51:8	51:19	4	NULL
water	51:15	0:0	5	NULL
water	52:4	0:0	4	}
water	53:4	0:0	2	rtcp
op	53:8	0:0	2	->
water	53:10	0:0	2	handle
op	53:17	0:0	2	=
water	53:19	0:0	2	fd
water	53:21	0:0	2	;
water	54:4	0:0	2	rtcp
op	54:8	0:0	2	->
water	54:10	0:0	2	bytes
op	54:16	0:0	2	=
water	54:18	0:0	2	rtcp
op	54:22	0:0	2	->
water	54:24	0:0	2	packets
op	54:32	0:0	2	=
water	54:34	0:0	2	rtcp
op	54:38	0:0	2	->
water	54:40	0:0	2	counter
op	54:48	0:0	2	=
water	54:50	0:0	2	0
water	54:51	0:0	2	;
water	55:4	0:0	2	ptr
op	55:8	0:0	2	=
water	55:10	0:0	2	(
water	55:11	0:0	2	uint8_t
op	55:19	0:0	2	*
water	55:20	0:0	2	)
call	55:21	55:37	2	strchr
arg	55:29	55:32	3	src
water	55:29	0:0	4	src
arg	55:34	55:37	3	'%'
water	55:34	0:0	4	'%'
water	55:38	0:0	2	;
if	56:4	57:19	2	(ptr != NULL)
cond	56:8	56:15	3	ptr != NULL
water	56:8	0:0	4	ptr
op	56:12	0:0	4	!=
water	56:15	0:0	4	NULL
stmts	57:8	57:19	3	
op	57:8	0:0	4	*
water	57:9	0:0	4	ptr
op	57:13	0:0	4	=
water	57:15	0:0	4	'\0'
water	57:19	0:0	4	;
water	58:4	0:0	2	ptr
op	58:8	0:0	2	=
water	58:10	0:0	2	rtcp
op	58:14	0:0	2	->
water	58:16	0:0	2	payload
water	58:23	0:0	2	;
water	60:4	0:0	2	ptr
op	60:7	0:0	2	[
water	60:8	0:0	2	0
op	60:9	0:0	2	]
op	60:11	0:0	2	=
water	60:13	0:0	2	2
op	60:15	0:0	2	<<
water	60:18	0:0	2	6
water	60:19	0:0	2	;
water	61:4	0:0	2	ptr
op	61:7	0:0	2	[
water	61:8	0:0	2	1
op	61:9	0:0	2	]
op	61:11	0:0	2	=
water	61:13	0:0	2	200
water	61:16	0:0	2	;
call	62:4	62:22	2	SetWBE
arg	62:12	62:19	3	ptr+2
water	62:12	0:0	4	ptr
op	62:16	0:0	4	+
water	62:18	0:0	4	2
arg	62:21	62:22	3	6
water	62:21	0:0	4	6
water	62:23	0:0	2	;
call	63:4	63:25	2	memset
arg	63:12	63:19	3	ptr+4
water	63:12	0:0	4	ptr
op	63:16	0:0	4	+
water	63:18	0:0	4	4
arg	63:21	63:22	3	0
water	63:21	0:0	4	0
arg	63:24	63:25	3	4
water	63:24	0:0	4	4
water	63:26	0:0	2	;
call	64:4	64:34	2	SetQWBE
arg	64:13	64:20	3	ptr+8
water	64:13	0:0	4	ptr
op	64:17	0:0	4	+
water	64:19	0:0	4	8
arg	64:22	64:34	3	NTPtime64()
call	64:22	64:33	4	NTPtime64
water	64:35	0:0	2	;
call	65:4	65:27	2	memset
arg	65:12	65:20	3	ptr+16
water	65:12	0:0	4	ptr
op	65:16	0:0	4	+
water	65:18	0:0	4	16
arg	65:22	65:23	3	0
water	65:22	0:0	4	0
arg	65:25	65:27	3	12
water	65:25	0:0	4	12
water	65:28	0:0	2	;
water	66:4	0:0	2	ptr
op	66:8	0:0	2	+=
water	66:11	0:0	2	28
water	66:13	0:0	2	;
decl	68:4	68:23	2	uint8_t	*sdes
op	68:18	0:0	2	=
water	68:20	0:0	2	ptr
water	69:4	0:0	2	ptr
op	69:7	0:0	2	[
water	69:8	0:0	2	0
op	69:9	0:0	2	]
op	69:11	0:0	2	=
water	69:13	0:0	2	(
water	69:14	0:0	2	2
op	69:16	0:0	2	<<
water	69:19	0:0	2	6
water	69:20	0:0	2	)
op	69:22	0:0	2	|
water	69:24	0:0	2	1
water	69:25	0:0	2	;
water	70:4	0:0	2	ptr
op	70:7	0:0	2	[
water	70:8	0:0	2	1
op	70:9	0:0	2	]
op	70:11	0:0	2	=
water	70:13	0:0	2	202
water	70:16	0:0	2	;
decl	71:4	71:29	2	uint8_t	*lenptr
op	71:20	0:0	2	=
water	71:22	0:0	2	ptr
op	71:26	0:0	2	+
water	71:28	0:0	2	2
call	72:4	72:25	2	memset
arg	72:12	72:19	3	ptr+4
water	72:12	0:0	4	ptr
op	72:16	0:0	4	+
water	72:18	0:0	4	4
arg	72:21	72:22	3	0
water	72:21	0:0	4	0
arg	72:24	72:25	3	4
water	72:24	0:0	4	4
water	72:26	0:0	2	;
water	73:4	0:0	2	ptr
op	73:8	0:0	2	+=
water	73:11	0:0	2	8
water	73:12	0:0	2	;
water	74:4	0:0	2	ptr
op	74:7	0:0	2	[
water	74:8	0:0	2	0
op	74:9	0:0	2	]
op	74:11	0:0	2	=
water	74:13	0:0	2	1
water	74:14	0:0	2	;
call	75:4	75:36	2	assert
arg	75:12	75:36	3	NI_MAXNUMERICHOST<=256
water	75:12	0:0	4	NI_MAXNUMERICHOST
op	75:30	0:0	4	<=
water	75:33	0:0	4	256
water	75:37	0:0	2	;
water	76:4	0:0	2	ptr
op	76:7	0:0	2	[
water	76:8	0:0	2	1
op	76:9	0:0	2	]
op	76:11	0:0	2	=
call	76:13	76:24	2	strlen
arg	76:21	76:24	3	src
water	76:21	0:0	4	src
water	76:25	0:0	2	;
call	77:4	77:32	2	memcpy
arg	77:12	77:19	3	ptr+2
water	77:12	0:0	4	ptr
op	77:16	0:0	4	+
water	77:18	0:0	4	2
arg	77:21	77:24	3	src
water	77:21	0:0	4	src
arg	77:26	77:32	3	ptr[1]
water	77:26	0:0	4	ptr
op	77:29	0:0	4	[
water	77:30	0:0	4	1
op	77:31	0:0	4	]
water	77:33	0:0	2	;
water	78:4	0:0	2	ptr
op	78:8	0:0	2	+=
water	78:11	0:0	2	ptr
op	78:14	0:0	2	[
water	78:15	0:0	2	1
op	78:16	0:0	2	]
op	78:18	0:0	2	+
water	78:20	0:0	2	2
water	78:21	0:0	2	;
water	79:4	0:0	2	static
water	79:11	0:0	2	const
water	79:17	0:0	2	char
water	79:22	0:0	2	tool
op	79:26	0:0	2	[
op	79:27	0:0	2	]
op	79:29	0:0	2	=
water	79:31	0:0	2	PACKAGE_STRING
water	79:45	0:0	2	;
water	80:4	0:0	2	ptr
op	80:7	0:0	2	[
water	80:8	0:0	2	0
op	80:9	0:0	2	]
op	80:11	0:0	2	=
water	80:13	0:0	2	6
water	80:14	0:0	2	;
water	81:4	0:0	2	ptr
op	81:7	0:0	2	[
water	81:8	0:0	2	1
op	81:9	0:0	2	]
op	81:11	0:0	2	=
water	81:13	0:0	2	(
op	81:14	0:0	2	sizeof
water	81:21	0:0	2	(
water	81:22	0:0	2	tool
water	81:26	0:0	2	)
op	81:28	0:0	2	>
water	81:30	0:0	2	256
water	81:33	0:0	2	)
water	81:35	0:0	2	?
water	81:37	0:0	2	255
water	81:41	0:0	2	:
water	81:43	0:0	2	(
op	81:44	0:0	2	sizeof
water	81:51	0:0	2	(
water	81:52	0:0	2	tool
water	81:56	0:0	2	)
op	81:58	0:0	2	-
water	81:60	0:0	2	1
water	81:61	0:0	2	)
water	81:62	0:0	2	;
call	82:4	82:33	2	memcpy
arg	82:12	82:19	3	ptr+2
water	82:12	0:0	4	ptr
op	82:16	0:0	4	+
water	82:18	0:0	4	2
arg	82:21	82:25	3	tool
water	82:21	0:0	4	tool
arg	82:27	82:33	3	ptr[1]
water	82:27	0:0	4	ptr
op	82:30	0:0	4	[
water	82:31	0:0	4	1
op	82:32	0:0	4	]
water	82:34	0:0	2	;
water	83:4	0:0	2	ptr
op	83:8	0:0	2	+=
water	83:11	0:0	2	ptr
op	83:14	0:0	2	[
water	83:15	0:0	2	1
op	83:16	0:0	2	]
op	83:18	0:0	2	+
water	83:20	0:0	2	2
water	83:21	0:0	2	;
while	84:4	85:18	2	(( ptr - sdes ) & 3)
cond	84:11	84:26	3	( ptr - sdes ) & 3
water	84:11	0:0	4	(
water	84:12	0:0	4	ptr
op	84:16	0:0	4	-
water	84:18	0:0	4	sdes
water	84:22	0:0	4	)
op	84:24	0:0	4	&
water	84:26	0:0	4	3
stmts	85:8	85:18	3	
op	85:8	0:0	4	*
water	85:9	0:0	4	ptr
op	85:12	0:0	4	++
op	85:15	0:0	4	=
water	85:17	0:0	4	0
water	85:18	0:0	4	;
call	86:4	86:41	2	SetWBE
arg	86:12	86:18	3	lenptr
water	86:12	0:0	4	lenptr
arg	86:20	86:41	3	(ptr-sdes-1)>>2
water	86:20	0:0	4	(
water	86:21	0:0	4	ptr
op	86:25	0:0	4	-
water	86:27	0:0	4	sdes
op	86:32	0:0	4	-
water	86:34	0:0	4	1
water	86:35	0:0	4	)
op	86:37	0:0	4	>>
water	86:40	0:0	4	2
water	86:42	0:0	2	;
water	87:4	0:0	2	rtcp
op	87:8	0:0	2	->
water	87:10	0:0	2	length
op	87:17	0:0	2	=
water	87:19	0:0	2	ptr
op	87:23	0:0	2	-
water	87:25	0:0	2	rtcp
op	87:29	0:0	2	->
water	87:31	0:0	2	payload
water	87:38	0:0	2	;
return	88:4	88:15	2	rtcp
water	88:11	0:0	3	rtcp

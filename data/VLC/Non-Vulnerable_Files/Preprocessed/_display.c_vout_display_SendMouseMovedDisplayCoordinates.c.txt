func	2:0	49:0	0	void	vout_display_SendMouseMovedDisplayCoordinates
params	2:50	0:0	1	
param	2:51	2:69	2	vout_display_t *	vd
param	2:71	2:105	2	video_orientation_t	orient_display
param	2:107	2:114	2	int	m_x
param	2:116	2:123	2	int	m_y
param	2:125	2:152	2	vout_display_place_t *	place
stmnts	0:0	48:4	1	
decl	4:4	4:42	2	video_format_t	source_rot
op	4:30	0:0	2	=
water	4:32	0:0	2	vd
op	4:34	0:0	2	->
water	4:36	0:0	2	source
call	5:4	5:56	2	video_format_TransformTo
arg	5:29	5:40	3	&source_rot
op	5:29	0:0	4	&
water	5:30	0:0	4	source_rot
arg	5:42	5:56	3	orient_display
water	5:42	0:0	4	orient_display
water	5:57	0:0	2	;
if	6:4	48:4	2	(place -> width > 0 && place -> height > 0)
cond	6:8	6:44	3	place -> width > 0 && place -> height > 0
water	6:8	0:0	4	place
op	6:13	0:0	4	->
water	6:15	0:0	4	width
op	6:21	0:0	4	>
water	6:23	0:0	4	0
op	6:25	0:0	4	&&
water	6:28	0:0	4	place
op	6:33	0:0	4	->
water	6:35	0:0	4	height
op	6:42	0:0	4	>
water	6:44	0:0	4	0
stmts	6:47	48:4	3	
water	6:47	0:0	4	{
decl	7:8	8:98	4	int	x
op	7:14	0:0	4	=
call	7:16	8:97	5	(int)
arg	7:22	8:97	6	source_rot.i_x_offset+(int64_t)(m_x-place->x)*source_rot.i_visible_width/place->width
water	7:22	0:0	7	source_rot
op	7:32	0:0	7	.
water	7:33	0:0	7	i_x_offset
op	7:44	0:0	7	+
call	8:28	8:52	7	(int64_t)
arg	8:38	8:52	8	m_x-place->x
water	8:38	0:0	9	m_x
op	8:42	0:0	9	-
water	8:44	0:0	9	place
op	8:49	0:0	9	->
water	8:51	0:0	9	x
op	8:54	0:0	7	*
water	8:56	0:0	7	source_rot
op	8:66	0:0	7	.
water	8:67	0:0	7	i_visible_width
op	8:83	0:0	7	/
water	8:85	0:0	7	place
op	8:90	0:0	7	->
water	8:92	0:0	7	width
decl	9:8	10:99	4	int	y
op	9:14	0:0	4	=
call	9:16	10:98	5	(int)
arg	9:22	10:98	6	source_rot.i_y_offset+(int64_t)(m_y-place->y)*source_rot.i_visible_height/place->height
water	9:22	0:0	7	source_rot
op	9:32	0:0	7	.
water	9:33	0:0	7	i_y_offset
op	9:44	0:0	7	+
call	10:28	10:52	7	(int64_t)
arg	10:38	10:52	8	m_y-place->y
water	10:38	0:0	9	m_y
op	10:42	0:0	9	-
water	10:44	0:0	9	place
op	10:49	0:0	9	->
water	10:51	0:0	9	y
op	10:54	0:0	7	*
water	10:56	0:0	7	source_rot
op	10:66	0:0	7	.
water	10:67	0:0	7	i_visible_height
op	10:83	0:0	7	/
water	10:85	0:0	7	place
op	10:90	0:0	7	->
water	10:92	0:0	7	height
decl	11:8	11:103	4	video_transform_t	transform
op	11:36	0:0	4	=
call	11:38	11:102	5	video_format_GetTransform
arg	11:64	11:86	6	vd->source.orientation
water	11:64	0:0	7	vd
op	11:66	0:0	7	->
water	11:68	0:0	7	source
op	11:74	0:0	7	.
water	11:75	0:0	7	orientation
arg	11:88	11:102	6	orient_display
water	11:88	0:0	7	orient_display
decl	12:8	12:17	4	int	store
switch	13:8	46:8	4	(transform)
cond	13:16	13:16	5	transform
water	13:16	0:0	6	transform
stmts	13:27	46:8	5	
water	13:27	0:0	6	{
label	14:12	14:30	6	case TRANSFORM_R90 :
water	15:16	0:0	6	store
op	15:22	0:0	6	=
water	15:24	0:0	6	x
water	15:25	0:0	6	;
water	16:16	0:0	6	x
op	16:18	0:0	6	=
water	16:20	0:0	6	y
water	16:21	0:0	6	;
water	17:16	0:0	6	y
op	17:18	0:0	6	=
water	17:20	0:0	6	vd
op	17:22	0:0	6	->
water	17:24	0:0	6	source
op	17:30	0:0	6	.
water	17:31	0:0	6	i_visible_height
op	17:48	0:0	6	-
water	17:50	0:0	6	store
water	17:55	0:0	6	;
break	18:16	18:21	6	
label	19:12	19:31	6	case TRANSFORM_R180 :
water	20:16	0:0	6	x
op	20:18	0:0	6	=
water	20:20	0:0	6	vd
op	20:22	0:0	6	->
water	20:24	0:0	6	source
op	20:30	0:0	6	.
water	20:31	0:0	6	i_visible_width
op	20:47	0:0	6	-
water	20:49	0:0	6	x
water	20:50	0:0	6	;
water	21:16	0:0	6	y
op	21:18	0:0	6	=
water	21:20	0:0	6	vd
op	21:22	0:0	6	->
water	21:24	0:0	6	source
op	21:30	0:0	6	.
water	21:31	0:0	6	i_visible_height
op	21:48	0:0	6	-
water	21:50	0:0	6	y
water	21:51	0:0	6	;
break	22:16	22:21	6	
label	23:12	23:31	6	case TRANSFORM_R270 :
water	24:16	0:0	6	store
op	24:22	0:0	6	=
water	24:24	0:0	6	x
water	24:25	0:0	6	;
water	25:16	0:0	6	x
op	25:18	0:0	6	=
water	25:20	0:0	6	vd
op	25:22	0:0	6	->
water	25:24	0:0	6	source
op	25:30	0:0	6	.
water	25:31	0:0	6	i_visible_width
op	25:47	0:0	6	-
water	25:49	0:0	6	y
water	25:50	0:0	6	;
water	26:16	0:0	6	y
op	26:18	0:0	6	=
water	26:20	0:0	6	store
water	26:25	0:0	6	;
break	27:16	27:21	6	
label	28:12	28:32	6	case TRANSFORM_HFLIP :
water	29:16	0:0	6	x
op	29:18	0:0	6	=
water	29:20	0:0	6	vd
op	29:22	0:0	6	->
water	29:24	0:0	6	source
op	29:30	0:0	6	.
water	29:31	0:0	6	i_visible_width
op	29:47	0:0	6	-
water	29:49	0:0	6	x
water	29:50	0:0	6	;
break	30:16	30:21	6	
label	31:12	31:32	6	case TRANSFORM_VFLIP :
water	32:16	0:0	6	y
op	32:18	0:0	6	=
water	32:20	0:0	6	vd
op	32:22	0:0	6	->
water	32:24	0:0	6	source
op	32:30	0:0	6	.
water	32:31	0:0	6	i_visible_height
op	32:48	0:0	6	-
water	32:50	0:0	6	y
water	32:51	0:0	6	;
break	33:16	33:21	6	
label	34:12	34:36	6	case TRANSFORM_TRANSPOSE :
water	35:16	0:0	6	store
op	35:22	0:0	6	=
water	35:24	0:0	6	x
water	35:25	0:0	6	;
water	36:16	0:0	6	x
op	36:18	0:0	6	=
water	36:20	0:0	6	y
water	36:21	0:0	6	;
water	37:16	0:0	6	y
op	37:18	0:0	6	=
water	37:20	0:0	6	store
water	37:25	0:0	6	;
break	38:16	38:21	6	
label	39:12	39:41	6	case TRANSFORM_ANTI_TRANSPOSE :
water	40:16	0:0	6	store
op	40:22	0:0	6	=
water	40:24	0:0	6	x
water	40:25	0:0	6	;
water	41:16	0:0	6	x
op	41:18	0:0	6	=
water	41:20	0:0	6	vd
op	41:22	0:0	6	->
water	41:24	0:0	6	source
op	41:30	0:0	6	.
water	41:31	0:0	6	i_visible_width
op	41:47	0:0	6	-
water	41:49	0:0	6	y
water	41:50	0:0	6	;
water	42:16	0:0	6	y
op	42:18	0:0	6	=
water	42:20	0:0	6	vd
op	42:22	0:0	6	->
water	42:24	0:0	6	source
op	42:30	0:0	6	.
water	42:31	0:0	6	i_visible_height
op	42:48	0:0	6	-
water	42:50	0:0	6	store
water	42:55	0:0	6	;
break	43:16	43:21	6	
label	44:12	44:19	6	default :
break	45:16	45:21	6	
water	46:8	0:0	6	}
call	47:8	47:50	4	vout_display_SendEventMouseMoved
arg	47:42	47:44	5	vd
water	47:42	0:0	6	vd
arg	47:46	47:47	5	x
water	47:46	0:0	6	x
arg	47:49	47:50	5	y
water	47:49	0:0	6	y
water	47:51	0:0	4	;
water	48:4	0:0	4	}

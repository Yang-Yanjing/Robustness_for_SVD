func	2:0	53:0	0	static void	SubpictureUpdate
params	2:28	0:0	1	
param	2:30	2:52	2	subpicture_t *	p_subpic
param	3:30	3:61	2	const video_format_t *	p_fmt_src
param	4:30	4:61	2	const video_format_t *	p_fmt_dst
param	5:30	5:43	2	mtime_t	i_ts
stmnts	7:4	52:36	1	
call	7:4	7:26	2	VLC_UNUSED
arg	7:16	7:26	3	p_fmt_src
water	7:16	0:0	4	p_fmt_src
water	7:27	0:0	2	;
call	7:29	7:51	2	VLC_UNUSED
arg	7:41	7:51	3	p_fmt_dst
water	7:41	0:0	4	p_fmt_dst
water	7:52	0:0	2	;
call	7:54	7:71	2	VLC_UNUSED
arg	7:66	7:71	3	i_ts
water	7:66	0:0	4	i_ts
water	7:72	0:0	2	;
decl	8:4	8:61	2	decoder_sys_t	*p_sys
op	8:25	0:0	2	=
water	8:27	0:0	2	p_subpic
op	8:35	0:0	2	->
water	8:37	0:0	2	updater
op	8:44	0:0	2	.
water	8:45	0:0	2	p_sys
op	8:50	0:0	2	->
water	8:52	0:0	2	p_dec_sys
decl	9:4	9:35	2	video_format_t	fmt
op	9:23	0:0	2	=
water	9:25	0:0	2	p_sys
op	9:30	0:0	2	->
water	9:32	0:0	2	fmt
decl	10:4	10:53	2	ASS_Image	*p_img
op	10:21	0:0	2	=
water	10:23	0:0	2	p_subpic
op	10:31	0:0	2	->
water	10:33	0:0	2	updater
op	10:40	0:0	2	.
water	10:41	0:0	2	p_sys
op	10:46	0:0	2	->
water	10:48	0:0	2	p_img
water	12:4	0:0	2	p_subpic
op	12:12	0:0	2	->
water	12:14	0:0	2	i_original_picture_height
op	12:40	0:0	2	=
water	12:42	0:0	2	fmt
op	12:45	0:0	2	.
water	12:46	0:0	2	i_visible_height
water	12:62	0:0	2	;
water	13:4	0:0	2	p_subpic
op	13:12	0:0	2	->
water	13:14	0:0	2	i_original_picture_width
op	13:39	0:0	2	=
water	13:41	0:0	2	fmt
op	13:44	0:0	2	.
water	13:45	0:0	2	i_visible_width
water	13:60	0:0	2	;
decl	20:4	20:30	2	const int	i_max_region
op	20:27	0:0	2	=
water	20:29	0:0	2	4
decl	21:4	21:36	2	rectangle_t	region[i_max_region]
decl	22:4	22:95	2	const int	i_region
op	22:23	0:0	2	=
call	22:25	22:94	3	BuildRegions
arg	22:39	22:45	4	region
water	22:39	0:0	5	region
arg	22:47	22:59	4	i_max_region
water	22:47	0:0	5	i_max_region
arg	22:61	22:66	4	p_img
water	22:61	0:0	5	p_img
arg	22:68	22:79	4	fmt.i_width
water	22:68	0:0	5	fmt
op	22:71	0:0	5	.
water	22:72	0:0	5	i_width
arg	22:81	22:94	4	fmt.i_height
water	22:81	0:0	5	fmt
op	22:84	0:0	5	.
water	22:85	0:0	5	i_height
if	23:4	27:4	2	(i_region <= 0)
cond	23:8	23:20	3	i_region <= 0
water	23:8	0:0	4	i_region
op	23:17	0:0	4	<=
water	23:20	0:0	4	0
stmts	24:4	27:4	3	
water	24:4	0:0	4	{
call	25:8	25:39	4	vlc_mutex_unlock
arg	25:26	25:39	5	&p_sys->lock
op	25:26	0:0	6	&
water	25:27	0:0	6	p_sys
op	25:32	0:0	6	->
water	25:34	0:0	6	lock
water	25:40	0:0	4	;
return	26:8	26:14	4	
water	27:4	0:0	4	}
decl	29:4	29:62	2	subpicture_region_t	**pp_region_last
op	29:41	0:0	2	=
op	29:43	0:0	2	&
water	29:44	0:0	2	p_subpic
op	29:52	0:0	2	->
water	29:54	0:0	2	p_region
for	30:4	51:4	2	( int i = 0 ;i < i_region;i ++)
forinit	0:0	30:18	3	 int i = 0 ;
decl	30:9	30:18	4	int	i
op	30:15	0:0	4	=
water	30:17	0:0	4	0
cond	30:20	30:24	3	i < i_region
water	30:20	0:0	4	i
op	30:22	0:0	4	<
water	30:24	0:0	4	i_region
forexpr	30:34	30:35	3	i ++
water	30:34	0:0	4	i
op	30:35	0:0	4	++
stmts	31:4	51:4	3	
water	31:4	0:0	4	{
decl	32:8	32:30	4	subpicture_region_t	*r
decl	33:8	33:33	4	video_format_t	fmt_region
water	35:8	0:0	4	fmt_region
op	35:19	0:0	4	=
water	35:21	0:0	4	fmt
water	35:24	0:0	4	;
water	36:8	0:0	4	fmt_region
op	36:18	0:0	4	.
water	36:19	0:0	4	i_width
op	36:27	0:0	4	=
water	37:8	0:0	4	fmt_region
op	37:18	0:0	4	.
water	37:19	0:0	4	i_visible_width
op	37:36	0:0	4	=
water	37:38	0:0	4	region
op	37:44	0:0	4	[
water	37:45	0:0	4	i
op	37:46	0:0	4	]
op	37:47	0:0	4	.
water	37:48	0:0	4	x1
op	37:51	0:0	4	-
water	37:53	0:0	4	region
op	37:59	0:0	4	[
water	37:60	0:0	4	i
op	37:61	0:0	4	]
op	37:62	0:0	4	.
water	37:63	0:0	4	x0
water	37:65	0:0	4	;
water	38:8	0:0	4	fmt_region
op	38:18	0:0	4	.
water	38:19	0:0	4	i_height
op	38:28	0:0	4	=
water	39:8	0:0	4	fmt_region
op	39:18	0:0	4	.
water	39:19	0:0	4	i_visible_height
op	39:36	0:0	4	=
water	39:38	0:0	4	region
op	39:44	0:0	4	[
water	39:45	0:0	4	i
op	39:46	0:0	4	]
op	39:47	0:0	4	.
water	39:48	0:0	4	y1
op	39:51	0:0	4	-
water	39:53	0:0	4	region
op	39:59	0:0	4	[
water	39:60	0:0	4	i
op	39:61	0:0	4	]
op	39:62	0:0	4	.
water	39:63	0:0	4	y0
water	39:65	0:0	4	;
water	40:8	0:0	4	r
op	40:10	0:0	4	=
call	40:12	40:47	4	subpicture_region_New
arg	40:35	40:47	5	&fmt_region
op	40:35	0:0	6	&
water	40:36	0:0	6	fmt_region
water	40:48	0:0	4	;
if	41:8	42:17	4	(! r)
cond	41:12	41:13	5	! r
op	41:12	0:0	6	!
water	41:13	0:0	6	r
stmts	42:12	42:17	5	
break	42:12	42:17	6	
water	43:8	0:0	4	r
op	43:9	0:0	4	->
water	43:11	0:0	4	i_x
op	43:15	0:0	4	=
water	43:17	0:0	4	region
op	43:23	0:0	4	[
water	43:24	0:0	4	i
op	43:25	0:0	4	]
op	43:26	0:0	4	.
water	43:27	0:0	4	x0
water	43:29	0:0	4	;
water	44:8	0:0	4	r
op	44:9	0:0	4	->
water	44:11	0:0	4	i_y
op	44:15	0:0	4	=
water	44:17	0:0	4	region
op	44:23	0:0	4	[
water	44:24	0:0	4	i
op	44:25	0:0	4	]
op	44:26	0:0	4	.
water	44:27	0:0	4	y0
water	44:29	0:0	4	;
water	45:8	0:0	4	r
op	45:9	0:0	4	->
water	45:11	0:0	4	i_align
op	45:19	0:0	4	=
water	45:21	0:0	4	SUBPICTURE_ALIGN_TOP
op	45:42	0:0	4	|
water	45:44	0:0	4	SUBPICTURE_ALIGN_LEFT
water	45:65	0:0	4	;
call	47:8	47:29	4	RegionDraw
arg	47:20	47:21	5	r
water	47:20	0:0	6	r
arg	47:23	47:29	5	p_img
water	47:23	0:0	6	p_img
water	47:30	0:0	4	;
op	49:8	0:0	4	*
water	49:9	0:0	4	pp_region_last
op	49:24	0:0	4	=
water	49:26	0:0	4	r
water	49:27	0:0	4	;
water	50:8	0:0	4	pp_region_last
op	50:23	0:0	4	=
op	50:25	0:0	4	&
water	50:26	0:0	4	r
op	50:27	0:0	4	->
water	50:29	0:0	4	p_next
water	50:35	0:0	4	;
water	51:4	0:0	4	}
call	52:4	52:35	2	vlc_mutex_unlock
arg	52:22	52:35	3	&p_sys->lock
op	52:22	0:0	4	&
water	52:23	0:0	4	p_sys
op	52:28	0:0	4	->
water	52:30	0:0	4	lock
water	52:36	0:0	2	;

func	2:0	35:0	0	static const char *	getMuxFromAlias
params	2:34	0:0	1	
param	2:36	2:58	2	const char *	psz_alias
stmnts	4:4	34:15	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	struct
water	4:18	0:0	2	{
water	4:20	0:0	2	const
water	4:26	0:0	2	char
water	4:31	0:0	2	alias
op	4:36	0:0	2	[
water	4:37	0:0	2	6
op	4:38	0:0	2	]
water	4:39	0:0	2	;
water	4:41	0:0	2	const
water	4:47	0:0	2	char
water	4:52	0:0	2	mux
op	4:55	0:0	2	[
water	4:56	0:0	2	32
op	4:58	0:0	2	]
water	4:59	0:0	2	;
water	4:61	0:0	2	}
water	4:63	0:0	2	mux_alias
op	4:72	0:0	2	[
op	4:73	0:0	2	]
op	4:75	0:0	2	=
water	5:4	0:0	2	{
water	6:8	0:0	2	{
water	6:10	0:0	2	"avi"
water	6:15	0:0	2	,
water	6:17	0:0	2	"avi"
water	6:23	0:0	2	}
water	6:24	0:0	2	,
water	7:8	0:0	2	{
water	7:10	0:0	2	"ogg"
water	7:15	0:0	2	,
water	7:17	0:0	2	"ogg"
water	7:23	0:0	2	}
water	7:24	0:0	2	,
water	8:8	0:0	2	{
water	8:10	0:0	2	"ogm"
water	8:15	0:0	2	,
water	8:17	0:0	2	"ogg"
water	8:23	0:0	2	}
water	8:24	0:0	2	,
water	9:8	0:0	2	{
water	9:10	0:0	2	"ogv"
water	9:15	0:0	2	,
water	9:17	0:0	2	"ogg"
water	9:23	0:0	2	}
water	9:24	0:0	2	,
water	10:8	0:0	2	{
water	10:10	0:0	2	"flac"
water	10:16	0:0	2	,
water	10:17	0:0	2	"raw"
water	10:23	0:0	2	}
water	10:24	0:0	2	,
water	11:8	0:0	2	{
water	11:10	0:0	2	"mp3"
water	11:15	0:0	2	,
water	11:17	0:0	2	"raw"
water	11:23	0:0	2	}
water	11:24	0:0	2	,
water	12:8	0:0	2	{
water	12:10	0:0	2	"mp4"
water	12:15	0:0	2	,
water	12:17	0:0	2	"mp4"
water	12:23	0:0	2	}
water	12:24	0:0	2	,
water	13:8	0:0	2	{
water	13:10	0:0	2	"mov"
water	13:15	0:0	2	,
water	13:17	0:0	2	"mov"
water	13:23	0:0	2	}
water	13:24	0:0	2	,
water	14:8	0:0	2	{
water	14:10	0:0	2	"moov"
water	14:16	0:0	2	,
water	14:17	0:0	2	"mov"
water	14:23	0:0	2	}
water	14:24	0:0	2	,
water	15:8	0:0	2	{
water	15:10	0:0	2	"asf"
water	15:15	0:0	2	,
water	15:17	0:0	2	"asf"
water	15:23	0:0	2	}
water	15:24	0:0	2	,
water	16:8	0:0	2	{
water	16:10	0:0	2	"wma"
water	16:15	0:0	2	,
water	16:17	0:0	2	"asf"
water	16:23	0:0	2	}
water	16:24	0:0	2	,
water	17:8	0:0	2	{
water	17:10	0:0	2	"wmv"
water	17:15	0:0	2	,
water	17:17	0:0	2	"asf"
water	17:23	0:0	2	}
water	17:24	0:0	2	,
water	18:8	0:0	2	{
water	18:10	0:0	2	"trp"
water	18:15	0:0	2	,
water	18:17	0:0	2	"ts"
water	18:22	0:0	2	}
water	18:23	0:0	2	,
water	19:8	0:0	2	{
water	19:10	0:0	2	"ts"
water	19:14	0:0	2	,
water	19:17	0:0	2	"ts"
water	19:22	0:0	2	}
water	19:23	0:0	2	,
water	20:8	0:0	2	{
water	20:10	0:0	2	"mpg"
water	20:15	0:0	2	,
water	20:17	0:0	2	"ps"
water	20:22	0:0	2	}
water	20:23	0:0	2	,
water	21:8	0:0	2	{
water	21:10	0:0	2	"mpeg"
water	21:16	0:0	2	,
water	21:17	0:0	2	"ps"
water	21:22	0:0	2	}
water	21:23	0:0	2	,
water	22:8	0:0	2	{
water	22:10	0:0	2	"ps"
water	22:14	0:0	2	,
water	22:17	0:0	2	"ps"
water	22:22	0:0	2	}
water	22:23	0:0	2	,
water	23:8	0:0	2	{
water	23:10	0:0	2	"mpeg1"
water	23:17	0:0	2	,
water	23:18	0:0	2	"mpeg1"
water	23:26	0:0	2	}
water	23:27	0:0	2	,
water	24:8	0:0	2	{
water	24:10	0:0	2	"wav"
water	24:15	0:0	2	,
water	24:17	0:0	2	"wav"
water	24:23	0:0	2	}
water	24:24	0:0	2	,
water	25:8	0:0	2	{
water	25:10	0:0	2	"flv"
water	25:15	0:0	2	,
water	25:17	0:0	2	"avformat{mux=flv}"
water	25:37	0:0	2	}
water	25:38	0:0	2	,
water	26:8	0:0	2	{
water	26:10	0:0	2	"mkv"
water	26:15	0:0	2	,
water	26:17	0:0	2	"avformat{mux=matroska}"
water	26:41	0:0	2	}
water	26:42	0:0	2	,
water	27:8	0:0	2	{
water	27:10	0:0	2	"webm"
water	27:16	0:0	2	,
water	27:18	0:0	2	"avformat{mux=webm}"
water	27:38	0:0	2	}
water	27:39	0:0	2	,
water	28:4	0:0	2	}
water	28:5	0:0	2	;
if	29:4	30:19	2	(! psz_alias)
cond	29:8	29:9	3	! psz_alias
op	29:8	0:0	4	!
water	29:9	0:0	4	psz_alias
stmts	30:8	30:19	3	
return	30:8	30:19	4	NULL
water	30:15	0:0	5	NULL
for	31:4	33:35	2	( size_t i = 0 ;i < sizeof mux_alias / sizeof * mux_alias;i ++)
forinit	0:0	31:21	3	 size_t i = 0 ;
decl	31:9	31:21	4	size_t	i
op	31:18	0:0	4	=
water	31:20	0:0	4	0
cond	31:23	31:54	3	i < sizeof mux_alias / sizeof * mux_alias
water	31:23	0:0	4	i
op	31:25	0:0	4	<
op	31:27	0:0	4	sizeof
water	31:34	0:0	4	mux_alias
op	31:44	0:0	4	/
op	31:46	0:0	4	sizeof
op	31:53	0:0	4	*
water	31:54	0:0	4	mux_alias
forexpr	31:65	31:66	3	i ++
water	31:65	0:0	4	i
op	31:66	0:0	4	++
stmts	32:8	33:35	3	
if	32:8	33:35	4	(!strcasecmp (psz_alias ,mux_alias [ i ] . alias ))
cond	32:12	32:55	5	!strcasecmp (psz_alias ,mux_alias [ i ] . alias )
op	32:12	0:0	6	!
call	32:13	32:55	6	strcasecmp
arg	32:25	32:34	7	psz_alias
water	32:25	0:0	8	psz_alias
arg	32:36	32:55	7	mux_alias[i].alias
water	32:36	0:0	8	mux_alias
op	32:45	0:0	8	[
water	32:46	0:0	8	i
op	32:47	0:0	8	]
op	32:48	0:0	8	.
water	32:49	0:0	8	alias
stmts	33:12	33:35	5	
return	33:12	33:35	6	mux_alias[i].mux
water	33:19	0:0	7	mux_alias
op	33:28	0:0	7	[
water	33:29	0:0	7	i
op	33:30	0:0	7	]
op	33:31	0:0	7	.
water	33:32	0:0	7	mux
return	34:4	34:15	2	NULL
water	34:11	0:0	3	NULL

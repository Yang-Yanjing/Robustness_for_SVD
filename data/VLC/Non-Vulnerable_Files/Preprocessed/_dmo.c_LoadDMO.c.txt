func	2:0	148:0	0	static int	LoadDMO
params	2:18	0:0	1	
param	2:20	2:40	2	vlc_object_t *	p_this
param	2:42	2:65	2	HINSTANCE *	p_hmsdmo_dll
param	3:20	3:41	2	IMediaObject * *	pp_dmo
param	3:43	3:61	2	es_format_t *	p_fmt
param	4:20	4:31	2	bool	b_out
stmnts	0:0	147:22	1	
decl	6:4	6:42	2	DMO_PARTIAL_MEDIATYPE	dmo_partial_type
decl	7:4	7:13	2	int	i_err
call	8:4	8:29	2	long
arg	8:10	8:29	3	STDCALL*OurDMOEnum
water	8:10	0:0	4	STDCALL
op	8:18	0:0	4	*
water	8:19	0:0	4	OurDMOEnum
water	8:30	0:0	2	(
water	8:32	0:0	2	const
water	8:38	0:0	2	GUID
op	8:43	0:0	2	*
water	8:44	0:0	2	,
water	8:46	0:0	2	uint32_t
water	8:54	0:0	2	,
water	8:56	0:0	2	uint32_t
water	8:64	0:0	2	,
water	9:31	0:0	2	const
water	9:37	0:0	2	DMO_PARTIAL_MEDIATYPE
op	9:59	0:0	2	*
water	9:60	0:0	2	,
water	10:31	0:0	2	uint32_t
water	10:39	0:0	2	,
water	10:41	0:0	2	const
water	10:47	0:0	2	DMO_PARTIAL_MEDIATYPE
op	10:69	0:0	2	*
water	10:70	0:0	2	,
water	11:31	0:0	2	IEnumDMO
op	11:40	0:0	2	*
op	11:41	0:0	2	*
water	11:43	0:0	2	)
water	11:44	0:0	2	;
decl	12:4	12:31	2	IEnumDMO	*p_enum_dmo
op	12:25	0:0	2	=
water	12:27	0:0	2	NULL
decl	13:4	13:23	2	WCHAR	*psz_dmo_name
decl	14:4	14:18	2	GUID	clsid_dmo
decl	15:4	15:20	2	uint32_t	i_dummy
decl	16:4	16:21	2	GETCLASS	GetClass
decl	17:4	17:34	2	IClassFactory	*cFactory
op	17:28	0:0	2	=
water	17:30	0:0	2	NULL
decl	18:4	18:28	2	IUnknown	*cObject
op	18:22	0:0	2	=
water	18:24	0:0	2	NULL
decl	19:4	19:75	2	const codec_dll	*codecs_table
op	19:34	0:0	2	=
water	19:36	0:0	2	b_out
water	19:42	0:0	2	?
water	19:44	0:0	2	encoders_table
water	19:59	0:0	2	:
water	19:61	0:0	2	decoders_table
decl	20:4	20:15	2	int	i_codec
if	22:4	30:4	2	(p_fmt -> i_cat == AUDIO_ES)
cond	22:8	22:24	3	p_fmt -> i_cat == AUDIO_ES
water	22:8	0:0	4	p_fmt
op	22:13	0:0	4	->
water	22:15	0:0	4	i_cat
op	22:21	0:0	4	==
water	22:24	0:0	4	AUDIO_ES
stmts	23:4	30:4	3	
water	23:4	0:0	4	{
decl	24:8	24:22	4	uint16_t	i_tag
water	25:8	0:0	4	dmo_partial_type
op	25:24	0:0	4	.
water	25:25	0:0	4	type
op	25:30	0:0	4	=
water	25:32	0:0	4	MEDIATYPE_Audio
water	25:47	0:0	4	;
water	26:8	0:0	4	dmo_partial_type
op	26:24	0:0	4	.
water	26:25	0:0	4	subtype
op	26:33	0:0	4	=
water	26:35	0:0	4	dmo_partial_type
op	26:51	0:0	4	.
water	26:52	0:0	4	type
water	26:56	0:0	4	;
water	27:8	0:0	4	dmo_partial_type
op	27:24	0:0	4	.
water	27:25	0:0	4	subtype
op	27:32	0:0	4	.
water	27:33	0:0	4	Data1
op	27:39	0:0	4	=
water	27:41	0:0	4	p_fmt
op	27:46	0:0	4	->
water	27:48	0:0	4	i_original_fourcc
water	27:66	0:0	4	?
water	27:67	0:0	4	:
water	27:69	0:0	4	p_fmt
op	27:74	0:0	4	->
water	27:76	0:0	4	i_codec
water	27:83	0:0	4	;
call	28:8	28:49	4	fourcc_to_wf_tag
arg	28:26	28:40	5	p_fmt->i_codec
water	28:26	0:0	6	p_fmt
op	28:31	0:0	6	->
water	28:33	0:0	6	i_codec
arg	28:42	28:49	5	&i_tag
op	28:42	0:0	6	&
water	28:43	0:0	6	i_tag
water	28:50	0:0	4	;
if	29:8	29:58	4	(i_tag)
cond	29:12	29:12	5	i_tag
water	29:12	0:0	6	i_tag
stmts	29:20	29:58	5	
water	29:20	0:0	6	dmo_partial_type
op	29:36	0:0	6	.
water	29:37	0:0	6	subtype
op	29:44	0:0	6	.
water	29:45	0:0	6	Data1
op	29:51	0:0	6	=
water	29:53	0:0	6	i_tag
water	29:58	0:0	6	;
water	30:4	0:0	4	}
else	31:4	36:4	2
stmts	32:4	36:4	3	
water	32:4	0:0	4	{
water	33:8	0:0	4	dmo_partial_type
op	33:24	0:0	4	.
water	33:25	0:0	4	type
op	33:30	0:0	4	=
water	33:32	0:0	4	MEDIATYPE_Video
water	33:47	0:0	4	;
water	34:8	0:0	4	dmo_partial_type
op	34:24	0:0	4	.
water	34:25	0:0	4	subtype
op	34:33	0:0	4	=
water	34:35	0:0	4	dmo_partial_type
op	34:51	0:0	4	.
water	34:52	0:0	4	type
water	34:56	0:0	4	;
water	35:8	0:0	4	dmo_partial_type
op	35:24	0:0	4	.
water	35:25	0:0	4	subtype
op	35:32	0:0	4	.
water	35:33	0:0	4	Data1
op	35:39	0:0	4	=
water	35:41	0:0	4	p_fmt
op	35:46	0:0	4	->
water	35:48	0:0	4	i_original_fourcc
water	35:66	0:0	4	?
water	35:67	0:0	4	:
water	35:69	0:0	4	p_fmt
op	35:74	0:0	4	->
water	35:76	0:0	4	i_codec
water	35:83	0:0	4	;
water	36:4	0:0	4	}
op	38:4	0:0	2	*
water	38:5	0:0	2	p_hmsdmo_dll
op	38:18	0:0	2	=
call	38:20	38:46	2	LoadLibraryA
arg	38:34	38:46	3	"msdmo.dll"
water	38:34	0:0	4	"msdmo.dll"
water	38:47	0:0	2	;
if	39:4	43:4	2	(* p_hmsdmo_dll == NULL)
cond	39:8	39:25	3	* p_hmsdmo_dll == NULL
op	39:8	0:0	4	*
water	39:9	0:0	4	p_hmsdmo_dll
op	39:22	0:0	4	==
water	39:25	0:0	4	NULL
stmts	40:4	43:4	3	
water	40:4	0:0	4	{
call	41:8	41:52	4	msg_Dbg
arg	41:17	41:23	5	p_this
water	41:17	0:0	6	p_this
arg	41:25	41:52	5	"failed loading msdmo.dll"
water	41:25	0:0	6	"failed loading msdmo.dll"
water	41:53	0:0	4	;
return	42:8	42:27	4	VLC_EGENERIC
water	42:15	0:0	5	VLC_EGENERIC
water	43:4	0:0	4	}
water	44:4	0:0	2	OurDMOEnum
op	44:15	0:0	2	=
water	44:17	0:0	2	(
water	44:18	0:0	2	void
op	44:23	0:0	2	*
water	44:24	0:0	2	)
call	44:25	44:66	2	GetProcAddress
arg	44:41	44:54	3	*p_hmsdmo_dll
op	44:41	0:0	4	*
water	44:42	0:0	4	p_hmsdmo_dll
arg	44:56	44:66	3	"DMOEnum"
water	44:56	0:0	4	"DMOEnum"
water	44:67	0:0	2	;
if	45:4	50:4	2	(OurDMOEnum == NULL)
cond	45:8	45:22	3	OurDMOEnum == NULL
water	45:8	0:0	4	OurDMOEnum
op	45:19	0:0	4	==
water	45:22	0:0	4	NULL
stmts	46:4	50:4	3	
water	46:4	0:0	4	{
call	47:8	47:67	4	msg_Dbg
arg	47:17	47:23	5	p_this
water	47:17	0:0	6	p_this
arg	47:25	47:67	5	"GetProcAddress failed to find DMOEnum()"
water	47:25	0:0	6	"GetProcAddress failed to find DMOEnum()"
water	47:68	0:0	4	;
call	48:8	48:35	4	FreeLibrary
arg	48:21	48:35	5	*p_hmsdmo_dll
op	48:21	0:0	6	*
water	48:22	0:0	6	p_hmsdmo_dll
water	48:36	0:0	4	;
return	49:8	49:27	4	VLC_EGENERIC
water	49:15	0:0	5	VLC_EGENERIC
water	50:4	0:0	4	}
if	51:4	55:4	2	(! b_out)
cond	51:8	51:9	3	! b_out
op	51:8	0:0	4	!
water	51:9	0:0	4	b_out
stmts	52:4	55:4	3	
water	52:4	0:0	4	{
water	53:8	0:0	4	i_err
op	53:14	0:0	4	=
call	53:16	54:71	4	OurDMOEnum
arg	53:28	53:38	5	&GUID_NULL
op	53:28	0:0	6	&
water	53:29	0:0	6	GUID_NULL
arg	53:40	53:69	5	1
water	53:40	0:0	6	1
arg	54:28	54:29	5	1
water	54:28	0:0	6	1
arg	54:31	54:48	5	&dmo_partial_type
op	54:31	0:0	6	&
water	54:32	0:0	6	dmo_partial_type
arg	54:50	54:51	5	0
water	54:50	0:0	6	0
arg	54:53	54:57	5	NULL
water	54:53	0:0	6	NULL
arg	54:59	54:71	5	&p_enum_dmo
op	54:59	0:0	6	&
water	54:60	0:0	6	p_enum_dmo
water	54:72	0:0	4	;
water	55:4	0:0	4	}
else	56:4	60:4	2
stmts	57:4	60:4	3	
water	57:4	0:0	4	{
water	58:8	0:0	4	i_err
op	58:14	0:0	4	=
call	58:16	59:71	4	OurDMOEnum
arg	58:28	58:38	5	&GUID_NULL
op	58:28	0:0	6	&
water	58:29	0:0	6	GUID_NULL
arg	58:40	58:69	5	1
water	58:40	0:0	6	1
arg	59:28	59:29	5	0
water	59:28	0:0	6	0
arg	59:31	59:35	5	NULL
water	59:31	0:0	6	NULL
arg	59:37	59:38	5	1
water	59:37	0:0	6	1
arg	59:40	59:57	5	&dmo_partial_type
op	59:40	0:0	6	&
water	59:41	0:0	6	dmo_partial_type
arg	59:59	59:71	5	&p_enum_dmo
op	59:59	0:0	6	&
water	59:60	0:0	6	p_enum_dmo
water	59:72	0:0	4	;
water	60:4	0:0	4	}
if	61:4	67:4	2	(i_err)
cond	61:8	61:8	3	i_err
water	61:8	0:0	4	i_err
stmts	62:4	67:4	3	
water	62:4	0:0	4	{
call	63:8	63:35	4	FreeLibrary
arg	63:21	63:35	5	*p_hmsdmo_dll
op	63:21	0:0	6	*
water	63:22	0:0	6	p_hmsdmo_dll
water	63:36	0:0	4	;
goto	66:8	66:19	4	loader
water	66:13	0:0	5	loader
water	67:4	0:0	4	}
op	69:4	0:0	2	*
water	69:5	0:0	2	pp_dmo
op	69:12	0:0	2	=
water	69:14	0:0	2	0
water	69:15	0:0	2	;
while	70:4	89:4	2	(( S_OK ==p_enum_dmo -> vt -> Next (p_enum_dmo ,1 ,& clsid_dmo ,& psz_dmo_name ,& i_dummy ) ))
cond	70:11	71:71	3	( S_OK ==p_enum_dmo -> vt -> Next (p_enum_dmo ,1 ,& clsid_dmo ,& psz_dmo_name ,& i_dummy ) )
water	70:11	0:0	4	(
water	70:13	0:0	4	S_OK
op	70:18	0:0	4	==
call	70:21	71:69	4	p_enum_dmo->vt->Next
arg	70:43	70:53	5	p_enum_dmo
water	70:43	0:0	6	p_enum_dmo
arg	70:55	70:56	5	1
water	70:55	0:0	6	1
arg	70:58	70:68	5	&clsid_dmo
op	70:58	0:0	6	&
water	70:59	0:0	6	clsid_dmo
arg	71:21	71:34	5	&psz_dmo_name
op	71:21	0:0	6	&
water	71:22	0:0	6	psz_dmo_name
arg	71:36	71:69	5	&i_dummy
op	71:36	0:0	6	&
water	71:37	0:0	6	i_dummy
water	71:71	0:0	4	)
stmts	72:4	89:4	3	
water	72:4	0:0	4	{
decl	73:8	73:49	4	char	*psz_temp
op	73:23	0:0	4	=
call	73:25	73:48	5	FromWide
arg	73:35	73:48	6	psz_dmo_name
water	73:35	0:0	7	psz_dmo_name
call	74:8	74:51	4	msg_Dbg
arg	74:17	74:23	5	p_this
water	74:17	0:0	6	p_this
arg	74:25	74:40	5	"found DMO: %s"
water	74:25	0:0	6	"found DMO: %s"
arg	74:42	74:51	5	psz_temp
water	74:42	0:0	6	psz_temp
water	74:52	0:0	4	;
call	75:8	75:36	4	CoTaskMemFree
arg	75:23	75:36	5	psz_dmo_name
water	75:23	0:0	6	psz_dmo_name
water	75:37	0:0	4	;
if	77:8	83:8	4	(CoCreateInstance (& clsid_dmo ,NULL ,CLSCTX_INPROC ,& IID_IMediaObject ,( void * * ) pp_dmo ))
cond	77:12	78:65	5	CoCreateInstance (& clsid_dmo ,NULL ,CLSCTX_INPROC ,& IID_IMediaObject ,( void * * ) pp_dmo )
call	77:12	78:65	6	CoCreateInstance
arg	77:30	77:40	7	&clsid_dmo
op	77:30	0:0	8	&
water	77:31	0:0	8	clsid_dmo
arg	77:42	77:46	7	NULL
water	77:42	0:0	8	NULL
arg	77:48	77:61	7	CLSCTX_INPROC
water	77:48	0:0	8	CLSCTX_INPROC
arg	78:30	78:47	7	&IID_IMediaObject
op	78:30	0:0	8	&
water	78:31	0:0	8	IID_IMediaObject
arg	78:49	78:65	7	(void**)pp_dmo
water	78:49	0:0	8	(
water	78:50	0:0	8	void
op	78:55	0:0	8	*
op	78:56	0:0	8	*
water	78:57	0:0	8	)
water	78:58	0:0	8	pp_dmo
stmts	79:8	83:8	5	
water	79:8	0:0	6	{
call	80:12	80:63	6	msg_Warn
arg	80:22	80:28	7	p_this
water	80:22	0:0	8	p_this
arg	80:30	80:52	7	"can't create DMO: %s"
water	80:30	0:0	8	"can't create DMO: %s"
arg	80:54	80:63	7	psz_temp
water	80:54	0:0	8	psz_temp
water	80:64	0:0	6	;
call	81:12	81:27	6	free
arg	81:18	81:27	7	psz_temp
water	81:18	0:0	8	psz_temp
water	81:28	0:0	6	;
op	82:12	0:0	6	*
water	82:13	0:0	6	pp_dmo
op	82:20	0:0	6	=
water	82:22	0:0	6	0
water	82:23	0:0	6	;
water	83:8	0:0	6	}
else	84:8	88:8	4
stmts	85:8	88:8	5	
water	85:8	0:0	6	{
call	86:12	86:27	6	free
arg	86:18	86:27	7	psz_temp
water	86:18	0:0	8	psz_temp
water	86:28	0:0	6	;
break	87:12	87:17	6	
water	88:8	0:0	6	}
water	89:4	0:0	4	}
call	90:4	90:52	2	p_enum_dmo->vt->Release
arg	90:29	90:52	3	(IUnknown*)p_enum_dmo
water	90:29	0:0	4	(
water	90:30	0:0	4	IUnknown
op	90:39	0:0	4	*
water	90:40	0:0	4	)
water	90:41	0:0	4	p_enum_dmo
water	90:53	0:0	2	;
if	91:4	97:4	2	(! * pp_dmo)
cond	91:8	91:10	3	! * pp_dmo
op	91:8	0:0	4	!
op	91:9	0:0	4	*
water	91:10	0:0	4	pp_dmo
stmts	92:4	97:4	3	
water	92:4	0:0	4	{
call	93:8	93:35	4	FreeLibrary
arg	93:21	93:35	5	*p_hmsdmo_dll
op	93:21	0:0	6	*
water	93:22	0:0	6	p_hmsdmo_dll
water	93:36	0:0	4	;
goto	96:8	96:19	4	loader
water	96:13	0:0	5	loader
water	97:4	0:0	4	}
return	98:4	98:22	2	VLC_SUCCESS
water	98:11	0:0	3	VLC_SUCCESS
label	99:0	99:6	2	loader :
for	100:4	104:4	2	(i_codec = 0 ;codecs_table [ i_codec ] . i_fourcc != 0;i_codec ++)
forinit	100:9	100:20	3	i_codec = 0 ;
water	100:9	0:0	4	i_codec
op	100:17	0:0	4	=
water	100:19	0:0	4	0
water	100:20	0:0	4	;
cond	100:22	100:56	3	codecs_table [ i_codec ] . i_fourcc != 0
water	100:22	0:0	4	codecs_table
op	100:34	0:0	4	[
water	100:35	0:0	4	i_codec
op	100:42	0:0	4	]
op	100:43	0:0	4	.
water	100:44	0:0	4	i_fourcc
op	100:53	0:0	4	!=
water	100:56	0:0	4	0
forexpr	100:59	100:66	3	i_codec ++
water	100:59	0:0	4	i_codec
op	100:66	0:0	4	++
stmts	101:4	104:4	3	
water	101:4	0:0	4	{
if	102:8	103:17	4	(codecs_table [ i_codec ] . i_fourcc == p_fmt -> i_codec)
cond	102:12	102:53	5	codecs_table [ i_codec ] . i_fourcc == p_fmt -> i_codec
water	102:12	0:0	6	codecs_table
op	102:24	0:0	6	[
water	102:25	0:0	6	i_codec
op	102:32	0:0	6	]
op	102:33	0:0	6	.
water	102:34	0:0	6	i_fourcc
op	102:43	0:0	6	==
water	102:46	0:0	6	p_fmt
op	102:51	0:0	6	->
water	102:53	0:0	6	i_codec
stmts	103:12	103:17	5	
break	103:12	103:17	6	
water	104:4	0:0	4	}
if	105:4	106:27	2	(codecs_table [ i_codec ] . i_fourcc == 0)
cond	105:8	105:42	3	codecs_table [ i_codec ] . i_fourcc == 0
water	105:8	0:0	4	codecs_table
op	105:20	0:0	4	[
water	105:21	0:0	4	i_codec
op	105:28	0:0	4	]
op	105:29	0:0	4	.
water	105:30	0:0	4	i_fourcc
op	105:39	0:0	4	==
water	105:42	0:0	4	0
stmts	106:8	106:27	3	
return	106:8	106:27	4	VLC_EGENERIC
water	106:15	0:0	5	VLC_EGENERIC
op	107:4	0:0	2	*
water	107:5	0:0	2	p_hmsdmo_dll
op	107:18	0:0	2	=
call	107:20	107:64	2	LoadLibraryA
arg	107:34	107:64	3	codecs_table[i_codec].psz_dll
water	107:34	0:0	4	codecs_table
op	107:46	0:0	4	[
water	107:47	0:0	4	i_codec
op	107:54	0:0	4	]
op	107:55	0:0	4	.
water	107:56	0:0	4	psz_dll
water	107:65	0:0	2	;
if	108:4	113:4	2	(* p_hmsdmo_dll == NULL)
cond	108:8	108:25	3	* p_hmsdmo_dll == NULL
op	108:8	0:0	4	*
water	108:9	0:0	4	p_hmsdmo_dll
op	108:22	0:0	4	==
water	108:25	0:0	4	NULL
stmts	109:4	113:4	3	
water	109:4	0:0	4	{
call	110:8	111:47	4	msg_Dbg
arg	110:17	110:23	5	p_this
water	110:17	0:0	6	p_this
arg	110:25	110:46	5	"failed loading '%s'"
water	110:25	0:0	6	"failed loading '%s'"
arg	111:17	111:47	5	codecs_table[i_codec].psz_dll
water	111:17	0:0	6	codecs_table
op	111:29	0:0	6	[
water	111:30	0:0	6	i_codec
op	111:37	0:0	6	]
op	111:38	0:0	6	.
water	111:39	0:0	6	psz_dll
water	111:48	0:0	4	;
return	112:8	112:27	4	VLC_EGENERIC
water	112:15	0:0	5	VLC_EGENERIC
water	113:4	0:0	4	}
water	114:4	0:0	2	GetClass
op	114:13	0:0	2	=
water	114:15	0:0	2	(
water	114:16	0:0	2	GETCLASS
water	114:24	0:0	2	)
call	114:25	114:76	2	GetProcAddress
arg	114:41	114:54	3	*p_hmsdmo_dll
op	114:41	0:0	4	*
water	114:42	0:0	4	p_hmsdmo_dll
arg	114:56	114:76	3	"DllGetClassObject"
water	114:56	0:0	4	"DllGetClassObject"
water	114:77	0:0	2	;
if	115:4	120:4	2	(! GetClass)
cond	115:8	115:9	3	! GetClass
op	115:8	0:0	4	!
water	115:9	0:0	4	GetClass
stmts	116:4	120:4	3	
water	116:4	0:0	4	{
call	117:8	117:77	4	msg_Dbg
arg	117:17	117:23	5	p_this
water	117:17	0:0	6	p_this
arg	117:25	117:77	5	"GetProcAddress failed to find DllGetClassObject()"
water	117:25	0:0	6	"GetProcAddress failed to find DllGetClassObject()"
water	117:78	0:0	4	;
call	118:8	118:35	4	FreeLibrary
arg	118:21	118:35	5	*p_hmsdmo_dll
op	118:21	0:0	6	*
water	118:22	0:0	6	p_hmsdmo_dll
water	118:36	0:0	4	;
return	119:8	119:27	4	VLC_EGENERIC
water	119:15	0:0	5	VLC_EGENERIC
water	120:4	0:0	4	}
water	121:4	0:0	2	i_err
op	121:10	0:0	2	=
call	121:12	122:40	2	GetClass
arg	121:22	121:50	3	codecs_table[i_codec].p_guid
water	121:22	0:0	4	codecs_table
op	121:34	0:0	4	[
water	121:35	0:0	4	i_codec
op	121:42	0:0	4	]
op	121:43	0:0	4	.
water	121:44	0:0	4	p_guid
arg	121:52	121:70	3	&IID_IClassFactory
op	121:52	0:0	4	&
water	121:53	0:0	4	IID_IClassFactory
arg	122:22	122:40	3	(void**)&cFactory
water	122:22	0:0	4	(
water	122:23	0:0	4	void
op	122:27	0:0	4	*
op	122:28	0:0	4	*
water	122:29	0:0	4	)
op	122:30	0:0	4	&
water	122:31	0:0	4	cFactory
water	122:41	0:0	2	;
if	123:4	128:4	2	(i_err || cFactory == NULL)
cond	123:8	123:29	3	i_err || cFactory == NULL
water	123:8	0:0	4	i_err
op	123:14	0:0	4	||
water	123:17	0:0	4	cFactory
op	123:26	0:0	4	==
water	123:29	0:0	4	NULL
stmts	124:4	128:4	3	
water	124:4	0:0	4	{
call	125:8	125:48	4	msg_Dbg
arg	125:17	125:23	5	p_this
water	125:17	0:0	6	p_this
arg	125:25	125:48	5	"no such class object"
water	125:25	0:0	6	"no such class object"
water	125:49	0:0	4	;
call	126:8	126:35	4	FreeLibrary
arg	126:21	126:35	5	*p_hmsdmo_dll
op	126:21	0:0	6	*
water	126:22	0:0	6	p_hmsdmo_dll
water	126:36	0:0	4	;
return	127:8	127:27	4	VLC_EGENERIC
water	127:15	0:0	5	VLC_EGENERIC
water	128:4	0:0	4	}
water	129:4	0:0	2	i_err
op	129:10	0:0	2	=
call	129:12	130:59	2	cFactory->vt->CreateInstance
arg	129:42	129:50	3	cFactory
water	129:42	0:0	4	cFactory
arg	129:52	129:53	3	0
water	129:52	0:0	4	0
arg	129:55	129:68	3	&IID_IUnknown
op	129:55	0:0	4	&
water	129:56	0:0	4	IID_IUnknown
arg	130:42	130:59	3	(void**)&cObject
water	130:42	0:0	4	(
water	130:43	0:0	4	void
op	130:47	0:0	4	*
op	130:48	0:0	4	*
water	130:49	0:0	4	)
op	130:50	0:0	4	&
water	130:51	0:0	4	cObject
water	130:60	0:0	2	;
call	131:4	131:47	2	cFactory->vt->Release
arg	131:27	131:47	3	(IUnknown*)cFactory
water	131:27	0:0	4	(
water	131:28	0:0	4	IUnknown
op	131:36	0:0	4	*
water	131:37	0:0	4	)
water	131:38	0:0	4	cFactory
water	131:48	0:0	2	;
if	132:4	137:4	2	(i_err || ! cObject)
cond	132:8	132:18	3	i_err || ! cObject
water	132:8	0:0	4	i_err
op	132:14	0:0	4	||
op	132:17	0:0	4	!
water	132:18	0:0	4	cObject
stmts	133:4	137:4	3	
water	133:4	0:0	4	{
call	134:8	134:49	4	msg_Dbg
arg	134:17	134:23	5	p_this
water	134:17	0:0	6	p_this
arg	134:25	134:49	5	"class factory failure"
water	134:25	0:0	6	"class factory failure"
water	134:50	0:0	4	;
call	135:8	135:35	4	FreeLibrary
arg	135:21	135:35	5	*p_hmsdmo_dll
op	135:21	0:0	6	*
water	135:22	0:0	6	p_hmsdmo_dll
water	135:36	0:0	4	;
return	136:8	136:27	4	VLC_EGENERIC
water	136:15	0:0	5	VLC_EGENERIC
water	137:4	0:0	4	}
water	138:4	0:0	2	i_err
op	138:10	0:0	2	=
call	138:12	139:55	2	cObject->vt->QueryInterface
arg	138:41	138:48	3	cObject
water	138:41	0:0	4	cObject
arg	138:50	138:67	3	&IID_IMediaObject
op	138:50	0:0	4	&
water	138:51	0:0	4	IID_IMediaObject
arg	139:40	139:55	3	(void**)pp_dmo
water	139:40	0:0	4	(
water	139:41	0:0	4	void
op	139:45	0:0	4	*
op	139:46	0:0	4	*
water	139:47	0:0	4	)
water	139:48	0:0	4	pp_dmo
water	139:56	0:0	2	;
call	140:4	140:45	2	cObject->vt->Release
arg	140:26	140:45	3	(IUnknown*)cObject
water	140:26	0:0	4	(
water	140:27	0:0	4	IUnknown
op	140:35	0:0	4	*
water	140:36	0:0	4	)
water	140:37	0:0	4	cObject
water	140:46	0:0	2	;
if	141:4	146:4	2	(i_err || ! * pp_dmo)
cond	141:8	141:19	3	i_err || ! * pp_dmo
water	141:8	0:0	4	i_err
op	141:14	0:0	4	||
op	141:17	0:0	4	!
op	141:18	0:0	4	*
water	141:19	0:0	4	pp_dmo
stmts	142:4	146:4	3	
water	142:4	0:0	4	{
call	143:8	143:50	4	msg_Dbg
arg	143:17	143:23	5	p_this
water	143:17	0:0	6	p_this
arg	143:25	143:50	5	"QueryInterface failure"
water	143:25	0:0	6	"QueryInterface failure"
water	143:51	0:0	4	;
call	144:8	144:35	4	FreeLibrary
arg	144:21	144:35	5	*p_hmsdmo_dll
op	144:21	0:0	6	*
water	144:22	0:0	6	p_hmsdmo_dll
water	144:36	0:0	4	;
return	145:8	145:27	4	VLC_EGENERIC
water	145:15	0:0	5	VLC_EGENERIC
water	146:4	0:0	4	}
return	147:4	147:22	2	VLC_SUCCESS
water	147:11	0:0	3	VLC_SUCCESS

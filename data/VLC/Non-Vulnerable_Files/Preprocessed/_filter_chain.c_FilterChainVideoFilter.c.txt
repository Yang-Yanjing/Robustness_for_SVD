func	2:0	19:0	0	static picture_t *	FilterChainVideoFilter
params	2:40	0:0	1	
param	2:42	2:61	2	chained_filter_t *	f
param	2:63	2:80	2	picture_t *	p_pic
stmnts	4:4	18:16	1	
for	4:4	17:4	2	(;f != NULL;f = f -> next)
forinit	4:9	4:9	3	;
water	4:9	0:0	4	;
cond	4:11	4:16	3	f != NULL
water	4:11	0:0	4	f
op	4:13	0:0	4	!=
water	4:16	0:0	4	NULL
forexpr	4:22	4:29	3	f = f -> next
water	4:22	0:0	4	f
op	4:24	0:0	4	=
water	4:26	0:0	4	f
op	4:27	0:0	4	->
water	4:29	0:0	4	next
stmts	5:4	17:4	3	
water	5:4	0:0	4	{
decl	6:8	6:39	4	filter_t	*p_filter
op	6:27	0:0	4	=
op	6:29	0:0	4	&
water	6:30	0:0	4	f
op	6:31	0:0	4	->
water	6:33	0:0	4	filter
water	7:8	0:0	4	p_pic
op	7:14	0:0	4	=
call	7:16	7:59	4	p_filter->pf_video_filter
arg	7:43	7:51	5	p_filter
water	7:43	0:0	6	p_filter
arg	7:53	7:59	5	p_pic
water	7:53	0:0	6	p_pic
water	7:60	0:0	4	;
if	8:8	9:17	4	(! p_pic)
cond	8:12	8:13	5	! p_pic
op	8:12	0:0	6	!
water	8:13	0:0	6	p_pic
stmts	9:12	9:17	5	
break	9:12	9:17	6	
if	10:8	14:8	4	(f -> pending)
cond	10:12	10:15	5	f -> pending
water	10:12	0:0	6	f
op	10:13	0:0	6	->
water	10:15	0:0	6	pending
stmts	11:8	14:8	5	
water	11:8	0:0	6	{
call	12:12	12:52	6	msg_Warn
arg	12:22	12:30	7	p_filter
water	12:22	0:0	8	p_filter
arg	12:32	12:52	7	"dropping pictures"
water	12:32	0:0	8	"dropping pictures"
water	12:53	0:0	6	;
call	13:12	13:55	6	FilterDeletePictures
arg	13:34	13:42	7	p_filter
water	13:34	0:0	8	p_filter
arg	13:44	13:55	7	f->pending
water	13:44	0:0	8	f
op	13:45	0:0	8	->
water	13:47	0:0	8	pending
water	13:56	0:0	6	;
water	14:8	0:0	6	}
water	15:8	0:0	4	f
op	15:9	0:0	4	->
water	15:11	0:0	4	pending
op	15:19	0:0	4	=
water	15:21	0:0	4	p_pic
op	15:26	0:0	4	->
water	15:28	0:0	4	p_next
water	15:34	0:0	4	;
water	16:8	0:0	4	p_pic
op	16:13	0:0	4	->
water	16:15	0:0	4	p_next
op	16:22	0:0	4	=
water	16:24	0:0	4	NULL
water	16:28	0:0	4	;
water	17:4	0:0	4	}
return	18:4	18:16	2	p_pic
water	18:11	0:0	3	p_pic

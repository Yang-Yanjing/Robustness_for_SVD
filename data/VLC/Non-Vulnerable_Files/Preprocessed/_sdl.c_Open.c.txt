func	2:0	214:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	object
stmnts	0:0	213:23	1	
decl	4:4	4:49	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:41	0:0	2	*
water	4:42	0:0	2	)
water	4:43	0:0	2	object
decl	5:4	5:27	2	vout_display_sys_t	*sys
if	7:4	8:27	2	(!vlc_xlib_init (object ))
cond	7:8	7:30	3	!vlc_xlib_init (object )
op	7:8	0:0	4	!
call	7:9	7:30	4	vlc_xlib_init
arg	7:24	7:30	5	object
water	7:24	0:0	6	object
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
call	11:4	11:28	2	vlc_mutex_lock
arg	11:19	11:28	3	&sdl_lock
op	11:19	0:0	4	&
water	11:20	0:0	4	sdl_lock
water	11:29	0:0	2	;
if	13:4	16:4	2	(SDL_WasInit (SDL_INIT_VIDEO ) != 0)
cond	13:8	13:39	3	SDL_WasInit (SDL_INIT_VIDEO ) != 0
call	13:8	13:34	4	SDL_WasInit
arg	13:20	13:34	5	SDL_INIT_VIDEO
water	13:20	0:0	6	SDL_INIT_VIDEO
op	13:36	0:0	4	!=
water	13:39	0:0	4	0
stmts	13:42	16:4	3	
water	13:42	0:0	4	{
call	14:8	14:34	4	vlc_mutex_unlock
arg	14:25	14:34	5	&sdl_lock
op	14:25	0:0	6	&
water	14:26	0:0	6	sdl_lock
water	14:35	0:0	4	;
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
water	17:4	0:0	2	vd
op	17:6	0:0	2	->
water	17:8	0:0	2	sys
op	17:12	0:0	2	=
water	17:14	0:0	2	sys
op	17:18	0:0	2	=
call	17:20	17:42	2	calloc
arg	17:27	17:28	3	1
water	17:27	0:0	4	1
arg	17:30	17:42	3	sizeof(*sys)
op	17:30	0:0	4	sizeof
water	17:36	0:0	4	(
op	17:37	0:0	4	*
water	17:38	0:0	4	sys
water	17:41	0:0	4	)
water	17:43	0:0	2	;
if	18:4	21:4	2	(! sys)
cond	18:8	18:9	3	! sys
op	18:8	0:0	4	!
water	18:9	0:0	4	sys
stmts	18:14	21:4	3	
water	18:14	0:0	4	{
call	19:8	19:34	4	vlc_mutex_unlock
arg	19:25	19:34	5	&sdl_lock
op	19:25	0:0	6	&
water	19:26	0:0	6	sdl_lock
water	19:35	0:0	4	;
return	20:8	20:25	4	VLC_ENOMEM
water	20:15	0:0	5	VLC_ENOMEM
water	21:4	0:0	4	}
decl	23:4	23:34	2	int	sdl_flags
op	23:18	0:0	2	=
water	23:20	0:0	2	SDL_INIT_VIDEO
water	26:4	0:0	2	sdl_flags
op	26:14	0:0	2	|=
water	26:17	0:0	2	SDL_INIT_EVENTTHREAD
water	26:37	0:0	2	;
water	29:4	0:0	2	sdl_flags
op	29:14	0:0	2	|=
water	29:17	0:0	2	SDL_INIT_NOPARACHUTE
water	29:37	0:0	2	;
if	31:4	36:4	2	(SDL_Init (sdl_flags ) < 0)
cond	31:8	31:30	3	SDL_Init (sdl_flags ) < 0
call	31:8	31:26	4	SDL_Init
arg	31:17	31:26	5	sdl_flags
water	31:17	0:0	6	sdl_flags
op	31:28	0:0	4	<
water	31:30	0:0	4	0
stmts	31:33	36:4	3	
water	31:33	0:0	4	{
call	32:8	32:34	4	vlc_mutex_unlock
arg	32:25	32:34	5	&sdl_lock
op	32:25	0:0	6	&
water	32:26	0:0	6	sdl_lock
water	32:35	0:0	4	;
call	33:8	33:64	4	msg_Err
arg	33:16	33:18	5	vd
water	33:16	0:0	6	vd
arg	33:20	33:48	5	"cannot initialize SDL (%s)"
water	33:20	0:0	6	"cannot initialize SDL (%s)"
arg	33:50	33:64	5	SDL_GetError()
call	33:50	33:63	6	SDL_GetError
water	33:65	0:0	4	;
call	34:8	34:16	4	free
arg	34:13	34:16	5	sys
water	34:13	0:0	6	sys
water	34:17	0:0	4	;
return	35:8	35:27	4	VLC_EGENERIC
water	35:15	0:0	5	VLC_EGENERIC
water	36:4	0:0	4	}
call	37:4	37:30	2	vlc_mutex_unlock
arg	37:21	37:30	3	&sdl_lock
op	37:21	0:0	4	&
water	37:22	0:0	4	sdl_lock
water	37:31	0:0	2	;
call	39:4	39:23	2	SDL_EnableUNICODE
arg	39:22	39:23	3	1
water	39:22	0:0	4	1
water	39:24	0:0	2	;
water	42:4	0:0	2	sys
op	42:7	0:0	2	->
water	42:9	0:0	2	desktop_width
op	42:24	0:0	2	=
call	42:26	42:43	2	SDL_GetVideoInfo
op	42:44	0:0	2	->
water	42:46	0:0	2	current_w
water	42:55	0:0	2	;
water	43:4	0:0	2	sys
op	43:7	0:0	2	->
water	43:9	0:0	2	desktop_height
op	43:24	0:0	2	=
call	43:26	43:43	2	SDL_GetVideoInfo
op	43:44	0:0	2	->
water	43:46	0:0	2	current_h
water	43:55	0:0	2	;
decl	45:4	45:22	2	video_format_t	fmt
call	46:4	46:45	2	video_format_ApplyRotation
arg	46:31	46:35	3	&fmt
op	46:31	0:0	4	&
water	46:32	0:0	4	fmt
arg	46:37	46:45	3	&vd->fmt
op	46:37	0:0	4	&
water	46:38	0:0	4	vd
op	46:40	0:0	4	->
water	46:42	0:0	4	fmt
water	46:46	0:0	2	;
decl	48:4	48:39	2	vout_display_info_t	info
op	48:29	0:0	2	=
water	48:31	0:0	2	vd
op	48:33	0:0	2	->
water	48:35	0:0	2	info
decl	50:4	50:21	2	int	display_width
decl	51:4	51:22	2	int	display_height
if	52:4	55:4	2	(vd -> cfg -> is_fullscreen)
cond	52:8	52:17	3	vd -> cfg -> is_fullscreen
water	52:8	0:0	4	vd
op	52:10	0:0	4	->
water	52:12	0:0	4	cfg
op	52:15	0:0	4	->
water	52:17	0:0	4	is_fullscreen
stmts	52:32	55:4	3	
water	52:32	0:0	4	{
water	53:8	0:0	4	display_width
op	53:23	0:0	4	=
water	53:25	0:0	4	sys
op	53:28	0:0	4	->
water	53:30	0:0	4	desktop_width
water	53:43	0:0	4	;
water	54:8	0:0	4	display_height
op	54:23	0:0	4	=
water	54:25	0:0	4	sys
op	54:28	0:0	4	->
water	54:30	0:0	4	desktop_height
water	54:44	0:0	4	;
water	55:4	0:0	4	}
else	55:6	58:4	2
stmts	55:11	58:4	3	
water	55:11	0:0	4	{
water	56:8	0:0	4	display_width
op	56:23	0:0	4	=
water	56:25	0:0	4	vd
op	56:27	0:0	4	->
water	56:29	0:0	4	cfg
op	56:32	0:0	4	->
water	56:34	0:0	4	display
op	56:41	0:0	4	.
water	56:42	0:0	4	width
water	56:47	0:0	4	;
water	57:8	0:0	4	display_height
op	57:23	0:0	4	=
water	57:25	0:0	4	vd
op	57:27	0:0	4	->
water	57:29	0:0	4	cfg
op	57:32	0:0	4	->
water	57:34	0:0	4	display
op	57:41	0:0	4	.
water	57:42	0:0	4	height
water	57:48	0:0	4	;
water	58:4	0:0	4	}
water	60:4	0:0	2	sys
op	60:7	0:0	2	->
water	60:9	0:0	2	display_flags
op	60:23	0:0	2	=
water	60:25	0:0	2	SDL_ANYFORMAT
op	60:39	0:0	2	|
water	60:41	0:0	2	SDL_HWPALETTE
op	60:55	0:0	2	|
water	60:57	0:0	2	SDL_HWSURFACE
op	60:71	0:0	2	|
water	60:73	0:0	2	SDL_DOUBLEBUF
water	60:86	0:0	2	;
water	61:4	0:0	2	sys
op	61:7	0:0	2	->
water	61:9	0:0	2	display_flags
op	61:23	0:0	2	|=
water	61:26	0:0	2	vd
op	61:28	0:0	2	->
water	61:30	0:0	2	cfg
op	61:33	0:0	2	->
water	61:35	0:0	2	is_fullscreen
water	61:49	0:0	2	?
water	61:51	0:0	2	SDL_FULLSCREEN
water	61:66	0:0	2	:
water	61:68	0:0	2	SDL_RESIZABLE
water	61:81	0:0	2	;
water	62:4	0:0	2	sys
op	62:7	0:0	2	->
water	62:9	0:0	2	display_bpp
op	62:21	0:0	2	=
call	62:23	63:61	2	SDL_VideoModeOK
arg	62:39	62:52	3	display_width
water	62:39	0:0	4	display_width
arg	62:54	62:68	3	display_height
water	62:54	0:0	4	display_height
arg	63:39	63:41	3	16
water	63:39	0:0	4	16
arg	63:43	63:61	3	sys->display_flags
water	63:43	0:0	4	sys
op	63:46	0:0	4	->
water	63:48	0:0	4	display_flags
water	63:62	0:0	2	;
if	64:4	67:4	2	(sys -> display_bpp == 0)
cond	64:8	64:28	3	sys -> display_bpp == 0
water	64:8	0:0	4	sys
op	64:11	0:0	4	->
water	64:13	0:0	4	display_bpp
op	64:25	0:0	4	==
water	64:28	0:0	4	0
stmts	64:31	67:4	3	
water	64:31	0:0	4	{
call	65:8	65:45	4	msg_Err
arg	65:16	65:18	5	vd
water	65:16	0:0	6	vd
arg	65:20	65:45	5	"no video mode available"
water	65:20	0:0	6	"no video mode available"
water	65:46	0:0	4	;
goto	66:8	66:18	4	error
water	66:13	0:0	5	error
water	67:4	0:0	4	}
call	68:4	68:38	2	vout_display_DeleteWindow
arg	68:30	68:32	3	vd
water	68:30	0:0	4	vd
arg	68:34	68:38	3	NULL
water	68:34	0:0	4	NULL
water	68:39	0:0	2	;
water	69:4	0:0	2	sys
op	69:7	0:0	2	->
water	69:9	0:0	2	display
op	69:17	0:0	2	=
call	69:19	70:72	2	SDL_SetVideoMode
arg	69:36	69:49	3	display_width
water	69:36	0:0	4	display_width
arg	69:51	69:65	3	display_height
water	69:51	0:0	4	display_height
arg	70:36	70:52	3	sys->display_bpp
water	70:36	0:0	4	sys
op	70:39	0:0	4	->
water	70:41	0:0	4	display_bpp
arg	70:54	70:72	3	sys->display_flags
water	70:54	0:0	4	sys
op	70:57	0:0	4	->
water	70:59	0:0	4	display_flags
water	70:73	0:0	2	;
if	71:4	74:4	2	(! sys -> display)
cond	71:8	71:14	3	! sys -> display
op	71:8	0:0	4	!
water	71:9	0:0	4	sys
op	71:12	0:0	4	->
water	71:14	0:0	4	display
stmts	71:23	74:4	3	
water	71:23	0:0	4	{
call	72:8	72:43	4	msg_Err
arg	72:16	72:18	5	vd
water	72:16	0:0	6	vd
arg	72:20	72:43	5	"cannot set video mode"
water	72:20	0:0	6	"cannot set video mode"
water	72:44	0:0	4	;
goto	73:8	73:18	4	error
water	73:13	0:0	5	error
water	74:4	0:0	4	}
call	76:4	76:32	2	SDL_LockSurface
arg	76:20	76:32	3	sys->display
water	76:20	0:0	4	sys
op	76:23	0:0	4	->
water	76:25	0:0	4	display
water	76:33	0:0	2	;
decl	78:4	78:34	2	vlc_fourcc_t	forced_chroma
op	78:31	0:0	2	=
water	78:33	0:0	2	0
decl	79:4	79:58	2	char	*psz_chroma
op	79:21	0:0	2	=
call	79:23	79:57	3	var_InheritString
arg	79:41	79:43	4	vd
water	79:41	0:0	5	vd
arg	79:45	79:57	4	"sdl-chroma"
water	79:45	0:0	5	"sdl-chroma"
if	80:4	86:4	2	(psz_chroma)
cond	80:8	80:8	3	psz_chroma
water	80:8	0:0	4	psz_chroma
stmts	80:20	86:4	3	
water	80:20	0:0	4	{
water	81:8	0:0	4	forced_chroma
op	81:22	0:0	4	=
call	81:24	81:74	4	vlc_fourcc_GetCodecFromString
arg	81:54	81:62	5	VIDEO_ES
water	81:54	0:0	6	VIDEO_ES
arg	81:64	81:74	5	psz_chroma
water	81:64	0:0	6	psz_chroma
water	81:75	0:0	4	;
if	82:8	84:63	4	(forced_chroma)
cond	82:12	82:12	5	forced_chroma
water	82:12	0:0	6	forced_chroma
stmts	83:12	84:63	5	
call	83:12	84:62	6	msg_Dbg
arg	83:20	83:22	7	vd
water	83:20	0:0	8	vd
arg	83:24	83:58	7	"Forcing chroma to 0x%.8x (%4.4s)"
water	83:24	0:0	8	"Forcing chroma to 0x%.8x (%4.4s)"
arg	84:20	84:33	7	forced_chroma
water	84:20	0:0	8	forced_chroma
arg	84:35	84:62	7	(constchar*)&forced_chroma
water	84:35	0:0	8	(
water	84:36	0:0	8	const
water	84:42	0:0	8	char
op	84:46	0:0	8	*
water	84:47	0:0	8	)
op	84:48	0:0	8	&
water	84:49	0:0	8	forced_chroma
water	84:63	0:0	6	;
call	85:8	85:23	4	free
arg	85:13	85:23	5	psz_chroma
water	85:13	0:0	6	psz_chroma
water	85:24	0:0	4	;
water	86:4	0:0	4	}
water	88:4	0:0	2	sys
op	88:7	0:0	2	->
water	88:9	0:0	2	overlay
op	88:17	0:0	2	=
water	88:19	0:0	2	NULL
water	88:23	0:0	2	;
decl	89:4	89:58	2	const bool	is_overlay
op	89:26	0:0	2	=
call	89:28	89:57	3	var_InheritBool
arg	89:44	89:46	4	vd
water	89:44	0:0	5	vd
arg	89:48	89:57	4	"overlay"
water	89:48	0:0	5	"overlay"
if	90:4	138:4	2	(is_overlay)
cond	90:8	90:8	3	is_overlay
water	90:8	0:0	4	is_overlay
stmts	90:20	138:4	3	
water	90:20	0:0	4	{
water	91:8	0:0	4	static
water	91:15	0:0	4	const
water	91:21	0:0	4	struct
water	92:8	0:0	4	{
water	93:12	0:0	4	vlc_fourcc_t
water	93:25	0:0	4	vlc
water	93:28	0:0	4	;
water	94:12	0:0	4	uint32_t
water	94:25	0:0	4	sdl
water	94:28	0:0	4	;
water	95:8	0:0	4	}
water	95:10	0:0	4	vlc_to_sdl
op	95:20	0:0	4	[
op	95:21	0:0	4	]
op	95:23	0:0	4	=
water	95:25	0:0	4	{
water	96:12	0:0	4	{
water	96:14	0:0	4	VLC_CODEC_YV12
water	96:28	0:0	4	,
water	96:30	0:0	4	SDL_YV12_OVERLAY
water	96:47	0:0	4	}
water	96:48	0:0	4	,
water	97:12	0:0	4	{
water	97:14	0:0	4	VLC_CODEC_I420
water	97:28	0:0	4	,
water	97:30	0:0	4	SDL_IYUV_OVERLAY
water	97:47	0:0	4	}
water	97:48	0:0	4	,
water	98:12	0:0	4	{
water	98:14	0:0	4	VLC_CODEC_YUYV
water	98:28	0:0	4	,
water	98:30	0:0	4	SDL_YUY2_OVERLAY
water	98:47	0:0	4	}
water	98:48	0:0	4	,
water	99:12	0:0	4	{
water	99:14	0:0	4	VLC_CODEC_UYVY
water	99:28	0:0	4	,
water	99:30	0:0	4	SDL_UYVY_OVERLAY
water	99:47	0:0	4	}
water	99:48	0:0	4	,
water	100:12	0:0	4	{
water	100:14	0:0	4	VLC_CODEC_YVYU
water	100:28	0:0	4	,
water	100:30	0:0	4	SDL_YVYU_OVERLAY
water	100:47	0:0	4	}
water	100:48	0:0	4	,
water	101:12	0:0	4	{
water	101:14	0:0	4	0
water	101:15	0:0	4	,
water	101:17	0:0	4	0
water	101:19	0:0	4	}
water	102:8	0:0	4	}
water	102:9	0:0	4	;
decl	103:8	105:9	4	const vlc_fourcc_t	forced_chromas[]
op	103:44	0:0	4	=
water	103:46	0:0	4	{
water	104:12	0:0	4	forced_chroma
water	104:25	0:0	4	,
water	104:27	0:0	4	0
water	105:8	0:0	4	}
decl	106:8	107:51	4	const vlc_fourcc_t	*fallback_chromas
op	106:45	0:0	4	=
call	107:12	107:50	5	vlc_fourcc_GetYUVFallback
arg	107:38	107:50	6	fmt.i_chroma
water	107:38	0:0	7	fmt
op	107:41	0:0	7	.
water	107:42	0:0	7	i_chroma
decl	108:8	108:87	4	const vlc_fourcc_t	*chromas
op	108:36	0:0	4	=
water	108:38	0:0	4	forced_chroma
water	108:52	0:0	4	?
water	108:54	0:0	4	forced_chromas
water	108:69	0:0	4	:
water	108:71	0:0	4	fallback_chromas
for	109:8	137:8	4	( int pass = forced_chroma ? 1 : 0 ;pass < 2 && ! sys -> overlay;pass ++)
forinit	0:0	109:45	5	 int pass = forced_chroma ? 1 : 0 ;
decl	109:13	109:45	6	int	pass
op	109:22	0:0	6	=
water	109:24	0:0	6	forced_chroma
water	109:38	0:0	6	?
water	109:40	0:0	6	1
water	109:42	0:0	6	:
water	109:44	0:0	6	0
cond	109:47	109:65	5	pass < 2 && ! sys -> overlay
water	109:47	0:0	6	pass
op	109:52	0:0	6	<
water	109:54	0:0	6	2
op	109:56	0:0	6	&&
op	109:59	0:0	6	!
water	109:60	0:0	6	sys
op	109:63	0:0	6	->
water	109:65	0:0	6	overlay
forexpr	109:74	109:78	5	pass ++
water	109:74	0:0	6	pass
op	109:78	0:0	6	++
stmts	109:82	137:8	5	
water	109:82	0:0	6	{
for	110:12	136:12	6	( int i = 0 ;chromas [ i ] != 0;i ++)
forinit	0:0	110:26	7	 int i = 0 ;
decl	110:17	110:26	8	int	i
op	110:23	0:0	8	=
water	110:25	0:0	8	0
cond	110:28	110:42	7	chromas [ i ] != 0
water	110:28	0:0	8	chromas
op	110:35	0:0	8	[
water	110:36	0:0	8	i
op	110:37	0:0	8	]
op	110:39	0:0	8	!=
water	110:42	0:0	8	0
forexpr	110:45	110:46	7	i ++
water	110:45	0:0	8	i
op	110:46	0:0	8	++
stmts	110:50	136:12	7	
water	110:50	0:0	8	{
decl	111:16	111:51	8	const vlc_fourcc_t	vlc
op	111:39	0:0	8	=
water	111:41	0:0	8	chromas
op	111:48	0:0	8	[
water	111:49	0:0	8	i
op	111:50	0:0	8	]
decl	112:16	112:32	8	uint32_t	sdl
op	112:29	0:0	8	=
water	112:31	0:0	8	0
for	113:16	116:16	8	( int j = 0 ;vlc_to_sdl [ j ] . vlc != 0 && ! sdl;j ++)
forinit	0:0	113:30	9	 int j = 0 ;
decl	113:21	113:30	10	int	j
op	113:27	0:0	10	=
water	113:29	0:0	10	0
cond	113:32	113:59	9	vlc_to_sdl [ j ] . vlc != 0 && ! sdl
water	113:32	0:0	10	vlc_to_sdl
op	113:42	0:0	10	[
water	113:43	0:0	10	j
op	113:44	0:0	10	]
op	113:45	0:0	10	.
water	113:46	0:0	10	vlc
op	113:50	0:0	10	!=
water	113:53	0:0	10	0
op	113:55	0:0	10	&&
op	113:58	0:0	10	!
water	113:59	0:0	10	sdl
forexpr	113:64	113:65	9	j ++
water	113:64	0:0	10	j
op	113:65	0:0	10	++
stmts	113:69	116:16	9	
water	113:69	0:0	10	{
if	114:20	115:47	10	(vlc_to_sdl [ j ] . vlc == vlc)
cond	114:24	114:45	11	vlc_to_sdl [ j ] . vlc == vlc
water	114:24	0:0	12	vlc_to_sdl
op	114:34	0:0	12	[
water	114:35	0:0	12	j
op	114:36	0:0	12	]
op	114:37	0:0	12	.
water	114:38	0:0	12	vlc
op	114:42	0:0	12	==
water	114:45	0:0	12	vlc
stmts	115:24	115:47	11	
water	115:24	0:0	12	sdl
op	115:28	0:0	12	=
water	115:30	0:0	12	vlc_to_sdl
op	115:40	0:0	12	[
water	115:41	0:0	12	j
op	115:42	0:0	12	]
op	115:43	0:0	12	.
water	115:44	0:0	12	sdl
water	115:47	0:0	12	;
water	116:16	0:0	10	}
if	117:16	118:28	8	(! sdl)
cond	117:20	117:21	9	! sdl
op	117:20	0:0	10	!
water	117:21	0:0	10	sdl
stmts	118:20	118:28	9	
continue	118:20	118:28	10	
water	119:16	0:0	8	sys
op	119:19	0:0	8	->
water	119:21	0:0	8	overlay
op	119:29	0:0	8	=
call	119:31	120:69	8	SDL_CreateYUVOverlay
arg	119:52	119:63	9	fmt.i_width
water	119:52	0:0	10	fmt
op	119:55	0:0	10	.
water	119:56	0:0	10	i_width
arg	119:65	119:77	9	fmt.i_height
water	119:65	0:0	10	fmt
op	119:68	0:0	10	.
water	119:69	0:0	10	i_height
arg	120:52	120:55	9	sdl
water	120:52	0:0	10	sdl
arg	120:57	120:69	9	sys->display
water	120:57	0:0	10	sys
op	120:60	0:0	10	->
water	120:62	0:0	10	display
water	120:70	0:0	8	;
if	121:16	125:16	8	(sys -> overlay && ! sys -> overlay -> hw_overlay && pass == 0)
cond	121:20	121:73	9	sys -> overlay && ! sys -> overlay -> hw_overlay && pass == 0
water	121:20	0:0	10	sys
op	121:23	0:0	10	->
water	121:25	0:0	10	overlay
op	121:33	0:0	10	&&
op	121:36	0:0	10	!
water	121:37	0:0	10	sys
op	121:40	0:0	10	->
water	121:42	0:0	10	overlay
op	121:49	0:0	10	->
water	121:51	0:0	10	hw_overlay
op	121:62	0:0	10	&&
water	121:65	0:0	10	pass
op	121:70	0:0	10	==
water	121:73	0:0	10	0
stmts	121:76	125:16	9	
water	121:76	0:0	10	{
call	123:20	123:51	10	SDL_FreeYUVOverlay
arg	123:39	123:51	11	sys->overlay
water	123:39	0:0	12	sys
op	123:42	0:0	12	->
water	123:44	0:0	12	overlay
water	123:52	0:0	10	;
water	124:20	0:0	10	sys
op	124:23	0:0	10	->
water	124:25	0:0	10	overlay
op	124:33	0:0	10	=
water	124:35	0:0	10	NULL
water	124:39	0:0	10	;
water	125:16	0:0	10	}
if	126:16	135:16	8	(sys -> overlay)
cond	126:20	126:25	9	sys -> overlay
water	126:20	0:0	10	sys
op	126:23	0:0	10	->
water	126:25	0:0	10	overlay
stmts	126:34	135:16	9	
water	126:34	0:0	10	{
call	128:20	128:51	10	SDL_LockYUVOverlay
arg	128:39	128:51	11	sys->overlay
water	128:39	0:0	12	sys
op	128:42	0:0	12	->
water	128:44	0:0	12	overlay
water	128:52	0:0	10	;
water	129:20	0:0	10	fmt
op	129:23	0:0	10	.
water	129:24	0:0	10	i_chroma
op	129:33	0:0	10	=
water	129:35	0:0	10	vlc
water	129:38	0:0	10	;
water	130:20	0:0	10	sys
op	130:23	0:0	10	->
water	130:25	0:0	10	is_uv_swapped
op	130:39	0:0	10	=
call	130:41	131:87	10	vlc_fourcc_AreUVPlanesSwapped
arg	130:71	130:83	11	fmt.i_chroma
water	130:71	0:0	12	fmt
op	130:74	0:0	12	.
water	130:75	0:0	12	i_chroma
arg	131:71	131:87	11	vd->fmt.i_chroma
water	131:71	0:0	12	vd
op	131:73	0:0	12	->
water	131:75	0:0	12	fmt
op	131:78	0:0	12	.
water	131:79	0:0	12	i_chroma
water	131:88	0:0	10	;
if	132:20	133:55	10	(sys -> is_uv_swapped)
cond	132:24	132:29	11	sys -> is_uv_swapped
water	132:24	0:0	12	sys
op	132:27	0:0	12	->
water	132:29	0:0	12	is_uv_swapped
stmts	133:24	133:55	11	
water	133:24	0:0	12	fmt
op	133:27	0:0	12	.
water	133:28	0:0	12	i_chroma
op	133:37	0:0	12	=
water	133:39	0:0	12	vd
op	133:41	0:0	12	->
water	133:43	0:0	12	fmt
op	133:46	0:0	12	.
water	133:47	0:0	12	i_chroma
water	133:55	0:0	12	;
break	134:20	134:25	10	
water	135:16	0:0	10	}
water	136:12	0:0	8	}
water	137:8	0:0	6	}
water	138:4	0:0	4	}
else	138:6	140:4	2
stmts	138:11	140:4	3	
water	138:11	0:0	4	{
call	139:8	139:55	4	msg_Warn
arg	139:17	139:19	5	vd
water	139:17	0:0	6	vd
arg	139:21	139:55	5	"SDL overlay disabled by the user"
water	139:21	0:0	6	"SDL overlay disabled by the user"
water	139:56	0:0	4	;
water	140:4	0:0	4	}
decl	142:4	142:43	2	vout_display_cfg_t	place_cfg
op	142:33	0:0	2	=
op	142:35	0:0	2	*
water	142:36	0:0	2	vd
op	142:38	0:0	2	->
water	142:40	0:0	2	cfg
water	143:4	0:0	2	place_cfg
op	143:13	0:0	2	.
water	143:14	0:0	2	display
op	143:21	0:0	2	.
water	143:22	0:0	2	width
op	143:29	0:0	2	=
water	143:31	0:0	2	display_width
water	143:44	0:0	2	;
water	144:4	0:0	2	place_cfg
op	144:13	0:0	2	.
water	144:14	0:0	2	display
op	144:21	0:0	2	.
water	144:22	0:0	2	height
op	144:29	0:0	2	=
water	144:31	0:0	2	display_height
water	144:45	0:0	2	;
call	145:4	145:81	2	vout_display_PlacePicture
arg	145:30	145:41	3	&sys->place
op	145:30	0:0	4	&
water	145:31	0:0	4	sys
op	145:34	0:0	4	->
water	145:36	0:0	4	place
arg	145:43	145:54	3	&vd->source
op	145:43	0:0	4	&
water	145:44	0:0	4	vd
op	145:46	0:0	4	->
water	145:48	0:0	4	source
arg	145:56	145:66	3	&place_cfg
op	145:56	0:0	4	&
water	145:57	0:0	4	place_cfg
arg	145:68	145:81	3	!sys->overlay
op	145:68	0:0	4	!
water	145:69	0:0	4	sys
op	145:72	0:0	4	->
water	145:74	0:0	4	overlay
water	145:82	0:0	2	;
if	147:4	177:4	2	(! sys -> overlay)
cond	147:8	147:14	3	! sys -> overlay
op	147:8	0:0	4	!
water	147:9	0:0	4	sys
op	147:12	0:0	4	->
water	147:14	0:0	4	overlay
stmts	147:23	177:4	3	
water	147:23	0:0	4	{
switch	149:8	169:8	4	(sys -> display -> format -> BitsPerPixel)
cond	149:16	149:38	5	sys -> display -> format -> BitsPerPixel
water	149:16	0:0	6	sys
op	149:19	0:0	6	->
water	149:21	0:0	6	display
op	149:28	0:0	6	->
water	149:30	0:0	6	format
op	149:36	0:0	6	->
water	149:38	0:0	6	BitsPerPixel
stmts	149:52	169:8	5	
water	149:52	0:0	6	{
label	150:8	150:14	6	case 8 :
water	151:12	0:0	6	fmt
op	151:15	0:0	6	.
water	151:16	0:0	6	i_chroma
op	151:25	0:0	6	=
water	151:27	0:0	6	VLC_CODEC_RGB8
water	151:41	0:0	6	;
break	152:12	152:17	6	
label	153:8	153:15	6	case 15 :
water	154:12	0:0	6	fmt
op	154:15	0:0	6	.
water	154:16	0:0	6	i_chroma
op	154:25	0:0	6	=
water	154:27	0:0	6	VLC_CODEC_RGB15
water	154:42	0:0	6	;
break	155:12	155:17	6	
label	156:8	156:15	6	case 16 :
water	157:12	0:0	6	fmt
op	157:15	0:0	6	.
water	157:16	0:0	6	i_chroma
op	157:25	0:0	6	=
water	157:27	0:0	6	VLC_CODEC_RGB16
water	157:42	0:0	6	;
break	158:12	158:17	6	
label	159:8	159:15	6	case 24 :
water	160:12	0:0	6	fmt
op	160:15	0:0	6	.
water	160:16	0:0	6	i_chroma
op	160:25	0:0	6	=
water	160:27	0:0	6	VLC_CODEC_RGB24
water	160:42	0:0	6	;
break	161:12	161:17	6	
label	162:8	162:15	6	case 32 :
water	163:12	0:0	6	fmt
op	163:15	0:0	6	.
water	163:16	0:0	6	i_chroma
op	163:25	0:0	6	=
water	163:27	0:0	6	VLC_CODEC_RGB32
water	163:42	0:0	6	;
break	164:12	164:17	6	
label	165:8	165:15	6	default :
call	166:12	167:54	6	msg_Err
arg	166:20	166:22	7	vd
water	166:20	0:0	8	vd
arg	166:24	166:49	7	"unknown screen depth %i"
water	166:24	0:0	8	"unknown screen depth %i"
arg	167:20	167:54	7	sys->display->format->BitsPerPixel
water	167:20	0:0	8	sys
op	167:23	0:0	8	->
water	167:25	0:0	8	display
op	167:32	0:0	8	->
water	167:34	0:0	8	format
op	167:40	0:0	8	->
water	167:42	0:0	8	BitsPerPixel
water	167:55	0:0	6	;
goto	168:12	168:22	6	error
water	168:17	0:0	7	error
water	169:8	0:0	6	}
water	171:8	0:0	4	fmt
op	171:11	0:0	4	.
water	171:12	0:0	4	i_width
op	171:21	0:0	4	=
water	171:23	0:0	4	display_width
water	171:36	0:0	4	;
water	172:8	0:0	4	fmt
op	172:11	0:0	4	.
water	172:12	0:0	4	i_height
op	172:21	0:0	4	=
water	172:23	0:0	4	display_height
water	172:37	0:0	4	;
water	173:8	0:0	4	fmt
op	173:11	0:0	4	.
water	173:12	0:0	4	i_rmask
op	173:20	0:0	4	=
water	173:22	0:0	4	sys
op	173:25	0:0	4	->
water	173:27	0:0	4	display
op	173:34	0:0	4	->
water	173:36	0:0	4	format
op	173:42	0:0	4	->
water	173:44	0:0	4	Rmask
water	173:49	0:0	4	;
water	174:8	0:0	4	fmt
op	174:11	0:0	4	.
water	174:12	0:0	4	i_gmask
op	174:20	0:0	4	=
water	174:22	0:0	4	sys
op	174:25	0:0	4	->
water	174:27	0:0	4	display
op	174:34	0:0	4	->
water	174:36	0:0	4	format
op	174:42	0:0	4	->
water	174:44	0:0	4	Gmask
water	174:49	0:0	4	;
water	175:8	0:0	4	fmt
op	175:11	0:0	4	.
water	175:12	0:0	4	i_bmask
op	175:20	0:0	4	=
water	175:22	0:0	4	sys
op	175:25	0:0	4	->
water	175:27	0:0	4	display
op	175:34	0:0	4	->
water	175:36	0:0	4	format
op	175:42	0:0	4	->
water	175:44	0:0	4	Bmask
water	175:49	0:0	4	;
water	176:8	0:0	4	info
op	176:12	0:0	4	.
water	176:13	0:0	4	has_pictures_invalid
op	176:34	0:0	4	=
water	176:36	0:0	4	true
water	176:40	0:0	4	;
water	177:4	0:0	4	}
if	178:4	180:49	2	(vd -> cfg -> display . title)
cond	178:8	178:25	3	vd -> cfg -> display . title
water	178:8	0:0	4	vd
op	178:10	0:0	4	->
water	178:12	0:0	4	cfg
op	178:15	0:0	4	->
water	178:17	0:0	4	display
op	178:24	0:0	4	.
water	178:25	0:0	4	title
stmts	179:8	180:49	3	
call	179:8	180:48	4	SDL_WM_SetCaption
arg	179:26	179:48	5	vd->cfg->display.title
water	179:26	0:0	6	vd
op	179:28	0:0	6	->
water	179:30	0:0	6	cfg
op	179:33	0:0	6	->
water	179:35	0:0	6	display
op	179:42	0:0	6	.
water	179:43	0:0	6	title
arg	180:26	180:48	5	vd->cfg->display.title
water	180:26	0:0	6	vd
op	180:28	0:0	6	->
water	180:30	0:0	6	cfg
op	180:33	0:0	6	->
water	180:35	0:0	6	display
op	180:42	0:0	6	.
water	180:43	0:0	6	title
water	180:49	0:0	4	;
else	181:4	183:66	2
stmts	181:9	183:66	3	
if	181:9	183:66	4	(! sys -> overlay)
cond	181:13	181:19	5	! sys -> overlay
op	181:13	0:0	6	!
water	181:14	0:0	6	sys
op	181:17	0:0	6	->
water	181:19	0:0	6	overlay
stmts	182:8	183:66	5	
call	182:8	183:65	6	SDL_WM_SetCaption
arg	182:26	182:65	7	VOUT_TITLE" (software RGB SDL output)"
water	182:26	0:0	8	VOUT_TITLE
water	182:37	0:0	8	" (software RGB SDL output)"
arg	183:26	183:65	7	VOUT_TITLE" (software RGB SDL output)"
water	183:26	0:0	8	VOUT_TITLE
water	183:37	0:0	8	" (software RGB SDL output)"
water	183:66	0:0	6	;
else	184:4	186:66	2
stmts	184:9	186:66	3	
if	184:9	186:66	4	(sys -> overlay -> hw_overlay)
cond	184:13	184:27	5	sys -> overlay -> hw_overlay
water	184:13	0:0	6	sys
op	184:16	0:0	6	->
water	184:18	0:0	6	overlay
op	184:25	0:0	6	->
water	184:27	0:0	6	hw_overlay
stmts	185:8	186:66	5	
call	185:8	186:65	6	SDL_WM_SetCaption
arg	185:26	185:65	7	VOUT_TITLE" (hardware YUV SDL output)"
water	185:26	0:0	8	VOUT_TITLE
water	185:37	0:0	8	" (hardware YUV SDL output)"
arg	186:26	186:65	7	VOUT_TITLE" (hardware YUV SDL output)"
water	186:26	0:0	8	VOUT_TITLE
water	186:37	0:0	8	" (hardware YUV SDL output)"
water	186:66	0:0	6	;
else	187:4	189:66	2
stmts	188:8	189:66	3	
call	188:8	189:65	4	SDL_WM_SetCaption
arg	188:26	188:65	5	VOUT_TITLE" (software YUV SDL output)"
water	188:26	0:0	6	VOUT_TITLE
water	188:37	0:0	6	" (software YUV SDL output)"
arg	189:26	189:65	5	VOUT_TITLE" (software YUV SDL output)"
water	189:26	0:0	6	VOUT_TITLE
water	189:37	0:0	6	" (software YUV SDL output)"
water	189:66	0:0	4	;
call	191:4	191:40	2	SDL_EventState
arg	191:19	191:28	3	SDL_KEYUP
water	191:19	0:0	4	SDL_KEYUP
arg	191:30	191:40	3	SDL_IGNORE
water	191:30	0:0	4	SDL_IGNORE
water	191:41	0:0	2	;
water	193:4	0:0	2	vd
op	193:6	0:0	2	->
water	193:8	0:0	2	fmt
op	193:12	0:0	2	=
water	193:14	0:0	2	fmt
water	193:17	0:0	2	;
water	194:4	0:0	2	vd
op	194:6	0:0	2	->
water	194:8	0:0	2	info
op	194:13	0:0	2	=
water	194:15	0:0	2	info
water	194:19	0:0	2	;
water	195:4	0:0	2	vd
op	195:6	0:0	2	->
water	195:8	0:0	2	pool
op	195:16	0:0	2	=
water	195:18	0:0	2	Pool
water	195:22	0:0	2	;
water	196:4	0:0	2	vd
op	196:6	0:0	2	->
water	196:8	0:0	2	prepare
op	196:16	0:0	2	=
water	196:18	0:0	2	NULL
water	196:22	0:0	2	;
water	197:4	0:0	2	vd
op	197:6	0:0	2	->
water	197:8	0:0	2	display
op	197:16	0:0	2	=
water	197:18	0:0	2	PictureDisplay
water	197:32	0:0	2	;
water	198:4	0:0	2	vd
op	198:6	0:0	2	->
water	198:8	0:0	2	control
op	198:16	0:0	2	=
water	198:18	0:0	2	Control
water	198:25	0:0	2	;
water	199:4	0:0	2	vd
op	199:6	0:0	2	->
water	199:8	0:0	2	manage
op	199:16	0:0	2	=
water	199:18	0:0	2	Manage
water	199:24	0:0	2	;
call	201:4	201:95	2	vout_display_SendEventDisplaySize
arg	201:38	201:40	3	vd
water	201:38	0:0	4	vd
arg	201:42	201:55	3	display_width
water	201:42	0:0	4	display_width
arg	201:57	201:71	3	display_height
water	201:57	0:0	4	display_height
arg	201:73	201:95	3	vd->cfg->is_fullscreen
water	201:73	0:0	4	vd
op	201:75	0:0	4	->
water	201:77	0:0	4	cfg
op	201:80	0:0	4	->
water	201:82	0:0	4	is_fullscreen
water	201:96	0:0	2	;
return	202:4	202:22	2	VLC_SUCCESS
water	202:11	0:0	3	VLC_SUCCESS
label	203:0	203:5	2	error :
call	204:4	204:56	2	msg_Err
arg	204:12	204:14	3	vd
water	204:12	0:0	4	vd
arg	204:16	204:40	3	"cannot set up SDL (%s)"
water	204:16	0:0	4	"cannot set up SDL (%s)"
arg	204:42	204:56	3	SDL_GetError()
call	204:42	204:55	4	SDL_GetError
water	204:57	0:0	2	;
if	205:4	208:4	2	(sys -> display)
cond	205:8	205:13	3	sys -> display
water	205:8	0:0	4	sys
op	205:11	0:0	4	->
water	205:13	0:0	4	display
stmts	205:22	208:4	3	
water	205:22	0:0	4	{
call	206:8	206:38	4	SDL_UnlockSurface
arg	206:26	206:38	5	sys->display
water	206:26	0:0	6	sys
op	206:29	0:0	6	->
water	206:31	0:0	6	display
water	206:39	0:0	4	;
call	207:8	207:36	4	SDL_FreeSurface
arg	207:24	207:36	5	sys->display
water	207:24	0:0	6	sys
op	207:27	0:0	6	->
water	207:29	0:0	6	display
water	207:37	0:0	4	;
water	208:4	0:0	4	}
call	209:4	209:28	2	vlc_mutex_lock
arg	209:19	209:28	3	&sdl_lock
op	209:19	0:0	4	&
water	209:20	0:0	4	sdl_lock
water	209:29	0:0	2	;
call	210:4	210:36	2	SDL_QuitSubSystem
arg	210:22	210:36	3	SDL_INIT_VIDEO
water	210:22	0:0	4	SDL_INIT_VIDEO
water	210:37	0:0	2	;
call	211:4	211:30	2	vlc_mutex_unlock
arg	211:21	211:30	3	&sdl_lock
op	211:21	0:0	4	&
water	211:22	0:0	4	sdl_lock
water	211:31	0:0	2	;
call	212:4	212:12	2	free
arg	212:9	212:12	3	sys
water	212:9	0:0	4	sys
water	212:13	0:0	2	;
return	213:4	213:23	2	VLC_EGENERIC
water	213:11	0:0	3	VLC_EGENERIC

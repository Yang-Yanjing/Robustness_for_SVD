func	2:0	55:0	0	static void	DecoderProcessVideo
params	2:31	0:0	1	
param	2:33	2:49	2	decoder_t *	p_dec
param	2:51	2:67	2	block_t *	p_block
param	2:69	2:82	2	bool	b_flush
stmnts	0:0	54:55	1	
decl	4:4	4:72	2	decoder_owner_sys_t	*p_owner
op	4:33	0:0	2	=
water	4:35	0:0	2	(
water	4:36	0:0	2	decoder_owner_sys_t
op	4:56	0:0	2	*
water	4:57	0:0	2	)
water	4:58	0:0	2	p_dec
op	4:63	0:0	2	->
water	4:65	0:0	2	p_owner
if	5:4	48:4	2	(p_owner -> p_packetizer)
cond	5:8	5:17	3	p_owner -> p_packetizer
water	5:8	0:0	4	p_owner
op	5:15	0:0	4	->
water	5:17	0:0	4	p_packetizer
stmts	6:4	48:4	3	
water	6:4	0:0	4	{
decl	7:8	7:35	4	block_t	*p_packetized_block
decl	8:8	8:55	4	decoder_t	*p_packetizer
op	8:32	0:0	4	=
water	8:34	0:0	4	p_owner
op	8:41	0:0	4	->
water	8:43	0:0	4	p_packetizer
while	9:8	39:8	4	(( p_packetized_block =p_packetizer -> pf_packetize (p_packetizer ,p_block ? & p_block : NULL ) ))
cond	9:15	10:85	5	( p_packetized_block =p_packetizer -> pf_packetize (p_packetizer ,p_block ? & p_block : NULL ) )
water	9:15	0:0	6	(
water	9:16	0:0	6	p_packetized_block
op	9:35	0:0	6	=
call	10:16	10:84	6	p_packetizer->pf_packetize
arg	10:44	10:56	7	p_packetizer
water	10:44	0:0	8	p_packetizer
arg	10:58	10:84	7	p_block?&p_block:NULL
water	10:58	0:0	8	p_block
water	10:66	0:0	8	?
op	10:68	0:0	8	&
water	10:69	0:0	8	p_block
water	10:77	0:0	8	:
water	10:79	0:0	8	NULL
water	10:85	0:0	6	)
stmts	11:8	39:8	5	
water	11:8	0:0	6	{
if	12:12	16:12	6	(p_packetizer -> fmt_out . i_extra && ! p_dec -> fmt_in . i_extra)
cond	12:16	12:64	7	p_packetizer -> fmt_out . i_extra && ! p_dec -> fmt_in . i_extra
water	12:16	0:0	8	p_packetizer
op	12:28	0:0	8	->
water	12:30	0:0	8	fmt_out
op	12:37	0:0	8	.
water	12:38	0:0	8	i_extra
op	12:46	0:0	8	&&
op	12:49	0:0	8	!
water	12:50	0:0	8	p_dec
op	12:55	0:0	8	->
water	12:57	0:0	8	fmt_in
op	12:63	0:0	8	.
water	12:64	0:0	8	i_extra
stmts	13:12	16:12	7	
water	13:12	0:0	8	{
call	14:16	14:48	8	es_format_Clean
arg	14:33	14:48	9	&p_dec->fmt_in
op	14:33	0:0	10	&
water	14:34	0:0	10	p_dec
op	14:39	0:0	10	->
water	14:41	0:0	10	fmt_in
water	14:49	0:0	8	;
call	15:16	15:71	8	es_format_Copy
arg	15:32	15:46	9	&p_dec->fmt_in
op	15:32	0:0	10	&
water	15:33	0:0	10	p_dec
op	15:38	0:0	10	->
water	15:40	0:0	10	fmt_in
arg	15:48	15:71	9	&p_packetizer->fmt_out
op	15:48	0:0	10	&
water	15:49	0:0	10	p_packetizer
op	15:61	0:0	10	->
water	15:63	0:0	10	fmt_out
water	15:72	0:0	8	;
water	16:12	0:0	8	}
if	22:12	29:12	6	(p_packetizer -> fmt_out . video . i_sar_num > 0 && p_packetizer -> fmt_out . video . i_sar_den > 0)
cond	22:16	23:60	7	p_packetizer -> fmt_out . video . i_sar_num > 0 && p_packetizer -> fmt_out . video . i_sar_den > 0
water	22:16	0:0	8	p_packetizer
op	22:28	0:0	8	->
water	22:30	0:0	8	fmt_out
op	22:37	0:0	8	.
water	22:38	0:0	8	video
op	22:43	0:0	8	.
water	22:44	0:0	8	i_sar_num
op	22:54	0:0	8	>
water	22:56	0:0	8	0
op	22:58	0:0	8	&&
water	23:20	0:0	8	p_packetizer
op	23:32	0:0	8	->
water	23:34	0:0	8	fmt_out
op	23:41	0:0	8	.
water	23:42	0:0	8	video
op	23:47	0:0	8	.
water	23:48	0:0	8	i_sar_den
op	23:58	0:0	8	>
water	23:60	0:0	8	0
stmts	24:12	29:12	7	
water	24:12	0:0	8	{
water	25:16	0:0	8	p_dec
op	25:21	0:0	8	->
water	25:23	0:0	8	fmt_in
op	25:29	0:0	8	.
water	25:30	0:0	8	video
op	25:35	0:0	8	.
water	25:36	0:0	8	i_sar_num
op	25:46	0:0	8	=
water	26:20	0:0	8	p_packetizer
op	26:32	0:0	8	->
water	26:34	0:0	8	fmt_out
op	26:41	0:0	8	.
water	26:42	0:0	8	video
op	26:47	0:0	8	.
water	26:48	0:0	8	i_sar_num
water	26:57	0:0	8	;
water	27:16	0:0	8	p_dec
op	27:21	0:0	8	->
water	27:23	0:0	8	fmt_in
op	27:29	0:0	8	.
water	27:30	0:0	8	video
op	27:35	0:0	8	.
water	27:36	0:0	8	i_sar_den
op	27:45	0:0	8	=
water	28:20	0:0	8	p_packetizer
op	28:32	0:0	8	->
water	28:34	0:0	8	fmt_out
op	28:41	0:0	8	.
water	28:42	0:0	8	video
op	28:47	0:0	8	.
water	28:48	0:0	8	i_sar_den
water	28:57	0:0	8	;
water	29:12	0:0	8	}
if	30:12	31:51	6	(p_packetizer -> pf_get_cc)
cond	30:16	30:30	7	p_packetizer -> pf_get_cc
water	30:16	0:0	8	p_packetizer
op	30:28	0:0	8	->
water	30:30	0:0	8	pf_get_cc
stmts	31:16	31:51	7	
call	31:16	31:50	8	DecoderGetCc
arg	31:30	31:35	9	p_dec
water	31:30	0:0	10	p_dec
arg	31:37	31:50	9	p_packetizer
water	31:37	0:0	10	p_packetizer
water	31:51	0:0	8	;
while	32:12	38:12	6	(p_packetized_block)
cond	32:19	32:19	7	p_packetized_block
water	32:19	0:0	8	p_packetized_block
stmts	33:12	38:12	7	
water	33:12	0:0	8	{
decl	34:16	34:60	8	block_t	*p_next
op	34:32	0:0	8	=
water	34:34	0:0	8	p_packetized_block
op	34:52	0:0	8	->
water	34:54	0:0	8	p_next
water	35:16	0:0	8	p_packetized_block
op	35:34	0:0	8	->
water	35:36	0:0	8	p_next
op	35:43	0:0	8	=
water	35:45	0:0	8	NULL
water	35:49	0:0	8	;
call	36:16	36:62	8	DecoderDecodeVideo
arg	36:36	36:41	9	p_dec
water	36:36	0:0	10	p_dec
arg	36:43	36:62	9	p_packetized_block
water	36:43	0:0	10	p_packetized_block
water	36:63	0:0	8	;
water	37:16	0:0	8	p_packetized_block
op	37:35	0:0	8	=
water	37:37	0:0	8	p_next
water	37:43	0:0	8	;
water	38:12	0:0	8	}
water	39:8	0:0	6	}
if	42:8	47:8	4	(b_flush)
cond	42:12	42:12	5	b_flush
water	42:12	0:0	6	b_flush
stmts	43:8	47:8	5	
water	43:8	0:0	6	{
decl	44:12	44:52	6	block_t	*p_null
op	44:28	0:0	6	=
call	44:30	44:51	7	DecoderBlockFlushNew
if	45:12	46:51	6	(p_null)
cond	45:16	45:16	7	p_null
water	45:16	0:0	8	p_null
stmts	46:16	46:51	7	
call	46:16	46:50	8	DecoderDecodeVideo
arg	46:36	46:41	9	p_dec
water	46:36	0:0	10	p_dec
arg	46:43	46:50	9	p_null
water	46:43	0:0	10	p_null
water	46:51	0:0	8	;
water	47:8	0:0	6	}
water	48:4	0:0	4	}
else	49:4	52:4	2
stmts	50:4	52:4	3	
water	50:4	0:0	4	{
call	51:8	51:43	4	DecoderDecodeVideo
arg	51:28	51:33	5	p_dec
water	51:28	0:0	6	p_dec
arg	51:35	51:43	5	p_block
water	51:35	0:0	6	p_block
water	51:44	0:0	4	;
water	52:4	0:0	4	}
if	53:4	54:55	2	(b_flush && p_owner -> p_vout)
cond	53:8	53:28	3	b_flush && p_owner -> p_vout
water	53:8	0:0	4	b_flush
op	53:16	0:0	4	&&
water	53:19	0:0	4	p_owner
op	53:26	0:0	4	->
water	53:28	0:0	4	p_vout
stmts	54:8	54:55	3	
call	54:8	54:54	4	vout_Flush
arg	54:20	54:35	5	p_owner->p_vout
water	54:20	0:0	6	p_owner
op	54:27	0:0	6	->
water	54:29	0:0	6	p_vout
arg	54:37	54:54	5	VLC_TS_INVALID+1
water	54:37	0:0	6	VLC_TS_INVALID
op	54:51	0:0	6	+
water	54:52	0:0	6	1
water	54:55	0:0	4	;

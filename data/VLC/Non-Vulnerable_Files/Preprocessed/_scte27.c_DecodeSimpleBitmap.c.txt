func	2:0	231:0	0	static subpicture_region_t *	DecodeSimpleBitmap
params	2:46	0:0	1	
param	2:47	2:61	2	decoder_t *	dec
param	3:47	3:66	2	const uint8_t *	data
param	3:68	3:76	2	int	size
stmnts	5:4	230:12	1	
call	5:4	5:18	2	VLC_UNUSED
arg	5:15	5:18	3	dec
water	5:15	0:0	4	dec
water	5:19	0:0	2	;
decl	7:4	7:11	2	bs_t	bs
call	8:4	8:27	2	bs_init
arg	8:12	8:15	3	&bs
op	8:12	0:0	4	&
water	8:13	0:0	4	bs
arg	8:17	8:21	3	data
water	8:17	0:0	4	data
arg	8:23	8:27	3	size
water	8:23	0:0	4	size
water	8:28	0:0	2	;
call	9:4	9:18	2	bs_skip
arg	9:12	9:15	3	&bs
op	9:12	0:0	4	&
water	9:13	0:0	4	bs
arg	9:17	9:18	3	5
water	9:17	0:0	4	5
water	9:19	0:0	2	;
decl	10:4	10:35	2	int	is_framed
op	10:18	0:0	2	=
call	10:20	10:34	3	bs_read
arg	10:28	10:31	4	&bs
op	10:28	0:0	5	&
water	10:29	0:0	5	bs
arg	10:33	10:34	4	1
water	10:33	0:0	5	1
decl	11:4	11:39	2	int	outline_style
op	11:22	0:0	2	=
call	11:24	11:38	3	bs_read
arg	11:32	11:35	4	&bs
op	11:32	0:0	5	&
water	11:33	0:0	5	bs
arg	11:37	11:38	4	2
water	11:37	0:0	5	2
decl	12:4	12:55	2	scte27_color_t	character_color
op	12:35	0:0	2	=
call	12:37	12:54	3	bs_read_color
arg	12:51	12:54	4	&bs
op	12:51	0:0	5	&
water	12:52	0:0	5	bs
decl	13:4	13:32	2	int	top_h
op	13:14	0:0	2	=
call	13:16	13:31	3	bs_read
arg	13:24	13:27	4	&bs
op	13:24	0:0	5	&
water	13:25	0:0	5	bs
arg	13:29	13:31	4	12
water	13:29	0:0	5	12
decl	14:4	14:32	2	int	top_v
op	14:14	0:0	2	=
call	14:16	14:31	3	bs_read
arg	14:24	14:27	4	&bs
op	14:24	0:0	5	&
water	14:25	0:0	5	bs
arg	14:29	14:31	4	12
water	14:29	0:0	5	12
decl	15:4	15:35	2	int	bottom_h
op	15:17	0:0	2	=
call	15:19	15:34	3	bs_read
arg	15:27	15:30	4	&bs
op	15:27	0:0	5	&
water	15:28	0:0	5	bs
arg	15:32	15:34	4	12
water	15:32	0:0	5	12
decl	16:4	16:35	2	int	bottom_v
op	16:17	0:0	2	=
call	16:19	16:34	3	bs_read
arg	16:27	16:30	4	&bs
op	16:27	0:0	5	&
water	16:28	0:0	5	bs
arg	16:32	16:34	4	12
water	16:32	0:0	5	12
if	17:4	18:19	2	(top_h >= bottom_h || top_v >= bottom_v)
cond	17:8	17:38	3	top_h >= bottom_h || top_v >= bottom_v
water	17:8	0:0	4	top_h
op	17:14	0:0	4	>=
water	17:17	0:0	4	bottom_h
op	17:26	0:0	4	||
water	17:29	0:0	4	top_v
op	17:35	0:0	4	>=
water	17:38	0:0	4	bottom_v
stmts	18:8	18:19	3	
return	18:8	18:19	4	NULL
water	18:15	0:0	5	NULL
decl	19:4	19:27	2	int	frame_top_h
op	19:20	0:0	2	=
water	19:22	0:0	2	top_h
decl	20:4	20:27	2	int	frame_top_v
op	20:20	0:0	2	=
water	20:22	0:0	2	top_v
decl	21:4	21:33	2	int	frame_bottom_h
op	21:23	0:0	2	=
water	21:25	0:0	2	bottom_h
decl	22:4	22:33	2	int	frame_bottom_v
op	22:23	0:0	2	=
water	22:25	0:0	2	bottom_v
decl	23:4	23:57	2	scte27_color_t	frame_color
op	23:31	0:0	2	=
water	23:33	0:0	2	scte27_color_transparent
if	24:4	35:4	2	(is_framed)
cond	24:8	24:8	3	is_framed
water	24:8	0:0	4	is_framed
stmts	24:19	35:4	3	
water	24:19	0:0	4	{
water	25:8	0:0	4	frame_top_h
op	25:20	0:0	4	=
call	25:22	25:37	4	bs_read
arg	25:30	25:33	5	&bs
op	25:30	0:0	6	&
water	25:31	0:0	6	bs
arg	25:35	25:37	5	12
water	25:35	0:0	6	12
water	25:38	0:0	4	;
water	26:8	0:0	4	frame_top_v
op	26:20	0:0	4	=
call	26:22	26:37	4	bs_read
arg	26:30	26:33	5	&bs
op	26:30	0:0	6	&
water	26:31	0:0	6	bs
arg	26:35	26:37	5	12
water	26:35	0:0	6	12
water	26:38	0:0	4	;
water	27:8	0:0	4	frame_bottom_h
op	27:23	0:0	4	=
call	27:25	27:40	4	bs_read
arg	27:33	27:36	5	&bs
op	27:33	0:0	6	&
water	27:34	0:0	6	bs
arg	27:38	27:40	5	12
water	27:38	0:0	6	12
water	27:41	0:0	4	;
water	28:8	0:0	4	frame_bottom_v
op	28:23	0:0	4	=
call	28:25	28:40	4	bs_read
arg	28:33	28:36	5	&bs
op	28:33	0:0	6	&
water	28:34	0:0	6	bs
arg	28:38	28:40	5	12
water	28:38	0:0	6	12
water	28:41	0:0	4	;
water	29:8	0:0	4	frame_color
op	29:20	0:0	4	=
call	29:22	29:39	4	bs_read_color
arg	29:36	29:39	5	&bs
op	29:36	0:0	6	&
water	29:37	0:0	6	bs
water	29:40	0:0	4	;
if	30:8	34:23	4	(frame_top_h > top_h || frame_top_v > top_v || frame_bottom_h < bottom_h || frame_bottom_v < bottom_v)
cond	30:12	33:29	5	frame_top_h > top_h || frame_top_v > top_v || frame_bottom_h < bottom_h || frame_bottom_v < bottom_v
water	30:12	0:0	6	frame_top_h
op	30:24	0:0	6	>
water	30:26	0:0	6	top_h
op	30:32	0:0	6	||
water	31:12	0:0	6	frame_top_v
op	31:24	0:0	6	>
water	31:26	0:0	6	top_v
op	31:32	0:0	6	||
water	32:12	0:0	6	frame_bottom_h
op	32:27	0:0	6	<
water	32:29	0:0	6	bottom_h
op	32:38	0:0	6	||
water	33:12	0:0	6	frame_bottom_v
op	33:27	0:0	6	<
water	33:29	0:0	6	bottom_v
stmts	34:12	34:23	5	
return	34:12	34:23	6	NULL
water	34:19	0:0	7	NULL
water	35:4	0:0	4	}
decl	36:4	36:29	2	int	outline_thickness
op	36:26	0:0	2	=
water	36:28	0:0	2	0
decl	37:4	37:59	2	scte27_color_t	outline_color
op	37:33	0:0	2	=
water	37:35	0:0	2	scte27_color_transparent
decl	38:4	38:24	2	int	shadow_right
op	38:21	0:0	2	=
water	38:23	0:0	2	0
decl	39:4	39:25	2	int	shadow_bottom
op	39:22	0:0	2	=
water	39:24	0:0	2	0
decl	40:4	40:58	2	scte27_color_t	shadow_color
op	40:32	0:0	2	=
water	40:34	0:0	2	scte27_color_transparent
if	41:4	45:4	2	(outline_style == 1)
cond	41:8	41:25	3	outline_style == 1
water	41:8	0:0	4	outline_style
op	41:22	0:0	4	==
water	41:25	0:0	4	1
stmts	41:28	45:4	3	
water	41:28	0:0	4	{
call	42:8	42:22	4	bs_skip
arg	42:16	42:19	5	&bs
op	42:16	0:0	6	&
water	42:17	0:0	6	bs
arg	42:21	42:22	5	4
water	42:21	0:0	6	4
water	42:23	0:0	4	;
water	43:8	0:0	4	outline_thickness
op	43:26	0:0	4	=
call	43:28	43:42	4	bs_read
arg	43:36	43:39	5	&bs
op	43:36	0:0	6	&
water	43:37	0:0	6	bs
arg	43:41	43:42	5	4
water	43:41	0:0	6	4
water	43:43	0:0	4	;
water	44:8	0:0	4	outline_color
op	44:22	0:0	4	=
call	44:24	44:41	4	bs_read_color
arg	44:38	44:41	5	&bs
op	44:38	0:0	6	&
water	44:39	0:0	6	bs
water	44:42	0:0	4	;
water	45:4	0:0	4	}
else	45:6	49:4	2
stmts	45:11	49:4	3	
if	45:11	49:4	4	(outline_style == 2)
cond	45:15	45:32	5	outline_style == 2
water	45:15	0:0	6	outline_style
op	45:29	0:0	6	==
water	45:32	0:0	6	2
stmts	45:35	49:4	5	
water	45:35	0:0	6	{
water	46:8	0:0	6	shadow_right
op	46:21	0:0	6	=
call	46:23	46:37	6	bs_read
arg	46:31	46:34	7	&bs
op	46:31	0:0	8	&
water	46:32	0:0	8	bs
arg	46:36	46:37	7	4
water	46:36	0:0	8	4
water	46:38	0:0	6	;
water	47:8	0:0	6	shadow_bottom
op	47:22	0:0	6	=
call	47:24	47:38	6	bs_read
arg	47:32	47:35	7	&bs
op	47:32	0:0	8	&
water	47:33	0:0	8	bs
arg	47:37	47:38	7	4
water	47:37	0:0	8	4
water	47:39	0:0	6	;
water	48:8	0:0	6	shadow_color
op	48:21	0:0	6	=
call	48:23	48:40	6	bs_read_color
arg	48:37	48:40	7	&bs
op	48:37	0:0	8	&
water	48:38	0:0	8	bs
water	48:41	0:0	6	;
water	49:4	0:0	6	}
else	49:6	51:4	2
stmts	49:11	51:4	3	
if	49:11	51:4	4	(outline_style == 3)
cond	49:15	49:32	5	outline_style == 3
water	49:15	0:0	6	outline_style
op	49:29	0:0	6	==
water	49:32	0:0	6	3
stmts	49:35	51:4	5	
water	49:35	0:0	6	{
call	50:8	50:23	6	bs_skip
arg	50:16	50:19	7	&bs
op	50:16	0:0	8	&
water	50:17	0:0	8	bs
arg	50:21	50:23	7	24
water	50:21	0:0	8	24
water	50:24	0:0	6	;
water	51:4	0:0	6	}
call	52:4	52:19	2	bs_skip
arg	52:12	52:15	3	&bs
op	52:12	0:0	4	&
water	52:13	0:0	4	bs
arg	52:17	52:19	3	16
water	52:17	0:0	4	16
water	52:20	0:0	2	;
decl	53:4	53:35	2	int	bitmap_h
op	53:17	0:0	2	=
water	53:19	0:0	2	bottom_h
op	53:28	0:0	2	-
water	53:30	0:0	2	top_h
decl	54:4	54:35	2	int	bitmap_v
op	54:17	0:0	2	=
water	54:19	0:0	2	bottom_v
op	54:28	0:0	2	-
water	54:30	0:0	2	top_v
decl	55:4	55:41	2	int	bitmap_size
op	55:20	0:0	2	=
water	55:22	0:0	2	bitmap_h
op	55:31	0:0	2	*
water	55:33	0:0	2	bitmap_v
decl	56:4	56:56	2	bool	*bitmap
op	56:17	0:0	2	=
call	56:19	56:55	3	malloc
arg	56:26	56:55	4	bitmap_size*sizeof(*bitmap)
water	56:26	0:0	5	bitmap_size
op	56:38	0:0	5	*
op	56:40	0:0	5	sizeof
water	56:46	0:0	5	(
op	56:47	0:0	5	*
water	56:48	0:0	5	bitmap
water	56:54	0:0	5	)
if	57:4	58:19	2	(! bitmap)
cond	57:8	57:9	3	! bitmap
op	57:8	0:0	4	!
water	57:9	0:0	4	bitmap
stmts	58:8	58:19	3	
return	58:8	58:19	4	NULL
water	58:15	0:0	5	NULL
for	59:4	100:4	2	( int position = 0 ;position < bitmap_size;)
forinit	0:0	59:25	3	 int position = 0 ;
decl	59:9	59:25	4	int	position
op	59:22	0:0	4	=
water	59:24	0:0	4	0
cond	59:27	59:38	3	position < bitmap_size
water	59:27	0:0	4	position
op	59:36	0:0	4	<
water	59:38	0:0	4	bitmap_size
forexpr	0:0	0:0	3	
stmts	59:52	100:4	3	
water	59:52	0:0	4	{
if	60:8	64:8	4	(bs_eof (& bs ))
cond	60:12	60:22	5	bs_eof (& bs )
call	60:12	60:22	6	bs_eof
arg	60:19	60:22	7	&bs
op	60:19	0:0	8	&
water	60:20	0:0	8	bs
stmts	60:25	64:8	5	
water	60:25	0:0	6	{
for	61:12	62:40	6	(;position < bitmap_size;position ++)
forinit	61:17	61:17	7	;
water	61:17	0:0	8	;
cond	61:19	61:30	7	position < bitmap_size
water	61:19	0:0	8	position
op	61:28	0:0	8	<
water	61:30	0:0	8	bitmap_size
forexpr	61:43	61:51	7	position ++
water	61:43	0:0	8	position
op	61:51	0:0	8	++
stmts	62:16	62:40	7	
water	62:16	0:0	8	bitmap
op	62:22	0:0	8	[
water	62:23	0:0	8	position
op	62:31	0:0	8	]
op	62:33	0:0	8	=
water	62:35	0:0	8	false
water	62:40	0:0	8	;
break	63:12	63:17	6	
water	64:8	0:0	6	}
decl	65:8	65:29	4	int	run_on_length
op	65:26	0:0	4	=
water	65:28	0:0	4	0
decl	66:8	66:30	4	int	run_off_length
op	66:27	0:0	4	=
water	66:29	0:0	4	0
if	67:8	82:8	4	(!bs_read1 (& bs ))
cond	67:12	67:25	5	!bs_read1 (& bs )
op	67:12	0:0	6	!
call	67:13	67:25	6	bs_read1
arg	67:22	67:25	7	&bs
op	67:22	0:0	8	&
water	67:23	0:0	8	bs
stmts	67:28	82:8	5	
water	67:28	0:0	6	{
if	68:12	79:12	6	(!bs_read1 (& bs ))
cond	68:16	68:29	7	!bs_read1 (& bs )
op	68:16	0:0	8	!
call	68:17	68:29	8	bs_read1
arg	68:26	68:29	9	&bs
op	68:26	0:0	10	&
water	68:27	0:0	10	bs
stmts	68:32	79:12	7	
water	68:32	0:0	8	{
if	69:16	76:16	8	(!bs_read1 (& bs ))
cond	69:20	69:33	9	!bs_read1 (& bs )
op	69:20	0:0	10	!
call	69:21	69:33	10	bs_read1
arg	69:30	69:33	11	&bs
op	69:30	0:0	12	&
water	69:31	0:0	12	bs
stmts	69:36	76:16	9	
water	69:36	0:0	10	{
if	70:20	75:20	10	(bs_read (& bs ,2 ) == 1)
cond	70:24	70:43	11	bs_read (& bs ,2 ) == 1
call	70:24	70:38	12	bs_read
arg	70:32	70:35	13	&bs
op	70:32	0:0	14	&
water	70:33	0:0	14	bs
arg	70:37	70:38	13	2
water	70:37	0:0	14	2
op	70:40	0:0	12	==
water	70:43	0:0	12	1
stmts	70:46	75:20	11	
water	70:46	0:0	12	{
decl	71:24	72:53	12	int	next
op	71:33	0:0	12	=
call	71:35	72:52	13	__MIN
arg	71:41	71:77	14	(position/bitmap_h+1)*bitmap_h
water	71:41	0:0	15	(
water	71:42	0:0	15	position
op	71:51	0:0	15	/
water	71:53	0:0	15	bitmap_h
op	71:62	0:0	15	+
water	71:64	0:0	15	1
water	71:65	0:0	15	)
op	71:67	0:0	15	*
water	71:69	0:0	15	bitmap_h
arg	72:41	72:52	14	bitmap_size
water	72:41	0:0	15	bitmap_size
for	73:24	74:52	12	(;position < next;position ++)
forinit	73:29	73:29	13	;
water	73:29	0:0	14	;
cond	73:31	73:42	13	position < next
water	73:31	0:0	14	position
op	73:40	0:0	14	<
water	73:42	0:0	14	next
forexpr	73:48	73:56	13	position ++
water	73:48	0:0	14	position
op	73:56	0:0	14	++
stmts	74:28	74:52	13	
water	74:28	0:0	14	bitmap
op	74:34	0:0	14	[
water	74:35	0:0	14	position
op	74:43	0:0	14	]
op	74:45	0:0	14	=
water	74:47	0:0	14	false
water	74:52	0:0	14	;
water	75:20	0:0	12	}
water	76:16	0:0	10	}
else	76:18	78:16	8
stmts	76:23	78:16	9	
water	76:23	0:0	10	{
water	77:20	0:0	10	run_on_length
op	77:34	0:0	10	=
water	77:36	0:0	10	4
water	77:37	0:0	10	;
water	78:16	0:0	10	}
water	79:12	0:0	8	}
else	79:14	81:12	6
stmts	79:19	81:12	7	
water	79:19	0:0	8	{
water	80:16	0:0	8	run_off_length
op	80:31	0:0	8	=
water	80:33	0:0	8	6
water	80:34	0:0	8	;
water	81:12	0:0	8	}
water	82:8	0:0	6	}
else	82:10	85:8	4
stmts	82:15	85:8	5	
water	82:15	0:0	6	{
water	83:12	0:0	6	run_on_length
op	83:26	0:0	6	=
water	83:28	0:0	6	3
water	83:29	0:0	6	;
water	84:12	0:0	6	run_off_length
op	84:27	0:0	6	=
water	84:29	0:0	6	5
water	84:30	0:0	6	;
water	85:8	0:0	6	}
if	86:8	92:8	4	(run_on_length > 0)
cond	86:12	86:28	5	run_on_length > 0
water	86:12	0:0	6	run_on_length
op	86:26	0:0	6	>
water	86:28	0:0	6	0
stmts	86:31	92:8	5	
water	86:31	0:0	6	{
decl	87:12	87:49	6	int	run
op	87:20	0:0	6	=
call	87:22	87:48	7	bs_read
arg	87:30	87:33	8	&bs
op	87:30	0:0	9	&
water	87:31	0:0	9	bs
arg	87:35	87:48	8	run_on_length
water	87:35	0:0	9	run_on_length
if	88:12	89:40	6	(! run)
cond	88:16	88:17	7	! run
op	88:16	0:0	8	!
water	88:17	0:0	8	run
stmts	89:16	89:40	7	
water	89:16	0:0	8	run
op	89:20	0:0	8	=
water	89:22	0:0	8	1
op	89:24	0:0	8	<<
water	89:27	0:0	8	run_on_length
water	89:40	0:0	8	;
for	90:12	91:39	6	(;position < bitmap_size && run > 0;position ++ , run --)
forinit	90:17	90:17	7	;
water	90:17	0:0	8	;
cond	90:19	90:51	7	position < bitmap_size && run > 0
water	90:19	0:0	8	position
op	90:28	0:0	8	<
water	90:30	0:0	8	bitmap_size
op	90:42	0:0	8	&&
water	90:45	0:0	8	run
op	90:49	0:0	8	>
water	90:51	0:0	8	0
forexpr	90:54	90:69	7	position ++ , run --
water	90:54	0:0	8	position
op	90:62	0:0	8	++
water	90:64	0:0	8	,
water	90:66	0:0	8	run
op	90:69	0:0	8	--
stmts	91:16	91:39	7	
water	91:16	0:0	8	bitmap
op	91:22	0:0	8	[
water	91:23	0:0	8	position
op	91:31	0:0	8	]
op	91:33	0:0	8	=
water	91:35	0:0	8	true
water	91:39	0:0	8	;
water	92:8	0:0	6	}
if	93:8	99:8	4	(run_off_length > 0)
cond	93:12	93:29	5	run_off_length > 0
water	93:12	0:0	6	run_off_length
op	93:27	0:0	6	>
water	93:29	0:0	6	0
stmts	93:32	99:8	5	
water	93:32	0:0	6	{
decl	94:12	94:50	6	int	run
op	94:20	0:0	6	=
call	94:22	94:49	7	bs_read
arg	94:30	94:33	8	&bs
op	94:30	0:0	9	&
water	94:31	0:0	9	bs
arg	94:35	94:49	8	run_off_length
water	94:35	0:0	9	run_off_length
if	95:12	96:41	6	(! run)
cond	95:16	95:17	7	! run
op	95:16	0:0	8	!
water	95:17	0:0	8	run
stmts	96:16	96:41	7	
water	96:16	0:0	8	run
op	96:20	0:0	8	=
water	96:22	0:0	8	1
op	96:24	0:0	8	<<
water	96:27	0:0	8	run_off_length
water	96:41	0:0	8	;
for	97:12	98:40	6	(;position < bitmap_size && run > 0;position ++ , run --)
forinit	97:17	97:17	7	;
water	97:17	0:0	8	;
cond	97:19	97:51	7	position < bitmap_size && run > 0
water	97:19	0:0	8	position
op	97:28	0:0	8	<
water	97:30	0:0	8	bitmap_size
op	97:42	0:0	8	&&
water	97:45	0:0	8	run
op	97:49	0:0	8	>
water	97:51	0:0	8	0
forexpr	97:54	97:69	7	position ++ , run --
water	97:54	0:0	8	position
op	97:62	0:0	8	++
water	97:64	0:0	8	,
water	97:66	0:0	8	run
op	97:69	0:0	8	--
stmts	98:16	98:40	7	
water	98:16	0:0	8	bitmap
op	98:22	0:0	8	[
water	98:23	0:0	8	position
op	98:31	0:0	8	]
op	98:33	0:0	8	=
water	98:35	0:0	8	false
water	98:40	0:0	8	;
water	99:8	0:0	6	}
water	100:4	0:0	4	}
decl	105:4	105:20	2	int	margin_h
op	105:17	0:0	2	=
water	105:19	0:0	2	0
decl	106:4	106:20	2	int	margin_v
op	106:17	0:0	2	=
water	106:19	0:0	2	0
if	107:4	110:4	2	(outline_style == 1)
cond	107:8	107:25	3	outline_style == 1
water	107:8	0:0	4	outline_style
op	107:22	0:0	4	==
water	107:25	0:0	4	1
stmts	107:28	110:4	3	
water	107:28	0:0	4	{
water	108:8	0:0	4	margin_h
op	108:17	0:0	4	=
water	109:8	0:0	4	margin_v
op	109:17	0:0	4	=
water	109:19	0:0	4	outline_thickness
water	109:36	0:0	4	;
water	110:4	0:0	4	}
else	110:6	113:4	2
stmts	110:11	113:4	3	
if	110:11	113:4	4	(outline_style == 2)
cond	110:15	110:32	5	outline_style == 2
water	110:15	0:0	6	outline_style
op	110:29	0:0	6	==
water	110:32	0:0	6	2
stmts	110:35	113:4	5	
water	110:35	0:0	6	{
water	111:8	0:0	6	margin_h
op	111:17	0:0	6	=
water	111:19	0:0	6	shadow_right
water	111:31	0:0	6	;
water	112:8	0:0	6	margin_v
op	112:17	0:0	6	=
water	112:19	0:0	6	shadow_bottom
water	112:32	0:0	6	;
water	113:4	0:0	6	}
water	114:4	0:0	2	frame_top_h
op	114:16	0:0	2	-=
water	114:19	0:0	2	margin_h
water	114:27	0:0	2	;
water	115:4	0:0	2	frame_top_v
op	115:16	0:0	2	-=
water	115:19	0:0	2	margin_v
water	115:27	0:0	2	;
water	116:4	0:0	2	frame_bottom_h
op	116:19	0:0	2	+=
water	116:22	0:0	2	margin_h
water	116:30	0:0	2	;
water	117:4	0:0	2	frame_bottom_v
op	117:19	0:0	2	+=
water	117:22	0:0	2	margin_v
water	117:30	0:0	2	;
decl	118:4	118:52	2	const int	frame_h
op	118:22	0:0	2	=
water	118:24	0:0	2	frame_bottom_h
op	118:39	0:0	2	-
water	118:41	0:0	2	frame_top_h
decl	119:4	119:52	2	const int	frame_v
op	119:22	0:0	2	=
water	119:24	0:0	2	frame_bottom_v
op	119:39	0:0	2	-
water	119:41	0:0	2	frame_top_v
decl	120:4	120:45	2	const int	bitmap_oh
op	120:24	0:0	2	=
water	120:26	0:0	2	top_h
op	120:32	0:0	2	-
water	120:34	0:0	2	frame_top_h
decl	121:4	121:45	2	const int	bitmap_ov
op	121:24	0:0	2	=
water	121:26	0:0	2	top_v
op	121:32	0:0	2	-
water	121:34	0:0	2	frame_top_v
enum	122:4	127:4	2	<anonymous_122:4>
water	123:8	0:0	3	COLOR_FRAME
water	123:19	0:0	3	,
water	124:8	0:0	3	COLOR_CHARACTER
water	124:23	0:0	3	,
water	125:8	0:0	3	COLOR_OUTLINE
water	125:21	0:0	3	,
water	126:8	0:0	3	COLOR_SHADOW
water	126:20	0:0	3	,
decl	128:4	156:5	2	video_palette_t	palette
op	128:28	0:0	2	=
water	128:30	0:0	2	{
op	129:8	0:0	2	.
water	129:9	0:0	2	i_entries
op	129:19	0:0	2	=
water	129:21	0:0	2	4
water	129:22	0:0	2	,
op	130:8	0:0	2	.
water	130:9	0:0	2	palette
op	130:17	0:0	2	=
water	130:19	0:0	2	{
op	131:12	0:0	2	[
water	131:13	0:0	2	COLOR_FRAME
op	131:24	0:0	2	]
op	131:26	0:0	2	=
water	131:28	0:0	2	{
water	132:16	0:0	2	frame_color
op	132:27	0:0	2	.
water	132:28	0:0	2	y
water	132:29	0:0	2	,
water	133:16	0:0	2	frame_color
op	133:27	0:0	2	.
water	133:28	0:0	2	u
water	133:29	0:0	2	,
water	134:16	0:0	2	frame_color
op	134:27	0:0	2	.
water	134:28	0:0	2	v
water	134:29	0:0	2	,
water	135:16	0:0	2	frame_color
op	135:27	0:0	2	.
water	135:28	0:0	2	alpha
water	136:12	0:0	2	}
water	136:13	0:0	2	,
op	137:12	0:0	2	[
water	137:13	0:0	2	COLOR_CHARACTER
op	137:28	0:0	2	]
op	137:30	0:0	2	=
water	137:32	0:0	2	{
water	138:16	0:0	2	character_color
op	138:31	0:0	2	.
water	138:32	0:0	2	y
water	138:33	0:0	2	,
water	139:16	0:0	2	character_color
op	139:31	0:0	2	.
water	139:32	0:0	2	u
water	139:33	0:0	2	,
water	140:16	0:0	2	character_color
op	140:31	0:0	2	.
water	140:32	0:0	2	v
water	140:33	0:0	2	,
water	141:16	0:0	2	character_color
op	141:31	0:0	2	.
water	141:32	0:0	2	alpha
water	142:12	0:0	2	}
water	142:13	0:0	2	,
op	143:12	0:0	2	[
water	143:13	0:0	2	COLOR_OUTLINE
op	143:26	0:0	2	]
op	143:28	0:0	2	=
water	143:30	0:0	2	{
water	144:16	0:0	2	outline_color
op	144:29	0:0	2	.
water	144:30	0:0	2	y
water	144:31	0:0	2	,
water	145:16	0:0	2	outline_color
op	145:29	0:0	2	.
water	145:30	0:0	2	u
water	145:31	0:0	2	,
water	146:16	0:0	2	outline_color
op	146:29	0:0	2	.
water	146:30	0:0	2	v
water	146:31	0:0	2	,
water	147:16	0:0	2	outline_color
op	147:29	0:0	2	.
water	147:30	0:0	2	alpha
water	148:12	0:0	2	}
water	148:13	0:0	2	,
op	149:12	0:0	2	[
water	149:13	0:0	2	COLOR_SHADOW
op	149:25	0:0	2	]
op	149:27	0:0	2	=
water	149:29	0:0	2	{
water	150:16	0:0	2	shadow_color
op	150:28	0:0	2	.
water	150:29	0:0	2	y
water	150:30	0:0	2	,
water	151:16	0:0	2	shadow_color
op	151:28	0:0	2	.
water	151:29	0:0	2	u
water	151:30	0:0	2	,
water	152:16	0:0	2	shadow_color
op	152:28	0:0	2	.
water	152:29	0:0	2	v
water	152:30	0:0	2	,
water	153:16	0:0	2	shadow_color
op	153:28	0:0	2	.
water	153:29	0:0	2	alpha
water	154:12	0:0	2	}
water	154:13	0:0	2	,
water	155:8	0:0	2	}
water	155:9	0:0	2	,
water	156:4	0:0	2	}
decl	157:4	166:5	2	video_format_t	fmt
op	157:23	0:0	2	=
water	157:25	0:0	2	{
op	158:8	0:0	2	.
water	158:9	0:0	2	i_chroma
op	158:18	0:0	2	=
water	158:20	0:0	2	VLC_CODEC_YUVP
water	158:34	0:0	2	,
op	159:8	0:0	2	.
water	159:9	0:0	2	i_width
op	159:17	0:0	2	=
water	159:19	0:0	2	frame_h
water	159:26	0:0	2	,
op	160:8	0:0	2	.
water	160:9	0:0	2	i_visible_width
op	160:25	0:0	2	=
water	160:27	0:0	2	frame_h
water	160:34	0:0	2	,
op	161:8	0:0	2	.
water	161:9	0:0	2	i_height
op	161:18	0:0	2	=
water	161:20	0:0	2	frame_v
water	161:27	0:0	2	,
op	162:8	0:0	2	.
water	162:9	0:0	2	i_visible_height
op	162:26	0:0	2	=
water	162:28	0:0	2	frame_v
water	162:35	0:0	2	,
op	163:8	0:0	2	.
water	163:9	0:0	2	i_sar_num
op	163:19	0:0	2	=
water	163:21	0:0	2	0
water	163:22	0:0	2	,
op	164:8	0:0	2	.
water	164:9	0:0	2	i_sar_den
op	164:19	0:0	2	=
water	164:21	0:0	2	1
water	164:22	0:0	2	,
op	165:8	0:0	2	.
water	165:9	0:0	2	p_palette
op	165:19	0:0	2	=
op	165:21	0:0	2	&
water	165:22	0:0	2	palette
water	165:29	0:0	2	,
water	166:4	0:0	2	}
decl	167:4	167:56	2	subpicture_region_t	*r
op	167:27	0:0	2	=
call	167:29	167:55	3	subpicture_region_New
arg	167:51	167:55	4	&fmt
op	167:51	0:0	5	&
water	167:52	0:0	5	fmt
if	168:4	171:4	2	(! r)
cond	168:8	168:9	3	! r
op	168:8	0:0	4	!
water	168:9	0:0	4	r
stmts	168:12	171:4	3	
water	168:12	0:0	4	{
call	169:8	169:19	4	free
arg	169:13	169:19	5	bitmap
water	169:13	0:0	6	bitmap
water	169:20	0:0	4	;
return	170:8	170:19	4	NULL
water	170:15	0:0	5	NULL
water	171:4	0:0	4	}
water	172:4	0:0	2	r
op	172:5	0:0	2	->
water	172:7	0:0	2	i_x
op	172:11	0:0	2	=
water	172:13	0:0	2	frame_top_h
water	172:24	0:0	2	;
water	173:4	0:0	2	r
op	173:5	0:0	2	->
water	173:7	0:0	2	i_y
op	173:11	0:0	2	=
water	173:13	0:0	2	frame_top_v
water	173:24	0:0	2	;
for	175:4	178:23	2	( int y = 0 ;y < frame_v;y ++)
forinit	0:0	175:18	3	 int y = 0 ;
decl	175:9	175:18	4	int	y
op	175:15	0:0	4	=
water	175:17	0:0	4	0
cond	175:20	175:24	3	y < frame_v
water	175:20	0:0	4	y
op	175:22	0:0	4	<
water	175:24	0:0	4	frame_v
forexpr	175:33	175:34	3	y ++
water	175:33	0:0	4	y
op	175:34	0:0	4	++
stmts	176:8	178:23	3	
call	176:8	178:22	4	memset
arg	176:15	176:71	5	&r->p_picture->p->p_pixels[y*r->p_picture->p->i_pitch]
op	176:15	0:0	6	&
water	176:16	0:0	6	r
op	176:17	0:0	6	->
water	176:19	0:0	6	p_picture
op	176:28	0:0	6	->
water	176:30	0:0	6	p
op	176:31	0:0	6	->
water	176:33	0:0	6	p_pixels
op	176:41	0:0	6	[
water	176:42	0:0	6	y
op	176:44	0:0	6	*
water	176:46	0:0	6	r
op	176:47	0:0	6	->
water	176:49	0:0	6	p_picture
op	176:58	0:0	6	->
water	176:60	0:0	6	p
op	176:61	0:0	6	->
water	176:63	0:0	6	i_pitch
op	176:70	0:0	6	]
arg	177:15	177:26	5	COLOR_FRAME
water	177:15	0:0	6	COLOR_FRAME
arg	178:15	178:22	5	frame_h
water	178:15	0:0	6	frame_h
water	178:23	0:0	4	;
if	180:4	209:4	2	(outline_style == 1)
cond	180:8	180:25	3	outline_style == 1
water	180:8	0:0	4	outline_style
op	180:22	0:0	4	==
water	180:25	0:0	4	1
stmts	180:28	209:4	3	
water	180:28	0:0	4	{
water	183:8	0:0	4	bool
water	183:13	0:0	4	circle
op	183:19	0:0	4	[
water	183:20	0:0	4	16
op	183:22	0:0	4	]
op	183:23	0:0	4	[
water	183:24	0:0	4	16
op	183:26	0:0	4	]
water	183:27	0:0	4	;
for	184:8	188:8	4	( int dy = 0 ;dy <= 15;dy ++)
forinit	0:0	184:23	5	 int dy = 0 ;
decl	184:13	184:23	6	int	dy
op	184:20	0:0	6	=
water	184:22	0:0	6	0
cond	184:25	184:31	5	dy <= 15
water	184:25	0:0	6	dy
op	184:28	0:0	6	<=
water	184:31	0:0	6	15
forexpr	184:35	184:37	5	dy ++
water	184:35	0:0	6	dy
op	184:37	0:0	6	++
stmts	184:41	188:8	5	
water	184:41	0:0	6	{
for	185:12	187:91	6	( int dx = 0 ;dx <= 15;dx ++)
forinit	0:0	185:27	7	 int dx = 0 ;
decl	185:17	185:27	8	int	dx
op	185:24	0:0	8	=
water	185:26	0:0	8	0
cond	185:29	185:35	7	dx <= 15
water	185:29	0:0	8	dx
op	185:32	0:0	8	<=
water	185:35	0:0	8	15
forexpr	185:39	185:41	7	dx ++
water	185:39	0:0	8	dx
op	185:41	0:0	8	++
stmts	186:16	187:91	7	
water	186:16	0:0	8	circle
op	186:22	0:0	8	[
water	186:23	0:0	8	dy
op	186:25	0:0	8	]
op	186:26	0:0	8	[
water	186:27	0:0	8	dx
op	186:29	0:0	8	]
op	186:31	0:0	8	=
water	186:33	0:0	8	(
water	186:34	0:0	8	dx
op	186:37	0:0	8	>
water	186:39	0:0	8	0
op	186:41	0:0	8	||
water	186:44	0:0	8	dy
op	186:47	0:0	8	>
water	186:49	0:0	8	0
water	186:50	0:0	8	)
op	186:52	0:0	8	&&
water	187:33	0:0	8	dx
op	187:36	0:0	8	*
water	187:38	0:0	8	dx
op	187:41	0:0	8	+
water	187:43	0:0	8	dy
op	187:46	0:0	8	*
water	187:48	0:0	8	dy
op	187:51	0:0	8	<=
water	187:54	0:0	8	outline_thickness
op	187:72	0:0	8	*
water	187:74	0:0	8	outline_thickness
water	187:91	0:0	8	;
water	188:8	0:0	6	}
for	189:8	208:8	4	( int by = 0 ;by < bitmap_v;by ++)
forinit	0:0	189:23	5	 int by = 0 ;
decl	189:13	189:23	6	int	by
op	189:20	0:0	6	=
water	189:22	0:0	6	0
cond	189:25	189:30	5	by < bitmap_v
water	189:25	0:0	6	by
op	189:28	0:0	6	<
water	189:30	0:0	6	bitmap_v
forexpr	189:40	189:42	5	by ++
water	189:40	0:0	6	by
op	189:42	0:0	6	++
stmts	189:46	208:8	5	
water	189:46	0:0	6	{
for	190:12	207:12	6	( int bx = 0 ;bx < bitmap_h;bx ++)
forinit	0:0	190:27	7	 int bx = 0 ;
decl	190:17	190:27	8	int	bx
op	190:24	0:0	8	=
water	190:26	0:0	8	0
cond	190:29	190:34	7	bx < bitmap_h
water	190:29	0:0	8	bx
op	190:32	0:0	8	<
water	190:34	0:0	8	bitmap_h
forexpr	190:44	190:46	7	bx ++
water	190:44	0:0	8	bx
op	190:46	0:0	8	++
stmts	190:50	207:12	7	
water	190:50	0:0	8	{
if	191:16	192:28	8	(! bitmap [ by * bitmap_h + bx ])
cond	191:20	191:46	9	! bitmap [ by * bitmap_h + bx ]
op	191:20	0:0	10	!
water	191:21	0:0	10	bitmap
op	191:27	0:0	10	[
water	191:28	0:0	10	by
op	191:31	0:0	10	*
water	191:33	0:0	10	bitmap_h
op	191:42	0:0	10	+
water	191:44	0:0	10	bx
op	191:46	0:0	10	]
stmts	192:20	192:28	9	
continue	192:20	192:28	10	
for	193:16	206:16	8	( int dy = 0 ;dy <= outline_thickness;dy ++)
forinit	0:0	193:31	9	 int dy = 0 ;
decl	193:21	193:31	10	int	dy
op	193:28	0:0	10	=
water	193:30	0:0	10	0
cond	193:33	193:39	9	dy <= outline_thickness
water	193:33	0:0	10	dy
op	193:36	0:0	10	<=
water	193:39	0:0	10	outline_thickness
forexpr	193:58	193:60	9	dy ++
water	193:58	0:0	10	dy
op	193:60	0:0	10	++
stmts	193:64	206:16	9	
water	193:64	0:0	10	{
for	194:20	205:20	10	( int dx = 0 ;dx <= outline_thickness;dx ++)
forinit	0:0	194:35	11	 int dx = 0 ;
decl	194:25	194:35	12	int	dx
op	194:32	0:0	12	=
water	194:34	0:0	12	0
cond	194:37	194:43	11	dx <= outline_thickness
water	194:37	0:0	12	dx
op	194:40	0:0	12	<=
water	194:43	0:0	12	outline_thickness
forexpr	194:62	194:64	11	dx ++
water	194:62	0:0	12	dx
op	194:64	0:0	12	++
stmts	194:68	205:20	11	
water	194:68	0:0	12	{
if	195:24	204:24	12	(circle [ dy ] [ dx ])
cond	195:28	195:41	13	circle [ dy ] [ dx ]
water	195:28	0:0	14	circle
op	195:34	0:0	14	[
water	195:35	0:0	14	dy
op	195:37	0:0	14	]
op	195:38	0:0	14	[
water	195:39	0:0	14	dx
op	195:41	0:0	14	]
stmts	195:44	204:24	13	
water	195:44	0:0	14	{
call	196:28	197:96	14	SetYUVPPixel
arg	196:41	196:53	15	r->p_picture
water	196:41	0:0	16	r
op	196:42	0:0	16	->
water	196:44	0:0	16	p_picture
arg	197:41	197:60	15	bx+bitmap_oh+dx
water	197:41	0:0	16	bx
op	197:44	0:0	16	+
water	197:46	0:0	16	bitmap_oh
op	197:56	0:0	16	+
water	197:58	0:0	16	dx
arg	197:62	197:81	15	by+bitmap_ov+dy
water	197:62	0:0	16	by
op	197:65	0:0	16	+
water	197:67	0:0	16	bitmap_ov
op	197:77	0:0	16	+
water	197:79	0:0	16	dy
arg	197:83	197:96	15	COLOR_OUTLINE
water	197:83	0:0	16	COLOR_OUTLINE
water	197:97	0:0	14	;
call	198:28	199:96	14	SetYUVPPixel
arg	198:41	198:53	15	r->p_picture
water	198:41	0:0	16	r
op	198:42	0:0	16	->
water	198:44	0:0	16	p_picture
arg	199:41	199:60	15	bx+bitmap_oh-dx
water	199:41	0:0	16	bx
op	199:44	0:0	16	+
water	199:46	0:0	16	bitmap_oh
op	199:56	0:0	16	-
water	199:58	0:0	16	dx
arg	199:62	199:81	15	by+bitmap_ov+dy
water	199:62	0:0	16	by
op	199:65	0:0	16	+
water	199:67	0:0	16	bitmap_ov
op	199:77	0:0	16	+
water	199:79	0:0	16	dy
arg	199:83	199:96	15	COLOR_OUTLINE
water	199:83	0:0	16	COLOR_OUTLINE
water	199:97	0:0	14	;
call	200:28	201:96	14	SetYUVPPixel
arg	200:41	200:53	15	r->p_picture
water	200:41	0:0	16	r
op	200:42	0:0	16	->
water	200:44	0:0	16	p_picture
arg	201:41	201:60	15	bx+bitmap_oh+dx
water	201:41	0:0	16	bx
op	201:44	0:0	16	+
water	201:46	0:0	16	bitmap_oh
op	201:56	0:0	16	+
water	201:58	0:0	16	dx
arg	201:62	201:81	15	by+bitmap_ov-dy
water	201:62	0:0	16	by
op	201:65	0:0	16	+
water	201:67	0:0	16	bitmap_ov
op	201:77	0:0	16	-
water	201:79	0:0	16	dy
arg	201:83	201:96	15	COLOR_OUTLINE
water	201:83	0:0	16	COLOR_OUTLINE
water	201:97	0:0	14	;
call	202:28	203:96	14	SetYUVPPixel
arg	202:41	202:53	15	r->p_picture
water	202:41	0:0	16	r
op	202:42	0:0	16	->
water	202:44	0:0	16	p_picture
arg	203:41	203:60	15	bx+bitmap_oh-dx
water	203:41	0:0	16	bx
op	203:44	0:0	16	+
water	203:46	0:0	16	bitmap_oh
op	203:56	0:0	16	-
water	203:58	0:0	16	dx
arg	203:62	203:81	15	by+bitmap_ov-dy
water	203:62	0:0	16	by
op	203:65	0:0	16	+
water	203:67	0:0	16	bitmap_ov
op	203:77	0:0	16	-
water	203:79	0:0	16	dy
arg	203:83	203:96	15	COLOR_OUTLINE
water	203:83	0:0	16	COLOR_OUTLINE
water	203:97	0:0	14	;
water	204:24	0:0	14	}
water	205:20	0:0	12	}
water	206:16	0:0	10	}
water	207:12	0:0	8	}
water	208:8	0:0	6	}
water	209:4	0:0	4	}
else	209:6	220:4	2
stmts	209:11	220:4	3	
if	209:11	220:4	4	(outline_style == 2)
cond	209:15	209:32	5	outline_style == 2
water	209:15	0:0	6	outline_style
op	209:29	0:0	6	==
water	209:32	0:0	6	2
stmts	209:35	220:4	5	
water	209:35	0:0	6	{
for	211:8	219:8	6	( int by = 0 ;by < bitmap_v;by ++)
forinit	0:0	211:23	7	 int by = 0 ;
decl	211:13	211:23	8	int	by
op	211:20	0:0	8	=
water	211:22	0:0	8	0
cond	211:25	211:30	7	by < bitmap_v
water	211:25	0:0	8	by
op	211:28	0:0	8	<
water	211:30	0:0	8	bitmap_v
forexpr	211:40	211:42	7	by ++
water	211:40	0:0	8	by
op	211:42	0:0	8	++
stmts	211:46	219:8	7	
water	211:46	0:0	8	{
for	212:12	218:12	8	( int bx = 0 ;bx < bitmap_h;bx ++)
forinit	0:0	212:27	9	 int bx = 0 ;
decl	212:17	212:27	10	int	bx
op	212:24	0:0	10	=
water	212:26	0:0	10	0
cond	212:29	212:34	9	bx < bitmap_h
water	212:29	0:0	10	bx
op	212:32	0:0	10	<
water	212:34	0:0	10	bitmap_h
forexpr	212:44	212:46	9	bx ++
water	212:44	0:0	10	bx
op	212:46	0:0	10	++
stmts	212:50	218:12	9	
water	212:50	0:0	10	{
if	213:16	217:46	10	(bitmap [ by * bitmap_h + bx ])
cond	213:20	213:45	11	bitmap [ by * bitmap_h + bx ]
water	213:20	0:0	12	bitmap
op	213:26	0:0	12	[
water	213:27	0:0	12	by
op	213:30	0:0	12	*
water	213:32	0:0	12	bitmap_h
op	213:41	0:0	12	+
water	213:43	0:0	12	bx
op	213:45	0:0	12	]
stmts	214:20	217:46	11	
call	214:20	217:45	12	SetYUVPPixel
arg	214:33	214:45	13	r->p_picture
water	214:33	0:0	14	r
op	214:34	0:0	14	->
water	214:36	0:0	14	p_picture
arg	215:33	215:62	13	bx+bitmap_oh+shadow_right
water	215:33	0:0	14	bx
op	215:36	0:0	14	+
water	215:38	0:0	14	bitmap_oh
op	215:48	0:0	14	+
water	215:50	0:0	14	shadow_right
arg	216:33	216:63	13	by+bitmap_ov+shadow_bottom
water	216:33	0:0	14	by
op	216:36	0:0	14	+
water	216:38	0:0	14	bitmap_ov
op	216:48	0:0	14	+
water	216:50	0:0	14	shadow_bottom
arg	217:33	217:45	13	COLOR_SHADOW
water	217:33	0:0	14	COLOR_SHADOW
water	217:46	0:0	12	;
water	218:12	0:0	10	}
water	219:8	0:0	8	}
water	220:4	0:0	6	}
for	222:4	228:4	2	( int by = 0 ;by < bitmap_v;by ++)
forinit	0:0	222:19	3	 int by = 0 ;
decl	222:9	222:19	4	int	by
op	222:16	0:0	4	=
water	222:18	0:0	4	0
cond	222:21	222:26	3	by < bitmap_v
water	222:21	0:0	4	by
op	222:24	0:0	4	<
water	222:26	0:0	4	bitmap_v
forexpr	222:36	222:38	3	by ++
water	222:36	0:0	4	by
op	222:38	0:0	4	++
stmts	222:42	228:4	3	
water	222:42	0:0	4	{
for	223:8	227:8	4	( int bx = 0 ;bx < bitmap_h;bx ++)
forinit	0:0	223:23	5	 int bx = 0 ;
decl	223:13	223:23	6	int	bx
op	223:20	0:0	6	=
water	223:22	0:0	6	0
cond	223:25	223:30	5	bx < bitmap_h
water	223:25	0:0	6	bx
op	223:28	0:0	6	<
water	223:30	0:0	6	bitmap_h
forexpr	223:40	223:42	5	bx ++
water	223:40	0:0	6	bx
op	223:42	0:0	6	++
stmts	223:46	227:8	5	
water	223:46	0:0	6	{
if	224:12	226:77	6	(bitmap [ by * bitmap_h + bx ])
cond	224:16	224:41	7	bitmap [ by * bitmap_h + bx ]
water	224:16	0:0	8	bitmap
op	224:22	0:0	8	[
water	224:23	0:0	8	by
op	224:26	0:0	8	*
water	224:28	0:0	8	bitmap_h
op	224:37	0:0	8	+
water	224:39	0:0	8	bx
op	224:41	0:0	8	]
stmts	225:16	226:77	7	
call	225:16	226:76	8	SetYUVPPixel
arg	225:29	225:41	9	r->p_picture
water	225:29	0:0	10	r
op	225:30	0:0	10	->
water	225:32	0:0	10	p_picture
arg	226:29	226:43	9	bx+bitmap_oh
water	226:29	0:0	10	bx
op	226:32	0:0	10	+
water	226:34	0:0	10	bitmap_oh
arg	226:45	226:59	9	by+bitmap_ov
water	226:45	0:0	10	by
op	226:48	0:0	10	+
water	226:50	0:0	10	bitmap_ov
arg	226:61	226:76	9	COLOR_CHARACTER
water	226:61	0:0	10	COLOR_CHARACTER
water	226:77	0:0	8	;
water	227:8	0:0	6	}
water	228:4	0:0	4	}
call	229:4	229:15	2	free
arg	229:9	229:15	3	bitmap
water	229:9	0:0	4	bitmap
water	229:16	0:0	2	;
return	230:4	230:12	2	r
water	230:11	0:0	3	r

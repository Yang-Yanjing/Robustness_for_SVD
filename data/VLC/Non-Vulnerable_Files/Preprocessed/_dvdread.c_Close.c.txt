func	2:0	26:0	0	static void	Close
params	2:17	0:0	1	
param	2:19	2:40	2	vlc_object_t *	p_this
stmnts	0:0	25:17	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:39	2	demux_sys_t	*p_sys
op	5:23	0:0	2	=
water	5:25	0:0	2	p_demux
op	5:32	0:0	2	->
water	5:34	0:0	2	p_sys
decl	6:4	6:9	2	int	i
for	7:4	15:4	2	(i = 0 ;i < PS_TK_COUNT;i ++)
forinit	7:9	7:14	3	i = 0 ;
water	7:9	0:0	4	i
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	i < PS_TK_COUNT
water	7:16	0:0	4	i
op	7:18	0:0	4	<
water	7:20	0:0	4	PS_TK_COUNT
forexpr	7:33	7:34	3	i ++
water	7:33	0:0	4	i
op	7:34	0:0	4	++
stmts	8:4	15:4	3	
water	8:4	0:0	4	{
decl	9:8	9:38	4	ps_track_t	*tk
op	9:23	0:0	4	=
op	9:25	0:0	4	&
water	9:26	0:0	4	p_sys
op	9:31	0:0	4	->
water	9:33	0:0	4	tk
op	9:35	0:0	4	[
water	9:36	0:0	4	i
op	9:37	0:0	4	]
if	10:8	14:8	4	(tk -> b_seen)
cond	10:12	10:16	5	tk -> b_seen
water	10:12	0:0	6	tk
op	10:14	0:0	6	->
water	10:16	0:0	6	b_seen
stmts	11:8	14:8	5	
water	11:8	0:0	6	{
call	12:12	12:38	6	es_format_Clean
arg	12:29	12:38	7	&tk->fmt
op	12:29	0:0	8	&
water	12:30	0:0	8	tk
op	12:32	0:0	8	->
water	12:34	0:0	8	fmt
water	12:39	0:0	6	;
if	13:12	13:59	6	(tk -> es)
cond	13:16	13:20	7	tk -> es
water	13:16	0:0	8	tk
op	13:18	0:0	8	->
water	13:20	0:0	8	es
stmts	13:25	13:59	7	
call	13:25	13:58	8	es_out_Del
arg	13:37	13:49	9	p_demux->out
water	13:37	0:0	10	p_demux
op	13:44	0:0	10	->
water	13:46	0:0	10	out
arg	13:51	13:58	9	tk->es
water	13:51	0:0	10	tk
op	13:53	0:0	10	->
water	13:55	0:0	10	es
water	13:59	0:0	8	;
water	14:8	0:0	6	}
water	15:4	0:0	4	}
for	17:4	18:50	2	( int i = 0 ;i < p_sys -> i_titles;i ++)
forinit	0:0	17:18	3	 int i = 0 ;
decl	17:9	17:18	4	int	i
op	17:15	0:0	4	=
water	17:17	0:0	4	0
cond	17:20	17:31	3	i < p_sys -> i_titles
water	17:20	0:0	4	i
op	17:22	0:0	4	<
water	17:24	0:0	4	p_sys
op	17:29	0:0	4	->
water	17:31	0:0	4	i_titles
forexpr	17:41	17:42	3	i ++
water	17:41	0:0	4	i
op	17:42	0:0	4	++
stmts	18:8	18:50	3	
call	18:8	18:49	4	vlc_input_title_Delete
arg	18:32	18:49	5	p_sys->titles[i]
water	18:32	0:0	6	p_sys
op	18:37	0:0	6	->
water	18:39	0:0	6	titles
op	18:45	0:0	6	[
water	18:46	0:0	6	i
op	18:47	0:0	6	]
water	18:50	0:0	4	;
call	19:4	19:46	2	TAB_CLEAN
arg	19:15	19:30	3	p_sys->i_titles
water	19:15	0:0	4	p_sys
op	19:20	0:0	4	->
water	19:22	0:0	4	i_titles
arg	19:32	19:46	3	p_sys->titles
water	19:32	0:0	4	p_sys
op	19:37	0:0	4	->
water	19:39	0:0	4	titles
water	19:47	0:0	2	;
if	21:4	21:55	2	(p_sys -> p_title)
cond	21:8	21:15	3	p_sys -> p_title
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	p_title
stmts	21:25	21:55	3	
call	21:25	21:54	4	DVDCloseFile
arg	21:39	21:54	5	p_sys->p_title
water	21:39	0:0	6	p_sys
op	21:44	0:0	6	->
water	21:46	0:0	6	p_title
water	21:55	0:0	4	;
if	22:4	22:57	2	(p_sys -> p_vts_file)
cond	22:8	22:15	3	p_sys -> p_vts_file
water	22:8	0:0	4	p_sys
op	22:13	0:0	4	->
water	22:15	0:0	4	p_vts_file
stmts	22:28	22:57	3	
call	22:28	22:56	4	ifoClose
arg	22:38	22:56	5	p_sys->p_vts_file
water	22:38	0:0	6	p_sys
op	22:43	0:0	6	->
water	22:45	0:0	6	p_vts_file
water	22:57	0:0	4	;
if	23:4	23:57	2	(p_sys -> p_vmg_file)
cond	23:8	23:15	3	p_sys -> p_vmg_file
water	23:8	0:0	4	p_sys
op	23:13	0:0	4	->
water	23:15	0:0	4	p_vmg_file
stmts	23:28	23:57	3	
call	23:28	23:56	4	ifoClose
arg	23:38	23:56	5	p_sys->p_vmg_file
water	23:38	0:0	6	p_sys
op	23:43	0:0	6	->
water	23:45	0:0	6	p_vmg_file
water	23:57	0:0	4	;
call	24:4	24:31	2	DVDClose
arg	24:14	24:31	3	p_sys->p_dvdread
water	24:14	0:0	4	p_sys
op	24:19	0:0	4	->
water	24:21	0:0	4	p_dvdread
water	24:32	0:0	2	;
call	25:4	25:16	2	free
arg	25:10	25:16	3	p_sys
water	25:10	0:0	4	p_sys
water	25:17	0:0	2	;

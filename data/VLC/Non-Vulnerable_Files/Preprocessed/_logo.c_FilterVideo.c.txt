func	2:0	73:0	0	static picture_t *	FilterVideo
params	2:29	0:0	1	
param	2:31	2:49	2	filter_t *	p_filter
param	2:51	2:68	2	picture_t *	p_src
stmnts	0:0	72:16	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:38	2	logo_list_t	*p_list
op	5:24	0:0	2	=
op	5:26	0:0	2	&
water	5:27	0:0	2	p_sys
op	5:32	0:0	2	->
water	5:34	0:0	2	list
decl	6:4	6:52	2	picture_t	*p_dst
op	6:21	0:0	2	=
call	6:23	6:51	3	filter_NewPicture
arg	6:42	6:51	4	p_filter
water	6:42	0:0	5	p_filter
if	7:4	8:17	2	(! p_dst)
cond	7:8	7:9	3	! p_dst
op	7:8	0:0	4	!
water	7:9	0:0	4	p_dst
stmts	8:8	8:17	3	
goto	8:8	8:17	4	exit
water	8:13	0:0	5	exit
call	9:4	9:31	2	picture_Copy
arg	9:18	9:23	3	p_dst
water	9:18	0:0	4	p_dst
arg	9:25	9:31	3	p_src
water	9:25	0:0	4	p_src
water	9:32	0:0	2	;
call	11:4	11:33	2	vlc_mutex_lock
arg	11:20	11:33	3	&p_sys->lock
op	11:20	0:0	4	&
water	11:21	0:0	4	p_sys
op	11:26	0:0	4	->
water	11:28	0:0	4	lock
water	11:34	0:0	2	;
decl	12:4	12:18	2	logo_t	*p_logo
if	13:4	14:52	2	(p_list -> i_next_pic < p_src -> date)
cond	13:8	13:36	3	p_list -> i_next_pic < p_src -> date
water	13:8	0:0	4	p_list
op	13:14	0:0	4	->
water	13:16	0:0	4	i_next_pic
op	13:27	0:0	4	<
water	13:29	0:0	4	p_src
op	13:34	0:0	4	->
water	13:36	0:0	4	date
stmts	14:8	14:52	3	
water	14:8	0:0	4	p_logo
op	14:15	0:0	4	=
call	14:17	14:51	4	LogoListNext
arg	14:31	14:37	5	p_list
water	14:31	0:0	6	p_list
arg	14:39	14:51	5	p_src->date
water	14:39	0:0	6	p_src
op	14:44	0:0	6	->
water	14:46	0:0	6	date
water	14:52	0:0	4	;
else	15:4	16:42	2
stmts	16:8	16:42	3	
water	16:8	0:0	4	p_logo
op	16:15	0:0	4	=
call	16:17	16:41	4	LogoListCurrent
arg	16:34	16:41	5	p_list
water	16:34	0:0	6	p_list
water	16:42	0:0	4	;
decl	18:4	18:42	2	const picture_t	*p_pic
op	18:27	0:0	2	=
water	18:29	0:0	2	p_logo
op	18:35	0:0	2	->
water	18:37	0:0	2	p_pic
if	19:4	68:4	2	(p_pic)
cond	19:8	19:8	3	p_pic
water	19:8	0:0	4	p_pic
stmts	20:4	68:4	3	
water	20:4	0:0	4	{
decl	21:8	21:52	4	const video_format_t	*p_fmt
op	21:36	0:0	4	=
op	21:38	0:0	4	&
water	21:39	0:0	4	p_pic
op	21:44	0:0	4	->
water	21:46	0:0	4	format
decl	22:8	22:67	4	const int	i_dst_w
op	22:26	0:0	4	=
water	22:28	0:0	4	p_filter
op	22:36	0:0	4	->
water	22:38	0:0	4	fmt_out
op	22:45	0:0	4	.
water	22:46	0:0	4	video
op	22:51	0:0	4	.
water	22:52	0:0	4	i_visible_width
decl	23:8	23:68	4	const int	i_dst_h
op	23:26	0:0	4	=
water	23:28	0:0	4	p_filter
op	23:36	0:0	4	->
water	23:38	0:0	4	fmt_out
op	23:45	0:0	4	.
water	23:46	0:0	4	video
op	23:51	0:0	4	.
water	23:52	0:0	4	i_visible_height
if	24:8	50:8	4	(p_sys -> i_pos)
cond	24:12	24:19	5	p_sys -> i_pos
water	24:12	0:0	6	p_sys
op	24:17	0:0	6	->
water	24:19	0:0	6	i_pos
stmts	25:8	50:8	5	
water	25:8	0:0	6	{
if	26:12	29:12	6	(p_sys -> i_pos & SUBPICTURE_ALIGN_BOTTOM)
cond	26:16	26:31	7	p_sys -> i_pos & SUBPICTURE_ALIGN_BOTTOM
water	26:16	0:0	8	p_sys
op	26:21	0:0	8	->
water	26:23	0:0	8	i_pos
op	26:29	0:0	8	&
water	26:31	0:0	8	SUBPICTURE_ALIGN_BOTTOM
stmts	27:12	29:12	7	
water	27:12	0:0	8	{
water	28:16	0:0	8	p_sys
op	28:21	0:0	8	->
water	28:23	0:0	8	i_pos_y
op	28:31	0:0	8	=
water	28:33	0:0	8	i_dst_h
op	28:41	0:0	8	-
water	28:43	0:0	8	p_fmt
op	28:48	0:0	8	->
water	28:50	0:0	8	i_visible_height
water	28:66	0:0	8	;
water	29:12	0:0	8	}
else	30:12	33:12	6
stmts	30:17	33:12	7	
if	30:17	33:12	8	(! ( p_sys -> i_pos & SUBPICTURE_ALIGN_TOP ))
cond	30:22	30:59	9	! ( p_sys -> i_pos & SUBPICTURE_ALIGN_TOP )
op	30:22	0:0	10	!
water	30:23	0:0	10	(
water	30:24	0:0	10	p_sys
op	30:29	0:0	10	->
water	30:31	0:0	10	i_pos
op	30:37	0:0	10	&
water	30:39	0:0	10	SUBPICTURE_ALIGN_TOP
water	30:59	0:0	10	)
stmts	31:12	33:12	9	
water	31:12	0:0	10	{
water	32:16	0:0	10	p_sys
op	32:21	0:0	10	->
water	32:23	0:0	10	i_pos_y
op	32:31	0:0	10	=
water	32:33	0:0	10	(
water	32:35	0:0	10	i_dst_h
op	32:43	0:0	10	-
water	32:45	0:0	10	p_fmt
op	32:50	0:0	10	->
water	32:52	0:0	10	i_visible_height
water	32:69	0:0	10	)
op	32:71	0:0	10	/
water	32:73	0:0	10	2
water	32:74	0:0	10	;
water	33:12	0:0	10	}
else	34:12	37:12	6
stmts	35:12	37:12	7	
water	35:12	0:0	8	{
water	36:16	0:0	8	p_sys
op	36:21	0:0	8	->
water	36:23	0:0	8	i_pos_y
op	36:31	0:0	8	=
water	36:33	0:0	8	0
water	36:34	0:0	8	;
water	37:12	0:0	8	}
if	38:12	41:12	6	(p_sys -> i_pos & SUBPICTURE_ALIGN_RIGHT)
cond	38:16	38:31	7	p_sys -> i_pos & SUBPICTURE_ALIGN_RIGHT
water	38:16	0:0	8	p_sys
op	38:21	0:0	8	->
water	38:23	0:0	8	i_pos
op	38:29	0:0	8	&
water	38:31	0:0	8	SUBPICTURE_ALIGN_RIGHT
stmts	39:12	41:12	7	
water	39:12	0:0	8	{
water	40:16	0:0	8	p_sys
op	40:21	0:0	8	->
water	40:23	0:0	8	i_pos_x
op	40:31	0:0	8	=
water	40:33	0:0	8	i_dst_w
op	40:41	0:0	8	-
water	40:43	0:0	8	p_fmt
op	40:48	0:0	8	->
water	40:50	0:0	8	i_visible_width
water	40:65	0:0	8	;
water	41:12	0:0	8	}
else	42:12	45:12	6
stmts	42:17	45:12	7	
if	42:17	45:12	8	(! ( p_sys -> i_pos & SUBPICTURE_ALIGN_LEFT ))
cond	42:22	42:60	9	! ( p_sys -> i_pos & SUBPICTURE_ALIGN_LEFT )
op	42:22	0:0	10	!
water	42:23	0:0	10	(
water	42:24	0:0	10	p_sys
op	42:29	0:0	10	->
water	42:31	0:0	10	i_pos
op	42:37	0:0	10	&
water	42:39	0:0	10	SUBPICTURE_ALIGN_LEFT
water	42:60	0:0	10	)
stmts	43:12	45:12	9	
water	43:12	0:0	10	{
water	44:16	0:0	10	p_sys
op	44:21	0:0	10	->
water	44:23	0:0	10	i_pos_x
op	44:31	0:0	10	=
water	44:33	0:0	10	(
water	44:35	0:0	10	i_dst_w
op	44:43	0:0	10	-
water	44:45	0:0	10	p_fmt
op	44:50	0:0	10	->
water	44:52	0:0	10	i_visible_width
water	44:68	0:0	10	)
op	44:70	0:0	10	/
water	44:72	0:0	10	2
water	44:73	0:0	10	;
water	45:12	0:0	10	}
else	46:12	49:12	6
stmts	47:12	49:12	7	
water	47:12	0:0	8	{
water	48:16	0:0	8	p_sys
op	48:21	0:0	8	->
water	48:23	0:0	8	i_pos_x
op	48:31	0:0	8	=
water	48:33	0:0	8	0
water	48:34	0:0	8	;
water	49:12	0:0	8	}
water	50:8	0:0	6	}
if	51:8	59:8	4	(p_sys -> i_pos_x < 0 || p_sys -> i_pos_y < 0)
cond	51:12	51:51	5	p_sys -> i_pos_x < 0 || p_sys -> i_pos_y < 0
water	51:12	0:0	6	p_sys
op	51:17	0:0	6	->
water	51:19	0:0	6	i_pos_x
op	51:27	0:0	6	<
water	51:29	0:0	6	0
op	51:31	0:0	6	||
water	51:34	0:0	6	p_sys
op	51:39	0:0	6	->
water	51:41	0:0	6	i_pos_y
op	51:49	0:0	6	<
water	51:51	0:0	6	0
stmts	52:8	59:8	5	
water	52:8	0:0	6	{
call	53:12	56:32	6	msg_Warn
arg	53:22	53:30	7	p_filter
water	53:22	0:0	8	p_filter
arg	54:16	54:59	7	"logo(%ix%i) doesn't fit into video(%ix%i)"
water	54:16	0:0	8	"logo(%ix%i) doesn't fit into video(%ix%i)"
arg	55:16	55:38	7	p_fmt->i_visible_width
water	55:16	0:0	8	p_fmt
op	55:21	0:0	8	->
water	55:23	0:0	8	i_visible_width
arg	55:40	55:63	7	p_fmt->i_visible_height
water	55:40	0:0	8	p_fmt
op	55:45	0:0	8	->
water	55:47	0:0	8	i_visible_height
arg	56:16	56:23	7	i_dst_w
water	56:16	0:0	8	i_dst_w
arg	56:24	56:32	7	i_dst_h
water	56:24	0:0	8	i_dst_h
water	56:33	0:0	6	;
water	57:12	0:0	6	p_sys
op	57:17	0:0	6	->
water	57:19	0:0	6	i_pos_x
op	57:27	0:0	6	=
water	57:29	0:0	6	(
water	57:30	0:0	6	p_sys
op	57:35	0:0	6	->
water	57:37	0:0	6	i_pos_x
op	57:45	0:0	6	>
water	57:47	0:0	6	0
water	57:48	0:0	6	)
water	57:50	0:0	6	?
water	57:52	0:0	6	p_sys
op	57:57	0:0	6	->
water	57:59	0:0	6	i_pos_x
water	57:67	0:0	6	:
water	57:69	0:0	6	0
water	57:70	0:0	6	;
water	58:12	0:0	6	p_sys
op	58:17	0:0	6	->
water	58:19	0:0	6	i_pos_y
op	58:27	0:0	6	=
water	58:29	0:0	6	(
water	58:30	0:0	6	p_sys
op	58:35	0:0	6	->
water	58:37	0:0	6	i_pos_y
op	58:45	0:0	6	>
water	58:47	0:0	6	0
water	58:48	0:0	6	)
water	58:50	0:0	6	?
water	58:52	0:0	6	p_sys
op	58:57	0:0	6	->
water	58:59	0:0	6	i_pos_y
water	58:67	0:0	6	:
water	58:69	0:0	6	0
water	58:70	0:0	6	;
water	59:8	0:0	6	}
decl	61:8	61:85	4	const int	i_alpha
op	61:26	0:0	4	=
water	61:28	0:0	4	p_logo
op	61:34	0:0	4	->
water	61:36	0:0	4	i_alpha
op	61:44	0:0	4	!=
op	61:47	0:0	4	-
water	61:48	0:0	4	1
water	61:50	0:0	4	?
water	61:52	0:0	4	p_logo
op	61:58	0:0	4	->
water	61:60	0:0	4	i_alpha
water	61:68	0:0	4	:
water	61:70	0:0	4	p_list
op	61:76	0:0	4	->
water	61:78	0:0	4	i_alpha
if	62:8	67:8	4	(filter_ConfigureBlend (p_sys -> p_blend ,i_dst_w ,i_dst_h ,p_fmt ) ||filter_Blend (p_sys -> p_blend ,p_dst ,p_sys -> i_pos_x ,p_sys -> i_pos_y ,p_pic ,i_alpha ))
cond	62:12	64:41	5	filter_ConfigureBlend (p_sys -> p_blend ,i_dst_w ,i_dst_h ,p_fmt ) ||filter_Blend (p_sys -> p_blend ,p_dst ,p_sys -> i_pos_x ,p_sys -> i_pos_y ,p_pic ,i_alpha )
call	62:12	62:75	6	filter_ConfigureBlend
arg	62:35	62:49	7	p_sys->p_blend
water	62:35	0:0	8	p_sys
op	62:40	0:0	8	->
water	62:42	0:0	8	p_blend
arg	62:51	62:58	7	i_dst_w
water	62:51	0:0	8	i_dst_w
arg	62:60	62:67	7	i_dst_h
water	62:60	0:0	8	i_dst_h
arg	62:69	62:75	7	p_fmt
water	62:69	0:0	8	p_fmt
op	62:77	0:0	6	||
call	63:12	64:41	6	filter_Blend
arg	63:26	63:40	7	p_sys->p_blend
water	63:26	0:0	8	p_sys
op	63:31	0:0	8	->
water	63:33	0:0	8	p_blend
arg	63:42	63:47	7	p_dst
water	63:42	0:0	8	p_dst
arg	63:49	63:63	7	p_sys->i_pos_x
water	63:49	0:0	8	p_sys
op	63:54	0:0	8	->
water	63:56	0:0	8	i_pos_x
arg	63:65	63:79	7	p_sys->i_pos_y
water	63:65	0:0	8	p_sys
op	63:70	0:0	8	->
water	63:72	0:0	8	i_pos_y
arg	64:26	64:31	7	p_pic
water	64:26	0:0	8	p_pic
arg	64:33	64:41	7	i_alpha
water	64:33	0:0	8	i_alpha
stmts	65:8	67:8	5	
water	65:8	0:0	6	{
call	66:12	66:59	6	msg_Err
arg	66:21	66:29	7	p_filter
water	66:21	0:0	8	p_filter
arg	66:31	66:59	7	"failed to blend a picture"
water	66:31	0:0	8	"failed to blend a picture"
water	66:60	0:0	6	;
water	67:8	0:0	6	}
water	68:4	0:0	4	}
call	69:4	69:35	2	vlc_mutex_unlock
arg	69:22	69:35	3	&p_sys->lock
op	69:22	0:0	4	&
water	69:23	0:0	4	p_sys
op	69:28	0:0	4	->
water	69:30	0:0	4	lock
water	69:36	0:0	2	;
label	70:0	70:4	2	exit :
call	71:4	71:27	2	picture_Release
arg	71:21	71:27	3	p_src
water	71:21	0:0	4	p_src
water	71:28	0:0	2	;
return	72:4	72:16	2	p_dst
water	72:11	0:0	3	p_dst

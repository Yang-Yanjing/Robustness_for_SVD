func	2:0	345:0	0	int	libvlc_InternalInit
params	2:23	0:0	1	
param	2:25	2:47	2	libvlc_int_t *	p_libvlc
param	2:49	2:59	2	int	i_argc
param	3:25	3:49	2	const char *	ppsz_argv[]
stmnts	0:0	344:22	1	
decl	5:4	5:48	2	libvlc_priv_t	*priv
op	5:24	0:0	2	=
call	5:26	5:47	3	libvlc_priv
arg	5:39	5:47	4	p_libvlc
water	5:39	0:0	5	p_libvlc
decl	6:4	6:35	2	char	*psz_modules
op	6:29	0:0	2	=
water	6:31	0:0	2	NULL
decl	7:4	7:34	2	char	*psz_parser
op	7:28	0:0	2	=
water	7:30	0:0	2	NULL
decl	8:4	8:35	2	char	*psz_control
op	8:29	0:0	2	=
water	8:31	0:0	2	NULL
decl	9:4	9:24	2	char	*psz_val
call	11:4	11:16	2	system_Init
water	11:17	0:0	2	;
call	16:4	16:21	2	module_InitBank
water	16:22	0:0	2	;
if	18:4	22:4	2	(config_LoadCmdLine (p_libvlc ,i_argc ,ppsz_argv ,NULL ))
cond	18:8	18:62	3	config_LoadCmdLine (p_libvlc ,i_argc ,ppsz_argv ,NULL )
call	18:8	18:62	4	config_LoadCmdLine
arg	18:28	18:36	5	p_libvlc
water	18:28	0:0	6	p_libvlc
arg	18:38	18:44	5	i_argc
water	18:38	0:0	6	i_argc
arg	18:46	18:55	5	ppsz_argv
water	18:46	0:0	6	ppsz_argv
arg	18:57	18:62	5	NULL
water	18:57	0:0	6	NULL
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:29	4	module_EndBank
arg	20:24	20:29	5	false
water	20:24	0:0	6	false
water	20:30	0:0	4	;
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
call	23:4	23:25	2	vlc_LogInit
arg	23:17	23:25	3	p_libvlc
water	23:17	0:0	4	p_libvlc
water	23:26	0:0	2	;
call	24:4	24:31	2	vlc_threads_setup
arg	24:23	24:31	3	p_libvlc
water	24:23	0:0	4	p_libvlc
water	24:32	0:0	2	;
decl	29:4	29:55	2	size_t	module_count
op	29:24	0:0	2	=
call	29:26	29:54	3	module_LoadPlugins
arg	29:46	29:54	4	p_libvlc
water	29:46	0:0	5	p_libvlc
if	33:4	39:4	2	(!var_InheritBool (p_libvlc ,"ignore-config" ))
cond	33:8	33:52	3	!var_InheritBool (p_libvlc ,"ignore-config" )
op	33:8	0:0	4	!
call	33:9	33:52	4	var_InheritBool
arg	33:26	33:34	5	p_libvlc
water	33:26	0:0	6	p_libvlc
arg	33:36	33:52	5	"ignore-config"
water	33:36	0:0	6	"ignore-config"
stmts	34:4	39:4	3	
water	34:4	0:0	4	{
if	35:8	36:45	4	(var_InheritBool (p_libvlc ,"reset-config" ))
cond	35:12	35:54	5	var_InheritBool (p_libvlc ,"reset-config" )
call	35:12	35:54	6	var_InheritBool
arg	35:29	35:37	7	p_libvlc
water	35:29	0:0	8	p_libvlc
arg	35:39	35:54	7	"reset-config"
water	35:39	0:0	8	"reset-config"
stmts	36:12	36:45	5	
call	36:12	36:44	6	config_SaveConfigFile
arg	36:35	36:44	7	p_libvlc
water	36:35	0:0	8	p_libvlc
water	36:45	0:0	6	;
else	37:8	38:45	4
stmts	38:12	38:45	5	
call	38:12	38:44	6	config_LoadConfigFile
arg	38:35	38:44	7	p_libvlc
water	38:35	0:0	8	p_libvlc
water	38:45	0:0	6	;
water	39:4	0:0	4	}
decl	43:4	43:18	2	int	vlc_optind
if	44:4	49:4	2	(config_LoadCmdLine (p_libvlc ,i_argc ,ppsz_argv ,& vlc_optind ))
cond	44:8	44:69	3	config_LoadCmdLine (p_libvlc ,i_argc ,ppsz_argv ,& vlc_optind )
call	44:8	44:69	4	config_LoadCmdLine
arg	44:28	44:36	5	p_libvlc
water	44:28	0:0	6	p_libvlc
arg	44:38	44:44	5	i_argc
water	44:38	0:0	6	i_argc
arg	44:46	44:55	5	ppsz_argv
water	44:46	0:0	6	ppsz_argv
arg	44:57	44:69	5	&vlc_optind
op	44:57	0:0	6	&
water	44:58	0:0	6	vlc_optind
stmts	45:4	49:4	3	
water	45:4	0:0	4	{
call	46:8	46:28	4	module_EndBank
arg	46:24	46:28	5	true
water	46:24	0:0	6	true
water	46:29	0:0	4	;
call	47:8	47:31	4	vlc_LogDeinit
arg	47:23	47:31	5	p_libvlc
water	47:23	0:0	6	p_libvlc
water	47:32	0:0	4	;
return	48:8	48:27	4	VLC_EGENERIC
water	48:15	0:0	5	VLC_EGENERIC
water	49:4	0:0	4	}
op	54:5	0:0	2	&&
water	54:8	0:0	2	(
call	54:10	54:32	2	defined
arg	54:19	54:32	3	HAVE_GETTEXT
water	54:19	0:0	4	HAVE_GETTEXT
op	54:34	0:0	2	||
call	54:37	54:68	2	defined
arg	54:46	54:68	3	HAVE_INCLUDED_GETTEXT
water	54:46	0:0	4	HAVE_INCLUDED_GETTEXT
water	54:70	0:0	2	)
call	55:4	55:36	2	vlc_bindtextdomain
arg	55:24	55:36	3	PACKAGE_NAME
water	55:24	0:0	4	PACKAGE_NAME
water	55:37	0:0	2	;
call	58:4	58:66	2	msg_Dbg
arg	58:13	58:21	3	p_libvlc
water	58:13	0:0	4	p_libvlc
arg	58:23	58:57	3	"translation test: code is \"%s\""
water	58:23	0:0	4	"translation test: code is \"%s\""
arg	58:59	58:66	3	_("C")
call	58:59	58:64	4	_
arg	58:61	58:64	5	"C"
water	58:61	0:0	6	"C"
water	58:67	0:0	2	;
if	59:4	63:4	2	(config_PrintHelp (VLC_OBJECT (p_libvlc ) ))
cond	59:8	59:46	3	config_PrintHelp (VLC_OBJECT (p_libvlc ) )
call	59:8	59:46	4	config_PrintHelp
arg	59:26	59:46	5	VLC_OBJECT(p_libvlc)
call	59:26	59:45	6	VLC_OBJECT
arg	59:37	59:45	7	p_libvlc
water	59:37	0:0	8	p_libvlc
stmts	60:4	63:4	3	
water	60:4	0:0	4	{
call	61:8	61:28	4	module_EndBank
arg	61:24	61:28	5	true
water	61:24	0:0	6	true
water	61:29	0:0	4	;
call	62:8	62:14	4	exit
arg	62:13	62:14	5	0
water	62:13	0:0	6	0
water	62:15	0:0	4	;
water	63:4	0:0	4	}
if	64:4	70:4	2	(module_count <= 1)
cond	64:8	64:24	3	module_count <= 1
water	64:8	0:0	4	module_count
op	64:21	0:0	4	<=
water	64:24	0:0	4	1
stmts	65:4	70:4	3	
water	65:4	0:0	4	{
call	66:8	66:75	4	msg_Err
arg	66:17	66:25	5	p_libvlc
water	66:17	0:0	6	p_libvlc
arg	66:27	66:75	5	"No plugins found! Check your VLC installation."
water	66:27	0:0	6	"No plugins found! Check your VLC installation."
water	66:76	0:0	4	;
call	67:8	67:28	4	module_EndBank
arg	67:24	67:28	5	true
water	67:24	0:0	6	true
water	67:29	0:0	4	;
call	68:8	68:31	4	vlc_LogDeinit
arg	68:23	68:31	5	p_libvlc
water	68:23	0:0	6	p_libvlc
water	68:32	0:0	4	;
return	69:8	69:25	4	VLC_ENOMOD
water	69:15	0:0	5	VLC_ENOMOD
water	70:4	0:0	4	}
if	73:4	98:4	2	(var_InheritBool (p_libvlc ,"daemon" ))
cond	73:8	73:44	3	var_InheritBool (p_libvlc ,"daemon" )
call	73:8	73:44	4	var_InheritBool
arg	73:25	73:33	5	p_libvlc
water	73:25	0:0	6	p_libvlc
arg	73:35	73:44	5	"daemon"
water	73:35	0:0	6	"daemon"
stmts	74:4	98:4	3	
water	74:4	0:0	4	{
if	75:8	81:8	4	(daemon (1 ,0 ) != 0)
cond	75:12	75:29	5	daemon (1 ,0 ) != 0
call	75:12	75:24	6	daemon
arg	75:20	75:21	7	1
water	75:20	0:0	8	1
arg	75:23	75:24	7	0
water	75:23	0:0	8	0
op	75:26	0:0	6	!=
water	75:29	0:0	6	0
stmts	76:8	81:8	5	
water	76:8	0:0	6	{
call	77:12	77:67	6	msg_Err
arg	77:21	77:29	7	p_libvlc
water	77:21	0:0	8	p_libvlc
arg	77:31	77:67	7	"Unable to fork vlc to daemon mode"
water	77:31	0:0	8	"Unable to fork vlc to daemon mode"
water	77:68	0:0	6	;
call	78:12	78:32	6	module_EndBank
arg	78:28	78:32	7	true
water	78:28	0:0	8	true
water	78:33	0:0	6	;
call	79:12	79:35	6	vlc_LogDeinit
arg	79:27	79:35	7	p_libvlc
water	79:27	0:0	8	p_libvlc
water	79:36	0:0	6	;
return	80:12	80:29	6	VLC_ENOMEM
water	80:19	0:0	7	VLC_ENOMEM
water	81:8	0:0	6	}
decl	83:8	83:64	4	char	*pidfile
op	83:22	0:0	4	=
call	83:24	83:63	5	var_InheritString
arg	83:43	83:51	6	p_libvlc
water	83:43	0:0	7	p_libvlc
arg	83:53	83:63	6	"pidfile"
water	83:53	0:0	7	"pidfile"
if	84:8	97:8	4	(pidfile != NULL)
cond	84:12	84:23	5	pidfile != NULL
water	84:12	0:0	6	pidfile
op	84:20	0:0	6	!=
water	84:23	0:0	6	NULL
stmts	85:8	97:8	5	
water	85:8	0:0	6	{
decl	86:12	86:52	6	FILE	*stream
op	86:25	0:0	6	=
call	86:27	86:51	7	vlc_fopen
arg	86:38	86:45	8	pidfile
water	86:38	0:0	9	pidfile
arg	86:47	86:51	8	"w"
water	86:47	0:0	9	"w"
if	87:12	92:12	6	(stream != NULL)
cond	87:16	87:26	7	stream != NULL
water	87:16	0:0	8	stream
op	87:23	0:0	8	!=
water	87:26	0:0	8	NULL
stmts	88:12	92:12	7	
water	88:12	0:0	8	{
call	89:16	89:53	8	fprintf
arg	89:25	89:31	9	stream
water	89:25	0:0	10	stream
arg	89:33	89:37	9	"%d"
water	89:33	0:0	10	"%d"
arg	89:39	89:53	9	(int)getpid()
water	89:39	0:0	10	(
water	89:40	0:0	10	int
water	89:43	0:0	10	)
call	89:44	89:51	10	getpid
water	89:54	0:0	8	;
call	90:16	90:31	8	fclose
arg	90:24	90:31	9	stream
water	90:24	0:0	10	stream
water	90:32	0:0	8	;
call	91:16	91:66	8	msg_Dbg
arg	91:25	91:33	9	p_libvlc
water	91:25	0:0	10	p_libvlc
arg	91:35	91:56	9	"written PID file %s"
water	91:35	0:0	10	"written PID file %s"
arg	91:58	91:66	9	pidfile
water	91:58	0:0	10	pidfile
water	91:67	0:0	8	;
water	92:12	0:0	8	}
else	93:12	95:57	6
stmts	94:16	95:57	7	
call	94:16	95:56	8	msg_Err
arg	94:25	94:33	9	p_libvlc
water	94:25	0:0	10	p_libvlc
arg	94:35	94:65	9	"cannot write PID file %s: %s"
water	94:35	0:0	10	"cannot write PID file %s: %s"
arg	95:25	95:32	9	pidfile
water	95:25	0:0	10	pidfile
arg	95:34	95:56	9	vlc_strerror_c(errno)
call	95:34	95:54	10	vlc_strerror_c
arg	95:49	95:54	11	errno
water	95:49	0:0	12	errno
water	95:57	0:0	8	;
call	96:12	96:26	6	free
arg	96:18	96:26	7	pidfile
water	96:18	0:0	8	pidfile
water	96:27	0:0	6	;
water	97:8	0:0	6	}
water	98:4	0:0	4	}
else	99:4	103:4	2
stmts	100:4	103:4	3	
water	100:4	0:0	4	{
call	101:8	101:56	4	var_Create
arg	101:20	101:28	5	p_libvlc
water	101:20	0:0	6	p_libvlc
arg	101:30	101:39	5	"pidfile"
water	101:30	0:0	6	"pidfile"
arg	101:41	101:56	5	VLC_VAR_STRING
water	101:41	0:0	6	VLC_VAR_STRING
water	101:57	0:0	4	;
call	102:8	102:47	4	var_SetString
arg	102:23	102:31	5	p_libvlc
water	102:23	0:0	6	p_libvlc
arg	102:33	102:42	5	"pidfile"
water	102:33	0:0	6	"pidfile"
arg	102:44	102:47	5	""
water	102:44	0:0	6	""
water	102:48	0:0	4	;
water	103:4	0:0	4	}
if	111:4	198:4	2	(var_InheritBool (p_libvlc ,"one-instance" ) || (var_InheritBool (p_libvlc ,"one-instance-when-started-from-file" ) &&var_InheritBool (p_libvlc ,"started-from-file" ) ))
cond	111:8	113:58	3	var_InheritBool (p_libvlc ,"one-instance" ) || (var_InheritBool (p_libvlc ,"one-instance-when-started-from-file" ) &&var_InheritBool (p_libvlc ,"started-from-file" ) )
call	111:8	111:50	4	var_InheritBool
arg	111:25	111:33	5	p_libvlc
water	111:25	0:0	6	p_libvlc
arg	111:35	111:50	5	"one-instance"
water	111:35	0:0	6	"one-instance"
op	112:4	0:0	4	||
water	112:7	0:0	4	(
call	112:9	112:74	4	var_InheritBool
arg	112:26	112:34	5	p_libvlc
water	112:26	0:0	6	p_libvlc
arg	112:36	112:74	5	"one-instance-when-started-from-file"
water	112:36	0:0	6	"one-instance-when-started-from-file"
op	113:6	0:0	4	&&
call	113:9	113:56	4	var_InheritBool
arg	113:26	113:34	5	p_libvlc
water	113:26	0:0	6	p_libvlc
arg	113:36	113:56	5	"started-from-file"
water	113:36	0:0	6	"started-from-file"
water	113:58	0:0	4	)
stmts	114:4	198:4	3	
water	114:4	0:0	4	{
for	115:8	121:12	4	( int i = vlc_optind ;i < i_argc;i ++)
forinit	0:0	115:31	5	 int i = vlc_optind ;
decl	115:13	115:31	6	int	i
op	115:19	0:0	6	=
water	115:21	0:0	6	vlc_optind
cond	115:33	115:37	5	i < i_argc
water	115:33	0:0	6	i
op	115:35	0:0	6	<
water	115:37	0:0	6	i_argc
forexpr	115:45	115:46	5	i ++
water	115:45	0:0	6	i
op	115:46	0:0	6	++
stmts	116:12	121:12	5	
if	116:12	121:12	6	(ppsz_argv [ i ] [ 0 ] == ':')
cond	116:16	116:35	7	ppsz_argv [ i ] [ 0 ] == ':'
water	116:16	0:0	8	ppsz_argv
op	116:25	0:0	8	[
water	116:26	0:0	8	i
op	116:27	0:0	8	]
op	116:28	0:0	8	[
water	116:29	0:0	8	0
op	116:30	0:0	8	]
op	116:32	0:0	8	==
water	116:35	0:0	8	':'
stmts	117:12	121:12	7	
water	117:12	0:0	8	{
call	118:16	119:38	8	msg_Err
arg	118:25	118:33	9	p_libvlc
water	118:25	0:0	10	p_libvlc
arg	118:35	118:85	9	"item option %s incompatible with single instance"
water	118:35	0:0	10	"item option %s incompatible with single instance"
arg	119:25	119:38	9	ppsz_argv[i]
water	119:25	0:0	10	ppsz_argv
op	119:34	0:0	10	[
water	119:35	0:0	10	i
op	119:36	0:0	10	]
water	119:39	0:0	8	;
goto	120:16	120:29	8	dbus_out
water	120:21	0:0	9	dbus_out
water	121:12	0:0	8	}
call	123:8	123:34	4	dbus_threads_init_default
water	123:35	0:0	4	;
decl	124:8	124:21	4	DBusError	err
call	125:8	125:30	4	dbus_error_init
arg	125:25	125:30	5	&err
op	125:25	0:0	6	&
water	125:26	0:0	6	err
water	125:31	0:0	4	;
decl	127:8	127:70	4	DBusConnection	*conn
op	127:30	0:0	4	=
call	127:32	127:69	5	dbus_bus_get
arg	127:46	127:62	6	DBUS_BUS_SESSION
water	127:46	0:0	7	DBUS_BUS_SESSION
arg	127:64	127:69	6	&err
op	127:64	0:0	7	&
water	127:65	0:0	7	err
if	128:8	134:8	4	(conn == NULL)
cond	128:12	128:20	5	conn == NULL
water	128:12	0:0	6	conn
op	128:17	0:0	6	==
water	128:20	0:0	6	NULL
stmts	129:8	134:8	5	
water	129:8	0:0	6	{
call	130:12	131:32	6	msg_Err
arg	130:21	130:29	7	p_libvlc
water	130:21	0:0	8	p_libvlc
arg	130:31	130:78	7	"Failed to connect to D-Bus session daemon: %s"
water	130:31	0:0	8	"Failed to connect to D-Bus session daemon: %s"
arg	131:20	131:32	7	err.message
water	131:20	0:0	8	err
op	131:23	0:0	8	.
water	131:24	0:0	8	message
water	131:33	0:0	6	;
call	132:12	132:34	6	dbus_error_free
arg	132:29	132:34	7	&err
op	132:29	0:0	8	&
water	132:30	0:0	8	err
water	132:35	0:0	6	;
goto	133:12	133:25	6	dbus_out
water	133:17	0:0	7	dbus_out
water	134:8	0:0	6	}
if	139:8	150:8	4	(!dbus_bus_name_has_owner (conn ,MPRIS_BUS_NAME ,& err ))
cond	139:12	139:65	5	!dbus_bus_name_has_owner (conn ,MPRIS_BUS_NAME ,& err )
op	139:12	0:0	6	!
call	139:13	139:65	6	dbus_bus_name_has_owner
arg	139:38	139:42	7	conn
water	139:38	0:0	8	conn
arg	139:44	139:58	7	MPRIS_BUS_NAME
water	139:44	0:0	8	MPRIS_BUS_NAME
arg	139:60	139:65	7	&err
op	139:60	0:0	8	&
water	139:61	0:0	8	err
stmts	140:8	150:8	5	
water	140:8	0:0	6	{
call	141:12	141:40	6	dbus_connection_unref
arg	141:35	141:40	7	conn
water	141:35	0:0	8	conn
water	141:41	0:0	6	;
if	142:12	145:12	6	(dbus_error_is_set (& err ))
cond	142:16	142:40	7	dbus_error_is_set (& err )
call	142:16	142:40	8	dbus_error_is_set
arg	142:35	142:40	9	&err
op	142:35	0:0	10	&
water	142:36	0:0	10	err
stmts	143:12	145:12	7	
water	143:12	0:0	8	{
call	144:16	144:66	8	msg_Err
arg	144:25	144:33	9	p_libvlc
water	144:25	0:0	10	p_libvlc
arg	144:35	144:52	9	"D-Bus error: %s"
water	144:35	0:0	10	"D-Bus error: %s"
arg	144:54	144:66	9	err.message
water	144:54	0:0	10	err
op	144:57	0:0	10	.
water	144:58	0:0	10	message
water	144:67	0:0	8	;
water	145:12	0:0	8	}
else	146:12	147:84	6
stmts	147:16	147:84	7	
call	147:16	147:83	8	msg_Dbg
arg	147:25	147:33	9	p_libvlc
water	147:25	0:0	10	p_libvlc
arg	147:35	147:83	9	"No media player running. Continuing normally."
water	147:35	0:0	10	"No media player running. Continuing normally."
water	147:84	0:0	8	;
call	148:12	148:34	6	dbus_error_free
arg	148:29	148:34	7	&err
op	148:29	0:0	8	&
water	148:30	0:0	8	err
water	148:35	0:0	6	;
goto	149:12	149:25	6	dbus_out
water	149:17	0:0	7	dbus_out
water	150:8	0:0	6	}
decl	151:8	151:81	4	const dbus_bool_t	play
op	151:31	0:0	4	=
op	151:33	0:0	4	!
call	151:34	151:80	5	var_InheritBool
arg	151:51	151:59	6	p_libvlc
water	151:51	0:0	7	p_libvlc
arg	151:61	151:80	6	"playlist-enqueue"
water	151:61	0:0	7	"playlist-enqueue"
call	152:8	152:62	4	msg_Warn
arg	152:18	152:26	5	p_libvlc
water	152:18	0:0	6	p_libvlc
arg	152:28	152:62	5	"media player running. Exiting..."
water	152:28	0:0	6	"media player running. Exiting..."
water	152:63	0:0	4	;
for	153:8	194:8	4	( int i = vlc_optind ;i < i_argc;i ++)
forinit	0:0	153:31	5	 int i = vlc_optind ;
decl	153:13	153:31	6	int	i
op	153:19	0:0	6	=
water	153:21	0:0	6	vlc_optind
cond	153:33	153:37	5	i < i_argc
water	153:33	0:0	6	i
op	153:35	0:0	6	<
water	153:37	0:0	6	i_argc
forexpr	153:45	153:46	5	i ++
water	153:45	0:0	6	i
op	153:46	0:0	6	++
stmts	154:8	194:8	5	
water	154:8	0:0	6	{
decl	155:12	156:89	6	DBusMessage	*msg
op	155:29	0:0	6	=
call	155:31	156:88	7	dbus_message_new_method_call
arg	156:15	156:29	8	MPRIS_BUS_NAME
water	156:15	0:0	9	MPRIS_BUS_NAME
arg	156:31	156:48	8	MPRIS_OBJECT_PATH
water	156:31	0:0	9	MPRIS_OBJECT_PATH
arg	156:50	156:75	8	MPRIS_TRACKLIST_INTERFACE
water	156:50	0:0	9	MPRIS_TRACKLIST_INTERFACE
arg	156:77	156:88	8	"AddTrack"
water	156:77	0:0	9	"AddTrack"
if	157:12	158:24	6	(unlikely (msg == NULL ))
cond	157:16	157:36	7	unlikely (msg == NULL )
call	157:16	157:36	8	unlikely
arg	157:25	157:36	9	msg==NULL
water	157:25	0:0	10	msg
op	157:29	0:0	10	==
water	157:32	0:0	10	NULL
stmts	158:16	158:24	7	
continue	158:16	158:24	8	
decl	160:12	160:21	6	char	*mrl
if	161:12	162:44	6	(strstr (ppsz_argv [ i ] ,"://" ))
cond	161:16	161:44	7	strstr (ppsz_argv [ i ] ,"://" )
call	161:16	161:44	8	strstr
arg	161:24	161:36	9	ppsz_argv[i]
water	161:24	0:0	10	ppsz_argv
op	161:33	0:0	10	[
water	161:34	0:0	10	i
op	161:35	0:0	10	]
arg	161:38	161:44	9	"://"
water	161:38	0:0	10	"://"
stmts	162:16	162:44	7	
water	162:16	0:0	8	mrl
op	162:20	0:0	8	=
call	162:22	162:43	8	strdup
arg	162:30	162:43	9	ppsz_argv[i]
water	162:30	0:0	10	ppsz_argv
op	162:39	0:0	10	[
water	162:40	0:0	10	i
op	162:41	0:0	10	]
water	162:44	0:0	8	;
else	163:12	164:56	6
stmts	164:16	164:56	7	
water	164:16	0:0	8	mrl
op	164:20	0:0	8	=
call	164:22	164:55	8	vlc_path2uri
arg	164:36	164:48	9	ppsz_argv[i]
water	164:36	0:0	10	ppsz_argv
op	164:45	0:0	10	[
water	164:46	0:0	10	i
op	164:47	0:0	10	]
arg	164:50	164:55	9	NULL
water	164:50	0:0	10	NULL
water	164:56	0:0	8	;
if	165:12	169:12	6	(mrl == NULL)
cond	165:16	165:23	7	mrl == NULL
water	165:16	0:0	8	mrl
op	165:20	0:0	8	==
water	165:23	0:0	8	NULL
stmts	166:12	169:12	7	
water	166:12	0:0	8	{
call	167:16	167:40	8	dbus_message_unref
arg	167:36	167:40	9	msg
water	167:36	0:0	10	msg
water	167:41	0:0	8	;
continue	168:16	168:24	8	
water	169:12	0:0	8	}
decl	170:12	170:50	6	const char	*after_track
op	170:36	0:0	6	=
water	170:38	0:0	6	MPRIS_APPEND
if	172:12	181:12	6	(!dbus_message_append_args (msg ,DBUS_TYPE_STRING ,& mrl ,DBUS_TYPE_OBJECT_PATH ,& after_track ,DBUS_TYPE_BOOLEAN ,& play ,DBUS_TYPE_INVALID ))
cond	172:16	175:66	7	!dbus_message_append_args (msg ,DBUS_TYPE_STRING ,& mrl ,DBUS_TYPE_OBJECT_PATH ,& after_track ,DBUS_TYPE_BOOLEAN ,& play ,DBUS_TYPE_INVALID )
op	172:16	0:0	8	!
call	172:17	175:66	8	dbus_message_append_args
arg	172:43	172:46	9	msg
water	172:43	0:0	10	msg
arg	172:48	172:64	9	DBUS_TYPE_STRING
water	172:48	0:0	10	DBUS_TYPE_STRING
arg	172:66	172:70	9	&mrl
op	172:66	0:0	10	&
water	172:67	0:0	10	mrl
arg	173:48	173:69	9	DBUS_TYPE_OBJECT_PATH
water	173:48	0:0	10	DBUS_TYPE_OBJECT_PATH
arg	173:71	173:83	9	&after_track
op	173:71	0:0	10	&
water	173:72	0:0	10	after_track
arg	174:48	174:65	9	DBUS_TYPE_BOOLEAN
water	174:48	0:0	10	DBUS_TYPE_BOOLEAN
arg	174:67	174:72	9	&play
op	174:67	0:0	10	&
water	174:68	0:0	10	play
arg	175:48	175:66	9	DBUS_TYPE_INVALID
water	175:48	0:0	10	DBUS_TYPE_INVALID
stmts	176:12	181:12	7	
water	176:12	0:0	8	{
call	177:17	177:41	8	dbus_message_unref
arg	177:37	177:41	9	msg
water	177:37	0:0	10	msg
water	177:42	0:0	8	;
water	178:17	0:0	8	msg
op	178:21	0:0	8	=
water	178:23	0:0	8	NULL
water	178:27	0:0	8	;
call	179:17	179:27	8	free
arg	179:23	179:27	9	mrl
water	179:23	0:0	10	mrl
water	179:28	0:0	8	;
continue	180:17	180:25	8	
water	181:12	0:0	8	}
call	182:12	182:74	6	msg_Dbg
arg	182:21	182:29	7	p_libvlc
water	182:21	0:0	8	p_libvlc
arg	182:31	182:68	7	"Adds %s to the running media player"
water	182:31	0:0	8	"Adds %s to the running media player"
arg	182:70	182:74	7	mrl
water	182:70	0:0	8	mrl
water	182:75	0:0	6	;
call	183:12	183:22	6	free
arg	183:18	183:22	7	mrl
water	183:18	0:0	8	mrl
water	183:23	0:0	6	;
decl	185:12	186:82	6	DBusMessage	*reply
op	185:31	0:0	6	=
call	185:33	186:81	7	dbus_connection_send_with_reply_and_block
arg	185:76	185:80	8	conn
water	185:76	0:0	9	conn
arg	185:82	185:85	8	msg
water	185:82	0:0	9	msg
arg	185:87	185:89	8	-1
op	185:87	0:0	9	-
water	185:88	0:0	9	1
arg	186:76	186:81	8	&err
op	186:76	0:0	9	&
water	186:77	0:0	9	err
call	187:12	187:36	6	dbus_message_unref
arg	187:32	187:36	7	msg
water	187:32	0:0	8	msg
water	187:37	0:0	6	;
if	188:12	192:12	6	(reply == NULL)
cond	188:16	188:25	7	reply == NULL
water	188:16	0:0	8	reply
op	188:22	0:0	8	==
water	188:25	0:0	8	NULL
stmts	189:12	192:12	7	
water	189:12	0:0	8	{
call	190:16	190:66	8	msg_Err
arg	190:25	190:33	9	p_libvlc
water	190:25	0:0	10	p_libvlc
arg	190:35	190:52	9	"D-Bus error: %s"
water	190:35	0:0	10	"D-Bus error: %s"
arg	190:54	190:66	9	err.message
water	190:54	0:0	10	err
op	190:57	0:0	10	.
water	190:58	0:0	10	message
water	190:67	0:0	8	;
continue	191:16	191:24	8	
water	192:12	0:0	8	}
call	193:12	193:38	6	dbus_message_unref
arg	193:32	193:38	7	reply
water	193:32	0:0	8	reply
water	193:39	0:0	6	;
water	194:8	0:0	6	}
call	196:8	196:36	4	dbus_connection_unref
arg	196:31	196:36	5	conn
water	196:31	0:0	6	conn
water	196:37	0:0	4	;
call	197:8	197:16	4	exit
arg	197:14	197:16	5	0
water	197:14	0:0	6	0
water	197:17	0:0	4	;
water	198:4	0:0	4	}
label	203:0	203:8	2	dbus_out :
call	205:4	205:39	2	vlc_CPU_dump
arg	205:18	205:39	3	VLC_OBJECT(p_libvlc)
call	205:18	205:37	4	VLC_OBJECT
arg	205:29	205:37	5	p_libvlc
water	205:29	0:0	6	p_libvlc
water	205:40	0:0	2	;
water	206:4	0:0	2	priv
op	206:8	0:0	2	->
water	206:10	0:0	2	b_stats
op	206:18	0:0	2	=
call	206:20	206:55	2	var_InheritBool
arg	206:37	206:45	3	p_libvlc
water	206:37	0:0	4	p_libvlc
arg	206:47	206:55	3	"stats"
water	206:47	0:0	4	"stats"
water	206:56	0:0	2	;
water	210:4	0:0	2	priv
op	210:8	0:0	2	->
water	210:10	0:0	2	actions
op	210:18	0:0	2	=
call	210:20	210:46	2	vlc_InitActions
arg	210:37	210:46	3	p_libvlc
water	210:37	0:0	4	p_libvlc
water	210:47	0:0	2	;
water	214:4	0:0	2	priv
op	214:8	0:0	2	->
water	214:10	0:0	2	parser
op	214:17	0:0	2	=
call	214:19	214:62	2	playlist_preparser_New
arg	214:42	214:62	3	VLC_OBJECT(p_libvlc)
call	214:42	214:61	4	VLC_OBJECT
arg	214:53	214:61	5	p_libvlc
water	214:53	0:0	6	p_libvlc
water	214:63	0:0	2	;
call	216:4	216:64	2	var_Create
arg	216:16	216:24	3	p_libvlc
water	216:16	0:0	4	p_libvlc
arg	216:26	216:49	3	"intf-toggle-fscontrol"
water	216:26	0:0	4	"intf-toggle-fscontrol"
arg	216:51	216:64	3	VLC_VAR_BOOL
water	216:51	0:0	4	VLC_VAR_BOOL
water	216:65	0:0	2	;
call	217:4	217:57	2	var_SetBool
arg	217:17	217:25	3	p_libvlc
water	217:17	0:0	4	p_libvlc
arg	217:27	217:50	3	"intf-toggle-fscontrol"
water	217:27	0:0	4	"intf-toggle-fscontrol"
arg	217:52	217:57	3	true
water	217:52	0:0	4	true
water	217:58	0:0	2	;
call	219:4	219:52	2	var_Create
arg	219:16	219:24	3	p_libvlc
water	219:16	0:0	4	p_libvlc
arg	219:26	219:37	3	"intf-boss"
water	219:26	0:0	4	"intf-boss"
arg	219:39	219:52	3	VLC_VAR_VOID
water	219:39	0:0	4	VLC_VAR_VOID
water	219:53	0:0	2	;
call	221:4	221:52	2	var_Create
arg	221:16	221:24	3	p_libvlc
water	221:16	0:0	4	p_libvlc
arg	221:26	221:37	3	"intf-show"
water	221:26	0:0	4	"intf-show"
arg	221:39	221:52	3	VLC_VAR_BOOL
water	221:39	0:0	4	VLC_VAR_BOOL
water	221:53	0:0	2	;
call	223:4	223:57	2	var_Create
arg	223:16	223:24	3	p_libvlc
water	223:16	0:0	4	p_libvlc
arg	223:26	223:42	3	"intf-popupmenu"
water	223:26	0:0	4	"intf-popupmenu"
arg	223:44	223:57	3	VLC_VAR_BOOL
water	223:44	0:0	4	VLC_VAR_BOOL
water	223:58	0:0	2	;
call	225:4	225:58	2	var_Create
arg	225:16	225:24	3	p_libvlc
water	225:16	0:0	4	p_libvlc
arg	225:26	225:41	3	"snapshot-file"
water	225:26	0:0	4	"snapshot-file"
arg	225:43	225:58	3	VLC_VAR_STRING
water	225:43	0:0	4	VLC_VAR_STRING
water	225:59	0:0	2	;
call	226:4	226:56	2	var_Create
arg	226:16	226:24	3	p_libvlc
water	226:16	0:0	4	p_libvlc
arg	226:26	226:39	3	"record-file"
water	226:26	0:0	4	"record-file"
arg	226:41	226:56	3	VLC_VAR_STRING
water	226:41	0:0	4	VLC_VAR_STRING
water	226:57	0:0	2	;
call	228:4	228:51	2	var_Create
arg	228:16	228:24	3	p_libvlc
water	228:16	0:0	4	p_libvlc
arg	228:26	228:34	3	"window"
water	228:26	0:0	4	"window"
arg	228:36	228:51	3	VLC_VAR_STRING
water	228:36	0:0	4	VLC_VAR_STRING
water	228:52	0:0	2	;
call	233:4	233:55	2	var_Create
arg	233:16	233:24	3	p_libvlc
water	233:16	0:0	4	p_libvlc
arg	233:26	233:38	3	"user-agent"
water	233:26	0:0	4	"user-agent"
arg	233:40	233:55	3	VLC_VAR_STRING
water	233:40	0:0	4	VLC_VAR_STRING
water	233:56	0:0	2	;
call	234:4	235:57	2	var_SetString
arg	234:19	234:27	3	p_libvlc
water	234:19	0:0	4	p_libvlc
arg	234:29	234:41	3	"user-agent"
water	234:29	0:0	4	"user-agent"
arg	235:19	235:57	3	"VLC media player (LibVLC "VERSION")"
water	235:19	0:0	4	"VLC media player (LibVLC "
water	235:46	0:0	4	VERSION
water	235:53	0:0	4	")"
water	235:58	0:0	2	;
call	236:4	236:60	2	var_Create
arg	236:16	236:24	3	p_libvlc
water	236:16	0:0	4	p_libvlc
arg	236:26	236:43	3	"http-user-agent"
water	236:26	0:0	4	"http-user-agent"
arg	236:45	236:60	3	VLC_VAR_STRING
water	236:45	0:0	4	VLC_VAR_STRING
water	236:61	0:0	2	;
call	237:4	238:66	2	var_SetString
arg	237:19	237:27	3	p_libvlc
water	237:19	0:0	4	p_libvlc
arg	237:29	237:46	3	"http-user-agent"
water	237:29	0:0	4	"http-user-agent"
arg	238:19	238:66	3	"VLC/"PACKAGE_VERSION" LibVLC/"PACKAGE_VERSION
water	238:19	0:0	4	"VLC/"
water	238:25	0:0	4	PACKAGE_VERSION
water	238:40	0:0	4	" LibVLC/"
water	238:50	0:0	4	PACKAGE_VERSION
water	238:67	0:0	2	;
call	239:4	239:58	2	var_Create
arg	239:16	239:24	3	p_libvlc
water	239:16	0:0	4	p_libvlc
arg	239:26	239:41	3	"app-icon-name"
water	239:26	0:0	4	"app-icon-name"
arg	239:43	239:58	3	VLC_VAR_STRING
water	239:43	0:0	4	VLC_VAR_STRING
water	239:59	0:0	2	;
call	240:4	240:59	2	var_SetString
arg	240:19	240:27	3	p_libvlc
water	240:19	0:0	4	p_libvlc
arg	240:29	240:44	3	"app-icon-name"
water	240:29	0:0	4	"app-icon-name"
arg	240:46	240:59	3	PACKAGE_NAME
water	240:46	0:0	4	PACKAGE_NAME
water	240:60	0:0	2	;
call	241:4	241:51	2	var_Create
arg	241:16	241:24	3	p_libvlc
water	241:16	0:0	4	p_libvlc
arg	241:26	241:34	3	"app-id"
water	241:26	0:0	4	"app-id"
arg	241:36	241:51	3	VLC_VAR_STRING
water	241:36	0:0	4	VLC_VAR_STRING
water	241:52	0:0	2	;
call	242:4	242:58	2	var_SetString
arg	242:19	242:27	3	p_libvlc
water	242:19	0:0	4	p_libvlc
arg	242:29	242:37	3	"app-id"
water	242:29	0:0	4	"app-id"
arg	242:39	242:58	3	"org.VideoLAN.VLC"
water	242:39	0:0	4	"org.VideoLAN.VLC"
water	242:59	0:0	2	;
call	243:4	243:56	2	var_Create
arg	243:16	243:24	3	p_libvlc
water	243:16	0:0	4	p_libvlc
arg	243:26	243:39	3	"app-version"
water	243:26	0:0	4	"app-version"
arg	243:41	243:56	3	VLC_VAR_STRING
water	243:41	0:0	4	VLC_VAR_STRING
water	243:57	0:0	2	;
call	244:4	244:60	2	var_SetString
arg	244:19	244:27	3	p_libvlc
water	244:19	0:0	4	p_libvlc
arg	244:29	244:42	3	"app-version"
water	244:29	0:0	4	"app-version"
arg	244:44	244:60	3	PACKAGE_VERSION
water	244:44	0:0	4	PACKAGE_VERSION
water	244:61	0:0	2	;
call	246:4	246:76	2	system_Configure
arg	246:22	246:30	3	p_libvlc
water	246:22	0:0	4	p_libvlc
arg	246:32	246:51	3	i_argc-vlc_optind
water	246:32	0:0	4	i_argc
op	246:39	0:0	4	-
water	246:41	0:0	4	vlc_optind
arg	246:53	246:76	3	ppsz_argv+vlc_optind
water	246:53	0:0	4	ppsz_argv
op	246:63	0:0	4	+
water	246:65	0:0	4	vlc_optind
water	246:77	0:0	2	;
water	249:4	0:0	2	psz_parser
op	249:15	0:0	2	=
call	249:17	249:67	2	var_CreateGetNonEmptyString
arg	249:46	249:54	3	p_libvlc
water	249:46	0:0	4	p_libvlc
arg	249:56	249:67	3	"vlm-conf"
water	249:56	0:0	4	"vlm-conf"
water	249:68	0:0	2	;
if	250:4	255:4	2	(psz_parser)
cond	250:8	250:8	3	psz_parser
water	250:8	0:0	4	psz_parser
stmts	251:4	255:4	3	
water	251:4	0:0	4	{
water	252:8	0:0	4	priv
op	252:12	0:0	4	->
water	252:14	0:0	4	p_vlm
op	252:20	0:0	4	=
call	252:22	252:40	4	vlm_New
arg	252:31	252:40	5	p_libvlc
water	252:31	0:0	6	p_libvlc
water	252:41	0:0	4	;
if	253:8	254:60	4	(! priv -> p_vlm)
cond	253:12	253:19	5	! priv -> p_vlm
op	253:12	0:0	6	!
water	253:13	0:0	6	priv
op	253:17	0:0	6	->
water	253:19	0:0	6	p_vlm
stmts	254:12	254:60	5	
call	254:12	254:59	6	msg_Err
arg	254:21	254:29	7	p_libvlc
water	254:21	0:0	8	p_libvlc
arg	254:31	254:59	7	"VLM initialization failed"
water	254:31	0:0	8	"VLM initialization failed"
water	254:60	0:0	6	;
water	255:4	0:0	4	}
call	256:4	256:21	2	free
arg	256:10	256:21	3	psz_parser
water	256:10	0:0	4	psz_parser
water	256:22	0:0	2	;
water	261:4	0:0	2	psz_modules
op	261:16	0:0	2	=
call	261:18	261:69	2	var_CreateGetNonEmptyString
arg	261:47	261:55	3	p_libvlc
water	261:47	0:0	4	p_libvlc
arg	261:57	261:69	3	"extraintf"
water	261:57	0:0	4	"extraintf"
water	261:70	0:0	2	;
water	262:4	0:0	2	psz_control
op	262:16	0:0	2	=
call	262:18	262:67	2	var_CreateGetNonEmptyString
arg	262:47	262:55	3	p_libvlc
water	262:47	0:0	4	p_libvlc
arg	262:57	262:67	3	"control"
water	262:57	0:0	4	"control"
water	262:68	0:0	2	;
if	263:4	271:4	2	(psz_modules && psz_control)
cond	263:8	263:23	3	psz_modules && psz_control
water	263:8	0:0	4	psz_modules
op	263:20	0:0	4	&&
water	263:23	0:0	4	psz_control
stmts	264:4	271:4	3	
water	264:4	0:0	4	{
decl	265:8	265:21	4	char	*psz_tmp
if	266:8	270:8	4	(asprintf (& psz_tmp ,"%s:%s" ,psz_modules ,psz_control ) != - 1)
cond	266:12	266:72	5	asprintf (& psz_tmp ,"%s:%s" ,psz_modules ,psz_control ) != - 1
call	266:12	266:66	6	asprintf
arg	266:22	266:30	7	&psz_tmp
op	266:22	0:0	8	&
water	266:23	0:0	8	psz_tmp
arg	266:32	266:39	7	"%s:%s"
water	266:32	0:0	8	"%s:%s"
arg	266:41	266:52	7	psz_modules
water	266:41	0:0	8	psz_modules
arg	266:54	266:66	7	psz_control
water	266:54	0:0	8	psz_control
op	266:68	0:0	6	!=
op	266:71	0:0	6	-
water	266:72	0:0	6	1
stmts	267:8	270:8	5	
water	267:8	0:0	6	{
call	268:12	268:30	6	free
arg	268:18	268:30	7	psz_modules
water	268:18	0:0	8	psz_modules
water	268:31	0:0	6	;
water	269:12	0:0	6	psz_modules
op	269:24	0:0	6	=
water	269:26	0:0	6	psz_tmp
water	269:33	0:0	6	;
water	270:8	0:0	6	}
water	271:4	0:0	4	}
else	272:4	276:4	2
stmts	272:9	276:4	3	
if	272:9	276:4	4	(psz_control)
cond	272:13	272:13	5	psz_control
water	272:13	0:0	6	psz_control
stmts	273:4	276:4	5	
water	273:4	0:0	6	{
call	274:8	274:26	6	free
arg	274:14	274:26	7	psz_modules
water	274:14	0:0	8	psz_modules
water	274:27	0:0	6	;
water	275:8	0:0	6	psz_modules
op	275:20	0:0	6	=
call	275:22	275:42	6	strdup
arg	275:30	275:42	7	psz_control
water	275:30	0:0	8	psz_control
water	275:43	0:0	6	;
water	276:4	0:0	6	}
water	277:4	0:0	2	psz_parser
op	277:15	0:0	2	=
water	277:17	0:0	2	psz_modules
water	277:28	0:0	2	;
while	278:4	293:4	2	(psz_parser && * psz_parser)
cond	278:12	278:27	3	psz_parser && * psz_parser
water	278:12	0:0	4	psz_parser
op	278:23	0:0	4	&&
op	278:26	0:0	4	*
water	278:27	0:0	4	psz_parser
stmts	279:4	293:4	3	
water	279:4	0:0	4	{
decl	280:8	280:35	4	char	*psz_module
water	280:24	0:0	4	,
decl	280:8	280:35	4	char	*psz_temp
water	281:8	0:0	4	psz_module
op	281:19	0:0	4	=
water	281:21	0:0	4	psz_parser
water	281:31	0:0	4	;
water	282:8	0:0	4	psz_parser
op	282:19	0:0	4	=
call	282:21	282:45	4	strchr
arg	282:29	282:39	5	psz_module
water	282:29	0:0	6	psz_module
arg	282:41	282:45	5	':'
water	282:41	0:0	6	':'
water	282:46	0:0	4	;
if	283:8	287:8	4	(psz_parser)
cond	283:13	283:13	5	psz_parser
water	283:13	0:0	6	psz_parser
stmts	284:8	287:8	5	
water	284:8	0:0	6	{
op	285:12	0:0	6	*
water	285:13	0:0	6	psz_parser
op	285:24	0:0	6	=
water	285:26	0:0	6	'\0'
water	285:30	0:0	6	;
water	286:12	0:0	6	psz_parser
op	286:22	0:0	6	++
water	286:24	0:0	6	;
water	287:8	0:0	6	}
if	288:8	292:8	4	(asprintf (& psz_temp ,"%s,none" ,psz_module ) != - 1)
cond	288:12	288:61	5	asprintf (& psz_temp ,"%s,none" ,psz_module ) != - 1
call	288:12	288:55	6	asprintf
arg	288:22	288:31	7	&psz_temp
op	288:22	0:0	8	&
water	288:23	0:0	8	psz_temp
arg	288:33	288:42	7	"%s,none"
water	288:33	0:0	8	"%s,none"
arg	288:44	288:55	7	psz_module
water	288:44	0:0	8	psz_module
op	288:57	0:0	6	!=
op	288:60	0:0	6	-
water	288:61	0:0	6	1
stmts	289:8	292:8	5	
water	289:8	0:0	6	{
call	290:12	290:55	6	libvlc_InternalAddIntf
arg	290:36	290:44	7	p_libvlc
water	290:36	0:0	8	p_libvlc
arg	290:46	290:55	7	psz_temp
water	290:46	0:0	8	psz_temp
water	290:56	0:0	6	;
call	291:12	291:27	6	free
arg	291:18	291:27	7	psz_temp
water	291:18	0:0	8	psz_temp
water	291:28	0:0	6	;
water	292:8	0:0	6	}
water	293:4	0:0	4	}
call	294:4	294:22	2	free
arg	294:10	294:22	3	psz_modules
water	294:10	0:0	4	psz_modules
water	294:23	0:0	2	;
call	295:4	295:22	2	free
arg	295:10	295:22	3	psz_control
water	295:10	0:0	4	psz_control
water	295:23	0:0	2	;
if	297:4	308:4	2	(var_InheritBool (p_libvlc ,"syslog" ))
cond	297:8	297:44	3	var_InheritBool (p_libvlc ,"syslog" )
call	297:8	297:44	4	var_InheritBool
arg	297:25	297:33	5	p_libvlc
water	297:25	0:0	6	p_libvlc
arg	297:35	297:44	5	"syslog"
water	297:35	0:0	6	"syslog"
stmts	298:4	308:4	3	
water	298:4	0:0	4	{
decl	299:8	299:74	4	char	*logmode
op	299:22	0:0	4	=
call	299:24	299:73	5	var_CreateGetNonEmptyString
arg	299:53	299:61	6	p_libvlc
water	299:53	0:0	7	p_libvlc
arg	299:63	299:73	6	"logmode"
water	299:63	0:0	7	"logmode"
call	300:8	300:53	4	var_SetString
arg	300:23	300:31	5	p_libvlc
water	300:23	0:0	6	p_libvlc
arg	300:33	300:42	5	"logmode"
water	300:33	0:0	6	"logmode"
arg	300:44	300:53	5	"syslog"
water	300:44	0:0	6	"syslog"
water	300:54	0:0	4	;
call	301:8	301:56	4	libvlc_InternalAddIntf
arg	301:32	301:40	5	p_libvlc
water	301:32	0:0	6	p_libvlc
arg	301:42	301:56	5	"logger,none"
water	301:42	0:0	6	"logger,none"
water	301:57	0:0	4	;
if	302:8	306:8	4	(logmode)
cond	302:12	302:12	5	logmode
water	302:12	0:0	6	logmode
stmts	303:8	306:8	5	
water	303:8	0:0	6	{
call	304:12	304:56	6	var_SetString
arg	304:27	304:35	7	p_libvlc
water	304:27	0:0	8	p_libvlc
arg	304:37	304:46	7	"logmode"
water	304:37	0:0	8	"logmode"
arg	304:48	304:56	7	logmode
water	304:48	0:0	8	logmode
water	304:57	0:0	6	;
call	305:12	305:26	6	free
arg	305:18	305:26	7	logmode
water	305:18	0:0	8	logmode
water	305:27	0:0	6	;
water	306:8	0:0	6	}
call	307:8	307:41	4	var_Destroy
arg	307:21	307:29	5	p_libvlc
water	307:21	0:0	6	p_libvlc
arg	307:31	307:41	5	"logmode"
water	307:31	0:0	6	"logmode"
water	307:42	0:0	4	;
water	308:4	0:0	4	}
else	309:4	312:57	2
stmts	311:4	312:57	3	
if	311:4	312:57	4	(var_InheritBool (p_libvlc ,"file-logging" ))
cond	311:8	311:50	5	var_InheritBool (p_libvlc ,"file-logging" )
call	311:8	311:50	6	var_InheritBool
arg	311:25	311:33	7	p_libvlc
water	311:25	0:0	8	p_libvlc
arg	311:35	311:50	7	"file-logging"
water	311:35	0:0	8	"file-logging"
stmts	312:8	312:57	5	
call	312:8	312:56	6	libvlc_InternalAddIntf
arg	312:32	312:40	7	p_libvlc
water	312:32	0:0	8	p_libvlc
arg	312:42	312:56	7	"logger,none"
water	312:42	0:0	8	"logger,none"
water	312:57	0:0	6	;
if	313:4	314:58	2	(var_InheritBool (p_libvlc ,"network-synchronisation" ))
cond	313:8	313:60	3	var_InheritBool (p_libvlc ,"network-synchronisation" )
call	313:8	313:60	4	var_InheritBool
arg	313:25	313:33	5	p_libvlc
water	313:25	0:0	6	p_libvlc
arg	313:35	313:60	5	"network-synchronisation"
water	313:35	0:0	6	"network-synchronisation"
stmts	314:8	314:58	3	
call	314:8	314:57	4	libvlc_InternalAddIntf
arg	314:32	314:40	5	p_libvlc
water	314:32	0:0	6	p_libvlc
arg	314:42	314:57	5	"netsync,none"
water	314:42	0:0	6	"netsync,none"
water	314:58	0:0	4	;
call	316:4	316:63	2	var_Create
arg	316:16	316:24	3	p_libvlc
water	316:16	0:0	4	p_libvlc
arg	316:26	316:45	3	"drawable-view-top"
water	316:26	0:0	4	"drawable-view-top"
arg	316:47	316:63	3	VLC_VAR_INTEGER
water	316:47	0:0	4	VLC_VAR_INTEGER
water	316:64	0:0	2	;
call	317:4	317:64	2	var_Create
arg	317:16	317:24	3	p_libvlc
water	317:16	0:0	4	p_libvlc
arg	317:26	317:46	3	"drawable-view-left"
water	317:26	0:0	4	"drawable-view-left"
arg	317:48	317:64	3	VLC_VAR_INTEGER
water	317:48	0:0	4	VLC_VAR_INTEGER
water	317:65	0:0	2	;
call	318:4	318:66	2	var_Create
arg	318:16	318:24	3	p_libvlc
water	318:16	0:0	4	p_libvlc
arg	318:26	318:48	3	"drawable-view-bottom"
water	318:26	0:0	4	"drawable-view-bottom"
arg	318:50	318:66	3	VLC_VAR_INTEGER
water	318:50	0:0	4	VLC_VAR_INTEGER
water	318:67	0:0	2	;
call	319:4	319:65	2	var_Create
arg	319:16	319:24	3	p_libvlc
water	319:16	0:0	4	p_libvlc
arg	319:26	319:47	3	"drawable-view-right"
water	319:26	0:0	4	"drawable-view-right"
arg	319:49	319:65	3	VLC_VAR_INTEGER
water	319:49	0:0	4	VLC_VAR_INTEGER
water	319:66	0:0	2	;
call	320:4	320:63	2	var_Create
arg	320:16	320:24	3	p_libvlc
water	320:16	0:0	4	p_libvlc
arg	320:26	320:45	3	"drawable-clip-top"
water	320:26	0:0	4	"drawable-clip-top"
arg	320:47	320:63	3	VLC_VAR_INTEGER
water	320:47	0:0	4	VLC_VAR_INTEGER
water	320:64	0:0	2	;
call	321:4	321:64	2	var_Create
arg	321:16	321:24	3	p_libvlc
water	321:16	0:0	4	p_libvlc
arg	321:26	321:46	3	"drawable-clip-left"
water	321:26	0:0	4	"drawable-clip-left"
arg	321:48	321:64	3	VLC_VAR_INTEGER
water	321:48	0:0	4	VLC_VAR_INTEGER
water	321:65	0:0	2	;
call	322:4	322:66	2	var_Create
arg	322:16	322:24	3	p_libvlc
water	322:16	0:0	4	p_libvlc
arg	322:26	322:48	3	"drawable-clip-bottom"
water	322:26	0:0	4	"drawable-clip-bottom"
arg	322:50	322:66	3	VLC_VAR_INTEGER
water	322:50	0:0	4	VLC_VAR_INTEGER
water	322:67	0:0	2	;
call	323:4	323:65	2	var_Create
arg	323:16	323:24	3	p_libvlc
water	323:16	0:0	4	p_libvlc
arg	323:26	323:47	3	"drawable-clip-right"
water	323:26	0:0	4	"drawable-clip-right"
arg	323:49	323:65	3	VLC_VAR_INTEGER
water	323:49	0:0	4	VLC_VAR_INTEGER
water	323:66	0:0	2	;
call	324:4	324:63	2	var_Create
arg	324:16	324:24	3	p_libvlc
water	324:16	0:0	4	p_libvlc
arg	324:26	324:45	3	"drawable-nsobject"
water	324:26	0:0	4	"drawable-nsobject"
arg	324:47	324:63	3	VLC_VAR_ADDRESS
water	324:47	0:0	4	VLC_VAR_ADDRESS
water	324:64	0:0	2	;
call	327:4	327:59	2	var_Create
arg	327:16	327:24	3	p_libvlc
water	327:16	0:0	4	p_libvlc
arg	327:26	327:41	3	"drawable-hwnd"
water	327:26	0:0	4	"drawable-hwnd"
arg	327:43	327:59	3	VLC_VAR_INTEGER
water	327:43	0:0	4	VLC_VAR_INTEGER
water	327:60	0:0	2	;
call	334:4	334:72	2	GetFilenames
arg	334:18	334:26	3	p_libvlc
water	334:18	0:0	4	p_libvlc
arg	334:28	334:47	3	i_argc-vlc_optind
water	334:28	0:0	4	i_argc
op	334:35	0:0	4	-
water	334:37	0:0	4	vlc_optind
arg	334:49	334:72	3	ppsz_argv+vlc_optind
water	334:49	0:0	4	ppsz_argv
op	334:59	0:0	4	+
water	334:61	0:0	4	vlc_optind
water	334:73	0:0	2	;
water	338:4	0:0	2	psz_val
op	338:12	0:0	2	=
call	338:14	338:50	2	var_InheritString
arg	338:33	338:41	3	p_libvlc
water	338:33	0:0	4	p_libvlc
arg	338:43	338:50	3	"open"
water	338:43	0:0	4	"open"
water	338:51	0:0	2	;
if	339:4	343:4	2	(psz_val != NULL)
cond	339:9	339:20	3	psz_val != NULL
water	339:9	0:0	4	psz_val
op	339:17	0:0	4	!=
water	339:20	0:0	4	NULL
stmts	340:4	343:4	3	
water	340:4	0:0	4	{
call	341:8	341:55	4	intf_InsertItem
arg	341:25	341:33	5	p_libvlc
water	341:25	0:0	6	p_libvlc
arg	341:35	341:42	5	psz_val
water	341:35	0:0	6	psz_val
arg	341:44	341:45	5	0
water	341:44	0:0	6	0
arg	341:47	341:51	5	NULL
water	341:47	0:0	6	NULL
arg	341:53	341:55	5	0
water	341:53	0:0	6	0
water	341:56	0:0	4	;
call	342:8	342:22	4	free
arg	342:14	342:22	5	psz_val
water	342:14	0:0	6	psz_val
water	342:23	0:0	4	;
water	343:4	0:0	4	}
return	344:4	344:22	2	VLC_SUCCESS
water	344:11	0:0	3	VLC_SUCCESS

func	2:0	42:0	0	void	SAP_Del
params	2:13	0:0	1	
param	2:14	2:34	2	sap_handler_t *	p_sap
param	2:36	2:73	2	const session_descriptor_t *	p_session
stmnts	4:4	41:18	1	
call	4:4	4:32	2	vlc_mutex_lock
arg	4:20	4:32	3	&p_sap->lock
op	4:20	0:0	4	&
water	4:21	0:0	4	p_sap
op	4:26	0:0	4	->
water	4:28	0:0	4	lock
water	4:33	0:0	2	;
decl	6:4	6:32	2	sap_address_t	*addr
water	6:23	0:0	2	,
decl	6:4	6:32	2	sap_address_t	**paddr
decl	7:4	7:38	2	sap_session_t	*session
water	7:26	0:0	2	,
decl	7:4	7:38	2	sap_session_t	**psession
water	8:4	0:0	2	paddr
op	8:10	0:0	2	=
op	8:12	0:0	2	&
water	8:13	0:0	2	p_sap
op	8:18	0:0	2	->
water	8:20	0:0	2	first
water	8:25	0:0	2	;
for	9:4	21:4	2	(addr = p_sap -> first ;addr;addr = addr -> next)
forinit	9:9	9:28	3	addr = p_sap -> first ;
water	9:9	0:0	4	addr
op	9:14	0:0	4	=
water	9:16	0:0	4	p_sap
op	9:21	0:0	4	->
water	9:23	0:0	4	first
water	9:28	0:0	4	;
cond	9:30	9:30	3	addr
water	9:30	0:0	4	addr
forexpr	9:36	9:49	3	addr = addr -> next
water	9:36	0:0	4	addr
op	9:41	0:0	4	=
water	9:43	0:0	4	addr
op	9:47	0:0	4	->
water	9:49	0:0	4	next
stmts	10:4	21:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	psession
op	11:17	0:0	4	=
op	11:19	0:0	4	&
water	11:20	0:0	4	addr
op	11:24	0:0	4	->
water	11:26	0:0	4	first
water	11:31	0:0	4	;
call	12:8	12:35	4	vlc_mutex_lock
arg	12:24	12:35	5	&addr->lock
op	12:24	0:0	6	&
water	12:25	0:0	6	addr
op	12:29	0:0	6	->
water	12:31	0:0	6	lock
water	12:36	0:0	4	;
for	13:8	18:8	4	(session = addr -> first ;session;session = session -> next)
forinit	13:13	13:34	5	session = addr -> first ;
water	13:13	0:0	6	session
op	13:21	0:0	6	=
water	13:23	0:0	6	addr
op	13:27	0:0	6	->
water	13:29	0:0	6	first
water	13:34	0:0	6	;
cond	13:36	13:36	5	session
water	13:36	0:0	6	session
forexpr	13:45	13:64	5	session = session -> next
water	13:45	0:0	6	session
op	13:53	0:0	6	=
water	13:55	0:0	6	session
op	13:62	0:0	6	->
water	13:64	0:0	6	next
stmts	14:8	18:8	5	
water	14:8	0:0	6	{
if	15:12	16:26	6	(session -> p_sd == p_session)
cond	15:16	15:33	7	session -> p_sd == p_session
water	15:16	0:0	8	session
op	15:23	0:0	8	->
water	15:25	0:0	8	p_sd
op	15:30	0:0	8	==
water	15:33	0:0	8	p_session
stmts	16:16	16:26	7	
goto	16:16	16:26	8	found
water	16:21	0:0	9	found
water	17:12	0:0	6	psession
op	17:21	0:0	6	=
op	17:23	0:0	6	&
water	17:24	0:0	6	session
op	17:31	0:0	6	->
water	17:33	0:0	6	next
water	17:37	0:0	6	;
water	18:8	0:0	6	}
call	19:8	19:37	4	vlc_mutex_unlock
arg	19:26	19:37	5	&addr->lock
op	19:26	0:0	6	&
water	19:27	0:0	6	addr
op	19:31	0:0	6	->
water	19:33	0:0	6	lock
water	19:38	0:0	4	;
water	20:8	0:0	4	paddr
op	20:14	0:0	4	=
op	20:16	0:0	4	&
water	20:17	0:0	4	addr
op	20:21	0:0	4	->
water	20:23	0:0	4	next
water	20:27	0:0	4	;
water	21:4	0:0	4	}
call	22:4	22:13	2	assert
arg	22:12	22:13	3	0
water	22:12	0:0	4	0
water	22:14	0:0	2	;
label	23:0	23:5	2	found :
op	24:4	0:0	2	*
water	24:5	0:0	2	psession
op	24:14	0:0	2	=
water	24:16	0:0	2	session
op	24:23	0:0	2	->
water	24:25	0:0	2	next
water	24:29	0:0	2	;
if	25:4	27:27	2	(addr -> first == NULL)
cond	25:8	25:23	3	addr -> first == NULL
water	25:8	0:0	4	addr
op	25:12	0:0	4	->
water	25:14	0:0	4	first
op	25:20	0:0	4	==
water	25:23	0:0	4	NULL
stmts	27:8	27:27	3	
op	27:8	0:0	4	*
water	27:9	0:0	4	paddr
op	27:15	0:0	4	=
water	27:17	0:0	4	addr
op	27:21	0:0	4	->
water	27:23	0:0	4	next
water	27:27	0:0	4	;
call	28:4	28:34	2	vlc_mutex_unlock
arg	28:22	28:34	3	&p_sap->lock
op	28:22	0:0	4	&
water	28:23	0:0	4	p_sap
op	28:28	0:0	4	->
water	28:30	0:0	4	lock
water	28:35	0:0	2	;
if	29:4	34:4	2	(addr -> first == NULL)
cond	29:8	29:23	3	addr -> first == NULL
water	29:8	0:0	4	addr
op	29:12	0:0	4	->
water	29:14	0:0	4	first
op	29:20	0:0	4	==
water	29:23	0:0	4	NULL
stmts	30:4	34:4	3	
water	30:4	0:0	4	{
call	32:8	32:37	4	vlc_mutex_unlock
arg	32:26	32:37	5	&addr->lock
op	32:26	0:0	6	&
water	32:27	0:0	6	addr
op	32:31	0:0	6	->
water	32:33	0:0	6	lock
water	32:38	0:0	4	;
call	33:8	33:28	4	AddressDestroy
arg	33:24	33:28	5	addr
water	33:24	0:0	6	addr
water	33:29	0:0	4	;
water	34:4	0:0	4	}
else	35:4	40:4	2
stmts	36:4	40:4	3	
water	36:4	0:0	4	{
water	37:8	0:0	4	addr
op	37:12	0:0	4	->
water	37:14	0:0	4	session_count
op	37:27	0:0	4	--
water	37:29	0:0	4	;
call	38:8	38:36	4	vlc_cond_signal
arg	38:25	38:36	5	&addr->wait
op	38:25	0:0	6	&
water	38:26	0:0	6	addr
op	38:30	0:0	6	->
water	38:32	0:0	6	wait
water	38:37	0:0	4	;
call	39:8	39:37	4	vlc_mutex_unlock
arg	39:26	39:37	5	&addr->lock
op	39:26	0:0	6	&
water	39:27	0:0	6	addr
op	39:31	0:0	6	->
water	39:33	0:0	6	lock
water	39:38	0:0	4	;
water	40:4	0:0	4	}
call	41:4	41:17	2	free
arg	41:10	41:17	3	session
water	41:10	0:0	4	session
water	41:18	0:0	2	;

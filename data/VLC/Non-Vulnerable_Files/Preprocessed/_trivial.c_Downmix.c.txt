func	2:0	17:0	0	static block_t *	Downmix
params	2:23	0:0	1	
param	2:25	2:43	2	filter_t *	p_filter
param	2:45	2:60	2	block_t *	p_buf
stmnts	4:4	16:16	1	
water	4:4	0:0	2	unsigned
water	4:13	0:0	2	i_input_nb
op	4:24	0:0	2	=
call	4:26	4:73	2	aout_FormatNbChannels
arg	4:49	4:73	3	&p_filter->fmt_in.audio
op	4:49	0:0	4	&
water	4:50	0:0	4	p_filter
op	4:58	0:0	4	->
water	4:60	0:0	4	fmt_in
op	4:66	0:0	4	.
water	4:67	0:0	4	audio
water	4:74	0:0	2	;
water	5:4	0:0	2	unsigned
water	5:13	0:0	2	i_output_nb
op	5:25	0:0	2	=
call	5:27	5:75	2	aout_FormatNbChannels
arg	5:50	5:75	3	&p_filter->fmt_out.audio
op	5:50	0:0	4	&
water	5:51	0:0	4	p_filter
op	5:59	0:0	4	->
water	5:61	0:0	4	fmt_out
op	5:68	0:0	4	.
water	5:69	0:0	4	audio
water	5:76	0:0	2	;
call	6:4	6:38	2	assert
arg	6:12	6:38	3	i_input_nb>=i_output_nb
water	6:12	0:0	4	i_input_nb
op	6:23	0:0	4	>=
water	6:26	0:0	4	i_output_nb
water	6:39	0:0	2	;
decl	7:4	7:44	2	float	*p_dest
op	7:18	0:0	2	=
water	7:20	0:0	2	(
water	7:21	0:0	2	float
op	7:27	0:0	2	*
water	7:28	0:0	2	)
water	7:29	0:0	2	p_buf
op	7:34	0:0	2	->
water	7:36	0:0	2	p_buffer
decl	8:4	8:31	2	const float	*p_src
op	8:23	0:0	2	=
water	8:25	0:0	2	p_dest
for	9:4	15:4	2	( size_t i = 0 ;i < p_buf -> i_nb_samples;i ++)
forinit	0:0	9:21	3	 size_t i = 0 ;
decl	9:9	9:21	4	size_t	i
op	9:18	0:0	4	=
water	9:20	0:0	4	0
cond	9:23	9:34	3	i < p_buf -> i_nb_samples
water	9:23	0:0	4	i
op	9:25	0:0	4	<
water	9:27	0:0	4	p_buf
op	9:32	0:0	4	->
water	9:34	0:0	4	i_nb_samples
forexpr	9:48	9:49	3	i ++
water	9:48	0:0	4	i
op	9:49	0:0	4	++
stmts	10:4	15:4	3	
water	10:4	0:0	4	{
for	11:8	12:32	4	(unsigned j = 0 ;j < i_output_nb;j ++)
forinit	11:13	11:27	5	unsigned j = 0 ;
water	11:13	0:0	6	unsigned
water	11:22	0:0	6	j
op	11:24	0:0	6	=
water	11:26	0:0	6	0
water	11:27	0:0	6	;
cond	11:29	11:33	5	j < i_output_nb
water	11:29	0:0	6	j
op	11:31	0:0	6	<
water	11:33	0:0	6	i_output_nb
forexpr	11:46	11:47	5	j ++
water	11:46	0:0	6	j
op	11:47	0:0	6	++
stmts	12:12	12:32	5	
water	12:12	0:0	6	p_dest
op	12:18	0:0	6	[
water	12:19	0:0	6	j
op	12:20	0:0	6	]
op	12:22	0:0	6	=
water	12:24	0:0	6	p_src
op	12:29	0:0	6	[
water	12:30	0:0	6	j
op	12:31	0:0	6	]
water	12:32	0:0	6	;
water	13:8	0:0	4	p_src
op	13:14	0:0	4	+=
water	13:17	0:0	4	i_input_nb
water	13:27	0:0	4	;
water	14:8	0:0	4	p_dest
op	14:15	0:0	4	+=
water	14:18	0:0	4	i_output_nb
water	14:29	0:0	4	;
water	15:4	0:0	4	}
return	16:4	16:16	2	p_buf
water	16:11	0:0	3	p_buf

func	2:0	204:0	0	static int	Open
params	2:16	0:0	1	
param	2:17	2:34	2	vlc_object_t *	obj
stmnts	0:0	203:23	1	
decl	4:4	4:46	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:41	0:0	2	*
water	4:42	0:0	2	)
water	4:43	0:0	2	obj
decl	5:4	5:29	2	vout_display_sys_t	*p_sys
if	6:4	7:27	2	(!var_InheritBool (obj ,"overlay" ))
cond	6:8	6:40	3	!var_InheritBool (obj ,"overlay" )
op	6:8	0:0	4	!
call	6:9	6:40	4	var_InheritBool
arg	6:26	6:29	5	obj
water	6:26	0:0	6	obj
arg	6:31	6:40	5	"overlay"
water	6:31	0:0	6	"overlay"
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
else	8:4	14:4	2
stmts	9:4	14:4	3	
water	9:4	0:0	4	{
decl	10:8	11:64	4	const vlc_chroma_description_t	*chroma
op	10:47	0:0	4	=
call	11:12	11:63	5	vlc_fourcc_GetChromaDescription
arg	11:44	11:63	6	vd->source.i_chroma
water	11:44	0:0	7	vd
op	11:46	0:0	7	->
water	11:48	0:0	7	source
op	11:54	0:0	7	.
water	11:55	0:0	7	i_chroma
if	12:8	13:31	4	(chroma != NULL && chroma -> plane_count == 0)
cond	12:12	12:53	5	chroma != NULL && chroma -> plane_count == 0
water	12:12	0:0	6	chroma
op	12:19	0:0	6	!=
water	12:22	0:0	6	NULL
op	12:27	0:0	6	&&
water	12:30	0:0	6	chroma
op	12:36	0:0	6	->
water	12:38	0:0	6	plane_count
op	12:50	0:0	6	==
water	12:53	0:0	6	0
stmts	13:12	13:31	5	
return	13:12	13:31	6	VLC_EGENERIC
water	13:19	0:0	7	VLC_EGENERIC
water	14:4	0:0	4	}
water	15:4	0:0	2	p_sys
op	15:10	0:0	2	=
call	15:12	15:35	2	malloc
arg	15:20	15:35	3	sizeof(*p_sys)
op	15:20	0:0	4	sizeof
water	15:27	0:0	4	(
op	15:28	0:0	4	*
water	15:29	0:0	4	p_sys
water	15:34	0:0	4	)
water	15:36	0:0	2	;
if	16:4	17:25	2	(p_sys == NULL)
cond	16:8	16:17	3	p_sys == NULL
water	16:8	0:0	4	p_sys
op	16:14	0:0	4	==
water	16:17	0:0	4	NULL
stmts	17:8	17:25	3	
return	17:8	17:25	4	VLC_ENOMEM
water	17:15	0:0	5	VLC_ENOMEM
water	18:4	0:0	2	vd
op	18:6	0:0	2	->
water	18:8	0:0	2	sys
op	18:12	0:0	2	=
water	18:14	0:0	2	p_sys
water	18:19	0:0	2	;
decl	20:4	20:26	2	xcb_connection_t	*conn
decl	21:4	21:30	2	const xcb_screen_t	*screen
decl	22:4	22:26	2	uint16_t	width
water	22:18	0:0	2	,
decl	22:4	22:26	2	uint16_t	height
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	embed
op	23:17	0:0	2	=
call	23:19	23:73	2	XCB_parent_Create
arg	23:38	23:40	3	vd
water	23:38	0:0	4	vd
arg	23:42	23:47	3	&conn
op	23:42	0:0	4	&
water	23:43	0:0	4	conn
arg	23:49	23:56	3	&screen
op	23:49	0:0	4	&
water	23:50	0:0	4	screen
arg	23:58	23:64	3	&width
op	23:58	0:0	4	&
water	23:59	0:0	4	width
arg	23:66	23:73	3	&height
op	23:66	0:0	4	&
water	23:67	0:0	4	height
water	23:74	0:0	2	;
if	24:4	28:4	2	(p_sys -> embed == NULL)
cond	24:8	24:24	3	p_sys -> embed == NULL
water	24:8	0:0	4	p_sys
op	24:13	0:0	4	->
water	24:15	0:0	4	embed
op	24:21	0:0	4	==
water	24:24	0:0	4	NULL
stmts	25:4	28:4	3	
water	25:4	0:0	4	{
call	26:8	26:19	4	free
arg	26:14	26:19	5	p_sys
water	26:14	0:0	6	p_sys
water	26:20	0:0	4	;
return	27:8	27:27	4	VLC_EGENERIC
water	27:15	0:0	5	VLC_EGENERIC
water	28:4	0:0	4	}
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	conn
op	29:16	0:0	2	=
water	29:18	0:0	2	conn
water	29:22	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	att
op	30:15	0:0	2	=
water	30:17	0:0	2	NULL
water	30:21	0:0	2	;
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	pool
op	31:16	0:0	2	=
water	31:18	0:0	2	NULL
water	31:22	0:0	2	;
if	32:4	36:4	2	(!CheckXVideo (vd ,conn ))
cond	32:8	32:30	3	!CheckXVideo (vd ,conn )
op	32:8	0:0	4	!
call	32:9	32:30	4	CheckXVideo
arg	32:22	32:24	5	vd
water	32:22	0:0	6	vd
arg	32:26	32:30	5	conn
water	32:26	0:0	6	conn
stmts	33:4	36:4	3	
water	33:4	0:0	4	{
call	34:8	34:73	4	msg_Warn
arg	34:18	34:20	5	vd
water	34:18	0:0	6	vd
arg	34:22	34:73	5	"Please enable XVideo 2.2 for faster video display"
water	34:22	0:0	6	"Please enable XVideo 2.2 for faster video display"
water	34:74	0:0	4	;
goto	35:8	35:18	4	error
water	35:13	0:0	5	error
water	36:4	0:0	4	}
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	window
op	37:18	0:0	2	=
call	37:20	37:41	2	xcb_generate_id
arg	37:37	37:41	3	conn
water	37:37	0:0	4	conn
water	37:42	0:0	2	;
decl	38:4	38:48	2	xcb_pixmap_t	pixmap
op	38:24	0:0	2	=
call	38:26	38:47	3	xcb_generate_id
arg	38:43	38:47	4	conn
water	38:43	0:0	5	conn
decl	40:4	42:73	2	xcb_xv_query_adaptors_reply_t	*adaptors
op	40:44	0:0	2	=
call	41:8	42:72	3	xcb_xv_query_adaptors_reply
arg	41:37	41:41	4	conn
water	41:37	0:0	5	conn
arg	42:12	42:66	4	xcb_xv_query_adaptors(conn,p_sys->embed->handle.xid)
call	42:12	42:65	5	xcb_xv_query_adaptors
arg	42:35	42:39	6	conn
water	42:35	0:0	7	conn
arg	42:41	42:65	6	p_sys->embed->handle.xid
water	42:41	0:0	7	p_sys
op	42:46	0:0	7	->
water	42:48	0:0	7	embed
op	42:53	0:0	7	->
water	42:55	0:0	7	handle
op	42:61	0:0	7	.
water	42:62	0:0	7	xid
arg	42:68	42:72	4	NULL
water	42:68	0:0	5	NULL
if	43:4	44:18	2	(adaptors == NULL)
cond	43:8	43:20	3	adaptors == NULL
water	43:8	0:0	4	adaptors
op	43:17	0:0	4	==
water	43:20	0:0	4	NULL
stmts	44:8	44:18	3	
goto	44:8	44:18	4	error
water	44:13	0:0	5	error
decl	45:4	45:69	2	int	adaptor_selected
op	45:25	0:0	2	=
call	45:27	45:68	3	var_InheritInteger
arg	45:47	45:50	4	obj
water	45:47	0:0	5	obj
arg	45:52	45:68	4	"xvideo-adaptor"
water	45:52	0:0	5	"xvideo-adaptor"
decl	46:4	46:28	2	int	adaptor_current
op	46:24	0:0	2	=
op	46:26	0:0	2	-
water	46:27	0:0	2	1
decl	48:4	48:22	2	video_format_t	fmt
decl	49:4	49:30	2	vout_display_place_t	place
water	50:4	0:0	2	p_sys
op	50:9	0:0	2	->
water	50:11	0:0	2	port
op	50:16	0:0	2	=
water	50:18	0:0	2	0
water	50:19	0:0	2	;
call	51:4	51:66	2	vout_display_PlacePicture
arg	51:31	51:37	3	&place
op	51:31	0:0	4	&
water	51:32	0:0	4	place
arg	51:39	51:50	3	&vd->source
op	51:39	0:0	4	&
water	51:40	0:0	4	vd
op	51:42	0:0	4	->
water	51:44	0:0	4	source
arg	51:52	51:59	3	vd->cfg
water	51:52	0:0	4	vd
op	51:54	0:0	4	->
water	51:56	0:0	4	cfg
arg	51:61	51:66	3	false
water	51:61	0:0	4	false
water	51:67	0:0	2	;
water	52:4	0:0	2	p_sys
op	52:9	0:0	2	->
water	52:11	0:0	2	width
op	52:18	0:0	2	=
water	52:20	0:0	2	place
op	52:25	0:0	2	.
water	52:26	0:0	2	width
water	52:31	0:0	2	;
water	53:4	0:0	2	p_sys
op	53:9	0:0	2	->
water	53:11	0:0	2	height
op	53:18	0:0	2	=
water	53:20	0:0	2	place
op	53:25	0:0	2	.
water	53:26	0:0	2	height
water	53:32	0:0	2	;
decl	54:4	54:37	2	xcb_xv_adaptor_info_iterator_t	it
for	55:4	144:4	2	(it =xcb_xv_query_adaptors_info_iterator (adaptors ) ;it . rem > 0;xcb_xv_adaptor_info_next (& it ))
forinit	55:9	55:60	3	it =xcb_xv_query_adaptors_info_iterator (adaptors ) ;
water	55:9	0:0	4	it
op	55:12	0:0	4	=
call	55:14	55:59	4	xcb_xv_query_adaptors_info_iterator
arg	55:51	55:59	5	adaptors
water	55:51	0:0	6	adaptors
water	55:60	0:0	4	;
cond	56:9	56:18	3	it . rem > 0
water	56:9	0:0	4	it
op	56:11	0:0	4	.
water	56:12	0:0	4	rem
op	56:16	0:0	4	>
water	56:18	0:0	4	0
forexpr	57:9	57:38	3	xcb_xv_adaptor_info_next (& it )
call	57:9	57:38	4	xcb_xv_adaptor_info_next
arg	57:35	57:38	5	&it
op	57:35	0:0	6	&
water	57:36	0:0	6	it
stmts	58:4	144:4	3	
water	58:4	0:0	4	{
decl	59:8	59:48	4	const xcb_xv_adaptor_info_t	*a
op	59:39	0:0	4	=
water	59:41	0:0	4	it
op	59:43	0:0	4	.
water	59:44	0:0	4	data
water	60:8	0:0	4	adaptor_current
op	60:23	0:0	4	++
water	60:25	0:0	4	;
if	61:8	62:20	4	(adaptor_selected != - 1 && adaptor_selected != adaptor_current)
cond	61:12	61:58	5	adaptor_selected != - 1 && adaptor_selected != adaptor_current
water	61:12	0:0	6	adaptor_selected
op	61:29	0:0	6	!=
op	61:32	0:0	6	-
water	61:33	0:0	6	1
op	61:35	0:0	6	&&
water	61:38	0:0	6	adaptor_selected
op	61:55	0:0	6	!=
water	61:58	0:0	6	adaptor_current
stmts	62:12	62:20	5	
continue	62:12	62:20	6	
if	63:8	65:20	4	(! ( a -> type & XCB_XV_TYPE_INPUT_MASK ) || ! ( a -> type & XCB_XV_TYPE_IMAGE_MASK ))
cond	63:12	64:46	5	! ( a -> type & XCB_XV_TYPE_INPUT_MASK ) || ! ( a -> type & XCB_XV_TYPE_IMAGE_MASK )
op	63:12	0:0	6	!
water	63:13	0:0	6	(
water	63:14	0:0	6	a
op	63:15	0:0	6	->
water	63:17	0:0	6	type
op	63:22	0:0	6	&
water	63:24	0:0	6	XCB_XV_TYPE_INPUT_MASK
water	63:46	0:0	6	)
op	64:9	0:0	6	||
op	64:12	0:0	6	!
water	64:13	0:0	6	(
water	64:14	0:0	6	a
op	64:15	0:0	6	->
water	64:17	0:0	6	type
op	64:22	0:0	6	&
water	64:24	0:0	6	XCB_XV_TYPE_IMAGE_MASK
water	64:46	0:0	6	)
stmts	65:12	65:20	5	
continue	65:12	65:20	6	
call	67:8	67:49	4	video_format_ApplyRotation
arg	67:35	67:39	5	&fmt
op	67:35	0:0	6	&
water	67:36	0:0	6	fmt
arg	67:41	67:49	5	&vd->fmt
op	67:41	0:0	6	&
water	67:42	0:0	6	vd
op	67:44	0:0	6	->
water	67:46	0:0	6	fmt
water	67:50	0:0	4	;
call	68:8	68:24	4	free
arg	68:14	68:24	5	p_sys->att
water	68:14	0:0	6	p_sys
op	68:19	0:0	6	->
water	68:21	0:0	6	att
water	68:25	0:0	4	;
water	69:8	0:0	4	p_sys
op	69:13	0:0	4	->
water	69:15	0:0	4	att
op	69:19	0:0	4	=
call	69:21	69:63	4	FindFormat
arg	69:33	69:36	5	obj
water	69:33	0:0	6	obj
arg	69:38	69:42	5	conn
water	69:38	0:0	6	conn
arg	69:44	69:48	5	&fmt
op	69:44	0:0	6	&
water	69:45	0:0	6	fmt
arg	69:50	69:51	5	a
water	69:50	0:0	6	a
arg	69:53	69:63	5	&p_sys->id
op	69:53	0:0	6	&
water	69:54	0:0	6	p_sys
op	69:59	0:0	6	->
water	69:61	0:0	6	id
water	69:64	0:0	4	;
if	70:8	71:20	4	(p_sys -> att == NULL)
cond	70:12	70:26	5	p_sys -> att == NULL
water	70:12	0:0	6	p_sys
op	70:17	0:0	6	->
water	70:19	0:0	6	att
op	70:23	0:0	6	==
water	70:26	0:0	6	NULL
stmts	71:12	71:20	5	
continue	71:12	71:20	6	
for	73:8	88:8	4	(unsigned i = 0 ;i < a -> num_ports;i ++)
forinit	73:13	73:27	5	unsigned i = 0 ;
water	73:13	0:0	6	unsigned
water	73:22	0:0	6	i
op	73:24	0:0	6	=
water	73:26	0:0	6	0
water	73:27	0:0	6	;
cond	73:29	73:36	5	i < a -> num_ports
water	73:29	0:0	6	i
op	73:31	0:0	6	<
water	73:33	0:0	6	a
op	73:34	0:0	6	->
water	73:36	0:0	6	num_ports
forexpr	73:47	73:48	5	i ++
water	73:47	0:0	6	i
op	73:48	0:0	6	++
stmts	74:8	88:8	5	
water	74:8	0:0	6	{
decl	75:13	75:48	6	xcb_xv_port_t	port
op	75:32	0:0	6	=
water	75:34	0:0	6	a
op	75:35	0:0	6	->
water	75:37	0:0	6	base_id
op	75:45	0:0	6	+
water	75:47	0:0	6	i
decl	76:13	78:75	6	xcb_xv_grab_port_reply_t	*gr
op	76:42	0:0	6	=
call	77:17	78:74	7	xcb_xv_grab_port_reply
arg	77:41	77:45	8	conn
water	77:41	0:0	9	conn
arg	78:21	78:68	8	xcb_xv_grab_port(conn,port,XCB_CURRENT_TIME)
call	78:21	78:67	9	xcb_xv_grab_port
arg	78:39	78:43	10	conn
water	78:39	0:0	11	conn
arg	78:45	78:49	10	port
water	78:45	0:0	11	port
arg	78:51	78:67	10	XCB_CURRENT_TIME
water	78:51	0:0	11	XCB_CURRENT_TIME
arg	78:70	78:74	8	NULL
water	78:70	0:0	9	NULL
decl	79:13	79:52	6	uint8_t	result
op	79:28	0:0	6	=
water	79:30	0:0	6	gr
water	79:33	0:0	6	?
water	79:35	0:0	6	gr
op	79:37	0:0	6	->
water	79:39	0:0	6	result
water	79:46	0:0	6	:
water	79:48	0:0	6	0
water	79:49	0:0	6	xff
call	80:13	80:21	6	free
arg	80:19	80:21	7	gr
water	80:19	0:0	8	gr
water	80:22	0:0	6	;
if	81:13	85:13	6	(result == 0)
cond	81:17	81:27	7	result == 0
water	81:17	0:0	8	result
op	81:24	0:0	8	==
water	81:27	0:0	8	0
stmts	82:13	85:13	7	
water	82:13	0:0	8	{
water	83:17	0:0	8	p_sys
op	83:22	0:0	8	->
water	83:24	0:0	8	port
op	83:29	0:0	8	=
water	83:31	0:0	8	port
water	83:35	0:0	8	;
goto	84:17	84:34	8	grabbed_port
water	84:22	0:0	9	grabbed_port
water	85:13	0:0	8	}
call	86:13	87:28	6	msg_Dbg
arg	86:22	86:24	7	vd
water	86:22	0:0	8	vd
arg	86:26	86:71	7	"cannot grab port %"PRIu32": Xv error %"PRIu8
water	86:26	0:0	8	"cannot grab port %"
water	86:46	0:0	8	PRIu32
water	86:52	0:0	8	": Xv error %"
water	86:66	0:0	8	PRIu8
arg	86:73	86:77	7	port
water	86:73	0:0	8	port
arg	87:22	87:28	7	result
water	87:22	0:0	8	result
water	87:29	0:0	6	;
water	88:8	0:0	6	}
continue	89:8	89:16	4	
label	90:4	90:16	4	grabbed_port :
call	92:8	93:45	4	msg_Dbg
arg	92:17	92:19	5	vd
water	92:17	0:0	6	vd
arg	92:21	92:41	5	"using adaptor %.*s"
water	92:21	0:0	6	"using adaptor %.*s"
arg	92:43	92:60	5	(int)a->name_size
water	92:43	0:0	6	(
water	92:44	0:0	6	int
water	92:47	0:0	6	)
water	92:48	0:0	6	a
op	92:49	0:0	6	->
water	92:51	0:0	6	name_size
arg	93:17	93:45	5	xcb_xv_adaptor_info_name(a)
call	93:17	93:44	6	xcb_xv_adaptor_info_name
arg	93:43	93:44	7	a
water	93:43	0:0	8	a
water	93:46	0:0	4	;
call	94:8	94:54	4	msg_Dbg
arg	94:17	94:19	5	vd
water	94:17	0:0	6	vd
arg	94:21	94:41	5	"using port %"PRIu32
water	94:21	0:0	6	"using port %"
water	94:35	0:0	6	PRIu32
arg	94:43	94:54	5	p_sys->port
water	94:43	0:0	6	p_sys
op	94:48	0:0	6	->
water	94:50	0:0	6	port
water	94:55	0:0	4	;
call	95:8	95:62	4	msg_Dbg
arg	95:17	95:19	5	vd
water	95:17	0:0	6	vd
arg	95:21	95:51	5	"using image format 0x%"PRIx32
water	95:21	0:0	6	"using image format 0x%"
water	95:45	0:0	6	PRIx32
arg	95:53	95:62	5	p_sys->id
water	95:53	0:0	6	p_sys
op	95:58	0:0	6	->
water	95:60	0:0	6	id
water	95:63	0:0	4	;
decl	97:8	97:60	4	xcb_xv_format_t	*f
op	97:27	0:0	4	=
call	97:29	97:59	5	xcb_xv_adaptor_info_formats
arg	97:58	97:59	6	a
water	97:58	0:0	7	a
for	98:8	137:8	4	( uint_fast16_t i = a -> num_formats ;i > 0;i -- , f ++)
forinit	0:0	98:45	5	 uint_fast16_t i = a -> num_formats ;
decl	98:13	98:45	6	uint_fast16_t	i
op	98:29	0:0	6	=
water	98:31	0:0	6	a
op	98:32	0:0	6	->
water	98:34	0:0	6	num_formats
cond	98:47	98:51	5	i > 0
water	98:47	0:0	6	i
op	98:49	0:0	6	>
water	98:51	0:0	6	0
forexpr	98:54	98:60	5	i -- , f ++
water	98:54	0:0	6	i
op	98:55	0:0	6	--
water	98:57	0:0	6	,
water	98:59	0:0	6	f
op	98:60	0:0	6	++
stmts	99:8	137:8	5	
water	99:8	0:0	6	{
if	100:12	101:24	6	(f -> depth != screen -> root_depth)
cond	100:16	100:36	7	f -> depth != screen -> root_depth
water	100:16	0:0	8	f
op	100:17	0:0	8	->
water	100:19	0:0	8	depth
op	100:25	0:0	8	!=
water	100:28	0:0	8	screen
op	100:34	0:0	8	->
water	100:36	0:0	8	root_depth
stmts	101:16	101:24	7	
continue	101:16	101:24	8	
decl	102:12	108:31	6	uint32_t	mask
op	102:26	0:0	6	=
water	103:16	0:0	6	XCB_CW_BACK_PIXMAP
op	103:35	0:0	6	|
water	104:16	0:0	6	XCB_CW_BACK_PIXEL
op	104:34	0:0	6	|
water	105:16	0:0	6	XCB_CW_BORDER_PIXMAP
op	105:37	0:0	6	|
water	106:16	0:0	6	XCB_CW_BORDER_PIXEL
op	106:36	0:0	6	|
water	107:16	0:0	6	XCB_CW_EVENT_MASK
op	107:34	0:0	6	|
water	108:16	0:0	6	XCB_CW_COLORMAP
decl	109:12	122:13	6	const uint32_t	list[]
op	109:34	0:0	6	=
water	109:36	0:0	6	{
water	111:16	0:0	6	pixmap
water	111:22	0:0	6	,
water	113:16	0:0	6	screen
op	113:22	0:0	6	->
water	113:24	0:0	6	black_pixel
water	113:35	0:0	6	,
water	115:16	0:0	6	pixmap
water	115:22	0:0	6	,
water	117:16	0:0	6	screen
op	117:22	0:0	6	->
water	117:24	0:0	6	black_pixel
water	117:35	0:0	6	,
water	119:16	0:0	6	XCB_EVENT_MASK_VISIBILITY_CHANGE
water	119:48	0:0	6	,
water	121:16	0:0	6	screen
op	121:22	0:0	6	->
water	121:24	0:0	6	default_colormap
water	121:40	0:0	6	,
water	122:12	0:0	6	}
decl	123:12	123:31	6	xcb_void_cookie_t	c
call	124:12	124:73	6	xcb_create_pixmap
arg	124:31	124:35	7	conn
water	124:31	0:0	8	conn
arg	124:37	124:45	7	f->depth
water	124:37	0:0	8	f
op	124:38	0:0	8	->
water	124:40	0:0	8	depth
arg	124:47	124:53	7	pixmap
water	124:47	0:0	8	pixmap
arg	124:55	124:67	7	screen->root
water	124:55	0:0	8	screen
op	124:61	0:0	8	->
water	124:63	0:0	8	root
arg	124:69	124:70	7	1
water	124:69	0:0	8	1
arg	124:72	124:73	7	1
water	124:72	0:0	8	1
water	124:74	0:0	6	;
water	125:12	0:0	6	c
op	125:14	0:0	6	=
call	125:16	128:38	6	xcb_create_window_checked
arg	125:43	125:47	7	conn
water	125:43	0:0	8	conn
arg	125:49	125:57	7	f->depth
water	125:49	0:0	8	f
op	125:50	0:0	8	->
water	125:52	0:0	8	depth
arg	125:59	125:72	7	p_sys->window
water	125:59	0:0	8	p_sys
op	125:64	0:0	8	->
water	125:66	0:0	8	window
arg	126:17	126:41	7	p_sys->embed->handle.xid
water	126:17	0:0	8	p_sys
op	126:22	0:0	8	->
water	126:24	0:0	8	embed
op	126:29	0:0	8	->
water	126:31	0:0	8	handle
op	126:37	0:0	8	.
water	126:38	0:0	8	xid
arg	126:43	126:50	7	place.x
water	126:43	0:0	8	place
op	126:48	0:0	8	.
water	126:49	0:0	8	x
arg	126:52	126:59	7	place.y
water	126:52	0:0	8	place
op	126:57	0:0	8	.
water	126:58	0:0	8	y
arg	127:17	127:28	7	place.width
water	127:17	0:0	8	place
op	127:22	0:0	8	.
water	127:23	0:0	8	width
arg	127:30	127:42	7	place.height
water	127:30	0:0	8	place
op	127:35	0:0	8	.
water	127:36	0:0	8	height
arg	127:44	127:45	7	0
water	127:44	0:0	8	0
arg	127:47	127:76	7	XCB_WINDOW_CLASS_INPUT_OUTPUT
water	127:47	0:0	8	XCB_WINDOW_CLASS_INPUT_OUTPUT
arg	128:17	128:26	7	f->visual
water	128:17	0:0	8	f
op	128:18	0:0	8	->
water	128:20	0:0	8	visual
arg	128:28	128:32	7	mask
water	128:28	0:0	8	mask
arg	128:34	128:38	7	list
water	128:34	0:0	8	list
water	128:39	0:0	6	;
call	129:12	129:47	6	xcb_map_window
arg	129:28	129:32	7	conn
water	129:28	0:0	8	conn
arg	129:34	129:47	7	p_sys->window
water	129:34	0:0	8	p_sys
op	129:39	0:0	8	->
water	129:41	0:0	8	window
water	129:48	0:0	6	;
if	130:12	136:12	6	(!XCB_error_Check (vd ,conn ,"cannot create X11 window" ,c ))
cond	130:16	130:73	7	!XCB_error_Check (vd ,conn ,"cannot create X11 window" ,c )
op	130:16	0:0	8	!
call	130:17	130:73	8	XCB_error_Check
arg	130:34	130:36	9	vd
water	130:34	0:0	10	vd
arg	130:38	130:42	9	conn
water	130:38	0:0	10	conn
arg	130:44	130:70	9	"cannot create X11 window"
water	130:44	0:0	10	"cannot create X11 window"
arg	130:72	130:73	9	c
water	130:72	0:0	10	c
stmts	131:12	136:12	7	
water	131:12	0:0	8	{
call	132:16	133:66	8	msg_Dbg
arg	132:25	132:27	9	vd
water	132:25	0:0	10	vd
arg	132:29	133:45	9	"using X11 visual ID 0x%"PRIx32" (depth: %"PRIu8")"
water	132:29	0:0	10	"using X11 visual ID 0x%"
water	132:54	0:0	10	PRIx32
water	133:25	0:0	10	" (depth: %"
water	133:37	0:0	10	PRIu8
water	133:42	0:0	10	")"
arg	133:47	133:56	9	f->visual
water	133:47	0:0	10	f
op	133:48	0:0	10	->
water	133:50	0:0	10	visual
arg	133:58	133:66	9	f->depth
water	133:58	0:0	10	f
op	133:59	0:0	10	->
water	133:61	0:0	10	depth
water	133:67	0:0	8	;
call	134:16	134:74	8	msg_Dbg
arg	134:25	134:27	9	vd
water	134:25	0:0	10	vd
arg	134:29	134:59	9	"using X11 window 0x%08"PRIx32
water	134:29	0:0	10	"using X11 window 0x%08"
water	134:53	0:0	10	PRIx32
arg	134:61	134:74	9	p_sys->window
water	134:61	0:0	10	p_sys
op	134:66	0:0	10	->
water	134:68	0:0	10	window
water	134:75	0:0	8	;
goto	135:16	135:35	8	created_window
water	135:21	0:0	9	created_window
water	136:12	0:0	8	}
water	137:8	0:0	6	}
call	138:8	138:63	4	xcb_xv_ungrab_port
arg	138:28	138:32	5	conn
water	138:28	0:0	6	conn
arg	138:34	138:45	5	p_sys->port
water	138:34	0:0	6	p_sys
op	138:39	0:0	6	->
water	138:41	0:0	6	port
arg	138:47	138:63	5	XCB_CURRENT_TIME
water	138:47	0:0	6	XCB_CURRENT_TIME
water	138:64	0:0	4	;
water	139:8	0:0	4	p_sys
op	139:13	0:0	4	->
water	139:15	0:0	4	port
op	139:20	0:0	4	=
water	139:22	0:0	4	0
water	139:23	0:0	4	;
call	140:8	140:43	4	msg_Dbg
arg	140:17	140:19	5	vd
water	140:17	0:0	6	vd
arg	140:21	140:43	5	"no usable X11 visual"
water	140:21	0:0	6	"no usable X11 visual"
water	140:44	0:0	4	;
continue	141:8	141:16	4	
label	142:4	142:18	4	created_window :
break	143:8	143:13	4	
water	144:4	0:0	4	}
call	145:4	145:18	2	free
arg	145:10	145:18	3	adaptors
water	145:10	0:0	4	adaptors
water	145:19	0:0	2	;
if	146:4	150:4	2	(! p_sys -> port)
cond	146:8	146:16	3	! p_sys -> port
op	146:8	0:0	4	!
water	146:9	0:0	4	p_sys
op	146:14	0:0	4	->
water	146:16	0:0	4	port
stmts	147:4	150:4	3	
water	147:4	0:0	4	{
call	148:8	148:50	4	msg_Err
arg	148:17	148:19	5	vd
water	148:17	0:0	6	vd
arg	148:21	148:50	5	"no available XVideo adaptor"
water	148:21	0:0	6	"no available XVideo adaptor"
water	148:51	0:0	4	;
goto	149:8	149:18	4	error
water	149:13	0:0	5	error
water	150:4	0:0	4	}
water	152:4	0:0	2	p_sys
op	152:9	0:0	2	->
water	152:11	0:0	2	gc
op	152:14	0:0	2	=
call	152:16	152:37	2	xcb_generate_id
arg	152:33	152:37	3	conn
water	152:33	0:0	4	conn
water	152:38	0:0	2	;
call	153:4	153:58	2	xcb_create_gc
arg	153:19	153:23	3	conn
water	153:19	0:0	4	conn
arg	153:25	153:34	3	p_sys->gc
water	153:25	0:0	4	p_sys
op	153:30	0:0	4	->
water	153:32	0:0	4	gc
arg	153:36	153:49	3	p_sys->window
water	153:36	0:0	4	p_sys
op	153:41	0:0	4	->
water	153:43	0:0	4	window
arg	153:51	153:52	3	0
water	153:51	0:0	4	0
arg	153:54	153:58	3	NULL
water	153:54	0:0	4	NULL
water	153:59	0:0	2	;
call	154:4	154:67	2	msg_Dbg
arg	154:13	154:15	3	vd
water	154:13	0:0	4	vd
arg	154:17	154:56	3	"using X11 graphic context 0x%08"PRIx32
water	154:17	0:0	4	"using X11 graphic context 0x%08"
water	154:50	0:0	4	PRIx32
arg	154:58	154:67	3	p_sys->gc
water	154:58	0:0	4	p_sys
op	154:63	0:0	4	->
water	154:65	0:0	4	gc
water	154:68	0:0	2	;
water	156:4	0:0	2	{
decl	157:8	159:77	2	xcb_intern_atom_reply_t	*r
op	157:35	0:0	2	=
call	158:12	159:76	3	xcb_intern_atom_reply
arg	158:35	158:39	4	conn
water	158:35	0:0	5	conn
arg	159:16	159:70	4	xcb_intern_atom(conn,1,21,"XV_AUTOPAINT_COLORKEY")
call	159:16	159:69	5	xcb_intern_atom
arg	159:33	159:37	6	conn
water	159:33	0:0	7	conn
arg	159:39	159:40	6	1
water	159:39	0:0	7	1
arg	159:42	159:44	6	21
water	159:42	0:0	7	21
arg	159:46	159:69	6	"XV_AUTOPAINT_COLORKEY"
water	159:46	0:0	7	"XV_AUTOPAINT_COLORKEY"
arg	159:72	159:76	4	NULL
water	159:72	0:0	5	NULL
if	160:8	161:68	2	(r != NULL && r -> atom != 0)
cond	160:12	160:36	3	r != NULL && r -> atom != 0
water	160:12	0:0	4	r
op	160:14	0:0	4	!=
water	160:17	0:0	4	NULL
op	160:22	0:0	4	&&
water	160:25	0:0	4	r
op	160:26	0:0	4	->
water	160:28	0:0	4	atom
op	160:33	0:0	4	!=
water	160:36	0:0	4	0
stmts	161:12	161:68	3	
call	161:12	161:67	4	xcb_xv_set_port_attribute
arg	161:38	161:42	5	conn
water	161:38	0:0	6	conn
arg	161:44	161:55	5	p_sys->port
water	161:44	0:0	6	p_sys
op	161:49	0:0	6	->
water	161:51	0:0	6	port
arg	161:57	161:64	5	r->atom
water	161:57	0:0	6	r
op	161:58	0:0	6	->
water	161:60	0:0	6	atom
arg	161:66	161:67	5	1
water	161:66	0:0	6	1
water	161:68	0:0	4	;
call	162:8	162:14	2	free
arg	162:13	162:14	3	r
water	162:13	0:0	4	r
water	162:15	0:0	2	;
water	163:4	0:0	2	}
water	165:4	0:0	2	{
decl	166:8	168:69	2	xcb_intern_atom_reply_t	*r
op	166:35	0:0	2	=
call	167:12	168:68	3	xcb_intern_atom_reply
arg	167:35	167:39	4	conn
water	167:35	0:0	5	conn
arg	168:16	168:62	4	xcb_intern_atom(conn,1,13,"XV_ITURBT_709")
call	168:16	168:61	5	xcb_intern_atom
arg	168:33	168:37	6	conn
water	168:33	0:0	7	conn
arg	168:39	168:40	6	1
water	168:39	0:0	7	1
arg	168:42	168:44	6	13
water	168:42	0:0	7	13
arg	168:46	168:61	6	"XV_ITURBT_709"
water	168:46	0:0	7	"XV_ITURBT_709"
arg	168:64	168:68	4	NULL
water	168:64	0:0	5	NULL
if	169:8	171:57	2	(r != NULL && r -> atom != 0)
cond	169:12	169:36	3	r != NULL && r -> atom != 0
water	169:12	0:0	4	r
op	169:14	0:0	4	!=
water	169:17	0:0	4	NULL
op	169:22	0:0	4	&&
water	169:25	0:0	4	r
op	169:26	0:0	4	->
water	169:28	0:0	4	atom
op	169:33	0:0	4	!=
water	169:36	0:0	4	0
stmts	170:12	171:57	3	
call	170:12	171:56	4	xcb_xv_set_port_attribute
arg	170:38	170:42	5	conn
water	170:38	0:0	6	conn
arg	170:44	170:55	5	p_sys->port
water	170:44	0:0	6	p_sys
op	170:49	0:0	6	->
water	170:51	0:0	6	port
arg	170:57	170:64	5	r->atom
water	170:57	0:0	6	r
op	170:58	0:0	6	->
water	170:60	0:0	6	atom
arg	171:38	171:56	5	fmt.i_height>576
water	171:38	0:0	6	fmt
op	171:41	0:0	6	.
water	171:42	0:0	6	i_height
op	171:51	0:0	6	>
water	171:53	0:0	6	576
water	171:57	0:0	4	;
call	172:8	172:14	2	free
arg	172:13	172:14	3	r
water	172:13	0:0	4	r
water	172:15	0:0	2	;
water	173:4	0:0	2	}
water	175:4	0:0	2	p_sys
op	175:9	0:0	2	->
water	175:11	0:0	2	cursor
op	175:18	0:0	2	=
call	175:20	175:51	2	XCB_cursor_Create
arg	175:39	175:43	3	conn
water	175:39	0:0	4	conn
arg	175:45	175:51	3	screen
water	175:45	0:0	4	screen
water	175:52	0:0	2	;
water	176:4	0:0	2	p_sys
op	176:9	0:0	2	->
water	176:11	0:0	2	shm
op	176:15	0:0	2	=
call	176:17	176:41	2	XCB_shm_Check
arg	176:32	176:35	3	obj
water	176:32	0:0	4	obj
arg	176:37	176:41	3	conn
water	176:37	0:0	4	conn
water	176:42	0:0	2	;
water	177:4	0:0	2	p_sys
op	177:9	0:0	2	->
water	177:11	0:0	2	visible
op	177:19	0:0	2	=
water	177:21	0:0	2	false
water	177:26	0:0	2	;
decl	179:4	179:39	2	vout_display_info_t	info
op	179:29	0:0	2	=
water	179:31	0:0	2	vd
op	179:33	0:0	2	->
water	179:35	0:0	2	info
water	180:4	0:0	2	info
op	180:8	0:0	2	.
water	180:9	0:0	2	has_pictures_invalid
op	180:30	0:0	2	=
water	180:32	0:0	2	false
water	180:37	0:0	2	;
water	181:4	0:0	2	info
op	181:8	0:0	2	.
water	181:9	0:0	2	has_event_thread
op	181:26	0:0	2	=
water	181:28	0:0	2	true
water	181:32	0:0	2	;
water	183:4	0:0	2	p_sys
op	183:9	0:0	2	->
water	183:11	0:0	2	swap_uv
op	183:19	0:0	2	=
call	183:21	184:68	2	vlc_fourcc_AreUVPlanesSwapped
arg	183:52	183:64	3	fmt.i_chroma
water	183:52	0:0	4	fmt
op	183:55	0:0	4	.
water	183:56	0:0	4	i_chroma
arg	184:52	184:68	3	vd->fmt.i_chroma
water	184:52	0:0	4	vd
op	184:54	0:0	4	->
water	184:56	0:0	4	fmt
op	184:59	0:0	4	.
water	184:60	0:0	4	i_chroma
water	184:69	0:0	2	;
if	185:4	186:39	2	(p_sys -> swap_uv)
cond	185:8	185:15	3	p_sys -> swap_uv
water	185:8	0:0	4	p_sys
op	185:13	0:0	4	->
water	185:15	0:0	4	swap_uv
stmts	186:8	186:39	3	
water	186:8	0:0	4	fmt
op	186:11	0:0	4	.
water	186:12	0:0	4	i_chroma
op	186:21	0:0	4	=
water	186:23	0:0	4	vd
op	186:25	0:0	4	->
water	186:27	0:0	4	fmt
op	186:30	0:0	4	.
water	186:31	0:0	4	i_chroma
water	186:39	0:0	4	;
water	187:4	0:0	2	vd
op	187:6	0:0	2	->
water	187:8	0:0	2	fmt
op	187:12	0:0	2	=
water	187:14	0:0	2	fmt
water	187:17	0:0	2	;
water	188:4	0:0	2	vd
op	188:6	0:0	2	->
water	188:8	0:0	2	info
op	188:13	0:0	2	=
water	188:15	0:0	2	info
water	188:19	0:0	2	;
water	189:4	0:0	2	vd
op	189:6	0:0	2	->
water	189:8	0:0	2	pool
op	189:13	0:0	2	=
water	189:15	0:0	2	Pool
water	189:19	0:0	2	;
water	190:4	0:0	2	vd
op	190:6	0:0	2	->
water	190:8	0:0	2	prepare
op	190:16	0:0	2	=
water	190:18	0:0	2	NULL
water	190:22	0:0	2	;
water	191:4	0:0	2	vd
op	191:6	0:0	2	->
water	191:8	0:0	2	display
op	191:16	0:0	2	=
water	191:18	0:0	2	Display
water	191:25	0:0	2	;
water	192:4	0:0	2	vd
op	192:6	0:0	2	->
water	192:8	0:0	2	control
op	192:16	0:0	2	=
water	192:18	0:0	2	Control
water	192:25	0:0	2	;
water	193:4	0:0	2	vd
op	193:6	0:0	2	->
water	193:8	0:0	2	manage
op	193:15	0:0	2	=
water	193:17	0:0	2	Manage
water	193:23	0:0	2	;
decl	195:4	195:47	2	bool	is_fullscreen
op	195:23	0:0	2	=
water	195:25	0:0	2	vd
op	195:27	0:0	2	->
water	195:29	0:0	2	cfg
op	195:32	0:0	2	->
water	195:34	0:0	2	is_fullscreen
if	196:4	197:29	2	(is_fullscreen &&vout_window_SetFullScreen (p_sys -> embed ,true ))
cond	196:8	196:70	3	is_fullscreen &&vout_window_SetFullScreen (p_sys -> embed ,true )
water	196:8	0:0	4	is_fullscreen
op	196:22	0:0	4	&&
call	196:25	196:70	4	vout_window_SetFullScreen
arg	196:52	196:64	5	p_sys->embed
water	196:52	0:0	6	p_sys
op	196:57	0:0	6	->
water	196:59	0:0	6	embed
arg	196:66	196:70	5	true
water	196:66	0:0	6	true
stmts	197:8	197:29	3	
water	197:8	0:0	4	is_fullscreen
op	197:22	0:0	4	=
water	197:24	0:0	4	false
water	197:29	0:0	4	;
call	198:4	198:55	2	vout_display_SendEventFullscreen
arg	198:38	198:40	3	vd
water	198:38	0:0	4	vd
arg	198:42	198:55	3	is_fullscreen
water	198:42	0:0	4	is_fullscreen
water	198:56	0:0	2	;
call	199:4	199:71	2	vout_display_SendEventDisplaySize
arg	199:39	199:41	3	vd
water	199:39	0:0	4	vd
arg	199:43	199:48	3	width
water	199:43	0:0	4	width
arg	199:50	199:56	3	height
water	199:50	0:0	4	height
arg	199:58	199:71	3	is_fullscreen
water	199:58	0:0	4	is_fullscreen
water	199:72	0:0	2	;
return	200:4	200:22	2	VLC_SUCCESS
water	200:11	0:0	3	VLC_SUCCESS
label	201:0	201:5	2	error :
call	202:4	202:14	2	Close
arg	202:11	202:14	3	obj
water	202:11	0:0	4	obj
water	202:15	0:0	2	;
return	203:4	203:23	2	VLC_EGENERIC
water	203:11	0:0	3	VLC_EGENERIC

func	2:0	35:0	0	static void *	Master
params	2:19	0:0	1	
param	2:20	2:32	2	void *	handle
stmnts	0:0	34:15	1	
decl	4:4	4:32	2	intf_thread_t	*intf
op	4:24	0:0	2	=
water	4:26	0:0	2	handle
decl	5:4	5:33	2	intf_sys_t	*sys
op	5:20	0:0	2	=
water	5:22	0:0	2	intf
op	5:26	0:0	2	->
water	5:28	0:0	2	p_sys
for	6:4	33:4	2	(;;)
forinit	6:9	6:9	3	;
water	6:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	6:13	33:4	3	
water	6:13	0:0	4	{
decl	7:8	7:64	4	struct pollfd	ufd
op	7:26	0:0	4	=
water	7:28	0:0	4	{
op	7:30	0:0	4	.
water	7:31	0:0	4	fd
op	7:34	0:0	4	=
water	7:36	0:0	4	sys
op	7:39	0:0	4	->
water	7:41	0:0	4	fd
water	7:43	0:0	4	,
op	7:45	0:0	4	.
water	7:46	0:0	4	events
op	7:53	0:0	4	=
water	7:55	0:0	4	POLLIN
water	7:61	0:0	4	,
water	7:63	0:0	4	}
decl	8:8	8:24	4	uint64_t	data[2]
if	9:8	10:20	4	(poll (& ufd ,1 ,- 1 ) < 0)
cond	9:12	9:32	5	poll (& ufd ,1 ,- 1 ) < 0
call	9:12	9:28	6	poll
arg	9:17	9:21	7	&ufd
op	9:17	0:0	8	&
water	9:18	0:0	8	ufd
arg	9:23	9:24	7	1
water	9:23	0:0	8	1
arg	9:26	9:28	7	-1
op	9:26	0:0	8	-
water	9:27	0:0	8	1
op	9:30	0:0	6	<
water	9:32	0:0	6	0
stmts	10:12	10:20	5	
continue	10:12	10:20	6	
decl	12:8	12:36	4	struct sockaddr_storage	from
water	13:8	0:0	4	unsigned
water	13:17	0:0	4	struct_size
op	13:29	0:0	4	=
op	13:31	0:0	4	sizeof
water	13:37	0:0	4	(
water	13:38	0:0	4	from
water	13:42	0:0	4	)
water	13:43	0:0	4	;
call	14:8	15:54	4	recvfrom
arg	14:17	14:24	5	sys->fd
water	14:17	0:0	6	sys
op	14:20	0:0	6	->
water	14:22	0:0	6	fd
arg	14:26	14:30	5	data
water	14:26	0:0	6	data
arg	14:32	14:44	5	sizeof(data)
op	14:32	0:0	6	sizeof
water	14:38	0:0	6	(
water	14:39	0:0	6	data
water	14:43	0:0	6	)
arg	14:46	14:47	5	0
water	14:46	0:0	6	0
arg	15:17	15:40	5	(structsockaddr*)&from
water	15:17	0:0	6	(
water	15:18	0:0	6	struct
water	15:25	0:0	6	sockaddr
op	15:33	0:0	6	*
water	15:34	0:0	6	)
op	15:35	0:0	6	&
water	15:36	0:0	6	from
arg	15:42	15:54	5	&struct_size
op	15:42	0:0	6	&
water	15:43	0:0	6	struct_size
water	15:55	0:0	4	;
decl	16:8	16:56	4	mtime_t	master_system
op	16:30	0:0	4	=
call	16:32	16:55	5	GetPcrSystem
arg	16:45	16:55	6	sys->input
water	16:45	0:0	7	sys
op	16:48	0:0	7	->
water	16:50	0:0	7	input
if	17:8	18:20	4	(master_system < 0)
cond	17:12	17:28	5	master_system < 0
water	17:12	0:0	6	master_system
op	17:26	0:0	6	<
water	17:28	0:0	6	0
stmts	18:12	18:20	5	
continue	18:12	18:20	6	
water	19:8	0:0	4	data
op	19:12	0:0	4	[
water	19:13	0:0	4	0
op	19:14	0:0	4	]
op	19:16	0:0	4	=
call	19:18	19:32	4	hton64
arg	19:25	19:32	5	mdate()
call	19:25	19:31	6	mdate
water	19:33	0:0	4	;
water	20:8	0:0	4	data
op	20:12	0:0	4	[
water	20:13	0:0	4	1
op	20:14	0:0	4	]
op	20:16	0:0	4	=
call	20:18	20:38	4	hton64
arg	20:25	20:38	5	master_system
water	20:25	0:0	6	master_system
water	20:39	0:0	4	;
call	22:8	23:52	4	sendto
arg	22:15	22:22	5	sys->fd
water	22:15	0:0	6	sys
op	22:18	0:0	6	->
water	22:20	0:0	6	fd
arg	22:24	22:28	5	data
water	22:24	0:0	6	data
arg	22:30	22:42	5	sizeof(data)
op	22:30	0:0	6	sizeof
water	22:36	0:0	6	(
water	22:37	0:0	6	data
water	22:41	0:0	6	)
arg	22:44	22:45	5	0
water	22:44	0:0	6	0
arg	23:15	23:39	5	(structsockaddr*)&from
water	23:15	0:0	6	(
water	23:16	0:0	6	struct
water	23:23	0:0	6	sockaddr
op	23:32	0:0	6	*
water	23:33	0:0	6	)
op	23:34	0:0	6	&
water	23:35	0:0	6	from
arg	23:41	23:52	5	struct_size
water	23:41	0:0	6	struct_size
water	23:53	0:0	4	;
decl	27:8	27:47	4	mtime_t	client_system
op	27:30	0:0	4	=
call	27:32	27:46	5	ntoh64
arg	27:39	27:46	6	data[0]
water	27:39	0:0	7	data
op	27:43	0:0	7	[
water	27:44	0:0	7	0
op	27:45	0:0	7	]
call	28:8	31:41	4	msg_Dbg
arg	28:16	28:20	5	intf
water	28:16	0:0	6	intf
arg	28:22	29:36	5	"Master clockref: %"PRId64" -> %"PRId64", from %s ""(date: %"PRId64")"
water	28:22	0:0	6	"Master clockref: %"
water	28:42	0:0	6	PRId64
water	28:48	0:0	6	" -> %"
water	28:55	0:0	6	PRId64
water	28:61	0:0	6	", from %s "
water	29:17	0:0	6	"(date: %"
water	29:27	0:0	6	PRId64
water	29:33	0:0	6	")"
arg	29:38	29:51	5	client_system
water	29:38	0:0	6	client_system
arg	29:53	29:66	5	master_system
water	29:53	0:0	6	master_system
arg	30:17	31:29	5	(from.ss_family==AF_INET)?inet_ntoa(((structsockaddr_in*)&from)->sin_addr):"non-IPv4"
water	30:17	0:0	6	(
water	30:18	0:0	6	from
op	30:22	0:0	6	.
water	30:23	0:0	6	ss_family
op	30:33	0:0	6	==
water	30:36	0:0	6	AF_INET
water	30:43	0:0	6	)
water	30:45	0:0	6	?
call	30:47	30:96	6	inet_ntoa
arg	30:57	30:96	7	((structsockaddr_in*)&from)->sin_addr
water	30:57	0:0	8	(
water	30:58	0:0	8	(
water	30:59	0:0	8	struct
water	30:66	0:0	8	sockaddr_in
op	30:78	0:0	8	*
water	30:79	0:0	8	)
op	30:80	0:0	8	&
water	30:81	0:0	8	from
water	30:85	0:0	8	)
op	30:86	0:0	8	->
water	30:88	0:0	8	sin_addr
water	31:17	0:0	6	:
water	31:19	0:0	6	"non-IPv4"
arg	31:40	31:41	5	0
water	31:40	0:0	6	0
water	31:42	0:0	4	;
water	33:4	0:0	4	}
return	34:4	34:15	2	NULL
water	34:11	0:0	3	NULL

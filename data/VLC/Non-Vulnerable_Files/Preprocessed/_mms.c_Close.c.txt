func	2:0	15:0	0	static void	Close
params	2:17	0:0	1	
param	2:19	2:40	2	vlc_object_t *	p_this
stmnts	0:0	14:4	1	
decl	4:4	4:46	2	access_t	*p_access
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	access_t
op	4:38	0:0	2	*
water	4:39	0:0	2	)
water	4:40	0:0	2	p_this
decl	5:4	5:41	2	access_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_access
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
if	6:4	10:4	2	(( p_sys -> i_proto == MMS_PROTO_TCP ) || ( p_sys -> i_proto == MMS_PROTO_UDP ))
cond	6:8	7:42	3	( p_sys -> i_proto == MMS_PROTO_TCP ) || ( p_sys -> i_proto == MMS_PROTO_UDP )
water	6:8	0:0	4	(
water	6:10	0:0	4	p_sys
op	6:15	0:0	4	->
water	6:17	0:0	4	i_proto
op	6:25	0:0	4	==
water	6:28	0:0	4	MMS_PROTO_TCP
water	6:42	0:0	4	)
op	6:44	0:0	4	||
water	7:8	0:0	4	(
water	7:10	0:0	4	p_sys
op	7:15	0:0	4	->
water	7:17	0:0	4	i_proto
op	7:25	0:0	4	==
water	7:28	0:0	4	MMS_PROTO_UDP
water	7:42	0:0	4	)
stmts	8:4	10:4	3	
water	8:4	0:0	4	{
call	9:9	9:31	4	MMSTUClose
arg	9:22	9:31	5	p_access
water	9:22	0:0	6	p_access
water	9:32	0:0	4	;
water	10:4	0:0	4	}
else	11:4	14:4	2
stmts	11:9	14:4	3	
if	11:9	14:4	4	(p_sys -> i_proto == MMS_PROTO_HTTP)
cond	11:13	11:31	5	p_sys -> i_proto == MMS_PROTO_HTTP
water	11:13	0:0	6	p_sys
op	11:18	0:0	6	->
water	11:20	0:0	6	i_proto
op	11:28	0:0	6	==
water	11:31	0:0	6	MMS_PROTO_HTTP
stmts	12:4	14:4	5	
water	12:4	0:0	6	{
call	13:9	13:30	6	MMSHClose
arg	13:21	13:30	7	p_access
water	13:21	0:0	8	p_access
water	13:31	0:0	6	;
water	14:4	0:0	6	}

func	2:0	31:0	0	int	rmff_dump_header
params	2:20	0:0	1	
param	2:21	2:37	2	rmff_header_t *	h
param	2:39	2:52	2	void *	buf_gen
param	2:54	2:61	2	int	max
stmnts	0:0	30:18	1	
decl	3:4	3:29	2	uint8_t	*buffer
op	3:20	0:0	2	=
water	3:22	0:0	2	buf_gen
decl	4:4	4:23	2	int	written
op	4:15	0:0	2	=
water	4:16	0:0	2	0
water	4:17	0:0	2	,
decl	4:4	4:23	2	int	size
decl	5:4	5:35	2	rmff_mdpr_t	**stream
op	5:24	0:0	2	=
water	5:25	0:0	2	h
op	5:26	0:0	2	->
water	5:28	0:0	2	streams
if	6:4	7:17	2	(( size =rmff_dump_fileheader (h -> fileheader ,& buffer [ written ] ,max ) ) < 0)
cond	6:8	6:76	3	( size =rmff_dump_fileheader (h -> fileheader ,& buffer [ written ] ,max ) ) < 0
water	6:8	0:0	4	(
water	6:9	0:0	4	size
op	6:13	0:0	4	=
call	6:14	6:71	4	rmff_dump_fileheader
arg	6:35	6:48	5	h->fileheader
water	6:35	0:0	6	h
op	6:36	0:0	6	->
water	6:38	0:0	6	fileheader
arg	6:50	6:66	5	&buffer[written]
op	6:50	0:0	6	&
water	6:51	0:0	6	buffer
op	6:57	0:0	6	[
water	6:58	0:0	6	written
op	6:65	0:0	6	]
arg	6:68	6:71	5	max
water	6:68	0:0	6	max
water	6:72	0:0	4	)
op	6:74	0:0	4	<
water	6:76	0:0	4	0
stmts	7:8	7:17	3	
return	7:8	7:17	4	-1
op	7:15	0:0	5	-
water	7:16	0:0	5	1
water	8:4	0:0	2	written
op	8:12	0:0	2	+=
water	8:15	0:0	2	size
water	8:19	0:0	2	;
water	9:4	0:0	2	max
op	9:8	0:0	2	-=
water	9:11	0:0	2	size
water	9:15	0:0	2	;
if	10:4	11:17	2	(( size =rmff_dump_prop (h -> prop ,& buffer [ written ] ,max ) ) < 0)
cond	10:8	10:64	3	( size =rmff_dump_prop (h -> prop ,& buffer [ written ] ,max ) ) < 0
water	10:8	0:0	4	(
water	10:9	0:0	4	size
op	10:13	0:0	4	=
call	10:14	10:59	4	rmff_dump_prop
arg	10:29	10:36	5	h->prop
water	10:29	0:0	6	h
op	10:30	0:0	6	->
water	10:32	0:0	6	prop
arg	10:38	10:54	5	&buffer[written]
op	10:38	0:0	6	&
water	10:39	0:0	6	buffer
op	10:45	0:0	6	[
water	10:46	0:0	6	written
op	10:53	0:0	6	]
arg	10:56	10:59	5	max
water	10:56	0:0	6	max
water	10:60	0:0	4	)
op	10:62	0:0	4	<
water	10:64	0:0	4	0
stmts	11:8	11:17	3	
return	11:8	11:17	4	-1
op	11:15	0:0	5	-
water	11:16	0:0	5	1
water	12:4	0:0	2	written
op	12:12	0:0	2	+=
water	12:15	0:0	2	size
water	12:19	0:0	2	;
water	13:4	0:0	2	max
op	13:8	0:0	2	-=
water	13:11	0:0	2	size
water	13:15	0:0	2	;
if	14:4	15:17	2	(( size =rmff_dump_cont (h -> cont ,& buffer [ written ] ,max ) ) < 0)
cond	14:8	14:64	3	( size =rmff_dump_cont (h -> cont ,& buffer [ written ] ,max ) ) < 0
water	14:8	0:0	4	(
water	14:9	0:0	4	size
op	14:13	0:0	4	=
call	14:14	14:59	4	rmff_dump_cont
arg	14:29	14:36	5	h->cont
water	14:29	0:0	6	h
op	14:30	0:0	6	->
water	14:32	0:0	6	cont
arg	14:38	14:54	5	&buffer[written]
op	14:38	0:0	6	&
water	14:39	0:0	6	buffer
op	14:45	0:0	6	[
water	14:46	0:0	6	written
op	14:53	0:0	6	]
arg	14:56	14:59	5	max
water	14:56	0:0	6	max
water	14:60	0:0	4	)
op	14:62	0:0	4	<
water	14:64	0:0	4	0
stmts	15:8	15:17	3	
return	15:8	15:17	4	-1
op	15:15	0:0	5	-
water	15:16	0:0	5	1
water	16:4	0:0	2	written
op	16:12	0:0	2	+=
water	16:15	0:0	2	size
water	16:19	0:0	2	;
water	17:4	0:0	2	max
op	17:8	0:0	2	-=
water	17:11	0:0	2	size
water	17:15	0:0	2	;
if	18:4	26:4	2	(stream)
cond	18:8	18:8	3	stream
water	18:8	0:0	4	stream
stmts	18:16	26:4	3	
water	18:16	0:0	4	{
while	19:8	25:8	4	(* stream)
cond	19:14	19:15	5	* stream
op	19:14	0:0	6	*
water	19:15	0:0	6	stream
stmts	19:23	25:8	5	
water	19:23	0:0	6	{
if	20:12	21:25	6	(( size =rmff_dump_mdpr (* stream ,& buffer [ written ] ,max ) ) < 0)
cond	20:16	20:72	7	( size =rmff_dump_mdpr (* stream ,& buffer [ written ] ,max ) ) < 0
water	20:16	0:0	8	(
water	20:17	0:0	8	size
op	20:21	0:0	8	=
call	20:22	20:67	8	rmff_dump_mdpr
arg	20:37	20:44	9	*stream
op	20:37	0:0	10	*
water	20:38	0:0	10	stream
arg	20:46	20:62	9	&buffer[written]
op	20:46	0:0	10	&
water	20:47	0:0	10	buffer
op	20:53	0:0	10	[
water	20:54	0:0	10	written
op	20:61	0:0	10	]
arg	20:64	20:67	9	max
water	20:64	0:0	10	max
water	20:68	0:0	8	)
op	20:70	0:0	8	<
water	20:72	0:0	8	0
stmts	21:16	21:25	7	
return	21:16	21:25	8	-1
op	21:23	0:0	9	-
water	21:24	0:0	9	1
water	22:12	0:0	6	written
op	22:20	0:0	6	+=
water	22:23	0:0	6	size
water	22:27	0:0	6	;
water	23:12	0:0	6	max
op	23:16	0:0	6	-=
water	23:19	0:0	6	size
water	23:23	0:0	6	;
water	24:12	0:0	6	stream
op	24:18	0:0	6	++
water	24:20	0:0	6	;
water	25:8	0:0	6	}
water	26:4	0:0	4	}
if	27:4	28:17	2	(( size =rmff_dump_dataheader (h -> data ,& buffer [ written ] ,max ) ) < 0)
cond	27:8	27:70	3	( size =rmff_dump_dataheader (h -> data ,& buffer [ written ] ,max ) ) < 0
water	27:8	0:0	4	(
water	27:9	0:0	4	size
op	27:13	0:0	4	=
call	27:14	27:65	4	rmff_dump_dataheader
arg	27:35	27:42	5	h->data
water	27:35	0:0	6	h
op	27:36	0:0	6	->
water	27:38	0:0	6	data
arg	27:44	27:60	5	&buffer[written]
op	27:44	0:0	6	&
water	27:45	0:0	6	buffer
op	27:51	0:0	6	[
water	27:52	0:0	6	written
op	27:59	0:0	6	]
arg	27:62	27:65	5	max
water	27:62	0:0	6	max
water	27:66	0:0	4	)
op	27:68	0:0	4	<
water	27:70	0:0	4	0
stmts	28:8	28:17	3	
return	28:8	28:17	4	-1
op	28:15	0:0	5	-
water	28:16	0:0	5	1
water	29:4	0:0	2	written
op	29:11	0:0	2	+=
water	29:13	0:0	2	size
water	29:17	0:0	2	;
return	30:4	30:18	2	written
water	30:11	0:0	3	written

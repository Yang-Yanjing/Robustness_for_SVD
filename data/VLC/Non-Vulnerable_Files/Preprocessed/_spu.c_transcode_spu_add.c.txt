func	2:0	42:0	0	bool	transcode_spu_add
params	2:22	0:0	1	
param	2:24	2:47	2	sout_stream_t *	p_stream
param	2:49	2:67	2	es_format_t *	p_fmt
param	3:24	3:49	2	sout_stream_id_sys_t *	id
stmnts	0:0	41:15	1	
decl	5:4	5:46	2	sout_stream_sys_t	*p_sys
op	5:29	0:0	2	=
water	5:31	0:0	2	p_stream
op	5:39	0:0	2	->
water	5:41	0:0	2	p_sys
if	6:4	27:4	2	(p_sys -> i_scodec)
cond	6:8	6:15	3	p_sys -> i_scodec
water	6:8	0:0	4	p_sys
op	6:13	0:0	4	->
water	6:15	0:0	4	i_scodec
stmts	7:4	27:4	3	
water	7:4	0:0	4	{
call	8:8	10:41	4	msg_Dbg
arg	8:17	8:25	5	p_stream
water	8:17	0:0	6	p_stream
arg	8:27	9:33	5	"creating subtitle transcoding from fcc=`%4.4s' ""to fcc=`%4.4s'"
water	8:27	0:0	6	"creating subtitle transcoding from fcc=`%4.4s' "
water	9:17	0:0	6	"to fcc=`%4.4s'"
arg	9:35	9:57	5	(char*)&p_fmt->i_codec
water	9:35	0:0	6	(
water	9:36	0:0	6	char
op	9:40	0:0	6	*
water	9:41	0:0	6	)
op	9:42	0:0	6	&
water	9:43	0:0	6	p_fmt
op	9:48	0:0	6	->
water	9:50	0:0	6	i_codec
arg	10:17	10:41	5	(char*)&p_sys->i_scodec
water	10:17	0:0	6	(
water	10:18	0:0	6	char
op	10:22	0:0	6	*
water	10:23	0:0	6	)
op	10:24	0:0	6	&
water	10:25	0:0	6	p_sys
op	10:30	0:0	6	->
water	10:32	0:0	6	i_scodec
water	10:42	0:0	4	;
water	12:8	0:0	4	id
op	12:10	0:0	4	->
water	12:12	0:0	4	p_encoder
op	12:21	0:0	4	->
water	12:23	0:0	4	fmt_out
op	12:30	0:0	4	.
water	12:31	0:0	4	i_codec
op	12:39	0:0	4	=
water	12:41	0:0	4	p_sys
op	12:46	0:0	4	->
water	12:48	0:0	4	i_scodec
water	12:56	0:0	4	;
if	14:8	18:8	4	(transcode_spu_new (p_stream ,id ))
cond	14:12	14:44	5	transcode_spu_new (p_stream ,id )
call	14:12	14:44	6	transcode_spu_new
arg	14:31	14:39	7	p_stream
water	14:31	0:0	8	p_stream
arg	14:41	14:44	7	id
water	14:41	0:0	8	id
stmts	15:8	18:8	5	
water	15:8	0:0	6	{
call	16:12	16:62	6	msg_Err
arg	16:21	16:29	7	p_stream
water	16:21	0:0	8	p_stream
arg	16:31	16:62	7	"cannot create subtitle chain"
water	16:31	0:0	8	"cannot create subtitle chain"
water	16:63	0:0	6	;
return	17:12	17:24	6	false
water	17:19	0:0	7	false
water	18:8	0:0	6	}
water	20:8	0:0	4	id
op	20:10	0:0	4	->
water	20:12	0:0	4	id
op	20:15	0:0	4	=
call	20:17	20:77	4	sout_StreamIdAdd
arg	20:35	20:51	5	p_stream->p_next
water	20:35	0:0	6	p_stream
op	20:43	0:0	6	->
water	20:45	0:0	6	p_next
arg	20:53	20:77	5	&id->p_encoder->fmt_out
op	20:53	0:0	6	&
water	20:54	0:0	6	id
op	20:56	0:0	6	->
water	20:58	0:0	6	p_encoder
op	20:67	0:0	6	->
water	20:69	0:0	6	fmt_out
water	20:78	0:0	4	;
water	21:8	0:0	4	id
op	21:10	0:0	4	->
water	21:12	0:0	4	b_transcode
op	21:24	0:0	4	=
water	21:26	0:0	4	true
water	21:30	0:0	4	;
if	22:8	26:8	4	(! id -> id)
cond	22:12	22:17	5	! id -> id
op	22:12	0:0	6	!
water	22:13	0:0	6	id
op	22:15	0:0	6	->
water	22:17	0:0	6	id
stmts	23:8	26:8	5	
water	23:8	0:0	6	{
call	24:12	24:46	6	transcode_spu_close
arg	24:33	24:41	7	p_stream
water	24:33	0:0	8	p_stream
arg	24:43	24:46	7	id
water	24:43	0:0	8	id
water	24:47	0:0	6	;
return	25:12	25:24	6	false
water	25:19	0:0	7	false
water	26:8	0:0	6	}
water	27:4	0:0	4	}
else	28:4	40:4	2
stmts	29:4	40:4	3	
water	29:4	0:0	4	{
call	30:8	30:34	4	assert
arg	30:16	30:34	5	p_sys->b_soverlay
water	30:16	0:0	6	p_sys
op	30:21	0:0	6	->
water	30:23	0:0	6	b_soverlay
water	30:35	0:0	4	;
call	31:8	32:40	4	msg_Dbg
arg	31:17	31:25	5	p_stream
water	31:17	0:0	6	p_stream
arg	31:27	31:62	5	"subtitle (fcc=`%4.4s') overlaying"
water	31:27	0:0	6	"subtitle (fcc=`%4.4s') overlaying"
arg	32:17	32:40	5	(char*)&p_fmt->i_codec
water	32:17	0:0	6	(
water	32:18	0:0	6	char
op	32:22	0:0	6	*
water	32:23	0:0	6	)
op	32:24	0:0	6	&
water	32:25	0:0	6	p_fmt
op	32:30	0:0	6	->
water	32:32	0:0	6	i_codec
water	32:41	0:0	4	;
water	33:8	0:0	4	id
op	33:10	0:0	4	->
water	33:12	0:0	4	b_transcode
op	33:24	0:0	4	=
water	33:26	0:0	4	true
water	33:30	0:0	4	;
if	35:8	39:8	4	(transcode_spu_new (p_stream ,id ))
cond	35:12	35:44	5	transcode_spu_new (p_stream ,id )
call	35:12	35:44	6	transcode_spu_new
arg	35:31	35:39	7	p_stream
water	35:31	0:0	8	p_stream
arg	35:41	35:44	7	id
water	35:41	0:0	8	id
stmts	36:8	39:8	5	
water	36:8	0:0	6	{
call	37:12	37:62	6	msg_Err
arg	37:21	37:29	7	p_stream
water	37:21	0:0	8	p_stream
arg	37:31	37:62	7	"cannot create subtitle chain"
water	37:31	0:0	8	"cannot create subtitle chain"
water	37:63	0:0	6	;
return	38:12	38:24	6	false
water	38:19	0:0	7	false
water	39:8	0:0	6	}
water	40:4	0:0	4	}
return	41:4	41:15	2	true
water	41:11	0:0	3	true

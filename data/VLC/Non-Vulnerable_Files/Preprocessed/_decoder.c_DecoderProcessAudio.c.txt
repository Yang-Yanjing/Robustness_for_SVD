func	2:0	40:0	0	static void	DecoderProcessAudio
params	2:31	0:0	1	
param	2:33	2:49	2	decoder_t *	p_dec
param	2:51	2:67	2	block_t *	p_block
param	2:69	2:82	2	bool	b_flush
stmnts	0:0	39:40	1	
decl	4:4	4:72	2	decoder_owner_sys_t	*p_owner
op	4:33	0:0	2	=
water	4:35	0:0	2	(
water	4:36	0:0	2	decoder_owner_sys_t
op	4:56	0:0	2	*
water	4:57	0:0	2	)
water	4:58	0:0	2	p_dec
op	4:63	0:0	2	->
water	4:65	0:0	2	p_owner
if	5:4	33:4	2	(p_owner -> p_packetizer)
cond	5:8	5:17	3	p_owner -> p_packetizer
water	5:8	0:0	4	p_owner
op	5:15	0:0	4	->
water	5:17	0:0	4	p_packetizer
stmts	6:4	33:4	3	
water	6:4	0:0	4	{
decl	7:8	7:35	4	block_t	*p_packetized_block
decl	8:8	8:55	4	decoder_t	*p_packetizer
op	8:32	0:0	4	=
water	8:34	0:0	4	p_owner
op	8:41	0:0	4	->
water	8:43	0:0	4	p_packetizer
while	9:8	24:8	4	(( p_packetized_block =p_packetizer -> pf_packetize (p_packetizer ,p_block ? & p_block : NULL ) ))
cond	9:15	10:85	5	( p_packetized_block =p_packetizer -> pf_packetize (p_packetizer ,p_block ? & p_block : NULL ) )
water	9:15	0:0	6	(
water	9:16	0:0	6	p_packetized_block
op	9:35	0:0	6	=
call	10:16	10:84	6	p_packetizer->pf_packetize
arg	10:44	10:56	7	p_packetizer
water	10:44	0:0	8	p_packetizer
arg	10:58	10:84	7	p_block?&p_block:NULL
water	10:58	0:0	8	p_block
water	10:66	0:0	8	?
op	10:68	0:0	8	&
water	10:69	0:0	8	p_block
water	10:77	0:0	8	:
water	10:79	0:0	8	NULL
water	10:85	0:0	6	)
stmts	11:8	24:8	5	
water	11:8	0:0	6	{
if	12:12	16:12	6	(p_packetizer -> fmt_out . i_extra && ! p_dec -> fmt_in . i_extra)
cond	12:16	12:64	7	p_packetizer -> fmt_out . i_extra && ! p_dec -> fmt_in . i_extra
water	12:16	0:0	8	p_packetizer
op	12:28	0:0	8	->
water	12:30	0:0	8	fmt_out
op	12:37	0:0	8	.
water	12:38	0:0	8	i_extra
op	12:46	0:0	8	&&
op	12:49	0:0	8	!
water	12:50	0:0	8	p_dec
op	12:55	0:0	8	->
water	12:57	0:0	8	fmt_in
op	12:63	0:0	8	.
water	12:64	0:0	8	i_extra
stmts	13:12	16:12	7	
water	13:12	0:0	8	{
call	14:16	14:48	8	es_format_Clean
arg	14:33	14:48	9	&p_dec->fmt_in
op	14:33	0:0	10	&
water	14:34	0:0	10	p_dec
op	14:39	0:0	10	->
water	14:41	0:0	10	fmt_in
water	14:49	0:0	8	;
call	15:16	15:71	8	es_format_Copy
arg	15:32	15:46	9	&p_dec->fmt_in
op	15:32	0:0	10	&
water	15:33	0:0	10	p_dec
op	15:38	0:0	10	->
water	15:40	0:0	10	fmt_in
arg	15:48	15:71	9	&p_packetizer->fmt_out
op	15:48	0:0	10	&
water	15:49	0:0	10	p_packetizer
op	15:61	0:0	10	->
water	15:63	0:0	10	fmt_out
water	15:72	0:0	8	;
water	16:12	0:0	8	}
while	17:12	23:12	6	(p_packetized_block)
cond	17:19	17:19	7	p_packetized_block
water	17:19	0:0	8	p_packetized_block
stmts	18:12	23:12	7	
water	18:12	0:0	8	{
decl	19:16	19:60	8	block_t	*p_next
op	19:32	0:0	8	=
water	19:34	0:0	8	p_packetized_block
op	19:52	0:0	8	->
water	19:54	0:0	8	p_next
water	20:16	0:0	8	p_packetized_block
op	20:34	0:0	8	->
water	20:36	0:0	8	p_next
op	20:43	0:0	8	=
water	20:45	0:0	8	NULL
water	20:49	0:0	8	;
call	21:16	21:62	8	DecoderDecodeAudio
arg	21:36	21:41	9	p_dec
water	21:36	0:0	10	p_dec
arg	21:43	21:62	9	p_packetized_block
water	21:43	0:0	10	p_packetized_block
water	21:63	0:0	8	;
water	22:16	0:0	8	p_packetized_block
op	22:35	0:0	8	=
water	22:37	0:0	8	p_next
water	22:43	0:0	8	;
water	23:12	0:0	8	}
water	24:8	0:0	6	}
if	27:8	32:8	4	(b_flush)
cond	27:12	27:12	5	b_flush
water	27:12	0:0	6	b_flush
stmts	28:8	32:8	5	
water	28:8	0:0	6	{
decl	29:12	29:52	6	block_t	*p_null
op	29:28	0:0	6	=
call	29:30	29:51	7	DecoderBlockFlushNew
if	30:12	31:51	6	(p_null)
cond	30:16	30:16	7	p_null
water	30:16	0:0	8	p_null
stmts	31:16	31:51	7	
call	31:16	31:50	8	DecoderDecodeAudio
arg	31:36	31:41	9	p_dec
water	31:36	0:0	10	p_dec
arg	31:43	31:50	9	p_null
water	31:43	0:0	10	p_null
water	31:51	0:0	8	;
water	32:8	0:0	6	}
water	33:4	0:0	4	}
else	34:4	37:4	2
stmts	35:4	37:4	3	
water	35:4	0:0	4	{
call	36:8	36:43	4	DecoderDecodeAudio
arg	36:28	36:33	5	p_dec
water	36:28	0:0	6	p_dec
arg	36:35	36:43	5	p_block
water	36:35	0:0	6	p_block
water	36:44	0:0	4	;
water	37:4	0:0	4	}
if	38:4	39:40	2	(b_flush && p_owner -> p_aout)
cond	38:8	38:28	3	b_flush && p_owner -> p_aout
water	38:8	0:0	4	b_flush
op	38:16	0:0	4	&&
water	38:19	0:0	4	p_owner
op	38:26	0:0	4	->
water	38:28	0:0	4	p_aout
stmts	39:8	39:40	3	
call	39:8	39:39	4	aout_DecFlush
arg	39:23	39:39	5	p_owner->p_aout
water	39:23	0:0	6	p_owner
op	39:30	0:0	6	->
water	39:32	0:0	6	p_aout
water	39:40	0:0	4	;

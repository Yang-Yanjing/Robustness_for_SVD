func	2:0	56:0	0	int	DoAcoustIdWebRequest
params	2:24	0:0	1	
param	2:26	2:45	2	vlc_object_t *	p_obj
param	2:47	2:78	2	acoustid_fingerprint_t *	p_data
stmnts	0:0	55:19	1	
decl	4:4	4:13	2	int	i_ret
decl	5:4	5:16	2	int	i_status
decl	6:4	6:54	2	struct webrequest_t	request
op	6:32	0:0	2	=
water	6:34	0:0	2	{
water	6:36	0:0	2	NULL
water	6:40	0:0	2	,
water	6:42	0:0	2	NULL
water	6:46	0:0	2	,
water	6:48	0:0	2	NULL
water	6:53	0:0	2	}
if	7:4	7:54	2	(! p_data -> psz_fingerprint)
cond	7:9	7:18	3	! p_data -> psz_fingerprint
op	7:9	0:0	4	!
water	7:10	0:0	4	p_data
op	7:16	0:0	4	->
water	7:18	0:0	4	psz_fingerprint
stmts	7:36	7:54	3	
return	7:36	7:54	4	VLC_SUCCESS
water	7:43	0:0	5	VLC_SUCCESS
water	8:4	0:0	2	i_ret
op	8:10	0:0	2	=
call	8:12	10:58	2	asprintf
arg	8:22	8:39	3	&request.psz_url
op	8:22	0:0	4	&
water	8:24	0:0	4	request
op	8:31	0:0	4	.
water	8:32	0:0	4	psz_url
arg	9:14	9:128	3	"http://fingerprint.videolan.org/acoustid.php?meta=recordings+tracks+usermeta+releases&duration=%d&fingerprint=%s"
water	9:14	0:0	4	"http://fingerprint.videolan.org/acoustid.php?meta=recordings+tracks+usermeta+releases&duration=%d&fingerprint=%s"
arg	10:14	10:32	3	p_data->i_duration
water	10:14	0:0	4	p_data
op	10:20	0:0	4	->
water	10:22	0:0	4	i_duration
arg	10:34	10:58	3	p_data->psz_fingerprint
water	10:34	0:0	4	p_data
op	10:40	0:0	4	->
water	10:42	0:0	4	psz_fingerprint
water	10:59	0:0	2	;
if	11:4	11:40	2	(i_ret < 1)
cond	11:9	11:17	3	i_ret < 1
water	11:9	0:0	4	i_ret
op	11:15	0:0	4	<
water	11:17	0:0	4	1
stmts	11:21	11:40	3	
return	11:21	11:40	4	VLC_EGENERIC
water	11:28	0:0	5	VLC_EGENERIC
call	12:4	12:59	2	vlc_cleanup_push
arg	12:22	12:48	3	cancelDoAcoustIdWebRequest
water	12:22	0:0	4	cancelDoAcoustIdWebRequest
arg	12:50	12:59	3	&request
op	12:50	0:0	4	&
water	12:51	0:0	4	request
water	12:60	0:0	2	;
call	13:4	13:65	2	msg_Dbg
arg	13:13	13:18	3	p_obj
water	13:13	0:0	4	p_obj
arg	13:20	13:47	3	"Querying AcoustID from %s"
water	13:20	0:0	4	"Querying AcoustID from %s"
arg	13:49	13:65	3	request.psz_url
water	13:49	0:0	4	request
op	13:56	0:0	4	.
water	13:57	0:0	4	psz_url
water	13:66	0:0	2	;
decl	14:4	14:38	2	int	i_saved_flags
op	14:22	0:0	2	=
water	14:24	0:0	2	p_obj
op	14:29	0:0	2	->
water	14:31	0:0	2	i_flags
water	15:4	0:0	2	p_obj
op	15:9	0:0	2	->
water	15:11	0:0	2	i_flags
op	15:19	0:0	2	|=
water	15:22	0:0	2	OBJECT_FLAGS_NOINTERACT
water	15:45	0:0	2	;
water	16:4	0:0	2	request
op	16:11	0:0	2	.
water	16:12	0:0	2	p_stream
op	16:21	0:0	2	=
call	16:23	16:61	2	stream_UrlNew
arg	16:38	16:43	3	p_obj
water	16:38	0:0	4	p_obj
arg	16:45	16:61	3	request.psz_url
water	16:45	0:0	4	request
op	16:52	0:0	4	.
water	16:53	0:0	4	psz_url
water	16:62	0:0	2	;
water	17:4	0:0	2	p_obj
op	17:9	0:0	2	->
water	17:11	0:0	2	i_flags
op	17:19	0:0	2	=
water	17:21	0:0	2	i_saved_flags
water	17:34	0:0	2	;
if	18:4	22:4	2	(! request . p_stream)
cond	18:9	18:18	3	! request . p_stream
op	18:9	0:0	4	!
water	18:10	0:0	4	request
op	18:17	0:0	4	.
water	18:18	0:0	4	p_stream
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
water	20:8	0:0	4	i_status
op	20:17	0:0	4	=
water	20:19	0:0	4	VLC_EGENERIC
water	20:31	0:0	4	;
goto	21:8	21:20	4	cleanup
water	21:13	0:0	5	cleanup
water	22:4	0:0	4	}
water	24:4	0:0	2	i_ret
op	24:10	0:0	2	=
water	24:12	0:0	2	0
water	24:13	0:0	2	;
for	25:4	40:4	2	(;;)
forinit	25:9	25:9	3	;
water	25:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	26:4	40:4	3	
water	26:4	0:0	4	{
decl	27:8	27:26	4	int	i_read
op	27:19	0:0	4	=
water	27:21	0:0	4	65536
if	28:8	29:17	4	(i_ret >= INT_MAX - i_read)
cond	28:12	28:31	5	i_ret >= INT_MAX - i_read
water	28:12	0:0	6	i_ret
op	28:18	0:0	6	>=
water	28:21	0:0	6	INT_MAX
op	28:29	0:0	6	-
water	28:31	0:0	6	i_read
stmts	29:12	29:17	5	
break	29:12	29:17	6	
water	30:8	0:0	4	request
op	30:15	0:0	4	.
water	30:16	0:0	4	p_buffer
op	30:25	0:0	4	=
call	30:27	30:81	4	realloc_or_free
arg	30:44	30:60	5	request.p_buffer
water	30:44	0:0	6	request
op	30:51	0:0	6	.
water	30:52	0:0	6	p_buffer
arg	30:62	30:81	5	1+i_ret+i_read
water	30:62	0:0	6	1
op	30:64	0:0	6	+
water	30:66	0:0	6	i_ret
op	30:72	0:0	6	+
water	30:74	0:0	6	i_read
water	30:82	0:0	4	;
if	31:8	35:8	4	(! request . p_buffer)
cond	31:12	31:21	5	! request . p_buffer
op	31:12	0:0	6	!
water	31:13	0:0	6	request
op	31:20	0:0	6	.
water	31:21	0:0	6	p_buffer
stmts	32:8	35:8	5	
water	32:8	0:0	6	{
water	33:12	0:0	6	i_status
op	33:21	0:0	6	=
water	33:23	0:0	6	VLC_ENOMEM
water	33:33	0:0	6	;
goto	34:12	34:24	6	cleanup
water	34:17	0:0	7	cleanup
water	35:8	0:0	6	}
water	36:8	0:0	4	i_read
op	36:15	0:0	4	=
call	36:17	36:81	4	stream_Read
arg	36:30	36:46	5	request.p_stream
water	36:30	0:0	6	request
op	36:37	0:0	6	.
water	36:38	0:0	6	p_stream
arg	36:48	36:72	5	&request.p_buffer[i_ret]
op	36:48	0:0	6	&
water	36:49	0:0	6	request
op	36:56	0:0	6	.
water	36:57	0:0	6	p_buffer
op	36:65	0:0	6	[
water	36:66	0:0	6	i_ret
op	36:71	0:0	6	]
arg	36:74	36:81	5	i_read
water	36:74	0:0	6	i_read
water	36:82	0:0	4	;
if	37:8	38:17	4	(i_read <= 0)
cond	37:12	37:22	5	i_read <= 0
water	37:12	0:0	6	i_read
op	37:19	0:0	6	<=
water	37:22	0:0	6	0
stmts	38:12	38:17	5	
break	38:12	38:17	6	
water	39:8	0:0	4	i_ret
op	39:14	0:0	4	+=
water	39:17	0:0	4	i_read
water	39:23	0:0	4	;
water	40:4	0:0	4	}
call	41:4	41:36	2	stream_Delete
arg	41:19	41:36	3	request.p_stream
water	41:19	0:0	4	request
op	41:26	0:0	4	.
water	41:27	0:0	4	p_stream
water	41:37	0:0	2	;
water	42:4	0:0	2	request
op	42:11	0:0	2	.
water	42:12	0:0	2	p_stream
op	42:21	0:0	2	=
water	42:23	0:0	2	NULL
water	42:27	0:0	2	;
water	43:4	0:0	2	request
op	43:11	0:0	2	.
water	43:12	0:0	2	p_buffer
op	43:20	0:0	2	[
water	43:22	0:0	2	i_ret
op	43:28	0:0	2	]
op	43:30	0:0	2	=
water	43:32	0:0	2	0
water	43:33	0:0	2	;
decl	44:4	44:33	2	int	i_canc
op	44:15	0:0	2	=
call	44:17	44:32	3	vlc_savecancel
if	45:4	48:4	2	(ParseJson (p_obj ,request . p_buffer ,& p_data -> results ))
cond	45:9	45:63	3	ParseJson (p_obj ,request . p_buffer ,& p_data -> results )
call	45:9	45:63	4	ParseJson
arg	45:20	45:25	5	p_obj
water	45:20	0:0	6	p_obj
arg	45:27	45:43	5	request.p_buffer
water	45:27	0:0	6	request
op	45:34	0:0	6	.
water	45:35	0:0	6	p_buffer
arg	45:45	45:63	5	&p_data->results
op	45:45	0:0	6	&
water	45:47	0:0	6	p_data
op	45:53	0:0	6	->
water	45:55	0:0	6	results
stmts	46:4	48:4	3	
water	46:4	0:0	4	{
call	47:8	47:69	4	msg_Dbg
arg	47:17	47:22	5	p_obj
water	47:17	0:0	6	p_obj
arg	47:24	47:45	5	"results count == %d"
water	47:24	0:0	6	"results count == %d"
arg	47:47	47:69	5	p_data->results.count
water	47:47	0:0	6	p_data
op	47:53	0:0	6	->
water	47:55	0:0	6	results
op	47:62	0:0	6	.
water	47:63	0:0	6	count
water	47:70	0:0	4	;
water	48:4	0:0	4	}
else	48:6	50:4	2
stmts	48:11	50:4	3	
water	48:11	0:0	4	{
call	49:8	49:37	4	msg_Dbg
arg	49:17	49:22	5	p_obj
water	49:17	0:0	6	p_obj
arg	49:24	49:37	5	"No results"
water	49:24	0:0	6	"No results"
water	49:38	0:0	4	;
water	50:4	0:0	4	}
call	51:4	51:30	2	vlc_restorecancel
arg	51:23	51:30	3	i_canc
water	51:23	0:0	4	i_canc
water	51:31	0:0	2	;
water	52:4	0:0	2	i_status
op	52:13	0:0	2	=
water	52:15	0:0	2	VLC_SUCCESS
water	52:26	0:0	2	;
label	53:0	53:7	2	cleanup :
call	54:4	54:21	2	vlc_cleanup_run
water	54:22	0:0	2	;
return	55:4	55:19	2	i_status
water	55:11	0:0	3	i_status

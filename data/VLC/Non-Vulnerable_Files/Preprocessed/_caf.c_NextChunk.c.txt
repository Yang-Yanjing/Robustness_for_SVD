func	2:0	19:0	0	static int	NextChunk
params	2:20	0:0	1	
param	2:22	2:38	2	demux_t *	p_demux
param	2:40	2:59	2	vlc_fourcc_t *	p_fcc
param	2:61	2:79	2	uint64_t *	pi_size
stmnts	0:0	18:22	1	
decl	4:4	4:22	2	uint8_t	p_read[12]
if	5:4	6:27	2	(stream_Read (p_demux -> s ,p_read ,12 ) < 12)
cond	5:8	5:48	3	stream_Read (p_demux -> s ,p_read ,12 ) < 12
call	5:8	5:44	4	stream_Read
arg	5:21	5:31	5	p_demux->s
water	5:21	0:0	6	p_demux
op	5:28	0:0	6	->
water	5:30	0:0	6	s
arg	5:33	5:39	5	p_read
water	5:33	0:0	6	p_read
arg	5:41	5:44	5	12
water	5:41	0:0	6	12
op	5:46	0:0	4	<
water	5:48	0:0	4	12
stmts	6:8	6:27	3	
return	6:8	6:27	4	VLC_EGENERIC
water	6:15	0:0	5	VLC_EGENERIC
op	7:4	0:0	2	*
water	7:5	0:0	2	p_fcc
op	7:11	0:0	2	=
call	7:13	7:32	2	ReadFOURCC
arg	7:25	7:32	3	p_read
water	7:25	0:0	4	p_read
water	7:33	0:0	2	;
decl	8:4	8:43	2	uint64_t	i_size
op	8:20	0:0	2	=
call	8:22	8:42	3	GetQWBE
arg	8:31	8:42	4	p_read+4
water	8:31	0:0	5	p_read
op	8:38	0:0	5	+
water	8:40	0:0	5	4
if	10:4	16:4	2	(i_size > INT64_MAX)
cond	10:8	10:17	3	i_size > INT64_MAX
water	10:8	0:0	4	i_size
op	10:15	0:0	4	>
water	10:17	0:0	4	INT64_MAX
stmts	11:4	16:4	3	
water	11:4	0:0	4	{
if	12:8	13:36	4	(* p_fcc ==VLC_FOURCC ('d' ,'a' ,'t' ,'a' ) && i_size ==UINT64_C (- 1 ))
cond	12:12	12:81	5	* p_fcc ==VLC_FOURCC ('d' ,'a' ,'t' ,'a' ) && i_size ==UINT64_C (- 1 )
op	12:12	0:0	6	*
water	12:13	0:0	6	p_fcc
op	12:19	0:0	6	==
call	12:22	12:53	6	VLC_FOURCC
arg	12:34	12:37	7	'd'
water	12:34	0:0	8	'd'
arg	12:39	12:42	7	'a'
water	12:39	0:0	8	'a'
arg	12:44	12:47	7	't'
water	12:44	0:0	8	't'
arg	12:49	12:53	7	'a'
water	12:49	0:0	8	'a'
op	12:55	0:0	6	&&
water	12:58	0:0	6	i_size
op	12:65	0:0	6	==
call	12:68	12:81	6	UINT64_C
arg	12:78	12:81	7	-1
op	12:78	0:0	8	-
water	12:79	0:0	8	1
stmts	13:12	13:36	5	
water	13:12	0:0	6	i_size
op	13:19	0:0	6	=
water	13:21	0:0	6	kCHUNK_SIZE_EOF
water	13:36	0:0	6	;
else	14:8	15:31	4
stmts	15:12	15:31	5	
return	15:12	15:31	6	VLC_EGENERIC
water	15:19	0:0	7	VLC_EGENERIC
water	16:4	0:0	4	}
op	17:4	0:0	2	*
water	17:5	0:0	2	pi_size
op	17:13	0:0	2	=
water	17:15	0:0	2	i_size
water	17:21	0:0	2	;
return	18:4	18:22	2	VLC_SUCCESS
water	18:11	0:0	3	VLC_SUCCESS

func	2:0	21:0	0	static void	OSDWidgetUpdate
params	2:27	0:0	1	
param	2:28	2:48	2	subpicture_t *	subpic
param	3:26	3:55	2	const video_format_t *	fmt_src
param	4:26	4:55	2	const video_format_t *	fmt_dst
param	5:26	5:36	2	mtime_t	ts
stmnts	0:0	20:51	1	
decl	7:4	7:57	2	subpicture_updater_sys_t	*sys
op	7:34	0:0	2	=
water	7:36	0:0	2	subpic
op	7:42	0:0	2	->
water	7:44	0:0	2	updater
op	7:51	0:0	2	.
water	7:52	0:0	2	p_sys
call	8:4	8:22	2	VLC_UNUSED
arg	8:15	8:22	3	fmt_src
water	8:15	0:0	4	fmt_src
water	8:23	0:0	2	;
call	8:25	8:38	2	VLC_UNUSED
arg	8:36	8:38	3	ts
water	8:36	0:0	4	ts
water	8:39	0:0	2	;
decl	9:4	9:33	2	video_format_t	fmt
op	9:23	0:0	2	=
op	9:25	0:0	2	*
water	9:26	0:0	2	fmt_dst
water	10:4	0:0	2	fmt
op	10:7	0:0	2	.
water	10:8	0:0	2	i_width
op	10:24	0:0	2	=
water	10:26	0:0	2	fmt
op	10:29	0:0	2	.
water	10:30	0:0	2	i_width
op	10:46	0:0	2	*
water	10:48	0:0	2	fmt
op	10:51	0:0	2	.
water	10:52	0:0	2	i_sar_num
op	10:62	0:0	2	/
water	10:64	0:0	2	fmt
op	10:67	0:0	2	.
water	10:68	0:0	2	i_sar_den
water	10:77	0:0	2	;
water	11:4	0:0	2	fmt
op	11:7	0:0	2	.
water	11:8	0:0	2	i_visible_width
op	11:24	0:0	2	=
water	11:26	0:0	2	fmt
op	11:29	0:0	2	.
water	11:30	0:0	2	i_visible_width
op	11:46	0:0	2	*
water	11:48	0:0	2	fmt
op	11:51	0:0	2	.
water	11:52	0:0	2	i_sar_num
op	11:62	0:0	2	/
water	11:64	0:0	2	fmt
op	11:67	0:0	2	.
water	11:68	0:0	2	i_sar_den
water	11:77	0:0	2	;
water	12:4	0:0	2	fmt
op	12:7	0:0	2	.
water	12:8	0:0	2	i_x_offset
op	12:24	0:0	2	=
water	12:26	0:0	2	fmt
op	12:29	0:0	2	.
water	12:30	0:0	2	i_x_offset
op	12:46	0:0	2	*
water	12:48	0:0	2	fmt
op	12:51	0:0	2	.
water	12:52	0:0	2	i_sar_num
op	12:62	0:0	2	/
water	12:64	0:0	2	fmt
op	12:67	0:0	2	.
water	12:68	0:0	2	i_sar_den
water	12:77	0:0	2	;
water	13:4	0:0	2	fmt
op	13:7	0:0	2	.
water	13:8	0:0	2	i_sar_num
op	13:24	0:0	2	=
water	13:26	0:0	2	1
water	13:27	0:0	2	;
water	14:4	0:0	2	fmt
op	14:7	0:0	2	.
water	14:8	0:0	2	i_sar_den
op	14:24	0:0	2	=
water	14:26	0:0	2	1
water	14:27	0:0	2	;
water	15:4	0:0	2	subpic
op	15:10	0:0	2	->
water	15:12	0:0	2	i_original_picture_width
op	15:38	0:0	2	=
water	15:40	0:0	2	fmt
op	15:43	0:0	2	.
water	15:44	0:0	2	i_visible_width
water	15:59	0:0	2	;
water	16:4	0:0	2	subpic
op	16:10	0:0	2	->
water	16:12	0:0	2	i_original_picture_height
op	16:38	0:0	2	=
water	16:40	0:0	2	fmt
op	16:43	0:0	2	.
water	16:44	0:0	2	i_visible_height
water	16:60	0:0	2	;
if	17:4	18:68	2	(sys -> type == OSD_HOR_SLIDER || sys -> type == OSD_VERT_SLIDER)
cond	17:8	17:52	3	sys -> type == OSD_HOR_SLIDER || sys -> type == OSD_VERT_SLIDER
water	17:8	0:0	4	sys
op	17:11	0:0	4	->
water	17:13	0:0	4	type
op	17:18	0:0	4	==
water	17:21	0:0	4	OSD_HOR_SLIDER
op	17:36	0:0	4	||
water	17:39	0:0	4	sys
op	17:42	0:0	4	->
water	17:44	0:0	4	type
op	17:49	0:0	4	==
water	17:52	0:0	4	OSD_VERT_SLIDER
stmts	18:8	18:68	3	
water	18:8	0:0	4	subpic
op	18:14	0:0	4	->
water	18:16	0:0	4	p_region
op	18:25	0:0	4	=
call	18:27	18:67	4	OSDSlider
arg	18:37	18:46	5	sys->type
water	18:37	0:0	6	sys
op	18:40	0:0	6	->
water	18:42	0:0	6	type
arg	18:48	18:61	5	sys->position
water	18:48	0:0	6	sys
op	18:51	0:0	6	->
water	18:53	0:0	6	position
arg	18:63	18:67	5	&fmt
op	18:63	0:0	6	&
water	18:64	0:0	6	fmt
water	18:68	0:0	4	;
else	19:4	20:51	2
stmts	20:8	20:51	3	
water	20:8	0:0	4	subpic
op	20:14	0:0	4	->
water	20:16	0:0	4	p_region
op	20:25	0:0	4	=
call	20:27	20:50	4	OSDIcon
arg	20:35	20:44	5	sys->type
water	20:35	0:0	6	sys
op	20:38	0:0	6	->
water	20:40	0:0	6	type
arg	20:46	20:50	5	&fmt
op	20:46	0:0	6	&
water	20:47	0:0	6	fmt
water	20:51	0:0	4	;

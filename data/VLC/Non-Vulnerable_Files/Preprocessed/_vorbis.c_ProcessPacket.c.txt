func	2:0	31:0	0	static void *	ProcessPacket
params	2:26	0:0	1	
param	2:28	2:44	2	decoder_t *	p_dec
param	2:46	2:69	2	ogg_packet *	p_oggpacket
param	3:28	3:47	2	block_t * *	pp_block
stmnts	0:0	30:4	1	
decl	5:4	5:39	2	decoder_sys_t	*p_sys
op	5:25	0:0	2	=
water	5:27	0:0	2	p_dec
op	5:32	0:0	2	->
water	5:34	0:0	2	p_sys
decl	6:4	6:32	2	block_t	*p_block
op	6:21	0:0	2	=
op	6:23	0:0	2	*
water	6:24	0:0	2	pp_block
if	8:4	12:4	2	(p_block && p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date ))
cond	8:8	9:53	3	p_block && p_block -> i_pts > VLC_TS_INVALID && p_block -> i_pts !=date_Get (& p_sys -> end_date )
water	8:8	0:0	4	p_block
op	8:16	0:0	4	&&
water	8:19	0:0	4	p_block
op	8:26	0:0	4	->
water	8:28	0:0	4	i_pts
op	8:34	0:0	4	>
water	8:36	0:0	4	VLC_TS_INVALID
op	8:51	0:0	4	&&
water	9:8	0:0	4	p_block
op	9:15	0:0	4	->
water	9:17	0:0	4	i_pts
op	9:23	0:0	4	!=
call	9:26	9:53	4	date_Get
arg	9:36	9:53	5	&p_sys->end_date
op	9:36	0:0	6	&
water	9:37	0:0	6	p_sys
op	9:42	0:0	6	->
water	9:44	0:0	6	end_date
stmts	10:4	12:4	3	
water	10:4	0:0	4	{
call	11:8	11:51	4	date_Set
arg	11:18	11:34	5	&p_sys->end_date
op	11:18	0:0	6	&
water	11:19	0:0	6	p_sys
op	11:24	0:0	6	->
water	11:26	0:0	6	end_date
arg	11:36	11:51	5	p_block->i_pts
water	11:36	0:0	6	p_block
op	11:43	0:0	6	->
water	11:45	0:0	6	i_pts
water	11:52	0:0	4	;
water	12:4	0:0	4	}
if	13:4	18:4	2	(!date_Get (& p_sys -> end_date ))
cond	13:8	13:36	3	!date_Get (& p_sys -> end_date )
op	13:8	0:0	4	!
call	13:9	13:36	4	date_Get
arg	13:19	13:36	5	&p_sys->end_date
op	13:19	0:0	6	&
water	13:20	0:0	6	p_sys
op	13:25	0:0	6	->
water	13:27	0:0	6	end_date
stmts	14:4	18:4	3	
water	14:4	0:0	4	{
if	16:8	16:46	4	(p_block)
cond	16:12	16:12	5	p_block
water	16:12	0:0	6	p_block
stmts	16:22	16:46	5	
call	16:22	16:45	6	block_Release
arg	16:37	16:45	7	p_block
water	16:37	0:0	8	p_block
water	16:46	0:0	6	;
return	17:8	17:19	4	NULL
water	17:15	0:0	5	NULL
water	18:4	0:0	4	}
op	19:4	0:0	2	*
water	19:5	0:0	2	pp_block
op	19:14	0:0	2	=
water	19:16	0:0	2	NULL
water	19:20	0:0	2	;
if	20:4	23:4	2	(p_sys -> b_packetizer)
cond	20:8	20:15	3	p_sys -> b_packetizer
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	b_packetizer
stmts	21:4	23:4	3	
water	21:4	0:0	4	{
return	22:8	22:56	4	SendPacket(p_dec,p_oggpacket,p_block)
call	22:15	22:55	5	SendPacket
arg	22:27	22:32	6	p_dec
water	22:27	0:0	7	p_dec
arg	22:34	22:45	6	p_oggpacket
water	22:34	0:0	7	p_oggpacket
arg	22:47	22:55	6	p_block
water	22:47	0:0	7	p_block
water	23:4	0:0	4	}
else	24:4	30:4	2
stmts	25:4	30:4	3	
water	25:4	0:0	4	{
decl	26:8	26:67	4	block_t	*p_aout_buffer
op	26:31	0:0	4	=
call	26:33	26:66	5	DecodePacket
arg	26:47	26:52	6	p_dec
water	26:47	0:0	7	p_dec
arg	26:54	26:66	6	p_oggpacket
water	26:54	0:0	7	p_oggpacket
if	27:8	28:36	4	(p_block)
cond	27:12	27:12	5	p_block
water	27:12	0:0	6	p_block
stmts	28:12	28:36	5	
call	28:12	28:35	6	block_Release
arg	28:27	28:35	7	p_block
water	28:27	0:0	8	p_block
water	28:36	0:0	6	;
return	29:8	29:28	4	p_aout_buffer
water	29:15	0:0	5	p_aout_buffer
water	30:4	0:0	4	}

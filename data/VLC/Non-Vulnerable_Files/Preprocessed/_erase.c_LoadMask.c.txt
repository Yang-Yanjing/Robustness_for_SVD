func	2:0	28:0	0	static void	LoadMask
params	2:20	0:0	1	
param	2:22	2:40	2	filter_t *	p_filter
param	2:42	2:67	2	const char *	psz_filename
stmnts	0:0	27:34	1	
decl	4:4	4:28	2	image_handler_t	*p_image
decl	5:4	5:34	2	video_format_t	fmt_in
water	5:25	0:0	2	,
decl	5:4	5:34	2	video_format_t	fmt_out
decl	6:4	6:51	2	picture_t	*p_old_mask
op	6:26	0:0	2	=
water	6:28	0:0	2	p_filter
op	6:36	0:0	2	->
water	6:38	0:0	2	p_sys
op	6:43	0:0	2	->
water	6:45	0:0	2	p_mask
call	7:4	7:49	2	memset
arg	7:12	7:19	3	&fmt_in
op	7:12	0:0	4	&
water	7:13	0:0	4	fmt_in
arg	7:21	7:22	3	0
water	7:21	0:0	4	0
arg	7:24	7:49	3	sizeof(video_format_t)
op	7:24	0:0	4	sizeof
water	7:30	0:0	4	(
water	7:32	0:0	4	video_format_t
water	7:47	0:0	4	)
water	7:50	0:0	2	;
call	8:4	8:50	2	memset
arg	8:12	8:20	3	&fmt_out
op	8:12	0:0	4	&
water	8:13	0:0	4	fmt_out
arg	8:22	8:23	3	0
water	8:22	0:0	4	0
arg	8:25	8:50	3	sizeof(video_format_t)
op	8:25	0:0	4	sizeof
water	8:31	0:0	4	(
water	8:33	0:0	4	video_format_t
water	8:48	0:0	4	)
water	8:51	0:0	2	;
water	9:4	0:0	2	fmt_out
op	9:11	0:0	2	.
water	9:12	0:0	2	i_chroma
op	9:21	0:0	2	=
water	9:23	0:0	2	VLC_CODEC_YUVA
water	9:37	0:0	2	;
water	10:4	0:0	2	p_image
op	10:12	0:0	2	=
call	10:14	10:44	2	image_HandlerCreate
arg	10:35	10:44	3	p_filter
water	10:35	0:0	4	p_filter
water	10:45	0:0	2	;
decl	11:4	11:54	2	char	*psz_url
op	11:18	0:0	2	=
call	11:20	11:53	3	vlc_path2uri
arg	11:34	11:46	4	psz_filename
water	11:34	0:0	5	psz_filename
arg	11:48	11:53	4	NULL
water	11:48	0:0	5	NULL
water	12:4	0:0	2	p_filter
op	12:12	0:0	2	->
water	12:14	0:0	2	p_sys
op	12:19	0:0	2	->
water	12:21	0:0	2	p_mask
op	12:28	0:0	2	=
call	13:8	13:59	2	image_ReadUrl
arg	13:23	13:30	3	p_image
water	13:23	0:0	4	p_image
arg	13:32	13:39	3	psz_url
water	13:32	0:0	4	psz_url
arg	13:41	13:48	3	&fmt_in
op	13:41	0:0	4	&
water	13:42	0:0	4	fmt_in
arg	13:50	13:59	3	&fmt_out
op	13:50	0:0	4	&
water	13:51	0:0	4	fmt_out
water	13:60	0:0	2	;
call	14:4	14:18	2	free
arg	14:10	14:18	3	psz_url
water	14:10	0:0	4	psz_url
water	14:19	0:0	2	;
if	15:4	19:4	2	(p_filter -> p_sys -> p_mask)
cond	15:8	15:25	3	p_filter -> p_sys -> p_mask
water	15:8	0:0	4	p_filter
op	15:16	0:0	4	->
water	15:18	0:0	4	p_sys
op	15:23	0:0	4	->
water	15:25	0:0	4	p_mask
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
if	17:8	18:41	4	(p_old_mask)
cond	17:12	17:12	5	p_old_mask
water	17:12	0:0	6	p_old_mask
stmts	18:12	18:41	5	
call	18:12	18:40	6	picture_Release
arg	18:29	18:40	7	p_old_mask
water	18:29	0:0	8	p_old_mask
water	18:41	0:0	6	;
water	19:4	0:0	4	}
else	20:4	24:4	2
stmts	20:9	24:4	3	
if	20:9	24:4	4	(p_old_mask)
cond	20:13	20:13	5	p_old_mask
water	20:13	0:0	6	p_old_mask
stmts	21:4	24:4	5	
water	21:4	0:0	6	{
water	22:8	0:0	6	p_filter
op	22:16	0:0	6	->
water	22:18	0:0	6	p_sys
op	22:23	0:0	6	->
water	22:25	0:0	6	p_mask
op	22:32	0:0	6	=
water	22:34	0:0	6	p_old_mask
water	22:44	0:0	6	;
call	23:8	23:77	6	msg_Err
arg	23:17	23:25	7	p_filter
water	23:17	0:0	8	p_filter
arg	23:27	23:77	7	"Error while loading new mask. Keeping old mask."
water	23:27	0:0	8	"Error while loading new mask. Keeping old mask."
water	23:78	0:0	6	;
water	24:4	0:0	6	}
else	25:4	26:79	2
stmts	26:8	26:79	3	
call	26:8	26:78	4	msg_Err
arg	26:17	26:25	5	p_filter
water	26:17	0:0	6	p_filter
arg	26:27	26:78	5	"Error while loading new mask. No mask available."
water	26:27	0:0	6	"Error while loading new mask. No mask available."
water	26:79	0:0	4	;
call	27:4	27:33	2	image_HandlerDelete
arg	27:25	27:33	3	p_image
water	27:25	0:0	4	p_image
water	27:34	0:0	2	;

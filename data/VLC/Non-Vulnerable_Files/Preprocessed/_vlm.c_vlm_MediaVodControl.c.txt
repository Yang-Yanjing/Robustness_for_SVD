func	2:0	97:0	0	static int	vlm_MediaVodControl
params	2:30	0:0	1	
param	2:32	2:47	2	void *	p_private
param	2:49	2:73	2	vod_media_t *	p_vod_media
param	3:32	3:50	2	const char *	psz_id
param	3:52	3:63	2	int	i_query
param	3:65	3:78	2	va_list	args
stmnts	0:0	96:16	1	
decl	5:4	5:35	2	vlm_t	*vlm
op	5:15	0:0	2	=
water	5:17	0:0	2	(
water	5:18	0:0	2	vlm_t
op	5:24	0:0	2	*
water	5:25	0:0	2	)
water	5:26	0:0	2	p_private
decl	6:4	6:16	2	int	i
water	6:9	0:0	2	,
decl	6:4	6:16	2	int	i_ret
decl	7:4	7:19	2	const char	*psz
decl	8:4	8:14	2	int64_t	id
if	9:4	10:27	2	(! p_private || ! p_vod_media)
cond	9:8	9:23	3	! p_private || ! p_vod_media
op	9:8	0:0	4	!
water	9:9	0:0	4	p_private
op	9:19	0:0	4	||
op	9:22	0:0	4	!
water	9:23	0:0	4	p_vod_media
stmts	10:8	10:27	3	
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
call	11:4	11:31	2	vlc_mutex_lock
arg	11:20	11:31	3	&vlm->lock
op	11:20	0:0	4	&
water	11:21	0:0	4	vlm
op	11:24	0:0	4	->
water	11:26	0:0	4	lock
water	11:32	0:0	2	;
for	13:4	20:4	2	(i = 0 , id = - 1 ;i < vlm -> i_media;i ++)
forinit	13:9	13:23	3	i = 0 , id = - 1 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	,
water	13:16	0:0	4	id
op	13:19	0:0	4	=
op	13:21	0:0	4	-
water	13:22	0:0	4	1
water	13:23	0:0	4	;
cond	13:25	13:34	3	i < vlm -> i_media
water	13:25	0:0	4	i
op	13:27	0:0	4	<
water	13:29	0:0	4	vlm
op	13:32	0:0	4	->
water	13:34	0:0	4	i_media
forexpr	13:43	13:44	3	i ++
water	13:43	0:0	4	i
op	13:44	0:0	4	++
stmts	14:4	20:4	3	
water	14:4	0:0	4	{
if	15:8	19:8	4	(p_vod_media == vlm -> media [ i ] -> vod . p_media)
cond	15:12	15:46	5	p_vod_media == vlm -> media [ i ] -> vod . p_media
water	15:12	0:0	6	p_vod_media
op	15:24	0:0	6	==
water	15:27	0:0	6	vlm
op	15:30	0:0	6	->
water	15:32	0:0	6	media
op	15:37	0:0	6	[
water	15:38	0:0	6	i
op	15:39	0:0	6	]
op	15:40	0:0	6	->
water	15:42	0:0	6	vod
op	15:45	0:0	6	.
water	15:46	0:0	6	p_media
stmts	16:8	19:8	5	
water	16:8	0:0	6	{
water	17:12	0:0	6	id
op	17:15	0:0	6	=
water	17:17	0:0	6	vlm
op	17:20	0:0	6	->
water	17:22	0:0	6	media
op	17:27	0:0	6	[
water	17:28	0:0	6	i
op	17:29	0:0	6	]
op	17:30	0:0	6	->
water	17:32	0:0	6	cfg
op	17:35	0:0	6	.
water	17:36	0:0	6	id
water	17:38	0:0	6	;
break	18:12	18:17	6	
water	19:8	0:0	6	}
water	20:4	0:0	4	}
if	21:4	25:4	2	(id == - 1)
cond	21:8	21:15	3	id == - 1
water	21:8	0:0	4	id
op	21:11	0:0	4	==
op	21:14	0:0	4	-
water	21:15	0:0	4	1
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:37	4	vlc_mutex_unlock
arg	23:26	23:37	5	&vlm->lock
op	23:26	0:0	6	&
water	23:27	0:0	6	vlm
op	23:30	0:0	6	->
water	23:32	0:0	6	lock
water	23:38	0:0	4	;
return	24:8	24:27	4	VLC_EGENERIC
water	24:15	0:0	5	VLC_EGENERIC
water	25:4	0:0	4	}
switch	26:4	94:4	2	(i_query)
cond	26:12	26:12	3	i_query
water	26:12	0:0	4	i_query
stmts	27:4	94:4	3	
water	27:4	0:0	4	{
label	28:4	28:23	4	case VOD_MEDIA_PLAY :
water	29:4	0:0	4	{
water	30:8	0:0	4	psz
op	30:12	0:0	4	=
water	30:14	0:0	4	(
water	30:15	0:0	4	const
water	30:21	0:0	4	char
op	30:26	0:0	4	*
water	30:27	0:0	4	)
call	30:28	30:55	4	va_arg
arg	30:36	30:40	5	args
water	30:36	0:0	6	args
arg	30:42	30:55	5	constchar*
water	30:42	0:0	6	const
water	30:48	0:0	6	char
op	30:53	0:0	6	*
water	30:56	0:0	4	;
decl	31:8	31:61	4	int64_t	*i_time
op	31:24	0:0	4	=
water	31:26	0:0	4	(
water	31:27	0:0	4	int64_t
op	31:35	0:0	4	*
water	31:36	0:0	4	)
call	31:37	31:60	5	va_arg
arg	31:45	31:49	6	args
water	31:45	0:0	7	args
arg	31:51	31:60	6	int64_t*
water	31:51	0:0	7	int64_t
op	31:59	0:0	7	*
decl	32:8	32:28	4	bool	b_retry
op	32:21	0:0	4	=
water	32:23	0:0	4	false
if	33:8	40:8	4	(* i_time < 0)
cond	33:12	33:22	5	* i_time < 0
op	33:12	0:0	6	*
water	33:13	0:0	6	i_time
op	33:20	0:0	6	<
water	33:22	0:0	6	0
stmts	34:8	40:8	5	
water	34:8	0:0	6	{
water	36:12	0:0	6	i_ret
op	36:18	0:0	6	=
call	36:20	36:94	6	vlm_ControlInternal
arg	36:41	36:44	7	vlm
water	36:41	0:0	8	vlm
arg	36:46	36:73	7	VLM_GET_MEDIA_INSTANCE_TIME
water	36:46	0:0	8	VLM_GET_MEDIA_INSTANCE_TIME
arg	36:75	36:77	7	id
water	36:75	0:0	8	id
arg	36:79	36:85	7	psz_id
water	36:79	0:0	8	psz_id
arg	36:87	36:94	7	i_time
water	36:87	0:0	8	i_time
water	36:95	0:0	6	;
if	38:12	39:27	6	(i_ret)
cond	38:16	38:16	7	i_ret
water	38:16	0:0	8	i_ret
stmts	39:16	39:27	7	
op	39:16	0:0	8	*
water	39:17	0:0	8	i_time
op	39:24	0:0	8	=
water	39:26	0:0	8	0
water	39:27	0:0	8	;
water	40:8	0:0	6	}
else	41:8	46:8	4
stmts	42:8	46:8	5	
water	42:8	0:0	6	{
water	45:12	0:0	6	b_retry
op	45:20	0:0	6	=
call	45:22	45:97	6	vlm_ControlInternal
arg	45:43	45:46	7	vlm
water	45:43	0:0	8	vlm
arg	45:48	45:75	7	VLM_SET_MEDIA_INSTANCE_TIME
water	45:48	0:0	8	VLM_SET_MEDIA_INSTANCE_TIME
arg	45:77	45:79	7	id
water	45:77	0:0	8	id
arg	45:81	45:87	7	psz_id
water	45:81	0:0	8	psz_id
arg	45:89	45:97	7	*i_time
op	45:89	0:0	8	*
water	45:90	0:0	8	i_time
water	45:98	0:0	6	;
water	46:8	0:0	6	}
water	47:8	0:0	4	i_ret
op	47:14	0:0	4	=
call	47:16	47:91	4	vlm_ControlInternal
arg	47:37	47:40	5	vlm
water	47:37	0:0	6	vlm
arg	47:42	47:70	5	VLM_START_MEDIA_VOD_INSTANCE
water	47:42	0:0	6	VLM_START_MEDIA_VOD_INSTANCE
arg	47:72	47:74	5	id
water	47:72	0:0	6	id
arg	47:76	47:82	5	psz_id
water	47:76	0:0	6	psz_id
arg	47:84	47:85	5	0
water	47:84	0:0	6	0
arg	47:87	47:91	5	psz
water	47:87	0:0	6	psz
water	47:92	0:0	4	;
if	48:8	49:96	4	(! i_ret && b_retry)
cond	48:12	48:22	5	! i_ret && b_retry
op	48:12	0:0	6	!
water	48:13	0:0	6	i_ret
op	48:19	0:0	6	&&
water	48:22	0:0	6	b_retry
stmts	49:12	49:96	5	
water	49:12	0:0	6	i_ret
op	49:18	0:0	6	=
call	49:20	49:95	6	vlm_ControlInternal
arg	49:41	49:44	7	vlm
water	49:41	0:0	8	vlm
arg	49:46	49:73	7	VLM_SET_MEDIA_INSTANCE_TIME
water	49:46	0:0	8	VLM_SET_MEDIA_INSTANCE_TIME
arg	49:75	49:77	7	id
water	49:75	0:0	8	id
arg	49:79	49:85	7	psz_id
water	49:79	0:0	8	psz_id
arg	49:87	49:95	7	*i_time
op	49:87	0:0	8	*
water	49:88	0:0	8	i_time
water	49:96	0:0	6	;
break	50:8	50:13	4	
water	51:4	0:0	4	}
label	52:4	52:24	4	case VOD_MEDIA_PAUSE :
water	53:4	0:0	4	{
decl	54:8	54:61	4	int64_t	*i_time
op	54:24	0:0	4	=
water	54:26	0:0	4	(
water	54:27	0:0	4	int64_t
op	54:35	0:0	4	*
water	54:36	0:0	4	)
call	54:37	54:60	5	va_arg
arg	54:45	54:49	6	args
water	54:45	0:0	7	args
arg	54:51	54:60	6	int64_t*
water	54:51	0:0	7	int64_t
op	54:59	0:0	7	*
water	55:8	0:0	4	i_ret
op	55:14	0:0	4	=
call	55:16	55:79	4	vlm_ControlInternal
arg	55:37	55:40	5	vlm
water	55:37	0:0	6	vlm
arg	55:42	55:66	5	VLM_PAUSE_MEDIA_INSTANCE
water	55:42	0:0	6	VLM_PAUSE_MEDIA_INSTANCE
arg	55:68	55:70	5	id
water	55:68	0:0	6	id
arg	55:72	55:79	5	psz_id
water	55:72	0:0	6	psz_id
water	55:80	0:0	4	;
if	56:8	57:95	4	(! i_ret)
cond	56:12	56:13	5	! i_ret
op	56:12	0:0	6	!
water	56:13	0:0	6	i_ret
stmts	57:12	57:95	5	
water	57:12	0:0	6	i_ret
op	57:18	0:0	6	=
call	57:20	57:94	6	vlm_ControlInternal
arg	57:41	57:44	7	vlm
water	57:41	0:0	8	vlm
arg	57:46	57:73	7	VLM_GET_MEDIA_INSTANCE_TIME
water	57:46	0:0	8	VLM_GET_MEDIA_INSTANCE_TIME
arg	57:75	57:77	7	id
water	57:75	0:0	8	id
arg	57:79	57:85	7	psz_id
water	57:79	0:0	8	psz_id
arg	57:87	57:94	7	i_time
water	57:87	0:0	8	i_time
water	57:95	0:0	6	;
break	58:8	58:13	4	
water	59:4	0:0	4	}
label	60:4	60:23	4	case VOD_MEDIA_STOP :
water	61:8	0:0	4	i_ret
op	61:14	0:0	4	=
call	61:16	61:78	4	vlm_ControlInternal
arg	61:37	61:40	5	vlm
water	61:37	0:0	6	vlm
arg	61:42	61:65	5	VLM_STOP_MEDIA_INSTANCE
water	61:42	0:0	6	VLM_STOP_MEDIA_INSTANCE
arg	61:67	61:69	5	id
water	61:67	0:0	6	id
arg	61:71	61:78	5	psz_id
water	61:71	0:0	6	psz_id
water	61:79	0:0	4	;
break	62:8	62:13	4	
label	63:4	63:23	4	case VOD_MEDIA_SEEK :
water	64:4	0:0	4	{
decl	65:8	65:57	4	int64_t	i_time
op	65:23	0:0	4	=
water	65:25	0:0	4	(
water	65:26	0:0	4	int64_t
water	65:33	0:0	4	)
call	65:34	65:56	5	va_arg
arg	65:42	65:46	6	args
water	65:42	0:0	7	args
arg	65:48	65:56	6	int64_t
water	65:48	0:0	7	int64_t
water	66:8	0:0	4	i_ret
op	66:14	0:0	4	=
call	66:16	66:90	4	vlm_ControlInternal
arg	66:37	66:40	5	vlm
water	66:37	0:0	6	vlm
arg	66:42	66:69	5	VLM_SET_MEDIA_INSTANCE_TIME
water	66:42	0:0	6	VLM_SET_MEDIA_INSTANCE_TIME
arg	66:71	66:73	5	id
water	66:71	0:0	6	id
arg	66:75	66:81	5	psz_id
water	66:75	0:0	6	psz_id
arg	66:83	66:90	5	i_time
water	66:83	0:0	6	i_time
water	66:91	0:0	4	;
break	67:8	67:13	4	
water	68:4	0:0	4	}
label	69:4	69:25	4	case VOD_MEDIA_REWIND :
water	70:4	0:0	4	{
decl	71:8	71:55	4	double	d_scale
op	71:23	0:0	4	=
water	71:25	0:0	4	(
water	71:26	0:0	4	double
water	71:32	0:0	4	)
call	71:33	71:54	5	va_arg
arg	71:41	71:45	6	args
water	71:41	0:0	7	args
arg	71:47	71:54	6	double
water	71:47	0:0	7	double
decl	72:8	72:25	4	double	d_position
call	73:8	73:91	4	vlm_ControlInternal
arg	73:29	73:32	5	vlm
water	73:29	0:0	6	vlm
arg	73:34	73:65	5	VLM_GET_MEDIA_INSTANCE_POSITION
water	73:34	0:0	6	VLM_GET_MEDIA_INSTANCE_POSITION
arg	73:67	73:69	5	id
water	73:67	0:0	6	id
arg	73:71	73:77	5	psz_id
water	73:71	0:0	6	psz_id
arg	73:79	73:91	5	&d_position
op	73:79	0:0	6	&
water	73:80	0:0	6	d_position
water	73:92	0:0	4	;
water	74:8	0:0	4	d_position
op	74:19	0:0	4	-=
water	74:22	0:0	4	(
water	74:23	0:0	4	d_scale
op	74:31	0:0	4	/
water	74:33	0:0	4	1000
op	74:37	0:0	4	.
water	74:38	0:0	4	0
water	74:39	0:0	4	)
water	74:40	0:0	4	;
if	75:8	76:28	4	(d_position < 0 . 0)
cond	75:12	75:27	5	d_position < 0 . 0
water	75:12	0:0	6	d_position
op	75:23	0:0	6	<
water	75:25	0:0	6	0
op	75:26	0:0	6	.
water	75:27	0:0	6	0
stmts	76:12	76:28	5	
water	76:12	0:0	6	d_position
op	76:23	0:0	6	=
water	76:25	0:0	6	0
op	76:26	0:0	6	.
water	76:27	0:0	6	0
water	76:28	0:0	6	;
water	77:8	0:0	4	i_ret
op	77:14	0:0	4	=
call	77:16	77:98	4	vlm_ControlInternal
arg	77:37	77:40	5	vlm
water	77:37	0:0	6	vlm
arg	77:42	77:73	5	VLM_SET_MEDIA_INSTANCE_POSITION
water	77:42	0:0	6	VLM_SET_MEDIA_INSTANCE_POSITION
arg	77:75	77:77	5	id
water	77:75	0:0	6	id
arg	77:79	77:85	5	psz_id
water	77:79	0:0	6	psz_id
arg	77:87	77:98	5	d_position
water	77:87	0:0	6	d_position
water	77:99	0:0	4	;
break	78:8	78:13	4	
water	79:4	0:0	4	}
label	80:4	80:26	4	case VOD_MEDIA_FORWARD :
water	81:4	0:0	4	{
decl	82:8	82:55	4	double	d_scale
op	82:23	0:0	4	=
water	82:25	0:0	4	(
water	82:26	0:0	4	double
water	82:32	0:0	4	)
call	82:33	82:54	5	va_arg
arg	82:41	82:45	6	args
water	82:41	0:0	7	args
arg	82:47	82:54	6	double
water	82:47	0:0	7	double
decl	83:8	83:25	4	double	d_position
call	84:8	84:91	4	vlm_ControlInternal
arg	84:29	84:32	5	vlm
water	84:29	0:0	6	vlm
arg	84:34	84:65	5	VLM_GET_MEDIA_INSTANCE_POSITION
water	84:34	0:0	6	VLM_GET_MEDIA_INSTANCE_POSITION
arg	84:67	84:69	5	id
water	84:67	0:0	6	id
arg	84:71	84:77	5	psz_id
water	84:71	0:0	6	psz_id
arg	84:79	84:91	5	&d_position
op	84:79	0:0	6	&
water	84:80	0:0	6	d_position
water	84:92	0:0	4	;
water	85:8	0:0	4	d_position
op	85:19	0:0	4	+=
water	85:22	0:0	4	(
water	85:23	0:0	4	d_scale
op	85:31	0:0	4	/
water	85:33	0:0	4	1000
op	85:37	0:0	4	.
water	85:38	0:0	4	0
water	85:39	0:0	4	)
water	85:40	0:0	4	;
if	86:8	87:28	4	(d_position > 1 . 0)
cond	86:12	86:27	5	d_position > 1 . 0
water	86:12	0:0	6	d_position
op	86:23	0:0	6	>
water	86:25	0:0	6	1
op	86:26	0:0	6	.
water	86:27	0:0	6	0
stmts	87:12	87:28	5	
water	87:12	0:0	6	d_position
op	87:23	0:0	6	=
water	87:25	0:0	6	1
op	87:26	0:0	6	.
water	87:27	0:0	6	0
water	87:28	0:0	6	;
water	88:8	0:0	4	i_ret
op	88:14	0:0	4	=
call	88:16	88:98	4	vlm_ControlInternal
arg	88:37	88:40	5	vlm
water	88:37	0:0	6	vlm
arg	88:42	88:73	5	VLM_SET_MEDIA_INSTANCE_POSITION
water	88:42	0:0	6	VLM_SET_MEDIA_INSTANCE_POSITION
arg	88:75	88:77	5	id
water	88:75	0:0	6	id
arg	88:79	88:85	5	psz_id
water	88:79	0:0	6	psz_id
arg	88:87	88:98	5	d_position
water	88:87	0:0	6	d_position
water	88:99	0:0	4	;
break	89:8	89:13	4	
water	90:4	0:0	4	}
label	91:4	91:11	4	default :
water	92:8	0:0	4	i_ret
op	92:14	0:0	4	=
water	92:16	0:0	4	VLC_EGENERIC
water	92:28	0:0	4	;
break	93:8	93:13	4	
water	94:4	0:0	4	}
call	95:4	95:33	2	vlc_mutex_unlock
arg	95:22	95:33	3	&vlm->lock
op	95:22	0:0	4	&
water	95:23	0:0	4	vlm
op	95:26	0:0	4	->
water	95:28	0:0	4	lock
water	95:34	0:0	2	;
return	96:4	96:16	2	i_ret
water	96:11	0:0	3	i_ret

func	2:0	46:0	0	int	puzzle_sort_layers
params	2:22	0:0	1	
param	2:24	2:42	2	filter_t *	p_filter
stmnts	0:0	45:22	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:21	2	int32_t	i_idx
op	5:18	0:0	2	=
water	5:20	0:0	2	0
for	6:4	39:4	2	( uint32_t i_qty = 1 ;i_qty <= p_sys -> s_current_param . i_pieces_nbr;i_qty ++)
forinit	0:0	6:27	3	 uint32_t i_qty = 1 ;
decl	6:9	6:27	4	uint32_t	i_qty
op	6:24	0:0	4	=
water	6:26	0:0	4	1
cond	6:29	6:61	3	i_qty <= p_sys -> s_current_param . i_pieces_nbr
water	6:29	0:0	4	i_qty
op	6:35	0:0	4	<=
water	6:38	0:0	4	p_sys
op	6:43	0:0	4	->
water	6:45	0:0	4	s_current_param
op	6:60	0:0	4	.
water	6:61	0:0	4	i_pieces_nbr
forexpr	6:75	6:80	3	i_qty ++
water	6:75	0:0	4	i_qty
op	6:80	0:0	4	++
stmts	6:84	39:4	3	
water	6:84	0:0	4	{
for	8:8	22:8	4	( uint32_t i_pce_loop = 0 ;i_pce_loop < p_sys -> s_current_param . i_pieces_nbr;i_pce_loop ++)
forinit	0:0	8:36	5	 uint32_t i_pce_loop = 0 ;
decl	8:13	8:36	6	uint32_t	i_pce_loop
op	8:33	0:0	6	=
water	8:35	0:0	6	0
cond	8:38	8:74	5	i_pce_loop < p_sys -> s_current_param . i_pieces_nbr
water	8:38	0:0	6	i_pce_loop
op	8:49	0:0	6	<
water	8:51	0:0	6	p_sys
op	8:56	0:0	6	->
water	8:58	0:0	6	s_current_param
op	8:73	0:0	6	.
water	8:74	0:0	6	i_pieces_nbr
forexpr	8:88	8:98	5	i_pce_loop ++
water	8:88	0:0	6	i_pce_loop
op	8:98	0:0	6	++
stmts	8:102	22:8	5	
water	8:102	0:0	6	{
decl	9:12	9:68	6	uint32_t	i_grp
op	9:27	0:0	6	=
water	9:29	0:0	6	p_sys
op	9:34	0:0	6	->
water	9:36	0:0	6	ps_pieces
op	9:45	0:0	6	[
water	9:46	0:0	6	i_pce_loop
op	9:56	0:0	6	]
op	9:57	0:0	6	.
water	9:58	0:0	6	i_group_ID
if	10:12	21:12	6	(p_sys -> pi_group_qty [ i_grp ] == ( int32_t ) i_qty)
cond	10:17	10:56	7	p_sys -> pi_group_qty [ i_grp ] == ( int32_t ) i_qty
water	10:17	0:0	8	p_sys
op	10:22	0:0	8	->
water	10:24	0:0	8	pi_group_qty
op	10:36	0:0	8	[
water	10:37	0:0	8	i_grp
op	10:42	0:0	8	]
op	10:44	0:0	8	==
water	10:47	0:0	8	(
water	10:48	0:0	8	int32_t
water	10:55	0:0	8	)
water	10:56	0:0	8	i_qty
stmts	10:64	21:12	7	
water	10:64	0:0	8	{
decl	11:16	11:38	8	bool	b_check_ok
op	11:32	0:0	8	=
water	11:34	0:0	8	true
for	12:16	14:42	8	( int32_t i_pce_check = 0 ;i_pce_check < i_idx;i_pce_check ++)
forinit	0:0	12:44	9	 int32_t i_pce_check = 0 ;
decl	12:21	12:44	10	int32_t	i_pce_check
op	12:41	0:0	10	=
water	12:43	0:0	10	0
cond	12:46	12:60	9	i_pce_check < i_idx
water	12:46	0:0	10	i_pce_check
op	12:58	0:0	10	<
water	12:60	0:0	10	i_idx
forexpr	12:67	12:78	9	i_pce_check ++
water	12:67	0:0	10	i_pce_check
op	12:78	0:0	10	++
stmts	13:20	14:42	9	
if	13:20	14:42	10	(p_sys -> ps_pieces_tmp [ i_pce_check ] . i_group_ID == i_grp)
cond	13:25	13:73	11	p_sys -> ps_pieces_tmp [ i_pce_check ] . i_group_ID == i_grp
water	13:25	0:0	12	p_sys
op	13:30	0:0	12	->
water	13:32	0:0	12	ps_pieces_tmp
op	13:45	0:0	12	[
water	13:46	0:0	12	i_pce_check
op	13:57	0:0	12	]
op	13:58	0:0	12	.
water	13:59	0:0	12	i_group_ID
op	13:70	0:0	12	==
water	13:73	0:0	12	i_grp
stmts	14:24	14:42	11	
water	14:24	0:0	12	b_check_ok
op	14:35	0:0	12	=
water	14:37	0:0	12	false
water	14:42	0:0	12	;
if	15:16	20:24	8	(b_check_ok)
cond	15:21	15:21	9	b_check_ok
water	15:21	0:0	10	b_check_ok
stmts	16:20	20:24	9	
for	16:20	20:24	10	( uint32_t i_pce = i_pce_loop ;i_pce < p_sys -> s_current_param . i_pieces_nbr;i_pce ++)
forinit	0:0	16:52	11	 uint32_t i_pce = i_pce_loop ;
decl	16:25	16:52	12	uint32_t	i_pce
op	16:40	0:0	12	=
water	16:42	0:0	12	i_pce_loop
cond	16:54	16:85	11	i_pce < p_sys -> s_current_param . i_pieces_nbr
water	16:54	0:0	12	i_pce
op	16:60	0:0	12	<
water	16:62	0:0	12	p_sys
op	16:67	0:0	12	->
water	16:69	0:0	12	s_current_param
op	16:84	0:0	12	.
water	16:85	0:0	12	i_pieces_nbr
forexpr	16:99	16:104	11	i_pce ++
water	16:99	0:0	12	i_pce
op	16:104	0:0	12	++
stmts	17:24	20:24	11	
if	17:24	20:24	12	(( p_sys -> ps_pieces [ i_pce ] . i_group_ID == i_grp ) && ! p_sys -> ps_pieces [ i_pce ] . b_finished)
cond	17:28	17:104	13	( p_sys -> ps_pieces [ i_pce ] . i_group_ID == i_grp ) && ! p_sys -> ps_pieces [ i_pce ] . b_finished
water	17:28	0:0	14	(
water	17:30	0:0	14	p_sys
op	17:35	0:0	14	->
water	17:37	0:0	14	ps_pieces
op	17:46	0:0	14	[
water	17:47	0:0	14	i_pce
op	17:52	0:0	14	]
op	17:53	0:0	14	.
water	17:54	0:0	14	i_group_ID
op	17:65	0:0	14	==
water	17:68	0:0	14	i_grp
water	17:74	0:0	14	)
op	17:76	0:0	14	&&
op	17:79	0:0	14	!
water	17:80	0:0	14	p_sys
op	17:85	0:0	14	->
water	17:87	0:0	14	ps_pieces
op	17:96	0:0	14	[
water	17:97	0:0	14	i_pce
op	17:102	0:0	14	]
op	17:103	0:0	14	.
water	17:104	0:0	14	b_finished
stmts	17:117	20:24	13	
water	17:117	0:0	14	{
call	18:28	18:107	14	memcpy
arg	18:36	18:64	15	&p_sys->ps_pieces_tmp[i_idx]
op	18:36	0:0	16	&
water	18:37	0:0	16	p_sys
op	18:42	0:0	16	->
water	18:44	0:0	16	ps_pieces_tmp
op	18:57	0:0	16	[
water	18:58	0:0	16	i_idx
op	18:63	0:0	16	]
arg	18:66	18:90	15	&p_sys->ps_pieces[i_pce]
op	18:66	0:0	16	&
water	18:67	0:0	16	p_sys
op	18:72	0:0	16	->
water	18:74	0:0	16	ps_pieces
op	18:83	0:0	16	[
water	18:84	0:0	16	i_pce
op	18:89	0:0	16	]
arg	18:92	18:107	15	sizeof(piece_t)
op	18:92	0:0	16	sizeof
water	18:98	0:0	16	(
water	18:99	0:0	16	piece_t
water	18:106	0:0	16	)
water	18:108	0:0	14	;
water	19:28	0:0	14	i_idx
op	19:33	0:0	14	++
water	19:35	0:0	14	;
water	20:24	0:0	14	}
water	21:12	0:0	8	}
water	22:8	0:0	6	}
for	24:8	38:8	4	( uint32_t i_pce_loop = 0 ;i_pce_loop < p_sys -> s_current_param . i_pieces_nbr;i_pce_loop ++)
forinit	0:0	24:36	5	 uint32_t i_pce_loop = 0 ;
decl	24:13	24:36	6	uint32_t	i_pce_loop
op	24:33	0:0	6	=
water	24:35	0:0	6	0
cond	24:38	24:74	5	i_pce_loop < p_sys -> s_current_param . i_pieces_nbr
water	24:38	0:0	6	i_pce_loop
op	24:49	0:0	6	<
water	24:51	0:0	6	p_sys
op	24:56	0:0	6	->
water	24:58	0:0	6	s_current_param
op	24:73	0:0	6	.
water	24:74	0:0	6	i_pieces_nbr
forexpr	24:88	24:98	5	i_pce_loop ++
water	24:88	0:0	6	i_pce_loop
op	24:98	0:0	6	++
stmts	24:102	38:8	5	
water	24:102	0:0	6	{
decl	25:12	25:68	6	uint32_t	i_grp
op	25:27	0:0	6	=
water	25:29	0:0	6	p_sys
op	25:34	0:0	6	->
water	25:36	0:0	6	ps_pieces
op	25:45	0:0	6	[
water	25:46	0:0	6	i_pce_loop
op	25:56	0:0	6	]
op	25:57	0:0	6	.
water	25:58	0:0	6	i_group_ID
if	26:12	37:12	6	(p_sys -> pi_group_qty [ i_grp ] == ( int32_t ) i_qty)
cond	26:17	26:56	7	p_sys -> pi_group_qty [ i_grp ] == ( int32_t ) i_qty
water	26:17	0:0	8	p_sys
op	26:22	0:0	8	->
water	26:24	0:0	8	pi_group_qty
op	26:36	0:0	8	[
water	26:37	0:0	8	i_grp
op	26:42	0:0	8	]
op	26:44	0:0	8	==
water	26:47	0:0	8	(
water	26:48	0:0	8	int32_t
water	26:55	0:0	8	)
water	26:56	0:0	8	i_qty
stmts	26:64	37:12	7	
water	26:64	0:0	8	{
decl	27:16	27:38	8	bool	b_check_ok
op	27:32	0:0	8	=
water	27:34	0:0	8	true
for	28:16	30:42	8	( int32_t i_pce_check = 0 ;i_pce_check < i_idx;i_pce_check ++)
forinit	0:0	28:44	9	 int32_t i_pce_check = 0 ;
decl	28:21	28:44	10	int32_t	i_pce_check
op	28:41	0:0	10	=
water	28:43	0:0	10	0
cond	28:46	28:60	9	i_pce_check < i_idx
water	28:46	0:0	10	i_pce_check
op	28:58	0:0	10	<
water	28:60	0:0	10	i_idx
forexpr	28:67	28:78	9	i_pce_check ++
water	28:67	0:0	10	i_pce_check
op	28:78	0:0	10	++
stmts	29:20	30:42	9	
if	29:20	30:42	10	(p_sys -> ps_pieces_tmp [ i_pce_check ] . i_group_ID == i_grp && p_sys -> ps_pieces_tmp [ i_pce_check ] . b_finished)
cond	29:25	29:116	11	p_sys -> ps_pieces_tmp [ i_pce_check ] . i_group_ID == i_grp && p_sys -> ps_pieces_tmp [ i_pce_check ] . b_finished
water	29:25	0:0	12	p_sys
op	29:30	0:0	12	->
water	29:32	0:0	12	ps_pieces_tmp
op	29:45	0:0	12	[
water	29:46	0:0	12	i_pce_check
op	29:57	0:0	12	]
op	29:58	0:0	12	.
water	29:59	0:0	12	i_group_ID
op	29:70	0:0	12	==
water	29:73	0:0	12	i_grp
op	29:79	0:0	12	&&
water	29:82	0:0	12	p_sys
op	29:87	0:0	12	->
water	29:89	0:0	12	ps_pieces_tmp
op	29:102	0:0	12	[
water	29:103	0:0	12	i_pce_check
op	29:114	0:0	12	]
op	29:115	0:0	12	.
water	29:116	0:0	12	b_finished
stmts	30:24	30:42	11	
water	30:24	0:0	12	b_check_ok
op	30:35	0:0	12	=
water	30:37	0:0	12	false
water	30:42	0:0	12	;
if	31:16	36:24	8	(b_check_ok)
cond	31:21	31:21	9	b_check_ok
water	31:21	0:0	10	b_check_ok
stmts	32:20	36:24	9	
for	32:20	36:24	10	( uint32_t i_pce = i_pce_loop ;i_pce < p_sys -> s_current_param . i_pieces_nbr;i_pce ++)
forinit	0:0	32:52	11	 uint32_t i_pce = i_pce_loop ;
decl	32:25	32:52	12	uint32_t	i_pce
op	32:40	0:0	12	=
water	32:42	0:0	12	i_pce_loop
cond	32:54	32:85	11	i_pce < p_sys -> s_current_param . i_pieces_nbr
water	32:54	0:0	12	i_pce
op	32:60	0:0	12	<
water	32:62	0:0	12	p_sys
op	32:67	0:0	12	->
water	32:69	0:0	12	s_current_param
op	32:84	0:0	12	.
water	32:85	0:0	12	i_pieces_nbr
forexpr	32:99	32:104	11	i_pce ++
water	32:99	0:0	12	i_pce
op	32:104	0:0	12	++
stmts	33:24	36:24	11	
if	33:24	36:24	12	(( p_sys -> ps_pieces [ i_pce ] . i_group_ID == i_grp ) && p_sys -> ps_pieces [ i_pce ] . b_finished)
cond	33:28	33:103	13	( p_sys -> ps_pieces [ i_pce ] . i_group_ID == i_grp ) && p_sys -> ps_pieces [ i_pce ] . b_finished
water	33:28	0:0	14	(
water	33:30	0:0	14	p_sys
op	33:35	0:0	14	->
water	33:37	0:0	14	ps_pieces
op	33:46	0:0	14	[
water	33:47	0:0	14	i_pce
op	33:52	0:0	14	]
op	33:53	0:0	14	.
water	33:54	0:0	14	i_group_ID
op	33:65	0:0	14	==
water	33:68	0:0	14	i_grp
water	33:74	0:0	14	)
op	33:76	0:0	14	&&
water	33:79	0:0	14	p_sys
op	33:84	0:0	14	->
water	33:86	0:0	14	ps_pieces
op	33:95	0:0	14	[
water	33:96	0:0	14	i_pce
op	33:101	0:0	14	]
op	33:102	0:0	14	.
water	33:103	0:0	14	b_finished
stmts	33:116	36:24	13	
water	33:116	0:0	14	{
call	34:28	34:107	14	memcpy
arg	34:36	34:64	15	&p_sys->ps_pieces_tmp[i_idx]
op	34:36	0:0	16	&
water	34:37	0:0	16	p_sys
op	34:42	0:0	16	->
water	34:44	0:0	16	ps_pieces_tmp
op	34:57	0:0	16	[
water	34:58	0:0	16	i_idx
op	34:63	0:0	16	]
arg	34:66	34:90	15	&p_sys->ps_pieces[i_pce]
op	34:66	0:0	16	&
water	34:67	0:0	16	p_sys
op	34:72	0:0	16	->
water	34:74	0:0	16	ps_pieces
op	34:83	0:0	16	[
water	34:84	0:0	16	i_pce
op	34:89	0:0	16	]
arg	34:92	34:107	15	sizeof(piece_t)
op	34:92	0:0	16	sizeof
water	34:98	0:0	16	(
water	34:99	0:0	16	piece_t
water	34:106	0:0	16	)
water	34:108	0:0	14	;
water	35:28	0:0	14	i_idx
op	35:33	0:0	14	++
water	35:35	0:0	14	;
water	36:24	0:0	14	}
water	37:12	0:0	8	}
water	38:8	0:0	6	}
water	39:4	0:0	4	}
call	40:4	40:37	2	free
arg	40:10	40:37	3	p_filter->p_sys->ps_pieces
water	40:10	0:0	4	p_filter
op	40:18	0:0	4	->
water	40:20	0:0	4	p_sys
op	40:25	0:0	4	->
water	40:27	0:0	4	ps_pieces
water	40:38	0:0	2	;
water	41:4	0:0	2	p_filter
op	41:12	0:0	2	->
water	41:14	0:0	2	p_sys
op	41:19	0:0	2	->
water	41:21	0:0	2	ps_pieces
op	41:31	0:0	2	=
water	41:33	0:0	2	p_sys
op	41:38	0:0	2	->
water	41:40	0:0	2	ps_pieces_tmp
water	41:53	0:0	2	;
water	42:4	0:0	2	p_sys
op	42:9	0:0	2	->
water	42:11	0:0	2	ps_pieces_tmp
op	42:25	0:0	2	=
call	42:27	42:86	2	malloc
arg	42:35	42:86	3	sizeof(piece_t)*p_sys->s_allocated.i_pieces_nbr
op	42:35	0:0	4	sizeof
water	42:41	0:0	4	(
water	42:43	0:0	4	piece_t
water	42:50	0:0	4	)
op	42:52	0:0	4	*
water	42:54	0:0	4	p_sys
op	42:59	0:0	4	->
water	42:61	0:0	4	s_allocated
op	42:72	0:0	4	.
water	42:73	0:0	4	i_pieces_nbr
water	42:87	0:0	2	;
if	43:4	44:25	2	(! p_sys -> ps_pieces_tmp)
cond	43:8	43:16	3	! p_sys -> ps_pieces_tmp
op	43:8	0:0	4	!
water	43:9	0:0	4	p_sys
op	43:14	0:0	4	->
water	43:16	0:0	4	ps_pieces_tmp
stmts	44:8	44:25	3	
return	44:8	44:25	4	VLC_ENOMEM
water	44:15	0:0	5	VLC_ENOMEM
return	45:4	45:22	2	VLC_SUCCESS
water	45:11	0:0	3	VLC_SUCCESS

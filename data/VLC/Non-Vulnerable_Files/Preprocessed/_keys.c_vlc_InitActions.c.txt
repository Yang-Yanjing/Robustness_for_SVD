func	2:0	57:0	0	struct vlc_actions *	vlc_InitActions
params	2:36	0:0	1	
param	2:37	2:57	2	libvlc_int_t *	libvlc
stmnts	0:0	56:13	1	
decl	4:4	4:42	2	vlc_object_t	*obj
op	4:22	0:0	2	=
call	4:24	4:41	3	VLC_OBJECT
arg	4:35	4:41	4	libvlc
water	4:35	0:0	5	libvlc
decl	5:4	5:23	2	struct hotkey	*keys
decl	6:4	6:83	2	struct vlc_actions	*as
op	6:27	0:0	2	=
call	6:29	6:82	3	malloc
arg	6:37	6:82	4	sizeof(*as)+ACTIONS_COUNT*sizeof(*keys)
op	6:37	0:0	5	sizeof
water	6:44	0:0	5	(
op	6:45	0:0	5	*
water	6:46	0:0	5	as
water	6:48	0:0	5	)
op	6:50	0:0	5	+
water	6:52	0:0	5	ACTIONS_COUNT
op	6:66	0:0	5	*
op	6:68	0:0	5	sizeof
water	6:75	0:0	5	(
op	6:76	0:0	5	*
water	6:77	0:0	5	keys
water	6:81	0:0	5	)
if	7:4	8:19	2	(unlikely (as == NULL ))
cond	7:8	7:27	3	unlikely (as == NULL )
call	7:8	7:27	4	unlikely
arg	7:17	7:27	5	as==NULL
water	7:17	0:0	6	as
op	7:20	0:0	6	==
water	7:23	0:0	6	NULL
stmts	8:8	8:19	3	
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
water	9:4	0:0	2	as
op	9:6	0:0	2	->
water	9:8	0:0	2	map
op	9:12	0:0	2	=
water	9:14	0:0	2	NULL
water	9:18	0:0	2	;
water	10:4	0:0	2	as
op	10:6	0:0	2	->
water	10:8	0:0	2	global_map
op	10:19	0:0	2	=
water	10:21	0:0	2	NULL
water	10:25	0:0	2	;
water	11:4	0:0	2	keys
op	11:9	0:0	2	=
water	11:11	0:0	2	as
op	11:13	0:0	2	->
water	11:15	0:0	2	keys
water	11:19	0:0	2	;
call	12:4	12:51	2	var_Create
arg	12:16	12:19	3	obj
water	12:16	0:0	4	obj
arg	12:21	12:34	3	"key-pressed"
water	12:21	0:0	4	"key-pressed"
arg	12:36	12:51	3	VLC_VAR_INTEGER
water	12:36	0:0	4	VLC_VAR_INTEGER
water	12:52	0:0	2	;
call	13:4	13:58	2	var_Create
arg	13:16	13:19	3	obj
water	13:16	0:0	4	obj
arg	13:21	13:41	3	"global-key-pressed"
water	13:21	0:0	4	"global-key-pressed"
arg	13:43	13:58	3	VLC_VAR_INTEGER
water	13:43	0:0	4	VLC_VAR_INTEGER
water	13:59	0:0	2	;
call	14:4	14:50	2	var_Create
arg	14:16	14:19	3	obj
water	14:16	0:0	4	obj
arg	14:21	14:33	3	"key-action"
water	14:21	0:0	4	"key-action"
arg	14:35	14:50	3	VLC_VAR_INTEGER
water	14:35	0:0	4	VLC_VAR_INTEGER
water	14:51	0:0	2	;
for	16:4	33:4	2	( size_t i = 0 ;i < ACTIONS_COUNT;i ++)
forinit	0:0	16:21	3	 size_t i = 0 ;
decl	16:9	16:21	4	size_t	i
op	16:18	0:0	4	=
water	16:20	0:0	4	0
cond	16:23	16:27	3	i < ACTIONS_COUNT
water	16:23	0:0	4	i
op	16:25	0:0	4	<
water	16:27	0:0	4	ACTIONS_COUNT
forexpr	16:42	16:43	3	i ++
water	16:42	0:0	4	i
op	16:43	0:0	4	++
stmts	17:4	33:4	3	
water	17:4	0:0	4	{
if	19:8	25:8	4	(i > 0 &&strcmp (actions [ i - 1 ] . name ,actions [ i ] . name ) >= 0)
cond	19:12	20:59	5	i > 0 &&strcmp (actions [ i - 1 ] . name ,actions [ i ] . name ) >= 0
water	19:12	0:0	6	i
op	19:14	0:0	6	>
water	19:16	0:0	6	0
op	20:9	0:0	6	&&
call	20:12	20:54	6	strcmp
arg	20:20	20:37	7	actions[i-1].name
water	20:20	0:0	8	actions
op	20:27	0:0	8	[
water	20:28	0:0	8	i
op	20:29	0:0	8	-
water	20:30	0:0	8	1
op	20:31	0:0	8	]
op	20:32	0:0	8	.
water	20:33	0:0	8	name
arg	20:39	20:54	7	actions[i].name
water	20:39	0:0	8	actions
op	20:46	0:0	8	[
water	20:47	0:0	8	i
op	20:48	0:0	8	]
op	20:49	0:0	8	.
water	20:50	0:0	8	name
op	20:56	0:0	6	>=
water	20:59	0:0	6	0
stmts	21:8	25:8	5	
water	21:8	0:0	6	{
call	22:12	23:55	6	msg_Err
arg	22:21	22:27	7	libvlc
water	22:21	0:0	8	libvlc
arg	22:29	22:73	7	"key-%s and key-%s are not ordered properly"
water	22:29	0:0	8	"key-%s and key-%s are not ordered properly"
arg	23:21	23:38	7	actions[i-1].name
water	23:21	0:0	8	actions
op	23:28	0:0	8	[
water	23:29	0:0	8	i
op	23:30	0:0	8	-
water	23:31	0:0	8	1
op	23:32	0:0	8	]
op	23:33	0:0	8	.
water	23:34	0:0	8	name
arg	23:40	23:55	7	actions[i].name
water	23:40	0:0	8	actions
op	23:47	0:0	8	[
water	23:48	0:0	8	i
op	23:49	0:0	8	]
op	23:50	0:0	8	.
water	23:51	0:0	8	name
water	23:56	0:0	6	;
call	24:12	24:19	6	abort
water	24:20	0:0	6	;
water	25:8	0:0	6	}
water	27:8	0:0	4	keys
op	27:12	0:0	4	->
water	27:14	0:0	4	psz_action
op	27:25	0:0	4	=
water	27:27	0:0	4	actions
op	27:34	0:0	4	[
water	27:35	0:0	4	i
op	27:36	0:0	4	]
op	27:37	0:0	4	.
water	27:38	0:0	4	name
water	27:42	0:0	4	;
water	28:8	0:0	4	keys
op	28:12	0:0	4	++
water	28:14	0:0	4	;
decl	29:8	29:33	4	char	name[12+MAXACTION]
call	30:8	30:71	4	snprintf
arg	30:18	30:22	5	name
water	30:18	0:0	6	name
arg	30:24	30:37	5	sizeof(name)
op	30:24	0:0	6	sizeof
water	30:31	0:0	6	(
water	30:32	0:0	6	name
water	30:36	0:0	6	)
arg	30:39	30:54	5	"global-key-%s"
water	30:39	0:0	6	"global-key-%s"
arg	30:56	30:71	5	actions[i].name
water	30:56	0:0	6	actions
op	30:63	0:0	6	[
water	30:64	0:0	6	i
op	30:65	0:0	6	]
op	30:66	0:0	6	.
water	30:67	0:0	6	name
water	30:72	0:0	4	;
call	31:8	31:65	4	vlc_InitAction
arg	31:24	31:27	5	obj
water	31:24	0:0	6	obj
arg	31:29	31:37	5	&as->map
op	31:29	0:0	6	&
water	31:30	0:0	6	as
op	31:32	0:0	6	->
water	31:34	0:0	6	map
arg	31:39	31:47	5	name+7
water	31:39	0:0	6	name
op	31:44	0:0	6	+
water	31:46	0:0	6	7
arg	31:49	31:65	5	actions[i].value
water	31:49	0:0	6	actions
op	31:56	0:0	6	[
water	31:57	0:0	6	i
op	31:58	0:0	6	]
op	31:59	0:0	6	.
water	31:60	0:0	6	value
water	31:66	0:0	4	;
call	32:8	32:68	4	vlc_InitAction
arg	32:24	32:27	5	obj
water	32:24	0:0	6	obj
arg	32:29	32:44	5	&as->global_map
op	32:29	0:0	6	&
water	32:30	0:0	6	as
op	32:32	0:0	6	->
water	32:34	0:0	6	global_map
arg	32:46	32:50	5	name
water	32:46	0:0	6	name
arg	32:52	32:68	5	actions[i].value
water	32:52	0:0	6	actions
op	32:59	0:0	6	[
water	32:60	0:0	6	i
op	32:61	0:0	6	]
op	32:62	0:0	6	.
water	32:63	0:0	6	value
water	32:69	0:0	4	;
water	33:4	0:0	4	}
water	34:4	0:0	2	keys
op	34:8	0:0	2	->
water	34:10	0:0	2	psz_action
op	34:21	0:0	2	=
water	34:23	0:0	2	NULL
water	34:27	0:0	2	;
decl	36:4	36:71	2	int	mousemode
op	36:18	0:0	2	=
call	36:20	36:70	3	var_InheritInteger
arg	36:40	36:43	4	obj
water	36:40	0:0	5	obj
arg	36:45	36:70	4	"hotkeys-mousewheel-mode"
water	36:45	0:0	5	"hotkeys-mousewheel-mode"
if	37:4	51:4	2	(mousemode < 2)
cond	37:8	37:20	3	mousemode < 2
water	37:8	0:0	4	mousemode
op	37:18	0:0	4	<
water	37:20	0:0	4	2
stmts	38:4	51:4	3	
water	38:4	0:0	4	{
call	39:8	41:39	4	vlc_AddMapping
arg	39:24	39:32	5	&as->map
op	39:24	0:0	6	&
water	39:25	0:0	6	as
op	39:27	0:0	6	->
water	39:29	0:0	6	map
arg	40:24	40:74	5	mousemode?KEY_MOUSEWHEELRIGHT:KEY_MOUSEWHEELUP
water	40:24	0:0	6	mousemode
water	40:34	0:0	6	?
water	40:36	0:0	6	KEY_MOUSEWHEELRIGHT
water	40:56	0:0	6	:
water	40:58	0:0	6	KEY_MOUSEWHEELUP
arg	41:24	41:39	5	ACTIONID_VOL_UP
water	41:24	0:0	6	ACTIONID_VOL_UP
water	41:40	0:0	4	;
call	42:8	44:41	4	vlc_AddMapping
arg	42:24	42:32	5	&as->map
op	42:24	0:0	6	&
water	42:25	0:0	6	as
op	42:27	0:0	6	->
water	42:29	0:0	6	map
arg	43:24	43:75	5	mousemode?KEY_MOUSEWHEELLEFT:KEY_MOUSEWHEELDOWN
water	43:24	0:0	6	mousemode
water	43:34	0:0	6	?
water	43:36	0:0	6	KEY_MOUSEWHEELLEFT
water	43:55	0:0	6	:
water	43:57	0:0	6	KEY_MOUSEWHEELDOWN
arg	44:24	44:41	5	ACTIONID_VOL_DOWN
water	44:24	0:0	6	ACTIONID_VOL_DOWN
water	44:42	0:0	4	;
call	45:8	47:56	4	vlc_AddMapping
arg	45:24	45:32	5	&as->map
op	45:24	0:0	6	&
water	45:25	0:0	6	as
op	45:27	0:0	6	->
water	45:29	0:0	6	map
arg	46:24	46:74	5	mousemode?KEY_MOUSEWHEELUP:KEY_MOUSEWHEELRIGHT
water	46:24	0:0	6	mousemode
water	46:34	0:0	6	?
water	46:36	0:0	6	KEY_MOUSEWHEELUP
water	46:53	0:0	6	:
water	46:55	0:0	6	KEY_MOUSEWHEELRIGHT
arg	47:24	47:56	5	ACTIONID_JUMP_FORWARD_EXTRASHORT
water	47:24	0:0	6	ACTIONID_JUMP_FORWARD_EXTRASHORT
water	47:57	0:0	4	;
call	48:8	50:57	4	vlc_AddMapping
arg	48:24	48:32	5	&as->map
op	48:24	0:0	6	&
water	48:25	0:0	6	as
op	48:27	0:0	6	->
water	48:29	0:0	6	map
arg	49:24	49:75	5	mousemode?KEY_MOUSEWHEELDOWN:KEY_MOUSEWHEELLEFT
water	49:24	0:0	6	mousemode
water	49:34	0:0	6	?
water	49:36	0:0	6	KEY_MOUSEWHEELDOWN
water	49:55	0:0	6	:
water	49:57	0:0	6	KEY_MOUSEWHEELLEFT
arg	50:24	50:57	5	ACTIONID_JUMP_BACKWARD_EXTRASHORT
water	50:24	0:0	6	ACTIONID_JUMP_BACKWARD_EXTRASHORT
water	50:58	0:0	4	;
water	51:4	0:0	4	}
water	52:4	0:0	2	libvlc
op	52:10	0:0	2	->
water	52:12	0:0	2	p_hotkeys
op	52:22	0:0	2	=
water	52:24	0:0	2	as
op	52:26	0:0	2	->
water	52:28	0:0	2	keys
water	52:32	0:0	2	;
call	53:4	53:68	2	var_AddCallback
arg	53:21	53:24	3	obj
water	53:21	0:0	4	obj
arg	53:26	53:39	3	"key-pressed"
water	53:26	0:0	4	"key-pressed"
arg	53:41	53:58	3	vlc_key_to_action
water	53:41	0:0	4	vlc_key_to_action
arg	53:60	53:68	3	&as->map
op	53:60	0:0	4	&
water	53:61	0:0	4	as
op	53:63	0:0	4	->
water	53:65	0:0	4	map
water	53:69	0:0	2	;
call	54:4	55:36	2	var_AddCallback
arg	54:21	54:24	3	obj
water	54:21	0:0	4	obj
arg	54:26	54:46	3	"global-key-pressed"
water	54:26	0:0	4	"global-key-pressed"
arg	54:48	54:65	3	vlc_key_to_action
water	54:48	0:0	4	vlc_key_to_action
arg	55:21	55:36	3	&as->global_map
op	55:21	0:0	4	&
water	55:22	0:0	4	as
op	55:24	0:0	4	->
water	55:26	0:0	4	global_map
water	55:37	0:0	2	;
return	56:4	56:13	2	as
water	56:11	0:0	3	as

decl	1:7	1:49	0	picture_t	*Decode
water	1:24	0:0	0	(
water	1:25	0:0	0	decoder_t
op	1:35	0:0	0	*
water	1:36	0:0	0	,
water	1:38	0:0	0	block_t
op	1:46	0:0	0	*
op	1:47	0:0	0	*
water	1:48	0:0	0	)
func	2:0	12:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:33	2	vlc_object_t *	obj
stmnts	0:0	11:22	1	
decl	4:4	4:37	2	decoder_t	*dec
op	4:19	0:0	2	=
water	4:21	0:0	2	(
water	4:22	0:0	2	decoder_t
op	4:32	0:0	2	*
water	4:33	0:0	2	)
water	4:34	0:0	2	obj
if	5:4	6:27	2	(dec -> fmt_in . i_codec != VLC_CODEC_XWD)
cond	5:8	5:31	3	dec -> fmt_in . i_codec != VLC_CODEC_XWD
water	5:8	0:0	4	dec
op	5:11	0:0	4	->
water	5:13	0:0	4	fmt_in
op	5:19	0:0	4	.
water	5:20	0:0	4	i_codec
op	5:28	0:0	4	!=
water	5:31	0:0	4	VLC_CODEC_XWD
stmts	6:8	6:27	3	
return	6:8	6:27	4	VLC_EGENERIC
water	6:15	0:0	5	VLC_EGENERIC
water	7:4	0:0	2	dec
op	7:7	0:0	2	->
water	7:9	0:0	2	pf_decode_video
op	7:25	0:0	2	=
water	7:27	0:0	2	Decode
water	7:33	0:0	2	;
call	8:4	8:46	2	es_format_Copy
arg	8:19	8:32	3	&dec->fmt_out
op	8:19	0:0	4	&
water	8:20	0:0	4	dec
op	8:23	0:0	4	->
water	8:25	0:0	4	fmt_out
arg	8:34	8:46	3	&dec->fmt_in
op	8:34	0:0	4	&
water	8:35	0:0	4	dec
op	8:38	0:0	4	->
water	8:40	0:0	4	fmt_in
water	8:47	0:0	2	;
water	9:4	0:0	2	dec
op	9:7	0:0	2	->
water	9:9	0:0	2	fmt_out
op	9:16	0:0	2	.
water	9:17	0:0	2	i_codec
op	9:25	0:0	2	=
water	9:27	0:0	2	VLC_CODEC_RGB32
water	9:42	0:0	2	;
water	10:4	0:0	2	dec
op	10:7	0:0	2	->
water	10:9	0:0	2	fmt_out
op	10:16	0:0	2	.
water	10:17	0:0	2	i_cat
op	10:23	0:0	2	=
water	10:25	0:0	2	VIDEO_ES
water	10:33	0:0	2	;
return	11:4	11:22	2	VLC_SUCCESS
water	11:11	0:0	3	VLC_SUCCESS

func	2:12	55:0	0	WINAPI	ServiceDispatch
params	2:34	0:0	1	
param	2:36	2:49	2	DWORD	numArgs
param	2:51	2:63	2	char * *	args
stmnts	4:4	54:54	1	
water	4:4	0:0	2	(
water	4:5	0:0	2	void
water	4:9	0:0	2	)
water	4:10	0:0	2	numArgs
water	4:17	0:0	2	;
water	5:4	0:0	2	(
water	5:5	0:0	2	void
water	5:9	0:0	2	)
water	5:10	0:0	2	args
water	5:14	0:0	2	;
decl	6:4	6:58	2	intf_thread_t	*p_intf
op	6:26	0:0	2	=
water	6:28	0:0	2	(
water	6:29	0:0	2	intf_thread_t
op	6:43	0:0	2	*
water	6:44	0:0	2	)
water	6:45	0:0	2	p_global_intf
decl	7:4	7:41	2	intf_sys_t	*p_sys
op	7:26	0:0	2	=
water	7:28	0:0	2	p_intf
op	7:34	0:0	2	->
water	7:36	0:0	2	p_sys
decl	8:4	8:34	2	char	*psz_modules
water	8:21	0:0	2	,
decl	8:4	8:34	2	char	*psz_parser
call	10:4	10:54	2	memset
arg	10:12	10:26	3	&p_sys->status
op	10:12	0:0	4	&
water	10:13	0:0	4	p_sys
op	10:18	0:0	4	->
water	10:20	0:0	4	status
arg	10:28	10:29	3	0
water	10:28	0:0	4	0
arg	10:31	10:54	3	sizeof(SERVICE_STATUS)
op	10:31	0:0	4	sizeof
water	10:37	0:0	4	(
water	10:38	0:0	4	SERVICE_STATUS
water	10:52	0:0	4	)
water	10:55	0:0	2	;
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	status
op	11:17	0:0	2	.
water	11:18	0:0	2	dwServiceType
op	11:32	0:0	2	=
water	11:34	0:0	2	SERVICE_WIN32
water	11:47	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	status
op	12:17	0:0	2	.
water	12:18	0:0	2	dwCurrentState
op	12:33	0:0	2	=
water	12:35	0:0	2	SERVICE_START_PENDING
water	12:56	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	status
op	13:17	0:0	2	.
water	13:18	0:0	2	dwControlsAccepted
op	13:37	0:0	2	=
water	13:39	0:0	2	SERVICE_ACCEPT_STOP
water	13:58	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	hStatus
op	14:19	0:0	2	=
call	15:8	15:77	2	RegisterServiceCtrlHandlerA
arg	15:37	15:55	3	p_sys->psz_service
water	15:37	0:0	4	p_sys
op	15:42	0:0	4	->
water	15:44	0:0	4	psz_service
arg	15:57	15:77	3	&ServiceCtrlHandler
op	15:57	0:0	4	&
water	15:58	0:0	4	ServiceCtrlHandler
water	15:78	0:0	2	;
if	16:4	20:4	2	(p_sys -> hStatus == ( SERVICE_STATUS_HANDLE ) 0)
cond	16:8	16:49	3	p_sys -> hStatus == ( SERVICE_STATUS_HANDLE ) 0
water	16:8	0:0	4	p_sys
op	16:13	0:0	4	->
water	16:15	0:0	4	hStatus
op	16:23	0:0	4	==
water	16:26	0:0	4	(
water	16:27	0:0	4	SERVICE_STATUS_HANDLE
water	16:48	0:0	4	)
water	16:49	0:0	4	0
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:70	4	msg_Err
arg	18:17	18:23	5	p_intf
water	18:17	0:0	6	p_intf
arg	18:25	18:70	5	"failed to register service control handler"
water	18:25	0:0	6	"failed to register service control handler"
water	18:71	0:0	4	;
return	19:8	19:14	4	
water	20:4	0:0	4	}
water	24:4	0:0	2	psz_modules
op	24:16	0:0	2	=
call	24:18	24:67	2	var_InheritString
arg	24:37	24:43	3	p_intf
water	24:37	0:0	4	p_intf
arg	24:45	24:67	3	"ntservice-extraintf"
water	24:45	0:0	4	"ntservice-extraintf"
water	24:68	0:0	2	;
water	25:4	0:0	2	psz_parser
op	25:15	0:0	2	=
water	25:17	0:0	2	psz_modules
water	25:28	0:0	2	;
while	26:4	48:4	2	(psz_parser && * psz_parser)
cond	26:11	26:26	3	psz_parser && * psz_parser
water	26:11	0:0	4	psz_parser
op	26:22	0:0	4	&&
op	26:25	0:0	4	*
water	26:26	0:0	4	psz_parser
stmts	27:4	48:4	3	
water	27:4	0:0	4	{
decl	28:8	28:35	4	char	*psz_module
water	28:24	0:0	4	,
decl	28:8	28:35	4	char	*psz_temp
water	29:8	0:0	4	psz_module
op	29:19	0:0	4	=
water	29:21	0:0	4	psz_parser
water	29:31	0:0	4	;
water	30:8	0:0	4	psz_parser
op	30:19	0:0	4	=
call	30:21	30:45	4	strchr
arg	30:29	30:39	5	psz_module
water	30:29	0:0	6	psz_module
arg	30:41	30:45	5	','
water	30:41	0:0	6	','
water	30:46	0:0	4	;
if	31:8	35:8	4	(psz_parser)
cond	31:12	31:12	5	psz_parser
water	31:12	0:0	6	psz_parser
stmts	32:8	35:8	5	
water	32:8	0:0	6	{
op	33:12	0:0	6	*
water	33:13	0:0	6	psz_parser
op	33:24	0:0	6	=
water	33:26	0:0	6	'\0'
water	33:30	0:0	6	;
water	34:12	0:0	6	psz_parser
op	34:22	0:0	6	++
water	34:24	0:0	6	;
water	35:8	0:0	6	}
if	36:8	47:8	4	(asprintf (& psz_temp ,"%s,none" ,psz_module ) != - 1)
cond	36:12	36:61	5	asprintf (& psz_temp ,"%s,none" ,psz_module ) != - 1
call	36:12	36:55	6	asprintf
arg	36:22	36:31	7	&psz_temp
op	36:22	0:0	8	&
water	36:23	0:0	8	psz_temp
arg	36:33	36:42	7	"%s,none"
water	36:33	0:0	8	"%s,none"
arg	36:44	36:55	7	psz_module
water	36:44	0:0	8	psz_module
op	36:57	0:0	6	!=
op	36:60	0:0	6	-
water	36:61	0:0	6	1
stmts	37:8	47:8	5	
water	37:8	0:0	6	{
if	39:12	45:12	6	(intf_Create (pl_Get (p_intf ) ,psz_temp ))
cond	39:16	39:54	7	intf_Create (pl_Get (p_intf ) ,psz_temp )
call	39:16	39:54	8	intf_Create
arg	39:29	39:43	9	pl_Get(p_intf)
call	39:29	39:42	10	pl_Get
arg	39:36	39:42	11	p_intf
water	39:36	0:0	12	p_intf
arg	39:45	39:54	9	psz_temp
water	39:45	0:0	10	psz_temp
stmts	40:12	45:12	7	
water	40:12	0:0	8	{
call	41:16	42:34	8	msg_Err
arg	41:25	41:31	9	p_intf
water	41:25	0:0	10	p_intf
arg	41:33	41:73	9	"interface \"%s\" initialization failed"
water	41:33	0:0	10	"interface \"%s\" initialization failed"
arg	42:25	42:34	9	psz_temp
water	42:25	0:0	10	psz_temp
water	42:35	0:0	8	;
call	43:16	43:31	8	free
arg	43:22	43:31	9	psz_temp
water	43:22	0:0	10	psz_temp
water	43:32	0:0	8	;
continue	44:16	44:24	8	
water	45:12	0:0	8	}
call	46:12	46:27	6	free
arg	46:18	46:27	7	psz_temp
water	46:18	0:0	8	psz_temp
water	46:28	0:0	6	;
water	47:8	0:0	6	}
water	48:4	0:0	4	}
call	49:4	49:22	2	free
arg	49:10	49:22	3	psz_modules
water	49:10	0:0	4	psz_modules
water	49:23	0:0	2	;
water	51:4	0:0	2	p_sys
op	51:9	0:0	2	->
water	51:11	0:0	2	status
op	51:17	0:0	2	.
water	51:18	0:0	2	dwCurrentState
op	51:33	0:0	2	=
water	51:35	0:0	2	SERVICE_RUNNING
water	51:50	0:0	2	;
water	52:4	0:0	2	p_sys
op	52:9	0:0	2	->
water	52:11	0:0	2	status
op	52:17	0:0	2	.
water	52:18	0:0	2	dwCheckPoint
op	52:33	0:0	2	=
water	52:35	0:0	2	0
water	52:36	0:0	2	;
water	53:4	0:0	2	p_sys
op	53:9	0:0	2	->
water	53:11	0:0	2	status
op	53:17	0:0	2	.
water	53:18	0:0	2	dwWaitHint
op	53:33	0:0	2	=
water	53:35	0:0	2	0
water	53:36	0:0	2	;
call	54:4	54:53	2	SetServiceStatus
arg	54:22	54:36	3	p_sys->hStatus
water	54:22	0:0	4	p_sys
op	54:27	0:0	4	->
water	54:29	0:0	4	hStatus
arg	54:38	54:53	3	&p_sys->status
op	54:38	0:0	4	&
water	54:39	0:0	4	p_sys
op	54:44	0:0	4	->
water	54:46	0:0	4	status
water	54:54	0:0	2	;

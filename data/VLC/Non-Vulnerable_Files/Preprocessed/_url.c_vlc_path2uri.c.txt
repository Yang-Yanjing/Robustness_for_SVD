func	2:0	114:0	0	char *	vlc_path2uri
params	2:19	0:0	1	
param	2:20	2:36	2	const char *	path
param	2:38	2:56	2	const char *	scheme
stmnts	4:4	113:14	1	
if	4:4	8:4	2	(path == NULL)
cond	4:8	4:16	3	path == NULL
water	4:8	0:0	4	path
op	4:13	0:0	4	==
water	4:16	0:0	4	NULL
stmts	5:4	8:4	3	
water	5:4	0:0	4	{
water	6:8	0:0	4	errno
op	6:14	0:0	4	=
water	6:16	0:0	4	EINVAL
water	6:22	0:0	4	;
return	7:8	7:19	4	NULL
water	7:15	0:0	5	NULL
water	8:4	0:0	4	}
if	9:4	10:32	2	(scheme == NULL && !strcmp (path ,"-" ))
cond	9:8	9:44	3	scheme == NULL && !strcmp (path ,"-" )
water	9:8	0:0	4	scheme
op	9:15	0:0	4	==
water	9:18	0:0	4	NULL
op	9:23	0:0	4	&&
op	9:26	0:0	4	!
call	9:27	9:44	4	strcmp
arg	9:35	9:39	5	path
water	9:35	0:0	6	path
arg	9:41	9:44	5	"-"
water	9:41	0:0	6	"-"
stmts	10:8	10:32	3	
return	10:8	10:32	4	strdup("fd://0")
call	10:15	10:31	5	strdup
arg	10:23	10:31	6	"fd://0"
water	10:23	0:0	7	"fd://0"
decl	13:4	13:13	2	char	*buf
decl	15:4	15:29	2	char	p[strlen(path)+1]
for	16:4	17:52	2	(buf = p ;* path;buf ++ , path ++)
forinit	16:9	16:16	3	buf = p ;
water	16:9	0:0	4	buf
op	16:13	0:0	4	=
water	16:15	0:0	4	p
water	16:16	0:0	4	;
cond	16:18	16:19	3	* path
op	16:18	0:0	4	*
water	16:19	0:0	4	path
forexpr	16:25	16:36	3	buf ++ , path ++
water	16:25	0:0	4	buf
op	16:28	0:0	4	++
water	16:30	0:0	4	,
water	16:32	0:0	4	path
op	16:36	0:0	4	++
stmts	17:8	17:52	3	
op	17:8	0:0	4	*
water	17:9	0:0	4	buf
op	17:13	0:0	4	=
water	17:15	0:0	4	(
op	17:16	0:0	4	*
water	17:17	0:0	4	path
op	17:22	0:0	4	==
water	17:25	0:0	4	'/'
water	17:28	0:0	4	)
water	17:30	0:0	4	?
water	17:32	0:0	4	DIR_SEP_CHAR
water	17:45	0:0	4	:
op	17:47	0:0	4	*
water	17:48	0:0	4	path
water	17:52	0:0	4	;
op	18:4	0:0	2	*
water	18:5	0:0	2	buf
op	18:9	0:0	2	=
water	18:11	0:0	2	'\0'
water	18:15	0:0	2	;
water	19:4	0:0	2	path
op	19:9	0:0	2	=
water	19:11	0:0	2	p
water	19:12	0:0	2	;
if	23:4	35:4	2	(isalpha (( unsigned char ) path [ 0 ] ) && ( path [ 1 ] == ':' ))
cond	23:8	23:59	3	isalpha (( unsigned char ) path [ 0 ] ) && ( path [ 1 ] == ':' )
call	23:8	23:39	4	isalpha
arg	23:17	23:39	5	(unsignedchar)path[0]
water	23:17	0:0	6	(
water	23:18	0:0	6	unsigned
water	23:27	0:0	6	char
water	23:31	0:0	6	)
water	23:32	0:0	6	path
op	23:36	0:0	6	[
water	23:37	0:0	6	0
op	23:38	0:0	6	]
op	23:41	0:0	4	&&
water	23:44	0:0	4	(
water	23:45	0:0	4	path
op	23:49	0:0	4	[
water	23:50	0:0	4	1
op	23:51	0:0	4	]
op	23:53	0:0	4	==
water	23:56	0:0	4	':'
water	23:59	0:0	4	)
stmts	24:4	35:4	3	
water	24:4	0:0	4	{
if	25:8	27:22	4	(asprintf (& buf ,"%s:///%c:" ,scheme ? scheme : "file" ,path [ 0 ] ) == - 1)
cond	25:12	26:35	5	asprintf (& buf ,"%s:///%c:" ,scheme ? scheme : "file" ,path [ 0 ] ) == - 1
call	25:12	26:29	6	asprintf
arg	25:22	25:26	7	&buf
op	25:22	0:0	8	&
water	25:23	0:0	8	buf
arg	25:28	25:39	7	"%s:///%c:"
water	25:28	0:0	8	"%s:///%c:"
arg	25:41	25:65	7	scheme?scheme:"file"
water	25:41	0:0	8	scheme
water	25:48	0:0	8	?
water	25:50	0:0	8	scheme
water	25:57	0:0	8	:
water	25:59	0:0	8	"file"
arg	26:22	26:29	7	path[0]
water	26:22	0:0	8	path
op	26:26	0:0	8	[
water	26:27	0:0	8	0
op	26:28	0:0	8	]
op	26:31	0:0	6	==
op	26:34	0:0	6	-
water	26:35	0:0	6	1
stmts	27:12	27:22	5	
water	27:12	0:0	6	buf
op	27:16	0:0	6	=
water	27:18	0:0	6	NULL
water	27:22	0:0	6	;
water	28:8	0:0	4	path
op	28:13	0:0	4	+=
water	28:16	0:0	4	2
water	28:17	0:0	4	;
if	30:8	34:8	4	(path [ 0 ] != DIR_SEP_CHAR)
cond	30:12	30:23	5	path [ 0 ] != DIR_SEP_CHAR
water	30:12	0:0	6	path
op	30:16	0:0	6	[
water	30:17	0:0	6	0
op	30:18	0:0	6	]
op	30:20	0:0	6	!=
water	30:23	0:0	6	DIR_SEP_CHAR
stmts	31:8	34:8	5	
water	31:8	0:0	6	{
water	32:12	0:0	6	errno
op	32:18	0:0	6	=
water	32:20	0:0	6	ENOTSUP
water	32:27	0:0	6	;
return	33:12	33:23	6	NULL
water	33:19	0:0	7	NULL
water	34:8	0:0	6	}
water	35:4	0:0	4	}
else	36:4	72:4	2
stmts	38:4	72:4	3	
if	38:4	72:4	4	(!strncmp (path ,"\\\\" ,2 ))
cond	38:8	38:33	5	!strncmp (path ,"\\\\" ,2 )
op	38:8	0:0	6	!
call	38:9	38:33	6	strncmp
arg	38:18	38:22	7	path
water	38:18	0:0	8	path
arg	38:24	38:30	7	"\\\\"
water	38:24	0:0	8	"\\\\"
arg	38:32	38:33	7	2
water	38:32	0:0	8	2
stmts	39:4	72:4	5	
water	39:4	0:0	6	{
if	41:8	45:8	6	(scheme != NULL)
cond	41:12	41:22	7	scheme != NULL
water	41:12	0:0	8	scheme
op	41:19	0:0	8	!=
water	41:22	0:0	8	NULL
stmts	42:8	45:8	7	
water	42:8	0:0	8	{
water	43:12	0:0	8	errno
op	43:18	0:0	8	=
water	43:20	0:0	8	ENOTSUP
water	43:27	0:0	8	;
return	44:12	44:23	8	NULL
water	44:19	0:0	9	NULL
water	45:8	0:0	8	}
if	47:8	58:8	6	(strchr (path + 2 ,'\\' ) != NULL)
cond	47:12	47:39	7	strchr (path + 2 ,'\\' ) != NULL
call	47:12	47:34	8	strchr
arg	47:20	47:28	9	path+2
water	47:20	0:0	10	path
op	47:25	0:0	10	+
water	47:27	0:0	10	2
arg	47:30	47:34	9	'\\'
water	47:30	0:0	10	'\\'
op	47:36	0:0	8	!=
water	47:39	0:0	8	NULL
stmts	48:8	58:8	7	
water	48:8	0:0	8	{
decl	49:12	49:37	8	char	*dup
op	49:22	0:0	8	=
call	49:24	49:36	9	strdup
arg	49:32	49:36	10	path
water	49:32	0:0	11	path
if	50:12	51:27	8	(dup == NULL)
cond	50:16	50:23	9	dup == NULL
water	50:16	0:0	10	dup
op	50:20	0:0	10	==
water	50:23	0:0	10	NULL
stmts	51:16	51:27	9	
return	51:16	51:27	10	NULL
water	51:23	0:0	11	NULL
for	52:12	54:41	8	( size_t i = 2 ;dup [ i ];i ++)
forinit	0:0	52:29	9	 size_t i = 2 ;
decl	52:17	52:29	10	size_t	i
op	52:26	0:0	10	=
water	52:28	0:0	10	2
cond	52:31	52:36	9	dup [ i ]
water	52:31	0:0	10	dup
op	52:34	0:0	10	[
water	52:35	0:0	10	i
op	52:36	0:0	10	]
forexpr	52:39	52:40	9	i ++
water	52:39	0:0	10	i
op	52:40	0:0	10	++
stmts	53:16	54:41	9	
if	53:16	54:41	10	(dup [ i ] == '\\')
cond	53:20	53:30	11	dup [ i ] == '\\'
water	53:20	0:0	12	dup
op	53:23	0:0	12	[
water	53:24	0:0	12	i
op	53:25	0:0	12	]
op	53:27	0:0	12	==
water	53:30	0:0	12	'\\'
stmts	54:20	54:41	11	
water	54:20	0:0	12	dup
op	54:23	0:0	12	[
water	54:24	0:0	12	i
op	54:25	0:0	12	]
op	54:27	0:0	12	=
water	54:29	0:0	12	DIR_SEP_CHAR
water	54:41	0:0	12	;
decl	55:12	55:50	8	char	*ret
op	55:22	0:0	8	=
call	55:24	55:49	9	vlc_path2uri
arg	55:38	55:41	10	dup
water	55:38	0:0	11	dup
arg	55:43	55:49	10	scheme
water	55:43	0:0	11	scheme
call	56:12	56:21	8	free
arg	56:18	56:21	9	dup
water	56:18	0:0	10	dup
water	56:22	0:0	8	;
return	57:12	57:22	8	ret
water	57:19	0:0	9	ret
water	58:8	0:0	8	}
decl	64:8	64:52	6	size_t	hostlen
op	64:23	0:0	6	=
call	64:25	64:51	7	strcspn
arg	64:34	64:42	8	path+2
water	64:34	0:0	9	path
op	64:39	0:0	9	+
water	64:41	0:0	9	2
arg	64:44	64:51	8	DIR_SEP
water	64:44	0:0	9	DIR_SEP
water	65:8	0:0	6	buf
op	65:12	0:0	6	=
call	65:14	65:55	6	malloc
arg	65:22	65:55	7	sizeof(SMB_SCHEME)+3+hostlen
op	65:22	0:0	8	sizeof
water	65:29	0:0	8	(
water	65:30	0:0	8	SMB_SCHEME
water	65:40	0:0	8	)
op	65:42	0:0	8	+
water	65:44	0:0	8	3
op	65:46	0:0	8	+
water	65:48	0:0	8	hostlen
water	65:56	0:0	6	;
if	66:8	68:50	6	(buf != NULL)
cond	66:12	66:19	7	buf != NULL
water	66:12	0:0	8	buf
op	66:16	0:0	8	!=
water	66:19	0:0	8	NULL
stmts	67:12	68:50	7	
call	67:12	68:49	8	snprintf
arg	67:22	67:25	9	buf
water	67:22	0:0	10	buf
arg	67:27	67:60	9	sizeof(SMB_SCHEME)+3+hostlen
op	67:27	0:0	10	sizeof
water	67:34	0:0	10	(
water	67:35	0:0	10	SMB_SCHEME
water	67:45	0:0	10	)
op	67:47	0:0	10	+
water	67:49	0:0	10	3
op	67:51	0:0	10	+
water	67:53	0:0	10	hostlen
arg	68:22	68:39	9	SMB_SCHEME"://%s"
water	68:22	0:0	10	SMB_SCHEME
water	68:32	0:0	10	"://%s"
arg	68:41	68:49	9	path+2
water	68:41	0:0	10	path
op	68:46	0:0	10	+
water	68:48	0:0	10	2
water	68:50	0:0	8	;
water	69:8	0:0	6	path
op	69:13	0:0	6	+=
water	69:16	0:0	6	2
op	69:18	0:0	6	+
water	69:20	0:0	6	hostlen
water	69:27	0:0	6	;
if	70:8	71:22	6	(path [ 0 ] == '\0')
cond	70:12	70:23	7	path [ 0 ] == '\0'
water	70:12	0:0	8	path
op	70:16	0:0	8	[
water	70:17	0:0	8	0
op	70:18	0:0	8	]
op	70:20	0:0	8	==
water	70:23	0:0	8	'\0'
stmts	71:12	71:22	7	
return	71:12	71:22	8	buf
water	71:19	0:0	9	buf
water	72:4	0:0	6	}
else	73:4	85:4	2
stmts	74:4	85:4	3	
if	74:4	85:4	4	(path [ 0 ] != DIR_SEP_CHAR)
cond	74:8	74:19	5	path [ 0 ] != DIR_SEP_CHAR
water	74:8	0:0	6	path
op	74:12	0:0	6	[
water	74:13	0:0	6	0
op	74:14	0:0	6	]
op	74:16	0:0	6	!=
water	74:19	0:0	6	DIR_SEP_CHAR
stmts	75:4	85:4	5	
water	75:4	0:0	6	{
decl	76:8	76:23	6	char	*cwd
water	76:17	0:0	6	,
decl	76:8	76:23	6	char	*ret
if	77:8	78:23	6	(( cwd =vlc_getcwd ( ) ) == NULL)
cond	77:12	77:37	7	( cwd =vlc_getcwd ( ) ) == NULL
water	77:12	0:0	8	(
water	77:13	0:0	8	cwd
op	77:17	0:0	8	=
call	77:19	77:31	8	vlc_getcwd
water	77:32	0:0	8	)
op	77:34	0:0	8	==
water	77:37	0:0	8	NULL
stmts	78:12	78:23	7	
return	78:12	78:23	8	NULL
water	78:19	0:0	9	NULL
if	79:8	80:22	6	(asprintf (& buf ,"%s" DIR_SEP "%s" ,cwd ,path ) == - 1)
cond	79:12	79:60	7	asprintf (& buf ,"%s" DIR_SEP "%s" ,cwd ,path ) == - 1
call	79:12	79:54	8	asprintf
arg	79:22	79:26	9	&buf
op	79:22	0:0	10	&
water	79:23	0:0	10	buf
arg	79:28	79:43	9	"%s"DIR_SEP"%s"
water	79:28	0:0	10	"%s"
water	79:32	0:0	10	DIR_SEP
water	79:39	0:0	10	"%s"
arg	79:45	79:48	9	cwd
water	79:45	0:0	10	cwd
arg	79:50	79:54	9	path
water	79:50	0:0	10	path
op	79:56	0:0	8	==
op	79:59	0:0	8	-
water	79:60	0:0	8	1
stmts	80:12	80:22	7	
water	80:12	0:0	8	buf
op	80:16	0:0	8	=
water	80:18	0:0	8	NULL
water	80:22	0:0	8	;
call	81:8	81:17	6	free
arg	81:14	81:17	7	cwd
water	81:14	0:0	8	cwd
water	81:18	0:0	6	;
water	82:8	0:0	6	ret
op	82:12	0:0	6	=
water	82:14	0:0	6	(
water	82:15	0:0	6	buf
op	82:19	0:0	6	!=
water	82:22	0:0	6	NULL
water	82:26	0:0	6	)
water	82:28	0:0	6	?
call	82:30	82:55	6	vlc_path2uri
arg	82:44	82:47	7	buf
water	82:44	0:0	8	buf
arg	82:49	82:55	7	scheme
water	82:49	0:0	8	scheme
water	82:57	0:0	6	:
water	82:59	0:0	6	NULL
water	82:63	0:0	6	;
call	83:8	83:17	6	free
arg	83:14	83:17	7	buf
water	83:14	0:0	8	buf
water	83:18	0:0	6	;
return	84:8	84:18	6	ret
water	84:15	0:0	7	ret
water	85:4	0:0	6	}
else	86:4	88:18	2
stmts	87:4	88:18	3	
if	87:4	88:18	4	(asprintf (& buf ,"%s://" ,scheme ? scheme : "file" ) == - 1)
cond	87:8	87:63	5	asprintf (& buf ,"%s://" ,scheme ? scheme : "file" ) == - 1
call	87:8	87:57	6	asprintf
arg	87:18	87:22	7	&buf
op	87:18	0:0	8	&
water	87:19	0:0	8	buf
arg	87:24	87:31	7	"%s://"
water	87:24	0:0	8	"%s://"
arg	87:33	87:57	7	scheme?scheme:"file"
water	87:33	0:0	8	scheme
water	87:40	0:0	8	?
water	87:42	0:0	8	scheme
water	87:49	0:0	8	:
water	87:51	0:0	8	"file"
op	87:59	0:0	6	==
op	87:62	0:0	6	-
water	87:63	0:0	6	1
stmts	88:8	88:18	5	
water	88:8	0:0	6	buf
op	88:12	0:0	6	=
water	88:14	0:0	6	NULL
water	88:18	0:0	6	;
if	89:4	90:19	2	(buf == NULL)
cond	89:8	89:15	3	buf == NULL
water	89:8	0:0	4	buf
op	89:12	0:0	4	==
water	89:15	0:0	4	NULL
stmts	90:8	90:19	3	
return	90:8	90:19	4	NULL
water	90:15	0:0	5	NULL
call	92:4	92:35	2	assert
arg	92:12	92:35	3	path[0]==DIR_SEP_CHAR
water	92:12	0:0	4	path
op	92:16	0:0	4	[
water	92:17	0:0	4	0
op	92:18	0:0	4	]
op	92:20	0:0	4	==
water	92:23	0:0	4	DIR_SEP_CHAR
water	92:36	0:0	2	;
do	93:4	111:4	2	(* path)
cond	112:11	112:12	3	* path
op	112:11	0:0	4	*
water	112:12	0:0	4	path
stmts	94:4	111:4	3	
water	94:4	0:0	4	{
decl	95:8	95:46	4	size_t	len
op	95:19	0:0	4	=
call	95:21	95:45	5	strcspn
arg	95:30	95:36	6	++path
op	95:30	0:0	7	++
water	95:32	0:0	7	path
arg	95:38	95:45	6	DIR_SEP
water	95:38	0:0	7	DIR_SEP
water	96:8	0:0	4	path
op	96:13	0:0	4	+=
water	96:16	0:0	4	len
water	96:19	0:0	4	;
decl	97:8	97:61	4	char	*component
op	97:24	0:0	4	=
call	97:26	97:60	5	encode_URI_bytes
arg	97:44	97:54	6	path-len
water	97:44	0:0	7	path
op	97:49	0:0	7	-
water	97:51	0:0	7	len
arg	97:56	97:60	6	&len
op	97:56	0:0	7	&
water	97:57	0:0	7	len
if	98:8	102:8	4	(unlikely (component == NULL ))
cond	98:12	98:38	5	unlikely (component == NULL )
call	98:12	98:38	6	unlikely
arg	98:21	98:38	7	component==NULL
water	98:21	0:0	8	component
op	98:31	0:0	8	==
water	98:34	0:0	8	NULL
stmts	99:8	102:8	5	
water	99:8	0:0	6	{
call	100:12	100:21	6	free
arg	100:18	100:21	7	buf
water	100:18	0:0	8	buf
water	100:22	0:0	6	;
return	101:12	101:23	6	NULL
water	101:19	0:0	7	NULL
water	102:8	0:0	6	}
water	103:8	0:0	4	component
op	103:17	0:0	4	[
water	103:18	0:0	4	len
op	103:21	0:0	4	]
op	103:23	0:0	4	=
water	103:25	0:0	4	'\0'
water	103:29	0:0	4	;
decl	104:8	104:17	4	char	*uri
decl	105:8	105:58	4	int	val
op	105:16	0:0	4	=
call	105:18	105:57	5	asprintf
arg	105:28	105:32	6	&uri
op	105:28	0:0	7	&
water	105:29	0:0	7	uri
arg	105:34	105:41	6	"%s/%s"
water	105:34	0:0	7	"%s/%s"
arg	105:43	105:46	6	buf
water	105:43	0:0	7	buf
arg	105:48	105:57	6	component
water	105:48	0:0	7	component
call	106:8	106:23	4	free
arg	106:14	106:23	5	component
water	106:14	0:0	6	component
water	106:24	0:0	4	;
call	107:8	107:17	4	free
arg	107:14	107:17	5	buf
water	107:14	0:0	6	buf
water	107:18	0:0	4	;
if	108:8	109:23	4	(unlikely (val == - 1 ))
cond	108:12	108:30	5	unlikely (val == - 1 )
call	108:12	108:30	6	unlikely
arg	108:21	108:30	7	val==-1
water	108:21	0:0	8	val
op	108:25	0:0	8	==
op	108:28	0:0	8	-
water	108:29	0:0	8	1
stmts	109:12	109:23	5	
return	109:12	109:23	6	NULL
water	109:19	0:0	7	NULL
water	110:8	0:0	4	buf
op	110:12	0:0	4	=
water	110:14	0:0	4	uri
water	110:17	0:0	4	;
water	111:4	0:0	4	}
water	112:17	0:0	2	;
return	113:4	113:14	2	buf
water	113:11	0:0	3	buf

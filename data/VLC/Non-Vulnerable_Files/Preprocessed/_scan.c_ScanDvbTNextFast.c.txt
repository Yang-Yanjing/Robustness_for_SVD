func	2:0	61:0	0	static int	ScanDvbTNextFast
params	2:27	0:0	1	
param	2:29	2:43	2	scan_t *	p_scan
param	2:45	2:72	2	scan_configuration_t *	p_cfg
param	2:74	2:89	2	double *	pf_pos
stmnts	4:4	60:4	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	int
water	4:21	0:0	2	i_band_count
op	4:34	0:0	2	=
water	4:36	0:0	2	2
water	4:37	0:0	2	;
water	5:4	0:0	2	static
water	5:11	0:0	2	const
water	5:17	0:0	2	struct
water	6:4	0:0	2	{
water	7:8	0:0	2	const
water	7:14	0:0	2	char
op	7:19	0:0	2	*
water	7:20	0:0	2	psz_name
water	7:28	0:0	2	;
water	8:8	0:0	2	int
water	8:12	0:0	2	i_min
water	8:17	0:0	2	;
water	9:8	0:0	2	int
water	9:12	0:0	2	i_max
water	9:17	0:0	2	;
water	10:4	0:0	2	}
water	11:4	0:0	2	band
op	11:8	0:0	2	[
water	11:9	0:0	2	2
op	11:10	0:0	2	]
op	11:12	0:0	2	=
water	12:4	0:0	2	{
water	13:8	0:0	2	{
water	13:10	0:0	2	"VHF"
water	13:15	0:0	2	,
water	13:17	0:0	2	174
water	13:20	0:0	2	,
water	13:22	0:0	2	230
water	13:26	0:0	2	}
water	13:27	0:0	2	,
water	14:8	0:0	2	{
water	14:10	0:0	2	"UHF"
water	14:15	0:0	2	,
water	14:17	0:0	2	470
water	14:20	0:0	2	,
water	14:22	0:0	2	862
water	14:26	0:0	2	}
water	14:27	0:0	2	,
water	15:4	0:0	2	}
water	15:5	0:0	2	;
decl	16:4	16:32	2	const int	i_offset_count
op	16:29	0:0	2	=
water	16:31	0:0	2	5
decl	17:4	17:29	2	const int	i_mhz
op	17:20	0:0	2	=
water	17:22	0:0	2	1000000
for	21:4	60:4	2	(;;p_scan -> i_index ++)
forinit	21:9	21:9	3	;
water	21:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	21:12	21:27	3	p_scan -> i_index ++
water	21:12	0:0	4	p_scan
op	21:18	0:0	4	->
water	21:20	0:0	4	i_index
op	21:27	0:0	4	++
stmts	22:4	60:4	3	
water	22:4	0:0	4	{
decl	23:8	23:78	4	const int	i_bi
op	23:23	0:0	4	=
water	23:25	0:0	4	p_scan
op	23:31	0:0	4	->
water	23:33	0:0	4	i_index
op	23:41	0:0	4	%
water	23:43	0:0	4	p_scan
op	23:49	0:0	4	->
water	23:51	0:0	4	parameter
op	23:60	0:0	4	.
water	23:61	0:0	4	bandwidth
op	23:70	0:0	4	.
water	23:71	0:0	4	i_count
decl	24:8	24:97	4	const int	i_oi
op	24:23	0:0	4	=
water	24:25	0:0	4	(
water	24:26	0:0	4	p_scan
op	24:32	0:0	4	->
water	24:34	0:0	4	i_index
op	24:42	0:0	4	/
water	24:44	0:0	4	p_scan
op	24:50	0:0	4	->
water	24:52	0:0	4	parameter
op	24:61	0:0	4	.
water	24:62	0:0	4	bandwidth
op	24:71	0:0	4	.
water	24:72	0:0	4	i_count
water	24:79	0:0	4	)
op	24:81	0:0	4	%
water	24:83	0:0	4	i_offset_count
decl	25:8	25:97	4	const int	i_fi
op	25:23	0:0	4	=
water	25:25	0:0	4	(
water	25:26	0:0	4	p_scan
op	25:32	0:0	4	->
water	25:34	0:0	4	i_index
op	25:42	0:0	4	/
water	25:44	0:0	4	p_scan
op	25:50	0:0	4	->
water	25:52	0:0	4	parameter
op	25:61	0:0	4	.
water	25:62	0:0	4	bandwidth
op	25:71	0:0	4	.
water	25:72	0:0	4	i_count
water	25:79	0:0	4	)
op	25:81	0:0	4	/
water	25:83	0:0	4	i_offset_count
decl	26:8	26:109	4	const int	i_bandwidth
op	26:30	0:0	4	=
water	26:32	0:0	4	p_scan
op	26:38	0:0	4	->
water	26:40	0:0	4	parameter
op	26:49	0:0	4	.
water	26:50	0:0	4	bandwidth
op	26:59	0:0	4	.
water	26:60	0:0	4	i_min
op	26:66	0:0	4	+
water	26:68	0:0	4	i_bi
op	26:73	0:0	4	*
water	26:75	0:0	4	p_scan
op	26:81	0:0	4	->
water	26:83	0:0	4	parameter
op	26:92	0:0	4	.
water	26:93	0:0	4	bandwidth
op	26:102	0:0	4	.
water	26:103	0:0	4	i_step
decl	27:8	27:13	4	int	i
for	28:8	32:8	4	(i = 0 ;i < i_band_count;i ++)
forinit	28:13	28:18	5	i = 0 ;
water	28:13	0:0	6	i
op	28:15	0:0	6	=
water	28:17	0:0	6	0
water	28:18	0:0	6	;
cond	28:20	28:24	5	i < i_band_count
water	28:20	0:0	6	i
op	28:22	0:0	6	<
water	28:24	0:0	6	i_band_count
forexpr	28:38	28:39	5	i ++
water	28:38	0:0	6	i
op	28:39	0:0	6	++
stmts	29:8	32:8	5	
water	29:8	0:0	6	{
if	30:12	31:21	6	(i_fi >= band [ i ] . i_min && i_fi <= band [ i ] . i_max)
cond	30:16	30:57	7	i_fi >= band [ i ] . i_min && i_fi <= band [ i ] . i_max
water	30:16	0:0	8	i_fi
op	30:21	0:0	8	>=
water	30:24	0:0	8	band
op	30:28	0:0	8	[
water	30:29	0:0	8	i
op	30:30	0:0	8	]
op	30:31	0:0	8	.
water	30:32	0:0	8	i_min
op	30:38	0:0	8	&&
water	30:41	0:0	8	i_fi
op	30:46	0:0	8	<=
water	30:49	0:0	8	band
op	30:53	0:0	8	[
water	30:54	0:0	8	i
op	30:55	0:0	8	]
op	30:56	0:0	8	.
water	30:57	0:0	8	i_max
stmts	31:16	31:21	7	
break	31:16	31:21	8	
water	32:8	0:0	6	}
if	33:8	38:8	4	(i >= i_band_count)
cond	33:12	33:16	5	i >= i_band_count
water	33:12	0:0	6	i
op	33:14	0:0	6	>=
water	33:16	0:0	6	i_band_count
stmts	34:8	38:8	5	
water	34:8	0:0	6	{
if	35:12	36:35	6	(i_fi > band [ i_band_count - 1 ] . i_max)
cond	35:16	35:44	7	i_fi > band [ i_band_count - 1 ] . i_max
water	35:16	0:0	8	i_fi
op	35:21	0:0	8	>
water	35:23	0:0	8	band
op	35:27	0:0	8	[
water	35:28	0:0	8	i_band_count
op	35:40	0:0	8	-
water	35:41	0:0	8	1
op	35:42	0:0	8	]
op	35:43	0:0	8	.
water	35:44	0:0	8	i_max
stmts	36:16	36:35	7	
return	36:16	36:35	8	VLC_EGENERIC
water	36:23	0:0	9	VLC_EGENERIC
continue	37:12	37:20	6	
water	38:8	0:0	6	}
decl	39:8	39:77	4	const int	i_frequency_min
op	39:34	0:0	4	=
water	39:36	0:0	4	band
op	39:40	0:0	4	[
water	39:41	0:0	4	i
op	39:42	0:0	4	]
op	39:43	0:0	4	.
water	39:44	0:0	4	i_min
op	39:49	0:0	4	*
water	39:50	0:0	4	i_mhz
op	39:56	0:0	4	+
water	39:58	0:0	4	i_bandwidth
op	39:69	0:0	4	*
water	39:70	0:0	4	i_mhz
op	39:75	0:0	4	/
water	39:76	0:0	4	2
decl	40:8	40:47	4	const int	i_frequency_base
op	40:35	0:0	4	=
water	40:37	0:0	4	i_fi
op	40:41	0:0	4	*
water	40:42	0:0	4	i_mhz
if	41:8	59:8	4	(i_frequency_base >= i_frequency_min && ( i_frequency_base - i_frequency_min ) % ( i_bandwidth * i_mhz ) == 0)
cond	41:12	41:117	5	i_frequency_base >= i_frequency_min && ( i_frequency_base - i_frequency_min ) % ( i_bandwidth * i_mhz ) == 0
water	41:12	0:0	6	i_frequency_base
op	41:29	0:0	6	>=
water	41:32	0:0	6	i_frequency_min
op	41:48	0:0	6	&&
water	41:51	0:0	6	(
water	41:53	0:0	6	i_frequency_base
op	41:70	0:0	6	-
water	41:72	0:0	6	i_frequency_min
water	41:88	0:0	6	)
op	41:90	0:0	6	%
water	41:92	0:0	6	(
water	41:94	0:0	6	i_bandwidth
op	41:105	0:0	6	*
water	41:106	0:0	6	i_mhz
water	41:112	0:0	6	)
op	41:114	0:0	6	==
water	41:117	0:0	6	0
stmts	42:8	59:8	5	
water	42:8	0:0	6	{
decl	43:12	43:119	6	const int	i_frequency
op	43:34	0:0	6	=
water	43:36	0:0	6	i_frequency_base
op	43:53	0:0	6	+
water	43:55	0:0	6	(
water	43:57	0:0	6	i_oi
op	43:62	0:0	6	-
water	43:64	0:0	6	i_offset_count
op	43:78	0:0	6	/
water	43:79	0:0	6	2
water	43:81	0:0	6	)
op	43:83	0:0	6	*
water	43:85	0:0	6	p_scan
op	43:91	0:0	6	->
water	43:93	0:0	6	parameter
op	43:102	0:0	6	.
water	43:103	0:0	6	frequency
op	43:112	0:0	6	.
water	43:113	0:0	6	i_step
if	44:12	46:24	6	(i_frequency < p_scan -> parameter . frequency . i_min || i_frequency > p_scan -> parameter . frequency . i_max)
cond	44:16	45:58	7	i_frequency < p_scan -> parameter . frequency . i_min || i_frequency > p_scan -> parameter . frequency . i_max
water	44:16	0:0	8	i_frequency
op	44:28	0:0	8	<
water	44:30	0:0	8	p_scan
op	44:36	0:0	8	->
water	44:38	0:0	8	parameter
op	44:47	0:0	8	.
water	44:48	0:0	8	frequency
op	44:57	0:0	8	.
water	44:58	0:0	8	i_min
op	44:64	0:0	8	||
water	45:16	0:0	8	i_frequency
op	45:28	0:0	8	>
water	45:30	0:0	8	p_scan
op	45:36	0:0	8	->
water	45:38	0:0	8	parameter
op	45:47	0:0	8	.
water	45:48	0:0	8	frequency
op	45:57	0:0	8	.
water	45:58	0:0	8	i_max
stmts	46:16	46:24	7	
continue	46:16	46:24	8	
water	47:12	0:0	6	p_cfg
op	47:17	0:0	6	->
water	47:19	0:0	6	i_frequency
op	47:31	0:0	6	=
water	47:33	0:0	6	i_frequency
water	47:44	0:0	6	;
water	48:12	0:0	6	p_cfg
op	48:17	0:0	6	->
water	48:19	0:0	6	i_bandwidth
op	48:31	0:0	6	=
water	48:33	0:0	6	i_bandwidth
water	48:44	0:0	6	;
decl	49:12	49:42	6	int	i_current
op	49:26	0:0	6	=
water	49:28	0:0	6	0
water	49:29	0:0	6	,
decl	49:12	49:42	6	int	i_total
op	49:39	0:0	6	=
water	49:41	0:0	6	0
for	50:12	56:12	6	( int i = 0 ;i < i_band_count;i ++)
forinit	0:0	50:26	7	 int i = 0 ;
decl	50:17	50:26	8	int	i
op	50:23	0:0	8	=
water	50:25	0:0	8	0
cond	50:28	50:32	7	i < i_band_count
water	50:28	0:0	8	i
op	50:30	0:0	8	<
water	50:32	0:0	8	i_band_count
forexpr	50:46	50:47	7	i ++
water	50:46	0:0	8	i
op	50:47	0:0	8	++
stmts	51:12	56:12	7	
water	51:12	0:0	8	{
decl	52:16	52:62	8	const int	i_frag
op	52:33	0:0	8	=
water	52:35	0:0	8	band
op	52:39	0:0	8	[
water	52:40	0:0	8	i
op	52:41	0:0	8	]
op	52:42	0:0	8	.
water	52:43	0:0	8	i_max
op	52:48	0:0	8	-
water	52:49	0:0	8	band
op	52:53	0:0	8	[
water	52:54	0:0	8	i
op	52:55	0:0	8	]
op	52:56	0:0	8	.
water	52:57	0:0	8	i_min
if	53:16	54:70	8	(i_fi >= band [ i ] . i_min)
cond	53:20	53:36	9	i_fi >= band [ i ] . i_min
water	53:20	0:0	10	i_fi
op	53:25	0:0	10	>=
water	53:28	0:0	10	band
op	53:32	0:0	10	[
water	53:33	0:0	10	i
op	53:34	0:0	10	]
op	53:35	0:0	10	.
water	53:36	0:0	10	i_min
stmts	54:20	54:70	9	
water	54:20	0:0	10	i_current
op	54:30	0:0	10	+=
call	54:33	54:69	10	__MIN
arg	54:40	54:60	11	i_fi-band[i].i_min
water	54:40	0:0	12	i_fi
op	54:45	0:0	12	-
water	54:47	0:0	12	band
op	54:51	0:0	12	[
water	54:52	0:0	12	i
op	54:53	0:0	12	]
op	54:54	0:0	12	.
water	54:55	0:0	12	i_min
arg	54:62	54:69	11	i_frag
water	54:62	0:0	12	i_frag
water	54:70	0:0	10	;
water	55:16	0:0	8	i_total
op	55:24	0:0	8	+=
water	55:27	0:0	8	i_frag
water	55:33	0:0	8	;
water	56:12	0:0	8	}
op	57:12	0:0	6	*
water	57:13	0:0	6	pf_pos
op	57:20	0:0	6	=
call	57:22	57:74	6	(double)
arg	57:32	57:74	7	i_current+(double)i_oi/i_offset_count
water	57:32	0:0	8	i_current
op	57:42	0:0	8	+
water	57:44	0:0	8	(
water	57:45	0:0	8	double
water	57:51	0:0	8	)
water	57:52	0:0	8	i_oi
op	57:57	0:0	8	/
water	57:59	0:0	8	i_offset_count
op	57:76	0:0	6	/
water	57:78	0:0	6	i_total
water	57:85	0:0	6	;
return	58:12	58:30	6	VLC_SUCCESS
water	58:19	0:0	7	VLC_SUCCESS
water	59:8	0:0	6	}
water	60:4	0:0	4	}

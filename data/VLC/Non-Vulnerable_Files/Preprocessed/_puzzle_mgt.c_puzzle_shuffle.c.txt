func	2:0	25:0	0	int	puzzle_shuffle
params	2:18	0:0	1	
param	2:20	2:39	2	filter_t *	p_filter
stmnts	0:0	24:22	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:58	2	int32_t	i_pieces_nbr
op	5:25	0:0	2	=
water	5:27	0:0	2	p_sys
op	5:32	0:0	2	->
water	5:34	0:0	2	s_allocated
op	5:45	0:0	2	.
water	5:46	0:0	2	i_pieces_nbr
do	6:4	11:4	2	(puzzle_is_finished (p_sys ,p_sys -> pi_order ) || !puzzle_is_valid (p_sys ,p_sys -> pi_order ))
cond	11:13	11:102	3	puzzle_is_finished (p_sys ,p_sys -> pi_order ) || !puzzle_is_valid (p_sys ,p_sys -> pi_order )
call	11:13	11:56	4	puzzle_is_finished
arg	11:33	11:38	5	p_sys
water	11:33	0:0	6	p_sys
arg	11:40	11:56	5	p_sys->pi_order
water	11:40	0:0	6	p_sys
op	11:45	0:0	6	->
water	11:47	0:0	6	pi_order
op	11:58	0:0	4	||
op	11:61	0:0	4	!
call	11:62	11:102	4	puzzle_is_valid
arg	11:79	11:84	5	p_sys
water	11:79	0:0	6	p_sys
arg	11:86	11:102	5	p_sys->pi_order
water	11:86	0:0	6	p_sys
op	11:91	0:0	6	->
water	11:93	0:0	6	pi_order
stmts	7:4	11:4	3	
water	7:4	0:0	4	{
decl	8:8	8:79	4	int	i_ret
op	8:18	0:0	4	=
call	8:20	8:78	5	puzzle_generate_rand_pce_list
arg	8:51	8:59	6	p_filter
water	8:51	0:0	7	p_filter
arg	8:61	8:78	6	&p_sys->pi_order
op	8:61	0:0	7	&
water	8:62	0:0	7	p_sys
op	8:67	0:0	7	->
water	8:69	0:0	7	pi_order
if	9:8	10:24	4	(i_ret != VLC_SUCCESS)
cond	9:12	9:21	5	i_ret != VLC_SUCCESS
water	9:12	0:0	6	i_ret
op	9:18	0:0	6	!=
water	9:21	0:0	6	VLC_SUCCESS
stmts	10:12	10:24	5	
return	10:12	10:24	6	i_ret
water	10:19	0:0	7	i_ret
water	11:4	0:0	4	}
water	11:105	0:0	2	;
if	12:4	18:4	2	(p_sys -> s_current_param . b_blackslot)
cond	12:8	12:31	3	p_sys -> s_current_param . b_blackslot
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	s_current_param
op	12:30	0:0	4	.
water	12:31	0:0	4	b_blackslot
stmts	12:45	18:4	3	
water	12:45	0:0	4	{
for	13:8	17:12	4	( int32_t i = 0 ;i < i_pieces_nbr;i ++)
forinit	0:0	13:26	5	 int32_t i = 0 ;
decl	13:13	13:26	6	int32_t	i
op	13:23	0:0	6	=
water	13:25	0:0	6	0
cond	13:28	13:32	5	i < i_pieces_nbr
water	13:28	0:0	6	i
op	13:30	0:0	6	<
water	13:32	0:0	6	i_pieces_nbr
forexpr	13:46	13:47	5	i ++
water	13:46	0:0	6	i
op	13:47	0:0	6	++
stmts	14:12	17:12	5	
if	14:12	17:12	6	(p_sys -> pi_order [ i ] == i_pieces_nbr - 1)
cond	14:16	14:53	7	p_sys -> pi_order [ i ] == i_pieces_nbr - 1
water	14:16	0:0	8	p_sys
op	14:21	0:0	8	->
water	14:23	0:0	8	pi_order
op	14:31	0:0	8	[
water	14:32	0:0	8	i
op	14:33	0:0	8	]
op	14:35	0:0	8	==
water	14:38	0:0	8	i_pieces_nbr
op	14:51	0:0	8	-
water	14:53	0:0	8	1
stmts	14:57	17:12	7	
water	14:57	0:0	8	{
water	15:16	0:0	8	p_sys
op	15:21	0:0	8	->
water	15:23	0:0	8	i_selected
op	15:34	0:0	8	=
water	15:36	0:0	8	i
water	15:37	0:0	8	;
break	16:16	16:21	8	
water	17:12	0:0	8	}
water	18:4	0:0	4	}
else	19:4	21:4	2
stmts	19:9	21:4	3	
water	19:9	0:0	4	{
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	i_selected
op	20:26	0:0	4	=
water	20:28	0:0	4	NO_PCE
water	20:34	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	b_shuffle_rqst
op	22:26	0:0	2	=
water	22:28	0:0	2	false
water	22:33	0:0	2	;
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	b_finished
op	23:22	0:0	2	=
water	23:24	0:0	2	false
water	23:29	0:0	2	;
return	24:4	24:22	2	VLC_SUCCESS
water	24:11	0:0	3	VLC_SUCCESS

func	2:0	123:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	p_this
stmnts	0:0	122:23	1	
decl	4:4	4:35	2	stream_t	*s
op	4:16	0:0	2	=
water	4:18	0:0	2	(
water	4:19	0:0	2	stream_t
op	4:27	0:0	2	*
water	4:28	0:0	2	)
water	4:29	0:0	2	p_this
decl	5:4	5:23	2	stream_sys_t	*p_sys
if	6:4	7:27	2	(!isHTTPLiveStreaming (s ))
cond	6:8	6:30	3	!isHTTPLiveStreaming (s )
op	6:8	0:0	4	!
call	6:9	6:30	4	isHTTPLiveStreaming
arg	6:29	6:30	5	s
water	6:29	0:0	6	s
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
call	8:4	8:60	2	msg_Info
arg	8:13	8:19	3	p_this
water	8:13	0:0	4	p_this
arg	8:21	8:47	3	"HTTP Live Streaming (%s)"
water	8:21	0:0	4	"HTTP Live Streaming (%s)"
arg	8:49	8:60	3	s->psz_path
water	8:49	0:0	4	s
op	8:50	0:0	4	->
water	8:52	0:0	4	psz_path
water	8:61	0:0	2	;
call	10:4	10:20	2	vlc_gcrypt_init
water	10:21	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	p_sys
op	12:13	0:0	2	=
water	12:15	0:0	2	p_sys
op	12:21	0:0	2	=
call	12:23	12:47	2	calloc
arg	12:30	12:31	3	1
water	12:30	0:0	4	1
arg	12:33	12:47	3	sizeof(*p_sys)
op	12:33	0:0	4	sizeof
water	12:39	0:0	4	(
op	12:40	0:0	4	*
water	12:41	0:0	4	p_sys
water	12:46	0:0	4	)
water	12:48	0:0	2	;
if	13:4	14:25	2	(p_sys == NULL)
cond	13:8	13:17	3	p_sys == NULL
water	13:8	0:0	4	p_sys
op	13:14	0:0	4	==
water	13:17	0:0	4	NULL
stmts	14:8	14:25	3	
return	14:8	14:25	4	VLC_ENOMEM
water	14:15	0:0	5	VLC_ENOMEM
decl	15:4	15:24	2	char	*psz_uri
op	15:18	0:0	2	=
water	15:20	0:0	2	NULL
if	16:4	20:4	2	(asprintf (& psz_uri ,"%s://%s" ,s -> psz_access ,s -> psz_path ) < 0)
cond	16:8	16:67	3	asprintf (& psz_uri ,"%s://%s" ,s -> psz_access ,s -> psz_path ) < 0
call	16:8	16:63	4	asprintf
arg	16:17	16:25	5	&psz_uri
op	16:17	0:0	6	&
water	16:18	0:0	6	psz_uri
arg	16:26	16:35	5	"%s://%s"
water	16:26	0:0	6	"%s://%s"
arg	16:37	16:50	5	s->psz_access
water	16:37	0:0	6	s
op	16:38	0:0	6	->
water	16:40	0:0	6	psz_access
arg	16:52	16:63	5	s->psz_path
water	16:52	0:0	6	s
op	16:53	0:0	6	->
water	16:55	0:0	6	psz_path
op	16:65	0:0	4	<
water	16:67	0:0	4	0
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:18	4	free
arg	18:13	18:18	5	p_sys
water	18:13	0:0	6	p_sys
water	18:19	0:0	4	;
return	19:8	19:25	4	VLC_ENOMEM
water	19:15	0:0	5	VLC_ENOMEM
water	20:4	0:0	4	}
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	m3u8
op	21:16	0:0	2	=
water	21:18	0:0	2	psz_uri
water	21:25	0:0	2	;
decl	22:4	22:18	2	char	*new_path
if	23:4	28:4	2	(asprintf (& new_path ,"%s.ts" ,s -> psz_path ) < 0)
cond	23:8	23:52	3	asprintf (& new_path ,"%s.ts" ,s -> psz_path ) < 0
call	23:8	23:48	4	asprintf
arg	23:17	23:26	5	&new_path
op	23:17	0:0	6	&
water	23:18	0:0	6	new_path
arg	23:28	23:35	5	"%s.ts"
water	23:28	0:0	6	"%s.ts"
arg	23:37	23:48	5	s->psz_path
water	23:37	0:0	6	s
op	23:38	0:0	6	->
water	23:40	0:0	6	psz_path
op	23:50	0:0	4	<
water	23:52	0:0	4	0
stmts	24:4	28:4	3	
water	24:4	0:0	4	{
call	25:8	25:24	4	free
arg	25:13	25:24	5	p_sys->m3u8
water	25:13	0:0	6	p_sys
op	25:18	0:0	6	->
water	25:20	0:0	6	m3u8
water	25:25	0:0	4	;
call	26:8	26:18	4	free
arg	26:13	26:18	5	p_sys
water	26:13	0:0	6	p_sys
water	26:19	0:0	4	;
return	27:8	27:25	4	VLC_ENOMEM
water	27:15	0:0	5	VLC_ENOMEM
water	28:4	0:0	4	}
call	29:4	29:20	2	free
arg	29:9	29:20	3	s->psz_path
water	29:9	0:0	4	s
op	29:10	0:0	4	->
water	29:12	0:0	4	psz_path
water	29:21	0:0	2	;
water	30:4	0:0	2	s
op	30:5	0:0	2	->
water	30:7	0:0	2	psz_path
op	30:16	0:0	2	=
water	30:18	0:0	2	new_path
water	30:26	0:0	2	;
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	bandwidth
op	31:21	0:0	2	=
water	31:23	0:0	2	0
water	31:24	0:0	2	;
water	32:4	0:0	2	p_sys
op	32:9	0:0	2	->
water	32:11	0:0	2	b_live
op	32:18	0:0	2	=
water	32:20	0:0	2	true
water	32:24	0:0	2	;
water	33:4	0:0	2	p_sys
op	33:9	0:0	2	->
water	33:11	0:0	2	b_meta
op	33:18	0:0	2	=
water	33:20	0:0	2	false
water	33:25	0:0	2	;
water	34:4	0:0	2	p_sys
op	34:9	0:0	2	->
water	34:11	0:0	2	b_error
op	34:19	0:0	2	=
water	34:21	0:0	2	false
water	34:26	0:0	2	;
water	35:4	0:0	2	p_sys
op	35:9	0:0	2	->
water	35:11	0:0	2	hls_stream
op	35:22	0:0	2	=
call	35:24	35:38	2	vlc_array_new
water	35:39	0:0	2	;
if	36:4	41:4	2	(p_sys -> hls_stream == NULL)
cond	36:8	36:29	3	p_sys -> hls_stream == NULL
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	hls_stream
op	36:26	0:0	4	==
water	36:29	0:0	4	NULL
stmts	37:4	41:4	3	
water	37:4	0:0	4	{
call	38:8	38:24	4	free
arg	38:13	38:24	5	p_sys->m3u8
water	38:13	0:0	6	p_sys
op	38:18	0:0	6	->
water	38:20	0:0	6	m3u8
water	38:25	0:0	4	;
call	39:8	39:18	4	free
arg	39:13	39:18	5	p_sys
water	39:13	0:0	6	p_sys
water	39:19	0:0	4	;
return	40:8	40:25	4	VLC_ENOMEM
water	40:15	0:0	5	VLC_ENOMEM
water	41:4	0:0	4	}
water	43:4	0:0	2	s
op	43:5	0:0	2	->
water	43:7	0:0	2	pf_read
op	43:15	0:0	2	=
water	43:17	0:0	2	Read
water	43:21	0:0	2	;
water	44:4	0:0	2	s
op	44:5	0:0	2	->
water	44:7	0:0	2	pf_peek
op	44:15	0:0	2	=
water	44:17	0:0	2	Peek
water	44:21	0:0	2	;
water	45:4	0:0	2	s
op	45:5	0:0	2	->
water	45:7	0:0	2	pf_control
op	45:18	0:0	2	=
water	45:20	0:0	2	Control
water	45:27	0:0	2	;
water	46:4	0:0	2	p_sys
op	46:9	0:0	2	->
water	46:11	0:0	2	paused
op	46:18	0:0	2	=
water	46:20	0:0	2	false
water	46:25	0:0	2	;
call	47:4	47:38	2	atomic_init
arg	47:16	47:31	3	&p_sys->closing
op	47:16	0:0	4	&
water	47:17	0:0	4	p_sys
op	47:22	0:0	4	->
water	47:24	0:0	4	closing
arg	47:33	47:38	3	false
water	47:33	0:0	4	false
water	47:39	0:0	2	;
call	48:4	48:34	2	atomic_init
arg	48:16	48:27	3	&p_sys->eof
op	48:16	0:0	4	&
water	48:17	0:0	4	p_sys
op	48:22	0:0	4	->
water	48:24	0:0	4	eof
arg	48:29	48:34	3	false
water	48:29	0:0	4	false
water	48:35	0:0	2	;
call	49:4	49:30	2	vlc_cond_init
arg	49:18	49:30	3	&p_sys->wait
op	49:18	0:0	4	&
water	49:19	0:0	4	p_sys
op	49:24	0:0	4	->
water	49:26	0:0	4	wait
water	49:31	0:0	2	;
call	50:4	50:31	2	vlc_mutex_init
arg	50:19	50:31	3	&p_sys->lock
op	50:19	0:0	4	&
water	50:20	0:0	4	p_sys
op	50:25	0:0	4	->
water	50:27	0:0	4	lock
water	50:32	0:0	2	;
decl	52:4	52:26	2	uint8_t	*buffer
op	52:20	0:0	2	=
water	52:22	0:0	2	NULL
decl	53:4	53:61	2	ssize_t	len
op	53:16	0:0	2	=
call	53:18	53:60	3	read_M3U8_from_stream
arg	53:40	53:51	4	s->p_source
water	53:40	0:0	5	s
op	53:41	0:0	5	->
water	53:43	0:0	5	p_source
arg	53:53	53:60	4	&buffer
op	53:53	0:0	5	&
water	53:54	0:0	5	buffer
if	54:4	55:17	2	(len < 0)
cond	54:8	54:14	3	len < 0
water	54:8	0:0	4	len
op	54:12	0:0	4	<
water	54:14	0:0	4	0
stmts	55:8	55:17	3	
goto	55:8	55:17	4	fail
water	55:13	0:0	5	fail
if	56:4	60:4	2	(parse_M3U8 (s ,p_sys -> hls_stream ,buffer ,len ,false ) != VLC_SUCCESS)
cond	56:8	56:64	3	parse_M3U8 (s ,p_sys -> hls_stream ,buffer ,len ,false ) != VLC_SUCCESS
call	56:8	56:59	4	parse_M3U8
arg	56:19	56:20	5	s
water	56:19	0:0	6	s
arg	56:22	56:39	5	p_sys->hls_stream
water	56:22	0:0	6	p_sys
op	56:27	0:0	6	->
water	56:29	0:0	6	hls_stream
arg	56:41	56:47	5	buffer
water	56:41	0:0	6	buffer
arg	56:49	56:52	5	len
water	56:49	0:0	6	len
arg	56:54	56:59	5	false
water	56:54	0:0	6	false
op	56:61	0:0	4	!=
water	56:64	0:0	4	VLC_SUCCESS
stmts	57:4	60:4	3	
water	57:4	0:0	4	{
call	58:8	58:19	4	free
arg	58:13	58:19	5	buffer
water	58:13	0:0	6	buffer
water	58:20	0:0	4	;
goto	59:8	59:17	4	fail
water	59:13	0:0	5	fail
water	60:4	0:0	4	}
call	61:4	61:15	2	free
arg	61:9	61:15	3	buffer
water	61:9	0:0	4	buffer
water	61:16	0:0	2	;
call	64:4	65:56	2	qsort
arg	64:11	64:38	3	p_sys->hls_stream->pp_elems
water	64:11	0:0	4	p_sys
op	64:16	0:0	4	->
water	64:18	0:0	4	hls_stream
op	64:28	0:0	4	->
water	64:30	0:0	4	pp_elems
arg	64:40	64:66	3	p_sys->hls_stream->i_count
water	64:40	0:0	4	p_sys
op	64:45	0:0	4	->
water	64:47	0:0	4	hls_stream
op	64:57	0:0	4	->
water	64:59	0:0	4	i_count
arg	65:11	65:34	3	sizeof(hls_stream_t*)
op	65:11	0:0	4	sizeof
water	65:17	0:0	4	(
water	65:19	0:0	4	hls_stream_t
op	65:31	0:0	4	*
water	65:33	0:0	4	)
arg	65:36	65:56	3	&hls_CompareStreams
op	65:36	0:0	4	&
water	65:37	0:0	4	hls_CompareStreams
water	65:57	0:0	2	;
decl	67:4	67:71	2	int	current
op	67:16	0:0	2	=
water	67:18	0:0	2	p_sys
op	67:23	0:0	2	->
water	67:25	0:0	2	playback
op	67:33	0:0	2	.
water	67:34	0:0	2	stream
op	67:41	0:0	2	=
water	67:43	0:0	2	p_sys
op	67:48	0:0	2	->
water	67:50	0:0	2	hls_stream
op	67:60	0:0	2	->
water	67:62	0:0	2	i_count
op	67:69	0:0	2	-
water	67:70	0:0	2	1
water	68:4	0:0	2	p_sys
op	68:9	0:0	2	->
water	68:11	0:0	2	playback
op	68:19	0:0	2	.
water	68:20	0:0	2	segment
op	68:28	0:0	2	=
water	68:30	0:0	2	p_sys
op	68:35	0:0	2	->
water	68:37	0:0	2	download
op	68:45	0:0	2	.
water	68:46	0:0	2	segment
op	68:54	0:0	2	=
call	68:56	68:80	2	ChooseSegment
arg	68:70	68:71	3	s
water	68:70	0:0	4	s
arg	68:73	68:80	3	current
water	68:73	0:0	4	current
water	68:81	0:0	2	;
call	70:4	70:64	2	hls_ManageSegmentKeys
arg	70:26	70:27	3	s
water	70:26	0:0	4	s
arg	70:29	70:64	3	hls_Get(p_sys->hls_stream,current)
call	70:29	70:63	4	hls_Get
arg	70:37	70:54	5	p_sys->hls_stream
water	70:37	0:0	6	p_sys
op	70:42	0:0	6	->
water	70:44	0:0	6	hls_stream
arg	70:56	70:63	5	current
water	70:56	0:0	6	current
water	70:65	0:0	2	;
if	71:4	74:4	2	(Prefetch (s ,& current ) != VLC_SUCCESS)
cond	71:8	71:33	3	Prefetch (s ,& current ) != VLC_SUCCESS
call	71:8	71:28	4	Prefetch
arg	71:17	71:18	5	s
water	71:17	0:0	6	s
arg	71:20	71:28	5	&current
op	71:20	0:0	6	&
water	71:21	0:0	6	current
op	71:30	0:0	4	!=
water	71:33	0:0	4	VLC_SUCCESS
stmts	72:4	74:4	3	
water	72:4	0:0	4	{
call	73:8	73:51	4	msg_Err
arg	73:16	73:17	5	s
water	73:16	0:0	6	s
arg	73:19	73:51	5	"fetching first segment failed."
water	73:19	0:0	6	"fetching first segment failed."
water	73:52	0:0	4	;
water	74:4	0:0	4	}
water	75:4	0:0	2	p_sys
op	75:9	0:0	2	->
water	75:11	0:0	2	download
op	75:19	0:0	2	.
water	75:20	0:0	2	stream
op	75:27	0:0	2	=
water	75:29	0:0	2	current
water	75:36	0:0	2	;
water	76:4	0:0	2	p_sys
op	76:9	0:0	2	->
water	76:11	0:0	2	playback
op	76:19	0:0	2	.
water	76:20	0:0	2	stream
op	76:27	0:0	2	=
water	76:29	0:0	2	current
water	76:36	0:0	2	;
water	77:4	0:0	2	p_sys
op	77:9	0:0	2	->
water	77:11	0:0	2	download
op	77:19	0:0	2	.
water	77:20	0:0	2	seek
op	77:25	0:0	2	=
op	77:27	0:0	2	-
water	77:28	0:0	2	1
water	77:29	0:0	2	;
call	78:4	78:45	2	vlc_mutex_init
arg	78:19	78:45	3	&p_sys->download.lock_wait
op	78:19	0:0	4	&
water	78:20	0:0	4	p_sys
op	78:25	0:0	4	->
water	78:27	0:0	4	download
op	78:35	0:0	4	.
water	78:36	0:0	4	lock_wait
water	78:46	0:0	2	;
call	79:4	79:39	2	vlc_cond_init
arg	79:18	79:39	3	&p_sys->download.wait
op	79:18	0:0	4	&
water	79:19	0:0	4	p_sys
op	79:24	0:0	4	->
water	79:26	0:0	4	download
op	79:34	0:0	4	.
water	79:35	0:0	4	wait
water	79:40	0:0	2	;
call	80:4	80:41	2	vlc_mutex_init
arg	80:19	80:41	3	&p_sys->read.lock_wait
op	80:19	0:0	4	&
water	80:20	0:0	4	p_sys
op	80:25	0:0	4	->
water	80:27	0:0	4	read
op	80:31	0:0	4	.
water	80:32	0:0	4	lock_wait
water	80:42	0:0	2	;
call	81:4	81:35	2	vlc_cond_init
arg	81:18	81:35	3	&p_sys->read.wait
op	81:18	0:0	4	&
water	81:19	0:0	4	p_sys
op	81:24	0:0	4	->
water	81:26	0:0	4	read
op	81:30	0:0	4	.
water	81:31	0:0	4	wait
water	81:36	0:0	2	;
if	83:4	93:4	2	(p_sys -> b_live)
cond	83:8	83:15	3	p_sys -> b_live
water	83:8	0:0	4	p_sys
op	83:13	0:0	4	->
water	83:15	0:0	4	b_live
stmts	84:4	93:4	3	
water	84:4	0:0	4	{
decl	85:8	85:63	4	hls_stream_t	*hls
op	85:26	0:0	4	=
call	85:28	85:62	5	hls_Get
arg	85:36	85:53	6	p_sys->hls_stream
water	85:36	0:0	7	p_sys
op	85:41	0:0	7	->
water	85:43	0:0	7	hls_stream
arg	85:55	85:62	6	current
water	85:55	0:0	7	current
water	86:8	0:0	4	p_sys
op	86:13	0:0	4	->
water	86:15	0:0	4	playlist
op	86:23	0:0	4	.
water	86:24	0:0	4	last
op	86:29	0:0	4	=
call	86:31	86:37	4	mdate
water	86:38	0:0	4	;
water	87:8	0:0	4	p_sys
op	87:13	0:0	4	->
water	87:15	0:0	4	playlist
op	87:23	0:0	4	.
water	87:24	0:0	4	wakeup
op	87:31	0:0	4	=
water	87:33	0:0	4	p_sys
op	87:38	0:0	4	->
water	87:40	0:0	4	playlist
op	87:48	0:0	4	.
water	87:49	0:0	4	last
op	87:54	0:0	4	+
water	88:16	0:0	4	(
water	88:17	0:0	4	(
water	88:18	0:0	4	mtime_t
water	88:25	0:0	4	)
water	88:26	0:0	4	hls
op	88:29	0:0	4	->
water	88:31	0:0	4	duration
op	88:40	0:0	4	*
water	88:42	0:0	4	CLOCK_FREQ
water	88:53	0:0	4	)
water	88:54	0:0	4	;
if	89:8	92:8	4	(vlc_clone (& p_sys -> reload ,hls_Reload ,s ,VLC_THREAD_PRIORITY_LOW ))
cond	89:12	89:76	5	vlc_clone (& p_sys -> reload ,hls_Reload ,s ,VLC_THREAD_PRIORITY_LOW )
call	89:12	89:76	6	vlc_clone
arg	89:22	89:36	7	&p_sys->reload
op	89:22	0:0	8	&
water	89:23	0:0	8	p_sys
op	89:28	0:0	8	->
water	89:30	0:0	8	reload
arg	89:38	89:48	7	hls_Reload
water	89:38	0:0	8	hls_Reload
arg	89:50	89:51	7	s
water	89:50	0:0	8	s
arg	89:53	89:76	7	VLC_THREAD_PRIORITY_LOW
water	89:53	0:0	8	VLC_THREAD_PRIORITY_LOW
stmts	90:8	92:8	5	
water	90:8	0:0	6	{
goto	91:12	91:28	6	fail_thread
water	91:17	0:0	7	fail_thread
water	92:8	0:0	6	}
water	93:4	0:0	4	}
if	94:4	102:4	2	(vlc_clone (& p_sys -> thread ,hls_Thread ,s ,VLC_THREAD_PRIORITY_INPUT ))
cond	94:8	94:74	3	vlc_clone (& p_sys -> thread ,hls_Thread ,s ,VLC_THREAD_PRIORITY_INPUT )
call	94:8	94:74	4	vlc_clone
arg	94:18	94:32	5	&p_sys->thread
op	94:18	0:0	6	&
water	94:19	0:0	6	p_sys
op	94:24	0:0	6	->
water	94:26	0:0	6	thread
arg	94:34	94:44	5	hls_Thread
water	94:34	0:0	6	hls_Thread
arg	94:46	94:47	5	s
water	94:46	0:0	6	s
arg	94:49	94:74	5	VLC_THREAD_PRIORITY_INPUT
water	94:49	0:0	6	VLC_THREAD_PRIORITY_INPUT
stmts	95:4	102:4	3	
water	95:4	0:0	4	{
if	96:8	100:8	4	(p_sys -> b_live)
cond	96:12	96:19	5	p_sys -> b_live
water	96:12	0:0	6	p_sys
op	96:17	0:0	6	->
water	96:19	0:0	6	b_live
stmts	97:8	100:8	5	
water	97:8	0:0	6	{
call	98:12	98:36	6	vlc_cancel
arg	98:23	98:36	7	p_sys->reload
water	98:23	0:0	8	p_sys
op	98:28	0:0	8	->
water	98:30	0:0	8	reload
water	98:37	0:0	6	;
call	99:12	99:40	6	vlc_join
arg	99:21	99:34	7	p_sys->reload
water	99:21	0:0	8	p_sys
op	99:26	0:0	8	->
water	99:28	0:0	8	reload
arg	99:36	99:40	7	NULL
water	99:36	0:0	8	NULL
water	99:41	0:0	6	;
water	100:8	0:0	6	}
goto	101:8	101:24	4	fail_thread
water	101:13	0:0	5	fail_thread
water	102:4	0:0	4	}
return	103:4	103:22	2	VLC_SUCCESS
water	103:11	0:0	3	VLC_SUCCESS
label	104:0	104:11	2	fail_thread :
call	105:4	105:48	2	vlc_mutex_destroy
arg	105:22	105:48	3	&p_sys->download.lock_wait
op	105:22	0:0	4	&
water	105:23	0:0	4	p_sys
op	105:28	0:0	4	->
water	105:30	0:0	4	download
op	105:38	0:0	4	.
water	105:39	0:0	4	lock_wait
water	105:49	0:0	2	;
call	106:4	106:42	2	vlc_cond_destroy
arg	106:21	106:42	3	&p_sys->download.wait
op	106:21	0:0	4	&
water	106:22	0:0	4	p_sys
op	106:27	0:0	4	->
water	106:29	0:0	4	download
op	106:37	0:0	4	.
water	106:38	0:0	4	wait
water	106:43	0:0	2	;
call	107:4	107:44	2	vlc_mutex_destroy
arg	107:22	107:44	3	&p_sys->read.lock_wait
op	107:22	0:0	4	&
water	107:23	0:0	4	p_sys
op	107:28	0:0	4	->
water	107:30	0:0	4	read
op	107:34	0:0	4	.
water	107:35	0:0	4	lock_wait
water	107:45	0:0	2	;
call	108:4	108:38	2	vlc_cond_destroy
arg	108:21	108:38	3	&p_sys->read.wait
op	108:21	0:0	4	&
water	108:22	0:0	4	p_sys
op	108:27	0:0	4	->
water	108:29	0:0	4	read
op	108:33	0:0	4	.
water	108:34	0:0	4	wait
water	108:39	0:0	2	;
label	109:0	109:4	2	fail :
for	111:4	115:4	2	( int i = 0 ;i <vlc_array_count (p_sys -> hls_stream );i ++)
forinit	0:0	111:18	3	 int i = 0 ;
decl	111:9	111:18	4	int	i
op	111:15	0:0	4	=
water	111:17	0:0	4	0
cond	111:20	111:57	3	i <vlc_array_count (p_sys -> hls_stream )
water	111:20	0:0	4	i
op	111:22	0:0	4	<
call	111:24	111:57	4	vlc_array_count
arg	111:40	111:57	5	p_sys->hls_stream
water	111:40	0:0	6	p_sys
op	111:45	0:0	6	->
water	111:47	0:0	6	hls_stream
forexpr	111:60	111:61	3	i ++
water	111:60	0:0	4	i
op	111:61	0:0	4	++
stmts	112:4	115:4	3	
water	112:4	0:0	4	{
decl	113:8	113:57	4	hls_stream_t	*hls
op	113:26	0:0	4	=
call	113:28	113:56	5	hls_Get
arg	113:36	113:53	6	p_sys->hls_stream
water	113:36	0:0	7	p_sys
op	113:41	0:0	7	->
water	113:43	0:0	7	hls_stream
arg	113:55	113:56	6	i
water	113:55	0:0	7	i
if	114:8	114:30	4	(hls)
cond	114:12	114:12	5	hls
water	114:12	0:0	6	hls
stmts	114:17	114:30	5	
call	114:17	114:29	6	hls_Free
arg	114:26	114:29	7	hls
water	114:26	0:0	8	hls
water	114:30	0:0	6	;
water	115:4	0:0	4	}
call	116:4	116:39	2	vlc_array_destroy
arg	116:22	116:39	3	p_sys->hls_stream
water	116:22	0:0	4	p_sys
op	116:27	0:0	4	->
water	116:29	0:0	4	hls_stream
water	116:40	0:0	2	;
call	117:4	117:34	2	vlc_mutex_destroy
arg	117:22	117:34	3	&p_sys->lock
op	117:22	0:0	4	&
water	117:23	0:0	4	p_sys
op	117:28	0:0	4	->
water	117:30	0:0	4	lock
water	117:35	0:0	2	;
call	118:4	118:33	2	vlc_cond_destroy
arg	118:21	118:33	3	&p_sys->wait
op	118:21	0:0	4	&
water	118:22	0:0	4	p_sys
op	118:27	0:0	4	->
water	118:29	0:0	4	wait
water	118:34	0:0	2	;
call	120:4	120:20	2	free
arg	120:9	120:20	3	p_sys->m3u8
water	120:9	0:0	4	p_sys
op	120:14	0:0	4	->
water	120:16	0:0	4	m3u8
water	120:21	0:0	2	;
call	121:4	121:14	2	free
arg	121:9	121:14	3	p_sys
water	121:9	0:0	4	p_sys
water	121:15	0:0	2	;
return	122:4	122:23	2	VLC_EGENERIC
water	122:11	0:0	3	VLC_EGENERIC

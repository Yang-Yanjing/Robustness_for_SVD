func	2:0	56:0	0	int	puzzle_generate_sect_border
params	2:31	0:0	1	
param	2:33	2:51	2	filter_t *	p_filter
param	2:53	2:82	2	piece_shape_t *	ps_piece_shape
param	2:84	2:99	2	uint8_t	i_plane
param	2:101	2:117	2	uint8_t	i_border
stmnts	5:4	55:22	1	
if	5:4	6:27	2	(! ps_piece_shape)
cond	5:8	5:9	3	! ps_piece_shape
op	5:8	0:0	4	!
water	5:9	0:0	4	ps_piece_shape
stmts	6:8	6:27	3	
return	6:8	6:27	4	VLC_EGENERIC
water	6:15	0:0	5	VLC_EGENERIC
decl	7:4	7:41	2	filter_sys_t	*p_sys
op	7:24	0:0	2	=
water	7:26	0:0	2	p_filter
op	7:34	0:0	2	->
water	7:36	0:0	2	p_sys
decl	8:4	8:68	2	int32_t	i_width
op	8:20	0:0	2	=
water	8:22	0:0	2	p_sys
op	8:27	0:0	2	->
water	8:29	0:0	2	ps_desk_planes
op	8:43	0:0	2	[
water	8:44	0:0	2	i_plane
op	8:51	0:0	2	]
op	8:52	0:0	2	.
water	8:53	0:0	2	i_pce_max_width
decl	9:4	9:68	2	int32_t	i_lines
op	9:20	0:0	2	=
water	9:22	0:0	2	p_sys
op	9:27	0:0	2	->
water	9:29	0:0	2	ps_desk_planes
op	9:43	0:0	2	[
water	9:44	0:0	2	i_plane
op	9:51	0:0	2	]
op	9:52	0:0	2	.
water	9:53	0:0	2	i_pce_max_lines
decl	11:4	11:79	2	int32_t	i_min_y
op	11:20	0:0	2	=
water	11:22	0:0	2	(
water	11:23	0:0	2	i_border
op	11:32	0:0	2	!=
water	11:35	0:0	2	puzzle_SHAPE_BTM
water	11:51	0:0	2	)
water	11:53	0:0	2	?
water	11:55	0:0	2	0
water	11:57	0:0	2	:
call	11:59	11:78	3	floor
arg	11:66	11:78	4	i_lines/2
water	11:66	0:0	5	i_lines
op	11:74	0:0	5	/
water	11:76	0:0	5	2
decl	12:4	13:68	2	int32_t	i_nb_y
op	12:19	0:0	2	=
water	12:21	0:0	2	(
water	12:22	0:0	2	i_border
op	12:31	0:0	2	!=
water	12:34	0:0	2	puzzle_SHAPE_TOP
water	12:50	0:0	2	)
water	12:51	0:0	2	?
water	13:24	0:0	2	(
water	13:25	0:0	2	i_lines
op	13:33	0:0	2	-
water	13:35	0:0	2	i_min_y
water	13:42	0:0	2	)
water	13:44	0:0	2	:
water	13:46	0:0	2	(
water	13:47	0:0	2	i_lines
op	13:55	0:0	2	/
water	13:56	0:0	2	2
op	13:58	0:0	2	-
water	13:60	0:0	2	i_min_y
water	13:67	0:0	2	)
water	15:4	0:0	2	ps_piece_shape
op	15:18	0:0	2	->
water	15:20	0:0	2	i_row_nbr
op	15:30	0:0	2	=
water	15:32	0:0	2	i_nb_y
water	15:38	0:0	2	;
water	16:4	0:0	2	ps_piece_shape
op	16:18	0:0	2	->
water	16:20	0:0	2	i_first_row_offset
op	16:39	0:0	2	=
water	16:41	0:0	2	i_min_y
water	16:48	0:0	2	;
water	17:4	0:0	2	ps_piece_shape
op	17:18	0:0	2	->
water	17:20	0:0	2	ps_piece_shape_row
op	17:39	0:0	2	=
call	17:41	17:86	2	malloc
arg	17:49	17:86	3	sizeof(piece_shape_row_t)*i_nb_y
op	17:49	0:0	4	sizeof
water	17:55	0:0	4	(
water	17:57	0:0	4	piece_shape_row_t
water	17:75	0:0	4	)
op	17:77	0:0	4	*
water	17:79	0:0	4	i_nb_y
water	17:87	0:0	2	;
if	18:4	19:25	2	(! ps_piece_shape -> ps_piece_shape_row)
cond	18:8	18:25	3	! ps_piece_shape -> ps_piece_shape_row
op	18:8	0:0	4	!
water	18:9	0:0	4	ps_piece_shape
op	18:23	0:0	4	->
water	18:25	0:0	4	ps_piece_shape_row
stmts	19:8	19:25	3	
return	19:8	19:25	4	VLC_ENOMEM
water	19:15	0:0	5	VLC_ENOMEM
for	20:4	54:4	2	( int32_t i_y = i_min_y ;i_y < i_nb_y + i_min_y;i_y ++)
forinit	0:0	20:30	3	 int32_t i_y = i_min_y ;
decl	20:9	20:30	4	int32_t	i_y
op	20:21	0:0	4	=
water	20:23	0:0	4	i_min_y
cond	20:32	20:47	3	i_y < i_nb_y + i_min_y
water	20:32	0:0	4	i_y
op	20:36	0:0	4	<
water	20:38	0:0	4	i_nb_y
op	20:45	0:0	4	+
water	20:47	0:0	4	i_min_y
forexpr	20:56	20:59	3	i_y ++
water	20:56	0:0	4	i_y
op	20:59	0:0	4	++
stmts	20:63	54:4	3	
water	20:63	0:0	4	{
decl	21:8	21:26	4	uint8_t	i_sect
op	21:23	0:0	4	=
water	21:25	0:0	4	0
decl	22:8	22:34	4	int32_t	pi_sects[MAX_SECT]
decl	23:8	23:37	4	int32_t	i_row
op	23:22	0:0	4	=
water	23:24	0:0	4	i_y
op	23:28	0:0	4	-
water	23:30	0:0	4	i_min_y
switch	25:8	38:8	4	(i_border)
cond	25:16	25:16	5	i_border
water	25:16	0:0	6	i_border
stmts	26:8	38:8	5	
water	26:8	0:0	6	{
label	27:10	27:31	6	case puzzle_SHAPE_TOP :
label	28:10	28:31	6	case puzzle_SHAPE_BTM :
water	29:12	0:0	6	pi_sects
op	29:20	0:0	6	[
water	29:21	0:0	6	i_sect
op	29:27	0:0	6	]
op	29:29	0:0	6	=
call	29:31	29:84	6	puzzle_diagonal_limit
arg	29:54	29:62	7	p_filter
water	29:54	0:0	8	p_filter
arg	29:64	29:67	7	i_y
water	29:64	0:0	8	i_y
arg	29:69	29:74	7	false
water	29:69	0:0	8	false
arg	29:76	29:84	7	i_plane
water	29:76	0:0	8	i_plane
op	29:86	0:0	6	-
water	29:88	0:0	6	1
op	30:28	0:0	6	-
water	30:30	0:0	6	(
call	30:31	30:83	6	puzzle_diagonal_limit
arg	30:54	30:62	7	p_filter
water	30:54	0:0	8	p_filter
arg	30:64	30:67	7	i_y
water	30:64	0:0	8	i_y
arg	30:69	30:73	7	true
water	30:69	0:0	8	true
arg	30:75	30:83	7	i_plane
water	30:75	0:0	8	i_plane
op	30:85	0:0	6	-
water	30:87	0:0	6	1
water	30:88	0:0	6	)
water	30:89	0:0	6	;
break	31:12	31:17	6	
label	32:10	32:33	6	case puzzle_SHAPE_RIGHT :
water	33:12	0:0	6	pi_sects
op	33:20	0:0	6	[
water	33:21	0:0	6	i_sect
op	33:27	0:0	6	]
op	33:29	0:0	6	=
water	33:31	0:0	6	i_width
op	33:39	0:0	6	-
call	33:41	33:94	6	puzzle_diagonal_limit
arg	33:64	33:72	7	p_filter
water	33:64	0:0	8	p_filter
arg	33:74	33:77	7	i_y
water	33:74	0:0	8	i_y
arg	33:79	33:84	7	false
water	33:79	0:0	8	false
arg	33:86	33:94	7	i_plane
water	33:86	0:0	8	i_plane
water	33:95	0:0	6	;
break	34:12	34:17	6	
label	35:10	35:32	6	case puzzle_SHAPE_LEFT :
label	36:10	36:17	6	default :
water	37:12	0:0	6	pi_sects
op	37:20	0:0	6	[
water	37:21	0:0	6	i_sect
op	37:27	0:0	6	]
op	37:29	0:0	6	=
call	37:31	37:83	6	puzzle_diagonal_limit
arg	37:54	37:62	7	p_filter
water	37:54	0:0	8	p_filter
arg	37:64	37:67	7	i_y
water	37:64	0:0	8	i_y
arg	37:69	37:73	7	true
water	37:69	0:0	8	true
arg	37:75	37:83	7	i_plane
water	37:75	0:0	8	i_plane
water	37:84	0:0	6	;
water	38:8	0:0	6	}
water	39:8	0:0	4	i_sect
op	39:14	0:0	4	++
water	39:16	0:0	4	;
water	41:8	0:0	4	ps_piece_shape
op	41:22	0:0	4	->
water	41:24	0:0	4	ps_piece_shape_row
op	41:42	0:0	4	[
water	41:43	0:0	4	i_row
op	41:48	0:0	4	]
op	41:49	0:0	4	.
water	41:50	0:0	4	i_section_nbr
op	41:64	0:0	4	=
water	41:66	0:0	4	i_sect
water	41:72	0:0	4	;
water	42:8	0:0	4	ps_piece_shape
op	42:22	0:0	4	->
water	42:24	0:0	4	ps_piece_shape_row
op	42:42	0:0	4	[
water	42:43	0:0	4	i_row
op	42:48	0:0	4	]
op	42:49	0:0	4	.
water	42:50	0:0	4	ps_row_section
op	42:65	0:0	4	=
call	42:67	42:106	4	malloc
arg	42:76	42:106	5	sizeof(row_section_t)*i_sect
op	42:76	0:0	6	sizeof
water	42:82	0:0	6	(
water	42:83	0:0	6	row_section_t
water	42:96	0:0	6	)
op	42:98	0:0	6	*
water	42:100	0:0	6	i_sect
water	42:107	0:0	4	;
if	43:8	49:8	4	(! ps_piece_shape -> ps_piece_shape_row [ i_row ] . ps_row_section)
cond	43:12	43:55	5	! ps_piece_shape -> ps_piece_shape_row [ i_row ] . ps_row_section
op	43:12	0:0	6	!
water	43:13	0:0	6	ps_piece_shape
op	43:27	0:0	6	->
water	43:29	0:0	6	ps_piece_shape_row
op	43:47	0:0	6	[
water	43:48	0:0	6	i_row
op	43:53	0:0	6	]
op	43:54	0:0	6	.
water	43:55	0:0	6	ps_row_section
stmts	43:71	49:8	5	
water	43:71	0:0	6	{
for	44:12	45:74	6	( uint8_t i = 0 ;i < i_row;i ++)
forinit	0:0	44:28	7	 uint8_t i = 0 ;
decl	44:17	44:28	8	uint8_t	i
op	44:26	0:0	8	=
water	44:27	0:0	8	0
cond	44:30	44:32	7	i < i_row
water	44:30	0:0	8	i
op	44:31	0:0	8	<
water	44:32	0:0	8	i_row
forexpr	44:38	44:39	7	i ++
water	44:38	0:0	8	i
op	44:39	0:0	8	++
stmts	45:16	45:74	7	
call	45:16	45:73	8	free
arg	45:21	45:73	9	ps_piece_shape->ps_piece_shape_row[i].ps_row_section
water	45:21	0:0	10	ps_piece_shape
op	45:35	0:0	10	->
water	45:37	0:0	10	ps_piece_shape_row
op	45:55	0:0	10	[
water	45:56	0:0	10	i
op	45:57	0:0	10	]
op	45:58	0:0	10	.
water	45:59	0:0	10	ps_row_section
water	45:74	0:0	8	;
call	46:12	46:51	6	free
arg	46:17	46:51	7	ps_piece_shape->ps_piece_shape_row
water	46:17	0:0	8	ps_piece_shape
op	46:31	0:0	8	->
water	46:33	0:0	8	ps_piece_shape_row
water	46:52	0:0	6	;
water	47:12	0:0	6	ps_piece_shape
op	47:26	0:0	6	->
water	47:28	0:0	6	ps_piece_shape_row
op	47:47	0:0	6	=
water	47:49	0:0	6	NULL
water	47:53	0:0	6	;
return	48:12	48:29	6	VLC_ENOMEM
water	48:19	0:0	7	VLC_ENOMEM
water	49:8	0:0	6	}
for	50:8	53:8	4	( uint8_t i = 0 ;i < i_sect;i ++)
forinit	0:0	50:24	5	 uint8_t i = 0 ;
decl	50:13	50:24	6	uint8_t	i
op	50:22	0:0	6	=
water	50:23	0:0	6	0
cond	50:26	50:30	5	i < i_sect
water	50:26	0:0	6	i
op	50:28	0:0	6	<
water	50:30	0:0	6	i_sect
forexpr	50:38	50:39	5	i ++
water	50:38	0:0	6	i
op	50:39	0:0	6	++
stmts	50:43	53:8	5	
water	50:43	0:0	6	{
water	51:12	0:0	6	ps_piece_shape
op	51:26	0:0	6	->
water	51:28	0:0	6	ps_piece_shape_row
op	51:46	0:0	6	[
water	51:47	0:0	6	i_row
op	51:52	0:0	6	]
op	51:53	0:0	6	.
water	51:54	0:0	6	ps_row_section
op	51:68	0:0	6	[
water	51:69	0:0	6	i
op	51:70	0:0	6	]
op	51:71	0:0	6	.
water	51:72	0:0	6	i_type
op	51:79	0:0	6	=
water	51:81	0:0	6	i
op	51:83	0:0	6	%
water	51:85	0:0	6	2
water	51:86	0:0	6	;
water	52:12	0:0	6	ps_piece_shape
op	52:26	0:0	6	->
water	52:28	0:0	6	ps_piece_shape_row
op	52:46	0:0	6	[
water	52:47	0:0	6	i_row
op	52:52	0:0	6	]
op	52:53	0:0	6	.
water	52:54	0:0	6	ps_row_section
op	52:68	0:0	6	[
water	52:69	0:0	6	i
op	52:70	0:0	6	]
op	52:71	0:0	6	.
water	52:72	0:0	6	i_width
op	52:80	0:0	6	=
water	52:82	0:0	6	pi_sects
op	52:90	0:0	6	[
water	52:91	0:0	6	i
op	52:92	0:0	6	]
water	52:93	0:0	6	;
water	53:8	0:0	6	}
water	54:4	0:0	4	}
return	55:4	55:22	2	VLC_SUCCESS
water	55:11	0:0	3	VLC_SUCCESS

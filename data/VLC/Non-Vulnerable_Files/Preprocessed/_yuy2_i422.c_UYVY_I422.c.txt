func	2:0	37:0	0	static void	UYVY_I422
params	2:21	0:0	1	
param	2:23	2:41	2	filter_t *	p_filter
param	2:43	2:62	2	picture_t *	p_source
param	3:43	3:61	2	picture_t *	p_dest
stmnts	0:0	36:4	1	
decl	5:4	5:43	2	uint8_t	*p_line
op	5:20	0:0	2	=
water	5:22	0:0	2	p_source
op	5:30	0:0	2	->
water	5:32	0:0	2	p
op	5:33	0:0	2	->
water	5:35	0:0	2	p_pixels
decl	6:4	6:35	2	uint8_t	*p_y
op	6:17	0:0	2	=
water	6:19	0:0	2	p_dest
op	6:25	0:0	2	->
water	6:27	0:0	2	Y_PIXELS
decl	7:4	7:35	2	uint8_t	*p_u
op	7:17	0:0	2	=
water	7:19	0:0	2	p_dest
op	7:25	0:0	2	->
water	7:27	0:0	2	U_PIXELS
decl	8:4	8:35	2	uint8_t	*p_v
op	8:17	0:0	2	=
water	8:19	0:0	2	p_dest
op	8:25	0:0	2	->
water	8:27	0:0	2	V_PIXELS
decl	9:4	9:16	2	int	i_x
water	9:11	0:0	2	,
decl	9:4	9:16	2	int	i_y
decl	10:4	11:63	2	const int	i_dest_margin
op	10:28	0:0	2	=
water	10:30	0:0	2	p_dest
op	10:36	0:0	2	->
water	10:38	0:0	2	p
op	10:39	0:0	2	[
water	10:40	0:0	2	0
op	10:41	0:0	2	]
op	10:42	0:0	2	.
water	10:43	0:0	2	i_pitch
op	11:33	0:0	2	-
water	11:35	0:0	2	p_dest
op	11:41	0:0	2	->
water	11:43	0:0	2	p
op	11:44	0:0	2	[
water	11:45	0:0	2	0
op	11:46	0:0	2	]
op	11:47	0:0	2	.
water	11:48	0:0	2	i_visible_pitch
decl	12:4	13:63	2	const int	i_dest_margin_c
op	12:30	0:0	2	=
water	12:32	0:0	2	p_dest
op	12:38	0:0	2	->
water	12:40	0:0	2	p
op	12:41	0:0	2	[
water	12:42	0:0	2	1
op	12:43	0:0	2	]
op	12:44	0:0	2	.
water	12:45	0:0	2	i_pitch
op	13:33	0:0	2	-
water	13:35	0:0	2	p_dest
op	13:41	0:0	2	->
water	13:43	0:0	2	p
op	13:44	0:0	2	[
water	13:45	0:0	2	1
op	13:46	0:0	2	]
op	13:47	0:0	2	.
water	13:48	0:0	2	i_visible_pitch
decl	14:4	15:61	2	const int	i_source_margin
op	14:30	0:0	2	=
water	14:32	0:0	2	p_source
op	14:40	0:0	2	->
water	14:42	0:0	2	p
op	14:43	0:0	2	->
water	14:45	0:0	2	i_pitch
op	15:31	0:0	2	-
water	15:33	0:0	2	p_source
op	15:41	0:0	2	->
water	15:43	0:0	2	p
op	15:44	0:0	2	->
water	15:46	0:0	2	i_visible_pitch
for	16:4	36:4	2	(i_y = p_filter -> fmt_out . video . i_height ;i_y --;)
forinit	16:9	16:48	3	i_y = p_filter -> fmt_out . video . i_height ;
water	16:9	0:0	4	i_y
op	16:13	0:0	4	=
water	16:15	0:0	4	p_filter
op	16:23	0:0	4	->
water	16:25	0:0	4	fmt_out
op	16:32	0:0	4	.
water	16:33	0:0	4	video
op	16:38	0:0	4	.
water	16:39	0:0	4	i_height
water	16:48	0:0	4	;
cond	16:50	16:53	3	i_y --
water	16:50	0:0	4	i_y
op	16:53	0:0	4	--
forexpr	0:0	0:0	3	
stmts	17:4	36:4	3	
water	17:4	0:0	4	{
for	18:8	27:8	4	(i_x = p_filter -> fmt_out . video . i_width / 8 ;i_x --;)
forinit	18:13	18:55	5	i_x = p_filter -> fmt_out . video . i_width / 8 ;
water	18:13	0:0	6	i_x
op	18:17	0:0	6	=
water	18:19	0:0	6	p_filter
op	18:27	0:0	6	->
water	18:29	0:0	6	fmt_out
op	18:36	0:0	6	.
water	18:37	0:0	6	video
op	18:42	0:0	6	.
water	18:43	0:0	6	i_width
op	18:51	0:0	6	/
water	18:53	0:0	6	8
water	18:55	0:0	6	;
cond	18:57	18:60	5	i_x --
water	18:57	0:0	6	i_x
op	18:60	0:0	6	--
forexpr	0:0	0:0	5	
stmts	19:8	27:8	5	
water	19:8	0:0	6	{
op	21:12	0:0	6	*
water	21:13	0:0	6	p_u
op	21:16	0:0	6	++
op	21:19	0:0	6	=
op	21:21	0:0	6	*
water	21:22	0:0	6	p_line
op	21:28	0:0	6	++
water	21:30	0:0	6	;
op	21:32	0:0	6	*
water	21:33	0:0	6	p_y
op	21:36	0:0	6	++
op	21:39	0:0	6	=
op	21:41	0:0	6	*
water	21:42	0:0	6	p_line
op	21:48	0:0	6	++
water	21:50	0:0	6	;
op	22:12	0:0	6	*
water	22:13	0:0	6	p_v
op	22:16	0:0	6	++
op	22:19	0:0	6	=
op	22:21	0:0	6	*
water	22:22	0:0	6	p_line
op	22:28	0:0	6	++
water	22:30	0:0	6	;
op	22:32	0:0	6	*
water	22:33	0:0	6	p_y
op	22:36	0:0	6	++
op	22:39	0:0	6	=
op	22:41	0:0	6	*
water	22:42	0:0	6	p_line
op	22:48	0:0	6	++
call	23:12	23:49	6	C_UYVY_YUV422
arg	23:27	23:33	7	p_line
water	23:27	0:0	8	p_line
arg	23:35	23:38	7	p_y
water	23:35	0:0	8	p_y
arg	23:40	23:43	7	p_u
water	23:40	0:0	8	p_u
arg	23:45	23:49	7	p_v
water	23:45	0:0	8	p_v
water	23:50	0:0	6	;
call	24:12	24:49	6	C_UYVY_YUV422
arg	24:27	24:33	7	p_line
water	24:27	0:0	8	p_line
arg	24:35	24:38	7	p_y
water	24:35	0:0	8	p_y
arg	24:40	24:43	7	p_u
water	24:40	0:0	8	p_u
arg	24:45	24:49	7	p_v
water	24:45	0:0	8	p_v
water	24:50	0:0	6	;
call	25:12	25:49	6	C_UYVY_YUV422
arg	25:27	25:33	7	p_line
water	25:27	0:0	8	p_line
arg	25:35	25:38	7	p_y
water	25:35	0:0	8	p_y
arg	25:40	25:43	7	p_u
water	25:40	0:0	8	p_u
arg	25:45	25:49	7	p_v
water	25:45	0:0	8	p_v
water	25:50	0:0	6	;
call	26:12	26:49	6	C_UYVY_YUV422
arg	26:27	26:33	7	p_line
water	26:27	0:0	8	p_line
arg	26:35	26:38	7	p_y
water	26:35	0:0	8	p_y
arg	26:40	26:43	7	p_u
water	26:40	0:0	8	p_u
arg	26:45	26:49	7	p_v
water	26:45	0:0	8	p_v
water	26:50	0:0	6	;
water	27:8	0:0	6	}
for	28:8	31:8	4	(i_x = ( p_filter -> fmt_out . video . i_width % 8 ) / 2 ;i_x --;)
forinit	28:13	28:62	5	i_x = ( p_filter -> fmt_out . video . i_width % 8 ) / 2 ;
water	28:13	0:0	6	i_x
op	28:17	0:0	6	=
water	28:19	0:0	6	(
water	28:21	0:0	6	p_filter
op	28:29	0:0	6	->
water	28:31	0:0	6	fmt_out
op	28:38	0:0	6	.
water	28:39	0:0	6	video
op	28:44	0:0	6	.
water	28:45	0:0	6	i_width
op	28:53	0:0	6	%
water	28:55	0:0	6	8
water	28:57	0:0	6	)
op	28:59	0:0	6	/
water	28:61	0:0	6	2
water	28:62	0:0	6	;
cond	28:64	28:67	5	i_x --
water	28:64	0:0	6	i_x
op	28:67	0:0	6	--
forexpr	0:0	0:0	5	
stmts	29:8	31:8	5	
water	29:8	0:0	6	{
call	30:12	30:49	6	C_UYVY_YUV422
arg	30:27	30:33	7	p_line
water	30:27	0:0	8	p_line
arg	30:35	30:38	7	p_y
water	30:35	0:0	8	p_y
arg	30:40	30:43	7	p_u
water	30:40	0:0	8	p_u
arg	30:45	30:49	7	p_v
water	30:45	0:0	8	p_v
water	30:50	0:0	6	;
water	31:8	0:0	6	}
water	32:8	0:0	4	p_line
op	32:15	0:0	4	+=
water	32:18	0:0	4	i_source_margin
water	32:33	0:0	4	;
water	33:8	0:0	4	p_y
op	33:12	0:0	4	+=
water	33:15	0:0	4	i_dest_margin
water	33:28	0:0	4	;
water	34:8	0:0	4	p_u
op	34:12	0:0	4	+=
water	34:15	0:0	4	i_dest_margin_c
water	34:30	0:0	4	;
water	35:8	0:0	4	p_v
op	35:12	0:0	4	+=
water	35:15	0:0	4	i_dest_margin_c
water	35:30	0:0	4	;
water	36:4	0:0	4	}

func	2:0	97:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	96:23	1	
decl	4:4	4:46	2	access_t	*p_access
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	access_t
op	4:38	0:0	2	*
water	4:39	0:0	2	)
water	4:40	0:0	2	p_this
decl	5:4	5:23	2	access_sys_t	*p_sys
decl	6:4	6:24	2	vcddev_t	*vcddev
decl	7:4	7:26	2	char	*psz_name
if	8:4	16:4	2	(! p_access -> psz_filepath || ! * p_access -> psz_filepath)
cond	8:8	8:47	3	! p_access -> psz_filepath || ! * p_access -> psz_filepath
op	8:8	0:0	4	!
water	8:9	0:0	4	p_access
op	8:17	0:0	4	->
water	8:19	0:0	4	psz_filepath
op	8:32	0:0	4	||
op	8:35	0:0	4	!
op	8:36	0:0	4	*
water	8:37	0:0	4	p_access
op	8:45	0:0	4	->
water	8:47	0:0	4	psz_filepath
stmts	9:4	16:4	3	
water	9:4	0:0	4	{
if	11:8	12:31	4	(! p_access -> psz_access || ! * p_access -> psz_access)
cond	11:12	11:49	5	! p_access -> psz_access || ! * p_access -> psz_access
op	11:12	0:0	6	!
water	11:13	0:0	6	p_access
op	11:21	0:0	6	->
water	11:23	0:0	6	psz_access
op	11:34	0:0	6	||
op	11:37	0:0	6	!
op	11:38	0:0	6	*
water	11:39	0:0	6	p_access
op	11:47	0:0	6	->
water	11:49	0:0	6	psz_access
stmts	12:12	12:31	5	
return	12:12	12:31	6	VLC_EGENERIC
water	12:19	0:0	7	VLC_EGENERIC
water	13:8	0:0	4	psz_name
op	13:17	0:0	4	=
call	13:19	13:57	4	var_InheritString
arg	13:38	13:44	5	p_this
water	13:38	0:0	6	p_this
arg	13:46	13:57	5	"cd-audio"
water	13:46	0:0	6	"cd-audio"
water	13:58	0:0	4	;
if	14:8	15:31	4	(! psz_name)
cond	14:12	14:13	5	! psz_name
op	14:12	0:0	6	!
water	14:13	0:0	6	psz_name
stmts	15:12	15:31	5	
return	15:12	15:31	6	VLC_EGENERIC
water	15:19	0:0	7	VLC_EGENERIC
water	16:4	0:0	4	}
else	17:4	17:57	2
stmts	17:9	17:57	3	
water	17:9	0:0	4	psz_name
op	17:18	0:0	4	=
call	17:20	17:56	4	ToLocaleDup
arg	17:33	17:56	5	p_access->psz_filepath
water	17:33	0:0	6	p_access
op	17:41	0:0	6	->
water	17:43	0:0	6	psz_filepath
water	17:57	0:0	4	;
if	19:4	20:71	2	(psz_name [ 0 ] && psz_name [ 1 ] == ':' && psz_name [ 2 ] == '\\' && psz_name [ 3 ] == '\0')
cond	19:8	20:46	3	psz_name [ 0 ] && psz_name [ 1 ] == ':' && psz_name [ 2 ] == '\\' && psz_name [ 3 ] == '\0'
water	19:8	0:0	4	psz_name
op	19:16	0:0	4	[
water	19:17	0:0	4	0
op	19:18	0:0	4	]
op	19:20	0:0	4	&&
water	19:23	0:0	4	psz_name
op	19:31	0:0	4	[
water	19:32	0:0	4	1
op	19:33	0:0	4	]
op	19:35	0:0	4	==
water	19:38	0:0	4	':'
op	19:42	0:0	4	&&
water	20:8	0:0	4	psz_name
op	20:16	0:0	4	[
water	20:17	0:0	4	2
op	20:18	0:0	4	]
op	20:20	0:0	4	==
water	20:23	0:0	4	'\\'
op	20:28	0:0	4	&&
water	20:31	0:0	4	psz_name
op	20:39	0:0	4	[
water	20:40	0:0	4	3
op	20:41	0:0	4	]
op	20:43	0:0	4	==
water	20:46	0:0	4	'\0'
stmts	20:53	20:71	3	
water	20:53	0:0	4	psz_name
op	20:61	0:0	4	[
water	20:62	0:0	4	2
op	20:63	0:0	4	]
op	20:65	0:0	4	=
water	20:67	0:0	4	'\0'
water	20:71	0:0	4	;
water	23:4	0:0	2	STANDARD_BLOCK_ACCESS_INIT
water	25:4	0:0	2	if
water	25:6	0:0	2	(
water	25:8	0:0	2	(
water	25:9	0:0	2	vcddev
op	25:16	0:0	2	=
call	25:18	25:61	2	ioctl_Open
arg	25:30	25:50	3	VLC_OBJECT(p_access)
call	25:30	25:49	4	VLC_OBJECT
arg	25:41	25:49	5	p_access
water	25:41	0:0	6	p_access
arg	25:52	25:61	3	psz_name
water	25:52	0:0	4	psz_name
water	25:63	0:0	2	)
op	25:65	0:0	2	==
water	25:68	0:0	2	NULL
water	25:73	0:0	2	)
water	26:4	0:0	2	{
call	27:8	27:58	2	msg_Warn
arg	27:18	27:26	3	p_access
water	27:18	0:0	4	p_access
arg	27:28	27:47	3	"could not open %s"
water	27:28	0:0	4	"could not open %s"
arg	27:49	27:58	3	psz_name
water	27:49	0:0	4	psz_name
water	27:59	0:0	2	;
call	28:8	28:23	2	free
arg	28:14	28:23	3	psz_name
water	28:14	0:0	4	psz_name
water	28:24	0:0	2	;
call	29:8	29:20	2	free
arg	29:14	29:20	3	p_sys
water	29:14	0:0	4	p_sys
water	29:21	0:0	2	;
water	30:8	0:0	2	return
water	30:15	0:0	2	VLC_EGENERIC
water	30:27	0:0	2	;
water	31:4	0:0	2	}
call	32:4	32:19	2	free
arg	32:10	32:19	3	psz_name
water	32:10	0:0	4	psz_name
water	32:20	0:0	2	;
water	33:4	0:0	2	p_sys
op	33:9	0:0	2	->
water	33:11	0:0	2	vcddev
op	33:18	0:0	2	=
water	33:20	0:0	2	vcddev
water	33:26	0:0	2	;
water	35:4	0:0	2	p_sys
op	35:9	0:0	2	->
water	35:11	0:0	2	i_track
op	35:19	0:0	2	=
call	35:21	35:64	2	var_InheritInteger
arg	35:41	35:49	3	p_access
water	35:41	0:0	4	p_access
arg	35:51	35:64	3	"cdda-track"
water	35:51	0:0	4	"cdda-track"
op	35:66	0:0	2	-
water	35:68	0:0	2	1
water	35:69	0:0	2	;
if	36:4	50:4	2	(p_sys -> i_track < 0)
cond	36:8	36:25	3	p_sys -> i_track < 0
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	i_track
op	36:23	0:0	4	<
water	36:25	0:0	4	0
stmts	37:4	50:4	3	
water	37:4	0:0	4	{
decl	39:8	39:67	4	input_thread_t	*p_input
op	39:32	0:0	4	=
call	39:34	39:66	5	access_GetParentInput
arg	39:57	39:66	6	p_access
water	39:57	0:0	7	p_access
decl	40:8	40:22	4	int	i_ret
op	40:18	0:0	4	=
op	40:20	0:0	4	-
water	40:21	0:0	4	1
if	41:8	47:8	4	(p_input)
cond	41:12	41:12	5	p_input
water	41:12	0:0	6	p_input
stmts	42:8	47:8	5	
water	42:8	0:0	6	{
decl	43:12	43:62	6	input_item_t	*p_current
op	43:36	0:0	6	=
call	43:38	43:61	7	input_GetItem
arg	43:53	43:61	8	p_input
water	43:53	0:0	9	p_input
if	44:12	45:56	6	(p_current)
cond	44:16	44:16	7	p_current
water	44:16	0:0	8	p_current
stmts	45:16	45:56	7	
water	45:16	0:0	8	i_ret
op	45:22	0:0	8	=
call	45:24	45:55	8	GetTracks
arg	45:35	45:43	9	p_access
water	45:35	0:0	10	p_access
arg	45:45	45:55	9	p_current
water	45:45	0:0	10	p_current
water	45:56	0:0	8	;
call	46:12	46:40	6	vlc_object_release
arg	46:32	46:40	7	p_input
water	46:32	0:0	8	p_input
water	46:41	0:0	6	;
water	47:8	0:0	6	}
if	48:8	49:22	4	(i_ret < 0)
cond	48:12	48:20	5	i_ret < 0
water	48:12	0:0	6	i_ret
op	48:18	0:0	6	<
water	48:20	0:0	6	0
stmts	49:12	49:22	5	
goto	49:12	49:22	6	error
water	49:17	0:0	7	error
water	50:4	0:0	4	}
else	51:4	90:4	2
stmts	52:4	90:4	3	
water	52:4	0:0	4	{
call	54:8	54:58	4	memset
arg	54:16	54:34	5	&p_sys->waveheader
op	54:16	0:0	6	&
water	54:17	0:0	6	p_sys
op	54:22	0:0	6	->
water	54:24	0:0	6	waveheader
arg	54:36	54:37	5	0
water	54:36	0:0	6	0
arg	54:39	54:58	5	sizeof(WAVEHEADER)
op	54:39	0:0	6	sizeof
water	54:45	0:0	6	(
water	54:46	0:0	6	WAVEHEADER
water	54:56	0:0	6	)
water	54:59	0:0	4	;
call	55:8	55:45	4	SetWLE
arg	55:16	55:41	5	&p_sys->waveheader.Format
op	55:16	0:0	6	&
water	55:17	0:0	6	p_sys
op	55:22	0:0	6	->
water	55:24	0:0	6	waveheader
op	55:34	0:0	6	.
water	55:35	0:0	6	Format
arg	55:43	55:45	5	1
water	55:43	0:0	6	1
water	55:46	0:0	4	;
call	56:8	56:52	4	SetWLE
arg	56:16	56:48	5	&p_sys->waveheader.BitsPerSample
op	56:16	0:0	6	&
water	56:17	0:0	6	p_sys
op	56:22	0:0	6	->
water	56:24	0:0	6	waveheader
op	56:34	0:0	6	.
water	56:35	0:0	6	BitsPerSample
arg	56:50	56:52	5	16
water	56:50	0:0	6	16
water	56:53	0:0	4	;
water	57:8	0:0	4	p_sys
op	57:13	0:0	4	->
water	57:15	0:0	4	waveheader
op	57:25	0:0	4	.
water	57:26	0:0	4	MainChunkID
op	57:38	0:0	4	=
call	57:40	57:69	4	VLC_FOURCC
arg	57:51	57:54	5	'R'
water	57:51	0:0	6	'R'
arg	57:56	57:59	5	'I'
water	57:56	0:0	6	'I'
arg	57:61	57:64	5	'F'
water	57:61	0:0	6	'F'
arg	57:66	57:69	5	'F'
water	57:66	0:0	6	'F'
water	57:70	0:0	4	;
water	58:8	0:0	4	p_sys
op	58:13	0:0	4	->
water	58:15	0:0	4	waveheader
op	58:25	0:0	4	.
water	58:26	0:0	4	Length
op	58:33	0:0	4	=
water	58:35	0:0	4	0
water	58:36	0:0	4	;
water	59:8	0:0	4	p_sys
op	59:13	0:0	4	->
water	59:15	0:0	4	waveheader
op	59:25	0:0	4	.
water	59:26	0:0	4	ChunkTypeID
op	59:38	0:0	4	=
call	59:40	59:69	4	VLC_FOURCC
arg	59:51	59:54	5	'W'
water	59:51	0:0	6	'W'
arg	59:56	59:59	5	'A'
water	59:56	0:0	6	'A'
arg	59:61	59:64	5	'V'
water	59:61	0:0	6	'V'
arg	59:66	59:69	5	'E'
water	59:66	0:0	6	'E'
water	59:70	0:0	4	;
water	60:8	0:0	4	p_sys
op	60:13	0:0	4	->
water	60:15	0:0	4	waveheader
op	60:25	0:0	4	.
water	60:26	0:0	4	SubChunkID
op	60:37	0:0	4	=
call	60:39	60:68	4	VLC_FOURCC
arg	60:50	60:53	5	'f'
water	60:50	0:0	6	'f'
arg	60:55	60:58	5	'm'
water	60:55	0:0	6	'm'
arg	60:60	60:63	5	't'
water	60:60	0:0	6	't'
arg	60:65	60:68	5	' '
water	60:65	0:0	6	' '
water	60:69	0:0	4	;
call	61:8	61:54	4	SetDWLE
arg	61:17	61:50	5	&p_sys->waveheader.SubChunkLength
op	61:17	0:0	6	&
water	61:18	0:0	6	p_sys
op	61:23	0:0	6	->
water	61:25	0:0	6	waveheader
op	61:35	0:0	6	.
water	61:36	0:0	6	SubChunkLength
arg	61:52	61:54	5	16
water	61:52	0:0	6	16
water	61:55	0:0	4	;
call	62:8	62:43	4	SetWLE
arg	62:16	62:40	5	&p_sys->waveheader.Modus
op	62:16	0:0	6	&
water	62:17	0:0	6	p_sys
op	62:22	0:0	6	->
water	62:24	0:0	6	waveheader
op	62:34	0:0	6	.
water	62:35	0:0	6	Modus
arg	62:42	62:43	5	2
water	62:42	0:0	6	2
water	62:44	0:0	4	;
call	63:8	63:53	4	SetDWLE
arg	63:17	63:46	5	&p_sys->waveheader.SampleFreq
op	63:17	0:0	6	&
water	63:18	0:0	6	p_sys
op	63:23	0:0	6	->
water	63:25	0:0	6	waveheader
op	63:35	0:0	6	.
water	63:36	0:0	6	SampleFreq
arg	63:48	63:53	5	44100
water	63:48	0:0	6	44100
water	63:54	0:0	4	;
call	64:8	65:59	4	SetWLE
arg	64:16	64:49	5	&p_sys->waveheader.BytesPerSample
op	64:16	0:0	6	&
water	64:17	0:0	6	p_sys
op	64:22	0:0	6	->
water	64:24	0:0	6	waveheader
op	64:34	0:0	6	.
water	64:35	0:0	6	BytesPerSample
arg	65:20	65:59	5	2*16/8
water	65:20	0:0	6	2
op	65:32	0:0	6	*
water	65:34	0:0	6	16
op	65:55	0:0	6	/
water	65:57	0:0	6	8
water	65:60	0:0	4	;
call	66:8	67:69	4	SetDWLE
arg	66:17	66:47	5	&p_sys->waveheader.BytesPerSec
op	66:17	0:0	6	&
water	66:18	0:0	6	p_sys
op	66:23	0:0	6	->
water	66:25	0:0	6	waveheader
op	66:35	0:0	6	.
water	66:36	0:0	6	BytesPerSec
arg	67:20	67:69	5	2*16/8*44100
water	67:20	0:0	6	2
op	67:21	0:0	6	*
water	67:22	0:0	6	16
op	67:24	0:0	6	/
water	67:25	0:0	6	8
op	67:46	0:0	6	*
water	67:48	0:0	6	44100
water	67:70	0:0	4	;
water	68:8	0:0	4	p_sys
op	68:13	0:0	4	->
water	68:15	0:0	4	waveheader
op	68:25	0:0	4	.
water	68:26	0:0	4	DataChunkID
op	68:38	0:0	4	=
call	68:40	68:69	4	VLC_FOURCC
arg	68:51	68:54	5	'd'
water	68:51	0:0	6	'd'
arg	68:56	68:59	5	'a'
water	68:56	0:0	6	'a'
arg	68:61	68:64	5	't'
water	68:61	0:0	6	't'
arg	68:66	68:69	5	'a'
water	68:66	0:0	6	'a'
water	68:70	0:0	4	;
water	69:8	0:0	4	p_sys
op	69:13	0:0	4	->
water	69:15	0:0	4	waveheader
op	69:25	0:0	4	.
water	69:26	0:0	4	DataLength
op	69:37	0:0	4	=
water	69:39	0:0	4	0
water	69:40	0:0	4	;
water	70:8	0:0	4	p_sys
op	70:13	0:0	4	->
water	70:15	0:0	4	i_first_sector
op	70:30	0:0	4	=
call	70:32	71:72	4	var_InheritInteger
arg	70:52	70:60	5	p_access
water	70:52	0:0	6	p_access
arg	71:52	71:72	5	"cdda-first-sector"
water	71:52	0:0	6	"cdda-first-sector"
water	71:73	0:0	4	;
water	72:8	0:0	4	p_sys
op	72:13	0:0	4	->
water	72:15	0:0	4	i_last_sector
op	72:30	0:0	4	=
call	72:32	73:71	4	var_InheritInteger
arg	72:52	72:60	5	p_access
water	72:52	0:0	6	p_access
arg	73:52	73:71	5	"cdda-last-sector"
water	73:52	0:0	6	"cdda-last-sector"
water	73:72	0:0	4	;
if	75:8	86:8	4	(p_sys -> i_first_sector < 0 || p_sys -> i_last_sector < 0)
cond	75:12	75:64	5	p_sys -> i_first_sector < 0 || p_sys -> i_last_sector < 0
water	75:12	0:0	6	p_sys
op	75:17	0:0	6	->
water	75:19	0:0	6	i_first_sector
op	75:34	0:0	6	<
water	75:36	0:0	6	0
op	75:38	0:0	6	||
water	75:41	0:0	6	p_sys
op	75:46	0:0	6	->
water	75:48	0:0	6	i_last_sector
op	75:62	0:0	6	<
water	75:64	0:0	6	0
stmts	76:8	86:8	5	
water	76:8	0:0	6	{
decl	77:12	78:87	6	const int	i_titles
op	77:31	0:0	6	=
call	77:33	78:86	7	ioctl_GetTracksMap
arg	77:53	77:73	8	VLC_OBJECT(p_access)
call	77:53	77:72	9	VLC_OBJECT
arg	77:64	77:72	10	p_access
water	77:64	0:0	11	p_access
arg	78:53	78:66	8	p_sys->vcddev
water	78:53	0:0	9	p_sys
op	78:58	0:0	9	->
water	78:60	0:0	9	vcddev
arg	78:68	78:86	8	&p_sys->p_sectors
op	78:68	0:0	9	&
water	78:69	0:0	9	p_sys
op	78:74	0:0	9	->
water	78:76	0:0	9	p_sectors
if	79:12	83:12	6	(p_sys -> i_track >= i_titles)
cond	79:16	79:34	7	p_sys -> i_track >= i_titles
water	79:16	0:0	8	p_sys
op	79:21	0:0	8	->
water	79:23	0:0	8	i_track
op	79:31	0:0	8	>=
water	79:34	0:0	8	i_titles
stmts	80:12	83:12	7	
water	80:12	0:0	8	{
call	81:16	81:58	8	msg_Err
arg	81:25	81:33	9	p_access
water	81:25	0:0	10	p_access
arg	81:35	81:58	9	"invalid track number"
water	81:35	0:0	10	"invalid track number"
water	81:59	0:0	8	;
goto	82:16	82:26	8	error
water	82:21	0:0	9	error
water	83:12	0:0	8	}
water	84:12	0:0	6	p_sys
op	84:17	0:0	6	->
water	84:19	0:0	6	i_first_sector
op	84:34	0:0	6	=
water	84:36	0:0	6	p_sys
op	84:41	0:0	6	->
water	84:43	0:0	6	p_sectors
op	84:52	0:0	6	[
water	84:53	0:0	6	p_sys
op	84:58	0:0	6	->
water	84:60	0:0	6	i_track
op	84:67	0:0	6	]
water	84:68	0:0	6	;
water	85:12	0:0	6	p_sys
op	85:17	0:0	6	->
water	85:19	0:0	6	i_last_sector
op	85:33	0:0	6	=
water	85:35	0:0	6	p_sys
op	85:40	0:0	6	->
water	85:42	0:0	6	p_sectors
op	85:51	0:0	6	[
water	85:52	0:0	6	p_sys
op	85:57	0:0	6	->
water	85:59	0:0	6	i_track
op	85:66	0:0	6	+
water	85:67	0:0	6	1
op	85:68	0:0	6	]
water	85:69	0:0	6	;
water	86:8	0:0	6	}
water	87:8	0:0	4	p_sys
op	87:13	0:0	4	->
water	87:15	0:0	4	i_sector
op	87:24	0:0	4	=
water	87:26	0:0	4	p_sys
op	87:31	0:0	4	->
water	87:33	0:0	4	i_first_sector
water	87:47	0:0	4	;
water	88:8	0:0	4	p_sys
op	88:13	0:0	4	->
water	88:15	0:0	4	size
op	88:20	0:0	4	=
water	88:22	0:0	4	(
water	88:23	0:0	4	p_sys
op	88:28	0:0	4	->
water	88:30	0:0	4	i_last_sector
op	88:44	0:0	4	-
water	88:46	0:0	4	p_sys
op	88:51	0:0	4	->
water	88:53	0:0	4	i_first_sector
water	88:67	0:0	4	)
op	89:37	0:0	4	*
water	89:39	0:0	4	(
water	89:40	0:0	4	int64_t
water	89:47	0:0	4	)
water	89:48	0:0	4	CDDA_DATA_SIZE
water	89:62	0:0	4	;
water	90:4	0:0	4	}
return	91:4	91:22	2	VLC_SUCCESS
water	91:11	0:0	3	VLC_SUCCESS
label	92:0	92:5	2	error :
call	93:4	93:27	2	free
arg	93:10	93:27	3	p_sys->p_sectors
water	93:10	0:0	4	p_sys
op	93:15	0:0	4	->
water	93:17	0:0	4	p_sectors
water	93:28	0:0	2	;
call	94:4	94:53	2	ioctl_Close
arg	94:17	94:37	3	VLC_OBJECT(p_access)
call	94:17	94:36	4	VLC_OBJECT
arg	94:28	94:36	5	p_access
water	94:28	0:0	6	p_access
arg	94:39	94:53	3	p_sys->vcddev
water	94:39	0:0	4	p_sys
op	94:44	0:0	4	->
water	94:46	0:0	4	vcddev
water	94:54	0:0	2	;
call	95:4	95:16	2	free
arg	95:10	95:16	3	p_sys
water	95:10	0:0	4	p_sys
water	95:17	0:0	2	;
return	96:4	96:23	2	VLC_EGENERIC
water	96:11	0:0	3	VLC_EGENERIC

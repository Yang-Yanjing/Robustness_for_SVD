func	2:0	129:0	0	demux_t *	demux_New
params	2:18	0:0	1	
param	2:20	2:39	2	vlc_object_t *	p_obj
param	2:41	2:71	2	input_thread_t *	p_parent_input
param	3:20	3:42	2	const char *	psz_access
param	3:44	3:65	2	const char *	psz_demux
param	4:20	4:44	2	const char *	psz_location
param	5:20	5:31	2	stream_t *	s
param	5:33	5:46	2	es_out_t *	out
param	5:48	5:61	2	bool	b_quick
stmnts	0:0	128:15	1	
decl	7:4	7:78	2	demux_t	*p_demux
op	7:21	0:0	2	=
call	7:23	7:77	3	vlc_custom_create
arg	7:42	7:47	4	p_obj
water	7:42	0:0	5	p_obj
arg	7:49	7:67	4	sizeof(*p_demux)
op	7:49	0:0	5	sizeof
water	7:55	0:0	5	(
op	7:57	0:0	5	*
water	7:58	0:0	5	p_demux
water	7:66	0:0	5	)
arg	7:69	7:77	4	"demux"
water	7:69	0:0	5	"demux"
if	8:4	9:19	2	(unlikely (p_demux == NULL ))
cond	8:8	8:32	3	unlikely (p_demux == NULL )
call	8:8	8:32	4	unlikely
arg	8:17	8:32	5	p_demux==NULL
water	8:17	0:0	6	p_demux
op	8:25	0:0	6	==
water	8:28	0:0	6	NULL
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
water	10:4	0:0	2	p_demux
op	10:11	0:0	2	->
water	10:13	0:0	2	p_input
op	10:21	0:0	2	=
water	10:23	0:0	2	p_parent_input
water	10:37	0:0	2	;
water	11:4	0:0	2	p_demux
op	11:11	0:0	2	->
water	11:13	0:0	2	psz_access
op	11:24	0:0	2	=
call	11:26	11:45	2	strdup
arg	11:34	11:45	3	psz_access
water	11:34	0:0	4	psz_access
water	11:46	0:0	2	;
if	12:4	14:64	2	(psz_demux [ 0 ] == '\0')
cond	12:8	12:24	3	psz_demux [ 0 ] == '\0'
water	12:8	0:0	4	psz_demux
op	12:17	0:0	4	[
water	12:18	0:0	4	0
op	12:19	0:0	4	]
op	12:21	0:0	4	==
water	12:24	0:0	4	'\0'
stmts	14:8	14:64	3	
water	14:8	0:0	4	p_demux
op	14:15	0:0	4	->
water	14:17	0:0	4	psz_demux
op	14:27	0:0	4	=
call	14:29	14:63	4	var_InheritString
arg	14:48	14:53	5	p_obj
water	14:48	0:0	6	p_obj
arg	14:55	14:63	5	"demux"
water	14:55	0:0	6	"demux"
water	14:64	0:0	4	;
else	15:4	16:48	2
stmts	16:8	16:48	3	
water	16:8	0:0	4	p_demux
op	16:15	0:0	4	->
water	16:17	0:0	4	psz_demux
op	16:27	0:0	4	=
call	16:29	16:47	4	strdup
arg	16:37	16:47	5	psz_demux
water	16:37	0:0	6	psz_demux
water	16:48	0:0	4	;
water	17:4	0:0	2	p_demux
op	17:11	0:0	2	->
water	17:13	0:0	2	psz_location
op	17:26	0:0	2	=
call	17:28	17:49	2	strdup
arg	17:36	17:49	3	psz_location
water	17:36	0:0	4	psz_location
water	17:50	0:0	2	;
water	18:4	0:0	2	p_demux
op	18:11	0:0	2	->
water	18:13	0:0	2	psz_file
op	18:22	0:0	2	=
call	18:24	18:47	2	get_path
arg	18:34	18:47	3	psz_location
water	18:34	0:0	4	psz_location
water	18:48	0:0	2	;
if	19:4	22:18	2	(unlikely (p_demux -> psz_access == NULL || p_demux -> psz_demux == NULL || p_demux -> psz_location == NULL ))
cond	19:8	21:46	3	unlikely (p_demux -> psz_access == NULL || p_demux -> psz_demux == NULL || p_demux -> psz_location == NULL )
call	19:8	21:46	4	unlikely
arg	19:17	21:46	5	p_demux->psz_access==NULL||p_demux->psz_demux==NULL||p_demux->psz_location==NULL
water	19:17	0:0	6	p_demux
op	19:24	0:0	6	->
water	19:26	0:0	6	psz_access
op	19:37	0:0	6	==
water	19:40	0:0	6	NULL
op	20:14	0:0	6	||
water	20:17	0:0	6	p_demux
op	20:24	0:0	6	->
water	20:26	0:0	6	psz_demux
op	20:36	0:0	6	==
water	20:39	0:0	6	NULL
op	21:14	0:0	6	||
water	21:17	0:0	6	p_demux
op	21:24	0:0	6	->
water	21:26	0:0	6	psz_location
op	21:39	0:0	6	==
water	21:42	0:0	6	NULL
stmts	22:8	22:18	3	
goto	22:8	22:18	4	error
water	22:13	0:0	5	error
if	23:4	27:59	2	(! b_quick)
cond	23:8	23:9	3	! b_quick
op	23:8	0:0	4	!
water	23:9	0:0	4	b_quick
stmts	24:8	27:59	3	
call	24:8	27:58	4	msg_Dbg
arg	24:17	24:22	5	p_obj
water	24:17	0:0	6	p_obj
arg	24:24	25:42	5	"creating demux: access='%s' demux='%s' ""location='%s' file='%s'"
water	24:24	0:0	6	"creating demux: access='%s' demux='%s' "
water	25:17	0:0	6	"location='%s' file='%s'"
arg	26:17	26:36	5	p_demux->psz_access
water	26:17	0:0	6	p_demux
op	26:24	0:0	6	->
water	26:26	0:0	6	psz_access
arg	26:38	26:56	5	p_demux->psz_demux
water	26:38	0:0	6	p_demux
op	26:45	0:0	6	->
water	26:47	0:0	6	psz_demux
arg	27:17	27:38	5	p_demux->psz_location
water	27:17	0:0	6	p_demux
op	27:24	0:0	6	->
water	27:26	0:0	6	psz_location
arg	27:40	27:58	5	p_demux->psz_file
water	27:40	0:0	6	p_demux
op	27:47	0:0	6	->
water	27:49	0:0	6	psz_file
water	27:59	0:0	4	;
water	28:4	0:0	2	p_demux
op	28:11	0:0	2	->
water	28:13	0:0	2	s
op	28:24	0:0	2	=
water	28:26	0:0	2	s
water	28:27	0:0	2	;
water	29:4	0:0	2	p_demux
op	29:11	0:0	2	->
water	29:13	0:0	2	out
op	29:24	0:0	2	=
water	29:26	0:0	2	out
water	29:29	0:0	2	;
water	30:4	0:0	2	p_demux
op	30:11	0:0	2	->
water	30:13	0:0	2	pf_demux
op	30:24	0:0	2	=
water	30:26	0:0	2	NULL
water	30:30	0:0	2	;
water	31:4	0:0	2	p_demux
op	31:11	0:0	2	->
water	31:13	0:0	2	pf_control
op	31:24	0:0	2	=
water	31:26	0:0	2	NULL
water	31:30	0:0	2	;
water	32:4	0:0	2	p_demux
op	32:11	0:0	2	->
water	32:13	0:0	2	p_sys
op	32:24	0:0	2	=
water	32:26	0:0	2	NULL
water	32:30	0:0	2	;
water	33:4	0:0	2	p_demux
op	33:11	0:0	2	->
water	33:13	0:0	2	info
op	33:17	0:0	2	.
water	33:18	0:0	2	i_update
op	33:27	0:0	2	=
water	33:29	0:0	2	0
water	33:30	0:0	2	;
water	34:4	0:0	2	p_demux
op	34:11	0:0	2	->
water	34:13	0:0	2	info
op	34:17	0:0	2	.
water	34:18	0:0	2	i_title
op	34:27	0:0	2	=
water	34:29	0:0	2	0
water	34:30	0:0	2	;
water	35:4	0:0	2	p_demux
op	35:11	0:0	2	->
water	35:13	0:0	2	info
op	35:17	0:0	2	.
water	35:18	0:0	2	i_seekpoint
op	35:30	0:0	2	=
water	35:32	0:0	2	0
water	35:33	0:0	2	;
water	40:4	0:0	2	static
water	40:11	0:0	2	const
water	40:17	0:0	2	struct
water	40:24	0:0	2	{
water	40:26	0:0	2	char
water	40:31	0:0	2	ext
op	40:34	0:0	2	[
water	40:35	0:0	2	5
op	40:36	0:0	2	]
water	40:37	0:0	2	;
water	40:39	0:0	2	char
water	40:44	0:0	2	demux
op	40:49	0:0	2	[
water	40:50	0:0	2	9
op	40:51	0:0	2	]
water	40:52	0:0	2	;
water	40:54	0:0	2	}
water	40:56	0:0	2	exttodemux
op	40:66	0:0	2	[
op	40:67	0:0	2	]
op	40:69	0:0	2	=
water	41:4	0:0	2	{
water	42:8	0:0	2	{
water	42:10	0:0	2	"aiff"
water	42:16	0:0	2	,
water	42:18	0:0	2	"aiff"
water	42:25	0:0	2	}
water	42:26	0:0	2	,
water	43:8	0:0	2	{
water	43:10	0:0	2	"asf"
water	43:15	0:0	2	,
water	43:18	0:0	2	"asf"
water	43:24	0:0	2	}
water	43:25	0:0	2	,
water	43:27	0:0	2	{
water	43:29	0:0	2	"wmv"
water	43:34	0:0	2	,
water	43:37	0:0	2	"asf"
water	43:43	0:0	2	}
water	43:44	0:0	2	,
water	43:46	0:0	2	{
water	43:48	0:0	2	"wma"
water	43:53	0:0	2	,
water	43:56	0:0	2	"asf"
water	43:62	0:0	2	}
water	43:63	0:0	2	,
water	44:8	0:0	2	{
water	44:10	0:0	2	"avi"
water	44:15	0:0	2	,
water	44:18	0:0	2	"avi"
water	44:24	0:0	2	}
water	44:25	0:0	2	,
water	45:8	0:0	2	{
water	45:10	0:0	2	"au"
water	45:14	0:0	2	,
water	45:18	0:0	2	"au"
water	45:23	0:0	2	}
water	45:24	0:0	2	,
water	46:8	0:0	2	{
water	46:10	0:0	2	"flac"
water	46:16	0:0	2	,
water	46:18	0:0	2	"flac"
water	46:25	0:0	2	}
water	46:26	0:0	2	,
water	47:8	0:0	2	{
water	47:10	0:0	2	"dv"
water	47:14	0:0	2	,
water	47:18	0:0	2	"dv"
water	47:23	0:0	2	}
water	47:24	0:0	2	,
water	48:8	0:0	2	{
water	48:10	0:0	2	"drc"
water	48:15	0:0	2	,
water	48:18	0:0	2	"dirac"
water	48:26	0:0	2	}
water	48:27	0:0	2	,
water	49:8	0:0	2	{
water	49:10	0:0	2	"m3u"
water	49:15	0:0	2	,
water	49:18	0:0	2	"m3u"
water	49:24	0:0	2	}
water	49:25	0:0	2	,
water	50:8	0:0	2	{
water	50:10	0:0	2	"mkv"
water	50:15	0:0	2	,
water	50:18	0:0	2	"mkv"
water	50:24	0:0	2	}
water	50:25	0:0	2	,
water	50:27	0:0	2	{
water	50:29	0:0	2	"mka"
water	50:34	0:0	2	,
water	50:37	0:0	2	"mkv"
water	50:43	0:0	2	}
water	50:44	0:0	2	,
water	50:46	0:0	2	{
water	50:48	0:0	2	"mks"
water	50:53	0:0	2	,
water	50:56	0:0	2	"mkv"
water	50:62	0:0	2	}
water	50:63	0:0	2	,
water	51:8	0:0	2	{
water	51:10	0:0	2	"mp4"
water	51:15	0:0	2	,
water	51:18	0:0	2	"mp4"
water	51:24	0:0	2	}
water	51:25	0:0	2	,
water	51:27	0:0	2	{
water	51:29	0:0	2	"m4a"
water	51:34	0:0	2	,
water	51:37	0:0	2	"mp4"
water	51:43	0:0	2	}
water	51:44	0:0	2	,
water	51:46	0:0	2	{
water	51:48	0:0	2	"mov"
water	51:53	0:0	2	,
water	51:56	0:0	2	"mp4"
water	51:62	0:0	2	}
water	51:63	0:0	2	,
water	51:65	0:0	2	{
water	51:67	0:0	2	"moov"
water	51:73	0:0	2	,
water	51:75	0:0	2	"mp4"
water	51:81	0:0	2	}
water	51:82	0:0	2	,
water	52:8	0:0	2	{
water	52:10	0:0	2	"nsv"
water	52:15	0:0	2	,
water	52:18	0:0	2	"nsv"
water	52:24	0:0	2	}
water	52:25	0:0	2	,
water	53:8	0:0	2	{
water	53:10	0:0	2	"ogg"
water	53:15	0:0	2	,
water	53:18	0:0	2	"ogg"
water	53:24	0:0	2	}
water	53:25	0:0	2	,
water	53:27	0:0	2	{
water	53:29	0:0	2	"ogm"
water	53:34	0:0	2	,
water	53:37	0:0	2	"ogg"
water	53:43	0:0	2	}
water	53:44	0:0	2	,
water	54:8	0:0	2	{
water	54:10	0:0	2	"oga"
water	54:15	0:0	2	,
water	54:18	0:0	2	"ogg"
water	54:24	0:0	2	}
water	54:25	0:0	2	,
water	54:27	0:0	2	{
water	54:29	0:0	2	"spx"
water	54:34	0:0	2	,
water	54:37	0:0	2	"ogg"
water	54:43	0:0	2	}
water	54:44	0:0	2	,
water	54:46	0:0	2	{
water	54:48	0:0	2	"ogv"
water	54:53	0:0	2	,
water	54:55	0:0	2	"ogg"
water	54:61	0:0	2	}
water	54:62	0:0	2	,
water	55:8	0:0	2	{
water	55:10	0:0	2	"ogx"
water	55:15	0:0	2	,
water	55:18	0:0	2	"ogg"
water	55:24	0:0	2	}
water	55:25	0:0	2	,
water	56:8	0:0	2	{
water	56:10	0:0	2	"opus"
water	56:16	0:0	2	,
water	56:18	0:0	2	"ogg"
water	56:24	0:0	2	}
water	56:25	0:0	2	,
water	57:8	0:0	2	{
water	57:10	0:0	2	"pva"
water	57:15	0:0	2	,
water	57:18	0:0	2	"pva"
water	57:24	0:0	2	}
water	57:25	0:0	2	,
water	58:8	0:0	2	{
water	58:10	0:0	2	"rm"
water	58:14	0:0	2	,
water	58:18	0:0	2	"avformat"
water	58:29	0:0	2	}
water	58:30	0:0	2	,
water	59:8	0:0	2	{
water	59:10	0:0	2	"m4v"
water	59:15	0:0	2	,
water	59:18	0:0	2	"m4v"
water	59:24	0:0	2	}
water	59:25	0:0	2	,
water	60:8	0:0	2	{
water	60:10	0:0	2	"h264"
water	60:16	0:0	2	,
water	60:18	0:0	2	"h264"
water	60:25	0:0	2	}
water	60:26	0:0	2	,
water	61:8	0:0	2	{
water	61:10	0:0	2	"voc"
water	61:15	0:0	2	,
water	61:18	0:0	2	"voc"
water	61:24	0:0	2	}
water	61:25	0:0	2	,
water	62:8	0:0	2	{
water	62:10	0:0	2	"mid"
water	62:15	0:0	2	,
water	62:18	0:0	2	"smf"
water	62:24	0:0	2	}
water	62:25	0:0	2	,
water	62:27	0:0	2	{
water	62:29	0:0	2	"rmi"
water	62:34	0:0	2	,
water	62:37	0:0	2	"smf"
water	62:43	0:0	2	}
water	62:44	0:0	2	,
water	62:46	0:0	2	{
water	62:48	0:0	2	"kar"
water	62:53	0:0	2	,
water	62:55	0:0	2	"smf"
water	62:61	0:0	2	}
water	62:62	0:0	2	,
water	63:8	0:0	2	{
water	63:10	0:0	2	""
water	63:12	0:0	2	,
water	63:15	0:0	2	""
water	63:18	0:0	2	}
water	63:19	0:0	2	,
water	64:4	0:0	2	}
water	64:5	0:0	2	;
water	66:4	0:0	2	static
water	66:11	0:0	2	const
water	66:17	0:0	2	struct
water	66:24	0:0	2	{
water	66:26	0:0	2	char
water	66:31	0:0	2	ext
op	66:34	0:0	2	[
water	66:35	0:0	2	4
op	66:36	0:0	2	]
water	66:37	0:0	2	;
water	66:39	0:0	2	char
water	66:44	0:0	2	demux
op	66:49	0:0	2	[
water	66:50	0:0	2	5
op	66:51	0:0	2	]
water	66:52	0:0	2	;
water	66:54	0:0	2	}
water	66:56	0:0	2	exttodemux_quick
op	66:72	0:0	2	[
op	66:73	0:0	2	]
op	66:75	0:0	2	=
water	67:4	0:0	2	{
water	68:8	0:0	2	{
water	68:10	0:0	2	"mp3"
water	68:15	0:0	2	,
water	68:17	0:0	2	"mpga"
water	68:24	0:0	2	}
water	68:25	0:0	2	,
water	69:8	0:0	2	{
water	69:10	0:0	2	"ogg"
water	69:15	0:0	2	,
water	69:17	0:0	2	"ogg"
water	69:23	0:0	2	}
water	69:24	0:0	2	,
water	70:8	0:0	2	{
water	70:10	0:0	2	"wma"
water	70:15	0:0	2	,
water	70:17	0:0	2	"asf"
water	70:23	0:0	2	}
water	70:24	0:0	2	,
water	71:8	0:0	2	{
water	71:10	0:0	2	""
water	71:12	0:0	2	,
water	71:14	0:0	2	""
water	71:17	0:0	2	}
water	72:4	0:0	2	}
water	72:5	0:0	2	;
if	73:4	113:4	2	(s != NULL)
cond	73:8	73:13	3	s != NULL
water	73:8	0:0	4	s
op	73:10	0:0	4	!=
water	73:13	0:0	4	NULL
stmts	74:4	113:4	3	
water	74:4	0:0	4	{
decl	75:8	75:27	4	const char	*psz_ext
decl	76:8	76:51	4	const char	*psz_module
op	76:31	0:0	4	=
water	76:33	0:0	4	p_demux
op	76:40	0:0	4	->
water	76:42	0:0	4	psz_demux
if	77:8	103:8	4	(!strcmp (psz_module ,"any" ) && p_demux -> psz_file != NULL && ( psz_ext =strrchr (p_demux -> psz_file ,'.' ) ) != NULL)
cond	77:12	78:61	5	!strcmp (psz_module ,"any" ) && p_demux -> psz_file != NULL && ( psz_ext =strrchr (p_demux -> psz_file ,'.' ) ) != NULL
op	77:12	0:0	6	!
call	77:13	77:37	6	strcmp
arg	77:20	77:30	7	psz_module
water	77:20	0:0	8	psz_module
arg	77:32	77:37	7	"any"
water	77:32	0:0	8	"any"
op	77:39	0:0	6	&&
water	77:42	0:0	6	p_demux
op	77:49	0:0	6	->
water	77:51	0:0	6	psz_file
op	77:60	0:0	6	!=
water	77:63	0:0	6	NULL
op	78:9	0:0	6	&&
water	78:12	0:0	6	(
water	78:13	0:0	6	psz_ext
op	78:21	0:0	6	=
call	78:23	78:55	6	strrchr
arg	78:32	78:49	7	p_demux->psz_file
water	78:32	0:0	8	p_demux
op	78:39	0:0	8	->
water	78:41	0:0	8	psz_file
arg	78:51	78:55	7	'.'
water	78:51	0:0	8	'.'
water	78:56	0:0	6	)
op	78:58	0:0	6	!=
water	78:61	0:0	6	NULL
stmts	79:8	103:8	5	
water	79:8	0:0	6	{
water	80:12	0:0	6	psz_ext
op	80:19	0:0	6	++
water	80:21	0:0	6	;
if	81:12	91:12	6	(! b_quick)
cond	81:16	81:17	7	! b_quick
op	81:16	0:0	8	!
water	81:17	0:0	8	b_quick
stmts	82:12	91:12	7	
water	82:12	0:0	8	{
for	83:16	90:16	8	(unsigned i = 0 ;exttodemux [ i ] . ext [ 0 ];i ++)
forinit	83:21	83:35	9	unsigned i = 0 ;
water	83:21	0:0	10	unsigned
water	83:30	0:0	10	i
op	83:32	0:0	10	=
water	83:34	0:0	10	0
water	83:35	0:0	10	;
cond	83:37	83:56	9	exttodemux [ i ] . ext [ 0 ]
water	83:37	0:0	10	exttodemux
op	83:47	0:0	10	[
water	83:48	0:0	10	i
op	83:49	0:0	10	]
op	83:50	0:0	10	.
water	83:51	0:0	10	ext
op	83:54	0:0	10	[
water	83:55	0:0	10	0
op	83:56	0:0	10	]
forexpr	83:59	83:60	9	i ++
water	83:59	0:0	10	i
op	83:60	0:0	10	++
stmts	84:16	90:16	9	
water	84:16	0:0	10	{
if	85:20	89:20	10	(!strcasecmp (psz_ext ,exttodemux [ i ] . ext ))
cond	85:24	85:64	11	!strcasecmp (psz_ext ,exttodemux [ i ] . ext )
op	85:24	0:0	12	!
call	85:25	85:64	12	strcasecmp
arg	85:37	85:44	13	psz_ext
water	85:37	0:0	14	psz_ext
arg	85:46	85:64	13	exttodemux[i].ext
water	85:46	0:0	14	exttodemux
op	85:56	0:0	14	[
water	85:57	0:0	14	i
op	85:58	0:0	14	]
op	85:59	0:0	14	.
water	85:60	0:0	14	ext
stmts	86:20	89:20	11	
water	86:20	0:0	12	{
water	87:24	0:0	12	psz_module
op	87:35	0:0	12	=
water	87:37	0:0	12	exttodemux
op	87:47	0:0	12	[
water	87:48	0:0	12	i
op	87:49	0:0	12	]
op	87:50	0:0	12	.
water	87:51	0:0	12	demux
water	87:56	0:0	12	;
break	88:24	88:29	12	
water	89:20	0:0	12	}
water	90:16	0:0	10	}
water	91:12	0:0	8	}
else	92:12	102:12	6
stmts	93:12	102:12	7	
water	93:12	0:0	8	{
for	94:16	101:16	8	(unsigned i = 0 ;exttodemux_quick [ i ] . ext [ 0 ];i ++)
forinit	94:21	94:35	9	unsigned i = 0 ;
water	94:21	0:0	10	unsigned
water	94:30	0:0	10	i
op	94:32	0:0	10	=
water	94:34	0:0	10	0
water	94:35	0:0	10	;
cond	94:37	94:62	9	exttodemux_quick [ i ] . ext [ 0 ]
water	94:37	0:0	10	exttodemux_quick
op	94:53	0:0	10	[
water	94:54	0:0	10	i
op	94:55	0:0	10	]
op	94:56	0:0	10	.
water	94:57	0:0	10	ext
op	94:60	0:0	10	[
water	94:61	0:0	10	0
op	94:62	0:0	10	]
forexpr	94:65	94:66	9	i ++
water	94:65	0:0	10	i
op	94:66	0:0	10	++
stmts	95:16	101:16	9	
water	95:16	0:0	10	{
if	96:20	100:20	10	(!strcasecmp (psz_ext ,exttodemux_quick [ i ] . ext ))
cond	96:24	96:70	11	!strcasecmp (psz_ext ,exttodemux_quick [ i ] . ext )
op	96:24	0:0	12	!
call	96:25	96:70	12	strcasecmp
arg	96:37	96:44	13	psz_ext
water	96:37	0:0	14	psz_ext
arg	96:46	96:70	13	exttodemux_quick[i].ext
water	96:46	0:0	14	exttodemux_quick
op	96:62	0:0	14	[
water	96:63	0:0	14	i
op	96:64	0:0	14	]
op	96:65	0:0	14	.
water	96:66	0:0	14	ext
stmts	97:20	100:20	11	
water	97:20	0:0	12	{
water	98:24	0:0	12	psz_module
op	98:35	0:0	12	=
water	98:37	0:0	12	exttodemux_quick
op	98:53	0:0	12	[
water	98:54	0:0	12	i
op	98:55	0:0	12	]
op	98:56	0:0	12	.
water	98:57	0:0	12	demux
water	98:62	0:0	12	;
break	99:24	99:29	12	
water	100:20	0:0	12	}
water	101:16	0:0	10	}
water	102:12	0:0	8	}
water	103:8	0:0	6	}
while	107:8	108:10	4	(SkipID3Tag (p_demux ))
cond	107:15	107:35	5	SkipID3Tag (p_demux )
call	107:15	107:35	6	SkipID3Tag
arg	107:27	107:35	7	p_demux
water	107:27	0:0	8	p_demux
stmts	108:10	108:10	5	
water	108:10	0:0	6	;
call	109:8	109:28	4	SkipAPETag
arg	109:20	109:28	5	p_demux
water	109:20	0:0	6	p_demux
water	109:29	0:0	4	;
water	110:8	0:0	4	p_demux
op	110:15	0:0	4	->
water	110:17	0:0	4	p_module
op	110:26	0:0	4	=
call	111:12	112:67	4	module_need
arg	111:25	111:32	5	p_demux
water	111:25	0:0	6	p_demux
arg	111:34	111:41	5	"demux"
water	111:34	0:0	6	"demux"
arg	111:43	111:53	5	psz_module
water	111:43	0:0	6	psz_module
arg	112:25	112:67	5	!strcmp(psz_module,p_demux->psz_demux)
op	112:25	0:0	6	!
call	112:26	112:65	6	strcmp
arg	112:34	112:44	7	psz_module
water	112:34	0:0	8	psz_module
arg	112:46	112:65	7	p_demux->psz_demux
water	112:46	0:0	8	p_demux
op	112:53	0:0	8	->
water	112:55	0:0	8	psz_demux
water	112:68	0:0	4	;
water	113:4	0:0	4	}
else	114:4	118:4	2
stmts	115:4	118:4	3	
water	115:4	0:0	4	{
water	116:8	0:0	4	p_demux
op	116:15	0:0	4	->
water	116:17	0:0	4	p_module
op	116:26	0:0	4	=
call	117:12	117:76	4	module_need
arg	117:25	117:32	5	p_demux
water	117:25	0:0	6	p_demux
arg	117:34	117:48	5	"access_demux"
water	117:34	0:0	6	"access_demux"
arg	117:50	117:69	5	p_demux->psz_access
water	117:50	0:0	6	p_demux
op	117:57	0:0	6	->
water	117:59	0:0	6	psz_access
arg	117:71	117:76	5	true
water	117:71	0:0	6	true
water	117:77	0:0	4	;
water	118:4	0:0	4	}
if	119:4	120:18	2	(p_demux -> p_module == NULL)
cond	119:8	119:29	3	p_demux -> p_module == NULL
water	119:8	0:0	4	p_demux
op	119:15	0:0	4	->
water	119:17	0:0	4	p_module
op	119:26	0:0	4	==
water	119:29	0:0	4	NULL
stmts	120:8	120:18	3	
goto	120:8	120:18	4	error
water	120:13	0:0	5	error
return	121:4	121:18	2	p_demux
water	121:11	0:0	3	p_demux
label	122:0	122:5	2	error :
call	123:4	123:28	2	free
arg	123:10	123:28	3	p_demux->psz_file
water	123:10	0:0	4	p_demux
op	123:17	0:0	4	->
water	123:19	0:0	4	psz_file
water	123:29	0:0	2	;
call	124:4	124:32	2	free
arg	124:10	124:32	3	p_demux->psz_location
water	124:10	0:0	4	p_demux
op	124:17	0:0	4	->
water	124:19	0:0	4	psz_location
water	124:33	0:0	2	;
call	125:4	125:29	2	free
arg	125:10	125:29	3	p_demux->psz_demux
water	125:10	0:0	4	p_demux
op	125:17	0:0	4	->
water	125:19	0:0	4	psz_demux
water	125:30	0:0	2	;
call	126:4	126:30	2	free
arg	126:10	126:30	3	p_demux->psz_access
water	126:10	0:0	4	p_demux
op	126:17	0:0	4	->
water	126:19	0:0	4	psz_access
water	126:31	0:0	2	;
call	127:4	127:32	2	vlc_object_release
arg	127:24	127:32	3	p_demux
water	127:24	0:0	4	p_demux
water	127:33	0:0	2	;
return	128:4	128:15	2	NULL
water	128:11	0:0	3	NULL

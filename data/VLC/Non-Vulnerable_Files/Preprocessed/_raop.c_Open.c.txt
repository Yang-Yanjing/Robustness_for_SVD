func	2:0	145:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	144:16	1	
decl	4:4	4:52	2	sout_stream_t	*p_stream
op	4:28	0:0	2	=
water	4:30	0:0	2	(
water	4:31	0:0	2	sout_stream_t
op	4:44	0:0	2	*
water	4:45	0:0	2	)
water	4:46	0:0	2	p_this
decl	5:4	5:28	2	sout_stream_sys_t	*p_sys
decl	6:4	6:37	2	char	psz_local[NI_MAXNUMERICHOST]
decl	7:4	7:27	2	char	*psz_pwfile
op	7:21	0:0	2	=
water	7:23	0:0	2	NULL
decl	8:4	8:29	2	gcry_error_t	i_gcrypt_err
decl	9:4	9:27	2	int	i_err
op	9:14	0:0	2	=
water	9:16	0:0	2	VLC_SUCCESS
decl	10:4	10:25	2	uint32_t	i_session_id
decl	11:4	11:30	2	uint64_t	i_client_instance
call	12:4	12:20	2	vlc_gcrypt_init
water	12:21	0:0	2	;
call	13:4	14:39	2	config_ChainParse
arg	13:23	13:31	3	p_stream
water	13:23	0:0	4	p_stream
arg	13:33	13:48	3	SOUT_CFG_PREFIX
water	13:33	0:0	4	SOUT_CFG_PREFIX
arg	13:50	13:67	3	ppsz_sout_options
water	13:50	0:0	4	ppsz_sout_options
arg	14:23	14:39	3	p_stream->p_cfg
water	14:23	0:0	4	p_stream
op	14:31	0:0	4	->
water	14:33	0:0	4	p_cfg
water	14:40	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:10	0:0	2	=
call	15:12	15:40	2	calloc
arg	15:20	15:21	3	1
water	15:20	0:0	4	1
arg	15:23	15:40	3	sizeof(*p_sys)
op	15:23	0:0	4	sizeof
water	15:29	0:0	4	(
op	15:31	0:0	4	*
water	15:32	0:0	4	p_sys
water	15:38	0:0	4	)
water	15:41	0:0	2	;
if	16:4	17:25	2	(p_sys == NULL)
cond	16:9	16:18	3	p_sys == NULL
water	16:9	0:0	4	p_sys
op	16:15	0:0	4	==
water	16:18	0:0	4	NULL
stmts	17:8	17:25	3	
return	17:8	17:25	4	VLC_ENOMEM
water	17:15	0:0	5	VLC_ENOMEM
water	18:4	0:0	2	p_stream
op	18:12	0:0	2	->
water	18:14	0:0	2	pf_add
op	18:21	0:0	2	=
water	18:23	0:0	2	Add
water	18:26	0:0	2	;
water	19:4	0:0	2	p_stream
op	19:12	0:0	2	->
water	19:14	0:0	2	pf_del
op	19:21	0:0	2	=
water	19:23	0:0	2	Del
water	19:26	0:0	2	;
water	20:4	0:0	2	p_stream
op	20:12	0:0	2	->
water	20:14	0:0	2	pf_send
op	20:22	0:0	2	=
water	20:24	0:0	2	Send
water	20:28	0:0	2	;
water	21:4	0:0	2	p_stream
op	21:12	0:0	2	->
water	21:14	0:0	2	p_sys
op	21:20	0:0	2	=
water	21:22	0:0	2	p_sys
water	21:27	0:0	2	;
water	22:4	0:0	2	p_stream
op	22:12	0:0	2	->
water	22:14	0:0	2	pace_nocontrol
op	22:29	0:0	2	=
water	22:31	0:0	2	true
water	22:35	0:0	2	;
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	i_control_fd
op	23:24	0:0	2	=
op	23:26	0:0	2	-
water	23:27	0:0	2	1
water	23:28	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	i_stream_fd
op	24:23	0:0	2	=
op	24:25	0:0	2	-
water	24:26	0:0	2	1
water	24:27	0:0	2	;
water	25:4	0:0	2	p_sys
op	25:9	0:0	2	->
water	25:11	0:0	2	i_volume
op	25:20	0:0	2	=
call	25:22	25:72	2	var_GetInteger
arg	25:38	25:46	3	p_stream
water	25:38	0:0	4	p_stream
arg	25:48	25:72	3	SOUT_CFG_PREFIX"volume"
water	25:48	0:0	4	SOUT_CFG_PREFIX
water	25:64	0:0	4	"volume"
water	25:73	0:0	2	;
water	26:4	0:0	2	p_sys
op	26:9	0:0	2	->
water	26:11	0:0	2	i_jack_type
op	26:23	0:0	2	=
water	26:25	0:0	2	JACK_TYPE_NONE
water	26:39	0:0	2	;
call	27:4	27:33	2	http_auth_Init
arg	27:20	27:33	3	&p_sys->auth
op	27:20	0:0	4	&
water	27:21	0:0	4	p_sys
op	27:26	0:0	4	->
water	27:28	0:0	4	auth
water	27:34	0:0	2	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	psz_host
op	28:20	0:0	2	=
call	28:22	29:68	2	var_GetNonEmptyString
arg	28:45	28:53	3	p_stream
water	28:45	0:0	4	p_stream
arg	29:45	29:68	3	SOUT_CFG_PREFIX"host"
water	29:45	0:0	4	SOUT_CFG_PREFIX
water	29:61	0:0	4	"host"
water	29:69	0:0	2	;
if	30:4	35:4	2	(p_sys -> psz_host == NULL)
cond	30:9	30:28	3	p_sys -> psz_host == NULL
water	30:9	0:0	4	p_sys
op	30:14	0:0	4	->
water	30:16	0:0	4	psz_host
op	30:25	0:0	4	==
water	30:28	0:0	4	NULL
stmts	31:4	35:4	3	
water	31:4	0:0	4	{
call	32:8	32:40	4	msg_Err
arg	32:17	32:23	5	p_this
water	32:17	0:0	6	p_this
arg	32:25	32:40	5	"Missing host"
water	32:25	0:0	6	"Missing host"
water	32:41	0:0	4	;
water	33:8	0:0	4	i_err
op	33:14	0:0	4	=
water	33:16	0:0	4	VLC_EGENERIC
water	33:28	0:0	4	;
goto	34:8	34:18	4	error
water	34:13	0:0	5	error
water	35:4	0:0	4	}
water	36:4	0:0	2	p_sys
op	36:9	0:0	2	->
water	36:11	0:0	2	psz_password
op	36:24	0:0	2	=
call	36:26	37:76	2	var_GetNonEmptyString
arg	36:49	36:57	3	p_stream
water	36:49	0:0	4	p_stream
arg	37:49	37:76	3	SOUT_CFG_PREFIX"password"
water	37:49	0:0	4	SOUT_CFG_PREFIX
water	37:65	0:0	4	"password"
water	37:77	0:0	2	;
if	38:4	52:4	2	(p_sys -> psz_password == NULL)
cond	38:9	38:32	3	p_sys -> psz_password == NULL
water	38:9	0:0	4	p_sys
op	38:14	0:0	4	->
water	38:16	0:0	4	psz_password
op	38:29	0:0	4	==
water	38:32	0:0	4	NULL
stmts	39:4	52:4	3	
water	39:4	0:0	4	{
water	41:8	0:0	4	psz_pwfile
op	41:19	0:0	4	=
call	41:21	42:76	4	var_GetNonEmptyString
arg	41:44	41:52	5	p_stream
water	41:44	0:0	6	p_stream
arg	42:44	42:76	5	SOUT_CFG_PREFIX"password-file"
water	42:44	0:0	6	SOUT_CFG_PREFIX
water	42:60	0:0	6	"password-file"
water	42:77	0:0	4	;
if	43:8	51:8	4	(psz_pwfile != NULL)
cond	43:13	43:27	5	psz_pwfile != NULL
water	43:13	0:0	6	psz_pwfile
op	43:24	0:0	6	!=
water	43:27	0:0	6	NULL
stmts	44:8	51:8	5	
water	44:8	0:0	6	{
water	45:12	0:0	6	p_sys
op	45:17	0:0	6	->
water	45:19	0:0	6	psz_password
op	45:32	0:0	6	=
call	45:34	45:71	6	ReadPasswordFile
arg	45:52	45:58	7	p_this
water	45:52	0:0	8	p_this
arg	45:60	45:71	7	psz_pwfile
water	45:60	0:0	8	psz_pwfile
water	45:72	0:0	6	;
if	46:12	50:12	6	(p_sys -> psz_password == NULL)
cond	46:17	46:40	7	p_sys -> psz_password == NULL
water	46:17	0:0	8	p_sys
op	46:22	0:0	8	->
water	46:24	0:0	8	psz_password
op	46:37	0:0	8	==
water	46:40	0:0	8	NULL
stmts	47:12	50:12	7	
water	47:12	0:0	8	{
water	48:16	0:0	8	i_err
op	48:22	0:0	8	=
water	48:24	0:0	8	VLC_EGENERIC
water	48:36	0:0	8	;
goto	49:16	49:26	8	error
water	49:21	0:0	9	error
water	50:12	0:0	8	}
water	51:8	0:0	6	}
water	52:4	0:0	4	}
if	53:4	54:59	2	(p_sys -> psz_password != NULL)
cond	53:9	53:32	3	p_sys -> psz_password != NULL
water	53:9	0:0	4	p_sys
op	53:14	0:0	4	->
water	53:16	0:0	4	psz_password
op	53:29	0:0	4	!=
water	53:32	0:0	4	NULL
stmts	54:8	54:59	3	
call	54:8	54:58	4	msg_Info
arg	54:18	54:24	5	p_this
water	54:18	0:0	6	p_this
arg	54:26	54:58	5	"Using password authentication"
water	54:26	0:0	6	"Using password authentication"
water	54:59	0:0	4	;
call	55:4	56:42	2	var_AddCallback
arg	55:21	55:29	3	p_stream
water	55:21	0:0	4	p_stream
arg	55:31	55:55	3	SOUT_CFG_PREFIX"volume"
water	55:31	0:0	4	SOUT_CFG_PREFIX
water	55:47	0:0	4	"volume"
arg	56:21	56:35	3	VolumeCallback
water	56:21	0:0	4	VolumeCallback
arg	56:37	56:42	3	NULL
water	56:37	0:0	4	NULL
water	56:43	0:0	2	;
water	57:4	0:0	2	p_sys
op	57:9	0:0	2	->
water	57:11	0:0	2	b_volume_callback
op	57:29	0:0	2	=
water	57:31	0:0	2	true
water	57:35	0:0	2	;
water	59:4	0:0	2	p_sys
op	59:9	0:0	2	->
water	59:11	0:0	2	i_control_fd
op	59:24	0:0	2	=
call	59:26	60:52	2	net_ConnectTCP
arg	59:42	59:50	3	p_stream
water	59:42	0:0	4	p_stream
arg	59:52	59:67	3	p_sys->psz_host
water	59:52	0:0	4	p_sys
op	59:57	0:0	4	->
water	59:59	0:0	4	psz_host
arg	60:42	60:52	3	RAOP_PORT
water	60:42	0:0	4	RAOP_PORT
water	60:53	0:0	2	;
if	61:4	67:4	2	(p_sys -> i_control_fd < 0)
cond	61:9	61:31	3	p_sys -> i_control_fd < 0
water	61:9	0:0	4	p_sys
op	61:14	0:0	4	->
water	61:16	0:0	4	i_control_fd
op	61:29	0:0	4	<
water	61:31	0:0	4	0
stmts	62:4	67:4	3	
water	62:4	0:0	4	{
call	63:8	64:67	4	msg_Err
arg	63:17	63:23	5	p_this
water	63:17	0:0	6	p_this
arg	63:25	63:76	5	"Cannot establish control connection to %s:%d (%s)"
water	63:25	0:0	6	"Cannot establish control connection to %s:%d (%s)"
arg	64:17	64:32	5	p_sys->psz_host
water	64:17	0:0	6	p_sys
op	64:22	0:0	6	->
water	64:24	0:0	6	psz_host
arg	64:34	64:43	5	RAOP_PORT
water	64:34	0:0	6	RAOP_PORT
arg	64:45	64:67	5	vlc_strerror_c(errno)
call	64:45	64:65	6	vlc_strerror_c
arg	64:60	64:65	7	errno
water	64:60	0:0	8	errno
water	64:68	0:0	4	;
water	65:8	0:0	4	i_err
op	65:14	0:0	4	=
water	65:16	0:0	4	VLC_EGENERIC
water	65:28	0:0	4	;
goto	66:8	66:18	4	error
water	66:13	0:0	5	error
water	67:4	0:0	4	}
if	69:4	74:4	2	(net_GetSockAddress (p_sys -> i_control_fd ,psz_local ,NULL ))
cond	69:9	69:66	3	net_GetSockAddress (p_sys -> i_control_fd ,psz_local ,NULL )
call	69:9	69:66	4	net_GetSockAddress
arg	69:29	69:48	5	p_sys->i_control_fd
water	69:29	0:0	6	p_sys
op	69:34	0:0	6	->
water	69:36	0:0	6	i_control_fd
arg	69:50	69:59	5	psz_local
water	69:50	0:0	6	psz_local
arg	69:61	69:66	5	NULL
water	69:61	0:0	6	NULL
stmts	70:4	74:4	3	
water	70:4	0:0	4	{
call	71:8	71:55	4	msg_Err
arg	71:17	71:23	5	p_this
water	71:17	0:0	6	p_this
arg	71:25	71:55	5	"cannot get local IP address"
water	71:25	0:0	6	"cannot get local IP address"
water	71:56	0:0	4	;
water	72:8	0:0	4	i_err
op	72:14	0:0	4	=
water	72:16	0:0	4	VLC_EGENERIC
water	72:28	0:0	4	;
goto	73:8	73:18	4	error
water	73:13	0:0	5	error
water	74:4	0:0	4	}
call	76:4	77:39	2	gcry_randomize
arg	76:20	76:33	3	&i_session_id
op	76:20	0:0	4	&
water	76:21	0:0	4	i_session_id
arg	76:35	76:57	3	sizeof(i_session_id)
op	76:35	0:0	4	sizeof
water	76:41	0:0	4	(
water	76:43	0:0	4	i_session_id
water	76:56	0:0	4	)
arg	77:20	77:39	3	GCRY_STRONG_RANDOM
water	77:20	0:0	4	GCRY_STRONG_RANDOM
water	77:40	0:0	2	;
call	79:4	80:39	2	gcry_randomize
arg	79:20	79:38	3	&i_client_instance
op	79:20	0:0	4	&
water	79:21	0:0	4	i_client_instance
arg	79:40	79:67	3	sizeof(i_client_instance)
op	79:40	0:0	4	sizeof
water	79:46	0:0	4	(
water	79:48	0:0	4	i_client_instance
water	79:66	0:0	4	)
arg	80:20	80:39	3	GCRY_STRONG_RANDOM
water	80:20	0:0	4	GCRY_STRONG_RANDOM
water	80:40	0:0	2	;
if	81:4	86:4	2	(asprintf (& p_sys -> psz_client_instance ,"%016" PRIX64 ,i_client_instance ) < 0)
cond	81:9	82:41	3	asprintf (& p_sys -> psz_client_instance ,"%016" PRIX64 ,i_client_instance ) < 0
call	81:9	82:37	4	asprintf
arg	81:19	81:46	5	&p_sys->psz_client_instance
op	81:19	0:0	6	&
water	81:20	0:0	6	p_sys
op	81:25	0:0	6	->
water	81:27	0:0	6	psz_client_instance
arg	81:48	81:60	5	"%016"PRIX64
water	81:48	0:0	6	"%016"
water	81:54	0:0	6	PRIX64
arg	82:19	82:37	5	i_client_instance
water	82:19	0:0	6	i_client_instance
op	82:39	0:0	4	<
water	82:41	0:0	4	0
stmts	83:4	86:4	3	
water	83:4	0:0	4	{
water	84:8	0:0	4	i_err
op	84:14	0:0	4	=
water	84:16	0:0	4	VLC_ENOMEM
water	84:26	0:0	4	;
goto	85:8	85:18	4	error
water	85:13	0:0	5	error
water	86:4	0:0	4	}
if	88:4	93:4	2	(asprintf (& p_sys -> psz_url ,"rtsp://%s/%u" ,psz_local ,i_session_id ) < 0)
cond	88:9	89:47	3	asprintf (& p_sys -> psz_url ,"rtsp://%s/%u" ,psz_local ,i_session_id ) < 0
call	88:9	89:43	4	asprintf
arg	88:19	88:34	5	&p_sys->psz_url
op	88:19	0:0	6	&
water	88:20	0:0	6	p_sys
op	88:25	0:0	6	->
water	88:27	0:0	6	psz_url
arg	88:36	88:50	5	"rtsp://%s/%u"
water	88:36	0:0	6	"rtsp://%s/%u"
arg	89:19	89:28	5	psz_local
water	89:19	0:0	6	psz_local
arg	89:30	89:43	5	i_session_id
water	89:30	0:0	6	i_session_id
op	89:45	0:0	4	<
water	89:47	0:0	4	0
stmts	90:4	93:4	3	
water	90:4	0:0	4	{
water	91:8	0:0	4	i_err
op	91:14	0:0	4	=
water	91:16	0:0	4	VLC_ENOMEM
water	91:26	0:0	4	;
goto	92:8	92:18	4	error
water	92:13	0:0	5	error
water	93:4	0:0	4	}
call	95:4	96:39	2	gcry_randomize
arg	95:20	95:37	3	p_sys->ps_aes_key
water	95:20	0:0	4	p_sys
op	95:25	0:0	4	->
water	95:27	0:0	4	ps_aes_key
arg	95:39	95:66	3	sizeof(p_sys->ps_aes_key)
op	95:39	0:0	4	sizeof
water	95:45	0:0	4	(
water	95:47	0:0	4	p_sys
op	95:52	0:0	4	->
water	95:54	0:0	4	ps_aes_key
water	95:65	0:0	4	)
arg	96:20	96:39	3	GCRY_STRONG_RANDOM
water	96:20	0:0	4	GCRY_STRONG_RANDOM
water	96:40	0:0	2	;
call	97:4	98:39	2	gcry_randomize
arg	97:20	97:36	3	p_sys->ps_aes_iv
water	97:20	0:0	4	p_sys
op	97:25	0:0	4	->
water	97:27	0:0	4	ps_aes_iv
arg	97:38	97:64	3	sizeof(p_sys->ps_aes_iv)
op	97:38	0:0	4	sizeof
water	97:44	0:0	4	(
water	97:46	0:0	4	p_sys
op	97:51	0:0	4	->
water	97:53	0:0	4	ps_aes_iv
water	97:63	0:0	4	)
arg	98:20	98:39	3	GCRY_STRONG_RANDOM
water	98:20	0:0	4	GCRY_STRONG_RANDOM
water	98:40	0:0	2	;
water	100:4	0:0	2	i_gcrypt_err
op	100:17	0:0	2	=
call	100:19	101:61	2	gcry_cipher_open
arg	100:37	100:52	3	&p_sys->aes_ctx
op	100:37	0:0	4	&
water	100:38	0:0	4	p_sys
op	100:43	0:0	4	->
water	100:45	0:0	4	aes_ctx
arg	100:54	100:69	3	GCRY_CIPHER_AES
water	100:54	0:0	4	GCRY_CIPHER_AES
arg	101:37	101:57	3	GCRY_CIPHER_MODE_CBC
water	101:37	0:0	4	GCRY_CIPHER_MODE_CBC
arg	101:59	101:61	3	0
water	101:59	0:0	4	0
water	101:62	0:0	2	;
if	102:4	106:4	2	(CheckForGcryptError (p_stream ,i_gcrypt_err ))
cond	102:9	102:53	3	CheckForGcryptError (p_stream ,i_gcrypt_err )
call	102:9	102:53	4	CheckForGcryptError
arg	102:30	102:38	5	p_stream
water	102:30	0:0	6	p_stream
arg	102:40	102:53	5	i_gcrypt_err
water	102:40	0:0	6	i_gcrypt_err
stmts	103:4	106:4	3	
water	103:4	0:0	4	{
water	104:8	0:0	4	i_err
op	104:14	0:0	4	=
water	104:16	0:0	4	VLC_EGENERIC
water	104:28	0:0	4	;
goto	105:8	105:18	4	error
water	105:13	0:0	5	error
water	106:4	0:0	4	}
water	108:4	0:0	2	i_gcrypt_err
op	108:17	0:0	2	=
call	108:19	109:67	2	gcry_cipher_setkey
arg	108:39	108:53	3	p_sys->aes_ctx
water	108:39	0:0	4	p_sys
op	108:44	0:0	4	->
water	108:46	0:0	4	aes_ctx
arg	108:55	108:72	3	p_sys->ps_aes_key
water	108:55	0:0	4	p_sys
op	108:60	0:0	4	->
water	108:62	0:0	4	ps_aes_key
arg	109:39	109:67	3	sizeof(p_sys->ps_aes_key)
op	109:39	0:0	4	sizeof
water	109:45	0:0	4	(
water	109:47	0:0	4	p_sys
op	109:52	0:0	4	->
water	109:54	0:0	4	ps_aes_key
water	109:65	0:0	4	)
water	109:68	0:0	2	;
if	110:4	114:4	2	(CheckForGcryptError (p_stream ,i_gcrypt_err ))
cond	110:9	110:53	3	CheckForGcryptError (p_stream ,i_gcrypt_err )
call	110:9	110:53	4	CheckForGcryptError
arg	110:30	110:38	5	p_stream
water	110:30	0:0	6	p_stream
arg	110:40	110:53	5	i_gcrypt_err
water	110:40	0:0	6	i_gcrypt_err
stmts	111:4	114:4	3	
water	111:4	0:0	4	{
water	112:8	0:0	4	i_err
op	112:14	0:0	4	=
water	112:16	0:0	4	VLC_EGENERIC
water	112:28	0:0	4	;
goto	113:8	113:18	4	error
water	113:13	0:0	5	error
water	114:4	0:0	4	}
water	116:4	0:0	2	i_err
op	116:10	0:0	2	=
call	116:12	116:57	2	AnnounceSDP
arg	116:25	116:31	3	p_this
water	116:25	0:0	4	p_this
arg	116:33	116:42	3	psz_local
water	116:33	0:0	4	psz_local
arg	116:44	116:57	3	i_session_id
water	116:44	0:0	4	i_session_id
water	116:58	0:0	2	;
if	117:4	118:18	2	(i_err != VLC_SUCCESS)
cond	117:9	117:18	3	i_err != VLC_SUCCESS
water	117:9	0:0	4	i_err
op	117:15	0:0	4	!=
water	117:18	0:0	4	VLC_SUCCESS
stmts	118:8	118:18	3	
goto	118:8	118:18	4	error
water	118:13	0:0	5	error
water	119:4	0:0	2	i_err
op	119:10	0:0	2	=
call	119:12	119:30	2	SendSetup
arg	119:23	119:30	3	p_this
water	119:23	0:0	4	p_this
water	119:31	0:0	2	;
if	120:4	121:18	2	(i_err != VLC_SUCCESS)
cond	120:9	120:18	3	i_err != VLC_SUCCESS
water	120:9	0:0	4	i_err
op	120:15	0:0	4	!=
water	120:18	0:0	4	VLC_SUCCESS
stmts	121:8	121:18	3	
goto	121:8	121:18	4	error
water	121:13	0:0	5	error
water	122:4	0:0	2	i_err
op	122:10	0:0	2	=
call	122:12	122:31	2	SendRecord
arg	122:24	122:31	3	p_this
water	122:24	0:0	4	p_this
water	122:32	0:0	2	;
if	123:4	124:18	2	(i_err != VLC_SUCCESS)
cond	123:9	123:18	3	i_err != VLC_SUCCESS
water	123:9	0:0	4	i_err
op	123:15	0:0	4	!=
water	123:18	0:0	4	VLC_SUCCESS
stmts	124:8	124:18	3	
goto	124:8	124:18	4	error
water	124:13	0:0	5	error
water	125:4	0:0	2	i_err
op	125:10	0:0	2	=
call	125:12	125:33	2	UpdateVolume
arg	125:26	125:33	3	p_this
water	125:26	0:0	4	p_this
water	125:34	0:0	2	;
if	126:4	127:18	2	(i_err != VLC_SUCCESS)
cond	126:9	126:18	3	i_err != VLC_SUCCESS
water	126:9	0:0	4	i_err
op	126:15	0:0	4	!=
water	126:18	0:0	4	VLC_SUCCESS
stmts	127:8	127:18	3	
goto	127:8	127:18	4	error
water	127:13	0:0	5	error
call	128:4	128:20	2	LogInfo
arg	128:13	128:20	3	p_this
water	128:13	0:0	4	p_this
water	128:21	0:0	2	;
water	130:4	0:0	2	p_sys
op	130:9	0:0	2	->
water	130:11	0:0	2	i_stream_fd
op	130:23	0:0	2	=
call	130:25	131:62	2	net_ConnectTCP
arg	130:41	130:49	3	p_stream
water	130:41	0:0	4	p_stream
arg	130:51	130:66	3	p_sys->psz_host
water	130:51	0:0	4	p_sys
op	130:56	0:0	4	->
water	130:58	0:0	4	psz_host
arg	131:41	131:62	3	p_sys->i_server_port
water	131:41	0:0	4	p_sys
op	131:46	0:0	4	->
water	131:48	0:0	4	i_server_port
water	131:63	0:0	2	;
if	132:4	139:4	2	(p_sys -> i_stream_fd < 0)
cond	132:9	132:30	3	p_sys -> i_stream_fd < 0
water	132:9	0:0	4	p_sys
op	132:14	0:0	4	->
water	132:16	0:0	4	i_stream_fd
op	132:28	0:0	4	<
water	132:30	0:0	4	0
stmts	133:4	139:4	3	
water	133:4	0:0	4	{
call	134:8	136:40	4	msg_Err
arg	134:17	134:23	5	p_this
water	134:17	0:0	6	p_this
arg	134:25	134:75	5	"Cannot establish stream connection to %s:%d (%s)"
water	134:25	0:0	6	"Cannot establish stream connection to %s:%d (%s)"
arg	135:17	135:32	5	p_sys->psz_host
water	135:17	0:0	6	p_sys
op	135:22	0:0	6	->
water	135:24	0:0	6	psz_host
arg	135:34	135:54	5	p_sys->i_server_port
water	135:34	0:0	6	p_sys
op	135:39	0:0	6	->
water	135:41	0:0	6	i_server_port
arg	136:17	136:40	5	vlc_strerror_c(errno)
call	136:17	136:37	6	vlc_strerror_c
arg	136:32	136:37	7	errno
water	136:32	0:0	8	errno
water	136:41	0:0	4	;
water	137:8	0:0	4	i_err
op	137:14	0:0	4	=
water	137:16	0:0	4	VLC_EGENERIC
water	137:28	0:0	4	;
goto	138:8	138:18	4	error
water	138:13	0:0	5	error
water	139:4	0:0	4	}
label	140:0	140:5	2	error :
call	141:4	141:21	2	free
arg	141:10	141:21	3	psz_pwfile
water	141:10	0:0	4	psz_pwfile
water	141:22	0:0	2	;
if	142:4	143:32	2	(i_err != VLC_SUCCESS)
cond	142:9	142:18	3	i_err != VLC_SUCCESS
water	142:9	0:0	4	i_err
op	142:15	0:0	4	!=
water	142:18	0:0	4	VLC_SUCCESS
stmts	143:8	143:32	3	
call	143:8	143:31	4	FreeSys
arg	143:17	143:23	5	p_this
water	143:17	0:0	6	p_this
arg	143:25	143:31	5	p_sys
water	143:25	0:0	6	p_sys
water	143:32	0:0	4	;
return	144:4	144:16	2	i_err
water	144:11	0:0	3	i_err

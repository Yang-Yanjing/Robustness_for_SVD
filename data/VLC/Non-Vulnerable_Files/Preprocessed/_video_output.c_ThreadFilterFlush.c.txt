func	2:0	16:0	0	static void	ThreadFilterFlush
params	2:29	0:0	1	
param	2:30	2:49	2	vout_thread_t *	vout
param	2:51	2:65	2	bool	is_locked
stmnts	4:4	15:47	1	
if	4:4	5:53	2	(vout -> p -> displayed . current)
cond	4:8	4:27	3	vout -> p -> displayed . current
water	4:8	0:0	4	vout
op	4:12	0:0	4	->
water	4:14	0:0	4	p
op	4:15	0:0	4	->
water	4:17	0:0	4	displayed
op	4:26	0:0	4	.
water	4:27	0:0	4	current
stmts	5:8	5:53	3	
call	5:8	5:52	4	picture_Release
arg	5:25	5:52	5	vout->p->displayed.current
water	5:25	0:0	6	vout
op	5:29	0:0	6	->
water	5:31	0:0	6	p
op	5:32	0:0	6	->
water	5:34	0:0	6	displayed
op	5:43	0:0	6	.
water	5:44	0:0	6	current
water	5:53	0:0	4	;
water	6:4	0:0	2	vout
op	6:8	0:0	2	->
water	6:10	0:0	2	p
op	6:11	0:0	2	->
water	6:13	0:0	2	displayed
op	6:22	0:0	2	.
water	6:23	0:0	2	current
op	6:31	0:0	2	=
water	6:33	0:0	2	NULL
water	6:37	0:0	2	;
if	7:4	8:50	2	(vout -> p -> displayed . next)
cond	7:8	7:27	3	vout -> p -> displayed . next
water	7:8	0:0	4	vout
op	7:12	0:0	4	->
water	7:14	0:0	4	p
op	7:15	0:0	4	->
water	7:17	0:0	4	displayed
op	7:26	0:0	4	.
water	7:27	0:0	4	next
stmts	8:8	8:50	3	
call	8:8	8:49	4	picture_Release
arg	8:25	8:49	5	vout->p->displayed.next
water	8:25	0:0	6	vout
op	8:29	0:0	6	->
water	8:31	0:0	6	p
op	8:32	0:0	6	->
water	8:34	0:0	6	displayed
op	8:43	0:0	6	.
water	8:44	0:0	6	next
water	8:50	0:0	4	;
water	9:4	0:0	2	vout
op	9:8	0:0	2	->
water	9:10	0:0	2	p
op	9:11	0:0	2	->
water	9:13	0:0	2	displayed
op	9:22	0:0	2	.
water	9:23	0:0	2	next
op	9:28	0:0	2	=
water	9:30	0:0	2	NULL
water	9:34	0:0	2	;
if	10:4	11:45	2	(! is_locked)
cond	10:8	10:9	3	! is_locked
op	10:8	0:0	4	!
water	10:9	0:0	4	is_locked
stmts	11:8	11:45	3	
call	11:8	11:44	4	vlc_mutex_lock
arg	11:23	11:44	5	&vout->p->filter.lock
op	11:23	0:0	6	&
water	11:24	0:0	6	vout
op	11:28	0:0	6	->
water	11:30	0:0	6	p
op	11:31	0:0	6	->
water	11:33	0:0	6	filter
op	11:39	0:0	6	.
water	11:40	0:0	6	lock
water	11:45	0:0	4	;
call	12:4	12:56	2	filter_chain_VideoFlush
arg	12:28	12:56	3	vout->p->filter.chain_static
water	12:28	0:0	4	vout
op	12:32	0:0	4	->
water	12:34	0:0	4	p
op	12:35	0:0	4	->
water	12:37	0:0	4	filter
op	12:43	0:0	4	.
water	12:44	0:0	4	chain_static
water	12:57	0:0	2	;
call	13:4	13:61	2	filter_chain_VideoFlush
arg	13:28	13:61	3	vout->p->filter.chain_interactive
water	13:28	0:0	4	vout
op	13:32	0:0	4	->
water	13:34	0:0	4	p
op	13:35	0:0	4	->
water	13:37	0:0	4	filter
op	13:43	0:0	4	.
water	13:44	0:0	4	chain_interactive
water	13:62	0:0	2	;
if	14:4	15:47	2	(! is_locked)
cond	14:8	14:9	3	! is_locked
op	14:8	0:0	4	!
water	14:9	0:0	4	is_locked
stmts	15:8	15:47	3	
call	15:8	15:46	4	vlc_mutex_unlock
arg	15:25	15:46	5	&vout->p->filter.lock
op	15:25	0:0	6	&
water	15:26	0:0	6	vout
op	15:30	0:0	6	->
water	15:32	0:0	6	p
op	15:33	0:0	6	->
water	15:35	0:0	6	filter
op	15:41	0:0	6	.
water	15:42	0:0	6	lock
water	15:47	0:0	4	;

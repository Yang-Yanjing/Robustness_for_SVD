func	2:0	62:0	0	static void	asmrp_print_sym
params	2:28	0:0	1	
param	2:29	2:39	2	asmrp_t *	p
stmnts	3:2	61:2	1	
call	3:2	3:20	2	printf
arg	3:10	3:20	3	"symbol: "
water	3:10	0:0	4	"symbol: "
water	3:21	0:0	2	;
switch	4:2	61:2	2	(p -> sym)
cond	4:10	4:13	3	p -> sym
water	4:10	0:0	4	p
op	4:11	0:0	4	->
water	4:13	0:0	4	sym
stmts	4:18	61:2	3	
water	4:18	0:0	4	{
label	5:2	5:21	4	case ASMRP_SYM_NONE :
call	6:4	6:20	4	printf
arg	6:12	6:20	5	"NONE\n"
water	6:12	0:0	6	"NONE\n"
water	6:21	0:0	4	;
break	7:4	7:9	4	
label	8:2	8:20	4	case ASMRP_SYM_EOF :
call	9:4	9:19	4	printf
arg	9:12	9:19	5	"EOF\n"
water	9:12	0:0	6	"EOF\n"
water	9:20	0:0	4	;
break	10:4	10:9	4	
label	11:2	11:20	4	case ASMRP_SYM_NUM :
call	12:4	12:30	4	printf
arg	12:12	12:22	5	"NUM %d\n"
water	12:12	0:0	6	"NUM %d\n"
arg	12:24	12:30	5	p->num
water	12:24	0:0	6	p
op	12:25	0:0	6	->
water	12:27	0:0	6	num
water	12:31	0:0	4	;
break	13:4	13:9	4	
label	14:2	14:19	4	case ASMRP_SYM_ID :
call	15:4	15:31	4	printf
arg	15:12	15:23	5	"ID '%s'\n"
water	15:12	0:0	6	"ID '%s'\n"
arg	15:25	15:31	5	p->str
water	15:25	0:0	6	p
op	15:26	0:0	6	->
water	15:28	0:0	6	str
water	15:32	0:0	4	;
break	16:4	16:9	4	
label	17:2	17:23	4	case ASMRP_SYM_STRING :
call	18:4	18:37	4	printf
arg	18:12	18:29	5	"STRING \"%s\"\n"
water	18:12	0:0	6	"STRING \"%s\"\n"
arg	18:31	18:37	5	p->str
water	18:31	0:0	6	p
op	18:32	0:0	6	->
water	18:34	0:0	6	str
water	18:38	0:0	4	;
break	19:4	19:9	4	
label	20:2	20:21	4	case ASMRP_SYM_HASH :
call	21:4	21:17	4	printf
arg	21:12	21:17	5	"#\n"
water	21:12	0:0	6	"#\n"
water	21:18	0:0	4	;
break	22:4	22:9	4	
label	23:2	23:26	4	case ASMRP_SYM_SEMICOLON :
call	24:4	24:17	4	printf
arg	24:12	24:17	5	";\n"
water	24:12	0:0	6	";\n"
water	24:18	0:0	4	;
break	25:4	25:9	4	
label	26:2	26:22	4	case ASMRP_SYM_COMMA :
call	27:4	27:17	4	printf
arg	27:12	27:17	5	",\n"
water	27:12	0:0	6	",\n"
water	27:18	0:0	4	;
break	28:4	28:9	4	
label	29:2	29:23	4	case ASMRP_SYM_EQUALS :
call	30:4	30:18	4	printf
arg	30:12	30:18	5	"==\n"
water	30:12	0:0	6	"==\n"
water	30:19	0:0	4	;
break	31:4	31:9	4	
label	32:2	32:20	4	case ASMRP_SYM_AND :
call	33:4	33:18	4	printf
arg	33:12	33:18	5	"&&\n"
water	33:12	0:0	6	"&&\n"
water	33:19	0:0	4	;
break	34:4	34:9	4	
label	35:2	35:19	4	case ASMRP_SYM_OR :
call	36:4	36:18	4	printf
arg	36:12	36:18	5	"||\n"
water	36:12	0:0	6	"||\n"
water	36:19	0:0	4	;
break	37:4	37:9	4	
label	38:2	38:21	4	case ASMRP_SYM_LESS :
call	39:4	39:17	4	printf
arg	39:12	39:17	5	"<\n"
water	39:12	0:0	6	"<\n"
water	39:18	0:0	4	;
break	40:4	40:9	4	
label	41:2	41:20	4	case ASMRP_SYM_LEQ :
call	42:4	42:18	4	printf
arg	42:12	42:18	5	"<=\n"
water	42:12	0:0	6	"<=\n"
water	42:19	0:0	4	;
break	43:4	43:9	4	
label	44:2	44:20	4	case ASMRP_SYM_GEQ :
call	45:4	45:18	4	printf
arg	45:12	45:18	5	">=\n"
water	45:12	0:0	6	">=\n"
water	45:19	0:0	4	;
break	46:4	46:9	4	
label	47:2	47:24	4	case ASMRP_SYM_GREATER :
call	48:4	48:17	4	printf
arg	48:12	48:17	5	">\n"
water	48:12	0:0	6	">\n"
water	48:18	0:0	4	;
break	49:4	49:9	4	
label	50:2	50:23	4	case ASMRP_SYM_DOLLAR :
call	51:4	51:17	4	printf
arg	51:12	51:17	5	"$\n"
water	51:12	0:0	6	"$\n"
water	51:18	0:0	4	;
break	52:4	52:9	4	
label	53:2	53:23	4	case ASMRP_SYM_LPAREN :
call	54:4	54:17	4	printf
arg	54:12	54:17	5	"(\n"
water	54:12	0:0	6	"(\n"
water	54:18	0:0	4	;
break	55:4	55:9	4	
label	56:2	56:23	4	case ASMRP_SYM_RPAREN :
call	57:4	57:17	4	printf
arg	57:12	57:17	5	")\n"
water	57:12	0:0	6	")\n"
water	57:18	0:0	4	;
break	58:4	58:9	4	
label	59:2	59:9	4	default :
call	60:4	60:41	4	printf
arg	60:12	60:33	5	"unknown symbol %d\n"
water	60:12	0:0	6	"unknown symbol %d\n"
arg	60:35	60:41	5	p->sym
water	60:35	0:0	6	p
op	60:36	0:0	6	->
water	60:38	0:0	6	sym
water	60:42	0:0	4	;
water	61:2	0:0	4	}
func	64:0	124:0	0	static void	asmrp_print_sym
params	64:28	0:0	1	
param	64:29	64:39	2	asmrp_t *	p
stmnts	65:2	123:2	1	
call	65:2	65:20	2	printf
arg	65:10	65:20	3	"symbol: "
water	65:10	0:0	4	"symbol: "
water	65:21	0:0	2	;
switch	66:2	123:2	2	(p -> sym)
cond	66:10	66:13	3	p -> sym
water	66:10	0:0	4	p
op	66:11	0:0	4	->
water	66:13	0:0	4	sym
stmts	66:18	123:2	3	
water	66:18	0:0	4	{
label	67:2	67:21	4	case ASMRP_SYM_NONE :
call	68:4	68:20	4	printf
arg	68:12	68:20	5	"NONE\n"
water	68:12	0:0	6	"NONE\n"
water	68:21	0:0	4	;
break	69:4	69:9	4	
label	70:2	70:20	4	case ASMRP_SYM_EOF :
call	71:4	71:19	4	printf
arg	71:12	71:19	5	"EOF\n"
water	71:12	0:0	6	"EOF\n"
water	71:20	0:0	4	;
break	72:4	72:9	4	
label	73:2	73:20	4	case ASMRP_SYM_NUM :
call	74:4	74:30	4	printf
arg	74:12	74:22	5	"NUM %d\n"
water	74:12	0:0	6	"NUM %d\n"
arg	74:24	74:30	5	p->num
water	74:24	0:0	6	p
op	74:25	0:0	6	->
water	74:27	0:0	6	num
water	74:31	0:0	4	;
break	75:4	75:9	4	
label	76:2	76:19	4	case ASMRP_SYM_ID :
call	77:4	77:31	4	printf
arg	77:12	77:23	5	"ID '%s'\n"
water	77:12	0:0	6	"ID '%s'\n"
arg	77:25	77:31	5	p->str
water	77:25	0:0	6	p
op	77:26	0:0	6	->
water	77:28	0:0	6	str
water	77:32	0:0	4	;
break	78:4	78:9	4	
label	79:2	79:23	4	case ASMRP_SYM_STRING :
call	80:4	80:37	4	printf
arg	80:12	80:29	5	"STRING \"%s\"\n"
water	80:12	0:0	6	"STRING \"%s\"\n"
arg	80:31	80:37	5	p->str
water	80:31	0:0	6	p
op	80:32	0:0	6	->
water	80:34	0:0	6	str
water	80:38	0:0	4	;
break	81:4	81:9	4	
label	82:2	82:21	4	case ASMRP_SYM_HASH :
call	83:4	83:17	4	printf
arg	83:12	83:17	5	"#\n"
water	83:12	0:0	6	"#\n"
water	83:18	0:0	4	;
break	84:4	84:9	4	
label	85:2	85:26	4	case ASMRP_SYM_SEMICOLON :
call	86:4	86:17	4	printf
arg	86:12	86:17	5	";\n"
water	86:12	0:0	6	";\n"
water	86:18	0:0	4	;
break	87:4	87:9	4	
label	88:2	88:22	4	case ASMRP_SYM_COMMA :
call	89:4	89:17	4	printf
arg	89:12	89:17	5	",\n"
water	89:12	0:0	6	",\n"
water	89:18	0:0	4	;
break	90:4	90:9	4	
label	91:2	91:23	4	case ASMRP_SYM_EQUALS :
call	92:4	92:18	4	printf
arg	92:12	92:18	5	"==\n"
water	92:12	0:0	6	"==\n"
water	92:19	0:0	4	;
break	93:4	93:9	4	
label	94:2	94:20	4	case ASMRP_SYM_AND :
call	95:4	95:18	4	printf
arg	95:12	95:18	5	"&&\n"
water	95:12	0:0	6	"&&\n"
water	95:19	0:0	4	;
break	96:4	96:9	4	
label	97:2	97:19	4	case ASMRP_SYM_OR :
call	98:4	98:18	4	printf
arg	98:12	98:18	5	"||\n"
water	98:12	0:0	6	"||\n"
water	98:19	0:0	4	;
break	99:4	99:9	4	
label	100:2	100:21	4	case ASMRP_SYM_LESS :
call	101:4	101:17	4	printf
arg	101:12	101:17	5	"<\n"
water	101:12	0:0	6	"<\n"
water	101:18	0:0	4	;
break	102:4	102:9	4	
label	103:2	103:20	4	case ASMRP_SYM_LEQ :
call	104:4	104:18	4	printf
arg	104:12	104:18	5	"<=\n"
water	104:12	0:0	6	"<=\n"
water	104:19	0:0	4	;
break	105:4	105:9	4	
label	106:2	106:20	4	case ASMRP_SYM_GEQ :
call	107:4	107:18	4	printf
arg	107:12	107:18	5	">=\n"
water	107:12	0:0	6	">=\n"
water	107:19	0:0	4	;
break	108:4	108:9	4	
label	109:2	109:24	4	case ASMRP_SYM_GREATER :
call	110:4	110:17	4	printf
arg	110:12	110:17	5	">\n"
water	110:12	0:0	6	">\n"
water	110:18	0:0	4	;
break	111:4	111:9	4	
label	112:2	112:23	4	case ASMRP_SYM_DOLLAR :
call	113:4	113:17	4	printf
arg	113:12	113:17	5	"$\n"
water	113:12	0:0	6	"$\n"
water	113:18	0:0	4	;
break	114:4	114:9	4	
label	115:2	115:23	4	case ASMRP_SYM_LPAREN :
call	116:4	116:17	4	printf
arg	116:12	116:17	5	"(\n"
water	116:12	0:0	6	"(\n"
water	116:18	0:0	4	;
break	117:4	117:9	4	
label	118:2	118:23	4	case ASMRP_SYM_RPAREN :
call	119:4	119:17	4	printf
arg	119:12	119:17	5	")\n"
water	119:12	0:0	6	")\n"
water	119:18	0:0	4	;
break	120:4	120:9	4	
label	121:2	121:9	4	default :
call	122:4	122:41	4	printf
arg	122:12	122:33	5	"unknown symbol %d\n"
water	122:12	0:0	6	"unknown symbol %d\n"
arg	122:35	122:41	5	p->sym
water	122:35	0:0	6	p
op	122:36	0:0	6	->
water	122:38	0:0	6	sym
water	122:42	0:0	4	;
water	123:2	0:0	4	}

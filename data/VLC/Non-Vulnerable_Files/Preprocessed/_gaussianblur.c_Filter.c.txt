func	2:0	103:0	0	static picture_t *	Filter
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:63	2	picture_t *	p_pic
stmnts	0:0	102:48	1	
decl	4:4	4:23	2	picture_t	*p_outpic
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
decl	6:4	6:15	2	int	i_plane
decl	7:4	7:34	2	const int	i_dim
op	7:20	0:0	2	=
water	7:22	0:0	2	p_sys
op	7:27	0:0	2	->
water	7:29	0:0	2	i_dim
decl	8:4	8:21	2	type_t	*pt_buffer
decl	9:4	9:20	2	type_t	*pt_scale
decl	10:4	10:58	2	const type_t	*pt_distribution
op	10:34	0:0	2	=
water	10:36	0:0	2	p_sys
op	10:41	0:0	2	->
water	10:43	0:0	2	pt_distribution
if	11:4	11:28	2	(! p_pic)
cond	11:8	11:9	3	! p_pic
op	11:8	0:0	4	!
water	11:9	0:0	4	p_pic
stmts	11:17	11:28	3	
return	11:17	11:28	4	NULL
water	11:24	0:0	5	NULL
water	12:4	0:0	2	p_outpic
op	12:13	0:0	2	=
call	12:15	12:43	2	filter_NewPicture
arg	12:34	12:43	3	p_filter
water	12:34	0:0	4	p_filter
water	12:44	0:0	2	;
if	13:4	17:4	2	(! p_outpic)
cond	13:8	13:9	3	! p_outpic
op	13:8	0:0	4	!
water	13:9	0:0	4	p_outpic
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
call	15:8	15:31	4	picture_Release
arg	15:25	15:31	5	p_pic
water	15:25	0:0	6	p_pic
water	15:32	0:0	4	;
return	16:8	16:19	4	NULL
water	16:15	0:0	5	NULL
water	17:4	0:0	4	}
if	18:4	23:4	2	(! p_sys -> pt_buffer)
cond	18:8	18:16	3	! p_sys -> pt_buffer
op	18:8	0:0	4	!
water	18:9	0:0	4	p_sys
op	18:14	0:0	4	->
water	18:16	0:0	4	pt_buffer
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	pt_buffer
op	20:25	0:0	4	=
call	20:27	22:76	4	realloc_or_free
arg	20:44	20:60	5	p_sys->pt_buffer
water	20:44	0:0	6	p_sys
op	20:49	0:0	6	->
water	20:51	0:0	6	pt_buffer
arg	21:31	22:76	5	p_pic->p[Y_PLANE].i_visible_lines*p_pic->p[Y_PLANE].i_pitch*sizeof(type_t)
water	21:31	0:0	6	p_pic
op	21:36	0:0	6	->
water	21:38	0:0	6	p
op	21:39	0:0	6	[
water	21:40	0:0	6	Y_PLANE
op	21:47	0:0	6	]
op	21:48	0:0	6	.
water	21:49	0:0	6	i_visible_lines
op	21:65	0:0	6	*
water	22:31	0:0	6	p_pic
op	22:36	0:0	6	->
water	22:38	0:0	6	p
op	22:39	0:0	6	[
water	22:40	0:0	6	Y_PLANE
op	22:47	0:0	6	]
op	22:48	0:0	6	.
water	22:49	0:0	6	i_pitch
op	22:57	0:0	6	*
op	22:59	0:0	6	sizeof
water	22:65	0:0	6	(
water	22:67	0:0	6	type_t
water	22:74	0:0	6	)
water	22:77	0:0	4	;
water	23:4	0:0	4	}
water	24:4	0:0	2	pt_buffer
op	24:14	0:0	2	=
water	24:16	0:0	2	p_sys
op	24:21	0:0	2	->
water	24:23	0:0	2	pt_buffer
water	24:32	0:0	2	;
if	25:4	54:4	2	(! p_sys -> pt_scale)
cond	25:8	25:16	3	! p_sys -> pt_scale
op	25:8	0:0	4	!
water	25:9	0:0	4	p_sys
op	25:14	0:0	4	->
water	25:16	0:0	4	pt_scale
stmts	26:4	54:4	3	
water	26:4	0:0	4	{
decl	27:8	27:69	4	const int	i_visible_lines
op	27:34	0:0	4	=
water	27:36	0:0	4	p_pic
op	27:41	0:0	4	->
water	27:43	0:0	4	p
op	27:44	0:0	4	[
water	27:45	0:0	4	Y_PLANE
op	27:52	0:0	4	]
op	27:53	0:0	4	.
water	27:54	0:0	4	i_visible_lines
decl	28:8	28:69	4	const int	i_visible_pitch
op	28:34	0:0	4	=
water	28:36	0:0	4	p_pic
op	28:41	0:0	4	->
water	28:43	0:0	4	p
op	28:44	0:0	4	[
water	28:45	0:0	4	Y_PLANE
op	28:52	0:0	4	]
op	28:53	0:0	4	.
water	28:54	0:0	4	i_visible_pitch
decl	29:8	29:53	4	const int	i_pitch
op	29:26	0:0	4	=
water	29:28	0:0	4	p_pic
op	29:33	0:0	4	->
water	29:35	0:0	4	p
op	29:36	0:0	4	[
water	29:37	0:0	4	Y_PLANE
op	29:44	0:0	4	]
op	29:45	0:0	4	.
water	29:46	0:0	4	i_pitch
decl	30:8	30:25	4	int	i_col
water	30:17	0:0	4	,
decl	30:8	30:25	4	int	i_line
water	31:8	0:0	4	p_sys
op	31:13	0:0	4	->
water	31:15	0:0	4	pt_scale
op	31:24	0:0	4	=
call	31:26	31:80	4	xmalloc
arg	31:35	31:80	5	i_visible_lines*i_pitch*sizeof(type_t)
water	31:35	0:0	6	i_visible_lines
op	31:51	0:0	6	*
water	31:53	0:0	6	i_pitch
op	31:61	0:0	6	*
op	31:63	0:0	6	sizeof
water	31:69	0:0	6	(
water	31:71	0:0	6	type_t
water	31:78	0:0	6	)
water	31:81	0:0	4	;
water	32:8	0:0	4	pt_scale
op	32:17	0:0	4	=
water	32:19	0:0	4	p_sys
op	32:24	0:0	4	->
water	32:26	0:0	4	pt_scale
water	32:34	0:0	4	;
for	33:8	53:8	4	(i_line = 0 ;i_line < i_visible_lines;i_line ++)
forinit	33:13	33:24	5	i_line = 0 ;
water	33:13	0:0	6	i_line
op	33:20	0:0	6	=
water	33:22	0:0	6	0
water	33:24	0:0	6	;
cond	33:26	33:35	5	i_line < i_visible_lines
water	33:26	0:0	6	i_line
op	33:33	0:0	6	<
water	33:35	0:0	6	i_visible_lines
forexpr	33:53	33:59	5	i_line ++
water	33:53	0:0	6	i_line
op	33:59	0:0	6	++
stmts	34:8	53:8	5	
water	34:8	0:0	6	{
for	35:12	52:12	6	(i_col = 0 ;i_col < i_visible_pitch;i_col ++)
forinit	35:17	35:26	7	i_col = 0 ;
water	35:17	0:0	8	i_col
op	35:23	0:0	8	=
water	35:25	0:0	8	0
water	35:26	0:0	8	;
cond	35:28	35:36	7	i_col < i_visible_pitch
water	35:28	0:0	8	i_col
op	35:34	0:0	8	<
water	35:36	0:0	8	i_visible_pitch
forexpr	35:54	35:59	7	i_col ++
water	35:54	0:0	8	i_col
op	35:59	0:0	8	++
stmts	36:12	52:12	7	
water	36:12	0:0	8	{
decl	37:16	37:24	8	int	x
water	37:21	0:0	8	,
decl	37:16	37:24	8	int	y
decl	38:16	38:34	8	type_t	t_value
op	38:31	0:0	8	=
water	38:33	0:0	8	0
for	39:16	50:16	8	(y =__MAX (- i_dim ,- i_line ) ;y <=__MIN (i_dim ,i_visible_lines - i_line - 1 );y ++)
forinit	39:21	39:49	9	y =__MAX (- i_dim ,- i_line ) ;
water	39:21	0:0	10	y
op	39:23	0:0	10	=
call	39:25	39:48	10	__MAX
arg	39:32	39:38	11	-i_dim
op	39:32	0:0	12	-
water	39:33	0:0	12	i_dim
arg	39:40	39:48	11	-i_line
op	39:40	0:0	12	-
water	39:41	0:0	12	i_line
water	39:49	0:0	10	;
cond	40:21	40:69	9	y <=__MIN (i_dim ,i_visible_lines - i_line - 1 )
water	40:21	0:0	10	y
op	40:23	0:0	10	<=
call	40:26	40:69	10	__MIN
arg	40:33	40:38	11	i_dim
water	40:33	0:0	12	i_dim
arg	40:40	40:69	11	i_visible_lines-i_line-1
water	40:40	0:0	12	i_visible_lines
op	40:56	0:0	12	-
water	40:58	0:0	12	i_line
op	40:65	0:0	12	-
water	40:67	0:0	12	1
forexpr	41:21	41:22	9	y ++
water	41:21	0:0	10	y
op	41:22	0:0	10	++
stmts	42:16	50:16	9	
water	42:16	0:0	10	{
for	43:20	49:20	10	(x =__MAX (- i_dim ,- i_col ) ;x <=__MIN (i_dim ,i_visible_pitch - i_col + 1 );x ++)
forinit	43:25	43:52	11	x =__MAX (- i_dim ,- i_col ) ;
water	43:25	0:0	12	x
op	43:27	0:0	12	=
call	43:29	43:51	12	__MAX
arg	43:36	43:42	13	-i_dim
op	43:36	0:0	14	-
water	43:37	0:0	14	i_dim
arg	43:44	43:51	13	-i_col
op	43:44	0:0	14	-
water	43:45	0:0	14	i_col
water	43:52	0:0	12	;
cond	44:25	44:72	11	x <=__MIN (i_dim ,i_visible_pitch - i_col + 1 )
water	44:25	0:0	12	x
op	44:27	0:0	12	<=
call	44:30	44:72	12	__MIN
arg	44:37	44:42	13	i_dim
water	44:37	0:0	14	i_dim
arg	44:44	44:72	13	i_visible_pitch-i_col+1
water	44:44	0:0	14	i_visible_pitch
op	44:60	0:0	14	-
water	44:62	0:0	14	i_col
op	44:68	0:0	14	+
water	44:70	0:0	14	1
forexpr	45:25	45:26	11	x ++
water	45:25	0:0	12	x
op	45:26	0:0	12	++
stmts	46:20	49:20	11	
water	46:20	0:0	12	{
water	47:24	0:0	12	t_value
op	47:32	0:0	12	+=
water	47:35	0:0	12	pt_distribution
op	47:50	0:0	12	[
water	47:51	0:0	12	y
op	47:52	0:0	12	+
water	47:53	0:0	12	i_dim
op	47:58	0:0	12	]
op	47:60	0:0	12	*
water	48:35	0:0	12	pt_distribution
op	48:50	0:0	12	[
water	48:51	0:0	12	x
op	48:52	0:0	12	+
water	48:53	0:0	12	i_dim
op	48:58	0:0	12	]
water	48:59	0:0	12	;
water	49:20	0:0	12	}
water	50:16	0:0	10	}
water	51:16	0:0	8	pt_scale
op	51:24	0:0	8	[
water	51:25	0:0	8	i_line
op	51:31	0:0	8	*
water	51:32	0:0	8	i_pitch
op	51:39	0:0	8	+
water	51:40	0:0	8	i_col
op	51:45	0:0	8	]
op	51:47	0:0	8	=
water	51:49	0:0	8	t_value
water	51:56	0:0	8	;
water	52:12	0:0	8	}
water	53:8	0:0	6	}
water	54:4	0:0	4	}
water	55:4	0:0	2	pt_scale
op	55:13	0:0	2	=
water	55:15	0:0	2	p_sys
op	55:20	0:0	2	->
water	55:22	0:0	2	pt_scale
water	55:30	0:0	2	;
for	56:4	101:4	2	(i_plane = 0 ;i_plane < p_pic -> i_planes;i_plane ++)
forinit	56:9	56:21	3	i_plane = 0 ;
water	56:9	0:0	4	i_plane
op	56:17	0:0	4	=
water	56:19	0:0	4	0
water	56:21	0:0	4	;
cond	56:23	56:40	3	i_plane < p_pic -> i_planes
water	56:23	0:0	4	i_plane
op	56:31	0:0	4	<
water	56:33	0:0	4	p_pic
op	56:38	0:0	4	->
water	56:40	0:0	4	i_planes
forexpr	56:51	56:58	3	i_plane ++
water	56:51	0:0	4	i_plane
op	56:58	0:0	4	++
stmts	57:4	101:4	3	
water	57:4	0:0	4	{
decl	58:8	58:50	4	uint8_t	*p_in
op	58:22	0:0	4	=
water	58:24	0:0	4	p_pic
op	58:29	0:0	4	->
water	58:31	0:0	4	p
op	58:32	0:0	4	[
water	58:33	0:0	4	i_plane
op	58:40	0:0	4	]
op	58:41	0:0	4	.
water	58:42	0:0	4	p_pixels
decl	59:8	59:54	4	uint8_t	*p_out
op	59:23	0:0	4	=
water	59:25	0:0	4	p_outpic
op	59:33	0:0	4	->
water	59:35	0:0	4	p
op	59:36	0:0	4	[
water	59:37	0:0	4	i_plane
op	59:44	0:0	4	]
op	59:45	0:0	4	.
water	59:46	0:0	4	p_pixels
decl	60:8	60:69	4	const int	i_visible_lines
op	60:34	0:0	4	=
water	60:36	0:0	4	p_pic
op	60:41	0:0	4	->
water	60:43	0:0	4	p
op	60:44	0:0	4	[
water	60:45	0:0	4	i_plane
op	60:52	0:0	4	]
op	60:53	0:0	4	.
water	60:54	0:0	4	i_visible_lines
decl	61:8	61:69	4	const int	i_visible_pitch
op	61:34	0:0	4	=
water	61:36	0:0	4	p_pic
op	61:41	0:0	4	->
water	61:43	0:0	4	p
op	61:44	0:0	4	[
water	61:45	0:0	4	i_plane
op	61:52	0:0	4	]
op	61:53	0:0	4	.
water	61:54	0:0	4	i_visible_pitch
decl	62:8	62:56	4	const int	i_in_pitch
op	62:29	0:0	4	=
water	62:31	0:0	4	p_pic
op	62:36	0:0	4	->
water	62:38	0:0	4	p
op	62:39	0:0	4	[
water	62:40	0:0	4	i_plane
op	62:47	0:0	4	]
op	62:48	0:0	4	.
water	62:49	0:0	4	i_pitch
decl	63:8	63:25	4	int	i_line
water	63:18	0:0	4	,
decl	63:8	63:25	4	int	i_col
decl	64:8	64:80	4	const int	x_factor
op	64:27	0:0	4	=
water	64:29	0:0	4	p_pic
op	64:34	0:0	4	->
water	64:36	0:0	4	p
op	64:37	0:0	4	[
water	64:38	0:0	4	Y_PLANE
op	64:45	0:0	4	]
op	64:46	0:0	4	.
water	64:47	0:0	4	i_visible_pitch
op	64:62	0:0	4	/
water	64:63	0:0	4	i_visible_pitch
op	64:78	0:0	4	-
water	64:79	0:0	4	1
decl	65:8	65:80	4	const int	y_factor
op	65:27	0:0	4	=
water	65:29	0:0	4	p_pic
op	65:34	0:0	4	->
water	65:36	0:0	4	p
op	65:37	0:0	4	[
water	65:38	0:0	4	Y_PLANE
op	65:45	0:0	4	]
op	65:46	0:0	4	.
water	65:47	0:0	4	i_visible_lines
op	65:62	0:0	4	/
water	65:63	0:0	4	i_visible_lines
op	65:78	0:0	4	-
water	65:79	0:0	4	1
for	66:8	82:8	4	(i_line = 0 ;i_line < i_visible_lines;i_line ++)
forinit	66:13	66:24	5	i_line = 0 ;
water	66:13	0:0	6	i_line
op	66:20	0:0	6	=
water	66:22	0:0	6	0
water	66:24	0:0	6	;
cond	66:26	66:35	5	i_line < i_visible_lines
water	66:26	0:0	6	i_line
op	66:33	0:0	6	<
water	66:35	0:0	6	i_visible_lines
forexpr	66:53	66:59	5	i_line ++
water	66:53	0:0	6	i_line
op	66:59	0:0	6	++
stmts	67:8	82:8	5	
water	67:8	0:0	6	{
for	68:12	81:12	6	(i_col = 0 ;i_col < i_visible_pitch;i_col ++)
forinit	68:17	68:26	7	i_col = 0 ;
water	68:17	0:0	8	i_col
op	68:23	0:0	8	=
water	68:25	0:0	8	0
water	68:26	0:0	8	;
cond	68:28	68:36	7	i_col < i_visible_pitch
water	68:28	0:0	8	i_col
op	68:34	0:0	8	<
water	68:36	0:0	8	i_visible_pitch
forexpr	68:54	68:59	7	i_col ++
water	68:54	0:0	8	i_col
op	68:59	0:0	8	++
stmts	69:12	81:12	7	
water	69:12	0:0	8	{
decl	70:16	70:34	8	type_t	t_value
op	70:31	0:0	8	=
water	70:33	0:0	8	0
decl	71:16	71:21	8	int	x
decl	72:16	72:53	8	const int	c
op	72:28	0:0	8	=
water	72:30	0:0	8	i_line
op	72:36	0:0	8	*
water	72:37	0:0	8	i_in_pitch
op	72:47	0:0	8	+
water	72:48	0:0	8	i_col
for	73:16	79:16	8	(x =__MAX (- i_dim ,- i_col * ( x_factor + 1 ) ) ;x <=__MIN (i_dim ,( i_visible_pitch - i_col ) * ( x_factor + 1 ) + 1 );x ++)
forinit	73:21	73:61	9	x =__MAX (- i_dim ,- i_col * ( x_factor + 1 ) ) ;
water	73:21	0:0	10	x
op	73:23	0:0	10	=
call	73:25	73:60	10	__MAX
arg	73:32	73:38	11	-i_dim
op	73:32	0:0	12	-
water	73:33	0:0	12	i_dim
arg	73:40	73:60	11	-i_col*(x_factor+1)
op	73:40	0:0	12	-
water	73:41	0:0	12	i_col
op	73:46	0:0	12	*
water	73:47	0:0	12	(
water	73:48	0:0	12	x_factor
op	73:56	0:0	12	+
water	73:57	0:0	12	1
water	73:58	0:0	12	)
water	73:61	0:0	10	;
cond	74:21	74:83	9	x <=__MIN (i_dim ,( i_visible_pitch - i_col ) * ( x_factor + 1 ) + 1 )
water	74:21	0:0	10	x
op	74:23	0:0	10	<=
call	74:26	74:83	10	__MIN
arg	74:33	74:38	11	i_dim
water	74:33	0:0	12	i_dim
arg	74:40	74:83	11	(i_visible_pitch-i_col)*(x_factor+1)+1
water	74:40	0:0	12	(
water	74:41	0:0	12	i_visible_pitch
op	74:57	0:0	12	-
water	74:59	0:0	12	i_col
water	74:64	0:0	12	)
op	74:65	0:0	12	*
water	74:66	0:0	12	(
water	74:67	0:0	12	x_factor
op	74:75	0:0	12	+
water	74:76	0:0	12	1
water	74:77	0:0	12	)
op	74:79	0:0	12	+
water	74:81	0:0	12	1
forexpr	75:21	75:22	9	x ++
water	75:21	0:0	10	x
op	75:22	0:0	10	++
stmts	76:16	79:16	9	
water	76:16	0:0	10	{
water	77:20	0:0	10	t_value
op	77:28	0:0	10	+=
water	77:31	0:0	10	pt_distribution
op	77:46	0:0	10	[
water	77:47	0:0	10	x
op	77:48	0:0	10	+
water	77:49	0:0	10	i_dim
op	77:54	0:0	10	]
op	77:56	0:0	10	*
water	78:31	0:0	10	p_in
op	78:35	0:0	10	[
water	78:36	0:0	10	c
op	78:37	0:0	10	+
water	78:38	0:0	10	(
water	78:39	0:0	10	x
op	78:40	0:0	10	>>
water	78:42	0:0	10	x_factor
water	78:50	0:0	10	)
op	78:51	0:0	10	]
water	78:52	0:0	10	;
water	79:16	0:0	10	}
water	80:16	0:0	8	pt_buffer
op	80:25	0:0	8	[
water	80:26	0:0	8	c
op	80:27	0:0	8	]
op	80:29	0:0	8	=
water	80:31	0:0	8	t_value
water	80:38	0:0	8	;
water	81:12	0:0	8	}
water	82:8	0:0	6	}
for	83:8	100:8	4	(i_line = 0 ;i_line < i_visible_lines;i_line ++)
forinit	83:13	83:24	5	i_line = 0 ;
water	83:13	0:0	6	i_line
op	83:20	0:0	6	=
water	83:22	0:0	6	0
water	83:24	0:0	6	;
cond	83:26	83:35	5	i_line < i_visible_lines
water	83:26	0:0	6	i_line
op	83:33	0:0	6	<
water	83:35	0:0	6	i_visible_lines
forexpr	83:53	83:59	5	i_line ++
water	83:53	0:0	6	i_line
op	83:59	0:0	6	++
stmts	84:8	100:8	5	
water	84:8	0:0	6	{
for	85:12	99:12	6	(i_col = 0 ;i_col < i_visible_pitch;i_col ++)
forinit	85:17	85:26	7	i_col = 0 ;
water	85:17	0:0	8	i_col
op	85:23	0:0	8	=
water	85:25	0:0	8	0
water	85:26	0:0	8	;
cond	85:28	85:36	7	i_col < i_visible_pitch
water	85:28	0:0	8	i_col
op	85:34	0:0	8	<
water	85:36	0:0	8	i_visible_pitch
forexpr	85:54	85:59	7	i_col ++
water	85:54	0:0	8	i_col
op	85:59	0:0	8	++
stmts	86:12	99:12	7	
water	86:12	0:0	8	{
decl	87:16	87:34	8	type_t	t_value
op	87:31	0:0	8	=
water	87:33	0:0	8	0
decl	88:16	88:21	8	int	y
decl	89:16	89:53	8	const int	c
op	89:28	0:0	8	=
water	89:30	0:0	8	i_line
op	89:36	0:0	8	*
water	89:37	0:0	8	i_in_pitch
op	89:47	0:0	8	+
water	89:48	0:0	8	i_col
for	90:16	96:16	8	(y =__MAX (- i_dim ,( - i_line ) * ( y_factor + 1 ) ) ;y <=__MIN (i_dim ,( i_visible_lines - i_line ) * ( y_factor + 1 ) - 1 );y ++)
forinit	90:21	90:64	9	y =__MAX (- i_dim ,( - i_line ) * ( y_factor + 1 ) ) ;
water	90:21	0:0	10	y
op	90:23	0:0	10	=
call	90:25	90:63	10	__MAX
arg	90:32	90:38	11	-i_dim
op	90:32	0:0	12	-
water	90:33	0:0	12	i_dim
arg	90:40	90:63	11	(-i_line)*(y_factor+1)
water	90:40	0:0	12	(
op	90:41	0:0	12	-
water	90:42	0:0	12	i_line
water	90:48	0:0	12	)
op	90:49	0:0	12	*
water	90:50	0:0	12	(
water	90:51	0:0	12	y_factor
op	90:59	0:0	12	+
water	90:60	0:0	12	1
water	90:61	0:0	12	)
water	90:64	0:0	10	;
cond	91:21	91:84	9	y <=__MIN (i_dim ,( i_visible_lines - i_line ) * ( y_factor + 1 ) - 1 )
water	91:21	0:0	10	y
op	91:23	0:0	10	<=
call	91:26	91:84	10	__MIN
arg	91:33	91:38	11	i_dim
water	91:33	0:0	12	i_dim
arg	91:40	91:84	11	(i_visible_lines-i_line)*(y_factor+1)-1
water	91:40	0:0	12	(
water	91:41	0:0	12	i_visible_lines
op	91:57	0:0	12	-
water	91:59	0:0	12	i_line
water	91:65	0:0	12	)
op	91:66	0:0	12	*
water	91:67	0:0	12	(
water	91:68	0:0	12	y_factor
op	91:76	0:0	12	+
water	91:77	0:0	12	1
water	91:78	0:0	12	)
op	91:80	0:0	12	-
water	91:82	0:0	12	1
forexpr	92:21	92:22	9	y ++
water	92:21	0:0	10	y
op	92:22	0:0	10	++
stmts	93:16	96:16	9	
water	93:16	0:0	10	{
water	94:20	0:0	10	t_value
op	94:28	0:0	10	+=
water	94:31	0:0	10	pt_distribution
op	94:46	0:0	10	[
water	94:47	0:0	10	y
op	94:48	0:0	10	+
water	94:49	0:0	10	i_dim
op	94:54	0:0	10	]
op	94:56	0:0	10	*
water	95:31	0:0	10	pt_buffer
op	95:40	0:0	10	[
water	95:41	0:0	10	c
op	95:42	0:0	10	+
water	95:43	0:0	10	(
water	95:44	0:0	10	y
op	95:45	0:0	10	>>
water	95:47	0:0	10	y_factor
water	95:55	0:0	10	)
op	95:56	0:0	10	*
water	95:57	0:0	10	i_in_pitch
op	95:67	0:0	10	]
water	95:68	0:0	10	;
water	96:16	0:0	10	}
decl	97:16	97:108	8	const type_t	t_scale
op	97:37	0:0	8	=
water	97:39	0:0	8	pt_scale
op	97:47	0:0	8	[
water	97:48	0:0	8	(
water	97:49	0:0	8	i_line
op	97:55	0:0	8	<<
water	97:57	0:0	8	y_factor
water	97:65	0:0	8	)
op	97:66	0:0	8	*
water	97:67	0:0	8	(
water	97:68	0:0	8	i_in_pitch
op	97:78	0:0	8	<<
water	97:80	0:0	8	x_factor
water	97:88	0:0	8	)
op	97:89	0:0	8	+
water	97:90	0:0	8	(
water	97:91	0:0	8	i_col
op	97:96	0:0	8	<<
water	97:98	0:0	8	x_factor
water	97:106	0:0	8	)
op	97:107	0:0	8	]
water	98:16	0:0	8	p_out
op	98:21	0:0	8	[
water	98:22	0:0	8	i_line
op	98:29	0:0	8	*
water	98:31	0:0	8	p_outpic
op	98:39	0:0	8	->
water	98:41	0:0	8	p
op	98:42	0:0	8	[
water	98:43	0:0	8	i_plane
op	98:50	0:0	8	]
op	98:51	0:0	8	.
water	98:52	0:0	8	i_pitch
op	98:60	0:0	8	+
water	98:62	0:0	8	i_col
op	98:67	0:0	8	]
op	98:69	0:0	8	=
call	98:71	98:98	8	(uint8_t)
arg	98:81	98:98	9	t_value/t_scale
water	98:81	0:0	10	t_value
op	98:89	0:0	10	/
water	98:91	0:0	10	t_scale
water	98:99	0:0	8	;
water	99:12	0:0	8	}
water	100:8	0:0	6	}
water	101:4	0:0	4	}
return	102:4	102:48	2	CopyInfoAndRelease(p_outpic,p_pic)
call	102:11	102:47	3	CopyInfoAndRelease
arg	102:31	102:39	4	p_outpic
water	102:31	0:0	5	p_outpic
arg	102:41	102:47	4	p_pic
water	102:41	0:0	5	p_pic

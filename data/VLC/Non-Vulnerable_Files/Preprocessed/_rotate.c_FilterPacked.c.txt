func	2:0	91:0	0	static picture_t *	FilterPacked
params	2:30	0:0	1	
param	2:32	2:50	2	filter_t *	p_filter
param	2:52	2:69	2	picture_t *	p_pic
stmnts	0:0	90:48	1	
decl	4:4	4:23	2	picture_t	*p_outpic
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
if	6:4	6:28	2	(! p_pic)
cond	6:8	6:9	3	! p_pic
op	6:8	0:0	4	!
water	6:9	0:0	4	p_pic
stmts	6:17	6:28	3	
return	6:17	6:28	4	NULL
water	6:24	0:0	5	NULL
decl	7:4	7:42	2	int	i_u_offset
water	7:18	0:0	2	,
decl	7:4	7:42	2	int	i_v_offset
water	7:30	0:0	2	,
decl	7:4	7:42	2	int	i_y_offset
if	8:4	15:4	2	(GetPackedYuvOffsets (p_pic -> format . i_chroma ,& i_y_offset ,& i_u_offset ,& i_v_offset ) != VLC_SUCCESS)
cond	8:8	9:59	3	GetPackedYuvOffsets (p_pic -> format . i_chroma ,& i_y_offset ,& i_u_offset ,& i_v_offset ) != VLC_SUCCESS
call	8:8	9:54	4	GetPackedYuvOffsets
arg	8:29	8:51	5	p_pic->format.i_chroma
water	8:29	0:0	6	p_pic
op	8:34	0:0	6	->
water	8:36	0:0	6	format
op	8:42	0:0	6	.
water	8:43	0:0	6	i_chroma
arg	8:53	8:64	5	&i_y_offset
op	8:53	0:0	6	&
water	8:54	0:0	6	i_y_offset
arg	9:29	9:40	5	&i_u_offset
op	9:29	0:0	6	&
water	9:30	0:0	6	i_u_offset
arg	9:42	9:54	5	&i_v_offset
op	9:42	0:0	6	&
water	9:43	0:0	6	i_v_offset
op	9:56	0:0	4	!=
water	9:59	0:0	4	VLC_SUCCESS
stmts	10:4	15:4	3	
water	10:4	0:0	4	{
call	11:8	12:51	4	msg_Warn
arg	11:18	11:26	5	p_filter
water	11:18	0:0	6	p_filter
arg	11:28	11:62	5	"Unsupported input chroma (%4.4s)"
water	11:28	0:0	6	"Unsupported input chroma (%4.4s)"
arg	12:18	12:51	5	(char*)&(p_pic->format.i_chroma)
water	12:18	0:0	6	(
water	12:19	0:0	6	char
op	12:23	0:0	6	*
water	12:24	0:0	6	)
op	12:25	0:0	6	&
water	12:26	0:0	6	(
water	12:27	0:0	6	p_pic
op	12:32	0:0	6	->
water	12:34	0:0	6	format
op	12:40	0:0	6	.
water	12:41	0:0	6	i_chroma
water	12:49	0:0	6	)
water	12:52	0:0	4	;
call	13:8	13:31	4	picture_Release
arg	13:25	13:31	5	p_pic
water	13:25	0:0	6	p_pic
water	13:32	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
water	16:4	0:0	2	p_outpic
op	16:13	0:0	2	=
call	16:15	16:43	2	filter_NewPicture
arg	16:34	16:43	3	p_filter
water	16:34	0:0	4	p_filter
water	16:44	0:0	2	;
if	17:4	21:4	2	(! p_outpic)
cond	17:8	17:9	3	! p_outpic
op	17:8	0:0	4	!
water	17:9	0:0	4	p_outpic
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
call	19:8	19:31	4	picture_Release
arg	19:25	19:31	5	p_pic
water	19:25	0:0	6	p_pic
water	19:32	0:0	4	;
return	20:8	20:19	4	NULL
water	20:15	0:0	5	NULL
water	21:4	0:0	4	}
decl	22:4	22:60	2	const int	i_visible_pitch
op	22:30	0:0	2	=
water	22:32	0:0	2	p_pic
op	22:37	0:0	2	->
water	22:39	0:0	2	p
op	22:40	0:0	2	->
water	22:42	0:0	2	i_visible_pitch
op	22:57	0:0	2	>>
water	22:59	0:0	2	1
decl	23:4	23:57	2	const int	i_visible_lines
op	23:30	0:0	2	=
water	23:32	0:0	2	p_pic
op	23:37	0:0	2	->
water	23:39	0:0	2	p
op	23:40	0:0	2	->
water	23:42	0:0	2	i_visible_lines
decl	24:4	24:57	2	const uint8_t	*p_in
op	24:26	0:0	2	=
water	24:28	0:0	2	p_pic
op	24:33	0:0	2	->
water	24:35	0:0	2	p
op	24:36	0:0	2	->
water	24:38	0:0	2	p_pixels
op	24:46	0:0	2	+
water	24:47	0:0	2	i_y_offset
decl	25:4	25:57	2	const uint8_t	*p_in_u
op	25:26	0:0	2	=
water	25:28	0:0	2	p_pic
op	25:33	0:0	2	->
water	25:35	0:0	2	p
op	25:36	0:0	2	->
water	25:38	0:0	2	p_pixels
op	25:46	0:0	2	+
water	25:47	0:0	2	i_u_offset
decl	26:4	26:57	2	const uint8_t	*p_in_v
op	26:26	0:0	2	=
water	26:28	0:0	2	p_pic
op	26:33	0:0	2	->
water	26:35	0:0	2	p
op	26:36	0:0	2	->
water	26:38	0:0	2	p_pixels
op	26:46	0:0	2	+
water	26:47	0:0	2	i_v_offset
decl	27:4	27:45	2	const int	i_in_pitch
op	27:26	0:0	2	=
water	27:28	0:0	2	p_pic
op	27:33	0:0	2	->
water	27:35	0:0	2	p
op	27:36	0:0	2	->
water	27:38	0:0	2	i_pitch
decl	28:4	28:55	2	uint8_t	*p_out
op	28:21	0:0	2	=
water	28:23	0:0	2	p_outpic
op	28:31	0:0	2	->
water	28:33	0:0	2	p
op	28:34	0:0	2	->
water	28:36	0:0	2	p_pixels
op	28:44	0:0	2	+
water	28:45	0:0	2	i_y_offset
decl	29:4	29:55	2	uint8_t	*p_out_u
op	29:21	0:0	2	=
water	29:23	0:0	2	p_outpic
op	29:31	0:0	2	->
water	29:33	0:0	2	p
op	29:34	0:0	2	->
water	29:36	0:0	2	p_pixels
op	29:44	0:0	2	+
water	29:45	0:0	2	i_u_offset
decl	30:4	30:55	2	uint8_t	*p_out_v
op	30:21	0:0	2	=
water	30:23	0:0	2	p_outpic
op	30:31	0:0	2	->
water	30:33	0:0	2	p
op	30:34	0:0	2	->
water	30:36	0:0	2	p_pixels
op	30:44	0:0	2	+
water	30:45	0:0	2	i_v_offset
decl	31:4	31:48	2	const int	i_out_pitch
op	31:26	0:0	2	=
water	31:28	0:0	2	p_outpic
op	31:36	0:0	2	->
water	31:38	0:0	2	p
op	31:39	0:0	2	->
water	31:41	0:0	2	i_pitch
decl	32:4	32:48	2	const int	i_line_center
op	32:28	0:0	2	=
water	32:30	0:0	2	i_visible_lines
op	32:45	0:0	2	>>
water	32:47	0:0	2	1
decl	33:4	33:48	2	const int	i_col_center
op	33:28	0:0	2	=
water	33:30	0:0	2	i_visible_pitch
op	33:45	0:0	2	>>
water	33:47	0:0	2	1
if	34:4	38:4	2	(p_sys -> p_motion != NULL)
cond	34:8	34:27	3	p_sys -> p_motion != NULL
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	p_motion
op	34:24	0:0	4	!=
water	34:27	0:0	4	NULL
stmts	35:4	38:4	3	
water	35:4	0:0	4	{
decl	36:8	36:57	4	int	i_angle
op	36:20	0:0	4	=
call	36:22	36:56	5	motion_get_angle
arg	36:40	36:56	6	p_sys->p_motion
water	36:40	0:0	7	p_sys
op	36:45	0:0	7	->
water	36:47	0:0	7	p_motion
call	37:8	37:43	4	store_trigo
arg	37:21	37:26	5	p_sys
water	37:21	0:0	6	p_sys
arg	37:28	37:43	5	i_angle/20.f
water	37:28	0:0	6	i_angle
op	37:36	0:0	6	/
water	37:38	0:0	6	20
op	37:40	0:0	6	.
water	37:41	0:0	6	f
water	37:44	0:0	4	;
water	38:4	0:0	4	}
decl	39:4	39:20	2	int	i_sin
water	39:13	0:0	2	,
decl	39:4	39:20	2	int	i_cos
call	40:4	40:39	2	fetch_trigo
arg	40:17	40:22	3	p_sys
water	40:17	0:0	4	p_sys
arg	40:24	40:30	3	&i_sin
op	40:24	0:0	4	&
water	40:25	0:0	4	i_sin
arg	40:32	40:39	3	&i_cos
op	40:32	0:0	4	&
water	40:33	0:0	4	i_cos
water	40:40	0:0	2	;
decl	41:4	41:21	2	int	i_col
water	41:13	0:0	2	,
decl	41:4	41:21	2	int	i_line
for	42:4	89:4	2	(i_line = 0 ;i_line < i_visible_lines;i_line ++)
forinit	42:9	42:19	3	i_line = 0 ;
water	42:9	0:0	4	i_line
op	42:16	0:0	4	=
water	42:18	0:0	4	0
water	42:19	0:0	4	;
cond	42:21	42:30	3	i_line < i_visible_lines
water	42:21	0:0	4	i_line
op	42:28	0:0	4	<
water	42:30	0:0	4	i_visible_lines
forexpr	42:47	42:53	3	i_line ++
water	42:47	0:0	4	i_line
op	42:53	0:0	4	++
stmts	43:4	89:4	3	
water	43:4	0:0	4	{
for	44:8	88:8	4	(i_col = 0 ;i_col < i_visible_pitch;i_col ++)
forinit	44:13	44:22	5	i_col = 0 ;
water	44:13	0:0	6	i_col
op	44:19	0:0	6	=
water	44:21	0:0	6	0
water	44:22	0:0	6	;
cond	44:24	44:32	5	i_col < i_visible_pitch
water	44:24	0:0	6	i_col
op	44:30	0:0	6	<
water	44:32	0:0	6	i_visible_pitch
forexpr	44:49	44:54	5	i_col ++
water	44:49	0:0	6	i_col
op	44:54	0:0	6	++
stmts	45:8	88:8	5	
water	45:8	0:0	6	{
decl	46:12	46:27	6	int	i_line_orig
decl	47:12	47:26	6	int	i_col_orig
water	49:12	0:0	6	i_line_orig
op	49:24	0:0	6	=
water	49:26	0:0	6	i_line_center
op	49:40	0:0	6	+
water	50:16	0:0	6	(
water	50:18	0:0	6	(
water	50:20	0:0	6	i_sin
op	50:26	0:0	6	*
water	50:28	0:0	6	(
water	50:30	0:0	6	i_col
op	50:36	0:0	6	-
water	50:38	0:0	6	i_col_center
water	50:51	0:0	6	)
op	51:18	0:0	6	+
water	51:20	0:0	6	i_cos
op	51:26	0:0	6	*
water	51:28	0:0	6	(
water	51:30	0:0	6	i_line
op	51:37	0:0	6	-
water	51:39	0:0	6	i_line_center
water	51:53	0:0	6	)
water	51:55	0:0	6	)
op	51:56	0:0	6	>>
water	51:58	0:0	6	12
water	51:61	0:0	6	)
water	51:62	0:0	6	;
water	52:12	0:0	6	i_col_orig
op	52:23	0:0	6	=
water	52:25	0:0	6	i_col_center
op	52:38	0:0	6	+
water	53:16	0:0	6	(
water	53:18	0:0	6	(
water	53:20	0:0	6	i_cos
op	53:26	0:0	6	*
water	53:28	0:0	6	(
water	53:30	0:0	6	i_col
op	53:36	0:0	6	-
water	53:38	0:0	6	i_col_center
water	53:51	0:0	6	)
op	54:18	0:0	6	-
water	54:20	0:0	6	i_sin
op	54:26	0:0	6	*
water	54:28	0:0	6	(
water	54:30	0:0	6	i_line
op	54:37	0:0	6	-
water	54:39	0:0	6	i_line_center
water	54:53	0:0	6	)
water	54:55	0:0	6	)
op	54:56	0:0	6	>>
water	54:58	0:0	6	12
water	54:61	0:0	6	)
water	54:62	0:0	6	;
if	55:12	62:12	6	(0 <= i_col_orig && i_col_orig < i_visible_pitch && 0 <= i_line_orig && i_line_orig < i_visible_lines)
cond	55:16	56:50	7	0 <= i_col_orig && i_col_orig < i_visible_pitch && 0 <= i_line_orig && i_line_orig < i_visible_lines
water	55:16	0:0	8	0
op	55:18	0:0	8	<=
water	55:21	0:0	8	i_col_orig
op	55:32	0:0	8	&&
water	55:35	0:0	8	i_col_orig
op	55:46	0:0	8	<
water	55:48	0:0	8	i_visible_pitch
op	56:13	0:0	8	&&
water	56:16	0:0	8	0
op	56:18	0:0	8	<=
water	56:21	0:0	8	i_line_orig
op	56:33	0:0	8	&&
water	56:36	0:0	8	i_line_orig
op	56:48	0:0	8	<
water	56:50	0:0	8	i_visible_lines
stmts	57:12	62:12	7	
water	57:12	0:0	8	{
water	58:16	0:0	8	p_out
op	58:21	0:0	8	[
water	58:22	0:0	8	i_line
op	58:28	0:0	8	*
water	58:29	0:0	8	i_out_pitch
op	58:40	0:0	8	+
water	58:41	0:0	8	2
op	58:42	0:0	8	*
water	58:43	0:0	8	i_col
op	58:48	0:0	8	]
op	58:50	0:0	8	=
water	58:52	0:0	8	p_in
op	58:56	0:0	8	[
water	58:57	0:0	8	i_line_orig
op	58:68	0:0	8	*
water	58:69	0:0	8	i_in_pitch
op	58:79	0:0	8	+
water	58:80	0:0	8	2
op	58:81	0:0	8	*
water	58:82	0:0	8	i_col_orig
op	58:92	0:0	8	]
water	58:93	0:0	8	;
water	59:16	0:0	8	i_col_orig
op	59:27	0:0	8	/=
water	59:30	0:0	8	2
water	59:31	0:0	8	;
water	60:16	0:0	8	p_out_u
op	60:23	0:0	8	[
water	60:24	0:0	8	i_line
op	60:30	0:0	8	*
water	60:31	0:0	8	i_out_pitch
op	60:42	0:0	8	+
water	60:43	0:0	8	2
op	60:44	0:0	8	*
water	60:45	0:0	8	i_col
op	60:50	0:0	8	]
op	60:52	0:0	8	=
water	60:54	0:0	8	p_in_u
op	60:60	0:0	8	[
water	60:61	0:0	8	i_line_orig
op	60:72	0:0	8	*
water	60:73	0:0	8	i_in_pitch
op	60:83	0:0	8	+
water	60:84	0:0	8	4
op	60:85	0:0	8	*
water	60:86	0:0	8	i_col_orig
op	60:96	0:0	8	]
water	60:97	0:0	8	;
water	61:16	0:0	8	p_out_v
op	61:23	0:0	8	[
water	61:24	0:0	8	i_line
op	61:30	0:0	8	*
water	61:31	0:0	8	i_out_pitch
op	61:42	0:0	8	+
water	61:43	0:0	8	2
op	61:44	0:0	8	*
water	61:45	0:0	8	i_col
op	61:50	0:0	8	]
op	61:52	0:0	8	=
water	61:54	0:0	8	p_in_v
op	61:60	0:0	8	[
water	61:61	0:0	8	i_line_orig
op	61:72	0:0	8	*
water	61:73	0:0	8	i_in_pitch
op	61:83	0:0	8	+
water	61:84	0:0	8	4
op	61:85	0:0	8	*
water	61:86	0:0	8	i_col_orig
op	61:96	0:0	8	]
water	61:97	0:0	8	;
water	62:12	0:0	8	}
else	63:12	68:12	6
stmts	64:12	68:12	7	
water	64:12	0:0	8	{
water	65:16	0:0	8	p_out
op	65:21	0:0	8	[
water	65:22	0:0	8	i_line
op	65:28	0:0	8	*
water	65:29	0:0	8	i_out_pitch
op	65:40	0:0	8	+
water	65:41	0:0	8	2
op	65:42	0:0	8	*
water	65:43	0:0	8	i_col
op	65:48	0:0	8	]
op	65:50	0:0	8	=
water	65:52	0:0	8	0
water	65:53	0:0	8	x00
water	65:56	0:0	8	;
water	66:16	0:0	8	p_out_u
op	66:23	0:0	8	[
water	66:24	0:0	8	i_line
op	66:30	0:0	8	*
water	66:31	0:0	8	i_out_pitch
op	66:42	0:0	8	+
water	66:43	0:0	8	2
op	66:44	0:0	8	*
water	66:45	0:0	8	i_col
op	66:50	0:0	8	]
op	66:52	0:0	8	=
water	66:54	0:0	8	0
water	66:55	0:0	8	x80
water	66:58	0:0	8	;
water	67:16	0:0	8	p_out_v
op	67:23	0:0	8	[
water	67:24	0:0	8	i_line
op	67:30	0:0	8	*
water	67:31	0:0	8	i_out_pitch
op	67:42	0:0	8	+
water	67:43	0:0	8	2
op	67:44	0:0	8	*
water	67:45	0:0	8	i_col
op	67:50	0:0	8	]
op	67:52	0:0	8	=
water	67:54	0:0	8	0
water	67:55	0:0	8	x80
water	67:58	0:0	8	;
water	68:12	0:0	8	}
water	70:12	0:0	6	i_col
op	70:17	0:0	6	++
water	70:19	0:0	6	;
if	71:12	72:21	6	(i_col >= i_visible_pitch)
cond	71:16	71:25	7	i_col >= i_visible_pitch
water	71:16	0:0	8	i_col
op	71:22	0:0	8	>=
water	71:25	0:0	8	i_visible_pitch
stmts	72:16	72:21	7	
break	72:16	72:21	8	
water	73:12	0:0	6	i_line_orig
op	73:24	0:0	6	=
water	73:26	0:0	6	i_line_center
op	73:40	0:0	6	+
water	74:16	0:0	6	(
water	74:18	0:0	6	(
water	74:20	0:0	6	i_sin
op	74:26	0:0	6	*
water	74:28	0:0	6	(
water	74:30	0:0	6	i_col
op	74:36	0:0	6	-
water	74:38	0:0	6	i_col_center
water	74:51	0:0	6	)
op	75:18	0:0	6	+
water	75:20	0:0	6	i_cos
op	75:26	0:0	6	*
water	75:28	0:0	6	(
water	75:30	0:0	6	i_line
op	75:37	0:0	6	-
water	75:39	0:0	6	i_line_center
water	75:53	0:0	6	)
water	75:55	0:0	6	)
op	75:56	0:0	6	>>
water	75:58	0:0	6	12
water	75:61	0:0	6	)
water	75:62	0:0	6	;
water	76:12	0:0	6	i_col_orig
op	76:23	0:0	6	=
water	76:25	0:0	6	i_col_center
op	76:38	0:0	6	+
water	77:16	0:0	6	(
water	77:18	0:0	6	(
water	77:20	0:0	6	i_cos
op	77:26	0:0	6	*
water	77:28	0:0	6	(
water	77:30	0:0	6	i_col
op	77:36	0:0	6	-
water	77:38	0:0	6	i_col_center
water	77:51	0:0	6	)
op	78:18	0:0	6	-
water	78:20	0:0	6	i_sin
op	78:26	0:0	6	*
water	78:28	0:0	6	(
water	78:30	0:0	6	i_line
op	78:37	0:0	6	-
water	78:39	0:0	6	i_line_center
water	78:53	0:0	6	)
water	78:55	0:0	6	)
op	78:56	0:0	6	>>
water	78:58	0:0	6	12
water	78:61	0:0	6	)
water	78:62	0:0	6	;
if	79:12	83:12	6	(0 <= i_col_orig && i_col_orig < i_visible_pitch && 0 <= i_line_orig && i_line_orig < i_visible_lines)
cond	79:16	80:50	7	0 <= i_col_orig && i_col_orig < i_visible_pitch && 0 <= i_line_orig && i_line_orig < i_visible_lines
water	79:16	0:0	8	0
op	79:18	0:0	8	<=
water	79:21	0:0	8	i_col_orig
op	79:32	0:0	8	&&
water	79:35	0:0	8	i_col_orig
op	79:46	0:0	8	<
water	79:48	0:0	8	i_visible_pitch
op	80:13	0:0	8	&&
water	80:16	0:0	8	0
op	80:18	0:0	8	<=
water	80:21	0:0	8	i_line_orig
op	80:33	0:0	8	&&
water	80:36	0:0	8	i_line_orig
op	80:48	0:0	8	<
water	80:50	0:0	8	i_visible_lines
stmts	81:12	83:12	7	
water	81:12	0:0	8	{
water	82:16	0:0	8	p_out
op	82:21	0:0	8	[
water	82:22	0:0	8	i_line
op	82:28	0:0	8	*
water	82:29	0:0	8	i_out_pitch
op	82:40	0:0	8	+
water	82:41	0:0	8	2
op	82:42	0:0	8	*
water	82:43	0:0	8	i_col
op	82:48	0:0	8	]
op	82:50	0:0	8	=
water	82:52	0:0	8	p_in
op	82:56	0:0	8	[
water	82:57	0:0	8	i_line_orig
op	82:68	0:0	8	*
water	82:69	0:0	8	i_in_pitch
op	82:79	0:0	8	+
water	82:80	0:0	8	2
op	82:81	0:0	8	*
water	82:82	0:0	8	i_col_orig
op	82:92	0:0	8	]
water	82:93	0:0	8	;
water	83:12	0:0	8	}
else	84:12	87:12	6
stmts	85:12	87:12	7	
water	85:12	0:0	8	{
water	86:16	0:0	8	p_out
op	86:21	0:0	8	[
water	86:22	0:0	8	i_line
op	86:28	0:0	8	*
water	86:29	0:0	8	i_out_pitch
op	86:40	0:0	8	+
water	86:41	0:0	8	2
op	86:42	0:0	8	*
water	86:43	0:0	8	i_col
op	86:48	0:0	8	]
op	86:50	0:0	8	=
water	86:52	0:0	8	0
water	86:53	0:0	8	x00
water	86:56	0:0	8	;
water	87:12	0:0	8	}
water	88:8	0:0	6	}
water	89:4	0:0	4	}
return	90:4	90:48	2	CopyInfoAndRelease(p_outpic,p_pic)
call	90:11	90:47	3	CopyInfoAndRelease
arg	90:31	90:39	4	p_outpic
water	90:31	0:0	5	p_outpic
arg	90:41	90:47	4	p_pic
water	90:41	0:0	5	p_pic

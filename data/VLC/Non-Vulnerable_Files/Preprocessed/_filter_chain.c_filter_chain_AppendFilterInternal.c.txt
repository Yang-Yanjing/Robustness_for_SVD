func	2:0	72:0	0	static filter_t *	filter_chain_AppendFilterInternal
params	2:50	0:0	1	
param	2:52	2:75	2	filter_chain_t *	p_chain
param	3:52	3:72	2	const char *	psz_name
param	4:52	4:73	2	config_chain_t *	p_cfg
param	5:52	5:79	2	const es_format_t *	p_fmt_in
param	6:52	6:81	2	const es_format_t *	p_fmt_out
stmnts	0:0	71:15	1	
decl	8:4	9:74	2	chained_filter_t	*p_chained
op	8:32	0:0	2	=
call	9:8	9:73	3	vlc_custom_create
arg	9:27	9:42	4	p_chain->p_this
water	9:27	0:0	5	p_chain
op	9:34	0:0	5	->
water	9:36	0:0	5	p_this
arg	9:44	9:62	4	sizeof(*p_chained)
op	9:44	0:0	5	sizeof
water	9:50	0:0	5	(
op	9:51	0:0	5	*
water	9:52	0:0	5	p_chained
water	9:61	0:0	5	)
arg	9:64	9:73	4	"filter"
water	9:64	0:0	5	"filter"
decl	10:4	10:43	2	filter_t	*p_filter
op	10:23	0:0	2	=
op	10:25	0:0	2	&
water	10:26	0:0	2	p_chained
op	10:35	0:0	2	->
water	10:37	0:0	2	filter
if	11:4	12:19	2	(! p_filter)
cond	11:8	11:9	3	! p_filter
op	11:8	0:0	4	!
water	11:9	0:0	4	p_filter
stmts	12:8	12:19	3	
return	12:8	12:19	4	NULL
water	12:15	0:0	5	NULL
if	13:4	19:4	2	(! p_fmt_in)
cond	13:8	13:9	3	! p_fmt_in
op	13:8	0:0	4	!
water	13:9	0:0	4	p_fmt_in
stmts	14:4	19:4	3	
water	14:4	0:0	4	{
if	15:8	16:53	4	(p_chain -> last != NULL)
cond	15:12	15:29	5	p_chain -> last != NULL
water	15:12	0:0	6	p_chain
op	15:19	0:0	6	->
water	15:21	0:0	6	last
op	15:26	0:0	6	!=
water	15:29	0:0	6	NULL
stmts	16:12	16:53	5	
water	16:12	0:0	6	p_fmt_in
op	16:21	0:0	6	=
op	16:23	0:0	6	&
water	16:24	0:0	6	p_chain
op	16:31	0:0	6	->
water	16:33	0:0	6	last
op	16:37	0:0	6	->
water	16:39	0:0	6	filter
op	16:45	0:0	6	.
water	16:46	0:0	6	fmt_out
water	16:53	0:0	6	;
else	17:8	18:39	4
stmts	18:12	18:39	5	
water	18:12	0:0	6	p_fmt_in
op	18:21	0:0	6	=
op	18:23	0:0	6	&
water	18:24	0:0	6	p_chain
op	18:31	0:0	6	->
water	18:33	0:0	6	fmt_in
water	18:39	0:0	6	;
water	19:4	0:0	4	}
if	20:4	23:4	2	(! p_fmt_out)
cond	20:8	20:9	3	! p_fmt_out
op	20:8	0:0	4	!
water	20:9	0:0	4	p_fmt_out
stmts	21:4	23:4	3	
water	21:4	0:0	4	{
water	22:8	0:0	4	p_fmt_out
op	22:18	0:0	4	=
op	22:20	0:0	4	&
water	22:21	0:0	4	p_chain
op	22:28	0:0	4	->
water	22:30	0:0	4	fmt_out
water	22:37	0:0	4	;
water	23:4	0:0	4	}
call	24:4	24:48	2	es_format_Copy
arg	24:20	24:37	3	&p_filter->fmt_in
op	24:20	0:0	4	&
water	24:21	0:0	4	p_filter
op	24:29	0:0	4	->
water	24:31	0:0	4	fmt_in
arg	24:39	24:48	3	p_fmt_in
water	24:39	0:0	4	p_fmt_in
water	24:49	0:0	2	;
call	25:4	25:50	2	es_format_Copy
arg	25:20	25:38	3	&p_filter->fmt_out
op	25:20	0:0	4	&
water	25:21	0:0	4	p_filter
op	25:29	0:0	4	->
water	25:31	0:0	4	fmt_out
arg	25:40	25:50	3	p_fmt_out
water	25:40	0:0	4	p_fmt_out
water	25:51	0:0	2	;
water	26:4	0:0	2	p_filter
op	26:12	0:0	2	->
water	26:14	0:0	2	p_cfg
op	26:20	0:0	2	=
water	26:22	0:0	2	p_cfg
water	26:27	0:0	2	;
water	27:4	0:0	2	p_filter
op	27:12	0:0	2	->
water	27:14	0:0	2	b_allow_fmt_out_change
op	27:37	0:0	2	=
water	27:39	0:0	2	p_chain
op	27:46	0:0	2	->
water	27:48	0:0	2	b_allow_fmt_out_change
water	27:70	0:0	2	;
water	28:4	0:0	2	p_filter
op	28:12	0:0	2	->
water	28:14	0:0	2	p_module
op	28:23	0:0	2	=
call	28:25	29:65	2	module_need
arg	28:38	28:46	3	p_filter
water	28:38	0:0	4	p_filter
arg	28:48	28:71	3	p_chain->psz_capability
water	28:48	0:0	4	p_chain
op	28:55	0:0	4	->
water	28:57	0:0	4	psz_capability
arg	29:38	29:46	3	psz_name
water	29:38	0:0	4	psz_name
arg	29:48	29:65	3	psz_name!=NULL
water	29:48	0:0	4	psz_name
op	29:57	0:0	4	!=
water	29:60	0:0	4	NULL
water	29:66	0:0	2	;
if	30:4	31:18	2	(! p_filter -> p_module)
cond	30:8	30:19	3	! p_filter -> p_module
op	30:8	0:0	4	!
water	30:9	0:0	4	p_filter
op	30:17	0:0	4	->
water	30:19	0:0	4	p_module
stmts	31:8	31:18	3	
goto	31:8	31:18	4	error
water	31:13	0:0	5	error
if	32:4	36:4	2	(p_filter -> b_allow_fmt_out_change)
cond	32:8	32:18	3	p_filter -> b_allow_fmt_out_change
water	32:8	0:0	4	p_filter
op	32:16	0:0	4	->
water	32:18	0:0	4	b_allow_fmt_out_change
stmts	33:4	36:4	3	
water	33:4	0:0	4	{
call	34:8	34:43	4	es_format_Clean
arg	34:25	34:43	5	&p_chain->fmt_out
op	34:25	0:0	6	&
water	34:26	0:0	6	p_chain
op	34:33	0:0	6	->
water	34:35	0:0	6	fmt_out
water	34:44	0:0	4	;
call	35:8	35:62	4	es_format_Copy
arg	35:24	35:41	5	&p_chain->fmt_out
op	35:24	0:0	6	&
water	35:25	0:0	6	p_chain
op	35:32	0:0	6	->
water	35:34	0:0	6	fmt_out
arg	35:43	35:62	5	&p_filter->fmt_out
op	35:43	0:0	6	&
water	35:44	0:0	6	p_filter
op	35:52	0:0	6	->
water	35:54	0:0	6	fmt_out
water	35:63	0:0	4	;
water	36:4	0:0	4	}
if	37:4	38:18	2	(AllocatorInit (& p_chain -> allocator ,p_chained ))
cond	37:8	37:54	3	AllocatorInit (& p_chain -> allocator ,p_chained )
call	37:8	37:54	4	AllocatorInit
arg	37:23	37:42	5	&p_chain->allocator
op	37:23	0:0	6	&
water	37:24	0:0	6	p_chain
op	37:31	0:0	6	->
water	37:33	0:0	6	allocator
arg	37:44	37:54	5	p_chained
water	37:44	0:0	6	p_chained
stmts	38:8	38:18	3	
goto	38:8	38:18	4	error
water	38:13	0:0	5	error
if	39:4	43:4	2	(p_chain -> last == NULL)
cond	39:8	39:25	3	p_chain -> last == NULL
water	39:8	0:0	4	p_chain
op	39:15	0:0	4	->
water	39:17	0:0	4	last
op	39:22	0:0	4	==
water	39:25	0:0	4	NULL
stmts	40:4	43:4	3	
water	40:4	0:0	4	{
call	41:8	41:39	4	assert
arg	41:16	41:39	5	p_chain->first==NULL
water	41:16	0:0	6	p_chain
op	41:23	0:0	6	->
water	41:25	0:0	6	first
op	41:31	0:0	6	==
water	41:34	0:0	6	NULL
water	41:40	0:0	4	;
water	42:8	0:0	4	p_chain
op	42:15	0:0	4	->
water	42:17	0:0	4	first
op	42:23	0:0	4	=
water	42:25	0:0	4	p_chained
water	42:34	0:0	4	;
water	43:4	0:0	4	}
else	44:4	45:39	2
stmts	45:8	45:39	3	
water	45:8	0:0	4	p_chain
op	45:15	0:0	4	->
water	45:17	0:0	4	last
op	45:21	0:0	4	->
water	45:23	0:0	4	next
op	45:28	0:0	4	=
water	45:30	0:0	4	p_chained
water	45:39	0:0	4	;
water	46:4	0:0	2	p_chained
op	46:13	0:0	2	->
water	46:15	0:0	2	prev
op	46:20	0:0	2	=
water	46:22	0:0	2	p_chain
op	46:29	0:0	2	->
water	46:31	0:0	2	last
water	46:35	0:0	2	;
water	47:4	0:0	2	p_chain
op	47:11	0:0	2	->
water	47:13	0:0	2	last
op	47:18	0:0	2	=
water	47:20	0:0	2	p_chained
water	47:29	0:0	2	;
water	48:4	0:0	2	p_chained
op	48:13	0:0	2	->
water	48:15	0:0	2	next
op	48:20	0:0	2	=
water	48:22	0:0	2	NULL
water	48:26	0:0	2	;
water	49:4	0:0	2	p_chain
op	49:11	0:0	2	->
water	49:13	0:0	2	length
op	49:19	0:0	2	++
water	49:21	0:0	2	;
decl	50:4	50:53	2	vlc_mouse_t	*p_mouse
op	50:25	0:0	2	=
call	50:27	50:52	3	malloc
arg	50:35	50:52	4	sizeof(*p_mouse)
op	50:35	0:0	5	sizeof
water	50:41	0:0	5	(
op	50:42	0:0	5	*
water	50:43	0:0	5	p_mouse
water	50:50	0:0	5	)
if	51:4	52:33	2	(p_mouse)
cond	51:8	51:8	3	p_mouse
water	51:8	0:0	4	p_mouse
stmts	52:8	52:33	3	
call	52:8	52:32	4	vlc_mouse_Init
arg	52:24	52:32	5	p_mouse
water	52:24	0:0	6	p_mouse
water	52:33	0:0	4	;
water	53:4	0:0	2	p_chained
op	53:13	0:0	2	->
water	53:15	0:0	2	mouse
op	53:21	0:0	2	=
water	53:23	0:0	2	p_mouse
water	53:30	0:0	2	;
water	54:4	0:0	2	p_chained
op	54:13	0:0	2	->
water	54:15	0:0	2	pending
op	54:23	0:0	2	=
water	54:25	0:0	2	NULL
water	54:29	0:0	2	;
call	55:4	57:22	2	msg_Dbg
arg	55:13	55:28	3	p_chain->p_this
water	55:13	0:0	4	p_chain
op	55:20	0:0	4	->
water	55:22	0:0	4	p_this
arg	55:30	55:66	3	"Filter '%s' (%p) appended to chain"
water	55:30	0:0	4	"Filter '%s' (%p) appended to chain"
arg	56:13	56:77	3	psz_name?psz_name:module_get_name(p_filter->p_module,false)
water	56:13	0:0	4	psz_name
water	56:22	0:0	4	?
water	56:24	0:0	4	psz_name
water	56:33	0:0	4	:
call	56:35	56:76	4	module_get_name
arg	56:51	56:69	5	p_filter->p_module
water	56:51	0:0	6	p_filter
op	56:59	0:0	6	->
water	56:61	0:0	6	p_module
arg	56:71	56:76	5	false
water	56:71	0:0	6	false
arg	57:13	57:22	3	p_filter
water	57:13	0:0	4	p_filter
water	57:23	0:0	2	;
return	58:4	58:19	2	p_filter
water	58:11	0:0	3	p_filter
label	59:0	59:5	2	error :
if	60:4	62:52	2	(psz_name)
cond	60:8	60:8	3	psz_name
water	60:8	0:0	4	psz_name
stmts	61:8	62:52	3	
call	61:8	62:51	4	msg_Err
arg	61:17	61:32	5	p_chain->p_this
water	61:17	0:0	6	p_chain
op	61:24	0:0	6	->
water	61:26	0:0	6	p_this
arg	61:34	61:60	5	"Failed to create %s '%s'"
water	61:34	0:0	6	"Failed to create %s '%s'"
arg	62:17	62:40	5	p_chain->psz_capability
water	62:17	0:0	6	p_chain
op	62:24	0:0	6	->
water	62:26	0:0	6	psz_capability
arg	62:42	62:51	5	psz_name
water	62:42	0:0	6	psz_name
water	62:52	0:0	4	;
else	63:4	65:42	2
stmts	64:8	65:42	3	
call	64:8	65:41	4	msg_Err
arg	64:17	64:32	5	p_chain->p_this
water	64:17	0:0	6	p_chain
op	64:24	0:0	6	->
water	64:26	0:0	6	p_this
arg	64:34	64:55	5	"Failed to create %s"
water	64:34	0:0	6	"Failed to create %s"
arg	65:17	65:41	5	p_chain->psz_capability
water	65:17	0:0	6	p_chain
op	65:24	0:0	6	->
water	65:26	0:0	6	psz_capability
water	65:42	0:0	4	;
if	66:4	67:53	2	(p_filter -> p_module)
cond	66:8	66:18	3	p_filter -> p_module
water	66:8	0:0	4	p_filter
op	66:16	0:0	4	->
water	66:18	0:0	4	p_module
stmts	67:8	67:53	3	
call	67:8	67:52	4	module_unneed
arg	67:23	67:31	5	p_filter
water	67:23	0:0	6	p_filter
arg	67:33	67:52	5	p_filter->p_module
water	67:33	0:0	6	p_filter
op	67:41	0:0	6	->
water	67:43	0:0	6	p_module
water	67:53	0:0	4	;
call	68:4	68:39	2	es_format_Clean
arg	68:21	68:39	3	&p_filter->fmt_in
op	68:21	0:0	4	&
water	68:22	0:0	4	p_filter
op	68:30	0:0	4	->
water	68:32	0:0	4	fmt_in
water	68:40	0:0	2	;
call	69:4	69:40	2	es_format_Clean
arg	69:21	69:40	3	&p_filter->fmt_out
op	69:21	0:0	4	&
water	69:22	0:0	4	p_filter
op	69:30	0:0	4	->
water	69:32	0:0	4	fmt_out
water	69:41	0:0	2	;
call	70:4	70:33	2	vlc_object_release
arg	70:24	70:33	3	p_filter
water	70:24	0:0	4	p_filter
water	70:34	0:0	2	;
return	71:4	71:15	2	NULL
water	71:11	0:0	3	NULL

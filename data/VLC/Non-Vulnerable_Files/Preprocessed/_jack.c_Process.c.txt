func	2:0	39:0	0	int	Process
params	2:11	0:0	1	
param	2:13	2:36	2	jack_nframes_t	i_frames
param	2:38	2:50	2	void *	p_arg
stmnts	0:0	38:12	1	
decl	4:4	4:41	2	unsigned int	i
water	4:18	0:0	2	,
decl	4:4	4:41	2	unsigned int	j
water	4:21	0:0	2	,
decl	4:4	4:41	2	unsigned int	frames_from_rb
op	4:38	0:0	2	=
water	4:40	0:0	2	0
decl	5:4	5:25	2	size_t	bytes_read
op	5:22	0:0	2	=
water	5:24	0:0	2	0
decl	6:4	6:22	2	size_t	frames_read
decl	7:4	7:52	2	audio_output_t	*p_aout
op	7:27	0:0	2	=
water	7:29	0:0	2	(
water	7:30	0:0	2	audio_output_t
op	7:44	0:0	2	*
water	7:45	0:0	2	)
water	7:47	0:0	2	p_arg
decl	8:4	8:42	2	struct aout_sys_t	*p_sys
op	8:29	0:0	2	=
water	8:31	0:0	2	p_aout
op	8:37	0:0	2	->
water	8:39	0:0	2	sys
if	10:4	11:33	2	(p_sys -> paused == VLC_TS_INVALID)
cond	10:8	10:25	3	p_sys -> paused == VLC_TS_INVALID
water	10:8	0:0	4	p_sys
op	10:13	0:0	4	->
water	10:15	0:0	4	paused
op	10:22	0:0	4	==
water	10:25	0:0	4	VLC_TS_INVALID
stmts	11:8	11:33	3	
water	11:8	0:0	4	frames_from_rb
op	11:23	0:0	4	=
water	11:25	0:0	4	i_frames
water	11:33	0:0	4	;
for	13:4	17:4	2	(i = 0 ;i < p_sys -> i_channels;i ++)
forinit	13:9	13:14	3	i = 0 ;
water	13:9	0:0	4	i
op	13:11	0:0	4	=
water	13:13	0:0	4	0
water	13:14	0:0	4	;
cond	13:16	13:27	3	i < p_sys -> i_channels
water	13:16	0:0	4	i
op	13:18	0:0	4	<
water	13:20	0:0	4	p_sys
op	13:25	0:0	4	->
water	13:27	0:0	4	i_channels
forexpr	13:39	13:40	3	i ++
water	13:39	0:0	4	i
op	13:40	0:0	4	++
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	p_jack_buffers
op	15:29	0:0	4	[
water	15:30	0:0	4	i
op	15:31	0:0	4	]
op	15:33	0:0	4	=
call	15:35	16:66	4	jack_port_get_buffer
arg	15:57	15:79	5	p_sys->p_jack_ports[i]
water	15:57	0:0	6	p_sys
op	15:62	0:0	6	->
water	15:64	0:0	6	p_jack_ports
op	15:76	0:0	6	[
water	15:77	0:0	6	i
op	15:78	0:0	6	]
arg	16:57	16:66	5	i_frames
water	16:57	0:0	6	i_frames
water	16:67	0:0	4	;
water	17:4	0:0	4	}
for	19:4	27:4	2	(j = 0 ;j < frames_from_rb;j ++)
forinit	19:9	19:14	3	j = 0 ;
water	19:9	0:0	4	j
op	19:11	0:0	4	=
water	19:13	0:0	4	0
water	19:14	0:0	4	;
cond	19:16	19:20	3	j < frames_from_rb
water	19:16	0:0	4	j
op	19:18	0:0	4	<
water	19:20	0:0	4	frames_from_rb
forexpr	19:36	19:37	3	j ++
water	19:36	0:0	4	j
op	19:37	0:0	4	++
stmts	20:4	27:4	3	
water	20:4	0:0	4	{
for	21:8	26:8	4	(i = 0 ;i < p_sys -> i_channels;i ++)
forinit	21:13	21:18	5	i = 0 ;
water	21:13	0:0	6	i
op	21:15	0:0	6	=
water	21:17	0:0	6	0
water	21:18	0:0	6	;
cond	21:20	21:31	5	i < p_sys -> i_channels
water	21:20	0:0	6	i
op	21:22	0:0	6	<
water	21:24	0:0	6	p_sys
op	21:29	0:0	6	->
water	21:31	0:0	6	i_channels
forexpr	21:43	21:44	5	i ++
water	21:43	0:0	6	i
op	21:44	0:0	6	++
stmts	22:8	26:8	5	
water	22:8	0:0	6	{
decl	23:12	23:63	6	jack_sample_t	*p_dst
op	23:33	0:0	6	=
water	23:35	0:0	6	p_sys
op	23:40	0:0	6	->
water	23:42	0:0	6	p_jack_buffers
op	23:56	0:0	6	[
water	23:57	0:0	6	i
op	23:58	0:0	6	]
op	23:60	0:0	6	+
water	23:62	0:0	6	j
water	24:12	0:0	6	bytes_read
op	24:23	0:0	6	+=
call	24:26	25:58	6	jack_ringbuffer_read
arg	24:48	24:72	7	p_sys->p_jack_ringbuffer
water	24:48	0:0	8	p_sys
op	24:53	0:0	8	->
water	24:55	0:0	8	p_jack_ringbuffer
arg	25:20	25:34	7	(char*)p_dst
water	25:20	0:0	8	(
water	25:21	0:0	8	char
op	25:26	0:0	8	*
water	25:27	0:0	8	)
water	25:29	0:0	8	p_dst
arg	25:36	25:58	7	sizeof(jack_sample_t)
op	25:36	0:0	8	sizeof
water	25:42	0:0	8	(
water	25:43	0:0	8	jack_sample_t
water	25:56	0:0	8	)
water	25:59	0:0	6	;
water	26:8	0:0	6	}
water	27:4	0:0	4	}
water	29:4	0:0	2	frames_read
op	29:16	0:0	2	=
water	29:18	0:0	2	(
water	29:19	0:0	2	bytes_read
op	29:30	0:0	2	/
op	29:32	0:0	2	sizeof
water	29:38	0:0	2	(
water	29:39	0:0	2	jack_sample_t
water	29:52	0:0	2	)
water	29:53	0:0	2	)
op	29:55	0:0	2	/
water	29:57	0:0	2	p_sys
op	29:62	0:0	2	->
water	29:64	0:0	2	i_channels
water	29:74	0:0	2	;
if	30:4	37:4	2	(frames_read < i_frames)
cond	30:8	30:22	3	frames_read < i_frames
water	30:8	0:0	4	frames_read
op	30:20	0:0	4	<
water	30:22	0:0	4	i_frames
stmts	31:4	37:4	3	
water	31:4	0:0	4	{
for	32:8	36:8	4	(i = 0 ;i < p_sys -> i_channels;i ++)
forinit	32:13	32:18	5	i = 0 ;
water	32:13	0:0	6	i
op	32:15	0:0	6	=
water	32:17	0:0	6	0
water	32:18	0:0	6	;
cond	32:20	32:31	5	i < p_sys -> i_channels
water	32:20	0:0	6	i
op	32:22	0:0	6	<
water	32:24	0:0	6	p_sys
op	32:29	0:0	6	->
water	32:31	0:0	6	i_channels
forexpr	32:43	32:44	5	i ++
water	32:43	0:0	6	i
op	32:44	0:0	6	++
stmts	33:8	36:8	5	
water	33:8	0:0	6	{
call	34:12	35:71	6	memset
arg	34:20	34:58	7	p_sys->p_jack_buffers[i]+frames_read
water	34:20	0:0	8	p_sys
op	34:25	0:0	8	->
water	34:27	0:0	8	p_jack_buffers
op	34:41	0:0	8	[
water	34:42	0:0	8	i
op	34:43	0:0	8	]
op	34:45	0:0	8	+
water	34:47	0:0	8	frames_read
arg	34:60	34:61	7	0
water	34:60	0:0	8	0
arg	35:20	35:71	7	sizeof(jack_sample_t)*(i_frames-frames_read)
op	35:20	0:0	8	sizeof
water	35:26	0:0	8	(
water	35:28	0:0	8	jack_sample_t
water	35:42	0:0	8	)
op	35:44	0:0	8	*
water	35:46	0:0	8	(
water	35:47	0:0	8	i_frames
op	35:56	0:0	8	-
water	35:58	0:0	8	frames_read
water	35:69	0:0	8	)
water	35:72	0:0	6	;
water	36:8	0:0	6	}
water	37:4	0:0	4	}
return	38:4	38:12	2	0
water	38:11	0:0	3	0

func	2:0	93:0	0	static int	FrontendSetQPSK
params	2:26	0:0	1	
param	2:28	2:47	2	access_t *	p_access
stmnts	0:0	92:22	1	
decl	4:4	4:41	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_access
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:38	2	struct dvb_frontend_parameters	fep
decl	6:4	6:13	2	int	i_val
decl	7:4	7:63	2	int	i_frequency
water	7:19	0:0	2	,
decl	7:4	7:63	2	int	i_lnb_slof
op	7:32	0:0	2	=
water	7:34	0:0	2	0
water	7:35	0:0	2	,
decl	7:4	7:63	2	int	i_lnb_lof1
water	7:47	0:0	2	,
decl	7:4	7:63	2	int	i_lnb_lof2
op	7:60	0:0	2	=
water	7:62	0:0	2	0
water	9:4	0:0	2	i_frequency
op	9:16	0:0	2	=
call	9:18	9:60	2	var_GetInteger
arg	9:34	9:42	3	p_access
water	9:34	0:0	4	p_access
arg	9:44	9:60	3	"dvb-frequency"
water	9:44	0:0	4	"dvb-frequency"
water	9:61	0:0	2	;
water	10:4	0:0	2	i_val
op	10:10	0:0	2	=
call	10:12	10:53	2	var_GetInteger
arg	10:28	10:36	3	p_access
water	10:28	0:0	4	p_access
arg	10:38	10:53	3	"dvb-lnb-lof1"
water	10:38	0:0	4	"dvb-lnb-lof1"
water	10:54	0:0	2	;
if	11:4	55:4	2	(i_val == 0)
cond	11:8	11:17	3	i_val == 0
water	11:8	0:0	4	i_val
op	11:14	0:0	4	==
water	11:17	0:0	4	0
stmts	12:4	55:4	3	
water	12:4	0:0	4	{
if	14:8	18:8	4	(i_frequency >= 950000 && i_frequency <= 2150000)
cond	14:13	14:53	5	i_frequency >= 950000 && i_frequency <= 2150000
water	14:13	0:0	6	i_frequency
op	14:25	0:0	6	>=
water	14:28	0:0	6	950000
op	14:35	0:0	6	&&
water	14:38	0:0	6	i_frequency
op	14:50	0:0	6	<=
water	14:53	0:0	6	2150000
stmts	15:8	18:8	5	
water	15:8	0:0	6	{
call	16:12	16:73	6	msg_Dbg
arg	16:21	16:29	7	p_access
water	16:21	0:0	8	p_access
arg	16:31	16:59	7	"frequency %d is in IF-band"
water	16:31	0:0	8	"frequency %d is in IF-band"
arg	16:61	16:73	7	i_frequency
water	16:61	0:0	8	i_frequency
water	16:74	0:0	6	;
water	17:12	0:0	6	i_lnb_lof1
op	17:23	0:0	6	=
water	17:25	0:0	6	0
water	17:26	0:0	6	;
water	18:8	0:0	6	}
else	19:8	23:8	4
stmts	19:13	23:8	5	
if	19:13	23:8	6	(i_frequency >= 2500000 && i_frequency <= 2700000)
cond	19:18	19:59	7	i_frequency >= 2500000 && i_frequency <= 2700000
water	19:18	0:0	8	i_frequency
op	19:30	0:0	8	>=
water	19:33	0:0	8	2500000
op	19:41	0:0	8	&&
water	19:44	0:0	8	i_frequency
op	19:56	0:0	8	<=
water	19:59	0:0	8	2700000
stmts	20:8	23:8	7	
water	20:8	0:0	8	{
call	21:12	21:72	8	msg_Dbg
arg	21:21	21:29	9	p_access
water	21:21	0:0	10	p_access
arg	21:31	21:58	9	"frequency %d is in S-band"
water	21:31	0:0	10	"frequency %d is in S-band"
arg	21:60	21:72	9	i_frequency
water	21:60	0:0	10	i_frequency
water	21:73	0:0	8	;
water	22:12	0:0	8	i_lnb_lof1
op	22:23	0:0	8	=
water	22:25	0:0	8	3650000
water	22:32	0:0	8	;
water	23:8	0:0	8	}
else	24:8	29:8	4
stmts	24:13	29:8	5	
if	24:13	29:8	6	(i_frequency >= 3400000 && i_frequency <= 4200000)
cond	24:18	24:59	7	i_frequency >= 3400000 && i_frequency <= 4200000
water	24:18	0:0	8	i_frequency
op	24:30	0:0	8	>=
water	24:33	0:0	8	3400000
op	24:41	0:0	8	&&
water	24:44	0:0	8	i_frequency
op	24:56	0:0	8	<=
water	24:59	0:0	8	4200000
stmts	25:8	29:8	7	
water	25:8	0:0	8	{
call	26:12	27:33	8	msg_Dbg
arg	26:21	26:29	9	p_access
water	26:21	0:0	10	p_access
arg	26:31	26:66	9	"frequency %d is in C-band (lower)"
water	26:31	0:0	10	"frequency %d is in C-band (lower)"
arg	27:21	27:33	9	i_frequency
water	27:21	0:0	10	i_frequency
water	27:34	0:0	8	;
water	28:12	0:0	8	i_lnb_lof1
op	28:23	0:0	8	=
water	28:25	0:0	8	5150000
water	28:32	0:0	8	;
water	29:8	0:0	8	}
else	30:8	35:8	4
stmts	30:13	35:8	5	
if	30:13	35:8	6	(i_frequency >= 4500000 && i_frequency <= 4800000)
cond	30:18	30:59	7	i_frequency >= 4500000 && i_frequency <= 4800000
water	30:18	0:0	8	i_frequency
op	30:30	0:0	8	>=
water	30:33	0:0	8	4500000
op	30:41	0:0	8	&&
water	30:44	0:0	8	i_frequency
op	30:56	0:0	8	<=
water	30:59	0:0	8	4800000
stmts	31:8	35:8	7	
water	31:8	0:0	8	{
call	32:12	33:33	8	msg_Dbg
arg	32:21	32:29	9	p_access
water	32:21	0:0	10	p_access
arg	32:31	32:67	9	"frequency %d is in C-band (higher)"
water	32:31	0:0	10	"frequency %d is in C-band (higher)"
arg	33:21	33:33	9	i_frequency
water	33:21	0:0	10	i_frequency
water	33:34	0:0	8	;
water	34:12	0:0	8	i_lnb_lof1
op	34:23	0:0	8	=
water	34:25	0:0	8	5950000
water	34:32	0:0	8	;
water	35:8	0:0	8	}
else	36:8	43:8	4
stmts	36:13	43:8	5	
if	36:13	43:8	6	(i_frequency >= 10700000 && i_frequency <= 13250000)
cond	36:18	36:60	7	i_frequency >= 10700000 && i_frequency <= 13250000
water	36:18	0:0	8	i_frequency
op	36:30	0:0	8	>=
water	36:33	0:0	8	10700000
op	36:42	0:0	8	&&
water	36:45	0:0	8	i_frequency
op	36:57	0:0	8	<=
water	36:60	0:0	8	13250000
stmts	37:8	43:8	7	
water	37:8	0:0	8	{
call	38:12	39:33	8	msg_Dbg
arg	38:21	38:29	9	p_access
water	38:21	0:0	10	p_access
arg	38:31	38:59	9	"frequency %d is in Ku-band"
water	38:31	0:0	10	"frequency %d is in Ku-band"
arg	39:21	39:33	9	i_frequency
water	39:21	0:0	10	i_frequency
water	39:34	0:0	8	;
water	40:12	0:0	8	i_lnb_lof1
op	40:23	0:0	8	=
water	40:25	0:0	8	9750000
water	40:32	0:0	8	;
water	41:12	0:0	8	i_lnb_lof2
op	41:23	0:0	8	=
water	41:25	0:0	8	10600000
water	41:33	0:0	8	;
water	42:12	0:0	8	i_lnb_slof
op	42:23	0:0	8	=
water	42:25	0:0	8	11700000
water	42:33	0:0	8	;
water	43:8	0:0	8	}
else	44:8	51:8	4
stmts	45:8	51:8	5	
water	45:8	0:0	6	{
call	46:12	47:33	6	msg_Err
arg	46:21	46:29	7	p_access
water	46:21	0:0	8	p_access
arg	46:31	46:70	7	"frequency %d is out of any known band"
water	46:31	0:0	8	"frequency %d is out of any known band"
arg	47:21	47:33	7	i_frequency
water	47:21	0:0	8	i_frequency
water	47:34	0:0	6	;
call	48:12	49:44	6	msg_Err
arg	48:21	48:29	7	p_access
water	48:21	0:0	8	p_access
arg	48:31	49:44	7	"specify dvb-lnb-lof1 manually for the local ""oscillator frequency"
water	48:31	0:0	8	"specify dvb-lnb-lof1 manually for the local "
water	49:21	0:0	8	"oscillator frequency"
water	49:45	0:0	6	;
return	50:12	50:31	6	VLC_EGENERIC
water	50:19	0:0	7	VLC_EGENERIC
water	51:8	0:0	6	}
call	52:8	52:61	4	var_SetInteger
arg	52:24	52:32	5	p_access
water	52:24	0:0	6	p_access
arg	52:34	52:48	5	"dvb-lnb-lof1"
water	52:34	0:0	6	"dvb-lnb-lof1"
arg	52:50	52:61	5	i_lnb_lof1
water	52:50	0:0	6	i_lnb_lof1
water	52:62	0:0	4	;
call	53:8	53:61	4	var_SetInteger
arg	53:24	53:32	5	p_access
water	53:24	0:0	6	p_access
arg	53:34	53:48	5	"dvb-lnb-lof2"
water	53:34	0:0	6	"dvb-lnb-lof2"
arg	53:50	53:61	5	i_lnb_lof2
water	53:50	0:0	6	i_lnb_lof2
water	53:62	0:0	4	;
call	54:8	54:61	4	var_SetInteger
arg	54:24	54:32	5	p_access
water	54:24	0:0	6	p_access
arg	54:34	54:48	5	"dvb-lnb-slof"
water	54:34	0:0	6	"dvb-lnb-slof"
arg	54:50	54:61	5	i_lnb_slof
water	54:50	0:0	6	i_lnb_slof
water	54:62	0:0	4	;
water	55:4	0:0	4	}
else	56:4	61:4	2
stmts	57:4	61:4	3	
water	57:4	0:0	4	{
water	58:8	0:0	4	i_lnb_lof1
op	58:19	0:0	4	=
water	58:21	0:0	4	i_val
water	58:26	0:0	4	;
water	59:8	0:0	4	i_lnb_lof2
op	59:19	0:0	4	=
call	59:21	59:62	4	var_GetInteger
arg	59:37	59:45	5	p_access
water	59:37	0:0	6	p_access
arg	59:47	59:62	5	"dvb-lnb-lof2"
water	59:47	0:0	6	"dvb-lnb-lof2"
water	59:63	0:0	4	;
water	60:8	0:0	4	i_lnb_slof
op	60:19	0:0	4	=
call	60:21	60:62	4	var_GetInteger
arg	60:37	60:45	5	p_access
water	60:37	0:0	6	p_access
arg	60:47	60:62	5	"dvb-lnb-slof"
water	60:47	0:0	6	"dvb-lnb-slof"
water	60:63	0:0	4	;
water	61:4	0:0	4	}
if	62:4	65:4	2	(i_lnb_slof && i_frequency >= i_lnb_slof)
cond	62:8	62:37	3	i_lnb_slof && i_frequency >= i_lnb_slof
water	62:8	0:0	4	i_lnb_slof
op	62:19	0:0	4	&&
water	62:22	0:0	4	i_frequency
op	62:34	0:0	4	>=
water	62:37	0:0	4	i_lnb_slof
stmts	63:4	65:4	3	
water	63:4	0:0	4	{
water	64:8	0:0	4	i_frequency
op	64:20	0:0	4	-=
water	64:23	0:0	4	i_lnb_lof2
water	64:33	0:0	4	;
water	65:4	0:0	4	}
else	66:4	69:4	2
stmts	67:4	69:4	3	
water	67:4	0:0	4	{
water	68:8	0:0	4	i_frequency
op	68:20	0:0	4	-=
water	68:23	0:0	4	i_lnb_lof1
water	68:33	0:0	4	;
water	69:4	0:0	4	}
water	70:4	0:0	2	fep
op	70:7	0:0	2	.
water	70:8	0:0	2	frequency
op	70:18	0:0	2	=
water	70:20	0:0	2	i_frequency
op	70:32	0:0	2	>=
water	70:35	0:0	2	0
water	70:37	0:0	2	?
water	70:39	0:0	2	i_frequency
water	70:51	0:0	2	:
op	70:53	0:0	2	-
water	70:54	0:0	2	i_frequency
water	70:65	0:0	2	;
water	71:4	0:0	2	fep
op	71:7	0:0	2	.
water	71:8	0:0	2	inversion
op	71:18	0:0	2	=
call	71:20	71:46	2	DecodeInversion
arg	71:37	71:46	3	p_access
water	71:37	0:0	4	p_access
water	71:47	0:0	2	;
water	72:4	0:0	2	fep
op	72:7	0:0	2	.
water	72:8	0:0	2	u
op	72:9	0:0	2	.
water	72:10	0:0	2	qpsk
op	72:14	0:0	2	.
water	72:15	0:0	2	symbol_rate
op	72:27	0:0	2	=
call	72:29	72:67	2	var_GetInteger
arg	72:45	72:53	3	p_access
water	72:45	0:0	4	p_access
arg	72:55	72:67	3	"dvb-srate"
water	72:55	0:0	4	"dvb-srate"
water	72:68	0:0	2	;
water	73:4	0:0	2	fep
op	73:7	0:0	2	.
water	73:8	0:0	2	u
op	73:9	0:0	2	.
water	73:10	0:0	2	qpsk
op	73:14	0:0	2	.
water	73:15	0:0	2	fec_inner
op	73:25	0:0	2	=
water	73:27	0:0	2	FEC_NONE
water	73:35	0:0	2	;
if	74:4	77:4	2	(DoDiseqc (p_access ) < 0)
cond	74:8	74:31	3	DoDiseqc (p_access ) < 0
call	74:8	74:27	4	DoDiseqc
arg	74:18	74:27	5	p_access
water	74:18	0:0	6	p_access
op	74:29	0:0	4	<
water	74:31	0:0	4	0
stmts	75:4	77:4	3	
water	75:4	0:0	4	{
return	76:8	76:27	4	VLC_EGENERIC
water	76:15	0:0	5	VLC_EGENERIC
water	77:4	0:0	4	}
for	79:4	85:4	2	(;;)
forinit	79:9	79:9	3	;
water	79:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	80:4	85:4	3	
water	80:4	0:0	4	{
decl	81:8	81:39	4	struct dvb_frontend_event	event
if	82:8	84:17	4	(ioctl (p_sys -> i_frontend_handle ,FE_GET_EVENT ,& event ) < 0 && errno == EWOULDBLOCK)
cond	82:13	83:26	5	ioctl (p_sys -> i_frontend_handle ,FE_GET_EVENT ,& event ) < 0 && errno == EWOULDBLOCK
call	82:13	82:67	6	ioctl
arg	82:20	82:44	7	p_sys->i_frontend_handle
water	82:20	0:0	8	p_sys
op	82:25	0:0	8	->
water	82:27	0:0	8	i_frontend_handle
arg	82:46	82:58	7	FE_GET_EVENT
water	82:46	0:0	8	FE_GET_EVENT
arg	82:60	82:67	7	&event
op	82:60	0:0	8	&
water	82:61	0:0	8	event
op	82:69	0:0	6	<
water	82:71	0:0	6	0
op	83:14	0:0	6	&&
water	83:17	0:0	6	errno
op	83:23	0:0	6	==
water	83:26	0:0	6	EWOULDBLOCK
stmts	84:12	84:17	5	
break	84:12	84:17	6	
water	85:4	0:0	4	}
if	87:4	91:4	2	(ioctl (p_sys -> i_frontend_handle ,FE_SET_FRONTEND ,& fep ) < 0)
cond	87:8	87:67	3	ioctl (p_sys -> i_frontend_handle ,FE_SET_FRONTEND ,& fep ) < 0
call	87:8	87:63	4	ioctl
arg	87:15	87:39	5	p_sys->i_frontend_handle
water	87:15	0:0	6	p_sys
op	87:20	0:0	6	->
water	87:22	0:0	6	i_frontend_handle
arg	87:41	87:56	5	FE_SET_FRONTEND
water	87:41	0:0	6	FE_SET_FRONTEND
arg	87:58	87:63	5	&fep
op	87:58	0:0	6	&
water	87:59	0:0	6	fep
op	87:65	0:0	4	<
water	87:67	0:0	4	0
stmts	88:4	91:4	3	
water	88:4	0:0	4	{
call	89:8	89:71	4	msg_Err
arg	89:17	89:25	5	p_access
water	89:17	0:0	6	p_access
arg	89:27	89:47	5	"frontend error: %s"
water	89:27	0:0	6	"frontend error: %s"
arg	89:49	89:71	5	vlc_strerror_c(errno)
call	89:49	89:69	6	vlc_strerror_c
arg	89:64	89:69	7	errno
water	89:64	0:0	8	errno
water	89:72	0:0	4	;
return	90:8	90:27	4	VLC_EGENERIC
water	90:15	0:0	5	VLC_EGENERIC
water	91:4	0:0	4	}
return	92:4	92:22	2	VLC_SUCCESS
water	92:11	0:0	3	VLC_SUCCESS

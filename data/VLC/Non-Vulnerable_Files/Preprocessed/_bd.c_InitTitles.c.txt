func	2:0	62:0	0	static void	InitTitles
params	2:22	0:0	1	
param	2:24	2:41	2	demux_t *	p_demux
stmnts	0:0	61:4	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
for	6:4	61:4	2	( int i = 0 ;i < p_sys -> i_mpls;i ++)
forinit	0:0	6:18	3	 int i = 0 ;
decl	6:9	6:18	4	int	i
op	6:15	0:0	4	=
water	6:17	0:0	4	0
cond	6:20	6:31	3	i < p_sys -> i_mpls
water	6:20	0:0	4	i
op	6:22	0:0	4	<
water	6:24	0:0	4	p_sys
op	6:29	0:0	4	->
water	6:31	0:0	4	i_mpls
forexpr	6:39	6:40	3	i ++
water	6:39	0:0	4	i
op	6:40	0:0	4	++
stmts	7:4	61:4	3	
water	7:4	0:0	4	{
decl	8:8	8:51	4	const bd_mpls_t	*p_mpls
op	8:32	0:0	4	=
water	8:34	0:0	4	p_sys
op	8:39	0:0	4	->
water	8:41	0:0	4	pp_mpls
op	8:48	0:0	4	[
water	8:49	0:0	4	i
op	8:50	0:0	4	]
decl	9:8	9:48	4	input_title_t	*t
op	9:25	0:0	4	=
call	9:27	9:47	5	vlc_input_title_New
if	10:8	11:17	4	(! t)
cond	10:12	10:13	5	! t
op	10:12	0:0	6	!
water	10:13	0:0	6	t
stmts	11:12	11:17	5	
break	11:12	11:17	6	
water	13:8	0:0	4	t
op	13:9	0:0	4	->
water	13:11	0:0	4	i_length
op	13:20	0:0	4	=
water	13:22	0:0	4	0
water	13:23	0:0	4	;
for	14:8	18:8	4	( int j = 0 ;j < p_mpls -> i_play_item;j ++)
forinit	0:0	14:22	5	 int j = 0 ;
decl	14:13	14:22	6	int	j
op	14:19	0:0	6	=
water	14:21	0:0	6	0
cond	14:24	14:36	5	j < p_mpls -> i_play_item
water	14:24	0:0	6	j
op	14:26	0:0	6	<
water	14:28	0:0	6	p_mpls
op	14:34	0:0	6	->
water	14:36	0:0	6	i_play_item
forexpr	14:49	14:50	5	j ++
water	14:49	0:0	6	j
op	14:50	0:0	6	++
stmts	15:8	18:8	5	
water	15:8	0:0	6	{
decl	16:12	16:71	6	const bd_mpls_play_item_t	*p_item
op	16:46	0:0	6	=
op	16:48	0:0	6	&
water	16:49	0:0	6	p_mpls
op	16:55	0:0	6	->
water	16:57	0:0	6	p_play_item
op	16:68	0:0	6	[
water	16:69	0:0	6	j
op	16:70	0:0	6	]
water	17:12	0:0	6	t
op	17:13	0:0	6	->
water	17:15	0:0	6	i_length
op	17:24	0:0	6	+=
water	17:27	0:0	6	(
water	17:29	0:0	6	p_item
op	17:35	0:0	6	->
water	17:37	0:0	6	i_out_time
op	17:48	0:0	6	-
water	17:50	0:0	6	p_item
op	17:56	0:0	6	->
water	17:58	0:0	6	i_in_time
water	17:68	0:0	6	)
op	17:70	0:0	6	*
water	17:72	0:0	6	CLOCK_FREQ
op	17:83	0:0	6	/
water	17:85	0:0	6	BD_45KHZ
water	17:93	0:0	6	;
water	18:8	0:0	6	}
water	20:8	0:0	4	{
decl	21:8	21:42	4	char	psz_length[MSTRTIME_MAX_SIZE]
call	22:8	22:100	4	msg_Warn
arg	22:18	22:25	5	p_demux
water	22:18	0:0	6	p_demux
arg	22:27	22:41	5	"TITLE[%d] %s"
water	22:27	0:0	6	"TITLE[%d] %s"
arg	22:43	22:44	5	i
water	22:43	0:0	6	i
arg	22:46	22:100	5	secstotimestr(psz_length,t->i_length/CLOCK_FREQ)
call	22:46	22:98	6	secstotimestr
arg	22:61	22:71	7	psz_length
water	22:61	0:0	8	psz_length
arg	22:73	22:98	7	t->i_length/CLOCK_FREQ
water	22:73	0:0	8	t
op	22:74	0:0	8	->
water	22:76	0:0	8	i_length
op	22:85	0:0	8	/
water	22:87	0:0	8	CLOCK_FREQ
water	22:101	0:0	4	;
water	23:8	0:0	4	}
for	26:8	53:8	4	( int j = 0 ;j < p_mpls -> i_mark;j ++)
forinit	0:0	26:22	5	 int j = 0 ;
decl	26:13	26:22	6	int	j
op	26:19	0:0	6	=
water	26:21	0:0	6	0
cond	26:24	26:36	5	j < p_mpls -> i_mark
water	26:24	0:0	6	j
op	26:26	0:0	6	<
water	26:28	0:0	6	p_mpls
op	26:34	0:0	6	->
water	26:36	0:0	6	i_mark
forexpr	26:44	26:45	5	j ++
water	26:44	0:0	6	j
op	26:45	0:0	6	++
stmts	27:8	53:8	5	
water	27:8	0:0	6	{
decl	28:12	28:55	6	bd_mpls_mark_t	*p_mark
op	28:35	0:0	6	=
op	28:37	0:0	6	&
water	28:38	0:0	6	p_mpls
op	28:44	0:0	6	->
water	28:46	0:0	6	p_mark
op	28:52	0:0	6	[
water	28:53	0:0	6	j
op	28:54	0:0	6	]
if	29:12	52:12	6	(p_mark -> i_type == BD_MPLS_MARK_TYPE_BOOKMARK && p_mark -> i_play_item_id >= 0 && p_mark -> i_play_item_id < p_mpls -> i_play_item)
cond	29:16	30:80	7	p_mark -> i_type == BD_MPLS_MARK_TYPE_BOOKMARK && p_mark -> i_play_item_id >= 0 && p_mark -> i_play_item_id < p_mpls -> i_play_item
water	29:16	0:0	8	p_mark
op	29:22	0:0	8	->
water	29:24	0:0	8	i_type
op	29:31	0:0	8	==
water	29:34	0:0	8	BD_MPLS_MARK_TYPE_BOOKMARK
op	29:61	0:0	8	&&
water	30:16	0:0	8	p_mark
op	30:22	0:0	8	->
water	30:24	0:0	8	i_play_item_id
op	30:39	0:0	8	>=
water	30:42	0:0	8	0
op	30:44	0:0	8	&&
water	30:47	0:0	8	p_mark
op	30:53	0:0	8	->
water	30:55	0:0	8	i_play_item_id
op	30:70	0:0	8	<
water	30:72	0:0	8	p_mpls
op	30:78	0:0	8	->
water	30:80	0:0	8	i_play_item
stmts	31:12	52:12	7	
water	31:12	0:0	8	{
decl	32:16	32:52	8	seekpoint_t	*s
op	32:31	0:0	8	=
call	32:33	32:51	9	vlc_seekpoint_New
if	33:16	34:25	8	(! s)
cond	33:20	33:21	9	! s
op	33:20	0:0	10	!
water	33:21	0:0	10	s
stmts	34:20	34:25	9	
break	34:20	34:25	10	
for	35:16	44:16	8	( int k = 0 ;k <= p_mark -> i_play_item_id;k ++)
forinit	0:0	35:30	9	 int k = 0 ;
decl	35:21	35:30	10	int	k
op	35:27	0:0	10	=
water	35:29	0:0	10	0
cond	35:32	35:45	9	k <= p_mark -> i_play_item_id
water	35:32	0:0	10	k
op	35:34	0:0	10	<=
water	35:37	0:0	10	p_mark
op	35:43	0:0	10	->
water	35:45	0:0	10	i_play_item_id
forexpr	35:61	35:62	9	k ++
water	35:61	0:0	10	k
op	35:62	0:0	10	++
stmts	36:16	44:16	9	
water	36:16	0:0	10	{
decl	37:20	37:79	10	const bd_mpls_play_item_t	*p_item
op	37:54	0:0	10	=
op	37:56	0:0	10	&
water	37:57	0:0	10	p_mpls
op	37:63	0:0	10	->
water	37:65	0:0	10	p_play_item
op	37:76	0:0	10	[
water	37:77	0:0	10	k
op	37:78	0:0	10	]
decl	38:20	38:38	10	int64_t	i_out_time
if	39:20	40:51	10	(k == p_mark -> i_play_item_id)
cond	39:24	39:37	11	k == p_mark -> i_play_item_id
water	39:24	0:0	12	k
op	39:26	0:0	12	==
water	39:29	0:0	12	p_mark
op	39:35	0:0	12	->
water	39:37	0:0	12	i_play_item_id
stmts	40:24	40:51	11	
water	40:24	0:0	12	i_out_time
op	40:35	0:0	12	=
water	40:37	0:0	12	p_mark
op	40:43	0:0	12	->
water	40:45	0:0	12	i_time
water	40:51	0:0	12	;
else	41:20	42:55	10
stmts	42:24	42:55	11	
water	42:24	0:0	12	i_out_time
op	42:35	0:0	12	=
water	42:37	0:0	12	p_item
op	42:43	0:0	12	->
water	42:45	0:0	12	i_out_time
water	42:55	0:0	12	;
water	43:20	0:0	10	s
op	43:21	0:0	10	->
water	43:23	0:0	10	i_time_offset
op	43:37	0:0	10	+=
water	43:40	0:0	10	(
water	43:42	0:0	10	i_out_time
op	43:53	0:0	10	-
water	43:55	0:0	10	p_item
op	43:61	0:0	10	->
water	43:63	0:0	10	i_in_time
water	43:73	0:0	10	)
op	43:75	0:0	10	*
water	43:77	0:0	10	CLOCK_FREQ
op	43:88	0:0	10	/
water	43:90	0:0	10	BD_45KHZ
water	43:98	0:0	10	;
water	44:16	0:0	10	}
water	46:16	0:0	8	{
decl	47:16	47:48	8	char	psz_time[MSTRTIME_MAX_SIZE]
call	48:16	48:119	8	msg_Warn
arg	48:26	48:33	9	p_demux
water	48:26	0:0	10	p_demux
arg	48:35	48:57	9	"    SEEKPOINT[%d] %s"
water	48:35	0:0	10	"    SEEKPOINT[%d] %s"
arg	48:59	48:60	9	j
water	48:59	0:0	10	j
arg	48:62	48:119	9	secstotimestr(psz_time,s->i_time_offset/CLOCK_FREQ)
call	48:62	48:117	10	secstotimestr
arg	48:77	48:85	11	psz_time
water	48:77	0:0	12	psz_time
arg	48:87	48:117	11	s->i_time_offset/CLOCK_FREQ
water	48:87	0:0	12	s
op	48:88	0:0	12	->
water	48:90	0:0	12	i_time_offset
op	48:104	0:0	12	/
water	48:106	0:0	12	CLOCK_FREQ
water	48:120	0:0	8	;
water	49:16	0:0	8	}
call	51:16	51:60	8	TAB_APPEND
arg	51:28	51:42	9	t->i_seekpoint
water	51:28	0:0	10	t
op	51:29	0:0	10	->
water	51:31	0:0	10	i_seekpoint
arg	51:44	51:56	9	t->seekpoint
water	51:44	0:0	10	t
op	51:45	0:0	10	->
water	51:47	0:0	10	seekpoint
arg	51:58	51:60	9	s
water	51:58	0:0	10	s
water	51:61	0:0	8	;
water	52:12	0:0	8	}
water	53:8	0:0	6	}
if	54:8	59:8	4	(t -> i_seekpoint <= 0)
cond	54:12	54:30	5	t -> i_seekpoint <= 0
water	54:12	0:0	6	t
op	54:13	0:0	6	->
water	54:15	0:0	6	i_seekpoint
op	54:27	0:0	6	<=
water	54:30	0:0	6	0
stmts	55:8	59:8	5	
water	55:8	0:0	6	{
decl	56:12	56:48	6	seekpoint_t	*s
op	56:27	0:0	6	=
call	56:29	56:47	7	vlc_seekpoint_New
if	57:12	58:61	6	(s)
cond	57:16	57:16	7	s
water	57:16	0:0	8	s
stmts	58:16	58:61	7	
call	58:16	58:60	8	TAB_APPEND
arg	58:28	58:42	9	t->i_seekpoint
water	58:28	0:0	10	t
op	58:29	0:0	10	->
water	58:31	0:0	10	i_seekpoint
arg	58:44	58:56	9	t->seekpoint
water	58:44	0:0	10	t
op	58:45	0:0	10	->
water	58:47	0:0	10	seekpoint
arg	58:58	58:60	9	s
water	58:58	0:0	10	s
water	58:61	0:0	8	;
water	59:8	0:0	6	}
call	60:8	60:55	4	TAB_APPEND
arg	60:20	60:34	5	p_sys->i_title
water	60:20	0:0	6	p_sys
op	60:25	0:0	6	->
water	60:27	0:0	6	i_title
arg	60:36	60:51	5	p_sys->pp_title
water	60:36	0:0	6	p_sys
op	60:41	0:0	6	->
water	60:43	0:0	6	pp_title
arg	60:53	60:55	5	t
water	60:53	0:0	6	t
water	60:56	0:0	4	;
water	61:4	0:0	4	}

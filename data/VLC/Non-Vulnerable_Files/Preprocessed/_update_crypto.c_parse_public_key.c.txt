func	2:0	97:0	0	int	parse_public_key
params	2:20	0:0	1	
param	2:22	2:47	2	const uint8_t *	p_key_data
param	2:49	2:65	2	size_t	i_key_len
param	3:22	3:41	2	public_key_t *	p_key
param	3:43	3:71	2	const uint8_t *	p_sig_issuer
stmnts	0:0	96:23	1	
decl	5:4	5:35	2	const uint8_t	*pos
op	5:23	0:0	2	=
water	5:25	0:0	2	p_key_data
decl	6:4	6:44	2	const uint8_t	*max_pos
op	6:27	0:0	2	=
water	6:29	0:0	2	pos
op	6:33	0:0	2	+
water	6:35	0:0	2	i_key_len
decl	7:4	7:20	2	int	i_status
op	7:17	0:0	2	=
water	7:19	0:0	2	0
decl	11:4	11:35	2	uint8_t	*p_key_unarmored
op	11:29	0:0	2	=
water	11:31	0:0	2	NULL
water	12:4	0:0	2	p_key
op	12:9	0:0	2	->
water	12:11	0:0	2	psz_username
op	12:24	0:0	2	=
water	12:26	0:0	2	NULL
water	12:30	0:0	2	;
water	13:4	0:0	2	p_key
op	13:9	0:0	2	->
water	13:11	0:0	2	sig
op	13:14	0:0	2	.
water	13:15	0:0	2	specific
op	13:23	0:0	2	.
water	13:24	0:0	2	v4
op	13:26	0:0	2	.
water	13:27	0:0	2	hashed_data
op	13:39	0:0	2	=
water	13:41	0:0	2	NULL
water	13:45	0:0	2	;
water	14:4	0:0	2	p_key
op	14:9	0:0	2	->
water	14:11	0:0	2	sig
op	14:14	0:0	2	.
water	14:15	0:0	2	specific
op	14:23	0:0	2	.
water	14:24	0:0	2	v4
op	14:26	0:0	2	.
water	14:27	0:0	2	unhashed_data
op	14:41	0:0	2	=
water	14:43	0:0	2	NULL
water	14:47	0:0	2	;
if	15:4	26:4	2	(! ( * pos & 0 x80 ))
cond	15:8	15:23	3	! ( * pos & 0 x80 )
op	15:8	0:0	4	!
water	15:9	0:0	4	(
op	15:11	0:0	4	*
water	15:12	0:0	4	pos
op	15:16	0:0	4	&
water	15:18	0:0	4	0
water	15:19	0:0	4	x80
water	15:23	0:0	4	)
stmts	16:4	26:4	3	
water	16:4	0:0	4	{
water	17:8	0:0	4	p_key_unarmored
op	17:24	0:0	4	=
water	17:26	0:0	4	(
water	17:27	0:0	4	uint8_t
op	17:34	0:0	4	*
water	17:35	0:0	4	)
call	17:36	17:54	4	malloc
arg	17:44	17:54	5	i_key_len
water	17:44	0:0	6	i_key_len
water	17:55	0:0	4	;
if	18:8	19:29	4	(! p_key_unarmored)
cond	18:12	18:13	5	! p_key_unarmored
op	18:12	0:0	6	!
water	18:13	0:0	6	p_key_unarmored
stmts	19:12	19:29	5	
return	19:12	19:29	6	VLC_ENOMEM
water	19:19	0:0	7	VLC_ENOMEM
decl	20:8	21:61	4	int	i_len
op	20:18	0:0	4	=
call	20:20	21:60	5	pgp_unarmor
arg	20:33	20:50	6	(char*)p_key_data
water	20:33	0:0	7	(
water	20:34	0:0	7	char
op	20:38	0:0	7	*
water	20:39	0:0	7	)
water	20:40	0:0	7	p_key_data
arg	20:52	20:61	6	i_key_len
water	20:52	0:0	7	i_key_len
arg	21:33	21:48	6	p_key_unarmored
water	21:33	0:0	7	p_key_unarmored
arg	21:50	21:60	6	i_key_len
water	21:50	0:0	7	i_key_len
if	22:8	23:22	4	(i_len == 0)
cond	22:12	22:21	5	i_len == 0
water	22:12	0:0	6	i_len
op	22:18	0:0	6	==
water	22:21	0:0	6	0
stmts	23:12	23:22	5	
goto	23:12	23:22	6	error
water	23:17	0:0	7	error
water	24:8	0:0	4	pos
op	24:12	0:0	4	=
water	24:14	0:0	4	p_key_unarmored
water	24:29	0:0	4	;
water	25:8	0:0	4	max_pos
op	25:16	0:0	4	=
water	25:18	0:0	4	pos
op	25:22	0:0	4	+
water	25:24	0:0	4	i_len
water	25:29	0:0	4	;
water	26:4	0:0	4	}
while	27:4	81:4	2	(pos < max_pos)
cond	27:11	27:17	3	pos < max_pos
water	27:11	0:0	4	pos
op	27:15	0:0	4	<
water	27:17	0:0	4	max_pos
stmts	28:4	81:4	3	
water	28:4	0:0	4	{
if	29:8	30:22	4	(! ( * pos & 0 x80 ) || * pos & 0 x40)
cond	29:12	29:38	5	! ( * pos & 0 x80 ) || * pos & 0 x40
op	29:12	0:0	6	!
water	29:13	0:0	6	(
op	29:14	0:0	6	*
water	29:15	0:0	6	pos
op	29:19	0:0	6	&
water	29:21	0:0	6	0
water	29:22	0:0	6	x80
water	29:25	0:0	6	)
op	29:27	0:0	6	||
op	29:30	0:0	6	*
water	29:31	0:0	6	pos
op	29:35	0:0	6	&
water	29:37	0:0	6	0
water	29:38	0:0	6	x40
stmts	30:12	30:22	5	
goto	30:12	30:22	6	error
water	30:17	0:0	7	error
decl	31:8	31:40	4	int	i_type
op	31:19	0:0	4	=
call	31:21	31:39	5	packet_type
arg	31:34	31:39	6	*pos
op	31:34	0:0	7	*
water	31:35	0:0	7	pos
decl	32:8	32:54	4	int	i_header_len
op	32:25	0:0	4	=
call	32:27	32:53	5	packet_header_len
arg	32:46	32:53	6	*pos++
op	32:46	0:0	7	*
water	32:47	0:0	7	pos
op	32:50	0:0	7	++
if	33:8	35:22	4	(pos + i_header_len > max_pos || ( i_header_len != 1 && i_header_len != 2 && i_header_len != 4 ))
cond	33:12	34:74	5	pos + i_header_len > max_pos || ( i_header_len != 1 && i_header_len != 2 && i_header_len != 4 )
water	33:12	0:0	6	pos
op	33:16	0:0	6	+
water	33:18	0:0	6	i_header_len
op	33:31	0:0	6	>
water	33:33	0:0	6	max_pos
op	33:41	0:0	6	||
water	34:12	0:0	6	(
water	34:14	0:0	6	i_header_len
op	34:27	0:0	6	!=
water	34:30	0:0	6	1
op	34:32	0:0	6	&&
water	34:35	0:0	6	i_header_len
op	34:48	0:0	6	!=
water	34:51	0:0	6	2
op	34:53	0:0	6	&&
water	34:56	0:0	6	i_header_len
op	34:69	0:0	6	!=
water	34:72	0:0	6	4
water	34:74	0:0	6	)
stmts	35:12	35:22	5	
goto	35:12	35:22	6	error
water	35:17	0:0	7	error
decl	36:8	36:61	4	int	i_packet_len
op	36:25	0:0	4	=
call	36:27	36:60	5	scalar_number
arg	36:42	36:45	6	pos
water	36:42	0:0	7	pos
arg	36:47	36:60	6	i_header_len
water	36:47	0:0	7	i_header_len
water	37:8	0:0	4	pos
op	37:12	0:0	4	+=
water	37:15	0:0	4	i_header_len
water	37:27	0:0	4	;
if	38:8	39:22	4	(pos + i_packet_len > max_pos)
cond	38:12	38:33	5	pos + i_packet_len > max_pos
water	38:12	0:0	6	pos
op	38:16	0:0	6	+
water	38:18	0:0	6	i_packet_len
op	38:31	0:0	6	>
water	38:33	0:0	6	max_pos
stmts	39:12	39:22	5	
goto	39:12	39:22	6	error
water	39:17	0:0	7	error
switch	40:8	79:8	4	(i_type)
cond	40:16	40:16	5	i_type
water	40:16	0:0	6	i_type
stmts	41:8	79:8	5	
water	41:8	0:0	6	{
label	42:12	42:34	6	case PUBLIC_KEY_PACKET :
water	43:16	0:0	6	i_status
op	43:25	0:0	6	|=
water	43:28	0:0	6	PUBLIC_KEY_FOUND
water	43:44	0:0	6	;
if	44:16	45:30	6	(parse_public_key_packet (& p_key -> key ,pos ,i_packet_len ) != VLC_SUCCESS)
cond	44:20	44:81	7	parse_public_key_packet (& p_key -> key ,pos ,i_packet_len ) != VLC_SUCCESS
call	44:20	44:76	8	parse_public_key_packet
arg	44:45	44:56	9	&p_key->key
op	44:45	0:0	10	&
water	44:46	0:0	10	p_key
op	44:51	0:0	10	->
water	44:53	0:0	10	key
arg	44:58	44:61	9	pos
water	44:58	0:0	10	pos
arg	44:63	44:76	9	i_packet_len
water	44:63	0:0	10	i_packet_len
op	44:78	0:0	8	!=
water	44:81	0:0	8	VLC_SUCCESS
stmts	45:20	45:30	7	
goto	45:20	45:30	8	error
water	45:25	0:0	9	error
break	46:16	46:21	6	
label	47:12	47:33	6	case SIGNATURE_PACKET :
if	48:16	49:25	6	(i_status & SIGNATURE_FOUND || ! p_sig_issuer)
cond	48:20	48:51	7	i_status & SIGNATURE_FOUND || ! p_sig_issuer
water	48:20	0:0	8	i_status
op	48:29	0:0	8	&
water	48:31	0:0	8	SIGNATURE_FOUND
op	48:47	0:0	8	||
op	48:50	0:0	8	!
water	48:51	0:0	8	p_sig_issuer
stmts	49:20	49:25	7	
break	49:20	49:25	8	
decl	50:16	51:66	6	int	i_ret
op	50:26	0:0	6	=
call	50:28	51:65	7	parse_signature_packet
arg	50:52	50:63	8	&p_key->sig
op	50:52	0:0	9	&
water	50:53	0:0	9	p_key
op	50:58	0:0	9	->
water	50:60	0:0	9	sig
arg	50:65	50:68	8	pos
water	50:65	0:0	9	pos
arg	51:52	51:65	8	i_packet_len
water	51:52	0:0	9	i_packet_len
if	52:16	65:16	6	(i_ret == VLC_SUCCESS)
cond	52:20	52:29	7	i_ret == VLC_SUCCESS
water	52:20	0:0	8	i_ret
op	52:26	0:0	8	==
water	52:29	0:0	8	VLC_SUCCESS
stmts	53:16	65:16	7	
water	53:16	0:0	8	{
if	54:20	55:29	8	(p_key -> sig . version != 4)
cond	54:24	54:46	9	p_key -> sig . version != 4
water	54:24	0:0	10	p_key
op	54:29	0:0	10	->
water	54:31	0:0	10	sig
op	54:34	0:0	10	.
water	54:35	0:0	10	version
op	54:43	0:0	10	!=
water	54:46	0:0	10	4
stmts	55:24	55:29	9	
break	55:24	55:29	10	
if	56:20	63:20	8	(memcmp (p_key -> sig . issuer_longid ,p_sig_issuer ,8 ))
cond	56:24	56:74	9	memcmp (p_key -> sig . issuer_longid ,p_sig_issuer ,8 )
call	56:24	56:74	10	memcmp
arg	56:32	56:56	11	p_key->sig.issuer_longid
water	56:32	0:0	12	p_key
op	56:37	0:0	12	->
water	56:39	0:0	12	sig
op	56:42	0:0	12	.
water	56:43	0:0	12	issuer_longid
arg	56:58	56:70	11	p_sig_issuer
water	56:58	0:0	12	p_sig_issuer
arg	56:72	56:74	11	8
water	56:72	0:0	12	8
stmts	57:20	63:20	9	
water	57:20	0:0	10	{
call	58:24	58:65	10	free
arg	58:30	58:65	11	p_key->sig.specific.v4.hashed_data
water	58:30	0:0	12	p_key
op	58:35	0:0	12	->
water	58:37	0:0	12	sig
op	58:40	0:0	12	.
water	58:41	0:0	12	specific
op	58:49	0:0	12	.
water	58:50	0:0	12	v4
op	58:52	0:0	12	.
water	58:53	0:0	12	hashed_data
water	58:66	0:0	10	;
call	59:24	59:67	10	free
arg	59:30	59:67	11	p_key->sig.specific.v4.unhashed_data
water	59:30	0:0	12	p_key
op	59:35	0:0	12	->
water	59:37	0:0	12	sig
op	59:40	0:0	12	.
water	59:41	0:0	12	specific
op	59:49	0:0	12	.
water	59:50	0:0	12	v4
op	59:52	0:0	12	.
water	59:53	0:0	12	unhashed_data
water	59:68	0:0	10	;
water	60:24	0:0	10	p_key
op	60:29	0:0	10	->
water	60:31	0:0	10	sig
op	60:34	0:0	10	.
water	60:35	0:0	10	specific
op	60:43	0:0	10	.
water	60:44	0:0	10	v4
op	60:46	0:0	10	.
water	60:47	0:0	10	hashed_data
op	60:59	0:0	10	=
water	60:61	0:0	10	NULL
water	60:65	0:0	10	;
water	61:24	0:0	10	p_key
op	61:29	0:0	10	->
water	61:31	0:0	10	sig
op	61:34	0:0	10	.
water	61:35	0:0	10	specific
op	61:43	0:0	10	.
water	61:44	0:0	10	v4
op	61:46	0:0	10	.
water	61:47	0:0	10	unhashed_data
op	61:61	0:0	10	=
water	61:63	0:0	10	NULL
water	61:67	0:0	10	;
break	62:24	62:29	10	
water	63:20	0:0	10	}
water	64:20	0:0	8	i_status
op	64:29	0:0	8	|=
water	64:32	0:0	8	SIGNATURE_FOUND
water	64:47	0:0	8	;
water	65:16	0:0	8	}
break	66:16	66:21	6	
label	67:12	67:31	6	case USER_ID_PACKET :
if	68:16	69:25	6	(p_key -> psz_username)
cond	68:20	68:27	7	p_key -> psz_username
water	68:20	0:0	8	p_key
op	68:25	0:0	8	->
water	68:27	0:0	8	psz_username
stmts	69:20	69:25	7	
break	69:20	69:25	8	
water	70:16	0:0	6	i_status
op	70:25	0:0	6	|=
water	70:28	0:0	6	USER_ID_FOUND
water	70:41	0:0	6	;
water	71:16	0:0	6	p_key
op	71:21	0:0	6	->
water	71:23	0:0	6	psz_username
op	71:36	0:0	6	=
water	71:38	0:0	6	(
water	71:39	0:0	6	uint8_t
op	71:46	0:0	6	*
water	71:47	0:0	6	)
call	71:48	71:72	6	malloc
arg	71:56	71:72	7	i_packet_len+1
water	71:56	0:0	8	i_packet_len
op	71:69	0:0	8	+
water	71:71	0:0	8	1
water	71:73	0:0	6	;
if	72:16	73:30	6	(! p_key -> psz_username)
cond	72:20	72:28	7	! p_key -> psz_username
op	72:20	0:0	8	!
water	72:21	0:0	8	p_key
op	72:26	0:0	8	->
water	72:28	0:0	8	psz_username
stmts	73:20	73:30	7	
goto	73:20	73:30	8	error
water	73:25	0:0	9	error
call	74:16	74:63	6	memcpy
arg	74:24	74:43	7	p_key->psz_username
water	74:24	0:0	8	p_key
op	74:29	0:0	8	->
water	74:31	0:0	8	psz_username
arg	74:45	74:48	7	pos
water	74:45	0:0	8	pos
arg	74:50	74:63	7	i_packet_len
water	74:50	0:0	8	i_packet_len
water	74:64	0:0	6	;
water	75:16	0:0	6	p_key
op	75:21	0:0	6	->
water	75:23	0:0	6	psz_username
op	75:35	0:0	6	[
water	75:36	0:0	6	i_packet_len
op	75:48	0:0	6	]
op	75:50	0:0	6	=
water	75:52	0:0	6	'\0'
water	75:56	0:0	6	;
break	76:16	76:21	6	
label	77:12	77:19	6	default :
break	78:16	78:21	6	
water	79:8	0:0	6	}
water	80:8	0:0	4	pos
op	80:12	0:0	4	+=
water	80:15	0:0	4	i_packet_len
water	80:27	0:0	4	;
water	81:4	0:0	4	}
call	82:4	82:26	2	free
arg	82:10	82:26	3	p_key_unarmored
water	82:10	0:0	4	p_key_unarmored
water	82:27	0:0	2	;
if	83:4	84:27	2	(! ( i_status & ( PUBLIC_KEY_FOUND | USER_ID_FOUND ) ))
cond	83:8	83:59	3	! ( i_status & ( PUBLIC_KEY_FOUND | USER_ID_FOUND ) )
op	83:8	0:0	4	!
water	83:9	0:0	4	(
water	83:11	0:0	4	i_status
op	83:20	0:0	4	&
water	83:22	0:0	4	(
water	83:24	0:0	4	PUBLIC_KEY_FOUND
op	83:41	0:0	4	|
water	83:43	0:0	4	USER_ID_FOUND
water	83:57	0:0	4	)
water	83:59	0:0	4	)
stmts	84:8	84:27	3	
return	84:8	84:27	4	VLC_EGENERIC
water	84:15	0:0	5	VLC_EGENERIC
if	85:4	86:27	2	(p_sig_issuer && ! ( i_status & SIGNATURE_FOUND ))
cond	85:8	85:54	3	p_sig_issuer && ! ( i_status & SIGNATURE_FOUND )
water	85:8	0:0	4	p_sig_issuer
op	85:21	0:0	4	&&
op	85:24	0:0	4	!
water	85:25	0:0	4	(
water	85:27	0:0	4	i_status
op	85:36	0:0	4	&
water	85:38	0:0	4	SIGNATURE_FOUND
water	85:54	0:0	4	)
stmts	86:8	86:27	3	
return	86:8	86:27	4	VLC_EGENERIC
water	86:15	0:0	5	VLC_EGENERIC
return	87:4	87:22	2	VLC_SUCCESS
water	87:11	0:0	3	VLC_SUCCESS
label	88:0	88:5	2	error :
if	89:4	93:4	2	(p_key -> sig . version == 4)
cond	89:8	89:30	3	p_key -> sig . version == 4
water	89:8	0:0	4	p_key
op	89:13	0:0	4	->
water	89:15	0:0	4	sig
op	89:18	0:0	4	.
water	89:19	0:0	4	version
op	89:27	0:0	4	==
water	89:30	0:0	4	4
stmts	90:4	93:4	3	
water	90:4	0:0	4	{
call	91:8	91:49	4	free
arg	91:14	91:49	5	p_key->sig.specific.v4.hashed_data
water	91:14	0:0	6	p_key
op	91:19	0:0	6	->
water	91:21	0:0	6	sig
op	91:24	0:0	6	.
water	91:25	0:0	6	specific
op	91:33	0:0	6	.
water	91:34	0:0	6	v4
op	91:36	0:0	6	.
water	91:37	0:0	6	hashed_data
water	91:50	0:0	4	;
call	92:8	92:51	4	free
arg	92:14	92:51	5	p_key->sig.specific.v4.unhashed_data
water	92:14	0:0	6	p_key
op	92:19	0:0	6	->
water	92:21	0:0	6	sig
op	92:24	0:0	6	.
water	92:25	0:0	6	specific
op	92:33	0:0	6	.
water	92:34	0:0	6	v4
op	92:36	0:0	6	.
water	92:37	0:0	6	unhashed_data
water	92:52	0:0	4	;
water	93:4	0:0	4	}
call	94:4	94:30	2	free
arg	94:10	94:30	3	p_key->psz_username
water	94:10	0:0	4	p_key
op	94:15	0:0	4	->
water	94:17	0:0	4	psz_username
water	94:31	0:0	2	;
call	95:4	95:26	2	free
arg	95:10	95:26	3	p_key_unarmored
water	95:10	0:0	4	p_key_unarmored
water	95:27	0:0	2	;
return	96:4	96:23	2	VLC_EGENERIC
water	96:11	0:0	3	VLC_EGENERIC

func	2:0	46:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	p_this
stmnts	0:0	45:22	1	
decl	4:4	4:40	2	decoder_t	*dec
op	4:19	0:0	2	=
water	4:21	0:0	2	(
water	4:22	0:0	2	decoder_t
op	4:32	0:0	2	*
water	4:33	0:0	2	)
water	4:34	0:0	2	p_this
decl	5:4	5:39	2	const struct vpx_codec_iface	*iface
decl	6:4	6:18	2	int	vp_version
switch	7:4	23:4	2	(dec -> fmt_in . i_codec)
cond	7:12	7:24	3	dec -> fmt_in . i_codec
water	7:12	0:0	4	dec
op	7:15	0:0	4	->
water	7:17	0:0	4	fmt_in
op	7:23	0:0	4	.
water	7:24	0:0	4	i_codec
stmts	8:4	23:4	3	
water	8:4	0:0	4	{
label	10:4	10:22	4	case VLC_CODEC_VP8 :
water	11:8	0:0	4	iface
op	11:14	0:0	4	=
op	11:16	0:0	4	&
water	11:17	0:0	4	vpx_codec_vp8_dx_algo
water	11:38	0:0	4	;
water	12:8	0:0	4	vp_version
op	12:19	0:0	4	=
water	12:21	0:0	4	8
water	12:22	0:0	4	;
break	13:8	13:13	4	
label	16:4	16:22	4	case VLC_CODEC_VP9 :
water	17:8	0:0	4	iface
op	17:14	0:0	4	=
op	17:16	0:0	4	&
water	17:17	0:0	4	vpx_codec_vp9_dx_algo
water	17:38	0:0	4	;
water	18:8	0:0	4	vp_version
op	18:19	0:0	4	=
water	18:21	0:0	4	9
water	18:22	0:0	4	;
break	19:8	19:13	4	
label	21:4	21:11	4	default :
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
water	23:4	0:0	4	}
decl	24:4	24:45	2	decoder_sys_t	*sys
op	24:23	0:0	2	=
call	24:25	24:44	3	malloc
arg	24:32	24:44	4	sizeof(*sys)
op	24:32	0:0	5	sizeof
water	24:38	0:0	5	(
op	24:39	0:0	5	*
water	24:40	0:0	5	sys
water	24:43	0:0	5	)
if	25:4	26:25	2	(! sys)
cond	25:8	25:9	3	! sys
op	25:8	0:0	4	!
water	25:9	0:0	4	sys
stmts	26:8	26:25	3	
return	26:8	26:25	4	VLC_ENOMEM
water	26:15	0:0	5	VLC_ENOMEM
water	27:4	0:0	2	dec
op	27:7	0:0	2	->
water	27:9	0:0	2	p_sys
op	27:15	0:0	2	=
water	27:17	0:0	2	sys
water	27:20	0:0	2	;
decl	28:4	30:5	2	struct vpx_codec_dec_cfg	deccfg
op	28:36	0:0	2	=
water	28:38	0:0	2	{
op	29:8	0:0	2	.
water	29:9	0:0	2	threads
op	29:17	0:0	2	=
call	29:19	29:46	3	__MIN
arg	29:25	29:42	4	vlc_GetCPUCount()
call	29:25	29:41	5	vlc_GetCPUCount
arg	29:44	29:46	4	16
water	29:44	0:0	5	16
water	30:4	0:0	2	}
call	31:4	32:69	2	msg_Dbg
arg	31:12	31:18	3	p_this
water	31:12	0:0	4	p_this
arg	31:20	31:70	3	"VP%d: using libvpx version %s (build options %s)"
water	31:20	0:0	4	"VP%d: using libvpx version %s (build options %s)"
arg	32:8	32:18	3	vp_version
water	32:8	0:0	4	vp_version
arg	32:20	32:43	3	vpx_codec_version_str()
call	32:20	32:42	4	vpx_codec_version_str
arg	32:45	32:69	3	vpx_codec_build_config()
call	32:45	32:68	4	vpx_codec_build_config
water	32:70	0:0	2	;
if	33:4	38:4	2	(vpx_codec_dec_init (& sys -> ctx ,iface ,& deccfg ,0 ) != VPX_CODEC_OK)
cond	33:8	33:60	3	vpx_codec_dec_init (& sys -> ctx ,iface ,& deccfg ,0 ) != VPX_CODEC_OK
call	33:8	33:55	4	vpx_codec_dec_init
arg	33:27	33:36	5	&sys->ctx
op	33:27	0:0	6	&
water	33:28	0:0	6	sys
op	33:31	0:0	6	->
water	33:33	0:0	6	ctx
arg	33:38	33:43	5	iface
water	33:38	0:0	6	iface
arg	33:45	33:52	5	&deccfg
op	33:45	0:0	6	&
water	33:46	0:0	6	deccfg
arg	33:54	33:55	5	0
water	33:54	0:0	6	0
op	33:57	0:0	4	!=
water	33:60	0:0	4	VPX_CODEC_OK
stmts	33:74	38:4	3	
water	33:74	0:0	4	{
decl	34:8	34:54	4	const char	*error
op	34:26	0:0	4	=
call	34:28	34:53	5	vpx_codec_error
arg	34:44	34:53	6	&sys->ctx
op	34:44	0:0	7	&
water	34:45	0:0	7	sys
op	34:48	0:0	7	->
water	34:50	0:0	7	ctx
call	35:8	35:67	4	msg_Err
arg	35:16	35:22	5	p_this
water	35:16	0:0	6	p_this
arg	35:24	35:60	5	"Failed to initialize decoder: %s\n"
water	35:24	0:0	6	"Failed to initialize decoder: %s\n"
arg	35:62	35:67	5	error
water	35:62	0:0	6	error
water	35:68	0:0	4	;
call	36:8	36:16	4	free
arg	36:13	36:16	5	sys
water	36:13	0:0	6	sys
water	36:17	0:0	4	;
return	37:8	37:27	4	VLC_EGENERIC
water	37:15	0:0	5	VLC_EGENERIC
water	37:28	0:0	4	;
water	38:4	0:0	4	}
water	39:4	0:0	2	dec
op	39:7	0:0	2	->
water	39:9	0:0	2	pf_decode_video
op	39:25	0:0	2	=
water	39:27	0:0	2	Decode
water	39:33	0:0	2	;
water	40:4	0:0	2	dec
op	40:7	0:0	2	->
water	40:9	0:0	2	fmt_out
op	40:16	0:0	2	.
water	40:17	0:0	2	i_cat
op	40:23	0:0	2	=
water	40:25	0:0	2	VIDEO_ES
water	40:33	0:0	2	;
water	41:4	0:0	2	dec
op	41:7	0:0	2	->
water	41:9	0:0	2	fmt_out
op	41:16	0:0	2	.
water	41:17	0:0	2	video
op	41:22	0:0	2	.
water	41:23	0:0	2	i_width
op	41:31	0:0	2	=
water	41:33	0:0	2	dec
op	41:36	0:0	2	->
water	41:38	0:0	2	fmt_in
op	41:44	0:0	2	.
water	41:45	0:0	2	video
op	41:50	0:0	2	.
water	41:51	0:0	2	i_width
water	41:58	0:0	2	;
water	42:4	0:0	2	dec
op	42:7	0:0	2	->
water	42:9	0:0	2	fmt_out
op	42:16	0:0	2	.
water	42:17	0:0	2	video
op	42:22	0:0	2	.
water	42:23	0:0	2	i_height
op	42:32	0:0	2	=
water	42:34	0:0	2	dec
op	42:37	0:0	2	->
water	42:39	0:0	2	fmt_in
op	42:45	0:0	2	.
water	42:46	0:0	2	video
op	42:51	0:0	2	.
water	42:52	0:0	2	i_height
water	42:60	0:0	2	;
water	43:4	0:0	2	dec
op	43:7	0:0	2	->
water	43:9	0:0	2	fmt_out
op	43:16	0:0	2	.
water	43:17	0:0	2	i_codec
op	43:25	0:0	2	=
water	43:27	0:0	2	VLC_CODEC_I420
water	43:41	0:0	2	;
water	44:4	0:0	2	dec
op	44:7	0:0	2	->
water	44:9	0:0	2	b_need_packetized
op	44:27	0:0	2	=
water	44:29	0:0	2	true
water	44:33	0:0	2	;
return	45:4	45:22	2	VLC_SUCCESS
water	45:11	0:0	3	VLC_SUCCESS

func	2:0	35:0	0	static int	Setup
params	2:16	0:0	1	
param	2:17	2:29	2	vlc_va_t *	va
param	2:31	2:40	2	void * *	hw
param	2:42	2:62	2	vlc_fourcc_t *	chroma
param	3:17	3:26	2	int	width
param	3:28	3:38	2	int	height
stmnts	0:0	34:22	1	
decl	5:4	5:31	2	vlc_va_sys_t	*sys
op	5:22	0:0	2	=
water	5:24	0:0	2	va
op	5:26	0:0	2	->
water	5:28	0:0	2	sys
if	6:4	7:15	2	(sys -> width == width && sys -> height == height && sys -> decoder)
cond	6:8	6:61	3	sys -> width == width && sys -> height == height && sys -> decoder
water	6:8	0:0	4	sys
op	6:11	0:0	4	->
water	6:13	0:0	4	width
op	6:19	0:0	4	==
water	6:22	0:0	4	width
op	6:28	0:0	4	&&
water	6:31	0:0	4	sys
op	6:34	0:0	4	->
water	6:36	0:0	4	height
op	6:43	0:0	4	==
water	6:46	0:0	4	height
op	6:53	0:0	4	&&
water	6:56	0:0	4	sys
op	6:59	0:0	4	->
water	6:61	0:0	4	decoder
stmts	7:8	7:15	3	
goto	7:8	7:15	4	ok
water	7:13	0:0	5	ok
call	9:4	9:32	2	DxDestroyVideoConversion
arg	9:29	9:32	3	sys
water	9:29	0:0	4	sys
water	9:33	0:0	2	;
call	10:4	10:29	2	DxDestroyVideoDecoder
arg	10:26	10:29	3	sys
water	10:26	0:0	4	sys
water	10:30	0:0	2	;
op	11:4	0:0	2	*
water	11:5	0:0	2	hw
op	11:8	0:0	2	=
water	11:10	0:0	2	NULL
water	11:14	0:0	2	;
op	12:4	0:0	2	*
water	12:5	0:0	2	chroma
op	12:12	0:0	2	=
water	12:14	0:0	2	0
water	12:15	0:0	2	;
if	13:4	14:27	2	(width <= 0 || height <= 0)
cond	13:8	13:32	3	width <= 0 || height <= 0
water	13:8	0:0	4	width
op	13:14	0:0	4	<=
water	13:17	0:0	4	0
op	13:19	0:0	4	||
water	13:22	0:0	4	height
op	13:29	0:0	4	<=
water	13:32	0:0	4	0
stmts	14:8	14:27	3	
return	14:8	14:27	4	VLC_EGENERIC
water	14:15	0:0	5	VLC_EGENERIC
decl	16:4	16:22	2	video_format_t	fmt
call	17:4	17:31	2	memset
arg	17:11	17:15	3	&fmt
op	17:11	0:0	4	&
water	17:12	0:0	4	fmt
arg	17:17	17:18	3	0
water	17:17	0:0	4	0
arg	17:20	17:31	3	sizeof(fmt)
op	17:20	0:0	4	sizeof
water	17:26	0:0	4	(
water	17:27	0:0	4	fmt
water	17:30	0:0	4	)
water	17:32	0:0	2	;
water	18:4	0:0	2	fmt
op	18:7	0:0	2	.
water	18:8	0:0	2	i_width
op	18:16	0:0	2	=
water	18:18	0:0	2	width
water	18:23	0:0	2	;
water	19:4	0:0	2	fmt
op	19:7	0:0	2	.
water	19:8	0:0	2	i_height
op	19:17	0:0	2	=
water	19:19	0:0	2	height
water	19:25	0:0	2	;
if	20:4	21:27	2	(DxCreateVideoDecoder (va ,sys -> codec_id ,& fmt ))
cond	20:8	20:52	3	DxCreateVideoDecoder (va ,sys -> codec_id ,& fmt )
call	20:8	20:52	4	DxCreateVideoDecoder
arg	20:29	20:31	5	va
water	20:29	0:0	6	va
arg	20:33	20:46	5	sys->codec_id
water	20:33	0:0	6	sys
op	20:36	0:0	6	->
water	20:38	0:0	6	codec_id
arg	20:48	20:52	5	&fmt
op	20:48	0:0	6	&
water	20:49	0:0	6	fmt
stmts	21:8	21:27	3	
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	23:4	0:0	2	sys
op	23:7	0:0	2	->
water	23:9	0:0	2	hw
op	23:11	0:0	2	.
water	23:12	0:0	2	decoder
op	23:20	0:0	2	=
water	23:22	0:0	2	sys
op	23:25	0:0	2	->
water	23:27	0:0	2	decoder
water	23:34	0:0	2	;
water	24:4	0:0	2	sys
op	24:7	0:0	2	->
water	24:9	0:0	2	hw
op	24:11	0:0	2	.
water	24:12	0:0	2	cfg
op	24:16	0:0	2	=
op	24:18	0:0	2	&
water	24:19	0:0	2	sys
op	24:22	0:0	2	->
water	24:24	0:0	2	cfg
water	24:27	0:0	2	;
water	25:4	0:0	2	sys
op	25:7	0:0	2	->
water	25:9	0:0	2	hw
op	25:11	0:0	2	.
water	25:12	0:0	2	surface_count
op	25:26	0:0	2	=
water	25:28	0:0	2	sys
op	25:31	0:0	2	->
water	25:33	0:0	2	surface_count
water	25:46	0:0	2	;
water	26:4	0:0	2	sys
op	26:7	0:0	2	->
water	26:9	0:0	2	hw
op	26:11	0:0	2	.
water	26:12	0:0	2	surface
op	26:20	0:0	2	=
water	26:22	0:0	2	sys
op	26:25	0:0	2	->
water	26:27	0:0	2	hw_surface
water	26:37	0:0	2	;
call	28:4	28:31	2	DxCreateVideoConversion
arg	28:28	28:31	3	sys
water	28:28	0:0	4	sys
water	28:32	0:0	2	;
label	30:0	30:2	2	ok :
op	31:4	0:0	2	*
water	31:5	0:0	2	hw
op	31:8	0:0	2	=
op	31:10	0:0	2	&
water	31:11	0:0	2	sys
op	31:14	0:0	2	->
water	31:16	0:0	2	hw
water	31:18	0:0	2	;
decl	32:4	32:59	2	const d3d_format_t	*output
op	32:31	0:0	2	=
call	32:33	32:58	3	D3dFindFormat
arg	32:47	32:58	4	sys->output
water	32:47	0:0	5	sys
op	32:50	0:0	5	->
water	32:52	0:0	5	output
op	33:4	0:0	2	*
water	33:5	0:0	2	chroma
op	33:12	0:0	2	=
water	33:14	0:0	2	output
op	33:20	0:0	2	->
water	33:22	0:0	2	codec
water	33:27	0:0	2	;
return	34:4	34:22	2	VLC_SUCCESS
water	34:11	0:0	3	VLC_SUCCESS

func	2:0	29:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	28:22	1	
decl	4:4	4:48	2	sout_mux_t	*p_mux
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	sout_mux_t
op	4:40	0:0	2	*
water	4:41	0:0	2	)
water	4:42	0:0	2	p_this
decl	5:4	5:26	2	sout_mux_sys_t	*p_sys
call	6:4	6:39	2	msg_Dbg
arg	6:13	6:18	3	p_mux
water	6:13	0:0	4	p_mux
arg	6:20	6:39	3	"AVI muxer opened"
water	6:20	0:0	4	"AVI muxer opened"
water	6:40	0:0	2	;
water	7:4	0:0	2	p_sys
op	7:10	0:0	2	=
call	7:12	7:45	2	malloc
arg	7:20	7:45	3	sizeof(sout_mux_sys_t)
op	7:20	0:0	4	sizeof
water	7:26	0:0	4	(
water	7:28	0:0	4	sout_mux_sys_t
water	7:43	0:0	4	)
water	7:46	0:0	2	;
if	8:4	9:25	2	(! p_sys)
cond	8:8	8:9	3	! p_sys
op	8:8	0:0	4	!
water	8:9	0:0	4	p_sys
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
water	10:4	0:0	2	p_sys
op	10:9	0:0	2	->
water	10:11	0:0	2	i_streams
op	10:21	0:0	2	=
water	10:23	0:0	2	0
water	10:24	0:0	2	;
water	11:4	0:0	2	p_sys
op	11:9	0:0	2	->
water	11:11	0:0	2	i_stream_video
op	11:26	0:0	2	=
op	11:28	0:0	2	-
water	11:29	0:0	2	1
water	11:30	0:0	2	;
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	i_movi_size
op	12:23	0:0	2	=
water	12:25	0:0	2	0
water	12:26	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	idx1
op	13:15	0:0	2	.
water	13:16	0:0	2	i_entry_count
op	13:30	0:0	2	=
water	13:32	0:0	2	0
water	13:33	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	idx1
op	14:15	0:0	2	.
water	14:16	0:0	2	i_entry_max
op	14:28	0:0	2	=
water	14:30	0:0	2	10000
water	14:35	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	idx1
op	15:15	0:0	2	.
water	15:16	0:0	2	entry
op	15:22	0:0	2	=
call	15:24	16:59	2	calloc
arg	15:32	15:55	3	p_sys->idx1.i_entry_max
water	15:32	0:0	4	p_sys
op	15:37	0:0	4	->
water	15:39	0:0	4	idx1
op	15:43	0:0	4	.
water	15:44	0:0	4	i_entry_max
arg	16:32	16:59	3	sizeof(avi_idx1_entry_t)
op	16:32	0:0	4	sizeof
water	16:38	0:0	4	(
water	16:40	0:0	4	avi_idx1_entry_t
water	16:57	0:0	4	)
water	16:60	0:0	2	;
if	17:4	21:4	2	(! p_sys -> idx1 . entry)
cond	17:8	17:21	3	! p_sys -> idx1 . entry
op	17:8	0:0	4	!
water	17:9	0:0	4	p_sys
op	17:14	0:0	4	->
water	17:16	0:0	4	idx1
op	17:20	0:0	4	.
water	17:21	0:0	4	entry
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
call	19:8	19:20	4	free
arg	19:14	19:20	5	p_sys
water	19:14	0:0	6	p_sys
water	19:21	0:0	4	;
return	20:8	20:25	4	VLC_ENOMEM
water	20:15	0:0	5	VLC_ENOMEM
water	21:4	0:0	4	}
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	b_write_header
op	22:26	0:0	2	=
water	22:28	0:0	2	true
water	22:32	0:0	2	;
water	23:4	0:0	2	p_mux
op	23:9	0:0	2	->
water	23:11	0:0	2	pf_control
op	23:24	0:0	2	=
water	23:26	0:0	2	Control
water	23:33	0:0	2	;
water	24:4	0:0	2	p_mux
op	24:9	0:0	2	->
water	24:11	0:0	2	pf_addstream
op	24:24	0:0	2	=
water	24:26	0:0	2	AddStream
water	24:35	0:0	2	;
water	25:4	0:0	2	p_mux
op	25:9	0:0	2	->
water	25:11	0:0	2	pf_delstream
op	25:24	0:0	2	=
water	25:26	0:0	2	DelStream
water	25:35	0:0	2	;
water	26:4	0:0	2	p_mux
op	26:9	0:0	2	->
water	26:11	0:0	2	pf_mux
op	26:24	0:0	2	=
water	26:26	0:0	2	Mux
water	26:29	0:0	2	;
water	27:4	0:0	2	p_mux
op	27:9	0:0	2	->
water	27:11	0:0	2	p_sys
op	27:24	0:0	2	=
water	27:26	0:0	2	p_sys
water	27:31	0:0	2	;
return	28:4	28:22	2	VLC_SUCCESS
water	28:11	0:0	3	VLC_SUCCESS

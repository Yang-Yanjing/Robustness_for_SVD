func	2:0	14:0	0	int	input_Start
params	2:15	0:0	1	
param	2:17	2:41	2	input_thread_t *	p_input
stmnts	5:4	13:22	1	
water	5:4	0:0	2	p_input
op	5:11	0:0	2	->
water	5:13	0:0	2	p
op	5:14	0:0	2	->
water	5:16	0:0	2	is_running
op	5:27	0:0	2	=
op	5:29	0:0	2	!
call	5:30	6:81	2	vlc_clone
arg	5:41	5:60	3	&p_input->p->thread
op	5:41	0:0	4	&
water	5:42	0:0	4	p_input
op	5:49	0:0	4	->
water	5:51	0:0	4	p
op	5:52	0:0	4	->
water	5:54	0:0	4	thread
arg	6:41	6:44	3	Run
water	6:41	0:0	4	Run
arg	6:46	6:53	3	p_input
water	6:46	0:0	4	p_input
arg	6:55	6:81	3	VLC_THREAD_PRIORITY_INPUT
water	6:55	0:0	4	VLC_THREAD_PRIORITY_INPUT
water	6:82	0:0	2	;
if	7:4	12:4	2	(! p_input -> p -> is_running)
cond	7:8	7:21	3	! p_input -> p -> is_running
op	7:8	0:0	4	!
water	7:9	0:0	4	p_input
op	7:16	0:0	4	->
water	7:18	0:0	4	p
op	7:19	0:0	4	->
water	7:21	0:0	4	is_running
stmts	8:4	12:4	3	
water	8:4	0:0	4	{
call	9:8	9:44	4	input_ChangeState
arg	9:27	9:34	5	p_input
water	9:27	0:0	6	p_input
arg	9:36	9:44	5	ERROR_S
water	9:36	0:0	6	ERROR_S
water	9:45	0:0	4	;
call	10:8	10:55	4	msg_Err
arg	10:17	10:24	5	p_input
water	10:17	0:0	6	p_input
arg	10:26	10:55	5	"cannot create input thread"
water	10:26	0:0	6	"cannot create input thread"
water	10:56	0:0	4	;
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
water	12:4	0:0	4	}
return	13:4	13:22	2	VLC_SUCCESS
water	13:11	0:0	3	VLC_SUCCESS

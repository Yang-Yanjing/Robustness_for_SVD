func	2:0	68:0	0	static block_t *	DoWork
params	2:22	0:0	1	
param	2:24	2:43	2	filter_t *	p_filter
param	2:45	2:64	2	block_t *	p_in_buf
stmnts	0:0	67:20	1	
decl	4:4	4:42	2	filter_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_filter
op	4:35	0:0	2	->
water	4:37	0:0	2	p_sys
decl	5:4	5:46	2	float	*p_in
op	5:17	0:0	2	=
water	5:19	0:0	2	(
water	5:20	0:0	2	float
op	5:25	0:0	2	*
water	5:26	0:0	2	)
water	5:28	0:0	2	p_in_buf
op	5:36	0:0	2	->
water	5:38	0:0	2	p_buffer
decl	6:4	6:48	2	size_t	i_nb_samples
op	6:24	0:0	2	=
water	6:26	0:0	2	p_in_buf
op	6:34	0:0	2	->
water	6:36	0:0	2	i_nb_samples
decl	7:4	7:76	2	size_t	i_nb_channels
op	7:25	0:0	2	=
call	7:27	7:75	3	aout_FormatNbChannels
arg	7:50	7:75	4	&p_filter->fmt_out.audio
op	7:50	0:0	5	&
water	7:51	0:0	5	p_filter
op	7:59	0:0	5	->
water	7:61	0:0	5	fmt_out
op	7:68	0:0	5	.
water	7:69	0:0	5	audio
decl	8:4	8:24	2	size_t	i_nb_rear
op	8:21	0:0	2	=
water	8:23	0:0	2	0
decl	9:4	9:12	2	size_t	i
decl	10:4	11:78	2	block_t	*p_out_buf
op	10:23	0:0	2	=
call	10:25	11:77	3	block_Alloc
arg	11:32	11:77	4	sizeof(float)*i_nb_samples*i_nb_channels
op	11:32	0:0	5	sizeof
water	11:38	0:0	5	(
water	11:39	0:0	5	float
water	11:44	0:0	5	)
op	11:46	0:0	5	*
water	11:48	0:0	5	i_nb_samples
op	11:61	0:0	5	*
water	11:63	0:0	5	i_nb_channels
if	12:4	13:16	2	(! p_out_buf)
cond	12:8	12:9	3	! p_out_buf
op	12:8	0:0	4	!
water	12:9	0:0	4	p_out_buf
stmts	13:8	13:16	3	
goto	13:8	13:16	4	out
water	13:13	0:0	5	out
decl	14:4	14:48	2	float	*p_out
op	14:18	0:0	2	=
water	14:20	0:0	2	(
water	14:21	0:0	2	float
op	14:26	0:0	2	*
water	14:27	0:0	2	)
water	14:29	0:0	2	p_out_buf
op	14:38	0:0	2	->
water	14:40	0:0	2	p_buffer
water	15:4	0:0	2	p_out_buf
op	15:13	0:0	2	->
water	15:15	0:0	2	i_nb_samples
op	15:28	0:0	2	=
water	15:30	0:0	2	i_nb_samples
water	15:42	0:0	2	;
water	16:4	0:0	2	p_out_buf
op	16:13	0:0	2	->
water	16:15	0:0	2	i_dts
op	16:28	0:0	2	=
water	16:30	0:0	2	p_in_buf
op	16:38	0:0	2	->
water	16:40	0:0	2	i_dts
water	16:45	0:0	2	;
water	17:4	0:0	2	p_out_buf
op	17:13	0:0	2	->
water	17:15	0:0	2	i_pts
op	17:28	0:0	2	=
water	17:30	0:0	2	p_in_buf
op	17:38	0:0	2	->
water	17:40	0:0	2	i_pts
water	17:45	0:0	2	;
water	18:4	0:0	2	p_out_buf
op	18:13	0:0	2	->
water	18:15	0:0	2	i_length
op	18:28	0:0	2	=
water	18:30	0:0	2	p_in_buf
op	18:38	0:0	2	->
water	18:40	0:0	2	i_length
water	18:48	0:0	2	;
call	19:4	19:42	2	memset
arg	19:12	19:17	3	p_out
water	19:12	0:0	4	p_out
arg	19:19	19:20	3	0
water	19:19	0:0	4	0
arg	19:22	19:42	3	p_out_buf->i_buffer
water	19:22	0:0	4	p_out_buf
op	19:31	0:0	4	->
water	19:33	0:0	4	i_buffer
water	19:43	0:0	2	;
if	20:4	23:4	2	(p_sys -> i_rear_left >= 0)
cond	20:8	20:30	3	p_sys -> i_rear_left >= 0
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	i_rear_left
op	20:27	0:0	4	>=
water	20:30	0:0	4	0
stmts	21:4	23:4	3	
water	21:4	0:0	4	{
op	22:8	0:0	4	++
water	22:10	0:0	4	i_nb_rear
water	22:19	0:0	4	;
water	23:4	0:0	4	}
if	24:4	27:4	2	(p_sys -> i_rear_center >= 0)
cond	24:8	24:32	3	p_sys -> i_rear_center >= 0
water	24:8	0:0	4	p_sys
op	24:13	0:0	4	->
water	24:15	0:0	4	i_rear_center
op	24:29	0:0	4	>=
water	24:32	0:0	4	0
stmts	25:4	27:4	3	
water	25:4	0:0	4	{
op	26:8	0:0	4	++
water	26:10	0:0	4	i_nb_rear
water	26:19	0:0	4	;
water	27:4	0:0	4	}
if	28:4	31:4	2	(p_sys -> i_rear_right >= 0)
cond	28:8	28:31	3	p_sys -> i_rear_right >= 0
water	28:8	0:0	4	p_sys
op	28:13	0:0	4	->
water	28:15	0:0	4	i_rear_right
op	28:28	0:0	4	>=
water	28:31	0:0	4	0
stmts	29:4	31:4	3	
water	29:4	0:0	4	{
op	30:8	0:0	4	++
water	30:10	0:0	4	i_nb_rear
water	30:19	0:0	4	;
water	31:4	0:0	4	}
for	32:4	64:4	2	(i = 0 ;i < i_nb_samples;++ i)
forinit	32:9	32:14	3	i = 0 ;
water	32:9	0:0	4	i
op	32:11	0:0	4	=
water	32:13	0:0	4	0
water	32:14	0:0	4	;
cond	32:16	32:20	3	i < i_nb_samples
water	32:16	0:0	4	i
op	32:18	0:0	4	<
water	32:20	0:0	4	i_nb_samples
forexpr	32:34	32:36	3	++ i
op	32:34	0:0	4	++
water	32:36	0:0	4	i
stmts	33:4	64:4	3	
water	33:4	0:0	4	{
decl	34:8	34:36	4	float	f_left
op	34:21	0:0	4	=
water	34:23	0:0	4	p_in
op	34:27	0:0	4	[
water	34:29	0:0	4	i
op	34:31	0:0	4	*
water	34:33	0:0	4	2
op	34:35	0:0	4	]
decl	35:8	35:41	4	float	f_right
op	35:22	0:0	4	=
water	35:24	0:0	4	p_in
op	35:28	0:0	4	[
water	35:30	0:0	4	i
op	35:32	0:0	4	*
water	35:34	0:0	4	2
op	35:36	0:0	4	+
water	35:38	0:0	4	1
op	35:40	0:0	4	]
decl	36:8	36:55	4	float	f_rear
op	36:21	0:0	4	=
water	36:23	0:0	4	(
water	36:25	0:0	4	f_left
op	36:32	0:0	4	-
water	36:34	0:0	4	f_right
water	36:42	0:0	4	)
op	36:44	0:0	4	/
water	36:46	0:0	4	i_nb_rear
if	37:8	43:8	4	(p_sys -> i_center >= 0)
cond	37:12	37:31	5	p_sys -> i_center >= 0
water	37:12	0:0	6	p_sys
op	37:17	0:0	6	->
water	37:19	0:0	6	i_center
op	37:28	0:0	6	>=
water	37:31	0:0	6	0
stmts	38:8	43:8	5	
water	38:8	0:0	6	{
decl	39:12	39:45	6	float	f_center
op	39:27	0:0	6	=
water	39:29	0:0	6	f_left
op	39:36	0:0	6	+
water	39:38	0:0	6	f_right
water	40:12	0:0	6	f_left
op	40:19	0:0	6	-=
water	40:22	0:0	6	f_center
op	40:31	0:0	6	/
water	40:33	0:0	6	2
water	40:34	0:0	6	;
water	41:12	0:0	6	f_right
op	41:20	0:0	6	-=
water	41:23	0:0	6	f_center
op	41:32	0:0	6	/
water	41:34	0:0	6	2
water	41:35	0:0	6	;
water	42:12	0:0	6	p_out
op	42:17	0:0	6	[
water	42:19	0:0	6	i
op	42:21	0:0	6	*
water	42:23	0:0	6	i_nb_channels
op	42:37	0:0	6	+
water	42:39	0:0	6	p_sys
op	42:44	0:0	6	->
water	42:46	0:0	6	i_center
op	42:55	0:0	6	]
op	42:57	0:0	6	=
water	42:59	0:0	6	f_center
water	42:67	0:0	6	;
water	43:8	0:0	6	}
if	44:8	47:8	4	(p_sys -> i_left >= 0)
cond	44:12	44:29	5	p_sys -> i_left >= 0
water	44:12	0:0	6	p_sys
op	44:17	0:0	6	->
water	44:19	0:0	6	i_left
op	44:26	0:0	6	>=
water	44:29	0:0	6	0
stmts	45:8	47:8	5	
water	45:8	0:0	6	{
water	46:12	0:0	6	p_out
op	46:17	0:0	6	[
water	46:19	0:0	6	i
op	46:21	0:0	6	*
water	46:23	0:0	6	i_nb_channels
op	46:37	0:0	6	+
water	46:39	0:0	6	p_sys
op	46:44	0:0	6	->
water	46:46	0:0	6	i_left
op	46:53	0:0	6	]
op	46:55	0:0	6	=
water	46:57	0:0	6	f_left
water	46:63	0:0	6	;
water	47:8	0:0	6	}
if	48:8	51:8	4	(p_sys -> i_right >= 0)
cond	48:12	48:30	5	p_sys -> i_right >= 0
water	48:12	0:0	6	p_sys
op	48:17	0:0	6	->
water	48:19	0:0	6	i_right
op	48:27	0:0	6	>=
water	48:30	0:0	6	0
stmts	49:8	51:8	5	
water	49:8	0:0	6	{
water	50:12	0:0	6	p_out
op	50:17	0:0	6	[
water	50:19	0:0	6	i
op	50:21	0:0	6	*
water	50:23	0:0	6	i_nb_channels
op	50:37	0:0	6	+
water	50:39	0:0	6	p_sys
op	50:44	0:0	6	->
water	50:46	0:0	6	i_right
op	50:54	0:0	6	]
op	50:56	0:0	6	=
water	50:58	0:0	6	f_right
water	50:65	0:0	6	;
water	51:8	0:0	6	}
if	52:8	55:8	4	(p_sys -> i_rear_left >= 0)
cond	52:12	52:34	5	p_sys -> i_rear_left >= 0
water	52:12	0:0	6	p_sys
op	52:17	0:0	6	->
water	52:19	0:0	6	i_rear_left
op	52:31	0:0	6	>=
water	52:34	0:0	6	0
stmts	53:8	55:8	5	
water	53:8	0:0	6	{
water	54:12	0:0	6	p_out
op	54:17	0:0	6	[
water	54:19	0:0	6	i
op	54:21	0:0	6	*
water	54:23	0:0	6	i_nb_channels
op	54:37	0:0	6	+
water	54:39	0:0	6	p_sys
op	54:44	0:0	6	->
water	54:46	0:0	6	i_rear_left
op	54:58	0:0	6	]
op	54:60	0:0	6	=
water	54:62	0:0	6	f_rear
water	54:68	0:0	6	;
water	55:8	0:0	6	}
if	56:8	59:8	4	(p_sys -> i_rear_center >= 0)
cond	56:12	56:36	5	p_sys -> i_rear_center >= 0
water	56:12	0:0	6	p_sys
op	56:17	0:0	6	->
water	56:19	0:0	6	i_rear_center
op	56:33	0:0	6	>=
water	56:36	0:0	6	0
stmts	57:8	59:8	5	
water	57:8	0:0	6	{
water	58:12	0:0	6	p_out
op	58:17	0:0	6	[
water	58:19	0:0	6	i
op	58:21	0:0	6	*
water	58:23	0:0	6	i_nb_channels
op	58:37	0:0	6	+
water	58:39	0:0	6	p_sys
op	58:44	0:0	6	->
water	58:46	0:0	6	i_rear_center
op	58:60	0:0	6	]
op	58:62	0:0	6	=
water	58:64	0:0	6	f_rear
water	58:70	0:0	6	;
water	59:8	0:0	6	}
if	60:8	63:8	4	(p_sys -> i_rear_right >= 0)
cond	60:12	60:35	5	p_sys -> i_rear_right >= 0
water	60:12	0:0	6	p_sys
op	60:17	0:0	6	->
water	60:19	0:0	6	i_rear_right
op	60:32	0:0	6	>=
water	60:35	0:0	6	0
stmts	61:8	63:8	5	
water	61:8	0:0	6	{
water	62:12	0:0	6	p_out
op	62:17	0:0	6	[
water	62:19	0:0	6	i
op	62:21	0:0	6	*
water	62:23	0:0	6	i_nb_channels
op	62:37	0:0	6	+
water	62:39	0:0	6	p_sys
op	62:44	0:0	6	->
water	62:46	0:0	6	i_rear_right
op	62:59	0:0	6	]
op	62:61	0:0	6	=
water	62:63	0:0	6	f_rear
water	62:69	0:0	6	;
water	63:8	0:0	6	}
water	64:4	0:0	4	}
label	65:0	65:3	2	out :
call	66:4	66:28	2	block_Release
arg	66:19	66:28	3	p_in_buf
water	66:19	0:0	4	p_in_buf
water	66:29	0:0	2	;
return	67:4	67:20	2	p_out_buf
water	67:11	0:0	3	p_out_buf

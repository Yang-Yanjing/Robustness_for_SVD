func	2:0	123:0	0	static block_t *	Packetize
params	2:25	0:0	1	
param	2:27	2:43	2	decoder_t *	p_dec
param	2:45	2:64	2	block_t * *	pp_block
stmnts	0:0	122:19	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:27	2	block_t	*p_block
op	5:21	0:0	2	=
water	5:23	0:0	2	NULL
decl	6:4	6:22	2	int	i_flushing
op	6:19	0:0	2	=
water	6:21	0:0	2	0
if	7:4	35:4	2	(pp_block && * pp_block)
cond	7:8	7:21	3	pp_block && * pp_block
water	7:8	0:0	4	pp_block
op	7:17	0:0	4	&&
op	7:20	0:0	4	*
water	7:21	0:0	4	pp_block
stmts	8:4	35:4	3	
water	8:4	0:0	4	{
water	9:8	0:0	4	p_block
op	9:16	0:0	4	=
op	9:18	0:0	4	*
water	9:19	0:0	4	pp_block
water	9:27	0:0	4	;
op	10:8	0:0	4	*
water	10:9	0:0	4	pp_block
op	10:18	0:0	4	=
water	10:20	0:0	4	NULL
water	10:24	0:0	4	;
if	11:8	23:8	4	(p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY)
cond	11:12	11:31	5	p_block -> i_flags & BLOCK_FLAG_DISCONTINUITY
water	11:12	0:0	6	p_block
op	11:19	0:0	6	->
water	11:21	0:0	6	i_flags
op	11:29	0:0	6	&
water	11:31	0:0	6	BLOCK_FLAG_DISCONTINUITY
stmts	12:8	23:8	5	
water	12:8	0:0	6	{
call	15:12	15:35	6	block_Release
arg	15:27	15:35	7	p_block
water	15:27	0:0	8	p_block
water	15:36	0:0	6	;
water	16:12	0:0	6	p_block
op	16:20	0:0	6	=
call	16:22	16:46	6	dirac_EmitEOS
arg	16:37	16:42	7	p_dec
water	16:37	0:0	8	p_dec
arg	16:44	16:46	7	0
water	16:44	0:0	8	0
water	16:47	0:0	6	;
if	17:12	22:12	6	(p_block)
cond	17:16	17:16	7	p_block
water	17:16	0:0	8	p_block
stmts	18:12	22:12	7	
water	18:12	0:0	8	{
water	19:16	0:0	8	p_block
op	19:23	0:0	8	->
water	19:25	0:0	8	p_next
op	19:32	0:0	8	=
call	19:34	19:59	8	dirac_EmitEOS
arg	19:49	19:54	9	p_dec
water	19:49	0:0	10	p_dec
arg	19:56	19:59	9	13
water	19:56	0:0	10	13
water	19:60	0:0	8	;
water	22:12	0:0	8	}
water	23:8	0:0	6	}
else	24:8	32:8	4
stmts	24:13	32:8	5	
if	24:13	32:8	6	(p_block -> i_flags & BLOCK_FLAG_CORRUPTED)
cond	24:17	24:36	7	p_block -> i_flags & BLOCK_FLAG_CORRUPTED
water	24:17	0:0	8	p_block
op	24:24	0:0	8	->
water	24:26	0:0	8	i_flags
op	24:34	0:0	8	&
water	24:36	0:0	8	BLOCK_FLAG_CORRUPTED
stmts	25:8	32:8	7	
water	25:8	0:0	8	{
call	30:12	30:35	8	block_Release
arg	30:27	30:35	9	p_block
water	30:27	0:0	10	p_block
water	30:36	0:0	8	;
water	31:12	0:0	8	p_block
op	31:20	0:0	8	=
water	31:22	0:0	8	NULL
water	31:26	0:0	8	;
water	32:8	0:0	8	}
if	33:8	34:63	4	(p_block)
cond	33:12	33:12	5	p_block
water	33:12	0:0	6	p_block
stmts	34:12	34:63	5	
call	34:12	34:62	6	block_BytestreamPush
arg	34:34	34:52	7	&p_sys->bytestream
op	34:34	0:0	8	&
water	34:35	0:0	8	p_sys
op	34:40	0:0	8	->
water	34:42	0:0	8	bytestream
arg	34:54	34:62	7	p_block
water	34:54	0:0	8	p_block
water	34:63	0:0	6	;
water	35:4	0:0	4	}
while	38:4	50:4	2	(( p_block =dirac_DoSync (p_dec ) ))
cond	38:11	38:45	3	( p_block =dirac_DoSync (p_dec ) )
water	38:11	0:0	4	(
water	38:13	0:0	4	p_block
op	38:21	0:0	4	=
call	38:23	38:43	4	dirac_DoSync
arg	38:37	38:43	5	p_dec
water	38:37	0:0	6	p_dec
water	38:45	0:0	4	)
stmts	39:4	50:4	3	
water	39:4	0:0	4	{
water	40:8	0:0	4	p_block
op	40:16	0:0	4	=
call	40:18	40:63	4	dirac_BuildEncapsulationUnit
arg	40:48	40:53	5	p_dec
water	40:48	0:0	6	p_dec
arg	40:55	40:63	5	p_block
water	40:55	0:0	6	p_block
water	40:64	0:0	4	;
if	41:8	42:20	4	(! p_block)
cond	41:12	41:13	5	! p_block
op	41:12	0:0	6	!
water	41:13	0:0	6	p_block
stmts	42:12	42:20	5	
continue	42:12	42:20	6	
call	44:8	44:65	4	block_ChainLastAppend
arg	44:31	44:55	5	&p_sys->pp_outqueue_last
op	44:31	0:0	6	&
water	44:32	0:0	6	p_sys
op	44:37	0:0	6	->
water	44:39	0:0	6	pp_outqueue_last
arg	44:57	44:65	5	p_block
water	44:57	0:0	6	p_block
water	44:66	0:0	4	;
water	47:8	0:0	4	i_flushing
op	47:19	0:0	4	=
call	47:21	47:55	4	dirac_TimeGenPush
arg	47:40	47:45	5	p_dec
water	47:40	0:0	6	p_dec
arg	47:47	47:55	5	p_block
water	47:47	0:0	6	p_block
water	47:56	0:0	4	;
if	48:8	49:17	4	(i_flushing)
cond	48:12	48:12	5	i_flushing
water	48:12	0:0	6	i_flushing
stmts	49:12	49:17	5	
break	49:12	49:17	6	
water	50:4	0:0	4	}
decl	51:4	51:28	2	block_t	*p_output
op	51:22	0:0	2	=
water	51:24	0:0	2	NULL
decl	52:4	52:35	2	block_t	**pp_output
op	52:24	0:0	2	=
op	52:26	0:0	2	&
water	52:27	0:0	2	p_output
while	56:4	82:4	2	(( p_block = p_sys -> p_outqueue ))
cond	56:11	56:39	3	( p_block = p_sys -> p_outqueue )
water	56:11	0:0	4	(
water	56:12	0:0	4	p_block
op	56:20	0:0	4	=
water	56:22	0:0	4	p_sys
op	56:27	0:0	4	->
water	56:29	0:0	4	p_outqueue
water	56:39	0:0	4	)
stmts	57:4	82:4	3	
water	57:4	0:0	4	{
if	58:8	64:8	4	(p_block -> i_flags & DIRAC_DISCARD)
cond	58:12	58:31	5	p_block -> i_flags & DIRAC_DISCARD
water	58:12	0:0	6	p_block
op	58:19	0:0	6	->
water	58:21	0:0	6	i_flags
op	58:29	0:0	6	&
water	58:31	0:0	6	DIRAC_DISCARD
stmts	59:8	64:8	5	
water	59:8	0:0	6	{
water	60:12	0:0	6	p_sys
op	60:17	0:0	6	->
water	60:19	0:0	6	p_outqueue
op	60:30	0:0	6	=
water	60:32	0:0	6	p_block
op	60:39	0:0	6	->
water	60:41	0:0	6	p_next
water	60:47	0:0	6	;
water	61:12	0:0	6	p_block
op	61:19	0:0	6	->
water	61:21	0:0	6	p_next
op	61:28	0:0	6	=
water	61:30	0:0	6	NULL
water	61:34	0:0	6	;
call	62:12	62:35	6	block_Release
arg	62:27	62:35	7	p_block
water	62:27	0:0	8	p_block
water	62:36	0:0	6	;
continue	63:12	63:20	6	
water	64:8	0:0	6	}
if	65:8	69:8	4	(i_flushing || p_block -> i_flags & DIRAC_NON_DATED)
cond	65:12	65:45	5	i_flushing || p_block -> i_flags & DIRAC_NON_DATED
water	65:12	0:0	6	i_flushing
op	65:23	0:0	6	||
water	65:26	0:0	6	p_block
op	65:33	0:0	6	->
water	65:35	0:0	6	i_flags
op	65:43	0:0	6	&
water	65:45	0:0	6	DIRAC_NON_DATED
stmts	66:8	69:8	5	
water	66:8	0:0	6	{
water	67:12	0:0	6	p_block
op	67:19	0:0	6	->
water	67:21	0:0	6	i_dts
op	67:27	0:0	6	=
water	67:29	0:0	6	p_sys
op	67:34	0:0	6	->
water	67:36	0:0	6	i_dts_last_out
water	67:50	0:0	6	;
water	68:12	0:0	6	p_block
op	68:19	0:0	6	->
water	68:21	0:0	6	i_pts
op	68:27	0:0	6	=
water	68:29	0:0	6	p_sys
op	68:34	0:0	6	->
water	68:36	0:0	6	i_pts_last_out
water	68:50	0:0	6	;
water	69:8	0:0	6	}
else	70:8	70:57	4
stmts	70:13	70:57	5	
if	70:13	70:57	6	(p_block -> i_pts <= VLC_TS_INVALID)
cond	70:17	70:35	7	p_block -> i_pts <= VLC_TS_INVALID
water	70:17	0:0	8	p_block
op	70:24	0:0	8	->
water	70:26	0:0	8	i_pts
op	70:32	0:0	8	<=
water	70:35	0:0	8	VLC_TS_INVALID
stmts	70:52	70:57	7	
break	70:52	70:57	8	
else	71:8	71:57	4
stmts	71:13	71:57	5	
if	71:13	71:57	6	(p_block -> i_dts <= VLC_TS_INVALID)
cond	71:17	71:35	7	p_block -> i_dts <= VLC_TS_INVALID
water	71:17	0:0	8	p_block
op	71:24	0:0	8	->
water	71:26	0:0	8	i_dts
op	71:32	0:0	8	<=
water	71:35	0:0	8	VLC_TS_INVALID
stmts	71:52	71:57	7	
break	71:52	71:57	8	
water	72:8	0:0	4	p_sys
op	72:13	0:0	4	->
water	72:15	0:0	4	i_dts_last_out
op	72:30	0:0	4	=
water	72:32	0:0	4	p_block
op	72:39	0:0	4	->
water	72:41	0:0	4	i_dts
water	72:46	0:0	4	;
water	73:8	0:0	4	p_sys
op	73:13	0:0	4	->
water	73:15	0:0	4	i_pts_last_out
op	73:30	0:0	4	=
water	73:32	0:0	4	p_block
op	73:39	0:0	4	->
water	73:41	0:0	4	i_pts
water	73:46	0:0	4	;
water	74:8	0:0	4	p_sys
op	74:13	0:0	4	->
water	74:15	0:0	4	p_outqueue
op	74:26	0:0	4	=
water	74:28	0:0	4	p_block
op	74:35	0:0	4	->
water	74:37	0:0	4	p_next
water	74:43	0:0	4	;
water	75:8	0:0	4	p_block
op	75:15	0:0	4	->
water	75:17	0:0	4	p_next
op	75:24	0:0	4	=
water	75:26	0:0	4	NULL
water	75:30	0:0	4	;
water	77:8	0:0	4	p_block
op	77:15	0:0	4	->
water	77:17	0:0	4	i_flags
op	77:25	0:0	4	&=
water	77:28	0:0	4	~BLOCK_FLAG_PRIVATE_MASK
water	77:52	0:0	4	;
call	78:8	78:51	4	block_ChainLastAppend
arg	78:31	78:41	5	&pp_output
op	78:31	0:0	6	&
water	78:32	0:0	6	pp_output
arg	78:43	78:51	5	p_block
water	78:43	0:0	6	p_block
water	78:52	0:0	4	;
decl	79:8	79:57	4	mtime_t	i_delay
op	79:24	0:0	4	=
water	79:26	0:0	4	p_block
op	79:33	0:0	4	->
water	79:35	0:0	4	i_pts
op	79:41	0:0	4	-
water	79:43	0:0	4	p_block
op	79:50	0:0	4	->
water	79:52	0:0	4	i_dts
if	80:8	81:93	4	(i_delay < 0)
cond	80:12	80:22	5	i_delay < 0
water	80:12	0:0	6	i_delay
op	80:20	0:0	6	<
water	80:22	0:0	6	0
stmts	81:12	81:93	5	
call	81:12	81:92	6	msg_Err
arg	81:21	81:26	7	p_dec
water	81:21	0:0	8	p_dec
arg	81:28	81:82	7	"pts - dts is negative(%"PRId64"): incorrect RoB size"
water	81:28	0:0	8	"pts - dts is negative(%"
water	81:53	0:0	8	PRId64
water	81:59	0:0	8	"): incorrect RoB size"
arg	81:84	81:92	7	i_delay
water	81:84	0:0	8	i_delay
water	81:93	0:0	6	;
water	82:4	0:0	4	}
if	83:4	97:4	2	(i_flushing)
cond	83:8	83:8	3	i_flushing
water	83:8	0:0	4	i_flushing
stmts	84:4	97:4	3	
water	84:4	0:0	4	{
water	85:8	0:0	4	p_sys
op	85:13	0:0	4	->
water	85:15	0:0	4	i_eu_dts
op	85:24	0:0	4	=
water	85:26	0:0	4	p_sys
op	85:31	0:0	4	->
water	85:33	0:0	4	i_eu_pts
op	85:42	0:0	4	=
water	85:44	0:0	4	VLC_TS_INVALID
water	85:58	0:0	4	;
water	87:8	0:0	4	p_sys
op	87:13	0:0	4	->
water	87:15	0:0	4	b_seen_seq_hdr
op	87:30	0:0	4	=
water	87:32	0:0	4	false
water	87:37	0:0	4	;
if	88:8	93:8	4	(i_flushing < 2)
cond	88:12	88:25	5	i_flushing < 2
water	88:12	0:0	6	i_flushing
op	88:23	0:0	6	<
water	88:25	0:0	6	2
stmts	89:8	93:8	5	
water	89:8	0:0	6	{
water	92:12	0:0	6	p_sys
op	92:17	0:0	6	->
water	92:19	0:0	6	b_pts
op	92:25	0:0	6	=
water	92:27	0:0	6	p_sys
op	92:32	0:0	6	->
water	92:34	0:0	6	b_dts
op	92:40	0:0	6	=
water	92:42	0:0	6	false
water	92:47	0:0	6	;
water	93:8	0:0	6	}
water	94:8	0:0	4	p_sys
op	94:13	0:0	4	->
water	94:15	0:0	4	b_tg_last_picnum
op	94:32	0:0	4	=
water	94:34	0:0	4	false
water	94:39	0:0	4	;
call	95:8	95:47	4	dirac_ReorderInit
arg	95:27	95:47	5	&p_sys->reorder_buf
op	95:27	0:0	6	&
water	95:28	0:0	6	p_sys
op	95:33	0:0	6	->
water	95:35	0:0	6	reorder_buf
water	95:48	0:0	4	;
call	96:8	96:42	4	assert
arg	96:16	96:42	5	p_sys->p_outqueue==NULL
water	96:16	0:0	6	p_sys
op	96:21	0:0	6	->
water	96:23	0:0	6	p_outqueue
op	96:34	0:0	6	==
water	96:37	0:0	6	NULL
water	96:43	0:0	4	;
water	97:4	0:0	4	}
decl	104:4	104:15	2	int	i_count
call	105:4	105:67	2	block_ChainProperties
arg	105:27	105:44	3	p_sys->p_outqueue
water	105:27	0:0	4	p_sys
op	105:32	0:0	4	->
water	105:34	0:0	4	p_outqueue
arg	105:46	105:54	3	&i_count
op	105:46	0:0	4	&
water	105:47	0:0	4	i_count
arg	105:56	105:60	3	NULL
water	105:56	0:0	4	NULL
arg	105:62	105:67	3	NULL
water	105:62	0:0	4	NULL
water	105:68	0:0	2	;
if	106:4	117:4	2	(i_count > 9)
cond	106:8	106:18	3	i_count > 9
water	106:8	0:0	4	i_count
op	106:16	0:0	4	>
water	106:18	0:0	4	9
stmts	107:4	117:4	3	
water	107:4	0:0	4	{
water	108:8	0:0	4	p_block
op	108:16	0:0	4	=
water	108:18	0:0	4	p_sys
op	108:23	0:0	4	->
water	108:25	0:0	4	p_outqueue
water	108:35	0:0	4	;
while	109:8	116:8	4	(p_block)
cond	109:15	109:15	5	p_block
water	109:15	0:0	6	p_block
stmts	110:8	116:8	5	
water	110:8	0:0	6	{
decl	111:12	111:51	6	block_t	*p_block_next
op	111:34	0:0	6	=
water	111:36	0:0	6	p_block
op	111:43	0:0	6	->
water	111:45	0:0	6	p_next
if	112:12	113:21	6	(p_block -> i_pts > VLC_TS_INVALID && p_block -> i_dts > VLC_TS_INVALID)
cond	112:16	112:68	7	p_block -> i_pts > VLC_TS_INVALID && p_block -> i_dts > VLC_TS_INVALID
water	112:16	0:0	8	p_block
op	112:23	0:0	8	->
water	112:25	0:0	8	i_pts
op	112:31	0:0	8	>
water	112:33	0:0	8	VLC_TS_INVALID
op	112:48	0:0	8	&&
water	112:51	0:0	8	p_block
op	112:58	0:0	8	->
water	112:60	0:0	8	i_dts
op	112:66	0:0	8	>
water	112:68	0:0	8	VLC_TS_INVALID
stmts	113:16	113:21	7	
break	113:16	113:21	8	
call	114:12	114:64	6	dirac_ReorderDequeueAndReleaseBlock
arg	114:49	114:54	7	p_dec
water	114:49	0:0	8	p_dec
arg	114:56	114:64	7	p_block
water	114:56	0:0	8	p_block
water	114:65	0:0	6	;
water	115:12	0:0	6	p_sys
op	115:17	0:0	6	->
water	115:19	0:0	6	p_outqueue
op	115:30	0:0	6	=
water	115:32	0:0	6	p_block
op	115:40	0:0	6	=
water	115:42	0:0	6	p_block_next
water	115:54	0:0	6	;
water	116:8	0:0	6	}
water	117:4	0:0	4	}
if	118:4	121:4	2	(! p_sys -> p_outqueue)
cond	118:8	118:16	3	! p_sys -> p_outqueue
op	118:8	0:0	4	!
water	118:9	0:0	4	p_sys
op	118:14	0:0	4	->
water	118:16	0:0	4	p_outqueue
stmts	119:4	121:4	3	
water	119:4	0:0	4	{
water	120:8	0:0	4	p_sys
op	120:13	0:0	4	->
water	120:15	0:0	4	pp_outqueue_last
op	120:32	0:0	4	=
op	120:34	0:0	4	&
water	120:35	0:0	4	p_sys
op	120:40	0:0	4	->
water	120:42	0:0	4	p_outqueue
water	120:52	0:0	4	;
water	121:4	0:0	4	}
return	122:4	122:19	2	p_output
water	122:11	0:0	3	p_output

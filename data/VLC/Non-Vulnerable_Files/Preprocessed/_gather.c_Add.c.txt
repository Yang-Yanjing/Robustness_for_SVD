func	2:0	64:0	0	static sout_stream_id_sys_t *	Add
params	2:33	0:0	1	
param	2:35	2:58	2	sout_stream_t *	p_stream
param	2:60	2:79	2	es_format_t *	p_fmt
stmnts	0:0	63:13	1	
decl	4:4	4:46	2	sout_stream_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	p_stream
op	4:39	0:0	2	->
water	4:41	0:0	2	p_sys
decl	5:4	5:29	2	sout_stream_id_sys_t	*id
decl	6:4	6:9	2	int	i
for	8:4	35:4	2	(i = 0 ;i < p_sys -> i_id;i ++)
forinit	8:9	8:14	3	i = 0 ;
water	8:9	0:0	4	i
op	8:11	0:0	4	=
water	8:13	0:0	4	0
water	8:14	0:0	4	;
cond	8:16	8:27	3	i < p_sys -> i_id
water	8:16	0:0	4	i
op	8:18	0:0	4	<
water	8:20	0:0	4	p_sys
op	8:25	0:0	4	->
water	8:27	0:0	4	i_id
forexpr	8:33	8:34	3	i ++
water	8:33	0:0	4	i
op	8:34	0:0	4	++
stmts	9:4	35:4	3	
water	9:4	0:0	4	{
water	10:8	0:0	4	id
op	10:11	0:0	4	=
water	10:13	0:0	4	p_sys
op	10:18	0:0	4	->
water	10:20	0:0	4	id
op	10:22	0:0	4	[
water	10:23	0:0	4	i
op	10:24	0:0	4	]
water	10:25	0:0	4	;
if	11:8	12:20	4	(id -> b_used)
cond	11:12	11:16	5	id -> b_used
water	11:12	0:0	6	id
op	11:14	0:0	6	->
water	11:16	0:0	6	b_used
stmts	12:12	12:20	5	
continue	12:12	12:20	6	
if	13:8	14:20	4	(id -> fmt . i_cat != p_fmt -> i_cat || id -> fmt . i_codec != p_fmt -> i_codec)
cond	13:12	13:71	5	id -> fmt . i_cat != p_fmt -> i_cat || id -> fmt . i_codec != p_fmt -> i_codec
water	13:12	0:0	6	id
op	13:14	0:0	6	->
water	13:16	0:0	6	fmt
op	13:19	0:0	6	.
water	13:20	0:0	6	i_cat
op	13:26	0:0	6	!=
water	13:29	0:0	6	p_fmt
op	13:34	0:0	6	->
water	13:36	0:0	6	i_cat
op	13:42	0:0	6	||
water	13:45	0:0	6	id
op	13:47	0:0	6	->
water	13:49	0:0	6	fmt
op	13:52	0:0	6	.
water	13:53	0:0	6	i_codec
op	13:61	0:0	6	!=
water	13:64	0:0	6	p_fmt
op	13:69	0:0	6	->
water	13:71	0:0	6	i_codec
stmts	14:12	14:20	5	
continue	14:12	14:20	6	
if	15:8	22:8	4	(id -> fmt . i_cat == AUDIO_ES)
cond	15:12	15:29	5	id -> fmt . i_cat == AUDIO_ES
water	15:12	0:0	6	id
op	15:14	0:0	6	->
water	15:16	0:0	6	fmt
op	15:19	0:0	6	.
water	15:20	0:0	6	i_cat
op	15:26	0:0	6	==
water	15:29	0:0	6	AUDIO_ES
stmts	16:8	22:8	5	
water	16:8	0:0	6	{
decl	17:12	17:48	6	audio_format_t	*p_a
op	17:32	0:0	6	=
op	17:34	0:0	6	&
water	17:35	0:0	6	id
op	17:37	0:0	6	->
water	17:39	0:0	6	fmt
op	17:42	0:0	6	.
water	17:43	0:0	6	audio
if	18:12	21:24	6	(p_a -> i_rate != p_fmt -> audio . i_rate || p_a -> i_channels != p_fmt -> audio . i_channels || p_a -> i_blockalign != p_fmt -> audio . i_blockalign)
cond	18:16	20:50	7	p_a -> i_rate != p_fmt -> audio . i_rate || p_a -> i_channels != p_fmt -> audio . i_channels || p_a -> i_blockalign != p_fmt -> audio . i_blockalign
water	18:16	0:0	8	p_a
op	18:19	0:0	8	->
water	18:21	0:0	8	i_rate
op	18:28	0:0	8	!=
water	18:31	0:0	8	p_fmt
op	18:36	0:0	8	->
water	18:38	0:0	8	audio
op	18:43	0:0	8	.
water	18:44	0:0	8	i_rate
op	18:51	0:0	8	||
water	19:16	0:0	8	p_a
op	19:19	0:0	8	->
water	19:21	0:0	8	i_channels
op	19:32	0:0	8	!=
water	19:35	0:0	8	p_fmt
op	19:40	0:0	8	->
water	19:42	0:0	8	audio
op	19:47	0:0	8	.
water	19:48	0:0	8	i_channels
op	19:59	0:0	8	||
water	20:16	0:0	8	p_a
op	20:19	0:0	8	->
water	20:21	0:0	8	i_blockalign
op	20:34	0:0	8	!=
water	20:37	0:0	8	p_fmt
op	20:42	0:0	8	->
water	20:44	0:0	8	audio
op	20:49	0:0	8	.
water	20:50	0:0	8	i_blockalign
stmts	21:16	21:24	7	
continue	21:16	21:24	8	
water	22:8	0:0	6	}
else	23:8	29:8	4
stmts	23:13	29:8	5	
if	23:13	29:8	6	(id -> fmt . i_cat == VIDEO_ES)
cond	23:17	23:34	7	id -> fmt . i_cat == VIDEO_ES
water	23:17	0:0	8	id
op	23:19	0:0	8	->
water	23:21	0:0	8	fmt
op	23:24	0:0	8	.
water	23:25	0:0	8	i_cat
op	23:31	0:0	8	==
water	23:34	0:0	8	VIDEO_ES
stmts	24:8	29:8	7	
water	24:8	0:0	8	{
decl	25:12	25:48	8	video_format_t	*p_v
op	25:32	0:0	8	=
op	25:34	0:0	8	&
water	25:35	0:0	8	id
op	25:37	0:0	8	->
water	25:39	0:0	8	fmt
op	25:42	0:0	8	.
water	25:43	0:0	8	video
if	26:12	28:24	8	(p_v -> i_width != p_fmt -> video . i_width || p_v -> i_height != p_fmt -> video . i_height)
cond	26:16	27:46	9	p_v -> i_width != p_fmt -> video . i_width || p_v -> i_height != p_fmt -> video . i_height
water	26:16	0:0	10	p_v
op	26:19	0:0	10	->
water	26:21	0:0	10	i_width
op	26:29	0:0	10	!=
water	26:32	0:0	10	p_fmt
op	26:37	0:0	10	->
water	26:39	0:0	10	video
op	26:44	0:0	10	.
water	26:45	0:0	10	i_width
op	26:53	0:0	10	||
water	27:16	0:0	10	p_v
op	27:19	0:0	10	->
water	27:21	0:0	10	i_height
op	27:30	0:0	10	!=
water	27:33	0:0	10	p_fmt
op	27:38	0:0	10	->
water	27:40	0:0	10	video
op	27:45	0:0	10	.
water	27:46	0:0	10	i_height
stmts	28:16	28:24	9	
continue	28:16	28:24	10	
water	29:8	0:0	8	}
call	31:8	31:59	4	msg_Dbg
arg	31:17	31:25	5	p_stream
water	31:17	0:0	6	p_stream
arg	31:27	31:59	5	"reusing already opened output"
water	31:27	0:0	6	"reusing already opened output"
water	31:60	0:0	4	;
water	32:8	0:0	4	id
op	32:10	0:0	4	->
water	32:12	0:0	4	b_used
op	32:19	0:0	4	=
water	32:21	0:0	4	true
water	32:25	0:0	4	;
water	33:8	0:0	4	id
op	33:10	0:0	4	->
water	33:12	0:0	4	b_streamswap
op	33:25	0:0	4	=
water	33:27	0:0	4	true
water	33:31	0:0	4	;
return	34:8	34:17	4	id
water	34:15	0:0	5	id
water	35:4	0:0	4	}
for	37:4	49:4	2	(i = 0 ;i < p_sys -> i_id;i ++)
forinit	37:9	37:14	3	i = 0 ;
water	37:9	0:0	4	i
op	37:11	0:0	4	=
water	37:13	0:0	4	0
water	37:14	0:0	4	;
cond	37:16	37:27	3	i < p_sys -> i_id
water	37:16	0:0	4	i
op	37:18	0:0	4	<
water	37:20	0:0	4	p_sys
op	37:25	0:0	4	->
water	37:27	0:0	4	i_id
forexpr	37:33	37:34	3	i ++
water	37:33	0:0	4	i
op	37:34	0:0	4	++
stmts	38:4	49:4	3	
water	38:4	0:0	4	{
water	39:8	0:0	4	id
op	39:11	0:0	4	=
water	39:13	0:0	4	p_sys
op	39:18	0:0	4	->
water	39:20	0:0	4	id
op	39:22	0:0	4	[
water	39:23	0:0	4	i
op	39:24	0:0	4	]
water	39:25	0:0	4	;
if	40:8	48:8	4	(! id -> b_used && id -> fmt . i_cat == p_fmt -> i_cat)
cond	40:12	40:51	5	! id -> b_used && id -> fmt . i_cat == p_fmt -> i_cat
op	40:12	0:0	6	!
water	40:13	0:0	6	id
op	40:15	0:0	6	->
water	40:17	0:0	6	b_used
op	40:24	0:0	6	&&
water	40:27	0:0	6	id
op	40:29	0:0	6	->
water	40:31	0:0	6	fmt
op	40:34	0:0	6	.
water	40:35	0:0	6	i_cat
op	40:41	0:0	6	==
water	40:44	0:0	6	p_fmt
op	40:49	0:0	6	->
water	40:51	0:0	6	i_cat
stmts	41:8	48:8	5	
water	41:8	0:0	6	{
call	42:12	42:51	6	TAB_REMOVE
arg	42:24	42:35	7	p_sys->i_id
water	42:24	0:0	8	p_sys
op	42:29	0:0	8	->
water	42:31	0:0	8	i_id
arg	42:37	42:46	7	p_sys->id
water	42:37	0:0	8	p_sys
op	42:42	0:0	8	->
water	42:44	0:0	8	id
arg	42:48	42:51	7	id
water	42:48	0:0	8	id
water	42:52	0:0	6	;
call	43:12	43:55	6	sout_StreamIdDel
arg	43:30	43:46	7	p_stream->p_next
water	43:30	0:0	8	p_stream
op	43:38	0:0	8	->
water	43:40	0:0	8	p_next
arg	43:48	43:55	7	id->id
water	43:48	0:0	8	id
op	43:50	0:0	8	->
water	43:52	0:0	8	id
water	43:56	0:0	6	;
call	44:12	44:38	6	es_format_Clean
arg	44:29	44:38	7	&id->fmt
op	44:29	0:0	8	&
water	44:30	0:0	8	id
op	44:32	0:0	8	->
water	44:34	0:0	8	fmt
water	44:39	0:0	6	;
call	45:12	45:21	6	free
arg	45:18	45:21	7	id
water	45:18	0:0	8	id
water	45:22	0:0	6	;
water	46:12	0:0	6	i
op	46:14	0:0	6	=
water	46:16	0:0	6	0
water	46:17	0:0	6	;
continue	47:12	47:20	6	
water	48:8	0:0	6	}
water	49:4	0:0	4	}
call	50:4	50:45	2	msg_Dbg
arg	50:13	50:21	3	p_stream
water	50:13	0:0	4	p_stream
arg	50:23	50:45	3	"creating new output"
water	50:23	0:0	4	"creating new output"
water	50:46	0:0	2	;
water	51:4	0:0	2	id
op	51:7	0:0	2	=
call	51:9	51:48	2	malloc
arg	51:17	51:48	3	sizeof(sout_stream_id_sys_t)
op	51:17	0:0	4	sizeof
water	51:23	0:0	4	(
water	51:25	0:0	4	sout_stream_id_sys_t
water	51:46	0:0	4	)
water	51:49	0:0	2	;
if	52:4	53:19	2	(id == NULL)
cond	52:8	52:14	3	id == NULL
water	52:8	0:0	4	id
op	52:11	0:0	4	==
water	52:14	0:0	4	NULL
stmts	53:8	53:19	3	
return	53:8	53:19	4	NULL
water	53:15	0:0	5	NULL
call	54:4	54:36	2	es_format_Copy
arg	54:20	54:28	3	&id->fmt
op	54:20	0:0	4	&
water	54:21	0:0	4	id
op	54:23	0:0	4	->
water	54:25	0:0	4	fmt
arg	54:30	54:36	3	p_fmt
water	54:30	0:0	4	p_fmt
water	54:37	0:0	2	;
water	55:4	0:0	2	id
op	55:6	0:0	2	->
water	55:8	0:0	2	b_used
op	55:25	0:0	2	=
water	55:27	0:0	2	true
water	55:31	0:0	2	;
water	56:4	0:0	2	id
op	56:6	0:0	2	->
water	56:8	0:0	2	id
op	56:25	0:0	2	=
call	56:27	56:72	2	sout_StreamIdAdd
arg	56:45	56:61	3	p_stream->p_next
water	56:45	0:0	4	p_stream
op	56:53	0:0	4	->
water	56:55	0:0	4	p_next
arg	56:63	56:72	3	&id->fmt
op	56:63	0:0	4	&
water	56:64	0:0	4	id
op	56:66	0:0	4	->
water	56:68	0:0	4	fmt
water	56:73	0:0	2	;
if	57:4	61:4	2	(id -> id == NULL)
cond	57:8	57:18	3	id -> id == NULL
water	57:8	0:0	4	id
op	57:10	0:0	4	->
water	57:12	0:0	4	id
op	57:15	0:0	4	==
water	57:18	0:0	4	NULL
stmts	58:4	61:4	3	
water	58:4	0:0	4	{
call	59:8	59:17	4	free
arg	59:14	59:17	5	id
water	59:14	0:0	6	id
water	59:18	0:0	4	;
return	60:8	60:19	4	NULL
water	60:15	0:0	5	NULL
water	61:4	0:0	4	}
call	62:4	62:43	2	TAB_APPEND
arg	62:16	62:27	3	p_sys->i_id
water	62:16	0:0	4	p_sys
op	62:21	0:0	4	->
water	62:23	0:0	4	i_id
arg	62:29	62:38	3	p_sys->id
water	62:29	0:0	4	p_sys
op	62:34	0:0	4	->
water	62:36	0:0	4	id
arg	62:40	62:43	3	id
water	62:40	0:0	4	id
water	62:44	0:0	2	;
return	63:4	63:13	2	id
water	63:11	0:0	3	id

func	2:0	65:0	0	static subpicture_region_t *	vout_BuildOSDEpg
params	2:45	0:0	1	
param	2:46	2:60	2	vlc_epg_t *	epg
param	3:46	3:51	2	int	x
param	3:53	3:58	2	int	y
param	4:46	4:63	2	int	visible_width
param	5:46	5:64	2	int	visible_height
stmnts	0:0	64:15	1	
decl	7:4	7:29	2	subpicture_region_t	*head
decl	8:4	8:42	2	subpicture_region_t	**last_ptr
op	8:35	0:0	2	=
op	8:37	0:0	2	&
water	8:38	0:0	2	head
decl	9:4	9:36	2	time_t	current_time
op	9:24	0:0	2	=
call	9:26	9:35	3	time
arg	9:31	9:35	4	NULL
water	9:31	0:0	5	NULL
op	11:4	0:0	2	*
water	11:5	0:0	2	last_ptr
op	11:14	0:0	2	=
call	11:16	15:42	2	vout_OSDEpgText
arg	11:32	11:45	3	epg->psz_name
water	11:32	0:0	4	epg
op	11:35	0:0	4	->
water	11:37	0:0	4	psz_name
arg	12:32	12:61	3	x+visible_width*EPG_LEFT
water	12:32	0:0	4	x
op	12:34	0:0	4	+
water	12:36	0:0	4	visible_width
op	12:51	0:0	4	*
water	12:53	0:0	4	EPG_LEFT
arg	13:32	13:60	3	y+visible_height*EPG_TOP
water	13:32	0:0	4	y
op	13:34	0:0	4	+
water	13:36	0:0	4	visible_height
op	13:51	0:0	4	*
water	13:53	0:0	4	EPG_TOP
arg	14:32	14:62	3	visible_height*EPG_NAME_SIZE
water	14:32	0:0	4	visible_height
op	14:47	0:0	4	*
water	14:49	0:0	4	EPG_NAME_SIZE
arg	15:32	15:42	3	0x00ffffff
water	15:32	0:0	4	0
water	15:33	0:0	4	x00ffffff
water	15:43	0:0	2	;
if	16:4	17:19	2	(! * last_ptr)
cond	16:8	16:10	3	! * last_ptr
op	16:8	0:0	4	!
op	16:9	0:0	4	*
water	16:10	0:0	4	last_ptr
stmts	17:8	17:19	3	
return	17:8	17:19	4	head
water	17:15	0:0	5	head
water	19:4	0:0	2	last_ptr
op	19:13	0:0	2	=
op	19:15	0:0	2	&
water	19:16	0:0	2	(
op	19:17	0:0	2	*
water	19:18	0:0	2	last_ptr
water	19:26	0:0	2	)
op	19:27	0:0	2	->
water	19:29	0:0	2	p_next
water	19:35	0:0	2	;
op	20:4	0:0	2	*
water	20:5	0:0	2	last_ptr
op	20:14	0:0	2	=
call	20:16	24:42	2	vout_OSDEpgText
arg	20:32	20:56	3	epg->p_current->psz_name
water	20:32	0:0	4	epg
op	20:35	0:0	4	->
water	20:37	0:0	4	p_current
op	20:46	0:0	4	->
water	20:48	0:0	4	psz_name
arg	21:32	21:71	3	x+visible_width*(EPG_LEFT+0.025)
water	21:32	0:0	4	x
op	21:34	0:0	4	+
water	21:36	0:0	4	visible_width
op	21:51	0:0	4	*
water	21:53	0:0	4	(
water	21:54	0:0	4	EPG_LEFT
op	21:63	0:0	4	+
water	21:65	0:0	4	0
op	21:66	0:0	4	.
water	21:67	0:0	4	025
water	21:70	0:0	4	)
arg	22:32	22:69	3	y+visible_height*(EPG_TOP+0.05)
water	22:32	0:0	4	y
op	22:34	0:0	4	+
water	22:36	0:0	4	visible_height
op	22:51	0:0	4	*
water	22:53	0:0	4	(
water	22:54	0:0	4	EPG_TOP
op	22:62	0:0	4	+
water	22:64	0:0	4	0
op	22:65	0:0	4	.
water	22:66	0:0	4	05
water	22:68	0:0	4	)
arg	23:32	23:65	3	visible_height*EPG_PROGRAM_SIZE
water	23:32	0:0	4	visible_height
op	23:47	0:0	4	*
water	23:49	0:0	4	EPG_PROGRAM_SIZE
arg	24:32	24:42	3	0x00ffffff
water	24:32	0:0	4	0
water	24:33	0:0	4	x00ffffff
water	24:43	0:0	2	;
if	25:4	26:19	2	(! * last_ptr)
cond	25:8	25:10	3	! * last_ptr
op	25:8	0:0	4	!
op	25:9	0:0	4	*
water	25:10	0:0	4	last_ptr
stmts	26:8	26:19	3	
return	26:8	26:19	4	head
water	26:15	0:0	5	head
water	28:4	0:0	2	last_ptr
op	28:13	0:0	2	=
op	28:15	0:0	2	&
water	28:16	0:0	2	(
op	28:17	0:0	2	*
water	28:18	0:0	2	last_ptr
water	28:26	0:0	2	)
op	28:27	0:0	2	->
water	28:29	0:0	2	p_next
water	28:35	0:0	2	;
op	29:4	0:0	2	*
water	29:5	0:0	2	last_ptr
op	29:14	0:0	2	=
call	29:16	34:69	2	vout_OSDEpgSlider
arg	29:34	29:63	3	x+visible_width*EPG_LEFT
water	29:34	0:0	4	x
op	29:36	0:0	4	+
water	29:38	0:0	4	visible_width
op	29:53	0:0	4	*
water	29:55	0:0	4	EPG_LEFT
arg	30:34	30:70	3	y+visible_height*(EPG_TOP+0.1)
water	30:34	0:0	4	y
op	30:36	0:0	4	+
water	30:38	0:0	4	visible_height
op	30:53	0:0	4	*
water	30:55	0:0	4	(
water	30:56	0:0	4	EPG_TOP
op	30:64	0:0	4	+
water	30:66	0:0	4	0
op	30:67	0:0	4	.
water	30:68	0:0	4	1
water	30:69	0:0	4	)
arg	31:34	31:69	3	visible_width*(1-2*EPG_LEFT)
water	31:34	0:0	4	visible_width
op	31:49	0:0	4	*
water	31:51	0:0	4	(
water	31:52	0:0	4	1
op	31:54	0:0	4	-
water	31:56	0:0	4	2
op	31:58	0:0	4	*
water	31:60	0:0	4	EPG_LEFT
water	31:68	0:0	4	)
arg	32:34	32:55	3	visible_height*0.05
water	32:34	0:0	4	visible_height
op	32:49	0:0	4	*
water	32:51	0:0	4	0
op	32:52	0:0	4	.
water	32:53	0:0	4	05
arg	33:34	34:69	3	(current_time-epg->p_current->i_start)/(float)epg->p_current->i_duration
water	33:34	0:0	4	(
water	33:35	0:0	4	current_time
op	33:48	0:0	4	-
water	33:50	0:0	4	epg
op	33:53	0:0	4	->
water	33:55	0:0	4	p_current
op	33:64	0:0	4	->
water	33:66	0:0	4	i_start
water	33:73	0:0	4	)
op	34:34	0:0	4	/
water	34:36	0:0	4	(
water	34:37	0:0	4	float
water	34:42	0:0	4	)
water	34:43	0:0	4	epg
op	34:46	0:0	4	->
water	34:48	0:0	4	p_current
op	34:57	0:0	4	->
water	34:59	0:0	4	i_duration
water	34:70	0:0	2	;
if	35:4	36:19	2	(! * last_ptr)
cond	35:8	35:10	3	! * last_ptr
op	35:8	0:0	4	!
op	35:9	0:0	4	*
water	35:10	0:0	4	last_ptr
stmts	36:8	36:19	3	
return	36:8	36:19	4	head
water	36:15	0:0	5	head
decl	38:4	38:30	2	struct tm	tm_start
water	38:22	0:0	2	,
decl	38:4	38:30	2	struct tm	tm_end
decl	39:4	39:44	2	time_t	t_start
op	39:19	0:0	2	=
water	39:21	0:0	2	epg
op	39:24	0:0	2	->
water	39:26	0:0	2	p_current
op	39:35	0:0	2	->
water	39:37	0:0	2	i_start
decl	40:4	40:71	2	time_t	t_end
op	40:17	0:0	2	=
water	40:19	0:0	2	epg
op	40:22	0:0	2	->
water	40:24	0:0	2	p_current
op	40:33	0:0	2	->
water	40:35	0:0	2	i_start
op	40:43	0:0	2	+
water	40:45	0:0	2	epg
op	40:48	0:0	2	->
water	40:50	0:0	2	p_current
op	40:59	0:0	2	->
water	40:61	0:0	2	i_duration
call	41:4	41:35	2	localtime_r
arg	41:16	41:24	3	&t_start
op	41:16	0:0	4	&
water	41:17	0:0	4	t_start
arg	41:26	41:35	3	&tm_start
op	41:26	0:0	4	&
water	41:27	0:0	4	tm_start
water	41:36	0:0	2	;
call	42:4	42:31	2	localtime_r
arg	42:16	42:22	3	&t_end
op	42:16	0:0	4	&
water	42:17	0:0	4	t_end
arg	42:24	42:31	3	&tm_end
op	42:24	0:0	4	&
water	42:25	0:0	4	tm_end
water	42:32	0:0	2	;
decl	43:4	43:24	2	char	text_start[128]
decl	44:4	44:22	2	char	text_end[128]
call	45:4	46:46	2	snprintf
arg	45:13	45:23	3	text_start
water	45:13	0:0	4	text_start
arg	45:25	45:43	3	sizeof(text_start)
op	45:25	0:0	4	sizeof
water	45:31	0:0	4	(
water	45:32	0:0	4	text_start
water	45:42	0:0	4	)
arg	45:45	45:58	3	"%2.2d:%2.2d"
water	45:45	0:0	4	"%2.2d:%2.2d"
arg	46:13	46:29	3	tm_start.tm_hour
water	46:13	0:0	4	tm_start
op	46:21	0:0	4	.
water	46:22	0:0	4	tm_hour
arg	46:31	46:46	3	tm_start.tm_min
water	46:31	0:0	4	tm_start
op	46:39	0:0	4	.
water	46:40	0:0	4	tm_min
water	46:47	0:0	2	;
call	47:4	48:42	2	snprintf
arg	47:13	47:21	3	text_end
water	47:13	0:0	4	text_end
arg	47:23	47:39	3	sizeof(text_end)
op	47:23	0:0	4	sizeof
water	47:29	0:0	4	(
water	47:30	0:0	4	text_end
water	47:38	0:0	4	)
arg	47:41	47:54	3	"%2.2d:%2.2d"
water	47:41	0:0	4	"%2.2d:%2.2d"
arg	48:13	48:27	3	tm_end.tm_hour
water	48:13	0:0	4	tm_end
op	48:19	0:0	4	.
water	48:20	0:0	4	tm_hour
arg	48:29	48:42	3	tm_end.tm_min
water	48:29	0:0	4	tm_end
op	48:35	0:0	4	.
water	48:36	0:0	4	tm_min
water	48:43	0:0	2	;
water	50:4	0:0	2	last_ptr
op	50:13	0:0	2	=
op	50:15	0:0	2	&
water	50:16	0:0	2	(
op	50:17	0:0	2	*
water	50:18	0:0	2	last_ptr
water	50:26	0:0	2	)
op	50:27	0:0	2	->
water	50:29	0:0	2	p_next
water	50:35	0:0	2	;
op	51:4	0:0	2	*
water	51:5	0:0	2	last_ptr
op	51:14	0:0	2	=
call	51:16	55:42	2	vout_OSDEpgText
arg	51:32	51:42	3	text_start
water	51:32	0:0	4	text_start
arg	52:32	52:70	3	x+visible_width*(EPG_LEFT+0.02)
water	52:32	0:0	4	x
op	52:34	0:0	4	+
water	52:36	0:0	4	visible_width
op	52:51	0:0	4	*
water	52:53	0:0	4	(
water	52:54	0:0	4	EPG_LEFT
op	52:63	0:0	4	+
water	52:65	0:0	4	0
op	52:66	0:0	4	.
water	52:67	0:0	4	02
water	52:69	0:0	4	)
arg	53:32	53:69	3	y+visible_height*(EPG_TOP+0.15)
water	53:32	0:0	4	y
op	53:34	0:0	4	+
water	53:36	0:0	4	visible_height
op	53:51	0:0	4	*
water	53:53	0:0	4	(
water	53:54	0:0	4	EPG_TOP
op	53:62	0:0	4	+
water	53:64	0:0	4	0
op	53:65	0:0	4	.
water	53:66	0:0	4	15
water	53:68	0:0	4	)
arg	54:32	54:65	3	visible_height*EPG_PROGRAM_SIZE
water	54:32	0:0	4	visible_height
op	54:47	0:0	4	*
water	54:49	0:0	4	EPG_PROGRAM_SIZE
arg	55:32	55:42	3	0x00ffffff
water	55:32	0:0	4	0
water	55:33	0:0	4	x00ffffff
water	55:43	0:0	2	;
if	56:4	57:19	2	(! * last_ptr)
cond	56:8	56:10	3	! * last_ptr
op	56:8	0:0	4	!
op	56:9	0:0	4	*
water	56:10	0:0	4	last_ptr
stmts	57:8	57:19	3	
return	57:8	57:19	4	head
water	57:15	0:0	5	head
water	58:4	0:0	2	last_ptr
op	58:13	0:0	2	=
op	58:15	0:0	2	&
water	58:16	0:0	2	(
op	58:17	0:0	2	*
water	58:18	0:0	2	last_ptr
water	58:26	0:0	2	)
op	58:27	0:0	2	->
water	58:29	0:0	2	p_next
water	58:35	0:0	2	;
op	59:4	0:0	2	*
water	59:5	0:0	2	last_ptr
op	59:14	0:0	2	=
call	59:16	63:42	2	vout_OSDEpgText
arg	59:32	59:40	3	text_end
water	59:32	0:0	4	text_end
arg	60:32	60:75	3	x+visible_width*(1-EPG_LEFT-0.085)
water	60:32	0:0	4	x
op	60:34	0:0	4	+
water	60:36	0:0	4	visible_width
op	60:51	0:0	4	*
water	60:53	0:0	4	(
water	60:54	0:0	4	1
op	60:56	0:0	4	-
water	60:58	0:0	4	EPG_LEFT
op	60:67	0:0	4	-
water	60:69	0:0	4	0
op	60:70	0:0	4	.
water	60:71	0:0	4	085
water	60:74	0:0	4	)
arg	61:32	61:69	3	y+visible_height*(EPG_TOP+0.15)
water	61:32	0:0	4	y
op	61:34	0:0	4	+
water	61:36	0:0	4	visible_height
op	61:51	0:0	4	*
water	61:53	0:0	4	(
water	61:54	0:0	4	EPG_TOP
op	61:62	0:0	4	+
water	61:64	0:0	4	0
op	61:65	0:0	4	.
water	61:66	0:0	4	15
water	61:68	0:0	4	)
arg	62:32	62:65	3	visible_height*EPG_PROGRAM_SIZE
water	62:32	0:0	4	visible_height
op	62:47	0:0	4	*
water	62:49	0:0	4	EPG_PROGRAM_SIZE
arg	63:32	63:42	3	0x00ffffff
water	63:32	0:0	4	0
water	63:33	0:0	4	x00ffffff
water	63:43	0:0	2	;
return	64:4	64:15	2	head
water	64:11	0:0	3	head

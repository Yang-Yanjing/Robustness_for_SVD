func	2:0	144:0	0	static void	PMThread
params	2:20	0:0	1	
param	2:22	2:32	2	void *	arg
stmnts	0:0	143:37	1	
decl	4:4	4:48	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:27	0:0	2	vout_display_t
op	4:42	0:0	2	*
water	4:44	0:0	2	)
water	4:45	0:0	2	arg
decl	5:4	5:38	2	vout_display_sys_t	*sys
op	5:29	0:0	2	=
water	5:31	0:0	2	vd
op	5:33	0:0	2	->
water	5:35	0:0	2	sys
decl	6:4	6:23	2	ULONG	i_frame_flags
decl	7:4	7:11	2	QMSG	qm
decl	8:4	8:18	2	char	*psz_mode
decl	9:4	9:20	2	ULONG	i_kva_mode
decl	11:4	11:22	2	video_format_t	fmt
call	12:4	12:45	2	video_format_ApplyRotation
arg	12:31	12:35	3	&fmt
op	12:31	0:0	4	&
water	12:32	0:0	4	fmt
arg	12:37	12:45	3	&vd->fmt
op	12:37	0:0	4	&
water	12:38	0:0	4	vd
op	12:40	0:0	4	->
water	12:42	0:0	4	fmt
water	12:46	0:0	2	;
decl	14:4	14:39	2	vout_display_info_t	info
op	14:29	0:0	2	=
water	14:31	0:0	2	vd
op	14:33	0:0	2	->
water	14:35	0:0	2	info
water	15:4	0:0	2	info
op	15:8	0:0	2	.
water	15:9	0:0	2	is_slow
op	15:17	0:0	2	=
water	15:19	0:0	2	false
water	15:24	0:0	2	;
water	16:4	0:0	2	info
op	16:8	0:0	2	.
water	16:9	0:0	2	has_double_click
op	16:26	0:0	2	=
water	16:28	0:0	2	true
water	16:32	0:0	2	;
water	17:4	0:0	2	info
op	17:8	0:0	2	.
water	17:9	0:0	2	has_hide_mouse
op	17:24	0:0	2	=
water	17:26	0:0	2	false
water	17:31	0:0	2	;
water	18:4	0:0	2	info
op	18:8	0:0	2	.
water	18:9	0:0	2	has_pictures_invalid
op	18:30	0:0	2	=
water	18:32	0:0	2	false
water	18:37	0:0	2	;
call	19:4	19:14	2	MorphToPM
water	19:15	0:0	2	;
water	20:4	0:0	2	sys
op	20:7	0:0	2	->
water	20:9	0:0	2	hab
op	20:13	0:0	2	=
call	20:15	20:32	2	WinInitialize
arg	20:30	20:32	3	0
water	20:30	0:0	4	0
water	20:33	0:0	2	;
water	21:4	0:0	2	sys
op	21:7	0:0	2	->
water	21:9	0:0	2	hmq
op	21:13	0:0	2	=
call	21:15	21:45	2	WinCreateMsgQueue
arg	21:34	21:42	3	sys->hab
water	21:34	0:0	4	sys
op	21:37	0:0	4	->
water	21:39	0:0	4	hab
arg	21:44	21:45	3	0
water	21:44	0:0	4	0
water	21:46	0:0	2	;
call	22:4	26:37	2	WinRegisterClass
arg	22:22	22:30	3	sys->hab
water	22:22	0:0	4	sys
op	22:25	0:0	4	->
water	22:27	0:0	4	hab
arg	23:22	23:32	3	WC_VLC_KVA
water	23:22	0:0	4	WC_VLC_KVA
arg	24:22	24:29	3	WndProc
water	24:22	0:0	4	WndProc
arg	25:22	25:51	3	CS_SIZEREDRAW|CS_MOVENOTIFY
water	25:22	0:0	4	CS_SIZEREDRAW
op	25:36	0:0	4	|
water	25:38	0:0	4	CS_MOVENOTIFY
arg	26:22	26:37	3	sizeof(PVOID)
op	26:22	0:0	4	sizeof
water	26:28	0:0	4	(
water	26:30	0:0	4	PVOID
water	26:36	0:0	4	)
water	26:38	0:0	2	;
water	27:4	0:0	2	sys
op	27:7	0:0	2	->
water	27:9	0:0	2	b_fixt23
op	27:18	0:0	2	=
call	27:20	27:55	2	var_CreateGetBool
arg	27:39	27:41	3	vd
water	27:39	0:0	4	vd
arg	27:43	27:55	3	"kva-fixt23"
water	27:43	0:0	4	"kva-fixt23"
water	27:56	0:0	2	;
if	28:4	40:4	2	(! sys -> b_fixt23)
cond	28:8	28:14	3	! sys -> b_fixt23
op	28:8	0:0	4	!
water	28:9	0:0	4	sys
op	28:12	0:0	4	->
water	28:14	0:0	4	b_fixt23
stmts	29:4	40:4	3	
water	29:4	0:0	4	{
decl	30:8	30:33	4	vout_window_cfg_t	wnd_cfg
water	31:8	0:0	4	wnd_cfg
op	31:15	0:0	4	.
water	31:16	0:0	4	is_standalone
op	31:30	0:0	4	=
water	31:32	0:0	4	false
water	31:37	0:0	4	;
water	32:8	0:0	4	wnd_cfg
op	32:15	0:0	4	.
water	32:16	0:0	4	type
op	32:30	0:0	4	=
water	32:32	0:0	4	VOUT_WINDOW_TYPE_HWND
water	32:53	0:0	4	;
water	33:8	0:0	4	wnd_cfg
op	33:15	0:0	4	.
water	33:16	0:0	4	x
op	33:30	0:0	4	=
call	33:32	33:64	4	var_InheritInteger
arg	33:51	33:53	5	vd
water	33:51	0:0	6	vd
arg	33:55	33:64	5	"video-x"
water	33:55	0:0	6	"video-x"
water	33:65	0:0	4	;
water	34:8	0:0	4	wnd_cfg
op	34:15	0:0	4	.
water	34:16	0:0	4	y
op	34:30	0:0	4	=
call	34:32	34:64	4	var_InheritInteger
arg	34:51	34:53	5	vd
water	34:51	0:0	6	vd
arg	34:55	34:64	5	"video-y"
water	34:55	0:0	6	"video-y"
water	34:65	0:0	4	;
water	35:8	0:0	4	wnd_cfg
op	35:15	0:0	4	.
water	35:16	0:0	4	width
op	35:30	0:0	4	=
water	35:32	0:0	4	vd
op	35:34	0:0	4	->
water	35:36	0:0	4	cfg
op	35:39	0:0	4	->
water	35:41	0:0	4	display
op	35:48	0:0	4	.
water	35:49	0:0	4	width
water	35:54	0:0	4	;
water	36:8	0:0	4	wnd_cfg
op	36:15	0:0	4	.
water	36:16	0:0	4	height
op	36:30	0:0	4	=
water	36:32	0:0	4	vd
op	36:34	0:0	4	->
water	36:36	0:0	4	cfg
op	36:39	0:0	4	->
water	36:41	0:0	4	display
op	36:48	0:0	4	.
water	36:49	0:0	4	height
water	36:55	0:0	4	;
water	38:8	0:0	4	sys
op	38:11	0:0	4	->
water	38:13	0:0	4	parent_window
op	38:27	0:0	4	=
call	39:12	39:49	4	vout_display_NewWindow
arg	39:36	39:38	5	vd
water	39:36	0:0	6	vd
arg	39:40	39:49	5	&wnd_cfg
op	39:40	0:0	6	&
water	39:41	0:0	6	wnd_cfg
water	39:50	0:0	4	;
water	40:4	0:0	4	}
if	41:4	48:4	2	(sys -> parent_window)
cond	41:8	41:13	3	sys -> parent_window
water	41:8	0:0	4	sys
op	41:11	0:0	4	->
water	41:13	0:0	4	parent_window
stmts	42:4	48:4	3	
water	42:4	0:0	4	{
water	43:8	0:0	4	sys
op	43:11	0:0	4	->
water	43:13	0:0	4	parent
op	43:20	0:0	4	=
water	43:22	0:0	4	(
water	43:24	0:0	4	HWND
water	43:29	0:0	4	)
water	43:30	0:0	4	sys
op	43:33	0:0	4	->
water	43:35	0:0	4	parent_window
op	43:48	0:0	4	->
water	43:50	0:0	4	handle
op	43:56	0:0	4	.
water	43:57	0:0	4	hwnd
water	43:61	0:0	4	;
decl	44:8	44:69	4	ULONG	i_style
op	44:22	0:0	4	=
call	44:24	44:68	5	WinQueryWindowULong
arg	44:45	44:56	6	sys->parent
water	44:45	0:0	7	sys
op	44:48	0:0	7	->
water	44:50	0:0	7	parent
arg	44:58	44:68	6	QWL_STYLE
water	44:58	0:0	7	QWL_STYLE
call	45:8	46:53	4	WinSetWindowULong
arg	45:27	45:38	5	sys->parent
water	45:27	0:0	6	sys
op	45:30	0:0	6	->
water	45:32	0:0	6	parent
arg	45:40	45:49	5	QWL_STYLE
water	45:40	0:0	6	QWL_STYLE
arg	46:27	46:53	5	i_style|WS_CLIPCHILDREN
water	46:27	0:0	6	i_style
op	46:35	0:0	6	|
water	46:37	0:0	6	WS_CLIPCHILDREN
water	46:54	0:0	4	;
water	47:8	0:0	4	i_frame_flags
op	47:22	0:0	4	=
water	47:24	0:0	4	FCF_TITLEBAR
water	47:36	0:0	4	;
water	48:4	0:0	4	}
else	49:4	54:4	2
stmts	50:4	54:4	3	
water	50:4	0:0	4	{
water	51:8	0:0	4	sys
op	51:11	0:0	4	->
water	51:13	0:0	4	parent
op	51:20	0:0	4	=
water	51:22	0:0	4	HWND_DESKTOP
water	51:34	0:0	4	;
water	52:8	0:0	4	i_frame_flags
op	52:22	0:0	4	=
water	52:24	0:0	4	FCF_SYSMENU
op	52:39	0:0	4	|
water	52:41	0:0	4	FCF_TITLEBAR
op	52:54	0:0	4	|
water	52:56	0:0	4	FCF_MINMAX
op	52:67	0:0	4	|
water	53:24	0:0	4	FCF_SIZEBORDER
op	53:39	0:0	4	|
water	53:41	0:0	4	FCF_TASKLIST
water	53:53	0:0	4	;
water	54:4	0:0	4	}
water	55:4	0:0	2	sys
op	55:7	0:0	2	->
water	55:9	0:0	2	frame
op	55:15	0:0	2	=
call	56:8	64:41	2	WinCreateStdWindow
arg	56:28	56:39	3	sys->parent
water	56:28	0:0	4	sys
op	56:31	0:0	4	->
water	56:33	0:0	4	parent
arg	57:28	57:38	3	WS_VISIBLE
water	57:28	0:0	4	WS_VISIBLE
arg	58:28	58:42	3	&i_frame_flags
op	58:28	0:0	4	&
water	58:29	0:0	4	i_frame_flags
arg	59:28	59:38	3	WC_VLC_KVA
water	59:28	0:0	4	WC_VLC_KVA
arg	60:28	60:30	3	""
water	60:28	0:0	4	""
arg	61:28	61:30	3	0L
water	61:28	0:0	4	0
water	61:29	0:0	4	L
arg	62:28	62:38	3	NULLHANDLE
water	62:28	0:0	4	NULLHANDLE
arg	63:28	63:29	3	1
water	63:28	0:0	4	1
arg	64:28	64:41	3	&sys->client
op	64:28	0:0	4	&
water	64:29	0:0	4	sys
op	64:32	0:0	4	->
water	64:34	0:0	4	client
water	64:42	0:0	2	;
if	65:4	69:4	2	(sys -> frame == NULLHANDLE)
cond	65:8	65:22	3	sys -> frame == NULLHANDLE
water	65:8	0:0	4	sys
op	65:11	0:0	4	->
water	65:13	0:0	4	frame
op	65:19	0:0	4	==
water	65:22	0:0	4	NULLHANDLE
stmts	66:4	69:4	3	
water	66:4	0:0	4	{
call	67:8	67:51	4	msg_Err
arg	67:17	67:19	5	vd
water	67:17	0:0	6	vd
arg	67:21	67:51	5	"cannot create a frame window"
water	67:21	0:0	6	"cannot create a frame window"
water	67:52	0:0	4	;
goto	68:8	68:23	4	exit_frame
water	68:13	0:0	5	exit_frame
water	69:4	0:0	4	}
call	70:4	70:40	2	WinSetWindowPtr
arg	70:21	70:32	3	sys->client
water	70:21	0:0	4	sys
op	70:24	0:0	4	->
water	70:26	0:0	4	client
arg	70:34	70:35	3	0
water	70:34	0:0	4	0
arg	70:37	70:40	3	vd
water	70:37	0:0	4	vd
water	70:41	0:0	2	;
if	71:4	75:4	2	(! sys -> parent_window)
cond	71:8	71:14	3	! sys -> parent_window
op	71:8	0:0	4	!
water	71:9	0:0	4	sys
op	71:12	0:0	4	->
water	71:14	0:0	4	parent_window
stmts	72:4	75:4	3	
water	72:4	0:0	4	{
call	73:8	73:43	4	WinSetWindowPtr
arg	73:25	73:35	5	sys->frame
water	73:25	0:0	6	sys
op	73:28	0:0	6	->
water	73:30	0:0	6	frame
arg	73:37	73:38	5	0
water	73:37	0:0	6	0
arg	73:40	73:43	5	vd
water	73:40	0:0	6	vd
water	73:44	0:0	4	;
water	74:8	0:0	4	sys
op	74:11	0:0	4	->
water	74:13	0:0	4	p_old_frame
op	74:25	0:0	4	=
call	74:27	74:73	4	WinSubclassWindow
arg	74:46	74:56	5	sys->frame
water	74:46	0:0	6	sys
op	74:49	0:0	6	->
water	74:51	0:0	6	frame
arg	74:58	74:73	5	MyFrameWndProc
water	74:58	0:0	6	MyFrameWndProc
water	74:74	0:0	4	;
water	75:4	0:0	4	}
water	76:4	0:0	2	psz_mode
op	76:13	0:0	2	=
call	76:15	76:57	2	var_CreateGetString
arg	76:36	76:38	3	vd
water	76:36	0:0	4	vd
arg	76:40	76:57	3	"kva-video-mode"
water	76:40	0:0	4	"kva-video-mode"
water	76:58	0:0	2	;
water	77:4	0:0	2	i_kva_mode
op	77:15	0:0	2	=
water	77:17	0:0	2	KVAM_AUTO
water	77:26	0:0	2	;
if	78:4	79:30	2	(strcmp (psz_mode ,"snap" ) == 0)
cond	78:8	78:38	3	strcmp (psz_mode ,"snap" ) == 0
call	78:8	78:33	4	strcmp
arg	78:16	78:24	5	psz_mode
water	78:16	0:0	6	psz_mode
arg	78:26	78:33	5	"snap"
water	78:26	0:0	6	"snap"
op	78:35	0:0	4	==
water	78:38	0:0	4	0
stmts	79:8	79:30	3	
water	79:8	0:0	4	i_kva_mode
op	79:19	0:0	4	=
water	79:21	0:0	4	KVAM_SNAP
water	79:30	0:0	4	;
else	80:4	81:28	2
stmts	80:9	81:28	3	
if	80:9	81:28	4	(strcmp (psz_mode ,"wo" ) == 0)
cond	80:13	80:41	5	strcmp (psz_mode ,"wo" ) == 0
call	80:13	80:36	6	strcmp
arg	80:21	80:29	7	psz_mode
water	80:21	0:0	8	psz_mode
arg	80:31	80:36	7	"wo"
water	80:31	0:0	8	"wo"
op	80:38	0:0	6	==
water	80:41	0:0	6	0
stmts	81:8	81:28	5	
water	81:8	0:0	6	i_kva_mode
op	81:19	0:0	6	=
water	81:21	0:0	6	KVAM_WO
water	81:28	0:0	6	;
else	82:4	83:30	2
stmts	82:9	83:30	3	
if	82:9	83:30	4	(strcmp (psz_mode ,"vman" ) == 0)
cond	82:13	82:43	5	strcmp (psz_mode ,"vman" ) == 0
call	82:13	82:38	6	strcmp
arg	82:21	82:29	7	psz_mode
water	82:21	0:0	8	psz_mode
arg	82:31	82:38	7	"vman"
water	82:31	0:0	8	"vman"
op	82:40	0:0	6	==
water	82:43	0:0	6	0
stmts	83:8	83:30	5	
water	83:8	0:0	6	i_kva_mode
op	83:19	0:0	6	=
water	83:21	0:0	6	KVAM_VMAN
water	83:30	0:0	6	;
else	84:4	85:30	2
stmts	84:9	85:30	3	
if	84:9	85:30	4	(strcmp (psz_mode ,"dive" ) == 0)
cond	84:13	84:43	5	strcmp (psz_mode ,"dive" ) == 0
call	84:13	84:38	6	strcmp
arg	84:21	84:29	7	psz_mode
water	84:21	0:0	8	psz_mode
arg	84:31	84:38	7	"dive"
water	84:31	0:0	8	"dive"
op	84:40	0:0	6	==
water	84:43	0:0	6	0
stmts	85:8	85:30	5	
water	85:8	0:0	6	i_kva_mode
op	85:19	0:0	6	=
water	85:21	0:0	6	KVAM_DIVE
water	85:30	0:0	6	;
call	86:4	86:19	2	free
arg	86:10	86:19	3	psz_mode
water	86:10	0:0	4	psz_mode
water	86:20	0:0	2	;
if	87:4	91:4	2	(kvaInit (i_kva_mode ,sys -> client ,COLOR_KEY ))
cond	87:8	87:52	3	kvaInit (i_kva_mode ,sys -> client ,COLOR_KEY )
call	87:8	87:52	4	kvaInit
arg	87:17	87:27	5	i_kva_mode
water	87:17	0:0	6	i_kva_mode
arg	87:29	87:40	5	sys->client
water	87:29	0:0	6	sys
op	87:32	0:0	6	->
water	87:34	0:0	6	client
arg	87:42	87:52	5	COLOR_KEY
water	87:42	0:0	6	COLOR_KEY
stmts	88:4	91:4	3	
water	88:4	0:0	4	{
call	89:8	89:44	4	msg_Err
arg	89:17	89:19	5	vd
water	89:17	0:0	6	vd
arg	89:21	89:44	5	"cannot initialize KVA"
water	89:21	0:0	6	"cannot initialize KVA"
water	89:45	0:0	4	;
goto	90:8	90:26	4	exit_kva_init
water	90:13	0:0	5	exit_kva_init
water	91:4	0:0	4	}
call	92:4	92:24	2	kvaCaps
arg	92:13	92:24	3	&sys->kvac
op	92:13	0:0	4	&
water	92:14	0:0	4	sys
op	92:17	0:0	4	->
water	92:19	0:0	4	kvac
water	92:25	0:0	2	;
call	93:4	94:51	2	msg_Dbg
arg	93:13	93:15	3	vd
water	93:13	0:0	4	vd
arg	93:17	93:43	3	"selected video mode = %s"
water	93:17	0:0	4	"selected video mode = %s"
arg	94:13	94:51	3	psz_video_mode[sys->kvac.ulMode-1]
water	94:13	0:0	4	psz_video_mode
op	94:27	0:0	4	[
water	94:29	0:0	4	sys
op	94:32	0:0	4	->
water	94:34	0:0	4	kvac
op	94:38	0:0	4	.
water	94:39	0:0	4	ulMode
op	94:46	0:0	4	-
water	94:48	0:0	4	1
op	94:50	0:0	4	]
water	94:52	0:0	2	;
if	95:4	99:4	2	(OpenDisplay (vd ,& fmt ))
cond	95:8	95:30	3	OpenDisplay (vd ,& fmt )
call	95:8	95:30	4	OpenDisplay
arg	95:21	95:23	5	vd
water	95:21	0:0	6	vd
arg	95:25	95:30	5	&fmt
op	95:25	0:0	6	&
water	95:26	0:0	6	fmt
stmts	96:4	99:4	3	
water	96:4	0:0	4	{
call	97:8	97:42	4	msg_Err
arg	97:17	97:19	5	vd
water	97:17	0:0	6	vd
arg	97:21	97:42	5	"cannot open display"
water	97:21	0:0	6	"cannot open display"
water	97:43	0:0	4	;
goto	98:8	98:30	4	exit_open_display
water	98:13	0:0	5	exit_open_display
water	99:4	0:0	4	}
if	100:4	107:4	2	(vd -> cfg -> is_fullscreen)
cond	100:8	100:17	3	vd -> cfg -> is_fullscreen
water	100:8	0:0	4	vd
op	100:10	0:0	4	->
water	100:12	0:0	4	cfg
op	100:15	0:0	4	->
water	100:17	0:0	4	is_fullscreen
stmts	101:4	107:4	3	
water	101:4	0:0	4	{
if	102:8	103:63	4	(sys -> parent_window)
cond	102:12	102:17	5	sys -> parent_window
water	102:12	0:0	6	sys
op	102:15	0:0	6	->
water	102:17	0:0	6	parent_window
stmts	103:12	103:63	5	
call	103:12	103:62	6	vout_window_SetFullScreen
arg	103:38	103:56	7	sys->parent_window
water	103:38	0:0	8	sys
op	103:41	0:0	8	->
water	103:43	0:0	8	parent_window
arg	103:58	103:62	7	true
water	103:58	0:0	8	true
water	103:63	0:0	6	;
else	104:8	106:47	4
stmts	105:12	106:47	5	
call	105:12	106:46	6	WinPostMsg
arg	105:24	105:35	7	sys->client
water	105:24	0:0	8	sys
op	105:27	0:0	8	->
water	105:29	0:0	8	client
arg	105:37	105:61	7	WM_VLC_FULLSCREEN_CHANGE
water	105:37	0:0	8	WM_VLC_FULLSCREEN_CHANGE
arg	106:24	106:42	7	MPFROMLONG(true)
call	106:24	106:41	8	MPFROMLONG
arg	106:36	106:41	9	true
water	106:36	0:0	10	true
arg	106:44	106:46	7	0
water	106:44	0:0	8	0
water	106:47	0:0	6	;
water	107:4	0:0	4	}
call	108:4	108:26	2	kvaDisableScreenSaver
water	108:27	0:0	2	;
water	110:4	0:0	2	vd
op	110:6	0:0	2	->
water	110:8	0:0	2	fmt
op	110:16	0:0	2	=
water	110:18	0:0	2	fmt
water	110:21	0:0	2	;
water	111:4	0:0	2	vd
op	111:6	0:0	2	->
water	111:8	0:0	2	info
op	111:16	0:0	2	=
water	111:18	0:0	2	info
water	111:22	0:0	2	;
water	112:4	0:0	2	vd
op	112:6	0:0	2	->
water	112:8	0:0	2	pool
op	112:16	0:0	2	=
water	112:18	0:0	2	Pool
water	112:22	0:0	2	;
water	113:4	0:0	2	vd
op	113:6	0:0	2	->
water	113:8	0:0	2	prepare
op	113:16	0:0	2	=
water	113:18	0:0	2	NULL
water	113:22	0:0	2	;
water	114:4	0:0	2	vd
op	114:6	0:0	2	->
water	114:8	0:0	2	display
op	114:16	0:0	2	=
water	114:18	0:0	2	Display
water	114:25	0:0	2	;
water	115:4	0:0	2	vd
op	115:6	0:0	2	->
water	115:8	0:0	2	control
op	115:16	0:0	2	=
water	115:18	0:0	2	Control
water	115:25	0:0	2	;
water	116:4	0:0	2	vd
op	116:6	0:0	2	->
water	116:8	0:0	2	manage
op	116:16	0:0	2	=
water	116:18	0:0	2	Manage
water	116:24	0:0	2	;
call	118:4	118:29	2	_control87
arg	118:15	118:21	3	MCW_EM
water	118:15	0:0	4	MCW_EM
arg	118:23	118:29	3	MCW_EM
water	118:23	0:0	4	MCW_EM
water	118:30	0:0	2	;
water	119:4	0:0	2	sys
op	119:7	0:0	2	->
water	119:9	0:0	2	i_result
op	119:18	0:0	2	=
water	119:20	0:0	2	VLC_SUCCESS
water	119:31	0:0	2	;
call	120:4	120:36	2	DosPostEventSem
arg	120:21	120:36	3	sys->ack_event
water	120:21	0:0	4	sys
op	120:24	0:0	4	->
water	120:26	0:0	4	ack_event
water	120:37	0:0	2	;
if	121:4	122:53	2	(! sys -> parent_window)
cond	121:8	121:14	3	! sys -> parent_window
op	121:8	0:0	4	!
water	121:9	0:0	4	sys
op	121:12	0:0	4	->
water	121:14	0:0	4	parent_window
stmts	122:8	122:53	3	
call	122:8	122:52	4	WinSetVisibleRegionNotify
arg	122:35	122:45	5	sys->frame
water	122:35	0:0	6	sys
op	122:38	0:0	6	->
water	122:40	0:0	6	frame
arg	122:47	122:52	5	TRUE
water	122:47	0:0	6	TRUE
water	122:53	0:0	4	;
while	123:4	124:39	2	(WinGetMsg (sys -> hab ,& qm ,NULLHANDLE ,0 ,0 ))
cond	123:11	123:54	3	WinGetMsg (sys -> hab ,& qm ,NULLHANDLE ,0 ,0 )
call	123:11	123:54	4	WinGetMsg
arg	123:22	123:30	5	sys->hab
water	123:22	0:0	6	sys
op	123:25	0:0	6	->
water	123:27	0:0	6	hab
arg	123:32	123:35	5	&qm
op	123:32	0:0	6	&
water	123:33	0:0	6	qm
arg	123:37	123:47	5	NULLHANDLE
water	123:37	0:0	6	NULLHANDLE
arg	123:49	123:50	5	0
water	123:49	0:0	6	0
arg	123:52	123:54	5	0
water	123:52	0:0	6	0
stmts	124:8	124:39	3	
call	124:8	124:38	4	WinDispatchMsg
arg	124:24	124:32	5	sys->hab
water	124:24	0:0	6	sys
op	124:27	0:0	6	->
water	124:29	0:0	6	hab
arg	124:34	124:38	5	&qm
op	124:34	0:0	6	&
water	124:35	0:0	6	qm
water	124:39	0:0	4	;
if	125:4	126:54	2	(! sys -> parent_window)
cond	125:8	125:14	3	! sys -> parent_window
op	125:8	0:0	4	!
water	125:9	0:0	4	sys
op	125:12	0:0	4	->
water	125:14	0:0	4	parent_window
stmts	126:8	126:54	3	
call	126:8	126:53	4	WinSetVisibleRegionNotify
arg	126:35	126:45	5	sys->frame
water	126:35	0:0	6	sys
op	126:38	0:0	6	->
water	126:40	0:0	6	frame
arg	126:47	126:53	5	FALSE
water	126:47	0:0	6	FALSE
water	126:54	0:0	4	;
call	127:4	127:25	2	kvaEnableScreenSaver
water	127:26	0:0	2	;
call	128:4	128:21	2	CloseDisplay
arg	128:18	128:21	3	vd
water	128:18	0:0	4	vd
water	128:22	0:0	2	;
label	130:0	130:18	2	exit_open_display :
call	131:4	131:12	2	kvaDone
water	131:13	0:0	2	;
label	132:0	132:14	2	exit_kva_init :
if	133:4	134:57	2	(! sys -> parent_window)
cond	133:8	133:14	3	! sys -> parent_window
op	133:8	0:0	4	!
water	133:9	0:0	4	sys
op	133:12	0:0	4	->
water	133:14	0:0	4	parent_window
stmts	134:8	134:57	3	
call	134:8	134:56	4	WinSubclassWindow
arg	134:27	134:37	5	sys->frame
water	134:27	0:0	6	sys
op	134:30	0:0	6	->
water	134:32	0:0	6	frame
arg	134:39	134:56	5	sys->p_old_frame
water	134:39	0:0	6	sys
op	134:42	0:0	6	->
water	134:44	0:0	6	p_old_frame
water	134:57	0:0	4	;
call	135:4	135:33	2	WinDestroyWindow
arg	135:22	135:33	3	sys->frame
water	135:22	0:0	4	sys
op	135:25	0:0	4	->
water	135:27	0:0	4	frame
water	135:34	0:0	2	;
label	136:0	136:11	2	exit_frame :
call	137:4	137:54	2	vout_display_DeleteWindow
arg	137:31	137:33	3	vd
water	137:31	0:0	4	vd
arg	137:35	137:54	3	sys->parent_window
water	137:35	0:0	4	sys
op	137:38	0:0	4	->
water	137:40	0:0	4	parent_window
water	137:55	0:0	2	;
if	138:4	139:44	2	(sys -> is_mouse_hidden)
cond	138:8	138:13	3	sys -> is_mouse_hidden
water	138:8	0:0	4	sys
op	138:11	0:0	4	->
water	138:13	0:0	4	is_mouse_hidden
stmts	139:8	139:44	3	
call	139:8	139:43	4	WinShowPointer
arg	139:24	139:36	5	HWND_DESKTOP
water	139:24	0:0	6	HWND_DESKTOP
arg	139:38	139:43	5	TRUE
water	139:38	0:0	6	TRUE
water	139:44	0:0	4	;
call	140:4	140:33	2	WinDestroyMsgQueue
arg	140:24	140:33	3	sys->hmq
water	140:24	0:0	4	sys
op	140:27	0:0	4	->
water	140:29	0:0	4	hmq
water	140:34	0:0	2	;
call	141:4	141:27	2	WinTerminate
arg	141:18	141:27	3	sys->hab
water	141:18	0:0	4	sys
op	141:21	0:0	4	->
water	141:23	0:0	4	hab
water	141:28	0:0	2	;
water	142:4	0:0	2	sys
op	142:7	0:0	2	->
water	142:9	0:0	2	i_result
op	142:18	0:0	2	=
water	142:20	0:0	2	VLC_EGENERIC
water	142:32	0:0	2	;
call	143:4	143:36	2	DosPostEventSem
arg	143:21	143:36	3	sys->ack_event
water	143:21	0:0	4	sys
op	143:24	0:0	4	->
water	143:26	0:0	4	ack_event
water	143:37	0:0	2	;

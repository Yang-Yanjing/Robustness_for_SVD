func	2:0	64:0	0	static void	HandleAncillary
params	2:27	0:0	1	
param	2:29	2:45	2	demux_t *	p_demux
param	2:47	2:68	2	const uint16_t *	p_anc
param	3:29	3:49	2	unsigned int	i_size
stmnts	0:0	63:55	1	
decl	5:4	5:24	2	uint8_t	i_data_count
if	6:4	8:14	2	(i_size < 7 || p_anc [ 0 ] != 0 x0 || p_anc [ 1 ] != 0 x3ff || p_anc [ 2 ] != 0 x3ff)
cond	6:9	7:66	3	i_size < 7 || p_anc [ 0 ] != 0 x0 || p_anc [ 1 ] != 0 x3ff || p_anc [ 2 ] != 0 x3ff
water	6:9	0:0	4	i_size
op	6:16	0:0	4	<
water	6:18	0:0	4	7
op	7:10	0:0	4	||
water	7:13	0:0	4	p_anc
op	7:18	0:0	4	[
water	7:19	0:0	4	0
op	7:20	0:0	4	]
op	7:22	0:0	4	!=
water	7:25	0:0	4	0
water	7:26	0:0	4	x0
op	7:29	0:0	4	||
water	7:32	0:0	4	p_anc
op	7:37	0:0	4	[
water	7:38	0:0	4	1
op	7:39	0:0	4	]
op	7:41	0:0	4	!=
water	7:44	0:0	4	0
water	7:45	0:0	4	x3ff
op	7:50	0:0	4	||
water	7:53	0:0	4	p_anc
op	7:58	0:0	4	[
water	7:59	0:0	4	2
op	7:60	0:0	4	]
op	7:62	0:0	4	!=
water	7:65	0:0	4	0
water	7:66	0:0	4	x3ff
stmts	8:8	8:14	3	
return	8:8	8:14	4	
water	9:4	0:0	2	i_data_count
op	9:17	0:0	2	=
water	9:19	0:0	2	p_anc
op	9:24	0:0	2	[
water	9:25	0:0	2	5
op	9:26	0:0	2	]
op	9:28	0:0	2	&
water	9:30	0:0	2	0
water	9:31	0:0	2	xff
water	9:34	0:0	2	;
if	10:4	15:4	2	(i_size - 6 < i_data_count)
cond	10:9	10:22	3	i_size - 6 < i_data_count
water	10:9	0:0	4	i_size
op	10:16	0:0	4	-
water	10:18	0:0	4	6
op	10:20	0:0	4	<
water	10:22	0:0	4	i_data_count
stmts	11:4	15:4	3	
water	11:4	0:0	4	{
call	12:8	13:43	4	msg_Warn
arg	12:18	12:25	5	p_demux
water	12:18	0:0	6	p_demux
arg	12:27	12:70	5	"malformed ancillary packet (size %u > %u)"
water	12:27	0:0	6	"malformed ancillary packet (size %u > %u)"
arg	13:18	13:30	5	i_data_count
water	13:18	0:0	6	i_data_count
arg	13:32	13:43	5	i_size-6
water	13:32	0:0	6	i_size
op	13:39	0:0	6	-
water	13:41	0:0	6	6
water	13:44	0:0	4	;
return	14:8	14:14	4	
water	15:4	0:0	4	}
switch	16:4	61:4	2	(p_anc [ 3 ])
cond	16:13	16:20	3	p_anc [ 3 ]
water	16:13	0:0	4	p_anc
op	16:18	0:0	4	[
water	16:19	0:0	4	3
op	16:20	0:0	4	]
stmts	17:4	61:4	3	
water	17:4	0:0	4	{
label	18:4	18:14	4	case 0 x2ff :
call	19:8	19:78	4	HandleAudioData
arg	19:25	19:32	5	p_demux
water	19:25	0:0	6	p_demux
arg	19:34	19:43	5	p_anc+6
water	19:34	0:0	6	p_anc
op	19:40	0:0	6	+
water	19:42	0:0	6	6
arg	19:45	19:57	5	i_data_count
water	19:45	0:0	6	i_data_count
arg	19:59	19:60	5	1
water	19:59	0:0	6	1
arg	19:62	19:78	5	p_anc[4]&0xff
water	19:62	0:0	6	p_anc
op	19:67	0:0	6	[
water	19:68	0:0	6	4
op	19:69	0:0	6	]
op	19:71	0:0	6	&
water	19:73	0:0	6	0
water	19:74	0:0	6	xff
water	19:79	0:0	4	;
break	20:8	20:13	4	
label	21:4	21:14	4	case 0 x1fd :
call	22:8	22:78	4	HandleAudioData
arg	22:25	22:32	5	p_demux
water	22:25	0:0	6	p_demux
arg	22:34	22:43	5	p_anc+6
water	22:34	0:0	6	p_anc
op	22:40	0:0	6	+
water	22:42	0:0	6	6
arg	22:45	22:57	5	i_data_count
water	22:45	0:0	6	i_data_count
arg	22:59	22:60	5	2
water	22:59	0:0	6	2
arg	22:62	22:78	5	p_anc[4]&0xff
water	22:62	0:0	6	p_anc
op	22:67	0:0	6	[
water	22:68	0:0	6	4
op	22:69	0:0	6	]
op	22:71	0:0	6	&
water	22:73	0:0	6	0
water	22:74	0:0	6	xff
water	22:79	0:0	4	;
break	23:8	23:13	4	
label	24:4	24:14	4	case 0 x1fb :
call	25:8	25:78	4	HandleAudioData
arg	25:25	25:32	5	p_demux
water	25:25	0:0	6	p_demux
arg	25:34	25:43	5	p_anc+6
water	25:34	0:0	6	p_anc
op	25:40	0:0	6	+
water	25:42	0:0	6	6
arg	25:45	25:57	5	i_data_count
water	25:45	0:0	6	i_data_count
arg	25:59	25:60	5	3
water	25:59	0:0	6	3
arg	25:62	25:78	5	p_anc[4]&0xff
water	25:62	0:0	6	p_anc
op	25:67	0:0	6	[
water	25:68	0:0	6	4
op	25:69	0:0	6	]
op	25:71	0:0	6	&
water	25:73	0:0	6	0
water	25:74	0:0	6	xff
water	25:79	0:0	4	;
break	26:8	26:13	4	
label	27:4	27:14	4	case 0 x2f9 :
call	28:8	28:78	4	HandleAudioData
arg	28:25	28:32	5	p_demux
water	28:25	0:0	6	p_demux
arg	28:34	28:43	5	p_anc+6
water	28:34	0:0	6	p_anc
op	28:40	0:0	6	+
water	28:42	0:0	6	6
arg	28:45	28:57	5	i_data_count
water	28:45	0:0	6	i_data_count
arg	28:59	28:60	5	4
water	28:59	0:0	6	4
arg	28:62	28:78	5	p_anc[4]&0xff
water	28:62	0:0	6	p_anc
op	28:67	0:0	6	[
water	28:68	0:0	6	4
op	28:69	0:0	6	]
op	28:71	0:0	6	&
water	28:73	0:0	6	0
water	28:74	0:0	6	xff
water	28:79	0:0	4	;
break	29:8	29:13	4	
label	30:4	30:14	4	case 0 x1ef :
call	31:8	31:63	4	HandleAudioConfig
arg	31:27	31:34	5	p_demux
water	31:27	0:0	6	p_demux
arg	31:36	31:45	5	p_anc+6
water	31:36	0:0	6	p_anc
op	31:42	0:0	6	+
water	31:44	0:0	6	6
arg	31:47	31:59	5	i_data_count
water	31:47	0:0	6	i_data_count
arg	31:61	31:63	5	1
water	31:61	0:0	6	1
water	31:64	0:0	4	;
break	32:8	32:13	4	
label	33:4	33:14	4	case 0 x2ee :
call	34:8	34:63	4	HandleAudioConfig
arg	34:27	34:34	5	p_demux
water	34:27	0:0	6	p_demux
arg	34:36	34:45	5	p_anc+6
water	34:36	0:0	6	p_anc
op	34:42	0:0	6	+
water	34:44	0:0	6	6
arg	34:47	34:59	5	i_data_count
water	34:47	0:0	6	i_data_count
arg	34:61	34:63	5	2
water	34:61	0:0	6	2
water	34:64	0:0	4	;
break	35:8	35:13	4	
label	36:4	36:14	4	case 0 x2ed :
call	37:8	37:63	4	HandleAudioConfig
arg	37:27	37:34	5	p_demux
water	37:27	0:0	6	p_demux
arg	37:36	37:45	5	p_anc+6
water	37:36	0:0	6	p_anc
op	37:42	0:0	6	+
water	37:44	0:0	6	6
arg	37:47	37:59	5	i_data_count
water	37:47	0:0	6	i_data_count
arg	37:61	37:63	5	3
water	37:61	0:0	6	3
water	37:64	0:0	4	;
break	38:8	38:13	4	
label	39:4	39:14	4	case 0 x1ec :
call	40:8	40:63	4	HandleAudioConfig
arg	40:27	40:34	5	p_demux
water	40:27	0:0	6	p_demux
arg	40:36	40:45	5	p_anc+6
water	40:36	0:0	6	p_anc
op	40:42	0:0	6	+
water	40:44	0:0	6	6
arg	40:47	40:59	5	i_data_count
water	40:47	0:0	6	i_data_count
arg	40:61	40:63	5	4
water	40:61	0:0	6	4
water	40:64	0:0	4	;
break	41:8	41:13	4	
label	43:4	43:14	4	case 0 x1fe :
label	44:4	44:14	4	case 0 x2fc :
label	45:4	45:14	4	case 0 x2fa :
label	46:4	46:14	4	case 0 x1f8 :
label	47:4	47:11	4	default :
break	48:8	48:13	4	
label	49:4	49:13	4	case 0 x88 :
water	50:8	0:0	4	p_anc
op	50:14	0:0	4	+=
water	50:17	0:0	4	7
water	50:18	0:0	4	;
water	51:8	0:0	4	i_size
op	51:15	0:0	4	-=
water	51:18	0:0	4	7
water	51:19	0:0	4	;
while	52:8	57:8	4	(i_size >= 7 && ( p_anc [ 0 ] != 0 x0 || p_anc [ 1 ] != 0 x3ff || p_anc [ 2 ] != 0 x3ff ))
cond	52:16	53:53	5	i_size >= 7 && ( p_anc [ 0 ] != 0 x0 || p_anc [ 1 ] != 0 x3ff || p_anc [ 2 ] != 0 x3ff )
water	52:16	0:0	6	i_size
op	52:23	0:0	6	>=
water	52:26	0:0	6	7
op	52:28	0:0	6	&&
water	52:31	0:0	6	(
water	52:32	0:0	6	p_anc
op	52:37	0:0	6	[
water	52:38	0:0	6	0
op	52:39	0:0	6	]
op	52:41	0:0	6	!=
water	52:44	0:0	6	0
water	52:45	0:0	6	x0
op	52:48	0:0	6	||
water	52:51	0:0	6	p_anc
op	52:56	0:0	6	[
water	52:57	0:0	6	1
op	52:58	0:0	6	]
op	52:60	0:0	6	!=
water	52:63	0:0	6	0
water	52:64	0:0	6	x3ff
op	53:33	0:0	6	||
water	53:36	0:0	6	p_anc
op	53:41	0:0	6	[
water	53:42	0:0	6	2
op	53:43	0:0	6	]
op	53:45	0:0	6	!=
water	53:48	0:0	6	0
water	53:49	0:0	6	x3ff
water	53:53	0:0	6	)
stmts	54:8	57:8	5	
water	54:8	0:0	6	{
water	55:12	0:0	6	p_anc
op	55:17	0:0	6	++
water	55:19	0:0	6	;
water	56:12	0:0	6	i_size
op	56:18	0:0	6	--
water	56:20	0:0	6	;
water	57:8	0:0	6	}
if	58:8	59:53	4	(i_size >= 7)
cond	58:13	58:23	5	i_size >= 7
water	58:13	0:0	6	i_size
op	58:20	0:0	6	>=
water	58:23	0:0	6	7
stmts	59:12	59:53	5	
call	59:12	59:52	6	HandleAncillary
arg	59:29	59:36	7	p_demux
water	59:29	0:0	8	p_demux
arg	59:38	59:43	7	p_anc
water	59:38	0:0	8	p_anc
arg	59:45	59:52	7	i_size
water	59:45	0:0	8	i_size
water	59:53	0:0	6	;
return	60:8	60:14	4	
water	61:4	0:0	4	}
return	62:4	63:55	2	HandleAncillary(p_demux,p_anc+i_data_count+7,i_size-i_data_count-7)
call	62:11	63:54	3	HandleAncillary
arg	62:28	62:35	4	p_demux
water	62:28	0:0	5	p_demux
arg	62:37	62:61	4	p_anc+i_data_count+7
water	62:37	0:0	5	p_anc
op	62:43	0:0	5	+
water	62:45	0:0	5	i_data_count
op	62:58	0:0	5	+
water	62:60	0:0	5	7
arg	63:28	63:54	4	i_size-i_data_count-7
water	63:28	0:0	5	i_size
op	63:35	0:0	5	-
water	63:37	0:0	5	i_data_count
op	63:50	0:0	5	-
water	63:52	0:0	5	7

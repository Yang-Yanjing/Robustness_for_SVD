func	2:0	19:0	0	static int	CreateBuffer
params	2:23	0:0	1	
param	2:25	2:45	2	audio_output_t *	aout
param	2:47	2:56	2	int	size
stmnts	0:0	18:12	1	
decl	4:4	4:26	2	audio_buffer_t	*buffer
water	5:4	0:0	2	buffer
op	5:11	0:0	2	=
call	5:13	5:41	2	calloc
arg	5:21	5:22	3	1
water	5:21	0:0	4	1
arg	5:24	5:41	3	sizeof(*buffer)
op	5:24	0:0	4	sizeof
water	5:30	0:0	4	(
op	5:32	0:0	4	*
water	5:33	0:0	4	buffer
water	5:40	0:0	4	)
water	5:42	0:0	2	;
if	6:4	7:17	2	(! buffer)
cond	6:8	6:9	3	! buffer
op	6:8	0:0	4	!
water	6:9	0:0	4	buffer
stmts	7:8	7:17	3	
return	7:8	7:17	4	-1
op	7:15	0:0	5	-
water	7:16	0:0	5	1
water	8:4	0:0	2	buffer
op	8:10	0:0	2	->
water	8:12	0:0	2	data
op	8:17	0:0	2	=
call	8:19	8:32	2	malloc
arg	8:27	8:32	3	size
water	8:27	0:0	4	size
water	8:33	0:0	2	;
if	9:4	13:4	2	(! buffer -> data)
cond	9:8	9:17	3	! buffer -> data
op	9:8	0:0	4	!
water	9:9	0:0	4	buffer
op	9:15	0:0	4	->
water	9:17	0:0	4	data
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
call	11:8	11:21	4	free
arg	11:14	11:21	5	buffer
water	11:14	0:0	6	buffer
water	11:22	0:0	4	;
return	12:8	12:17	4	-1
op	12:15	0:0	5	-
water	12:16	0:0	5	1
water	13:4	0:0	4	}
water	14:4	0:0	2	buffer
op	14:10	0:0	2	->
water	14:12	0:0	2	size
op	14:17	0:0	2	=
water	14:19	0:0	2	size
water	14:23	0:0	2	;
call	15:4	15:35	2	vlc_mutex_init
arg	15:20	15:35	3	&buffer->mutex
op	15:20	0:0	4	&
water	15:21	0:0	4	buffer
op	15:27	0:0	4	->
water	15:29	0:0	4	mutex
water	15:36	0:0	2	;
call	16:4	16:33	2	vlc_cond_init
arg	16:19	16:33	3	&buffer->cond
op	16:19	0:0	4	&
water	16:20	0:0	4	buffer
op	16:26	0:0	4	->
water	16:28	0:0	4	cond
water	16:34	0:0	2	;
water	17:4	0:0	2	aout
op	17:8	0:0	2	->
water	17:10	0:0	2	sys
op	17:13	0:0	2	->
water	17:15	0:0	2	buffer
op	17:22	0:0	2	=
water	17:24	0:0	2	buffer
water	17:30	0:0	2	;
return	18:4	18:12	2	0
water	18:11	0:0	3	0

func	2:0	162:0	0	static subpicture_t *	Decode
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	161:15	1	
decl	4:4	4:41	2	decoder_sys_t	*p_sys
op	4:27	0:0	2	=
water	4:29	0:0	2	p_dec
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:28	2	block_t	*p_block
decl	6:4	6:33	2	subpicture_t	*p_spu
op	6:27	0:0	2	=
water	6:29	0:0	2	NULL
decl	7:4	7:23	2	video_format_t	fmt
decl	8:4	8:36	2	bool	b_cached
op	8:29	0:0	2	=
water	8:31	0:0	2	false
decl	9:4	9:26	2	vbi_page	p_page
if	10:4	11:19	2	(( pp_block == NULL ) || ( * pp_block == NULL ))
cond	10:8	10:48	3	( pp_block == NULL ) || ( * pp_block == NULL )
water	10:8	0:0	4	(
water	10:9	0:0	4	pp_block
op	10:18	0:0	4	==
water	10:21	0:0	4	NULL
water	10:25	0:0	4	)
op	10:27	0:0	4	||
water	10:30	0:0	4	(
op	10:31	0:0	4	*
water	10:32	0:0	4	pp_block
op	10:41	0:0	4	==
water	10:44	0:0	4	NULL
water	10:48	0:0	4	)
stmts	11:8	11:19	3	
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
water	12:4	0:0	2	p_block
op	12:12	0:0	2	=
op	12:14	0:0	2	*
water	12:15	0:0	2	pp_block
water	12:23	0:0	2	;
op	13:4	0:0	2	*
water	13:5	0:0	2	pp_block
op	13:14	0:0	2	=
water	13:16	0:0	2	NULL
water	13:20	0:0	2	;
if	14:4	49:4	2	(p_block -> i_buffer > 0 && ( ( p_block -> p_buffer [ 0 ] >= 0 x10 && p_block -> p_buffer [ 0 ] <= 0 x1f ) || ( p_block -> p_buffer [ 0 ] >= 0 x99 && p_block -> p_buffer [ 0 ] <= 0 x9b ) ))
cond	14:8	16:75	3	p_block -> i_buffer > 0 && ( ( p_block -> p_buffer [ 0 ] >= 0 x10 && p_block -> p_buffer [ 0 ] <= 0 x1f ) || ( p_block -> p_buffer [ 0 ] >= 0 x99 && p_block -> p_buffer [ 0 ] <= 0 x9b ) )
water	14:8	0:0	4	p_block
op	14:15	0:0	4	->
water	14:17	0:0	4	i_buffer
op	14:26	0:0	4	>
water	14:28	0:0	4	0
op	14:30	0:0	4	&&
water	15:8	0:0	4	(
water	15:10	0:0	4	(
water	15:12	0:0	4	p_block
op	15:19	0:0	4	->
water	15:21	0:0	4	p_buffer
op	15:29	0:0	4	[
water	15:30	0:0	4	0
op	15:31	0:0	4	]
op	15:33	0:0	4	>=
water	15:36	0:0	4	0
water	15:37	0:0	4	x10
op	15:41	0:0	4	&&
water	15:44	0:0	4	p_block
op	15:51	0:0	4	->
water	15:53	0:0	4	p_buffer
op	15:61	0:0	4	[
water	15:62	0:0	4	0
op	15:63	0:0	4	]
op	15:65	0:0	4	<=
water	15:68	0:0	4	0
water	15:69	0:0	4	x1f
water	15:73	0:0	4	)
op	15:75	0:0	4	||
water	16:10	0:0	4	(
water	16:12	0:0	4	p_block
op	16:19	0:0	4	->
water	16:21	0:0	4	p_buffer
op	16:29	0:0	4	[
water	16:30	0:0	4	0
op	16:31	0:0	4	]
op	16:33	0:0	4	>=
water	16:36	0:0	4	0
water	16:37	0:0	4	x99
op	16:41	0:0	4	&&
water	16:44	0:0	4	p_block
op	16:51	0:0	4	->
water	16:53	0:0	4	p_buffer
op	16:61	0:0	4	[
water	16:62	0:0	4	0
op	16:63	0:0	4	]
op	16:65	0:0	4	<=
water	16:68	0:0	4	0
water	16:69	0:0	4	x9b
water	16:73	0:0	4	)
water	16:75	0:0	4	)
stmts	17:4	49:4	3	
water	17:4	0:0	4	{
decl	18:8	18:52	4	vbi_sliced	*p_sliced
op	18:31	0:0	4	=
water	18:33	0:0	4	p_sys
op	18:38	0:0	4	->
water	18:40	0:0	4	p_vbi_sliced
decl	19:8	19:32	4	unsigned int	i_lines
op	19:29	0:0	4	=
water	19:31	0:0	4	0
water	20:8	0:0	4	p_block
op	20:15	0:0	4	->
water	20:17	0:0	4	i_buffer
op	20:25	0:0	4	--
water	20:27	0:0	4	;
water	21:8	0:0	4	p_block
op	21:15	0:0	4	->
water	21:17	0:0	4	p_buffer
op	21:25	0:0	4	++
water	21:27	0:0	4	;
while	22:8	46:8	4	(p_block -> i_buffer >= 2)
cond	22:15	22:36	5	p_block -> i_buffer >= 2
water	22:15	0:0	6	p_block
op	22:22	0:0	6	->
water	22:24	0:0	6	i_buffer
op	22:33	0:0	6	>=
water	22:36	0:0	6	2
stmts	23:8	46:8	5	
water	23:8	0:0	6	{
decl	24:12	24:50	6	int	i_id
op	24:28	0:0	6	=
water	24:30	0:0	6	p_block
op	24:37	0:0	6	->
water	24:39	0:0	6	p_buffer
op	24:47	0:0	6	[
water	24:48	0:0	6	0
op	24:49	0:0	6	]
water	25:12	0:0	6	unsigned
water	25:21	0:0	6	i_size
op	25:28	0:0	6	=
water	25:30	0:0	6	p_block
op	25:37	0:0	6	->
water	25:39	0:0	6	p_buffer
op	25:47	0:0	6	[
water	25:48	0:0	6	1
op	25:49	0:0	6	]
water	25:50	0:0	6	;
if	26:12	27:21	6	(2 + i_size > p_block -> i_buffer)
cond	26:16	26:38	7	2 + i_size > p_block -> i_buffer
water	26:16	0:0	8	2
op	26:18	0:0	8	+
water	26:20	0:0	8	i_size
op	26:27	0:0	8	>
water	26:29	0:0	8	p_block
op	26:36	0:0	8	->
water	26:38	0:0	8	i_buffer
stmts	27:16	27:21	7	
break	27:16	27:21	8	
if	28:12	43:12	6	(( i_id == 0 x02 || i_id == 0 x03 ) && i_size >= 44 && i_lines < MAX_SLICES)
cond	28:16	28:78	7	( i_id == 0 x02 || i_id == 0 x03 ) && i_size >= 44 && i_lines < MAX_SLICES
water	28:16	0:0	8	(
water	28:18	0:0	8	i_id
op	28:23	0:0	8	==
water	28:26	0:0	8	0
water	28:27	0:0	8	x02
op	28:31	0:0	8	||
water	28:34	0:0	8	i_id
op	28:39	0:0	8	==
water	28:42	0:0	8	0
water	28:43	0:0	8	x03
water	28:47	0:0	8	)
op	28:49	0:0	8	&&
water	28:52	0:0	8	i_size
op	28:59	0:0	8	>=
water	28:62	0:0	8	44
op	28:65	0:0	8	&&
water	28:68	0:0	8	i_lines
op	28:76	0:0	8	<
water	28:78	0:0	8	MAX_SLICES
stmts	29:12	43:12	7	
water	29:12	0:0	8	{
if	30:16	42:16	8	(p_block -> p_buffer [ 3 ] == 0 xE4)
cond	30:19	30:44	9	p_block -> p_buffer [ 3 ] == 0 xE4
water	30:19	0:0	10	p_block
op	30:26	0:0	10	->
water	30:28	0:0	10	p_buffer
op	30:36	0:0	10	[
water	30:37	0:0	10	3
op	30:38	0:0	10	]
op	30:40	0:0	10	==
water	30:43	0:0	10	0
water	30:44	0:0	10	xE4
stmts	31:16	42:16	9	
water	31:16	0:0	10	{
water	32:20	0:0	10	unsigned
water	32:29	0:0	10	line_offset
op	32:42	0:0	10	=
water	32:44	0:0	10	p_block
op	32:51	0:0	10	->
water	32:53	0:0	10	p_buffer
op	32:61	0:0	10	[
water	32:62	0:0	10	2
op	32:63	0:0	10	]
op	32:65	0:0	10	&
water	32:67	0:0	10	0
water	32:68	0:0	10	x1f
water	32:71	0:0	10	;
water	33:20	0:0	10	unsigned
water	33:29	0:0	10	field_parity
op	33:42	0:0	10	=
water	33:44	0:0	10	p_block
op	33:51	0:0	10	->
water	33:53	0:0	10	p_buffer
op	33:61	0:0	10	[
water	33:62	0:0	10	2
op	33:63	0:0	10	]
op	33:65	0:0	10	&
water	33:67	0:0	10	0
water	33:68	0:0	10	x20
water	33:71	0:0	10	;
water	34:20	0:0	10	p_sliced
op	34:28	0:0	10	[
water	34:29	0:0	10	i_lines
op	34:36	0:0	10	]
op	34:37	0:0	10	.
water	34:38	0:0	10	id
op	34:41	0:0	10	=
water	34:43	0:0	10	VBI_SLICED_TELETEXT_B
water	34:64	0:0	10	;
if	35:20	36:87	10	(line_offset > 0)
cond	35:24	35:38	11	line_offset > 0
water	35:24	0:0	12	line_offset
op	35:36	0:0	12	>
water	35:38	0:0	12	0
stmts	36:24	36:87	11	
water	36:24	0:0	12	p_sliced
op	36:32	0:0	12	[
water	36:33	0:0	12	i_lines
op	36:40	0:0	12	]
op	36:41	0:0	12	.
water	36:42	0:0	12	line
op	36:47	0:0	12	=
water	36:49	0:0	12	line_offset
op	36:61	0:0	12	+
water	36:63	0:0	12	(
water	36:64	0:0	12	field_parity
water	36:77	0:0	12	?
water	36:79	0:0	12	0
water	36:81	0:0	12	:
water	36:83	0:0	12	313
water	36:86	0:0	12	)
water	36:87	0:0	12	;
else	37:20	38:50	10
stmts	38:24	38:50	11	
water	38:24	0:0	12	p_sliced
op	38:32	0:0	12	[
water	38:33	0:0	12	i_lines
op	38:40	0:0	12	]
op	38:41	0:0	12	.
water	38:42	0:0	12	line
op	38:47	0:0	12	=
water	38:49	0:0	12	0
water	38:50	0:0	12	;
for	39:20	40:88	10	( int i = 0 ;i < 42;i ++)
forinit	0:0	39:34	11	 int i = 0 ;
decl	39:25	39:34	12	int	i
op	39:31	0:0	12	=
water	39:33	0:0	12	0
cond	39:36	39:40	11	i < 42
water	39:36	0:0	12	i
op	39:38	0:0	12	<
water	39:40	0:0	12	42
forexpr	39:44	39:45	11	i ++
water	39:44	0:0	12	i
op	39:45	0:0	12	++
stmts	40:24	40:88	11	
water	40:24	0:0	12	p_sliced
op	40:32	0:0	12	[
water	40:33	0:0	12	i_lines
op	40:40	0:0	12	]
op	40:41	0:0	12	.
water	40:42	0:0	12	data
op	40:46	0:0	12	[
water	40:47	0:0	12	i
op	40:48	0:0	12	]
op	40:50	0:0	12	=
call	40:52	40:87	12	vbi_rev8
arg	40:62	40:87	13	p_block->p_buffer[4+i]
water	40:62	0:0	14	p_block
op	40:69	0:0	14	->
water	40:71	0:0	14	p_buffer
op	40:79	0:0	14	[
water	40:80	0:0	14	4
op	40:82	0:0	14	+
water	40:84	0:0	14	i
op	40:85	0:0	14	]
water	40:88	0:0	12	;
water	41:20	0:0	10	i_lines
op	41:27	0:0	10	++
water	41:29	0:0	10	;
water	42:16	0:0	10	}
water	43:12	0:0	8	}
water	44:12	0:0	6	p_block
op	44:19	0:0	6	->
water	44:21	0:0	6	i_buffer
op	44:30	0:0	6	-=
water	44:33	0:0	6	2
op	44:35	0:0	6	+
water	44:37	0:0	6	i_size
water	44:43	0:0	6	;
water	45:12	0:0	6	p_block
op	45:19	0:0	6	->
water	45:21	0:0	6	p_buffer
op	45:30	0:0	6	+=
water	45:33	0:0	6	2
op	45:35	0:0	6	+
water	45:37	0:0	6	i_size
water	45:43	0:0	6	;
water	46:8	0:0	6	}
if	47:8	48:64	4	(i_lines > 0)
cond	47:12	47:22	5	i_lines > 0
water	47:12	0:0	6	i_lines
op	47:20	0:0	6	>
water	47:22	0:0	6	0
stmts	48:12	48:64	5	
call	48:12	48:63	6	vbi_decode
arg	48:24	48:40	7	p_sys->p_vbi_dec
water	48:24	0:0	8	p_sys
op	48:29	0:0	8	->
water	48:31	0:0	8	p_vbi_dec
arg	48:42	48:50	7	p_sliced
water	48:42	0:0	8	p_sliced
arg	48:52	48:59	7	i_lines
water	48:52	0:0	8	i_lines
arg	48:61	48:63	7	0
water	48:61	0:0	8	0
water	48:64	0:0	6	;
water	49:4	0:0	4	}
call	51:4	51:33	2	vlc_mutex_lock
arg	51:20	51:33	3	&p_sys->lock
op	51:20	0:0	4	&
water	51:21	0:0	4	p_sys
op	51:26	0:0	4	->
water	51:28	0:0	4	lock
water	51:34	0:0	2	;
decl	52:4	52:38	2	const int	i_align
op	52:22	0:0	2	=
water	52:24	0:0	2	p_sys
op	52:29	0:0	2	->
water	52:31	0:0	2	i_align
decl	53:4	53:59	2	const unsigned int	i_wanted_page
op	53:37	0:0	2	=
water	53:39	0:0	2	p_sys
op	53:44	0:0	2	->
water	53:46	0:0	2	i_wanted_page
decl	54:4	54:65	2	const unsigned int	i_wanted_subpage
op	54:40	0:0	2	=
water	54:42	0:0	2	p_sys
op	54:47	0:0	2	->
water	54:49	0:0	2	i_wanted_subpage
decl	55:4	55:41	2	const bool	b_opaque
op	55:24	0:0	2	=
water	55:26	0:0	2	p_sys
op	55:31	0:0	2	->
water	55:33	0:0	2	b_opaque
call	56:4	56:35	2	vlc_mutex_unlock
arg	56:22	56:35	3	&p_sys->lock
op	56:22	0:0	4	&
water	56:23	0:0	4	p_sys
op	56:28	0:0	4	->
water	56:30	0:0	4	lock
water	56:36	0:0	2	;
call	58:4	58:41	2	memset
arg	58:12	58:19	3	&p_page
op	58:12	0:0	4	&
water	58:13	0:0	4	p_page
arg	58:21	58:22	3	0
water	58:21	0:0	4	0
arg	58:24	58:41	3	sizeof(vbi_page)
op	58:24	0:0	4	sizeof
water	58:30	0:0	4	(
water	58:31	0:0	4	vbi_page
water	58:39	0:0	4	)
water	58:42	0:0	2	;
water	59:4	0:0	2	b_cached
op	59:13	0:0	2	=
call	59:15	62:43	2	vbi_fetch_vt_page
arg	59:34	59:50	3	p_sys->p_vbi_dec
water	59:34	0:0	4	p_sys
op	59:39	0:0	4	->
water	59:41	0:0	4	p_vbi_dec
arg	59:52	59:59	3	&p_page
op	59:52	0:0	4	&
water	59:53	0:0	4	p_page
arg	60:34	60:62	3	vbi_dec2bcd(i_wanted_page)
call	60:34	60:61	4	vbi_dec2bcd
arg	60:47	60:61	5	i_wanted_page
water	60:47	0:0	6	i_wanted_page
arg	61:34	61:50	3	i_wanted_subpage
water	61:34	0:0	4	i_wanted_subpage
arg	61:52	61:69	3	VBI_WST_LEVEL_3p5
water	61:52	0:0	4	VBI_WST_LEVEL_3p5
arg	62:34	62:36	3	25
water	62:34	0:0	4	25
arg	62:38	62:43	3	true
water	62:38	0:0	4	true
water	62:44	0:0	2	;
if	63:4	64:18	2	(i_wanted_page == p_sys -> i_last_page && ! p_sys -> b_update)
cond	63:8	63:55	3	i_wanted_page == p_sys -> i_last_page && ! p_sys -> b_update
water	63:8	0:0	4	i_wanted_page
op	63:22	0:0	4	==
water	63:25	0:0	4	p_sys
op	63:30	0:0	4	->
water	63:32	0:0	4	i_last_page
op	63:44	0:0	4	&&
op	63:47	0:0	4	!
water	63:48	0:0	4	p_sys
op	63:53	0:0	4	->
water	63:55	0:0	4	b_update
stmts	64:8	64:18	3	
goto	64:8	64:18	4	error
water	64:13	0:0	5	error
if	65:4	82:4	2	(! b_cached)
cond	65:8	65:9	3	! b_cached
op	65:8	0:0	4	!
water	65:9	0:0	4	b_cached
stmts	66:4	82:4	3	
water	66:4	0:0	4	{
if	67:8	80:8	4	(p_sys -> b_text && p_sys -> i_last_page != i_wanted_page)
cond	67:12	67:51	5	p_sys -> b_text && p_sys -> i_last_page != i_wanted_page
water	67:12	0:0	6	p_sys
op	67:17	0:0	6	->
water	67:19	0:0	6	b_text
op	67:26	0:0	6	&&
water	67:29	0:0	6	p_sys
op	67:34	0:0	6	->
water	67:36	0:0	6	i_last_page
op	67:48	0:0	6	!=
water	67:51	0:0	6	i_wanted_page
stmts	68:8	80:8	5	
water	68:8	0:0	6	{
water	70:12	0:0	6	p_spu
op	70:18	0:0	6	=
call	70:20	72:56	6	Subpicture
arg	70:32	70:37	7	p_dec
water	70:32	0:0	8	p_dec
arg	70:39	70:43	7	&fmt
op	70:39	0:0	8	&
water	70:40	0:0	8	fmt
arg	70:45	70:49	7	true
water	70:45	0:0	8	true
arg	71:32	71:46	7	p_page.columns
water	71:32	0:0	8	p_page
op	71:38	0:0	8	.
water	71:39	0:0	8	columns
arg	71:48	71:59	7	p_page.rows
water	71:48	0:0	8	p_page
op	71:54	0:0	8	.
water	71:55	0:0	8	rows
arg	72:32	72:39	7	i_align
water	72:32	0:0	8	i_align
arg	72:41	72:56	7	p_block->i_pts
water	72:41	0:0	8	p_block
op	72:48	0:0	8	->
water	72:50	0:0	8	i_pts
water	72:57	0:0	6	;
if	73:12	74:26	6	(! p_spu)
cond	73:16	73:17	7	! p_spu
op	73:16	0:0	8	!
water	73:17	0:0	8	p_spu
stmts	74:16	74:26	7	
goto	74:16	74:26	8	error
water	74:21	0:0	9	error
decl	75:12	75:70	6	subpicture_updater_sys_t	*p_spu_sys
op	75:48	0:0	6	=
water	75:50	0:0	6	p_spu
op	75:55	0:0	6	->
water	75:57	0:0	6	updater
op	75:64	0:0	6	.
water	75:65	0:0	6	p_sys
water	76:12	0:0	6	p_spu_sys
op	76:21	0:0	6	->
water	76:23	0:0	6	text
op	76:28	0:0	6	=
call	76:30	76:39	6	strdup
arg	76:37	76:39	7	""
water	76:37	0:0	8	""
water	76:40	0:0	6	;
water	77:12	0:0	6	p_sys
op	77:17	0:0	6	->
water	77:19	0:0	6	b_update
op	77:28	0:0	6	=
water	77:30	0:0	6	true
water	77:34	0:0	6	;
water	78:12	0:0	6	p_sys
op	78:17	0:0	6	->
water	78:19	0:0	6	i_last_page
op	78:31	0:0	6	=
water	78:33	0:0	6	i_wanted_page
water	78:46	0:0	6	;
goto	79:12	79:21	6	exit
water	79:17	0:0	7	exit
water	80:8	0:0	6	}
goto	81:8	81:18	4	error
water	81:13	0:0	5	error
water	82:4	0:0	4	}
water	83:4	0:0	2	p_sys
op	83:9	0:0	2	->
water	83:11	0:0	2	b_update
op	83:20	0:0	2	=
water	83:22	0:0	2	false
water	83:27	0:0	2	;
water	84:4	0:0	2	p_sys
op	84:9	0:0	2	->
water	84:11	0:0	2	i_last_page
op	84:23	0:0	2	=
water	84:25	0:0	2	i_wanted_page
water	84:38	0:0	2	;
call	86:4	87:27	2	msg_Dbg
arg	86:13	86:18	3	p_dec
water	86:13	0:0	4	p_dec
arg	86:20	86:60	3	"we now have page: %d ready for display"
water	86:20	0:0	4	"we now have page: %d ready for display"
arg	87:13	87:27	3	i_wanted_page
water	87:13	0:0	4	i_wanted_page
water	87:28	0:0	2	;
decl	90:4	90:87	2	int	i_first_row
op	90:20	0:0	2	=
call	90:22	90:86	3	get_first_visible_row
arg	90:45	90:56	4	p_page.text
water	90:45	0:0	5	p_page
op	90:51	0:0	5	.
water	90:52	0:0	5	text
arg	90:58	90:69	4	p_page.rows
water	90:58	0:0	5	p_page
op	90:64	0:0	5	.
water	90:65	0:0	5	rows
arg	90:71	90:86	4	p_page.columns
water	90:71	0:0	5	p_page
op	90:77	0:0	5	.
water	90:78	0:0	5	columns
decl	91:4	91:18	2	int	i_num_rows
if	92:4	95:4	2	(i_first_row < 0)
cond	92:9	92:23	3	i_first_row < 0
water	92:9	0:0	4	i_first_row
op	92:21	0:0	4	<
water	92:23	0:0	4	0
stmts	92:27	95:4	3	
water	92:27	0:0	4	{
water	93:8	0:0	4	i_first_row
op	93:20	0:0	4	=
water	93:22	0:0	4	p_page
op	93:28	0:0	4	.
water	93:29	0:0	4	rows
op	93:34	0:0	4	-
water	93:36	0:0	4	1
water	93:37	0:0	4	;
water	94:8	0:0	4	i_num_rows
op	94:19	0:0	4	=
water	94:21	0:0	4	0
water	94:22	0:0	4	;
water	95:4	0:0	4	}
else	95:6	97:4	2
stmts	95:11	97:4	3	
water	95:11	0:0	4	{
water	96:8	0:0	4	i_num_rows
op	96:19	0:0	4	=
call	96:21	96:84	4	get_last_visible_row
arg	96:43	96:54	5	p_page.text
water	96:43	0:0	6	p_page
op	96:49	0:0	6	.
water	96:50	0:0	6	text
arg	96:56	96:67	5	p_page.rows
water	96:56	0:0	6	p_page
op	96:62	0:0	6	.
water	96:63	0:0	6	rows
arg	96:69	96:84	5	p_page.columns
water	96:69	0:0	6	p_page
op	96:75	0:0	6	.
water	96:76	0:0	6	columns
op	96:86	0:0	4	-
water	96:88	0:0	4	i_first_row
op	96:100	0:0	4	+
water	96:102	0:0	4	1
water	96:103	0:0	4	;
water	97:4	0:0	4	}
call	99:4	100:68	2	msg_Dbg
arg	99:13	99:18	3	p_dec
water	99:13	0:0	4	p_dec
arg	99:20	99:73	3	"After top and tail of page we have rows %i-%i of %i"
water	99:20	0:0	4	"After top and tail of page we have rows %i-%i of %i"
arg	100:13	100:28	3	i_first_row+1
water	100:13	0:0	4	i_first_row
op	100:25	0:0	4	+
water	100:27	0:0	4	1
arg	100:30	100:54	3	i_first_row+i_num_rows
water	100:30	0:0	4	i_first_row
op	100:42	0:0	4	+
water	100:44	0:0	4	i_num_rows
arg	100:56	100:68	3	p_page.rows
water	100:56	0:0	4	p_page
op	100:62	0:0	4	.
water	100:63	0:0	4	rows
water	100:69	0:0	2	;
water	104:4	0:0	2	p_spu
op	104:10	0:0	2	=
call	104:12	106:48	2	Subpicture
arg	104:24	104:29	3	p_dec
water	104:24	0:0	4	p_dec
arg	104:31	104:35	3	&fmt
op	104:31	0:0	4	&
water	104:32	0:0	4	fmt
arg	104:37	104:50	3	p_sys->b_text
water	104:37	0:0	4	p_sys
op	104:42	0:0	4	->
water	104:44	0:0	4	b_text
arg	105:24	105:38	3	p_page.columns
water	105:24	0:0	4	p_page
op	105:30	0:0	4	.
water	105:31	0:0	4	columns
arg	105:40	105:50	3	i_num_rows
water	105:40	0:0	4	i_num_rows
arg	106:24	106:31	3	i_align
water	106:24	0:0	4	i_align
arg	106:33	106:48	3	p_block->i_pts
water	106:33	0:0	4	p_block
op	106:40	0:0	4	->
water	106:42	0:0	4	i_pts
water	106:49	0:0	2	;
if	107:4	108:18	2	(! p_spu)
cond	107:8	107:9	3	! p_spu
op	107:8	0:0	4	!
water	107:9	0:0	4	p_spu
stmts	108:8	108:18	3	
goto	108:8	108:18	4	error
water	108:13	0:0	5	error
if	109:4	130:4	2	(p_sys -> b_text)
cond	109:8	109:15	3	p_sys -> b_text
water	109:8	0:0	4	p_sys
op	109:13	0:0	4	->
water	109:15	0:0	4	b_text
stmts	110:4	130:4	3	
water	110:4	0:0	4	{
decl	111:8	111:38	4	unsigned int	i_textsize
op	111:32	0:0	4	=
water	111:34	0:0	4	7000
decl	112:8	112:26	4	int	i_total
water	112:19	0:0	4	,
decl	112:8	112:26	4	int	offset
decl	113:8	113:33	4	char	p_text[i_textsize+1]
water	114:8	0:0	4	i_total
op	114:16	0:0	4	=
call	114:18	115:82	4	vbi_print_page_region
arg	114:41	114:48	5	&p_page
op	114:41	0:0	6	&
water	114:42	0:0	6	p_page
arg	114:50	114:56	5	p_text
water	114:50	0:0	6	p_text
arg	114:58	114:68	5	i_textsize
water	114:58	0:0	6	i_textsize
arg	115:24	115:31	5	"UTF-8"
water	115:24	0:0	6	"UTF-8"
arg	115:33	115:34	5	0
water	115:33	0:0	6	0
arg	115:36	115:37	5	0
water	115:36	0:0	6	0
arg	115:39	115:40	5	0
water	115:39	0:0	6	0
arg	115:42	115:53	5	i_first_row
water	115:42	0:0	6	i_first_row
arg	115:55	115:69	5	p_page.columns
water	115:55	0:0	6	p_page
op	115:61	0:0	6	.
water	115:62	0:0	6	columns
arg	115:71	115:82	5	i_num_rows
water	115:71	0:0	6	i_num_rows
water	115:83	0:0	4	;
for	116:8	117:40	4	(offset = 1 ;offset < i_total &&isspace (p_text [ i_total - offset ] );offset ++)
forinit	116:13	116:21	5	offset = 1 ;
water	116:13	0:0	6	offset
op	116:19	0:0	6	=
water	116:20	0:0	6	1
water	116:21	0:0	6	;
cond	116:23	116:74	5	offset < i_total &&isspace (p_text [ i_total - offset ] )
water	116:23	0:0	6	offset
op	116:29	0:0	6	<
water	116:30	0:0	6	i_total
op	116:38	0:0	6	&&
call	116:41	116:74	6	isspace
arg	116:50	116:74	7	p_text[i_total-offset]
water	116:50	0:0	8	p_text
op	116:56	0:0	8	[
water	116:57	0:0	8	i_total
op	116:64	0:0	8	-
water	116:65	0:0	8	offset
op	116:72	0:0	8	]
forexpr	116:77	116:83	5	offset ++
water	116:77	0:0	6	offset
op	116:83	0:0	6	++
stmts	117:11	117:40	5	
water	117:11	0:0	6	p_text
op	117:17	0:0	6	[
water	117:18	0:0	6	i_total
op	117:25	0:0	6	-
water	117:26	0:0	6	offset
op	117:32	0:0	6	]
op	117:34	0:0	6	=
water	117:36	0:0	6	'\0'
water	117:40	0:0	6	;
water	118:8	0:0	4	i_total
op	118:16	0:0	4	-=
water	118:19	0:0	4	offset
water	118:25	0:0	4	;
water	119:8	0:0	4	offset
op	119:14	0:0	4	=
water	119:15	0:0	4	0
water	119:16	0:0	4	;
while	120:8	121:19	4	(offset < i_total &&isspace (p_text [ offset ] ))
cond	120:15	120:59	5	offset < i_total &&isspace (p_text [ offset ] )
water	120:15	0:0	6	offset
op	120:22	0:0	6	<
water	120:24	0:0	6	i_total
op	120:32	0:0	6	&&
call	120:35	120:59	6	isspace
arg	120:44	120:59	7	p_text[offset]
water	120:44	0:0	8	p_text
op	120:50	0:0	8	[
water	120:51	0:0	8	offset
op	120:57	0:0	8	]
stmts	121:11	121:19	5	
water	121:11	0:0	6	offset
op	121:17	0:0	6	++
water	121:19	0:0	6	;
decl	122:8	122:66	4	subpicture_updater_sys_t	*p_spu_sys
op	122:44	0:0	4	=
water	122:46	0:0	4	p_spu
op	122:51	0:0	4	->
water	122:53	0:0	4	updater
op	122:60	0:0	4	.
water	122:61	0:0	4	p_sys
water	123:8	0:0	4	p_spu_sys
op	123:17	0:0	4	->
water	123:19	0:0	4	text
op	123:24	0:0	4	=
call	123:26	123:50	4	strdup
arg	123:34	123:50	5	&p_text[offset]
op	123:34	0:0	6	&
water	123:35	0:0	6	p_text
op	123:41	0:0	6	[
water	123:42	0:0	6	offset
op	123:48	0:0	6	]
water	123:51	0:0	4	;
water	124:8	0:0	4	p_spu_sys
op	124:17	0:0	4	->
water	124:19	0:0	4	align
op	124:25	0:0	4	=
water	124:27	0:0	4	i_align
water	124:34	0:0	4	;
water	125:8	0:0	4	p_spu_sys
op	125:17	0:0	4	->
water	125:19	0:0	4	i_font_height_percent
op	125:41	0:0	4	=
water	125:43	0:0	4	5
water	125:44	0:0	4	;
water	126:8	0:0	4	p_spu_sys
op	126:17	0:0	4	->
water	126:19	0:0	4	renderbg
op	126:28	0:0	4	=
water	126:30	0:0	4	b_opaque
water	126:38	0:0	4	;
call	128:8	128:103	4	msg_Info
arg	128:18	128:23	5	p_dec
water	128:18	0:0	6	p_dec
arg	128:25	128:49	5	"page %x-%x(%d)\n\"%s\""
water	128:25	0:0	6	"page %x-%x(%d)\n\"%s\""
arg	128:51	128:62	5	p_page.pgno
water	128:51	0:0	6	p_page
op	128:57	0:0	6	.
water	128:58	0:0	6	pgno
arg	128:64	128:76	5	p_page.subno
water	128:64	0:0	6	p_page
op	128:70	0:0	6	.
water	128:71	0:0	6	subno
arg	128:78	128:85	5	i_total
water	128:78	0:0	6	i_total
arg	128:87	128:103	5	&p_text[offset]
op	128:87	0:0	6	&
water	128:88	0:0	6	p_text
op	128:94	0:0	6	[
water	128:95	0:0	6	offset
op	128:101	0:0	6	]
water	128:104	0:0	4	;
water	130:4	0:0	4	}
else	131:4	148:4	2
stmts	132:4	148:4	3	
water	132:4	0:0	4	{
decl	133:8	133:53	4	picture_t	*p_pic
op	133:25	0:0	4	=
water	133:27	0:0	4	p_spu
op	133:32	0:0	4	->
water	133:34	0:0	4	p_region
op	133:42	0:0	4	->
water	133:44	0:0	4	p_picture
water	135:8	0:0	4	p_pic
op	135:13	0:0	4	->
water	135:15	0:0	4	p
op	135:16	0:0	4	->
water	135:18	0:0	4	i_pitch
op	135:26	0:0	4	=
water	135:28	0:0	4	4
op	135:30	0:0	4	*
water	135:32	0:0	4	fmt
op	135:35	0:0	4	.
water	135:36	0:0	4	i_width
water	135:43	0:0	4	;
water	137:8	0:0	4	p_spu
op	137:13	0:0	4	->
water	137:15	0:0	4	p_region
op	137:23	0:0	4	->
water	137:25	0:0	4	i_y
op	137:29	0:0	4	=
water	137:31	0:0	4	i_first_row
op	137:42	0:0	4	*
water	137:43	0:0	4	10
water	137:45	0:0	4	;
water	138:8	0:0	4	p_spu
op	138:13	0:0	4	->
water	138:15	0:0	4	i_original_picture_width
op	138:40	0:0	4	=
water	138:42	0:0	4	p_page
op	138:48	0:0	4	.
water	138:49	0:0	4	columns
op	138:56	0:0	4	*
water	138:57	0:0	4	12
water	138:59	0:0	4	;
water	139:8	0:0	4	p_spu
op	139:13	0:0	4	->
water	139:15	0:0	4	i_original_picture_height
op	139:41	0:0	4	=
water	139:43	0:0	4	p_page
op	139:49	0:0	4	.
water	139:50	0:0	4	rows
op	139:54	0:0	4	*
water	139:55	0:0	4	10
water	139:57	0:0	4	;
call	140:8	143:30	4	vbi_draw_vt_page_region
arg	140:33	140:40	5	&p_page
op	140:33	0:0	6	&
water	140:34	0:0	6	p_page
arg	140:42	140:60	5	ZVBI_PIXFMT_RGBA32
water	140:42	0:0	6	ZVBI_PIXFMT_RGBA32
arg	141:26	141:65	5	p_spu->p_region->p_picture->p->p_pixels
water	141:26	0:0	6	p_spu
op	141:31	0:0	6	->
water	141:33	0:0	6	p_region
op	141:41	0:0	6	->
water	141:43	0:0	6	p_picture
op	141:52	0:0	6	->
water	141:54	0:0	6	p
op	141:55	0:0	6	->
water	141:57	0:0	6	p_pixels
arg	141:67	141:69	5	-1
op	141:67	0:0	6	-
water	141:68	0:0	6	1
arg	142:26	142:27	5	0
water	142:26	0:0	6	0
arg	142:29	142:40	5	i_first_row
water	142:29	0:0	6	i_first_row
arg	142:42	142:56	5	p_page.columns
water	142:42	0:0	6	p_page
op	142:48	0:0	6	.
water	142:49	0:0	6	columns
arg	142:58	142:68	5	i_num_rows
water	142:58	0:0	6	i_num_rows
arg	143:26	143:27	5	1
water	143:26	0:0	6	1
arg	143:29	143:30	5	1
water	143:29	0:0	6	1
water	143:31	0:0	4	;
call	144:8	144:37	4	vlc_mutex_lock
arg	144:24	144:37	5	&p_sys->lock
op	144:24	0:0	6	&
water	144:25	0:0	6	p_sys
op	144:30	0:0	6	->
water	144:32	0:0	6	lock
water	144:38	0:0	4	;
call	145:8	145:76	4	memcpy
arg	145:16	145:31	5	p_sys->nav_link
water	145:16	0:0	6	p_sys
op	145:21	0:0	6	->
water	145:23	0:0	6	nav_link
arg	145:33	145:49	5	&p_page.nav_link
op	145:33	0:0	6	&
water	145:34	0:0	6	p_page
op	145:40	0:0	6	.
water	145:41	0:0	6	nav_link
arg	145:51	145:76	5	sizeof(p_sys->nav_link)
op	145:51	0:0	6	sizeof
water	145:57	0:0	6	(
water	145:59	0:0	6	p_sys
op	145:64	0:0	6	->
water	145:66	0:0	6	nav_link
water	145:75	0:0	6	)
water	145:78	0:0	4	;
call	146:8	146:39	4	vlc_mutex_unlock
arg	146:26	146:39	5	&p_sys->lock
op	146:26	0:0	6	&
water	146:27	0:0	6	p_sys
op	146:32	0:0	6	->
water	146:34	0:0	6	lock
water	146:40	0:0	4	;
call	147:8	147:80	4	OpaquePage
arg	147:20	147:25	5	p_pic
water	147:20	0:0	6	p_pic
arg	147:27	147:34	5	&p_page
op	147:27	0:0	6	&
water	147:28	0:0	6	p_page
arg	147:36	147:39	5	fmt
water	147:36	0:0	6	fmt
arg	147:41	147:49	5	b_opaque
water	147:41	0:0	6	b_opaque
arg	147:51	147:80	5	i_first_row*p_page.columns
water	147:51	0:0	6	i_first_row
op	147:63	0:0	6	*
water	147:65	0:0	6	p_page
op	147:71	0:0	6	.
water	147:72	0:0	6	columns
water	147:81	0:0	4	;
water	148:4	0:0	4	}
label	149:0	149:4	2	exit :
call	150:4	150:28	2	vbi_unref_page
arg	150:20	150:28	3	&p_page
op	150:20	0:0	4	&
water	150:21	0:0	4	p_page
water	150:29	0:0	2	;
call	151:4	151:27	2	block_Release
arg	151:19	151:27	3	p_block
water	151:19	0:0	4	p_block
water	151:28	0:0	2	;
return	152:4	152:16	2	p_spu
water	152:11	0:0	3	p_spu
label	153:0	153:5	2	error :
call	154:4	154:28	2	vbi_unref_page
arg	154:20	154:28	3	&p_page
op	154:20	0:0	4	&
water	154:21	0:0	4	p_page
water	154:29	0:0	2	;
if	155:4	159:4	2	(p_spu != NULL)
cond	155:8	155:17	3	p_spu != NULL
water	155:8	0:0	4	p_spu
op	155:14	0:0	4	!=
water	155:17	0:0	4	NULL
stmts	156:4	159:4	3	
water	156:4	0:0	4	{
call	157:8	157:47	4	decoder_DeleteSubpicture
arg	157:34	157:39	5	p_dec
water	157:34	0:0	6	p_dec
arg	157:41	157:47	5	p_spu
water	157:41	0:0	6	p_spu
water	157:48	0:0	4	;
water	158:8	0:0	4	p_spu
op	158:14	0:0	4	=
water	158:16	0:0	4	NULL
water	158:20	0:0	4	;
water	159:4	0:0	4	}
call	160:4	160:27	2	block_Release
arg	160:19	160:27	3	p_block
water	160:19	0:0	4	p_block
water	160:28	0:0	2	;
return	161:4	161:15	2	NULL
water	161:11	0:0	3	NULL

func	2:0	130:0	0	static int	OpenDisplay
params	2:22	0:0	1	
param	2:23	2:41	2	vout_display_t *	vd
param	2:43	2:64	2	bool	force_resolution
stmnts	0:0	129:22	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
decl	5:4	5:20	2	char	*psz_device
if	7:4	10:4	2	(! ( psz_device =var_InheritString (vd ,FB_DEV_VAR ) ))
cond	7:8	7:56	3	! ( psz_device =var_InheritString (vd ,FB_DEV_VAR ) )
op	7:8	0:0	4	!
water	7:9	0:0	4	(
water	7:10	0:0	4	psz_device
op	7:21	0:0	4	=
call	7:23	7:55	4	var_InheritString
arg	7:41	7:43	5	vd
water	7:41	0:0	6	vd
arg	7:45	7:55	5	FB_DEV_VAR
water	7:45	0:0	6	FB_DEV_VAR
water	7:56	0:0	4	)
stmts	7:59	10:4	3	
water	7:59	0:0	4	{
call	8:8	8:56	4	msg_Err
arg	8:16	8:18	5	vd
water	8:16	0:0	6	vd
arg	8:20	8:56	5	"don't know which fb device to open"
water	8:20	0:0	6	"don't know which fb device to open"
water	8:57	0:0	4	;
return	9:8	9:27	4	VLC_EGENERIC
water	9:15	0:0	5	VLC_EGENERIC
water	10:4	0:0	4	}
water	11:4	0:0	2	sys
op	11:7	0:0	2	->
water	11:9	0:0	2	fd
op	11:12	0:0	2	=
call	11:14	11:41	2	vlc_open
arg	11:23	11:33	3	psz_device
water	11:23	0:0	4	psz_device
arg	11:35	11:41	3	O_RDWR
water	11:35	0:0	4	O_RDWR
water	11:42	0:0	2	;
if	12:4	16:4	2	(sys -> fd == - 1)
cond	12:8	12:20	3	sys -> fd == - 1
water	12:8	0:0	4	sys
op	12:11	0:0	4	->
water	12:13	0:0	4	fd
op	12:16	0:0	4	==
op	12:19	0:0	4	-
water	12:20	0:0	4	1
stmts	12:23	16:4	3	
water	12:23	0:0	4	{
call	13:8	13:76	4	msg_Err
arg	13:16	13:18	5	vd
water	13:16	0:0	6	vd
arg	13:20	13:41	5	"cannot open %s (%s)"
water	13:20	0:0	6	"cannot open %s (%s)"
arg	13:43	13:53	5	psz_device
water	13:43	0:0	6	psz_device
arg	13:55	13:76	5	vlc_strerror_c(errno)
call	13:55	13:75	6	vlc_strerror_c
arg	13:70	13:75	7	errno
water	13:70	0:0	8	errno
water	13:77	0:0	4	;
call	14:8	14:23	4	free
arg	14:13	14:23	5	psz_device
water	14:13	0:0	6	psz_device
water	14:24	0:0	4	;
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	4	}
call	17:4	17:19	2	free
arg	17:9	17:19	3	psz_device
water	17:9	0:0	4	psz_device
water	17:20	0:0	2	;
if	19:4	23:4	2	(ioctl (sys -> fd ,FBIOGET_VSCREENINFO ,& sys -> var_info ))
cond	19:8	19:58	3	ioctl (sys -> fd ,FBIOGET_VSCREENINFO ,& sys -> var_info )
call	19:8	19:58	4	ioctl
arg	19:14	19:21	5	sys->fd
water	19:14	0:0	6	sys
op	19:17	0:0	6	->
water	19:19	0:0	6	fd
arg	19:23	19:42	5	FBIOGET_VSCREENINFO
water	19:23	0:0	6	FBIOGET_VSCREENINFO
arg	19:44	19:58	5	&sys->var_info
op	19:44	0:0	6	&
water	19:45	0:0	6	sys
op	19:48	0:0	6	->
water	19:50	0:0	6	var_info
stmts	19:61	23:4	3	
water	19:61	0:0	4	{
call	20:8	20:68	4	msg_Err
arg	20:16	20:18	5	vd
water	20:16	0:0	6	vd
arg	20:20	20:45	5	"cannot get fb info (%s)"
water	20:20	0:0	6	"cannot get fb info (%s)"
arg	20:47	20:68	5	vlc_strerror_c(errno)
call	20:47	20:67	6	vlc_strerror_c
arg	20:62	20:67	7	errno
water	20:62	0:0	8	errno
water	20:69	0:0	4	;
call	21:8	21:21	4	close
arg	21:14	21:21	5	sys->fd
water	21:14	0:0	6	sys
op	21:17	0:0	6	->
water	21:19	0:0	6	fd
water	21:22	0:0	4	;
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
water	23:4	0:0	4	}
water	24:4	0:0	2	sys
op	24:7	0:0	2	->
water	24:9	0:0	2	old_info
op	24:18	0:0	2	=
water	24:20	0:0	2	sys
op	24:23	0:0	2	->
water	24:25	0:0	2	var_info
water	24:33	0:0	2	;
if	26:4	29:4	2	(force_resolution)
cond	26:8	26:8	3	force_resolution
water	26:8	0:0	4	force_resolution
stmts	26:26	29:4	3	
water	26:26	0:0	4	{
water	27:8	0:0	4	sys
op	27:11	0:0	4	->
water	27:13	0:0	4	var_info
op	27:21	0:0	4	.
water	27:22	0:0	4	xres
op	27:27	0:0	4	=
water	27:29	0:0	4	sys
op	27:32	0:0	4	->
water	27:34	0:0	4	var_info
op	27:42	0:0	4	.
water	27:43	0:0	4	xres_virtual
op	27:56	0:0	4	=
water	27:58	0:0	4	sys
op	27:61	0:0	4	->
water	27:63	0:0	4	width
water	27:68	0:0	4	;
water	28:8	0:0	4	sys
op	28:11	0:0	4	->
water	28:13	0:0	4	var_info
op	28:21	0:0	4	.
water	28:22	0:0	4	yres
op	28:27	0:0	4	=
water	28:29	0:0	4	sys
op	28:32	0:0	4	->
water	28:34	0:0	4	var_info
op	28:42	0:0	4	.
water	28:43	0:0	4	yres_virtual
op	28:56	0:0	4	=
water	28:58	0:0	4	sys
op	28:61	0:0	4	->
water	28:63	0:0	4	height
water	28:69	0:0	4	;
water	29:4	0:0	4	}
water	31:4	0:0	2	sys
op	31:7	0:0	2	->
water	31:9	0:0	2	var_info
op	31:17	0:0	2	.
water	31:18	0:0	2	activate
op	31:27	0:0	2	=
water	31:29	0:0	2	sys
op	31:32	0:0	2	->
water	31:34	0:0	2	is_tty
water	31:41	0:0	2	?
water	31:43	0:0	2	FB_ACTIVATE_NXTOPEN
water	31:63	0:0	2	:
water	32:43	0:0	2	FB_ACTIVATE_NOW
water	32:58	0:0	2	;
water	33:4	0:0	2	sys
op	33:7	0:0	2	->
water	33:9	0:0	2	var_info
op	33:17	0:0	2	.
water	33:18	0:0	2	xoffset
op	33:27	0:0	2	=
water	33:30	0:0	2	0
water	33:31	0:0	2	;
water	34:4	0:0	2	sys
op	34:7	0:0	2	->
water	34:9	0:0	2	var_info
op	34:17	0:0	2	.
water	34:18	0:0	2	yoffset
op	34:27	0:0	2	=
water	34:30	0:0	2	0
water	34:31	0:0	2	;
if	35:4	39:4	2	(ioctl (sys -> fd ,FBIOPUT_VSCREENINFO ,& sys -> var_info ))
cond	35:8	35:58	3	ioctl (sys -> fd ,FBIOPUT_VSCREENINFO ,& sys -> var_info )
call	35:8	35:58	4	ioctl
arg	35:14	35:21	5	sys->fd
water	35:14	0:0	6	sys
op	35:17	0:0	6	->
water	35:19	0:0	6	fd
arg	35:23	35:42	5	FBIOPUT_VSCREENINFO
water	35:23	0:0	6	FBIOPUT_VSCREENINFO
arg	35:44	35:58	5	&sys->var_info
op	35:44	0:0	6	&
water	35:45	0:0	6	sys
op	35:48	0:0	6	->
water	35:50	0:0	6	var_info
stmts	35:61	39:4	3	
water	35:61	0:0	4	{
call	36:8	36:68	4	msg_Err
arg	36:16	36:18	5	vd
water	36:16	0:0	6	vd
arg	36:20	36:45	5	"cannot set fb info (%s)"
water	36:20	0:0	6	"cannot set fb info (%s)"
arg	36:47	36:68	5	vlc_strerror_c(errno)
call	36:47	36:67	6	vlc_strerror_c
arg	36:62	36:67	7	errno
water	36:62	0:0	8	errno
water	36:69	0:0	4	;
call	37:8	37:21	4	close
arg	37:14	37:21	5	sys->fd
water	37:14	0:0	6	sys
op	37:17	0:0	6	->
water	37:19	0:0	6	fd
water	37:22	0:0	4	;
return	38:8	38:27	4	VLC_EGENERIC
water	38:15	0:0	5	VLC_EGENERIC
water	39:4	0:0	4	}
decl	40:4	40:37	2	struct fb_fix_screeninfo	fix_info
if	42:4	50:4	2	(ioctl (sys -> fd ,FBIOGET_FSCREENINFO ,& fix_info ) ||ioctl (sys -> fd ,FBIOGET_VSCREENINFO ,& sys -> var_info ))
cond	42:8	43:58	3	ioctl (sys -> fd ,FBIOGET_FSCREENINFO ,& fix_info ) ||ioctl (sys -> fd ,FBIOGET_VSCREENINFO ,& sys -> var_info )
call	42:8	42:53	4	ioctl
arg	42:14	42:21	5	sys->fd
water	42:14	0:0	6	sys
op	42:17	0:0	6	->
water	42:19	0:0	6	fd
arg	42:23	42:42	5	FBIOGET_FSCREENINFO
water	42:23	0:0	6	FBIOGET_FSCREENINFO
arg	42:44	42:53	5	&fix_info
op	42:44	0:0	6	&
water	42:45	0:0	6	fix_info
op	42:55	0:0	4	||
call	43:8	43:58	4	ioctl
arg	43:14	43:21	5	sys->fd
water	43:14	0:0	6	sys
op	43:17	0:0	6	->
water	43:19	0:0	6	fd
arg	43:23	43:42	5	FBIOGET_VSCREENINFO
water	43:23	0:0	6	FBIOGET_VSCREENINFO
arg	43:44	43:58	5	&sys->var_info
op	43:44	0:0	6	&
water	43:45	0:0	6	sys
op	43:48	0:0	6	->
water	43:50	0:0	6	var_info
stmts	43:61	50:4	3	
water	43:61	0:0	4	{
call	44:8	45:37	4	msg_Err
arg	44:16	44:18	5	vd
water	44:16	0:0	6	vd
arg	44:20	44:56	5	"cannot get additional fb info (%s)"
water	44:20	0:0	6	"cannot get additional fb info (%s)"
arg	45:16	45:37	5	vlc_strerror_c(errno)
call	45:16	45:36	6	vlc_strerror_c
arg	45:31	45:36	7	errno
water	45:31	0:0	8	errno
water	45:38	0:0	4	;
call	47:8	47:58	4	ioctl
arg	47:14	47:21	5	sys->fd
water	47:14	0:0	6	sys
op	47:17	0:0	6	->
water	47:19	0:0	6	fd
arg	47:23	47:42	5	FBIOPUT_VSCREENINFO
water	47:23	0:0	6	FBIOPUT_VSCREENINFO
arg	47:44	47:58	5	&sys->old_info
op	47:44	0:0	6	&
water	47:45	0:0	6	sys
op	47:48	0:0	6	->
water	47:50	0:0	6	old_info
water	47:59	0:0	4	;
call	48:8	48:21	4	close
arg	48:14	48:21	5	sys->fd
water	48:14	0:0	6	sys
op	48:17	0:0	6	->
water	48:19	0:0	6	fd
water	48:22	0:0	4	;
return	49:8	49:27	4	VLC_EGENERIC
water	49:15	0:0	5	VLC_EGENERIC
water	50:4	0:0	4	}
if	53:4	58:4	2	(( sys -> height != sys -> var_info . yres ) || ( sys -> width != sys -> var_info . xres ))
cond	53:8	54:41	3	( sys -> height != sys -> var_info . yres ) || ( sys -> width != sys -> var_info . xres )
water	53:8	0:0	4	(
water	53:9	0:0	4	sys
op	53:12	0:0	4	->
water	53:14	0:0	4	height
op	53:21	0:0	4	!=
water	53:24	0:0	4	sys
op	53:27	0:0	4	->
water	53:29	0:0	4	var_info
op	53:37	0:0	4	.
water	53:38	0:0	4	yres
water	53:42	0:0	4	)
op	53:44	0:0	4	||
water	54:8	0:0	4	(
water	54:9	0:0	4	sys
op	54:12	0:0	4	->
water	54:14	0:0	4	width
op	54:20	0:0	4	!=
water	54:23	0:0	4	sys
op	54:26	0:0	4	->
water	54:28	0:0	4	var_info
op	54:36	0:0	4	.
water	54:37	0:0	4	xres
water	54:41	0:0	4	)
stmts	54:44	58:4	3	
water	54:44	0:0	4	{
call	55:8	57:40	4	msg_Warn
arg	55:17	55:19	5	vd
water	55:17	0:0	6	vd
arg	56:17	56:83	5	"using framebuffer native resolution instead of requested (%ix%i)"
water	56:17	0:0	6	"using framebuffer native resolution instead of requested (%ix%i)"
arg	57:17	57:27	5	sys->width
water	57:17	0:0	6	sys
op	57:20	0:0	6	->
water	57:22	0:0	6	width
arg	57:29	57:40	5	sys->height
water	57:29	0:0	6	sys
op	57:32	0:0	6	->
water	57:34	0:0	6	height
water	57:41	0:0	4	;
water	58:4	0:0	4	}
water	59:4	0:0	2	sys
op	59:7	0:0	2	->
water	59:9	0:0	2	height
op	59:16	0:0	2	=
water	59:18	0:0	2	sys
op	59:21	0:0	2	->
water	59:23	0:0	2	var_info
op	59:31	0:0	2	.
water	59:32	0:0	2	yres
water	59:36	0:0	2	;
water	60:4	0:0	2	sys
op	60:7	0:0	2	->
water	60:9	0:0	2	width
op	60:16	0:0	2	=
water	60:18	0:0	2	sys
op	60:21	0:0	2	->
water	60:23	0:0	2	var_info
op	60:31	0:0	2	.
water	60:32	0:0	2	xres_virtual
water	60:45	0:0	2	?
water	60:47	0:0	2	sys
op	60:50	0:0	2	->
water	60:52	0:0	2	var_info
op	60:60	0:0	2	.
water	60:61	0:0	2	xres_virtual
water	60:74	0:0	2	:
water	61:47	0:0	2	sys
op	61:50	0:0	2	->
water	61:52	0:0	2	var_info
op	61:60	0:0	2	.
water	61:61	0:0	2	xres
water	61:65	0:0	2	;
water	62:4	0:0	2	sys
op	62:7	0:0	2	->
water	62:9	0:0	2	line_length
op	62:21	0:0	2	=
water	62:23	0:0	2	fix_info
op	62:31	0:0	2	.
water	62:32	0:0	2	line_length
water	62:43	0:0	2	;
call	65:4	69:35	2	msg_Dbg
arg	65:12	65:14	3	vd
water	65:12	0:0	4	vd
arg	65:16	65:55	3	"%ix%i (virtual %ix%i) (request %ix%i)"
water	65:16	0:0	4	"%ix%i (virtual %ix%i) (request %ix%i)"
arg	66:12	66:30	3	sys->var_info.xres
water	66:12	0:0	4	sys
op	66:15	0:0	4	->
water	66:17	0:0	4	var_info
op	66:25	0:0	4	.
water	66:26	0:0	4	xres
arg	66:32	66:50	3	sys->var_info.yres
water	66:32	0:0	4	sys
op	66:35	0:0	4	->
water	66:37	0:0	4	var_info
op	66:45	0:0	4	.
water	66:46	0:0	4	yres
arg	67:12	67:38	3	sys->var_info.xres_virtual
water	67:12	0:0	4	sys
op	67:15	0:0	4	->
water	67:17	0:0	4	var_info
op	67:25	0:0	4	.
water	67:26	0:0	4	xres_virtual
arg	68:12	68:38	3	sys->var_info.yres_virtual
water	68:12	0:0	4	sys
op	68:15	0:0	4	->
water	68:17	0:0	4	var_info
op	68:25	0:0	4	.
water	68:26	0:0	4	yres_virtual
arg	69:12	69:22	3	sys->width
water	69:12	0:0	4	sys
op	69:15	0:0	4	->
water	69:17	0:0	4	width
arg	69:24	69:35	3	sys->height
water	69:24	0:0	4	sys
op	69:27	0:0	4	->
water	69:29	0:0	4	height
water	69:36	0:0	2	;
water	70:4	0:0	2	sys
op	70:7	0:0	2	->
water	70:9	0:0	2	palette
op	70:17	0:0	2	=
water	70:19	0:0	2	NULL
water	70:23	0:0	2	;
water	71:4	0:0	2	sys
op	71:7	0:0	2	->
water	71:9	0:0	2	has_pan
op	71:17	0:0	2	=
water	71:19	0:0	2	(
water	71:20	0:0	2	fix_info
op	71:28	0:0	2	.
water	71:29	0:0	2	ypanstep
op	71:38	0:0	2	||
water	71:41	0:0	2	fix_info
op	71:49	0:0	2	.
water	71:50	0:0	2	ywrapstep
water	71:59	0:0	2	)
water	71:60	0:0	2	;
switch	72:4	108:4	2	(sys -> var_info . bits_per_pixel)
cond	72:12	72:26	3	sys -> var_info . bits_per_pixel
water	72:12	0:0	4	sys
op	72:15	0:0	4	->
water	72:17	0:0	4	var_info
op	72:25	0:0	4	.
water	72:26	0:0	4	bits_per_pixel
stmts	72:42	108:4	3	
water	72:42	0:0	4	{
label	73:4	73:10	4	case 8 :
water	74:8	0:0	4	sys
op	74:11	0:0	4	->
water	74:13	0:0	4	palette
op	74:21	0:0	4	=
call	74:23	74:56	4	malloc
arg	74:30	74:56	5	4*256*sizeof(uint16_t)
water	74:30	0:0	6	4
op	74:32	0:0	6	*
water	74:34	0:0	6	256
op	74:38	0:0	6	*
op	74:40	0:0	6	sizeof
water	74:46	0:0	6	(
water	74:47	0:0	6	uint16_t
water	74:55	0:0	6	)
water	74:57	0:0	4	;
if	75:8	80:8	4	(! sys -> palette)
cond	75:12	75:18	5	! sys -> palette
op	75:12	0:0	6	!
water	75:13	0:0	6	sys
op	75:16	0:0	6	->
water	75:18	0:0	6	palette
stmts	75:27	80:8	5	
water	75:27	0:0	6	{
call	77:12	77:62	6	ioctl
arg	77:18	77:25	7	sys->fd
water	77:18	0:0	8	sys
op	77:21	0:0	8	->
water	77:23	0:0	8	fd
arg	77:27	77:46	7	FBIOPUT_VSCREENINFO
water	77:27	0:0	8	FBIOPUT_VSCREENINFO
arg	77:48	77:62	7	&sys->old_info
op	77:48	0:0	8	&
water	77:49	0:0	8	sys
op	77:52	0:0	8	->
water	77:54	0:0	8	old_info
water	77:63	0:0	6	;
call	78:12	78:25	6	close
arg	78:18	78:25	7	sys->fd
water	78:18	0:0	8	sys
op	78:21	0:0	8	->
water	78:23	0:0	8	fd
water	78:26	0:0	6	;
return	79:12	79:29	6	VLC_ENOMEM
water	79:19	0:0	7	VLC_ENOMEM
water	80:8	0:0	6	}
water	81:8	0:0	4	sys
op	81:11	0:0	4	->
water	81:13	0:0	4	fb_cmap
op	81:20	0:0	4	.
water	81:21	0:0	4	start
op	81:27	0:0	4	=
water	81:29	0:0	4	0
water	81:30	0:0	4	;
water	82:8	0:0	4	sys
op	82:11	0:0	4	->
water	82:13	0:0	4	fb_cmap
op	82:20	0:0	4	.
water	82:21	0:0	4	len
op	82:25	0:0	4	=
water	82:27	0:0	4	256
water	82:30	0:0	4	;
water	83:8	0:0	4	sys
op	83:11	0:0	4	->
water	83:13	0:0	4	fb_cmap
op	83:20	0:0	4	.
water	83:21	0:0	4	red
op	83:25	0:0	4	=
water	83:27	0:0	4	sys
op	83:30	0:0	4	->
water	83:32	0:0	4	palette
water	83:39	0:0	4	;
water	84:8	0:0	4	sys
op	84:11	0:0	4	->
water	84:13	0:0	4	fb_cmap
op	84:20	0:0	4	.
water	84:21	0:0	4	green
op	84:27	0:0	4	=
water	84:29	0:0	4	sys
op	84:32	0:0	4	->
water	84:34	0:0	4	palette
op	84:42	0:0	4	+
water	84:44	0:0	4	256
water	84:47	0:0	4	;
water	85:8	0:0	4	sys
op	85:11	0:0	4	->
water	85:13	0:0	4	fb_cmap
op	85:20	0:0	4	.
water	85:21	0:0	4	blue
op	85:26	0:0	4	=
water	85:28	0:0	4	sys
op	85:31	0:0	4	->
water	85:33	0:0	4	palette
op	85:41	0:0	4	+
water	85:43	0:0	4	2
op	85:45	0:0	4	*
water	85:47	0:0	4	256
water	85:50	0:0	4	;
water	86:8	0:0	4	sys
op	86:11	0:0	4	->
water	86:13	0:0	4	fb_cmap
op	86:20	0:0	4	.
water	86:21	0:0	4	transp
op	86:28	0:0	4	=
water	86:30	0:0	4	sys
op	86:33	0:0	4	->
water	86:35	0:0	4	palette
op	86:43	0:0	4	+
water	86:45	0:0	4	3
op	86:47	0:0	4	*
water	86:49	0:0	4	256
water	86:52	0:0	4	;
call	88:8	88:49	4	ioctl
arg	88:14	88:21	5	sys->fd
water	88:14	0:0	6	sys
op	88:17	0:0	6	->
water	88:19	0:0	6	fd
arg	88:23	88:34	5	FBIOGETCMAP
water	88:23	0:0	6	FBIOGETCMAP
arg	88:36	88:49	5	&sys->fb_cmap
op	88:36	0:0	6	&
water	88:37	0:0	6	sys
op	88:40	0:0	6	->
water	88:42	0:0	6	fb_cmap
water	88:50	0:0	4	;
water	89:8	0:0	4	sys
op	89:11	0:0	4	->
water	89:13	0:0	4	bytes_per_pixel
op	89:29	0:0	4	=
water	89:31	0:0	4	1
water	89:32	0:0	4	;
break	90:8	90:13	4	
label	91:4	91:11	4	case 15 :
label	92:4	92:11	4	case 16 :
water	93:8	0:0	4	sys
op	93:11	0:0	4	->
water	93:13	0:0	4	bytes_per_pixel
op	93:29	0:0	4	=
water	93:31	0:0	4	2
water	93:32	0:0	4	;
break	94:8	94:13	4	
label	95:4	95:11	4	case 24 :
water	96:8	0:0	4	sys
op	96:11	0:0	4	->
water	96:13	0:0	4	bytes_per_pixel
op	96:29	0:0	4	=
water	96:31	0:0	4	3
water	96:32	0:0	4	;
break	97:8	97:13	4	
label	98:4	98:11	4	case 32 :
water	99:8	0:0	4	sys
op	99:11	0:0	4	->
water	99:13	0:0	4	bytes_per_pixel
op	99:29	0:0	4	=
water	99:31	0:0	4	4
water	99:32	0:0	4	;
break	100:8	100:13	4	
label	101:4	101:11	4	default :
call	102:8	103:44	4	msg_Err
arg	102:16	102:18	5	vd
water	102:16	0:0	6	vd
arg	102:20	102:54	5	"screen depth %d is not supported"
water	102:20	0:0	6	"screen depth %d is not supported"
arg	103:16	103:44	5	sys->var_info.bits_per_pixel
water	103:16	0:0	6	sys
op	103:19	0:0	6	->
water	103:21	0:0	6	var_info
op	103:29	0:0	6	.
water	103:30	0:0	6	bits_per_pixel
water	103:45	0:0	4	;
call	105:8	105:58	4	ioctl
arg	105:14	105:21	5	sys->fd
water	105:14	0:0	6	sys
op	105:17	0:0	6	->
water	105:19	0:0	6	fd
arg	105:23	105:42	5	FBIOPUT_VSCREENINFO
water	105:23	0:0	6	FBIOPUT_VSCREENINFO
arg	105:44	105:58	5	&sys->old_info
op	105:44	0:0	6	&
water	105:45	0:0	6	sys
op	105:48	0:0	6	->
water	105:50	0:0	6	old_info
water	105:59	0:0	4	;
call	106:8	106:21	4	close
arg	106:14	106:21	5	sys->fd
water	106:14	0:0	6	sys
op	106:17	0:0	6	->
water	106:19	0:0	6	fd
water	106:22	0:0	4	;
return	107:8	107:27	4	VLC_EGENERIC
water	107:15	0:0	5	VLC_EGENERIC
water	108:4	0:0	4	}
water	109:4	0:0	2	sys
op	109:7	0:0	2	->
water	109:9	0:0	2	video_size
op	109:20	0:0	2	=
water	109:22	0:0	2	sys
op	109:25	0:0	2	->
water	109:27	0:0	2	line_length
op	109:39	0:0	2	*
water	109:41	0:0	2	sys
op	109:44	0:0	2	->
water	109:46	0:0	2	var_info
op	109:54	0:0	2	.
water	109:55	0:0	2	yres_virtual
water	109:67	0:0	2	;
water	111:4	0:0	2	sys
op	111:7	0:0	2	->
water	111:9	0:0	2	video_ptr
op	111:19	0:0	2	=
call	111:21	112:72	2	mmap
arg	111:26	111:30	3	NULL
water	111:26	0:0	4	NULL
arg	111:32	111:47	3	sys->video_size
water	111:32	0:0	4	sys
op	111:35	0:0	4	->
water	111:37	0:0	4	video_size
arg	112:26	112:48	3	PROT_READ|PROT_WRITE
water	112:26	0:0	4	PROT_READ
op	112:36	0:0	4	|
water	112:38	0:0	4	PROT_WRITE
arg	112:50	112:60	3	MAP_SHARED
water	112:50	0:0	4	MAP_SHARED
arg	112:62	112:69	3	sys->fd
water	112:62	0:0	4	sys
op	112:65	0:0	4	->
water	112:67	0:0	4	fd
arg	112:71	112:72	3	0
water	112:71	0:0	4	0
water	112:73	0:0	2	;
if	113:4	123:4	2	(sys -> video_ptr == MAP_FAILED)
cond	113:8	113:26	3	sys -> video_ptr == MAP_FAILED
water	113:8	0:0	4	sys
op	113:11	0:0	4	->
water	113:13	0:0	4	video_ptr
op	113:23	0:0	4	==
water	113:26	0:0	4	MAP_FAILED
stmts	113:38	123:4	3	
water	113:38	0:0	4	{
call	114:8	114:73	4	msg_Err
arg	114:16	114:18	5	vd
water	114:16	0:0	6	vd
arg	114:20	114:50	5	"cannot map video memory (%s)"
water	114:20	0:0	6	"cannot map video memory (%s)"
arg	114:52	114:73	5	vlc_strerror_c(errno)
call	114:52	114:72	6	vlc_strerror_c
arg	114:67	114:72	7	errno
water	114:67	0:0	8	errno
water	114:74	0:0	4	;
if	115:8	118:8	4	(sys -> var_info . bits_per_pixel == 8)
cond	115:12	115:44	5	sys -> var_info . bits_per_pixel == 8
water	115:12	0:0	6	sys
op	115:15	0:0	6	->
water	115:17	0:0	6	var_info
op	115:25	0:0	6	.
water	115:26	0:0	6	bits_per_pixel
op	115:41	0:0	6	==
water	115:44	0:0	6	8
stmts	115:47	118:8	5	
water	115:47	0:0	6	{
call	116:12	116:29	6	free
arg	116:17	116:29	7	sys->palette
water	116:17	0:0	8	sys
op	116:20	0:0	8	->
water	116:22	0:0	8	palette
water	116:30	0:0	6	;
water	117:12	0:0	6	sys
op	117:15	0:0	6	->
water	117:17	0:0	6	palette
op	117:25	0:0	6	=
water	117:27	0:0	6	NULL
water	117:31	0:0	6	;
water	118:8	0:0	6	}
call	120:8	120:58	4	ioctl
arg	120:14	120:21	5	sys->fd
water	120:14	0:0	6	sys
op	120:17	0:0	6	->
water	120:19	0:0	6	fd
arg	120:23	120:42	5	FBIOPUT_VSCREENINFO
water	120:23	0:0	6	FBIOPUT_VSCREENINFO
arg	120:44	120:58	5	&sys->old_info
op	120:44	0:0	6	&
water	120:45	0:0	6	sys
op	120:48	0:0	6	->
water	120:50	0:0	6	old_info
water	120:59	0:0	4	;
call	121:8	121:21	4	close
arg	121:14	121:21	5	sys->fd
water	121:14	0:0	6	sys
op	121:17	0:0	6	->
water	121:19	0:0	6	fd
water	121:22	0:0	4	;
return	122:8	122:27	4	VLC_EGENERIC
water	122:15	0:0	5	VLC_EGENERIC
water	123:4	0:0	4	}
call	124:4	124:19	2	ClearScreen
arg	124:16	124:19	3	sys
water	124:16	0:0	4	sys
water	124:20	0:0	2	;
call	125:4	128:65	2	msg_Dbg
arg	125:12	125:14	3	vd
water	125:12	0:0	4	vd
arg	126:12	126:77	3	"framebuffer type=%d, visual=%d, ypanstep=%d, ywrap=%d, accel=%d"
water	126:12	0:0	4	"framebuffer type=%d, visual=%d, ypanstep=%d, ywrap=%d, accel=%d"
arg	127:12	127:25	3	fix_info.type
water	127:12	0:0	4	fix_info
op	127:20	0:0	4	.
water	127:21	0:0	4	type
arg	127:27	127:42	3	fix_info.visual
water	127:27	0:0	4	fix_info
op	127:35	0:0	4	.
water	127:36	0:0	4	visual
arg	128:12	128:29	3	fix_info.ypanstep
water	128:12	0:0	4	fix_info
op	128:20	0:0	4	.
water	128:21	0:0	4	ypanstep
arg	128:31	128:49	3	fix_info.ywrapstep
water	128:31	0:0	4	fix_info
op	128:39	0:0	4	.
water	128:40	0:0	4	ywrapstep
arg	128:51	128:65	3	fix_info.accel
water	128:51	0:0	4	fix_info
op	128:59	0:0	4	.
water	128:60	0:0	4	accel
water	128:66	0:0	2	;
return	129:4	129:22	2	VLC_SUCCESS
water	129:11	0:0	3	VLC_SUCCESS

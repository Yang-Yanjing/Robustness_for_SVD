func	2:0	150:0	0	static block_t *	DecodeBlock
params	2:27	0:0	1	
param	2:29	2:45	2	decoder_t *	p_dec
param	2:47	2:66	2	block_t * *	pp_block
stmnts	0:0	149:15	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:37	2	uint8_t	p_header[DTS_HEADER_SIZE]
decl	6:4	6:18	2	uint8_t	*p_buf
decl	7:4	7:25	2	block_t	*p_out_buffer
if	8:4	9:19	2	(! pp_block || ! * pp_block)
cond	8:8	8:23	3	! pp_block || ! * pp_block
op	8:8	0:0	4	!
water	8:9	0:0	4	pp_block
op	8:18	0:0	4	||
op	8:21	0:0	4	!
op	8:22	0:0	4	*
water	8:23	0:0	4	pp_block
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
if	10:4	20:4	2	(( * pp_block ) -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED ))
cond	10:8	10:75	3	( * pp_block ) -> i_flags & ( BLOCK_FLAG_DISCONTINUITY | BLOCK_FLAG_CORRUPTED )
water	10:8	0:0	4	(
op	10:9	0:0	4	*
water	10:10	0:0	4	pp_block
water	10:18	0:0	4	)
op	10:19	0:0	4	->
water	10:21	0:0	4	i_flags
op	10:28	0:0	4	&
water	10:29	0:0	4	(
water	10:30	0:0	4	BLOCK_FLAG_DISCONTINUITY
op	10:54	0:0	4	|
water	10:55	0:0	4	BLOCK_FLAG_CORRUPTED
water	10:75	0:0	4	)
stmts	11:4	20:4	3	
water	11:4	0:0	4	{
if	12:8	16:8	4	(( * pp_block ) -> i_flags & BLOCK_FLAG_CORRUPTED)
cond	12:12	12:33	5	( * pp_block ) -> i_flags & BLOCK_FLAG_CORRUPTED
water	12:12	0:0	6	(
op	12:13	0:0	6	*
water	12:14	0:0	6	pp_block
water	12:22	0:0	6	)
op	12:23	0:0	6	->
water	12:25	0:0	6	i_flags
op	12:32	0:0	6	&
water	12:33	0:0	6	BLOCK_FLAG_CORRUPTED
stmts	13:8	16:8	5	
water	13:8	0:0	6	{
water	14:12	0:0	6	p_sys
op	14:17	0:0	6	->
water	14:19	0:0	6	i_state
op	14:27	0:0	6	=
water	14:29	0:0	6	STATE_NOSYNC
water	14:41	0:0	6	;
call	15:12	15:54	6	block_BytestreamEmpty
arg	15:35	15:54	7	&p_sys->bytestream
op	15:35	0:0	8	&
water	15:36	0:0	8	p_sys
op	15:41	0:0	8	->
water	15:43	0:0	8	bytestream
water	15:55	0:0	6	;
water	16:8	0:0	6	}
call	17:8	17:38	4	date_Set
arg	17:18	17:34	5	&p_sys->end_date
op	17:18	0:0	6	&
water	17:19	0:0	6	p_sys
op	17:24	0:0	6	->
water	17:26	0:0	6	end_date
arg	17:36	17:38	5	0
water	17:36	0:0	6	0
water	17:39	0:0	4	;
call	18:8	18:33	4	block_Release
arg	18:23	18:33	5	*pp_block
op	18:23	0:0	6	*
water	18:24	0:0	6	pp_block
water	18:34	0:0	4	;
return	19:8	19:19	4	NULL
water	19:15	0:0	5	NULL
water	20:4	0:0	4	}
if	21:4	26:4	2	(!date_Get (& p_sys -> end_date ) && ( * pp_block ) -> i_pts <= VLC_TS_INVALID)
cond	21:8	21:63	3	!date_Get (& p_sys -> end_date ) && ( * pp_block ) -> i_pts <= VLC_TS_INVALID
op	21:8	0:0	4	!
call	21:9	21:36	4	date_Get
arg	21:19	21:36	5	&p_sys->end_date
op	21:19	0:0	6	&
water	21:20	0:0	6	p_sys
op	21:25	0:0	6	->
water	21:27	0:0	6	end_date
op	21:38	0:0	4	&&
water	21:41	0:0	4	(
op	21:42	0:0	4	*
water	21:43	0:0	4	pp_block
water	21:51	0:0	4	)
op	21:52	0:0	4	->
water	21:54	0:0	4	i_pts
op	21:60	0:0	4	<=
water	21:63	0:0	4	VLC_TS_INVALID
stmts	22:4	26:4	3	
water	22:4	0:0	4	{
call	24:8	24:33	4	block_Release
arg	24:23	24:33	5	*pp_block
op	24:23	0:0	6	*
water	24:24	0:0	6	pp_block
water	24:34	0:0	4	;
return	25:8	25:19	4	NULL
water	25:15	0:0	5	NULL
water	26:4	0:0	4	}
call	27:4	27:56	2	block_BytestreamPush
arg	27:26	27:44	3	&p_sys->bytestream
op	27:26	0:0	4	&
water	27:27	0:0	4	p_sys
op	27:32	0:0	4	->
water	27:34	0:0	4	bytestream
arg	27:46	27:56	3	*pp_block
op	27:46	0:0	4	*
water	27:47	0:0	4	pp_block
water	27:57	0:0	2	;
while	28:4	148:4	2	(1)
cond	28:11	28:11	3	1
water	28:11	0:0	4	1
stmts	29:4	148:4	3	
water	29:4	0:0	4	{
switch	30:8	147:8	4	(p_sys -> i_state)
cond	30:16	30:23	5	p_sys -> i_state
water	30:16	0:0	6	p_sys
op	30:21	0:0	6	->
water	30:23	0:0	6	i_state
stmts	31:8	147:8	5	
water	31:8	0:0	6	{
label	32:8	32:25	6	case STATE_NOSYNC :
while	34:12	43:12	6	(block_PeekBytes (& p_sys -> bytestream ,p_header ,6 ) == VLC_SUCCESS)
cond	34:19	35:22	7	block_PeekBytes (& p_sys -> bytestream ,p_header ,6 ) == VLC_SUCCESS
call	34:19	34:68	8	block_PeekBytes
arg	34:36	34:54	9	&p_sys->bytestream
op	34:36	0:0	10	&
water	34:37	0:0	10	p_sys
op	34:42	0:0	10	->
water	34:44	0:0	10	bytestream
arg	34:56	34:64	9	p_header
water	34:56	0:0	10	p_header
arg	34:66	34:68	9	6
water	34:66	0:0	10	6
op	35:19	0:0	8	==
water	35:22	0:0	8	VLC_SUCCESS
stmts	36:12	43:12	7	
water	36:12	0:0	8	{
if	37:16	41:16	8	(SyncCode (p_header ) == VLC_SUCCESS)
cond	37:20	37:44	9	SyncCode (p_header ) == VLC_SUCCESS
call	37:20	37:39	10	SyncCode
arg	37:30	37:39	11	p_header
water	37:30	0:0	12	p_header
op	37:41	0:0	10	==
water	37:44	0:0	10	VLC_SUCCESS
stmts	38:16	41:16	9	
water	38:16	0:0	10	{
water	39:20	0:0	10	p_sys
op	39:25	0:0	10	->
water	39:27	0:0	10	i_state
op	39:35	0:0	10	=
water	39:37	0:0	10	STATE_SYNC
water	39:47	0:0	10	;
break	40:20	40:25	10	
water	41:16	0:0	10	}
call	42:16	42:51	8	block_SkipByte
arg	42:32	42:51	9	&p_sys->bytestream
op	42:32	0:0	10	&
water	42:33	0:0	10	p_sys
op	42:38	0:0	10	->
water	42:40	0:0	10	bytestream
water	42:52	0:0	8	;
water	43:12	0:0	8	}
if	44:12	49:12	6	(p_sys -> i_state != STATE_SYNC)
cond	44:16	44:34	7	p_sys -> i_state != STATE_SYNC
water	44:16	0:0	8	p_sys
op	44:21	0:0	8	->
water	44:23	0:0	8	i_state
op	44:31	0:0	8	!=
water	44:34	0:0	8	STATE_SYNC
stmts	45:12	49:12	7	
water	45:12	0:0	8	{
call	46:16	46:58	8	block_BytestreamFlush
arg	46:39	46:58	9	&p_sys->bytestream
op	46:39	0:0	10	&
water	46:40	0:0	10	p_sys
op	46:45	0:0	10	->
water	46:47	0:0	10	bytestream
water	46:59	0:0	8	;
return	48:16	48:27	8	NULL
water	48:23	0:0	9	NULL
water	49:12	0:0	8	}
label	50:8	50:23	6	case STATE_SYNC :
water	52:12	0:0	6	p_sys
op	52:17	0:0	6	->
water	52:19	0:0	6	i_pts
op	52:25	0:0	6	=
water	52:27	0:0	6	p_sys
op	52:32	0:0	6	->
water	52:34	0:0	6	bytestream
op	52:44	0:0	6	.
water	52:45	0:0	6	p_block
op	52:52	0:0	6	->
water	52:54	0:0	6	i_pts
water	52:59	0:0	6	;
if	53:12	57:12	6	(p_sys -> i_pts > VLC_TS_INVALID && p_sys -> i_pts !=date_Get (& p_sys -> end_date ))
cond	53:16	54:59	7	p_sys -> i_pts > VLC_TS_INVALID && p_sys -> i_pts !=date_Get (& p_sys -> end_date )
water	53:16	0:0	8	p_sys
op	53:21	0:0	8	->
water	53:23	0:0	8	i_pts
op	53:29	0:0	8	>
water	53:31	0:0	8	VLC_TS_INVALID
op	53:46	0:0	8	&&
water	54:16	0:0	8	p_sys
op	54:21	0:0	8	->
water	54:23	0:0	8	i_pts
op	54:29	0:0	8	!=
call	54:32	54:59	8	date_Get
arg	54:42	54:59	9	&p_sys->end_date
op	54:42	0:0	10	&
water	54:43	0:0	10	p_sys
op	54:48	0:0	10	->
water	54:50	0:0	10	end_date
stmts	55:12	57:12	7	
water	55:12	0:0	8	{
call	56:16	56:57	8	date_Set
arg	56:26	56:42	9	&p_sys->end_date
op	56:26	0:0	10	&
water	56:27	0:0	10	p_sys
op	56:32	0:0	10	->
water	56:34	0:0	10	end_date
arg	56:44	56:57	9	p_sys->i_pts
water	56:44	0:0	10	p_sys
op	56:49	0:0	10	->
water	56:51	0:0	10	i_pts
water	56:58	0:0	8	;
water	57:12	0:0	8	}
water	58:12	0:0	6	p_sys
op	58:17	0:0	6	->
water	58:19	0:0	6	i_state
op	58:27	0:0	6	=
water	58:29	0:0	6	STATE_HEADER
water	58:41	0:0	6	;
label	59:8	59:25	6	case STATE_HEADER :
if	61:12	66:12	6	(block_PeekBytes (& p_sys -> bytestream ,p_header ,DTS_HEADER_SIZE ) != VLC_SUCCESS)
cond	61:16	62:54	7	block_PeekBytes (& p_sys -> bytestream ,p_header ,DTS_HEADER_SIZE ) != VLC_SUCCESS
call	61:16	62:49	8	block_PeekBytes
arg	61:33	61:51	9	&p_sys->bytestream
op	61:33	0:0	10	&
water	61:34	0:0	10	p_sys
op	61:39	0:0	10	->
water	61:41	0:0	10	bytestream
arg	61:53	61:61	9	p_header
water	61:53	0:0	10	p_header
arg	62:33	62:49	9	DTS_HEADER_SIZE
water	62:33	0:0	10	DTS_HEADER_SIZE
op	62:51	0:0	8	!=
water	62:54	0:0	8	VLC_SUCCESS
stmts	63:12	66:12	7	
water	63:12	0:0	8	{
return	65:16	65:27	8	NULL
water	65:23	0:0	9	NULL
water	66:12	0:0	8	}
water	68:12	0:0	6	p_sys
op	68:17	0:0	6	->
water	68:19	0:0	6	i_frame_size
op	68:32	0:0	6	=
call	68:34	74:67	6	SyncInfo
arg	68:44	68:52	7	p_header
water	68:44	0:0	8	p_header
arg	69:44	69:60	7	&p_sys->b_dts_hd
op	69:44	0:0	8	&
water	69:45	0:0	8	p_sys
op	69:50	0:0	8	->
water	69:52	0:0	8	b_dts_hd
arg	70:44	70:62	7	&p_sys->i_channels
op	70:44	0:0	8	&
water	70:45	0:0	8	p_sys
op	70:50	0:0	8	->
water	70:52	0:0	8	i_channels
arg	71:44	71:67	7	&p_sys->i_channels_conf
op	71:44	0:0	8	&
water	71:45	0:0	8	p_sys
op	71:50	0:0	8	->
water	71:52	0:0	8	i_channels_conf
arg	72:44	72:58	7	&p_sys->i_rate
op	72:44	0:0	8	&
water	72:45	0:0	8	p_sys
op	72:50	0:0	8	->
water	72:52	0:0	8	i_rate
arg	73:44	73:62	7	&p_sys->i_bit_rate
op	73:44	0:0	8	&
water	73:45	0:0	8	p_sys
op	73:50	0:0	8	->
water	73:52	0:0	8	i_bit_rate
arg	74:44	74:67	7	&p_sys->i_frame_length
op	74:44	0:0	8	&
water	74:45	0:0	8	p_sys
op	74:50	0:0	8	->
water	74:52	0:0	8	i_frame_length
water	74:68	0:0	6	;
if	75:12	81:12	6	(! p_sys -> i_frame_size)
cond	75:16	75:24	7	! p_sys -> i_frame_size
op	75:16	0:0	8	!
water	75:17	0:0	8	p_sys
op	75:22	0:0	8	->
water	75:24	0:0	8	i_frame_size
stmts	76:12	81:12	7	
water	76:12	0:0	8	{
call	77:16	77:53	8	msg_Dbg
arg	77:25	77:30	9	p_dec
water	77:25	0:0	10	p_dec
arg	77:32	77:53	9	"emulated sync word"
water	77:32	0:0	10	"emulated sync word"
water	77:54	0:0	8	;
call	78:16	78:51	8	block_SkipByte
arg	78:32	78:51	9	&p_sys->bytestream
op	78:32	0:0	10	&
water	78:33	0:0	10	p_sys
op	78:38	0:0	10	->
water	78:40	0:0	10	bytestream
water	78:52	0:0	8	;
water	79:16	0:0	8	p_sys
op	79:21	0:0	8	->
water	79:23	0:0	8	i_state
op	79:31	0:0	8	=
water	79:33	0:0	8	STATE_NOSYNC
water	79:45	0:0	8	;
break	80:16	80:21	8	
water	81:12	0:0	8	}
water	82:12	0:0	6	p_sys
op	82:17	0:0	6	->
water	82:19	0:0	6	i_state
op	82:27	0:0	6	=
water	82:29	0:0	6	STATE_NEXT_SYNC
water	82:44	0:0	6	;
label	83:8	83:28	6	case STATE_NEXT_SYNC :
if	87:12	93:12	6	(block_PeekOffsetBytes (& p_sys -> bytestream ,p_sys -> i_frame_size ,p_header ,6 ) != VLC_SUCCESS)
cond	87:16	89:19	7	block_PeekOffsetBytes (& p_sys -> bytestream ,p_sys -> i_frame_size ,p_header ,6 ) != VLC_SUCCESS
call	87:16	88:72	8	block_PeekOffsetBytes
arg	87:39	87:57	9	&p_sys->bytestream
op	87:39	0:0	10	&
water	87:40	0:0	10	p_sys
op	87:45	0:0	10	->
water	87:47	0:0	10	bytestream
arg	88:39	88:58	9	p_sys->i_frame_size
water	88:39	0:0	10	p_sys
op	88:44	0:0	10	->
water	88:46	0:0	10	i_frame_size
arg	88:60	88:68	9	p_header
water	88:60	0:0	10	p_header
arg	88:70	88:72	9	6
water	88:70	0:0	10	6
op	89:16	0:0	8	!=
water	89:19	0:0	8	VLC_SUCCESS
stmts	90:12	93:12	7	
water	90:12	0:0	8	{
return	92:16	92:27	8	NULL
water	92:23	0:0	9	NULL
water	93:12	0:0	8	}
if	94:12	100:12	6	(p_sys -> b_packetizer && p_header [ 0 ] == 0 && p_header [ 1 ] == 0)
cond	94:16	95:51	7	p_sys -> b_packetizer && p_header [ 0 ] == 0 && p_header [ 1 ] == 0
water	94:16	0:0	8	p_sys
op	94:21	0:0	8	->
water	94:23	0:0	8	b_packetizer
op	94:36	0:0	8	&&
water	95:16	0:0	8	p_header
op	95:24	0:0	8	[
water	95:25	0:0	8	0
op	95:26	0:0	8	]
op	95:28	0:0	8	==
water	95:31	0:0	8	0
op	95:33	0:0	8	&&
water	95:36	0:0	8	p_header
op	95:44	0:0	8	[
water	95:45	0:0	8	1
op	95:46	0:0	8	]
op	95:48	0:0	8	==
water	95:51	0:0	8	0
stmts	96:12	100:12	7	
water	96:12	0:0	8	{
water	98:16	0:0	8	p_sys
op	98:21	0:0	8	->
water	98:23	0:0	8	i_state
op	98:31	0:0	8	=
water	98:33	0:0	8	STATE_SEND_DATA
water	98:48	0:0	8	;
break	99:16	99:21	8	
water	100:12	0:0	8	}
if	101:12	110:12	6	(SyncCode (p_header ) != VLC_SUCCESS)
cond	101:16	101:40	7	SyncCode (p_header ) != VLC_SUCCESS
call	101:16	101:35	8	SyncCode
arg	101:26	101:35	9	p_header
water	101:26	0:0	10	p_header
op	101:37	0:0	8	!=
water	101:40	0:0	8	VLC_SUCCESS
stmts	102:12	110:12	7	
water	102:12	0:0	8	{
call	103:16	106:60	8	msg_Dbg
arg	103:25	103:30	9	p_dec
water	103:25	0:0	10	p_dec
arg	103:32	104:77	9	"emulated sync word ""(no sync on following frame): %2.2x%2.2x%2.2x%2.2x"
water	103:32	0:0	10	"emulated sync word "
water	104:25	0:0	10	"(no sync on following frame): %2.2x%2.2x%2.2x%2.2x"
arg	105:25	105:41	9	(int)p_header[0]
water	105:25	0:0	10	(
water	105:26	0:0	10	int
water	105:29	0:0	10	)
water	105:30	0:0	10	p_header
op	105:38	0:0	10	[
water	105:39	0:0	10	0
op	105:40	0:0	10	]
arg	105:43	105:59	9	(int)p_header[1]
water	105:43	0:0	10	(
water	105:44	0:0	10	int
water	105:47	0:0	10	)
water	105:48	0:0	10	p_header
op	105:56	0:0	10	[
water	105:57	0:0	10	1
op	105:58	0:0	10	]
arg	106:25	106:41	9	(int)p_header[2]
water	106:25	0:0	10	(
water	106:26	0:0	10	int
water	106:29	0:0	10	)
water	106:30	0:0	10	p_header
op	106:38	0:0	10	[
water	106:39	0:0	10	2
op	106:40	0:0	10	]
arg	106:43	106:60	9	(int)p_header[3]
water	106:43	0:0	10	(
water	106:44	0:0	10	int
water	106:47	0:0	10	)
water	106:48	0:0	10	p_header
op	106:56	0:0	10	[
water	106:57	0:0	10	3
op	106:58	0:0	10	]
water	106:61	0:0	8	;
water	107:16	0:0	8	p_sys
op	107:21	0:0	8	->
water	107:23	0:0	8	i_state
op	107:31	0:0	8	=
water	107:33	0:0	8	STATE_NOSYNC
water	107:45	0:0	8	;
call	108:16	108:51	8	block_SkipByte
arg	108:32	108:51	9	&p_sys->bytestream
op	108:32	0:0	10	&
water	108:33	0:0	10	p_sys
op	108:38	0:0	10	->
water	108:40	0:0	10	bytestream
water	108:52	0:0	8	;
break	109:16	109:21	8	
water	110:12	0:0	8	}
water	111:12	0:0	6	p_sys
op	111:17	0:0	6	->
water	111:19	0:0	6	i_state
op	111:27	0:0	6	=
water	111:29	0:0	6	STATE_SEND_DATA
water	111:44	0:0	6	;
break	112:12	112:17	6	
label	113:8	113:27	6	case STATE_GET_DATA :
if	116:12	121:12	6	(block_WaitBytes (& p_sys -> bytestream ,p_sys -> i_frame_size ) != VLC_SUCCESS)
cond	116:16	117:58	7	block_WaitBytes (& p_sys -> bytestream ,p_sys -> i_frame_size ) != VLC_SUCCESS
call	116:16	117:53	8	block_WaitBytes
arg	116:33	116:51	9	&p_sys->bytestream
op	116:33	0:0	10	&
water	116:34	0:0	10	p_sys
op	116:39	0:0	10	->
water	116:41	0:0	10	bytestream
arg	117:33	117:53	9	p_sys->i_frame_size
water	117:33	0:0	10	p_sys
op	117:38	0:0	10	->
water	117:40	0:0	10	i_frame_size
op	117:55	0:0	8	!=
water	117:58	0:0	8	VLC_SUCCESS
stmts	118:12	121:12	7	
water	118:12	0:0	8	{
return	120:16	120:27	8	NULL
water	120:23	0:0	9	NULL
water	121:12	0:0	8	}
water	122:12	0:0	6	p_sys
op	122:17	0:0	6	->
water	122:19	0:0	6	i_state
op	122:27	0:0	6	=
water	122:29	0:0	6	STATE_SEND_DATA
water	122:44	0:0	6	;
label	123:8	123:28	6	case STATE_SEND_DATA :
if	124:12	130:12	6	(p_sys -> b_dts_hd)
cond	124:16	124:23	7	p_sys -> b_dts_hd
water	124:16	0:0	8	p_sys
op	124:21	0:0	8	->
water	124:23	0:0	8	b_dts_hd
stmts	125:12	130:12	7	
water	125:12	0:0	8	{
call	127:16	127:73	8	block_SkipBytes
arg	127:33	127:51	9	&p_sys->bytestream
op	127:33	0:0	10	&
water	127:34	0:0	10	p_sys
op	127:39	0:0	10	->
water	127:41	0:0	10	bytestream
arg	127:53	127:73	9	p_sys->i_frame_size
water	127:53	0:0	10	p_sys
op	127:58	0:0	10	->
water	127:60	0:0	10	i_frame_size
water	127:74	0:0	8	;
water	128:16	0:0	8	p_sys
op	128:21	0:0	8	->
water	128:23	0:0	8	i_state
op	128:31	0:0	8	=
water	128:33	0:0	8	STATE_NOSYNC
water	128:45	0:0	8	;
break	129:16	129:21	8	
water	130:12	0:0	8	}
if	131:12	135:12	6	(! ( p_buf =GetOutBuffer (p_dec ,& p_out_buffer ) ))
cond	131:16	131:62	7	! ( p_buf =GetOutBuffer (p_dec ,& p_out_buffer ) )
op	131:16	0:0	8	!
water	131:17	0:0	8	(
water	131:18	0:0	8	p_buf
op	131:24	0:0	8	=
call	131:26	131:61	8	GetOutBuffer
arg	131:40	131:45	9	p_dec
water	131:40	0:0	10	p_dec
arg	131:47	131:61	9	&p_out_buffer
op	131:47	0:0	10	&
water	131:48	0:0	10	p_out_buffer
water	131:62	0:0	8	)
stmts	132:12	135:12	7	
water	132:12	0:0	8	{
return	134:16	134:27	8	NULL
water	134:23	0:0	9	NULL
water	135:12	0:0	8	}
call	138:12	139:88	6	block_GetBytes
arg	138:28	138:46	7	&p_sys->bytestream
op	138:28	0:0	8	&
water	138:29	0:0	8	p_sys
op	138:34	0:0	8	->
water	138:36	0:0	8	bytestream
arg	139:28	139:33	7	p_buf
water	139:28	0:0	8	p_buf
arg	139:35	139:88	7	__MIN(p_sys->i_frame_size,p_out_buffer->i_buffer)
call	139:35	139:86	8	__MIN
arg	139:42	139:61	9	p_sys->i_frame_size
water	139:42	0:0	10	p_sys
op	139:47	0:0	10	->
water	139:49	0:0	10	i_frame_size
arg	139:63	139:86	9	p_out_buffer->i_buffer
water	139:63	0:0	10	p_out_buffer
op	139:75	0:0	10	->
water	139:77	0:0	10	i_buffer
water	139:89	0:0	6	;
if	141:12	142:80	6	(p_sys -> i_pts == p_sys -> bytestream . p_block -> i_pts)
cond	141:16	141:59	7	p_sys -> i_pts == p_sys -> bytestream . p_block -> i_pts
water	141:16	0:0	8	p_sys
op	141:21	0:0	8	->
water	141:23	0:0	8	i_pts
op	141:29	0:0	8	==
water	141:32	0:0	8	p_sys
op	141:37	0:0	8	->
water	141:39	0:0	8	bytestream
op	141:49	0:0	8	.
water	141:50	0:0	8	p_block
op	141:57	0:0	8	->
water	141:59	0:0	8	i_pts
stmts	142:16	142:80	7	
water	142:16	0:0	8	p_sys
op	142:21	0:0	8	->
water	142:23	0:0	8	i_pts
op	142:29	0:0	8	=
water	142:31	0:0	8	p_sys
op	142:36	0:0	8	->
water	142:38	0:0	8	bytestream
op	142:48	0:0	8	.
water	142:49	0:0	8	p_block
op	142:56	0:0	8	->
water	142:58	0:0	8	i_pts
op	142:64	0:0	8	=
water	142:66	0:0	8	VLC_TS_INVALID
water	142:80	0:0	8	;
water	143:12	0:0	6	p_sys
op	143:17	0:0	6	->
water	143:19	0:0	6	i_state
op	143:27	0:0	6	=
water	143:29	0:0	6	STATE_NOSYNC
water	143:41	0:0	6	;
op	145:12	0:0	6	*
water	145:13	0:0	6	pp_block
op	145:22	0:0	6	=
call	145:24	145:64	6	block_BytestreamPop
arg	145:45	145:64	7	&p_sys->bytestream
op	145:45	0:0	8	&
water	145:46	0:0	8	p_sys
op	145:51	0:0	8	->
water	145:53	0:0	8	bytestream
water	145:65	0:0	6	;
return	146:12	146:31	6	p_out_buffer
water	146:19	0:0	7	p_out_buffer
water	147:8	0:0	6	}
water	148:4	0:0	4	}
return	149:4	149:15	2	NULL
water	149:11	0:0	3	NULL

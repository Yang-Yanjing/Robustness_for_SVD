func	2:0	46:0	0	static uint8_t *	CAPMTES
params	2:23	0:0	1	
param	2:25	2:44	2	system_ids_t *	p_ids
param	2:46	2:62	2	uint8_t *	p_capmt
param	3:25	3:41	2	int	i_capmt_size
param	3:43	3:57	2	uint8_t	i_type
param	3:59	3:73	2	uint16_t	i_pid
param	4:25	4:35	2	int	i_size
param	4:37	4:62	2	dvbpsi_descriptor_t *	p_dr
param	5:25	5:39	2	uint8_t	i_cmd
stmnts	0:0	45:17	1	
decl	7:4	7:19	2	uint8_t	*p_data
decl	8:4	8:9	2	int	i
if	9:4	10:63	2	(i_size)
cond	9:9	9:9	3	i_size
water	9:9	0:0	4	i_size
stmts	10:8	10:63	3	
water	10:8	0:0	4	p_data
op	10:15	0:0	4	=
call	10:17	10:62	4	xrealloc
arg	10:27	10:34	5	p_capmt
water	10:27	0:0	6	p_capmt
arg	10:36	10:62	5	i_capmt_size+6+i_size
water	10:36	0:0	6	i_capmt_size
op	10:49	0:0	6	+
water	10:51	0:0	6	6
op	10:53	0:0	6	+
water	10:55	0:0	6	i_size
water	10:63	0:0	4	;
else	11:4	12:54	2
stmts	12:8	12:54	3	
water	12:8	0:0	4	p_data
op	12:15	0:0	4	=
call	12:17	12:53	4	xrealloc
arg	12:27	12:34	5	p_capmt
water	12:27	0:0	6	p_capmt
arg	12:36	12:53	5	i_capmt_size+5
water	12:36	0:0	6	i_capmt_size
op	12:49	0:0	6	+
water	12:51	0:0	6	5
water	12:54	0:0	4	;
water	13:4	0:0	2	i
op	13:6	0:0	2	=
water	13:8	0:0	2	i_capmt_size
water	13:20	0:0	2	;
water	14:4	0:0	2	p_data
op	14:10	0:0	2	[
water	14:11	0:0	2	i
op	14:12	0:0	2	]
op	14:14	0:0	2	=
water	14:16	0:0	2	i_type
water	14:22	0:0	2	;
water	15:4	0:0	2	p_data
op	15:10	0:0	2	[
water	15:11	0:0	2	i
op	15:13	0:0	2	+
water	15:15	0:0	2	1
op	15:16	0:0	2	]
op	15:18	0:0	2	=
water	15:20	0:0	2	i_pid
op	15:26	0:0	2	>>
water	15:29	0:0	2	8
water	15:30	0:0	2	;
water	16:4	0:0	2	p_data
op	16:10	0:0	2	[
water	16:11	0:0	2	i
op	16:13	0:0	2	+
water	16:15	0:0	2	2
op	16:16	0:0	2	]
op	16:18	0:0	2	=
water	16:20	0:0	2	i_pid
op	16:26	0:0	2	&
water	16:28	0:0	2	0
water	16:29	0:0	2	xff
water	16:32	0:0	2	;
if	17:4	39:4	2	(i_size)
cond	17:9	17:9	3	i_size
water	17:9	0:0	4	i_size
stmts	18:4	39:4	3	
water	18:4	0:0	4	{
water	19:8	0:0	4	p_data
op	19:14	0:0	4	[
water	19:15	0:0	4	i
op	19:17	0:0	4	+
water	19:19	0:0	4	3
op	19:20	0:0	4	]
op	19:22	0:0	4	=
water	19:24	0:0	4	(
water	19:25	0:0	4	i_size
op	19:32	0:0	4	+
water	19:34	0:0	4	1
water	19:35	0:0	4	)
op	19:37	0:0	4	>>
water	19:40	0:0	4	8
water	19:41	0:0	4	;
water	20:8	0:0	4	p_data
op	20:14	0:0	4	[
water	20:15	0:0	4	i
op	20:17	0:0	4	+
water	20:19	0:0	4	4
op	20:20	0:0	4	]
op	20:22	0:0	4	=
water	20:24	0:0	4	(
water	20:25	0:0	4	i_size
op	20:32	0:0	4	+
water	20:34	0:0	4	1
water	20:35	0:0	4	)
op	20:37	0:0	4	&
water	20:39	0:0	4	0
water	20:40	0:0	4	xff
water	20:43	0:0	4	;
water	21:8	0:0	4	p_data
op	21:14	0:0	4	[
water	21:15	0:0	4	i
op	21:17	0:0	4	+
water	21:19	0:0	4	5
op	21:20	0:0	4	]
op	21:22	0:0	4	=
water	21:24	0:0	4	i_cmd
water	21:29	0:0	4	;
water	22:8	0:0	4	i
op	22:10	0:0	4	+=
water	22:13	0:0	4	6
water	22:14	0:0	4	;
while	23:8	38:8	4	(p_dr != NULL)
cond	23:16	23:24	5	p_dr != NULL
water	23:16	0:0	6	p_dr
op	23:21	0:0	6	!=
water	23:24	0:0	6	NULL
stmts	24:8	38:8	5	
water	24:8	0:0	6	{
if	25:12	36:12	6	(p_dr -> i_tag == 0 x9)
cond	25:16	25:32	7	p_dr -> i_tag == 0 x9
water	25:16	0:0	8	p_dr
op	25:20	0:0	8	->
water	25:22	0:0	8	i_tag
op	25:28	0:0	8	==
water	25:31	0:0	8	0
water	25:32	0:0	8	x9
stmts	26:12	36:12	7	
water	26:12	0:0	8	{
decl	27:16	28:53	8	uint16_t	i_sysid
op	27:33	0:0	8	=
water	27:35	0:0	8	(
water	27:36	0:0	8	(
water	27:37	0:0	8	uint16_t
water	27:45	0:0	8	)
water	27:46	0:0	8	p_dr
op	27:50	0:0	8	->
water	27:52	0:0	8	p_data
op	27:58	0:0	8	[
water	27:59	0:0	8	0
op	27:60	0:0	8	]
op	27:62	0:0	8	<<
water	27:65	0:0	8	8
water	27:66	0:0	8	)
op	28:36	0:0	8	|
water	28:38	0:0	8	p_dr
op	28:42	0:0	8	->
water	28:44	0:0	8	p_data
op	28:50	0:0	8	[
water	28:51	0:0	8	1
op	28:52	0:0	8	]
if	29:16	35:16	8	(CheckSystemID (p_ids ,i_sysid ))
cond	29:21	29:51	9	CheckSystemID (p_ids ,i_sysid )
call	29:21	29:51	10	CheckSystemID
arg	29:36	29:41	11	p_ids
water	29:36	0:0	12	p_ids
arg	29:43	29:51	11	i_sysid
water	29:43	0:0	12	i_sysid
stmts	30:16	35:16	9	
water	30:16	0:0	10	{
water	31:20	0:0	10	p_data
op	31:26	0:0	10	[
water	31:27	0:0	10	i
op	31:28	0:0	10	]
op	31:30	0:0	10	=
water	31:32	0:0	10	0
water	31:33	0:0	10	x9
water	31:35	0:0	10	;
water	32:20	0:0	10	p_data
op	32:26	0:0	10	[
water	32:27	0:0	10	i
op	32:29	0:0	10	+
water	32:31	0:0	10	1
op	32:32	0:0	10	]
op	32:34	0:0	10	=
water	32:36	0:0	10	p_dr
op	32:40	0:0	10	->
water	32:42	0:0	10	i_length
water	32:50	0:0	10	;
call	33:20	33:73	10	memcpy
arg	33:28	33:42	11	&p_data[i+2]
op	33:28	0:0	12	&
water	33:29	0:0	12	p_data
op	33:35	0:0	12	[
water	33:36	0:0	12	i
op	33:38	0:0	12	+
water	33:40	0:0	12	2
op	33:41	0:0	12	]
arg	33:44	33:56	11	p_dr->p_data
water	33:44	0:0	12	p_dr
op	33:48	0:0	12	->
water	33:50	0:0	12	p_data
arg	33:58	33:73	11	p_dr->i_length
water	33:58	0:0	12	p_dr
op	33:62	0:0	12	->
water	33:64	0:0	12	i_length
water	33:74	0:0	10	;
water	34:20	0:0	10	i
op	34:22	0:0	10	+=
water	34:25	0:0	10	p_dr
op	34:29	0:0	10	->
water	34:31	0:0	10	i_length
op	34:40	0:0	10	+
water	34:42	0:0	10	2
water	34:43	0:0	10	;
water	35:16	0:0	10	}
water	36:12	0:0	8	}
water	37:12	0:0	6	p_dr
op	37:17	0:0	6	=
water	37:19	0:0	6	p_dr
op	37:23	0:0	6	->
water	37:25	0:0	6	p_next
water	37:31	0:0	6	;
water	38:8	0:0	6	}
water	39:4	0:0	4	}
else	40:4	44:4	2
stmts	41:4	44:4	3	
water	41:4	0:0	4	{
water	42:8	0:0	4	p_data
op	42:14	0:0	4	[
water	42:15	0:0	4	i
op	42:17	0:0	4	+
water	42:19	0:0	4	3
op	42:20	0:0	4	]
op	42:22	0:0	4	=
water	42:24	0:0	4	0
water	42:25	0:0	4	;
water	43:8	0:0	4	p_data
op	43:14	0:0	4	[
water	43:15	0:0	4	i
op	43:17	0:0	4	+
water	43:19	0:0	4	4
op	43:20	0:0	4	]
op	43:22	0:0	4	=
water	43:24	0:0	4	0
water	43:25	0:0	4	;
water	44:4	0:0	4	}
return	45:4	45:17	2	p_data
water	45:11	0:0	3	p_data

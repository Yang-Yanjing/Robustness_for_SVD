func	2:0	83:0	0	static int	OpenCommon
params	2:21	0:0	1	
param	2:23	2:43	2	vlc_object_t *	p_this
param	2:45	2:63	2	bool	b_packetizer
stmnts	0:0	82:22	1	
decl	4:4	4:41	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:24	2	decoder_sys_t	*p_sys
decl	6:4	6:14	2	int	i_type
decl	7:4	7:21	2	int	i_header_size
switch	8:4	32:4	2	(p_dec -> fmt_in . i_codec)
cond	8:12	8:26	3	p_dec -> fmt_in . i_codec
water	8:12	0:0	4	p_dec
op	8:17	0:0	4	->
water	8:19	0:0	4	fmt_in
op	8:25	0:0	4	.
water	8:26	0:0	4	i_codec
stmts	9:4	32:4	3	
water	9:4	0:0	4	{
label	11:4	11:27	4	case VLC_CODEC_DVD_LPCM :
water	12:8	0:0	4	i_type
op	12:15	0:0	4	=
water	12:17	0:0	4	LPCM_VOB
water	12:25	0:0	4	;
water	13:8	0:0	4	i_header_size
op	13:22	0:0	4	=
water	13:24	0:0	4	LPCM_VOB_HEADER_LEN
water	13:43	0:0	4	;
break	14:8	14:13	4	
label	16:4	16:28	4	case VLC_CODEC_DVDA_LPCM :
water	17:8	0:0	4	i_type
op	17:15	0:0	4	=
water	17:17	0:0	4	LPCM_AOB
water	17:25	0:0	4	;
water	18:8	0:0	4	i_header_size
op	18:22	0:0	4	=
water	18:24	0:0	4	LPCM_AOB_HEADER_LEN
water	18:43	0:0	4	;
break	19:8	19:13	4	
label	21:4	21:26	4	case VLC_CODEC_BD_LPCM :
water	22:8	0:0	4	i_type
op	22:15	0:0	4	=
water	22:17	0:0	4	LPCM_BD
water	22:24	0:0	4	;
water	23:8	0:0	4	i_header_size
op	23:22	0:0	4	=
water	23:24	0:0	4	LPCM_BD_HEADER_LEN
water	23:42	0:0	4	;
break	24:8	24:13	4	
label	26:4	26:28	4	case VLC_CODEC_WIDI_LPCM :
water	27:8	0:0	4	i_type
op	27:15	0:0	4	=
water	27:17	0:0	4	LPCM_WIDI
water	27:26	0:0	4	;
water	28:8	0:0	4	i_header_size
op	28:22	0:0	4	=
water	28:24	0:0	4	LPCM_WIDI_HEADER_LEN
water	28:44	0:0	4	;
break	29:8	29:13	4	
label	30:4	30:11	4	default :
return	31:8	31:27	4	VLC_EGENERIC
water	31:15	0:0	5	VLC_EGENERIC
water	32:4	0:0	4	}
if	34:4	35:25	2	(( p_dec -> p_sys = p_sys =malloc (sizeof ( decoder_sys_t ) ) ) == NULL)
cond	34:8	34:68	3	( p_dec -> p_sys = p_sys =malloc (sizeof ( decoder_sys_t ) ) ) == NULL
water	34:8	0:0	4	(
water	34:10	0:0	4	p_dec
op	34:15	0:0	4	->
water	34:17	0:0	4	p_sys
op	34:23	0:0	4	=
water	34:25	0:0	4	p_sys
op	34:31	0:0	4	=
call	34:33	34:61	4	malloc
arg	34:40	34:61	5	sizeof(decoder_sys_t)
op	34:40	0:0	6	sizeof
water	34:46	0:0	6	(
water	34:47	0:0	6	decoder_sys_t
water	34:60	0:0	6	)
water	34:63	0:0	4	)
op	34:65	0:0	4	==
water	34:68	0:0	4	NULL
stmts	35:8	35:25	3	
return	35:8	35:25	4	VLC_ENOMEM
water	35:15	0:0	5	VLC_ENOMEM
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	b_packetizer
op	37:24	0:0	2	=
water	37:26	0:0	2	b_packetizer
water	37:38	0:0	2	;
call	38:4	38:34	2	date_Set
arg	38:14	38:30	3	&p_sys->end_date
op	38:14	0:0	4	&
water	38:15	0:0	4	p_sys
op	38:20	0:0	4	->
water	38:22	0:0	4	end_date
arg	38:32	38:34	3	0
water	38:32	0:0	4	0
water	38:35	0:0	2	;
water	39:4	0:0	2	p_sys
op	39:9	0:0	2	->
water	39:11	0:0	2	i_type
op	39:18	0:0	2	=
water	39:20	0:0	2	i_type
water	39:26	0:0	2	;
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	i_header_size
op	40:25	0:0	2	=
water	40:27	0:0	2	i_header_size
water	40:40	0:0	2	;
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	i_chans_to_reorder
op	41:30	0:0	2	=
water	41:32	0:0	2	0
water	41:33	0:0	2	;
water	43:4	0:0	2	p_dec
op	43:9	0:0	2	->
water	43:11	0:0	2	fmt_out
op	43:18	0:0	2	.
water	43:19	0:0	2	i_cat
op	43:25	0:0	2	=
water	43:27	0:0	2	AUDIO_ES
water	43:35	0:0	2	;
if	44:4	63:4	2	(b_packetizer)
cond	44:8	44:8	3	b_packetizer
water	44:8	0:0	4	b_packetizer
stmts	45:4	63:4	3	
water	45:4	0:0	4	{
switch	46:8	62:8	4	(i_type)
cond	46:16	46:16	5	i_type
water	46:16	0:0	6	i_type
stmts	47:8	62:8	5	
water	47:8	0:0	6	{
label	48:8	48:21	6	case LPCM_VOB :
water	49:12	0:0	6	p_dec
op	49:17	0:0	6	->
water	49:19	0:0	6	fmt_out
op	49:26	0:0	6	.
water	49:27	0:0	6	i_codec
op	49:35	0:0	6	=
water	49:37	0:0	6	VLC_CODEC_DVD_LPCM
water	49:55	0:0	6	;
break	50:12	50:17	6	
label	51:8	51:21	6	case LPCM_AOB :
water	52:12	0:0	6	p_dec
op	52:17	0:0	6	->
water	52:19	0:0	6	fmt_out
op	52:26	0:0	6	.
water	52:27	0:0	6	i_codec
op	52:35	0:0	6	=
water	52:37	0:0	6	VLC_CODEC_DVDA_LPCM
water	52:56	0:0	6	;
break	53:12	53:17	6	
label	54:8	54:22	6	case LPCM_WIDI :
water	55:12	0:0	6	p_dec
op	55:17	0:0	6	->
water	55:19	0:0	6	fmt_out
op	55:26	0:0	6	.
water	55:27	0:0	6	i_codec
op	55:35	0:0	6	=
water	55:37	0:0	6	VLC_CODEC_WIDI_LPCM
water	55:56	0:0	6	;
break	56:12	56:17	6	
label	57:8	57:15	6	default :
call	58:12	58:20	6	assert
arg	58:19	58:20	7	0
water	58:19	0:0	8	0
water	58:21	0:0	6	;
label	59:8	59:20	6	case LPCM_BD :
water	60:12	0:0	6	p_dec
op	60:17	0:0	6	->
water	60:19	0:0	6	fmt_out
op	60:26	0:0	6	.
water	60:27	0:0	6	i_codec
op	60:35	0:0	6	=
water	60:37	0:0	6	VLC_CODEC_BD_LPCM
water	60:54	0:0	6	;
break	61:12	61:17	6	
water	62:8	0:0	6	}
water	63:4	0:0	4	}
else	64:4	78:4	2
stmts	65:4	78:4	3	
water	65:4	0:0	4	{
switch	66:8	77:8	4	(p_dec -> fmt_out . audio . i_bitspersample)
cond	66:16	66:37	5	p_dec -> fmt_out . audio . i_bitspersample
water	66:16	0:0	6	p_dec
op	66:21	0:0	6	->
water	66:23	0:0	6	fmt_out
op	66:30	0:0	6	.
water	66:31	0:0	6	audio
op	66:36	0:0	6	.
water	66:37	0:0	6	i_bitspersample
stmts	67:8	77:8	5	
water	67:8	0:0	6	{
label	68:8	68:15	6	case 24 :
label	69:8	69:15	6	case 20 :
water	70:12	0:0	6	p_dec
op	70:17	0:0	6	->
water	70:19	0:0	6	fmt_out
op	70:26	0:0	6	.
water	70:27	0:0	6	i_codec
op	70:35	0:0	6	=
water	70:37	0:0	6	VLC_CODEC_S32N
water	70:51	0:0	6	;
water	71:12	0:0	6	p_dec
op	71:17	0:0	6	->
water	71:19	0:0	6	fmt_out
op	71:26	0:0	6	.
water	71:27	0:0	6	audio
op	71:32	0:0	6	.
water	71:33	0:0	6	i_bitspersample
op	71:49	0:0	6	=
water	71:51	0:0	6	32
water	71:53	0:0	6	;
break	72:12	72:17	6	
label	73:8	73:15	6	default :
water	74:12	0:0	6	p_dec
op	74:17	0:0	6	->
water	74:19	0:0	6	fmt_out
op	74:26	0:0	6	.
water	74:27	0:0	6	i_codec
op	74:35	0:0	6	=
water	74:37	0:0	6	VLC_CODEC_S16N
water	74:51	0:0	6	;
water	75:12	0:0	6	p_dec
op	75:17	0:0	6	->
water	75:19	0:0	6	fmt_out
op	75:26	0:0	6	.
water	75:27	0:0	6	audio
op	75:32	0:0	6	.
water	75:33	0:0	6	i_bitspersample
op	75:49	0:0	6	=
water	75:51	0:0	6	16
water	75:53	0:0	6	;
break	76:12	76:17	6	
water	77:8	0:0	6	}
water	78:4	0:0	4	}
water	80:4	0:0	2	p_dec
op	80:9	0:0	2	->
water	80:11	0:0	2	pf_decode_audio
op	80:27	0:0	2	=
water	80:29	0:0	2	DecodeFrame
water	80:40	0:0	2	;
water	81:4	0:0	2	p_dec
op	81:9	0:0	2	->
water	81:11	0:0	2	pf_packetize
op	81:27	0:0	2	=
water	81:29	0:0	2	DecodeFrame
water	81:40	0:0	2	;
return	82:4	82:22	2	VLC_SUCCESS
water	82:11	0:0	3	VLC_SUCCESS

func	2:0	14:0	0	static int	Filter
params	2:17	0:0	1	
param	2:19	2:47	2	video_splitter_t *	p_splitter
param	3:19	3:38	2	picture_t *	pp_dst[]
param	3:40	3:57	2	picture_t *	p_src
stmnts	5:4	13:22	1	
if	5:4	9:4	2	(video_splitter_NewPicture (p_splitter ,pp_dst ))
cond	5:8	5:54	3	video_splitter_NewPicture (p_splitter ,pp_dst )
call	5:8	5:54	4	video_splitter_NewPicture
arg	5:35	5:45	5	p_splitter
water	5:35	0:0	6	p_splitter
arg	5:47	5:54	5	pp_dst
water	5:47	0:0	6	pp_dst
stmts	6:4	9:4	3	
water	6:4	0:0	4	{
call	7:8	7:31	4	picture_Release
arg	7:25	7:31	5	p_src
water	7:25	0:0	6	p_src
water	7:32	0:0	4	;
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
water	9:4	0:0	4	}
for	10:4	11:40	2	( int i = 0 ;i < p_splitter -> i_output;i ++)
forinit	0:0	10:18	3	 int i = 0 ;
decl	10:9	10:18	4	int	i
op	10:15	0:0	4	=
water	10:17	0:0	4	0
cond	10:20	10:36	3	i < p_splitter -> i_output
water	10:20	0:0	4	i
op	10:22	0:0	4	<
water	10:24	0:0	4	p_splitter
op	10:34	0:0	4	->
water	10:36	0:0	4	i_output
forexpr	10:46	10:47	3	i ++
water	10:46	0:0	4	i
op	10:47	0:0	4	++
stmts	11:8	11:40	3	
call	11:8	11:39	4	picture_Copy
arg	11:22	11:31	5	pp_dst[i]
water	11:22	0:0	6	pp_dst
op	11:28	0:0	6	[
water	11:29	0:0	6	i
op	11:30	0:0	6	]
arg	11:33	11:39	5	p_src
water	11:33	0:0	6	p_src
water	11:40	0:0	4	;
call	12:4	12:27	2	picture_Release
arg	12:21	12:27	3	p_src
water	12:21	0:0	4	p_src
water	12:28	0:0	2	;
return	13:4	13:22	2	VLC_SUCCESS
water	13:11	0:0	3	VLC_SUCCESS

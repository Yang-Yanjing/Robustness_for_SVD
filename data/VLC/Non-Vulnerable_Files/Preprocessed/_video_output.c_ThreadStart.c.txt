func	2:0	47:0	0	static int	ThreadStart
params	2:22	0:0	1	
param	2:23	2:42	2	vout_thread_t *	vout
param	2:44	2:77	2	const vout_display_state_t *	state
stmnts	4:4	46:22	1	
call	4:4	4:34	2	vlc_mouse_Init
arg	4:19	4:34	3	&vout->p->mouse
op	4:19	0:0	4	&
water	4:20	0:0	4	vout
op	4:24	0:0	4	->
water	4:26	0:0	4	p
op	4:27	0:0	4	->
water	4:29	0:0	4	mouse
water	4:35	0:0	2	;
water	5:4	0:0	2	vout
op	5:8	0:0	2	->
water	5:10	0:0	2	p
op	5:11	0:0	2	->
water	5:13	0:0	2	decoder_fifo
op	5:26	0:0	2	=
call	5:28	5:45	2	picture_fifo_New
water	5:46	0:0	2	;
water	6:4	0:0	2	vout
op	6:8	0:0	2	->
water	6:10	0:0	2	p
op	6:11	0:0	2	->
water	6:13	0:0	2	decoder_pool
op	6:26	0:0	2	=
water	6:28	0:0	2	NULL
water	6:32	0:0	2	;
water	7:4	0:0	2	vout
op	7:8	0:0	2	->
water	7:10	0:0	2	p
op	7:11	0:0	2	->
water	7:13	0:0	2	display_pool
op	7:26	0:0	2	=
water	7:28	0:0	2	NULL
water	7:32	0:0	2	;
water	8:4	0:0	2	vout
op	8:8	0:0	2	->
water	8:10	0:0	2	p
op	8:11	0:0	2	->
water	8:13	0:0	2	private_pool
op	8:26	0:0	2	=
water	8:28	0:0	2	NULL
water	8:32	0:0	2	;
water	9:4	0:0	2	vout
op	9:8	0:0	2	->
water	9:10	0:0	2	p
op	9:11	0:0	2	->
water	9:13	0:0	2	filter
op	9:19	0:0	2	.
water	9:20	0:0	2	configuration
op	9:34	0:0	2	=
water	9:36	0:0	2	NULL
water	9:40	0:0	2	;
call	10:4	10:65	2	video_format_Copy
arg	10:22	10:45	3	&vout->p->filter.format
op	10:22	0:0	4	&
water	10:23	0:0	4	vout
op	10:27	0:0	4	->
water	10:29	0:0	4	p
op	10:30	0:0	4	->
water	10:32	0:0	4	filter
op	10:38	0:0	4	.
water	10:39	0:0	4	format
arg	10:47	10:65	3	&vout->p->original
op	10:47	0:0	4	&
water	10:48	0:0	4	vout
op	10:52	0:0	4	->
water	10:54	0:0	4	p
op	10:55	0:0	4	->
water	10:57	0:0	4	original
water	10:66	0:0	2	;
water	11:4	0:0	2	vout
op	11:8	0:0	2	->
water	11:10	0:0	2	p
op	11:11	0:0	2	->
water	11:13	0:0	2	filter
op	11:19	0:0	2	.
water	11:20	0:0	2	chain_static
op	11:33	0:0	2	=
call	12:8	13:74	2	filter_chain_New
arg	12:26	12:30	3	vout
water	12:26	0:0	4	vout
arg	12:32	12:47	3	"video filter2"
water	12:32	0:0	4	"video filter2"
arg	12:49	12:53	3	true
water	12:49	0:0	4	true
arg	13:26	13:62	3	VoutVideoFilterStaticAllocationSetup
water	13:26	0:0	4	VoutVideoFilterStaticAllocationSetup
arg	13:64	13:68	3	NULL
water	13:64	0:0	4	NULL
arg	13:70	13:74	3	vout
water	13:70	0:0	4	vout
water	13:75	0:0	2	;
water	14:4	0:0	2	vout
op	14:8	0:0	2	->
water	14:10	0:0	2	p
op	14:11	0:0	2	->
water	14:13	0:0	2	filter
op	14:19	0:0	2	.
water	14:20	0:0	2	chain_interactive
op	14:38	0:0	2	=
call	15:8	16:79	2	filter_chain_New
arg	15:26	15:30	3	vout
water	15:26	0:0	4	vout
arg	15:32	15:47	3	"video filter2"
water	15:32	0:0	4	"video filter2"
arg	15:49	15:53	3	true
water	15:49	0:0	4	true
arg	16:26	16:67	3	VoutVideoFilterInteractiveAllocationSetup
water	16:26	0:0	4	VoutVideoFilterInteractiveAllocationSetup
arg	16:69	16:73	3	NULL
water	16:69	0:0	4	NULL
arg	16:75	16:79	3	vout
water	16:75	0:0	4	vout
water	16:80	0:0	2	;
decl	17:4	17:38	2	vout_display_state_t	state_default
if	18:4	29:4	2	(! state)
cond	18:8	18:9	3	! state
op	18:8	0:0	4	!
water	18:9	0:0	4	state
stmts	18:16	29:4	3	
water	18:16	0:0	4	{
call	19:8	19:74	4	var_Create
arg	19:19	19:23	5	vout
water	19:19	0:0	6	vout
arg	19:25	19:42	5	"video-wallpaper"
water	19:25	0:0	6	"video-wallpaper"
arg	19:44	19:74	5	VLC_VAR_BOOL|VLC_VAR_DOINHERIT
water	19:44	0:0	6	VLC_VAR_BOOL
op	19:56	0:0	6	|
water	19:57	0:0	6	VLC_VAR_DOINHERIT
water	19:75	0:0	4	;
call	20:8	20:74	4	VoutGetDisplayCfg
arg	20:26	20:30	5	vout
water	20:26	0:0	6	vout
arg	20:32	20:50	5	&state_default.cfg
op	20:32	0:0	6	&
water	20:33	0:0	6	state_default
op	20:46	0:0	6	.
water	20:47	0:0	6	cfg
arg	20:52	20:74	5	vout->p->display.title
water	20:52	0:0	6	vout
op	20:56	0:0	6	->
water	20:58	0:0	6	p
op	20:59	0:0	6	->
water	20:61	0:0	6	display
op	20:68	0:0	6	.
water	20:69	0:0	6	title
water	20:75	0:0	4	;
decl	21:8	21:61	4	bool	below
op	21:19	0:0	4	=
call	21:21	21:60	5	var_InheritBool
arg	21:37	21:41	6	vout
water	21:37	0:0	7	vout
arg	21:43	21:60	6	"video-wallpaper"
water	21:43	0:0	7	"video-wallpaper"
decl	22:8	22:60	4	bool	above
op	22:19	0:0	4	=
call	22:21	22:59	5	var_CreateGetBool
arg	22:39	22:43	6	vout
water	22:39	0:0	7	vout
arg	22:45	22:59	6	"video-on-top"
water	22:45	0:0	7	"video-on-top"
water	23:8	0:0	4	state_default
op	23:21	0:0	4	.
water	23:22	0:0	4	wm_state
op	23:31	0:0	4	=
water	23:33	0:0	4	below
water	23:39	0:0	4	?
water	23:41	0:0	4	VOUT_WINDOW_STATE_BELOW
water	24:31	0:0	4	:
water	24:33	0:0	4	above
water	24:39	0:0	4	?
water	24:41	0:0	4	VOUT_WINDOW_STATE_ABOVE
water	25:31	0:0	4	:
water	25:33	0:0	4	VOUT_WINDOW_STATE_NORMAL
water	25:57	0:0	4	;
water	26:8	0:0	4	state_default
op	26:21	0:0	4	.
water	26:22	0:0	4	sar
op	26:25	0:0	4	.
water	26:26	0:0	4	num
op	26:30	0:0	4	=
water	26:32	0:0	4	0
water	26:33	0:0	4	;
water	27:8	0:0	4	state_default
op	27:21	0:0	4	.
water	27:22	0:0	4	sar
op	27:25	0:0	4	.
water	27:26	0:0	4	den
op	27:30	0:0	4	=
water	27:32	0:0	4	0
water	27:33	0:0	4	;
water	28:8	0:0	4	state
op	28:14	0:0	4	=
op	28:16	0:0	4	&
water	28:17	0:0	4	state_default
water	28:30	0:0	4	;
water	29:4	0:0	4	}
if	30:4	31:27	2	(vout_OpenWrapper (vout ,vout -> p -> splitter_name ,state ))
cond	30:8	30:60	3	vout_OpenWrapper (vout ,vout -> p -> splitter_name ,state )
call	30:8	30:60	4	vout_OpenWrapper
arg	30:25	30:29	5	vout
water	30:25	0:0	6	vout
arg	30:31	30:53	5	vout->p->splitter_name
water	30:31	0:0	6	vout
op	30:35	0:0	6	->
water	30:37	0:0	6	p
op	30:38	0:0	6	->
water	30:40	0:0	6	splitter_name
arg	30:55	30:60	5	state
water	30:55	0:0	6	state
stmts	31:8	31:27	3	
return	31:8	31:27	4	VLC_EGENERIC
water	31:15	0:0	5	VLC_EGENERIC
if	32:4	33:27	2	(vout_InitWrapper (vout ))
cond	32:8	32:29	3	vout_InitWrapper (vout )
call	32:8	32:29	4	vout_InitWrapper
arg	32:25	32:29	5	vout
water	32:25	0:0	6	vout
stmts	33:8	33:27	3	
return	33:8	33:27	4	VLC_EGENERIC
water	33:15	0:0	5	VLC_EGENERIC
call	34:4	34:32	2	assert
arg	34:11	34:32	3	vout->p->decoder_pool
water	34:11	0:0	4	vout
op	34:15	0:0	4	->
water	34:17	0:0	4	p
op	34:18	0:0	4	->
water	34:20	0:0	4	decoder_pool
water	34:33	0:0	2	;
water	35:4	0:0	2	vout
op	35:8	0:0	2	->
water	35:10	0:0	2	p
op	35:11	0:0	2	->
water	35:13	0:0	2	displayed
op	35:22	0:0	2	.
water	35:23	0:0	2	current
op	35:37	0:0	2	=
water	35:39	0:0	2	NULL
water	35:43	0:0	2	;
water	36:4	0:0	2	vout
op	36:8	0:0	2	->
water	36:10	0:0	2	p
op	36:11	0:0	2	->
water	36:13	0:0	2	displayed
op	36:22	0:0	2	.
water	36:23	0:0	2	next
op	36:37	0:0	2	=
water	36:39	0:0	2	NULL
water	36:43	0:0	2	;
water	37:4	0:0	2	vout
op	37:8	0:0	2	->
water	37:10	0:0	2	p
op	37:11	0:0	2	->
water	37:13	0:0	2	displayed
op	37:22	0:0	2	.
water	37:23	0:0	2	decoded
op	37:37	0:0	2	=
water	37:39	0:0	2	NULL
water	37:43	0:0	2	;
water	38:4	0:0	2	vout
op	38:8	0:0	2	->
water	38:10	0:0	2	p
op	38:11	0:0	2	->
water	38:13	0:0	2	displayed
op	38:22	0:0	2	.
water	38:23	0:0	2	date
op	38:37	0:0	2	=
water	38:39	0:0	2	VLC_TS_INVALID
water	38:53	0:0	2	;
water	39:4	0:0	2	vout
op	39:8	0:0	2	->
water	39:10	0:0	2	p
op	39:11	0:0	2	->
water	39:13	0:0	2	displayed
op	39:22	0:0	2	.
water	39:23	0:0	2	timestamp
op	39:37	0:0	2	=
water	39:39	0:0	2	VLC_TS_INVALID
water	39:53	0:0	2	;
water	40:4	0:0	2	vout
op	40:8	0:0	2	->
water	40:10	0:0	2	p
op	40:11	0:0	2	->
water	40:13	0:0	2	displayed
op	40:22	0:0	2	.
water	40:23	0:0	2	is_interlaced
op	40:37	0:0	2	=
water	40:39	0:0	2	false
water	40:44	0:0	2	;
water	41:4	0:0	2	vout
op	41:8	0:0	2	->
water	41:10	0:0	2	p
op	41:11	0:0	2	->
water	41:13	0:0	2	step
op	41:17	0:0	2	.
water	41:18	0:0	2	last
op	41:37	0:0	2	=
water	41:39	0:0	2	VLC_TS_INVALID
water	41:53	0:0	2	;
water	42:4	0:0	2	vout
op	42:8	0:0	2	->
water	42:10	0:0	2	p
op	42:11	0:0	2	->
water	42:13	0:0	2	step
op	42:17	0:0	2	.
water	42:18	0:0	2	timestamp
op	42:37	0:0	2	=
water	42:39	0:0	2	VLC_TS_INVALID
water	42:53	0:0	2	;
water	43:4	0:0	2	vout
op	43:8	0:0	2	->
water	43:10	0:0	2	p
op	43:11	0:0	2	->
water	43:13	0:0	2	spu_blend_chroma
op	43:37	0:0	2	=
water	43:39	0:0	2	0
water	43:40	0:0	2	;
water	44:4	0:0	2	vout
op	44:8	0:0	2	->
water	44:10	0:0	2	p
op	44:11	0:0	2	->
water	44:13	0:0	2	spu_blend
op	44:37	0:0	2	=
water	44:39	0:0	2	NULL
water	44:43	0:0	2	;
call	45:4	45:78	2	video_format_Print
arg	45:23	45:39	3	VLC_OBJECT(vout)
call	45:23	45:38	4	VLC_OBJECT
arg	45:34	45:38	5	vout
water	45:34	0:0	6	vout
arg	45:41	45:58	3	"original format"
water	45:41	0:0	4	"original format"
arg	45:60	45:78	3	&vout->p->original
op	45:60	0:0	4	&
water	45:61	0:0	4	vout
op	45:65	0:0	4	->
water	45:67	0:0	4	p
op	45:68	0:0	4	->
water	45:70	0:0	4	original
water	45:79	0:0	2	;
return	46:4	46:22	2	VLC_SUCCESS
water	46:11	0:0	3	VLC_SUCCESS

func	2:0	60:0	0	static block_t *	Block
params	2:21	0:0	1	
param	2:23	2:42	2	access_t *	p_access
stmnts	0:0	59:15	1	
decl	4:4	4:41	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_access
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
water	5:4	0:0	2	const
water	5:10	0:0	2	unsigned
water	5:19	0:0	2	i_packet_min
op	5:32	0:0	2	=
water	5:34	0:0	2	p_sys
op	5:39	0:0	2	->
water	5:41	0:0	2	asfh
op	5:45	0:0	2	.
water	5:46	0:0	2	i_min_data_packet_size
water	5:68	0:0	2	;
if	6:4	16:4	2	(p_access -> info . i_pos < p_sys -> i_start + p_sys -> i_header)
cond	6:8	6:55	3	p_access -> info . i_pos < p_sys -> i_start + p_sys -> i_header
water	6:8	0:0	4	p_access
op	6:16	0:0	4	->
water	6:18	0:0	4	info
op	6:22	0:0	4	.
water	6:23	0:0	4	i_pos
op	6:29	0:0	4	<
water	6:31	0:0	4	p_sys
op	6:36	0:0	4	->
water	6:38	0:0	4	i_start
op	6:46	0:0	4	+
water	6:48	0:0	4	p_sys
op	6:53	0:0	4	->
water	6:55	0:0	4	i_header
stmts	7:4	16:4	3	
water	7:4	0:0	4	{
decl	8:8	8:69	4	const size_t	i_offset
op	8:30	0:0	4	=
water	8:32	0:0	4	p_access
op	8:40	0:0	4	->
water	8:42	0:0	4	info
op	8:46	0:0	4	.
water	8:47	0:0	4	i_pos
op	8:53	0:0	4	-
water	8:55	0:0	4	p_sys
op	8:60	0:0	4	->
water	8:62	0:0	4	i_start
decl	9:8	9:56	4	const size_t	i_copy
op	9:28	0:0	4	=
water	9:30	0:0	4	p_sys
op	9:35	0:0	4	->
water	9:37	0:0	4	i_header
op	9:46	0:0	4	-
water	9:48	0:0	4	i_offset
decl	10:8	10:48	4	block_t	*p_block
op	10:25	0:0	4	=
call	10:27	10:47	5	block_Alloc
arg	10:40	10:47	6	i_copy
water	10:40	0:0	7	i_copy
if	11:8	12:23	4	(! p_block)
cond	11:12	11:13	5	! p_block
op	11:12	0:0	6	!
water	11:13	0:0	6	p_block
stmts	12:12	12:23	5	
return	12:12	12:23	6	NULL
water	12:19	0:0	7	NULL
call	13:8	13:70	4	memcpy
arg	13:16	13:33	5	p_block->p_buffer
water	13:16	0:0	6	p_block
op	13:23	0:0	6	->
water	13:25	0:0	6	p_buffer
arg	13:35	13:61	5	&p_sys->p_header[i_offset]
op	13:35	0:0	6	&
water	13:36	0:0	6	p_sys
op	13:41	0:0	6	->
water	13:43	0:0	6	p_header
op	13:51	0:0	6	[
water	13:52	0:0	6	i_offset
op	13:60	0:0	6	]
arg	13:63	13:70	5	i_copy
water	13:63	0:0	6	i_copy
water	13:71	0:0	4	;
water	14:8	0:0	4	p_access
op	14:16	0:0	4	->
water	14:18	0:0	4	info
op	14:22	0:0	4	.
water	14:23	0:0	4	i_pos
op	14:29	0:0	4	+=
water	14:32	0:0	4	i_copy
water	14:38	0:0	4	;
return	15:8	15:22	4	p_block
water	15:15	0:0	5	p_block
water	16:4	0:0	4	}
else	17:4	36:4	2
stmts	17:9	36:4	3	
if	17:9	36:4	4	(p_sys -> i_packet_length > 0 && p_sys -> i_packet_used <__MAX (p_sys -> i_packet_length ,i_packet_min ))
cond	17:13	18:80	5	p_sys -> i_packet_length > 0 && p_sys -> i_packet_used <__MAX (p_sys -> i_packet_length ,i_packet_min )
water	17:13	0:0	6	p_sys
op	17:18	0:0	6	->
water	17:20	0:0	6	i_packet_length
op	17:36	0:0	6	>
water	17:38	0:0	6	0
op	17:40	0:0	6	&&
water	18:13	0:0	6	p_sys
op	18:18	0:0	6	->
water	18:20	0:0	6	i_packet_used
op	18:34	0:0	6	<
call	18:36	18:80	6	__MAX
arg	18:43	18:65	7	p_sys->i_packet_length
water	18:43	0:0	8	p_sys
op	18:48	0:0	8	->
water	18:50	0:0	8	i_packet_length
arg	18:67	18:80	7	i_packet_min
water	18:67	0:0	8	i_packet_min
stmts	19:4	36:4	5	
water	19:4	0:0	6	{
decl	20:8	20:25	6	size_t	i_copy
op	20:22	0:0	6	=
water	20:24	0:0	6	0
decl	21:8	21:28	6	size_t	i_padding
op	21:25	0:0	6	=
water	21:27	0:0	6	0
if	22:8	23:66	6	(p_sys -> i_packet_used < p_sys -> i_packet_length)
cond	22:12	22:42	7	p_sys -> i_packet_used < p_sys -> i_packet_length
water	22:12	0:0	8	p_sys
op	22:17	0:0	8	->
water	22:19	0:0	8	i_packet_used
op	22:33	0:0	8	<
water	22:35	0:0	8	p_sys
op	22:40	0:0	8	->
water	22:42	0:0	8	i_packet_length
stmts	23:12	23:66	7	
water	23:12	0:0	8	i_copy
op	23:19	0:0	8	=
water	23:21	0:0	8	p_sys
op	23:26	0:0	8	->
water	23:28	0:0	8	i_packet_length
op	23:44	0:0	8	-
water	23:46	0:0	8	p_sys
op	23:51	0:0	8	->
water	23:53	0:0	8	i_packet_used
water	23:66	0:0	8	;
if	24:8	25:92	6	(__MAX (p_sys -> i_packet_used ,p_sys -> i_packet_length ) < i_packet_min)
cond	24:12	24:68	7	__MAX (p_sys -> i_packet_used ,p_sys -> i_packet_length ) < i_packet_min
call	24:12	24:64	8	__MAX
arg	24:19	24:39	9	p_sys->i_packet_used
water	24:19	0:0	10	p_sys
op	24:24	0:0	10	->
water	24:26	0:0	10	i_packet_used
arg	24:41	24:64	9	p_sys->i_packet_length
water	24:41	0:0	10	p_sys
op	24:46	0:0	10	->
water	24:48	0:0	10	i_packet_length
op	24:66	0:0	8	<
water	24:68	0:0	8	i_packet_min
stmts	25:12	25:92	7	
water	25:12	0:0	8	i_padding
op	25:22	0:0	8	=
water	25:24	0:0	8	i_packet_min
op	25:37	0:0	8	-
call	25:39	25:91	8	__MAX
arg	25:46	25:66	9	p_sys->i_packet_used
water	25:46	0:0	10	p_sys
op	25:51	0:0	10	->
water	25:53	0:0	10	i_packet_used
arg	25:68	25:91	9	p_sys->i_packet_length
water	25:68	0:0	10	p_sys
op	25:73	0:0	10	->
water	25:75	0:0	10	i_packet_length
water	25:92	0:0	8	;
decl	26:8	26:60	6	block_t	*p_block
op	26:25	0:0	6	=
call	26:27	26:59	7	block_Alloc
arg	26:40	26:59	8	i_copy+i_padding
water	26:40	0:0	9	i_copy
op	26:47	0:0	9	+
water	26:49	0:0	9	i_padding
if	27:8	28:23	6	(! p_block)
cond	27:12	27:13	7	! p_block
op	27:12	0:0	8	!
water	27:13	0:0	8	p_block
stmts	28:12	28:23	7	
return	28:12	28:23	8	NULL
water	28:19	0:0	9	NULL
if	29:8	30:91	6	(i_copy > 0)
cond	29:12	29:21	7	i_copy > 0
water	29:12	0:0	8	i_copy
op	29:19	0:0	8	>
water	29:21	0:0	8	0
stmts	30:12	30:91	7	
call	30:12	30:90	8	memcpy
arg	30:20	30:41	9	&p_block->p_buffer[0]
op	30:20	0:0	10	&
water	30:21	0:0	10	p_block
op	30:28	0:0	10	->
water	30:30	0:0	10	p_buffer
op	30:38	0:0	10	[
water	30:39	0:0	10	0
op	30:40	0:0	10	]
arg	30:43	30:81	9	&p_sys->p_packet[p_sys->i_packet_used]
op	30:43	0:0	10	&
water	30:44	0:0	10	p_sys
op	30:49	0:0	10	->
water	30:51	0:0	10	p_packet
op	30:59	0:0	10	[
water	30:60	0:0	10	p_sys
op	30:65	0:0	10	->
water	30:67	0:0	10	i_packet_used
op	30:80	0:0	10	]
arg	30:83	30:90	9	i_copy
water	30:83	0:0	10	i_copy
water	30:91	0:0	8	;
if	31:8	32:62	6	(i_padding > 0)
cond	31:12	31:24	7	i_padding > 0
water	31:12	0:0	8	i_padding
op	31:22	0:0	8	>
water	31:24	0:0	8	0
stmts	32:12	32:62	7	
call	32:12	32:61	8	memset
arg	32:20	32:46	9	&p_block->p_buffer[i_copy]
op	32:20	0:0	10	&
water	32:21	0:0	10	p_block
op	32:28	0:0	10	->
water	32:30	0:0	10	p_buffer
op	32:38	0:0	10	[
water	32:39	0:0	10	i_copy
op	32:45	0:0	10	]
arg	32:48	32:49	9	0
water	32:48	0:0	10	0
arg	32:51	32:61	9	i_padding
water	32:51	0:0	10	i_padding
water	32:62	0:0	8	;
water	33:8	0:0	6	p_sys
op	33:13	0:0	6	->
water	33:15	0:0	6	i_packet_used
op	33:29	0:0	6	+=
water	33:32	0:0	6	i_copy
op	33:39	0:0	6	+
water	33:41	0:0	6	i_padding
water	33:50	0:0	6	;
water	34:8	0:0	6	p_access
op	34:16	0:0	6	->
water	34:18	0:0	6	info
op	34:22	0:0	6	.
water	34:23	0:0	6	i_pos
op	34:29	0:0	6	+=
water	34:32	0:0	6	i_copy
op	34:39	0:0	6	+
water	34:41	0:0	6	i_padding
water	34:50	0:0	6	;
return	35:8	35:22	6	p_block
water	35:15	0:0	7	p_block
water	36:4	0:0	6	}
decl	37:4	37:14	2	chunk_t	ck
if	38:4	53:4	2	(GetPacket (p_access ,& ck ))
cond	38:8	38:33	3	GetPacket (p_access ,& ck )
call	38:8	38:33	4	GetPacket
arg	38:19	38:27	5	p_access
water	38:19	0:0	6	p_access
arg	38:29	38:33	5	&ck
op	38:29	0:0	6	&
water	38:30	0:0	6	ck
stmts	39:4	53:4	3	
water	39:4	0:0	4	{
decl	40:8	40:22	4	int	i_ret
op	40:18	0:0	4	=
op	40:20	0:0	4	-
water	40:21	0:0	4	1
if	41:8	47:8	4	(p_sys -> b_broadcast)
cond	41:12	41:19	5	p_sys -> b_broadcast
water	41:12	0:0	6	p_sys
op	41:17	0:0	6	->
water	41:19	0:0	6	b_broadcast
stmts	42:8	47:8	5	
water	42:8	0:0	6	{
if	43:12	44:43	6	(( ck . i_type == 0 x4524 ) && ( ck . i_sequence != 0 ))
cond	43:16	43:60	7	( ck . i_type == 0 x4524 ) && ( ck . i_sequence != 0 )
water	43:16	0:0	8	(
water	43:17	0:0	8	ck
op	43:19	0:0	8	.
water	43:20	0:0	8	i_type
op	43:27	0:0	8	==
water	43:30	0:0	8	0
water	43:31	0:0	8	x4524
water	43:36	0:0	8	)
op	43:38	0:0	8	&&
water	43:41	0:0	8	(
water	43:42	0:0	8	ck
op	43:44	0:0	8	.
water	43:45	0:0	8	i_sequence
op	43:56	0:0	8	!=
water	43:59	0:0	8	0
water	43:60	0:0	8	)
stmts	44:16	44:43	7	
water	44:16	0:0	8	i_ret
op	44:22	0:0	8	=
call	44:24	44:42	8	Restart
arg	44:33	44:42	9	p_access
water	44:33	0:0	10	p_access
water	44:43	0:0	8	;
else	45:12	46:41	6
stmts	45:17	46:41	7	
if	45:17	46:41	8	(ck . i_type == 0 x4324)
cond	45:21	45:35	9	ck . i_type == 0 x4324
water	45:21	0:0	10	ck
op	45:23	0:0	10	.
water	45:24	0:0	10	i_type
op	45:31	0:0	10	==
water	45:34	0:0	10	0
water	45:35	0:0	10	x4324
stmts	46:16	46:41	9	
water	46:16	0:0	10	i_ret
op	46:22	0:0	10	=
call	46:24	46:40	10	Reset
arg	46:31	46:40	11	p_access
water	46:31	0:0	12	p_access
water	46:41	0:0	10	;
water	47:8	0:0	6	}
if	48:8	52:8	4	(i_ret)
cond	48:12	48:12	5	i_ret
water	48:12	0:0	6	i_ret
stmts	49:8	52:8	5	
water	49:8	0:0	6	{
water	50:12	0:0	6	p_access
op	50:20	0:0	6	->
water	50:22	0:0	6	info
op	50:26	0:0	6	.
water	50:27	0:0	6	b_eof
op	50:33	0:0	6	=
water	50:35	0:0	6	true
water	50:39	0:0	6	;
return	51:12	51:20	6	0
water	51:19	0:0	7	0
water	52:8	0:0	6	}
water	53:4	0:0	4	}
if	54:4	58:4	2	(ck . i_type != 0 x4424)
cond	54:8	54:22	3	ck . i_type != 0 x4424
water	54:8	0:0	4	ck
op	54:10	0:0	4	.
water	54:11	0:0	4	i_type
op	54:18	0:0	4	!=
water	54:21	0:0	4	0
water	54:22	0:0	4	x4424
stmts	55:4	58:4	3	
water	55:4	0:0	4	{
water	56:8	0:0	4	p_sys
op	56:13	0:0	4	->
water	56:15	0:0	4	i_packet_used
op	56:29	0:0	4	=
water	56:31	0:0	4	0
water	56:32	0:0	4	;
water	57:8	0:0	4	p_sys
op	57:13	0:0	4	->
water	57:15	0:0	4	i_packet_length
op	57:31	0:0	4	=
water	57:33	0:0	4	0
water	57:34	0:0	4	;
water	58:4	0:0	4	}
return	59:4	59:15	2	NULL
water	59:11	0:0	3	NULL

func	2:0	13:0	0	static picture_t *	VideoBufferNew
params	2:32	0:0	1	
param	2:33	2:49	2	filter_t *	filter
stmnts	0:0	12:33	1	
decl	4:4	4:57	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:40	0:0	2	*
water	4:41	0:0	2	)
water	4:42	0:0	2	filter
op	4:48	0:0	2	->
water	4:50	0:0	2	p_owner
decl	5:4	5:54	2	const video_format_t	*fmt
op	5:30	0:0	2	=
op	5:32	0:0	2	&
water	5:33	0:0	2	filter
op	5:39	0:0	2	->
water	5:41	0:0	2	fmt_out
op	5:48	0:0	2	.
water	5:49	0:0	2	video
call	6:4	8:44	2	assert
arg	6:11	8:44	3	vd->fmt.i_chroma==fmt->i_chroma&&vd->fmt.i_width==fmt->i_width&&vd->fmt.i_height==fmt->i_height
water	6:11	0:0	4	vd
op	6:13	0:0	4	->
water	6:15	0:0	4	fmt
op	6:18	0:0	4	.
water	6:19	0:0	4	i_chroma
op	6:28	0:0	4	==
water	6:31	0:0	4	fmt
op	6:34	0:0	4	->
water	6:36	0:0	4	i_chroma
op	6:45	0:0	4	&&
water	7:11	0:0	4	vd
op	7:13	0:0	4	->
water	7:15	0:0	4	fmt
op	7:18	0:0	4	.
water	7:19	0:0	4	i_width
op	7:28	0:0	4	==
water	7:31	0:0	4	fmt
op	7:34	0:0	4	->
water	7:36	0:0	4	i_width
op	7:45	0:0	4	&&
water	8:11	0:0	4	vd
op	8:13	0:0	4	->
water	8:15	0:0	4	fmt
op	8:18	0:0	4	.
water	8:19	0:0	4	i_height
op	8:28	0:0	4	==
water	8:31	0:0	4	fmt
op	8:34	0:0	4	->
water	8:36	0:0	4	i_height
water	8:45	0:0	2	;
decl	9:4	9:51	2	picture_pool_t	*pool
op	9:25	0:0	2	=
call	9:27	9:50	3	vout_display_Pool
arg	9:45	9:47	4	vd
water	9:45	0:0	5	vd
arg	9:49	9:50	4	3
water	9:49	0:0	5	3
if	10:4	11:19	2	(! pool)
cond	10:8	10:9	3	! pool
op	10:8	0:0	4	!
water	10:9	0:0	4	pool
stmts	11:8	11:19	3	
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
return	12:4	12:33	2	picture_pool_Get(pool)
call	12:11	12:32	3	picture_pool_Get
arg	12:28	12:32	4	pool
water	12:28	0:0	5	pool

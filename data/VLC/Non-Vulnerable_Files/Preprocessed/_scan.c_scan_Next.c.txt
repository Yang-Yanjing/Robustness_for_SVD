func	2:0	48:0	0	int	scan_Next
params	2:13	0:0	1	
param	2:15	2:29	2	scan_t *	p_scan
param	2:31	2:59	2	scan_configuration_t *	p_cfg
stmnts	0:0	47:22	1	
decl	4:4	4:21	2	double	f_position
decl	5:4	5:13	2	int	i_ret
if	6:4	7:27	2	(scan_IsCancelled (p_scan ))
cond	6:8	6:33	3	scan_IsCancelled (p_scan )
call	6:8	6:33	4	scan_IsCancelled
arg	6:26	6:33	5	p_scan
water	6:26	0:0	6	p_scan
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
call	8:4	8:37	2	memset
arg	8:12	8:17	3	p_cfg
water	8:12	0:0	4	p_cfg
arg	8:19	8:20	3	0
water	8:19	0:0	4	0
arg	8:22	8:37	3	sizeof(*p_cfg)
op	8:22	0:0	4	sizeof
water	8:28	0:0	4	(
op	8:29	0:0	4	*
water	8:30	0:0	4	p_cfg
water	8:35	0:0	4	)
water	8:38	0:0	2	;
switch	9:4	23:4	2	(p_scan -> parameter . type)
cond	9:12	9:30	3	p_scan -> parameter . type
water	9:12	0:0	4	p_scan
op	9:18	0:0	4	->
water	9:20	0:0	4	parameter
op	9:29	0:0	4	.
water	9:30	0:0	4	type
stmts	10:4	23:4	3	
water	10:4	0:0	4	{
label	11:4	11:19	4	case SCAN_DVB_T :
water	12:8	0:0	4	i_ret
op	12:14	0:0	4	=
call	12:16	12:57	4	ScanDvbTNext
arg	12:30	12:36	5	p_scan
water	12:30	0:0	6	p_scan
arg	12:38	12:43	5	p_cfg
water	12:38	0:0	6	p_cfg
arg	12:45	12:57	5	&f_position
op	12:45	0:0	6	&
water	12:46	0:0	6	f_position
water	12:58	0:0	4	;
break	13:8	13:13	4	
label	14:4	14:19	4	case SCAN_DVB_C :
water	15:8	0:0	4	i_ret
op	15:14	0:0	4	=
call	15:16	15:57	4	ScanDvbCNext
arg	15:30	15:36	5	p_scan
water	15:30	0:0	6	p_scan
arg	15:38	15:43	5	p_cfg
water	15:38	0:0	6	p_cfg
arg	15:45	15:57	5	&f_position
op	15:45	0:0	6	&
water	15:46	0:0	6	f_position
water	15:58	0:0	4	;
break	16:8	16:13	4	
label	17:4	17:19	4	case SCAN_DVB_S :
water	18:8	0:0	4	i_ret
op	18:14	0:0	4	=
call	18:16	18:57	4	ScanDvbSNext
arg	18:30	18:36	5	p_scan
water	18:30	0:0	6	p_scan
arg	18:38	18:43	5	p_cfg
water	18:38	0:0	6	p_cfg
arg	18:45	18:57	5	&f_position
op	18:45	0:0	6	&
water	18:46	0:0	6	f_position
water	18:58	0:0	4	;
break	19:8	19:13	4	
label	20:4	20:11	4	default :
water	21:8	0:0	4	i_ret
op	21:14	0:0	4	=
water	21:16	0:0	4	VLC_EGENERIC
water	21:28	0:0	4	;
break	22:8	22:13	4	
water	23:4	0:0	4	}
if	24:4	25:20	2	(i_ret)
cond	24:8	24:8	3	i_ret
water	24:8	0:0	4	i_ret
stmts	25:8	25:20	3	
return	25:8	25:20	4	i_ret
water	25:15	0:0	5	i_ret
decl	26:4	26:18	2	char	*psz_text
decl	27:4	27:21	2	int	i_service
op	27:18	0:0	2	=
water	27:20	0:0	2	0
for	28:4	32:4	2	( int i = 0 ;i < p_scan -> i_service;i ++)
forinit	0:0	28:18	3	 int i = 0 ;
decl	28:9	28:18	4	int	i
op	28:15	0:0	4	=
water	28:17	0:0	4	0
cond	28:20	28:32	3	i < p_scan -> i_service
water	28:20	0:0	4	i
op	28:22	0:0	4	<
water	28:24	0:0	4	p_scan
op	28:30	0:0	4	->
water	28:32	0:0	4	i_service
forexpr	28:43	28:44	3	i ++
water	28:43	0:0	4	i
op	28:44	0:0	4	++
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
if	30:8	31:23	4	(p_scan -> pp_service [ i ] -> psz_name)
cond	30:12	30:35	5	p_scan -> pp_service [ i ] -> psz_name
water	30:12	0:0	6	p_scan
op	30:18	0:0	6	->
water	30:20	0:0	6	pp_service
op	30:30	0:0	6	[
water	30:31	0:0	6	i
op	30:32	0:0	6	]
op	30:33	0:0	6	->
water	30:35	0:0	6	psz_name
stmts	31:12	31:23	5	
water	31:12	0:0	6	i_service
op	31:21	0:0	6	++
water	31:23	0:0	6	;
water	32:4	0:0	4	}
decl	33:4	33:113	2	const mtime_t	i_eta
op	33:24	0:0	2	=
water	33:26	0:0	2	f_position
op	33:37	0:0	2	>
water	33:39	0:0	2	0
op	33:40	0:0	2	.
water	33:41	0:0	2	005
water	33:45	0:0	2	?
water	33:47	0:0	2	(
call	33:48	33:54	3	mdate
op	33:56	0:0	2	-
water	33:58	0:0	2	p_scan
op	33:64	0:0	2	->
water	33:66	0:0	2	i_time_start
water	33:78	0:0	2	)
op	33:80	0:0	2	*
water	33:82	0:0	2	(
water	33:84	0:0	2	1
op	33:85	0:0	2	.
water	33:86	0:0	2	0
op	33:88	0:0	2	/
water	33:90	0:0	2	f_position
op	33:101	0:0	2	-
water	33:103	0:0	2	1
op	33:104	0:0	2	.
water	33:105	0:0	2	0
water	33:107	0:0	2	)
water	33:109	0:0	2	:
op	33:111	0:0	2	-
water	33:112	0:0	2	1
decl	34:4	34:35	2	char	psz_eta[MSTRTIME_MAX_SIZE]
if	35:4	45:4	2	(asprintf (& psz_text ,_ ("%.1f MHz (%d services)\n~%s remaining" ) ,( double ) p_cfg -> i_frequency / 1000000 ,i_service ,secstotimestr (psz_eta ,i_eta / 1000000 ) ) >= 0)
cond	35:8	36:112	3	asprintf (& psz_text ,_ ("%.1f MHz (%d services)\n~%s remaining" ) ,( double ) p_cfg -> i_frequency / 1000000 ,i_service ,secstotimestr (psz_eta ,i_eta / 1000000 ) ) >= 0
call	35:8	36:107	4	asprintf
arg	35:18	35:27	5	&psz_text
op	35:18	0:0	6	&
water	35:19	0:0	6	psz_text
arg	35:29	35:71	5	_("%.1f MHz (%d services)\n~%s remaining")
call	35:29	35:70	6	_
arg	35:31	35:70	7	"%.1f MHz (%d services)\n~%s remaining"
water	35:31	0:0	8	"%.1f MHz (%d services)\n~%s remaining"
arg	36:18	36:54	5	(double)p_cfg->i_frequency/1000000
water	36:18	0:0	6	(
water	36:19	0:0	6	double
water	36:25	0:0	6	)
water	36:26	0:0	6	p_cfg
op	36:31	0:0	6	->
water	36:33	0:0	6	i_frequency
op	36:45	0:0	6	/
water	36:47	0:0	6	1000000
arg	36:56	36:65	5	i_service
water	36:56	0:0	6	i_service
arg	36:67	36:107	5	secstotimestr(psz_eta,i_eta/1000000)
call	36:67	36:105	6	secstotimestr
arg	36:82	36:89	7	psz_eta
water	36:82	0:0	8	psz_eta
arg	36:91	36:105	7	i_eta/1000000
water	36:91	0:0	8	i_eta
op	36:96	0:0	8	/
water	36:97	0:0	8	1000000
op	36:109	0:0	4	>=
water	36:112	0:0	4	0
stmts	37:4	45:4	3	
water	37:4	0:0	4	{
if	38:8	39:116	4	(i_eta >= 0)
cond	38:12	38:21	5	i_eta >= 0
water	38:12	0:0	6	i_eta
op	38:18	0:0	6	>=
water	38:21	0:0	6	0
stmts	39:12	39:116	5	
call	39:12	39:115	6	msg_Info
arg	39:22	39:35	7	p_scan->p_obj
water	39:22	0:0	8	p_scan
op	39:28	0:0	8	->
water	39:30	0:0	8	p_obj
arg	39:37	39:55	7	"Scan ETA %s | %f"
water	39:37	0:0	8	"Scan ETA %s | %f"
arg	39:57	39:96	7	secstotimestr(psz_eta,i_eta/1000000)
call	39:57	39:95	8	secstotimestr
arg	39:72	39:79	9	psz_eta
water	39:72	0:0	10	psz_eta
arg	39:81	39:95	9	i_eta/1000000
water	39:81	0:0	10	i_eta
op	39:86	0:0	10	/
water	39:87	0:0	10	1000000
arg	39:98	39:115	7	f_position*100
water	39:98	0:0	8	f_position
op	39:109	0:0	8	*
water	39:111	0:0	8	100
water	39:116	0:0	6	;
if	40:8	41:111	4	(p_scan -> p_dialog == NULL)
cond	40:12	40:32	5	p_scan -> p_dialog == NULL
water	40:12	0:0	6	p_scan
op	40:18	0:0	6	->
water	40:20	0:0	6	p_dialog
op	40:29	0:0	6	==
water	40:32	0:0	6	NULL
stmts	41:12	41:111	5	
water	41:12	0:0	6	p_scan
op	41:18	0:0	6	->
water	41:20	0:0	6	p_dialog
op	41:29	0:0	6	=
call	41:31	41:110	6	dialog_ProgressCreate
arg	41:54	41:67	7	p_scan->p_obj
water	41:54	0:0	8	p_scan
op	41:60	0:0	8	->
water	41:62	0:0	8	p_obj
arg	41:69	41:86	7	_("Scanning DVB")
call	41:69	41:85	8	_
arg	41:71	41:85	9	"Scanning DVB"
water	41:71	0:0	10	"Scanning DVB"
arg	41:88	41:96	7	psz_text
water	41:88	0:0	8	psz_text
arg	41:98	41:110	7	_("Cancel")
call	41:98	41:108	8	_
arg	41:100	41:108	9	"Cancel"
water	41:100	0:0	10	"Cancel"
water	41:111	0:0	6	;
if	42:8	43:72	4	(p_scan -> p_dialog != NULL)
cond	42:12	42:32	5	p_scan -> p_dialog != NULL
water	42:12	0:0	6	p_scan
op	42:18	0:0	6	->
water	42:20	0:0	6	p_dialog
op	42:29	0:0	6	!=
water	42:32	0:0	6	NULL
stmts	43:12	43:72	5	
call	43:12	43:71	6	dialog_ProgressSet
arg	43:32	43:48	7	p_scan->p_dialog
water	43:32	0:0	8	p_scan
op	43:38	0:0	8	->
water	43:40	0:0	8	p_dialog
arg	43:50	43:58	7	psz_text
water	43:50	0:0	8	psz_text
arg	43:60	43:71	7	f_position
water	43:60	0:0	8	f_position
water	43:72	0:0	6	;
call	44:8	44:23	4	free
arg	44:14	44:23	5	psz_text
water	44:14	0:0	6	psz_text
water	44:24	0:0	4	;
water	45:4	0:0	4	}
water	46:4	0:0	2	p_scan
op	46:10	0:0	2	->
water	46:12	0:0	2	i_index
op	46:19	0:0	2	++
water	46:21	0:0	2	;
return	47:4	47:22	2	VLC_SUCCESS
water	47:11	0:0	3	VLC_SUCCESS

func	2:0	121:0	0	int	transcode_video_new
params	2:23	0:0	1	
param	2:25	2:48	2	sout_stream_t *	p_stream
param	2:50	2:75	2	sout_stream_id_sys_t *	id
stmnts	0:0	120:22	1	
decl	4:4	4:46	2	sout_stream_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	p_stream
op	4:39	0:0	2	->
water	4:41	0:0	2	p_sys
water	8:4	0:0	2	id
op	8:6	0:0	2	->
water	8:8	0:0	2	p_decoder
op	8:17	0:0	2	->
water	8:19	0:0	2	fmt_out
op	8:27	0:0	2	=
water	8:29	0:0	2	id
op	8:31	0:0	2	->
water	8:33	0:0	2	p_decoder
op	8:42	0:0	2	->
water	8:44	0:0	2	fmt_in
water	8:50	0:0	2	;
water	9:4	0:0	2	id
op	9:6	0:0	2	->
water	9:8	0:0	2	p_decoder
op	9:17	0:0	2	->
water	9:19	0:0	2	fmt_out
op	9:26	0:0	2	.
water	9:27	0:0	2	i_extra
op	9:35	0:0	2	=
water	9:37	0:0	2	0
water	9:38	0:0	2	;
water	10:4	0:0	2	id
op	10:6	0:0	2	->
water	10:8	0:0	2	p_decoder
op	10:17	0:0	2	->
water	10:19	0:0	2	fmt_out
op	10:26	0:0	2	.
water	10:27	0:0	2	p_extra
op	10:35	0:0	2	=
water	10:37	0:0	2	0
water	10:38	0:0	2	;
water	11:4	0:0	2	id
op	11:6	0:0	2	->
water	11:8	0:0	2	p_decoder
op	11:17	0:0	2	->
water	11:19	0:0	2	fmt_out
op	11:26	0:0	2	.
water	11:27	0:0	2	psz_language
op	11:40	0:0	2	=
water	11:42	0:0	2	NULL
water	11:46	0:0	2	;
water	12:4	0:0	2	id
op	12:6	0:0	2	->
water	12:8	0:0	2	p_decoder
op	12:17	0:0	2	->
water	12:19	0:0	2	pf_decode_video
op	12:35	0:0	2	=
water	12:37	0:0	2	NULL
water	12:41	0:0	2	;
water	13:4	0:0	2	id
op	13:6	0:0	2	->
water	13:8	0:0	2	p_decoder
op	13:17	0:0	2	->
water	13:19	0:0	2	pf_get_cc
op	13:29	0:0	2	=
water	13:31	0:0	2	NULL
water	13:35	0:0	2	;
water	14:4	0:0	2	id
op	14:6	0:0	2	->
water	14:8	0:0	2	p_decoder
op	14:17	0:0	2	->
water	14:19	0:0	2	pf_get_cc
op	14:29	0:0	2	=
water	14:31	0:0	2	0
water	14:32	0:0	2	;
water	15:4	0:0	2	id
op	15:6	0:0	2	->
water	15:8	0:0	2	p_decoder
op	15:17	0:0	2	->
water	15:19	0:0	2	pf_vout_buffer_new
op	15:38	0:0	2	=
water	15:40	0:0	2	video_new_buffer_decoder
water	15:64	0:0	2	;
water	16:4	0:0	2	id
op	16:6	0:0	2	->
water	16:8	0:0	2	p_decoder
op	16:17	0:0	2	->
water	16:19	0:0	2	pf_vout_buffer_del
op	16:38	0:0	2	=
water	16:40	0:0	2	video_del_buffer_decoder
water	16:64	0:0	2	;
water	17:4	0:0	2	id
op	17:6	0:0	2	->
water	17:8	0:0	2	p_decoder
op	17:17	0:0	2	->
water	17:19	0:0	2	pf_picture_link
op	17:38	0:0	2	=
water	17:40	0:0	2	video_link_picture_decoder
water	17:66	0:0	2	;
water	18:4	0:0	2	id
op	18:6	0:0	2	->
water	18:8	0:0	2	p_decoder
op	18:17	0:0	2	->
water	18:19	0:0	2	pf_picture_unlink
op	18:38	0:0	2	=
water	18:40	0:0	2	video_unlink_picture_decoder
water	18:68	0:0	2	;
water	19:4	0:0	2	id
op	19:6	0:0	2	->
water	19:8	0:0	2	p_decoder
op	19:17	0:0	2	->
water	19:19	0:0	2	p_owner
op	19:27	0:0	2	=
call	19:29	19:65	2	malloc
arg	19:37	19:65	3	sizeof(decoder_owner_sys_t)
op	19:37	0:0	4	sizeof
water	19:43	0:0	4	(
water	19:44	0:0	4	decoder_owner_sys_t
water	19:63	0:0	4	)
water	19:66	0:0	2	;
if	20:4	21:27	2	(! id -> p_decoder -> p_owner)
cond	20:8	20:24	3	! id -> p_decoder -> p_owner
op	20:8	0:0	4	!
water	20:9	0:0	4	id
op	20:11	0:0	4	->
water	20:13	0:0	4	p_decoder
op	20:22	0:0	4	->
water	20:24	0:0	4	p_owner
stmts	21:8	21:27	3	
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	2	id
op	22:6	0:0	2	->
water	22:8	0:0	2	p_decoder
op	22:17	0:0	2	->
water	22:19	0:0	2	p_owner
op	22:26	0:0	2	->
water	22:28	0:0	2	p_sys
op	22:34	0:0	2	=
water	22:36	0:0	2	p_sys
water	22:41	0:0	2	;
water	24:4	0:0	2	id
op	24:6	0:0	2	->
water	24:8	0:0	2	p_decoder
op	24:17	0:0	2	->
water	24:19	0:0	2	p_module
op	24:28	0:0	2	=
call	25:8	25:63	2	module_need
arg	25:21	25:34	3	id->p_decoder
water	25:21	0:0	4	id
op	25:23	0:0	4	->
water	25:25	0:0	4	p_decoder
arg	25:36	25:45	3	"decoder"
water	25:36	0:0	4	"decoder"
arg	25:47	25:55	3	"$codec"
water	25:47	0:0	4	"$codec"
arg	25:57	25:63	3	false
water	25:57	0:0	4	false
water	25:64	0:0	2	;
if	26:4	31:4	2	(! id -> p_decoder -> p_module)
cond	26:8	26:24	3	! id -> p_decoder -> p_module
op	26:8	0:0	4	!
water	26:9	0:0	4	id
op	26:11	0:0	4	->
water	26:13	0:0	4	p_decoder
op	26:22	0:0	4	->
water	26:24	0:0	4	p_module
stmts	27:4	31:4	3	
water	27:4	0:0	4	{
call	28:8	28:55	4	msg_Err
arg	28:17	28:25	5	p_stream
water	28:17	0:0	6	p_stream
arg	28:27	28:55	5	"cannot find video decoder"
water	28:27	0:0	6	"cannot find video decoder"
water	28:56	0:0	4	;
call	29:8	29:37	4	free
arg	29:14	29:37	5	id->p_decoder->p_owner
water	29:14	0:0	6	id
op	29:16	0:0	6	->
water	29:18	0:0	6	p_decoder
op	29:27	0:0	6	->
water	29:29	0:0	6	p_owner
water	29:38	0:0	4	;
return	30:8	30:27	4	VLC_EGENERIC
water	30:15	0:0	5	VLC_EGENERIC
water	31:4	0:0	4	}
call	39:4	40:51	2	es_format_Init
arg	39:20	39:42	3	&id->p_encoder->fmt_in
op	39:20	0:0	4	&
water	39:21	0:0	4	id
op	39:23	0:0	4	->
water	39:25	0:0	4	p_encoder
op	39:34	0:0	4	->
water	39:36	0:0	4	fmt_in
arg	39:44	39:71	3	id->p_decoder->fmt_in.i_cat
water	39:44	0:0	4	id
op	39:46	0:0	4	->
water	39:48	0:0	4	p_decoder
op	39:57	0:0	4	->
water	39:59	0:0	4	fmt_in
op	39:65	0:0	4	.
water	39:66	0:0	4	i_cat
arg	40:20	40:51	3	id->p_decoder->fmt_out.i_codec
water	40:20	0:0	4	id
op	40:22	0:0	4	->
water	40:24	0:0	4	p_decoder
op	40:33	0:0	4	->
water	40:35	0:0	4	fmt_out
op	40:42	0:0	4	.
water	40:43	0:0	4	i_codec
water	40:52	0:0	2	;
water	41:4	0:0	2	id
op	41:6	0:0	2	->
water	41:8	0:0	2	p_encoder
op	41:17	0:0	2	->
water	41:19	0:0	2	fmt_in
op	41:25	0:0	2	.
water	41:26	0:0	2	video
op	41:31	0:0	2	.
water	41:32	0:0	2	i_chroma
op	41:41	0:0	2	=
water	41:43	0:0	2	id
op	41:45	0:0	2	->
water	41:47	0:0	2	p_decoder
op	41:56	0:0	2	->
water	41:58	0:0	2	fmt_out
op	41:65	0:0	2	.
water	41:66	0:0	2	i_codec
water	41:73	0:0	2	;
water	44:4	0:0	2	id
op	44:6	0:0	2	->
water	44:8	0:0	2	p_encoder
op	44:17	0:0	2	->
water	44:19	0:0	2	fmt_in
op	44:25	0:0	2	.
water	44:26	0:0	2	video
op	44:31	0:0	2	.
water	44:32	0:0	2	i_width
op	44:40	0:0	2	=
water	45:8	0:0	2	id
op	45:10	0:0	2	->
water	45:12	0:0	2	p_encoder
op	45:21	0:0	2	->
water	45:23	0:0	2	fmt_out
op	45:30	0:0	2	.
water	45:31	0:0	2	video
op	45:36	0:0	2	.
water	45:37	0:0	2	i_width
water	46:10	0:0	2	?
water	46:12	0:0	2	id
op	46:14	0:0	2	->
water	46:16	0:0	2	p_encoder
op	46:25	0:0	2	->
water	46:27	0:0	2	fmt_out
op	46:34	0:0	2	.
water	46:35	0:0	2	video
op	46:40	0:0	2	.
water	46:41	0:0	2	i_width
water	47:10	0:0	2	:
water	47:12	0:0	2	id
op	47:14	0:0	2	->
water	47:16	0:0	2	p_decoder
op	47:25	0:0	2	->
water	47:27	0:0	2	fmt_in
op	47:33	0:0	2	.
water	47:34	0:0	2	video
op	47:39	0:0	2	.
water	47:40	0:0	2	i_width
water	48:12	0:0	2	?
water	48:14	0:0	2	id
op	48:16	0:0	2	->
water	48:18	0:0	2	p_decoder
op	48:27	0:0	2	->
water	48:29	0:0	2	fmt_in
op	48:35	0:0	2	.
water	48:36	0:0	2	video
op	48:41	0:0	2	.
water	48:42	0:0	2	i_width
water	48:50	0:0	2	:
water	48:52	0:0	2	16
water	48:54	0:0	2	;
water	49:4	0:0	2	id
op	49:6	0:0	2	->
water	49:8	0:0	2	p_encoder
op	49:17	0:0	2	->
water	49:19	0:0	2	fmt_in
op	49:25	0:0	2	.
water	49:26	0:0	2	video
op	49:31	0:0	2	.
water	49:32	0:0	2	i_height
op	49:41	0:0	2	=
water	50:8	0:0	2	id
op	50:10	0:0	2	->
water	50:12	0:0	2	p_encoder
op	50:21	0:0	2	->
water	50:23	0:0	2	fmt_out
op	50:30	0:0	2	.
water	50:31	0:0	2	video
op	50:36	0:0	2	.
water	50:37	0:0	2	i_height
water	51:10	0:0	2	?
water	51:12	0:0	2	id
op	51:14	0:0	2	->
water	51:16	0:0	2	p_encoder
op	51:25	0:0	2	->
water	51:27	0:0	2	fmt_out
op	51:34	0:0	2	.
water	51:35	0:0	2	video
op	51:40	0:0	2	.
water	51:41	0:0	2	i_height
water	52:10	0:0	2	:
water	52:12	0:0	2	id
op	52:14	0:0	2	->
water	52:16	0:0	2	p_decoder
op	52:25	0:0	2	->
water	52:27	0:0	2	fmt_in
op	52:33	0:0	2	.
water	52:34	0:0	2	video
op	52:39	0:0	2	.
water	52:40	0:0	2	i_height
water	53:12	0:0	2	?
water	53:14	0:0	2	id
op	53:16	0:0	2	->
water	53:18	0:0	2	p_decoder
op	53:27	0:0	2	->
water	53:29	0:0	2	fmt_in
op	53:35	0:0	2	.
water	53:36	0:0	2	video
op	53:41	0:0	2	.
water	53:42	0:0	2	i_height
water	53:51	0:0	2	:
water	53:53	0:0	2	16
water	53:55	0:0	2	;
water	54:4	0:0	2	id
op	54:6	0:0	2	->
water	54:8	0:0	2	p_encoder
op	54:17	0:0	2	->
water	54:19	0:0	2	fmt_in
op	54:25	0:0	2	.
water	54:26	0:0	2	video
op	54:31	0:0	2	.
water	54:32	0:0	2	i_visible_width
op	54:48	0:0	2	=
water	55:8	0:0	2	id
op	55:10	0:0	2	->
water	55:12	0:0	2	p_encoder
op	55:21	0:0	2	->
water	55:23	0:0	2	fmt_out
op	55:30	0:0	2	.
water	55:31	0:0	2	video
op	55:36	0:0	2	.
water	55:37	0:0	2	i_visible_width
water	56:10	0:0	2	?
water	56:12	0:0	2	id
op	56:14	0:0	2	->
water	56:16	0:0	2	p_encoder
op	56:25	0:0	2	->
water	56:27	0:0	2	fmt_out
op	56:34	0:0	2	.
water	56:35	0:0	2	video
op	56:40	0:0	2	.
water	56:41	0:0	2	i_visible_width
water	57:10	0:0	2	:
water	57:12	0:0	2	id
op	57:14	0:0	2	->
water	57:16	0:0	2	p_decoder
op	57:25	0:0	2	->
water	57:27	0:0	2	fmt_in
op	57:33	0:0	2	.
water	57:34	0:0	2	video
op	57:39	0:0	2	.
water	57:40	0:0	2	i_visible_width
water	58:12	0:0	2	?
water	58:14	0:0	2	id
op	58:16	0:0	2	->
water	58:18	0:0	2	p_decoder
op	58:27	0:0	2	->
water	58:29	0:0	2	fmt_in
op	58:35	0:0	2	.
water	58:36	0:0	2	video
op	58:41	0:0	2	.
water	58:42	0:0	2	i_visible_width
water	58:58	0:0	2	:
water	58:60	0:0	2	id
op	58:62	0:0	2	->
water	58:64	0:0	2	p_encoder
op	58:73	0:0	2	->
water	58:75	0:0	2	fmt_in
op	58:81	0:0	2	.
water	58:82	0:0	2	video
op	58:87	0:0	2	.
water	58:88	0:0	2	i_width
water	58:95	0:0	2	;
water	59:4	0:0	2	id
op	59:6	0:0	2	->
water	59:8	0:0	2	p_encoder
op	59:17	0:0	2	->
water	59:19	0:0	2	fmt_in
op	59:25	0:0	2	.
water	59:26	0:0	2	video
op	59:31	0:0	2	.
water	59:32	0:0	2	i_visible_height
op	59:49	0:0	2	=
water	60:8	0:0	2	id
op	60:10	0:0	2	->
water	60:12	0:0	2	p_encoder
op	60:21	0:0	2	->
water	60:23	0:0	2	fmt_out
op	60:30	0:0	2	.
water	60:31	0:0	2	video
op	60:36	0:0	2	.
water	60:37	0:0	2	i_visible_height
water	61:10	0:0	2	?
water	61:12	0:0	2	id
op	61:14	0:0	2	->
water	61:16	0:0	2	p_encoder
op	61:25	0:0	2	->
water	61:27	0:0	2	fmt_out
op	61:34	0:0	2	.
water	61:35	0:0	2	video
op	61:40	0:0	2	.
water	61:41	0:0	2	i_visible_height
water	62:10	0:0	2	:
water	62:12	0:0	2	id
op	62:14	0:0	2	->
water	62:16	0:0	2	p_decoder
op	62:25	0:0	2	->
water	62:27	0:0	2	fmt_in
op	62:33	0:0	2	.
water	62:34	0:0	2	video
op	62:39	0:0	2	.
water	62:40	0:0	2	i_visible_height
water	63:12	0:0	2	?
water	63:14	0:0	2	id
op	63:16	0:0	2	->
water	63:18	0:0	2	p_decoder
op	63:27	0:0	2	->
water	63:29	0:0	2	fmt_in
op	63:35	0:0	2	.
water	63:36	0:0	2	video
op	63:41	0:0	2	.
water	63:42	0:0	2	i_visible_height
water	63:59	0:0	2	:
water	63:61	0:0	2	id
op	63:63	0:0	2	->
water	63:65	0:0	2	p_encoder
op	63:74	0:0	2	->
water	63:76	0:0	2	fmt_in
op	63:82	0:0	2	.
water	63:83	0:0	2	video
op	63:88	0:0	2	.
water	63:89	0:0	2	i_height
water	63:97	0:0	2	;
water	64:4	0:0	2	id
op	64:6	0:0	2	->
water	64:8	0:0	2	p_encoder
op	64:17	0:0	2	->
water	64:19	0:0	2	i_threads
op	64:29	0:0	2	=
water	64:31	0:0	2	p_sys
op	64:36	0:0	2	->
water	64:38	0:0	2	i_threads
water	64:47	0:0	2	;
water	65:4	0:0	2	id
op	65:6	0:0	2	->
water	65:8	0:0	2	p_encoder
op	65:17	0:0	2	->
water	65:19	0:0	2	p_cfg
op	65:25	0:0	2	=
water	65:27	0:0	2	p_sys
op	65:32	0:0	2	->
water	65:34	0:0	2	p_video_cfg
water	65:45	0:0	2	;
water	66:4	0:0	2	id
op	66:6	0:0	2	->
water	66:8	0:0	2	p_encoder
op	66:17	0:0	2	->
water	66:19	0:0	2	p_module
op	66:28	0:0	2	=
call	67:8	67:69	2	module_need
arg	67:21	67:34	3	id->p_encoder
water	67:21	0:0	4	id
op	67:23	0:0	4	->
water	67:25	0:0	4	p_encoder
arg	67:36	67:45	3	"encoder"
water	67:36	0:0	4	"encoder"
arg	67:47	67:62	3	p_sys->psz_venc
water	67:47	0:0	4	p_sys
op	67:52	0:0	4	->
water	67:54	0:0	4	psz_venc
arg	67:64	67:69	3	true
water	67:64	0:0	4	true
water	67:70	0:0	2	;
if	68:4	77:4	2	(! id -> p_encoder -> p_module)
cond	68:8	68:24	3	! id -> p_encoder -> p_module
op	68:8	0:0	4	!
water	68:9	0:0	4	id
op	68:11	0:0	4	->
water	68:13	0:0	4	p_encoder
op	68:22	0:0	4	->
water	68:24	0:0	4	p_module
stmts	69:4	77:4	3	
water	69:4	0:0	4	{
call	70:8	72:42	4	msg_Err
arg	70:17	70:25	5	p_stream
water	70:17	0:0	6	p_stream
arg	70:27	70:134	5	"cannot find video encoder (module:%s fourcc:%4.4s). Take a look few lines earlier to see possible reason."
water	70:27	0:0	6	"cannot find video encoder (module:%s fourcc:%4.4s). Take a look few lines earlier to see possible reason."
arg	71:17	71:58	5	p_sys->psz_venc?p_sys->psz_venc:"any"
water	71:17	0:0	6	p_sys
op	71:22	0:0	6	->
water	71:24	0:0	6	psz_venc
water	71:33	0:0	6	?
water	71:35	0:0	6	p_sys
op	71:40	0:0	6	->
water	71:42	0:0	6	psz_venc
water	71:51	0:0	6	:
water	71:53	0:0	6	"any"
arg	72:17	72:42	5	(char*)&p_sys->i_vcodec
water	72:17	0:0	6	(
water	72:18	0:0	6	char
op	72:23	0:0	6	*
water	72:24	0:0	6	)
op	72:25	0:0	6	&
water	72:26	0:0	6	p_sys
op	72:31	0:0	6	->
water	72:33	0:0	6	i_vcodec
water	72:43	0:0	4	;
call	73:8	73:62	4	module_unneed
arg	73:23	73:36	5	id->p_decoder
water	73:23	0:0	6	id
op	73:25	0:0	6	->
water	73:27	0:0	6	p_decoder
arg	73:38	73:62	5	id->p_decoder->p_module
water	73:38	0:0	6	id
op	73:40	0:0	6	->
water	73:42	0:0	6	p_decoder
op	73:51	0:0	6	->
water	73:53	0:0	6	p_module
water	73:63	0:0	4	;
water	74:8	0:0	4	id
op	74:10	0:0	4	->
water	74:12	0:0	4	p_decoder
op	74:21	0:0	4	->
water	74:23	0:0	4	p_module
op	74:32	0:0	4	=
water	74:34	0:0	4	0
water	74:35	0:0	4	;
call	75:8	75:37	4	free
arg	75:14	75:37	5	id->p_decoder->p_owner
water	75:14	0:0	6	id
op	75:16	0:0	6	->
water	75:18	0:0	6	p_decoder
op	75:27	0:0	6	->
water	75:29	0:0	6	p_owner
water	75:38	0:0	4	;
return	76:8	76:27	4	VLC_EGENERIC
water	76:15	0:0	5	VLC_EGENERIC
water	77:4	0:0	4	}
call	80:4	80:58	2	module_unneed
arg	80:19	80:32	3	id->p_encoder
water	80:19	0:0	4	id
op	80:21	0:0	4	->
water	80:23	0:0	4	p_encoder
arg	80:34	80:58	3	id->p_encoder->p_module
water	80:34	0:0	4	id
op	80:36	0:0	4	->
water	80:38	0:0	4	p_encoder
op	80:47	0:0	4	->
water	80:49	0:0	4	p_module
water	80:59	0:0	2	;
if	81:4	86:4	2	(id -> p_encoder -> fmt_out . p_extra)
cond	81:8	81:31	3	id -> p_encoder -> fmt_out . p_extra
water	81:8	0:0	4	id
op	81:10	0:0	4	->
water	81:12	0:0	4	p_encoder
op	81:21	0:0	4	->
water	81:23	0:0	4	fmt_out
op	81:30	0:0	4	.
water	81:31	0:0	4	p_extra
stmts	82:4	86:4	3	
water	82:4	0:0	4	{
call	83:8	83:45	4	free
arg	83:14	83:45	5	id->p_encoder->fmt_out.p_extra
water	83:14	0:0	6	id
op	83:16	0:0	6	->
water	83:18	0:0	6	p_encoder
op	83:27	0:0	6	->
water	83:29	0:0	6	fmt_out
op	83:36	0:0	6	.
water	83:37	0:0	6	p_extra
water	83:46	0:0	4	;
water	84:8	0:0	4	id
op	84:10	0:0	4	->
water	84:12	0:0	4	p_encoder
op	84:21	0:0	4	->
water	84:23	0:0	4	fmt_out
op	84:30	0:0	4	.
water	84:31	0:0	4	p_extra
op	84:39	0:0	4	=
water	84:41	0:0	4	NULL
water	84:45	0:0	4	;
water	85:8	0:0	4	id
op	85:10	0:0	4	->
water	85:12	0:0	4	p_encoder
op	85:21	0:0	4	->
water	85:23	0:0	4	fmt_out
op	85:30	0:0	4	.
water	85:31	0:0	4	i_extra
op	85:39	0:0	4	=
water	85:41	0:0	4	0
water	85:42	0:0	4	;
water	86:4	0:0	4	}
water	87:4	0:0	2	id
op	87:6	0:0	2	->
water	87:8	0:0	2	p_encoder
op	87:17	0:0	2	->
water	87:19	0:0	2	p_module
op	87:28	0:0	2	=
water	87:30	0:0	2	NULL
water	87:34	0:0	2	;
if	88:4	119:4	2	(p_sys -> i_threads >= 1)
cond	88:8	88:28	3	p_sys -> i_threads >= 1
water	88:8	0:0	4	p_sys
op	88:13	0:0	4	->
water	88:15	0:0	4	i_threads
op	88:25	0:0	4	>=
water	88:28	0:0	4	1
stmts	89:4	119:4	3	
water	89:4	0:0	4	{
decl	90:8	91:52	4	int	i_priority
op	90:23	0:0	4	=
water	90:25	0:0	4	p_sys
op	90:30	0:0	4	->
water	90:32	0:0	4	b_high_priority
water	90:48	0:0	4	?
water	90:50	0:0	4	VLC_THREAD_PRIORITY_OUTPUT
water	90:77	0:0	4	:
water	91:27	0:0	4	VLC_THREAD_PRIORITY_VIDEO
water	92:8	0:0	4	p_sys
op	92:13	0:0	4	->
water	92:15	0:0	4	id_video
op	92:24	0:0	4	=
water	92:26	0:0	4	id
water	92:28	0:0	4	;
call	93:8	93:41	4	vlc_mutex_init
arg	93:24	93:41	5	&p_sys->lock_out
op	93:24	0:0	6	&
water	93:25	0:0	6	p_sys
op	93:30	0:0	6	->
water	93:32	0:0	6	lock_out
water	93:42	0:0	4	;
call	94:8	94:36	4	vlc_cond_init
arg	94:23	94:36	5	&p_sys->cond
op	94:23	0:0	6	&
water	94:24	0:0	6	p_sys
op	94:29	0:0	6	->
water	94:31	0:0	6	cond
water	94:37	0:0	4	;
water	95:8	0:0	4	p_sys
op	95:13	0:0	4	->
water	95:15	0:0	4	pp_pics
op	95:23	0:0	4	=
call	95:25	95:42	4	picture_fifo_New
water	95:43	0:0	4	;
if	96:8	105:8	4	(p_sys -> pp_pics == NULL)
cond	96:12	96:30	5	p_sys -> pp_pics == NULL
water	96:12	0:0	6	p_sys
op	96:17	0:0	6	->
water	96:19	0:0	6	pp_pics
op	96:27	0:0	6	==
water	96:30	0:0	6	NULL
stmts	97:8	105:8	5	
water	97:8	0:0	6	{
call	98:12	98:60	6	msg_Err
arg	98:21	98:29	7	p_stream
water	98:21	0:0	8	p_stream
arg	98:31	98:60	7	"cannot create picture fifo"
water	98:31	0:0	8	"cannot create picture fifo"
water	98:61	0:0	6	;
call	99:12	99:48	6	vlc_mutex_destroy
arg	99:31	99:48	7	&p_sys->lock_out
op	99:31	0:0	8	&
water	99:32	0:0	8	p_sys
op	99:37	0:0	8	->
water	99:39	0:0	8	lock_out
water	99:49	0:0	6	;
call	100:12	100:43	6	vlc_cond_destroy
arg	100:30	100:43	7	&p_sys->cond
op	100:30	0:0	8	&
water	100:31	0:0	8	p_sys
op	100:36	0:0	8	->
water	100:38	0:0	8	cond
water	100:44	0:0	6	;
call	101:12	101:66	6	module_unneed
arg	101:27	101:40	7	id->p_decoder
water	101:27	0:0	8	id
op	101:29	0:0	8	->
water	101:31	0:0	8	p_decoder
arg	101:42	101:66	7	id->p_decoder->p_module
water	101:42	0:0	8	id
op	101:44	0:0	8	->
water	101:46	0:0	8	p_decoder
op	101:55	0:0	8	->
water	101:57	0:0	8	p_module
water	101:67	0:0	6	;
water	102:12	0:0	6	id
op	102:14	0:0	6	->
water	102:16	0:0	6	p_decoder
op	102:25	0:0	6	->
water	102:27	0:0	6	p_module
op	102:36	0:0	6	=
water	102:38	0:0	6	NULL
water	102:42	0:0	6	;
call	103:12	103:41	6	free
arg	103:18	103:41	7	id->p_decoder->p_owner
water	103:18	0:0	8	id
op	103:20	0:0	8	->
water	103:22	0:0	8	p_decoder
op	103:31	0:0	8	->
water	103:33	0:0	8	p_owner
water	103:42	0:0	6	;
return	104:12	104:29	6	VLC_ENOMEM
water	104:19	0:0	7	VLC_ENOMEM
water	105:8	0:0	6	}
water	106:8	0:0	4	p_sys
op	106:13	0:0	4	->
water	106:15	0:0	4	p_buffers
op	106:25	0:0	4	=
water	106:27	0:0	4	NULL
water	106:31	0:0	4	;
water	107:8	0:0	4	p_sys
op	107:13	0:0	4	->
water	107:15	0:0	4	b_abort
op	107:23	0:0	4	=
water	107:25	0:0	4	false
water	107:30	0:0	4	;
if	108:8	118:8	4	(vlc_clone (& p_sys -> thread ,EncoderThread ,p_sys ,i_priority ))
cond	108:12	108:72	5	vlc_clone (& p_sys -> thread ,EncoderThread ,p_sys ,i_priority )
call	108:12	108:72	6	vlc_clone
arg	108:23	108:37	7	&p_sys->thread
op	108:23	0:0	8	&
water	108:24	0:0	8	p_sys
op	108:29	0:0	8	->
water	108:31	0:0	8	thread
arg	108:39	108:52	7	EncoderThread
water	108:39	0:0	8	EncoderThread
arg	108:54	108:59	7	p_sys
water	108:54	0:0	8	p_sys
arg	108:61	108:72	7	i_priority
water	108:61	0:0	8	i_priority
stmts	109:8	118:8	5	
water	109:8	0:0	6	{
call	110:12	110:61	6	msg_Err
arg	110:21	110:29	7	p_stream
water	110:21	0:0	8	p_stream
arg	110:31	110:61	7	"cannot spawn encoder thread"
water	110:31	0:0	8	"cannot spawn encoder thread"
water	110:62	0:0	6	;
call	111:12	111:48	6	vlc_mutex_destroy
arg	111:31	111:48	7	&p_sys->lock_out
op	111:31	0:0	8	&
water	111:32	0:0	8	p_sys
op	111:37	0:0	8	->
water	111:39	0:0	8	lock_out
water	111:49	0:0	6	;
call	112:12	112:43	6	vlc_cond_destroy
arg	112:30	112:43	7	&p_sys->cond
op	112:30	0:0	8	&
water	112:31	0:0	8	p_sys
op	112:36	0:0	8	->
water	112:38	0:0	8	cond
water	112:44	0:0	6	;
call	113:12	113:48	6	picture_fifo_Delete
arg	113:33	113:48	7	p_sys->pp_pics
water	113:33	0:0	8	p_sys
op	113:38	0:0	8	->
water	113:40	0:0	8	pp_pics
water	113:49	0:0	6	;
call	114:12	114:66	6	module_unneed
arg	114:27	114:40	7	id->p_decoder
water	114:27	0:0	8	id
op	114:29	0:0	8	->
water	114:31	0:0	8	p_decoder
arg	114:42	114:66	7	id->p_decoder->p_module
water	114:42	0:0	8	id
op	114:44	0:0	8	->
water	114:46	0:0	8	p_decoder
op	114:55	0:0	8	->
water	114:57	0:0	8	p_module
water	114:67	0:0	6	;
water	115:12	0:0	6	id
op	115:14	0:0	6	->
water	115:16	0:0	6	p_decoder
op	115:25	0:0	6	->
water	115:27	0:0	6	p_module
op	115:36	0:0	6	=
water	115:38	0:0	6	NULL
water	115:42	0:0	6	;
call	116:12	116:41	6	free
arg	116:18	116:41	7	id->p_decoder->p_owner
water	116:18	0:0	8	id
op	116:20	0:0	8	->
water	116:22	0:0	8	p_decoder
op	116:31	0:0	8	->
water	116:33	0:0	8	p_owner
water	116:42	0:0	6	;
return	117:12	117:31	6	VLC_EGENERIC
water	117:19	0:0	7	VLC_EGENERIC
water	118:8	0:0	6	}
water	119:4	0:0	4	}
return	120:4	120:22	2	VLC_SUCCESS
water	120:11	0:0	3	VLC_SUCCESS

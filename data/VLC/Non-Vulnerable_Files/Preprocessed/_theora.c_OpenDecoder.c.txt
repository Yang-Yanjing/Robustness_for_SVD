func	2:0	30:0	0	static int	OpenDecoder
params	2:22	0:0	1	
param	2:24	2:45	2	vlc_object_t *	p_this
stmnts	0:0	29:22	1	
decl	4:4	4:41	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	p_this
decl	5:4	5:24	2	decoder_sys_t	*p_sys
if	6:4	9:4	2	(p_dec -> fmt_in . i_codec != VLC_CODEC_THEORA)
cond	6:8	6:33	3	p_dec -> fmt_in . i_codec != VLC_CODEC_THEORA
water	6:8	0:0	4	p_dec
op	6:13	0:0	4	->
water	6:15	0:0	4	fmt_in
op	6:21	0:0	4	.
water	6:22	0:0	4	i_codec
op	6:30	0:0	4	!=
water	6:33	0:0	4	VLC_CODEC_THEORA
stmts	7:4	9:4	3	
water	7:4	0:0	4	{
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
water	9:4	0:0	4	}
if	11:4	12:25	2	(( p_dec -> p_sys = p_sys =malloc (sizeof ( * p_sys ) ) ) == NULL)
cond	11:8	11:61	3	( p_dec -> p_sys = p_sys =malloc (sizeof ( * p_sys ) ) ) == NULL
water	11:8	0:0	4	(
water	11:10	0:0	4	p_dec
op	11:15	0:0	4	->
water	11:17	0:0	4	p_sys
op	11:23	0:0	4	=
water	11:25	0:0	4	p_sys
op	11:31	0:0	4	=
call	11:33	11:54	4	malloc
arg	11:40	11:54	5	sizeof(*p_sys)
op	11:40	0:0	6	sizeof
water	11:46	0:0	6	(
op	11:47	0:0	6	*
water	11:48	0:0	6	p_sys
water	11:53	0:0	6	)
water	11:56	0:0	4	)
op	11:58	0:0	4	==
water	11:61	0:0	4	NULL
stmts	12:8	12:25	3	
return	12:8	12:25	4	VLC_ENOMEM
water	12:15	0:0	5	VLC_ENOMEM
water	13:4	0:0	2	p_dec
op	13:9	0:0	2	->
water	13:11	0:0	2	p_sys
op	13:16	0:0	2	->
water	13:18	0:0	2	b_packetizer
op	13:31	0:0	2	=
water	13:33	0:0	2	false
water	13:38	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	b_has_headers
op	14:25	0:0	2	=
water	14:27	0:0	2	false
water	14:32	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	i_pts
op	15:17	0:0	2	=
water	15:19	0:0	2	VLC_TS_INVALID
water	15:33	0:0	2	;
water	16:4	0:0	2	p_sys
op	16:9	0:0	2	->
water	16:11	0:0	2	b_decoded_first_keyframe
op	16:36	0:0	2	=
water	16:38	0:0	2	false
water	16:43	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	tcx
op	17:15	0:0	2	=
water	17:17	0:0	2	NULL
water	17:21	0:0	2	;
water	19:4	0:0	2	p_dec
op	19:9	0:0	2	->
water	19:11	0:0	2	fmt_out
op	19:18	0:0	2	.
water	19:19	0:0	2	i_cat
op	19:25	0:0	2	=
water	19:27	0:0	2	VIDEO_ES
water	19:35	0:0	2	;
water	20:4	0:0	2	p_dec
op	20:9	0:0	2	->
water	20:11	0:0	2	fmt_out
op	20:18	0:0	2	.
water	20:19	0:0	2	i_codec
op	20:27	0:0	2	=
water	20:29	0:0	2	VLC_CODEC_I420
water	20:43	0:0	2	;
water	22:4	0:0	2	p_dec
op	22:9	0:0	2	->
water	22:11	0:0	2	pf_decode_video
op	22:27	0:0	2	=
water	22:29	0:0	2	(
water	22:30	0:0	2	picture_t
op	22:40	0:0	2	*
call	22:41	22:68	2	(*)
arg	22:45	22:56	3	decoder_t*
water	22:45	0:0	4	decoder_t
op	22:55	0:0	4	*
arg	22:58	22:68	3	block_t**
water	22:58	0:0	4	block_t
op	22:66	0:0	4	*
op	22:67	0:0	4	*
water	22:69	0:0	2	)
water	23:8	0:0	2	DecodeBlock
water	23:19	0:0	2	;
water	24:4	0:0	2	p_dec
op	24:9	0:0	2	->
water	24:11	0:0	2	pf_packetize
op	24:27	0:0	2	=
water	24:29	0:0	2	(
water	24:30	0:0	2	block_t
op	24:38	0:0	2	*
call	24:39	24:66	2	(*)
arg	24:43	24:54	3	decoder_t*
water	24:43	0:0	4	decoder_t
op	24:53	0:0	4	*
arg	24:56	24:66	3	block_t**
water	24:56	0:0	4	block_t
op	24:64	0:0	4	*
op	24:65	0:0	4	*
water	24:67	0:0	2	)
water	25:8	0:0	2	DecodeBlock
water	25:19	0:0	2	;
call	27:4	27:32	2	th_comment_init
arg	27:21	27:32	3	&p_sys->tc
op	27:21	0:0	4	&
water	27:22	0:0	4	p_sys
op	27:27	0:0	4	->
water	27:29	0:0	4	tc
water	27:33	0:0	2	;
call	28:4	28:29	2	th_info_init
arg	28:18	28:29	3	&p_sys->ti
op	28:18	0:0	4	&
water	28:19	0:0	4	p_sys
op	28:24	0:0	4	->
water	28:26	0:0	4	ti
water	28:30	0:0	2	;
return	29:4	29:22	2	VLC_SUCCESS
water	29:11	0:0	3	VLC_SUCCESS

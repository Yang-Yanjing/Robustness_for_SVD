func	2:0	30:0	0	static void	DisplayPosition
params	2:27	0:0	1	
param	2:29	2:50	2	intf_thread_t *	p_intf
param	2:52	2:73	2	vout_thread_t *	p_vout
param	3:29	3:53	2	input_thread_t *	p_input
stmnts	0:0	29:4	1	
decl	5:4	5:40	2	char	psz_duration[MSTRTIME_MAX_SIZE]
decl	6:4	6:36	2	char	psz_time[MSTRTIME_MAX_SIZE]
decl	7:4	7:25	2	vlc_value_t	time
water	7:20	0:0	2	,
decl	7:4	7:25	2	vlc_value_t	pos
decl	8:4	8:21	2	mtime_t	i_seconds
if	9:4	9:31	2	(p_vout == NULL)
cond	9:8	9:18	3	p_vout == NULL
water	9:8	0:0	4	p_vout
op	9:15	0:0	4	==
water	9:18	0:0	4	NULL
stmts	9:25	9:31	3	
return	9:25	9:31	4	
call	10:4	10:34	2	ClearChannels
arg	10:19	10:25	3	p_intf
water	10:19	0:0	4	p_intf
arg	10:27	10:34	3	p_vout
water	10:27	0:0	4	p_vout
water	10:35	0:0	2	;
call	11:4	11:36	2	var_Get
arg	11:13	11:20	3	p_input
water	11:13	0:0	4	p_input
arg	11:22	11:28	3	"time"
water	11:22	0:0	4	"time"
arg	11:30	11:36	3	&time
op	11:30	0:0	4	&
water	11:31	0:0	4	time
water	11:37	0:0	2	;
water	12:4	0:0	2	i_seconds
op	12:14	0:0	2	=
water	12:16	0:0	2	time
op	12:20	0:0	2	.
water	12:21	0:0	2	i_time
op	12:28	0:0	2	/
water	12:30	0:0	2	1000000
water	12:37	0:0	2	;
call	13:4	13:40	2	secstotimestr
arg	13:20	13:28	3	psz_time
water	13:20	0:0	4	psz_time
arg	13:30	13:40	3	i_seconds
water	13:30	0:0	4	i_seconds
water	13:41	0:0	2	;
call	14:4	14:38	2	var_Get
arg	14:13	14:20	3	p_input
water	14:13	0:0	4	p_input
arg	14:22	14:30	3	"length"
water	14:22	0:0	4	"length"
arg	14:32	14:38	3	&time
op	14:32	0:0	4	&
water	14:33	0:0	4	time
water	14:39	0:0	2	;
if	15:4	19:4	2	(time . i_time > 0)
cond	15:8	15:22	3	time . i_time > 0
water	15:8	0:0	4	time
op	15:12	0:0	4	.
water	15:13	0:0	4	i_time
op	15:20	0:0	4	>
water	15:22	0:0	4	0
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
call	17:8	17:59	4	secstotimestr
arg	17:23	17:35	5	psz_duration
water	17:23	0:0	6	psz_duration
arg	17:37	17:59	5	time.i_time/1000000
water	17:37	0:0	6	time
op	17:41	0:0	6	.
water	17:42	0:0	6	i_time
op	17:49	0:0	6	/
water	17:51	0:0	6	1000000
water	17:60	0:0	4	;
call	18:8	18:66	4	DisplayMessage
arg	18:24	18:30	5	p_vout
water	18:24	0:0	6	p_vout
arg	18:32	18:41	5	"%s / %s"
water	18:32	0:0	6	"%s / %s"
arg	18:43	18:51	5	psz_time
water	18:43	0:0	6	psz_time
arg	18:53	18:66	5	psz_duration
water	18:53	0:0	6	psz_duration
water	18:67	0:0	4	;
water	19:4	0:0	4	}
else	20:4	23:4	2
stmts	20:9	23:4	3	
if	20:9	23:4	4	(i_seconds > 0)
cond	20:13	20:25	5	i_seconds > 0
water	20:13	0:0	6	i_seconds
op	20:23	0:0	6	>
water	20:25	0:0	6	0
stmts	21:4	23:4	5	
water	21:4	0:0	6	{
call	22:8	22:47	6	DisplayMessage
arg	22:24	22:30	7	p_vout
water	22:24	0:0	8	p_vout
arg	22:32	22:36	7	"%s"
water	22:32	0:0	8	"%s"
arg	22:38	22:47	7	psz_time
water	22:38	0:0	8	psz_time
water	22:48	0:0	6	;
water	23:4	0:0	6	}
if	24:4	29:4	2	(var_GetBool (p_vout ,"fullscreen" ))
cond	24:8	24:42	3	var_GetBool (p_vout ,"fullscreen" )
call	24:8	24:42	4	var_GetBool
arg	24:21	24:27	5	p_vout
water	24:21	0:0	6	p_vout
arg	24:29	24:42	5	"fullscreen"
water	24:29	0:0	6	"fullscreen"
stmts	25:4	29:4	3	
water	25:4	0:0	4	{
call	26:8	26:43	4	var_Get
arg	26:17	26:24	5	p_input
water	26:17	0:0	6	p_input
arg	26:26	26:36	5	"position"
water	26:26	0:0	6	"position"
arg	26:38	26:43	5	&pos
op	26:38	0:0	6	&
water	26:39	0:0	6	pos
water	26:44	0:0	4	;
call	27:8	28:58	4	vout_OSDSlider
arg	27:24	27:30	5	p_vout
water	27:24	0:0	6	p_vout
arg	27:32	27:58	5	p_intf->p_sys->slider_chan
water	27:32	0:0	6	p_intf
op	27:38	0:0	6	->
water	27:40	0:0	6	p_sys
op	27:45	0:0	6	->
water	27:47	0:0	6	slider_chan
arg	28:24	28:41	5	pos.f_float*100
water	28:24	0:0	6	pos
op	28:27	0:0	6	.
water	28:28	0:0	6	f_float
op	28:36	0:0	6	*
water	28:38	0:0	6	100
arg	28:43	28:58	5	OSD_HOR_SLIDER
water	28:43	0:0	6	OSD_HOR_SLIDER
water	28:59	0:0	4	;
water	29:4	0:0	4	}

func	2:0	46:0	0	static void	Close
params	2:17	0:0	1	
param	2:18	2:38	2	vlc_object_t *	p_this
stmnts	0:0	45:15	1	
decl	4:4	4:35	2	stream_t	*s
op	4:16	0:0	2	=
water	4:18	0:0	2	(
water	4:19	0:0	2	stream_t
op	4:27	0:0	2	*
water	4:28	0:0	2	)
water	4:29	0:0	2	p_this
decl	5:4	5:34	2	stream_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	s
op	5:27	0:0	2	->
water	5:29	0:0	2	p_sys
call	6:4	6:28	2	assert
arg	6:11	6:28	3	p_sys->hls_stream
water	6:11	0:0	4	p_sys
op	6:16	0:0	4	->
water	6:18	0:0	4	hls_stream
water	6:29	0:0	2	;
call	7:4	7:31	2	vlc_mutex_lock
arg	7:19	7:31	3	&p_sys->lock
op	7:19	0:0	4	&
water	7:20	0:0	4	p_sys
op	7:25	0:0	4	->
water	7:27	0:0	4	lock
water	7:32	0:0	2	;
water	8:4	0:0	2	p_sys
op	8:9	0:0	2	->
water	8:11	0:0	2	paused
op	8:18	0:0	2	=
water	8:20	0:0	2	false
water	8:25	0:0	2	;
call	9:4	9:38	2	atomic_store
arg	9:17	9:32	3	&p_sys->closing
op	9:17	0:0	4	&
water	9:18	0:0	4	p_sys
op	9:23	0:0	4	->
water	9:25	0:0	4	closing
arg	9:34	9:38	3	true
water	9:34	0:0	4	true
water	9:39	0:0	2	;
call	10:4	10:32	2	vlc_cond_signal
arg	10:20	10:32	3	&p_sys->wait
op	10:20	0:0	4	&
water	10:21	0:0	4	p_sys
op	10:26	0:0	4	->
water	10:28	0:0	4	wait
water	10:33	0:0	2	;
call	11:4	11:33	2	vlc_mutex_unlock
arg	11:21	11:33	3	&p_sys->lock
op	11:21	0:0	4	&
water	11:22	0:0	4	p_sys
op	11:27	0:0	4	->
water	11:29	0:0	4	lock
water	11:34	0:0	2	;
call	13:4	13:45	2	vlc_mutex_lock
arg	13:19	13:45	3	&p_sys->download.lock_wait
op	13:19	0:0	4	&
water	13:20	0:0	4	p_sys
op	13:25	0:0	4	->
water	13:27	0:0	4	download
op	13:35	0:0	4	.
water	13:36	0:0	4	lock_wait
water	13:46	0:0	2	;
water	15:4	0:0	2	p_sys
op	15:9	0:0	2	->
water	15:11	0:0	2	download
op	15:19	0:0	2	.
water	15:20	0:0	2	segment
op	15:28	0:0	2	=
water	15:30	0:0	2	p_sys
op	15:35	0:0	2	->
water	15:37	0:0	2	playback
op	15:45	0:0	2	.
water	15:46	0:0	2	segment
op	15:54	0:0	2	=
water	15:56	0:0	2	0
water	15:57	0:0	2	;
water	16:4	0:0	2	p_sys
op	16:9	0:0	2	->
water	16:11	0:0	2	download
op	16:19	0:0	2	.
water	16:20	0:0	2	seek
op	16:25	0:0	2	=
water	16:27	0:0	2	0
water	16:28	0:0	2	;
call	17:4	17:41	2	vlc_cond_signal
arg	17:20	17:41	3	&p_sys->download.wait
op	17:20	0:0	4	&
water	17:21	0:0	4	p_sys
op	17:26	0:0	4	->
water	17:28	0:0	4	download
op	17:36	0:0	4	.
water	17:37	0:0	4	wait
water	17:42	0:0	2	;
call	18:4	18:47	2	vlc_mutex_unlock
arg	18:21	18:47	3	&p_sys->download.lock_wait
op	18:21	0:0	4	&
water	18:22	0:0	4	p_sys
op	18:27	0:0	4	->
water	18:29	0:0	4	download
op	18:37	0:0	4	.
water	18:38	0:0	4	lock_wait
water	18:48	0:0	2	;
call	19:4	19:37	2	vlc_cond_signal
arg	19:20	19:37	3	&p_sys->read.wait
op	19:20	0:0	4	&
water	19:21	0:0	4	p_sys
op	19:26	0:0	4	->
water	19:28	0:0	4	read
op	19:32	0:0	4	.
water	19:33	0:0	4	wait
water	19:38	0:0	2	;
if	21:4	25:4	2	(p_sys -> b_live)
cond	21:8	21:15	3	p_sys -> b_live
water	21:8	0:0	4	p_sys
op	21:13	0:0	4	->
water	21:15	0:0	4	b_live
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:32	4	vlc_cancel
arg	23:19	23:32	5	p_sys->reload
water	23:19	0:0	6	p_sys
op	23:24	0:0	6	->
water	23:26	0:0	6	reload
water	23:33	0:0	4	;
call	24:8	24:36	4	vlc_join
arg	24:17	24:30	5	p_sys->reload
water	24:17	0:0	6	p_sys
op	24:22	0:0	6	->
water	24:24	0:0	6	reload
arg	24:32	24:36	5	NULL
water	24:32	0:0	6	NULL
water	24:37	0:0	4	;
water	25:4	0:0	4	}
call	26:4	26:28	2	vlc_cancel
arg	26:15	26:28	3	p_sys->thread
water	26:15	0:0	4	p_sys
op	26:20	0:0	4	->
water	26:22	0:0	4	thread
water	26:29	0:0	2	;
call	27:4	27:32	2	vlc_join
arg	27:13	27:26	3	p_sys->thread
water	27:13	0:0	4	p_sys
op	27:18	0:0	4	->
water	27:20	0:0	4	thread
arg	27:28	27:32	3	NULL
water	27:28	0:0	4	NULL
water	27:33	0:0	2	;
call	28:4	28:48	2	vlc_mutex_destroy
arg	28:22	28:48	3	&p_sys->download.lock_wait
op	28:22	0:0	4	&
water	28:23	0:0	4	p_sys
op	28:28	0:0	4	->
water	28:30	0:0	4	download
op	28:38	0:0	4	.
water	28:39	0:0	4	lock_wait
water	28:49	0:0	2	;
call	29:4	29:42	2	vlc_cond_destroy
arg	29:21	29:42	3	&p_sys->download.wait
op	29:21	0:0	4	&
water	29:22	0:0	4	p_sys
op	29:27	0:0	4	->
water	29:29	0:0	4	download
op	29:37	0:0	4	.
water	29:38	0:0	4	wait
water	29:43	0:0	2	;
call	30:4	30:44	2	vlc_mutex_destroy
arg	30:22	30:44	3	&p_sys->read.lock_wait
op	30:22	0:0	4	&
water	30:23	0:0	4	p_sys
op	30:28	0:0	4	->
water	30:30	0:0	4	read
op	30:34	0:0	4	.
water	30:35	0:0	4	lock_wait
water	30:45	0:0	2	;
call	31:4	31:38	2	vlc_cond_destroy
arg	31:21	31:38	3	&p_sys->read.wait
op	31:21	0:0	4	&
water	31:22	0:0	4	p_sys
op	31:27	0:0	4	->
water	31:29	0:0	4	read
op	31:33	0:0	4	.
water	31:34	0:0	4	wait
water	31:39	0:0	2	;
for	33:4	37:4	2	( int i = 0 ;i <vlc_array_count (p_sys -> hls_stream );i ++)
forinit	0:0	33:18	3	 int i = 0 ;
decl	33:9	33:18	4	int	i
op	33:15	0:0	4	=
water	33:17	0:0	4	0
cond	33:20	33:57	3	i <vlc_array_count (p_sys -> hls_stream )
water	33:20	0:0	4	i
op	33:22	0:0	4	<
call	33:24	33:57	4	vlc_array_count
arg	33:40	33:57	5	p_sys->hls_stream
water	33:40	0:0	6	p_sys
op	33:45	0:0	6	->
water	33:47	0:0	6	hls_stream
forexpr	33:60	33:61	3	i ++
water	33:60	0:0	4	i
op	33:61	0:0	4	++
stmts	34:4	37:4	3	
water	34:4	0:0	4	{
decl	35:8	35:57	4	hls_stream_t	*hls
op	35:26	0:0	4	=
call	35:28	35:56	5	hls_Get
arg	35:36	35:53	6	p_sys->hls_stream
water	35:36	0:0	7	p_sys
op	35:41	0:0	7	->
water	35:43	0:0	7	hls_stream
arg	35:55	35:56	6	i
water	35:55	0:0	7	i
if	36:8	36:30	4	(hls)
cond	36:12	36:12	5	hls
water	36:12	0:0	6	hls
stmts	36:17	36:30	5	
call	36:17	36:29	6	hls_Free
arg	36:26	36:29	7	hls
water	36:26	0:0	8	hls
water	36:30	0:0	6	;
water	37:4	0:0	4	}
call	38:4	38:39	2	vlc_array_destroy
arg	38:22	38:39	3	p_sys->hls_stream
water	38:22	0:0	4	p_sys
op	38:27	0:0	4	->
water	38:29	0:0	4	hls_stream
water	38:40	0:0	2	;
call	40:4	40:34	2	vlc_mutex_destroy
arg	40:22	40:34	3	&p_sys->lock
op	40:22	0:0	4	&
water	40:23	0:0	4	p_sys
op	40:28	0:0	4	->
water	40:30	0:0	4	lock
water	40:35	0:0	2	;
call	41:4	41:33	2	vlc_cond_destroy
arg	41:21	41:33	3	&p_sys->wait
op	41:21	0:0	4	&
water	41:22	0:0	4	p_sys
op	41:27	0:0	4	->
water	41:29	0:0	4	wait
water	41:34	0:0	2	;
call	42:4	42:20	2	free
arg	42:9	42:20	3	p_sys->m3u8
water	42:9	0:0	4	p_sys
op	42:14	0:0	4	->
water	42:16	0:0	4	m3u8
water	42:21	0:0	2	;
if	43:4	44:37	2	(p_sys -> peeked)
cond	43:8	43:15	3	p_sys -> peeked
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	peeked
stmts	44:8	44:37	3	
call	44:8	44:36	4	block_Release
arg	44:23	44:36	5	p_sys->peeked
water	44:23	0:0	6	p_sys
op	44:28	0:0	6	->
water	44:30	0:0	6	peeked
water	44:37	0:0	4	;
call	45:4	45:14	2	free
arg	45:9	45:14	3	p_sys
water	45:9	0:0	4	p_sys
water	45:15	0:0	2	;

func	2:0	157:0	0	static int	ProcessHeaders
params	2:25	0:0	1	
param	2:27	2:44	2	decoder_t *	p_dec
stmnts	0:0	156:23	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:24	2	ogg_packet	oggpacket
decl	6:4	6:28	2	th_setup_info	*ts
op	6:22	0:0	2	=
water	6:24	0:0	2	NULL
decl	7:4	7:22	2	int	i_max_pp
water	7:16	0:0	2	,
decl	7:4	7:22	2	int	i_pp
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	pi_size
op	8:20	0:0	2	[
water	8:21	0:0	2	XIPH_MAX_HEADER_COUNT
op	8:42	0:0	2	]
water	8:43	0:0	2	;
decl	9:4	9:44	2	void	*pp_data[XIPH_MAX_HEADER_COUNT]
water	10:4	0:0	2	unsigned
water	10:13	0:0	2	i_count
water	10:20	0:0	2	;
if	11:4	13:27	2	(xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra ))
cond	11:8	12:71	3	xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra )
call	11:8	12:71	4	xiph_SplitHeaders
arg	11:27	11:34	5	pi_size
water	11:27	0:0	6	pi_size
arg	11:36	11:43	5	pp_data
water	11:36	0:0	6	pp_data
arg	11:45	11:53	5	&i_count
op	11:45	0:0	6	&
water	11:46	0:0	6	i_count
arg	12:27	12:48	5	p_dec->fmt_in.i_extra
water	12:27	0:0	6	p_dec
op	12:32	0:0	6	->
water	12:34	0:0	6	fmt_in
op	12:40	0:0	6	.
water	12:41	0:0	6	i_extra
arg	12:50	12:71	5	p_dec->fmt_in.p_extra
water	12:50	0:0	6	p_dec
op	12:55	0:0	6	->
water	12:57	0:0	6	fmt_in
op	12:63	0:0	6	.
water	12:64	0:0	6	p_extra
stmts	13:8	13:27	3	
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
if	14:4	15:27	2	(i_count < 3)
cond	14:8	14:18	3	i_count < 3
water	14:8	0:0	4	i_count
op	14:16	0:0	4	<
water	14:18	0:0	4	3
stmts	15:8	15:27	3	
return	15:8	15:27	4	VLC_EGENERIC
water	15:15	0:0	5	VLC_EGENERIC
water	16:4	0:0	2	oggpacket
op	16:13	0:0	2	.
water	16:14	0:0	2	granulepos
op	16:25	0:0	2	=
op	16:27	0:0	2	-
water	16:28	0:0	2	1
water	16:29	0:0	2	;
water	17:4	0:0	2	oggpacket
op	17:13	0:0	2	.
water	17:14	0:0	2	e_o_s
op	17:20	0:0	2	=
water	17:22	0:0	2	0
water	17:23	0:0	2	;
water	18:4	0:0	2	oggpacket
op	18:13	0:0	2	.
water	18:14	0:0	2	packetno
op	18:23	0:0	2	=
water	18:25	0:0	2	0
water	18:26	0:0	2	;
water	20:4	0:0	2	oggpacket
op	20:13	0:0	2	.
water	20:14	0:0	2	b_o_s
op	20:21	0:0	2	=
water	20:23	0:0	2	1
water	20:24	0:0	2	;
water	21:4	0:0	2	oggpacket
op	21:13	0:0	2	.
water	21:14	0:0	2	bytes
op	21:21	0:0	2	=
water	21:23	0:0	2	pi_size
op	21:30	0:0	2	[
water	21:31	0:0	2	0
op	21:32	0:0	2	]
water	21:33	0:0	2	;
water	22:4	0:0	2	oggpacket
op	22:13	0:0	2	.
water	22:14	0:0	2	packet
op	22:21	0:0	2	=
water	22:23	0:0	2	pp_data
op	22:30	0:0	2	[
water	22:31	0:0	2	0
op	22:32	0:0	2	]
water	22:33	0:0	2	;
if	23:4	27:4	2	(th_decode_headerin (& p_sys -> ti ,& p_sys -> tc ,& ts ,& oggpacket ) < 0)
cond	23:8	23:72	3	th_decode_headerin (& p_sys -> ti ,& p_sys -> tc ,& ts ,& oggpacket ) < 0
call	23:8	23:68	4	th_decode_headerin
arg	23:28	23:38	5	&p_sys->ti
op	23:28	0:0	6	&
water	23:29	0:0	6	p_sys
op	23:34	0:0	6	->
water	23:36	0:0	6	ti
arg	23:40	23:50	5	&p_sys->tc
op	23:40	0:0	6	&
water	23:41	0:0	6	p_sys
op	23:46	0:0	6	->
water	23:48	0:0	6	tc
arg	23:52	23:55	5	&ts
op	23:52	0:0	6	&
water	23:53	0:0	6	ts
arg	23:57	23:68	5	&oggpacket
op	23:57	0:0	6	&
water	23:58	0:0	6	oggpacket
op	23:70	0:0	4	<
water	23:72	0:0	4	0
stmts	24:4	27:4	3	
water	24:4	0:0	4	{
call	25:8	25:76	4	msg_Err
arg	25:17	25:22	5	p_dec
water	25:17	0:0	6	p_dec
arg	25:24	25:76	5	"this bitstream does not contain Theora video data"
water	25:24	0:0	6	"this bitstream does not contain Theora video data"
water	25:77	0:0	4	;
goto	26:8	26:18	4	error
water	26:13	0:0	5	error
water	27:4	0:0	4	}
if	29:4	45:4	2	(! p_sys -> b_packetizer)
cond	29:8	29:16	3	! p_sys -> b_packetizer
op	29:8	0:0	4	!
water	29:9	0:0	4	p_sys
op	29:14	0:0	4	->
water	29:16	0:0	4	b_packetizer
stmts	30:4	45:4	3	
switch	30:4	45:4	4	(p_sys -> ti . pixel_fmt)
cond	30:12	30:22	5	p_sys -> ti . pixel_fmt
water	30:12	0:0	6	p_sys
op	30:17	0:0	6	->
water	30:19	0:0	6	ti
op	30:21	0:0	6	.
water	30:22	0:0	6	pixel_fmt
stmts	31:4	45:4	5	
water	31:4	0:0	6	{
label	32:6	32:20	6	case TH_PF_420 :
water	33:8	0:0	6	p_dec
op	33:13	0:0	6	->
water	33:15	0:0	6	fmt_out
op	33:22	0:0	6	.
water	33:23	0:0	6	i_codec
op	33:31	0:0	6	=
water	33:33	0:0	6	VLC_CODEC_I420
water	33:47	0:0	6	;
break	34:8	34:13	6	
label	35:6	35:20	6	case TH_PF_422 :
water	36:8	0:0	6	p_dec
op	36:13	0:0	6	->
water	36:15	0:0	6	fmt_out
op	36:22	0:0	6	.
water	36:23	0:0	6	i_codec
op	36:31	0:0	6	=
water	36:33	0:0	6	VLC_CODEC_I422
water	36:47	0:0	6	;
break	37:8	37:13	6	
label	38:6	38:20	6	case TH_PF_444 :
water	39:8	0:0	6	p_dec
op	39:13	0:0	6	->
water	39:15	0:0	6	fmt_out
op	39:22	0:0	6	.
water	39:23	0:0	6	i_codec
op	39:31	0:0	6	=
water	39:33	0:0	6	VLC_CODEC_I444
water	39:47	0:0	6	;
break	40:8	40:13	6	
label	41:6	41:21	6	case TH_PF_RSVD :
label	42:6	42:13	6	default :
call	43:8	43:58	6	msg_Err
arg	43:17	43:22	7	p_dec
water	43:17	0:0	8	p_dec
arg	43:24	43:58	7	"unknown chroma in theora sample"
water	43:24	0:0	8	"unknown chroma in theora sample"
water	43:59	0:0	6	;
break	44:8	44:13	6	
water	45:4	0:0	6	}
water	46:4	0:0	2	p_dec
op	46:9	0:0	2	->
water	46:11	0:0	2	fmt_out
op	46:18	0:0	2	.
water	46:19	0:0	2	video
op	46:24	0:0	2	.
water	46:25	0:0	2	i_width
op	46:33	0:0	2	=
water	46:35	0:0	2	p_sys
op	46:40	0:0	2	->
water	46:42	0:0	2	ti
op	46:44	0:0	2	.
water	46:45	0:0	2	frame_width
water	46:56	0:0	2	;
water	47:4	0:0	2	p_dec
op	47:9	0:0	2	->
water	47:11	0:0	2	fmt_out
op	47:18	0:0	2	.
water	47:19	0:0	2	video
op	47:24	0:0	2	.
water	47:25	0:0	2	i_height
op	47:34	0:0	2	=
water	47:36	0:0	2	p_sys
op	47:41	0:0	2	->
water	47:43	0:0	2	ti
op	47:45	0:0	2	.
water	47:46	0:0	2	frame_height
water	47:58	0:0	2	;
if	48:4	57:4	2	(p_sys -> ti . pic_width && p_sys -> ti . pic_height)
cond	48:8	48:41	3	p_sys -> ti . pic_width && p_sys -> ti . pic_height
water	48:8	0:0	4	p_sys
op	48:13	0:0	4	->
water	48:15	0:0	4	ti
op	48:17	0:0	4	.
water	48:18	0:0	4	pic_width
op	48:28	0:0	4	&&
water	48:31	0:0	4	p_sys
op	48:36	0:0	4	->
water	48:38	0:0	4	ti
op	48:40	0:0	4	.
water	48:41	0:0	4	pic_height
stmts	49:4	57:4	3	
water	49:4	0:0	4	{
water	50:8	0:0	4	p_dec
op	50:13	0:0	4	->
water	50:15	0:0	4	fmt_out
op	50:22	0:0	4	.
water	50:23	0:0	4	video
op	50:28	0:0	4	.
water	50:29	0:0	4	i_visible_width
op	50:45	0:0	4	=
water	50:47	0:0	4	p_sys
op	50:52	0:0	4	->
water	50:54	0:0	4	ti
op	50:56	0:0	4	.
water	50:57	0:0	4	pic_width
water	50:66	0:0	4	;
water	51:8	0:0	4	p_dec
op	51:13	0:0	4	->
water	51:15	0:0	4	fmt_out
op	51:22	0:0	4	.
water	51:23	0:0	4	video
op	51:28	0:0	4	.
water	51:29	0:0	4	i_visible_height
op	51:46	0:0	4	=
water	51:48	0:0	4	p_sys
op	51:53	0:0	4	->
water	51:55	0:0	4	ti
op	51:57	0:0	4	.
water	51:58	0:0	4	pic_height
water	51:68	0:0	4	;
if	52:8	56:8	4	(p_sys -> ti . pic_x || p_sys -> ti . pic_y)
cond	52:12	52:41	5	p_sys -> ti . pic_x || p_sys -> ti . pic_y
water	52:12	0:0	6	p_sys
op	52:17	0:0	6	->
water	52:19	0:0	6	ti
op	52:21	0:0	6	.
water	52:22	0:0	6	pic_x
op	52:28	0:0	6	||
water	52:31	0:0	6	p_sys
op	52:36	0:0	6	->
water	52:38	0:0	6	ti
op	52:40	0:0	6	.
water	52:41	0:0	6	pic_y
stmts	53:8	56:8	5	
water	53:8	0:0	6	{
water	54:12	0:0	6	p_dec
op	54:17	0:0	6	->
water	54:19	0:0	6	fmt_out
op	54:26	0:0	6	.
water	54:27	0:0	6	video
op	54:32	0:0	6	.
water	54:33	0:0	6	i_x_offset
op	54:44	0:0	6	=
water	54:46	0:0	6	p_sys
op	54:51	0:0	6	->
water	54:53	0:0	6	ti
op	54:55	0:0	6	.
water	54:56	0:0	6	pic_x
water	54:61	0:0	6	;
water	55:12	0:0	6	p_dec
op	55:17	0:0	6	->
water	55:19	0:0	6	fmt_out
op	55:26	0:0	6	.
water	55:27	0:0	6	video
op	55:32	0:0	6	.
water	55:33	0:0	6	i_y_offset
op	55:44	0:0	6	=
water	55:46	0:0	6	p_sys
op	55:51	0:0	6	->
water	55:53	0:0	6	ti
op	55:55	0:0	6	.
water	55:56	0:0	6	pic_y
water	55:61	0:0	6	;
water	56:8	0:0	6	}
water	57:4	0:0	4	}
if	58:4	62:4	2	(p_sys -> ti . aspect_denominator && p_sys -> ti . aspect_numerator)
cond	58:8	58:50	3	p_sys -> ti . aspect_denominator && p_sys -> ti . aspect_numerator
water	58:8	0:0	4	p_sys
op	58:13	0:0	4	->
water	58:15	0:0	4	ti
op	58:17	0:0	4	.
water	58:18	0:0	4	aspect_denominator
op	58:37	0:0	4	&&
water	58:40	0:0	4	p_sys
op	58:45	0:0	4	->
water	58:47	0:0	4	ti
op	58:49	0:0	4	.
water	58:50	0:0	4	aspect_numerator
stmts	59:4	62:4	3	
water	59:4	0:0	4	{
water	60:8	0:0	4	p_dec
op	60:13	0:0	4	->
water	60:15	0:0	4	fmt_out
op	60:22	0:0	4	.
water	60:23	0:0	4	video
op	60:28	0:0	4	.
water	60:29	0:0	4	i_sar_num
op	60:39	0:0	4	=
water	60:41	0:0	4	p_sys
op	60:46	0:0	4	->
water	60:48	0:0	4	ti
op	60:50	0:0	4	.
water	60:51	0:0	4	aspect_numerator
water	60:67	0:0	4	;
water	61:8	0:0	4	p_dec
op	61:13	0:0	4	->
water	61:15	0:0	4	fmt_out
op	61:22	0:0	4	.
water	61:23	0:0	4	video
op	61:28	0:0	4	.
water	61:29	0:0	4	i_sar_den
op	61:39	0:0	4	=
water	61:41	0:0	4	p_sys
op	61:46	0:0	4	->
water	61:48	0:0	4	ti
op	61:50	0:0	4	.
water	61:51	0:0	4	aspect_denominator
water	61:69	0:0	4	;
water	62:4	0:0	4	}
else	63:4	67:4	2
stmts	64:4	67:4	3	
water	64:4	0:0	4	{
water	65:8	0:0	4	p_dec
op	65:13	0:0	4	->
water	65:15	0:0	4	fmt_out
op	65:22	0:0	4	.
water	65:23	0:0	4	video
op	65:28	0:0	4	.
water	65:29	0:0	4	i_sar_num
op	65:39	0:0	4	=
water	65:41	0:0	4	1
water	65:42	0:0	4	;
water	66:8	0:0	4	p_dec
op	66:13	0:0	4	->
water	66:15	0:0	4	fmt_out
op	66:22	0:0	4	.
water	66:23	0:0	4	video
op	66:28	0:0	4	.
water	66:29	0:0	4	i_sar_den
op	66:39	0:0	4	=
water	66:41	0:0	4	1
water	66:42	0:0	4	;
water	67:4	0:0	4	}
if	68:4	72:4	2	(p_sys -> ti . fps_numerator > 0 && p_sys -> ti . fps_denominator > 0)
cond	68:8	68:67	3	p_sys -> ti . fps_numerator > 0 && p_sys -> ti . fps_denominator > 0
water	68:8	0:0	4	p_sys
op	68:13	0:0	4	->
water	68:15	0:0	4	ti
op	68:17	0:0	4	.
water	68:18	0:0	4	fps_numerator
op	68:32	0:0	4	>
water	68:34	0:0	4	0
op	68:36	0:0	4	&&
water	68:39	0:0	4	p_sys
op	68:44	0:0	4	->
water	68:46	0:0	4	ti
op	68:48	0:0	4	.
water	68:49	0:0	4	fps_denominator
op	68:65	0:0	4	>
water	68:67	0:0	4	0
stmts	69:4	72:4	3	
water	69:4	0:0	4	{
water	70:8	0:0	4	p_dec
op	70:13	0:0	4	->
water	70:15	0:0	4	fmt_out
op	70:22	0:0	4	.
water	70:23	0:0	4	video
op	70:28	0:0	4	.
water	70:29	0:0	4	i_frame_rate
op	70:42	0:0	4	=
water	70:44	0:0	4	p_sys
op	70:49	0:0	4	->
water	70:51	0:0	4	ti
op	70:53	0:0	4	.
water	70:54	0:0	4	fps_numerator
water	70:67	0:0	4	;
water	71:8	0:0	4	p_dec
op	71:13	0:0	4	->
water	71:15	0:0	4	fmt_out
op	71:22	0:0	4	.
water	71:23	0:0	4	video
op	71:28	0:0	4	.
water	71:29	0:0	4	i_frame_rate_base
op	71:47	0:0	4	=
water	71:49	0:0	4	p_sys
op	71:54	0:0	4	->
water	71:56	0:0	4	ti
op	71:58	0:0	4	.
water	71:59	0:0	4	fps_denominator
water	71:74	0:0	4	;
water	72:4	0:0	4	}
call	73:4	78:46	2	msg_Dbg
arg	73:13	73:18	3	p_dec
water	73:13	0:0	4	p_dec
arg	73:20	74:43	3	"%dx%d %.02f fps video, frame content ""is %dx%d with offset (%d,%d)"
water	73:20	0:0	4	"%dx%d %.02f fps video, frame content "
water	74:13	0:0	4	"is %dx%d with offset (%d,%d)"
arg	75:13	75:34	3	p_sys->ti.frame_width
water	75:13	0:0	4	p_sys
op	75:18	0:0	4	->
water	75:20	0:0	4	ti
op	75:22	0:0	4	.
water	75:23	0:0	4	frame_width
arg	75:36	75:58	3	p_sys->ti.frame_height
water	75:36	0:0	4	p_sys
op	75:41	0:0	4	->
water	75:43	0:0	4	ti
op	75:45	0:0	4	.
water	75:46	0:0	4	frame_height
arg	76:13	76:70	3	(double)p_sys->ti.fps_numerator/p_sys->ti.fps_denominator
water	76:13	0:0	4	(
water	76:14	0:0	4	double
water	76:20	0:0	4	)
water	76:21	0:0	4	p_sys
op	76:26	0:0	4	->
water	76:28	0:0	4	ti
op	76:30	0:0	4	.
water	76:31	0:0	4	fps_numerator
op	76:44	0:0	4	/
water	76:45	0:0	4	p_sys
op	76:50	0:0	4	->
water	76:52	0:0	4	ti
op	76:54	0:0	4	.
water	76:55	0:0	4	fps_denominator
arg	77:13	77:32	3	p_sys->ti.pic_width
water	77:13	0:0	4	p_sys
op	77:18	0:0	4	->
water	77:20	0:0	4	ti
op	77:22	0:0	4	.
water	77:23	0:0	4	pic_width
arg	77:34	77:54	3	p_sys->ti.pic_height
water	77:34	0:0	4	p_sys
op	77:39	0:0	4	->
water	77:41	0:0	4	ti
op	77:43	0:0	4	.
water	77:44	0:0	4	pic_height
arg	78:13	78:28	3	p_sys->ti.pic_x
water	78:13	0:0	4	p_sys
op	78:18	0:0	4	->
water	78:20	0:0	4	ti
op	78:22	0:0	4	.
water	78:23	0:0	4	pic_x
arg	78:30	78:46	3	p_sys->ti.pic_y
water	78:30	0:0	4	p_sys
op	78:35	0:0	4	->
water	78:37	0:0	4	ti
op	78:39	0:0	4	.
water	78:40	0:0	4	pic_y
water	78:47	0:0	2	;
call	80:4	80:81	2	assert
arg	80:12	80:81	3	p_sys->ti.frame_height%16==0&&p_sys->ti.frame_height<1048576
water	80:12	0:0	4	p_sys
op	80:17	0:0	4	->
water	80:19	0:0	4	ti
op	80:21	0:0	4	.
water	80:22	0:0	4	frame_height
op	80:35	0:0	4	%
water	80:37	0:0	4	16
op	80:40	0:0	4	==
water	80:43	0:0	4	0
op	80:45	0:0	4	&&
water	80:48	0:0	4	p_sys
op	80:53	0:0	4	->
water	80:55	0:0	4	ti
op	80:57	0:0	4	.
water	80:58	0:0	4	frame_height
op	80:71	0:0	4	<
water	80:73	0:0	4	1048576
water	80:82	0:0	2	;
call	81:4	81:79	2	assert
arg	81:12	81:79	3	p_sys->ti.frame_width%16==0&&p_sys->ti.frame_width<1048576
water	81:12	0:0	4	p_sys
op	81:17	0:0	4	->
water	81:19	0:0	4	ti
op	81:21	0:0	4	.
water	81:22	0:0	4	frame_width
op	81:34	0:0	4	%
water	81:36	0:0	4	16
op	81:39	0:0	4	==
water	81:42	0:0	4	0
op	81:44	0:0	4	&&
water	81:47	0:0	4	p_sys
op	81:52	0:0	4	->
water	81:54	0:0	4	ti
op	81:56	0:0	4	.
water	81:57	0:0	4	frame_width
op	81:69	0:0	4	<
water	81:71	0:0	4	1048576
water	81:80	0:0	2	;
call	82:4	82:92	2	assert
arg	82:12	82:92	3	p_sys->ti.keyframe_granule_shift>=0&&p_sys->ti.keyframe_granule_shift<=31
water	82:12	0:0	4	p_sys
op	82:17	0:0	4	->
water	82:19	0:0	4	ti
op	82:21	0:0	4	.
water	82:22	0:0	4	keyframe_granule_shift
op	82:45	0:0	4	>=
water	82:48	0:0	4	0
op	82:50	0:0	4	&&
water	82:53	0:0	4	p_sys
op	82:58	0:0	4	->
water	82:60	0:0	4	ti
op	82:62	0:0	4	.
water	82:63	0:0	4	keyframe_granule_shift
op	82:86	0:0	4	<=
water	82:89	0:0	4	31
water	82:93	0:0	2	;
call	83:4	83:89	2	assert
arg	83:12	83:89	3	p_sys->ti.pic_x<=__MIN(p_sys->ti.frame_width-p_sys->ti.pic_width,255)
water	83:12	0:0	4	p_sys
op	83:17	0:0	4	->
water	83:19	0:0	4	ti
op	83:21	0:0	4	.
water	83:22	0:0	4	pic_x
op	83:28	0:0	4	<=
call	83:31	83:87	4	__MIN
arg	83:38	83:81	5	p_sys->ti.frame_width-p_sys->ti.pic_width
water	83:38	0:0	6	p_sys
op	83:43	0:0	6	->
water	83:45	0:0	6	ti
op	83:47	0:0	6	.
water	83:48	0:0	6	frame_width
op	83:60	0:0	6	-
water	83:62	0:0	6	p_sys
op	83:67	0:0	6	->
water	83:69	0:0	6	ti
op	83:71	0:0	6	.
water	83:72	0:0	6	pic_width
arg	83:83	83:87	5	255
water	83:83	0:0	6	255
water	83:90	0:0	2	;
call	84:4	84:76	2	assert
arg	84:12	84:76	3	p_sys->ti.pic_y<=p_sys->ti.frame_height-p_sys->ti.pic_height
water	84:12	0:0	4	p_sys
op	84:17	0:0	4	->
water	84:19	0:0	4	ti
op	84:21	0:0	4	.
water	84:22	0:0	4	pic_y
op	84:28	0:0	4	<=
water	84:31	0:0	4	p_sys
op	84:36	0:0	4	->
water	84:38	0:0	4	ti
op	84:40	0:0	4	.
water	84:41	0:0	4	frame_height
op	84:54	0:0	4	-
water	84:56	0:0	4	p_sys
op	84:61	0:0	4	->
water	84:63	0:0	4	ti
op	84:65	0:0	4	.
water	84:66	0:0	4	pic_height
water	84:77	0:0	2	;
call	85:4	85:83	2	assert
arg	85:12	85:83	3	p_sys->ti.frame_height-p_sys->ti.pic_height-p_sys->ti.pic_y<=255
water	85:12	0:0	4	p_sys
op	85:17	0:0	4	->
water	85:19	0:0	4	ti
op	85:21	0:0	4	.
water	85:22	0:0	4	frame_height
op	85:35	0:0	4	-
water	85:37	0:0	4	p_sys
op	85:42	0:0	4	->
water	85:44	0:0	4	ti
op	85:46	0:0	4	.
water	85:47	0:0	4	pic_height
op	85:58	0:0	4	-
water	85:60	0:0	4	p_sys
op	85:65	0:0	4	->
water	85:67	0:0	4	ti
op	85:69	0:0	4	.
water	85:70	0:0	4	pic_y
op	85:76	0:0	4	<=
water	85:79	0:0	4	255
water	85:84	0:0	2	;
if	87:4	98:4	2	(p_sys -> ti . frame_width < p_sys -> ti . pic_width || p_sys -> ti . frame_height < p_sys -> ti . pic_height)
cond	87:8	88:43	3	p_sys -> ti . frame_width < p_sys -> ti . pic_width || p_sys -> ti . frame_height < p_sys -> ti . pic_height
water	87:8	0:0	4	p_sys
op	87:13	0:0	4	->
water	87:15	0:0	4	ti
op	87:17	0:0	4	.
water	87:18	0:0	4	frame_width
op	87:30	0:0	4	<
water	87:32	0:0	4	p_sys
op	87:37	0:0	4	->
water	87:39	0:0	4	ti
op	87:41	0:0	4	.
water	87:42	0:0	4	pic_width
op	87:52	0:0	4	||
water	88:8	0:0	4	p_sys
op	88:13	0:0	4	->
water	88:15	0:0	4	ti
op	88:17	0:0	4	.
water	88:18	0:0	4	frame_height
op	88:31	0:0	4	<
water	88:33	0:0	4	p_sys
op	88:38	0:0	4	->
water	88:40	0:0	4	ti
op	88:42	0:0	4	.
water	88:43	0:0	4	pic_height
stmts	89:4	98:4	3	
water	89:4	0:0	4	{
call	90:8	93:60	4	msg_Warn
arg	90:18	90:23	5	p_dec
water	90:18	0:0	6	p_dec
arg	90:25	91:78	5	"trying to correct invalid theora header ""(frame size (%dx%d) is smaller than frame content (%d,%d))"
water	90:25	0:0	6	"trying to correct invalid theora header "
water	91:18	0:0	6	"(frame size (%dx%d) is smaller than frame content (%d,%d))"
arg	92:18	92:39	5	p_sys->ti.frame_width
water	92:18	0:0	6	p_sys
op	92:23	0:0	6	->
water	92:25	0:0	6	ti
op	92:27	0:0	6	.
water	92:28	0:0	6	frame_width
arg	92:41	92:63	5	p_sys->ti.frame_height
water	92:41	0:0	6	p_sys
op	92:46	0:0	6	->
water	92:48	0:0	6	ti
op	92:50	0:0	6	.
water	92:51	0:0	6	frame_height
arg	93:18	93:37	5	p_sys->ti.pic_width
water	93:18	0:0	6	p_sys
op	93:23	0:0	6	->
water	93:25	0:0	6	ti
op	93:27	0:0	6	.
water	93:28	0:0	6	pic_width
arg	93:39	93:60	5	p_sys->ti.pic_height
water	93:39	0:0	6	p_sys
op	93:44	0:0	6	->
water	93:46	0:0	6	ti
op	93:48	0:0	6	.
water	93:49	0:0	6	pic_height
water	93:61	0:0	4	;
if	94:8	95:53	4	(p_sys -> ti . frame_width < p_sys -> ti . pic_width)
cond	94:12	94:46	5	p_sys -> ti . frame_width < p_sys -> ti . pic_width
water	94:12	0:0	6	p_sys
op	94:17	0:0	6	->
water	94:19	0:0	6	ti
op	94:21	0:0	6	.
water	94:22	0:0	6	frame_width
op	94:34	0:0	6	<
water	94:36	0:0	6	p_sys
op	94:41	0:0	6	->
water	94:43	0:0	6	ti
op	94:45	0:0	6	.
water	94:46	0:0	6	pic_width
stmts	95:10	95:53	5	
water	95:10	0:0	6	p_sys
op	95:15	0:0	6	->
water	95:17	0:0	6	ti
op	95:19	0:0	6	.
water	95:20	0:0	6	frame_width
op	95:32	0:0	6	=
water	95:34	0:0	6	p_sys
op	95:39	0:0	6	->
water	95:41	0:0	6	ti
op	95:43	0:0	6	.
water	95:44	0:0	6	pic_width
water	95:53	0:0	6	;
if	96:8	97:57	4	(p_sys -> ti . frame_height < p_sys -> ti . pic_height)
cond	96:12	96:47	5	p_sys -> ti . frame_height < p_sys -> ti . pic_height
water	96:12	0:0	6	p_sys
op	96:17	0:0	6	->
water	96:19	0:0	6	ti
op	96:21	0:0	6	.
water	96:22	0:0	6	frame_height
op	96:35	0:0	6	<
water	96:37	0:0	6	p_sys
op	96:42	0:0	6	->
water	96:44	0:0	6	ti
op	96:46	0:0	6	.
water	96:47	0:0	6	pic_height
stmts	97:12	97:57	5	
water	97:12	0:0	6	p_sys
op	97:17	0:0	6	->
water	97:19	0:0	6	ti
op	97:21	0:0	6	.
water	97:22	0:0	6	frame_height
op	97:35	0:0	6	=
water	97:37	0:0	6	p_sys
op	97:42	0:0	6	->
water	97:44	0:0	6	ti
op	97:46	0:0	6	.
water	97:47	0:0	6	pic_height
water	97:57	0:0	6	;
water	98:4	0:0	4	}
water	100:4	0:0	2	oggpacket
op	100:13	0:0	2	.
water	100:14	0:0	2	b_o_s
op	100:21	0:0	2	=
water	100:23	0:0	2	0
water	100:24	0:0	2	;
water	101:4	0:0	2	oggpacket
op	101:13	0:0	2	.
water	101:14	0:0	2	bytes
op	101:21	0:0	2	=
water	101:23	0:0	2	pi_size
op	101:30	0:0	2	[
water	101:31	0:0	2	1
op	101:32	0:0	2	]
water	101:33	0:0	2	;
water	102:4	0:0	2	oggpacket
op	102:13	0:0	2	.
water	102:14	0:0	2	packet
op	102:21	0:0	2	=
water	102:23	0:0	2	pp_data
op	102:30	0:0	2	[
water	102:31	0:0	2	1
op	102:32	0:0	2	]
water	102:33	0:0	2	;
if	103:4	107:4	2	(th_decode_headerin (& p_sys -> ti ,& p_sys -> tc ,& ts ,& oggpacket ) < 0)
cond	103:8	103:72	3	th_decode_headerin (& p_sys -> ti ,& p_sys -> tc ,& ts ,& oggpacket ) < 0
call	103:8	103:68	4	th_decode_headerin
arg	103:28	103:38	5	&p_sys->ti
op	103:28	0:0	6	&
water	103:29	0:0	6	p_sys
op	103:34	0:0	6	->
water	103:36	0:0	6	ti
arg	103:40	103:50	5	&p_sys->tc
op	103:40	0:0	6	&
water	103:41	0:0	6	p_sys
op	103:46	0:0	6	->
water	103:48	0:0	6	tc
arg	103:52	103:55	5	&ts
op	103:52	0:0	6	&
water	103:53	0:0	6	ts
arg	103:57	103:68	5	&oggpacket
op	103:57	0:0	6	&
water	103:58	0:0	6	oggpacket
op	103:70	0:0	4	<
water	103:72	0:0	4	0
stmts	104:4	107:4	3	
water	104:4	0:0	4	{
call	105:8	105:57	4	msg_Err
arg	105:17	105:22	5	p_dec
water	105:17	0:0	6	p_dec
arg	105:24	105:57	5	"2nd Theora header is corrupted"
water	105:24	0:0	6	"2nd Theora header is corrupted"
water	105:58	0:0	4	;
goto	106:8	106:18	4	error
water	106:13	0:0	5	error
water	107:4	0:0	4	}
call	108:4	108:31	2	ParseTheoraComments
arg	108:25	108:31	3	p_dec
water	108:25	0:0	4	p_dec
water	108:32	0:0	2	;
water	112:4	0:0	2	oggpacket
op	112:13	0:0	2	.
water	112:14	0:0	2	b_o_s
op	112:21	0:0	2	=
water	112:23	0:0	2	0
water	112:24	0:0	2	;
water	113:4	0:0	2	oggpacket
op	113:13	0:0	2	.
water	113:14	0:0	2	bytes
op	113:21	0:0	2	=
water	113:23	0:0	2	pi_size
op	113:30	0:0	2	[
water	113:31	0:0	2	2
op	113:32	0:0	2	]
water	113:33	0:0	2	;
water	114:4	0:0	2	oggpacket
op	114:13	0:0	2	.
water	114:14	0:0	2	packet
op	114:21	0:0	2	=
water	114:23	0:0	2	pp_data
op	114:30	0:0	2	[
water	114:31	0:0	2	2
op	114:32	0:0	2	]
water	114:33	0:0	2	;
if	115:4	119:4	2	(th_decode_headerin (& p_sys -> ti ,& p_sys -> tc ,& ts ,& oggpacket ) < 0)
cond	115:8	115:72	3	th_decode_headerin (& p_sys -> ti ,& p_sys -> tc ,& ts ,& oggpacket ) < 0
call	115:8	115:68	4	th_decode_headerin
arg	115:28	115:38	5	&p_sys->ti
op	115:28	0:0	6	&
water	115:29	0:0	6	p_sys
op	115:34	0:0	6	->
water	115:36	0:0	6	ti
arg	115:40	115:50	5	&p_sys->tc
op	115:40	0:0	6	&
water	115:41	0:0	6	p_sys
op	115:46	0:0	6	->
water	115:48	0:0	6	tc
arg	115:52	115:55	5	&ts
op	115:52	0:0	6	&
water	115:53	0:0	6	ts
arg	115:57	115:68	5	&oggpacket
op	115:57	0:0	6	&
water	115:58	0:0	6	oggpacket
op	115:70	0:0	4	<
water	115:72	0:0	4	0
stmts	116:4	119:4	3	
water	116:4	0:0	4	{
call	117:8	117:57	4	msg_Err
arg	117:17	117:22	5	p_dec
water	117:17	0:0	6	p_dec
arg	117:24	117:57	5	"3rd Theora header is corrupted"
water	117:24	0:0	6	"3rd Theora header is corrupted"
water	117:58	0:0	4	;
goto	118:8	118:18	4	error
water	118:13	0:0	5	error
water	119:4	0:0	4	}
if	120:4	141:4	2	(! p_sys -> b_packetizer)
cond	120:8	120:16	3	! p_sys -> b_packetizer
op	120:8	0:0	4	!
water	120:9	0:0	4	p_sys
op	120:14	0:0	4	->
water	120:16	0:0	4	b_packetizer
stmts	121:4	141:4	3	
water	121:4	0:0	4	{
if	123:8	127:8	4	(( p_sys -> tcx =th_decode_alloc (& p_sys -> ti ,ts ) ) == NULL)
cond	123:13	123:67	5	( p_sys -> tcx =th_decode_alloc (& p_sys -> ti ,ts ) ) == NULL
water	123:13	0:0	6	(
water	123:15	0:0	6	p_sys
op	123:20	0:0	6	->
water	123:22	0:0	6	tcx
op	123:26	0:0	6	=
call	123:28	123:60	6	th_decode_alloc
arg	123:45	123:55	7	&p_sys->ti
op	123:45	0:0	8	&
water	123:46	0:0	8	p_sys
op	123:51	0:0	8	->
water	123:53	0:0	8	ti
arg	123:57	123:60	7	ts
water	123:57	0:0	8	ts
water	123:62	0:0	6	)
op	123:64	0:0	6	==
water	123:67	0:0	6	NULL
stmts	124:8	127:8	5	
water	124:8	0:0	6	{
call	125:12	125:64	6	msg_Err
arg	125:21	125:26	7	p_dec
water	125:21	0:0	8	p_dec
arg	125:28	125:64	7	"Could not allocate Theora decoder"
water	125:28	0:0	8	"Could not allocate Theora decoder"
water	125:65	0:0	6	;
goto	126:12	126:22	6	error
water	126:17	0:0	7	error
water	127:8	0:0	6	}
water	128:8	0:0	4	i_pp
op	128:13	0:0	4	=
call	128:15	128:68	4	var_InheritInteger
arg	128:35	128:40	5	p_dec
water	128:35	0:0	6	p_dec
arg	128:42	128:68	5	DEC_CFG_PREFIX"postproc"
water	128:42	0:0	6	DEC_CFG_PREFIX
water	128:57	0:0	6	"postproc"
water	128:69	0:0	4	;
if	129:8	140:8	4	(i_pp >= 0 && !th_decode_ctl (p_sys -> tcx ,TH_DECCTL_GET_PPLEVEL_MAX ,& i_max_pp ,sizeof ( int ) ))
cond	129:13	130:70	5	i_pp >= 0 && !th_decode_ctl (p_sys -> tcx ,TH_DECCTL_GET_PPLEVEL_MAX ,& i_max_pp ,sizeof ( int ) )
water	129:13	0:0	6	i_pp
op	129:18	0:0	6	>=
water	129:21	0:0	6	0
op	129:23	0:0	6	&&
op	129:26	0:0	6	!
call	129:27	130:70	6	th_decode_ctl
arg	129:42	129:52	7	p_sys->tcx
water	129:42	0:0	8	p_sys
op	129:47	0:0	8	->
water	129:49	0:0	8	tcx
arg	130:20	130:45	7	TH_DECCTL_GET_PPLEVEL_MAX
water	130:20	0:0	8	TH_DECCTL_GET_PPLEVEL_MAX
arg	130:47	130:56	7	&i_max_pp
op	130:47	0:0	8	&
water	130:48	0:0	8	i_max_pp
arg	130:58	130:70	7	sizeof(int)
op	130:58	0:0	8	sizeof
water	130:64	0:0	8	(
water	130:65	0:0	8	int
water	130:68	0:0	8	)
stmts	131:8	140:8	5	
water	131:8	0:0	6	{
water	132:12	0:0	6	i_pp
op	132:17	0:0	6	=
call	132:19	132:41	6	__MIN
arg	132:26	132:30	7	i_pp
water	132:26	0:0	8	i_pp
arg	132:32	132:41	7	i_max_pp
water	132:32	0:0	8	i_max_pp
water	132:42	0:0	6	;
if	133:12	136:31	6	(th_decode_ctl (p_sys -> tcx ,TH_DECCTL_SET_PPLEVEL ,& i_pp ,sizeof ( int ) ))
cond	133:17	134:51	7	th_decode_ctl (p_sys -> tcx ,TH_DECCTL_SET_PPLEVEL ,& i_pp ,sizeof ( int ) )
call	133:17	134:51	8	th_decode_ctl
arg	133:32	133:42	9	p_sys->tcx
water	133:32	0:0	10	p_sys
op	133:37	0:0	10	->
water	133:39	0:0	10	tcx
arg	133:44	133:65	9	TH_DECCTL_SET_PPLEVEL
water	133:44	0:0	10	TH_DECCTL_SET_PPLEVEL
arg	134:32	134:37	9	&i_pp
op	134:32	0:0	10	&
water	134:33	0:0	10	i_pp
arg	134:39	134:51	9	sizeof(int)
op	134:39	0:0	10	sizeof
water	134:45	0:0	10	(
water	134:46	0:0	10	int
water	134:49	0:0	10	)
stmts	135:16	136:31	7	
call	135:16	136:30	8	msg_Err
arg	135:25	135:30	9	p_dec
water	135:25	0:0	10	p_dec
arg	135:32	135:75	9	"Failed to set post processing level to %d"
water	135:32	0:0	10	"Failed to set post processing level to %d"
arg	136:25	136:30	9	i_pp
water	136:25	0:0	10	i_pp
water	136:31	0:0	8	;
else	137:12	139:41	6
stmts	138:16	139:41	7	
call	138:16	139:40	8	msg_Dbg
arg	138:25	138:30	9	p_dec
water	138:25	0:0	10	p_dec
arg	138:32	138:70	9	"Set post processing level to %d / %d"
water	138:32	0:0	10	"Set post processing level to %d / %d"
arg	139:25	139:29	9	i_pp
water	139:25	0:0	10	i_pp
arg	139:31	139:40	9	i_max_pp
water	139:31	0:0	10	i_max_pp
water	139:41	0:0	8	;
water	140:8	0:0	6	}
water	141:4	0:0	4	}
else	142:4	149:4	2
stmts	143:4	149:4	3	
water	143:4	0:0	4	{
water	144:8	0:0	4	p_dec
op	144:13	0:0	4	->
water	144:15	0:0	4	fmt_out
op	144:22	0:0	4	.
water	144:23	0:0	4	i_extra
op	144:31	0:0	4	=
water	144:33	0:0	4	p_dec
op	144:38	0:0	4	->
water	144:40	0:0	4	fmt_in
op	144:46	0:0	4	.
water	144:47	0:0	4	i_extra
water	144:54	0:0	4	;
water	145:8	0:0	4	p_dec
op	145:13	0:0	4	->
water	145:15	0:0	4	fmt_out
op	145:22	0:0	4	.
water	145:23	0:0	4	p_extra
op	145:31	0:0	4	=
call	145:33	146:73	4	xrealloc
arg	145:43	145:65	5	p_dec->fmt_out.p_extra
water	145:43	0:0	6	p_dec
op	145:48	0:0	6	->
water	145:50	0:0	6	fmt_out
op	145:57	0:0	6	.
water	145:58	0:0	6	p_extra
arg	146:50	146:73	5	p_dec->fmt_out.i_extra
water	146:50	0:0	6	p_dec
op	146:55	0:0	6	->
water	146:57	0:0	6	fmt_out
op	146:64	0:0	6	.
water	146:65	0:0	6	i_extra
water	146:74	0:0	4	;
call	147:8	148:62	4	memcpy
arg	147:16	147:38	5	p_dec->fmt_out.p_extra
water	147:16	0:0	6	p_dec
op	147:21	0:0	6	->
water	147:23	0:0	6	fmt_out
op	147:30	0:0	6	.
water	147:31	0:0	6	p_extra
arg	148:16	148:37	5	p_dec->fmt_in.p_extra
water	148:16	0:0	6	p_dec
op	148:21	0:0	6	->
water	148:23	0:0	6	fmt_in
op	148:29	0:0	6	.
water	148:30	0:0	6	p_extra
arg	148:39	148:62	5	p_dec->fmt_out.i_extra
water	148:39	0:0	6	p_dec
op	148:44	0:0	6	->
water	148:46	0:0	6	fmt_out
op	148:53	0:0	6	.
water	148:54	0:0	6	i_extra
water	148:63	0:0	4	;
water	149:4	0:0	4	}
call	151:4	151:22	2	th_setup_free
arg	151:19	151:22	3	ts
water	151:19	0:0	4	ts
water	151:23	0:0	2	;
return	152:4	152:22	2	VLC_SUCCESS
water	152:11	0:0	3	VLC_SUCCESS
label	153:0	153:5	2	error :
call	155:4	155:22	2	th_setup_free
arg	155:19	155:22	3	ts
water	155:19	0:0	4	ts
water	155:23	0:0	2	;
return	156:4	156:23	2	VLC_EGENERIC
water	156:11	0:0	3	VLC_EGENERIC

func	2:0	98:0	0	int	transcode_audio_process
params	2:27	0:0	1	
param	2:29	2:52	2	sout_stream_t *	p_stream
param	3:36	3:60	2	sout_stream_id_sys_t *	id
param	4:36	4:47	2	block_t *	in
param	4:49	4:63	2	block_t * *	out
stmnts	0:0	97:22	1	
decl	6:4	6:46	2	sout_stream_sys_t	*p_sys
op	6:29	0:0	2	=
water	6:31	0:0	2	p_stream
op	6:39	0:0	2	->
water	6:41	0:0	2	p_sys
decl	7:4	7:34	2	block_t	*p_block
water	7:20	0:0	2	,
decl	7:4	7:34	2	block_t	*p_audio_buf
op	8:4	0:0	2	*
water	8:5	0:0	2	out
op	8:9	0:0	2	=
water	8:11	0:0	2	NULL
water	8:15	0:0	2	;
if	9:4	17:4	2	(unlikely (in == NULL ))
cond	9:8	9:29	3	unlikely (in == NULL )
call	9:8	9:29	4	unlikely
arg	9:18	9:29	5	in==NULL
water	9:18	0:0	6	in
op	9:21	0:0	6	==
water	9:24	0:0	6	NULL
stmts	10:4	17:4	3	
water	10:4	0:0	4	{
decl	11:8	11:24	4	block_t	*p_block
do	12:8	15:8	4	(p_block)
cond	15:17	15:17	5	p_block
water	15:17	0:0	6	p_block
stmts	12:11	15:8	5	
water	12:11	0:0	6	{
water	13:11	0:0	6	p_block
op	13:19	0:0	6	=
call	13:21	13:72	6	id->p_encoder->pf_encode_audio
arg	13:52	13:65	7	id->p_encoder
water	13:52	0:0	8	id
op	13:54	0:0	8	->
water	13:56	0:0	8	p_encoder
arg	13:67	13:72	7	NULL
water	13:67	0:0	8	NULL
water	13:73	0:0	6	;
call	14:11	14:43	6	block_ChainAppend
arg	14:30	14:33	7	out
water	14:30	0:0	8	out
arg	14:35	14:43	7	p_block
water	14:35	0:0	8	p_block
water	14:44	0:0	6	;
water	15:8	0:0	6	}
water	15:26	0:0	4	;
return	16:8	16:26	4	VLC_SUCCESS
water	16:15	0:0	5	VLC_SUCCESS
water	17:4	0:0	4	}
while	18:4	96:4	2	(( p_audio_buf =id -> p_decoder -> pf_decode_audio (id -> p_decoder ,& in ) ))
cond	18:11	19:63	3	( p_audio_buf =id -> p_decoder -> pf_decode_audio (id -> p_decoder ,& in ) )
water	18:11	0:0	4	(
water	18:12	0:0	4	p_audio_buf
op	18:24	0:0	4	=
call	18:26	19:62	4	id->p_decoder->pf_decode_audio
arg	18:58	18:71	5	id->p_decoder
water	18:58	0:0	6	id
op	18:60	0:0	6	->
water	18:62	0:0	6	p_decoder
arg	19:58	19:62	5	&in
op	19:58	0:0	6	&
water	19:59	0:0	6	in
water	19:63	0:0	4	)
stmts	20:4	96:4	3	
water	20:4	0:0	4	{
if	21:8	48:8	4	(unlikely (! id -> p_encoder -> p_module ))
cond	21:12	21:47	5	unlikely (! id -> p_encoder -> p_module )
call	21:12	21:47	6	unlikely
arg	21:22	21:47	7	!id->p_encoder->p_module
op	21:22	0:0	8	!
water	21:23	0:0	8	id
op	21:25	0:0	8	->
water	21:27	0:0	8	p_encoder
op	21:36	0:0	8	->
water	21:38	0:0	8	p_module
stmts	22:8	48:8	5	
water	22:8	0:0	6	{
water	24:12	0:0	6	id
op	24:14	0:0	6	->
water	24:16	0:0	6	p_encoder
op	24:25	0:0	6	->
water	24:27	0:0	6	fmt_out
op	24:34	0:0	6	.
water	24:35	0:0	6	i_codec
op	24:43	0:0	6	=
water	24:45	0:0	6	p_sys
op	24:50	0:0	6	->
water	24:52	0:0	6	i_acodec
water	24:60	0:0	6	;
water	25:12	0:0	6	id
op	25:14	0:0	6	->
water	25:16	0:0	6	p_encoder
op	25:25	0:0	6	->
water	25:27	0:0	6	fmt_out
op	25:34	0:0	6	.
water	25:35	0:0	6	audio
op	25:40	0:0	6	.
water	25:41	0:0	6	i_rate
op	25:48	0:0	6	=
water	25:50	0:0	6	p_sys
op	25:55	0:0	6	->
water	25:57	0:0	6	i_sample_rate
op	25:71	0:0	6	>
water	25:73	0:0	6	0
water	25:75	0:0	6	?
water	26:16	0:0	6	p_sys
op	26:21	0:0	6	->
water	26:23	0:0	6	i_sample_rate
water	26:37	0:0	6	:
water	26:39	0:0	6	id
op	26:41	0:0	6	->
water	26:43	0:0	6	p_decoder
op	26:52	0:0	6	->
water	26:54	0:0	6	fmt_out
op	26:61	0:0	6	.
water	26:62	0:0	6	audio
op	26:67	0:0	6	.
water	26:68	0:0	6	i_rate
water	26:74	0:0	6	;
water	27:12	0:0	6	id
op	27:14	0:0	6	->
water	27:16	0:0	6	p_encoder
op	27:25	0:0	6	->
water	27:27	0:0	6	fmt_out
op	27:34	0:0	6	.
water	27:35	0:0	6	i_bitrate
op	27:45	0:0	6	=
water	27:47	0:0	6	p_sys
op	27:52	0:0	6	->
water	27:54	0:0	6	i_abitrate
water	27:64	0:0	6	;
water	28:12	0:0	6	id
op	28:14	0:0	6	->
water	28:16	0:0	6	p_encoder
op	28:25	0:0	6	->
water	28:27	0:0	6	fmt_out
op	28:34	0:0	6	.
water	28:35	0:0	6	audio
op	28:40	0:0	6	.
water	28:41	0:0	6	i_bitspersample
op	28:57	0:0	6	=
water	29:16	0:0	6	id
op	29:18	0:0	6	->
water	29:20	0:0	6	p_decoder
op	29:29	0:0	6	->
water	29:31	0:0	6	fmt_out
op	29:38	0:0	6	.
water	29:39	0:0	6	audio
op	29:44	0:0	6	.
water	29:45	0:0	6	i_bitspersample
water	29:60	0:0	6	;
water	30:12	0:0	6	id
op	30:14	0:0	6	->
water	30:16	0:0	6	p_encoder
op	30:25	0:0	6	->
water	30:27	0:0	6	fmt_out
op	30:34	0:0	6	.
water	30:35	0:0	6	audio
op	30:40	0:0	6	.
water	30:41	0:0	6	i_channels
op	30:52	0:0	6	=
water	30:54	0:0	6	p_sys
op	30:59	0:0	6	->
water	30:61	0:0	6	i_channels
op	30:72	0:0	6	>
water	30:74	0:0	6	0
water	30:76	0:0	6	?
water	31:16	0:0	6	p_sys
op	31:21	0:0	6	->
water	31:23	0:0	6	i_channels
water	31:34	0:0	6	:
water	31:36	0:0	6	id
op	31:38	0:0	6	->
water	31:40	0:0	6	p_decoder
op	31:49	0:0	6	->
water	31:51	0:0	6	fmt_out
op	31:58	0:0	6	.
water	31:59	0:0	6	audio
op	31:64	0:0	6	.
water	31:65	0:0	6	i_channels
water	31:75	0:0	6	;
water	32:12	0:0	6	id
op	32:14	0:0	6	->
water	32:16	0:0	6	p_encoder
op	32:25	0:0	6	->
water	32:27	0:0	6	fmt_in
op	32:33	0:0	6	.
water	32:34	0:0	6	audio
op	32:39	0:0	6	.
water	32:40	0:0	6	i_original_channels
op	32:60	0:0	6	=
water	33:12	0:0	6	id
op	33:14	0:0	6	->
water	33:16	0:0	6	p_encoder
op	33:25	0:0	6	->
water	33:27	0:0	6	fmt_out
op	33:34	0:0	6	.
water	33:35	0:0	6	audio
op	33:40	0:0	6	.
water	33:41	0:0	6	i_original_channels
op	33:61	0:0	6	=
water	34:16	0:0	6	id
op	34:18	0:0	6	->
water	34:20	0:0	6	p_decoder
op	34:29	0:0	6	->
water	34:31	0:0	6	fmt_out
op	34:38	0:0	6	.
water	34:39	0:0	6	audio
op	34:44	0:0	6	.
water	34:45	0:0	6	i_physical_channels
water	34:64	0:0	6	;
water	35:12	0:0	6	id
op	35:14	0:0	6	->
water	35:16	0:0	6	p_encoder
op	35:25	0:0	6	->
water	35:27	0:0	6	fmt_in
op	35:33	0:0	6	.
water	35:34	0:0	6	audio
op	35:39	0:0	6	.
water	35:40	0:0	6	i_physical_channels
op	35:60	0:0	6	=
water	36:12	0:0	6	id
op	36:14	0:0	6	->
water	36:16	0:0	6	p_encoder
op	36:25	0:0	6	->
water	36:27	0:0	6	fmt_out
op	36:34	0:0	6	.
water	36:35	0:0	6	audio
op	36:40	0:0	6	.
water	36:41	0:0	6	i_physical_channels
op	36:61	0:0	6	=
water	37:16	0:0	6	pi_channels_maps
op	37:32	0:0	6	[
water	37:33	0:0	6	id
op	37:35	0:0	6	->
water	37:37	0:0	6	p_encoder
op	37:46	0:0	6	->
water	37:48	0:0	6	fmt_out
op	37:55	0:0	6	.
water	37:56	0:0	6	audio
op	37:61	0:0	6	.
water	37:62	0:0	6	i_channels
op	37:72	0:0	6	]
water	37:73	0:0	6	;
if	38:12	42:12	6	(transcode_audio_initialize_encoder (id ,p_stream ))
cond	38:16	38:65	7	transcode_audio_initialize_encoder (id ,p_stream )
call	38:16	38:65	8	transcode_audio_initialize_encoder
arg	38:52	38:54	9	id
water	38:52	0:0	10	id
arg	38:56	38:65	9	p_stream
water	38:56	0:0	10	p_stream
stmts	39:12	42:12	7	
water	39:12	0:0	8	{
call	40:16	40:63	8	msg_Err
arg	40:25	40:33	9	p_stream
water	40:25	0:0	10	p_stream
arg	40:35	40:63	9	"cannot create audio chain"
water	40:35	0:0	10	"cannot create audio chain"
water	40:64	0:0	8	;
return	41:16	41:35	8	VLC_EGENERIC
water	41:23	0:0	9	VLC_EGENERIC
water	42:12	0:0	8	}
if	43:12	45:35	6	(unlikely (transcode_audio_initialize_filters (p_stream ,id ,p_sys ,& id -> p_decoder -> fmt_out . audio ) != VLC_SUCCESS ))
cond	43:16	44:73	7	unlikely (transcode_audio_initialize_filters (p_stream ,id ,p_sys ,& id -> p_decoder -> fmt_out . audio ) != VLC_SUCCESS )
call	43:16	44:73	8	unlikely
arg	43:26	44:73	9	transcode_audio_initialize_filters(p_stream,id,p_sys,&id->p_decoder->fmt_out.audio)!=VLC_SUCCESS
call	43:26	44:56	10	transcode_audio_initialize_filters
arg	43:62	43:70	11	p_stream
water	43:62	0:0	12	p_stream
arg	43:72	43:74	11	id
water	43:72	0:0	12	id
arg	43:76	43:81	11	p_sys
water	43:76	0:0	12	p_sys
arg	44:26	44:56	11	&id->p_decoder->fmt_out.audio
op	44:26	0:0	12	&
water	44:27	0:0	12	id
op	44:29	0:0	12	->
water	44:31	0:0	12	p_decoder
op	44:40	0:0	12	->
water	44:42	0:0	12	fmt_out
op	44:49	0:0	12	.
water	44:50	0:0	12	audio
op	44:58	0:0	10	!=
water	44:61	0:0	10	VLC_SUCCESS
stmts	45:16	45:35	7	
return	45:16	45:35	8	VLC_EGENERIC
water	45:23	0:0	9	VLC_EGENERIC
call	46:12	46:83	6	date_Init
arg	46:23	46:42	7	&id->next_input_pts
op	46:23	0:0	8	&
water	46:24	0:0	8	id
op	46:26	0:0	8	->
water	46:28	0:0	8	next_input_pts
arg	46:44	46:79	7	id->p_decoder->fmt_out.audio.i_rate
water	46:44	0:0	8	id
op	46:46	0:0	8	->
water	46:48	0:0	8	p_decoder
op	46:57	0:0	8	->
water	46:59	0:0	8	fmt_out
op	46:66	0:0	8	.
water	46:67	0:0	8	audio
op	46:72	0:0	8	.
water	46:73	0:0	8	i_rate
arg	46:81	46:83	7	1
water	46:81	0:0	8	1
water	46:84	0:0	6	;
call	47:12	47:62	6	date_Set
arg	47:22	47:41	7	&id->next_input_pts
op	47:22	0:0	8	&
water	47:23	0:0	8	id
op	47:25	0:0	8	->
water	47:27	0:0	8	next_input_pts
arg	47:43	47:62	7	p_audio_buf->i_pts
water	47:43	0:0	8	p_audio_buf
op	47:54	0:0	8	->
water	47:56	0:0	8	i_pts
water	47:63	0:0	6	;
water	48:8	0:0	6	}
if	50:8	65:8	4	(unlikely (( id -> p_decoder -> fmt_out . audio . i_rate != id -> fmt_audio . i_rate ) || ( id -> p_decoder -> fmt_out . audio . i_physical_channels != id -> fmt_audio . i_physical_channels ) ))
cond	50:12	51:112	5	unlikely (( id -> p_decoder -> fmt_out . audio . i_rate != id -> fmt_audio . i_rate ) || ( id -> p_decoder -> fmt_out . audio . i_physical_channels != id -> fmt_audio . i_physical_channels ) )
call	50:12	51:112	6	unlikely
arg	50:22	51:112	7	(id->p_decoder->fmt_out.audio.i_rate!=id->fmt_audio.i_rate)||(id->p_decoder->fmt_out.audio.i_physical_channels!=id->fmt_audio.i_physical_channels)
water	50:22	0:0	8	(
water	50:24	0:0	8	id
op	50:26	0:0	8	->
water	50:28	0:0	8	p_decoder
op	50:37	0:0	8	->
water	50:39	0:0	8	fmt_out
op	50:46	0:0	8	.
water	50:47	0:0	8	audio
op	50:52	0:0	8	.
water	50:53	0:0	8	i_rate
op	50:60	0:0	8	!=
water	50:63	0:0	8	id
op	50:65	0:0	8	->
water	50:67	0:0	8	fmt_audio
op	50:76	0:0	8	.
water	50:77	0:0	8	i_rate
water	50:84	0:0	8	)
op	50:86	0:0	8	||
water	51:22	0:0	8	(
water	51:24	0:0	8	id
op	51:26	0:0	8	->
water	51:28	0:0	8	p_decoder
op	51:37	0:0	8	->
water	51:39	0:0	8	fmt_out
op	51:46	0:0	8	.
water	51:47	0:0	8	audio
op	51:52	0:0	8	.
water	51:53	0:0	8	i_physical_channels
op	51:73	0:0	8	!=
water	51:76	0:0	8	id
op	51:78	0:0	8	->
water	51:80	0:0	8	fmt_audio
op	51:89	0:0	8	.
water	51:90	0:0	8	i_physical_channels
water	51:110	0:0	8	)
stmts	52:8	65:8	5	
water	52:8	0:0	6	{
call	53:12	53:80	6	msg_Info
arg	53:22	53:30	7	p_stream
water	53:22	0:0	8	p_stream
arg	53:32	53:80	7	"Audio changed, trying to reinitialize filters"
water	53:32	0:0	8	"Audio changed, trying to reinitialize filters"
water	53:81	0:0	6	;
if	54:12	55:74	6	(id -> p_af_chain != NULL)
cond	54:16	54:34	7	id -> p_af_chain != NULL
water	54:16	0:0	8	id
op	54:18	0:0	8	->
water	54:20	0:0	8	p_af_chain
op	54:31	0:0	8	!=
water	54:34	0:0	8	NULL
stmts	55:16	55:74	7	
call	55:16	55:73	8	aout_FiltersDelete
arg	55:36	55:56	9	(vlc_object_t*)NULL
water	55:36	0:0	10	(
water	55:37	0:0	10	vlc_object_t
op	55:50	0:0	10	*
water	55:51	0:0	10	)
water	55:52	0:0	10	NULL
arg	55:58	55:73	9	id->p_af_chain
water	55:58	0:0	10	id
op	55:60	0:0	10	->
water	55:62	0:0	10	p_af_chain
water	55:74	0:0	8	;
water	57:12	0:0	6	id
op	57:14	0:0	6	->
water	57:16	0:0	6	p_decoder
op	57:25	0:0	6	->
water	57:27	0:0	6	fmt_out
op	57:34	0:0	6	.
water	57:35	0:0	6	audio
op	57:40	0:0	6	.
water	57:41	0:0	6	i_format
op	57:50	0:0	6	=
water	57:52	0:0	6	id
op	57:54	0:0	6	->
water	57:56	0:0	6	p_decoder
op	57:65	0:0	6	->
water	57:67	0:0	6	fmt_out
op	57:74	0:0	6	.
water	57:75	0:0	6	i_codec
water	57:82	0:0	6	;
call	58:12	58:62	6	aout_FormatPrepare
arg	58:32	58:62	7	&id->p_decoder->fmt_out.audio
op	58:32	0:0	8	&
water	58:33	0:0	8	id
op	58:35	0:0	8	->
water	58:37	0:0	8	p_decoder
op	58:46	0:0	8	->
water	58:48	0:0	8	fmt_out
op	58:55	0:0	8	.
water	58:56	0:0	8	audio
water	58:63	0:0	6	;
if	59:12	61:35	6	(transcode_audio_initialize_filters (p_stream ,id ,p_sys ,& id -> p_decoder -> fmt_out . audio ) != VLC_SUCCESS)
cond	59:16	60:61	7	transcode_audio_initialize_filters (p_stream ,id ,p_sys ,& id -> p_decoder -> fmt_out . audio ) != VLC_SUCCESS
call	59:16	60:56	8	transcode_audio_initialize_filters
arg	59:52	59:60	9	p_stream
water	59:52	0:0	10	p_stream
arg	59:62	59:64	9	id
water	59:62	0:0	10	id
arg	59:66	59:71	9	p_sys
water	59:66	0:0	10	p_sys
arg	60:26	60:56	9	&id->p_decoder->fmt_out.audio
op	60:26	0:0	10	&
water	60:27	0:0	10	id
op	60:29	0:0	10	->
water	60:31	0:0	10	p_decoder
op	60:40	0:0	10	->
water	60:42	0:0	10	fmt_out
op	60:49	0:0	10	.
water	60:50	0:0	10	audio
op	60:58	0:0	8	!=
water	60:61	0:0	8	VLC_SUCCESS
stmts	61:16	61:35	7	
return	61:16	61:35	8	VLC_EGENERIC
water	61:23	0:0	9	VLC_EGENERIC
call	63:12	63:68	6	date_Init
arg	63:23	63:42	7	&id->next_input_pts
op	63:23	0:0	8	&
water	63:24	0:0	8	id
op	63:26	0:0	8	->
water	63:28	0:0	8	next_input_pts
arg	63:44	63:64	7	id->fmt_audio.i_rate
water	63:44	0:0	8	id
op	63:46	0:0	8	->
water	63:48	0:0	8	fmt_audio
op	63:57	0:0	8	.
water	63:58	0:0	8	i_rate
arg	63:66	63:68	7	1
water	63:66	0:0	8	1
water	63:69	0:0	6	;
call	64:12	64:62	6	date_Set
arg	64:22	64:41	7	&id->next_input_pts
op	64:22	0:0	8	&
water	64:23	0:0	8	id
op	64:25	0:0	8	->
water	64:27	0:0	8	next_input_pts
arg	64:43	64:62	7	p_audio_buf->i_pts
water	64:43	0:0	8	p_audio_buf
op	64:54	0:0	8	->
water	64:56	0:0	8	i_pts
water	64:63	0:0	6	;
water	65:8	0:0	6	}
if	66:8	85:8	4	(p_sys -> b_master_sync)
cond	66:12	66:19	5	p_sys -> b_master_sync
water	66:12	0:0	6	p_sys
op	66:17	0:0	6	->
water	66:19	0:0	6	b_master_sync
stmts	67:8	85:8	5	
water	67:8	0:0	6	{
decl	68:12	68:59	6	mtime_t	i_pts
op	68:26	0:0	6	=
call	68:28	68:58	7	date_Get
arg	68:38	68:58	8	&id->next_input_pts
op	68:38	0:0	9	&
water	68:39	0:0	9	id
op	68:41	0:0	9	->
water	68:43	0:0	9	next_input_pts
decl	69:12	69:31	6	mtime_t	i_drift
op	69:28	0:0	6	=
water	69:30	0:0	6	0
if	70:12	71:52	6	(likely (p_audio_buf -> i_pts != VLC_TS_INVALID ))
cond	70:16	70:61	7	likely (p_audio_buf -> i_pts != VLC_TS_INVALID )
call	70:16	70:61	8	likely
arg	70:24	70:61	9	p_audio_buf->i_pts!=VLC_TS_INVALID
water	70:24	0:0	10	p_audio_buf
op	70:35	0:0	10	->
water	70:37	0:0	10	i_pts
op	70:43	0:0	10	!=
water	70:46	0:0	10	VLC_TS_INVALID
stmts	71:16	71:52	7	
water	71:16	0:0	8	i_drift
op	71:24	0:0	8	=
water	71:26	0:0	8	p_audio_buf
op	71:37	0:0	8	->
water	71:39	0:0	8	i_pts
op	71:45	0:0	8	-
water	71:47	0:0	8	i_pts
water	71:52	0:0	8	;
if	72:12	82:12	6	(unlikely (i_drift > MASTER_SYNC_MAX_DRIFT || i_drift < - MASTER_SYNC_MAX_DRIFT ))
cond	72:17	73:52	7	unlikely (i_drift > MASTER_SYNC_MAX_DRIFT || i_drift < - MASTER_SYNC_MAX_DRIFT )
call	72:17	73:52	8	unlikely
arg	72:26	73:52	9	i_drift>MASTER_SYNC_MAX_DRIFT||i_drift<-MASTER_SYNC_MAX_DRIFT
water	72:26	0:0	10	i_drift
op	72:34	0:0	10	>
water	72:36	0:0	10	MASTER_SYNC_MAX_DRIFT
op	73:17	0:0	10	||
water	73:20	0:0	10	i_drift
op	73:28	0:0	10	<
op	73:30	0:0	10	-
water	73:31	0:0	10	MASTER_SYNC_MAX_DRIFT
stmts	74:12	82:12	7	
water	74:12	0:0	8	{
call	75:16	77:28	8	msg_Dbg
arg	75:25	75:33	9	p_stream
water	75:25	0:0	10	p_stream
arg	76:20	76:80	9	"audio drift is too high (%"PRId64"), resetting master sync"
water	76:20	0:0	10	"audio drift is too high (%"
water	76:48	0:0	10	PRId64
water	76:54	0:0	10	"), resetting master sync"
arg	77:20	77:28	9	i_drift
water	77:20	0:0	10	i_drift
water	77:29	0:0	8	;
call	78:16	78:66	8	date_Set
arg	78:26	78:45	9	&id->next_input_pts
op	78:26	0:0	10	&
water	78:27	0:0	10	id
op	78:29	0:0	10	->
water	78:31	0:0	10	next_input_pts
arg	78:47	78:66	9	p_audio_buf->i_pts
water	78:47	0:0	10	p_audio_buf
op	78:58	0:0	10	->
water	78:60	0:0	10	i_pts
water	78:67	0:0	8	;
water	79:16	0:0	8	i_pts
op	79:22	0:0	8	=
call	79:24	79:54	8	date_Get
arg	79:34	79:54	9	&id->next_input_pts
op	79:34	0:0	10	&
water	79:35	0:0	10	id
op	79:37	0:0	10	->
water	79:39	0:0	10	next_input_pts
water	79:55	0:0	8	;
if	80:16	81:56	8	(likely (p_audio_buf -> i_pts != VLC_TS_INVALID ))
cond	80:20	80:64	9	likely (p_audio_buf -> i_pts != VLC_TS_INVALID )
call	80:20	80:64	10	likely
arg	80:27	80:64	11	p_audio_buf->i_pts!=VLC_TS_INVALID
water	80:27	0:0	12	p_audio_buf
op	80:38	0:0	12	->
water	80:40	0:0	12	i_pts
op	80:46	0:0	12	!=
water	80:49	0:0	12	VLC_TS_INVALID
stmts	81:20	81:56	9	
water	81:20	0:0	10	i_drift
op	81:28	0:0	10	=
water	81:30	0:0	10	p_audio_buf
op	81:41	0:0	10	->
water	81:43	0:0	10	i_pts
op	81:49	0:0	10	-
water	81:51	0:0	10	i_pts
water	81:56	0:0	10	;
water	82:12	0:0	8	}
water	83:12	0:0	6	p_sys
op	83:17	0:0	6	->
water	83:19	0:0	6	i_master_drift
op	83:34	0:0	6	=
water	83:36	0:0	6	i_drift
water	83:43	0:0	6	;
call	84:12	84:75	6	date_Increment
arg	84:28	84:47	7	&id->next_input_pts
op	84:28	0:0	8	&
water	84:29	0:0	8	id
op	84:31	0:0	8	->
water	84:33	0:0	8	next_input_pts
arg	84:49	84:75	7	p_audio_buf->i_nb_samples
water	84:49	0:0	8	p_audio_buf
op	84:60	0:0	8	->
water	84:62	0:0	8	i_nb_samples
water	84:76	0:0	6	;
water	85:8	0:0	6	}
water	86:8	0:0	4	p_audio_buf
op	86:19	0:0	4	->
water	86:21	0:0	4	i_dts
op	86:27	0:0	4	=
water	86:29	0:0	4	p_audio_buf
op	86:40	0:0	4	->
water	86:42	0:0	4	i_pts
water	86:47	0:0	4	;
water	88:8	0:0	4	p_audio_buf
op	88:20	0:0	4	=
call	88:22	89:59	4	aout_FiltersPlay
arg	88:40	88:54	5	id->p_af_chain
water	88:40	0:0	6	id
op	88:42	0:0	6	->
water	88:44	0:0	6	p_af_chain
arg	88:56	88:67	5	p_audio_buf
water	88:56	0:0	6	p_audio_buf
arg	89:40	89:59	5	INPUT_RATE_DEFAULT
water	89:40	0:0	6	INPUT_RATE_DEFAULT
water	89:60	0:0	4	;
if	90:8	91:19	4	(! p_audio_buf)
cond	90:12	90:13	5	! p_audio_buf
op	90:12	0:0	6	!
water	90:13	0:0	6	p_audio_buf
stmts	91:12	91:19	5	
call	91:12	91:18	6	abort
water	91:19	0:0	6	;
water	92:8	0:0	4	p_audio_buf
op	92:19	0:0	4	->
water	92:21	0:0	4	i_dts
op	92:27	0:0	4	=
water	92:29	0:0	4	p_audio_buf
op	92:40	0:0	4	->
water	92:42	0:0	4	i_pts
water	92:47	0:0	4	;
water	93:8	0:0	4	p_block
op	93:16	0:0	4	=
call	93:18	93:77	4	id->p_encoder->pf_encode_audio
arg	93:50	93:63	5	id->p_encoder
water	93:50	0:0	6	id
op	93:52	0:0	6	->
water	93:54	0:0	6	p_encoder
arg	93:65	93:77	5	p_audio_buf
water	93:65	0:0	6	p_audio_buf
water	93:78	0:0	4	;
call	94:8	94:40	4	block_ChainAppend
arg	94:27	94:30	5	out
water	94:27	0:0	6	out
arg	94:32	94:40	5	p_block
water	94:32	0:0	6	p_block
water	94:41	0:0	4	;
call	95:8	95:35	4	block_Release
arg	95:23	95:35	5	p_audio_buf
water	95:23	0:0	6	p_audio_buf
water	95:36	0:0	4	;
water	96:4	0:0	4	}
return	97:4	97:22	2	VLC_SUCCESS
water	97:11	0:0	3	VLC_SUCCESS

func	2:0	43:0	0	static int	st_SessionOpenCommon
params	2:32	0:0	1	
param	2:33	2:53	2	vlc_tls_creds_t *	crd
param	2:55	2:73	2	vlc_tls_t *	session
param	3:33	3:39	2	int	fd
param	3:41	3:54	2	bool	b_server
stmnts	0:0	42:12	1	
decl	4:4	4:54	2	vlc_tls_sys_t	*sys
op	4:23	0:0	2	=
call	4:25	4:53	3	malloc
arg	4:32	4:53	4	sizeof(*session->sys)
op	4:32	0:0	5	sizeof
water	4:38	0:0	5	(
op	4:39	0:0	5	*
water	4:40	0:0	5	session
op	4:47	0:0	5	->
water	4:49	0:0	5	sys
water	4:52	0:0	5	)
if	5:4	6:25	2	(unlikely (sys == NULL ))
cond	5:8	5:28	3	unlikely (sys == NULL )
call	5:8	5:28	4	unlikely
arg	5:17	5:28	5	sys==NULL
water	5:17	0:0	6	sys
op	5:21	0:0	6	==
water	5:24	0:0	6	NULL
stmts	6:8	6:25	3	
return	6:8	6:25	4	VLC_ENOMEM
water	6:15	0:0	5	VLC_ENOMEM
water	7:4	0:0	2	sys
op	7:7	0:0	2	->
water	7:9	0:0	2	p_cred
op	7:16	0:0	2	=
water	7:18	0:0	2	crd
op	7:21	0:0	2	->
water	7:23	0:0	2	sys
water	7:26	0:0	2	;
water	8:4	0:0	2	sys
op	8:7	0:0	2	->
water	8:9	0:0	2	i_fd
op	8:14	0:0	2	=
water	8:16	0:0	2	fd
water	8:18	0:0	2	;
water	9:4	0:0	2	sys
op	9:7	0:0	2	->
water	9:9	0:0	2	b_handshaked
op	9:22	0:0	2	=
water	9:24	0:0	2	false
water	9:29	0:0	2	;
water	10:4	0:0	2	sys
op	10:7	0:0	2	->
water	10:9	0:0	2	b_blocking_send
op	10:25	0:0	2	=
water	10:27	0:0	2	false
water	10:32	0:0	2	;
water	11:4	0:0	2	sys
op	11:7	0:0	2	->
water	11:9	0:0	2	i_send_buffered_bytes
op	11:31	0:0	2	=
water	11:33	0:0	2	0
water	11:34	0:0	2	;
water	12:4	0:0	2	sys
op	12:7	0:0	2	->
water	12:9	0:0	2	p_context
op	12:19	0:0	2	=
water	12:21	0:0	2	NULL
water	12:25	0:0	2	;
water	13:4	0:0	2	session
op	13:11	0:0	2	->
water	13:13	0:0	2	sys
op	13:17	0:0	2	=
water	13:19	0:0	2	sys
water	13:22	0:0	2	;
water	14:4	0:0	2	session
op	14:11	0:0	2	->
water	14:13	0:0	2	sock
op	14:17	0:0	2	.
water	14:18	0:0	2	p_sys
op	14:24	0:0	2	=
water	14:26	0:0	2	session
water	14:33	0:0	2	;
water	15:4	0:0	2	session
op	15:11	0:0	2	->
water	15:13	0:0	2	sock
op	15:17	0:0	2	.
water	15:18	0:0	2	pf_send
op	15:26	0:0	2	=
water	15:28	0:0	2	st_Send
water	15:35	0:0	2	;
water	16:4	0:0	2	session
op	16:11	0:0	2	->
water	16:13	0:0	2	sock
op	16:17	0:0	2	.
water	16:18	0:0	2	pf_recv
op	16:26	0:0	2	=
water	16:28	0:0	2	st_Recv
water	16:35	0:0	2	;
water	17:4	0:0	2	session
op	17:11	0:0	2	->
water	17:13	0:0	2	handshake
op	17:23	0:0	2	=
water	17:25	0:0	2	st_Handshake
water	17:37	0:0	2	;
decl	18:4	18:34	2	SSLContextRef	p_context
op	18:28	0:0	2	=
water	18:30	0:0	2	NULL
water	20:4	0:0	2	p_context
op	20:14	0:0	2	=
call	20:16	20:97	2	SSLCreateContext
arg	20:33	20:37	3	NULL
water	20:33	0:0	4	NULL
arg	20:39	20:81	3	b_server?kSSLServerSide:kSSLClientSide
water	20:39	0:0	4	b_server
water	20:48	0:0	4	?
water	20:50	0:0	4	kSSLServerSide
water	20:65	0:0	4	:
water	20:67	0:0	4	kSSLClientSide
arg	20:83	20:97	3	kSSLStreamType
water	20:83	0:0	4	kSSLStreamType
water	20:98	0:0	2	;
if	21:4	24:4	2	(p_context == NULL)
cond	21:8	21:21	3	p_context == NULL
water	21:8	0:0	4	p_context
op	21:18	0:0	4	==
water	21:21	0:0	4	NULL
stmts	21:27	24:4	3	
water	21:27	0:0	4	{
call	22:8	22:52	4	msg_Err
arg	22:16	22:23	5	session
water	22:16	0:0	6	session
arg	22:25	22:52	5	"cannot create ssl context"
water	22:25	0:0	6	"cannot create ssl context"
water	22:53	0:0	4	;
return	23:8	23:17	4	-1
op	23:15	0:0	5	-
water	23:16	0:0	5	1
water	24:4	0:0	4	}
if	26:4	29:4	2	(SSLNewContext (b_server ,& p_context ) != noErr)
cond	26:8	26:47	3	SSLNewContext (b_server ,& p_context ) != noErr
call	26:8	26:42	4	SSLNewContext
arg	26:22	26:30	5	b_server
water	26:22	0:0	6	b_server
arg	26:32	26:42	5	&p_context
op	26:32	0:0	6	&
water	26:33	0:0	6	p_context
op	26:44	0:0	4	!=
water	26:47	0:0	4	noErr
stmts	26:54	29:4	3	
water	26:54	0:0	4	{
call	27:8	27:54	4	msg_Err
arg	27:16	27:23	5	session
water	27:16	0:0	6	session
arg	27:25	27:54	5	"error calling SSLNewContext"
water	27:25	0:0	6	"error calling SSLNewContext"
water	27:55	0:0	4	;
return	28:8	28:17	4	-1
op	28:15	0:0	5	-
water	28:16	0:0	5	1
water	29:4	0:0	4	}
water	31:4	0:0	2	sys
op	31:7	0:0	2	->
water	31:9	0:0	2	p_context
op	31:19	0:0	2	=
water	31:21	0:0	2	p_context
water	31:30	0:0	2	;
decl	32:4	32:82	2	OSStatus	ret
op	32:17	0:0	2	=
call	32:19	32:81	3	SSLSetIOFuncs
arg	32:33	32:42	4	p_context
water	32:33	0:0	5	p_context
arg	32:44	32:61	4	st_SocketReadFunc
water	32:44	0:0	5	st_SocketReadFunc
arg	32:63	32:81	4	st_SocketWriteFunc
water	32:63	0:0	5	st_SocketWriteFunc
if	33:4	36:4	2	(ret != noErr)
cond	33:8	33:15	3	ret != noErr
water	33:8	0:0	4	ret
op	33:12	0:0	4	!=
water	33:15	0:0	4	noErr
stmts	33:22	36:4	3	
water	33:22	0:0	4	{
call	34:8	34:50	4	msg_Err
arg	34:16	34:23	5	session
water	34:16	0:0	6	session
arg	34:25	34:50	5	"cannot set io functions"
water	34:25	0:0	6	"cannot set io functions"
water	34:51	0:0	4	;
return	35:8	35:17	4	-1
op	35:15	0:0	5	-
water	35:16	0:0	5	1
water	36:4	0:0	4	}
water	37:4	0:0	2	ret
op	37:8	0:0	2	=
call	37:10	37:45	2	SSLSetConnection
arg	37:27	37:36	3	p_context
water	37:27	0:0	4	p_context
arg	37:38	37:45	3	session
water	37:38	0:0	4	session
water	37:46	0:0	2	;
if	38:4	41:4	2	(ret != noErr)
cond	38:8	38:15	3	ret != noErr
water	38:8	0:0	4	ret
op	38:12	0:0	4	!=
water	38:15	0:0	4	noErr
stmts	38:22	41:4	3	
water	38:22	0:0	4	{
call	39:8	39:48	4	msg_Err
arg	39:16	39:23	5	session
water	39:16	0:0	6	session
arg	39:25	39:48	5	"cannot set connection"
water	39:25	0:0	6	"cannot set connection"
water	39:49	0:0	4	;
return	40:8	40:17	4	-1
op	40:15	0:0	5	-
water	40:16	0:0	5	1
water	41:4	0:0	4	}
return	42:4	42:12	2	0
water	42:11	0:0	3	0

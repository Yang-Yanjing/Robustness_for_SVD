func	2:0	35:0	0	static void	Close
params	2:17	0:0	1	
param	2:19	2:41	2	vlc_object_t *	p_this
stmnts	0:0	34:17	1	
decl	4:4	4:47	2	sout_mux_t	*p_mux
op	4:26	0:0	2	=
water	4:28	0:0	2	(
water	4:29	0:0	2	sout_mux_t
op	4:39	0:0	2	*
water	4:40	0:0	2	)
water	4:41	0:0	2	p_this
decl	5:4	5:40	2	sout_mux_sys_t	*p_sys
op	5:26	0:0	2	=
water	5:28	0:0	2	p_mux
op	5:33	0:0	2	->
water	5:35	0:0	2	p_sys
decl	6:4	6:26	2	ogg_stream_t	*p_stream
call	7:4	7:29	2	msg_Info
arg	7:14	7:19	3	p_mux
water	7:14	0:0	4	p_mux
arg	7:21	7:29	3	"Close"
water	7:21	0:0	4	"Close"
water	7:30	0:0	2	;
if	8:4	28:4	2	(p_sys -> i_del_streams)
cond	8:8	8:15	3	p_sys -> i_del_streams
water	8:8	0:0	4	p_sys
op	8:13	0:0	4	->
water	8:15	0:0	4	i_del_streams
stmts	9:4	28:4	3	
water	9:4	0:0	4	{
call	11:8	11:42	4	msg_Dbg
arg	11:17	11:22	5	p_mux
water	11:17	0:0	6	p_mux
arg	11:24	11:42	5	"writing footers"
water	11:24	0:0	6	"writing footers"
water	11:43	0:0	4	;
for	12:8	17:8	4	( int i = 0 ;i < p_mux -> i_nb_inputs;i ++)
forinit	0:0	12:21	5	 int i = 0 ;
decl	12:12	12:21	6	int	i
op	12:18	0:0	6	=
water	12:20	0:0	6	0
cond	12:23	12:34	5	i < p_mux -> i_nb_inputs
water	12:23	0:0	6	i
op	12:25	0:0	6	<
water	12:27	0:0	6	p_mux
op	12:32	0:0	6	->
water	12:34	0:0	6	i_nb_inputs
forexpr	12:47	12:48	5	i ++
water	12:47	0:0	6	i
op	12:48	0:0	6	++
stmts	13:8	17:8	5	
water	13:8	0:0	6	{
water	14:12	0:0	6	p_stream
op	14:21	0:0	6	=
water	14:23	0:0	6	(
water	14:24	0:0	6	ogg_stream_t
op	14:37	0:0	6	*
water	14:38	0:0	6	)
water	14:40	0:0	6	p_mux
op	14:45	0:0	6	->
water	14:47	0:0	6	pp_inputs
op	14:56	0:0	6	[
water	14:57	0:0	6	i
op	14:58	0:0	6	]
op	14:59	0:0	6	->
water	14:61	0:0	6	p_sys
water	14:66	0:0	6	;
call	15:12	15:51	6	OggCreateStreamFooter
arg	15:35	15:40	7	p_mux
water	15:35	0:0	8	p_mux
arg	15:42	15:51	7	p_stream
water	15:42	0:0	8	p_stream
water	15:52	0:0	6	;
call	16:12	16:45	6	free
arg	16:18	16:45	7	p_stream->skeleton.p_index
water	16:18	0:0	8	p_stream
op	16:26	0:0	8	->
water	16:28	0:0	8	skeleton
op	16:36	0:0	8	.
water	16:37	0:0	8	p_index
water	16:46	0:0	6	;
water	17:8	0:0	6	}
for	19:8	25:8	4	( int i = 0 ;i < p_sys -> i_del_streams;i ++)
forinit	0:0	19:21	5	 int i = 0 ;
decl	19:12	19:21	6	int	i
op	19:18	0:0	6	=
water	19:20	0:0	6	0
cond	19:23	19:34	5	i < p_sys -> i_del_streams
water	19:23	0:0	6	i
op	19:25	0:0	6	<
water	19:27	0:0	6	p_sys
op	19:32	0:0	6	->
water	19:34	0:0	6	i_del_streams
forexpr	19:49	19:50	5	i ++
water	19:49	0:0	6	i
op	19:50	0:0	6	++
stmts	20:8	25:8	5	
water	20:8	0:0	6	{
call	21:12	21:67	6	OggCreateStreamFooter
arg	21:35	21:40	7	p_mux
water	21:35	0:0	8	p_mux
arg	21:42	21:67	7	p_sys->pp_del_streams[i]
water	21:42	0:0	8	p_sys
op	21:47	0:0	8	->
water	21:49	0:0	8	pp_del_streams
op	21:63	0:0	8	[
water	21:64	0:0	8	i
op	21:65	0:0	8	]
water	21:68	0:0	6	;
call	22:12	22:59	6	free
arg	22:18	22:59	7	p_sys->pp_del_streams[i]->p_oggds_header
water	22:18	0:0	8	p_sys
op	22:23	0:0	8	->
water	22:25	0:0	8	pp_del_streams
op	22:39	0:0	8	[
water	22:40	0:0	8	i
op	22:41	0:0	8	]
op	22:42	0:0	8	->
water	22:44	0:0	8	p_oggds_header
water	22:60	0:0	6	;
call	23:12	23:61	6	free
arg	23:18	23:61	7	p_sys->pp_del_streams[i]->skeleton.p_index
water	23:18	0:0	8	p_sys
op	23:23	0:0	8	->
water	23:25	0:0	8	pp_del_streams
op	23:39	0:0	8	[
water	23:40	0:0	8	i
op	23:41	0:0	8	]
op	23:42	0:0	8	->
water	23:44	0:0	8	skeleton
op	23:52	0:0	8	.
water	23:53	0:0	8	p_index
water	23:62	0:0	6	;
call	24:12	24:43	6	free
arg	24:18	24:43	7	p_sys->pp_del_streams[i]
water	24:18	0:0	8	p_sys
op	24:23	0:0	8	->
water	24:25	0:0	8	pp_del_streams
op	24:39	0:0	8	[
water	24:40	0:0	8	i
op	24:41	0:0	8	]
water	24:44	0:0	6	;
water	25:8	0:0	6	}
call	26:8	26:36	4	free
arg	26:14	26:36	5	p_sys->pp_del_streams
water	26:14	0:0	6	p_sys
op	26:19	0:0	6	->
water	26:21	0:0	6	pp_del_streams
water	26:37	0:0	4	;
water	27:8	0:0	4	p_sys
op	27:13	0:0	4	->
water	27:15	0:0	4	i_streams
op	27:25	0:0	4	-=
water	27:28	0:0	4	p_sys
op	27:33	0:0	4	->
water	27:35	0:0	4	i_del_streams
water	27:48	0:0	4	;
water	28:4	0:0	4	}
if	30:4	33:4	2	(p_sys -> skeleton . b_create && p_sys -> skeleton . b_head_done)
cond	30:9	30:53	3	p_sys -> skeleton . b_create && p_sys -> skeleton . b_head_done
water	30:9	0:0	4	p_sys
op	30:14	0:0	4	->
water	30:16	0:0	4	skeleton
op	30:24	0:0	4	.
water	30:25	0:0	4	b_create
op	30:34	0:0	4	&&
water	30:37	0:0	4	p_sys
op	30:42	0:0	4	->
water	30:44	0:0	4	skeleton
op	30:52	0:0	4	.
water	30:53	0:0	4	b_head_done
stmts	31:4	33:4	3	
water	31:4	0:0	4	{
call	32:8	32:37	4	OggRewriteFisheadPage
arg	32:31	32:37	5	p_mux
water	32:31	0:0	6	p_mux
water	32:38	0:0	4	;
water	33:4	0:0	4	}
call	34:4	34:16	2	free
arg	34:10	34:16	3	p_sys
water	34:10	0:0	4	p_sys
water	34:17	0:0	2	;

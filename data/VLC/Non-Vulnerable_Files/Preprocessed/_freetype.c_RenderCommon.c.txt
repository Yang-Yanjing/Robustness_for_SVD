func	2:0	175:0	0	static int	RenderCommon
params	2:23	0:0	1	
param	2:25	2:43	2	filter_t *	p_filter
param	2:45	2:78	2	subpicture_region_t *	p_region_out
param	3:25	3:57	2	subpicture_region_t *	p_region_in
param	3:59	3:70	2	bool	b_html
param	4:25	4:59	2	const vlc_fourcc_t *	p_chroma_list
stmnts	0:0	174:13	1	
decl	6:4	6:41	2	filter_sys_t	*p_sys
op	6:24	0:0	2	=
water	6:26	0:0	2	p_filter
op	6:34	0:0	2	->
water	6:36	0:0	2	p_sys
if	7:4	8:27	2	(! p_region_in)
cond	7:8	7:9	3	! p_region_in
op	7:8	0:0	4	!
water	7:9	0:0	4	p_region_in
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
if	9:4	10:27	2	(b_html && ! p_region_in -> psz_html)
cond	9:8	9:32	3	b_html && ! p_region_in -> psz_html
water	9:8	0:0	4	b_html
op	9:15	0:0	4	&&
op	9:18	0:0	4	!
water	9:19	0:0	4	p_region_in
op	9:30	0:0	4	->
water	9:32	0:0	4	psz_html
stmts	10:8	10:27	3	
return	10:8	10:27	4	VLC_EGENERIC
water	10:15	0:0	5	VLC_EGENERIC
if	11:4	12:27	2	(! b_html && ! p_region_in -> psz_text)
cond	11:8	11:33	3	! b_html && ! p_region_in -> psz_text
op	11:8	0:0	4	!
water	11:9	0:0	4	b_html
op	11:16	0:0	4	&&
op	11:19	0:0	4	!
water	11:20	0:0	4	p_region_in
op	11:31	0:0	4	->
water	11:33	0:0	4	psz_text
stmts	12:8	12:27	3	
return	12:8	12:27	4	VLC_EGENERIC
water	12:15	0:0	5	VLC_EGENERIC
decl	13:4	14:70	2	const size_t	i_text_max
op	13:28	0:0	2	=
call	13:30	14:69	3	strlen
arg	13:38	14:69	4	b_html?p_region_in->psz_html:p_region_in->psz_text
water	13:38	0:0	5	b_html
water	13:45	0:0	5	?
water	13:47	0:0	5	p_region_in
op	13:58	0:0	5	->
water	13:60	0:0	5	psz_html
water	14:45	0:0	5	:
water	14:47	0:0	5	p_region_in
op	14:58	0:0	5	->
water	14:60	0:0	5	psz_text
decl	15:4	15:68	2	uni_char_t	*psz_text
op	15:25	0:0	2	=
call	15:27	15:67	3	calloc
arg	15:35	15:45	4	i_text_max
water	15:35	0:0	5	i_text_max
arg	15:47	15:67	4	sizeof(*psz_text)
op	15:47	0:0	5	sizeof
water	15:53	0:0	5	(
op	15:55	0:0	5	*
water	15:56	0:0	5	psz_text
water	15:65	0:0	5	)
decl	16:4	16:73	2	text_style_t	**pp_styles
op	16:29	0:0	2	=
call	16:31	16:72	3	calloc
arg	16:39	16:49	4	i_text_max
water	16:39	0:0	5	i_text_max
arg	16:51	16:72	4	sizeof(*pp_styles)
op	16:51	0:0	5	sizeof
water	16:57	0:0	5	(
op	16:59	0:0	5	*
water	16:60	0:0	5	pp_styles
water	16:70	0:0	5	)
if	17:4	22:4	2	(! psz_text || ! pp_styles)
cond	17:8	17:22	3	! psz_text || ! pp_styles
op	17:8	0:0	4	!
water	17:9	0:0	4	psz_text
op	17:18	0:0	4	||
op	17:21	0:0	4	!
water	17:22	0:0	4	pp_styles
stmts	18:4	22:4	3	
water	18:4	0:0	4	{
call	19:8	19:23	4	free
arg	19:14	19:23	5	psz_text
water	19:14	0:0	6	psz_text
water	19:24	0:0	4	;
call	20:8	20:24	4	free
arg	20:14	20:24	5	pp_styles
water	20:14	0:0	6	pp_styles
water	20:25	0:0	4	;
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
water	24:4	0:0	2	p_filter
op	24:12	0:0	2	->
water	24:14	0:0	2	p_sys
op	24:19	0:0	2	->
water	24:21	0:0	2	style
op	24:26	0:0	2	.
water	24:27	0:0	2	i_font_size
op	24:39	0:0	2	=
call	24:41	24:63	2	GetFontSize
arg	24:54	24:63	3	p_filter
water	24:54	0:0	4	p_filter
water	24:64	0:0	2	;
decl	26:4	26:24	2	int	rv
op	26:11	0:0	2	=
water	26:13	0:0	2	VLC_SUCCESS
decl	27:4	27:25	2	int	i_text_length
op	27:22	0:0	2	=
water	27:24	0:0	2	0
decl	28:4	28:16	2	FT_BBox	bbox
decl	29:4	29:25	2	int	i_max_face_height
decl	30:4	30:31	2	line_desc_t	*p_lines
op	30:25	0:0	2	=
water	30:27	0:0	2	NULL
decl	31:4	31:37	2	uint32_t	*pi_k_durations
op	31:31	0:0	2	=
water	31:33	0:0	2	NULL
if	32:4	80:4	2	(b_html)
cond	32:8	32:8	3	b_html
water	32:8	0:0	4	b_html
stmts	33:4	80:4	3	
water	33:4	0:0	4	{
decl	34:8	37:50	4	stream_t	*p_sub
op	34:24	0:0	4	=
call	34:26	37:49	5	stream_MemoryNew
arg	34:44	34:64	6	VLC_OBJECT(p_filter)
call	34:44	34:63	7	VLC_OBJECT
arg	34:55	34:63	8	p_filter
water	34:55	0:0	9	p_filter
arg	35:44	35:77	6	(uint8_t*)p_region_in->psz_html
water	35:44	0:0	7	(
water	35:45	0:0	7	uint8_t
op	35:53	0:0	7	*
water	35:54	0:0	7	)
water	35:56	0:0	7	p_region_in
op	35:67	0:0	7	->
water	35:69	0:0	7	psz_html
arg	36:44	36:75	6	strlen(p_region_in->psz_html)
call	36:44	36:74	7	strlen
arg	36:52	36:74	8	p_region_in->psz_html
water	36:52	0:0	9	p_region_in
op	36:63	0:0	9	->
water	36:65	0:0	9	psz_html
arg	37:44	37:49	6	true
water	37:44	0:0	7	true
if	38:8	43:8	4	(unlikely (p_sub == NULL ))
cond	38:12	38:34	5	unlikely (p_sub == NULL )
call	38:12	38:34	6	unlikely
arg	38:21	38:34	7	p_sub==NULL
water	38:21	0:0	8	p_sub
op	38:27	0:0	8	==
water	38:30	0:0	8	NULL
stmts	39:8	43:8	5	
water	39:8	0:0	6	{
call	40:12	40:27	6	free
arg	40:18	40:27	7	psz_text
water	40:18	0:0	8	psz_text
water	40:28	0:0	6	;
call	41:12	41:28	6	free
arg	41:18	41:28	7	pp_styles
water	41:18	0:0	8	pp_styles
water	41:29	0:0	6	;
return	42:12	42:30	6	VLC_SUCCESS
water	42:19	0:0	7	VLC_SUCCESS
water	43:8	0:0	6	}
decl	44:8	44:68	4	xml_reader_t	*p_xml_reader
op	44:35	0:0	4	=
call	44:37	44:67	5	GetXMLReader
arg	44:51	44:59	6	p_filter
water	44:51	0:0	7	p_filter
arg	44:61	44:67	6	p_sub
water	44:61	0:0	7	p_sub
if	45:8	46:29	4	(! p_xml_reader)
cond	45:12	45:13	5	! p_xml_reader
op	45:12	0:0	6	!
water	45:13	0:0	6	p_xml_reader
stmts	46:12	46:29	5	
water	46:12	0:0	6	rv
op	46:15	0:0	6	=
water	46:17	0:0	6	VLC_EGENERIC
water	46:29	0:0	6	;
if	47:8	70:8	4	(! rv)
cond	47:12	47:13	5	! rv
op	47:12	0:0	6	!
water	47:13	0:0	6	rv
stmts	48:8	70:8	5	
water	48:8	0:0	6	{
decl	50:12	50:28	6	const char	*node
if	51:12	64:12	6	(xml_ReaderNextNode (p_xml_reader ,& node ) == XML_READER_STARTELEM)
cond	51:16	51:61	7	xml_ReaderNextNode (p_xml_reader ,& node ) == XML_READER_STARTELEM
call	51:16	51:56	8	xml_ReaderNextNode
arg	51:36	51:48	9	p_xml_reader
water	51:36	0:0	10	p_xml_reader
arg	51:50	51:56	9	&node
op	51:50	0:0	10	&
water	51:51	0:0	10	node
op	51:58	0:0	8	==
water	51:61	0:0	8	XML_READER_STARTELEM
stmts	52:12	64:12	7	
water	52:12	0:0	8	{
if	53:16	56:16	8	(strcasecmp ("karaoke" ,node ) == 0)
cond	53:20	53:53	9	strcasecmp ("karaoke" ,node ) == 0
call	53:20	53:48	10	strcasecmp
arg	53:32	53:41	11	"karaoke"
water	53:32	0:0	12	"karaoke"
arg	53:43	53:48	11	node
water	53:43	0:0	12	node
op	53:50	0:0	10	==
water	53:53	0:0	10	0
stmts	54:16	56:16	9	
water	54:16	0:0	10	{
water	55:20	0:0	10	pi_k_durations
op	55:35	0:0	10	=
call	55:37	55:83	10	calloc
arg	55:45	55:55	11	i_text_max
water	55:45	0:0	12	i_text_max
arg	55:57	55:83	11	sizeof(*pi_k_durations)
op	55:57	0:0	12	sizeof
water	55:63	0:0	12	(
op	55:65	0:0	12	*
water	55:66	0:0	12	pi_k_durations
water	55:81	0:0	12	)
water	55:84	0:0	10	;
water	56:16	0:0	10	}
else	57:16	63:16	8
stmts	57:21	63:16	9	
if	57:21	63:16	10	(strcasecmp ("text" ,node ) != 0)
cond	57:25	57:55	11	strcasecmp ("text" ,node ) != 0
call	57:25	57:50	12	strcasecmp
arg	57:37	57:43	13	"text"
water	57:37	0:0	14	"text"
arg	57:45	57:50	13	node
water	57:45	0:0	14	node
op	57:52	0:0	12	!=
water	57:55	0:0	12	0
stmts	58:16	63:16	11	
water	58:16	0:0	12	{
call	60:20	61:34	12	msg_Dbg
arg	60:29	60:37	13	p_filter
water	60:29	0:0	14	p_filter
arg	60:39	60:80	13	"Unsupported top-level tag <%s> ignored."
water	60:39	0:0	14	"Unsupported top-level tag <%s> ignored."
arg	61:29	61:34	13	node
water	61:29	0:0	14	node
water	61:35	0:0	12	;
water	62:20	0:0	12	rv
op	62:23	0:0	12	=
water	62:25	0:0	12	VLC_EGENERIC
water	62:37	0:0	12	;
water	63:16	0:0	12	}
water	64:12	0:0	8	}
else	65:12	69:12	6
stmts	66:12	69:12	7	
water	66:12	0:0	8	{
call	67:16	67:61	8	msg_Err
arg	67:25	67:33	9	p_filter
water	67:25	0:0	10	p_filter
arg	67:35	67:61	9	"Malformed HTML subtitle"
water	67:35	0:0	10	"Malformed HTML subtitle"
water	67:62	0:0	8	;
water	68:16	0:0	8	rv
op	68:19	0:0	8	=
water	68:21	0:0	8	VLC_EGENERIC
water	68:33	0:0	8	;
water	69:12	0:0	8	}
water	70:8	0:0	6	}
if	71:8	76:8	4	(! rv)
cond	71:12	71:13	5	! rv
op	71:12	0:0	6	!
water	71:13	0:0	6	rv
stmts	72:8	76:8	5	
water	72:8	0:0	6	{
water	73:12	0:0	6	rv
op	73:15	0:0	6	=
call	73:17	75:91	6	ProcessNodes
arg	73:31	73:39	7	p_filter
water	73:31	0:0	8	p_filter
arg	74:31	74:39	7	psz_text
water	74:31	0:0	8	psz_text
arg	74:41	74:50	7	pp_styles
water	74:41	0:0	8	pp_styles
arg	74:52	74:66	7	pi_k_durations
water	74:52	0:0	8	pi_k_durations
arg	74:68	74:82	7	&i_text_length
op	74:68	0:0	8	&
water	74:69	0:0	8	i_text_length
arg	75:31	75:43	7	p_xml_reader
water	75:31	0:0	8	p_xml_reader
arg	75:45	75:65	7	p_region_in->p_style
water	75:45	0:0	8	p_region_in
op	75:56	0:0	8	->
water	75:58	0:0	8	p_style
arg	75:67	75:91	7	&p_filter->p_sys->style
op	75:67	0:0	8	&
water	75:68	0:0	8	p_filter
op	75:76	0:0	8	->
water	75:78	0:0	8	p_sys
op	75:83	0:0	8	->
water	75:85	0:0	8	style
water	75:92	0:0	6	;
water	76:8	0:0	6	}
if	77:8	78:74	4	(p_xml_reader)
cond	77:12	77:12	5	p_xml_reader
water	77:12	0:0	6	p_xml_reader
stmts	78:12	78:74	5	
water	78:12	0:0	6	p_filter
op	78:20	0:0	6	->
water	78:22	0:0	6	p_sys
op	78:27	0:0	6	->
water	78:29	0:0	6	p_xml
op	78:35	0:0	6	=
call	78:37	78:73	6	xml_ReaderReset
arg	78:54	78:66	7	p_xml_reader
water	78:54	0:0	8	p_xml_reader
arg	78:68	78:73	7	NULL
water	78:68	0:0	8	NULL
water	78:74	0:0	6	;
call	79:8	79:29	4	stream_Delete
arg	79:23	79:29	5	p_sub
water	79:23	0:0	6	p_sub
water	79:30	0:0	4	;
water	80:4	0:0	4	}
else	81:4	113:4	2
stmts	82:4	113:4	3	
water	82:4	0:0	4	{
decl	83:8	83:29	4	text_style_t	*p_style
if	84:8	95:92	4	(p_region_in -> p_style)
cond	84:12	84:25	5	p_region_in -> p_style
water	84:12	0:0	6	p_region_in
op	84:23	0:0	6	->
water	84:25	0:0	6	p_style
stmts	85:12	95:92	5	
water	85:12	0:0	6	p_style
op	85:20	0:0	6	=
call	85:22	95:91	6	CreateStyle
arg	85:35	86:97	7	p_region_in->p_style->psz_fontname?p_region_in->p_style->psz_fontname:p_sys->style.psz_fontname
water	85:35	0:0	8	p_region_in
op	85:46	0:0	8	->
water	85:48	0:0	8	p_style
op	85:55	0:0	8	->
water	85:57	0:0	8	psz_fontname
water	85:70	0:0	8	?
water	85:72	0:0	8	p_region_in
op	85:83	0:0	8	->
water	85:85	0:0	8	p_style
op	85:92	0:0	8	->
water	85:94	0:0	8	psz_fontname
water	86:70	0:0	8	:
water	86:72	0:0	8	p_sys
op	86:77	0:0	8	->
water	86:79	0:0	8	style
op	86:84	0:0	8	.
water	86:85	0:0	8	psz_fontname
arg	87:35	88:99	7	p_region_in->p_style->i_font_size>0?p_region_in->p_style->i_font_size:p_sys->style.i_font_size
water	87:35	0:0	8	p_region_in
op	87:46	0:0	8	->
water	87:48	0:0	8	p_style
op	87:55	0:0	8	->
water	87:57	0:0	8	i_font_size
op	87:69	0:0	8	>
water	87:71	0:0	8	0
water	87:73	0:0	8	?
water	87:75	0:0	8	p_region_in
op	87:86	0:0	8	->
water	87:88	0:0	8	p_style
op	87:95	0:0	8	->
water	87:97	0:0	8	i_font_size
water	88:73	0:0	8	:
water	88:75	0:0	8	p_sys
op	88:80	0:0	8	->
water	88:82	0:0	8	style
op	88:87	0:0	8	.
water	88:88	0:0	8	i_font_size
arg	89:35	90:86	7	(p_region_in->p_style->i_font_color&0xffffff)|((p_region_in->p_style->i_font_alpha&0xff)<<24)
water	89:35	0:0	8	(
water	89:36	0:0	8	p_region_in
op	89:47	0:0	8	->
water	89:49	0:0	8	p_style
op	89:56	0:0	8	->
water	89:58	0:0	8	i_font_color
op	89:71	0:0	8	&
water	89:73	0:0	8	0
water	89:74	0:0	8	xffffff
water	89:81	0:0	8	)
op	89:83	0:0	8	|
water	90:35	0:0	8	(
water	90:36	0:0	8	(
water	90:37	0:0	8	p_region_in
op	90:48	0:0	8	->
water	90:50	0:0	8	p_style
op	90:57	0:0	8	->
water	90:59	0:0	8	i_font_alpha
op	90:72	0:0	8	&
water	90:74	0:0	8	0
water	90:75	0:0	8	xff
water	90:78	0:0	8	)
op	90:80	0:0	8	<<
water	90:83	0:0	8	24
water	90:85	0:0	8	)
arg	91:35	91:45	7	0x00ffffff
water	91:35	0:0	8	0
water	91:36	0:0	8	x00ffffff
arg	92:35	95:91	7	p_region_in->p_style->i_style_flags&(STYLE_BOLD|STYLE_ITALIC|STYLE_UNDERLINE|STYLE_STRIKEOUT)
water	92:35	0:0	8	p_region_in
op	92:46	0:0	8	->
water	92:48	0:0	8	p_style
op	92:55	0:0	8	->
water	92:57	0:0	8	i_style_flags
op	92:71	0:0	8	&
water	92:73	0:0	8	(
water	92:74	0:0	8	STYLE_BOLD
op	92:85	0:0	8	|
water	93:74	0:0	8	STYLE_ITALIC
op	93:87	0:0	8	|
water	94:74	0:0	8	STYLE_UNDERLINE
op	94:90	0:0	8	|
water	95:74	0:0	8	STYLE_STRIKEOUT
water	95:89	0:0	8	)
water	95:92	0:0	6	;
else	96:8	105:8	4
stmts	97:8	105:8	5	
water	97:8	0:0	6	{
decl	98:12	98:84	6	uint32_t	i_font_color
op	98:34	0:0	6	=
call	98:36	98:83	7	var_InheritInteger
arg	98:56	98:64	8	p_filter
water	98:56	0:0	9	p_filter
arg	98:66	98:83	8	"freetype-color"
water	98:66	0:0	9	"freetype-color"
water	99:12	0:0	6	i_font_color
op	99:25	0:0	6	=
call	99:27	99:63	6	VLC_CLIP
arg	99:37	99:49	7	i_font_color
water	99:37	0:0	8	i_font_color
arg	99:51	99:52	7	0
water	99:51	0:0	8	0
arg	99:54	99:63	7	0xFFFFFF
water	99:54	0:0	8	0
water	99:55	0:0	8	xFFFFFF
water	99:64	0:0	6	;
water	100:12	0:0	6	p_style
op	100:20	0:0	6	=
call	100:22	104:48	6	CreateStyle
arg	100:35	100:60	7	p_sys->style.psz_fontname
water	100:35	0:0	8	p_sys
op	100:40	0:0	8	->
water	100:42	0:0	8	style
op	100:47	0:0	8	.
water	100:48	0:0	8	psz_fontname
arg	101:35	101:59	7	p_sys->style.i_font_size
water	101:35	0:0	8	p_sys
op	101:40	0:0	8	->
water	101:42	0:0	8	style
op	101:47	0:0	8	.
water	101:48	0:0	8	i_font_size
arg	102:35	103:77	7	(i_font_color&0xffffff)|((p_sys->style.i_font_alpha&0xff)<<24)
water	102:35	0:0	8	(
water	102:36	0:0	8	i_font_color
op	102:49	0:0	8	&
water	102:51	0:0	8	0
water	102:52	0:0	8	xffffff
water	102:59	0:0	8	)
op	102:61	0:0	8	|
water	103:35	0:0	8	(
water	103:36	0:0	8	(
water	103:37	0:0	8	p_sys
op	103:42	0:0	8	->
water	103:44	0:0	8	style
op	103:49	0:0	8	.
water	103:50	0:0	8	i_font_alpha
op	103:63	0:0	8	&
water	103:65	0:0	8	0
water	103:66	0:0	8	xff
water	103:69	0:0	8	)
op	103:71	0:0	8	<<
water	103:74	0:0	8	24
water	103:76	0:0	8	)
arg	104:35	104:45	7	0x00ffffff
water	104:35	0:0	8	0
water	104:36	0:0	8	x00ffffff
arg	104:47	104:48	7	0
water	104:47	0:0	8	0
water	104:49	0:0	6	;
water	105:8	0:0	6	}
if	106:8	107:48	4	(p_sys -> style . i_style_flags & STYLE_BOLD)
cond	106:12	106:41	5	p_sys -> style . i_style_flags & STYLE_BOLD
water	106:12	0:0	6	p_sys
op	106:17	0:0	6	->
water	106:19	0:0	6	style
op	106:24	0:0	6	.
water	106:25	0:0	6	i_style_flags
op	106:39	0:0	6	&
water	106:41	0:0	6	STYLE_BOLD
stmts	107:12	107:48	5	
water	107:12	0:0	6	p_style
op	107:19	0:0	6	->
water	107:21	0:0	6	i_style_flags
op	107:35	0:0	6	|=
water	107:38	0:0	6	STYLE_BOLD
water	107:48	0:0	6	;
water	108:8	0:0	4	i_text_length
op	108:22	0:0	4	=
call	108:24	112:69	4	SetupText
arg	108:35	108:43	5	p_filter
water	108:35	0:0	6	p_filter
arg	109:35	109:43	5	psz_text
water	109:35	0:0	6	psz_text
arg	110:35	110:44	5	pp_styles
water	110:35	0:0	6	pp_styles
arg	111:35	111:39	5	NULL
water	111:35	0:0	6	NULL
arg	112:35	112:56	5	p_region_in->psz_text
water	112:35	0:0	6	p_region_in
op	112:46	0:0	6	->
water	112:48	0:0	6	psz_text
arg	112:58	112:65	5	p_style
water	112:58	0:0	6	p_style
arg	112:67	112:69	5	0
water	112:67	0:0	6	0
water	112:70	0:0	4	;
water	113:4	0:0	4	}
if	114:4	119:4	2	(! rv && i_text_length > 0)
cond	114:8	114:31	3	! rv && i_text_length > 0
op	114:8	0:0	4	!
water	114:9	0:0	4	rv
op	114:12	0:0	4	&&
water	114:15	0:0	4	i_text_length
op	114:29	0:0	4	>
water	114:31	0:0	4	0
stmts	115:4	119:4	3	
water	115:4	0:0	4	{
water	116:8	0:0	4	rv
op	116:11	0:0	4	=
call	116:13	118:78	4	ProcessLines
arg	116:27	116:35	5	p_filter
water	116:27	0:0	6	p_filter
arg	117:27	117:35	5	&p_lines
op	117:27	0:0	6	&
water	117:28	0:0	6	p_lines
arg	117:37	117:42	5	&bbox
op	117:37	0:0	6	&
water	117:38	0:0	6	bbox
arg	117:44	117:62	5	&i_max_face_height
op	117:44	0:0	6	&
water	117:45	0:0	6	i_max_face_height
arg	118:27	118:35	5	psz_text
water	118:27	0:0	6	psz_text
arg	118:37	118:46	5	pp_styles
water	118:37	0:0	6	pp_styles
arg	118:48	118:62	5	pi_k_durations
water	118:48	0:0	6	pi_k_durations
arg	118:64	118:78	5	i_text_length
water	118:64	0:0	6	i_text_length
water	118:79	0:0	4	;
water	119:4	0:0	4	}
water	120:4	0:0	2	p_region_out
op	120:16	0:0	2	->
water	120:18	0:0	2	i_x
op	120:22	0:0	2	=
water	120:24	0:0	2	p_region_in
op	120:35	0:0	2	->
water	120:37	0:0	2	i_x
water	120:40	0:0	2	;
water	121:4	0:0	2	p_region_out
op	121:16	0:0	2	->
water	121:18	0:0	2	i_y
op	121:22	0:0	2	=
water	121:24	0:0	2	p_region_in
op	121:35	0:0	2	->
water	121:37	0:0	2	i_y
water	121:40	0:0	2	;
if	124:4	164:4	2	(! rv && i_text_length > 0 && bbox . xMin < bbox . xMax && bbox . yMin < bbox . yMax)
cond	124:8	124:78	3	! rv && i_text_length > 0 && bbox . xMin < bbox . xMax && bbox . yMin < bbox . yMax
op	124:8	0:0	4	!
water	124:9	0:0	4	rv
op	124:12	0:0	4	&&
water	124:15	0:0	4	i_text_length
op	124:29	0:0	4	>
water	124:31	0:0	4	0
op	124:33	0:0	4	&&
water	124:36	0:0	4	bbox
op	124:40	0:0	4	.
water	124:41	0:0	4	xMin
op	124:46	0:0	4	<
water	124:48	0:0	4	bbox
op	124:52	0:0	4	.
water	124:53	0:0	4	xMax
op	124:58	0:0	4	&&
water	124:61	0:0	4	bbox
op	124:65	0:0	4	.
water	124:66	0:0	4	yMin
op	124:71	0:0	4	<
water	124:73	0:0	4	bbox
op	124:77	0:0	4	.
water	124:78	0:0	4	yMax
stmts	125:4	164:4	3	
water	125:4	0:0	4	{
decl	126:8	126:71	4	const vlc_fourcc_t	p_chroma_list_yuvp[]
op	126:48	0:0	4	=
water	126:50	0:0	4	{
water	126:52	0:0	4	VLC_CODEC_YUVP
water	126:66	0:0	4	,
water	126:68	0:0	4	0
water	126:70	0:0	4	}
decl	127:8	127:71	4	const vlc_fourcc_t	p_chroma_list_rgba[]
op	127:48	0:0	4	=
water	127:50	0:0	4	{
water	127:52	0:0	4	VLC_CODEC_RGBA
water	127:66	0:0	4	,
water	127:68	0:0	4	0
water	127:70	0:0	4	}
if	128:8	129:46	4	(var_InheritBool (p_filter ,"freetype-yuvp" ))
cond	128:12	128:55	5	var_InheritBool (p_filter ,"freetype-yuvp" )
call	128:12	128:55	6	var_InheritBool
arg	128:29	128:37	7	p_filter
water	128:29	0:0	8	p_filter
arg	128:39	128:55	7	"freetype-yuvp"
water	128:39	0:0	8	"freetype-yuvp"
stmts	129:12	129:46	5	
water	129:12	0:0	6	p_chroma_list
op	129:26	0:0	6	=
water	129:28	0:0	6	p_chroma_list_yuvp
water	129:46	0:0	6	;
else	130:8	131:46	4
stmts	130:13	131:46	5	
if	130:13	131:46	6	(! p_chroma_list || * p_chroma_list == 0)
cond	130:17	130:53	7	! p_chroma_list || * p_chroma_list == 0
op	130:17	0:0	8	!
water	130:18	0:0	8	p_chroma_list
op	130:32	0:0	8	||
op	130:35	0:0	8	*
water	130:36	0:0	8	p_chroma_list
op	130:50	0:0	8	==
water	130:53	0:0	8	0
stmts	131:12	131:46	7	
water	131:12	0:0	8	p_chroma_list
op	131:26	0:0	8	=
water	131:28	0:0	8	p_chroma_list_rgba
water	131:46	0:0	8	;
decl	132:8	132:100	4	uint8_t	i_background_opacity
op	132:37	0:0	4	=
call	132:39	132:99	5	var_InheritInteger
arg	132:59	132:67	6	p_filter
water	132:59	0:0	7	p_filter
arg	132:69	132:99	6	"freetype-background-opacity"
water	132:69	0:0	7	"freetype-background-opacity"
water	133:8	0:0	4	i_background_opacity
op	133:29	0:0	4	=
call	133:31	133:70	4	VLC_CLIP
arg	133:41	133:61	5	i_background_opacity
water	133:41	0:0	6	i_background_opacity
arg	133:63	133:64	5	0
water	133:63	0:0	6	0
arg	133:66	133:70	5	255
water	133:66	0:0	6	255
water	133:71	0:0	4	;
decl	134:8	134:81	4	const int	i_margin
op	134:27	0:0	4	=
water	134:29	0:0	4	i_background_opacity
op	134:50	0:0	4	>
water	134:52	0:0	4	0
water	134:54	0:0	4	?
water	134:56	0:0	4	i_max_face_height
op	134:74	0:0	4	/
water	134:76	0:0	4	4
water	134:78	0:0	4	:
water	134:80	0:0	4	0
for	135:8	158:8	4	( const vlc_fourcc_t * p_chroma = p_chroma_list ;* p_chroma != 0;p_chroma ++)
forinit	0:0	135:57	5	 const vlc_fourcc_t * p_chroma = p_chroma_list ;
decl	135:13	135:57	6	const vlc_fourcc_t	*p_chroma
op	135:42	0:0	6	=
water	135:44	0:0	6	p_chroma_list
cond	135:59	135:72	5	* p_chroma != 0
op	135:59	0:0	6	*
water	135:60	0:0	6	p_chroma
op	135:69	0:0	6	!=
water	135:72	0:0	6	0
forexpr	135:75	135:83	5	p_chroma ++
water	135:75	0:0	6	p_chroma
op	135:83	0:0	6	++
stmts	136:8	158:8	5	
water	136:8	0:0	6	{
water	137:12	0:0	6	rv
op	137:15	0:0	6	=
water	137:17	0:0	6	VLC_EGENERIC
water	137:29	0:0	6	;
if	138:12	139:73	6	(* p_chroma == VLC_CODEC_YUVP)
cond	138:16	138:29	7	* p_chroma == VLC_CODEC_YUVP
op	138:16	0:0	8	*
water	138:17	0:0	8	p_chroma
op	138:26	0:0	8	==
water	138:29	0:0	8	VLC_CODEC_YUVP
stmts	139:16	139:73	7	
water	139:16	0:0	8	rv
op	139:19	0:0	8	=
call	139:21	139:72	8	RenderYUVP
arg	139:33	139:41	9	p_filter
water	139:33	0:0	10	p_filter
arg	139:43	139:55	9	p_region_out
water	139:43	0:0	10	p_region_out
arg	139:57	139:64	9	p_lines
water	139:57	0:0	10	p_lines
arg	139:66	139:72	9	&bbox
op	139:66	0:0	10	&
water	139:67	0:0	10	bbox
water	139:73	0:0	8	;
else	140:12	145:49	6
stmts	140:17	145:49	7	
if	140:17	145:49	8	(* p_chroma == VLC_CODEC_YUVA)
cond	140:21	140:34	9	* p_chroma == VLC_CODEC_YUVA
op	140:21	0:0	10	*
water	140:22	0:0	10	p_chroma
op	140:31	0:0	10	==
water	140:34	0:0	10	VLC_CODEC_YUVA
stmts	141:16	145:49	9	
water	141:16	0:0	10	rv
op	141:19	0:0	10	=
call	141:21	145:48	10	RenderAXYZ
arg	141:33	141:41	11	p_filter
water	141:33	0:0	12	p_filter
arg	141:43	141:55	11	p_region_out
water	141:43	0:0	12	p_region_out
arg	141:57	141:64	11	p_lines
water	141:57	0:0	12	p_lines
arg	141:66	141:71	11	&bbox
op	141:66	0:0	12	&
water	141:67	0:0	12	bbox
arg	141:73	141:81	11	i_margin
water	141:73	0:0	12	i_margin
arg	142:33	142:47	11	VLC_CODEC_YUVA
water	142:33	0:0	12	VLC_CODEC_YUVA
arg	143:33	143:43	11	YUVFromRGB
water	143:33	0:0	12	YUVFromRGB
arg	144:33	144:48	11	FillYUVAPicture
water	144:33	0:0	12	FillYUVAPicture
arg	145:33	145:48	11	BlendYUVAPixel
water	145:33	0:0	12	BlendYUVAPixel
water	145:49	0:0	10	;
else	146:12	151:49	6
stmts	146:17	151:49	7	
if	146:17	151:49	8	(* p_chroma == VLC_CODEC_RGBA)
cond	146:21	146:34	9	* p_chroma == VLC_CODEC_RGBA
op	146:21	0:0	10	*
water	146:22	0:0	10	p_chroma
op	146:31	0:0	10	==
water	146:34	0:0	10	VLC_CODEC_RGBA
stmts	147:16	151:49	9	
water	147:16	0:0	10	rv
op	147:19	0:0	10	=
call	147:21	151:48	10	RenderAXYZ
arg	147:33	147:41	11	p_filter
water	147:33	0:0	12	p_filter
arg	147:43	147:55	11	p_region_out
water	147:43	0:0	12	p_region_out
arg	147:57	147:64	11	p_lines
water	147:57	0:0	12	p_lines
arg	147:66	147:71	11	&bbox
op	147:66	0:0	12	&
water	147:67	0:0	12	bbox
arg	147:73	147:81	11	i_margin
water	147:73	0:0	12	i_margin
arg	148:33	148:47	11	VLC_CODEC_RGBA
water	148:33	0:0	12	VLC_CODEC_RGBA
arg	149:33	149:43	11	RGBFromRGB
water	149:33	0:0	12	RGBFromRGB
arg	150:33	150:48	11	FillRGBAPicture
water	150:33	0:0	12	FillRGBAPicture
arg	151:33	151:48	11	BlendRGBAPixel
water	151:33	0:0	12	BlendRGBAPixel
water	151:49	0:0	10	;
else	152:12	155:66	6
stmts	152:17	155:66	7	
if	152:17	155:66	8	(* p_chroma == VLC_CODEC_ARGB)
cond	152:21	152:34	9	* p_chroma == VLC_CODEC_ARGB
op	152:21	0:0	10	*
water	152:22	0:0	10	p_chroma
op	152:31	0:0	10	==
water	152:34	0:0	10	VLC_CODEC_ARGB
stmts	153:16	155:66	9	
water	153:16	0:0	10	rv
op	153:19	0:0	10	=
call	153:21	155:65	10	RenderAXYZ
arg	153:33	153:41	11	p_filter
water	153:33	0:0	12	p_filter
arg	153:43	153:55	11	p_region_out
water	153:43	0:0	12	p_region_out
arg	153:57	153:64	11	p_lines
water	153:57	0:0	12	p_lines
arg	153:66	153:71	11	&bbox
op	153:66	0:0	12	&
water	153:67	0:0	12	bbox
arg	154:33	154:41	11	i_margin
water	154:33	0:0	12	i_margin
arg	154:43	154:52	11	*p_chroma
op	154:43	0:0	12	*
water	154:44	0:0	12	p_chroma
arg	154:54	154:64	11	RGBFromRGB
water	154:54	0:0	12	RGBFromRGB
arg	155:33	155:48	11	FillARGBPicture
water	155:33	0:0	12	FillARGBPicture
arg	155:50	155:65	11	BlendARGBPixel
water	155:50	0:0	12	BlendARGBPixel
water	155:66	0:0	10	;
if	156:12	157:21	6	(! rv)
cond	156:16	156:17	7	! rv
op	156:16	0:0	8	!
water	156:17	0:0	8	rv
stmts	157:16	157:21	7	
break	157:16	157:21	8	
water	158:8	0:0	6	}
if	162:8	163:58	4	(pi_k_durations)
cond	162:12	162:12	5	pi_k_durations
water	162:12	0:0	6	pi_k_durations
stmts	163:12	163:58	5	
call	163:12	163:57	6	var_SetBool
arg	163:25	163:33	7	p_filter
water	163:25	0:0	8	p_filter
arg	163:35	163:50	7	"text-rerender"
water	163:35	0:0	8	"text-rerender"
arg	163:52	163:57	7	true
water	163:52	0:0	8	true
water	163:58	0:0	6	;
water	164:4	0:0	4	}
call	165:4	165:23	2	FreeLines
arg	165:15	165:23	3	p_lines
water	165:15	0:0	4	p_lines
water	165:24	0:0	2	;
call	166:4	166:19	2	free
arg	166:10	166:19	3	psz_text
water	166:10	0:0	4	psz_text
water	166:20	0:0	2	;
for	167:4	171:4	2	( int i = 0 ;i < i_text_length;i ++)
forinit	0:0	167:18	3	 int i = 0 ;
decl	167:9	167:18	4	int	i
op	167:15	0:0	4	=
water	167:17	0:0	4	0
cond	167:20	167:24	3	i < i_text_length
water	167:20	0:0	4	i
op	167:22	0:0	4	<
water	167:24	0:0	4	i_text_length
forexpr	167:39	167:40	3	i ++
water	167:39	0:0	4	i
op	167:40	0:0	4	++
stmts	168:4	171:4	3	
water	168:4	0:0	4	{
if	169:8	170:45	4	(pp_styles [ i ] && ( i + 1 == i_text_length || pp_styles [ i ] != pp_styles [ i + 1 ] ))
cond	169:12	169:89	5	pp_styles [ i ] && ( i + 1 == i_text_length || pp_styles [ i ] != pp_styles [ i + 1 ] )
water	169:12	0:0	6	pp_styles
op	169:21	0:0	6	[
water	169:22	0:0	6	i
op	169:23	0:0	6	]
op	169:25	0:0	6	&&
water	169:28	0:0	6	(
water	169:30	0:0	6	i
op	169:32	0:0	6	+
water	169:34	0:0	6	1
op	169:36	0:0	6	==
water	169:39	0:0	6	i_text_length
op	169:53	0:0	6	||
water	169:56	0:0	6	pp_styles
op	169:65	0:0	6	[
water	169:66	0:0	6	i
op	169:67	0:0	6	]
op	169:69	0:0	6	!=
water	169:72	0:0	6	pp_styles
op	169:81	0:0	6	[
water	169:82	0:0	6	i
op	169:84	0:0	6	+
water	169:86	0:0	6	1
op	169:87	0:0	6	]
water	169:89	0:0	6	)
stmts	170:12	170:45	5	
call	170:12	170:44	6	text_style_Delete
arg	170:31	170:44	7	pp_styles[i]
water	170:31	0:0	8	pp_styles
op	170:40	0:0	8	[
water	170:41	0:0	8	i
op	170:42	0:0	8	]
water	170:45	0:0	6	;
water	171:4	0:0	4	}
call	172:4	172:20	2	free
arg	172:10	172:20	3	pp_styles
water	172:10	0:0	4	pp_styles
water	172:21	0:0	2	;
call	173:4	173:25	2	free
arg	173:10	173:25	3	pi_k_durations
water	173:10	0:0	4	pi_k_durations
water	173:26	0:0	2	;
return	174:4	174:13	2	rv
water	174:11	0:0	3	rv

func	2:0	95:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	94:22	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
water	7:4	0:0	2	p_demux
op	7:11	0:0	2	->
water	7:13	0:0	2	pf_demux
op	7:22	0:0	2	=
water	7:24	0:0	2	Demux
water	7:29	0:0	2	;
water	8:4	0:0	2	p_demux
op	8:11	0:0	2	->
water	8:13	0:0	2	pf_control
op	8:24	0:0	2	=
water	8:26	0:0	2	Control
water	8:33	0:0	2	;
water	9:4	0:0	2	p_demux
op	9:11	0:0	2	->
water	9:13	0:0	2	p_sys
op	9:19	0:0	2	=
water	9:21	0:0	2	p_sys
op	9:27	0:0	2	=
call	9:29	9:62	2	calloc
arg	9:37	9:38	3	1
water	9:37	0:0	4	1
arg	9:40	9:62	3	sizeof(demux_sys_t)
op	9:40	0:0	4	sizeof
water	9:46	0:0	4	(
water	9:48	0:0	4	demux_sys_t
water	9:60	0:0	4	)
water	9:63	0:0	2	;
if	10:4	11:25	2	(! p_sys)
cond	10:8	10:9	3	! p_sys
op	10:8	0:0	4	!
water	10:9	0:0	4	p_sys
stmts	11:8	11:25	3	
return	11:8	11:25	4	VLC_ENOMEM
water	11:15	0:0	5	VLC_ENOMEM
water	12:4	0:0	2	p_sys
op	12:9	0:0	2	->
water	12:11	0:0	2	f_fps
op	12:17	0:0	2	=
call	12:19	12:61	2	var_CreateGetFloat
arg	12:39	12:46	3	p_demux
water	12:39	0:0	4	p_demux
arg	12:48	12:61	3	"screen-fps"
water	12:48	0:0	4	"screen-fps"
water	12:62	0:0	2	;
water	13:4	0:0	2	p_sys
op	13:9	0:0	2	->
water	13:11	0:0	2	i_incr
op	13:18	0:0	2	=
water	13:20	0:0	2	1000000
op	13:28	0:0	2	/
water	13:30	0:0	2	p_sys
op	13:35	0:0	2	->
water	13:37	0:0	2	f_fps
water	13:42	0:0	2	;
water	13:43	0:0	2	;
water	14:4	0:0	2	p_sys
op	14:9	0:0	2	->
water	14:11	0:0	2	i_next_date
op	14:23	0:0	2	=
water	14:25	0:0	2	0
water	14:26	0:0	2	;
water	16:4	0:0	2	p_sys
op	16:9	0:0	2	->
water	16:11	0:0	2	i_top
op	16:17	0:0	2	=
call	16:19	16:63	2	var_CreateGetInteger
arg	16:41	16:48	3	p_demux
water	16:41	0:0	4	p_demux
arg	16:50	16:63	3	"screen-top"
water	16:50	0:0	4	"screen-top"
water	16:64	0:0	2	;
water	17:4	0:0	2	p_sys
op	17:9	0:0	2	->
water	17:11	0:0	2	i_left
op	17:18	0:0	2	=
call	17:20	17:65	2	var_CreateGetInteger
arg	17:42	17:49	3	p_demux
water	17:42	0:0	4	p_demux
arg	17:51	17:65	3	"screen-left"
water	17:51	0:0	4	"screen-left"
water	17:66	0:0	2	;
water	18:4	0:0	2	p_sys
op	18:9	0:0	2	->
water	18:11	0:0	2	i_width
op	18:19	0:0	2	=
call	18:21	18:67	2	var_CreateGetInteger
arg	18:43	18:50	3	p_demux
water	18:43	0:0	4	p_demux
arg	18:52	18:67	3	"screen-width"
water	18:52	0:0	4	"screen-width"
water	18:68	0:0	2	;
water	19:4	0:0	2	p_sys
op	19:9	0:0	2	->
water	19:11	0:0	2	i_height
op	19:20	0:0	2	=
call	19:22	19:69	2	var_CreateGetInteger
arg	19:44	19:51	3	p_demux
water	19:44	0:0	4	p_demux
arg	19:53	19:69	3	"screen-height"
water	19:53	0:0	4	"screen-height"
water	19:70	0:0	2	;
if	20:4	26:43	2	(p_sys -> i_width > 0 && p_sys -> i_height > 0)
cond	20:8	20:48	3	p_sys -> i_width > 0 && p_sys -> i_height > 0
water	20:8	0:0	4	p_sys
op	20:13	0:0	4	->
water	20:15	0:0	4	i_width
op	20:23	0:0	4	>
water	20:25	0:0	4	0
op	20:27	0:0	4	&&
water	20:30	0:0	4	p_sys
op	20:35	0:0	4	->
water	20:37	0:0	4	i_height
op	20:46	0:0	4	>
water	20:48	0:0	4	0
stmts	21:8	26:43	3	
call	21:8	26:42	4	msg_Dbg
arg	21:17	21:24	5	p_demux
water	21:17	0:0	6	p_demux
arg	21:26	22:49	5	"capturing subscreen top: %d, left: %d, ""width: %d, height: %d"
water	21:26	0:0	6	"capturing subscreen top: %d, left: %d, "
water	22:26	0:0	6	"width: %d, height: %d"
arg	23:26	23:38	5	p_sys->i_top
water	23:26	0:0	6	p_sys
op	23:31	0:0	6	->
water	23:33	0:0	6	i_top
arg	24:26	24:39	5	p_sys->i_left
water	24:26	0:0	6	p_sys
op	24:31	0:0	6	->
water	24:33	0:0	6	i_left
arg	25:26	25:40	5	p_sys->i_width
water	25:26	0:0	6	p_sys
op	25:31	0:0	6	->
water	25:33	0:0	6	i_width
arg	26:26	26:42	5	p_sys->i_height
water	26:26	0:0	6	p_sys
op	26:31	0:0	6	->
water	26:33	0:0	6	i_height
water	26:43	0:0	4	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	i_display_id
op	29:24	0:0	2	=
call	29:26	29:77	2	var_CreateGetInteger
arg	29:48	29:55	3	p_demux
water	29:48	0:0	4	p_demux
arg	29:57	29:77	3	"screen-display-id"
water	29:57	0:0	4	"screen-display-id"
water	29:78	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	i_screen_index
op	30:26	0:0	2	=
call	30:28	30:74	2	var_CreateGetInteger
arg	30:50	30:57	3	p_demux
water	30:50	0:0	4	p_demux
arg	30:59	30:74	3	"screen-index"
water	30:59	0:0	4	"screen-index"
water	30:75	0:0	2	;
if	32:4	36:4	2	(screen_InitCapture (p_demux ) != VLC_SUCCESS)
cond	32:8	32:41	3	screen_InitCapture (p_demux ) != VLC_SUCCESS
call	32:8	32:36	4	screen_InitCapture
arg	32:28	32:36	5	p_demux
water	32:28	0:0	6	p_demux
op	32:38	0:0	4	!=
water	32:41	0:0	4	VLC_SUCCESS
stmts	33:4	36:4	3	
water	33:4	0:0	4	{
call	34:8	34:20	4	free
arg	34:14	34:20	5	p_sys
water	34:14	0:0	6	p_sys
water	34:21	0:0	4	;
return	35:8	35:27	4	VLC_EGENERIC
water	35:15	0:0	5	VLC_EGENERIC
water	36:4	0:0	4	}
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	fmt
op	37:14	0:0	2	.
water	37:15	0:0	2	video
op	37:20	0:0	2	.
water	37:21	0:0	2	i_frame_rate
op	37:39	0:0	2	=
water	37:41	0:0	2	1000000
water	37:48	0:0	2	;
water	38:4	0:0	2	p_sys
op	38:9	0:0	2	->
water	38:11	0:0	2	fmt
op	38:14	0:0	2	.
water	38:15	0:0	2	video
op	38:20	0:0	2	.
water	38:21	0:0	2	i_frame_rate_base
op	38:39	0:0	2	=
water	38:41	0:0	2	p_sys
op	38:46	0:0	2	->
water	38:48	0:0	2	i_incr
water	38:54	0:0	2	;
call	39:4	41:47	2	msg_Dbg
arg	39:13	39:20	3	p_demux
water	39:13	0:0	4	p_demux
arg	39:22	39:63	3	"screen width: %i, height: %i, depth: %i"
water	39:22	0:0	4	"screen width: %i, height: %i, depth: %i"
arg	40:13	40:37	3	p_sys->fmt.video.i_width
water	40:13	0:0	4	p_sys
op	40:18	0:0	4	->
water	40:20	0:0	4	fmt
op	40:23	0:0	4	.
water	40:24	0:0	4	video
op	40:29	0:0	4	.
water	40:30	0:0	4	i_width
arg	40:39	40:64	3	p_sys->fmt.video.i_height
water	40:39	0:0	4	p_sys
op	40:44	0:0	4	->
water	40:46	0:0	4	fmt
op	40:49	0:0	4	.
water	40:50	0:0	4	video
op	40:55	0:0	4	.
water	40:56	0:0	4	i_height
arg	41:13	41:47	3	p_sys->fmt.video.i_bits_per_pixel
water	41:13	0:0	4	p_sys
op	41:18	0:0	4	->
water	41:20	0:0	4	fmt
op	41:23	0:0	4	.
water	41:24	0:0	4	video
op	41:29	0:0	4	.
water	41:30	0:0	4	i_bits_per_pixel
water	41:48	0:0	2	;
if	43:4	65:4	2	(p_sys -> i_width > 0 && p_sys -> i_height > 0)
cond	43:8	43:48	3	p_sys -> i_width > 0 && p_sys -> i_height > 0
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	i_width
op	43:23	0:0	4	>
water	43:25	0:0	4	0
op	43:27	0:0	4	&&
water	43:30	0:0	4	p_sys
op	43:35	0:0	4	->
water	43:37	0:0	4	i_height
op	43:46	0:0	4	>
water	43:48	0:0	4	0
stmts	44:4	65:4	3	
water	44:4	0:0	4	{
if	45:8	51:8	4	(p_sys -> i_left + p_sys -> i_width > p_sys -> fmt . video . i_width || p_sys -> i_top + p_sys -> i_height > p_sys -> fmt . video . i_height)
cond	45:12	46:62	5	p_sys -> i_left + p_sys -> i_width > p_sys -> fmt . video . i_width || p_sys -> i_top + p_sys -> i_height > p_sys -> fmt . video . i_height
water	45:12	0:0	6	p_sys
op	45:17	0:0	6	->
water	45:19	0:0	6	i_left
op	45:26	0:0	6	+
water	45:28	0:0	6	p_sys
op	45:33	0:0	6	->
water	45:35	0:0	6	i_width
op	45:43	0:0	6	>
water	45:45	0:0	6	p_sys
op	45:50	0:0	6	->
water	45:52	0:0	6	fmt
op	45:55	0:0	6	.
water	45:56	0:0	6	video
op	45:61	0:0	6	.
water	45:62	0:0	6	i_width
op	45:70	0:0	6	||
water	46:12	0:0	6	p_sys
op	46:17	0:0	6	->
water	46:19	0:0	6	i_top
op	46:25	0:0	6	+
water	46:27	0:0	6	p_sys
op	46:32	0:0	6	->
water	46:34	0:0	6	i_height
op	46:43	0:0	6	>
water	46:45	0:0	6	p_sys
op	46:50	0:0	6	->
water	46:52	0:0	6	fmt
op	46:55	0:0	6	.
water	46:56	0:0	6	video
op	46:61	0:0	6	.
water	46:62	0:0	6	i_height
stmts	47:8	51:8	5	
water	47:8	0:0	6	{
call	48:12	48:70	6	msg_Err
arg	48:21	48:28	7	p_demux
water	48:21	0:0	8	p_demux
arg	48:30	48:70	7	"subscreen region overflows the screen"
water	48:30	0:0	8	"subscreen region overflows the screen"
water	48:71	0:0	6	;
call	49:12	49:24	6	free
arg	49:18	49:24	7	p_sys
water	49:18	0:0	8	p_sys
water	49:25	0:0	6	;
return	50:12	50:31	6	VLC_EGENERIC
water	50:19	0:0	7	VLC_EGENERIC
water	51:8	0:0	6	}
else	52:8	64:8	4
stmts	53:8	64:8	5	
water	53:8	0:0	6	{
water	54:12	0:0	6	p_sys
op	54:17	0:0	6	->
water	54:19	0:0	6	i_screen_width
op	54:34	0:0	6	=
water	54:36	0:0	6	p_sys
op	54:41	0:0	6	->
water	54:43	0:0	6	fmt
op	54:46	0:0	6	.
water	54:47	0:0	6	video
op	54:52	0:0	6	.
water	54:53	0:0	6	i_width
water	54:60	0:0	6	;
water	55:12	0:0	6	p_sys
op	55:17	0:0	6	->
water	55:19	0:0	6	i_screen_height
op	55:35	0:0	6	=
water	55:37	0:0	6	p_sys
op	55:42	0:0	6	->
water	55:44	0:0	6	fmt
op	55:47	0:0	6	.
water	55:48	0:0	6	video
op	55:53	0:0	6	.
water	55:54	0:0	6	i_height
water	55:62	0:0	6	;
water	56:12	0:0	6	p_sys
op	56:17	0:0	6	->
water	56:19	0:0	6	fmt
op	56:22	0:0	6	.
water	56:23	0:0	6	video
op	56:28	0:0	6	.
water	56:29	0:0	6	i_visible_width
op	56:45	0:0	6	=
water	57:12	0:0	6	p_sys
op	57:17	0:0	6	->
water	57:19	0:0	6	fmt
op	57:22	0:0	6	.
water	57:23	0:0	6	video
op	57:28	0:0	6	.
water	57:29	0:0	6	i_width
op	57:37	0:0	6	=
water	57:39	0:0	6	p_sys
op	57:44	0:0	6	->
water	57:46	0:0	6	i_width
water	57:53	0:0	6	;
water	58:12	0:0	6	p_sys
op	58:17	0:0	6	->
water	58:19	0:0	6	fmt
op	58:22	0:0	6	.
water	58:23	0:0	6	video
op	58:28	0:0	6	.
water	58:29	0:0	6	i_visible_height
op	58:46	0:0	6	=
water	59:12	0:0	6	p_sys
op	59:17	0:0	6	->
water	59:19	0:0	6	fmt
op	59:22	0:0	6	.
water	59:23	0:0	6	video
op	59:28	0:0	6	.
water	59:29	0:0	6	i_height
op	59:38	0:0	6	=
water	59:40	0:0	6	p_sys
op	59:45	0:0	6	->
water	59:47	0:0	6	i_height
water	59:55	0:0	6	;
water	60:12	0:0	6	p_sys
op	60:17	0:0	6	->
water	60:19	0:0	6	b_follow_mouse
op	60:34	0:0	6	=
call	60:36	61:70	6	var_CreateGetBool
arg	60:55	60:62	7	p_demux
water	60:55	0:0	8	p_demux
arg	61:48	61:70	7	"screen-follow-mouse"
water	61:48	0:0	8	"screen-follow-mouse"
water	61:71	0:0	6	;
if	62:12	63:61	6	(p_sys -> b_follow_mouse)
cond	62:16	62:23	7	p_sys -> b_follow_mouse
water	62:16	0:0	8	p_sys
op	62:21	0:0	8	->
water	62:23	0:0	8	b_follow_mouse
stmts	63:16	63:61	7	
call	63:16	63:60	8	msg_Dbg
arg	63:25	63:32	9	p_demux
water	63:25	0:0	10	p_demux
arg	63:34	63:60	9	"mouse following enabled"
water	63:34	0:0	10	"mouse following enabled"
water	63:61	0:0	8	;
water	64:8	0:0	6	}
water	65:4	0:0	4	}
decl	68:4	68:72	2	char	*mousefile
op	68:20	0:0	2	=
call	68:22	68:71	3	var_InheritString
arg	68:41	68:48	4	p_demux
water	68:41	0:0	5	p_demux
arg	68:50	68:71	4	"screen-mouse-image"
water	68:50	0:0	5	"screen-mouse-image"
decl	69:4	69:71	2	char	*mouseurl
op	69:19	0:0	2	=
water	69:21	0:0	2	mousefile
water	69:31	0:0	2	?
call	69:33	69:63	3	vlc_path2uri
arg	69:47	69:56	4	mousefile
water	69:47	0:0	5	mousefile
arg	69:58	69:63	4	NULL
water	69:58	0:0	5	NULL
water	69:65	0:0	2	:
water	69:67	0:0	2	NULL
call	70:4	70:20	2	free
arg	70:10	70:20	3	mousefile
water	70:10	0:0	4	mousefile
water	70:21	0:0	2	;
if	71:4	90:4	2	(mouseurl)
cond	71:8	71:8	3	mouseurl
water	71:8	0:0	4	mouseurl
stmts	72:4	90:4	3	
water	72:4	0:0	4	{
decl	73:8	73:32	4	image_handler_t	*p_image
decl	74:8	74:38	4	video_format_t	fmt_in
water	74:29	0:0	4	,
decl	74:8	74:38	4	video_format_t	fmt_out
call	75:8	75:75	4	msg_Dbg
arg	75:17	75:24	5	p_demux
water	75:17	0:0	6	p_demux
arg	75:26	75:64	5	"Using %s for the mouse pointer image"
water	75:26	0:0	6	"Using %s for the mouse pointer image"
arg	75:66	75:75	5	mouseurl
water	75:66	0:0	6	mouseurl
water	75:76	0:0	4	;
call	76:8	76:45	4	memset
arg	76:16	76:23	5	&fmt_in
op	76:16	0:0	6	&
water	76:17	0:0	6	fmt_in
arg	76:25	76:26	5	0
water	76:25	0:0	6	0
arg	76:28	76:45	5	sizeof(fmt_in)
op	76:28	0:0	6	sizeof
water	76:34	0:0	6	(
water	76:36	0:0	6	fmt_in
water	76:43	0:0	6	)
water	76:46	0:0	4	;
call	77:8	77:47	4	memset
arg	77:16	77:24	5	&fmt_out
op	77:16	0:0	6	&
water	77:17	0:0	6	fmt_out
arg	77:26	77:27	5	0
water	77:26	0:0	6	0
arg	77:29	77:47	5	sizeof(fmt_out)
op	77:29	0:0	6	sizeof
water	77:35	0:0	6	(
water	77:37	0:0	6	fmt_out
water	77:45	0:0	6	)
water	77:48	0:0	4	;
water	78:8	0:0	4	fmt_out
op	78:15	0:0	4	.
water	78:16	0:0	4	i_chroma
op	78:25	0:0	4	=
water	78:27	0:0	4	VLC_CODEC_RGBA
water	78:41	0:0	4	;
water	79:8	0:0	4	p_image
op	79:16	0:0	4	=
call	79:18	79:47	4	image_HandlerCreate
arg	79:39	79:47	5	p_demux
water	79:39	0:0	6	p_demux
water	79:48	0:0	4	;
if	80:8	85:8	4	(p_image)
cond	80:12	80:12	5	p_image
water	80:12	0:0	6	p_image
stmts	81:8	85:8	5	
water	81:8	0:0	6	{
water	82:12	0:0	6	p_sys
op	82:17	0:0	6	->
water	82:19	0:0	6	p_mouse
op	82:27	0:0	6	=
call	83:16	83:68	6	image_ReadUrl
arg	83:31	83:38	7	p_image
water	83:31	0:0	8	p_image
arg	83:40	83:48	7	mouseurl
water	83:40	0:0	8	mouseurl
arg	83:50	83:57	7	&fmt_in
op	83:50	0:0	8	&
water	83:51	0:0	8	fmt_in
arg	83:59	83:68	7	&fmt_out
op	83:59	0:0	8	&
water	83:60	0:0	8	fmt_out
water	83:69	0:0	6	;
call	84:12	84:41	6	image_HandlerDelete
arg	84:33	84:41	7	p_image
water	84:33	0:0	8	p_image
water	84:42	0:0	6	;
water	85:8	0:0	6	}
if	86:8	88:31	4	(! p_sys -> p_mouse)
cond	86:12	86:20	5	! p_sys -> p_mouse
op	86:12	0:0	6	!
water	86:13	0:0	6	p_sys
op	86:18	0:0	6	->
water	86:20	0:0	6	p_mouse
stmts	87:12	88:31	5	
call	87:12	88:30	6	msg_Err
arg	87:21	87:28	7	p_demux
water	87:21	0:0	8	p_demux
arg	87:30	87:71	7	"Failed to open mouse pointer image (%s)"
water	87:30	0:0	8	"Failed to open mouse pointer image (%s)"
arg	88:21	88:30	7	mouseurl
water	88:21	0:0	8	mouseurl
water	88:31	0:0	6	;
call	89:8	89:23	4	free
arg	89:14	89:23	5	mouseurl
water	89:14	0:0	6	mouseurl
water	89:24	0:0	4	;
water	90:4	0:0	4	}
water	92:4	0:0	2	p_sys
op	92:9	0:0	2	->
water	92:11	0:0	2	es
op	92:14	0:0	2	=
call	92:16	92:54	2	es_out_Add
arg	92:28	92:40	3	p_demux->out
water	92:28	0:0	4	p_demux
op	92:35	0:0	4	->
water	92:37	0:0	4	out
arg	92:42	92:54	3	&p_sys->fmt
op	92:42	0:0	4	&
water	92:43	0:0	4	p_sys
op	92:48	0:0	4	->
water	92:50	0:0	4	fmt
water	92:55	0:0	2	;
water	93:4	0:0	2	p_sys
op	93:9	0:0	2	->
water	93:11	0:0	2	i_start
op	93:19	0:0	2	=
call	93:21	93:27	2	mdate
water	93:28	0:0	2	;
return	94:4	94:22	2	VLC_SUCCESS
water	94:11	0:0	3	VLC_SUCCESS

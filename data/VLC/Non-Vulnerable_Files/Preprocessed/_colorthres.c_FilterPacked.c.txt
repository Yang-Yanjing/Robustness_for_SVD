func	2:0	54:0	0	static picture_t *	FilterPacked
params	2:30	0:0	1	
param	2:32	2:50	2	filter_t *	p_filter
param	2:52	2:69	2	picture_t *	p_pic
stmnts	0:0	53:48	1	
decl	4:4	4:23	2	picture_t	*p_outpic
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
decl	6:4	6:54	2	int	i_simthres
op	6:19	0:0	2	=
call	6:21	6:53	3	atomic_load
arg	6:34	6:53	4	&p_sys->i_simthres
op	6:34	0:0	5	&
water	6:35	0:0	5	p_sys
op	6:40	0:0	5	->
water	6:42	0:0	5	i_simthres
decl	7:4	7:54	2	int	i_satthres
op	7:19	0:0	2	=
call	7:21	7:53	3	atomic_load
arg	7:34	7:53	4	&p_sys->i_satthres
op	7:34	0:0	5	&
water	7:35	0:0	5	p_sys
op	7:40	0:0	5	->
water	7:42	0:0	5	i_satthres
decl	8:4	8:48	2	int	i_color
op	8:16	0:0	2	=
call	8:18	8:47	3	atomic_load
arg	8:31	8:47	4	&p_sys->i_color
op	8:31	0:0	5	&
water	8:32	0:0	5	p_sys
op	8:37	0:0	5	->
water	8:39	0:0	5	i_color
if	9:4	9:28	2	(! p_pic)
cond	9:8	9:9	3	! p_pic
op	9:8	0:0	4	!
water	9:9	0:0	4	p_pic
stmts	9:17	9:28	3	
return	9:17	9:28	4	NULL
water	9:24	0:0	5	NULL
water	10:4	0:0	2	p_outpic
op	10:13	0:0	2	=
call	10:15	10:43	2	filter_NewPicture
arg	10:34	10:43	3	p_filter
water	10:34	0:0	4	p_filter
water	10:44	0:0	2	;
if	11:4	15:4	2	(! p_outpic)
cond	11:8	11:9	3	! p_outpic
op	11:8	0:0	4	!
water	11:9	0:0	4	p_outpic
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:31	4	picture_Release
arg	13:25	13:31	5	p_pic
water	13:25	0:0	6	p_pic
water	13:32	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
decl	16:4	16:42	2	int	i_y_offset
water	16:18	0:0	2	,
decl	16:4	16:42	2	int	i_u_offset
water	16:30	0:0	2	,
decl	16:4	16:42	2	int	i_v_offset
decl	17:4	18:76	2	int	i_ret
op	17:14	0:0	2	=
call	17:16	18:75	3	GetPackedYuvOffsets
arg	17:37	17:68	4	p_filter->fmt_in.video.i_chroma
water	17:37	0:0	5	p_filter
op	17:45	0:0	5	->
water	17:47	0:0	5	fmt_in
op	17:53	0:0	5	.
water	17:54	0:0	5	video
op	17:59	0:0	5	.
water	17:60	0:0	5	i_chroma
arg	18:37	18:48	4	&i_y_offset
op	18:37	0:0	5	&
water	18:38	0:0	5	i_y_offset
arg	18:50	18:61	4	&i_u_offset
op	18:50	0:0	5	&
water	18:51	0:0	5	i_u_offset
arg	18:63	18:75	4	&i_v_offset
op	18:63	0:0	5	&
water	18:64	0:0	5	i_v_offset
if	19:4	23:4	2	(i_ret == VLC_EGENERIC)
cond	19:8	19:17	3	i_ret == VLC_EGENERIC
water	19:8	0:0	4	i_ret
op	19:14	0:0	4	==
water	19:17	0:0	4	VLC_EGENERIC
stmts	20:4	23:4	3	
water	20:4	0:0	4	{
call	21:8	21:31	4	picture_Release
arg	21:25	21:31	5	p_pic
water	21:25	0:0	6	p_pic
water	21:32	0:0	4	;
return	22:8	22:19	4	NULL
water	22:15	0:0	5	NULL
water	23:4	0:0	4	}
decl	27:4	27:29	2	int	refu
water	27:12	0:0	2	,
decl	27:4	27:29	2	int	refv
water	27:18	0:0	2	,
decl	27:4	27:29	2	int	reflength
call	28:4	28:52	2	GetReference
arg	28:18	28:23	3	&refu
op	28:18	0:0	4	&
water	28:19	0:0	4	refu
arg	28:25	28:30	3	&refv
op	28:25	0:0	4	&
water	28:26	0:0	4	refv
arg	28:32	28:42	3	&reflength
op	28:32	0:0	4	&
water	28:33	0:0	4	reflength
arg	28:44	28:52	3	i_color
water	28:44	0:0	4	i_color
water	28:53	0:0	2	;
for	29:4	52:4	2	( int y = 0 ;y < p_pic -> p -> i_visible_lines;y ++)
forinit	0:0	29:18	3	 int y = 0 ;
decl	29:9	29:18	4	int	y
op	29:15	0:0	4	=
water	29:17	0:0	4	0
cond	29:20	29:34	3	y < p_pic -> p -> i_visible_lines
water	29:20	0:0	4	y
op	29:22	0:0	4	<
water	29:24	0:0	4	p_pic
op	29:29	0:0	4	->
water	29:31	0:0	4	p
op	29:32	0:0	4	->
water	29:34	0:0	4	i_visible_lines
forexpr	29:51	29:52	3	y ++
water	29:51	0:0	4	y
op	29:52	0:0	4	++
stmts	30:4	52:4	3	
water	30:4	0:0	4	{
decl	31:8	31:67	4	uint8_t	*p_src
op	31:23	0:0	4	=
op	31:25	0:0	4	&
water	31:26	0:0	4	p_pic
op	31:31	0:0	4	->
water	31:33	0:0	4	p
op	31:34	0:0	4	->
water	31:36	0:0	4	p_pixels
op	31:44	0:0	4	[
water	31:45	0:0	4	y
op	31:47	0:0	4	*
water	31:49	0:0	4	p_pic
op	31:54	0:0	4	->
water	31:56	0:0	4	p
op	31:57	0:0	4	->
water	31:59	0:0	4	i_pitch
op	31:66	0:0	4	]
decl	32:8	32:73	4	uint8_t	*p_dst
op	32:23	0:0	4	=
op	32:25	0:0	4	&
water	32:26	0:0	4	p_outpic
op	32:34	0:0	4	->
water	32:36	0:0	4	p
op	32:37	0:0	4	->
water	32:39	0:0	4	p_pixels
op	32:47	0:0	4	[
water	32:48	0:0	4	y
op	32:50	0:0	4	*
water	32:52	0:0	4	p_outpic
op	32:60	0:0	4	->
water	32:62	0:0	4	p
op	32:63	0:0	4	->
water	32:65	0:0	4	i_pitch
op	32:72	0:0	4	]
for	33:8	51:8	4	( int x = 0 ;x < p_pic -> p -> i_visible_pitch / 4;x ++)
forinit	0:0	33:22	5	 int x = 0 ;
decl	33:13	33:22	6	int	x
op	33:19	0:0	6	=
water	33:21	0:0	6	0
cond	33:24	33:56	5	x < p_pic -> p -> i_visible_pitch / 4
water	33:24	0:0	6	x
op	33:26	0:0	6	<
water	33:28	0:0	6	p_pic
op	33:33	0:0	6	->
water	33:35	0:0	6	p
op	33:36	0:0	6	->
water	33:38	0:0	6	i_visible_pitch
op	33:54	0:0	6	/
water	33:56	0:0	6	4
forexpr	33:59	33:60	5	x ++
water	33:59	0:0	6	x
op	33:60	0:0	6	++
stmts	34:8	51:8	5	
water	34:8	0:0	6	{
water	35:12	0:0	6	p_dst
op	35:17	0:0	6	[
water	35:18	0:0	6	i_y_offset
op	35:29	0:0	6	+
water	35:31	0:0	6	0
op	35:32	0:0	6	]
op	35:34	0:0	6	=
water	35:36	0:0	6	p_src
op	35:41	0:0	6	[
water	35:42	0:0	6	i_y_offset
op	35:53	0:0	6	+
water	35:55	0:0	6	0
op	35:56	0:0	6	]
water	35:57	0:0	6	;
water	36:12	0:0	6	p_dst
op	36:17	0:0	6	[
water	36:18	0:0	6	i_y_offset
op	36:29	0:0	6	+
water	36:31	0:0	6	2
op	36:32	0:0	6	]
op	36:34	0:0	6	=
water	36:36	0:0	6	p_src
op	36:41	0:0	6	[
water	36:42	0:0	6	i_y_offset
op	36:53	0:0	6	+
water	36:55	0:0	6	2
op	36:56	0:0	6	]
water	36:57	0:0	6	;
if	37:12	43:12	6	(IsSimilar (p_src [ i_u_offset ] - 0 x80 ,p_src [ i_v_offset ] - 0 x80 ,refu ,refv ,reflength ,i_satthres ,i_simthres ))
cond	37:16	39:50	7	IsSimilar (p_src [ i_u_offset ] - 0 x80 ,p_src [ i_v_offset ] - 0 x80 ,refu ,refv ,reflength ,i_satthres ,i_simthres )
call	37:16	39:50	8	IsSimilar
arg	37:27	37:51	9	p_src[i_u_offset]-0x80
water	37:27	0:0	10	p_src
op	37:32	0:0	10	[
water	37:33	0:0	10	i_u_offset
op	37:43	0:0	10	]
op	37:45	0:0	10	-
water	37:47	0:0	10	0
water	37:48	0:0	10	x80
arg	37:53	37:77	9	p_src[i_v_offset]-0x80
water	37:53	0:0	10	p_src
op	37:58	0:0	10	[
water	37:59	0:0	10	i_v_offset
op	37:69	0:0	10	]
op	37:71	0:0	10	-
water	37:73	0:0	10	0
water	37:74	0:0	10	x80
arg	38:27	38:31	9	refu
water	38:27	0:0	10	refu
arg	38:33	38:37	9	refv
water	38:33	0:0	10	refv
arg	38:39	38:48	9	reflength
water	38:39	0:0	10	reflength
arg	39:27	39:37	9	i_satthres
water	39:27	0:0	10	i_satthres
arg	39:39	39:50	9	i_simthres
water	39:39	0:0	10	i_simthres
stmts	40:12	43:12	7	
water	40:12	0:0	8	{
water	41:16	0:0	8	p_dst
op	41:21	0:0	8	[
water	41:22	0:0	8	i_u_offset
op	41:32	0:0	8	]
op	41:34	0:0	8	=
water	41:36	0:0	8	p_src
op	41:41	0:0	8	[
water	41:42	0:0	8	i_u_offset
op	41:52	0:0	8	]
water	41:53	0:0	8	;
water	42:16	0:0	8	p_dst
op	42:21	0:0	8	[
water	42:22	0:0	8	i_v_offset
op	42:32	0:0	8	]
op	42:34	0:0	8	=
water	42:36	0:0	8	p_src
op	42:41	0:0	8	[
water	42:42	0:0	8	i_v_offset
op	42:52	0:0	8	]
water	42:53	0:0	8	;
water	43:12	0:0	8	}
else	44:12	48:12	6
stmts	45:12	48:12	7	
water	45:12	0:0	8	{
water	46:16	0:0	8	p_dst
op	46:21	0:0	8	[
water	46:22	0:0	8	i_u_offset
op	46:32	0:0	8	]
op	46:34	0:0	8	=
water	46:36	0:0	8	0
water	46:37	0:0	8	x80
water	46:40	0:0	8	;
water	47:16	0:0	8	p_dst
op	47:21	0:0	8	[
water	47:22	0:0	8	i_v_offset
op	47:32	0:0	8	]
op	47:34	0:0	8	=
water	47:36	0:0	8	0
water	47:37	0:0	8	x80
water	47:40	0:0	8	;
water	48:12	0:0	8	}
water	49:12	0:0	6	p_dst
op	49:18	0:0	6	+=
water	49:21	0:0	6	4
water	49:22	0:0	6	;
water	50:12	0:0	6	p_src
op	50:18	0:0	6	+=
water	50:21	0:0	6	4
water	50:22	0:0	6	;
water	51:8	0:0	6	}
water	52:4	0:0	4	}
return	53:4	53:48	2	CopyInfoAndRelease(p_outpic,p_pic)
call	53:11	53:47	3	CopyInfoAndRelease
arg	53:31	53:39	4	p_outpic
water	53:31	0:0	5	p_outpic
arg	53:41	53:47	4	p_pic
water	53:41	0:0	5	p_pic

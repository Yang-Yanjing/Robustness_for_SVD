func	2:0	82:0	0	static int	Control
params	2:19	0:0	1	
param	2:20	2:34	2	demux_t *	demux
param	2:36	2:45	2	int	query
param	2:47	2:59	2	va_list	args
stmnts	0:0	81:23	1	
decl	4:4	4:35	2	demux_sys_t	*sys
op	4:21	0:0	2	=
water	4:23	0:0	2	demux
op	4:28	0:0	2	->
water	4:30	0:0	2	p_sys
switch	5:4	80:4	2	(query)
cond	5:12	5:12	3	query
water	5:12	0:0	4	query
stmts	6:4	80:4	3	
water	6:4	0:0	4	{
label	7:8	7:31	4	case DEMUX_GET_POSITION :
water	8:8	0:0	4	{
decl	9:12	9:49	4	double	*pos
op	9:24	0:0	4	=
call	9:26	9:48	5	va_arg
arg	9:34	9:38	6	args
water	9:34	0:0	7	args
arg	9:40	9:48	6	double*
water	9:40	0:0	7	double
op	9:47	0:0	7	*
if	10:12	12:25	4	(unlikely (sys -> track_id >= sys -> titlec ) || ( sys -> titlev [ sys -> track_id ] -> i_length == 0 ))
cond	10:16	11:58	5	unlikely (sys -> track_id >= sys -> titlec ) || ( sys -> titlev [ sys -> track_id ] -> i_length == 0 )
call	10:16	10:53	6	unlikely
arg	10:25	10:53	7	sys->track_id>=sys->titlec
water	10:25	0:0	8	sys
op	10:28	0:0	8	->
water	10:30	0:0	8	track_id
op	10:39	0:0	8	>=
water	10:42	0:0	8	sys
op	10:45	0:0	8	->
water	10:47	0:0	8	titlec
op	11:13	0:0	6	||
water	11:16	0:0	6	(
water	11:17	0:0	6	sys
op	11:20	0:0	6	->
water	11:22	0:0	6	titlev
op	11:28	0:0	6	[
water	11:29	0:0	6	sys
op	11:32	0:0	6	->
water	11:34	0:0	6	track_id
op	11:42	0:0	6	]
op	11:43	0:0	6	->
water	11:45	0:0	6	i_length
op	11:54	0:0	6	==
water	11:57	0:0	6	0
water	11:58	0:0	6	)
stmts	12:16	12:25	5	
op	12:16	0:0	6	*
water	12:17	0:0	6	pos
op	12:21	0:0	6	=
water	12:23	0:0	6	0
op	12:24	0:0	6	.
water	12:25	0:0	6	;
else	13:12	18:12	4
stmts	14:12	18:12	5	
water	14:12	0:0	6	{
decl	15:16	15:48	6	int	offset
op	15:27	0:0	6	=
call	15:29	15:47	7	gme_tell
arg	15:39	15:47	8	sys->emu
water	15:39	0:0	9	sys
op	15:42	0:0	9	->
water	15:44	0:0	9	emu
op	16:16	0:0	6	*
water	16:17	0:0	6	pos
op	16:21	0:0	6	=
water	16:23	0:0	6	(
water	16:24	0:0	6	double
water	16:30	0:0	6	)
water	16:31	0:0	6	offset
op	17:20	0:0	6	/
call	17:22	17:74	6	(double)
arg	17:31	17:74	7	sys->titlev[sys->track_id]->i_length/1000
water	17:31	0:0	8	sys
op	17:34	0:0	8	->
water	17:36	0:0	8	titlev
op	17:42	0:0	8	[
water	17:43	0:0	8	sys
op	17:46	0:0	8	->
water	17:48	0:0	8	track_id
op	17:56	0:0	8	]
op	17:57	0:0	8	->
water	17:59	0:0	8	i_length
op	17:68	0:0	8	/
water	17:70	0:0	8	1000
water	17:75	0:0	6	;
water	18:12	0:0	6	}
return	19:12	19:30	4	VLC_SUCCESS
water	19:19	0:0	5	VLC_SUCCESS
water	20:8	0:0	4	}
label	21:8	21:31	4	case DEMUX_SET_POSITION :
water	22:8	0:0	4	{
decl	23:12	23:46	4	double	pos
op	23:23	0:0	4	=
call	23:25	23:45	5	va_arg
arg	23:33	23:37	6	args
water	23:33	0:0	7	args
arg	23:39	23:45	6	double
water	23:39	0:0	7	double
if	24:12	26:21	4	(unlikely (sys -> track_id >= sys -> titlec ) || ( sys -> titlev [ sys -> track_id ] -> i_length == 0 ))
cond	24:16	25:58	5	unlikely (sys -> track_id >= sys -> titlec ) || ( sys -> titlev [ sys -> track_id ] -> i_length == 0 )
call	24:16	24:53	6	unlikely
arg	24:25	24:53	7	sys->track_id>=sys->titlec
water	24:25	0:0	8	sys
op	24:28	0:0	8	->
water	24:30	0:0	8	track_id
op	24:39	0:0	8	>=
water	24:42	0:0	8	sys
op	24:45	0:0	8	->
water	24:47	0:0	8	titlec
op	25:13	0:0	6	||
water	25:16	0:0	6	(
water	25:17	0:0	6	sys
op	25:20	0:0	6	->
water	25:22	0:0	6	titlev
op	25:28	0:0	6	[
water	25:29	0:0	6	sys
op	25:32	0:0	6	->
water	25:34	0:0	6	track_id
op	25:42	0:0	6	]
op	25:43	0:0	6	->
water	25:45	0:0	6	i_length
op	25:54	0:0	6	==
water	25:57	0:0	6	0
water	25:58	0:0	6	)
stmts	26:16	26:21	5	
break	26:16	26:21	6	
decl	27:12	27:74	4	int	seek
op	27:21	0:0	4	=
water	27:23	0:0	4	(
water	27:24	0:0	4	sys
op	27:27	0:0	4	->
water	27:29	0:0	4	titlev
op	27:35	0:0	4	[
water	27:36	0:0	4	sys
op	27:39	0:0	4	->
water	27:41	0:0	4	track_id
op	27:49	0:0	4	]
op	27:50	0:0	4	->
water	27:52	0:0	4	i_length
op	27:61	0:0	4	/
water	27:63	0:0	4	1000
water	27:67	0:0	4	)
op	27:69	0:0	4	*
water	27:71	0:0	4	pos
if	28:12	29:21	4	(gme_seek (sys -> emu ,seek ))
cond	28:16	28:40	5	gme_seek (sys -> emu ,seek )
call	28:16	28:40	6	gme_seek
arg	28:26	28:34	7	sys->emu
water	28:26	0:0	8	sys
op	28:29	0:0	8	->
water	28:31	0:0	8	emu
arg	28:36	28:40	7	seek
water	28:36	0:0	8	seek
stmts	29:16	29:21	5	
break	29:16	29:21	6	
return	30:12	30:30	4	VLC_SUCCESS
water	30:19	0:0	5	VLC_SUCCESS
water	31:8	0:0	4	}
label	32:8	32:29	4	case DEMUX_GET_LENGTH :
water	33:8	0:0	4	{
decl	34:12	34:49	4	int64_t	*v
op	34:23	0:0	4	=
call	34:25	34:48	5	va_arg
arg	34:33	34:37	6	args
water	34:33	0:0	7	args
arg	34:39	34:48	6	int64_t*
water	34:39	0:0	7	int64_t
op	34:47	0:0	7	*
if	35:12	37:21	4	(unlikely (sys -> track_id >= sys -> titlec ) || ( sys -> titlev [ sys -> track_id ] -> i_length == 0 ))
cond	35:16	36:58	5	unlikely (sys -> track_id >= sys -> titlec ) || ( sys -> titlev [ sys -> track_id ] -> i_length == 0 )
call	35:16	35:53	6	unlikely
arg	35:25	35:53	7	sys->track_id>=sys->titlec
water	35:25	0:0	8	sys
op	35:28	0:0	8	->
water	35:30	0:0	8	track_id
op	35:39	0:0	8	>=
water	35:42	0:0	8	sys
op	35:45	0:0	8	->
water	35:47	0:0	8	titlec
op	36:13	0:0	6	||
water	36:16	0:0	6	(
water	36:17	0:0	6	sys
op	36:20	0:0	6	->
water	36:22	0:0	6	titlev
op	36:28	0:0	6	[
water	36:29	0:0	6	sys
op	36:32	0:0	6	->
water	36:34	0:0	6	track_id
op	36:42	0:0	6	]
op	36:43	0:0	6	->
water	36:45	0:0	6	i_length
op	36:54	0:0	6	==
water	36:57	0:0	6	0
water	36:58	0:0	6	)
stmts	37:16	37:21	5	
break	37:16	37:21	6	
op	38:12	0:0	4	*
water	38:13	0:0	4	v
op	38:15	0:0	4	=
water	38:17	0:0	4	sys
op	38:20	0:0	4	->
water	38:22	0:0	4	titlev
op	38:28	0:0	4	[
water	38:29	0:0	4	sys
op	38:32	0:0	4	->
water	38:34	0:0	4	track_id
op	38:42	0:0	4	]
op	38:43	0:0	4	->
water	38:45	0:0	4	i_length
water	38:53	0:0	4	;
return	39:12	39:30	4	VLC_SUCCESS
water	39:19	0:0	5	VLC_SUCCESS
water	40:8	0:0	4	}
label	41:8	41:27	4	case DEMUX_GET_TIME :
water	42:8	0:0	4	{
decl	43:12	43:49	4	int64_t	*v
op	43:23	0:0	4	=
call	43:25	43:48	5	va_arg
arg	43:33	43:37	6	args
water	43:33	0:0	7	args
arg	43:39	43:48	6	int64_t*
water	43:39	0:0	7	int64_t
op	43:47	0:0	7	*
op	44:12	0:0	4	*
water	44:13	0:0	4	v
op	44:15	0:0	4	=
call	44:17	44:35	4	gme_tell
arg	44:27	44:35	5	sys->emu
water	44:27	0:0	6	sys
op	44:30	0:0	6	->
water	44:32	0:0	6	emu
call	44:37	44:51	4	*INT64_C
arg	44:47	44:51	5	1000
water	44:47	0:0	6	1000
water	44:52	0:0	4	;
return	45:12	45:30	4	VLC_SUCCESS
water	45:19	0:0	5	VLC_SUCCESS
water	46:8	0:0	4	}
label	47:8	47:27	4	case DEMUX_SET_TIME :
water	48:8	0:0	4	{
decl	49:12	49:53	4	int64_t	v
op	49:22	0:0	4	=
call	49:24	49:45	5	va_arg
arg	49:32	49:36	6	args
water	49:32	0:0	7	args
arg	49:38	49:45	6	int64_t
water	49:38	0:0	7	int64_t
op	49:47	0:0	4	/
water	49:49	0:0	4	1000
if	50:12	51:21	4	(v > INT_MAX ||gme_seek (sys -> emu ,v ))
cond	50:16	50:52	5	v > INT_MAX ||gme_seek (sys -> emu ,v )
water	50:16	0:0	6	v
op	50:18	0:0	6	>
water	50:20	0:0	6	INT_MAX
op	50:28	0:0	6	||
call	50:31	50:52	6	gme_seek
arg	50:41	50:49	7	sys->emu
water	50:41	0:0	8	sys
op	50:44	0:0	8	->
water	50:46	0:0	8	emu
arg	50:51	50:52	7	v
water	50:51	0:0	8	v
stmts	51:16	51:21	5	
break	51:16	51:21	6	
return	52:12	52:30	4	VLC_SUCCESS
water	52:19	0:0	5	VLC_SUCCESS
water	53:8	0:0	4	}
label	54:8	54:33	4	case DEMUX_GET_TITLE_INFO :
water	55:8	0:0	4	{
decl	56:12	56:70	4	input_title_t	***titlev
op	56:36	0:0	4	=
call	56:38	56:69	5	va_arg
arg	56:46	56:50	6	args
water	56:46	0:0	7	args
arg	56:52	56:69	6	input_title_t***
water	56:52	0:0	7	input_title_t
op	56:66	0:0	7	*
op	56:67	0:0	7	*
op	56:68	0:0	7	*
decl	57:12	57:46	4	int	*titlec
op	57:24	0:0	4	=
call	57:26	57:45	5	va_arg
arg	57:34	57:38	6	args
water	57:34	0:0	7	args
arg	57:40	57:45	6	int*
water	57:40	0:0	7	int
op	57:44	0:0	7	*
op	58:12	0:0	4	*
water	58:13	0:0	4	(
call	58:14	58:33	4	va_arg
arg	58:22	58:26	5	args
water	58:22	0:0	6	args
arg	58:28	58:33	5	int*
water	58:28	0:0	6	int
op	58:32	0:0	6	*
water	58:34	0:0	4	)
op	58:36	0:0	4	=
water	58:38	0:0	4	0
water	58:39	0:0	4	;
op	59:12	0:0	4	*
water	59:13	0:0	4	(
call	59:14	59:33	4	va_arg
arg	59:22	59:26	5	args
water	59:22	0:0	6	args
arg	59:28	59:33	5	int*
water	59:28	0:0	6	int
op	59:32	0:0	6	*
water	59:34	0:0	4	)
op	59:36	0:0	4	=
water	59:38	0:0	4	0
water	59:39	0:0	4	;
water	60:12	0:0	4	unsigned
water	60:21	0:0	4	n
op	60:23	0:0	4	=
water	60:25	0:0	4	sys
op	60:28	0:0	4	->
water	60:30	0:0	4	titlec
water	60:36	0:0	4	;
op	61:12	0:0	4	*
water	61:13	0:0	4	titlev
op	61:20	0:0	4	=
call	61:22	61:51	4	malloc
arg	61:30	61:51	5	sizeof(**titlev)*n
op	61:30	0:0	6	sizeof
water	61:37	0:0	6	(
op	61:38	0:0	6	*
op	61:39	0:0	6	*
water	61:40	0:0	6	titlev
water	61:46	0:0	6	)
op	61:48	0:0	6	*
water	61:50	0:0	6	n
water	61:52	0:0	4	;
if	62:12	63:21	4	(unlikely (* titlev == NULL ))
cond	62:16	62:40	5	unlikely (* titlev == NULL )
call	62:16	62:40	6	unlikely
arg	62:25	62:40	7	*titlev==NULL
op	62:25	0:0	8	*
water	62:26	0:0	8	titlev
op	62:33	0:0	8	==
water	62:36	0:0	8	NULL
stmts	63:16	63:21	5	
water	63:16	0:0	6	n
op	63:18	0:0	6	=
water	63:20	0:0	6	0
water	63:21	0:0	6	;
op	64:12	0:0	4	*
water	64:13	0:0	4	titlec
op	64:20	0:0	4	=
water	64:22	0:0	4	n
water	64:23	0:0	4	;
for	65:12	66:73	4	(unsigned i = 0 ;i < n;i ++)
forinit	65:17	65:31	5	unsigned i = 0 ;
water	65:17	0:0	6	unsigned
water	65:26	0:0	6	i
op	65:28	0:0	6	=
water	65:30	0:0	6	0
water	65:31	0:0	6	;
cond	65:33	65:37	5	i < n
water	65:33	0:0	6	i
op	65:35	0:0	6	<
water	65:37	0:0	6	n
forexpr	65:40	65:41	5	i ++
water	65:40	0:0	6	i
op	65:41	0:0	6	++
stmts	66:16	66:73	5	
water	66:16	0:0	6	(
op	66:17	0:0	6	*
water	66:18	0:0	6	titlev
water	66:24	0:0	6	)
op	66:25	0:0	6	[
water	66:26	0:0	6	i
op	66:27	0:0	6	]
op	66:29	0:0	6	=
call	66:31	66:72	6	vlc_input_title_Duplicate
arg	66:58	66:72	7	sys->titlev[i]
water	66:58	0:0	8	sys
op	66:61	0:0	8	->
water	66:63	0:0	8	titlev
op	66:69	0:0	8	[
water	66:70	0:0	8	i
op	66:71	0:0	8	]
water	66:73	0:0	6	;
return	67:12	67:30	4	VLC_SUCCESS
water	67:19	0:0	5	VLC_SUCCESS
water	68:8	0:0	4	}
label	69:8	69:28	4	case DEMUX_SET_TITLE :
water	70:8	0:0	4	{
decl	71:12	71:45	4	int	track_id
op	71:25	0:0	4	=
call	71:27	71:44	5	va_arg
arg	71:35	71:39	6	args
water	71:35	0:0	7	args
arg	71:41	71:44	6	int
water	71:41	0:0	7	int
if	72:12	73:21	4	(track_id >=gme_track_count (sys -> emu ))
cond	72:16	72:53	5	track_id >=gme_track_count (sys -> emu )
water	72:16	0:0	6	track_id
op	72:25	0:0	6	>=
call	72:28	72:53	6	gme_track_count
arg	72:45	72:53	7	sys->emu
water	72:45	0:0	8	sys
op	72:48	0:0	8	->
water	72:50	0:0	8	emu
stmts	73:16	73:21	5	
break	73:16	73:21	6	
call	74:12	74:47	4	gme_start_track
arg	74:29	74:37	5	sys->emu
water	74:29	0:0	6	sys
op	74:32	0:0	6	->
water	74:34	0:0	6	emu
arg	74:39	74:47	5	track_id
water	74:39	0:0	6	track_id
water	74:48	0:0	4	;
water	75:12	0:0	4	demux
op	75:17	0:0	4	->
water	75:19	0:0	4	info
op	75:23	0:0	4	.
water	75:24	0:0	4	i_update
op	75:33	0:0	4	|=
water	75:36	0:0	4	INPUT_UPDATE_TITLE
water	75:54	0:0	4	;
water	76:12	0:0	4	demux
op	76:17	0:0	4	->
water	76:19	0:0	4	info
op	76:23	0:0	4	.
water	76:24	0:0	4	i_title
op	76:32	0:0	4	=
water	76:34	0:0	4	track_id
water	76:42	0:0	4	;
water	77:12	0:0	4	sys
op	77:15	0:0	4	->
water	77:17	0:0	4	track_id
op	77:26	0:0	4	=
water	77:28	0:0	4	track_id
water	77:36	0:0	4	;
return	78:12	78:30	4	VLC_SUCCESS
water	78:19	0:0	5	VLC_SUCCESS
water	79:8	0:0	4	}
water	80:4	0:0	4	}
return	81:4	81:23	2	VLC_EGENERIC
water	81:11	0:0	3	VLC_EGENERIC

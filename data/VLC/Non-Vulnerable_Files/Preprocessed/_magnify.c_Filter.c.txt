func	2:0	100:0	0	static picture_t *	Filter
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:63	2	picture_t *	p_pic
stmnts	0:0	99:48	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:23	2	picture_t	*p_outpic
decl	6:4	6:16	2	int	v_w
water	6:11	0:0	2	,
decl	6:4	6:16	2	int	v_h
decl	7:4	7:26	2	picture_t	*p_converted
decl	8:4	8:18	2	plane_t	*p_oyp
decl	9:4	9:15	2	int	i_plane
water	10:4	0:0	2	p_outpic
op	10:13	0:0	2	=
call	10:15	10:43	2	filter_NewPicture
arg	10:34	10:43	3	p_filter
water	10:34	0:0	4	p_filter
water	10:44	0:0	2	;
if	11:4	15:4	2	(! p_outpic)
cond	11:8	11:9	3	! p_outpic
op	11:8	0:0	4	!
water	11:9	0:0	4	p_outpic
stmts	12:4	15:4	3	
water	12:4	0:0	4	{
call	13:8	13:31	4	picture_Release
arg	13:25	13:31	5	p_pic
water	13:25	0:0	6	p_pic
water	13:32	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
decl	17:4	17:43	2	const bool	b_visible
op	17:25	0:0	2	=
water	17:27	0:0	2	p_sys
op	17:32	0:0	2	->
water	17:34	0:0	2	b_visible
decl	18:4	18:30	2	const int	o_x
op	18:18	0:0	2	=
water	18:20	0:0	2	p_sys
op	18:25	0:0	2	->
water	18:27	0:0	2	i_x
decl	19:4	19:30	2	const int	o_y
op	19:18	0:0	2	=
water	19:20	0:0	2	p_sys
op	19:25	0:0	2	->
water	19:27	0:0	2	i_y
decl	20:4	20:36	2	const int	o_zoom
op	20:21	0:0	2	=
water	20:23	0:0	2	p_sys
op	20:28	0:0	2	->
water	20:30	0:0	2	i_zoom
if	22:4	43:4	2	(o_zoom != ZOOM_FACTOR)
cond	22:8	22:18	3	o_zoom != ZOOM_FACTOR
water	22:8	0:0	4	o_zoom
op	22:15	0:0	4	!=
water	22:18	0:0	4	ZOOM_FACTOR
stmts	23:4	43:4	3	
water	23:4	0:0	4	{
decl	24:8	24:29	4	video_format_t	fmt_in
decl	25:8	25:30	4	video_format_t	fmt_out
decl	26:8	26:22	4	picture_t	crop
water	27:8	0:0	4	crop
op	27:13	0:0	4	=
op	27:15	0:0	4	*
water	27:16	0:0	4	p_pic
water	27:21	0:0	4	;
for	28:8	33:8	4	(i_plane = 0 ;i_plane < p_pic -> i_planes;i_plane ++)
forinit	28:13	28:24	5	i_plane = 0 ;
water	28:13	0:0	6	i_plane
op	28:21	0:0	6	=
water	28:23	0:0	6	0
water	28:24	0:0	6	;
cond	28:26	28:43	5	i_plane < p_pic -> i_planes
water	28:26	0:0	6	i_plane
op	28:34	0:0	6	<
water	28:36	0:0	6	p_pic
op	28:41	0:0	6	->
water	28:43	0:0	6	i_planes
forexpr	28:53	28:60	5	i_plane ++
water	28:53	0:0	6	i_plane
op	28:60	0:0	6	++
stmts	29:8	33:8	5	
water	29:8	0:0	6	{
decl	30:12	30:94	6	const int	o_yp
op	30:27	0:0	6	=
water	30:29	0:0	6	o_y
op	30:33	0:0	6	*
water	30:35	0:0	6	p_outpic
op	30:43	0:0	6	->
water	30:45	0:0	6	p
op	30:46	0:0	6	[
water	30:47	0:0	6	i_plane
op	30:54	0:0	6	]
op	30:55	0:0	6	.
water	30:56	0:0	6	i_lines
op	30:64	0:0	6	/
water	30:66	0:0	6	p_outpic
op	30:74	0:0	6	->
water	30:76	0:0	6	p
op	30:77	0:0	6	[
water	30:78	0:0	6	Y_PLANE
op	30:85	0:0	6	]
op	30:86	0:0	6	.
water	30:87	0:0	6	i_lines
decl	31:12	31:94	6	const int	o_xp
op	31:27	0:0	6	=
water	31:29	0:0	6	o_x
op	31:33	0:0	6	*
water	31:35	0:0	6	p_outpic
op	31:43	0:0	6	->
water	31:45	0:0	6	p
op	31:46	0:0	6	[
water	31:47	0:0	6	i_plane
op	31:54	0:0	6	]
op	31:55	0:0	6	.
water	31:56	0:0	6	i_pitch
op	31:64	0:0	6	/
water	31:66	0:0	6	p_outpic
op	31:74	0:0	6	->
water	31:76	0:0	6	p
op	31:77	0:0	6	[
water	31:78	0:0	6	Y_PLANE
op	31:85	0:0	6	]
op	31:86	0:0	6	.
water	31:87	0:0	6	i_pitch
water	32:12	0:0	6	crop
op	32:16	0:0	6	.
water	32:17	0:0	6	p
op	32:18	0:0	6	[
water	32:19	0:0	6	i_plane
op	32:26	0:0	6	]
op	32:27	0:0	6	.
water	32:28	0:0	6	p_pixels
op	32:37	0:0	6	+=
water	32:40	0:0	6	o_yp
op	32:45	0:0	6	*
water	32:47	0:0	6	p_pic
op	32:52	0:0	6	->
water	32:54	0:0	6	p
op	32:55	0:0	6	[
water	32:56	0:0	6	i_plane
op	32:63	0:0	6	]
op	32:64	0:0	6	.
water	32:65	0:0	6	i_pitch
op	32:73	0:0	6	+
water	32:75	0:0	6	o_xp
water	32:79	0:0	6	;
water	33:8	0:0	6	}
water	35:8	0:0	4	fmt_in
op	35:15	0:0	4	=
water	35:17	0:0	4	p_filter
op	35:25	0:0	4	->
water	35:27	0:0	4	fmt_in
op	35:33	0:0	4	.
water	35:34	0:0	4	video
water	35:39	0:0	4	;
water	36:8	0:0	4	fmt_in
op	36:14	0:0	4	.
water	36:15	0:0	4	i_width
op	36:24	0:0	4	=
water	36:26	0:0	4	fmt_in
op	36:32	0:0	4	.
water	36:33	0:0	4	i_visible_width
op	36:50	0:0	4	=
water	36:52	0:0	4	(
water	36:53	0:0	4	fmt_in
op	36:59	0:0	4	.
water	36:60	0:0	4	i_width
op	36:69	0:0	4	*
water	36:71	0:0	4	ZOOM_FACTOR
op	36:83	0:0	4	/
water	36:85	0:0	4	o_zoom
water	36:91	0:0	4	)
op	36:93	0:0	4	&
water	36:95	0:0	4	~1
water	36:97	0:0	4	;
water	37:8	0:0	4	fmt_in
op	37:14	0:0	4	.
water	37:15	0:0	4	i_height
op	37:24	0:0	4	=
water	37:26	0:0	4	fmt_in
op	37:32	0:0	4	.
water	37:33	0:0	4	i_visible_height
op	37:50	0:0	4	=
water	37:52	0:0	4	(
water	37:53	0:0	4	fmt_in
op	37:59	0:0	4	.
water	37:60	0:0	4	i_height
op	37:69	0:0	4	*
water	37:71	0:0	4	ZOOM_FACTOR
op	37:83	0:0	4	/
water	37:85	0:0	4	o_zoom
water	37:91	0:0	4	)
op	37:93	0:0	4	&
water	37:95	0:0	4	~1
water	37:97	0:0	4	;
water	39:8	0:0	4	fmt_out
op	39:16	0:0	4	=
water	39:18	0:0	4	p_filter
op	39:26	0:0	4	->
water	39:28	0:0	4	fmt_out
op	39:35	0:0	4	.
water	39:36	0:0	4	video
water	39:41	0:0	4	;
water	40:8	0:0	4	p_converted
op	40:20	0:0	4	=
call	40:22	40:78	4	image_Convert
arg	40:37	40:51	5	p_sys->p_image
water	40:37	0:0	6	p_sys
op	40:42	0:0	6	->
water	40:44	0:0	6	p_image
arg	40:53	40:58	5	&crop
op	40:53	0:0	6	&
water	40:54	0:0	6	crop
arg	40:60	40:67	5	&fmt_in
op	40:60	0:0	6	&
water	40:61	0:0	6	fmt_in
arg	40:69	40:78	5	&fmt_out
op	40:69	0:0	6	&
water	40:70	0:0	6	fmt_out
water	40:79	0:0	4	;
call	41:8	41:50	4	picture_CopyPixels
arg	41:28	41:36	5	p_outpic
water	41:28	0:0	6	p_outpic
arg	41:38	41:50	5	p_converted
water	41:38	0:0	6	p_converted
water	41:51	0:0	4	;
call	42:8	42:37	4	picture_Release
arg	42:25	42:37	5	p_converted
water	42:25	0:0	6	p_converted
water	42:38	0:0	4	;
water	43:4	0:0	4	}
else	44:4	47:4	2
stmts	45:4	47:4	3	
water	45:4	0:0	4	{
call	46:8	46:44	4	picture_CopyPixels
arg	46:28	46:36	5	p_outpic
water	46:28	0:0	6	p_outpic
arg	46:38	46:44	5	p_pic
water	46:38	0:0	6	p_pic
water	46:45	0:0	4	;
water	47:4	0:0	4	}
water	49:4	0:0	2	p_oyp
op	49:10	0:0	2	=
op	49:12	0:0	2	&
water	49:13	0:0	2	p_outpic
op	49:21	0:0	2	->
water	49:23	0:0	2	p
op	49:24	0:0	2	[
water	49:25	0:0	2	Y_PLANE
op	49:32	0:0	2	]
water	49:33	0:0	2	;
if	50:4	71:4	2	(b_visible)
cond	50:8	50:8	3	b_visible
water	50:8	0:0	4	b_visible
stmts	51:4	71:4	3	
water	51:4	0:0	4	{
decl	52:8	52:30	4	video_format_t	fmt_out
water	54:8	0:0	4	fmt_out
op	54:16	0:0	4	=
water	54:18	0:0	4	p_filter
op	54:26	0:0	4	->
water	54:28	0:0	4	fmt_out
op	54:35	0:0	4	.
water	54:36	0:0	4	video
water	54:41	0:0	4	;
water	55:8	0:0	4	fmt_out
op	55:15	0:0	4	.
water	55:16	0:0	4	i_width
op	55:25	0:0	4	=
water	55:27	0:0	4	fmt_out
op	55:34	0:0	4	.
water	55:35	0:0	4	i_visible_width
op	55:52	0:0	4	=
water	55:54	0:0	4	(
water	55:55	0:0	4	fmt_out
op	55:62	0:0	4	.
water	55:63	0:0	4	i_width
op	55:71	0:0	4	/
water	55:72	0:0	4	VIS_ZOOM
water	55:80	0:0	4	)
op	55:82	0:0	4	&
water	55:84	0:0	4	~1
water	55:86	0:0	4	;
water	56:8	0:0	4	fmt_out
op	56:15	0:0	4	.
water	56:16	0:0	4	i_height
op	56:25	0:0	4	=
water	56:27	0:0	4	fmt_out
op	56:34	0:0	4	.
water	56:35	0:0	4	i_visible_height
op	56:52	0:0	4	=
water	56:54	0:0	4	(
water	56:55	0:0	4	fmt_out
op	56:62	0:0	4	.
water	56:63	0:0	4	i_height
op	56:71	0:0	4	/
water	56:72	0:0	4	VIS_ZOOM
water	56:80	0:0	4	)
op	56:82	0:0	4	&
water	56:84	0:0	4	~1
water	56:86	0:0	4	;
water	57:8	0:0	4	p_converted
op	57:20	0:0	4	=
call	57:22	58:62	4	image_Convert
arg	57:37	57:51	5	p_sys->p_image
water	57:37	0:0	6	p_sys
op	57:42	0:0	6	->
water	57:44	0:0	6	p_image
arg	57:53	57:58	5	p_pic
water	57:53	0:0	6	p_pic
arg	58:37	58:51	5	&p_pic->format
op	58:37	0:0	6	&
water	58:38	0:0	6	p_pic
op	58:43	0:0	6	->
water	58:45	0:0	6	format
arg	58:53	58:62	5	&fmt_out
op	58:53	0:0	6	&
water	58:54	0:0	6	fmt_out
water	58:63	0:0	4	;
call	60:8	60:50	4	picture_CopyPixels
arg	60:28	60:36	5	p_outpic
water	60:28	0:0	6	p_outpic
arg	60:38	60:50	5	p_converted
water	60:38	0:0	6	p_converted
water	60:51	0:0	4	;
call	61:8	61:37	4	picture_Release
arg	61:25	61:37	5	p_converted
water	61:25	0:0	6	p_converted
water	61:38	0:0	4	;
water	63:8	0:0	4	v_w
op	63:12	0:0	4	=
call	63:14	63:82	4	__MIN
arg	63:21	63:60	5	fmt_out.i_width*ZOOM_FACTOR/o_zoom
water	63:21	0:0	6	fmt_out
op	63:28	0:0	6	.
water	63:29	0:0	6	i_width
op	63:38	0:0	6	*
water	63:40	0:0	6	ZOOM_FACTOR
op	63:52	0:0	6	/
water	63:54	0:0	6	o_zoom
arg	63:62	63:82	5	fmt_out.i_width-1
water	63:62	0:0	6	fmt_out
op	63:69	0:0	6	.
water	63:70	0:0	6	i_width
op	63:78	0:0	6	-
water	63:80	0:0	6	1
water	63:83	0:0	4	;
water	64:8	0:0	4	v_h
op	64:12	0:0	4	=
call	64:14	64:83	4	__MIN
arg	64:21	64:60	5	fmt_out.i_height*ZOOM_FACTOR/o_zoom
water	64:21	0:0	6	fmt_out
op	64:28	0:0	6	.
water	64:29	0:0	6	i_height
op	64:38	0:0	6	*
water	64:40	0:0	6	ZOOM_FACTOR
op	64:52	0:0	6	/
water	64:54	0:0	6	o_zoom
arg	64:62	64:83	5	fmt_out.i_height-1
water	64:62	0:0	6	fmt_out
op	64:69	0:0	6	.
water	64:70	0:0	6	i_height
op	64:79	0:0	6	-
water	64:81	0:0	6	1
water	64:84	0:0	4	;
call	65:8	68:32	4	DrawRectangle
arg	65:23	65:38	5	p_oyp->p_pixels
water	65:23	0:0	6	p_oyp
op	65:28	0:0	6	->
water	65:30	0:0	6	p_pixels
arg	65:40	65:54	5	p_oyp->i_pitch
water	65:40	0:0	6	p_oyp
op	65:45	0:0	6	->
water	65:47	0:0	6	i_pitch
arg	66:23	66:37	5	p_oyp->i_pitch
water	66:23	0:0	6	p_oyp
op	66:28	0:0	6	->
water	66:30	0:0	6	i_pitch
arg	66:39	66:53	5	p_oyp->i_lines
water	66:39	0:0	6	p_oyp
op	66:44	0:0	6	->
water	66:46	0:0	6	i_lines
arg	67:23	67:35	5	o_x/VIS_ZOOM
water	67:23	0:0	6	o_x
op	67:26	0:0	6	/
water	67:27	0:0	6	VIS_ZOOM
arg	67:37	67:49	5	o_y/VIS_ZOOM
water	67:37	0:0	6	o_y
op	67:40	0:0	6	/
water	67:41	0:0	6	VIS_ZOOM
arg	68:23	68:26	5	v_w
water	68:23	0:0	6	v_w
arg	68:28	68:32	5	v_h
water	68:28	0:0	6	v_h
water	68:33	0:0	4	;
water	70:8	0:0	4	v_h
op	70:12	0:0	4	=
water	70:14	0:0	4	fmt_out
op	70:21	0:0	4	.
water	70:22	0:0	4	i_height
op	70:31	0:0	4	+
water	70:33	0:0	4	1
water	70:34	0:0	4	;
water	71:4	0:0	4	}
else	72:4	75:4	2
stmts	73:4	75:4	3	
water	73:4	0:0	4	{
water	74:8	0:0	4	v_h
op	74:12	0:0	4	=
water	74:14	0:0	4	1
water	74:15	0:0	4	;
water	75:4	0:0	4	}
if	77:4	79:43	2	(b_visible || p_sys -> i_last_activity + p_sys -> i_hide_timeout >mdate ( ))
cond	77:8	77:76	3	b_visible || p_sys -> i_last_activity + p_sys -> i_hide_timeout >mdate ( )
water	77:8	0:0	4	b_visible
op	77:18	0:0	4	||
water	77:21	0:0	4	p_sys
op	77:26	0:0	4	->
water	77:28	0:0	4	i_last_activity
op	77:44	0:0	4	+
water	77:46	0:0	4	p_sys
op	77:51	0:0	4	->
water	77:53	0:0	4	i_hide_timeout
op	77:68	0:0	4	>
call	77:70	77:76	4	mdate
stmts	78:8	79:43	3	
call	78:8	79:42	4	DrawZoomStatus
arg	78:24	78:39	5	p_oyp->p_pixels
water	78:24	0:0	6	p_oyp
op	78:29	0:0	6	->
water	78:31	0:0	6	p_pixels
arg	78:41	78:55	5	p_oyp->i_pitch
water	78:41	0:0	6	p_oyp
op	78:46	0:0	6	->
water	78:48	0:0	6	i_pitch
arg	78:57	78:71	5	p_oyp->i_pitch
water	78:57	0:0	6	p_oyp
op	78:62	0:0	6	->
water	78:64	0:0	6	i_pitch
arg	78:73	78:87	5	p_oyp->i_lines
water	78:73	0:0	6	p_oyp
op	78:78	0:0	6	->
water	78:80	0:0	6	i_lines
arg	79:24	79:25	5	1
water	79:24	0:0	6	1
arg	79:27	79:30	5	v_h
water	79:27	0:0	6	v_h
arg	79:32	79:42	5	b_visible
water	79:32	0:0	6	b_visible
water	79:43	0:0	4	;
if	80:4	98:4	2	(b_visible)
cond	80:8	80:8	3	b_visible
water	80:8	0:0	4	b_visible
stmts	81:4	98:4	3	
water	81:4	0:0	4	{
call	83:8	83:67	4	memset
arg	83:16	83:56	5	p_oyp->p_pixels+(v_h+9)*p_oyp->i_pitch
water	83:16	0:0	6	p_oyp
op	83:21	0:0	6	->
water	83:23	0:0	6	p_pixels
op	83:32	0:0	6	+
water	83:34	0:0	6	(
water	83:35	0:0	6	v_h
op	83:38	0:0	6	+
water	83:39	0:0	6	9
water	83:40	0:0	6	)
op	83:41	0:0	6	*
water	83:42	0:0	6	p_oyp
op	83:47	0:0	6	->
water	83:49	0:0	6	i_pitch
arg	83:58	83:62	5	0xff
water	83:58	0:0	6	0
water	83:59	0:0	6	xff
arg	83:64	83:67	5	41
water	83:64	0:0	6	41
water	83:68	0:0	4	;
for	84:8	97:8	4	( int y = v_h + 10 ;y < v_h + 90;y ++)
forinit	0:0	84:29	5	 int y = v_h + 10 ;
decl	84:13	84:29	6	int	y
op	84:19	0:0	6	=
water	84:21	0:0	6	v_h
op	84:25	0:0	6	+
water	84:27	0:0	6	10
cond	84:31	84:41	5	y < v_h + 90
water	84:31	0:0	6	y
op	84:33	0:0	6	<
water	84:35	0:0	6	v_h
op	84:39	0:0	6	+
water	84:41	0:0	6	90
forexpr	84:45	84:46	5	y ++
water	84:45	0:0	6	y
op	84:46	0:0	6	++
stmts	85:8	97:8	5	
water	85:8	0:0	6	{
decl	86:12	86:38	6	int	i_width
op	86:24	0:0	6	=
water	86:26	0:0	6	v_h
op	86:30	0:0	6	+
water	86:32	0:0	6	90
op	86:35	0:0	6	-
water	86:37	0:0	6	y
water	87:12	0:0	6	i_width
op	87:20	0:0	6	=
water	87:22	0:0	6	i_width
op	87:30	0:0	6	*
water	87:32	0:0	6	i_width
op	87:40	0:0	6	/
water	87:42	0:0	6	160
water	87:45	0:0	6	;
if	88:12	91:12	6	(( 80 - y + v_h ) * ZOOM_FACTOR / 10 < o_zoom)
cond	88:16	88:48	7	( 80 - y + v_h ) * ZOOM_FACTOR / 10 < o_zoom
water	88:16	0:0	8	(
water	88:17	0:0	8	80
op	88:20	0:0	8	-
water	88:22	0:0	8	y
op	88:24	0:0	8	+
water	88:26	0:0	8	v_h
water	88:29	0:0	8	)
op	88:30	0:0	8	*
water	88:31	0:0	8	ZOOM_FACTOR
op	88:42	0:0	8	/
water	88:43	0:0	8	10
op	88:46	0:0	8	<
water	88:48	0:0	8	o_zoom
stmts	89:12	91:12	7	
water	89:12	0:0	8	{
call	90:16	90:74	8	memset
arg	90:24	90:58	9	p_oyp->p_pixels+y*p_oyp->i_pitch
water	90:24	0:0	10	p_oyp
op	90:29	0:0	10	->
water	90:31	0:0	10	p_pixels
op	90:40	0:0	10	+
water	90:42	0:0	10	y
op	90:43	0:0	10	*
water	90:44	0:0	10	p_oyp
op	90:49	0:0	10	->
water	90:51	0:0	10	i_pitch
arg	90:60	90:64	9	0xff
water	90:60	0:0	10	0
water	90:61	0:0	10	xff
arg	90:66	90:74	9	i_width
water	90:66	0:0	10	i_width
water	90:75	0:0	8	;
water	91:12	0:0	8	}
else	92:12	96:12	6
stmts	93:12	96:12	7	
water	93:12	0:0	8	{
water	94:16	0:0	8	p_oyp
op	94:21	0:0	8	->
water	94:23	0:0	8	p_pixels
op	94:31	0:0	8	[
water	94:32	0:0	8	y
op	94:33	0:0	8	*
water	94:34	0:0	8	p_oyp
op	94:39	0:0	8	->
water	94:41	0:0	8	i_pitch
op	94:48	0:0	8	]
op	94:50	0:0	8	=
water	94:52	0:0	8	0
water	94:53	0:0	8	xff
water	94:56	0:0	8	;
water	95:16	0:0	8	p_oyp
op	95:21	0:0	8	->
water	95:23	0:0	8	p_pixels
op	95:31	0:0	8	[
water	95:32	0:0	8	y
op	95:33	0:0	8	*
water	95:34	0:0	8	p_oyp
op	95:39	0:0	8	->
water	95:41	0:0	8	i_pitch
op	95:49	0:0	8	+
water	95:51	0:0	8	i_width
op	95:59	0:0	8	-
water	95:61	0:0	8	1
op	95:62	0:0	8	]
op	95:64	0:0	8	=
water	95:66	0:0	8	0
water	95:67	0:0	8	xff
water	95:70	0:0	8	;
water	96:12	0:0	8	}
water	97:8	0:0	6	}
water	98:4	0:0	4	}
return	99:4	99:48	2	CopyInfoAndRelease(p_outpic,p_pic)
call	99:11	99:47	3	CopyInfoAndRelease
arg	99:31	99:39	4	p_outpic
water	99:31	0:0	5	p_outpic
arg	99:41	99:47	4	p_pic
water	99:41	0:0	5	p_pic

func	2:0	14:0	0	void	demux_Delete
params	2:17	0:0	1	
param	2:19	2:36	2	demux_t *	p_demux
stmnts	0:0	13:26	1	
decl	4:4	4:15	2	stream_t	*s
call	5:4	5:46	2	module_unneed
arg	5:19	5:26	3	p_demux
water	5:19	0:0	4	p_demux
arg	5:28	5:46	3	p_demux->p_module
water	5:28	0:0	4	p_demux
op	5:35	0:0	4	->
water	5:37	0:0	4	p_module
water	5:47	0:0	2	;
call	6:4	6:28	2	free
arg	6:10	6:28	3	p_demux->psz_file
water	6:10	0:0	4	p_demux
op	6:17	0:0	4	->
water	6:19	0:0	4	psz_file
water	6:29	0:0	2	;
call	7:4	7:32	2	free
arg	7:10	7:32	3	p_demux->psz_location
water	7:10	0:0	4	p_demux
op	7:17	0:0	4	->
water	7:19	0:0	4	psz_location
water	7:33	0:0	2	;
call	8:4	8:29	2	free
arg	8:10	8:29	3	p_demux->psz_demux
water	8:10	0:0	4	p_demux
op	8:17	0:0	4	->
water	8:19	0:0	4	psz_demux
water	8:30	0:0	2	;
call	9:4	9:30	2	free
arg	9:10	9:30	3	p_demux->psz_access
water	9:10	0:0	4	p_demux
op	9:17	0:0	4	->
water	9:19	0:0	4	psz_access
water	9:31	0:0	2	;
water	10:4	0:0	2	s
op	10:6	0:0	2	=
water	10:8	0:0	2	p_demux
op	10:15	0:0	2	->
water	10:17	0:0	2	s
water	10:18	0:0	2	;
call	11:4	11:32	2	vlc_object_release
arg	11:24	11:32	3	p_demux
water	11:24	0:0	4	p_demux
water	11:33	0:0	2	;
if	12:4	13:26	2	(s != NULL)
cond	12:8	12:13	3	s != NULL
water	12:8	0:0	4	s
op	12:10	0:0	4	!=
water	12:13	0:0	4	NULL
stmts	13:8	13:26	3	
call	13:8	13:25	4	stream_Delete
arg	13:23	13:25	5	s
water	13:23	0:0	6	s
water	13:26	0:0	4	;

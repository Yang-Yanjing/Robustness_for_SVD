func	2:0	43:0	0	static block_t *	EncodeFrame
params	2:27	0:0	1	
param	2:29	2:45	2	encoder_t *	p_enc
param	2:47	2:64	2	block_t *	p_block
stmnts	4:4	42:18	1	
if	4:4	5:19	2	(! p_block)
cond	4:8	4:9	3	! p_block
op	4:8	0:0	4	!
water	4:9	0:0	4	p_block
stmts	5:8	5:19	3	
return	5:8	5:19	4	NULL
water	5:15	0:0	5	NULL
decl	6:4	6:39	2	encoder_sys_t	*p_sys
op	6:25	0:0	2	=
water	6:27	0:0	2	p_enc
op	6:32	0:0	2	->
water	6:34	0:0	2	p_sys
decl	7:4	7:24	2	block_t	*p_pcm_block
decl	8:4	8:27	2	block_t	*p_chain
op	8:21	0:0	2	=
water	8:23	0:0	2	NULL
decl	9:4	9:69	2	unsigned int	i_samples
op	9:27	0:0	2	=
water	9:29	0:0	2	p_block
op	9:36	0:0	2	->
water	9:38	0:0	2	i_buffer
op	9:47	0:0	2	>>
water	9:50	0:0	2	2
decl	10:4	10:39	2	mtime_t	start_date
op	10:23	0:0	2	=
water	10:25	0:0	2	p_block
op	10:32	0:0	2	->
water	10:34	0:0	2	i_pts
water	11:4	0:0	2	start_date
op	11:15	0:0	2	-=
water	11:18	0:0	2	(
water	11:19	0:0	2	mtime_t
water	11:26	0:0	2	)
water	11:27	0:0	2	i_samples
op	11:37	0:0	2	*
water	11:39	0:0	2	(
water	11:40	0:0	2	mtime_t
water	11:47	0:0	2	)
water	11:48	0:0	2	1000000
op	11:56	0:0	2	/
water	11:58	0:0	2	(
water	11:59	0:0	2	mtime_t
water	11:66	0:0	2	)
water	11:67	0:0	2	p_enc
op	11:72	0:0	2	->
water	11:74	0:0	2	fmt_out
op	11:81	0:0	2	.
water	11:82	0:0	2	audio
op	11:87	0:0	2	.
water	11:88	0:0	2	i_rate
water	11:94	0:0	2	;
call	12:4	12:20	2	VLC_UNUSED
arg	12:15	12:20	3	p_enc
water	12:15	0:0	4	p_enc
water	12:21	0:0	2	;
do	13:4	41:4	2	(p_pcm_block)
cond	41:13	41:13	3	p_pcm_block
water	41:13	0:0	4	p_pcm_block
stmts	13:7	41:4	3	
water	13:7	0:0	4	{
water	14:8	0:0	4	p_pcm_block
op	14:20	0:0	4	=
call	14:22	14:45	4	GetPCM
arg	14:30	14:35	5	p_enc
water	14:30	0:0	6	p_enc
arg	14:37	14:45	5	p_block
water	14:37	0:0	6	p_block
water	14:46	0:0	4	;
if	15:8	16:17	4	(! p_pcm_block)
cond	15:12	15:13	5	! p_pcm_block
op	15:12	0:0	6	!
water	15:13	0:0	6	p_pcm_block
stmts	16:12	16:17	5	
break	16:12	16:17	6	
water	17:8	0:0	4	p_block
op	17:16	0:0	4	=
water	17:18	0:0	4	NULL
water	17:22	0:0	4	;
decl	18:8	18:53	4	int16_t	pcm_planar_buf[SHINE_MAX_SAMPLES*2]
decl	19:8	22:9	4	int16_t	*pcm_planar_buf_chans[2]
op	19:41	0:0	4	=
water	19:43	0:0	4	{
op	20:12	0:0	4	&
water	20:13	0:0	4	pcm_planar_buf
op	20:27	0:0	4	[
water	20:28	0:0	4	0
op	20:29	0:0	4	]
water	20:30	0:0	4	,
op	21:12	0:0	4	&
water	21:13	0:0	4	pcm_planar_buf
op	21:27	0:0	4	[
water	21:28	0:0	4	p_sys
op	21:33	0:0	4	->
water	21:35	0:0	4	samples_per_frame
op	21:52	0:0	4	]
water	21:53	0:0	4	,
water	22:8	0:0	4	}
call	23:8	24:95	4	aout_Deinterleave
arg	23:27	23:41	5	pcm_planar_buf
water	23:27	0:0	6	pcm_planar_buf
arg	23:43	23:64	5	p_pcm_block->p_buffer
water	23:43	0:0	6	p_pcm_block
op	23:54	0:0	6	->
water	23:56	0:0	6	p_buffer
arg	24:16	24:40	5	p_sys->samples_per_frame
water	24:16	0:0	6	p_sys
op	24:21	0:0	6	->
water	24:23	0:0	6	samples_per_frame
arg	24:42	24:72	5	p_enc->fmt_in.audio.i_channels
water	24:42	0:0	6	p_enc
op	24:47	0:0	6	->
water	24:49	0:0	6	fmt_in
op	24:55	0:0	6	.
water	24:56	0:0	6	audio
op	24:61	0:0	6	.
water	24:62	0:0	6	i_channels
arg	24:74	24:95	5	p_enc->fmt_in.i_codec
water	24:74	0:0	6	p_enc
op	24:79	0:0	6	->
water	24:81	0:0	6	fmt_in
op	24:87	0:0	6	.
water	24:88	0:0	6	i_codec
water	24:96	0:0	4	;
decl	25:8	25:20	4	long	written
decl	26:8	26:90	4	unsigned char	*buf
op	26:27	0:0	4	=
call	26:29	26:89	5	shine_encode_buffer
arg	26:49	26:57	6	p_sys->s
water	26:49	0:0	7	p_sys
op	26:54	0:0	7	->
water	26:56	0:0	7	s
arg	26:59	26:79	6	pcm_planar_buf_chans
water	26:59	0:0	7	pcm_planar_buf_chans
arg	26:81	26:89	6	&written
op	26:81	0:0	7	&
water	26:82	0:0	7	written
call	27:8	27:35	4	block_Release
arg	27:23	27:35	5	p_pcm_block
water	27:23	0:0	6	p_pcm_block
water	27:36	0:0	4	;
if	28:8	29:17	4	(written <= 0)
cond	28:12	28:23	5	written <= 0
water	28:12	0:0	6	written
op	28:20	0:0	6	<=
water	28:23	0:0	6	0
stmts	29:12	29:17	5	
break	29:12	29:17	6	
decl	30:8	30:53	4	block_t	*p_mp3_block
op	30:29	0:0	4	=
call	30:31	30:52	5	block_Alloc
arg	30:44	30:52	6	written
water	30:44	0:0	7	written
if	31:8	32:17	4	(! p_mp3_block)
cond	31:12	31:13	5	! p_mp3_block
op	31:12	0:0	6	!
water	31:13	0:0	6	p_mp3_block
stmts	32:12	32:17	5	
break	32:12	32:17	6	
call	33:8	33:52	4	memcpy
arg	33:16	33:37	5	p_mp3_block->p_buffer
water	33:16	0:0	6	p_mp3_block
op	33:27	0:0	6	->
water	33:29	0:0	6	p_buffer
arg	33:39	33:42	5	buf
water	33:39	0:0	6	buf
arg	33:44	33:52	5	written
water	33:44	0:0	6	written
water	33:53	0:0	4	;
water	35:8	0:0	4	p_mp3_block
op	35:19	0:0	4	->
water	35:21	0:0	4	i_length
op	35:30	0:0	4	=
water	35:32	0:0	4	p_sys
op	35:37	0:0	4	->
water	35:39	0:0	4	samples_per_frame
op	35:57	0:0	4	*
water	35:59	0:0	4	1000000
op	35:67	0:0	4	/
water	36:12	0:0	4	p_enc
op	36:17	0:0	4	->
water	36:19	0:0	4	fmt_out
op	36:26	0:0	4	.
water	36:27	0:0	4	audio
op	36:32	0:0	4	.
water	36:33	0:0	4	i_rate
water	36:39	0:0	4	;
water	37:8	0:0	4	start_date
op	37:19	0:0	4	+=
water	37:22	0:0	4	p_mp3_block
op	37:33	0:0	4	->
water	37:35	0:0	4	i_length
water	37:43	0:0	4	;
water	38:8	0:0	4	p_mp3_block
op	38:19	0:0	4	->
water	38:21	0:0	4	i_dts
op	38:27	0:0	4	=
water	38:29	0:0	4	p_mp3_block
op	38:40	0:0	4	->
water	38:42	0:0	4	i_pts
op	38:48	0:0	4	=
water	38:50	0:0	4	start_date
water	38:60	0:0	4	;
water	39:8	0:0	4	p_mp3_block
op	39:19	0:0	4	->
water	39:21	0:0	4	i_nb_samples
op	39:34	0:0	4	=
water	39:36	0:0	4	p_sys
op	39:41	0:0	4	->
water	39:43	0:0	4	samples_per_frame
water	39:60	0:0	4	;
call	40:8	40:49	4	block_ChainAppend
arg	40:27	40:35	5	&p_chain
op	40:27	0:0	6	&
water	40:28	0:0	6	p_chain
arg	40:37	40:49	5	p_mp3_block
water	40:37	0:0	6	p_mp3_block
water	40:50	0:0	4	;
water	41:4	0:0	4	}
water	41:26	0:0	2	;
return	42:4	42:18	2	p_chain
water	42:11	0:0	3	p_chain

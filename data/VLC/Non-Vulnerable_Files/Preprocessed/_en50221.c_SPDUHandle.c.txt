func	2:0	53:0	0	static void	SPDUHandle
params	2:22	0:0	1	
param	2:24	2:37	2	cam_t *	p_cam
param	2:39	2:53	2	uint8_t	i_slot
param	3:24	3:39	2	uint8_t *	p_spdu
param	3:41	3:52	2	int	i_size
stmnts	0:0	52:4	1	
decl	5:4	5:20	2	int	i_session_id
switch	6:4	52:4	2	(p_spdu [ 0 ])
cond	6:13	6:21	3	p_spdu [ 0 ]
water	6:13	0:0	4	p_spdu
op	6:19	0:0	4	[
water	6:20	0:0	4	0
op	6:21	0:0	4	]
stmts	7:4	52:4	3	
water	7:4	0:0	4	{
label	8:4	8:26	4	case ST_SESSION_NUMBER :
if	9:8	10:18	4	(i_size <= 4)
cond	9:13	9:23	5	i_size <= 4
water	9:13	0:0	6	i_size
op	9:20	0:0	6	<=
water	9:23	0:0	6	4
stmts	10:12	10:18	5	
return	10:12	10:18	6	
water	11:8	0:0	4	i_session_id
op	11:21	0:0	4	=
water	11:23	0:0	4	(
water	11:24	0:0	4	(
water	11:25	0:0	4	int
water	11:28	0:0	4	)
water	11:29	0:0	4	p_spdu
op	11:35	0:0	4	[
water	11:36	0:0	4	2
op	11:37	0:0	4	]
op	11:39	0:0	4	<<
water	11:42	0:0	4	8
water	11:43	0:0	4	)
op	11:45	0:0	4	|
water	11:47	0:0	4	p_spdu
op	11:53	0:0	4	[
water	11:54	0:0	4	3
op	11:55	0:0	4	]
water	11:56	0:0	4	;
water	12:8	0:0	4	p_cam
op	12:13	0:0	4	->
water	12:15	0:0	4	p_sessions
op	12:25	0:0	4	[
water	12:26	0:0	4	i_session_id
op	12:39	0:0	4	-
water	12:41	0:0	4	1
op	12:42	0:0	4	]
op	12:43	0:0	4	.
call	12:44	13:78	4	pf_handle
arg	12:55	12:60	5	p_cam
water	12:55	0:0	6	p_cam
arg	12:62	12:74	5	i_session_id
water	12:62	0:0	6	i_session_id
arg	13:55	13:65	5	p_spdu+4
water	13:55	0:0	6	p_spdu
op	13:62	0:0	6	+
water	13:64	0:0	6	4
arg	13:67	13:78	5	i_size-4
water	13:67	0:0	6	i_size
op	13:74	0:0	6	-
water	13:76	0:0	6	4
water	13:79	0:0	4	;
break	14:8	14:13	4	
label	15:4	15:32	4	case ST_OPEN_SESSION_REQUEST :
if	16:8	17:18	4	(i_size != 6 || p_spdu [ 1 ] != 0 x4)
cond	16:13	16:42	5	i_size != 6 || p_spdu [ 1 ] != 0 x4
water	16:13	0:0	6	i_size
op	16:20	0:0	6	!=
water	16:23	0:0	6	6
op	16:25	0:0	6	||
water	16:28	0:0	6	p_spdu
op	16:34	0:0	6	[
water	16:35	0:0	6	1
op	16:36	0:0	6	]
op	16:38	0:0	6	!=
water	16:41	0:0	6	0
water	16:42	0:0	6	x4
stmts	17:12	17:18	5	
return	17:12	17:18	6	
call	18:8	18:51	4	SessionOpen
arg	18:21	18:26	5	p_cam
water	18:21	0:0	6	p_cam
arg	18:28	18:34	5	i_slot
water	18:28	0:0	6	i_slot
arg	18:36	18:42	5	p_spdu
water	18:36	0:0	6	p_spdu
arg	18:44	18:51	5	i_size
water	18:44	0:0	6	i_size
water	18:52	0:0	4	;
break	19:8	19:13	4	
label	20:4	20:35	4	case ST_CREATE_SESSION_RESPONSE :
if	21:8	22:18	4	(i_size != 9 || p_spdu [ 1 ] != 0 x7)
cond	21:13	21:42	5	i_size != 9 || p_spdu [ 1 ] != 0 x7
water	21:13	0:0	6	i_size
op	21:20	0:0	6	!=
water	21:23	0:0	6	9
op	21:25	0:0	6	||
water	21:28	0:0	6	p_spdu
op	21:34	0:0	6	[
water	21:35	0:0	6	1
op	21:36	0:0	6	]
op	21:38	0:0	6	!=
water	21:41	0:0	6	0
water	21:42	0:0	6	x7
stmts	22:12	22:18	5	
return	22:12	22:18	6	
call	23:8	23:61	4	SessionCreateResponse
arg	23:31	23:36	5	p_cam
water	23:31	0:0	6	p_cam
arg	23:38	23:44	5	i_slot
water	23:38	0:0	6	i_slot
arg	23:46	23:52	5	p_spdu
water	23:46	0:0	6	p_spdu
arg	23:54	23:61	5	i_size
water	23:54	0:0	6	i_size
water	23:62	0:0	4	;
break	24:8	24:13	4	
label	25:4	25:33	4	case ST_CLOSE_SESSION_REQUEST :
if	26:8	27:18	4	(i_size != 4 || p_spdu [ 1 ] != 0 x2)
cond	26:13	26:42	5	i_size != 4 || p_spdu [ 1 ] != 0 x2
water	26:13	0:0	6	i_size
op	26:20	0:0	6	!=
water	26:23	0:0	6	4
op	26:25	0:0	6	||
water	26:28	0:0	6	p_spdu
op	26:34	0:0	6	[
water	26:35	0:0	6	1
op	26:36	0:0	6	]
op	26:38	0:0	6	!=
water	26:41	0:0	6	0
water	26:42	0:0	6	x2
stmts	27:12	27:18	5	
return	27:12	27:18	6	
water	28:8	0:0	4	i_session_id
op	28:21	0:0	4	=
water	28:23	0:0	4	(
water	28:24	0:0	4	(
water	28:25	0:0	4	int
water	28:28	0:0	4	)
water	28:29	0:0	4	p_spdu
op	28:35	0:0	4	[
water	28:36	0:0	4	2
op	28:37	0:0	4	]
op	28:39	0:0	4	<<
water	28:42	0:0	4	8
water	28:43	0:0	4	)
op	28:45	0:0	4	|
water	28:47	0:0	4	p_spdu
op	28:53	0:0	4	[
water	28:54	0:0	4	3
op	28:55	0:0	4	]
water	28:56	0:0	4	;
call	29:8	29:42	4	SessionClose
arg	29:22	29:27	5	p_cam
water	29:22	0:0	6	p_cam
arg	29:29	29:42	5	i_session_id
water	29:29	0:0	6	i_session_id
water	29:43	0:0	4	;
break	30:8	30:13	4	
label	31:4	31:34	4	case ST_CLOSE_SESSION_RESPONSE :
if	32:8	33:18	4	(i_size != 5 || p_spdu [ 1 ] != 0 x3)
cond	32:13	32:42	5	i_size != 5 || p_spdu [ 1 ] != 0 x3
water	32:13	0:0	6	i_size
op	32:20	0:0	6	!=
water	32:23	0:0	6	5
op	32:25	0:0	6	||
water	32:28	0:0	6	p_spdu
op	32:34	0:0	6	[
water	32:35	0:0	6	1
op	32:36	0:0	6	]
op	32:38	0:0	6	!=
water	32:41	0:0	6	0
water	32:42	0:0	6	x3
stmts	33:12	33:18	5	
return	33:12	33:18	6	
water	34:8	0:0	4	i_session_id
op	34:21	0:0	4	=
water	34:23	0:0	4	(
water	34:24	0:0	4	(
water	34:25	0:0	4	int
water	34:28	0:0	4	)
water	34:29	0:0	4	p_spdu
op	34:35	0:0	4	[
water	34:36	0:0	4	3
op	34:37	0:0	4	]
op	34:39	0:0	4	<<
water	34:42	0:0	4	8
water	34:43	0:0	4	)
op	34:45	0:0	4	|
water	34:47	0:0	4	p_spdu
op	34:53	0:0	4	[
water	34:54	0:0	4	4
op	34:55	0:0	4	]
water	34:56	0:0	4	;
if	35:8	40:8	4	(p_spdu [ 2 ])
cond	35:13	35:21	5	p_spdu [ 2 ]
water	35:13	0:0	6	p_spdu
op	35:19	0:0	6	[
water	35:20	0:0	6	2
op	35:21	0:0	6	]
stmts	36:8	40:8	5	
water	36:8	0:0	6	{
call	37:12	39:34	6	msg_Err
arg	37:21	37:31	7	p_cam->obj
water	37:21	0:0	8	p_cam
op	37:26	0:0	8	->
water	37:28	0:0	8	obj
arg	38:21	38:68	7	"closing a session which is not allocated (%d)"
water	38:21	0:0	8	"closing a session which is not allocated (%d)"
arg	39:21	39:34	7	i_session_id
water	39:21	0:0	8	i_session_id
water	39:35	0:0	6	;
water	40:8	0:0	6	}
else	41:8	47:8	4
stmts	42:8	47:8	5	
water	42:8	0:0	6	{
if	43:12	45:76	6	(p_cam -> p_sessions [ i_session_id - 1 ] . pf_close != NULL)
cond	43:17	43:65	7	p_cam -> p_sessions [ i_session_id - 1 ] . pf_close != NULL
water	43:17	0:0	8	p_cam
op	43:22	0:0	8	->
water	43:24	0:0	8	p_sessions
op	43:34	0:0	8	[
water	43:35	0:0	8	i_session_id
op	43:48	0:0	8	-
water	43:50	0:0	8	1
op	43:51	0:0	8	]
op	43:52	0:0	8	.
water	43:53	0:0	8	pf_close
op	43:62	0:0	8	!=
water	43:65	0:0	8	NULL
stmts	44:16	45:76	7	
water	44:16	0:0	8	p_cam
op	44:21	0:0	8	->
water	44:23	0:0	8	p_sessions
op	44:33	0:0	8	[
water	44:34	0:0	8	i_session_id
op	44:47	0:0	8	-
water	44:49	0:0	8	1
op	44:50	0:0	8	]
op	44:51	0:0	8	.
call	44:52	45:75	8	pf_close
arg	44:62	44:67	9	p_cam
water	44:62	0:0	10	p_cam
arg	45:62	45:75	9	i_session_id
water	45:62	0:0	10	i_session_id
water	45:76	0:0	8	;
water	46:12	0:0	6	p_cam
op	46:17	0:0	6	->
water	46:19	0:0	6	p_sessions
op	46:29	0:0	6	[
water	46:30	0:0	6	i_session_id
op	46:43	0:0	6	-
water	46:45	0:0	6	1
op	46:46	0:0	6	]
op	46:47	0:0	6	.
water	46:48	0:0	6	i_resource_id
op	46:62	0:0	6	=
water	46:64	0:0	6	0
water	46:65	0:0	6	;
water	47:8	0:0	6	}
break	48:8	48:13	4	
label	49:4	49:11	4	default :
call	50:8	50:76	4	msg_Err
arg	50:17	50:27	5	p_cam->obj
water	50:17	0:0	6	p_cam
op	50:22	0:0	6	->
water	50:24	0:0	6	obj
arg	50:29	50:64	5	"unexpected tag in SPDUHandle (%x)"
water	50:29	0:0	6	"unexpected tag in SPDUHandle (%x)"
arg	50:66	50:76	5	p_spdu[0]
water	50:66	0:0	6	p_spdu
op	50:72	0:0	6	[
water	50:73	0:0	6	0
op	50:74	0:0	6	]
water	50:77	0:0	4	;
break	51:8	51:13	4	
water	52:4	0:0	4	}

func	2:0	55:0	0	static int	rtp_xiph_pack_headers
params	2:32	0:0	1	
param	2:33	2:44	2	size_t	room
param	2:46	2:59	2	void *	p_extra
param	2:61	2:75	2	size_t	i_extra
param	3:33	3:51	2	uint8_t * *	p_buffer
param	3:53	3:69	2	size_t *	i_buffer
param	4:33	4:58	2	uint8_t *	theora_pixel_fmt
stmnts	6:4	54:22	1	
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	packet_size
op	6:24	0:0	2	[
water	6:25	0:0	2	XIPH_MAX_HEADER_COUNT
op	6:46	0:0	2	]
water	6:47	0:0	2	;
decl	7:4	7:39	2	void	*packet[XIPH_MAX_HEADER_COUNT]
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	packet_count
water	8:25	0:0	2	;
if	9:4	11:27	2	(xiph_SplitHeaders (packet_size ,packet ,& packet_count ,i_extra ,p_extra ))
cond	9:8	10:48	3	xiph_SplitHeaders (packet_size ,packet ,& packet_count ,i_extra ,p_extra )
call	9:8	10:48	4	xiph_SplitHeaders
arg	9:26	9:37	5	packet_size
water	9:26	0:0	6	packet_size
arg	9:39	9:45	5	packet
water	9:39	0:0	6	packet
arg	9:47	9:60	5	&packet_count
op	9:47	0:0	6	&
water	9:48	0:0	6	packet_count
arg	10:32	10:39	5	i_extra
water	10:32	0:0	6	i_extra
arg	10:41	10:48	5	p_extra
water	10:41	0:0	6	p_extra
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
water	11:28	0:0	2	;
if	12:4	13:27	2	(packet_count < 3)
cond	12:8	12:23	3	packet_count < 3
water	12:8	0:0	4	packet_count
op	12:21	0:0	4	<
water	12:23	0:0	4	3
stmts	13:8	13:27	3	
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	13:28	0:0	2	;
if	14:4	19:4	2	(theora_pixel_fmt != NULL)
cond	14:8	14:28	3	theora_pixel_fmt != NULL
water	14:8	0:0	4	theora_pixel_fmt
op	14:25	0:0	4	!=
water	14:28	0:0	4	NULL
stmts	15:4	19:4	3	
water	15:4	0:0	4	{
if	16:8	17:31	4	(packet_size [ 0 ] < 42)
cond	16:12	16:29	5	packet_size [ 0 ] < 42
water	16:12	0:0	6	packet_size
op	16:23	0:0	6	[
water	16:24	0:0	6	0
op	16:25	0:0	6	]
op	16:27	0:0	6	<
water	16:29	0:0	6	42
stmts	17:12	17:31	5	
return	17:12	17:31	6	VLC_EGENERIC
water	17:19	0:0	7	VLC_EGENERIC
op	18:8	0:0	4	*
water	18:9	0:0	4	theora_pixel_fmt
op	18:26	0:0	4	=
water	18:28	0:0	4	(
water	18:29	0:0	4	(
water	18:30	0:0	4	(
water	18:31	0:0	4	uint8_t
op	18:39	0:0	4	*
water	18:40	0:0	4	)
water	18:41	0:0	4	packet
op	18:47	0:0	4	[
water	18:48	0:0	4	0
op	18:49	0:0	4	]
water	18:50	0:0	4	)
op	18:51	0:0	4	[
water	18:52	0:0	4	41
op	18:54	0:0	4	]
op	18:56	0:0	4	>>
water	18:59	0:0	4	3
water	18:60	0:0	4	)
op	18:62	0:0	4	&
water	18:64	0:0	4	0
water	18:65	0:0	4	x03
water	18:68	0:0	4	;
water	19:4	0:0	4	}
water	20:4	0:0	2	unsigned
water	20:13	0:0	2	length_size
op	20:24	0:0	2	[
water	20:25	0:0	2	2
op	20:26	0:0	2	]
op	20:28	0:0	2	=
water	20:30	0:0	2	{
water	20:32	0:0	2	0
water	20:33	0:0	2	,
water	20:35	0:0	2	0
water	20:37	0:0	2	}
water	20:38	0:0	2	;
for	21:4	29:4	2	( int i = 0 ;i < 2;i ++)
forinit	0:0	21:18	3	 int i = 0 ;
decl	21:9	21:18	4	int	i
op	21:15	0:0	4	=
water	21:17	0:0	4	0
cond	21:20	21:24	3	i < 2
water	21:20	0:0	4	i
op	21:22	0:0	4	<
water	21:24	0:0	4	2
forexpr	21:27	21:28	3	i ++
water	21:27	0:0	4	i
op	21:28	0:0	4	++
stmts	22:4	29:4	3	
water	22:4	0:0	4	{
water	23:8	0:0	4	unsigned
water	23:17	0:0	4	size
op	23:22	0:0	4	=
water	23:24	0:0	4	packet_size
op	23:35	0:0	4	[
water	23:36	0:0	4	i
op	23:37	0:0	4	]
water	23:38	0:0	4	;
while	24:8	28:8	4	(size > 0)
cond	24:15	24:22	5	size > 0
water	24:15	0:0	6	size
op	24:20	0:0	6	>
water	24:22	0:0	6	0
stmts	25:8	28:8	5	
water	25:8	0:0	6	{
water	26:12	0:0	6	length_size
op	26:23	0:0	6	[
water	26:24	0:0	6	i
op	26:25	0:0	6	]
op	26:26	0:0	6	++
water	26:28	0:0	6	;
water	27:12	0:0	6	size
op	27:17	0:0	6	>>=
water	27:21	0:0	6	7
water	27:22	0:0	6	;
water	28:8	0:0	6	}
water	29:4	0:0	4	}
op	30:4	0:0	2	*
water	30:5	0:0	2	i_buffer
op	30:14	0:0	2	=
water	30:16	0:0	2	room
op	30:21	0:0	2	+
water	30:23	0:0	2	1
op	30:25	0:0	2	+
water	30:27	0:0	2	length_size
op	30:38	0:0	2	[
water	30:39	0:0	2	0
op	30:40	0:0	2	]
op	30:42	0:0	2	+
water	30:44	0:0	2	length_size
op	30:55	0:0	2	[
water	30:56	0:0	2	1
op	30:57	0:0	2	]
op	31:16	0:0	2	+
water	31:18	0:0	2	packet_size
op	31:29	0:0	2	[
water	31:30	0:0	2	0
op	31:31	0:0	2	]
op	31:33	0:0	2	+
water	31:35	0:0	2	packet_size
op	31:46	0:0	2	[
water	31:47	0:0	2	1
op	31:48	0:0	2	]
op	31:50	0:0	2	+
water	31:52	0:0	2	packet_size
op	31:63	0:0	2	[
water	31:64	0:0	2	2
op	31:65	0:0	2	]
water	31:66	0:0	2	;
op	32:4	0:0	2	*
water	32:5	0:0	2	p_buffer
op	32:14	0:0	2	=
call	32:16	32:32	2	malloc
arg	32:23	32:32	3	*i_buffer
op	32:23	0:0	4	*
water	32:24	0:0	4	i_buffer
water	32:33	0:0	2	;
if	33:4	34:25	2	(* p_buffer == NULL)
cond	33:8	33:21	3	* p_buffer == NULL
op	33:8	0:0	4	*
water	33:9	0:0	4	p_buffer
op	33:18	0:0	4	==
water	33:21	0:0	4	NULL
stmts	34:8	34:25	3	
return	34:8	34:25	4	VLC_ENOMEM
water	34:15	0:0	5	VLC_ENOMEM
decl	35:4	35:33	2	uint8_t	*p
op	35:15	0:0	2	=
op	35:17	0:0	2	*
water	35:18	0:0	2	p_buffer
op	35:27	0:0	2	+
water	35:29	0:0	2	room
op	37:4	0:0	2	*
water	37:5	0:0	2	p
op	37:6	0:0	2	++
op	37:9	0:0	2	=
water	37:11	0:0	2	2
water	37:12	0:0	2	;
for	38:4	48:4	2	( int i = 0 ;i < 2;i ++)
forinit	0:0	38:18	3	 int i = 0 ;
decl	38:9	38:18	4	int	i
op	38:15	0:0	4	=
water	38:17	0:0	4	0
cond	38:20	38:24	3	i < 2
water	38:20	0:0	4	i
op	38:22	0:0	4	<
water	38:24	0:0	4	2
forexpr	38:27	38:28	3	i ++
water	38:27	0:0	4	i
op	38:28	0:0	4	++
stmts	39:4	48:4	3	
water	39:4	0:0	4	{
water	40:8	0:0	4	unsigned
water	40:17	0:0	4	size
op	40:22	0:0	4	=
water	40:24	0:0	4	length_size
op	40:35	0:0	4	[
water	40:36	0:0	4	i
op	40:37	0:0	4	]
water	40:38	0:0	4	;
while	41:8	47:8	4	(size > 0)
cond	41:15	41:22	5	size > 0
water	41:15	0:0	6	size
op	41:20	0:0	6	>
water	41:22	0:0	6	0
stmts	42:8	47:8	5	
water	42:8	0:0	6	{
op	43:12	0:0	6	*
water	43:13	0:0	6	p
op	43:15	0:0	6	=
water	43:17	0:0	6	(
water	43:18	0:0	6	packet_size
op	43:29	0:0	6	[
water	43:30	0:0	6	i
op	43:31	0:0	6	]
op	43:33	0:0	6	>>
water	43:36	0:0	6	(
water	43:37	0:0	6	7
op	43:39	0:0	6	*
water	43:41	0:0	6	(
water	43:42	0:0	6	size
op	43:47	0:0	6	-
water	43:49	0:0	6	1
water	43:50	0:0	6	)
water	43:51	0:0	6	)
water	43:52	0:0	6	)
op	43:54	0:0	6	&
water	43:56	0:0	6	0
water	43:57	0:0	6	x7f
water	43:60	0:0	6	;
if	44:12	45:26	6	(-- size > 0)
cond	44:16	44:25	7	-- size > 0
op	44:16	0:0	8	--
water	44:18	0:0	8	size
op	44:23	0:0	8	>
water	44:25	0:0	8	0
stmts	45:16	45:26	7	
op	45:16	0:0	8	*
water	45:17	0:0	8	p
op	45:19	0:0	8	|=
water	45:22	0:0	8	0
water	45:23	0:0	8	x80
water	45:26	0:0	8	;
water	46:12	0:0	6	p
op	46:13	0:0	6	++
water	46:15	0:0	6	;
water	47:8	0:0	6	}
water	48:4	0:0	4	}
for	49:4	53:4	2	( int i = 0 ;i < 3;i ++)
forinit	0:0	49:18	3	 int i = 0 ;
decl	49:9	49:18	4	int	i
op	49:15	0:0	4	=
water	49:17	0:0	4	0
cond	49:20	49:24	3	i < 3
water	49:20	0:0	4	i
op	49:22	0:0	4	<
water	49:24	0:0	4	3
forexpr	49:27	49:28	3	i ++
water	49:27	0:0	4	i
op	49:28	0:0	4	++
stmts	50:4	53:4	3	
water	50:4	0:0	4	{
call	51:8	51:43	4	memcpy
arg	51:15	51:16	5	p
water	51:15	0:0	6	p
arg	51:18	51:27	5	packet[i]
water	51:18	0:0	6	packet
op	51:24	0:0	6	[
water	51:25	0:0	6	i
op	51:26	0:0	6	]
arg	51:29	51:43	5	packet_size[i]
water	51:29	0:0	6	packet_size
op	51:40	0:0	6	[
water	51:41	0:0	6	i
op	51:42	0:0	6	]
water	51:44	0:0	4	;
water	52:8	0:0	4	p
op	52:10	0:0	4	+=
water	52:13	0:0	4	packet_size
op	52:24	0:0	4	[
water	52:25	0:0	4	i
op	52:26	0:0	4	]
water	52:27	0:0	4	;
water	53:4	0:0	4	}
return	54:4	54:22	2	VLC_SUCCESS
water	54:11	0:0	3	VLC_SUCCESS

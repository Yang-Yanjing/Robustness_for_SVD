func	2:0	69:0	0	static int	Control
params	2:19	0:0	1	
param	2:20	2:38	2	vout_display_t *	vd
param	2:40	2:49	2	int	query
param	2:51	2:61	2	va_list	ap
stmnts	0:0	68:4	1	
decl	4:4	4:39	2	vout_display_sys_t	*p_sys
op	4:30	0:0	2	=
water	4:32	0:0	2	vd
op	4:34	0:0	2	->
water	4:36	0:0	2	sys
switch	5:4	68:4	2	(query)
cond	5:12	5:12	3	query
water	5:12	0:0	4	query
stmts	6:4	68:4	3	
water	6:4	0:0	4	{
label	7:4	7:39	4	case VOUT_DISPLAY_CHANGE_FULLSCREEN :
water	8:4	0:0	4	{
decl	9:8	9:77	4	const vout_display_cfg_t	*c
op	9:36	0:0	4	=
call	9:38	9:76	5	va_arg
arg	9:46	9:48	6	ap
water	9:46	0:0	7	ap
arg	9:50	9:76	6	constvout_display_cfg_t*
water	9:50	0:0	7	const
water	9:56	0:0	7	vout_display_cfg_t
op	9:75	0:0	7	*
return	10:8	10:73	4	vout_window_SetFullScreen(p_sys->embed,c->is_fullscreen)
call	10:15	10:72	5	vout_window_SetFullScreen
arg	10:42	10:54	6	p_sys->embed
water	10:42	0:0	7	p_sys
op	10:47	0:0	7	->
water	10:49	0:0	7	embed
arg	10:56	10:72	6	c->is_fullscreen
water	10:56	0:0	7	c
op	10:57	0:0	7	->
water	10:59	0:0	7	is_fullscreen
water	11:4	0:0	4	}
label	12:4	12:41	4	case VOUT_DISPLAY_CHANGE_DISPLAY_SIZE :
label	13:4	13:43	4	case VOUT_DISPLAY_CHANGE_DISPLAY_FILLED :
label	14:4	14:33	4	case VOUT_DISPLAY_CHANGE_ZOOM :
label	15:4	15:42	4	case VOUT_DISPLAY_CHANGE_SOURCE_ASPECT :
label	16:4	16:40	4	case VOUT_DISPLAY_CHANGE_SOURCE_CROP :
water	17:4	0:0	4	{
decl	18:8	18:37	4	const vout_display_cfg_t	*cfg
decl	19:8	19:36	4	const video_format_t	*source
if	20:8	25:8	4	(query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT || query == VOUT_DISPLAY_CHANGE_SOURCE_CROP)
cond	20:12	21:21	5	query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT || query == VOUT_DISPLAY_CHANGE_SOURCE_CROP
water	20:12	0:0	6	query
op	20:18	0:0	6	==
water	20:21	0:0	6	VOUT_DISPLAY_CHANGE_SOURCE_ASPECT
op	21:9	0:0	6	||
water	21:12	0:0	6	query
op	21:18	0:0	6	==
water	21:21	0:0	6	VOUT_DISPLAY_CHANGE_SOURCE_CROP
stmts	22:8	25:8	5	
water	22:8	0:0	6	{
water	23:12	0:0	6	source
op	23:19	0:0	6	=
water	23:21	0:0	6	(
water	23:22	0:0	6	const
water	23:28	0:0	6	video_format_t
op	23:43	0:0	6	*
water	23:44	0:0	6	)
call	23:45	23:79	6	va_arg
arg	23:53	23:55	7	ap
water	23:53	0:0	8	ap
arg	23:57	23:79	7	constvideo_format_t*
water	23:57	0:0	8	const
water	23:63	0:0	8	video_format_t
op	23:78	0:0	8	*
water	23:80	0:0	6	;
water	24:12	0:0	6	cfg
op	24:16	0:0	6	=
water	24:18	0:0	6	vd
op	24:20	0:0	6	->
water	24:22	0:0	6	cfg
water	24:25	0:0	6	;
water	25:8	0:0	6	}
else	26:8	30:8	4
stmts	27:8	30:8	5	
water	27:8	0:0	6	{
water	28:12	0:0	6	source
op	28:19	0:0	6	=
op	28:21	0:0	6	&
water	28:22	0:0	6	vd
op	28:24	0:0	6	->
water	28:26	0:0	6	source
water	28:32	0:0	6	;
water	29:12	0:0	6	cfg
op	29:16	0:0	6	=
water	29:18	0:0	6	(
water	29:19	0:0	6	const
water	29:25	0:0	6	vout_display_cfg_t
op	29:43	0:0	6	*
water	29:44	0:0	6	)
call	29:45	29:83	6	va_arg
arg	29:53	29:55	7	ap
water	29:53	0:0	8	ap
arg	29:57	29:83	7	constvout_display_cfg_t*
water	29:57	0:0	8	const
water	29:63	0:0	8	vout_display_cfg_t
op	29:82	0:0	8	*
water	29:84	0:0	6	;
water	30:8	0:0	6	}
if	31:8	36:8	4	(query == VOUT_DISPLAY_CHANGE_DISPLAY_SIZE &&va_arg (ap ,int ))
cond	31:12	31:72	5	query == VOUT_DISPLAY_CHANGE_DISPLAY_SIZE &&va_arg (ap ,int )
water	31:12	0:0	6	query
op	31:18	0:0	6	==
water	31:21	0:0	6	VOUT_DISPLAY_CHANGE_DISPLAY_SIZE
op	31:54	0:0	6	&&
call	31:57	31:72	6	va_arg
arg	31:65	31:67	7	ap
water	31:65	0:0	8	ap
arg	31:69	31:72	7	int
water	31:69	0:0	8	int
stmts	32:8	36:8	5	
water	32:8	0:0	6	{
call	33:12	34:72	6	vout_window_SetSize
arg	33:33	33:45	7	p_sys->embed
water	33:33	0:0	8	p_sys
op	33:38	0:0	8	->
water	33:40	0:0	8	embed
arg	34:33	34:51	7	cfg->display.width
water	34:33	0:0	8	cfg
op	34:36	0:0	8	->
water	34:38	0:0	8	display
op	34:45	0:0	8	.
water	34:46	0:0	8	width
arg	34:53	34:72	7	cfg->display.height
water	34:53	0:0	8	cfg
op	34:56	0:0	8	->
water	34:58	0:0	8	display
op	34:65	0:0	8	.
water	34:66	0:0	8	height
water	34:73	0:0	6	;
return	35:12	35:31	6	VLC_EGENERIC
water	35:19	0:0	7	VLC_EGENERIC
water	36:8	0:0	6	}
decl	37:8	37:34	4	vout_display_place_t	place
call	38:8	38:61	4	vout_display_PlacePicture
arg	38:35	38:41	5	&place
op	38:35	0:0	6	&
water	38:36	0:0	6	place
arg	38:43	38:49	5	source
water	38:43	0:0	6	source
arg	38:51	38:54	5	cfg
water	38:51	0:0	6	cfg
arg	38:56	38:61	5	false
water	38:56	0:0	6	false
water	38:62	0:0	4	;
water	39:8	0:0	4	p_sys
op	39:13	0:0	4	->
water	39:15	0:0	4	width
op	39:22	0:0	4	=
water	39:24	0:0	4	place
op	39:29	0:0	4	.
water	39:30	0:0	4	width
water	39:35	0:0	4	;
water	40:8	0:0	4	p_sys
op	40:13	0:0	4	->
water	40:15	0:0	4	height
op	40:22	0:0	4	=
water	40:24	0:0	4	place
op	40:29	0:0	4	.
water	40:30	0:0	4	height
water	40:36	0:0	4	;
decl	42:8	43:64	4	const uint32_t	values[]
op	42:32	0:0	4	=
water	42:34	0:0	4	{
water	42:36	0:0	4	place
op	42:41	0:0	4	.
water	42:42	0:0	4	x
water	42:43	0:0	4	,
water	42:45	0:0	4	place
op	42:50	0:0	4	.
water	42:51	0:0	4	y
water	42:52	0:0	4	,
water	43:36	0:0	4	place
op	43:41	0:0	4	.
water	43:42	0:0	4	width
water	43:47	0:0	4	,
water	43:49	0:0	4	place
op	43:54	0:0	4	.
water	43:55	0:0	4	height
water	43:61	0:0	4	,
water	43:63	0:0	4	}
call	44:8	47:36	4	xcb_configure_window
arg	44:30	44:41	5	p_sys->conn
water	44:30	0:0	6	p_sys
op	44:35	0:0	6	->
water	44:37	0:0	6	conn
arg	44:43	44:56	5	p_sys->window
water	44:43	0:0	6	p_sys
op	44:48	0:0	6	->
water	44:50	0:0	6	window
arg	45:30	46:80	5	XCB_CONFIG_WINDOW_X|XCB_CONFIG_WINDOW_Y|XCB_CONFIG_WINDOW_WIDTH|XCB_CONFIG_WINDOW_HEIGHT
water	45:30	0:0	6	XCB_CONFIG_WINDOW_X
op	45:50	0:0	6	|
water	45:52	0:0	6	XCB_CONFIG_WINDOW_Y
op	46:28	0:0	6	|
water	46:30	0:0	6	XCB_CONFIG_WINDOW_WIDTH
op	46:54	0:0	6	|
water	46:56	0:0	6	XCB_CONFIG_WINDOW_HEIGHT
arg	47:30	47:36	5	values
water	47:30	0:0	6	values
water	47:37	0:0	4	;
call	48:8	48:30	4	xcb_flush
arg	48:19	48:30	5	p_sys->conn
water	48:19	0:0	6	p_sys
op	48:24	0:0	6	->
water	48:26	0:0	6	conn
water	48:31	0:0	4	;
return	49:8	49:26	4	VLC_SUCCESS
water	49:15	0:0	5	VLC_SUCCESS
water	50:4	0:0	4	}
label	51:4	51:41	4	case VOUT_DISPLAY_CHANGE_WINDOW_STATE :
water	52:4	0:0	4	{
water	53:8	0:0	4	unsigned
water	53:17	0:0	4	state
op	53:23	0:0	4	=
call	53:25	53:45	4	va_arg
arg	53:33	53:35	5	ap
water	53:33	0:0	6	ap
arg	53:37	53:45	5	unsigned
water	53:37	0:0	6	unsigned
water	53:46	0:0	4	;
return	54:8	54:57	4	vout_window_SetState(p_sys->embed,state)
call	54:15	54:56	5	vout_window_SetState
arg	54:37	54:49	6	p_sys->embed
water	54:37	0:0	7	p_sys
op	54:42	0:0	7	->
water	54:44	0:0	7	embed
arg	54:51	54:56	6	state
water	54:51	0:0	7	state
water	55:4	0:0	4	}
label	58:4	58:32	4	case VOUT_DISPLAY_HIDE_MOUSE :
call	59:8	60:77	4	xcb_change_window_attributes
arg	59:38	59:49	5	p_sys->conn
water	59:38	0:0	6	p_sys
op	59:43	0:0	6	->
water	59:45	0:0	6	conn
arg	59:51	59:75	5	p_sys->embed->handle.xid
water	59:51	0:0	6	p_sys
op	59:56	0:0	6	->
water	59:58	0:0	6	embed
op	59:63	0:0	6	->
water	59:65	0:0	6	handle
op	59:71	0:0	6	.
water	59:72	0:0	6	xid
arg	60:34	60:47	5	XCB_CW_CURSOR
water	60:34	0:0	6	XCB_CW_CURSOR
arg	60:49	60:77	5	&(uint32_t){p_sys->cursor}
op	60:49	0:0	6	&
water	60:50	0:0	6	(
water	60:51	0:0	6	uint32_t
water	60:59	0:0	6	)
water	60:60	0:0	6	{
water	60:62	0:0	6	p_sys
op	60:67	0:0	6	->
water	60:69	0:0	6	cursor
water	60:76	0:0	6	}
water	60:78	0:0	4	;
call	61:8	61:30	4	xcb_flush
arg	61:19	61:30	5	p_sys->conn
water	61:19	0:0	6	p_sys
op	61:24	0:0	6	->
water	61:26	0:0	6	conn
water	61:31	0:0	4	;
return	62:8	62:26	4	VLC_SUCCESS
water	62:15	0:0	5	VLC_SUCCESS
label	63:4	63:36	4	case VOUT_DISPLAY_RESET_PICTURES :
call	64:8	64:16	4	assert
arg	64:15	64:16	5	0
water	64:15	0:0	6	0
water	64:17	0:0	4	;
label	65:4	65:11	4	default :
call	66:8	66:58	4	msg_Err
arg	66:17	66:19	5	vd
water	66:17	0:0	6	vd
arg	66:21	66:58	5	"Unknown request in XCB vout display"
water	66:21	0:0	6	"Unknown request in XCB vout display"
water	66:59	0:0	4	;
return	67:8	67:27	4	VLC_EGENERIC
water	67:15	0:0	5	VLC_EGENERIC
water	68:4	0:0	4	}

func	2:0	47:0	0	void	vlc_vaLog
params	2:15	0:0	1	
param	2:16	2:33	2	vlc_object_t *	obj
param	2:35	2:43	2	int	type
param	2:45	2:63	2	const char *	module
param	3:16	3:34	2	const char *	format
param	3:36	3:48	2	va_list	args
stmnts	5:4	46:4	1	
if	5:4	6:14	2	(obj != NULL && obj -> i_flags & OBJECT_FLAGS_QUIET)
cond	5:8	5:38	3	obj != NULL && obj -> i_flags & OBJECT_FLAGS_QUIET
water	5:8	0:0	4	obj
op	5:12	0:0	4	!=
water	5:15	0:0	4	NULL
op	5:20	0:0	4	&&
water	5:23	0:0	4	obj
op	5:26	0:0	4	->
water	5:28	0:0	4	i_flags
op	5:36	0:0	4	&
water	5:38	0:0	4	OBJECT_FLAGS_QUIET
stmts	6:8	6:14	3	
return	6:8	6:14	4	
decl	8:4	8:34	2	char	*p
op	8:12	0:0	2	=
call	8:14	8:33	3	strrchr
arg	8:22	8:28	4	module
water	8:22	0:0	5	module
arg	8:30	8:33	4	'/'
water	8:30	0:0	5	'/'
if	9:4	10:18	2	(p != NULL)
cond	9:8	9:13	3	p != NULL
water	9:8	0:0	4	p
op	9:10	0:0	4	!=
water	9:13	0:0	4	NULL
stmts	10:8	10:18	3	
water	10:8	0:0	4	module
op	10:15	0:0	4	=
water	10:17	0:0	4	p
water	10:18	0:0	4	;
water	11:4	0:0	2	p
op	11:6	0:0	2	=
call	11:8	11:26	2	strchr
arg	11:15	11:21	3	module
water	11:15	0:0	4	module
arg	11:23	11:26	3	'.'
water	11:23	0:0	4	'.'
water	11:27	0:0	2	;
decl	12:4	12:50	2	size_t	modlen
op	12:18	0:0	2	=
water	12:20	0:0	2	(
water	12:21	0:0	2	p
op	12:23	0:0	2	!=
water	12:26	0:0	2	NULL
water	12:30	0:0	2	)
water	12:32	0:0	2	?
water	12:34	0:0	2	(
water	12:35	0:0	2	p
op	12:37	0:0	2	-
water	12:39	0:0	2	module
water	12:45	0:0	2	)
water	12:47	0:0	2	:
water	12:49	0:0	2	1
decl	13:4	13:30	2	char	modulebuf[modlen+1]
if	14:4	19:4	2	(p != NULL)
cond	14:8	14:13	3	p != NULL
water	14:8	0:0	4	p
op	14:10	0:0	4	!=
water	14:13	0:0	4	NULL
stmts	15:4	19:4	3	
water	15:4	0:0	4	{
call	16:8	16:40	4	memcpy
arg	16:15	16:24	5	modulebuf
water	16:15	0:0	6	modulebuf
arg	16:26	16:32	5	module
water	16:26	0:0	6	module
arg	16:34	16:40	5	modlen
water	16:34	0:0	6	modlen
water	16:41	0:0	4	;
water	17:8	0:0	4	modulebuf
op	17:17	0:0	4	[
water	17:18	0:0	4	modlen
op	17:24	0:0	4	]
op	17:26	0:0	4	=
water	17:28	0:0	4	'\0'
water	17:32	0:0	4	;
water	18:8	0:0	4	module
op	18:15	0:0	4	=
water	18:17	0:0	4	modulebuf
water	18:26	0:0	4	;
water	19:4	0:0	4	}
decl	21:4	21:17	2	vlc_log_t	msg
water	22:4	0:0	2	msg
op	22:7	0:0	2	.
water	22:8	0:0	2	i_object_id
op	22:20	0:0	2	=
water	22:22	0:0	2	(
water	22:23	0:0	2	uintptr_t
water	22:32	0:0	2	)
water	22:33	0:0	2	obj
water	22:36	0:0	2	;
water	23:4	0:0	2	msg
op	23:7	0:0	2	.
water	23:8	0:0	2	psz_object_type
op	23:24	0:0	2	=
water	23:26	0:0	2	(
water	23:27	0:0	2	obj
op	23:31	0:0	2	!=
water	23:34	0:0	2	NULL
water	23:38	0:0	2	)
water	23:40	0:0	2	?
water	23:42	0:0	2	obj
op	23:45	0:0	2	->
water	23:47	0:0	2	psz_object_type
water	23:63	0:0	2	:
water	23:65	0:0	2	"generic"
water	23:74	0:0	2	;
water	24:4	0:0	2	msg
op	24:7	0:0	2	.
water	24:8	0:0	2	psz_module
op	24:19	0:0	2	=
water	24:21	0:0	2	module
water	24:27	0:0	2	;
water	25:4	0:0	2	msg
op	25:7	0:0	2	.
water	25:8	0:0	2	psz_header
op	25:19	0:0	2	=
water	25:21	0:0	2	NULL
water	25:25	0:0	2	;
for	26:4	31:8	2	( vlc_object_t * o = obj ;o != NULL;o = o -> p_parent)
forinit	0:0	26:30	3	 vlc_object_t * o = obj ;
decl	26:9	26:30	4	vlc_object_t	*o
op	26:25	0:0	4	=
water	26:27	0:0	4	obj
cond	26:32	26:37	3	o != NULL
water	26:32	0:0	4	o
op	26:34	0:0	4	!=
water	26:37	0:0	4	NULL
forexpr	26:43	26:50	3	o = o -> p_parent
water	26:43	0:0	4	o
op	26:45	0:0	4	=
water	26:47	0:0	4	o
op	26:48	0:0	4	->
water	26:50	0:0	4	p_parent
stmts	27:8	31:8	3	
if	27:8	31:8	4	(o -> psz_header != NULL)
cond	27:12	27:29	5	o -> psz_header != NULL
water	27:12	0:0	6	o
op	27:13	0:0	6	->
water	27:15	0:0	6	psz_header
op	27:26	0:0	6	!=
water	27:29	0:0	6	NULL
stmts	28:8	31:8	5	
water	28:8	0:0	6	{
water	29:12	0:0	6	msg
op	29:15	0:0	6	.
water	29:16	0:0	6	psz_header
op	29:27	0:0	6	=
water	29:29	0:0	6	o
op	29:30	0:0	6	->
water	29:32	0:0	6	psz_header
water	29:42	0:0	6	;
break	30:12	30:17	6	
water	31:8	0:0	6	}
decl	33:4	33:66	2	libvlc_priv_t	*priv
op	33:24	0:0	2	=
water	33:26	0:0	2	obj
water	33:30	0:0	2	?
call	33:32	33:58	3	libvlc_priv
arg	33:45	33:58	4	obj->p_libvlc
water	33:45	0:0	5	obj
op	33:48	0:0	5	->
water	33:50	0:0	5	p_libvlc
water	33:60	0:0	2	:
water	33:62	0:0	2	NULL
decl	35:4	35:14	2	va_list	ap
call	36:4	36:21	2	va_copy
arg	36:13	36:15	3	ap
water	36:13	0:0	4	ap
arg	36:17	36:21	3	args
water	36:17	0:0	4	args
water	36:22	0:0	2	;
call	37:4	37:81	2	Win32DebugOutputMsg
arg	37:25	37:57	3	priv?&priv->log.verbose:NULL
water	37:25	0:0	4	priv
water	37:30	0:0	4	?
op	37:32	0:0	4	&
water	37:33	0:0	4	priv
op	37:37	0:0	4	->
water	37:39	0:0	4	log
op	37:42	0:0	4	.
water	37:43	0:0	4	verbose
water	37:51	0:0	4	:
water	37:53	0:0	4	NULL
arg	37:59	37:63	3	type
water	37:59	0:0	4	type
arg	37:65	37:69	3	&msg
op	37:65	0:0	4	&
water	37:66	0:0	4	msg
arg	37:71	37:77	3	format
water	37:71	0:0	4	format
arg	37:79	37:81	3	ap
water	37:79	0:0	4	ap
water	37:82	0:0	2	;
call	38:4	38:14	2	va_end
arg	38:12	38:14	3	ap
water	38:12	0:0	4	ap
water	38:15	0:0	2	;
if	40:4	46:4	2	(priv)
cond	40:8	40:8	3	priv
water	40:8	0:0	4	priv
stmts	40:14	46:4	3	
water	40:14	0:0	4	{
decl	41:8	41:36	4	int	canc
op	41:17	0:0	4	=
call	41:19	41:35	5	vlc_savecancel
call	42:8	42:42	4	vlc_rwlock_rdlock
arg	42:27	42:42	5	&priv->log.lock
op	42:27	0:0	6	&
water	42:28	0:0	6	priv
op	42:32	0:0	6	->
water	42:34	0:0	6	log
op	42:37	0:0	6	.
water	42:38	0:0	6	lock
water	42:43	0:0	4	;
call	43:8	43:64	4	priv->log.cb
arg	43:22	43:38	5	priv->log.opaque
water	43:22	0:0	6	priv
op	43:26	0:0	6	->
water	43:28	0:0	6	log
op	43:31	0:0	6	.
water	43:32	0:0	6	opaque
arg	43:40	43:44	5	type
water	43:40	0:0	6	type
arg	43:46	43:50	5	&msg
op	43:46	0:0	6	&
water	43:47	0:0	6	msg
arg	43:52	43:58	5	format
water	43:52	0:0	6	format
arg	43:60	43:64	5	args
water	43:60	0:0	6	args
water	43:65	0:0	4	;
call	44:8	44:42	4	vlc_rwlock_unlock
arg	44:27	44:42	5	&priv->log.lock
op	44:27	0:0	6	&
water	44:28	0:0	6	priv
op	44:32	0:0	6	->
water	44:34	0:0	6	log
op	44:37	0:0	6	.
water	44:38	0:0	6	lock
water	44:43	0:0	4	;
call	45:8	45:31	4	vlc_restorecancel
arg	45:27	45:31	5	canc
water	45:27	0:0	6	canc
water	45:32	0:0	4	;
water	46:4	0:0	4	}

func	2:0	46:0	0	static subpicture_t *	DecodePacket
params	2:33	0:0	1	
param	2:35	2:51	2	decoder_t *	p_dec
param	2:53	2:69	2	block_t *	p_data
stmnts	0:0	45:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:24	2	subpicture_t	*p_spu
decl	6:4	6:33	2	subpicture_region_t	*p_region
decl	7:4	7:22	2	video_format_t	fmt
decl	8:4	8:27	2	video_palette_t	palette
decl	9:4	9:9	2	int	i
water	11:4	0:0	2	p_spu
op	11:10	0:0	2	=
call	11:12	11:47	2	decoder_NewSubpicture
arg	11:35	11:40	3	p_dec
water	11:35	0:0	4	p_dec
arg	11:42	11:47	3	NULL
water	11:42	0:0	4	NULL
water	11:48	0:0	2	;
if	12:4	12:28	2	(! p_spu)
cond	12:8	12:9	3	! p_spu
op	12:8	0:0	4	!
water	12:9	0:0	4	p_spu
stmts	12:17	12:28	3	
return	12:17	12:28	4	NULL
water	12:24	0:0	5	NULL
water	13:4	0:0	2	p_spu
op	13:9	0:0	2	->
water	13:11	0:0	2	i_start
op	13:19	0:0	2	=
water	13:21	0:0	2	p_data
op	13:27	0:0	2	->
water	13:29	0:0	2	i_pts
water	13:34	0:0	2	;
water	14:4	0:0	2	p_spu
op	14:9	0:0	2	->
water	14:11	0:0	2	i_stop
op	14:19	0:0	2	=
water	14:21	0:0	2	p_data
op	14:27	0:0	2	->
water	14:29	0:0	2	i_pts
op	14:35	0:0	2	+
water	14:37	0:0	2	p_sys
op	14:42	0:0	2	->
water	14:44	0:0	2	i_duration
water	14:54	0:0	2	;
water	15:4	0:0	2	p_spu
op	15:9	0:0	2	->
water	15:11	0:0	2	b_ephemer
op	15:21	0:0	2	=
water	15:23	0:0	2	true
water	15:27	0:0	2	;
call	17:4	17:44	2	memset
arg	17:12	17:16	3	&fmt
op	17:12	0:0	4	&
water	17:13	0:0	4	fmt
arg	17:18	17:19	3	0
water	17:18	0:0	4	0
arg	17:21	17:44	3	sizeof(video_format_t)
op	17:21	0:0	4	sizeof
water	17:27	0:0	4	(
water	17:28	0:0	4	video_format_t
water	17:42	0:0	4	)
water	17:45	0:0	2	;
water	18:4	0:0	2	fmt
op	18:7	0:0	2	.
water	18:8	0:0	2	i_chroma
op	18:17	0:0	2	=
water	18:19	0:0	2	VLC_CODEC_YUVP
water	18:33	0:0	2	;
water	19:4	0:0	2	fmt
op	19:7	0:0	2	.
water	19:8	0:0	2	i_sar_num
op	19:18	0:0	2	=
water	19:20	0:0	2	1
water	19:21	0:0	2	;
water	20:4	0:0	2	fmt
op	20:7	0:0	2	.
water	20:8	0:0	2	i_sar_den
op	20:18	0:0	2	=
water	20:20	0:0	2	1
water	20:21	0:0	2	;
water	21:4	0:0	2	fmt
op	21:7	0:0	2	.
water	21:8	0:0	2	i_width
op	21:16	0:0	2	=
water	21:18	0:0	2	fmt
op	21:21	0:0	2	.
water	21:22	0:0	2	i_visible_width
op	21:38	0:0	2	=
water	21:40	0:0	2	p_sys
op	21:45	0:0	2	->
water	21:47	0:0	2	i_width
water	21:54	0:0	2	;
water	22:4	0:0	2	fmt
op	22:7	0:0	2	.
water	22:8	0:0	2	i_height
op	22:17	0:0	2	=
water	22:19	0:0	2	fmt
op	22:22	0:0	2	.
water	22:23	0:0	2	i_visible_height
op	22:40	0:0	2	=
water	22:42	0:0	2	p_sys
op	22:47	0:0	2	->
water	22:49	0:0	2	i_height
water	22:57	0:0	2	;
water	23:4	0:0	2	fmt
op	23:7	0:0	2	.
water	23:8	0:0	2	i_x_offset
op	23:19	0:0	2	=
water	23:21	0:0	2	fmt
op	23:24	0:0	2	.
water	23:25	0:0	2	i_y_offset
op	23:36	0:0	2	=
water	23:38	0:0	2	0
water	23:39	0:0	2	;
water	24:4	0:0	2	fmt
op	24:7	0:0	2	.
water	24:8	0:0	2	p_palette
op	24:18	0:0	2	=
op	24:20	0:0	2	&
water	24:21	0:0	2	palette
water	24:28	0:0	2	;
water	25:4	0:0	2	fmt
op	25:7	0:0	2	.
water	25:8	0:0	2	p_palette
op	25:17	0:0	2	->
water	25:19	0:0	2	i_entries
op	25:29	0:0	2	=
water	25:31	0:0	2	4
water	25:32	0:0	2	;
for	26:4	32:4	2	(i = 0 ;i < fmt . p_palette -> i_entries;i ++)
forinit	26:9	26:14	3	i = 0 ;
water	26:9	0:0	4	i
op	26:11	0:0	4	=
water	26:13	0:0	4	0
water	26:14	0:0	4	;
cond	26:16	26:35	3	i < fmt . p_palette -> i_entries
water	26:16	0:0	4	i
op	26:18	0:0	4	<
water	26:20	0:0	4	fmt
op	26:23	0:0	4	.
water	26:24	0:0	4	p_palette
op	26:33	0:0	4	->
water	26:35	0:0	4	i_entries
forexpr	26:46	26:47	3	i ++
water	26:46	0:0	4	i
op	26:47	0:0	4	++
stmts	27:4	32:4	3	
water	27:4	0:0	4	{
water	28:8	0:0	4	fmt
op	28:11	0:0	4	.
water	28:12	0:0	4	p_palette
op	28:21	0:0	4	->
water	28:23	0:0	4	palette
op	28:30	0:0	4	[
water	28:31	0:0	4	i
op	28:32	0:0	4	]
op	28:33	0:0	4	[
water	28:34	0:0	4	0
op	28:35	0:0	4	]
op	28:37	0:0	4	=
water	28:39	0:0	4	p_sys
op	28:44	0:0	4	->
water	28:46	0:0	4	p_palette
op	28:55	0:0	4	[
water	28:56	0:0	4	i
op	28:57	0:0	4	]
op	28:58	0:0	4	[
water	28:59	0:0	4	0
op	28:60	0:0	4	]
water	28:61	0:0	4	;
water	29:8	0:0	4	fmt
op	29:11	0:0	4	.
water	29:12	0:0	4	p_palette
op	29:21	0:0	4	->
water	29:23	0:0	4	palette
op	29:30	0:0	4	[
water	29:31	0:0	4	i
op	29:32	0:0	4	]
op	29:33	0:0	4	[
water	29:34	0:0	4	1
op	29:35	0:0	4	]
op	29:37	0:0	4	=
water	29:39	0:0	4	p_sys
op	29:44	0:0	4	->
water	29:46	0:0	4	p_palette
op	29:55	0:0	4	[
water	29:56	0:0	4	i
op	29:57	0:0	4	]
op	29:58	0:0	4	[
water	29:59	0:0	4	1
op	29:60	0:0	4	]
water	29:61	0:0	4	;
water	30:8	0:0	4	fmt
op	30:11	0:0	4	.
water	30:12	0:0	4	p_palette
op	30:21	0:0	4	->
water	30:23	0:0	4	palette
op	30:30	0:0	4	[
water	30:31	0:0	4	i
op	30:32	0:0	4	]
op	30:33	0:0	4	[
water	30:34	0:0	4	2
op	30:35	0:0	4	]
op	30:37	0:0	4	=
water	30:39	0:0	4	p_sys
op	30:44	0:0	4	->
water	30:46	0:0	4	p_palette
op	30:55	0:0	4	[
water	30:56	0:0	4	i
op	30:57	0:0	4	]
op	30:58	0:0	4	[
water	30:59	0:0	4	2
op	30:60	0:0	4	]
water	30:61	0:0	4	;
water	31:8	0:0	4	fmt
op	31:11	0:0	4	.
water	31:12	0:0	4	p_palette
op	31:21	0:0	4	->
water	31:23	0:0	4	palette
op	31:30	0:0	4	[
water	31:31	0:0	4	i
op	31:32	0:0	4	]
op	31:33	0:0	4	[
water	31:34	0:0	4	3
op	31:35	0:0	4	]
op	31:37	0:0	4	=
water	31:39	0:0	4	p_sys
op	31:44	0:0	4	->
water	31:46	0:0	4	p_palette
op	31:55	0:0	4	[
water	31:56	0:0	4	i
op	31:57	0:0	4	]
op	31:58	0:0	4	[
water	31:59	0:0	4	3
op	31:60	0:0	4	]
water	31:61	0:0	4	;
water	32:4	0:0	4	}
water	33:4	0:0	2	p_region
op	33:13	0:0	2	=
call	33:15	33:43	2	subpicture_region_New
arg	33:38	33:43	3	&fmt
op	33:38	0:0	4	&
water	33:39	0:0	4	fmt
water	33:44	0:0	2	;
if	34:4	39:4	2	(! p_region)
cond	34:8	34:9	3	! p_region
op	34:8	0:0	4	!
water	34:9	0:0	4	p_region
stmts	35:4	39:4	3	
water	35:4	0:0	4	{
call	36:8	36:53	4	msg_Err
arg	36:17	36:22	5	p_dec
water	36:17	0:0	6	p_dec
arg	36:24	36:53	5	"cannot allocate SPU region"
water	36:24	0:0	6	"cannot allocate SPU region"
water	36:54	0:0	4	;
call	37:8	37:47	4	decoder_DeleteSubpicture
arg	37:34	37:39	5	p_dec
water	37:34	0:0	6	p_dec
arg	37:41	37:47	5	p_spu
water	37:41	0:0	6	p_spu
water	37:48	0:0	4	;
return	38:8	38:19	4	NULL
water	38:15	0:0	5	NULL
water	39:4	0:0	4	}
water	40:4	0:0	2	p_spu
op	40:9	0:0	2	->
water	40:11	0:0	2	p_region
op	40:20	0:0	2	=
water	40:22	0:0	2	p_region
water	40:30	0:0	2	;
water	41:4	0:0	2	p_region
op	41:12	0:0	2	->
water	41:14	0:0	2	i_x
op	41:18	0:0	2	=
water	41:20	0:0	2	p_sys
op	41:25	0:0	2	->
water	41:27	0:0	2	i_x_start
water	41:36	0:0	2	;
water	42:4	0:0	2	p_region
op	42:12	0:0	2	->
water	42:14	0:0	2	i_x
op	42:18	0:0	2	=
water	42:20	0:0	2	p_region
op	42:28	0:0	2	->
water	42:30	0:0	2	i_x
op	42:34	0:0	2	*
water	42:36	0:0	2	3
op	42:38	0:0	2	/
water	42:40	0:0	2	4
water	42:41	0:0	2	;
water	43:4	0:0	2	p_region
op	43:12	0:0	2	->
water	43:14	0:0	2	i_y
op	43:18	0:0	2	=
water	43:20	0:0	2	p_sys
op	43:25	0:0	2	->
water	43:27	0:0	2	i_y_start
water	43:36	0:0	2	;
call	44:4	44:41	2	RenderImage
arg	44:17	44:22	3	p_dec
water	44:17	0:0	4	p_dec
arg	44:24	44:30	3	p_data
water	44:24	0:0	4	p_data
arg	44:32	44:41	3	p_region
water	44:32	0:0	4	p_region
water	44:42	0:0	2	;
return	45:4	45:16	2	p_spu
water	45:11	0:0	3	p_spu

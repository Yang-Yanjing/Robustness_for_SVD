func	2:0	71:0	0	static picture_t *	Filter
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:63	2	picture_t *	p_pic
stmnts	0:0	70:20	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:58	2	const video_format_t	*p_fmti
op	5:33	0:0	2	=
op	5:35	0:0	2	&
water	5:36	0:0	2	p_filter
op	5:44	0:0	2	->
water	5:46	0:0	2	fmt_in
op	5:52	0:0	2	.
water	5:53	0:0	2	video
decl	6:4	6:59	2	const video_format_t	*p_fmto
op	6:33	0:0	2	=
op	6:35	0:0	2	&
water	6:36	0:0	2	p_filter
op	6:44	0:0	2	->
water	6:46	0:0	2	fmt_out
op	6:53	0:0	2	.
water	6:54	0:0	2	video
decl	7:4	7:24	2	picture_t	*p_pic_dst
if	9:4	13:4	2	(Init (p_filter ))
cond	9:8	9:23	3	Init (p_filter )
call	9:8	9:23	4	Init
arg	9:14	9:23	5	p_filter
water	9:14	0:0	6	p_filter
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
call	11:8	11:31	4	picture_Release
arg	11:25	11:31	5	p_pic
water	11:25	0:0	6	p_pic
water	11:32	0:0	4	;
return	12:8	12:19	4	NULL
water	12:15	0:0	5	NULL
water	13:4	0:0	4	}
water	15:4	0:0	2	p_pic_dst
op	15:14	0:0	2	=
call	15:16	15:44	2	filter_NewPicture
arg	15:35	15:44	3	p_filter
water	15:35	0:0	4	p_filter
water	15:45	0:0	2	;
if	16:4	20:4	2	(! p_pic_dst)
cond	16:8	16:9	3	! p_pic_dst
op	16:8	0:0	4	!
water	16:9	0:0	4	p_pic_dst
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:31	4	picture_Release
arg	18:25	18:31	5	p_pic
water	18:25	0:0	6	p_pic
water	18:32	0:0	4	;
return	19:8	19:19	4	NULL
water	19:15	0:0	5	NULL
water	20:4	0:0	4	}
decl	22:4	22:28	2	picture_t	*p_src
op	22:21	0:0	2	=
water	22:23	0:0	2	p_pic
decl	23:4	23:32	2	picture_t	*p_dst
op	23:21	0:0	2	=
water	23:23	0:0	2	p_pic_dst
if	24:4	29:4	2	(p_sys -> i_extend_factor != 1)
cond	24:8	24:34	3	p_sys -> i_extend_factor != 1
water	24:8	0:0	4	p_sys
op	24:13	0:0	4	->
water	24:15	0:0	4	i_extend_factor
op	24:31	0:0	4	!=
water	24:34	0:0	4	1
stmts	25:4	29:4	3	
water	25:4	0:0	4	{
water	26:8	0:0	4	p_src
op	26:14	0:0	4	=
water	26:16	0:0	4	p_sys
op	26:21	0:0	4	->
water	26:23	0:0	4	p_src_e
water	26:30	0:0	4	;
water	27:8	0:0	4	p_dst
op	27:14	0:0	4	=
water	27:16	0:0	4	p_sys
op	27:21	0:0	4	->
water	27:23	0:0	4	p_dst_e
water	27:30	0:0	4	;
call	28:8	28:30	4	CopyPad
arg	28:17	28:22	5	p_src
water	28:17	0:0	6	p_src
arg	28:24	28:30	5	p_pic
water	28:24	0:0	6	p_pic
water	28:31	0:0	4	;
water	29:4	0:0	4	}
if	30:4	31:42	2	(p_sys -> b_copy && p_sys -> b_swap_uvi == p_sys -> b_swap_uvo)
cond	30:8	30:53	3	p_sys -> b_copy && p_sys -> b_swap_uvi == p_sys -> b_swap_uvo
water	30:8	0:0	4	p_sys
op	30:13	0:0	4	->
water	30:15	0:0	4	b_copy
op	30:22	0:0	4	&&
water	30:25	0:0	4	p_sys
op	30:30	0:0	4	->
water	30:32	0:0	4	b_swap_uvi
op	30:43	0:0	4	==
water	30:46	0:0	4	p_sys
op	30:51	0:0	4	->
water	30:53	0:0	4	b_swap_uvo
stmts	31:8	31:42	3	
call	31:8	31:41	4	picture_CopyPixels
arg	31:28	31:33	5	p_dst
water	31:28	0:0	6	p_dst
arg	31:35	31:41	5	p_src
water	31:35	0:0	6	p_src
water	31:42	0:0	4	;
else	32:4	33:30	2
stmts	32:9	33:30	3	
if	32:9	33:30	4	(p_sys -> b_copy)
cond	32:13	32:20	5	p_sys -> b_copy
water	32:13	0:0	6	p_sys
op	32:18	0:0	6	->
water	32:20	0:0	6	b_copy
stmts	33:8	33:30	5	
call	33:8	33:29	6	SwapUV
arg	33:16	33:21	7	p_dst
water	33:16	0:0	8	p_dst
arg	33:23	33:29	7	p_src
water	33:23	0:0	8	p_src
water	33:30	0:0	6	;
else	34:4	36:55	2
stmts	35:8	36:55	3	
call	35:8	36:54	4	Convert
arg	35:17	35:25	5	p_filter
water	35:17	0:0	6	p_filter
arg	35:27	35:37	5	p_sys->ctx
water	35:27	0:0	6	p_sys
op	35:32	0:0	6	->
water	35:34	0:0	6	ctx
arg	35:39	35:44	5	p_dst
water	35:39	0:0	6	p_dst
arg	35:46	35:51	5	p_src
water	35:46	0:0	6	p_src
arg	35:53	35:77	5	p_fmti->i_visible_height
water	35:53	0:0	6	p_fmti
op	35:59	0:0	6	->
water	35:61	0:0	6	i_visible_height
arg	35:79	35:80	5	0
water	35:79	0:0	6	0
arg	35:82	35:83	5	3
water	35:82	0:0	6	3
arg	36:17	36:34	5	p_sys->b_swap_uvi
water	36:17	0:0	6	p_sys
op	36:22	0:0	6	->
water	36:24	0:0	6	b_swap_uvi
arg	36:36	36:54	5	p_sys->b_swap_uvo
water	36:36	0:0	6	p_sys
op	36:41	0:0	6	->
water	36:43	0:0	6	b_swap_uvo
water	36:55	0:0	4	;
if	37:4	53:4	2	(p_sys -> ctxA)
cond	37:8	37:15	3	p_sys -> ctxA
water	37:8	0:0	4	p_sys
op	37:13	0:0	4	->
water	37:15	0:0	4	ctxA
stmts	38:4	53:4	3	
water	38:4	0:0	4	{
if	40:8	41:131	4	(p_fmti -> i_chroma == VLC_CODEC_RGBA || p_fmti -> i_chroma == VLC_CODEC_BGRA)
cond	40:12	40:70	5	p_fmti -> i_chroma == VLC_CODEC_RGBA || p_fmti -> i_chroma == VLC_CODEC_BGRA
water	40:12	0:0	6	p_fmti
op	40:18	0:0	6	->
water	40:20	0:0	6	i_chroma
op	40:29	0:0	6	==
water	40:32	0:0	6	VLC_CODEC_RGBA
op	40:47	0:0	6	||
water	40:50	0:0	6	p_fmti
op	40:56	0:0	6	->
water	40:58	0:0	6	i_chroma
op	40:67	0:0	6	==
water	40:70	0:0	6	VLC_CODEC_BGRA
stmts	41:12	41:131	5	
call	41:12	41:130	6	ExtractA
arg	41:22	41:36	7	p_sys->p_src_a
water	41:22	0:0	8	p_sys
op	41:27	0:0	8	->
water	41:29	0:0	8	p_src_a
arg	41:38	41:43	7	p_src
water	41:38	0:0	8	p_src
arg	41:45	41:93	7	p_fmti->i_visible_width*p_sys->i_extend_factor
water	41:45	0:0	8	p_fmti
op	41:51	0:0	8	->
water	41:53	0:0	8	i_visible_width
op	41:69	0:0	8	*
water	41:71	0:0	8	p_sys
op	41:76	0:0	8	->
water	41:78	0:0	8	i_extend_factor
arg	41:95	41:119	7	p_fmti->i_visible_height
water	41:95	0:0	8	p_fmti
op	41:101	0:0	8	->
water	41:103	0:0	8	i_visible_height
arg	41:121	41:130	7	OFFSET_A
water	41:121	0:0	8	OFFSET_A
water	41:131	0:0	6	;
else	42:8	43:124	4
stmts	42:13	43:124	5	
if	42:13	43:124	6	(p_fmti -> i_chroma == VLC_CODEC_ARGB)
cond	42:17	42:37	7	p_fmti -> i_chroma == VLC_CODEC_ARGB
water	42:17	0:0	8	p_fmti
op	42:23	0:0	8	->
water	42:25	0:0	8	i_chroma
op	42:34	0:0	8	==
water	42:37	0:0	8	VLC_CODEC_ARGB
stmts	43:12	43:124	7	
call	43:12	43:123	8	ExtractA
arg	43:22	43:36	9	p_sys->p_src_a
water	43:22	0:0	10	p_sys
op	43:27	0:0	10	->
water	43:29	0:0	10	p_src_a
arg	43:38	43:43	9	p_src
water	43:38	0:0	10	p_src
arg	43:45	43:93	9	p_fmti->i_visible_width*p_sys->i_extend_factor
water	43:45	0:0	10	p_fmti
op	43:51	0:0	10	->
water	43:53	0:0	10	i_visible_width
op	43:69	0:0	10	*
water	43:71	0:0	10	p_sys
op	43:76	0:0	10	->
water	43:78	0:0	10	i_extend_factor
arg	43:95	43:119	9	p_fmti->i_visible_height
water	43:95	0:0	10	p_fmti
op	43:101	0:0	10	->
water	43:103	0:0	10	i_visible_height
arg	43:121	43:123	9	0
water	43:121	0:0	10	0
water	43:124	0:0	8	;
else	44:8	45:67	4
stmts	45:12	45:67	5	
call	45:12	45:66	6	plane_CopyPixels
arg	45:30	45:47	7	p_sys->p_src_a->p
water	45:30	0:0	8	p_sys
op	45:35	0:0	8	->
water	45:37	0:0	8	p_src_a
op	45:44	0:0	8	->
water	45:46	0:0	8	p
arg	45:49	45:66	7	p_src->p+A_PLANE
water	45:49	0:0	8	p_src
op	45:54	0:0	8	->
water	45:56	0:0	8	p
op	45:57	0:0	8	+
water	45:58	0:0	8	A_PLANE
water	45:67	0:0	6	;
call	46:8	46:117	4	Convert
arg	46:17	46:25	5	p_filter
water	46:17	0:0	6	p_filter
arg	46:27	46:38	5	p_sys->ctxA
water	46:27	0:0	6	p_sys
op	46:32	0:0	6	->
water	46:34	0:0	6	ctxA
arg	46:40	46:54	5	p_sys->p_dst_a
water	46:40	0:0	6	p_sys
op	46:45	0:0	6	->
water	46:47	0:0	6	p_dst_a
arg	46:56	46:70	5	p_sys->p_src_a
water	46:56	0:0	6	p_sys
op	46:61	0:0	6	->
water	46:63	0:0	6	p_src_a
arg	46:72	46:96	5	p_fmti->i_visible_height
water	46:72	0:0	6	p_fmti
op	46:78	0:0	6	->
water	46:80	0:0	6	i_visible_height
arg	46:98	46:99	5	0
water	46:98	0:0	6	0
arg	46:101	46:102	5	1
water	46:101	0:0	6	1
arg	46:104	46:109	5	false
water	46:104	0:0	6	false
arg	46:111	46:117	5	false
water	46:111	0:0	6	false
water	46:118	0:0	4	;
if	47:8	48:130	4	(p_fmto -> i_chroma == VLC_CODEC_RGBA || p_fmto -> i_chroma == VLC_CODEC_BGRA)
cond	47:12	47:70	5	p_fmto -> i_chroma == VLC_CODEC_RGBA || p_fmto -> i_chroma == VLC_CODEC_BGRA
water	47:12	0:0	6	p_fmto
op	47:18	0:0	6	->
water	47:20	0:0	6	i_chroma
op	47:29	0:0	6	==
water	47:32	0:0	6	VLC_CODEC_RGBA
op	47:47	0:0	6	||
water	47:50	0:0	6	p_fmto
op	47:56	0:0	6	->
water	47:58	0:0	6	i_chroma
op	47:67	0:0	6	==
water	47:70	0:0	6	VLC_CODEC_BGRA
stmts	48:12	48:130	5	
call	48:12	48:129	6	InjectA
arg	48:21	48:26	7	p_dst
water	48:21	0:0	8	p_dst
arg	48:28	48:42	7	p_sys->p_dst_a
water	48:28	0:0	8	p_sys
op	48:33	0:0	8	->
water	48:35	0:0	8	p_dst_a
arg	48:44	48:92	7	p_fmto->i_visible_width*p_sys->i_extend_factor
water	48:44	0:0	8	p_fmto
op	48:50	0:0	8	->
water	48:52	0:0	8	i_visible_width
op	48:68	0:0	8	*
water	48:70	0:0	8	p_sys
op	48:75	0:0	8	->
water	48:77	0:0	8	i_extend_factor
arg	48:94	48:118	7	p_fmto->i_visible_height
water	48:94	0:0	8	p_fmto
op	48:100	0:0	8	->
water	48:102	0:0	8	i_visible_height
arg	48:120	48:129	7	OFFSET_A
water	48:120	0:0	8	OFFSET_A
water	48:130	0:0	6	;
else	49:8	50:123	4
stmts	49:13	50:123	5	
if	49:13	50:123	6	(p_fmto -> i_chroma == VLC_CODEC_ARGB)
cond	49:17	49:37	7	p_fmto -> i_chroma == VLC_CODEC_ARGB
water	49:17	0:0	8	p_fmto
op	49:23	0:0	8	->
water	49:25	0:0	8	i_chroma
op	49:34	0:0	8	==
water	49:37	0:0	8	VLC_CODEC_ARGB
stmts	50:12	50:123	7	
call	50:12	50:122	8	InjectA
arg	50:21	50:26	9	p_dst
water	50:21	0:0	10	p_dst
arg	50:28	50:42	9	p_sys->p_dst_a
water	50:28	0:0	10	p_sys
op	50:33	0:0	10	->
water	50:35	0:0	10	p_dst_a
arg	50:44	50:92	9	p_fmto->i_visible_width*p_sys->i_extend_factor
water	50:44	0:0	10	p_fmto
op	50:50	0:0	10	->
water	50:52	0:0	10	i_visible_width
op	50:68	0:0	10	*
water	50:70	0:0	10	p_sys
op	50:75	0:0	10	->
water	50:77	0:0	10	i_extend_factor
arg	50:94	50:118	9	p_fmto->i_visible_height
water	50:94	0:0	10	p_fmto
op	50:100	0:0	10	->
water	50:102	0:0	10	i_visible_height
arg	50:120	50:122	9	0
water	50:120	0:0	10	0
water	50:123	0:0	8	;
else	51:8	52:67	4
stmts	52:12	52:67	5	
call	52:12	52:66	6	plane_CopyPixels
arg	52:30	52:46	7	p_dst->p+A_PLANE
water	52:30	0:0	8	p_dst
op	52:35	0:0	8	->
water	52:37	0:0	8	p
op	52:38	0:0	8	+
water	52:39	0:0	8	A_PLANE
arg	52:48	52:66	7	p_sys->p_dst_a->p
water	52:48	0:0	8	p_sys
op	52:53	0:0	8	->
water	52:55	0:0	8	p_dst_a
op	52:62	0:0	8	->
water	52:64	0:0	8	p
water	52:67	0:0	6	;
water	53:4	0:0	4	}
else	54:4	63:4	2
stmts	54:9	63:4	3	
if	54:9	63:4	4	(p_sys -> b_add_a)
cond	54:13	54:20	5	p_sys -> b_add_a
water	54:13	0:0	6	p_sys
op	54:18	0:0	6	->
water	54:20	0:0	6	b_add_a
stmts	55:4	63:4	5	
water	55:4	0:0	6	{
if	57:8	58:43	6	(p_fmto -> i_chroma == VLC_CODEC_RGBA || p_fmto -> i_chroma == VLC_CODEC_BGRA)
cond	57:12	57:70	7	p_fmto -> i_chroma == VLC_CODEC_RGBA || p_fmto -> i_chroma == VLC_CODEC_BGRA
water	57:12	0:0	8	p_fmto
op	57:18	0:0	8	->
water	57:20	0:0	8	i_chroma
op	57:29	0:0	8	==
water	57:32	0:0	8	VLC_CODEC_RGBA
op	57:47	0:0	8	||
water	57:50	0:0	8	p_fmto
op	57:56	0:0	8	->
water	57:58	0:0	8	i_chroma
op	57:67	0:0	8	==
water	57:70	0:0	8	VLC_CODEC_BGRA
stmts	58:12	58:43	7	
call	58:12	58:42	8	FillA
arg	58:19	58:31	9	&p_dst->p[0]
op	58:19	0:0	10	&
water	58:20	0:0	10	p_dst
op	58:25	0:0	10	->
water	58:27	0:0	10	p
op	58:28	0:0	10	[
water	58:29	0:0	10	0
op	58:30	0:0	10	]
arg	58:33	58:42	9	OFFSET_A
water	58:33	0:0	10	OFFSET_A
water	58:43	0:0	8	;
else	59:8	60:36	6
stmts	59:13	60:36	7	
if	59:13	60:36	8	(p_fmto -> i_chroma == VLC_CODEC_ARGB)
cond	59:17	59:37	9	p_fmto -> i_chroma == VLC_CODEC_ARGB
water	59:17	0:0	10	p_fmto
op	59:23	0:0	10	->
water	59:25	0:0	10	i_chroma
op	59:34	0:0	10	==
water	59:37	0:0	10	VLC_CODEC_ARGB
stmts	60:12	60:36	9	
call	60:12	60:35	10	FillA
arg	60:19	60:31	11	&p_dst->p[0]
op	60:19	0:0	12	&
water	60:20	0:0	12	p_dst
op	60:25	0:0	12	->
water	60:27	0:0	12	p
op	60:28	0:0	12	[
water	60:29	0:0	12	0
op	60:30	0:0	12	]
arg	60:33	60:35	11	0
water	60:33	0:0	12	0
water	60:36	0:0	10	;
else	61:8	62:42	6
stmts	62:12	62:42	7	
call	62:12	62:41	8	FillA
arg	62:19	62:37	9	&p_dst->p[A_PLANE]
op	62:19	0:0	10	&
water	62:20	0:0	10	p_dst
op	62:25	0:0	10	->
water	62:27	0:0	10	p
op	62:28	0:0	10	[
water	62:29	0:0	10	A_PLANE
op	62:36	0:0	10	]
arg	62:39	62:41	9	0
water	62:39	0:0	10	0
water	62:42	0:0	8	;
water	63:4	0:0	6	}
if	64:4	67:4	2	(p_sys -> i_extend_factor != 1)
cond	64:8	64:34	3	p_sys -> i_extend_factor != 1
water	64:8	0:0	4	p_sys
op	64:13	0:0	4	->
water	64:15	0:0	4	i_extend_factor
op	64:31	0:0	4	!=
water	64:34	0:0	4	1
stmts	65:4	67:4	3	
water	65:4	0:0	4	{
call	66:8	66:45	4	picture_CopyPixels
arg	66:28	66:37	5	p_pic_dst
water	66:28	0:0	6	p_pic_dst
arg	66:39	66:45	5	p_dst
water	66:39	0:0	6	p_dst
water	66:46	0:0	4	;
water	67:4	0:0	4	}
call	68:4	68:45	2	picture_CopyProperties
arg	68:28	68:37	3	p_pic_dst
water	68:28	0:0	4	p_pic_dst
arg	68:39	68:45	3	p_pic
water	68:39	0:0	4	p_pic
water	68:46	0:0	2	;
call	69:4	69:27	2	picture_Release
arg	69:21	69:27	3	p_pic
water	69:21	0:0	4	p_pic
water	69:28	0:0	2	;
return	70:4	70:20	2	p_pic_dst
water	70:11	0:0	3	p_pic_dst

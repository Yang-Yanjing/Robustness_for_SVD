decl	1:7	1:57	0	HRESULT	Flush
water	1:20	0:0	0	(
water	1:22	0:0	0	aout_stream_sys_t
op	1:40	0:0	0	*
water	1:41	0:0	0	sys
water	1:44	0:0	0	,
water	1:46	0:0	0	bool
water	1:51	0:0	0	drain
water	1:56	0:0	0	)
func	2:0	29:0	0	static HRESULT	TimeGet
params	2:22	0:0	1	
param	2:24	2:46	2	aout_stream_sys_t *	sys
param	2:48	2:63	2	mtime_t *	delay
stmnts	0:0	28:16	1	
decl	4:4	4:22	2	DWORD	read
water	4:14	0:0	2	,
decl	4:4	4:22	2	DWORD	status
decl	5:4	5:14	2	HRESULT	hr
decl	6:4	6:16	2	mtime_t	size
water	7:4	0:0	2	hr
op	7:7	0:0	2	=
call	7:9	7:64	2	IDirectSoundBuffer_GetStatus
arg	7:39	7:54	3	sys->p_dsbuffer
water	7:39	0:0	4	sys
op	7:42	0:0	4	->
water	7:44	0:0	4	p_dsbuffer
arg	7:56	7:64	3	&status
op	7:56	0:0	4	&
water	7:57	0:0	4	status
water	7:65	0:0	2	;
if	8:4	9:17	2	(hr != DS_OK)
cond	8:8	8:14	3	hr != DS_OK
water	8:8	0:0	4	hr
op	8:11	0:0	4	!=
water	8:14	0:0	4	DS_OK
stmts	9:8	9:17	3	
return	9:8	9:17	4	hr
water	9:15	0:0	5	hr
if	10:4	11:33	2	(! ( status & DSBSTATUS_PLAYING ))
cond	10:8	10:36	3	! ( status & DSBSTATUS_PLAYING )
op	10:8	0:0	4	!
water	10:9	0:0	4	(
water	10:10	0:0	4	status
op	10:17	0:0	4	&
water	10:19	0:0	4	DSBSTATUS_PLAYING
water	10:36	0:0	4	)
stmts	11:8	11:33	3	
return	11:8	11:33	4	DSERR_INVALIDCALL
water	11:15	0:0	5	DSERR_INVALIDCALL
water	12:4	0:0	2	hr
op	12:7	0:0	2	=
call	12:9	12:77	2	IDirectSoundBuffer_GetCurrentPosition
arg	12:48	12:63	3	sys->p_dsbuffer
water	12:48	0:0	4	sys
op	12:51	0:0	4	->
water	12:53	0:0	4	p_dsbuffer
arg	12:65	12:70	3	&read
op	12:65	0:0	4	&
water	12:66	0:0	4	read
arg	12:72	12:77	3	NULL
water	12:72	0:0	4	NULL
water	12:78	0:0	2	;
if	13:4	14:17	2	(hr != DS_OK)
cond	13:8	13:14	3	hr != DS_OK
water	13:8	0:0	4	hr
op	13:11	0:0	4	!=
water	13:14	0:0	4	DS_OK
stmts	14:8	14:17	3	
return	14:8	14:17	4	hr
water	14:15	0:0	5	hr
water	15:4	0:0	2	size
op	15:9	0:0	2	=
water	15:11	0:0	2	(
water	15:12	0:0	2	mtime_t
water	15:19	0:0	2	)
water	15:20	0:0	2	read
op	15:25	0:0	2	-
water	15:27	0:0	2	sys
op	15:30	0:0	2	->
water	15:32	0:0	2	i_last_read
water	15:43	0:0	2	;
if	18:4	19:29	2	(size == 0)
cond	18:8	18:17	3	size == 0
water	18:8	0:0	4	size
op	18:13	0:0	4	==
water	18:17	0:0	4	0
stmts	19:8	19:29	3	
return	19:8	19:29	4	DSERR_GENERIC
water	19:15	0:0	5	DSERR_GENERIC
else	20:4	21:25	2
stmts	20:9	21:25	3	
if	20:9	21:25	4	(size < 0)
cond	20:13	20:20	5	size < 0
water	20:13	0:0	6	size
op	20:18	0:0	6	<
water	20:20	0:0	6	0
stmts	21:6	21:25	5	
water	21:6	0:0	6	size
op	21:11	0:0	6	+=
water	21:14	0:0	6	DS_BUF_SIZE
water	21:25	0:0	6	;
water	22:4	0:0	2	sys
op	22:7	0:0	2	->
water	22:9	0:0	2	i_data
op	22:16	0:0	2	-=
water	22:19	0:0	2	size
water	22:23	0:0	2	;
water	23:4	0:0	2	sys
op	23:7	0:0	2	->
water	23:9	0:0	2	i_last_read
op	23:21	0:0	2	=
water	23:23	0:0	2	read
water	23:27	0:0	2	;
if	24:4	26:25	2	(sys -> i_data < 0)
cond	24:8	24:22	3	sys -> i_data < 0
water	24:8	0:0	4	sys
op	24:11	0:0	4	->
water	24:13	0:0	4	i_data
op	24:20	0:0	4	<
water	24:22	0:0	4	0
stmts	26:8	26:25	3	
call	26:8	26:24	4	Flush
arg	26:14	26:17	5	sys
water	26:14	0:0	6	sys
arg	26:19	26:24	5	false
water	26:19	0:0	6	false
water	26:25	0:0	4	;
op	27:4	0:0	2	*
water	27:5	0:0	2	delay
op	27:11	0:0	2	=
water	27:13	0:0	2	(
water	27:15	0:0	2	sys
op	27:18	0:0	2	->
water	27:20	0:0	2	i_data
op	27:27	0:0	2	/
water	27:29	0:0	2	sys
op	27:32	0:0	2	->
water	27:34	0:0	2	i_bytes_per_sample
water	27:53	0:0	2	)
op	27:55	0:0	2	*
water	27:57	0:0	2	CLOCK_FREQ
op	27:68	0:0	2	/
water	27:70	0:0	2	sys
op	27:73	0:0	2	->
water	27:75	0:0	2	i_rate
water	27:81	0:0	2	;
return	28:4	28:16	2	DS_OK
water	28:11	0:0	3	DS_OK

func	2:0	30:0	0	void	vout_SendDisplayEventMouse
params	2:31	0:0	1	
param	2:32	2:51	2	vout_thread_t *	vout
param	2:53	2:73	2	const vlc_mouse_t *	m
stmnts	0:0	29:23	1	
decl	4:4	4:26	2	vlc_mouse_t	tmp1
water	4:20	0:0	2	,
decl	4:4	4:26	2	vlc_mouse_t	tmp2
if	6:4	7:14	2	(vout -> p -> spu &&spu_ProcessMouse (vout -> p -> spu ,m ,& vout -> p -> display . vd -> source ))
cond	6:8	6:87	3	vout -> p -> spu &&spu_ProcessMouse (vout -> p -> spu ,m ,& vout -> p -> display . vd -> source )
water	6:8	0:0	4	vout
op	6:12	0:0	4	->
water	6:14	0:0	4	p
op	6:15	0:0	4	->
water	6:17	0:0	4	spu
op	6:21	0:0	4	&&
call	6:24	6:87	4	spu_ProcessMouse
arg	6:42	6:54	5	vout->p->spu
water	6:42	0:0	6	vout
op	6:46	0:0	6	->
water	6:48	0:0	6	p
op	6:49	0:0	6	->
water	6:51	0:0	6	spu
arg	6:56	6:57	5	m
water	6:56	0:0	6	m
arg	6:59	6:87	5	&vout->p->display.vd->source
op	6:59	0:0	6	&
water	6:60	0:0	6	vout
op	6:64	0:0	6	->
water	6:66	0:0	6	p
op	6:67	0:0	6	->
water	6:69	0:0	6	display
op	6:76	0:0	6	.
water	6:77	0:0	6	vd
op	6:79	0:0	6	->
water	6:81	0:0	6	source
stmts	7:8	7:14	3	
return	7:8	7:14	4	
call	8:4	8:42	2	vlc_mutex_lock
arg	8:20	8:42	3	&vout->p->filter.lock
op	8:20	0:0	4	&
water	8:21	0:0	4	vout
op	8:25	0:0	4	->
water	8:27	0:0	4	p
op	8:28	0:0	4	->
water	8:30	0:0	4	filter
op	8:36	0:0	4	.
water	8:37	0:0	4	lock
water	8:43	0:0	2	;
if	9:4	14:4	2	(vout -> p -> filter . chain_static && vout -> p -> filter . chain_interactive)
cond	9:8	9:56	3	vout -> p -> filter . chain_static && vout -> p -> filter . chain_interactive
water	9:8	0:0	4	vout
op	9:12	0:0	4	->
water	9:14	0:0	4	p
op	9:15	0:0	4	->
water	9:17	0:0	4	filter
op	9:23	0:0	4	.
water	9:24	0:0	4	chain_static
op	9:37	0:0	4	&&
water	9:40	0:0	4	vout
op	9:44	0:0	4	->
water	9:46	0:0	4	p
op	9:47	0:0	4	->
water	9:49	0:0	4	filter
op	9:55	0:0	4	.
water	9:56	0:0	4	chain_interactive
stmts	9:75	14:4	3	
water	9:75	0:0	4	{
if	10:8	11:21	4	(!filter_chain_MouseFilter (vout -> p -> filter . chain_interactive ,& tmp1 ,m ))
cond	10:12	10:81	5	!filter_chain_MouseFilter (vout -> p -> filter . chain_interactive ,& tmp1 ,m )
op	10:12	0:0	6	!
call	10:13	10:81	6	filter_chain_MouseFilter
arg	10:38	10:71	7	vout->p->filter.chain_interactive
water	10:38	0:0	8	vout
op	10:42	0:0	8	->
water	10:44	0:0	8	p
op	10:45	0:0	8	->
water	10:47	0:0	8	filter
op	10:53	0:0	8	.
water	10:54	0:0	8	chain_interactive
arg	10:73	10:78	7	&tmp1
op	10:73	0:0	8	&
water	10:74	0:0	8	tmp1
arg	10:80	10:81	7	m
water	10:80	0:0	8	m
stmts	11:12	11:21	5	
water	11:12	0:0	6	m
op	11:14	0:0	6	=
op	11:16	0:0	6	&
water	11:17	0:0	6	tmp1
water	11:21	0:0	6	;
if	12:8	13:21	4	(!filter_chain_MouseFilter (vout -> p -> filter . chain_static ,& tmp2 ,m ))
cond	12:12	12:81	5	!filter_chain_MouseFilter (vout -> p -> filter . chain_static ,& tmp2 ,m )
op	12:12	0:0	6	!
call	12:13	12:81	6	filter_chain_MouseFilter
arg	12:38	12:66	7	vout->p->filter.chain_static
water	12:38	0:0	8	vout
op	12:42	0:0	8	->
water	12:44	0:0	8	p
op	12:45	0:0	8	->
water	12:47	0:0	8	filter
op	12:53	0:0	8	.
water	12:54	0:0	8	chain_static
arg	12:73	12:78	7	&tmp2
op	12:73	0:0	8	&
water	12:74	0:0	8	tmp2
arg	12:80	12:81	7	m
water	12:80	0:0	8	m
stmts	13:12	13:21	5	
water	13:12	0:0	6	m
op	13:14	0:0	6	=
op	13:16	0:0	6	&
water	13:17	0:0	6	tmp2
water	13:21	0:0	6	;
water	14:4	0:0	4	}
call	15:4	15:44	2	vlc_mutex_unlock
arg	15:22	15:44	3	&vout->p->filter.lock
op	15:22	0:0	4	&
water	15:23	0:0	4	vout
op	15:27	0:0	4	->
water	15:29	0:0	4	p
op	15:30	0:0	4	->
water	15:32	0:0	4	filter
op	15:38	0:0	4	.
water	15:39	0:0	4	lock
water	15:45	0:0	2	;
if	16:4	18:4	2	(vlc_mouse_HasMoved (& vout -> p -> mouse ,m ))
cond	16:8	16:45	3	vlc_mouse_HasMoved (& vout -> p -> mouse ,m )
call	16:8	16:45	4	vlc_mouse_HasMoved
arg	16:27	16:42	5	&vout->p->mouse
op	16:27	0:0	6	&
water	16:28	0:0	6	vout
op	16:32	0:0	6	->
water	16:34	0:0	6	p
op	16:35	0:0	6	->
water	16:37	0:0	6	mouse
arg	16:44	16:45	5	m
water	16:44	0:0	6	m
stmts	16:48	18:4	3	
water	16:48	0:0	4	{
call	17:8	17:53	4	vout_SendEventMouseMoved
arg	17:33	17:37	5	vout
water	17:33	0:0	6	vout
arg	17:39	17:45	5	m->i_x
water	17:39	0:0	6	m
op	17:40	0:0	6	->
water	17:42	0:0	6	i_x
arg	17:47	17:53	5	m->i_y
water	17:47	0:0	6	m
op	17:48	0:0	6	->
water	17:50	0:0	6	i_y
water	17:54	0:0	4	;
water	18:4	0:0	4	}
if	19:4	26:4	2	(vlc_mouse_HasButton (& vout -> p -> mouse ,m ))
cond	19:8	19:46	3	vlc_mouse_HasButton (& vout -> p -> mouse ,m )
call	19:8	19:46	4	vlc_mouse_HasButton
arg	19:28	19:43	5	&vout->p->mouse
op	19:28	0:0	6	&
water	19:29	0:0	6	vout
op	19:33	0:0	6	->
water	19:35	0:0	6	p
op	19:36	0:0	6	->
water	19:38	0:0	6	mouse
arg	19:45	19:46	5	m
water	19:45	0:0	6	m
stmts	19:49	26:4	3	
water	19:49	0:0	4	{
for	20:8	25:8	4	(unsigned button = 0 ;button < MOUSE_BUTTON_MAX;button ++)
forinit	20:13	20:32	5	unsigned button = 0 ;
water	20:13	0:0	6	unsigned
water	20:22	0:0	6	button
op	20:29	0:0	6	=
water	20:31	0:0	6	0
water	20:32	0:0	6	;
cond	20:34	20:43	5	button < MOUSE_BUTTON_MAX
water	20:34	0:0	6	button
op	20:41	0:0	6	<
water	20:43	0:0	6	MOUSE_BUTTON_MAX
forexpr	20:61	20:67	5	button ++
water	20:61	0:0	6	button
op	20:67	0:0	6	++
stmts	20:71	25:8	5	
water	20:71	0:0	6	{
if	21:12	22:56	6	(vlc_mouse_HasPressed (& vout -> p -> mouse ,m ,button ))
cond	21:16	21:63	7	vlc_mouse_HasPressed (& vout -> p -> mouse ,m ,button )
call	21:16	21:63	8	vlc_mouse_HasPressed
arg	21:37	21:52	9	&vout->p->mouse
op	21:37	0:0	10	&
water	21:38	0:0	10	vout
op	21:42	0:0	10	->
water	21:44	0:0	10	p
op	21:45	0:0	10	->
water	21:47	0:0	10	mouse
arg	21:54	21:55	9	m
water	21:54	0:0	10	m
arg	21:57	21:63	9	button
water	21:57	0:0	10	button
stmts	22:16	22:56	7	
call	22:16	22:55	8	vout_SendEventMousePressed
arg	22:43	22:47	9	vout
water	22:43	0:0	10	vout
arg	22:49	22:55	9	button
water	22:49	0:0	10	button
water	22:56	0:0	8	;
else	23:12	24:57	6
stmts	23:17	24:57	7	
if	23:17	24:57	8	(vlc_mouse_HasReleased (& vout -> p -> mouse ,m ,button ))
cond	23:21	23:69	9	vlc_mouse_HasReleased (& vout -> p -> mouse ,m ,button )
call	23:21	23:69	10	vlc_mouse_HasReleased
arg	23:43	23:58	11	&vout->p->mouse
op	23:43	0:0	12	&
water	23:44	0:0	12	vout
op	23:48	0:0	12	->
water	23:50	0:0	12	p
op	23:51	0:0	12	->
water	23:53	0:0	12	mouse
arg	23:60	23:61	11	m
water	23:60	0:0	12	m
arg	23:63	23:69	11	button
water	23:63	0:0	12	button
stmts	24:16	24:57	9	
call	24:16	24:56	10	vout_SendEventMouseReleased
arg	24:44	24:48	11	vout
water	24:44	0:0	12	vout
arg	24:50	24:56	11	button
water	24:50	0:0	12	button
water	24:57	0:0	10	;
water	25:8	0:0	6	}
water	26:4	0:0	4	}
if	27:4	28:44	2	(m -> b_double_click)
cond	27:8	27:11	3	m -> b_double_click
water	27:8	0:0	4	m
op	27:9	0:0	4	->
water	27:11	0:0	4	b_double_click
stmts	28:8	28:44	3	
call	28:8	28:43	4	vout_SendEventMouseDoubleClick
arg	28:39	28:43	5	vout
water	28:39	0:0	6	vout
water	28:44	0:0	4	;
water	29:4	0:0	2	vout
op	29:8	0:0	2	->
water	29:10	0:0	2	p
op	29:11	0:0	2	->
water	29:13	0:0	2	mouse
op	29:19	0:0	2	=
op	29:21	0:0	2	*
water	29:22	0:0	2	m
water	29:23	0:0	2	;

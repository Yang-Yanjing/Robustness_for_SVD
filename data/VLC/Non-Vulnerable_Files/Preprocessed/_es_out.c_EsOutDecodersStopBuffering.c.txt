func	2:0	69:0	0	static void	EsOutDecodersStopBuffering
params	2:38	0:0	1	
param	2:40	2:53	2	es_out_t *	out
param	2:55	2:69	2	bool	b_forced
stmnts	0:0	68:4	1	
decl	4:4	4:36	2	es_out_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	out
op	4:29	0:0	2	->
water	4:31	0:0	2	p_sys
decl	5:4	5:13	2	int	i_ret
decl	6:4	6:26	2	mtime_t	i_stream_start
decl	7:4	7:26	2	mtime_t	i_system_start
decl	8:4	8:29	2	mtime_t	i_stream_duration
decl	9:4	9:29	2	mtime_t	i_system_duration
if	10:4	13:14	2	(input_clock_GetState (p_sys -> p_pgrm -> p_clock ,& i_stream_start ,& i_system_start ,& i_stream_duration ,& i_system_duration ))
cond	10:8	12:73	3	input_clock_GetState (p_sys -> p_pgrm -> p_clock ,& i_stream_start ,& i_system_start ,& i_stream_duration ,& i_system_duration )
call	10:8	12:73	4	input_clock_GetState
arg	10:30	10:52	5	p_sys->p_pgrm->p_clock
water	10:30	0:0	6	p_sys
op	10:35	0:0	6	->
water	10:37	0:0	6	p_pgrm
op	10:43	0:0	6	->
water	10:45	0:0	6	p_clock
arg	11:34	11:49	5	&i_stream_start
op	11:34	0:0	6	&
water	11:35	0:0	6	i_stream_start
arg	11:51	11:66	5	&i_system_start
op	11:51	0:0	6	&
water	11:52	0:0	6	i_system_start
arg	12:34	12:52	5	&i_stream_duration
op	12:34	0:0	6	&
water	12:35	0:0	6	i_stream_duration
arg	12:54	12:73	5	&i_system_duration
op	12:54	0:0	6	&
water	12:55	0:0	6	i_system_duration
stmts	13:8	13:14	3	
return	13:8	13:14	4	
decl	14:4	14:34	2	mtime_t	i_preroll_duration
op	14:31	0:0	2	=
water	14:33	0:0	2	0
if	15:4	16:78	2	(p_sys -> i_preroll_end >= 0)
cond	15:8	15:32	3	p_sys -> i_preroll_end >= 0
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	i_preroll_end
op	15:29	0:0	4	>=
water	15:32	0:0	4	0
stmts	16:8	16:78	3	
water	16:8	0:0	4	i_preroll_duration
op	16:27	0:0	4	=
call	16:29	16:77	4	__MAX
arg	16:36	16:73	5	p_sys->i_preroll_end-i_stream_start
water	16:36	0:0	6	p_sys
op	16:41	0:0	6	->
water	16:43	0:0	6	i_preroll_end
op	16:57	0:0	6	-
water	16:59	0:0	6	i_stream_start
arg	16:75	16:77	5	0
water	16:75	0:0	6	0
water	16:78	0:0	4	;
decl	17:4	19:107	2	const mtime_t	i_buffering_duration
op	17:39	0:0	2	=
water	17:41	0:0	2	p_sys
op	17:46	0:0	2	->
water	17:48	0:0	2	i_pts_delay
op	17:60	0:0	2	+
water	18:41	0:0	2	i_preroll_duration
op	18:60	0:0	2	+
water	19:41	0:0	2	p_sys
op	19:46	0:0	2	->
water	19:48	0:0	2	i_buffering_extra_stream
op	19:73	0:0	2	-
water	19:75	0:0	2	p_sys
op	19:80	0:0	2	->
water	19:82	0:0	2	i_buffering_extra_initial
if	20:4	30:4	2	(i_stream_duration <= i_buffering_duration && ! b_forced)
cond	20:8	20:54	3	i_stream_duration <= i_buffering_duration && ! b_forced
water	20:8	0:0	4	i_stream_duration
op	20:26	0:0	4	<=
water	20:29	0:0	4	i_buffering_duration
op	20:50	0:0	4	&&
op	20:53	0:0	4	!
water	20:54	0:0	4	b_forced
stmts	21:4	30:4	3	
water	21:4	0:0	4	{
decl	22:8	22:22	4	double	f_level
if	23:8	24:23	4	(i_buffering_duration == 0)
cond	23:12	23:36	5	i_buffering_duration == 0
water	23:12	0:0	6	i_buffering_duration
op	23:33	0:0	6	==
water	23:36	0:0	6	0
stmts	24:12	24:23	5	
water	24:12	0:0	6	f_level
op	24:20	0:0	6	=
water	24:22	0:0	6	0
water	24:23	0:0	6	;
else	25:8	26:82	4
stmts	26:12	26:82	5	
water	26:12	0:0	6	f_level
op	26:20	0:0	6	=
call	26:22	26:81	6	__MAX
arg	26:29	26:77	7	(double)i_stream_duration/i_buffering_duration
water	26:29	0:0	8	(
water	26:30	0:0	8	double
water	26:36	0:0	8	)
water	26:37	0:0	8	i_stream_duration
op	26:55	0:0	8	/
water	26:57	0:0	8	i_buffering_duration
arg	26:79	26:81	7	0
water	26:79	0:0	8	0
water	26:82	0:0	6	;
call	27:8	27:54	4	input_SendEventCache
arg	27:30	27:44	5	p_sys->p_input
water	27:30	0:0	6	p_sys
op	27:35	0:0	6	->
water	27:37	0:0	6	p_input
arg	27:46	27:54	5	f_level
water	27:46	0:0	6	f_level
water	27:55	0:0	4	;
call	28:8	28:72	4	msg_Dbg
arg	28:17	28:31	5	p_sys->p_input
water	28:17	0:0	6	p_sys
op	28:22	0:0	6	->
water	28:24	0:0	6	p_input
arg	28:33	28:49	5	"Buffering %d%%"
water	28:33	0:0	6	"Buffering %d%%"
arg	28:51	28:72	5	(int)(100*f_level)
call	28:51	28:70	6	(int)
arg	28:57	28:70	7	100*f_level
water	28:57	0:0	8	100
op	28:61	0:0	8	*
water	28:63	0:0	8	f_level
water	28:73	0:0	4	;
return	29:8	29:14	4	
water	30:4	0:0	4	}
call	31:4	31:46	2	input_SendEventCache
arg	31:26	31:40	3	p_sys->p_input
water	31:26	0:0	4	p_sys
op	31:31	0:0	4	->
water	31:33	0:0	4	p_input
arg	31:42	31:46	3	1.0
water	31:42	0:0	4	1
op	31:43	0:0	4	.
water	31:44	0:0	4	0
water	31:47	0:0	2	;
call	32:4	33:75	2	msg_Dbg
arg	32:13	32:27	3	p_sys->p_input
water	32:13	0:0	4	p_sys
op	32:18	0:0	4	->
water	32:20	0:0	4	p_input
arg	32:29	32:69	3	"Stream buffering done (%d ms in %d ms)"
water	32:29	0:0	4	"Stream buffering done (%d ms in %d ms)"
arg	33:14	33:43	3	(int)(i_stream_duration/1000)
call	33:14	33:42	4	(int)
arg	33:20	33:42	5	i_stream_duration/1000
water	33:20	0:0	6	i_stream_duration
op	33:37	0:0	6	/
water	33:38	0:0	6	1000
arg	33:45	33:75	3	(int)(i_system_duration/1000)
call	33:45	33:73	4	(int)
arg	33:51	33:73	5	i_system_duration/1000
water	33:51	0:0	6	i_system_duration
op	33:68	0:0	6	/
water	33:69	0:0	6	1000
water	33:76	0:0	2	;
water	34:4	0:0	2	p_sys
op	34:9	0:0	2	->
water	34:11	0:0	2	b_buffering
op	34:23	0:0	2	=
water	34:25	0:0	2	false
water	34:30	0:0	2	;
water	35:4	0:0	2	p_sys
op	35:9	0:0	2	->
water	35:11	0:0	2	i_preroll_end
op	35:25	0:0	2	=
op	35:27	0:0	2	-
water	35:28	0:0	2	1
water	35:29	0:0	2	;
if	36:4	40:4	2	(p_sys -> i_buffering_extra_initial > 0)
cond	36:8	36:43	3	p_sys -> i_buffering_extra_initial > 0
water	36:8	0:0	4	p_sys
op	36:13	0:0	4	->
water	36:15	0:0	4	i_buffering_extra_initial
op	36:41	0:0	4	>
water	36:43	0:0	4	0
stmts	37:4	40:4	3	
water	37:4	0:0	4	{
return	39:8	39:14	4	
water	40:4	0:0	4	}
decl	41:4	41:53	2	const mtime_t	i_decoder_buffering_start
op	41:44	0:0	2	=
call	41:46	41:52	3	mdate
for	42:4	50:4	2	( int i = 0 ;i < p_sys -> i_es;i ++)
forinit	0:0	42:18	3	 int i = 0 ;
decl	42:9	42:18	4	int	i
op	42:15	0:0	4	=
water	42:17	0:0	4	0
cond	42:20	42:31	3	i < p_sys -> i_es
water	42:20	0:0	4	i
op	42:22	0:0	4	<
water	42:24	0:0	4	p_sys
op	42:29	0:0	4	->
water	42:31	0:0	4	i_es
forexpr	42:37	42:38	3	i ++
water	42:37	0:0	4	i
op	42:38	0:0	4	++
stmts	43:4	50:4	3	
water	43:4	0:0	4	{
decl	44:8	44:40	4	es_out_id_t	*p_es
op	44:26	0:0	4	=
water	44:28	0:0	4	p_sys
op	44:33	0:0	4	->
water	44:35	0:0	4	es
op	44:37	0:0	4	[
water	44:38	0:0	4	i
op	44:39	0:0	4	]
if	45:8	46:20	4	(! p_es -> p_dec || p_es -> fmt . i_cat == SPU_ES)
cond	45:12	45:47	5	! p_es -> p_dec || p_es -> fmt . i_cat == SPU_ES
op	45:12	0:0	6	!
water	45:13	0:0	6	p_es
op	45:17	0:0	6	->
water	45:19	0:0	6	p_dec
op	45:25	0:0	6	||
water	45:28	0:0	6	p_es
op	45:32	0:0	6	->
water	45:34	0:0	6	fmt
op	45:37	0:0	6	.
water	45:38	0:0	6	i_cat
op	45:44	0:0	6	==
water	45:47	0:0	6	SPU_ES
stmts	46:12	46:20	5	
continue	46:12	46:20	6	
call	47:8	47:39	4	input_DecoderWait
arg	47:27	47:39	5	p_es->p_dec
water	47:27	0:0	6	p_es
op	47:31	0:0	6	->
water	47:33	0:0	6	p_dec
water	47:40	0:0	4	;
if	48:8	49:51	4	(p_es -> p_dec_record)
cond	48:12	48:18	5	p_es -> p_dec_record
water	48:12	0:0	6	p_es
op	48:16	0:0	6	->
water	48:18	0:0	6	p_dec_record
stmts	49:12	49:51	5	
call	49:12	49:50	6	input_DecoderWait
arg	49:31	49:50	7	p_es->p_dec_record
water	49:31	0:0	8	p_es
op	49:35	0:0	8	->
water	49:37	0:0	8	p_dec_record
water	49:51	0:0	6	;
water	50:4	0:0	4	}
call	51:4	52:62	2	msg_Dbg
arg	51:13	51:27	3	p_sys->p_input
water	51:13	0:0	4	p_sys
op	51:18	0:0	4	->
water	51:20	0:0	4	p_input
arg	51:29	51:57	3	"Decoder wait done in %d ms"
water	51:29	0:0	4	"Decoder wait done in %d ms"
arg	52:14	52:62	3	(int)(mdate()-i_decoder_buffering_start)/1000
call	52:14	52:55	4	(int)
arg	52:20	52:55	5	mdate()-i_decoder_buffering_start
call	52:20	52:26	6	mdate
op	52:28	0:0	6	-
water	52:30	0:0	6	i_decoder_buffering_start
op	52:56	0:0	4	/
water	52:57	0:0	4	1000
water	52:63	0:0	2	;
call	54:4	54:64	2	input_resource_TerminateVout
arg	54:34	54:64	3	p_sys->p_input->p->p_resource
water	54:34	0:0	4	p_sys
op	54:39	0:0	4	->
water	54:41	0:0	4	p_input
op	54:48	0:0	4	->
water	54:50	0:0	4	p
op	54:51	0:0	4	->
water	54:53	0:0	4	p_resource
water	54:65	0:0	2	;
decl	56:4	56:42	2	const mtime_t	i_wakeup_delay
op	56:33	0:0	2	=
water	56:35	0:0	2	10
op	56:37	0:0	2	*
water	56:38	0:0	2	1000
decl	57:4	57:82	2	const mtime_t	i_current_date
op	57:33	0:0	2	=
water	57:35	0:0	2	p_sys
op	57:40	0:0	2	->
water	57:42	0:0	2	b_paused
water	57:51	0:0	2	?
water	57:53	0:0	2	p_sys
op	57:58	0:0	2	->
water	57:60	0:0	2	i_pause_date
water	57:73	0:0	2	:
call	57:75	57:81	3	mdate
call	58:4	59:91	2	input_clock_ChangeSystemOrigin
arg	58:36	58:58	3	p_sys->p_pgrm->p_clock
water	58:36	0:0	4	p_sys
op	58:41	0:0	4	->
water	58:43	0:0	4	p_pgrm
op	58:49	0:0	4	->
water	58:51	0:0	4	p_clock
arg	58:60	58:64	3	true
water	58:60	0:0	4	true
arg	59:36	59:91	3	i_current_date+i_wakeup_delay-i_buffering_duration
water	59:36	0:0	4	i_current_date
op	59:51	0:0	4	+
water	59:53	0:0	4	i_wakeup_delay
op	59:68	0:0	4	-
water	59:70	0:0	4	i_buffering_duration
water	59:92	0:0	2	;
for	60:4	68:4	2	( int i = 0 ;i < p_sys -> i_es;i ++)
forinit	0:0	60:18	3	 int i = 0 ;
decl	60:9	60:18	4	int	i
op	60:15	0:0	4	=
water	60:17	0:0	4	0
cond	60:20	60:31	3	i < p_sys -> i_es
water	60:20	0:0	4	i
op	60:22	0:0	4	<
water	60:24	0:0	4	p_sys
op	60:29	0:0	4	->
water	60:31	0:0	4	i_es
forexpr	60:37	60:38	3	i ++
water	60:37	0:0	4	i
op	60:38	0:0	4	++
stmts	61:4	68:4	3	
water	61:4	0:0	4	{
decl	62:8	62:40	4	es_out_id_t	*p_es
op	62:26	0:0	4	=
water	62:28	0:0	4	p_sys
op	62:33	0:0	4	->
water	62:35	0:0	4	es
op	62:37	0:0	4	[
water	62:38	0:0	4	i
op	62:39	0:0	4	]
if	63:8	64:20	4	(! p_es -> p_dec)
cond	63:12	63:19	5	! p_es -> p_dec
op	63:12	0:0	6	!
water	63:13	0:0	6	p_es
op	63:17	0:0	6	->
water	63:19	0:0	6	p_dec
stmts	64:12	64:20	5	
continue	64:12	64:20	6	
call	65:8	65:43	4	input_DecoderStopWait
arg	65:31	65:43	5	p_es->p_dec
water	65:31	0:0	6	p_es
op	65:35	0:0	6	->
water	65:37	0:0	6	p_dec
water	65:44	0:0	4	;
if	66:8	67:55	4	(p_es -> p_dec_record)
cond	66:12	66:18	5	p_es -> p_dec_record
water	66:12	0:0	6	p_es
op	66:16	0:0	6	->
water	66:18	0:0	6	p_dec_record
stmts	67:12	67:55	5	
call	67:12	67:54	6	input_DecoderStopWait
arg	67:35	67:54	7	p_es->p_dec_record
water	67:35	0:0	8	p_es
op	67:39	0:0	8	->
water	67:41	0:0	8	p_dec_record
water	67:55	0:0	6	;
water	68:4	0:0	4	}

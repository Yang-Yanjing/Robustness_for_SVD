func	2:0	34:0	0	static int	Demux
params	2:16	0:0	1	
param	2:18	2:35	2	demux_t *	p_demux
stmnts	0:0	33:12	1	
decl	4:4	4:40	2	demux_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_demux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
decl	5:4	5:24	2	block_t	*p_block
decl	6:4	6:43	2	mtime_t	i_pcr
op	6:18	0:0	2	=
call	6:20	6:42	3	date_Get
arg	6:30	6:42	4	&p_sys->pcr
op	6:30	0:0	5	&
water	6:31	0:0	5	p_sys
op	6:36	0:0	5	->
water	6:38	0:0	5	pcr
call	8:4	8:67	2	es_out_Control
arg	8:20	8:32	3	p_demux->out
water	8:20	0:0	4	p_demux
op	8:27	0:0	4	->
water	8:29	0:0	4	out
arg	8:34	8:48	3	ES_OUT_SET_PCR
water	8:34	0:0	4	ES_OUT_SET_PCR
arg	8:50	8:67	3	VLC_TS_0+i_pcr
water	8:50	0:0	4	VLC_TS_0
op	8:59	0:0	4	+
water	8:61	0:0	4	i_pcr
water	8:68	0:0	2	;
if	9:4	24:4	2	(p_sys -> b_y4m)
cond	9:8	9:15	3	p_sys -> b_y4m
water	9:8	0:0	4	p_sys
op	9:13	0:0	4	->
water	9:15	0:0	4	b_y4m
stmts	10:4	24:4	3	
water	10:4	0:0	4	{
if	13:8	14:20	4	(stream_Read (p_demux -> s ,NULL ,5 ) < 5)
cond	13:12	13:49	5	stream_Read (p_demux -> s ,NULL ,5 ) < 5
call	13:12	13:45	6	stream_Read
arg	13:25	13:35	7	p_demux->s
water	13:25	0:0	8	p_demux
op	13:32	0:0	8	->
water	13:34	0:0	8	s
arg	13:37	13:41	7	NULL
water	13:37	0:0	8	NULL
arg	13:43	13:45	7	5
water	13:43	0:0	8	5
op	13:47	0:0	6	<
water	13:49	0:0	6	5
stmts	14:12	14:20	5	
return	14:12	14:20	6	0
water	14:19	0:0	7	0
for	16:8	23:8	4	(;;)
forinit	16:13	16:13	5	;
water	16:13	0:0	6	;
cond	0:0	0:0	5	
forexpr	0:0	0:0	5	
stmts	17:8	23:8	5	
water	17:8	0:0	6	{
decl	18:12	18:21	6	uint8_t	b
if	19:12	20:24	6	(stream_Read (p_demux -> s ,& b ,1 ) < 1)
cond	19:16	19:51	7	stream_Read (p_demux -> s ,& b ,1 ) < 1
call	19:16	19:47	8	stream_Read
arg	19:29	19:39	9	p_demux->s
water	19:29	0:0	10	p_demux
op	19:36	0:0	10	->
water	19:38	0:0	10	s
arg	19:41	19:43	9	&b
op	19:41	0:0	10	&
water	19:42	0:0	10	b
arg	19:45	19:47	9	1
water	19:45	0:0	10	1
op	19:49	0:0	8	<
water	19:51	0:0	8	1
stmts	20:16	20:24	7	
return	20:16	20:24	8	0
water	20:23	0:0	9	0
if	21:12	22:21	6	(b == 0 x0a)
cond	21:16	21:22	7	b == 0 x0a
water	21:16	0:0	8	b
op	21:18	0:0	8	==
water	21:21	0:0	8	0
water	21:22	0:0	8	x0a
stmts	22:16	22:21	7	
break	22:16	22:21	8	
water	23:8	0:0	6	}
water	24:4	0:0	4	}
if	25:4	29:4	2	(( p_block =stream_Block (p_demux -> s ,p_sys -> frame_size ) ) == NULL)
cond	25:8	25:71	3	( p_block =stream_Block (p_demux -> s ,p_sys -> frame_size ) ) == NULL
water	25:8	0:0	4	(
water	25:10	0:0	4	p_block
op	25:18	0:0	4	=
call	25:20	25:64	4	stream_Block
arg	25:34	25:44	5	p_demux->s
water	25:34	0:0	6	p_demux
op	25:41	0:0	6	->
water	25:43	0:0	6	s
arg	25:46	25:64	5	p_sys->frame_size
water	25:46	0:0	6	p_sys
op	25:51	0:0	6	->
water	25:53	0:0	6	frame_size
water	25:66	0:0	4	)
op	25:68	0:0	4	==
water	25:71	0:0	4	NULL
stmts	26:4	29:4	3	
water	26:4	0:0	4	{
return	28:8	28:16	4	0
water	28:15	0:0	5	0
water	29:4	0:0	4	}
water	30:4	0:0	2	p_block
op	30:11	0:0	2	->
water	30:13	0:0	2	i_dts
op	30:19	0:0	2	=
water	30:21	0:0	2	p_block
op	30:28	0:0	2	->
water	30:30	0:0	2	i_pts
op	30:36	0:0	2	=
water	30:38	0:0	2	VLC_TS_0
op	30:47	0:0	2	+
water	30:49	0:0	2	i_pcr
water	30:54	0:0	2	;
call	31:4	31:58	2	es_out_Send
arg	31:17	31:29	3	p_demux->out
water	31:17	0:0	4	p_demux
op	31:24	0:0	4	->
water	31:26	0:0	4	out
arg	31:31	31:48	3	p_sys->p_es_video
water	31:31	0:0	4	p_sys
op	31:36	0:0	4	->
water	31:38	0:0	4	p_es_video
arg	31:50	31:58	3	p_block
water	31:50	0:0	4	p_block
water	31:59	0:0	2	;
call	32:4	32:35	2	date_Increment
arg	32:20	32:31	3	&p_sys->pcr
op	32:20	0:0	4	&
water	32:21	0:0	4	p_sys
op	32:26	0:0	4	->
water	32:28	0:0	4	pcr
arg	32:33	32:35	3	1
water	32:33	0:0	4	1
water	32:36	0:0	2	;
return	33:4	33:12	2	1
water	33:11	0:0	3	1

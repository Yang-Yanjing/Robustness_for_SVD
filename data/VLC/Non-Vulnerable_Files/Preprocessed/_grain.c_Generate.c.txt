func	2:0	66:0	0	static int	Generate
params	2:19	0:0	1	
param	2:20	2:33	2	int16_t *	bank
param	2:35	2:44	2	int	h_min
param	2:46	2:55	2	int	h_max
param	2:57	2:66	2	int	v_min
param	2:68	2:77	2	int	v_max
stmnts	0:0	65:22	1	
decl	4:4	4:27	2	const int	N
op	4:16	0:0	2	=
water	4:18	0:0	2	BANK_SIZE
decl	5:4	5:61	2	double	*workspace
op	5:22	0:0	2	=
call	5:24	5:60	3	calloc
arg	5:31	5:40	4	3*N*N
water	5:31	0:0	5	3
op	5:33	0:0	5	*
water	5:35	0:0	5	N
op	5:37	0:0	5	*
water	5:39	0:0	5	N
arg	5:42	5:60	4	sizeof(*workspace)
op	5:42	0:0	5	sizeof
water	5:48	0:0	5	(
op	5:49	0:0	5	*
water	5:50	0:0	5	workspace
water	5:59	0:0	5	)
if	6:4	7:25	2	(! workspace)
cond	6:8	6:9	3	! workspace
op	6:8	0:0	4	!
water	6:9	0:0	4	workspace
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
decl	8:4	8:45	2	double	*gn
op	8:22	0:0	2	=
op	8:24	0:0	2	&
water	8:25	0:0	2	workspace
op	8:34	0:0	2	[
water	8:35	0:0	2	0
op	8:37	0:0	2	*
water	8:39	0:0	2	N
op	8:41	0:0	2	*
water	8:43	0:0	2	N
op	8:44	0:0	2	]
decl	9:4	9:45	2	double	*cij
op	9:22	0:0	2	=
op	9:24	0:0	2	&
water	9:25	0:0	2	workspace
op	9:34	0:0	2	[
water	9:35	0:0	2	1
op	9:37	0:0	2	*
water	9:39	0:0	2	N
op	9:41	0:0	2	*
water	9:43	0:0	2	N
op	9:44	0:0	2	]
decl	10:4	10:45	2	double	*tmp
op	10:22	0:0	2	=
op	10:24	0:0	2	&
water	10:25	0:0	2	workspace
op	10:34	0:0	2	[
water	10:35	0:0	2	2
op	10:37	0:0	2	*
water	10:39	0:0	2	N
op	10:41	0:0	2	*
water	10:43	0:0	2	N
op	10:44	0:0	2	]
call	12:4	12:23	2	assert
arg	12:11	12:23	3	(N%2)==0
water	12:11	0:0	4	(
water	12:12	0:0	4	N
op	12:14	0:0	4	%
water	12:16	0:0	4	2
water	12:17	0:0	4	)
op	12:19	0:0	4	==
water	12:22	0:0	4	0
water	12:24	0:0	2	;
decl	13:4	13:30	2	uint32_t	seed
op	13:18	0:0	2	=
water	13:20	0:0	2	URAND_SEED
for	14:4	18:4	2	( int y = 0 ;y < N;y ++)
forinit	0:0	14:18	3	 int y = 0 ;
decl	14:9	14:18	4	int	y
op	14:15	0:0	4	=
water	14:17	0:0	4	0
cond	14:20	14:24	3	y < N
water	14:20	0:0	4	y
op	14:22	0:0	4	<
water	14:24	0:0	4	N
forexpr	14:27	14:28	3	y ++
water	14:27	0:0	4	y
op	14:28	0:0	4	++
stmts	14:32	18:4	3	
water	14:32	0:0	4	{
for	15:8	17:8	4	( int x = 0 ;x < N / 2;x ++)
forinit	0:0	15:22	5	 int x = 0 ;
decl	15:13	15:22	6	int	x
op	15:19	0:0	6	=
water	15:21	0:0	6	0
cond	15:24	15:30	5	x < N / 2
water	15:24	0:0	6	x
op	15:26	0:0	6	<
water	15:28	0:0	6	N
op	15:29	0:0	6	/
water	15:30	0:0	6	2
forexpr	15:33	15:34	5	x ++
water	15:33	0:0	6	x
op	15:34	0:0	6	++
stmts	15:38	17:8	5	
water	15:38	0:0	6	{
call	16:12	16:71	6	grand
arg	16:18	16:40	7	&gn[y*N+2*x+0]
op	16:18	0:0	8	&
water	16:19	0:0	8	gn
op	16:21	0:0	8	[
water	16:22	0:0	8	y
op	16:24	0:0	8	*
water	16:26	0:0	8	N
op	16:28	0:0	8	+
water	16:30	0:0	8	2
op	16:32	0:0	8	*
water	16:34	0:0	8	x
op	16:36	0:0	8	+
water	16:38	0:0	8	0
op	16:39	0:0	8	]
arg	16:42	16:64	7	&gn[y*N+2*x+1]
op	16:42	0:0	8	&
water	16:43	0:0	8	gn
op	16:45	0:0	8	[
water	16:46	0:0	8	y
op	16:48	0:0	8	*
water	16:50	0:0	8	N
op	16:52	0:0	8	+
water	16:54	0:0	8	2
op	16:56	0:0	8	*
water	16:58	0:0	8	x
op	16:60	0:0	8	+
water	16:62	0:0	8	1
op	16:63	0:0	8	]
arg	16:66	16:71	7	&seed
op	16:66	0:0	8	&
water	16:67	0:0	8	seed
water	16:72	0:0	6	;
water	17:8	0:0	6	}
water	18:4	0:0	4	}
decl	21:4	21:16	2	int	zero
op	21:13	0:0	2	=
water	21:15	0:0	2	0
for	22:4	29:4	2	( int y = 0 ;y < N;y ++)
forinit	0:0	22:18	3	 int y = 0 ;
decl	22:9	22:18	4	int	y
op	22:15	0:0	4	=
water	22:17	0:0	4	0
cond	22:20	22:24	3	y < N
water	22:20	0:0	4	y
op	22:22	0:0	4	<
water	22:24	0:0	4	N
forexpr	22:27	22:28	3	y ++
water	22:27	0:0	4	y
op	22:28	0:0	4	++
stmts	22:32	29:4	3	
water	22:32	0:0	4	{
for	23:8	28:8	4	( int x = 0 ;x < N;x ++)
forinit	0:0	23:22	5	 int x = 0 ;
decl	23:13	23:22	6	int	x
op	23:19	0:0	6	=
water	23:21	0:0	6	0
cond	23:24	23:28	5	x < N
water	23:24	0:0	6	x
op	23:26	0:0	6	<
water	23:28	0:0	6	N
forexpr	23:31	23:32	5	x ++
water	23:31	0:0	6	x
op	23:32	0:0	6	++
stmts	23:36	28:8	5	
water	23:36	0:0	6	{
if	24:12	27:12	6	(( x < h_min && y < v_min ) || x > h_max || y > v_max)
cond	24:16	24:61	7	( x < h_min && y < v_min ) || x > h_max || y > v_max
water	24:16	0:0	8	(
water	24:17	0:0	8	x
op	24:19	0:0	8	<
water	24:21	0:0	8	h_min
op	24:27	0:0	8	&&
water	24:30	0:0	8	y
op	24:32	0:0	8	<
water	24:34	0:0	8	v_min
water	24:39	0:0	8	)
op	24:41	0:0	8	||
water	24:44	0:0	8	x
op	24:46	0:0	8	>
water	24:48	0:0	8	h_max
op	24:54	0:0	8	||
water	24:57	0:0	8	y
op	24:59	0:0	8	>
water	24:61	0:0	8	v_max
stmts	24:68	27:12	7	
water	24:68	0:0	8	{
water	25:16	0:0	8	gn
op	25:18	0:0	8	[
water	25:19	0:0	8	y
op	25:21	0:0	8	*
water	25:23	0:0	8	N
op	25:25	0:0	8	+
water	25:27	0:0	8	x
op	25:28	0:0	8	]
op	25:30	0:0	8	=
water	25:32	0:0	8	0
op	25:33	0:0	8	.
water	25:34	0:0	8	0
water	25:35	0:0	8	;
water	26:16	0:0	8	zero
op	26:20	0:0	8	++
water	26:22	0:0	8	;
water	27:12	0:0	8	}
water	28:8	0:0	6	}
water	29:4	0:0	4	}
decl	30:4	30:67	2	const double	correction
op	30:28	0:0	2	=
call	30:30	30:66	3	sqrt
arg	30:35	30:66	4	(double)N*N/(N*N-zero)
water	30:35	0:0	5	(
water	30:36	0:0	5	double
water	30:42	0:0	5	)
water	30:43	0:0	5	N
op	30:45	0:0	5	*
water	30:47	0:0	5	N
op	30:50	0:0	5	/
water	30:52	0:0	5	(
water	30:53	0:0	5	N
op	30:55	0:0	5	*
water	30:57	0:0	5	N
op	30:59	0:0	5	-
water	30:61	0:0	5	zero
water	30:65	0:0	5	)
for	33:4	38:4	2	( int i = 0 ;i < N;i ++)
forinit	0:0	33:18	3	 int i = 0 ;
decl	33:9	33:18	4	int	i
op	33:15	0:0	4	=
water	33:17	0:0	4	0
cond	33:20	33:24	3	i < N
water	33:20	0:0	4	i
op	33:22	0:0	4	<
water	33:24	0:0	4	N
forexpr	33:27	33:28	3	i ++
water	33:27	0:0	4	i
op	33:28	0:0	4	++
stmts	33:32	38:4	3	
water	33:32	0:0	4	{
for	34:8	37:8	4	( int j = 0 ;j < N;j ++)
forinit	0:0	34:22	5	 int j = 0 ;
decl	34:13	34:22	6	int	j
op	34:19	0:0	6	=
water	34:21	0:0	6	0
cond	34:24	34:28	5	j < N
water	34:24	0:0	6	j
op	34:26	0:0	6	<
water	34:28	0:0	6	N
forexpr	34:31	34:32	5	j ++
water	34:31	0:0	6	j
op	34:32	0:0	6	++
stmts	34:36	37:8	5	
water	34:36	0:0	6	{
water	35:12	0:0	6	cij
op	35:15	0:0	6	[
water	35:16	0:0	6	i
op	35:18	0:0	6	*
water	35:20	0:0	6	N
op	35:22	0:0	6	+
water	35:24	0:0	6	j
op	35:25	0:0	6	]
op	35:27	0:0	6	=
water	35:29	0:0	6	i
op	35:31	0:0	6	==
water	35:34	0:0	6	0
water	35:36	0:0	6	?
call	35:38	35:51	6	sqrt
arg	35:43	35:51	7	1.0f/N
water	35:43	0:0	8	1
op	35:44	0:0	8	.
water	35:45	0:0	8	0
water	35:46	0:0	8	f
op	35:48	0:0	8	/
water	35:50	0:0	8	N
water	35:53	0:0	6	:
call	36:38	36:51	6	sqrt
arg	36:43	36:51	7	2.0f/N
water	36:43	0:0	8	2
op	36:44	0:0	8	.
water	36:45	0:0	8	0
water	36:46	0:0	8	f
op	36:48	0:0	8	/
water	36:50	0:0	8	N
call	36:53	36:89	6	*cos
arg	36:59	36:89	7	(2*j+1)*i*M_PI/2/N
water	36:59	0:0	8	(
water	36:60	0:0	8	2
op	36:62	0:0	8	*
water	36:64	0:0	8	j
op	36:66	0:0	8	+
water	36:68	0:0	8	1
water	36:69	0:0	8	)
op	36:71	0:0	8	*
water	36:73	0:0	8	i
op	36:75	0:0	8	*
water	36:77	0:0	8	M_PI
op	36:82	0:0	8	/
water	36:84	0:0	8	2
op	36:86	0:0	8	/
water	36:88	0:0	8	N
water	36:90	0:0	6	;
water	37:8	0:0	6	}
water	38:4	0:0	4	}
for	40:4	47:4	2	( int i = 0 ;i < N;i ++)
forinit	0:0	40:18	3	 int i = 0 ;
decl	40:9	40:18	4	int	i
op	40:15	0:0	4	=
water	40:17	0:0	4	0
cond	40:20	40:24	3	i < N
water	40:20	0:0	4	i
op	40:22	0:0	4	<
water	40:24	0:0	4	N
forexpr	40:27	40:28	3	i ++
water	40:27	0:0	4	i
op	40:28	0:0	4	++
stmts	40:32	47:4	3	
water	40:32	0:0	4	{
for	41:8	46:8	4	( int j = 0 ;j < N;j ++)
forinit	0:0	41:22	5	 int j = 0 ;
decl	41:13	41:22	6	int	j
op	41:19	0:0	6	=
water	41:21	0:0	6	0
cond	41:24	41:28	5	j < N
water	41:24	0:0	6	j
op	41:26	0:0	6	<
water	41:28	0:0	6	N
forexpr	41:31	41:32	5	j ++
water	41:31	0:0	6	j
op	41:32	0:0	6	++
stmts	41:36	46:8	5	
water	41:36	0:0	6	{
decl	42:12	42:26	6	double	v
op	42:21	0:0	6	=
water	42:23	0:0	6	0
op	42:24	0:0	6	.
water	42:25	0:0	6	0
for	43:12	44:51	6	( int k = 0 ;k < N;k ++)
forinit	0:0	43:26	7	 int k = 0 ;
decl	43:17	43:26	8	int	k
op	43:23	0:0	8	=
water	43:25	0:0	8	0
cond	43:28	43:32	7	k < N
water	43:28	0:0	8	k
op	43:30	0:0	8	<
water	43:32	0:0	8	N
forexpr	43:35	43:36	7	k ++
water	43:35	0:0	8	k
op	43:36	0:0	8	++
stmts	44:16	44:51	7	
water	44:16	0:0	8	v
op	44:18	0:0	8	+=
water	44:21	0:0	8	gn
op	44:23	0:0	8	[
water	44:24	0:0	8	i
op	44:26	0:0	8	*
water	44:28	0:0	8	N
op	44:30	0:0	8	+
water	44:32	0:0	8	k
op	44:33	0:0	8	]
op	44:35	0:0	8	*
water	44:37	0:0	8	cij
op	44:40	0:0	8	[
water	44:41	0:0	8	k
op	44:43	0:0	8	*
water	44:45	0:0	8	N
op	44:47	0:0	8	+
water	44:49	0:0	8	j
op	44:50	0:0	8	]
water	44:51	0:0	8	;
water	45:12	0:0	6	tmp
op	45:15	0:0	6	[
water	45:16	0:0	6	i
op	45:18	0:0	6	*
water	45:20	0:0	6	N
op	45:22	0:0	6	+
water	45:24	0:0	6	j
op	45:25	0:0	6	]
op	45:27	0:0	6	=
water	45:29	0:0	6	v
water	45:30	0:0	6	;
water	46:8	0:0	6	}
water	47:4	0:0	4	}
for	48:4	61:4	2	( int i = 0 ;i < N;i ++)
forinit	0:0	48:18	3	 int i = 0 ;
decl	48:9	48:18	4	int	i
op	48:15	0:0	4	=
water	48:17	0:0	4	0
cond	48:20	48:24	3	i < N
water	48:20	0:0	4	i
op	48:22	0:0	4	<
water	48:24	0:0	4	N
forexpr	48:27	48:28	3	i ++
water	48:27	0:0	4	i
op	48:28	0:0	4	++
stmts	48:32	61:4	3	
water	48:32	0:0	4	{
for	49:8	60:8	4	( int j = 0 ;j < N;j ++)
forinit	0:0	49:22	5	 int j = 0 ;
decl	49:13	49:22	6	int	j
op	49:19	0:0	6	=
water	49:21	0:0	6	0
cond	49:24	49:28	5	j < N
water	49:24	0:0	6	j
op	49:26	0:0	6	<
water	49:28	0:0	6	N
forexpr	49:31	49:32	5	j ++
water	49:31	0:0	6	j
op	49:32	0:0	6	++
stmts	49:36	60:8	5	
water	49:36	0:0	6	{
decl	50:12	50:26	6	double	v
op	50:21	0:0	6	=
water	50:23	0:0	6	0
op	50:24	0:0	6	.
water	50:25	0:0	6	0
for	51:12	52:52	6	( int k = 0 ;k < N;k ++)
forinit	0:0	51:26	7	 int k = 0 ;
decl	51:17	51:26	8	int	k
op	51:23	0:0	8	=
water	51:25	0:0	8	0
cond	51:28	51:32	7	k < N
water	51:28	0:0	8	k
op	51:30	0:0	8	<
water	51:32	0:0	8	N
forexpr	51:35	51:36	7	k ++
water	51:35	0:0	8	k
op	51:36	0:0	8	++
stmts	52:16	52:52	7	
water	52:16	0:0	8	v
op	52:18	0:0	8	+=
water	52:21	0:0	8	cij
op	52:24	0:0	8	[
water	52:25	0:0	8	k
op	52:27	0:0	8	*
water	52:29	0:0	8	N
op	52:31	0:0	8	+
water	52:33	0:0	8	i
op	52:34	0:0	8	]
op	52:36	0:0	8	*
water	52:38	0:0	8	tmp
op	52:41	0:0	8	[
water	52:42	0:0	8	k
op	52:44	0:0	8	*
water	52:46	0:0	8	N
op	52:48	0:0	8	+
water	52:50	0:0	8	j
op	52:51	0:0	8	]
water	52:52	0:0	8	;
decl	54:12	54:18	6	int	vq
if	55:12	56:56	6	(v >= 0)
cond	55:16	55:21	7	v >= 0
water	55:16	0:0	8	v
op	55:18	0:0	8	>=
water	55:21	0:0	8	0
stmts	56:16	56:56	7	
water	56:16	0:0	8	vq
op	56:19	0:0	8	=
call	56:22	56:55	8	(int)
arg	56:29	56:55	9	v*correction*127+0.5
water	56:29	0:0	10	v
op	56:31	0:0	10	*
water	56:33	0:0	10	correction
op	56:44	0:0	10	*
water	56:46	0:0	10	127
op	56:50	0:0	10	+
water	56:52	0:0	10	0
op	56:53	0:0	10	.
water	56:54	0:0	10	5
water	56:56	0:0	8	;
else	57:12	58:56	6
stmts	58:16	58:56	7	
water	58:16	0:0	8	vq
op	58:19	0:0	8	=
op	58:21	0:0	8	-
call	58:22	58:55	8	(int)
arg	58:28	58:55	9	-v*correction*127+0.5
op	58:28	0:0	10	-
water	58:29	0:0	10	v
op	58:31	0:0	10	*
water	58:33	0:0	10	correction
op	58:44	0:0	10	*
water	58:46	0:0	10	127
op	58:50	0:0	10	+
water	58:52	0:0	10	0
op	58:53	0:0	10	.
water	58:54	0:0	10	5
water	58:56	0:0	8	;
water	59:12	0:0	6	bank
op	59:16	0:0	6	[
water	59:17	0:0	6	i
op	59:19	0:0	6	*
water	59:21	0:0	6	N
op	59:23	0:0	6	+
water	59:25	0:0	6	j
op	59:26	0:0	6	]
op	59:28	0:0	6	=
call	59:30	59:63	6	VLC_CLIP
arg	59:39	59:41	7	vq
water	59:39	0:0	8	vq
arg	59:43	59:52	7	INT16_MIN
water	59:43	0:0	8	INT16_MIN
arg	59:54	59:63	7	INT16_MAX
water	59:54	0:0	8	INT16_MAX
water	59:64	0:0	6	;
water	60:8	0:0	6	}
water	61:4	0:0	4	}
call	64:4	64:18	2	free
arg	64:9	64:18	3	workspace
water	64:9	0:0	4	workspace
water	64:19	0:0	2	;
return	65:4	65:22	2	VLC_SUCCESS
water	65:11	0:0	3	VLC_SUCCESS

func	2:0	48:0	0	int	puzzle_detect_curve
params	2:23	0:0	1	
param	2:25	2:43	2	filter_t *	p_filter
param	2:45	2:56	2	int32_t	i_y
param	2:58	2:73	2	float	f_x_ratio
param	2:75	2:90	2	float	f_y_ratio
param	2:92	2:106	2	point_t *	ps_pt
param	2:108	2:125	2	uint8_t	i_pts_nbr
param	2:127	2:143	2	uint8_t	i_border
param	2:145	2:160	2	uint8_t	i_plane
param	2:162	2:179	2	int32_t *	pi_sects
stmnts	0:0	47:17	1	
decl	4:4	4:23	2	int8_t	i_main_t
op	4:20	0:0	2	=
water	4:22	0:0	2	0
decl	5:4	5:20	2	float	f_xd
water	5:14	0:0	2	,
decl	5:4	5:20	2	float	f_yd
decl	6:4	6:41	2	float	f_xo
op	6:15	0:0	2	=
water	6:17	0:0	2	ps_pt
op	6:22	0:0	2	[
water	6:23	0:0	2	0
op	6:24	0:0	2	]
op	6:25	0:0	2	.
water	6:26	0:0	2	f_x
op	6:30	0:0	2	*
water	6:32	0:0	2	f_x_ratio
decl	7:4	7:41	2	float	f_yo
op	7:15	0:0	2	=
water	7:17	0:0	2	ps_pt
op	7:22	0:0	2	[
water	7:23	0:0	2	0
op	7:24	0:0	2	]
op	7:25	0:0	2	.
water	7:26	0:0	2	f_y
op	7:30	0:0	2	*
water	7:32	0:0	2	f_y_ratio
decl	8:4	8:21	2	int8_t	i_sect
op	8:18	0:0	2	=
water	8:20	0:0	2	0
for	9:4	23:4	2	( float f_t = 0 ;f_t <= i_pts_nbr - 1;f_t += 0 . 1)
forinit	0:0	9:22	3	 float f_t = 0 ;
decl	9:9	9:22	4	float	f_t
op	9:19	0:0	4	=
water	9:21	0:0	4	0
cond	9:24	9:43	3	f_t <= i_pts_nbr - 1
water	9:24	0:0	4	f_t
op	9:28	0:0	4	<=
water	9:31	0:0	4	i_pts_nbr
op	9:41	0:0	4	-
water	9:43	0:0	4	1
forexpr	9:46	9:55	3	f_t += 0 . 1
water	9:46	0:0	4	f_t
op	9:50	0:0	4	+=
water	9:53	0:0	4	0
op	9:54	0:0	4	.
water	9:55	0:0	4	1
stmts	9:59	23:4	3	
water	9:59	0:0	4	{
water	10:8	0:0	4	i_main_t
op	10:17	0:0	4	=
call	10:19	10:28	4	floor
arg	10:25	10:28	5	f_t
water	10:25	0:0	6	f_t
water	10:29	0:0	4	;
if	11:8	12:36	4	(i_main_t == i_pts_nbr - 1)
cond	11:13	11:37	5	i_main_t == i_pts_nbr - 1
water	11:13	0:0	6	i_main_t
op	11:22	0:0	6	==
water	11:25	0:0	6	i_pts_nbr
op	11:35	0:0	6	-
water	11:37	0:0	6	1
stmts	12:12	12:36	5	
water	12:12	0:0	6	i_main_t
op	12:21	0:0	6	=
water	12:23	0:0	6	i_pts_nbr
op	12:33	0:0	6	-
water	12:35	0:0	6	2
water	12:36	0:0	6	;
decl	13:8	13:38	4	float	f_sub_t
op	13:22	0:0	4	=
water	13:24	0:0	4	f_t
op	13:28	0:0	4	-
water	13:30	0:0	4	i_main_t
water	14:8	0:0	4	f_xd
op	14:13	0:0	4	=
call	14:15	14:50	4	bezier_val
arg	14:26	14:31	5	ps_pt
water	14:26	0:0	6	ps_pt
arg	14:32	14:39	5	f_sub_t
water	14:32	0:0	6	f_sub_t
arg	14:40	14:48	5	i_main_t
water	14:40	0:0	6	i_main_t
arg	14:49	14:50	5	x
water	14:49	0:0	6	x
op	14:52	0:0	4	*
water	14:54	0:0	4	f_x_ratio
water	14:63	0:0	4	;
water	15:8	0:0	4	f_yd
op	15:13	0:0	4	=
call	15:15	15:50	4	bezier_val
arg	15:26	15:31	5	ps_pt
water	15:26	0:0	6	ps_pt
arg	15:32	15:39	5	f_sub_t
water	15:32	0:0	6	f_sub_t
arg	15:40	15:48	5	i_main_t
water	15:40	0:0	6	i_main_t
arg	15:49	15:50	5	y
water	15:49	0:0	6	y
op	15:52	0:0	4	*
water	15:54	0:0	4	f_y_ratio
water	15:63	0:0	4	;
if	16:8	20:8	4	(( f_yo < ( float ) i_y + 0 . 5 && f_yd >= ( float ) i_y + 0 . 5 ) || ( f_yo > ( float ) i_y + 0 . 5 && f_yd <= ( float ) i_y + 0 . 5 ))
cond	16:12	16:113	5	( f_yo < ( float ) i_y + 0 . 5 && f_yd >= ( float ) i_y + 0 . 5 ) || ( f_yo > ( float ) i_y + 0 . 5 && f_yd <= ( float ) i_y + 0 . 5 )
water	16:12	0:0	6	(
water	16:13	0:0	6	f_yo
op	16:18	0:0	6	<
water	16:20	0:0	6	(
water	16:21	0:0	6	float
water	16:26	0:0	6	)
water	16:27	0:0	6	i_y
op	16:30	0:0	6	+
water	16:31	0:0	6	0
op	16:32	0:0	6	.
water	16:33	0:0	6	5
op	16:35	0:0	6	&&
water	16:38	0:0	6	f_yd
op	16:43	0:0	6	>=
water	16:46	0:0	6	(
water	16:47	0:0	6	float
water	16:52	0:0	6	)
water	16:53	0:0	6	i_y
op	16:56	0:0	6	+
water	16:57	0:0	6	0
op	16:58	0:0	6	.
water	16:59	0:0	6	5
water	16:60	0:0	6	)
op	16:62	0:0	6	||
water	16:65	0:0	6	(
water	16:66	0:0	6	f_yo
op	16:71	0:0	6	>
water	16:73	0:0	6	(
water	16:74	0:0	6	float
water	16:79	0:0	6	)
water	16:80	0:0	6	i_y
op	16:83	0:0	6	+
water	16:84	0:0	6	0
op	16:85	0:0	6	.
water	16:86	0:0	6	5
op	16:88	0:0	6	&&
water	16:91	0:0	6	f_yd
op	16:96	0:0	6	<=
water	16:99	0:0	6	(
water	16:100	0:0	6	float
water	16:105	0:0	6	)
water	16:106	0:0	6	i_y
op	16:109	0:0	6	+
water	16:110	0:0	6	0
op	16:111	0:0	6	.
water	16:112	0:0	6	5
water	16:113	0:0	6	)
stmts	16:116	20:8	5	
water	16:116	0:0	6	{
water	17:12	0:0	6	pi_sects
op	17:20	0:0	6	[
water	17:21	0:0	6	i_sect
op	17:27	0:0	6	]
op	17:29	0:0	6	=
call	17:31	17:99	6	floor
arg	17:37	17:99	7	((float)i_y+0.5-f_yo)*(f_xd-f_xo)/(f_yd-f_yo)+f_xo
water	17:37	0:0	8	(
water	17:38	0:0	8	(
water	17:39	0:0	8	float
water	17:44	0:0	8	)
water	17:45	0:0	8	i_y
op	17:48	0:0	8	+
water	17:49	0:0	8	0
op	17:50	0:0	8	.
water	17:51	0:0	8	5
op	17:53	0:0	8	-
water	17:55	0:0	8	f_yo
water	17:59	0:0	8	)
op	17:61	0:0	8	*
water	17:63	0:0	8	(
water	17:64	0:0	8	f_xd
op	17:69	0:0	8	-
water	17:71	0:0	8	f_xo
water	17:75	0:0	8	)
op	17:77	0:0	8	/
water	17:79	0:0	8	(
water	17:80	0:0	8	f_yd
op	17:85	0:0	8	-
water	17:87	0:0	8	f_yo
water	17:91	0:0	8	)
op	17:93	0:0	8	+
water	17:95	0:0	8	f_xo
water	17:100	0:0	6	;
if	18:12	19:24	6	(i_sect < MAX_SECT - 1)
cond	18:16	18:36	7	i_sect < MAX_SECT - 1
water	18:16	0:0	8	i_sect
op	18:23	0:0	8	<
water	18:25	0:0	8	MAX_SECT
op	18:34	0:0	8	-
water	18:36	0:0	8	1
stmts	19:16	19:24	7	
water	19:16	0:0	8	i_sect
op	19:22	0:0	8	++
water	19:24	0:0	8	;
water	20:8	0:0	6	}
water	21:8	0:0	4	f_xo
op	21:13	0:0	4	=
water	21:15	0:0	4	f_xd
water	21:19	0:0	4	;
water	22:8	0:0	4	f_yo
op	22:13	0:0	4	=
water	22:15	0:0	4	f_yd
water	22:19	0:0	4	;
water	23:4	0:0	4	}
water	24:4	0:0	2	f_xd
op	24:9	0:0	2	=
water	24:11	0:0	2	ps_pt
op	24:16	0:0	2	[
water	24:17	0:0	2	i_pts_nbr
op	24:27	0:0	2	-
water	24:29	0:0	2	1
op	24:30	0:0	2	]
op	24:31	0:0	2	.
water	24:32	0:0	2	f_x
op	24:36	0:0	2	*
water	24:38	0:0	2	f_x_ratio
water	24:47	0:0	2	;
water	25:4	0:0	2	f_yd
op	25:9	0:0	2	=
water	25:11	0:0	2	ps_pt
op	25:16	0:0	2	[
water	25:17	0:0	2	i_pts_nbr
op	25:27	0:0	2	-
water	25:29	0:0	2	1
op	25:30	0:0	2	]
op	25:31	0:0	2	.
water	25:32	0:0	2	f_y
op	25:36	0:0	2	*
water	25:38	0:0	2	f_y_ratio
water	25:47	0:0	2	;
if	27:4	33:4	2	(i_y >= 0)
cond	27:9	27:16	3	i_y >= 0
water	27:9	0:0	4	i_y
op	27:13	0:0	4	>=
water	27:16	0:0	4	0
stmts	27:20	33:4	3	
water	27:20	0:0	4	{
water	29:8	0:0	4	pi_sects
op	29:16	0:0	4	[
water	29:17	0:0	4	i_sect
op	29:23	0:0	4	]
op	29:25	0:0	4	=
water	29:27	0:0	4	(
water	29:28	0:0	4	i_border
op	29:36	0:0	4	==
water	29:38	0:0	4	puzzle_SHAPE_TOP
water	29:54	0:0	4	)
water	29:55	0:0	4	?
call	29:56	29:109	4	puzzle_diagonal_limit
arg	29:79	29:87	5	p_filter
water	29:79	0:0	6	p_filter
arg	29:89	29:92	5	i_y
water	29:89	0:0	6	i_y
arg	29:94	29:99	5	false
water	29:94	0:0	6	false
arg	29:101	29:109	5	i_plane
water	29:101	0:0	6	i_plane
water	30:55	0:0	4	:
call	30:56	30:109	4	puzzle_diagonal_limit
arg	30:79	30:87	5	p_filter
water	30:79	0:0	6	p_filter
arg	30:89	30:92	5	i_y
water	30:89	0:0	6	i_y
arg	30:94	30:98	5	true
water	30:94	0:0	6	true
arg	30:101	30:109	5	i_plane
water	30:101	0:0	6	i_plane
water	30:110	0:0	4	;
if	31:8	32:20	4	(i_sect < MAX_SECT - 1)
cond	31:12	31:32	5	i_sect < MAX_SECT - 1
water	31:12	0:0	6	i_sect
op	31:19	0:0	6	<
water	31:21	0:0	6	MAX_SECT
op	31:30	0:0	6	-
water	31:32	0:0	6	1
stmts	32:12	32:20	5	
water	32:12	0:0	6	i_sect
op	32:18	0:0	6	++
water	32:20	0:0	6	;
water	33:4	0:0	4	}
decl	35:4	35:19	2	int32_t	i_s
op	35:16	0:0	2	=
water	35:18	0:0	2	0
while	36:4	46:4	2	(i_s < ( i_sect - 1 ))
cond	36:11	36:28	3	i_s < ( i_sect - 1 )
water	36:11	0:0	4	i_s
op	36:15	0:0	4	<
water	36:17	0:0	4	(
water	36:18	0:0	4	i_sect
op	36:25	0:0	4	-
water	36:27	0:0	4	1
water	36:28	0:0	4	)
stmts	36:31	46:4	3	
water	36:31	0:0	4	{
if	37:8	42:8	4	(pi_sects [ i_s ] > pi_sects [ i_s + 1 ])
cond	37:12	37:42	5	pi_sects [ i_s ] > pi_sects [ i_s + 1 ]
water	37:12	0:0	6	pi_sects
op	37:20	0:0	6	[
water	37:21	0:0	6	i_s
op	37:24	0:0	6	]
op	37:26	0:0	6	>
water	37:28	0:0	6	pi_sects
op	37:36	0:0	6	[
water	37:37	0:0	6	i_s
op	37:40	0:0	6	+
water	37:41	0:0	6	1
op	37:42	0:0	6	]
stmts	37:45	42:8	5	
water	37:45	0:0	6	{
decl	38:12	38:43	6	uint32_t	i_temp
op	38:28	0:0	6	=
water	38:30	0:0	6	pi_sects
op	38:38	0:0	6	[
water	38:39	0:0	6	i_s
op	38:42	0:0	6	]
water	39:12	0:0	6	pi_sects
op	39:20	0:0	6	[
water	39:21	0:0	6	i_s
op	39:24	0:0	6	]
op	39:26	0:0	6	=
water	39:28	0:0	6	pi_sects
op	39:36	0:0	6	[
water	39:37	0:0	6	i_s
op	39:40	0:0	6	+
water	39:41	0:0	6	1
op	39:42	0:0	6	]
water	39:43	0:0	6	;
water	40:12	0:0	6	pi_sects
op	40:20	0:0	6	[
water	40:21	0:0	6	i_s
op	40:24	0:0	6	+
water	40:25	0:0	6	1
op	40:26	0:0	6	]
op	40:28	0:0	6	=
water	40:30	0:0	6	i_temp
water	40:36	0:0	6	;
water	41:12	0:0	6	i_s
op	41:16	0:0	6	=
water	41:18	0:0	6	0
water	41:19	0:0	6	;
water	42:8	0:0	6	}
else	43:8	45:8	4
stmts	43:13	45:8	5	
water	43:13	0:0	6	{
water	44:12	0:0	6	i_s
op	44:15	0:0	6	++
water	44:17	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}
return	47:4	47:17	2	i_sect
water	47:11	0:0	3	i_sect

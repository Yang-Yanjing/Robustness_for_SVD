func	2:0	108:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	107:22	1	
decl	4:4	4:66	2	sout_access_out_t	*p_access
op	4:38	0:0	2	=
water	4:40	0:0	2	(
water	4:41	0:0	2	sout_access_out_t
op	4:58	0:0	2	*
water	4:59	0:0	2	)
water	4:60	0:0	2	p_this
decl	5:4	5:34	2	sout_access_out_sys_t	*p_sys
decl	6:4	6:33	2	char	*psz_user
decl	7:4	7:32	2	char	*psz_pwd
decl	8:4	8:33	2	char	*psz_mime
if	9:4	11:26	2	(! ( p_sys = p_access -> p_sys =malloc (sizeof ( sout_access_out_sys_t ) ) ))
cond	9:8	10:58	3	! ( p_sys = p_access -> p_sys =malloc (sizeof ( sout_access_out_sys_t ) ) )
op	9:8	0:0	4	!
water	9:9	0:0	4	(
water	9:11	0:0	4	p_sys
op	9:17	0:0	4	=
water	9:19	0:0	4	p_access
op	9:27	0:0	4	->
water	9:29	0:0	4	p_sys
op	9:35	0:0	4	=
call	10:16	10:56	4	malloc
arg	10:24	10:56	5	sizeof(sout_access_out_sys_t)
op	10:24	0:0	6	sizeof
water	10:30	0:0	6	(
water	10:32	0:0	6	sout_access_out_sys_t
water	10:54	0:0	6	)
water	10:58	0:0	4	)
stmts	11:8	11:26	3	
return	11:8	11:26	4	VLC_ENOMEM
water	11:15	0:0	5	VLC_ENOMEM
call	12:4	12:85	2	config_ChainParse
arg	12:23	12:31	3	p_access
water	12:23	0:0	4	p_access
arg	12:33	12:48	3	SOUT_CFG_PREFIX
water	12:33	0:0	4	SOUT_CFG_PREFIX
arg	12:50	12:67	3	ppsz_sout_options
water	12:50	0:0	4	ppsz_sout_options
arg	12:69	12:85	3	p_access->p_cfg
water	12:69	0:0	4	p_access
op	12:77	0:0	4	->
water	12:79	0:0	4	p_cfg
water	12:86	0:0	2	;
decl	13:4	13:41	2	const char	*path
op	13:21	0:0	2	=
water	13:23	0:0	2	p_access
op	13:31	0:0	2	->
water	13:33	0:0	2	psz_path
water	14:4	0:0	2	path
op	14:9	0:0	2	+=
call	14:12	14:31	2	strcspn
arg	14:21	14:25	3	path
water	14:21	0:0	4	path
arg	14:27	14:31	3	"/"
water	14:27	0:0	4	"/"
water	14:32	0:0	2	;
if	15:4	51:4	2	(path > p_access -> psz_path)
cond	15:8	15:25	3	path > p_access -> psz_path
water	15:8	0:0	4	path
op	15:13	0:0	4	>
water	15:15	0:0	4	p_access
op	15:23	0:0	4	->
water	15:25	0:0	4	psz_path
stmts	16:4	51:4	3	
water	16:4	0:0	4	{
decl	17:8	17:61	4	const char	*port
op	17:25	0:0	4	=
call	17:27	17:60	5	strrchr
arg	17:36	17:54	6	p_access->psz_path
water	17:36	0:0	7	p_access
op	17:44	0:0	7	->
water	17:46	0:0	7	psz_path
arg	17:56	17:60	6	':'
water	17:56	0:0	7	':'
if	18:8	19:23	4	(port != NULL &&strchr (port ,']' ) != NULL)
cond	18:12	18:51	5	port != NULL &&strchr (port ,']' ) != NULL
water	18:12	0:0	6	port
op	18:17	0:0	6	!=
water	18:20	0:0	6	NULL
op	18:25	0:0	6	&&
call	18:28	18:46	6	strchr
arg	18:36	18:40	7	port
water	18:36	0:0	8	port
arg	18:42	18:46	7	']'
water	18:42	0:0	8	']'
op	18:48	0:0	6	!=
water	18:51	0:0	6	NULL
stmts	19:12	19:23	5	
water	19:12	0:0	6	port
op	19:17	0:0	6	=
water	19:19	0:0	6	NULL
water	19:23	0:0	6	;
if	20:8	33:8	4	(port != p_access -> psz_path)
cond	20:12	20:30	5	port != p_access -> psz_path
water	20:12	0:0	6	port
op	20:17	0:0	6	!=
water	20:20	0:0	6	p_access
op	20:28	0:0	6	->
water	20:30	0:0	6	psz_path
stmts	21:8	33:8	5	
water	21:8	0:0	6	{
decl	22:12	22:63	6	int	len
op	22:20	0:0	6	=
water	22:22	0:0	6	(
water	22:23	0:0	6	port
water	22:28	0:0	6	?
water	22:30	0:0	6	port
water	22:35	0:0	6	:
water	22:37	0:0	6	path
water	22:41	0:0	6	)
op	22:43	0:0	6	-
water	22:45	0:0	6	p_access
op	22:53	0:0	6	->
water	22:55	0:0	6	psz_path
call	23:12	25:46	6	msg_Warn
arg	23:22	23:30	7	p_access
water	23:22	0:0	8	p_access
arg	23:32	24:76	7	"\"%.*s\" HTTP host might be ignored in ""multiple-host configurations, use at your own risks."
water	23:32	0:0	8	"\"%.*s\" HTTP host might be ignored in "
water	24:22	0:0	8	"multiple-host configurations, use at your own risks."
arg	25:22	25:25	7	len
water	25:22	0:0	8	len
arg	25:27	25:46	7	p_access->psz_path
water	25:27	0:0	8	p_access
op	25:35	0:0	8	->
water	25:37	0:0	8	psz_path
water	25:47	0:0	6	;
call	26:12	27:56	6	msg_Info
arg	26:22	26:30	7	p_access
water	26:22	0:0	8	p_access
arg	26:32	27:56	7	"Consider passing --http-host=IP on the ""command line instead."
water	26:32	0:0	8	"Consider passing --http-host=IP on the "
water	27:32	0:0	8	"command line instead."
water	27:57	0:0	6	;
decl	28:12	28:30	6	char	host[len+1]
call	29:12	29:51	6	strncpy
arg	29:21	29:25	7	host
water	29:21	0:0	8	host
arg	29:27	29:45	7	p_access->psz_path
water	29:27	0:0	8	p_access
op	29:35	0:0	8	->
water	29:37	0:0	8	psz_path
arg	29:47	29:51	7	len
water	29:47	0:0	8	len
water	29:52	0:0	6	;
water	30:12	0:0	6	host
op	30:16	0:0	6	[
water	30:17	0:0	6	len
op	30:20	0:0	6	]
op	30:22	0:0	6	=
water	30:24	0:0	6	'\0'
water	30:28	0:0	6	;
call	31:12	31:62	6	var_Create
arg	31:24	31:32	7	p_access
water	31:24	0:0	8	p_access
arg	31:34	31:45	7	"http-host"
water	31:34	0:0	8	"http-host"
arg	31:47	31:62	7	VLC_VAR_STRING
water	31:47	0:0	8	VLC_VAR_STRING
water	31:63	0:0	6	;
call	32:12	32:55	6	var_SetString
arg	32:27	32:35	7	p_access
water	32:27	0:0	8	p_access
arg	32:37	32:48	7	"http-host"
water	32:37	0:0	8	"http-host"
arg	32:50	32:55	7	host
water	32:50	0:0	8	host
water	32:56	0:0	6	;
water	33:8	0:0	6	}
if	34:8	50:8	4	(port != NULL)
cond	34:12	34:20	5	port != NULL
water	34:12	0:0	6	port
op	34:17	0:0	6	!=
water	34:20	0:0	6	NULL
stmts	35:8	50:8	5	
water	35:8	0:0	6	{
water	41:12	0:0	6	port
op	41:16	0:0	6	++
water	41:18	0:0	6	;
decl	42:12	42:40	6	int	bind_port
op	42:26	0:0	6	=
call	42:28	42:39	7	atoi
arg	42:34	42:39	8	port
water	42:34	0:0	9	port
if	43:12	49:12	6	(bind_port > 0)
cond	43:16	43:28	7	bind_port > 0
water	43:16	0:0	8	bind_port
op	43:26	0:0	8	>
water	43:28	0:0	8	0
stmts	44:12	49:12	7	
water	44:12	0:0	8	{
decl	45:16	46:62	8	const char	*var
op	45:32	0:0	8	=
call	45:34	45:76	9	strcasecmp
arg	45:46	45:66	10	p_access->psz_access
water	45:46	0:0	11	p_access
op	45:54	0:0	11	->
water	45:56	0:0	11	psz_access
arg	45:68	45:76	10	"https"
water	45:68	0:0	11	"https"
water	46:34	0:0	8	?
water	46:36	0:0	8	"http-port"
water	46:48	0:0	8	:
water	46:50	0:0	8	"https-port"
call	47:16	47:59	8	var_Create
arg	47:28	47:36	9	p_access
water	47:28	0:0	10	p_access
arg	47:38	47:41	9	var
water	47:38	0:0	10	var
arg	47:43	47:59	9	VLC_VAR_INTEGER
water	47:43	0:0	10	VLC_VAR_INTEGER
water	47:60	0:0	8	;
call	48:16	48:57	8	var_SetInteger
arg	48:32	48:40	9	p_access
water	48:32	0:0	10	p_access
arg	48:42	48:45	9	var
water	48:42	0:0	10	var
arg	48:47	48:57	9	bind_port
water	48:47	0:0	10	bind_port
water	48:58	0:0	8	;
water	49:12	0:0	8	}
water	50:8	0:0	6	}
water	51:4	0:0	4	}
if	52:4	53:18	2	(! * path)
cond	52:8	52:10	3	! * path
op	52:8	0:0	4	!
op	52:9	0:0	4	*
water	52:10	0:0	4	path
stmts	53:8	53:18	3	
water	53:8	0:0	4	path
op	53:13	0:0	4	=
water	53:15	0:0	4	"/"
water	53:18	0:0	4	;
if	55:4	56:71	2	(p_access -> psz_access && !strcmp (p_access -> psz_access ,"https" ))
cond	55:8	55:71	3	p_access -> psz_access && !strcmp (p_access -> psz_access ,"https" )
water	55:8	0:0	4	p_access
op	55:16	0:0	4	->
water	55:18	0:0	4	psz_access
op	55:29	0:0	4	&&
op	55:32	0:0	4	!
call	55:33	55:71	4	strcmp
arg	55:41	55:61	5	p_access->psz_access
water	55:41	0:0	6	p_access
op	55:49	0:0	6	->
water	55:51	0:0	6	psz_access
arg	55:63	55:71	5	"https"
water	55:63	0:0	6	"https"
stmts	56:8	56:71	3	
water	56:8	0:0	4	p_sys
op	56:13	0:0	4	->
water	56:15	0:0	4	p_httpd_host
op	56:28	0:0	4	=
call	56:30	56:70	4	vlc_https_HostNew
arg	56:49	56:70	5	VLC_OBJECT(p_access)
call	56:49	56:68	6	VLC_OBJECT
arg	56:60	56:68	7	p_access
water	56:60	0:0	8	p_access
water	56:71	0:0	4	;
else	57:4	58:70	2
stmts	58:8	58:70	3	
water	58:8	0:0	4	p_sys
op	58:13	0:0	4	->
water	58:15	0:0	4	p_httpd_host
op	58:28	0:0	4	=
call	58:30	58:69	4	vlc_http_HostNew
arg	58:48	58:69	5	VLC_OBJECT(p_access)
call	58:48	58:67	6	VLC_OBJECT
arg	58:59	58:67	7	p_access
water	58:59	0:0	8	p_access
water	58:70	0:0	4	;
if	59:4	64:4	2	(p_sys -> p_httpd_host == NULL)
cond	59:8	59:31	3	p_sys -> p_httpd_host == NULL
water	59:8	0:0	4	p_sys
op	59:13	0:0	4	->
water	59:15	0:0	4	p_httpd_host
op	59:28	0:0	4	==
water	59:31	0:0	4	NULL
stmts	60:4	64:4	3	
water	60:4	0:0	4	{
call	61:8	61:54	4	msg_Err
arg	61:17	61:25	5	p_access
water	61:17	0:0	6	p_access
arg	61:27	61:54	5	"cannot start HTTP server"
water	61:27	0:0	6	"cannot start HTTP server"
water	61:55	0:0	4	;
call	62:8	62:20	4	free
arg	62:14	62:20	5	p_sys
water	62:14	0:0	6	p_sys
water	62:21	0:0	4	;
return	63:8	63:27	4	VLC_EGENERIC
water	63:15	0:0	5	VLC_EGENERIC
water	64:4	0:0	4	}
water	65:4	0:0	2	psz_user
op	65:13	0:0	2	=
call	65:15	65:71	2	var_GetNonEmptyString
arg	65:38	65:46	3	p_access
water	65:38	0:0	4	p_access
arg	65:48	65:71	3	SOUT_CFG_PREFIX"user"
water	65:48	0:0	4	SOUT_CFG_PREFIX
water	65:64	0:0	4	"user"
water	65:72	0:0	2	;
water	66:4	0:0	2	psz_pwd
op	66:12	0:0	2	=
call	66:14	66:69	2	var_GetNonEmptyString
arg	66:37	66:45	3	p_access
water	66:37	0:0	4	p_access
arg	66:47	66:69	3	SOUT_CFG_PREFIX"pwd"
water	66:47	0:0	4	SOUT_CFG_PREFIX
water	66:63	0:0	4	"pwd"
water	66:70	0:0	2	;
if	67:4	70:4	2	(p_access -> psz_access && !strcmp (p_access -> psz_access ,"mmsh" ))
cond	67:8	67:70	3	p_access -> psz_access && !strcmp (p_access -> psz_access ,"mmsh" )
water	67:8	0:0	4	p_access
op	67:16	0:0	4	->
water	67:18	0:0	4	psz_access
op	67:29	0:0	4	&&
op	67:32	0:0	4	!
call	67:33	67:70	4	strcmp
arg	67:41	67:61	5	p_access->psz_access
water	67:41	0:0	6	p_access
op	67:49	0:0	6	->
water	67:51	0:0	6	psz_access
arg	67:63	67:70	5	"mmsh"
water	67:63	0:0	6	"mmsh"
stmts	68:4	70:4	3	
water	68:4	0:0	4	{
water	69:8	0:0	4	psz_mime
op	69:17	0:0	4	=
call	69:19	69:51	4	strdup
arg	69:27	69:51	5	"video/x-ms-asf-stream"
water	69:27	0:0	6	"video/x-ms-asf-stream"
water	69:52	0:0	4	;
water	70:4	0:0	4	}
else	71:4	74:4	2
stmts	72:4	74:4	3	
water	72:4	0:0	4	{
water	73:8	0:0	4	psz_mime
op	73:17	0:0	4	=
call	73:19	73:75	4	var_GetNonEmptyString
arg	73:42	73:50	5	p_access
water	73:42	0:0	6	p_access
arg	73:52	73:75	5	SOUT_CFG_PREFIX"mime"
water	73:52	0:0	6	SOUT_CFG_PREFIX
water	73:68	0:0	6	"mime"
water	73:76	0:0	4	;
water	74:4	0:0	4	}
water	75:4	0:0	2	p_sys
op	75:9	0:0	2	->
water	75:11	0:0	2	b_metacube
op	75:22	0:0	2	=
call	75:24	75:74	2	var_GetBool
arg	75:37	75:45	3	p_access
water	75:37	0:0	4	p_access
arg	75:47	75:74	3	SOUT_CFG_PREFIX"metacube"
water	75:47	0:0	4	SOUT_CFG_PREFIX
water	75:63	0:0	4	"metacube"
water	75:75	0:0	2	;
water	76:4	0:0	2	p_sys
op	76:9	0:0	2	->
water	76:11	0:0	2	b_has_keyframes
op	76:27	0:0	2	=
water	76:29	0:0	2	false
water	76:34	0:0	2	;
water	77:4	0:0	2	p_sys
op	77:9	0:0	2	->
water	77:11	0:0	2	p_httpd_stream
op	77:26	0:0	2	=
call	78:8	79:43	2	httpd_StreamNew
arg	78:25	78:44	3	p_sys->p_httpd_host
water	78:25	0:0	4	p_sys
op	78:30	0:0	4	->
water	78:32	0:0	4	p_httpd_host
arg	78:46	78:50	3	path
water	78:46	0:0	4	path
arg	78:52	78:60	3	psz_mime
water	78:52	0:0	4	psz_mime
arg	79:25	79:33	3	psz_user
water	79:25	0:0	4	psz_user
arg	79:35	79:43	3	psz_pwd
water	79:35	0:0	4	psz_pwd
water	79:44	0:0	2	;
call	80:4	80:19	2	free
arg	80:10	80:19	3	psz_user
water	80:10	0:0	4	psz_user
water	80:20	0:0	2	;
call	81:4	81:18	2	free
arg	81:10	81:18	3	psz_pwd
water	81:10	0:0	4	psz_pwd
water	81:19	0:0	2	;
call	82:4	82:19	2	free
arg	82:10	82:19	3	psz_mime
water	82:10	0:0	4	psz_mime
water	82:20	0:0	2	;
if	83:4	89:4	2	(p_sys -> p_httpd_stream == NULL)
cond	83:8	83:33	3	p_sys -> p_httpd_stream == NULL
water	83:8	0:0	4	p_sys
op	83:13	0:0	4	->
water	83:15	0:0	4	p_httpd_stream
op	83:30	0:0	4	==
water	83:33	0:0	4	NULL
stmts	84:4	89:4	3	
water	84:4	0:0	4	{
call	85:8	85:56	4	msg_Err
arg	85:17	85:25	5	p_access
water	85:17	0:0	6	p_access
arg	85:27	85:49	5	"cannot add stream %s"
water	85:27	0:0	6	"cannot add stream %s"
arg	85:51	85:56	5	path
water	85:51	0:0	6	path
water	85:57	0:0	4	;
call	86:8	86:46	4	httpd_HostDelete
arg	86:26	86:46	5	p_sys->p_httpd_host
water	86:26	0:0	6	p_sys
op	86:31	0:0	6	->
water	86:33	0:0	6	p_httpd_host
water	86:47	0:0	4	;
call	87:8	87:20	4	free
arg	87:14	87:20	5	p_sys
water	87:14	0:0	6	p_sys
water	87:21	0:0	4	;
return	88:8	88:27	4	VLC_EGENERIC
water	88:15	0:0	5	VLC_EGENERIC
water	89:4	0:0	4	}
if	90:4	99:4	2	(p_sys -> b_metacube)
cond	90:8	90:15	3	p_sys -> b_metacube
water	90:8	0:0	4	p_sys
op	90:13	0:0	4	->
water	90:15	0:0	4	b_metacube
stmts	91:4	99:4	3	
water	91:4	0:0	4	{
decl	92:8	92:69	4	httpd_header	headers[]
op	92:31	0:0	4	=
water	92:33	0:0	4	{
water	92:34	0:0	4	{
water	92:36	0:0	4	"Content-encoding"
water	92:54	0:0	4	,
water	92:56	0:0	4	"metacube"
water	92:67	0:0	4	}
water	92:68	0:0	4	}
decl	93:8	93:122	4	int	err
op	93:16	0:0	4	=
call	93:18	93:121	5	httpd_StreamSetHTTPHeaders
arg	93:46	93:67	6	p_sys->p_httpd_stream
water	93:46	0:0	7	p_sys
op	93:51	0:0	7	->
water	93:53	0:0	7	p_httpd_stream
arg	93:69	93:76	6	headers
water	93:69	0:0	7	headers
arg	93:78	93:121	6	sizeof(headers)/sizeof(httpd_header)
op	93:78	0:0	7	sizeof
water	93:84	0:0	7	(
water	93:86	0:0	7	headers
water	93:94	0:0	7	)
op	93:96	0:0	7	/
op	93:98	0:0	7	sizeof
water	93:104	0:0	7	(
water	93:106	0:0	7	httpd_header
water	93:119	0:0	7	)
if	94:8	98:8	4	(err != VLC_SUCCESS)
cond	94:12	94:19	5	err != VLC_SUCCESS
water	94:12	0:0	6	err
op	94:16	0:0	6	!=
water	94:19	0:0	6	VLC_SUCCESS
stmts	95:8	98:8	5	
water	95:8	0:0	6	{
call	96:12	96:24	6	free
arg	96:18	96:24	7	p_sys
water	96:18	0:0	8	p_sys
water	96:25	0:0	6	;
return	97:12	97:22	6	err
water	97:19	0:0	7	err
water	98:8	0:0	6	}
water	99:4	0:0	4	}
water	100:4	0:0	2	p_sys
op	100:9	0:0	2	->
water	100:11	0:0	2	i_header_allocated
op	100:30	0:0	2	=
water	100:32	0:0	2	1024
water	100:36	0:0	2	;
water	101:4	0:0	2	p_sys
op	101:9	0:0	2	->
water	101:11	0:0	2	i_header_size
op	101:30	0:0	2	=
water	101:32	0:0	2	0
water	101:33	0:0	2	;
water	102:4	0:0	2	p_sys
op	102:9	0:0	2	->
water	102:11	0:0	2	p_header
op	102:30	0:0	2	=
call	102:32	102:67	2	xmalloc
arg	102:41	102:67	3	p_sys->i_header_allocated
water	102:41	0:0	4	p_sys
op	102:46	0:0	4	->
water	102:48	0:0	4	i_header_allocated
water	102:68	0:0	2	;
water	103:4	0:0	2	p_sys
op	103:9	0:0	2	->
water	103:11	0:0	2	b_header_complete
op	103:30	0:0	2	=
water	103:32	0:0	2	false
water	103:37	0:0	2	;
water	104:4	0:0	2	p_access
op	104:12	0:0	2	->
water	104:14	0:0	2	pf_write
op	104:29	0:0	2	=
water	104:31	0:0	2	Write
water	104:36	0:0	2	;
water	105:4	0:0	2	p_access
op	105:12	0:0	2	->
water	105:14	0:0	2	pf_seek
op	105:29	0:0	2	=
water	105:31	0:0	2	Seek
water	105:35	0:0	2	;
water	106:4	0:0	2	p_access
op	106:12	0:0	2	->
water	106:14	0:0	2	pf_control
op	106:29	0:0	2	=
water	106:31	0:0	2	Control
water	106:38	0:0	2	;
return	107:4	107:22	2	VLC_SUCCESS
water	107:11	0:0	3	VLC_SUCCESS

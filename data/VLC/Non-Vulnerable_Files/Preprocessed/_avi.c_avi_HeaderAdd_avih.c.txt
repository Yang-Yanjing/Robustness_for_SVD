func	2:0	67:0	0	static int	avi_HeaderAdd_avih
params	2:29	0:0	1	
param	2:31	2:48	2	sout_mux_t *	p_mux
param	3:31	3:50	2	buffer_out_t *	p_bo
stmnts	0:0	66:21	1	
decl	5:4	5:41	2	sout_mux_sys_t	*p_sys
op	5:27	0:0	2	=
water	5:29	0:0	2	p_mux
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
decl	6:4	6:35	2	avi_stream_t	*p_video
op	6:29	0:0	2	=
water	6:31	0:0	2	NULL
decl	7:4	7:24	2	int	i_stream
decl	8:4	8:34	2	uint32_t	i_microsecperframe
decl	9:4	9:32	2	int	i_maxbytespersec
decl	10:4	10:29	2	int	i_totalframes
call	11:4	11:26	2	AVI_BOX_ENTER
arg	11:19	11:26	3	"avih"
water	11:19	0:0	4	"avih"
water	11:27	0:0	2	;
if	12:4	19:4	2	(p_sys -> i_stream_video >= 0)
cond	12:8	12:33	3	p_sys -> i_stream_video >= 0
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	i_stream_video
op	12:30	0:0	4	>=
water	12:33	0:0	4	0
stmts	13:4	19:4	3	
water	13:4	0:0	4	{
water	14:8	0:0	4	p_video
op	14:16	0:0	4	=
op	14:18	0:0	4	&
water	14:19	0:0	4	p_sys
op	14:24	0:0	4	->
water	14:26	0:0	4	stream
op	14:32	0:0	4	[
water	14:33	0:0	4	p_sys
op	14:38	0:0	4	->
water	14:40	0:0	4	i_stream_video
op	14:54	0:0	4	]
water	14:55	0:0	4	;
if	15:8	18:8	4	(p_video -> i_frames <= 0)
cond	15:12	15:33	5	p_video -> i_frames <= 0
water	15:12	0:0	6	p_video
op	15:19	0:0	6	->
water	15:21	0:0	6	i_frames
op	15:30	0:0	6	<=
water	15:33	0:0	6	0
stmts	16:8	18:8	5	
water	16:8	0:0	6	{
water	0:0	0:0	6	STATEMENTS
water	18:8	0:0	6	}
water	19:4	0:0	4	}
if	20:4	26:4	2	(p_video)
cond	20:8	20:8	3	p_video
water	20:8	0:0	4	p_video
stmts	21:4	26:4	3	
water	21:4	0:0	4	{
water	22:8	0:0	4	i_microsecperframe
op	22:27	0:0	4	=
call	23:12	24:74	4	(uint32_t)
arg	23:24	24:74	5	(float)1000000/(float)p_sys->stream[p_sys->i_stream_video].f_fps
water	23:24	0:0	6	(
water	23:25	0:0	6	float
water	23:30	0:0	6	)
water	23:31	0:0	6	1000000
op	23:39	0:0	6	/
water	24:24	0:0	6	(
water	24:25	0:0	6	float
water	24:30	0:0	6	)
water	24:31	0:0	6	p_sys
op	24:36	0:0	6	->
water	24:38	0:0	6	stream
op	24:44	0:0	6	[
water	24:45	0:0	6	p_sys
op	24:50	0:0	6	->
water	24:52	0:0	6	i_stream_video
op	24:66	0:0	6	]
op	24:67	0:0	6	.
water	24:68	0:0	6	f_fps
water	24:75	0:0	4	;
water	25:8	0:0	4	i_totalframes
op	25:22	0:0	4	=
water	25:24	0:0	4	p_sys
op	25:29	0:0	4	->
water	25:31	0:0	4	stream
op	25:37	0:0	4	[
water	25:38	0:0	4	p_sys
op	25:43	0:0	4	->
water	25:45	0:0	4	i_stream_video
op	25:59	0:0	4	]
op	25:60	0:0	4	.
water	25:61	0:0	4	i_frames
water	25:69	0:0	4	;
water	26:4	0:0	4	}
else	27:4	32:4	2
stmts	28:4	32:4	3	
water	28:4	0:0	4	{
call	29:8	29:77	4	msg_Warn
arg	29:18	29:23	5	p_mux
water	29:18	0:0	6	p_mux
arg	29:25	29:77	5	"avi file without video track isn't a good idea..."
water	29:25	0:0	6	"avi file without video track isn't a good idea..."
water	29:78	0:0	4	;
water	30:8	0:0	4	i_microsecperframe
op	30:27	0:0	4	=
water	30:29	0:0	4	0
water	30:30	0:0	4	;
water	31:8	0:0	4	i_totalframes
op	31:22	0:0	4	=
water	31:24	0:0	4	0
water	31:25	0:0	4	;
water	32:4	0:0	4	}
for	33:4	41:4	2	(i_stream = 0 , i_maxbytespersec = 0 ;i_stream < p_sys -> i_streams;i_stream ++)
forinit	33:9	33:42	3	i_stream = 0 , i_maxbytespersec = 0 ;
water	33:9	0:0	4	i_stream
op	33:18	0:0	4	=
water	33:20	0:0	4	0
water	33:21	0:0	4	,
water	33:22	0:0	4	i_maxbytespersec
op	33:39	0:0	4	=
water	33:41	0:0	4	0
water	33:42	0:0	4	;
cond	33:44	33:62	3	i_stream < p_sys -> i_streams
water	33:44	0:0	4	i_stream
op	33:53	0:0	4	<
water	33:55	0:0	4	p_sys
op	33:60	0:0	4	->
water	33:62	0:0	4	i_streams
forexpr	33:73	33:81	3	i_stream ++
water	33:73	0:0	4	i_stream
op	33:81	0:0	4	++
stmts	34:4	41:4	3	
water	34:4	0:0	4	{
if	35:8	40:8	4	(p_sys -> stream [ i_stream ] . i_duration > 0)
cond	35:12	35:49	5	p_sys -> stream [ i_stream ] . i_duration > 0
water	35:12	0:0	6	p_sys
op	35:17	0:0	6	->
water	35:19	0:0	6	stream
op	35:25	0:0	6	[
water	35:26	0:0	6	i_stream
op	35:34	0:0	6	]
op	35:35	0:0	6	.
water	35:36	0:0	6	i_duration
op	35:47	0:0	6	>
water	35:49	0:0	6	0
stmts	36:8	40:8	5	
water	36:8	0:0	6	{
water	37:12	0:0	6	i_maxbytespersec
op	37:29	0:0	6	+=
water	38:16	0:0	6	p_sys
op	38:21	0:0	6	->
water	38:23	0:0	6	stream
op	38:29	0:0	6	[
water	38:30	0:0	6	i_stream
op	38:38	0:0	6	]
op	38:39	0:0	6	.
water	38:40	0:0	6	i_totalsize
op	38:52	0:0	6	/
water	39:16	0:0	6	p_sys
op	39:21	0:0	6	->
water	39:23	0:0	6	stream
op	39:29	0:0	6	[
water	39:30	0:0	6	i_stream
op	39:38	0:0	6	]
op	39:39	0:0	6	.
water	39:40	0:0	6	i_duration
water	39:50	0:0	6	;
water	40:8	0:0	6	}
water	41:4	0:0	4	}
call	42:4	42:44	2	bo_AddDWordLE
arg	42:19	42:23	3	p_bo
water	42:19	0:0	4	p_bo
arg	42:25	42:44	3	i_microsecperframe
water	42:25	0:0	4	i_microsecperframe
water	42:45	0:0	2	;
call	43:4	43:42	2	bo_AddDWordLE
arg	43:19	43:23	3	p_bo
water	43:19	0:0	4	p_bo
arg	43:25	43:42	3	i_maxbytespersec
water	43:25	0:0	4	i_maxbytespersec
water	43:43	0:0	2	;
call	44:4	44:27	2	bo_AddDWordLE
arg	44:19	44:23	3	p_bo
water	44:19	0:0	4	p_bo
arg	44:25	44:27	3	0
water	44:25	0:0	4	0
water	44:28	0:0	2	;
call	45:4	47:44	2	bo_AddDWordLE
arg	45:19	45:23	3	p_bo
water	45:19	0:0	4	p_bo
arg	45:25	47:44	3	AVIF_TRUSTCKTYPE|AVIF_HASINDEX|AVIF_ISINTERLEAVED
water	45:25	0:0	4	AVIF_TRUSTCKTYPE
op	45:42	0:0	4	|
water	46:25	0:0	4	AVIF_HASINDEX
op	46:39	0:0	4	|
water	47:25	0:0	4	AVIF_ISINTERLEAVED
water	47:45	0:0	2	;
call	48:4	48:39	2	bo_AddDWordLE
arg	48:19	48:23	3	p_bo
water	48:19	0:0	4	p_bo
arg	48:25	48:39	3	i_totalframes
water	48:25	0:0	4	i_totalframes
water	48:40	0:0	2	;
call	49:4	49:27	2	bo_AddDWordLE
arg	49:19	49:23	3	p_bo
water	49:19	0:0	4	p_bo
arg	49:25	49:27	3	0
water	49:25	0:0	4	0
water	49:28	0:0	2	;
call	50:4	50:42	2	bo_AddDWordLE
arg	50:19	50:23	3	p_bo
water	50:19	0:0	4	p_bo
arg	50:25	50:42	3	p_sys->i_streams
water	50:25	0:0	4	p_sys
op	50:30	0:0	4	->
water	50:32	0:0	4	i_streams
water	50:43	0:0	2	;
call	51:4	51:37	2	bo_AddDWordLE
arg	51:19	51:23	3	p_bo
water	51:19	0:0	4	p_bo
arg	51:25	51:37	3	1024*1024
water	51:25	0:0	4	1024
op	51:30	0:0	4	*
water	51:32	0:0	4	1024
water	51:38	0:0	2	;
if	52:4	56:4	2	(p_video)
cond	52:8	52:8	3	p_video
water	52:8	0:0	4	p_video
stmts	53:4	56:4	3	
water	53:4	0:0	4	{
call	54:8	54:53	4	bo_AddDWordLE
arg	54:23	54:27	5	p_bo
water	54:23	0:0	6	p_bo
arg	54:29	54:53	5	p_video->p_bih->biWidth
water	54:29	0:0	6	p_video
op	54:36	0:0	6	->
water	54:38	0:0	6	p_bih
op	54:43	0:0	6	->
water	54:45	0:0	6	biWidth
water	54:54	0:0	4	;
call	55:8	55:54	4	bo_AddDWordLE
arg	55:23	55:27	5	p_bo
water	55:23	0:0	6	p_bo
arg	55:29	55:54	5	p_video->p_bih->biHeight
water	55:29	0:0	6	p_video
op	55:36	0:0	6	->
water	55:38	0:0	6	p_bih
op	55:43	0:0	6	->
water	55:45	0:0	6	biHeight
water	55:55	0:0	4	;
water	56:4	0:0	4	}
else	57:4	61:4	2
stmts	58:4	61:4	3	
water	58:4	0:0	4	{
call	59:8	59:31	4	bo_AddDWordLE
arg	59:23	59:27	5	p_bo
water	59:23	0:0	6	p_bo
arg	59:29	59:31	5	0
water	59:29	0:0	6	0
water	59:32	0:0	4	;
call	60:8	60:31	4	bo_AddDWordLE
arg	60:23	60:27	5	p_bo
water	60:23	0:0	6	p_bo
arg	60:29	60:31	5	0
water	60:29	0:0	6	0
water	60:32	0:0	4	;
water	61:4	0:0	4	}
call	62:4	62:27	2	bo_AddDWordLE
arg	62:19	62:23	3	p_bo
water	62:19	0:0	4	p_bo
arg	62:25	62:27	3	0
water	62:25	0:0	4	0
water	62:28	0:0	2	;
call	63:4	63:27	2	bo_AddDWordLE
arg	63:19	63:23	3	p_bo
water	63:19	0:0	4	p_bo
arg	63:25	63:27	3	0
water	63:25	0:0	4	0
water	63:28	0:0	2	;
call	64:4	64:27	2	bo_AddDWordLE
arg	64:19	64:23	3	p_bo
water	64:19	0:0	4	p_bo
arg	64:25	64:27	3	0
water	64:25	0:0	4	0
water	64:28	0:0	2	;
call	65:4	65:27	2	bo_AddDWordLE
arg	65:19	65:23	3	p_bo
water	65:19	0:0	4	p_bo
arg	65:25	65:27	3	0
water	65:25	0:0	4	0
water	65:28	0:0	2	;
call	66:4	66:20	2	AVI_BOX_EXIT
arg	66:18	66:20	3	0
water	66:18	0:0	4	0
water	66:21	0:0	2	;

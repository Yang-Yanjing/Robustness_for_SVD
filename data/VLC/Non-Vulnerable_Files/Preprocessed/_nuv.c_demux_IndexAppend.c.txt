func	2:0	46:0	0	static void	demux_IndexAppend
params	2:29	0:0	1	
param	2:31	2:51	2	demux_index_t *	p_idx
param	3:31	3:45	2	int64_t	i_time
param	3:47	3:64	2	int64_t	i_offset
stmnts	6:4	45:18	1	
if	6:4	7:14	2	(p_idx -> i_idx > 0 && p_idx -> idx [ p_idx -> i_idx - 1 ] . i_time >= i_time)
cond	6:8	6:65	3	p_idx -> i_idx > 0 && p_idx -> idx [ p_idx -> i_idx - 1 ] . i_time >= i_time
water	6:8	0:0	4	p_idx
op	6:13	0:0	4	->
water	6:15	0:0	4	i_idx
op	6:21	0:0	4	>
water	6:23	0:0	4	0
op	6:25	0:0	4	&&
water	6:28	0:0	4	p_idx
op	6:33	0:0	4	->
water	6:35	0:0	4	idx
op	6:38	0:0	4	[
water	6:39	0:0	4	p_idx
op	6:44	0:0	4	->
water	6:46	0:0	4	i_idx
op	6:51	0:0	4	-
water	6:52	0:0	4	1
op	6:53	0:0	4	]
op	6:54	0:0	4	.
water	6:55	0:0	4	i_time
op	6:62	0:0	4	>=
water	6:65	0:0	4	i_time
stmts	7:8	7:14	3	
return	7:8	7:14	4	
if	9:4	41:4	2	(p_idx -> i_idx >= p_idx -> i_idx_max)
cond	9:8	9:31	3	p_idx -> i_idx >= p_idx -> i_idx_max
water	9:8	0:0	4	p_idx
op	9:13	0:0	4	->
water	9:15	0:0	4	i_idx
op	9:21	0:0	4	>=
water	9:24	0:0	4	p_idx
op	9:29	0:0	4	->
water	9:31	0:0	4	i_idx_max
stmts	10:4	41:4	3	
water	10:4	0:0	4	{
if	11:8	34:8	4	(p_idx -> i_idx >= DEMUX_INDEX_SIZE_MAX)
cond	11:12	11:28	5	p_idx -> i_idx >= DEMUX_INDEX_SIZE_MAX
water	11:12	0:0	6	p_idx
op	11:17	0:0	6	->
water	11:19	0:0	6	i_idx
op	11:25	0:0	6	>=
water	11:28	0:0	6	DEMUX_INDEX_SIZE_MAX
stmts	12:8	34:8	5	
water	12:8	0:0	6	{
decl	14:12	15:76	6	const int64_t	i_length
op	14:35	0:0	6	=
water	14:37	0:0	6	p_idx
op	14:42	0:0	6	->
water	14:44	0:0	6	idx
op	14:47	0:0	6	[
water	14:48	0:0	6	p_idx
op	14:53	0:0	6	->
water	14:55	0:0	6	i_idx
op	14:60	0:0	6	-
water	14:61	0:0	6	1
op	14:62	0:0	6	]
op	14:63	0:0	6	.
water	14:64	0:0	6	i_time
op	14:71	0:0	6	-
water	15:56	0:0	6	p_idx
op	15:61	0:0	6	->
water	15:63	0:0	6	idx
op	15:66	0:0	6	[
water	15:67	0:0	6	0
op	15:68	0:0	6	]
op	15:69	0:0	6	.
water	15:70	0:0	6	i_time
decl	16:12	16:54	6	const int	i_count
op	16:30	0:0	6	=
water	16:32	0:0	6	DEMUX_INDEX_SIZE_MAX
op	16:52	0:0	6	/
water	16:53	0:0	6	2
decl	17:12	17:20	6	int	i
water	17:17	0:0	6	,
decl	17:12	17:20	6	int	j
for	19:12	24:12	6	(i = 1 , j = 1 ;i < p_idx -> i_idx;i ++)
forinit	19:17	19:29	7	i = 1 , j = 1 ;
water	19:17	0:0	8	i
op	19:19	0:0	8	=
water	19:21	0:0	8	1
water	19:22	0:0	8	,
water	19:24	0:0	8	j
op	19:26	0:0	8	=
water	19:28	0:0	8	1
water	19:29	0:0	8	;
cond	19:31	19:42	7	i < p_idx -> i_idx
water	19:31	0:0	8	i
op	19:33	0:0	8	<
water	19:35	0:0	8	p_idx
op	19:40	0:0	8	->
water	19:42	0:0	8	i_idx
forexpr	19:49	19:50	7	i ++
water	19:49	0:0	8	i
op	19:50	0:0	8	++
stmts	20:12	24:12	7	
water	20:12	0:0	8	{
if	21:16	22:28	8	(p_idx -> idx [ i ] . i_time < j * i_length / i_count)
cond	21:20	21:58	9	p_idx -> idx [ i ] . i_time < j * i_length / i_count
water	21:20	0:0	10	p_idx
op	21:25	0:0	10	->
water	21:27	0:0	10	idx
op	21:30	0:0	10	[
water	21:31	0:0	10	i
op	21:32	0:0	10	]
op	21:33	0:0	10	.
water	21:34	0:0	10	i_time
op	21:41	0:0	10	<
water	21:43	0:0	10	j
op	21:45	0:0	10	*
water	21:47	0:0	10	i_length
op	21:56	0:0	10	/
water	21:58	0:0	10	i_count
stmts	22:20	22:28	9	
continue	22:20	22:28	10	
water	23:16	0:0	8	p_idx
op	23:21	0:0	8	->
water	23:23	0:0	8	idx
op	23:26	0:0	8	[
water	23:27	0:0	8	j
op	23:28	0:0	8	++
op	23:30	0:0	8	]
op	23:32	0:0	8	=
water	23:34	0:0	8	p_idx
op	23:39	0:0	8	->
water	23:41	0:0	8	idx
op	23:44	0:0	8	[
water	23:45	0:0	8	i
op	23:46	0:0	8	]
water	23:47	0:0	8	;
water	24:12	0:0	8	}
water	25:12	0:0	6	p_idx
op	25:17	0:0	6	->
water	25:19	0:0	6	i_idx
op	25:25	0:0	6	=
water	25:27	0:0	6	j
water	25:28	0:0	6	;
if	26:12	33:12	6	(p_idx -> i_idx > 3 * DEMUX_INDEX_SIZE_MAX / 4)
cond	26:16	26:58	7	p_idx -> i_idx > 3 * DEMUX_INDEX_SIZE_MAX / 4
water	26:16	0:0	8	p_idx
op	26:21	0:0	8	->
water	26:23	0:0	8	i_idx
op	26:29	0:0	8	>
water	26:31	0:0	8	3
op	26:33	0:0	8	*
water	26:35	0:0	8	DEMUX_INDEX_SIZE_MAX
op	26:56	0:0	8	/
water	26:58	0:0	8	4
stmts	27:12	33:12	7	
water	27:12	0:0	8	{
for	30:16	31:51	8	(i = 0 ;i < p_idx -> i_idx / 2;i ++)
forinit	30:21	30:26	9	i = 0 ;
water	30:21	0:0	10	i
op	30:23	0:0	10	=
water	30:25	0:0	10	0
water	30:26	0:0	10	;
cond	30:28	30:45	9	i < p_idx -> i_idx / 2
water	30:28	0:0	10	i
op	30:30	0:0	10	<
water	30:32	0:0	10	p_idx
op	30:37	0:0	10	->
water	30:39	0:0	10	i_idx
op	30:44	0:0	10	/
water	30:45	0:0	10	2
forexpr	30:48	30:49	9	i ++
water	30:48	0:0	10	i
op	30:49	0:0	10	++
stmts	31:20	31:51	9	
water	31:20	0:0	10	p_idx
op	31:25	0:0	10	->
water	31:27	0:0	10	idx
op	31:30	0:0	10	[
water	31:31	0:0	10	i
op	31:32	0:0	10	]
op	31:34	0:0	10	=
water	31:36	0:0	10	p_idx
op	31:41	0:0	10	->
water	31:43	0:0	10	idx
op	31:46	0:0	10	[
water	31:47	0:0	10	2
op	31:48	0:0	10	*
water	31:49	0:0	10	i
op	31:50	0:0	10	]
water	31:51	0:0	10	;
water	32:16	0:0	8	p_idx
op	32:21	0:0	8	->
water	32:23	0:0	8	i_idx
op	32:29	0:0	8	/=
water	32:32	0:0	8	2
water	32:33	0:0	8	;
water	33:12	0:0	8	}
water	34:8	0:0	6	}
else	35:8	40:8	4
stmts	36:8	40:8	5	
water	36:8	0:0	6	{
water	37:12	0:0	6	p_idx
op	37:17	0:0	6	->
water	37:19	0:0	6	i_idx_max
op	37:29	0:0	6	+=
water	37:32	0:0	6	1000
water	37:36	0:0	6	;
water	38:12	0:0	6	p_idx
op	38:17	0:0	6	->
water	38:19	0:0	6	idx
op	38:23	0:0	6	=
call	38:25	39:76	6	xrealloc
arg	38:35	38:45	7	p_idx->idx
water	38:35	0:0	8	p_idx
op	38:40	0:0	8	->
water	38:42	0:0	8	idx
arg	39:32	39:76	7	p_idx->i_idx_max*sizeof(demux_index_entry_t)
water	39:32	0:0	8	p_idx
op	39:37	0:0	8	->
water	39:39	0:0	8	i_idx_max
op	39:48	0:0	8	*
op	39:49	0:0	8	sizeof
water	39:55	0:0	8	(
water	39:56	0:0	8	demux_index_entry_t
water	39:75	0:0	8	)
water	39:77	0:0	6	;
water	40:8	0:0	6	}
water	41:4	0:0	4	}
water	43:4	0:0	2	p_idx
op	43:9	0:0	2	->
water	43:11	0:0	2	idx
op	43:14	0:0	2	[
water	43:15	0:0	2	p_idx
op	43:20	0:0	2	->
water	43:22	0:0	2	i_idx
op	43:27	0:0	2	]
op	43:28	0:0	2	.
water	43:29	0:0	2	i_time
op	43:36	0:0	2	=
water	43:38	0:0	2	i_time
water	43:44	0:0	2	;
water	44:4	0:0	2	p_idx
op	44:9	0:0	2	->
water	44:11	0:0	2	idx
op	44:14	0:0	2	[
water	44:15	0:0	2	p_idx
op	44:20	0:0	2	->
water	44:22	0:0	2	i_idx
op	44:27	0:0	2	]
op	44:28	0:0	2	.
water	44:29	0:0	2	i_offset
op	44:38	0:0	2	=
water	44:40	0:0	2	i_offset
water	44:48	0:0	2	;
water	45:4	0:0	2	p_idx
op	45:9	0:0	2	->
water	45:11	0:0	2	i_idx
op	45:16	0:0	2	++
water	45:18	0:0	2	;

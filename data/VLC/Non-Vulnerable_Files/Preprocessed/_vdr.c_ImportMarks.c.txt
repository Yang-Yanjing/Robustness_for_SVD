func	2:0	94:0	0	static void	ImportMarks
params	2:23	0:0	1	
param	2:25	2:44	2	access_t *	p_access
stmnts	0:0	93:23	1	
decl	4:4	4:41	2	access_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_access
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:59	2	FILE	*marksfile
op	5:20	0:0	2	=
call	5:22	5:58	3	OpenRelativeFile
arg	5:40	5:48	4	p_access
water	5:40	0:0	5	p_access
arg	5:50	5:58	4	"marks"
water	5:50	0:0	5	"marks"
if	6:4	7:14	2	(! marksfile)
cond	6:8	6:9	3	! marksfile
op	6:8	0:0	4	!
water	6:9	0:0	4	marksfile
stmts	7:8	7:14	3	
return	7:8	7:14	4	
decl	8:4	8:59	2	FILE	*indexfile
op	8:20	0:0	2	=
call	8:22	8:58	3	OpenRelativeFile
arg	8:40	8:48	4	p_access
water	8:40	0:0	5	p_access
arg	8:50	8:58	4	"index"
water	8:50	0:0	5	"index"
if	9:4	13:4	2	(! indexfile)
cond	9:8	9:9	3	! indexfile
op	9:8	0:0	4	!
water	9:9	0:0	4	indexfile
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
call	11:8	11:26	4	fclose
arg	11:16	11:26	5	marksfile
water	11:16	0:0	6	marksfile
water	11:27	0:0	4	;
return	12:8	12:14	4	
water	13:4	0:0	4	}
decl	15:4	15:18	2	struct stat	st
if	16:4	21:4	2	(fstat (fileno (indexfile ) ,& st ))
cond	16:8	16:40	3	fstat (fileno (indexfile ) ,& st )
call	16:8	16:40	4	fstat
arg	16:15	16:34	5	fileno(indexfile)
call	16:15	16:33	6	fileno
arg	16:23	16:33	7	indexfile
water	16:23	0:0	8	indexfile
arg	16:36	16:40	5	&st
op	16:36	0:0	6	&
water	16:37	0:0	6	st
stmts	17:4	21:4	3	
water	17:4	0:0	4	{
call	18:8	18:26	4	fclose
arg	18:16	18:26	5	marksfile
water	18:16	0:0	6	marksfile
water	18:27	0:0	4	;
call	19:8	19:26	4	fclose
arg	19:16	19:26	5	indexfile
water	19:16	0:0	6	indexfile
water	19:27	0:0	4	;
return	20:8	20:14	4	
water	21:4	0:0	4	}
decl	22:4	22:42	2	int64_t	i_frame_count
op	22:26	0:0	2	=
water	22:28	0:0	2	st
op	22:30	0:0	2	.
water	22:31	0:0	2	st_size
op	22:39	0:0	2	/
water	22:41	0:0	2	8
decl	24:4	24:50	2	input_title_t	*p_marks
op	24:27	0:0	2	=
call	24:29	24:49	3	vlc_input_title_New
if	25:4	30:4	2	(! p_marks)
cond	25:8	25:9	3	! p_marks
op	25:8	0:0	4	!
water	25:9	0:0	4	p_marks
stmts	26:4	30:4	3	
water	26:4	0:0	4	{
call	27:8	27:26	4	fclose
arg	27:16	27:26	5	marksfile
water	27:16	0:0	6	marksfile
water	27:27	0:0	4	;
call	28:8	28:26	4	fclose
arg	28:16	28:26	5	indexfile
water	28:16	0:0	6	indexfile
water	28:27	0:0	4	;
return	29:8	29:14	4	
water	30:4	0:0	4	}
water	31:4	0:0	2	p_marks
op	31:11	0:0	2	->
water	31:13	0:0	2	psz_name
op	31:22	0:0	2	=
call	31:24	31:51	2	strdup
arg	31:32	31:51	3	_("VDR Cut Marks")
call	31:32	31:49	4	_
arg	31:34	31:49	5	"VDR Cut Marks"
water	31:34	0:0	6	"VDR Cut Marks"
water	31:52	0:0	2	;
water	32:4	0:0	2	p_marks
op	32:11	0:0	2	->
water	32:13	0:0	2	i_length
op	32:22	0:0	2	=
water	32:24	0:0	2	i_frame_count
call	32:38	32:75	2	*(int64_t)
arg	32:51	32:75	3	CLOCK_FREQ/p_sys->fps
water	32:51	0:0	4	CLOCK_FREQ
op	32:62	0:0	4	/
water	32:64	0:0	4	p_sys
op	32:69	0:0	4	->
water	32:71	0:0	4	fps
water	32:76	0:0	2	;
water	33:4	0:0	2	p_marks
op	33:11	0:0	2	->
water	33:13	0:0	2	i_size
op	33:20	0:0	2	=
water	33:22	0:0	2	p_sys
op	33:27	0:0	2	->
water	33:29	0:0	2	size
water	33:33	0:0	2	;
decl	35:4	36:60	2	int	i_chapter_offset
op	35:25	0:0	2	=
water	35:27	0:0	2	p_sys
op	35:32	0:0	2	->
water	35:34	0:0	2	fps
op	35:38	0:0	2	/
water	35:40	0:0	2	1000
call	35:45	36:59	3	*var_InheritInteger
arg	36:28	36:36	4	p_access
water	36:28	0:0	5	p_access
arg	36:38	36:59	4	"vdr-chapter-offset"
water	36:38	0:0	5	"vdr-chapter-offset"
decl	38:4	38:58	2	int	i_min_chapter_size
op	38:27	0:0	2	=
water	38:29	0:0	2	p_sys
op	38:34	0:0	2	->
water	38:36	0:0	2	fps
op	38:40	0:0	2	*
water	38:42	0:0	2	MIN_CHAPTER_SIZE
decl	41:4	41:30	2	int64_t	i_prev_chapter
op	41:27	0:0	2	=
water	41:29	0:0	2	0
decl	43:4	43:21	2	char	*line
op	43:15	0:0	2	=
water	43:17	0:0	2	NULL
decl	44:4	44:19	2	size_t	line_len
while	45:4	75:4	2	(ReadLine (& line ,& line_len ,marksfile ))
cond	45:11	45:49	3	ReadLine (& line ,& line_len ,marksfile )
call	45:11	45:49	4	ReadLine
arg	45:21	45:26	5	&line
op	45:21	0:0	6	&
water	45:22	0:0	6	line
arg	45:28	45:37	5	&line_len
op	45:28	0:0	6	&
water	45:29	0:0	6	line_len
arg	45:39	45:49	5	marksfile
water	45:39	0:0	6	marksfile
stmts	46:4	75:4	3	
water	46:4	0:0	4	{
decl	47:8	47:62	4	int64_t	i_frame
op	47:24	0:0	4	=
call	47:26	47:61	5	ParseFrameNumber
arg	47:44	47:48	6	line
water	47:44	0:0	7	line
arg	47:50	47:61	6	p_sys->fps
water	47:50	0:0	7	p_sys
op	47:55	0:0	7	->
water	47:57	0:0	7	fps
if	49:8	51:20	4	(i_frame - i_prev_chapter < i_min_chapter_size || i_frame >= i_frame_count - i_min_chapter_size)
cond	49:12	50:39	5	i_frame - i_prev_chapter < i_min_chapter_size || i_frame >= i_frame_count - i_min_chapter_size
water	49:12	0:0	6	i_frame
op	49:20	0:0	6	-
water	49:22	0:0	6	i_prev_chapter
op	49:37	0:0	6	<
water	49:39	0:0	6	i_min_chapter_size
op	49:58	0:0	6	||
water	50:12	0:0	6	i_frame
op	50:20	0:0	6	>=
water	50:23	0:0	6	i_frame_count
op	50:37	0:0	6	-
water	50:39	0:0	6	i_min_chapter_size
stmts	51:12	51:20	5	
continue	51:12	51:20	6	
water	52:8	0:0	4	i_prev_chapter
op	52:23	0:0	4	=
water	52:25	0:0	4	i_frame
water	52:32	0:0	4	;
if	54:8	55:39	4	(i_frame > - i_chapter_offset)
cond	54:12	54:23	5	i_frame > - i_chapter_offset
water	54:12	0:0	6	i_frame
op	54:20	0:0	6	>
op	54:22	0:0	6	-
water	54:23	0:0	6	i_chapter_offset
stmts	55:12	55:39	5	
water	55:12	0:0	6	i_frame
op	55:20	0:0	6	+=
water	55:23	0:0	6	i_chapter_offset
water	55:39	0:0	6	;
else	56:8	57:23	4
stmts	57:12	57:23	5	
water	57:12	0:0	6	i_frame
op	57:20	0:0	6	=
water	57:22	0:0	6	0
water	57:23	0:0	6	;
decl	58:8	58:25	4	uint64_t	i_offset
decl	59:8	59:30	4	uint16_t	i_file_number
if	60:8	62:20	4	(!ReadIndexRecord (indexfile ,p_sys -> b_ts_format ,i_frame ,& i_offset ,& i_file_number ))
cond	60:12	61:47	5	!ReadIndexRecord (indexfile ,p_sys -> b_ts_format ,i_frame ,& i_offset ,& i_file_number )
op	60:12	0:0	6	!
call	60:13	61:47	6	ReadIndexRecord
arg	60:30	60:39	7	indexfile
water	60:30	0:0	8	indexfile
arg	60:41	60:59	7	p_sys->b_ts_format
water	60:41	0:0	8	p_sys
op	60:46	0:0	8	->
water	60:48	0:0	8	b_ts_format
arg	61:12	61:19	7	i_frame
water	61:12	0:0	8	i_frame
arg	61:21	61:30	7	&i_offset
op	61:21	0:0	8	&
water	61:22	0:0	8	i_offset
arg	61:32	61:47	7	&i_file_number
op	61:32	0:0	8	&
water	61:33	0:0	8	i_file_number
stmts	62:12	62:20	5	
continue	62:12	62:20	6	
if	63:8	64:20	4	(i_file_number < 1 || i_file_number > FILE_COUNT)
cond	63:12	63:49	5	i_file_number < 1 || i_file_number > FILE_COUNT
water	63:12	0:0	6	i_file_number
op	63:26	0:0	6	<
water	63:28	0:0	6	1
op	63:30	0:0	6	||
water	63:33	0:0	6	i_file_number
op	63:47	0:0	6	>
water	63:49	0:0	6	FILE_COUNT
stmts	64:12	64:20	5	
continue	64:12	64:20	6	
decl	66:8	66:45	4	seekpoint_t	*sp
op	66:24	0:0	4	=
call	66:26	66:44	5	vlc_seekpoint_New
if	67:8	68:20	4	(! sp)
cond	67:12	67:13	5	! sp
op	67:12	0:0	6	!
water	67:13	0:0	6	sp
stmts	68:12	68:20	5	
continue	68:12	68:20	6	
water	69:8	0:0	4	sp
op	69:10	0:0	4	->
water	69:12	0:0	4	i_time_offset
op	69:26	0:0	4	=
water	69:28	0:0	4	i_frame
call	69:36	69:73	4	*(int64_t)
arg	69:49	69:73	5	CLOCK_FREQ/p_sys->fps
water	69:49	0:0	6	CLOCK_FREQ
op	69:60	0:0	6	/
water	69:62	0:0	6	p_sys
op	69:67	0:0	6	->
water	69:69	0:0	6	fps
water	69:74	0:0	4	;
water	70:8	0:0	4	sp
op	70:10	0:0	4	->
water	70:12	0:0	4	i_byte_offset
op	70:26	0:0	4	=
water	70:28	0:0	4	i_offset
water	70:36	0:0	4	;
for	71:8	72:47	4	( int i = 0 ;i + 1 < i_file_number;++ i)
forinit	0:0	71:22	5	 int i = 0 ;
decl	71:13	71:22	6	int	i
op	71:19	0:0	6	=
water	71:21	0:0	6	0
cond	71:24	71:32	5	i + 1 < i_file_number
water	71:24	0:0	6	i
op	71:26	0:0	6	+
water	71:28	0:0	6	1
op	71:30	0:0	6	<
water	71:32	0:0	6	i_file_number
forexpr	71:47	71:49	5	++ i
op	71:47	0:0	6	++
water	71:49	0:0	6	i
stmts	72:12	72:47	5	
water	72:12	0:0	6	sp
op	72:14	0:0	6	->
water	72:16	0:0	6	i_byte_offset
op	72:30	0:0	6	+=
call	72:33	72:46	6	FILE_SIZE
arg	72:44	72:46	7	i
water	72:44	0:0	8	i
water	72:47	0:0	6	;
water	73:8	0:0	4	sp
op	73:10	0:0	4	->
water	73:12	0:0	4	psz_name
op	73:21	0:0	4	=
call	73:23	73:36	4	strdup
arg	73:31	73:36	5	line
water	73:31	0:0	6	line
water	73:37	0:0	4	;
call	74:8	74:65	4	TAB_APPEND
arg	74:20	74:40	5	p_marks->i_seekpoint
water	74:20	0:0	6	p_marks
op	74:27	0:0	6	->
water	74:29	0:0	6	i_seekpoint
arg	74:42	74:60	5	p_marks->seekpoint
water	74:42	0:0	6	p_marks
op	74:49	0:0	6	->
water	74:51	0:0	6	seekpoint
arg	74:62	74:65	5	sp
water	74:62	0:0	6	sp
water	74:66	0:0	4	;
water	75:4	0:0	4	}
if	77:4	87:4	2	(p_marks -> i_seekpoint > 0 && p_marks -> seekpoint [ 0 ] -> i_byte_offset > 0)
cond	77:8	77:75	3	p_marks -> i_seekpoint > 0 && p_marks -> seekpoint [ 0 ] -> i_byte_offset > 0
water	77:8	0:0	4	p_marks
op	77:15	0:0	4	->
water	77:17	0:0	4	i_seekpoint
op	77:29	0:0	4	>
water	77:31	0:0	4	0
op	77:33	0:0	4	&&
water	77:36	0:0	4	p_marks
op	77:43	0:0	4	->
water	77:45	0:0	4	seekpoint
op	77:54	0:0	4	[
water	77:55	0:0	4	0
op	77:56	0:0	4	]
op	77:57	0:0	4	->
water	77:59	0:0	4	i_byte_offset
op	77:73	0:0	4	>
water	77:75	0:0	4	0
stmts	78:4	87:4	3	
water	78:4	0:0	4	{
decl	79:8	79:45	4	seekpoint_t	*sp
op	79:24	0:0	4	=
call	79:26	79:44	5	vlc_seekpoint_New
if	80:8	86:8	4	(sp)
cond	80:12	80:12	5	sp
water	80:12	0:0	6	sp
stmts	81:8	86:8	5	
water	81:8	0:0	6	{
water	82:12	0:0	6	sp
op	82:14	0:0	6	->
water	82:16	0:0	6	i_byte_offset
op	82:30	0:0	6	=
water	82:32	0:0	6	0
water	82:33	0:0	6	;
water	83:12	0:0	6	sp
op	83:14	0:0	6	->
water	83:16	0:0	6	i_time_offset
op	83:30	0:0	6	=
water	83:32	0:0	6	0
water	83:33	0:0	6	;
water	84:12	0:0	6	sp
op	84:14	0:0	6	->
water	84:16	0:0	6	psz_name
op	84:25	0:0	6	=
call	84:27	84:46	6	strdup
arg	84:35	84:46	7	_("Start")
call	84:35	84:44	8	_
arg	84:37	84:44	9	"Start"
water	84:37	0:0	10	"Start"
water	84:47	0:0	6	;
call	85:12	85:72	6	TAB_INSERT
arg	85:24	85:44	7	p_marks->i_seekpoint
water	85:24	0:0	8	p_marks
op	85:31	0:0	8	->
water	85:33	0:0	8	i_seekpoint
arg	85:46	85:64	7	p_marks->seekpoint
water	85:46	0:0	8	p_marks
op	85:53	0:0	8	->
water	85:55	0:0	8	seekpoint
arg	85:66	85:68	7	sp
water	85:66	0:0	8	sp
arg	85:70	85:72	7	0
water	85:70	0:0	8	0
water	85:73	0:0	6	;
water	86:8	0:0	6	}
water	87:4	0:0	4	}
if	88:4	89:32	2	(p_marks -> i_seekpoint > 0)
cond	88:8	88:31	3	p_marks -> i_seekpoint > 0
water	88:8	0:0	4	p_marks
op	88:15	0:0	4	->
water	88:17	0:0	4	i_seekpoint
op	88:29	0:0	4	>
water	88:31	0:0	4	0
stmts	89:8	89:32	3	
water	89:8	0:0	4	p_sys
op	89:13	0:0	4	->
water	89:15	0:0	4	p_marks
op	89:23	0:0	4	=
water	89:25	0:0	4	p_marks
water	89:32	0:0	4	;
else	90:4	91:41	2
stmts	91:8	91:41	3	
call	91:8	91:40	4	vlc_input_title_Delete
arg	91:32	91:40	5	p_marks
water	91:32	0:0	6	p_marks
water	91:41	0:0	4	;
call	92:4	92:22	2	fclose
arg	92:12	92:22	3	marksfile
water	92:12	0:0	4	marksfile
water	92:23	0:0	2	;
call	93:4	93:22	2	fclose
arg	93:12	93:22	3	indexfile
water	93:12	0:0	4	indexfile
water	93:23	0:0	2	;

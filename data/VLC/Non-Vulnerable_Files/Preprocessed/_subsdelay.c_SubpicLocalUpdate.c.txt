func	2:0	61:0	0	static void	SubpicLocalUpdate
params	2:29	0:0	1	
param	2:31	2:53	2	subpicture_t *	p_subpic
param	2:55	2:68	2	mtime_t	i_ts
stmnts	0:0	60:33	1	
decl	4:4	4:35	2	subsdelay_heap_entry_t	*p_entry
decl	5:4	5:28	2	subsdelay_heap_t	*p_heap
decl	6:4	6:22	2	filter_t	*p_filter
decl	7:4	7:21	2	int	i_overlapping
water	8:4	0:0	2	p_entry
op	8:12	0:0	2	=
water	8:14	0:0	2	p_subpic
op	8:22	0:0	2	->
water	8:24	0:0	2	updater
op	8:31	0:0	2	.
water	8:32	0:0	2	p_sys
water	8:37	0:0	2	;
if	9:4	12:4	2	(! p_entry || ! p_entry -> p_filter)
cond	9:8	9:30	3	! p_entry || ! p_entry -> p_filter
op	9:8	0:0	4	!
water	9:9	0:0	4	p_entry
op	9:17	0:0	4	||
op	9:20	0:0	4	!
water	9:21	0:0	4	p_entry
op	9:28	0:0	4	->
water	9:30	0:0	4	p_filter
stmts	10:4	12:4	3	
water	10:4	0:0	4	{
return	11:8	11:14	4	
water	12:4	0:0	4	}
water	13:4	0:0	2	p_filter
op	13:13	0:0	2	=
water	13:15	0:0	2	p_entry
op	13:22	0:0	2	->
water	13:24	0:0	2	p_filter
water	13:32	0:0	2	;
water	14:4	0:0	2	p_heap
op	14:11	0:0	2	=
op	14:13	0:0	2	&
water	14:14	0:0	2	p_filter
op	14:22	0:0	2	->
water	14:24	0:0	2	p_sys
op	14:29	0:0	2	->
water	14:31	0:0	2	heap
water	14:35	0:0	2	;
call	15:4	15:30	2	SubsdelayHeapLock
arg	15:23	15:30	3	p_heap
water	15:23	0:0	4	p_heap
water	15:31	0:0	2	;
if	16:4	29:4	2	(p_entry -> b_check_empty && p_subpic -> p_region)
cond	16:8	16:44	3	p_entry -> b_check_empty && p_subpic -> p_region
water	16:8	0:0	4	p_entry
op	16:15	0:0	4	->
water	16:17	0:0	4	b_check_empty
op	16:31	0:0	4	&&
water	16:34	0:0	4	p_subpic
op	16:42	0:0	4	->
water	16:44	0:0	4	p_region
stmts	17:4	29:4	3	
water	17:4	0:0	4	{
if	18:8	27:8	4	(SubsdelayIsTextEmpty (p_subpic -> p_region -> psz_html ) ||SubsdelayIsTextEmpty (p_subpic -> p_region -> psz_text ))
cond	18:12	19:63	5	SubsdelayIsTextEmpty (p_subpic -> p_region -> psz_html ) ||SubsdelayIsTextEmpty (p_subpic -> p_region -> psz_text )
call	18:12	18:63	6	SubsdelayIsTextEmpty
arg	18:34	18:63	7	p_subpic->p_region->psz_html
water	18:34	0:0	8	p_subpic
op	18:42	0:0	8	->
water	18:44	0:0	8	p_region
op	18:52	0:0	8	->
water	18:54	0:0	8	psz_html
op	18:65	0:0	6	||
call	19:12	19:63	6	SubsdelayIsTextEmpty
arg	19:34	19:63	7	p_subpic->p_region->psz_text
water	19:34	0:0	8	p_subpic
op	19:42	0:0	8	->
water	19:44	0:0	8	p_region
op	19:52	0:0	8	->
water	19:54	0:0	8	psz_text
stmts	20:8	27:8	5	
water	20:8	0:0	6	{
water	22:12	0:0	6	p_subpic
op	22:20	0:0	6	->
water	22:22	0:0	6	b_ephemer
op	22:32	0:0	6	=
water	22:34	0:0	6	false
water	22:39	0:0	6	;
water	23:12	0:0	6	p_subpic
op	23:20	0:0	6	->
water	23:22	0:0	6	i_stop
op	23:29	0:0	6	=
water	23:31	0:0	6	p_subpic
op	23:39	0:0	6	->
water	23:41	0:0	6	i_start
water	23:48	0:0	6	;
call	24:12	24:49	6	SubsdelayHeapRemove
arg	24:33	24:39	7	p_heap
water	24:33	0:0	8	p_heap
arg	24:41	24:49	7	p_entry
water	24:41	0:0	8	p_entry
water	24:50	0:0	6	;
call	25:12	25:40	6	SubsdelayHeapUnlock
arg	25:33	25:40	7	p_heap
water	25:33	0:0	8	p_heap
water	25:41	0:0	6	;
return	26:12	26:18	6	
water	27:8	0:0	6	}
water	28:8	0:0	4	p_entry
op	28:15	0:0	4	->
water	28:17	0:0	4	b_check_empty
op	28:31	0:0	4	=
water	28:33	0:0	4	false
water	28:38	0:0	4	;
water	29:4	0:0	4	}
if	30:4	35:4	2	(p_entry -> b_update_stop && ! p_entry -> b_update_ephemer)
cond	30:8	30:44	3	p_entry -> b_update_stop && ! p_entry -> b_update_ephemer
water	30:8	0:0	4	p_entry
op	30:15	0:0	4	->
water	30:17	0:0	4	b_update_stop
op	30:31	0:0	4	&&
op	30:34	0:0	4	!
water	30:35	0:0	4	p_entry
op	30:42	0:0	4	->
water	30:44	0:0	4	b_update_ephemer
stmts	31:4	35:4	3	
water	31:4	0:0	4	{
water	32:8	0:0	4	p_entry
op	32:15	0:0	4	->
water	32:17	0:0	4	i_new_stop
op	32:28	0:0	4	=
water	32:30	0:0	4	p_entry
op	32:37	0:0	4	->
water	32:39	0:0	4	p_source
op	32:47	0:0	4	->
water	32:49	0:0	4	i_start
op	32:57	0:0	4	+
call	32:59	32:101	4	SubsdelayEstimateDelay
arg	32:83	32:91	5	p_filter
water	32:83	0:0	6	p_filter
arg	32:93	32:101	5	p_entry
water	32:93	0:0	6	p_entry
water	32:102	0:0	4	;
water	33:8	0:0	4	p_entry
op	33:15	0:0	4	->
water	33:17	0:0	4	b_update_stop
op	33:31	0:0	4	=
water	33:33	0:0	4	false
water	33:38	0:0	4	;
call	34:8	34:45	4	SubsdelayEnforceDelayRules
arg	34:36	34:45	5	p_filter
water	34:36	0:0	6	p_filter
water	34:46	0:0	4	;
water	35:4	0:0	4	}
water	36:4	0:0	2	i_overlapping
op	36:18	0:0	2	=
call	36:20	36:69	2	SubsdelayHeapCountOverlap
arg	36:47	36:53	3	p_heap
water	36:47	0:0	4	p_heap
arg	36:55	36:62	3	p_entry
water	36:55	0:0	4	p_entry
arg	36:64	36:69	3	i_ts
water	36:64	0:0	4	i_ts
water	36:70	0:0	2	;
water	37:4	0:0	2	p_subpic
op	37:12	0:0	2	->
water	37:14	0:0	2	i_alpha
op	37:22	0:0	2	=
call	37:24	37:101	2	SubsdelayCalculateAlpha
arg	37:49	37:57	3	p_filter
water	37:49	0:0	4	p_filter
arg	37:59	37:72	3	i_overlapping
water	37:59	0:0	4	i_overlapping
arg	37:74	37:101	3	p_entry->p_source->i_alpha
water	37:74	0:0	4	p_entry
op	37:81	0:0	4	->
water	37:83	0:0	4	p_source
op	37:91	0:0	4	->
water	37:93	0:0	4	i_alpha
water	37:102	0:0	2	;
if	38:4	49:4	2	(p_entry -> b_update_position)
cond	38:8	38:17	3	p_entry -> b_update_position
water	38:8	0:0	4	p_entry
op	38:15	0:0	4	->
water	38:17	0:0	4	b_update_position
stmts	39:4	49:4	3	
water	39:4	0:0	4	{
water	40:8	0:0	4	p_subpic
op	40:16	0:0	4	->
water	40:18	0:0	4	b_absolute
op	40:29	0:0	4	=
water	40:31	0:0	4	false
water	40:36	0:0	4	;
if	41:8	47:8	4	(p_subpic -> p_region)
cond	41:12	41:22	5	p_subpic -> p_region
water	41:12	0:0	6	p_subpic
op	41:20	0:0	6	->
water	41:22	0:0	6	p_region
stmts	42:8	47:8	5	
water	42:8	0:0	6	{
water	43:12	0:0	6	p_subpic
op	43:20	0:0	6	->
water	43:22	0:0	6	p_region
op	43:30	0:0	6	->
water	43:32	0:0	6	i_x
op	43:36	0:0	6	=
water	43:38	0:0	6	0
water	43:39	0:0	6	;
water	44:12	0:0	6	p_subpic
op	44:20	0:0	6	->
water	44:22	0:0	6	p_region
op	44:30	0:0	6	->
water	44:32	0:0	6	i_y
op	44:36	0:0	6	=
water	44:38	0:0	6	10
water	44:40	0:0	6	;
water	45:12	0:0	6	p_subpic
op	45:20	0:0	6	->
water	45:22	0:0	6	p_region
op	45:30	0:0	6	->
water	45:32	0:0	6	i_align
op	45:40	0:0	6	=
water	45:42	0:0	6	(
water	45:44	0:0	6	p_subpic
op	45:52	0:0	6	->
water	45:54	0:0	6	p_region
op	45:62	0:0	6	->
water	45:64	0:0	6	i_align
op	45:72	0:0	6	&
water	45:74	0:0	6	(
water	45:76	0:0	6	~SUBPICTURE_ALIGN_MASK
water	45:99	0:0	6	)
water	45:101	0:0	6	)
op	46:20	0:0	6	|
water	46:22	0:0	6	SUBPICTURE_ALIGN_BOTTOM
water	46:45	0:0	6	;
water	47:8	0:0	6	}
water	48:8	0:0	4	p_entry
op	48:15	0:0	4	->
water	48:17	0:0	4	b_update_position
op	48:35	0:0	4	=
water	48:37	0:0	4	false
water	48:42	0:0	4	;
water	49:4	0:0	4	}
else	50:4	59:4	2
stmts	50:9	59:4	3	
if	50:9	59:4	4	(p_entry -> b_last_region_saved)
cond	50:13	50:22	5	p_entry -> b_last_region_saved
water	50:13	0:0	6	p_entry
op	50:20	0:0	6	->
water	50:22	0:0	6	b_last_region_saved
stmts	51:4	59:4	5	
water	51:4	0:0	6	{
water	52:8	0:0	6	p_subpic
op	52:16	0:0	6	->
water	52:18	0:0	6	b_absolute
op	52:29	0:0	6	=
water	52:31	0:0	6	true
water	52:35	0:0	6	;
if	53:8	58:8	6	(p_subpic -> p_region)
cond	53:12	53:22	7	p_subpic -> p_region
water	53:12	0:0	8	p_subpic
op	53:20	0:0	8	->
water	53:22	0:0	8	p_region
stmts	54:8	58:8	7	
water	54:8	0:0	8	{
water	55:12	0:0	8	p_subpic
op	55:20	0:0	8	->
water	55:22	0:0	8	p_region
op	55:30	0:0	8	->
water	55:32	0:0	8	i_x
op	55:36	0:0	8	=
water	55:38	0:0	8	p_entry
op	55:45	0:0	8	->
water	55:47	0:0	8	i_last_region_x
water	55:62	0:0	8	;
water	56:12	0:0	8	p_subpic
op	56:20	0:0	8	->
water	56:22	0:0	8	p_region
op	56:30	0:0	8	->
water	56:32	0:0	8	i_y
op	56:36	0:0	8	=
water	56:38	0:0	8	p_entry
op	56:45	0:0	8	->
water	56:47	0:0	8	i_last_region_y
water	56:62	0:0	8	;
water	57:12	0:0	8	p_subpic
op	57:20	0:0	8	->
water	57:22	0:0	8	p_region
op	57:30	0:0	8	->
water	57:32	0:0	8	i_align
op	57:40	0:0	8	=
water	57:42	0:0	8	p_entry
op	57:49	0:0	8	->
water	57:51	0:0	8	i_last_region_align
water	57:70	0:0	8	;
water	58:8	0:0	8	}
water	59:4	0:0	6	}
call	60:4	60:32	2	SubsdelayHeapUnlock
arg	60:25	60:32	3	p_heap
water	60:25	0:0	4	p_heap
water	60:33	0:0	2	;

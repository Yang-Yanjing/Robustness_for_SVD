func	2:0	129:0	0	char *	SDPGenerate
params	2:17	0:0	1	
param	2:19	2:42	2	sout_stream_t *	p_stream
param	2:44	2:65	2	const char *	rtsp_url
stmnts	0:0	128:18	1	
decl	4:4	4:46	2	sout_stream_sys_t	*p_sys
op	4:29	0:0	2	=
water	4:31	0:0	2	p_stream
op	4:39	0:0	2	->
water	4:41	0:0	2	p_sys
decl	5:4	5:24	2	char	*psz_sdp
op	5:18	0:0	2	=
water	5:20	0:0	2	NULL
decl	6:4	6:31	2	struct sockaddr_storage	dst
decl	7:4	7:20	2	socklen_t	dstlen
decl	8:4	8:9	2	int	i
decl	24:4	24:16	2	int	inclport
call	25:4	25:36	2	vlc_mutex_lock
arg	25:20	25:36	3	&p_sys->lock_es
op	25:20	0:0	4	&
water	25:21	0:0	4	p_sys
op	25:26	0:0	4	->
water	25:28	0:0	4	lock_es
water	25:37	0:0	2	;
if	26:4	27:16	2	(unlikely (p_sys -> i_es == 0 || ( rtsp_url != NULL && ! p_sys -> es [ 0 ] -> rtsp_id ) ))
cond	26:8	26:81	3	unlikely (p_sys -> i_es == 0 || ( rtsp_url != NULL && ! p_sys -> es [ 0 ] -> rtsp_id ) )
call	26:8	26:81	4	unlikely
arg	26:17	26:81	5	p_sys->i_es==0||(rtsp_url!=NULL&&!p_sys->es[0]->rtsp_id)
water	26:17	0:0	6	p_sys
op	26:22	0:0	6	->
water	26:24	0:0	6	i_es
op	26:29	0:0	6	==
water	26:32	0:0	6	0
op	26:34	0:0	6	||
water	26:37	0:0	6	(
water	26:38	0:0	6	rtsp_url
op	26:47	0:0	6	!=
water	26:50	0:0	6	NULL
op	26:55	0:0	6	&&
op	26:58	0:0	6	!
water	26:59	0:0	6	p_sys
op	26:64	0:0	6	->
water	26:66	0:0	6	es
op	26:68	0:0	6	[
water	26:69	0:0	6	0
op	26:70	0:0	6	]
op	26:71	0:0	6	->
water	26:73	0:0	6	rtsp_id
water	26:80	0:0	6	)
stmts	27:8	27:16	3	
goto	27:8	27:16	4	out
water	27:13	0:0	5	out
if	28:4	39:4	2	(p_sys -> psz_destination != NULL)
cond	28:8	28:34	3	p_sys -> psz_destination != NULL
water	28:8	0:0	4	p_sys
op	28:13	0:0	4	->
water	28:15	0:0	4	psz_destination
op	28:31	0:0	4	!=
water	28:34	0:0	4	NULL
stmts	29:4	39:4	3	
water	29:4	0:0	4	{
water	30:8	0:0	4	inclport
op	30:17	0:0	4	=
water	30:19	0:0	4	1
water	30:20	0:0	4	;
water	32:8	0:0	4	dstlen
op	32:15	0:0	4	=
op	32:17	0:0	4	sizeof
water	32:23	0:0	4	(
water	32:25	0:0	4	dst
water	32:29	0:0	4	)
water	32:30	0:0	4	;
if	33:8	35:59	4	(p_sys -> es [ 0 ] -> listen . fd != NULL)
cond	33:12	33:39	5	p_sys -> es [ 0 ] -> listen . fd != NULL
water	33:12	0:0	6	p_sys
op	33:17	0:0	6	->
water	33:19	0:0	6	es
op	33:21	0:0	6	[
water	33:22	0:0	6	0
op	33:23	0:0	6	]
op	33:24	0:0	6	->
water	33:26	0:0	6	listen
op	33:32	0:0	6	.
water	33:33	0:0	6	fd
op	33:36	0:0	6	!=
water	33:39	0:0	6	NULL
stmts	34:12	35:59	5	
call	34:12	35:58	6	getsockname
arg	34:25	34:51	7	p_sys->es[0]->listen.fd[0]
water	34:25	0:0	8	p_sys
op	34:30	0:0	8	->
water	34:32	0:0	8	es
op	34:34	0:0	8	[
water	34:35	0:0	8	0
op	34:36	0:0	8	]
op	34:37	0:0	8	->
water	34:39	0:0	8	listen
op	34:45	0:0	8	.
water	34:46	0:0	8	fd
op	34:48	0:0	8	[
water	34:49	0:0	8	0
op	34:50	0:0	8	]
arg	35:25	35:48	7	(structsockaddr*)&dst
water	35:25	0:0	8	(
water	35:26	0:0	8	struct
water	35:33	0:0	8	sockaddr
op	35:42	0:0	8	*
water	35:43	0:0	8	)
op	35:44	0:0	8	&
water	35:45	0:0	8	dst
arg	35:50	35:58	7	&dstlen
op	35:50	0:0	8	&
water	35:51	0:0	8	dstlen
water	35:59	0:0	6	;
else	36:8	38:59	4
stmts	37:12	38:59	5	
call	37:12	38:58	6	getpeername
arg	37:25	37:54	7	p_sys->es[0]->sinkv[0].rtp_fd
water	37:25	0:0	8	p_sys
op	37:30	0:0	8	->
water	37:32	0:0	8	es
op	37:34	0:0	8	[
water	37:35	0:0	8	0
op	37:36	0:0	8	]
op	37:37	0:0	8	->
water	37:39	0:0	8	sinkv
op	37:44	0:0	8	[
water	37:45	0:0	8	0
op	37:46	0:0	8	]
op	37:47	0:0	8	.
water	37:48	0:0	8	rtp_fd
arg	38:25	38:48	7	(structsockaddr*)&dst
water	38:25	0:0	8	(
water	38:26	0:0	8	struct
water	38:33	0:0	8	sockaddr
op	38:42	0:0	8	*
water	38:43	0:0	8	)
op	38:44	0:0	8	&
water	38:45	0:0	8	dst
arg	38:50	38:58	7	&dstlen
op	38:50	0:0	8	&
water	38:51	0:0	8	dstlen
water	38:59	0:0	6	;
water	39:4	0:0	4	}
else	40:4	54:4	2
stmts	41:4	54:4	3	
water	41:4	0:0	4	{
water	42:8	0:0	4	inclport
op	42:17	0:0	4	=
water	42:19	0:0	4	0
water	42:20	0:0	4	;
decl	44:8	45:41	4	bool	ipv6
op	44:18	0:0	4	=
water	44:20	0:0	4	rtsp_url
op	44:29	0:0	4	!=
water	44:32	0:0	4	NULL
op	44:37	0:0	4	&&
call	44:40	44:57	5	strlen
arg	44:48	44:57	6	rtsp_url
water	44:48	0:0	7	rtsp_url
op	44:59	0:0	4	>
water	44:61	0:0	4	7
op	45:20	0:0	4	&&
water	45:23	0:0	4	rtsp_url
op	45:31	0:0	4	[
water	45:32	0:0	4	7
op	45:33	0:0	4	]
op	45:35	0:0	4	==
water	45:38	0:0	4	'['
water	47:8	0:0	4	dstlen
op	47:15	0:0	4	=
water	47:17	0:0	4	ipv6
water	47:22	0:0	4	?
op	47:24	0:0	4	sizeof
water	47:30	0:0	4	(
water	47:32	0:0	4	struct
water	47:39	0:0	4	sockaddr_in6
water	47:52	0:0	4	)
water	48:22	0:0	4	:
op	48:24	0:0	4	sizeof
water	48:30	0:0	4	(
water	48:32	0:0	4	struct
water	48:39	0:0	4	sockaddr_in
water	48:51	0:0	4	)
water	48:52	0:0	4	;
call	49:8	49:31	4	memset
arg	49:16	49:20	5	&dst
op	49:16	0:0	6	&
water	49:17	0:0	6	dst
arg	49:22	49:23	5	0
water	49:22	0:0	6	0
arg	49:25	49:31	5	dstlen
water	49:25	0:0	6	dstlen
water	49:32	0:0	4	;
water	50:8	0:0	4	dst
op	50:11	0:0	4	.
water	50:12	0:0	4	ss_family
op	50:22	0:0	4	=
water	50:24	0:0	4	ipv6
water	50:29	0:0	4	?
water	50:31	0:0	4	AF_INET6
water	50:40	0:0	4	:
water	50:42	0:0	4	AF_INET
water	50:49	0:0	4	;
water	52:8	0:0	4	dst
op	52:11	0:0	4	.
water	52:12	0:0	4	ss_len
op	52:19	0:0	4	=
water	52:21	0:0	4	dstlen
water	52:27	0:0	4	;
water	54:4	0:0	4	}
water	55:4	0:0	2	psz_sdp
op	55:12	0:0	2	=
call	55:14	56:70	2	vlc_sdp_Start
arg	55:29	55:51	3	VLC_OBJECT(p_stream)
call	55:29	55:50	4	VLC_OBJECT
arg	55:41	55:50	5	p_stream
water	55:41	0:0	6	p_stream
arg	55:53	55:68	3	SOUT_CFG_PREFIX
water	55:53	0:0	4	SOUT_CFG_PREFIX
arg	56:29	56:33	3	NULL
water	56:29	0:0	4	NULL
arg	56:35	56:36	3	0
water	56:35	0:0	4	0
arg	56:38	56:61	3	(structsockaddr*)&dst
water	56:38	0:0	4	(
water	56:39	0:0	4	struct
water	56:46	0:0	4	sockaddr
op	56:55	0:0	4	*
water	56:56	0:0	4	)
op	56:57	0:0	4	&
water	56:58	0:0	4	dst
arg	56:63	56:70	3	dstlen
water	56:63	0:0	4	dstlen
water	56:71	0:0	2	;
if	57:4	58:16	2	(psz_sdp == NULL)
cond	57:8	57:19	3	psz_sdp == NULL
water	57:8	0:0	4	psz_sdp
op	57:16	0:0	4	==
water	57:19	0:0	4	NULL
stmts	58:8	58:16	3	
goto	58:8	58:16	4	out
water	58:13	0:0	5	out
if	60:4	61:54	2	(p_sys -> rtcp_mux)
cond	60:8	60:15	3	p_sys -> rtcp_mux
water	60:8	0:0	4	p_sys
op	60:13	0:0	4	->
water	60:15	0:0	4	rtcp_mux
stmts	61:8	61:54	3	
call	61:8	61:53	4	sdp_AddAttribute
arg	61:26	61:34	5	&psz_sdp
op	61:26	0:0	6	&
water	61:27	0:0	6	psz_sdp
arg	61:36	61:46	5	"rtcp-mux"
water	61:36	0:0	6	"rtcp-mux"
arg	61:48	61:53	5	NULL
water	61:48	0:0	6	NULL
water	61:54	0:0	4	;
if	62:4	63:64	2	(rtsp_url != NULL)
cond	62:8	62:20	3	rtsp_url != NULL
water	62:8	0:0	4	rtsp_url
op	62:17	0:0	4	!=
water	62:20	0:0	4	NULL
stmts	63:8	63:64	3	
call	63:8	63:63	4	sdp_AddAttribute
arg	63:27	63:35	5	&psz_sdp
op	63:27	0:0	6	&
water	63:28	0:0	6	psz_sdp
arg	63:37	63:46	5	"control"
water	63:37	0:0	6	"control"
arg	63:48	63:52	5	"%s"
water	63:48	0:0	6	"%s"
arg	63:54	63:63	5	rtsp_url
water	63:54	0:0	6	rtsp_url
water	63:64	0:0	4	;
decl	64:4	64:33	2	const char	*proto
op	64:22	0:0	2	=
water	64:24	0:0	2	"RTP/AVP"
if	65:4	80:4	2	(rtsp_url == NULL)
cond	65:8	65:20	3	rtsp_url == NULL
water	65:8	0:0	4	rtsp_url
op	65:17	0:0	4	==
water	65:20	0:0	4	NULL
stmts	66:4	80:4	3	
water	66:4	0:0	4	{
switch	67:8	79:8	4	(p_sys -> proto)
cond	67:16	67:23	5	p_sys -> proto
water	67:16	0:0	6	p_sys
op	67:21	0:0	6	->
water	67:23	0:0	6	proto
stmts	68:8	79:8	5	
water	68:8	0:0	6	{
label	69:12	69:28	6	case IPPROTO_UDP :
break	70:16	70:21	6	
label	71:12	71:28	6	case IPPROTO_TCP :
water	72:16	0:0	6	proto
op	72:22	0:0	6	=
water	72:24	0:0	6	"TCP/RTP/AVP"
water	72:37	0:0	6	;
break	73:16	73:21	6	
label	74:12	74:29	6	case IPPROTO_DCCP :
water	75:16	0:0	6	proto
op	75:22	0:0	6	=
water	75:24	0:0	6	"DCCP/RTP/AVP"
water	75:38	0:0	6	;
break	76:16	76:21	6	
label	77:12	77:32	6	case IPPROTO_UDPLITE :
return	78:16	78:30	6	psz_sdp
water	78:23	0:0	7	psz_sdp
water	79:8	0:0	6	}
water	80:4	0:0	4	}
for	81:4	125:4	2	(i = 0 ;i < p_sys -> i_es;i ++)
forinit	81:9	81:14	3	i = 0 ;
water	81:9	0:0	4	i
op	81:11	0:0	4	=
water	81:13	0:0	4	0
water	81:14	0:0	4	;
cond	81:16	81:27	3	i < p_sys -> i_es
water	81:16	0:0	4	i
op	81:18	0:0	4	<
water	81:20	0:0	4	p_sys
op	81:25	0:0	4	->
water	81:27	0:0	4	i_es
forexpr	81:33	81:34	3	i ++
water	81:33	0:0	4	i
op	81:34	0:0	4	++
stmts	82:4	125:4	3	
water	82:4	0:0	4	{
decl	83:8	83:47	4	sout_stream_id_sys_t	*id
op	83:33	0:0	4	=
water	83:35	0:0	4	p_sys
op	83:40	0:0	4	->
water	83:42	0:0	4	es
op	83:44	0:0	4	[
water	83:45	0:0	4	i
op	83:46	0:0	4	]
decl	84:8	84:44	4	rtp_format_t	*rtp_fmt
op	84:30	0:0	4	=
op	84:32	0:0	4	&
water	84:33	0:0	4	id
op	84:35	0:0	4	->
water	84:37	0:0	4	rtp_fmt
decl	85:8	85:30	4	const char	*mime_major
switch	86:8	99:8	4	(rtp_fmt -> cat)
cond	86:16	86:25	5	rtp_fmt -> cat
water	86:16	0:0	6	rtp_fmt
op	86:23	0:0	6	->
water	86:25	0:0	6	cat
stmts	87:8	99:8	5	
water	87:8	0:0	6	{
label	88:12	88:25	6	case VIDEO_ES :
water	89:16	0:0	6	mime_major
op	89:27	0:0	6	=
water	89:29	0:0	6	"video"
water	89:36	0:0	6	;
break	90:16	90:21	6	
label	91:12	91:25	6	case AUDIO_ES :
water	92:16	0:0	6	mime_major
op	92:27	0:0	6	=
water	92:29	0:0	6	"audio"
water	92:36	0:0	6	;
break	93:16	93:21	6	
label	94:12	94:23	6	case SPU_ES :
water	95:16	0:0	6	mime_major
op	95:27	0:0	6	=
water	95:29	0:0	6	"text"
water	95:35	0:0	6	;
break	96:16	96:21	6	
label	97:12	97:19	6	default :
continue	98:16	98:24	6	
water	99:8	0:0	6	}
call	100:8	103:35	4	sdp_AddMedia
arg	100:22	100:30	5	&psz_sdp
op	100:22	0:0	6	&
water	100:23	0:0	6	psz_sdp
arg	100:32	100:42	5	mime_major
water	100:32	0:0	6	mime_major
arg	100:44	100:49	5	proto
water	100:44	0:0	6	proto
arg	100:51	100:72	5	inclport*id->i_port
water	100:51	0:0	6	inclport
op	100:60	0:0	6	*
water	100:62	0:0	6	id
op	100:64	0:0	6	->
water	100:66	0:0	6	i_port
arg	101:22	101:43	5	rtp_fmt->payload_type
water	101:22	0:0	6	rtp_fmt
op	101:29	0:0	6	->
water	101:31	0:0	6	payload_type
arg	101:45	101:50	5	false
water	101:45	0:0	6	false
arg	101:52	101:68	5	rtp_fmt->bitrate
water	101:52	0:0	6	rtp_fmt
op	101:59	0:0	6	->
water	101:61	0:0	6	bitrate
arg	102:22	102:37	5	rtp_fmt->ptname
water	102:22	0:0	6	rtp_fmt
op	102:29	0:0	6	->
water	102:31	0:0	6	ptname
arg	102:39	102:58	5	rtp_fmt->clock_rate
water	102:39	0:0	6	rtp_fmt
op	102:46	0:0	6	->
water	102:48	0:0	6	clock_rate
arg	102:60	102:77	5	rtp_fmt->channels
water	102:60	0:0	6	rtp_fmt
op	102:67	0:0	6	->
water	102:69	0:0	6	channels
arg	103:22	103:35	5	rtp_fmt->fmtp
water	103:22	0:0	6	rtp_fmt
op	103:29	0:0	6	->
water	103:31	0:0	6	fmtp
water	103:36	0:0	4	;
if	105:8	106:71	4	(inclport && ! p_sys -> rtcp_mux && ( id -> i_port & 1 ))
cond	105:12	105:59	5	inclport && ! p_sys -> rtcp_mux && ( id -> i_port & 1 )
water	105:12	0:0	6	inclport
op	105:21	0:0	6	&&
op	105:24	0:0	6	!
water	105:25	0:0	6	p_sys
op	105:30	0:0	6	->
water	105:32	0:0	6	rtcp_mux
op	105:41	0:0	6	&&
water	105:44	0:0	6	(
water	105:45	0:0	6	id
op	105:47	0:0	6	->
water	105:49	0:0	6	i_port
op	105:56	0:0	6	&
water	105:58	0:0	6	1
water	105:59	0:0	6	)
stmts	106:12	106:71	5	
call	106:12	106:70	6	sdp_AddAttribute
arg	106:31	106:39	7	&psz_sdp
op	106:31	0:0	8	&
water	106:32	0:0	8	psz_sdp
arg	106:41	106:47	7	"rtcp"
water	106:41	0:0	8	"rtcp"
arg	106:49	106:53	7	"%u"
water	106:49	0:0	8	"%u"
arg	106:55	106:70	7	id->i_port+1
water	106:55	0:0	8	id
op	106:57	0:0	8	->
water	106:59	0:0	8	i_port
op	106:66	0:0	8	+
water	106:68	0:0	8	1
water	106:71	0:0	6	;
if	107:8	115:8	4	(rtsp_url != NULL)
cond	107:12	107:24	5	rtsp_url != NULL
water	107:12	0:0	6	rtsp_url
op	107:21	0:0	6	!=
water	107:24	0:0	6	NULL
stmts	108:8	115:8	5	
water	108:8	0:0	6	{
decl	109:12	109:74	6	char	*track_url
op	109:28	0:0	6	=
call	109:30	109:73	7	RtspAppendTrackPath
arg	109:51	109:62	8	id->rtsp_id
water	109:51	0:0	9	id
op	109:53	0:0	9	->
water	109:55	0:0	9	rtsp_id
arg	109:64	109:73	8	rtsp_url
water	109:64	0:0	9	rtsp_url
if	110:12	114:12	6	(track_url != NULL)
cond	110:16	110:29	7	track_url != NULL
water	110:16	0:0	8	track_url
op	110:26	0:0	8	!=
water	110:29	0:0	8	NULL
stmts	111:12	114:12	7	
water	111:12	0:0	8	{
call	112:16	112:72	8	sdp_AddAttribute
arg	112:35	112:43	9	&psz_sdp
op	112:35	0:0	10	&
water	112:36	0:0	10	psz_sdp
arg	112:45	112:54	9	"control"
water	112:45	0:0	10	"control"
arg	112:56	112:60	9	"%s"
water	112:56	0:0	10	"%s"
arg	112:62	112:72	9	track_url
water	112:62	0:0	10	track_url
water	112:73	0:0	8	;
call	113:16	113:32	8	free
arg	113:22	113:32	9	track_url
water	113:22	0:0	10	track_url
water	113:33	0:0	8	;
water	114:12	0:0	8	}
water	115:8	0:0	6	}
else	116:8	124:8	4
stmts	117:8	124:8	5	
water	117:8	0:0	6	{
if	118:12	119:64	6	(id -> listen . fd != NULL)
cond	118:16	118:33	7	id -> listen . fd != NULL
water	118:16	0:0	8	id
op	118:18	0:0	8	->
water	118:20	0:0	8	listen
op	118:26	0:0	8	.
water	118:27	0:0	8	fd
op	118:30	0:0	8	!=
water	118:33	0:0	8	NULL
stmts	119:16	119:64	7	
call	119:16	119:63	8	sdp_AddAttribute
arg	119:34	119:42	9	&psz_sdp
op	119:34	0:0	10	&
water	119:35	0:0	10	psz_sdp
arg	119:44	119:51	9	"setup"
water	119:44	0:0	10	"setup"
arg	119:53	119:63	9	"passive"
water	119:53	0:0	10	"passive"
water	119:64	0:0	8	;
if	120:12	123:75	6	(p_sys -> proto == IPPROTO_DCCP)
cond	120:16	120:32	7	p_sys -> proto == IPPROTO_DCCP
water	120:16	0:0	8	p_sys
op	120:21	0:0	8	->
water	120:23	0:0	8	proto
op	120:29	0:0	8	==
water	120:32	0:0	8	IPPROTO_DCCP
stmts	121:16	123:75	7	
call	121:16	123:74	8	sdp_AddAttribute
arg	121:34	121:42	9	&psz_sdp
op	121:34	0:0	10	&
water	121:35	0:0	10	psz_sdp
arg	121:44	121:63	9	"dccp-service-code"
water	121:44	0:0	10	"dccp-service-code"
arg	122:34	122:44	9	"SC:RTP%c"
water	122:34	0:0	10	"SC:RTP%c"
arg	123:34	123:74	9	toupper((unsignedchar)mime_major[0])
call	123:34	123:72	10	toupper
arg	123:43	123:72	11	(unsignedchar)mime_major[0]
water	123:43	0:0	12	(
water	123:44	0:0	12	unsigned
water	123:53	0:0	12	char
water	123:57	0:0	12	)
water	123:58	0:0	12	mime_major
op	123:68	0:0	12	[
water	123:69	0:0	12	0
op	123:70	0:0	12	]
water	123:75	0:0	8	;
water	124:8	0:0	6	}
water	125:4	0:0	4	}
label	126:0	126:3	2	out :
call	127:4	127:38	2	vlc_mutex_unlock
arg	127:22	127:38	3	&p_sys->lock_es
op	127:22	0:0	4	&
water	127:23	0:0	4	p_sys
op	127:28	0:0	4	->
water	127:30	0:0	4	lock_es
water	127:39	0:0	2	;
return	128:4	128:18	2	psz_sdp
water	128:11	0:0	3	psz_sdp

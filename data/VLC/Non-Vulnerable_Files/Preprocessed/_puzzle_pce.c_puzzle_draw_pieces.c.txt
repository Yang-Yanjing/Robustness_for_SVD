func	2:0	27:0	0	void	puzzle_draw_pieces
params	2:23	0:0	1	
param	2:25	2:43	2	filter_t *	p_filter
param	2:45	2:64	2	picture_t *	p_pic_in
param	2:66	2:86	2	picture_t *	p_pic_out
stmnts	0:0	26:10	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
if	5:4	6:14	2	(( p_sys -> ps_puzzle_array == NULL ) || ( p_sys -> ps_pieces == NULL ))
cond	5:8	5:69	3	( p_sys -> ps_puzzle_array == NULL ) || ( p_sys -> ps_pieces == NULL )
water	5:8	0:0	4	(
water	5:9	0:0	4	p_sys
op	5:14	0:0	4	->
water	5:16	0:0	4	ps_puzzle_array
op	5:32	0:0	4	==
water	5:35	0:0	4	NULL
water	5:39	0:0	4	)
op	5:41	0:0	4	||
water	5:44	0:0	4	(
water	5:45	0:0	4	p_sys
op	5:50	0:0	4	->
water	5:52	0:0	4	ps_pieces
op	5:62	0:0	4	==
water	5:65	0:0	4	NULL
water	5:69	0:0	4	)
stmts	6:8	6:14	3	
return	6:8	6:14	4	
for	7:4	25:4	2	( uint8_t i_plane = 0 ;i_plane < p_pic_out -> i_planes;i_plane ++)
forinit	0:0	7:28	3	 uint8_t i_plane = 0 ;
decl	7:9	7:28	4	uint8_t	i_plane
op	7:25	0:0	4	=
water	7:27	0:0	4	0
cond	7:30	7:51	3	i_plane < p_pic_out -> i_planes
water	7:30	0:0	4	i_plane
op	7:38	0:0	4	<
water	7:40	0:0	4	p_pic_out
op	7:49	0:0	4	->
water	7:51	0:0	4	i_planes
forexpr	7:61	7:68	3	i_plane ++
water	7:61	0:0	4	i_plane
op	7:68	0:0	4	++
stmts	7:73	25:4	3	
water	7:73	0:0	4	{
for	8:8	24:8	4	( int32_t i = p_sys -> s_allocated . i_pieces_nbr - 1 ;i >= 0;i --)
forinit	0:0	8:59	5	 int32_t i = p_sys -> s_allocated . i_pieces_nbr - 1 ;
decl	8:14	8:59	6	int32_t	i
op	8:24	0:0	6	=
water	8:26	0:0	6	p_sys
op	8:31	0:0	6	->
water	8:33	0:0	6	s_allocated
op	8:44	0:0	6	.
water	8:45	0:0	6	i_pieces_nbr
op	8:57	0:0	6	-
water	8:58	0:0	6	1
cond	8:61	8:66	5	i >= 0
water	8:61	0:0	6	i
op	8:63	0:0	6	>=
water	8:66	0:0	6	0
forexpr	8:70	8:71	5	i --
water	8:70	0:0	6	i
op	8:71	0:0	6	--
stmts	8:76	24:8	5	
water	8:76	0:0	6	{
decl	9:12	9:52	6	piece_t	*ps_piece
op	9:30	0:0	6	=
op	9:32	0:0	6	&
water	9:33	0:0	6	p_sys
op	9:38	0:0	6	->
water	9:40	0:0	6	ps_pieces
op	9:49	0:0	6	[
water	9:50	0:0	6	i
op	9:51	0:0	6	]
if	10:12	15:12	6	(! p_sys -> s_current_param . b_advanced || ( ps_piece -> i_actual_mirror == 1 && ps_piece -> i_actual_angle == 0 && p_sys -> s_current_param . i_shape_size == 0 ))
cond	10:16	12:63	7	! p_sys -> s_current_param . b_advanced || ( ps_piece -> i_actual_mirror == 1 && ps_piece -> i_actual_angle == 0 && p_sys -> s_current_param . i_shape_size == 0 )
op	10:16	0:0	8	!
water	10:17	0:0	8	p_sys
op	10:22	0:0	8	->
water	10:24	0:0	8	s_current_param
op	10:39	0:0	8	.
water	10:40	0:0	8	b_advanced
op	11:20	0:0	8	||
water	11:23	0:0	8	(
water	11:24	0:0	8	ps_piece
op	11:32	0:0	8	->
water	11:34	0:0	8	i_actual_mirror
op	11:50	0:0	8	==
water	11:53	0:0	8	1
op	11:55	0:0	8	&&
water	11:58	0:0	8	ps_piece
op	11:66	0:0	8	->
water	11:68	0:0	8	i_actual_angle
op	11:83	0:0	8	==
water	11:86	0:0	8	0
op	12:20	0:0	8	&&
water	12:23	0:0	8	p_sys
op	12:28	0:0	8	->
water	12:30	0:0	8	s_current_param
op	12:45	0:0	8	.
water	12:46	0:0	8	i_shape_size
op	12:59	0:0	8	==
water	12:62	0:0	8	0
water	12:63	0:0	8	)
stmts	13:12	15:12	7	
water	13:12	0:0	8	{
call	14:16	14:94	8	puzzle_drw_basic_pce_in_plane
arg	14:46	14:54	9	p_filter
water	14:46	0:0	10	p_filter
arg	14:56	14:64	9	p_pic_in
water	14:56	0:0	10	p_pic_in
arg	14:66	14:75	9	p_pic_out
water	14:66	0:0	10	p_pic_out
arg	14:77	14:84	9	i_plane
water	14:77	0:0	10	i_plane
arg	14:86	14:94	9	ps_piece
water	14:86	0:0	10	ps_piece
water	14:95	0:0	8	;
water	15:12	0:0	8	}
else	16:12	20:12	6
stmts	16:17	20:12	7	
if	16:17	20:12	8	(( p_sys -> s_current_param . i_shape_size == 0 ) || ! p_sys -> b_shape_init || ( p_sys -> ps_pieces_shapes == NULL ) || ( ! p_sys -> b_shape_init ))
cond	16:22	17:81	9	( p_sys -> s_current_param . i_shape_size == 0 ) || ! p_sys -> b_shape_init || ( p_sys -> ps_pieces_shapes == NULL ) || ( ! p_sys -> b_shape_init )
water	16:22	0:0	10	(
water	16:24	0:0	10	p_sys
op	16:29	0:0	10	->
water	16:31	0:0	10	s_current_param
op	16:46	0:0	10	.
water	16:47	0:0	10	i_shape_size
op	16:60	0:0	10	==
water	16:63	0:0	10	0
water	16:64	0:0	10	)
op	16:67	0:0	10	||
op	16:70	0:0	10	!
water	16:71	0:0	10	p_sys
op	16:76	0:0	10	->
water	16:78	0:0	10	b_shape_init
op	17:20	0:0	10	||
water	17:23	0:0	10	(
water	17:24	0:0	10	p_sys
op	17:29	0:0	10	->
water	17:31	0:0	10	ps_pieces_shapes
op	17:48	0:0	10	==
water	17:51	0:0	10	NULL
water	17:55	0:0	10	)
op	17:57	0:0	10	||
water	17:60	0:0	10	(
op	17:61	0:0	10	!
water	17:62	0:0	10	p_sys
op	17:67	0:0	10	->
water	17:69	0:0	10	b_shape_init
water	17:81	0:0	10	)
stmts	18:12	20:12	9	
water	18:12	0:0	10	{
call	19:16	19:92	10	puzzle_drw_adv_pce_in_plane
arg	19:44	19:52	11	p_filter
water	19:44	0:0	12	p_filter
arg	19:54	19:62	11	p_pic_in
water	19:54	0:0	12	p_pic_in
arg	19:64	19:73	11	p_pic_out
water	19:64	0:0	12	p_pic_out
arg	19:75	19:82	11	i_plane
water	19:75	0:0	12	i_plane
arg	19:84	19:92	11	ps_piece
water	19:84	0:0	12	ps_piece
water	19:93	0:0	10	;
water	20:12	0:0	10	}
else	21:12	23:12	6
stmts	21:17	23:12	7	
water	21:17	0:0	8	{
call	22:16	22:99	8	puzzle_drw_complex_pce_in_plane
arg	22:48	22:56	9	p_filter
water	22:48	0:0	10	p_filter
arg	22:58	22:66	9	p_pic_in
water	22:58	0:0	10	p_pic_in
arg	22:68	22:77	9	p_pic_out
water	22:68	0:0	10	p_pic_out
arg	22:79	22:86	9	i_plane
water	22:79	0:0	10	i_plane
arg	22:88	22:96	9	ps_piece
water	22:88	0:0	10	ps_piece
arg	22:98	22:99	9	i
water	22:98	0:0	10	i
water	22:100	0:0	8	;
water	23:12	0:0	8	}
water	24:8	0:0	6	}
water	25:4	0:0	4	}
return	26:4	26:10	2	

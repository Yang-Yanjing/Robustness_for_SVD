func	2:0	61:0	0	static block_t *	Encode
params	2:22	0:0	1	
param	2:23	2:37	2	encoder_t *	enc
param	2:39	2:51	2	block_t *	buf
stmnts	0:0	60:17	1	
decl	4:4	4:35	2	encoder_sys_t	*sys
op	4:23	0:0	2	=
water	4:25	0:0	2	enc
op	4:28	0:0	2	->
water	4:30	0:0	2	p_sys
if	5:4	6:19	2	(! buf)
cond	5:8	5:9	3	! buf
op	5:8	0:0	4	!
water	5:9	0:0	4	buf
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
decl	7:4	9:50	2	mtime_t	i_pts
op	7:18	0:0	2	=
water	7:20	0:0	2	buf
op	7:23	0:0	2	->
water	7:25	0:0	2	i_pts
op	7:31	0:0	2	-
water	8:16	0:0	2	(
water	8:17	0:0	2	mtime_t
water	8:24	0:0	2	)
water	8:26	0:0	2	CLOCK_FREQ
op	8:37	0:0	2	*
water	8:39	0:0	2	(
water	8:40	0:0	2	mtime_t
water	8:47	0:0	2	)
water	8:49	0:0	2	sys
op	8:52	0:0	2	->
water	8:54	0:0	2	i_samples_delay
op	8:70	0:0	2	/
water	9:16	0:0	2	(
water	9:17	0:0	2	mtime_t
water	9:24	0:0	2	)
water	9:26	0:0	2	enc
op	9:29	0:0	2	->
water	9:31	0:0	2	fmt_in
op	9:37	0:0	2	.
water	9:38	0:0	2	audio
op	9:43	0:0	2	.
water	9:44	0:0	2	i_rate
water	10:4	0:0	2	sys
op	10:7	0:0	2	->
water	10:9	0:0	2	i_samples_delay
op	10:25	0:0	2	+=
water	10:28	0:0	2	buf
op	10:31	0:0	2	->
water	10:33	0:0	2	i_nb_samples
water	10:45	0:0	2	;
decl	11:4	11:26	2	block_t	*result
op	11:20	0:0	2	=
water	11:22	0:0	2	NULL
water	12:4	0:0	2	unsigned
water	12:13	0:0	2	src_start
op	12:23	0:0	2	=
water	12:25	0:0	2	0
water	12:26	0:0	2	;
water	13:4	0:0	2	unsigned
water	13:13	0:0	2	padding_start
op	13:27	0:0	2	=
water	13:29	0:0	2	0
water	13:30	0:0	2	;
water	15:4	0:0	2	const
water	15:10	0:0	2	unsigned
water	15:19	0:0	2	OPUS_MAX_ENCODED_BYTES
op	15:42	0:0	2	=
water	15:44	0:0	2	(
water	15:45	0:0	2	(
water	15:46	0:0	2	1275
op	15:51	0:0	2	+
water	15:53	0:0	2	3
water	15:54	0:0	2	)
op	15:56	0:0	2	*
water	15:58	0:0	2	sys
op	15:61	0:0	2	->
water	15:63	0:0	2	nb_streams
water	15:73	0:0	2	)
op	15:75	0:0	2	-
water	15:77	0:0	2	2
water	15:78	0:0	2	;
while	16:4	56:4	2	(sys -> i_nb_samples + buf -> i_nb_samples >= OPUS_FRAME_SIZE)
cond	16:11	16:52	3	sys -> i_nb_samples + buf -> i_nb_samples >= OPUS_FRAME_SIZE
water	16:11	0:0	4	sys
op	16:14	0:0	4	->
water	16:16	0:0	4	i_nb_samples
op	16:29	0:0	4	+
water	16:31	0:0	4	buf
op	16:34	0:0	4	->
water	16:36	0:0	4	i_nb_samples
op	16:49	0:0	4	>=
water	16:52	0:0	4	OPUS_FRAME_SIZE
stmts	17:4	56:4	3	
water	17:4	0:0	4	{
decl	18:8	18:64	4	block_t	*out_block
op	18:27	0:0	4	=
call	18:29	18:63	5	block_Alloc
arg	18:41	18:63	6	OPUS_MAX_ENCODED_BYTES
water	18:41	0:0	7	OPUS_MAX_ENCODED_BYTES
if	20:8	30:8	4	(sys -> padding)
cond	20:12	20:17	5	sys -> padding
water	20:12	0:0	6	sys
op	20:15	0:0	6	->
water	20:17	0:0	6	padding
stmts	21:8	30:8	5	
water	21:8	0:0	6	{
decl	22:12	22:77	6	const size_t	leftover_space
op	22:40	0:0	6	=
water	22:42	0:0	6	OPUS_FRAME_SIZE
op	22:58	0:0	6	-
water	22:60	0:0	6	sys
op	22:63	0:0	6	->
water	22:65	0:0	6	i_nb_samples
water	23:12	0:0	6	padding_start
op	23:26	0:0	6	=
call	23:28	24:69	6	fill_buffer
arg	23:40	23:43	7	enc
water	23:40	0:0	8	enc
arg	23:45	23:58	7	padding_start
water	23:45	0:0	8	padding_start
arg	23:60	23:72	7	sys->padding
water	23:60	0:0	8	sys
op	23:63	0:0	8	->
water	23:65	0:0	8	padding
arg	24:20	24:69	7	__MIN(sys->padding->i_nb_samples,leftover_space)
call	24:20	24:68	8	__MIN
arg	24:26	24:52	9	sys->padding->i_nb_samples
water	24:26	0:0	10	sys
op	24:29	0:0	10	->
water	24:31	0:0	10	padding
op	24:38	0:0	10	->
water	24:40	0:0	10	i_nb_samples
arg	24:54	24:68	9	leftover_space
water	24:54	0:0	10	leftover_space
water	24:70	0:0	6	;
if	25:12	29:12	6	(sys -> padding -> i_nb_samples <= 0)
cond	25:16	25:46	7	sys -> padding -> i_nb_samples <= 0
water	25:16	0:0	8	sys
op	25:19	0:0	8	->
water	25:21	0:0	8	padding
op	25:28	0:0	8	->
water	25:30	0:0	8	i_nb_samples
op	25:43	0:0	8	<=
water	25:46	0:0	8	0
stmts	26:12	29:12	7	
water	26:12	0:0	8	{
call	27:16	27:42	8	block_Release
arg	27:30	27:42	9	sys->padding
water	27:30	0:0	10	sys
op	27:33	0:0	10	->
water	27:35	0:0	10	padding
water	27:43	0:0	8	;
water	28:16	0:0	8	sys
op	28:19	0:0	8	->
water	28:21	0:0	8	padding
op	28:29	0:0	8	=
water	28:31	0:0	8	NULL
water	28:35	0:0	8	;
water	29:12	0:0	8	}
water	30:8	0:0	6	}
if	33:8	38:8	4	(! sys -> padding)
cond	33:12	33:18	5	! sys -> padding
op	33:12	0:0	6	!
water	33:13	0:0	6	sys
op	33:16	0:0	6	->
water	33:18	0:0	6	padding
stmts	34:8	38:8	5	
water	34:8	0:0	6	{
decl	35:12	35:77	6	const size_t	leftover_space
op	35:40	0:0	6	=
water	35:42	0:0	6	OPUS_FRAME_SIZE
op	35:58	0:0	6	-
water	35:60	0:0	6	sys
op	35:63	0:0	6	->
water	35:65	0:0	6	i_nb_samples
water	36:12	0:0	6	src_start
op	36:22	0:0	6	=
call	36:24	37:60	6	fill_buffer
arg	36:36	36:39	7	enc
water	36:36	0:0	8	enc
arg	36:41	36:50	7	src_start
water	36:41	0:0	8	src_start
arg	36:52	36:55	7	buf
water	36:52	0:0	8	buf
arg	37:20	37:60	7	__MIN(buf->i_nb_samples,leftover_space)
call	37:20	37:59	8	__MIN
arg	37:26	37:43	9	buf->i_nb_samples
water	37:26	0:0	10	buf
op	37:29	0:0	10	->
water	37:31	0:0	10	i_nb_samples
arg	37:45	37:59	9	leftover_space
water	37:45	0:0	10	leftover_space
water	37:61	0:0	6	;
water	38:8	0:0	6	}
decl	39:8	40:74	4	opus_int32	bytes_encoded
op	39:33	0:0	4	=
call	39:35	40:73	5	opus_multistream_encode_float
arg	39:65	39:73	6	sys->enc
water	39:65	0:0	7	sys
op	39:68	0:0	7	->
water	39:70	0:0	7	enc
arg	39:75	39:86	6	sys->buffer
water	39:75	0:0	7	sys
op	39:78	0:0	7	->
water	39:80	0:0	7	buffer
arg	40:16	40:31	6	OPUS_FRAME_SIZE
water	40:16	0:0	7	OPUS_FRAME_SIZE
arg	40:33	40:52	6	out_block->p_buffer
water	40:33	0:0	7	out_block
op	40:42	0:0	7	->
water	40:44	0:0	7	p_buffer
arg	40:54	40:73	6	out_block->i_buffer
water	40:54	0:0	7	out_block
op	40:63	0:0	7	->
water	40:65	0:0	7	i_buffer
if	41:8	44:8	4	(bytes_encoded < 0)
cond	41:12	41:28	5	bytes_encoded < 0
water	41:12	0:0	6	bytes_encoded
op	41:26	0:0	6	<
water	41:28	0:0	6	0
stmts	42:8	44:8	5	
water	42:8	0:0	6	{
call	43:12	43:35	6	block_Release
arg	43:26	43:35	7	out_block
water	43:26	0:0	8	out_block
water	43:36	0:0	6	;
water	44:8	0:0	6	}
else	45:8	55:8	4
stmts	46:8	55:8	5	
water	46:8	0:0	6	{
water	47:12	0:0	6	out_block
op	47:21	0:0	6	->
water	47:23	0:0	6	i_length
op	47:32	0:0	6	=
water	47:34	0:0	6	(
water	47:35	0:0	6	mtime_t
water	47:42	0:0	6	)
water	47:44	0:0	6	CLOCK_FREQ
op	47:55	0:0	6	*
water	48:16	0:0	6	(
water	48:17	0:0	6	mtime_t
water	48:24	0:0	6	)
water	48:26	0:0	6	OPUS_FRAME_SIZE
op	48:42	0:0	6	/
water	48:44	0:0	6	(
water	48:45	0:0	6	mtime_t
water	48:52	0:0	6	)
water	48:54	0:0	6	enc
op	48:57	0:0	6	->
water	48:59	0:0	6	fmt_in
op	48:65	0:0	6	.
water	48:66	0:0	6	audio
op	48:71	0:0	6	.
water	48:72	0:0	6	i_rate
water	48:78	0:0	6	;
water	49:12	0:0	6	out_block
op	49:21	0:0	6	->
water	49:23	0:0	6	i_dts
op	49:29	0:0	6	=
water	49:31	0:0	6	out_block
op	49:40	0:0	6	->
water	49:42	0:0	6	i_pts
op	49:48	0:0	6	=
water	49:50	0:0	6	i_pts
water	49:55	0:0	6	;
water	50:12	0:0	6	sys
op	50:15	0:0	6	->
water	50:17	0:0	6	i_samples_delay
op	50:33	0:0	6	-=
water	50:36	0:0	6	OPUS_FRAME_SIZE
water	50:51	0:0	6	;
water	51:12	0:0	6	i_pts
op	51:18	0:0	6	+=
water	51:21	0:0	6	out_block
op	51:30	0:0	6	->
water	51:32	0:0	6	i_length
water	51:40	0:0	6	;
water	52:12	0:0	6	sys
op	52:15	0:0	6	->
water	52:17	0:0	6	i_nb_samples
op	52:30	0:0	6	=
water	52:32	0:0	6	0
water	52:33	0:0	6	;
water	53:12	0:0	6	out_block
op	53:21	0:0	6	->
water	53:23	0:0	6	i_buffer
op	53:32	0:0	6	=
water	53:34	0:0	6	bytes_encoded
water	53:47	0:0	6	;
call	54:12	54:48	6	block_ChainAppend
arg	54:30	54:37	7	&result
op	54:30	0:0	8	&
water	54:31	0:0	8	result
arg	54:39	54:48	7	out_block
water	54:39	0:0	8	out_block
water	54:49	0:0	6	;
water	55:8	0:0	6	}
water	56:4	0:0	4	}
if	58:4	59:59	2	(buf -> i_nb_samples > 0)
cond	58:8	58:28	3	buf -> i_nb_samples > 0
water	58:8	0:0	4	buf
op	58:11	0:0	4	->
water	58:13	0:0	4	i_nb_samples
op	58:26	0:0	4	>
water	58:28	0:0	4	0
stmts	59:8	59:59	3	
call	59:8	59:58	4	fill_buffer
arg	59:20	59:23	5	enc
water	59:20	0:0	6	enc
arg	59:25	59:34	5	src_start
water	59:25	0:0	6	src_start
arg	59:36	59:39	5	buf
water	59:36	0:0	6	buf
arg	59:41	59:58	5	buf->i_nb_samples
water	59:41	0:0	6	buf
op	59:44	0:0	6	->
water	59:46	0:0	6	i_nb_samples
water	59:59	0:0	4	;
return	60:4	60:17	2	result
water	60:11	0:0	3	result

func	2:0	30:0	0	static sap_address_t *	AddressCreate
params	2:36	0:0	1	
param	2:37	2:54	2	vlc_object_t *	obj
param	2:56	2:73	2	const char *	group
stmnts	0:0	29:15	1	
decl	4:4	4:57	2	int	fd
op	4:11	0:0	2	=
call	4:13	4:56	3	net_ConnectUDP
arg	4:29	4:32	4	obj
water	4:29	0:0	5	obj
arg	4:34	4:39	4	group
water	4:34	0:0	5	group
arg	4:41	4:51	4	IPPORT_SAP
water	4:41	0:0	5	IPPORT_SAP
arg	4:53	4:56	4	255
water	4:53	0:0	5	255
if	5:4	6:19	2	(fd == - 1)
cond	5:8	5:15	3	fd == - 1
water	5:8	0:0	4	fd
op	5:11	0:0	4	==
op	5:14	0:0	4	-
water	5:15	0:0	4	1
stmts	6:8	6:19	3	
return	6:8	6:19	4	NULL
water	6:15	0:0	5	NULL
decl	7:4	7:49	2	sap_address_t	*addr
op	7:24	0:0	2	=
call	7:26	7:48	3	malloc
arg	7:34	7:48	4	sizeof(*addr)
op	7:34	0:0	5	sizeof
water	7:41	0:0	5	(
op	7:42	0:0	5	*
water	7:43	0:0	5	addr
water	7:47	0:0	5	)
if	8:4	12:4	2	(addr == NULL)
cond	8:8	8:16	3	addr == NULL
water	8:8	0:0	4	addr
op	8:13	0:0	4	==
water	8:16	0:0	4	NULL
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
call	10:8	10:21	4	net_Close
arg	10:19	10:21	5	fd
water	10:19	0:0	6	fd
water	10:22	0:0	4	;
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
water	12:4	0:0	4	}
call	13:4	13:53	2	strlcpy
arg	13:13	13:24	3	addr->group
water	13:13	0:0	4	addr
op	13:17	0:0	4	->
water	13:19	0:0	4	group
arg	13:26	13:31	3	group
water	13:26	0:0	4	group
arg	13:33	13:53	3	sizeof(addr->group)
op	13:33	0:0	4	sizeof
water	13:40	0:0	4	(
water	13:41	0:0	4	addr
op	13:45	0:0	4	->
water	13:47	0:0	4	group
water	13:52	0:0	4	)
water	13:54	0:0	2	;
water	14:4	0:0	2	addr
op	14:8	0:0	2	->
water	14:10	0:0	2	fd
op	14:13	0:0	2	=
water	14:15	0:0	2	fd
water	14:17	0:0	2	;
water	15:4	0:0	2	addr
op	15:8	0:0	2	->
water	15:10	0:0	2	origlen
op	15:18	0:0	2	=
op	15:20	0:0	2	sizeof
water	15:27	0:0	2	(
water	15:28	0:0	2	addr
op	15:32	0:0	2	->
water	15:34	0:0	2	orig
water	15:38	0:0	2	)
water	15:39	0:0	2	;
call	16:4	16:67	2	getsockname
arg	16:17	16:19	3	fd
water	16:17	0:0	4	fd
arg	16:21	16:51	3	(structsockaddr*)&addr->orig
water	16:21	0:0	4	(
water	16:22	0:0	4	struct
water	16:29	0:0	4	sockaddr
op	16:38	0:0	4	*
water	16:39	0:0	4	)
op	16:40	0:0	4	&
water	16:41	0:0	4	addr
op	16:45	0:0	4	->
water	16:47	0:0	4	orig
arg	16:53	16:67	3	&addr->origlen
op	16:53	0:0	4	&
water	16:54	0:0	4	addr
op	16:58	0:0	4	->
water	16:60	0:0	4	origlen
water	16:68	0:0	2	;
water	17:4	0:0	2	addr
op	17:8	0:0	2	->
water	17:10	0:0	2	interval
op	17:19	0:0	2	=
call	17:21	17:62	2	var_CreateGetInteger
arg	17:43	17:46	3	obj
water	17:43	0:0	4	obj
arg	17:48	17:62	3	"sap-interval"
water	17:48	0:0	4	"sap-interval"
water	17:63	0:0	2	;
call	18:4	18:31	2	vlc_mutex_init
arg	18:20	18:31	3	&addr->lock
op	18:20	0:0	4	&
water	18:21	0:0	4	addr
op	18:25	0:0	4	->
water	18:27	0:0	4	lock
water	18:32	0:0	2	;
call	19:4	19:30	2	vlc_cond_init
arg	19:19	19:30	3	&addr->wait
op	19:19	0:0	4	&
water	19:20	0:0	4	addr
op	19:24	0:0	4	->
water	19:26	0:0	4	wait
water	19:31	0:0	2	;
water	20:4	0:0	2	addr
op	20:8	0:0	2	->
water	20:10	0:0	2	session_count
op	20:24	0:0	2	=
water	20:26	0:0	2	0
water	20:27	0:0	2	;
water	21:4	0:0	2	addr
op	21:8	0:0	2	->
water	21:10	0:0	2	first
op	21:16	0:0	2	=
water	21:18	0:0	2	NULL
water	21:22	0:0	2	;
if	22:4	28:4	2	(vlc_clone (& addr -> thread ,RunThread ,addr ,VLC_THREAD_PRIORITY_LOW ))
cond	22:8	22:74	3	vlc_clone (& addr -> thread ,RunThread ,addr ,VLC_THREAD_PRIORITY_LOW )
call	22:8	22:74	4	vlc_clone
arg	22:19	22:32	5	&addr->thread
op	22:19	0:0	6	&
water	22:20	0:0	6	addr
op	22:24	0:0	6	->
water	22:26	0:0	6	thread
arg	22:34	22:43	5	RunThread
water	22:34	0:0	6	RunThread
arg	22:45	22:49	5	addr
water	22:45	0:0	6	addr
arg	22:51	22:74	5	VLC_THREAD_PRIORITY_LOW
water	22:51	0:0	6	VLC_THREAD_PRIORITY_LOW
stmts	23:4	28:4	3	
water	23:4	0:0	4	{
call	24:8	24:59	4	msg_Err
arg	24:17	24:20	5	obj
water	24:17	0:0	6	obj
arg	24:22	24:59	5	"unable to spawn SAP announce thread"
water	24:22	0:0	6	"unable to spawn SAP announce thread"
water	24:60	0:0	4	;
call	25:8	25:21	4	net_Close
arg	25:19	25:21	5	fd
water	25:19	0:0	6	fd
water	25:22	0:0	4	;
call	26:8	26:18	4	free
arg	26:14	26:18	5	addr
water	26:14	0:0	6	addr
water	26:19	0:0	4	;
return	27:8	27:19	4	NULL
water	27:15	0:0	5	NULL
water	28:4	0:0	4	}
return	29:4	29:15	2	addr
water	29:11	0:0	3	addr

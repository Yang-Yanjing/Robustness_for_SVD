func	2:0	24:0	0	static void	ControlUnpause
params	2:26	0:0	1	
param	2:28	2:51	2	input_thread_t *	p_input
param	2:53	2:76	2	mtime_t	i_control_date
stmnts	0:0	23:82	1	
decl	4:4	4:27	2	int	i_ret
op	4:14	0:0	2	=
water	4:16	0:0	2	VLC_SUCCESS
if	5:4	18:4	2	(p_input -> p -> b_can_pause)
cond	5:8	5:20	3	p_input -> p -> b_can_pause
water	5:8	0:0	4	p_input
op	5:15	0:0	4	->
water	5:17	0:0	4	p
op	5:18	0:0	4	->
water	5:20	0:0	4	b_can_pause
stmts	6:4	18:4	3	
water	6:4	0:0	4	{
decl	7:8	7:52	4	demux_t	*p_demux
op	7:25	0:0	4	=
water	7:27	0:0	4	p_input
op	7:34	0:0	4	->
water	7:36	0:0	4	p
op	7:37	0:0	4	->
water	7:39	0:0	4	input
op	7:44	0:0	4	.
water	7:45	0:0	4	p_demux
if	8:8	9:79	4	(p_demux -> s != NULL)
cond	8:12	8:26	5	p_demux -> s != NULL
water	8:12	0:0	6	p_demux
op	8:19	0:0	6	->
water	8:21	0:0	6	s
op	8:23	0:0	6	!=
water	8:26	0:0	6	NULL
stmts	9:12	9:79	5	
water	9:12	0:0	6	i_ret
op	9:18	0:0	6	=
call	9:20	9:78	6	stream_Control
arg	9:36	9:46	7	p_demux->s
water	9:36	0:0	8	p_demux
op	9:43	0:0	8	->
water	9:45	0:0	8	s
arg	9:48	9:70	7	STREAM_SET_PAUSE_STATE
water	9:48	0:0	8	STREAM_SET_PAUSE_STATE
arg	9:72	9:78	7	false
water	9:72	0:0	8	false
water	9:79	0:0	6	;
else	10:8	11:74	4
stmts	11:12	11:74	5	
water	11:12	0:0	6	i_ret
op	11:18	0:0	6	=
call	11:20	11:73	6	demux_Control
arg	11:35	11:42	7	p_demux
water	11:35	0:0	8	p_demux
arg	11:44	11:65	7	DEMUX_SET_PAUSE_STATE
water	11:44	0:0	8	DEMUX_SET_PAUSE_STATE
arg	11:67	11:73	7	false
water	11:67	0:0	8	false
water	11:74	0:0	6	;
if	12:8	17:8	4	(i_ret)
cond	12:12	12:12	5	i_ret
water	12:12	0:0	6	i_ret
stmts	13:8	17:8	5	
water	13:8	0:0	6	{
call	15:12	15:59	6	msg_Warn
arg	15:22	15:29	7	p_input
water	15:22	0:0	8	p_input
arg	15:31	15:59	7	"cannot unset pause -> EOF"
water	15:31	0:0	8	"cannot unset pause -> EOF"
water	15:60	0:0	6	;
call	16:12	16:68	6	input_ControlPush
arg	16:31	16:38	7	p_input
water	16:31	0:0	8	p_input
arg	16:40	16:61	7	INPUT_CONTROL_SET_DIE
water	16:40	0:0	8	INPUT_CONTROL_SET_DIE
arg	16:63	16:68	7	NULL
water	16:63	0:0	8	NULL
water	16:69	0:0	6	;
water	17:8	0:0	6	}
water	18:4	0:0	4	}
call	20:4	20:42	2	input_ChangeState
arg	20:23	20:30	3	p_input
water	20:23	0:0	4	p_input
arg	20:32	20:42	3	PLAYING_S
water	20:32	0:0	4	PLAYING_S
water	20:43	0:0	2	;
if	22:4	23:82	2	(! i_ret)
cond	22:8	22:9	3	! i_ret
op	22:8	0:0	4	!
water	22:9	0:0	4	i_ret
stmts	23:8	23:82	3	
call	23:8	23:81	4	es_out_SetPauseState
arg	23:30	23:50	5	p_input->p->p_es_out
water	23:30	0:0	6	p_input
op	23:37	0:0	6	->
water	23:39	0:0	6	p
op	23:40	0:0	6	->
water	23:42	0:0	6	p_es_out
arg	23:52	23:57	5	false
water	23:52	0:0	6	false
arg	23:59	23:64	5	false
water	23:59	0:0	6	false
arg	23:66	23:81	5	i_control_date
water	23:66	0:0	6	i_control_date
water	23:82	0:0	4	;

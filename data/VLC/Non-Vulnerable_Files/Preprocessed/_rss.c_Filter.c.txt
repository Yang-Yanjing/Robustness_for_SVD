func	2:0	165:0	0	static subpicture_t *	Filter
params	2:27	0:0	1	
param	2:29	2:47	2	filter_t *	p_filter
param	2:49	2:62	2	mtime_t	date
stmnts	0:0	164:16	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:23	2	subpicture_t	*p_spu
decl	6:4	6:22	2	video_format_t	fmt
decl	7:4	7:33	2	subpicture_region_t	*p_region
decl	8:4	8:22	2	int	i_feed
water	8:14	0:0	2	,
decl	8:4	8:22	2	int	i_item
decl	9:4	9:22	2	rss_feed_t	*p_feed
call	10:4	10:44	2	memset
arg	10:12	10:16	3	&fmt
op	10:12	0:0	4	&
water	10:13	0:0	4	fmt
arg	10:18	10:19	3	0
water	10:18	0:0	4	0
arg	10:21	10:44	3	sizeof(video_format_t)
op	10:21	0:0	4	sizeof
water	10:27	0:0	4	(
water	10:28	0:0	4	video_format_t
water	10:42	0:0	4	)
water	10:45	0:0	2	;
call	11:4	11:33	2	vlc_mutex_lock
arg	11:20	11:33	3	&p_sys->lock
op	11:20	0:0	4	&
water	11:21	0:0	4	p_sys
op	11:26	0:0	4	->
water	11:28	0:0	4	lock
water	11:34	0:0	2	;
if	14:4	18:4	2	(! p_sys -> b_fetched && p_sys -> i_feeds > 0)
cond	14:8	14:46	3	! p_sys -> b_fetched && p_sys -> i_feeds > 0
op	14:8	0:0	4	!
water	14:9	0:0	4	p_sys
op	14:14	0:0	4	->
water	14:16	0:0	4	b_fetched
op	14:26	0:0	4	&&
water	14:29	0:0	4	p_sys
op	14:34	0:0	4	->
water	14:36	0:0	4	i_feeds
op	14:44	0:0	4	>
water	14:46	0:0	4	0
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:39	4	vlc_mutex_unlock
arg	16:26	16:39	5	&p_sys->lock
op	16:26	0:0	6	&
water	16:27	0:0	6	p_sys
op	16:32	0:0	6	->
water	16:34	0:0	6	lock
water	16:40	0:0	4	;
return	17:8	17:19	4	NULL
water	17:15	0:0	5	NULL
water	18:4	0:0	4	}
if	19:4	27:4	2	(p_sys -> last_date + ( p_sys -> i_cur_char == 0 && p_sys -> i_cur_item == ( p_sys -> i_title == scroll_title ? - 1 : 0 ) ? 5 : 1 ) * p_sys -> i_speed > date)
cond	19:8	23:26	3	p_sys -> last_date + ( p_sys -> i_cur_char == 0 && p_sys -> i_cur_item == ( p_sys -> i_title == scroll_title ? - 1 : 0 ) ? 5 : 1 ) * p_sys -> i_speed > date
water	19:8	0:0	4	p_sys
op	19:13	0:0	4	->
water	19:15	0:0	4	last_date
op	20:7	0:0	4	+
water	20:9	0:0	4	(
water	20:11	0:0	4	p_sys
op	20:16	0:0	4	->
water	20:18	0:0	4	i_cur_char
op	20:29	0:0	4	==
water	20:32	0:0	4	0
op	20:34	0:0	4	&&
water	21:11	0:0	4	p_sys
op	21:16	0:0	4	->
water	21:18	0:0	4	i_cur_item
op	21:29	0:0	4	==
water	21:32	0:0	4	(
water	21:34	0:0	4	p_sys
op	21:39	0:0	4	->
water	21:41	0:0	4	i_title
op	21:49	0:0	4	==
water	21:52	0:0	4	scroll_title
water	21:65	0:0	4	?
op	21:67	0:0	4	-
water	21:68	0:0	4	1
water	21:70	0:0	4	:
water	21:72	0:0	4	0
water	21:74	0:0	4	)
water	21:76	0:0	4	?
water	21:78	0:0	4	5
water	21:80	0:0	4	:
water	21:82	0:0	4	1
water	21:84	0:0	4	)
op	23:7	0:0	4	*
water	23:9	0:0	4	p_sys
op	23:14	0:0	4	->
water	23:16	0:0	4	i_speed
op	23:24	0:0	4	>
water	23:26	0:0	4	date
stmts	24:4	27:4	3	
water	24:4	0:0	4	{
call	25:8	25:39	4	vlc_mutex_unlock
arg	25:26	25:39	5	&p_sys->lock
op	25:26	0:0	6	&
water	25:27	0:0	6	p_sys
op	25:32	0:0	6	->
water	25:34	0:0	6	lock
water	25:40	0:0	4	;
return	26:8	26:19	4	NULL
water	26:15	0:0	5	NULL
water	27:4	0:0	4	}
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	last_date
op	28:21	0:0	2	=
water	28:23	0:0	2	date
water	28:27	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	i_cur_char
op	29:21	0:0	2	++
water	29:23	0:0	2	;
if	30:4	44:4	2	(p_sys -> i_cur_item == - 1 ? p_sys -> p_feeds [ p_sys -> i_cur_feed ] . psz_title [ p_sys -> i_cur_char ] == 0 : p_sys -> p_feeds [ p_sys -> i_cur_feed ] . p_items [ p_sys -> i_cur_item ] . psz_title [ p_sys -> i_cur_char ] == 0)
cond	30:8	32:105	3	p_sys -> i_cur_item == - 1 ? p_sys -> p_feeds [ p_sys -> i_cur_feed ] . psz_title [ p_sys -> i_cur_char ] == 0 : p_sys -> p_feeds [ p_sys -> i_cur_feed ] . p_items [ p_sys -> i_cur_item ] . psz_title [ p_sys -> i_cur_char ] == 0
water	30:8	0:0	4	p_sys
op	30:13	0:0	4	->
water	30:15	0:0	4	i_cur_item
op	30:26	0:0	4	==
op	30:29	0:0	4	-
water	30:30	0:0	4	1
water	30:32	0:0	4	?
water	31:12	0:0	4	p_sys
op	31:17	0:0	4	->
water	31:19	0:0	4	p_feeds
op	31:26	0:0	4	[
water	31:27	0:0	4	p_sys
op	31:32	0:0	4	->
water	31:34	0:0	4	i_cur_feed
op	31:44	0:0	4	]
op	31:45	0:0	4	.
water	31:46	0:0	4	psz_title
op	31:55	0:0	4	[
water	31:56	0:0	4	p_sys
op	31:61	0:0	4	->
water	31:63	0:0	4	i_cur_char
op	31:73	0:0	4	]
op	31:75	0:0	4	==
water	31:78	0:0	4	0
water	31:80	0:0	4	:
water	32:12	0:0	4	p_sys
op	32:17	0:0	4	->
water	32:19	0:0	4	p_feeds
op	32:26	0:0	4	[
water	32:27	0:0	4	p_sys
op	32:32	0:0	4	->
water	32:34	0:0	4	i_cur_feed
op	32:44	0:0	4	]
op	32:45	0:0	4	.
water	32:46	0:0	4	p_items
op	32:53	0:0	4	[
water	32:54	0:0	4	p_sys
op	32:59	0:0	4	->
water	32:61	0:0	4	i_cur_item
op	32:71	0:0	4	]
op	32:72	0:0	4	.
water	32:73	0:0	4	psz_title
op	32:82	0:0	4	[
water	32:83	0:0	4	p_sys
op	32:88	0:0	4	->
water	32:90	0:0	4	i_cur_char
op	32:100	0:0	4	]
op	32:102	0:0	4	==
water	32:105	0:0	4	0
stmts	33:4	44:4	3	
water	33:4	0:0	4	{
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	i_cur_char
op	34:26	0:0	4	=
water	34:28	0:0	4	0
water	34:29	0:0	4	;
water	35:8	0:0	4	p_sys
op	35:13	0:0	4	->
water	35:15	0:0	4	i_cur_item
op	35:25	0:0	4	++
water	35:27	0:0	4	;
if	36:8	43:8	4	(p_sys -> i_cur_item >= p_sys -> p_feeds [ p_sys -> i_cur_feed ] . i_items)
cond	36:12	36:67	5	p_sys -> i_cur_item >= p_sys -> p_feeds [ p_sys -> i_cur_feed ] . i_items
water	36:12	0:0	6	p_sys
op	36:17	0:0	6	->
water	36:19	0:0	6	i_cur_item
op	36:30	0:0	6	>=
water	36:33	0:0	6	p_sys
op	36:38	0:0	6	->
water	36:40	0:0	6	p_feeds
op	36:47	0:0	6	[
water	36:48	0:0	6	p_sys
op	36:53	0:0	6	->
water	36:55	0:0	6	i_cur_feed
op	36:65	0:0	6	]
op	36:66	0:0	6	.
water	36:67	0:0	6	i_items
stmts	37:8	43:8	5	
water	37:8	0:0	6	{
if	38:12	39:38	6	(p_sys -> i_title == scroll_title)
cond	38:16	38:34	7	p_sys -> i_title == scroll_title
water	38:16	0:0	8	p_sys
op	38:21	0:0	8	->
water	38:23	0:0	8	i_title
op	38:31	0:0	8	==
water	38:34	0:0	8	scroll_title
stmts	39:16	39:38	7	
water	39:16	0:0	8	p_sys
op	39:21	0:0	8	->
water	39:23	0:0	8	i_cur_item
op	39:34	0:0	8	=
op	39:36	0:0	8	-
water	39:37	0:0	8	1
water	39:38	0:0	8	;
else	40:12	41:37	6
stmts	41:16	41:37	7	
water	41:16	0:0	8	p_sys
op	41:21	0:0	8	->
water	41:23	0:0	8	i_cur_item
op	41:34	0:0	8	=
water	41:36	0:0	8	0
water	41:37	0:0	8	;
water	42:12	0:0	6	p_sys
op	42:17	0:0	6	->
water	42:19	0:0	6	i_cur_feed
op	42:30	0:0	6	=
water	42:32	0:0	6	(
water	42:33	0:0	6	p_sys
op	42:38	0:0	6	->
water	42:40	0:0	6	i_cur_feed
op	42:51	0:0	6	+
water	42:53	0:0	6	1
water	42:54	0:0	6	)
op	42:55	0:0	6	%
water	42:56	0:0	6	p_sys
op	42:61	0:0	6	->
water	42:63	0:0	6	i_feeds
water	42:70	0:0	6	;
water	43:8	0:0	6	}
water	44:4	0:0	4	}
water	45:4	0:0	2	p_spu
op	45:10	0:0	2	=
call	45:12	45:43	2	filter_NewSubpicture
arg	45:34	45:43	3	p_filter
water	45:34	0:0	4	p_filter
water	45:44	0:0	2	;
if	46:4	50:4	2	(! p_spu)
cond	46:8	46:9	3	! p_spu
op	46:8	0:0	4	!
water	46:9	0:0	4	p_spu
stmts	47:4	50:4	3	
water	47:4	0:0	4	{
call	48:8	48:39	4	vlc_mutex_unlock
arg	48:26	48:39	5	&p_sys->lock
op	48:26	0:0	6	&
water	48:27	0:0	6	p_sys
op	48:32	0:0	6	->
water	48:34	0:0	6	lock
water	48:40	0:0	4	;
return	49:8	49:19	4	NULL
water	49:15	0:0	5	NULL
water	50:4	0:0	4	}
water	51:4	0:0	2	fmt
op	51:7	0:0	2	.
water	51:8	0:0	2	i_chroma
op	51:17	0:0	2	=
water	51:19	0:0	2	VLC_CODEC_TEXT
water	51:33	0:0	2	;
water	52:4	0:0	2	p_spu
op	52:9	0:0	2	->
water	52:11	0:0	2	p_region
op	52:20	0:0	2	=
call	52:22	52:50	2	subpicture_region_New
arg	52:45	52:50	3	&fmt
op	52:45	0:0	4	&
water	52:46	0:0	4	fmt
water	52:51	0:0	2	;
if	53:4	58:4	2	(! p_spu -> p_region)
cond	53:8	53:16	3	! p_spu -> p_region
op	53:8	0:0	4	!
water	53:9	0:0	4	p_spu
op	53:14	0:0	4	->
water	53:16	0:0	4	p_region
stmts	54:4	58:4	3	
water	54:4	0:0	4	{
call	55:8	55:53	4	p_filter->pf_sub_buffer_del
arg	55:37	55:45	5	p_filter
water	55:37	0:0	6	p_filter
arg	55:47	55:53	5	p_spu
water	55:47	0:0	6	p_spu
water	55:54	0:0	4	;
call	56:8	56:39	4	vlc_mutex_unlock
arg	56:26	56:39	5	&p_sys->lock
op	56:26	0:0	6	&
water	56:27	0:0	6	p_sys
op	56:32	0:0	6	->
water	56:34	0:0	6	lock
water	56:40	0:0	4	;
return	57:8	57:19	4	NULL
water	57:15	0:0	5	NULL
water	58:4	0:0	4	}
water	61:4	0:0	2	i_item
op	61:11	0:0	2	=
water	61:13	0:0	2	p_sys
op	61:18	0:0	2	->
water	61:20	0:0	2	i_cur_item
water	61:30	0:0	2	;
water	62:4	0:0	2	i_feed
op	62:11	0:0	2	=
water	62:13	0:0	2	p_sys
op	62:18	0:0	2	->
water	62:20	0:0	2	i_cur_feed
water	62:30	0:0	2	;
water	63:4	0:0	2	p_feed
op	63:11	0:0	2	=
op	63:13	0:0	2	&
water	63:14	0:0	2	p_sys
op	63:19	0:0	2	->
water	63:21	0:0	2	p_feeds
op	63:28	0:0	2	[
water	63:29	0:0	2	i_feed
op	63:35	0:0	2	]
water	63:36	0:0	2	;
if	64:4	71:4	2	(( p_feed -> p_pic && p_sys -> i_title == default_title ) || p_sys -> i_title == hide_title)
cond	64:8	65:29	3	( p_feed -> p_pic && p_sys -> i_title == default_title ) || p_sys -> i_title == hide_title
water	64:8	0:0	4	(
water	64:10	0:0	4	p_feed
op	64:16	0:0	4	->
water	64:18	0:0	4	p_pic
op	64:24	0:0	4	&&
water	64:27	0:0	4	p_sys
op	64:32	0:0	4	->
water	64:34	0:0	4	i_title
op	64:42	0:0	4	==
water	64:45	0:0	4	default_title
water	64:59	0:0	4	)
op	65:8	0:0	4	||
water	65:11	0:0	4	p_sys
op	65:16	0:0	4	->
water	65:18	0:0	4	i_title
op	65:26	0:0	4	==
water	65:29	0:0	4	hide_title
stmts	66:4	71:4	3	
water	66:4	0:0	4	{
call	68:8	70:37	4	snprintf
arg	68:18	68:36	5	p_sys->psz_marquee
water	68:18	0:0	6	p_sys
op	68:23	0:0	6	->
water	68:25	0:0	6	psz_marquee
arg	68:38	68:53	5	p_sys->i_length
water	68:38	0:0	6	p_sys
op	68:43	0:0	6	->
water	68:45	0:0	6	i_length
arg	68:55	68:59	5	"%s"
water	68:55	0:0	6	"%s"
arg	69:18	70:37	5	p_sys->p_feeds[i_feed].p_items[i_item].psz_title+p_sys->i_cur_char
water	69:18	0:0	6	p_sys
op	69:23	0:0	6	->
water	69:25	0:0	6	p_feeds
op	69:32	0:0	6	[
water	69:33	0:0	6	i_feed
op	69:39	0:0	6	]
op	69:40	0:0	6	.
water	69:41	0:0	6	p_items
op	69:48	0:0	6	[
water	69:49	0:0	6	i_item
op	69:55	0:0	6	]
op	69:56	0:0	6	.
water	69:57	0:0	6	psz_title
op	70:18	0:0	6	+
water	70:19	0:0	6	p_sys
op	70:24	0:0	6	->
water	70:26	0:0	6	i_cur_char
water	70:38	0:0	4	;
water	71:4	0:0	4	}
else	72:4	79:4	2
stmts	72:9	79:4	3	
if	72:9	79:4	4	(( ! p_feed -> p_pic && p_sys -> i_title == default_title ) || p_sys -> i_title == prepend_title)
cond	72:13	73:34	5	( ! p_feed -> p_pic && p_sys -> i_title == default_title ) || p_sys -> i_title == prepend_title
water	72:13	0:0	6	(
op	72:15	0:0	6	!
water	72:16	0:0	6	p_feed
op	72:22	0:0	6	->
water	72:24	0:0	6	p_pic
op	72:30	0:0	6	&&
water	72:33	0:0	6	p_sys
op	72:38	0:0	6	->
water	72:40	0:0	6	i_title
op	72:48	0:0	6	==
water	72:51	0:0	6	default_title
water	72:65	0:0	6	)
op	73:13	0:0	6	||
water	73:16	0:0	6	p_sys
op	73:21	0:0	6	->
water	73:23	0:0	6	i_title
op	73:31	0:0	6	==
water	73:34	0:0	6	prepend_title
stmts	74:4	79:4	5	
water	74:4	0:0	6	{
call	75:8	78:37	6	snprintf
arg	75:18	75:36	7	p_sys->psz_marquee
water	75:18	0:0	8	p_sys
op	75:23	0:0	8	->
water	75:25	0:0	8	psz_marquee
arg	75:38	75:53	7	p_sys->i_length
water	75:38	0:0	8	p_sys
op	75:43	0:0	8	->
water	75:45	0:0	8	i_length
arg	75:55	75:64	7	"%s : %s"
water	75:55	0:0	8	"%s : %s"
arg	76:18	76:50	7	p_sys->p_feeds[i_feed].psz_title
water	76:18	0:0	8	p_sys
op	76:23	0:0	8	->
water	76:25	0:0	8	p_feeds
op	76:32	0:0	8	[
water	76:33	0:0	8	i_feed
op	76:39	0:0	8	]
op	76:40	0:0	8	.
water	76:41	0:0	8	psz_title
arg	77:18	78:37	7	p_sys->p_feeds[i_feed].p_items[i_item].psz_title+p_sys->i_cur_char
water	77:18	0:0	8	p_sys
op	77:23	0:0	8	->
water	77:25	0:0	8	p_feeds
op	77:32	0:0	8	[
water	77:33	0:0	8	i_feed
op	77:39	0:0	8	]
op	77:40	0:0	8	.
water	77:41	0:0	8	p_items
op	77:48	0:0	8	[
water	77:49	0:0	8	i_item
op	77:55	0:0	8	]
op	77:56	0:0	8	.
water	77:57	0:0	8	psz_title
op	78:18	0:0	8	+
water	78:19	0:0	8	p_sys
op	78:24	0:0	8	->
water	78:26	0:0	8	i_cur_char
water	78:38	0:0	6	;
water	79:4	0:0	6	}
else	80:4	90:4	2
stmts	81:4	90:4	3	
water	81:4	0:0	4	{
if	82:8	85:74	4	(i_item == - 1)
cond	82:12	82:23	5	i_item == - 1
water	82:12	0:0	6	i_item
op	82:19	0:0	6	==
op	82:22	0:0	6	-
water	82:23	0:0	6	1
stmts	83:12	85:74	5	
call	83:12	85:73	6	snprintf
arg	83:22	83:40	7	p_sys->psz_marquee
water	83:22	0:0	8	p_sys
op	83:27	0:0	8	->
water	83:29	0:0	8	psz_marquee
arg	83:42	83:57	7	p_sys->i_length
water	83:42	0:0	8	p_sys
op	83:47	0:0	8	->
water	83:49	0:0	8	i_length
arg	83:59	83:68	7	"%s : %s"
water	83:59	0:0	8	"%s : %s"
arg	84:22	84:74	7	p_sys->p_feeds[i_feed].psz_title+p_sys->i_cur_char
water	84:22	0:0	8	p_sys
op	84:27	0:0	8	->
water	84:29	0:0	8	p_feeds
op	84:36	0:0	8	[
water	84:37	0:0	8	i_feed
op	84:43	0:0	8	]
op	84:44	0:0	8	.
water	84:45	0:0	8	psz_title
op	84:55	0:0	8	+
water	84:57	0:0	8	p_sys
op	84:62	0:0	8	->
water	84:64	0:0	8	i_cur_char
arg	85:22	85:73	7	p_sys->p_feeds[i_feed].p_items[i_item+1].psz_title
water	85:22	0:0	8	p_sys
op	85:27	0:0	8	->
water	85:29	0:0	8	p_feeds
op	85:36	0:0	8	[
water	85:37	0:0	8	i_feed
op	85:43	0:0	8	]
op	85:44	0:0	8	.
water	85:45	0:0	8	p_items
op	85:52	0:0	8	[
water	85:53	0:0	8	i_item
op	85:59	0:0	8	+
water	85:60	0:0	8	1
op	85:61	0:0	8	]
op	85:62	0:0	8	.
water	85:63	0:0	8	psz_title
water	85:74	0:0	6	;
else	86:8	89:42	4
stmts	87:12	89:42	5	
call	87:12	89:41	6	snprintf
arg	87:22	87:40	7	p_sys->psz_marquee
water	87:22	0:0	8	p_sys
op	87:27	0:0	8	->
water	87:29	0:0	8	psz_marquee
arg	87:42	87:57	7	p_sys->i_length
water	87:42	0:0	8	p_sys
op	87:47	0:0	8	->
water	87:49	0:0	8	i_length
arg	87:59	87:63	7	"%s"
water	87:59	0:0	8	"%s"
arg	88:22	89:41	7	p_sys->p_feeds[i_feed].p_items[i_item].psz_title+p_sys->i_cur_char
water	88:22	0:0	8	p_sys
op	88:27	0:0	8	->
water	88:29	0:0	8	p_feeds
op	88:36	0:0	8	[
water	88:37	0:0	8	i_feed
op	88:43	0:0	8	]
op	88:44	0:0	8	.
water	88:45	0:0	8	p_items
op	88:52	0:0	8	[
water	88:53	0:0	8	i_item
op	88:59	0:0	8	]
op	88:60	0:0	8	.
water	88:61	0:0	8	psz_title
op	89:22	0:0	8	+
water	89:23	0:0	8	p_sys
op	89:28	0:0	8	->
water	89:30	0:0	8	i_cur_char
water	89:42	0:0	6	;
water	90:4	0:0	4	}
while	91:4	99:4	2	(strlen (p_sys -> psz_marquee ) < ( unsigned int ) p_sys -> i_length)
cond	91:11	91:63	3	strlen (p_sys -> psz_marquee ) < ( unsigned int ) p_sys -> i_length
call	91:11	91:38	4	strlen
arg	91:19	91:38	5	p_sys->psz_marquee
water	91:19	0:0	6	p_sys
op	91:24	0:0	6	->
water	91:26	0:0	6	psz_marquee
op	91:40	0:0	4	<
water	91:42	0:0	4	(
water	91:43	0:0	4	unsigned
water	91:52	0:0	4	int
water	91:55	0:0	4	)
water	91:56	0:0	4	p_sys
op	91:61	0:0	4	->
water	91:63	0:0	4	i_length
stmts	92:4	99:4	3	
water	92:4	0:0	4	{
water	93:8	0:0	4	i_item
op	93:14	0:0	4	++
water	93:16	0:0	4	;
if	94:8	94:60	4	(i_item == p_sys -> p_feeds [ i_feed ] . i_items)
cond	94:12	94:45	5	i_item == p_sys -> p_feeds [ i_feed ] . i_items
water	94:12	0:0	6	i_item
op	94:19	0:0	6	==
water	94:22	0:0	6	p_sys
op	94:27	0:0	6	->
water	94:29	0:0	6	p_feeds
op	94:36	0:0	6	[
water	94:37	0:0	6	i_feed
op	94:43	0:0	6	]
op	94:44	0:0	6	.
water	94:45	0:0	6	i_items
stmts	94:55	94:60	5	
break	94:55	94:60	6	
call	95:8	98:67	4	snprintf
arg	95:18	95:49	5	strchr(p_sys->psz_marquee,0)
call	95:18	95:48	6	strchr
arg	95:26	95:44	7	p_sys->psz_marquee
water	95:26	0:0	8	p_sys
op	95:31	0:0	8	->
water	95:33	0:0	8	psz_marquee
arg	95:46	95:48	7	0
water	95:46	0:0	8	0
arg	96:18	96:64	5	p_sys->i_length-strlen(p_sys->psz_marquee)
water	96:18	0:0	6	p_sys
op	96:23	0:0	6	->
water	96:25	0:0	6	i_length
op	96:34	0:0	6	-
call	96:36	96:63	6	strlen
arg	96:44	96:63	7	p_sys->psz_marquee
water	96:44	0:0	8	p_sys
op	96:49	0:0	8	->
water	96:51	0:0	8	psz_marquee
arg	97:18	97:25	5	" - %s"
water	97:18	0:0	6	" - %s"
arg	98:18	98:67	5	p_sys->p_feeds[i_feed].p_items[i_item].psz_title
water	98:18	0:0	6	p_sys
op	98:23	0:0	6	->
water	98:25	0:0	6	p_feeds
op	98:32	0:0	6	[
water	98:33	0:0	6	i_feed
op	98:39	0:0	6	]
op	98:40	0:0	6	.
water	98:41	0:0	6	p_items
op	98:48	0:0	6	[
water	98:49	0:0	6	i_item
op	98:55	0:0	6	]
op	98:56	0:0	6	.
water	98:57	0:0	6	psz_title
water	98:68	0:0	4	;
water	99:4	0:0	4	}
water	102:4	0:0	2	{
decl	103:8	103:46	2	char	*a
op	103:16	0:0	2	=
call	103:18	103:45	3	strdup
arg	103:26	103:45	4	p_sys->psz_marquee
water	103:26	0:0	5	p_sys
op	103:31	0:0	5	->
water	103:33	0:0	5	psz_marquee
decl	104:8	104:20	2	char	*a2
op	104:17	0:0	2	=
water	104:19	0:0	2	a
decl	105:8	105:36	2	char	*b
op	105:16	0:0	2	=
water	105:18	0:0	2	p_sys
op	105:23	0:0	2	->
water	105:25	0:0	2	psz_marquee
call	106:8	106:39	2	EnsureUTF8
arg	106:20	106:39	3	p_sys->psz_marquee
water	106:20	0:0	4	p_sys
op	106:25	0:0	4	->
water	106:27	0:0	4	psz_marquee
water	106:40	0:0	2	;
while	108:8	112:8	2	(* b != '\0')
cond	108:15	108:21	3	* b != '\0'
op	108:15	0:0	4	*
water	108:16	0:0	4	b
op	108:18	0:0	4	!=
water	108:21	0:0	4	'\0'
stmts	109:8	112:8	3	
water	109:8	0:0	4	{
if	110:12	110:35	4	(* b != * a)
cond	110:16	110:23	5	* b != * a
op	110:16	0:0	6	*
water	110:17	0:0	6	b
op	110:19	0:0	6	!=
op	110:22	0:0	6	*
water	110:23	0:0	6	a
stmts	110:27	110:35	5	
op	110:27	0:0	6	*
water	110:28	0:0	6	b
op	110:30	0:0	6	=
water	110:32	0:0	6	' '
water	110:35	0:0	6	;
water	111:12	0:0	4	b
op	111:13	0:0	4	++
water	111:15	0:0	4	;
water	111:16	0:0	4	a
op	111:17	0:0	4	++
water	111:19	0:0	4	;
water	112:8	0:0	4	}
call	113:8	113:17	2	free
arg	113:14	113:17	3	a2
water	113:14	0:0	4	a2
water	113:18	0:0	2	;
water	114:4	0:0	2	}
water	115:4	0:0	2	p_spu
op	115:9	0:0	2	->
water	115:11	0:0	2	p_region
op	115:19	0:0	2	->
water	115:21	0:0	2	psz_text
op	115:30	0:0	2	=
call	115:32	115:57	2	strdup
arg	115:39	115:57	3	p_sys->psz_marquee
water	115:39	0:0	4	p_sys
op	115:44	0:0	4	->
water	115:46	0:0	4	psz_marquee
water	115:58	0:0	2	;
if	116:4	117:75	2	(p_sys -> p_style -> i_font_size > 0)
cond	116:8	116:38	3	p_sys -> p_style -> i_font_size > 0
water	116:8	0:0	4	p_sys
op	116:13	0:0	4	->
water	116:15	0:0	4	p_style
op	116:22	0:0	4	->
water	116:24	0:0	4	i_font_size
op	116:36	0:0	4	>
water	116:38	0:0	4	0
stmts	117:8	117:75	3	
water	117:8	0:0	4	p_spu
op	117:13	0:0	4	->
water	117:15	0:0	4	p_region
op	117:23	0:0	4	->
water	117:25	0:0	4	fmt
op	117:28	0:0	4	.
water	117:29	0:0	4	i_visible_height
op	117:46	0:0	4	=
water	117:48	0:0	4	p_sys
op	117:53	0:0	4	->
water	117:55	0:0	4	p_style
op	117:62	0:0	4	->
water	117:64	0:0	4	i_font_size
water	117:75	0:0	4	;
water	118:4	0:0	2	p_spu
op	118:9	0:0	2	->
water	118:11	0:0	2	i_start
op	118:19	0:0	2	=
water	118:21	0:0	2	date
water	118:25	0:0	2	;
water	119:4	0:0	2	p_spu
op	119:9	0:0	2	->
water	119:11	0:0	2	i_stop
op	119:19	0:0	2	=
water	119:21	0:0	2	0
water	119:22	0:0	2	;
water	120:4	0:0	2	p_spu
op	120:9	0:0	2	->
water	120:11	0:0	2	b_ephemer
op	120:21	0:0	2	=
water	120:23	0:0	2	true
water	120:27	0:0	2	;
if	122:4	126:4	2	(p_sys -> i_pos < 0)
cond	122:8	122:23	3	p_sys -> i_pos < 0
water	122:8	0:0	4	p_sys
op	122:13	0:0	4	->
water	122:15	0:0	4	i_pos
op	122:21	0:0	4	<
water	122:23	0:0	4	0
stmts	123:4	126:4	3	
water	123:4	0:0	4	{
water	124:8	0:0	4	p_spu
op	124:13	0:0	4	->
water	124:15	0:0	4	p_region
op	124:23	0:0	4	->
water	124:25	0:0	4	i_align
op	124:33	0:0	4	=
water	124:35	0:0	4	SUBPICTURE_ALIGN_LEFT
op	124:57	0:0	4	|
water	124:59	0:0	4	SUBPICTURE_ALIGN_TOP
water	124:79	0:0	4	;
water	125:8	0:0	4	p_spu
op	125:13	0:0	4	->
water	125:15	0:0	4	b_absolute
op	125:26	0:0	4	=
water	125:28	0:0	4	true
water	125:32	0:0	4	;
water	126:4	0:0	4	}
else	127:4	131:4	2
stmts	128:4	131:4	3	
water	128:4	0:0	4	{
water	129:8	0:0	4	p_spu
op	129:13	0:0	4	->
water	129:15	0:0	4	p_region
op	129:23	0:0	4	->
water	129:25	0:0	4	i_align
op	129:33	0:0	4	=
water	129:35	0:0	4	p_sys
op	129:40	0:0	4	->
water	129:42	0:0	4	i_pos
water	129:47	0:0	4	;
water	130:8	0:0	4	p_spu
op	130:13	0:0	4	->
water	130:15	0:0	4	b_absolute
op	130:26	0:0	4	=
water	130:28	0:0	4	false
water	130:33	0:0	4	;
water	131:4	0:0	4	}
water	132:4	0:0	2	p_spu
op	132:9	0:0	2	->
water	132:11	0:0	2	p_region
op	132:19	0:0	2	->
water	132:21	0:0	2	i_x
op	132:25	0:0	2	=
water	132:27	0:0	2	p_sys
op	132:32	0:0	2	->
water	132:34	0:0	2	i_xoff
water	132:40	0:0	2	;
water	133:4	0:0	2	p_spu
op	133:9	0:0	2	->
water	133:11	0:0	2	p_region
op	133:19	0:0	2	->
water	133:21	0:0	2	i_y
op	133:25	0:0	2	=
water	133:27	0:0	2	p_sys
op	133:32	0:0	2	->
water	133:34	0:0	2	i_yoff
water	133:40	0:0	2	;
water	134:4	0:0	2	p_spu
op	134:9	0:0	2	->
water	134:11	0:0	2	p_region
op	134:19	0:0	2	->
water	134:21	0:0	2	p_style
op	134:29	0:0	2	=
call	134:31	134:68	2	text_style_Duplicate
arg	134:53	134:68	3	p_sys->p_style
water	134:53	0:0	4	p_sys
op	134:58	0:0	4	->
water	134:60	0:0	4	p_style
water	134:69	0:0	2	;
if	135:4	162:4	2	(p_feed -> p_pic)
cond	135:8	135:16	3	p_feed -> p_pic
water	135:8	0:0	4	p_feed
op	135:14	0:0	4	->
water	135:16	0:0	4	p_pic
stmts	136:4	162:4	3	
water	136:4	0:0	4	{
decl	138:8	138:40	4	picture_t	*p_pic
op	138:25	0:0	4	=
water	138:27	0:0	4	p_feed
op	138:33	0:0	4	->
water	138:35	0:0	4	p_pic
decl	139:8	139:30	4	video_format_t	fmt_out
call	140:8	140:52	4	memset
arg	140:16	140:24	5	&fmt_out
op	140:16	0:0	6	&
water	140:17	0:0	6	fmt_out
arg	140:26	140:27	5	0
water	140:26	0:0	6	0
arg	140:29	140:52	5	sizeof(video_format_t)
op	140:29	0:0	6	sizeof
water	140:35	0:0	6	(
water	140:36	0:0	6	video_format_t
water	140:50	0:0	6	)
water	140:53	0:0	4	;
water	141:8	0:0	4	fmt_out
op	141:15	0:0	4	.
water	141:16	0:0	4	i_chroma
op	141:25	0:0	4	=
water	141:27	0:0	4	VLC_CODEC_YUVA
water	141:41	0:0	4	;
water	142:8	0:0	4	fmt_out
op	142:15	0:0	4	.
water	142:16	0:0	4	i_sar_num
op	142:26	0:0	4	=
water	142:28	0:0	4	fmt_out
op	142:35	0:0	4	.
water	142:36	0:0	4	i_sar_den
op	142:46	0:0	4	=
water	142:48	0:0	4	1
water	142:49	0:0	4	;
water	143:8	0:0	4	fmt_out
op	143:15	0:0	4	.
water	143:16	0:0	4	i_width
op	143:24	0:0	4	=
water	144:12	0:0	4	fmt_out
op	144:19	0:0	4	.
water	144:20	0:0	4	i_visible_width
op	144:36	0:0	4	=
water	144:38	0:0	4	p_pic
op	144:43	0:0	4	->
water	144:45	0:0	4	p
op	144:46	0:0	4	[
water	144:47	0:0	4	Y_PLANE
op	144:54	0:0	4	]
op	144:55	0:0	4	.
water	144:56	0:0	4	i_visible_pitch
water	144:71	0:0	4	;
water	145:8	0:0	4	fmt_out
op	145:15	0:0	4	.
water	145:16	0:0	4	i_height
op	145:25	0:0	4	=
water	146:12	0:0	4	fmt_out
op	146:19	0:0	4	.
water	146:20	0:0	4	i_visible_height
op	146:37	0:0	4	=
water	146:39	0:0	4	p_pic
op	146:44	0:0	4	->
water	146:46	0:0	4	p
op	146:47	0:0	4	[
water	146:48	0:0	4	Y_PLANE
op	146:55	0:0	4	]
op	146:56	0:0	4	.
water	146:57	0:0	4	i_visible_lines
water	146:72	0:0	4	;
water	147:8	0:0	4	p_region
op	147:17	0:0	4	=
call	147:19	147:51	4	subpicture_region_New
arg	147:42	147:51	5	&fmt_out
op	147:42	0:0	6	&
water	147:43	0:0	6	fmt_out
water	147:52	0:0	4	;
if	148:8	151:8	4	(! p_region)
cond	148:12	148:13	5	! p_region
op	148:12	0:0	6	!
water	148:13	0:0	6	p_region
stmts	149:8	151:8	5	
water	149:8	0:0	6	{
call	150:12	150:60	6	msg_Err
arg	150:21	150:29	7	p_filter
water	150:21	0:0	8	p_filter
arg	150:31	150:60	7	"cannot allocate SPU region"
water	150:31	0:0	8	"cannot allocate SPU region"
water	150:61	0:0	6	;
water	151:8	0:0	6	}
else	152:8	161:8	4
stmts	153:8	161:8	5	
water	153:8	0:0	6	{
water	154:12	0:0	6	p_region
op	154:20	0:0	6	->
water	154:22	0:0	6	i_x
op	154:26	0:0	6	=
water	154:28	0:0	6	p_spu
op	154:33	0:0	6	->
water	154:35	0:0	6	p_region
op	154:43	0:0	6	->
water	154:45	0:0	6	i_x
water	154:48	0:0	6	;
water	155:12	0:0	6	p_region
op	155:20	0:0	6	->
water	155:22	0:0	6	i_y
op	155:26	0:0	6	=
water	155:28	0:0	6	p_spu
op	155:33	0:0	6	->
water	155:35	0:0	6	p_region
op	155:43	0:0	6	->
water	155:45	0:0	6	i_y
water	155:48	0:0	6	;
call	157:12	157:53	6	picture_Copy
arg	157:26	157:45	7	p_region->p_picture
water	157:26	0:0	8	p_region
op	157:34	0:0	8	->
water	157:36	0:0	8	p_picture
arg	157:47	157:53	7	p_pic
water	157:47	0:0	8	p_pic
water	157:54	0:0	6	;
water	158:12	0:0	6	p_spu
op	158:17	0:0	6	->
water	158:19	0:0	6	p_region
op	158:27	0:0	6	->
water	158:29	0:0	6	p_next
op	158:36	0:0	6	=
water	158:38	0:0	6	p_region
water	158:46	0:0	6	;
water	160:12	0:0	6	p_spu
op	160:17	0:0	6	->
water	160:19	0:0	6	p_region
op	160:27	0:0	6	->
water	160:29	0:0	6	i_x
op	160:33	0:0	6	+=
water	160:36	0:0	6	fmt_out
op	160:43	0:0	6	.
water	160:44	0:0	6	i_visible_width
water	160:59	0:0	6	;
water	161:8	0:0	6	}
water	162:4	0:0	4	}
call	163:4	163:35	2	vlc_mutex_unlock
arg	163:22	163:35	3	&p_sys->lock
op	163:22	0:0	4	&
water	163:23	0:0	4	p_sys
op	163:28	0:0	4	->
water	163:30	0:0	4	lock
water	163:36	0:0	2	;
return	164:4	164:16	2	p_spu
water	164:11	0:0	3	p_spu

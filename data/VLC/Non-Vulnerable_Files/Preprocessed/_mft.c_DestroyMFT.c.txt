func	2:0	26:0	0	static void	DestroyMFT
params	2:22	0:0	1	
param	2:23	2:39	2	decoder_t *	p_dec
stmnts	0:0	25:21	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	6:62	2	(p_sys -> event_generator)
cond	5:8	5:15	3	p_sys -> event_generator
water	5:8	0:0	4	p_sys
op	5:13	0:0	4	->
water	5:15	0:0	4	event_generator
stmts	6:8	6:62	3	
call	6:8	6:61	4	IMFMediaEventGenerator_Release
arg	6:39	6:61	5	p_sys->event_generator
water	6:39	0:0	6	p_sys
op	6:44	0:0	6	->
water	6:46	0:0	6	event_generator
water	6:62	0:0	4	;
if	7:4	8:47	2	(p_sys -> input_type)
cond	7:8	7:15	3	p_sys -> input_type
water	7:8	0:0	4	p_sys
op	7:13	0:0	4	->
water	7:15	0:0	4	input_type
stmts	8:8	8:47	3	
call	8:8	8:46	4	IMFMediaType_Release
arg	8:29	8:46	5	p_sys->input_type
water	8:29	0:0	6	p_sys
op	8:34	0:0	6	->
water	8:36	0:0	6	input_type
water	8:47	0:0	4	;
if	9:4	16:4	2	(p_sys -> output_sample)
cond	9:8	9:15	3	p_sys -> output_sample
water	9:8	0:0	4	p_sys
op	9:13	0:0	4	->
water	9:15	0:0	4	output_sample
stmts	10:4	16:4	3	
water	10:4	0:0	4	{
decl	11:8	11:50	4	IMFMediaBuffer	*output_media_buffer
op	11:44	0:0	4	=
water	11:46	0:0	4	NULL
decl	12:8	12:94	4	HRESULT	hr
op	12:19	0:0	4	=
call	12:21	12:93	5	IMFSample_GetBufferByIndex
arg	12:48	12:68	6	p_sys->output_sample
water	12:48	0:0	7	p_sys
op	12:53	0:0	7	->
water	12:55	0:0	7	output_sample
arg	12:70	12:71	6	0
water	12:70	0:0	7	0
arg	12:73	12:93	6	&output_media_buffer
op	12:73	0:0	7	&
water	12:74	0:0	7	output_media_buffer
if	13:8	14:50	4	(SUCCEEDED (hr ))
cond	13:12	13:24	5	SUCCEEDED (hr )
call	13:12	13:24	6	SUCCEEDED
arg	13:22	13:24	7	hr
water	13:22	0:0	8	hr
stmts	14:12	14:50	5	
call	14:12	14:49	6	IMFSample_Release
arg	14:30	14:49	7	output_media_buffer
water	14:30	0:0	8	output_media_buffer
water	14:50	0:0	6	;
call	15:8	15:46	4	IMFSample_Release
arg	15:26	15:46	5	p_sys->output_sample
water	15:26	0:0	6	p_sys
op	15:31	0:0	6	->
water	15:33	0:0	6	output_sample
water	15:47	0:0	4	;
water	16:4	0:0	4	}
if	17:4	18:48	2	(p_sys -> output_type)
cond	17:8	17:15	3	p_sys -> output_type
water	17:8	0:0	4	p_sys
op	17:13	0:0	4	->
water	17:15	0:0	4	output_type
stmts	18:8	18:48	3	
call	18:8	18:47	4	IMFMediaType_Release
arg	18:29	18:47	5	p_sys->output_type
water	18:29	0:0	6	p_sys
op	18:34	0:0	6	->
water	18:36	0:0	6	output_type
water	18:48	0:0	4	;
if	19:4	20:40	2	(p_sys -> mft)
cond	19:8	19:15	3	p_sys -> mft
water	19:8	0:0	4	p_sys
op	19:13	0:0	4	->
water	19:15	0:0	4	mft
stmts	20:8	20:40	3	
call	20:8	20:39	4	IMFTransform_Release
arg	20:29	20:39	5	p_sys->mft
water	20:29	0:0	6	p_sys
op	20:34	0:0	6	->
water	20:36	0:0	6	mft
water	20:40	0:0	4	;
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	event_generator
op	21:27	0:0	2	=
water	21:29	0:0	2	NULL
water	21:33	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	input_type
op	22:22	0:0	2	=
water	22:24	0:0	2	NULL
water	22:28	0:0	2	;
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	output_sample
op	23:25	0:0	2	=
water	23:27	0:0	2	NULL
water	23:31	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	output_type
op	24:23	0:0	2	=
water	24:25	0:0	2	NULL
water	24:29	0:0	2	;
water	25:4	0:0	2	p_sys
op	25:9	0:0	2	->
water	25:11	0:0	2	mft
op	25:15	0:0	2	=
water	25:17	0:0	2	NULL
water	25:21	0:0	2	;

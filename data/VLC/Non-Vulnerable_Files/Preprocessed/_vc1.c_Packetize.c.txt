func	2:0	32:0	0	static block_t *	Packetize
params	2:25	0:0	1	
param	2:27	2:43	2	decoder_t *	p_dec
param	2:45	2:64	2	block_t * *	pp_block
stmnts	0:0	31:15	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
if	5:4	27:4	2	(p_sys -> b_check_startcode && pp_block && * pp_block)
cond	5:8	5:49	3	p_sys -> b_check_startcode && pp_block && * pp_block
water	5:8	0:0	4	p_sys
op	5:13	0:0	4	->
water	5:15	0:0	4	b_check_startcode
op	5:33	0:0	4	&&
water	5:36	0:0	4	pp_block
op	5:45	0:0	4	&&
op	5:48	0:0	4	*
water	5:49	0:0	4	pp_block
stmts	6:4	27:4	3	
water	6:4	0:0	4	{
water	8:8	0:0	4	const
water	8:14	0:0	4	unsigned
water	8:23	0:0	4	i_startcode
op	8:35	0:0	4	=
op	8:37	0:0	4	sizeof
water	8:43	0:0	4	(
water	8:44	0:0	4	p_vc1_startcode
water	8:59	0:0	4	)
water	8:60	0:0	4	;
decl	9:8	9:36	4	block_t	*p_block
op	9:25	0:0	4	=
op	9:27	0:0	4	*
water	9:28	0:0	4	pp_block
if	10:8	25:8	4	(p_block -> i_buffer > 0 && ( p_block -> i_buffer < i_startcode ||memcmp (p_block -> p_buffer ,p_vc1_startcode ,i_startcode ) ))
cond	10:12	12:72	5	p_block -> i_buffer > 0 && ( p_block -> i_buffer < i_startcode ||memcmp (p_block -> p_buffer ,p_vc1_startcode ,i_startcode ) )
water	10:12	0:0	6	p_block
op	10:19	0:0	6	->
water	10:21	0:0	6	i_buffer
op	10:30	0:0	6	>
water	10:32	0:0	6	0
op	10:34	0:0	6	&&
water	11:12	0:0	6	(
water	11:14	0:0	6	p_block
op	11:21	0:0	6	->
water	11:23	0:0	6	i_buffer
op	11:32	0:0	6	<
water	11:34	0:0	6	i_startcode
op	11:46	0:0	6	||
call	12:14	12:70	6	memcmp
arg	12:22	12:39	7	p_block->p_buffer
water	12:22	0:0	8	p_block
op	12:29	0:0	8	->
water	12:31	0:0	8	p_buffer
arg	12:41	12:56	7	p_vc1_startcode
water	12:41	0:0	8	p_vc1_startcode
arg	12:58	12:70	7	i_startcode
water	12:58	0:0	8	i_startcode
water	12:72	0:0	6	)
stmts	13:8	25:8	5	
water	13:8	0:0	6	{
op	14:12	0:0	6	*
water	14:13	0:0	6	pp_block
op	14:22	0:0	6	=
water	14:24	0:0	6	p_block
op	14:32	0:0	6	=
call	14:34	14:91	6	block_Realloc
arg	14:49	14:56	7	p_block
water	14:49	0:0	8	p_block
arg	14:58	14:71	7	i_startcode+1
water	14:58	0:0	8	i_startcode
op	14:69	0:0	8	+
water	14:70	0:0	8	1
arg	14:73	14:91	7	p_block->i_buffer
water	14:73	0:0	8	p_block
op	14:80	0:0	8	->
water	14:82	0:0	8	i_buffer
water	14:92	0:0	6	;
if	15:12	24:12	6	(p_block)
cond	15:16	15:16	7	p_block
water	15:16	0:0	8	p_block
stmts	16:12	24:12	7	
water	16:12	0:0	8	{
call	17:16	17:72	8	memcpy
arg	17:24	17:41	9	p_block->p_buffer
water	17:24	0:0	10	p_block
op	17:31	0:0	10	->
water	17:33	0:0	10	p_buffer
arg	17:43	17:58	9	p_vc1_startcode
water	17:43	0:0	10	p_vc1_startcode
arg	17:60	17:72	9	i_startcode
water	17:60	0:0	10	i_startcode
water	17:73	0:0	8	;
if	18:16	21:67	8	(p_sys -> b_sequence_header && p_sys -> sh . b_interlaced && p_block -> i_buffer > i_startcode + 1 && ( p_block -> p_buffer [ i_startcode + 1 ] & 0 xc0 ) == 0 xc0)
cond	18:20	20:66	9	p_sys -> b_sequence_header && p_sys -> sh . b_interlaced && p_block -> i_buffer > i_startcode + 1 && ( p_block -> p_buffer [ i_startcode + 1 ] & 0 xc0 ) == 0 xc0
water	18:20	0:0	10	p_sys
op	18:25	0:0	10	->
water	18:27	0:0	10	b_sequence_header
op	18:45	0:0	10	&&
water	18:48	0:0	10	p_sys
op	18:53	0:0	10	->
water	18:55	0:0	10	sh
op	18:57	0:0	10	.
water	18:58	0:0	10	b_interlaced
op	18:71	0:0	10	&&
water	19:20	0:0	10	p_block
op	19:27	0:0	10	->
water	19:29	0:0	10	i_buffer
op	19:38	0:0	10	>
water	19:40	0:0	10	i_startcode
op	19:51	0:0	10	+
water	19:52	0:0	10	1
op	19:54	0:0	10	&&
water	20:20	0:0	10	(
water	20:21	0:0	10	p_block
op	20:28	0:0	10	->
water	20:30	0:0	10	p_buffer
op	20:38	0:0	10	[
water	20:39	0:0	10	i_startcode
op	20:50	0:0	10	+
water	20:51	0:0	10	1
op	20:52	0:0	10	]
op	20:54	0:0	10	&
water	20:56	0:0	10	0
water	20:57	0:0	10	xc0
water	20:60	0:0	10	)
op	20:62	0:0	10	==
water	20:65	0:0	10	0
water	20:66	0:0	10	xc0
stmts	21:20	21:67	9	
water	21:20	0:0	10	p_block
op	21:27	0:0	10	->
water	21:29	0:0	10	p_buffer
op	21:37	0:0	10	[
water	21:38	0:0	10	i_startcode
op	21:49	0:0	10	]
op	21:51	0:0	10	=
water	21:53	0:0	10	IDU_TYPE_FIELD
water	21:67	0:0	10	;
else	22:16	23:67	8
stmts	23:20	23:67	9	
water	23:20	0:0	10	p_block
op	23:27	0:0	10	->
water	23:29	0:0	10	p_buffer
op	23:37	0:0	10	[
water	23:38	0:0	10	i_startcode
op	23:49	0:0	10	]
op	23:51	0:0	10	=
water	23:53	0:0	10	IDU_TYPE_FRAME
water	23:67	0:0	10	;
water	24:12	0:0	8	}
water	25:8	0:0	6	}
water	26:8	0:0	4	p_sys
op	26:13	0:0	4	->
water	26:15	0:0	4	b_check_startcode
op	26:33	0:0	4	=
water	26:35	0:0	4	false
water	26:40	0:0	4	;
water	27:4	0:0	4	}
decl	28:4	28:72	2	block_t	*p_au
op	28:18	0:0	2	=
call	28:20	28:71	3	packetizer_Packetize
arg	28:42	28:60	4	&p_sys->packetizer
op	28:42	0:0	5	&
water	28:43	0:0	5	p_sys
op	28:48	0:0	5	->
water	28:50	0:0	5	packetizer
arg	28:62	28:71	4	pp_block
water	28:62	0:0	5	pp_block
if	29:4	30:61	2	(! p_au)
cond	29:8	29:9	3	! p_au
op	29:8	0:0	4	!
water	29:9	0:0	4	p_au
stmts	30:8	30:61	3	
water	30:8	0:0	4	p_sys
op	30:13	0:0	4	->
water	30:15	0:0	4	b_check_startcode
op	30:33	0:0	4	=
water	30:35	0:0	4	p_dec
op	30:40	0:0	4	->
water	30:42	0:0	4	fmt_in
op	30:48	0:0	4	.
water	30:49	0:0	4	b_packetized
water	30:61	0:0	4	;
return	31:4	31:15	2	p_au
water	31:11	0:0	3	p_au

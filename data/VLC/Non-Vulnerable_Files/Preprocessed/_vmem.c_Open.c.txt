func	2:0	103:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	object
stmnts	0:0	102:22	1	
decl	4:4	4:49	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:41	0:0	2	*
water	4:42	0:0	2	)
water	4:43	0:0	2	object
decl	5:4	5:50	2	vout_display_sys_t	*sys
op	5:28	0:0	2	=
call	5:30	5:49	3	malloc
arg	5:37	5:49	4	sizeof(*sys)
op	5:37	0:0	5	sizeof
water	5:43	0:0	5	(
op	5:44	0:0	5	*
water	5:45	0:0	5	sys
water	5:48	0:0	5	)
if	6:4	7:25	2	(unlikely (! sys ))
cond	6:8	6:21	3	unlikely (! sys )
call	6:8	6:21	4	unlikely
arg	6:17	6:21	5	!sys
op	6:17	0:0	6	!
water	6:18	0:0	6	sys
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
decl	9:4	9:62	2	vlc_format_cb	setup
op	9:24	0:0	2	=
call	9:26	9:61	3	var_InheritAddress
arg	9:45	9:47	4	vd
water	9:45	0:0	5	vd
arg	9:49	9:61	4	"vmem-setup"
water	9:49	0:0	5	"vmem-setup"
water	10:4	0:0	2	sys
op	10:7	0:0	2	->
water	10:9	0:0	2	lock
op	10:14	0:0	2	=
call	10:16	10:50	2	var_InheritAddress
arg	10:35	10:37	3	vd
water	10:35	0:0	4	vd
arg	10:39	10:50	3	"vmem-lock"
water	10:39	0:0	4	"vmem-lock"
water	10:51	0:0	2	;
if	11:4	15:4	2	(sys -> lock == NULL)
cond	11:8	11:21	3	sys -> lock == NULL
water	11:8	0:0	4	sys
op	11:11	0:0	4	->
water	11:13	0:0	4	lock
op	11:18	0:0	4	==
water	11:21	0:0	4	NULL
stmts	11:27	15:4	3	
water	11:27	0:0	4	{
call	12:8	12:43	4	msg_Err
arg	12:16	12:18	5	vd
water	12:16	0:0	6	vd
arg	12:20	12:43	5	"missing lock callback"
water	12:20	0:0	6	"missing lock callback"
water	12:44	0:0	4	;
call	13:8	13:16	4	free
arg	13:13	13:16	5	sys
water	13:13	0:0	6	sys
water	13:17	0:0	4	;
return	14:8	14:27	4	VLC_EGENERIC
water	14:15	0:0	5	VLC_EGENERIC
water	15:4	0:0	4	}
water	16:4	0:0	2	sys
op	16:7	0:0	2	->
water	16:9	0:0	2	unlock
op	16:16	0:0	2	=
call	16:18	16:54	2	var_InheritAddress
arg	16:37	16:39	3	vd
water	16:37	0:0	4	vd
arg	16:41	16:54	3	"vmem-unlock"
water	16:41	0:0	4	"vmem-unlock"
water	16:55	0:0	2	;
water	17:4	0:0	2	sys
op	17:7	0:0	2	->
water	17:9	0:0	2	display
op	17:17	0:0	2	=
call	17:19	17:56	2	var_InheritAddress
arg	17:38	17:40	3	vd
water	17:38	0:0	4	vd
arg	17:42	17:56	3	"vmem-display"
water	17:42	0:0	4	"vmem-display"
water	17:57	0:0	2	;
water	18:4	0:0	2	sys
op	18:7	0:0	2	->
water	18:9	0:0	2	cleanup
op	18:17	0:0	2	=
call	18:19	18:56	2	var_InheritAddress
arg	18:38	18:40	3	vd
water	18:38	0:0	4	vd
arg	18:42	18:56	3	"vmem-cleanup"
water	18:42	0:0	4	"vmem-cleanup"
water	18:57	0:0	2	;
water	19:4	0:0	2	sys
op	19:7	0:0	2	->
water	19:9	0:0	2	opaque
op	19:16	0:0	2	=
call	19:18	19:52	2	var_InheritAddress
arg	19:37	19:39	3	vd
water	19:37	0:0	4	vd
arg	19:41	19:52	3	"vmem-data"
water	19:41	0:0	4	"vmem-data"
water	19:53	0:0	2	;
water	20:4	0:0	2	sys
op	20:7	0:0	2	->
water	20:9	0:0	2	pool
op	20:14	0:0	2	=
water	20:16	0:0	2	NULL
water	20:20	0:0	2	;
decl	22:4	22:22	2	video_format_t	fmt
call	23:4	23:45	2	video_format_ApplyRotation
arg	23:31	23:35	3	&fmt
op	23:31	0:0	4	&
water	23:32	0:0	4	fmt
arg	23:37	23:45	3	&vd->fmt
op	23:37	0:0	4	&
water	23:38	0:0	4	vd
op	23:40	0:0	4	->
water	23:42	0:0	4	fmt
water	23:46	0:0	2	;
if	24:4	38:4	2	(setup != NULL)
cond	24:8	24:17	3	setup != NULL
water	24:8	0:0	4	setup
op	24:14	0:0	4	!=
water	24:17	0:0	4	NULL
stmts	24:23	38:4	3	
water	24:23	0:0	4	{
decl	25:8	25:22	4	char	chroma[5]
call	26:8	26:39	4	memcpy
arg	26:15	26:21	5	chroma
water	26:15	0:0	6	chroma
arg	26:23	26:36	5	&fmt.i_chroma
op	26:23	0:0	6	&
water	26:24	0:0	6	fmt
op	26:27	0:0	6	.
water	26:28	0:0	6	i_chroma
arg	26:38	26:39	5	4
water	26:38	0:0	6	4
water	26:40	0:0	4	;
water	27:8	0:0	4	chroma
op	27:14	0:0	4	[
water	27:15	0:0	4	4
op	27:16	0:0	4	]
op	27:18	0:0	4	=
water	27:20	0:0	4	'\0'
water	27:24	0:0	4	;
call	28:8	28:52	4	memset
arg	28:15	28:27	5	sys->pitches
water	28:15	0:0	6	sys
op	28:18	0:0	6	->
water	28:20	0:0	6	pitches
arg	28:29	28:30	5	0
water	28:29	0:0	6	0
arg	28:32	28:52	5	sizeof(sys->pitches)
op	28:32	0:0	6	sizeof
water	28:38	0:0	6	(
water	28:39	0:0	6	sys
op	28:42	0:0	6	->
water	28:44	0:0	6	pitches
water	28:51	0:0	6	)
water	28:53	0:0	4	;
call	29:8	29:48	4	memset
arg	29:15	29:25	5	sys->lines
water	29:15	0:0	6	sys
op	29:18	0:0	6	->
water	29:20	0:0	6	lines
arg	29:27	29:28	5	0
water	29:27	0:0	6	0
arg	29:30	29:48	5	sizeof(sys->lines)
op	29:30	0:0	6	sizeof
water	29:36	0:0	6	(
water	29:37	0:0	6	sys
op	29:40	0:0	6	->
water	29:42	0:0	6	lines
water	29:47	0:0	6	)
water	29:49	0:0	4	;
water	30:8	0:0	4	sys
op	30:11	0:0	4	->
water	30:13	0:0	4	count
op	30:19	0:0	4	=
call	30:21	31:51	4	setup
arg	30:27	30:39	5	&sys->opaque
op	30:27	0:0	6	&
water	30:28	0:0	6	sys
op	30:31	0:0	6	->
water	30:33	0:0	6	opaque
arg	30:41	30:47	5	chroma
water	30:41	0:0	6	chroma
arg	30:49	30:61	5	&fmt.i_width
op	30:49	0:0	6	&
water	30:50	0:0	6	fmt
op	30:53	0:0	6	.
water	30:54	0:0	6	i_width
arg	30:63	30:76	5	&fmt.i_height
op	30:63	0:0	6	&
water	30:64	0:0	6	fmt
op	30:67	0:0	6	.
water	30:68	0:0	6	i_height
arg	31:27	31:39	5	sys->pitches
water	31:27	0:0	6	sys
op	31:30	0:0	6	->
water	31:32	0:0	6	pitches
arg	31:41	31:51	5	sys->lines
water	31:41	0:0	6	sys
op	31:44	0:0	6	->
water	31:46	0:0	6	lines
water	31:52	0:0	4	;
if	32:8	36:8	4	(sys -> count == 0)
cond	32:12	32:26	5	sys -> count == 0
water	32:12	0:0	6	sys
op	32:15	0:0	6	->
water	32:17	0:0	6	count
op	32:23	0:0	6	==
water	32:26	0:0	6	0
stmts	32:29	36:8	5	
water	32:29	0:0	6	{
call	33:12	33:66	6	msg_Err
arg	33:20	33:22	7	vd
water	33:20	0:0	8	vd
arg	33:24	33:66	7	"video format setup failure (no pictures)"
water	33:24	0:0	8	"video format setup failure (no pictures)"
water	33:67	0:0	6	;
call	34:12	34:20	6	free
arg	34:17	34:20	7	sys
water	34:17	0:0	8	sys
water	34:21	0:0	6	;
return	35:12	35:31	6	VLC_EGENERIC
water	35:19	0:0	7	VLC_EGENERIC
water	36:8	0:0	6	}
water	37:8	0:0	4	fmt
op	37:11	0:0	4	.
water	37:12	0:0	4	i_chroma
op	37:21	0:0	4	=
call	37:23	37:69	4	vlc_fourcc_GetCodecFromString
arg	37:53	37:61	5	VIDEO_ES
water	37:53	0:0	6	VIDEO_ES
arg	37:63	37:69	5	chroma
water	37:63	0:0	6	chroma
water	37:70	0:0	4	;
water	38:4	0:0	4	}
else	38:6	53:4	2
stmts	38:11	53:4	3	
water	38:11	0:0	4	{
decl	39:8	39:59	4	char	*chroma
op	39:21	0:0	4	=
call	39:23	39:58	5	var_InheritString
arg	39:41	39:43	6	vd
water	39:41	0:0	7	vd
arg	39:45	39:58	6	"vmem-chroma"
water	39:45	0:0	7	"vmem-chroma"
water	40:8	0:0	4	fmt
op	40:11	0:0	4	.
water	40:12	0:0	4	i_chroma
op	40:21	0:0	4	=
call	40:23	40:69	4	vlc_fourcc_GetCodecFromString
arg	40:53	40:61	5	VIDEO_ES
water	40:53	0:0	6	VIDEO_ES
arg	40:63	40:69	5	chroma
water	40:63	0:0	6	chroma
water	40:70	0:0	4	;
call	41:8	41:19	4	free
arg	41:13	41:19	5	chroma
water	41:13	0:0	6	chroma
water	41:20	0:0	4	;
water	42:8	0:0	4	fmt
op	42:11	0:0	4	.
water	42:12	0:0	4	i_width
op	42:21	0:0	4	=
call	42:23	42:58	4	var_InheritInteger
arg	42:42	42:44	5	vd
water	42:42	0:0	6	vd
arg	42:46	42:58	5	"vmem-width"
water	42:46	0:0	6	"vmem-width"
water	42:59	0:0	4	;
water	43:8	0:0	4	fmt
op	43:11	0:0	4	.
water	43:12	0:0	4	i_height
op	43:21	0:0	4	=
call	43:23	43:59	4	var_InheritInteger
arg	43:42	43:44	5	vd
water	43:42	0:0	6	vd
arg	43:46	43:59	5	"vmem-height"
water	43:46	0:0	6	"vmem-height"
water	43:60	0:0	4	;
water	44:8	0:0	4	sys
op	44:11	0:0	4	->
water	44:13	0:0	4	pitches
op	44:20	0:0	4	[
water	44:21	0:0	4	0
op	44:22	0:0	4	]
op	44:24	0:0	4	=
call	44:26	44:61	4	var_InheritInteger
arg	44:45	44:47	5	vd
water	44:45	0:0	6	vd
arg	44:49	44:61	5	"vmem-pitch"
water	44:49	0:0	6	"vmem-pitch"
water	44:62	0:0	4	;
water	45:8	0:0	4	sys
op	45:11	0:0	4	->
water	45:13	0:0	4	lines
op	45:18	0:0	4	[
water	45:19	0:0	4	0
op	45:20	0:0	4	]
op	45:22	0:0	4	=
water	45:24	0:0	4	fmt
op	45:27	0:0	4	.
water	45:28	0:0	4	i_height
water	45:36	0:0	4	;
for	46:8	50:8	4	( size_t i = 1 ;i < PICTURE_PLANE_MAX;i ++)
forinit	0:0	46:25	5	 size_t i = 1 ;
decl	46:13	46:25	6	size_t	i
op	46:22	0:0	6	=
water	46:24	0:0	6	1
cond	46:27	46:31	5	i < PICTURE_PLANE_MAX
water	46:27	0:0	6	i
op	46:29	0:0	6	<
water	46:31	0:0	6	PICTURE_PLANE_MAX
forexpr	46:50	46:51	5	i ++
water	46:50	0:0	6	i
op	46:51	0:0	6	++
stmts	47:8	50:8	5	
water	47:8	0:0	6	{
water	48:12	0:0	6	sys
op	48:15	0:0	6	->
water	48:17	0:0	6	pitches
op	48:24	0:0	6	[
water	48:25	0:0	6	i
op	48:26	0:0	6	]
op	48:28	0:0	6	=
water	48:30	0:0	6	sys
op	48:33	0:0	6	->
water	48:35	0:0	6	pitches
op	48:42	0:0	6	[
water	48:43	0:0	6	0
op	48:44	0:0	6	]
water	48:45	0:0	6	;
water	49:12	0:0	6	sys
op	49:15	0:0	6	->
water	49:17	0:0	6	lines
op	49:22	0:0	6	[
water	49:23	0:0	6	i
op	49:24	0:0	6	]
op	49:26	0:0	6	=
water	49:28	0:0	6	sys
op	49:31	0:0	6	->
water	49:33	0:0	6	lines
op	49:38	0:0	6	[
water	49:39	0:0	6	0
op	49:40	0:0	6	]
water	49:41	0:0	6	;
water	50:8	0:0	6	}
water	51:8	0:0	4	sys
op	51:11	0:0	4	->
water	51:13	0:0	4	count
op	51:19	0:0	4	=
water	51:21	0:0	4	1
water	51:22	0:0	4	;
water	52:8	0:0	4	sys
op	52:11	0:0	4	->
water	52:13	0:0	4	cleanup
op	52:21	0:0	4	=
water	52:23	0:0	4	NULL
water	52:27	0:0	4	;
water	53:4	0:0	4	}
water	54:4	0:0	2	fmt
op	54:7	0:0	2	.
water	54:8	0:0	2	i_x_offset
op	54:19	0:0	2	=
water	54:21	0:0	2	fmt
op	54:24	0:0	2	.
water	54:25	0:0	2	i_y_offset
op	54:36	0:0	2	=
water	54:38	0:0	2	0
water	54:39	0:0	2	;
water	55:4	0:0	2	fmt
op	55:7	0:0	2	.
water	55:8	0:0	2	i_visible_width
op	55:24	0:0	2	=
water	55:26	0:0	2	fmt
op	55:29	0:0	2	.
water	55:30	0:0	2	i_width
water	55:37	0:0	2	;
water	56:4	0:0	2	fmt
op	56:7	0:0	2	.
water	56:8	0:0	2	i_visible_height
op	56:25	0:0	2	=
water	56:27	0:0	2	fmt
op	56:30	0:0	2	.
water	56:31	0:0	2	i_height
water	56:39	0:0	2	;
if	57:4	61:4	2	(! fmt . i_chroma)
cond	57:8	57:13	3	! fmt . i_chroma
op	57:8	0:0	4	!
water	57:9	0:0	4	fmt
op	57:12	0:0	4	.
water	57:13	0:0	4	i_chroma
stmts	57:23	61:4	3	
water	57:23	0:0	4	{
call	58:8	58:61	4	msg_Err
arg	58:16	58:18	5	vd
water	58:16	0:0	6	vd
arg	58:20	58:61	5	"vmem-chroma should be 4 characters long"
water	58:20	0:0	6	"vmem-chroma should be 4 characters long"
water	58:62	0:0	4	;
call	59:8	59:16	4	free
arg	59:13	59:16	5	sys
water	59:13	0:0	6	sys
water	59:17	0:0	4	;
return	60:8	60:27	4	VLC_EGENERIC
water	60:15	0:0	5	VLC_EGENERIC
water	61:4	0:0	4	}
switch	63:4	86:4	2	(fmt . i_chroma)
cond	63:12	63:16	3	fmt . i_chroma
water	63:12	0:0	4	fmt
op	63:15	0:0	4	.
water	63:16	0:0	4	i_chroma
stmts	64:4	86:4	3	
water	64:4	0:0	4	{
label	65:4	65:24	4	case VLC_CODEC_RGB15 :
water	66:8	0:0	4	fmt
op	66:11	0:0	4	.
water	66:12	0:0	4	i_rmask
op	66:20	0:0	4	=
water	66:22	0:0	4	0
water	66:23	0:0	4	x001f
water	66:28	0:0	4	;
water	67:8	0:0	4	fmt
op	67:11	0:0	4	.
water	67:12	0:0	4	i_gmask
op	67:20	0:0	4	=
water	67:22	0:0	4	0
water	67:23	0:0	4	x03e0
water	67:28	0:0	4	;
water	68:8	0:0	4	fmt
op	68:11	0:0	4	.
water	68:12	0:0	4	i_bmask
op	68:20	0:0	4	=
water	68:22	0:0	4	0
water	68:23	0:0	4	x7c00
water	68:28	0:0	4	;
break	69:8	69:13	4	
label	70:4	70:24	4	case VLC_CODEC_RGB16 :
water	71:8	0:0	4	fmt
op	71:11	0:0	4	.
water	71:12	0:0	4	i_rmask
op	71:20	0:0	4	=
water	71:22	0:0	4	0
water	71:23	0:0	4	x001f
water	71:28	0:0	4	;
water	72:8	0:0	4	fmt
op	72:11	0:0	4	.
water	72:12	0:0	4	i_gmask
op	72:20	0:0	4	=
water	72:22	0:0	4	0
water	72:23	0:0	4	x07e0
water	72:28	0:0	4	;
water	73:8	0:0	4	fmt
op	73:11	0:0	4	.
water	73:12	0:0	4	i_bmask
op	73:20	0:0	4	=
water	73:22	0:0	4	0
water	73:23	0:0	4	xf800
water	73:28	0:0	4	;
break	74:8	74:13	4	
label	75:4	75:24	4	case VLC_CODEC_RGB24 :
label	76:4	76:24	4	case VLC_CODEC_RGB32 :
water	77:8	0:0	4	fmt
op	77:11	0:0	4	.
water	77:12	0:0	4	i_rmask
op	77:20	0:0	4	=
water	77:22	0:0	4	0
water	77:23	0:0	4	xff0000
water	77:30	0:0	4	;
water	78:8	0:0	4	fmt
op	78:11	0:0	4	.
water	78:12	0:0	4	i_gmask
op	78:20	0:0	4	=
water	78:22	0:0	4	0
water	78:23	0:0	4	x00ff00
water	78:30	0:0	4	;
water	79:8	0:0	4	fmt
op	79:11	0:0	4	.
water	79:12	0:0	4	i_bmask
op	79:20	0:0	4	=
water	79:22	0:0	4	0
water	79:23	0:0	4	x0000ff
water	79:30	0:0	4	;
break	80:8	80:13	4	
label	81:4	81:11	4	default :
water	82:8	0:0	4	fmt
op	82:11	0:0	4	.
water	82:12	0:0	4	i_rmask
op	82:20	0:0	4	=
water	82:22	0:0	4	0
water	82:23	0:0	4	;
water	83:8	0:0	4	fmt
op	83:11	0:0	4	.
water	83:12	0:0	4	i_gmask
op	83:20	0:0	4	=
water	83:22	0:0	4	0
water	83:23	0:0	4	;
water	84:8	0:0	4	fmt
op	84:11	0:0	4	.
water	84:12	0:0	4	i_bmask
op	84:20	0:0	4	=
water	84:22	0:0	4	0
water	84:23	0:0	4	;
break	85:8	85:13	4	
water	86:4	0:0	4	}
decl	88:4	88:39	2	vout_display_info_t	info
op	88:29	0:0	2	=
water	88:31	0:0	2	vd
op	88:33	0:0	2	->
water	88:35	0:0	2	info
water	89:4	0:0	2	info
op	89:8	0:0	2	.
water	89:9	0:0	2	has_hide_mouse
op	89:24	0:0	2	=
water	89:26	0:0	2	true
water	89:30	0:0	2	;
water	91:4	0:0	2	vd
op	91:6	0:0	2	->
water	91:8	0:0	2	sys
op	91:16	0:0	2	=
water	91:18	0:0	2	sys
water	91:21	0:0	2	;
water	92:4	0:0	2	vd
op	92:6	0:0	2	->
water	92:8	0:0	2	fmt
op	92:16	0:0	2	=
water	92:18	0:0	2	fmt
water	92:21	0:0	2	;
water	93:4	0:0	2	vd
op	93:6	0:0	2	->
water	93:8	0:0	2	info
op	93:16	0:0	2	=
water	93:18	0:0	2	info
water	93:22	0:0	2	;
water	94:4	0:0	2	vd
op	94:6	0:0	2	->
water	94:8	0:0	2	pool
op	94:16	0:0	2	=
water	94:18	0:0	2	Pool
water	94:22	0:0	2	;
water	95:4	0:0	2	vd
op	95:6	0:0	2	->
water	95:8	0:0	2	prepare
op	95:16	0:0	2	=
water	95:18	0:0	2	NULL
water	95:22	0:0	2	;
water	96:4	0:0	2	vd
op	96:6	0:0	2	->
water	96:8	0:0	2	display
op	96:16	0:0	2	=
water	96:18	0:0	2	Display
water	96:25	0:0	2	;
water	97:4	0:0	2	vd
op	97:6	0:0	2	->
water	97:8	0:0	2	control
op	97:16	0:0	2	=
water	97:18	0:0	2	Control
water	97:25	0:0	2	;
water	98:4	0:0	2	vd
op	98:6	0:0	2	->
water	98:8	0:0	2	manage
op	98:16	0:0	2	=
water	98:18	0:0	2	NULL
water	98:22	0:0	2	;
call	100:4	100:46	2	vout_display_SendEventFullscreen
arg	100:37	100:39	3	vd
water	100:37	0:0	4	vd
arg	100:41	100:46	3	false
water	100:41	0:0	4	false
water	100:47	0:0	2	;
call	101:4	101:74	2	vout_display_SendEventDisplaySize
arg	101:38	101:40	3	vd
water	101:38	0:0	4	vd
arg	101:42	101:53	3	fmt.i_width
water	101:42	0:0	4	fmt
op	101:45	0:0	4	.
water	101:46	0:0	4	i_width
arg	101:55	101:67	3	fmt.i_height
water	101:55	0:0	4	fmt
op	101:58	0:0	4	.
water	101:59	0:0	4	i_height
arg	101:69	101:74	3	false
water	101:69	0:0	4	false
water	101:75	0:0	2	;
return	102:4	102:22	2	VLC_SUCCESS
water	102:11	0:0	3	VLC_SUCCESS

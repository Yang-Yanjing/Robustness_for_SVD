func	2:0	57:0	0	static int	SetTime
params	2:18	0:0	1	
param	2:20	2:36	2	demux_t *	p_demux
param	2:38	2:53	2	int64_t	i_time
stmnts	0:0	56:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:44	2	const int	i_mpls
op	5:21	0:0	2	=
water	5:23	0:0	2	p_demux
op	5:30	0:0	2	->
water	5:32	0:0	2	info
op	5:36	0:0	2	.
water	5:37	0:0	2	i_title
decl	6:4	6:58	2	const input_title_t	*p_title
op	6:33	0:0	2	=
water	6:35	0:0	2	p_sys
op	6:40	0:0	2	->
water	6:42	0:0	2	pp_title
op	6:50	0:0	2	[
water	6:51	0:0	2	i_mpls
op	6:57	0:0	2	]
decl	7:4	7:52	2	const bd_mpls_t	*p_mpls
op	7:28	0:0	2	=
water	7:30	0:0	2	p_sys
op	7:35	0:0	2	->
water	7:37	0:0	2	pp_mpls
op	7:44	0:0	2	[
water	7:45	0:0	2	i_mpls
op	7:51	0:0	2	]
decl	9:4	9:14	2	int	i_item
decl	10:4	10:32	2	int64_t	i_play_item_time
op	10:29	0:0	2	=
water	10:31	0:0	2	0
for	11:4	18:4	2	(i_item = 0 ;i_item < p_mpls -> i_play_item;i_item ++)
forinit	11:9	11:19	3	i_item = 0 ;
water	11:9	0:0	4	i_item
op	11:16	0:0	4	=
water	11:18	0:0	4	0
water	11:19	0:0	4	;
cond	11:21	11:38	3	i_item < p_mpls -> i_play_item
water	11:21	0:0	4	i_item
op	11:28	0:0	4	<
water	11:30	0:0	4	p_mpls
op	11:36	0:0	4	->
water	11:38	0:0	4	i_play_item
forexpr	11:51	11:57	3	i_item ++
water	11:51	0:0	4	i_item
op	11:57	0:0	4	++
stmts	12:4	18:4	3	
water	12:4	0:0	4	{
decl	13:8	13:72	4	const bd_mpls_play_item_t	*p_item
op	13:42	0:0	4	=
op	13:44	0:0	4	&
water	13:45	0:0	4	p_mpls
op	13:51	0:0	4	->
water	13:53	0:0	4	p_play_item
op	13:64	0:0	4	[
water	13:65	0:0	4	i_item
op	13:71	0:0	4	]
decl	14:8	14:101	4	const int64_t	i_duration
op	14:33	0:0	4	=
water	14:35	0:0	4	(
water	14:37	0:0	4	p_item
op	14:43	0:0	4	->
water	14:45	0:0	4	i_out_time
op	14:56	0:0	4	-
water	14:58	0:0	4	p_item
op	14:64	0:0	4	->
water	14:66	0:0	4	i_in_time
water	14:76	0:0	4	)
op	14:78	0:0	4	*
water	14:80	0:0	4	CLOCK_FREQ
op	14:91	0:0	4	/
water	14:93	0:0	4	BD_45KHZ
if	15:8	16:17	4	(i_time >= i_play_item_time && i_time < i_play_item_time + i_duration)
cond	15:12	15:70	5	i_time >= i_play_item_time && i_time < i_play_item_time + i_duration
water	15:12	0:0	6	i_time
op	15:19	0:0	6	>=
water	15:22	0:0	6	i_play_item_time
op	15:39	0:0	6	&&
water	15:42	0:0	6	i_time
op	15:49	0:0	6	<
water	15:51	0:0	6	i_play_item_time
op	15:68	0:0	6	+
water	15:70	0:0	6	i_duration
stmts	16:12	16:17	5	
break	16:12	16:17	6	
water	17:8	0:0	4	i_play_item_time
op	17:25	0:0	4	+=
water	17:28	0:0	4	i_duration
water	17:38	0:0	4	;
water	18:4	0:0	4	}
if	19:4	20:27	2	(i_item >= p_mpls -> i_play_item)
cond	19:8	19:26	3	i_item >= p_mpls -> i_play_item
water	19:8	0:0	4	i_item
op	19:15	0:0	4	>=
water	19:18	0:0	4	p_mpls
op	19:24	0:0	4	->
water	19:26	0:0	4	i_play_item
stmts	20:8	20:27	3	
return	20:8	20:27	4	VLC_EGENERIC
water	20:15	0:0	5	VLC_EGENERIC
if	21:4	22:27	2	(SetPlayItem (p_demux ,i_mpls ,i_item ))
cond	21:8	21:45	3	SetPlayItem (p_demux ,i_mpls ,i_item )
call	21:8	21:45	4	SetPlayItem
arg	21:21	21:28	5	p_demux
water	21:21	0:0	6	p_demux
arg	21:30	21:36	5	i_mpls
water	21:30	0:0	6	i_mpls
arg	21:38	21:45	5	i_item
water	21:38	0:0	6	i_item
stmts	22:8	22:27	3	
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
if	24:4	25:19	2	(p_sys -> p_clpi -> i_ep_map <= 0)
cond	24:8	24:35	3	p_sys -> p_clpi -> i_ep_map <= 0
water	24:8	0:0	4	p_sys
op	24:13	0:0	4	->
water	24:15	0:0	4	p_clpi
op	24:21	0:0	4	->
water	24:23	0:0	4	i_ep_map
op	24:32	0:0	4	<=
water	24:35	0:0	4	0
stmts	25:8	25:19	3	
goto	25:8	25:19	4	update
water	25:13	0:0	5	update
decl	26:4	26:66	2	const bd_clpi_ep_map_t	*p_ep_map
op	26:37	0:0	2	=
op	26:39	0:0	2	&
water	26:40	0:0	2	p_sys
op	26:45	0:0	2	->
water	26:47	0:0	2	p_clpi
op	26:53	0:0	2	->
water	26:55	0:0	2	p_ep_map
op	26:63	0:0	2	[
water	26:64	0:0	2	0
op	26:65	0:0	2	]
if	27:4	28:19	2	(p_ep_map -> i_ep <= 0)
cond	27:8	27:26	3	p_ep_map -> i_ep <= 0
water	27:8	0:0	4	p_ep_map
op	27:16	0:0	4	->
water	27:18	0:0	4	i_ep
op	27:23	0:0	4	<=
water	27:26	0:0	4	0
stmts	28:8	28:19	3	
goto	28:8	28:19	4	update
water	28:13	0:0	5	update
decl	29:4	29:36	2	int64_t	i_next_display_date
op	29:32	0:0	2	=
op	29:34	0:0	2	-
water	29:35	0:0	2	1
for	30:4	41:4	2	(;p_sys -> i_clpi_ep + 1 < p_ep_map -> i_ep;p_sys -> i_clpi_ep ++)
forinit	30:9	30:9	3	;
water	30:9	0:0	4	;
cond	30:11	30:42	3	p_sys -> i_clpi_ep + 1 < p_ep_map -> i_ep
water	30:11	0:0	4	p_sys
op	30:16	0:0	4	->
water	30:18	0:0	4	i_clpi_ep
op	30:27	0:0	4	+
water	30:28	0:0	4	1
op	30:30	0:0	4	<
water	30:32	0:0	4	p_ep_map
op	30:40	0:0	4	->
water	30:42	0:0	4	i_ep
forexpr	30:48	30:64	3	p_sys -> i_clpi_ep ++
water	30:48	0:0	4	p_sys
op	30:53	0:0	4	->
water	30:55	0:0	4	i_clpi_ep
op	30:64	0:0	4	++
stmts	31:4	41:4	3	
water	31:4	0:0	4	{
decl	32:8	32:72	4	const bd_clpi_ep_t	*p_next
op	32:35	0:0	4	=
op	32:37	0:0	4	&
water	32:38	0:0	4	p_ep_map
op	32:46	0:0	4	->
water	32:48	0:0	4	p_ep
op	32:52	0:0	4	[
water	32:53	0:0	4	p_sys
op	32:58	0:0	4	->
water	32:60	0:0	4	i_clpi_ep
op	32:69	0:0	4	+
water	32:70	0:0	4	1
op	32:71	0:0	4	]
decl	33:8	33:144	4	const int64_t	i_next_time
op	33:34	0:0	4	=
water	33:36	0:0	4	i_play_item_time
op	33:53	0:0	4	+
water	33:55	0:0	4	(
water	33:57	0:0	4	(
water	33:59	0:0	4	p_next
op	33:65	0:0	4	->
water	33:67	0:0	4	i_pts
op	33:73	0:0	4	/
water	33:75	0:0	4	2
op	33:77	0:0	4	-
water	33:79	0:0	4	p_mpls
op	33:85	0:0	4	->
water	33:87	0:0	4	p_play_item
op	33:98	0:0	4	[
water	33:99	0:0	4	i_item
op	33:105	0:0	4	]
op	33:106	0:0	4	.
water	33:107	0:0	4	i_in_time
water	33:117	0:0	4	)
op	33:119	0:0	4	*
water	33:121	0:0	4	CLOCK_FREQ
op	33:132	0:0	4	/
water	33:134	0:0	4	BD_45KHZ
water	33:143	0:0	4	)
if	34:8	40:8	4	(i_next_time > i_time)
cond	34:12	34:26	5	i_next_time > i_time
water	34:12	0:0	6	i_next_time
op	34:24	0:0	6	>
water	34:26	0:0	6	i_time
stmts	35:8	40:8	5	
water	35:8	0:0	6	{
decl	36:12	36:72	6	const bd_clpi_ep_t	*p_ep
op	36:37	0:0	6	=
op	36:39	0:0	6	&
water	36:40	0:0	6	p_ep_map
op	36:48	0:0	6	->
water	36:50	0:0	6	p_ep
op	36:54	0:0	6	[
water	36:55	0:0	6	p_sys
op	36:60	0:0	6	->
water	36:62	0:0	6	i_clpi_ep
op	36:71	0:0	6	]
decl	37:12	37:144	6	const int64_t	i_ep_time
op	37:36	0:0	6	=
water	37:38	0:0	6	i_play_item_time
op	37:55	0:0	6	+
water	37:57	0:0	6	(
water	37:59	0:0	6	(
water	37:61	0:0	6	p_ep
op	37:65	0:0	6	->
water	37:67	0:0	6	i_pts
op	37:73	0:0	6	/
water	37:75	0:0	6	2
op	37:77	0:0	6	-
water	37:79	0:0	6	p_mpls
op	37:85	0:0	6	->
water	37:87	0:0	6	p_play_item
op	37:98	0:0	6	[
water	37:99	0:0	6	i_item
op	37:105	0:0	6	]
op	37:106	0:0	6	.
water	37:107	0:0	6	i_in_time
water	37:117	0:0	6	)
op	37:119	0:0	6	*
water	37:121	0:0	6	CLOCK_FREQ
op	37:132	0:0	6	/
water	37:134	0:0	6	BD_45KHZ
water	37:143	0:0	6	)
water	38:12	0:0	6	i_next_display_date
op	38:32	0:0	6	=
water	38:34	0:0	6	p_ep
op	38:38	0:0	6	->
water	38:40	0:0	6	i_pts
op	38:46	0:0	6	*
water	38:48	0:0	6	CLOCK_FREQ
op	38:59	0:0	6	/
water	38:61	0:0	6	90000
op	38:67	0:0	6	+
water	38:69	0:0	6	(
water	38:71	0:0	6	i_time
op	38:78	0:0	6	-
water	38:80	0:0	6	i_ep_time
water	38:90	0:0	6	)
water	38:91	0:0	6	;
break	39:12	39:17	6	
water	40:8	0:0	6	}
water	41:4	0:0	4	}
decl	42:4	42:64	2	const bd_clpi_ep_t	*p_ep
op	42:29	0:0	2	=
op	42:31	0:0	2	&
water	42:32	0:0	2	p_ep_map
op	42:40	0:0	2	->
water	42:42	0:0	2	p_ep
op	42:46	0:0	2	[
water	42:47	0:0	2	p_sys
op	42:52	0:0	2	->
water	42:54	0:0	2	i_clpi_ep
op	42:63	0:0	2	]
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	i_packet_start
op	43:26	0:0	2	=
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	i_packet
op	44:26	0:0	2	=
water	44:28	0:0	2	p_ep
op	44:32	0:0	2	->
water	44:34	0:0	2	i_packet
water	44:42	0:0	2	;
if	45:4	46:89	2	(i_next_display_date >= 0)
cond	45:8	45:31	3	i_next_display_date >= 0
water	45:8	0:0	4	i_next_display_date
op	45:28	0:0	4	>=
water	45:31	0:0	4	0
stmts	46:8	46:89	3	
call	46:8	46:88	4	es_out_Control
arg	46:24	46:36	5	p_demux->out
water	46:24	0:0	6	p_demux
op	46:31	0:0	6	->
water	46:33	0:0	6	out
arg	46:38	46:66	5	ES_OUT_SET_NEXT_DISPLAY_TIME
water	46:38	0:0	6	ES_OUT_SET_NEXT_DISPLAY_TIME
arg	46:68	46:88	5	i_next_display_date
water	46:68	0:0	6	i_next_display_date
water	46:89	0:0	4	;
label	47:0	47:6	2	update :
for	49:4	54:4	2	(p_demux -> info . i_seekpoint = 0 ;p_demux -> info . i_seekpoint + 1 < p_title -> i_seekpoint;p_demux -> info . i_seekpoint ++)
forinit	49:9	49:38	3	p_demux -> info . i_seekpoint = 0 ;
water	49:9	0:0	4	p_demux
op	49:16	0:0	4	->
water	49:18	0:0	4	info
op	49:22	0:0	4	.
water	49:23	0:0	4	i_seekpoint
op	49:35	0:0	4	=
water	49:37	0:0	4	0
water	49:38	0:0	4	;
cond	49:40	49:79	3	p_demux -> info . i_seekpoint + 1 < p_title -> i_seekpoint
water	49:40	0:0	4	p_demux
op	49:47	0:0	4	->
water	49:49	0:0	4	info
op	49:53	0:0	4	.
water	49:54	0:0	4	i_seekpoint
op	49:65	0:0	4	+
water	49:66	0:0	4	1
op	49:68	0:0	4	<
water	49:70	0:0	4	p_title
op	49:77	0:0	4	->
water	49:79	0:0	4	i_seekpoint
forexpr	49:92	49:117	3	p_demux -> info . i_seekpoint ++
water	49:92	0:0	4	p_demux
op	49:99	0:0	4	->
water	49:101	0:0	4	info
op	49:105	0:0	4	.
water	49:106	0:0	4	i_seekpoint
op	49:117	0:0	4	++
stmts	50:4	54:4	3	
water	50:4	0:0	4	{
decl	51:8	51:88	4	const seekpoint_t	*p_seekpoint
op	51:39	0:0	4	=
water	51:41	0:0	4	p_title
op	51:48	0:0	4	->
water	51:50	0:0	4	seekpoint
op	51:59	0:0	4	[
water	51:60	0:0	4	p_demux
op	51:67	0:0	4	->
water	51:69	0:0	4	info
op	51:73	0:0	4	.
water	51:74	0:0	4	i_seekpoint
op	51:85	0:0	4	+
water	51:86	0:0	4	1
op	51:87	0:0	4	]
if	52:8	53:17	4	(p_seekpoint -> i_time_offset > i_time)
cond	52:12	52:42	5	p_seekpoint -> i_time_offset > i_time
water	52:12	0:0	6	p_seekpoint
op	52:23	0:0	6	->
water	52:25	0:0	6	i_time_offset
op	52:39	0:0	6	>
water	52:42	0:0	6	i_time
stmts	53:12	53:17	5	
break	53:12	53:17	6	
water	54:4	0:0	4	}
water	55:4	0:0	2	p_demux
op	55:11	0:0	2	->
water	55:13	0:0	2	info
op	55:17	0:0	2	.
water	55:18	0:0	2	i_update
op	55:27	0:0	2	|=
water	55:30	0:0	2	INPUT_UPDATE_SEEKPOINT
water	55:52	0:0	2	;
return	56:4	56:22	2	VLC_SUCCESS
water	56:11	0:0	3	VLC_SUCCESS

func	2:0	106:0	0	static picture_t *	Filter
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:63	2	picture_t *	p_pic
stmnts	0:0	105:48	1	
decl	4:4	4:23	2	picture_t	*p_outpic
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
if	6:4	6:28	2	(! p_pic)
cond	6:8	6:9	3	! p_pic
op	6:8	0:0	4	!
water	6:9	0:0	4	p_pic
stmts	6:17	6:28	3	
return	6:17	6:28	4	NULL
water	6:24	0:0	5	NULL
water	7:4	0:0	2	p_outpic
op	7:13	0:0	2	=
call	7:15	7:43	2	filter_NewPicture
arg	7:34	7:43	3	p_filter
water	7:34	0:0	4	p_filter
water	7:44	0:0	2	;
if	8:4	12:4	2	(! p_outpic)
cond	8:8	8:9	3	! p_outpic
op	8:8	0:0	4	!
water	8:9	0:0	4	p_outpic
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
call	10:8	10:31	4	picture_Release
arg	10:25	10:31	5	p_pic
water	10:25	0:0	6	p_pic
water	10:32	0:0	4	;
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
water	12:4	0:0	4	}
if	13:4	17:4	2	(p_sys -> p_motion != NULL)
cond	13:8	13:27	3	p_sys -> p_motion != NULL
water	13:8	0:0	4	p_sys
op	13:13	0:0	4	->
water	13:15	0:0	4	p_motion
op	13:24	0:0	4	!=
water	13:27	0:0	4	NULL
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
decl	15:8	15:57	4	int	i_angle
op	15:20	0:0	4	=
call	15:22	15:56	5	motion_get_angle
arg	15:40	15:56	6	p_sys->p_motion
water	15:40	0:0	7	p_sys
op	15:45	0:0	7	->
water	15:47	0:0	7	p_motion
call	16:8	16:43	4	store_trigo
arg	16:21	16:26	5	p_sys
water	16:21	0:0	6	p_sys
arg	16:28	16:43	5	i_angle/20.f
water	16:28	0:0	6	i_angle
op	16:36	0:0	6	/
water	16:38	0:0	6	20
op	16:40	0:0	6	.
water	16:41	0:0	6	f
water	16:44	0:0	4	;
water	17:4	0:0	4	}
decl	18:4	18:20	2	int	i_sin
water	18:13	0:0	2	,
decl	18:4	18:20	2	int	i_cos
call	19:4	19:39	2	fetch_trigo
arg	19:17	19:22	3	p_sys
water	19:17	0:0	4	p_sys
arg	19:24	19:30	3	&i_sin
op	19:24	0:0	4	&
water	19:25	0:0	4	i_sin
arg	19:32	19:39	3	&i_cos
op	19:32	0:0	4	&
water	19:33	0:0	4	i_cos
water	19:40	0:0	2	;
for	20:4	104:4	2	( int i_plane = 0 ;i_plane < p_pic -> i_planes;i_plane ++)
forinit	0:0	20:25	3	 int i_plane = 0 ;
decl	20:9	20:25	4	int	i_plane
op	20:21	0:0	4	=
water	20:23	0:0	4	0
cond	20:27	20:44	3	i_plane < p_pic -> i_planes
water	20:27	0:0	4	i_plane
op	20:35	0:0	4	<
water	20:37	0:0	4	p_pic
op	20:42	0:0	4	->
water	20:44	0:0	4	i_planes
forexpr	20:55	20:62	3	i_plane ++
water	20:55	0:0	4	i_plane
op	20:62	0:0	4	++
stmts	21:4	104:4	3	
water	21:4	0:0	4	{
decl	22:8	22:44	4	plane_t	*p_srcp
op	22:24	0:0	4	=
op	22:26	0:0	4	&
water	22:27	0:0	4	p_pic
op	22:32	0:0	4	->
water	22:34	0:0	4	p
op	22:35	0:0	4	[
water	22:36	0:0	4	i_plane
op	22:43	0:0	4	]
decl	23:8	23:47	4	plane_t	*p_dstp
op	23:24	0:0	4	=
op	23:26	0:0	4	&
water	23:27	0:0	4	p_outpic
op	23:35	0:0	4	->
water	23:37	0:0	4	p
op	23:38	0:0	4	[
water	23:39	0:0	4	i_plane
op	23:46	0:0	4	]
decl	24:8	24:59	4	const int	i_visible_lines
op	24:34	0:0	4	=
water	24:36	0:0	4	p_srcp
op	24:42	0:0	4	->
water	24:44	0:0	4	i_visible_lines
decl	25:8	25:59	4	const int	i_visible_pitch
op	25:34	0:0	4	=
water	25:36	0:0	4	p_srcp
op	25:42	0:0	4	->
water	25:44	0:0	4	i_visible_pitch
decl	26:8	26:153	4	const int	i_aspect
op	26:27	0:0	4	=
call	26:29	26:152	5	__MAX
arg	26:36	26:37	6	1
water	26:36	0:0	7	1
arg	26:39	26:152	6	(i_visible_lines*p_pic->p[Y_PLANE].i_visible_pitch)/(p_pic->p[Y_PLANE].i_visible_lines*i_visible_pitch)
water	26:39	0:0	7	(
water	26:41	0:0	7	i_visible_lines
op	26:57	0:0	7	*
water	26:59	0:0	7	p_pic
op	26:64	0:0	7	->
water	26:66	0:0	7	p
op	26:67	0:0	7	[
water	26:68	0:0	7	Y_PLANE
op	26:75	0:0	7	]
op	26:76	0:0	7	.
water	26:77	0:0	7	i_visible_pitch
water	26:93	0:0	7	)
op	26:95	0:0	7	/
water	26:97	0:0	7	(
water	26:99	0:0	7	p_pic
op	26:104	0:0	7	->
water	26:106	0:0	7	p
op	26:107	0:0	7	[
water	26:108	0:0	7	Y_PLANE
op	26:115	0:0	7	]
op	26:116	0:0	7	.
water	26:117	0:0	7	i_visible_lines
op	26:133	0:0	7	*
water	26:135	0:0	7	i_visible_pitch
water	26:151	0:0	7	)
decl	28:8	28:52	4	const int	i_line_center
op	28:32	0:0	4	=
water	28:34	0:0	4	i_visible_lines
op	28:49	0:0	4	>>
water	28:51	0:0	4	1
decl	29:8	29:52	4	const int	i_col_center
op	29:32	0:0	4	=
water	29:34	0:0	4	i_visible_pitch
op	29:49	0:0	4	>>
water	29:51	0:0	4	1
decl	30:8	30:72	4	const uint8_t	black_pixel
op	30:34	0:0	4	=
water	30:36	0:0	4	(
water	30:38	0:0	4	i_plane
op	30:46	0:0	4	==
water	30:49	0:0	4	Y_PLANE
water	30:57	0:0	4	)
water	30:59	0:0	4	?
water	30:61	0:0	4	0
water	30:62	0:0	4	x00
water	30:66	0:0	4	:
water	30:68	0:0	4	0
water	30:69	0:0	4	x80
decl	31:8	31:72	4	const int	i_line_next
op	31:30	0:0	4	=
water	31:33	0:0	4	i_cos
op	31:39	0:0	4	/
water	31:41	0:0	4	i_aspect
op	31:50	0:0	4	-
water	31:51	0:0	4	i_sin
op	31:56	0:0	4	*
water	31:57	0:0	4	i_visible_pitch
decl	32:8	32:72	4	const int	i_col_next
op	32:30	0:0	4	=
op	32:32	0:0	4	-
water	32:33	0:0	4	i_sin
op	32:39	0:0	4	/
water	32:41	0:0	4	i_aspect
op	32:50	0:0	4	-
water	32:51	0:0	4	i_cos
op	32:56	0:0	4	*
water	32:57	0:0	4	i_visible_pitch
decl	33:8	34:63	4	int	i_line_orig0
op	33:25	0:0	4	=
water	33:27	0:0	4	(
op	33:29	0:0	4	-
water	33:31	0:0	4	i_cos
op	33:37	0:0	4	*
water	33:39	0:0	4	i_line_center
op	33:53	0:0	4	/
water	33:55	0:0	4	i_aspect
op	34:29	0:0	4	-
water	34:31	0:0	4	i_sin
op	34:37	0:0	4	*
water	34:39	0:0	4	i_col_center
op	34:52	0:0	4	+
water	34:54	0:0	4	(
water	34:55	0:0	4	1
op	34:56	0:0	4	<<
water	34:58	0:0	4	11
water	34:60	0:0	4	)
water	34:62	0:0	4	)
decl	35:8	36:59	4	int	i_col_orig0
op	35:24	0:0	4	=
water	35:29	0:0	4	i_sin
op	35:35	0:0	4	*
water	35:37	0:0	4	i_line_center
op	35:51	0:0	4	/
water	35:53	0:0	4	i_aspect
op	36:27	0:0	4	-
water	36:29	0:0	4	i_cos
op	36:35	0:0	4	*
water	36:37	0:0	4	i_col_center
op	36:50	0:0	4	+
water	36:52	0:0	4	(
water	36:53	0:0	4	1
op	36:54	0:0	4	<<
water	36:56	0:0	4	11
water	36:58	0:0	4	)
for	37:8	103:8	4	( int y = 0 ;y < i_visible_lines;y ++)
forinit	0:0	37:22	5	 int y = 0 ;
decl	37:13	37:22	6	int	y
op	37:19	0:0	6	=
water	37:21	0:0	6	0
cond	37:24	37:28	5	y < i_visible_lines
water	37:24	0:0	6	y
op	37:26	0:0	6	<
water	37:28	0:0	6	i_visible_lines
forexpr	37:45	37:46	5	y ++
water	37:45	0:0	6	y
op	37:46	0:0	6	++
stmts	38:8	103:8	5	
water	38:8	0:0	6	{
decl	39:12	39:67	6	uint8_t	*p_out
op	39:27	0:0	6	=
op	39:29	0:0	6	&
water	39:30	0:0	6	p_dstp
op	39:36	0:0	6	->
water	39:38	0:0	6	p_pixels
op	39:46	0:0	6	[
water	39:47	0:0	6	y
op	39:49	0:0	6	*
water	39:51	0:0	6	p_dstp
op	39:57	0:0	6	->
water	39:59	0:0	6	i_pitch
op	39:66	0:0	6	]
for	40:12	100:12	6	( int x = 0 ;x < i_visible_pitch;x ++ , p_out ++)
forinit	0:0	40:26	7	 int x = 0 ;
decl	40:17	40:26	8	int	x
op	40:23	0:0	8	=
water	40:25	0:0	8	0
cond	40:28	40:32	7	x < i_visible_pitch
water	40:28	0:0	8	x
op	40:30	0:0	8	<
water	40:32	0:0	8	i_visible_pitch
forexpr	40:49	40:59	7	x ++ , p_out ++
water	40:49	0:0	8	x
op	40:50	0:0	8	++
water	40:52	0:0	8	,
water	40:54	0:0	8	p_out
op	40:59	0:0	8	++
stmts	41:12	100:12	7	
water	41:12	0:0	8	{
decl	42:16	42:83	8	const int	i_line_orig
op	42:38	0:0	8	=
water	42:40	0:0	8	(
water	42:41	0:0	8	i_line_orig0
op	42:53	0:0	8	>>
water	42:55	0:0	8	12
water	42:57	0:0	8	)
op	42:58	0:0	8	*
water	42:59	0:0	8	i_aspect
op	42:68	0:0	8	+
water	42:70	0:0	8	i_line_center
decl	43:16	43:73	8	const int	i_col_orig
op	43:38	0:0	8	=
water	43:40	0:0	8	(
water	43:41	0:0	8	i_col_orig0
op	43:52	0:0	8	>>
water	43:54	0:0	8	12
water	43:56	0:0	8	)
op	43:59	0:0	8	+
water	43:61	0:0	8	i_col_center
decl	44:16	44:108	8	const uint8_t	*p_orig_offset
op	44:45	0:0	8	=
op	44:47	0:0	8	&
water	44:48	0:0	8	p_srcp
op	44:54	0:0	8	->
water	44:56	0:0	8	p_pixels
op	44:64	0:0	8	[
water	44:65	0:0	8	i_line_orig
op	44:77	0:0	8	*
water	44:79	0:0	8	p_srcp
op	44:85	0:0	8	->
water	44:87	0:0	8	i_pitch
op	44:95	0:0	8	+
water	44:97	0:0	8	i_col_orig
op	44:107	0:0	8	]
decl	45:16	45:70	8	const uint8_t	i_line_percent
op	45:45	0:0	8	=
water	45:47	0:0	8	(
water	45:48	0:0	8	i_line_orig0
op	45:60	0:0	8	>>
water	45:62	0:0	8	4
water	45:63	0:0	8	)
op	45:65	0:0	8	&
water	45:67	0:0	8	255
decl	46:16	46:70	8	const uint8_t	i_col_percent
op	46:45	0:0	8	=
water	46:47	0:0	8	(
water	46:48	0:0	8	i_col_orig0
op	46:60	0:0	8	>>
water	46:62	0:0	8	4
water	46:63	0:0	8	)
op	46:65	0:0	8	&
water	46:67	0:0	8	255
if	47:16	93:16	8	(- 1 <= i_line_orig && i_line_orig < i_visible_lines && - 1 <= i_col_orig && i_col_orig < i_visible_pitch)
cond	47:23	48:58	9	- 1 <= i_line_orig && i_line_orig < i_visible_lines && - 1 <= i_col_orig && i_col_orig < i_visible_pitch
op	47:23	0:0	10	-
water	47:24	0:0	10	1
op	47:26	0:0	10	<=
water	47:29	0:0	10	i_line_orig
op	47:41	0:0	10	&&
water	47:44	0:0	10	i_line_orig
op	47:56	0:0	10	<
water	47:58	0:0	10	i_visible_lines
op	48:20	0:0	10	&&
op	48:23	0:0	10	-
water	48:24	0:0	10	1
op	48:26	0:0	10	<=
water	48:29	0:0	10	i_col_orig
op	48:41	0:0	10	&&
water	48:44	0:0	10	i_col_orig
op	48:56	0:0	10	<
water	48:58	0:0	10	i_visible_pitch
stmts	49:16	93:16	9	
water	49:16	0:0	10	{
if	53:20	84:20	10	(( i_col_orig > i_visible_pitch / 2 ))
cond	53:24	53:57	11	( i_col_orig > i_visible_pitch / 2 )
water	53:24	0:0	12	(
water	53:26	0:0	12	i_col_orig
op	53:37	0:0	12	>
water	53:39	0:0	12	i_visible_pitch
op	53:54	0:0	12	/
water	53:55	0:0	12	2
water	53:57	0:0	12	)
stmts	55:20	84:20	11	
water	55:20	0:0	12	{
decl	56:24	56:54	12	uint8_t	i_curpix
op	56:41	0:0	12	=
water	56:43	0:0	12	black_pixel
decl	57:24	57:54	12	uint8_t	i_colpix
op	57:41	0:0	12	=
water	57:43	0:0	12	black_pixel
decl	58:24	58:54	12	uint8_t	i_linpix
op	58:41	0:0	12	=
water	58:43	0:0	12	black_pixel
decl	59:24	59:54	12	uint8_t	i_nexpix
op	59:41	0:0	12	=
water	59:43	0:0	12	black_pixel
if	60:24	61:53	12	(( 0 <= i_line_orig ) && ( 0 <= i_col_orig ))
cond	60:28	60:70	13	( 0 <= i_line_orig ) && ( 0 <= i_col_orig )
water	60:28	0:0	14	(
water	60:30	0:0	14	0
op	60:32	0:0	14	<=
water	60:35	0:0	14	i_line_orig
water	60:47	0:0	14	)
op	60:49	0:0	14	&&
water	60:52	0:0	14	(
water	60:54	0:0	14	0
op	60:56	0:0	14	<=
water	60:59	0:0	14	i_col_orig
water	60:70	0:0	14	)
stmts	61:28	61:53	13	
water	61:28	0:0	14	i_curpix
op	61:37	0:0	14	=
op	61:39	0:0	14	*
water	61:40	0:0	14	p_orig_offset
water	61:53	0:0	14	;
water	62:24	0:0	12	p_orig_offset
op	62:37	0:0	12	++
water	62:39	0:0	12	;
if	63:24	65:53	12	(( i_col_orig < i_visible_pitch - 1 ) && ( i_line_orig >= 0 ))
cond	63:29	64:51	13	( i_col_orig < i_visible_pitch - 1 ) && ( i_line_orig >= 0 )
water	63:29	0:0	14	(
water	63:31	0:0	14	i_col_orig
op	63:42	0:0	14	<
water	63:44	0:0	14	i_visible_pitch
op	63:60	0:0	14	-
water	63:62	0:0	14	1
water	63:63	0:0	14	)
op	64:29	0:0	14	&&
water	64:32	0:0	14	(
water	64:34	0:0	14	i_line_orig
op	64:46	0:0	14	>=
water	64:49	0:0	14	0
water	64:51	0:0	14	)
stmts	65:28	65:53	13	
water	65:28	0:0	14	i_colpix
op	65:37	0:0	14	=
op	65:39	0:0	14	*
water	65:40	0:0	14	p_orig_offset
water	65:53	0:0	14	;
water	66:24	0:0	12	p_orig_offset
op	66:38	0:0	12	+=
water	66:41	0:0	12	p_srcp
op	66:47	0:0	12	->
water	66:49	0:0	12	i_pitch
water	66:56	0:0	12	;
if	67:24	69:53	12	(( i_line_orig < i_visible_lines - 1 ) && ( i_col_orig < i_visible_pitch - 1 ))
cond	67:28	68:66	13	( i_line_orig < i_visible_lines - 1 ) && ( i_col_orig < i_visible_pitch - 1 )
water	67:28	0:0	14	(
water	67:30	0:0	14	i_line_orig
op	67:42	0:0	14	<
water	67:44	0:0	14	i_visible_lines
op	67:60	0:0	14	-
water	67:62	0:0	14	1
water	67:63	0:0	14	)
op	68:28	0:0	14	&&
water	68:31	0:0	14	(
water	68:33	0:0	14	i_col_orig
op	68:45	0:0	14	<
water	68:47	0:0	14	i_visible_pitch
op	68:63	0:0	14	-
water	68:65	0:0	14	1
water	68:66	0:0	14	)
stmts	69:28	69:53	13	
water	69:28	0:0	14	i_nexpix
op	69:37	0:0	14	=
op	69:39	0:0	14	*
water	69:40	0:0	14	p_orig_offset
water	69:53	0:0	14	;
water	70:24	0:0	12	p_orig_offset
op	70:37	0:0	12	--
water	70:39	0:0	12	;
if	71:24	73:53	12	(( i_line_orig < i_visible_lines - 1 ) && ( i_col_orig >= 0 ))
cond	71:29	72:50	13	( i_line_orig < i_visible_lines - 1 ) && ( i_col_orig >= 0 )
water	71:29	0:0	14	(
water	71:31	0:0	14	i_line_orig
op	71:43	0:0	14	<
water	71:45	0:0	14	i_visible_lines
op	71:61	0:0	14	-
water	71:63	0:0	14	1
water	71:64	0:0	14	)
op	72:29	0:0	14	&&
water	72:32	0:0	14	(
water	72:34	0:0	14	i_col_orig
op	72:45	0:0	14	>=
water	72:48	0:0	14	0
water	72:50	0:0	14	)
stmts	73:28	73:53	13	
water	73:28	0:0	14	i_linpix
op	73:37	0:0	14	=
op	73:39	0:0	14	*
water	73:40	0:0	14	p_orig_offset
water	73:53	0:0	14	;
decl	74:24	74:45	12	unsigned int	temp
op	74:42	0:0	12	=
water	74:44	0:0	12	0
water	75:24	0:0	12	temp
op	75:28	0:0	12	+=
water	75:31	0:0	12	i_curpix
op	75:40	0:0	12	*
water	76:28	0:0	12	(
water	76:29	0:0	12	256
op	76:33	0:0	12	-
water	76:35	0:0	12	i_line_percent
water	76:49	0:0	12	)
op	76:51	0:0	12	*
water	76:53	0:0	12	(
water	76:55	0:0	12	256
op	76:59	0:0	12	-
water	76:61	0:0	12	i_col_percent
water	76:75	0:0	12	)
water	76:76	0:0	12	;
water	77:24	0:0	12	temp
op	77:28	0:0	12	+=
water	77:31	0:0	12	i_linpix
op	77:40	0:0	12	*
water	78:28	0:0	12	i_line_percent
op	78:43	0:0	12	*
water	78:45	0:0	12	(
water	78:46	0:0	12	256
op	78:50	0:0	12	-
water	78:52	0:0	12	i_col_percent
water	78:66	0:0	12	)
water	78:67	0:0	12	;
water	79:24	0:0	12	temp
op	79:28	0:0	12	+=
water	79:31	0:0	12	i_nexpix
op	79:40	0:0	12	*
water	80:28	0:0	12	(
water	80:30	0:0	12	i_col_percent
water	80:43	0:0	12	)
op	80:45	0:0	12	*
water	80:47	0:0	12	(
water	80:49	0:0	12	i_line_percent
water	80:63	0:0	12	)
water	80:64	0:0	12	;
water	81:24	0:0	12	temp
op	81:28	0:0	12	+=
water	81:31	0:0	12	i_colpix
op	81:40	0:0	12	*
water	82:28	0:0	12	i_col_percent
op	82:42	0:0	12	*
water	82:44	0:0	12	(
water	82:45	0:0	12	256
op	82:49	0:0	12	-
water	82:51	0:0	12	i_line_percent
water	82:66	0:0	12	)
water	82:67	0:0	12	;
op	83:24	0:0	12	*
water	83:25	0:0	12	p_out
op	83:31	0:0	12	=
water	83:33	0:0	12	temp
op	83:38	0:0	12	>>
water	83:41	0:0	12	16
water	83:43	0:0	12	;
water	84:20	0:0	12	}
else	86:20	88:20	10
stmts	86:25	88:20	11	
if	86:25	88:20	12	(i_col_orig == i_visible_pitch / 2)
cond	86:29	86:59	13	i_col_orig == i_visible_pitch / 2
water	86:29	0:0	14	i_col_orig
op	86:40	0:0	14	==
water	86:43	0:0	14	i_visible_pitch
op	86:58	0:0	14	/
water	86:59	0:0	14	2
stmts	87:20	88:20	13	
water	87:20	0:0	14	{
op	87:24	0:0	14	*
water	87:25	0:0	14	p_out
op	87:31	0:0	14	=
water	87:33	0:0	14	black_pixel
water	87:44	0:0	14	;
water	88:20	0:0	14	}
else	89:20	90:47	10
stmts	90:24	90:47	11	
op	90:24	0:0	12	*
water	90:25	0:0	12	p_out
op	90:31	0:0	12	=
op	90:33	0:0	12	*
water	90:34	0:0	12	p_orig_offset
water	90:47	0:0	12	;
water	93:16	0:0	10	}
else	94:16	97:16	8
stmts	95:16	97:16	9	
water	95:16	0:0	10	{
op	96:20	0:0	10	*
water	96:21	0:0	10	p_out
op	96:27	0:0	10	=
water	96:29	0:0	10	black_pixel
water	96:40	0:0	10	;
water	97:16	0:0	10	}
water	98:16	0:0	8	i_line_orig0
op	98:29	0:0	8	+=
water	98:32	0:0	8	i_sin
water	98:37	0:0	8	;
water	99:16	0:0	8	i_col_orig0
op	99:28	0:0	8	+=
water	99:31	0:0	8	i_cos
water	99:36	0:0	8	;
water	100:12	0:0	8	}
water	101:12	0:0	6	i_line_orig0
op	101:25	0:0	6	+=
water	101:28	0:0	6	i_line_next
water	101:39	0:0	6	;
water	102:12	0:0	6	i_col_orig0
op	102:24	0:0	6	+=
water	102:27	0:0	6	i_col_next
water	102:37	0:0	6	;
water	103:8	0:0	6	}
water	104:4	0:0	4	}
return	105:4	105:48	2	CopyInfoAndRelease(p_outpic,p_pic)
call	105:11	105:47	3	CopyInfoAndRelease
arg	105:31	105:39	4	p_outpic
water	105:31	0:0	5	p_outpic
arg	105:41	105:47	4	p_pic
water	105:41	0:0	5	p_pic

decl	2:7	3:88	0	void	AppendAttachment
water	2:28	0:0	0	(
water	2:30	0:0	0	int
op	2:34	0:0	0	*
water	2:35	0:0	0	pi_attachment
water	2:48	0:0	0	,
water	2:50	0:0	0	input_attachment_t
op	2:69	0:0	0	*
op	2:70	0:0	0	*
op	2:71	0:0	0	*
water	2:72	0:0	0	ppp_attachment
water	2:86	0:0	0	,
water	2:88	0:0	0	demux_t
op	2:96	0:0	0	*
op	2:97	0:0	0	*
op	2:98	0:0	0	*
water	2:99	0:0	0	ppp_attachment_demux
water	2:119	0:0	0	,
water	3:30	0:0	0	int
water	3:34	0:0	0	i_new
water	3:39	0:0	0	,
water	3:41	0:0	0	input_attachment_t
op	3:60	0:0	0	*
op	3:61	0:0	0	*
water	3:62	0:0	0	pp_new
water	3:68	0:0	0	,
water	3:70	0:0	0	demux_t
op	3:78	0:0	0	*
water	3:79	0:0	0	p_demux
water	3:87	0:0	0	)
enum	4:0	8:0	0	<anonymous_4:0>
water	5:4	0:0	1	SUB_NOFLAG
op	5:15	0:0	1	=
water	5:17	0:0	1	0
water	5:18	0:0	1	x00
water	5:21	0:0	1	,
water	6:4	0:0	1	SUB_FORCED
op	6:15	0:0	1	=
water	6:17	0:0	1	0
water	6:18	0:0	1	x01
water	6:21	0:0	1	,
water	7:4	0:0	1	SUB_CANFAIL
op	7:16	0:0	1	=
water	7:18	0:0	1	0
water	7:19	0:0	1	x02
water	7:22	0:0	1	,
func	10:0	31:0	0	static void	AppendAttachment
params	10:28	0:0	1	
param	10:30	10:48	2	int *	pi_attachment
param	10:50	10:86	2	input_attachment_t * * *	ppp_attachment
param	10:88	10:119	2	demux_t * * *	ppp_attachment_demux
param	11:30	11:39	2	int	i_new
param	11:41	11:68	2	input_attachment_t * *	pp_new
param	11:70	11:87	2	demux_t *	p_demux
stmnts	0:0	30:44	1	
decl	13:4	13:37	2	int	i_attachment
op	13:21	0:0	2	=
op	13:23	0:0	2	*
water	13:24	0:0	2	pi_attachment
decl	14:4	14:53	2	input_attachment_t	**attachment
op	14:36	0:0	2	=
op	14:38	0:0	2	*
water	14:39	0:0	2	ppp_attachment
decl	15:4	15:54	2	demux_t	**attachment_demux
op	15:31	0:0	2	=
op	15:33	0:0	2	*
water	15:34	0:0	2	ppp_attachment_demux
decl	16:4	16:9	2	int	i
water	17:4	0:0	2	attachment
op	17:15	0:0	2	=
call	17:17	18:67	2	xrealloc
arg	17:27	17:37	3	attachment
water	17:27	0:0	4	attachment
arg	18:20	18:67	3	sizeof(*attachment)*(i_attachment+i_new)
op	18:20	0:0	4	sizeof
water	18:26	0:0	4	(
op	18:27	0:0	4	*
water	18:28	0:0	4	attachment
water	18:38	0:0	4	)
op	18:40	0:0	4	*
water	18:42	0:0	4	(
water	18:44	0:0	4	i_attachment
op	18:57	0:0	4	+
water	18:59	0:0	4	i_new
water	18:65	0:0	4	)
water	18:68	0:0	2	;
water	19:4	0:0	2	attachment_demux
op	19:21	0:0	2	=
call	19:23	20:73	2	xrealloc
arg	19:33	19:49	3	attachment_demux
water	19:33	0:0	4	attachment_demux
arg	20:20	20:73	3	sizeof(*attachment_demux)*(i_attachment+i_new)
op	20:20	0:0	4	sizeof
water	20:26	0:0	4	(
op	20:27	0:0	4	*
water	20:28	0:0	4	attachment_demux
water	20:44	0:0	4	)
op	20:46	0:0	4	*
water	20:48	0:0	4	(
water	20:50	0:0	4	i_attachment
op	20:63	0:0	4	+
water	20:65	0:0	4	i_new
water	20:71	0:0	4	)
water	20:74	0:0	2	;
for	21:4	25:4	2	(i = 0 ;i < i_new;i ++)
forinit	21:9	21:14	3	i = 0 ;
water	21:9	0:0	4	i
op	21:11	0:0	4	=
water	21:13	0:0	4	0
water	21:14	0:0	4	;
cond	21:16	21:20	3	i < i_new
water	21:16	0:0	4	i
op	21:18	0:0	4	<
water	21:20	0:0	4	i_new
forexpr	21:27	21:28	3	i ++
water	21:27	0:0	4	i
op	21:28	0:0	4	++
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
water	23:8	0:0	4	attachment
op	23:18	0:0	4	[
water	23:19	0:0	4	i_attachment
op	23:31	0:0	4	]
op	23:33	0:0	4	=
water	23:35	0:0	4	pp_new
op	23:41	0:0	4	[
water	23:42	0:0	4	i
op	23:43	0:0	4	]
water	23:44	0:0	4	;
water	24:8	0:0	4	attachment_demux
op	24:24	0:0	4	[
water	24:25	0:0	4	i_attachment
op	24:37	0:0	4	++
op	24:39	0:0	4	]
op	24:41	0:0	4	=
water	24:43	0:0	4	p_demux
water	24:50	0:0	4	;
water	25:4	0:0	4	}
call	26:4	26:17	2	free
arg	26:10	26:17	3	pp_new
water	26:10	0:0	4	pp_new
water	26:18	0:0	2	;
op	28:4	0:0	2	*
water	28:5	0:0	2	pi_attachment
op	28:19	0:0	2	=
water	28:21	0:0	2	i_attachment
water	28:33	0:0	2	;
op	29:4	0:0	2	*
water	29:5	0:0	2	ppp_attachment
op	29:20	0:0	2	=
water	29:22	0:0	2	attachment
water	29:32	0:0	2	;
op	30:4	0:0	2	*
water	30:5	0:0	2	ppp_attachment_demux
op	30:26	0:0	2	=
water	30:28	0:0	2	attachment_demux
water	30:44	0:0	2	;

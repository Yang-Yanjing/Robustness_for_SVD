func	2:0	58:0	0	static int	HandleVideo
params	2:22	0:0	1	
param	2:24	2:40	2	demux_t *	p_demux
param	2:42	2:66	2	const uint8_t *	p_buffer
stmnts	0:0	57:22	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:68	2	block_t	*p_current_picture
op	5:31	0:0	2	=
call	5:33	5:67	3	block_Alloc
arg	5:46	5:67	4	p_sys->i_vblock_size
water	5:46	0:0	5	p_sys
op	5:51	0:0	5	->
water	5:53	0:0	5	i_vblock_size
if	6:4	7:25	2	(unlikely (! p_current_picture ))
cond	6:8	6:37	3	unlikely (! p_current_picture )
call	6:8	6:37	4	unlikely
arg	6:18	6:37	5	!p_current_picture
op	6:18	0:0	6	!
water	6:19	0:0	6	p_current_picture
stmts	7:8	7:25	3	
return	7:8	7:25	4	VLC_ENOMEM
water	7:15	0:0	5	VLC_ENOMEM
decl	8:4	8:46	2	uint8_t	*p_y
op	8:17	0:0	2	=
water	8:19	0:0	2	p_current_picture
op	8:36	0:0	2	->
water	8:38	0:0	2	p_buffer
decl	9:4	9:57	2	uint8_t	*p_u
op	9:17	0:0	2	=
water	9:19	0:0	2	p_y
op	9:23	0:0	2	+
water	9:25	0:0	2	p_sys
op	9:30	0:0	2	->
water	9:32	0:0	2	i_width
op	9:40	0:0	2	*
water	9:42	0:0	2	p_sys
op	9:47	0:0	2	->
water	9:49	0:0	2	i_height
decl	10:4	10:61	2	uint8_t	*p_v
op	10:17	0:0	2	=
water	10:19	0:0	2	p_u
op	10:23	0:0	2	+
water	10:25	0:0	2	p_sys
op	10:30	0:0	2	->
water	10:32	0:0	2	i_width
op	10:40	0:0	2	*
water	10:42	0:0	2	p_sys
op	10:47	0:0	2	->
water	10:49	0:0	2	i_height
op	10:58	0:0	2	/
water	10:60	0:0	2	4
decl	11:4	11:50	2	unsigned int	i_total_size
op	11:30	0:0	2	=
water	11:32	0:0	2	p_sys
op	11:37	0:0	2	->
water	11:39	0:0	2	i_width
op	11:47	0:0	2	*
water	11:49	0:0	2	2
decl	12:4	12:31	2	unsigned int	i_current_line
decl	13:4	13:32	2	struct block_extension_t	ext
for	14:4	43:4	2	(i_current_line = 0 ;i_current_line < p_sys -> i_height;i_current_line ++)
forinit	14:10	14:28	3	i_current_line = 0 ;
water	14:10	0:0	4	i_current_line
op	14:25	0:0	4	=
water	14:27	0:0	4	0
water	14:28	0:0	4	;
cond	14:30	14:54	3	i_current_line < p_sys -> i_height
water	14:30	0:0	4	i_current_line
op	14:45	0:0	4	<
water	14:47	0:0	4	p_sys
op	14:52	0:0	4	->
water	14:54	0:0	4	i_height
forexpr	15:10	15:24	3	i_current_line ++
water	15:10	0:0	4	i_current_line
op	15:24	0:0	4	++
stmts	16:4	43:4	3	
water	16:4	0:0	4	{
decl	17:8	17:62	4	bool	b_field
op	17:21	0:0	4	=
water	17:23	0:0	4	(
water	17:24	0:0	4	i_current_line
op	17:39	0:0	4	>=
water	17:42	0:0	4	p_sys
op	17:47	0:0	4	->
water	17:49	0:0	4	i_height
op	17:58	0:0	4	/
water	17:60	0:0	4	2
water	17:61	0:0	4	)
decl	18:8	20:26	4	unsigned int	i_field_line
op	18:34	0:0	4	=
water	18:36	0:0	4	b_field
water	18:44	0:0	4	?
water	19:12	0:0	4	i_current_line
op	19:27	0:0	4	-
water	19:29	0:0	4	(
water	19:30	0:0	4	p_sys
op	19:35	0:0	4	->
water	19:37	0:0	4	i_height
op	19:46	0:0	4	+
water	19:48	0:0	4	1
water	19:49	0:0	4	)
op	19:51	0:0	4	/
water	19:53	0:0	4	2
water	19:55	0:0	4	:
water	20:12	0:0	4	i_current_line
decl	21:8	21:61	4	unsigned int	i_real_line
op	21:33	0:0	4	=
water	21:35	0:0	4	b_field
op	21:43	0:0	4	+
water	21:45	0:0	4	i_field_line
op	21:58	0:0	4	*
water	21:60	0:0	4	2
decl	22:8	22:78	4	const uint8_t	*p_line
op	22:30	0:0	4	=
water	22:32	0:0	4	p_buffer
op	22:41	0:0	4	+
water	22:43	0:0	4	i_current_line
op	22:58	0:0	4	*
water	22:60	0:0	4	p_sys
op	22:65	0:0	4	->
water	22:67	0:0	4	i_width
op	22:75	0:0	4	*
water	22:77	0:0	4	2
if	23:8	27:70	4	(! ( i_field_line % 2 ) && ! b_field)
cond	23:13	23:37	5	! ( i_field_line % 2 ) && ! b_field
op	23:13	0:0	6	!
water	23:14	0:0	6	(
water	23:15	0:0	6	i_field_line
op	23:28	0:0	6	%
water	23:30	0:0	6	2
water	23:31	0:0	6	)
op	23:33	0:0	6	&&
op	23:36	0:0	6	!
water	23:37	0:0	6	b_field
stmts	24:12	27:70	5	
call	24:12	27:69	6	Unpack01
arg	24:22	24:28	7	p_line
water	24:22	0:0	8	p_line
arg	24:30	24:42	7	i_total_size
water	24:30	0:0	8	i_total_size
arg	25:22	25:56	7	p_y+p_sys->i_width*i_real_line
water	25:22	0:0	8	p_y
op	25:26	0:0	8	+
water	25:28	0:0	8	p_sys
op	25:33	0:0	8	->
water	25:35	0:0	8	i_width
op	25:43	0:0	8	*
water	25:45	0:0	8	i_real_line
arg	26:22	26:68	7	p_u+(p_sys->i_width/2)*(i_real_line/2)
water	26:22	0:0	8	p_u
op	26:26	0:0	8	+
water	26:28	0:0	8	(
water	26:29	0:0	8	p_sys
op	26:34	0:0	8	->
water	26:36	0:0	8	i_width
op	26:44	0:0	8	/
water	26:46	0:0	8	2
water	26:47	0:0	8	)
op	26:49	0:0	8	*
water	26:51	0:0	8	(
water	26:52	0:0	8	i_real_line
op	26:64	0:0	8	/
water	26:66	0:0	8	2
water	26:67	0:0	8	)
arg	27:22	27:69	7	p_v+(p_sys->i_width/2)*(i_real_line/2)
water	27:22	0:0	8	p_v
op	27:26	0:0	8	+
water	27:28	0:0	8	(
water	27:29	0:0	8	p_sys
op	27:34	0:0	8	->
water	27:36	0:0	8	i_width
op	27:44	0:0	8	/
water	27:46	0:0	8	2
water	27:47	0:0	8	)
op	27:49	0:0	8	*
water	27:51	0:0	8	(
water	27:52	0:0	8	i_real_line
op	27:64	0:0	8	/
water	27:66	0:0	8	2
water	27:67	0:0	8	)
water	27:70	0:0	6	;
else	28:8	32:74	4
stmts	28:13	32:74	5	
if	28:13	32:74	6	(! ( i_field_line % 2 ))
cond	28:18	28:36	7	! ( i_field_line % 2 )
op	28:18	0:0	8	!
water	28:19	0:0	8	(
water	28:20	0:0	8	i_field_line
op	28:33	0:0	8	%
water	28:35	0:0	8	2
water	28:36	0:0	8	)
stmts	29:12	32:74	7	
call	29:12	32:73	8	Unpack01
arg	29:22	29:28	9	p_line
water	29:22	0:0	10	p_line
arg	29:30	29:42	9	i_total_size
water	29:30	0:0	10	i_total_size
arg	30:22	30:56	9	p_y+p_sys->i_width*i_real_line
water	30:22	0:0	10	p_y
op	30:26	0:0	10	+
water	30:28	0:0	10	p_sys
op	30:33	0:0	10	->
water	30:35	0:0	10	i_width
op	30:43	0:0	10	*
water	30:45	0:0	10	i_real_line
arg	31:22	31:72	9	p_u+(p_sys->i_width/2)*(i_real_line/2+1)
water	31:22	0:0	10	p_u
op	31:26	0:0	10	+
water	31:28	0:0	10	(
water	31:29	0:0	10	p_sys
op	31:34	0:0	10	->
water	31:36	0:0	10	i_width
op	31:44	0:0	10	/
water	31:46	0:0	10	2
water	31:47	0:0	10	)
op	31:49	0:0	10	*
water	31:51	0:0	10	(
water	31:52	0:0	10	i_real_line
op	31:64	0:0	10	/
water	31:66	0:0	10	2
op	31:68	0:0	10	+
water	31:70	0:0	10	1
water	31:71	0:0	10	)
arg	32:22	32:73	9	p_v+(p_sys->i_width/2)*(i_real_line/2+1)
water	32:22	0:0	10	p_v
op	32:26	0:0	10	+
water	32:28	0:0	10	(
water	32:29	0:0	10	p_sys
op	32:34	0:0	10	->
water	32:36	0:0	10	i_width
op	32:44	0:0	10	/
water	32:46	0:0	10	2
water	32:47	0:0	10	)
op	32:49	0:0	10	*
water	32:51	0:0	10	(
water	32:52	0:0	10	i_real_line
op	32:64	0:0	10	/
water	32:66	0:0	10	2
op	32:68	0:0	10	+
water	32:70	0:0	10	1
water	32:71	0:0	10	)
water	32:74	0:0	8	;
else	33:7	37:73	4
stmts	33:12	37:73	5	
if	33:12	37:73	6	(! b_field)
cond	33:17	33:18	7	! b_field
op	33:17	0:0	8	!
water	33:18	0:0	8	b_field
stmts	34:12	37:73	7	
call	34:12	37:72	8	Unpack2
arg	34:21	34:27	9	p_line
water	34:21	0:0	10	p_line
arg	34:29	34:41	9	i_total_size
water	34:29	0:0	10	i_total_size
arg	35:21	35:55	9	p_y+p_sys->i_width*i_real_line
water	35:21	0:0	10	p_y
op	35:25	0:0	10	+
water	35:27	0:0	10	p_sys
op	35:32	0:0	10	->
water	35:34	0:0	10	i_width
op	35:42	0:0	10	*
water	35:44	0:0	10	i_real_line
arg	36:21	36:71	9	p_u+(p_sys->i_width/2)*(i_real_line/2-1)
water	36:21	0:0	10	p_u
op	36:25	0:0	10	+
water	36:27	0:0	10	(
water	36:28	0:0	10	p_sys
op	36:33	0:0	10	->
water	36:35	0:0	10	i_width
op	36:43	0:0	10	/
water	36:45	0:0	10	2
water	36:46	0:0	10	)
op	36:48	0:0	10	*
water	36:50	0:0	10	(
water	36:51	0:0	10	i_real_line
op	36:63	0:0	10	/
water	36:65	0:0	10	2
op	36:67	0:0	10	-
water	36:69	0:0	10	1
water	36:70	0:0	10	)
arg	37:21	37:72	9	p_v+(p_sys->i_width/2)*(i_real_line/2-1)
water	37:21	0:0	10	p_v
op	37:25	0:0	10	+
water	37:27	0:0	10	(
water	37:28	0:0	10	p_sys
op	37:33	0:0	10	->
water	37:35	0:0	10	i_width
op	37:43	0:0	10	/
water	37:45	0:0	10	2
water	37:46	0:0	10	)
op	37:48	0:0	10	*
water	37:50	0:0	10	(
water	37:51	0:0	10	i_real_line
op	37:63	0:0	10	/
water	37:65	0:0	10	2
op	37:67	0:0	10	-
water	37:69	0:0	10	1
water	37:70	0:0	10	)
water	37:73	0:0	8	;
else	38:7	42:69	4
stmts	39:12	42:69	5	
call	39:12	42:68	6	Unpack3
arg	39:21	39:27	7	p_line
water	39:21	0:0	8	p_line
arg	39:29	39:41	7	i_total_size
water	39:29	0:0	8	i_total_size
arg	40:21	40:55	7	p_y+p_sys->i_width*i_real_line
water	40:21	0:0	8	p_y
op	40:25	0:0	8	+
water	40:27	0:0	8	p_sys
op	40:32	0:0	8	->
water	40:34	0:0	8	i_width
op	40:42	0:0	8	*
water	40:44	0:0	8	i_real_line
arg	41:21	41:67	7	p_u+(p_sys->i_width/2)*(i_real_line/2)
water	41:21	0:0	8	p_u
op	41:25	0:0	8	+
water	41:27	0:0	8	(
water	41:28	0:0	8	p_sys
op	41:33	0:0	8	->
water	41:35	0:0	8	i_width
op	41:43	0:0	8	/
water	41:45	0:0	8	2
water	41:46	0:0	8	)
op	41:48	0:0	8	*
water	41:50	0:0	8	(
water	41:51	0:0	8	i_real_line
op	41:63	0:0	8	/
water	41:65	0:0	8	2
water	41:66	0:0	8	)
arg	42:21	42:68	7	p_v+(p_sys->i_width/2)*(i_real_line/2)
water	42:21	0:0	8	p_v
op	42:25	0:0	8	+
water	42:27	0:0	8	(
water	42:28	0:0	8	p_sys
op	42:33	0:0	8	->
water	42:35	0:0	8	i_width
op	42:43	0:0	8	/
water	42:45	0:0	8	2
water	42:46	0:0	8	)
op	42:48	0:0	8	*
water	42:50	0:0	8	(
water	42:51	0:0	8	i_real_line
op	42:63	0:0	8	/
water	42:65	0:0	8	2
water	42:66	0:0	8	)
water	42:69	0:0	6	;
water	43:4	0:0	4	}
water	45:4	0:0	2	ext
op	45:7	0:0	2	.
water	45:8	0:0	2	b_progressive
op	45:22	0:0	2	=
water	45:24	0:0	2	false
water	45:29	0:0	2	;
water	46:4	0:0	2	ext
op	46:7	0:0	2	.
water	46:8	0:0	2	i_nb_fields
op	46:20	0:0	2	=
water	46:22	0:0	2	2
water	46:23	0:0	2	;
water	47:4	0:0	2	ext
op	47:7	0:0	2	.
water	47:8	0:0	2	b_top_field_first
op	47:26	0:0	2	=
water	47:28	0:0	2	true
water	47:32	0:0	2	;
water	48:4	0:0	2	ext
op	48:7	0:0	2	.
water	48:8	0:0	2	i_aspect
op	48:17	0:0	2	=
water	48:19	0:0	2	p_sys
op	48:24	0:0	2	->
water	48:26	0:0	2	i_forced_aspect
water	48:42	0:0	2	?
water	48:44	0:0	2	p_sys
op	48:49	0:0	2	->
water	48:51	0:0	2	i_forced_aspect
water	48:67	0:0	2	:
water	49:19	0:0	2	p_sys
op	49:24	0:0	2	->
water	49:26	0:0	2	i_aspect
water	49:34	0:0	2	;
call	50:4	52:51	2	memcpy
arg	50:12	51:77	3	&p_current_picture->p_buffer[p_sys->i_vblock_size-sizeof(structblock_extension_t)]
op	50:12	0:0	4	&
water	50:13	0:0	4	p_current_picture
op	50:30	0:0	4	->
water	50:32	0:0	4	p_buffer
op	50:40	0:0	4	[
water	50:41	0:0	4	p_sys
op	50:46	0:0	4	->
water	50:48	0:0	4	i_vblock_size
op	51:42	0:0	4	-
op	51:44	0:0	4	sizeof
water	51:50	0:0	4	(
water	51:51	0:0	4	struct
water	51:58	0:0	4	block_extension_t
water	51:75	0:0	4	)
op	51:76	0:0	4	]
arg	52:12	52:16	3	&ext
op	52:12	0:0	4	&
water	52:13	0:0	4	ext
arg	52:18	52:51	3	sizeof(structblock_extension_t)
op	52:18	0:0	4	sizeof
water	52:24	0:0	4	(
water	52:25	0:0	4	struct
water	52:32	0:0	4	block_extension_t
water	52:49	0:0	4	)
water	52:52	0:0	2	;
water	53:4	0:0	2	p_current_picture
op	53:21	0:0	2	->
water	53:23	0:0	2	i_dts
op	53:29	0:0	2	=
water	53:31	0:0	2	p_current_picture
op	53:48	0:0	2	->
water	53:50	0:0	2	i_pts
op	53:56	0:0	2	=
water	53:58	0:0	2	p_sys
op	53:63	0:0	2	->
water	53:65	0:0	2	i_next_vdate
water	53:77	0:0	2	;
call	54:4	54:68	2	es_out_Send
arg	54:17	54:29	3	p_demux->out
water	54:17	0:0	4	p_demux
op	54:24	0:0	4	->
water	54:26	0:0	4	out
arg	54:31	54:48	3	p_sys->p_es_video
water	54:31	0:0	4	p_sys
op	54:36	0:0	4	->
water	54:38	0:0	4	p_es_video
arg	54:50	54:68	3	p_current_picture
water	54:50	0:0	4	p_current_picture
water	54:69	0:0	2	;
call	55:4	55:70	2	es_out_Control
arg	55:20	55:32	3	p_demux->out
water	55:20	0:0	4	p_demux
op	55:27	0:0	4	->
water	55:29	0:0	4	out
arg	55:34	55:48	3	ES_OUT_SET_PCR
water	55:34	0:0	4	ES_OUT_SET_PCR
arg	55:50	55:70	3	p_sys->i_next_vdate
water	55:50	0:0	4	p_sys
op	55:55	0:0	4	->
water	55:57	0:0	4	i_next_vdate
water	55:71	0:0	2	;
water	56:4	0:0	2	p_sys
op	56:9	0:0	2	->
water	56:11	0:0	2	i_next_vdate
op	56:24	0:0	2	+=
water	56:27	0:0	2	p_sys
op	56:32	0:0	2	->
water	56:34	0:0	2	i_incr
water	56:40	0:0	2	;
return	57:4	57:22	2	VLC_SUCCESS
water	57:11	0:0	3	VLC_SUCCESS

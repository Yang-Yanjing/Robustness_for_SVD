func	2:0	63:0	0	static void	Manage
params	2:18	0:0	1	
param	2:19	2:37	2	vout_display_t *	vd
stmnts	0:0	62:4	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
decl	5:4	5:24	2	struct caca_event	ev
while	6:4	62:4	2	(caca_get_event (sys -> dp ,CACA_EVENT_ANY ,& ev ,0 ) > 0)
cond	6:11	6:61	3	caca_get_event (sys -> dp ,CACA_EVENT_ANY ,& ev ,0 ) > 0
call	6:11	6:57	4	caca_get_event
arg	6:26	6:33	5	sys->dp
water	6:26	0:0	6	sys
op	6:29	0:0	6	->
water	6:31	0:0	6	dp
arg	6:35	6:49	5	CACA_EVENT_ANY
water	6:35	0:0	6	CACA_EVENT_ANY
arg	6:51	6:54	5	&ev
op	6:51	0:0	6	&
water	6:52	0:0	6	ev
arg	6:56	6:57	5	0
water	6:56	0:0	6	0
op	6:59	0:0	4	>
water	6:61	0:0	4	0
stmts	6:64	62:4	3	
water	6:64	0:0	4	{
switch	7:8	61:8	4	(caca_get_event_type (& ev ))
cond	7:16	7:39	5	caca_get_event_type (& ev )
call	7:16	7:39	6	caca_get_event_type
arg	7:36	7:39	7	&ev
op	7:36	0:0	8	&
water	7:37	0:0	8	ev
stmts	7:42	61:8	5	
water	7:42	0:0	6	{
label	8:8	8:33	6	case CACA_EVENT_KEY_PRESS :
water	8:35	0:0	6	{
decl	9:12	9:55	6	const int	caca
op	9:27	0:0	6	=
call	9:29	9:54	7	caca_get_event_key_ch
arg	9:51	9:54	8	&ev
op	9:51	0:0	9	&
water	9:52	0:0	9	ev
for	10:12	17:12	6	( int i = 0 ;keys [ i ] . caca != - 1;i ++)
forinit	0:0	10:26	7	 int i = 0 ;
decl	10:17	10:26	8	int	i
op	10:23	0:0	8	=
water	10:25	0:0	8	0
cond	10:28	10:45	7	keys [ i ] . caca != - 1
water	10:28	0:0	8	keys
op	10:32	0:0	8	[
water	10:33	0:0	8	i
op	10:34	0:0	8	]
op	10:35	0:0	8	.
water	10:36	0:0	8	caca
op	10:41	0:0	8	!=
op	10:44	0:0	8	-
water	10:45	0:0	8	1
forexpr	10:48	10:49	7	i ++
water	10:48	0:0	8	i
op	10:49	0:0	8	++
stmts	10:53	17:12	7	
water	10:53	0:0	8	{
if	11:16	16:16	8	(keys [ i ] . caca == caca)
cond	11:20	11:36	9	keys [ i ] . caca == caca
water	11:20	0:0	10	keys
op	11:24	0:0	10	[
water	11:25	0:0	10	i
op	11:26	0:0	10	]
op	11:27	0:0	10	.
water	11:28	0:0	10	caca
op	11:33	0:0	10	==
water	11:36	0:0	10	caca
stmts	11:42	16:16	9	
water	11:42	0:0	10	{
decl	12:20	12:47	10	const int	vlc
op	12:34	0:0	10	=
water	12:36	0:0	10	keys
op	12:40	0:0	10	[
water	12:41	0:0	10	i
op	12:42	0:0	10	]
op	12:43	0:0	10	.
water	12:44	0:0	10	vlc
if	13:20	14:58	10	(vlc >= 0)
cond	13:24	13:31	11	vlc >= 0
water	13:24	0:0	12	vlc
op	13:28	0:0	12	>=
water	13:31	0:0	12	0
stmts	14:24	14:58	11	
call	14:24	14:57	12	vout_display_SendEventKey
arg	14:50	14:52	13	vd
water	14:50	0:0	14	vd
arg	14:54	14:57	13	vlc
water	14:54	0:0	14	vlc
water	14:58	0:0	12	;
return	15:20	15:26	10	
water	16:16	0:0	10	}
water	17:12	0:0	8	}
if	18:12	21:12	6	(caca >= 0 x20 && caca <= 0 x7f)
cond	18:16	18:41	7	caca >= 0 x20 && caca <= 0 x7f
water	18:16	0:0	8	caca
op	18:21	0:0	8	>=
water	18:24	0:0	8	0
water	18:25	0:0	8	x20
op	18:29	0:0	8	&&
water	18:32	0:0	8	caca
op	18:37	0:0	8	<=
water	18:40	0:0	8	0
water	18:41	0:0	8	x7f
stmts	18:46	21:12	7	
water	18:46	0:0	8	{
call	19:16	19:50	8	vout_display_SendEventKey
arg	19:42	19:44	9	vd
water	19:42	0:0	10	vd
arg	19:46	19:50	9	caca
water	19:46	0:0	10	caca
water	19:51	0:0	8	;
return	20:16	20:22	8	
water	21:12	0:0	8	}
break	22:12	22:17	6	
water	23:8	0:0	6	}
label	24:8	24:30	6	case CACA_EVENT_RESIZE :
call	25:12	26:90	6	vout_display_SendEventDisplaySize
arg	25:46	25:48	7	vd
water	25:46	0:0	8	vd
arg	25:50	25:82	7	caca_get_event_resize_width(&ev)
call	25:50	25:81	8	caca_get_event_resize_width
arg	25:78	25:81	9	&ev
op	25:78	0:0	10	&
water	25:79	0:0	10	ev
arg	26:50	26:83	7	caca_get_event_resize_height(&ev)
call	26:50	26:82	8	caca_get_event_resize_height
arg	26:79	26:82	9	&ev
op	26:79	0:0	10	&
water	26:80	0:0	10	ev
arg	26:85	26:90	7	false
water	26:85	0:0	8	false
water	26:91	0:0	6	;
break	27:12	27:17	6	
label	28:8	28:36	6	case CACA_EVENT_MOUSE_MOTION :
water	28:38	0:0	6	{
decl	29:12	29:38	6	vout_display_place_t	place
call	30:12	30:28	6	Place
arg	30:18	30:20	7	vd
water	30:18	0:0	8	vd
arg	30:22	30:28	7	&place
op	30:22	0:0	8	&
water	30:23	0:0	8	place
water	30:29	0:0	6	;
water	31:12	0:0	6	const
water	31:18	0:0	6	unsigned
water	31:27	0:0	6	x
op	31:29	0:0	6	=
water	31:31	0:0	6	vd
op	31:33	0:0	6	->
water	31:35	0:0	6	source
op	31:41	0:0	6	.
water	31:42	0:0	6	i_x_offset
op	31:53	0:0	6	+
call	32:31	32:78	6	(int64_t)
arg	32:41	32:78	7	caca_get_event_mouse_x(&ev)-place.x
call	32:41	32:67	8	caca_get_event_mouse_x
arg	32:64	32:67	9	&ev
op	32:64	0:0	10	&
water	32:65	0:0	10	ev
op	32:69	0:0	8	-
water	32:71	0:0	8	place
op	32:76	0:0	8	.
water	32:77	0:0	8	x
op	32:80	0:0	6	*
water	33:36	0:0	6	vd
op	33:38	0:0	6	->
water	33:40	0:0	6	source
op	33:46	0:0	6	.
water	33:47	0:0	6	i_visible_width
op	33:63	0:0	6	/
water	33:65	0:0	6	place
op	33:70	0:0	6	.
water	33:71	0:0	6	width
water	33:76	0:0	6	;
water	34:12	0:0	6	const
water	34:18	0:0	6	unsigned
water	34:27	0:0	6	y
op	34:29	0:0	6	=
water	34:31	0:0	6	vd
op	34:33	0:0	6	->
water	34:35	0:0	6	source
op	34:41	0:0	6	.
water	34:42	0:0	6	i_y_offset
op	34:53	0:0	6	+
call	35:31	35:78	6	(int64_t)
arg	35:41	35:78	7	caca_get_event_mouse_y(&ev)-place.y
call	35:41	35:67	8	caca_get_event_mouse_y
arg	35:64	35:67	9	&ev
op	35:64	0:0	10	&
water	35:65	0:0	10	ev
op	35:69	0:0	8	-
water	35:71	0:0	8	place
op	35:76	0:0	8	.
water	35:77	0:0	8	y
op	35:80	0:0	6	*
water	36:36	0:0	6	vd
op	36:38	0:0	6	->
water	36:40	0:0	6	source
op	36:46	0:0	6	.
water	36:47	0:0	6	i_visible_height
op	36:64	0:0	6	/
water	36:66	0:0	6	place
op	36:71	0:0	6	.
water	36:72	0:0	6	height
water	36:78	0:0	6	;
call	37:12	37:37	6	caca_set_mouse
arg	37:27	37:34	7	sys->dp
water	37:27	0:0	8	sys
op	37:30	0:0	8	->
water	37:32	0:0	8	dp
arg	37:36	37:37	7	1
water	37:36	0:0	8	1
water	37:38	0:0	6	;
call	38:12	38:53	6	vout_display_SendEventMouseMoved
arg	38:45	38:47	7	vd
water	38:45	0:0	8	vd
arg	38:49	38:50	7	x
water	38:49	0:0	8	x
arg	38:52	38:53	7	y
water	38:52	0:0	8	y
water	38:54	0:0	6	;
break	39:12	39:17	6	
water	40:8	0:0	6	}
label	41:8	41:35	6	case CACA_EVENT_MOUSE_PRESS :
label	42:8	42:37	6	case CACA_EVENT_MOUSE_RELEASE :
water	42:39	0:0	6	{
call	43:12	43:37	6	caca_set_mouse
arg	43:27	43:34	7	sys->dp
water	43:27	0:0	8	sys
op	43:30	0:0	8	->
water	43:32	0:0	8	dp
arg	43:36	43:37	7	1
water	43:36	0:0	8	1
water	43:38	0:0	6	;
decl	44:12	44:61	6	const int	caca
op	44:27	0:0	6	=
call	44:29	44:60	7	caca_get_event_mouse_button
arg	44:57	44:60	8	&ev
op	44:57	0:0	9	&
water	44:58	0:0	9	ev
for	45:12	53:12	6	( int i = 0 ;mouses [ i ] . caca != - 1;i ++)
forinit	0:0	45:26	7	 int i = 0 ;
decl	45:17	45:26	8	int	i
op	45:23	0:0	8	=
water	45:25	0:0	8	0
cond	45:28	45:47	7	mouses [ i ] . caca != - 1
water	45:28	0:0	8	mouses
op	45:34	0:0	8	[
water	45:35	0:0	8	i
op	45:36	0:0	8	]
op	45:37	0:0	8	.
water	45:38	0:0	8	caca
op	45:43	0:0	8	!=
op	45:46	0:0	8	-
water	45:47	0:0	8	1
forexpr	45:50	45:51	7	i ++
water	45:50	0:0	8	i
op	45:51	0:0	8	++
stmts	45:55	53:12	7	
water	45:55	0:0	8	{
if	46:16	52:16	8	(mouses [ i ] . caca == caca)
cond	46:20	46:38	9	mouses [ i ] . caca == caca
water	46:20	0:0	10	mouses
op	46:26	0:0	10	[
water	46:27	0:0	10	i
op	46:28	0:0	10	]
op	46:29	0:0	10	.
water	46:30	0:0	10	caca
op	46:35	0:0	10	==
water	46:38	0:0	10	caca
stmts	46:44	52:16	9	
water	46:44	0:0	10	{
if	47:20	48:77	10	(caca_get_event_type (& ev ) == CACA_EVENT_MOUSE_PRESS)
cond	47:24	47:52	11	caca_get_event_type (& ev ) == CACA_EVENT_MOUSE_PRESS
call	47:24	47:47	12	caca_get_event_type
arg	47:44	47:47	13	&ev
op	47:44	0:0	14	&
water	47:45	0:0	14	ev
op	47:49	0:0	12	==
water	47:52	0:0	12	CACA_EVENT_MOUSE_PRESS
stmts	48:24	48:77	11	
call	48:24	48:76	12	vout_display_SendEventMousePressed
arg	48:59	48:61	13	vd
water	48:59	0:0	14	vd
arg	48:63	48:76	13	mouses[i].vlc
water	48:63	0:0	14	mouses
op	48:69	0:0	14	[
water	48:70	0:0	14	i
op	48:71	0:0	14	]
op	48:72	0:0	14	.
water	48:73	0:0	14	vlc
water	48:77	0:0	12	;
else	49:20	50:78	10
stmts	50:24	50:78	11	
call	50:24	50:77	12	vout_display_SendEventMouseReleased
arg	50:60	50:62	13	vd
water	50:60	0:0	14	vd
arg	50:64	50:77	13	mouses[i].vlc
water	50:64	0:0	14	mouses
op	50:70	0:0	14	[
water	50:71	0:0	14	i
op	50:72	0:0	14	]
op	50:73	0:0	14	.
water	50:74	0:0	14	vlc
water	50:78	0:0	12	;
return	51:20	51:26	10	
water	52:16	0:0	10	}
water	53:12	0:0	8	}
break	54:12	54:17	6	
water	55:8	0:0	6	}
label	56:8	56:28	6	case CACA_EVENT_QUIT :
call	57:12	57:42	6	vout_display_SendEventClose
arg	57:40	57:42	7	vd
water	57:40	0:0	8	vd
water	57:43	0:0	6	;
break	58:12	58:17	6	
label	59:8	59:15	6	default :
break	60:12	60:17	6	
water	61:8	0:0	6	}
water	62:4	0:0	4	}

func	2:0	84:0	0	static picture_t *	Filter
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:63	2	picture_t *	p_pic
stmnts	0:0	83:48	1	
decl	4:4	4:23	2	picture_t	*p_outpic
decl	5:4	5:15	2	int	i_index
decl	6:4	6:18	2	double	f_angle
decl	7:4	7:30	2	mtime_t	new_date
op	7:21	0:0	2	=
call	7:23	7:29	3	mdate
if	8:4	8:28	2	(! p_pic)
cond	8:8	8:9	3	! p_pic
op	8:8	0:0	4	!
water	8:9	0:0	4	p_pic
stmts	8:17	8:28	3	
return	8:17	8:28	4	NULL
water	8:24	0:0	5	NULL
water	9:4	0:0	2	p_outpic
op	9:13	0:0	2	=
call	9:15	9:43	2	filter_NewPicture
arg	9:34	9:43	3	p_filter
water	9:34	0:0	4	p_filter
water	9:44	0:0	2	;
if	10:4	14:4	2	(! p_outpic)
cond	10:8	10:9	3	! p_outpic
op	10:8	0:0	4	!
water	10:9	0:0	4	p_outpic
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
call	12:8	12:31	4	picture_Release
arg	12:25	12:31	5	p_pic
water	12:25	0:0	6	p_pic
water	12:32	0:0	4	;
return	13:8	13:19	4	NULL
water	13:15	0:0	5	NULL
water	14:4	0:0	4	}
water	15:4	0:0	2	p_filter
op	15:12	0:0	2	->
water	15:14	0:0	2	p_sys
op	15:19	0:0	2	->
water	15:21	0:0	2	f_angle
op	15:29	0:0	2	-=
water	15:32	0:0	2	(
water	15:33	0:0	2	p_filter
op	15:41	0:0	2	->
water	15:43	0:0	2	p_sys
op	15:48	0:0	2	->
water	15:50	0:0	2	last_date
op	15:60	0:0	2	-
water	15:62	0:0	2	new_date
water	15:70	0:0	2	)
op	15:72	0:0	2	/
water	15:74	0:0	2	100000
op	15:80	0:0	2	.
water	15:81	0:0	2	0
water	15:82	0:0	2	;
water	16:4	0:0	2	p_filter
op	16:12	0:0	2	->
water	16:14	0:0	2	p_sys
op	16:19	0:0	2	->
water	16:21	0:0	2	last_date
op	16:31	0:0	2	=
water	16:33	0:0	2	new_date
water	16:41	0:0	2	;
water	17:4	0:0	2	f_angle
op	17:12	0:0	2	=
water	17:14	0:0	2	p_filter
op	17:22	0:0	2	->
water	17:24	0:0	2	p_sys
op	17:29	0:0	2	->
water	17:31	0:0	2	f_angle
water	17:38	0:0	2	;
for	18:4	82:4	2	(i_index = 0 ;i_index < p_pic -> i_planes;i_index ++)
forinit	18:9	18:21	3	i_index = 0 ;
water	18:9	0:0	4	i_index
op	18:17	0:0	4	=
water	18:19	0:0	4	0
water	18:21	0:0	4	;
cond	18:23	18:40	3	i_index < p_pic -> i_planes
water	18:23	0:0	4	i_index
op	18:31	0:0	4	<
water	18:33	0:0	4	p_pic
op	18:38	0:0	4	->
water	18:40	0:0	4	i_planes
forexpr	18:51	18:58	3	i_index ++
water	18:51	0:0	4	i_index
op	18:58	0:0	4	++
stmts	19:4	82:4	3	
water	19:4	0:0	4	{
decl	20:8	21:28	4	int	i_line
water	20:18	0:0	4	,
decl	20:8	21:28	4	int	i_first_line
water	20:32	0:0	4	,
decl	20:8	21:28	4	int	i_num_lines
water	20:45	0:0	4	,
decl	20:8	21:28	4	int	i_offset
water	20:55	0:0	4	,
decl	20:8	21:28	4	int	i_pixel_pitch
water	20:70	0:0	4	,
decl	20:8	21:28	4	int	i_visible_pixels
decl	22:8	22:27	4	uint8_t	black_pixel
decl	23:8	23:29	4	uint8_t	*p_in
water	23:21	0:0	4	,
decl	23:8	23:29	4	uint8_t	*p_out
water	24:8	0:0	4	black_pixel
op	24:20	0:0	4	=
water	24:22	0:0	4	(
water	24:24	0:0	4	p_pic
op	24:29	0:0	4	->
water	24:31	0:0	4	i_planes
op	24:40	0:0	4	>
water	24:42	0:0	4	1
op	24:44	0:0	4	&&
water	24:47	0:0	4	i_index
op	24:55	0:0	4	==
water	24:58	0:0	4	Y_PLANE
water	24:66	0:0	4	)
water	24:68	0:0	4	?
water	24:70	0:0	4	0
water	24:71	0:0	4	x00
water	25:68	0:0	4	:
water	25:70	0:0	4	0
water	25:71	0:0	4	x80
water	25:74	0:0	4	;
water	26:8	0:0	4	i_num_lines
op	26:20	0:0	4	=
water	26:22	0:0	4	p_pic
op	26:27	0:0	4	->
water	26:29	0:0	4	p
op	26:30	0:0	4	[
water	26:31	0:0	4	i_index
op	26:38	0:0	4	]
op	26:39	0:0	4	.
water	26:40	0:0	4	i_visible_lines
water	26:55	0:0	4	;
water	27:8	0:0	4	i_pixel_pitch
op	27:22	0:0	4	=
water	27:24	0:0	4	p_pic
op	27:29	0:0	4	->
water	27:31	0:0	4	p
op	27:32	0:0	4	[
water	27:33	0:0	4	i_index
op	27:40	0:0	4	]
op	27:41	0:0	4	.
water	27:42	0:0	4	i_pixel_pitch
water	27:55	0:0	4	;
switch	28:8	34:8	4	(p_filter -> fmt_in . video . i_chroma)
cond	28:16	28:39	5	p_filter -> fmt_in . video . i_chroma
water	28:16	0:0	6	p_filter
op	28:24	0:0	6	->
water	28:26	0:0	6	fmt_in
op	28:32	0:0	6	.
water	28:33	0:0	6	video
op	28:38	0:0	6	.
water	28:39	0:0	6	i_chroma
stmts	29:8	34:8	5	
water	29:8	0:0	6	{
water	30:12	0:0	6	CASE_PACKED_YUV_422
water	32:16	0:0	6	i_pixel_pitch
op	32:30	0:0	6	*=
water	32:33	0:0	6	2
water	32:34	0:0	6	;
break	33:16	33:21	6	
water	34:8	0:0	6	}
water	35:8	0:0	4	i_visible_pixels
op	35:25	0:0	4	=
water	35:27	0:0	4	p_pic
op	35:32	0:0	4	->
water	35:34	0:0	4	p
op	35:35	0:0	4	[
water	35:36	0:0	4	i_index
op	35:43	0:0	4	]
op	35:44	0:0	4	.
water	35:45	0:0	4	i_visible_pitch
op	35:60	0:0	4	/
water	35:61	0:0	4	i_pixel_pitch
water	35:74	0:0	4	;
water	36:8	0:0	4	i_first_line
op	36:21	0:0	4	=
water	36:23	0:0	4	i_num_lines
op	36:35	0:0	4	*
water	36:37	0:0	4	4
op	36:39	0:0	4	/
water	36:41	0:0	4	5
water	36:42	0:0	4	;
water	37:8	0:0	4	p_in
op	37:13	0:0	4	=
water	37:15	0:0	4	p_pic
op	37:20	0:0	4	->
water	37:22	0:0	4	p
op	37:23	0:0	4	[
water	37:24	0:0	4	i_index
op	37:31	0:0	4	]
op	37:32	0:0	4	.
water	37:33	0:0	4	p_pixels
water	37:41	0:0	4	;
water	38:8	0:0	4	p_out
op	38:14	0:0	4	=
water	38:16	0:0	4	p_outpic
op	38:24	0:0	4	->
water	38:26	0:0	4	p
op	38:27	0:0	4	[
water	38:28	0:0	4	i_index
op	38:35	0:0	4	]
op	38:36	0:0	4	.
water	38:37	0:0	4	p_pixels
water	38:45	0:0	4	;
for	39:8	44:8	4	(i_line = 0 ;i_line < i_first_line;i_line ++)
forinit	39:13	39:24	5	i_line = 0 ;
water	39:13	0:0	6	i_line
op	39:20	0:0	6	=
water	39:22	0:0	6	0
water	39:24	0:0	6	;
cond	39:26	39:35	5	i_line < i_first_line
water	39:26	0:0	6	i_line
op	39:33	0:0	6	<
water	39:35	0:0	6	i_first_line
forexpr	39:50	39:56	5	i_line ++
water	39:50	0:0	6	i_line
op	39:56	0:0	6	++
stmts	40:8	44:8	5	
water	40:8	0:0	6	{
call	41:12	41:67	6	memcpy
arg	41:20	41:25	7	p_out
water	41:20	0:0	8	p_out
arg	41:27	41:31	7	p_in
water	41:27	0:0	8	p_in
arg	41:33	41:67	7	p_pic->p[i_index].i_visible_pitch
water	41:33	0:0	8	p_pic
op	41:38	0:0	8	->
water	41:40	0:0	8	p
op	41:41	0:0	8	[
water	41:42	0:0	8	i_index
op	41:49	0:0	8	]
op	41:50	0:0	8	.
water	41:51	0:0	8	i_visible_pitch
water	41:68	0:0	6	;
water	42:12	0:0	6	p_in
op	42:17	0:0	6	+=
water	42:20	0:0	6	p_pic
op	42:25	0:0	6	->
water	42:27	0:0	6	p
op	42:28	0:0	6	[
water	42:29	0:0	6	i_index
op	42:36	0:0	6	]
op	42:37	0:0	6	.
water	42:38	0:0	6	i_pitch
water	42:45	0:0	6	;
water	43:12	0:0	6	p_out
op	43:18	0:0	6	+=
water	43:21	0:0	6	p_outpic
op	43:29	0:0	6	->
water	43:31	0:0	6	p
op	43:32	0:0	6	[
water	43:33	0:0	6	i_index
op	43:40	0:0	6	]
op	43:41	0:0	6	.
water	43:42	0:0	6	i_pitch
water	43:49	0:0	6	;
water	44:8	0:0	6	}
for	46:8	81:8	4	(i_line = i_first_line ;i_line < i_num_lines;i_line ++)
forinit	46:13	46:35	5	i_line = i_first_line ;
water	46:13	0:0	6	i_line
op	46:20	0:0	6	=
water	46:22	0:0	6	i_first_line
water	46:35	0:0	6	;
cond	46:37	46:46	5	i_line < i_num_lines
water	46:37	0:0	6	i_line
op	46:44	0:0	6	<
water	46:46	0:0	6	i_num_lines
forexpr	46:60	46:66	5	i_line ++
water	46:60	0:0	6	i_line
op	46:66	0:0	6	++
stmts	47:8	81:8	5	
water	47:8	0:0	6	{
water	49:12	0:0	6	i_offset
op	49:21	0:0	6	=
call	49:23	55:31	6	(int)
arg	49:30	55:31	7	(double)(i_visible_pixels)*sin(f_angle+2.0*(double)i_line/(double)(1+i_line-i_first_line))*(double)(i_line-i_first_line)/(double)i_num_lines/8.0
call	49:30	49:55	8	(double)
arg	49:39	49:55	9	i_visible_pixels
water	49:39	0:0	10	i_visible_pixels
call	50:25	52:76	8	*sin
arg	50:32	52:76	9	f_angle+2.0*(double)i_line/(double)(1+i_line-i_first_line)
water	50:32	0:0	10	f_angle
op	50:40	0:0	10	+
water	50:42	0:0	10	2
op	50:43	0:0	10	.
water	50:44	0:0	10	0
op	50:46	0:0	10	*
water	50:48	0:0	10	(
water	50:49	0:0	10	double
water	50:55	0:0	10	)
water	50:56	0:0	10	i_line
op	51:46	0:0	10	/
call	51:48	52:74	10	(double)
arg	51:58	52:74	11	1+i_line-i_first_line
water	51:58	0:0	12	1
op	51:60	0:0	12	+
water	51:62	0:0	12	i_line
op	52:60	0:0	12	-
water	52:62	0:0	12	i_first_line
call	53:25	53:57	8	*(double)
arg	53:36	53:57	9	i_line-i_first_line
water	53:36	0:0	10	i_line
op	53:43	0:0	10	-
water	53:45	0:0	10	i_first_line
op	54:25	0:0	8	/
water	54:27	0:0	8	(
water	54:28	0:0	8	double
water	54:34	0:0	8	)
water	54:35	0:0	8	i_num_lines
op	55:25	0:0	8	/
water	55:27	0:0	8	8
op	55:28	0:0	8	.
water	55:29	0:0	8	0
op	55:32	0:0	6	*
water	55:33	0:0	6	i_pixel_pitch
water	55:46	0:0	6	;
if	56:12	74:12	6	(i_offset)
cond	56:16	56:16	7	i_offset
water	56:16	0:0	8	i_offset
stmts	57:12	74:12	7	
water	57:12	0:0	8	{
if	58:16	65:16	8	(i_offset < 0)
cond	58:20	58:31	9	i_offset < 0
water	58:20	0:0	10	i_offset
op	58:29	0:0	10	<
water	58:31	0:0	10	0
stmts	59:16	65:16	9	
water	59:16	0:0	10	{
call	60:20	61:77	10	memcpy
arg	60:28	60:33	11	p_out
water	60:28	0:0	12	p_out
arg	60:35	60:50	11	p_in-i_offset
water	60:35	0:0	12	p_in
op	60:40	0:0	12	-
water	60:42	0:0	12	i_offset
arg	61:32	61:77	11	p_pic->p[i_index].i_visible_pitch+i_offset
water	61:32	0:0	12	p_pic
op	61:37	0:0	12	->
water	61:39	0:0	12	p
op	61:40	0:0	12	[
water	61:41	0:0	12	i_index
op	61:48	0:0	12	]
op	61:49	0:0	12	.
water	61:50	0:0	12	i_visible_pitch
op	61:66	0:0	12	+
water	61:68	0:0	12	i_offset
water	61:78	0:0	10	;
water	62:20	0:0	10	p_in
op	62:25	0:0	10	-=
water	62:28	0:0	10	p_pic
op	62:33	0:0	10	->
water	62:35	0:0	10	p
op	62:36	0:0	10	[
water	62:37	0:0	10	i_index
op	62:44	0:0	10	]
op	62:45	0:0	10	.
water	62:46	0:0	10	i_pitch
water	62:53	0:0	10	;
water	63:20	0:0	10	p_out
op	63:26	0:0	10	+=
water	63:29	0:0	10	p_outpic
op	63:37	0:0	10	->
water	63:39	0:0	10	p
op	63:40	0:0	10	[
water	63:41	0:0	10	i_index
op	63:48	0:0	10	]
op	63:49	0:0	10	.
water	63:50	0:0	10	i_pitch
water	63:57	0:0	10	;
call	64:20	64:69	10	memset
arg	64:28	64:44	11	p_out+i_offset
water	64:28	0:0	12	p_out
op	64:34	0:0	12	+
water	64:36	0:0	12	i_offset
arg	64:46	64:57	11	black_pixel
water	64:46	0:0	12	black_pixel
arg	64:59	64:69	11	-i_offset
op	64:59	0:0	12	-
water	64:60	0:0	12	i_offset
water	64:70	0:0	10	;
water	65:16	0:0	10	}
else	66:16	73:16	8
stmts	67:16	73:16	9	
water	67:16	0:0	10	{
call	68:20	69:77	10	memcpy
arg	68:28	68:44	11	p_out+i_offset
water	68:28	0:0	12	p_out
op	68:34	0:0	12	+
water	68:36	0:0	12	i_offset
arg	68:46	68:50	11	p_in
water	68:46	0:0	12	p_in
arg	69:32	69:77	11	p_pic->p[i_index].i_visible_pitch-i_offset
water	69:32	0:0	12	p_pic
op	69:37	0:0	12	->
water	69:39	0:0	12	p
op	69:40	0:0	12	[
water	69:41	0:0	12	i_index
op	69:48	0:0	12	]
op	69:49	0:0	12	.
water	69:50	0:0	12	i_visible_pitch
op	69:66	0:0	12	-
water	69:68	0:0	12	i_offset
water	69:78	0:0	10	;
call	70:20	70:57	10	memset
arg	70:28	70:33	11	p_out
water	70:28	0:0	12	p_out
arg	70:35	70:46	11	black_pixel
water	70:35	0:0	12	black_pixel
arg	70:48	70:57	11	i_offset
water	70:48	0:0	12	i_offset
water	70:58	0:0	10	;
water	71:20	0:0	10	p_in
op	71:25	0:0	10	-=
water	71:28	0:0	10	p_pic
op	71:33	0:0	10	->
water	71:35	0:0	10	p
op	71:36	0:0	10	[
water	71:37	0:0	10	i_index
op	71:44	0:0	10	]
op	71:45	0:0	10	.
water	71:46	0:0	10	i_pitch
water	71:53	0:0	10	;
water	72:20	0:0	10	p_out
op	72:26	0:0	10	+=
water	72:29	0:0	10	p_outpic
op	72:37	0:0	10	->
water	72:39	0:0	10	p
op	72:40	0:0	10	[
water	72:41	0:0	10	i_index
op	72:48	0:0	10	]
op	72:49	0:0	10	.
water	72:50	0:0	10	i_pitch
water	72:57	0:0	10	;
water	73:16	0:0	10	}
water	74:12	0:0	8	}
else	75:12	80:12	6
stmts	76:12	80:12	7	
water	76:12	0:0	8	{
call	77:16	77:71	8	memcpy
arg	77:24	77:29	9	p_out
water	77:24	0:0	10	p_out
arg	77:31	77:35	9	p_in
water	77:31	0:0	10	p_in
arg	77:37	77:71	9	p_pic->p[i_index].i_visible_pitch
water	77:37	0:0	10	p_pic
op	77:42	0:0	10	->
water	77:44	0:0	10	p
op	77:45	0:0	10	[
water	77:46	0:0	10	i_index
op	77:53	0:0	10	]
op	77:54	0:0	10	.
water	77:55	0:0	10	i_visible_pitch
water	77:72	0:0	8	;
water	78:16	0:0	8	p_in
op	78:21	0:0	8	-=
water	78:24	0:0	8	p_pic
op	78:29	0:0	8	->
water	78:31	0:0	8	p
op	78:32	0:0	8	[
water	78:33	0:0	8	i_index
op	78:40	0:0	8	]
op	78:41	0:0	8	.
water	78:42	0:0	8	i_pitch
water	78:49	0:0	8	;
water	79:16	0:0	8	p_out
op	79:22	0:0	8	+=
water	79:25	0:0	8	p_outpic
op	79:33	0:0	8	->
water	79:35	0:0	8	p
op	79:36	0:0	8	[
water	79:37	0:0	8	i_index
op	79:44	0:0	8	]
op	79:45	0:0	8	.
water	79:46	0:0	8	i_pitch
water	79:53	0:0	8	;
water	80:12	0:0	8	}
water	81:8	0:0	6	}
water	82:4	0:0	4	}
return	83:4	83:48	2	CopyInfoAndRelease(p_outpic,p_pic)
call	83:11	83:47	3	CopyInfoAndRelease
arg	83:31	83:39	4	p_outpic
water	83:31	0:0	5	p_outpic
arg	83:41	83:47	4	p_pic
water	83:41	0:0	5	p_pic

func	2:0	161:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	160:22	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
decl	6:4	6:24	2	uint8_t	hdr[20]
decl	7:4	7:25	2	const uint8_t	*p_peek
decl	8:4	8:22	2	int	i_cat
decl	9:4	9:36	2	int	i_samples
water	9:26	0:0	2	,
decl	9:4	9:36	2	int	i_modulo
if	10:4	11:27	2	(stream_Peek (p_demux -> s ,& p_peek ,4 ) < 4)
cond	10:8	10:49	3	stream_Peek (p_demux -> s ,& p_peek ,4 ) < 4
call	10:8	10:45	4	stream_Peek
arg	10:21	10:32	5	p_demux->s
water	10:21	0:0	6	p_demux
op	10:28	0:0	6	->
water	10:30	0:0	6	s
arg	10:34	10:41	5	&p_peek
op	10:34	0:0	6	&
water	10:35	0:0	6	p_peek
arg	10:43	10:45	5	4
water	10:43	0:0	6	4
op	10:47	0:0	4	<
water	10:49	0:0	4	4
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
if	12:4	13:27	2	(memcmp (p_peek ,".snd" ,4 ))
cond	12:8	12:34	3	memcmp (p_peek ,".snd" ,4 )
call	12:8	12:34	4	memcmp
arg	12:16	12:22	5	p_peek
water	12:16	0:0	6	p_peek
arg	12:24	12:30	5	".snd"
water	12:24	0:0	6	".snd"
arg	12:32	12:34	5	4
water	12:32	0:0	6	4
stmts	13:8	13:27	3	
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
call	15:4	15:37	2	stream_Read
arg	15:17	15:27	3	p_demux->s
water	15:17	0:0	4	p_demux
op	15:24	0:0	4	->
water	15:26	0:0	4	s
arg	15:29	15:33	3	NULL
water	15:29	0:0	4	NULL
arg	15:35	15:37	3	4
water	15:35	0:0	4	4
water	15:38	0:0	2	;
if	17:4	21:4	2	(stream_Read (p_demux -> s ,hdr ,20 ) < 20)
cond	17:8	17:45	3	stream_Read (p_demux -> s ,hdr ,20 ) < 20
call	17:8	17:41	4	stream_Read
arg	17:21	17:31	5	p_demux->s
water	17:21	0:0	6	p_demux
op	17:28	0:0	6	->
water	17:30	0:0	6	s
arg	17:33	17:36	5	hdr
water	17:33	0:0	6	hdr
arg	17:38	17:41	5	20
water	17:38	0:0	6	20
op	17:43	0:0	4	<
water	17:45	0:0	4	20
stmts	18:4	21:4	3	
water	18:4	0:0	4	{
call	19:8	19:40	4	msg_Err
arg	19:17	19:24	5	p_demux
water	19:17	0:0	6	p_demux
arg	19:26	19:40	5	"cannot read"
water	19:26	0:0	6	"cannot read"
water	19:41	0:0	4	;
return	20:8	20:27	4	VLC_EGENERIC
water	20:15	0:0	5	VLC_EGENERIC
water	21:4	0:0	4	}
if	22:4	26:4	2	(GetDWBE (& hdr [ 0 ] ) < 24)
cond	22:8	22:30	3	GetDWBE (& hdr [ 0 ] ) < 24
call	22:8	22:26	4	GetDWBE
arg	22:17	22:26	5	&hdr[0]
op	22:17	0:0	6	&
water	22:18	0:0	6	hdr
op	22:21	0:0	6	[
water	22:22	0:0	6	0
op	22:23	0:0	6	]
op	22:28	0:0	4	<
water	22:30	0:0	4	24
stmts	23:4	26:4	3	
water	23:4	0:0	4	{
call	24:8	24:41	4	msg_Err
arg	24:17	24:24	5	p_demux
water	24:17	0:0	6	p_demux
arg	24:26	24:41	5	"invalid file"
water	24:26	0:0	6	"invalid file"
water	24:42	0:0	4	;
return	25:8	25:27	4	VLC_EGENERIC
water	25:15	0:0	5	VLC_EGENERIC
water	26:4	0:0	4	}
call	27:4	27:22	2	DEMUX_INIT_COMMON
water	27:23	0:0	2	;
water	27:25	0:0	2	p_sys
op	27:31	0:0	2	=
water	27:33	0:0	2	p_demux
op	27:40	0:0	2	->
water	27:42	0:0	2	p_sys
water	27:47	0:0	2	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	i_time
op	28:18	0:0	2	=
water	28:20	0:0	2	0
water	28:21	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	i_header_size
op	29:25	0:0	2	=
call	29:27	29:44	2	GetDWBE
arg	29:36	29:44	3	&hdr[0]
op	29:36	0:0	4	&
water	29:37	0:0	4	hdr
op	29:40	0:0	4	[
water	29:41	0:0	4	0
op	29:42	0:0	4	]
water	29:45	0:0	2	;
if	31:4	34:4	2	(p_sys -> i_header_size > 24)
cond	31:8	31:31	3	p_sys -> i_header_size > 24
water	31:8	0:0	4	p_sys
op	31:13	0:0	4	->
water	31:15	0:0	4	i_header_size
op	31:29	0:0	4	>
water	31:31	0:0	4	24
stmts	32:4	34:4	3	
water	32:4	0:0	4	{
call	33:8	33:65	4	stream_Read
arg	33:21	33:31	5	p_demux->s
water	33:21	0:0	6	p_demux
op	33:28	0:0	6	->
water	33:30	0:0	6	s
arg	33:33	33:37	5	NULL
water	33:33	0:0	6	NULL
arg	33:39	33:65	5	p_sys->i_header_size-24
water	33:39	0:0	6	p_sys
op	33:44	0:0	6	->
water	33:46	0:0	6	i_header_size
op	33:60	0:0	6	-
water	33:62	0:0	6	24
water	33:66	0:0	4	;
water	34:4	0:0	4	}
call	36:4	36:45	2	es_format_Init
arg	36:20	36:31	3	&p_sys->fmt
op	36:20	0:0	4	&
water	36:21	0:0	4	p_sys
op	36:26	0:0	4	->
water	36:28	0:0	4	fmt
arg	36:33	36:41	3	AUDIO_ES
water	36:33	0:0	4	AUDIO_ES
arg	36:43	36:45	3	0
water	36:43	0:0	4	0
water	36:46	0:0	2	;
water	37:4	0:0	2	p_sys
op	37:9	0:0	2	->
water	37:11	0:0	2	fmt
op	37:14	0:0	2	.
water	37:15	0:0	2	audio
op	37:20	0:0	2	.
water	37:21	0:0	2	i_rate
op	37:32	0:0	2	=
call	37:34	37:52	2	GetDWBE
arg	37:43	37:52	3	&hdr[12]
op	37:43	0:0	4	&
water	37:44	0:0	4	hdr
op	37:47	0:0	4	[
water	37:48	0:0	4	12
op	37:50	0:0	4	]
water	37:53	0:0	2	;
water	38:4	0:0	2	p_sys
op	38:9	0:0	2	->
water	38:11	0:0	2	fmt
op	38:14	0:0	2	.
water	38:15	0:0	2	audio
op	38:20	0:0	2	.
water	38:21	0:0	2	i_channels
op	38:32	0:0	2	=
call	38:34	38:52	2	GetDWBE
arg	38:43	38:52	3	&hdr[16]
op	38:43	0:0	4	&
water	38:44	0:0	4	hdr
op	38:47	0:0	4	[
water	38:48	0:0	4	16
op	38:50	0:0	4	]
water	38:53	0:0	2	;
water	40:4	0:0	2	p_sys
op	40:9	0:0	2	->
water	40:11	0:0	2	au
op	40:13	0:0	2	.
water	40:14	0:0	2	i_header_size
op	40:30	0:0	2	=
call	40:32	40:66	2	GetDWBE
arg	40:41	40:66	3	&p_sys->au.i_header_size
op	40:41	0:0	4	&
water	40:42	0:0	4	p_sys
op	40:47	0:0	4	->
water	40:49	0:0	4	au
op	40:51	0:0	4	.
water	40:52	0:0	4	i_header_size
water	40:67	0:0	2	;
water	41:4	0:0	2	p_sys
op	41:9	0:0	2	->
water	41:11	0:0	2	au
op	41:13	0:0	2	.
water	41:14	0:0	2	i_data_size
op	41:30	0:0	2	=
call	41:32	41:64	2	GetDWBE
arg	41:41	41:64	3	&p_sys->au.i_data_size
op	41:41	0:0	4	&
water	41:42	0:0	4	p_sys
op	41:47	0:0	4	->
water	41:49	0:0	4	au
op	41:51	0:0	4	.
water	41:52	0:0	4	i_data_size
water	41:65	0:0	2	;
water	42:4	0:0	2	p_sys
op	42:9	0:0	2	->
water	42:11	0:0	2	au
op	42:13	0:0	2	.
water	42:14	0:0	2	i_encoding
op	42:30	0:0	2	=
call	42:32	42:63	2	GetDWBE
arg	42:41	42:63	3	&p_sys->au.i_encoding
op	42:41	0:0	4	&
water	42:42	0:0	4	p_sys
op	42:47	0:0	4	->
water	42:49	0:0	4	au
op	42:51	0:0	4	.
water	42:52	0:0	4	i_encoding
water	42:64	0:0	2	;
water	43:4	0:0	2	p_sys
op	43:9	0:0	2	->
water	43:11	0:0	2	au
op	43:13	0:0	2	.
water	43:14	0:0	2	i_sample_rate
op	43:30	0:0	2	=
call	43:32	43:66	2	GetDWBE
arg	43:41	43:66	3	&p_sys->au.i_sample_rate
op	43:41	0:0	4	&
water	43:42	0:0	4	p_sys
op	43:47	0:0	4	->
water	43:49	0:0	4	au
op	43:51	0:0	4	.
water	43:52	0:0	4	i_sample_rate
water	43:67	0:0	2	;
water	44:4	0:0	2	p_sys
op	44:9	0:0	2	->
water	44:11	0:0	2	au
op	44:13	0:0	2	.
water	44:14	0:0	2	i_channels
op	44:30	0:0	2	=
call	44:32	44:63	2	GetDWBE
arg	44:41	44:63	3	&p_sys->au.i_channels
op	44:41	0:0	4	&
water	44:42	0:0	4	p_sys
op	44:47	0:0	4	->
water	44:49	0:0	4	au
op	44:51	0:0	4	.
water	44:52	0:0	4	i_channels
water	44:64	0:0	2	;
switch	46:4	126:4	2	(GetDWBE (& hdr [ 8 ] ))
cond	46:12	46:29	3	GetDWBE (& hdr [ 8 ] )
call	46:12	46:29	4	GetDWBE
arg	46:21	46:29	5	&hdr[8]
op	46:21	0:0	6	&
water	46:22	0:0	6	hdr
op	46:25	0:0	6	[
water	46:26	0:0	6	8
op	46:27	0:0	6	]
stmts	47:4	126:4	3	
water	47:4	0:0	4	{
label	48:8	48:22	4	case AU_ALAW_8 :
water	49:12	0:0	4	p_sys
op	49:17	0:0	4	->
water	49:19	0:0	4	fmt
op	49:22	0:0	4	.
water	49:23	0:0	4	i_codec
op	49:45	0:0	4	=
water	49:47	0:0	4	VLC_CODEC_ALAW
water	49:61	0:0	4	;
water	50:12	0:0	4	p_sys
op	50:17	0:0	4	->
water	50:19	0:0	4	fmt
op	50:22	0:0	4	.
water	50:23	0:0	4	audio
op	50:28	0:0	4	.
water	50:29	0:0	4	i_bitspersample
op	50:45	0:0	4	=
water	50:47	0:0	4	8
water	50:48	0:0	4	;
water	51:12	0:0	4	p_sys
op	51:17	0:0	4	->
water	51:19	0:0	4	fmt
op	51:22	0:0	4	.
water	51:23	0:0	4	audio
op	51:28	0:0	4	.
water	51:29	0:0	4	i_blockalign
op	51:45	0:0	4	=
water	51:47	0:0	4	1
op	51:49	0:0	4	*
water	51:51	0:0	4	p_sys
op	51:56	0:0	4	->
water	51:58	0:0	4	fmt
op	51:61	0:0	4	.
water	51:62	0:0	4	audio
op	51:67	0:0	4	.
water	51:68	0:0	4	i_channels
water	51:78	0:0	4	;
water	52:12	0:0	4	i_cat
op	52:37	0:0	4	=
water	52:39	0:0	4	AU_CAT_PCM
water	52:49	0:0	4	;
break	53:12	53:17	4	
label	54:8	54:23	4	case AU_MULAW_8 :
water	55:12	0:0	4	p_sys
op	55:17	0:0	4	->
water	55:19	0:0	4	fmt
op	55:22	0:0	4	.
water	55:23	0:0	4	i_codec
op	55:45	0:0	4	=
water	55:47	0:0	4	VLC_CODEC_MULAW
water	55:62	0:0	4	;
water	56:12	0:0	4	p_sys
op	56:17	0:0	4	->
water	56:19	0:0	4	fmt
op	56:22	0:0	4	.
water	56:23	0:0	4	audio
op	56:28	0:0	4	.
water	56:29	0:0	4	i_bitspersample
op	56:45	0:0	4	=
water	56:47	0:0	4	8
water	56:48	0:0	4	;
water	57:12	0:0	4	p_sys
op	57:17	0:0	4	->
water	57:19	0:0	4	fmt
op	57:22	0:0	4	.
water	57:23	0:0	4	audio
op	57:28	0:0	4	.
water	57:29	0:0	4	i_blockalign
op	57:45	0:0	4	=
water	57:47	0:0	4	1
op	57:49	0:0	4	*
water	57:51	0:0	4	p_sys
op	57:56	0:0	4	->
water	57:58	0:0	4	fmt
op	57:61	0:0	4	.
water	57:62	0:0	4	audio
op	57:67	0:0	4	.
water	57:68	0:0	4	i_channels
water	57:78	0:0	4	;
water	58:12	0:0	4	i_cat
op	58:37	0:0	4	=
water	58:39	0:0	4	AU_CAT_PCM
water	58:49	0:0	4	;
break	59:12	59:17	4	
label	60:8	60:24	4	case AU_LINEAR_8 :
water	61:12	0:0	4	p_sys
op	61:17	0:0	4	->
water	61:19	0:0	4	fmt
op	61:22	0:0	4	.
water	61:23	0:0	4	i_codec
op	61:45	0:0	4	=
call	61:47	61:75	4	VLC_FOURCC
arg	61:59	61:62	5	't'
water	61:59	0:0	6	't'
arg	61:63	61:66	5	'w'
water	61:63	0:0	6	'w'
arg	61:67	61:70	5	'o'
water	61:67	0:0	6	'o'
arg	61:71	61:75	5	's'
water	61:71	0:0	6	's'
water	61:76	0:0	4	;
water	62:12	0:0	4	p_sys
op	62:17	0:0	4	->
water	62:19	0:0	4	fmt
op	62:22	0:0	4	.
water	62:23	0:0	4	audio
op	62:28	0:0	4	.
water	62:29	0:0	4	i_bitspersample
op	62:45	0:0	4	=
water	62:47	0:0	4	8
water	62:48	0:0	4	;
water	63:12	0:0	4	p_sys
op	63:17	0:0	4	->
water	63:19	0:0	4	fmt
op	63:22	0:0	4	.
water	63:23	0:0	4	audio
op	63:28	0:0	4	.
water	63:29	0:0	4	i_blockalign
op	63:45	0:0	4	=
water	63:47	0:0	4	1
op	63:49	0:0	4	*
water	63:51	0:0	4	p_sys
op	63:56	0:0	4	->
water	63:58	0:0	4	fmt
op	63:61	0:0	4	.
water	63:62	0:0	4	audio
op	63:67	0:0	4	.
water	63:68	0:0	4	i_channels
water	63:78	0:0	4	;
water	64:12	0:0	4	i_cat
op	64:37	0:0	4	=
water	64:39	0:0	4	AU_CAT_PCM
water	64:49	0:0	4	;
break	65:12	65:17	4	
label	66:8	66:25	4	case AU_LINEAR_16 :
water	67:12	0:0	4	p_sys
op	67:17	0:0	4	->
water	67:19	0:0	4	fmt
op	67:22	0:0	4	.
water	67:23	0:0	4	i_codec
op	67:45	0:0	4	=
call	67:47	67:75	4	VLC_FOURCC
arg	67:59	67:62	5	't'
water	67:59	0:0	6	't'
arg	67:63	67:66	5	'w'
water	67:63	0:0	6	'w'
arg	67:67	67:70	5	'o'
water	67:67	0:0	6	'o'
arg	67:71	67:75	5	's'
water	67:71	0:0	6	's'
water	67:76	0:0	4	;
water	68:12	0:0	4	p_sys
op	68:17	0:0	4	->
water	68:19	0:0	4	fmt
op	68:22	0:0	4	.
water	68:23	0:0	4	audio
op	68:28	0:0	4	.
water	68:29	0:0	4	i_bitspersample
op	68:45	0:0	4	=
water	68:47	0:0	4	16
water	68:49	0:0	4	;
water	69:12	0:0	4	p_sys
op	69:17	0:0	4	->
water	69:19	0:0	4	fmt
op	69:22	0:0	4	.
water	69:23	0:0	4	audio
op	69:28	0:0	4	.
water	69:29	0:0	4	i_blockalign
op	69:45	0:0	4	=
water	69:47	0:0	4	2
op	69:49	0:0	4	*
water	69:51	0:0	4	p_sys
op	69:56	0:0	4	->
water	69:58	0:0	4	fmt
op	69:61	0:0	4	.
water	69:62	0:0	4	audio
op	69:67	0:0	4	.
water	69:68	0:0	4	i_channels
water	69:78	0:0	4	;
water	70:12	0:0	4	i_cat
op	70:37	0:0	4	=
water	70:39	0:0	4	AU_CAT_PCM
water	70:49	0:0	4	;
break	71:12	71:17	4	
label	72:8	72:25	4	case AU_LINEAR_24 :
water	73:12	0:0	4	p_sys
op	73:17	0:0	4	->
water	73:19	0:0	4	fmt
op	73:22	0:0	4	.
water	73:23	0:0	4	i_codec
op	73:45	0:0	4	=
call	73:47	73:75	4	VLC_FOURCC
arg	73:59	73:62	5	't'
water	73:59	0:0	6	't'
arg	73:63	73:66	5	'w'
water	73:63	0:0	6	'w'
arg	73:67	73:70	5	'o'
water	73:67	0:0	6	'o'
arg	73:71	73:75	5	's'
water	73:71	0:0	6	's'
water	73:76	0:0	4	;
water	74:12	0:0	4	p_sys
op	74:17	0:0	4	->
water	74:19	0:0	4	fmt
op	74:22	0:0	4	.
water	74:23	0:0	4	audio
op	74:28	0:0	4	.
water	74:29	0:0	4	i_bitspersample
op	74:45	0:0	4	=
water	74:47	0:0	4	24
water	74:49	0:0	4	;
water	75:12	0:0	4	p_sys
op	75:17	0:0	4	->
water	75:19	0:0	4	fmt
op	75:22	0:0	4	.
water	75:23	0:0	4	audio
op	75:28	0:0	4	.
water	75:29	0:0	4	i_blockalign
op	75:45	0:0	4	=
water	75:47	0:0	4	3
op	75:49	0:0	4	*
water	75:51	0:0	4	p_sys
op	75:56	0:0	4	->
water	75:58	0:0	4	fmt
op	75:61	0:0	4	.
water	75:62	0:0	4	audio
op	75:67	0:0	4	.
water	75:68	0:0	4	i_channels
water	75:78	0:0	4	;
water	76:12	0:0	4	i_cat
op	76:37	0:0	4	=
water	76:39	0:0	4	AU_CAT_PCM
water	76:49	0:0	4	;
break	77:12	77:17	4	
label	78:8	78:25	4	case AU_LINEAR_32 :
water	79:12	0:0	4	p_sys
op	79:17	0:0	4	->
water	79:19	0:0	4	fmt
op	79:22	0:0	4	.
water	79:23	0:0	4	i_codec
op	79:45	0:0	4	=
call	79:47	79:75	4	VLC_FOURCC
arg	79:59	79:62	5	't'
water	79:59	0:0	6	't'
arg	79:63	79:66	5	'w'
water	79:63	0:0	6	'w'
arg	79:67	79:70	5	'o'
water	79:67	0:0	6	'o'
arg	79:71	79:75	5	's'
water	79:71	0:0	6	's'
water	79:76	0:0	4	;
water	80:12	0:0	4	p_sys
op	80:17	0:0	4	->
water	80:19	0:0	4	fmt
op	80:22	0:0	4	.
water	80:23	0:0	4	audio
op	80:28	0:0	4	.
water	80:29	0:0	4	i_bitspersample
op	80:45	0:0	4	=
water	80:47	0:0	4	32
water	80:49	0:0	4	;
water	81:12	0:0	4	p_sys
op	81:17	0:0	4	->
water	81:19	0:0	4	fmt
op	81:22	0:0	4	.
water	81:23	0:0	4	audio
op	81:28	0:0	4	.
water	81:29	0:0	4	i_blockalign
op	81:45	0:0	4	=
water	81:47	0:0	4	4
op	81:49	0:0	4	*
water	81:51	0:0	4	p_sys
op	81:56	0:0	4	->
water	81:58	0:0	4	fmt
op	81:61	0:0	4	.
water	81:62	0:0	4	audio
op	81:67	0:0	4	.
water	81:68	0:0	4	i_channels
water	81:78	0:0	4	;
water	82:12	0:0	4	i_cat
op	82:37	0:0	4	=
water	82:39	0:0	4	AU_CAT_PCM
water	82:49	0:0	4	;
break	83:12	83:17	4	
label	84:8	84:21	4	case AU_FLOAT :
water	85:12	0:0	4	p_sys
op	85:17	0:0	4	->
water	85:19	0:0	4	fmt
op	85:22	0:0	4	.
water	85:23	0:0	4	i_codec
op	85:45	0:0	4	=
call	85:47	85:81	4	VLC_FOURCC
arg	85:59	85:62	5	'a'
water	85:59	0:0	6	'a'
arg	85:64	85:67	5	'u'
water	85:64	0:0	6	'u'
arg	85:69	85:70	5	0
water	85:69	0:0	6	0
arg	85:72	85:81	5	AU_FLOAT
water	85:72	0:0	6	AU_FLOAT
water	85:82	0:0	4	;
water	86:12	0:0	4	p_sys
op	86:17	0:0	4	->
water	86:19	0:0	4	fmt
op	86:22	0:0	4	.
water	86:23	0:0	4	audio
op	86:28	0:0	4	.
water	86:29	0:0	4	i_bitspersample
op	86:45	0:0	4	=
water	86:47	0:0	4	32
water	86:49	0:0	4	;
water	87:12	0:0	4	p_sys
op	87:17	0:0	4	->
water	87:19	0:0	4	fmt
op	87:22	0:0	4	.
water	87:23	0:0	4	audio
op	87:28	0:0	4	.
water	87:29	0:0	4	i_blockalign
op	87:45	0:0	4	=
water	87:47	0:0	4	4
op	87:49	0:0	4	*
water	87:51	0:0	4	p_sys
op	87:56	0:0	4	->
water	87:58	0:0	4	fmt
op	87:61	0:0	4	.
water	87:62	0:0	4	audio
op	87:67	0:0	4	.
water	87:68	0:0	4	i_channels
water	87:78	0:0	4	;
water	88:12	0:0	4	i_cat
op	88:37	0:0	4	=
water	88:39	0:0	4	AU_CAT_PCM
water	88:49	0:0	4	;
break	89:12	89:17	4	
label	90:8	90:22	4	case AU_DOUBLE :
water	91:12	0:0	4	p_sys
op	91:17	0:0	4	->
water	91:19	0:0	4	fmt
op	91:22	0:0	4	.
water	91:23	0:0	4	i_codec
op	91:45	0:0	4	=
call	91:47	91:82	4	VLC_FOURCC
arg	91:59	91:62	5	'a'
water	91:59	0:0	6	'a'
arg	91:64	91:67	5	'u'
water	91:64	0:0	6	'u'
arg	91:69	91:70	5	0
water	91:69	0:0	6	0
arg	91:72	91:82	5	AU_DOUBLE
water	91:72	0:0	6	AU_DOUBLE
water	91:83	0:0	4	;
water	92:12	0:0	4	p_sys
op	92:17	0:0	4	->
water	92:19	0:0	4	fmt
op	92:22	0:0	4	.
water	92:23	0:0	4	audio
op	92:28	0:0	4	.
water	92:29	0:0	4	i_bitspersample
op	92:45	0:0	4	=
water	92:47	0:0	4	64
water	92:49	0:0	4	;
water	93:12	0:0	4	p_sys
op	93:17	0:0	4	->
water	93:19	0:0	4	fmt
op	93:22	0:0	4	.
water	93:23	0:0	4	audio
op	93:28	0:0	4	.
water	93:29	0:0	4	i_blockalign
op	93:45	0:0	4	=
water	93:47	0:0	4	8
op	93:49	0:0	4	*
water	93:51	0:0	4	p_sys
op	93:56	0:0	4	->
water	93:58	0:0	4	fmt
op	93:61	0:0	4	.
water	93:62	0:0	4	audio
op	93:67	0:0	4	.
water	93:68	0:0	4	i_channels
water	93:78	0:0	4	;
water	94:12	0:0	4	i_cat
op	94:37	0:0	4	=
water	94:39	0:0	4	AU_CAT_PCM
water	94:49	0:0	4	;
break	95:12	95:17	4	
label	96:8	96:26	4	case AU_ADPCM_G721 :
water	97:12	0:0	4	p_sys
op	97:17	0:0	4	->
water	97:19	0:0	4	fmt
op	97:22	0:0	4	.
water	97:23	0:0	4	i_codec
op	97:45	0:0	4	=
call	97:47	97:86	4	VLC_FOURCC
arg	97:59	97:62	5	'a'
water	97:59	0:0	6	'a'
arg	97:64	97:67	5	'u'
water	97:64	0:0	6	'u'
arg	97:69	97:70	5	0
water	97:69	0:0	6	0
arg	97:72	97:86	5	AU_ADPCM_G721
water	97:72	0:0	6	AU_ADPCM_G721
water	97:87	0:0	4	;
water	98:12	0:0	4	p_sys
op	98:17	0:0	4	->
water	98:19	0:0	4	fmt
op	98:22	0:0	4	.
water	98:23	0:0	4	audio
op	98:28	0:0	4	.
water	98:29	0:0	4	i_bitspersample
op	98:45	0:0	4	=
water	98:47	0:0	4	0
water	98:48	0:0	4	;
water	99:12	0:0	4	p_sys
op	99:17	0:0	4	->
water	99:19	0:0	4	fmt
op	99:22	0:0	4	.
water	99:23	0:0	4	audio
op	99:28	0:0	4	.
water	99:29	0:0	4	i_blockalign
op	99:45	0:0	4	=
water	99:47	0:0	4	0
op	99:49	0:0	4	*
water	99:51	0:0	4	p_sys
op	99:56	0:0	4	->
water	99:58	0:0	4	fmt
op	99:61	0:0	4	.
water	99:62	0:0	4	audio
op	99:67	0:0	4	.
water	99:68	0:0	4	i_channels
water	99:78	0:0	4	;
water	100:12	0:0	4	i_cat
op	100:37	0:0	4	=
water	100:39	0:0	4	AU_CAT_ADPCM
water	100:51	0:0	4	;
break	101:12	101:17	4	
label	102:8	102:26	4	case AU_ADPCM_G722 :
water	103:12	0:0	4	p_sys
op	103:17	0:0	4	->
water	103:19	0:0	4	fmt
op	103:22	0:0	4	.
water	103:23	0:0	4	i_codec
op	103:45	0:0	4	=
call	103:47	103:86	4	VLC_FOURCC
arg	103:59	103:62	5	'a'
water	103:59	0:0	6	'a'
arg	103:64	103:67	5	'u'
water	103:64	0:0	6	'u'
arg	103:69	103:70	5	0
water	103:69	0:0	6	0
arg	103:72	103:86	5	AU_ADPCM_G722
water	103:72	0:0	6	AU_ADPCM_G722
water	103:87	0:0	4	;
water	104:12	0:0	4	p_sys
op	104:17	0:0	4	->
water	104:19	0:0	4	fmt
op	104:22	0:0	4	.
water	104:23	0:0	4	audio
op	104:28	0:0	4	.
water	104:29	0:0	4	i_bitspersample
op	104:45	0:0	4	=
water	104:47	0:0	4	0
water	104:48	0:0	4	;
water	105:12	0:0	4	p_sys
op	105:17	0:0	4	->
water	105:19	0:0	4	fmt
op	105:22	0:0	4	.
water	105:23	0:0	4	audio
op	105:28	0:0	4	.
water	105:29	0:0	4	i_blockalign
op	105:45	0:0	4	=
water	105:47	0:0	4	0
op	105:49	0:0	4	*
water	105:51	0:0	4	p_sys
op	105:56	0:0	4	->
water	105:58	0:0	4	fmt
op	105:61	0:0	4	.
water	105:62	0:0	4	audio
op	105:67	0:0	4	.
water	105:68	0:0	4	i_channels
water	105:78	0:0	4	;
water	106:12	0:0	4	i_cat
op	106:37	0:0	4	=
water	106:39	0:0	4	AU_CAT_ADPCM
water	106:51	0:0	4	;
break	107:12	107:17	4	
label	108:8	108:28	4	case AU_ADPCM_G723_3 :
water	109:12	0:0	4	p_sys
op	109:17	0:0	4	->
water	109:19	0:0	4	fmt
op	109:22	0:0	4	.
water	109:23	0:0	4	i_codec
op	109:45	0:0	4	=
call	109:47	109:88	4	VLC_FOURCC
arg	109:59	109:62	5	'a'
water	109:59	0:0	6	'a'
arg	109:64	109:67	5	'u'
water	109:64	0:0	6	'u'
arg	109:69	109:70	5	0
water	109:69	0:0	6	0
arg	109:72	109:88	5	AU_ADPCM_G723_3
water	109:72	0:0	6	AU_ADPCM_G723_3
water	109:89	0:0	4	;
water	110:12	0:0	4	p_sys
op	110:17	0:0	4	->
water	110:19	0:0	4	fmt
op	110:22	0:0	4	.
water	110:23	0:0	4	audio
op	110:28	0:0	4	.
water	110:29	0:0	4	i_bitspersample
op	110:45	0:0	4	=
water	110:47	0:0	4	0
water	110:48	0:0	4	;
water	111:12	0:0	4	p_sys
op	111:17	0:0	4	->
water	111:19	0:0	4	fmt
op	111:22	0:0	4	.
water	111:23	0:0	4	audio
op	111:28	0:0	4	.
water	111:29	0:0	4	i_blockalign
op	111:45	0:0	4	=
water	111:47	0:0	4	0
op	111:49	0:0	4	*
water	111:51	0:0	4	p_sys
op	111:56	0:0	4	->
water	111:58	0:0	4	fmt
op	111:61	0:0	4	.
water	111:62	0:0	4	audio
op	111:67	0:0	4	.
water	111:68	0:0	4	i_channels
water	111:78	0:0	4	;
water	112:12	0:0	4	i_cat
op	112:37	0:0	4	=
water	112:39	0:0	4	AU_CAT_ADPCM
water	112:51	0:0	4	;
break	113:12	113:17	4	
label	114:8	114:28	4	case AU_ADPCM_G723_5 :
water	115:12	0:0	4	p_sys
op	115:17	0:0	4	->
water	115:19	0:0	4	fmt
op	115:22	0:0	4	.
water	115:23	0:0	4	i_codec
op	115:45	0:0	4	=
call	115:47	115:88	4	VLC_FOURCC
arg	115:59	115:62	5	'a'
water	115:59	0:0	6	'a'
arg	115:64	115:67	5	'u'
water	115:64	0:0	6	'u'
arg	115:69	115:70	5	0
water	115:69	0:0	6	0
arg	115:72	115:88	5	AU_ADPCM_G723_5
water	115:72	0:0	6	AU_ADPCM_G723_5
water	115:89	0:0	4	;
water	116:12	0:0	4	p_sys
op	116:17	0:0	4	->
water	116:19	0:0	4	fmt
op	116:22	0:0	4	.
water	116:23	0:0	4	audio
op	116:28	0:0	4	.
water	116:29	0:0	4	i_bitspersample
op	116:45	0:0	4	=
water	116:47	0:0	4	0
water	116:48	0:0	4	;
water	117:12	0:0	4	p_sys
op	117:17	0:0	4	->
water	117:19	0:0	4	fmt
op	117:22	0:0	4	.
water	117:23	0:0	4	audio
op	117:28	0:0	4	.
water	117:29	0:0	4	i_blockalign
op	117:45	0:0	4	=
water	117:47	0:0	4	0
op	117:49	0:0	4	*
water	117:51	0:0	4	p_sys
op	117:56	0:0	4	->
water	117:58	0:0	4	fmt
op	117:61	0:0	4	.
water	117:62	0:0	4	audio
op	117:67	0:0	4	.
water	117:68	0:0	4	i_channels
water	117:78	0:0	4	;
water	118:12	0:0	4	i_cat
op	118:37	0:0	4	=
water	118:39	0:0	4	AU_CAT_ADPCM
water	118:51	0:0	4	;
break	119:12	119:17	4	
label	120:8	120:15	4	default :
call	121:12	121:74	4	msg_Warn
arg	121:22	121:29	5	p_demux
water	121:22	0:0	6	p_demux
arg	121:31	121:53	5	"unknow encoding=0x%x"
water	121:31	0:0	6	"unknow encoding=0x%x"
arg	121:55	121:74	5	GetDWBE(&hdr[8])
call	121:55	121:72	6	GetDWBE
arg	121:64	121:72	7	&hdr[8]
op	121:64	0:0	8	&
water	121:65	0:0	8	hdr
op	121:68	0:0	8	[
water	121:69	0:0	8	8
op	121:70	0:0	8	]
water	121:75	0:0	4	;
water	122:12	0:0	4	p_sys
op	122:17	0:0	4	->
water	122:19	0:0	4	fmt
op	122:22	0:0	4	.
water	122:23	0:0	4	audio
op	122:28	0:0	4	.
water	122:29	0:0	4	i_bitspersample
op	122:45	0:0	4	=
water	122:47	0:0	4	0
water	122:48	0:0	4	;
water	123:12	0:0	4	p_sys
op	123:17	0:0	4	->
water	123:19	0:0	4	fmt
op	123:22	0:0	4	.
water	123:23	0:0	4	audio
op	123:28	0:0	4	.
water	123:29	0:0	4	i_blockalign
op	123:45	0:0	4	=
water	123:47	0:0	4	0
water	123:48	0:0	4	;
water	124:12	0:0	4	i_cat
op	124:37	0:0	4	=
water	124:39	0:0	4	AU_CAT_UNKNOWN
water	124:53	0:0	4	;
break	125:12	125:17	4	
water	126:4	0:0	4	}
water	127:4	0:0	2	p_sys
op	127:9	0:0	2	->
water	127:11	0:0	2	fmt
op	127:14	0:0	2	.
water	127:15	0:0	2	i_bitrate
op	127:25	0:0	2	=
water	127:27	0:0	2	p_sys
op	127:32	0:0	2	->
water	127:34	0:0	2	fmt
op	127:37	0:0	2	.
water	127:38	0:0	2	audio
op	127:43	0:0	2	.
water	127:44	0:0	2	i_rate
op	127:51	0:0	2	*
water	128:27	0:0	2	p_sys
op	128:32	0:0	2	->
water	128:34	0:0	2	fmt
op	128:37	0:0	2	.
water	128:38	0:0	2	audio
op	128:43	0:0	2	.
water	128:44	0:0	2	i_channels
op	128:55	0:0	2	*
water	129:27	0:0	2	p_sys
op	129:32	0:0	2	->
water	129:34	0:0	2	fmt
op	129:37	0:0	2	.
water	129:38	0:0	2	audio
op	129:43	0:0	2	.
water	129:44	0:0	2	i_bitspersample
water	129:59	0:0	2	;
if	130:4	137:4	2	(i_cat == AU_CAT_UNKNOWN || i_cat == AU_CAT_ADPCM)
cond	130:8	130:44	3	i_cat == AU_CAT_UNKNOWN || i_cat == AU_CAT_ADPCM
water	130:8	0:0	4	i_cat
op	130:14	0:0	4	==
water	130:17	0:0	4	AU_CAT_UNKNOWN
op	130:32	0:0	4	||
water	130:35	0:0	4	i_cat
op	130:41	0:0	4	==
water	130:44	0:0	4	AU_CAT_ADPCM
stmts	131:4	137:4	3	
water	131:4	0:0	4	{
water	132:8	0:0	4	p_sys
op	132:13	0:0	4	->
water	132:15	0:0	4	i_frame_size
op	132:28	0:0	4	=
water	132:30	0:0	4	0
water	132:31	0:0	4	;
water	133:8	0:0	4	p_sys
op	133:13	0:0	4	->
water	133:15	0:0	4	i_frame_length
op	133:30	0:0	4	=
water	133:32	0:0	4	0
water	133:33	0:0	4	;
call	134:8	134:70	4	msg_Err
arg	134:17	134:24	5	p_demux
water	134:17	0:0	6	p_demux
arg	134:26	134:70	5	"unsupported codec/type (Please report it)"
water	134:26	0:0	6	"unsupported codec/type (Please report it)"
water	134:71	0:0	4	;
call	135:8	135:20	4	free
arg	135:14	135:20	5	p_sys
water	135:14	0:0	6	p_sys
water	135:21	0:0	4	;
return	136:8	136:27	4	VLC_EGENERIC
water	136:15	0:0	5	VLC_EGENERIC
water	137:4	0:0	4	}
if	138:4	143:4	2	(p_sys -> fmt . audio . i_rate == 0)
cond	138:8	138:35	3	p_sys -> fmt . audio . i_rate == 0
water	138:8	0:0	4	p_sys
op	138:13	0:0	4	->
water	138:15	0:0	4	fmt
op	138:18	0:0	4	.
water	138:19	0:0	4	audio
op	138:24	0:0	4	.
water	138:25	0:0	4	i_rate
op	138:32	0:0	4	==
water	138:35	0:0	4	0
stmts	139:4	143:4	3	
water	139:4	0:0	4	{
call	140:8	140:50	4	msg_Err
arg	140:17	140:24	5	p_demux
water	140:17	0:0	6	p_demux
arg	140:26	140:50	5	"invalid samplerate: 0"
water	140:26	0:0	6	"invalid samplerate: 0"
water	140:51	0:0	4	;
call	141:8	141:20	4	free
arg	141:14	141:20	5	p_sys
water	141:14	0:0	6	p_sys
water	141:21	0:0	4	;
return	142:8	142:27	4	VLC_EGENERIC
water	142:15	0:0	5	VLC_EGENERIC
water	143:4	0:0	4	}
water	145:4	0:0	2	p_sys
op	145:9	0:0	2	->
water	145:11	0:0	2	es
op	145:14	0:0	2	=
call	145:16	145:54	2	es_out_Add
arg	145:28	145:40	3	p_demux->out
water	145:28	0:0	4	p_demux
op	145:35	0:0	4	->
water	145:37	0:0	4	out
arg	145:42	145:54	3	&p_sys->fmt
op	145:42	0:0	4	&
water	145:43	0:0	4	p_sys
op	145:48	0:0	4	->
water	145:50	0:0	4	fmt
water	145:55	0:0	2	;
water	147:4	0:0	2	i_samples
op	147:14	0:0	2	=
call	147:16	147:55	2	__MAX
arg	147:23	147:51	3	p_sys->fmt.audio.i_rate/20
water	147:23	0:0	4	p_sys
op	147:28	0:0	4	->
water	147:30	0:0	4	fmt
op	147:33	0:0	4	.
water	147:34	0:0	4	audio
op	147:39	0:0	4	.
water	147:40	0:0	4	i_rate
op	147:47	0:0	4	/
water	147:49	0:0	4	20
arg	147:53	147:55	3	1
water	147:53	0:0	4	1
water	147:56	0:0	2	;
water	148:4	0:0	2	p_sys
op	148:9	0:0	2	->
water	148:11	0:0	2	i_frame_size
op	148:24	0:0	2	=
water	148:26	0:0	2	i_samples
op	148:36	0:0	2	*
water	148:38	0:0	2	p_sys
op	148:43	0:0	2	->
water	148:45	0:0	2	fmt
op	148:48	0:0	2	.
water	148:49	0:0	2	audio
op	148:54	0:0	2	.
water	148:55	0:0	2	i_channels
op	148:66	0:0	2	*
water	149:26	0:0	2	(
water	149:28	0:0	2	(
water	149:29	0:0	2	p_sys
op	149:34	0:0	2	->
water	149:36	0:0	2	fmt
op	149:39	0:0	2	.
water	149:40	0:0	2	audio
op	149:45	0:0	2	.
water	149:46	0:0	2	i_bitspersample
op	149:62	0:0	2	+
water	149:64	0:0	2	7
water	149:65	0:0	2	)
op	149:67	0:0	2	/
water	149:69	0:0	2	8
water	149:71	0:0	2	)
water	149:72	0:0	2	;
if	150:4	156:4	2	(p_sys -> fmt . audio . i_blockalign > 0)
cond	150:8	150:40	3	p_sys -> fmt . audio . i_blockalign > 0
water	150:8	0:0	4	p_sys
op	150:13	0:0	4	->
water	150:15	0:0	4	fmt
op	150:18	0:0	4	.
water	150:19	0:0	4	audio
op	150:24	0:0	4	.
water	150:25	0:0	4	i_blockalign
op	150:38	0:0	4	>
water	150:40	0:0	4	0
stmts	151:4	156:4	3	
water	151:4	0:0	4	{
if	152:8	155:8	4	(( i_modulo = p_sys -> i_frame_size % p_sys -> fmt . audio . i_blockalign ) != 0)
cond	152:12	152:82	5	( i_modulo = p_sys -> i_frame_size % p_sys -> fmt . audio . i_blockalign ) != 0
water	152:12	0:0	6	(
water	152:14	0:0	6	i_modulo
op	152:23	0:0	6	=
water	152:25	0:0	6	p_sys
op	152:30	0:0	6	->
water	152:32	0:0	6	i_frame_size
op	152:45	0:0	6	%
water	152:47	0:0	6	p_sys
op	152:52	0:0	6	->
water	152:54	0:0	6	fmt
op	152:57	0:0	6	.
water	152:58	0:0	6	audio
op	152:63	0:0	6	.
water	152:64	0:0	6	i_blockalign
water	152:77	0:0	6	)
op	152:79	0:0	6	!=
water	152:82	0:0	6	0
stmts	153:8	155:8	5	
water	153:8	0:0	6	{
water	154:12	0:0	6	p_sys
op	154:17	0:0	6	->
water	154:19	0:0	6	i_frame_size
op	154:32	0:0	6	+=
water	154:35	0:0	6	p_sys
op	154:40	0:0	6	->
water	154:42	0:0	6	fmt
op	154:45	0:0	6	.
water	154:46	0:0	6	audio
op	154:51	0:0	6	.
water	154:52	0:0	6	i_blockalign
op	154:65	0:0	6	-
water	154:67	0:0	6	i_modulo
water	154:75	0:0	6	;
water	155:8	0:0	6	}
water	156:4	0:0	4	}
water	157:4	0:0	2	p_sys
op	157:9	0:0	2	->
water	157:11	0:0	2	i_frame_length
op	157:26	0:0	2	=
water	157:28	0:0	2	(
water	157:29	0:0	2	mtime_t
water	157:36	0:0	2	)
water	157:37	0:0	2	1000000
op	157:45	0:0	2	*
water	158:28	0:0	2	(
water	158:29	0:0	2	mtime_t
water	158:36	0:0	2	)
water	158:37	0:0	2	i_samples
op	158:47	0:0	2	/
water	159:28	0:0	2	(
water	159:29	0:0	2	mtime_t
water	159:36	0:0	2	)
water	159:37	0:0	2	p_sys
op	159:42	0:0	2	->
water	159:44	0:0	2	fmt
op	159:47	0:0	2	.
water	159:48	0:0	2	audio
op	159:53	0:0	2	.
water	159:54	0:0	2	i_rate
water	159:60	0:0	2	;
return	160:4	160:22	2	VLC_SUCCESS
water	160:11	0:0	3	VLC_SUCCESS

func	2:0	46:0	0	static void	CloseDecoder
params	2:24	0:0	1	
param	2:25	2:45	2	vlc_object_t *	p_this
stmnts	0:0	45:15	1	
decl	4:4	4:42	2	decoder_t	*p_dec
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	decoder_t
op	4:34	0:0	2	*
water	4:35	0:0	2	)
water	4:36	0:0	2	p_this
decl	5:4	5:39	2	decoder_sys_t	*p_sys
op	5:25	0:0	2	=
water	5:27	0:0	2	p_dec
op	5:32	0:0	2	->
water	5:34	0:0	2	p_sys
decl	6:4	6:22	2	JNIEnv	*env
op	6:16	0:0	2	=
water	6:18	0:0	2	NULL
if	7:4	8:14	2	(! p_sys)
cond	7:8	7:9	3	! p_sys
op	7:8	0:0	4	!
water	7:9	0:0	4	p_sys
stmts	8:8	8:14	3	
return	8:8	8:14	4	
if	11:4	12:36	2	(p_sys -> direct_rendering)
cond	11:8	11:15	3	p_sys -> direct_rendering
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	direct_rendering
stmts	12:8	12:36	3	
call	12:8	12:35	4	InvalidateAllPictures
arg	12:30	12:35	5	p_dec
water	12:30	0:0	6	p_dec
water	12:36	0:0	4	;
call	13:4	13:39	2	jni_attach_thread
arg	13:22	13:26	3	&env
op	13:22	0:0	4	&
water	13:23	0:0	4	env
arg	13:28	13:39	3	THREAD_NAME
water	13:28	0:0	4	THREAD_NAME
water	13:40	0:0	2	;
if	14:4	15:58	2	(p_sys -> input_buffers)
cond	14:8	14:15	3	p_sys -> input_buffers
water	14:8	0:0	4	p_sys
op	14:13	0:0	4	->
water	14:15	0:0	4	input_buffers
stmts	15:8	15:58	3	
water	15:8	0:0	4	(
op	15:9	0:0	4	*
water	15:10	0:0	4	env
water	15:13	0:0	4	)
op	15:14	0:0	4	->
call	15:16	15:57	4	DeleteGlobalRef
arg	15:32	15:35	5	env
water	15:32	0:0	6	env
arg	15:37	15:57	5	p_sys->input_buffers
water	15:37	0:0	6	p_sys
op	15:42	0:0	6	->
water	15:44	0:0	6	input_buffers
water	15:58	0:0	4	;
if	16:4	17:59	2	(p_sys -> output_buffers)
cond	16:8	16:15	3	p_sys -> output_buffers
water	16:8	0:0	4	p_sys
op	16:13	0:0	4	->
water	16:15	0:0	4	output_buffers
stmts	17:8	17:59	3	
water	17:8	0:0	4	(
op	17:9	0:0	4	*
water	17:10	0:0	4	env
water	17:13	0:0	4	)
op	17:14	0:0	4	->
call	17:16	17:58	4	DeleteGlobalRef
arg	17:32	17:35	5	env
water	17:32	0:0	6	env
arg	17:37	17:58	5	p_sys->output_buffers
water	17:37	0:0	6	p_sys
op	17:42	0:0	6	->
water	17:44	0:0	6	output_buffers
water	17:59	0:0	4	;
if	18:4	36:4	2	(p_sys -> codec)
cond	18:8	18:15	3	p_sys -> codec
water	18:8	0:0	4	p_sys
op	18:13	0:0	4	->
water	18:15	0:0	4	codec
stmts	18:22	36:4	3	
water	18:22	0:0	4	{
if	19:8	26:8	4	(p_sys -> started)
cond	19:12	19:19	5	p_sys -> started
water	19:12	0:0	6	p_sys
op	19:17	0:0	6	->
water	19:19	0:0	6	started
stmts	20:8	26:8	5	
water	20:8	0:0	6	{
water	21:12	0:0	6	(
op	21:13	0:0	6	*
water	21:14	0:0	6	env
water	21:17	0:0	6	)
op	21:18	0:0	6	->
call	21:20	21:65	6	CallVoidMethod
arg	21:35	21:38	7	env
water	21:35	0:0	8	env
arg	21:40	21:52	7	p_sys->codec
water	21:40	0:0	8	p_sys
op	21:45	0:0	8	->
water	21:47	0:0	8	codec
arg	21:54	21:65	7	p_sys->stop
water	21:54	0:0	8	p_sys
op	21:59	0:0	8	->
water	21:61	0:0	8	stop
water	21:66	0:0	6	;
if	22:12	25:12	6	(( * env ) ->ExceptionOccurred (env ))
cond	22:16	22:45	7	( * env ) ->ExceptionOccurred (env )
water	22:16	0:0	8	(
op	22:17	0:0	8	*
water	22:18	0:0	8	env
water	22:21	0:0	8	)
op	22:22	0:0	8	->
call	22:24	22:45	8	ExceptionOccurred
arg	22:42	22:45	9	env
water	22:42	0:0	10	env
stmts	22:48	25:12	7	
water	22:48	0:0	8	{
call	23:16	23:61	8	msg_Err
arg	23:24	23:29	9	p_dec
water	23:24	0:0	10	p_dec
arg	23:31	23:61	9	"Exception in MediaCodec.stop"
water	23:31	0:0	10	"Exception in MediaCodec.stop"
water	23:62	0:0	8	;
water	24:16	0:0	8	(
op	24:17	0:0	8	*
water	24:18	0:0	8	env
water	24:21	0:0	8	)
op	24:22	0:0	8	->
call	24:24	24:42	8	ExceptionClear
arg	24:39	24:42	9	env
water	24:39	0:0	10	env
water	24:43	0:0	8	;
water	25:12	0:0	8	}
water	26:8	0:0	6	}
if	27:8	34:8	4	(p_sys -> allocated)
cond	27:12	27:19	5	p_sys -> allocated
water	27:12	0:0	6	p_sys
op	27:17	0:0	6	->
water	27:19	0:0	6	allocated
stmts	28:8	34:8	5	
water	28:8	0:0	6	{
water	29:12	0:0	6	(
op	29:13	0:0	6	*
water	29:14	0:0	6	env
water	29:17	0:0	6	)
op	29:18	0:0	6	->
call	29:20	29:68	6	CallVoidMethod
arg	29:35	29:38	7	env
water	29:35	0:0	8	env
arg	29:40	29:52	7	p_sys->codec
water	29:40	0:0	8	p_sys
op	29:45	0:0	8	->
water	29:47	0:0	8	codec
arg	29:54	29:68	7	p_sys->release
water	29:54	0:0	8	p_sys
op	29:59	0:0	8	->
water	29:61	0:0	8	release
water	29:69	0:0	6	;
if	30:12	33:12	6	(( * env ) ->ExceptionOccurred (env ))
cond	30:16	30:45	7	( * env ) ->ExceptionOccurred (env )
water	30:16	0:0	8	(
op	30:17	0:0	8	*
water	30:18	0:0	8	env
water	30:21	0:0	8	)
op	30:22	0:0	8	->
call	30:24	30:45	8	ExceptionOccurred
arg	30:42	30:45	9	env
water	30:42	0:0	10	env
stmts	30:48	33:12	7	
water	30:48	0:0	8	{
call	31:16	31:64	8	msg_Err
arg	31:24	31:29	9	p_dec
water	31:24	0:0	10	p_dec
arg	31:31	31:64	9	"Exception in MediaCodec.release"
water	31:31	0:0	10	"Exception in MediaCodec.release"
water	31:65	0:0	8	;
water	32:16	0:0	8	(
op	32:17	0:0	8	*
water	32:18	0:0	8	env
water	32:21	0:0	8	)
op	32:22	0:0	8	->
call	32:24	32:42	8	ExceptionClear
arg	32:39	32:42	9	env
water	32:39	0:0	10	env
water	32:43	0:0	8	;
water	33:12	0:0	8	}
water	34:8	0:0	6	}
water	35:8	0:0	4	(
op	35:9	0:0	4	*
water	35:10	0:0	4	env
water	35:13	0:0	4	)
op	35:14	0:0	4	->
call	35:16	35:49	4	DeleteGlobalRef
arg	35:32	35:35	5	env
water	35:32	0:0	6	env
arg	35:37	35:49	5	p_sys->codec
water	35:37	0:0	6	p_sys
op	35:42	0:0	6	->
water	35:44	0:0	6	codec
water	35:50	0:0	4	;
water	36:4	0:0	4	}
if	37:4	38:56	2	(p_sys -> buffer_info)
cond	37:8	37:15	3	p_sys -> buffer_info
water	37:8	0:0	4	p_sys
op	37:13	0:0	4	->
water	37:15	0:0	4	buffer_info
stmts	38:8	38:56	3	
water	38:8	0:0	4	(
op	38:9	0:0	4	*
water	38:10	0:0	4	env
water	38:13	0:0	4	)
op	38:14	0:0	4	->
call	38:16	38:55	4	DeleteGlobalRef
arg	38:32	38:35	5	env
water	38:32	0:0	6	env
arg	38:37	38:55	5	p_sys->buffer_info
water	38:37	0:0	6	p_sys
op	38:42	0:0	6	->
water	38:44	0:0	6	buffer_info
water	38:56	0:0	4	;
call	39:4	39:22	2	jni_detach_thread
water	39:23	0:0	2	;
call	40:4	40:20	2	free
arg	40:9	40:20	3	p_sys->name
water	40:9	0:0	4	p_sys
op	40:14	0:0	4	->
water	40:16	0:0	4	name
water	40:21	0:0	2	;
call	41:4	41:96	2	ArchitectureSpecificCopyHooksDestroy
arg	41:41	41:60	3	p_sys->pixel_format
water	41:41	0:0	4	p_sys
op	41:46	0:0	4	->
water	41:48	0:0	4	pixel_format
arg	41:62	41:96	3	&p_sys->architecture_specific_data
op	41:62	0:0	4	&
water	41:63	0:0	4	p_sys
op	41:68	0:0	4	->
water	41:70	0:0	4	architecture_specific_data
water	41:97	0:0	2	;
call	42:4	42:32	2	free
arg	42:9	42:32	3	p_sys->inflight_picture
water	42:9	0:0	4	p_sys
op	42:14	0:0	4	->
water	42:16	0:0	4	inflight_picture
water	42:33	0:0	2	;
if	43:4	44:52	2	(p_sys -> timestamp_fifo)
cond	43:8	43:15	3	p_sys -> timestamp_fifo
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	timestamp_fifo
stmts	44:8	44:52	3	
call	44:8	44:51	4	timestamp_FifoRelease
arg	44:30	44:51	5	p_sys->timestamp_fifo
water	44:30	0:0	6	p_sys
op	44:35	0:0	6	->
water	44:37	0:0	6	timestamp_fifo
water	44:52	0:0	4	;
call	45:4	45:14	2	free
arg	45:9	45:14	3	p_sys
water	45:9	0:0	4	p_sys
water	45:15	0:0	2	;

func	2:0	63:0	0	static int	DirectXCreateSurface
params	2:31	0:0	1	
param	2:32	2:50	2	vout_display_t *	vd
param	3:32	3:61	2	LPDIRECTDRAWSURFACE2 *	surface
param	4:32	4:57	2	const video_format_t *	fmt
param	5:32	5:44	2	DWORD	fourcc
param	6:32	6:48	2	bool	use_overlay
param	7:32	7:47	2	bool	use_sysmem
param	8:32	8:52	2	int	backbuffer_count
stmnts	0:0	62:22	1	
decl	10:4	10:37	2	vout_display_sys_t	*sys
op	10:28	0:0	2	=
water	10:30	0:0	2	vd
op	10:32	0:0	2	->
water	10:34	0:0	2	sys
decl	11:4	11:22	2	DDSURFACEDESC	ddsd
call	12:4	12:34	2	ZeroMemory
arg	12:15	12:20	3	&ddsd
op	12:15	0:0	4	&
water	12:16	0:0	4	ddsd
arg	12:22	12:34	3	sizeof(ddsd)
op	12:22	0:0	4	sizeof
water	12:28	0:0	4	(
water	12:29	0:0	4	ddsd
water	12:33	0:0	4	)
water	12:35	0:0	2	;
water	13:4	0:0	2	ddsd
op	13:8	0:0	2	.
water	13:9	0:0	2	dwSize
op	13:18	0:0	2	=
op	13:20	0:0	2	sizeof
water	13:26	0:0	2	(
water	13:27	0:0	2	ddsd
water	13:31	0:0	2	)
water	13:32	0:0	2	;
water	14:4	0:0	2	ddsd
op	14:8	0:0	2	.
water	14:9	0:0	2	ddpfPixelFormat
op	14:24	0:0	2	.
water	14:25	0:0	2	dwSize
op	14:32	0:0	2	=
op	14:34	0:0	2	sizeof
water	14:40	0:0	2	(
water	14:41	0:0	2	ddsd
op	14:45	0:0	2	.
water	14:46	0:0	2	ddpfPixelFormat
water	14:61	0:0	2	)
water	14:62	0:0	2	;
water	15:4	0:0	2	ddsd
op	15:8	0:0	2	.
water	15:9	0:0	2	dwFlags
op	15:18	0:0	2	=
water	15:20	0:0	2	DDSD_HEIGHT
op	15:32	0:0	2	|
water	15:34	0:0	2	DDSD_WIDTH
water	15:44	0:0	2	;
water	16:4	0:0	2	ddsd
op	16:8	0:0	2	.
water	16:9	0:0	2	dwWidth
op	16:18	0:0	2	=
water	16:20	0:0	2	fmt
op	16:23	0:0	2	->
water	16:25	0:0	2	i_width
water	16:32	0:0	2	;
water	17:4	0:0	2	ddsd
op	17:8	0:0	2	.
water	17:9	0:0	2	dwHeight
op	17:18	0:0	2	=
water	17:20	0:0	2	fmt
op	17:23	0:0	2	->
water	17:25	0:0	2	i_height
water	17:33	0:0	2	;
if	18:4	22:4	2	(fourcc)
cond	18:8	18:8	3	fourcc
water	18:8	0:0	4	fourcc
stmts	18:16	22:4	3	
water	18:16	0:0	4	{
water	19:8	0:0	4	ddsd
op	19:12	0:0	4	.
water	19:13	0:0	4	dwFlags
op	19:21	0:0	4	|=
water	19:24	0:0	4	DDSD_PIXELFORMAT
water	19:40	0:0	4	;
water	20:8	0:0	4	ddsd
op	20:12	0:0	4	.
water	20:13	0:0	4	ddpfPixelFormat
op	20:28	0:0	4	.
water	20:29	0:0	4	dwFlags
op	20:37	0:0	4	=
water	20:39	0:0	4	DDPF_FOURCC
water	20:50	0:0	4	;
water	21:8	0:0	4	ddsd
op	21:12	0:0	4	.
water	21:13	0:0	4	ddpfPixelFormat
op	21:28	0:0	4	.
water	21:29	0:0	4	dwFourCC
op	21:38	0:0	4	=
water	21:40	0:0	4	fourcc
water	21:46	0:0	4	;
water	22:4	0:0	4	}
if	23:4	32:4	2	(use_overlay)
cond	23:8	23:8	3	use_overlay
water	23:8	0:0	4	use_overlay
stmts	23:21	32:4	3	
water	23:21	0:0	4	{
water	24:8	0:0	4	ddsd
op	24:12	0:0	4	.
water	24:13	0:0	4	dwFlags
op	24:21	0:0	4	|=
water	24:24	0:0	4	DDSD_CAPS
water	24:33	0:0	4	;
water	25:8	0:0	4	ddsd
op	25:12	0:0	4	.
water	25:13	0:0	4	ddsCaps
op	25:20	0:0	4	.
water	25:21	0:0	4	dwCaps
op	25:28	0:0	4	=
water	25:30	0:0	4	DDSCAPS_OVERLAY
op	25:46	0:0	4	|
water	25:48	0:0	4	DDSCAPS_VIDEOMEMORY
water	25:67	0:0	4	;
if	26:8	27:65	4	(backbuffer_count > 0)
cond	26:12	26:31	5	backbuffer_count > 0
water	26:12	0:0	6	backbuffer_count
op	26:29	0:0	6	>
water	26:31	0:0	6	0
stmts	27:12	27:65	5	
water	27:12	0:0	6	ddsd
op	27:16	0:0	6	.
water	27:17	0:0	6	ddsCaps
op	27:24	0:0	6	.
water	27:25	0:0	6	dwCaps
op	27:32	0:0	6	|=
water	27:35	0:0	6	DDSCAPS_COMPLEX
op	27:51	0:0	6	|
water	27:53	0:0	6	DDSCAPS_FLIP
water	27:65	0:0	6	;
if	28:8	31:8	4	(backbuffer_count > 0)
cond	28:12	28:31	5	backbuffer_count > 0
water	28:12	0:0	6	backbuffer_count
op	28:29	0:0	6	>
water	28:31	0:0	6	0
stmts	28:34	31:8	5	
water	28:34	0:0	6	{
water	29:12	0:0	6	ddsd
op	29:16	0:0	6	.
water	29:17	0:0	6	dwFlags
op	29:25	0:0	6	|=
water	29:28	0:0	6	DDSD_BACKBUFFERCOUNT
water	29:48	0:0	6	;
water	30:12	0:0	6	ddsd
op	30:16	0:0	6	.
water	30:17	0:0	6	dwBackBufferCount
op	30:35	0:0	6	=
water	30:37	0:0	6	backbuffer_count
water	30:53	0:0	6	;
water	31:8	0:0	6	}
water	32:4	0:0	4	}
else	32:6	39:4	2
stmts	32:11	39:4	3	
water	32:11	0:0	4	{
water	33:8	0:0	4	ddsd
op	33:12	0:0	4	.
water	33:13	0:0	4	dwFlags
op	33:21	0:0	4	|=
water	33:24	0:0	4	DDSD_CAPS
water	33:33	0:0	4	;
water	34:8	0:0	4	ddsd
op	34:12	0:0	4	.
water	34:13	0:0	4	ddsCaps
op	34:20	0:0	4	.
water	34:21	0:0	4	dwCaps
op	34:28	0:0	4	=
water	34:30	0:0	4	DDSCAPS_OFFSCREENPLAIN
water	34:52	0:0	4	;
if	35:8	36:55	4	(use_sysmem)
cond	35:12	35:12	5	use_sysmem
water	35:12	0:0	6	use_sysmem
stmts	36:12	36:55	5	
water	36:12	0:0	6	ddsd
op	36:16	0:0	6	.
water	36:17	0:0	6	ddsCaps
op	36:24	0:0	6	.
water	36:25	0:0	6	dwCaps
op	36:32	0:0	6	|=
water	36:35	0:0	6	DDSCAPS_SYSTEMMEMORY
water	36:55	0:0	6	;
else	37:8	38:54	4
stmts	38:12	38:54	5	
water	38:12	0:0	6	ddsd
op	38:16	0:0	6	.
water	38:17	0:0	6	ddsCaps
op	38:24	0:0	6	.
water	38:25	0:0	6	dwCaps
op	38:32	0:0	6	|=
water	38:35	0:0	6	DDSCAPS_VIDEOMEMORY
water	38:54	0:0	6	;
water	39:4	0:0	4	}
decl	41:4	41:34	2	LPDIRECTDRAWSURFACE	surface_v1
if	42:4	43:27	2	(IDirectDraw2_CreateSurface (sys -> ddobject ,& ddsd ,& surface_v1 ,NULL ) != DD_OK)
cond	42:8	42:79	3	IDirectDraw2_CreateSurface (sys -> ddobject ,& ddsd ,& surface_v1 ,NULL ) != DD_OK
call	42:8	42:74	4	IDirectDraw2_CreateSurface
arg	42:35	42:48	5	sys->ddobject
water	42:35	0:0	6	sys
op	42:38	0:0	6	->
water	42:40	0:0	6	ddobject
arg	42:50	42:55	5	&ddsd
op	42:50	0:0	6	&
water	42:51	0:0	6	ddsd
arg	42:57	42:68	5	&surface_v1
op	42:57	0:0	6	&
water	42:58	0:0	6	surface_v1
arg	42:70	42:74	5	NULL
water	42:70	0:0	6	NULL
op	42:76	0:0	4	!=
water	42:79	0:0	4	DD_OK
stmts	43:8	43:27	3	
return	43:8	43:27	4	VLC_EGENERIC
water	43:15	0:0	5	VLC_EGENERIC
decl	45:4	47:69	2	HRESULT	hr
op	45:15	0:0	2	=
call	45:17	47:68	3	IDirectDrawSurface_QueryInterface
arg	45:51	45:61	4	surface_v1
water	45:51	0:0	5	surface_v1
arg	46:51	46:75	4	&IID_IDirectDrawSurface2
op	46:51	0:0	5	&
water	46:52	0:0	5	IID_IDirectDrawSurface2
arg	47:51	47:68	4	(LPVOID*)surface
water	47:51	0:0	5	(
water	47:52	0:0	5	LPVOID
op	47:59	0:0	5	*
water	47:60	0:0	5	)
water	47:61	0:0	5	surface
call	48:4	48:41	2	IDirectDrawSurface_Release
arg	48:31	48:41	3	surface_v1
water	48:31	0:0	4	surface_v1
water	48:42	0:0	2	;
if	49:4	52:4	2	(hr != DD_OK)
cond	49:8	49:14	3	hr != DD_OK
water	49:8	0:0	4	hr
op	49:11	0:0	4	!=
water	49:14	0:0	4	DD_OK
stmts	49:21	52:4	3	
water	49:21	0:0	4	{
call	50:8	50:80	4	msg_Err
arg	50:16	50:18	5	vd
water	50:16	0:0	6	vd
arg	50:20	50:76	5	"cannot query IDirectDrawSurface2 interface (error %li)"
water	50:20	0:0	6	"cannot query IDirectDrawSurface2 interface (error %li)"
arg	50:78	50:80	5	hr
water	50:78	0:0	6	hr
water	50:81	0:0	4	;
return	51:8	51:27	4	VLC_EGENERIC
water	51:15	0:0	5	VLC_EGENERIC
water	52:4	0:0	4	}
if	53:4	61:4	2	(use_overlay)
cond	53:8	53:8	3	use_overlay
water	53:8	0:0	4	use_overlay
stmts	53:21	61:4	3	
water	53:21	0:0	4	{
if	56:8	60:8	4	(DirectXUpdateOverlay (vd ,* surface ))
cond	56:12	56:45	5	DirectXUpdateOverlay (vd ,* surface )
call	56:12	56:45	6	DirectXUpdateOverlay
arg	56:33	56:35	7	vd
water	56:33	0:0	8	vd
arg	56:37	56:45	7	*surface
op	56:37	0:0	8	*
water	56:38	0:0	8	surface
stmts	56:48	60:8	5	
water	56:48	0:0	6	{
call	57:12	57:48	6	IDirectDrawSurface2_Release
arg	57:40	57:48	7	*surface
op	57:40	0:0	8	*
water	57:41	0:0	8	surface
water	57:49	0:0	6	;
call	58:12	58:69	6	msg_Err
arg	58:20	58:22	7	vd
water	58:20	0:0	8	vd
arg	58:24	58:69	7	"overlay unuseable (might already be in use)"
water	58:24	0:0	8	"overlay unuseable (might already be in use)"
water	58:70	0:0	6	;
return	59:12	59:31	6	VLC_EGENERIC
water	59:19	0:0	7	VLC_EGENERIC
water	60:8	0:0	6	}
water	61:4	0:0	4	}
return	62:4	62:22	2	VLC_SUCCESS
water	62:11	0:0	3	VLC_SUCCESS

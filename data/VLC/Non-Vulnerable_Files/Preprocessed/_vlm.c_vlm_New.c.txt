func	2:0	65:0	0	vlm_t *	vlm_New
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	64:16	1	
decl	4:4	4:76	2	vlm_t	*p_vlm
op	4:17	0:0	2	=
water	4:19	0:0	2	NULL
water	4:23	0:0	2	,
decl	4:4	4:76	2	vlm_t	**pp_vlm
op	4:34	0:0	2	=
op	4:36	0:0	2	&
water	4:37	0:0	2	(
call	4:38	4:67	3	libvlc_priv
arg	4:51	4:67	4	p_this->p_libvlc
water	4:51	0:0	5	p_this
op	4:57	0:0	5	->
water	4:59	0:0	5	p_libvlc
op	4:68	0:0	2	->
water	4:70	0:0	2	p_vlm
water	4:75	0:0	2	)
decl	5:4	5:21	2	char	*psz_vlmconf
call	7:4	7:31	2	vlc_mutex_lock
arg	7:20	7:31	3	&vlm_mutex
op	7:20	0:0	4	&
water	7:21	0:0	4	vlm_mutex
water	7:32	0:0	2	;
water	8:4	0:0	2	p_vlm
op	8:10	0:0	2	=
op	8:12	0:0	2	*
water	8:13	0:0	2	pp_vlm
water	8:19	0:0	2	;
if	9:4	17:4	2	(p_vlm)
cond	9:8	9:8	3	p_vlm
water	9:8	0:0	4	p_vlm
stmts	10:4	17:4	3	
water	10:4	0:0	4	{
if	11:8	12:26	4	(likely (p_vlm -> users < UINT_MAX ))
cond	11:12	11:44	5	likely (p_vlm -> users < UINT_MAX )
call	11:12	11:44	6	likely
arg	11:20	11:44	7	p_vlm->users<UINT_MAX
water	11:20	0:0	8	p_vlm
op	11:25	0:0	8	->
water	11:27	0:0	8	users
op	11:33	0:0	8	<
water	11:35	0:0	8	UINT_MAX
stmts	12:12	12:26	5	
water	12:12	0:0	6	p_vlm
op	12:17	0:0	6	->
water	12:19	0:0	6	users
op	12:24	0:0	6	++
water	12:26	0:0	6	;
else	13:8	14:24	4
stmts	14:12	14:24	5	
water	14:12	0:0	6	p_vlm
op	14:18	0:0	6	=
water	14:20	0:0	6	NULL
water	14:24	0:0	6	;
call	15:8	15:37	4	vlc_mutex_unlock
arg	15:26	15:37	5	&vlm_mutex
op	15:26	0:0	6	&
water	15:27	0:0	6	vlm_mutex
water	15:38	0:0	4	;
return	16:8	16:20	4	p_vlm
water	16:15	0:0	5	p_vlm
water	17:4	0:0	4	}
call	18:4	18:36	2	msg_Dbg
arg	18:13	18:19	3	p_this
water	18:13	0:0	4	p_this
arg	18:21	18:36	3	"creating VLM"
water	18:21	0:0	4	"creating VLM"
water	18:37	0:0	2	;
water	19:4	0:0	2	p_vlm
op	19:10	0:0	2	=
call	19:12	20:44	2	vlc_custom_create
arg	19:31	19:47	3	p_this->p_libvlc
water	19:31	0:0	4	p_this
op	19:37	0:0	4	->
water	19:39	0:0	4	p_libvlc
arg	19:49	19:65	3	sizeof(*p_vlm)
op	19:49	0:0	4	sizeof
water	19:55	0:0	4	(
op	19:57	0:0	4	*
water	19:58	0:0	4	p_vlm
water	19:64	0:0	4	)
arg	20:31	20:44	3	"vlm daemon"
water	20:31	0:0	4	"vlm daemon"
water	20:45	0:0	2	;
if	21:4	25:4	2	(! p_vlm)
cond	21:8	21:9	3	! p_vlm
op	21:8	0:0	4	!
water	21:9	0:0	4	p_vlm
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:37	4	vlc_mutex_unlock
arg	23:26	23:37	5	&vlm_mutex
op	23:26	0:0	6	&
water	23:27	0:0	6	vlm_mutex
water	23:38	0:0	4	;
return	24:8	24:19	4	NULL
water	24:15	0:0	5	NULL
water	25:4	0:0	4	}
call	26:4	26:33	2	vlc_mutex_init
arg	26:20	26:33	3	&p_vlm->lock
op	26:20	0:0	4	&
water	26:21	0:0	4	p_vlm
op	26:26	0:0	4	->
water	26:28	0:0	4	lock
water	26:34	0:0	2	;
call	27:4	27:40	2	vlc_mutex_init
arg	27:20	27:40	3	&p_vlm->lock_manage
op	27:20	0:0	4	&
water	27:21	0:0	4	p_vlm
op	27:26	0:0	4	->
water	27:28	0:0	4	lock_manage
water	27:41	0:0	2	;
call	28:4	28:47	2	vlc_cond_init_daytime
arg	28:27	28:47	3	&p_vlm->wait_manage
op	28:27	0:0	4	&
water	28:28	0:0	4	p_vlm
op	28:33	0:0	4	->
water	28:35	0:0	4	wait_manage
water	28:48	0:0	2	;
water	29:4	0:0	2	p_vlm
op	29:9	0:0	2	->
water	29:11	0:0	2	users
op	29:17	0:0	2	=
water	29:19	0:0	2	1
water	29:20	0:0	2	;
water	30:4	0:0	2	p_vlm
op	30:9	0:0	2	->
water	30:11	0:0	2	input_state_changed
op	30:31	0:0	2	=
water	30:33	0:0	2	false
water	30:38	0:0	2	;
water	31:4	0:0	2	p_vlm
op	31:9	0:0	2	->
water	31:11	0:0	2	i_id
op	31:16	0:0	2	=
water	31:18	0:0	2	1
water	31:19	0:0	2	;
call	32:4	32:43	2	TAB_INIT
arg	32:14	32:28	3	p_vlm->i_media
water	32:14	0:0	4	p_vlm
op	32:19	0:0	4	->
water	32:21	0:0	4	i_media
arg	32:30	32:43	3	p_vlm->media
water	32:30	0:0	4	p_vlm
op	32:35	0:0	4	->
water	32:37	0:0	4	media
water	32:44	0:0	2	;
call	33:4	33:49	2	TAB_INIT
arg	33:14	33:31	3	p_vlm->i_schedule
water	33:14	0:0	4	p_vlm
op	33:19	0:0	4	->
water	33:21	0:0	4	i_schedule
arg	33:33	33:49	3	p_vlm->schedule
water	33:33	0:0	4	p_vlm
op	33:38	0:0	4	->
water	33:40	0:0	4	schedule
water	33:50	0:0	2	;
water	34:4	0:0	2	p_vlm
op	34:9	0:0	2	->
water	34:11	0:0	2	p_vod
op	34:17	0:0	2	=
water	34:19	0:0	2	NULL
water	34:23	0:0	2	;
call	35:4	35:53	2	var_Create
arg	35:16	35:21	3	p_vlm
water	35:16	0:0	4	p_vlm
arg	35:23	35:35	3	"intf-event"
water	35:23	0:0	4	"intf-event"
arg	35:37	35:53	3	VLC_VAR_ADDRESS
water	35:37	0:0	4	VLC_VAR_ADDRESS
water	35:54	0:0	2	;
if	36:4	44:4	2	(vlc_clone (& p_vlm -> thread ,Manage ,p_vlm ,VLC_THREAD_PRIORITY_LOW ))
cond	36:8	36:74	3	vlc_clone (& p_vlm -> thread ,Manage ,p_vlm ,VLC_THREAD_PRIORITY_LOW )
call	36:8	36:74	4	vlc_clone
arg	36:19	36:33	5	&p_vlm->thread
op	36:19	0:0	6	&
water	36:20	0:0	6	p_vlm
op	36:25	0:0	6	->
water	36:27	0:0	6	thread
arg	36:35	36:41	5	Manage
water	36:35	0:0	6	Manage
arg	36:43	36:48	5	p_vlm
water	36:43	0:0	6	p_vlm
arg	36:50	36:74	5	VLC_THREAD_PRIORITY_LOW
water	36:50	0:0	6	VLC_THREAD_PRIORITY_LOW
stmts	37:4	44:4	3	
water	37:4	0:0	4	{
call	38:8	38:46	4	vlc_cond_destroy
arg	38:26	38:46	5	&p_vlm->wait_manage
op	38:26	0:0	6	&
water	38:27	0:0	6	p_vlm
op	38:32	0:0	6	->
water	38:34	0:0	6	wait_manage
water	38:47	0:0	4	;
call	39:8	39:40	4	vlc_mutex_destroy
arg	39:27	39:40	5	&p_vlm->lock
op	39:27	0:0	6	&
water	39:28	0:0	6	p_vlm
op	39:33	0:0	6	->
water	39:35	0:0	6	lock
water	39:41	0:0	4	;
call	40:8	40:47	4	vlc_mutex_destroy
arg	40:27	40:47	5	&p_vlm->lock_manage
op	40:27	0:0	6	&
water	40:28	0:0	6	p_vlm
op	40:33	0:0	6	->
water	40:35	0:0	6	lock_manage
water	40:48	0:0	4	;
call	41:8	41:34	4	vlc_object_release
arg	41:28	41:34	5	p_vlm
water	41:28	0:0	6	p_vlm
water	41:35	0:0	4	;
call	42:8	42:37	4	vlc_mutex_unlock
arg	42:26	42:37	5	&vlm_mutex
op	42:26	0:0	6	&
water	42:27	0:0	6	vlm_mutex
water	42:38	0:0	4	;
return	43:8	43:19	4	NULL
water	43:15	0:0	5	NULL
water	44:4	0:0	4	}
op	45:4	0:0	2	*
water	45:5	0:0	2	pp_vlm
op	45:12	0:0	2	=
water	45:14	0:0	2	p_vlm
water	45:19	0:0	2	;
water	47:4	0:0	2	psz_vlmconf
op	47:16	0:0	2	=
call	47:18	47:57	2	var_CreateGetString
arg	47:39	47:44	3	p_vlm
water	47:39	0:0	4	p_vlm
arg	47:46	47:57	3	"vlm-conf"
water	47:46	0:0	4	"vlm-conf"
water	47:58	0:0	2	;
if	48:4	61:4	2	(psz_vlmconf && * psz_vlmconf)
cond	48:8	48:24	3	psz_vlmconf && * psz_vlmconf
water	48:8	0:0	4	psz_vlmconf
op	48:20	0:0	4	&&
op	48:23	0:0	4	*
water	48:24	0:0	4	psz_vlmconf
stmts	49:4	61:4	3	
water	49:4	0:0	4	{
decl	50:8	50:39	4	vlm_message_t	*p_message
op	50:33	0:0	4	=
water	50:35	0:0	4	NULL
decl	51:8	51:31	4	char	*psz_buffer
op	51:25	0:0	4	=
water	51:27	0:0	4	NULL
call	52:8	52:53	4	msg_Dbg
arg	52:17	52:23	5	p_this
water	52:17	0:0	6	p_this
arg	52:25	52:53	5	"loading VLM configuration"
water	52:25	0:0	6	"loading VLM configuration"
water	52:54	0:0	4	;
if	53:8	60:8	4	(asprintf (& psz_buffer ,"load %s" ,psz_vlmconf ) != - 1)
cond	53:12	53:63	5	asprintf (& psz_buffer ,"load %s" ,psz_vlmconf ) != - 1
call	53:12	53:57	6	asprintf
arg	53:21	53:32	7	&psz_buffer
op	53:21	0:0	8	&
water	53:22	0:0	8	psz_buffer
arg	53:34	53:43	7	"load %s"
water	53:34	0:0	8	"load %s"
arg	53:45	53:57	7	psz_vlmconf
water	53:45	0:0	8	psz_vlmconf
op	53:59	0:0	6	!=
op	53:62	0:0	6	-
water	53:63	0:0	6	1
stmts	54:8	60:8	5	
water	54:8	0:0	6	{
call	55:12	55:46	6	msg_Dbg
arg	55:21	55:27	7	p_this
water	55:21	0:0	8	p_this
arg	55:29	55:33	7	"%s"
water	55:29	0:0	8	"%s"
arg	55:35	55:46	7	psz_buffer
water	55:35	0:0	8	psz_buffer
water	55:47	0:0	6	;
if	56:12	57:80	6	(vlm_ExecuteCommand (p_vlm ,psz_buffer ,& p_message ))
cond	56:16	56:66	7	vlm_ExecuteCommand (p_vlm ,psz_buffer ,& p_message )
call	56:16	56:66	8	vlm_ExecuteCommand
arg	56:36	56:41	9	p_vlm
water	56:36	0:0	10	p_vlm
arg	56:43	56:53	9	psz_buffer
water	56:43	0:0	10	psz_buffer
arg	56:55	56:66	9	&p_message
op	56:55	0:0	10	&
water	56:56	0:0	10	p_message
stmts	57:16	57:80	7	
call	57:16	57:79	8	msg_Warn
arg	57:26	57:32	9	p_this
water	57:26	0:0	10	p_this
arg	57:34	57:79	9	"error while loading the configuration file"
water	57:34	0:0	10	"error while loading the configuration file"
water	57:80	0:0	8	;
call	58:12	58:41	6	vlm_MessageDelete
arg	58:31	58:41	7	p_message
water	58:31	0:0	8	p_message
water	58:42	0:0	6	;
call	59:12	59:29	6	free
arg	59:18	59:29	7	psz_buffer
water	59:18	0:0	8	psz_buffer
water	59:30	0:0	6	;
water	60:8	0:0	6	}
water	61:4	0:0	4	}
call	62:4	62:22	2	free
arg	62:10	62:22	3	psz_vlmconf
water	62:10	0:0	4	psz_vlmconf
water	62:23	0:0	2	;
call	63:4	63:33	2	vlc_mutex_unlock
arg	63:22	63:33	3	&vlm_mutex
op	63:22	0:0	4	&
water	63:23	0:0	4	vlm_mutex
water	63:34	0:0	2	;
return	64:4	64:16	2	p_vlm
water	64:11	0:0	3	p_vlm

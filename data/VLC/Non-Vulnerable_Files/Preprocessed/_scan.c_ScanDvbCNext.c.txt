func	2:0	96:0	0	static int	ScanDvbCNext
params	2:23	0:0	1	
param	2:25	2:39	2	scan_t *	p_scan
param	2:41	2:68	2	scan_configuration_t *	p_cfg
param	2:70	2:85	2	double *	pf_pos
stmnts	0:0	95:56	1	
decl	4:4	4:31	2	bool	b_servicefound
op	4:24	0:0	2	=
water	4:26	0:0	2	false
for	11:4	28:4	2	( int i = 0 ;i < p_scan -> i_service;i ++)
forinit	0:0	11:18	3	 int i = 0 ;
decl	11:9	11:18	4	int	i
op	11:15	0:0	4	=
water	11:17	0:0	4	0
cond	11:20	11:32	3	i < p_scan -> i_service
water	11:20	0:0	4	i
op	11:22	0:0	4	<
water	11:24	0:0	4	p_scan
op	11:30	0:0	4	->
water	11:32	0:0	4	i_service
forexpr	11:43	11:44	3	i ++
water	11:43	0:0	4	i
op	11:44	0:0	4	++
stmts	12:4	28:4	3	
water	12:4	0:0	4	{
if	16:8	27:8	4	(! p_scan -> pp_service [ i ] -> psz_name && ( p_scan -> pp_service [ i ] -> type != SERVICE_UNKNOWN ))
cond	16:12	16:97	5	! p_scan -> pp_service [ i ] -> psz_name && ( p_scan -> pp_service [ i ] -> type != SERVICE_UNKNOWN )
op	16:12	0:0	6	!
water	16:13	0:0	6	p_scan
op	16:19	0:0	6	->
water	16:21	0:0	6	pp_service
op	16:31	0:0	6	[
water	16:32	0:0	6	i
op	16:33	0:0	6	]
op	16:34	0:0	6	->
water	16:36	0:0	6	psz_name
op	16:45	0:0	6	&&
water	16:48	0:0	6	(
water	16:50	0:0	6	p_scan
op	16:56	0:0	6	->
water	16:58	0:0	6	pp_service
op	16:68	0:0	6	[
water	16:69	0:0	6	i
op	16:70	0:0	6	]
op	16:71	0:0	6	->
water	16:73	0:0	6	type
op	16:78	0:0	6	!=
water	16:81	0:0	6	SERVICE_UNKNOWN
water	16:97	0:0	6	)
stmts	17:8	27:8	5	
water	17:8	0:0	6	{
water	18:12	0:0	6	p_cfg
op	18:17	0:0	6	->
water	18:19	0:0	6	i_frequency
op	18:32	0:0	6	=
water	18:34	0:0	6	p_scan
op	18:40	0:0	6	->
water	18:42	0:0	6	pp_service
op	18:52	0:0	6	[
water	18:53	0:0	6	i
op	18:54	0:0	6	]
op	18:55	0:0	6	->
water	18:57	0:0	6	cfg
op	18:60	0:0	6	.
water	18:61	0:0	6	i_frequency
water	18:72	0:0	6	;
water	19:12	0:0	6	p_cfg
op	19:17	0:0	6	->
water	19:19	0:0	6	i_symbolrate
op	19:32	0:0	6	=
water	19:34	0:0	6	p_scan
op	19:40	0:0	6	->
water	19:42	0:0	6	pp_service
op	19:52	0:0	6	[
water	19:53	0:0	6	i
op	19:54	0:0	6	]
op	19:55	0:0	6	->
water	19:57	0:0	6	cfg
op	19:60	0:0	6	.
water	19:61	0:0	6	i_symbolrate
water	19:73	0:0	6	;
water	20:12	0:0	6	p_cfg
op	20:17	0:0	6	->
water	20:19	0:0	6	i_modulation
op	20:32	0:0	6	=
water	20:34	0:0	6	p_scan
op	20:40	0:0	6	->
water	20:42	0:0	6	pp_service
op	20:52	0:0	6	[
water	20:53	0:0	6	i
op	20:54	0:0	6	]
op	20:55	0:0	6	->
water	20:57	0:0	6	cfg
op	20:60	0:0	6	.
water	20:61	0:0	6	i_modulation
water	20:73	0:0	6	;
water	21:12	0:0	6	p_scan
op	21:18	0:0	6	->
water	21:20	0:0	6	i_index
op	21:28	0:0	6	=
water	21:30	0:0	6	i
op	21:31	0:0	6	+
water	21:32	0:0	6	1
water	21:33	0:0	6	;
call	22:12	24:118	6	msg_Dbg
arg	22:21	22:34	7	p_scan->p_obj
water	22:21	0:0	8	p_scan
op	22:27	0:0	8	->
water	22:29	0:0	8	p_obj
arg	22:36	23:55	7	"iterating to freq: %u, symbolrate %u, ""modulation %u index %"PRId64"/%d"
water	22:36	0:0	8	"iterating to freq: %u, symbolrate %u, "
water	23:21	0:0	8	"modulation %u index %"
water	23:44	0:0	8	PRId64
water	23:50	0:0	8	"/%d"
arg	24:21	24:39	7	p_cfg->i_frequency
water	24:21	0:0	8	p_cfg
op	24:26	0:0	8	->
water	24:28	0:0	8	i_frequency
arg	24:41	24:60	7	p_cfg->i_symbolrate
water	24:41	0:0	8	p_cfg
op	24:46	0:0	8	->
water	24:48	0:0	8	i_symbolrate
arg	24:62	24:81	7	p_cfg->i_modulation
water	24:62	0:0	8	p_cfg
op	24:67	0:0	8	->
water	24:69	0:0	8	i_modulation
arg	24:83	24:98	7	p_scan->i_index
water	24:83	0:0	8	p_scan
op	24:89	0:0	8	->
water	24:91	0:0	8	i_index
arg	24:100	24:118	7	p_scan->i_service
water	24:100	0:0	8	p_scan
op	24:106	0:0	8	->
water	24:108	0:0	8	i_service
water	24:119	0:0	6	;
op	25:12	0:0	6	*
water	25:13	0:0	6	pf_pos
op	25:20	0:0	6	=
water	25:22	0:0	6	(
water	25:23	0:0	6	double
water	25:29	0:0	6	)
water	25:30	0:0	6	i
op	25:31	0:0	6	/
water	25:32	0:0	6	p_scan
op	25:38	0:0	6	->
water	25:40	0:0	6	i_service
water	25:49	0:0	6	;
return	26:12	26:30	6	VLC_SUCCESS
water	26:19	0:0	7	VLC_SUCCESS
water	27:8	0:0	6	}
water	28:4	0:0	4	}
if	30:4	31:27	2	(p_scan -> i_service)
cond	30:8	30:16	3	p_scan -> i_service
water	30:8	0:0	4	p_scan
op	30:14	0:0	4	->
water	30:16	0:0	4	i_service
stmts	31:8	31:27	3	
return	31:8	31:27	4	VLC_EGENERIC
water	31:15	0:0	5	VLC_EGENERIC
for	36:4	41:4	2	( int i = 0 ;i < p_scan -> i_service;i ++)
forinit	0:0	36:16	3	 int i = 0 ;
decl	36:9	36:16	4	int	i
op	36:14	0:0	4	=
water	36:15	0:0	4	0
cond	36:18	36:30	3	i < p_scan -> i_service
water	36:18	0:0	4	i
op	36:20	0:0	4	<
water	36:22	0:0	4	p_scan
op	36:28	0:0	4	->
water	36:30	0:0	4	i_service
forexpr	36:41	36:42	3	i ++
water	36:41	0:0	4	i
op	36:42	0:0	4	++
stmts	37:4	41:4	3	
water	37:4	0:0	4	{
water	38:8	0:0	4	b_servicefound
op	38:23	0:0	4	=
water	38:25	0:0	4	p_scan
op	38:31	0:0	4	->
water	38:33	0:0	4	pp_service
op	38:43	0:0	4	[
water	38:44	0:0	4	i
op	38:45	0:0	4	]
op	38:46	0:0	4	->
water	38:48	0:0	4	type
op	38:53	0:0	4	!=
water	38:56	0:0	4	SERVICE_UNKNOWN
water	38:71	0:0	4	;
if	39:8	40:17	4	(b_servicefound)
cond	39:12	39:12	5	b_servicefound
water	39:12	0:0	6	b_servicefound
stmts	40:12	40:17	5	
break	40:12	40:17	6	
water	41:4	0:0	4	}
if	43:4	88:4	2	(! b_servicefound)
cond	43:8	43:9	3	! b_servicefound
op	43:8	0:0	4	!
water	43:9	0:0	4	b_servicefound
stmts	44:4	88:4	3	
water	44:4	0:0	4	{
decl	45:8	45:26	4	bool	b_rotate
op	45:21	0:0	4	=
water	45:22	0:0	4	true
if	46:8	59:8	4	(! p_scan -> parameter . b_modulation_set)
cond	46:12	46:31	5	! p_scan -> parameter . b_modulation_set
op	46:12	0:0	6	!
water	46:13	0:0	6	p_scan
op	46:19	0:0	6	->
water	46:21	0:0	6	parameter
op	46:30	0:0	6	.
water	46:31	0:0	6	b_modulation_set
stmts	47:8	59:8	5	
water	47:8	0:0	6	{
water	48:12	0:0	6	p_scan
op	48:18	0:0	6	->
water	48:20	0:0	6	parameter
op	48:29	0:0	6	.
water	48:30	0:0	6	i_modulation
op	48:43	0:0	6	=
water	48:45	0:0	6	(
water	48:46	0:0	6	p_scan
op	48:52	0:0	6	->
water	48:54	0:0	6	parameter
op	48:63	0:0	6	.
water	48:64	0:0	6	i_modulation
op	48:77	0:0	6	>>
water	48:80	0:0	6	1
water	48:82	0:0	6	)
water	48:83	0:0	6	;
if	52:12	55:12	6	(p_scan -> parameter . i_modulation < 64)
cond	52:16	52:49	7	p_scan -> parameter . i_modulation < 64
water	52:16	0:0	8	p_scan
op	52:22	0:0	8	->
water	52:24	0:0	8	parameter
op	52:33	0:0	8	.
water	52:34	0:0	8	i_modulation
op	52:47	0:0	8	<
water	52:49	0:0	8	64
stmts	53:12	55:12	7	
water	53:12	0:0	8	{
water	54:16	0:0	8	p_scan
op	54:22	0:0	8	->
water	54:24	0:0	8	parameter
op	54:33	0:0	8	.
water	54:34	0:0	8	i_modulation
op	54:47	0:0	8	=
water	54:49	0:0	8	256
water	54:52	0:0	8	;
water	55:12	0:0	8	}
else	55:14	57:12	6
stmts	55:19	57:12	7	
water	55:19	0:0	8	{
water	56:16	0:0	8	b_rotate
op	56:24	0:0	8	=
water	56:25	0:0	8	false
water	56:30	0:0	8	;
water	57:12	0:0	8	}
call	58:12	58:84	6	msg_Dbg
arg	58:21	58:34	7	p_scan->p_obj
water	58:21	0:0	8	p_scan
op	58:27	0:0	8	->
water	58:29	0:0	8	p_obj
arg	58:36	58:52	7	"modulation %d "
water	58:36	0:0	8	"modulation %d "
arg	58:54	58:84	7	p_scan->parameter.i_modulation
water	58:54	0:0	8	p_scan
op	58:60	0:0	8	->
water	58:62	0:0	8	parameter
op	58:71	0:0	8	.
water	58:72	0:0	8	i_modulation
water	58:85	0:0	6	;
water	59:8	0:0	6	}
if	60:8	85:8	4	(! p_scan -> parameter . b_symbolrate_set)
cond	60:12	60:31	5	! p_scan -> parameter . b_symbolrate_set
op	60:12	0:0	6	!
water	60:13	0:0	6	p_scan
op	60:19	0:0	6	->
water	60:21	0:0	6	parameter
op	60:30	0:0	6	.
water	60:31	0:0	6	b_symbolrate_set
stmts	61:8	85:8	5	
water	61:8	0:0	6	{
water	63:12	0:0	6	static
water	63:19	0:0	6	const
water	63:25	0:0	6	unsigned
water	63:34	0:0	6	short
water	63:40	0:0	6	symbolrates
op	63:51	0:0	6	[
op	63:52	0:0	6	]
op	63:54	0:0	6	=
water	63:56	0:0	6	{
water	64:13	0:0	6	6900
water	64:17	0:0	6	,
water	64:19	0:0	6	6875
water	64:23	0:0	6	,
water	64:25	0:0	6	6950
water	70:13	0:0	6	,
water	70:14	0:0	6	7000
water	70:18	0:0	6	,
water	70:20	0:0	6	3450
water	70:24	0:0	6	,
water	70:26	0:0	6	6111
water	70:30	0:0	6	,
water	71:13	0:0	6	6428
water	71:17	0:0	6	,
water	71:19	0:0	6	6952
water	71:23	0:0	6	,
water	71:25	0:0	6	5900
water	71:29	0:0	6	,
water	71:31	0:0	6	5000
water	73:13	0:0	6	}
water	73:14	0:0	6	;
enum	74:12	74:76	6	<anonymous_74:12>
water	74:19	0:0	7	num_symbols
op	74:31	0:0	7	=
water	74:33	0:0	7	(
op	74:34	0:0	7	sizeof
water	74:40	0:0	7	(
water	74:41	0:0	7	symbolrates
water	74:52	0:0	7	)
op	74:53	0:0	7	/
op	74:54	0:0	7	sizeof
water	74:60	0:0	7	(
op	74:61	0:0	7	*
water	74:62	0:0	7	symbolrates
water	74:73	0:0	7	)
water	74:74	0:0	7	)
if	76:12	80:12	6	(b_rotate)
cond	76:16	76:16	7	b_rotate
water	76:16	0:0	8	b_rotate
stmts	77:12	80:12	7	
water	77:12	0:0	8	{
water	78:16	0:0	8	p_scan
op	78:22	0:0	8	->
water	78:24	0:0	8	parameter
op	78:33	0:0	8	.
water	78:34	0:0	8	i_symbolrate
op	78:46	0:0	8	++
water	78:48	0:0	8	;
water	79:16	0:0	8	p_scan
op	79:22	0:0	8	->
water	79:24	0:0	8	parameter
op	79:33	0:0	8	.
water	79:34	0:0	8	i_symbolrate
op	79:47	0:0	8	%=
water	79:50	0:0	8	num_symbols
water	79:61	0:0	8	;
water	80:12	0:0	8	}
water	81:12	0:0	6	p_cfg
op	81:17	0:0	6	->
water	81:19	0:0	6	i_symbolrate
op	81:32	0:0	6	=
water	81:34	0:0	6	1000
op	81:39	0:0	6	*
water	81:41	0:0	6	(
water	81:42	0:0	6	symbolrates
op	81:53	0:0	6	[
water	81:55	0:0	6	p_scan
op	81:61	0:0	6	->
water	81:63	0:0	6	parameter
op	81:72	0:0	6	.
water	81:73	0:0	6	i_symbolrate
op	81:86	0:0	6	]
water	81:88	0:0	6	)
water	81:89	0:0	6	;
call	82:12	82:73	6	msg_Dbg
arg	82:21	82:34	7	p_scan->p_obj
water	82:21	0:0	8	p_scan
op	82:27	0:0	8	->
water	82:29	0:0	8	p_obj
arg	82:36	82:51	7	"symbolrate %d"
water	82:36	0:0	8	"symbolrate %d"
arg	82:53	82:73	7	p_cfg->i_symbolrate
water	82:53	0:0	8	p_cfg
op	82:58	0:0	8	->
water	82:60	0:0	8	i_symbolrate
water	82:74	0:0	6	;
if	83:12	84:30	6	(p_scan -> parameter . i_symbolrate)
cond	83:16	83:34	7	p_scan -> parameter . i_symbolrate
water	83:16	0:0	8	p_scan
op	83:22	0:0	8	->
water	83:24	0:0	8	parameter
op	83:33	0:0	8	.
water	83:34	0:0	8	i_symbolrate
stmts	84:16	84:30	7	
water	84:16	0:0	8	b_rotate
op	84:24	0:0	8	=
water	84:25	0:0	8	false
water	84:30	0:0	8	;
water	85:8	0:0	6	}
if	86:8	87:29	4	(! b_rotate && p_scan -> i_index)
cond	86:12	86:33	5	! b_rotate && p_scan -> i_index
op	86:12	0:0	6	!
water	86:13	0:0	6	b_rotate
op	86:22	0:0	6	&&
water	86:25	0:0	6	p_scan
op	86:31	0:0	6	->
water	86:33	0:0	6	i_index
stmts	87:12	87:29	5	
water	87:12	0:0	6	p_scan
op	87:18	0:0	6	->
water	87:20	0:0	6	i_index
op	87:27	0:0	6	--
water	87:29	0:0	6	;
water	88:4	0:0	4	}
water	89:4	0:0	2	p_cfg
op	89:9	0:0	2	->
water	89:11	0:0	2	i_modulation
op	89:24	0:0	2	=
water	89:26	0:0	2	p_scan
op	89:32	0:0	2	->
water	89:34	0:0	2	parameter
op	89:43	0:0	2	.
water	89:44	0:0	2	i_modulation
water	89:56	0:0	2	;
if	90:4	91:74	2	(! p_cfg -> i_symbolrate)
cond	90:8	90:16	3	! p_cfg -> i_symbolrate
op	90:8	0:0	4	!
water	90:9	0:0	4	p_cfg
op	90:14	0:0	4	->
water	90:16	0:0	4	i_symbolrate
stmts	91:8	91:74	3	
water	91:8	0:0	4	p_cfg
op	91:13	0:0	4	->
water	91:15	0:0	4	i_symbolrate
op	91:28	0:0	4	=
call	91:30	91:73	4	var_GetInteger
arg	91:46	91:59	5	p_scan->p_obj
water	91:46	0:0	6	p_scan
op	91:52	0:0	6	->
water	91:54	0:0	6	p_obj
arg	91:61	91:73	5	"dvb-srate"
water	91:61	0:0	6	"dvb-srate"
water	91:74	0:0	4	;
if	92:4	93:61	2	(p_scan -> parameter . b_exhaustive)
cond	92:8	92:26	3	p_scan -> parameter . b_exhaustive
water	92:8	0:0	4	p_scan
op	92:14	0:0	4	->
water	92:16	0:0	4	parameter
op	92:25	0:0	4	.
water	92:26	0:0	4	b_exhaustive
stmts	93:8	93:61	3	
return	93:8	93:61	4	ScanDvbNextExhaustive(p_scan,p_cfg,pf_pos)
call	93:15	93:60	5	ScanDvbNextExhaustive
arg	93:38	93:44	6	p_scan
water	93:38	0:0	7	p_scan
arg	93:46	93:51	6	p_cfg
water	93:46	0:0	7	p_cfg
arg	93:53	93:60	6	pf_pos
water	93:53	0:0	7	pf_pos
else	94:4	95:56	2
stmts	95:8	95:56	3	
return	95:8	95:56	4	ScanDvbCNextFast(p_scan,p_cfg,pf_pos)
call	95:15	95:55	5	ScanDvbCNextFast
arg	95:33	95:39	6	p_scan
water	95:33	0:0	7	p_scan
arg	95:41	95:46	6	p_cfg
water	95:41	0:0	7	p_cfg
arg	95:48	95:55	6	pf_pos
water	95:48	0:0	7	pf_pos

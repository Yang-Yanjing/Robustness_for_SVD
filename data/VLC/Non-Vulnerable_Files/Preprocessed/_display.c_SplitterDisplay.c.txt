func	2:0	13:0	0	static void	SplitterDisplay
params	2:27	0:0	1	
param	2:28	2:46	2	vout_display_t *	vd
param	3:28	3:46	2	picture_t *	picture
param	4:28	4:52	2	subpicture_t *	subpicture
stmnts	0:0	12:28	1	
decl	6:4	6:37	2	vout_display_sys_t	*sys
op	6:28	0:0	2	=
water	6:30	0:0	2	vd
op	6:32	0:0	2	->
water	6:34	0:0	2	sys
call	7:4	7:22	2	assert
arg	7:11	7:22	3	!subpicture
op	7:11	0:0	4	!
water	7:12	0:0	4	subpicture
water	7:23	0:0	2	;
for	8:4	11:4	2	( int i = 0 ;i < sys -> count;i ++)
forinit	0:0	8:18	3	 int i = 0 ;
decl	8:9	8:18	4	int	i
op	8:15	0:0	4	=
water	8:17	0:0	4	0
cond	8:20	8:29	3	i < sys -> count
water	8:20	0:0	4	i
op	8:22	0:0	4	<
water	8:24	0:0	4	sys
op	8:27	0:0	4	->
water	8:29	0:0	4	count
forexpr	8:36	8:37	3	i ++
water	8:36	0:0	4	i
op	8:37	0:0	4	++
stmts	8:41	11:4	3	
water	8:41	0:0	4	{
if	9:8	10:72	4	(sys -> picture [ i ])
cond	9:12	9:26	5	sys -> picture [ i ]
water	9:12	0:0	6	sys
op	9:15	0:0	6	->
water	9:17	0:0	6	picture
op	9:24	0:0	6	[
water	9:25	0:0	6	i
op	9:26	0:0	6	]
stmts	10:12	10:72	5	
call	10:12	10:71	6	vout_display_Display
arg	10:33	10:48	7	sys->display[i]
water	10:33	0:0	8	sys
op	10:36	0:0	8	->
water	10:38	0:0	8	display
op	10:45	0:0	8	[
water	10:46	0:0	8	i
op	10:47	0:0	8	]
arg	10:50	10:65	7	sys->picture[i]
water	10:50	0:0	8	sys
op	10:53	0:0	8	->
water	10:55	0:0	8	picture
op	10:62	0:0	8	[
water	10:63	0:0	8	i
op	10:64	0:0	8	]
arg	10:67	10:71	7	NULL
water	10:67	0:0	8	NULL
water	10:72	0:0	6	;
water	11:4	0:0	4	}
call	12:4	12:27	2	picture_Release
arg	12:20	12:27	3	picture
water	12:20	0:0	4	picture
water	12:28	0:0	2	;

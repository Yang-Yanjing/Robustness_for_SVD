func	2:0	44:0	0	static int	ThreadReinit
params	2:23	0:0	1	
param	2:24	2:43	2	vout_thread_t *	vout
param	3:24	3:55	2	const vout_configuration_t *	cfg
stmnts	0:0	43:22	1	
decl	5:4	5:27	2	video_format_t	original
if	6:4	10:4	2	(VoutValidateFormat (& original ,cfg -> fmt ))
cond	6:8	6:46	3	VoutValidateFormat (& original ,cfg -> fmt )
call	6:8	6:46	4	VoutValidateFormat
arg	6:27	6:36	5	&original
op	6:27	0:0	6	&
water	6:28	0:0	6	original
arg	6:38	6:46	5	cfg->fmt
water	6:38	0:0	6	cfg
op	6:41	0:0	6	->
water	6:43	0:0	6	fmt
stmts	6:49	10:4	3	
water	6:49	0:0	4	{
call	7:8	7:29	4	ThreadStop
arg	7:19	7:23	5	vout
water	7:19	0:0	6	vout
arg	7:25	7:29	5	NULL
water	7:25	0:0	6	NULL
water	7:30	0:0	4	;
call	8:8	8:24	4	ThreadClean
arg	8:20	8:24	5	vout
water	8:20	0:0	6	vout
water	8:25	0:0	4	;
return	9:8	9:27	4	VLC_EGENERIC
water	9:15	0:0	5	VLC_EGENERIC
water	10:4	0:0	4	}
call	12:4	12:55	2	VideoFormatCopyCropAr
arg	12:26	12:44	3	&vout->p->original
op	12:26	0:0	4	&
water	12:27	0:0	4	vout
op	12:31	0:0	4	->
water	12:33	0:0	4	p
op	12:34	0:0	4	->
water	12:36	0:0	4	original
arg	12:46	12:55	3	&original
op	12:46	0:0	4	&
water	12:47	0:0	4	original
water	12:56	0:0	2	;
if	13:4	17:4	2	(video_format_IsSimilar (& original ,& vout -> p -> original ))
cond	13:8	13:60	3	video_format_IsSimilar (& original ,& vout -> p -> original )
call	13:8	13:60	4	video_format_IsSimilar
arg	13:31	13:40	5	&original
op	13:31	0:0	6	&
water	13:32	0:0	6	original
arg	13:42	13:60	5	&vout->p->original
op	13:42	0:0	6	&
water	13:43	0:0	6	vout
op	13:47	0:0	6	->
water	13:49	0:0	6	p
op	13:50	0:0	6	->
water	13:52	0:0	6	original
stmts	13:63	17:4	3	
water	13:63	0:0	4	{
if	14:8	15:30	4	(cfg -> dpb_size <= vout -> p -> dpb_size)
cond	14:12	14:38	5	cfg -> dpb_size <= vout -> p -> dpb_size
water	14:12	0:0	6	cfg
op	14:15	0:0	6	->
water	14:17	0:0	6	dpb_size
op	14:26	0:0	6	<=
water	14:29	0:0	6	vout
op	14:33	0:0	6	->
water	14:35	0:0	6	p
op	14:36	0:0	6	->
water	14:38	0:0	6	dpb_size
stmts	15:12	15:30	5	
return	15:12	15:30	6	VLC_SUCCESS
water	15:19	0:0	7	VLC_SUCCESS
call	16:8	16:49	4	msg_Warn
arg	16:17	16:21	5	vout
water	16:17	0:0	6	vout
arg	16:23	16:49	5	"DPB need to be increased"
water	16:23	0:0	6	"DPB need to be increased"
water	16:50	0:0	4	;
water	17:4	0:0	4	}
decl	18:4	18:30	2	vout_display_state_t	state
call	19:4	19:35	2	memset
arg	19:11	19:17	3	&state
op	19:11	0:0	4	&
water	19:12	0:0	4	state
arg	19:19	19:20	3	0
water	19:19	0:0	4	0
arg	19:22	19:35	3	sizeof(state)
op	19:22	0:0	4	sizeof
water	19:28	0:0	4	(
water	19:29	0:0	4	state
water	19:34	0:0	4	)
water	19:36	0:0	2	;
call	20:4	20:27	2	ThreadStop
arg	20:15	20:19	3	vout
water	20:15	0:0	4	vout
arg	20:21	20:27	3	&state
op	20:21	0:0	4	&
water	20:22	0:0	4	state
water	20:28	0:0	2	;
if	21:4	24:4	2	(! state . cfg . is_fullscreen)
cond	21:8	21:19	3	! state . cfg . is_fullscreen
op	21:8	0:0	4	!
water	21:9	0:0	4	state
op	21:14	0:0	4	.
water	21:15	0:0	4	cfg
op	21:18	0:0	4	.
water	21:19	0:0	4	is_fullscreen
stmts	21:34	24:4	3	
water	21:34	0:0	4	{
water	22:8	0:0	4	state
op	22:13	0:0	4	.
water	22:14	0:0	4	cfg
op	22:17	0:0	4	.
water	22:18	0:0	4	display
op	22:25	0:0	4	.
water	22:26	0:0	4	width
op	22:33	0:0	4	=
water	22:35	0:0	4	0
water	22:36	0:0	4	;
water	23:8	0:0	4	state
op	23:13	0:0	4	.
water	23:14	0:0	4	cfg
op	23:17	0:0	4	.
water	23:18	0:0	4	display
op	23:25	0:0	4	.
water	23:26	0:0	4	height
op	23:33	0:0	4	=
water	23:35	0:0	4	0
water	23:36	0:0	4	;
water	24:4	0:0	4	}
water	25:4	0:0	2	state
op	25:9	0:0	2	.
water	25:10	0:0	2	sar
op	25:13	0:0	2	.
water	25:14	0:0	2	num
op	25:18	0:0	2	=
water	25:20	0:0	2	0
water	25:21	0:0	2	;
water	26:4	0:0	2	state
op	26:9	0:0	2	.
water	26:10	0:0	2	sar
op	26:13	0:0	2	.
water	26:14	0:0	2	den
op	26:18	0:0	2	=
water	26:20	0:0	2	0
water	26:21	0:0	2	;
if	29:4	32:4	2	(state . cfg . display . sar . num <= 0 || state . cfg . display . sar . den <= 0)
cond	29:8	29:71	3	state . cfg . display . sar . num <= 0 || state . cfg . display . sar . den <= 0
water	29:8	0:0	4	state
op	29:13	0:0	4	.
water	29:14	0:0	4	cfg
op	29:17	0:0	4	.
water	29:18	0:0	4	display
op	29:25	0:0	4	.
water	29:26	0:0	4	sar
op	29:29	0:0	4	.
water	29:30	0:0	4	num
op	29:34	0:0	4	<=
water	29:37	0:0	4	0
op	29:39	0:0	4	||
water	29:42	0:0	4	state
op	29:47	0:0	4	.
water	29:48	0:0	4	cfg
op	29:51	0:0	4	.
water	29:52	0:0	4	display
op	29:59	0:0	4	.
water	29:60	0:0	4	sar
op	29:63	0:0	4	.
water	29:64	0:0	4	den
op	29:68	0:0	4	<=
water	29:71	0:0	4	0
stmts	29:74	32:4	3	
water	29:74	0:0	4	{
water	30:8	0:0	4	state
op	30:13	0:0	4	.
water	30:14	0:0	4	cfg
op	30:17	0:0	4	.
water	30:18	0:0	4	display
op	30:25	0:0	4	.
water	30:26	0:0	4	sar
op	30:29	0:0	4	.
water	30:30	0:0	4	num
op	30:34	0:0	4	=
water	30:36	0:0	4	1
water	30:37	0:0	4	;
water	31:8	0:0	4	state
op	31:13	0:0	4	.
water	31:14	0:0	4	cfg
op	31:17	0:0	4	.
water	31:18	0:0	4	display
op	31:25	0:0	4	.
water	31:26	0:0	4	sar
op	31:29	0:0	4	.
water	31:30	0:0	4	den
op	31:34	0:0	4	=
water	31:36	0:0	4	1
water	31:37	0:0	4	;
water	32:4	0:0	4	}
if	33:4	36:4	2	(state . cfg . zoom . num <= 0 || state . cfg . zoom . den <= 0)
cond	33:8	33:57	3	state . cfg . zoom . num <= 0 || state . cfg . zoom . den <= 0
water	33:8	0:0	4	state
op	33:13	0:0	4	.
water	33:14	0:0	4	cfg
op	33:17	0:0	4	.
water	33:18	0:0	4	zoom
op	33:22	0:0	4	.
water	33:23	0:0	4	num
op	33:27	0:0	4	<=
water	33:30	0:0	4	0
op	33:32	0:0	4	||
water	33:35	0:0	4	state
op	33:40	0:0	4	.
water	33:41	0:0	4	cfg
op	33:44	0:0	4	.
water	33:45	0:0	4	zoom
op	33:49	0:0	4	.
water	33:50	0:0	4	den
op	33:54	0:0	4	<=
water	33:57	0:0	4	0
stmts	33:60	36:4	3	
water	33:60	0:0	4	{
water	34:8	0:0	4	state
op	34:13	0:0	4	.
water	34:14	0:0	4	cfg
op	34:17	0:0	4	.
water	34:18	0:0	4	zoom
op	34:22	0:0	4	.
water	34:23	0:0	4	num
op	34:27	0:0	4	=
water	34:29	0:0	4	1
water	34:30	0:0	4	;
water	35:8	0:0	4	state
op	35:13	0:0	4	.
water	35:14	0:0	4	cfg
op	35:17	0:0	4	.
water	35:18	0:0	4	zoom
op	35:22	0:0	4	.
water	35:23	0:0	4	den
op	35:27	0:0	4	=
water	35:29	0:0	4	1
water	35:30	0:0	4	;
water	36:4	0:0	4	}
water	37:4	0:0	2	vout
op	37:8	0:0	2	->
water	37:10	0:0	2	p
op	37:11	0:0	2	->
water	37:13	0:0	2	original
op	37:22	0:0	2	=
water	37:24	0:0	2	original
water	37:32	0:0	2	;
water	38:4	0:0	2	vout
op	38:8	0:0	2	->
water	38:10	0:0	2	p
op	38:11	0:0	2	->
water	38:13	0:0	2	dpb_size
op	38:22	0:0	2	=
water	38:24	0:0	2	cfg
op	38:27	0:0	2	->
water	38:29	0:0	2	dpb_size
water	38:37	0:0	2	;
if	39:4	42:4	2	(ThreadStart (vout ,& state ))
cond	39:8	39:32	3	ThreadStart (vout ,& state )
call	39:8	39:32	4	ThreadStart
arg	39:20	39:24	5	vout
water	39:20	0:0	6	vout
arg	39:26	39:32	5	&state
op	39:26	0:0	6	&
water	39:27	0:0	6	state
stmts	39:35	42:4	3	
water	39:35	0:0	4	{
call	40:8	40:24	4	ThreadClean
arg	40:20	40:24	5	vout
water	40:20	0:0	6	vout
water	40:25	0:0	4	;
return	41:8	41:27	4	VLC_EGENERIC
water	41:15	0:0	5	VLC_EGENERIC
water	42:4	0:0	4	}
return	43:4	43:22	2	VLC_SUCCESS
water	43:11	0:0	3	VLC_SUCCESS

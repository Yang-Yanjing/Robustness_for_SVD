func	2:0	55:0	0	static int	DemuxGenre
params	2:21	0:0	1	
param	2:23	2:39	2	demux_t *	p_demux
param	2:41	2:67	2	xml_reader_t *	p_xml_reader
param	3:23	3:55	2	input_item_node_t *	p_input_node
stmnts	0:0	54:12	1	
decl	5:4	5:20	2	const char	*node
decl	6:4	6:25	2	char	*psz_name
op	6:19	0:0	2	=
water	6:21	0:0	2	NULL
decl	7:4	7:12	2	int	type
while	8:4	52:4	2	(( type =xml_ReaderNextNode (p_xml_reader ,& node ) ) > 0)
cond	8:11	8:64	3	( type =xml_ReaderNextNode (p_xml_reader ,& node ) ) > 0
water	8:11	0:0	4	(
water	8:12	0:0	4	type
op	8:17	0:0	4	=
call	8:19	8:59	4	xml_ReaderNextNode
arg	8:39	8:51	5	p_xml_reader
water	8:39	0:0	6	p_xml_reader
arg	8:53	8:59	5	&node
op	8:53	0:0	6	&
water	8:54	0:0	6	node
water	8:60	0:0	4	)
op	8:62	0:0	4	>
water	8:64	0:0	4	0
stmts	9:4	52:4	3	
water	9:4	0:0	4	{
switch	10:8	51:8	4	(type)
cond	10:16	10:16	5	type
water	10:16	0:0	6	type
stmts	11:8	51:8	5	
water	11:8	0:0	6	{
label	12:12	12:37	6	case XML_READER_STARTELEM :
water	13:12	0:0	6	{
if	14:16	30:16	6	(!strcmp (node ,"genre" ))
cond	14:20	14:43	7	!strcmp (node ,"genre" )
op	14:20	0:0	8	!
call	14:21	14:43	8	strcmp
arg	14:29	14:33	9	node
water	14:29	0:0	10	node
arg	14:35	14:43	9	"genre"
water	14:35	0:0	10	"genre"
stmts	15:16	30:16	7	
water	15:16	0:0	8	{
decl	17:20	17:44	8	const char	*name
water	17:36	0:0	8	,
decl	17:20	17:44	8	const char	*value
while	18:20	29:20	8	(( name =xml_ReaderNextAttr (p_xml_reader ,& value ) ))
cond	18:27	18:77	9	( name =xml_ReaderNextAttr (p_xml_reader ,& value ) )
water	18:27	0:0	10	(
water	18:28	0:0	10	name
op	18:33	0:0	10	=
call	18:35	18:76	10	xml_ReaderNextAttr
arg	18:55	18:67	11	p_xml_reader
water	18:55	0:0	12	p_xml_reader
arg	18:69	18:76	11	&value
op	18:69	0:0	12	&
water	18:70	0:0	12	value
water	18:77	0:0	10	)
stmts	19:20	29:20	9	
water	19:20	0:0	10	{
if	20:24	24:24	10	(!strcmp (name ,"name" ))
cond	20:28	20:50	11	!strcmp (name ,"name" )
op	20:28	0:0	12	!
call	20:29	20:50	12	strcmp
arg	20:37	20:41	13	name
water	20:37	0:0	14	name
arg	20:43	20:50	13	"name"
water	20:43	0:0	14	"name"
stmts	21:24	24:24	11	
water	21:24	0:0	12	{
call	22:28	22:41	12	free
arg	22:33	22:41	13	psz_name
water	22:33	0:0	14	psz_name
water	22:42	0:0	12	;
water	23:28	0:0	12	psz_name
op	23:37	0:0	12	=
call	23:39	23:53	12	strdup
arg	23:47	23:53	13	value
water	23:47	0:0	14	value
water	23:54	0:0	12	;
water	24:24	0:0	12	}
else	25:24	28:50	10
stmts	26:28	28:50	11	
call	26:28	28:49	12	msg_Warn
arg	26:38	26:45	13	p_demux
water	26:38	0:0	14	p_demux
arg	27:38	27:71	13	"unexpected attribute %s in <%s>"
water	27:38	0:0	14	"unexpected attribute %s in <%s>"
arg	28:38	28:42	13	name
water	28:38	0:0	14	name
arg	28:44	28:49	13	node
water	28:44	0:0	14	node
water	28:50	0:0	12	;
water	29:20	0:0	10	}
water	30:16	0:0	8	}
break	31:16	31:21	6	
water	32:12	0:0	6	}
label	33:12	33:35	6	case XML_READER_ENDELEM :
if	34:16	49:16	6	(!strcmp (node ,"genre" ) && psz_name != NULL)
cond	34:20	34:60	7	!strcmp (node ,"genre" ) && psz_name != NULL
op	34:20	0:0	8	!
call	34:21	34:43	8	strcmp
arg	34:29	34:33	9	node
water	34:29	0:0	10	node
arg	34:35	34:43	9	"genre"
water	34:35	0:0	10	"genre"
op	34:45	0:0	8	&&
water	34:48	0:0	8	psz_name
op	34:57	0:0	8	!=
water	34:60	0:0	8	NULL
stmts	35:16	49:16	7	
water	35:16	0:0	8	{
decl	36:20	36:33	8	char	*psz_mrl
if	37:20	47:20	8	(asprintf (& psz_mrl ,SHOUTCAST_BASE_URL "?genre=%s" ,psz_name ) != - 1)
cond	37:24	38:49	9	asprintf (& psz_mrl ,SHOUTCAST_BASE_URL "?genre=%s" ,psz_name ) != - 1
call	37:24	38:43	10	asprintf
arg	37:34	37:42	11	&psz_mrl
op	37:34	0:0	12	&
water	37:35	0:0	12	psz_mrl
arg	37:44	37:74	11	SHOUTCAST_BASE_URL"?genre=%s"
water	37:44	0:0	12	SHOUTCAST_BASE_URL
water	37:63	0:0	12	"?genre=%s"
arg	38:34	38:43	11	psz_name
water	38:34	0:0	12	psz_name
op	38:45	0:0	10	!=
op	38:48	0:0	10	-
water	38:49	0:0	10	1
stmts	39:20	47:20	9	
water	39:20	0:0	10	{
decl	40:24	40:45	10	input_item_t	*p_input
call	41:24	41:59	10	resolve_xml_special_chars
arg	41:51	41:59	11	psz_mrl
water	41:51	0:0	12	psz_mrl
water	41:60	0:0	10	;
water	42:24	0:0	10	p_input
op	42:32	0:0	10	=
call	42:34	42:68	10	input_item_New
arg	42:50	42:57	11	psz_mrl
water	42:50	0:0	12	psz_mrl
arg	42:59	42:68	11	psz_name
water	42:59	0:0	12	psz_name
water	42:69	0:0	10	;
call	43:24	43:78	10	input_item_CopyOptions
arg	43:48	43:68	11	p_input_node->p_item
water	43:48	0:0	12	p_input_node
op	43:60	0:0	12	->
water	43:62	0:0	12	p_item
arg	43:70	43:78	11	p_input
water	43:70	0:0	12	p_input
water	43:79	0:0	10	;
call	44:24	44:38	10	free
arg	44:30	44:38	11	psz_mrl
water	44:30	0:0	12	psz_mrl
water	44:39	0:0	10	;
call	45:24	45:74	10	input_item_node_AppendItem
arg	45:52	45:64	11	p_input_node
water	45:52	0:0	12	p_input_node
arg	45:66	45:74	11	p_input
water	45:66	0:0	12	p_input
water	45:75	0:0	10	;
call	46:24	46:47	10	vlc_gc_decref
arg	46:39	46:47	11	p_input
water	46:39	0:0	12	p_input
water	46:48	0:0	10	;
water	47:20	0:0	10	}
call	48:20	48:39	8	FREENULL
arg	48:30	48:39	9	psz_name
water	48:30	0:0	10	psz_name
water	48:40	0:0	8	;
water	49:16	0:0	8	}
break	50:16	50:21	6	
water	51:8	0:0	6	}
water	52:4	0:0	4	}
call	53:4	53:19	2	free
arg	53:10	53:19	3	psz_name
water	53:10	0:0	4	psz_name
water	53:20	0:0	2	;
return	54:4	54:12	2	0
water	54:11	0:0	3	0

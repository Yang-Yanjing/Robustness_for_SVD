func	2:0	92:0	0	static int	Open
params	2:15	0:0	1	
param	2:17	2:38	2	vlc_object_t *	p_this
stmnts	0:0	91:22	1	
decl	4:4	4:43	2	demux_t	*p_demux
op	4:25	0:0	2	=
water	4:27	0:0	2	(
water	4:28	0:0	2	demux_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:22	2	demux_sys_t	*p_sys
decl	6:4	6:29	2	ModPlug_Settings	settings
if	8:4	19:4	2	(! p_demux -> b_force)
cond	8:8	8:18	3	! p_demux -> b_force
op	8:8	0:0	4	!
water	8:9	0:0	4	p_demux
op	8:16	0:0	4	->
water	8:18	0:0	4	b_force
stmts	9:4	19:4	3	
water	9:4	0:0	4	{
decl	10:8	11:54	4	const char	*psz_ext
op	10:28	0:0	4	=
water	10:30	0:0	4	p_demux
op	10:37	0:0	4	->
water	10:39	0:0	4	psz_file
water	10:48	0:0	4	?
call	10:50	10:82	5	strrchr
arg	10:59	10:76	6	p_demux->psz_file
water	10:59	0:0	7	p_demux
op	10:66	0:0	7	->
water	10:68	0:0	7	psz_file
arg	10:78	10:82	6	'.'
water	10:78	0:0	7	'.'
water	11:48	0:0	4	:
water	11:50	0:0	4	NULL
if	12:8	13:21	4	(psz_ext)
cond	12:12	12:12	5	psz_ext
water	12:12	0:0	6	psz_ext
stmts	13:12	13:21	5	
water	13:12	0:0	6	psz_ext
op	13:19	0:0	6	++
water	13:21	0:0	6	;
if	14:8	18:8	4	(Validate (p_demux ,psz_ext ))
cond	14:12	14:39	5	Validate (p_demux ,psz_ext )
call	14:12	14:39	6	Validate
arg	14:22	14:29	7	p_demux
water	14:22	0:0	8	p_demux
arg	14:31	14:39	7	psz_ext
water	14:31	0:0	8	psz_ext
stmts	15:8	18:8	5	
water	15:8	0:0	6	{
call	16:12	16:86	6	msg_Dbg
arg	16:21	16:28	7	p_demux
water	16:21	0:0	8	p_demux
arg	16:30	16:62	7	"MOD validation failed (ext=%s)"
water	16:30	0:0	8	"MOD validation failed (ext=%s)"
arg	16:64	16:86	7	psz_ext?psz_ext:""
water	16:64	0:0	8	psz_ext
water	16:72	0:0	8	?
water	16:74	0:0	8	psz_ext
water	16:82	0:0	8	:
water	16:84	0:0	8	""
water	16:87	0:0	6	;
return	17:12	17:31	6	VLC_EGENERIC
water	17:19	0:0	7	VLC_EGENERIC
water	18:8	0:0	6	}
water	19:4	0:0	4	}
decl	20:4	20:52	2	const int64_t	i_size
op	20:25	0:0	2	=
call	20:27	20:51	3	stream_Size
arg	20:40	20:51	4	p_demux->s
water	20:40	0:0	5	p_demux
op	20:47	0:0	5	->
water	20:49	0:0	5	s
if	21:4	22:27	2	(i_size <= 0 || i_size >= MOD_MAX_FILE_SIZE)
cond	21:8	21:33	3	i_size <= 0 || i_size >= MOD_MAX_FILE_SIZE
water	21:8	0:0	4	i_size
op	21:15	0:0	4	<=
water	21:18	0:0	4	0
op	21:20	0:0	4	||
water	21:23	0:0	4	i_size
op	21:30	0:0	4	>=
water	21:33	0:0	4	MOD_MAX_FILE_SIZE
stmts	22:8	22:27	3	
return	22:8	22:27	4	VLC_EGENERIC
water	22:15	0:0	5	VLC_EGENERIC
water	24:4	0:0	2	p_demux
op	24:11	0:0	2	->
water	24:13	0:0	2	pf_demux
op	24:22	0:0	2	=
water	24:24	0:0	2	Demux
water	24:29	0:0	2	;
water	25:4	0:0	2	p_demux
op	25:11	0:0	2	->
water	25:13	0:0	2	pf_control
op	25:24	0:0	2	=
water	25:26	0:0	2	Control
water	25:33	0:0	2	;
water	26:4	0:0	2	p_demux
op	26:11	0:0	2	->
water	26:13	0:0	2	p_sys
op	26:19	0:0	2	=
water	26:21	0:0	2	p_sys
op	26:27	0:0	2	=
call	26:29	26:54	2	malloc
arg	26:37	26:54	3	sizeof(*p_sys)
op	26:37	0:0	4	sizeof
water	26:43	0:0	4	(
op	26:45	0:0	4	*
water	26:46	0:0	4	p_sys
water	26:52	0:0	4	)
water	26:55	0:0	2	;
if	27:4	28:25	2	(! p_sys)
cond	27:8	27:9	3	! p_sys
op	27:8	0:0	4	!
water	27:9	0:0	4	p_sys
stmts	28:8	28:25	3	
return	28:8	28:25	4	VLC_ENOMEM
water	28:15	0:0	5	VLC_ENOMEM
call	29:4	29:62	2	msg_Dbg
arg	29:13	29:20	3	p_demux
water	29:13	0:0	4	p_demux
arg	29:22	29:62	3	"loading complete file (could be long)"
water	29:22	0:0	4	"loading complete file (could be long)"
water	29:63	0:0	2	;
water	30:4	0:0	2	p_sys
op	30:9	0:0	2	->
water	30:11	0:0	2	i_data
op	30:18	0:0	2	=
water	30:20	0:0	2	i_size
water	30:26	0:0	2	;
water	31:4	0:0	2	p_sys
op	31:9	0:0	2	->
water	31:11	0:0	2	p_data
op	31:18	0:0	2	=
call	31:20	31:42	2	malloc
arg	31:28	31:42	3	p_sys->i_data
water	31:28	0:0	4	p_sys
op	31:33	0:0	4	->
water	31:35	0:0	4	i_data
water	31:43	0:0	2	;
if	32:4	33:79	2	(p_sys -> p_data)
cond	32:8	32:15	3	p_sys -> p_data
water	32:8	0:0	4	p_sys
op	32:13	0:0	4	->
water	32:15	0:0	4	p_data
stmts	33:8	33:79	3	
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	i_data
op	33:22	0:0	4	=
call	33:24	33:78	4	stream_Read
arg	33:37	33:47	5	p_demux->s
water	33:37	0:0	6	p_demux
op	33:44	0:0	6	->
water	33:46	0:0	6	s
arg	33:49	33:62	5	p_sys->p_data
water	33:49	0:0	6	p_sys
op	33:54	0:0	6	->
water	33:56	0:0	6	p_data
arg	33:64	33:78	5	p_sys->i_data
water	33:64	0:0	6	p_sys
op	33:69	0:0	6	->
water	33:71	0:0	6	i_data
water	33:79	0:0	4	;
if	34:4	40:4	2	(p_sys -> i_data <= 0 || ! p_sys -> p_data)
cond	34:8	34:38	3	p_sys -> i_data <= 0 || ! p_sys -> p_data
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	i_data
op	34:22	0:0	4	<=
water	34:25	0:0	4	0
op	34:27	0:0	4	||
op	34:30	0:0	4	!
water	34:31	0:0	4	p_sys
op	34:36	0:0	4	->
water	34:38	0:0	4	p_data
stmts	35:4	40:4	3	
water	35:4	0:0	4	{
call	36:8	36:61	4	msg_Err
arg	36:17	36:24	5	p_demux
water	36:17	0:0	6	p_demux
arg	36:26	36:61	5	"failed to read the complete file"
water	36:26	0:0	6	"failed to read the complete file"
water	36:62	0:0	4	;
call	37:8	37:28	4	free
arg	37:14	37:28	5	p_sys->p_data
water	37:14	0:0	6	p_sys
op	37:19	0:0	6	->
water	37:21	0:0	6	p_data
water	37:29	0:0	4	;
call	38:8	38:20	4	free
arg	38:14	38:20	5	p_sys
water	38:14	0:0	6	p_sys
water	38:21	0:0	4	;
return	39:8	39:27	4	VLC_EGENERIC
water	39:15	0:0	5	VLC_EGENERIC
water	40:4	0:0	4	}
call	42:4	42:37	2	vlc_mutex_lock
arg	42:20	42:37	3	&libmodplug_lock
op	42:20	0:0	4	&
water	42:21	0:0	4	libmodplug_lock
water	42:38	0:0	2	;
call	43:4	43:35	2	ModPlug_GetSettings
arg	43:25	43:35	3	&settings
op	43:25	0:0	4	&
water	43:26	0:0	4	settings
water	43:36	0:0	2	;
water	44:4	0:0	2	settings
op	44:12	0:0	2	.
water	44:13	0:0	2	mFlags
op	44:20	0:0	2	=
water	44:22	0:0	2	MODPLUG_ENABLE_OVERSAMPLING
water	44:49	0:0	2	;
water	45:4	0:0	2	settings
op	45:12	0:0	2	.
water	45:13	0:0	2	mChannels
op	45:23	0:0	2	=
water	45:25	0:0	2	2
water	45:26	0:0	2	;
water	46:4	0:0	2	settings
op	46:12	0:0	2	.
water	46:13	0:0	2	mBits
op	46:19	0:0	2	=
water	46:21	0:0	2	16
water	46:23	0:0	2	;
water	47:4	0:0	2	settings
op	47:12	0:0	2	.
water	47:13	0:0	2	mFrequency
op	47:24	0:0	2	=
water	47:26	0:0	2	44100
water	47:31	0:0	2	;
water	48:4	0:0	2	settings
op	48:12	0:0	2	.
water	48:13	0:0	2	mResamplingMode
op	48:29	0:0	2	=
water	48:31	0:0	2	MODPLUG_RESAMPLE_FIR
water	48:51	0:0	2	;
if	49:4	50:57	2	(var_InheritBool (p_demux ,"mod-noisereduction" ))
cond	49:8	49:55	3	var_InheritBool (p_demux ,"mod-noisereduction" )
call	49:8	49:55	4	var_InheritBool
arg	49:25	49:32	5	p_demux
water	49:25	0:0	6	p_demux
arg	49:34	49:55	5	"mod-noisereduction"
water	49:34	0:0	6	"mod-noisereduction"
stmts	50:8	50:57	3	
water	50:8	0:0	4	settings
op	50:16	0:0	4	.
water	50:17	0:0	4	mFlags
op	50:24	0:0	4	|=
water	50:27	0:0	4	MODPLUG_ENABLE_NOISE_REDUCTION
water	50:57	0:0	4	;
if	51:4	52:48	2	(var_InheritBool (p_demux ,"mod-reverb" ))
cond	51:8	51:47	3	var_InheritBool (p_demux ,"mod-reverb" )
call	51:8	51:47	4	var_InheritBool
arg	51:25	51:32	5	p_demux
water	51:25	0:0	6	p_demux
arg	51:34	51:47	5	"mod-reverb"
water	51:34	0:0	6	"mod-reverb"
stmts	52:8	52:48	3	
water	52:8	0:0	4	settings
op	52:16	0:0	4	.
water	52:17	0:0	4	mFlags
op	52:24	0:0	4	|=
water	52:27	0:0	4	MODPLUG_ENABLE_REVERB
water	52:48	0:0	4	;
water	53:4	0:0	2	settings
op	53:12	0:0	2	.
water	53:13	0:0	2	mReverbDepth
op	53:26	0:0	2	=
call	53:28	53:76	2	var_InheritInteger
arg	53:48	53:55	3	p_demux
water	53:48	0:0	4	p_demux
arg	53:57	53:76	3	"mod-reverb-level"
water	53:57	0:0	4	"mod-reverb-level"
water	53:77	0:0	2	;
water	54:4	0:0	2	settings
op	54:12	0:0	2	.
water	54:13	0:0	2	mReverbDelay
op	54:26	0:0	2	=
call	54:28	54:76	2	var_InheritInteger
arg	54:48	54:55	3	p_demux
water	54:48	0:0	4	p_demux
arg	54:57	54:76	3	"mod-reverb-delay"
water	54:57	0:0	4	"mod-reverb-delay"
water	54:77	0:0	2	;
if	55:4	56:50	2	(var_InheritBool (p_demux ,"mod-megabass" ))
cond	55:8	55:49	3	var_InheritBool (p_demux ,"mod-megabass" )
call	55:8	55:49	4	var_InheritBool
arg	55:25	55:32	5	p_demux
water	55:25	0:0	6	p_demux
arg	55:34	55:49	5	"mod-megabass"
water	55:34	0:0	6	"mod-megabass"
stmts	56:8	56:50	3	
water	56:8	0:0	4	settings
op	56:16	0:0	4	.
water	56:17	0:0	4	mFlags
op	56:24	0:0	4	|=
water	56:27	0:0	4	MODPLUG_ENABLE_MEGABASS
water	56:50	0:0	4	;
water	57:4	0:0	2	settings
op	57:12	0:0	2	.
water	57:13	0:0	2	mBassAmount
op	57:25	0:0	2	=
call	57:27	57:77	2	var_InheritInteger
arg	57:47	57:54	3	p_demux
water	57:47	0:0	4	p_demux
arg	57:56	57:77	3	"mod-megabass-level"
water	57:56	0:0	4	"mod-megabass-level"
water	57:78	0:0	2	;
water	58:4	0:0	2	settings
op	58:12	0:0	2	.
water	58:13	0:0	2	mBassRange
op	58:24	0:0	2	=
call	58:26	58:76	2	var_InheritInteger
arg	58:46	58:53	3	p_demux
water	58:46	0:0	4	p_demux
arg	58:55	58:76	3	"mod-megabass-range"
water	58:55	0:0	4	"mod-megabass-range"
water	58:77	0:0	2	;
if	59:4	60:50	2	(var_InheritBool (p_demux ,"mod-surround" ))
cond	59:8	59:49	3	var_InheritBool (p_demux ,"mod-surround" )
call	59:8	59:49	4	var_InheritBool
arg	59:25	59:32	5	p_demux
water	59:25	0:0	6	p_demux
arg	59:34	59:49	5	"mod-surround"
water	59:34	0:0	6	"mod-surround"
stmts	60:8	60:50	3	
water	60:8	0:0	4	settings
op	60:16	0:0	4	.
water	60:17	0:0	4	mFlags
op	60:24	0:0	4	|=
water	60:27	0:0	4	MODPLUG_ENABLE_SURROUND
water	60:50	0:0	4	;
water	61:4	0:0	2	settings
op	61:12	0:0	2	.
water	61:13	0:0	2	mSurroundDepth
op	61:28	0:0	2	=
call	61:30	61:80	2	var_InheritInteger
arg	61:50	61:57	3	p_demux
water	61:50	0:0	4	p_demux
arg	61:59	61:80	3	"mod-surround-level"
water	61:59	0:0	4	"mod-surround-level"
water	61:81	0:0	2	;
water	62:4	0:0	2	settings
op	62:12	0:0	2	.
water	62:13	0:0	2	mSurroundDelay
op	62:28	0:0	2	=
call	62:30	62:80	2	var_InheritInteger
arg	62:50	62:57	3	p_demux
water	62:50	0:0	4	p_demux
arg	62:59	62:80	3	"mod-surround-delay"
water	62:59	0:0	4	"mod-surround-delay"
water	62:81	0:0	2	;
call	63:4	63:35	2	ModPlug_SetSettings
arg	63:25	63:35	3	&settings
op	63:25	0:0	4	&
water	63:26	0:0	4	settings
water	63:36	0:0	2	;
water	64:4	0:0	2	p_sys
op	64:9	0:0	2	->
water	64:11	0:0	2	f
op	64:13	0:0	2	=
call	64:15	64:58	2	ModPlug_Load
arg	64:29	64:42	3	p_sys->p_data
water	64:29	0:0	4	p_sys
op	64:34	0:0	4	->
water	64:36	0:0	4	p_data
arg	64:44	64:58	3	p_sys->i_data
water	64:44	0:0	4	p_sys
op	64:49	0:0	4	->
water	64:51	0:0	4	i_data
water	64:59	0:0	2	;
call	65:4	65:39	2	vlc_mutex_unlock
arg	65:22	65:39	3	&libmodplug_lock
op	65:22	0:0	4	&
water	65:23	0:0	4	libmodplug_lock
water	65:40	0:0	2	;
if	66:4	74:4	2	(! p_sys -> f)
cond	66:8	66:16	3	! p_sys -> f
op	66:8	0:0	4	!
water	66:9	0:0	4	p_sys
op	66:14	0:0	4	->
water	66:16	0:0	4	f
stmts	67:4	74:4	3	
water	67:4	0:0	4	{
call	68:8	68:58	4	msg_Err
arg	68:17	68:24	5	p_demux
water	68:17	0:0	6	p_demux
arg	68:26	68:58	5	"failed to understand the file"
water	68:26	0:0	6	"failed to understand the file"
water	68:59	0:0	4	;
call	70:8	70:35	4	stream_Seek
arg	70:21	70:31	5	p_demux->s
water	70:21	0:0	6	p_demux
op	70:28	0:0	6	->
water	70:30	0:0	6	s
arg	70:33	70:35	5	0
water	70:33	0:0	6	0
water	70:36	0:0	4	;
call	71:8	71:28	4	free
arg	71:14	71:28	5	p_sys->p_data
water	71:14	0:0	6	p_sys
op	71:19	0:0	6	->
water	71:21	0:0	6	p_data
water	71:29	0:0	4	;
call	72:8	72:20	4	free
arg	72:14	72:20	5	p_sys
water	72:14	0:0	6	p_sys
water	72:21	0:0	4	;
return	73:8	73:27	4	VLC_EGENERIC
water	73:15	0:0	5	VLC_EGENERIC
water	74:4	0:0	4	}
call	76:4	76:51	2	date_Init
arg	76:15	76:26	3	&p_sys->pts
op	76:15	0:0	4	&
water	76:16	0:0	4	p_sys
op	76:21	0:0	4	->
water	76:23	0:0	4	pts
arg	76:28	76:47	3	settings.mFrequency
water	76:28	0:0	4	settings
op	76:36	0:0	4	.
water	76:37	0:0	4	mFrequency
arg	76:49	76:51	3	1
water	76:49	0:0	4	1
water	76:52	0:0	2	;
call	77:4	77:29	2	date_Set
arg	77:14	77:25	3	&p_sys->pts
op	77:14	0:0	4	&
water	77:15	0:0	4	p_sys
op	77:20	0:0	4	->
water	77:22	0:0	4	pts
arg	77:27	77:29	3	0
water	77:27	0:0	4	0
water	77:30	0:0	2	;
water	78:4	0:0	2	p_sys
op	78:9	0:0	2	->
water	78:11	0:0	2	i_length
op	78:20	0:0	2	=
call	78:22	78:50	2	ModPlug_GetLength
arg	78:41	78:50	3	p_sys->f
water	78:41	0:0	4	p_sys
op	78:46	0:0	4	->
water	78:48	0:0	4	f
call	78:52	78:66	2	*INT64_C
arg	78:62	78:66	3	1000
water	78:62	0:0	4	1000
water	78:67	0:0	2	;
call	79:4	81:29	2	msg_Dbg
arg	79:13	79:20	3	p_demux
water	79:13	0:0	4	p_demux
arg	79:22	79:61	3	"MOD loaded name=%s lenght=%"PRId64"ms"
water	79:22	0:0	4	"MOD loaded name=%s lenght=%"
water	79:51	0:0	4	PRId64
water	79:57	0:0	4	"ms"
arg	80:13	80:40	3	ModPlug_GetName(p_sys->f)
call	80:13	80:39	4	ModPlug_GetName
arg	80:30	80:39	5	p_sys->f
water	80:30	0:0	6	p_sys
op	80:35	0:0	6	->
water	80:37	0:0	6	f
arg	81:13	81:29	3	p_sys->i_length
water	81:13	0:0	4	p_sys
op	81:18	0:0	4	->
water	81:20	0:0	4	i_length
water	81:30	0:0	2	;
call	83:4	83:76	2	es_format_Init
arg	83:20	83:31	3	&p_sys->fmt
op	83:20	0:0	4	&
water	83:21	0:0	4	p_sys
op	83:26	0:0	4	->
water	83:28	0:0	4	fmt
arg	83:33	83:41	3	AUDIO_ES
water	83:33	0:0	4	AUDIO_ES
arg	83:43	83:76	3	VLC_FOURCC('t','w','o','s')
call	83:43	83:74	4	VLC_FOURCC
arg	83:55	83:58	5	't'
water	83:55	0:0	6	't'
arg	83:60	83:63	5	'w'
water	83:60	0:0	6	'w'
arg	83:65	83:68	5	'o'
water	83:65	0:0	6	'o'
arg	83:70	83:74	5	's'
water	83:70	0:0	6	's'
water	83:77	0:0	2	;
call	85:4	85:76	2	es_format_Init
arg	85:20	85:31	3	&p_sys->fmt
op	85:20	0:0	4	&
water	85:21	0:0	4	p_sys
op	85:26	0:0	4	->
water	85:28	0:0	4	fmt
arg	85:33	85:41	3	AUDIO_ES
water	85:33	0:0	4	AUDIO_ES
arg	85:43	85:76	3	VLC_FOURCC('a','r','a','w')
call	85:43	85:74	4	VLC_FOURCC
arg	85:55	85:58	5	'a'
water	85:55	0:0	6	'a'
arg	85:60	85:63	5	'r'
water	85:60	0:0	6	'r'
arg	85:65	85:68	5	'a'
water	85:65	0:0	6	'a'
arg	85:70	85:74	5	'w'
water	85:70	0:0	6	'w'
water	85:77	0:0	2	;
water	87:4	0:0	2	p_sys
op	87:9	0:0	2	->
water	87:11	0:0	2	fmt
op	87:14	0:0	2	.
water	87:15	0:0	2	audio
op	87:20	0:0	2	.
water	87:21	0:0	2	i_rate
op	87:28	0:0	2	=
water	87:30	0:0	2	settings
op	87:38	0:0	2	.
water	87:39	0:0	2	mFrequency
water	87:49	0:0	2	;
water	88:4	0:0	2	p_sys
op	88:9	0:0	2	->
water	88:11	0:0	2	fmt
op	88:14	0:0	2	.
water	88:15	0:0	2	audio
op	88:20	0:0	2	.
water	88:21	0:0	2	i_channels
op	88:32	0:0	2	=
water	88:34	0:0	2	settings
op	88:42	0:0	2	.
water	88:43	0:0	2	mChannels
water	88:52	0:0	2	;
water	89:4	0:0	2	p_sys
op	89:9	0:0	2	->
water	89:11	0:0	2	fmt
op	89:14	0:0	2	.
water	89:15	0:0	2	audio
op	89:20	0:0	2	.
water	89:21	0:0	2	i_bitspersample
op	89:37	0:0	2	=
water	89:39	0:0	2	settings
op	89:47	0:0	2	.
water	89:48	0:0	2	mBits
water	89:53	0:0	2	;
water	90:4	0:0	2	p_sys
op	90:9	0:0	2	->
water	90:11	0:0	2	es
op	90:14	0:0	2	=
call	90:16	90:54	2	es_out_Add
arg	90:28	90:40	3	p_demux->out
water	90:28	0:0	4	p_demux
op	90:35	0:0	4	->
water	90:37	0:0	4	out
arg	90:42	90:54	3	&p_sys->fmt
op	90:42	0:0	4	&
water	90:43	0:0	4	p_sys
op	90:48	0:0	4	->
water	90:50	0:0	4	fmt
water	90:55	0:0	2	;
return	91:4	91:22	2	VLC_SUCCESS
water	91:11	0:0	3	VLC_SUCCESS

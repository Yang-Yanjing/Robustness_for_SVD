func	2:0	63:0	0	static vout_thread_t *	VoutCreate
params	2:32	0:0	1	
param	2:33	2:53	2	vlc_object_t *	object
param	3:33	3:64	2	const vout_configuration_t *	cfg
stmnts	0:0	62:15	1	
decl	5:4	5:27	2	video_format_t	original
if	6:4	7:19	2	(VoutValidateFormat (& original ,cfg -> fmt ))
cond	6:8	6:46	3	VoutValidateFormat (& original ,cfg -> fmt )
call	6:8	6:46	4	VoutValidateFormat
arg	6:27	6:36	5	&original
op	6:27	0:0	6	&
water	6:28	0:0	6	original
arg	6:38	6:46	5	cfg->fmt
water	6:38	0:0	6	cfg
op	6:41	0:0	6	->
water	6:43	0:0	6	fmt
stmts	7:8	7:19	3	
return	7:8	7:19	4	NULL
water	7:15	0:0	5	NULL
decl	9:4	11:59	2	vout_thread_t	*vout
op	9:24	0:0	2	=
call	9:26	11:58	3	vlc_custom_create
arg	9:44	9:50	4	object
water	9:44	0:0	5	object
arg	10:44	10:76	4	sizeof(*vout)+sizeof(*vout->p)
op	10:44	0:0	5	sizeof
water	10:50	0:0	5	(
op	10:51	0:0	5	*
water	10:52	0:0	5	vout
water	10:56	0:0	5	)
op	10:58	0:0	5	+
op	10:60	0:0	5	sizeof
water	10:66	0:0	5	(
op	10:67	0:0	5	*
water	10:68	0:0	5	vout
op	10:72	0:0	5	->
water	10:74	0:0	5	p
water	10:75	0:0	5	)
arg	11:44	11:58	4	"video output"
water	11:44	0:0	5	"video output"
if	12:4	15:4	2	(! vout)
cond	12:8	12:9	3	! vout
op	12:8	0:0	4	!
water	12:9	0:0	4	vout
stmts	12:15	15:4	3	
water	12:15	0:0	4	{
call	13:8	13:36	4	video_format_Clean
arg	13:27	13:36	5	&original
op	13:27	0:0	6	&
water	13:28	0:0	6	original
water	13:37	0:0	4	;
return	14:8	14:19	4	NULL
water	14:15	0:0	5	NULL
water	15:4	0:0	4	}
water	17:4	0:0	2	vout
op	17:8	0:0	2	->
water	17:10	0:0	2	p
op	17:12	0:0	2	=
water	17:14	0:0	2	(
water	17:15	0:0	2	vout_thread_sys_t
op	17:32	0:0	2	*
water	17:33	0:0	2	)
op	17:34	0:0	2	&
water	17:35	0:0	2	vout
op	17:39	0:0	2	[
water	17:40	0:0	2	1
op	17:41	0:0	2	]
water	17:42	0:0	2	;
water	18:4	0:0	2	vout
op	18:8	0:0	2	->
water	18:10	0:0	2	p
op	18:11	0:0	2	->
water	18:13	0:0	2	original
op	18:22	0:0	2	=
water	18:24	0:0	2	original
water	18:32	0:0	2	;
water	19:4	0:0	2	vout
op	19:8	0:0	2	->
water	19:10	0:0	2	p
op	19:11	0:0	2	->
water	19:13	0:0	2	dpb_size
op	19:22	0:0	2	=
water	19:24	0:0	2	cfg
op	19:27	0:0	2	->
water	19:29	0:0	2	dpb_size
water	19:37	0:0	2	;
call	20:4	20:39	2	vout_control_Init
arg	20:22	20:39	3	&vout->p->control
op	20:22	0:0	4	&
water	20:23	0:0	4	vout
op	20:27	0:0	4	->
water	20:29	0:0	4	p
op	20:30	0:0	4	->
water	20:32	0:0	4	control
water	20:40	0:0	2	;
call	21:4	21:62	2	vout_control_PushVoid
arg	21:26	21:43	3	&vout->p->control
op	21:26	0:0	4	&
water	21:27	0:0	4	vout
op	21:31	0:0	4	->
water	21:33	0:0	4	p
op	21:34	0:0	4	->
water	21:36	0:0	4	control
arg	21:45	21:62	3	VOUT_CONTROL_INIT
water	21:45	0:0	4	VOUT_CONTROL_INIT
water	21:63	0:0	2	;
call	22:4	22:43	2	vout_statistic_Init
arg	22:24	22:43	3	&vout->p->statistic
op	22:24	0:0	4	&
water	22:25	0:0	4	vout
op	22:29	0:0	4	->
water	22:31	0:0	4	p
op	22:32	0:0	4	->
water	22:34	0:0	4	statistic
water	22:44	0:0	2	;
call	23:4	23:41	2	vout_snapshot_Init
arg	23:23	23:41	3	&vout->p->snapshot
op	23:23	0:0	4	&
water	23:24	0:0	4	vout
op	23:28	0:0	4	->
water	23:30	0:0	4	p
op	23:31	0:0	4	->
water	23:33	0:0	4	snapshot
water	23:42	0:0	2	;
call	25:4	25:41	2	vlc_mutex_init
arg	25:19	25:41	3	&vout->p->picture_lock
op	25:19	0:0	4	&
water	25:20	0:0	4	vout
op	25:24	0:0	4	->
water	25:26	0:0	4	p
op	25:27	0:0	4	->
water	25:29	0:0	4	picture_lock
water	25:42	0:0	2	;
call	26:4	26:40	2	vlc_mutex_init
arg	26:19	26:40	3	&vout->p->filter.lock
op	26:19	0:0	4	&
water	26:20	0:0	4	vout
op	26:24	0:0	4	->
water	26:26	0:0	4	p
op	26:27	0:0	4	->
water	26:29	0:0	4	filter
op	26:35	0:0	4	.
water	26:36	0:0	4	lock
water	26:41	0:0	2	;
call	27:4	27:37	2	vlc_mutex_init
arg	27:19	27:37	3	&vout->p->spu_lock
op	27:19	0:0	4	&
water	27:20	0:0	4	vout
op	27:24	0:0	4	->
water	27:26	0:0	4	p
op	27:27	0:0	4	->
water	27:29	0:0	4	spu_lock
water	27:38	0:0	2	;
water	29:4	0:0	2	vout
op	29:8	0:0	2	->
water	29:10	0:0	2	p
op	29:11	0:0	2	->
water	29:13	0:0	2	spu
op	29:17	0:0	2	=
call	29:19	29:34	2	spu_Create
arg	29:30	29:34	3	vout
water	29:30	0:0	4	vout
water	29:35	0:0	2	;
call	31:4	31:22	2	vout_IntfInit
arg	31:18	31:22	3	vout
water	31:18	0:0	4	vout
water	31:23	0:0	2	;
water	32:4	0:0	2	vout
op	32:8	0:0	2	->
water	32:10	0:0	2	p
op	32:11	0:0	2	->
water	32:13	0:0	2	title
op	32:18	0:0	2	.
water	32:19	0:0	2	show
op	32:28	0:0	2	=
call	32:30	32:70	2	var_InheritBool
arg	32:46	32:50	3	vout
water	32:46	0:0	4	vout
arg	32:52	32:70	3	"video-title-show"
water	32:52	0:0	4	"video-title-show"
water	32:71	0:0	2	;
water	33:4	0:0	2	vout
op	33:8	0:0	2	->
water	33:10	0:0	2	p
op	33:11	0:0	2	->
water	33:13	0:0	2	title
op	33:18	0:0	2	.
water	33:19	0:0	2	timeout
op	33:28	0:0	2	=
call	33:30	33:76	2	var_InheritInteger
arg	33:49	33:53	3	vout
water	33:49	0:0	4	vout
arg	33:55	33:76	3	"video-title-timeout"
water	33:55	0:0	4	"video-title-timeout"
water	33:77	0:0	2	;
water	34:4	0:0	2	vout
op	34:8	0:0	2	->
water	34:10	0:0	2	p
op	34:11	0:0	2	->
water	34:13	0:0	2	title
op	34:18	0:0	2	.
water	34:19	0:0	2	position
op	34:28	0:0	2	=
call	34:30	34:77	2	var_InheritInteger
arg	34:49	34:53	3	vout
water	34:49	0:0	4	vout
arg	34:55	34:77	3	"video-title-position"
water	34:55	0:0	4	"video-title-position"
water	34:78	0:0	2	;
decl	36:4	36:67	2	char	*splitter_name
op	36:24	0:0	2	=
call	36:26	36:66	3	var_InheritString
arg	36:44	36:48	4	vout
water	36:44	0:0	5	vout
arg	36:50	36:66	4	"video-splitter"
water	36:50	0:0	5	"video-splitter"
if	37:4	39:4	2	(splitter_name && * splitter_name)
cond	37:8	37:26	3	splitter_name && * splitter_name
water	37:8	0:0	4	splitter_name
op	37:22	0:0	4	&&
op	37:25	0:0	4	*
water	37:26	0:0	4	splitter_name
stmts	37:41	39:4	3	
water	37:41	0:0	4	{
water	38:8	0:0	4	vout
op	38:12	0:0	4	->
water	38:14	0:0	4	p
op	38:15	0:0	4	->
water	38:17	0:0	4	splitter_name
op	38:31	0:0	4	=
water	38:33	0:0	4	splitter_name
water	38:46	0:0	4	;
water	39:4	0:0	4	}
else	39:6	41:4	2
stmts	39:11	41:4	3	
water	39:11	0:0	4	{
call	40:8	40:26	4	free
arg	40:13	40:26	5	splitter_name
water	40:13	0:0	6	splitter_name
water	40:27	0:0	4	;
water	41:4	0:0	4	}
call	43:4	43:70	2	vout_InitInterlacingSupport
arg	43:32	43:36	3	vout
water	43:32	0:0	4	vout
arg	43:38	43:70	3	vout->p->displayed.is_interlaced
water	43:38	0:0	4	vout
op	43:42	0:0	4	->
water	43:44	0:0	4	p
op	43:45	0:0	4	->
water	43:47	0:0	4	displayed
op	43:56	0:0	4	.
water	43:57	0:0	4	is_interlaced
water	43:71	0:0	2	;
call	45:4	45:50	2	vlc_object_set_destructor
arg	45:30	45:34	3	vout
water	45:30	0:0	4	vout
arg	45:36	45:50	3	VoutDestructor
water	45:36	0:0	4	VoutDestructor
water	45:51	0:0	2	;
if	47:4	52:4	2	(vlc_clone (& vout -> p -> thread ,Thread ,vout ,VLC_THREAD_PRIORITY_OUTPUT ))
cond	47:8	48:44	3	vlc_clone (& vout -> p -> thread ,Thread ,vout ,VLC_THREAD_PRIORITY_OUTPUT )
call	47:8	48:44	4	vlc_clone
arg	47:18	47:34	5	&vout->p->thread
op	47:18	0:0	6	&
water	47:19	0:0	6	vout
op	47:23	0:0	6	->
water	47:25	0:0	6	p
op	47:26	0:0	6	->
water	47:28	0:0	6	thread
arg	47:36	47:42	5	Thread
water	47:36	0:0	6	Thread
arg	47:44	47:48	5	vout
water	47:44	0:0	6	vout
arg	48:18	48:44	5	VLC_THREAD_PRIORITY_OUTPUT
water	48:18	0:0	6	VLC_THREAD_PRIORITY_OUTPUT
stmts	48:47	52:4	3	
water	48:47	0:0	4	{
call	49:8	49:32	4	spu_Destroy
arg	49:20	49:32	5	vout->p->spu
water	49:20	0:0	6	vout
op	49:24	0:0	6	->
water	49:26	0:0	6	p
op	49:27	0:0	6	->
water	49:29	0:0	6	spu
water	49:33	0:0	4	;
call	50:8	50:31	4	vlc_object_release
arg	50:27	50:31	5	vout
water	50:27	0:0	6	vout
water	50:32	0:0	4	;
return	51:8	51:19	4	NULL
water	51:15	0:0	5	NULL
water	52:4	0:0	4	}
call	53:4	53:44	2	vout_control_WaitEmpty
arg	53:27	53:44	3	&vout->p->control
op	53:27	0:0	4	&
water	53:28	0:0	4	vout
op	53:32	0:0	4	->
water	53:34	0:0	4	p
op	53:35	0:0	4	->
water	53:37	0:0	4	control
water	53:45	0:0	2	;
if	54:4	58:4	2	(vout -> p -> dead)
cond	54:8	54:17	3	vout -> p -> dead
water	54:8	0:0	4	vout
op	54:12	0:0	4	->
water	54:14	0:0	4	p
op	54:15	0:0	4	->
water	54:17	0:0	4	dead
stmts	54:23	58:4	3	
water	54:23	0:0	4	{
call	55:8	55:52	4	msg_Err
arg	55:16	55:20	5	vout
water	55:16	0:0	6	vout
arg	55:22	55:52	5	"video output creation failed"
water	55:22	0:0	6	"video output creation failed"
water	55:53	0:0	4	;
call	56:8	56:33	4	vout_CloseAndRelease
arg	56:29	56:33	5	vout
water	56:29	0:0	6	vout
water	56:34	0:0	4	;
return	57:8	57:19	4	NULL
water	57:15	0:0	5	NULL
water	58:4	0:0	4	}
water	59:4	0:0	2	vout
op	59:8	0:0	2	->
water	59:10	0:0	2	p
op	59:11	0:0	2	->
water	59:13	0:0	2	input
op	59:19	0:0	2	=
water	59:21	0:0	2	cfg
op	59:24	0:0	2	->
water	59:26	0:0	2	input
water	59:31	0:0	2	;
if	60:4	61:54	2	(vout -> p -> input)
cond	60:8	60:17	3	vout -> p -> input
water	60:8	0:0	4	vout
op	60:12	0:0	4	->
water	60:14	0:0	4	p
op	60:15	0:0	4	->
water	60:17	0:0	4	input
stmts	61:8	61:54	3	
call	61:8	61:53	4	spu_Attach
arg	61:19	61:31	5	vout->p->spu
water	61:19	0:0	6	vout
op	61:23	0:0	6	->
water	61:25	0:0	6	p
op	61:26	0:0	6	->
water	61:28	0:0	6	spu
arg	61:33	61:47	5	vout->p->input
water	61:33	0:0	6	vout
op	61:37	0:0	6	->
water	61:39	0:0	6	p
op	61:40	0:0	6	->
water	61:42	0:0	6	input
arg	61:49	61:53	5	true
water	61:49	0:0	6	true
water	61:54	0:0	4	;
return	62:4	62:15	2	vout
water	62:11	0:0	3	vout

func	2:0	32:0	0	static int	Get
params	2:14	0:0	1	
param	2:15	2:27	2	vlc_va_t *	va
param	2:29	2:42	2	void * *	opaque
param	2:44	2:58	2	uint8_t * *	data
stmnts	0:0	31:22	1	
decl	4:4	4:31	2	vlc_va_sys_t	*sys
op	4:22	0:0	2	=
water	4:24	0:0	2	va
op	4:26	0:0	2	->
water	4:28	0:0	2	sys
decl	6:4	6:77	2	HRESULT	hr
op	6:15	0:0	2	=
call	6:17	6:76	3	IDirect3DDeviceManager9_TestDevice
arg	6:52	6:63	4	sys->devmng
water	6:52	0:0	5	sys
op	6:55	0:0	5	->
water	6:57	0:0	5	devmng
arg	6:65	6:76	4	sys->device
water	6:65	0:0	5	sys
op	6:68	0:0	5	->
water	6:70	0:0	5	device
if	7:4	10:4	2	(hr == DXVA2_E_NEW_VIDEO_DEVICE)
cond	7:8	7:14	3	hr == DXVA2_E_NEW_VIDEO_DEVICE
water	7:8	0:0	4	hr
op	7:11	0:0	4	==
water	7:14	0:0	4	DXVA2_E_NEW_VIDEO_DEVICE
stmts	7:40	10:4	3	
water	7:40	0:0	4	{
if	8:8	9:31	4	(DxResetVideoDecoder (va ))
cond	8:12	8:34	5	DxResetVideoDecoder (va )
call	8:12	8:34	6	DxResetVideoDecoder
arg	8:32	8:34	7	va
water	8:32	0:0	8	va
stmts	9:12	9:31	5	
return	9:12	9:31	6	VLC_EGENERIC
water	9:19	0:0	7	VLC_EGENERIC
water	10:4	0:0	4	}
else	10:6	13:4	2
stmts	10:11	13:4	3	
if	10:11	13:4	4	(FAILED (hr ))
cond	10:15	10:24	5	FAILED (hr )
call	10:15	10:24	6	FAILED
arg	10:22	10:24	7	hr
water	10:22	0:0	8	hr
stmts	10:27	13:4	5	
water	10:27	0:0	6	{
call	11:8	11:73	6	msg_Err
arg	11:16	11:18	7	va
water	11:16	0:0	8	va
arg	11:20	11:59	7	"IDirect3DDeviceManager9_TestDevice %u"
water	11:20	0:0	8	"IDirect3DDeviceManager9_TestDevice %u"
arg	11:61	11:73	7	(unsigned)hr
water	11:61	0:0	8	(
water	11:62	0:0	8	unsigned
water	11:70	0:0	8	)
water	11:71	0:0	8	hr
water	11:74	0:0	6	;
return	12:8	12:27	6	VLC_EGENERIC
water	12:15	0:0	7	VLC_EGENERIC
water	13:4	0:0	6	}
water	16:4	0:0	2	unsigned
water	16:13	0:0	2	i
water	16:14	0:0	2	,
water	16:16	0:0	2	old
water	16:19	0:0	2	;
for	17:4	23:4	2	(i = 0 , old = 0 ;i < sys -> surface_count;i ++)
forinit	17:9	17:23	3	i = 0 , old = 0 ;
water	17:9	0:0	4	i
op	17:11	0:0	4	=
water	17:13	0:0	4	0
water	17:14	0:0	4	,
water	17:16	0:0	4	old
op	17:20	0:0	4	=
water	17:22	0:0	4	0
water	17:23	0:0	4	;
cond	17:25	17:34	3	i < sys -> surface_count
water	17:25	0:0	4	i
op	17:27	0:0	4	<
water	17:29	0:0	4	sys
op	17:32	0:0	4	->
water	17:34	0:0	4	surface_count
forexpr	17:49	17:50	3	i ++
water	17:49	0:0	4	i
op	17:50	0:0	4	++
stmts	17:54	23:4	3	
water	17:54	0:0	4	{
decl	18:8	18:52	4	vlc_va_surface_t	*surface
op	18:34	0:0	4	=
op	18:36	0:0	4	&
water	18:37	0:0	4	sys
op	18:40	0:0	4	->
water	18:42	0:0	4	surface
op	18:49	0:0	4	[
water	18:50	0:0	4	i
op	18:51	0:0	4	]
if	19:8	20:17	4	(! surface -> refcount)
cond	19:12	19:22	5	! surface -> refcount
op	19:12	0:0	6	!
water	19:13	0:0	6	surface
op	19:20	0:0	6	->
water	19:22	0:0	6	refcount
stmts	20:12	20:17	5	
break	20:12	20:17	6	
if	21:8	22:19	4	(surface -> order < sys -> surface [ old ] . order)
cond	21:12	21:47	5	surface -> order < sys -> surface [ old ] . order
water	21:12	0:0	6	surface
op	21:19	0:0	6	->
water	21:21	0:0	6	order
op	21:27	0:0	6	<
water	21:29	0:0	6	sys
op	21:32	0:0	6	->
water	21:34	0:0	6	surface
op	21:41	0:0	6	[
water	21:42	0:0	6	old
op	21:45	0:0	6	]
op	21:46	0:0	6	.
water	21:47	0:0	6	order
stmts	22:12	22:19	5	
water	22:12	0:0	6	old
op	22:16	0:0	6	=
water	22:18	0:0	6	i
water	22:19	0:0	6	;
water	23:4	0:0	4	}
if	24:4	25:15	2	(i >= sys -> surface_count)
cond	24:8	24:18	3	i >= sys -> surface_count
water	24:8	0:0	4	i
op	24:10	0:0	4	>=
water	24:13	0:0	4	sys
op	24:16	0:0	4	->
water	24:18	0:0	4	surface_count
stmts	25:8	25:15	3	
water	25:8	0:0	4	i
op	25:10	0:0	4	=
water	25:12	0:0	4	old
water	25:15	0:0	4	;
decl	26:4	26:48	2	vlc_va_surface_t	*surface
op	26:30	0:0	2	=
op	26:32	0:0	2	&
water	26:33	0:0	2	sys
op	26:36	0:0	2	->
water	26:38	0:0	2	surface
op	26:45	0:0	2	[
water	26:46	0:0	2	i
op	26:47	0:0	2	]
water	27:4	0:0	2	surface
op	27:11	0:0	2	->
water	27:13	0:0	2	refcount
op	27:22	0:0	2	=
water	27:24	0:0	2	1
water	27:25	0:0	2	;
water	28:4	0:0	2	surface
op	28:11	0:0	2	->
water	28:13	0:0	2	order
op	28:19	0:0	2	=
water	28:21	0:0	2	sys
op	28:24	0:0	2	->
water	28:26	0:0	2	surface_order
op	28:39	0:0	2	++
water	28:41	0:0	2	;
op	29:4	0:0	2	*
water	29:5	0:0	2	data
op	29:10	0:0	2	=
water	29:12	0:0	2	(
water	29:13	0:0	2	void
op	29:18	0:0	2	*
water	29:19	0:0	2	)
water	29:20	0:0	2	surface
op	29:27	0:0	2	->
water	29:29	0:0	2	d3d
water	29:32	0:0	2	;
op	30:4	0:0	2	*
water	30:5	0:0	2	opaque
op	30:12	0:0	2	=
water	30:14	0:0	2	surface
water	30:21	0:0	2	;
return	31:4	31:22	2	VLC_SUCCESS
water	31:11	0:0	3	VLC_SUCCESS

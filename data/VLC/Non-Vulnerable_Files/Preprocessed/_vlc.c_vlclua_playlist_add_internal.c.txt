func	2:0	144:0	0	int	vlclua_playlist_add_internal
params	2:32	0:0	1	
param	2:34	2:54	2	vlc_object_t *	p_this
param	2:56	2:68	2	lua_State *	L
param	3:36	3:58	2	playlist_t *	p_playlist
param	4:36	4:58	2	input_item_t *	p_parent
param	4:60	4:72	2	bool	b_play
stmnts	0:0	143:18	1	
decl	6:4	6:19	2	int	i_count
op	6:16	0:0	2	=
water	6:18	0:0	2	0
decl	7:4	7:43	2	input_item_node_t	*p_parent_node
op	7:37	0:0	2	=
water	7:39	0:0	2	NULL
call	8:4	8:35	2	assert
arg	8:12	8:35	3	p_parent||p_playlist
water	8:12	0:0	4	p_parent
op	8:21	0:0	4	||
water	8:24	0:0	4	p_playlist
water	8:36	0:0	2	;
if	10:4	138:4	2	(lua_istable (L ,- 1 ))
cond	10:8	10:27	3	lua_istable (L ,- 1 )
call	10:8	10:27	4	lua_istable
arg	10:21	10:22	5	L
water	10:21	0:0	6	L
arg	10:24	10:27	5	-1
op	10:24	0:0	6	-
water	10:25	0:0	6	1
stmts	11:4	138:4	3	
water	11:4	0:0	4	{
if	12:8	12:73	4	(p_parent)
cond	12:12	12:12	5	p_parent
water	12:12	0:0	6	p_parent
stmts	12:23	12:73	5	
water	12:23	0:0	6	p_parent_node
op	12:37	0:0	6	=
call	12:39	12:72	6	input_item_node_Create
arg	12:63	12:72	7	p_parent
water	12:63	0:0	8	p_parent
water	12:73	0:0	6	;
call	13:8	13:23	4	lua_pushnil
arg	13:21	13:23	5	L
water	13:21	0:0	6	L
water	13:24	0:0	4	;
while	15:8	131:8	4	(lua_next (L ,- 2 ))
cond	15:15	15:31	5	lua_next (L ,- 2 )
call	15:15	15:31	6	lua_next
arg	15:25	15:26	7	L
water	15:25	0:0	8	L
arg	15:28	15:31	7	-2
op	15:28	0:0	8	-
water	15:29	0:0	8	2
stmts	16:8	131:8	5	
water	16:8	0:0	6	{
if	19:12	122:12	6	(lua_istable (L ,- 1 ))
cond	19:16	19:35	7	lua_istable (L ,- 1 )
call	19:16	19:35	8	lua_istable
arg	19:29	19:30	9	L
water	19:29	0:0	10	L
arg	19:32	19:35	9	-1
op	19:32	0:0	10	-
water	19:33	0:0	10	1
stmts	20:12	122:12	7	
water	20:12	0:0	8	{
call	21:16	21:44	8	lua_getfield
arg	21:30	21:31	9	L
water	21:30	0:0	10	L
arg	21:33	21:35	9	-1
op	21:33	0:0	10	-
water	21:34	0:0	10	1
arg	21:37	21:44	9	"path"
water	21:37	0:0	10	"path"
water	21:45	0:0	8	;
if	23:16	114:16	8	(lua_isstring (L ,- 1 ))
cond	23:20	23:40	9	lua_isstring (L ,- 1 )
call	23:20	23:40	10	lua_isstring
arg	23:34	23:35	11	L
water	23:34	0:0	12	L
arg	23:37	23:40	11	-1
op	23:37	0:0	12	-
water	23:38	0:0	12	1
stmts	24:16	114:16	9	
water	24:16	0:0	10	{
decl	25:20	25:53	10	char	*psz_oldurl
op	25:47	0:0	10	=
water	25:49	0:0	10	NULL
decl	26:20	26:53	10	const char	*psz_path
op	26:47	0:0	10	=
water	26:49	0:0	10	NULL
decl	27:20	27:53	10	char	*psz_u8path
op	27:47	0:0	10	=
water	27:49	0:0	10	NULL
decl	28:20	28:53	10	const char	*psz_name
op	28:47	0:0	10	=
water	28:49	0:0	10	NULL
decl	29:20	29:53	10	char	**ppsz_options
op	29:47	0:0	10	=
water	29:49	0:0	10	NULL
decl	30:20	30:50	10	int	i_options
op	30:47	0:0	10	=
water	30:49	0:0	10	0
decl	31:20	31:51	10	mtime_t	i_duration
op	31:47	0:0	10	=
op	31:49	0:0	10	-
water	31:50	0:0	10	1
decl	32:20	32:41	10	input_item_t	*p_input
if	34:20	37:20	10	(p_parent)
cond	34:24	34:24	11	p_parent
water	34:24	0:0	12	p_parent
stmts	34:34	37:20	11	
water	34:34	0:0	12	{
water	35:24	0:0	12	psz_oldurl
op	35:35	0:0	12	=
call	35:37	35:65	12	input_item_GetURI
arg	35:56	35:65	13	p_parent
water	35:56	0:0	14	p_parent
water	35:66	0:0	12	;
call	36:24	36:68	12	msg_Dbg
arg	36:33	36:39	13	p_this
water	36:33	0:0	14	p_this
arg	36:41	36:55	13	"old path: %s"
water	36:41	0:0	14	"old path: %s"
arg	36:57	36:68	13	psz_oldurl
water	36:57	0:0	14	psz_oldurl
water	36:69	0:0	12	;
water	37:20	0:0	12	}
water	38:20	0:0	10	psz_path
op	38:29	0:0	10	=
call	38:31	38:51	10	lua_tostring
arg	38:45	38:46	11	L
water	38:45	0:0	12	L
arg	38:48	38:51	11	-1
op	38:48	0:0	12	-
water	38:49	0:0	12	1
water	38:52	0:0	10	;
call	39:20	39:58	10	msg_Dbg
arg	39:29	39:35	11	p_this
water	39:29	0:0	12	p_this
arg	39:37	39:47	11	"Path: %s"
water	39:37	0:0	12	"Path: %s"
arg	39:49	39:58	11	psz_path
water	39:49	0:0	12	psz_path
water	39:59	0:0	10	;
call	40:20	40:48	10	lua_getfield
arg	40:34	40:35	11	L
water	40:34	0:0	12	L
arg	40:37	40:39	11	-2
op	40:37	0:0	12	-
water	40:38	0:0	12	2
arg	40:41	40:48	11	"name"
water	40:41	0:0	12	"name"
water	40:49	0:0	10	;
if	42:20	46:20	10	(lua_isstring (L ,- 1 ))
cond	42:24	42:44	11	lua_isstring (L ,- 1 )
call	42:24	42:44	12	lua_isstring
arg	42:38	42:39	13	L
water	42:38	0:0	14	L
arg	42:41	42:44	13	-1
op	42:41	0:0	14	-
water	42:42	0:0	14	1
stmts	43:20	46:20	11	
water	43:20	0:0	12	{
water	44:24	0:0	12	psz_name
op	44:33	0:0	12	=
call	44:35	44:55	12	lua_tostring
arg	44:49	44:50	13	L
water	44:49	0:0	14	L
arg	44:52	44:55	13	-1
op	44:52	0:0	14	-
water	44:53	0:0	14	1
water	44:56	0:0	12	;
call	45:24	45:62	12	msg_Dbg
arg	45:33	45:39	13	p_this
water	45:33	0:0	14	p_this
arg	45:41	45:51	13	"Name: %s"
water	45:41	0:0	14	"Name: %s"
arg	45:53	45:62	13	psz_name
water	45:53	0:0	14	psz_name
water	45:63	0:0	12	;
water	46:20	0:0	12	}
else	47:20	52:20	10
stmts	48:20	52:20	11	
water	48:20	0:0	12	{
if	49:24	50:88	12	(!lua_isnil (L ,- 1 ))
cond	49:28	49:46	13	!lua_isnil (L ,- 1 )
op	49:28	0:0	14	!
call	49:29	49:46	14	lua_isnil
arg	49:40	49:41	15	L
water	49:40	0:0	16	L
arg	49:43	49:46	15	-1
op	49:43	0:0	16	-
water	49:44	0:0	16	1
stmts	50:28	50:88	13	
call	50:28	50:87	14	msg_Warn
arg	50:38	50:44	15	p_this
water	50:38	0:0	16	p_this
arg	50:46	50:87	15	"Playlist item name should be a string."
water	50:46	0:0	16	"Playlist item name should be a string."
water	50:88	0:0	14	;
water	51:24	0:0	12	psz_name
op	51:33	0:0	12	=
water	51:35	0:0	12	NULL
water	51:39	0:0	12	;
water	52:20	0:0	12	}
call	54:20	54:52	10	lua_getfield
arg	54:34	54:35	11	L
water	54:34	0:0	12	L
arg	54:37	54:39	11	-3
op	54:37	0:0	12	-
water	54:38	0:0	12	3
arg	54:41	54:52	11	"duration"
water	54:41	0:0	12	"duration"
water	54:53	0:0	10	;
if	56:20	59:20	10	(lua_isnumber (L ,- 1 ))
cond	56:24	56:44	11	lua_isnumber (L ,- 1 )
call	56:24	56:44	12	lua_isnumber
arg	56:38	56:39	13	L
water	56:38	0:0	14	L
arg	56:41	56:44	13	-1
op	56:41	0:0	14	-
water	56:42	0:0	14	1
stmts	57:20	59:20	11	
water	57:20	0:0	12	{
water	58:24	0:0	12	i_duration
op	58:35	0:0	12	=
call	58:37	58:72	12	(mtime_t)
arg	58:47	58:72	13	lua_tonumber(L,-1)*1e6
call	58:47	58:67	14	lua_tonumber
arg	58:61	58:62	15	L
water	58:61	0:0	16	L
arg	58:64	58:67	15	-1
op	58:64	0:0	16	-
water	58:65	0:0	16	1
op	58:68	0:0	14	*
water	58:69	0:0	14	1
water	58:70	0:0	14	e6
water	58:73	0:0	12	;
water	59:20	0:0	12	}
else	60:20	63:20	10
stmts	60:25	63:20	11	
if	60:25	63:20	12	(!lua_isnil (L ,- 1 ))
cond	60:29	60:47	13	!lua_isnil (L ,- 1 )
op	60:29	0:0	14	!
call	60:30	60:47	14	lua_isnil
arg	60:41	60:42	15	L
water	60:41	0:0	16	L
arg	60:44	60:47	15	-1
op	60:44	0:0	16	-
water	60:45	0:0	16	1
stmts	61:20	63:20	13	
water	61:20	0:0	14	{
call	62:24	62:100	14	msg_Warn
arg	62:34	62:40	15	p_this
water	62:34	0:0	16	p_this
arg	62:42	62:100	15	"Playlist item duration should be a number (in seconds)."
water	62:42	0:0	16	"Playlist item duration should be a number (in seconds)."
water	62:101	0:0	14	;
water	63:20	0:0	14	}
call	64:20	64:34	10	lua_pop
arg	64:29	64:30	11	L
water	64:29	0:0	12	L
arg	64:32	64:34	11	1
water	64:32	0:0	12	1
water	64:35	0:0	10	;
call	67:20	67:41	10	lua_pushvalue
arg	67:35	67:36	11	L
water	67:35	0:0	12	L
arg	67:38	67:41	11	-3
op	67:38	0:0	12	-
water	67:39	0:0	12	3
water	67:42	0:0	10	;
call	69:20	69:78	10	vlclua_read_options
arg	69:41	69:47	11	p_this
water	69:41	0:0	12	p_this
arg	69:49	69:50	11	L
water	69:49	0:0	12	L
arg	69:52	69:62	11	&i_options
op	69:52	0:0	12	&
water	69:53	0:0	12	i_options
arg	69:64	69:78	11	&ppsz_options
op	69:64	0:0	12	&
water	69:65	0:0	12	ppsz_options
water	69:79	0:0	10	;
water	71:20	0:0	10	p_input
op	71:28	0:0	10	=
call	71:30	74:59	10	input_item_NewExt
arg	71:49	71:57	11	psz_path
water	71:49	0:0	12	psz_path
arg	71:59	71:67	11	psz_name
water	71:59	0:0	12	psz_name
arg	71:69	71:78	11	i_options
water	71:69	0:0	12	i_options
arg	72:48	72:75	11	(constchar**)ppsz_options
water	72:48	0:0	12	(
water	72:49	0:0	12	const
water	72:55	0:0	12	char
op	72:60	0:0	12	*
op	72:61	0:0	12	*
water	72:62	0:0	12	)
water	72:63	0:0	12	ppsz_options
arg	73:48	73:72	11	VLC_INPUT_OPTION_TRUSTED
water	73:48	0:0	12	VLC_INPUT_OPTION_TRUSTED
arg	74:48	74:59	11	i_duration
water	74:48	0:0	12	i_duration
water	74:60	0:0	10	;
call	75:20	75:34	10	lua_pop
arg	75:29	75:30	11	L
water	75:29	0:0	12	L
arg	75:32	75:34	11	3
water	75:32	0:0	12	3
water	75:35	0:0	10	;
call	78:20	78:62	10	vlclua_read_meta_data
arg	78:43	78:49	11	p_this
water	78:43	0:0	12	p_this
arg	78:51	78:52	11	L
water	78:51	0:0	12	L
arg	78:54	78:62	11	p_input
water	78:54	0:0	12	p_input
water	78:63	0:0	10	;
decl	80:20	80:60	10	char	*url
op	80:30	0:0	10	=
call	80:32	80:59	11	input_item_GetURL
arg	80:51	80:59	12	p_input
water	80:51	0:0	13	p_input
if	81:20	86:20	10	(url == NULL && p_parent)
cond	81:24	81:39	11	url == NULL && p_parent
water	81:24	0:0	12	url
op	81:28	0:0	12	==
water	81:31	0:0	12	NULL
op	81:36	0:0	12	&&
water	81:39	0:0	12	p_parent
stmts	82:20	86:20	11	
water	82:20	0:0	12	{
call	83:24	83:47	12	EnsureUTF8
arg	83:36	83:47	13	psz_oldurl
water	83:36	0:0	14	psz_oldurl
water	83:48	0:0	12	;
call	84:24	84:68	12	msg_Dbg
arg	84:33	84:39	13	p_this
water	84:33	0:0	14	p_this
arg	84:41	84:55	13	"meta-URL: %s"
water	84:41	0:0	14	"meta-URL: %s"
arg	84:57	84:68	13	psz_oldurl
water	84:57	0:0	14	psz_oldurl
water	84:69	0:0	12	;
call	85:24	85:64	12	input_item_SetURL
arg	85:44	85:51	13	p_input
water	85:44	0:0	14	p_input
arg	85:53	85:64	13	psz_oldurl
water	85:53	0:0	14	psz_oldurl
water	85:65	0:0	12	;
water	86:20	0:0	12	}
call	87:20	87:37	10	free
arg	87:26	87:37	11	psz_oldurl
water	87:26	0:0	12	psz_oldurl
water	87:38	0:0	10	;
call	88:20	88:30	10	free
arg	88:26	88:30	11	url
water	88:26	0:0	12	url
water	88:31	0:0	10	;
decl	90:20	90:64	10	char	*title
op	90:32	0:0	10	=
call	90:34	90:63	11	input_item_GetTitle
arg	90:55	90:63	12	p_input
water	90:55	0:0	13	p_input
if	91:20	92:65	10	(title == NULL)
cond	91:24	91:33	11	title == NULL
water	91:24	0:0	12	title
op	91:30	0:0	12	==
water	91:33	0:0	12	NULL
stmts	92:24	92:65	11	
call	92:24	92:64	12	input_item_SetTitle
arg	92:46	92:53	13	p_input
water	92:46	0:0	14	p_input
arg	92:55	92:64	13	psz_name
water	92:55	0:0	14	psz_name
water	92:65	0:0	12	;
call	93:20	93:32	10	free
arg	93:26	93:32	11	title
water	93:26	0:0	12	title
water	93:33	0:0	10	;
call	95:20	95:69	10	vlclua_read_custom_meta_data
arg	95:50	95:56	11	p_this
water	95:50	0:0	12	p_this
arg	95:58	95:59	11	L
water	95:58	0:0	12	L
arg	95:61	95:69	11	p_input
water	95:61	0:0	12	p_input
water	95:70	0:0	10	;
if	97:20	101:20	10	(p_parent)
cond	97:24	97:24	11	p_parent
water	97:24	0:0	12	p_parent
stmts	98:20	101:20	11	
water	98:20	0:0	12	{
call	99:24	99:66	12	input_item_CopyOptions
arg	99:48	99:56	13	p_parent
water	99:48	0:0	14	p_parent
arg	99:58	99:66	13	p_input
water	99:58	0:0	14	p_input
water	99:67	0:0	12	;
call	100:24	100:75	12	input_item_node_AppendItem
arg	100:52	100:65	13	p_parent_node
water	100:52	0:0	14	p_parent_node
arg	100:67	100:75	13	p_input
water	100:67	0:0	14	p_input
water	100:76	0:0	12	;
water	101:20	0:0	12	}
else	102:20	107:58	10
stmts	104:24	107:58	11	
call	104:24	107:57	12	playlist_AddInput
arg	104:43	104:53	13	p_playlist
water	104:43	0:0	14	p_playlist
arg	104:55	104:62	13	p_input
water	104:55	0:0	14	p_input
arg	105:31	106:75	13	PLAYLIST_APPEND|(b_play?PLAYLIST_GO:PLAYLIST_PREPARSE)
water	105:31	0:0	14	PLAYLIST_APPEND
op	105:47	0:0	14	|
water	106:31	0:0	14	(
water	106:33	0:0	14	b_play
water	106:40	0:0	14	?
water	106:42	0:0	14	PLAYLIST_GO
water	106:54	0:0	14	:
water	106:56	0:0	14	PLAYLIST_PREPARSE
water	106:74	0:0	14	)
arg	107:31	107:43	13	PLAYLIST_END
water	107:31	0:0	14	PLAYLIST_END
arg	107:45	107:49	13	true
water	107:45	0:0	14	true
arg	107:51	107:57	13	false
water	107:51	0:0	14	false
water	107:58	0:0	12	;
water	108:20	0:0	10	i_count
op	108:28	0:0	10	++
water	108:30	0:0	10	;
call	109:20	109:43	10	vlc_gc_decref
arg	109:35	109:43	11	p_input
water	109:35	0:0	12	p_input
water	109:44	0:0	10	;
while	110:20	111:57	10	(i_options > 0)
cond	110:27	110:39	11	i_options > 0
water	110:27	0:0	12	i_options
op	110:37	0:0	12	>
water	110:39	0:0	12	0
stmts	111:24	111:57	11	
call	111:24	111:56	12	free
arg	111:30	111:56	13	ppsz_options[--i_options]
water	111:30	0:0	14	ppsz_options
op	111:42	0:0	14	[
op	111:43	0:0	14	--
water	111:45	0:0	14	i_options
op	111:54	0:0	14	]
water	111:57	0:0	12	;
call	112:20	112:39	10	free
arg	112:26	112:39	11	ppsz_options
water	112:26	0:0	12	ppsz_options
water	112:40	0:0	10	;
call	113:20	113:37	10	free
arg	113:26	113:37	11	psz_u8path
water	113:26	0:0	12	psz_u8path
water	113:38	0:0	10	;
water	114:16	0:0	10	}
else	115:16	120:16	8
stmts	116:16	120:16	9	
water	116:16	0:0	10	{
call	117:20	117:34	10	lua_pop
arg	117:29	117:30	11	L
water	117:29	0:0	12	L
arg	117:32	117:34	11	1
water	117:32	0:0	12	1
water	117:35	0:0	10	;
call	118:20	119:71	10	msg_Warn
arg	118:30	118:36	11	p_this
water	118:30	0:0	12	p_this
arg	119:29	119:71	11	"Playlist item's path should be a string"
water	119:29	0:0	12	"Playlist item's path should be a string"
water	119:72	0:0	10	;
water	120:16	0:0	10	}
water	122:12	0:0	8	}
else	123:12	126:12	6
stmts	124:12	126:12	7	
water	124:12	0:0	8	{
call	125:16	125:68	8	msg_Warn
arg	125:26	125:32	9	p_this
water	125:26	0:0	10	p_this
arg	125:34	125:68	9	"Playlist item should be a table"
water	125:34	0:0	10	"Playlist item should be a table"
water	125:69	0:0	8	;
water	126:12	0:0	8	}
call	128:12	128:26	6	lua_pop
arg	128:21	128:22	7	L
water	128:21	0:0	8	L
arg	128:24	128:26	7	1
water	128:24	0:0	8	1
water	128:27	0:0	6	;
water	131:8	0:0	6	}
if	133:8	137:8	4	(p_parent)
cond	133:12	133:12	5	p_parent
water	133:12	0:0	6	p_parent
stmts	134:8	137:8	5	
water	134:8	0:0	6	{
if	135:12	135:72	6	(i_count)
cond	135:16	135:16	7	i_count
water	135:16	0:0	8	i_count
stmts	135:26	135:72	7	
call	135:26	135:71	8	input_item_node_PostAndDelete
arg	135:57	135:71	9	p_parent_node
water	135:57	0:0	10	p_parent_node
water	135:72	0:0	8	;
else	136:12	136:56	6
stmts	136:17	136:56	7	
call	136:17	136:55	8	input_item_node_Delete
arg	136:41	136:55	9	p_parent_node
water	136:41	0:0	10	p_parent_node
water	136:56	0:0	8	;
water	137:8	0:0	6	}
water	138:4	0:0	4	}
else	139:4	142:4	2
stmts	140:4	142:4	3	
water	140:4	0:0	4	{
call	141:8	141:56	4	msg_Warn
arg	141:18	141:24	5	p_this
water	141:18	0:0	6	p_this
arg	141:26	141:56	5	"Playlist should be a table."
water	141:26	0:0	6	"Playlist should be a table."
water	141:57	0:0	4	;
water	142:4	0:0	4	}
return	143:4	143:18	2	i_count
water	143:11	0:0	3	i_count

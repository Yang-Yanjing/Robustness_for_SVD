func	2:0	125:0	0	static int	ExecuteControl
params	2:25	0:0	1	
param	2:27	2:39	2	vlm_t *	p_vlm
param	2:41	2:61	2	const char *	psz_name
param	2:63	2:78	2	const int	i_arg
param	2:80	2:96	2	char * *	ppsz_arg
param	2:98	2:124	2	vlm_message_t * *	pp_status
stmnts	0:0	124:22	1	
decl	4:4	4:28	2	vlm_media_sys_t	*p_media
decl	5:4	5:34	2	const char	*psz_control
op	5:28	0:0	2	=
water	5:30	0:0	2	NULL
decl	6:4	6:35	2	const char	*psz_instance
op	6:29	0:0	2	=
water	6:31	0:0	2	NULL
decl	7:4	7:35	2	const char	*psz_argument
op	7:29	0:0	2	=
water	7:31	0:0	2	NULL
decl	8:4	8:15	2	int	i_index
decl	9:4	9:16	2	int	i_result
if	10:4	14:4	2	(!ExecuteIsMedia (p_vlm ,psz_name ))
cond	10:8	10:41	3	!ExecuteIsMedia (p_vlm ,psz_name )
op	10:8	0:0	4	!
call	10:9	10:41	4	ExecuteIsMedia
arg	10:25	10:30	5	p_vlm
water	10:25	0:0	6	p_vlm
arg	10:32	10:41	5	psz_name
water	10:32	0:0	6	psz_name
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
op	12:8	0:0	4	*
water	12:9	0:0	4	pp_status
op	12:19	0:0	4	=
call	12:21	12:78	4	vlm_MessageNew
arg	12:37	12:46	5	"control"
water	12:37	0:0	6	"control"
arg	12:48	12:67	5	"%s: media unknown"
water	12:48	0:0	6	"%s: media unknown"
arg	12:69	12:78	5	psz_name
water	12:69	0:0	6	psz_name
water	12:79	0:0	4	;
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	14:4	0:0	4	}
call	15:4	15:22	2	assert
arg	15:12	15:22	3	i_arg>0
water	15:12	0:0	4	i_arg
op	15:18	0:0	4	>
water	15:20	0:0	4	0
water	15:23	0:0	2	;
water	17:4	0:0	2	i_index
op	17:12	0:0	2	=
water	17:14	0:0	2	0
water	17:15	0:0	2	;
if	18:4	24:4	2	(!IS ("play" ) && !IS ("stop" ) && !IS ("pause" ) && !IS ("seek" ))
cond	18:8	18:64	3	!IS ("play" ) && !IS ("stop" ) && !IS ("pause" ) && !IS ("seek" )
op	18:8	0:0	4	!
call	18:9	18:18	4	IS
arg	18:12	18:18	5	"play"
water	18:12	0:0	6	"play"
op	18:20	0:0	4	&&
op	18:23	0:0	4	!
call	18:24	18:33	4	IS
arg	18:27	18:33	5	"stop"
water	18:27	0:0	6	"stop"
op	18:35	0:0	4	&&
op	18:38	0:0	4	!
call	18:39	18:49	4	IS
arg	18:42	18:49	5	"pause"
water	18:42	0:0	6	"pause"
op	18:51	0:0	4	&&
op	18:54	0:0	4	!
call	18:55	18:64	4	IS
arg	18:58	18:64	5	"seek"
water	18:58	0:0	6	"seek"
stmts	19:4	24:4	3	
water	19:4	0:0	4	{
water	20:8	0:0	4	i_index
op	20:16	0:0	4	=
water	20:18	0:0	4	1
water	20:19	0:0	4	;
water	21:8	0:0	4	psz_instance
op	21:21	0:0	4	=
water	21:23	0:0	4	ppsz_arg
op	21:31	0:0	4	[
water	21:32	0:0	4	0
op	21:33	0:0	4	]
water	21:34	0:0	4	;
if	22:8	23:61	4	(i_index >= i_arg || ( !IS ("play" ) && !IS ("stop" ) && !IS ("pause" ) && !IS ("seek" ) ))
cond	22:12	22:92	5	i_index >= i_arg || ( !IS ("play" ) && !IS ("stop" ) && !IS ("pause" ) && !IS ("seek" ) )
water	22:12	0:0	6	i_index
op	22:20	0:0	6	>=
water	22:23	0:0	6	i_arg
op	22:29	0:0	6	||
water	22:32	0:0	6	(
op	22:34	0:0	6	!
call	22:35	22:44	6	IS
arg	22:38	22:44	7	"play"
water	22:38	0:0	8	"play"
op	22:46	0:0	6	&&
op	22:49	0:0	6	!
call	22:50	22:59	6	IS
arg	22:53	22:59	7	"stop"
water	22:53	0:0	8	"stop"
op	22:61	0:0	6	&&
op	22:64	0:0	6	!
call	22:65	22:75	6	IS
arg	22:68	22:75	7	"pause"
water	22:68	0:0	8	"pause"
op	22:77	0:0	6	&&
op	22:80	0:0	6	!
call	22:81	22:90	6	IS
arg	22:84	22:90	7	"seek"
water	22:84	0:0	8	"seek"
water	22:92	0:0	6	)
stmts	23:12	23:61	5	
return	23:12	23:61	6	ExecuteSyntaxError("control",pp_status)
call	23:19	23:60	7	ExecuteSyntaxError
arg	23:39	23:48	8	"control"
water	23:39	0:0	9	"control"
arg	23:50	23:60	8	pp_status
water	23:50	0:0	9	pp_status
water	24:4	0:0	4	}
water	26:4	0:0	2	psz_control
op	26:16	0:0	2	=
water	26:18	0:0	2	ppsz_arg
op	26:26	0:0	2	[
water	26:27	0:0	2	i_index
op	26:34	0:0	2	]
water	26:35	0:0	2	;
if	27:4	28:42	2	(i_index + 1 < i_arg)
cond	27:8	27:20	3	i_index + 1 < i_arg
water	27:8	0:0	4	i_index
op	27:15	0:0	4	+
water	27:16	0:0	4	1
op	27:18	0:0	4	<
water	27:20	0:0	4	i_arg
stmts	28:8	28:42	3	
water	28:8	0:0	4	psz_argument
op	28:21	0:0	4	=
water	28:23	0:0	4	ppsz_arg
op	28:31	0:0	4	[
water	28:32	0:0	4	i_index
op	28:39	0:0	4	+
water	28:40	0:0	4	1
op	28:41	0:0	4	]
water	28:42	0:0	4	;
water	29:4	0:0	2	p_media
op	29:12	0:0	2	=
call	29:14	29:47	2	vlm_MediaSearch
arg	29:31	29:36	3	p_vlm
water	29:31	0:0	4	p_vlm
arg	29:38	29:47	3	psz_name
water	29:38	0:0	4	psz_name
water	29:48	0:0	2	;
call	30:4	30:20	2	assert
arg	30:12	30:20	3	p_media
water	30:12	0:0	4	p_media
water	30:21	0:0	2	;
if	31:4	56:4	2	(!strcmp (psz_control ,"play" ))
cond	31:8	31:37	3	!strcmp (psz_control ,"play" )
op	31:8	0:0	4	!
call	31:9	31:37	4	strcmp
arg	31:17	31:28	5	psz_control
water	31:17	0:0	6	psz_control
arg	31:30	31:37	5	"play"
water	31:30	0:0	6	"play"
stmts	32:4	56:4	3	
water	32:4	0:0	4	{
decl	33:8	33:29	4	int	i_input_index
op	33:26	0:0	4	=
water	33:28	0:0	4	0
decl	34:8	34:13	4	int	i
if	35:8	38:8	4	(( psz_argument &&sscanf (psz_argument ,"%d" ,& i ) == 1 ) && i > 0 && i - 1 < p_media -> cfg . i_input)
cond	35:12	35:99	5	( psz_argument &&sscanf (psz_argument ,"%d" ,& i ) == 1 ) && i > 0 && i - 1 < p_media -> cfg . i_input
water	35:12	0:0	6	(
water	35:14	0:0	6	psz_argument
op	35:27	0:0	6	&&
call	35:30	35:59	6	sscanf
arg	35:37	35:49	7	psz_argument
water	35:37	0:0	8	psz_argument
arg	35:51	35:55	7	"%d"
water	35:51	0:0	8	"%d"
arg	35:57	35:59	7	&i
op	35:57	0:0	8	&
water	35:58	0:0	8	i
op	35:61	0:0	6	==
water	35:64	0:0	6	1
water	35:66	0:0	6	)
op	35:68	0:0	6	&&
water	35:71	0:0	6	i
op	35:73	0:0	6	>
water	35:75	0:0	6	0
op	35:77	0:0	6	&&
water	35:80	0:0	6	i
op	35:81	0:0	6	-
water	35:82	0:0	6	1
op	35:84	0:0	6	<
water	35:86	0:0	6	p_media
op	35:93	0:0	6	->
water	35:95	0:0	6	cfg
op	35:98	0:0	6	.
water	35:99	0:0	6	i_input
stmts	36:8	38:8	5	
water	36:8	0:0	6	{
water	37:12	0:0	6	i_input_index
op	37:26	0:0	6	=
water	37:28	0:0	6	i
op	37:29	0:0	6	-
water	37:30	0:0	6	1
water	37:31	0:0	6	;
water	38:8	0:0	6	}
else	39:8	51:8	4
stmts	39:13	51:8	5	
if	39:13	51:8	6	(psz_argument)
cond	39:17	39:17	7	psz_argument
water	39:17	0:0	8	psz_argument
stmts	40:8	51:8	7	
water	40:8	0:0	8	{
decl	41:12	41:17	8	int	j
decl	42:12	42:46	8	vlm_media_t	*p_cfg
op	42:31	0:0	8	=
op	42:33	0:0	8	&
water	42:34	0:0	8	p_media
op	42:41	0:0	8	->
water	42:43	0:0	8	cfg
for	43:12	50:12	8	(j = 0 ;j < p_cfg -> i_input;j ++)
forinit	43:18	43:21	9	j = 0 ;
water	43:18	0:0	10	j
op	43:19	0:0	10	=
water	43:20	0:0	10	0
water	43:21	0:0	10	;
cond	43:23	43:34	9	j < p_cfg -> i_input
water	43:23	0:0	10	j
op	43:25	0:0	10	<
water	43:27	0:0	10	p_cfg
op	43:32	0:0	10	->
water	43:34	0:0	10	i_input
forexpr	43:43	43:44	9	j ++
water	43:43	0:0	10	j
op	43:44	0:0	10	++
stmts	44:12	50:12	9	
water	44:12	0:0	10	{
if	45:16	49:16	10	(!strcmp (p_cfg -> ppsz_input [ j ] ,psz_argument ))
cond	45:20	45:64	11	!strcmp (p_cfg -> ppsz_input [ j ] ,psz_argument )
op	45:20	0:0	12	!
call	45:21	45:64	12	strcmp
arg	45:29	45:49	13	p_cfg->ppsz_input[j]
water	45:29	0:0	14	p_cfg
op	45:34	0:0	14	->
water	45:36	0:0	14	ppsz_input
op	45:46	0:0	14	[
water	45:47	0:0	14	j
op	45:48	0:0	14	]
arg	45:51	45:64	13	psz_argument
water	45:51	0:0	14	psz_argument
stmts	46:16	49:16	11	
water	46:16	0:0	12	{
water	47:20	0:0	12	i_input_index
op	47:34	0:0	12	=
water	47:36	0:0	12	j
water	47:37	0:0	12	;
break	48:20	48:25	12	
water	49:16	0:0	12	}
water	50:12	0:0	10	}
water	51:8	0:0	8	}
if	52:8	53:133	4	(p_media -> cfg . b_vod)
cond	52:12	52:25	5	p_media -> cfg . b_vod
water	52:12	0:0	6	p_media
op	52:19	0:0	6	->
water	52:21	0:0	6	cfg
op	52:24	0:0	6	.
water	52:25	0:0	6	b_vod
stmts	53:12	53:133	5	
water	53:12	0:0	6	i_result
op	53:21	0:0	6	=
call	53:23	53:132	6	vlm_ControlInternal
arg	53:44	53:49	7	p_vlm
water	53:44	0:0	8	p_vlm
arg	53:51	53:79	7	VLM_START_MEDIA_VOD_INSTANCE
water	53:51	0:0	8	VLM_START_MEDIA_VOD_INSTANCE
arg	53:81	53:96	7	p_media->cfg.id
water	53:81	0:0	8	p_media
op	53:88	0:0	8	->
water	53:90	0:0	8	cfg
op	53:93	0:0	8	.
water	53:94	0:0	8	id
arg	53:98	53:110	7	psz_instance
water	53:98	0:0	8	psz_instance
arg	53:112	53:125	7	i_input_index
water	53:112	0:0	8	i_input_index
arg	53:127	53:132	7	NULL
water	53:127	0:0	8	NULL
water	53:133	0:0	6	;
else	54:8	55:133	4
stmts	55:12	55:133	5	
water	55:12	0:0	6	i_result
op	55:21	0:0	6	=
call	55:23	55:132	6	vlm_ControlInternal
arg	55:44	55:49	7	p_vlm
water	55:44	0:0	8	p_vlm
arg	55:51	55:85	7	VLM_START_MEDIA_BROADCAST_INSTANCE
water	55:51	0:0	8	VLM_START_MEDIA_BROADCAST_INSTANCE
arg	55:87	55:102	7	p_media->cfg.id
water	55:87	0:0	8	p_media
op	55:94	0:0	8	->
water	55:96	0:0	8	cfg
op	55:99	0:0	8	.
water	55:100	0:0	8	id
arg	55:104	55:116	7	psz_instance
water	55:104	0:0	8	psz_instance
arg	55:118	55:132	7	i_input_index
water	55:118	0:0	8	i_input_index
water	55:133	0:0	6	;
water	56:4	0:0	4	}
else	57:4	105:4	2
stmts	57:9	105:4	3	
if	57:9	105:4	4	(!strcmp (psz_control ,"seek" ))
cond	57:13	57:42	5	!strcmp (psz_control ,"seek" )
op	57:13	0:0	6	!
call	57:14	57:42	6	strcmp
arg	57:22	57:33	7	psz_control
water	57:22	0:0	8	psz_control
arg	57:35	57:42	7	"seek"
water	57:35	0:0	8	"seek"
stmts	58:4	105:4	5	
water	58:4	0:0	6	{
if	59:8	100:8	6	(psz_argument)
cond	59:12	59:12	7	psz_argument
water	59:12	0:0	8	psz_argument
stmts	60:8	100:8	7	
water	60:8	0:0	8	{
decl	61:12	61:27	8	bool	b_relative
if	62:12	63:33	8	(psz_argument [ 0 ] == '+' || psz_argument [ 0 ] == '-')
cond	62:16	62:61	9	psz_argument [ 0 ] == '+' || psz_argument [ 0 ] == '-'
water	62:16	0:0	10	psz_argument
op	62:28	0:0	10	[
water	62:29	0:0	10	0
op	62:30	0:0	10	]
op	62:32	0:0	10	==
water	62:35	0:0	10	'+'
op	62:39	0:0	10	||
water	62:42	0:0	10	psz_argument
op	62:54	0:0	10	[
water	62:55	0:0	10	0
op	62:56	0:0	10	]
op	62:58	0:0	10	==
water	62:61	0:0	10	'-'
stmts	63:16	63:33	9	
water	63:16	0:0	10	b_relative
op	63:27	0:0	10	=
water	63:29	0:0	10	true
water	63:33	0:0	10	;
else	64:12	65:34	8
stmts	65:16	65:34	9	
water	65:16	0:0	10	b_relative
op	65:27	0:0	10	=
water	65:29	0:0	10	false
water	65:34	0:0	10	;
if	66:12	83:12	8	(strstr (psz_argument ,"ms" ) ||strstr (psz_argument ,"s" ))
cond	66:16	66:74	9	strstr (psz_argument ,"ms" ) ||strstr (psz_argument ,"s" )
call	66:16	66:43	10	strstr
arg	66:24	66:36	11	psz_argument
water	66:24	0:0	12	psz_argument
arg	66:38	66:43	11	"ms"
water	66:38	0:0	12	"ms"
op	66:45	0:0	10	||
call	66:48	66:74	10	strstr
arg	66:56	66:68	11	psz_argument
water	66:56	0:0	12	psz_argument
arg	66:70	66:74	11	"s"
water	66:70	0:0	12	"s"
stmts	67:12	83:12	9	
water	67:12	0:0	10	{
decl	69:16	69:34	10	int64_t	i_new_time
if	70:16	71:70	10	(strstr (psz_argument ,"ms" ))
cond	70:20	70:47	11	strstr (psz_argument ,"ms" )
call	70:20	70:47	12	strstr
arg	70:28	70:40	13	psz_argument
water	70:28	0:0	14	psz_argument
arg	70:42	70:47	13	"ms"
water	70:42	0:0	14	"ms"
stmts	71:20	71:70	11	
water	71:20	0:0	12	i_new_time
op	71:31	0:0	12	=
water	71:34	0:0	12	1000
op	71:39	0:0	12	*
water	71:41	0:0	12	(
water	71:42	0:0	12	int64_t
water	71:49	0:0	12	)
call	71:50	71:69	12	atoi
arg	71:56	71:69	13	psz_argument
water	71:56	0:0	14	psz_argument
water	71:70	0:0	12	;
else	72:16	73:72	10
stmts	73:20	73:72	11	
water	73:20	0:0	12	i_new_time
op	73:31	0:0	12	=
water	73:33	0:0	12	1000000
op	73:41	0:0	12	*
water	73:43	0:0	12	(
water	73:44	0:0	12	int64_t
water	73:51	0:0	12	)
call	73:52	73:71	12	atoi
arg	73:58	73:71	13	psz_argument
water	73:58	0:0	14	psz_argument
water	73:72	0:0	12	;
if	74:16	79:16	10	(b_relative)
cond	74:20	74:20	11	b_relative
water	74:20	0:0	12	b_relative
stmts	75:16	79:16	11	
water	75:16	0:0	12	{
decl	76:20	76:38	12	int64_t	i_time
op	76:35	0:0	12	=
water	76:37	0:0	12	0
call	77:20	77:116	12	vlm_ControlInternal
arg	77:41	77:46	13	p_vlm
water	77:41	0:0	14	p_vlm
arg	77:48	77:75	13	VLM_GET_MEDIA_INSTANCE_TIME
water	77:48	0:0	14	VLM_GET_MEDIA_INSTANCE_TIME
arg	77:77	77:92	13	p_media->cfg.id
water	77:77	0:0	14	p_media
op	77:84	0:0	14	->
water	77:86	0:0	14	cfg
op	77:89	0:0	14	.
water	77:90	0:0	14	id
arg	77:94	77:106	13	psz_instance
water	77:94	0:0	14	psz_instance
arg	77:108	77:116	13	&i_time
op	77:108	0:0	14	&
water	77:109	0:0	14	i_time
water	77:117	0:0	12	;
water	78:20	0:0	12	i_new_time
op	78:31	0:0	12	+=
water	78:34	0:0	12	i_time
water	78:40	0:0	12	;
water	79:16	0:0	12	}
if	80:16	81:34	10	(i_new_time < 0)
cond	80:20	80:33	11	i_new_time < 0
water	80:20	0:0	12	i_new_time
op	80:31	0:0	12	<
water	80:33	0:0	12	0
stmts	81:20	81:34	11	
water	81:20	0:0	12	i_new_time
op	81:31	0:0	12	=
water	81:33	0:0	12	0
water	81:34	0:0	12	;
water	82:16	0:0	10	i_result
op	82:25	0:0	10	=
call	82:27	82:126	10	vlm_ControlInternal
arg	82:48	82:53	11	p_vlm
water	82:48	0:0	12	p_vlm
arg	82:55	82:82	11	VLM_SET_MEDIA_INSTANCE_TIME
water	82:55	0:0	12	VLM_SET_MEDIA_INSTANCE_TIME
arg	82:84	82:99	11	p_media->cfg.id
water	82:84	0:0	12	p_media
op	82:91	0:0	12	->
water	82:93	0:0	12	cfg
op	82:96	0:0	12	.
water	82:97	0:0	12	id
arg	82:101	82:113	11	psz_instance
water	82:101	0:0	12	psz_instance
arg	82:115	82:126	11	i_new_time
water	82:115	0:0	12	i_new_time
water	82:127	0:0	10	;
water	83:12	0:0	10	}
else	84:12	99:12	8
stmts	85:12	99:12	9	
water	85:12	0:0	10	{
decl	87:16	87:71	10	double	d_new_position
op	87:38	0:0	10	=
call	87:40	87:62	11	us_atof
arg	87:49	87:62	12	psz_argument
water	87:49	0:0	13	psz_argument
op	87:64	0:0	10	/
water	87:66	0:0	10	100
op	87:69	0:0	10	.
water	87:70	0:0	10	0
if	88:16	93:16	10	(b_relative)
cond	88:20	88:20	11	b_relative
water	88:20	0:0	12	b_relative
stmts	89:16	93:16	11	
water	89:16	0:0	12	{
decl	90:20	90:43	12	double	d_position
op	90:38	0:0	12	=
water	90:40	0:0	12	0
op	90:41	0:0	12	.
water	90:42	0:0	12	0
call	91:20	91:124	12	vlm_ControlInternal
arg	91:41	91:46	13	p_vlm
water	91:41	0:0	14	p_vlm
arg	91:48	91:79	13	VLM_GET_MEDIA_INSTANCE_POSITION
water	91:48	0:0	14	VLM_GET_MEDIA_INSTANCE_POSITION
arg	91:81	91:96	13	p_media->cfg.id
water	91:81	0:0	14	p_media
op	91:88	0:0	14	->
water	91:90	0:0	14	cfg
op	91:93	0:0	14	.
water	91:94	0:0	14	id
arg	91:98	91:110	13	psz_instance
water	91:98	0:0	14	psz_instance
arg	91:112	91:124	13	&d_position
op	91:112	0:0	14	&
water	91:113	0:0	14	d_position
water	91:125	0:0	12	;
water	92:20	0:0	12	d_new_position
op	92:35	0:0	12	+=
water	92:38	0:0	12	d_position
water	92:48	0:0	12	;
water	93:16	0:0	12	}
if	94:16	95:40	10	(d_new_position < 0 . 0)
cond	94:20	94:39	11	d_new_position < 0 . 0
water	94:20	0:0	12	d_new_position
op	94:35	0:0	12	<
water	94:37	0:0	12	0
op	94:38	0:0	12	.
water	94:39	0:0	12	0
stmts	95:20	95:40	11	
water	95:20	0:0	12	d_new_position
op	95:35	0:0	12	=
water	95:37	0:0	12	0
op	95:38	0:0	12	.
water	95:39	0:0	12	0
water	95:40	0:0	12	;
else	96:16	97:40	10
stmts	96:21	97:40	11	
if	96:21	97:40	12	(d_new_position > 1 . 0)
cond	96:25	96:44	13	d_new_position > 1 . 0
water	96:25	0:0	14	d_new_position
op	96:40	0:0	14	>
water	96:42	0:0	14	1
op	96:43	0:0	14	.
water	96:44	0:0	14	0
stmts	97:20	97:40	13	
water	97:20	0:0	14	d_new_position
op	97:35	0:0	14	=
water	97:37	0:0	14	1
op	97:38	0:0	14	.
water	97:39	0:0	14	0
water	97:40	0:0	14	;
water	98:16	0:0	10	i_result
op	98:25	0:0	10	=
call	98:27	98:134	10	vlm_ControlInternal
arg	98:48	98:53	11	p_vlm
water	98:48	0:0	12	p_vlm
arg	98:55	98:86	11	VLM_SET_MEDIA_INSTANCE_POSITION
water	98:55	0:0	12	VLM_SET_MEDIA_INSTANCE_POSITION
arg	98:88	98:103	11	p_media->cfg.id
water	98:88	0:0	12	p_media
op	98:95	0:0	12	->
water	98:97	0:0	12	cfg
op	98:100	0:0	12	.
water	98:101	0:0	12	id
arg	98:105	98:117	11	psz_instance
water	98:105	0:0	12	psz_instance
arg	98:119	98:134	11	d_new_position
water	98:119	0:0	12	d_new_position
water	98:135	0:0	10	;
water	99:12	0:0	10	}
water	100:8	0:0	8	}
else	101:8	104:8	6
stmts	102:8	104:8	7	
water	102:8	0:0	8	{
water	103:12	0:0	8	i_result
op	103:21	0:0	8	=
water	103:23	0:0	8	VLC_EGENERIC
water	103:35	0:0	8	;
water	104:8	0:0	8	}
water	105:4	0:0	6	}
else	106:4	109:4	2
stmts	106:9	109:4	3	
if	106:9	109:4	4	(!strcmp (psz_control ,"stop" ))
cond	106:13	106:42	5	!strcmp (psz_control ,"stop" )
op	106:13	0:0	6	!
call	106:14	106:42	6	strcmp
arg	106:22	106:33	7	psz_control
water	106:22	0:0	8	psz_control
arg	106:35	106:42	7	"stop"
water	106:35	0:0	8	"stop"
stmts	107:4	109:4	5	
water	107:4	0:0	6	{
water	108:8	0:0	6	i_result
op	108:17	0:0	6	=
call	108:19	108:102	6	vlm_ControlInternal
arg	108:40	108:45	7	p_vlm
water	108:40	0:0	8	p_vlm
arg	108:47	108:70	7	VLM_STOP_MEDIA_INSTANCE
water	108:47	0:0	8	VLM_STOP_MEDIA_INSTANCE
arg	108:72	108:87	7	p_media->cfg.id
water	108:72	0:0	8	p_media
op	108:79	0:0	8	->
water	108:81	0:0	8	cfg
op	108:84	0:0	8	.
water	108:85	0:0	8	id
arg	108:89	108:102	7	psz_instance
water	108:89	0:0	8	psz_instance
water	108:103	0:0	6	;
water	109:4	0:0	6	}
else	110:4	113:4	2
stmts	110:9	113:4	3	
if	110:9	113:4	4	(!strcmp (psz_control ,"pause" ))
cond	110:13	110:43	5	!strcmp (psz_control ,"pause" )
op	110:13	0:0	6	!
call	110:14	110:43	6	strcmp
arg	110:22	110:33	7	psz_control
water	110:22	0:0	8	psz_control
arg	110:35	110:43	7	"pause"
water	110:35	0:0	8	"pause"
stmts	111:4	113:4	5	
water	111:4	0:0	6	{
water	112:8	0:0	6	i_result
op	112:17	0:0	6	=
call	112:19	112:103	6	vlm_ControlInternal
arg	112:40	112:45	7	p_vlm
water	112:40	0:0	8	p_vlm
arg	112:47	112:71	7	VLM_PAUSE_MEDIA_INSTANCE
water	112:47	0:0	8	VLM_PAUSE_MEDIA_INSTANCE
arg	112:73	112:88	7	p_media->cfg.id
water	112:73	0:0	8	p_media
op	112:80	0:0	8	->
water	112:82	0:0	8	cfg
op	112:85	0:0	8	.
water	112:86	0:0	8	id
arg	112:90	112:103	7	psz_instance
water	112:90	0:0	8	psz_instance
water	112:104	0:0	6	;
water	113:4	0:0	6	}
else	114:4	117:4	2
stmts	115:4	117:4	3	
water	115:4	0:0	4	{
water	116:8	0:0	4	i_result
op	116:17	0:0	4	=
water	116:19	0:0	4	VLC_EGENERIC
water	116:31	0:0	4	;
water	117:4	0:0	4	}
if	118:4	122:4	2	(i_result)
cond	118:8	118:8	3	i_result
water	118:8	0:0	4	i_result
stmts	119:4	122:4	3	
water	119:4	0:0	4	{
op	120:8	0:0	4	*
water	120:9	0:0	4	pp_status
op	120:19	0:0	4	=
call	120:21	120:64	4	vlm_MessageNew
arg	120:37	120:46	5	"control"
water	120:37	0:0	6	"control"
arg	120:48	120:64	5	"unknown error"
water	120:48	0:0	6	"unknown error"
water	120:65	0:0	4	;
return	121:8	121:26	4	VLC_SUCCESS
water	121:15	0:0	5	VLC_SUCCESS
water	122:4	0:0	4	}
op	123:4	0:0	2	*
water	123:5	0:0	2	pp_status
op	123:15	0:0	2	=
call	123:17	123:49	2	vlm_MessageSimpleNew
arg	123:39	123:49	3	"control"
water	123:39	0:0	4	"control"
water	123:50	0:0	2	;
return	124:4	124:22	2	VLC_SUCCESS
water	124:11	0:0	3	VLC_SUCCESS

func	2:0	25:0	0	static void	asmrp_assignment
params	2:29	0:0	1	
param	2:30	2:40	2	asmrp_t *	p
stmnts	3:2	24:31	1	
call	3:2	3:25	2	lprintf
arg	3:11	3:25	3	"assignment\n"
water	3:11	0:0	4	"assignment\n"
water	3:26	0:0	2	;
if	4:2	7:2	2	(p -> sym == ASMRP_SYM_COMMA || p -> sym == ASMRP_SYM_SEMICOLON)
cond	4:6	4:45	3	p -> sym == ASMRP_SYM_COMMA || p -> sym == ASMRP_SYM_SEMICOLON
water	4:6	0:0	4	p
op	4:7	0:0	4	->
water	4:9	0:0	4	sym
op	4:13	0:0	4	==
water	4:16	0:0	4	ASMRP_SYM_COMMA
op	4:32	0:0	4	||
water	4:35	0:0	4	p
op	4:36	0:0	4	->
water	4:38	0:0	4	sym
op	4:42	0:0	4	==
water	4:45	0:0	4	ASMRP_SYM_SEMICOLON
stmts	4:66	7:2	3	
water	4:66	0:0	4	{
call	5:4	5:33	4	lprintf
arg	5:13	5:33	5	"empty assignment\n"
water	5:13	0:0	6	"empty assignment\n"
water	5:34	0:0	4	;
return	6:4	6:10	4	
water	7:2	0:0	4	}
if	8:2	11:2	2	(p -> sym != ASMRP_SYM_ID)
cond	8:6	8:16	3	p -> sym != ASMRP_SYM_ID
water	8:6	0:0	4	p
op	8:7	0:0	4	->
water	8:9	0:0	4	sym
op	8:13	0:0	4	!=
water	8:16	0:0	4	ASMRP_SYM_ID
stmts	8:30	11:2	3	
water	8:30	0:0	4	{
call	9:4	9:42	4	printf
arg	9:12	9:42	5	"error: identifier expected\n"
water	9:12	0:0	6	"error: identifier expected\n"
water	9:43	0:0	4	;
return	10:4	10:10	4	
water	11:2	0:0	4	}
call	12:2	12:18	2	asmrp_get_sym
arg	12:17	12:18	3	p
water	12:17	0:0	4	p
water	12:19	0:0	2	;
if	13:2	16:2	2	(p -> sym != ASMRP_SYM_EQUALS)
cond	13:6	13:16	3	p -> sym != ASMRP_SYM_EQUALS
water	13:6	0:0	4	p
op	13:7	0:0	4	->
water	13:9	0:0	4	sym
op	13:13	0:0	4	!=
water	13:16	0:0	4	ASMRP_SYM_EQUALS
stmts	13:34	16:2	3	
water	13:34	0:0	4	{
call	14:4	14:33	4	printf
arg	14:12	14:33	5	"error: = expected\n"
water	14:12	0:0	6	"error: = expected\n"
water	14:34	0:0	4	;
return	15:4	15:10	4	
water	16:2	0:0	4	}
call	17:2	17:18	2	asmrp_get_sym
arg	17:17	17:18	3	p
water	17:17	0:0	4	p
water	17:19	0:0	2	;
if	18:2	22:2	2	(( p -> sym != ASMRP_SYM_NUM ) && ( p -> sym != ASMRP_SYM_STRING ) && ( p -> sym != ASMRP_SYM_ID ))
cond	18:7	19:33	3	( p -> sym != ASMRP_SYM_NUM ) && ( p -> sym != ASMRP_SYM_STRING ) && ( p -> sym != ASMRP_SYM_ID )
water	18:7	0:0	4	(
water	18:8	0:0	4	p
op	18:9	0:0	4	->
water	18:11	0:0	4	sym
op	18:15	0:0	4	!=
water	18:18	0:0	4	ASMRP_SYM_NUM
water	18:31	0:0	4	)
op	18:33	0:0	4	&&
water	18:36	0:0	4	(
water	18:37	0:0	4	p
op	18:38	0:0	4	->
water	18:40	0:0	4	sym
op	18:44	0:0	4	!=
water	18:47	0:0	4	ASMRP_SYM_STRING
water	18:63	0:0	4	)
op	19:7	0:0	4	&&
water	19:10	0:0	4	(
water	19:11	0:0	4	p
op	19:12	0:0	4	->
water	19:14	0:0	4	sym
op	19:18	0:0	4	!=
water	19:21	0:0	4	ASMRP_SYM_ID
water	19:33	0:0	4	)
stmts	19:36	22:2	3	
water	19:36	0:0	4	{
call	20:4	20:48	4	printf
arg	20:12	20:48	5	"error: number or string expected\n"
water	20:12	0:0	6	"error: number or string expected\n"
water	20:49	0:0	4	;
return	21:4	21:10	4	
water	22:2	0:0	4	}
call	23:2	23:18	2	asmrp_get_sym
arg	23:17	23:18	3	p
water	23:17	0:0	4	p
water	23:19	0:0	2	;
call	24:2	24:30	2	lprintf
arg	24:11	24:30	3	"assignment done\n"
water	24:11	0:0	4	"assignment done\n"
water	24:31	0:0	2	;
func	27:0	50:0	0	static void	asmrp_assignment
params	27:29	0:0	1	
param	27:30	27:40	2	asmrp_t *	p
stmnts	28:2	49:31	1	
call	28:2	28:25	2	lprintf
arg	28:11	28:25	3	"assignment\n"
water	28:11	0:0	4	"assignment\n"
water	28:26	0:0	2	;
if	29:2	32:2	2	(p -> sym == ASMRP_SYM_COMMA || p -> sym == ASMRP_SYM_SEMICOLON)
cond	29:6	29:45	3	p -> sym == ASMRP_SYM_COMMA || p -> sym == ASMRP_SYM_SEMICOLON
water	29:6	0:0	4	p
op	29:7	0:0	4	->
water	29:9	0:0	4	sym
op	29:13	0:0	4	==
water	29:16	0:0	4	ASMRP_SYM_COMMA
op	29:32	0:0	4	||
water	29:35	0:0	4	p
op	29:36	0:0	4	->
water	29:38	0:0	4	sym
op	29:42	0:0	4	==
water	29:45	0:0	4	ASMRP_SYM_SEMICOLON
stmts	29:66	32:2	3	
water	29:66	0:0	4	{
call	30:4	30:33	4	lprintf
arg	30:13	30:33	5	"empty assignment\n"
water	30:13	0:0	6	"empty assignment\n"
water	30:34	0:0	4	;
return	31:4	31:10	4	
water	32:2	0:0	4	}
if	33:2	36:2	2	(p -> sym != ASMRP_SYM_ID)
cond	33:6	33:16	3	p -> sym != ASMRP_SYM_ID
water	33:6	0:0	4	p
op	33:7	0:0	4	->
water	33:9	0:0	4	sym
op	33:13	0:0	4	!=
water	33:16	0:0	4	ASMRP_SYM_ID
stmts	33:30	36:2	3	
water	33:30	0:0	4	{
call	34:4	34:42	4	printf
arg	34:12	34:42	5	"error: identifier expected\n"
water	34:12	0:0	6	"error: identifier expected\n"
water	34:43	0:0	4	;
return	35:4	35:10	4	
water	36:2	0:0	4	}
call	37:2	37:18	2	asmrp_get_sym
arg	37:17	37:18	3	p
water	37:17	0:0	4	p
water	37:19	0:0	2	;
if	38:2	41:2	2	(p -> sym != ASMRP_SYM_EQUALS)
cond	38:6	38:16	3	p -> sym != ASMRP_SYM_EQUALS
water	38:6	0:0	4	p
op	38:7	0:0	4	->
water	38:9	0:0	4	sym
op	38:13	0:0	4	!=
water	38:16	0:0	4	ASMRP_SYM_EQUALS
stmts	38:34	41:2	3	
water	38:34	0:0	4	{
call	39:4	39:33	4	printf
arg	39:12	39:33	5	"error: = expected\n"
water	39:12	0:0	6	"error: = expected\n"
water	39:34	0:0	4	;
return	40:4	40:10	4	
water	41:2	0:0	4	}
call	42:2	42:18	2	asmrp_get_sym
arg	42:17	42:18	3	p
water	42:17	0:0	4	p
water	42:19	0:0	2	;
if	43:2	47:2	2	(( p -> sym != ASMRP_SYM_NUM ) && ( p -> sym != ASMRP_SYM_STRING ) && ( p -> sym != ASMRP_SYM_ID ))
cond	43:7	44:33	3	( p -> sym != ASMRP_SYM_NUM ) && ( p -> sym != ASMRP_SYM_STRING ) && ( p -> sym != ASMRP_SYM_ID )
water	43:7	0:0	4	(
water	43:8	0:0	4	p
op	43:9	0:0	4	->
water	43:11	0:0	4	sym
op	43:15	0:0	4	!=
water	43:18	0:0	4	ASMRP_SYM_NUM
water	43:31	0:0	4	)
op	43:33	0:0	4	&&
water	43:36	0:0	4	(
water	43:37	0:0	4	p
op	43:38	0:0	4	->
water	43:40	0:0	4	sym
op	43:44	0:0	4	!=
water	43:47	0:0	4	ASMRP_SYM_STRING
water	43:63	0:0	4	)
op	44:7	0:0	4	&&
water	44:10	0:0	4	(
water	44:11	0:0	4	p
op	44:12	0:0	4	->
water	44:14	0:0	4	sym
op	44:18	0:0	4	!=
water	44:21	0:0	4	ASMRP_SYM_ID
water	44:33	0:0	4	)
stmts	44:36	47:2	3	
water	44:36	0:0	4	{
call	45:4	45:48	4	printf
arg	45:12	45:48	5	"error: number or string expected\n"
water	45:12	0:0	6	"error: number or string expected\n"
water	45:49	0:0	4	;
return	46:4	46:10	4	
water	47:2	0:0	4	}
call	48:2	48:18	2	asmrp_get_sym
arg	48:17	48:18	3	p
water	48:17	0:0	4	p
water	48:19	0:0	2	;
call	49:2	49:30	2	lprintf
arg	49:11	49:30	3	"assignment done\n"
water	49:11	0:0	4	"assignment done\n"
water	49:31	0:0	2	;

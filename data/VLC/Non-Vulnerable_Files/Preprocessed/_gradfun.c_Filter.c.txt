func	2:0	41:0	0	static picture_t *	Filter
params	2:24	0:0	1	
param	2:25	2:41	2	filter_t *	filter
param	2:43	2:57	2	picture_t *	src
stmnts	0:0	40:14	1	
decl	4:4	4:37	2	filter_sys_t	*sys
op	4:22	0:0	2	=
water	4:24	0:0	2	filter
op	4:30	0:0	2	->
water	4:32	0:0	2	p_sys
decl	5:4	5:46	2	picture_t	*dst
op	5:19	0:0	2	=
call	5:21	5:45	3	filter_NewPicture
arg	5:39	5:45	4	filter
water	5:39	0:0	5	filter
if	6:4	9:4	2	(! dst)
cond	6:8	6:9	3	! dst
op	6:8	0:0	4	!
water	6:9	0:0	4	dst
stmts	6:14	9:4	3	
water	6:14	0:0	4	{
call	7:8	7:27	4	picture_Release
arg	7:24	7:27	5	src
water	7:24	0:0	6	src
water	7:28	0:0	4	;
return	8:8	8:19	4	NULL
water	8:15	0:0	5	NULL
water	9:4	0:0	4	}
call	10:4	10:29	2	vlc_mutex_lock
arg	10:19	10:29	3	&sys->lock
op	10:19	0:0	4	&
water	10:20	0:0	4	sys
op	10:23	0:0	4	->
water	10:25	0:0	4	lock
water	10:30	0:0	2	;
decl	11:4	11:72	2	float	strength
op	11:19	0:0	2	=
call	11:21	11:71	3	VLC_CLIP
arg	11:30	11:43	4	sys->strength
water	11:30	0:0	5	sys
op	11:33	0:0	5	->
water	11:35	0:0	5	strength
arg	11:45	11:57	4	STRENGTH_MIN
water	11:45	0:0	5	STRENGTH_MIN
arg	11:59	11:71	4	STRENGTH_MAX
water	11:59	0:0	5	STRENGTH_MAX
decl	12:4	12:77	2	int	radius
op	12:19	0:0	2	=
call	12:21	12:76	3	VLC_CLIP
arg	12:30	12:52	4	(sys->radius+1)&~1
water	12:30	0:0	5	(
water	12:31	0:0	5	sys
op	12:34	0:0	5	->
water	12:36	0:0	5	radius
op	12:43	0:0	5	+
water	12:45	0:0	5	1
water	12:46	0:0	5	)
op	12:48	0:0	5	&
water	12:50	0:0	5	~1
arg	12:54	12:64	4	RADIUS_MIN
water	12:54	0:0	5	RADIUS_MIN
arg	12:66	12:76	4	RADIUS_MAX
water	12:66	0:0	5	RADIUS_MAX
call	13:4	13:31	2	vlc_mutex_unlock
arg	13:21	13:31	3	&sys->lock
op	13:21	0:0	4	&
water	13:22	0:0	4	sys
op	13:25	0:0	4	->
water	13:27	0:0	4	lock
water	13:32	0:0	2	;
decl	14:4	14:53	2	const video_format_t	*fmt
op	14:30	0:0	2	=
op	14:32	0:0	2	&
water	14:33	0:0	2	filter
op	14:39	0:0	2	->
water	14:41	0:0	2	fmt_in
op	14:47	0:0	2	.
water	14:48	0:0	2	video
decl	15:4	15:37	2	struct vf_priv_s	*cfg
op	15:26	0:0	2	=
op	15:28	0:0	2	&
water	15:29	0:0	2	sys
op	15:32	0:0	2	->
water	15:34	0:0	2	cfg
water	16:4	0:0	2	cfg
op	16:7	0:0	2	->
water	16:9	0:0	2	thresh
op	16:16	0:0	2	=
water	16:18	0:0	2	(
water	16:19	0:0	2	1
op	16:21	0:0	2	<<
water	16:24	0:0	2	15
water	16:26	0:0	2	)
op	16:28	0:0	2	/
water	16:30	0:0	2	strength
water	16:38	0:0	2	;
if	17:4	21:4	2	(cfg -> radius != radius)
cond	17:8	17:23	3	cfg -> radius != radius
water	17:8	0:0	4	cfg
op	17:11	0:0	4	->
water	17:13	0:0	4	radius
op	17:20	0:0	4	!=
water	17:23	0:0	4	radius
stmts	17:31	21:4	3	
water	17:31	0:0	4	{
water	18:8	0:0	4	cfg
op	18:11	0:0	4	->
water	18:13	0:0	4	radius
op	18:20	0:0	4	=
water	18:22	0:0	4	radius
water	18:28	0:0	4	;
water	19:8	0:0	4	cfg
op	19:11	0:0	4	->
water	19:13	0:0	4	buf
op	19:20	0:0	4	=
call	19:22	20:113	4	vlc_memalign
arg	19:35	19:37	5	16
water	19:35	0:0	6	16
arg	20:35	20:113	5	(((fmt->i_width+15)&~15)*(cfg->radius+1)/2+32)*sizeof(*cfg->buf)
water	20:35	0:0	6	(
water	20:36	0:0	6	(
water	20:37	0:0	6	(
water	20:38	0:0	6	fmt
op	20:41	0:0	6	->
water	20:43	0:0	6	i_width
op	20:51	0:0	6	+
water	20:53	0:0	6	15
water	20:55	0:0	6	)
op	20:57	0:0	6	&
water	20:59	0:0	6	~15
water	20:62	0:0	6	)
op	20:64	0:0	6	*
water	20:66	0:0	6	(
water	20:67	0:0	6	cfg
op	20:70	0:0	6	->
water	20:72	0:0	6	radius
op	20:79	0:0	6	+
water	20:81	0:0	6	1
water	20:82	0:0	6	)
op	20:84	0:0	6	/
water	20:86	0:0	6	2
op	20:88	0:0	6	+
water	20:90	0:0	6	32
water	20:92	0:0	6	)
op	20:94	0:0	6	*
op	20:96	0:0	6	sizeof
water	20:102	0:0	6	(
op	20:103	0:0	6	*
water	20:104	0:0	6	cfg
op	20:107	0:0	6	->
water	20:109	0:0	6	buf
water	20:112	0:0	6	)
water	20:114	0:0	4	;
water	21:4	0:0	4	}
for	22:4	37:4	2	( int i = 0 ;i < dst -> i_planes;i ++)
forinit	0:0	22:18	3	 int i = 0 ;
decl	22:9	22:18	4	int	i
op	22:15	0:0	4	=
water	22:17	0:0	4	0
cond	22:20	22:29	3	i < dst -> i_planes
water	22:20	0:0	4	i
op	22:22	0:0	4	<
water	22:24	0:0	4	dst
op	22:27	0:0	4	->
water	22:29	0:0	4	i_planes
forexpr	22:39	22:40	3	i ++
water	22:39	0:0	4	i
op	22:40	0:0	4	++
stmts	22:44	37:4	3	
water	22:44	0:0	4	{
decl	23:8	23:40	4	const plane_t	*srcp
op	23:28	0:0	4	=
op	23:30	0:0	4	&
water	23:31	0:0	4	src
op	23:34	0:0	4	->
water	23:36	0:0	4	p
op	23:37	0:0	4	[
water	23:38	0:0	4	i
op	23:39	0:0	4	]
decl	24:8	24:40	4	plane_t	*dstp
op	24:28	0:0	4	=
op	24:30	0:0	4	&
water	24:31	0:0	4	dst
op	24:34	0:0	4	->
water	24:36	0:0	4	p
op	24:37	0:0	4	[
water	24:38	0:0	4	i
op	24:39	0:0	4	]
decl	25:8	25:60	4	const vlc_chroma_description_t	*chroma
op	25:47	0:0	4	=
water	25:49	0:0	4	sys
op	25:52	0:0	4	->
water	25:54	0:0	4	chroma
decl	26:8	26:71	4	int	w
op	26:14	0:0	4	=
water	26:16	0:0	4	fmt
op	26:19	0:0	4	->
water	26:21	0:0	4	i_width
op	26:30	0:0	4	*
water	26:32	0:0	4	chroma
op	26:38	0:0	4	->
water	26:40	0:0	4	p
op	26:41	0:0	4	[
water	26:42	0:0	4	i
op	26:43	0:0	4	]
op	26:44	0:0	4	.
water	26:45	0:0	4	w
op	26:46	0:0	4	.
water	26:47	0:0	4	num
op	26:51	0:0	4	/
water	26:53	0:0	4	chroma
op	26:59	0:0	4	->
water	26:61	0:0	4	p
op	26:62	0:0	4	[
water	26:63	0:0	4	i
op	26:64	0:0	4	]
op	26:65	0:0	4	.
water	26:66	0:0	4	w
op	26:67	0:0	4	.
water	26:68	0:0	4	den
decl	27:8	27:71	4	int	h
op	27:14	0:0	4	=
water	27:16	0:0	4	fmt
op	27:19	0:0	4	->
water	27:21	0:0	4	i_height
op	27:30	0:0	4	*
water	27:32	0:0	4	chroma
op	27:38	0:0	4	->
water	27:40	0:0	4	p
op	27:41	0:0	4	[
water	27:42	0:0	4	i
op	27:43	0:0	4	]
op	27:44	0:0	4	.
water	27:45	0:0	4	h
op	27:46	0:0	4	.
water	27:47	0:0	4	num
op	27:51	0:0	4	/
water	27:53	0:0	4	chroma
op	27:59	0:0	4	->
water	27:61	0:0	4	p
op	27:62	0:0	4	[
water	27:63	0:0	4	i
op	27:64	0:0	4	]
op	27:65	0:0	4	.
water	27:66	0:0	4	h
op	27:67	0:0	4	.
water	27:68	0:0	4	den
decl	28:8	29:76	4	int	r
op	28:14	0:0	4	=
water	28:16	0:0	4	(
water	28:17	0:0	4	cfg
op	28:20	0:0	4	->
water	28:22	0:0	4	radius
op	28:30	0:0	4	*
water	28:32	0:0	4	chroma
op	28:38	0:0	4	->
water	28:40	0:0	4	p
op	28:41	0:0	4	[
water	28:42	0:0	4	i
op	28:43	0:0	4	]
op	28:44	0:0	4	.
water	28:45	0:0	4	w
op	28:46	0:0	4	.
water	28:47	0:0	4	num
op	28:51	0:0	4	/
water	28:53	0:0	4	chroma
op	28:59	0:0	4	->
water	28:61	0:0	4	p
op	28:62	0:0	4	[
water	28:63	0:0	4	i
op	28:64	0:0	4	]
op	28:65	0:0	4	.
water	28:66	0:0	4	w
op	28:67	0:0	4	.
water	28:68	0:0	4	den
op	28:72	0:0	4	+
water	29:17	0:0	4	cfg
op	29:20	0:0	4	->
water	29:22	0:0	4	radius
op	29:30	0:0	4	*
water	29:32	0:0	4	chroma
op	29:38	0:0	4	->
water	29:40	0:0	4	p
op	29:41	0:0	4	[
water	29:42	0:0	4	i
op	29:43	0:0	4	]
op	29:44	0:0	4	.
water	29:45	0:0	4	h
op	29:46	0:0	4	.
water	29:47	0:0	4	num
op	29:51	0:0	4	/
water	29:53	0:0	4	chroma
op	29:59	0:0	4	->
water	29:61	0:0	4	p
op	29:62	0:0	4	[
water	29:63	0:0	4	i
op	29:64	0:0	4	]
op	29:65	0:0	4	.
water	29:66	0:0	4	h
op	29:67	0:0	4	.
water	29:68	0:0	4	den
water	29:71	0:0	4	)
op	29:73	0:0	4	/
water	29:75	0:0	4	2
water	30:8	0:0	4	r
op	30:10	0:0	4	=
call	30:12	30:57	4	VLC_CLIP
arg	30:21	30:33	5	(r+1)&~1
water	30:21	0:0	6	(
water	30:22	0:0	6	r
op	30:24	0:0	6	+
water	30:26	0:0	6	1
water	30:27	0:0	6	)
op	30:29	0:0	6	&
water	30:31	0:0	6	~1
arg	30:35	30:45	5	RADIUS_MIN
water	30:35	0:0	6	RADIUS_MIN
arg	30:47	30:57	5	RADIUS_MAX
water	30:47	0:0	6	RADIUS_MAX
water	30:58	0:0	4	;
if	31:8	34:8	4	(__MIN (w ,h ) > 2 * r && cfg -> buf)
cond	31:12	31:40	5	__MIN (w ,h ) > 2 * r && cfg -> buf
call	31:12	31:22	6	__MIN
arg	31:18	31:19	7	w
water	31:18	0:0	8	w
arg	31:21	31:22	7	h
water	31:21	0:0	8	h
op	31:24	0:0	6	>
water	31:26	0:0	6	2
op	31:28	0:0	6	*
water	31:30	0:0	6	r
op	31:32	0:0	6	&&
water	31:35	0:0	6	cfg
op	31:38	0:0	6	->
water	31:40	0:0	6	buf
stmts	31:45	34:8	5	
water	31:45	0:0	6	{
call	32:12	33:62	6	filter_plane
arg	32:25	32:28	7	cfg
water	32:25	0:0	8	cfg
arg	32:30	32:44	7	dstp->p_pixels
water	32:30	0:0	8	dstp
op	32:34	0:0	8	->
water	32:36	0:0	8	p_pixels
arg	32:46	32:60	7	srcp->p_pixels
water	32:46	0:0	8	srcp
op	32:50	0:0	8	->
water	32:52	0:0	8	p_pixels
arg	33:25	33:26	7	w
water	33:25	0:0	8	w
arg	33:28	33:29	7	h
water	33:28	0:0	8	h
arg	33:31	33:44	7	dstp->i_pitch
water	33:31	0:0	8	dstp
op	33:35	0:0	8	->
water	33:37	0:0	8	i_pitch
arg	33:46	33:59	7	srcp->i_pitch
water	33:46	0:0	8	srcp
op	33:50	0:0	8	->
water	33:52	0:0	8	i_pitch
arg	33:61	33:62	7	r
water	33:61	0:0	8	r
water	33:63	0:0	6	;
water	34:8	0:0	6	}
else	34:10	36:8	4
stmts	34:15	36:8	5	
water	34:15	0:0	6	{
call	35:12	35:39	6	plane_CopyPixels
arg	35:29	35:33	7	dstp
water	35:29	0:0	8	dstp
arg	35:35	35:39	7	srcp
water	35:35	0:0	8	srcp
water	35:40	0:0	6	;
water	36:8	0:0	6	}
water	37:4	0:0	4	}
call	38:4	38:35	2	picture_CopyProperties
arg	38:27	38:30	3	dst
water	38:27	0:0	4	dst
arg	38:32	38:35	3	src
water	38:32	0:0	4	src
water	38:36	0:0	2	;
call	39:4	39:23	2	picture_Release
arg	39:20	39:23	3	src
water	39:20	0:0	4	src
water	39:24	0:0	2	;
return	40:4	40:14	2	dst
water	40:11	0:0	3	dst

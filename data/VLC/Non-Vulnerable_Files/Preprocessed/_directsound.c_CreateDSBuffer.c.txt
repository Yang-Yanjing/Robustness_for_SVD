func	2:0	113:0	0	static HRESULT	CreateDSBuffer
params	2:29	0:0	1	
param	2:31	2:48	2	vlc_object_t *	obj
param	2:50	2:72	2	aout_stream_sys_t *	sys
param	3:31	3:43	2	int	i_format
param	3:45	3:59	2	int	i_channels
param	3:61	3:78	2	int	i_nb_channels
param	4:31	4:41	2	int	i_rate
param	4:43	4:56	2	bool	b_probe
stmnts	0:0	112:16	1	
decl	6:4	6:35	2	WAVEFORMATEXTENSIBLE	waveformat
decl	7:4	7:32	2	DSBUFFERDESC	dsbdesc
decl	8:4	8:27	2	HRESULT	hr
water	10:4	0:0	2	waveformat
op	10:14	0:0	2	.
water	10:15	0:0	2	dwChannelMask
op	10:29	0:0	2	=
water	10:31	0:0	2	0
water	10:32	0:0	2	;
for	11:4	13:57	2	(unsigned i = 0 ;pi_vlc_chan_order_wg4 [ i ];i ++)
forinit	11:9	11:23	3	unsigned i = 0 ;
water	11:9	0:0	4	unsigned
water	11:18	0:0	4	i
op	11:20	0:0	4	=
water	11:22	0:0	4	0
water	11:23	0:0	4	;
cond	11:25	11:48	3	pi_vlc_chan_order_wg4 [ i ]
water	11:25	0:0	4	pi_vlc_chan_order_wg4
op	11:46	0:0	4	[
water	11:47	0:0	4	i
op	11:48	0:0	4	]
forexpr	11:51	11:52	3	i ++
water	11:51	0:0	4	i
op	11:52	0:0	4	++
stmts	12:8	13:57	3	
if	12:8	13:57	4	(i_channels & pi_vlc_chan_order_wg4 [ i ])
cond	12:12	12:48	5	i_channels & pi_vlc_chan_order_wg4 [ i ]
water	12:12	0:0	6	i_channels
op	12:23	0:0	6	&
water	12:25	0:0	6	pi_vlc_chan_order_wg4
op	12:46	0:0	6	[
water	12:47	0:0	6	i
op	12:48	0:0	6	]
stmts	13:12	13:57	5	
water	13:12	0:0	6	waveformat
op	13:22	0:0	6	.
water	13:23	0:0	6	dwChannelMask
op	13:37	0:0	6	|=
water	13:40	0:0	6	pi_channels_in
op	13:54	0:0	6	[
water	13:55	0:0	6	i
op	13:56	0:0	6	]
water	13:57	0:0	6	;
switch	14:4	40:4	2	(i_format)
cond	14:12	14:12	3	i_format
water	14:12	0:0	4	i_format
stmts	15:4	40:4	3	
water	15:4	0:0	4	{
label	16:4	16:25	4	case VLC_CODEC_SPDIFL :
water	17:8	0:0	4	i_nb_channels
op	17:22	0:0	4	=
water	17:24	0:0	4	2
water	17:25	0:0	4	;
water	19:8	0:0	4	waveformat
op	19:18	0:0	4	.
water	19:19	0:0	4	dwChannelMask
op	19:33	0:0	4	=
water	19:35	0:0	4	SPEAKER_FRONT_LEFT
op	19:54	0:0	4	|
water	19:56	0:0	4	SPEAKER_FRONT_RIGHT
water	19:75	0:0	4	;
water	20:8	0:0	4	waveformat
op	20:18	0:0	4	.
water	20:19	0:0	4	Format
op	20:25	0:0	4	.
water	20:26	0:0	4	wBitsPerSample
op	20:41	0:0	4	=
water	20:43	0:0	4	16
water	20:45	0:0	4	;
water	21:8	0:0	4	waveformat
op	21:18	0:0	4	.
water	21:19	0:0	4	Samples
op	21:26	0:0	4	.
water	21:27	0:0	4	wValidBitsPerSample
op	21:47	0:0	4	=
water	22:12	0:0	4	waveformat
op	22:22	0:0	4	.
water	22:23	0:0	4	Format
op	22:29	0:0	4	.
water	22:30	0:0	4	wBitsPerSample
water	22:44	0:0	4	;
water	23:8	0:0	4	waveformat
op	23:18	0:0	4	.
water	23:19	0:0	4	Format
op	23:25	0:0	4	.
water	23:26	0:0	4	wFormatTag
op	23:37	0:0	4	=
water	23:39	0:0	4	WAVE_FORMAT_DOLBY_AC3_SPDIF
water	23:66	0:0	4	;
water	24:8	0:0	4	waveformat
op	24:18	0:0	4	.
water	24:19	0:0	4	SubFormat
op	24:29	0:0	4	=
water	24:31	0:0	4	_KSDATAFORMAT_SUBTYPE_DOLBY_AC3_SPDIF
water	24:68	0:0	4	;
break	25:8	25:13	4	
label	26:4	26:23	4	case VLC_CODEC_FL32 :
water	27:8	0:0	4	waveformat
op	27:18	0:0	4	.
water	27:19	0:0	4	Format
op	27:25	0:0	4	.
water	27:26	0:0	4	wBitsPerSample
op	27:41	0:0	4	=
op	27:43	0:0	4	sizeof
water	27:49	0:0	4	(
water	27:50	0:0	4	float
water	27:55	0:0	4	)
op	27:57	0:0	4	*
water	27:59	0:0	4	8
water	27:60	0:0	4	;
water	28:8	0:0	4	waveformat
op	28:18	0:0	4	.
water	28:19	0:0	4	Samples
op	28:26	0:0	4	.
water	28:27	0:0	4	wValidBitsPerSample
op	28:47	0:0	4	=
water	29:12	0:0	4	waveformat
op	29:22	0:0	4	.
water	29:23	0:0	4	Format
op	29:29	0:0	4	.
water	29:30	0:0	4	wBitsPerSample
water	29:44	0:0	4	;
water	30:8	0:0	4	waveformat
op	30:18	0:0	4	.
water	30:19	0:0	4	Format
op	30:25	0:0	4	.
water	30:26	0:0	4	wFormatTag
op	30:37	0:0	4	=
water	30:39	0:0	4	WAVE_FORMAT_IEEE_FLOAT
water	30:61	0:0	4	;
water	31:8	0:0	4	waveformat
op	31:18	0:0	4	.
water	31:19	0:0	4	SubFormat
op	31:29	0:0	4	=
water	31:31	0:0	4	_KSDATAFORMAT_SUBTYPE_IEEE_FLOAT
water	31:63	0:0	4	;
break	32:8	32:13	4	
label	33:4	33:23	4	case VLC_CODEC_S16N :
water	34:8	0:0	4	waveformat
op	34:18	0:0	4	.
water	34:19	0:0	4	Format
op	34:25	0:0	4	.
water	34:26	0:0	4	wBitsPerSample
op	34:41	0:0	4	=
water	34:43	0:0	4	16
water	34:45	0:0	4	;
water	35:8	0:0	4	waveformat
op	35:18	0:0	4	.
water	35:19	0:0	4	Samples
op	35:26	0:0	4	.
water	35:27	0:0	4	wValidBitsPerSample
op	35:47	0:0	4	=
water	36:12	0:0	4	waveformat
op	36:22	0:0	4	.
water	36:23	0:0	4	Format
op	36:29	0:0	4	.
water	36:30	0:0	4	wBitsPerSample
water	36:44	0:0	4	;
water	37:8	0:0	4	waveformat
op	37:18	0:0	4	.
water	37:19	0:0	4	Format
op	37:25	0:0	4	.
water	37:26	0:0	4	wFormatTag
op	37:37	0:0	4	=
water	37:39	0:0	4	WAVE_FORMAT_PCM
water	37:54	0:0	4	;
water	38:8	0:0	4	waveformat
op	38:18	0:0	4	.
water	38:19	0:0	4	SubFormat
op	38:29	0:0	4	=
water	38:31	0:0	4	_KSDATAFORMAT_SUBTYPE_PCM
water	38:56	0:0	4	;
break	39:8	39:13	4	
water	40:4	0:0	4	}
water	41:4	0:0	2	waveformat
op	41:14	0:0	2	.
water	41:15	0:0	2	Format
op	41:21	0:0	2	.
water	41:22	0:0	2	nChannels
op	41:32	0:0	2	=
water	41:34	0:0	2	i_nb_channels
water	41:47	0:0	2	;
water	42:4	0:0	2	waveformat
op	42:14	0:0	2	.
water	42:15	0:0	2	Format
op	42:21	0:0	2	.
water	42:22	0:0	2	nSamplesPerSec
op	42:37	0:0	2	=
water	42:39	0:0	2	i_rate
water	42:45	0:0	2	;
water	43:4	0:0	2	waveformat
op	43:14	0:0	2	.
water	43:15	0:0	2	Format
op	43:21	0:0	2	.
water	43:22	0:0	2	nBlockAlign
op	43:34	0:0	2	=
water	44:8	0:0	2	waveformat
op	44:18	0:0	2	.
water	44:19	0:0	2	Format
op	44:25	0:0	2	.
water	44:26	0:0	2	wBitsPerSample
op	44:41	0:0	2	/
water	44:43	0:0	2	8
op	44:45	0:0	2	*
water	44:47	0:0	2	i_nb_channels
water	44:60	0:0	2	;
water	45:4	0:0	2	waveformat
op	45:14	0:0	2	.
water	45:15	0:0	2	Format
op	45:21	0:0	2	.
water	45:22	0:0	2	nAvgBytesPerSec
op	45:38	0:0	2	=
water	46:8	0:0	2	waveformat
op	46:18	0:0	2	.
water	46:19	0:0	2	Format
op	46:25	0:0	2	.
water	46:26	0:0	2	nSamplesPerSec
op	46:41	0:0	2	*
water	46:43	0:0	2	waveformat
op	46:53	0:0	2	.
water	46:54	0:0	2	Format
op	46:60	0:0	2	.
water	46:61	0:0	2	nBlockAlign
water	46:72	0:0	2	;
water	47:4	0:0	2	sys
op	47:7	0:0	2	->
water	47:9	0:0	2	i_bytes_per_sample
op	47:28	0:0	2	=
water	47:30	0:0	2	waveformat
op	47:40	0:0	2	.
water	47:41	0:0	2	Format
op	47:47	0:0	2	.
water	47:48	0:0	2	nBlockAlign
water	47:59	0:0	2	;
water	48:4	0:0	2	sys
op	48:7	0:0	2	->
water	48:9	0:0	2	format
op	48:16	0:0	2	=
water	48:18	0:0	2	i_format
water	48:26	0:0	2	;
call	50:4	50:44	2	memset
arg	50:11	50:19	3	&dsbdesc
op	50:11	0:0	4	&
water	50:12	0:0	4	dsbdesc
arg	50:21	50:22	3	0
water	50:21	0:0	4	0
arg	50:24	50:44	3	sizeof(DSBUFFERDESC)
op	50:24	0:0	4	sizeof
water	50:30	0:0	4	(
water	50:31	0:0	4	DSBUFFERDESC
water	50:43	0:0	4	)
water	50:45	0:0	2	;
water	51:4	0:0	2	dsbdesc
op	51:11	0:0	2	.
water	51:12	0:0	2	dwSize
op	51:19	0:0	2	=
op	51:21	0:0	2	sizeof
water	51:27	0:0	2	(
water	51:28	0:0	2	DSBUFFERDESC
water	51:40	0:0	2	)
water	51:41	0:0	2	;
water	52:4	0:0	2	dsbdesc
op	52:11	0:0	2	.
water	52:12	0:0	2	dwFlags
op	52:20	0:0	2	=
water	52:22	0:0	2	DSBCAPS_GETCURRENTPOSITION2
op	53:20	0:0	2	|
water	53:22	0:0	2	DSBCAPS_GLOBALFOCUS
op	54:20	0:0	2	|
water	54:22	0:0	2	DSBCAPS_CTRLVOLUME
op	55:20	0:0	2	|
water	55:22	0:0	2	DSBCAPS_CTRLPOSITIONNOTIFY
water	55:48	0:0	2	;
if	57:4	60:4	2	(i_nb_channels <= 2)
cond	57:8	57:25	3	i_nb_channels <= 2
water	57:8	0:0	4	i_nb_channels
op	57:22	0:0	4	<=
water	57:25	0:0	4	2
stmts	58:4	60:4	3	
water	58:4	0:0	4	{
water	59:8	0:0	4	waveformat
op	59:18	0:0	4	.
water	59:19	0:0	4	Format
op	59:25	0:0	4	.
water	59:26	0:0	4	cbSize
op	59:33	0:0	4	=
water	59:35	0:0	4	0
water	59:36	0:0	4	;
water	60:4	0:0	4	}
else	61:4	68:4	2
stmts	62:4	68:4	3	
water	62:4	0:0	4	{
water	63:8	0:0	4	waveformat
op	63:18	0:0	4	.
water	63:19	0:0	4	Format
op	63:25	0:0	4	.
water	63:26	0:0	4	wFormatTag
op	63:37	0:0	4	=
water	63:39	0:0	4	WAVE_FORMAT_EXTENSIBLE
water	63:61	0:0	4	;
water	64:8	0:0	4	waveformat
op	64:18	0:0	4	.
water	64:19	0:0	4	Format
op	64:25	0:0	4	.
water	64:26	0:0	4	cbSize
op	64:33	0:0	4	=
op	65:12	0:0	4	sizeof
water	65:18	0:0	4	(
water	65:19	0:0	4	WAVEFORMATEXTENSIBLE
water	65:39	0:0	4	)
op	65:41	0:0	4	-
op	65:43	0:0	4	sizeof
water	65:49	0:0	4	(
water	65:50	0:0	4	WAVEFORMATEX
water	65:62	0:0	4	)
water	65:63	0:0	4	;
water	67:8	0:0	4	dsbdesc
op	67:15	0:0	4	.
water	67:16	0:0	4	dwFlags
op	67:24	0:0	4	|=
water	67:27	0:0	4	DSBCAPS_LOCHARDWARE
water	67:46	0:0	4	;
water	68:4	0:0	4	}
water	69:4	0:0	2	dsbdesc
op	69:11	0:0	2	.
water	69:12	0:0	2	dwBufferBytes
op	69:26	0:0	2	=
water	69:28	0:0	2	DS_BUF_SIZE
water	69:39	0:0	2	;
water	70:4	0:0	2	dsbdesc
op	70:11	0:0	2	.
water	70:12	0:0	2	lpwfxFormat
op	70:24	0:0	2	=
water	70:26	0:0	2	(
water	70:27	0:0	2	WAVEFORMATEX
op	70:40	0:0	2	*
water	70:41	0:0	2	)
op	70:42	0:0	2	&
water	70:43	0:0	2	waveformat
water	70:53	0:0	2	;
if	72:4	73:46	2	(i_format == VLC_CODEC_SPDIFL)
cond	72:9	72:21	3	i_format == VLC_CODEC_SPDIFL
water	72:9	0:0	4	i_format
op	72:18	0:0	4	==
water	72:21	0:0	4	VLC_CODEC_SPDIFL
stmts	73:8	73:46	3	
water	73:8	0:0	4	dsbdesc
op	73:15	0:0	4	.
water	73:16	0:0	4	dwFlags
op	73:24	0:0	4	&=
water	73:27	0:0	4	~DSBCAPS_CTRLVOLUME
water	73:46	0:0	4	;
water	74:4	0:0	2	hr
op	74:7	0:0	2	=
call	74:9	75:64	2	IDirectSound_CreateSoundBuffer
arg	74:41	74:56	3	sys->p_dsobject
water	74:41	0:0	4	sys
op	74:44	0:0	4	->
water	74:46	0:0	4	p_dsobject
arg	74:58	74:66	3	&dsbdesc
op	74:58	0:0	4	&
water	74:59	0:0	4	dsbdesc
arg	75:41	75:57	3	&sys->p_dsbuffer
op	75:41	0:0	4	&
water	75:42	0:0	4	sys
op	75:45	0:0	4	->
water	75:47	0:0	4	p_dsbuffer
arg	75:59	75:64	3	NULL
water	75:59	0:0	4	NULL
water	75:65	0:0	2	;
if	76:4	88:4	2	(FAILED (hr ))
cond	76:8	76:17	3	FAILED (hr )
call	76:8	76:17	4	FAILED
arg	76:15	76:17	5	hr
water	76:15	0:0	6	hr
stmts	77:4	88:4	3	
water	77:4	0:0	4	{
if	78:8	79:21	4	(! ( dsbdesc . dwFlags & DSBCAPS_LOCHARDWARE ))
cond	78:12	78:51	5	! ( dsbdesc . dwFlags & DSBCAPS_LOCHARDWARE )
op	78:12	0:0	6	!
water	78:13	0:0	6	(
water	78:14	0:0	6	dsbdesc
op	78:21	0:0	6	.
water	78:22	0:0	6	dwFlags
op	78:30	0:0	6	&
water	78:32	0:0	6	DSBCAPS_LOCHARDWARE
water	78:51	0:0	6	)
stmts	79:12	79:21	5	
return	79:12	79:21	6	hr
water	79:19	0:0	7	hr
water	81:8	0:0	4	dsbdesc
op	81:15	0:0	4	.
water	81:16	0:0	4	dwFlags
op	81:24	0:0	4	&=
water	81:27	0:0	4	~DSBCAPS_LOCHARDWARE
water	81:47	0:0	4	;
water	82:8	0:0	4	hr
op	82:11	0:0	4	=
call	82:13	83:68	4	IDirectSound_CreateSoundBuffer
arg	82:45	82:60	5	sys->p_dsobject
water	82:45	0:0	6	sys
op	82:48	0:0	6	->
water	82:50	0:0	6	p_dsobject
arg	82:62	82:70	5	&dsbdesc
op	82:62	0:0	6	&
water	82:63	0:0	6	dsbdesc
arg	83:45	83:61	5	&sys->p_dsbuffer
op	83:45	0:0	6	&
water	83:46	0:0	6	sys
op	83:49	0:0	6	->
water	83:51	0:0	6	p_dsbuffer
arg	83:63	83:68	5	NULL
water	83:63	0:0	6	NULL
water	83:69	0:0	4	;
if	84:8	85:21	4	(FAILED (hr ))
cond	84:12	84:21	5	FAILED (hr )
call	84:12	84:21	6	FAILED
arg	84:19	84:21	7	hr
water	84:19	0:0	8	hr
stmts	85:12	85:21	5	
return	85:12	85:21	6	hr
water	85:19	0:0	7	hr
if	86:8	87:64	4	(! b_probe)
cond	86:12	86:13	5	! b_probe
op	86:12	0:0	6	!
water	86:13	0:0	6	b_probe
stmts	87:12	87:64	5	
call	87:12	87:63	6	msg_Dbg
arg	87:21	87:24	7	obj
water	87:21	0:0	8	obj
arg	87:26	87:63	7	"couldn't use hardware sound buffer"
water	87:26	0:0	8	"couldn't use hardware sound buffer"
water	87:64	0:0	6	;
water	88:4	0:0	4	}
if	90:4	95:4	2	(b_probe)
cond	90:8	90:8	3	b_probe
water	90:8	0:0	4	b_probe
stmts	91:4	95:4	3	
water	91:4	0:0	4	{
call	92:8	92:52	4	IDirectSoundBuffer_Release
arg	92:36	92:52	5	sys->p_dsbuffer
water	92:36	0:0	6	sys
op	92:39	0:0	6	->
water	92:41	0:0	6	p_dsbuffer
water	92:53	0:0	4	;
water	93:8	0:0	4	sys
op	93:11	0:0	4	->
water	93:13	0:0	4	p_dsbuffer
op	93:24	0:0	4	=
water	93:26	0:0	4	NULL
water	93:30	0:0	4	;
return	94:8	94:20	4	DS_OK
water	94:15	0:0	5	DS_OK
water	95:4	0:0	4	}
water	96:4	0:0	2	sys
op	96:7	0:0	2	->
water	96:9	0:0	2	i_rate
op	96:16	0:0	2	=
water	96:18	0:0	2	i_rate
water	96:24	0:0	2	;
water	97:4	0:0	2	sys
op	97:7	0:0	2	->
water	97:9	0:0	2	i_channel_mask
op	97:24	0:0	2	=
water	97:26	0:0	2	waveformat
op	97:36	0:0	2	.
water	97:37	0:0	2	dwChannelMask
water	97:50	0:0	2	;
water	98:4	0:0	2	sys
op	98:7	0:0	2	->
water	98:9	0:0	2	chans_to_reorder
op	98:26	0:0	2	=
call	99:8	100:76	2	aout_CheckChannelReorder
arg	99:34	99:48	3	pi_channels_in
water	99:34	0:0	4	pi_channels_in
arg	99:50	99:65	3	pi_channels_out
water	99:50	0:0	4	pi_channels_out
arg	100:34	100:58	3	waveformat.dwChannelMask
water	100:34	0:0	4	waveformat
op	100:44	0:0	4	.
water	100:45	0:0	4	dwChannelMask
arg	100:60	100:76	3	sys->chan_table
water	100:60	0:0	4	sys
op	100:63	0:0	4	->
water	100:65	0:0	4	chan_table
water	100:77	0:0	2	;
if	101:4	102:51	2	(sys -> chans_to_reorder)
cond	101:8	101:13	3	sys -> chans_to_reorder
water	101:8	0:0	4	sys
op	101:11	0:0	4	->
water	101:13	0:0	4	chans_to_reorder
stmts	102:8	102:51	3	
call	102:8	102:50	4	msg_Dbg
arg	102:17	102:20	5	obj
water	102:17	0:0	6	obj
arg	102:22	102:50	5	"channel reordering needed"
water	102:22	0:0	6	"channel reordering needed"
water	102:51	0:0	4	;
water	103:4	0:0	2	hr
op	103:7	0:0	2	=
call	103:9	105:69	2	IDirectSoundBuffer_QueryInterface
arg	103:44	103:59	3	sys->p_dsbuffer
water	103:44	0:0	4	sys
op	103:47	0:0	4	->
water	103:49	0:0	4	p_dsbuffer
arg	104:44	104:67	3	&IID_IDirectSoundNotify
op	104:44	0:0	4	&
water	104:45	0:0	4	IID_IDirectSoundNotify
arg	105:44	105:69	3	(void**)&sys->p_notify
water	105:44	0:0	4	(
water	105:45	0:0	4	void
op	105:50	0:0	4	*
op	105:51	0:0	4	*
water	105:52	0:0	4	)
op	105:54	0:0	4	&
water	105:55	0:0	4	sys
op	105:58	0:0	4	->
water	105:60	0:0	4	p_notify
water	105:70	0:0	2	;
if	106:4	110:4	2	(hr != DS_OK)
cond	106:8	106:14	3	hr != DS_OK
water	106:8	0:0	4	hr
op	106:11	0:0	4	!=
water	106:14	0:0	4	DS_OK
stmts	107:4	110:4	3	
water	107:4	0:0	4	{
call	108:8	108:58	4	msg_Err
arg	108:17	108:20	5	obj
water	108:17	0:0	6	obj
arg	108:22	108:58	5	"Couldn't query IDirectSoundNotify"
water	108:22	0:0	6	"Couldn't query IDirectSoundNotify"
water	108:59	0:0	4	;
water	109:8	0:0	4	sys
op	109:11	0:0	4	->
water	109:13	0:0	4	p_notify
op	109:22	0:0	4	=
water	109:24	0:0	4	NULL
water	109:28	0:0	4	;
water	110:4	0:0	4	}
call	111:4	111:31	2	FillBuffer
arg	111:16	111:19	3	obj
water	111:16	0:0	4	obj
arg	111:21	111:24	3	sys
water	111:21	0:0	4	sys
arg	111:26	111:31	3	NULL
water	111:26	0:0	4	NULL
water	111:32	0:0	2	;
return	112:4	112:16	2	DS_OK
water	112:11	0:0	3	DS_OK

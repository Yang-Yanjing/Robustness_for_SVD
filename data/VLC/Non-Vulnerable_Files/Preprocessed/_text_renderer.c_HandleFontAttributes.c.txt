func	2:0	83:0	0	int	HandleFontAttributes
params	2:24	0:0	1	
param	2:26	2:52	2	xml_reader_t *	p_xml_reader
param	3:33	3:56	2	font_stack_t * *	p_fonts
stmnts	0:0	82:13	1	
decl	5:4	5:17	2	int	rv
decl	6:4	6:34	2	char	*psz_fontname
op	6:28	0:0	2	=
water	6:30	0:0	2	NULL
decl	7:4	7:38	2	uint32_t	i_font_color
op	7:28	0:0	2	=
water	7:30	0:0	2	0
water	7:31	0:0	2	xffffff
decl	8:4	8:33	2	int	i_font_alpha
op	8:28	0:0	2	=
water	8:30	0:0	2	255
decl	9:4	9:46	2	uint32_t	i_karaoke_bg_color
op	9:34	0:0	2	=
water	9:36	0:0	2	0
water	9:37	0:0	2	x00ffffff
decl	10:4	10:53	2	int	i_font_size
op	10:28	0:0	2	=
water	10:30	0:0	2	STYLE_DEFAULT_FONT_SIZE
if	14:4	21:4	2	(VLC_SUCCESS ==PeekFont (p_fonts ,& psz_fontname ,& i_font_size ,& i_font_color ,& i_karaoke_bg_color ))
cond	14:8	18:53	3	VLC_SUCCESS ==PeekFont (p_fonts ,& psz_fontname ,& i_font_size ,& i_font_color ,& i_karaoke_bg_color )
water	14:8	0:0	4	VLC_SUCCESS
op	14:20	0:0	4	==
call	14:23	18:53	4	PeekFont
arg	14:33	14:40	5	p_fonts
water	14:33	0:0	6	p_fonts
arg	15:33	15:46	5	&psz_fontname
op	15:33	0:0	6	&
water	15:34	0:0	6	psz_fontname
arg	16:33	16:45	5	&i_font_size
op	16:33	0:0	6	&
water	16:34	0:0	6	i_font_size
arg	17:33	17:46	5	&i_font_color
op	17:33	0:0	6	&
water	17:34	0:0	6	i_font_color
arg	18:33	18:53	5	&i_karaoke_bg_color
op	18:33	0:0	6	&
water	18:34	0:0	6	i_karaoke_bg_color
stmts	19:4	21:4	3	
water	19:4	0:0	4	{
water	20:8	0:0	4	psz_fontname
op	20:21	0:0	4	=
call	20:23	20:44	4	strdup
arg	20:31	20:44	5	psz_fontname
water	20:31	0:0	6	psz_fontname
water	20:45	0:0	4	;
water	21:4	0:0	4	}
water	22:4	0:0	2	i_font_alpha
op	22:17	0:0	2	=
water	22:19	0:0	2	(
water	22:20	0:0	2	i_font_color
op	22:33	0:0	2	>>
water	22:36	0:0	2	24
water	22:38	0:0	2	)
op	22:40	0:0	2	&
water	22:42	0:0	2	0
water	22:43	0:0	2	xff
water	22:46	0:0	2	;
water	23:4	0:0	2	i_font_color
op	23:17	0:0	2	&=
water	23:20	0:0	2	0
water	23:21	0:0	2	x00ffffff
water	23:30	0:0	2	;
decl	24:4	24:28	2	const char	*name
water	24:20	0:0	2	,
decl	24:4	24:28	2	const char	*value
while	25:4	75:4	2	(( name =xml_ReaderNextAttr (p_xml_reader ,& value ) ) != NULL)
cond	25:11	25:66	3	( name =xml_ReaderNextAttr (p_xml_reader ,& value ) ) != NULL
water	25:11	0:0	4	(
water	25:12	0:0	4	name
op	25:17	0:0	4	=
call	25:19	25:60	4	xml_ReaderNextAttr
arg	25:39	25:51	5	p_xml_reader
water	25:39	0:0	6	p_xml_reader
arg	25:53	25:60	5	&value
op	25:53	0:0	6	&
water	25:54	0:0	6	value
water	25:61	0:0	4	)
op	25:63	0:0	4	!=
water	25:66	0:0	4	NULL
stmts	26:4	75:4	3	
water	26:4	0:0	4	{
if	27:8	31:8	4	(!strcasecmp ("face" ,name ))
cond	27:12	27:38	5	!strcasecmp ("face" ,name )
op	27:12	0:0	6	!
call	27:13	27:38	6	strcasecmp
arg	27:25	27:31	7	"face"
water	27:25	0:0	8	"face"
arg	27:33	27:38	7	name
water	27:33	0:0	8	name
stmts	28:8	31:8	5	
water	28:8	0:0	6	{
call	29:12	29:31	6	free
arg	29:18	29:31	7	psz_fontname
water	29:18	0:0	8	psz_fontname
water	29:32	0:0	6	;
water	30:12	0:0	6	psz_fontname
op	30:25	0:0	6	=
call	30:27	30:41	6	strdup
arg	30:35	30:41	7	value
water	30:35	0:0	8	value
water	30:42	0:0	6	;
water	31:8	0:0	6	}
else	32:8	46:8	4
stmts	32:13	46:8	5	
if	32:13	46:8	6	(!strcasecmp ("size" ,name ))
cond	32:17	32:43	7	!strcasecmp ("size" ,name )
op	32:17	0:0	8	!
call	32:18	32:43	8	strcasecmp
arg	32:30	32:36	9	"size"
water	32:30	0:0	10	"size"
arg	32:38	32:43	9	name
water	32:38	0:0	10	name
stmts	33:8	46:8	7	
water	33:8	0:0	8	{
if	34:12	43:12	8	(( * value == '+' ) || ( * value == '-' ))
cond	34:16	34:53	9	( * value == '+' ) || ( * value == '-' )
water	34:16	0:0	10	(
op	34:18	0:0	10	*
water	34:19	0:0	10	value
op	34:25	0:0	10	==
water	34:28	0:0	10	'+'
water	34:32	0:0	10	)
op	34:34	0:0	10	||
water	34:37	0:0	10	(
op	34:39	0:0	10	*
water	34:40	0:0	10	value
op	34:46	0:0	10	==
water	34:49	0:0	10	'-'
water	34:53	0:0	10	)
stmts	35:12	43:12	9	
water	35:12	0:0	10	{
decl	36:16	36:43	10	int	i_value
op	36:28	0:0	10	=
call	36:30	36:42	11	atoi
arg	36:36	36:42	12	value
water	36:36	0:0	13	value
if	37:16	38:65	10	(( i_value >= - 5 ) && ( i_value <= 5 ))
cond	37:20	37:56	11	( i_value >= - 5 ) && ( i_value <= 5 )
water	37:20	0:0	12	(
water	37:22	0:0	12	i_value
op	37:30	0:0	12	>=
op	37:33	0:0	12	-
water	37:34	0:0	12	5
water	37:36	0:0	12	)
op	37:38	0:0	12	&&
water	37:41	0:0	12	(
water	37:43	0:0	12	i_value
op	37:51	0:0	12	<=
water	37:54	0:0	12	5
water	37:56	0:0	12	)
stmts	38:20	38:65	11	
water	38:20	0:0	12	i_font_size
op	38:32	0:0	12	+=
water	38:35	0:0	12	(
water	38:37	0:0	12	i_value
op	38:45	0:0	12	*
water	38:47	0:0	12	i_font_size
water	38:59	0:0	12	)
op	38:61	0:0	12	/
water	38:63	0:0	12	10
water	38:65	0:0	12	;
else	39:16	40:43	10
stmts	39:21	40:43	11	
if	39:21	40:43	12	(i_value < - 5)
cond	39:25	39:36	13	i_value < - 5
water	39:25	0:0	14	i_value
op	39:33	0:0	14	<
op	39:35	0:0	14	-
water	39:36	0:0	14	5
stmts	40:20	40:43	13	
water	40:20	0:0	14	i_font_size
op	40:32	0:0	14	=
op	40:34	0:0	14	-
water	40:36	0:0	14	i_value
water	40:43	0:0	14	;
else	41:16	42:41	10
stmts	41:21	42:41	11	
if	41:21	42:41	12	(i_value > 5)
cond	41:25	41:35	13	i_value > 5
water	41:25	0:0	14	i_value
op	41:33	0:0	14	>
water	41:35	0:0	14	5
stmts	42:20	42:41	13	
water	42:20	0:0	14	i_font_size
op	42:32	0:0	14	=
water	42:34	0:0	14	i_value
water	42:41	0:0	14	;
water	43:12	0:0	10	}
else	44:12	45:43	8
stmts	45:16	45:43	9	
water	45:16	0:0	10	i_font_size
op	45:28	0:0	10	=
call	45:30	45:42	10	atoi
arg	45:36	45:42	11	value
water	45:36	0:0	12	value
water	45:43	0:0	10	;
water	46:8	0:0	8	}
else	47:8	69:8	4
stmts	47:13	69:8	5	
if	47:13	69:8	6	(!strcasecmp ("color" ,name ))
cond	47:17	47:44	7	!strcasecmp ("color" ,name )
op	47:17	0:0	8	!
call	47:18	47:44	8	strcasecmp
arg	47:30	47:37	9	"color"
water	47:30	0:0	10	"color"
arg	47:39	47:44	9	name
water	47:39	0:0	10	name
stmts	48:8	69:8	7	
water	48:8	0:0	8	{
if	49:12	53:12	8	(value [ 0 ] == '#')
cond	49:16	49:28	9	value [ 0 ] == '#'
water	49:16	0:0	10	value
op	49:21	0:0	10	[
water	49:22	0:0	10	0
op	49:23	0:0	10	]
op	49:25	0:0	10	==
water	49:28	0:0	10	'#'
stmts	50:12	53:12	9	
water	50:12	0:0	10	{
water	51:16	0:0	10	i_font_color
op	51:29	0:0	10	=
call	51:31	51:59	10	strtol
arg	51:39	51:48	11	value+1
water	51:39	0:0	12	value
op	51:45	0:0	12	+
water	51:47	0:0	12	1
arg	51:50	51:54	11	NULL
water	51:50	0:0	12	NULL
arg	51:56	51:59	11	16
water	51:56	0:0	12	16
water	51:60	0:0	10	;
water	52:16	0:0	10	i_font_color
op	52:29	0:0	10	&=
water	52:32	0:0	10	0
water	52:33	0:0	10	x00ffffff
water	52:42	0:0	10	;
water	53:12	0:0	10	}
else	54:12	68:12	8
stmts	55:12	68:12	9	
water	55:12	0:0	10	{
decl	56:16	56:25	10	char	*end
decl	57:16	57:60	10	uint32_t	i_value
op	57:33	0:0	10	=
call	57:35	57:59	11	strtol
arg	57:43	57:48	12	value
water	57:43	0:0	13	value
arg	57:50	57:54	12	&end
op	57:50	0:0	13	&
water	57:51	0:0	13	end
arg	57:56	57:59	12	16
water	57:56	0:0	13	16
if	58:16	59:55	10	(* end == '\0' || * end == ' ')
cond	58:20	58:44	11	* end == '\0' || * end == ' '
op	58:20	0:0	12	*
water	58:21	0:0	12	end
op	58:25	0:0	12	==
water	58:28	0:0	12	'\0'
op	58:33	0:0	12	||
op	58:36	0:0	12	*
water	58:37	0:0	12	end
op	58:41	0:0	12	==
water	58:44	0:0	12	' '
stmts	59:20	59:55	11	
water	59:20	0:0	12	i_font_color
op	59:33	0:0	12	=
water	59:35	0:0	12	i_value
op	59:43	0:0	12	&
water	59:45	0:0	12	0
water	59:46	0:0	12	x00ffffff
water	59:55	0:0	12	;
for	60:16	67:16	10	( int i = 0 ;p_html_colors [ i ] . psz_name != NULL;i ++)
forinit	0:0	60:30	11	 int i = 0 ;
decl	60:21	60:30	12	int	i
op	60:27	0:0	12	=
water	60:29	0:0	12	0
cond	60:32	60:61	11	p_html_colors [ i ] . psz_name != NULL
water	60:32	0:0	12	p_html_colors
op	60:45	0:0	12	[
water	60:46	0:0	12	i
op	60:47	0:0	12	]
op	60:48	0:0	12	.
water	60:49	0:0	12	psz_name
op	60:58	0:0	12	!=
water	60:61	0:0	12	NULL
forexpr	60:67	60:68	11	i ++
water	60:67	0:0	12	i
op	60:68	0:0	12	++
stmts	61:16	67:16	11	
water	61:16	0:0	12	{
if	62:20	66:20	12	(!strncasecmp (value ,p_html_colors [ i ] . psz_name ,strlen (p_html_colors [ i ] . psz_name ) ))
cond	62:24	62:106	13	!strncasecmp (value ,p_html_colors [ i ] . psz_name ,strlen (p_html_colors [ i ] . psz_name ) )
op	62:24	0:0	14	!
call	62:25	62:106	14	strncasecmp
arg	62:38	62:43	15	value
water	62:38	0:0	16	value
arg	62:45	62:70	15	p_html_colors[i].psz_name
water	62:45	0:0	16	p_html_colors
op	62:58	0:0	16	[
water	62:59	0:0	16	i
op	62:60	0:0	16	]
op	62:61	0:0	16	.
water	62:62	0:0	16	psz_name
arg	62:72	62:106	15	strlen(p_html_colors[i].psz_name)
call	62:72	62:104	16	strlen
arg	62:79	62:104	17	p_html_colors[i].psz_name
water	62:79	0:0	18	p_html_colors
op	62:92	0:0	18	[
water	62:93	0:0	18	i
op	62:94	0:0	18	]
op	62:95	0:0	18	.
water	62:96	0:0	18	psz_name
stmts	63:20	66:20	13	
water	63:20	0:0	14	{
water	64:24	0:0	14	i_font_color
op	64:37	0:0	14	=
water	64:39	0:0	14	p_html_colors
op	64:52	0:0	14	[
water	64:53	0:0	14	i
op	64:54	0:0	14	]
op	64:55	0:0	14	.
water	64:56	0:0	14	i_value
water	64:63	0:0	14	;
break	65:24	65:29	14	
water	66:20	0:0	14	}
water	67:16	0:0	12	}
water	68:12	0:0	10	}
water	69:8	0:0	8	}
else	70:8	74:8	4
stmts	70:13	74:8	5	
if	70:13	74:8	6	(!strcasecmp ("alpha" ,name ) && ( value [ 0 ] == '#' ))
cond	70:17	70:67	7	!strcasecmp ("alpha" ,name ) && ( value [ 0 ] == '#' )
op	70:17	0:0	8	!
call	70:18	70:44	8	strcasecmp
arg	70:30	70:37	9	"alpha"
water	70:30	0:0	10	"alpha"
arg	70:39	70:44	9	name
water	70:39	0:0	10	name
op	70:46	0:0	8	&&
water	70:49	0:0	8	(
water	70:51	0:0	8	value
op	70:56	0:0	8	[
water	70:57	0:0	8	0
op	70:58	0:0	8	]
op	70:60	0:0	8	==
water	70:63	0:0	8	'#'
water	70:67	0:0	8	)
stmts	71:8	74:8	7	
water	71:8	0:0	8	{
water	72:12	0:0	8	i_font_alpha
op	72:25	0:0	8	=
call	72:27	72:55	8	strtol
arg	72:35	72:44	9	value+1
water	72:35	0:0	10	value
op	72:41	0:0	10	+
water	72:43	0:0	10	1
arg	72:46	72:50	9	NULL
water	72:46	0:0	10	NULL
arg	72:52	72:55	9	16
water	72:52	0:0	10	16
water	72:56	0:0	8	;
water	73:12	0:0	8	i_font_alpha
op	73:25	0:0	8	&=
water	73:28	0:0	8	0
water	73:29	0:0	8	xff
water	73:32	0:0	8	;
water	74:8	0:0	8	}
water	75:4	0:0	4	}
water	76:4	0:0	2	rv
op	76:7	0:0	2	=
call	76:9	80:38	2	PushFont
arg	76:19	76:26	3	p_fonts
water	76:19	0:0	4	p_fonts
arg	77:19	77:31	3	psz_fontname
water	77:19	0:0	4	psz_fontname
arg	78:19	78:30	3	i_font_size
water	78:19	0:0	4	i_font_size
arg	79:19	79:86	3	(i_font_color&0xffffff)|((uint32_t)(i_font_alpha&0xff)<<24)
water	79:19	0:0	4	(
water	79:20	0:0	4	i_font_color
op	79:33	0:0	4	&
water	79:35	0:0	4	0
water	79:36	0:0	4	xffffff
water	79:43	0:0	4	)
op	79:45	0:0	4	|
water	79:47	0:0	4	(
call	79:48	79:78	4	(uint32_t)
arg	79:59	79:78	5	i_font_alpha&0xff
water	79:59	0:0	6	i_font_alpha
op	79:72	0:0	6	&
water	79:74	0:0	6	0
water	79:75	0:0	6	xff
op	79:80	0:0	4	<<
water	79:83	0:0	4	24
water	79:85	0:0	4	)
arg	80:19	80:38	3	i_karaoke_bg_color
water	80:19	0:0	4	i_karaoke_bg_color
water	80:39	0:0	2	;
call	81:4	81:23	2	free
arg	81:10	81:23	3	psz_fontname
water	81:10	0:0	4	psz_fontname
water	81:24	0:0	2	;
return	82:4	82:13	2	rv
water	82:11	0:0	3	rv

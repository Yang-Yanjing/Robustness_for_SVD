func	2:0	43:0	0	playlist_item_t *	GetPrevItem
params	2:28	0:0	1	
param	2:30	2:52	2	playlist_t *	p_playlist
param	3:30	3:53	2	playlist_item_t *	p_root
param	4:30	4:54	2	playlist_item_t *	p_item
stmnts	0:0	42:15	1	
decl	6:4	6:29	2	playlist_item_t	*p_parent
decl	7:4	7:9	2	int	i
if	9:4	10:58	2	(p_item && p_item -> i_children > 0)
cond	9:8	9:39	3	p_item && p_item -> i_children > 0
water	9:8	0:0	4	p_item
op	9:15	0:0	4	&&
water	9:18	0:0	4	p_item
op	9:24	0:0	4	->
water	9:26	0:0	4	i_children
op	9:37	0:0	4	>
water	9:39	0:0	4	0
stmts	10:8	10:58	3	
return	10:8	10:58	4	p_item->pp_children[p_item->i_children-1]
water	10:15	0:0	5	p_item
op	10:21	0:0	5	->
water	10:23	0:0	5	pp_children
op	10:34	0:0	5	[
water	10:35	0:0	5	p_item
op	10:41	0:0	5	->
water	10:43	0:0	5	i_children
op	10:54	0:0	5	-
water	10:56	0:0	5	1
op	10:57	0:0	5	]
if	12:4	13:35	2	(p_item != NULL)
cond	12:8	12:18	3	p_item != NULL
water	12:8	0:0	4	p_item
op	12:15	0:0	4	!=
water	12:18	0:0	4	NULL
stmts	13:8	13:35	3	
water	13:8	0:0	4	p_parent
op	13:17	0:0	4	=
water	13:19	0:0	4	p_item
op	13:25	0:0	4	->
water	13:27	0:0	4	p_parent
water	13:35	0:0	4	;
else	14:4	18:4	2
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:48	4	msg_Err
arg	16:17	16:27	5	p_playlist
water	16:17	0:0	6	p_playlist
arg	16:29	16:48	5	"Get the last one"
water	16:29	0:0	6	"Get the last one"
water	16:49	0:0	4	;
call	17:8	17:14	4	abort
water	17:15	0:0	4	;
water	18:4	0:0	4	}
water	18:5	0:0	2	;
for	19:4	41:4	2	(i = p_parent -> i_children - 1 ;i >= 0;i --)
forinit	19:9	19:37	3	i = p_parent -> i_children - 1 ;
water	19:9	0:0	4	i
op	19:11	0:0	4	=
water	19:13	0:0	4	p_parent
op	19:21	0:0	4	->
water	19:23	0:0	4	i_children
op	19:34	0:0	4	-
water	19:35	0:0	4	1
water	19:37	0:0	4	;
cond	19:39	19:44	3	i >= 0
water	19:39	0:0	4	i
op	19:41	0:0	4	>=
water	19:44	0:0	4	0
forexpr	19:49	19:50	3	i --
water	19:49	0:0	4	i
op	19:50	0:0	4	--
stmts	20:4	41:4	3	
water	20:4	0:0	4	{
if	21:8	40:8	4	(p_parent -> pp_children [ i ] == p_item)
cond	21:12	21:40	5	p_parent -> pp_children [ i ] == p_item
water	21:12	0:0	6	p_parent
op	21:20	0:0	6	->
water	21:22	0:0	6	pp_children
op	21:33	0:0	6	[
water	21:34	0:0	6	i
op	21:35	0:0	6	]
op	21:37	0:0	6	==
water	21:40	0:0	6	p_item
stmts	22:8	40:8	5	
water	22:8	0:0	6	{
if	23:12	35:12	6	(i - 1 < 0)
cond	23:16	23:22	7	i - 1 < 0
water	23:16	0:0	8	i
op	23:17	0:0	8	-
water	23:18	0:0	8	1
op	23:20	0:0	8	<
water	23:22	0:0	8	0
stmts	24:12	35:12	7	
water	24:12	0:0	8	{
call	26:16	28:55	8	PL_DEBUG2
arg	26:27	27:54	9	"current item is the first of its node,""looking for uncle from %s"
water	26:27	0:0	10	"current item is the first of its node,"
water	27:27	0:0	10	"looking for uncle from %s"
arg	28:27	28:55	9	p_parent->p_input->psz_name
water	28:27	0:0	10	p_parent
op	28:35	0:0	10	->
water	28:37	0:0	10	p_input
op	28:44	0:0	10	->
water	28:46	0:0	10	psz_name
water	28:56	0:0	8	;
if	29:16	33:16	8	(p_parent == p_root)
cond	29:20	29:32	9	p_parent == p_root
water	29:20	0:0	10	p_parent
op	29:29	0:0	10	==
water	29:32	0:0	10	p_root
stmts	30:16	33:16	9	
water	30:16	0:0	10	{
call	31:20	31:49	10	PL_DEBUG2
arg	31:31	31:49	11	"already at root"
water	31:31	0:0	12	"already at root"
water	31:50	0:0	10	;
return	32:20	32:31	10	NULL
water	32:27	0:0	11	NULL
water	33:16	0:0	10	}
return	34:16	34:65	8	GetPrevUncle(p_playlist,p_item,p_root)
call	34:23	34:64	9	GetPrevUncle
arg	34:37	34:47	10	p_playlist
water	34:37	0:0	11	p_playlist
arg	34:49	34:55	10	p_item
water	34:49	0:0	11	p_item
arg	34:57	34:64	10	p_root
water	34:57	0:0	11	p_root
water	35:12	0:0	8	}
else	36:12	39:12	6
stmts	37:12	39:12	7	
water	37:12	0:0	8	{
return	38:16	38:49	8	p_parent->pp_children[i-1]
water	38:23	0:0	9	p_parent
op	38:31	0:0	9	->
water	38:33	0:0	9	pp_children
op	38:44	0:0	9	[
water	38:45	0:0	9	i
op	38:46	0:0	9	-
water	38:47	0:0	9	1
op	38:48	0:0	9	]
water	39:12	0:0	8	}
water	40:8	0:0	6	}
water	41:4	0:0	4	}
return	42:4	42:15	2	NULL
water	42:11	0:0	3	NULL

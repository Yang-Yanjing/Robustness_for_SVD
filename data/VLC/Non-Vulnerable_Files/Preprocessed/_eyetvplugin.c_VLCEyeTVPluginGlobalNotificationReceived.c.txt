func	2:0	66:0	0	void	VLCEyeTVPluginGlobalNotificationReceived
params	2:45	0:0	1	
param	2:47	2:77	2	CFNotificationCenterRef	center
param	3:46	3:60	2	void *	observer
param	4:46	4:62	2	CFStringRef	name
param	5:46	5:64	2	const void *	object
param	6:46	6:71	2	CFDictionaryRef	userInfo
stmnts	9:4	65:4	1	
if	9:4	26:4	2	(CFStringCompare (name ,CFSTR ("VLCOSXGUIInit" ) ,0 ) == kCFCompareEqualTo)
cond	9:8	9:63	3	CFStringCompare (name ,CFSTR ("VLCOSXGUIInit" ) ,0 ) == kCFCompareEqualTo
call	9:8	9:58	4	CFStringCompare
arg	9:25	9:29	5	name
water	9:25	0:0	6	name
arg	9:31	9:55	5	CFSTR("VLCOSXGUIInit")
call	9:31	9:54	6	CFSTR
arg	9:38	9:54	7	"VLCOSXGUIInit"
water	9:38	0:0	8	"VLCOSXGUIInit"
arg	9:57	9:58	5	0
water	9:57	0:0	6	0
op	9:60	0:0	4	==
water	9:63	0:0	4	kCFCompareEqualTo
stmts	10:4	26:4	3	
water	10:4	0:0	4	{
call	12:8	16:51	4	CFNotificationCenterPostNotification
arg	12:46	12:89	5	CFNotificationCenterGetDistributedCenter()
call	12:46	12:88	6	CFNotificationCenterGetDistributedCenter
arg	13:46	13:65	5	CFSTR("PluginInit")
call	13:46	13:64	6	CFSTR
arg	13:52	13:64	7	"PluginInit"
water	13:52	0:0	8	"PluginInit"
arg	14:46	14:76	5	CFSTR(VLC_NOTIFICATION_OBJECT)
call	14:46	14:75	6	CFSTR
arg	14:52	14:75	7	VLC_NOTIFICATION_OBJECT
water	14:52	0:0	8	VLC_NOTIFICATION_OBJECT
arg	15:59	15:63	5	NULL
water	15:59	0:0	6	NULL
arg	16:46	16:51	5	TRUE
water	16:46	0:0	6	TRUE
water	16:52	0:0	4	;
if	17:8	25:8	4	(i_deviceCount > 0)
cond	17:12	17:28	5	i_deviceCount > 0
water	17:12	0:0	6	i_deviceCount
op	17:26	0:0	6	>
water	17:28	0:0	6	0
stmts	18:8	25:8	5	
water	18:8	0:0	6	{
call	20:12	24:55	6	CFNotificationCenterPostNotification
arg	20:50	20:93	7	CFNotificationCenterGetDistributedCenter()
call	20:50	20:92	8	CFNotificationCenterGetDistributedCenter
arg	21:50	21:70	7	CFSTR("DeviceAdded")
call	21:50	21:69	8	CFSTR
arg	21:56	21:69	9	"DeviceAdded"
water	21:56	0:0	10	"DeviceAdded"
arg	22:50	22:80	7	CFSTR(VLC_NOTIFICATION_OBJECT)
call	22:50	22:79	8	CFSTR
arg	22:56	22:79	9	VLC_NOTIFICATION_OBJECT
water	22:56	0:0	10	VLC_NOTIFICATION_OBJECT
arg	23:63	23:67	7	NULL
water	23:63	0:0	8	NULL
arg	24:50	24:55	7	TRUE
water	24:50	0:0	8	TRUE
water	24:56	0:0	6	;
water	25:8	0:0	6	}
water	26:4	0:0	4	}
if	28:4	55:4	2	(CFStringCompare (name ,CFSTR ("VLCAccessStartDataSending" ) ,0 ) == kCFCompareEqualTo)
cond	28:8	28:75	3	CFStringCompare (name ,CFSTR ("VLCAccessStartDataSending" ) ,0 ) == kCFCompareEqualTo
call	28:8	28:70	4	CFStringCompare
arg	28:25	28:29	5	name
water	28:25	0:0	6	name
arg	28:31	28:67	5	CFSTR("VLCAccessStartDataSending")
call	28:31	28:66	6	CFSTR
arg	28:38	28:66	7	"VLCAccessStartDataSending"
water	28:38	0:0	8	"VLCAccessStartDataSending"
arg	28:69	28:70	5	0
water	28:69	0:0	6	0
op	28:72	0:0	4	==
water	28:75	0:0	4	kCFCompareEqualTo
stmts	29:4	55:4	3	
water	29:4	0:0	4	{
if	30:8	54:8	4	(i_vlcSock == - 1)
cond	30:12	30:26	5	i_vlcSock == - 1
water	30:12	0:0	6	i_vlcSock
op	30:22	0:0	6	==
op	30:25	0:0	6	-
water	30:26	0:0	6	1
stmts	31:8	54:8	5	
water	31:8	0:0	6	{
decl	32:12	32:24	6	int	peerSock
water	34:12	0:0	6	peerSock
op	34:21	0:0	6	=
call	34:23	34:53	6	socket
arg	34:30	34:37	7	AF_UNIX
water	34:30	0:0	8	AF_UNIX
arg	34:39	34:50	7	SOCK_STREAM
water	34:39	0:0	8	SOCK_STREAM
arg	34:52	34:53	7	0
water	34:52	0:0	8	0
water	34:54	0:0	6	;
if	35:12	51:12	6	(peerSock != - 1)
cond	35:16	35:29	7	peerSock != - 1
water	35:16	0:0	8	peerSock
op	35:25	0:0	8	!=
op	35:28	0:0	8	-
water	35:29	0:0	8	1
stmts	36:12	51:12	7	
water	36:12	0:0	8	{
decl	37:16	37:43	8	struct sockaddr_un	peerAddr
call	39:16	39:53	8	memset
arg	39:23	39:32	9	&peerAddr
op	39:23	0:0	10	&
water	39:24	0:0	10	peerAddr
arg	39:34	39:35	9	0
water	39:34	0:0	10	0
arg	39:37	39:53	9	sizeof(peerAddr)
op	39:37	0:0	10	sizeof
water	39:43	0:0	10	(
water	39:44	0:0	10	peerAddr
water	39:52	0:0	10	)
water	39:54	0:0	8	;
water	40:16	0:0	8	peerAddr
op	40:24	0:0	8	.
water	40:25	0:0	8	sun_family
op	40:36	0:0	8	=
water	40:38	0:0	8	AF_UNIX
water	40:45	0:0	8	;
call	41:16	41:96	8	strncpy
arg	41:24	41:41	9	peerAddr.sun_path
water	41:24	0:0	10	peerAddr
op	41:32	0:0	10	.
water	41:33	0:0	10	sun_path
arg	41:43	41:67	9	"/tmp/.vlc-eyetv-bridge"
water	41:43	0:0	10	"/tmp/.vlc-eyetv-bridge"
arg	41:69	41:96	9	sizeof(peerAddr.sun_path)-1
op	41:69	0:0	10	sizeof
water	41:75	0:0	10	(
water	41:76	0:0	10	peerAddr
op	41:84	0:0	10	.
water	41:85	0:0	10	sun_path
water	41:93	0:0	10	)
op	41:94	0:0	10	-
water	41:95	0:0	10	1
water	41:97	0:0	8	;
call	43:16	43:53	8	printf
arg	43:23	43:53	9	"data connect in progess...\n"
water	43:23	0:0	10	"data connect in progess...\n"
water	43:54	0:0	8	;
if	44:16	48:16	8	(connect (peerSock ,( struct sockaddr * ) & peerAddr ,sizeof ( struct sockaddr_un ) ) != - 1)
cond	44:20	44:100	9	connect (peerSock ,( struct sockaddr * ) & peerAddr ,sizeof ( struct sockaddr_un ) ) != - 1
call	44:20	44:94	10	connect
arg	44:28	44:36	11	peerSock
water	44:28	0:0	12	peerSock
arg	44:38	44:66	11	(structsockaddr*)&peerAddr
water	44:38	0:0	12	(
water	44:39	0:0	12	struct
water	44:46	0:0	12	sockaddr
op	44:55	0:0	12	*
water	44:56	0:0	12	)
op	44:57	0:0	12	&
water	44:58	0:0	12	peerAddr
arg	44:68	44:94	11	sizeof(structsockaddr_un)
op	44:68	0:0	12	sizeof
water	44:74	0:0	12	(
water	44:75	0:0	12	struct
water	44:82	0:0	12	sockaddr_un
water	44:93	0:0	12	)
op	44:96	0:0	10	!=
op	44:99	0:0	10	-
water	44:100	0:0	10	1
stmts	45:16	48:16	9	
water	45:16	0:0	10	{
call	46:20	46:55	10	printf
arg	46:27	46:55	11	"data sending switched on\n"
water	46:27	0:0	12	"data sending switched on\n"
water	46:56	0:0	10	;
water	47:20	0:0	10	i_vlcSock
op	47:30	0:0	10	=
water	47:32	0:0	10	peerSock
water	47:40	0:0	10	;
water	48:16	0:0	10	}
else	49:16	50:77	8
stmts	50:20	50:77	9	
call	50:20	50:76	10	printf
arg	50:27	50:68	11	"connect data socket failed (errno=%d)\n"
water	50:27	0:0	12	"connect data socket failed (errno=%d)\n"
arg	50:70	50:76	11	errno
water	50:70	0:0	12	errno
water	50:77	0:0	10	;
water	51:12	0:0	8	}
else	52:12	53:72	6
stmts	53:16	53:72	7	
call	53:16	53:71	8	printf
arg	53:23	53:63	9	"create data socket failed (errno=%d)\n"
water	53:23	0:0	10	"create data socket failed (errno=%d)\n"
arg	53:65	53:71	9	errno
water	53:65	0:0	10	errno
water	53:72	0:0	8	;
water	54:8	0:0	6	}
water	55:4	0:0	4	}
if	57:4	65:4	2	(CFStringCompare (name ,CFSTR ("VLCAccessStopDataSending" ) ,0 ) == kCFCompareEqualTo)
cond	57:8	57:74	3	CFStringCompare (name ,CFSTR ("VLCAccessStopDataSending" ) ,0 ) == kCFCompareEqualTo
call	57:8	57:69	4	CFStringCompare
arg	57:25	57:29	5	name
water	57:25	0:0	6	name
arg	57:31	57:66	5	CFSTR("VLCAccessStopDataSending")
call	57:31	57:65	6	CFSTR
arg	57:38	57:65	7	"VLCAccessStopDataSending"
water	57:38	0:0	8	"VLCAccessStopDataSending"
arg	57:68	57:69	5	0
water	57:68	0:0	6	0
op	57:71	0:0	4	==
water	57:74	0:0	4	kCFCompareEqualTo
stmts	58:4	65:4	3	
water	58:4	0:0	4	{
if	59:8	64:8	4	(i_vlcSock != - 1)
cond	59:12	59:26	5	i_vlcSock != - 1
water	59:12	0:0	6	i_vlcSock
op	59:22	0:0	6	!=
op	59:25	0:0	6	-
water	59:26	0:0	6	1
stmts	60:8	64:8	5	
water	60:8	0:0	6	{
call	61:12	61:29	6	close
arg	61:19	61:29	7	i_vlcSock
water	61:19	0:0	8	i_vlcSock
water	61:30	0:0	6	;
water	62:12	0:0	6	i_vlcSock
op	62:22	0:0	6	=
op	62:24	0:0	6	-
water	62:25	0:0	6	1
water	62:26	0:0	6	;
call	63:12	63:50	6	printf
arg	63:20	63:50	7	"data sending switched off\n"
water	63:20	0:0	8	"data sending switched off\n"
water	63:51	0:0	6	;
water	64:8	0:0	6	}
water	65:4	0:0	4	}

func	2:0	69:0	0	static int	DrawStats
params	2:20	0:0	1	
param	2:21	2:40	2	intf_thread_t *	intf
stmnts	0:0	68:12	1	
decl	4:4	4:33	2	intf_sys_t	*sys
op	4:20	0:0	2	=
water	4:22	0:0	2	intf
op	4:26	0:0	2	->
water	4:28	0:0	2	p_sys
decl	5:4	5:42	2	input_thread_t	*p_input
op	5:28	0:0	2	=
water	5:30	0:0	2	sys
op	5:33	0:0	2	->
water	5:35	0:0	2	p_input
decl	6:4	6:22	2	input_item_t	*item
decl	7:4	7:26	2	input_stats_t	*p_stats
decl	8:4	8:39	2	int	l
op	8:10	0:0	2	=
water	8:12	0:0	2	0
water	8:13	0:0	2	,
decl	8:4	8:39	2	int	i_audio
op	8:23	0:0	2	=
water	8:25	0:0	2	0
water	8:26	0:0	2	,
decl	8:4	8:39	2	int	i_video
op	8:36	0:0	2	=
water	8:38	0:0	2	0
if	9:4	10:16	2	(! p_input)
cond	9:8	9:9	3	! p_input
op	9:8	0:0	4	!
water	9:9	0:0	4	p_input
stmts	10:8	10:16	3	
return	10:8	10:16	4	0
water	10:15	0:0	5	0
water	11:4	0:0	2	item
op	11:9	0:0	2	=
call	11:11	11:32	2	input_GetItem
arg	11:25	11:32	3	p_input
water	11:25	0:0	4	p_input
water	11:33	0:0	2	;
call	12:4	12:15	2	assert
arg	12:11	12:15	3	item
water	12:11	0:0	4	item
water	12:16	0:0	2	;
call	13:4	13:30	2	vlc_mutex_lock
arg	13:19	13:30	3	&item->lock
op	13:19	0:0	4	&
water	13:20	0:0	4	item
op	13:24	0:0	4	->
water	13:26	0:0	4	lock
water	13:31	0:0	2	;
water	14:4	0:0	2	p_stats
op	14:12	0:0	2	=
water	14:14	0:0	2	item
op	14:18	0:0	2	->
water	14:20	0:0	2	p_stats
water	14:27	0:0	2	;
call	15:4	15:33	2	vlc_mutex_lock
arg	15:19	15:33	3	&p_stats->lock
op	15:19	0:0	4	&
water	15:20	0:0	4	p_stats
op	15:27	0:0	4	->
water	15:29	0:0	4	lock
water	15:34	0:0	2	;
for	16:4	19:4	2	( int i = 0 ;i < item -> i_es;i ++)
forinit	0:0	16:18	3	 int i = 0 ;
decl	16:9	16:18	4	int	i
op	16:15	0:0	4	=
water	16:17	0:0	4	0
cond	16:20	16:30	3	i < item -> i_es
water	16:20	0:0	4	i
op	16:22	0:0	4	<
water	16:24	0:0	4	item
op	16:28	0:0	4	->
water	16:30	0:0	4	i_es
forexpr	16:37	16:38	3	i ++
water	16:37	0:0	4	i
op	16:38	0:0	4	++
stmts	16:42	19:4	3	
water	16:42	0:0	4	{
water	17:8	0:0	4	i_audio
op	17:16	0:0	4	+=
water	17:19	0:0	4	(
water	17:20	0:0	4	item
op	17:24	0:0	4	->
water	17:26	0:0	4	es
op	17:28	0:0	4	[
water	17:29	0:0	4	i
op	17:30	0:0	4	]
op	17:31	0:0	4	->
water	17:33	0:0	4	i_cat
op	17:39	0:0	4	==
water	17:42	0:0	4	AUDIO_ES
water	17:50	0:0	4	)
water	17:51	0:0	4	;
water	18:8	0:0	4	i_video
op	18:16	0:0	4	+=
water	18:19	0:0	4	(
water	18:20	0:0	4	item
op	18:24	0:0	4	->
water	18:26	0:0	4	es
op	18:28	0:0	4	[
water	18:29	0:0	4	i
op	18:30	0:0	4	]
op	18:31	0:0	4	->
water	18:33	0:0	4	i_cat
op	18:39	0:0	4	==
water	18:42	0:0	4	VIDEO_ES
water	18:50	0:0	4	)
water	18:51	0:0	4	;
water	19:4	0:0	4	}
if	21:4	21:47	2	(sys -> color)
cond	21:8	21:13	3	sys -> color
water	21:8	0:0	4	sys
op	21:11	0:0	4	->
water	21:13	0:0	4	color
stmts	21:20	21:47	3	
call	21:20	21:46	4	color_set
arg	21:30	21:40	5	C_CATEGORY
water	21:30	0:0	6	C_CATEGORY
arg	21:42	21:46	5	NULL
water	21:42	0:0	6	NULL
water	21:47	0:0	4	;
call	22:4	22:44	2	MainBoxWrite
arg	22:17	22:20	3	sys
water	22:17	0:0	4	sys
arg	22:22	22:25	3	l++
water	22:22	0:0	4	l
op	22:23	0:0	4	++
arg	22:27	22:44	3	_("+-[Incoming]")
call	22:27	22:43	4	_
arg	22:29	22:43	5	"+-[Incoming]"
water	22:29	0:0	6	"+-[Incoming]"
water	22:45	0:0	2	;
if	23:4	23:46	2	(sys -> color)
cond	23:8	23:13	3	sys -> color
water	23:8	0:0	4	sys
op	23:11	0:0	4	->
water	23:13	0:0	4	color
stmts	23:20	23:46	3	
call	23:20	23:45	4	color_set
arg	23:30	23:39	5	C_DEFAULT
water	23:30	0:0	6	C_DEFAULT
arg	23:41	23:45	5	NULL
water	23:41	0:0	6	NULL
water	23:46	0:0	4	;
call	24:4	25:47	2	MainBoxWrite
arg	24:17	24:20	3	sys
water	24:17	0:0	4	sys
arg	24:22	24:25	3	l++
water	24:22	0:0	4	l
op	24:23	0:0	4	++
arg	24:27	24:62	3	_("| input bytes read : %8.0f KiB")
call	24:27	24:61	4	_
arg	24:29	24:61	5	"| input bytes read : %8.0f KiB"
water	24:29	0:0	6	"| input bytes read : %8.0f KiB"
arg	25:12	25:47	3	(float)(p_stats->i_read_bytes)/1024
call	25:12	25:41	4	(float)
arg	25:20	25:41	5	p_stats->i_read_bytes
water	25:20	0:0	6	p_stats
op	25:27	0:0	6	->
water	25:29	0:0	6	i_read_bytes
op	25:42	0:0	4	/
water	25:43	0:0	4	1024
water	25:48	0:0	2	;
call	26:4	27:41	2	MainBoxWrite
arg	26:17	26:20	3	sys
water	26:17	0:0	4	sys
arg	26:22	26:25	3	l++
water	26:22	0:0	4	l
op	26:23	0:0	4	++
arg	26:27	26:65	3	_("| input bitrate    :   %6.0f kb/s")
call	26:27	26:64	4	_
arg	26:29	26:64	5	"| input bitrate    :   %6.0f kb/s"
water	26:29	0:0	6	"| input bitrate    :   %6.0f kb/s"
arg	27:12	27:41	3	p_stats->f_input_bitrate*8000
water	27:12	0:0	4	p_stats
op	27:19	0:0	4	->
water	27:21	0:0	4	f_input_bitrate
op	27:36	0:0	4	*
water	27:37	0:0	4	8000
water	27:42	0:0	2	;
call	28:4	29:53	2	MainBoxWrite
arg	28:17	28:20	3	sys
water	28:17	0:0	4	sys
arg	28:22	28:25	3	l++
water	28:22	0:0	4	l
op	28:23	0:0	4	++
arg	28:27	28:62	3	_("| demux bytes read : %8.0f KiB")
call	28:27	28:61	4	_
arg	28:29	28:61	5	"| demux bytes read : %8.0f KiB"
water	28:29	0:0	6	"| demux bytes read : %8.0f KiB"
arg	29:12	29:53	3	(float)(p_stats->i_demux_read_bytes)/1024
call	29:12	29:47	4	(float)
arg	29:20	29:47	5	p_stats->i_demux_read_bytes
water	29:20	0:0	6	p_stats
op	29:27	0:0	6	->
water	29:29	0:0	6	i_demux_read_bytes
op	29:48	0:0	4	/
water	29:49	0:0	4	1024
water	29:54	0:0	2	;
call	30:4	31:41	2	MainBoxWrite
arg	30:17	30:20	3	sys
water	30:17	0:0	4	sys
arg	30:22	30:25	3	l++
water	30:22	0:0	4	l
op	30:23	0:0	4	++
arg	30:27	30:65	3	_("| demux bitrate    :   %6.0f kb/s")
call	30:27	30:64	4	_
arg	30:29	30:64	5	"| demux bitrate    :   %6.0f kb/s"
water	30:29	0:0	6	"| demux bitrate    :   %6.0f kb/s"
arg	31:12	31:41	3	p_stats->f_demux_bitrate*8000
water	31:12	0:0	4	p_stats
op	31:19	0:0	4	->
water	31:21	0:0	4	f_demux_bitrate
op	31:36	0:0	4	*
water	31:37	0:0	4	8000
water	31:42	0:0	2	;
if	33:4	43:4	2	(i_video)
cond	33:8	33:8	3	i_video
water	33:8	0:0	4	i_video
stmts	33:17	43:4	3	
water	33:17	0:0	4	{
if	34:8	34:51	4	(sys -> color)
cond	34:12	34:17	5	sys -> color
water	34:12	0:0	6	sys
op	34:15	0:0	6	->
water	34:17	0:0	6	color
stmts	34:24	34:51	5	
call	34:24	34:50	6	color_set
arg	34:34	34:44	7	C_CATEGORY
water	34:34	0:0	8	C_CATEGORY
arg	34:46	34:50	7	NULL
water	34:46	0:0	8	NULL
water	34:51	0:0	6	;
call	35:8	35:54	4	MainBoxWrite
arg	35:21	35:24	5	sys
water	35:21	0:0	6	sys
arg	35:26	35:29	5	l++
water	35:26	0:0	6	l
op	35:27	0:0	6	++
arg	35:31	35:54	5	_("+-[Video Decoding]")
call	35:31	35:53	6	_
arg	35:33	35:53	7	"+-[Video Decoding]"
water	35:33	0:0	8	"+-[Video Decoding]"
water	35:55	0:0	4	;
if	36:8	36:50	4	(sys -> color)
cond	36:12	36:17	5	sys -> color
water	36:12	0:0	6	sys
op	36:15	0:0	6	->
water	36:17	0:0	6	color
stmts	36:24	36:50	5	
call	36:24	36:49	6	color_set
arg	36:34	36:43	7	C_DEFAULT
water	36:34	0:0	8	C_DEFAULT
arg	36:45	36:49	7	NULL
water	36:45	0:0	8	NULL
water	36:50	0:0	6	;
call	37:8	38:40	4	MainBoxWrite
arg	37:21	37:24	5	sys
water	37:21	0:0	6	sys
arg	37:26	37:29	5	l++
water	37:26	0:0	6	l
op	37:27	0:0	6	++
arg	37:31	37:68	5	_("| video decoded    :    %5"PRIi64)
call	37:31	37:67	6	_
arg	37:33	37:67	7	"| video decoded    :    %5"PRIi64
water	37:33	0:0	8	"| video decoded    :    %5"
water	37:61	0:0	8	PRIi64
arg	38:16	38:40	5	p_stats->i_decoded_video
water	38:16	0:0	6	p_stats
op	38:23	0:0	6	->
water	38:25	0:0	6	i_decoded_video
water	38:41	0:0	4	;
call	39:8	40:45	4	MainBoxWrite
arg	39:21	39:24	5	sys
water	39:21	0:0	6	sys
arg	39:26	39:29	5	l++
water	39:26	0:0	6	l
op	39:27	0:0	6	++
arg	39:31	39:68	5	_("| frames displayed :    %5"PRIi64)
call	39:31	39:67	6	_
arg	39:33	39:67	7	"| frames displayed :    %5"PRIi64
water	39:33	0:0	8	"| frames displayed :    %5"
water	39:61	0:0	8	PRIi64
arg	40:16	40:45	5	p_stats->i_displayed_pictures
water	40:16	0:0	6	p_stats
op	40:23	0:0	6	->
water	40:25	0:0	6	i_displayed_pictures
water	40:46	0:0	4	;
call	41:8	42:40	4	MainBoxWrite
arg	41:21	41:24	5	sys
water	41:21	0:0	6	sys
arg	41:26	41:29	5	l++
water	41:26	0:0	6	l
op	41:27	0:0	6	++
arg	41:31	41:68	5	_("| frames lost      :    %5"PRIi64)
call	41:31	41:67	6	_
arg	41:33	41:67	7	"| frames lost      :    %5"PRIi64
water	41:33	0:0	8	"| frames lost      :    %5"
water	41:61	0:0	8	PRIi64
arg	42:16	42:40	5	p_stats->i_lost_pictures
water	42:16	0:0	6	p_stats
op	42:23	0:0	6	->
water	42:25	0:0	6	i_lost_pictures
water	42:41	0:0	4	;
water	43:4	0:0	4	}
if	45:4	55:4	2	(i_audio)
cond	45:8	45:8	3	i_audio
water	45:8	0:0	4	i_audio
stmts	45:17	55:4	3	
water	45:17	0:0	4	{
if	46:8	46:51	4	(sys -> color)
cond	46:12	46:17	5	sys -> color
water	46:12	0:0	6	sys
op	46:15	0:0	6	->
water	46:17	0:0	6	color
stmts	46:24	46:51	5	
call	46:24	46:50	6	color_set
arg	46:34	46:44	7	C_CATEGORY
water	46:34	0:0	8	C_CATEGORY
arg	46:46	46:50	7	NULL
water	46:46	0:0	8	NULL
water	46:51	0:0	6	;
call	47:8	47:54	4	MainBoxWrite
arg	47:21	47:24	5	sys
water	47:21	0:0	6	sys
arg	47:26	47:29	5	l++
water	47:26	0:0	6	l
op	47:27	0:0	6	++
arg	47:31	47:54	5	_("+-[Audio Decoding]")
call	47:31	47:53	6	_
arg	47:33	47:53	7	"+-[Audio Decoding]"
water	47:33	0:0	8	"+-[Audio Decoding]"
water	47:55	0:0	4	;
if	48:8	48:50	4	(sys -> color)
cond	48:12	48:17	5	sys -> color
water	48:12	0:0	6	sys
op	48:15	0:0	6	->
water	48:17	0:0	6	color
stmts	48:24	48:50	5	
call	48:24	48:49	6	color_set
arg	48:34	48:43	7	C_DEFAULT
water	48:34	0:0	8	C_DEFAULT
arg	48:45	48:49	7	NULL
water	48:45	0:0	8	NULL
water	48:50	0:0	6	;
call	49:8	50:40	4	MainBoxWrite
arg	49:21	49:24	5	sys
water	49:21	0:0	6	sys
arg	49:26	49:29	5	l++
water	49:26	0:0	6	l
op	49:27	0:0	6	++
arg	49:31	49:68	5	_("| audio decoded    :    %5"PRIi64)
call	49:31	49:67	6	_
arg	49:33	49:67	7	"| audio decoded    :    %5"PRIi64
water	49:33	0:0	8	"| audio decoded    :    %5"
water	49:61	0:0	8	PRIi64
arg	50:16	50:40	5	p_stats->i_decoded_audio
water	50:16	0:0	6	p_stats
op	50:23	0:0	6	->
water	50:25	0:0	6	i_decoded_audio
water	50:41	0:0	4	;
call	51:8	52:42	4	MainBoxWrite
arg	51:21	51:24	5	sys
water	51:21	0:0	6	sys
arg	51:26	51:29	5	l++
water	51:26	0:0	6	l
op	51:27	0:0	6	++
arg	51:31	51:68	5	_("| buffers played   :    %5"PRIi64)
call	51:31	51:67	6	_
arg	51:33	51:67	7	"| buffers played   :    %5"PRIi64
water	51:33	0:0	8	"| buffers played   :    %5"
water	51:61	0:0	8	PRIi64
arg	52:16	52:42	5	p_stats->i_played_abuffers
water	52:16	0:0	6	p_stats
op	52:23	0:0	6	->
water	52:25	0:0	6	i_played_abuffers
water	52:43	0:0	4	;
call	53:8	54:40	4	MainBoxWrite
arg	53:21	53:24	5	sys
water	53:21	0:0	6	sys
arg	53:26	53:29	5	l++
water	53:26	0:0	6	l
op	53:27	0:0	6	++
arg	53:31	53:68	5	_("| buffers lost     :    %5"PRIi64)
call	53:31	53:67	6	_
arg	53:33	53:67	7	"| buffers lost     :    %5"PRIi64
water	53:33	0:0	8	"| buffers lost     :    %5"
water	53:61	0:0	8	PRIi64
arg	54:16	54:40	5	p_stats->i_lost_abuffers
water	54:16	0:0	6	p_stats
op	54:23	0:0	6	->
water	54:25	0:0	6	i_lost_abuffers
water	54:41	0:0	4	;
water	55:4	0:0	4	}
if	57:4	57:47	2	(sys -> color)
cond	57:8	57:13	3	sys -> color
water	57:8	0:0	4	sys
op	57:11	0:0	4	->
water	57:13	0:0	4	color
stmts	57:20	57:47	3	
call	57:20	57:46	4	color_set
arg	57:30	57:40	5	C_CATEGORY
water	57:30	0:0	6	C_CATEGORY
arg	57:42	57:46	5	NULL
water	57:42	0:0	6	NULL
water	57:47	0:0	4	;
call	58:4	58:45	2	MainBoxWrite
arg	58:17	58:20	3	sys
water	58:17	0:0	4	sys
arg	58:22	58:25	3	l++
water	58:22	0:0	4	l
op	58:23	0:0	4	++
arg	58:27	58:45	3	_("+-[Streaming]")
call	58:27	58:44	4	_
arg	58:29	58:44	5	"+-[Streaming]"
water	58:29	0:0	6	"+-[Streaming]"
water	58:46	0:0	2	;
if	59:4	59:46	2	(sys -> color)
cond	59:8	59:13	3	sys -> color
water	59:8	0:0	4	sys
op	59:11	0:0	4	->
water	59:13	0:0	4	color
stmts	59:20	59:46	3	
call	59:20	59:45	4	color_set
arg	59:30	59:39	5	C_DEFAULT
water	59:30	0:0	6	C_DEFAULT
arg	59:41	59:45	5	NULL
water	59:41	0:0	6	NULL
water	59:46	0:0	4	;
call	60:4	60:89	2	MainBoxWrite
arg	60:17	60:20	3	sys
water	60:17	0:0	4	sys
arg	60:22	60:25	3	l++
water	60:22	0:0	4	l
op	60:23	0:0	4	++
arg	60:27	60:64	3	_("| packets sent     :    %5"PRIi64)
call	60:27	60:63	4	_
arg	60:29	60:63	5	"| packets sent     :    %5"PRIi64
water	60:29	0:0	6	"| packets sent     :    %5"
water	60:57	0:0	6	PRIi64
arg	60:66	60:89	3	p_stats->i_sent_packets
water	60:66	0:0	4	p_stats
op	60:73	0:0	4	->
water	60:75	0:0	4	i_sent_packets
water	60:90	0:0	2	;
call	61:4	62:47	2	MainBoxWrite
arg	61:17	61:20	3	sys
water	61:17	0:0	4	sys
arg	61:22	61:25	3	l++
water	61:22	0:0	4	l
op	61:23	0:0	4	++
arg	61:27	61:62	3	_("| bytes sent       : %8.0f KiB")
call	61:27	61:61	4	_
arg	61:29	61:61	5	"| bytes sent       : %8.0f KiB"
water	61:29	0:0	6	"| bytes sent       : %8.0f KiB"
arg	62:12	62:47	3	(float)(p_stats->i_sent_bytes)/1025
call	62:12	62:41	4	(float)
arg	62:20	62:41	5	p_stats->i_sent_bytes
water	62:20	0:0	6	p_stats
op	62:27	0:0	6	->
water	62:29	0:0	6	i_sent_bytes
op	62:42	0:0	4	/
water	62:43	0:0	4	1025
water	62:48	0:0	2	;
call	63:4	64:40	2	MainBoxWrite
arg	63:17	63:20	3	sys
water	63:17	0:0	4	sys
arg	63:22	63:25	3	l++
water	63:22	0:0	4	l
op	63:23	0:0	4	++
arg	63:27	63:65	3	_("| sending bitrate  :   %6.0f kb/s")
call	63:27	63:64	4	_
arg	63:29	63:64	5	"| sending bitrate  :   %6.0f kb/s"
water	63:29	0:0	6	"| sending bitrate  :   %6.0f kb/s"
arg	64:12	64:40	3	p_stats->f_send_bitrate*8000
water	64:12	0:0	4	p_stats
op	64:19	0:0	4	->
water	64:21	0:0	4	f_send_bitrate
op	64:35	0:0	4	*
water	64:36	0:0	4	8000
water	64:41	0:0	2	;
if	65:4	65:46	2	(sys -> color)
cond	65:8	65:13	3	sys -> color
water	65:8	0:0	4	sys
op	65:11	0:0	4	->
water	65:13	0:0	4	color
stmts	65:20	65:46	3	
call	65:20	65:45	4	color_set
arg	65:30	65:39	5	C_DEFAULT
water	65:30	0:0	6	C_DEFAULT
arg	65:41	65:45	5	NULL
water	65:41	0:0	6	NULL
water	65:46	0:0	4	;
call	66:4	66:35	2	vlc_mutex_unlock
arg	66:21	66:35	3	&p_stats->lock
op	66:21	0:0	4	&
water	66:22	0:0	4	p_stats
op	66:29	0:0	4	->
water	66:31	0:0	4	lock
water	66:36	0:0	2	;
call	67:4	67:32	2	vlc_mutex_unlock
arg	67:21	67:32	3	&item->lock
op	67:21	0:0	4	&
water	67:22	0:0	4	item
op	67:26	0:0	4	->
water	67:28	0:0	4	lock
water	67:33	0:0	2	;
return	68:4	68:12	2	l
water	68:11	0:0	3	l

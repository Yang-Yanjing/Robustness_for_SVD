func	2:0	186:0	0	static void	GetPMT
params	2:18	0:0	1	
param	2:20	2:37	2	sout_mux_t *	p_mux
param	2:39	2:62	2	sout_buffer_chain_t *	c
stmnts	0:0	185:4	1	
decl	4:4	4:40	2	sout_mux_sys_t	*p_sys
op	4:26	0:0	2	=
water	4:28	0:0	2	p_mux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
if	5:4	10:4	2	(p_sys -> dvbpmt == NULL)
cond	5:8	5:25	3	p_sys -> dvbpmt == NULL
water	5:8	0:0	4	p_sys
op	5:13	0:0	4	->
water	5:15	0:0	4	dvbpmt
op	5:22	0:0	4	==
water	5:25	0:0	4	NULL
stmts	6:4	10:4	3	
water	6:4	0:0	4	{
water	7:8	0:0	4	p_sys
op	7:13	0:0	4	->
water	7:15	0:0	4	dvbpmt
op	7:22	0:0	4	=
call	7:24	7:72	4	malloc
arg	7:32	7:72	5	p_sys->i_num_pmt*sizeof(dvbpsi_pmt_t)
water	7:32	0:0	6	p_sys
op	7:37	0:0	6	->
water	7:39	0:0	6	i_num_pmt
op	7:49	0:0	6	*
op	7:51	0:0	6	sizeof
water	7:57	0:0	6	(
water	7:58	0:0	6	dvbpsi_pmt_t
water	7:70	0:0	6	)
water	7:73	0:0	4	;
if	8:8	9:18	4	(p_sys -> dvbpmt == NULL)
cond	8:12	8:29	5	p_sys -> dvbpmt == NULL
water	8:12	0:0	6	p_sys
op	8:17	0:0	6	->
water	8:19	0:0	6	dvbpmt
op	8:26	0:0	6	==
water	8:29	0:0	6	NULL
stmts	9:12	9:18	5	
return	9:12	9:18	6	
water	10:4	0:0	4	}
decl	11:4	11:20	2	dvbpsi_sdt_t	sdt
if	12:4	13:67	2	(p_sys -> b_sdt)
cond	12:8	12:15	3	p_sys -> b_sdt
water	12:8	0:0	4	p_sys
op	12:13	0:0	4	->
water	12:15	0:0	4	b_sdt
stmts	13:8	13:67	3	
call	13:8	13:66	4	dvbpsi_InitSDT
arg	13:24	13:28	5	&sdt
op	13:24	0:0	6	&
water	13:25	0:0	6	sdt
arg	13:30	13:43	5	p_sys->i_tsid
water	13:30	0:0	6	p_sys
op	13:35	0:0	6	->
water	13:37	0:0	6	i_tsid
arg	13:45	13:46	5	1
water	13:45	0:0	6	1
arg	13:48	13:49	5	1
water	13:48	0:0	6	1
arg	13:51	13:66	5	p_sys->i_netid
water	13:51	0:0	6	p_sys
op	13:56	0:0	6	->
water	13:58	0:0	6	i_netid
water	13:67	0:0	4	;
for	14:4	51:4	2	(unsigned i = 0 ;i < p_sys -> i_num_pmt;i ++)
forinit	14:9	14:23	3	unsigned i = 0 ;
water	14:9	0:0	4	unsigned
water	14:18	0:0	4	i
op	14:20	0:0	4	=
water	14:22	0:0	4	0
water	14:23	0:0	4	;
cond	14:25	14:36	3	i < p_sys -> i_num_pmt
water	14:25	0:0	4	i
op	14:27	0:0	4	<
water	14:29	0:0	4	p_sys
op	14:34	0:0	4	->
water	14:36	0:0	4	i_num_pmt
forexpr	14:47	14:48	3	i ++
water	14:47	0:0	4	i
op	14:48	0:0	4	++
stmts	15:4	51:4	3	
water	15:4	0:0	4	{
call	16:8	20:41	4	dvbpsi_InitPMT
arg	16:24	16:41	5	&p_sys->dvbpmt[i]
op	16:24	0:0	6	&
water	16:25	0:0	6	p_sys
op	16:30	0:0	6	->
water	16:32	0:0	6	dvbpmt
op	16:38	0:0	6	[
water	16:39	0:0	6	i
op	16:40	0:0	6	]
arg	17:24	17:54	5	p_sys->i_pmt_program_number[i]
water	17:24	0:0	6	p_sys
op	17:29	0:0	6	->
water	17:31	0:0	6	i_pmt_program_number
op	17:51	0:0	6	[
water	17:52	0:0	6	i
op	17:53	0:0	6	]
arg	18:24	18:51	5	p_sys->i_pmt_version_number
water	18:24	0:0	6	p_sys
op	18:29	0:0	6	->
water	18:31	0:0	6	i_pmt_version_number
arg	19:24	19:25	5	1
water	19:24	0:0	6	1
arg	20:24	20:41	5	p_sys->i_pcr_pid
water	20:24	0:0	6	p_sys
op	20:29	0:0	6	->
water	20:31	0:0	6	i_pcr_pid
water	20:42	0:0	4	;
if	21:8	22:20	4	(! p_sys -> b_sdt)
cond	21:12	21:20	5	! p_sys -> b_sdt
op	21:12	0:0	6	!
water	21:13	0:0	6	p_sys
op	21:18	0:0	6	->
water	21:20	0:0	6	b_sdt
stmts	22:12	22:20	5	
continue	22:12	22:20	6	
decl	23:8	28:15	4	dvbpsi_sdt_service_t	*p_service
op	23:40	0:0	4	=
call	23:42	28:14	5	dvbpsi_SDTAddService
arg	23:64	23:68	6	&sdt
op	23:64	0:0	7	&
water	23:65	0:0	7	sdt
arg	24:12	24:42	6	p_sys->i_pmt_program_number[i]
water	24:12	0:0	7	p_sys
op	24:17	0:0	7	->
water	24:19	0:0	7	i_pmt_program_number
op	24:39	0:0	7	[
water	24:40	0:0	7	i
op	24:41	0:0	7	]
arg	25:12	25:13	6	0
water	25:12	0:0	7	0
arg	26:12	26:13	6	0
water	26:12	0:0	7	0
arg	27:12	27:13	6	4
water	27:12	0:0	7	4
arg	28:12	28:14	6	0
water	28:12	0:0	7	0
decl	29:8	29:72	4	const char	*psz_sdtprov
op	29:32	0:0	4	=
water	29:34	0:0	4	p_sys
op	29:39	0:0	4	->
water	29:41	0:0	4	sdt_descriptors
op	29:56	0:0	4	[
water	29:57	0:0	4	i
op	29:58	0:0	4	]
op	29:59	0:0	4	.
water	29:60	0:0	4	psz_provider
decl	30:8	30:76	4	const char	*psz_sdtserv
op	30:32	0:0	4	=
water	30:34	0:0	4	p_sys
op	30:39	0:0	4	->
water	30:41	0:0	4	sdt_descriptors
op	30:56	0:0	4	[
water	30:57	0:0	4	i
op	30:58	0:0	4	]
op	30:59	0:0	4	.
water	30:60	0:0	4	psz_service_name
if	31:8	32:20	4	(! psz_sdtprov || ! psz_sdtserv)
cond	31:12	31:29	5	! psz_sdtprov || ! psz_sdtserv
op	31:12	0:0	6	!
water	31:13	0:0	6	psz_sdtprov
op	31:25	0:0	6	||
op	31:28	0:0	6	!
water	31:29	0:0	6	psz_sdtserv
stmts	32:12	32:20	5	
continue	32:12	32:20	6	
decl	33:8	33:62	4	size_t	provlen
op	33:23	0:0	4	=
call	33:25	33:61	5	VLC_CLIP
arg	33:34	33:53	6	strlen(psz_sdtprov)
call	33:34	33:52	7	strlen
arg	33:41	33:52	8	psz_sdtprov
water	33:41	0:0	9	psz_sdtprov
arg	33:55	33:56	6	0
water	33:55	0:0	7	0
arg	33:58	33:61	6	255
water	33:58	0:0	7	255
decl	34:8	34:62	4	size_t	servlen
op	34:23	0:0	4	=
call	34:25	34:61	5	VLC_CLIP
arg	34:34	34:53	6	strlen(psz_sdtserv)
call	34:34	34:52	7	strlen
arg	34:41	34:52	8	psz_sdtserv
water	34:41	0:0	9	psz_sdtserv
arg	34:55	34:56	6	0
water	34:55	0:0	7	0
arg	34:58	34:61	6	255
water	34:58	0:0	7	255
decl	35:8	35:51	4	uint8_t	psz_sdt_desc[3+provlen+servlen]
water	36:8	0:0	4	psz_sdt_desc
op	36:20	0:0	4	[
water	36:21	0:0	4	0
op	36:22	0:0	4	]
op	36:24	0:0	4	=
water	36:26	0:0	4	0
water	36:27	0:0	4	x01
water	36:30	0:0	4	;
water	38:8	0:0	4	psz_sdt_desc
op	38:20	0:0	4	[
water	38:21	0:0	4	1
op	38:22	0:0	4	]
op	38:24	0:0	4	=
water	38:26	0:0	4	(
water	38:27	0:0	4	char
water	38:31	0:0	4	)
water	38:32	0:0	4	provlen
water	38:39	0:0	4	;
call	39:8	39:55	4	memcpy
arg	39:16	39:32	5	&psz_sdt_desc[2]
op	39:16	0:0	6	&
water	39:17	0:0	6	psz_sdt_desc
op	39:29	0:0	6	[
water	39:30	0:0	6	2
op	39:31	0:0	6	]
arg	39:34	39:45	5	psz_sdtprov
water	39:34	0:0	6	psz_sdtprov
arg	39:47	39:55	5	provlen
water	39:47	0:0	6	provlen
water	39:56	0:0	4	;
water	41:8	0:0	4	psz_sdt_desc
op	41:20	0:0	4	[
water	41:22	0:0	4	2
op	41:24	0:0	4	+
water	41:26	0:0	4	provlen
op	41:34	0:0	4	]
op	41:36	0:0	4	=
water	41:38	0:0	4	(
water	41:39	0:0	4	char
water	41:43	0:0	4	)
water	41:44	0:0	4	servlen
water	41:51	0:0	4	;
call	42:8	42:63	4	memcpy
arg	42:16	42:40	5	&psz_sdt_desc[3+provlen]
op	42:16	0:0	6	&
water	42:17	0:0	6	psz_sdt_desc
op	42:29	0:0	6	[
water	42:30	0:0	6	3
op	42:31	0:0	6	+
water	42:32	0:0	6	provlen
op	42:39	0:0	6	]
arg	42:42	42:53	5	psz_sdtserv
water	42:42	0:0	6	psz_sdtserv
arg	42:55	42:63	5	servlen
water	42:55	0:0	6	servlen
water	42:64	0:0	4	;
call	44:8	46:56	4	dvbpsi_sdt_service_descriptor_add
arg	44:43	44:52	5	p_service
water	44:43	0:0	6	p_service
arg	44:54	44:58	5	0x48
water	44:54	0:0	6	0
water	44:55	0:0	6	x48
arg	45:43	45:66	5	(3+provlen+servlen)
water	45:43	0:0	6	(
water	45:44	0:0	6	3
op	45:46	0:0	6	+
water	45:48	0:0	6	provlen
op	45:56	0:0	6	+
water	45:58	0:0	6	servlen
water	45:65	0:0	6	)
arg	46:43	46:56	5	psz_sdt_desc
water	46:43	0:0	6	psz_sdt_desc
water	46:57	0:0	4	;
call	48:8	49:52	4	dvbpsi_SDTServiceAddDescriptor
arg	48:40	48:49	5	p_service
water	48:40	0:0	6	p_service
arg	48:51	48:55	5	0x48
water	48:51	0:0	6	0
water	48:52	0:0	6	x48
arg	49:16	49:37	5	3+provlen+servlen
water	49:16	0:0	6	3
op	49:18	0:0	6	+
water	49:20	0:0	6	provlen
op	49:28	0:0	6	+
water	49:30	0:0	6	servlen
arg	49:39	49:52	5	psz_sdt_desc
water	49:39	0:0	6	psz_sdt_desc
water	49:53	0:0	4	;
water	51:4	0:0	4	}
if	52:4	53:26	2	(p_sys -> i_mpeg4_streams > 0)
cond	52:8	52:33	3	p_sys -> i_mpeg4_streams > 0
water	52:8	0:0	4	p_sys
op	52:13	0:0	4	->
water	52:15	0:0	4	i_mpeg4_streams
op	52:31	0:0	4	>
water	52:33	0:0	4	0
stmts	53:8	53:26	3	
call	53:8	53:25	4	GetPMTmpeg4
arg	53:20	53:25	5	p_mux
water	53:20	0:0	6	p_mux
water	53:26	0:0	4	;
for	54:4	159:4	2	( int i_stream = 0 ;i_stream < p_mux -> i_nb_inputs;i_stream ++)
forinit	0:0	54:25	3	 int i_stream = 0 ;
decl	54:9	54:25	4	int	i_stream
op	54:22	0:0	4	=
water	54:24	0:0	4	0
cond	54:27	54:45	3	i_stream < p_mux -> i_nb_inputs
water	54:27	0:0	4	i_stream
op	54:36	0:0	4	<
water	54:38	0:0	4	p_mux
op	54:43	0:0	4	->
water	54:45	0:0	4	i_nb_inputs
forexpr	54:58	54:66	3	i_stream ++
water	54:58	0:0	4	i_stream
op	54:66	0:0	4	++
stmts	55:4	159:4	3	
water	55:4	0:0	4	{
decl	56:8	56:79	4	ts_stream_t	*p_stream
op	56:30	0:0	4	=
water	56:32	0:0	4	(
water	56:33	0:0	4	ts_stream_t
op	56:44	0:0	4	*
water	56:45	0:0	4	)
water	56:46	0:0	4	p_mux
op	56:51	0:0	4	->
water	56:53	0:0	4	pp_inputs
op	56:62	0:0	4	[
water	56:63	0:0	4	i_stream
op	56:71	0:0	4	]
op	56:72	0:0	4	->
water	56:74	0:0	4	p_sys
decl	57:8	57:64	4	int	i_pidinput
op	57:23	0:0	4	=
water	57:25	0:0	4	p_mux
op	57:30	0:0	4	->
water	57:32	0:0	4	pp_inputs
op	57:41	0:0	4	[
water	57:42	0:0	4	i_stream
op	57:50	0:0	4	]
op	57:51	0:0	4	->
water	57:53	0:0	4	p_fmt
op	57:58	0:0	4	->
water	57:60	0:0	4	i_id
decl	58:8	59:70	4	pmt_map_t	*p_usepid
op	58:28	0:0	4	=
call	58:30	59:69	5	bsearch
arg	58:39	58:50	6	&i_pidinput
op	58:39	0:0	7	&
water	58:40	0:0	7	i_pidinput
arg	58:52	58:65	6	p_sys->pmtmap
water	58:52	0:0	7	p_sys
op	58:57	0:0	7	->
water	58:59	0:0	7	pmtmap
arg	59:20	59:37	6	p_sys->i_pmtslots
water	59:20	0:0	7	p_sys
op	59:25	0:0	7	->
water	59:27	0:0	7	i_pmtslots
arg	59:39	59:56	6	sizeof(pmt_map_t)
op	59:39	0:0	7	sizeof
water	59:45	0:0	7	(
water	59:46	0:0	7	pmt_map_t
water	59:55	0:0	7	)
arg	59:58	59:69	6	intcompare
water	59:58	0:0	7	intcompare
water	61:8	0:0	4	unsigned
water	61:17	0:0	4	prog
op	61:22	0:0	4	=
water	61:24	0:0	4	p_usepid
water	61:33	0:0	4	?
water	61:35	0:0	4	p_usepid
op	61:43	0:0	4	->
water	61:45	0:0	4	i_prog
water	61:52	0:0	4	:
water	61:54	0:0	4	0
water	61:55	0:0	4	;
decl	62:8	63:62	4	dvbpsi_pmt_es_t	*p_es
op	62:30	0:0	4	=
call	62:32	63:61	5	dvbpsi_PMTAddES
arg	62:49	62:69	6	&p_sys->dvbpmt[prog]
op	62:49	0:0	7	&
water	62:50	0:0	7	p_sys
op	62:55	0:0	7	->
water	62:57	0:0	7	dvbpmt
op	62:63	0:0	7	[
water	62:64	0:0	7	prog
op	62:68	0:0	7	]
arg	63:20	63:43	6	p_stream->i_stream_type
water	63:20	0:0	7	p_stream
op	63:28	0:0	7	->
water	63:30	0:0	7	i_stream_type
arg	63:45	63:61	6	p_stream->i_pid
water	63:45	0:0	7	p_stream
op	63:53	0:0	7	->
water	63:55	0:0	7	i_pid
if	64:8	71:8	4	(p_stream -> i_stream_id == 0 xfa || p_stream -> i_stream_id == 0 xfb)
cond	64:12	64:71	5	p_stream -> i_stream_id == 0 xfa || p_stream -> i_stream_id == 0 xfb
water	64:12	0:0	6	p_stream
op	64:20	0:0	6	->
water	64:22	0:0	6	i_stream_id
op	64:34	0:0	6	==
water	64:37	0:0	6	0
water	64:38	0:0	6	xfa
op	64:42	0:0	6	||
water	64:45	0:0	6	p_stream
op	64:53	0:0	6	->
water	64:55	0:0	6	i_stream_id
op	64:67	0:0	6	==
water	64:70	0:0	6	0
water	64:71	0:0	6	xfb
stmts	65:8	71:8	5	
water	65:8	0:0	6	{
decl	66:12	66:32	6	uint8_t	es_id[2]
water	68:12	0:0	6	es_id
op	68:17	0:0	6	[
water	68:18	0:0	6	0
op	68:19	0:0	6	]
op	68:21	0:0	6	=
water	68:23	0:0	6	(
water	68:24	0:0	6	p_stream
op	68:32	0:0	6	->
water	68:34	0:0	6	i_es_id
op	68:42	0:0	6	>>
water	68:45	0:0	6	8
water	68:46	0:0	6	)
op	68:47	0:0	6	&
water	68:48	0:0	6	0
water	68:49	0:0	6	xff
water	68:52	0:0	6	;
water	69:12	0:0	6	es_id
op	69:17	0:0	6	[
water	69:18	0:0	6	1
op	69:19	0:0	6	]
op	69:21	0:0	6	=
water	69:23	0:0	6	(
water	69:24	0:0	6	p_stream
op	69:32	0:0	6	->
water	69:34	0:0	6	i_es_id
water	69:41	0:0	6	)
op	69:42	0:0	6	&
water	69:43	0:0	6	0
water	69:44	0:0	6	xff
water	69:47	0:0	6	;
call	70:12	70:60	6	dvbpsi_PMTESAddDescriptor
arg	70:39	70:43	7	p_es
water	70:39	0:0	8	p_es
arg	70:45	70:49	7	0x1f
water	70:45	0:0	8	0
water	70:46	0:0	8	x1f
arg	70:51	70:52	7	2
water	70:51	0:0	8	2
arg	70:54	70:60	7	es_id
water	70:54	0:0	8	es_id
water	70:61	0:0	6	;
water	71:8	0:0	6	}
else	72:8	90:8	4
stmts	72:13	90:8	5	
if	72:13	90:8	6	(p_stream -> i_stream_type == 0 xa0)
cond	72:17	72:45	7	p_stream -> i_stream_type == 0 xa0
water	72:17	0:0	8	p_stream
op	72:25	0:0	8	->
water	72:27	0:0	8	i_stream_type
op	72:41	0:0	8	==
water	72:44	0:0	8	0
water	72:45	0:0	8	xa0
stmts	73:8	90:8	7	
water	73:8	0:0	8	{
decl	74:12	74:29	8	uint8_t	data[512]
decl	75:12	75:57	8	int	i_extra
op	75:24	0:0	8	=
call	75:26	75:56	9	__MIN
arg	75:33	75:50	10	p_stream->i_extra
water	75:33	0:0	11	p_stream
op	75:41	0:0	11	->
water	75:43	0:0	11	i_extra
arg	75:52	75:56	10	502
water	75:52	0:0	11	502
call	77:12	77:56	8	memcpy
arg	77:20	77:28	9	&data[0]
op	77:20	0:0	10	&
water	77:21	0:0	10	data
op	77:25	0:0	10	[
water	77:26	0:0	10	0
op	77:27	0:0	10	]
arg	77:30	77:52	9	&p_stream->i_bih_codec
op	77:30	0:0	10	&
water	77:31	0:0	10	p_stream
op	77:39	0:0	10	->
water	77:41	0:0	10	i_bih_codec
arg	77:54	77:56	9	4
water	77:54	0:0	10	4
water	77:57	0:0	8	;
water	78:12	0:0	8	data
op	78:16	0:0	8	[
water	78:17	0:0	8	4
op	78:18	0:0	8	]
op	78:20	0:0	8	=
water	78:22	0:0	8	(
water	78:24	0:0	8	p_stream
op	78:32	0:0	8	->
water	78:34	0:0	8	i_bih_width
op	78:46	0:0	8	>>
water	78:49	0:0	8	8
water	78:51	0:0	8	)
op	78:52	0:0	8	&
water	78:53	0:0	8	0
water	78:54	0:0	8	xff
water	78:57	0:0	8	;
water	79:12	0:0	8	data
op	79:16	0:0	8	[
water	79:17	0:0	8	5
op	79:18	0:0	8	]
op	79:20	0:0	8	=
water	79:22	0:0	8	(
water	79:24	0:0	8	p_stream
op	79:32	0:0	8	->
water	79:34	0:0	8	i_bih_width
water	79:51	0:0	8	)
op	79:52	0:0	8	&
water	79:53	0:0	8	0
water	79:54	0:0	8	xff
water	79:57	0:0	8	;
water	80:12	0:0	8	data
op	80:16	0:0	8	[
water	80:17	0:0	8	6
op	80:18	0:0	8	]
op	80:20	0:0	8	=
water	80:22	0:0	8	(
water	80:24	0:0	8	p_stream
op	80:32	0:0	8	->
water	80:34	0:0	8	i_bih_height
op	80:46	0:0	8	>>
water	80:49	0:0	8	8
water	80:51	0:0	8	)
op	80:52	0:0	8	&
water	80:53	0:0	8	0
water	80:54	0:0	8	xff
water	80:57	0:0	8	;
water	81:12	0:0	8	data
op	81:16	0:0	8	[
water	81:17	0:0	8	7
op	81:18	0:0	8	]
op	81:20	0:0	8	=
water	81:22	0:0	8	(
water	81:24	0:0	8	p_stream
op	81:32	0:0	8	->
water	81:34	0:0	8	i_bih_height
water	81:51	0:0	8	)
op	81:52	0:0	8	&
water	81:53	0:0	8	0
water	81:54	0:0	8	xff
water	81:57	0:0	8	;
water	82:12	0:0	8	data
op	82:16	0:0	8	[
water	82:17	0:0	8	8
op	82:18	0:0	8	]
op	82:20	0:0	8	=
water	82:22	0:0	8	(
water	82:24	0:0	8	i_extra
op	82:32	0:0	8	>>
water	82:35	0:0	8	8
water	82:37	0:0	8	)
op	82:38	0:0	8	&
water	82:39	0:0	8	0
water	82:40	0:0	8	xff
water	82:43	0:0	8	;
water	83:12	0:0	8	data
op	83:16	0:0	8	[
water	83:17	0:0	8	9
op	83:18	0:0	8	]
op	83:20	0:0	8	=
water	83:22	0:0	8	(
water	83:24	0:0	8	i_extra
water	83:37	0:0	8	)
op	83:38	0:0	8	&
water	83:39	0:0	8	0
water	83:40	0:0	8	xff
water	83:43	0:0	8	;
if	84:12	87:12	8	(i_extra > 0)
cond	84:16	84:26	9	i_extra > 0
water	84:16	0:0	10	i_extra
op	84:24	0:0	10	>
water	84:26	0:0	10	0
stmts	85:12	87:12	9	
water	85:12	0:0	10	{
call	86:16	86:62	10	memcpy
arg	86:24	86:33	11	&data[10]
op	86:24	0:0	12	&
water	86:25	0:0	12	data
op	86:29	0:0	12	[
water	86:30	0:0	12	10
op	86:32	0:0	12	]
arg	86:35	86:52	11	p_stream->p_extra
water	86:35	0:0	12	p_stream
op	86:43	0:0	12	->
water	86:45	0:0	12	p_extra
arg	86:54	86:62	11	i_extra
water	86:54	0:0	12	i_extra
water	86:63	0:0	10	;
water	87:12	0:0	10	}
call	89:12	89:70	8	dvbpsi_PMTESAddDescriptor
arg	89:39	89:43	9	p_es
water	89:39	0:0	10	p_es
arg	89:45	89:49	9	0xa0
water	89:45	0:0	10	0
water	89:46	0:0	10	xa0
arg	89:51	89:63	9	i_extra+10
water	89:51	0:0	10	i_extra
op	89:59	0:0	10	+
water	89:61	0:0	10	10
arg	89:65	89:70	9	data
water	89:65	0:0	10	data
water	89:71	0:0	8	;
water	90:8	0:0	8	}
else	91:8	96:8	4
stmts	91:13	96:8	5	
if	91:13	96:8	6	(p_stream -> i_stream_type == 0 x81)
cond	91:17	91:45	7	p_stream -> i_stream_type == 0 x81
water	91:17	0:0	8	p_stream
op	91:25	0:0	8	->
water	91:27	0:0	8	i_stream_type
op	91:41	0:0	8	==
water	91:44	0:0	8	0
water	91:45	0:0	8	x81
stmts	92:8	96:8	7	
water	92:8	0:0	8	{
decl	93:12	93:53	8	uint8_t	format[4]
op	93:30	0:0	8	=
water	93:32	0:0	8	{
water	93:34	0:0	8	'A'
water	93:37	0:0	8	,
water	93:39	0:0	8	'C'
water	93:42	0:0	8	,
water	93:44	0:0	8	'-'
water	93:47	0:0	8	,
water	93:49	0:0	8	'3'
water	93:52	0:0	8	}
call	95:12	95:61	8	dvbpsi_PMTESAddDescriptor
arg	95:39	95:43	9	p_es
water	95:39	0:0	10	p_es
arg	95:45	95:49	9	0x05
water	95:45	0:0	10	0
water	95:46	0:0	10	x05
arg	95:51	95:52	9	4
water	95:51	0:0	10	4
arg	95:54	95:61	9	format
water	95:54	0:0	10	format
water	95:62	0:0	8	;
water	96:8	0:0	8	}
else	97:8	102:8	4
stmts	97:13	102:8	5	
if	97:13	102:8	6	(p_stream -> i_codec == VLC_CODEC_DIRAC)
cond	97:17	97:38	7	p_stream -> i_codec == VLC_CODEC_DIRAC
water	97:17	0:0	8	p_stream
op	97:25	0:0	8	->
water	97:27	0:0	8	i_codec
op	97:35	0:0	8	==
water	97:38	0:0	8	VLC_CODEC_DIRAC
stmts	98:8	102:8	7	
water	98:8	0:0	8	{
decl	100:12	100:52	8	uint8_t	data[4]
op	100:28	0:0	8	=
water	100:30	0:0	8	{
water	100:32	0:0	8	'd'
water	100:35	0:0	8	,
water	100:37	0:0	8	'r'
water	100:40	0:0	8	,
water	100:42	0:0	8	'a'
water	100:45	0:0	8	,
water	100:47	0:0	8	'c'
water	100:51	0:0	8	}
call	101:12	101:59	8	dvbpsi_PMTESAddDescriptor
arg	101:39	101:43	9	p_es
water	101:39	0:0	10	p_es
arg	101:45	101:49	9	0x05
water	101:45	0:0	10	0
water	101:46	0:0	10	x05
arg	101:51	101:52	9	4
water	101:51	0:0	10	4
arg	101:54	101:59	9	data
water	101:54	0:0	10	data
water	101:60	0:0	8	;
water	102:8	0:0	8	}
else	103:8	109:8	4
stmts	103:13	109:8	5	
if	103:13	109:8	6	(p_stream -> i_codec == VLC_CODEC_DTS)
cond	103:17	103:38	7	p_stream -> i_codec == VLC_CODEC_DTS
water	103:17	0:0	8	p_stream
op	103:25	0:0	8	->
water	103:27	0:0	8	i_codec
op	103:35	0:0	8	==
water	103:38	0:0	8	VLC_CODEC_DTS
stmts	104:8	109:8	7	
water	104:8	0:0	8	{
decl	107:12	107:52	8	uint8_t	data[4]
op	107:28	0:0	8	=
water	107:30	0:0	8	{
water	107:32	0:0	8	'D'
water	107:35	0:0	8	,
water	107:37	0:0	8	'T'
water	107:40	0:0	8	,
water	107:42	0:0	8	'S'
water	107:45	0:0	8	,
water	107:47	0:0	8	'2'
water	107:51	0:0	8	}
call	108:12	108:59	8	dvbpsi_PMTESAddDescriptor
arg	108:39	108:43	9	p_es
water	108:39	0:0	10	p_es
arg	108:45	108:49	9	0x05
water	108:45	0:0	10	0
water	108:46	0:0	10	x05
arg	108:51	108:52	9	4
water	108:51	0:0	10	4
arg	108:54	108:59	9	data
water	108:54	0:0	10	data
water	108:60	0:0	8	;
water	109:8	0:0	8	}
else	110:8	114:8	4
stmts	110:13	114:8	5	
if	110:13	114:8	6	(p_stream -> i_codec == VLC_CODEC_EAC3)
cond	110:17	110:38	7	p_stream -> i_codec == VLC_CODEC_EAC3
water	110:17	0:0	8	p_stream
op	110:25	0:0	8	->
water	110:27	0:0	8	i_codec
op	110:35	0:0	8	==
water	110:38	0:0	8	VLC_CODEC_EAC3
stmts	111:8	114:8	7	
water	111:8	0:0	8	{
decl	112:12	112:38	8	uint8_t	data[1]
op	112:28	0:0	8	=
water	112:30	0:0	8	{
water	112:32	0:0	8	0
water	112:33	0:0	8	x00
water	112:37	0:0	8	}
call	113:12	113:59	8	dvbpsi_PMTESAddDescriptor
arg	113:39	113:43	9	p_es
water	113:39	0:0	10	p_es
arg	113:45	113:49	9	0x7a
water	113:45	0:0	10	0
water	113:46	0:0	10	x7a
arg	113:51	113:52	9	1
water	113:51	0:0	10	1
arg	113:54	113:59	9	data
water	113:54	0:0	10	data
water	113:60	0:0	8	;
water	114:8	0:0	8	}
else	115:8	124:8	4
stmts	115:13	124:8	5	
if	115:13	124:8	6	(p_stream -> i_codec == VLC_CODEC_TELETEXT)
cond	115:17	115:38	7	p_stream -> i_codec == VLC_CODEC_TELETEXT
water	115:17	0:0	8	p_stream
op	115:25	0:0	8	->
water	115:27	0:0	8	i_codec
op	115:35	0:0	8	==
water	115:38	0:0	8	VLC_CODEC_TELETEXT
stmts	116:8	124:8	7	
water	116:8	0:0	8	{
if	117:12	122:12	8	(p_stream -> i_extra)
cond	117:16	117:26	9	p_stream -> i_extra
water	117:16	0:0	10	p_stream
op	117:24	0:0	10	->
water	117:26	0:0	10	i_extra
stmts	118:12	122:12	9	
water	118:12	0:0	10	{
call	119:16	121:61	10	dvbpsi_PMTESAddDescriptor
arg	119:43	119:47	11	p_es
water	119:43	0:0	12	p_es
arg	119:49	119:53	11	0x56
water	119:49	0:0	12	0
water	119:50	0:0	12	x56
arg	120:43	120:60	11	p_stream->i_extra
water	120:43	0:0	12	p_stream
op	120:51	0:0	12	->
water	120:53	0:0	12	i_extra
arg	121:43	121:61	11	p_stream->p_extra
water	121:43	0:0	12	p_stream
op	121:51	0:0	12	->
water	121:53	0:0	12	p_extra
water	121:62	0:0	10	;
water	122:12	0:0	10	}
continue	123:12	123:20	8	
water	124:8	0:0	8	}
else	125:8	153:8	4
stmts	125:13	153:8	5	
if	125:13	153:8	6	(p_stream -> i_codec == VLC_CODEC_DVBS)
cond	125:17	125:38	7	p_stream -> i_codec == VLC_CODEC_DVBS
water	125:17	0:0	8	p_stream
op	125:25	0:0	8	->
water	125:27	0:0	8	i_codec
op	125:35	0:0	8	==
water	125:38	0:0	8	VLC_CODEC_DVBS
stmts	126:8	153:8	7	
water	126:8	0:0	8	{
if	128:12	134:12	8	(p_stream -> i_extra)
cond	128:16	128:26	9	p_stream -> i_extra
water	128:16	0:0	10	p_stream
op	128:24	0:0	10	->
water	128:26	0:0	10	i_extra
stmts	129:12	134:12	9	
water	129:12	0:0	10	{
call	131:16	133:61	10	dvbpsi_PMTESAddDescriptor
arg	131:43	131:47	11	p_es
water	131:43	0:0	12	p_es
arg	131:49	131:53	11	0x59
water	131:49	0:0	12	0
water	131:50	0:0	12	x59
arg	132:43	132:60	11	p_stream->i_extra
water	132:43	0:0	12	p_stream
op	132:51	0:0	12	->
water	132:53	0:0	12	i_extra
arg	133:43	133:61	11	p_stream->p_extra
water	133:43	0:0	12	p_stream
op	133:51	0:0	12	->
water	133:53	0:0	12	p_extra
water	133:62	0:0	10	;
water	134:12	0:0	10	}
else	135:12	151:12	8
stmts	136:12	151:12	9	
water	136:12	0:0	10	{
decl	138:16	138:44	10	dvbpsi_subtitling_dr_t	descr
decl	139:16	139:37	10	dvbpsi_subtitle_t	sub
decl	140:16	140:44	10	dvbpsi_descriptor_t	*p_descr
call	141:16	141:71	10	memcpy
arg	141:24	141:51	11	sub.i_iso6392_language_code
water	141:24	0:0	12	sub
op	141:27	0:0	12	.
water	141:28	0:0	12	i_iso6392_language_code
arg	141:53	141:67	11	p_stream->lang
water	141:53	0:0	12	p_stream
op	141:61	0:0	12	->
water	141:63	0:0	12	lang
arg	141:69	141:71	11	3
water	141:69	0:0	12	3
water	141:72	0:0	10	;
water	142:16	0:0	10	sub
op	142:19	0:0	10	.
water	142:20	0:0	10	i_subtitling_type
op	142:38	0:0	10	=
water	142:40	0:0	10	0
water	142:41	0:0	10	x10
water	142:44	0:0	10	;
water	143:16	0:0	10	sub
op	143:19	0:0	10	.
water	143:20	0:0	10	i_composition_page_id
op	143:42	0:0	10	=
water	143:44	0:0	10	p_stream
op	143:52	0:0	10	->
water	143:54	0:0	10	i_es_id
op	143:62	0:0	10	&
water	143:64	0:0	10	0
water	143:65	0:0	10	xFF
water	143:68	0:0	10	;
water	144:16	0:0	10	sub
op	144:19	0:0	10	.
water	144:20	0:0	10	i_ancillary_page_id
op	144:40	0:0	10	=
water	144:42	0:0	10	p_stream
op	144:50	0:0	10	->
water	144:52	0:0	10	i_es_id
op	144:60	0:0	10	>>
water	144:63	0:0	10	16
water	144:65	0:0	10	;
water	145:16	0:0	10	descr
op	145:21	0:0	10	.
water	145:22	0:0	10	i_subtitles_number
op	145:41	0:0	10	=
water	145:43	0:0	10	1
water	145:44	0:0	10	;
water	146:16	0:0	10	descr
op	146:21	0:0	10	.
water	146:22	0:0	10	p_subtitle
op	146:32	0:0	10	[
water	146:33	0:0	10	0
op	146:34	0:0	10	]
op	146:36	0:0	10	=
water	146:38	0:0	10	sub
water	146:41	0:0	10	;
water	147:16	0:0	10	p_descr
op	147:24	0:0	10	=
call	147:26	147:60	10	dvbpsi_GenSubtitlingDr
arg	147:50	147:56	11	&descr
op	147:50	0:0	12	&
water	147:51	0:0	12	descr
arg	147:58	147:60	11	0
water	147:58	0:0	12	0
water	147:61	0:0	10	;
water	148:55	0:0	10	p_descr
op	148:62	0:0	10	->
water	148:64	0:0	10	i_length
op	148:73	0:0	10	=
water	148:75	0:0	10	8
water	148:76	0:0	10	;
call	149:16	150:78	10	dvbpsi_PMTESAddDescriptor
arg	149:43	149:47	11	p_es
water	149:43	0:0	12	p_es
arg	149:49	149:63	11	p_descr->i_tag
water	149:49	0:0	12	p_descr
op	149:56	0:0	12	->
water	149:58	0:0	12	i_tag
arg	150:43	150:60	11	p_descr->i_length
water	150:43	0:0	12	p_descr
op	150:50	0:0	12	->
water	150:52	0:0	12	i_length
arg	150:62	150:78	11	p_descr->p_data
water	150:62	0:0	12	p_descr
op	150:69	0:0	12	->
water	150:71	0:0	12	p_data
water	150:79	0:0	10	;
water	151:12	0:0	10	}
continue	152:12	152:20	8	
water	153:8	0:0	8	}
if	154:8	158:8	4	(p_stream -> i_langs)
cond	154:12	154:22	5	p_stream -> i_langs
water	154:12	0:0	6	p_stream
op	154:20	0:0	6	->
water	154:22	0:0	6	i_langs
stmts	155:8	158:8	5	
water	155:8	0:0	6	{
call	156:12	157:30	6	dvbpsi_PMTESAddDescriptor
arg	156:39	156:43	7	p_es
water	156:39	0:0	8	p_es
arg	156:45	156:49	7	0x0a
water	156:45	0:0	8	0
water	156:46	0:0	8	x0a
arg	156:51	156:70	7	4*p_stream->i_langs
water	156:51	0:0	8	4
op	156:52	0:0	8	*
water	156:53	0:0	8	p_stream
op	156:61	0:0	8	->
water	156:63	0:0	8	i_langs
arg	157:16	157:30	7	p_stream->lang
water	157:16	0:0	8	p_stream
op	157:24	0:0	8	->
water	157:26	0:0	8	lang
water	157:31	0:0	6	;
water	158:8	0:0	6	}
water	159:4	0:0	4	}
for	160:4	172:4	2	(unsigned i = 0 ;i < p_sys -> i_num_pmt;i ++)
forinit	160:9	160:23	3	unsigned i = 0 ;
water	160:9	0:0	4	unsigned
water	160:18	0:0	4	i
op	160:20	0:0	4	=
water	160:22	0:0	4	0
water	160:23	0:0	4	;
cond	160:25	160:36	3	i < p_sys -> i_num_pmt
water	160:25	0:0	4	i
op	160:27	0:0	4	<
water	160:29	0:0	4	p_sys
op	160:34	0:0	4	->
water	160:36	0:0	4	i_num_pmt
forexpr	160:47	160:48	3	i ++
water	160:47	0:0	4	i
op	160:48	0:0	4	++
stmts	161:4	172:4	3	
water	161:4	0:0	4	{
decl	162:8	162:34	4	dvbpsi_psi_section_t	*sect
water	164:8	0:0	4	sect
op	164:13	0:0	4	=
call	164:15	164:80	4	dvbpsi_pmt_sections_generate
arg	164:45	164:60	5	p_sys->p_dvbpsi
water	164:45	0:0	6	p_sys
op	164:50	0:0	6	->
water	164:52	0:0	6	p_dvbpsi
arg	164:62	164:80	5	&p_sys->dvbpmt[i]
op	164:62	0:0	6	&
water	164:63	0:0	6	p_sys
op	164:68	0:0	6	->
water	164:70	0:0	6	dvbpmt
op	164:76	0:0	6	[
water	164:77	0:0	6	i
op	164:78	0:0	6	]
water	164:81	0:0	4	;
water	166:8	0:0	4	sect
op	166:13	0:0	4	=
call	166:15	166:56	4	dvbpsi_GenPMTSections
arg	166:38	166:56	5	&p_sys->dvbpmt[i]
op	166:38	0:0	6	&
water	166:39	0:0	6	p_sys
op	166:44	0:0	6	->
water	166:46	0:0	6	dvbpmt
op	166:52	0:0	6	[
water	166:53	0:0	6	i
op	166:54	0:0	6	]
water	166:57	0:0	4	;
decl	168:8	168:46	4	block_t	*pmt
op	168:21	0:0	4	=
call	168:23	168:45	5	WritePSISection
arg	168:40	168:45	6	sect
water	168:40	0:0	7	sect
call	169:8	169:40	4	PEStoTS
arg	169:17	169:18	5	c
water	169:17	0:0	6	c
arg	169:20	169:23	5	pmt
water	169:20	0:0	6	pmt
arg	169:25	169:40	5	&p_sys->pmt[i]
op	169:25	0:0	6	&
water	169:26	0:0	6	p_sys
op	169:31	0:0	6	->
water	169:33	0:0	6	pmt
op	169:36	0:0	6	[
water	169:37	0:0	6	i
op	169:38	0:0	6	]
water	169:41	0:0	4	;
call	170:8	170:37	4	dvbpsi_DeletePSISections
arg	170:33	170:37	5	sect
water	170:33	0:0	6	sect
water	170:38	0:0	4	;
call	171:8	171:43	4	dvbpsi_EmptyPMT
arg	171:25	171:43	5	&p_sys->dvbpmt[i]
op	171:25	0:0	6	&
water	171:26	0:0	6	p_sys
op	171:31	0:0	6	->
water	171:33	0:0	6	dvbpmt
op	171:39	0:0	6	[
water	171:40	0:0	6	i
op	171:41	0:0	6	]
water	171:44	0:0	4	;
water	172:4	0:0	4	}
if	173:4	185:4	2	(p_sys -> b_sdt)
cond	173:8	173:15	3	p_sys -> b_sdt
water	173:8	0:0	4	p_sys
op	173:13	0:0	4	->
water	173:15	0:0	4	b_sdt
stmts	174:4	185:4	3	
water	174:4	0:0	4	{
decl	175:8	175:34	4	dvbpsi_psi_section_t	*sect
water	177:8	0:0	4	sect
op	177:13	0:0	4	=
call	177:15	177:67	4	dvbpsi_sdt_sections_generate
arg	177:45	177:60	5	p_sys->p_dvbpsi
water	177:45	0:0	6	p_sys
op	177:50	0:0	6	->
water	177:52	0:0	6	p_dvbpsi
arg	177:62	177:67	5	&sdt
op	177:62	0:0	6	&
water	177:63	0:0	6	sdt
water	177:68	0:0	4	;
water	179:8	0:0	4	sect
op	179:13	0:0	4	=
call	179:15	179:43	4	dvbpsi_GenSDTSections
arg	179:38	179:43	5	&sdt
op	179:38	0:0	6	&
water	179:39	0:0	6	sdt
water	179:44	0:0	4	;
decl	181:8	181:48	4	block_t	*p_sdt
op	181:23	0:0	4	=
call	181:25	181:47	5	WritePSISection
arg	181:42	181:47	6	sect
water	181:42	0:0	7	sect
call	182:8	182:39	4	PEStoTS
arg	182:17	182:18	5	c
water	182:17	0:0	6	c
arg	182:20	182:25	5	p_sdt
water	182:20	0:0	6	p_sdt
arg	182:27	182:39	5	&p_sys->sdt
op	182:27	0:0	6	&
water	182:28	0:0	6	p_sys
op	182:33	0:0	6	->
water	182:35	0:0	6	sdt
water	182:40	0:0	4	;
call	183:8	183:39	4	dvbpsi_DeletePSISections
arg	183:34	183:39	5	sect
water	183:34	0:0	6	sect
water	183:40	0:0	4	;
call	184:8	184:30	4	dvbpsi_EmptySDT
arg	184:25	184:30	5	&sdt
op	184:25	0:0	6	&
water	184:26	0:0	6	sdt
water	184:31	0:0	4	;
water	185:4	0:0	4	}

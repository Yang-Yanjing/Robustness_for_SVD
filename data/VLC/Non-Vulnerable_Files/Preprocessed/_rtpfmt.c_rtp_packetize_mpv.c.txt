func	2:0	86:0	0	static int	rtp_packetize_mpv
params	2:28	0:0	1	
param	2:30	2:54	2	sout_stream_id_sys_t *	id
param	2:56	2:68	2	block_t *	in
stmnts	0:0	85:22	1	
decl	4:4	4:38	2	int	i_max
op	4:20	0:0	2	=
call	4:22	4:33	3	rtp_mtu
arg	4:31	4:33	4	id
water	4:31	0:0	5	id
op	4:35	0:0	2	-
water	4:37	0:0	2	4
decl	5:4	5:58	2	int	i_count
op	5:20	0:0	2	=
water	5:22	0:0	2	(
water	5:24	0:0	2	in
op	5:26	0:0	2	->
water	5:28	0:0	2	i_buffer
op	5:37	0:0	2	+
water	5:39	0:0	2	i_max
op	5:45	0:0	2	-
water	5:47	0:0	2	1
water	5:49	0:0	2	)
op	5:51	0:0	2	/
water	5:53	0:0	2	i_max
decl	6:4	6:34	2	uint8_t	*p_data
op	6:20	0:0	2	=
water	6:22	0:0	2	in
op	6:24	0:0	2	->
water	6:26	0:0	2	p_buffer
decl	7:4	7:34	2	int	i_data
op	7:20	0:0	2	=
water	7:22	0:0	2	in
op	7:24	0:0	2	->
water	7:26	0:0	2	i_buffer
decl	8:4	8:13	2	int	i
decl	9:4	9:32	2	int	b_sequence_start
op	9:29	0:0	2	=
water	9:31	0:0	2	0
decl	10:4	10:30	2	int	i_temporal_ref
op	10:27	0:0	2	=
water	10:29	0:0	2	0
decl	11:4	11:37	2	int	i_picture_coding_type
op	11:34	0:0	2	=
water	11:36	0:0	2	0
decl	12:4	12:54	2	int	i_fbv
op	12:18	0:0	2	=
water	12:20	0:0	2	0
water	12:21	0:0	2	,
decl	12:4	12:54	2	int	i_bfc
op	12:29	0:0	2	=
water	12:31	0:0	2	0
water	12:32	0:0	2	,
decl	12:4	12:54	2	int	i_ffv
op	12:40	0:0	2	=
water	12:42	0:0	2	0
water	12:43	0:0	2	,
decl	12:4	12:54	2	int	i_ffc
op	12:51	0:0	2	=
water	12:53	0:0	2	0
decl	13:4	13:29	2	int	b_start_slice
op	13:26	0:0	2	=
water	13:28	0:0	2	0
if	15:4	60:4	2	(in -> i_buffer > 4)
cond	15:8	15:23	3	in -> i_buffer > 4
water	15:8	0:0	4	in
op	15:10	0:0	4	->
water	15:12	0:0	4	i_buffer
op	15:21	0:0	4	>
water	15:23	0:0	4	4
stmts	16:4	60:4	3	
water	16:4	0:0	4	{
decl	17:8	17:27	4	uint8_t	*p
op	17:19	0:0	4	=
water	17:21	0:0	4	p_data
decl	18:8	18:38	4	int	i_rest
op	18:24	0:0	4	=
water	18:26	0:0	4	in
op	18:28	0:0	4	->
water	18:30	0:0	4	i_buffer
for	19:8	59:8	4	(;;)
forinit	19:13	19:13	5	;
water	19:13	0:0	6	;
cond	0:0	0:0	5	
forexpr	0:0	0:0	5	
stmts	20:8	59:8	5	
water	20:8	0:0	6	{
while	21:12	26:12	6	(i_rest > 4 && ( p [ 0 ] != 0 x00 || p [ 1 ] != 0 x00 || p [ 2 ] != 0 x01 ))
cond	21:19	22:66	7	i_rest > 4 && ( p [ 0 ] != 0 x00 || p [ 1 ] != 0 x00 || p [ 2 ] != 0 x01 )
water	21:19	0:0	8	i_rest
op	21:26	0:0	8	>
water	21:28	0:0	8	4
op	21:30	0:0	8	&&
water	22:19	0:0	8	(
water	22:21	0:0	8	p
op	22:22	0:0	8	[
water	22:23	0:0	8	0
op	22:24	0:0	8	]
op	22:26	0:0	8	!=
water	22:29	0:0	8	0
water	22:30	0:0	8	x00
op	22:34	0:0	8	||
water	22:37	0:0	8	p
op	22:38	0:0	8	[
water	22:39	0:0	8	1
op	22:40	0:0	8	]
op	22:42	0:0	8	!=
water	22:45	0:0	8	0
water	22:46	0:0	8	x00
op	22:50	0:0	8	||
water	22:53	0:0	8	p
op	22:54	0:0	8	[
water	22:55	0:0	8	2
op	22:56	0:0	8	]
op	22:58	0:0	8	!=
water	22:61	0:0	8	0
water	22:62	0:0	8	x01
water	22:66	0:0	8	)
stmts	23:12	26:12	7	
water	23:12	0:0	8	{
water	24:16	0:0	8	p
op	24:17	0:0	8	++
water	24:19	0:0	8	;
water	25:16	0:0	8	i_rest
op	25:22	0:0	8	--
water	25:24	0:0	8	;
water	26:12	0:0	8	}
if	27:12	30:12	6	(i_rest <= 4)
cond	27:16	27:26	7	i_rest <= 4
water	27:16	0:0	8	i_rest
op	27:23	0:0	8	<=
water	27:26	0:0	8	4
stmts	28:12	30:12	7	
water	28:12	0:0	8	{
break	29:16	29:21	8	
water	30:12	0:0	8	}
water	31:12	0:0	6	p
op	31:14	0:0	6	+=
water	31:17	0:0	6	3
water	31:18	0:0	6	;
water	32:12	0:0	6	i_rest
op	32:19	0:0	6	-=
water	32:22	0:0	6	4
water	32:23	0:0	6	;
if	33:12	37:12	6	(* p == 0 xb3)
cond	33:16	33:23	7	* p == 0 xb3
op	33:16	0:0	8	*
water	33:17	0:0	8	p
op	33:19	0:0	8	==
water	33:22	0:0	8	0
water	33:23	0:0	8	xb3
stmts	34:12	37:12	7	
water	34:12	0:0	8	{
water	36:16	0:0	8	b_sequence_start
op	36:33	0:0	8	=
water	36:35	0:0	8	1
water	36:36	0:0	8	;
water	37:12	0:0	8	}
else	38:12	54:12	6
stmts	38:17	54:12	7	
if	38:17	54:12	8	(* p == 0 x00 && i_rest >= 4)
cond	38:21	38:45	9	* p == 0 x00 && i_rest >= 4
op	38:21	0:0	10	*
water	38:22	0:0	10	p
op	38:24	0:0	10	==
water	38:27	0:0	10	0
water	38:28	0:0	10	x00
op	38:32	0:0	10	&&
water	38:35	0:0	10	i_rest
op	38:42	0:0	10	>=
water	38:45	0:0	10	4
stmts	39:12	54:12	9	
water	39:12	0:0	10	{
water	41:16	0:0	10	i_temporal_ref
op	41:31	0:0	10	=
water	41:33	0:0	10	(
water	41:35	0:0	10	p
op	41:36	0:0	10	[
water	41:37	0:0	10	1
op	41:38	0:0	10	]
op	41:40	0:0	10	<<
water	41:43	0:0	10	2
water	41:44	0:0	10	)
op	41:46	0:0	10	|
water	41:47	0:0	10	(
water	41:48	0:0	10	(
water	41:49	0:0	10	p
op	41:50	0:0	10	[
water	41:51	0:0	10	2
op	41:52	0:0	10	]
op	41:53	0:0	10	>>
water	41:55	0:0	10	6
water	41:56	0:0	10	)
op	41:57	0:0	10	&
water	41:58	0:0	10	0
water	41:59	0:0	10	x03
water	41:62	0:0	10	)
water	41:63	0:0	10	;
water	42:16	0:0	10	i_picture_coding_type
op	42:38	0:0	10	=
water	42:40	0:0	10	(
water	42:41	0:0	10	p
op	42:42	0:0	10	[
water	42:43	0:0	10	2
op	42:44	0:0	10	]
op	42:46	0:0	10	>>
water	42:49	0:0	10	3
water	42:50	0:0	10	)
op	42:51	0:0	10	&
water	42:52	0:0	10	0
water	42:53	0:0	10	x07
water	42:56	0:0	10	;
if	43:16	53:16	10	(i_rest >= 4 && ( i_picture_coding_type == 2 || i_picture_coding_type == 3 ))
cond	43:20	44:63	11	i_rest >= 4 && ( i_picture_coding_type == 2 || i_picture_coding_type == 3 )
water	43:20	0:0	12	i_rest
op	43:27	0:0	12	>=
water	43:30	0:0	12	4
op	43:32	0:0	12	&&
water	43:35	0:0	12	(
water	43:37	0:0	12	i_picture_coding_type
op	43:59	0:0	12	==
water	43:62	0:0	12	2
op	43:64	0:0	12	||
water	44:36	0:0	12	i_picture_coding_type
op	44:58	0:0	12	==
water	44:61	0:0	12	3
water	44:63	0:0	12	)
stmts	45:16	53:16	11	
water	45:16	0:0	12	{
water	46:20	0:0	12	i_ffv
op	46:26	0:0	12	=
water	46:28	0:0	12	(
water	46:29	0:0	12	p
op	46:30	0:0	12	[
water	46:31	0:0	12	3
op	46:32	0:0	12	]
op	46:34	0:0	12	>>
water	46:37	0:0	12	2
water	46:38	0:0	12	)
op	46:39	0:0	12	&
water	46:40	0:0	12	0
water	46:41	0:0	12	x01
water	46:44	0:0	12	;
water	47:20	0:0	12	i_ffc
op	47:26	0:0	12	=
water	47:28	0:0	12	(
water	47:29	0:0	12	(
water	47:30	0:0	12	p
op	47:31	0:0	12	[
water	47:32	0:0	12	3
op	47:33	0:0	12	]
op	47:34	0:0	12	&
water	47:35	0:0	12	0
water	47:36	0:0	12	x03
water	47:39	0:0	12	)
op	47:41	0:0	12	<<
water	47:44	0:0	12	1
water	47:45	0:0	12	)
op	47:46	0:0	12	|
water	47:47	0:0	12	(
water	47:48	0:0	12	(
water	47:49	0:0	12	p
op	47:50	0:0	12	[
water	47:51	0:0	12	4
op	47:52	0:0	12	]
op	47:53	0:0	12	>>
water	47:55	0:0	12	7
water	47:56	0:0	12	)
op	47:57	0:0	12	&
water	47:58	0:0	12	0
water	47:59	0:0	12	x01
water	47:62	0:0	12	)
water	47:63	0:0	12	;
if	48:20	52:20	12	(i_rest > 4 && i_picture_coding_type == 3)
cond	48:24	48:63	13	i_rest > 4 && i_picture_coding_type == 3
water	48:24	0:0	14	i_rest
op	48:31	0:0	14	>
water	48:33	0:0	14	4
op	48:35	0:0	14	&&
water	48:38	0:0	14	i_picture_coding_type
op	48:60	0:0	14	==
water	48:63	0:0	14	3
stmts	49:20	52:20	13	
water	49:20	0:0	14	{
water	50:24	0:0	14	i_fbv
op	50:30	0:0	14	=
water	50:32	0:0	14	(
water	50:33	0:0	14	p
op	50:34	0:0	14	[
water	50:35	0:0	14	4
op	50:36	0:0	14	]
op	50:37	0:0	14	>>
water	50:39	0:0	14	6
water	50:40	0:0	14	)
op	50:41	0:0	14	&
water	50:42	0:0	14	0
water	50:43	0:0	14	x01
water	50:46	0:0	14	;
water	51:24	0:0	14	i_bfc
op	51:30	0:0	14	=
water	51:32	0:0	14	(
water	51:33	0:0	14	p
op	51:34	0:0	14	[
water	51:35	0:0	14	4
op	51:36	0:0	14	]
op	51:37	0:0	14	>>
water	51:39	0:0	14	3
water	51:40	0:0	14	)
op	51:41	0:0	14	&
water	51:42	0:0	14	0
water	51:43	0:0	14	x07
water	51:46	0:0	14	;
water	52:20	0:0	14	}
water	53:16	0:0	12	}
water	54:12	0:0	10	}
else	55:12	58:12	6
stmts	55:17	58:12	7	
if	55:17	58:12	8	(* p <= 0 xaf)
cond	55:21	55:28	9	* p <= 0 xaf
op	55:21	0:0	10	*
water	55:22	0:0	10	p
op	55:24	0:0	10	<=
water	55:27	0:0	10	0
water	55:28	0:0	10	xaf
stmts	56:12	58:12	9	
water	56:12	0:0	10	{
water	57:16	0:0	10	b_start_slice
op	57:30	0:0	10	=
water	57:32	0:0	10	1
water	57:33	0:0	10	;
water	58:12	0:0	10	}
water	59:8	0:0	6	}
water	60:4	0:0	4	}
for	61:4	83:4	2	(i = 0 ;i < i_count;i ++)
forinit	61:9	61:14	3	i = 0 ;
water	61:9	0:0	4	i
op	61:11	0:0	4	=
water	61:13	0:0	4	0
water	61:14	0:0	4	;
cond	61:16	61:20	3	i < i_count
water	61:16	0:0	4	i
op	61:18	0:0	4	<
water	61:20	0:0	4	i_count
forexpr	61:29	61:30	3	i ++
water	61:29	0:0	4	i
op	61:30	0:0	4	++
stmts	62:4	83:4	3	
water	62:4	0:0	4	{
decl	63:8	63:56	4	int	i_payload
op	63:32	0:0	4	=
call	63:34	63:55	5	__MIN
arg	63:41	63:46	6	i_max
water	63:41	0:0	7	i_max
arg	63:48	63:55	6	i_data
water	63:48	0:0	7	i_data
decl	64:8	64:52	4	block_t	*out
op	64:21	0:0	4	=
call	64:23	64:51	5	block_Alloc
arg	64:36	64:51	6	16+i_payload
water	64:36	0:0	7	16
op	64:39	0:0	7	+
water	64:41	0:0	7	i_payload
decl	66:8	71:76	4	uint32_t	h
op	66:24	0:0	4	=
water	66:26	0:0	4	(
water	66:28	0:0	4	i_temporal_ref
op	66:43	0:0	4	<<
water	66:46	0:0	4	16
water	66:49	0:0	4	)
op	66:50	0:0	4	|
water	67:26	0:0	4	(
water	67:28	0:0	4	b_sequence_start
op	67:45	0:0	4	<<
water	67:48	0:0	4	13
water	67:51	0:0	4	)
op	67:52	0:0	4	|
water	68:26	0:0	4	(
water	68:28	0:0	4	b_start_slice
op	68:42	0:0	4	<<
water	68:45	0:0	4	12
water	68:48	0:0	4	)
op	68:49	0:0	4	|
water	69:26	0:0	4	(
water	69:28	0:0	4	i
op	69:30	0:0	4	==
water	69:33	0:0	4	i_count
op	69:41	0:0	4	-
water	69:43	0:0	4	1
water	69:45	0:0	4	?
water	69:47	0:0	4	1
op	69:49	0:0	4	<<
water	69:52	0:0	4	11
water	69:55	0:0	4	:
water	69:57	0:0	4	0
water	69:59	0:0	4	)
op	69:60	0:0	4	|
water	70:26	0:0	4	(
water	70:28	0:0	4	i_picture_coding_type
op	70:50	0:0	4	<<
water	70:53	0:0	4	8
water	70:55	0:0	4	)
op	70:56	0:0	4	|
water	71:26	0:0	4	(
water	71:28	0:0	4	i_fbv
op	71:34	0:0	4	<<
water	71:37	0:0	4	7
water	71:39	0:0	4	)
op	71:40	0:0	4	|
water	71:41	0:0	4	(
water	71:43	0:0	4	i_bfc
op	71:49	0:0	4	<<
water	71:52	0:0	4	4
water	71:54	0:0	4	)
op	71:55	0:0	4	|
water	71:56	0:0	4	(
water	71:58	0:0	4	i_ffv
op	71:64	0:0	4	<<
water	71:67	0:0	4	3
water	71:69	0:0	4	)
op	71:70	0:0	4	|
water	71:71	0:0	4	i_ffc
call	73:8	74:77	4	rtp_packetize_common
arg	73:30	73:32	5	id
water	73:30	0:0	6	id
arg	73:34	73:37	5	out
water	73:34	0:0	6	out
arg	73:39	73:61	5	(i==i_count-1)?1:0
water	73:39	0:0	6	(
water	73:40	0:0	6	i
op	73:42	0:0	6	==
water	73:45	0:0	6	i_count
op	73:53	0:0	6	-
water	73:55	0:0	6	1
water	73:56	0:0	6	)
water	73:57	0:0	6	?
water	73:58	0:0	6	1
water	73:59	0:0	6	:
water	73:60	0:0	6	0
arg	74:26	74:77	5	in->i_pts>VLC_TS_INVALID?in->i_pts:in->i_dts
water	74:26	0:0	6	in
op	74:28	0:0	6	->
water	74:30	0:0	6	i_pts
op	74:36	0:0	6	>
water	74:38	0:0	6	VLC_TS_INVALID
water	74:53	0:0	6	?
water	74:55	0:0	6	in
op	74:57	0:0	6	->
water	74:59	0:0	6	i_pts
water	74:65	0:0	6	:
water	74:67	0:0	6	in
op	74:69	0:0	6	->
water	74:71	0:0	6	i_dts
water	74:78	0:0	4	;
call	75:8	75:39	4	SetDWBE
arg	75:17	75:35	5	out->p_buffer+12
water	75:17	0:0	6	out
op	75:20	0:0	6	->
water	75:22	0:0	6	p_buffer
op	75:31	0:0	6	+
water	75:33	0:0	6	12
arg	75:37	75:39	5	h
water	75:37	0:0	6	h
water	75:40	0:0	4	;
call	76:8	76:54	4	memcpy
arg	76:16	76:34	5	&out->p_buffer[16]
op	76:16	0:0	6	&
water	76:17	0:0	6	out
op	76:20	0:0	6	->
water	76:22	0:0	6	p_buffer
op	76:30	0:0	6	[
water	76:31	0:0	6	16
op	76:33	0:0	6	]
arg	76:36	76:42	5	p_data
water	76:36	0:0	6	p_data
arg	76:44	76:54	5	i_payload
water	76:44	0:0	6	i_payload
water	76:55	0:0	4	;
water	77:8	0:0	4	out
op	77:11	0:0	4	->
water	77:13	0:0	4	i_buffer
op	77:24	0:0	4	=
water	77:26	0:0	4	16
op	77:29	0:0	4	+
water	77:31	0:0	4	i_payload
water	77:40	0:0	4	;
water	78:8	0:0	4	out
op	78:11	0:0	4	->
water	78:13	0:0	4	i_dts
op	78:22	0:0	4	=
water	78:24	0:0	4	in
op	78:26	0:0	4	->
water	78:28	0:0	4	i_dts
op	78:34	0:0	4	+
water	78:36	0:0	4	i
op	78:38	0:0	4	*
water	78:40	0:0	4	in
op	78:42	0:0	4	->
water	78:44	0:0	4	i_length
op	78:53	0:0	4	/
water	78:55	0:0	4	i_count
water	78:62	0:0	4	;
water	79:8	0:0	4	out
op	79:11	0:0	4	->
water	79:13	0:0	4	i_length
op	79:22	0:0	4	=
water	79:24	0:0	4	in
op	79:26	0:0	4	->
water	79:28	0:0	4	i_length
op	79:37	0:0	4	/
water	79:39	0:0	4	i_count
water	79:46	0:0	4	;
call	80:8	80:36	4	rtp_packetize_send
arg	80:28	80:30	5	id
water	80:28	0:0	6	id
arg	80:32	80:36	5	out
water	80:32	0:0	6	out
water	80:37	0:0	4	;
water	81:8	0:0	4	p_data
op	81:15	0:0	4	+=
water	81:18	0:0	4	i_payload
water	81:27	0:0	4	;
water	82:8	0:0	4	i_data
op	82:15	0:0	4	-=
water	82:18	0:0	4	i_payload
water	82:27	0:0	4	;
water	83:4	0:0	4	}
call	84:4	84:20	2	block_Release
arg	84:18	84:20	3	in
water	84:18	0:0	4	in
water	84:21	0:0	2	;
return	85:4	85:22	2	VLC_SUCCESS
water	85:11	0:0	3	VLC_SUCCESS

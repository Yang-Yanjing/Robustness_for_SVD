func	2:0	25:0	0	int	Import_ASX
params	2:14	0:0	1	
param	2:16	2:37	2	vlc_object_t *	p_this
stmnts	0:0	24:22	1	
decl	4:4	4:40	2	demux_t	*p_demux
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	demux_t
op	4:32	0:0	2	*
water	4:33	0:0	2	)
water	4:34	0:0	2	p_this
decl	5:4	5:25	2	const uint8_t	*p_peek
call	6:4	6:27	2	CHECK_PEEK
arg	6:16	6:22	3	p_peek
water	6:16	0:0	4	p_peek
arg	6:24	6:27	3	10
water	6:24	0:0	4	10
water	6:28	0:0	2	;
water	8:4	0:0	2	p_peek
op	8:11	0:0	2	=
water	8:13	0:0	2	(
water	8:14	0:0	2	uint8_t
op	8:22	0:0	2	*
water	8:23	0:0	2	)
call	8:24	8:52	2	SkipBlanks
arg	8:35	8:49	3	(char*)p_peek
water	8:35	0:0	4	(
water	8:36	0:0	4	char
op	8:41	0:0	4	*
water	8:42	0:0	4	)
water	8:43	0:0	4	p_peek
arg	8:51	8:52	3	6
water	8:51	0:0	4	6
water	8:53	0:0	2	;
if	9:4	14:4	2	(POKE (p_peek ,"<asx" ,4 ) ||demux_IsPathExtension (p_demux ,".asx" ) ||demux_IsPathExtension (p_demux ,".wax" ) ||demux_IsPathExtension (p_demux ,".wvx" ) ||demux_IsForced (p_demux ,"asx-open" ))
cond	9:8	11:44	3	POKE (p_peek ,"<asx" ,4 ) ||demux_IsPathExtension (p_demux ,".asx" ) ||demux_IsPathExtension (p_demux ,".wax" ) ||demux_IsPathExtension (p_demux ,".wvx" ) ||demux_IsForced (p_demux ,"asx-open" )
call	9:8	9:32	4	POKE
arg	9:14	9:20	5	p_peek
water	9:14	0:0	6	p_peek
arg	9:22	9:28	5	"<asx"
water	9:22	0:0	6	"<asx"
arg	9:30	9:32	5	4
water	9:30	0:0	6	4
op	9:34	0:0	4	||
call	9:37	9:76	4	demux_IsPathExtension
arg	9:60	9:67	5	p_demux
water	9:60	0:0	6	p_demux
arg	9:69	9:76	5	".asx"
water	9:69	0:0	6	".asx"
op	9:78	0:0	4	||
call	10:8	10:47	4	demux_IsPathExtension
arg	10:31	10:38	5	p_demux
water	10:31	0:0	6	p_demux
arg	10:40	10:47	5	".wax"
water	10:40	0:0	6	".wax"
op	10:49	0:0	4	||
call	10:52	10:91	4	demux_IsPathExtension
arg	10:75	10:82	5	p_demux
water	10:75	0:0	6	p_demux
arg	10:84	10:91	5	".wvx"
water	10:84	0:0	6	".wvx"
op	10:93	0:0	4	||
call	11:8	11:44	4	demux_IsForced
arg	11:24	11:31	5	p_demux
water	11:24	0:0	6	p_demux
arg	11:33	11:44	5	"asx-open"
water	11:33	0:0	6	"asx-open"
stmts	12:4	14:4	3	
water	12:4	0:0	4	{
water	13:8	0:0	4	;
water	14:4	0:0	4	}
else	15:4	16:27	2
stmts	16:8	16:27	3	
return	16:8	16:27	4	VLC_EGENERIC
water	16:15	0:0	5	VLC_EGENERIC
call	17:4	17:56	2	STANDARD_DEMUX_INIT_MSG
arg	17:29	17:56	3	"found valid ASX playlist"
water	17:29	0:0	4	"found valid ASX playlist"
water	17:57	0:0	2	;
water	18:4	0:0	2	p_demux
op	18:11	0:0	2	->
water	18:13	0:0	2	p_sys
op	18:18	0:0	2	->
water	18:20	0:0	2	psz_prefix
op	18:31	0:0	2	=
call	18:33	18:53	2	FindPrefix
arg	18:45	18:53	3	p_demux
water	18:45	0:0	4	p_demux
water	18:54	0:0	2	;
water	19:4	0:0	2	p_demux
op	19:11	0:0	2	->
water	19:13	0:0	2	p_sys
op	19:18	0:0	2	->
water	19:20	0:0	2	psz_data
op	19:29	0:0	2	=
water	19:31	0:0	2	NULL
water	19:35	0:0	2	;
water	20:4	0:0	2	p_demux
op	20:11	0:0	2	->
water	20:13	0:0	2	p_sys
op	20:18	0:0	2	->
water	20:20	0:0	2	i_data_len
op	20:31	0:0	2	=
op	20:33	0:0	2	-
water	20:34	0:0	2	1
water	20:35	0:0	2	;
water	21:4	0:0	2	p_demux
op	21:11	0:0	2	->
water	21:13	0:0	2	p_sys
op	21:18	0:0	2	->
water	21:20	0:0	2	b_utf8
op	21:27	0:0	2	=
water	21:29	0:0	2	false
water	21:34	0:0	2	;
water	22:4	0:0	2	p_demux
op	22:11	0:0	2	->
water	22:13	0:0	2	p_sys
op	22:18	0:0	2	->
water	22:20	0:0	2	b_skip_ads
op	22:31	0:0	2	=
call	23:8	23:54	2	var_InheritBool
arg	23:25	23:32	3	p_demux
water	23:25	0:0	4	p_demux
arg	23:34	23:54	3	"playlist-skip-ads"
water	23:34	0:0	4	"playlist-skip-ads"
water	23:55	0:0	2	;
return	24:4	24:22	2	VLC_SUCCESS
water	24:11	0:0	3	VLC_SUCCESS

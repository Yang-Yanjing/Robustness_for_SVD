func	2:0	47:0	0	static int	oldmovie_lens_dust_effect
params	2:36	0:0	1	
param	2:38	2:56	2	filter_t *	p_filter
param	2:58	2:79	2	picture_t *	p_pic_out
stmnts	0:0	46:22	1	
decl	3:4	3:41	2	filter_sys_t	*p_sys
op	3:24	0:0	2	=
water	3:26	0:0	2	p_filter
op	3:34	0:0	2	->
water	3:36	0:0	2	p_sys
if	5:4	21:4	2	(p_sys -> i_dust_trigger <= p_sys -> i_cur_time)
cond	5:9	5:41	3	p_sys -> i_dust_trigger <= p_sys -> i_cur_time
water	5:9	0:0	4	p_sys
op	5:14	0:0	4	->
water	5:16	0:0	4	i_dust_trigger
op	5:31	0:0	4	<=
water	5:34	0:0	4	p_sys
op	5:39	0:0	4	->
water	5:41	0:0	4	i_cur_time
stmts	5:54	21:4	3	
water	5:54	0:0	4	{
for	6:8	17:12	4	( uint32_t i_d = 0 ;i_d < MAX_DUST;i_d ++)
forinit	0:0	6:30	5	 uint32_t i_d = 0 ;
decl	6:14	6:30	6	uint32_t	i_d
op	6:27	0:0	6	=
water	6:29	0:0	6	0
cond	6:32	6:38	5	i_d < MAX_DUST
water	6:32	0:0	6	i_d
op	6:36	0:0	6	<
water	6:38	0:0	6	MAX_DUST
forexpr	6:48	6:51	5	i_d ++
water	6:48	0:0	6	i_d
op	6:51	0:0	6	++
stmts	7:12	17:12	5	
if	7:12	17:12	6	(p_sys -> p_dust [ i_d ] == NULL)
cond	7:17	7:39	7	p_sys -> p_dust [ i_d ] == NULL
water	7:17	0:0	8	p_sys
op	7:22	0:0	8	->
water	7:24	0:0	8	p_dust
op	7:30	0:0	8	[
water	7:31	0:0	8	i_d
op	7:34	0:0	8	]
op	7:36	0:0	8	==
water	7:39	0:0	8	NULL
stmts	7:46	17:12	7	
water	7:46	0:0	8	{
water	9:16	0:0	8	p_sys
op	9:21	0:0	8	->
water	9:23	0:0	8	p_dust
op	9:29	0:0	8	[
water	9:30	0:0	8	i_d
op	9:33	0:0	8	]
op	9:35	0:0	8	=
call	9:37	9:63	8	calloc
arg	9:45	9:46	9	1
water	9:45	0:0	10	1
arg	9:48	9:63	9	sizeof(dust_t)
op	9:48	0:0	10	sizeof
water	9:54	0:0	10	(
water	9:55	0:0	10	dust_t
water	9:61	0:0	10	)
water	9:64	0:0	8	;
if	10:16	11:37	8	(unlikely (! p_sys -> p_dust [ i_d ] ))
cond	10:21	10:51	9	unlikely (! p_sys -> p_dust [ i_d ] )
call	10:21	10:51	10	unlikely
arg	10:31	10:51	11	!p_sys->p_dust[i_d]
op	10:31	0:0	12	!
water	10:32	0:0	12	p_sys
op	10:37	0:0	12	->
water	10:39	0:0	12	p_dust
op	10:45	0:0	12	[
water	10:46	0:0	12	i_d
op	10:49	0:0	12	]
stmts	11:20	11:37	9	
return	11:20	11:37	10	VLC_ENOMEM
water	11:27	0:0	11	VLC_ENOMEM
call	13:16	13:76	8	oldmovie_define_dust_location
arg	13:47	13:55	9	p_filter
water	13:47	0:0	10	p_filter
arg	13:57	13:76	9	p_sys->p_dust[i_d]
water	13:57	0:0	10	p_sys
op	13:62	0:0	10	->
water	13:64	0:0	10	p_dust
op	13:70	0:0	10	[
water	13:71	0:0	10	i_d
op	13:74	0:0	10	]
water	13:77	0:0	8	;
water	14:16	0:0	8	p_sys
op	14:21	0:0	8	->
water	14:23	0:0	8	p_dust
op	14:29	0:0	8	[
water	14:30	0:0	8	i_d
op	14:33	0:0	8	]
op	14:34	0:0	8	->
water	14:36	0:0	8	i_width
op	14:44	0:0	8	=
call	14:46	14:77	8	MOD
arg	14:51	14:73	9	(int32_t)vlc_mrand48()
water	14:51	0:0	10	(
water	14:52	0:0	10	int32_t
water	14:59	0:0	10	)
call	14:60	14:72	10	vlc_mrand48
arg	14:75	14:77	9	5
water	14:75	0:0	10	5
op	14:79	0:0	8	+
water	14:81	0:0	8	1
water	14:82	0:0	8	;
water	15:16	0:0	8	p_sys
op	15:21	0:0	8	->
water	15:23	0:0	8	p_dust
op	15:29	0:0	8	[
water	15:30	0:0	8	i_d
op	15:33	0:0	8	]
op	15:34	0:0	8	->
water	15:36	0:0	8	i_intensity
op	15:48	0:0	8	=
water	15:50	0:0	8	(
water	15:51	0:0	8	unsigned
water	15:59	0:0	8	)
call	15:60	15:72	8	vlc_mrand48
op	15:74	0:0	8	%
water	15:76	0:0	8	30
op	15:79	0:0	8	+
water	15:81	0:0	8	30
water	15:83	0:0	8	;
break	16:16	16:21	8	
water	17:12	0:0	8	}
water	18:8	0:0	4	p_sys
op	18:13	0:0	4	->
water	18:15	0:0	4	i_dust_trigger
op	18:30	0:0	4	=
water	18:32	0:0	4	p_sys
op	18:37	0:0	4	->
water	18:39	0:0	4	i_cur_time
op	19:30	0:0	4	+
water	19:32	0:0	4	(
water	19:33	0:0	4	uint64_t
water	19:41	0:0	4	)
call	19:42	19:54	4	vlc_mrand48
op	19:56	0:0	4	%
water	19:58	0:0	4	DUST_GENERATOR_PERIOD
op	20:30	0:0	4	+
water	20:32	0:0	4	DUST_GENERATOR_PERIOD
op	20:54	0:0	4	/
water	20:56	0:0	4	2
water	20:57	0:0	4	;
water	21:4	0:0	4	}
for	23:4	45:8	2	( uint32_t i_d = 0 ;i_d < MAX_DUST;i_d ++)
forinit	0:0	23:26	3	 uint32_t i_d = 0 ;
decl	23:10	23:26	4	uint32_t	i_d
op	23:23	0:0	4	=
water	23:25	0:0	4	0
cond	23:28	23:34	3	i_d < MAX_DUST
water	23:28	0:0	4	i_d
op	23:32	0:0	4	<
water	23:34	0:0	4	MAX_DUST
forexpr	23:44	23:47	3	i_d ++
water	23:44	0:0	4	i_d
op	23:47	0:0	4	++
stmts	24:8	45:8	3	
if	24:8	45:8	4	(p_sys -> p_dust [ i_d ])
cond	24:13	24:30	5	p_sys -> p_dust [ i_d ]
water	24:13	0:0	6	p_sys
op	24:18	0:0	6	->
water	24:20	0:0	6	p_dust
op	24:26	0:0	6	[
water	24:27	0:0	6	i_d
op	24:30	0:0	6	]
stmts	24:34	45:8	5	
water	24:34	0:0	6	{
if	26:12	36:12	6	(p_sys -> p_dust [ i_d ] -> i_stop_trigger <= p_sys -> i_cur_time)
cond	26:17	26:62	7	p_sys -> p_dust [ i_d ] -> i_stop_trigger <= p_sys -> i_cur_time
water	26:17	0:0	8	p_sys
op	26:22	0:0	8	->
water	26:24	0:0	8	p_dust
op	26:30	0:0	8	[
water	26:31	0:0	8	i_d
op	26:34	0:0	8	]
op	26:35	0:0	8	->
water	26:37	0:0	8	i_stop_trigger
op	26:52	0:0	8	<=
water	26:55	0:0	8	p_sys
op	26:60	0:0	8	->
water	26:62	0:0	8	i_cur_time
stmts	26:75	36:12	7	
water	26:75	0:0	8	{
if	28:16	30:81	8	(( unsigned )vlc_mrand48 ( ) % 2 == 0)
cond	28:21	28:52	9	( unsigned )vlc_mrand48 ( ) % 2 == 0
water	28:21	0:0	10	(
water	28:22	0:0	10	unsigned
water	28:30	0:0	10	)
call	28:31	28:43	10	vlc_mrand48
op	28:45	0:0	10	%
water	28:47	0:0	10	2
op	28:49	0:0	10	==
water	28:52	0:0	10	0
stmts	30:20	30:81	9	
call	30:20	30:80	10	oldmovie_define_dust_location
arg	30:51	30:59	11	p_filter
water	30:51	0:0	12	p_filter
arg	30:61	30:80	11	p_sys->p_dust[i_d]
water	30:61	0:0	12	p_sys
op	30:66	0:0	12	->
water	30:68	0:0	12	p_dust
op	30:74	0:0	12	[
water	30:75	0:0	12	i_d
op	30:78	0:0	12	]
water	30:81	0:0	10	;
else	31:16	35:16	8
stmts	31:21	35:16	9	
water	31:21	0:0	10	{
call	33:20	33:49	10	FREENULL
arg	33:30	33:49	11	p_sys->p_dust[i_d]
water	33:30	0:0	12	p_sys
op	33:35	0:0	12	->
water	33:37	0:0	12	p_dust
op	33:43	0:0	12	[
water	33:44	0:0	12	i_d
op	33:47	0:0	12	]
water	33:50	0:0	10	;
continue	34:20	34:28	10	
water	35:16	0:0	10	}
water	36:12	0:0	8	}
for	38:12	44:70	6	( int32_t i_y = - p_sys -> p_dust [ i_d ] -> i_width + 1 ;i_y < p_sys -> p_dust [ i_d ] -> i_width;i_y ++)
forinit	0:0	38:64	7	 int32_t i_y = - p_sys -> p_dust [ i_d ] -> i_width + 1 ;
decl	38:18	38:64	8	int32_t	i_y
op	38:30	0:0	8	=
op	38:32	0:0	8	-
water	38:33	0:0	8	p_sys
op	38:38	0:0	8	->
water	38:40	0:0	8	p_dust
op	38:46	0:0	8	[
water	38:47	0:0	8	i_d
op	38:50	0:0	8	]
op	38:51	0:0	8	->
water	38:53	0:0	8	i_width
op	38:61	0:0	8	+
water	38:63	0:0	8	1
cond	38:66	38:92	7	i_y < p_sys -> p_dust [ i_d ] -> i_width
water	38:66	0:0	8	i_y
op	38:70	0:0	8	<
water	38:72	0:0	8	p_sys
op	38:77	0:0	8	->
water	38:79	0:0	8	p_dust
op	38:85	0:0	8	[
water	38:86	0:0	8	i_d
op	38:89	0:0	8	]
op	38:90	0:0	8	->
water	38:92	0:0	8	i_width
forexpr	38:101	38:104	7	i_y ++
water	38:101	0:0	8	i_y
op	38:104	0:0	8	++
stmts	39:16	44:70	7	
for	39:16	44:70	8	( int32_t i_x = - p_sys -> p_dust [ i_d ] -> i_width + 1 ;i_x < p_sys -> p_dust [ i_d ] -> i_width;i_x ++)
forinit	0:0	39:68	9	 int32_t i_x = - p_sys -> p_dust [ i_d ] -> i_width + 1 ;
decl	39:22	39:68	10	int32_t	i_x
op	39:34	0:0	10	=
op	39:36	0:0	10	-
water	39:37	0:0	10	p_sys
op	39:42	0:0	10	->
water	39:44	0:0	10	p_dust
op	39:50	0:0	10	[
water	39:51	0:0	10	i_d
op	39:54	0:0	10	]
op	39:55	0:0	10	->
water	39:57	0:0	10	i_width
op	39:65	0:0	10	+
water	39:67	0:0	10	1
cond	39:70	39:96	9	i_x < p_sys -> p_dust [ i_d ] -> i_width
water	39:70	0:0	10	i_x
op	39:74	0:0	10	<
water	39:76	0:0	10	p_sys
op	39:81	0:0	10	->
water	39:83	0:0	10	p_dust
op	39:89	0:0	10	[
water	39:90	0:0	10	i_d
op	39:93	0:0	10	]
op	39:94	0:0	10	->
water	39:96	0:0	10	i_width
forexpr	39:105	39:108	9	i_x ++
water	39:105	0:0	10	i_x
op	39:108	0:0	10	++
stmts	40:20	44:70	9	
if	40:20	44:70	10	(i_x * i_x + i_y * i_y <= p_sys -> p_dust [ i_d ] -> i_width * p_sys -> p_dust [ i_d ] -> i_width)
cond	40:25	40:100	11	i_x * i_x + i_y * i_y <= p_sys -> p_dust [ i_d ] -> i_width * p_sys -> p_dust [ i_d ] -> i_width
water	40:25	0:0	12	i_x
op	40:29	0:0	12	*
water	40:31	0:0	12	i_x
op	40:35	0:0	12	+
water	40:37	0:0	12	i_y
op	40:41	0:0	12	*
water	40:43	0:0	12	i_y
op	40:47	0:0	12	<=
water	40:50	0:0	12	p_sys
op	40:55	0:0	12	->
water	40:57	0:0	12	p_dust
op	40:63	0:0	12	[
water	40:64	0:0	12	i_d
op	40:67	0:0	12	]
op	40:68	0:0	12	->
water	40:70	0:0	12	i_width
op	40:78	0:0	12	*
water	40:80	0:0	12	p_sys
op	40:85	0:0	12	->
water	40:87	0:0	12	p_dust
op	40:93	0:0	12	[
water	40:94	0:0	12	i_d
op	40:97	0:0	12	]
op	40:98	0:0	12	->
water	40:100	0:0	12	i_width
stmts	41:24	44:70	11	
call	41:24	44:69	12	CHECK_N_DARKEN_PIXEL
arg	41:46	41:75	13	i_x+p_sys->p_dust[i_d]->i_x
water	41:46	0:0	14	i_x
op	41:50	0:0	14	+
water	41:52	0:0	14	p_sys
op	41:57	0:0	14	->
water	41:59	0:0	14	p_dust
op	41:65	0:0	14	[
water	41:66	0:0	14	i_d
op	41:69	0:0	14	]
op	41:70	0:0	14	->
water	41:72	0:0	14	i_x
arg	42:46	42:75	13	i_y+p_sys->p_dust[i_d]->i_y
water	42:46	0:0	14	i_y
op	42:50	0:0	14	+
water	42:52	0:0	14	p_sys
op	42:57	0:0	14	->
water	42:59	0:0	14	p_dust
op	42:65	0:0	14	[
water	42:66	0:0	14	i_d
op	42:69	0:0	14	]
op	42:70	0:0	14	->
water	42:72	0:0	14	i_y
arg	43:46	43:77	13	p_sys->p_dust[i_d]->i_intensity
water	43:46	0:0	14	p_sys
op	43:51	0:0	14	->
water	43:53	0:0	14	p_dust
op	43:59	0:0	14	[
water	43:60	0:0	14	i_d
op	43:63	0:0	14	]
op	43:64	0:0	14	->
water	43:66	0:0	14	i_intensity
arg	44:46	44:69	13	&p_pic_out->p[Y_PLANE]
op	44:46	0:0	14	&
water	44:47	0:0	14	p_pic_out
op	44:56	0:0	14	->
water	44:58	0:0	14	p
op	44:59	0:0	14	[
water	44:60	0:0	14	Y_PLANE
op	44:67	0:0	14	]
water	44:70	0:0	12	;
water	45:8	0:0	6	}
return	46:4	46:22	2	VLC_SUCCESS
water	46:11	0:0	3	VLC_SUCCESS

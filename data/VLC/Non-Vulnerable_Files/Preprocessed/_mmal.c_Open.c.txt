decl	1:7	1:60	0	void	show_background
water	1:27	0:0	0	(
water	1:28	0:0	0	vout_display_t
op	1:43	0:0	0	*
water	1:44	0:0	0	vd
water	1:46	0:0	0	,
water	1:48	0:0	0	bool
water	1:53	0:0	0	enable
water	1:59	0:0	0	)
func	2:0	123:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	object
stmnts	0:0	122:14	1	
decl	4:4	4:49	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:41	0:0	2	*
water	4:42	0:0	2	)
water	4:43	0:0	2	object
decl	5:4	5:27	2	vout_display_sys_t	*sys
decl	6:4	6:40	2	uint32_t	buffer_pitch
water	6:25	0:0	2	,
decl	6:4	6:40	2	uint32_t	buffer_height
decl	7:4	7:30	2	vout_display_place_t	place
decl	8:4	8:39	2	MMAL_DISPLAYREGION_T	display_region
decl	9:4	9:23	2	uint32_t	offsets[3]
decl	10:4	10:24	2	MMAL_STATUS_T	status
decl	11:4	11:25	2	int	ret
op	11:12	0:0	2	=
water	11:14	0:0	2	VLC_SUCCESS
water	12:4	0:0	2	unsigned
water	12:13	0:0	2	i
water	12:14	0:0	2	;
water	13:4	0:0	2	sys
op	13:8	0:0	2	=
call	13:10	13:53	2	calloc
arg	13:17	13:18	3	1
water	13:17	0:0	4	1
arg	13:20	13:53	3	sizeof(structvout_display_sys_t)
op	13:20	0:0	4	sizeof
water	13:26	0:0	4	(
water	13:27	0:0	4	struct
water	13:34	0:0	4	vout_display_sys_t
water	13:52	0:0	4	)
water	13:54	0:0	2	;
if	14:4	15:25	2	(! sys)
cond	14:8	14:9	3	! sys
op	14:8	0:0	4	!
water	14:9	0:0	4	sys
stmts	15:8	15:25	3	
return	15:8	15:25	4	VLC_ENOMEM
water	15:15	0:0	5	VLC_ENOMEM
water	16:4	0:0	2	vd
op	16:6	0:0	2	->
water	16:8	0:0	2	sys
op	16:12	0:0	2	=
water	16:14	0:0	2	sys
water	16:17	0:0	2	;
water	17:4	0:0	2	sys
op	17:7	0:0	2	->
water	17:9	0:0	2	layer
op	17:15	0:0	2	=
call	17:17	17:55	2	var_InheritInteger
arg	17:36	17:38	3	vd
water	17:36	0:0	4	vd
arg	17:40	17:55	3	MMAL_LAYER_NAME
water	17:40	0:0	4	MMAL_LAYER_NAME
water	17:56	0:0	2	;
call	18:4	18:18	2	bcm_host_init
water	18:19	0:0	2	;
water	19:4	0:0	2	vd
op	19:6	0:0	2	->
water	19:8	0:0	2	info
op	19:12	0:0	2	.
water	19:13	0:0	2	has_hide_mouse
op	19:28	0:0	2	=
water	19:30	0:0	2	true
water	19:34	0:0	2	;
water	20:4	0:0	2	sys
op	20:7	0:0	2	->
water	20:9	0:0	2	opaque
op	20:16	0:0	2	=
water	20:18	0:0	2	vd
op	20:20	0:0	2	->
water	20:22	0:0	2	fmt
op	20:25	0:0	2	.
water	20:26	0:0	2	i_chroma
op	20:35	0:0	2	==
water	20:38	0:0	2	VLC_CODEC_MMAL_OPAQUE
water	20:59	0:0	2	;
if	21:4	22:41	2	(! sys -> opaque)
cond	21:8	21:14	3	! sys -> opaque
op	21:8	0:0	4	!
water	21:9	0:0	4	sys
op	21:12	0:0	4	->
water	21:14	0:0	4	opaque
stmts	22:8	22:41	3	
water	22:8	0:0	4	vd
op	22:10	0:0	4	->
water	22:12	0:0	4	fmt
op	22:15	0:0	4	.
water	22:16	0:0	4	i_chroma
op	22:25	0:0	4	=
water	22:27	0:0	4	VLC_CODEC_I420
water	22:41	0:0	4	;
water	23:4	0:0	2	vd
op	23:6	0:0	2	->
water	23:8	0:0	2	fmt
op	23:11	0:0	2	.
water	23:12	0:0	2	i_sar_num
op	23:22	0:0	2	=
water	23:24	0:0	2	vd
op	23:26	0:0	2	->
water	23:28	0:0	2	source
op	23:34	0:0	2	.
water	23:35	0:0	2	i_sar_num
water	23:44	0:0	2	;
water	24:4	0:0	2	vd
op	24:6	0:0	2	->
water	24:8	0:0	2	fmt
op	24:11	0:0	2	.
water	24:12	0:0	2	i_sar_den
op	24:22	0:0	2	=
water	24:24	0:0	2	vd
op	24:26	0:0	2	->
water	24:28	0:0	2	source
op	24:34	0:0	2	.
water	24:35	0:0	2	i_sar_den
water	24:44	0:0	2	;
water	25:4	0:0	2	buffer_pitch
op	25:17	0:0	2	=
call	25:19	25:44	2	align
arg	25:25	25:40	3	vd->fmt.i_width
water	25:25	0:0	4	vd
op	25:27	0:0	4	->
water	25:29	0:0	4	fmt
op	25:32	0:0	4	.
water	25:33	0:0	4	i_width
arg	25:42	25:44	3	32
water	25:42	0:0	4	32
water	25:45	0:0	2	;
water	26:4	0:0	2	buffer_height
op	26:18	0:0	2	=
call	26:20	26:46	2	align
arg	26:26	26:42	3	vd->fmt.i_height
water	26:26	0:0	4	vd
op	26:28	0:0	4	->
water	26:30	0:0	4	fmt
op	26:33	0:0	4	.
water	26:34	0:0	4	i_height
arg	26:44	26:46	3	16
water	26:44	0:0	4	16
water	26:47	0:0	2	;
water	27:4	0:0	2	sys
op	27:7	0:0	2	->
water	27:9	0:0	2	buffer_size
op	27:21	0:0	2	=
water	27:23	0:0	2	3
op	27:25	0:0	2	*
water	27:27	0:0	2	buffer_pitch
op	27:40	0:0	2	*
water	27:42	0:0	2	buffer_height
op	27:56	0:0	2	/
water	27:58	0:0	2	2
water	27:59	0:0	2	;
water	28:4	0:0	2	status
op	28:11	0:0	2	=
call	28:13	28:89	2	mmal_component_create
arg	28:35	28:72	3	MMAL_COMPONENT_DEFAULT_VIDEO_RENDERER
water	28:35	0:0	4	MMAL_COMPONENT_DEFAULT_VIDEO_RENDERER
arg	28:74	28:89	3	&sys->component
op	28:74	0:0	4	&
water	28:75	0:0	4	sys
op	28:78	0:0	4	->
water	28:80	0:0	4	component
water	28:90	0:0	2	;
if	29:4	34:4	2	(status != MMAL_SUCCESS)
cond	29:8	29:18	3	status != MMAL_SUCCESS
water	29:8	0:0	4	status
op	29:15	0:0	4	!=
water	29:18	0:0	4	MMAL_SUCCESS
stmts	29:32	34:4	3	
water	29:32	0:0	4	{
call	30:8	31:100	4	msg_Err
arg	30:16	30:18	5	vd
water	30:16	0:0	6	vd
arg	30:20	30:78	5	"Failed to create MMAL component %s (status=%"PRIx32" %s)"
water	30:20	0:0	6	"Failed to create MMAL component %s (status=%"
water	30:66	0:0	6	PRIx32
water	30:72	0:0	6	" %s)"
arg	31:24	31:61	5	MMAL_COMPONENT_DEFAULT_VIDEO_RENDERER
water	31:24	0:0	6	MMAL_COMPONENT_DEFAULT_VIDEO_RENDERER
arg	31:63	31:69	5	status
water	31:63	0:0	6	status
arg	31:71	31:100	5	mmal_status_to_string(status)
call	31:71	31:99	6	mmal_status_to_string
arg	31:93	31:99	7	status
water	31:93	0:0	8	status
water	31:101	0:0	4	;
water	32:8	0:0	4	ret
op	32:12	0:0	4	=
water	32:14	0:0	4	VLC_EGENERIC
water	32:26	0:0	4	;
goto	33:8	33:16	4	out
water	33:13	0:0	5	out
water	34:4	0:0	4	}
water	35:4	0:0	2	sys
op	35:7	0:0	2	->
water	35:9	0:0	2	component
op	35:18	0:0	2	->
water	35:20	0:0	2	control
op	35:27	0:0	2	->
water	35:29	0:0	2	userdata
op	35:38	0:0	2	=
water	35:40	0:0	2	(
water	35:41	0:0	2	struct
water	35:48	0:0	2	MMAL_PORT_USERDATA_T
op	35:69	0:0	2	*
water	35:70	0:0	2	)
water	35:71	0:0	2	vd
water	35:73	0:0	2	;
water	36:4	0:0	2	status
op	36:11	0:0	2	=
call	36:13	36:70	2	mmal_port_enable
arg	36:30	36:53	3	sys->component->control
water	36:30	0:0	4	sys
op	36:33	0:0	4	->
water	36:35	0:0	4	component
op	36:44	0:0	4	->
water	36:46	0:0	4	control
arg	36:55	36:70	3	control_port_cb
water	36:55	0:0	4	control_port_cb
water	36:71	0:0	2	;
if	37:4	42:4	2	(status != MMAL_SUCCESS)
cond	37:8	37:18	3	status != MMAL_SUCCESS
water	37:8	0:0	4	status
op	37:15	0:0	4	!=
water	37:18	0:0	4	MMAL_SUCCESS
stmts	37:32	42:4	3	
water	37:32	0:0	4	{
call	38:8	39:92	4	msg_Err
arg	38:16	38:18	5	vd
water	38:16	0:0	6	vd
arg	38:20	38:76	5	"Failed to enable control port %s (status=%"PRIx32" %s)"
water	38:20	0:0	6	"Failed to enable control port %s (status=%"
water	38:64	0:0	6	PRIx32
water	38:70	0:0	6	" %s)"
arg	39:24	39:53	5	sys->component->control->name
water	39:24	0:0	6	sys
op	39:27	0:0	6	->
water	39:29	0:0	6	component
op	39:38	0:0	6	->
water	39:40	0:0	6	control
op	39:47	0:0	6	->
water	39:49	0:0	6	name
arg	39:55	39:61	5	status
water	39:55	0:0	6	status
arg	39:63	39:92	5	mmal_status_to_string(status)
call	39:63	39:91	6	mmal_status_to_string
arg	39:85	39:91	7	status
water	39:85	0:0	8	status
water	39:93	0:0	4	;
water	40:8	0:0	4	ret
op	40:12	0:0	4	=
water	40:14	0:0	4	VLC_EGENERIC
water	40:26	0:0	4	;
goto	41:8	41:16	4	out
water	41:13	0:0	5	out
water	42:4	0:0	4	}
water	43:4	0:0	2	sys
op	43:7	0:0	2	->
water	43:9	0:0	2	input
op	43:15	0:0	2	=
water	43:17	0:0	2	sys
op	43:20	0:0	2	->
water	43:22	0:0	2	component
op	43:31	0:0	2	->
water	43:33	0:0	2	input
op	43:38	0:0	2	[
water	43:39	0:0	2	0
op	43:40	0:0	2	]
water	43:41	0:0	2	;
water	44:4	0:0	2	sys
op	44:7	0:0	2	->
water	44:9	0:0	2	input
op	44:14	0:0	2	->
water	44:16	0:0	2	userdata
op	44:25	0:0	2	=
water	44:27	0:0	2	(
water	44:28	0:0	2	struct
water	44:35	0:0	2	MMAL_PORT_USERDATA_T
op	44:56	0:0	2	*
water	44:57	0:0	2	)
water	44:58	0:0	2	vd
water	44:60	0:0	2	;
if	45:4	46:59	2	(sys -> opaque)
cond	45:8	45:13	3	sys -> opaque
water	45:8	0:0	4	sys
op	45:11	0:0	4	->
water	45:13	0:0	4	opaque
stmts	46:8	46:59	3	
water	46:8	0:0	4	sys
op	46:11	0:0	4	->
water	46:13	0:0	4	input
op	46:18	0:0	4	->
water	46:20	0:0	4	format
op	46:26	0:0	4	->
water	46:28	0:0	4	encoding
op	46:37	0:0	4	=
water	46:39	0:0	4	MMAL_ENCODING_OPAQUE
water	46:59	0:0	4	;
else	47:4	48:57	2
stmts	48:8	48:57	3	
water	48:8	0:0	4	sys
op	48:11	0:0	4	->
water	48:13	0:0	4	input
op	48:18	0:0	4	->
water	48:20	0:0	4	format
op	48:26	0:0	4	->
water	48:28	0:0	4	encoding
op	48:37	0:0	4	=
water	48:39	0:0	4	MMAL_ENCODING_I420
water	48:57	0:0	4	;
water	49:4	0:0	2	sys
op	49:7	0:0	2	->
water	49:9	0:0	2	input
op	49:14	0:0	2	->
water	49:16	0:0	2	format
op	49:22	0:0	2	->
water	49:24	0:0	2	es
op	49:26	0:0	2	->
water	49:28	0:0	2	video
op	49:33	0:0	2	.
water	49:34	0:0	2	width
op	49:40	0:0	2	=
water	49:42	0:0	2	vd
op	49:44	0:0	2	->
water	49:46	0:0	2	fmt
op	49:49	0:0	2	.
water	49:50	0:0	2	i_width
water	49:57	0:0	2	;
water	50:4	0:0	2	sys
op	50:7	0:0	2	->
water	50:9	0:0	2	input
op	50:14	0:0	2	->
water	50:16	0:0	2	format
op	50:22	0:0	2	->
water	50:24	0:0	2	es
op	50:26	0:0	2	->
water	50:28	0:0	2	video
op	50:33	0:0	2	.
water	50:34	0:0	2	height
op	50:41	0:0	2	=
water	50:43	0:0	2	vd
op	50:45	0:0	2	->
water	50:47	0:0	2	fmt
op	50:50	0:0	2	.
water	50:51	0:0	2	i_height
water	50:59	0:0	2	;
water	51:4	0:0	2	sys
op	51:7	0:0	2	->
water	51:9	0:0	2	input
op	51:14	0:0	2	->
water	51:16	0:0	2	format
op	51:22	0:0	2	->
water	51:24	0:0	2	es
op	51:26	0:0	2	->
water	51:28	0:0	2	video
op	51:33	0:0	2	.
water	51:34	0:0	2	crop
op	51:38	0:0	2	.
water	51:39	0:0	2	x
op	51:41	0:0	2	=
water	51:43	0:0	2	0
water	51:44	0:0	2	;
water	52:4	0:0	2	sys
op	52:7	0:0	2	->
water	52:9	0:0	2	input
op	52:14	0:0	2	->
water	52:16	0:0	2	format
op	52:22	0:0	2	->
water	52:24	0:0	2	es
op	52:26	0:0	2	->
water	52:28	0:0	2	video
op	52:33	0:0	2	.
water	52:34	0:0	2	crop
op	52:38	0:0	2	.
water	52:39	0:0	2	y
op	52:41	0:0	2	=
water	52:43	0:0	2	0
water	52:44	0:0	2	;
water	53:4	0:0	2	sys
op	53:7	0:0	2	->
water	53:9	0:0	2	input
op	53:14	0:0	2	->
water	53:16	0:0	2	format
op	53:22	0:0	2	->
water	53:24	0:0	2	es
op	53:26	0:0	2	->
water	53:28	0:0	2	video
op	53:33	0:0	2	.
water	53:34	0:0	2	crop
op	53:38	0:0	2	.
water	53:39	0:0	2	width
op	53:45	0:0	2	=
water	53:47	0:0	2	vd
op	53:49	0:0	2	->
water	53:51	0:0	2	fmt
op	53:54	0:0	2	.
water	53:55	0:0	2	i_width
water	53:62	0:0	2	;
water	54:4	0:0	2	sys
op	54:7	0:0	2	->
water	54:9	0:0	2	input
op	54:14	0:0	2	->
water	54:16	0:0	2	format
op	54:22	0:0	2	->
water	54:24	0:0	2	es
op	54:26	0:0	2	->
water	54:28	0:0	2	video
op	54:33	0:0	2	.
water	54:34	0:0	2	crop
op	54:38	0:0	2	.
water	54:39	0:0	2	height
op	54:46	0:0	2	=
water	54:48	0:0	2	vd
op	54:50	0:0	2	->
water	54:52	0:0	2	fmt
op	54:55	0:0	2	.
water	54:56	0:0	2	i_height
water	54:64	0:0	2	;
water	55:4	0:0	2	sys
op	55:7	0:0	2	->
water	55:9	0:0	2	input
op	55:14	0:0	2	->
water	55:16	0:0	2	format
op	55:22	0:0	2	->
water	55:24	0:0	2	es
op	55:26	0:0	2	->
water	55:28	0:0	2	video
op	55:33	0:0	2	.
water	55:34	0:0	2	par
op	55:37	0:0	2	.
water	55:38	0:0	2	num
op	55:42	0:0	2	=
water	55:44	0:0	2	vd
op	55:46	0:0	2	->
water	55:48	0:0	2	source
op	55:54	0:0	2	.
water	55:55	0:0	2	i_sar_num
water	55:64	0:0	2	;
water	56:4	0:0	2	sys
op	56:7	0:0	2	->
water	56:9	0:0	2	input
op	56:14	0:0	2	->
water	56:16	0:0	2	format
op	56:22	0:0	2	->
water	56:24	0:0	2	es
op	56:26	0:0	2	->
water	56:28	0:0	2	video
op	56:33	0:0	2	.
water	56:34	0:0	2	par
op	56:37	0:0	2	.
water	56:38	0:0	2	den
op	56:42	0:0	2	=
water	56:44	0:0	2	vd
op	56:46	0:0	2	->
water	56:48	0:0	2	source
op	56:54	0:0	2	.
water	56:55	0:0	2	i_sar_den
water	56:64	0:0	2	;
water	57:4	0:0	2	status
op	57:11	0:0	2	=
call	57:13	57:47	2	mmal_port_format_commit
arg	57:37	57:47	3	sys->input
water	57:37	0:0	4	sys
op	57:40	0:0	4	->
water	57:42	0:0	4	input
water	57:48	0:0	2	;
if	58:4	63:4	2	(status != MMAL_SUCCESS)
cond	58:8	58:18	3	status != MMAL_SUCCESS
water	58:8	0:0	4	status
op	58:15	0:0	4	!=
water	58:18	0:0	4	MMAL_SUCCESS
stmts	58:32	63:4	3	
water	58:32	0:0	4	{
call	59:8	60:79	4	msg_Err
arg	59:16	59:18	5	vd
water	59:16	0:0	6	vd
arg	59:20	59:85	5	"Failed to commit format for input port %s (status=%"PRIx32" %s)"
water	59:20	0:0	6	"Failed to commit format for input port %s (status=%"
water	59:73	0:0	6	PRIx32
water	59:79	0:0	6	" %s)"
arg	60:24	60:40	5	sys->input->name
water	60:24	0:0	6	sys
op	60:27	0:0	6	->
water	60:29	0:0	6	input
op	60:34	0:0	6	->
water	60:36	0:0	6	name
arg	60:42	60:48	5	status
water	60:42	0:0	6	status
arg	60:50	60:79	5	mmal_status_to_string(status)
call	60:50	60:78	6	mmal_status_to_string
arg	60:72	60:78	7	status
water	60:72	0:0	8	status
water	60:80	0:0	4	;
water	61:8	0:0	4	ret
op	61:12	0:0	4	=
water	61:14	0:0	4	VLC_EGENERIC
water	61:26	0:0	4	;
goto	62:8	62:16	4	out
water	62:13	0:0	5	out
water	63:4	0:0	4	}
water	64:4	0:0	2	sys
op	64:7	0:0	2	->
water	64:9	0:0	2	input
op	64:14	0:0	2	->
water	64:16	0:0	2	buffer_size
op	64:28	0:0	2	=
water	64:30	0:0	2	sys
op	64:33	0:0	2	->
water	64:35	0:0	2	input
op	64:40	0:0	2	->
water	64:42	0:0	2	buffer_size_recommended
water	64:65	0:0	2	;
call	65:4	65:65	2	vout_display_PlacePicture
arg	65:30	65:36	3	&place
op	65:30	0:0	4	&
water	65:31	0:0	4	place
arg	65:38	65:49	3	&vd->source
op	65:38	0:0	4	&
water	65:39	0:0	4	vd
op	65:41	0:0	4	->
water	65:43	0:0	4	source
arg	65:51	65:58	3	vd->cfg
water	65:51	0:0	4	vd
op	65:53	0:0	4	->
water	65:55	0:0	4	cfg
arg	65:60	65:65	3	false
water	65:60	0:0	4	false
water	65:66	0:0	2	;
water	66:4	0:0	2	display_region
op	66:18	0:0	2	.
water	66:19	0:0	2	hdr
op	66:22	0:0	2	.
water	66:23	0:0	2	id
op	66:26	0:0	2	=
water	66:28	0:0	2	MMAL_PARAMETER_DISPLAYREGION
water	66:56	0:0	2	;
water	67:4	0:0	2	display_region
op	67:18	0:0	2	.
water	67:19	0:0	2	hdr
op	67:22	0:0	2	.
water	67:23	0:0	2	size
op	67:28	0:0	2	=
op	67:30	0:0	2	sizeof
water	67:36	0:0	2	(
water	67:37	0:0	2	MMAL_DISPLAYREGION_T
water	67:57	0:0	2	)
water	67:58	0:0	2	;
water	68:4	0:0	2	display_region
op	68:18	0:0	2	.
water	68:19	0:0	2	fullscreen
op	68:30	0:0	2	=
water	68:32	0:0	2	MMAL_FALSE
water	68:42	0:0	2	;
water	69:4	0:0	2	display_region
op	69:18	0:0	2	.
water	69:19	0:0	2	src_rect
op	69:27	0:0	2	.
water	69:28	0:0	2	x
op	69:30	0:0	2	=
water	69:32	0:0	2	vd
op	69:34	0:0	2	->
water	69:36	0:0	2	fmt
op	69:39	0:0	2	.
water	69:40	0:0	2	i_x_offset
water	69:50	0:0	2	;
water	70:4	0:0	2	display_region
op	70:18	0:0	2	.
water	70:19	0:0	2	src_rect
op	70:27	0:0	2	.
water	70:28	0:0	2	y
op	70:30	0:0	2	=
water	70:32	0:0	2	vd
op	70:34	0:0	2	->
water	70:36	0:0	2	fmt
op	70:39	0:0	2	.
water	70:40	0:0	2	i_y_offset
water	70:50	0:0	2	;
water	71:4	0:0	2	display_region
op	71:18	0:0	2	.
water	71:19	0:0	2	src_rect
op	71:27	0:0	2	.
water	71:28	0:0	2	width
op	71:34	0:0	2	=
water	71:36	0:0	2	vd
op	71:38	0:0	2	->
water	71:40	0:0	2	fmt
op	71:43	0:0	2	.
water	71:44	0:0	2	i_visible_width
water	71:59	0:0	2	;
water	72:4	0:0	2	display_region
op	72:18	0:0	2	.
water	72:19	0:0	2	src_rect
op	72:27	0:0	2	.
water	72:28	0:0	2	height
op	72:35	0:0	2	=
water	72:37	0:0	2	vd
op	72:39	0:0	2	->
water	72:41	0:0	2	fmt
op	72:44	0:0	2	.
water	72:45	0:0	2	i_visible_height
water	72:61	0:0	2	;
water	73:4	0:0	2	display_region
op	73:18	0:0	2	.
water	73:19	0:0	2	dest_rect
op	73:28	0:0	2	.
water	73:29	0:0	2	x
op	73:31	0:0	2	=
water	73:33	0:0	2	place
op	73:38	0:0	2	.
water	73:39	0:0	2	x
water	73:40	0:0	2	;
water	74:4	0:0	2	display_region
op	74:18	0:0	2	.
water	74:19	0:0	2	dest_rect
op	74:28	0:0	2	.
water	74:29	0:0	2	y
op	74:31	0:0	2	=
water	74:33	0:0	2	place
op	74:38	0:0	2	.
water	74:39	0:0	2	y
water	74:40	0:0	2	;
water	75:4	0:0	2	display_region
op	75:18	0:0	2	.
water	75:19	0:0	2	dest_rect
op	75:28	0:0	2	.
water	75:29	0:0	2	width
op	75:35	0:0	2	=
water	75:37	0:0	2	place
op	75:42	0:0	2	.
water	75:43	0:0	2	width
water	75:48	0:0	2	;
water	76:4	0:0	2	display_region
op	76:18	0:0	2	.
water	76:19	0:0	2	dest_rect
op	76:28	0:0	2	.
water	76:29	0:0	2	height
op	76:36	0:0	2	=
water	76:38	0:0	2	place
op	76:43	0:0	2	.
water	76:44	0:0	2	height
water	76:50	0:0	2	;
water	77:4	0:0	2	display_region
op	77:18	0:0	2	.
water	77:19	0:0	2	layer
op	77:25	0:0	2	=
water	77:27	0:0	2	sys
op	77:30	0:0	2	->
water	77:32	0:0	2	layer
water	77:37	0:0	2	;
water	78:4	0:0	2	display_region
op	78:18	0:0	2	.
water	78:19	0:0	2	set
op	78:23	0:0	2	=
water	78:25	0:0	2	MMAL_DISPLAY_SET_FULLSCREEN
op	78:53	0:0	2	|
water	78:55	0:0	2	MMAL_DISPLAY_SET_SRC_RECT
op	78:81	0:0	2	|
water	79:12	0:0	2	MMAL_DISPLAY_SET_DEST_RECT
op	79:39	0:0	2	|
water	79:41	0:0	2	MMAL_DISPLAY_SET_LAYER
water	79:63	0:0	2	;
water	80:4	0:0	2	status
op	80:11	0:0	2	=
call	80:13	80:68	2	mmal_port_parameter_set
arg	80:37	80:47	3	sys->input
water	80:37	0:0	4	sys
op	80:40	0:0	4	->
water	80:42	0:0	4	input
arg	80:49	80:68	3	&display_region.hdr
op	80:49	0:0	4	&
water	80:50	0:0	4	display_region
op	80:64	0:0	4	.
water	80:65	0:0	4	hdr
water	80:69	0:0	2	;
if	81:4	86:4	2	(status != MMAL_SUCCESS)
cond	81:8	81:18	3	status != MMAL_SUCCESS
water	81:8	0:0	4	status
op	81:15	0:0	4	!=
water	81:18	0:0	4	MMAL_SUCCESS
stmts	81:32	86:4	3	
water	81:32	0:0	4	{
call	82:8	83:61	4	msg_Err
arg	82:16	82:18	5	vd
water	82:16	0:0	6	vd
arg	82:20	82:72	5	"Failed to set display region (status=%"PRIx32" %s)"
water	82:20	0:0	6	"Failed to set display region (status=%"
water	82:60	0:0	6	PRIx32
water	82:66	0:0	6	" %s)"
arg	83:24	83:30	5	status
water	83:24	0:0	6	status
arg	83:32	83:61	5	mmal_status_to_string(status)
call	83:32	83:60	6	mmal_status_to_string
arg	83:54	83:60	7	status
water	83:54	0:0	8	status
water	83:62	0:0	4	;
water	84:8	0:0	4	ret
op	84:12	0:0	4	=
water	84:14	0:0	4	VLC_EGENERIC
water	84:26	0:0	4	;
goto	85:8	85:16	4	out
water	85:13	0:0	5	out
water	86:4	0:0	4	}
water	87:4	0:0	2	offsets
op	87:11	0:0	2	[
water	87:12	0:0	2	0
op	87:13	0:0	2	]
op	87:15	0:0	2	=
water	87:17	0:0	2	0
water	87:18	0:0	2	;
for	88:4	101:4	2	(i = 0 ;i < 3;++ i)
forinit	88:9	88:14	3	i = 0 ;
water	88:9	0:0	4	i
op	88:11	0:0	4	=
water	88:13	0:0	4	0
water	88:14	0:0	4	;
cond	88:16	88:20	3	i < 3
water	88:16	0:0	4	i
op	88:18	0:0	4	<
water	88:20	0:0	4	3
forexpr	88:23	88:25	3	++ i
op	88:23	0:0	4	++
water	88:25	0:0	4	i
stmts	88:28	101:4	3	
water	88:28	0:0	4	{
water	89:8	0:0	4	sys
op	89:11	0:0	4	->
water	89:13	0:0	4	planes
op	89:19	0:0	4	[
water	89:20	0:0	4	i
op	89:21	0:0	4	]
op	89:22	0:0	4	.
water	89:23	0:0	4	i_lines
op	89:31	0:0	4	=
water	89:33	0:0	4	buffer_height
water	89:46	0:0	4	;
water	90:8	0:0	4	sys
op	90:11	0:0	4	->
water	90:13	0:0	4	planes
op	90:19	0:0	4	[
water	90:20	0:0	4	i
op	90:21	0:0	4	]
op	90:22	0:0	4	.
water	90:23	0:0	4	i_pitch
op	90:31	0:0	4	=
water	90:33	0:0	4	buffer_pitch
water	90:45	0:0	4	;
water	91:8	0:0	4	sys
op	91:11	0:0	4	->
water	91:13	0:0	4	planes
op	91:19	0:0	4	[
water	91:20	0:0	4	i
op	91:21	0:0	4	]
op	91:22	0:0	4	.
water	91:23	0:0	4	i_visible_lines
op	91:39	0:0	4	=
water	91:41	0:0	4	vd
op	91:43	0:0	4	->
water	91:45	0:0	4	fmt
op	91:48	0:0	4	.
water	91:49	0:0	4	i_visible_height
water	91:65	0:0	4	;
water	92:8	0:0	4	sys
op	92:11	0:0	4	->
water	92:13	0:0	4	planes
op	92:19	0:0	4	[
water	92:20	0:0	4	i
op	92:21	0:0	4	]
op	92:22	0:0	4	.
water	92:23	0:0	4	i_visible_pitch
op	92:39	0:0	4	=
water	92:41	0:0	4	vd
op	92:43	0:0	4	->
water	92:45	0:0	4	fmt
op	92:48	0:0	4	.
water	92:49	0:0	4	i_visible_width
water	92:64	0:0	4	;
if	93:8	99:8	4	(i > 0)
cond	93:12	93:16	5	i > 0
water	93:12	0:0	6	i
op	93:14	0:0	6	>
water	93:16	0:0	6	0
stmts	93:19	99:8	5	
water	93:19	0:0	6	{
water	94:12	0:0	6	offsets
op	94:19	0:0	6	[
water	94:20	0:0	6	i
op	94:21	0:0	6	]
op	94:23	0:0	6	=
water	94:25	0:0	6	offsets
op	94:32	0:0	6	[
water	94:33	0:0	6	i
op	94:35	0:0	6	-
water	94:37	0:0	6	1
op	94:38	0:0	6	]
op	94:40	0:0	6	+
water	94:42	0:0	6	sys
op	94:45	0:0	6	->
water	94:47	0:0	6	planes
op	94:53	0:0	6	[
water	94:54	0:0	6	i
op	94:56	0:0	6	-
water	94:58	0:0	6	1
op	94:59	0:0	6	]
op	94:60	0:0	6	.
water	94:61	0:0	6	i_pitch
op	94:69	0:0	6	*
water	94:71	0:0	6	sys
op	94:74	0:0	6	->
water	94:76	0:0	6	planes
op	94:82	0:0	6	[
water	94:83	0:0	6	i
op	94:85	0:0	6	-
water	94:87	0:0	6	1
op	94:88	0:0	6	]
op	94:89	0:0	6	.
water	94:90	0:0	6	i_lines
water	94:97	0:0	6	;
water	95:12	0:0	6	sys
op	95:15	0:0	6	->
water	95:17	0:0	6	planes
op	95:23	0:0	6	[
water	95:24	0:0	6	i
op	95:25	0:0	6	]
op	95:26	0:0	6	.
water	95:27	0:0	6	i_lines
op	95:35	0:0	6	/=
water	95:38	0:0	6	2
water	95:39	0:0	6	;
water	96:12	0:0	6	sys
op	96:15	0:0	6	->
water	96:17	0:0	6	planes
op	96:23	0:0	6	[
water	96:24	0:0	6	i
op	96:25	0:0	6	]
op	96:26	0:0	6	.
water	96:27	0:0	6	i_pitch
op	96:35	0:0	6	/=
water	96:38	0:0	6	2
water	96:39	0:0	6	;
water	97:12	0:0	6	sys
op	97:15	0:0	6	->
water	97:17	0:0	6	planes
op	97:23	0:0	6	[
water	97:24	0:0	6	i
op	97:25	0:0	6	]
op	97:26	0:0	6	.
water	97:27	0:0	6	i_visible_lines
op	97:43	0:0	6	/=
water	97:46	0:0	6	2
water	97:47	0:0	6	;
water	98:12	0:0	6	sys
op	98:15	0:0	6	->
water	98:17	0:0	6	planes
op	98:23	0:0	6	[
water	98:24	0:0	6	i
op	98:25	0:0	6	]
op	98:26	0:0	6	.
water	98:27	0:0	6	i_visible_pitch
op	98:43	0:0	6	/=
water	98:46	0:0	6	2
water	98:47	0:0	6	;
water	99:8	0:0	6	}
water	100:8	0:0	4	sys
op	100:11	0:0	4	->
water	100:13	0:0	4	planes
op	100:19	0:0	4	[
water	100:20	0:0	4	i
op	100:21	0:0	4	]
op	100:22	0:0	4	.
water	100:23	0:0	4	p_pixels
op	100:32	0:0	4	=
water	100:34	0:0	4	(
water	100:35	0:0	4	uint8_t
op	100:43	0:0	4	*
water	100:44	0:0	4	)
water	100:45	0:0	4	offsets
op	100:52	0:0	4	[
water	100:53	0:0	4	i
op	100:54	0:0	4	]
water	100:55	0:0	4	;
water	101:4	0:0	4	}
call	102:4	102:37	2	vlc_mutex_init
arg	102:19	102:37	3	&sys->buffer_mutex
op	102:19	0:0	4	&
water	102:20	0:0	4	sys
op	102:23	0:0	4	->
water	102:25	0:0	4	buffer_mutex
water	102:38	0:0	2	;
call	103:4	103:35	2	vlc_cond_init
arg	103:18	103:35	3	&sys->buffer_cond
op	103:18	0:0	4	&
water	103:19	0:0	4	sys
op	103:22	0:0	4	->
water	103:24	0:0	4	buffer_cond
water	103:36	0:0	2	;
call	104:4	104:37	2	vlc_mutex_init
arg	104:19	104:37	3	&sys->manage_mutex
op	104:19	0:0	4	&
water	104:20	0:0	4	sys
op	104:23	0:0	4	->
water	104:25	0:0	4	manage_mutex
water	104:38	0:0	2	;
water	105:4	0:0	2	vd
op	105:6	0:0	2	->
water	105:8	0:0	2	pool
op	105:13	0:0	2	=
water	105:15	0:0	2	vd_pool
water	105:22	0:0	2	;
water	106:4	0:0	2	vd
op	106:6	0:0	2	->
water	106:8	0:0	2	display
op	106:16	0:0	2	=
water	106:18	0:0	2	vd_display
water	106:28	0:0	2	;
water	107:4	0:0	2	vd
op	107:6	0:0	2	->
water	107:8	0:0	2	control
op	107:16	0:0	2	=
water	107:18	0:0	2	vd_control
water	107:28	0:0	2	;
water	108:4	0:0	2	vd
op	108:6	0:0	2	->
water	108:8	0:0	2	manage
op	108:15	0:0	2	=
water	108:17	0:0	2	vd_manage
water	108:26	0:0	2	;
call	109:4	109:44	2	vc_tv_register_callback
arg	109:28	109:40	3	tvservice_cb
water	109:28	0:0	4	tvservice_cb
arg	109:42	109:44	3	vd
water	109:42	0:0	4	vd
water	109:45	0:0	2	;
if	110:4	113:4	2	(query_resolution (vd ,& sys -> display_width ,& sys -> display_height ) >= 0)
cond	110:8	110:75	3	query_resolution (vd ,& sys -> display_width ,& sys -> display_height ) >= 0
call	110:8	110:70	4	query_resolution
arg	110:25	110:27	5	vd
water	110:25	0:0	6	vd
arg	110:29	110:48	5	&sys->display_width
op	110:29	0:0	6	&
water	110:30	0:0	6	sys
op	110:33	0:0	6	->
water	110:35	0:0	6	display_width
arg	110:50	110:70	5	&sys->display_height
op	110:50	0:0	6	&
water	110:51	0:0	6	sys
op	110:54	0:0	6	->
water	110:56	0:0	6	display_height
op	110:72	0:0	4	>=
water	110:75	0:0	4	0
stmts	110:78	113:4	3	
water	110:78	0:0	4	{
call	111:8	112:46	4	vout_display_SendEventDisplaySize
arg	111:42	111:44	5	vd
water	111:42	0:0	6	vd
arg	111:46	111:64	5	sys->display_width
water	111:46	0:0	6	sys
op	111:49	0:0	6	->
water	111:51	0:0	6	display_width
arg	111:66	111:85	5	sys->display_height
water	111:66	0:0	6	sys
op	111:69	0:0	6	->
water	111:71	0:0	6	display_height
arg	112:24	112:46	5	vd->cfg->is_fullscreen
water	112:24	0:0	6	vd
op	112:26	0:0	6	->
water	112:28	0:0	6	cfg
op	112:31	0:0	6	->
water	112:33	0:0	6	is_fullscreen
water	112:47	0:0	4	;
water	113:4	0:0	4	}
else	113:6	116:4	2
stmts	113:11	116:4	3	
water	113:11	0:0	4	{
water	114:8	0:0	4	sys
op	114:11	0:0	4	->
water	114:13	0:0	4	display_width
op	114:27	0:0	4	=
water	114:29	0:0	4	vd
op	114:31	0:0	4	->
water	114:33	0:0	4	cfg
op	114:36	0:0	4	->
water	114:38	0:0	4	display
op	114:45	0:0	4	.
water	114:46	0:0	4	width
water	114:51	0:0	4	;
water	115:8	0:0	4	sys
op	115:11	0:0	4	->
water	115:13	0:0	4	display_height
op	115:28	0:0	4	=
water	115:30	0:0	4	vd
op	115:32	0:0	4	->
water	115:34	0:0	4	cfg
op	115:37	0:0	4	->
water	115:39	0:0	4	display
op	115:46	0:0	4	.
water	115:47	0:0	4	height
water	115:53	0:0	4	;
water	116:4	0:0	4	}
water	117:4	0:0	2	sys
op	117:7	0:0	2	->
water	117:9	0:0	2	dmx_handle
op	117:20	0:0	2	=
call	117:22	117:48	2	vc_dispmanx_display_open
arg	117:47	117:48	3	0
water	117:47	0:0	4	0
water	117:49	0:0	2	;
water	118:4	0:0	2	vd
op	118:6	0:0	2	->
water	118:8	0:0	2	info
op	118:12	0:0	2	.
water	118:13	0:0	2	subpicture_chromas
op	118:32	0:0	2	=
water	118:34	0:0	2	subpicture_chromas
water	118:52	0:0	2	;
label	119:0	119:3	2	out :
if	120:4	121:21	2	(ret != VLC_SUCCESS)
cond	120:8	120:15	3	ret != VLC_SUCCESS
water	120:8	0:0	4	ret
op	120:12	0:0	4	!=
water	120:15	0:0	4	VLC_SUCCESS
stmts	121:8	121:21	3	
call	121:8	121:20	4	Close
arg	121:14	121:20	5	object
water	121:14	0:0	6	object
water	121:21	0:0	4	;
return	122:4	122:14	2	ret
water	122:11	0:0	3	ret

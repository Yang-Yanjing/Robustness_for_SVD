func	2:0	40:0	0	static int	aout_CheckReady
params	2:27	0:0	1	
param	2:28	2:48	2	audio_output_t *	aout
stmnts	0:0	39:50	1	
decl	4:4	4:43	2	aout_owner_t	*owner
op	4:24	0:0	2	=
call	4:26	4:42	3	aout_owner
arg	4:38	4:42	4	aout
water	4:38	0:0	5	aout
decl	5:4	5:54	2	int	restart
op	5:16	0:0	2	=
call	5:18	5:53	3	atomic_exchange
arg	5:35	5:50	4	&owner->restart
op	5:35	0:0	5	&
water	5:36	0:0	5	owner
op	5:41	0:0	5	->
water	5:43	0:0	5	restart
arg	5:52	5:53	4	0
water	5:52	0:0	5	0
if	6:4	38:4	2	(unlikely (restart ))
cond	6:8	6:24	3	unlikely (restart )
call	6:8	6:24	4	unlikely
arg	6:17	6:24	5	restart
water	6:17	0:0	6	restart
stmts	7:4	38:4	3	
water	7:4	0:0	4	{
if	8:8	9:53	4	(owner -> mixer_format . i_format)
cond	8:12	8:32	5	owner -> mixer_format . i_format
water	8:12	0:0	6	owner
op	8:17	0:0	6	->
water	8:19	0:0	6	mixer_format
op	8:31	0:0	6	.
water	8:32	0:0	6	i_format
stmts	9:12	9:53	5	
call	9:12	9:52	6	aout_FiltersDelete
arg	9:32	9:36	7	aout
water	9:32	0:0	8	aout
arg	9:38	9:52	7	owner->filters
water	9:38	0:0	8	owner
op	9:43	0:0	8	->
water	9:45	0:0	8	filters
water	9:53	0:0	6	;
if	10:8	20:8	4	(restart & AOUT_RESTART_OUTPUT)
cond	10:12	10:22	5	restart & AOUT_RESTART_OUTPUT
water	10:12	0:0	6	restart
op	10:20	0:0	6	&
water	10:22	0:0	6	AOUT_RESTART_OUTPUT
stmts	11:8	20:8	5	
water	11:8	0:0	6	{
call	12:12	12:49	6	msg_Dbg
arg	12:21	12:25	7	aout
water	12:21	0:0	8	aout
arg	12:27	12:49	7	"restarting output..."
water	12:27	0:0	8	"restarting output..."
water	12:50	0:0	6	;
if	13:12	14:40	6	(owner -> mixer_format . i_format)
cond	13:16	13:36	7	owner -> mixer_format . i_format
water	13:16	0:0	8	owner
op	13:21	0:0	8	->
water	13:23	0:0	8	mixer_format
op	13:35	0:0	8	.
water	13:36	0:0	8	i_format
stmts	14:16	14:40	7	
call	14:16	14:39	8	aout_OutputDelete
arg	14:35	14:39	9	aout
water	14:35	0:0	10	aout
water	14:40	0:0	8	;
water	15:12	0:0	6	owner
op	15:17	0:0	6	->
water	15:19	0:0	6	mixer_format
op	15:32	0:0	6	=
water	15:34	0:0	6	owner
op	15:39	0:0	6	->
water	15:41	0:0	6	input_format
water	15:53	0:0	6	;
if	16:12	17:48	6	(aout_OutputNew (aout ,& owner -> mixer_format ))
cond	16:16	16:58	7	aout_OutputNew (aout ,& owner -> mixer_format )
call	16:16	16:58	8	aout_OutputNew
arg	16:32	16:36	9	aout
water	16:32	0:0	10	aout
arg	16:38	16:58	9	&owner->mixer_format
op	16:38	0:0	10	&
water	16:39	0:0	10	owner
op	16:44	0:0	10	->
water	16:46	0:0	10	mixer_format
stmts	17:16	17:48	7	
water	17:16	0:0	8	owner
op	17:21	0:0	8	->
water	17:23	0:0	8	mixer_format
op	17:35	0:0	8	.
water	17:36	0:0	8	i_format
op	17:45	0:0	8	=
water	17:47	0:0	8	0
water	17:48	0:0	8	;
call	18:12	19:63	6	aout_volume_SetFormat
arg	18:35	18:48	7	owner->volume
water	18:35	0:0	8	owner
op	18:40	0:0	8	->
water	18:42	0:0	8	volume
arg	19:35	19:63	7	owner->mixer_format.i_format
water	19:35	0:0	8	owner
op	19:40	0:0	8	->
water	19:42	0:0	8	mixer_format
op	19:54	0:0	8	.
water	19:55	0:0	8	i_format
water	19:64	0:0	6	;
water	20:8	0:0	6	}
call	21:8	21:46	4	msg_Dbg
arg	21:17	21:21	5	aout
water	21:17	0:0	6	aout
arg	21:23	21:46	5	"restarting filters..."
water	21:23	0:0	6	"restarting filters..."
water	21:47	0:0	4	;
water	22:8	0:0	4	owner
op	22:13	0:0	4	->
water	22:15	0:0	4	sync
op	22:19	0:0	4	.
water	22:20	0:0	4	end
op	22:24	0:0	4	=
water	22:26	0:0	4	VLC_TS_INVALID
water	22:40	0:0	4	;
water	23:8	0:0	4	owner
op	23:13	0:0	4	->
water	23:15	0:0	4	sync
op	23:19	0:0	4	.
water	23:20	0:0	4	resamp_type
op	23:32	0:0	4	=
water	23:34	0:0	4	AOUT_RESAMPLING_NONE
water	23:54	0:0	4	;
if	24:8	34:8	4	(owner -> mixer_format . i_format)
cond	24:12	24:32	5	owner -> mixer_format . i_format
water	24:12	0:0	6	owner
op	24:17	0:0	6	->
water	24:19	0:0	6	mixer_format
op	24:31	0:0	6	.
water	24:32	0:0	6	i_format
stmts	25:8	34:8	5	
water	25:8	0:0	6	{
water	26:12	0:0	6	owner
op	26:17	0:0	6	->
water	26:19	0:0	6	filters
op	26:27	0:0	6	=
call	26:29	28:66	6	aout_FiltersNew
arg	26:46	26:50	7	aout
water	26:46	0:0	8	aout
arg	26:52	26:72	7	&owner->input_format
op	26:52	0:0	8	&
water	26:53	0:0	8	owner
op	26:58	0:0	8	->
water	26:60	0:0	8	input_format
arg	27:46	27:66	7	&owner->mixer_format
op	27:46	0:0	8	&
water	27:47	0:0	8	owner
op	27:52	0:0	8	->
water	27:54	0:0	8	mixer_format
arg	28:46	28:66	7	&owner->request_vout
op	28:46	0:0	8	&
water	28:47	0:0	8	owner
op	28:52	0:0	8	->
water	28:54	0:0	8	request_vout
water	28:67	0:0	6	;
if	29:12	33:12	6	(owner -> filters == NULL)
cond	29:16	29:34	7	owner -> filters == NULL
water	29:16	0:0	8	owner
op	29:21	0:0	8	->
water	29:23	0:0	8	filters
op	29:31	0:0	8	==
water	29:34	0:0	8	NULL
stmts	30:12	33:12	7	
water	30:12	0:0	8	{
call	31:16	31:39	8	aout_OutputDelete
arg	31:35	31:39	9	aout
water	31:35	0:0	10	aout
water	31:40	0:0	8	;
water	32:16	0:0	8	owner
op	32:21	0:0	8	->
water	32:23	0:0	8	mixer_format
op	32:35	0:0	8	.
water	32:36	0:0	8	i_format
op	32:45	0:0	8	=
water	32:47	0:0	8	0
water	32:48	0:0	8	;
water	33:12	0:0	8	}
water	34:8	0:0	6	}
water	38:4	0:0	4	}
return	39:4	39:50	2	(owner->mixer_format.i_format)?0:-1
water	39:11	0:0	3	(
water	39:12	0:0	3	owner
op	39:17	0:0	3	->
water	39:19	0:0	3	mixer_format
op	39:31	0:0	3	.
water	39:32	0:0	3	i_format
water	39:40	0:0	3	)
water	39:42	0:0	3	?
water	39:44	0:0	3	0
water	39:46	0:0	3	:
op	39:48	0:0	3	-
water	39:49	0:0	3	1

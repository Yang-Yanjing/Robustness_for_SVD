func	2:0	35:0	0	static int	filter_chain_DeleteFilterInternal
params	2:44	0:0	1	
param	2:46	2:69	2	filter_chain_t *	p_chain
param	3:46	3:65	2	filter_t *	p_filter
stmnts	0:0	34:22	1	
decl	5:4	5:53	2	chained_filter_t	*p_chained
op	5:32	0:0	2	=
call	5:34	5:52	3	chained
arg	5:43	5:52	4	p_filter
water	5:43	0:0	5	p_filter
if	7:4	8:47	2	(p_chained -> prev != NULL)
cond	7:8	7:27	3	p_chained -> prev != NULL
water	7:8	0:0	4	p_chained
op	7:17	0:0	4	->
water	7:19	0:0	4	prev
op	7:24	0:0	4	!=
water	7:27	0:0	4	NULL
stmts	8:8	8:47	3	
water	8:8	0:0	4	p_chained
op	8:17	0:0	4	->
water	8:19	0:0	4	prev
op	8:23	0:0	4	->
water	8:25	0:0	4	next
op	8:30	0:0	4	=
water	8:32	0:0	4	p_chained
op	8:41	0:0	4	->
water	8:43	0:0	4	next
water	8:47	0:0	4	;
else	9:4	13:4	2
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
call	11:8	11:44	4	assert
arg	11:16	11:44	5	p_chained==p_chain->first
water	11:16	0:0	6	p_chained
op	11:26	0:0	6	==
water	11:29	0:0	6	p_chain
op	11:36	0:0	6	->
water	11:38	0:0	6	first
water	11:45	0:0	4	;
water	12:8	0:0	4	p_chain
op	12:15	0:0	4	->
water	12:17	0:0	4	first
op	12:23	0:0	4	=
water	12:25	0:0	4	p_chained
op	12:34	0:0	4	->
water	12:36	0:0	4	next
water	12:40	0:0	4	;
water	13:4	0:0	4	}
if	14:4	15:47	2	(p_chained -> next != NULL)
cond	14:8	14:27	3	p_chained -> next != NULL
water	14:8	0:0	4	p_chained
op	14:17	0:0	4	->
water	14:19	0:0	4	next
op	14:24	0:0	4	!=
water	14:27	0:0	4	NULL
stmts	15:8	15:47	3	
water	15:8	0:0	4	p_chained
op	15:17	0:0	4	->
water	15:19	0:0	4	next
op	15:23	0:0	4	->
water	15:25	0:0	4	prev
op	15:30	0:0	4	=
water	15:32	0:0	4	p_chained
op	15:41	0:0	4	->
water	15:43	0:0	4	prev
water	15:47	0:0	4	;
else	16:4	20:4	2
stmts	17:4	20:4	3	
water	17:4	0:0	4	{
call	18:8	18:43	4	assert
arg	18:16	18:43	5	p_chained==p_chain->last
water	18:16	0:0	6	p_chained
op	18:26	0:0	6	==
water	18:29	0:0	6	p_chain
op	18:36	0:0	6	->
water	18:38	0:0	6	last
water	18:44	0:0	4	;
water	19:8	0:0	4	p_chain
op	19:15	0:0	4	->
water	19:17	0:0	4	last
op	19:22	0:0	4	=
water	19:24	0:0	4	p_chained
op	19:33	0:0	4	->
water	19:35	0:0	4	prev
water	19:39	0:0	4	;
water	20:4	0:0	4	}
water	21:4	0:0	2	p_chain
op	21:11	0:0	2	->
water	21:13	0:0	2	length
op	21:19	0:0	2	--
water	21:21	0:0	2	;
call	22:4	22:71	2	msg_Dbg
arg	22:13	22:28	3	p_chain->p_this
water	22:13	0:0	4	p_chain
op	22:20	0:0	4	->
water	22:22	0:0	4	p_this
arg	22:30	22:60	3	"Filter %p removed from chain"
water	22:30	0:0	4	"Filter %p removed from chain"
arg	22:62	22:71	3	p_filter
water	22:62	0:0	4	p_filter
water	22:72	0:0	2	;
call	23:4	23:65	2	FilterDeletePictures
arg	23:26	23:44	3	&p_chained->filter
op	23:26	0:0	4	&
water	23:27	0:0	4	p_chained
op	23:36	0:0	4	->
water	23:38	0:0	4	filter
arg	23:46	23:65	3	p_chained->pending
water	23:46	0:0	4	p_chained
op	23:55	0:0	4	->
water	23:57	0:0	4	pending
water	23:66	0:0	2	;
if	25:4	26:62	2	(IsInternalVideoAllocator (p_chained ))
cond	25:8	25:44	3	IsInternalVideoAllocator (p_chained )
call	25:8	25:44	4	IsInternalVideoAllocator
arg	25:34	25:44	5	p_chained
water	25:34	0:0	6	p_chained
stmts	26:8	26:62	3	
call	26:8	26:61	4	AllocatorClean
arg	26:24	26:49	5	&internal_video_allocator
op	26:24	0:0	6	&
water	26:25	0:0	6	internal_video_allocator
arg	26:51	26:61	5	p_chained
water	26:51	0:0	6	p_chained
water	26:62	0:0	4	;
else	27:4	28:56	2
stmts	28:8	28:56	3	
call	28:8	28:55	4	AllocatorClean
arg	28:24	28:43	5	&p_chain->allocator
op	28:24	0:0	6	&
water	28:25	0:0	6	p_chain
op	28:32	0:0	6	->
water	28:34	0:0	6	allocator
arg	28:45	28:55	5	p_chained
water	28:45	0:0	6	p_chained
water	28:56	0:0	4	;
if	29:4	30:53	2	(p_filter -> p_module)
cond	29:8	29:18	3	p_filter -> p_module
water	29:8	0:0	4	p_filter
op	29:16	0:0	4	->
water	29:18	0:0	4	p_module
stmts	30:8	30:53	3	
call	30:8	30:52	4	module_unneed
arg	30:23	30:31	5	p_filter
water	30:23	0:0	6	p_filter
arg	30:33	30:52	5	p_filter->p_module
water	30:33	0:0	6	p_filter
op	30:41	0:0	6	->
water	30:43	0:0	6	p_module
water	30:53	0:0	4	;
call	31:4	31:27	2	free
arg	31:10	31:27	3	p_chained->mouse
water	31:10	0:0	4	p_chained
op	31:19	0:0	4	->
water	31:21	0:0	4	mouse
water	31:28	0:0	2	;
call	32:4	32:33	2	vlc_object_release
arg	32:24	32:33	3	p_filter
water	32:24	0:0	4	p_filter
water	32:34	0:0	2	;
return	34:4	34:22	2	VLC_SUCCESS
water	34:11	0:0	3	VLC_SUCCESS

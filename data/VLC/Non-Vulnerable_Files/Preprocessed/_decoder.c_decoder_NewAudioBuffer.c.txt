func	2:0	15:0	0	block_t *	decoder_NewAudioBuffer
params	2:31	0:0	1	
param	2:33	2:47	2	decoder_t *	dec
param	2:49	2:61	2	int	samples
stmnts	4:4	14:16	1	
if	4:4	5:19	2	(decoder_UpdateAudioFormat (dec ))
cond	4:8	4:39	3	decoder_UpdateAudioFormat (dec )
call	4:8	4:39	4	decoder_UpdateAudioFormat
arg	4:35	4:39	5	dec
water	4:35	0:0	6	dec
stmts	5:8	5:19	3	
return	5:8	5:19	4	NULL
water	5:15	0:0	5	NULL
decl	6:4	7:63	2	size_t	length
op	6:18	0:0	2	=
water	6:20	0:0	2	samples
op	6:28	0:0	2	*
water	6:30	0:0	2	dec
op	6:33	0:0	2	->
water	6:35	0:0	2	fmt_out
op	6:42	0:0	2	.
water	6:43	0:0	2	audio
op	6:48	0:0	2	.
water	6:49	0:0	2	i_bytes_per_frame
op	7:28	0:0	2	/
water	7:30	0:0	2	dec
op	7:33	0:0	2	->
water	7:35	0:0	2	fmt_out
op	7:42	0:0	2	.
water	7:43	0:0	2	audio
op	7:48	0:0	2	.
water	7:49	0:0	2	i_frame_length
decl	8:4	8:42	2	block_t	*block
op	8:19	0:0	2	=
call	8:21	8:41	3	block_Alloc
arg	8:34	8:41	4	length
water	8:34	0:0	5	length
if	9:4	13:4	2	(likely (block != NULL ))
cond	9:8	9:28	3	likely (block != NULL )
call	9:8	9:28	4	likely
arg	9:15	9:28	5	block!=NULL
water	9:15	0:0	6	block
op	9:21	0:0	6	!=
water	9:24	0:0	6	NULL
stmts	10:4	13:4	3	
water	10:4	0:0	4	{
water	11:8	0:0	4	block
op	11:13	0:0	4	->
water	11:15	0:0	4	i_nb_samples
op	11:28	0:0	4	=
water	11:30	0:0	4	samples
water	11:37	0:0	4	;
water	12:8	0:0	4	block
op	12:13	0:0	4	->
water	12:15	0:0	4	i_pts
op	12:21	0:0	4	=
water	12:23	0:0	4	block
op	12:28	0:0	4	->
water	12:30	0:0	4	i_length
op	12:39	0:0	4	=
water	12:41	0:0	4	0
water	12:42	0:0	4	;
water	13:4	0:0	4	}
return	14:4	14:16	2	block
water	14:11	0:0	3	block

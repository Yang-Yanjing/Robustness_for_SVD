func	2:0	28:0	0	void	puzzle_draw_rectangle
params	2:26	0:0	1	
param	2:27	2:47	2	picture_t *	p_pic_out
param	2:49	2:60	2	int32_t	i_x
param	2:62	2:73	2	int32_t	i_y
param	2:75	2:86	2	int32_t	i_w
param	2:88	2:99	2	int32_t	i_h
param	2:101	2:112	2	uint8_t	i_Y
param	2:114	2:125	2	uint8_t	i_U
param	2:127	2:139	2	uint8_t	i_V
stmnts	0:0	27:4	1	
decl	4:4	4:15	2	uint8_t	i_c
for	5:4	27:4	2	( uint8_t i_plane = 0 ;i_plane < p_pic_out -> i_planes;i_plane ++)
forinit	0:0	5:28	3	 uint8_t i_plane = 0 ;
decl	5:9	5:28	4	uint8_t	i_plane
op	5:25	0:0	4	=
water	5:27	0:0	4	0
cond	5:30	5:51	3	i_plane < p_pic_out -> i_planes
water	5:30	0:0	4	i_plane
op	5:38	0:0	4	<
water	5:40	0:0	4	p_pic_out
op	5:49	0:0	4	->
water	5:51	0:0	4	i_planes
forexpr	5:61	5:68	3	i_plane ++
water	5:61	0:0	4	i_plane
op	5:68	0:0	4	++
stmts	5:73	27:4	3	
water	5:73	0:0	4	{
decl	6:8	6:47	4	plane_t	*p_oyp
op	6:23	0:0	4	=
op	6:25	0:0	4	&
water	6:26	0:0	4	p_pic_out
op	6:35	0:0	4	->
water	6:37	0:0	4	p
op	6:38	0:0	4	[
water	6:39	0:0	4	i_plane
op	6:46	0:0	4	]
decl	7:8	7:70	4	int32_t	i_pixel_pitch
op	7:33	0:0	4	=
water	7:35	0:0	4	p_pic_out
op	7:44	0:0	4	->
water	7:46	0:0	4	p
op	7:47	0:0	4	[
water	7:48	0:0	4	i_plane
op	7:55	0:0	4	]
op	7:56	0:0	4	.
water	7:57	0:0	4	i_pixel_pitch
if	8:8	9:21	4	(i_plane == Y_PLANE)
cond	8:12	8:23	5	i_plane == Y_PLANE
water	8:12	0:0	6	i_plane
op	8:20	0:0	6	==
water	8:23	0:0	6	Y_PLANE
stmts	9:12	9:21	5	
water	9:12	0:0	6	i_c
op	9:16	0:0	6	=
water	9:18	0:0	6	i_Y
water	9:21	0:0	6	;
else	10:8	11:21	4
stmts	10:13	11:21	5	
if	10:13	11:21	6	(i_plane == U_PLANE)
cond	10:17	10:28	7	i_plane == U_PLANE
water	10:17	0:0	8	i_plane
op	10:25	0:0	8	==
water	10:28	0:0	8	U_PLANE
stmts	11:12	11:21	7	
water	11:12	0:0	8	i_c
op	11:16	0:0	8	=
water	11:18	0:0	8	i_U
water	11:21	0:0	8	;
else	12:8	13:21	4
stmts	12:13	13:21	5	
if	12:13	13:21	6	(i_plane == V_PLANE)
cond	12:17	12:28	7	i_plane == V_PLANE
water	12:17	0:0	8	i_plane
op	12:25	0:0	8	==
water	12:28	0:0	8	V_PLANE
stmts	13:12	13:21	7	
water	13:12	0:0	8	i_c
op	13:16	0:0	8	=
water	13:18	0:0	8	i_V
water	13:21	0:0	8	;
decl	14:8	14:116	4	int32_t	i_x_min
op	14:24	0:0	4	=
water	14:26	0:0	4	(
water	14:33	0:0	4	i_x
op	14:40	0:0	4	*
water	14:42	0:0	4	p_oyp
op	14:47	0:0	4	->
water	14:49	0:0	4	i_visible_pitch
op	14:65	0:0	4	/
water	14:67	0:0	4	p_pic_out
op	14:76	0:0	4	->
water	14:78	0:0	4	p
op	14:79	0:0	4	[
water	14:80	0:0	4	0
op	14:81	0:0	4	]
op	14:82	0:0	4	.
water	14:83	0:0	4	i_visible_pitch
water	14:99	0:0	4	)
op	14:101	0:0	4	*
water	14:103	0:0	4	i_pixel_pitch
decl	15:8	15:116	4	int32_t	i_x_max
op	15:24	0:0	4	=
water	15:26	0:0	4	(
water	15:28	0:0	4	(
water	15:29	0:0	4	i_x
op	15:33	0:0	4	+
water	15:35	0:0	4	i_w
water	15:38	0:0	4	)
op	15:40	0:0	4	*
water	15:42	0:0	4	p_oyp
op	15:47	0:0	4	->
water	15:49	0:0	4	i_visible_pitch
op	15:65	0:0	4	/
water	15:67	0:0	4	p_pic_out
op	15:76	0:0	4	->
water	15:78	0:0	4	p
op	15:79	0:0	4	[
water	15:80	0:0	4	0
op	15:81	0:0	4	]
op	15:82	0:0	4	.
water	15:83	0:0	4	i_visible_pitch
water	15:99	0:0	4	)
op	15:101	0:0	4	*
water	15:103	0:0	4	i_pixel_pitch
decl	16:8	16:98	4	int32_t	i_y_min
op	16:24	0:0	4	=
water	16:33	0:0	4	i_y
op	16:40	0:0	4	*
water	16:42	0:0	4	p_oyp
op	16:47	0:0	4	->
water	16:49	0:0	4	i_visible_lines
op	16:65	0:0	4	/
water	16:67	0:0	4	p_pic_out
op	16:76	0:0	4	->
water	16:78	0:0	4	p
op	16:79	0:0	4	[
water	16:80	0:0	4	0
op	16:81	0:0	4	]
op	16:82	0:0	4	.
water	16:83	0:0	4	i_visible_lines
decl	17:8	17:98	4	int32_t	i_y_max
op	17:24	0:0	4	=
water	17:28	0:0	4	(
water	17:29	0:0	4	i_y
op	17:33	0:0	4	+
water	17:35	0:0	4	i_h
water	17:38	0:0	4	)
op	17:40	0:0	4	*
water	17:42	0:0	4	p_oyp
op	17:47	0:0	4	->
water	17:49	0:0	4	i_visible_lines
op	17:65	0:0	4	/
water	17:67	0:0	4	p_pic_out
op	17:76	0:0	4	->
water	17:78	0:0	4	p
op	17:79	0:0	4	[
water	17:80	0:0	4	0
op	17:81	0:0	4	]
op	17:82	0:0	4	.
water	17:83	0:0	4	i_visible_lines
call	19:8	19:93	4	memset
arg	19:16	19:68	5	&p_oyp->p_pixels[i_y_min*p_oyp->i_pitch+i_x_min]
op	19:16	0:0	6	&
water	19:17	0:0	6	p_oyp
op	19:22	0:0	6	->
water	19:24	0:0	6	p_pixels
op	19:32	0:0	6	[
water	19:33	0:0	6	i_y_min
op	19:41	0:0	6	*
water	19:43	0:0	6	p_oyp
op	19:48	0:0	6	->
water	19:50	0:0	6	i_pitch
op	19:58	0:0	6	+
water	19:60	0:0	6	i_x_min
op	19:67	0:0	6	]
arg	19:70	19:73	5	i_c
water	19:70	0:0	6	i_c
arg	19:76	19:93	5	i_x_max-i_x_min
water	19:76	0:0	6	i_x_max
op	19:84	0:0	6	-
water	19:86	0:0	6	i_x_min
water	19:94	0:0	4	;
for	21:8	24:8	4	( int32_t i_dy = 1 ;i_dy < i_y_max - i_y_min - 1;i_dy ++)
forinit	0:0	21:29	5	 int32_t i_dy = 1 ;
decl	21:13	21:29	6	int32_t	i_dy
op	21:26	0:0	6	=
water	21:28	0:0	6	1
cond	21:31	21:58	5	i_dy < i_y_max - i_y_min - 1
water	21:31	0:0	6	i_dy
op	21:36	0:0	6	<
water	21:38	0:0	6	i_y_max
op	21:46	0:0	6	-
water	21:48	0:0	6	i_y_min
op	21:56	0:0	6	-
water	21:58	0:0	6	1
forexpr	21:61	21:65	5	i_dy ++
water	21:61	0:0	6	i_dy
op	21:65	0:0	6	++
stmts	21:70	24:8	5	
water	21:70	0:0	6	{
call	22:12	22:114	6	memset
arg	22:20	22:83	7	&p_oyp->p_pixels[(i_y_min+i_dy)*p_oyp->i_pitch+i_x_min]
op	22:20	0:0	8	&
water	22:21	0:0	8	p_oyp
op	22:26	0:0	8	->
water	22:28	0:0	8	p_pixels
op	22:36	0:0	8	[
water	22:38	0:0	8	(
water	22:39	0:0	8	i_y_min
op	22:47	0:0	8	+
water	22:49	0:0	8	i_dy
water	22:53	0:0	8	)
op	22:55	0:0	8	*
water	22:57	0:0	8	p_oyp
op	22:62	0:0	8	->
water	22:64	0:0	8	i_pitch
op	22:72	0:0	8	+
water	22:74	0:0	8	i_x_min
op	22:82	0:0	8	]
arg	22:87	22:90	7	i_c
water	22:87	0:0	8	i_c
arg	22:93	22:114	7	p_oyp->i_pixel_pitch
water	22:93	0:0	8	p_oyp
op	22:98	0:0	8	->
water	22:100	0:0	8	i_pixel_pitch
water	22:115	0:0	6	;
call	23:12	23:114	6	memset
arg	23:20	23:85	7	&p_oyp->p_pixels[(i_y_min+i_dy)*p_oyp->i_pitch+i_x_max-1]
op	23:20	0:0	8	&
water	23:21	0:0	8	p_oyp
op	23:26	0:0	8	->
water	23:28	0:0	8	p_pixels
op	23:36	0:0	8	[
water	23:37	0:0	8	(
water	23:38	0:0	8	i_y_min
op	23:46	0:0	8	+
water	23:48	0:0	8	i_dy
water	23:52	0:0	8	)
op	23:54	0:0	8	*
water	23:56	0:0	8	p_oyp
op	23:61	0:0	8	->
water	23:63	0:0	8	i_pitch
op	23:71	0:0	8	+
water	23:73	0:0	8	i_x_max
op	23:81	0:0	8	-
water	23:83	0:0	8	1
op	23:84	0:0	8	]
arg	23:87	23:90	7	i_c
water	23:87	0:0	8	i_c
arg	23:93	23:114	7	p_oyp->i_pixel_pitch
water	23:93	0:0	8	p_oyp
op	23:98	0:0	8	->
water	23:100	0:0	8	i_pixel_pitch
water	23:115	0:0	6	;
water	24:8	0:0	6	}
call	26:8	26:99	4	memset
arg	26:16	26:74	5	&p_oyp->p_pixels[(i_y_max-1)*p_oyp->i_pitch+i_x_min]
op	26:16	0:0	6	&
water	26:17	0:0	6	p_oyp
op	26:22	0:0	6	->
water	26:24	0:0	6	p_pixels
op	26:32	0:0	6	[
water	26:33	0:0	6	(
water	26:34	0:0	6	i_y_max
op	26:42	0:0	6	-
water	26:44	0:0	6	1
water	26:45	0:0	6	)
op	26:47	0:0	6	*
water	26:49	0:0	6	p_oyp
op	26:54	0:0	6	->
water	26:56	0:0	6	i_pitch
op	26:64	0:0	6	+
water	26:66	0:0	6	i_x_min
op	26:73	0:0	6	]
arg	26:76	26:79	5	i_c
water	26:76	0:0	6	i_c
arg	26:82	26:99	5	i_x_max-i_x_min
water	26:82	0:0	6	i_x_max
op	26:90	0:0	6	-
water	26:92	0:0	6	i_x_min
water	26:100	0:0	4	;
water	27:4	0:0	4	}

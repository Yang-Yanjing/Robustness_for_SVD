func	2:0	85:0	0	static int	Control
params	2:18	0:0	1	
param	2:20	2:36	2	demux_t *	p_demux
param	2:38	2:49	2	int	i_query
param	2:51	2:64	2	va_list	args
stmnts	0:0	84:4	1	
decl	4:4	4:40	2	demux_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_demux
op	4:33	0:0	2	->
water	4:35	0:0	2	p_sys
decl	5:4	5:19	2	double	f
water	5:14	0:0	2	,
decl	5:4	5:19	2	double	*pf
decl	6:4	6:22	2	int64_t	i64
water	6:15	0:0	2	,
decl	6:4	6:22	2	int64_t	*pi64
switch	7:4	84:4	2	(i_query)
cond	7:12	7:12	3	i_query
water	7:12	0:0	4	i_query
stmts	8:4	84:4	3	
water	8:4	0:0	4	{
label	9:8	9:31	4	case DEMUX_GET_POSITION :
water	10:12	0:0	4	pf
op	10:15	0:0	4	=
water	10:17	0:0	4	(
water	10:18	0:0	4	double
op	10:24	0:0	4	*
water	10:25	0:0	4	)
call	10:26	10:49	4	va_arg
arg	10:34	10:38	5	args
water	10:34	0:0	6	args
arg	10:40	10:49	5	double*
water	10:40	0:0	6	double
op	10:47	0:0	6	*
water	10:50	0:0	4	;
if	11:12	14:12	4	(p_sys -> i_total_length > 0 && p_sys -> i_pcr >= 0)
cond	11:16	11:61	5	p_sys -> i_total_length > 0 && p_sys -> i_pcr >= 0
water	11:16	0:0	6	p_sys
op	11:21	0:0	6	->
water	11:23	0:0	6	i_total_length
op	11:38	0:0	6	>
water	11:40	0:0	6	0
op	11:42	0:0	6	&&
water	11:45	0:0	6	p_sys
op	11:50	0:0	6	->
water	11:52	0:0	6	i_pcr
op	11:58	0:0	6	>=
water	11:61	0:0	6	0
stmts	12:12	14:12	5	
water	12:12	0:0	6	{
op	13:16	0:0	6	*
water	13:17	0:0	6	pf
op	13:20	0:0	6	=
water	13:22	0:0	6	(
water	13:23	0:0	6	double
water	13:29	0:0	6	)
water	13:30	0:0	6	p_sys
op	13:35	0:0	6	->
water	13:37	0:0	6	i_pcr
op	13:43	0:0	6	/
water	13:45	0:0	6	(
water	13:46	0:0	6	double
water	13:52	0:0	6	)
water	13:53	0:0	6	p_sys
op	13:58	0:0	6	->
water	13:60	0:0	6	i_total_length
water	13:74	0:0	6	;
water	14:12	0:0	6	}
else	15:12	27:12	4
stmts	16:12	27:12	5	
water	16:12	0:0	6	{
water	17:16	0:0	6	i64
op	17:20	0:0	6	=
call	17:22	17:46	6	stream_Size
arg	17:35	17:46	7	p_demux->s
water	17:35	0:0	8	p_demux
op	17:42	0:0	8	->
water	17:44	0:0	8	s
water	17:47	0:0	6	;
if	18:16	22:16	6	(i64 > 0)
cond	18:20	18:26	7	i64 > 0
water	18:20	0:0	8	i64
op	18:24	0:0	8	>
water	18:26	0:0	8	0
stmts	19:16	22:16	7	
water	19:16	0:0	8	{
decl	20:20	20:70	8	const double	f_current
op	20:43	0:0	8	=
call	20:45	20:69	9	stream_Tell
arg	20:58	20:69	10	p_demux->s
water	20:58	0:0	11	p_demux
op	20:65	0:0	11	->
water	20:67	0:0	11	s
op	21:20	0:0	8	*
water	21:21	0:0	8	pf
op	21:24	0:0	8	=
water	21:26	0:0	8	f_current
op	21:36	0:0	8	/
water	21:38	0:0	8	(
water	21:39	0:0	8	double
water	21:45	0:0	8	)
water	21:46	0:0	8	i64
water	21:49	0:0	8	;
water	22:16	0:0	8	}
else	23:16	26:16	6
stmts	24:16	26:16	7	
water	24:16	0:0	8	{
op	25:20	0:0	8	*
water	25:21	0:0	8	pf
op	25:24	0:0	8	=
water	25:26	0:0	8	0
op	25:27	0:0	8	.
water	25:28	0:0	8	0
water	25:29	0:0	8	;
water	26:16	0:0	8	}
water	27:12	0:0	6	}
return	28:12	28:30	4	VLC_SUCCESS
water	28:19	0:0	5	VLC_SUCCESS
label	29:8	29:31	4	case DEMUX_SET_POSITION :
water	30:8	0:0	4	{
decl	31:12	31:25	4	int64_t	i_pos
water	32:12	0:0	4	f
op	32:14	0:0	4	=
water	32:16	0:0	4	(
water	32:17	0:0	4	double
water	32:23	0:0	4	)
call	32:24	32:45	4	va_arg
arg	32:32	32:36	5	args
water	32:32	0:0	6	args
arg	32:38	32:45	5	double
water	32:38	0:0	6	double
water	32:46	0:0	4	;
water	33:12	0:0	4	p_sys
op	33:17	0:0	4	->
water	33:19	0:0	4	i_pcr
op	33:25	0:0	4	=
op	33:27	0:0	4	-
water	33:28	0:0	4	1
water	33:29	0:0	4	;
if	35:12	36:66	4	(p_sys -> i_total_length > 0 && ( i_pos =demux_IndexConvertTime (& p_sys -> idx ,p_sys -> i_total_length * f ) ) > 0)
cond	35:16	35:124	5	p_sys -> i_total_length > 0 && ( i_pos =demux_IndexConvertTime (& p_sys -> idx ,p_sys -> i_total_length * f ) ) > 0
water	35:16	0:0	6	p_sys
op	35:21	0:0	6	->
water	35:23	0:0	6	i_total_length
op	35:38	0:0	6	>
water	35:40	0:0	6	0
op	35:42	0:0	6	&&
water	35:45	0:0	6	(
water	35:47	0:0	6	i_pos
op	35:53	0:0	6	=
call	35:55	35:118	6	demux_IndexConvertTime
arg	35:79	35:90	7	&p_sys->idx
op	35:79	0:0	8	&
water	35:80	0:0	8	p_sys
op	35:85	0:0	8	->
water	35:87	0:0	8	idx
arg	35:92	35:118	7	p_sys->i_total_length*f
water	35:92	0:0	8	p_sys
op	35:97	0:0	8	->
water	35:99	0:0	8	i_total_length
op	35:114	0:0	8	*
water	35:116	0:0	8	f
water	35:120	0:0	6	)
op	35:122	0:0	6	>
water	35:124	0:0	6	0
stmts	36:16	36:66	5	
return	36:16	36:66	6	ControlSetPosition(p_demux,i_pos,false)
call	36:23	36:65	7	ControlSetPosition
arg	36:43	36:50	8	p_demux
water	36:43	0:0	9	p_demux
arg	36:52	36:57	8	i_pos
water	36:52	0:0	9	i_pos
arg	36:59	36:65	8	false
water	36:59	0:0	9	false
else	38:12	39:66	4
stmts	38:17	39:66	5	
if	38:17	39:66	6	(( i_pos =demux_IndexFindOffset (& p_sys -> idx ,stream_Size (p_demux -> s ) * f ) ) >= 0)
cond	38:21	38:104	7	( i_pos =demux_IndexFindOffset (& p_sys -> idx ,stream_Size (p_demux -> s ) * f ) ) >= 0
water	38:21	0:0	8	(
water	38:23	0:0	8	i_pos
op	38:29	0:0	8	=
call	38:31	38:97	8	demux_IndexFindOffset
arg	38:54	38:65	9	&p_sys->idx
op	38:54	0:0	10	&
water	38:55	0:0	10	p_sys
op	38:60	0:0	10	->
water	38:62	0:0	10	idx
arg	38:67	38:97	9	stream_Size(p_demux->s)*f
call	38:67	38:91	10	stream_Size
arg	38:80	38:91	11	p_demux->s
water	38:80	0:0	12	p_demux
op	38:87	0:0	12	->
water	38:89	0:0	12	s
op	38:93	0:0	10	*
water	38:95	0:0	10	f
water	38:99	0:0	8	)
op	38:101	0:0	8	>=
water	38:104	0:0	8	0
stmts	39:16	39:66	7	
return	39:16	39:66	8	ControlSetPosition(p_demux,i_pos,false)
call	39:23	39:65	9	ControlSetPosition
arg	39:43	39:50	10	p_demux
water	39:43	0:0	11	p_demux
arg	39:52	39:57	10	i_pos
water	39:52	0:0	11	i_pos
arg	39:59	39:65	10	false
water	39:59	0:0	11	false
else	40:12	41:65	4
stmts	40:17	41:65	5	
if	40:17	41:65	6	(( i_pos = p_sys -> i_first_frame_offset + (stream_Size (p_demux -> s ) - p_sys -> i_first_frame_offset ) * f ) >= 0)
cond	40:21	40:131	7	( i_pos = p_sys -> i_first_frame_offset + (stream_Size (p_demux -> s ) - p_sys -> i_first_frame_offset ) * f ) >= 0
water	40:21	0:0	8	(
water	40:23	0:0	8	i_pos
op	40:29	0:0	8	=
water	40:32	0:0	8	p_sys
op	40:37	0:0	8	->
water	40:39	0:0	8	i_first_frame_offset
op	40:60	0:0	8	+
water	40:62	0:0	8	(
call	40:64	40:88	8	stream_Size
arg	40:77	40:88	9	p_demux->s
water	40:77	0:0	10	p_demux
op	40:84	0:0	10	->
water	40:86	0:0	10	s
op	40:90	0:0	8	-
water	40:92	0:0	8	p_sys
op	40:97	0:0	8	->
water	40:99	0:0	8	i_first_frame_offset
water	40:120	0:0	8	)
op	40:122	0:0	8	*
water	40:124	0:0	8	f
water	40:126	0:0	8	)
op	40:128	0:0	8	>=
water	40:131	0:0	8	0
stmts	41:16	41:65	7	
return	41:16	41:65	8	ControlSetPosition(p_demux,i_pos,true)
call	41:23	41:64	9	ControlSetPosition
arg	41:43	41:50	10	p_demux
water	41:43	0:0	11	p_demux
arg	41:52	41:57	10	i_pos
water	41:52	0:0	11	i_pos
arg	41:59	41:64	10	true
water	41:59	0:0	11	true
else	42:12	43:35	4
stmts	43:16	43:35	5	
return	43:16	43:35	6	VLC_EGENERIC
water	43:23	0:0	7	VLC_EGENERIC
water	44:8	0:0	4	}
label	45:8	45:27	4	case DEMUX_GET_TIME :
water	46:12	0:0	4	pi64
op	46:17	0:0	4	=
water	46:19	0:0	4	(
water	46:20	0:0	4	int64_t
op	46:27	0:0	4	*
water	46:28	0:0	4	)
call	46:29	46:53	4	va_arg
arg	46:37	46:41	5	args
water	46:37	0:0	6	args
arg	46:43	46:53	5	int64_t*
water	46:43	0:0	6	int64_t
op	46:51	0:0	6	*
water	46:54	0:0	4	;
op	47:12	0:0	4	*
water	47:13	0:0	4	pi64
op	47:18	0:0	4	=
water	47:20	0:0	4	p_sys
op	47:25	0:0	4	->
water	47:27	0:0	4	i_pcr
op	47:33	0:0	4	>=
water	47:36	0:0	4	0
water	47:38	0:0	4	?
water	47:40	0:0	4	p_sys
op	47:45	0:0	4	->
water	47:47	0:0	4	i_pcr
water	47:53	0:0	4	:
water	47:55	0:0	4	0
water	47:56	0:0	4	;
return	48:12	48:30	4	VLC_SUCCESS
water	48:19	0:0	5	VLC_SUCCESS
label	49:8	49:27	4	case DEMUX_SET_TIME :
water	50:8	0:0	4	{
decl	51:12	51:25	4	int64_t	i_pos
water	52:12	0:0	4	i64
op	52:16	0:0	4	=
water	52:18	0:0	4	(
water	52:19	0:0	4	int64_t
water	52:26	0:0	4	)
call	52:27	52:49	4	va_arg
arg	52:35	52:39	5	args
water	52:35	0:0	6	args
arg	52:41	52:49	5	int64_t
water	52:41	0:0	6	int64_t
water	52:50	0:0	4	;
water	53:12	0:0	4	p_sys
op	53:17	0:0	4	->
water	53:19	0:0	4	i_pcr
op	53:25	0:0	4	=
op	53:27	0:0	4	-
water	53:28	0:0	4	1
water	53:29	0:0	4	;
water	54:12	0:0	4	i_pos
op	54:18	0:0	4	=
call	54:20	54:61	4	demux_IndexConvertTime
arg	54:44	54:55	5	&p_sys->idx
op	54:44	0:0	6	&
water	54:45	0:0	6	p_sys
op	54:50	0:0	6	->
water	54:52	0:0	6	idx
arg	54:57	54:61	5	i64
water	54:57	0:0	6	i64
water	54:62	0:0	4	;
if	55:12	56:35	4	(i_pos < 0)
cond	55:16	55:24	5	i_pos < 0
water	55:16	0:0	6	i_pos
op	55:22	0:0	6	<
water	55:24	0:0	6	0
stmts	56:16	56:35	5	
return	56:16	56:35	6	VLC_EGENERIC
water	56:23	0:0	7	VLC_EGENERIC
else	57:12	58:66	4
stmts	58:16	58:66	5	
return	58:16	58:66	6	ControlSetPosition(p_demux,i_pos,false)
call	58:23	58:65	7	ControlSetPosition
arg	58:43	58:50	8	p_demux
water	58:43	0:0	9	p_demux
arg	58:52	58:57	8	i_pos
water	58:52	0:0	9	i_pos
arg	58:59	58:65	8	false
water	58:59	0:0	9	false
water	59:8	0:0	4	}
label	60:8	60:29	4	case DEMUX_GET_LENGTH :
water	61:12	0:0	4	pi64
op	61:17	0:0	4	=
water	61:19	0:0	4	(
water	61:20	0:0	4	int64_t
op	61:27	0:0	4	*
water	61:28	0:0	4	)
call	61:29	61:53	4	va_arg
arg	61:37	61:41	5	args
water	61:37	0:0	6	args
arg	61:43	61:53	5	int64_t*
water	61:43	0:0	6	int64_t
op	61:51	0:0	6	*
water	61:54	0:0	4	;
if	62:12	66:12	4	(p_sys -> i_total_length >= 0)
cond	62:16	62:41	5	p_sys -> i_total_length >= 0
water	62:16	0:0	6	p_sys
op	62:21	0:0	6	->
water	62:23	0:0	6	i_total_length
op	62:38	0:0	6	>=
water	62:41	0:0	6	0
stmts	63:12	66:12	5	
water	63:12	0:0	6	{
op	64:16	0:0	6	*
water	64:17	0:0	6	pi64
op	64:22	0:0	6	=
water	64:24	0:0	6	p_sys
op	64:29	0:0	6	->
water	64:31	0:0	6	i_total_length
water	64:45	0:0	6	;
return	65:16	65:34	6	VLC_SUCCESS
water	65:23	0:0	7	VLC_SUCCESS
water	66:12	0:0	6	}
else	67:12	74:12	4
stmts	67:17	74:12	5	
if	67:17	74:12	6	(stream_Tell (p_demux -> s ) > p_sys -> i_first_frame_offset)
cond	67:21	67:56	7	stream_Tell (p_demux -> s ) > p_sys -> i_first_frame_offset
call	67:21	67:45	8	stream_Tell
arg	67:34	67:45	9	p_demux->s
water	67:34	0:0	10	p_demux
op	67:41	0:0	10	->
water	67:43	0:0	10	s
op	67:47	0:0	8	>
water	67:49	0:0	8	p_sys
op	67:54	0:0	8	->
water	67:56	0:0	8	i_first_frame_offset
stmts	68:12	74:12	7	
water	68:12	0:0	8	{
op	70:16	0:0	8	*
water	70:17	0:0	8	pi64
op	70:22	0:0	8	=
call	70:24	70:90	8	(double)
arg	70:34	70:90	9	stream_Size(p_demux->s)-p_sys->i_first_frame_offset
call	70:34	70:58	10	stream_Size
arg	70:47	70:58	11	p_demux->s
water	70:47	0:0	12	p_demux
op	70:54	0:0	12	->
water	70:56	0:0	12	s
op	70:60	0:0	10	-
water	70:62	0:0	10	p_sys
op	70:67	0:0	10	->
water	70:69	0:0	10	i_first_frame_offset
op	70:92	0:0	8	/
call	71:24	71:90	8	(double)
arg	71:34	71:90	9	stream_Tell(p_demux->s)-p_sys->i_first_frame_offset
call	71:34	71:58	10	stream_Tell
arg	71:47	71:58	11	p_demux->s
water	71:47	0:0	12	p_demux
op	71:54	0:0	12	->
water	71:56	0:0	12	s
op	71:60	0:0	10	-
water	71:62	0:0	10	p_sys
op	71:67	0:0	10	->
water	71:69	0:0	10	i_first_frame_offset
call	72:24	72:73	8	*(double)
arg	72:36	72:73	9	p_sys->i_pcr>=0?p_sys->i_pcr:0
water	72:36	0:0	10	p_sys
op	72:41	0:0	10	->
water	72:43	0:0	10	i_pcr
op	72:49	0:0	10	>=
water	72:52	0:0	10	0
water	72:54	0:0	10	?
water	72:56	0:0	10	p_sys
op	72:61	0:0	10	->
water	72:63	0:0	10	i_pcr
water	72:69	0:0	10	:
water	72:71	0:0	10	0
water	72:74	0:0	8	;
return	73:16	73:34	8	VLC_SUCCESS
water	73:23	0:0	9	VLC_SUCCESS
water	74:12	0:0	8	}
else	75:12	76:35	4
stmts	76:16	76:35	5	
return	76:16	76:35	6	VLC_EGENERIC
water	76:23	0:0	7	VLC_EGENERIC
label	77:8	77:26	4	case DEMUX_GET_FPS :
water	78:12	0:0	4	pf
op	78:15	0:0	4	=
water	78:17	0:0	4	(
water	78:18	0:0	4	double
op	78:24	0:0	4	*
water	78:25	0:0	4	)
call	78:26	78:49	4	va_arg
arg	78:34	78:38	5	args
water	78:34	0:0	6	args
arg	78:40	78:49	5	double*
water	78:40	0:0	6	double
op	78:47	0:0	6	*
water	78:50	0:0	4	;
op	79:12	0:0	4	*
water	79:13	0:0	4	pf
op	79:16	0:0	4	=
water	79:18	0:0	4	p_sys
op	79:23	0:0	4	->
water	79:25	0:0	4	hdr
op	79:28	0:0	4	.
water	79:29	0:0	4	d_fps
water	79:34	0:0	4	;
return	80:12	80:30	4	VLC_SUCCESS
water	80:19	0:0	5	VLC_SUCCESS
label	81:8	81:27	4	case DEMUX_GET_META :
label	82:8	82:15	4	default :
return	83:12	83:31	4	VLC_EGENERIC
water	83:19	0:0	5	VLC_EGENERIC
water	84:4	0:0	4	}

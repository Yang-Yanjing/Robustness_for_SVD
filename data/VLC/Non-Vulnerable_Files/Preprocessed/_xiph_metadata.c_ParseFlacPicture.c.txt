func	2:0	93:0	0	input_attachment_t *	ParseFlacPicture
params	2:36	0:0	1	
param	2:38	2:59	2	const uint8_t *	p_data
param	2:61	2:72	2	size_t	size
param	3:4	3:21	2	int	i_attachments
param	3:23	3:41	2	int *	i_cover_score
param	3:43	3:60	2	int *	i_cover_idx
stmnts	6:4	92:23	1	
water	6:4	0:0	2	static
water	6:11	0:0	2	const
water	6:17	0:0	2	char
water	6:22	0:0	2	pi_cover_score
op	6:36	0:0	2	[
op	6:37	0:0	2	]
op	6:39	0:0	2	=
water	6:41	0:0	2	{
water	7:8	0:0	2	0
water	7:9	0:0	2	,
water	8:8	0:0	2	5
water	8:9	0:0	2	,
water	9:8	0:0	2	4
water	9:9	0:0	2	,
water	10:8	0:0	2	20
water	10:10	0:0	2	,
water	11:8	0:0	2	19
water	11:10	0:0	2	,
water	12:8	0:0	2	13
water	12:10	0:0	2	,
water	13:8	0:0	2	18
water	13:10	0:0	2	,
water	14:8	0:0	2	17
water	14:10	0:0	2	,
water	15:8	0:0	2	16
water	15:10	0:0	2	,
water	16:8	0:0	2	14
water	16:10	0:0	2	,
water	17:8	0:0	2	15
water	17:10	0:0	2	,
water	18:8	0:0	2	9
water	18:9	0:0	2	,
water	19:8	0:0	2	8
water	19:9	0:0	2	,
water	20:8	0:0	2	7
water	20:9	0:0	2	,
water	21:8	0:0	2	10
water	21:10	0:0	2	,
water	22:8	0:0	2	11
water	22:10	0:0	2	,
water	23:8	0:0	2	6
water	23:9	0:0	2	,
water	24:8	0:0	2	1
water	24:9	0:0	2	,
water	25:8	0:0	2	12
water	25:10	0:0	2	,
water	26:8	0:0	2	3
water	26:9	0:0	2	,
water	27:8	0:0	2	2
water	28:4	0:0	2	}
water	28:5	0:0	2	;
decl	29:4	29:22	2	uint32_t	type
water	29:17	0:0	2	,
decl	29:4	29:22	2	uint32_t	len
if	30:4	31:19	2	(size < 8)
cond	30:8	30:15	3	size < 8
water	30:8	0:0	4	size
op	30:13	0:0	4	<
water	30:15	0:0	4	8
stmts	31:8	31:19	3	
return	31:8	31:19	4	NULL
water	31:15	0:0	5	NULL
do	33:4	37:4	2	(0)
cond	37:13	37:13	3	0
water	37:13	0:0	4	0
stmts	33:7	37:4	3	
water	33:7	0:0	4	{
call	34:8	34:26	4	assert
arg	34:15	34:26	5	size>=(x)
water	34:15	0:0	6	size
op	34:20	0:0	6	>=
water	34:23	0:0	6	(
water	34:24	0:0	6	x
water	34:25	0:0	6	)
water	34:27	0:0	4	;
water	35:8	0:0	4	size
op	35:13	0:0	4	-=
water	35:16	0:0	4	(
water	35:17	0:0	4	x
water	35:18	0:0	4	)
water	35:19	0:0	4	;
water	36:8	0:0	4	p_data
op	36:15	0:0	4	+=
water	36:18	0:0	4	(
water	36:19	0:0	4	x
water	36:20	0:0	4	)
water	36:21	0:0	4	;
water	37:4	0:0	4	}
water	38:4	0:0	2	type
op	38:9	0:0	2	=
call	38:11	38:27	2	GetDWBE
arg	38:20	38:27	3	p_data
water	38:20	0:0	4	p_data
water	38:28	0:0	2	;
call	39:4	39:8	2	RM
arg	39:7	39:8	3	4
water	39:7	0:0	4	4
water	39:9	0:0	2	;
water	40:4	0:0	2	len
op	40:8	0:0	2	=
call	40:10	40:26	2	GetDWBE
arg	40:19	40:26	3	p_data
water	40:19	0:0	4	p_data
water	40:27	0:0	2	;
call	41:4	41:8	2	RM
arg	41:7	41:8	3	4
water	41:7	0:0	4	4
water	41:9	0:0	2	;
if	42:4	43:19	2	(size < len)
cond	42:8	42:15	3	size < len
water	42:8	0:0	4	size
op	42:13	0:0	4	<
water	42:15	0:0	4	len
stmts	43:8	43:19	3	
return	43:8	43:19	4	NULL
water	43:15	0:0	5	NULL
decl	44:4	44:53	2	char	*mime
op	44:15	0:0	2	=
call	44:17	44:52	3	strndup
arg	44:26	44:46	4	(constchar*)p_data
water	44:26	0:0	5	(
water	44:27	0:0	5	const
water	44:33	0:0	5	char
op	44:38	0:0	5	*
water	44:39	0:0	5	)
water	44:40	0:0	5	p_data
arg	44:48	44:52	4	len
water	44:48	0:0	5	len
if	45:4	46:19	2	(unlikely (mime == NULL ))
cond	45:8	45:29	3	unlikely (mime == NULL )
call	45:8	45:29	4	unlikely
arg	45:17	45:29	5	mime==NULL
water	45:17	0:0	6	mime
op	45:22	0:0	6	==
water	45:25	0:0	6	NULL
stmts	46:8	46:19	3	
return	46:8	46:19	4	NULL
water	46:15	0:0	5	NULL
call	47:4	47:10	2	RM
arg	47:7	47:10	3	len
water	47:7	0:0	4	len
water	47:11	0:0	2	;
if	48:4	52:4	2	(size < 4)
cond	48:8	48:15	3	size < 4
water	48:8	0:0	4	size
op	48:13	0:0	4	<
water	48:15	0:0	4	4
stmts	49:4	52:4	3	
water	49:4	0:0	4	{
call	50:8	50:19	4	free
arg	50:14	50:19	5	mime
water	50:14	0:0	6	mime
water	50:20	0:0	4	;
return	51:8	51:19	4	NULL
water	51:15	0:0	5	NULL
water	52:4	0:0	4	}
water	53:4	0:0	2	len
op	53:8	0:0	2	=
call	53:10	53:26	2	GetDWBE
arg	53:19	53:26	3	p_data
water	53:19	0:0	4	p_data
water	53:27	0:0	2	;
call	54:4	54:8	2	RM
arg	54:7	54:8	3	4
water	54:7	0:0	4	4
water	54:9	0:0	2	;
if	55:4	59:4	2	(size < len)
cond	55:8	55:15	3	size < len
water	55:8	0:0	4	size
op	55:13	0:0	4	<
water	55:15	0:0	4	len
stmts	56:4	59:4	3	
water	56:4	0:0	4	{
call	57:8	57:19	4	free
arg	57:14	57:19	5	mime
water	57:14	0:0	6	mime
water	57:20	0:0	4	;
return	58:8	58:19	4	NULL
water	58:15	0:0	5	NULL
water	59:4	0:0	4	}
decl	60:4	60:43	2	input_attachment_t	*p_attachment
op	60:37	0:0	2	=
water	60:39	0:0	2	NULL
decl	61:4	61:60	2	char	*description
op	61:22	0:0	2	=
call	61:24	61:59	3	strndup
arg	61:33	61:53	4	(constchar*)p_data
water	61:33	0:0	5	(
water	61:34	0:0	5	const
water	61:40	0:0	5	char
op	61:45	0:0	5	*
water	61:46	0:0	5	)
water	61:47	0:0	5	p_data
arg	61:55	61:59	4	len
water	61:55	0:0	5	len
if	62:4	63:18	2	(unlikely (description == NULL ))
cond	62:8	62:36	3	unlikely (description == NULL )
call	62:8	62:36	4	unlikely
arg	62:17	62:36	5	description==NULL
water	62:17	0:0	6	description
op	62:29	0:0	6	==
water	62:32	0:0	6	NULL
stmts	63:8	63:18	3	
goto	63:8	63:18	4	error
water	63:13	0:0	5	error
call	64:4	64:10	2	RM
arg	64:7	64:10	3	len
water	64:7	0:0	4	len
water	64:11	0:0	2	;
call	65:4	65:28	2	EnsureUTF8
arg	65:16	65:28	3	description
water	65:16	0:0	4	description
water	65:29	0:0	2	;
if	66:4	67:18	2	(size < 20)
cond	66:8	66:15	3	size < 20
water	66:8	0:0	4	size
op	66:13	0:0	4	<
water	66:15	0:0	4	20
stmts	67:8	67:18	3	
goto	67:8	67:18	4	error
water	67:13	0:0	5	error
call	68:4	68:12	2	RM
arg	68:7	68:12	3	4*4
water	68:7	0:0	4	4
op	68:9	0:0	4	*
water	68:11	0:0	4	4
water	68:13	0:0	2	;
water	69:4	0:0	2	len
op	69:8	0:0	2	=
call	69:10	69:26	2	GetDWBE
arg	69:19	69:26	3	p_data
water	69:19	0:0	4	p_data
water	69:27	0:0	2	;
call	70:4	70:8	2	RM
arg	70:7	70:8	3	4
water	70:7	0:0	4	4
water	70:9	0:0	2	;
if	71:4	72:18	2	(size < len)
cond	71:8	71:15	3	size < len
water	71:8	0:0	4	size
op	71:13	0:0	4	<
water	71:15	0:0	4	len
stmts	72:8	72:18	3	
goto	72:8	72:18	4	error
water	72:13	0:0	5	error
decl	75:4	75:55	2	char	name[7+(sizeof(i_attachments)*3)+4+1]
call	76:4	76:62	2	snprintf
arg	76:14	76:18	3	name
water	76:14	0:0	4	name
arg	76:20	76:33	3	sizeof(name)
op	76:20	0:0	4	sizeof
water	76:27	0:0	4	(
water	76:28	0:0	4	name
water	76:32	0:0	4	)
arg	76:35	76:46	3	"picture%u"
water	76:35	0:0	4	"picture%u"
arg	76:48	76:62	3	i_attachments
water	76:48	0:0	4	i_attachments
water	76:63	0:0	2	;
if	77:4	78:30	2	(!strcasecmp (mime ,"image/jpeg" ))
cond	77:8	77:40	3	!strcasecmp (mime ,"image/jpeg" )
op	77:8	0:0	4	!
call	77:9	77:40	4	strcasecmp
arg	77:21	77:25	5	mime
water	77:21	0:0	6	mime
arg	77:27	77:40	5	"image/jpeg"
water	77:27	0:0	6	"image/jpeg"
stmts	78:8	78:30	3	
call	78:8	78:29	4	strcat
arg	78:16	78:20	5	name
water	78:16	0:0	6	name
arg	78:22	78:29	5	".jpg"
water	78:22	0:0	6	".jpg"
water	78:30	0:0	4	;
else	79:4	80:30	2
stmts	79:9	80:30	3	
if	79:9	80:30	4	(!strcasecmp (mime ,"image/png" ))
cond	79:13	79:44	5	!strcasecmp (mime ,"image/png" )
op	79:13	0:0	6	!
call	79:14	79:44	6	strcasecmp
arg	79:26	79:30	7	mime
water	79:26	0:0	8	mime
arg	79:32	79:44	7	"image/png"
water	79:32	0:0	8	"image/png"
stmts	80:8	80:30	5	
call	80:8	80:29	6	strcat
arg	80:16	80:20	7	name
water	80:16	0:0	8	name
arg	80:22	80:29	7	".png"
water	80:22	0:0	8	".png"
water	80:30	0:0	6	;
water	81:4	0:0	2	p_attachment
op	81:17	0:0	2	=
call	81:19	82:74	2	vlc_input_attachment_New
arg	81:45	81:49	3	name
water	81:45	0:0	4	name
arg	81:51	81:55	3	mime
water	81:51	0:0	4	mime
arg	81:57	81:68	3	description
water	81:57	0:0	4	description
arg	81:70	81:76	3	p_data
water	81:70	0:0	4	p_data
arg	82:45	82:74	3	size
water	82:45	0:0	4	size
water	82:75	0:0	2	;
if	83:4	88:4	2	(type < sizeof ( pi_cover_score ) / sizeof ( pi_cover_score [ 0 ] ) && * i_cover_score < pi_cover_score [ type ])
cond	83:8	84:44	3	type < sizeof ( pi_cover_score ) / sizeof ( pi_cover_score [ 0 ] ) && * i_cover_score < pi_cover_score [ type ]
water	83:8	0:0	4	type
op	83:13	0:0	4	<
op	83:15	0:0	4	sizeof
water	83:21	0:0	4	(
water	83:22	0:0	4	pi_cover_score
water	83:36	0:0	4	)
op	83:37	0:0	4	/
op	83:38	0:0	4	sizeof
water	83:44	0:0	4	(
water	83:45	0:0	4	pi_cover_score
op	83:59	0:0	4	[
water	83:60	0:0	4	0
op	83:61	0:0	4	]
water	83:62	0:0	4	)
op	83:64	0:0	4	&&
op	84:8	0:0	4	*
water	84:9	0:0	4	i_cover_score
op	84:23	0:0	4	<
water	84:25	0:0	4	pi_cover_score
op	84:39	0:0	4	[
water	84:40	0:0	4	type
op	84:44	0:0	4	]
stmts	85:4	88:4	3	
water	85:4	0:0	4	{
op	86:8	0:0	4	*
water	86:9	0:0	4	i_cover_idx
op	86:21	0:0	4	=
water	86:23	0:0	4	i_attachments
water	86:36	0:0	4	;
op	87:8	0:0	4	*
water	87:9	0:0	4	i_cover_score
op	87:23	0:0	4	=
water	87:25	0:0	4	pi_cover_score
op	87:39	0:0	4	[
water	87:40	0:0	4	type
op	87:44	0:0	4	]
water	87:45	0:0	4	;
water	88:4	0:0	4	}
label	89:0	89:5	2	error :
call	90:4	90:15	2	free
arg	90:10	90:15	3	mime
water	90:10	0:0	4	mime
water	90:16	0:0	2	;
call	91:4	91:22	2	free
arg	91:10	91:22	3	description
water	91:10	0:0	4	description
water	91:23	0:0	2	;
return	92:4	92:23	2	p_attachment
water	92:11	0:0	3	p_attachment

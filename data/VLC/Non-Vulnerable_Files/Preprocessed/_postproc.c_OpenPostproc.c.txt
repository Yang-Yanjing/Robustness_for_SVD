func	2:0	123:0	0	static int	OpenPostproc
params	2:23	0:0	1	
param	2:25	2:46	2	vlc_object_t *	p_this
stmnts	0:0	122:22	1	
decl	4:4	4:43	2	filter_t	*p_filter
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	filter_t
op	4:35	0:0	2	*
water	4:36	0:0	2	)
water	4:37	0:0	2	p_this
decl	5:4	5:23	2	filter_sys_t	*p_sys
decl	6:4	6:35	2	vlc_value_t	val
water	6:19	0:0	2	,
decl	6:4	6:35	2	vlc_value_t	val_orig
water	6:29	0:0	2	,
decl	6:4	6:35	2	vlc_value_t	text
decl	7:4	7:19	2	int	i_flags
op	7:16	0:0	2	=
water	7:18	0:0	2	0
if	8:4	14:4	2	(p_filter -> fmt_in . video . i_chroma != p_filter -> fmt_out . video . i_chroma || p_filter -> fmt_in . video . i_height != p_filter -> fmt_out . video . i_height || p_filter -> fmt_in . video . i_width != p_filter -> fmt_out . video . i_width)
cond	8:8	10:66	3	p_filter -> fmt_in . video . i_chroma != p_filter -> fmt_out . video . i_chroma || p_filter -> fmt_in . video . i_height != p_filter -> fmt_out . video . i_height || p_filter -> fmt_in . video . i_width != p_filter -> fmt_out . video . i_width
water	8:8	0:0	4	p_filter
op	8:16	0:0	4	->
water	8:18	0:0	4	fmt_in
op	8:24	0:0	4	.
water	8:25	0:0	4	video
op	8:30	0:0	4	.
water	8:31	0:0	4	i_chroma
op	8:40	0:0	4	!=
water	8:43	0:0	4	p_filter
op	8:51	0:0	4	->
water	8:53	0:0	4	fmt_out
op	8:60	0:0	4	.
water	8:61	0:0	4	video
op	8:66	0:0	4	.
water	8:67	0:0	4	i_chroma
op	8:76	0:0	4	||
water	9:8	0:0	4	p_filter
op	9:16	0:0	4	->
water	9:18	0:0	4	fmt_in
op	9:24	0:0	4	.
water	9:25	0:0	4	video
op	9:30	0:0	4	.
water	9:31	0:0	4	i_height
op	9:40	0:0	4	!=
water	9:43	0:0	4	p_filter
op	9:51	0:0	4	->
water	9:53	0:0	4	fmt_out
op	9:60	0:0	4	.
water	9:61	0:0	4	video
op	9:66	0:0	4	.
water	9:67	0:0	4	i_height
op	9:76	0:0	4	||
water	10:8	0:0	4	p_filter
op	10:16	0:0	4	->
water	10:18	0:0	4	fmt_in
op	10:24	0:0	4	.
water	10:25	0:0	4	video
op	10:30	0:0	4	.
water	10:31	0:0	4	i_width
op	10:39	0:0	4	!=
water	10:42	0:0	4	p_filter
op	10:50	0:0	4	->
water	10:52	0:0	4	fmt_out
op	10:59	0:0	4	.
water	10:60	0:0	4	video
op	10:65	0:0	4	.
water	10:66	0:0	4	i_width
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
call	12:8	12:79	4	msg_Err
arg	12:17	12:25	5	p_filter
water	12:17	0:0	6	p_filter
arg	12:27	12:79	5	"Filter input and output formats must be identical"
water	12:27	0:0	6	"Filter input and output formats must be identical"
water	12:80	0:0	4	;
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	14:4	0:0	4	}
if	17:4	18:34	2	(vlc_CPU_MMX ( ))
cond	17:8	17:20	3	vlc_CPU_MMX ( )
call	17:8	17:20	4	vlc_CPU_MMX
stmts	18:8	18:34	3	
water	18:8	0:0	4	i_flags
op	18:16	0:0	4	|=
water	18:19	0:0	4	PP_CPU_CAPS_MMX
water	18:34	0:0	4	;
if	19:4	20:35	2	(vlc_CPU_MMXEXT ( ))
cond	19:8	19:23	3	vlc_CPU_MMXEXT ( )
call	19:8	19:23	4	vlc_CPU_MMXEXT
stmts	20:8	20:35	3	
water	20:8	0:0	4	i_flags
op	20:16	0:0	4	|=
water	20:19	0:0	4	PP_CPU_CAPS_MMX2
water	20:35	0:0	4	;
if	21:4	22:36	2	(vlc_CPU_3dNOW ( ))
cond	21:8	21:22	3	vlc_CPU_3dNOW ( )
call	21:8	21:22	4	vlc_CPU_3dNOW
stmts	22:8	22:36	3	
water	22:8	0:0	4	i_flags
op	22:16	0:0	4	|=
water	22:19	0:0	4	PP_CPU_CAPS_3DNOW
water	22:36	0:0	4	;
if	24:4	25:38	2	(vlc_CPU_ALTIVEC ( ))
cond	24:8	24:24	3	vlc_CPU_ALTIVEC ( )
call	24:8	24:24	4	vlc_CPU_ALTIVEC
stmts	25:8	25:38	3	
water	25:8	0:0	4	i_flags
op	25:16	0:0	4	|=
water	25:19	0:0	4	PP_CPU_CAPS_ALTIVEC
water	25:38	0:0	4	;
switch	27:4	53:4	2	(p_filter -> fmt_in . video . i_chroma)
cond	27:12	27:35	3	p_filter -> fmt_in . video . i_chroma
water	27:12	0:0	4	p_filter
op	27:20	0:0	4	->
water	27:22	0:0	4	fmt_in
op	27:28	0:0	4	.
water	27:29	0:0	4	video
op	27:34	0:0	4	.
water	27:35	0:0	4	i_chroma
stmts	28:4	53:4	3	
water	28:4	0:0	4	{
label	29:8	29:27	4	case VLC_CODEC_I444 :
label	30:8	30:27	4	case VLC_CODEC_J444 :
water	35:12	0:0	4	i_flags
op	35:20	0:0	4	|=
water	35:23	0:0	4	PP_FORMAT_444
water	35:36	0:0	4	;
break	36:12	36:17	4	
label	37:8	37:27	4	case VLC_CODEC_I422 :
label	38:8	38:27	4	case VLC_CODEC_J422 :
water	39:12	0:0	4	i_flags
op	39:20	0:0	4	|=
water	39:23	0:0	4	PP_FORMAT_422
water	39:36	0:0	4	;
break	40:12	40:17	4	
label	41:8	41:27	4	case VLC_CODEC_I411 :
water	42:12	0:0	4	i_flags
op	42:20	0:0	4	|=
water	42:23	0:0	4	PP_FORMAT_411
water	42:36	0:0	4	;
break	43:12	43:17	4	
label	44:8	44:27	4	case VLC_CODEC_I420 :
label	45:8	45:27	4	case VLC_CODEC_J420 :
label	46:8	46:27	4	case VLC_CODEC_YV12 :
water	47:12	0:0	4	i_flags
op	47:20	0:0	4	|=
water	47:23	0:0	4	PP_FORMAT_420
water	47:36	0:0	4	;
break	48:12	48:17	4	
label	49:8	49:15	4	default :
call	50:12	51:62	4	msg_Err
arg	50:21	50:29	5	p_filter
water	50:21	0:0	6	p_filter
arg	50:31	50:65	5	"Unsupported input chroma (%4.4s)"
water	50:31	0:0	6	"Unsupported input chroma (%4.4s)"
arg	51:22	51:62	5	(char*)&p_filter->fmt_in.video.i_chroma
water	51:22	0:0	6	(
water	51:23	0:0	6	char
op	51:27	0:0	6	*
water	51:28	0:0	6	)
op	51:29	0:0	6	&
water	51:30	0:0	6	p_filter
op	51:38	0:0	6	->
water	51:40	0:0	6	fmt_in
op	51:46	0:0	6	.
water	51:47	0:0	6	video
op	51:52	0:0	6	.
water	51:53	0:0	6	i_chroma
water	51:63	0:0	4	;
return	52:12	52:31	4	VLC_EGENERIC
water	52:19	0:0	5	VLC_EGENERIC
water	53:4	0:0	4	}
water	54:4	0:0	2	p_sys
op	54:10	0:0	2	=
call	54:12	54:43	2	malloc
arg	54:20	54:43	3	sizeof(filter_sys_t)
op	54:20	0:0	4	sizeof
water	54:26	0:0	4	(
water	54:28	0:0	4	filter_sys_t
water	54:41	0:0	4	)
water	54:44	0:0	2	;
if	55:4	55:34	2	(! p_sys)
cond	55:8	55:9	3	! p_sys
op	55:8	0:0	4	!
water	55:9	0:0	4	p_sys
stmts	55:17	55:34	3	
return	55:17	55:34	4	VLC_ENOMEM
water	55:24	0:0	5	VLC_ENOMEM
water	56:4	0:0	2	p_filter
op	56:12	0:0	2	->
water	56:14	0:0	2	p_sys
op	56:20	0:0	2	=
water	56:22	0:0	2	p_sys
water	56:27	0:0	2	;
water	57:4	0:0	2	p_sys
op	57:9	0:0	2	->
water	57:11	0:0	2	pp_context
op	57:22	0:0	2	=
call	57:24	59:48	2	pp_get_context
arg	57:40	57:70	3	p_filter->fmt_in.video.i_width
water	57:40	0:0	4	p_filter
op	57:48	0:0	4	->
water	57:50	0:0	4	fmt_in
op	57:56	0:0	4	.
water	57:57	0:0	4	video
op	57:62	0:0	4	.
water	57:63	0:0	4	i_width
arg	58:40	58:71	3	p_filter->fmt_in.video.i_height
water	58:40	0:0	4	p_filter
op	58:48	0:0	4	->
water	58:50	0:0	4	fmt_in
op	58:56	0:0	4	.
water	58:57	0:0	4	video
op	58:62	0:0	4	.
water	58:63	0:0	4	i_height
arg	59:40	59:48	3	i_flags
water	59:40	0:0	4	i_flags
water	59:49	0:0	2	;
if	60:4	65:4	2	(! p_sys -> pp_context)
cond	60:8	60:16	3	! p_sys -> pp_context
op	60:8	0:0	4	!
water	60:9	0:0	4	p_sys
op	60:14	0:0	4	->
water	60:16	0:0	4	pp_context
stmts	61:4	65:4	3	
water	61:4	0:0	4	{
call	62:8	62:75	4	msg_Err
arg	62:17	62:25	5	p_filter
water	62:17	0:0	6	p_filter
arg	62:27	62:75	5	"Error while creating post processing context."
water	62:27	0:0	6	"Error while creating post processing context."
water	62:76	0:0	4	;
call	63:8	63:20	4	free
arg	63:14	63:20	5	p_sys
water	63:14	0:0	6	p_sys
water	63:21	0:0	4	;
return	64:8	64:27	4	VLC_EGENERIC
water	64:15	0:0	5	VLC_EGENERIC
water	65:4	0:0	4	}
call	66:4	67:39	2	config_ChainParse
arg	66:23	66:31	3	p_filter
water	66:23	0:0	4	p_filter
arg	66:33	66:46	3	FILTER_PREFIX
water	66:33	0:0	4	FILTER_PREFIX
arg	66:48	66:67	3	ppsz_filter_options
water	66:48	0:0	4	ppsz_filter_options
arg	67:23	67:39	3	p_filter->p_cfg
water	67:23	0:0	4	p_filter
op	67:31	0:0	4	->
water	67:33	0:0	4	p_cfg
water	67:40	0:0	2	;
call	68:4	69:74	2	var_Create
arg	68:16	68:24	3	p_filter
water	68:16	0:0	4	p_filter
arg	68:26	68:43	3	FILTER_PREFIX"q"
water	68:26	0:0	4	FILTER_PREFIX
water	68:40	0:0	4	"q"
arg	68:45	69:74	3	VLC_VAR_INTEGER|VLC_VAR_HASCHOICE|VLC_VAR_DOINHERIT|VLC_VAR_ISCOMMAND
water	68:45	0:0	4	VLC_VAR_INTEGER
op	68:61	0:0	4	|
water	69:16	0:0	4	VLC_VAR_HASCHOICE
op	69:34	0:0	4	|
water	69:36	0:0	4	VLC_VAR_DOINHERIT
op	69:54	0:0	4	|
water	69:56	0:0	4	VLC_VAR_ISCOMMAND
water	69:75	0:0	2	;
water	70:4	0:0	2	text
op	70:8	0:0	2	.
water	70:9	0:0	2	psz_string
op	70:20	0:0	2	=
call	70:22	70:41	2	_
arg	70:24	70:41	3	"Post processing"
water	70:24	0:0	4	"Post processing"
water	70:42	0:0	2	;
call	71:4	71:74	2	var_Change
arg	71:16	71:24	3	p_filter
water	71:16	0:0	4	p_filter
arg	71:26	71:43	3	FILTER_PREFIX"q"
water	71:26	0:0	4	FILTER_PREFIX
water	71:40	0:0	4	"q"
arg	71:45	71:60	3	VLC_VAR_SETTEXT
water	71:45	0:0	4	VLC_VAR_SETTEXT
arg	71:62	71:67	3	&text
op	71:62	0:0	4	&
water	71:63	0:0	4	text
arg	71:69	71:74	3	NULL
water	71:69	0:0	4	NULL
water	71:75	0:0	2	;
call	72:4	72:52	2	var_Get
arg	72:13	72:21	3	p_filter
water	72:13	0:0	4	p_filter
arg	72:23	72:40	3	FILTER_PREFIX"q"
water	72:23	0:0	4	FILTER_PREFIX
water	72:37	0:0	4	"q"
arg	72:42	72:52	3	&val_orig
op	72:42	0:0	4	&
water	72:43	0:0	4	val_orig
water	72:53	0:0	2	;
call	73:4	73:80	2	var_Change
arg	73:16	73:24	3	p_filter
water	73:16	0:0	4	p_filter
arg	73:26	73:43	3	FILTER_PREFIX"q"
water	73:26	0:0	4	FILTER_PREFIX
water	73:40	0:0	4	"q"
arg	73:45	73:62	3	VLC_VAR_DELCHOICE
water	73:45	0:0	4	VLC_VAR_DELCHOICE
arg	73:64	73:73	3	&val_orig
op	73:64	0:0	4	&
water	73:65	0:0	4	val_orig
arg	73:75	73:80	3	NULL
water	73:75	0:0	4	NULL
water	73:81	0:0	2	;
water	74:4	0:0	2	val
op	74:7	0:0	2	.
water	74:8	0:0	2	psz_string
op	74:19	0:0	2	=
call	74:21	74:75	2	var_GetNonEmptyString
arg	74:44	74:52	3	p_filter
water	74:44	0:0	4	p_filter
arg	74:54	74:75	3	FILTER_PREFIX"name"
water	74:54	0:0	4	FILTER_PREFIX
water	74:68	0:0	4	"name"
water	74:76	0:0	2	;
if	75:4	89:4	2	(val_orig . i_int)
cond	75:8	75:17	3	val_orig . i_int
water	75:8	0:0	4	val_orig
op	75:16	0:0	4	.
water	75:17	0:0	4	i_int
stmts	76:4	89:4	3	
water	76:4	0:0	4	{
water	77:8	0:0	4	p_sys
op	77:13	0:0	4	->
water	77:15	0:0	4	pp_mode
op	77:23	0:0	4	=
call	77:25	80:73	4	pp_get_mode_by_name_and_quality
arg	77:58	79:67	5	val.psz_string?val.psz_string:"default"
water	77:58	0:0	6	val
op	77:61	0:0	6	.
water	77:62	0:0	6	psz_string
water	77:73	0:0	6	?
water	78:58	0:0	6	val
op	78:61	0:0	6	.
water	78:62	0:0	6	psz_string
water	78:73	0:0	6	:
water	79:58	0:0	6	"default"
arg	80:58	80:73	5	val_orig.i_int
water	80:58	0:0	6	val_orig
op	80:66	0:0	6	.
water	80:67	0:0	6	i_int
water	80:74	0:0	4	;
if	81:8	88:8	4	(! p_sys -> pp_mode)
cond	81:12	81:20	5	! p_sys -> pp_mode
op	81:12	0:0	6	!
water	81:13	0:0	6	p_sys
op	81:18	0:0	6	->
water	81:20	0:0	6	pp_mode
stmts	82:8	88:8	5	
water	82:8	0:0	6	{
call	83:12	83:76	6	msg_Err
arg	83:21	83:29	7	p_filter
water	83:21	0:0	8	p_filter
arg	83:31	83:76	7	"Error while creating post processing mode."
water	83:31	0:0	8	"Error while creating post processing mode."
water	83:77	0:0	6	;
call	84:12	84:33	6	free
arg	84:18	84:33	7	val.psz_string
water	84:18	0:0	8	val
op	84:21	0:0	8	.
water	84:22	0:0	8	psz_string
water	84:34	0:0	6	;
call	85:12	85:47	6	pp_free_context
arg	85:29	85:47	7	p_sys->pp_context
water	85:29	0:0	8	p_sys
op	85:34	0:0	8	->
water	85:36	0:0	8	pp_context
water	85:48	0:0	6	;
call	86:12	86:24	6	free
arg	86:18	86:24	7	p_sys
water	86:18	0:0	8	p_sys
water	86:25	0:0	6	;
return	87:12	87:31	6	VLC_EGENERIC
water	87:19	0:0	7	VLC_EGENERIC
water	88:8	0:0	6	}
water	89:4	0:0	4	}
else	90:4	93:4	2
stmts	91:4	93:4	3	
water	91:4	0:0	4	{
water	92:8	0:0	4	p_sys
op	92:13	0:0	4	->
water	92:15	0:0	4	pp_mode
op	92:23	0:0	4	=
water	92:25	0:0	4	NULL
water	92:29	0:0	4	;
water	93:4	0:0	4	}
call	94:4	94:25	2	free
arg	94:10	94:25	3	val.psz_string
water	94:10	0:0	4	val
op	94:13	0:0	4	.
water	94:14	0:0	4	psz_string
water	94:26	0:0	2	;
for	95:4	114:4	2	(val . i_int = 0 ;val . i_int <= PP_QUALITY_MAX;val . i_int ++)
forinit	95:9	95:22	3	val . i_int = 0 ;
water	95:9	0:0	4	val
op	95:12	0:0	4	.
water	95:13	0:0	4	i_int
op	95:19	0:0	4	=
water	95:21	0:0	4	0
water	95:22	0:0	4	;
cond	95:24	95:37	3	val . i_int <= PP_QUALITY_MAX
water	95:24	0:0	4	val
op	95:27	0:0	4	.
water	95:28	0:0	4	i_int
op	95:34	0:0	4	<=
water	95:37	0:0	4	PP_QUALITY_MAX
forexpr	95:53	95:62	3	val . i_int ++
water	95:53	0:0	4	val
op	95:56	0:0	4	.
water	95:57	0:0	4	i_int
op	95:62	0:0	4	++
stmts	96:4	114:4	3	
water	96:4	0:0	4	{
switch	97:8	111:8	4	(val . i_int)
cond	97:16	97:20	5	val . i_int
water	97:16	0:0	6	val
op	97:19	0:0	6	.
water	97:20	0:0	6	i_int
stmts	98:8	111:8	5	
water	98:8	0:0	6	{
label	99:12	99:18	6	case 0 :
water	100:16	0:0	6	text
op	100:20	0:0	6	.
water	100:21	0:0	6	psz_string
op	100:32	0:0	6	=
call	100:34	100:45	6	_
arg	100:36	100:45	7	"Disable"
water	100:36	0:0	8	"Disable"
water	100:46	0:0	6	;
break	101:16	101:21	6	
label	102:12	102:18	6	case 1 :
water	103:16	0:0	6	text
op	103:20	0:0	6	.
water	103:21	0:0	6	psz_string
op	103:32	0:0	6	=
call	103:34	103:44	6	_
arg	103:36	103:44	7	"Lowest"
water	103:36	0:0	8	"Lowest"
water	103:45	0:0	6	;
break	104:16	104:21	6	
label	105:12	105:31	6	case PP_QUALITY_MAX :
water	106:16	0:0	6	text
op	106:20	0:0	6	.
water	106:21	0:0	6	psz_string
op	106:32	0:0	6	=
call	106:34	106:45	6	_
arg	106:36	106:45	7	"Highest"
water	106:36	0:0	8	"Highest"
water	106:46	0:0	6	;
break	107:16	107:21	6	
label	108:12	108:19	6	default :
water	109:16	0:0	6	text
op	109:20	0:0	6	.
water	109:21	0:0	6	psz_string
op	109:32	0:0	6	=
water	109:34	0:0	6	NULL
water	109:38	0:0	6	;
break	110:16	110:21	6	
water	111:8	0:0	6	}
call	112:8	113:53	4	var_Change
arg	112:20	112:28	5	p_filter
water	112:20	0:0	6	p_filter
arg	112:30	112:47	5	FILTER_PREFIX"q"
water	112:30	0:0	6	FILTER_PREFIX
water	112:44	0:0	6	"q"
arg	112:49	112:66	5	VLC_VAR_ADDCHOICE
water	112:49	0:0	6	VLC_VAR_ADDCHOICE
arg	113:20	113:24	5	&val
op	113:20	0:0	6	&
water	113:21	0:0	6	val
arg	113:26	113:53	5	text.psz_string?&text:NULL
water	113:26	0:0	6	text
op	113:30	0:0	6	.
water	113:31	0:0	6	psz_string
water	113:41	0:0	6	?
op	113:42	0:0	6	&
water	113:43	0:0	6	text
water	113:47	0:0	6	:
water	113:48	0:0	6	NULL
water	113:54	0:0	4	;
water	114:4	0:0	4	}
call	115:4	115:33	2	vlc_mutex_init
arg	115:20	115:33	3	&p_sys->lock
op	115:20	0:0	4	&
water	115:21	0:0	4	p_sys
op	115:26	0:0	4	->
water	115:28	0:0	4	lock
water	115:34	0:0	2	;
call	117:4	117:68	2	var_AddCallback
arg	117:21	117:29	3	p_filter
water	117:21	0:0	4	p_filter
arg	117:31	117:48	3	FILTER_PREFIX"q"
water	117:31	0:0	4	FILTER_PREFIX
water	117:45	0:0	4	"q"
arg	117:50	117:61	3	PPQCallback
water	117:50	0:0	4	PPQCallback
arg	117:63	117:68	3	NULL
water	117:63	0:0	4	NULL
water	117:69	0:0	2	;
call	118:4	118:74	2	var_AddCallback
arg	118:21	118:29	3	p_filter
water	118:21	0:0	4	p_filter
arg	118:31	118:51	3	FILTER_PREFIX"name"
water	118:31	0:0	4	FILTER_PREFIX
water	118:45	0:0	4	"name"
arg	118:53	118:67	3	PPNameCallback
water	118:53	0:0	4	PPNameCallback
arg	118:69	118:74	3	NULL
water	118:69	0:0	4	NULL
water	118:75	0:0	2	;
water	119:4	0:0	2	p_filter
op	119:12	0:0	2	->
water	119:14	0:0	2	pf_video_filter
op	119:30	0:0	2	=
water	119:32	0:0	2	PostprocPict
water	119:44	0:0	2	;
call	120:4	121:58	2	msg_Warn
arg	120:14	120:22	3	p_filter
water	120:14	0:0	4	p_filter
arg	120:24	121:58	3	"Quantification table was not set by video decoder. ""Postprocessing won't look good."
water	120:24	0:0	4	"Quantification table was not set by video decoder. "
water	121:24	0:0	4	"Postprocessing won't look good."
water	121:59	0:0	2	;
return	122:4	122:22	2	VLC_SUCCESS
water	122:11	0:0	3	VLC_SUCCESS

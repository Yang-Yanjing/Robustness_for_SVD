func	2:0	80:0	0	static subpicture_t *	DecodePacket
params	2:33	0:0	1	
param	2:35	2:51	2	decoder_t *	p_dec
param	2:53	2:70	2	kate_packet *	p_kp
param	2:72	2:89	2	block_t *	p_block
stmnts	0:0	79:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:31	2	const kate_event	*ev
op	5:25	0:0	2	=
water	5:27	0:0	2	NULL
decl	6:4	6:30	2	subpicture_t	*p_spu
op	6:24	0:0	2	=
water	6:26	0:0	2	NULL
decl	7:4	7:13	2	int	i_ret
if	8:4	12:4	2	(! p_sys -> b_ready)
cond	8:8	8:16	3	! p_sys -> b_ready
op	8:8	0:0	4	!
water	8:9	0:0	4	p_sys
op	8:14	0:0	4	->
water	8:16	0:0	4	b_ready
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
call	10:8	10:77	4	msg_Err
arg	10:17	10:22	5	p_dec
water	10:17	0:0	6	p_dec
arg	10:24	10:77	5	"Cannot decode Kate packet, decoder not initialized"
water	10:24	0:0	6	"Cannot decode Kate packet, decoder not initialized"
water	10:78	0:0	4	;
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
water	12:4	0:0	4	}
water	13:4	0:0	2	i_ret
op	13:10	0:0	2	=
call	13:12	13:50	2	kate_decode_packetin
arg	13:34	13:43	3	&p_sys->k
op	13:34	0:0	4	&
water	13:35	0:0	4	p_sys
op	13:40	0:0	4	->
water	13:42	0:0	4	k
arg	13:45	13:50	3	p_kp
water	13:45	0:0	4	p_kp
water	13:51	0:0	2	;
if	14:4	18:4	2	(i_ret < 0)
cond	14:8	14:16	3	i_ret < 0
water	14:8	0:0	4	i_ret
op	14:14	0:0	4	<
water	14:16	0:0	4	0
stmts	15:4	18:4	3	
water	15:4	0:0	4	{
call	16:8	16:66	4	msg_Err
arg	16:17	16:22	5	p_dec
water	16:17	0:0	6	p_dec
arg	16:24	16:58	5	"Kate failed to decode packet: %d"
water	16:24	0:0	6	"Kate failed to decode packet: %d"
arg	16:60	16:66	5	i_ret
water	16:60	0:0	6	i_ret
water	16:67	0:0	4	;
return	17:8	17:19	4	NULL
water	17:15	0:0	5	NULL
water	18:4	0:0	4	}
water	19:4	0:0	2	i_ret
op	19:10	0:0	2	=
call	19:12	19:49	2	kate_decode_eventout
arg	19:34	19:43	3	&p_sys->k
op	19:34	0:0	4	&
water	19:35	0:0	4	p_sys
op	19:40	0:0	4	->
water	19:42	0:0	4	k
arg	19:45	19:49	3	&ev
op	19:45	0:0	4	&
water	19:46	0:0	4	ev
water	19:50	0:0	2	;
if	20:4	24:4	2	(i_ret < 0)
cond	20:8	20:16	3	i_ret < 0
water	20:8	0:0	4	i_ret
op	20:14	0:0	4	<
water	20:16	0:0	4	0
stmts	21:4	24:4	3	
water	21:4	0:0	4	{
call	22:8	22:67	4	msg_Err
arg	22:17	22:22	5	p_dec
water	22:17	0:0	6	p_dec
arg	22:24	22:59	5	"Kate failed to retrieve event: %d"
water	22:24	0:0	6	"Kate failed to retrieve event: %d"
arg	22:61	22:67	5	i_ret
water	22:61	0:0	6	i_ret
water	22:68	0:0	4	;
return	23:8	23:19	4	NULL
water	23:15	0:0	5	NULL
water	24:4	0:0	4	}
if	25:4	29:4	2	(i_ret > 0)
cond	25:8	25:16	3	i_ret > 0
water	25:8	0:0	4	i_ret
op	25:14	0:0	4	>
water	25:16	0:0	4	0
stmts	26:4	29:4	3	
water	26:4	0:0	4	{
return	28:8	28:19	4	NULL
water	28:15	0:0	5	NULL
water	29:4	0:0	4	}
decl	32:4	32:46	2	subpicture_updater_sys_t	*p_spu_sys
op	32:40	0:0	2	=
water	32:42	0:0	2	NULL
if	33:4	38:4	2	(p_sys -> b_use_tiger)
cond	33:8	33:15	3	p_sys -> b_use_tiger
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	b_use_tiger
stmts	34:4	38:4	3	
water	34:4	0:0	4	{
water	35:8	0:0	4	p_spu_sys
op	35:18	0:0	4	=
call	35:20	35:47	4	malloc
arg	35:28	35:47	5	sizeof(*p_spu_sys)
op	35:28	0:0	6	sizeof
water	35:34	0:0	6	(
op	35:35	0:0	6	*
water	35:36	0:0	6	p_spu_sys
water	35:45	0:0	6	)
water	35:48	0:0	4	;
if	36:8	37:23	4	(! p_spu_sys)
cond	36:12	36:13	5	! p_spu_sys
op	36:12	0:0	6	!
water	36:13	0:0	6	p_spu_sys
stmts	37:12	37:23	5	
return	37:12	37:23	6	NULL
water	37:19	0:0	7	NULL
water	38:4	0:0	4	}
decl	39:4	46:5	2	subpicture_updater_t	updater
op	39:33	0:0	2	=
water	39:35	0:0	2	{
op	41:8	0:0	2	.
water	41:9	0:0	2	pf_validate
op	41:21	0:0	2	=
water	41:23	0:0	2	TigerValidateSubpicture
water	41:46	0:0	2	,
op	42:8	0:0	2	.
water	42:9	0:0	2	pf_update
op	42:21	0:0	2	=
water	42:23	0:0	2	TigerUpdateSubpicture
water	42:44	0:0	2	,
op	43:8	0:0	2	.
water	43:9	0:0	2	pf_destroy
op	43:21	0:0	2	=
water	43:23	0:0	2	TigerDestroySubpicture
water	43:45	0:0	2	,
op	45:8	0:0	2	.
water	45:9	0:0	2	p_sys
op	45:21	0:0	2	=
water	45:23	0:0	2	p_spu_sys
water	45:32	0:0	2	,
water	46:4	0:0	2	}
water	47:4	0:0	2	p_spu
op	47:10	0:0	2	=
call	47:12	47:79	2	decoder_NewSubpicture
arg	47:35	47:40	3	p_dec
water	47:35	0:0	4	p_dec
arg	47:42	47:79	3	p_sys->b_use_tiger?&updater:NULL
water	47:42	0:0	4	p_sys
op	47:47	0:0	4	->
water	47:49	0:0	4	b_use_tiger
water	47:61	0:0	4	?
op	47:63	0:0	4	&
water	47:64	0:0	4	updater
water	47:72	0:0	4	:
water	47:74	0:0	4	NULL
water	47:80	0:0	2	;
if	48:4	54:4	2	(! p_spu)
cond	48:8	48:9	3	! p_spu
op	48:8	0:0	4	!
water	48:9	0:0	4	p_spu
stmts	49:4	54:4	3	
water	49:4	0:0	4	{
call	50:8	50:24	4	free
arg	50:14	50:24	5	p_spu_sys
water	50:14	0:0	6	p_spu_sys
water	50:25	0:0	4	;
return	53:8	53:19	4	NULL
water	53:15	0:0	5	NULL
water	54:4	0:0	4	}
water	55:4	0:0	2	p_spu
op	55:9	0:0	2	->
water	55:11	0:0	2	i_start
op	55:19	0:0	2	=
water	55:21	0:0	2	p_block
op	55:28	0:0	2	->
water	55:30	0:0	2	i_pts
water	55:35	0:0	2	;
water	56:4	0:0	2	p_spu
op	56:9	0:0	2	->
water	56:11	0:0	2	i_stop
op	56:18	0:0	2	=
water	56:20	0:0	2	p_block
op	56:27	0:0	2	->
water	56:29	0:0	2	i_pts
op	56:35	0:0	2	+
water	56:37	0:0	2	CLOCK_FREQ
op	56:48	0:0	2	*
water	57:8	0:0	2	ev
op	57:10	0:0	2	->
water	57:12	0:0	2	duration
op	57:21	0:0	2	*
water	57:23	0:0	2	p_sys
op	57:28	0:0	2	->
water	57:30	0:0	2	ki
op	57:32	0:0	2	.
water	57:33	0:0	2	gps_denominator
op	57:49	0:0	2	/
water	57:51	0:0	2	p_sys
op	57:56	0:0	2	->
water	57:58	0:0	2	ki
op	57:60	0:0	2	.
water	57:61	0:0	2	gps_numerator
water	57:74	0:0	2	;
water	58:4	0:0	2	p_spu
op	58:9	0:0	2	->
water	58:11	0:0	2	b_ephemer
op	58:21	0:0	2	=
water	58:23	0:0	2	false
water	58:28	0:0	2	;
water	59:4	0:0	2	p_spu
op	59:9	0:0	2	->
water	59:11	0:0	2	b_absolute
op	59:22	0:0	2	=
water	59:24	0:0	2	false
water	59:29	0:0	2	;
if	61:4	73:4	2	(p_sys -> b_use_tiger)
cond	61:8	61:15	3	p_sys -> b_use_tiger
water	61:8	0:0	4	p_sys
op	61:13	0:0	4	->
water	61:15	0:0	4	b_use_tiger
stmts	62:4	73:4	3	
water	62:4	0:0	4	{
water	63:8	0:0	4	p_spu_sys
op	63:17	0:0	4	->
water	63:19	0:0	4	p_dec_sys
op	63:29	0:0	4	=
water	63:31	0:0	4	p_sys
water	63:36	0:0	4	;
water	64:8	0:0	4	p_spu_sys
op	64:17	0:0	4	->
water	64:19	0:0	4	i_start
op	64:29	0:0	4	=
water	64:31	0:0	4	p_block
op	64:38	0:0	4	->
water	64:40	0:0	4	i_pts
water	64:45	0:0	4	;
call	65:8	65:26	4	DecSysHold
arg	65:20	65:26	5	p_sys
water	65:20	0:0	6	p_sys
water	65:27	0:0	4	;
water	66:8	0:0	4	p_spu
op	66:13	0:0	4	->
water	66:15	0:0	4	i_stop
op	66:22	0:0	4	=
call	66:24	66:64	4	__MAX
arg	66:31	66:48	5	p_sys->i_max_stop
water	66:31	0:0	6	p_sys
op	66:36	0:0	6	->
water	66:38	0:0	6	i_max_stop
arg	66:50	66:64	5	p_spu->i_stop
water	66:50	0:0	6	p_spu
op	66:55	0:0	6	->
water	66:57	0:0	6	i_stop
water	66:65	0:0	4	;
water	67:8	0:0	4	p_spu
op	67:13	0:0	4	->
water	67:15	0:0	4	b_ephemer
op	67:25	0:0	4	=
water	67:27	0:0	4	true
water	67:31	0:0	4	;
water	68:8	0:0	4	p_spu
op	68:13	0:0	4	->
water	68:15	0:0	4	b_absolute
op	68:26	0:0	4	=
water	68:28	0:0	4	true
water	68:32	0:0	4	;
call	70:8	70:37	4	vlc_mutex_lock
arg	70:24	70:37	5	&p_sys->lock
op	70:24	0:0	6	&
water	70:25	0:0	6	p_sys
op	70:30	0:0	6	->
water	70:32	0:0	6	lock
water	70:38	0:0	4	;
call	71:8	71:77	4	CHECK_TIGER_RET
arg	71:25	71:77	5	tiger_renderer_add_event(p_sys->p_tr,ev->ki,ev)
call	71:25	71:75	6	tiger_renderer_add_event
arg	71:51	71:62	7	p_sys->p_tr
water	71:51	0:0	8	p_sys
op	71:56	0:0	8	->
water	71:58	0:0	8	p_tr
arg	71:64	71:70	7	ev->ki
water	71:64	0:0	8	ev
op	71:66	0:0	8	->
water	71:68	0:0	8	ki
arg	71:72	71:75	7	ev
water	71:72	0:0	8	ev
water	71:78	0:0	4	;
call	72:8	72:39	4	vlc_mutex_unlock
arg	72:26	72:39	5	&p_sys->lock
op	72:26	0:0	6	&
water	72:27	0:0	6	p_sys
op	72:32	0:0	6	->
water	72:34	0:0	6	lock
water	72:40	0:0	4	;
water	73:4	0:0	4	}
else	74:4	78:4	2
stmts	76:4	78:4	3	
water	76:4	0:0	4	{
water	77:8	0:0	4	p_spu
op	77:14	0:0	4	=
call	77:16	77:53	4	SetupSimpleKateSPU
arg	77:36	77:41	5	p_dec
water	77:36	0:0	6	p_dec
arg	77:43	77:48	5	p_spu
water	77:43	0:0	6	p_spu
arg	77:50	77:53	5	ev
water	77:50	0:0	6	ev
water	77:54	0:0	4	;
water	78:4	0:0	4	}
return	79:4	79:16	2	p_spu
water	79:11	0:0	3	p_spu

func	2:12	48:0	0	WINAPI	DirectXOpenDDrawCallback
params	2:43	0:0	1	
param	2:44	2:54	2	GUID *	guid
param	2:56	2:66	2	LPSTR	desc
param	3:44	3:60	2	LPSTR	drivername
param	3:62	3:75	2	VOID *	context
param	4:44	4:57	2	HMONITOR	hmon
stmnts	0:0	47:15	1	
decl	6:4	6:32	2	vout_display_t	*vd
op	6:23	0:0	2	=
water	6:25	0:0	2	context
decl	7:4	7:37	2	vout_display_sys_t	*sys
op	7:28	0:0	2	=
water	7:30	0:0	2	vd
op	7:32	0:0	2	->
water	7:34	0:0	2	sys
if	13:4	14:19	2	(! hmon)
cond	13:8	13:9	3	! hmon
op	13:8	0:0	4	!
water	13:9	0:0	4	hmon
stmts	14:8	14:19	3	
return	14:8	14:19	4	TRUE
water	14:15	0:0	5	TRUE
decl	15:4	15:37	2	char	*psz_drivername
op	15:25	0:0	2	=
water	15:27	0:0	2	drivername
decl	16:4	16:25	2	char	*psz_desc
op	16:19	0:0	2	=
water	16:21	0:0	2	desc
call	17:4	17:71	2	msg_Dbg
arg	17:12	17:14	3	vd
water	17:12	0:0	4	vd
arg	17:16	17:45	3	"DirectXEnumCallback: %s, %s"
water	17:16	0:0	4	"DirectXEnumCallback: %s, %s"
arg	17:47	17:55	3	psz_desc
water	17:47	0:0	4	psz_desc
arg	17:57	17:71	3	psz_drivername
water	17:57	0:0	4	psz_drivername
water	17:72	0:0	2	;
decl	18:4	18:54	2	char	*device
op	18:17	0:0	2	=
call	18:19	18:53	3	var_GetString
arg	18:33	18:35	4	vd
water	18:33	0:0	5	vd
arg	18:37	18:53	4	"directx-device"
water	18:37	0:0	5	"directx-device"
if	20:4	38:4	2	(device && * device && !strcmp (psz_drivername ,device ))
cond	20:8	20:59	3	device && * device && !strcmp (psz_drivername ,device )
water	20:8	0:0	4	device
op	20:15	0:0	4	&&
op	20:18	0:0	4	*
water	20:19	0:0	4	device
op	20:26	0:0	4	&&
op	20:29	0:0	4	!
call	20:30	20:59	4	strcmp
arg	20:37	20:51	5	psz_drivername
water	20:37	0:0	6	psz_drivername
arg	20:53	20:59	5	device
water	20:53	0:0	6	device
stmts	20:62	38:4	3	
water	20:62	0:0	4	{
decl	21:8	21:32	4	MONITORINFO	monitor_info
water	22:8	0:0	4	monitor_info
op	22:20	0:0	4	.
water	22:21	0:0	4	cbSize
op	22:28	0:0	4	=
op	22:30	0:0	4	sizeof
water	22:36	0:0	4	(
water	22:37	0:0	4	MONITORINFO
water	22:48	0:0	4	)
water	22:49	0:0	4	;
if	23:8	36:8	4	(GetMonitorInfoA (hmon ,& monitor_info ))
cond	23:12	23:47	5	GetMonitorInfoA (hmon ,& monitor_info )
call	23:12	23:47	6	GetMonitorInfoA
arg	23:28	23:32	7	hmon
water	23:28	0:0	8	hmon
arg	23:34	23:47	7	&monitor_info
op	23:34	0:0	8	&
water	23:35	0:0	8	monitor_info
stmts	23:50	36:8	5	
water	23:50	0:0	6	{
decl	24:12	24:21	6	RECT	rect
call	26:12	26:42	6	GetWindowRect
arg	26:26	26:35	7	sys->hwnd
water	26:26	0:0	8	sys
op	26:29	0:0	8	->
water	26:31	0:0	8	hwnd
arg	26:37	26:42	7	&rect
op	26:37	0:0	8	&
water	26:38	0:0	8	rect
water	26:43	0:0	6	;
if	27:12	35:12	6	(!IntersectRect (& rect ,& rect ,& monitor_info . rcWork ))
cond	27:16	27:65	7	!IntersectRect (& rect ,& rect ,& monitor_info . rcWork )
op	27:16	0:0	8	!
call	27:17	27:65	8	IntersectRect
arg	27:31	27:36	9	&rect
op	27:31	0:0	10	&
water	27:32	0:0	10	rect
arg	27:38	27:43	9	&rect
op	27:38	0:0	10	&
water	27:39	0:0	10	rect
arg	27:45	27:65	9	&monitor_info.rcWork
op	27:45	0:0	10	&
water	27:46	0:0	10	monitor_info
op	27:58	0:0	10	.
water	27:59	0:0	10	rcWork
stmts	27:68	35:12	7	
water	27:68	0:0	8	{
water	28:16	0:0	8	rect
op	28:20	0:0	8	.
water	28:21	0:0	8	left
op	28:26	0:0	8	=
water	28:28	0:0	8	monitor_info
op	28:40	0:0	8	.
water	28:41	0:0	8	rcWork
op	28:47	0:0	8	.
water	28:48	0:0	8	left
water	28:52	0:0	8	;
water	29:16	0:0	8	rect
op	29:20	0:0	8	.
water	29:21	0:0	8	top
op	29:25	0:0	8	=
water	29:27	0:0	8	monitor_info
op	29:39	0:0	8	.
water	29:40	0:0	8	rcWork
op	29:46	0:0	8	.
water	29:47	0:0	8	top
water	29:50	0:0	8	;
call	30:16	31:70	8	msg_Dbg
arg	30:24	30:26	9	vd
water	30:24	0:0	10	vd
arg	30:28	31:49	9	"DirectXEnumCallback: setting window ""position to %ld,%ld"
water	30:28	0:0	10	"DirectXEnumCallback: setting window "
water	31:28	0:0	10	"position to %ld,%ld"
arg	31:51	31:60	9	rect.left
water	31:51	0:0	10	rect
op	31:55	0:0	10	.
water	31:56	0:0	10	left
arg	31:62	31:70	9	rect.top
water	31:62	0:0	10	rect
op	31:66	0:0	10	.
water	31:67	0:0	10	top
water	31:71	0:0	8	;
call	32:16	34:71	8	SetWindowPos
arg	32:29	32:38	9	sys->hwnd
water	32:29	0:0	10	sys
op	32:32	0:0	10	->
water	32:34	0:0	10	hwnd
arg	32:40	32:44	9	NULL
water	32:40	0:0	10	NULL
arg	33:29	33:38	9	rect.left
water	33:29	0:0	10	rect
op	33:33	0:0	10	.
water	33:34	0:0	10	left
arg	33:40	33:48	9	rect.top
water	33:40	0:0	10	rect
op	33:44	0:0	10	.
water	33:45	0:0	10	top
arg	33:50	33:51	9	0
water	33:50	0:0	10	0
arg	33:53	33:54	9	0
water	33:53	0:0	10	0
arg	34:29	34:71	9	SWP_NOSIZE|SWP_NOZORDER|SWP_NOACTIVATE
water	34:29	0:0	10	SWP_NOSIZE
op	34:40	0:0	10	|
water	34:42	0:0	10	SWP_NOZORDER
op	34:55	0:0	10	|
water	34:57	0:0	10	SWP_NOACTIVATE
water	34:72	0:0	8	;
water	35:12	0:0	8	}
water	36:8	0:0	6	}
water	37:8	0:0	4	sys
op	37:11	0:0	4	->
water	37:13	0:0	4	hmonitor
op	37:22	0:0	4	=
water	37:24	0:0	4	hmon
water	37:28	0:0	4	;
water	38:4	0:0	4	}
call	39:4	39:15	2	free
arg	39:9	39:15	3	device
water	39:9	0:0	4	device
water	39:16	0:0	2	;
if	40:4	46:4	2	(hmon == sys -> hmonitor)
cond	40:8	40:21	3	hmon == sys -> hmonitor
water	40:8	0:0	4	hmon
op	40:13	0:0	4	==
water	40:16	0:0	4	sys
op	40:19	0:0	4	->
water	40:21	0:0	4	hmonitor
stmts	40:31	46:4	3	
water	40:31	0:0	4	{
call	41:8	41:64	4	msg_Dbg
arg	41:16	41:18	5	vd
water	41:16	0:0	6	vd
arg	41:20	41:38	5	"selecting %s, %s"
water	41:20	0:0	6	"selecting %s, %s"
arg	41:40	41:48	5	psz_desc
water	41:40	0:0	6	psz_desc
arg	41:50	41:64	5	psz_drivername
water	41:50	0:0	6	psz_drivername
water	41:65	0:0	4	;
call	42:8	42:32	4	free
arg	42:13	42:32	5	sys->display_driver
water	42:13	0:0	6	sys
op	42:16	0:0	6	->
water	42:18	0:0	6	display_driver
water	42:33	0:0	4	;
water	43:8	0:0	4	sys
op	43:11	0:0	4	->
water	43:13	0:0	4	display_driver
op	43:28	0:0	4	=
call	43:30	43:50	4	malloc
arg	43:37	43:50	5	sizeof(*guid)
op	43:37	0:0	6	sizeof
water	43:43	0:0	6	(
op	43:44	0:0	6	*
water	43:45	0:0	6	guid
water	43:49	0:0	6	)
water	43:51	0:0	4	;
if	44:8	45:40	4	(sys -> display_driver)
cond	44:12	44:17	5	sys -> display_driver
water	44:12	0:0	6	sys
op	44:15	0:0	6	->
water	44:17	0:0	6	display_driver
stmts	45:12	45:40	5	
op	45:12	0:0	6	*
water	45:13	0:0	6	sys
op	45:16	0:0	6	->
water	45:18	0:0	6	display_driver
op	45:33	0:0	6	=
op	45:35	0:0	6	*
water	45:36	0:0	6	guid
water	45:40	0:0	6	;
water	46:4	0:0	4	}
return	47:4	47:15	2	TRUE
water	47:11	0:0	3	TRUE

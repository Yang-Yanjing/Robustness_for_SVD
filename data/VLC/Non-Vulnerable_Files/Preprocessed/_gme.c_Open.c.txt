decl	1:7	1:50	0	gme_err_t	ReaderBlock
water	1:29	0:0	0	(
water	1:30	0:0	0	void
op	1:35	0:0	0	*
water	1:36	0:0	0	,
water	1:38	0:0	0	void
op	1:43	0:0	0	*
water	1:44	0:0	0	,
water	1:46	0:0	0	int
water	1:49	0:0	0	)
func	2:0	82:0	0	static int	Open
params	2:16	0:0	1	
param	2:17	2:34	2	vlc_object_t *	obj
stmnts	0:0	81:22	1	
decl	4:4	4:35	2	demux_t	*demux
op	4:19	0:0	2	=
water	4:21	0:0	2	(
water	4:22	0:0	2	demux_t
op	4:30	0:0	2	*
water	4:31	0:0	2	)
water	4:32	0:0	2	obj
decl	5:4	5:41	2	int64_t	size
op	5:17	0:0	2	=
call	5:19	5:40	3	stream_Size
arg	5:32	5:40	4	demux->s
water	5:32	0:0	5	demux
op	5:37	0:0	5	->
water	5:39	0:0	5	s
if	6:4	7:27	2	(size > LONG_MAX)
cond	6:8	6:15	3	size > LONG_MAX
water	6:8	0:0	4	size
op	6:13	0:0	4	>
water	6:15	0:0	4	LONG_MAX
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
decl	9:4	9:23	2	const uint8_t	*peek
if	10:4	11:27	2	(stream_Peek (demux -> s ,& peek ,4 ) < 4)
cond	10:8	10:43	3	stream_Peek (demux -> s ,& peek ,4 ) < 4
call	10:8	10:39	4	stream_Peek
arg	10:21	10:29	5	demux->s
water	10:21	0:0	6	demux
op	10:26	0:0	6	->
water	10:28	0:0	6	s
arg	10:31	10:36	5	&peek
op	10:31	0:0	6	&
water	10:32	0:0	6	peek
arg	10:38	10:39	5	4
water	10:38	0:0	6	4
op	10:41	0:0	4	<
water	10:43	0:0	4	4
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
decl	12:4	12:49	2	const char	*type
op	12:21	0:0	2	=
call	12:23	12:48	3	gme_identify_header
arg	12:44	12:48	4	peek
water	12:44	0:0	5	peek
if	13:4	14:27	2	(! * type)
cond	13:8	13:10	3	! * type
op	13:8	0:0	4	!
op	13:9	0:0	4	*
water	13:10	0:0	4	type
stmts	14:8	14:27	3	
return	14:8	14:27	4	VLC_EGENERIC
water	14:15	0:0	5	VLC_EGENERIC
call	15:4	15:47	2	msg_Dbg
arg	15:13	15:16	3	obj
water	15:13	0:0	4	obj
arg	15:18	15:41	3	"detected file type %s"
water	15:18	0:0	4	"detected file type %s"
arg	15:43	15:47	3	type
water	15:43	0:0	4	type
water	15:48	0:0	2	;
decl	16:4	16:24	2	block_t	*data
op	16:18	0:0	2	=
water	16:20	0:0	2	NULL
if	17:4	22:4	2	(size <= 0)
cond	17:8	17:16	3	size <= 0
water	17:8	0:0	4	size
op	17:13	0:0	4	<=
water	17:16	0:0	4	0
stmts	18:4	22:4	3	
water	18:4	0:0	4	{
water	19:8	0:0	4	data
op	19:13	0:0	4	=
call	19:15	19:46	4	stream_Block
arg	19:29	19:37	5	demux->s
water	19:29	0:0	6	demux
op	19:34	0:0	6	->
water	19:36	0:0	6	s
arg	19:39	19:46	5	1<<24
water	19:39	0:0	6	1
op	19:41	0:0	6	<<
water	19:44	0:0	6	24
water	19:47	0:0	4	;
if	20:8	21:31	4	(data == NULL)
cond	20:12	20:20	5	data == NULL
water	20:12	0:0	6	data
op	20:17	0:0	6	==
water	20:20	0:0	6	NULL
stmts	21:12	21:31	5	
return	21:12	21:31	6	VLC_EGENERIC
water	21:19	0:0	7	VLC_EGENERIC
water	22:4	0:0	4	}
decl	24:4	24:45	2	demux_sys_t	*sys
op	24:21	0:0	2	=
call	24:23	24:44	3	malloc
arg	24:31	24:44	4	sizeof(*sys)
op	24:31	0:0	5	sizeof
water	24:38	0:0	5	(
op	24:39	0:0	5	*
water	24:40	0:0	5	sys
water	24:43	0:0	5	)
if	25:4	26:25	2	(unlikely (sys == NULL ))
cond	25:8	25:28	3	unlikely (sys == NULL )
call	25:8	25:28	4	unlikely
arg	25:17	25:28	5	sys==NULL
water	25:17	0:0	6	sys
op	25:21	0:0	6	==
water	25:24	0:0	6	NULL
stmts	26:8	26:25	3	
return	26:8	26:25	4	VLC_ENOMEM
water	26:15	0:0	5	VLC_ENOMEM
water	27:4	0:0	2	sys
op	27:7	0:0	2	->
water	27:9	0:0	2	emu
op	27:13	0:0	2	=
call	27:15	27:63	2	gme_new_emu
arg	27:28	27:57	3	gme_identify_extension(type)
call	27:28	27:56	4	gme_identify_extension
arg	27:52	27:56	5	type
water	27:52	0:0	6	type
arg	27:59	27:63	3	RATE
water	27:59	0:0	4	RATE
water	27:64	0:0	2	;
if	28:4	32:4	2	(sys -> emu == NULL)
cond	28:8	28:20	3	sys -> emu == NULL
water	28:8	0:0	4	sys
op	28:11	0:0	4	->
water	28:13	0:0	4	emu
op	28:17	0:0	4	==
water	28:20	0:0	4	NULL
stmts	29:4	32:4	3	
water	29:4	0:0	4	{
call	30:8	30:17	4	free
arg	30:14	30:17	5	sys
water	30:14	0:0	6	sys
water	30:18	0:0	4	;
return	31:8	31:25	4	VLC_ENOMEM
water	31:15	0:0	5	VLC_ENOMEM
water	32:4	0:0	4	}
if	33:4	37:4	2	(data)
cond	33:8	33:8	3	data
water	33:8	0:0	4	data
stmts	34:4	37:4	3	
water	34:4	0:0	4	{
call	35:8	35:68	4	gme_load_custom
arg	35:25	35:33	5	sys->emu
water	35:25	0:0	6	sys
op	35:28	0:0	6	->
water	35:30	0:0	6	emu
arg	35:35	35:46	5	ReaderBlock
water	35:35	0:0	6	ReaderBlock
arg	35:48	35:62	5	data->i_buffer
water	35:48	0:0	6	data
op	35:52	0:0	6	->
water	35:54	0:0	6	i_buffer
arg	35:64	35:68	5	data
water	35:64	0:0	6	data
water	35:69	0:0	4	;
call	36:8	36:26	4	block_Release
arg	36:22	36:26	5	data
water	36:22	0:0	6	data
water	36:27	0:0	4	;
water	37:4	0:0	4	}
else	38:4	41:4	2
stmts	39:4	41:4	3	
water	39:4	0:0	4	{
call	40:8	40:63	4	gme_load_custom
arg	40:25	40:33	5	sys->emu
water	40:25	0:0	6	sys
op	40:28	0:0	6	->
water	40:30	0:0	6	emu
arg	40:35	40:47	5	ReaderStream
water	40:35	0:0	6	ReaderStream
arg	40:49	40:53	5	size
water	40:49	0:0	6	size
arg	40:55	40:63	5	demux->s
water	40:55	0:0	6	demux
op	40:60	0:0	6	->
water	40:62	0:0	6	s
water	40:64	0:0	4	;
water	41:4	0:0	4	}
call	42:4	42:48	2	gme_start_track
arg	42:21	42:29	3	sys->emu
water	42:21	0:0	4	sys
op	42:24	0:0	4	->
water	42:26	0:0	4	emu
arg	42:31	42:48	3	sys->track_id=0
water	42:31	0:0	4	sys
op	42:34	0:0	4	->
water	42:36	0:0	4	track_id
op	42:45	0:0	4	=
water	42:47	0:0	4	0
water	42:49	0:0	2	;
decl	43:4	43:19	2	es_format_t	fmt
call	44:4	44:50	2	es_format_Init
arg	44:20	44:24	3	&fmt
op	44:20	0:0	4	&
water	44:21	0:0	4	fmt
arg	44:26	44:34	3	AUDIO_ES
water	44:26	0:0	4	AUDIO_ES
arg	44:36	44:50	3	VLC_CODEC_S16N
water	44:36	0:0	4	VLC_CODEC_S16N
water	44:51	0:0	2	;
water	45:4	0:0	2	fmt
op	45:7	0:0	2	.
water	45:8	0:0	2	audio
op	45:13	0:0	2	.
water	45:14	0:0	2	i_rate
op	45:21	0:0	2	=
water	45:23	0:0	2	RATE
water	45:27	0:0	2	;
water	46:4	0:0	2	fmt
op	46:7	0:0	2	.
water	46:8	0:0	2	audio
op	46:13	0:0	2	.
water	46:14	0:0	2	i_bytes_per_frame
op	46:32	0:0	2	=
water	46:34	0:0	2	4
water	46:35	0:0	2	;
water	47:4	0:0	2	fmt
op	47:7	0:0	2	.
water	47:8	0:0	2	audio
op	47:13	0:0	2	.
water	47:14	0:0	2	i_frame_length
op	47:29	0:0	2	=
water	47:31	0:0	2	4
water	47:32	0:0	2	;
water	48:4	0:0	2	fmt
op	48:7	0:0	2	.
water	48:8	0:0	2	audio
op	48:13	0:0	2	.
water	48:14	0:0	2	i_channels
op	48:25	0:0	2	=
water	48:27	0:0	2	2
water	48:28	0:0	2	;
water	49:4	0:0	2	fmt
op	49:7	0:0	2	.
water	49:8	0:0	2	audio
op	49:13	0:0	2	.
water	49:14	0:0	2	i_blockalign
op	49:27	0:0	2	=
water	49:29	0:0	2	4
water	49:30	0:0	2	;
water	50:4	0:0	2	fmt
op	50:7	0:0	2	.
water	50:8	0:0	2	audio
op	50:13	0:0	2	.
water	50:14	0:0	2	i_bitspersample
op	50:30	0:0	2	=
water	50:32	0:0	2	16
water	50:34	0:0	2	;
water	51:4	0:0	2	fmt
op	51:7	0:0	2	.
water	51:8	0:0	2	i_bitrate
op	51:18	0:0	2	=
water	51:20	0:0	2	RATE
op	51:25	0:0	2	*
water	51:27	0:0	2	4
water	51:28	0:0	2	;
water	52:4	0:0	2	sys
op	52:7	0:0	2	->
water	52:9	0:0	2	es
op	52:12	0:0	2	=
call	52:14	52:42	2	es_out_Add
arg	52:26	52:36	3	demux->out
water	52:26	0:0	4	demux
op	52:31	0:0	4	->
water	52:33	0:0	4	out
arg	52:38	52:42	3	&fmt
op	52:38	0:0	4	&
water	52:39	0:0	4	fmt
water	52:43	0:0	2	;
call	53:4	53:33	2	date_Init
arg	53:15	53:24	3	&sys->pts
op	53:15	0:0	4	&
water	53:16	0:0	4	sys
op	53:19	0:0	4	->
water	53:21	0:0	4	pts
arg	53:26	53:30	3	RATE
water	53:26	0:0	4	RATE
arg	53:32	53:33	3	1
water	53:32	0:0	4	1
water	53:34	0:0	2	;
call	54:4	54:26	2	date_Set
arg	54:14	54:23	3	&sys->pts
op	54:14	0:0	4	&
water	54:15	0:0	4	sys
op	54:18	0:0	4	->
water	54:20	0:0	4	pts
arg	54:25	54:26	3	0
water	54:25	0:0	4	0
water	54:27	0:0	2	;
water	56:4	0:0	2	unsigned
water	56:13	0:0	2	n
op	56:15	0:0	2	=
call	56:17	56:42	2	gme_track_count
arg	56:34	56:42	3	sys->emu
water	56:34	0:0	4	sys
op	56:37	0:0	4	->
water	56:39	0:0	4	emu
water	56:43	0:0	2	;
water	57:4	0:0	2	sys
op	57:7	0:0	2	->
water	57:9	0:0	2	titlev
op	57:16	0:0	2	=
call	57:18	57:51	2	malloc
arg	57:26	57:51	3	n*sizeof(*sys->titlev)
water	57:26	0:0	4	n
op	57:28	0:0	4	*
op	57:30	0:0	4	sizeof
water	57:37	0:0	4	(
op	57:38	0:0	4	*
water	57:39	0:0	4	sys
op	57:42	0:0	4	->
water	57:44	0:0	4	titlev
water	57:50	0:0	4	)
water	57:52	0:0	2	;
if	58:4	59:13	2	(unlikely (sys -> titlev == NULL ))
cond	58:8	58:36	3	unlikely (sys -> titlev == NULL )
call	58:8	58:36	4	unlikely
arg	58:17	58:36	5	sys->titlev==NULL
water	58:17	0:0	6	sys
op	58:20	0:0	6	->
water	58:22	0:0	6	titlev
op	58:29	0:0	6	==
water	58:32	0:0	6	NULL
stmts	59:8	59:13	3	
water	59:8	0:0	4	n
op	59:10	0:0	4	=
water	59:12	0:0	4	0
water	59:13	0:0	4	;
water	60:4	0:0	2	sys
op	60:7	0:0	2	->
water	60:9	0:0	2	titlec
op	60:16	0:0	2	=
water	60:18	0:0	2	n
water	60:19	0:0	2	;
for	61:4	76:4	2	(unsigned i = 0 ;i < n;i ++)
forinit	61:9	61:23	3	unsigned i = 0 ;
water	61:9	0:0	4	unsigned
water	61:18	0:0	4	i
op	61:20	0:0	4	=
water	61:22	0:0	4	0
water	61:23	0:0	4	;
cond	61:25	61:29	3	i < n
water	61:25	0:0	4	i
op	61:27	0:0	4	<
water	61:29	0:0	4	n
forexpr	61:32	61:33	3	i ++
water	61:32	0:0	4	i
op	61:33	0:0	4	++
stmts	62:4	76:4	3	
water	62:4	0:0	4	{
decl	63:9	63:54	4	input_title_t	*title
op	63:30	0:0	4	=
call	63:32	63:53	5	vlc_input_title_New
water	64:9	0:0	4	sys
op	64:12	0:0	4	->
water	64:14	0:0	4	titlev
op	64:20	0:0	4	[
water	64:21	0:0	4	i
op	64:22	0:0	4	]
op	64:24	0:0	4	=
water	64:26	0:0	4	title
water	64:31	0:0	4	;
if	65:9	66:21	4	(unlikely (title == NULL ))
cond	65:13	65:35	5	unlikely (title == NULL )
call	65:13	65:35	6	unlikely
arg	65:22	65:35	7	title==NULL
water	65:22	0:0	8	title
op	65:28	0:0	8	==
water	65:31	0:0	8	NULL
stmts	66:13	66:21	5	
continue	66:13	66:21	6	
decl	67:9	67:26	4	gme_info_t	*infos
if	68:9	69:21	4	(gme_track_info (sys -> emu ,& infos ,i ))
cond	68:13	68:48	5	gme_track_info (sys -> emu ,& infos ,i )
call	68:13	68:48	6	gme_track_info
arg	68:29	68:37	7	sys->emu
water	68:29	0:0	8	sys
op	68:32	0:0	8	->
water	68:34	0:0	8	emu
arg	68:39	68:45	7	&infos
op	68:39	0:0	8	&
water	68:40	0:0	8	infos
arg	68:47	68:48	7	i
water	68:47	0:0	8	i
stmts	69:13	69:21	5	
continue	69:13	69:21	6	
call	70:9	70:74	4	msg_Dbg
arg	70:18	70:21	5	obj
water	70:18	0:0	6	obj
arg	70:23	70:43	5	"track %u: %s %d ms"
water	70:23	0:0	6	"track %u: %s %d ms"
arg	70:45	70:46	5	i
water	70:45	0:0	6	i
arg	70:48	70:59	5	infos->song
water	70:48	0:0	6	infos
op	70:53	0:0	6	->
water	70:55	0:0	6	song
arg	70:61	70:74	5	infos->length
water	70:61	0:0	6	infos
op	70:66	0:0	6	->
water	70:68	0:0	6	length
water	70:75	0:0	4	;
if	71:9	72:60	4	(infos -> length != - 1)
cond	71:13	71:31	5	infos -> length != - 1
water	71:13	0:0	6	infos
op	71:18	0:0	6	->
water	71:20	0:0	6	length
op	71:27	0:0	6	!=
op	71:30	0:0	6	-
water	71:31	0:0	6	1
stmts	72:13	72:60	5	
water	72:13	0:0	6	title
op	72:18	0:0	6	->
water	72:20	0:0	6	i_length
op	72:29	0:0	6	=
water	72:31	0:0	6	infos
op	72:36	0:0	6	->
water	72:38	0:0	6	length
call	72:45	72:59	6	*INT64_C
arg	72:55	72:59	7	1000
water	72:55	0:0	8	1000
water	72:60	0:0	6	;
if	73:9	74:51	4	(infos -> song [ 0 ])
cond	73:13	73:26	5	infos -> song [ 0 ]
water	73:13	0:0	6	infos
op	73:18	0:0	6	->
water	73:20	0:0	6	song
op	73:24	0:0	6	[
water	73:25	0:0	6	0
op	73:26	0:0	6	]
stmts	74:13	74:51	5	
water	74:13	0:0	6	title
op	74:18	0:0	6	->
water	74:20	0:0	6	psz_name
op	74:29	0:0	6	=
call	74:31	74:50	6	strdup
arg	74:39	74:50	7	infos->song
water	74:39	0:0	8	infos
op	74:44	0:0	8	->
water	74:46	0:0	8	song
water	74:51	0:0	6	;
call	75:9	75:29	4	gme_free_info
arg	75:24	75:29	5	infos
water	75:24	0:0	6	infos
water	75:30	0:0	4	;
water	76:4	0:0	4	}
water	78:4	0:0	2	demux
op	78:9	0:0	2	->
water	78:11	0:0	2	pf_demux
op	78:20	0:0	2	=
water	78:22	0:0	2	Demux
water	78:27	0:0	2	;
water	79:4	0:0	2	demux
op	79:9	0:0	2	->
water	79:11	0:0	2	pf_control
op	79:22	0:0	2	=
water	79:24	0:0	2	Control
water	79:31	0:0	2	;
water	80:4	0:0	2	demux
op	80:9	0:0	2	->
water	80:11	0:0	2	p_sys
op	80:17	0:0	2	=
water	80:19	0:0	2	sys
water	80:22	0:0	2	;
return	81:4	81:22	2	VLC_SUCCESS
water	81:11	0:0	3	VLC_SUCCESS

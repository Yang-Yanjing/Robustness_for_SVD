func	1:0	15:0	0	static int	MarshalCanPause
params	2:15	0:0	1	
param	2:17	2:38	2	intf_thread_t *	p_intf
param	2:40	2:67	2	DBusMessageIter *	container
stmnts	0:0	14:22	1	
decl	4:4	4:35	2	dbus_bool_t	b_can_pause
op	4:28	0:0	2	=
water	4:30	0:0	2	FALSE
decl	5:4	5:55	2	input_thread_t	*p_input
op	5:28	0:0	2	=
call	5:30	5:54	3	pl_CurrentInput
arg	5:47	5:54	4	p_intf
water	5:47	0:0	5	p_intf
if	6:4	10:4	2	(p_input)
cond	6:8	6:8	3	p_input
water	6:8	0:0	4	p_input
stmts	7:4	10:4	3	
water	7:4	0:0	4	{
water	8:8	0:0	4	b_can_pause
op	8:20	0:0	4	=
call	8:22	8:56	4	var_GetBool
arg	8:35	8:42	5	p_input
water	8:35	0:0	6	p_input
arg	8:44	8:56	5	"can-pause"
water	8:44	0:0	6	"can-pause"
water	8:57	0:0	4	;
call	9:8	9:36	4	vlc_object_release
arg	9:28	9:36	5	p_input
water	9:28	0:0	6	p_input
water	9:37	0:0	4	;
water	10:4	0:0	4	}
if	11:4	13:25	2	(!dbus_message_iter_append_basic (container ,DBUS_TYPE_BOOLEAN ,& b_can_pause ))
cond	11:8	12:54	3	!dbus_message_iter_append_basic (container ,DBUS_TYPE_BOOLEAN ,& b_can_pause )
op	11:8	0:0	4	!
call	11:9	12:54	4	dbus_message_iter_append_basic
arg	11:41	11:50	5	container
water	11:41	0:0	6	container
arg	11:52	11:69	5	DBUS_TYPE_BOOLEAN
water	11:52	0:0	6	DBUS_TYPE_BOOLEAN
arg	12:41	12:54	5	&b_can_pause
op	12:41	0:0	6	&
water	12:42	0:0	6	b_can_pause
stmts	13:8	13:25	3	
return	13:8	13:25	4	VLC_ENOMEM
water	13:15	0:0	5	VLC_ENOMEM
return	14:4	14:22	2	VLC_SUCCESS
water	14:11	0:0	3	VLC_SUCCESS

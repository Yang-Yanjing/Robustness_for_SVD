func	1:0	22:0	0	static int	MarshalSupportedMimeTypes
params	2:25	0:0	1	
param	2:27	2:48	2	intf_thread_t *	p_intf
param	2:50	2:77	2	DBusMessageIter *	container
stmnts	4:4	21:22	1	
call	4:4	4:23	2	VLC_UNUSED
arg	4:16	4:23	3	p_intf
water	4:16	0:0	4	p_intf
water	4:24	0:0	2	;
decl	5:4	5:23	2	DBusMessageIter	ret
decl	6:4	7:44	2	size_t	i_len
op	6:17	0:0	2	=
op	6:19	0:0	2	sizeof
water	6:25	0:0	2	(
water	6:27	0:0	2	ppsz_supported_mime_types
water	6:53	0:0	2	)
op	6:55	0:0	2	/
op	7:8	0:0	2	sizeof
water	7:14	0:0	2	(
op	7:16	0:0	2	*
water	7:17	0:0	2	ppsz_supported_mime_types
water	7:43	0:0	2	)
if	8:4	11:25	2	(!dbus_message_iter_open_container (container ,DBUS_TYPE_ARRAY ,"s" ,& ret ))
cond	8:8	10:48	3	!dbus_message_iter_open_container (container ,DBUS_TYPE_ARRAY ,"s" ,& ret )
op	8:8	0:0	4	!
call	8:9	10:48	4	dbus_message_iter_open_container
arg	8:43	8:52	5	container
water	8:43	0:0	6	container
arg	9:43	9:58	5	DBUS_TYPE_ARRAY
water	9:43	0:0	6	DBUS_TYPE_ARRAY
arg	9:60	9:63	5	"s"
water	9:60	0:0	6	"s"
arg	10:43	10:48	5	&ret
op	10:43	0:0	6	&
water	10:44	0:0	6	ret
stmts	11:8	11:25	3	
return	11:8	11:25	4	VLC_ENOMEM
water	11:15	0:0	5	VLC_ENOMEM
for	12:4	18:4	2	( size_t i = 0 ;i < i_len;++ i)
forinit	0:0	12:21	3	 size_t i = 0 ;
decl	12:9	12:21	4	size_t	i
op	12:18	0:0	4	=
water	12:20	0:0	4	0
cond	12:23	12:27	3	i < i_len
water	12:23	0:0	4	i
op	12:25	0:0	4	<
water	12:27	0:0	4	i_len
forexpr	12:34	12:36	3	++ i
op	12:34	0:0	4	++
water	12:36	0:0	4	i
stmts	13:4	18:4	3	
water	13:4	0:0	4	{
water	14:8	0:0	4	const
water	14:14	0:0	4	char
op	14:18	0:0	4	*
water	14:20	0:0	4	const
water	14:26	0:0	4	psz_mime_type
op	14:40	0:0	4	=
water	14:42	0:0	4	ppsz_supported_mime_types
op	14:67	0:0	4	[
water	14:68	0:0	4	i
op	14:69	0:0	4	]
water	14:70	0:0	4	;
if	15:8	17:29	4	(!dbus_message_iter_append_basic (& ret ,DBUS_TYPE_STRING ,& psz_mime_type ))
cond	15:12	16:60	5	!dbus_message_iter_append_basic (& ret ,DBUS_TYPE_STRING ,& psz_mime_type )
op	15:12	0:0	6	!
call	15:13	16:60	6	dbus_message_iter_append_basic
arg	15:45	15:49	7	&ret
op	15:45	0:0	8	&
water	15:46	0:0	8	ret
arg	15:51	15:67	7	DBUS_TYPE_STRING
water	15:51	0:0	8	DBUS_TYPE_STRING
arg	16:45	16:60	7	&psz_mime_type
op	16:45	0:0	8	&
water	16:46	0:0	8	psz_mime_type
stmts	17:12	17:29	5	
return	17:12	17:29	6	VLC_ENOMEM
water	17:19	0:0	7	VLC_ENOMEM
water	18:4	0:0	4	}
if	19:4	20:25	2	(!dbus_message_iter_close_container (container ,& ret ))
cond	19:8	19:60	3	!dbus_message_iter_close_container (container ,& ret )
op	19:8	0:0	4	!
call	19:9	19:60	4	dbus_message_iter_close_container
arg	19:44	19:53	5	container
water	19:44	0:0	6	container
arg	19:55	19:60	5	&ret
op	19:55	0:0	6	&
water	19:56	0:0	6	ret
stmts	20:8	20:25	3	
return	20:8	20:25	4	VLC_ENOMEM
water	20:15	0:0	5	VLC_ENOMEM
return	21:4	21:22	2	VLC_SUCCESS
water	21:11	0:0	3	VLC_SUCCESS

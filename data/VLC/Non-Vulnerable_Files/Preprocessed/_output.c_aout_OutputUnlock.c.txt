func	2:0	30:0	0	void	aout_OutputUnlock
params	2:23	0:0	1	
param	2:24	2:44	2	audio_output_t *	aout
stmnts	0:0	29:39	1	
decl	4:4	4:43	2	aout_owner_t	*owner
op	4:24	0:0	2	=
call	4:26	4:42	3	aout_owner
arg	4:38	4:42	4	aout
water	4:38	0:0	5	aout
call	5:4	5:35	2	vlc_assert_locked
arg	5:23	5:35	3	&owner->lock
op	5:23	0:0	4	&
water	5:24	0:0	4	owner
op	5:29	0:0	4	->
water	5:31	0:0	4	lock
water	5:36	0:0	2	;
call	6:4	6:36	2	vlc_mutex_lock
arg	6:20	6:36	3	&owner->req.lock
op	6:20	0:0	4	&
water	6:21	0:0	4	owner
op	6:26	0:0	4	->
water	6:28	0:0	4	req
op	6:31	0:0	4	.
water	6:32	0:0	4	lock
water	6:37	0:0	2	;
if	7:4	12:4	2	(owner -> req . device != unset_str)
cond	7:8	7:29	3	owner -> req . device != unset_str
water	7:8	0:0	4	owner
op	7:13	0:0	4	->
water	7:15	0:0	4	req
op	7:18	0:0	4	.
water	7:19	0:0	4	device
op	7:26	0:0	4	!=
water	7:29	0:0	4	unset_str
stmts	8:4	12:4	3	
water	8:4	0:0	4	{
call	9:8	9:53	4	aout_OutputDeviceSet
arg	9:30	9:34	5	aout
water	9:30	0:0	6	aout
arg	9:36	9:53	5	owner->req.device
water	9:36	0:0	6	owner
op	9:41	0:0	6	->
water	9:43	0:0	6	req
op	9:46	0:0	6	.
water	9:47	0:0	6	device
water	9:54	0:0	4	;
call	10:8	10:31	4	free
arg	10:14	10:31	5	owner->req.device
water	10:14	0:0	6	owner
op	10:19	0:0	6	->
water	10:21	0:0	6	req
op	10:24	0:0	6	.
water	10:25	0:0	6	device
water	10:32	0:0	4	;
water	11:8	0:0	4	owner
op	11:13	0:0	4	->
water	11:15	0:0	4	req
op	11:18	0:0	4	.
water	11:19	0:0	4	device
op	11:26	0:0	4	=
water	11:28	0:0	4	(
water	11:29	0:0	4	char
op	11:34	0:0	4	*
water	11:35	0:0	4	)
water	11:36	0:0	4	unset_str
water	11:45	0:0	4	;
water	12:4	0:0	4	}
if	13:4	17:4	2	(owner -> req . volume >= 0 . f)
cond	13:8	13:31	3	owner -> req . volume >= 0 . f
water	13:8	0:0	4	owner
op	13:13	0:0	4	->
water	13:15	0:0	4	req
op	13:18	0:0	4	.
water	13:19	0:0	4	volume
op	13:26	0:0	4	>=
water	13:29	0:0	4	0
op	13:30	0:0	4	.
water	13:31	0:0	4	f
stmts	14:4	17:4	3	
water	14:4	0:0	4	{
call	15:8	15:53	4	aout_OutputVolumeSet
arg	15:30	15:34	5	aout
water	15:30	0:0	6	aout
arg	15:36	15:53	5	owner->req.volume
water	15:36	0:0	6	owner
op	15:41	0:0	6	->
water	15:43	0:0	6	req
op	15:46	0:0	6	.
water	15:47	0:0	6	volume
water	15:54	0:0	4	;
water	16:8	0:0	4	owner
op	16:13	0:0	4	->
water	16:15	0:0	4	req
op	16:18	0:0	4	.
water	16:19	0:0	4	volume
op	16:26	0:0	4	=
op	16:28	0:0	4	-
water	16:29	0:0	4	1
op	16:30	0:0	4	.
water	16:31	0:0	4	f
water	16:32	0:0	4	;
water	17:4	0:0	4	}
if	18:4	22:4	2	(owner -> req . mute >= 0)
cond	18:8	18:27	3	owner -> req . mute >= 0
water	18:8	0:0	4	owner
op	18:13	0:0	4	->
water	18:15	0:0	4	req
op	18:18	0:0	4	.
water	18:19	0:0	4	mute
op	18:24	0:0	4	>=
water	18:27	0:0	4	0
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:49	4	aout_OutputMuteSet
arg	20:28	20:32	5	aout
water	20:28	0:0	6	aout
arg	20:34	20:49	5	owner->req.mute
water	20:34	0:0	6	owner
op	20:39	0:0	6	->
water	20:41	0:0	6	req
op	20:44	0:0	6	.
water	20:45	0:0	6	mute
water	20:50	0:0	4	;
water	21:8	0:0	4	owner
op	21:13	0:0	4	->
water	21:15	0:0	4	req
op	21:18	0:0	4	.
water	21:19	0:0	4	mute
op	21:24	0:0	4	=
op	21:26	0:0	4	-
water	21:27	0:0	4	1
water	21:28	0:0	4	;
water	22:4	0:0	4	}
call	23:4	23:34	2	vlc_mutex_unlock
arg	23:22	23:34	3	&owner->lock
op	23:22	0:0	4	&
water	23:23	0:0	4	owner
op	23:28	0:0	4	->
water	23:30	0:0	4	lock
water	23:35	0:0	2	;
call	29:4	29:38	2	vlc_mutex_unlock
arg	29:22	29:38	3	&owner->req.lock
op	29:22	0:0	4	&
water	29:23	0:0	4	owner
op	29:28	0:0	4	->
water	29:30	0:0	4	req
op	29:33	0:0	4	.
water	29:34	0:0	4	lock
water	29:39	0:0	2	;

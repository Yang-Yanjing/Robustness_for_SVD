func	2:0	30:0	0	static void	ControlPause
params	2:24	0:0	1	
param	2:26	2:49	2	input_thread_t *	p_input
param	2:51	2:74	2	mtime_t	i_control_date
stmnts	0:0	29:41	1	
decl	4:4	4:27	2	int	i_ret
op	4:14	0:0	2	=
water	4:16	0:0	2	VLC_SUCCESS
decl	5:4	5:25	2	int	i_state
op	5:16	0:0	2	=
water	5:18	0:0	2	PAUSE_S
if	6:4	18:4	2	(p_input -> p -> b_can_pause)
cond	6:8	6:20	3	p_input -> p -> b_can_pause
water	6:8	0:0	4	p_input
op	6:15	0:0	4	->
water	6:17	0:0	4	p
op	6:18	0:0	4	->
water	6:20	0:0	4	b_can_pause
stmts	7:4	18:4	3	
water	7:4	0:0	4	{
decl	8:8	8:52	4	demux_t	*p_demux
op	8:25	0:0	4	=
water	8:27	0:0	4	p_input
op	8:34	0:0	4	->
water	8:36	0:0	4	p
op	8:37	0:0	4	->
water	8:39	0:0	4	input
op	8:44	0:0	4	.
water	8:45	0:0	4	p_demux
if	9:8	10:78	4	(p_demux -> s != NULL)
cond	9:12	9:26	5	p_demux -> s != NULL
water	9:12	0:0	6	p_demux
op	9:19	0:0	6	->
water	9:21	0:0	6	s
op	9:23	0:0	6	!=
water	9:26	0:0	6	NULL
stmts	10:12	10:78	5	
water	10:12	0:0	6	i_ret
op	10:18	0:0	6	=
call	10:20	10:77	6	stream_Control
arg	10:36	10:46	7	p_demux->s
water	10:36	0:0	8	p_demux
op	10:43	0:0	8	->
water	10:45	0:0	8	s
arg	10:48	10:70	7	STREAM_SET_PAUSE_STATE
water	10:48	0:0	8	STREAM_SET_PAUSE_STATE
arg	10:72	10:77	7	true
water	10:72	0:0	8	true
water	10:78	0:0	6	;
else	11:8	12:73	4
stmts	12:12	12:73	5	
water	12:12	0:0	6	i_ret
op	12:18	0:0	6	=
call	12:20	12:72	6	demux_Control
arg	12:35	12:42	7	p_demux
water	12:35	0:0	8	p_demux
arg	12:44	12:65	7	DEMUX_SET_PAUSE_STATE
water	12:44	0:0	8	DEMUX_SET_PAUSE_STATE
arg	12:67	12:72	7	true
water	12:67	0:0	8	true
water	12:73	0:0	6	;
if	13:8	17:8	4	(i_ret)
cond	13:12	13:12	5	i_ret
water	13:12	0:0	6	i_ret
stmts	14:8	17:8	5	
water	14:8	0:0	6	{
call	15:12	15:56	6	msg_Warn
arg	15:22	15:29	7	p_input
water	15:22	0:0	8	p_input
arg	15:31	15:56	7	"cannot set pause state"
water	15:31	0:0	8	"cannot set pause state"
water	15:57	0:0	6	;
return	16:12	16:18	6	
water	17:8	0:0	6	}
water	18:4	0:0	4	}
water	20:4	0:0	2	i_ret
op	20:10	0:0	2	=
call	20:12	22:49	2	es_out_SetPauseState
arg	20:34	20:54	3	p_input->p->p_es_out
water	20:34	0:0	4	p_input
op	20:41	0:0	4	->
water	20:43	0:0	4	p
op	20:44	0:0	4	->
water	20:46	0:0	4	p_es_out
arg	21:34	21:57	3	p_input->p->b_can_pause
water	21:34	0:0	4	p_input
op	21:41	0:0	4	->
water	21:43	0:0	4	p
op	21:44	0:0	4	->
water	21:46	0:0	4	b_can_pause
arg	21:59	21:63	3	true
water	21:59	0:0	4	true
arg	22:34	22:49	3	i_control_date
water	22:34	0:0	4	i_control_date
water	22:50	0:0	2	;
if	23:4	27:4	2	(i_ret)
cond	23:8	23:8	3	i_ret
water	23:8	0:0	4	i_ret
stmts	24:4	27:4	3	
water	24:4	0:0	4	{
call	25:8	25:68	4	msg_Warn
arg	25:18	25:25	5	p_input
water	25:18	0:0	6	p_input
arg	25:27	25:68	5	"cannot set pause state at es_out level"
water	25:27	0:0	6	"cannot set pause state at es_out level"
water	25:69	0:0	4	;
return	26:8	26:14	4	
water	27:4	0:0	4	}
call	29:4	29:40	2	input_ChangeState
arg	29:23	29:30	3	p_input
water	29:23	0:0	4	p_input
arg	29:32	29:40	3	i_state
water	29:32	0:0	4	i_state
water	29:41	0:0	2	;

func	2:0	30:0	0	static int	YCbCrOpen
params	2:20	0:0	1	
param	2:21	2:38	2	vlc_object_t *	obj
stmnts	0:0	29:22	1	
decl	4:4	4:38	2	filter_t	*filter
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	filter_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	obj
if	5:4	8:27	2	(filter -> fmt_in . video . i_chroma != VLC_CODEC_VDPAU_VIDEO_420 && filter -> fmt_in . video . i_chroma != VLC_CODEC_VDPAU_VIDEO_422 && filter -> fmt_in . video . i_chroma != VLC_CODEC_VDPAU_VIDEO_444)
cond	5:8	7:41	3	filter -> fmt_in . video . i_chroma != VLC_CODEC_VDPAU_VIDEO_420 && filter -> fmt_in . video . i_chroma != VLC_CODEC_VDPAU_VIDEO_422 && filter -> fmt_in . video . i_chroma != VLC_CODEC_VDPAU_VIDEO_444
water	5:8	0:0	4	filter
op	5:14	0:0	4	->
water	5:16	0:0	4	fmt_in
op	5:22	0:0	4	.
water	5:23	0:0	4	video
op	5:28	0:0	4	.
water	5:29	0:0	4	i_chroma
op	5:38	0:0	4	!=
water	5:41	0:0	4	VLC_CODEC_VDPAU_VIDEO_420
op	6:5	0:0	4	&&
water	6:8	0:0	4	filter
op	6:14	0:0	4	->
water	6:16	0:0	4	fmt_in
op	6:22	0:0	4	.
water	6:23	0:0	4	video
op	6:28	0:0	4	.
water	6:29	0:0	4	i_chroma
op	6:38	0:0	4	!=
water	6:41	0:0	4	VLC_CODEC_VDPAU_VIDEO_422
op	7:5	0:0	4	&&
water	7:8	0:0	4	filter
op	7:14	0:0	4	->
water	7:16	0:0	4	fmt_in
op	7:22	0:0	4	.
water	7:23	0:0	4	video
op	7:28	0:0	4	.
water	7:29	0:0	4	i_chroma
op	7:38	0:0	4	!=
water	7:41	0:0	4	VLC_CODEC_VDPAU_VIDEO_444
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
if	9:4	17:27	2	(filter -> fmt_in . video . i_visible_width != filter -> fmt_out . video . i_visible_width || filter -> fmt_in . video . i_visible_height != filter -> fmt_out . video . i_visible_height || filter -> fmt_in . video . i_x_offset != filter -> fmt_out . video . i_x_offset || filter -> fmt_in . video . i_y_offset != filter -> fmt_out . video . i_y_offset || ( filter -> fmt_in . video . i_sar_num * filter -> fmt_out . video . i_sar_den != filter -> fmt_in . video . i_sar_den * filter -> fmt_out . video . i_sar_num ))
cond	9:8	16:77	3	filter -> fmt_in . video . i_visible_width != filter -> fmt_out . video . i_visible_width || filter -> fmt_in . video . i_visible_height != filter -> fmt_out . video . i_visible_height || filter -> fmt_in . video . i_x_offset != filter -> fmt_out . video . i_x_offset || filter -> fmt_in . video . i_y_offset != filter -> fmt_out . video . i_y_offset || ( filter -> fmt_in . video . i_sar_num * filter -> fmt_out . video . i_sar_den != filter -> fmt_in . video . i_sar_den * filter -> fmt_out . video . i_sar_num )
water	9:8	0:0	4	filter
op	9:14	0:0	4	->
water	9:16	0:0	4	fmt_in
op	9:22	0:0	4	.
water	9:23	0:0	4	video
op	9:28	0:0	4	.
water	9:29	0:0	4	i_visible_width
op	10:39	0:0	4	!=
water	10:42	0:0	4	filter
op	10:48	0:0	4	->
water	10:50	0:0	4	fmt_out
op	10:57	0:0	4	.
water	10:58	0:0	4	video
op	10:63	0:0	4	.
water	10:64	0:0	4	i_visible_width
op	11:5	0:0	4	||
water	11:8	0:0	4	filter
op	11:14	0:0	4	->
water	11:16	0:0	4	fmt_in
op	11:22	0:0	4	.
water	11:23	0:0	4	video
op	11:28	0:0	4	.
water	11:29	0:0	4	i_visible_height
op	12:38	0:0	4	!=
water	12:41	0:0	4	filter
op	12:47	0:0	4	->
water	12:49	0:0	4	fmt_out
op	12:56	0:0	4	.
water	12:57	0:0	4	video
op	12:62	0:0	4	.
water	12:63	0:0	4	i_visible_height
op	13:5	0:0	4	||
water	13:8	0:0	4	filter
op	13:14	0:0	4	->
water	13:16	0:0	4	fmt_in
op	13:22	0:0	4	.
water	13:23	0:0	4	video
op	13:28	0:0	4	.
water	13:29	0:0	4	i_x_offset
op	13:40	0:0	4	!=
water	13:43	0:0	4	filter
op	13:49	0:0	4	->
water	13:51	0:0	4	fmt_out
op	13:58	0:0	4	.
water	13:59	0:0	4	video
op	13:64	0:0	4	.
water	13:65	0:0	4	i_x_offset
op	14:5	0:0	4	||
water	14:8	0:0	4	filter
op	14:14	0:0	4	->
water	14:16	0:0	4	fmt_in
op	14:22	0:0	4	.
water	14:23	0:0	4	video
op	14:28	0:0	4	.
water	14:29	0:0	4	i_y_offset
op	14:40	0:0	4	!=
water	14:43	0:0	4	filter
op	14:49	0:0	4	->
water	14:51	0:0	4	fmt_out
op	14:58	0:0	4	.
water	14:59	0:0	4	video
op	14:64	0:0	4	.
water	14:65	0:0	4	i_y_offset
op	15:5	0:0	4	||
water	15:8	0:0	4	(
water	15:9	0:0	4	filter
op	15:15	0:0	4	->
water	15:17	0:0	4	fmt_in
op	15:23	0:0	4	.
water	15:24	0:0	4	video
op	15:29	0:0	4	.
water	15:30	0:0	4	i_sar_num
op	15:40	0:0	4	*
water	15:42	0:0	4	filter
op	15:48	0:0	4	->
water	15:50	0:0	4	fmt_out
op	15:57	0:0	4	.
water	15:58	0:0	4	video
op	15:63	0:0	4	.
water	15:64	0:0	4	i_sar_den
op	16:10	0:0	4	!=
water	16:13	0:0	4	filter
op	16:19	0:0	4	->
water	16:21	0:0	4	fmt_in
op	16:27	0:0	4	.
water	16:28	0:0	4	video
op	16:33	0:0	4	.
water	16:34	0:0	4	i_sar_den
op	16:44	0:0	4	*
water	16:46	0:0	4	filter
op	16:52	0:0	4	->
water	16:54	0:0	4	fmt_out
op	16:61	0:0	4	.
water	16:62	0:0	4	video
op	16:67	0:0	4	.
water	16:68	0:0	4	i_sar_num
water	16:77	0:0	4	)
stmts	17:8	17:27	3	
return	17:8	17:27	4	VLC_EGENERIC
water	17:15	0:0	5	VLC_EGENERIC
decl	18:4	18:45	2	filter_sys_t	*sys
op	18:22	0:0	2	=
call	18:24	18:44	3	malloc
arg	18:31	18:44	4	sizeof(*sys)
op	18:31	0:0	5	sizeof
water	18:38	0:0	5	(
op	18:39	0:0	5	*
water	18:40	0:0	5	sys
water	18:43	0:0	5	)
if	19:4	20:25	2	(unlikely (sys == NULL ))
cond	19:8	19:28	3	unlikely (sys == NULL )
call	19:8	19:28	4	unlikely
arg	19:17	19:28	5	sys==NULL
water	19:17	0:0	6	sys
op	19:21	0:0	6	==
water	19:24	0:0	6	NULL
stmts	20:8	20:25	3	
return	20:8	20:25	4	VLC_ENOMEM
water	20:15	0:0	5	VLC_ENOMEM
if	21:4	26:4	2	(!vlc_fourcc_to_vdp_ycc (filter -> fmt_out . video . i_chroma ,& sys -> chroma ,& sys -> format ))
cond	21:8	22:57	3	!vlc_fourcc_to_vdp_ycc (filter -> fmt_out . video . i_chroma ,& sys -> chroma ,& sys -> format )
op	21:8	0:0	4	!
call	21:9	22:57	4	vlc_fourcc_to_vdp_ycc
arg	21:31	21:61	5	filter->fmt_out.video.i_chroma
water	21:31	0:0	6	filter
op	21:37	0:0	6	->
water	21:39	0:0	6	fmt_out
op	21:46	0:0	6	.
water	21:47	0:0	6	video
op	21:52	0:0	6	.
water	21:53	0:0	6	i_chroma
arg	22:31	22:43	5	&sys->chroma
op	22:31	0:0	6	&
water	22:32	0:0	6	sys
op	22:35	0:0	6	->
water	22:37	0:0	6	chroma
arg	22:45	22:57	5	&sys->format
op	22:45	0:0	6	&
water	22:46	0:0	6	sys
op	22:49	0:0	6	->
water	22:51	0:0	6	format
stmts	23:4	26:4	3	
water	23:4	0:0	4	{
call	24:8	24:16	4	free
arg	24:13	24:16	5	sys
water	24:13	0:0	6	sys
water	24:17	0:0	4	;
return	25:8	25:27	4	VLC_EGENERIC
water	25:15	0:0	5	VLC_EGENERIC
water	26:4	0:0	4	}
water	27:4	0:0	2	filter
op	27:10	0:0	2	->
water	27:12	0:0	2	pf_video_filter
op	27:28	0:0	2	=
water	27:30	0:0	2	VideoExport_Filter
water	27:48	0:0	2	;
water	28:4	0:0	2	filter
op	28:10	0:0	2	->
water	28:12	0:0	2	p_sys
op	28:18	0:0	2	=
water	28:20	0:0	2	sys
water	28:23	0:0	2	;
return	29:4	29:22	2	VLC_SUCCESS
water	29:11	0:0	3	VLC_SUCCESS

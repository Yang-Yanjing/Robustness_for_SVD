func	2:0	271:0	0	static block_t *	ParseMPEGBlock
params	2:30	0:0	1	
param	2:32	2:48	2	decoder_t *	p_dec
param	2:50	2:66	2	block_t *	p_frag
stmnts	0:0	270:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:25	2	block_t	*p_pic
op	5:19	0:0	2	=
water	5:21	0:0	2	NULL
if	9:4	20:4	2	(( p_sys -> b_frame_slice && ( p_frag -> p_buffer [ 3 ] == 0 x00 || p_frag -> p_buffer [ 3 ] > 0 xaf ) ) && p_sys -> p_seq == NULL)
cond	9:8	11:26	3	( p_sys -> b_frame_slice && ( p_frag -> p_buffer [ 3 ] == 0 x00 || p_frag -> p_buffer [ 3 ] > 0 xaf ) ) && p_sys -> p_seq == NULL
water	9:8	0:0	4	(
water	9:10	0:0	4	p_sys
op	9:15	0:0	4	->
water	9:17	0:0	4	b_frame_slice
op	9:31	0:0	4	&&
water	10:10	0:0	4	(
water	10:11	0:0	4	p_frag
op	10:17	0:0	4	->
water	10:19	0:0	4	p_buffer
op	10:27	0:0	4	[
water	10:28	0:0	4	3
op	10:29	0:0	4	]
op	10:31	0:0	4	==
water	10:34	0:0	4	0
water	10:35	0:0	4	x00
op	10:39	0:0	4	||
water	10:42	0:0	4	p_frag
op	10:48	0:0	4	->
water	10:50	0:0	4	p_buffer
op	10:58	0:0	4	[
water	10:59	0:0	4	3
op	10:60	0:0	4	]
op	10:62	0:0	4	>
water	10:64	0:0	4	0
water	10:65	0:0	4	xaf
water	10:68	0:0	4	)
water	10:70	0:0	4	)
op	10:72	0:0	4	&&
water	11:10	0:0	4	p_sys
op	11:15	0:0	4	->
water	11:17	0:0	4	p_seq
op	11:23	0:0	4	==
water	11:26	0:0	4	NULL
stmts	12:4	20:4	3	
water	12:4	0:0	4	{
call	15:8	15:53	4	msg_Dbg
arg	15:17	15:22	5	p_dec
water	15:17	0:0	6	p_dec
arg	15:24	15:53	5	"waiting for sequence start"
water	15:24	0:0	6	"waiting for sequence start"
water	15:54	0:0	4	;
if	16:8	16:65	4	(p_sys -> p_frame)
cond	16:12	16:19	5	p_sys -> p_frame
water	16:12	0:0	6	p_sys
op	16:17	0:0	6	->
water	16:19	0:0	6	p_frame
stmts	16:29	16:65	5	
call	16:29	16:64	6	block_ChainRelease
arg	16:49	16:64	7	p_sys->p_frame
water	16:49	0:0	8	p_sys
op	16:54	0:0	8	->
water	16:56	0:0	8	p_frame
water	16:65	0:0	6	;
water	17:8	0:0	4	p_sys
op	17:13	0:0	4	->
water	17:15	0:0	4	p_frame
op	17:23	0:0	4	=
water	17:25	0:0	4	NULL
water	17:29	0:0	4	;
water	18:8	0:0	4	p_sys
op	18:13	0:0	4	->
water	18:15	0:0	4	pp_last
op	18:23	0:0	4	=
op	18:25	0:0	4	&
water	18:26	0:0	4	p_sys
op	18:31	0:0	4	->
water	18:33	0:0	4	p_frame
water	18:40	0:0	4	;
water	19:8	0:0	4	p_sys
op	19:13	0:0	4	->
water	19:15	0:0	4	b_frame_slice
op	19:29	0:0	4	=
water	19:31	0:0	4	false
water	19:36	0:0	4	;
water	20:4	0:0	4	}
else	21:4	131:4	2
stmts	21:9	131:4	3	
if	21:9	131:4	4	(p_sys -> b_frame_slice && ( p_frag -> p_buffer [ 3 ] == 0 x00 || p_frag -> p_buffer [ 3 ] > 0 xaf ))
cond	21:13	22:71	5	p_sys -> b_frame_slice && ( p_frag -> p_buffer [ 3 ] == 0 x00 || p_frag -> p_buffer [ 3 ] > 0 xaf )
water	21:13	0:0	6	p_sys
op	21:18	0:0	6	->
water	21:20	0:0	6	b_frame_slice
op	21:34	0:0	6	&&
water	22:13	0:0	6	(
water	22:14	0:0	6	p_frag
op	22:20	0:0	6	->
water	22:22	0:0	6	p_buffer
op	22:30	0:0	6	[
water	22:31	0:0	6	3
op	22:32	0:0	6	]
op	22:34	0:0	6	==
water	22:37	0:0	6	0
water	22:38	0:0	6	x00
op	22:42	0:0	6	||
water	22:45	0:0	6	p_frag
op	22:51	0:0	6	->
water	22:53	0:0	6	p_buffer
op	22:61	0:0	6	[
water	22:62	0:0	6	3
op	22:63	0:0	6	]
op	22:65	0:0	6	>
water	22:67	0:0	6	0
water	22:68	0:0	6	xaf
water	22:71	0:0	6	)
stmts	23:4	131:4	5	
water	23:4	0:0	6	{
decl	24:8	24:54	6	const bool	b_eos
op	24:25	0:0	6	=
water	24:27	0:0	6	p_frag
op	24:33	0:0	6	->
water	24:35	0:0	6	p_buffer
op	24:43	0:0	6	[
water	24:44	0:0	6	3
op	24:45	0:0	6	]
op	24:47	0:0	6	==
water	24:50	0:0	6	0
water	24:51	0:0	6	xb7
decl	25:8	25:26	6	mtime_t	i_duration
if	26:8	30:8	6	(b_eos)
cond	26:12	26:12	7	b_eos
water	26:12	0:0	8	b_eos
stmts	27:8	30:8	7	
water	27:8	0:0	8	{
call	28:12	28:59	8	block_ChainLastAppend
arg	28:35	28:50	9	&p_sys->pp_last
op	28:35	0:0	10	&
water	28:36	0:0	10	p_sys
op	28:41	0:0	10	->
water	28:43	0:0	10	pp_last
arg	28:52	28:59	9	p_frag
water	28:52	0:0	10	p_frag
water	28:60	0:0	8	;
water	29:12	0:0	8	p_frag
op	29:19	0:0	8	=
water	29:21	0:0	8	NULL
water	29:25	0:0	8	;
water	30:8	0:0	8	}
water	31:8	0:0	6	p_pic
op	31:14	0:0	6	=
call	31:16	31:50	6	block_ChainGather
arg	31:35	31:50	7	p_sys->p_frame
water	31:35	0:0	8	p_sys
op	31:40	0:0	8	->
water	31:42	0:0	8	p_frame
water	31:51	0:0	6	;
if	32:8	33:56	6	(b_eos)
cond	32:12	32:12	7	b_eos
water	32:12	0:0	8	b_eos
stmts	33:12	33:56	7	
water	33:12	0:0	8	p_pic
op	33:17	0:0	8	->
water	33:19	0:0	8	i_flags
op	33:27	0:0	8	|=
water	33:30	0:0	8	BLOCK_FLAG_END_OF_SEQUENCE
water	33:56	0:0	8	;
water	34:8	0:0	6	i_duration
op	34:19	0:0	6	=
call	34:21	35:52	6	(mtime_t)
arg	34:32	35:52	7	CLOCK_FREQ*p_sys->i_frame_rate_base/p_sys->i_frame_rate
water	34:32	0:0	8	CLOCK_FREQ
op	34:43	0:0	8	*
water	34:45	0:0	8	p_sys
op	34:50	0:0	8	->
water	34:52	0:0	8	i_frame_rate_base
op	34:70	0:0	8	/
water	35:32	0:0	8	p_sys
op	35:37	0:0	8	->
water	35:39	0:0	8	i_frame_rate
water	35:53	0:0	6	;
if	36:8	39:8	6	(! p_sys -> b_seq_progressive && p_sys -> i_picture_structure != 0 x03)
cond	36:12	36:72	7	! p_sys -> b_seq_progressive && p_sys -> i_picture_structure != 0 x03
op	36:12	0:0	8	!
water	36:13	0:0	8	p_sys
op	36:18	0:0	8	->
water	36:20	0:0	8	b_seq_progressive
op	36:38	0:0	8	&&
water	36:41	0:0	8	p_sys
op	36:46	0:0	8	->
water	36:48	0:0	8	i_picture_structure
op	36:68	0:0	8	!=
water	36:71	0:0	8	0
water	36:72	0:0	8	x03
stmts	37:8	39:8	7	
water	37:8	0:0	8	{
water	38:12	0:0	8	i_duration
op	38:23	0:0	8	/=
water	38:26	0:0	8	2
water	38:27	0:0	8	;
water	39:8	0:0	8	}
if	40:8	52:8	6	(p_sys -> b_seq_progressive)
cond	40:12	40:19	7	p_sys -> b_seq_progressive
water	40:12	0:0	8	p_sys
op	40:17	0:0	8	->
water	40:19	0:0	8	b_seq_progressive
stmts	41:8	52:8	7	
water	41:8	0:0	8	{
if	42:12	46:12	8	(p_sys -> i_top_field_first == 0 && p_sys -> i_repeat_first_field == 1)
cond	42:16	43:47	9	p_sys -> i_top_field_first == 0 && p_sys -> i_repeat_first_field == 1
water	42:16	0:0	10	p_sys
op	42:21	0:0	10	->
water	42:23	0:0	10	i_top_field_first
op	42:41	0:0	10	==
water	42:44	0:0	10	0
op	42:46	0:0	10	&&
water	43:16	0:0	10	p_sys
op	43:21	0:0	10	->
water	43:23	0:0	10	i_repeat_first_field
op	43:44	0:0	10	==
water	43:47	0:0	10	1
stmts	44:12	46:12	9	
water	44:12	0:0	10	{
water	45:16	0:0	10	i_duration
op	45:27	0:0	10	*=
water	45:30	0:0	10	2
water	45:31	0:0	10	;
water	46:12	0:0	10	}
else	47:12	51:12	8
stmts	47:17	51:12	9	
if	47:17	51:12	10	(p_sys -> i_top_field_first == 1 && p_sys -> i_repeat_first_field == 1)
cond	47:21	48:52	11	p_sys -> i_top_field_first == 1 && p_sys -> i_repeat_first_field == 1
water	47:21	0:0	12	p_sys
op	47:26	0:0	12	->
water	47:28	0:0	12	i_top_field_first
op	47:46	0:0	12	==
water	47:49	0:0	12	1
op	47:51	0:0	12	&&
water	48:21	0:0	12	p_sys
op	48:26	0:0	12	->
water	48:28	0:0	12	i_repeat_first_field
op	48:49	0:0	12	==
water	48:52	0:0	12	1
stmts	49:12	51:12	11	
water	49:12	0:0	12	{
water	50:16	0:0	12	i_duration
op	50:27	0:0	12	*=
water	50:30	0:0	12	3
water	50:31	0:0	12	;
water	51:12	0:0	12	}
water	52:8	0:0	8	}
else	53:8	62:8	6
stmts	54:8	62:8	7	
water	54:8	0:0	8	{
if	55:12	61:12	8	(p_sys -> i_picture_structure == 0 x03)
cond	55:16	55:47	9	p_sys -> i_picture_structure == 0 x03
water	55:16	0:0	10	p_sys
op	55:21	0:0	10	->
water	55:23	0:0	10	i_picture_structure
op	55:43	0:0	10	==
water	55:46	0:0	10	0
water	55:47	0:0	10	x03
stmts	56:12	61:12	9	
water	56:12	0:0	10	{
if	57:16	60:16	10	(p_sys -> i_progressive_frame && p_sys -> i_repeat_first_field)
cond	57:20	57:57	11	p_sys -> i_progressive_frame && p_sys -> i_repeat_first_field
water	57:20	0:0	12	p_sys
op	57:25	0:0	12	->
water	57:27	0:0	12	i_progressive_frame
op	57:47	0:0	12	&&
water	57:50	0:0	12	p_sys
op	57:55	0:0	12	->
water	57:57	0:0	12	i_repeat_first_field
stmts	58:16	60:16	11	
water	58:16	0:0	12	{
water	59:20	0:0	12	i_duration
op	59:31	0:0	12	+=
water	59:34	0:0	12	i_duration
op	59:45	0:0	12	/
water	59:47	0:0	12	2
water	59:48	0:0	12	;
water	60:16	0:0	12	}
water	61:12	0:0	10	}
water	62:8	0:0	8	}
if	63:8	71:8	6	(p_sys -> b_low_delay || p_sys -> i_picture_type == 0 x03)
cond	63:12	63:60	7	p_sys -> b_low_delay || p_sys -> i_picture_type == 0 x03
water	63:12	0:0	8	p_sys
op	63:17	0:0	8	->
water	63:19	0:0	8	b_low_delay
op	63:31	0:0	8	||
water	63:34	0:0	8	p_sys
op	63:39	0:0	8	->
water	63:41	0:0	8	i_picture_type
op	63:56	0:0	8	==
water	63:59	0:0	8	0
water	63:60	0:0	8	x03
stmts	64:8	71:8	7	
water	64:8	0:0	8	{
if	67:12	68:56	8	(p_sys -> i_pts > VLC_TS_INVALID)
cond	67:16	67:31	9	p_sys -> i_pts > VLC_TS_INVALID
water	67:16	0:0	10	p_sys
op	67:21	0:0	10	->
water	67:23	0:0	10	i_pts
op	67:29	0:0	10	>
water	67:31	0:0	10	VLC_TS_INVALID
stmts	68:16	68:56	9	
water	68:16	0:0	10	p_sys
op	68:21	0:0	10	->
water	68:23	0:0	10	i_interpolated_dts
op	68:42	0:0	10	=
water	68:44	0:0	10	p_sys
op	68:49	0:0	10	->
water	68:51	0:0	10	i_pts
water	68:56	0:0	10	;
if	69:12	70:56	8	(p_sys -> i_dts > VLC_TS_INVALID)
cond	69:16	69:31	9	p_sys -> i_dts > VLC_TS_INVALID
water	69:16	0:0	10	p_sys
op	69:21	0:0	10	->
water	69:23	0:0	10	i_dts
op	69:29	0:0	10	>
water	69:31	0:0	10	VLC_TS_INVALID
stmts	70:16	70:56	9	
water	70:16	0:0	10	p_sys
op	70:21	0:0	10	->
water	70:23	0:0	10	i_interpolated_dts
op	70:42	0:0	10	=
water	70:44	0:0	10	p_sys
op	70:49	0:0	10	->
water	70:51	0:0	10	i_dts
water	70:56	0:0	10	;
water	71:8	0:0	8	}
else	72:8	81:8	6
stmts	73:8	81:8	7	
water	73:8	0:0	8	{
if	75:12	76:65	8	(p_sys -> i_last_ref_pts > VLC_TS_INVALID && ! p_sys -> b_second_field)
cond	75:15	75:65	9	p_sys -> i_last_ref_pts > VLC_TS_INVALID && ! p_sys -> b_second_field
water	75:15	0:0	10	p_sys
op	75:20	0:0	10	->
water	75:22	0:0	10	i_last_ref_pts
op	75:37	0:0	10	>
water	75:39	0:0	10	VLC_TS_INVALID
op	75:54	0:0	10	&&
op	75:57	0:0	10	!
water	75:58	0:0	10	p_sys
op	75:63	0:0	10	->
water	75:65	0:0	10	b_second_field
stmts	76:16	76:65	9	
water	76:16	0:0	10	p_sys
op	76:21	0:0	10	->
water	76:23	0:0	10	i_interpolated_dts
op	76:42	0:0	10	=
water	76:44	0:0	10	p_sys
op	76:49	0:0	10	->
water	76:51	0:0	10	i_last_ref_pts
water	76:65	0:0	10	;
if	77:12	78:56	8	(p_sys -> i_dts > VLC_TS_INVALID)
cond	77:16	77:31	9	p_sys -> i_dts > VLC_TS_INVALID
water	77:16	0:0	10	p_sys
op	77:21	0:0	10	->
water	77:23	0:0	10	i_dts
op	77:29	0:0	10	>
water	77:31	0:0	10	VLC_TS_INVALID
stmts	78:16	78:56	9	
water	78:16	0:0	10	p_sys
op	78:21	0:0	10	->
water	78:23	0:0	10	i_interpolated_dts
op	78:42	0:0	10	=
water	78:44	0:0	10	p_sys
op	78:49	0:0	10	->
water	78:51	0:0	10	i_dts
water	78:56	0:0	10	;
if	79:12	80:52	8	(! p_sys -> b_second_field)
cond	79:16	79:24	9	! p_sys -> b_second_field
op	79:16	0:0	10	!
water	79:17	0:0	10	p_sys
op	79:22	0:0	10	->
water	79:24	0:0	10	b_second_field
stmts	80:16	80:52	9	
water	80:16	0:0	10	p_sys
op	80:21	0:0	10	->
water	80:23	0:0	10	i_last_ref_pts
op	80:38	0:0	10	=
water	80:40	0:0	10	p_sys
op	80:45	0:0	10	->
water	80:47	0:0	10	i_pts
water	80:52	0:0	10	;
water	81:8	0:0	8	}
water	82:8	0:0	6	p_pic
op	82:13	0:0	6	->
water	82:15	0:0	6	i_dts
op	82:21	0:0	6	=
water	82:23	0:0	6	p_sys
op	82:28	0:0	6	->
water	82:30	0:0	6	i_interpolated_dts
water	82:48	0:0	6	;
water	83:8	0:0	6	p_sys
op	83:13	0:0	6	->
water	83:15	0:0	6	i_interpolated_dts
op	83:34	0:0	6	+=
water	83:37	0:0	6	i_duration
water	83:47	0:0	6	;
if	85:8	88:8	6	(p_sys -> i_pts > VLC_TS_INVALID)
cond	85:12	85:27	7	p_sys -> i_pts > VLC_TS_INVALID
water	85:12	0:0	8	p_sys
op	85:17	0:0	8	->
water	85:19	0:0	8	i_pts
op	85:25	0:0	8	>
water	85:27	0:0	8	VLC_TS_INVALID
stmts	86:8	88:8	7	
water	86:8	0:0	8	{
water	87:12	0:0	8	p_pic
op	87:17	0:0	8	->
water	87:19	0:0	8	i_pts
op	87:25	0:0	8	=
water	87:27	0:0	8	p_sys
op	87:32	0:0	8	->
water	87:34	0:0	8	i_pts
water	87:39	0:0	8	;
water	88:8	0:0	8	}
else	89:8	92:8	6
stmts	89:13	92:8	7	
if	89:13	92:8	8	(p_sys -> i_picture_type == 0 x03)
cond	89:17	89:43	9	p_sys -> i_picture_type == 0 x03
water	89:17	0:0	10	p_sys
op	89:22	0:0	10	->
water	89:24	0:0	10	i_picture_type
op	89:39	0:0	10	==
water	89:42	0:0	10	0
water	89:43	0:0	10	x03
stmts	90:8	92:8	9	
water	90:8	0:0	10	{
water	91:12	0:0	10	p_pic
op	91:17	0:0	10	->
water	91:19	0:0	10	i_pts
op	91:25	0:0	10	=
water	91:27	0:0	10	p_pic
op	91:32	0:0	10	->
water	91:34	0:0	10	i_dts
water	91:39	0:0	10	;
water	92:8	0:0	10	}
else	93:8	96:8	6
stmts	94:8	96:8	7	
water	94:8	0:0	8	{
water	95:12	0:0	8	p_pic
op	95:17	0:0	8	->
water	95:19	0:0	8	i_pts
op	95:25	0:0	8	=
water	95:27	0:0	8	VLC_TS_INVALID
water	95:41	0:0	8	;
water	96:8	0:0	8	}
switch	97:8	108:8	6	(p_sys -> i_picture_type)
cond	97:17	97:24	7	p_sys -> i_picture_type
water	97:17	0:0	8	p_sys
op	97:22	0:0	8	->
water	97:24	0:0	8	i_picture_type
stmts	98:8	108:8	7	
water	98:8	0:0	8	{
label	99:8	99:17	8	case 0 x01 :
water	100:12	0:0	8	p_pic
op	100:17	0:0	8	->
water	100:19	0:0	8	i_flags
op	100:27	0:0	8	|=
water	100:30	0:0	8	BLOCK_FLAG_TYPE_I
water	100:47	0:0	8	;
break	101:12	101:17	8	
label	102:8	102:17	8	case 0 x02 :
water	103:12	0:0	8	p_pic
op	103:17	0:0	8	->
water	103:19	0:0	8	i_flags
op	103:27	0:0	8	|=
water	103:30	0:0	8	BLOCK_FLAG_TYPE_P
water	103:47	0:0	8	;
break	104:12	104:17	8	
label	105:8	105:17	8	case 0 x03 :
water	106:12	0:0	8	p_pic
op	106:17	0:0	8	->
water	106:19	0:0	8	i_flags
op	106:27	0:0	8	|=
water	106:30	0:0	8	BLOCK_FLAG_TYPE_B
water	106:47	0:0	8	;
break	107:12	107:17	8	
water	108:8	0:0	8	}
water	109:8	0:0	6	p_pic
op	109:13	0:0	6	->
water	109:15	0:0	6	i_length
op	109:24	0:0	6	=
water	109:26	0:0	6	p_sys
op	109:31	0:0	6	->
water	109:33	0:0	6	i_interpolated_dts
op	109:52	0:0	6	-
water	109:54	0:0	6	p_pic
op	109:59	0:0	6	->
water	109:61	0:0	6	i_dts
water	109:66	0:0	6	;
call	111:8	112:72	6	msg_Dbg
arg	111:17	111:22	7	p_dec
water	111:17	0:0	8	p_dec
arg	111:24	111:68	7	"pic: type=%d dts=%"PRId64" pts-dts=%"PRId64
water	111:24	0:0	8	"pic: type=%d dts=%"
water	111:44	0:0	8	PRId64
water	111:50	0:0	8	" pts-dts=%"
water	111:62	0:0	8	PRId64
arg	112:8	112:29	7	p_sys->i_picture_type
water	112:8	0:0	8	p_sys
op	112:13	0:0	8	->
water	112:15	0:0	8	i_picture_type
arg	112:31	112:43	7	p_pic->i_dts
water	112:31	0:0	8	p_pic
op	112:36	0:0	8	->
water	112:38	0:0	8	i_dts
arg	112:45	112:72	7	p_pic->i_pts-p_pic->i_dts
water	112:45	0:0	8	p_pic
op	112:50	0:0	8	->
water	112:52	0:0	8	i_pts
op	112:58	0:0	8	-
water	112:60	0:0	8	p_pic
op	112:65	0:0	8	->
water	112:67	0:0	8	i_dts
water	112:73	0:0	6	;
water	115:8	0:0	6	p_sys
op	115:13	0:0	6	->
water	115:15	0:0	6	p_frame
op	115:23	0:0	6	=
water	115:25	0:0	6	NULL
water	115:29	0:0	6	;
water	116:8	0:0	6	p_sys
op	116:13	0:0	6	->
water	116:15	0:0	6	pp_last
op	116:23	0:0	6	=
op	116:25	0:0	6	&
water	116:26	0:0	6	p_sys
op	116:31	0:0	6	->
water	116:33	0:0	6	p_frame
water	116:40	0:0	6	;
water	117:8	0:0	6	p_sys
op	117:13	0:0	6	->
water	117:15	0:0	6	b_frame_slice
op	117:29	0:0	6	=
water	117:31	0:0	6	false
water	117:36	0:0	6	;
if	118:8	121:8	6	(p_sys -> i_picture_structure != 0 x03)
cond	118:12	118:43	7	p_sys -> i_picture_structure != 0 x03
water	118:12	0:0	8	p_sys
op	118:17	0:0	8	->
water	118:19	0:0	8	i_picture_structure
op	118:39	0:0	8	!=
water	118:42	0:0	8	0
water	118:43	0:0	8	x03
stmts	119:8	121:8	7	
water	119:8	0:0	8	{
water	120:12	0:0	8	p_sys
op	120:17	0:0	8	->
water	120:19	0:0	8	b_second_field
op	120:34	0:0	8	=
op	120:36	0:0	8	!
water	120:37	0:0	8	p_sys
op	120:42	0:0	8	->
water	120:44	0:0	8	b_second_field
water	120:58	0:0	8	;
water	121:8	0:0	8	}
else	122:8	125:8	6
stmts	123:8	125:8	7	
water	123:8	0:0	8	{
water	124:12	0:0	8	p_sys
op	124:17	0:0	8	->
water	124:19	0:0	8	b_second_field
op	124:34	0:0	8	=
water	124:36	0:0	8	0
water	124:37	0:0	8	;
water	125:8	0:0	8	}
water	127:8	0:0	6	p_sys
op	127:13	0:0	6	->
water	127:15	0:0	6	b_cc_reset
op	127:26	0:0	6	=
water	127:28	0:0	6	true
water	127:32	0:0	6	;
water	128:8	0:0	6	p_sys
op	128:13	0:0	6	->
water	128:15	0:0	6	i_cc_pts
op	128:24	0:0	6	=
water	128:26	0:0	6	p_pic
op	128:31	0:0	6	->
water	128:33	0:0	6	i_pts
water	128:38	0:0	6	;
water	129:8	0:0	6	p_sys
op	129:13	0:0	6	->
water	129:15	0:0	6	i_cc_dts
op	129:24	0:0	6	=
water	129:26	0:0	6	p_pic
op	129:31	0:0	6	->
water	129:33	0:0	6	i_dts
water	129:38	0:0	6	;
water	130:8	0:0	6	p_sys
op	130:13	0:0	6	->
water	130:15	0:0	6	i_cc_flags
op	130:26	0:0	6	=
water	130:28	0:0	6	p_pic
op	130:33	0:0	6	->
water	130:35	0:0	6	i_flags
water	130:42	0:0	6	;
water	131:4	0:0	6	}
if	132:4	136:4	2	(! p_pic && p_sys -> b_cc_reset)
cond	132:8	132:25	3	! p_pic && p_sys -> b_cc_reset
op	132:8	0:0	4	!
water	132:9	0:0	4	p_pic
op	132:15	0:0	4	&&
water	132:18	0:0	4	p_sys
op	132:23	0:0	4	->
water	132:25	0:0	4	b_cc_reset
stmts	133:4	136:4	3	
water	133:4	0:0	4	{
water	134:8	0:0	4	p_sys
op	134:13	0:0	4	->
water	134:15	0:0	4	b_cc_reset
op	134:26	0:0	4	=
water	134:28	0:0	4	false
water	134:33	0:0	4	;
call	135:8	135:29	4	cc_Flush
arg	135:18	135:29	5	&p_sys->cc
op	135:18	0:0	6	&
water	135:19	0:0	6	p_sys
op	135:24	0:0	6	->
water	135:26	0:0	6	cc
water	135:30	0:0	4	;
water	136:4	0:0	4	}
if	137:4	138:20	2	(! p_frag)
cond	137:8	137:9	3	! p_frag
op	137:8	0:0	4	!
water	137:9	0:0	4	p_frag
stmts	138:8	138:20	3	
return	138:8	138:20	4	p_pic
water	138:15	0:0	5	p_pic
if	142:4	156:4	2	(p_frag -> p_buffer [ 3 ] == 0 xb8)
cond	142:8	142:32	3	p_frag -> p_buffer [ 3 ] == 0 xb8
water	142:8	0:0	4	p_frag
op	142:14	0:0	4	->
water	142:16	0:0	4	p_buffer
op	142:24	0:0	4	[
water	142:25	0:0	4	3
op	142:26	0:0	4	]
op	142:28	0:0	4	==
water	142:31	0:0	4	0
water	142:32	0:0	4	xb8
stmts	143:4	156:4	3	
water	143:4	0:0	4	{
if	145:8	155:8	4	(p_sys -> p_seq && p_sys -> i_seq_old > p_sys -> i_frame_rate / p_sys -> i_frame_rate_base)
cond	145:12	146:58	5	p_sys -> p_seq && p_sys -> i_seq_old > p_sys -> i_frame_rate / p_sys -> i_frame_rate_base
water	145:12	0:0	6	p_sys
op	145:17	0:0	6	->
water	145:19	0:0	6	p_seq
op	145:25	0:0	6	&&
water	146:12	0:0	6	p_sys
op	146:17	0:0	6	->
water	146:19	0:0	6	i_seq_old
op	146:29	0:0	6	>
water	146:31	0:0	6	p_sys
op	146:36	0:0	6	->
water	146:38	0:0	6	i_frame_rate
op	146:50	0:0	6	/
water	146:51	0:0	6	p_sys
op	146:56	0:0	6	->
water	146:58	0:0	6	i_frame_rate_base
stmts	147:8	155:8	5	
water	147:8	0:0	6	{
call	149:12	149:84	6	block_ChainLastAppend
arg	149:35	149:50	7	&p_sys->pp_last
op	149:35	0:0	8	&
water	149:36	0:0	8	p_sys
op	149:41	0:0	8	->
water	149:43	0:0	8	pp_last
arg	149:52	149:84	7	block_Duplicate(p_sys->p_seq)
call	149:52	149:82	8	block_Duplicate
arg	149:69	149:82	9	p_sys->p_seq
water	149:69	0:0	10	p_sys
op	149:74	0:0	10	->
water	149:76	0:0	10	p_seq
water	149:85	0:0	6	;
if	150:12	153:12	6	(p_sys -> p_ext)
cond	150:16	150:23	7	p_sys -> p_ext
water	150:16	0:0	8	p_sys
op	150:21	0:0	8	->
water	150:23	0:0	8	p_ext
stmts	151:12	153:12	7	
water	151:12	0:0	8	{
call	152:16	152:88	8	block_ChainLastAppend
arg	152:39	152:54	9	&p_sys->pp_last
op	152:39	0:0	10	&
water	152:40	0:0	10	p_sys
op	152:45	0:0	10	->
water	152:47	0:0	10	pp_last
arg	152:56	152:88	9	block_Duplicate(p_sys->p_ext)
call	152:56	152:86	10	block_Duplicate
arg	152:73	152:86	11	p_sys->p_ext
water	152:73	0:0	12	p_sys
op	152:78	0:0	12	->
water	152:80	0:0	12	p_ext
water	152:89	0:0	8	;
water	153:12	0:0	8	}
water	154:12	0:0	6	p_sys
op	154:17	0:0	6	->
water	154:19	0:0	6	i_seq_old
op	154:29	0:0	6	=
water	154:31	0:0	6	0
water	154:32	0:0	6	;
water	155:8	0:0	6	}
water	156:4	0:0	4	}
else	157:4	196:4	2
stmts	157:9	196:4	3	
if	157:9	196:4	4	(p_frag -> p_buffer [ 3 ] == 0 xb3 && p_frag -> i_buffer >= 8)
cond	157:13	157:64	5	p_frag -> p_buffer [ 3 ] == 0 xb3 && p_frag -> i_buffer >= 8
water	157:13	0:0	6	p_frag
op	157:19	0:0	6	->
water	157:21	0:0	6	p_buffer
op	157:29	0:0	6	[
water	157:30	0:0	6	3
op	157:31	0:0	6	]
op	157:33	0:0	6	==
water	157:36	0:0	6	0
water	157:37	0:0	6	xb3
op	157:41	0:0	6	&&
water	157:44	0:0	6	p_frag
op	157:50	0:0	6	->
water	157:52	0:0	6	i_buffer
op	157:61	0:0	6	>=
water	157:64	0:0	6	8
stmts	158:4	196:4	5	
water	158:4	0:0	6	{
water	160:8	0:0	6	static
water	160:15	0:0	6	const
water	160:21	0:0	6	int
water	160:25	0:0	6	code_to_frame_rate
op	160:43	0:0	6	[
water	160:44	0:0	6	16
op	160:46	0:0	6	]
op	160:47	0:0	6	[
water	160:48	0:0	6	2
op	160:49	0:0	6	]
op	160:51	0:0	6	=
water	161:8	0:0	6	{
water	162:12	0:0	6	{
water	162:14	0:0	6	1
water	162:15	0:0	6	,
water	162:17	0:0	6	1
water	162:19	0:0	6	}
water	162:20	0:0	6	,
water	163:12	0:0	6	{
water	163:14	0:0	6	24000
water	163:19	0:0	6	,
water	163:21	0:0	6	1001
water	163:26	0:0	6	}
water	163:27	0:0	6	,
water	163:29	0:0	6	{
water	163:31	0:0	6	24
water	163:33	0:0	6	,
water	163:35	0:0	6	1
water	163:37	0:0	6	}
water	163:38	0:0	6	,
water	163:40	0:0	6	{
water	163:42	0:0	6	25
water	163:44	0:0	6	,
water	163:46	0:0	6	1
water	163:48	0:0	6	}
water	163:49	0:0	6	,
water	163:57	0:0	6	{
water	163:59	0:0	6	30000
water	163:64	0:0	6	,
water	163:66	0:0	6	1001
water	163:71	0:0	6	}
water	163:72	0:0	6	,
water	164:12	0:0	6	{
water	164:14	0:0	6	30
water	164:16	0:0	6	,
water	164:18	0:0	6	1
water	164:20	0:0	6	}
water	164:21	0:0	6	,
water	164:29	0:0	6	{
water	164:31	0:0	6	50
water	164:33	0:0	6	,
water	164:35	0:0	6	1
water	164:37	0:0	6	}
water	164:38	0:0	6	,
water	164:40	0:0	6	{
water	164:42	0:0	6	60000
water	164:47	0:0	6	,
water	164:49	0:0	6	1001
water	164:54	0:0	6	}
water	164:55	0:0	6	,
water	164:57	0:0	6	{
water	164:59	0:0	6	60
water	164:61	0:0	6	,
water	164:63	0:0	6	1
water	164:65	0:0	6	}
water	164:66	0:0	6	,
water	166:12	0:0	6	{
water	166:14	0:0	6	15
water	166:16	0:0	6	,
water	166:18	0:0	6	1001
water	166:23	0:0	6	}
water	166:24	0:0	6	,
water	168:12	0:0	6	{
water	168:14	0:0	6	5000
water	168:18	0:0	6	,
water	168:20	0:0	6	1001
water	168:25	0:0	6	}
water	168:26	0:0	6	,
water	168:28	0:0	6	{
water	168:30	0:0	6	1000
water	168:34	0:0	6	,
water	168:36	0:0	6	1001
water	168:41	0:0	6	}
water	168:42	0:0	6	,
water	168:44	0:0	6	{
water	168:46	0:0	6	12000
water	168:51	0:0	6	,
water	168:53	0:0	6	1001
water	168:58	0:0	6	}
water	168:59	0:0	6	,
water	168:61	0:0	6	{
water	168:63	0:0	6	15000
water	168:68	0:0	6	,
water	168:70	0:0	6	1001
water	168:75	0:0	6	}
water	168:76	0:0	6	,
water	169:12	0:0	6	{
water	169:14	0:0	6	1
water	169:15	0:0	6	,
water	169:17	0:0	6	1
water	169:19	0:0	6	}
water	169:20	0:0	6	,
water	169:23	0:0	6	{
water	169:25	0:0	6	1
water	169:26	0:0	6	,
water	169:28	0:0	6	1
water	169:30	0:0	6	}
water	170:8	0:0	6	}
water	170:9	0:0	6	;
if	171:8	171:56	6	(p_sys -> p_seq)
cond	171:12	171:19	7	p_sys -> p_seq
water	171:12	0:0	8	p_sys
op	171:17	0:0	8	->
water	171:19	0:0	8	p_seq
stmts	171:27	171:56	7	
call	171:27	171:55	8	block_Release
arg	171:42	171:55	9	p_sys->p_seq
water	171:42	0:0	10	p_sys
op	171:47	0:0	10	->
water	171:49	0:0	10	p_seq
water	171:56	0:0	8	;
if	172:8	172:56	6	(p_sys -> p_ext)
cond	172:12	172:19	7	p_sys -> p_ext
water	172:12	0:0	8	p_sys
op	172:17	0:0	8	->
water	172:19	0:0	8	p_ext
stmts	172:27	172:56	7	
call	172:27	172:55	8	block_Release
arg	172:42	172:55	9	p_sys->p_ext
water	172:42	0:0	10	p_sys
op	172:47	0:0	10	->
water	172:49	0:0	10	p_ext
water	172:56	0:0	8	;
water	173:8	0:0	6	p_sys
op	173:13	0:0	6	->
water	173:15	0:0	6	p_seq
op	173:21	0:0	6	=
call	173:23	173:47	6	block_Duplicate
arg	173:40	173:47	7	p_frag
water	173:40	0:0	8	p_frag
water	173:48	0:0	6	;
water	174:8	0:0	6	p_sys
op	174:13	0:0	6	->
water	174:15	0:0	6	i_seq_old
op	174:25	0:0	6	=
water	174:27	0:0	6	0
water	174:28	0:0	6	;
water	175:8	0:0	6	p_sys
op	175:13	0:0	6	->
water	175:15	0:0	6	p_ext
op	175:21	0:0	6	=
water	175:23	0:0	6	NULL
water	175:27	0:0	6	;
water	176:8	0:0	6	p_dec
op	176:13	0:0	6	->
water	176:15	0:0	6	fmt_out
op	176:22	0:0	6	.
water	176:23	0:0	6	video
op	176:28	0:0	6	.
water	176:29	0:0	6	i_width
op	176:37	0:0	6	=
water	177:12	0:0	6	(
water	177:14	0:0	6	p_frag
op	177:20	0:0	6	->
water	177:22	0:0	6	p_buffer
op	177:30	0:0	6	[
water	177:31	0:0	6	4
op	177:32	0:0	6	]
op	177:34	0:0	6	<<
water	177:37	0:0	6	4
water	177:38	0:0	6	)
op	177:39	0:0	6	|
water	177:40	0:0	6	(
water	177:41	0:0	6	p_frag
op	177:47	0:0	6	->
water	177:49	0:0	6	p_buffer
op	177:57	0:0	6	[
water	177:58	0:0	6	5
op	177:59	0:0	6	]
op	177:61	0:0	6	>>
water	177:64	0:0	6	4
water	177:66	0:0	6	)
water	177:67	0:0	6	;
water	178:8	0:0	6	p_dec
op	178:13	0:0	6	->
water	178:15	0:0	6	fmt_out
op	178:22	0:0	6	.
water	178:23	0:0	6	video
op	178:28	0:0	6	.
water	178:29	0:0	6	i_height
op	178:38	0:0	6	=
water	179:12	0:0	6	(
water	179:14	0:0	6	(
water	179:15	0:0	6	p_frag
op	179:21	0:0	6	->
water	179:23	0:0	6	p_buffer
op	179:31	0:0	6	[
water	179:32	0:0	6	5
op	179:33	0:0	6	]
op	179:34	0:0	6	&
water	179:35	0:0	6	0
water	179:36	0:0	6	x0f
water	179:39	0:0	6	)
op	179:41	0:0	6	<<
water	179:44	0:0	6	8
water	179:46	0:0	6	)
op	179:47	0:0	6	|
water	179:48	0:0	6	p_frag
op	179:54	0:0	6	->
water	179:56	0:0	6	p_buffer
op	179:64	0:0	6	[
water	179:65	0:0	6	6
op	179:66	0:0	6	]
water	179:67	0:0	6	;
water	180:8	0:0	6	p_sys
op	180:13	0:0	6	->
water	180:15	0:0	6	i_aspect_ratio_info
op	180:35	0:0	6	=
water	180:37	0:0	6	p_frag
op	180:43	0:0	6	->
water	180:45	0:0	6	p_buffer
op	180:53	0:0	6	[
water	180:54	0:0	6	7
op	180:55	0:0	6	]
op	180:57	0:0	6	>>
water	180:60	0:0	6	4
water	180:61	0:0	6	;
water	182:8	0:0	6	p_sys
op	182:13	0:0	6	->
water	182:15	0:0	6	i_frame_rate
op	182:28	0:0	6	=
water	182:30	0:0	6	code_to_frame_rate
op	182:48	0:0	6	[
water	182:49	0:0	6	p_frag
op	182:55	0:0	6	->
water	182:57	0:0	6	p_buffer
op	182:65	0:0	6	[
water	182:66	0:0	6	7
op	182:67	0:0	6	]
op	182:68	0:0	6	&
water	182:69	0:0	6	0
water	182:70	0:0	6	x0f
op	182:73	0:0	6	]
op	182:74	0:0	6	[
water	182:75	0:0	6	0
op	182:76	0:0	6	]
water	182:77	0:0	6	;
water	183:8	0:0	6	p_sys
op	183:13	0:0	6	->
water	183:15	0:0	6	i_frame_rate_base
op	183:33	0:0	6	=
water	184:12	0:0	6	code_to_frame_rate
op	184:30	0:0	6	[
water	184:31	0:0	6	p_frag
op	184:37	0:0	6	->
water	184:39	0:0	6	p_buffer
op	184:47	0:0	6	[
water	184:48	0:0	6	7
op	184:49	0:0	6	]
op	184:50	0:0	6	&
water	184:51	0:0	6	0
water	184:52	0:0	6	x0f
op	184:55	0:0	6	]
op	184:56	0:0	6	[
water	184:57	0:0	6	1
op	184:58	0:0	6	]
water	184:59	0:0	6	;
water	185:8	0:0	6	p_dec
op	185:13	0:0	6	->
water	185:15	0:0	6	fmt_out
op	185:22	0:0	6	.
water	185:23	0:0	6	video
op	185:28	0:0	6	.
water	185:29	0:0	6	i_frame_rate
op	185:42	0:0	6	=
water	185:44	0:0	6	p_sys
op	185:49	0:0	6	->
water	185:51	0:0	6	i_frame_rate
water	185:63	0:0	6	;
water	186:8	0:0	6	p_dec
op	186:13	0:0	6	->
water	186:15	0:0	6	fmt_out
op	186:22	0:0	6	.
water	186:23	0:0	6	video
op	186:28	0:0	6	.
water	186:29	0:0	6	i_frame_rate_base
op	186:47	0:0	6	=
water	186:49	0:0	6	p_sys
op	186:54	0:0	6	->
water	186:56	0:0	6	i_frame_rate_base
water	186:73	0:0	6	;
water	187:8	0:0	6	p_sys
op	187:13	0:0	6	->
water	187:15	0:0	6	b_seq_progressive
op	187:33	0:0	6	=
water	187:35	0:0	6	true
water	187:39	0:0	6	;
water	188:8	0:0	6	p_sys
op	188:13	0:0	6	->
water	188:15	0:0	6	b_low_delay
op	188:27	0:0	6	=
water	188:29	0:0	6	true
water	188:33	0:0	6	;
if	189:8	195:8	6	(! p_sys -> b_inited)
cond	189:13	189:21	7	! p_sys -> b_inited
op	189:13	0:0	8	!
water	189:14	0:0	8	p_sys
op	189:19	0:0	8	->
water	189:21	0:0	8	b_inited
stmts	190:8	195:8	7	
water	190:8	0:0	8	{
call	191:12	193:71	8	msg_Dbg
arg	191:21	191:26	9	p_dec
water	191:21	0:0	10	p_dec
arg	191:28	191:49	9	"size %dx%d fps=%.3f"
water	191:28	0:0	10	"size %dx%d fps=%.3f"
arg	192:17	192:45	9	p_dec->fmt_out.video.i_width
water	192:17	0:0	10	p_dec
op	192:22	0:0	10	->
water	192:24	0:0	10	fmt_out
op	192:31	0:0	10	.
water	192:32	0:0	10	video
op	192:37	0:0	10	.
water	192:38	0:0	10	i_width
arg	192:47	192:76	9	p_dec->fmt_out.video.i_height
water	192:47	0:0	10	p_dec
op	192:52	0:0	10	->
water	192:54	0:0	10	fmt_out
op	192:61	0:0	10	.
water	192:62	0:0	10	video
op	192:67	0:0	10	.
water	192:68	0:0	10	i_height
arg	193:17	193:71	9	p_sys->i_frame_rate/(float)p_sys->i_frame_rate_base
water	193:17	0:0	10	p_sys
op	193:22	0:0	10	->
water	193:24	0:0	10	i_frame_rate
op	193:37	0:0	10	/
water	193:39	0:0	10	(
water	193:40	0:0	10	float
water	193:45	0:0	10	)
water	193:46	0:0	10	p_sys
op	193:51	0:0	10	->
water	193:53	0:0	10	i_frame_rate_base
water	193:72	0:0	8	;
water	194:12	0:0	8	p_sys
op	194:17	0:0	8	->
water	194:19	0:0	8	b_inited
op	194:28	0:0	8	=
water	194:30	0:0	8	1
water	194:31	0:0	8	;
water	195:8	0:0	8	}
water	196:4	0:0	6	}
else	197:4	244:4	2
stmts	197:9	244:4	3	
if	197:9	244:4	4	(p_frag -> p_buffer [ 3 ] == 0 xb5)
cond	197:13	197:37	5	p_frag -> p_buffer [ 3 ] == 0 xb5
water	197:13	0:0	6	p_frag
op	197:19	0:0	6	->
water	197:21	0:0	6	p_buffer
op	197:29	0:0	6	[
water	197:30	0:0	6	3
op	197:31	0:0	6	]
op	197:33	0:0	6	==
water	197:36	0:0	6	0
water	197:37	0:0	6	xb5
stmts	198:4	244:4	5	
water	198:4	0:0	6	{
decl	199:8	199:45	6	int	i_type
op	199:19	0:0	6	=
water	199:21	0:0	6	p_frag
op	199:27	0:0	6	->
water	199:29	0:0	6	p_buffer
op	199:37	0:0	6	[
water	199:38	0:0	6	4
op	199:39	0:0	6	]
op	199:41	0:0	6	>>
water	199:44	0:0	6	4
if	201:8	235:8	6	(i_type == 0 x01)
cond	201:12	201:23	7	i_type == 0 x01
water	201:12	0:0	8	i_type
op	201:19	0:0	8	==
water	201:22	0:0	8	0
water	201:23	0:0	8	x01
stmts	202:8	235:8	7	
water	202:8	0:0	8	{
water	204:12	0:0	8	static
water	204:19	0:0	8	const
water	204:25	0:0	8	int
water	204:29	0:0	8	mpeg2_aspect
op	204:41	0:0	8	[
water	204:42	0:0	8	16
op	204:44	0:0	8	]
op	204:45	0:0	8	[
water	204:46	0:0	8	2
op	204:47	0:0	8	]
op	204:49	0:0	8	=
water	205:12	0:0	8	{
water	206:16	0:0	8	{
water	206:17	0:0	8	0
water	206:18	0:0	8	,
water	206:19	0:0	8	1
water	206:20	0:0	8	}
water	206:21	0:0	8	,
water	206:23	0:0	8	{
water	206:24	0:0	8	1
water	206:25	0:0	8	,
water	206:26	0:0	8	1
water	206:27	0:0	8	}
water	206:28	0:0	8	,
water	206:30	0:0	8	{
water	206:31	0:0	8	4
water	206:32	0:0	8	,
water	206:33	0:0	8	3
water	206:34	0:0	8	}
water	206:35	0:0	8	,
water	206:37	0:0	8	{
water	206:38	0:0	8	16
water	206:40	0:0	8	,
water	206:41	0:0	8	9
water	206:42	0:0	8	}
water	206:43	0:0	8	,
water	206:45	0:0	8	{
water	206:46	0:0	8	221
water	206:49	0:0	8	,
water	206:50	0:0	8	100
water	206:53	0:0	8	}
water	206:54	0:0	8	,
water	207:16	0:0	8	{
water	207:17	0:0	8	0
water	207:18	0:0	8	,
water	207:19	0:0	8	1
water	207:20	0:0	8	}
water	207:21	0:0	8	,
water	207:23	0:0	8	{
water	207:24	0:0	8	0
water	207:25	0:0	8	,
water	207:26	0:0	8	1
water	207:27	0:0	8	}
water	207:28	0:0	8	,
water	207:30	0:0	8	{
water	207:31	0:0	8	0
water	207:32	0:0	8	,
water	207:33	0:0	8	1
water	207:34	0:0	8	}
water	207:35	0:0	8	,
water	207:37	0:0	8	{
water	207:38	0:0	8	0
water	207:39	0:0	8	,
water	207:40	0:0	8	1
water	207:41	0:0	8	}
water	207:42	0:0	8	,
water	207:44	0:0	8	{
water	207:45	0:0	8	0
water	207:46	0:0	8	,
water	207:47	0:0	8	1
water	207:48	0:0	8	}
water	207:49	0:0	8	,
water	207:51	0:0	8	{
water	207:52	0:0	8	0
water	207:53	0:0	8	,
water	207:54	0:0	8	1
water	207:55	0:0	8	}
water	207:56	0:0	8	,
water	207:58	0:0	8	{
water	207:59	0:0	8	0
water	207:60	0:0	8	,
water	207:61	0:0	8	1
water	207:62	0:0	8	}
water	207:63	0:0	8	,
water	207:65	0:0	8	{
water	207:66	0:0	8	0
water	207:67	0:0	8	,
water	207:68	0:0	8	1
water	207:69	0:0	8	}
water	207:70	0:0	8	,
water	207:72	0:0	8	{
water	207:73	0:0	8	0
water	207:74	0:0	8	,
water	207:75	0:0	8	1
water	207:76	0:0	8	}
water	207:77	0:0	8	,
water	208:16	0:0	8	{
water	208:17	0:0	8	0
water	208:18	0:0	8	,
water	208:19	0:0	8	1
water	208:20	0:0	8	}
water	208:21	0:0	8	,
water	208:23	0:0	8	{
water	208:24	0:0	8	0
water	208:25	0:0	8	,
water	208:26	0:0	8	1
water	208:27	0:0	8	}
water	209:12	0:0	8	}
water	209:13	0:0	8	;
if	212:12	212:59	8	(p_sys -> p_ext)
cond	212:16	212:23	9	p_sys -> p_ext
water	212:16	0:0	10	p_sys
op	212:21	0:0	10	->
water	212:23	0:0	10	p_ext
stmts	212:30	212:59	9	
call	212:30	212:58	10	block_Release
arg	212:45	212:58	11	p_sys->p_ext
water	212:45	0:0	12	p_sys
op	212:50	0:0	12	->
water	212:52	0:0	12	p_ext
water	212:59	0:0	10	;
water	213:12	0:0	8	p_sys
op	213:17	0:0	8	->
water	213:19	0:0	8	p_ext
op	213:25	0:0	8	=
call	213:27	213:51	8	block_Duplicate
arg	213:44	213:51	9	p_frag
water	213:44	0:0	10	p_frag
water	213:52	0:0	8	;
if	214:12	220:12	8	(p_frag -> i_buffer >= 10)
cond	214:16	214:36	9	p_frag -> i_buffer >= 10
water	214:16	0:0	10	p_frag
op	214:22	0:0	10	->
water	214:24	0:0	10	i_buffer
op	214:33	0:0	10	>=
water	214:36	0:0	10	10
stmts	215:12	220:12	9	
water	215:12	0:0	10	{
water	216:16	0:0	10	p_sys
op	216:21	0:0	10	->
water	216:23	0:0	10	b_seq_progressive
op	216:41	0:0	10	=
water	217:20	0:0	10	p_frag
op	217:26	0:0	10	->
water	217:28	0:0	10	p_buffer
op	217:36	0:0	10	[
water	217:37	0:0	10	5
op	217:38	0:0	10	]
op	217:39	0:0	10	&
water	217:40	0:0	10	0
water	217:41	0:0	10	x08
water	217:45	0:0	10	?
water	217:47	0:0	10	true
water	217:52	0:0	10	:
water	217:54	0:0	10	false
water	217:59	0:0	10	;
water	218:16	0:0	10	p_sys
op	218:21	0:0	10	->
water	218:23	0:0	10	b_low_delay
op	218:35	0:0	10	=
water	219:20	0:0	10	p_frag
op	219:26	0:0	10	->
water	219:28	0:0	10	p_buffer
op	219:36	0:0	10	[
water	219:37	0:0	10	9
op	219:38	0:0	10	]
op	219:39	0:0	10	&
water	219:40	0:0	10	0
water	219:41	0:0	10	x80
water	219:45	0:0	10	?
water	219:47	0:0	10	true
water	219:52	0:0	10	:
water	219:54	0:0	10	false
water	219:59	0:0	10	;
water	220:12	0:0	10	}
water	228:12	0:0	8	p_dec
op	228:17	0:0	8	->
water	228:19	0:0	8	fmt_out
op	228:26	0:0	8	.
water	228:27	0:0	8	video
op	228:32	0:0	8	.
water	228:33	0:0	8	i_sar_num
op	228:43	0:0	8	=
water	229:16	0:0	8	mpeg2_aspect
op	229:28	0:0	8	[
water	229:29	0:0	8	p_sys
op	229:34	0:0	8	->
water	229:36	0:0	8	i_aspect_ratio_info
op	229:55	0:0	8	]
op	229:56	0:0	8	[
water	229:57	0:0	8	0
op	229:58	0:0	8	]
op	229:60	0:0	8	*
water	230:16	0:0	8	p_dec
op	230:21	0:0	8	->
water	230:23	0:0	8	fmt_out
op	230:30	0:0	8	.
water	230:31	0:0	8	video
op	230:36	0:0	8	.
water	230:37	0:0	8	i_height
water	230:45	0:0	8	;
water	231:12	0:0	8	p_dec
op	231:17	0:0	8	->
water	231:19	0:0	8	fmt_out
op	231:26	0:0	8	.
water	231:27	0:0	8	video
op	231:32	0:0	8	.
water	231:33	0:0	8	i_sar_den
op	231:43	0:0	8	=
water	232:16	0:0	8	mpeg2_aspect
op	232:28	0:0	8	[
water	232:29	0:0	8	p_sys
op	232:34	0:0	8	->
water	232:36	0:0	8	i_aspect_ratio_info
op	232:55	0:0	8	]
op	232:56	0:0	8	[
water	232:57	0:0	8	1
op	232:58	0:0	8	]
op	232:60	0:0	8	*
water	233:16	0:0	8	p_dec
op	233:21	0:0	8	->
water	233:23	0:0	8	fmt_out
op	233:30	0:0	8	.
water	233:31	0:0	8	video
op	233:36	0:0	8	.
water	233:37	0:0	8	i_width
water	233:44	0:0	8	;
water	235:8	0:0	8	}
else	236:8	243:8	6
stmts	236:13	243:8	7	
if	236:13	243:8	8	(i_type == 0 x08 && p_frag -> i_buffer > 8)
cond	236:17	236:54	9	i_type == 0 x08 && p_frag -> i_buffer > 8
water	236:17	0:0	10	i_type
op	236:24	0:0	10	==
water	236:27	0:0	10	0
water	236:28	0:0	10	x08
op	236:32	0:0	10	&&
water	236:35	0:0	10	p_frag
op	236:41	0:0	10	->
water	236:43	0:0	10	i_buffer
op	236:52	0:0	10	>
water	236:54	0:0	10	8
stmts	237:8	243:8	9	
water	237:8	0:0	10	{
water	239:12	0:0	10	p_sys
op	239:17	0:0	10	->
water	239:19	0:0	10	i_picture_structure
op	239:39	0:0	10	=
water	239:41	0:0	10	p_frag
op	239:47	0:0	10	->
water	239:49	0:0	10	p_buffer
op	239:57	0:0	10	[
water	239:58	0:0	10	6
op	239:59	0:0	10	]
op	239:60	0:0	10	&
water	239:61	0:0	10	0
water	239:62	0:0	10	x03
water	239:65	0:0	10	;
water	240:12	0:0	10	p_sys
op	240:17	0:0	10	->
water	240:19	0:0	10	i_top_field_first
op	240:39	0:0	10	=
water	240:41	0:0	10	p_frag
op	240:47	0:0	10	->
water	240:49	0:0	10	p_buffer
op	240:57	0:0	10	[
water	240:58	0:0	10	7
op	240:59	0:0	10	]
op	240:61	0:0	10	>>
water	240:64	0:0	10	7
water	240:65	0:0	10	;
water	241:12	0:0	10	p_sys
op	241:17	0:0	10	->
water	241:19	0:0	10	i_repeat_first_field
op	241:39	0:0	10	=
water	241:41	0:0	10	(
water	241:42	0:0	10	p_frag
op	241:48	0:0	10	->
water	241:50	0:0	10	p_buffer
op	241:58	0:0	10	[
water	241:59	0:0	10	7
op	241:60	0:0	10	]
op	241:61	0:0	10	>>
water	241:63	0:0	10	1
water	241:64	0:0	10	)
op	241:65	0:0	10	&
water	241:66	0:0	10	0
water	241:67	0:0	10	x01
water	241:70	0:0	10	;
water	242:12	0:0	10	p_sys
op	242:17	0:0	10	->
water	242:19	0:0	10	i_progressive_frame
op	242:39	0:0	10	=
water	242:41	0:0	10	p_frag
op	242:47	0:0	10	->
water	242:49	0:0	10	p_buffer
op	242:57	0:0	10	[
water	242:58	0:0	10	8
op	242:59	0:0	10	]
op	242:61	0:0	10	>>
water	242:64	0:0	10	7
water	242:65	0:0	10	;
water	243:8	0:0	10	}
water	244:4	0:0	6	}
else	245:4	249:4	2
stmts	245:9	249:4	3	
if	245:9	249:4	4	(p_frag -> p_buffer [ 3 ] == 0 xb2 && p_frag -> i_buffer > 4)
cond	245:13	245:63	5	p_frag -> p_buffer [ 3 ] == 0 xb2 && p_frag -> i_buffer > 4
water	245:13	0:0	6	p_frag
op	245:19	0:0	6	->
water	245:21	0:0	6	p_buffer
op	245:29	0:0	6	[
water	245:30	0:0	6	3
op	245:31	0:0	6	]
op	245:33	0:0	6	==
water	245:36	0:0	6	0
water	245:37	0:0	6	xb2
op	245:41	0:0	6	&&
water	245:44	0:0	6	p_frag
op	245:50	0:0	6	->
water	245:52	0:0	6	i_buffer
op	245:61	0:0	6	>
water	245:63	0:0	6	4
stmts	246:4	249:4	5	
water	246:4	0:0	6	{
call	247:8	248:63	6	cc_Extract
arg	247:20	247:30	7	&p_sys->cc
op	247:20	0:0	8	&
water	247:21	0:0	8	p_sys
op	247:26	0:0	8	->
water	247:28	0:0	8	cc
arg	247:32	247:56	7	p_sys->i_top_field_first
water	247:32	0:0	8	p_sys
op	247:37	0:0	8	->
water	247:39	0:0	8	i_top_field_first
arg	248:20	248:40	7	&p_frag->p_buffer[4]
op	248:20	0:0	8	&
water	248:21	0:0	8	p_frag
op	248:27	0:0	8	->
water	248:29	0:0	8	p_buffer
op	248:37	0:0	8	[
water	248:38	0:0	8	4
op	248:39	0:0	8	]
arg	248:42	248:63	7	p_frag->i_buffer-4
water	248:42	0:0	8	p_frag
op	248:48	0:0	8	->
water	248:50	0:0	8	i_buffer
op	248:59	0:0	8	-
water	248:61	0:0	8	4
water	248:64	0:0	6	;
water	249:4	0:0	6	}
else	250:4	262:4	2
stmts	250:9	262:4	3	
if	250:9	262:4	4	(p_frag -> p_buffer [ 3 ] == 0 x00)
cond	250:13	250:37	5	p_frag -> p_buffer [ 3 ] == 0 x00
water	250:13	0:0	6	p_frag
op	250:19	0:0	6	->
water	250:21	0:0	6	p_buffer
op	250:29	0:0	6	[
water	250:30	0:0	6	3
op	250:31	0:0	6	]
op	250:33	0:0	6	==
water	250:36	0:0	6	0
water	250:37	0:0	6	x00
stmts	251:4	262:4	5	
water	251:4	0:0	6	{
water	253:8	0:0	6	p_sys
op	253:13	0:0	6	->
water	253:15	0:0	6	i_seq_old
op	253:24	0:0	6	++
water	253:26	0:0	6	;
if	254:8	259:8	6	(p_frag -> i_buffer >= 6)
cond	254:12	254:32	7	p_frag -> i_buffer >= 6
water	254:12	0:0	8	p_frag
op	254:18	0:0	8	->
water	254:20	0:0	8	i_buffer
op	254:29	0:0	8	>=
water	254:32	0:0	8	6
stmts	255:8	259:8	7	
water	255:8	0:0	8	{
water	256:12	0:0	8	p_sys
op	256:17	0:0	8	->
water	256:19	0:0	8	i_temporal_ref
op	256:34	0:0	8	=
water	257:16	0:0	8	(
water	257:18	0:0	8	p_frag
op	257:24	0:0	8	->
water	257:26	0:0	8	p_buffer
op	257:34	0:0	8	[
water	257:35	0:0	8	4
op	257:36	0:0	8	]
op	257:38	0:0	8	<<
water	257:41	0:0	8	2
water	257:43	0:0	8	)
op	257:44	0:0	8	|
water	257:45	0:0	8	(
water	257:46	0:0	8	p_frag
op	257:52	0:0	8	->
water	257:54	0:0	8	p_buffer
op	257:62	0:0	8	[
water	257:63	0:0	8	5
op	257:64	0:0	8	]
op	257:66	0:0	8	>>
water	257:69	0:0	8	6
water	257:70	0:0	8	)
water	257:71	0:0	8	;
water	258:12	0:0	8	p_sys
op	258:17	0:0	8	->
water	258:19	0:0	8	i_picture_type
op	258:34	0:0	8	=
water	258:36	0:0	8	(
water	258:38	0:0	8	p_frag
op	258:44	0:0	8	->
water	258:46	0:0	8	p_buffer
op	258:54	0:0	8	[
water	258:55	0:0	8	5
op	258:56	0:0	8	]
op	258:58	0:0	8	>>
water	258:61	0:0	8	3
water	258:63	0:0	8	)
op	258:65	0:0	8	&
water	258:67	0:0	8	0
water	258:68	0:0	8	x03
water	258:71	0:0	8	;
water	259:8	0:0	8	}
water	260:8	0:0	6	p_sys
op	260:13	0:0	6	->
water	260:15	0:0	6	i_dts
op	260:21	0:0	6	=
water	260:23	0:0	6	p_frag
op	260:29	0:0	6	->
water	260:31	0:0	6	i_dts
water	260:36	0:0	6	;
water	261:8	0:0	6	p_sys
op	261:13	0:0	6	->
water	261:15	0:0	6	i_pts
op	261:21	0:0	6	=
water	261:23	0:0	6	p_frag
op	261:29	0:0	6	->
water	261:31	0:0	6	i_pts
water	261:36	0:0	6	;
water	262:4	0:0	6	}
else	263:4	267:4	2
stmts	263:9	267:4	3	
if	263:9	267:4	4	(p_frag -> p_buffer [ 3 ] >= 0 x01 && p_frag -> p_buffer [ 3 ] <= 0 xaf)
cond	263:13	263:68	5	p_frag -> p_buffer [ 3 ] >= 0 x01 && p_frag -> p_buffer [ 3 ] <= 0 xaf
water	263:13	0:0	6	p_frag
op	263:19	0:0	6	->
water	263:21	0:0	6	p_buffer
op	263:29	0:0	6	[
water	263:30	0:0	6	3
op	263:31	0:0	6	]
op	263:33	0:0	6	>=
water	263:36	0:0	6	0
water	263:37	0:0	6	x01
op	263:41	0:0	6	&&
water	263:44	0:0	6	p_frag
op	263:50	0:0	6	->
water	263:52	0:0	6	p_buffer
op	263:60	0:0	6	[
water	263:61	0:0	6	3
op	263:62	0:0	6	]
op	263:64	0:0	6	<=
water	263:67	0:0	6	0
water	263:68	0:0	6	xaf
stmts	264:4	267:4	5	
water	264:4	0:0	6	{
water	266:8	0:0	6	p_sys
op	266:13	0:0	6	->
water	266:15	0:0	6	b_frame_slice
op	266:29	0:0	6	=
water	266:31	0:0	6	true
water	266:35	0:0	6	;
water	267:4	0:0	6	}
call	269:4	269:51	2	block_ChainLastAppend
arg	269:27	269:42	3	&p_sys->pp_last
op	269:27	0:0	4	&
water	269:28	0:0	4	p_sys
op	269:33	0:0	4	->
water	269:35	0:0	4	pp_last
arg	269:44	269:51	3	p_frag
water	269:44	0:0	4	p_frag
water	269:52	0:0	2	;
return	270:4	270:16	2	p_pic
water	270:11	0:0	3	p_pic

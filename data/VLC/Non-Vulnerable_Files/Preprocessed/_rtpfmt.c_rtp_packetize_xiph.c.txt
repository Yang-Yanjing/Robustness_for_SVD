func	2:0	47:0	0	static int	rtp_packetize_xiph
params	2:29	0:0	1	
param	2:31	2:55	2	sout_stream_id_sys_t *	id
param	2:57	2:69	2	block_t *	in
stmnts	0:0	46:22	1	
decl	4:4	4:38	2	int	i_max
op	4:20	0:0	2	=
call	4:22	4:33	3	rtp_mtu
arg	4:31	4:33	4	id
water	4:31	0:0	5	id
op	4:35	0:0	2	-
water	4:37	0:0	2	6
decl	5:4	5:58	2	int	i_count
op	5:20	0:0	2	=
water	5:22	0:0	2	(
water	5:24	0:0	2	in
op	5:26	0:0	2	->
water	5:28	0:0	2	i_buffer
op	5:37	0:0	2	+
water	5:39	0:0	2	i_max
op	5:45	0:0	2	-
water	5:47	0:0	2	1
water	5:49	0:0	2	)
op	5:51	0:0	2	/
water	5:53	0:0	2	i_max
decl	6:4	6:34	2	uint8_t	*p_data
op	6:20	0:0	2	=
water	6:22	0:0	2	in
op	6:24	0:0	2	->
water	6:26	0:0	2	p_buffer
decl	7:4	7:34	2	int	i_data
op	7:20	0:0	2	=
water	7:22	0:0	2	in
op	7:24	0:0	2	->
water	7:26	0:0	2	i_buffer
for	8:4	44:4	2	( int i = 0 ;i < i_count;i ++)
forinit	0:0	8:18	3	 int i = 0 ;
decl	8:9	8:18	4	int	i
op	8:15	0:0	4	=
water	8:17	0:0	4	0
cond	8:20	8:24	3	i < i_count
water	8:20	0:0	4	i
op	8:22	0:0	4	<
water	8:24	0:0	4	i_count
forexpr	8:33	8:34	3	i ++
water	8:33	0:0	4	i
op	8:34	0:0	4	++
stmts	9:4	44:4	3	
water	9:4	0:0	4	{
decl	10:8	10:56	4	int	i_payload
op	10:32	0:0	4	=
call	10:34	10:55	5	__MIN
arg	10:41	10:46	6	i_max
water	10:41	0:0	7	i_max
arg	10:48	10:55	6	i_data
water	10:48	0:0	7	i_data
decl	11:8	11:52	4	block_t	*out
op	11:21	0:0	4	=
call	11:23	11:51	5	block_Alloc
arg	11:36	11:51	6	18+i_payload
water	11:36	0:0	7	18
op	11:39	0:0	7	+
water	11:41	0:0	7	i_payload
water	12:8	0:0	4	unsigned
water	12:17	0:0	4	fragtype
water	12:25	0:0	4	,
water	12:27	0:0	4	numpkts
water	12:34	0:0	4	;
if	13:8	18:8	4	(i_count == 1)
cond	13:12	13:23	5	i_count == 1
water	13:12	0:0	6	i_count
op	13:20	0:0	6	==
water	13:23	0:0	6	1
stmts	14:8	18:8	5	
water	14:8	0:0	6	{
water	16:12	0:0	6	fragtype
op	16:21	0:0	6	=
water	16:23	0:0	6	0
water	16:24	0:0	6	;
water	17:12	0:0	6	numpkts
op	17:20	0:0	6	=
water	17:22	0:0	6	1
water	17:23	0:0	6	;
water	18:8	0:0	6	}
else	19:8	29:8	4
stmts	20:8	29:8	5	
water	20:8	0:0	6	{
water	22:12	0:0	6	numpkts
op	22:20	0:0	6	=
water	22:22	0:0	6	0
water	22:23	0:0	6	;
if	23:12	24:28	6	(i == 0)
cond	23:16	23:21	7	i == 0
water	23:16	0:0	8	i
op	23:18	0:0	8	==
water	23:21	0:0	8	0
stmts	24:16	24:28	7	
water	24:16	0:0	8	fragtype
op	24:25	0:0	8	=
water	24:27	0:0	8	1
water	24:28	0:0	8	;
else	25:12	26:28	6
stmts	25:17	26:28	7	
if	25:17	26:28	8	(i == i_count - 1)
cond	25:21	25:36	9	i == i_count - 1
water	25:21	0:0	10	i
op	25:23	0:0	10	==
water	25:26	0:0	10	i_count
op	25:34	0:0	10	-
water	25:36	0:0	10	1
stmts	26:16	26:28	9	
water	26:16	0:0	10	fragtype
op	26:25	0:0	10	=
water	26:27	0:0	10	3
water	26:28	0:0	10	;
else	27:12	28:28	6
stmts	28:16	28:28	7	
water	28:16	0:0	8	fragtype
op	28:25	0:0	8	=
water	28:27	0:0	8	2
water	28:28	0:0	8	;
water	29:8	0:0	6	}
decl	31:8	32:62	4	uint32_t	header
op	31:24	0:0	4	=
water	31:26	0:0	4	(
water	31:27	0:0	4	(
water	31:28	0:0	4	XIPH_IDENT
op	31:39	0:0	4	&
water	31:41	0:0	4	0
water	31:42	0:0	4	xffffff
water	31:49	0:0	4	)
op	31:51	0:0	4	<<
water	31:54	0:0	4	8
water	31:55	0:0	4	)
op	31:57	0:0	4	|
water	32:26	0:0	4	(
water	32:27	0:0	4	fragtype
op	32:36	0:0	4	<<
water	32:39	0:0	4	6
water	32:40	0:0	4	)
op	32:42	0:0	4	|
water	32:44	0:0	4	(
water	32:45	0:0	4	0
op	32:47	0:0	4	<<
water	32:50	0:0	4	4
water	32:51	0:0	4	)
op	32:53	0:0	4	|
water	32:55	0:0	4	numpkts
call	34:8	34:51	4	rtp_packetize_common
arg	34:30	34:32	5	id
water	34:30	0:0	6	id
arg	34:34	34:37	5	out
water	34:34	0:0	6	out
arg	34:39	34:40	5	0
water	34:39	0:0	6	0
arg	34:42	34:51	5	in->i_pts
water	34:42	0:0	6	in
op	34:44	0:0	6	->
water	34:46	0:0	6	i_pts
water	34:52	0:0	4	;
call	35:8	35:43	4	SetDWBE
arg	35:17	35:35	5	out->p_buffer+12
water	35:17	0:0	6	out
op	35:20	0:0	6	->
water	35:22	0:0	6	p_buffer
op	35:31	0:0	6	+
water	35:33	0:0	6	12
arg	35:37	35:43	5	header
water	35:37	0:0	6	header
water	35:44	0:0	4	;
call	36:8	36:45	4	SetWBE
arg	36:16	36:34	5	out->p_buffer+16
water	36:16	0:0	6	out
op	36:19	0:0	6	->
water	36:21	0:0	6	p_buffer
op	36:30	0:0	6	+
water	36:32	0:0	6	16
arg	36:36	36:45	5	i_payload
water	36:36	0:0	6	i_payload
water	36:46	0:0	4	;
call	37:8	37:54	4	memcpy
arg	37:16	37:34	5	&out->p_buffer[18]
op	37:16	0:0	6	&
water	37:17	0:0	6	out
op	37:20	0:0	6	->
water	37:22	0:0	6	p_buffer
op	37:30	0:0	6	[
water	37:31	0:0	6	18
op	37:33	0:0	6	]
arg	37:36	37:42	5	p_data
water	37:36	0:0	6	p_data
arg	37:44	37:54	5	i_payload
water	37:44	0:0	6	i_payload
water	37:55	0:0	4	;
water	38:8	0:0	4	out
op	38:11	0:0	4	->
water	38:13	0:0	4	i_buffer
op	38:24	0:0	4	=
water	38:26	0:0	4	18
op	38:29	0:0	4	+
water	38:31	0:0	4	i_payload
water	38:40	0:0	4	;
water	39:8	0:0	4	out
op	39:11	0:0	4	->
water	39:13	0:0	4	i_dts
op	39:22	0:0	4	=
water	39:24	0:0	4	in
op	39:26	0:0	4	->
water	39:28	0:0	4	i_dts
op	39:34	0:0	4	+
water	39:36	0:0	4	i
op	39:38	0:0	4	*
water	39:40	0:0	4	in
op	39:42	0:0	4	->
water	39:44	0:0	4	i_length
op	39:53	0:0	4	/
water	39:55	0:0	4	i_count
water	39:62	0:0	4	;
water	40:8	0:0	4	out
op	40:11	0:0	4	->
water	40:13	0:0	4	i_length
op	40:22	0:0	4	=
water	40:24	0:0	4	in
op	40:26	0:0	4	->
water	40:28	0:0	4	i_length
op	40:37	0:0	4	/
water	40:39	0:0	4	i_count
water	40:46	0:0	4	;
call	41:8	41:36	4	rtp_packetize_send
arg	41:28	41:30	5	id
water	41:28	0:0	6	id
arg	41:32	41:36	5	out
water	41:32	0:0	6	out
water	41:37	0:0	4	;
water	42:8	0:0	4	p_data
op	42:15	0:0	4	+=
water	42:18	0:0	4	i_payload
water	42:27	0:0	4	;
water	43:8	0:0	4	i_data
op	43:15	0:0	4	-=
water	43:18	0:0	4	i_payload
water	43:27	0:0	4	;
water	44:4	0:0	4	}
call	45:4	45:20	2	block_Release
arg	45:18	45:20	3	in
water	45:18	0:0	4	in
water	45:21	0:0	2	;
return	46:4	46:22	2	VLC_SUCCESS
water	46:11	0:0	3	VLC_SUCCESS

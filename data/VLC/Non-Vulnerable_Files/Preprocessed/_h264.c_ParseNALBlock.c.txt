func	2:0	94:0	0	static block_t *	ParseNALBlock
params	2:29	0:0	1	
param	2:31	2:47	2	decoder_t *	p_dec
param	2:49	2:65	2	bool *	pb_ts_used
param	2:67	2:83	2	block_t *	p_frag
stmnts	0:0	93:16	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:25	2	block_t	*p_pic
op	5:19	0:0	2	=
water	5:21	0:0	2	NULL
decl	6:4	6:61	2	const int	i_nal_ref_idc
op	6:28	0:0	2	=
water	6:30	0:0	2	(
water	6:31	0:0	2	p_frag
op	6:37	0:0	2	->
water	6:39	0:0	2	p_buffer
op	6:47	0:0	2	[
water	6:48	0:0	2	4
op	6:49	0:0	2	]
op	6:51	0:0	2	>>
water	6:54	0:0	2	5
water	6:55	0:0	2	)
op	6:56	0:0	2	&
water	6:57	0:0	2	0
water	6:58	0:0	2	x03
decl	7:4	7:51	2	const int	i_nal_type
op	7:25	0:0	2	=
water	7:27	0:0	2	p_frag
op	7:33	0:0	2	->
water	7:35	0:0	2	p_buffer
op	7:43	0:0	2	[
water	7:44	0:0	2	4
op	7:45	0:0	2	]
op	7:46	0:0	2	&
water	7:47	0:0	2	0
water	7:48	0:0	2	x1f
decl	8:4	8:44	2	const mtime_t	i_frag_dts
op	8:29	0:0	2	=
water	8:31	0:0	2	p_frag
op	8:37	0:0	2	->
water	8:39	0:0	2	i_dts
decl	9:4	9:44	2	const mtime_t	i_frag_pts
op	9:29	0:0	2	=
water	9:31	0:0	2	p_frag
op	9:37	0:0	2	->
water	9:39	0:0	2	i_pts
if	10:4	21:4	2	(p_sys -> b_slice && ( ! p_sys -> b_sps || ! p_sys -> b_pps ))
cond	10:8	10:59	3	p_sys -> b_slice && ( ! p_sys -> b_sps || ! p_sys -> b_pps )
water	10:8	0:0	4	p_sys
op	10:13	0:0	4	->
water	10:15	0:0	4	b_slice
op	10:23	0:0	4	&&
water	10:26	0:0	4	(
op	10:28	0:0	4	!
water	10:29	0:0	4	p_sys
op	10:34	0:0	4	->
water	10:36	0:0	4	b_sps
op	10:42	0:0	4	||
op	10:45	0:0	4	!
water	10:46	0:0	4	p_sys
op	10:51	0:0	4	->
water	10:53	0:0	4	b_pps
water	10:59	0:0	4	)
stmts	11:4	21:4	3	
water	11:4	0:0	4	{
call	12:8	12:43	4	block_ChainRelease
arg	12:28	12:43	5	p_sys->p_frame
water	12:28	0:0	6	p_sys
op	12:33	0:0	6	->
water	12:35	0:0	6	p_frame
water	12:44	0:0	4	;
call	13:8	13:47	4	msg_Warn
arg	13:18	13:23	5	p_dec
water	13:18	0:0	6	p_dec
arg	13:25	13:47	5	"waiting for SPS/PPS"
water	13:25	0:0	6	"waiting for SPS/PPS"
water	13:48	0:0	4	;
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	slice
op	15:20	0:0	4	.
water	15:21	0:0	4	i_frame_type
op	15:34	0:0	4	=
water	15:36	0:0	4	0
water	15:37	0:0	4	;
water	16:8	0:0	4	p_sys
op	16:13	0:0	4	->
water	16:15	0:0	4	p_frame
op	16:23	0:0	4	=
water	16:25	0:0	4	NULL
water	16:29	0:0	4	;
water	17:8	0:0	4	p_sys
op	17:13	0:0	4	->
water	17:15	0:0	4	b_frame_sps
op	17:27	0:0	4	=
water	17:29	0:0	4	false
water	17:34	0:0	4	;
water	18:8	0:0	4	p_sys
op	18:13	0:0	4	->
water	18:15	0:0	4	b_frame_pps
op	18:27	0:0	4	=
water	18:29	0:0	4	false
water	18:34	0:0	4	;
water	19:8	0:0	4	p_sys
op	19:13	0:0	4	->
water	19:15	0:0	4	b_slice
op	19:23	0:0	4	=
water	19:25	0:0	4	false
water	19:30	0:0	4	;
call	20:8	20:34	4	cc_Flush
arg	20:18	20:34	5	&p_sys->cc_next
op	20:18	0:0	6	&
water	20:19	0:0	6	p_sys
op	20:24	0:0	6	->
water	20:26	0:0	6	cc_next
water	20:35	0:0	4	;
water	21:4	0:0	4	}
if	22:4	27:4	2	(( ! p_sys -> b_sps || ! p_sys -> b_pps ) && i_nal_type >= NAL_SLICE && i_nal_type <= NAL_SLICE_IDR)
cond	22:8	23:49	3	( ! p_sys -> b_sps || ! p_sys -> b_pps ) && i_nal_type >= NAL_SLICE && i_nal_type <= NAL_SLICE_IDR
water	22:8	0:0	4	(
op	22:10	0:0	4	!
water	22:11	0:0	4	p_sys
op	22:16	0:0	4	->
water	22:18	0:0	4	b_sps
op	22:24	0:0	4	||
op	22:27	0:0	4	!
water	22:28	0:0	4	p_sys
op	22:33	0:0	4	->
water	22:35	0:0	4	b_pps
water	22:41	0:0	4	)
op	22:43	0:0	4	&&
water	23:8	0:0	4	i_nal_type
op	23:19	0:0	4	>=
water	23:22	0:0	4	NAL_SLICE
op	23:32	0:0	4	&&
water	23:35	0:0	4	i_nal_type
op	23:46	0:0	4	<=
water	23:49	0:0	4	NAL_SLICE_IDR
stmts	24:4	27:4	3	
water	24:4	0:0	4	{
water	25:8	0:0	4	p_sys
op	25:13	0:0	4	->
water	25:15	0:0	4	b_slice
op	25:23	0:0	4	=
water	25:25	0:0	4	true
water	25:29	0:0	4	;
water	27:4	0:0	4	}
else	28:4	39:4	2
stmts	28:9	39:4	3	
if	28:9	39:4	4	(i_nal_type >= NAL_SLICE && i_nal_type <= NAL_SLICE_IDR)
cond	28:13	28:54	5	i_nal_type >= NAL_SLICE && i_nal_type <= NAL_SLICE_IDR
water	28:13	0:0	6	i_nal_type
op	28:24	0:0	6	>=
water	28:27	0:0	6	NAL_SLICE
op	28:37	0:0	6	&&
water	28:40	0:0	6	i_nal_type
op	28:51	0:0	6	<=
water	28:54	0:0	6	NAL_SLICE_IDR
stmts	29:4	39:4	5	
water	29:4	0:0	6	{
decl	30:8	30:21	6	slice_t	slice
decl	31:8	31:27	6	bool	b_new_picture
call	32:8	32:85	6	ParseSlice
arg	32:20	32:25	7	p_dec
water	32:20	0:0	8	p_dec
arg	32:27	32:41	7	&b_new_picture
op	32:27	0:0	8	&
water	32:28	0:0	8	b_new_picture
arg	32:43	32:49	7	&slice
op	32:43	0:0	8	&
water	32:44	0:0	8	slice
arg	32:51	32:64	7	i_nal_ref_idc
water	32:51	0:0	8	i_nal_ref_idc
arg	32:66	32:76	7	i_nal_type
water	32:66	0:0	8	i_nal_type
arg	32:78	32:85	7	p_frag
water	32:78	0:0	8	p_frag
water	32:86	0:0	6	;
if	34:8	35:42	6	(b_new_picture && p_sys -> b_slice)
cond	34:12	34:36	7	b_new_picture && p_sys -> b_slice
water	34:12	0:0	8	b_new_picture
op	34:26	0:0	8	&&
water	34:29	0:0	8	p_sys
op	34:34	0:0	8	->
water	34:36	0:0	8	b_slice
stmts	35:12	35:42	7	
water	35:12	0:0	8	p_pic
op	35:18	0:0	8	=
call	35:20	35:41	8	OutputPicture
arg	35:35	35:41	9	p_dec
water	35:35	0:0	10	p_dec
water	35:42	0:0	8	;
water	37:8	0:0	6	p_sys
op	37:13	0:0	6	->
water	37:15	0:0	6	slice
op	37:21	0:0	6	=
water	37:23	0:0	6	slice
water	37:28	0:0	6	;
water	38:8	0:0	6	p_sys
op	38:13	0:0	6	->
water	38:15	0:0	6	b_slice
op	38:23	0:0	6	=
water	38:25	0:0	6	true
water	38:29	0:0	6	;
water	39:4	0:0	6	}
else	40:4	48:4	2
stmts	40:9	48:4	3	
if	40:9	48:4	4	(i_nal_type == NAL_SPS)
cond	40:13	40:27	5	i_nal_type == NAL_SPS
water	40:13	0:0	6	i_nal_type
op	40:24	0:0	6	==
water	40:27	0:0	6	NAL_SPS
stmts	41:4	48:4	5	
water	41:4	0:0	6	{
if	42:8	43:42	6	(p_sys -> b_slice)
cond	42:12	42:19	7	p_sys -> b_slice
water	42:12	0:0	8	p_sys
op	42:17	0:0	8	->
water	42:19	0:0	8	b_slice
stmts	43:12	43:42	7	
water	43:12	0:0	8	p_pic
op	43:18	0:0	8	=
call	43:20	43:41	8	OutputPicture
arg	43:35	43:41	9	p_dec
water	43:35	0:0	10	p_dec
water	43:42	0:0	8	;
water	44:8	0:0	6	p_sys
op	44:13	0:0	6	->
water	44:15	0:0	6	b_frame_sps
op	44:27	0:0	6	=
water	44:29	0:0	6	true
water	44:33	0:0	6	;
call	45:8	45:30	6	PutSPS
arg	45:16	45:21	7	p_dec
water	45:16	0:0	8	p_dec
arg	45:23	45:30	7	p_frag
water	45:23	0:0	8	p_frag
water	45:31	0:0	6	;
water	47:8	0:0	6	p_frag
op	47:15	0:0	6	=
water	47:17	0:0	6	NULL
water	47:21	0:0	6	;
water	48:4	0:0	6	}
else	49:4	57:4	2
stmts	49:9	57:4	3	
if	49:9	57:4	4	(i_nal_type == NAL_PPS)
cond	49:13	49:27	5	i_nal_type == NAL_PPS
water	49:13	0:0	6	i_nal_type
op	49:24	0:0	6	==
water	49:27	0:0	6	NAL_PPS
stmts	50:4	57:4	5	
water	50:4	0:0	6	{
if	51:8	52:42	6	(p_sys -> b_slice)
cond	51:12	51:19	7	p_sys -> b_slice
water	51:12	0:0	8	p_sys
op	51:17	0:0	8	->
water	51:19	0:0	8	b_slice
stmts	52:12	52:42	7	
water	52:12	0:0	8	p_pic
op	52:18	0:0	8	=
call	52:20	52:41	8	OutputPicture
arg	52:35	52:41	9	p_dec
water	52:35	0:0	10	p_dec
water	52:42	0:0	8	;
water	53:8	0:0	6	p_sys
op	53:13	0:0	6	->
water	53:15	0:0	6	b_frame_pps
op	53:27	0:0	6	=
water	53:29	0:0	6	true
water	53:33	0:0	6	;
call	54:8	54:30	6	PutPPS
arg	54:16	54:21	7	p_dec
water	54:16	0:0	8	p_dec
arg	54:23	54:30	7	p_frag
water	54:23	0:0	8	p_frag
water	54:31	0:0	6	;
water	56:8	0:0	6	p_frag
op	56:15	0:0	6	=
water	56:17	0:0	6	NULL
water	56:21	0:0	6	;
water	57:4	0:0	6	}
else	58:4	81:4	2
stmts	58:9	81:4	3	
if	58:9	81:4	4	(i_nal_type == NAL_AU_DELIMITER || i_nal_type == NAL_SEI || ( i_nal_type >= 13 && i_nal_type <= 18 ))
cond	58:13	60:52	5	i_nal_type == NAL_AU_DELIMITER || i_nal_type == NAL_SEI || ( i_nal_type >= 13 && i_nal_type <= 18 )
water	58:13	0:0	6	i_nal_type
op	58:24	0:0	6	==
water	58:27	0:0	6	NAL_AU_DELIMITER
op	58:44	0:0	6	||
water	59:13	0:0	6	i_nal_type
op	59:24	0:0	6	==
water	59:27	0:0	6	NAL_SEI
op	59:35	0:0	6	||
water	60:13	0:0	6	(
water	60:15	0:0	6	i_nal_type
op	60:26	0:0	6	>=
water	60:29	0:0	6	13
op	60:32	0:0	6	&&
water	60:35	0:0	6	i_nal_type
op	60:46	0:0	6	<=
water	60:49	0:0	6	18
water	60:52	0:0	6	)
stmts	61:4	81:4	5	
water	61:4	0:0	6	{
if	62:8	63:42	6	(p_sys -> b_slice)
cond	62:12	62:19	7	p_sys -> b_slice
water	62:12	0:0	8	p_sys
op	62:17	0:0	8	->
water	62:19	0:0	8	b_slice
stmts	63:12	63:42	7	
water	63:12	0:0	8	p_pic
op	63:18	0:0	8	=
call	63:20	63:41	8	OutputPicture
arg	63:35	63:41	9	p_dec
water	63:35	0:0	10	p_dec
water	63:42	0:0	8	;
if	65:8	68:8	6	(i_nal_type == NAL_SEI)
cond	65:12	65:26	7	i_nal_type == NAL_SEI
water	65:12	0:0	8	i_nal_type
op	65:23	0:0	8	==
water	65:26	0:0	8	NAL_SEI
stmts	66:8	68:8	7	
water	66:8	0:0	8	{
call	67:12	67:36	8	ParseSei
arg	67:22	67:27	9	p_dec
water	67:22	0:0	10	p_dec
arg	67:29	67:36	9	p_frag
water	67:29	0:0	10	p_frag
water	67:37	0:0	8	;
water	68:8	0:0	8	}
else	69:8	80:8	6
stmts	69:13	80:8	7	
if	69:13	80:8	8	(i_nal_type == NAL_AU_DELIMITER)
cond	69:17	69:31	9	i_nal_type == NAL_AU_DELIMITER
water	69:17	0:0	10	i_nal_type
op	69:28	0:0	10	==
water	69:31	0:0	10	NAL_AU_DELIMITER
stmts	70:8	80:8	9	
water	70:8	0:0	10	{
if	71:12	75:12	10	(p_sys -> p_frame && ( p_sys -> p_frame -> i_flags & BLOCK_FLAG_PRIVATE_AUD ))
cond	71:16	71:83	11	p_sys -> p_frame && ( p_sys -> p_frame -> i_flags & BLOCK_FLAG_PRIVATE_AUD )
water	71:16	0:0	12	p_sys
op	71:21	0:0	12	->
water	71:23	0:0	12	p_frame
op	71:31	0:0	12	&&
water	71:34	0:0	12	(
water	71:35	0:0	12	p_sys
op	71:40	0:0	12	->
water	71:42	0:0	12	p_frame
op	71:49	0:0	12	->
water	71:51	0:0	12	i_flags
op	71:59	0:0	12	&
water	71:61	0:0	12	BLOCK_FLAG_PRIVATE_AUD
water	71:83	0:0	12	)
stmts	72:12	75:12	11	
water	72:12	0:0	12	{
call	73:16	73:38	12	block_Release
arg	73:31	73:38	13	p_frag
water	73:31	0:0	14	p_frag
water	73:39	0:0	12	;
water	74:16	0:0	12	p_frag
op	74:23	0:0	12	=
water	74:25	0:0	12	NULL
water	74:29	0:0	12	;
water	75:12	0:0	12	}
else	76:12	79:12	10
stmts	77:12	79:12	11	
water	77:12	0:0	12	{
water	78:16	0:0	12	p_frag
op	78:22	0:0	12	->
water	78:24	0:0	12	i_flags
op	78:32	0:0	12	|=
water	78:35	0:0	12	BLOCK_FLAG_PRIVATE_AUD
water	78:57	0:0	12	;
water	79:12	0:0	12	}
water	80:8	0:0	10	}
water	81:4	0:0	6	}
if	83:4	84:52	2	(p_frag)
cond	83:8	83:8	3	p_frag
water	83:8	0:0	4	p_frag
stmts	84:8	84:52	3	
call	84:8	84:51	4	block_ChainAppend
arg	84:27	84:42	5	&p_sys->p_frame
op	84:27	0:0	6	&
water	84:28	0:0	6	p_sys
op	84:33	0:0	6	->
water	84:35	0:0	6	p_frame
arg	84:44	84:51	5	p_frag
water	84:44	0:0	6	p_frag
water	84:52	0:0	4	;
op	85:4	0:0	2	*
water	85:5	0:0	2	pb_ts_used
op	85:16	0:0	2	=
water	85:18	0:0	2	false
water	85:23	0:0	2	;
if	86:4	92:4	2	(p_sys -> i_frame_dts <= VLC_TS_INVALID && p_sys -> i_frame_pts <= VLC_TS_INVALID)
cond	86:8	87:30	3	p_sys -> i_frame_dts <= VLC_TS_INVALID && p_sys -> i_frame_pts <= VLC_TS_INVALID
water	86:8	0:0	4	p_sys
op	86:13	0:0	4	->
water	86:15	0:0	4	i_frame_dts
op	86:27	0:0	4	<=
water	86:30	0:0	4	VLC_TS_INVALID
op	86:45	0:0	4	&&
water	87:8	0:0	4	p_sys
op	87:13	0:0	4	->
water	87:15	0:0	4	i_frame_pts
op	87:27	0:0	4	<=
water	87:30	0:0	4	VLC_TS_INVALID
stmts	88:4	92:4	3	
water	88:4	0:0	4	{
water	89:8	0:0	4	p_sys
op	89:13	0:0	4	->
water	89:15	0:0	4	i_frame_dts
op	89:27	0:0	4	=
water	89:29	0:0	4	i_frag_dts
water	89:39	0:0	4	;
water	90:8	0:0	4	p_sys
op	90:13	0:0	4	->
water	90:15	0:0	4	i_frame_pts
op	90:27	0:0	4	=
water	90:29	0:0	4	i_frag_pts
water	90:39	0:0	4	;
op	91:8	0:0	4	*
water	91:9	0:0	4	pb_ts_used
op	91:20	0:0	4	=
water	91:22	0:0	4	true
water	91:26	0:0	4	;
water	92:4	0:0	4	}
return	93:4	93:16	2	p_pic
water	93:11	0:0	3	p_pic

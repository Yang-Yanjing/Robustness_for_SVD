func	2:0	33:0	0	void	puzzle_rotate_pce
params	2:22	0:0	1	
param	2:24	2:42	2	filter_t *	p_filter
param	2:44	2:59	2	int32_t	i_piece
param	2:61	2:83	2	int8_t	i_rotate_mirror
param	2:85	2:103	2	int32_t	i_center_x
param	2:105	2:123	2	int32_t	i_center_y
param	2:125	2:145	2	bool	b_avoid_mirror
stmnts	0:0	32:4	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:50	2	piece_t	*ps_piece
op	5:22	0:0	2	=
op	5:24	0:0	2	&
water	5:25	0:0	2	p_sys
op	5:30	0:0	2	->
water	5:32	0:0	2	ps_pieces
op	5:41	0:0	2	[
water	5:42	0:0	2	i_piece
op	5:49	0:0	2	]
if	6:4	7:14	2	(p_sys -> s_current_param . i_rotate == 0)
cond	6:9	6:44	3	p_sys -> s_current_param . i_rotate == 0
water	6:9	0:0	4	p_sys
op	6:14	0:0	4	->
water	6:16	0:0	4	s_current_param
op	6:31	0:0	4	.
water	6:32	0:0	4	i_rotate
op	6:41	0:0	4	==
water	6:44	0:0	4	0
stmts	7:8	7:14	3	
return	7:8	7:14	4	
if	8:4	9:14	2	(p_sys -> s_current_param . i_rotate == 1 && ( i_rotate_mirror != 2 ))
cond	8:9	8:70	3	p_sys -> s_current_param . i_rotate == 1 && ( i_rotate_mirror != 2 )
water	8:9	0:0	4	p_sys
op	8:14	0:0	4	->
water	8:16	0:0	4	s_current_param
op	8:31	0:0	4	.
water	8:32	0:0	4	i_rotate
op	8:41	0:0	4	==
water	8:44	0:0	4	1
op	8:46	0:0	4	&&
water	8:49	0:0	4	(
water	8:50	0:0	4	i_rotate_mirror
op	8:66	0:0	4	!=
water	8:69	0:0	4	2
water	8:70	0:0	4	)
stmts	9:8	9:14	3	
return	9:8	9:14	4	
for	10:4	32:4	2	( uint8_t i = 0 ;i <abs (i_rotate_mirror );i ++)
forinit	0:0	10:21	3	 uint8_t i = 0 ;
decl	10:10	10:21	4	uint8_t	i
op	10:19	0:0	4	=
water	10:20	0:0	4	0
cond	10:23	10:48	3	i <abs (i_rotate_mirror )
water	10:23	0:0	4	i
op	10:25	0:0	4	<
call	10:27	10:48	4	abs
arg	10:32	10:48	5	i_rotate_mirror
water	10:32	0:0	6	i_rotate_mirror
forexpr	10:51	10:52	3	i ++
water	10:51	0:0	4	i
op	10:52	0:0	4	++
stmts	10:56	32:4	3	
water	10:56	0:0	4	{
decl	11:8	11:32	4	int32_t	i_tempx
water	11:23	0:0	4	,
decl	11:8	11:32	4	int32_t	i_tempy
if	13:8	18:8	4	(i_rotate_mirror > 0)
cond	13:13	13:31	5	i_rotate_mirror > 0
water	13:13	0:0	6	i_rotate_mirror
op	13:29	0:0	6	>
water	13:31	0:0	6	0
stmts	13:35	18:8	5	
water	13:35	0:0	6	{
water	14:12	0:0	6	ps_piece
op	14:20	0:0	6	->
water	14:22	0:0	6	i_actual_angle
op	14:36	0:0	6	++
water	14:38	0:0	6	;
water	15:12	0:0	6	ps_piece
op	15:20	0:0	6	->
water	15:22	0:0	6	i_actual_angle
op	15:37	0:0	6	&=
water	15:40	0:0	6	0
water	15:41	0:0	6	x03
water	15:44	0:0	6	;
water	16:12	0:0	6	i_tempx
op	16:20	0:0	6	=
op	16:22	0:0	6	-
water	16:23	0:0	6	(
water	16:25	0:0	6	i_center_y
op	16:36	0:0	6	-
water	16:38	0:0	6	ps_piece
op	16:46	0:0	6	->
water	16:48	0:0	6	ps_piece_in_plane
op	16:65	0:0	6	[
water	16:66	0:0	6	0
op	16:67	0:0	6	]
op	16:68	0:0	6	.
water	16:69	0:0	6	i_actual_y
water	16:80	0:0	6	)
op	16:82	0:0	6	+
water	16:84	0:0	6	i_center_x
water	16:94	0:0	6	;
water	17:12	0:0	6	i_tempy
op	17:20	0:0	6	=
op	17:22	0:0	6	+
water	17:23	0:0	6	(
water	17:25	0:0	6	i_center_x
op	17:36	0:0	6	-
water	17:38	0:0	6	ps_piece
op	17:46	0:0	6	->
water	17:48	0:0	6	ps_piece_in_plane
op	17:65	0:0	6	[
water	17:66	0:0	6	0
op	17:67	0:0	6	]
op	17:68	0:0	6	.
water	17:69	0:0	6	i_actual_x
water	17:80	0:0	6	)
op	17:82	0:0	6	+
water	17:84	0:0	6	i_center_y
water	17:94	0:0	6	;
water	18:8	0:0	6	}
else	19:8	24:8	4
stmts	19:13	24:8	5	
water	19:13	0:0	6	{
water	20:12	0:0	6	ps_piece
op	20:20	0:0	6	->
water	20:22	0:0	6	i_actual_angle
op	20:36	0:0	6	--
water	20:38	0:0	6	;
water	21:12	0:0	6	ps_piece
op	21:20	0:0	6	->
water	21:22	0:0	6	i_actual_angle
op	21:37	0:0	6	&=
water	21:40	0:0	6	0
water	21:41	0:0	6	x03
water	21:44	0:0	6	;
water	22:12	0:0	6	i_tempx
op	22:20	0:0	6	=
op	22:22	0:0	6	+
water	22:23	0:0	6	(
water	22:25	0:0	6	i_center_y
op	22:36	0:0	6	-
water	22:38	0:0	6	ps_piece
op	22:46	0:0	6	->
water	22:48	0:0	6	ps_piece_in_plane
op	22:65	0:0	6	[
water	22:66	0:0	6	0
op	22:67	0:0	6	]
op	22:68	0:0	6	.
water	22:69	0:0	6	i_actual_y
water	22:80	0:0	6	)
op	22:82	0:0	6	+
water	22:84	0:0	6	i_center_x
water	22:94	0:0	6	;
water	23:12	0:0	6	i_tempy
op	23:20	0:0	6	=
op	23:22	0:0	6	-
water	23:23	0:0	6	(
water	23:25	0:0	6	i_center_x
op	23:36	0:0	6	-
water	23:38	0:0	6	ps_piece
op	23:46	0:0	6	->
water	23:48	0:0	6	ps_piece_in_plane
op	23:65	0:0	6	[
water	23:66	0:0	6	0
op	23:67	0:0	6	]
op	23:68	0:0	6	.
water	23:69	0:0	6	i_actual_x
water	23:80	0:0	6	)
op	23:82	0:0	6	+
water	23:84	0:0	6	i_center_y
water	23:94	0:0	6	;
water	24:8	0:0	6	}
water	25:8	0:0	4	ps_piece
op	25:16	0:0	4	->
water	25:18	0:0	4	ps_piece_in_plane
op	25:35	0:0	4	[
water	25:36	0:0	4	0
op	25:37	0:0	4	]
op	25:38	0:0	4	.
water	25:39	0:0	4	i_actual_x
op	25:50	0:0	4	=
water	25:52	0:0	4	i_tempx
water	25:59	0:0	4	;
water	26:8	0:0	4	ps_piece
op	26:16	0:0	4	->
water	26:18	0:0	4	ps_piece_in_plane
op	26:35	0:0	4	[
water	26:36	0:0	4	0
op	26:37	0:0	4	]
op	26:38	0:0	4	.
water	26:39	0:0	4	i_actual_y
op	26:50	0:0	4	=
water	26:52	0:0	4	i_tempy
water	26:59	0:0	4	;
if	27:8	30:8	4	(ps_piece -> i_actual_angle == 0 && p_sys -> s_current_param . i_rotate == 3 && ! b_avoid_mirror)
cond	27:13	27:87	5	ps_piece -> i_actual_angle == 0 && p_sys -> s_current_param . i_rotate == 3 && ! b_avoid_mirror
water	27:13	0:0	6	ps_piece
op	27:21	0:0	6	->
water	27:23	0:0	6	i_actual_angle
op	27:38	0:0	6	==
water	27:41	0:0	6	0
op	27:43	0:0	6	&&
water	27:46	0:0	6	p_sys
op	27:51	0:0	6	->
water	27:53	0:0	6	s_current_param
op	27:68	0:0	6	.
water	27:69	0:0	6	i_rotate
op	27:78	0:0	6	==
water	27:81	0:0	6	3
op	27:83	0:0	6	&&
op	27:86	0:0	6	!
water	27:87	0:0	6	b_avoid_mirror
stmts	27:104	30:8	5	
water	27:104	0:0	6	{
water	28:12	0:0	6	ps_piece
op	28:20	0:0	6	->
water	28:22	0:0	6	ps_piece_in_plane
op	28:39	0:0	6	[
water	28:40	0:0	6	0
op	28:41	0:0	6	]
op	28:42	0:0	6	.
water	28:43	0:0	6	i_actual_x
op	28:54	0:0	6	=
water	28:56	0:0	6	2
op	28:58	0:0	6	*
water	28:60	0:0	6	i_center_x
op	28:71	0:0	6	-
water	28:73	0:0	6	ps_piece
op	28:81	0:0	6	->
water	28:83	0:0	6	ps_piece_in_plane
op	28:100	0:0	6	[
water	28:101	0:0	6	0
op	28:102	0:0	6	]
op	28:103	0:0	6	.
water	28:104	0:0	6	i_actual_x
water	28:114	0:0	6	;
water	29:12	0:0	6	ps_piece
op	29:20	0:0	6	->
water	29:22	0:0	6	i_actual_mirror
op	29:38	0:0	6	*=
op	29:41	0:0	6	-
water	29:42	0:0	6	1
water	29:43	0:0	6	;
water	30:8	0:0	6	}
call	31:8	31:52	4	puzzle_calculate_corners
arg	31:34	31:42	5	p_filter
water	31:34	0:0	6	p_filter
arg	31:44	31:52	5	i_piece
water	31:44	0:0	6	i_piece
water	31:53	0:0	4	;
water	32:4	0:0	4	}

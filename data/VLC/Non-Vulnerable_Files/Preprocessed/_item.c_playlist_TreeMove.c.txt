func	2:0	17:0	0	int	playlist_TreeMove
params	2:21	0:0	1	
param	2:23	2:46	2	playlist_t *	p_playlist
param	2:48	2:71	2	playlist_item_t *	p_item
param	3:23	3:46	2	playlist_item_t *	p_node
param	3:48	3:61	2	int	i_newpos
stmnts	5:4	16:22	1	
water	5:4	0:0	2	PL_ASSERT_LOCKED
water	5:20	0:0	2	;
if	6:4	6:54	2	(p_node -> i_children == - 1)
cond	6:8	6:31	3	p_node -> i_children == - 1
water	6:8	0:0	4	p_node
op	6:14	0:0	4	->
water	6:16	0:0	4	i_children
op	6:27	0:0	4	==
op	6:30	0:0	4	-
water	6:31	0:0	4	1
stmts	6:35	6:54	3	
return	6:35	6:54	4	VLC_EGENERIC
water	6:42	0:0	5	VLC_EGENERIC
decl	7:4	7:48	2	playlist_item_t	*p_detach
op	7:30	0:0	2	=
water	7:32	0:0	2	p_item
op	7:38	0:0	2	->
water	7:40	0:0	2	p_parent
decl	8:4	8:37	2	int	i_index
op	8:16	0:0	2	=
call	8:18	8:36	3	ItemIndex
arg	8:29	8:36	4	p_item
water	8:29	0:0	5	p_item
call	9:4	9:70	2	REMOVE_ELEM
arg	9:17	9:38	3	p_detach->pp_children
water	9:17	0:0	4	p_detach
op	9:25	0:0	4	->
water	9:27	0:0	4	pp_children
arg	9:40	9:60	3	p_detach->i_children
water	9:40	0:0	4	p_detach
op	9:48	0:0	4	->
water	9:50	0:0	4	i_children
arg	9:62	9:70	3	i_index
water	9:62	0:0	4	i_index
water	9:71	0:0	2	;
if	10:4	11:18	2	(p_detach == p_node && i_index < i_newpos)
cond	10:8	10:40	3	p_detach == p_node && i_index < i_newpos
water	10:8	0:0	4	p_detach
op	10:17	0:0	4	==
water	10:20	0:0	4	p_node
op	10:27	0:0	4	&&
water	10:30	0:0	4	i_index
op	10:38	0:0	4	<
water	10:40	0:0	4	i_newpos
stmts	11:8	11:18	3	
water	11:8	0:0	4	i_newpos
op	11:16	0:0	4	--
water	11:18	0:0	4	;
call	12:4	12:75	2	INSERT_ELEM
arg	12:17	12:36	3	p_node->pp_children
water	12:17	0:0	4	p_node
op	12:23	0:0	4	->
water	12:25	0:0	4	pp_children
arg	12:38	12:56	3	p_node->i_children
water	12:38	0:0	4	p_node
op	12:44	0:0	4	->
water	12:46	0:0	4	i_children
arg	12:58	12:66	3	i_newpos
water	12:58	0:0	4	i_newpos
arg	12:68	12:75	3	p_item
water	12:68	0:0	4	p_item
water	12:76	0:0	2	;
water	13:4	0:0	2	p_item
op	13:10	0:0	2	->
water	13:12	0:0	2	p_parent
op	13:21	0:0	2	=
water	13:23	0:0	2	p_node
water	13:29	0:0	2	;
call	14:4	14:24	2	pl_priv
arg	14:13	14:24	3	p_playlist
water	14:13	0:0	4	p_playlist
op	14:25	0:0	2	->
water	14:27	0:0	2	b_reset_currently_playing
op	14:53	0:0	2	=
water	14:55	0:0	2	true
water	14:59	0:0	2	;
call	15:4	15:52	2	vlc_cond_signal
arg	15:21	15:52	3	&pl_priv(p_playlist)->signal
call	15:21	15:42	4	&pl_priv
arg	15:31	15:42	5	p_playlist
water	15:31	0:0	6	p_playlist
op	15:43	0:0	4	->
water	15:45	0:0	4	signal
water	15:53	0:0	2	;
return	16:4	16:22	2	VLC_SUCCESS
water	16:11	0:0	3	VLC_SUCCESS

func	2:0	160:0	0	static void	FilterErase
params	2:23	0:0	1	
param	2:25	2:43	2	filter_t *	p_filter
param	2:45	2:63	2	picture_t *	p_inpic
param	3:45	3:65	2	picture_t *	p_outpic
stmnts	0:0	159:4	1	
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
decl	6:4	6:51	2	const int	i_mask_pitch
op	6:27	0:0	2	=
water	6:29	0:0	2	p_sys
op	6:34	0:0	2	->
water	6:36	0:0	2	p_mask
op	6:42	0:0	2	->
water	6:44	0:0	2	A_PITCH
decl	7:4	7:78	2	const int	i_mask_visible_pitch
op	7:35	0:0	2	=
water	7:37	0:0	2	p_sys
op	7:42	0:0	2	->
water	7:44	0:0	2	p_mask
op	7:50	0:0	2	->
water	7:52	0:0	2	p
op	7:53	0:0	2	[
water	7:54	0:0	2	A_PLANE
op	7:61	0:0	2	]
op	7:62	0:0	2	.
water	7:63	0:0	2	i_visible_pitch
decl	8:4	8:78	2	const int	i_mask_visible_lines
op	8:35	0:0	2	=
water	8:37	0:0	2	p_sys
op	8:42	0:0	2	->
water	8:44	0:0	2	p_mask
op	8:50	0:0	2	->
water	8:52	0:0	2	p
op	8:53	0:0	2	[
water	8:54	0:0	2	A_PLANE
op	8:61	0:0	2	]
op	8:62	0:0	2	.
water	8:63	0:0	2	i_visible_lines
for	9:4	159:4	2	( int i_plane = 0 ;i_plane < p_inpic -> i_planes;i_plane ++)
forinit	0:0	9:24	3	 int i_plane = 0 ;
decl	9:9	9:24	4	int	i_plane
op	9:21	0:0	4	=
water	9:23	0:0	4	0
cond	9:26	9:45	3	i_plane < p_inpic -> i_planes
water	9:26	0:0	4	i_plane
op	9:34	0:0	4	<
water	9:36	0:0	4	p_inpic
op	9:43	0:0	4	->
water	9:45	0:0	4	i_planes
forexpr	9:55	9:62	3	i_plane ++
water	9:55	0:0	4	i_plane
op	9:62	0:0	4	++
stmts	10:4	159:4	3	
water	10:4	0:0	4	{
decl	11:8	11:56	4	const int	i_pitch
op	11:26	0:0	4	=
water	11:28	0:0	4	p_outpic
op	11:36	0:0	4	->
water	11:38	0:0	4	p
op	11:39	0:0	4	[
water	11:40	0:0	4	i_plane
op	11:47	0:0	4	]
op	11:48	0:0	4	.
water	11:49	0:0	4	i_pitch
decl	12:8	12:39	4	const int	i_2pitch
op	12:27	0:0	4	=
water	12:29	0:0	4	i_pitch
op	12:36	0:0	4	<<
water	12:38	0:0	4	1
decl	13:8	13:71	4	const int	i_visible_pitch
op	13:34	0:0	4	=
water	13:36	0:0	4	p_inpic
op	13:43	0:0	4	->
water	13:45	0:0	4	p
op	13:46	0:0	4	[
water	13:47	0:0	4	i_plane
op	13:54	0:0	4	]
op	13:55	0:0	4	.
water	13:56	0:0	4	i_visible_pitch
decl	14:8	14:71	4	const int	i_visible_lines
op	14:34	0:0	4	=
water	14:36	0:0	4	p_inpic
op	14:43	0:0	4	->
water	14:45	0:0	4	p
op	14:46	0:0	4	[
water	14:47	0:0	4	i_plane
op	14:54	0:0	4	]
op	14:55	0:0	4	.
water	14:56	0:0	4	i_visible_lines
decl	15:8	15:49	4	uint8_t	*p_mask
op	15:24	0:0	4	=
water	15:26	0:0	4	p_sys
op	15:31	0:0	4	->
water	15:33	0:0	4	p_mask
op	15:39	0:0	4	->
water	15:41	0:0	4	A_PIXELS
decl	16:8	16:46	4	int	i_x
op	16:16	0:0	4	=
water	16:18	0:0	4	p_sys
op	16:23	0:0	4	->
water	16:25	0:0	4	i_x
water	16:28	0:0	4	,
decl	16:8	16:46	4	int	i_y
op	16:34	0:0	4	=
water	16:36	0:0	4	p_sys
op	16:41	0:0	4	->
water	16:43	0:0	4	i_y
decl	17:8	17:16	4	int	x
water	17:13	0:0	4	,
decl	17:8	17:16	4	int	y
decl	18:8	18:43	4	int	i_height
op	18:21	0:0	4	=
water	18:23	0:0	4	i_mask_visible_lines
decl	19:8	19:43	4	int	i_width
op	19:21	0:0	4	=
water	19:23	0:0	4	i_mask_visible_pitch
decl	20:8	22:61	4	const bool	b_line_factor
op	20:33	0:0	4	=
water	20:35	0:0	4	(
water	20:37	0:0	4	i_plane
op	20:70	0:0	4	&&
op	21:12	0:0	4	!
water	21:13	0:0	4	(
water	21:15	0:0	4	p_inpic
op	21:22	0:0	4	->
water	21:24	0:0	4	format
op	21:30	0:0	4	.
water	21:31	0:0	4	i_chroma
op	21:40	0:0	4	==
water	21:43	0:0	4	VLC_CODEC_I422
op	22:12	0:0	4	||
water	22:15	0:0	4	p_inpic
op	22:22	0:0	4	->
water	22:24	0:0	4	format
op	22:30	0:0	4	.
water	22:31	0:0	4	i_chroma
op	22:40	0:0	4	==
water	22:43	0:0	4	VLC_CODEC_J422
water	22:58	0:0	4	)
water	22:60	0:0	4	)
if	23:8	27:8	4	(i_plane)
cond	23:12	23:12	5	i_plane
water	23:12	0:0	6	i_plane
stmts	24:8	27:8	5	
water	24:8	0:0	6	{
water	25:12	0:0	6	i_width
op	25:21	0:0	6	>>=
water	25:25	0:0	6	1
water	25:26	0:0	6	;
water	26:12	0:0	6	i_x
op	26:21	0:0	6	>>=
water	26:25	0:0	6	1
water	26:26	0:0	6	;
water	27:8	0:0	6	}
if	28:8	32:8	4	(b_line_factor)
cond	28:12	28:12	5	b_line_factor
water	28:12	0:0	6	b_line_factor
stmts	29:8	32:8	5	
water	29:8	0:0	6	{
water	30:12	0:0	6	i_height
op	30:21	0:0	6	>>=
water	30:25	0:0	6	1
water	30:26	0:0	6	;
water	31:12	0:0	6	i_y
op	31:21	0:0	6	>>=
water	31:25	0:0	6	1
water	31:26	0:0	6	;
water	32:8	0:0	6	}
water	33:8	0:0	4	i_height
op	33:17	0:0	4	=
call	33:19	33:58	4	__MIN
arg	33:26	33:47	5	i_visible_lines-i_y
water	33:26	0:0	6	i_visible_lines
op	33:42	0:0	6	-
water	33:44	0:0	6	i_y
arg	33:49	33:58	5	i_height
water	33:49	0:0	6	i_height
water	33:59	0:0	4	;
water	34:8	0:0	4	i_width
op	34:17	0:0	4	=
call	34:19	34:58	4	__MIN
arg	34:26	34:47	5	i_visible_pitch-i_x
water	34:26	0:0	6	i_visible_pitch
op	34:42	0:0	6	-
water	34:44	0:0	6	i_x
arg	34:49	34:58	5	i_width
water	34:49	0:0	6	i_width
water	34:59	0:0	4	;
call	36:8	36:70	4	plane_CopyPixels
arg	36:26	36:47	5	&p_outpic->p[i_plane]
op	36:26	0:0	6	&
water	36:27	0:0	6	p_outpic
op	36:35	0:0	6	->
water	36:37	0:0	6	p
op	36:38	0:0	6	[
water	36:39	0:0	6	i_plane
op	36:46	0:0	6	]
arg	36:49	36:70	5	&p_inpic->p[i_plane]
op	36:49	0:0	6	&
water	36:50	0:0	6	p_inpic
op	36:57	0:0	6	->
water	36:59	0:0	6	p
op	36:60	0:0	6	[
water	36:61	0:0	6	i_plane
op	36:68	0:0	6	]
water	36:71	0:0	4	;
decl	38:8	38:77	4	uint8_t	*p_outpix
op	38:26	0:0	4	=
water	38:28	0:0	4	p_outpic
op	38:36	0:0	4	->
water	38:38	0:0	4	p
op	38:39	0:0	4	[
water	38:40	0:0	4	i_plane
op	38:47	0:0	4	]
op	38:48	0:0	4	.
water	38:49	0:0	4	p_pixels
op	38:58	0:0	4	+
water	38:60	0:0	4	i_y
op	38:63	0:0	4	*
water	38:64	0:0	4	i_pitch
op	38:72	0:0	4	+
water	38:74	0:0	4	i_x
for	39:8	131:8	4	(y = 0 ;y < i_height;y ++ , p_mask += i_mask_pitch , p_outpix += i_pitch)
forinit	39:13	39:18	5	y = 0 ;
water	39:13	0:0	6	y
op	39:15	0:0	6	=
water	39:17	0:0	6	0
water	39:18	0:0	6	;
cond	39:20	39:24	5	y < i_height
water	39:20	0:0	6	y
op	39:22	0:0	6	<
water	39:24	0:0	6	i_height
forexpr	40:13	40:54	5	y ++ , p_mask += i_mask_pitch , p_outpix += i_pitch
water	40:13	0:0	6	y
op	40:14	0:0	6	++
water	40:16	0:0	6	,
water	40:18	0:0	6	p_mask
op	40:25	0:0	6	+=
water	40:28	0:0	6	i_mask_pitch
water	40:40	0:0	6	,
water	40:42	0:0	6	p_outpix
op	40:51	0:0	6	+=
water	40:54	0:0	6	i_pitch
stmts	41:8	131:8	5	
water	41:8	0:0	6	{
decl	42:12	42:34	6	uint8_t	prev
water	42:24	0:0	6	,
decl	42:12	42:34	6	uint8_t	next
op	42:31	0:0	6	=
water	42:33	0:0	6	0
decl	43:12	43:40	6	int	prev_x
op	43:23	0:0	6	=
op	43:25	0:0	6	-
water	43:26	0:0	6	1
water	43:27	0:0	6	,
decl	43:12	43:40	6	int	next_x
op	43:36	0:0	6	=
op	43:38	0:0	6	-
water	43:39	0:0	6	2
decl	44:12	44:24	6	int	quot
op	44:21	0:0	6	=
water	44:23	0:0	6	0
if	47:12	52:12	6	(i_x)
cond	47:16	47:16	7	i_x
water	47:16	0:0	8	i_x
stmts	48:12	52:12	7	
water	48:12	0:0	8	{
water	51:16	0:0	8	prev
op	51:21	0:0	8	=
op	51:23	0:0	8	*
water	51:24	0:0	8	(
water	51:25	0:0	8	p_outpix
op	51:33	0:0	8	-
water	51:34	0:0	8	1
water	51:35	0:0	8	)
water	51:36	0:0	8	;
water	52:12	0:0	8	}
else	53:12	58:12	6
stmts	53:17	58:12	7	
if	53:17	58:12	8	(y || i_y)
cond	53:21	53:26	9	y || i_y
water	53:21	0:0	10	y
op	53:23	0:0	10	||
water	53:26	0:0	10	i_y
stmts	54:12	58:12	9	
water	54:12	0:0	10	{
water	57:16	0:0	10	prev
op	57:21	0:0	10	=
op	57:23	0:0	10	*
water	57:24	0:0	10	(
water	57:25	0:0	10	p_outpix
op	57:33	0:0	10	-
water	57:34	0:0	10	i_pitch
water	57:41	0:0	10	)
water	57:42	0:0	10	;
water	58:12	0:0	10	}
else	59:12	66:12	6
stmts	60:12	66:12	7	
water	60:12	0:0	8	{
water	65:16	0:0	8	prev
op	65:21	0:0	8	=
water	65:23	0:0	8	0
water	65:24	0:0	8	xff
water	65:27	0:0	8	;
water	66:12	0:0	8	}
for	67:12	130:12	6	(x = 0 ;x < i_width;x ++)
forinit	67:17	67:22	7	x = 0 ;
water	67:17	0:0	8	x
op	67:19	0:0	8	=
water	67:21	0:0	8	0
water	67:22	0:0	8	;
cond	67:24	67:28	7	x < i_width
water	67:24	0:0	8	x
op	67:26	0:0	8	<
water	67:28	0:0	8	i_width
forexpr	67:37	67:38	7	x ++
water	67:37	0:0	8	x
op	67:38	0:0	8	++
stmts	68:12	130:12	7	
water	68:12	0:0	8	{
if	69:16	122:16	8	(p_mask [ i_plane ? x << 1 : x ] > 127)
cond	69:20	69:45	9	p_mask [ i_plane ? x << 1 : x ] > 127
water	69:20	0:0	10	p_mask
op	69:26	0:0	10	[
water	69:27	0:0	10	i_plane
water	69:34	0:0	10	?
water	69:35	0:0	10	x
op	69:36	0:0	10	<<
water	69:38	0:0	10	1
water	69:39	0:0	10	:
water	69:40	0:0	10	x
op	69:41	0:0	10	]
op	69:43	0:0	10	>
water	69:45	0:0	10	127
stmts	70:16	122:16	9	
water	70:16	0:0	10	{
if	72:20	119:20	10	(next_x <= prev_x)
cond	72:24	72:34	11	next_x <= prev_x
water	72:24	0:0	12	next_x
op	72:31	0:0	12	<=
water	72:34	0:0	12	prev_x
stmts	73:20	119:20	11	
water	73:20	0:0	12	{
decl	74:24	74:30	12	int	x0
for	77:24	86:24	12	(x0 = x ;x0 < i_width;x0 ++)
forinit	77:29	77:35	13	x0 = x ;
water	77:29	0:0	14	x0
op	77:32	0:0	14	=
water	77:34	0:0	14	x
water	77:35	0:0	14	;
cond	77:37	77:42	13	x0 < i_width
water	77:37	0:0	14	x0
op	77:40	0:0	14	<
water	77:42	0:0	14	i_width
forexpr	77:51	77:53	13	x0 ++
water	77:51	0:0	14	x0
op	77:53	0:0	14	++
stmts	78:24	86:24	13	
water	78:24	0:0	14	{
if	79:28	85:28	14	(p_mask [ i_plane ? x0 << 1 : x0 ] <= 127)
cond	79:32	79:60	15	p_mask [ i_plane ? x0 << 1 : x0 ] <= 127
water	79:32	0:0	16	p_mask
op	79:38	0:0	16	[
water	79:39	0:0	16	i_plane
water	79:46	0:0	16	?
water	79:47	0:0	16	x0
op	79:49	0:0	16	<<
water	79:51	0:0	16	1
water	79:52	0:0	16	:
water	79:53	0:0	16	x0
op	79:55	0:0	16	]
op	79:57	0:0	16	<=
water	79:60	0:0	16	127
stmts	80:28	85:28	15	
water	80:28	0:0	16	{
water	82:32	0:0	16	next_x
op	82:39	0:0	16	=
water	82:41	0:0	16	x0
water	82:43	0:0	16	;
water	83:32	0:0	16	next
op	83:37	0:0	16	=
water	83:39	0:0	16	p_outpix
op	83:47	0:0	16	[
water	83:48	0:0	16	x0
op	83:50	0:0	16	]
water	83:51	0:0	16	;
break	84:32	84:37	16	
water	85:28	0:0	16	}
water	86:24	0:0	14	}
if	87:24	110:24	12	(next_x <= prev_x)
cond	87:28	87:38	13	next_x <= prev_x
water	87:28	0:0	14	next_x
op	87:35	0:0	14	<=
water	87:38	0:0	14	prev_x
stmts	88:24	110:24	13	
water	88:24	0:0	14	{
if	91:28	91:46	14	(x0 == x)
cond	91:32	91:38	15	x0 == x
water	91:32	0:0	16	x0
op	91:35	0:0	16	==
water	91:38	0:0	16	x
stmts	91:42	91:46	15	
water	91:42	0:0	16	x0
op	91:44	0:0	16	++
water	91:46	0:0	16	;
if	92:28	100:28	14	(x0 < i_visible_pitch)
cond	92:32	92:37	15	x0 < i_visible_pitch
water	92:32	0:0	16	x0
op	92:35	0:0	16	<
water	92:37	0:0	16	i_visible_pitch
stmts	93:28	100:28	15	
water	93:28	0:0	16	{
water	98:32	0:0	16	next_x
op	98:39	0:0	16	=
water	98:41	0:0	16	x0
water	98:43	0:0	16	;
water	99:32	0:0	16	next
op	99:37	0:0	16	=
water	99:39	0:0	16	p_outpix
op	99:47	0:0	16	[
water	99:48	0:0	16	x0
op	99:50	0:0	16	]
water	99:51	0:0	16	;
water	100:28	0:0	16	}
else	101:28	109:28	14
stmts	102:28	109:28	15	
water	102:28	0:0	16	{
water	107:32	0:0	16	next_x
op	107:39	0:0	16	=
water	107:41	0:0	16	x0
water	107:43	0:0	16	;
water	108:32	0:0	16	next
op	108:37	0:0	16	=
water	108:39	0:0	16	prev
water	108:43	0:0	16	;
water	109:28	0:0	16	}
water	110:24	0:0	14	}
if	111:24	116:39	12	(! ( i_x || y || i_y ))
cond	111:28	111:47	13	! ( i_x || y || i_y )
op	111:28	0:0	14	!
water	111:29	0:0	14	(
water	111:31	0:0	14	i_x
op	111:35	0:0	14	||
water	111:38	0:0	14	y
op	111:40	0:0	14	||
water	111:43	0:0	14	i_y
water	111:47	0:0	14	)
stmts	116:28	116:39	13	
water	116:28	0:0	14	prev
op	116:33	0:0	14	=
water	116:35	0:0	14	next
water	116:39	0:0	14	;
water	118:24	0:0	12	quot
op	118:29	0:0	12	=
water	118:31	0:0	12	(
water	118:32	0:0	12	(
water	118:33	0:0	12	next
op	118:37	0:0	12	-
water	118:38	0:0	12	prev
water	118:42	0:0	12	)
op	118:43	0:0	12	<<
water	118:45	0:0	12	16
water	118:47	0:0	12	)
op	118:48	0:0	12	/
water	118:49	0:0	12	(
water	118:50	0:0	12	next_x
op	118:56	0:0	12	-
water	118:57	0:0	12	prev_x
water	118:63	0:0	12	)
water	118:64	0:0	12	;
water	119:20	0:0	12	}
water	121:20	0:0	10	p_outpix
op	121:28	0:0	10	[
water	121:29	0:0	10	x
op	121:30	0:0	10	]
op	121:32	0:0	10	=
water	121:34	0:0	10	prev
op	121:39	0:0	10	+
water	121:41	0:0	10	(
water	121:42	0:0	10	(
water	121:43	0:0	10	(
water	121:44	0:0	10	x
op	121:45	0:0	10	-
water	121:46	0:0	10	prev_x
water	121:52	0:0	10	)
op	121:53	0:0	10	*
water	121:54	0:0	10	quot
op	121:58	0:0	10	+
water	121:59	0:0	10	(
water	121:60	0:0	10	1
op	121:61	0:0	10	<<
water	121:63	0:0	10	16
water	121:65	0:0	10	)
water	121:66	0:0	10	)
op	121:67	0:0	10	>>
water	121:69	0:0	10	16
water	121:71	0:0	10	)
water	121:72	0:0	10	;
water	122:16	0:0	10	}
else	123:16	129:16	8
stmts	124:16	129:16	9	
water	124:16	0:0	10	{
water	127:20	0:0	10	prev
op	127:25	0:0	10	=
water	127:27	0:0	10	p_outpix
op	127:35	0:0	10	[
water	127:36	0:0	10	x
op	127:37	0:0	10	]
water	127:38	0:0	10	;
water	128:20	0:0	10	prev_x
op	128:27	0:0	10	=
water	128:29	0:0	10	x
water	128:30	0:0	10	;
water	129:16	0:0	10	}
water	130:12	0:0	8	}
water	131:8	0:0	6	}
water	133:8	0:0	4	p_mask
op	133:15	0:0	4	=
water	133:17	0:0	4	p_sys
op	133:22	0:0	4	->
water	133:24	0:0	4	p_mask
op	133:30	0:0	4	->
water	133:32	0:0	4	A_PIXELS
water	133:40	0:0	4	;
water	134:8	0:0	4	i_height
op	134:17	0:0	4	=
water	134:19	0:0	4	b_line_factor
water	134:33	0:0	4	?
water	134:35	0:0	4	i_mask_visible_lines
op	134:55	0:0	4	>>
water	134:57	0:0	4	1
water	135:33	0:0	4	:
water	135:35	0:0	4	i_mask_visible_lines
water	135:55	0:0	4	;
water	138:8	0:0	4	i_height
op	138:17	0:0	4	=
call	138:19	138:62	4	__MIN
arg	138:26	138:51	5	i_visible_lines-i_y-2
water	138:26	0:0	6	i_visible_lines
op	138:42	0:0	6	-
water	138:44	0:0	6	i_y
op	138:48	0:0	6	-
water	138:50	0:0	6	2
arg	138:53	138:62	5	i_height
water	138:53	0:0	6	i_height
water	138:63	0:0	4	;
water	141:8	0:0	4	y
op	141:10	0:0	4	=
call	141:12	141:23	4	__MAX
arg	141:18	141:21	5	i_y
water	141:18	0:0	6	i_y
arg	141:22	141:23	5	2
water	141:22	0:0	6	2
water	141:24	0:0	4	;
water	142:8	0:0	4	p_outpix
op	142:17	0:0	4	=
water	142:19	0:0	4	p_outpic
op	142:27	0:0	4	->
water	142:29	0:0	4	p
op	142:30	0:0	4	[
water	142:31	0:0	4	i_plane
op	142:38	0:0	4	]
op	142:39	0:0	4	.
water	142:40	0:0	4	p_pixels
op	142:49	0:0	4	+
water	142:51	0:0	4	(
water	142:52	0:0	4	i_y
op	142:55	0:0	4	+
water	142:56	0:0	4	y
water	142:57	0:0	4	)
op	142:58	0:0	4	*
water	142:59	0:0	4	i_pitch
op	142:67	0:0	4	+
water	142:69	0:0	4	i_x
water	142:72	0:0	4	;
for	143:8	158:8	4	(;y < i_height;y ++ , p_mask += i_mask_pitch , p_outpix += i_pitch)
forinit	143:13	143:13	5	;
water	143:13	0:0	6	;
cond	143:15	143:19	5	y < i_height
water	143:15	0:0	6	y
op	143:17	0:0	6	<
water	143:19	0:0	6	i_height
forexpr	143:29	143:70	5	y ++ , p_mask += i_mask_pitch , p_outpix += i_pitch
water	143:29	0:0	6	y
op	143:30	0:0	6	++
water	143:32	0:0	6	,
water	143:34	0:0	6	p_mask
op	143:41	0:0	6	+=
water	143:44	0:0	6	i_mask_pitch
water	143:56	0:0	6	,
water	143:58	0:0	6	p_outpix
op	143:67	0:0	6	+=
water	143:70	0:0	6	i_pitch
stmts	144:8	158:8	5	
water	144:8	0:0	6	{
for	145:12	157:12	6	(x = 0 ;x < i_width;x ++)
forinit	145:17	145:22	7	x = 0 ;
water	145:17	0:0	8	x
op	145:19	0:0	8	=
water	145:21	0:0	8	0
water	145:22	0:0	8	;
cond	145:24	145:28	7	x < i_width
water	145:24	0:0	8	x
op	145:26	0:0	8	<
water	145:28	0:0	8	i_width
forexpr	145:37	145:38	7	x ++
water	145:37	0:0	8	x
op	145:38	0:0	8	++
stmts	146:12	157:12	7	
water	146:12	0:0	8	{
if	147:16	156:16	8	(p_mask [ i_plane ? x << 1 : x ] > 127)
cond	147:20	147:45	9	p_mask [ i_plane ? x << 1 : x ] > 127
water	147:20	0:0	10	p_mask
op	147:26	0:0	10	[
water	147:27	0:0	10	i_plane
water	147:34	0:0	10	?
water	147:35	0:0	10	x
op	147:36	0:0	10	<<
water	147:38	0:0	10	1
water	147:39	0:0	10	:
water	147:40	0:0	10	x
op	147:41	0:0	10	]
op	147:43	0:0	10	>
water	147:45	0:0	10	127
stmts	148:16	156:16	9	
water	148:16	0:0	10	{
water	150:20	0:0	10	p_outpix
op	150:28	0:0	10	[
water	150:29	0:0	10	x
op	150:30	0:0	10	]
op	150:32	0:0	10	=
water	151:24	0:0	10	(
water	151:26	0:0	10	(
water	151:27	0:0	10	p_outpix
op	151:35	0:0	10	[
water	151:36	0:0	10	x
op	151:37	0:0	10	-
water	151:38	0:0	10	i_2pitch
op	151:46	0:0	10	]
op	151:47	0:0	10	<<
water	151:49	0:0	10	1
water	151:50	0:0	10	)
op	152:24	0:0	10	+
water	152:26	0:0	10	(
water	152:27	0:0	10	p_outpix
op	152:35	0:0	10	[
water	152:36	0:0	10	x
op	152:37	0:0	10	-
water	152:38	0:0	10	i_pitch
op	152:46	0:0	10	]
op	152:47	0:0	10	<<
water	152:49	0:0	10	2
water	152:50	0:0	10	)
op	153:24	0:0	10	+
water	153:26	0:0	10	(
water	153:27	0:0	10	p_outpix
op	153:35	0:0	10	[
water	153:36	0:0	10	x
op	153:46	0:0	10	]
op	153:47	0:0	10	<<
water	153:49	0:0	10	2
water	153:50	0:0	10	)
op	154:24	0:0	10	+
water	154:26	0:0	10	(
water	154:27	0:0	10	p_outpix
op	154:35	0:0	10	[
water	154:36	0:0	10	x
op	154:37	0:0	10	+
water	154:38	0:0	10	i_pitch
op	154:46	0:0	10	]
op	154:47	0:0	10	<<
water	154:49	0:0	10	2
water	154:50	0:0	10	)
op	155:24	0:0	10	+
water	155:26	0:0	10	(
water	155:27	0:0	10	p_outpix
op	155:35	0:0	10	[
water	155:36	0:0	10	x
op	155:37	0:0	10	+
water	155:38	0:0	10	i_2pitch
op	155:46	0:0	10	]
op	155:47	0:0	10	<<
water	155:49	0:0	10	1
water	155:50	0:0	10	)
water	155:52	0:0	10	)
op	155:53	0:0	10	>>
water	155:55	0:0	10	4
water	155:56	0:0	10	;
water	156:16	0:0	10	}
water	157:12	0:0	8	}
water	158:8	0:0	6	}
water	159:4	0:0	4	}

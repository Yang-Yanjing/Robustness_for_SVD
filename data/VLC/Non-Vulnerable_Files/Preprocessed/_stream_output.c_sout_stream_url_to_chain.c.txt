func	2:0	54:0	0	static char *	sout_stream_url_to_chain
params	2:37	0:0	1	
param	2:39	2:58	2	bool	b_sout_display
param	3:39	3:59	2	const char *	psz_url
stmnts	0:0	53:20	1	
decl	5:4	5:19	2	mrl_t	mrl
decl	6:4	6:26	2	char	*psz_chain
call	7:4	7:29	2	mrl_Parse
arg	7:15	7:19	3	&mrl
op	7:15	0:0	4	&
water	7:16	0:0	4	mrl
arg	7:21	7:29	3	psz_url
water	7:21	0:0	4	psz_url
water	7:30	0:0	2	;
water	9:4	0:0	2	static
water	9:11	0:0	2	const
water	9:17	0:0	2	char
water	9:22	0:0	2	rtplist
op	9:29	0:0	2	[
op	9:30	0:0	2	]
op	9:32	0:0	2	=
water	9:34	0:0	2	"dccp\0sctp\0tcp\0udplite\0"
water	9:62	0:0	2	;
for	10:4	12:20	2	( const char * a = rtplist ;* a;a +=strlen (a ) + 1)
forinit	0:0	10:32	3	 const char * a = rtplist ;
decl	10:9	10:32	4	const char	*a
op	10:23	0:0	4	=
water	10:25	0:0	4	rtplist
cond	10:34	10:35	3	* a
op	10:34	0:0	4	*
water	10:35	0:0	4	a
forexpr	10:38	10:56	3	a +=strlen (a ) + 1
water	10:38	0:0	4	a
op	10:40	0:0	4	+=
call	10:43	10:52	4	strlen
arg	10:51	10:52	5	a
water	10:51	0:0	6	a
op	10:54	0:0	4	+
water	10:56	0:0	4	1
stmts	11:8	12:20	3	
if	11:8	12:20	4	(strcmp (a ,mrl . psz_access ) == 0)
cond	11:12	11:42	5	strcmp (a ,mrl . psz_access ) == 0
call	11:12	11:37	6	strcmp
arg	11:20	11:21	7	a
water	11:20	0:0	8	a
arg	11:23	11:37	7	mrl.psz_access
water	11:23	0:0	8	mrl
op	11:26	0:0	8	.
water	11:27	0:0	8	psz_access
op	11:39	0:0	6	==
water	11:42	0:0	6	0
stmts	12:12	12:20	5	
goto	12:12	12:20	6	rtp
water	12:17	0:0	7	rtp
if	13:4	34:4	2	(strcmp (mrl . psz_access ,"rtp" ) == 0)
cond	13:8	13:42	3	strcmp (mrl . psz_access ,"rtp" ) == 0
call	13:8	13:37	4	strcmp
arg	13:16	13:30	5	mrl.psz_access
water	13:16	0:0	6	mrl
op	13:19	0:0	6	.
water	13:20	0:0	6	psz_access
arg	13:32	13:37	5	"rtp"
water	13:32	0:0	6	"rtp"
op	13:39	0:0	4	==
water	13:42	0:0	4	0
stmts	14:4	34:4	3	
water	14:4	0:0	4	{
decl	15:8	15:18	4	char	*port
call	17:8	17:37	4	strcpy
arg	17:16	17:30	5	mrl.psz_access
water	17:16	0:0	6	mrl
op	17:19	0:0	6	.
water	17:20	0:0	6	psz_access
arg	17:32	17:37	5	"udp"
water	17:32	0:0	6	"udp"
water	17:38	0:0	4	;
label	18:0	18:3	4	rtp :
if	19:8	24:8	4	(mrl . psz_name [ 0 ] == '[')
cond	19:12	19:31	5	mrl . psz_name [ 0 ] == '['
water	19:12	0:0	6	mrl
op	19:15	0:0	6	.
water	19:16	0:0	6	psz_name
op	19:24	0:0	6	[
water	19:25	0:0	6	0
op	19:26	0:0	6	]
op	19:28	0:0	6	==
water	19:31	0:0	6	'['
stmts	20:8	24:8	5	
water	20:8	0:0	6	{
water	21:12	0:0	6	port
op	21:17	0:0	6	=
call	21:19	21:45	6	strstr
arg	21:27	21:39	7	mrl.psz_name
water	21:27	0:0	8	mrl
op	21:30	0:0	8	.
water	21:31	0:0	8	psz_name
arg	21:41	21:45	7	"]:"
water	21:41	0:0	8	"]:"
water	21:46	0:0	6	;
if	22:12	23:22	6	(port != NULL)
cond	22:16	22:24	7	port != NULL
water	22:16	0:0	8	port
op	22:21	0:0	8	!=
water	22:24	0:0	8	NULL
stmts	23:16	23:22	7	
water	23:16	0:0	8	port
op	23:20	0:0	8	++
water	23:22	0:0	8	;
water	24:8	0:0	6	}
else	25:8	26:45	4
stmts	26:12	26:45	5	
water	26:12	0:0	6	port
op	26:17	0:0	6	=
call	26:19	26:44	6	strchr
arg	26:27	26:39	7	mrl.psz_name
water	26:27	0:0	8	mrl
op	26:30	0:0	8	.
water	26:31	0:0	8	psz_name
arg	26:41	26:44	7	':'
water	26:41	0:0	8	':'
water	26:45	0:0	6	;
if	27:8	28:26	4	(port != NULL)
cond	27:12	27:20	5	port != NULL
water	27:12	0:0	6	port
op	27:17	0:0	6	!=
water	27:20	0:0	6	NULL
stmts	28:12	28:26	5	
op	28:12	0:0	6	*
water	28:13	0:0	6	port
op	28:17	0:0	6	++
op	28:20	0:0	6	=
water	28:22	0:0	6	'\0'
water	28:26	0:0	6	;
if	29:8	33:28	4	(asprintf (& psz_chain ,"rtp{mux=\"%s\",proto=\"%s\",dst=\"%s%s%s\"}" ,mrl . psz_way ,mrl . psz_access ,mrl . psz_name ,port ? "\",port=\"" : "" ,port ? port : "" ) == - 1)
cond	29:12	32:70	5	asprintf (& psz_chain ,"rtp{mux=\"%s\",proto=\"%s\",dst=\"%s%s%s\"}" ,mrl . psz_way ,mrl . psz_access ,mrl . psz_name ,port ? "\",port=\"" : "" ,port ? port : "" ) == - 1
call	29:12	32:64	6	asprintf
arg	29:22	29:32	7	&psz_chain
op	29:22	0:0	8	&
water	29:23	0:0	8	psz_chain
arg	30:22	30:67	7	"rtp{mux=\"%s\",proto=\"%s\",dst=\"%s%s%s\"}"
water	30:22	0:0	8	"rtp{mux=\"%s\",proto=\"%s\",dst=\"%s%s%s\"}"
arg	31:22	31:33	7	mrl.psz_way
water	31:22	0:0	8	mrl
op	31:25	0:0	8	.
water	31:26	0:0	8	psz_way
arg	31:35	31:49	7	mrl.psz_access
water	31:35	0:0	8	mrl
op	31:38	0:0	8	.
water	31:39	0:0	8	psz_access
arg	31:51	31:63	7	mrl.psz_name
water	31:51	0:0	8	mrl
op	31:54	0:0	8	.
water	31:55	0:0	8	psz_name
arg	32:22	32:46	7	port?"\",port=\"":""
water	32:22	0:0	8	port
water	32:27	0:0	8	?
water	32:29	0:0	8	"\",port=\""
water	32:42	0:0	8	:
water	32:44	0:0	8	""
arg	32:48	32:64	7	port?port:""
water	32:48	0:0	8	port
water	32:53	0:0	8	?
water	32:55	0:0	8	port
water	32:60	0:0	8	:
water	32:62	0:0	8	""
op	32:66	0:0	6	==
op	32:69	0:0	6	-
water	32:70	0:0	6	1
stmts	33:12	33:28	5	
water	33:12	0:0	6	psz_chain
op	33:22	0:0	6	=
water	33:24	0:0	6	NULL
water	33:28	0:0	6	;
water	34:4	0:0	4	}
else	35:4	42:4	2
stmts	36:4	42:4	3	
water	36:4	0:0	4	{
if	38:8	41:28	4	(asprintf (& psz_chain ,"standard{mux=\"%s\",access=\"%s\",dst=\"%s\"}" ,mrl . psz_way ,mrl . psz_access ,mrl . psz_name ) == - 1)
cond	38:12	40:69	5	asprintf (& psz_chain ,"standard{mux=\"%s\",access=\"%s\",dst=\"%s\"}" ,mrl . psz_way ,mrl . psz_access ,mrl . psz_name ) == - 1
call	38:12	40:63	6	asprintf
arg	38:22	38:32	7	&psz_chain
op	38:22	0:0	8	&
water	38:23	0:0	8	psz_chain
arg	39:22	39:69	7	"standard{mux=\"%s\",access=\"%s\",dst=\"%s\"}"
water	39:22	0:0	8	"standard{mux=\"%s\",access=\"%s\",dst=\"%s\"}"
arg	40:22	40:33	7	mrl.psz_way
water	40:22	0:0	8	mrl
op	40:25	0:0	8	.
water	40:26	0:0	8	psz_way
arg	40:35	40:49	7	mrl.psz_access
water	40:35	0:0	8	mrl
op	40:38	0:0	8	.
water	40:39	0:0	8	psz_access
arg	40:51	40:63	7	mrl.psz_name
water	40:51	0:0	8	mrl
op	40:54	0:0	8	.
water	40:55	0:0	8	psz_name
op	40:65	0:0	6	==
op	40:68	0:0	6	-
water	40:69	0:0	6	1
stmts	41:12	41:28	5	
water	41:12	0:0	6	psz_chain
op	41:22	0:0	6	=
water	41:24	0:0	6	NULL
water	41:28	0:0	6	;
water	42:4	0:0	4	}
if	44:4	51:4	2	(psz_chain && b_sout_display)
cond	44:8	44:21	3	psz_chain && b_sout_display
water	44:8	0:0	4	psz_chain
op	44:18	0:0	4	&&
water	44:21	0:0	4	b_sout_display
stmts	45:4	51:4	3	
water	45:4	0:0	4	{
decl	46:8	46:17	4	char	*tmp
if	47:8	48:22	4	(asprintf (& tmp ,"duplicate{dst=display,dst=%s}" ,psz_chain ) == - 1)
cond	47:12	47:76	5	asprintf (& tmp ,"duplicate{dst=display,dst=%s}" ,psz_chain ) == - 1
call	47:12	47:70	6	asprintf
arg	47:22	47:26	7	&tmp
op	47:22	0:0	8	&
water	47:23	0:0	8	tmp
arg	47:28	47:59	7	"duplicate{dst=display,dst=%s}"
water	47:28	0:0	8	"duplicate{dst=display,dst=%s}"
arg	47:61	47:70	7	psz_chain
water	47:61	0:0	8	psz_chain
op	47:72	0:0	6	==
op	47:75	0:0	6	-
water	47:76	0:0	6	1
stmts	48:12	48:22	5	
water	48:12	0:0	6	tmp
op	48:16	0:0	6	=
water	48:18	0:0	6	NULL
water	48:22	0:0	6	;
call	49:8	49:23	4	free
arg	49:14	49:23	5	psz_chain
water	49:14	0:0	6	psz_chain
water	49:24	0:0	4	;
water	50:8	0:0	4	psz_chain
op	50:18	0:0	4	=
water	50:20	0:0	4	tmp
water	50:23	0:0	4	;
water	51:4	0:0	4	}
call	52:4	52:20	2	mrl_Clean
arg	52:15	52:20	3	&mrl
op	52:15	0:0	4	&
water	52:16	0:0	4	mrl
water	52:21	0:0	2	;
return	53:4	53:20	2	psz_chain
water	53:11	0:0	3	psz_chain

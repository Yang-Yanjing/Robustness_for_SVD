func	2:0	36:0	0	static void	encode_pixel_data
params	2:29	0:0	1	
param	2:31	2:47	2	encoder_t *	p_enc
param	2:49	2:56	2	bs_t *	s
param	3:31	3:60	2	subpicture_region_t *	p_region
param	4:31	4:42	2	bool	b_top
stmnts	0:0	35:4	1	
decl	6:4	6:23	2	unsigned int	i_line
if	8:4	8:57	2	(p_region -> fmt . i_chroma != VLC_CODEC_YUVP)
cond	8:8	8:34	3	p_region -> fmt . i_chroma != VLC_CODEC_YUVP
water	8:8	0:0	4	p_region
op	8:16	0:0	4	->
water	8:18	0:0	4	fmt
op	8:21	0:0	4	.
water	8:22	0:0	4	i_chroma
op	8:31	0:0	4	!=
water	8:34	0:0	4	VLC_CODEC_YUVP
stmts	8:51	8:57	3	
return	8:51	8:57	4	
for	10:4	35:4	2	(i_line = ! b_top ;i_line < p_region -> fmt . i_visible_height;i_line += 2)
forinit	10:9	10:24	3	i_line = ! b_top ;
water	10:9	0:0	4	i_line
op	10:16	0:0	4	=
op	10:18	0:0	4	!
water	10:19	0:0	4	b_top
water	10:24	0:0	4	;
cond	10:26	10:49	3	i_line < p_region -> fmt . i_visible_height
water	10:26	0:0	4	i_line
op	10:33	0:0	4	<
water	10:35	0:0	4	p_region
op	10:43	0:0	4	->
water	10:45	0:0	4	fmt
op	10:48	0:0	4	.
water	10:49	0:0	4	i_visible_height
forexpr	11:9	11:19	3	i_line += 2
water	11:9	0:0	4	i_line
op	11:16	0:0	4	+=
water	11:19	0:0	4	2
stmts	12:4	35:4	3	
water	12:4	0:0	4	{
switch	13:8	33:8	4	(p_region -> fmt . p_palette -> i_entries)
cond	13:16	13:41	5	p_region -> fmt . p_palette -> i_entries
water	13:16	0:0	6	p_region
op	13:24	0:0	6	->
water	13:26	0:0	6	fmt
op	13:29	0:0	6	.
water	13:30	0:0	6	p_palette
op	13:39	0:0	6	->
water	13:41	0:0	6	i_entries
stmts	14:8	33:8	5	
water	14:8	0:0	6	{
label	15:8	15:14	6	case 0 :
break	16:12	16:17	6	
label	17:8	17:14	6	case 4 :
call	18:12	18:33	6	bs_write
arg	18:22	18:23	7	s
water	18:22	0:0	8	s
arg	18:25	18:26	7	8
water	18:25	0:0	8	8
arg	18:28	18:33	7	0x10
water	18:28	0:0	8	0
water	18:29	0:0	8	x10
water	18:34	0:0	6	;
call	19:12	19:55	6	encode_pixel_line_2bp
arg	19:35	19:36	7	s
water	19:35	0:0	8	s
arg	19:38	19:46	7	p_region
water	19:38	0:0	8	p_region
arg	19:48	19:55	7	i_line
water	19:48	0:0	8	i_line
water	19:56	0:0	6	;
break	20:12	20:17	6	
label	21:8	21:15	6	case 16 :
call	22:12	22:33	6	bs_write
arg	22:22	22:23	7	s
water	22:22	0:0	8	s
arg	22:25	22:26	7	8
water	22:25	0:0	8	8
arg	22:28	22:33	7	0x11
water	22:28	0:0	8	0
water	22:29	0:0	8	x11
water	22:34	0:0	6	;
call	23:12	23:55	6	encode_pixel_line_4bp
arg	23:35	23:36	7	s
water	23:35	0:0	8	s
arg	23:38	23:46	7	p_region
water	23:38	0:0	8	p_region
arg	23:48	23:55	7	i_line
water	23:48	0:0	8	i_line
water	23:56	0:0	6	;
break	24:12	24:17	6	
label	25:8	25:16	6	case 256 :
call	26:12	26:33	6	bs_write
arg	26:22	26:23	7	s
water	26:22	0:0	8	s
arg	26:25	26:26	7	8
water	26:25	0:0	8	8
arg	26:28	26:33	7	0x12
water	26:28	0:0	8	0
water	26:29	0:0	8	x12
water	26:34	0:0	6	;
call	27:12	27:55	6	encode_pixel_line_8bp
arg	27:35	27:36	7	s
water	27:35	0:0	8	s
arg	27:38	27:46	7	p_region
water	27:38	0:0	8	p_region
arg	27:48	27:55	7	i_line
water	27:48	0:0	8	i_line
water	27:56	0:0	6	;
break	28:12	28:17	6	
label	29:8	29:15	6	default :
call	30:12	31:56	6	msg_Err
arg	30:21	30:26	7	p_enc
water	30:21	0:0	8	p_enc
arg	30:28	30:65	7	"subpicture palette (%i) not handled"
water	30:28	0:0	8	"subpicture palette (%i) not handled"
arg	31:21	31:56	7	p_region->fmt.p_palette->i_entries
water	31:21	0:0	8	p_region
op	31:29	0:0	8	->
water	31:31	0:0	8	fmt
op	31:34	0:0	8	.
water	31:35	0:0	8	p_palette
op	31:44	0:0	8	->
water	31:46	0:0	8	i_entries
water	31:57	0:0	6	;
break	32:12	32:17	6	
water	33:8	0:0	6	}
call	34:8	34:29	4	bs_write
arg	34:18	34:19	5	s
water	34:18	0:0	6	s
arg	34:21	34:22	5	8
water	34:21	0:0	6	8
arg	34:24	34:29	5	0xf0
water	34:24	0:0	6	0
water	34:25	0:0	6	xf0
water	34:30	0:0	4	;
water	35:4	0:0	4	}

func	2:0	306:0	0	static bool	MuxStreams
params	2:22	0:0	1	
param	2:23	2:41	2	sout_mux_t *	p_mux
stmnts	0:0	305:16	1	
decl	4:4	4:41	2	sout_mux_sys_t	*p_sys
op	4:27	0:0	2	=
water	4:29	0:0	2	p_mux
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
decl	5:4	5:71	2	ts_stream_t	*p_pcr_stream
op	5:30	0:0	2	=
water	5:32	0:0	2	(
water	5:33	0:0	2	ts_stream_t
op	5:44	0:0	2	*
water	5:45	0:0	2	)
water	5:46	0:0	2	p_sys
op	5:51	0:0	2	->
water	5:53	0:0	2	p_pcr_input
op	5:64	0:0	2	->
water	5:66	0:0	2	p_sys
decl	6:4	6:32	2	sout_buffer_chain_t	chain_ts
decl	7:4	9:32	2	mtime_t	i_shaping_delay
op	7:28	0:0	2	=
water	7:30	0:0	2	p_pcr_stream
op	7:42	0:0	2	->
water	7:44	0:0	2	b_key_frame
water	8:8	0:0	2	?
water	8:10	0:0	2	p_pcr_stream
op	8:22	0:0	2	->
water	8:24	0:0	2	i_pes_length
water	9:8	0:0	2	:
water	9:10	0:0	2	p_sys
op	9:15	0:0	2	->
water	9:17	0:0	2	i_shaping_delay
decl	10:4	10:20	2	bool	b_ok
op	10:14	0:0	2	=
water	10:16	0:0	2	true
for	13:4	197:4	2	( int i = - 1 ;! b_ok || i < p_mux -> i_nb_inputs;i ++)
forinit	0:0	13:19	3	 int i = - 1 ;
decl	13:9	13:19	4	int	i
op	13:15	0:0	4	=
op	13:17	0:0	4	-
water	13:18	0:0	4	1
cond	13:21	13:41	3	! b_ok || i < p_mux -> i_nb_inputs
op	13:21	0:0	4	!
water	13:22	0:0	4	b_ok
op	13:27	0:0	4	||
water	13:30	0:0	4	i
op	13:32	0:0	4	<
water	13:34	0:0	4	p_mux
op	13:39	0:0	4	->
water	13:41	0:0	4	i_nb_inputs
forexpr	13:54	13:55	3	i ++
water	13:54	0:0	4	i
op	13:55	0:0	4	++
stmts	14:4	197:4	3	
water	14:4	0:0	4	{
if	15:8	20:8	4	(i == p_mux -> i_nb_inputs)
cond	15:12	15:24	5	i == p_mux -> i_nb_inputs
water	15:12	0:0	6	i
op	15:14	0:0	6	==
water	15:17	0:0	6	p_mux
op	15:22	0:0	6	->
water	15:24	0:0	6	i_nb_inputs
stmts	16:8	20:8	5	
water	16:8	0:0	6	{
water	18:12	0:0	6	b_ok
op	18:17	0:0	6	=
water	18:19	0:0	6	true
water	18:23	0:0	6	;
water	19:12	0:0	6	i
op	19:14	0:0	6	=
op	19:16	0:0	6	-
water	19:17	0:0	6	1
water	19:18	0:0	6	;
water	20:8	0:0	6	}
decl	21:8	21:29	4	sout_input_t	*p_input
if	22:8	23:40	4	(i == - 1)
cond	22:12	22:18	5	i == - 1
water	22:12	0:0	6	i
op	22:14	0:0	6	==
op	22:17	0:0	6	-
water	22:18	0:0	6	1
stmts	23:12	23:40	5	
water	23:12	0:0	6	p_input
op	23:20	0:0	6	=
water	23:22	0:0	6	p_sys
op	23:27	0:0	6	->
water	23:29	0:0	6	p_pcr_input
water	23:40	0:0	6	;
else	24:8	25:20	4
stmts	24:13	25:20	5	
if	24:13	25:20	6	(p_mux -> pp_inputs [ i ] -> p_sys == p_pcr_stream)
cond	24:17	24:47	7	p_mux -> pp_inputs [ i ] -> p_sys == p_pcr_stream
water	24:17	0:0	8	p_mux
op	24:22	0:0	8	->
water	24:24	0:0	8	pp_inputs
op	24:33	0:0	8	[
water	24:34	0:0	8	i
op	24:35	0:0	8	]
op	24:36	0:0	8	->
water	24:38	0:0	8	p_sys
op	24:44	0:0	8	==
water	24:47	0:0	8	p_pcr_stream
stmts	25:12	25:20	7	
continue	25:12	25:20	8	
else	26:8	27:41	4
stmts	27:12	27:41	5	
water	27:12	0:0	6	p_input
op	27:20	0:0	6	=
water	27:22	0:0	6	p_mux
op	27:27	0:0	6	->
water	27:29	0:0	6	pp_inputs
op	27:38	0:0	6	[
water	27:39	0:0	6	i
op	27:40	0:0	6	]
water	27:41	0:0	6	;
decl	28:8	28:60	4	ts_stream_t	*p_stream
op	28:30	0:0	4	=
water	28:32	0:0	4	(
water	28:33	0:0	4	ts_stream_t
op	28:44	0:0	4	*
water	28:45	0:0	4	)
water	28:46	0:0	4	p_input
op	28:53	0:0	4	->
water	28:55	0:0	4	p_sys
if	29:8	33:20	4	(( p_stream != p_pcr_stream || p_stream -> i_pes_length >= i_shaping_delay ) && p_stream -> i_pes_dts + p_stream -> i_pes_length >= p_pcr_stream -> i_pes_dts + p_pcr_stream -> i_pes_length)
cond	29:12	32:52	5	( p_stream != p_pcr_stream || p_stream -> i_pes_length >= i_shaping_delay ) && p_stream -> i_pes_dts + p_stream -> i_pes_length >= p_pcr_stream -> i_pes_dts + p_pcr_stream -> i_pes_length
water	29:12	0:0	6	(
water	29:14	0:0	6	p_stream
op	29:23	0:0	6	!=
water	29:26	0:0	6	p_pcr_stream
op	29:39	0:0	6	||
water	30:14	0:0	6	p_stream
op	30:22	0:0	6	->
water	30:24	0:0	6	i_pes_length
op	30:37	0:0	6	>=
water	30:40	0:0	6	i_shaping_delay
water	30:56	0:0	6	)
op	30:58	0:0	6	&&
water	31:12	0:0	6	p_stream
op	31:20	0:0	6	->
water	31:22	0:0	6	i_pes_dts
op	31:32	0:0	6	+
water	31:34	0:0	6	p_stream
op	31:42	0:0	6	->
water	31:44	0:0	6	i_pes_length
op	31:57	0:0	6	>=
water	32:12	0:0	6	p_pcr_stream
op	32:24	0:0	6	->
water	32:26	0:0	6	i_pes_dts
op	32:36	0:0	6	+
water	32:38	0:0	6	p_pcr_stream
op	32:50	0:0	6	->
water	32:52	0:0	6	i_pes_length
stmts	33:12	33:20	5	
continue	33:12	33:20	6	
if	35:8	66:8	4	(block_FifoCount (p_input -> p_fifo ) <= 1)
cond	35:12	35:50	5	block_FifoCount (p_input -> p_fifo ) <= 1
call	35:12	35:45	6	block_FifoCount
arg	35:29	35:45	7	p_input->p_fifo
water	35:29	0:0	8	p_input
op	35:36	0:0	8	->
water	35:38	0:0	8	p_fifo
op	35:47	0:0	6	<=
water	35:50	0:0	6	1
stmts	36:8	66:8	5	
water	36:8	0:0	6	{
if	37:12	42:12	6	(( p_input -> p_fmt -> i_cat == AUDIO_ES ) || ( p_input -> p_fmt -> i_cat == VIDEO_ES ))
cond	37:16	38:52	7	( p_input -> p_fmt -> i_cat == AUDIO_ES ) || ( p_input -> p_fmt -> i_cat == VIDEO_ES )
water	37:16	0:0	8	(
water	37:18	0:0	8	p_input
op	37:25	0:0	8	->
water	37:27	0:0	8	p_fmt
op	37:32	0:0	8	->
water	37:34	0:0	8	i_cat
op	37:40	0:0	8	==
water	37:43	0:0	8	AUDIO_ES
water	37:52	0:0	8	)
op	37:54	0:0	8	||
water	38:16	0:0	8	(
water	38:18	0:0	8	p_input
op	38:25	0:0	8	->
water	38:27	0:0	8	p_fmt
op	38:32	0:0	8	->
water	38:34	0:0	8	i_cat
op	38:40	0:0	8	==
water	38:43	0:0	8	VIDEO_ES
water	38:52	0:0	8	)
stmts	39:12	42:12	7	
water	39:12	0:0	8	{
return	41:16	41:27	8	true
water	41:23	0:0	9	true
water	42:12	0:0	8	}
else	43:12	47:12	6
stmts	43:17	47:12	7	
if	43:17	47:12	8	(block_FifoCount (p_input -> p_fifo ) <= 0)
cond	43:21	43:59	9	block_FifoCount (p_input -> p_fifo ) <= 0
call	43:21	43:54	10	block_FifoCount
arg	43:38	43:54	11	p_input->p_fifo
water	43:38	0:0	12	p_input
op	43:45	0:0	12	->
water	43:47	0:0	12	p_fifo
op	43:56	0:0	10	<=
water	43:59	0:0	10	0
stmts	44:12	47:12	9	
water	44:12	0:0	10	{
continue	46:16	46:24	10	
water	47:12	0:0	10	}
else	48:12	65:12	6
stmts	48:17	65:12	7	
if	48:17	65:12	8	(p_input -> p_fmt -> i_cat == SPU_ES)
cond	48:21	48:46	9	p_input -> p_fmt -> i_cat == SPU_ES
water	48:21	0:0	10	p_input
op	48:28	0:0	10	->
water	48:30	0:0	10	p_fmt
op	48:35	0:0	10	->
water	48:37	0:0	10	i_cat
op	48:43	0:0	10	==
water	48:46	0:0	10	SPU_ES
stmts	49:12	65:12	9	
water	49:12	0:0	10	{
decl	51:16	51:66	10	block_t	*p_spu
op	51:31	0:0	10	=
call	51:33	51:65	11	block_FifoShow
arg	51:49	51:65	12	p_input->p_fifo
water	51:49	0:0	13	p_input
op	51:56	0:0	13	->
water	51:58	0:0	13	p_fifo
decl	52:16	52:95	10	int64_t	i_spu_delay
op	52:36	0:0	10	=
water	52:38	0:0	10	p_spu
op	52:43	0:0	10	->
water	52:45	0:0	10	i_dts
op	52:51	0:0	10	-
water	52:53	0:0	10	p_sys
op	52:58	0:0	10	->
water	52:60	0:0	10	first_dts
op	52:70	0:0	10	-
water	52:72	0:0	10	p_pcr_stream
op	52:84	0:0	10	->
water	52:86	0:0	10	i_pes_dts
if	53:16	55:28	10	(( i_spu_delay > i_shaping_delay ) && ( i_spu_delay <INT64_C (100000000 ) ))
cond	53:20	54:55	11	( i_spu_delay > i_shaping_delay ) && ( i_spu_delay <INT64_C (100000000 ) )
water	53:20	0:0	12	(
water	53:22	0:0	12	i_spu_delay
op	53:34	0:0	12	>
water	53:36	0:0	12	i_shaping_delay
water	53:52	0:0	12	)
op	53:54	0:0	12	&&
water	54:20	0:0	12	(
water	54:22	0:0	12	i_spu_delay
op	54:34	0:0	12	<
call	54:36	54:53	12	INT64_C
arg	54:44	54:53	13	100000000
water	54:44	0:0	14	100000000
water	54:55	0:0	12	)
stmts	55:20	55:28	11	
continue	55:20	55:28	12	
if	56:16	64:16	10	(( i_spu_delay >=INT64_C (100000000 ) ) || ( i_spu_delay <INT64_C (10000 ) ))
cond	56:21	57:52	11	( i_spu_delay >=INT64_C (100000000 ) ) || ( i_spu_delay <INT64_C (10000 ) )
water	56:21	0:0	12	(
water	56:23	0:0	12	i_spu_delay
op	56:35	0:0	12	>=
call	56:38	56:55	12	INT64_C
arg	56:46	56:55	13	100000000
water	56:46	0:0	14	100000000
water	56:57	0:0	12	)
op	56:59	0:0	12	||
water	57:21	0:0	12	(
water	57:23	0:0	12	i_spu_delay
op	57:35	0:0	12	<
call	57:37	57:50	12	INT64_C
arg	57:45	57:50	13	10000
water	57:45	0:0	14	10000
water	57:52	0:0	12	)
stmts	58:16	64:16	11	
water	58:16	0:0	12	{
call	59:20	59:59	12	BufferChainClean
arg	59:38	59:59	13	&p_stream->chain_pes
op	59:38	0:0	14	&
water	59:39	0:0	14	p_stream
op	59:47	0:0	14	->
water	59:49	0:0	14	chain_pes
water	59:60	0:0	12	;
water	60:20	0:0	12	p_stream
op	60:28	0:0	12	->
water	60:30	0:0	12	i_pes_dts
op	60:40	0:0	12	=
water	60:42	0:0	12	0
water	60:43	0:0	12	;
water	61:20	0:0	12	p_stream
op	61:28	0:0	12	->
water	61:30	0:0	12	i_pes_used
op	61:41	0:0	12	=
water	61:43	0:0	12	0
water	61:44	0:0	12	;
water	62:20	0:0	12	p_stream
op	62:28	0:0	12	->
water	62:30	0:0	12	i_pes_length
op	62:43	0:0	12	=
water	62:45	0:0	12	0
water	62:46	0:0	12	;
continue	63:20	63:28	12	
water	64:16	0:0	12	}
water	65:12	0:0	10	}
water	66:8	0:0	6	}
water	67:8	0:0	4	b_ok
op	67:13	0:0	4	=
water	67:15	0:0	4	false
water	67:20	0:0	4	;
decl	68:8	68:23	4	block_t	*p_data
if	69:8	78:8	4	(p_stream == p_pcr_stream || p_sys -> b_data_alignment || ( ( p_input -> p_fmt -> i_codec != VLC_CODEC_MPGA ) && ( p_input -> p_fmt -> i_codec != VLC_CODEC_MP3 ) ))
cond	69:12	71:60	5	p_stream == p_pcr_stream || p_sys -> b_data_alignment || ( ( p_input -> p_fmt -> i_codec != VLC_CODEC_MPGA ) && ( p_input -> p_fmt -> i_codec != VLC_CODEC_MP3 ) )
water	69:12	0:0	6	p_stream
op	69:21	0:0	6	==
water	69:24	0:0	6	p_pcr_stream
op	69:37	0:0	6	||
water	69:40	0:0	6	p_sys
op	69:45	0:0	6	->
water	69:47	0:0	6	b_data_alignment
op	70:13	0:0	6	||
water	70:16	0:0	6	(
water	70:17	0:0	6	(
water	70:18	0:0	6	p_input
op	70:25	0:0	6	->
water	70:27	0:0	6	p_fmt
op	70:32	0:0	6	->
water	70:34	0:0	6	i_codec
op	70:42	0:0	6	!=
water	70:45	0:0	6	VLC_CODEC_MPGA
water	70:60	0:0	6	)
op	70:62	0:0	6	&&
water	71:17	0:0	6	(
water	71:18	0:0	6	p_input
op	71:25	0:0	6	->
water	71:27	0:0	6	p_fmt
op	71:32	0:0	6	->
water	71:34	0:0	6	i_codec
op	71:42	0:0	6	!=
water	71:45	0:0	6	VLC_CODEC_MP3
water	71:58	0:0	6	)
water	71:60	0:0	6	)
stmts	72:8	78:8	5	
water	72:8	0:0	6	{
water	73:12	0:0	6	p_data
op	73:19	0:0	6	=
call	73:21	73:52	6	block_FifoGet
arg	73:36	73:52	7	p_input->p_fifo
water	73:36	0:0	8	p_input
op	73:43	0:0	8	->
water	73:45	0:0	8	p_fifo
water	73:53	0:0	6	;
if	74:12	75:45	6	(p_data -> i_pts <= VLC_TS_INVALID)
cond	74:16	74:33	7	p_data -> i_pts <= VLC_TS_INVALID
water	74:16	0:0	8	p_data
op	74:22	0:0	8	->
water	74:24	0:0	8	i_pts
op	74:30	0:0	8	<=
water	74:33	0:0	8	VLC_TS_INVALID
stmts	75:16	75:45	7	
water	75:16	0:0	8	p_data
op	75:22	0:0	8	->
water	75:24	0:0	8	i_pts
op	75:30	0:0	8	=
water	75:32	0:0	8	p_data
op	75:38	0:0	8	->
water	75:40	0:0	8	i_dts
water	75:45	0:0	8	;
if	76:12	77:59	6	(p_input -> p_fmt -> i_codec == VLC_CODEC_MP4A)
cond	76:16	76:43	7	p_input -> p_fmt -> i_codec == VLC_CODEC_MP4A
water	76:16	0:0	8	p_input
op	76:23	0:0	8	->
water	76:25	0:0	8	p_fmt
op	76:30	0:0	8	->
water	76:32	0:0	8	i_codec
op	76:40	0:0	8	==
water	76:43	0:0	8	VLC_CODEC_MP4A
stmts	77:16	77:59	7	
water	77:16	0:0	8	p_data
op	77:23	0:0	8	=
call	77:25	77:58	8	Add_ADTS
arg	77:35	77:41	9	p_data
water	77:35	0:0	10	p_data
arg	77:43	77:58	9	p_input->p_fmt
water	77:43	0:0	10	p_input
op	77:50	0:0	10	->
water	77:52	0:0	10	p_fmt
water	77:59	0:0	8	;
water	78:8	0:0	6	}
else	79:8	80:53	4
stmts	80:12	80:53	5	
water	80:12	0:0	6	p_data
op	80:19	0:0	6	=
call	80:21	80:52	6	FixPES
arg	80:29	80:34	7	p_mux
water	80:29	0:0	8	p_mux
arg	80:36	80:52	7	p_input->p_fifo
water	80:36	0:0	8	p_input
op	80:43	0:0	8	->
water	80:45	0:0	8	p_fifo
water	80:53	0:0	6	;
if	81:8	86:8	4	(block_FifoCount (p_input -> p_fifo ) > 0 && p_input -> p_fmt -> i_cat != SPU_ES)
cond	81:12	82:37	5	block_FifoCount (p_input -> p_fifo ) > 0 && p_input -> p_fmt -> i_cat != SPU_ES
call	81:12	81:45	6	block_FifoCount
arg	81:29	81:45	7	p_input->p_fifo
water	81:29	0:0	8	p_input
op	81:36	0:0	8	->
water	81:38	0:0	8	p_fifo
op	81:47	0:0	6	>
water	81:49	0:0	6	0
op	81:51	0:0	6	&&
water	82:12	0:0	6	p_input
op	82:19	0:0	6	->
water	82:21	0:0	6	p_fmt
op	82:26	0:0	6	->
water	82:28	0:0	6	i_cat
op	82:34	0:0	6	!=
water	82:37	0:0	6	SPU_ES
stmts	83:8	86:8	5	
water	83:8	0:0	6	{
decl	84:12	84:63	6	block_t	*p_next
op	84:28	0:0	6	=
call	84:30	84:62	7	block_FifoShow
arg	84:46	84:62	8	p_input->p_fifo
water	84:46	0:0	9	p_input
op	84:53	0:0	9	->
water	84:55	0:0	9	p_fifo
water	85:12	0:0	6	p_data
op	85:18	0:0	6	->
water	85:20	0:0	6	i_length
op	85:29	0:0	6	=
water	85:31	0:0	6	p_next
op	85:37	0:0	6	->
water	85:39	0:0	6	i_dts
op	85:45	0:0	6	-
water	85:47	0:0	6	p_data
op	85:53	0:0	6	->
water	85:55	0:0	6	i_dts
water	85:60	0:0	6	;
water	86:8	0:0	6	}
else	87:8	89:35	4
stmts	87:13	89:35	5	
if	87:13	89:35	6	(p_input -> p_fmt -> i_codec != VLC_CODEC_SUBT)
cond	87:17	88:19	7	p_input -> p_fmt -> i_codec != VLC_CODEC_SUBT
water	87:17	0:0	8	p_input
op	87:24	0:0	8	->
water	87:26	0:0	8	p_fmt
op	87:31	0:0	8	->
water	87:33	0:0	8	i_codec
op	87:41	0:0	8	!=
water	88:19	0:0	8	VLC_CODEC_SUBT
stmts	89:12	89:35	7	
water	89:12	0:0	8	p_data
op	89:18	0:0	8	->
water	89:20	0:0	8	i_length
op	89:29	0:0	8	=
water	89:31	0:0	8	1000
water	89:35	0:0	8	;
if	90:8	91:44	4	(p_sys -> first_dts == 0)
cond	90:12	90:32	5	p_sys -> first_dts == 0
water	90:12	0:0	6	p_sys
op	90:17	0:0	6	->
water	90:19	0:0	6	first_dts
op	90:29	0:0	6	==
water	90:32	0:0	6	0
stmts	91:12	91:44	5	
water	91:12	0:0	6	p_sys
op	91:17	0:0	6	->
water	91:19	0:0	6	first_dts
op	91:29	0:0	6	=
water	91:31	0:0	6	p_data
op	91:37	0:0	6	->
water	91:39	0:0	6	i_dts
water	91:44	0:0	6	;
water	92:8	0:0	4	p_data
op	92:14	0:0	4	->
water	92:16	0:0	4	i_dts
op	92:22	0:0	4	-=
water	92:25	0:0	4	p_sys
op	92:30	0:0	4	->
water	92:32	0:0	4	first_dts
water	92:41	0:0	4	;
water	93:8	0:0	4	p_data
op	93:14	0:0	4	->
water	93:16	0:0	4	i_pts
op	93:22	0:0	4	-=
water	93:25	0:0	4	p_sys
op	93:30	0:0	4	->
water	93:32	0:0	4	first_dts
water	93:41	0:0	4	;
if	94:8	120:8	4	(( p_pcr_stream -> i_pes_dts > 0 && p_data -> i_dts - 10000000 > p_pcr_stream -> i_pes_dts + p_pcr_stream -> i_pes_length ) || p_data -> i_dts < p_stream -> i_pes_dts || ( p_stream -> i_pes_dts > 0 && p_input -> p_fmt -> i_cat != SPU_ES && p_data -> i_dts - 10000000 > p_stream -> i_pes_dts + p_stream -> i_pes_length ))
cond	94:12	101:37	5	( p_pcr_stream -> i_pes_dts > 0 && p_data -> i_dts - 10000000 > p_pcr_stream -> i_pes_dts + p_pcr_stream -> i_pes_length ) || p_data -> i_dts < p_stream -> i_pes_dts || ( p_stream -> i_pes_dts > 0 && p_input -> p_fmt -> i_cat != SPU_ES && p_data -> i_dts - 10000000 > p_stream -> i_pes_dts + p_stream -> i_pes_length )
water	94:12	0:0	6	(
water	94:14	0:0	6	p_pcr_stream
op	94:26	0:0	6	->
water	94:28	0:0	6	i_pes_dts
op	94:38	0:0	6	>
water	94:40	0:0	6	0
op	94:42	0:0	6	&&
water	95:14	0:0	6	p_data
op	95:20	0:0	6	->
water	95:22	0:0	6	i_dts
op	95:28	0:0	6	-
water	95:30	0:0	6	10000000
op	95:39	0:0	6	>
water	95:41	0:0	6	p_pcr_stream
op	95:53	0:0	6	->
water	95:55	0:0	6	i_pes_dts
op	95:65	0:0	6	+
water	96:14	0:0	6	p_pcr_stream
op	96:26	0:0	6	->
water	96:28	0:0	6	i_pes_length
water	96:41	0:0	6	)
op	96:43	0:0	6	||
water	97:12	0:0	6	p_data
op	97:18	0:0	6	->
water	97:20	0:0	6	i_dts
op	97:26	0:0	6	<
water	97:28	0:0	6	p_stream
op	97:36	0:0	6	->
water	97:38	0:0	6	i_pes_dts
op	97:48	0:0	6	||
water	98:12	0:0	6	(
water	98:14	0:0	6	p_stream
op	98:22	0:0	6	->
water	98:24	0:0	6	i_pes_dts
op	98:34	0:0	6	>
water	98:36	0:0	6	0
op	98:38	0:0	6	&&
water	99:14	0:0	6	p_input
op	99:21	0:0	6	->
water	99:23	0:0	6	p_fmt
op	99:28	0:0	6	->
water	99:30	0:0	6	i_cat
op	99:36	0:0	6	!=
water	99:39	0:0	6	SPU_ES
op	99:46	0:0	6	&&
water	100:14	0:0	6	p_data
op	100:20	0:0	6	->
water	100:22	0:0	6	i_dts
op	100:28	0:0	6	-
water	100:30	0:0	6	10000000
op	100:39	0:0	6	>
water	100:41	0:0	6	p_stream
op	100:49	0:0	6	->
water	100:51	0:0	6	i_pes_dts
op	100:61	0:0	6	+
water	101:14	0:0	6	p_stream
op	101:22	0:0	6	->
water	101:24	0:0	6	i_pes_length
water	101:37	0:0	6	)
stmts	102:8	120:8	5	
water	102:8	0:0	6	{
call	103:12	106:46	6	msg_Warn
arg	103:22	103:27	7	p_mux
water	103:22	0:0	8	p_mux
arg	103:29	104:67	7	"packet with too strange dts ""(dts=%"PRId64",old=%"PRId64",pcr=%"PRId64")"
water	103:29	0:0	8	"packet with too strange dts "
water	104:22	0:0	8	"(dts=%"
water	104:30	0:0	8	PRId64
water	104:36	0:0	8	",old=%"
water	104:44	0:0	8	PRId64
water	104:50	0:0	8	",pcr=%"
water	104:58	0:0	8	PRId64
water	104:64	0:0	8	")"
arg	105:22	105:35	7	p_data->i_dts
water	105:22	0:0	8	p_data
op	105:28	0:0	8	->
water	105:30	0:0	8	i_dts
arg	105:37	105:56	7	p_stream->i_pes_dts
water	105:37	0:0	8	p_stream
op	105:45	0:0	8	->
water	105:47	0:0	8	i_pes_dts
arg	106:22	106:46	7	p_pcr_stream->i_pes_dts
water	106:22	0:0	8	p_pcr_stream
op	106:34	0:0	8	->
water	106:36	0:0	8	i_pes_dts
water	106:47	0:0	6	;
call	107:12	107:34	6	block_Release
arg	107:27	107:34	7	p_data
water	107:27	0:0	8	p_data
water	107:35	0:0	6	;
call	108:12	108:51	6	BufferChainClean
arg	108:30	108:51	7	&p_stream->chain_pes
op	108:30	0:0	8	&
water	108:31	0:0	8	p_stream
op	108:39	0:0	8	->
water	108:41	0:0	8	chain_pes
water	108:52	0:0	6	;
water	109:12	0:0	6	p_stream
op	109:20	0:0	6	->
water	109:22	0:0	6	i_pes_dts
op	109:32	0:0	6	=
water	109:34	0:0	6	0
water	109:35	0:0	6	;
water	110:12	0:0	6	p_stream
op	110:20	0:0	6	->
water	110:22	0:0	6	i_pes_used
op	110:33	0:0	6	=
water	110:35	0:0	6	0
water	110:36	0:0	6	;
water	111:12	0:0	6	p_stream
op	111:20	0:0	6	->
water	111:22	0:0	6	i_pes_length
op	111:35	0:0	6	=
water	111:37	0:0	6	0
water	111:38	0:0	6	;
if	112:12	118:12	6	(p_input -> p_fmt -> i_cat != SPU_ES)
cond	112:16	112:41	7	p_input -> p_fmt -> i_cat != SPU_ES
water	112:16	0:0	8	p_input
op	112:23	0:0	8	->
water	112:25	0:0	8	p_fmt
op	112:30	0:0	8	->
water	112:32	0:0	8	i_cat
op	112:38	0:0	8	!=
water	112:41	0:0	8	SPU_ES
stmts	113:12	118:12	7	
water	113:12	0:0	8	{
call	114:16	114:59	8	BufferChainClean
arg	114:34	114:59	9	&p_pcr_stream->chain_pes
op	114:34	0:0	10	&
water	114:35	0:0	10	p_pcr_stream
op	114:47	0:0	10	->
water	114:49	0:0	10	chain_pes
water	114:60	0:0	8	;
water	115:16	0:0	8	p_pcr_stream
op	115:28	0:0	8	->
water	115:30	0:0	8	i_pes_dts
op	115:40	0:0	8	=
water	115:42	0:0	8	0
water	115:43	0:0	8	;
water	116:16	0:0	8	p_pcr_stream
op	116:28	0:0	8	->
water	116:30	0:0	8	i_pes_used
op	116:41	0:0	8	=
water	116:43	0:0	8	0
water	116:44	0:0	8	;
water	117:16	0:0	8	p_pcr_stream
op	117:28	0:0	8	->
water	117:30	0:0	8	i_pes_length
op	117:43	0:0	8	=
water	117:45	0:0	8	0
water	117:46	0:0	8	;
water	118:12	0:0	8	}
continue	119:12	119:20	6	
water	120:8	0:0	6	}
decl	121:8	121:29	4	int	i_header_size
op	121:26	0:0	4	=
water	121:28	0:0	4	0
decl	122:8	122:30	4	int	i_max_pes_size
op	122:27	0:0	4	=
water	122:29	0:0	4	0
decl	123:8	123:32	4	int	b_data_alignment
op	123:29	0:0	4	=
water	123:31	0:0	4	0
if	124:8	159:8	4	(p_input -> p_fmt -> i_cat == SPU_ES)
cond	124:12	124:37	5	p_input -> p_fmt -> i_cat == SPU_ES
water	124:12	0:0	6	p_input
op	124:19	0:0	6	->
water	124:21	0:0	6	p_fmt
op	124:26	0:0	6	->
water	124:28	0:0	6	i_cat
op	124:34	0:0	6	==
water	124:37	0:0	6	SPU_ES
stmts	124:46	159:8	5	
switch	124:46	159:8	6	(p_input -> p_fmt -> i_codec)
cond	124:54	124:70	7	p_input -> p_fmt -> i_codec
water	124:54	0:0	8	p_input
op	124:61	0:0	8	->
water	124:63	0:0	8	p_fmt
op	124:68	0:0	8	->
water	124:70	0:0	8	i_codec
stmts	125:8	159:8	7	
water	125:8	0:0	8	{
label	126:8	126:27	8	case VLC_CODEC_SUBT :
water	128:12	0:0	8	p_data
op	128:19	0:0	8	=
call	128:21	128:64	8	block_Realloc
arg	128:36	128:42	9	p_data
water	128:36	0:0	10	p_data
arg	128:44	128:45	9	2
water	128:44	0:0	10	2
arg	128:47	128:64	9	p_data->i_buffer
water	128:47	0:0	10	p_data
op	128:53	0:0	10	->
water	128:55	0:0	10	i_buffer
water	128:65	0:0	8	;
water	129:12	0:0	8	p_data
op	129:18	0:0	8	->
water	129:20	0:0	8	p_buffer
op	129:28	0:0	8	[
water	129:29	0:0	8	0
op	129:30	0:0	8	]
op	129:32	0:0	8	=
water	129:34	0:0	8	(
water	129:36	0:0	8	(
water	129:37	0:0	8	p_data
op	129:43	0:0	8	->
water	129:45	0:0	8	i_buffer
op	129:54	0:0	8	-
water	129:56	0:0	8	2
water	129:57	0:0	8	)
op	129:59	0:0	8	>>
water	129:62	0:0	8	8
water	129:63	0:0	8	)
op	129:65	0:0	8	&
water	129:67	0:0	8	0
water	129:68	0:0	8	xff
water	129:71	0:0	8	;
water	130:12	0:0	8	p_data
op	130:18	0:0	8	->
water	130:20	0:0	8	p_buffer
op	130:28	0:0	8	[
water	130:29	0:0	8	1
op	130:30	0:0	8	]
op	130:32	0:0	8	=
water	130:34	0:0	8	(
water	130:36	0:0	8	(
water	130:37	0:0	8	p_data
op	130:43	0:0	8	->
water	130:45	0:0	8	i_buffer
op	130:54	0:0	8	-
water	130:56	0:0	8	2
water	130:57	0:0	8	)
water	130:63	0:0	8	)
op	130:65	0:0	8	&
water	130:67	0:0	8	0
water	130:68	0:0	8	xff
water	130:71	0:0	8	;
if	132:12	133:34	8	(p_data -> i_buffer > 2 && ! p_data -> p_buffer [ p_data -> i_buffer - 1 ])
cond	132:16	132:76	9	p_data -> i_buffer > 2 && ! p_data -> p_buffer [ p_data -> i_buffer - 1 ]
water	132:16	0:0	10	p_data
op	132:22	0:0	10	->
water	132:24	0:0	10	i_buffer
op	132:33	0:0	10	>
water	132:35	0:0	10	2
op	132:37	0:0	10	&&
op	132:40	0:0	10	!
water	132:41	0:0	10	p_data
op	132:47	0:0	10	->
water	132:49	0:0	10	p_buffer
op	132:57	0:0	10	[
water	132:58	0:0	10	p_data
op	132:64	0:0	10	->
water	132:66	0:0	10	i_buffer
op	132:74	0:0	10	-
water	132:75	0:0	10	1
op	132:76	0:0	10	]
stmts	133:16	133:34	9	
water	133:16	0:0	10	p_data
op	133:22	0:0	10	->
water	133:24	0:0	10	i_buffer
op	133:32	0:0	10	--
water	133:34	0:0	10	;
if	135:12	148:12	8	(p_data -> i_length > 0 && ( p_data -> i_buffer != 1 || * p_data -> p_buffer != ' ' ))
cond	135:16	136:68	9	p_data -> i_length > 0 && ( p_data -> i_buffer != 1 || * p_data -> p_buffer != ' ' )
water	135:16	0:0	10	p_data
op	135:22	0:0	10	->
water	135:24	0:0	10	i_length
op	135:33	0:0	10	>
water	135:35	0:0	10	0
op	135:37	0:0	10	&&
water	136:16	0:0	10	(
water	136:18	0:0	10	p_data
op	136:24	0:0	10	->
water	136:26	0:0	10	i_buffer
op	136:35	0:0	10	!=
water	136:38	0:0	10	1
op	136:40	0:0	10	||
op	136:43	0:0	10	*
water	136:44	0:0	10	p_data
op	136:50	0:0	10	->
water	136:52	0:0	10	p_buffer
op	136:61	0:0	10	!=
water	136:64	0:0	10	' '
water	136:68	0:0	10	)
stmts	137:12	148:12	9	
water	137:12	0:0	10	{
decl	138:16	138:49	10	block_t	*p_spu
op	138:31	0:0	10	=
call	138:33	138:48	11	block_Alloc
arg	138:46	138:48	12	3
water	138:46	0:0	13	3
water	139:16	0:0	10	p_spu
op	139:21	0:0	10	->
water	139:23	0:0	10	i_dts
op	139:29	0:0	10	=
water	139:31	0:0	10	p_data
op	139:37	0:0	10	->
water	139:39	0:0	10	i_dts
op	139:45	0:0	10	+
water	139:47	0:0	10	p_data
op	139:53	0:0	10	->
water	139:55	0:0	10	i_length
water	139:63	0:0	10	;
water	140:16	0:0	10	p_spu
op	140:21	0:0	10	->
water	140:23	0:0	10	i_pts
op	140:29	0:0	10	=
water	140:31	0:0	10	p_spu
op	140:36	0:0	10	->
water	140:38	0:0	10	i_dts
water	140:43	0:0	10	;
water	141:16	0:0	10	p_spu
op	141:21	0:0	10	->
water	141:23	0:0	10	i_length
op	141:32	0:0	10	=
water	141:34	0:0	10	1000
water	141:38	0:0	10	;
water	142:16	0:0	10	p_spu
op	142:21	0:0	10	->
water	142:23	0:0	10	p_buffer
op	142:31	0:0	10	[
water	142:32	0:0	10	0
op	142:33	0:0	10	]
op	142:35	0:0	10	=
water	142:37	0:0	10	0
water	142:38	0:0	10	;
water	143:16	0:0	10	p_spu
op	143:21	0:0	10	->
water	143:23	0:0	10	p_buffer
op	143:31	0:0	10	[
water	143:32	0:0	10	1
op	143:33	0:0	10	]
op	143:35	0:0	10	=
water	143:37	0:0	10	1
water	143:38	0:0	10	;
water	144:16	0:0	10	p_spu
op	144:21	0:0	10	->
water	144:23	0:0	10	p_buffer
op	144:31	0:0	10	[
water	144:32	0:0	10	2
op	144:33	0:0	10	]
op	144:35	0:0	10	=
water	144:37	0:0	10	' '
water	144:40	0:0	10	;
call	145:16	146:63	10	EStoPES
arg	145:25	145:31	11	&p_spu
op	145:25	0:0	12	&
water	145:26	0:0	12	p_spu
arg	145:33	145:38	11	p_spu
water	145:33	0:0	12	p_spu
arg	145:40	145:54	11	p_input->p_fmt
water	145:40	0:0	12	p_input
op	145:47	0:0	12	->
water	145:49	0:0	12	p_fmt
arg	146:29	146:50	11	p_stream->i_stream_id
water	146:29	0:0	12	p_stream
op	146:37	0:0	12	->
water	146:39	0:0	12	i_stream_id
arg	146:52	146:53	11	1
water	146:52	0:0	12	1
arg	146:55	146:56	11	0
water	146:55	0:0	12	0
arg	146:58	146:59	11	0
water	146:58	0:0	12	0
arg	146:61	146:63	11	0
water	146:61	0:0	12	0
water	146:64	0:0	10	;
water	147:16	0:0	10	p_data
op	147:22	0:0	10	->
water	147:24	0:0	10	p_next
op	147:31	0:0	10	=
water	147:33	0:0	10	p_spu
water	147:38	0:0	10	;
water	148:12	0:0	10	}
break	149:12	149:17	8	
label	150:8	150:31	8	case VLC_CODEC_TELETEXT :
water	152:12	0:0	8	i_header_size
op	152:26	0:0	8	=
water	152:28	0:0	8	0
water	152:29	0:0	8	x24
water	152:32	0:0	8	;
water	153:12	0:0	8	b_data_alignment
op	153:29	0:0	8	=
water	153:31	0:0	8	1
water	153:32	0:0	8	;
break	154:12	154:17	8	
label	155:8	155:27	8	case VLC_CODEC_DVBS :
water	157:12	0:0	8	b_data_alignment
op	157:29	0:0	8	=
water	157:31	0:0	8	1
water	157:32	0:0	8	;
break	158:12	158:17	8	
water	159:8	0:0	8	}
else	160:8	165:8	4
stmts	160:13	165:8	5	
if	160:13	165:8	6	(p_data -> i_length < 0 || p_data -> i_length > 2000000)
cond	160:17	160:60	7	p_data -> i_length < 0 || p_data -> i_length > 2000000
water	160:17	0:0	8	p_data
op	160:23	0:0	8	->
water	160:25	0:0	8	i_length
op	160:34	0:0	8	<
water	160:36	0:0	8	0
op	160:38	0:0	8	||
water	160:41	0:0	8	p_data
op	160:47	0:0	8	->
water	160:49	0:0	8	i_length
op	160:58	0:0	8	>
water	160:60	0:0	8	2000000
stmts	161:8	165:8	7	
water	161:8	0:0	8	{
water	164:12	0:0	8	p_data
op	164:18	0:0	8	->
water	164:20	0:0	8	i_length
op	164:29	0:0	8	=
water	164:31	0:0	8	1000
water	164:35	0:0	8	;
water	165:8	0:0	8	}
water	166:8	0:0	4	p_stream
op	166:16	0:0	4	->
water	166:18	0:0	4	i_pes_length
op	166:31	0:0	4	+=
water	166:34	0:0	4	p_data
op	166:40	0:0	4	->
water	166:42	0:0	4	i_length
water	166:50	0:0	4	;
if	167:8	170:8	4	(p_stream -> i_pes_dts == 0)
cond	167:12	167:35	5	p_stream -> i_pes_dts == 0
water	167:12	0:0	6	p_stream
op	167:20	0:0	6	->
water	167:22	0:0	6	i_pes_dts
op	167:32	0:0	6	==
water	167:35	0:0	6	0
stmts	168:8	170:8	5	
water	168:8	0:0	6	{
water	169:12	0:0	6	p_stream
op	169:20	0:0	6	->
water	169:22	0:0	6	i_pes_dts
op	169:32	0:0	6	=
water	169:34	0:0	6	p_data
op	169:40	0:0	6	->
water	169:42	0:0	6	i_dts
water	169:47	0:0	6	;
water	170:8	0:0	6	}
if	172:8	177:8	4	(p_stream -> i_stream_id == 0 xa0 && p_data -> i_pts <= 0)
cond	172:12	172:62	5	p_stream -> i_stream_id == 0 xa0 && p_data -> i_pts <= 0
water	172:12	0:0	6	p_stream
op	172:20	0:0	6	->
water	172:22	0:0	6	i_stream_id
op	172:34	0:0	6	==
water	172:37	0:0	6	0
water	172:38	0:0	6	xa0
op	172:42	0:0	6	&&
water	172:45	0:0	6	p_data
op	172:51	0:0	6	->
water	172:53	0:0	6	i_pts
op	172:59	0:0	6	<=
water	172:62	0:0	6	0
stmts	173:8	177:8	5	
water	173:8	0:0	6	{
water	176:12	0:0	6	p_data
op	176:18	0:0	6	->
water	176:20	0:0	6	i_pts
op	176:26	0:0	6	=
water	176:28	0:0	6	p_data
op	176:34	0:0	6	->
water	176:36	0:0	6	i_dts
water	176:41	0:0	6	;
water	177:8	0:0	6	}
if	178:8	184:8	4	(p_input -> p_fmt -> i_codec == VLC_CODEC_DIRAC)
cond	178:12	178:39	5	p_input -> p_fmt -> i_codec == VLC_CODEC_DIRAC
water	178:12	0:0	6	p_input
op	178:19	0:0	6	->
water	178:21	0:0	6	p_fmt
op	178:26	0:0	6	->
water	178:28	0:0	6	i_codec
op	178:36	0:0	6	==
water	178:39	0:0	6	VLC_CODEC_DIRAC
stmts	179:8	184:8	5	
water	179:8	0:0	6	{
water	180:12	0:0	6	b_data_alignment
op	180:29	0:0	6	=
water	180:31	0:0	6	1
water	180:32	0:0	6	;
water	183:12	0:0	6	i_max_pes_size
op	183:27	0:0	6	=
water	183:29	0:0	6	INT_MAX
water	183:36	0:0	6	;
water	184:8	0:0	6	}
call	185:9	187:38	4	EStoPES
arg	185:19	185:26	5	&p_data
op	185:19	0:0	6	&
water	185:20	0:0	6	p_data
arg	185:28	185:34	5	p_data
water	185:28	0:0	6	p_data
arg	185:36	185:50	5	p_input->p_fmt
water	185:36	0:0	6	p_input
op	185:43	0:0	6	->
water	185:45	0:0	6	p_fmt
arg	185:52	185:73	5	p_stream->i_stream_id
water	185:52	0:0	6	p_stream
op	185:60	0:0	6	->
water	185:62	0:0	6	i_stream_id
arg	186:23	186:24	5	1
water	186:23	0:0	6	1
arg	186:26	186:42	5	b_data_alignment
water	186:26	0:0	6	b_data_alignment
arg	186:44	186:57	5	i_header_size
water	186:44	0:0	6	i_header_size
arg	187:23	187:38	5	i_max_pes_size
water	187:23	0:0	6	i_max_pes_size
water	187:39	0:0	4	;
call	188:8	188:56	4	BufferChainAppend
arg	188:27	188:47	5	&p_stream->chain_pes
op	188:27	0:0	6	&
water	188:28	0:0	6	p_stream
op	188:36	0:0	6	->
water	188:38	0:0	6	chain_pes
arg	188:49	188:56	5	p_data
water	188:49	0:0	6	p_data
water	188:57	0:0	4	;
if	189:8	196:8	4	(p_sys -> b_use_key_frames && p_stream == p_pcr_stream && ( p_data -> i_flags & BLOCK_FLAG_TYPE_I ) && ! ( p_data -> i_flags & BLOCK_FLAG_NO_KEYFRAME ) && ( p_stream -> i_pes_length > 400000 ))
cond	189:12	192:47	5	p_sys -> b_use_key_frames && p_stream == p_pcr_stream && ( p_data -> i_flags & BLOCK_FLAG_TYPE_I ) && ! ( p_data -> i_flags & BLOCK_FLAG_NO_KEYFRAME ) && ( p_stream -> i_pes_length > 400000 )
water	189:12	0:0	6	p_sys
op	189:17	0:0	6	->
water	189:19	0:0	6	b_use_key_frames
op	189:36	0:0	6	&&
water	189:39	0:0	6	p_stream
op	189:48	0:0	6	==
water	189:51	0:0	6	p_pcr_stream
op	190:12	0:0	6	&&
water	190:15	0:0	6	(
water	190:16	0:0	6	p_data
op	190:22	0:0	6	->
water	190:24	0:0	6	i_flags
op	190:32	0:0	6	&
water	190:34	0:0	6	BLOCK_FLAG_TYPE_I
water	190:51	0:0	6	)
op	191:12	0:0	6	&&
op	191:15	0:0	6	!
water	191:16	0:0	6	(
water	191:17	0:0	6	p_data
op	191:23	0:0	6	->
water	191:25	0:0	6	i_flags
op	191:33	0:0	6	&
water	191:35	0:0	6	BLOCK_FLAG_NO_KEYFRAME
water	191:57	0:0	6	)
op	192:12	0:0	6	&&
water	192:15	0:0	6	(
water	192:16	0:0	6	p_stream
op	192:24	0:0	6	->
water	192:26	0:0	6	i_pes_length
op	192:39	0:0	6	>
water	192:41	0:0	6	400000
water	192:47	0:0	6	)
stmts	193:8	196:8	5	
water	193:8	0:0	6	{
water	194:12	0:0	6	i_shaping_delay
op	194:28	0:0	6	=
water	194:30	0:0	6	p_stream
op	194:38	0:0	6	->
water	194:40	0:0	6	i_pes_length
water	194:52	0:0	6	;
water	195:12	0:0	6	p_stream
op	195:20	0:0	6	->
water	195:22	0:0	6	b_key_frame
op	195:34	0:0	6	=
water	195:36	0:0	6	1
water	195:37	0:0	6	;
water	196:8	0:0	6	}
water	197:4	0:0	4	}
decl	199:4	199:59	2	const mtime_t	i_pcr_length
op	199:31	0:0	2	=
water	199:33	0:0	2	p_pcr_stream
op	199:45	0:0	2	->
water	199:47	0:0	2	i_pes_length
water	200:4	0:0	2	p_pcr_stream
op	200:16	0:0	2	->
water	200:18	0:0	2	b_key_frame
op	200:30	0:0	2	=
water	200:32	0:0	2	0
water	200:33	0:0	2	;
decl	203:4	203:26	2	int	i_packet_count
op	203:23	0:0	2	=
water	203:25	0:0	2	0
for	204:4	226:4	2	( int i = 0 ;i < p_mux -> i_nb_inputs;i ++)
forinit	0:0	204:18	3	 int i = 0 ;
decl	204:9	204:18	4	int	i
op	204:15	0:0	4	=
water	204:17	0:0	4	0
cond	204:20	204:31	3	i < p_mux -> i_nb_inputs
water	204:20	0:0	4	i
op	204:22	0:0	4	<
water	204:24	0:0	4	p_mux
op	204:29	0:0	4	->
water	204:31	0:0	4	i_nb_inputs
forexpr	204:44	204:45	3	i ++
water	204:44	0:0	4	i
op	204:45	0:0	4	++
stmts	205:4	226:4	3	
water	205:4	0:0	4	{
decl	206:8	206:72	4	ts_stream_t	*p_stream
op	206:30	0:0	4	=
water	206:32	0:0	4	(
water	206:33	0:0	4	ts_stream_t
op	206:44	0:0	4	*
water	206:45	0:0	4	)
water	206:46	0:0	4	p_mux
op	206:51	0:0	4	->
water	206:53	0:0	4	pp_inputs
op	206:62	0:0	4	[
water	206:63	0:0	4	i
op	206:64	0:0	4	]
op	206:65	0:0	4	->
water	206:67	0:0	4	p_sys
for	208:8	225:8	4	( block_t * p_pes = p_stream -> chain_pes . p_first ;p_pes != NULL;p_pes = p_pes -> p_next)
forinit	0:0	208:57	5	 block_t * p_pes = p_stream -> chain_pes . p_first ;
decl	208:13	208:57	6	block_t	*p_pes
op	208:28	0:0	6	=
water	208:30	0:0	6	p_stream
op	208:38	0:0	6	->
water	208:40	0:0	6	chain_pes
op	208:49	0:0	6	.
water	208:50	0:0	6	p_first
cond	208:59	208:68	5	p_pes != NULL
water	208:59	0:0	6	p_pes
op	208:65	0:0	6	!=
water	208:68	0:0	6	NULL
forexpr	209:13	209:28	5	p_pes = p_pes -> p_next
water	209:13	0:0	6	p_pes
op	209:19	0:0	6	=
water	209:21	0:0	6	p_pes
op	209:26	0:0	6	->
water	209:28	0:0	6	p_next
stmts	210:8	225:8	5	
water	210:8	0:0	6	{
decl	211:12	211:40	6	int	i_size
op	211:23	0:0	6	=
water	211:25	0:0	6	p_pes
op	211:30	0:0	6	->
water	211:32	0:0	6	i_buffer
if	212:12	223:12	6	(p_pes -> i_dts + p_pes -> i_length > p_pcr_stream -> i_pes_dts + p_pcr_stream -> i_pes_length)
cond	212:16	213:56	7	p_pes -> i_dts + p_pes -> i_length > p_pcr_stream -> i_pes_dts + p_pcr_stream -> i_pes_length
water	212:16	0:0	8	p_pes
op	212:21	0:0	8	->
water	212:23	0:0	8	i_dts
op	212:29	0:0	8	+
water	212:31	0:0	8	p_pes
op	212:36	0:0	8	->
water	212:38	0:0	8	i_length
op	212:47	0:0	8	>
water	213:16	0:0	8	p_pcr_stream
op	213:28	0:0	8	->
water	213:30	0:0	8	i_pes_dts
op	213:40	0:0	8	+
water	213:42	0:0	8	p_pcr_stream
op	213:54	0:0	8	->
water	213:56	0:0	8	i_pes_length
stmts	214:12	223:12	7	
water	214:12	0:0	8	{
decl	215:16	216:61	8	mtime_t	i_frag
op	215:31	0:0	8	=
water	215:33	0:0	8	p_pcr_stream
op	215:45	0:0	8	->
water	215:47	0:0	8	i_pes_dts
op	215:57	0:0	8	+
water	216:20	0:0	8	p_pcr_stream
op	216:32	0:0	8	->
water	216:34	0:0	8	i_pes_length
op	216:47	0:0	8	-
water	216:49	0:0	8	p_pes
op	216:54	0:0	8	->
water	216:56	0:0	8	i_dts
if	217:16	221:16	8	(i_frag < 0)
cond	217:20	217:29	9	i_frag < 0
water	217:20	0:0	10	i_frag
op	217:27	0:0	10	<
water	217:29	0:0	10	0
stmts	218:16	221:16	9	
water	218:16	0:0	10	{
break	220:20	220:25	10	
water	221:16	0:0	10	}
water	222:16	0:0	8	i_size
op	222:23	0:0	8	=
water	222:25	0:0	8	p_pes
op	222:30	0:0	8	->
water	222:32	0:0	8	i_buffer
op	222:41	0:0	8	*
water	222:43	0:0	8	i_frag
op	222:50	0:0	8	/
water	222:52	0:0	8	p_pes
op	222:57	0:0	8	->
water	222:59	0:0	8	i_length
water	222:67	0:0	8	;
water	223:12	0:0	8	}
water	224:12	0:0	6	i_packet_count
op	224:27	0:0	6	+=
water	224:30	0:0	6	(
water	224:32	0:0	6	i_size
op	224:39	0:0	6	+
water	224:41	0:0	6	183
water	224:45	0:0	6	)
op	224:47	0:0	6	/
water	224:49	0:0	6	184
water	224:52	0:0	6	;
water	225:8	0:0	6	}
water	226:4	0:0	4	}
water	228:4	0:0	2	i_packet_count
op	228:19	0:0	2	+=
water	228:22	0:0	2	(
water	228:23	0:0	2	8
op	228:25	0:0	2	*
water	228:27	0:0	2	i_pcr_length
op	228:40	0:0	2	/
water	228:42	0:0	2	p_sys
op	228:47	0:0	2	->
water	228:49	0:0	2	i_pcr_delay
op	228:61	0:0	2	+
water	228:63	0:0	2	175
water	228:66	0:0	2	)
op	228:68	0:0	2	/
water	228:70	0:0	2	176
water	228:73	0:0	2	;
call	230:4	230:31	2	BufferChainInit
arg	230:21	230:31	3	&chain_ts
op	230:21	0:0	4	&
water	230:22	0:0	4	chain_ts
water	230:32	0:0	2	;
decl	232:4	232:32	2	bool	pat_was_previous
op	232:26	0:0	2	=
water	232:28	0:0	2	true
call	233:4	233:29	2	GetPAT
arg	233:12	233:17	3	p_mux
water	233:12	0:0	4	p_mux
arg	233:19	233:29	3	&chain_ts
op	233:19	0:0	4	&
water	233:20	0:0	4	chain_ts
water	233:30	0:0	2	;
call	234:4	234:29	2	GetPMT
arg	234:12	234:17	3	p_mux
water	234:12	0:0	4	p_mux
arg	234:19	234:29	3	&chain_ts
op	234:19	0:0	4	&
water	234:20	0:0	4	chain_ts
water	234:30	0:0	2	;
decl	235:4	235:24	2	int	i_packet_pos
op	235:21	0:0	2	=
water	235:23	0:0	2	0
water	236:4	0:0	2	i_packet_count
op	236:19	0:0	2	+=
water	236:22	0:0	2	chain_ts
op	236:30	0:0	2	.
water	236:31	0:0	2	i_depth
water	236:38	0:0	2	;
decl	238:4	238:53	2	const mtime_t	i_pcr_dts
op	238:28	0:0	2	=
water	238:30	0:0	2	p_pcr_stream
op	238:42	0:0	2	->
water	238:44	0:0	2	i_pes_dts
for	239:4	302:4	2	(;;)
forinit	239:9	239:9	3	;
water	239:9	0:0	4	;
cond	0:0	0:0	3	
forexpr	0:0	0:0	3	
stmts	240:4	302:4	3	
water	240:4	0:0	4	{
decl	241:8	241:34	4	int	i_stream
op	241:30	0:0	4	=
op	241:32	0:0	4	-
water	241:33	0:0	4	1
decl	242:8	242:30	4	mtime_t	i_dts
op	242:27	0:0	4	=
water	242:29	0:0	4	0
decl	243:8	243:30	4	ts_stream_t	*p_stream
for	245:8	257:8	4	( int i = 0 ;i < p_mux -> i_nb_inputs;i ++)
forinit	0:0	245:22	5	 int i = 0 ;
decl	245:13	245:22	6	int	i
op	245:19	0:0	6	=
water	245:21	0:0	6	0
cond	245:24	245:35	5	i < p_mux -> i_nb_inputs
water	245:24	0:0	6	i
op	245:26	0:0	6	<
water	245:28	0:0	6	p_mux
op	245:33	0:0	6	->
water	245:35	0:0	6	i_nb_inputs
forexpr	245:48	245:49	5	i ++
water	245:48	0:0	6	i
op	245:49	0:0	6	++
stmts	246:8	257:8	5	
water	246:8	0:0	6	{
water	247:12	0:0	6	p_stream
op	247:21	0:0	6	=
water	247:23	0:0	6	(
water	247:24	0:0	6	ts_stream_t
op	247:35	0:0	6	*
water	247:36	0:0	6	)
water	247:37	0:0	6	p_mux
op	247:42	0:0	6	->
water	247:44	0:0	6	pp_inputs
op	247:53	0:0	6	[
water	247:54	0:0	6	i
op	247:55	0:0	6	]
op	247:56	0:0	6	->
water	247:58	0:0	6	p_sys
water	247:63	0:0	6	;
if	248:12	251:12	6	(p_stream -> i_pes_dts == 0)
cond	248:16	248:39	7	p_stream -> i_pes_dts == 0
water	248:16	0:0	8	p_stream
op	248:24	0:0	8	->
water	248:26	0:0	8	i_pes_dts
op	248:36	0:0	8	==
water	248:39	0:0	8	0
stmts	249:12	251:12	7	
water	249:12	0:0	8	{
continue	250:16	250:24	8	
water	251:12	0:0	8	}
if	252:12	256:12	6	(i_stream == - 1 || p_stream -> i_pes_dts < i_dts)
cond	252:16	252:56	7	i_stream == - 1 || p_stream -> i_pes_dts < i_dts
water	252:16	0:0	8	i_stream
op	252:25	0:0	8	==
op	252:28	0:0	8	-
water	252:29	0:0	8	1
op	252:31	0:0	8	||
water	252:34	0:0	8	p_stream
op	252:42	0:0	8	->
water	252:44	0:0	8	i_pes_dts
op	252:54	0:0	8	<
water	252:56	0:0	8	i_dts
stmts	253:12	256:12	7	
water	253:12	0:0	8	{
water	254:16	0:0	8	i_stream
op	254:25	0:0	8	=
water	254:27	0:0	8	i
water	254:28	0:0	8	;
water	255:16	0:0	8	i_dts
op	255:22	0:0	8	=
water	255:24	0:0	8	p_stream
op	255:32	0:0	8	->
water	255:34	0:0	8	i_pes_dts
water	255:43	0:0	8	;
water	256:12	0:0	8	}
water	257:8	0:0	6	}
if	258:8	261:8	4	(i_stream == - 1 || i_dts > i_pcr_dts + i_pcr_length)
cond	258:12	258:50	5	i_stream == - 1 || i_dts > i_pcr_dts + i_pcr_length
water	258:12	0:0	6	i_stream
op	258:21	0:0	6	==
op	258:24	0:0	6	-
water	258:25	0:0	6	1
op	258:27	0:0	6	||
water	258:30	0:0	6	i_dts
op	258:36	0:0	6	>
water	258:38	0:0	6	i_pcr_dts
op	258:48	0:0	6	+
water	258:50	0:0	6	i_pcr_length
stmts	259:8	261:8	5	
water	259:8	0:0	6	{
break	260:12	260:17	6	
water	261:8	0:0	6	}
water	262:8	0:0	4	p_stream
op	262:17	0:0	4	=
water	262:19	0:0	4	(
water	262:20	0:0	4	ts_stream_t
op	262:31	0:0	4	*
water	262:32	0:0	4	)
water	262:33	0:0	4	p_mux
op	262:38	0:0	4	->
water	262:40	0:0	4	pp_inputs
op	262:49	0:0	4	[
water	262:50	0:0	4	i_stream
op	262:58	0:0	4	]
op	262:59	0:0	4	->
water	262:61	0:0	4	p_sys
water	262:66	0:0	4	;
decl	263:8	263:58	4	sout_input_t	*p_input
op	263:30	0:0	4	=
water	263:32	0:0	4	p_mux
op	263:37	0:0	4	->
water	263:39	0:0	4	pp_inputs
op	263:48	0:0	4	[
water	263:49	0:0	4	i_stream
op	263:57	0:0	4	]
decl	265:8	265:26	4	bool	b_pcr
op	265:19	0:0	4	=
water	265:21	0:0	4	false
if	266:8	273:8	4	(p_stream == p_pcr_stream && i_pcr_dts + i_packet_pos * i_pcr_length / i_packet_count >= p_sys -> i_pcr + p_sys -> i_pcr_delay)
cond	266:12	268:34	5	p_stream == p_pcr_stream && i_pcr_dts + i_packet_pos * i_pcr_length / i_packet_count >= p_sys -> i_pcr + p_sys -> i_pcr_delay
water	266:12	0:0	6	p_stream
op	266:21	0:0	6	==
water	266:24	0:0	6	p_pcr_stream
op	266:37	0:0	6	&&
water	267:12	0:0	6	i_pcr_dts
op	267:22	0:0	6	+
water	267:24	0:0	6	i_packet_pos
op	267:37	0:0	6	*
water	267:39	0:0	6	i_pcr_length
op	267:52	0:0	6	/
water	267:54	0:0	6	i_packet_count
op	267:69	0:0	6	>=
water	268:12	0:0	6	p_sys
op	268:17	0:0	6	->
water	268:19	0:0	6	i_pcr
op	268:25	0:0	6	+
water	268:27	0:0	6	p_sys
op	268:32	0:0	6	->
water	268:34	0:0	6	i_pcr_delay
stmts	269:8	273:8	5	
water	269:8	0:0	6	{
water	270:12	0:0	6	b_pcr
op	270:18	0:0	6	=
water	270:20	0:0	6	true
water	270:24	0:0	6	;
water	271:12	0:0	6	p_sys
op	271:17	0:0	6	->
water	271:19	0:0	6	i_pcr
op	271:25	0:0	6	=
water	271:27	0:0	6	i_pcr_dts
op	271:37	0:0	6	+
water	271:39	0:0	6	i_packet_pos
op	271:52	0:0	6	*
water	272:16	0:0	6	i_pcr_length
op	272:29	0:0	6	/
water	272:31	0:0	6	i_packet_count
water	272:45	0:0	6	;
water	273:8	0:0	6	}
decl	275:8	275:55	4	block_t	*p_ts
op	275:22	0:0	4	=
call	275:24	275:54	5	TSNew
arg	275:31	275:36	6	p_mux
water	275:31	0:0	7	p_mux
arg	275:38	275:46	6	p_stream
water	275:38	0:0	7	p_stream
arg	275:48	275:54	6	b_pcr
water	275:48	0:0	7	b_pcr
if	276:8	281:8	4	(p_sys -> csa != NULL && ( p_input -> p_fmt -> i_cat != AUDIO_ES || p_sys -> b_crypt_audio ) && ( p_input -> p_fmt -> i_cat != VIDEO_ES || p_sys -> b_crypt_video ))
cond	276:12	278:71	5	p_sys -> csa != NULL && ( p_input -> p_fmt -> i_cat != AUDIO_ES || p_sys -> b_crypt_audio ) && ( p_input -> p_fmt -> i_cat != VIDEO_ES || p_sys -> b_crypt_video )
water	276:12	0:0	6	p_sys
op	276:17	0:0	6	->
water	276:19	0:0	6	csa
op	276:23	0:0	6	!=
water	276:26	0:0	6	NULL
op	276:31	0:0	6	&&
water	277:13	0:0	6	(
water	277:14	0:0	6	p_input
op	277:21	0:0	6	->
water	277:23	0:0	6	p_fmt
op	277:28	0:0	6	->
water	277:30	0:0	6	i_cat
op	277:36	0:0	6	!=
water	277:39	0:0	6	AUDIO_ES
op	277:48	0:0	6	||
water	277:51	0:0	6	p_sys
op	277:56	0:0	6	->
water	277:58	0:0	6	b_crypt_audio
water	277:71	0:0	6	)
op	277:73	0:0	6	&&
water	278:13	0:0	6	(
water	278:14	0:0	6	p_input
op	278:21	0:0	6	->
water	278:23	0:0	6	p_fmt
op	278:28	0:0	6	->
water	278:30	0:0	6	i_cat
op	278:36	0:0	6	!=
water	278:39	0:0	6	VIDEO_ES
op	278:48	0:0	6	||
water	278:51	0:0	6	p_sys
op	278:56	0:0	6	->
water	278:58	0:0	6	b_crypt_video
water	278:71	0:0	6	)
stmts	279:8	281:8	5	
water	279:8	0:0	6	{
water	280:12	0:0	6	p_ts
op	280:16	0:0	6	->
water	280:18	0:0	6	i_flags
op	280:26	0:0	6	|=
water	280:29	0:0	6	BLOCK_FLAG_SCRAMBLED
water	280:49	0:0	6	;
water	281:8	0:0	6	}
water	282:8	0:0	4	i_packet_pos
op	282:20	0:0	4	++
water	282:22	0:0	4	;
if	286:8	298:8	4	(( p_sys -> b_use_key_frames ) && ( p_ts -> i_flags & BLOCK_FLAG_TYPE_I ))
cond	286:12	286:79	5	( p_sys -> b_use_key_frames ) && ( p_ts -> i_flags & BLOCK_FLAG_TYPE_I )
water	286:12	0:0	6	(
water	286:14	0:0	6	p_sys
op	286:19	0:0	6	->
water	286:21	0:0	6	b_use_key_frames
water	286:38	0:0	6	)
op	286:40	0:0	6	&&
water	286:43	0:0	6	(
water	286:45	0:0	6	p_ts
op	286:49	0:0	6	->
water	286:51	0:0	6	i_flags
op	286:59	0:0	6	&
water	286:61	0:0	6	BLOCK_FLAG_TYPE_I
water	286:79	0:0	6	)
stmts	287:8	298:8	5	
water	287:8	0:0	6	{
if	288:12	295:12	6	(likely (! pat_was_previous ))
cond	288:16	288:42	7	likely (! pat_was_previous )
call	288:16	288:42	8	likely
arg	288:24	288:42	9	!pat_was_previous
op	288:24	0:0	10	!
water	288:25	0:0	10	pat_was_previous
stmts	289:12	295:12	7	
water	289:12	0:0	8	{
decl	290:16	290:49	8	int	startcount
op	290:31	0:0	8	=
water	290:33	0:0	8	chain_ts
op	290:41	0:0	8	.
water	290:42	0:0	8	i_depth
call	291:16	291:41	8	GetPAT
arg	291:24	291:29	9	p_mux
water	291:24	0:0	10	p_mux
arg	291:31	291:41	9	&chain_ts
op	291:31	0:0	10	&
water	291:32	0:0	10	chain_ts
water	291:42	0:0	8	;
call	292:16	292:41	8	GetPMT
arg	292:24	292:29	9	p_mux
water	292:24	0:0	10	p_mux
arg	292:31	292:41	9	&chain_ts
op	292:31	0:0	10	&
water	292:32	0:0	10	chain_ts
water	292:42	0:0	8	;
call	293:16	293:49	8	SetHeader
arg	293:27	293:36	9	&chain_ts
op	293:27	0:0	10	&
water	293:28	0:0	10	chain_ts
arg	293:38	293:49	9	startcount
water	293:38	0:0	10	startcount
water	293:50	0:0	8	;
water	294:16	0:0	8	i_packet_count
op	294:31	0:0	8	+=
water	294:34	0:0	8	(
water	294:35	0:0	8	chain_ts
op	294:43	0:0	8	.
water	294:44	0:0	8	i_depth
op	294:52	0:0	8	-
water	294:54	0:0	8	startcount
water	294:65	0:0	8	)
water	294:66	0:0	8	;
water	295:12	0:0	8	}
else	295:14	297:12	6
stmts	295:19	297:12	7	
water	295:19	0:0	8	{
call	296:16	296:39	8	SetHeader
arg	296:27	296:36	9	&chain_ts
op	296:27	0:0	10	&
water	296:28	0:0	10	chain_ts
arg	296:38	296:39	9	0
water	296:38	0:0	10	0
water	296:40	0:0	8	;
water	297:12	0:0	8	}
water	298:8	0:0	6	}
water	299:8	0:0	4	pat_was_previous
op	299:25	0:0	4	=
water	299:27	0:0	4	false
water	299:32	0:0	4	;
call	301:8	301:43	4	BufferChainAppend
arg	301:27	301:36	5	&chain_ts
op	301:27	0:0	6	&
water	301:28	0:0	6	chain_ts
arg	301:38	301:43	5	p_ts
water	301:38	0:0	6	p_ts
water	301:44	0:0	4	;
water	302:4	0:0	4	}
call	304:4	304:58	2	TSSchedule
arg	304:16	304:21	3	p_mux
water	304:16	0:0	4	p_mux
arg	304:23	304:32	3	&chain_ts
op	304:23	0:0	4	&
water	304:24	0:0	4	chain_ts
arg	304:34	304:46	3	i_pcr_length
water	304:34	0:0	4	i_pcr_length
arg	304:48	304:58	3	i_pcr_dts
water	304:48	0:0	4	i_pcr_dts
water	304:59	0:0	2	;
return	305:4	305:16	2	false
water	305:11	0:0	3	false

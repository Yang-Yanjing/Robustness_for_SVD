func	2:0	59:0	0	static void	decode_display_definition
params	2:37	0:0	1	
param	2:39	2:55	2	decoder_t *	p_dec
param	2:57	2:65	2	bs_t *	s
stmnts	0:0	57:105	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:34	2	uint16_t	i_segment_length
decl	6:4	6:41	2	uint16_t	i_processed_length
op	6:37	0:0	2	=
water	6:39	0:0	2	40
decl	7:4	7:27	2	int	i_version
water	8:4	0:0	2	i_segment_length
op	8:21	0:0	2	=
call	8:23	8:38	2	bs_read
arg	8:32	8:33	3	s
water	8:32	0:0	4	s
arg	8:35	8:38	3	16
water	8:35	0:0	4	16
water	8:39	0:0	2	;
water	9:4	0:0	2	i_version
op	9:21	0:0	2	=
call	9:23	9:37	2	bs_read
arg	9:32	9:33	3	s
water	9:32	0:0	4	s
arg	9:35	9:37	3	4
water	9:35	0:0	4	4
water	9:38	0:0	2	;
if	11:4	16:4	2	(p_sys -> display . i_version == i_version)
cond	11:8	11:36	3	p_sys -> display . i_version == i_version
water	11:8	0:0	4	p_sys
op	11:13	0:0	4	->
water	11:15	0:0	4	display
op	11:22	0:0	4	.
water	11:23	0:0	4	i_version
op	11:33	0:0	4	==
water	11:36	0:0	4	i_version
stmts	12:4	16:4	3	
water	12:4	0:0	4	{
call	14:8	14:43	4	bs_skip
arg	14:17	14:18	5	s
water	14:17	0:0	6	s
arg	14:20	14:43	5	8*i_segment_length-4
water	14:20	0:0	6	8
op	14:21	0:0	6	*
water	14:22	0:0	6	i_segment_length
op	14:39	0:0	6	-
water	14:41	0:0	6	4
water	14:44	0:0	4	;
return	15:8	15:14	4	
water	16:4	0:0	4	}
call	18:4	18:60	2	msg_Dbg
arg	18:13	18:18	3	p_dec
water	18:13	0:0	4	p_dec
arg	18:20	18:48	3	"new display definition: %i"
water	18:20	0:0	4	"new display definition: %i"
arg	18:50	18:60	3	i_version
water	18:50	0:0	4	i_version
water	18:61	0:0	2	;
water	21:4	0:0	2	p_sys
op	21:9	0:0	2	->
water	21:11	0:0	2	display
op	21:18	0:0	2	.
water	21:19	0:0	2	i_version
op	21:29	0:0	2	=
water	21:31	0:0	2	i_version
water	21:40	0:0	2	;
water	22:4	0:0	2	p_sys
op	22:9	0:0	2	->
water	22:11	0:0	2	display
op	22:18	0:0	2	.
water	22:19	0:0	2	b_windowed
op	22:30	0:0	2	=
call	22:32	22:46	2	bs_read
arg	22:41	22:42	3	s
water	22:41	0:0	4	s
arg	22:44	22:46	3	1
water	22:44	0:0	4	1
water	22:47	0:0	2	;
call	23:4	23:18	2	bs_skip
arg	23:13	23:14	3	s
water	23:13	0:0	4	s
arg	23:16	23:18	3	3
water	23:16	0:0	4	3
water	23:19	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	display
op	24:18	0:0	2	.
water	24:19	0:0	2	i_width
op	24:27	0:0	2	=
call	24:29	24:44	2	bs_read
arg	24:38	24:39	3	s
water	24:38	0:0	4	s
arg	24:41	24:44	3	16
water	24:41	0:0	4	16
op	24:45	0:0	2	+
water	24:46	0:0	2	1
water	24:47	0:0	2	;
water	25:4	0:0	2	p_sys
op	25:9	0:0	2	->
water	25:11	0:0	2	display
op	25:18	0:0	2	.
water	25:19	0:0	2	i_height
op	25:28	0:0	2	=
call	25:30	25:45	2	bs_read
arg	25:39	25:40	3	s
water	25:39	0:0	4	s
arg	25:42	25:45	3	16
water	25:42	0:0	4	16
op	25:46	0:0	2	+
water	25:47	0:0	2	1
water	25:48	0:0	2	;
if	26:4	37:4	2	(p_sys -> display . b_windowed)
cond	26:8	26:23	3	p_sys -> display . b_windowed
water	26:8	0:0	4	p_sys
op	26:13	0:0	4	->
water	26:15	0:0	4	display
op	26:22	0:0	4	.
water	26:23	0:0	4	b_windowed
stmts	27:4	37:4	3	
water	27:4	0:0	4	{
call	29:8	29:69	4	msg_Dbg
arg	29:17	29:22	5	p_dec
water	29:17	0:0	6	p_dec
arg	29:24	29:69	5	"display definition with offsets (windowed)"
water	29:24	0:0	6	"display definition with offsets (windowed)"
water	29:70	0:0	4	;
water	32:8	0:0	4	p_sys
op	32:13	0:0	4	->
water	32:15	0:0	4	display
op	32:22	0:0	4	.
water	32:23	0:0	4	i_x
op	32:31	0:0	4	=
call	32:33	32:48	4	bs_read
arg	32:42	32:43	5	s
water	32:42	0:0	6	s
arg	32:45	32:48	5	16
water	32:45	0:0	6	16
water	32:49	0:0	4	;
water	33:8	0:0	4	p_sys
op	33:13	0:0	4	->
water	33:15	0:0	4	display
op	33:22	0:0	4	.
water	33:23	0:0	4	i_max_x
op	33:31	0:0	4	=
call	33:33	33:48	4	bs_read
arg	33:42	33:43	5	s
water	33:42	0:0	6	s
arg	33:45	33:48	5	16
water	33:45	0:0	6	16
water	33:49	0:0	4	;
water	34:8	0:0	4	p_sys
op	34:13	0:0	4	->
water	34:15	0:0	4	display
op	34:22	0:0	4	.
water	34:23	0:0	4	i_y
op	34:31	0:0	4	=
call	34:33	34:48	4	bs_read
arg	34:42	34:43	5	s
water	34:42	0:0	6	s
arg	34:45	34:48	5	16
water	34:45	0:0	6	16
water	34:49	0:0	4	;
water	35:8	0:0	4	p_sys
op	35:13	0:0	4	->
water	35:15	0:0	4	display
op	35:22	0:0	4	.
water	35:23	0:0	4	i_max_y
op	35:31	0:0	4	=
call	35:33	35:48	4	bs_read
arg	35:42	35:43	5	s
water	35:42	0:0	6	s
arg	35:45	35:48	5	16
water	35:45	0:0	6	16
water	35:49	0:0	4	;
water	36:8	0:0	4	i_processed_length
op	36:27	0:0	4	+=
water	36:30	0:0	4	64
water	36:32	0:0	4	;
water	37:4	0:0	4	}
else	38:4	46:4	2
stmts	39:4	46:4	3	
water	39:4	0:0	4	{
water	42:8	0:0	4	p_sys
op	42:13	0:0	4	->
water	42:15	0:0	4	display
op	42:22	0:0	4	.
water	42:23	0:0	4	i_x
op	42:31	0:0	4	=
water	42:33	0:0	4	0
water	42:34	0:0	4	;
water	43:8	0:0	4	p_sys
op	43:13	0:0	4	->
water	43:15	0:0	4	display
op	43:22	0:0	4	.
water	43:23	0:0	4	i_max_x
op	43:31	0:0	4	=
water	43:33	0:0	4	p_sys
op	43:38	0:0	4	->
water	43:40	0:0	4	display
op	43:47	0:0	4	.
water	43:48	0:0	4	i_width
op	43:55	0:0	4	-
water	43:56	0:0	4	1
water	43:57	0:0	4	;
water	44:8	0:0	4	p_sys
op	44:13	0:0	4	->
water	44:15	0:0	4	display
op	44:22	0:0	4	.
water	44:23	0:0	4	i_y
op	44:31	0:0	4	=
water	44:33	0:0	4	0
water	44:34	0:0	4	;
water	45:8	0:0	4	p_sys
op	45:13	0:0	4	->
water	45:15	0:0	4	display
op	45:22	0:0	4	.
water	45:23	0:0	4	i_max_y
op	45:31	0:0	4	=
water	45:33	0:0	4	p_sys
op	45:38	0:0	4	->
water	45:40	0:0	4	display
op	45:47	0:0	4	.
water	45:48	0:0	4	i_height
op	45:56	0:0	4	-
water	45:57	0:0	4	1
water	45:58	0:0	4	;
water	46:4	0:0	4	}
if	47:4	51:4	2	(i_processed_length != i_segment_length * 8)
cond	47:8	47:47	3	i_processed_length != i_segment_length * 8
water	47:8	0:0	4	i_processed_length
op	47:27	0:0	4	!=
water	47:30	0:0	4	i_segment_length
op	47:46	0:0	4	*
water	47:47	0:0	4	8
stmts	48:4	51:4	3	
water	48:4	0:0	4	{
call	49:8	50:59	4	msg_Err
arg	49:17	49:22	5	p_dec
water	49:17	0:0	6	p_dec
arg	49:24	49:78	5	"processed length %d bytes != segment length %d bytes"
water	49:24	0:0	6	"processed length %d bytes != segment length %d bytes"
arg	50:17	50:40	5	i_processed_length/8
water	50:17	0:0	6	i_processed_length
op	50:36	0:0	6	/
water	50:38	0:0	6	8
arg	50:42	50:59	5	i_segment_length
water	50:42	0:0	6	i_segment_length
water	50:60	0:0	4	;
water	51:4	0:0	4	}
call	53:4	54:87	2	msg_Dbg
arg	53:13	53:18	3	p_dec
water	53:13	0:0	4	p_dec
arg	53:20	53:56	3	"version: %d, width: %d, height: %d"
water	53:20	0:0	4	"version: %d, width: %d, height: %d"
arg	54:13	54:37	3	p_sys->display.i_version
water	54:13	0:0	4	p_sys
op	54:18	0:0	4	->
water	54:20	0:0	4	display
op	54:27	0:0	4	.
water	54:28	0:0	4	i_version
arg	54:39	54:61	3	p_sys->display.i_width
water	54:39	0:0	4	p_sys
op	54:44	0:0	4	->
water	54:46	0:0	4	display
op	54:53	0:0	4	.
water	54:54	0:0	4	i_width
arg	54:63	54:87	3	p_sys->display.i_height
water	54:63	0:0	4	p_sys
op	54:68	0:0	4	->
water	54:70	0:0	4	display
op	54:77	0:0	4	.
water	54:78	0:0	4	i_height
water	54:88	0:0	2	;
if	55:4	57:105	2	(p_sys -> display . b_windowed)
cond	55:8	55:23	3	p_sys -> display . b_windowed
water	55:8	0:0	4	p_sys
op	55:13	0:0	4	->
water	55:15	0:0	4	display
op	55:22	0:0	4	.
water	55:23	0:0	4	b_windowed
stmts	56:8	57:105	3	
call	56:8	57:104	4	msg_Dbg
arg	56:17	56:22	5	p_dec
water	56:17	0:0	6	p_dec
arg	56:24	56:64	5	"xmin: %d, xmax: %d, ymin: %d, ymax: %d"
water	56:24	0:0	6	"xmin: %d, xmax: %d, ymin: %d, ymax: %d"
arg	57:17	57:35	5	p_sys->display.i_x
water	57:17	0:0	6	p_sys
op	57:22	0:0	6	->
water	57:24	0:0	6	display
op	57:31	0:0	6	.
water	57:32	0:0	6	i_x
arg	57:37	57:59	5	p_sys->display.i_max_x
water	57:37	0:0	6	p_sys
op	57:42	0:0	6	->
water	57:44	0:0	6	display
op	57:51	0:0	6	.
water	57:52	0:0	6	i_max_x
arg	57:61	57:79	5	p_sys->display.i_y
water	57:61	0:0	6	p_sys
op	57:66	0:0	6	->
water	57:68	0:0	6	display
op	57:75	0:0	6	.
water	57:76	0:0	6	i_y
arg	57:81	57:104	5	p_sys->display.i_max_y
water	57:81	0:0	6	p_sys
op	57:86	0:0	6	->
water	57:88	0:0	6	display
op	57:95	0:0	6	.
water	57:96	0:0	6	i_max_y
water	57:105	0:0	4	;

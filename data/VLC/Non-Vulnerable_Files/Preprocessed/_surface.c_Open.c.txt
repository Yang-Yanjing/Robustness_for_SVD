func	2:0	102:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	p_this
stmnts	0:0	101:21	1	
decl	4:4	4:49	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:41	0:0	2	*
water	4:42	0:0	2	)
water	4:43	0:0	2	p_this
decl	5:4	5:22	2	video_format_t	fmt
call	6:4	6:45	2	video_format_ApplyRotation
arg	6:31	6:35	3	&fmt
op	6:31	0:0	4	&
water	6:32	0:0	4	fmt
arg	6:37	6:45	3	&vd->fmt
op	6:37	0:0	4	&
water	6:38	0:0	4	vd
op	6:40	0:0	4	->
water	6:42	0:0	4	fmt
water	6:46	0:0	2	;
if	7:4	8:27	2	(fmt . i_chroma == VLC_CODEC_ANDROID_OPAQUE)
cond	7:8	7:24	3	fmt . i_chroma == VLC_CODEC_ANDROID_OPAQUE
water	7:8	0:0	4	fmt
op	7:11	0:0	4	.
water	7:12	0:0	4	i_chroma
op	7:21	0:0	4	==
water	7:24	0:0	4	VLC_CODEC_ANDROID_OPAQUE
stmts	8:8	8:27	3	
return	8:8	8:27	4	VLC_EGENERIC
water	8:15	0:0	5	VLC_EGENERIC
if	10:4	13:4	2	(vlc_mutex_trylock (& single_instance ) != 0)
cond	10:8	10:47	3	vlc_mutex_trylock (& single_instance ) != 0
call	10:8	10:42	4	vlc_mutex_trylock
arg	10:26	10:42	5	&single_instance
op	10:26	0:0	6	&
water	10:27	0:0	6	single_instance
op	10:44	0:0	4	!=
water	10:47	0:0	4	0
stmts	10:50	13:4	3	
water	10:50	0:0	4	{
call	11:8	11:66	4	msg_Err
arg	11:16	11:18	5	vd
water	11:16	0:0	6	vd
arg	11:20	11:66	5	"Can't start more than one instance at a time"
water	11:20	0:0	6	"Can't start more than one instance at a time"
water	11:67	0:0	4	;
return	12:8	12:27	4	VLC_EGENERIC
water	12:15	0:0	5	VLC_EGENERIC
water	13:4	0:0	4	}
decl	15:4	15:82	2	vout_display_sys_t	*sys
op	15:28	0:0	2	=
water	15:30	0:0	2	(
water	15:31	0:0	2	struct
water	15:38	0:0	2	vout_display_sys_t
op	15:56	0:0	2	*
water	15:57	0:0	2	)
call	15:59	15:81	3	calloc
arg	15:66	15:67	4	1
water	15:66	0:0	5	1
arg	15:69	15:81	4	sizeof(*sys)
op	15:69	0:0	5	sizeof
water	15:75	0:0	5	(
op	15:76	0:0	5	*
water	15:77	0:0	5	sys
water	15:80	0:0	5	)
if	16:4	19:4	2	(! sys)
cond	16:8	16:9	3	! sys
op	16:8	0:0	4	!
water	16:9	0:0	4	sys
stmts	16:14	19:4	3	
water	16:14	0:0	4	{
call	17:8	17:41	4	vlc_mutex_unlock
arg	17:25	17:41	5	&single_instance
op	17:25	0:0	6	&
water	17:26	0:0	6	single_instance
water	17:42	0:0	4	;
return	18:8	18:25	4	VLC_ENOMEM
water	18:15	0:0	5	VLC_ENOMEM
water	19:4	0:0	4	}
water	21:4	0:0	2	sys
op	21:7	0:0	2	->
water	21:9	0:0	2	p_library
op	21:19	0:0	2	=
call	21:21	21:60	2	LoadNativeWindowAPI
arg	21:41	21:60	3	&sys->native_window
op	21:41	0:0	4	&
water	21:42	0:0	4	sys
op	21:45	0:0	4	->
water	21:47	0:0	4	native_window
water	21:61	0:0	2	;
water	22:4	0:0	2	sys
op	22:7	0:0	2	->
water	22:9	0:0	2	s_unlockAndPost
op	22:25	0:0	2	=
water	22:27	0:0	2	(
water	22:28	0:0	2	Surface_unlockAndPost
water	22:49	0:0	2	)
water	22:50	0:0	2	sys
op	22:53	0:0	2	->
water	22:55	0:0	2	native_window
op	22:68	0:0	2	.
water	22:69	0:0	2	unlockAndPost
water	22:82	0:0	2	;
if	23:4	24:41	2	(! sys -> p_library)
cond	23:8	23:14	3	! sys -> p_library
op	23:8	0:0	4	!
water	23:9	0:0	4	sys
op	23:12	0:0	4	->
water	23:14	0:0	4	p_library
stmts	24:8	24:41	3	
water	24:8	0:0	4	sys
op	24:11	0:0	4	->
water	24:13	0:0	4	p_library
op	24:23	0:0	4	=
call	24:25	24:40	4	InitLibrary
arg	24:37	24:40	5	sys
water	24:37	0:0	6	sys
water	24:41	0:0	4	;
if	25:4	30:4	2	(! sys -> p_library)
cond	25:8	25:14	3	! sys -> p_library
op	25:8	0:0	4	!
water	25:9	0:0	4	sys
op	25:12	0:0	4	->
water	25:14	0:0	4	p_library
stmts	25:25	30:4	3	
water	25:25	0:0	4	{
call	26:8	26:16	4	free
arg	26:13	26:16	5	sys
water	26:13	0:0	6	sys
water	26:17	0:0	4	;
call	27:8	27:104	4	msg_Err
arg	27:16	27:18	5	vd
water	27:16	0:0	6	vd
arg	27:20	27:104	5	"Could not initialize libandroid.so/libui.so/libgui.so/libsurfaceflinger_client.so!"
water	27:20	0:0	6	"Could not initialize libandroid.so/libui.so/libgui.so/libsurfaceflinger_client.so!"
water	27:105	0:0	4	;
call	28:8	28:41	4	vlc_mutex_unlock
arg	28:25	28:41	5	&single_instance
op	28:25	0:0	6	&
water	28:26	0:0	6	single_instance
water	28:42	0:0	4	;
return	29:8	29:27	4	VLC_EGENERIC
water	29:15	0:0	5	VLC_EGENERIC
water	30:4	0:0	4	}
decl	32:4	32:62	2	char	*psz_fcc
op	32:18	0:0	2	=
call	32:20	32:61	3	var_InheritString
arg	32:38	32:40	4	vd
water	32:38	0:0	5	vd
arg	32:42	32:61	4	CFG_PREFIX"chroma"
water	32:42	0:0	5	CFG_PREFIX
water	32:53	0:0	5	"chroma"
if	33:4	36:4	2	(psz_fcc)
cond	33:8	33:8	3	psz_fcc
water	33:8	0:0	4	psz_fcc
stmts	33:18	36:4	3	
water	33:18	0:0	4	{
water	34:8	0:0	4	fmt
op	34:11	0:0	4	.
water	34:12	0:0	4	i_chroma
op	34:21	0:0	4	=
call	34:23	34:70	4	vlc_fourcc_GetCodecFromString
arg	34:53	34:61	5	VIDEO_ES
water	34:53	0:0	6	VIDEO_ES
arg	34:63	34:70	5	psz_fcc
water	34:63	0:0	6	psz_fcc
water	34:71	0:0	4	;
call	35:8	35:20	4	free
arg	35:13	35:20	5	psz_fcc
water	35:13	0:0	6	psz_fcc
water	35:21	0:0	4	;
water	36:4	0:0	4	}
else	36:6	37:38	2
stmts	37:8	37:38	3	
water	37:8	0:0	4	fmt
op	37:11	0:0	4	.
water	37:12	0:0	4	i_chroma
op	37:21	0:0	4	=
water	37:23	0:0	4	VLC_CODEC_RGB32
water	37:38	0:0	4	;
switch	38:4	57:4	2	(fmt . i_chroma)
cond	38:11	38:15	3	fmt . i_chroma
water	38:11	0:0	4	fmt
op	38:14	0:0	4	.
water	38:15	0:0	4	i_chroma
stmts	38:25	57:4	3	
water	38:25	0:0	4	{
label	39:8	39:27	4	case VLC_CODEC_YV12 :
water	42:12	0:0	4	fmt
op	42:15	0:0	4	.
water	42:16	0:0	4	i_chroma
op	42:25	0:0	4	=
water	42:27	0:0	4	VLC_CODEC_I420
water	42:41	0:0	4	;
label	43:8	43:27	4	case VLC_CODEC_I420 :
break	44:12	44:17	4	
label	45:8	45:28	4	case VLC_CODEC_RGB16 :
water	46:12	0:0	4	fmt
op	46:15	0:0	4	.
water	46:16	0:0	4	i_bmask
op	46:24	0:0	4	=
water	46:26	0:0	4	0
water	46:27	0:0	4	x0000001f
water	46:36	0:0	4	;
water	47:12	0:0	4	fmt
op	47:15	0:0	4	.
water	47:16	0:0	4	i_gmask
op	47:24	0:0	4	=
water	47:26	0:0	4	0
water	47:27	0:0	4	x000007e0
water	47:36	0:0	4	;
water	48:12	0:0	4	fmt
op	48:15	0:0	4	.
water	48:16	0:0	4	i_rmask
op	48:24	0:0	4	=
water	48:26	0:0	4	0
water	48:27	0:0	4	x0000f800
water	48:36	0:0	4	;
break	49:12	49:17	4	
label	50:8	50:28	4	case VLC_CODEC_RGB32 :
water	51:12	0:0	4	fmt
op	51:15	0:0	4	.
water	51:16	0:0	4	i_rmask
op	51:25	0:0	4	=
water	51:27	0:0	4	0
water	51:28	0:0	4	x000000ff
water	51:37	0:0	4	;
water	52:12	0:0	4	fmt
op	52:15	0:0	4	.
water	52:16	0:0	4	i_gmask
op	52:25	0:0	4	=
water	52:27	0:0	4	0
water	52:28	0:0	4	x0000ff00
water	52:37	0:0	4	;
water	53:12	0:0	4	fmt
op	53:15	0:0	4	.
water	53:16	0:0	4	i_bmask
op	53:25	0:0	4	=
water	53:27	0:0	4	0
water	53:28	0:0	4	x00ff0000
water	53:37	0:0	4	;
break	54:12	54:17	4	
label	55:8	55:15	4	default :
return	56:12	56:31	4	VLC_EGENERIC
water	56:19	0:0	5	VLC_EGENERIC
water	57:4	0:0	4	}
call	58:4	58:28	2	video_format_FixRgb
arg	58:24	58:28	3	&fmt
op	58:24	0:0	4	&
water	58:25	0:0	4	fmt
water	58:29	0:0	2	;
call	59:4	59:58	2	msg_Dbg
arg	59:12	59:14	3	vd
water	59:12	0:0	4	vd
arg	59:16	59:36	3	"Pixel format %4.4s"
water	59:16	0:0	4	"Pixel format %4.4s"
arg	59:38	59:58	3	(char*)&fmt.i_chroma
water	59:38	0:0	4	(
water	59:39	0:0	4	char
op	59:43	0:0	4	*
water	59:44	0:0	4	)
op	59:45	0:0	4	&
water	59:46	0:0	4	fmt
op	59:49	0:0	4	.
water	59:50	0:0	4	i_chroma
water	59:59	0:0	2	;
water	60:4	0:0	2	sys
op	60:7	0:0	2	->
water	60:9	0:0	2	fmt
op	60:13	0:0	2	=
water	60:15	0:0	2	fmt
water	60:18	0:0	2	;
decl	62:4	62:51	2	picture_sys_t	*picsys
op	62:26	0:0	2	=
call	62:28	62:50	3	malloc
arg	62:35	62:50	4	sizeof(*picsys)
op	62:35	0:0	5	sizeof
water	62:41	0:0	5	(
op	62:42	0:0	5	*
water	62:43	0:0	5	picsys
water	62:49	0:0	5	)
if	63:4	64:19	2	(unlikely (picsys == NULL ))
cond	63:8	63:31	3	unlikely (picsys == NULL )
call	63:8	63:31	4	unlikely
arg	63:17	63:31	5	picsys==NULL
water	63:17	0:0	6	picsys
op	63:24	0:0	6	==
water	63:27	0:0	6	NULL
stmts	64:8	64:19	3	
goto	64:8	64:19	4	enomem
water	64:13	0:0	5	enomem
water	65:4	0:0	2	picsys
op	65:10	0:0	2	->
water	65:12	0:0	2	sys
op	65:16	0:0	2	=
water	65:18	0:0	2	sys
water	65:21	0:0	2	;
decl	66:4	66:53	2	picture_resource_t	resource
op	66:32	0:0	2	=
water	66:34	0:0	2	{
op	66:36	0:0	2	.
water	66:37	0:0	2	p_sys
op	66:43	0:0	2	=
water	66:45	0:0	2	picsys
water	66:52	0:0	2	}
decl	67:4	67:65	2	picture_t	*picture
op	67:23	0:0	2	=
call	67:25	67:64	3	picture_NewFromResource
arg	67:49	67:53	4	&fmt
op	67:49	0:0	5	&
water	67:50	0:0	5	fmt
arg	67:55	67:64	4	&resource
op	67:55	0:0	5	&
water	67:56	0:0	5	resource
if	68:4	71:4	2	(! picture)
cond	68:8	68:9	3	! picture
op	68:8	0:0	4	!
water	68:9	0:0	4	picture
stmts	68:18	71:4	3	
water	68:18	0:0	4	{
call	69:8	69:19	4	free
arg	69:13	69:19	5	picsys
water	69:13	0:0	6	picsys
water	69:20	0:0	4	;
goto	70:8	70:19	4	enomem
water	70:13	0:0	5	enomem
water	71:4	0:0	4	}
decl	73:4	73:41	2	picture_pool_configuration_t	pool_cfg
call	74:4	74:41	2	memset
arg	74:11	74:20	3	&pool_cfg
op	74:11	0:0	4	&
water	74:12	0:0	4	pool_cfg
arg	74:22	74:23	3	0
water	74:22	0:0	4	0
arg	74:25	74:41	3	sizeof(pool_cfg)
op	74:25	0:0	4	sizeof
water	74:31	0:0	4	(
water	74:32	0:0	4	pool_cfg
water	74:40	0:0	4	)
water	74:42	0:0	2	;
water	75:4	0:0	2	pool_cfg
op	75:12	0:0	2	.
water	75:13	0:0	2	picture_count
op	75:27	0:0	2	=
water	75:29	0:0	2	1
water	75:30	0:0	2	;
water	76:4	0:0	2	pool_cfg
op	76:12	0:0	2	.
water	76:13	0:0	2	picture
op	76:27	0:0	2	=
op	76:29	0:0	2	&
water	76:30	0:0	2	picture
water	76:37	0:0	2	;
water	77:4	0:0	2	pool_cfg
op	77:12	0:0	2	.
water	77:13	0:0	2	lock
op	77:27	0:0	2	=
water	77:29	0:0	2	AndroidLockSurface
water	77:47	0:0	2	;
water	78:4	0:0	2	pool_cfg
op	78:12	0:0	2	.
water	78:13	0:0	2	unlock
op	78:27	0:0	2	=
water	78:29	0:0	2	AndroidUnlockSurface
water	78:49	0:0	2	;
water	79:4	0:0	2	sys
op	79:7	0:0	2	->
water	79:9	0:0	2	pool
op	79:14	0:0	2	=
call	79:16	79:50	2	picture_pool_NewExtended
arg	79:41	79:50	3	&pool_cfg
op	79:41	0:0	4	&
water	79:42	0:0	4	pool_cfg
water	79:51	0:0	2	;
if	80:4	83:4	2	(! sys -> pool)
cond	80:8	80:14	3	! sys -> pool
op	80:8	0:0	4	!
water	80:9	0:0	4	sys
op	80:12	0:0	4	->
water	80:14	0:0	4	pool
stmts	80:20	83:4	3	
water	80:20	0:0	4	{
call	81:8	81:31	4	picture_Release
arg	81:24	81:31	5	picture
water	81:24	0:0	6	picture
water	81:32	0:0	4	;
goto	82:8	82:19	4	enomem
water	82:13	0:0	5	enomem
water	83:4	0:0	4	}
water	85:4	0:0	2	vd
op	85:6	0:0	2	->
water	85:8	0:0	2	sys
op	85:16	0:0	2	=
water	85:18	0:0	2	sys
water	85:21	0:0	2	;
water	86:4	0:0	2	vd
op	86:6	0:0	2	->
water	86:8	0:0	2	fmt
op	86:16	0:0	2	=
water	86:18	0:0	2	fmt
water	86:21	0:0	2	;
water	87:4	0:0	2	vd
op	87:6	0:0	2	->
water	87:8	0:0	2	pool
op	87:16	0:0	2	=
water	87:18	0:0	2	Pool
water	87:22	0:0	2	;
water	88:4	0:0	2	vd
op	88:6	0:0	2	->
water	88:8	0:0	2	display
op	88:16	0:0	2	=
water	88:18	0:0	2	Display
water	88:25	0:0	2	;
water	89:4	0:0	2	vd
op	89:6	0:0	2	->
water	89:8	0:0	2	control
op	89:16	0:0	2	=
water	89:18	0:0	2	Control
water	89:25	0:0	2	;
water	90:4	0:0	2	vd
op	90:6	0:0	2	->
water	90:8	0:0	2	prepare
op	90:16	0:0	2	=
water	90:18	0:0	2	NULL
water	90:22	0:0	2	;
water	91:4	0:0	2	vd
op	91:6	0:0	2	->
water	91:8	0:0	2	manage
op	91:16	0:0	2	=
water	91:18	0:0	2	Manage
water	91:24	0:0	2	;
call	93:4	93:46	2	vout_display_SendEventFullscreen
arg	93:37	93:39	3	vd
water	93:37	0:0	4	vd
arg	93:41	93:46	3	false
water	93:41	0:0	4	false
water	93:47	0:0	2	;
water	94:4	0:0	2	sys
op	94:7	0:0	2	->
water	94:9	0:0	2	i_sar_num
op	94:19	0:0	2	=
water	94:21	0:0	2	vd
op	94:23	0:0	2	->
water	94:25	0:0	2	source
op	94:31	0:0	2	.
water	94:32	0:0	2	i_sar_num
water	94:41	0:0	2	;
water	95:4	0:0	2	sys
op	95:7	0:0	2	->
water	95:9	0:0	2	i_sar_den
op	95:19	0:0	2	=
water	95:21	0:0	2	vd
op	95:23	0:0	2	->
water	95:25	0:0	2	source
op	95:31	0:0	2	.
water	95:32	0:0	2	i_sar_den
water	95:41	0:0	2	;
return	96:4	96:22	2	VLC_SUCCESS
water	96:11	0:0	3	VLC_SUCCESS
label	97:0	97:6	2	enomem :
call	98:4	98:26	2	dlclose
arg	98:12	98:26	3	sys->p_library
water	98:12	0:0	4	sys
op	98:15	0:0	4	->
water	98:17	0:0	4	p_library
water	98:27	0:0	2	;
call	99:4	99:12	2	free
arg	99:9	99:12	3	sys
water	99:9	0:0	4	sys
water	99:13	0:0	2	;
call	100:4	100:37	2	vlc_mutex_unlock
arg	100:21	100:37	3	&single_instance
op	100:21	0:0	4	&
water	100:22	0:0	4	single_instance
water	100:38	0:0	2	;
return	101:4	101:21	2	VLC_ENOMEM
water	101:11	0:0	3	VLC_ENOMEM

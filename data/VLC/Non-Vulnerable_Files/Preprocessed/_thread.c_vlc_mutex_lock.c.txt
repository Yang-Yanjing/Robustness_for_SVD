func	2:0	21:0	0	void	vlc_mutex_lock
params	2:20	0:0	1	
param	2:21	2:41	2	vlc_mutex_t *	p_mutex
stmnts	4:4	20:42	1	
if	4:4	19:4	2	(! p_mutex -> dynamic)
cond	4:8	4:18	3	! p_mutex -> dynamic
op	4:8	0:0	4	!
water	4:9	0:0	4	p_mutex
op	4:16	0:0	4	->
water	4:18	0:0	4	dynamic
stmts	5:4	19:4	3	
water	5:4	0:0	4	{
decl	6:8	6:36	4	int	canc
op	6:17	0:0	4	=
call	6:19	6:35	5	vlc_savecancel
call	7:8	7:39	4	assert
arg	7:16	7:39	5	p_mutex!=&super_mutex
water	7:16	0:0	6	p_mutex
op	7:24	0:0	6	!=
op	7:27	0:0	6	&
water	7:28	0:0	6	super_mutex
water	7:40	0:0	4	;
call	8:8	8:36	4	vlc_mutex_lock
arg	8:24	8:36	5	&super_mutex
op	8:24	0:0	6	&
water	8:25	0:0	6	super_mutex
water	8:37	0:0	4	;
while	9:8	14:8	4	(p_mutex -> locked)
cond	9:15	9:24	5	p_mutex -> locked
water	9:15	0:0	6	p_mutex
op	9:22	0:0	6	->
water	9:24	0:0	6	locked
stmts	10:8	14:8	5	
water	10:8	0:0	6	{
water	11:12	0:0	6	p_mutex
op	11:19	0:0	6	->
water	11:21	0:0	6	contention
op	11:31	0:0	6	++
water	11:33	0:0	6	;
call	12:12	12:56	6	vlc_cond_wait
arg	12:27	12:42	7	&super_variable
op	12:27	0:0	8	&
water	12:28	0:0	8	super_variable
arg	12:44	12:56	7	&super_mutex
op	12:44	0:0	8	&
water	12:45	0:0	8	super_mutex
water	12:57	0:0	6	;
water	13:12	0:0	6	p_mutex
op	13:19	0:0	6	->
water	13:21	0:0	6	contention
op	13:31	0:0	6	--
water	13:33	0:0	6	;
water	14:8	0:0	6	}
water	15:8	0:0	4	p_mutex
op	15:15	0:0	4	->
water	15:17	0:0	4	locked
op	15:24	0:0	4	=
water	15:26	0:0	4	true
water	15:30	0:0	4	;
call	16:8	16:38	4	vlc_mutex_unlock
arg	16:26	16:38	5	&super_mutex
op	16:26	0:0	6	&
water	16:27	0:0	6	super_mutex
water	16:39	0:0	4	;
call	17:8	17:31	4	vlc_restorecancel
arg	17:27	17:31	5	canc
water	17:27	0:0	6	canc
water	17:32	0:0	4	;
return	18:8	18:14	4	
water	19:4	0:0	4	}
call	20:4	20:41	2	EnterCriticalSection
arg	20:26	20:41	3	&p_mutex->mutex
op	20:26	0:0	4	&
water	20:27	0:0	4	p_mutex
op	20:34	0:0	4	->
water	20:36	0:0	4	mutex
water	20:42	0:0	2	;

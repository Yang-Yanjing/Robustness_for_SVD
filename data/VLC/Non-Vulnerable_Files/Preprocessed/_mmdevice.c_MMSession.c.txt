func	2:0	240:0	0	static HRESULT	MMSession
params	2:24	0:0	1	
param	2:25	2:45	2	audio_output_t *	aout
param	2:47	2:70	2	IMMDeviceEnumerator *	it
stmnts	0:0	239:15	1	
decl	4:4	4:31	2	aout_sys_t	*sys
op	4:20	0:0	2	=
water	4:22	0:0	2	aout
op	4:26	0:0	2	->
water	4:28	0:0	2	sys
decl	5:4	5:33	2	IAudioSessionManager	*manager
decl	6:4	6:33	2	IAudioSessionControl	*control
decl	7:4	7:30	2	ISimpleAudioVolume	*volume
decl	8:4	8:34	2	IAudioEndpointVolume	*endpoint
decl	9:4	9:12	2	void	*pv
decl	10:4	10:14	2	HRESULT	hr
decl	11:4	11:27	2	float	base_volume
op	11:22	0:0	2	=
water	11:24	0:0	2	1
op	11:25	0:0	2	.
water	11:26	0:0	2	f
call	12:4	12:30	2	assert
arg	12:11	12:30	3	sys->device!=NULL
water	12:11	0:0	4	sys
op	12:14	0:0	4	->
water	12:16	0:0	4	device
op	12:23	0:0	4	!=
water	12:26	0:0	4	NULL
water	12:31	0:0	2	;
call	13:4	13:27	2	assert
arg	13:11	13:27	3	sys->dev==NULL
water	13:11	0:0	4	sys
op	13:14	0:0	4	->
water	13:16	0:0	4	dev
op	13:20	0:0	4	==
water	13:23	0:0	4	NULL
water	13:28	0:0	2	;
if	14:4	22:4	2	(sys -> device != default_device)
cond	14:8	14:23	3	sys -> device != default_device
water	14:8	0:0	4	sys
op	14:11	0:0	4	->
water	14:13	0:0	4	device
op	14:20	0:0	4	!=
water	14:23	0:0	4	default_device
stmts	15:4	22:4	3	
water	15:4	0:0	4	{
call	16:8	16:62	4	msg_Dbg
arg	16:16	16:20	5	aout
water	16:16	0:0	6	aout
arg	16:22	16:49	5	"using selected device %ls"
water	16:22	0:0	6	"using selected device %ls"
arg	16:51	16:62	5	sys->device
water	16:51	0:0	6	sys
op	16:54	0:0	6	->
water	16:56	0:0	6	device
water	16:63	0:0	4	;
water	17:8	0:0	4	hr
op	17:11	0:0	4	=
call	17:13	17:69	4	IMMDeviceEnumerator_GetDevice
arg	17:43	17:45	5	it
water	17:43	0:0	6	it
arg	17:47	17:58	5	sys->device
water	17:47	0:0	6	sys
op	17:50	0:0	6	->
water	17:52	0:0	6	device
arg	17:60	17:69	5	&sys->dev
op	17:60	0:0	6	&
water	17:61	0:0	6	sys
op	17:64	0:0	6	->
water	17:66	0:0	6	dev
water	17:70	0:0	4	;
if	18:8	20:36	4	(FAILED (hr ))
cond	18:12	18:21	5	FAILED (hr )
call	18:12	18:21	6	FAILED
arg	18:19	18:21	7	hr
water	18:19	0:0	8	hr
stmts	19:12	20:36	5	
call	19:12	20:35	6	msg_Err
arg	19:20	19:24	7	aout
water	19:20	0:0	8	aout
arg	19:26	19:72	7	"cannot get selected device %ls (error 0x%lx)"
water	19:26	0:0	8	"cannot get selected device %ls (error 0x%lx)"
arg	20:20	20:31	7	sys->device
water	20:20	0:0	8	sys
op	20:23	0:0	8	->
water	20:25	0:0	8	device
arg	20:33	20:35	7	hr
water	20:33	0:0	8	hr
water	20:36	0:0	6	;
call	21:8	21:24	4	free
arg	21:13	21:24	5	sys->device
water	21:13	0:0	6	sys
op	21:16	0:0	6	->
water	21:18	0:0	6	device
water	21:25	0:0	4	;
water	22:4	0:0	4	}
else	23:4	24:41	2
stmts	24:8	24:41	3	
water	24:8	0:0	4	hr
op	24:11	0:0	4	=
water	24:13	0:0	4	AUDCLNT_E_DEVICE_INVALIDATED
water	24:41	0:0	4	;
while	25:4	33:4	2	(hr == AUDCLNT_E_DEVICE_INVALIDATED)
cond	25:11	25:17	3	hr == AUDCLNT_E_DEVICE_INVALIDATED
water	25:11	0:0	4	hr
op	25:14	0:0	4	==
water	25:17	0:0	4	AUDCLNT_E_DEVICE_INVALIDATED
stmts	26:4	33:4	3	
water	26:4	0:0	4	{
call	28:8	28:44	4	msg_Dbg
arg	28:16	28:20	5	aout
water	28:16	0:0	6	aout
arg	28:22	28:44	5	"using default device"
water	28:22	0:0	6	"using default device"
water	28:45	0:0	4	;
water	29:8	0:0	4	hr
op	29:11	0:0	4	=
call	29:13	30:76	4	IMMDeviceEnumerator_GetDefaultAudioEndpoint
arg	29:57	29:59	5	it
water	29:57	0:0	6	it
arg	29:61	29:68	5	eRender
water	29:61	0:0	6	eRender
arg	30:57	30:65	5	eConsole
water	30:57	0:0	6	eConsole
arg	30:67	30:76	5	&sys->dev
op	30:67	0:0	6	&
water	30:68	0:0	6	sys
op	30:71	0:0	6	->
water	30:73	0:0	6	dev
water	30:77	0:0	4	;
if	31:8	32:72	4	(FAILED (hr ))
cond	31:12	31:21	5	FAILED (hr )
call	31:12	31:21	6	FAILED
arg	31:19	31:21	7	hr
water	31:19	0:0	8	hr
stmts	32:12	32:72	5	
call	32:12	32:71	6	msg_Err
arg	32:20	32:24	7	aout
water	32:20	0:0	8	aout
arg	32:26	32:67	7	"cannot get default device (error 0x%lx)"
water	32:26	0:0	8	"cannot get default device (error 0x%lx)"
arg	32:69	32:71	7	hr
water	32:69	0:0	8	hr
water	32:72	0:0	6	;
water	33:4	0:0	4	}
water	34:4	0:0	2	sys
op	34:7	0:0	2	->
water	34:9	0:0	2	device
op	34:16	0:0	2	=
water	34:18	0:0	2	NULL
water	34:22	0:0	2	;
call	35:4	35:37	2	WakeConditionVariable
arg	35:26	35:37	3	&sys->ready
op	35:26	0:0	4	&
water	35:27	0:0	4	sys
op	35:30	0:0	4	->
water	35:32	0:0	4	ready
water	35:38	0:0	2	;
if	36:4	50:4	2	(SUCCEEDED (hr ))
cond	36:8	36:20	3	SUCCEEDED (hr )
call	36:8	36:20	4	SUCCEEDED
arg	36:18	36:20	5	hr
water	36:18	0:0	6	hr
stmts	37:4	50:4	3	
water	37:4	0:0	4	{
decl	38:8	38:21	4	LPWSTR	wdevid
water	39:8	0:0	4	hr
op	39:11	0:0	4	=
call	39:13	39:46	4	IMMDevice_GetId
arg	39:29	39:37	5	sys->dev
water	39:29	0:0	6	sys
op	39:32	0:0	6	->
water	39:34	0:0	6	dev
arg	39:39	39:46	5	&wdevid
op	39:39	0:0	6	&
water	39:40	0:0	6	wdevid
water	39:47	0:0	4	;
if	40:8	49:8	4	(SUCCEEDED (hr ))
cond	40:12	40:24	5	SUCCEEDED (hr )
call	40:12	40:24	6	SUCCEEDED
arg	40:22	40:24	7	hr
water	40:22	0:0	8	hr
stmts	41:8	49:8	5	
water	41:8	0:0	6	{
decl	42:12	42:39	6	char	*id
op	42:21	0:0	6	=
call	42:23	42:38	7	FromWide
arg	42:32	42:38	8	wdevid
water	42:32	0:0	9	wdevid
call	43:12	43:32	6	CoTaskMemFree
arg	43:26	43:32	7	wdevid
water	43:26	0:0	8	wdevid
water	43:33	0:0	6	;
if	44:12	48:12	6	(likely (id != NULL ))
cond	44:16	44:33	7	likely (id != NULL )
call	44:16	44:33	8	likely
arg	44:23	44:33	9	id!=NULL
water	44:23	0:0	10	id
op	44:26	0:0	10	!=
water	44:29	0:0	10	NULL
stmts	45:12	48:12	7	
water	45:12	0:0	8	{
call	46:16	46:42	8	aout_DeviceReport
arg	46:34	46:38	9	aout
water	46:34	0:0	10	aout
arg	46:40	46:42	9	id
water	46:40	0:0	10	id
water	46:43	0:0	8	;
call	47:16	47:23	8	free
arg	47:21	47:23	9	id
water	47:21	0:0	10	id
water	47:24	0:0	8	;
water	48:12	0:0	8	}
water	49:8	0:0	6	}
water	50:4	0:0	4	}
else	51:4	55:4	2
stmts	52:4	55:4	3	
water	52:4	0:0	4	{
call	53:8	53:70	4	msg_Err
arg	53:16	53:20	5	aout
water	53:16	0:0	6	aout
arg	53:22	53:66	5	"cannot get device identifier (error 0x%lx)"
water	53:22	0:0	6	"cannot get device identifier (error 0x%lx)"
arg	53:68	53:70	5	hr
water	53:68	0:0	6	hr
water	53:71	0:0	4	;
return	54:8	54:17	4	hr
water	54:15	0:0	5	hr
water	55:4	0:0	4	}
water	57:4	0:0	2	hr
op	57:7	0:0	2	=
call	57:9	58:49	2	IMMDevice_Activate
arg	57:28	57:36	3	sys->dev
water	57:28	0:0	4	sys
op	57:31	0:0	4	->
water	57:33	0:0	4	dev
arg	57:38	57:63	3	&IID_IAudioSessionManager
op	57:38	0:0	4	&
water	57:39	0:0	4	IID_IAudioSessionManager
arg	58:28	58:38	3	CLSCTX_ALL
water	58:28	0:0	4	CLSCTX_ALL
arg	58:40	58:44	3	NULL
water	58:40	0:0	4	NULL
arg	58:46	58:49	3	&pv
op	58:46	0:0	4	&
water	58:47	0:0	4	pv
water	58:50	0:0	2	;
water	59:4	0:0	2	manager
op	59:12	0:0	2	=
water	59:14	0:0	2	pv
water	59:16	0:0	2	;
if	60:4	107:4	2	(SUCCEEDED (hr ))
cond	60:8	60:20	3	SUCCEEDED (hr )
call	60:8	60:20	4	SUCCEEDED
arg	60:18	60:20	5	hr
water	60:18	0:0	6	hr
stmts	61:4	107:4	3	
water	61:4	0:0	4	{
decl	62:8	62:40	4	LPCGUID	guid
op	62:21	0:0	4	=
op	62:23	0:0	4	&
water	62:24	0:0	4	GUID_VLC_AUD_OUT
water	64:8	0:0	4	hr
op	64:11	0:0	4	=
call	64:13	65:65	4	IAudioSessionManager_GetAudioSessionControl
arg	64:57	64:64	5	manager
water	64:57	0:0	6	manager
arg	64:66	64:70	5	guid
water	64:66	0:0	6	guid
arg	64:72	64:73	5	0
water	64:72	0:0	6	0
arg	65:57	65:65	5	&control
op	65:57	0:0	6	&
water	65:58	0:0	6	control
water	65:66	0:0	4	;
if	66:8	73:8	4	(SUCCEEDED (hr ))
cond	66:12	66:24	5	SUCCEEDED (hr )
call	66:12	66:24	6	SUCCEEDED
arg	66:22	66:24	7	hr
water	66:22	0:0	8	hr
stmts	67:8	73:8	5	
water	67:8	0:0	6	{
decl	68:12	68:61	6	wchar_t	*ua
op	68:24	0:0	6	=
call	68:26	68:60	7	var_InheritWide
arg	68:42	68:46	8	aout
water	68:42	0:0	9	aout
arg	68:48	68:60	8	"user-agent"
water	68:48	0:0	9	"user-agent"
call	69:12	69:65	6	IAudioSessionControl_SetDisplayName
arg	69:48	69:55	7	control
water	69:48	0:0	8	control
arg	69:57	69:59	7	ua
water	69:57	0:0	8	ua
arg	69:61	69:65	7	NULL
water	69:61	0:0	8	NULL
water	69:66	0:0	6	;
call	70:12	70:19	6	free
arg	70:17	70:19	7	ua
water	70:17	0:0	8	ua
water	70:20	0:0	6	;
call	71:12	72:77	6	IAudioSessionControl_RegisterAudioSessionNotification
arg	71:66	71:73	7	control
water	71:66	0:0	8	control
arg	72:57	72:77	7	&sys->session_events
op	72:57	0:0	8	&
water	72:58	0:0	8	sys
op	72:61	0:0	8	->
water	72:63	0:0	8	session_events
water	72:78	0:0	6	;
water	73:8	0:0	6	}
else	74:8	75:73	4
stmts	75:12	75:73	5	
call	75:12	75:72	6	msg_Err
arg	75:20	75:24	7	aout
water	75:20	0:0	8	aout
arg	75:26	75:68	7	"cannot get session control (error 0x%lx)"
water	75:26	0:0	8	"cannot get session control (error 0x%lx)"
arg	75:70	75:72	7	hr
water	75:70	0:0	8	hr
water	75:73	0:0	6	;
water	76:8	0:0	4	hr
op	76:11	0:0	4	=
call	76:13	77:62	4	IAudioSessionManager_GetSimpleAudioVolume
arg	76:55	76:62	5	manager
water	76:55	0:0	6	manager
arg	76:64	76:68	5	guid
water	76:64	0:0	6	guid
arg	76:70	76:75	5	FALSE
water	76:70	0:0	6	FALSE
arg	77:55	77:62	5	&volume
op	77:55	0:0	6	&
water	77:56	0:0	6	volume
water	77:63	0:0	4	;
if	78:8	79:71	4	(FAILED (hr ))
cond	78:12	78:21	5	FAILED (hr )
call	78:12	78:21	6	FAILED
arg	78:19	78:21	7	hr
water	78:19	0:0	8	hr
stmts	79:12	79:71	5	
call	79:12	79:70	6	msg_Err
arg	79:20	79:24	7	aout
water	79:20	0:0	8	aout
arg	79:26	79:66	7	"cannot get simple volume (error 0x%lx)"
water	79:26	0:0	8	"cannot get simple volume (error 0x%lx)"
arg	79:68	79:70	7	hr
water	79:68	0:0	8	hr
water	79:71	0:0	6	;
decl	81:8	81:28	4	wchar_t	*siid
op	81:22	0:0	4	=
water	81:24	0:0	4	NULL
water	82:8	0:0	4	hr
op	82:11	0:0	4	=
call	82:13	83:77	4	IAudioSessionManager_QueryInterface
arg	82:49	82:56	5	manager
water	82:49	0:0	6	manager
arg	83:46	83:72	5	&IID_IAudioSessionControl2
op	83:46	0:0	6	&
water	83:47	0:0	6	IID_IAudioSessionControl2
arg	83:74	83:77	5	&pv
op	83:74	0:0	6	&
water	83:75	0:0	6	pv
water	83:78	0:0	4	;
if	84:8	92:8	4	(SUCCEEDED (hr ))
cond	84:12	84:24	5	SUCCEEDED (hr )
call	84:12	84:24	6	SUCCEEDED
arg	84:22	84:24	7	hr
water	84:22	0:0	8	hr
stmts	85:8	92:8	5	
water	85:8	0:0	6	{
decl	86:12	86:42	6	IAudioSessionControl2	*c2
op	86:38	0:0	6	=
water	86:40	0:0	6	pv
call	87:12	87:64	6	IAudioSessionControl2_SetDuckingPreference
arg	87:55	87:57	7	c2
water	87:55	0:0	8	c2
arg	87:59	87:64	7	FALSE
water	87:59	0:0	8	FALSE
water	87:65	0:0	6	;
water	88:12	0:0	6	hr
op	88:15	0:0	6	=
call	88:17	88:77	6	IAudioSessionControl2_GetSessionInstanceIdentifier
arg	88:68	88:70	7	c2
water	88:68	0:0	8	c2
arg	88:72	88:77	7	&siid
op	88:72	0:0	8	&
water	88:73	0:0	8	siid
water	88:78	0:0	6	;
if	89:12	90:27	6	(FAILED (hr ))
cond	89:16	89:25	7	FAILED (hr )
call	89:16	89:25	8	FAILED
arg	89:23	89:25	9	hr
water	89:23	0:0	10	hr
stmts	90:16	90:27	7	
water	90:16	0:0	8	siid
op	90:21	0:0	8	=
water	90:23	0:0	8	NULL
water	90:27	0:0	8	;
call	91:12	91:44	6	IAudioSessionControl2_Release
arg	91:42	91:44	7	c2
water	91:42	0:0	8	c2
water	91:45	0:0	6	;
water	92:8	0:0	6	}
else	93:8	94:66	4
stmts	94:12	94:66	5	
call	94:12	94:65	6	msg_Dbg
arg	94:20	94:24	7	aout
water	94:20	0:0	8	aout
arg	94:26	94:65	7	"version 2 session control unavailable"
water	94:26	0:0	8	"version 2 session control unavailable"
water	94:66	0:0	6	;
water	95:8	0:0	4	hr
op	95:11	0:0	4	=
call	95:13	96:77	4	IAudioSessionManager_QueryInterface
arg	95:49	95:56	5	manager
water	95:49	0:0	6	manager
arg	96:46	96:72	5	&IID_IAudioSessionManager2
op	96:46	0:0	6	&
water	96:47	0:0	6	IID_IAudioSessionManager2
arg	96:74	96:77	5	&pv
op	96:74	0:0	6	&
water	96:75	0:0	6	pv
water	96:78	0:0	4	;
if	97:8	103:8	4	(SUCCEEDED (hr ))
cond	97:12	97:24	5	SUCCEEDED (hr )
call	97:12	97:24	6	SUCCEEDED
arg	97:22	97:24	7	hr
water	97:22	0:0	8	hr
stmts	98:8	103:8	5	
water	98:8	0:0	6	{
decl	99:12	99:42	6	IAudioSessionManager2	*m2
op	99:38	0:0	6	=
water	99:40	0:0	6	pv
call	100:12	101:69	6	IAudioSessionManager2_RegisterDuckNotification
arg	100:59	100:61	7	m2
water	100:59	0:0	8	m2
arg	100:63	100:67	7	siid
water	100:63	0:0	8	siid
arg	101:59	101:69	7	&sys->duck
op	101:59	0:0	8	&
water	101:60	0:0	8	sys
op	101:63	0:0	8	->
water	101:65	0:0	8	duck
water	101:70	0:0	6	;
call	102:12	102:44	6	IAudioSessionManager2_Release
arg	102:42	102:44	7	m2
water	102:42	0:0	8	m2
water	102:45	0:0	6	;
water	103:8	0:0	6	}
else	104:8	105:69	4
stmts	105:12	105:69	5	
call	105:12	105:68	6	msg_Dbg
arg	105:20	105:24	7	aout
water	105:20	0:0	8	aout
arg	105:26	105:68	7	"version 2 session management unavailable"
water	105:26	0:0	8	"version 2 session management unavailable"
water	105:69	0:0	6	;
call	106:8	106:26	4	CoTaskMemFree
arg	106:22	106:26	5	siid
water	106:22	0:0	6	siid
water	106:27	0:0	4	;
water	107:4	0:0	4	}
else	108:4	113:4	2
stmts	109:4	113:4	3	
water	109:4	0:0	4	{
call	110:8	110:73	4	msg_Err
arg	110:16	110:20	5	aout
water	110:16	0:0	6	aout
arg	110:22	110:69	5	"cannot activate session manager (error 0x%lx)"
water	110:22	0:0	6	"cannot activate session manager (error 0x%lx)"
arg	110:71	110:73	5	hr
water	110:71	0:0	6	hr
water	110:74	0:0	4	;
water	111:8	0:0	4	control
op	111:16	0:0	4	=
water	111:18	0:0	4	NULL
water	111:22	0:0	4	;
water	112:8	0:0	4	volume
op	112:15	0:0	4	=
water	112:17	0:0	4	NULL
water	112:21	0:0	4	;
water	113:4	0:0	4	}
water	114:4	0:0	2	hr
op	114:7	0:0	2	=
call	114:9	115:49	2	IMMDevice_Activate
arg	114:28	114:36	3	sys->dev
water	114:28	0:0	4	sys
op	114:31	0:0	4	->
water	114:33	0:0	4	dev
arg	114:38	114:63	3	&IID_IAudioEndpointVolume
op	114:38	0:0	4	&
water	114:39	0:0	4	IID_IAudioEndpointVolume
arg	115:28	115:38	3	CLSCTX_ALL
water	115:28	0:0	4	CLSCTX_ALL
arg	115:40	115:44	3	NULL
water	115:40	0:0	4	NULL
arg	115:46	115:49	3	&pv
op	115:46	0:0	4	&
water	115:47	0:0	4	pv
water	115:50	0:0	2	;
water	116:4	0:0	2	endpoint
op	116:13	0:0	2	=
water	116:15	0:0	2	pv
water	116:17	0:0	2	;
if	117:4	131:4	2	(SUCCEEDED (hr ))
cond	117:8	117:20	3	SUCCEEDED (hr )
call	117:8	117:20	4	SUCCEEDED
arg	117:18	117:20	5	hr
water	117:18	0:0	6	hr
stmts	118:4	131:4	3	
water	118:4	0:0	4	{
decl	119:8	119:27	4	float	min
water	119:17	0:0	4	,
decl	119:8	119:27	4	float	max
water	119:22	0:0	4	,
decl	119:8	119:27	4	float	inc
water	120:8	0:0	4	hr
op	120:11	0:0	4	=
call	120:13	120:75	4	IAudioEndpointVolume_GetVolumeRange
arg	120:49	120:57	5	endpoint
water	120:49	0:0	6	endpoint
arg	120:59	120:63	5	&min
op	120:59	0:0	6	&
water	120:60	0:0	6	min
arg	120:65	120:69	5	&max
op	120:65	0:0	6	&
water	120:66	0:0	6	max
arg	120:71	120:75	5	&inc
op	120:71	0:0	6	&
water	120:72	0:0	6	inc
water	120:76	0:0	4	;
if	121:8	126:8	4	(SUCCEEDED (hr ))
cond	121:12	121:24	5	SUCCEEDED (hr )
call	121:12	121:24	6	SUCCEEDED
arg	121:22	121:24	7	hr
water	121:22	0:0	8	hr
stmts	122:8	126:8	5	
water	122:8	0:0	6	{
call	123:12	124:33	6	msg_Dbg
arg	123:20	123:24	7	aout
water	123:20	0:0	8	aout
arg	123:26	123:78	7	"volume from %+f dB to %+f dB with %f dB increments"
water	123:26	0:0	8	"volume from %+f dB to %+f dB with %f dB increments"
arg	124:20	124:23	7	min
water	124:20	0:0	8	min
arg	124:25	124:28	7	max
water	124:25	0:0	8	max
arg	124:30	124:33	7	inc
water	124:30	0:0	8	inc
water	124:34	0:0	6	;
water	125:12	0:0	6	base_volume
op	125:24	0:0	6	=
call	125:26	125:47	6	powf
arg	125:31	125:35	7	10.f
water	125:31	0:0	8	10
op	125:33	0:0	8	.
water	125:34	0:0	8	f
arg	125:37	125:47	7	max/20.f
water	125:37	0:0	8	max
op	125:41	0:0	8	/
water	125:43	0:0	8	20
op	125:45	0:0	8	.
water	125:46	0:0	8	f
water	125:48	0:0	6	;
water	126:8	0:0	6	}
else	127:8	128:70	4
stmts	128:12	128:70	5	
call	128:12	128:69	6	msg_Err
arg	128:20	128:24	7	aout
water	128:20	0:0	8	aout
arg	128:26	128:65	7	"cannot get volume range (error 0x%lx)"
water	128:26	0:0	8	"cannot get volume range (error 0x%lx)"
arg	128:67	128:69	7	hr
water	128:67	0:0	8	hr
water	128:70	0:0	6	;
call	129:8	130:77	4	IAudioEndpointVolume_RegisterControlChangeNotify
arg	129:57	129:65	5	endpoint
water	129:57	0:0	6	endpoint
arg	130:54	130:77	5	&sys->endpoint_callback
op	130:54	0:0	6	&
water	130:55	0:0	6	sys
op	130:58	0:0	6	->
water	130:60	0:0	6	endpoint_callback
water	130:78	0:0	4	;
water	131:4	0:0	4	}
else	132:4	133:72	2
stmts	133:8	133:72	3	
call	133:8	133:71	4	msg_Err
arg	133:16	133:20	5	aout
water	133:16	0:0	6	aout
arg	133:22	133:67	5	"cannot activate endpoint volume (error %lx)"
water	133:22	0:0	6	"cannot activate endpoint volume (error %lx)"
arg	133:69	133:71	5	hr
water	133:69	0:0	6	hr
water	133:72	0:0	4	;
while	135:4	208:4	2	(sys -> device == NULL)
cond	135:11	135:26	3	sys -> device == NULL
water	135:11	0:0	4	sys
op	135:14	0:0	4	->
water	135:16	0:0	4	device
op	135:23	0:0	4	==
water	135:26	0:0	4	NULL
stmts	136:4	208:4	3	
water	136:4	0:0	4	{
decl	137:8	137:39	4	float	level
op	137:20	0:0	4	=
water	137:22	0:0	4	1
op	137:23	0:0	4	.
water	137:24	0:0	4	f
water	137:25	0:0	4	,
decl	137:8	137:39	4	float	master
op	137:34	0:0	4	=
water	137:36	0:0	4	1
op	137:37	0:0	4	.
water	137:38	0:0	4	f
if	138:8	143:8	4	(volume != NULL)
cond	138:12	138:22	5	volume != NULL
water	138:12	0:0	6	volume
op	138:19	0:0	6	!=
water	138:22	0:0	6	NULL
stmts	139:8	143:8	5	
water	139:8	0:0	6	{
water	140:12	0:0	6	hr
op	140:15	0:0	6	=
call	140:17	140:66	6	ISimpleAudioVolume_GetMasterVolume
arg	140:52	140:58	7	volume
water	140:52	0:0	8	volume
arg	140:60	140:66	7	&level
op	140:60	0:0	8	&
water	140:61	0:0	8	level
water	140:67	0:0	6	;
if	141:12	142:75	6	(FAILED (hr ))
cond	141:16	141:25	7	FAILED (hr )
call	141:16	141:25	8	FAILED
arg	141:23	141:25	9	hr
water	141:23	0:0	10	hr
stmts	142:16	142:75	7	
call	142:16	142:74	8	msg_Err
arg	142:24	142:28	9	aout
water	142:24	0:0	10	aout
arg	142:30	142:70	9	"cannot get master volume (error 0x%lx)"
water	142:30	0:0	10	"cannot get master volume (error 0x%lx)"
arg	142:72	142:74	9	hr
water	142:72	0:0	10	hr
water	142:75	0:0	8	;
water	143:8	0:0	6	}
if	144:8	152:8	4	(endpoint != NULL)
cond	144:12	144:24	5	endpoint != NULL
water	144:12	0:0	6	endpoint
op	144:21	0:0	6	!=
water	144:24	0:0	6	NULL
stmts	145:8	152:8	5	
water	145:8	0:0	6	{
decl	146:12	146:20	6	float	db
water	147:12	0:0	6	hr
op	147:15	0:0	6	=
call	147:17	147:72	6	IAudioEndpointVolume_GetMasterVolumeLevel
arg	147:59	147:67	7	endpoint
water	147:59	0:0	8	endpoint
arg	147:69	147:72	7	&db
op	147:69	0:0	8	&
water	147:70	0:0	8	db
water	147:73	0:0	6	;
if	148:12	149:46	6	(SUCCEEDED (hr ))
cond	148:16	148:28	7	SUCCEEDED (hr )
call	148:16	148:28	8	SUCCEEDED
arg	148:26	148:28	9	hr
water	148:26	0:0	10	hr
stmts	149:16	149:46	7	
water	149:16	0:0	8	master
op	149:23	0:0	8	=
call	149:25	149:45	8	powf
arg	149:30	149:34	9	10.f
water	149:30	0:0	10	10
op	149:32	0:0	10	.
water	149:33	0:0	10	f
arg	149:36	149:45	9	db/20.f
water	149:36	0:0	10	db
op	149:39	0:0	10	/
water	149:41	0:0	10	20
op	149:43	0:0	10	.
water	149:44	0:0	10	f
water	149:46	0:0	8	;
else	150:12	151:77	6
stmts	151:16	151:77	7	
call	151:16	151:76	8	msg_Err
arg	151:24	151:28	9	aout
water	151:24	0:0	10	aout
arg	151:30	151:72	9	"cannot get endpoint volume (error 0x%lx)"
water	151:30	0:0	10	"cannot get endpoint volume (error 0x%lx)"
arg	151:74	151:76	9	hr
water	151:74	0:0	10	hr
water	151:77	0:0	8	;
water	152:8	0:0	6	}
call	153:8	153:67	4	aout_VolumeReport
arg	153:26	153:30	5	aout
water	153:26	0:0	6	aout
arg	153:32	153:67	5	cbrtf(level*master*base_volume)
call	153:32	153:66	6	cbrtf
arg	153:38	153:66	7	level*master*base_volume
water	153:38	0:0	8	level
op	153:44	0:0	8	*
water	153:46	0:0	8	master
op	153:53	0:0	8	*
water	153:55	0:0	8	base_volume
water	153:68	0:0	4	;
water	160:8	0:0	4	level
op	160:14	0:0	4	=
water	160:16	0:0	4	sys
op	160:19	0:0	4	->
water	160:21	0:0	4	volume
op	160:28	0:0	4	/
water	160:30	0:0	4	base_volume
water	160:41	0:0	4	;
water	161:8	0:0	4	sys
op	161:11	0:0	4	->
water	161:13	0:0	4	volume
op	161:20	0:0	4	=
op	161:22	0:0	4	-
water	161:23	0:0	4	1
op	161:24	0:0	4	.
water	161:25	0:0	4	f
water	161:26	0:0	4	;
if	162:8	166:8	4	(level > master)
cond	162:12	162:20	5	level > master
water	162:12	0:0	6	level
op	162:18	0:0	6	>
water	162:20	0:0	6	master
stmts	163:8	166:8	5	
water	163:8	0:0	6	{
water	164:12	0:0	6	master
op	164:19	0:0	6	=
water	164:21	0:0	6	level
water	164:26	0:0	6	;
water	165:12	0:0	6	level
op	165:18	0:0	6	=
water	165:20	0:0	6	1
op	165:21	0:0	6	.
water	165:22	0:0	6	f
water	165:23	0:0	6	;
water	166:8	0:0	6	}
else	167:8	172:8	4
stmts	168:8	172:8	5	
water	168:8	0:0	6	{
if	169:12	170:31	6	(master > 0 . f)
cond	169:16	169:27	7	master > 0 . f
water	169:16	0:0	8	master
op	169:23	0:0	8	>
water	169:25	0:0	8	0
op	169:26	0:0	8	.
water	169:27	0:0	8	f
stmts	170:16	170:31	7	
water	170:16	0:0	8	level
op	170:22	0:0	8	/=
water	170:25	0:0	8	master
water	170:31	0:0	8	;
water	171:12	0:0	6	master
op	171:19	0:0	6	=
op	171:21	0:0	6	-
water	171:22	0:0	6	1
op	171:23	0:0	6	.
water	171:24	0:0	6	f
water	171:25	0:0	6	;
water	172:8	0:0	6	}
if	173:8	197:8	4	(volume != NULL)
cond	173:12	173:22	5	volume != NULL
water	173:12	0:0	6	volume
op	173:19	0:0	6	!=
water	173:22	0:0	6	NULL
stmts	174:8	197:8	5	
water	174:8	0:0	6	{
if	175:12	182:12	6	(level >= 0 . f)
cond	175:16	175:27	7	level >= 0 . f
water	175:16	0:0	8	level
op	175:22	0:0	8	>=
water	175:25	0:0	8	0
op	175:26	0:0	8	.
water	175:27	0:0	8	f
stmts	176:12	182:12	7	
water	176:12	0:0	8	{
call	177:16	177:35	8	assert
arg	177:23	177:35	9	level<=1.f
water	177:23	0:0	10	level
op	177:29	0:0	10	<=
water	177:32	0:0	10	1
op	177:33	0:0	10	.
water	177:34	0:0	10	f
water	177:36	0:0	8	;
water	178:16	0:0	8	hr
op	178:19	0:0	8	=
call	178:21	178:75	8	ISimpleAudioVolume_SetMasterVolume
arg	178:56	178:62	9	volume
water	178:56	0:0	10	volume
arg	178:64	178:69	9	level
water	178:64	0:0	10	level
arg	178:71	178:75	9	NULL
water	178:71	0:0	10	NULL
water	178:76	0:0	8	;
if	179:16	181:31	8	(FAILED (hr ))
cond	179:20	179:29	9	FAILED (hr )
call	179:20	179:29	10	FAILED
arg	179:27	179:29	11	hr
water	179:27	0:0	12	hr
stmts	180:20	181:31	9	
call	180:20	181:30	10	msg_Err
arg	180:28	180:32	11	aout
water	180:28	0:0	12	aout
arg	180:34	180:74	11	"cannot set master volume (error 0x%lx)"
water	180:34	0:0	12	"cannot set master volume (error 0x%lx)"
arg	181:28	181:30	11	hr
water	181:28	0:0	12	hr
water	181:31	0:0	10	;
water	182:12	0:0	8	}
decl	183:12	183:21	6	BOOL	mute
water	184:12	0:0	6	hr
op	184:15	0:0	6	=
call	184:17	184:57	6	ISimpleAudioVolume_GetMute
arg	184:44	184:50	7	volume
water	184:44	0:0	8	volume
arg	184:52	184:57	7	&mute
op	184:52	0:0	8	&
water	184:53	0:0	8	mute
water	184:58	0:0	6	;
if	185:12	186:52	6	(SUCCEEDED (hr ))
cond	185:16	185:28	7	SUCCEEDED (hr )
call	185:16	185:28	8	SUCCEEDED
arg	185:26	185:28	9	hr
water	185:26	0:0	10	hr
stmts	186:16	186:52	7	
call	186:16	186:51	8	aout_MuteReport
arg	186:32	186:36	9	aout
water	186:32	0:0	10	aout
arg	186:38	186:51	9	mute!=FALSE
water	186:38	0:0	10	mute
op	186:43	0:0	10	!=
water	186:46	0:0	10	FALSE
water	186:52	0:0	8	;
else	187:12	188:66	6
stmts	188:16	188:66	7	
call	188:16	188:65	8	msg_Err
arg	188:24	188:28	9	aout
water	188:24	0:0	10	aout
arg	188:30	188:61	9	"cannot get mute (error 0x%lx)"
water	188:30	0:0	10	"cannot get mute (error 0x%lx)"
arg	188:63	188:65	9	hr
water	188:63	0:0	10	hr
water	188:66	0:0	8	;
if	189:12	195:12	6	(sys -> mute >= 0)
cond	189:16	189:29	7	sys -> mute >= 0
water	189:16	0:0	8	sys
op	189:19	0:0	8	->
water	189:21	0:0	8	mute
op	189:26	0:0	8	>=
water	189:29	0:0	8	0
stmts	190:12	195:12	7	
water	190:12	0:0	8	{
water	191:16	0:0	8	mute
op	191:21	0:0	8	=
water	191:23	0:0	8	sys
op	191:26	0:0	8	->
water	191:28	0:0	8	mute
water	191:33	0:0	8	?
water	191:35	0:0	8	TRUE
water	191:40	0:0	8	:
water	191:42	0:0	8	FALSE
water	191:47	0:0	8	;
water	192:16	0:0	8	hr
op	192:19	0:0	8	=
call	192:21	192:66	8	ISimpleAudioVolume_SetMute
arg	192:48	192:54	9	volume
water	192:48	0:0	10	volume
arg	192:56	192:60	9	mute
water	192:56	0:0	10	mute
arg	192:62	192:66	9	NULL
water	192:62	0:0	10	NULL
water	192:67	0:0	8	;
if	193:16	194:70	8	(FAILED (hr ))
cond	193:20	193:29	9	FAILED (hr )
call	193:20	193:29	10	FAILED
arg	193:27	193:29	11	hr
water	193:27	0:0	12	hr
stmts	194:20	194:70	9	
call	194:20	194:69	10	msg_Err
arg	194:28	194:32	11	aout
water	194:28	0:0	12	aout
arg	194:34	194:65	11	"cannot set mute (error 0x%lx)"
water	194:34	0:0	12	"cannot set mute (error 0x%lx)"
arg	194:67	194:69	11	hr
water	194:67	0:0	12	hr
water	194:70	0:0	10	;
water	195:12	0:0	8	}
water	196:12	0:0	6	sys
op	196:15	0:0	6	->
water	196:17	0:0	6	mute
op	196:22	0:0	6	=
op	196:24	0:0	6	-
water	196:25	0:0	6	1
water	196:26	0:0	6	;
water	197:8	0:0	6	}
if	198:8	205:8	4	(endpoint != NULL && master >= 0 . f)
cond	198:12	198:44	5	endpoint != NULL && master >= 0 . f
water	198:12	0:0	6	endpoint
op	198:21	0:0	6	!=
water	198:24	0:0	6	NULL
op	198:29	0:0	6	&&
water	198:32	0:0	6	master
op	198:39	0:0	6	>=
water	198:42	0:0	6	0
op	198:43	0:0	6	.
water	198:44	0:0	6	f
stmts	199:8	205:8	5	
water	199:8	0:0	6	{
decl	200:12	200:43	6	float	v
op	200:20	0:0	6	=
water	200:22	0:0	6	20
op	200:24	0:0	6	.
water	200:25	0:0	6	f
call	200:27	200:42	7	*log10f
arg	200:36	200:42	8	master
water	200:36	0:0	9	master
call	201:12	201:66	6	msg_Warn
arg	201:21	201:25	7	aout
water	201:21	0:0	8	aout
arg	201:27	201:63	7	"overriding endpoint volume: %+f dB"
water	201:27	0:0	8	"overriding endpoint volume: %+f dB"
arg	201:65	201:66	7	v
water	201:65	0:0	8	v
water	201:67	0:0	6	;
water	202:12	0:0	6	hr
op	202:15	0:0	6	=
call	202:17	202:76	6	IAudioEndpointVolume_SetMasterVolumeLevel
arg	202:59	202:67	7	endpoint
water	202:59	0:0	8	endpoint
arg	202:69	202:70	7	v
water	202:69	0:0	8	v
arg	202:72	202:76	7	NULL
water	202:72	0:0	8	NULL
water	202:77	0:0	6	;
if	203:12	204:77	6	(FAILED (hr ))
cond	203:16	203:25	7	FAILED (hr )
call	203:16	203:25	8	FAILED
arg	203:23	203:25	9	hr
water	203:23	0:0	10	hr
stmts	204:16	204:77	7	
call	204:16	204:76	8	msg_Err
arg	204:24	204:28	9	aout
water	204:24	0:0	10	aout
arg	204:30	204:72	9	"cannot set endpoint volume (error 0x%lx)"
water	204:30	0:0	10	"cannot set endpoint volume (error 0x%lx)"
arg	204:74	204:76	9	hr
water	204:74	0:0	10	hr
water	204:77	0:0	8	;
water	205:8	0:0	6	}
water	206:8	0:0	4	sys
op	206:11	0:0	4	->
water	206:13	0:0	4	volume
op	206:20	0:0	4	=
op	206:22	0:0	4	-
water	206:23	0:0	4	1
op	206:24	0:0	4	.
water	206:25	0:0	4	f
water	206:26	0:0	4	;
call	207:8	207:65	4	SleepConditionVariableCS
arg	207:33	207:43	5	&sys->work
op	207:33	0:0	6	&
water	207:34	0:0	6	sys
op	207:37	0:0	6	->
water	207:39	0:0	6	work
arg	207:45	207:55	5	&sys->lock
op	207:45	0:0	6	&
water	207:46	0:0	6	sys
op	207:49	0:0	6	->
water	207:51	0:0	6	lock
arg	207:57	207:65	5	INFINITE
water	207:57	0:0	6	INFINITE
water	207:66	0:0	4	;
water	208:4	0:0	4	}
call	209:4	209:35	2	LeaveCriticalSection
arg	209:25	209:35	3	&sys->lock
op	209:25	0:0	4	&
water	209:26	0:0	4	sys
op	209:29	0:0	4	->
water	209:31	0:0	4	lock
water	209:36	0:0	2	;
if	210:4	215:4	2	(endpoint != NULL)
cond	210:8	210:20	3	endpoint != NULL
water	210:8	0:0	4	endpoint
op	210:17	0:0	4	!=
water	210:20	0:0	4	NULL
stmts	211:4	215:4	3	
water	211:4	0:0	4	{
call	212:8	213:77	4	IAudioEndpointVolume_UnregisterControlChangeNotify
arg	212:59	212:67	5	endpoint
water	212:59	0:0	6	endpoint
arg	213:54	213:77	5	&sys->endpoint_callback
op	213:54	0:0	6	&
water	213:55	0:0	6	sys
op	213:58	0:0	6	->
water	213:60	0:0	6	endpoint_callback
water	213:78	0:0	4	;
call	214:8	214:45	4	IAudioEndpointVolume_Release
arg	214:37	214:45	5	endpoint
water	214:37	0:0	6	endpoint
water	214:46	0:0	4	;
water	215:4	0:0	4	}
if	216:4	235:4	2	(manager != NULL)
cond	216:8	216:19	3	manager != NULL
water	216:8	0:0	4	manager
op	216:16	0:0	4	!=
water	216:19	0:0	4	NULL
stmts	217:4	235:4	3	
water	217:4	0:0	4	{
water	218:8	0:0	4	hr
op	218:11	0:0	4	=
call	218:13	219:77	4	IAudioSessionManager_QueryInterface
arg	218:49	218:56	5	manager
water	218:49	0:0	6	manager
arg	219:46	219:72	5	&IID_IAudioSessionManager2
op	219:46	0:0	6	&
water	219:47	0:0	6	IID_IAudioSessionManager2
arg	219:74	219:77	5	&pv
op	219:74	0:0	6	&
water	219:75	0:0	6	pv
water	219:78	0:0	4	;
if	220:8	225:8	4	(SUCCEEDED (hr ))
cond	220:12	220:24	5	SUCCEEDED (hr )
call	220:12	220:24	6	SUCCEEDED
arg	220:22	220:24	7	hr
water	220:22	0:0	8	hr
stmts	221:8	225:8	5	
water	221:8	0:0	6	{
decl	222:12	222:42	6	IAudioSessionManager2	*m2
op	222:38	0:0	6	=
water	222:40	0:0	6	pv
call	223:12	223:75	6	IAudioSessionManager2_UnregisterDuckNotification
arg	223:61	223:63	7	m2
water	223:61	0:0	8	m2
arg	223:65	223:75	7	&sys->duck
op	223:65	0:0	8	&
water	223:66	0:0	8	sys
op	223:69	0:0	8	->
water	223:71	0:0	8	duck
water	223:76	0:0	6	;
call	224:12	224:44	6	IAudioSessionManager2_Release
arg	224:42	224:44	7	m2
water	224:42	0:0	8	m2
water	224:45	0:0	6	;
water	225:8	0:0	6	}
if	226:8	227:46	4	(volume != NULL)
cond	226:12	226:22	5	volume != NULL
water	226:12	0:0	6	volume
op	226:19	0:0	6	!=
water	226:22	0:0	6	NULL
stmts	227:12	227:46	5	
call	227:12	227:45	6	ISimpleAudioVolume_Release
arg	227:39	227:45	7	volume
water	227:39	0:0	8	volume
water	227:46	0:0	6	;
if	228:8	233:8	4	(control != NULL)
cond	228:12	228:23	5	control != NULL
water	228:12	0:0	6	control
op	228:20	0:0	6	!=
water	228:23	0:0	6	NULL
stmts	229:8	233:8	5	
water	229:8	0:0	6	{
call	230:12	231:77	6	IAudioSessionControl_UnregisterAudioSessionNotification
arg	230:68	230:75	7	control
water	230:68	0:0	8	control
arg	231:57	231:77	7	&sys->session_events
op	231:57	0:0	8	&
water	231:58	0:0	8	sys
op	231:61	0:0	8	->
water	231:63	0:0	8	session_events
water	231:78	0:0	6	;
call	232:12	232:48	6	IAudioSessionControl_Release
arg	232:41	232:48	7	control
water	232:41	0:0	8	control
water	232:49	0:0	6	;
water	233:8	0:0	6	}
call	234:8	234:44	4	IAudioSessionManager_Release
arg	234:37	234:44	5	manager
water	234:37	0:0	6	manager
water	234:45	0:0	4	;
water	235:4	0:0	4	}
call	236:4	236:35	2	EnterCriticalSection
arg	236:25	236:35	3	&sys->lock
op	236:25	0:0	4	&
water	236:26	0:0	4	sys
op	236:29	0:0	4	->
water	236:31	0:0	4	lock
water	236:36	0:0	2	;
call	237:4	237:30	2	IMMDevice_Release
arg	237:22	237:30	3	sys->dev
water	237:22	0:0	4	sys
op	237:25	0:0	4	->
water	237:27	0:0	4	dev
water	237:31	0:0	2	;
water	238:4	0:0	2	sys
op	238:7	0:0	2	->
water	238:9	0:0	2	dev
op	238:13	0:0	2	=
water	238:15	0:0	2	NULL
water	238:19	0:0	2	;
return	239:4	239:15	2	S_OK
water	239:11	0:0	3	S_OK

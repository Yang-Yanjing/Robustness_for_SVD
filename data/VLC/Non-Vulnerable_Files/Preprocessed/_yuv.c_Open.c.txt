func	2:0	68:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	object
stmnts	0:0	67:22	1	
decl	4:4	4:49	2	vout_display_t	*vd
op	4:23	0:0	2	=
water	4:25	0:0	2	(
water	4:26	0:0	2	vout_display_t
op	4:41	0:0	2	*
water	4:42	0:0	2	)
water	4:43	0:0	2	object
decl	5:4	5:27	2	vout_display_sys_t	*sys
water	7:4	0:0	2	vd
op	7:6	0:0	2	->
water	7:8	0:0	2	sys
op	7:12	0:0	2	=
water	7:14	0:0	2	sys
op	7:18	0:0	2	=
call	7:20	7:39	2	malloc
arg	7:27	7:39	3	sizeof(*sys)
op	7:27	0:0	4	sizeof
water	7:33	0:0	4	(
op	7:34	0:0	4	*
water	7:35	0:0	4	sys
water	7:38	0:0	4	)
water	7:40	0:0	2	;
if	8:4	9:25	2	(! sys)
cond	8:8	8:9	3	! sys
op	8:8	0:0	4	!
water	8:9	0:0	4	sys
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
water	10:4	0:0	2	sys
op	10:7	0:0	2	->
water	10:9	0:0	2	is_first
op	10:18	0:0	2	=
water	10:20	0:0	2	false
water	10:25	0:0	2	;
water	11:4	0:0	2	sys
op	11:7	0:0	2	->
water	11:9	0:0	2	is_yuv4mpeg2
op	11:22	0:0	2	=
call	11:24	11:66	2	var_InheritBool
arg	11:40	11:42	3	vd
water	11:40	0:0	4	vd
arg	11:44	11:66	3	CFG_PREFIX"yuv4mpeg2"
water	11:44	0:0	4	CFG_PREFIX
water	11:55	0:0	4	"yuv4mpeg2"
water	11:67	0:0	2	;
water	12:4	0:0	2	sys
op	12:7	0:0	2	->
water	12:9	0:0	2	pool
op	12:14	0:0	2	=
water	12:16	0:0	2	NULL
water	12:20	0:0	2	;
decl	14:4	14:62	2	char	*psz_fcc
op	14:18	0:0	2	=
call	14:20	14:61	3	var_InheritString
arg	14:38	14:40	4	vd
water	14:38	0:0	5	vd
arg	14:42	14:61	4	CFG_PREFIX"chroma"
water	14:42	0:0	5	CFG_PREFIX
water	14:53	0:0	5	"chroma"
decl	15:4	16:80	2	const vlc_fourcc_t	requested_chroma
op	15:40	0:0	2	=
call	15:42	16:79	3	vlc_fourcc_GetCodecFromString
arg	15:72	15:80	4	VIDEO_ES
water	15:72	0:0	5	VIDEO_ES
arg	16:72	16:79	4	psz_fcc
water	16:72	0:0	5	psz_fcc
call	17:4	17:16	2	free
arg	17:9	17:16	3	psz_fcc
water	17:9	0:0	4	psz_fcc
water	17:17	0:0	2	;
decl	18:4	19:65	2	const vlc_fourcc_t	chroma
op	18:30	0:0	2	=
water	18:32	0:0	2	requested_chroma
water	18:49	0:0	2	?
water	18:51	0:0	2	requested_chroma
water	18:68	0:0	2	:
water	19:51	0:0	2	VLC_CODEC_I420
if	20:4	32:4	2	(sys -> is_yuv4mpeg2)
cond	20:8	20:13	3	sys -> is_yuv4mpeg2
water	20:8	0:0	4	sys
op	20:11	0:0	4	->
water	20:13	0:0	4	is_yuv4mpeg2
stmts	20:27	32:4	3	
water	20:27	0:0	4	{
switch	21:8	31:8	4	(chroma)
cond	21:16	21:16	5	chroma
water	21:16	0:0	6	chroma
stmts	21:24	31:8	5	
water	21:24	0:0	6	{
label	22:8	22:27	6	case VLC_CODEC_YV12 :
label	23:8	23:27	6	case VLC_CODEC_I420 :
label	24:8	24:27	6	case VLC_CODEC_J420 :
break	25:12	25:17	6	
label	26:8	26:15	6	default :
call	27:12	28:35	6	msg_Err
arg	27:20	27:22	7	vd
water	27:20	0:0	8	vd
arg	27:24	27:81	7	"YUV4MPEG2 mode needs chroma YV12 not %4.4s as requested"
water	27:24	0:0	8	"YUV4MPEG2 mode needs chroma YV12 not %4.4s as requested"
arg	28:20	28:35	7	(char*)&chroma
water	28:20	0:0	8	(
water	28:21	0:0	8	char
op	28:26	0:0	8	*
water	28:27	0:0	8	)
op	28:28	0:0	8	&
water	28:29	0:0	8	chroma
water	28:36	0:0	6	;
call	29:12	29:20	6	free
arg	29:17	29:20	7	sys
water	29:17	0:0	8	sys
water	29:21	0:0	6	;
return	30:12	30:31	6	VLC_EGENERIC
water	30:19	0:0	7	VLC_EGENERIC
water	31:8	0:0	6	}
water	32:4	0:0	4	}
call	33:4	33:53	2	msg_Dbg
arg	33:12	33:14	3	vd
water	33:12	0:0	4	vd
arg	33:16	33:36	3	"Using chroma %4.4s"
water	33:16	0:0	4	"Using chroma %4.4s"
arg	33:38	33:53	3	(char*)&chroma
water	33:38	0:0	4	(
water	33:39	0:0	4	char
op	33:44	0:0	4	*
water	33:45	0:0	4	)
op	33:46	0:0	4	&
water	33:47	0:0	4	chroma
water	33:54	0:0	2	;
decl	35:4	35:57	2	char	*name
op	35:15	0:0	2	=
call	35:17	35:56	3	var_InheritString
arg	35:35	35:37	4	vd
water	35:35	0:0	5	vd
arg	35:39	35:56	4	CFG_PREFIX"file"
water	35:39	0:0	5	CFG_PREFIX
water	35:50	0:0	5	"file"
if	36:4	40:4	2	(! name)
cond	36:8	36:9	3	! name
op	36:8	0:0	4	!
water	36:9	0:0	4	name
stmts	36:15	40:4	3	
water	36:15	0:0	4	{
call	37:8	37:37	4	msg_Err
arg	37:16	37:18	5	vd
water	37:16	0:0	6	vd
arg	37:20	37:37	5	"Empty file name"
water	37:20	0:0	6	"Empty file name"
water	37:38	0:0	4	;
call	38:8	38:16	4	free
arg	38:13	38:16	5	sys
water	38:13	0:0	6	sys
water	38:17	0:0	4	;
return	39:8	39:27	4	VLC_EGENERIC
water	39:15	0:0	5	VLC_EGENERIC
water	40:4	0:0	4	}
water	41:4	0:0	2	sys
op	41:7	0:0	2	->
water	41:9	0:0	2	f
op	41:11	0:0	2	=
call	41:13	41:33	2	vlc_fopen
arg	41:23	41:27	3	name
water	41:23	0:0	4	name
arg	41:29	41:33	3	"wb"
water	41:29	0:0	4	"wb"
water	41:34	0:0	2	;
if	42:4	47:4	2	(! sys -> f)
cond	42:8	42:14	3	! sys -> f
op	42:8	0:0	4	!
water	42:9	0:0	4	sys
op	42:12	0:0	4	->
water	42:14	0:0	4	f
stmts	42:17	47:4	3	
water	42:17	0:0	4	{
call	43:8	43:45	4	msg_Err
arg	43:16	43:18	5	vd
water	43:16	0:0	6	vd
arg	43:20	43:39	5	"Failed to open %s"
water	43:20	0:0	6	"Failed to open %s"
arg	43:41	43:45	5	name
water	43:41	0:0	6	name
water	43:46	0:0	4	;
call	44:8	44:17	4	free
arg	44:13	44:17	5	name
water	44:13	0:0	6	name
water	44:18	0:0	4	;
call	45:8	45:16	4	free
arg	45:13	45:16	5	sys
water	45:13	0:0	6	sys
water	45:17	0:0	4	;
return	46:8	46:27	4	VLC_EGENERIC
water	46:15	0:0	5	VLC_EGENERIC
water	47:4	0:0	4	}
call	48:4	48:42	2	msg_Dbg
arg	48:12	48:14	3	vd
water	48:12	0:0	4	vd
arg	48:16	48:36	3	"Writing data to %s"
water	48:16	0:0	4	"Writing data to %s"
arg	48:38	48:42	3	name
water	48:38	0:0	4	name
water	48:43	0:0	2	;
call	49:4	49:13	2	free
arg	49:9	49:13	3	name
water	49:9	0:0	4	name
water	49:14	0:0	2	;
decl	51:4	51:22	2	video_format_t	fmt
call	52:4	52:45	2	video_format_ApplyRotation
arg	52:31	52:35	3	&fmt
op	52:31	0:0	4	&
water	52:32	0:0	4	fmt
arg	52:37	52:45	3	&vd->fmt
op	52:37	0:0	4	&
water	52:38	0:0	4	vd
op	52:40	0:0	4	->
water	52:42	0:0	4	fmt
water	52:46	0:0	2	;
water	53:4	0:0	2	fmt
op	53:7	0:0	2	.
water	53:8	0:0	2	i_chroma
op	53:17	0:0	2	=
water	53:19	0:0	2	chroma
water	53:25	0:0	2	;
call	54:4	54:28	2	video_format_FixRgb
arg	54:24	54:28	3	&fmt
op	54:24	0:0	4	&
water	54:25	0:0	4	fmt
water	54:29	0:0	2	;
decl	56:4	56:39	2	vout_display_info_t	info
op	56:29	0:0	2	=
water	56:31	0:0	2	vd
op	56:33	0:0	2	->
water	56:35	0:0	2	info
water	57:4	0:0	2	info
op	57:8	0:0	2	.
water	57:9	0:0	2	has_hide_mouse
op	57:24	0:0	2	=
water	57:26	0:0	2	true
water	57:30	0:0	2	;
water	59:4	0:0	2	vd
op	59:6	0:0	2	->
water	59:8	0:0	2	fmt
op	59:16	0:0	2	=
water	59:18	0:0	2	fmt
water	59:21	0:0	2	;
water	60:4	0:0	2	vd
op	60:6	0:0	2	->
water	60:8	0:0	2	info
op	60:16	0:0	2	=
water	60:18	0:0	2	info
water	60:22	0:0	2	;
water	61:4	0:0	2	vd
op	61:6	0:0	2	->
water	61:8	0:0	2	pool
op	61:16	0:0	2	=
water	61:18	0:0	2	Pool
water	61:22	0:0	2	;
water	62:4	0:0	2	vd
op	62:6	0:0	2	->
water	62:8	0:0	2	prepare
op	62:16	0:0	2	=
water	62:18	0:0	2	NULL
water	62:22	0:0	2	;
water	63:4	0:0	2	vd
op	63:6	0:0	2	->
water	63:8	0:0	2	display
op	63:16	0:0	2	=
water	63:18	0:0	2	Display
water	63:25	0:0	2	;
water	64:4	0:0	2	vd
op	64:6	0:0	2	->
water	64:8	0:0	2	control
op	64:16	0:0	2	=
water	64:18	0:0	2	Control
water	64:25	0:0	2	;
water	65:4	0:0	2	vd
op	65:6	0:0	2	->
water	65:8	0:0	2	manage
op	65:16	0:0	2	=
water	65:18	0:0	2	NULL
water	65:22	0:0	2	;
call	66:4	66:46	2	vout_display_SendEventFullscreen
arg	66:37	66:39	3	vd
water	66:37	0:0	4	vd
arg	66:41	66:46	3	false
water	66:41	0:0	4	false
water	66:47	0:0	2	;
return	67:4	67:22	2	VLC_SUCCESS
water	67:11	0:0	3	VLC_SUCCESS

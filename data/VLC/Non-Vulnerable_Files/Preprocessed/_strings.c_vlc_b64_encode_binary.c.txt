func	2:0	36:0	0	char *	vlc_b64_encode_binary
params	2:27	0:0	1	
param	2:29	2:47	2	const uint8_t *	src
param	2:49	2:62	2	size_t	i_src
stmnts	4:4	35:14	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	char
water	4:22	0:0	2	b64
op	4:25	0:0	2	[
op	4:26	0:0	2	]
op	4:28	0:0	2	=
water	5:11	0:0	2	"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
water	5:77	0:0	2	;
decl	6:4	6:47	2	char	*ret
op	6:14	0:0	2	=
call	6:16	6:46	3	malloc
arg	6:24	6:46	4	(i_src+4)*4/3
water	6:24	0:0	5	(
water	6:26	0:0	5	i_src
op	6:32	0:0	5	+
water	6:34	0:0	5	4
water	6:36	0:0	5	)
op	6:38	0:0	5	*
water	6:40	0:0	5	4
op	6:42	0:0	5	/
water	6:44	0:0	5	3
decl	7:4	7:19	2	char	*dst
op	7:14	0:0	2	=
water	7:16	0:0	2	ret
if	8:4	9:19	2	(dst == NULL)
cond	8:8	8:15	3	dst == NULL
water	8:8	0:0	4	dst
op	8:12	0:0	4	==
water	8:15	0:0	4	NULL
stmts	9:8	9:19	3	
return	9:8	9:19	4	NULL
water	9:15	0:0	5	NULL
while	10:4	33:4	2	(i_src > 0)
cond	10:11	10:19	3	i_src > 0
water	10:11	0:0	4	i_src
op	10:17	0:0	4	>
water	10:19	0:0	4	0
stmts	11:4	33:4	3	
water	11:4	0:0	4	{
decl	13:8	13:18	4	uint32_t	v
water	15:8	0:0	4	v
op	15:10	0:0	4	=
op	15:12	0:0	4	*
water	15:13	0:0	4	src
op	15:16	0:0	4	++
op	15:19	0:0	4	<<
water	15:22	0:0	4	24
water	15:24	0:0	4	;
op	16:8	0:0	4	*
water	16:9	0:0	4	dst
op	16:12	0:0	4	++
op	16:15	0:0	4	=
water	16:17	0:0	4	b64
op	16:20	0:0	4	[
water	16:21	0:0	4	v
op	16:23	0:0	4	>>
water	16:26	0:0	4	26
op	16:28	0:0	4	]
water	16:29	0:0	4	;
water	17:8	0:0	4	v
op	17:10	0:0	4	=
water	17:12	0:0	4	v
op	17:14	0:0	4	<<
water	17:17	0:0	4	6
water	17:18	0:0	4	;
if	19:8	20:29	4	(i_src >= 2)
cond	19:12	19:21	5	i_src >= 2
water	19:12	0:0	6	i_src
op	19:18	0:0	6	>=
water	19:21	0:0	6	2
stmts	20:12	20:29	5	
water	20:12	0:0	6	v
op	20:14	0:0	6	|=
op	20:17	0:0	6	*
water	20:18	0:0	6	src
op	20:21	0:0	6	++
op	20:24	0:0	6	<<
water	20:27	0:0	6	22
water	20:29	0:0	6	;
op	21:8	0:0	4	*
water	21:9	0:0	4	dst
op	21:12	0:0	4	++
op	21:15	0:0	4	=
water	21:17	0:0	4	b64
op	21:20	0:0	4	[
water	21:21	0:0	4	v
op	21:23	0:0	4	>>
water	21:26	0:0	4	26
op	21:28	0:0	4	]
water	21:29	0:0	4	;
water	22:8	0:0	4	v
op	22:10	0:0	4	=
water	22:12	0:0	4	v
op	22:14	0:0	4	<<
water	22:17	0:0	4	6
water	22:18	0:0	4	;
if	24:8	25:29	4	(i_src >= 3)
cond	24:12	24:21	5	i_src >= 3
water	24:12	0:0	6	i_src
op	24:18	0:0	6	>=
water	24:21	0:0	6	3
stmts	25:12	25:29	5	
water	25:12	0:0	6	v
op	25:14	0:0	6	|=
op	25:17	0:0	6	*
water	25:18	0:0	6	src
op	25:21	0:0	6	++
op	25:24	0:0	6	<<
water	25:27	0:0	6	20
water	25:29	0:0	6	;
op	26:8	0:0	4	*
water	26:9	0:0	4	dst
op	26:12	0:0	4	++
op	26:15	0:0	4	=
water	26:17	0:0	4	(
water	26:19	0:0	4	i_src
op	26:25	0:0	4	>=
water	26:28	0:0	4	2
water	26:30	0:0	4	)
water	26:32	0:0	4	?
water	26:34	0:0	4	b64
op	26:37	0:0	4	[
water	26:38	0:0	4	v
op	26:40	0:0	4	>>
water	26:43	0:0	4	26
op	26:45	0:0	4	]
water	26:47	0:0	4	:
water	26:49	0:0	4	'='
water	26:52	0:0	4	;
water	27:8	0:0	4	v
op	27:10	0:0	4	=
water	27:12	0:0	4	v
op	27:14	0:0	4	<<
water	27:17	0:0	4	6
water	27:18	0:0	4	;
op	29:8	0:0	4	*
water	29:9	0:0	4	dst
op	29:12	0:0	4	++
op	29:15	0:0	4	=
water	29:17	0:0	4	(
water	29:19	0:0	4	i_src
op	29:25	0:0	4	>=
water	29:28	0:0	4	3
water	29:30	0:0	4	)
water	29:32	0:0	4	?
water	29:34	0:0	4	b64
op	29:37	0:0	4	[
water	29:38	0:0	4	v
op	29:40	0:0	4	>>
water	29:43	0:0	4	26
op	29:45	0:0	4	]
water	29:47	0:0	4	:
water	29:49	0:0	4	'='
water	29:52	0:0	4	;
if	30:8	31:17	4	(i_src <= 3)
cond	30:12	30:21	5	i_src <= 3
water	30:12	0:0	6	i_src
op	30:18	0:0	6	<=
water	30:21	0:0	6	3
stmts	31:12	31:17	5	
break	31:12	31:17	6	
water	32:8	0:0	4	i_src
op	32:14	0:0	4	-=
water	32:17	0:0	4	3
water	32:18	0:0	4	;
water	33:4	0:0	4	}
op	34:4	0:0	2	*
water	34:5	0:0	2	dst
op	34:9	0:0	2	=
water	34:11	0:0	2	'\0'
water	34:15	0:0	2	;
return	35:4	35:14	2	ret
water	35:11	0:0	3	ret

func	2:0	72:0	0	static int	Render
params	2:17	0:0	1	
param	2:19	2:37	2	filter_t *	p_filter
param	2:39	2:68	2	subpicture_region_t *	p_region
param	3:19	3:36	2	uint8_t *	p_bitmap
param	3:38	3:49	2	int	i_width
param	3:51	3:64	2	int	i_height
stmnts	0:0	71:22	1	
decl	5:4	5:18	2	uint8_t	*p_dst
decl	6:4	6:22	2	video_format_t	fmt
decl	7:4	7:18	2	int	i
water	7:9	0:0	2	,
decl	7:4	7:18	2	int	i_pitch
decl	8:4	8:25	2	bool	b_outline
op	8:19	0:0	2	=
water	8:21	0:0	2	true
call	10:4	10:44	2	memset
arg	10:12	10:16	3	&fmt
op	10:12	0:0	4	&
water	10:13	0:0	4	fmt
arg	10:18	10:19	3	0
water	10:18	0:0	4	0
arg	10:21	10:44	3	sizeof(video_format_t)
op	10:21	0:0	4	sizeof
water	10:27	0:0	4	(
water	10:28	0:0	4	video_format_t
water	10:42	0:0	4	)
water	10:45	0:0	2	;
water	11:4	0:0	2	fmt
op	11:7	0:0	2	.
water	11:8	0:0	2	i_chroma
op	11:17	0:0	2	=
water	11:19	0:0	2	VLC_CODEC_YUVP
water	11:33	0:0	2	;
water	12:4	0:0	2	fmt
op	12:7	0:0	2	.
water	12:8	0:0	2	i_width
op	12:16	0:0	2	=
water	12:18	0:0	2	fmt
op	12:21	0:0	2	.
water	12:22	0:0	2	i_visible_width
op	12:38	0:0	2	=
water	12:40	0:0	2	i_width
op	12:48	0:0	2	+
water	12:50	0:0	2	(
water	12:51	0:0	2	b_outline
water	12:61	0:0	2	?
water	12:63	0:0	2	4
water	12:65	0:0	2	:
water	12:67	0:0	2	0
water	12:68	0:0	2	)
water	12:69	0:0	2	;
water	13:4	0:0	2	fmt
op	13:7	0:0	2	.
water	13:8	0:0	2	i_height
op	13:17	0:0	2	=
water	13:19	0:0	2	fmt
op	13:22	0:0	2	.
water	13:23	0:0	2	i_visible_height
op	13:40	0:0	2	=
water	13:42	0:0	2	i_height
op	13:51	0:0	2	+
water	13:53	0:0	2	(
water	13:54	0:0	2	b_outline
water	13:64	0:0	2	?
water	13:66	0:0	2	4
water	13:68	0:0	2	:
water	13:70	0:0	2	0
water	13:71	0:0	2	)
water	13:72	0:0	2	;
water	14:4	0:0	2	fmt
op	14:7	0:0	2	.
water	14:8	0:0	2	i_x_offset
op	14:19	0:0	2	=
water	14:21	0:0	2	fmt
op	14:24	0:0	2	.
water	14:25	0:0	2	i_y_offset
op	14:36	0:0	2	=
water	14:38	0:0	2	0
water	14:39	0:0	2	;
water	15:4	0:0	2	fmt
op	15:7	0:0	2	.
water	15:8	0:0	2	i_sar_num
op	15:18	0:0	2	=
water	15:20	0:0	2	1
water	15:21	0:0	2	;
water	16:4	0:0	2	fmt
op	16:7	0:0	2	.
water	16:8	0:0	2	i_sar_den
op	16:18	0:0	2	=
water	16:20	0:0	2	1
water	16:21	0:0	2	;
water	18:4	0:0	2	fmt
op	18:7	0:0	2	.
water	18:8	0:0	2	p_palette
op	18:18	0:0	2	=
call	18:20	18:54	2	calloc
arg	18:28	18:29	3	1
water	18:28	0:0	4	1
arg	18:31	18:54	3	sizeof(*fmt.p_palette)
op	18:31	0:0	4	sizeof
water	18:37	0:0	4	(
op	18:38	0:0	4	*
water	18:39	0:0	4	fmt
op	18:42	0:0	4	.
water	18:43	0:0	4	p_palette
water	18:52	0:0	4	)
water	18:55	0:0	2	;
if	19:4	20:27	2	(! fmt . p_palette)
cond	19:8	19:13	3	! fmt . p_palette
op	19:8	0:0	4	!
water	19:9	0:0	4	fmt
op	19:12	0:0	4	.
water	19:13	0:0	4	p_palette
stmts	20:8	20:27	3	
return	20:8	20:27	4	VLC_EGENERIC
water	20:15	0:0	5	VLC_EGENERIC
water	21:4	0:0	2	fmt
op	21:7	0:0	2	.
water	21:8	0:0	2	p_palette
op	21:17	0:0	2	->
water	21:19	0:0	2	i_entries
op	21:29	0:0	2	=
water	21:31	0:0	2	16
water	21:33	0:0	2	;
for	22:4	28:4	2	(i = 0 ;i < fmt . p_palette -> i_entries;i ++)
forinit	22:9	22:14	3	i = 0 ;
water	22:9	0:0	4	i
op	22:11	0:0	4	=
water	22:13	0:0	4	0
water	22:14	0:0	4	;
cond	22:16	22:35	3	i < fmt . p_palette -> i_entries
water	22:16	0:0	4	i
op	22:18	0:0	4	<
water	22:20	0:0	4	fmt
op	22:23	0:0	4	.
water	22:24	0:0	4	p_palette
op	22:33	0:0	4	->
water	22:35	0:0	4	i_entries
forexpr	22:46	22:47	3	i ++
water	22:46	0:0	4	i
op	22:47	0:0	4	++
stmts	23:4	28:4	3	
water	23:4	0:0	4	{
water	24:8	0:0	4	fmt
op	24:11	0:0	4	.
water	24:12	0:0	4	p_palette
op	24:21	0:0	4	->
water	24:23	0:0	4	palette
op	24:30	0:0	4	[
water	24:31	0:0	4	i
op	24:32	0:0	4	]
op	24:33	0:0	4	[
water	24:34	0:0	4	0
op	24:35	0:0	4	]
op	24:37	0:0	4	=
water	24:39	0:0	4	pi_gamma
op	24:47	0:0	4	[
water	24:48	0:0	4	i
op	24:49	0:0	4	]
water	24:50	0:0	4	;
water	25:8	0:0	4	fmt
op	25:11	0:0	4	.
water	25:12	0:0	4	p_palette
op	25:21	0:0	4	->
water	25:23	0:0	4	palette
op	25:30	0:0	4	[
water	25:31	0:0	4	i
op	25:32	0:0	4	]
op	25:33	0:0	4	[
water	25:34	0:0	4	1
op	25:35	0:0	4	]
op	25:37	0:0	4	=
water	25:39	0:0	4	128
water	25:42	0:0	4	;
water	26:8	0:0	4	fmt
op	26:11	0:0	4	.
water	26:12	0:0	4	p_palette
op	26:21	0:0	4	->
water	26:23	0:0	4	palette
op	26:30	0:0	4	[
water	26:31	0:0	4	i
op	26:32	0:0	4	]
op	26:33	0:0	4	[
water	26:34	0:0	4	2
op	26:35	0:0	4	]
op	26:37	0:0	4	=
water	26:39	0:0	4	128
water	26:42	0:0	4	;
water	27:8	0:0	4	fmt
op	27:11	0:0	4	.
water	27:12	0:0	4	p_palette
op	27:21	0:0	4	->
water	27:23	0:0	4	palette
op	27:30	0:0	4	[
water	27:31	0:0	4	i
op	27:32	0:0	4	]
op	27:33	0:0	4	[
water	27:34	0:0	4	3
op	27:35	0:0	4	]
op	27:37	0:0	4	=
water	27:39	0:0	4	pi_gamma
op	27:47	0:0	4	[
water	27:48	0:0	4	i
op	27:49	0:0	4	]
water	27:50	0:0	4	;
water	28:4	0:0	4	}
water	29:4	0:0	2	p_region
op	29:12	0:0	2	->
water	29:14	0:0	2	p_picture
op	29:24	0:0	2	=
call	29:26	29:54	2	picture_NewFromFormat
arg	29:49	29:54	3	&fmt
op	29:49	0:0	4	&
water	29:50	0:0	4	fmt
water	29:55	0:0	2	;
if	30:4	34:4	2	(! p_region -> p_picture)
cond	30:8	30:19	3	! p_region -> p_picture
op	30:8	0:0	4	!
water	30:9	0:0	4	p_region
op	30:17	0:0	4	->
water	30:19	0:0	4	p_picture
stmts	31:4	34:4	3	
water	31:4	0:0	4	{
call	32:8	32:28	4	free
arg	32:14	32:28	5	fmt.p_palette
water	32:14	0:0	6	fmt
op	32:17	0:0	6	.
water	32:18	0:0	6	p_palette
water	32:29	0:0	4	;
return	33:8	33:27	4	VLC_EGENERIC
water	33:15	0:0	5	VLC_EGENERIC
water	34:4	0:0	4	}
water	35:4	0:0	2	p_region
op	35:12	0:0	2	->
water	35:14	0:0	2	fmt
op	35:18	0:0	2	=
water	35:20	0:0	2	fmt
water	35:23	0:0	2	;
water	36:4	0:0	2	p_dst
op	36:10	0:0	2	=
water	36:12	0:0	2	p_region
op	36:20	0:0	2	->
water	36:22	0:0	2	p_picture
op	36:31	0:0	2	->
water	36:33	0:0	2	Y_PIXELS
water	36:41	0:0	2	;
water	37:4	0:0	2	i_pitch
op	37:12	0:0	2	=
water	37:14	0:0	2	p_region
op	37:22	0:0	2	->
water	37:24	0:0	2	p_picture
op	37:33	0:0	2	->
water	37:35	0:0	2	Y_PITCH
water	37:42	0:0	2	;
if	38:4	42:4	2	(b_outline)
cond	38:8	38:8	3	b_outline
water	38:8	0:0	4	b_outline
stmts	39:4	42:4	3	
water	39:4	0:0	4	{
call	40:8	40:49	4	memset
arg	40:16	40:21	5	p_dst
water	40:16	0:0	6	p_dst
arg	40:23	40:24	5	0
water	40:23	0:0	6	0
arg	40:26	40:49	5	i_pitch*fmt.i_height
water	40:26	0:0	6	i_pitch
op	40:34	0:0	6	*
water	40:36	0:0	6	fmt
op	40:39	0:0	6	.
water	40:40	0:0	6	i_height
water	40:50	0:0	4	;
water	41:8	0:0	4	p_dst
op	41:14	0:0	4	+=
water	41:17	0:0	4	p_region
op	41:25	0:0	4	->
water	41:27	0:0	4	p_picture
op	41:36	0:0	4	->
water	41:38	0:0	4	Y_PITCH
op	41:46	0:0	4	*
water	41:48	0:0	4	2
op	41:50	0:0	4	+
water	41:52	0:0	4	2
water	41:53	0:0	4	;
water	42:4	0:0	4	}
for	43:4	48:4	2	(i = 0 ;i < i_height;i ++)
forinit	43:9	43:14	3	i = 0 ;
water	43:9	0:0	4	i
op	43:11	0:0	4	=
water	43:13	0:0	4	0
water	43:14	0:0	4	;
cond	43:16	43:20	3	i < i_height
water	43:16	0:0	4	i
op	43:18	0:0	4	<
water	43:20	0:0	4	i_height
forexpr	43:30	43:31	3	i ++
water	43:30	0:0	4	i
op	43:31	0:0	4	++
stmts	44:4	48:4	3	
water	44:4	0:0	4	{
call	45:8	45:41	4	memcpy
arg	45:16	45:21	5	p_dst
water	45:16	0:0	6	p_dst
arg	45:23	45:31	5	p_bitmap
water	45:23	0:0	6	p_bitmap
arg	45:33	45:41	5	i_width
water	45:33	0:0	6	i_width
water	45:42	0:0	4	;
water	46:8	0:0	4	p_bitmap
op	46:17	0:0	4	+=
water	46:20	0:0	4	(
water	46:21	0:0	4	i_width
op	46:28	0:0	4	+
water	46:29	0:0	4	3
water	46:30	0:0	4	)
op	46:32	0:0	4	&
water	46:34	0:0	4	~3
water	46:36	0:0	4	;
water	47:8	0:0	4	p_dst
op	47:14	0:0	4	+=
water	47:17	0:0	4	i_pitch
water	47:24	0:0	4	;
water	48:4	0:0	4	}
if	50:4	70:4	2	(b_outline)
cond	50:8	50:8	3	b_outline
water	50:8	0:0	4	b_outline
stmts	51:4	70:4	3	
water	51:4	0:0	4	{
decl	52:8	52:30	4	uint8_t	*p_top
op	52:23	0:0	4	=
water	52:25	0:0	4	p_dst
decl	53:8	53:29	4	uint8_t	left
water	53:20	0:0	4	,
decl	53:8	53:29	4	uint8_t	current
decl	54:8	54:16	4	int	x
water	54:13	0:0	4	,
decl	54:8	54:16	4	int	y
water	55:8	0:0	4	p_dst
op	55:14	0:0	4	=
water	55:16	0:0	4	p_region
op	55:24	0:0	4	->
water	55:26	0:0	4	p_picture
op	55:35	0:0	4	->
water	55:37	0:0	4	Y_PIXELS
water	55:45	0:0	4	;
for	56:8	68:8	4	(y = 1 ;y < ( int ) fmt . i_height - 1;y ++)
forinit	56:13	56:18	5	y = 1 ;
water	56:13	0:0	6	y
op	56:15	0:0	6	=
water	56:17	0:0	6	1
water	56:18	0:0	6	;
cond	56:20	56:44	5	y < ( int ) fmt . i_height - 1
water	56:20	0:0	6	y
op	56:22	0:0	6	<
water	56:24	0:0	6	(
water	56:25	0:0	6	int
water	56:28	0:0	6	)
water	56:29	0:0	6	fmt
op	56:32	0:0	6	.
water	56:33	0:0	6	i_height
op	56:42	0:0	6	-
water	56:44	0:0	6	1
forexpr	56:47	56:48	5	y ++
water	56:47	0:0	6	y
op	56:48	0:0	6	++
stmts	57:8	68:8	5	
water	57:8	0:0	6	{
call	58:12	58:46	6	memcpy
arg	58:20	58:25	7	p_top
water	58:20	0:0	8	p_top
arg	58:27	58:32	7	p_dst
water	58:27	0:0	8	p_dst
arg	58:34	58:46	7	fmt.i_width
water	58:34	0:0	8	fmt
op	58:37	0:0	8	.
water	58:38	0:0	8	i_width
water	58:47	0:0	6	;
water	59:12	0:0	6	p_dst
op	59:18	0:0	6	+=
water	59:21	0:0	6	i_pitch
water	59:28	0:0	6	;
water	60:12	0:0	6	left
op	60:17	0:0	6	=
water	60:19	0:0	6	0
water	60:20	0:0	6	;
for	61:12	67:12	6	(x = 1 ;x < ( int ) fmt . i_width - 1;x ++)
forinit	61:17	61:22	7	x = 1 ;
water	61:17	0:0	8	x
op	61:19	0:0	8	=
water	61:21	0:0	8	1
water	61:22	0:0	8	;
cond	61:24	61:47	7	x < ( int ) fmt . i_width - 1
water	61:24	0:0	8	x
op	61:26	0:0	8	<
water	61:28	0:0	8	(
water	61:29	0:0	8	int
water	61:32	0:0	8	)
water	61:33	0:0	8	fmt
op	61:36	0:0	8	.
water	61:37	0:0	8	i_width
op	61:45	0:0	8	-
water	61:47	0:0	8	1
forexpr	61:50	61:51	7	x ++
water	61:50	0:0	8	x
op	61:51	0:0	8	++
stmts	62:12	67:12	7	
water	62:12	0:0	8	{
water	63:16	0:0	8	current
op	63:24	0:0	8	=
water	63:26	0:0	8	p_dst
op	63:31	0:0	8	[
water	63:32	0:0	8	x
op	63:33	0:0	8	]
water	63:34	0:0	8	;
water	64:16	0:0	8	p_dst
op	64:21	0:0	8	[
water	64:22	0:0	8	x
op	64:23	0:0	8	]
op	64:25	0:0	8	=
water	64:27	0:0	8	(
water	64:29	0:0	8	4
op	64:31	0:0	8	*
water	64:33	0:0	8	(
water	64:34	0:0	8	int
water	64:37	0:0	8	)
water	64:38	0:0	8	p_dst
op	64:43	0:0	8	[
water	64:44	0:0	8	x
op	64:45	0:0	8	]
op	64:47	0:0	8	+
water	64:49	0:0	8	left
op	64:54	0:0	8	+
water	64:56	0:0	8	p_top
op	64:61	0:0	8	[
water	64:62	0:0	8	x
op	64:63	0:0	8	]
op	64:65	0:0	8	+
water	64:67	0:0	8	p_dst
op	64:72	0:0	8	[
water	64:73	0:0	8	x
op	64:74	0:0	8	+
water	64:75	0:0	8	1
op	64:76	0:0	8	]
op	64:78	0:0	8	+
water	65:29	0:0	8	p_dst
op	65:34	0:0	8	[
water	65:35	0:0	8	x
op	65:37	0:0	8	+
water	65:39	0:0	8	i_pitch
op	65:46	0:0	8	]
water	65:47	0:0	8	)
op	65:49	0:0	8	/
water	65:51	0:0	8	8
water	65:52	0:0	8	;
water	66:16	0:0	8	left
op	66:21	0:0	8	=
water	66:23	0:0	8	current
water	66:30	0:0	8	;
water	67:12	0:0	8	}
water	68:8	0:0	6	}
call	69:8	69:38	4	memset
arg	69:16	69:21	5	p_top
water	69:16	0:0	6	p_top
arg	69:23	69:24	5	0
water	69:23	0:0	6	0
arg	69:26	69:38	5	fmt.i_width
water	69:26	0:0	6	fmt
op	69:29	0:0	6	.
water	69:30	0:0	6	i_width
water	69:39	0:0	4	;
water	70:4	0:0	4	}
return	71:4	71:22	2	VLC_SUCCESS
water	71:11	0:0	3	VLC_SUCCESS

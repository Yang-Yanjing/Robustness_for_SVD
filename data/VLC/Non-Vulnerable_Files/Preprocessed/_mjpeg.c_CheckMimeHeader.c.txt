func	2:0	84:0	0	static bool	CheckMimeHeader
params	2:27	0:0	1	
param	2:29	2:45	2	demux_t *	p_demux
param	2:47	2:66	2	int *	p_header_size
stmnts	0:0	83:17	1	
decl	4:4	4:30	2	bool	b_jpeg
op	4:23	0:0	2	=
water	4:25	0:0	2	false
decl	5:4	5:25	2	int	i_pos
op	5:22	0:0	2	=
water	5:24	0:0	2	0
decl	6:4	6:25	2	char	*psz_line
decl	7:4	7:21	2	char	*p_ch
decl	8:4	8:39	2	demux_sys_t	*p_sys
op	8:23	0:0	2	=
water	8:25	0:0	2	p_demux
op	8:32	0:0	2	->
water	8:34	0:0	2	p_sys
op	9:4	0:0	2	*
water	9:5	0:0	2	p_header_size
op	9:19	0:0	2	=
op	9:21	0:0	2	-
water	9:22	0:0	2	1
water	9:23	0:0	2	;
if	10:4	14:4	2	(!Peek (p_demux ,true ))
cond	10:8	10:29	3	!Peek (p_demux ,true )
op	10:8	0:0	4	!
call	10:9	10:29	4	Peek
arg	10:15	10:22	5	p_demux
water	10:15	0:0	6	p_demux
arg	10:24	10:29	5	true
water	10:24	0:0	6	true
stmts	11:4	14:4	3	
water	11:4	0:0	4	{
call	12:8	12:40	4	msg_Err
arg	12:17	12:24	5	p_demux
water	12:17	0:0	6	p_demux
arg	12:26	12:40	5	"cannot peek"
water	12:26	0:0	6	"cannot peek"
water	12:41	0:0	4	;
return	13:8	13:20	4	false
water	13:15	0:0	5	false
water	14:4	0:0	4	}
if	15:4	19:4	2	(p_sys -> i_data_peeked < 5)
cond	15:8	15:31	3	p_sys -> i_data_peeked < 5
water	15:8	0:0	4	p_sys
op	15:13	0:0	4	->
water	15:15	0:0	4	i_data_peeked
op	15:29	0:0	4	<
water	15:31	0:0	4	5
stmts	16:4	19:4	3	
water	16:4	0:0	4	{
call	17:8	17:42	4	msg_Err
arg	17:17	17:24	5	p_demux
water	17:17	0:0	6	p_demux
arg	17:26	17:42	5	"data shortage"
water	17:26	0:0	6	"data shortage"
water	17:43	0:0	4	;
return	18:8	18:20	4	false
water	18:15	0:0	5	false
water	19:4	0:0	4	}
if	20:4	25:4	2	(strncmp (( char * ) p_sys -> p_peek ,"--" ,2 ) != 0 &&strncmp (( char * ) p_sys -> p_peek ,"\r\n--" ,4 ) != 0)
cond	20:8	21:60	3	strncmp (( char * ) p_sys -> p_peek ,"--" ,2 ) != 0 &&strncmp (( char * ) p_sys -> p_peek ,"\r\n--" ,4 ) != 0
call	20:8	20:48	4	strncmp
arg	20:17	20:38	5	(char*)p_sys->p_peek
water	20:17	0:0	6	(
water	20:18	0:0	6	char
op	20:23	0:0	6	*
water	20:24	0:0	6	)
water	20:25	0:0	6	p_sys
op	20:30	0:0	6	->
water	20:32	0:0	6	p_peek
arg	20:40	20:44	5	"--"
water	20:40	0:0	6	"--"
arg	20:46	20:48	5	2
water	20:46	0:0	6	2
op	20:50	0:0	4	!=
water	20:53	0:0	4	0
op	21:8	0:0	4	&&
call	21:11	21:55	4	strncmp
arg	21:20	21:41	5	(char*)p_sys->p_peek
water	21:20	0:0	6	(
water	21:21	0:0	6	char
op	21:26	0:0	6	*
water	21:27	0:0	6	)
water	21:28	0:0	6	p_sys
op	21:33	0:0	6	->
water	21:35	0:0	6	p_peek
arg	21:43	21:51	5	"\r\n--"
water	21:43	0:0	6	"\r\n--"
arg	21:53	21:55	5	4
water	21:53	0:0	6	4
op	21:57	0:0	4	!=
water	21:60	0:0	4	0
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
op	23:8	0:0	4	*
water	23:9	0:0	4	p_header_size
op	23:23	0:0	4	=
water	23:25	0:0	4	0
water	23:26	0:0	4	;
return	24:8	24:20	4	false
water	24:15	0:0	5	false
water	25:4	0:0	4	}
else	26:4	51:4	2
stmts	27:4	51:4	3	
water	27:4	0:0	4	{
water	28:8	0:0	4	i_pos
op	28:14	0:0	4	=
op	28:16	0:0	4	*
water	28:17	0:0	4	p_sys
op	28:22	0:0	4	->
water	28:24	0:0	4	p_peek
op	28:31	0:0	4	==
water	28:34	0:0	4	'-'
water	28:38	0:0	4	?
water	28:40	0:0	4	2
water	28:42	0:0	4	:
water	28:44	0:0	4	4
water	28:45	0:0	4	;
water	29:8	0:0	4	psz_line
op	29:17	0:0	4	=
call	29:19	29:44	4	GetLine
arg	29:28	29:35	5	p_demux
water	29:28	0:0	6	p_demux
arg	29:37	29:44	5	&i_pos
op	29:37	0:0	6	&
water	29:38	0:0	6	i_pos
water	29:45	0:0	4	;
if	30:8	34:8	4	(NULL == psz_line)
cond	30:12	30:20	5	NULL == psz_line
water	30:12	0:0	6	NULL
op	30:17	0:0	6	==
water	30:20	0:0	6	psz_line
stmts	31:8	34:8	5	
water	31:8	0:0	6	{
call	32:12	32:39	6	msg_Err
arg	32:21	32:28	7	p_demux
water	32:21	0:0	8	p_demux
arg	32:30	32:39	7	"no EOL"
water	32:30	0:0	8	"no EOL"
water	32:40	0:0	6	;
return	33:12	33:24	6	false
water	33:19	0:0	7	false
water	34:8	0:0	6	}
if	36:8	41:8	4	(p_sys -> psz_separator == NULL)
cond	36:12	36:36	5	p_sys -> psz_separator == NULL
water	36:12	0:0	6	p_sys
op	36:17	0:0	6	->
water	36:19	0:0	6	psz_separator
op	36:33	0:0	6	==
water	36:36	0:0	6	NULL
stmts	37:8	41:8	5	
water	37:8	0:0	6	{
water	38:12	0:0	6	p_sys
op	38:17	0:0	6	->
water	38:19	0:0	6	psz_separator
op	38:33	0:0	6	=
water	38:35	0:0	6	psz_line
water	38:43	0:0	6	;
call	39:12	40:42	6	msg_Dbg
arg	39:21	39:28	7	p_demux
water	39:21	0:0	8	p_demux
arg	39:30	39:76	7	"Multipart MIME detected, using separator: %s"
water	39:30	0:0	8	"Multipart MIME detected, using separator: %s"
arg	40:21	40:42	7	p_sys->psz_separator
water	40:21	0:0	8	p_sys
op	40:26	0:0	8	->
water	40:28	0:0	8	psz_separator
water	40:43	0:0	6	;
water	41:8	0:0	6	}
else	42:8	50:8	4
stmts	43:8	50:8	5	
water	43:8	0:0	6	{
if	44:12	48:12	6	(strcmp (psz_line ,p_sys -> psz_separator ))
cond	44:16	44:55	7	strcmp (psz_line ,p_sys -> psz_separator )
call	44:16	44:55	8	strcmp
arg	44:24	44:32	9	psz_line
water	44:24	0:0	10	psz_line
arg	44:34	44:55	9	p_sys->psz_separator
water	44:34	0:0	10	p_sys
op	44:39	0:0	10	->
water	44:41	0:0	10	psz_separator
stmts	45:12	48:12	7	
water	45:12	0:0	8	{
call	46:16	47:47	8	msg_Warn
arg	46:26	46:33	9	p_demux
water	46:26	0:0	10	p_demux
arg	46:35	46:67	9	"separator %s does not match %s"
water	46:35	0:0	10	"separator %s does not match %s"
arg	46:69	46:77	9	psz_line
water	46:69	0:0	10	psz_line
arg	47:26	47:47	9	p_sys->psz_separator
water	47:26	0:0	10	p_sys
op	47:31	0:0	10	->
water	47:33	0:0	10	psz_separator
water	47:48	0:0	8	;
water	48:12	0:0	8	}
call	49:12	49:27	6	free
arg	49:18	49:27	7	psz_line
water	49:18	0:0	8	psz_line
water	49:28	0:0	6	;
water	50:8	0:0	6	}
water	51:4	0:0	4	}
water	52:4	0:0	2	psz_line
op	52:13	0:0	2	=
call	52:15	52:40	2	GetLine
arg	52:24	52:31	3	p_demux
water	52:24	0:0	4	p_demux
arg	52:33	52:40	3	&i_pos
op	52:33	0:0	4	&
water	52:34	0:0	4	i_pos
water	52:41	0:0	2	;
while	53:4	75:4	2	(psz_line && * psz_line)
cond	53:11	53:24	3	psz_line && * psz_line
water	53:11	0:0	4	psz_line
op	53:20	0:0	4	&&
op	53:23	0:0	4	*
water	53:24	0:0	4	psz_line
stmts	54:4	75:4	3	
water	54:4	0:0	4	{
if	55:8	68:8	4	(!strncasecmp (psz_line ,"Content-Type:" ,13 ))
cond	55:12	55:56	5	!strncasecmp (psz_line ,"Content-Type:" ,13 )
op	55:12	0:0	6	!
call	55:13	55:56	6	strncasecmp
arg	55:26	55:34	7	psz_line
water	55:26	0:0	8	psz_line
arg	55:36	55:51	7	"Content-Type:"
water	55:36	0:0	8	"Content-Type:"
arg	55:53	55:56	7	13
water	55:53	0:0	8	13
stmts	56:8	68:8	5	
water	56:8	0:0	6	{
water	57:12	0:0	6	p_ch
op	57:17	0:0	6	=
water	57:19	0:0	6	psz_line
op	57:28	0:0	6	+
water	57:30	0:0	6	13
water	57:32	0:0	6	;
while	58:12	58:78	6	(* p_ch != '\0' && ( * p_ch == ' ' || * p_ch == '\t' ))
cond	58:19	58:68	7	* p_ch != '\0' && ( * p_ch == ' ' || * p_ch == '\t' )
op	58:19	0:0	8	*
water	58:20	0:0	8	p_ch
op	58:25	0:0	8	!=
water	58:28	0:0	8	'\0'
op	58:33	0:0	8	&&
water	58:36	0:0	8	(
op	58:38	0:0	8	*
water	58:39	0:0	8	p_ch
op	58:44	0:0	8	==
water	58:47	0:0	8	' '
op	58:51	0:0	8	||
op	58:54	0:0	8	*
water	58:55	0:0	8	p_ch
op	58:60	0:0	8	==
water	58:63	0:0	8	'\t'
water	58:68	0:0	8	)
stmts	58:72	58:78	7	
water	58:72	0:0	8	p_ch
op	58:76	0:0	8	++
water	58:78	0:0	8	;
if	59:12	63:12	6	(strncasecmp (p_ch ,"image/jpeg" ,10 ))
cond	59:16	59:52	7	strncasecmp (p_ch ,"image/jpeg" ,10 )
call	59:16	59:52	8	strncasecmp
arg	59:29	59:33	9	p_ch
water	59:29	0:0	10	p_ch
arg	59:35	59:47	9	"image/jpeg"
water	59:35	0:0	10	"image/jpeg"
arg	59:49	59:52	9	10
water	59:49	0:0	10	10
stmts	60:12	63:12	7	
water	60:12	0:0	8	{
call	61:16	61:74	8	msg_Warn
arg	61:26	61:33	9	p_demux
water	61:26	0:0	10	p_demux
arg	61:35	61:63	9	"%s, image/jpeg is expected"
water	61:35	0:0	10	"%s, image/jpeg is expected"
arg	61:65	61:74	9	psz_line
water	61:65	0:0	10	psz_line
water	61:75	0:0	8	;
water	62:16	0:0	8	b_jpeg
op	62:23	0:0	8	=
water	62:25	0:0	8	false
water	62:30	0:0	8	;
water	63:12	0:0	8	}
else	64:12	67:12	6
stmts	65:12	67:12	7	
water	65:12	0:0	8	{
water	66:16	0:0	8	b_jpeg
op	66:23	0:0	8	=
water	66:25	0:0	8	true
water	66:29	0:0	8	;
water	67:12	0:0	8	}
water	68:8	0:0	6	}
else	69:8	72:8	4
stmts	70:8	72:8	5	
water	70:8	0:0	6	{
call	71:12	71:66	6	msg_Dbg
arg	71:21	71:28	7	p_demux
water	71:21	0:0	8	p_demux
arg	71:30	71:55	7	"discard MIME header: %s"
water	71:30	0:0	8	"discard MIME header: %s"
arg	71:57	71:66	7	psz_line
water	71:57	0:0	8	psz_line
water	71:67	0:0	6	;
water	72:8	0:0	6	}
call	73:8	73:23	4	free
arg	73:14	73:23	5	psz_line
water	73:14	0:0	6	psz_line
water	73:24	0:0	4	;
water	74:8	0:0	4	psz_line
op	74:17	0:0	4	=
call	74:19	74:44	4	GetLine
arg	74:28	74:35	5	p_demux
water	74:28	0:0	6	p_demux
arg	74:37	74:44	5	&i_pos
op	74:37	0:0	6	&
water	74:38	0:0	6	i_pos
water	74:45	0:0	4	;
water	75:4	0:0	4	}
if	76:4	80:4	2	(NULL == psz_line)
cond	76:8	76:16	3	NULL == psz_line
water	76:8	0:0	4	NULL
op	76:13	0:0	4	==
water	76:16	0:0	4	psz_line
stmts	77:4	80:4	3	
water	77:4	0:0	4	{
call	78:8	78:35	4	msg_Err
arg	78:17	78:24	5	p_demux
water	78:17	0:0	6	p_demux
arg	78:26	78:35	5	"no EOL"
water	78:26	0:0	6	"no EOL"
water	78:36	0:0	4	;
return	79:8	79:20	4	false
water	79:15	0:0	5	false
water	80:4	0:0	4	}
call	81:4	81:19	2	free
arg	81:10	81:19	3	psz_line
water	81:10	0:0	4	psz_line
water	81:20	0:0	2	;
op	82:4	0:0	2	*
water	82:5	0:0	2	p_header_size
op	82:19	0:0	2	=
water	82:21	0:0	2	i_pos
water	82:26	0:0	2	;
return	83:4	83:17	2	b_jpeg
water	83:11	0:0	3	b_jpeg

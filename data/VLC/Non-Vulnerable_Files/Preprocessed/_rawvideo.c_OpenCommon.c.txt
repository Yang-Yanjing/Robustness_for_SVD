func	2:0	52:0	0	static int	OpenCommon
params	2:21	0:0	1	
param	2:23	2:40	2	decoder_t *	p_dec
stmnts	0:0	51:22	1	
decl	4:4	5:64	2	const vlc_chroma_description_t	*dsc
op	4:40	0:0	2	=
call	5:8	5:63	3	vlc_fourcc_GetChromaDescription
arg	5:41	5:63	4	p_dec->fmt_in.i_codec
water	5:41	0:0	5	p_dec
op	5:46	0:0	5	->
water	5:48	0:0	5	fmt_in
op	5:54	0:0	5	.
water	5:55	0:0	5	i_codec
if	6:4	7:27	2	(dsc == NULL || dsc -> plane_count == 0)
cond	6:8	6:43	3	dsc == NULL || dsc -> plane_count == 0
water	6:8	0:0	4	dsc
op	6:12	0:0	4	==
water	6:15	0:0	4	NULL
op	6:20	0:0	4	||
water	6:23	0:0	4	dsc
op	6:26	0:0	4	->
water	6:28	0:0	4	plane_count
op	6:40	0:0	4	==
water	6:43	0:0	4	0
stmts	7:8	7:27	3	
return	7:8	7:27	4	VLC_EGENERIC
water	7:15	0:0	5	VLC_EGENERIC
if	8:4	13:4	2	(p_dec -> fmt_in . video . i_width <= 0 || p_dec -> fmt_in . video . i_height == 0)
cond	8:8	8:76	3	p_dec -> fmt_in . video . i_width <= 0 || p_dec -> fmt_in . video . i_height == 0
water	8:8	0:0	4	p_dec
op	8:13	0:0	4	->
water	8:15	0:0	4	fmt_in
op	8:21	0:0	4	.
water	8:22	0:0	4	video
op	8:27	0:0	4	.
water	8:28	0:0	4	i_width
op	8:36	0:0	4	<=
water	8:39	0:0	4	0
op	8:41	0:0	4	||
water	8:44	0:0	4	p_dec
op	8:49	0:0	4	->
water	8:51	0:0	4	fmt_in
op	8:57	0:0	4	.
water	8:58	0:0	4	video
op	8:63	0:0	4	.
water	8:64	0:0	4	i_height
op	8:73	0:0	4	==
water	8:76	0:0	4	0
stmts	9:4	13:4	3	
water	9:4	0:0	4	{
call	10:8	11:75	4	msg_Err
arg	10:17	10:22	5	p_dec
water	10:17	0:0	6	p_dec
arg	10:24	10:52	5	"invalid display size %dx%d"
water	10:24	0:0	6	"invalid display size %dx%d"
arg	11:17	11:44	5	p_dec->fmt_in.video.i_width
water	11:17	0:0	6	p_dec
op	11:22	0:0	6	->
water	11:24	0:0	6	fmt_in
op	11:30	0:0	6	.
water	11:31	0:0	6	video
op	11:36	0:0	6	.
water	11:37	0:0	6	i_width
arg	11:46	11:75	5	p_dec->fmt_in.video.i_height
water	11:46	0:0	6	p_dec
op	11:51	0:0	6	->
water	11:53	0:0	6	fmt_in
op	11:59	0:0	6	.
water	11:60	0:0	6	video
op	11:65	0:0	6	.
water	11:66	0:0	6	i_height
water	11:76	0:0	4	;
return	12:8	12:27	4	VLC_EGENERIC
water	12:15	0:0	5	VLC_EGENERIC
water	13:4	0:0	4	}
decl	15:4	15:52	2	decoder_sys_t	*p_sys
op	15:25	0:0	2	=
call	15:27	15:51	3	calloc
arg	15:34	15:35	4	1
water	15:34	0:0	5	1
arg	15:37	15:51	4	sizeof(*p_sys)
op	15:37	0:0	5	sizeof
water	15:43	0:0	5	(
op	15:44	0:0	5	*
water	15:45	0:0	5	p_sys
water	15:50	0:0	5	)
if	16:4	17:25	2	(unlikely (p_sys == NULL ))
cond	16:8	16:30	3	unlikely (p_sys == NULL )
call	16:8	16:30	4	unlikely
arg	16:17	16:30	5	p_sys==NULL
water	16:17	0:0	6	p_sys
op	16:23	0:0	6	==
water	16:26	0:0	6	NULL
stmts	17:8	17:25	3	
return	17:8	17:25	4	VLC_ENOMEM
water	17:15	0:0	5	VLC_ENOMEM
if	18:4	24:4	2	(( int ) p_dec -> fmt_in . video . i_height < 0)
cond	18:8	18:44	3	( int ) p_dec -> fmt_in . video . i_height < 0
water	18:8	0:0	4	(
water	18:9	0:0	4	int
water	18:12	0:0	4	)
water	18:13	0:0	4	p_dec
op	18:18	0:0	4	->
water	18:20	0:0	4	fmt_in
op	18:26	0:0	4	.
water	18:27	0:0	4	video
op	18:32	0:0	4	.
water	18:33	0:0	4	i_height
op	18:42	0:0	4	<
water	18:44	0:0	4	0
stmts	19:4	24:4	3	
water	19:4	0:0	4	{
water	21:8	0:0	4	p_dec
op	21:13	0:0	4	->
water	21:15	0:0	4	fmt_in
op	21:21	0:0	4	.
water	21:22	0:0	4	video
op	21:27	0:0	4	.
water	21:28	0:0	4	i_height
op	21:37	0:0	4	=
call	22:12	22:61	4	(unsignedint)
arg	22:27	22:61	5	-(int)p_dec->fmt_in.video.i_height
op	22:27	0:0	6	-
water	22:28	0:0	6	(
water	22:29	0:0	6	int
water	22:32	0:0	6	)
water	22:33	0:0	6	p_dec
op	22:38	0:0	6	->
water	22:40	0:0	6	fmt_in
op	22:46	0:0	6	.
water	22:47	0:0	6	video
op	22:52	0:0	6	.
water	22:53	0:0	6	i_height
water	22:62	0:0	4	;
water	23:8	0:0	4	p_sys
op	23:13	0:0	4	->
water	23:15	0:0	4	b_invert
op	23:24	0:0	4	=
water	23:26	0:0	4	true
water	23:30	0:0	4	;
water	24:4	0:0	4	}
if	25:4	26:73	2	(! p_dec -> fmt_in . video . i_visible_width)
cond	25:8	25:29	3	! p_dec -> fmt_in . video . i_visible_width
op	25:8	0:0	4	!
water	25:9	0:0	4	p_dec
op	25:14	0:0	4	->
water	25:16	0:0	4	fmt_in
op	25:22	0:0	4	.
water	25:23	0:0	4	video
op	25:28	0:0	4	.
water	25:29	0:0	4	i_visible_width
stmts	26:8	26:73	3	
water	26:8	0:0	4	p_dec
op	26:13	0:0	4	->
water	26:15	0:0	4	fmt_in
op	26:21	0:0	4	.
water	26:22	0:0	4	video
op	26:27	0:0	4	.
water	26:28	0:0	4	i_visible_width
op	26:44	0:0	4	=
water	26:46	0:0	4	p_dec
op	26:51	0:0	4	->
water	26:53	0:0	4	fmt_in
op	26:59	0:0	4	.
water	26:60	0:0	4	video
op	26:65	0:0	4	.
water	26:66	0:0	4	i_width
water	26:73	0:0	4	;
if	27:4	28:75	2	(! p_dec -> fmt_in . video . i_visible_height)
cond	27:8	27:29	3	! p_dec -> fmt_in . video . i_visible_height
op	27:8	0:0	4	!
water	27:9	0:0	4	p_dec
op	27:14	0:0	4	->
water	27:16	0:0	4	fmt_in
op	27:22	0:0	4	.
water	27:23	0:0	4	video
op	27:28	0:0	4	.
water	27:29	0:0	4	i_visible_height
stmts	28:8	28:75	3	
water	28:8	0:0	4	p_dec
op	28:13	0:0	4	->
water	28:15	0:0	4	fmt_in
op	28:21	0:0	4	.
water	28:22	0:0	4	video
op	28:27	0:0	4	.
water	28:28	0:0	4	i_visible_height
op	28:45	0:0	4	=
water	28:47	0:0	4	p_dec
op	28:52	0:0	4	->
water	28:54	0:0	4	fmt_in
op	28:60	0:0	4	.
water	28:61	0:0	4	video
op	28:66	0:0	4	.
water	28:67	0:0	4	i_height
water	28:75	0:0	4	;
call	29:4	29:52	2	es_format_Copy
arg	29:20	29:35	3	&p_dec->fmt_out
op	29:20	0:0	4	&
water	29:21	0:0	4	p_dec
op	29:26	0:0	4	->
water	29:28	0:0	4	fmt_out
arg	29:37	29:52	3	&p_dec->fmt_in
op	29:37	0:0	4	&
water	29:38	0:0	4	p_dec
op	29:43	0:0	4	->
water	29:45	0:0	4	fmt_in
water	29:53	0:0	2	;
call	30:4	31:54	2	date_Init
arg	30:15	30:26	3	&p_sys->pts
op	30:15	0:0	4	&
water	30:16	0:0	4	p_sys
op	30:21	0:0	4	->
water	30:23	0:0	4	pts
arg	30:28	30:61	3	p_dec->fmt_out.video.i_frame_rate
water	30:28	0:0	4	p_dec
op	30:33	0:0	4	->
water	30:35	0:0	4	fmt_out
op	30:42	0:0	4	.
water	30:43	0:0	4	video
op	30:48	0:0	4	.
water	30:49	0:0	4	i_frame_rate
arg	31:15	31:54	3	p_dec->fmt_out.video.i_frame_rate_base
water	31:15	0:0	4	p_dec
op	31:20	0:0	4	->
water	31:22	0:0	4	fmt_out
op	31:29	0:0	4	.
water	31:30	0:0	4	video
op	31:35	0:0	4	.
water	31:36	0:0	4	i_frame_rate_base
water	31:55	0:0	2	;
if	32:4	39:4	2	(p_dec -> fmt_out . video . i_frame_rate == 0 || p_dec -> fmt_out . video . i_frame_rate_base == 0)
cond	32:8	33:50	3	p_dec -> fmt_out . video . i_frame_rate == 0 || p_dec -> fmt_out . video . i_frame_rate_base == 0
water	32:8	0:0	4	p_dec
op	32:13	0:0	4	->
water	32:15	0:0	4	fmt_out
op	32:22	0:0	4	.
water	32:23	0:0	4	video
op	32:28	0:0	4	.
water	32:29	0:0	4	i_frame_rate
op	32:42	0:0	4	==
water	32:45	0:0	4	0
op	32:47	0:0	4	||
water	33:8	0:0	4	p_dec
op	33:13	0:0	4	->
water	33:15	0:0	4	fmt_out
op	33:22	0:0	4	.
water	33:23	0:0	4	video
op	33:28	0:0	4	.
water	33:29	0:0	4	i_frame_rate_base
op	33:47	0:0	4	==
water	33:50	0:0	4	0
stmts	34:4	39:4	3	
water	34:4	0:0	4	{
call	35:8	37:56	4	msg_Warn
arg	35:18	35:23	5	p_dec
water	35:18	0:0	6	p_dec
arg	35:25	35:73	5	"invalid frame rate %d/%d, using 25 fps instead"
water	35:25	0:0	6	"invalid frame rate %d/%d, using 25 fps instead"
arg	36:18	36:51	5	p_dec->fmt_out.video.i_frame_rate
water	36:18	0:0	6	p_dec
op	36:23	0:0	6	->
water	36:25	0:0	6	fmt_out
op	36:32	0:0	6	.
water	36:33	0:0	6	video
op	36:38	0:0	6	.
water	36:39	0:0	6	i_frame_rate
arg	37:18	37:56	5	p_dec->fmt_out.video.i_frame_rate_base
water	37:18	0:0	6	p_dec
op	37:23	0:0	6	->
water	37:25	0:0	6	fmt_out
op	37:32	0:0	6	.
water	37:33	0:0	6	video
op	37:38	0:0	6	.
water	37:39	0:0	6	i_frame_rate_base
water	37:57	0:0	4	;
call	38:8	38:38	4	date_Init
arg	38:19	38:30	5	&p_sys->pts
op	38:19	0:0	6	&
water	38:20	0:0	6	p_sys
op	38:25	0:0	6	->
water	38:27	0:0	6	pts
arg	38:32	38:34	5	25
water	38:32	0:0	6	25
arg	38:36	38:38	5	1
water	38:36	0:0	6	1
water	38:39	0:0	4	;
water	39:4	0:0	4	}
for	40:4	49:4	2	(unsigned i = 0 ;i < dsc -> plane_count;i ++)
forinit	40:9	40:23	3	unsigned i = 0 ;
water	40:9	0:0	4	unsigned
water	40:18	0:0	4	i
op	40:20	0:0	4	=
water	40:22	0:0	4	0
water	40:23	0:0	4	;
cond	40:25	40:34	3	i < dsc -> plane_count
water	40:25	0:0	4	i
op	40:27	0:0	4	<
water	40:29	0:0	4	dsc
op	40:32	0:0	4	->
water	40:34	0:0	4	plane_count
forexpr	40:47	40:48	3	i ++
water	40:47	0:0	4	i
op	40:48	0:0	4	++
stmts	41:4	49:4	3	
water	41:4	0:0	4	{
water	42:8	0:0	4	unsigned
water	42:17	0:0	4	pitch
op	42:23	0:0	4	=
water	42:25	0:0	4	p_dec
op	42:30	0:0	4	->
water	42:32	0:0	4	fmt_in
op	42:38	0:0	4	.
water	42:39	0:0	4	video
op	42:44	0:0	4	.
water	42:45	0:0	4	i_width
op	42:53	0:0	4	*
water	42:55	0:0	4	dsc
op	42:58	0:0	4	->
water	42:60	0:0	4	pixel_size
op	43:25	0:0	4	*
water	43:27	0:0	4	dsc
op	43:30	0:0	4	->
water	43:32	0:0	4	p
op	43:33	0:0	4	[
water	43:34	0:0	4	i
op	43:35	0:0	4	]
op	43:36	0:0	4	.
water	43:37	0:0	4	w
op	43:38	0:0	4	.
water	43:39	0:0	4	num
op	43:43	0:0	4	/
water	43:45	0:0	4	dsc
op	43:48	0:0	4	->
water	43:50	0:0	4	p
op	43:51	0:0	4	[
water	43:52	0:0	4	i
op	43:53	0:0	4	]
op	43:54	0:0	4	.
water	43:55	0:0	4	w
op	43:56	0:0	4	.
water	43:57	0:0	4	den
water	43:60	0:0	4	;
water	44:8	0:0	4	unsigned
water	44:17	0:0	4	lines
op	44:23	0:0	4	=
water	44:25	0:0	4	p_dec
op	44:30	0:0	4	->
water	44:32	0:0	4	fmt_in
op	44:38	0:0	4	.
water	44:39	0:0	4	video
op	44:44	0:0	4	.
water	44:45	0:0	4	i_height
op	45:25	0:0	4	*
water	45:27	0:0	4	dsc
op	45:30	0:0	4	->
water	45:32	0:0	4	p
op	45:33	0:0	4	[
water	45:34	0:0	4	i
op	45:35	0:0	4	]
op	45:36	0:0	4	.
water	45:37	0:0	4	h
op	45:38	0:0	4	.
water	45:39	0:0	4	num
op	45:43	0:0	4	/
water	45:45	0:0	4	dsc
op	45:48	0:0	4	->
water	45:50	0:0	4	p
op	45:51	0:0	4	[
water	45:52	0:0	4	i
op	45:53	0:0	4	]
op	45:54	0:0	4	.
water	45:55	0:0	4	h
op	45:56	0:0	4	.
water	45:57	0:0	4	den
water	45:60	0:0	4	;
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	pitches
op	46:22	0:0	4	[
water	46:23	0:0	4	i
op	46:24	0:0	4	]
op	46:26	0:0	4	=
water	46:28	0:0	4	pitch
water	46:33	0:0	4	;
water	47:8	0:0	4	p_sys
op	47:13	0:0	4	->
water	47:15	0:0	4	lines
op	47:20	0:0	4	[
water	47:21	0:0	4	i
op	47:22	0:0	4	]
op	47:24	0:0	4	=
water	47:26	0:0	4	lines
water	47:31	0:0	4	;
water	48:8	0:0	4	p_sys
op	48:13	0:0	4	->
water	48:15	0:0	4	size
op	48:20	0:0	4	+=
water	48:23	0:0	4	pitch
op	48:29	0:0	4	*
water	48:31	0:0	4	lines
water	48:36	0:0	4	;
water	49:4	0:0	4	}
water	50:4	0:0	2	p_dec
op	50:9	0:0	2	->
water	50:11	0:0	2	p_sys
op	50:27	0:0	2	=
water	50:29	0:0	2	p_sys
water	50:34	0:0	2	;
return	51:4	51:22	2	VLC_SUCCESS
water	51:11	0:0	3	VLC_SUCCESS

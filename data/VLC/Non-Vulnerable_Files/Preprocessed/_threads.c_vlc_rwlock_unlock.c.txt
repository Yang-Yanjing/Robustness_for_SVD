func	2:0	20:0	0	void	vlc_rwlock_unlock
params	2:23	0:0	1	
param	2:24	2:42	2	vlc_rwlock_t *	lock
stmnts	4:4	19:35	1	
call	4:4	4:32	2	vlc_mutex_lock
arg	4:20	4:32	3	&lock->mutex
op	4:20	0:0	4	&
water	4:21	0:0	4	lock
op	4:25	0:0	4	->
water	4:27	0:0	4	mutex
water	4:33	0:0	2	;
if	5:4	11:4	2	(lock -> state < 0)
cond	5:8	5:22	3	lock -> state < 0
water	5:8	0:0	4	lock
op	5:12	0:0	4	->
water	5:14	0:0	4	state
op	5:20	0:0	4	<
water	5:22	0:0	4	0
stmts	6:4	11:4	3	
water	6:4	0:0	4	{
call	7:8	7:41	4	assert
arg	7:16	7:41	5	lock->state==WRITER_BIT
water	7:16	0:0	6	lock
op	7:20	0:0	6	->
water	7:22	0:0	6	state
op	7:28	0:0	6	==
water	7:31	0:0	6	WRITER_BIT
water	7:42	0:0	4	;
water	9:8	0:0	4	lock
op	9:12	0:0	4	->
water	9:14	0:0	4	state
op	9:20	0:0	4	=
water	9:22	0:0	4	0
water	9:23	0:0	4	;
call	10:8	10:39	4	vlc_cond_broadcast
arg	10:28	10:39	5	&lock->wait
op	10:28	0:0	6	&
water	10:29	0:0	6	lock
op	10:33	0:0	6	->
water	10:35	0:0	6	wait
water	10:40	0:0	4	;
water	11:4	0:0	4	}
else	12:4	18:4	2
stmts	13:4	18:4	3	
water	13:4	0:0	4	{
call	14:8	14:31	4	assert
arg	14:16	14:31	5	lock->state>0
water	14:16	0:0	6	lock
op	14:20	0:0	6	->
water	14:22	0:0	6	state
op	14:28	0:0	6	>
water	14:30	0:0	6	0
water	14:32	0:0	4	;
if	16:8	17:41	4	(-- lock -> state == 0)
cond	16:12	16:29	5	-- lock -> state == 0
op	16:12	0:0	6	--
water	16:14	0:0	6	lock
op	16:18	0:0	6	->
water	16:20	0:0	6	state
op	16:26	0:0	6	==
water	16:29	0:0	6	0
stmts	17:12	17:41	5	
call	17:12	17:40	6	vlc_cond_signal
arg	17:29	17:40	7	&lock->wait
op	17:29	0:0	8	&
water	17:30	0:0	8	lock
op	17:34	0:0	8	->
water	17:36	0:0	8	wait
water	17:41	0:0	6	;
water	18:4	0:0	4	}
call	19:4	19:34	2	vlc_mutex_unlock
arg	19:22	19:34	3	&lock->mutex
op	19:22	0:0	4	&
water	19:23	0:0	4	lock
op	19:27	0:0	4	->
water	19:29	0:0	4	mutex
water	19:35	0:0	2	;

func	2:0	17:0	0	static void	SplitterClose
params	2:25	0:0	1	
param	2:26	2:44	2	vout_display_t *	vd
stmnts	0:0	16:13	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
decl	6:4	6:46	2	video_splitter_t	*splitter
op	6:31	0:0	2	=
water	6:33	0:0	2	sys
op	6:36	0:0	2	->
water	6:38	0:0	2	splitter
call	7:4	7:26	2	free
arg	7:9	7:26	3	splitter->p_owner
water	7:9	0:0	4	splitter
op	7:17	0:0	4	->
water	7:19	0:0	4	p_owner
water	7:27	0:0	2	;
call	8:4	8:34	2	video_splitter_Delete
arg	8:26	8:34	3	splitter
water	8:26	0:0	4	splitter
water	8:35	0:0	2	;
if	9:4	10:38	2	(sys -> pool)
cond	9:8	9:13	3	sys -> pool
water	9:8	0:0	4	sys
op	9:11	0:0	4	->
water	9:13	0:0	4	pool
stmts	10:8	10:38	3	
call	10:8	10:37	4	picture_pool_Delete
arg	10:28	10:37	5	sys->pool
water	10:28	0:0	6	sys
op	10:31	0:0	6	->
water	10:33	0:0	6	pool
water	10:38	0:0	4	;
for	12:4	13:49	2	( int i = 0 ;i < sys -> count;i ++)
forinit	0:0	12:18	3	 int i = 0 ;
decl	12:9	12:18	4	int	i
op	12:15	0:0	4	=
water	12:17	0:0	4	0
cond	12:20	12:29	3	i < sys -> count
water	12:20	0:0	4	i
op	12:22	0:0	4	<
water	12:24	0:0	4	sys
op	12:27	0:0	4	->
water	12:29	0:0	4	count
forexpr	12:36	12:37	3	i ++
water	12:36	0:0	4	i
op	12:37	0:0	4	++
stmts	13:8	13:49	3	
call	13:8	13:48	4	vout_DeleteDisplay
arg	13:27	13:42	5	sys->display[i]
water	13:27	0:0	6	sys
op	13:30	0:0	6	->
water	13:32	0:0	6	display
op	13:39	0:0	6	[
water	13:40	0:0	6	i
op	13:41	0:0	6	]
arg	13:44	13:48	5	NULL
water	13:44	0:0	6	NULL
water	13:49	0:0	4	;
call	14:4	14:38	2	TAB_CLEAN
arg	14:14	14:24	3	sys->count
water	14:14	0:0	4	sys
op	14:17	0:0	4	->
water	14:19	0:0	4	count
arg	14:26	14:38	3	sys->display
water	14:26	0:0	4	sys
op	14:29	0:0	4	->
water	14:31	0:0	4	display
water	14:39	0:0	2	;
call	15:4	15:21	2	free
arg	15:9	15:21	3	sys->picture
water	15:9	0:0	4	sys
op	15:12	0:0	4	->
water	15:14	0:0	4	picture
water	15:22	0:0	2	;
call	16:4	16:12	2	free
arg	16:9	16:12	3	sys
water	16:9	0:0	4	sys
water	16:13	0:0	2	;

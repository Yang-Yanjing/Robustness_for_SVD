decl	1:7	1:37	0	void	*DStreamThread
water	1:27	0:0	0	(
water	1:29	0:0	0	void
op	1:34	0:0	0	*
water	1:36	0:0	0	)
func	2:0	50:0	0	stream_t *	stream_DemuxNew
params	2:25	0:0	1	
param	2:27	2:43	2	demux_t *	p_demux
param	2:45	2:66	2	const char *	psz_demux
param	2:68	2:82	2	es_out_t *	out
stmnts	0:0	49:12	1	
decl	4:4	4:45	2	vlc_object_t	*p_obj
op	4:24	0:0	2	=
call	4:26	4:44	3	VLC_OBJECT
arg	4:37	4:44	4	p_demux
water	4:37	0:0	5	p_demux
decl	6:4	6:19	2	stream_t	*s
decl	7:4	7:23	2	stream_sys_t	*p_sys
water	8:4	0:0	2	s
op	8:6	0:0	2	=
call	8:8	8:32	2	stream_CommonNew
arg	8:26	8:32	3	p_obj
water	8:26	0:0	4	p_obj
water	8:33	0:0	2	;
if	9:4	10:19	2	(s == NULL)
cond	9:8	9:13	3	s == NULL
water	9:8	0:0	4	s
op	9:10	0:0	4	==
water	9:13	0:0	4	NULL
stmts	10:8	10:19	3	
return	10:8	10:19	4	NULL
water	10:15	0:0	5	NULL
water	11:4	0:0	2	s
op	11:5	0:0	2	->
water	11:7	0:0	2	p_input
op	11:15	0:0	2	=
water	11:17	0:0	2	p_demux
op	11:24	0:0	2	->
water	11:26	0:0	2	p_input
water	11:33	0:0	2	;
water	12:4	0:0	2	s
op	12:5	0:0	2	->
water	12:7	0:0	2	psz_path
op	12:17	0:0	2	=
call	12:19	12:28	2	strdup
arg	12:26	12:28	3	""
water	12:26	0:0	4	""
water	12:29	0:0	2	;
water	13:4	0:0	2	s
op	13:5	0:0	2	->
water	13:7	0:0	2	pf_read
op	13:17	0:0	2	=
water	13:19	0:0	2	DStreamRead
water	13:30	0:0	2	;
water	14:4	0:0	2	s
op	14:5	0:0	2	->
water	14:7	0:0	2	pf_peek
op	14:17	0:0	2	=
water	14:19	0:0	2	DStreamPeek
water	14:30	0:0	2	;
water	15:4	0:0	2	s
op	15:5	0:0	2	->
water	15:7	0:0	2	pf_control
op	15:17	0:0	2	=
water	15:19	0:0	2	DStreamControl
water	15:33	0:0	2	;
water	16:4	0:0	2	s
op	16:5	0:0	2	->
water	16:7	0:0	2	pf_destroy
op	16:17	0:0	2	=
water	16:19	0:0	2	DStreamDelete
water	16:32	0:0	2	;
water	17:4	0:0	2	s
op	17:5	0:0	2	->
water	17:7	0:0	2	p_sys
op	17:13	0:0	2	=
water	17:15	0:0	2	p_sys
op	17:21	0:0	2	=
call	17:23	17:47	2	malloc
arg	17:31	17:47	3	sizeof(*p_sys)
op	17:31	0:0	4	sizeof
water	17:37	0:0	4	(
op	17:39	0:0	4	*
water	17:40	0:0	4	p_sys
water	17:45	0:0	4	)
water	17:48	0:0	2	;
if	18:4	22:4	2	(! s -> psz_path || ! s -> p_sys)
cond	18:8	18:28	3	! s -> psz_path || ! s -> p_sys
op	18:8	0:0	4	!
water	18:9	0:0	4	s
op	18:10	0:0	4	->
water	18:12	0:0	4	psz_path
op	18:21	0:0	4	||
op	18:24	0:0	4	!
water	18:25	0:0	4	s
op	18:26	0:0	4	->
water	18:28	0:0	4	p_sys
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:31	4	stream_CommonDelete
arg	20:29	20:31	5	s
water	20:29	0:0	6	s
water	20:32	0:0	4	;
return	21:8	21:19	4	NULL
water	21:15	0:0	5	NULL
water	22:4	0:0	4	}
water	23:4	0:0	2	p_sys
op	23:9	0:0	2	->
water	23:11	0:0	2	i_pos
op	23:17	0:0	2	=
water	23:19	0:0	2	0
water	23:20	0:0	2	;
water	24:4	0:0	2	p_sys
op	24:9	0:0	2	->
water	24:11	0:0	2	out
op	24:15	0:0	2	=
water	24:17	0:0	2	out
water	24:20	0:0	2	;
water	25:4	0:0	2	p_sys
op	25:9	0:0	2	->
water	25:11	0:0	2	p_block
op	25:19	0:0	2	=
water	25:21	0:0	2	NULL
water	25:25	0:0	2	;
water	26:4	0:0	2	p_sys
op	26:9	0:0	2	->
water	26:11	0:0	2	psz_name
op	26:20	0:0	2	=
call	26:22	26:40	2	strdup
arg	26:30	26:40	3	psz_demux
water	26:30	0:0	4	psz_demux
water	26:41	0:0	2	;
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	stats
op	27:16	0:0	2	.
water	27:17	0:0	2	position
op	27:26	0:0	2	=
water	27:28	0:0	2	0
op	27:29	0:0	2	.
water	27:30	0:0	2	;
water	28:4	0:0	2	p_sys
op	28:9	0:0	2	->
water	28:11	0:0	2	stats
op	28:16	0:0	2	.
water	28:17	0:0	2	length
op	28:24	0:0	2	=
water	28:26	0:0	2	0
water	28:27	0:0	2	;
water	29:4	0:0	2	p_sys
op	29:9	0:0	2	->
water	29:11	0:0	2	stats
op	29:16	0:0	2	.
water	29:17	0:0	2	time
op	29:22	0:0	2	=
water	29:24	0:0	2	0
water	29:25	0:0	2	;
if	31:4	37:4	2	(( p_sys -> p_fifo =block_FifoNew ( ) ) == NULL)
cond	31:8	31:47	3	( p_sys -> p_fifo =block_FifoNew ( ) ) == NULL
water	31:8	0:0	4	(
water	31:10	0:0	4	p_sys
op	31:15	0:0	4	->
water	31:17	0:0	4	p_fifo
op	31:24	0:0	4	=
call	31:26	31:40	4	block_FifoNew
water	31:42	0:0	4	)
op	31:44	0:0	4	==
water	31:47	0:0	4	NULL
stmts	32:4	37:4	3	
water	32:4	0:0	4	{
call	33:8	33:31	4	stream_CommonDelete
arg	33:29	33:31	5	s
water	33:29	0:0	6	s
water	33:32	0:0	4	;
call	34:8	34:30	4	free
arg	34:14	34:30	5	p_sys->psz_name
water	34:14	0:0	6	p_sys
op	34:19	0:0	6	->
water	34:21	0:0	6	psz_name
water	34:31	0:0	4	;
call	35:8	35:20	4	free
arg	35:14	35:20	5	p_sys
water	35:14	0:0	6	p_sys
water	35:21	0:0	4	;
return	36:8	36:19	4	NULL
water	36:15	0:0	5	NULL
water	37:4	0:0	4	}
call	38:4	38:38	2	atomic_init
arg	38:17	38:31	3	&p_sys->active
op	38:17	0:0	4	&
water	38:18	0:0	4	p_sys
op	38:23	0:0	4	->
water	38:25	0:0	4	active
arg	38:33	38:38	3	true
water	38:33	0:0	4	true
water	38:39	0:0	2	;
call	39:4	39:33	2	vlc_mutex_init
arg	39:20	39:33	3	&p_sys->lock
op	39:20	0:0	4	&
water	39:21	0:0	4	p_sys
op	39:26	0:0	4	->
water	39:28	0:0	4	lock
water	39:34	0:0	2	;
if	40:4	48:4	2	(vlc_clone (& p_sys -> thread ,DStreamThread ,s ,VLC_THREAD_PRIORITY_INPUT ))
cond	40:8	40:79	3	vlc_clone (& p_sys -> thread ,DStreamThread ,s ,VLC_THREAD_PRIORITY_INPUT )
call	40:8	40:79	4	vlc_clone
arg	40:19	40:33	5	&p_sys->thread
op	40:19	0:0	6	&
water	40:20	0:0	6	p_sys
op	40:25	0:0	6	->
water	40:27	0:0	6	thread
arg	40:35	40:48	5	DStreamThread
water	40:35	0:0	6	DStreamThread
arg	40:50	40:51	5	s
water	40:50	0:0	6	s
arg	40:53	40:79	5	VLC_THREAD_PRIORITY_INPUT
water	40:53	0:0	6	VLC_THREAD_PRIORITY_INPUT
stmts	41:4	48:4	3	
water	41:4	0:0	4	{
call	42:8	42:40	4	vlc_mutex_destroy
arg	42:27	42:40	5	&p_sys->lock
op	42:27	0:0	6	&
water	42:28	0:0	6	p_sys
op	42:33	0:0	6	->
water	42:35	0:0	6	lock
water	42:41	0:0	4	;
call	43:8	43:41	4	block_FifoRelease
arg	43:27	43:41	5	p_sys->p_fifo
water	43:27	0:0	6	p_sys
op	43:32	0:0	6	->
water	43:34	0:0	6	p_fifo
water	43:42	0:0	4	;
call	44:8	44:31	4	stream_CommonDelete
arg	44:29	44:31	5	s
water	44:29	0:0	6	s
water	44:32	0:0	4	;
call	45:8	45:30	4	free
arg	45:14	45:30	5	p_sys->psz_name
water	45:14	0:0	6	p_sys
op	45:19	0:0	6	->
water	45:21	0:0	6	psz_name
water	45:31	0:0	4	;
call	46:8	46:20	4	free
arg	46:14	46:20	5	p_sys
water	46:14	0:0	6	p_sys
water	46:21	0:0	4	;
return	47:8	47:19	4	NULL
water	47:15	0:0	5	NULL
water	48:4	0:0	4	}
return	49:4	49:12	2	s
water	49:11	0:0	3	s

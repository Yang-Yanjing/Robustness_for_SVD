func	2:0	128:0	0	static int	Open
params	2:15	0:0	1	
param	2:16	2:36	2	vlc_object_t *	object
stmnts	0:0	127:22	1	
decl	4:4	4:53	2	vout_display_t	*vd
op	4:27	0:0	2	=
water	4:29	0:0	2	(
water	4:30	0:0	2	vout_display_t
op	4:45	0:0	2	*
water	4:46	0:0	2	)
water	4:47	0:0	2	object
decl	5:4	5:27	2	vout_display_sys_t	*sys
water	7:4	0:0	2	vd
op	7:6	0:0	2	->
water	7:8	0:0	2	sys
op	7:12	0:0	2	=
water	7:14	0:0	2	sys
op	7:18	0:0	2	=
call	7:20	7:42	2	calloc
arg	7:27	7:28	3	1
water	7:27	0:0	4	1
arg	7:30	7:42	3	sizeof(*sys)
op	7:30	0:0	4	sizeof
water	7:36	0:0	4	(
op	7:37	0:0	4	*
water	7:38	0:0	4	sys
water	7:41	0:0	4	)
water	7:43	0:0	2	;
if	8:4	9:25	2	(! sys)
cond	8:8	8:9	3	! sys
op	8:8	0:0	4	!
water	8:9	0:0	4	sys
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
water	11:4	0:0	2	sys
op	11:7	0:0	2	->
water	11:9	0:0	2	is_hw_accel
op	11:21	0:0	2	=
call	11:23	11:56	2	var_InheritBool
arg	11:39	11:41	3	vd
water	11:39	0:0	4	vd
arg	11:43	11:56	3	"fb-hw-accel"
water	11:43	0:0	4	"fb-hw-accel"
water	11:57	0:0	2	;
water	13:4	0:0	2	sys
op	13:7	0:0	2	->
water	13:9	0:0	2	tty
op	13:13	0:0	2	=
water	13:15	0:0	2	0
water	13:16	0:0	2	;
water	14:4	0:0	2	sys
op	14:7	0:0	2	->
water	14:9	0:0	2	is_tty
op	14:16	0:0	2	=
call	14:18	14:46	2	var_InheritBool
arg	14:34	14:36	3	vd
water	14:34	0:0	4	vd
arg	14:38	14:46	3	"fb-tty"
water	14:38	0:0	4	"fb-tty"
water	14:47	0:0	2	;
if	17:4	21:4	2	(sys -> is_tty && !isatty (0 ))
cond	17:8	17:32	3	sys -> is_tty && !isatty (0 )
water	17:8	0:0	4	sys
op	17:11	0:0	4	->
water	17:13	0:0	4	is_tty
op	17:20	0:0	4	&&
op	17:23	0:0	4	!
call	17:24	17:32	4	isatty
arg	17:31	17:32	5	0
water	17:31	0:0	6	0
stmts	17:35	21:4	3	
water	17:35	0:0	4	{
call	18:8	18:50	4	msg_Warn
arg	18:17	18:19	5	vd
water	18:17	0:0	6	vd
arg	18:21	18:50	5	"standard input is not a TTY"
water	18:21	0:0	6	"standard input is not a TTY"
water	18:51	0:0	4	;
call	19:8	19:16	4	free
arg	19:13	19:16	5	sys
water	19:13	0:0	6	sys
water	19:17	0:0	4	;
return	20:8	20:27	4	VLC_EGENERIC
water	20:15	0:0	5	VLC_EGENERIC
water	21:4	0:0	4	}
call	22:4	23:55	2	msg_Warn
arg	22:13	22:15	3	vd
water	22:13	0:0	4	vd
arg	22:17	23:55	3	"disabling TTY handling, use with caution because ""there is no way to return to the TTY"
water	22:17	0:0	4	"disabling TTY handling, use with caution because "
water	23:17	0:0	4	"there is no way to return to the TTY"
water	23:56	0:0	2	;
decl	25:4	25:54	2	const int	mode
op	25:19	0:0	2	=
call	25:21	25:53	3	var_InheritInteger
arg	25:40	25:42	4	vd
water	25:40	0:0	5	vd
arg	25:44	25:53	4	"fb-mode"
water	25:44	0:0	5	"fb-mode"
decl	26:4	26:32	2	bool	force_resolution
op	26:26	0:0	2	=
water	26:28	0:0	2	true
switch	27:4	48:4	2	(mode)
cond	27:12	27:12	3	mode
water	27:12	0:0	4	mode
stmts	27:18	48:4	3	
water	27:18	0:0	4	{
label	28:4	28:10	4	case 0 :
water	29:8	0:0	4	sys
op	29:11	0:0	4	->
water	29:13	0:0	4	width
op	29:20	0:0	4	=
water	29:22	0:0	4	176
water	29:25	0:0	4	;
water	30:8	0:0	4	sys
op	30:11	0:0	4	->
water	30:13	0:0	4	height
op	30:20	0:0	4	=
water	30:22	0:0	4	144
water	30:25	0:0	4	;
break	31:8	31:13	4	
label	32:4	32:10	4	case 1 :
water	33:8	0:0	4	sys
op	33:11	0:0	4	->
water	33:13	0:0	4	width
op	33:20	0:0	4	=
water	33:22	0:0	4	352
water	33:25	0:0	4	;
water	34:8	0:0	4	sys
op	34:11	0:0	4	->
water	34:13	0:0	4	height
op	34:20	0:0	4	=
water	34:22	0:0	4	288
water	34:25	0:0	4	;
break	35:8	35:13	4	
label	36:4	36:10	4	case 2 :
water	37:8	0:0	4	sys
op	37:11	0:0	4	->
water	37:13	0:0	4	width
op	37:20	0:0	4	=
water	37:22	0:0	4	640
water	37:25	0:0	4	;
water	38:8	0:0	4	sys
op	38:11	0:0	4	->
water	38:13	0:0	4	height
op	38:20	0:0	4	=
water	38:22	0:0	4	480
water	38:25	0:0	4	;
break	39:8	39:13	4	
label	40:4	40:10	4	case 3 :
water	41:8	0:0	4	sys
op	41:11	0:0	4	->
water	41:13	0:0	4	width
op	41:20	0:0	4	=
water	41:22	0:0	4	704
water	41:25	0:0	4	;
water	42:8	0:0	4	sys
op	42:11	0:0	4	->
water	42:13	0:0	4	height
op	42:20	0:0	4	=
water	42:22	0:0	4	576
water	42:25	0:0	4	;
break	43:8	43:13	4	
label	44:4	44:10	4	case 4 :
label	45:4	45:11	4	default :
water	46:8	0:0	4	force_resolution
op	46:25	0:0	4	=
water	46:27	0:0	4	false
water	46:32	0:0	4	;
break	47:8	47:13	4	
water	48:4	0:0	4	}
decl	49:4	49:53	2	char	*chroma
op	49:17	0:0	2	=
call	49:19	49:52	3	var_InheritString
arg	49:37	49:39	4	vd
water	49:37	0:0	5	vd
arg	49:41	49:52	4	"fb-chroma"
water	49:41	0:0	5	"fb-chroma"
if	50:4	57:4	2	(chroma)
cond	50:8	50:8	3	chroma
water	50:8	0:0	4	chroma
stmts	50:16	57:4	3	
water	50:16	0:0	4	{
water	51:8	0:0	4	sys
op	51:11	0:0	4	->
water	51:13	0:0	4	chroma
op	51:20	0:0	4	=
call	51:22	51:68	4	vlc_fourcc_GetCodecFromString
arg	51:52	51:60	5	VIDEO_ES
water	51:52	0:0	6	VIDEO_ES
arg	51:62	51:68	5	chroma
water	51:62	0:0	6	chroma
water	51:69	0:0	4	;
if	52:8	53:54	4	(sys -> chroma)
cond	52:12	52:17	5	sys -> chroma
water	52:12	0:0	6	sys
op	52:15	0:0	6	->
water	52:17	0:0	6	chroma
stmts	53:12	53:54	5	
call	53:12	53:53	6	msg_Dbg
arg	53:20	53:22	7	vd
water	53:20	0:0	8	vd
arg	53:24	53:45	7	"forcing chroma '%s'"
water	53:24	0:0	8	"forcing chroma '%s'"
arg	53:47	53:53	7	chroma
water	53:47	0:0	8	chroma
water	53:54	0:0	6	;
else	54:8	55:68	4
stmts	55:12	55:68	5	
call	55:12	55:67	6	msg_Warn
arg	55:21	55:23	7	vd
water	55:21	0:0	8	vd
arg	55:25	55:59	7	"chroma %s invalid, using default"
water	55:25	0:0	8	"chroma %s invalid, using default"
arg	55:61	55:67	7	chroma
water	55:61	0:0	8	chroma
water	55:68	0:0	6	;
call	56:8	56:19	4	free
arg	56:13	56:19	5	chroma
water	56:13	0:0	6	chroma
water	56:20	0:0	4	;
water	57:4	0:0	4	}
else	57:6	58:23	2
stmts	58:8	58:23	3	
water	58:8	0:0	4	sys
op	58:11	0:0	4	->
water	58:13	0:0	4	chroma
op	58:20	0:0	4	=
water	58:22	0:0	4	0
water	58:23	0:0	4	;
if	60:4	63:4	2	(sys -> is_tty &&TtyInit (vd ))
cond	60:8	60:33	3	sys -> is_tty &&TtyInit (vd )
water	60:8	0:0	4	sys
op	60:11	0:0	4	->
water	60:13	0:0	4	is_tty
op	60:20	0:0	4	&&
call	60:23	60:33	4	TtyInit
arg	60:31	60:33	5	vd
water	60:31	0:0	6	vd
stmts	60:36	63:4	3	
water	60:36	0:0	4	{
call	61:8	61:16	4	free
arg	61:13	61:16	5	sys
water	61:13	0:0	6	sys
water	61:17	0:0	4	;
return	62:8	62:27	4	VLC_EGENERIC
water	62:15	0:0	5	VLC_EGENERIC
water	63:4	0:0	4	}
water	65:4	0:0	2	sys
op	65:7	0:0	2	->
water	65:9	0:0	2	video_ptr
op	65:19	0:0	2	=
water	65:21	0:0	2	MAP_FAILED
water	65:31	0:0	2	;
water	66:4	0:0	2	sys
op	66:7	0:0	2	->
water	66:9	0:0	2	picture
op	66:17	0:0	2	=
water	66:19	0:0	2	NULL
water	66:23	0:0	2	;
water	67:4	0:0	2	sys
op	67:7	0:0	2	->
water	67:9	0:0	2	pool
op	67:14	0:0	2	=
water	67:16	0:0	2	NULL
water	67:20	0:0	2	;
if	68:4	71:4	2	(OpenDisplay (vd ,force_resolution ))
cond	68:8	68:40	3	OpenDisplay (vd ,force_resolution )
call	68:8	68:40	4	OpenDisplay
arg	68:20	68:22	5	vd
water	68:20	0:0	6	vd
arg	68:24	68:40	5	force_resolution
water	68:24	0:0	6	force_resolution
stmts	68:43	71:4	3	
water	68:43	0:0	4	{
call	69:8	69:28	4	Close
arg	69:14	69:28	5	VLC_OBJECT(vd)
call	69:14	69:27	6	VLC_OBJECT
arg	69:25	69:27	7	vd
water	69:25	0:0	8	vd
water	69:29	0:0	4	;
return	70:8	70:27	4	VLC_EGENERIC
water	70:15	0:0	5	VLC_EGENERIC
water	71:4	0:0	4	}
call	72:4	72:38	2	vout_display_DeleteWindow
arg	72:30	72:32	3	vd
water	72:30	0:0	4	vd
arg	72:34	72:38	3	NULL
water	72:34	0:0	4	NULL
water	72:39	0:0	2	;
decl	74:4	74:22	2	video_format_t	fmt
call	75:4	75:45	2	video_format_ApplyRotation
arg	75:31	75:35	3	&fmt
op	75:31	0:0	4	&
water	75:32	0:0	4	fmt
arg	75:37	75:45	3	&vd->fmt
op	75:37	0:0	4	&
water	75:38	0:0	4	vd
op	75:40	0:0	4	->
water	75:42	0:0	4	fmt
water	75:46	0:0	2	;
if	76:4	78:4	2	(sys -> chroma)
cond	76:8	76:13	3	sys -> chroma
water	76:8	0:0	4	sys
op	76:11	0:0	4	->
water	76:13	0:0	4	chroma
stmts	76:21	78:4	3	
water	76:21	0:0	4	{
water	77:8	0:0	4	fmt
op	77:11	0:0	4	.
water	77:12	0:0	4	i_chroma
op	77:21	0:0	4	=
water	77:23	0:0	4	sys
op	77:26	0:0	4	->
water	77:28	0:0	4	chroma
water	77:34	0:0	4	;
water	78:4	0:0	4	}
else	78:6	110:4	2
stmts	78:11	110:4	3	
water	78:11	0:0	4	{
call	80:8	80:59	4	msg_Dbg
arg	80:16	80:18	5	vd
water	80:16	0:0	6	vd
arg	80:20	80:29	5	"%d bppd"
water	80:20	0:0	6	"%d bppd"
arg	80:31	80:59	5	sys->var_info.bits_per_pixel
water	80:31	0:0	6	sys
op	80:34	0:0	6	->
water	80:36	0:0	6	var_info
op	80:44	0:0	6	.
water	80:45	0:0	6	bits_per_pixel
water	80:60	0:0	4	;
switch	81:8	101:8	4	(sys -> var_info . bits_per_pixel)
cond	81:16	81:30	5	sys -> var_info . bits_per_pixel
water	81:16	0:0	6	sys
op	81:19	0:0	6	->
water	81:21	0:0	6	var_info
op	81:29	0:0	6	.
water	81:30	0:0	6	bits_per_pixel
stmts	81:46	101:8	5	
water	81:46	0:0	6	{
label	82:8	82:14	6	case 8 :
water	83:12	0:0	6	fmt
op	83:15	0:0	6	.
water	83:16	0:0	6	i_chroma
op	83:25	0:0	6	=
water	83:27	0:0	6	VLC_CODEC_RGB8
water	83:41	0:0	6	;
break	84:12	84:17	6	
label	85:8	85:15	6	case 15 :
water	86:12	0:0	6	fmt
op	86:15	0:0	6	.
water	86:16	0:0	6	i_chroma
op	86:25	0:0	6	=
water	86:27	0:0	6	VLC_CODEC_RGB15
water	86:42	0:0	6	;
break	87:12	87:17	6	
label	88:8	88:15	6	case 16 :
water	89:12	0:0	6	fmt
op	89:15	0:0	6	.
water	89:16	0:0	6	i_chroma
op	89:25	0:0	6	=
water	89:27	0:0	6	VLC_CODEC_RGB16
water	89:42	0:0	6	;
break	90:12	90:17	6	
label	91:8	91:15	6	case 24 :
water	92:12	0:0	6	fmt
op	92:15	0:0	6	.
water	92:16	0:0	6	i_chroma
op	92:25	0:0	6	=
water	92:27	0:0	6	VLC_CODEC_RGB24
water	92:42	0:0	6	;
break	93:12	93:17	6	
label	94:8	94:15	6	case 32 :
water	95:12	0:0	6	fmt
op	95:15	0:0	6	.
water	95:16	0:0	6	i_chroma
op	95:25	0:0	6	=
water	95:27	0:0	6	VLC_CODEC_RGB32
water	95:42	0:0	6	;
break	96:12	96:17	6	
label	97:8	97:15	6	default :
call	98:12	98:78	6	msg_Err
arg	98:20	98:22	7	vd
water	98:20	0:0	8	vd
arg	98:24	98:48	7	"unknown screendepth %i"
water	98:24	0:0	8	"unknown screendepth %i"
arg	98:50	98:78	7	sys->var_info.bits_per_pixel
water	98:50	0:0	8	sys
op	98:53	0:0	8	->
water	98:55	0:0	8	var_info
op	98:63	0:0	8	.
water	98:64	0:0	8	bits_per_pixel
water	98:79	0:0	6	;
call	99:12	99:32	6	Close
arg	99:18	99:32	7	VLC_OBJECT(vd)
call	99:18	99:31	8	VLC_OBJECT
arg	99:29	99:31	9	vd
water	99:29	0:0	10	vd
water	99:33	0:0	6	;
return	100:12	100:31	6	VLC_EGENERIC
water	100:19	0:0	7	VLC_EGENERIC
water	101:8	0:0	6	}
if	102:8	109:8	4	(sys -> var_info . bits_per_pixel != 8)
cond	102:12	102:44	5	sys -> var_info . bits_per_pixel != 8
water	102:12	0:0	6	sys
op	102:15	0:0	6	->
water	102:17	0:0	6	var_info
op	102:25	0:0	6	.
water	102:26	0:0	6	bits_per_pixel
op	102:41	0:0	6	!=
water	102:44	0:0	6	8
stmts	102:47	109:8	5	
water	102:47	0:0	6	{
water	103:12	0:0	6	fmt
op	103:15	0:0	6	.
water	103:16	0:0	6	i_rmask
op	103:24	0:0	6	=
water	103:26	0:0	6	(
water	103:27	0:0	6	(
water	103:28	0:0	6	1
op	103:30	0:0	6	<<
water	103:33	0:0	6	sys
op	103:36	0:0	6	->
water	103:38	0:0	6	var_info
op	103:46	0:0	6	.
water	103:47	0:0	6	red
op	103:50	0:0	6	.
water	103:51	0:0	6	length
water	103:57	0:0	6	)
op	103:59	0:0	6	-
water	103:61	0:0	6	1
water	103:62	0:0	6	)
op	104:33	0:0	6	<<
water	104:36	0:0	6	sys
op	104:39	0:0	6	->
water	104:41	0:0	6	var_info
op	104:49	0:0	6	.
water	104:50	0:0	6	red
op	104:53	0:0	6	.
water	104:54	0:0	6	offset
water	104:60	0:0	6	;
water	105:12	0:0	6	fmt
op	105:15	0:0	6	.
water	105:16	0:0	6	i_gmask
op	105:24	0:0	6	=
water	105:26	0:0	6	(
water	105:27	0:0	6	(
water	105:28	0:0	6	1
op	105:30	0:0	6	<<
water	105:33	0:0	6	sys
op	105:36	0:0	6	->
water	105:38	0:0	6	var_info
op	105:46	0:0	6	.
water	105:47	0:0	6	green
op	105:52	0:0	6	.
water	105:53	0:0	6	length
water	105:59	0:0	6	)
op	105:61	0:0	6	-
water	105:63	0:0	6	1
water	105:64	0:0	6	)
op	106:33	0:0	6	<<
water	106:36	0:0	6	sys
op	106:39	0:0	6	->
water	106:41	0:0	6	var_info
op	106:49	0:0	6	.
water	106:50	0:0	6	green
op	106:55	0:0	6	.
water	106:56	0:0	6	offset
water	106:62	0:0	6	;
water	107:12	0:0	6	fmt
op	107:15	0:0	6	.
water	107:16	0:0	6	i_bmask
op	107:24	0:0	6	=
water	107:26	0:0	6	(
water	107:27	0:0	6	(
water	107:28	0:0	6	1
op	107:30	0:0	6	<<
water	107:33	0:0	6	sys
op	107:36	0:0	6	->
water	107:38	0:0	6	var_info
op	107:46	0:0	6	.
water	107:47	0:0	6	blue
op	107:51	0:0	6	.
water	107:52	0:0	6	length
water	107:58	0:0	6	)
op	107:60	0:0	6	-
water	107:62	0:0	6	1
water	107:63	0:0	6	)
op	108:33	0:0	6	<<
water	108:36	0:0	6	sys
op	108:39	0:0	6	->
water	108:41	0:0	6	var_info
op	108:49	0:0	6	.
water	108:50	0:0	6	blue
op	108:54	0:0	6	.
water	108:55	0:0	6	offset
water	108:61	0:0	6	;
water	109:8	0:0	6	}
water	110:4	0:0	4	}
water	111:4	0:0	2	fmt
op	111:7	0:0	2	.
water	111:8	0:0	2	i_visible_width
op	111:25	0:0	2	=
water	111:27	0:0	2	sys
op	111:30	0:0	2	->
water	111:32	0:0	2	width
water	111:37	0:0	2	;
water	112:4	0:0	2	fmt
op	112:7	0:0	2	.
water	112:8	0:0	2	i_visible_height
op	112:25	0:0	2	=
water	112:27	0:0	2	sys
op	112:30	0:0	2	->
water	112:32	0:0	2	height
water	112:38	0:0	2	;
decl	114:4	114:39	2	vout_display_info_t	info
op	114:29	0:0	2	=
water	114:31	0:0	2	vd
op	114:33	0:0	2	->
water	114:35	0:0	2	info
water	115:4	0:0	2	info
op	115:8	0:0	2	.
water	115:9	0:0	2	has_hide_mouse
op	115:24	0:0	2	=
water	115:26	0:0	2	true
water	115:30	0:0	2	;
water	117:4	0:0	2	vd
op	117:6	0:0	2	->
water	117:8	0:0	2	fmt
op	117:16	0:0	2	=
water	117:18	0:0	2	fmt
water	117:21	0:0	2	;
water	118:4	0:0	2	vd
op	118:6	0:0	2	->
water	118:8	0:0	2	info
op	118:16	0:0	2	=
water	118:18	0:0	2	info
water	118:22	0:0	2	;
water	119:4	0:0	2	vd
op	119:6	0:0	2	->
water	119:8	0:0	2	pool
op	119:16	0:0	2	=
water	119:18	0:0	2	Pool
water	119:22	0:0	2	;
water	120:4	0:0	2	vd
op	120:6	0:0	2	->
water	120:8	0:0	2	prepare
op	120:16	0:0	2	=
water	120:18	0:0	2	NULL
water	120:22	0:0	2	;
water	121:4	0:0	2	vd
op	121:6	0:0	2	->
water	121:8	0:0	2	display
op	121:16	0:0	2	=
water	121:18	0:0	2	Display
water	121:25	0:0	2	;
water	122:4	0:0	2	vd
op	122:6	0:0	2	->
water	122:8	0:0	2	control
op	122:16	0:0	2	=
water	122:18	0:0	2	Control
water	122:25	0:0	2	;
water	123:4	0:0	2	vd
op	123:6	0:0	2	->
water	123:8	0:0	2	manage
op	123:16	0:0	2	=
water	123:18	0:0	2	NULL
water	123:22	0:0	2	;
call	125:4	125:45	2	vout_display_SendEventFullscreen
arg	125:37	125:39	3	vd
water	125:37	0:0	4	vd
arg	125:41	125:45	3	true
water	125:41	0:0	4	true
water	125:46	0:0	2	;
call	126:4	126:89	2	vout_display_SendEventDisplaySize
arg	126:38	126:40	3	vd
water	126:38	0:0	4	vd
arg	126:42	126:61	3	fmt.i_visible_width
water	126:42	0:0	4	fmt
op	126:45	0:0	4	.
water	126:46	0:0	4	i_visible_width
arg	126:63	126:83	3	fmt.i_visible_height
water	126:63	0:0	4	fmt
op	126:66	0:0	4	.
water	126:67	0:0	4	i_visible_height
arg	126:85	126:89	3	true
water	126:85	0:0	4	true
water	126:90	0:0	2	;
return	127:4	127:22	2	VLC_SUCCESS
water	127:11	0:0	3	VLC_SUCCESS

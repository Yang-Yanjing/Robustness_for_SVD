func	2:0	58:0	0	static int	ThreadDisplayPicture
params	2:31	0:0	1	
param	2:32	2:51	2	vout_thread_t *	vout
param	2:53	2:70	2	mtime_t *	deadline
stmnts	0:0	57:45	1	
decl	4:4	4:35	2	bool	frame_by_frame
op	4:24	0:0	2	=
op	4:26	0:0	2	!
water	4:27	0:0	2	deadline
decl	5:4	5:38	2	bool	paused
op	5:16	0:0	2	=
water	5:18	0:0	2	vout
op	5:22	0:0	2	->
water	5:24	0:0	2	p
op	5:25	0:0	2	->
water	5:27	0:0	2	pause
op	5:32	0:0	2	.
water	5:33	0:0	2	is_on
decl	6:4	6:44	2	bool	first
op	6:15	0:0	2	=
op	6:17	0:0	2	!
water	6:18	0:0	2	vout
op	6:22	0:0	2	->
water	6:24	0:0	2	p
op	6:25	0:0	2	->
water	6:27	0:0	2	displayed
op	6:36	0:0	2	.
water	6:37	0:0	2	current
if	7:4	9:31	2	(first)
cond	7:8	7:8	3	first
water	7:8	0:0	4	first
stmts	8:8	9:31	3	
if	8:8	9:31	4	(ThreadDisplayPreparePicture (vout ,true ,frame_by_frame ))
cond	8:12	8:66	5	ThreadDisplayPreparePicture (vout ,true ,frame_by_frame )
call	8:12	8:66	6	ThreadDisplayPreparePicture
arg	8:40	8:44	7	vout
water	8:40	0:0	8	vout
arg	8:46	8:50	7	true
water	8:46	0:0	8	true
arg	8:52	8:66	7	frame_by_frame
water	8:52	0:0	8	frame_by_frame
stmts	9:12	9:31	5	
return	9:12	9:31	6	VLC_EGENERIC
water	9:19	0:0	7	VLC_EGENERIC
if	10:4	12:12	2	(! paused || frame_by_frame)
cond	10:8	10:19	3	! paused || frame_by_frame
op	10:8	0:0	4	!
water	10:9	0:0	4	paused
op	10:16	0:0	4	||
water	10:19	0:0	4	frame_by_frame
stmts	11:8	12:12	3	
while	11:8	12:12	4	(! vout -> p -> displayed . next && !ThreadDisplayPreparePicture (vout ,false ,frame_by_frame ))
cond	11:15	11:99	5	! vout -> p -> displayed . next && !ThreadDisplayPreparePicture (vout ,false ,frame_by_frame )
op	11:15	0:0	6	!
water	11:16	0:0	6	vout
op	11:20	0:0	6	->
water	11:22	0:0	6	p
op	11:23	0:0	6	->
water	11:25	0:0	6	displayed
op	11:34	0:0	6	.
water	11:35	0:0	6	next
op	11:40	0:0	6	&&
op	11:43	0:0	6	!
call	11:44	11:99	6	ThreadDisplayPreparePicture
arg	11:72	11:76	7	vout
water	11:72	0:0	8	vout
arg	11:78	11:83	7	false
water	11:78	0:0	8	false
arg	11:85	11:99	7	frame_by_frame
water	11:85	0:0	8	frame_by_frame
stmts	12:12	12:12	5	
water	12:12	0:0	6	;
decl	13:4	13:32	2	const mtime_t	date
op	13:23	0:0	2	=
call	13:25	13:31	3	mdate
decl	14:4	14:93	2	const mtime_t	render_delay
op	14:31	0:0	2	=
call	14:33	14:69	3	vout_chrono_GetHigh
arg	14:53	14:69	4	&vout->p->render
op	14:53	0:0	5	&
water	14:54	0:0	5	vout
op	14:58	0:0	5	->
water	14:60	0:0	5	p
op	14:61	0:0	5	->
water	14:63	0:0	5	render
op	14:71	0:0	2	+
water	14:73	0:0	2	VOUT_MWAIT_TOLERANCE
decl	15:4	15:41	2	bool	drop_next_frame
op	15:25	0:0	2	=
water	15:27	0:0	2	frame_by_frame
decl	16:4	16:38	2	mtime_t	date_next
op	16:22	0:0	2	=
water	16:24	0:0	2	VLC_TS_INVALID
if	17:4	21:4	2	(! paused && vout -> p -> displayed . next)
cond	17:8	17:38	3	! paused && vout -> p -> displayed . next
op	17:8	0:0	4	!
water	17:9	0:0	4	paused
op	17:16	0:0	4	&&
water	17:19	0:0	4	vout
op	17:23	0:0	4	->
water	17:25	0:0	4	p
op	17:26	0:0	4	->
water	17:28	0:0	4	displayed
op	17:37	0:0	4	.
water	17:38	0:0	4	next
stmts	17:44	21:4	3	
water	17:44	0:0	4	{
water	18:8	0:0	4	date_next
op	18:18	0:0	4	=
water	18:20	0:0	4	vout
op	18:24	0:0	4	->
water	18:26	0:0	4	p
op	18:27	0:0	4	->
water	18:29	0:0	4	displayed
op	18:38	0:0	4	.
water	18:39	0:0	4	next
op	18:43	0:0	4	->
water	18:45	0:0	4	date
op	18:50	0:0	4	-
water	18:52	0:0	4	render_delay
water	18:64	0:0	4	;
if	19:8	20:34	4	(date_next <= date)
cond	19:12	19:41	5	date_next <= date
water	19:12	0:0	6	date_next
op	19:38	0:0	6	<=
water	19:41	0:0	6	date
stmts	20:12	20:34	5	
water	20:12	0:0	6	drop_next_frame
op	20:28	0:0	6	=
water	20:30	0:0	6	true
water	20:34	0:0	6	;
water	21:4	0:0	4	}
decl	31:4	31:24	2	bool	refresh
op	31:17	0:0	2	=
water	31:19	0:0	2	false
decl	32:4	32:41	2	mtime_t	date_refresh
op	32:25	0:0	2	=
water	32:27	0:0	2	VLC_TS_INVALID
if	33:4	36:4	2	(vout -> p -> displayed . date > VLC_TS_INVALID)
cond	33:8	33:34	3	vout -> p -> displayed . date > VLC_TS_INVALID
water	33:8	0:0	4	vout
op	33:12	0:0	4	->
water	33:14	0:0	4	p
op	33:15	0:0	4	->
water	33:17	0:0	4	displayed
op	33:26	0:0	4	.
water	33:27	0:0	4	date
op	33:32	0:0	4	>
water	33:34	0:0	4	VLC_TS_INVALID
stmts	33:50	36:4	3	
water	33:50	0:0	4	{
water	34:8	0:0	4	date_refresh
op	34:21	0:0	4	=
water	34:23	0:0	4	vout
op	34:27	0:0	4	->
water	34:29	0:0	4	p
op	34:30	0:0	4	->
water	34:32	0:0	4	displayed
op	34:41	0:0	4	.
water	34:42	0:0	4	date
op	34:47	0:0	4	+
water	34:49	0:0	4	VOUT_REDISPLAY_DELAY
op	34:70	0:0	4	-
water	34:72	0:0	4	render_delay
water	34:84	0:0	4	;
water	35:8	0:0	4	refresh
op	35:16	0:0	4	=
water	35:18	0:0	4	date_refresh
op	35:31	0:0	4	<=
water	35:34	0:0	4	date
water	35:38	0:0	4	;
water	36:4	0:0	4	}
decl	37:4	37:52	2	bool	force_refresh
op	37:23	0:0	2	=
op	37:25	0:0	2	!
water	37:26	0:0	2	drop_next_frame
op	37:42	0:0	2	&&
water	37:45	0:0	2	refresh
if	38:4	46:4	2	(! first && ! refresh && ! drop_next_frame)
cond	38:8	38:31	3	! first && ! refresh && ! drop_next_frame
op	38:8	0:0	4	!
water	38:9	0:0	4	first
op	38:15	0:0	4	&&
op	38:18	0:0	4	!
water	38:19	0:0	4	refresh
op	38:27	0:0	4	&&
op	38:30	0:0	4	!
water	38:31	0:0	4	drop_next_frame
stmts	38:48	46:4	3	
water	38:48	0:0	4	{
if	39:8	44:8	4	(! frame_by_frame)
cond	39:12	39:13	5	! frame_by_frame
op	39:12	0:0	6	!
water	39:13	0:0	6	frame_by_frame
stmts	39:29	44:8	5	
water	39:29	0:0	6	{
if	40:12	41:40	6	(date_refresh != VLC_TS_INVALID)
cond	40:16	40:32	7	date_refresh != VLC_TS_INVALID
water	40:16	0:0	8	date_refresh
op	40:29	0:0	8	!=
water	40:32	0:0	8	VLC_TS_INVALID
stmts	41:16	41:40	7	
op	41:16	0:0	8	*
water	41:17	0:0	8	deadline
op	41:26	0:0	8	=
water	41:28	0:0	8	date_refresh
water	41:40	0:0	8	;
if	42:12	43:37	6	(date_next != VLC_TS_INVALID && date_next < * deadline)
cond	42:16	42:60	7	date_next != VLC_TS_INVALID && date_next < * deadline
water	42:16	0:0	8	date_next
op	42:26	0:0	8	!=
water	42:29	0:0	8	VLC_TS_INVALID
op	42:44	0:0	8	&&
water	42:47	0:0	8	date_next
op	42:57	0:0	8	<
op	42:59	0:0	8	*
water	42:60	0:0	8	deadline
stmts	43:16	43:37	7	
op	43:16	0:0	8	*
water	43:17	0:0	8	deadline
op	43:26	0:0	8	=
water	43:28	0:0	8	date_next
water	43:37	0:0	8	;
water	44:8	0:0	6	}
return	45:8	45:27	4	VLC_EGENERIC
water	45:15	0:0	5	VLC_EGENERIC
water	46:4	0:0	4	}
if	47:4	51:4	2	(drop_next_frame)
cond	47:8	47:8	3	drop_next_frame
water	47:8	0:0	4	drop_next_frame
stmts	47:25	51:4	3	
water	47:25	0:0	4	{
call	48:8	48:50	4	picture_Release
arg	48:24	48:50	5	vout->p->displayed.current
water	48:24	0:0	6	vout
op	48:28	0:0	6	->
water	48:30	0:0	6	p
op	48:31	0:0	6	->
water	48:33	0:0	6	displayed
op	48:42	0:0	6	.
water	48:43	0:0	6	current
water	48:51	0:0	4	;
water	49:8	0:0	4	vout
op	49:12	0:0	4	->
water	49:14	0:0	4	p
op	49:15	0:0	4	->
water	49:17	0:0	4	displayed
op	49:26	0:0	4	.
water	49:27	0:0	4	current
op	49:35	0:0	4	=
water	49:37	0:0	4	vout
op	49:41	0:0	4	->
water	49:43	0:0	4	p
op	49:44	0:0	4	->
water	49:46	0:0	4	displayed
op	49:55	0:0	4	.
water	49:56	0:0	4	next
water	49:60	0:0	4	;
water	50:8	0:0	4	vout
op	50:12	0:0	4	->
water	50:14	0:0	4	p
op	50:15	0:0	4	->
water	50:17	0:0	4	displayed
op	50:26	0:0	4	.
water	50:27	0:0	4	next
op	50:35	0:0	4	=
water	50:37	0:0	4	NULL
water	50:41	0:0	4	;
water	51:4	0:0	4	}
if	52:4	53:27	2	(! vout -> p -> displayed . current)
cond	52:8	52:28	3	! vout -> p -> displayed . current
op	52:8	0:0	4	!
water	52:9	0:0	4	vout
op	52:13	0:0	4	->
water	52:15	0:0	4	p
op	52:16	0:0	4	->
water	52:18	0:0	4	displayed
op	52:27	0:0	4	.
water	52:28	0:0	4	current
stmts	53:8	53:27	3	
return	53:8	53:27	4	VLC_EGENERIC
water	53:15	0:0	5	VLC_EGENERIC
decl	55:4	55:91	2	bool	is_forced
op	55:19	0:0	2	=
water	55:21	0:0	2	frame_by_frame
op	55:36	0:0	2	||
water	55:39	0:0	2	force_refresh
op	55:53	0:0	2	||
water	55:56	0:0	2	vout
op	55:60	0:0	2	->
water	55:62	0:0	2	p
op	55:63	0:0	2	->
water	55:65	0:0	2	displayed
op	55:74	0:0	2	.
water	55:75	0:0	2	current
op	55:82	0:0	2	->
water	55:84	0:0	2	b_force
decl	56:4	56:57	2	int	ret
op	56:12	0:0	2	=
call	56:14	56:56	3	ThreadDisplayRenderPicture
arg	56:41	56:45	4	vout
water	56:41	0:0	5	vout
arg	56:47	56:56	4	is_forced
water	56:47	0:0	5	is_forced
return	57:4	57:45	2	force_refresh?VLC_EGENERIC:ret
water	57:11	0:0	3	force_refresh
water	57:25	0:0	3	?
water	57:27	0:0	3	VLC_EGENERIC
water	57:40	0:0	3	:
water	57:42	0:0	3	ret

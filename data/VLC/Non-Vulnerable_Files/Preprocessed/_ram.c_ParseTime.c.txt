func	2:0	68:0	0	static int	ParseTime
params	2:20	0:0	1	
param	2:22	2:35	2	const char *	s
param	2:37	2:52	2	size_t	i_strlen
stmnts	0:0	67:17	1	
decl	5:4	5:18	2	int	result
op	5:15	0:0	2	=
water	5:17	0:0	2	0
decl	6:4	6:11	2	int	val
decl	7:4	7:34	2	const char	*end
op	7:20	0:0	2	=
water	7:22	0:0	2	s
op	7:24	0:0	2	+
water	7:26	0:0	2	i_strlen
water	9:4	0:0	2	s
op	9:6	0:0	2	=
call	9:8	9:30	2	SkipBlanks
arg	9:19	9:20	3	s
water	9:19	0:0	4	s
arg	9:22	9:30	3	i_strlen
water	9:22	0:0	4	i_strlen
water	9:31	0:0	2	;
water	10:4	0:0	2	val
op	10:8	0:0	2	=
water	10:10	0:0	2	0
water	10:11	0:0	2	;
while	11:4	22:4	2	(( s < end ) &&isdigit (( unsigned char ) * s ))
cond	11:11	11:49	3	( s < end ) &&isdigit (( unsigned char ) * s )
water	11:11	0:0	4	(
water	11:12	0:0	4	s
op	11:14	0:0	4	<
water	11:16	0:0	4	end
water	11:19	0:0	4	)
op	11:21	0:0	4	&&
call	11:24	11:49	4	isdigit
arg	11:32	11:49	5	(unsignedchar)*s
water	11:32	0:0	6	(
water	11:33	0:0	6	unsigned
water	11:42	0:0	6	char
water	11:46	0:0	6	)
op	11:47	0:0	6	*
water	11:48	0:0	6	s
stmts	12:4	22:4	3	
water	12:4	0:0	4	{
decl	13:8	13:40	4	int	newval
op	13:19	0:0	4	=
water	13:21	0:0	4	val
op	13:24	0:0	4	*
water	13:25	0:0	4	10
op	13:28	0:0	4	+
water	13:30	0:0	4	(
op	13:31	0:0	4	*
water	13:32	0:0	4	s
op	13:34	0:0	4	-
water	13:36	0:0	4	'0'
water	13:39	0:0	4	)
if	14:8	19:8	4	(newval < val)
cond	14:12	14:21	5	newval < val
water	14:12	0:0	6	newval
op	14:19	0:0	6	<
water	14:21	0:0	6	val
stmts	15:8	19:8	5	
water	15:8	0:0	6	{
water	17:12	0:0	6	val
op	17:16	0:0	6	=
water	17:18	0:0	6	0
water	17:19	0:0	6	;
break	18:12	18:17	6	
water	19:8	0:0	6	}
water	20:8	0:0	4	val
op	20:12	0:0	4	=
water	20:14	0:0	4	newval
water	20:20	0:0	4	;
op	21:8	0:0	4	++
water	21:10	0:0	4	s
water	21:11	0:0	4	;
water	22:4	0:0	4	}
water	23:4	0:0	2	result
op	23:11	0:0	2	=
water	23:13	0:0	2	val
water	23:16	0:0	2	;
water	24:4	0:0	2	s
op	24:6	0:0	2	=
call	24:8	24:27	2	SkipBlanks
arg	24:19	24:20	3	s
water	24:19	0:0	4	s
arg	24:22	24:27	3	end-s
water	24:22	0:0	4	end
op	24:25	0:0	4	-
water	24:26	0:0	4	s
water	24:28	0:0	2	;
if	25:4	66:4	2	(* s == ':')
cond	25:8	25:14	3	* s == ':'
op	25:8	0:0	4	*
water	25:9	0:0	4	s
op	25:11	0:0	4	==
water	25:14	0:0	4	':'
stmts	26:4	66:4	3	
water	26:4	0:0	4	{
op	27:8	0:0	4	++
water	27:10	0:0	4	s
water	27:11	0:0	4	;
water	28:8	0:0	4	s
op	28:10	0:0	4	=
call	28:12	28:31	4	SkipBlanks
arg	28:23	28:24	5	s
water	28:23	0:0	6	s
arg	28:26	28:31	5	end-s
water	28:26	0:0	6	end
op	28:29	0:0	6	-
water	28:30	0:0	6	s
water	28:32	0:0	4	;
water	29:8	0:0	4	result
op	29:15	0:0	4	=
water	29:17	0:0	4	result
op	29:24	0:0	4	*
water	29:26	0:0	4	60
water	29:28	0:0	4	;
water	30:8	0:0	4	val
op	30:12	0:0	4	=
water	30:14	0:0	4	0
water	30:15	0:0	4	;
while	31:8	42:8	4	(( s < end ) &&isdigit (( unsigned char ) * s ))
cond	31:15	31:53	5	( s < end ) &&isdigit (( unsigned char ) * s )
water	31:15	0:0	6	(
water	31:16	0:0	6	s
op	31:18	0:0	6	<
water	31:20	0:0	6	end
water	31:23	0:0	6	)
op	31:25	0:0	6	&&
call	31:28	31:53	6	isdigit
arg	31:36	31:53	7	(unsignedchar)*s
water	31:36	0:0	8	(
water	31:37	0:0	8	unsigned
water	31:46	0:0	8	char
water	31:50	0:0	8	)
op	31:51	0:0	8	*
water	31:52	0:0	8	s
stmts	32:8	42:8	5	
water	32:8	0:0	6	{
decl	33:12	33:44	6	int	newval
op	33:23	0:0	6	=
water	33:25	0:0	6	val
op	33:28	0:0	6	*
water	33:29	0:0	6	10
op	33:32	0:0	6	+
water	33:34	0:0	6	(
op	33:35	0:0	6	*
water	33:36	0:0	6	s
op	33:38	0:0	6	-
water	33:40	0:0	6	'0'
water	33:43	0:0	6	)
if	34:12	39:12	6	(newval < val)
cond	34:16	34:25	7	newval < val
water	34:16	0:0	8	newval
op	34:23	0:0	8	<
water	34:25	0:0	8	val
stmts	35:12	39:12	7	
water	35:12	0:0	8	{
water	37:16	0:0	8	val
op	37:20	0:0	8	=
water	37:22	0:0	8	0
water	37:23	0:0	8	;
break	38:16	38:21	8	
water	39:12	0:0	8	}
water	40:12	0:0	6	val
op	40:16	0:0	6	=
water	40:18	0:0	6	newval
water	40:24	0:0	6	;
op	41:12	0:0	6	++
water	41:14	0:0	6	s
water	41:15	0:0	6	;
water	42:8	0:0	6	}
water	43:8	0:0	4	result
op	43:15	0:0	4	+=
water	43:18	0:0	4	val
water	43:21	0:0	4	;
water	44:8	0:0	4	s
op	44:10	0:0	4	=
call	44:12	44:31	4	SkipBlanks
arg	44:23	44:24	5	s
water	44:23	0:0	6	s
arg	44:26	44:31	5	end-s
water	44:26	0:0	6	end
op	44:29	0:0	6	-
water	44:30	0:0	6	s
water	44:32	0:0	4	;
if	45:8	65:8	4	(* s == ':')
cond	45:12	45:18	5	* s == ':'
op	45:12	0:0	6	*
water	45:13	0:0	6	s
op	45:15	0:0	6	==
water	45:18	0:0	6	':'
stmts	46:8	65:8	5	
water	46:8	0:0	6	{
op	47:12	0:0	6	++
water	47:14	0:0	6	s
water	47:15	0:0	6	;
water	48:12	0:0	6	s
op	48:14	0:0	6	=
call	48:16	48:35	6	SkipBlanks
arg	48:27	48:28	7	s
water	48:27	0:0	8	s
arg	48:30	48:35	7	end-s
water	48:30	0:0	8	end
op	48:33	0:0	8	-
water	48:34	0:0	8	s
water	48:36	0:0	6	;
water	49:12	0:0	6	result
op	49:19	0:0	6	=
water	49:21	0:0	6	result
op	49:28	0:0	6	*
water	49:30	0:0	6	60
water	49:32	0:0	6	;
water	50:12	0:0	6	val
op	50:16	0:0	6	=
water	50:18	0:0	6	0
water	50:19	0:0	6	;
while	51:12	62:12	6	(( s < end ) &&isdigit (( unsigned char ) * s ))
cond	51:19	51:57	7	( s < end ) &&isdigit (( unsigned char ) * s )
water	51:19	0:0	8	(
water	51:20	0:0	8	s
op	51:22	0:0	8	<
water	51:24	0:0	8	end
water	51:27	0:0	8	)
op	51:29	0:0	8	&&
call	51:32	51:57	8	isdigit
arg	51:40	51:57	9	(unsignedchar)*s
water	51:40	0:0	10	(
water	51:41	0:0	10	unsigned
water	51:50	0:0	10	char
water	51:54	0:0	10	)
op	51:55	0:0	10	*
water	51:56	0:0	10	s
stmts	52:12	62:12	7	
water	52:12	0:0	8	{
decl	53:16	53:48	8	int	newval
op	53:27	0:0	8	=
water	53:29	0:0	8	val
op	53:32	0:0	8	*
water	53:33	0:0	8	10
op	53:36	0:0	8	+
water	53:38	0:0	8	(
op	53:39	0:0	8	*
water	53:40	0:0	8	s
op	53:42	0:0	8	-
water	53:44	0:0	8	'0'
water	53:47	0:0	8	)
if	54:16	59:16	8	(newval < val)
cond	54:20	54:29	9	newval < val
water	54:20	0:0	10	newval
op	54:27	0:0	10	<
water	54:29	0:0	10	val
stmts	55:16	59:16	9	
water	55:16	0:0	10	{
water	57:20	0:0	10	val
op	57:24	0:0	10	=
water	57:26	0:0	10	0
water	57:27	0:0	10	;
break	58:20	58:25	10	
water	59:16	0:0	10	}
water	60:16	0:0	8	val
op	60:20	0:0	8	=
water	60:22	0:0	8	newval
water	60:28	0:0	8	;
op	61:16	0:0	8	++
water	61:18	0:0	8	s
water	61:19	0:0	8	;
water	62:12	0:0	8	}
water	63:12	0:0	6	result
op	63:19	0:0	6	+=
water	63:22	0:0	6	val
water	63:25	0:0	6	;
water	65:8	0:0	6	}
water	66:4	0:0	4	}
return	67:4	67:17	2	result
water	67:11	0:0	3	result

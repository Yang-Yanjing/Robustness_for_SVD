func	2:0	68:0	0	static block_t *	Decode
params	2:22	0:0	1	
param	2:24	2:40	2	decoder_t *	p_dec
param	2:42	2:61	2	block_t * *	pp_block
stmnts	0:0	67:24	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:26	2	block_t	*p_block
decl	6:4	6:32	2	block_t	*p_aout_buffer
decl	7:4	7:41	2	int	i_frame_length
water	7:33	0:0	2	,
decl	7:4	7:41	2	int	i_bits
water	8:4	0:0	2	p_block
op	8:12	0:0	2	=
call	8:14	8:70	2	Parse
arg	8:21	8:26	3	p_dec
water	8:21	0:0	4	p_dec
arg	8:28	8:43	3	&i_frame_length
op	8:28	0:0	4	&
water	8:29	0:0	4	i_frame_length
arg	8:45	8:52	3	&i_bits
op	8:45	0:0	4	&
water	8:46	0:0	4	i_bits
arg	8:54	8:62	3	pp_block
water	8:54	0:0	4	pp_block
arg	8:64	8:70	3	false
water	8:64	0:0	4	false
water	8:71	0:0	2	;
if	9:4	10:19	2	(! p_block)
cond	9:8	9:9	3	! p_block
op	9:8	0:0	4	!
water	9:9	0:0	4	p_block
stmts	10:8	10:19	3	
return	10:8	10:19	4	NULL
water	10:15	0:0	5	NULL
water	11:4	0:0	2	p_aout_buffer
op	11:18	0:0	2	=
call	11:20	11:66	2	decoder_NewAudioBuffer
arg	11:44	11:49	3	p_dec
water	11:44	0:0	4	p_dec
arg	11:51	11:66	3	i_frame_length
water	11:51	0:0	4	i_frame_length
water	11:67	0:0	2	;
if	12:4	13:17	2	(p_aout_buffer == NULL)
cond	12:8	12:25	3	p_aout_buffer == NULL
water	12:8	0:0	4	p_aout_buffer
op	12:22	0:0	4	==
water	12:25	0:0	4	NULL
stmts	13:8	13:17	3	
goto	13:8	13:17	4	exit
water	13:13	0:0	5	exit
water	14:4	0:0	2	p_aout_buffer
op	14:17	0:0	2	->
water	14:19	0:0	2	i_pts
op	14:25	0:0	2	=
call	14:27	14:54	2	date_Get
arg	14:37	14:54	3	&p_sys->end_date
op	14:37	0:0	4	&
water	14:38	0:0	4	p_sys
op	14:43	0:0	4	->
water	14:45	0:0	4	end_date
water	14:55	0:0	2	;
water	15:4	0:0	2	p_aout_buffer
op	15:17	0:0	2	->
water	15:19	0:0	2	i_length
op	15:28	0:0	2	=
call	15:30	16:53	2	date_Increment
arg	15:46	15:62	3	&p_sys->end_date
op	15:46	0:0	4	&
water	15:47	0:0	4	p_sys
op	15:52	0:0	4	->
water	15:54	0:0	4	end_date
arg	16:38	16:53	3	i_frame_length
water	16:38	0:0	4	i_frame_length
op	16:55	0:0	2	-
water	16:57	0:0	2	p_aout_buffer
op	16:70	0:0	2	->
water	16:72	0:0	2	i_pts
water	16:77	0:0	2	;
water	17:4	0:0	2	p_block
op	17:11	0:0	2	->
water	17:13	0:0	2	i_buffer
op	17:22	0:0	2	-=
water	17:25	0:0	2	AES3_HEADER_LEN
water	17:40	0:0	2	;
water	18:4	0:0	2	p_block
op	18:11	0:0	2	->
water	18:13	0:0	2	p_buffer
op	18:22	0:0	2	+=
water	18:25	0:0	2	AES3_HEADER_LEN
water	18:40	0:0	2	;
if	19:4	34:4	2	(i_bits == 24)
cond	19:8	19:18	3	i_bits == 24
water	19:8	0:0	4	i_bits
op	19:15	0:0	4	==
water	19:18	0:0	4	24
stmts	20:4	34:4	3	
water	20:4	0:0	4	{
decl	21:8	21:61	4	uint32_t	*p_out
op	21:24	0:0	4	=
water	21:26	0:0	4	(
water	21:27	0:0	4	uint32_t
op	21:36	0:0	4	*
water	21:37	0:0	4	)
water	21:38	0:0	4	p_aout_buffer
op	21:51	0:0	4	->
water	21:53	0:0	4	p_buffer
while	22:8	33:8	4	(p_block -> i_buffer / 7)
cond	22:15	22:35	5	p_block -> i_buffer / 7
water	22:15	0:0	6	p_block
op	22:22	0:0	6	->
water	22:24	0:0	6	i_buffer
op	22:33	0:0	6	/
water	22:35	0:0	6	7
stmts	23:8	33:8	5	
water	23:8	0:0	6	{
op	24:12	0:0	6	*
water	24:13	0:0	6	(
water	24:14	0:0	6	p_out
op	24:19	0:0	6	++
water	24:21	0:0	6	)
op	24:23	0:0	6	=
water	24:26	0:0	6	(
water	24:27	0:0	6	reverse
op	24:34	0:0	6	[
water	24:35	0:0	6	p_block
op	24:42	0:0	6	->
water	24:44	0:0	6	p_buffer
op	24:52	0:0	6	[
water	24:53	0:0	6	0
op	24:54	0:0	6	]
op	24:55	0:0	6	]
op	24:57	0:0	6	<<
water	24:61	0:0	6	8
water	24:62	0:0	6	)
op	25:24	0:0	6	|
water	25:26	0:0	6	(
water	25:27	0:0	6	reverse
op	25:34	0:0	6	[
water	25:35	0:0	6	p_block
op	25:42	0:0	6	->
water	25:44	0:0	6	p_buffer
op	25:52	0:0	6	[
water	25:53	0:0	6	1
op	25:54	0:0	6	]
op	25:55	0:0	6	]
op	25:57	0:0	6	<<
water	25:60	0:0	6	16
water	25:62	0:0	6	)
op	26:24	0:0	6	|
water	26:26	0:0	6	(
water	26:27	0:0	6	reverse
op	26:34	0:0	6	[
water	26:35	0:0	6	p_block
op	26:42	0:0	6	->
water	26:44	0:0	6	p_buffer
op	26:52	0:0	6	[
water	26:53	0:0	6	2
op	26:54	0:0	6	]
op	26:55	0:0	6	]
op	26:57	0:0	6	<<
water	26:60	0:0	6	24
water	26:62	0:0	6	)
water	26:63	0:0	6	;
op	27:12	0:0	6	*
water	27:13	0:0	6	(
water	27:14	0:0	6	p_out
op	27:19	0:0	6	++
water	27:21	0:0	6	)
op	27:23	0:0	6	=
water	27:25	0:0	6	(
water	27:26	0:0	6	(
water	27:27	0:0	6	reverse
op	27:34	0:0	6	[
water	27:35	0:0	6	p_block
op	27:42	0:0	6	->
water	27:44	0:0	6	p_buffer
op	27:52	0:0	6	[
water	27:53	0:0	6	3
op	27:54	0:0	6	]
op	27:55	0:0	6	]
op	27:57	0:0	6	<<
water	27:61	0:0	6	4
water	27:62	0:0	6	)
op	28:24	0:0	6	|
water	28:26	0:0	6	(
water	28:27	0:0	6	reverse
op	28:34	0:0	6	[
water	28:35	0:0	6	p_block
op	28:42	0:0	6	->
water	28:44	0:0	6	p_buffer
op	28:52	0:0	6	[
water	28:53	0:0	6	4
op	28:54	0:0	6	]
op	28:55	0:0	6	]
op	28:57	0:0	6	<<
water	28:60	0:0	6	12
water	28:62	0:0	6	)
op	29:24	0:0	6	|
water	29:26	0:0	6	(
water	29:27	0:0	6	reverse
op	29:34	0:0	6	[
water	29:35	0:0	6	p_block
op	29:42	0:0	6	->
water	29:44	0:0	6	p_buffer
op	29:52	0:0	6	[
water	29:53	0:0	6	5
op	29:54	0:0	6	]
op	29:55	0:0	6	]
op	29:57	0:0	6	<<
water	29:60	0:0	6	20
water	29:62	0:0	6	)
op	30:24	0:0	6	|
water	30:26	0:0	6	(
water	30:27	0:0	6	reverse
op	30:34	0:0	6	[
water	30:35	0:0	6	p_block
op	30:42	0:0	6	->
water	30:44	0:0	6	p_buffer
op	30:52	0:0	6	[
water	30:53	0:0	6	6
op	30:54	0:0	6	]
op	30:55	0:0	6	]
op	30:57	0:0	6	<<
water	30:60	0:0	6	28
water	30:62	0:0	6	)
water	30:63	0:0	6	)
op	30:65	0:0	6	&
water	30:67	0:0	6	0
water	30:68	0:0	6	xFFFFFF00
water	30:77	0:0	6	;
water	31:12	0:0	6	p_block
op	31:19	0:0	6	->
water	31:21	0:0	6	i_buffer
op	31:30	0:0	6	-=
water	31:33	0:0	6	7
water	31:34	0:0	6	;
water	32:12	0:0	6	p_block
op	32:19	0:0	6	->
water	32:21	0:0	6	p_buffer
op	32:30	0:0	6	+=
water	32:33	0:0	6	7
water	32:34	0:0	6	;
water	33:8	0:0	6	}
water	34:4	0:0	4	}
else	35:4	49:4	2
stmts	35:9	49:4	3	
if	35:9	49:4	4	(i_bits == 20)
cond	35:13	35:23	5	i_bits == 20
water	35:13	0:0	6	i_bits
op	35:20	0:0	6	==
water	35:23	0:0	6	20
stmts	36:4	49:4	5	
water	36:4	0:0	6	{
decl	37:8	37:61	6	uint32_t	*p_out
op	37:24	0:0	6	=
water	37:26	0:0	6	(
water	37:27	0:0	6	uint32_t
op	37:36	0:0	6	*
water	37:37	0:0	6	)
water	37:38	0:0	6	p_aout_buffer
op	37:51	0:0	6	->
water	37:53	0:0	6	p_buffer
while	38:8	48:8	6	(p_block -> i_buffer / 6)
cond	38:15	38:35	7	p_block -> i_buffer / 6
water	38:15	0:0	8	p_block
op	38:22	0:0	8	->
water	38:24	0:0	8	i_buffer
op	38:33	0:0	8	/
water	38:35	0:0	8	6
stmts	39:8	48:8	7	
water	39:8	0:0	8	{
op	40:12	0:0	8	*
water	40:13	0:0	8	(
water	40:14	0:0	8	p_out
op	40:19	0:0	8	++
water	40:21	0:0	8	)
op	40:23	0:0	8	=
water	40:25	0:0	8	(
water	40:26	0:0	8	reverse
op	40:33	0:0	8	[
water	40:34	0:0	8	p_block
op	40:41	0:0	8	->
water	40:43	0:0	8	p_buffer
op	40:51	0:0	8	[
water	40:52	0:0	8	0
op	40:53	0:0	8	]
op	40:54	0:0	8	]
op	40:56	0:0	8	<<
water	40:59	0:0	8	12
water	40:61	0:0	8	)
op	41:23	0:0	8	|
water	41:25	0:0	8	(
water	41:26	0:0	8	reverse
op	41:33	0:0	8	[
water	41:34	0:0	8	p_block
op	41:41	0:0	8	->
water	41:43	0:0	8	p_buffer
op	41:51	0:0	8	[
water	41:52	0:0	8	1
op	41:53	0:0	8	]
op	41:54	0:0	8	]
op	41:56	0:0	8	<<
water	41:59	0:0	8	20
water	41:61	0:0	8	)
op	42:23	0:0	8	|
water	42:25	0:0	8	(
water	42:26	0:0	8	reverse
op	42:33	0:0	8	[
water	42:34	0:0	8	p_block
op	42:41	0:0	8	->
water	42:43	0:0	8	p_buffer
op	42:51	0:0	8	[
water	42:52	0:0	8	2
op	42:53	0:0	8	]
op	42:54	0:0	8	]
op	42:56	0:0	8	<<
water	42:59	0:0	8	28
water	42:61	0:0	8	)
water	42:62	0:0	8	;
op	43:12	0:0	8	*
water	43:13	0:0	8	(
water	43:14	0:0	8	p_out
op	43:19	0:0	8	++
water	43:21	0:0	8	)
op	43:23	0:0	8	=
water	43:25	0:0	8	(
water	43:26	0:0	8	reverse
op	43:33	0:0	8	[
water	43:34	0:0	8	p_block
op	43:41	0:0	8	->
water	43:43	0:0	8	p_buffer
op	43:51	0:0	8	[
water	43:52	0:0	8	3
op	43:53	0:0	8	]
op	43:54	0:0	8	]
op	43:56	0:0	8	<<
water	43:59	0:0	8	12
water	43:61	0:0	8	)
op	44:23	0:0	8	|
water	44:25	0:0	8	(
water	44:26	0:0	8	reverse
op	44:33	0:0	8	[
water	44:34	0:0	8	p_block
op	44:41	0:0	8	->
water	44:43	0:0	8	p_buffer
op	44:51	0:0	8	[
water	44:52	0:0	8	4
op	44:53	0:0	8	]
op	44:54	0:0	8	]
op	44:56	0:0	8	<<
water	44:59	0:0	8	20
water	44:61	0:0	8	)
op	45:23	0:0	8	|
water	45:25	0:0	8	(
water	45:26	0:0	8	reverse
op	45:33	0:0	8	[
water	45:34	0:0	8	p_block
op	45:41	0:0	8	->
water	45:43	0:0	8	p_buffer
op	45:51	0:0	8	[
water	45:52	0:0	8	5
op	45:53	0:0	8	]
op	45:54	0:0	8	]
op	45:56	0:0	8	<<
water	45:59	0:0	8	28
water	45:61	0:0	8	)
water	45:62	0:0	8	;
water	46:12	0:0	8	p_block
op	46:19	0:0	8	->
water	46:21	0:0	8	i_buffer
op	46:30	0:0	8	-=
water	46:33	0:0	8	6
water	46:34	0:0	8	;
water	47:12	0:0	8	p_block
op	47:19	0:0	8	->
water	47:21	0:0	8	p_buffer
op	47:30	0:0	8	+=
water	47:33	0:0	8	6
water	47:34	0:0	8	;
water	48:8	0:0	8	}
water	49:4	0:0	6	}
else	50:4	64:4	2
stmts	51:4	64:4	3	
water	51:4	0:0	4	{
decl	52:8	52:61	4	uint16_t	*p_out
op	52:24	0:0	4	=
water	52:26	0:0	4	(
water	52:27	0:0	4	uint16_t
op	52:36	0:0	4	*
water	52:37	0:0	4	)
water	52:38	0:0	4	p_aout_buffer
op	52:51	0:0	4	->
water	52:53	0:0	4	p_buffer
call	53:8	53:29	4	assert
arg	53:16	53:29	5	i_bits==16
water	53:16	0:0	6	i_bits
op	53:23	0:0	6	==
water	53:26	0:0	6	16
water	53:30	0:0	4	;
while	54:8	63:8	4	(p_block -> i_buffer / 5)
cond	54:15	54:35	5	p_block -> i_buffer / 5
water	54:15	0:0	6	p_block
op	54:22	0:0	6	->
water	54:24	0:0	6	i_buffer
op	54:33	0:0	6	/
water	54:35	0:0	6	5
stmts	55:8	63:8	5	
water	55:8	0:0	6	{
op	56:12	0:0	6	*
water	56:13	0:0	6	(
water	56:14	0:0	6	p_out
op	56:19	0:0	6	++
water	56:21	0:0	6	)
op	56:23	0:0	6	=
water	56:26	0:0	6	reverse
op	56:33	0:0	6	[
water	56:34	0:0	6	p_block
op	56:41	0:0	6	->
water	56:43	0:0	6	p_buffer
op	56:51	0:0	6	[
water	56:52	0:0	6	0
op	56:53	0:0	6	]
op	56:54	0:0	6	]
op	57:24	0:0	6	|
water	57:25	0:0	6	(
water	57:26	0:0	6	reverse
op	57:33	0:0	6	[
water	57:34	0:0	6	p_block
op	57:41	0:0	6	->
water	57:43	0:0	6	p_buffer
op	57:51	0:0	6	[
water	57:52	0:0	6	1
op	57:53	0:0	6	]
op	57:54	0:0	6	]
op	57:56	0:0	6	<<
water	57:60	0:0	6	8
water	57:61	0:0	6	)
water	57:62	0:0	6	;
op	58:12	0:0	6	*
water	58:13	0:0	6	(
water	58:14	0:0	6	p_out
op	58:19	0:0	6	++
water	58:21	0:0	6	)
op	58:23	0:0	6	=
water	58:25	0:0	6	(
water	58:26	0:0	6	reverse
op	58:33	0:0	6	[
water	58:34	0:0	6	p_block
op	58:41	0:0	6	->
water	58:43	0:0	6	p_buffer
op	58:51	0:0	6	[
water	58:52	0:0	6	2
op	58:53	0:0	6	]
op	58:54	0:0	6	]
op	58:56	0:0	6	>>
water	58:60	0:0	6	4
water	58:61	0:0	6	)
op	59:23	0:0	6	|
water	59:25	0:0	6	(
water	59:26	0:0	6	reverse
op	59:33	0:0	6	[
water	59:34	0:0	6	p_block
op	59:41	0:0	6	->
water	59:43	0:0	6	p_buffer
op	59:51	0:0	6	[
water	59:52	0:0	6	3
op	59:53	0:0	6	]
op	59:54	0:0	6	]
op	59:56	0:0	6	<<
water	59:60	0:0	6	4
water	59:61	0:0	6	)
op	60:23	0:0	6	|
water	60:25	0:0	6	(
water	60:26	0:0	6	reverse
op	60:33	0:0	6	[
water	60:34	0:0	6	p_block
op	60:41	0:0	6	->
water	60:43	0:0	6	p_buffer
op	60:51	0:0	6	[
water	60:52	0:0	6	4
op	60:53	0:0	6	]
op	60:54	0:0	6	]
op	60:56	0:0	6	<<
water	60:59	0:0	6	12
water	60:61	0:0	6	)
water	60:62	0:0	6	;
water	61:12	0:0	6	p_block
op	61:19	0:0	6	->
water	61:21	0:0	6	i_buffer
op	61:30	0:0	6	-=
water	61:33	0:0	6	5
water	61:34	0:0	6	;
water	62:12	0:0	6	p_block
op	62:19	0:0	6	->
water	62:21	0:0	6	p_buffer
op	62:30	0:0	6	+=
water	62:33	0:0	6	5
water	62:34	0:0	6	;
water	63:8	0:0	6	}
water	64:4	0:0	4	}
label	65:0	65:4	2	exit :
call	66:4	66:27	2	block_Release
arg	66:19	66:27	3	p_block
water	66:19	0:0	4	p_block
water	66:28	0:0	2	;
return	67:4	67:24	2	p_aout_buffer
water	67:11	0:0	3	p_aout_buffer

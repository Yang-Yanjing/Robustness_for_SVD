func	2:0	83:0	0	void	puzzle_drw_complex_pce_in_plane
params	2:36	0:0	1	
param	2:38	2:56	2	filter_t *	p_filter
param	2:58	2:77	2	picture_t *	p_pic_in
param	2:79	2:99	2	picture_t *	p_pic_out
param	2:101	2:116	2	uint8_t	i_plane
param	2:118	2:135	2	piece_t *	ps_piece
param	2:137	2:151	2	uint32_t	i_pce
stmnts	0:0	82:10	1	
decl	5:4	5:41	2	filter_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	p_filter
op	5:34	0:0	2	->
water	5:36	0:0	2	p_sys
if	6:4	7:14	2	(( p_sys -> ps_puzzle_array == NULL ) || ( p_sys -> ps_pieces == NULL ) || ( ps_piece == NULL ))
cond	6:8	6:91	3	( p_sys -> ps_puzzle_array == NULL ) || ( p_sys -> ps_pieces == NULL ) || ( ps_piece == NULL )
water	6:8	0:0	4	(
water	6:9	0:0	4	p_sys
op	6:14	0:0	4	->
water	6:16	0:0	4	ps_puzzle_array
op	6:32	0:0	4	==
water	6:35	0:0	4	NULL
water	6:39	0:0	4	)
op	6:41	0:0	4	||
water	6:44	0:0	4	(
water	6:45	0:0	4	p_sys
op	6:50	0:0	4	->
water	6:52	0:0	4	ps_pieces
op	6:62	0:0	4	==
water	6:65	0:0	4	NULL
water	6:69	0:0	4	)
op	6:71	0:0	4	||
water	6:74	0:0	4	(
water	6:75	0:0	4	ps_piece
op	6:84	0:0	4	==
water	6:87	0:0	4	NULL
water	6:91	0:0	4	)
stmts	7:8	7:14	3	
return	7:8	7:14	4	
decl	8:4	8:63	2	const int32_t	i_src_pitch
op	8:33	0:0	2	=
water	8:35	0:0	2	p_pic_in
op	8:43	0:0	2	->
water	8:45	0:0	2	p
op	8:46	0:0	2	[
water	8:47	0:0	2	i_plane
op	8:54	0:0	2	]
op	8:55	0:0	2	.
water	8:56	0:0	2	i_pitch
decl	9:4	9:64	2	const int32_t	i_dst_pitch
op	9:33	0:0	2	=
water	9:35	0:0	2	p_pic_out
op	9:44	0:0	2	->
water	9:46	0:0	2	p
op	9:47	0:0	2	[
water	9:48	0:0	2	i_plane
op	9:55	0:0	2	]
op	9:56	0:0	2	.
water	9:57	0:0	2	i_pitch
decl	10:4	10:100	2	const int32_t	i_src_width
op	10:33	0:0	2	=
water	10:35	0:0	2	p_pic_in
op	10:43	0:0	2	->
water	10:45	0:0	2	p
op	10:46	0:0	2	[
water	10:47	0:0	2	i_plane
op	10:54	0:0	2	]
op	10:55	0:0	2	.
water	10:56	0:0	2	i_pitch
op	10:64	0:0	2	/
water	10:66	0:0	2	p_pic_in
op	10:74	0:0	2	->
water	10:76	0:0	2	p
op	10:77	0:0	2	[
water	10:78	0:0	2	i_plane
op	10:85	0:0	2	]
op	10:86	0:0	2	.
water	10:87	0:0	2	i_pixel_pitch
decl	11:4	11:102	2	const int32_t	i_dst_width
op	11:33	0:0	2	=
water	11:35	0:0	2	p_pic_out
op	11:44	0:0	2	->
water	11:46	0:0	2	p
op	11:47	0:0	2	[
water	11:48	0:0	2	i_plane
op	11:55	0:0	2	]
op	11:56	0:0	2	.
water	11:57	0:0	2	i_pitch
op	11:65	0:0	2	/
water	11:67	0:0	2	p_pic_out
op	11:76	0:0	2	->
water	11:78	0:0	2	p
op	11:79	0:0	2	[
water	11:80	0:0	2	i_plane
op	11:87	0:0	2	]
op	11:88	0:0	2	.
water	11:89	0:0	2	i_pixel_pitch
decl	12:4	12:70	2	const int32_t	i_pixel_pitch
op	12:33	0:0	2	=
water	12:35	0:0	2	p_pic_out
op	12:44	0:0	2	->
water	12:46	0:0	2	p
op	12:47	0:0	2	[
water	12:48	0:0	2	i_plane
op	12:55	0:0	2	]
op	12:56	0:0	2	.
water	12:57	0:0	2	i_pixel_pitch
decl	13:4	13:79	2	const int32_t	i_src_visible_lines
op	13:41	0:0	2	=
water	13:43	0:0	2	p_pic_in
op	13:51	0:0	2	->
water	13:53	0:0	2	p
op	13:54	0:0	2	[
water	13:55	0:0	2	i_plane
op	13:62	0:0	2	]
op	13:63	0:0	2	.
water	13:64	0:0	2	i_visible_lines
decl	14:4	14:80	2	const int32_t	i_dst_visible_lines
op	14:41	0:0	2	=
water	14:43	0:0	2	p_pic_out
op	14:52	0:0	2	->
water	14:54	0:0	2	p
op	14:55	0:0	2	[
water	14:56	0:0	2	i_plane
op	14:63	0:0	2	]
op	14:64	0:0	2	.
water	14:65	0:0	2	i_visible_lines
decl	15:4	15:50	2	uint8_t	*p_src
op	15:19	0:0	2	=
water	15:21	0:0	2	p_pic_in
op	15:29	0:0	2	->
water	15:31	0:0	2	p
op	15:32	0:0	2	[
water	15:33	0:0	2	i_plane
op	15:40	0:0	2	]
op	15:41	0:0	2	.
water	15:42	0:0	2	p_pixels
decl	16:4	16:51	2	uint8_t	*p_dst
op	16:19	0:0	2	=
water	16:21	0:0	2	p_pic_out
op	16:30	0:0	2	->
water	16:32	0:0	2	p
op	16:33	0:0	2	[
water	16:34	0:0	2	i_plane
op	16:41	0:0	2	]
op	16:42	0:0	2	.
water	16:43	0:0	2	p_pixels
decl	17:4	17:82	2	const int32_t	i_desk_start_x
op	17:33	0:0	2	=
water	17:35	0:0	2	ps_piece
op	17:43	0:0	2	->
water	17:45	0:0	2	ps_piece_in_plane
op	17:62	0:0	2	[
water	17:63	0:0	2	i_plane
op	17:70	0:0	2	]
op	17:71	0:0	2	.
water	17:72	0:0	2	i_actual_x
decl	18:4	18:82	2	const int32_t	i_desk_start_y
op	18:33	0:0	2	=
water	18:35	0:0	2	ps_piece
op	18:43	0:0	2	->
water	18:45	0:0	2	ps_piece_in_plane
op	18:62	0:0	2	[
water	18:63	0:0	2	i_plane
op	18:70	0:0	2	]
op	18:71	0:0	2	.
water	18:72	0:0	2	i_actual_y
decl	19:4	19:83	2	const int32_t	i_pic_start_x
op	19:32	0:0	2	=
water	19:34	0:0	2	ps_piece
op	19:42	0:0	2	->
water	19:44	0:0	2	ps_piece_in_plane
op	19:61	0:0	2	[
water	19:62	0:0	2	i_plane
op	19:69	0:0	2	]
op	19:70	0:0	2	.
water	19:71	0:0	2	i_original_x
decl	20:4	20:83	2	const int32_t	i_pic_start_y
op	20:32	0:0	2	=
water	20:34	0:0	2	ps_piece
op	20:42	0:0	2	->
water	20:44	0:0	2	ps_piece_in_plane
op	20:61	0:0	2	[
water	20:62	0:0	2	i_plane
op	20:69	0:0	2	]
op	20:70	0:0	2	.
water	20:71	0:0	2	i_original_y
decl	21:4	21:92	2	piece_shape_t	*ps_top_shape
op	21:32	0:0	2	=
op	21:36	0:0	2	&
water	21:37	0:0	2	p_sys
op	21:42	0:0	2	->
water	21:44	0:0	2	ps_pieces_shapes
op	21:60	0:0	2	[
water	21:61	0:0	2	ps_piece
op	21:69	0:0	2	->
water	21:71	0:0	2	i_top_shape
op	21:82	0:0	2	]
op	21:83	0:0	2	[
water	21:84	0:0	2	i_plane
op	21:91	0:0	2	]
decl	22:4	22:92	2	piece_shape_t	*ps_btm_shape
op	22:32	0:0	2	=
op	22:36	0:0	2	&
water	22:37	0:0	2	p_sys
op	22:42	0:0	2	->
water	22:44	0:0	2	ps_pieces_shapes
op	22:60	0:0	2	[
water	22:61	0:0	2	ps_piece
op	22:69	0:0	2	->
water	22:71	0:0	2	i_btm_shape
op	22:82	0:0	2	]
op	22:83	0:0	2	[
water	22:84	0:0	2	i_plane
op	22:91	0:0	2	]
decl	23:4	23:94	2	piece_shape_t	*ps_right_shape
op	23:34	0:0	2	=
op	23:36	0:0	2	&
water	23:37	0:0	2	p_sys
op	23:42	0:0	2	->
water	23:44	0:0	2	ps_pieces_shapes
op	23:60	0:0	2	[
water	23:61	0:0	2	ps_piece
op	23:69	0:0	2	->
water	23:71	0:0	2	i_right_shape
op	23:84	0:0	2	]
op	23:85	0:0	2	[
water	23:86	0:0	2	i_plane
op	23:93	0:0	2	]
decl	24:4	24:93	2	piece_shape_t	*ps_left_shape
op	24:33	0:0	2	=
op	24:36	0:0	2	&
water	24:37	0:0	2	p_sys
op	24:42	0:0	2	->
water	24:44	0:0	2	ps_pieces_shapes
op	24:60	0:0	2	[
water	24:61	0:0	2	ps_piece
op	24:69	0:0	2	->
water	24:71	0:0	2	i_left_shape
op	24:83	0:0	2	]
op	24:84	0:0	2	[
water	24:85	0:0	2	i_plane
op	24:92	0:0	2	]
decl	25:4	25:27	2	piece_shape_t	*ps_shape
decl	26:4	26:54	2	int32_t	i_min_y
op	26:20	0:0	2	=
water	26:22	0:0	2	ps_top_shape
op	26:34	0:0	2	->
water	26:36	0:0	2	i_first_row_offset
decl	27:4	27:84	2	int32_t	i_max_y
op	27:20	0:0	2	=
water	27:22	0:0	2	ps_btm_shape
op	27:34	0:0	2	->
water	27:36	0:0	2	i_first_row_offset
op	27:55	0:0	2	+
water	27:57	0:0	2	ps_btm_shape
op	27:69	0:0	2	->
water	27:71	0:0	2	i_row_nbr
op	27:81	0:0	2	-
water	27:83	0:0	2	1
for	28:4	81:4	2	( int32_t i_y = i_min_y ;i_y <= i_max_y;i_y ++)
forinit	0:0	28:30	3	 int32_t i_y = i_min_y ;
decl	28:9	28:30	4	int32_t	i_y
op	28:21	0:0	4	=
water	28:23	0:0	4	i_min_y
cond	28:32	28:39	3	i_y <= i_max_y
water	28:32	0:0	4	i_y
op	28:36	0:0	4	<=
water	28:39	0:0	4	i_max_y
forexpr	28:48	28:51	3	i_y ++
water	28:48	0:0	4	i_y
op	28:51	0:0	4	++
stmts	28:55	81:4	3	
water	28:55	0:0	4	{
decl	29:8	29:53	4	int32_t	i_current_src_y
op	29:32	0:0	4	=
water	29:34	0:0	4	i_pic_start_y
op	29:48	0:0	4	+
water	29:50	0:0	4	i_y
if	30:8	80:8	4	(( i_current_src_y >= 0 ) && ( i_current_src_y < i_src_visible_lines ))
cond	30:13	30:81	5	( i_current_src_y >= 0 ) && ( i_current_src_y < i_src_visible_lines )
water	30:13	0:0	6	(
water	30:15	0:0	6	i_current_src_y
op	30:31	0:0	6	>=
water	30:34	0:0	6	0
water	30:36	0:0	6	)
op	30:38	0:0	6	&&
water	30:41	0:0	6	(
water	30:43	0:0	6	i_current_src_y
op	30:59	0:0	6	<
water	30:61	0:0	6	i_src_visible_lines
water	30:81	0:0	6	)
stmts	30:85	80:8	5	
water	30:85	0:0	6	{
decl	31:12	31:38	6	int32_t	i_sect_start_x
op	31:35	0:0	6	=
water	31:37	0:0	6	0
for	33:12	79:12	6	( int8_t i_shape = 0 ;i_shape < 4;i_shape ++)
forinit	0:0	33:33	7	 int8_t i_shape = 0 ;
decl	33:17	33:33	8	int8_t	i_shape
op	33:31	0:0	8	=
water	33:32	0:0	8	0
cond	33:35	33:45	7	i_shape < 4
water	33:35	0:0	8	i_shape
op	33:43	0:0	8	<
water	33:45	0:0	8	4
forexpr	33:48	33:55	7	i_shape ++
water	33:48	0:0	8	i_shape
op	33:55	0:0	8	++
stmts	33:59	79:12	7	
water	33:59	0:0	8	{
switch	34:16	48:16	8	(i_shape)
cond	34:25	34:25	9	i_shape
water	34:25	0:0	10	i_shape
stmts	35:16	48:16	9	
water	35:16	0:0	10	{
label	36:18	36:24	10	case 0 :
water	37:20	0:0	10	ps_shape
op	37:29	0:0	10	=
water	37:31	0:0	10	ps_left_shape
water	37:44	0:0	10	;
break	38:20	38:25	10	
label	39:18	39:24	10	case 1 :
water	40:20	0:0	10	ps_shape
op	40:29	0:0	10	=
water	40:31	0:0	10	ps_top_shape
water	40:43	0:0	10	;
break	41:20	41:25	10	
label	42:18	42:24	10	case 2 :
water	43:20	0:0	10	ps_shape
op	43:29	0:0	10	=
water	43:31	0:0	10	ps_btm_shape
water	43:43	0:0	10	;
break	44:20	44:25	10	
label	45:18	45:24	10	case 3 :
water	46:20	0:0	10	ps_shape
op	46:29	0:0	10	=
water	46:31	0:0	10	ps_right_shape
water	46:45	0:0	10	;
break	47:20	47:25	10	
water	48:16	0:0	10	}
decl	49:16	49:64	8	int32_t	i_r
op	49:28	0:0	8	=
water	49:30	0:0	8	i_y
op	49:34	0:0	8	-
water	49:36	0:0	8	ps_shape
op	49:44	0:0	8	->
water	49:46	0:0	8	i_first_row_offset
if	50:16	51:28	8	(i_r < 0 || i_r >= ps_shape -> i_row_nbr)
cond	50:20	50:47	9	i_r < 0 || i_r >= ps_shape -> i_row_nbr
water	50:20	0:0	10	i_r
op	50:24	0:0	10	<
water	50:25	0:0	10	0
op	50:27	0:0	10	||
water	50:30	0:0	10	i_r
op	50:34	0:0	10	>=
water	50:37	0:0	10	ps_shape
op	50:45	0:0	10	->
water	50:47	0:0	10	i_row_nbr
stmts	51:20	51:28	9	
continue	51:20	51:28	10	
decl	52:16	52:90	8	piece_shape_row_t	*ps_piece_shape_row
op	52:54	0:0	8	=
op	52:56	0:0	8	&
water	52:57	0:0	8	ps_shape
op	52:65	0:0	8	->
water	52:67	0:0	8	ps_piece_shape_row
op	52:85	0:0	8	[
water	52:86	0:0	8	i_r
op	52:89	0:0	8	]
for	53:16	78:16	8	( int32_t i_s = 0 ;i_s < ps_piece_shape_row -> i_section_nbr;i_s ++)
forinit	0:0	53:36	9	 int32_t i_s = 0 ;
decl	53:21	53:36	10	int32_t	i_s
op	53:33	0:0	10	=
water	53:35	0:0	10	0
cond	53:38	53:64	9	i_s < ps_piece_shape_row -> i_section_nbr
water	53:38	0:0	10	i_s
op	53:42	0:0	10	<
water	53:44	0:0	10	ps_piece_shape_row
op	53:62	0:0	10	->
water	53:64	0:0	10	i_section_nbr
forexpr	53:79	53:82	9	i_s ++
water	53:79	0:0	10	i_s
op	53:82	0:0	10	++
stmts	53:86	78:16	9	
water	53:86	0:0	10	{
decl	54:20	54:83	10	uint8_t	i_type
op	54:35	0:0	10	=
water	54:37	0:0	10	ps_piece_shape_row
op	54:55	0:0	10	->
water	54:57	0:0	10	ps_row_section
op	54:71	0:0	10	[
water	54:72	0:0	10	i_s
op	54:75	0:0	10	]
op	54:76	0:0	10	.
water	54:77	0:0	10	i_type
decl	55:20	55:85	10	int32_t	i_width
op	55:36	0:0	10	=
water	55:38	0:0	10	ps_piece_shape_row
op	55:56	0:0	10	->
water	55:58	0:0	10	ps_row_section
op	55:72	0:0	10	[
water	55:73	0:0	10	i_s
op	55:76	0:0	10	]
op	55:77	0:0	10	.
water	55:78	0:0	10	i_width
if	56:20	76:20	10	(i_type == 0)
cond	56:24	56:34	11	i_type == 0
water	56:24	0:0	12	i_type
op	56:31	0:0	12	==
water	56:34	0:0	12	0
stmts	56:37	76:20	11	
water	56:37	0:0	12	{
for	58:24	75:24	12	( int32_t i_x = 0 ;i_x < i_width;i_x ++)
forinit	0:0	58:44	13	 int32_t i_x = 0 ;
decl	58:29	58:44	14	int32_t	i_x
op	58:41	0:0	14	=
water	58:43	0:0	14	0
cond	58:46	58:52	13	i_x < i_width
water	58:46	0:0	14	i_x
op	58:50	0:0	14	<
water	58:52	0:0	14	i_width
forexpr	58:61	58:64	13	i_x ++
water	58:61	0:0	14	i_x
op	58:64	0:0	14	++
stmts	58:68	75:24	13	
water	58:68	0:0	14	{
decl	59:28	59:145	14	int32_t	i_current_dst_x
op	59:52	0:0	14	=
water	59:54	0:0	14	i_desk_start_x
op	59:69	0:0	14	+
water	59:71	0:0	14	(
water	59:72	0:0	14	i_sect_start_x
op	59:87	0:0	14	+
water	59:89	0:0	14	i_x
water	59:92	0:0	14	)
op	59:94	0:0	14	*
water	59:96	0:0	14	ps_piece
op	59:104	0:0	14	->
water	59:106	0:0	14	i_step_x_x
op	59:117	0:0	14	+
water	59:119	0:0	14	i_y
op	59:123	0:0	14	*
water	59:125	0:0	14	ps_piece
op	59:133	0:0	14	->
water	59:135	0:0	14	i_step_y_x
decl	60:28	60:145	14	int32_t	i_current_dst_y
op	60:52	0:0	14	=
water	60:54	0:0	14	i_desk_start_y
op	60:69	0:0	14	+
water	60:71	0:0	14	(
water	60:72	0:0	14	i_sect_start_x
op	60:87	0:0	14	+
water	60:89	0:0	14	i_x
water	60:92	0:0	14	)
op	60:94	0:0	14	*
water	60:96	0:0	14	ps_piece
op	60:104	0:0	14	->
water	60:106	0:0	14	i_step_x_y
op	60:117	0:0	14	+
water	60:119	0:0	14	i_y
op	60:123	0:0	14	*
water	60:125	0:0	14	ps_piece
op	60:133	0:0	14	->
water	60:135	0:0	14	i_step_y_y
decl	61:28	61:92	14	int32_t	i_current_src_x
op	61:52	0:0	14	=
water	61:54	0:0	14	i_pic_start_x
op	61:68	0:0	14	+
water	61:70	0:0	14	(
water	61:71	0:0	14	i_sect_start_x
op	61:86	0:0	14	+
water	61:88	0:0	14	i_x
water	61:91	0:0	14	)
if	62:28	65:40	14	(i_current_dst_x < 0 || i_current_dst_x >= i_dst_width || i_current_src_x < 0 || i_current_src_x >= i_src_width || i_current_dst_y < 0 || i_current_dst_y >= i_dst_visible_lines)
cond	62:36	64:78	15	i_current_dst_x < 0 || i_current_dst_x >= i_dst_width || i_current_src_x < 0 || i_current_src_x >= i_src_width || i_current_dst_y < 0 || i_current_dst_y >= i_dst_visible_lines
water	62:36	0:0	16	i_current_dst_x
op	62:52	0:0	16	<
water	62:54	0:0	16	0
op	62:56	0:0	16	||
water	62:59	0:0	16	i_current_dst_x
op	62:75	0:0	16	>=
water	62:78	0:0	16	i_dst_width
op	63:33	0:0	16	||
water	63:36	0:0	16	i_current_src_x
op	63:52	0:0	16	<
water	63:54	0:0	16	0
op	63:56	0:0	16	||
water	63:59	0:0	16	i_current_src_x
op	63:75	0:0	16	>=
water	63:78	0:0	16	i_src_width
op	64:33	0:0	16	||
water	64:36	0:0	16	i_current_dst_y
op	64:52	0:0	16	<
water	64:54	0:0	16	0
op	64:56	0:0	16	||
water	64:59	0:0	16	i_current_dst_y
op	64:75	0:0	16	>=
water	64:78	0:0	16	i_dst_visible_lines
stmts	65:32	65:40	15	
continue	65:32	65:40	16	
call	66:28	68:50	14	memcpy
arg	66:36	66:107	15	p_dst+i_current_dst_y*i_dst_pitch+i_current_dst_x*i_pixel_pitch
water	66:36	0:0	16	p_dst
op	66:42	0:0	16	+
water	66:44	0:0	16	i_current_dst_y
op	66:60	0:0	16	*
water	66:62	0:0	16	i_dst_pitch
op	66:74	0:0	16	+
water	66:76	0:0	16	i_current_dst_x
op	66:92	0:0	16	*
water	66:94	0:0	16	i_pixel_pitch
arg	67:36	67:107	15	p_src+i_current_src_y*i_src_pitch+i_current_src_x*i_pixel_pitch
water	67:36	0:0	16	p_src
op	67:42	0:0	16	+
water	67:44	0:0	16	i_current_src_y
op	67:60	0:0	16	*
water	67:62	0:0	16	i_src_pitch
op	67:74	0:0	16	+
water	67:76	0:0	16	i_current_src_x
op	67:92	0:0	16	*
water	67:94	0:0	16	i_pixel_pitch
arg	68:36	68:50	15	i_pixel_pitch
water	68:36	0:0	16	i_pixel_pitch
water	68:51	0:0	14	;
if	72:28	74:60	14	(( i_plane == 0 ) && ( p_sys -> i_mouse_x == i_current_dst_x ) && ( p_sys -> i_mouse_y == i_current_dst_y ))
cond	72:32	73:88	15	( i_plane == 0 ) && ( p_sys -> i_mouse_x == i_current_dst_x ) && ( p_sys -> i_mouse_y == i_current_dst_y )
water	72:32	0:0	16	(
water	72:33	0:0	16	i_plane
op	72:41	0:0	16	==
water	72:44	0:0	16	0
water	72:45	0:0	16	)
op	72:48	0:0	16	&&
water	72:51	0:0	16	(
water	72:52	0:0	16	p_sys
op	72:57	0:0	16	->
water	72:59	0:0	16	i_mouse_x
op	72:69	0:0	16	==
water	72:72	0:0	16	i_current_dst_x
water	72:88	0:0	16	)
op	73:48	0:0	16	&&
water	73:51	0:0	16	(
water	73:52	0:0	16	p_sys
op	73:57	0:0	16	->
water	73:59	0:0	16	i_mouse_y
op	73:69	0:0	16	==
water	73:72	0:0	16	i_current_dst_y
water	73:88	0:0	16	)
stmts	74:32	74:60	15	
water	74:32	0:0	16	p_sys
op	74:37	0:0	16	->
water	74:39	0:0	16	i_pointed_pce
op	74:53	0:0	16	=
water	74:55	0:0	16	i_pce
water	74:60	0:0	16	;
water	75:24	0:0	14	}
water	76:20	0:0	12	}
water	77:20	0:0	10	i_sect_start_x
op	77:35	0:0	10	+=
water	77:38	0:0	10	i_width
water	77:45	0:0	10	;
water	78:16	0:0	10	}
water	79:12	0:0	8	}
water	80:8	0:0	6	}
water	81:4	0:0	4	}
return	82:4	82:10	2	

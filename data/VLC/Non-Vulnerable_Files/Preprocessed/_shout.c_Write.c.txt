func	2:0	43:0	0	static ssize_t	Write
params	2:20	0:0	1	
param	2:22	2:49	2	sout_access_out_t *	p_access
param	2:51	2:69	2	block_t *	p_buffer
stmnts	0:0	42:18	1	
decl	4:4	4:50	2	sout_access_out_sys_t	*p_sys
op	4:33	0:0	2	=
water	4:35	0:0	2	p_access
op	4:43	0:0	2	->
water	4:45	0:0	2	p_sys
decl	5:4	5:22	2	size_t	i_write
op	5:19	0:0	2	=
water	5:21	0:0	2	0
call	6:4	6:31	2	shout_sync
arg	6:16	6:31	3	p_sys->p_shout
water	6:16	0:0	4	p_sys
op	6:21	0:0	4	->
water	6:23	0:0	4	p_shout
water	6:32	0:0	2	;
while	7:4	41:4	2	(p_buffer)
cond	7:11	7:11	3	p_buffer
water	7:11	0:0	4	p_buffer
stmts	8:4	41:4	3	
water	8:4	0:0	4	{
decl	9:8	9:42	4	block_t	*p_next
op	9:24	0:0	4	=
water	9:26	0:0	4	p_buffer
op	9:34	0:0	4	->
water	9:36	0:0	4	p_next
if	10:8	14:8	4	(shout_send (p_sys -> p_shout ,p_buffer -> p_buffer ,p_buffer -> i_buffer ) == SHOUTERR_SUCCESS)
cond	10:12	11:16	5	shout_send (p_sys -> p_shout ,p_buffer -> p_buffer ,p_buffer -> i_buffer ) == SHOUTERR_SUCCESS
call	10:12	10:79	6	shout_send
arg	10:24	10:38	7	p_sys->p_shout
water	10:24	0:0	8	p_sys
op	10:29	0:0	8	->
water	10:31	0:0	8	p_shout
arg	10:40	10:58	7	p_buffer->p_buffer
water	10:40	0:0	8	p_buffer
op	10:48	0:0	8	->
water	10:50	0:0	8	p_buffer
arg	10:60	10:79	7	p_buffer->i_buffer
water	10:60	0:0	8	p_buffer
op	10:68	0:0	8	->
water	10:70	0:0	8	i_buffer
op	11:13	0:0	6	==
water	11:16	0:0	6	SHOUTERR_SUCCESS
stmts	12:8	14:8	5	
water	12:8	0:0	6	{
water	13:12	0:0	6	i_write
op	13:20	0:0	6	+=
water	13:23	0:0	6	p_buffer
op	13:31	0:0	6	->
water	13:33	0:0	6	i_buffer
water	13:41	0:0	6	;
water	14:8	0:0	6	}
else	15:8	37:8	4
stmts	16:8	37:8	5	
water	16:8	0:0	6	{
call	17:12	18:55	6	msg_Err
arg	17:21	17:29	7	p_access
water	17:21	0:0	8	p_access
arg	17:31	17:59	7	"cannot write to stream: %s"
water	17:31	0:0	8	"cannot write to stream: %s"
arg	18:21	18:55	7	shout_get_error(p_sys->p_shout)
call	18:21	18:53	8	shout_get_error
arg	18:38	18:53	9	p_sys->p_shout
water	18:38	0:0	10	p_sys
op	18:43	0:0	10	->
water	18:45	0:0	10	p_shout
water	18:56	0:0	6	;
call	23:12	23:40	6	shout_close
arg	23:25	23:40	7	p_sys->p_shout
water	23:25	0:0	8	p_sys
op	23:30	0:0	8	->
water	23:32	0:0	8	p_shout
water	23:41	0:0	6	;
call	24:12	24:77	6	msg_Warn
arg	24:22	24:30	7	p_access
water	24:22	0:0	8	p_access
arg	24:32	24:77	7	"server unavailable? trying to reconnect..."
water	24:32	0:0	8	"server unavailable? trying to reconnect..."
water	24:78	0:0	6	;
if	26:12	30:12	6	(shout_open (p_sys -> p_shout ) == SHOUTERR_SUCCESS)
cond	26:16	26:48	7	shout_open (p_sys -> p_shout ) == SHOUTERR_SUCCESS
call	26:16	26:43	8	shout_open
arg	26:28	26:43	9	p_sys->p_shout
water	26:28	0:0	10	p_sys
op	26:33	0:0	10	->
water	26:35	0:0	10	p_shout
op	26:45	0:0	8	==
water	26:48	0:0	8	SHOUTERR_SUCCESS
stmts	27:12	30:12	7	
water	27:12	0:0	8	{
call	28:16	28:43	8	shout_sync
arg	28:28	28:43	9	p_sys->p_shout
water	28:28	0:0	10	p_sys
op	28:33	0:0	10	->
water	28:35	0:0	10	p_shout
water	28:44	0:0	8	;
call	29:16	29:60	8	msg_Warn
arg	29:26	29:34	9	p_access
water	29:26	0:0	10	p_access
arg	29:36	29:60	9	"reconnected to server"
water	29:36	0:0	10	"reconnected to server"
water	29:61	0:0	8	;
water	30:12	0:0	8	}
else	31:12	36:12	6
stmts	32:12	36:12	7	
water	32:12	0:0	8	{
call	33:16	33:67	8	msg_Err
arg	33:25	33:33	9	p_access
water	33:25	0:0	10	p_access
arg	33:35	33:67	9	"failed to reconnect to server"
water	33:35	0:0	10	"failed to reconnect to server"
water	33:68	0:0	8	;
call	34:16	34:45	8	block_ChainRelease
arg	34:36	34:45	9	p_buffer
water	34:36	0:0	10	p_buffer
water	34:46	0:0	8	;
return	35:16	35:35	8	VLC_EGENERIC
water	35:23	0:0	9	VLC_EGENERIC
water	36:12	0:0	8	}
water	37:8	0:0	6	}
call	38:8	38:32	4	block_Release
arg	38:23	38:32	5	p_buffer
water	38:23	0:0	6	p_buffer
water	38:33	0:0	4	;
water	40:8	0:0	4	p_buffer
op	40:17	0:0	4	=
water	40:19	0:0	4	p_next
water	40:25	0:0	4	;
water	41:4	0:0	4	}
return	42:4	42:18	2	i_write
water	42:11	0:0	3	i_write

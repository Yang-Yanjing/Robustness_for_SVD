func	2:0	49:0	0	static inline bool	copy_rect
params	2:28	0:0	1	
param	2:30	2:49	2	filter_sys_t *	p_sys
param	3:30	3:42	2	uint16_t	i_x
param	3:44	3:56	2	uint16_t	i_y
param	4:30	4:42	2	uint16_t	i_w
param	4:44	4:56	2	uint16_t	i_h
param	5:30	5:43	2	uint16_t	i_sx
param	5:45	5:59	2	uint16_t	i_sy
stmnts	0:0	48:15	1	
decl	7:4	7:42	2	plane_t	*p_Y
op	7:17	0:0	2	=
water	7:19	0:0	2	p_sys
op	7:24	0:0	2	->
water	7:26	0:0	2	p_pic
op	7:31	0:0	2	->
water	7:33	0:0	2	p
op	7:34	0:0	2	+
water	7:35	0:0	2	Y_PLANE
decl	8:4	8:42	2	plane_t	*p_U
op	8:17	0:0	2	=
water	8:19	0:0	2	p_sys
op	8:24	0:0	2	->
water	8:26	0:0	2	p_pic
op	8:31	0:0	2	->
water	8:33	0:0	2	p
op	8:34	0:0	2	+
water	8:35	0:0	2	U_PLANE
decl	9:4	9:42	2	plane_t	*p_V
op	9:17	0:0	2	=
water	9:19	0:0	2	p_sys
op	9:24	0:0	2	->
water	9:26	0:0	2	p_pic
op	9:31	0:0	2	->
water	9:33	0:0	2	p
op	9:34	0:0	2	+
water	9:35	0:0	2	V_PLANE
decl	10:4	10:42	2	plane_t	*p_A
op	10:17	0:0	2	=
water	10:19	0:0	2	p_sys
op	10:24	0:0	2	->
water	10:26	0:0	2	p_pic
op	10:31	0:0	2	->
water	10:33	0:0	2	p
op	10:34	0:0	2	+
water	10:35	0:0	2	A_PLANE
decl	11:4	11:30	2	int	i_pitch
op	11:16	0:0	2	=
water	11:18	0:0	2	p_Y
op	11:21	0:0	2	->
water	11:23	0:0	2	i_pitch
decl	12:4	12:30	2	int	i_lines
op	12:16	0:0	2	=
water	12:18	0:0	2	p_Y
op	12:21	0:0	2	->
water	12:23	0:0	2	i_lines
call	13:4	13:95	2	fprintf
arg	13:13	13:19	3	stderr
water	13:13	0:0	4	stderr
arg	13:21	13:62	3	"copy_rect: (%d,%d)+(%d,%d) -> (%d,%d)\n"
water	13:21	0:0	4	"copy_rect: (%d,%d)+(%d,%d) -> (%d,%d)\n"
arg	13:64	13:67	3	i_x
water	13:64	0:0	4	i_x
arg	13:69	13:72	3	i_y
water	13:69	0:0	4	i_y
arg	13:74	13:77	3	i_w
water	13:74	0:0	4	i_w
arg	13:79	13:82	3	i_h
water	13:79	0:0	4	i_h
arg	13:84	13:88	3	i_sx
water	13:84	0:0	4	i_sx
arg	13:90	13:95	3	i_sy
water	13:90	0:0	4	i_sy
water	13:96	0:0	2	;
if	14:4	15:20	2	(i_x + i_w > i_pitch || i_sx + i_w > i_pitch)
cond	14:8	14:44	3	i_x + i_w > i_pitch || i_sx + i_w > i_pitch
water	14:8	0:0	4	i_x
op	14:12	0:0	4	+
water	14:14	0:0	4	i_w
op	14:18	0:0	4	>
water	14:20	0:0	4	i_pitch
op	14:28	0:0	4	||
water	14:31	0:0	4	i_sx
op	14:36	0:0	4	+
water	14:38	0:0	4	i_w
op	14:42	0:0	4	>
water	14:44	0:0	4	i_pitch
stmts	15:8	15:20	3	
return	15:8	15:20	4	false
water	15:15	0:0	5	false
if	16:4	17:20	2	(i_y + i_h > i_lines || i_sy + i_h > i_lines)
cond	16:8	16:44	3	i_y + i_h > i_lines || i_sy + i_h > i_lines
water	16:8	0:0	4	i_y
op	16:12	0:0	4	+
water	16:14	0:0	4	i_h
op	16:18	0:0	4	>
water	16:20	0:0	4	i_lines
op	16:28	0:0	4	||
water	16:31	0:0	4	i_sy
op	16:36	0:0	4	+
water	16:38	0:0	4	i_h
op	16:42	0:0	4	>
water	16:44	0:0	4	i_lines
stmts	17:8	17:20	3	
return	17:8	17:20	4	false
water	17:15	0:0	5	false
if	18:4	19:19	2	(i_w <= 0 || i_h <= 0)
cond	18:8	18:27	3	i_w <= 0 || i_h <= 0
water	18:8	0:0	4	i_w
op	18:12	0:0	4	<=
water	18:15	0:0	4	0
op	18:17	0:0	4	||
water	18:20	0:0	4	i_h
op	18:24	0:0	4	<=
water	18:27	0:0	4	0
stmts	19:8	19:19	3	
return	19:8	19:19	4	true
water	19:15	0:0	5	true
decl	20:4	20:47	2	uint8_t	*pb_buffer
op	20:23	0:0	2	=
call	20:25	20:46	3	calloc
arg	20:33	20:42	4	i_w*i_h
water	20:33	0:0	5	i_w
op	20:37	0:0	5	*
water	20:39	0:0	5	i_h
arg	20:44	20:46	4	4
water	20:44	0:0	5	4
if	21:4	22:20	2	(! pb_buffer)
cond	21:8	21:9	3	! pb_buffer
op	21:8	0:0	4	!
water	21:9	0:0	4	pb_buffer
stmts	22:8	22:20	3	
return	22:8	22:20	4	false
water	22:15	0:0	5	false
for	23:4	34:4	2	( int i_line = 0 ;i_line < i_h;i_line ++)
forinit	0:0	23:23	3	 int i_line = 0 ;
decl	23:9	23:23	4	int	i_line
op	23:20	0:0	4	=
water	23:22	0:0	4	0
cond	23:25	23:34	3	i_line < i_h
water	23:25	0:0	4	i_line
op	23:32	0:0	4	<
water	23:34	0:0	4	i_h
forexpr	23:39	23:45	3	i_line ++
water	23:39	0:0	4	i_line
op	23:45	0:0	4	++
stmts	24:4	34:4	3	
water	24:4	0:0	4	{
for	25:8	33:8	4	( int i_column = 0 ;i_column < i_w;i_column ++)
forinit	0:0	25:29	5	 int i_column = 0 ;
decl	25:13	25:29	6	int	i_column
op	25:26	0:0	6	=
water	25:28	0:0	6	0
cond	25:31	25:42	5	i_column < i_w
water	25:31	0:0	6	i_column
op	25:40	0:0	6	<
water	25:42	0:0	6	i_w
forexpr	25:47	25:55	5	i_column ++
water	25:47	0:0	6	i_column
op	25:55	0:0	6	++
stmts	26:8	33:8	5	
water	26:8	0:0	6	{
decl	27:12	27:82	6	const int	i_src_offset
op	27:35	0:0	6	=
water	27:37	0:0	6	(
water	27:39	0:0	6	i_sy
op	27:44	0:0	6	+
water	27:46	0:0	6	i_line
water	27:53	0:0	6	)
op	27:55	0:0	6	*
water	27:57	0:0	6	i_pitch
op	27:65	0:0	6	+
water	27:67	0:0	6	i_sx
op	27:72	0:0	6	+
water	27:74	0:0	6	i_column
decl	28:12	28:82	6	const int	i_tmp_offset
op	28:35	0:0	6	=
water	28:37	0:0	6	(
water	28:42	0:0	6	0
op	28:44	0:0	6	+
water	28:46	0:0	6	i_line
water	28:53	0:0	6	)
op	28:55	0:0	6	*
water	28:61	0:0	6	i_w
op	28:65	0:0	6	+
water	28:70	0:0	6	0
op	28:72	0:0	6	+
water	28:74	0:0	6	i_column
water	29:12	0:0	6	pb_buffer
op	29:21	0:0	6	[
water	29:22	0:0	6	4
op	29:23	0:0	6	*
water	29:24	0:0	6	i_tmp_offset
op	29:37	0:0	6	+
water	29:39	0:0	6	0
op	29:40	0:0	6	]
op	29:42	0:0	6	=
water	29:44	0:0	6	p_Y
op	29:47	0:0	6	->
water	29:49	0:0	6	p_pixels
op	29:57	0:0	6	[
water	29:58	0:0	6	i_src_offset
op	29:70	0:0	6	]
water	29:71	0:0	6	;
water	30:12	0:0	6	pb_buffer
op	30:21	0:0	6	[
water	30:22	0:0	6	4
op	30:23	0:0	6	*
water	30:24	0:0	6	i_tmp_offset
op	30:37	0:0	6	+
water	30:39	0:0	6	1
op	30:40	0:0	6	]
op	30:42	0:0	6	=
water	30:44	0:0	6	p_U
op	30:47	0:0	6	->
water	30:49	0:0	6	p_pixels
op	30:57	0:0	6	[
water	30:58	0:0	6	i_src_offset
op	30:70	0:0	6	]
water	30:71	0:0	6	;
water	31:12	0:0	6	pb_buffer
op	31:21	0:0	6	[
water	31:22	0:0	6	4
op	31:23	0:0	6	*
water	31:24	0:0	6	i_tmp_offset
op	31:37	0:0	6	+
water	31:39	0:0	6	2
op	31:40	0:0	6	]
op	31:42	0:0	6	=
water	31:44	0:0	6	p_V
op	31:47	0:0	6	->
water	31:49	0:0	6	p_pixels
op	31:57	0:0	6	[
water	31:58	0:0	6	i_src_offset
op	31:70	0:0	6	]
water	31:71	0:0	6	;
water	32:12	0:0	6	pb_buffer
op	32:21	0:0	6	[
water	32:22	0:0	6	4
op	32:23	0:0	6	*
water	32:24	0:0	6	i_tmp_offset
op	32:37	0:0	6	+
water	32:39	0:0	6	3
op	32:40	0:0	6	]
op	32:42	0:0	6	=
water	32:44	0:0	6	p_A
op	32:47	0:0	6	->
water	32:49	0:0	6	p_pixels
op	32:57	0:0	6	[
water	32:58	0:0	6	i_src_offset
op	32:70	0:0	6	]
water	32:71	0:0	6	;
water	33:8	0:0	6	}
water	34:4	0:0	4	}
for	35:4	46:4	2	( int i_line = 0 ;i_line < i_h;i_line ++)
forinit	0:0	35:23	3	 int i_line = 0 ;
decl	35:9	35:23	4	int	i_line
op	35:20	0:0	4	=
water	35:22	0:0	4	0
cond	35:25	35:34	3	i_line < i_h
water	35:25	0:0	4	i_line
op	35:32	0:0	4	<
water	35:34	0:0	4	i_h
forexpr	35:39	35:45	3	i_line ++
water	35:39	0:0	4	i_line
op	35:45	0:0	4	++
stmts	36:4	46:4	3	
water	36:4	0:0	4	{
for	37:8	45:8	4	( int i_column = 0 ;i_column < i_w;i_column ++)
forinit	0:0	37:29	5	 int i_column = 0 ;
decl	37:13	37:29	6	int	i_column
op	37:26	0:0	6	=
water	37:28	0:0	6	0
cond	37:31	37:42	5	i_column < i_w
water	37:31	0:0	6	i_column
op	37:40	0:0	6	<
water	37:42	0:0	6	i_w
forexpr	37:47	37:55	5	i_column ++
water	37:47	0:0	6	i_column
op	37:55	0:0	6	++
stmts	38:8	45:8	5	
water	38:8	0:0	6	{
decl	39:12	39:80	6	const int	i_tmp_offset
op	39:35	0:0	6	=
water	39:37	0:0	6	(
water	39:41	0:0	6	0
op	39:43	0:0	6	+
water	39:45	0:0	6	i_line
water	39:52	0:0	6	)
op	39:54	0:0	6	*
water	39:60	0:0	6	i_w
op	39:64	0:0	6	+
water	39:68	0:0	6	0
op	39:70	0:0	6	+
water	39:72	0:0	6	i_column
decl	40:12	40:80	6	const int	i_dst_offset
op	40:35	0:0	6	=
water	40:37	0:0	6	(
water	40:39	0:0	6	i_y
op	40:43	0:0	6	+
water	40:45	0:0	6	i_line
water	40:52	0:0	6	)
op	40:54	0:0	6	*
water	40:56	0:0	6	i_pitch
op	40:64	0:0	6	+
water	40:66	0:0	6	i_x
op	40:70	0:0	6	+
water	40:72	0:0	6	i_column
water	41:12	0:0	6	p_Y
op	41:15	0:0	6	->
water	41:17	0:0	6	p_pixels
op	41:25	0:0	6	[
water	41:26	0:0	6	i_dst_offset
op	41:38	0:0	6	]
op	41:40	0:0	6	=
water	41:42	0:0	6	pb_buffer
op	41:51	0:0	6	[
water	41:52	0:0	6	4
op	41:53	0:0	6	*
water	41:54	0:0	6	i_tmp_offset
op	41:67	0:0	6	+
water	41:69	0:0	6	0
op	41:70	0:0	6	]
water	41:71	0:0	6	;
water	42:12	0:0	6	p_U
op	42:15	0:0	6	->
water	42:17	0:0	6	p_pixels
op	42:25	0:0	6	[
water	42:26	0:0	6	i_dst_offset
op	42:38	0:0	6	]
op	42:40	0:0	6	=
water	42:42	0:0	6	pb_buffer
op	42:51	0:0	6	[
water	42:52	0:0	6	4
op	42:53	0:0	6	*
water	42:54	0:0	6	i_tmp_offset
op	42:67	0:0	6	+
water	42:69	0:0	6	1
op	42:70	0:0	6	]
water	42:71	0:0	6	;
water	43:12	0:0	6	p_V
op	43:15	0:0	6	->
water	43:17	0:0	6	p_pixels
op	43:25	0:0	6	[
water	43:26	0:0	6	i_dst_offset
op	43:38	0:0	6	]
op	43:40	0:0	6	=
water	43:42	0:0	6	pb_buffer
op	43:51	0:0	6	[
water	43:52	0:0	6	4
op	43:53	0:0	6	*
water	43:54	0:0	6	i_tmp_offset
op	43:67	0:0	6	+
water	43:69	0:0	6	2
op	43:70	0:0	6	]
water	43:71	0:0	6	;
water	44:12	0:0	6	p_A
op	44:15	0:0	6	->
water	44:17	0:0	6	p_pixels
op	44:25	0:0	6	[
water	44:26	0:0	6	i_dst_offset
op	44:38	0:0	6	]
op	44:40	0:0	6	=
water	44:42	0:0	6	pb_buffer
op	44:51	0:0	6	[
water	44:52	0:0	6	4
op	44:53	0:0	6	*
water	44:54	0:0	6	i_tmp_offset
op	44:67	0:0	6	+
water	44:69	0:0	6	3
op	44:70	0:0	6	]
water	44:71	0:0	6	;
water	45:8	0:0	6	}
water	46:4	0:0	4	}
call	47:4	47:20	2	free
arg	47:10	47:20	3	pb_buffer
water	47:10	0:0	4	pb_buffer
water	47:21	0:0	2	;
return	48:4	48:15	2	true
water	48:11	0:0	3	true

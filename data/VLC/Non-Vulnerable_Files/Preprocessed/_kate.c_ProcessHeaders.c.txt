func	2:0	69:0	0	static int	ProcessHeaders
params	2:25	0:0	1	
param	2:27	2:44	2	decoder_t *	p_dec
stmnts	0:0	68:22	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:18	2	kate_packet	kp
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	pi_size
op	6:20	0:0	2	[
water	6:21	0:0	2	XIPH_MAX_HEADER_COUNT
op	6:42	0:0	2	]
water	6:43	0:0	2	;
decl	7:4	7:44	2	void	*pp_data[XIPH_MAX_HEADER_COUNT]
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	i_count
water	8:20	0:0	2	;
if	9:4	11:27	2	(xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra ))
cond	9:8	10:71	3	xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra )
call	9:8	10:71	4	xiph_SplitHeaders
arg	9:27	9:34	5	pi_size
water	9:27	0:0	6	pi_size
arg	9:36	9:43	5	pp_data
water	9:36	0:0	6	pp_data
arg	9:45	9:53	5	&i_count
op	9:45	0:0	6	&
water	9:46	0:0	6	i_count
arg	10:27	10:48	5	p_dec->fmt_in.i_extra
water	10:27	0:0	6	p_dec
op	10:32	0:0	6	->
water	10:34	0:0	6	fmt_in
op	10:40	0:0	6	.
water	10:41	0:0	6	i_extra
arg	10:50	10:71	5	p_dec->fmt_in.p_extra
water	10:50	0:0	6	p_dec
op	10:55	0:0	6	->
water	10:57	0:0	6	fmt_in
op	10:63	0:0	6	.
water	10:64	0:0	6	p_extra
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
if	12:4	13:27	2	(i_count < 1)
cond	12:8	12:18	3	i_count < 1
water	12:8	0:0	4	i_count
op	12:16	0:0	4	<
water	12:18	0:0	4	1
stmts	13:8	13:27	3	
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	15:4	0:0	2	kp
op	15:6	0:0	2	.
water	15:7	0:0	2	nbytes
op	15:14	0:0	2	=
water	15:16	0:0	2	pi_size
op	15:23	0:0	2	[
water	15:24	0:0	2	0
op	15:25	0:0	2	]
water	15:26	0:0	2	;
water	16:4	0:0	2	kp
op	16:6	0:0	2	.
water	16:7	0:0	2	data
op	16:14	0:0	2	=
water	16:16	0:0	2	pp_data
op	16:23	0:0	2	[
water	16:24	0:0	2	0
op	16:25	0:0	2	]
water	16:26	0:0	2	;
decl	17:4	17:67	2	int	i_ret
op	17:14	0:0	2	=
call	17:16	17:66	3	kate_decode_headerin
arg	17:38	17:48	4	&p_sys->ki
op	17:38	0:0	5	&
water	17:39	0:0	5	p_sys
op	17:44	0:0	5	->
water	17:46	0:0	5	ki
arg	17:50	17:60	4	&p_sys->kc
op	17:50	0:0	5	&
water	17:51	0:0	5	p_sys
op	17:56	0:0	5	->
water	17:58	0:0	5	kc
arg	17:62	17:66	4	&kp
op	17:62	0:0	5	&
water	17:63	0:0	5	kp
if	18:4	22:4	2	(i_ret < 0)
cond	18:8	18:16	3	i_ret < 0
water	18:8	0:0	4	i_ret
op	18:14	0:0	4	<
water	18:16	0:0	4	0
stmts	19:4	22:4	3	
water	19:4	0:0	4	{
call	20:8	20:80	4	msg_Err
arg	20:17	20:22	5	p_dec
water	20:17	0:0	6	p_dec
arg	20:24	20:72	5	"this bitstream does not contain Kate data (%d)"
water	20:24	0:0	6	"this bitstream does not contain Kate data (%d)"
arg	20:74	20:80	5	i_ret
water	20:74	0:0	6	i_ret
water	20:81	0:0	4	;
return	21:8	21:27	4	VLC_EGENERIC
water	21:15	0:0	5	VLC_EGENERIC
water	22:4	0:0	4	}
call	23:4	26:36	2	msg_Dbg
arg	23:13	23:18	3	p_dec
water	23:13	0:0	4	p_dec
arg	23:20	23:67	3	"%s %s text, granule rate %f, granule shift %d"
water	23:20	0:0	4	"%s %s text, granule rate %f, granule shift %d"
arg	24:13	24:31	3	p_sys->ki.language
water	24:13	0:0	4	p_sys
op	24:18	0:0	4	->
water	24:20	0:0	4	ki
op	24:22	0:0	4	.
water	24:23	0:0	4	language
arg	24:33	24:51	3	p_sys->ki.category
water	24:33	0:0	4	p_sys
op	24:38	0:0	4	->
water	24:40	0:0	4	ki
op	24:42	0:0	4	.
water	24:43	0:0	4	category
arg	25:13	25:70	3	(double)p_sys->ki.gps_numerator/p_sys->ki.gps_denominator
water	25:13	0:0	4	(
water	25:14	0:0	4	double
water	25:20	0:0	4	)
water	25:21	0:0	4	p_sys
op	25:26	0:0	4	->
water	25:28	0:0	4	ki
op	25:30	0:0	4	.
water	25:31	0:0	4	gps_numerator
op	25:44	0:0	4	/
water	25:45	0:0	4	p_sys
op	25:50	0:0	4	->
water	25:52	0:0	4	ki
op	25:54	0:0	4	.
water	25:55	0:0	4	gps_denominator
arg	26:13	26:36	3	p_sys->ki.granule_shift
water	26:13	0:0	4	p_sys
op	26:18	0:0	4	->
water	26:20	0:0	4	ki
op	26:22	0:0	4	.
water	26:23	0:0	4	granule_shift
water	26:37	0:0	2	;
for	28:4	43:4	2	(unsigned i_headeridx = 1 ;i_headeridx < i_count;i_headeridx ++)
forinit	28:9	28:33	3	unsigned i_headeridx = 1 ;
water	28:9	0:0	4	unsigned
water	28:18	0:0	4	i_headeridx
op	28:30	0:0	4	=
water	28:32	0:0	4	1
water	28:33	0:0	4	;
cond	28:35	28:49	3	i_headeridx < i_count
water	28:35	0:0	4	i_headeridx
op	28:47	0:0	4	<
water	28:49	0:0	4	i_count
forexpr	28:58	28:69	3	i_headeridx ++
water	28:58	0:0	4	i_headeridx
op	28:69	0:0	4	++
stmts	29:4	43:4	3	
water	29:4	0:0	4	{
water	30:8	0:0	4	kp
op	30:10	0:0	4	.
water	30:11	0:0	4	nbytes
op	30:18	0:0	4	=
water	30:20	0:0	4	pi_size
op	30:27	0:0	4	[
water	30:28	0:0	4	i_headeridx
op	30:39	0:0	4	]
water	30:40	0:0	4	;
water	31:8	0:0	4	kp
op	31:10	0:0	4	.
water	31:11	0:0	4	data
op	31:18	0:0	4	=
water	31:20	0:0	4	pp_data
op	31:27	0:0	4	[
water	31:28	0:0	4	i_headeridx
op	31:39	0:0	4	]
water	31:40	0:0	4	;
water	32:8	0:0	4	i_ret
op	32:14	0:0	4	=
call	32:16	32:66	4	kate_decode_headerin
arg	32:38	32:48	5	&p_sys->ki
op	32:38	0:0	6	&
water	32:39	0:0	6	p_sys
op	32:44	0:0	6	->
water	32:46	0:0	6	ki
arg	32:50	32:60	5	&p_sys->kc
op	32:50	0:0	6	&
water	32:51	0:0	6	p_sys
op	32:56	0:0	6	->
water	32:58	0:0	6	kc
arg	32:62	32:66	5	&kp
op	32:62	0:0	6	&
water	32:63	0:0	6	kp
water	32:67	0:0	4	;
if	33:8	37:8	4	(i_ret < 0)
cond	33:12	33:20	5	i_ret < 0
water	33:12	0:0	6	i_ret
op	33:18	0:0	6	<
water	33:20	0:0	6	0
stmts	34:8	37:8	5	
water	34:8	0:0	6	{
call	35:12	35:82	6	msg_Err
arg	35:21	35:26	7	p_dec
water	35:21	0:0	8	p_dec
arg	35:28	35:61	7	"Kate header %d is corrupted: %d"
water	35:28	0:0	8	"Kate header %d is corrupted: %d"
arg	35:63	35:74	7	i_headeridx
water	35:63	0:0	8	i_headeridx
arg	35:76	35:82	7	i_ret
water	35:76	0:0	8	i_ret
water	35:83	0:0	6	;
return	36:12	36:31	6	VLC_EGENERIC
water	36:19	0:0	7	VLC_EGENERIC
water	37:8	0:0	6	}
if	39:8	42:8	4	(i_headeridx == 1)
cond	39:12	39:27	5	i_headeridx == 1
water	39:12	0:0	6	i_headeridx
op	39:24	0:0	6	==
water	39:27	0:0	6	1
stmts	40:8	42:8	5	
water	40:8	0:0	6	{
call	41:12	41:37	6	ParseKateComments
arg	41:31	41:37	7	p_dec
water	41:31	0:0	8	p_dec
water	41:38	0:0	6	;
water	42:8	0:0	6	}
water	43:4	0:0	4	}
if	45:4	57:4	2	(! p_sys -> b_packetizer)
cond	45:8	45:16	3	! p_sys -> b_packetizer
op	45:8	0:0	4	!
water	45:9	0:0	4	p_sys
op	45:14	0:0	4	->
water	45:16	0:0	4	b_packetizer
stmts	47:4	57:4	3	
water	47:4	0:0	4	{
call	49:8	49:79	4	msg_Dbg
arg	49:17	49:22	5	p_dec
water	49:17	0:0	6	p_dec
arg	49:24	49:79	5	"we have all headers, initialize libkate for decoding"
water	49:24	0:0	6	"we have all headers, initialize libkate for decoding"
water	49:80	0:0	4	;
water	50:8	0:0	4	i_ret
op	50:14	0:0	4	=
call	50:16	50:56	4	kate_decode_init
arg	50:34	50:43	5	&p_sys->k
op	50:34	0:0	6	&
water	50:35	0:0	6	p_sys
op	50:40	0:0	6	->
water	50:42	0:0	6	k
arg	50:45	50:56	5	&p_sys->ki
op	50:45	0:0	6	&
water	50:46	0:0	6	p_sys
op	50:51	0:0	6	->
water	50:53	0:0	6	ki
water	50:57	0:0	4	;
if	51:8	55:8	4	(i_ret < 0)
cond	51:12	51:20	5	i_ret < 0
water	51:12	0:0	6	i_ret
op	51:18	0:0	6	<
water	51:20	0:0	6	0
stmts	52:8	55:8	5	
water	52:8	0:0	6	{
call	53:12	53:80	6	msg_Err
arg	53:21	53:26	7	p_dec
water	53:21	0:0	8	p_dec
arg	53:28	53:72	7	"Kate failed to initialize for decoding: %d"
water	53:28	0:0	8	"Kate failed to initialize for decoding: %d"
arg	53:74	53:80	7	i_ret
water	53:74	0:0	8	i_ret
water	53:81	0:0	6	;
return	54:12	54:31	6	VLC_EGENERIC
water	54:19	0:0	7	VLC_EGENERIC
water	55:8	0:0	6	}
water	56:8	0:0	4	p_sys
op	56:13	0:0	4	->
water	56:15	0:0	4	b_ready
op	56:23	0:0	4	=
water	56:25	0:0	4	true
water	56:29	0:0	4	;
water	57:4	0:0	4	}
else	59:4	66:4	2
stmts	60:4	66:4	3	
water	60:4	0:0	4	{
water	61:8	0:0	4	p_dec
op	61:13	0:0	4	->
water	61:15	0:0	4	fmt_out
op	61:22	0:0	4	.
water	61:23	0:0	4	i_extra
op	61:31	0:0	4	=
water	61:33	0:0	4	p_dec
op	61:38	0:0	4	->
water	61:40	0:0	4	fmt_in
op	61:46	0:0	4	.
water	61:47	0:0	4	i_extra
water	61:54	0:0	4	;
water	62:8	0:0	4	p_dec
op	62:13	0:0	4	->
water	62:15	0:0	4	fmt_out
op	62:22	0:0	4	.
water	62:23	0:0	4	p_extra
op	62:31	0:0	4	=
call	62:33	63:73	4	xrealloc
arg	62:43	62:65	5	p_dec->fmt_out.p_extra
water	62:43	0:0	6	p_dec
op	62:48	0:0	6	->
water	62:50	0:0	6	fmt_out
op	62:57	0:0	6	.
water	62:58	0:0	6	p_extra
arg	63:50	63:73	5	p_dec->fmt_out.i_extra
water	63:50	0:0	6	p_dec
op	63:55	0:0	6	->
water	63:57	0:0	6	fmt_out
op	63:64	0:0	6	.
water	63:65	0:0	6	i_extra
water	63:74	0:0	4	;
call	64:8	65:62	4	memcpy
arg	64:16	64:38	5	p_dec->fmt_out.p_extra
water	64:16	0:0	6	p_dec
op	64:21	0:0	6	->
water	64:23	0:0	6	fmt_out
op	64:30	0:0	6	.
water	64:31	0:0	6	p_extra
arg	65:16	65:37	5	p_dec->fmt_in.p_extra
water	65:16	0:0	6	p_dec
op	65:21	0:0	6	->
water	65:23	0:0	6	fmt_in
op	65:29	0:0	6	.
water	65:30	0:0	6	p_extra
arg	65:39	65:62	5	p_dec->fmt_out.i_extra
water	65:39	0:0	6	p_dec
op	65:44	0:0	6	->
water	65:46	0:0	6	fmt_out
op	65:53	0:0	6	.
water	65:54	0:0	6	i_extra
water	65:63	0:0	4	;
water	66:4	0:0	4	}
return	68:4	68:22	2	VLC_SUCCESS
water	68:11	0:0	3	VLC_SUCCESS

func	2:0	38:0	0	static int	Control
params	2:18	0:0	1	
param	2:20	2:31	2	stream_t *	s
param	2:33	2:44	2	int	i_query
param	2:46	2:59	2	va_list	args
stmnts	0:0	37:22	1	
decl	4:4	4:34	2	stream_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	s
op	4:27	0:0	2	->
water	4:29	0:0	2	p_sys
switch	5:4	36:4	2	(i_query)
cond	5:12	5:12	3	i_query
water	5:12	0:0	4	i_query
stmts	6:4	36:4	3	
water	6:4	0:0	4	{
label	7:8	7:28	4	case STREAM_CAN_SEEK :
op	8:12	0:0	4	*
water	8:13	0:0	4	(
call	8:14	8:35	4	va_arg
arg	8:22	8:26	5	args
water	8:22	0:0	6	args
arg	8:28	8:35	5	bool*
water	8:28	0:0	6	bool
op	8:33	0:0	6	*
water	8:36	0:0	4	)
op	8:38	0:0	4	=
water	8:40	0:0	4	true
water	8:44	0:0	4	;
break	9:12	9:17	4	
label	10:8	10:32	4	case STREAM_CAN_FASTSEEK :
label	11:8	11:29	4	case STREAM_CAN_PAUSE :
label	12:8	12:36	4	case STREAM_CAN_CONTROL_PACE :
op	13:12	0:0	4	*
water	13:13	0:0	4	(
call	13:14	13:35	4	va_arg
arg	13:22	13:26	5	args
water	13:22	0:0	6	args
arg	13:28	13:35	5	bool*
water	13:28	0:0	6	bool
op	13:33	0:0	6	*
water	13:36	0:0	4	)
op	13:38	0:0	4	=
water	13:40	0:0	4	false
water	13:45	0:0	4	;
break	14:12	14:17	4	
label	15:8	15:32	4	case STREAM_GET_POSITION :
op	16:12	0:0	4	*
water	16:13	0:0	4	(
call	16:14	16:39	4	va_arg
arg	16:22	16:26	5	args
water	16:22	0:0	6	args
arg	16:28	16:39	5	uint64_t*
water	16:28	0:0	6	uint64_t
op	16:37	0:0	6	*
water	16:40	0:0	4	)
op	16:42	0:0	4	=
water	16:44	0:0	4	p_sys
op	16:49	0:0	4	->
water	16:51	0:0	4	playback
op	16:59	0:0	4	.
water	16:60	0:0	4	boffset
water	16:67	0:0	4	;
break	17:12	17:17	4	
label	18:8	18:32	4	case STREAM_SET_POSITION :
water	19:12	0:0	4	{
decl	20:16	20:63	4	uint64_t	pos
op	20:29	0:0	4	=
water	20:31	0:0	4	(
water	20:32	0:0	4	uint64_t
water	20:40	0:0	4	)
call	20:41	20:62	5	va_arg
arg	20:48	20:52	6	args
water	20:48	0:0	7	args
arg	20:54	20:62	6	uint64_t
water	20:54	0:0	7	uint64_t
decl	21:16	21:44	4	int	ret
op	21:24	0:0	4	=
call	21:26	21:43	5	chunk_Seek
arg	21:37	21:38	6	s
water	21:37	0:0	7	s
arg	21:40	21:43	6	pos
water	21:40	0:0	7	pos
if	22:16	23:25	4	(ret == VLC_SUCCESS)
cond	22:20	22:27	5	ret == VLC_SUCCESS
water	22:20	0:0	6	ret
op	22:24	0:0	6	==
water	22:27	0:0	6	VLC_SUCCESS
stmts	23:20	23:25	5	
break	23:20	23:25	6	
else	24:16	25:39	4
stmts	25:20	25:39	5	
return	25:20	25:39	6	VLC_EGENERIC
water	25:27	0:0	7	VLC_EGENERIC
water	26:12	0:0	4	}
label	27:8	27:28	4	case STREAM_GET_SIZE :
op	28:12	0:0	4	*
water	28:13	0:0	4	(
call	28:14	28:39	4	va_arg
arg	28:22	28:26	5	args
water	28:22	0:0	6	args
arg	28:28	28:39	5	uint64_t*
water	28:28	0:0	6	uint64_t
op	28:37	0:0	6	*
water	28:40	0:0	4	)
op	28:42	0:0	4	=
water	28:44	0:0	4	FAKE_STREAM_SIZE
water	28:60	0:0	4	;
break	29:12	29:17	4	
label	30:8	30:33	4	case STREAM_GET_PTS_DELAY :
call	31:12	31:36	4	*va_arg
arg	31:21	31:25	5	args
water	31:21	0:0	6	args
arg	31:27	31:36	5	int64_t*
water	31:27	0:0	6	int64_t
op	31:35	0:0	6	*
op	31:38	0:0	4	=
call	31:40	31:52	4	INT64_C
arg	31:48	31:52	5	1000
water	31:48	0:0	6	1000
call	31:54	32:55	4	*var_InheritInteger
arg	32:35	32:36	5	s
water	32:35	0:0	6	s
arg	32:38	32:55	5	"network-caching"
water	32:38	0:0	6	"network-caching"
water	32:56	0:0	4	;
break	33:13	33:18	4	
label	34:8	34:15	4	default :
return	35:12	35:31	4	VLC_EGENERIC
water	35:19	0:0	5	VLC_EGENERIC
water	36:4	0:0	4	}
return	37:4	37:22	2	VLC_SUCCESS
water	37:11	0:0	3	VLC_SUCCESS

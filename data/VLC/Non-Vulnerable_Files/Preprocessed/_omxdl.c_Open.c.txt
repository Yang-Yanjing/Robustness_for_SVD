func	2:0	82:0	0	static int	Open
params	2:16	0:0	1	
param	2:17	2:34	2	vlc_object_t *	obj
stmnts	0:0	81:27	1	
decl	4:4	4:38	2	filter_t	*filter
op	4:21	0:0	2	=
water	4:23	0:0	2	(
water	4:24	0:0	2	filter_t
op	4:33	0:0	2	*
water	4:34	0:0	2	)
water	4:35	0:0	2	obj
if	5:4	6:27	2	(filter -> fmt_in . video . orientation != filter -> fmt_out . video . orientation)
cond	5:8	5:66	3	filter -> fmt_in . video . orientation != filter -> fmt_out . video . orientation
water	5:8	0:0	4	filter
op	5:14	0:0	4	->
water	5:16	0:0	4	fmt_in
op	5:22	0:0	4	.
water	5:23	0:0	4	video
op	5:28	0:0	4	.
water	5:29	0:0	4	orientation
op	5:41	0:0	4	!=
water	5:44	0:0	4	filter
op	5:50	0:0	4	->
water	5:52	0:0	4	fmt_out
op	5:59	0:0	4	.
water	5:60	0:0	4	video
op	5:65	0:0	4	.
water	5:66	0:0	4	orientation
stmts	6:8	6:27	3	
return	6:8	6:27	4	VLC_EGENERIC
water	6:15	0:0	5	VLC_EGENERIC
if	7:4	9:31	2	(( filter -> fmt_in . video . i_width != filter -> fmt_out . video . i_width ) || ( filter -> fmt_in . video . i_height != filter -> fmt_out . video . i_height ))
cond	7:8	8:72	3	( filter -> fmt_in . video . i_width != filter -> fmt_out . video . i_width ) || ( filter -> fmt_in . video . i_height != filter -> fmt_out . video . i_height )
water	7:8	0:0	4	(
water	7:9	0:0	4	filter
op	7:15	0:0	4	->
water	7:17	0:0	4	fmt_in
op	7:23	0:0	4	.
water	7:24	0:0	4	video
op	7:29	0:0	4	.
water	7:30	0:0	4	i_width
op	7:38	0:0	4	!=
water	7:41	0:0	4	filter
op	7:47	0:0	4	->
water	7:49	0:0	4	fmt_out
op	7:56	0:0	4	.
water	7:57	0:0	4	video
op	7:62	0:0	4	.
water	7:63	0:0	4	i_width
water	7:70	0:0	4	)
op	8:5	0:0	4	||
water	8:8	0:0	4	(
water	8:9	0:0	4	filter
op	8:15	0:0	4	->
water	8:17	0:0	4	fmt_in
op	8:23	0:0	4	.
water	8:24	0:0	4	video
op	8:29	0:0	4	.
water	8:30	0:0	4	i_height
op	8:39	0:0	4	!=
water	8:42	0:0	4	filter
op	8:48	0:0	4	->
water	8:50	0:0	4	fmt_out
op	8:57	0:0	4	.
water	8:58	0:0	4	video
op	8:63	0:0	4	.
water	8:64	0:0	4	i_height
water	8:72	0:0	4	)
stmts	9:8	9:31	3	
return	9:8	9:31	4	OpenScaler(obj)
call	9:15	9:30	5	OpenScaler
arg	9:27	9:30	6	obj
water	9:27	0:0	7	obj
switch	10:4	79:4	2	(filter -> fmt_in . video . i_chroma)
cond	10:12	10:33	3	filter -> fmt_in . video . i_chroma
water	10:12	0:0	4	filter
op	10:18	0:0	4	->
water	10:20	0:0	4	fmt_in
op	10:26	0:0	4	.
water	10:27	0:0	4	video
op	10:32	0:0	4	.
water	10:33	0:0	4	i_chroma
stmts	11:4	79:4	3	
water	11:4	0:0	4	{
label	12:8	12:27	4	case VLC_CODEC_I420 :
switch	13:12	20:12	4	(filter -> fmt_out . video . i_chroma)
cond	13:20	13:42	5	filter -> fmt_out . video . i_chroma
water	13:20	0:0	6	filter
op	13:26	0:0	6	->
water	13:28	0:0	6	fmt_out
op	13:35	0:0	6	.
water	13:36	0:0	6	video
op	13:41	0:0	6	.
water	13:42	0:0	6	i_chroma
stmts	14:12	20:12	5	
water	14:12	0:0	6	{
label	15:16	15:36	6	case VLC_CODEC_RGB16 :
if	16:20	17:43	6	(FixRV16 (& filter -> fmt_out . video ))
cond	16:24	16:55	7	FixRV16 (& filter -> fmt_out . video )
call	16:24	16:55	8	FixRV16
arg	16:33	16:55	9	&filter->fmt_out.video
op	16:33	0:0	10	&
water	16:34	0:0	10	filter
op	16:40	0:0	10	->
water	16:42	0:0	10	fmt_out
op	16:49	0:0	10	.
water	16:50	0:0	10	video
stmts	17:24	17:43	7	
return	17:24	17:43	8	VLC_EGENERIC
water	17:31	0:0	9	VLC_EGENERIC
water	18:20	0:0	6	filter
op	18:26	0:0	6	->
water	18:28	0:0	6	pf_video_filter
op	18:44	0:0	6	=
water	18:46	0:0	6	I420_RV16_Filter
water	18:62	0:0	6	;
return	19:20	19:38	6	VLC_SUCCESS
water	19:27	0:0	7	VLC_SUCCESS
water	20:12	0:0	6	}
break	21:12	21:17	4	
label	22:8	22:27	4	case VLC_CODEC_YV12 :
switch	23:12	30:12	4	(filter -> fmt_out . video . i_chroma)
cond	23:20	23:42	5	filter -> fmt_out . video . i_chroma
water	23:20	0:0	6	filter
op	23:26	0:0	6	->
water	23:28	0:0	6	fmt_out
op	23:35	0:0	6	.
water	23:36	0:0	6	video
op	23:41	0:0	6	.
water	23:42	0:0	6	i_chroma
stmts	24:12	30:12	5	
water	24:12	0:0	6	{
label	25:16	25:36	6	case VLC_CODEC_RGB16 :
if	26:20	27:43	6	(FixRV16 (& filter -> fmt_out . video ))
cond	26:24	26:55	7	FixRV16 (& filter -> fmt_out . video )
call	26:24	26:55	8	FixRV16
arg	26:33	26:55	9	&filter->fmt_out.video
op	26:33	0:0	10	&
water	26:34	0:0	10	filter
op	26:40	0:0	10	->
water	26:42	0:0	10	fmt_out
op	26:49	0:0	10	.
water	26:50	0:0	10	video
stmts	27:24	27:43	7	
return	27:24	27:43	8	VLC_EGENERIC
water	27:31	0:0	9	VLC_EGENERIC
water	28:20	0:0	6	filter
op	28:26	0:0	6	->
water	28:28	0:0	6	pf_video_filter
op	28:44	0:0	6	=
water	28:46	0:0	6	YV12_RV16_Filter
water	28:62	0:0	6	;
return	29:20	29:38	6	VLC_SUCCESS
water	29:27	0:0	7	VLC_SUCCESS
water	30:12	0:0	6	}
break	31:12	31:17	4	
label	32:8	32:27	4	case VLC_CODEC_I422 :
switch	33:12	41:12	4	(filter -> fmt_out . video . i_chroma)
cond	33:20	33:42	5	filter -> fmt_out . video . i_chroma
water	33:20	0:0	6	filter
op	33:26	0:0	6	->
water	33:28	0:0	6	fmt_out
op	33:35	0:0	6	.
water	33:36	0:0	6	video
op	33:41	0:0	6	.
water	33:42	0:0	6	i_chroma
stmts	34:12	41:12	5	
water	34:12	0:0	6	{
label	35:16	35:35	6	case VLC_CODEC_I420 :
water	36:20	0:0	6	filter
op	36:26	0:0	6	->
water	36:28	0:0	6	pf_video_filter
op	36:44	0:0	6	=
water	36:46	0:0	6	I422_I420_Filter
water	36:62	0:0	6	;
return	37:20	37:38	6	VLC_SUCCESS
water	37:27	0:0	7	VLC_SUCCESS
label	38:16	38:35	6	case VLC_CODEC_YV12 :
water	39:20	0:0	6	filter
op	39:26	0:0	6	->
water	39:28	0:0	6	pf_video_filter
op	39:44	0:0	6	=
water	39:46	0:0	6	I422_YV12_Filter
water	39:62	0:0	6	;
return	40:20	40:38	6	VLC_SUCCESS
water	40:27	0:0	7	VLC_SUCCESS
water	41:12	0:0	6	}
break	42:12	42:17	4	
label	43:8	43:27	4	case VLC_CODEC_I444 :
switch	44:12	51:12	4	(filter -> fmt_out . video . i_chroma)
cond	44:20	44:42	5	filter -> fmt_out . video . i_chroma
water	44:20	0:0	6	filter
op	44:26	0:0	6	->
water	44:28	0:0	6	fmt_out
op	44:35	0:0	6	.
water	44:36	0:0	6	video
op	44:41	0:0	6	.
water	44:42	0:0	6	i_chroma
stmts	45:12	51:12	5	
water	45:12	0:0	6	{
label	46:16	46:36	6	case VLC_CODEC_RGB16 :
if	47:20	48:43	6	(FixRV16 (& filter -> fmt_out . video ))
cond	47:24	47:55	7	FixRV16 (& filter -> fmt_out . video )
call	47:24	47:55	8	FixRV16
arg	47:33	47:55	9	&filter->fmt_out.video
op	47:33	0:0	10	&
water	47:34	0:0	10	filter
op	47:40	0:0	10	->
water	47:42	0:0	10	fmt_out
op	47:49	0:0	10	.
water	47:50	0:0	10	video
stmts	48:24	48:43	7	
return	48:24	48:43	8	VLC_EGENERIC
water	48:31	0:0	9	VLC_EGENERIC
water	49:20	0:0	6	filter
op	49:26	0:0	6	->
water	49:28	0:0	6	pf_video_filter
op	49:44	0:0	6	=
water	49:46	0:0	6	I444_RV16_Filter
water	49:62	0:0	6	;
return	50:20	50:38	6	VLC_SUCCESS
water	50:27	0:0	7	VLC_SUCCESS
water	51:12	0:0	6	}
return	52:12	52:31	4	VLC_EGENERIC
water	52:19	0:0	5	VLC_EGENERIC
label	53:8	53:27	4	case VLC_CODEC_YUYV :
switch	54:12	66:12	4	(filter -> fmt_out . video . i_chroma)
cond	54:20	54:42	5	filter -> fmt_out . video . i_chroma
water	54:20	0:0	6	filter
op	54:26	0:0	6	->
water	54:28	0:0	6	fmt_out
op	54:35	0:0	6	.
water	54:36	0:0	6	video
op	54:41	0:0	6	.
water	54:42	0:0	6	i_chroma
stmts	55:12	66:12	5	
water	55:12	0:0	6	{
label	56:16	56:36	6	case VLC_CODEC_RGB24 :
if	57:20	58:43	6	(FixRV24 (& filter -> fmt_out . video ))
cond	57:24	57:55	7	FixRV24 (& filter -> fmt_out . video )
call	57:24	57:55	8	FixRV24
arg	57:33	57:55	9	&filter->fmt_out.video
op	57:33	0:0	10	&
water	57:34	0:0	10	filter
op	57:40	0:0	10	->
water	57:42	0:0	10	fmt_out
op	57:49	0:0	10	.
water	57:50	0:0	10	video
stmts	58:24	58:43	7	
return	58:24	58:43	8	VLC_EGENERIC
water	58:31	0:0	9	VLC_EGENERIC
water	59:20	0:0	6	filter
op	59:26	0:0	6	->
water	59:28	0:0	6	pf_video_filter
op	59:44	0:0	6	=
water	59:46	0:0	6	YUYV_RV24_Filter
water	59:62	0:0	6	;
return	60:20	60:38	6	VLC_SUCCESS
water	60:27	0:0	7	VLC_SUCCESS
label	61:16	61:36	6	case VLC_CODEC_RGB16 :
if	62:20	63:43	6	(FixRV16 (& filter -> fmt_out . video ))
cond	62:24	62:55	7	FixRV16 (& filter -> fmt_out . video )
call	62:24	62:55	8	FixRV16
arg	62:33	62:55	9	&filter->fmt_out.video
op	62:33	0:0	10	&
water	62:34	0:0	10	filter
op	62:40	0:0	10	->
water	62:42	0:0	10	fmt_out
op	62:49	0:0	10	.
water	62:50	0:0	10	video
stmts	63:24	63:43	7	
return	63:24	63:43	8	VLC_EGENERIC
water	63:31	0:0	9	VLC_EGENERIC
water	64:20	0:0	6	filter
op	64:26	0:0	6	->
water	64:28	0:0	6	pf_video_filter
op	64:44	0:0	6	=
water	64:46	0:0	6	YUYV_RV16_Filter
water	64:62	0:0	6	;
return	65:20	65:38	6	VLC_SUCCESS
water	65:27	0:0	7	VLC_SUCCESS
water	66:12	0:0	6	}
return	67:12	67:31	4	VLC_EGENERIC
water	67:19	0:0	5	VLC_EGENERIC
label	68:8	68:27	4	case VLC_CODEC_UYVY :
switch	69:12	77:12	4	(filter -> fmt_out . video . i_chroma)
cond	69:20	69:42	5	filter -> fmt_out . video . i_chroma
water	69:20	0:0	6	filter
op	69:26	0:0	6	->
water	69:28	0:0	6	fmt_out
op	69:35	0:0	6	.
water	69:36	0:0	6	video
op	69:41	0:0	6	.
water	69:42	0:0	6	i_chroma
stmts	70:12	77:12	5	
water	70:12	0:0	6	{
label	71:16	71:35	6	case VLC_CODEC_I420 :
water	72:20	0:0	6	filter
op	72:26	0:0	6	->
water	72:28	0:0	6	pf_video_filter
op	72:44	0:0	6	=
water	72:46	0:0	6	UYVY_I420_Filter
water	72:62	0:0	6	;
return	73:20	73:38	6	VLC_SUCCESS
water	73:27	0:0	7	VLC_SUCCESS
label	74:16	74:35	6	case VLC_CODEC_YV12 :
water	75:20	0:0	6	filter
op	75:26	0:0	6	->
water	75:28	0:0	6	pf_video_filter
op	75:44	0:0	6	=
water	75:46	0:0	6	UYVY_YV12_Filter
water	75:62	0:0	6	;
return	76:20	76:38	6	VLC_SUCCESS
water	76:27	0:0	7	VLC_SUCCESS
water	77:12	0:0	6	}
return	78:12	78:31	4	VLC_EGENERIC
water	78:19	0:0	5	VLC_EGENERIC
water	79:4	0:0	4	}
return	81:4	81:27	2	OpenScaler(obj)
call	81:11	81:26	3	OpenScaler
arg	81:23	81:26	4	obj
water	81:23	0:0	5	obj

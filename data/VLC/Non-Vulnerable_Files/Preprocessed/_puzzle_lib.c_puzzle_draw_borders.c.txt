func	2:0	23:0	0	void	puzzle_draw_borders
params	2:24	0:0	1	
param	2:26	2:44	2	filter_t *	p_filter
param	2:46	2:65	2	picture_t *	p_pic_in
param	2:67	2:87	2	picture_t *	p_pic_out
stmnts	0:0	22:4	1	
decl	4:4	4:41	2	filter_sys_t	*p_sys
op	4:24	0:0	2	=
water	4:26	0:0	2	p_filter
op	4:34	0:0	2	->
water	4:36	0:0	2	p_sys
for	5:4	22:4	2	( uint8_t i_plane = 0 ;i_plane < p_pic_out -> i_planes;i_plane ++)
forinit	0:0	5:28	3	 uint8_t i_plane = 0 ;
decl	5:9	5:28	4	uint8_t	i_plane
op	5:25	0:0	4	=
water	5:27	0:0	4	0
cond	5:30	5:51	3	i_plane < p_pic_out -> i_planes
water	5:30	0:0	4	i_plane
op	5:38	0:0	4	<
water	5:40	0:0	4	p_pic_out
op	5:49	0:0	4	->
water	5:51	0:0	4	i_planes
forexpr	5:61	5:68	3	i_plane ++
water	5:61	0:0	4	i_plane
op	5:68	0:0	4	++
stmts	5:73	22:4	3	
water	5:73	0:0	4	{
decl	6:8	6:78	4	const int32_t	i_in_pitch
op	6:38	0:0	4	=
water	6:40	0:0	4	p_sys
op	6:45	0:0	4	->
water	6:47	0:0	4	ps_pict_planes
op	6:61	0:0	4	[
water	6:62	0:0	4	i_plane
op	6:69	0:0	4	]
op	6:70	0:0	4	.
water	6:71	0:0	4	i_pitch
decl	7:8	7:78	4	const int32_t	i_out_pitch
op	7:38	0:0	4	=
water	7:40	0:0	4	p_sys
op	7:45	0:0	4	->
water	7:47	0:0	4	ps_desk_planes
op	7:61	0:0	4	[
water	7:62	0:0	4	i_plane
op	7:69	0:0	4	]
op	7:70	0:0	4	.
water	7:71	0:0	4	i_pitch
decl	8:8	8:78	4	const int32_t	i_lines
op	8:38	0:0	4	=
water	8:40	0:0	4	p_sys
op	8:45	0:0	4	->
water	8:47	0:0	4	ps_desk_planes
op	8:61	0:0	4	[
water	8:62	0:0	4	i_plane
op	8:69	0:0	4	]
op	8:70	0:0	4	.
water	8:71	0:0	4	i_lines
decl	9:8	9:86	4	const int32_t	i_visible_pitch
op	9:38	0:0	4	=
water	9:40	0:0	4	p_sys
op	9:45	0:0	4	->
water	9:47	0:0	4	ps_desk_planes
op	9:61	0:0	4	[
water	9:62	0:0	4	i_plane
op	9:69	0:0	4	]
op	9:70	0:0	4	.
water	9:71	0:0	4	i_visible_pitch
decl	10:8	10:132	4	const int32_t	i_border_pitch
op	10:38	0:0	4	=
water	10:40	0:0	4	p_sys
op	10:45	0:0	4	->
water	10:47	0:0	4	ps_desk_planes
op	10:61	0:0	4	[
water	10:62	0:0	4	i_plane
op	10:69	0:0	4	]
op	10:70	0:0	4	.
water	10:71	0:0	4	i_border_width
op	10:86	0:0	4	*
water	10:88	0:0	4	p_sys
op	10:93	0:0	4	->
water	10:95	0:0	4	ps_desk_planes
op	10:109	0:0	4	[
water	10:110	0:0	4	i_plane
op	10:117	0:0	4	]
op	10:118	0:0	4	.
water	10:119	0:0	4	i_pixel_pitch
decl	11:8	11:85	4	const int32_t	i_border_lines
op	11:38	0:0	4	=
water	11:40	0:0	4	p_sys
op	11:45	0:0	4	->
water	11:47	0:0	4	ps_desk_planes
op	11:61	0:0	4	[
water	11:62	0:0	4	i_plane
op	11:69	0:0	4	]
op	11:70	0:0	4	.
water	11:71	0:0	4	i_border_lines
decl	12:8	12:54	4	uint8_t	*p_src
op	12:23	0:0	4	=
water	12:25	0:0	4	p_pic_in
op	12:33	0:0	4	->
water	12:35	0:0	4	p
op	12:36	0:0	4	[
water	12:37	0:0	4	i_plane
op	12:44	0:0	4	]
op	12:45	0:0	4	.
water	12:46	0:0	4	p_pixels
decl	13:8	13:55	4	uint8_t	*p_dst
op	13:23	0:0	4	=
water	13:25	0:0	4	p_pic_out
op	13:34	0:0	4	->
water	13:36	0:0	4	p
op	13:37	0:0	4	[
water	13:38	0:0	4	i_plane
op	13:45	0:0	4	]
op	13:46	0:0	4	.
water	13:47	0:0	4	p_pixels
for	14:8	15:85	4	( int32_t y = 0 ;y < i_border_lines;y ++)
forinit	0:0	14:27	5	 int32_t y = 0 ;
decl	14:13	14:27	6	int32_t	y
op	14:23	0:0	6	=
water	14:25	0:0	6	0
cond	14:29	14:33	5	y < i_border_lines
water	14:29	0:0	6	y
op	14:31	0:0	6	<
water	14:33	0:0	6	i_border_lines
forexpr	14:49	14:50	5	y ++
water	14:49	0:0	6	y
op	14:50	0:0	6	++
stmts	15:12	15:85	5	
call	15:12	15:84	6	memcpy
arg	15:20	15:43	7	&p_dst[y*i_out_pitch]
op	15:20	0:0	8	&
water	15:21	0:0	8	p_dst
op	15:26	0:0	8	[
water	15:27	0:0	8	y
op	15:29	0:0	8	*
water	15:31	0:0	8	i_out_pitch
op	15:42	0:0	8	]
arg	15:45	15:67	7	&p_src[y*i_in_pitch]
op	15:45	0:0	8	&
water	15:46	0:0	8	p_src
op	15:51	0:0	8	[
water	15:52	0:0	8	y
op	15:54	0:0	8	*
water	15:56	0:0	8	i_in_pitch
op	15:66	0:0	8	]
arg	15:69	15:84	7	i_visible_pitch
water	15:69	0:0	8	i_visible_pitch
water	15:85	0:0	6	;
for	16:8	17:85	4	( int32_t y = i_lines - i_border_lines ;y < i_lines;y ++)
forinit	0:0	16:50	5	 int32_t y = i_lines - i_border_lines ;
decl	16:13	16:50	6	int32_t	y
op	16:23	0:0	6	=
water	16:25	0:0	6	i_lines
op	16:33	0:0	6	-
water	16:35	0:0	6	i_border_lines
cond	16:52	16:56	5	y < i_lines
water	16:52	0:0	6	y
op	16:54	0:0	6	<
water	16:56	0:0	6	i_lines
forexpr	16:65	16:66	5	y ++
water	16:65	0:0	6	y
op	16:66	0:0	6	++
stmts	17:12	17:85	5	
call	17:12	17:84	6	memcpy
arg	17:20	17:43	7	&p_dst[y*i_out_pitch]
op	17:20	0:0	8	&
water	17:21	0:0	8	p_dst
op	17:26	0:0	8	[
water	17:27	0:0	8	y
op	17:29	0:0	8	*
water	17:31	0:0	8	i_out_pitch
op	17:42	0:0	8	]
arg	17:45	17:67	7	&p_src[y*i_in_pitch]
op	17:45	0:0	8	&
water	17:46	0:0	8	p_src
op	17:51	0:0	8	[
water	17:52	0:0	8	y
op	17:54	0:0	8	*
water	17:56	0:0	8	i_in_pitch
op	17:66	0:0	8	]
arg	17:69	17:84	7	i_visible_pitch
water	17:69	0:0	8	i_visible_pitch
water	17:85	0:0	6	;
for	18:8	21:8	4	( int32_t y = i_border_lines ;y < i_lines - i_border_lines;y ++)
forinit	0:0	18:40	5	 int32_t y = i_border_lines ;
decl	18:13	18:40	6	int32_t	y
op	18:23	0:0	6	=
water	18:25	0:0	6	i_border_lines
cond	18:42	18:56	5	y < i_lines - i_border_lines
water	18:42	0:0	6	y
op	18:44	0:0	6	<
water	18:46	0:0	6	i_lines
op	18:54	0:0	6	-
water	18:56	0:0	6	i_border_lines
forexpr	18:72	18:73	5	y ++
water	18:72	0:0	6	y
op	18:73	0:0	6	++
stmts	18:77	21:8	5	
water	18:77	0:0	6	{
call	19:12	19:83	6	memcpy
arg	19:20	19:43	7	&p_dst[y*i_out_pitch]
op	19:20	0:0	8	&
water	19:21	0:0	8	p_dst
op	19:26	0:0	8	[
water	19:27	0:0	8	y
op	19:29	0:0	8	*
water	19:31	0:0	8	i_out_pitch
op	19:42	0:0	8	]
arg	19:45	19:67	7	&p_src[y*i_in_pitch]
op	19:45	0:0	8	&
water	19:46	0:0	8	p_src
op	19:51	0:0	8	[
water	19:52	0:0	8	y
op	19:54	0:0	8	*
water	19:56	0:0	8	i_in_pitch
op	19:66	0:0	8	]
arg	19:69	19:83	7	i_border_pitch
water	19:69	0:0	8	i_border_pitch
water	19:84	0:0	6	;
call	20:12	20:153	6	memcpy
arg	20:20	20:78	7	&p_dst[y*i_out_pitch+i_visible_pitch-i_border_pitch]
op	20:20	0:0	8	&
water	20:21	0:0	8	p_dst
op	20:26	0:0	8	[
water	20:27	0:0	8	y
op	20:29	0:0	8	*
water	20:31	0:0	8	i_out_pitch
op	20:43	0:0	8	+
water	20:45	0:0	8	i_visible_pitch
op	20:61	0:0	8	-
water	20:63	0:0	8	i_border_pitch
op	20:77	0:0	8	]
arg	20:80	20:137	7	&p_src[y*i_in_pitch+i_visible_pitch-i_border_pitch]
op	20:80	0:0	8	&
water	20:81	0:0	8	p_src
op	20:86	0:0	8	[
water	20:87	0:0	8	y
op	20:89	0:0	8	*
water	20:91	0:0	8	i_in_pitch
op	20:102	0:0	8	+
water	20:104	0:0	8	i_visible_pitch
op	20:120	0:0	8	-
water	20:122	0:0	8	i_border_pitch
op	20:136	0:0	8	]
arg	20:139	20:153	7	i_border_pitch
water	20:139	0:0	8	i_border_pitch
water	20:154	0:0	6	;
water	21:8	0:0	6	}
water	22:4	0:0	4	}

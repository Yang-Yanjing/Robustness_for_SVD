func	2:0	46:0	0	static void	MuxWritePackHeader
params	2:30	0:0	1	
param	2:32	2:49	2	sout_mux_t *	p_mux
param	2:51	2:66	2	block_t * *	p_buf
param	3:32	3:46	2	mtime_t	i_dts
stmnts	0:0	45:37	1	
decl	5:4	5:40	2	sout_mux_sys_t	*p_sys
op	5:26	0:0	2	=
water	5:28	0:0	2	p_mux
op	5:33	0:0	2	->
water	5:35	0:0	2	p_sys
decl	6:4	6:22	2	bits_buffer_t	bits
decl	7:4	7:18	2	block_t	*p_hdr
decl	8:4	8:17	2	mtime_t	i_scr
decl	9:4	9:18	2	int	i_mux_rate
water	10:4	0:0	2	i_scr
op	10:10	0:0	2	=
water	10:12	0:0	2	(
water	10:13	0:0	2	i_dts
op	10:19	0:0	2	-
water	10:21	0:0	2	p_sys
op	10:26	0:0	2	->
water	10:28	0:0	2	i_dts_delay
water	10:39	0:0	2	)
op	10:41	0:0	2	*
water	10:43	0:0	2	9
op	10:45	0:0	2	/
water	10:47	0:0	2	100
water	10:50	0:0	2	;
water	11:4	0:0	2	p_hdr
op	11:10	0:0	2	=
call	11:12	11:28	2	block_Alloc
arg	11:25	11:28	3	18
water	11:25	0:0	4	18
water	11:29	0:0	2	;
water	12:4	0:0	2	p_hdr
op	12:9	0:0	2	->
water	12:11	0:0	2	i_pts
op	12:17	0:0	2	=
water	12:19	0:0	2	p_hdr
op	12:24	0:0	2	->
water	12:26	0:0	2	i_dts
op	12:32	0:0	2	=
water	12:34	0:0	2	i_dts
water	12:39	0:0	2	;
call	13:4	13:47	2	bits_initwrite
arg	13:20	13:25	3	&bits
op	13:20	0:0	4	&
water	13:21	0:0	4	bits
arg	13:27	13:29	3	14
water	13:27	0:0	4	14
arg	13:31	13:47	3	p_hdr->p_buffer
water	13:31	0:0	4	p_hdr
op	13:36	0:0	4	->
water	13:38	0:0	4	p_buffer
water	13:48	0:0	2	;
call	14:4	14:34	2	bits_write
arg	14:16	14:21	3	&bits
op	14:16	0:0	4	&
water	14:17	0:0	4	bits
arg	14:23	14:25	3	32
water	14:23	0:0	4	32
arg	14:27	14:34	3	0x01ba
water	14:27	0:0	4	0
water	14:28	0:0	4	x01ba
water	14:35	0:0	2	;
water	16:4	0:0	2	i_mux_rate
op	16:15	0:0	2	=
water	16:17	0:0	2	(
water	16:18	0:0	2	p_sys
op	16:23	0:0	2	->
water	16:25	0:0	2	i_instant_bitrate
op	16:43	0:0	2	+
water	16:45	0:0	2	8
op	16:47	0:0	2	*
water	16:49	0:0	2	50
op	16:52	0:0	2	-
water	16:54	0:0	2	1
water	16:56	0:0	2	)
op	16:58	0:0	2	/
water	16:60	0:0	2	(
water	16:61	0:0	2	8
op	16:63	0:0	2	*
water	16:65	0:0	2	50
water	16:67	0:0	2	)
water	16:68	0:0	2	;
if	17:4	20:4	2	(p_sys -> b_mpeg2)
cond	17:8	17:15	3	p_sys -> b_mpeg2
water	17:8	0:0	4	p_sys
op	17:13	0:0	4	->
water	17:15	0:0	4	b_mpeg2
stmts	18:4	20:4	3	
water	18:4	0:0	4	{
call	19:8	19:35	4	bits_write
arg	19:20	19:25	5	&bits
op	19:20	0:0	6	&
water	19:21	0:0	6	bits
arg	19:27	19:28	5	2
water	19:27	0:0	6	2
arg	19:30	19:35	5	0x01
water	19:30	0:0	6	0
water	19:31	0:0	6	x01
water	19:36	0:0	4	;
water	20:4	0:0	4	}
else	21:4	24:4	2
stmts	22:4	24:4	3	
water	22:4	0:0	4	{
call	23:8	23:35	4	bits_write
arg	23:20	23:25	5	&bits
op	23:20	0:0	6	&
water	23:21	0:0	6	bits
arg	23:27	23:28	5	4
water	23:27	0:0	6	4
arg	23:30	23:35	5	0x02
water	23:30	0:0	6	0
water	23:31	0:0	6	x02
water	23:36	0:0	4	;
water	24:4	0:0	4	}
call	25:4	25:47	2	bits_write
arg	25:16	25:21	3	&bits
op	25:16	0:0	4	&
water	25:17	0:0	4	bits
arg	25:23	25:24	3	3
water	25:23	0:0	4	3
arg	25:26	25:47	3	(i_scr>>30)&0x07
water	25:26	0:0	4	(
water	25:28	0:0	4	i_scr
op	25:34	0:0	4	>>
water	25:37	0:0	4	30
water	25:40	0:0	4	)
op	25:41	0:0	4	&
water	25:42	0:0	4	0
water	25:43	0:0	4	x07
water	25:48	0:0	2	;
call	26:4	26:29	2	bits_write
arg	26:16	26:21	3	&bits
op	26:16	0:0	4	&
water	26:17	0:0	4	bits
arg	26:23	26:24	3	1
water	26:23	0:0	4	1
arg	26:27	26:29	3	1
water	26:27	0:0	4	1
water	26:30	0:0	2	;
call	27:4	27:50	2	bits_write
arg	27:16	27:21	3	&bits
op	27:16	0:0	4	&
water	27:17	0:0	4	bits
arg	27:23	27:25	3	15
water	27:23	0:0	4	15
arg	27:27	27:50	3	(i_scr>>15)&0x7fff
water	27:27	0:0	4	(
water	27:29	0:0	4	i_scr
op	27:35	0:0	4	>>
water	27:38	0:0	4	15
water	27:41	0:0	4	)
op	27:42	0:0	4	&
water	27:43	0:0	4	0
water	27:44	0:0	4	x7fff
water	27:51	0:0	2	;
call	28:4	28:29	2	bits_write
arg	28:16	28:21	3	&bits
op	28:16	0:0	4	&
water	28:17	0:0	4	bits
arg	28:23	28:24	3	1
water	28:23	0:0	4	1
arg	28:27	28:29	3	1
water	28:27	0:0	4	1
water	28:30	0:0	2	;
call	29:4	29:40	2	bits_write
arg	29:16	29:21	3	&bits
op	29:16	0:0	4	&
water	29:17	0:0	4	bits
arg	29:23	29:25	3	15
water	29:23	0:0	4	15
arg	29:27	29:40	3	i_scr&0x7fff
water	29:27	0:0	4	i_scr
op	29:32	0:0	4	&
water	29:33	0:0	4	0
water	29:34	0:0	4	x7fff
water	29:41	0:0	2	;
call	30:4	30:29	2	bits_write
arg	30:16	30:21	3	&bits
op	30:16	0:0	4	&
water	30:17	0:0	4	bits
arg	30:23	30:24	3	1
water	30:23	0:0	4	1
arg	30:27	30:29	3	1
water	30:27	0:0	4	1
water	30:30	0:0	2	;
if	31:4	34:4	2	(p_sys -> b_mpeg2)
cond	31:8	31:15	3	p_sys -> b_mpeg2
water	31:8	0:0	4	p_sys
op	31:13	0:0	4	->
water	31:15	0:0	4	b_mpeg2
stmts	32:4	34:4	3	
water	32:4	0:0	4	{
call	33:8	33:33	4	bits_write
arg	33:20	33:25	5	&bits
op	33:20	0:0	6	&
water	33:21	0:0	6	bits
arg	33:27	33:28	5	9
water	33:27	0:0	6	9
arg	33:31	33:33	5	0
water	33:31	0:0	6	0
water	33:34	0:0	4	;
water	34:4	0:0	4	}
call	35:4	35:29	2	bits_write
arg	35:16	35:21	3	&bits
op	35:16	0:0	4	&
water	35:17	0:0	4	bits
arg	35:23	35:24	3	1
water	35:23	0:0	4	1
arg	35:27	35:29	3	1
water	35:27	0:0	4	1
water	35:30	0:0	2	;
call	36:4	36:37	2	bits_write
arg	36:16	36:21	3	&bits
op	36:16	0:0	4	&
water	36:17	0:0	4	bits
arg	36:23	36:25	3	22
water	36:23	0:0	4	22
arg	36:27	36:37	3	i_mux_rate
water	36:27	0:0	4	i_mux_rate
water	36:38	0:0	2	;
call	37:4	37:29	2	bits_write
arg	37:16	37:21	3	&bits
op	37:16	0:0	4	&
water	37:17	0:0	4	bits
arg	37:23	37:24	3	1
water	37:23	0:0	4	1
arg	37:27	37:29	3	1
water	37:27	0:0	4	1
water	37:30	0:0	2	;
if	38:4	43:4	2	(p_sys -> b_mpeg2)
cond	38:8	38:15	3	p_sys -> b_mpeg2
water	38:8	0:0	4	p_sys
op	38:13	0:0	4	->
water	38:15	0:0	4	b_mpeg2
stmts	39:4	43:4	3	
water	39:4	0:0	4	{
call	40:8	40:33	4	bits_write
arg	40:20	40:25	5	&bits
op	40:20	0:0	6	&
water	40:21	0:0	6	bits
arg	40:27	40:28	5	1
water	40:27	0:0	6	1
arg	40:31	40:33	5	1
water	40:31	0:0	6	1
water	40:34	0:0	4	;
call	41:8	41:36	4	bits_write
arg	41:20	41:25	5	&bits
op	41:20	0:0	6	&
water	41:21	0:0	6	bits
arg	41:27	41:28	5	5
water	41:27	0:0	6	5
arg	41:31	41:36	5	0x1f
water	41:31	0:0	6	0
water	41:32	0:0	6	x1f
water	41:37	0:0	4	;
call	42:8	42:33	4	bits_write
arg	42:20	42:25	5	&bits
op	42:20	0:0	6	&
water	42:21	0:0	6	bits
arg	42:27	42:28	5	3
water	42:27	0:0	6	3
arg	42:31	42:33	5	0
water	42:31	0:0	6	0
water	42:34	0:0	4	;
water	43:4	0:0	4	}
water	44:4	0:0	2	p_hdr
op	44:9	0:0	2	->
water	44:11	0:0	2	i_buffer
op	44:20	0:0	2	=
water	44:22	0:0	2	p_sys
op	44:27	0:0	2	->
water	44:29	0:0	2	b_mpeg2
water	44:37	0:0	2	?
water	44:39	0:0	2	14
water	44:41	0:0	2	:
water	44:43	0:0	2	12
water	44:45	0:0	2	;
call	45:4	45:36	2	block_ChainAppend
arg	45:23	45:28	3	p_buf
water	45:23	0:0	4	p_buf
arg	45:30	45:36	3	p_hdr
water	45:30	0:0	4	p_hdr
water	45:37	0:0	2	;

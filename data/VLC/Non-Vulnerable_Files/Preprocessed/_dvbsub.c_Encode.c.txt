func	2:0	93:0	0	static block_t *	Encode
params	2:22	0:0	1	
param	2:24	2:40	2	encoder_t *	p_enc
param	2:42	2:65	2	subpicture_t *	p_subpic
stmnts	0:0	92:18	1	
decl	4:4	4:31	2	subpicture_t	*p_temp
op	4:25	0:0	2	=
water	4:27	0:0	2	NULL
decl	5:4	5:40	2	subpicture_region_t	*p_region
op	5:34	0:0	2	=
water	5:36	0:0	2	NULL
decl	6:4	6:25	2	bs_t	bits
water	6:13	0:0	2	,
decl	6:4	6:25	2	bs_t	*s
op	6:18	0:0	2	=
op	6:20	0:0	2	&
water	6:21	0:0	2	bits
decl	7:4	7:20	2	block_t	*p_block
if	8:4	8:54	2	(! p_subpic || ! p_subpic -> p_region)
cond	8:8	8:32	3	! p_subpic || ! p_subpic -> p_region
op	8:8	0:0	4	!
water	8:9	0:0	4	p_subpic
op	8:18	0:0	4	||
op	8:21	0:0	4	!
water	8:22	0:0	4	p_subpic
op	8:30	0:0	4	->
water	8:32	0:0	4	p_region
stmts	8:43	8:54	3	
return	8:43	8:54	4	NULL
water	8:50	0:0	5	NULL
water	12:4	0:0	2	p_region
op	12:13	0:0	2	=
water	12:15	0:0	2	p_subpic
op	12:23	0:0	2	->
water	12:25	0:0	2	p_region
water	12:33	0:0	2	;
if	13:4	22:4	2	(p_region -> fmt . i_chroma == VLC_CODEC_YUVA)
cond	13:8	13:34	3	p_region -> fmt . i_chroma == VLC_CODEC_YUVA
water	13:8	0:0	4	p_region
op	13:16	0:0	4	->
water	13:18	0:0	4	fmt
op	13:21	0:0	4	.
water	13:22	0:0	4	i_chroma
op	13:31	0:0	4	==
water	13:34	0:0	4	VLC_CODEC_YUVA
stmts	14:4	22:4	3	
water	14:4	0:0	4	{
water	15:8	0:0	4	p_temp
op	15:15	0:0	4	=
call	15:17	15:36	4	YuvaYuvp
arg	15:27	15:36	5	p_subpic
water	15:27	0:0	6	p_subpic
water	15:37	0:0	4	;
if	16:8	20:8	4	(! p_temp)
cond	16:12	16:13	5	! p_temp
op	16:12	0:0	6	!
water	16:13	0:0	6	p_temp
stmts	17:8	20:8	5	
water	17:8	0:0	6	{
call	18:12	18:55	6	msg_Err
arg	18:21	18:26	7	p_enc
water	18:21	0:0	8	p_enc
arg	18:28	18:55	7	"no picture in subpicture"
water	18:28	0:0	8	"no picture in subpicture"
water	18:56	0:0	6	;
return	19:12	19:23	6	NULL
water	19:19	0:0	7	NULL
water	20:8	0:0	6	}
water	21:8	0:0	4	p_region
op	21:17	0:0	4	=
water	21:19	0:0	4	p_subpic
op	21:27	0:0	4	->
water	21:29	0:0	4	p_region
water	21:37	0:0	4	;
water	22:4	0:0	4	}
if	24:4	24:31	2	(! p_region)
cond	24:8	24:9	3	! p_region
op	24:8	0:0	4	!
water	24:9	0:0	4	p_region
stmts	24:20	24:31	3	
return	24:20	24:31	4	NULL
water	24:27	0:0	5	NULL
if	25:4	33:4	2	(( p_region -> fmt . i_chroma != VLC_CODEC_TEXT ) && ( p_region -> fmt . i_chroma != VLC_CODEC_YUVP ))
cond	25:8	26:51	3	( p_region -> fmt . i_chroma != VLC_CODEC_TEXT ) && ( p_region -> fmt . i_chroma != VLC_CODEC_YUVP )
water	25:8	0:0	4	(
water	25:10	0:0	4	p_region
op	25:18	0:0	4	->
water	25:20	0:0	4	fmt
op	25:23	0:0	4	.
water	25:24	0:0	4	i_chroma
op	25:33	0:0	4	!=
water	25:36	0:0	4	VLC_CODEC_TEXT
water	25:51	0:0	4	)
op	25:53	0:0	4	&&
water	26:8	0:0	4	(
water	26:10	0:0	4	p_region
op	26:18	0:0	4	->
water	26:20	0:0	4	fmt
op	26:23	0:0	4	.
water	26:24	0:0	4	i_chroma
op	26:33	0:0	4	!=
water	26:36	0:0	4	VLC_CODEC_YUVP
water	26:51	0:0	4	)
stmts	27:4	33:4	3	
water	27:4	0:0	4	{
decl	28:8	28:26	4	char	psz_fourcc[5]
call	29:8	29:53	4	memset
arg	29:16	29:27	5	&psz_fourcc
op	29:16	0:0	6	&
water	29:17	0:0	6	psz_fourcc
arg	29:29	29:30	5	0
water	29:29	0:0	6	0
arg	29:32	29:53	5	sizeof(psz_fourcc)
op	29:32	0:0	6	sizeof
water	29:38	0:0	6	(
water	29:40	0:0	6	psz_fourcc
water	29:51	0:0	6	)
water	29:54	0:0	4	;
call	30:8	30:64	4	vlc_fourcc_to_char
arg	30:28	30:50	5	p_region->fmt.i_chroma
water	30:28	0:0	6	p_region
op	30:36	0:0	6	->
water	30:38	0:0	6	fmt
op	30:41	0:0	6	.
water	30:42	0:0	6	i_chroma
arg	30:52	30:64	5	&psz_fourcc
op	30:52	0:0	6	&
water	30:53	0:0	6	psz_fourcc
water	30:65	0:0	4	;
call	31:8	31:65	4	msg_Err
arg	31:17	31:22	5	p_enc
water	31:17	0:0	6	p_enc
arg	31:24	31:52	5	"chroma %4.4s not supported"
water	31:24	0:0	6	"chroma %4.4s not supported"
arg	31:54	31:65	5	psz_fourcc
water	31:54	0:0	6	psz_fourcc
water	31:66	0:0	4	;
return	32:8	32:19	4	NULL
water	32:15	0:0	5	NULL
water	33:4	0:0	4	}
if	34:4	48:4	2	(p_region -> fmt . p_palette)
cond	34:8	34:22	3	p_region -> fmt . p_palette
water	34:8	0:0	4	p_region
op	34:16	0:0	4	->
water	34:18	0:0	4	fmt
op	34:21	0:0	4	.
water	34:22	0:0	4	p_palette
stmts	35:4	48:4	3	
water	35:4	0:0	4	{
switch	36:8	47:8	4	(p_region -> fmt . p_palette -> i_entries)
cond	36:16	36:41	5	p_region -> fmt . p_palette -> i_entries
water	36:16	0:0	6	p_region
op	36:24	0:0	6	->
water	36:26	0:0	6	fmt
op	36:29	0:0	6	.
water	36:30	0:0	6	p_palette
op	36:39	0:0	6	->
water	36:41	0:0	6	i_entries
stmts	37:8	47:8	5	
water	37:8	0:0	6	{
label	38:12	38:18	6	case 0 :
label	39:12	39:18	6	case 4 :
label	40:12	40:19	6	case 16 :
label	41:12	41:20	6	case 256 :
break	42:16	42:21	6	
label	43:12	43:19	6	default :
call	44:16	45:63	6	msg_Err
arg	44:25	44:30	7	p_enc
water	44:25	0:0	8	p_enc
arg	44:32	44:69	7	"subpicture palette (%d) not handled"
water	44:32	0:0	8	"subpicture palette (%d) not handled"
arg	45:28	45:63	7	p_region->fmt.p_palette->i_entries
water	45:28	0:0	8	p_region
op	45:36	0:0	8	->
water	45:38	0:0	8	fmt
op	45:41	0:0	8	.
water	45:42	0:0	8	p_palette
op	45:51	0:0	8	->
water	45:53	0:0	8	i_entries
water	45:64	0:0	6	;
return	46:16	46:27	6	NULL
water	46:23	0:0	7	NULL
water	47:8	0:0	6	}
water	48:4	0:0	4	}
call	51:4	51:42	2	msg_Dbg
arg	51:13	51:18	3	p_enc
water	51:13	0:0	4	p_enc
arg	51:20	51:42	3	"encoding subpicture"
water	51:20	0:0	4	"encoding subpicture"
water	51:43	0:0	2	;
water	53:4	0:0	2	p_block
op	53:12	0:0	2	=
call	53:14	53:33	2	block_Alloc
arg	53:27	53:33	3	64000
water	53:27	0:0	4	64000
water	53:34	0:0	2	;
call	54:4	54:53	2	bs_init
arg	54:13	54:14	3	s
water	54:13	0:0	4	s
arg	54:16	54:33	3	p_block->p_buffer
water	54:16	0:0	4	p_block
op	54:23	0:0	4	->
water	54:25	0:0	4	p_buffer
arg	54:35	54:53	3	p_block->i_buffer
water	54:35	0:0	4	p_block
op	54:42	0:0	4	->
water	54:44	0:0	4	i_buffer
water	54:54	0:0	2	;
call	55:4	55:25	2	bs_write
arg	55:14	55:15	3	s
water	55:14	0:0	4	s
arg	55:17	55:18	3	8
water	55:17	0:0	4	8
arg	55:20	55:25	3	0x20
water	55:20	0:0	4	0
water	55:21	0:0	4	x20
water	55:26	0:0	2	;
call	56:4	56:24	2	bs_write
arg	56:14	56:15	3	s
water	56:14	0:0	4	s
arg	56:17	56:18	3	8
water	56:17	0:0	4	8
arg	56:20	56:24	3	0x0
water	56:20	0:0	4	0
water	56:21	0:0	4	x0
water	56:25	0:0	2	;
call	57:4	57:48	2	encode_page_composition
arg	57:29	57:34	3	p_enc
water	57:29	0:0	4	p_enc
arg	57:36	57:37	3	s
water	57:36	0:0	4	s
arg	57:39	57:48	3	p_subpic
water	57:39	0:0	4	p_subpic
water	57:49	0:0	2	;
call	58:4	58:50	2	encode_region_composition
arg	58:31	58:36	3	p_enc
water	58:31	0:0	4	p_enc
arg	58:38	58:39	3	s
water	58:38	0:0	4	s
arg	58:41	58:50	3	p_subpic
water	58:41	0:0	4	p_subpic
water	58:51	0:0	2	;
call	59:4	59:36	2	encode_clut
arg	59:17	59:22	3	p_enc
water	59:17	0:0	4	p_enc
arg	59:24	59:25	3	s
water	59:24	0:0	4	s
arg	59:27	59:36	3	p_subpic
water	59:27	0:0	4	p_subpic
water	59:37	0:0	2	;
call	60:4	60:38	2	encode_object
arg	60:19	60:24	3	p_enc
water	60:19	0:0	4	p_enc
arg	60:26	60:27	3	s
water	60:26	0:0	4	s
arg	60:29	60:38	3	p_subpic
water	60:29	0:0	4	p_subpic
water	60:39	0:0	2	;
call	62:4	62:25	2	bs_write
arg	62:14	62:15	3	s
water	62:14	0:0	4	s
arg	62:17	62:18	3	8
water	62:17	0:0	4	8
arg	62:20	62:25	3	0x0f
water	62:20	0:0	4	0
water	62:21	0:0	4	x0f
water	62:26	0:0	2	;
call	63:4	63:43	2	bs_write
arg	63:14	63:15	3	s
water	63:14	0:0	4	s
arg	63:17	63:18	3	8
water	63:17	0:0	4	8
arg	63:20	63:43	3	DVBSUB_ST_ENDOFDISPLAY
water	63:20	0:0	4	DVBSUB_ST_ENDOFDISPLAY
water	63:44	0:0	2	;
call	64:4	64:23	2	bs_write
arg	64:14	64:15	3	s
water	64:14	0:0	4	s
arg	64:17	64:19	3	16
water	64:17	0:0	4	16
arg	64:21	64:23	3	1
water	64:21	0:0	4	1
water	64:24	0:0	2	;
call	65:4	65:23	2	bs_write
arg	65:14	65:15	3	s
water	65:14	0:0	4	s
arg	65:17	65:19	3	16
water	65:17	0:0	4	16
arg	65:21	65:23	3	0
water	65:21	0:0	4	0
water	65:24	0:0	2	;
call	66:4	66:25	2	bs_write
arg	66:14	66:15	3	s
water	66:14	0:0	4	s
arg	66:17	66:18	3	8
water	66:17	0:0	4	8
arg	66:20	66:25	3	0xff
water	66:20	0:0	4	0
water	66:21	0:0	4	xff
water	66:26	0:0	2	;
water	67:4	0:0	2	p_block
op	67:11	0:0	2	->
water	67:13	0:0	2	i_buffer
op	67:22	0:0	2	=
call	67:24	67:34	2	bs_pos
arg	67:32	67:34	3	s
water	67:32	0:0	4	s
op	67:36	0:0	2	/
water	67:38	0:0	2	8
water	67:39	0:0	2	;
water	68:4	0:0	2	p_block
op	68:11	0:0	2	->
water	68:13	0:0	2	i_pts
op	68:19	0:0	2	=
water	68:21	0:0	2	p_block
op	68:28	0:0	2	->
water	68:30	0:0	2	i_dts
op	68:36	0:0	2	=
water	68:38	0:0	2	p_subpic
op	68:46	0:0	2	->
water	68:48	0:0	2	i_start
water	68:55	0:0	2	;
if	69:4	88:4	2	(! p_subpic -> b_ephemer && ( p_subpic -> i_stop > p_subpic -> i_start ))
cond	69:8	69:71	3	! p_subpic -> b_ephemer && ( p_subpic -> i_stop > p_subpic -> i_start )
op	69:8	0:0	4	!
water	69:9	0:0	4	p_subpic
op	69:17	0:0	4	->
water	69:19	0:0	4	b_ephemer
op	69:29	0:0	4	&&
water	69:32	0:0	4	(
water	69:34	0:0	4	p_subpic
op	69:42	0:0	4	->
water	69:44	0:0	4	i_stop
op	69:51	0:0	4	>
water	69:53	0:0	4	p_subpic
op	69:61	0:0	4	->
water	69:63	0:0	4	i_start
water	69:71	0:0	4	)
stmts	70:4	88:4	3	
water	70:4	0:0	4	{
decl	71:8	71:29	4	block_t	*p_block_stop
water	72:8	0:0	4	p_block
op	72:15	0:0	4	->
water	72:17	0:0	4	i_length
op	72:26	0:0	4	=
water	72:28	0:0	4	p_subpic
op	72:36	0:0	4	->
water	72:38	0:0	4	i_stop
op	72:45	0:0	4	-
water	72:47	0:0	4	p_subpic
op	72:55	0:0	4	->
water	72:57	0:0	4	i_start
water	72:64	0:0	4	;
water	74:8	0:0	4	p_block_stop
op	74:21	0:0	4	=
call	74:23	74:42	4	block_Alloc
arg	74:36	74:42	5	64000
water	74:36	0:0	6	64000
water	74:43	0:0	4	;
call	75:8	75:67	4	bs_init
arg	75:17	75:18	5	s
water	75:17	0:0	6	s
arg	75:20	75:42	5	p_block_stop->p_buffer
water	75:20	0:0	6	p_block_stop
op	75:32	0:0	6	->
water	75:34	0:0	6	p_buffer
arg	75:44	75:67	5	p_block_stop->i_buffer
water	75:44	0:0	6	p_block_stop
op	75:56	0:0	6	->
water	75:58	0:0	6	i_buffer
water	75:68	0:0	4	;
call	76:8	76:29	4	bs_write
arg	76:18	76:19	5	s
water	76:18	0:0	6	s
arg	76:21	76:22	5	8
water	76:21	0:0	6	8
arg	76:24	76:29	5	0x20
water	76:24	0:0	6	0
water	76:25	0:0	6	x20
water	76:30	0:0	4	;
call	77:8	77:28	4	bs_write
arg	77:18	77:19	5	s
water	77:18	0:0	6	s
arg	77:21	77:22	5	8
water	77:21	0:0	6	8
arg	77:24	77:28	5	0x0
water	77:24	0:0	6	0
water	77:25	0:0	6	x0
water	77:29	0:0	4	;
call	78:8	78:45	4	encode_page_composition
arg	78:33	78:38	5	p_enc
water	78:33	0:0	6	p_enc
arg	78:40	78:41	5	s
water	78:40	0:0	6	s
arg	78:43	78:45	5	0
water	78:43	0:0	6	0
water	78:46	0:0	4	;
call	79:8	79:29	4	bs_write
arg	79:18	79:19	5	s
water	79:18	0:0	6	s
arg	79:21	79:22	5	8
water	79:21	0:0	6	8
arg	79:24	79:29	5	0x0f
water	79:24	0:0	6	0
water	79:25	0:0	6	x0f
water	79:30	0:0	4	;
call	80:8	80:47	4	bs_write
arg	80:18	80:19	5	s
water	80:18	0:0	6	s
arg	80:21	80:22	5	8
water	80:21	0:0	6	8
arg	80:24	80:47	5	DVBSUB_ST_ENDOFDISPLAY
water	80:24	0:0	6	DVBSUB_ST_ENDOFDISPLAY
water	80:48	0:0	4	;
call	81:8	81:27	4	bs_write
arg	81:18	81:19	5	s
water	81:18	0:0	6	s
arg	81:21	81:23	5	16
water	81:21	0:0	6	16
arg	81:25	81:27	5	1
water	81:25	0:0	6	1
water	81:28	0:0	4	;
call	82:8	82:27	4	bs_write
arg	82:18	82:19	5	s
water	82:18	0:0	6	s
arg	82:21	82:23	5	16
water	82:21	0:0	6	16
arg	82:25	82:27	5	0
water	82:25	0:0	6	0
water	82:28	0:0	4	;
call	83:8	83:29	4	bs_write
arg	83:18	83:19	5	s
water	83:18	0:0	6	s
arg	83:21	83:22	5	8
water	83:21	0:0	6	8
arg	83:24	83:29	5	0xff
water	83:24	0:0	6	0
water	83:25	0:0	6	xff
water	83:30	0:0	4	;
water	84:8	0:0	4	p_block_stop
op	84:20	0:0	4	->
water	84:22	0:0	4	i_buffer
op	84:31	0:0	4	=
call	84:33	84:43	4	bs_pos
arg	84:41	84:43	5	s
water	84:41	0:0	6	s
op	84:45	0:0	4	/
water	84:47	0:0	4	8
water	84:48	0:0	4	;
water	85:8	0:0	4	p_block_stop
op	85:20	0:0	4	->
water	85:22	0:0	4	i_pts
op	85:28	0:0	4	=
water	85:30	0:0	4	p_block_stop
op	85:42	0:0	4	->
water	85:44	0:0	4	i_dts
op	85:50	0:0	4	=
water	85:52	0:0	4	p_subpic
op	85:60	0:0	4	->
water	85:62	0:0	4	i_stop
water	85:68	0:0	4	;
call	86:8	86:50	4	block_ChainAppend
arg	86:27	86:35	5	&p_block
op	86:27	0:0	6	&
water	86:28	0:0	6	p_block
arg	86:37	86:50	5	p_block_stop
water	86:37	0:0	6	p_block_stop
water	86:51	0:0	4	;
water	87:8	0:0	4	p_block_stop
op	87:20	0:0	4	->
water	87:22	0:0	4	i_length
op	87:31	0:0	4	=
water	87:33	0:0	4	100000
water	87:39	0:0	4	;
water	88:4	0:0	4	}
call	90:4	90:50	2	msg_Dbg
arg	90:13	90:18	3	p_enc
water	90:13	0:0	4	p_enc
arg	90:20	90:50	3	"subpicture encoded properly"
water	90:20	0:0	4	"subpicture encoded properly"
water	90:51	0:0	2	;
return	92:4	92:18	2	p_block
water	92:11	0:0	3	p_block

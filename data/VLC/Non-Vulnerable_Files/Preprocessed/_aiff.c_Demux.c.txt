func	2:0	34:0	0	static int	Demux
params	2:16	0:0	1	
param	2:18	2:35	2	demux_t *	p_demux
stmnts	0:0	33:12	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:50	2	int64_t	i_tell
op	5:23	0:0	2	=
call	5:25	5:49	3	stream_Tell
arg	5:38	5:49	4	p_demux->s
water	5:38	0:0	5	p_demux
op	5:45	0:0	5	->
water	5:47	0:0	5	s
decl	6:4	6:24	2	block_t	*p_block
decl	7:4	7:22	2	int	i_read
if	8:4	12:4	2	(p_sys -> i_ssnd_end > 0 && i_tell >= p_sys -> i_ssnd_end)
cond	8:8	8:50	3	p_sys -> i_ssnd_end > 0 && i_tell >= p_sys -> i_ssnd_end
water	8:8	0:0	4	p_sys
op	8:13	0:0	4	->
water	8:15	0:0	4	i_ssnd_end
op	8:26	0:0	4	>
water	8:28	0:0	4	0
op	8:30	0:0	4	&&
water	8:33	0:0	4	i_tell
op	8:40	0:0	4	>=
water	8:43	0:0	4	p_sys
op	8:48	0:0	4	->
water	8:50	0:0	4	i_ssnd_end
stmts	9:4	12:4	3	
water	9:4	0:0	4	{
return	11:8	11:16	4	0
water	11:15	0:0	5	0
water	12:4	0:0	4	}
call	14:4	14:74	2	es_out_Control
arg	14:20	14:32	3	p_demux->out
water	14:20	0:0	4	p_demux
op	14:27	0:0	4	->
water	14:29	0:0	4	out
arg	14:34	14:48	3	ES_OUT_SET_PCR
water	14:34	0:0	4	ES_OUT_SET_PCR
arg	14:50	14:74	3	VLC_TS_0+p_sys->i_time
water	14:50	0:0	4	VLC_TS_0
op	14:59	0:0	4	+
water	14:61	0:0	4	p_sys
op	14:66	0:0	4	->
water	14:68	0:0	4	i_time
water	14:75	0:0	2	;
water	16:4	0:0	2	i_read
op	16:11	0:0	2	=
water	16:13	0:0	2	p_sys
op	16:18	0:0	2	->
water	16:20	0:0	2	i_ssnd_fsize
op	16:33	0:0	2	*
water	16:35	0:0	2	(
water	16:37	0:0	2	p_sys
op	16:42	0:0	2	->
water	16:44	0:0	2	fmt
op	16:47	0:0	2	.
water	16:48	0:0	2	audio
op	16:53	0:0	2	.
water	16:54	0:0	2	i_rate
op	16:61	0:0	2	/
water	16:63	0:0	2	10
water	16:66	0:0	2	)
water	16:67	0:0	2	;
if	17:4	20:4	2	(p_sys -> i_ssnd_end > 0 && p_sys -> i_ssnd_end - i_tell < i_read)
cond	17:8	17:62	3	p_sys -> i_ssnd_end > 0 && p_sys -> i_ssnd_end - i_tell < i_read
water	17:8	0:0	4	p_sys
op	17:13	0:0	4	->
water	17:15	0:0	4	i_ssnd_end
op	17:26	0:0	4	>
water	17:28	0:0	4	0
op	17:30	0:0	4	&&
water	17:33	0:0	4	p_sys
op	17:38	0:0	4	->
water	17:40	0:0	4	i_ssnd_end
op	17:51	0:0	4	-
water	17:53	0:0	4	i_tell
op	17:60	0:0	4	<
water	17:62	0:0	4	i_read
stmts	18:4	20:4	3	
water	18:4	0:0	4	{
water	19:8	0:0	4	i_read
op	19:15	0:0	4	=
water	19:17	0:0	4	p_sys
op	19:22	0:0	4	->
water	19:24	0:0	4	i_ssnd_end
op	19:35	0:0	4	-
water	19:37	0:0	4	i_tell
water	19:43	0:0	4	;
water	20:4	0:0	4	}
if	21:4	24:4	2	(( p_block =stream_Block (p_demux -> s ,i_read ) ) == NULL)
cond	21:8	21:60	3	( p_block =stream_Block (p_demux -> s ,i_read ) ) == NULL
water	21:8	0:0	4	(
water	21:10	0:0	4	p_block
op	21:18	0:0	4	=
call	21:20	21:53	4	stream_Block
arg	21:34	21:44	5	p_demux->s
water	21:34	0:0	6	p_demux
op	21:41	0:0	6	->
water	21:43	0:0	6	s
arg	21:46	21:53	5	i_read
water	21:46	0:0	6	i_read
water	21:55	0:0	4	)
op	21:57	0:0	4	==
water	21:60	0:0	4	NULL
stmts	22:4	24:4	3	
water	22:4	0:0	4	{
return	23:8	23:16	4	0
water	23:15	0:0	5	0
water	24:4	0:0	4	}
water	25:4	0:0	2	p_block
op	25:11	0:0	2	->
water	25:13	0:0	2	i_dts
op	25:19	0:0	2	=
water	26:4	0:0	2	p_block
op	26:11	0:0	2	->
water	26:13	0:0	2	i_pts
op	26:19	0:0	2	=
water	26:21	0:0	2	VLC_TS_0
op	26:30	0:0	2	+
water	26:32	0:0	2	p_sys
op	26:37	0:0	2	->
water	26:39	0:0	2	i_time
water	26:45	0:0	2	;
water	27:4	0:0	2	p_sys
op	27:9	0:0	2	->
water	27:11	0:0	2	i_time
op	27:18	0:0	2	+=
water	27:21	0:0	2	(
water	27:22	0:0	2	int64_t
water	27:29	0:0	2	)
water	27:30	0:0	2	1000000
op	27:38	0:0	2	*
water	28:21	0:0	2	p_block
op	28:28	0:0	2	->
water	28:30	0:0	2	i_buffer
op	28:39	0:0	2	/
water	29:21	0:0	2	p_sys
op	29:26	0:0	2	->
water	29:28	0:0	2	i_ssnd_fsize
op	29:41	0:0	2	/
water	30:21	0:0	2	p_sys
op	30:26	0:0	2	->
water	30:28	0:0	2	fmt
op	30:31	0:0	2	.
water	30:32	0:0	2	audio
op	30:37	0:0	2	.
water	30:38	0:0	2	i_rate
water	30:44	0:0	2	;
call	32:4	32:50	2	es_out_Send
arg	32:17	32:29	3	p_demux->out
water	32:17	0:0	4	p_demux
op	32:24	0:0	4	->
water	32:26	0:0	4	out
arg	32:31	32:40	3	p_sys->es
water	32:31	0:0	4	p_sys
op	32:36	0:0	4	->
water	32:38	0:0	4	es
arg	32:42	32:50	3	p_block
water	32:42	0:0	4	p_block
water	32:51	0:0	2	;
return	33:4	33:12	2	1
water	33:11	0:0	3	1

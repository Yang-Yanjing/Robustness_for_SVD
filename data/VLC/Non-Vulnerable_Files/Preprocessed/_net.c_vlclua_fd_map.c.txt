func	2:0	29:0	0	static int	vlclua_fd_map
params	2:24	0:0	1	
param	2:26	2:38	2	lua_State *	L
param	2:40	2:47	2	int	fd
stmnts	0:0	28:13	1	
decl	4:4	4:48	2	vlclua_dtable_t	*dt
op	4:24	0:0	2	=
call	4:26	4:47	3	vlclua_get_dtable
arg	4:45	4:47	4	L
water	4:45	0:0	5	L
if	5:4	6:17	2	(( unsigned ) fd < 3 u)
cond	5:8	5:24	3	( unsigned ) fd < 3 u
water	5:8	0:0	4	(
water	5:9	0:0	4	unsigned
water	5:17	0:0	4	)
water	5:18	0:0	4	fd
op	5:21	0:0	4	<
water	5:23	0:0	4	3
water	5:24	0:0	4	u
stmts	6:8	6:17	3	
return	6:8	6:17	4	-1
op	6:15	0:0	5	-
water	6:16	0:0	5	1
for	8:4	9:34	2	(unsigned i = 0 ;i < dt -> fdc;i ++)
forinit	8:9	8:23	3	unsigned i = 0 ;
water	8:9	0:0	4	unsigned
water	8:18	0:0	4	i
op	8:20	0:0	4	=
water	8:22	0:0	4	0
water	8:23	0:0	4	;
cond	8:25	8:33	3	i < dt -> fdc
water	8:25	0:0	4	i
op	8:27	0:0	4	<
water	8:29	0:0	4	dt
op	8:31	0:0	4	->
water	8:33	0:0	4	fdc
forexpr	8:38	8:39	3	i ++
water	8:38	0:0	4	i
op	8:39	0:0	4	++
stmts	9:8	9:34	3	
call	9:8	9:33	4	assert
arg	9:16	9:33	5	dt->fdv[i]!=fd
water	9:16	0:0	6	dt
op	9:18	0:0	6	->
water	9:20	0:0	6	fdv
op	9:23	0:0	6	[
water	9:24	0:0	6	i
op	9:25	0:0	6	]
op	9:27	0:0	6	!=
water	9:30	0:0	6	fd
water	9:34	0:0	4	;
for	11:4	18:4	2	(unsigned i = 0 ;i < dt -> fdc;i ++)
forinit	11:9	11:23	3	unsigned i = 0 ;
water	11:9	0:0	4	unsigned
water	11:18	0:0	4	i
op	11:20	0:0	4	=
water	11:22	0:0	4	0
water	11:23	0:0	4	;
cond	11:25	11:33	3	i < dt -> fdc
water	11:25	0:0	4	i
op	11:27	0:0	4	<
water	11:29	0:0	4	dt
op	11:31	0:0	4	->
water	11:33	0:0	4	fdc
forexpr	11:38	11:39	3	i ++
water	11:38	0:0	4	i
op	11:39	0:0	4	++
stmts	12:4	18:4	3	
water	12:4	0:0	4	{
if	13:8	17:8	4	(dt -> fdv [ i ] == - 1)
cond	13:12	13:27	5	dt -> fdv [ i ] == - 1
water	13:12	0:0	6	dt
op	13:14	0:0	6	->
water	13:16	0:0	6	fdv
op	13:19	0:0	6	[
water	13:20	0:0	6	i
op	13:21	0:0	6	]
op	13:23	0:0	6	==
op	13:26	0:0	6	-
water	13:27	0:0	6	1
stmts	14:8	17:8	5	
water	14:8	0:0	6	{
water	15:12	0:0	6	dt
op	15:14	0:0	6	->
water	15:16	0:0	6	fdv
op	15:19	0:0	6	[
water	15:20	0:0	6	i
op	15:21	0:0	6	]
op	15:23	0:0	6	=
water	15:25	0:0	6	fd
water	15:27	0:0	6	;
return	16:12	16:24	6	3+i
water	16:19	0:0	7	3
op	16:21	0:0	7	+
water	16:23	0:0	7	i
water	17:8	0:0	6	}
water	18:4	0:0	4	}
if	19:4	20:17	2	(dt -> fdc >= 64)
cond	19:8	19:19	3	dt -> fdc >= 64
water	19:8	0:0	4	dt
op	19:10	0:0	4	->
water	19:12	0:0	4	fdc
op	19:16	0:0	4	>=
water	19:19	0:0	4	64
stmts	20:8	20:17	3	
return	20:8	20:17	4	-1
op	20:15	0:0	5	-
water	20:16	0:0	5	1
decl	21:4	21:70	2	int	*fdv
op	21:13	0:0	2	=
call	21:15	21:69	3	realloc
arg	21:24	21:31	4	dt->fdv
water	21:24	0:0	5	dt
op	21:26	0:0	5	->
water	21:28	0:0	5	fdv
arg	21:33	21:69	4	(dt->fdc+1)*sizeof(dt->fdv[0])
water	21:33	0:0	5	(
water	21:34	0:0	5	dt
op	21:36	0:0	5	->
water	21:38	0:0	5	fdc
op	21:42	0:0	5	+
water	21:44	0:0	5	1
water	21:45	0:0	5	)
op	21:47	0:0	5	*
op	21:49	0:0	5	sizeof
water	21:56	0:0	5	(
water	21:57	0:0	5	dt
op	21:59	0:0	5	->
water	21:61	0:0	5	fdv
op	21:64	0:0	5	[
water	21:65	0:0	5	0
op	21:66	0:0	5	]
water	21:67	0:0	5	)
if	22:4	23:17	2	(unlikely (fdv == NULL ))
cond	22:8	22:28	3	unlikely (fdv == NULL )
call	22:8	22:28	4	unlikely
arg	22:17	22:28	5	fdv==NULL
water	22:17	0:0	6	fdv
op	22:21	0:0	6	==
water	22:24	0:0	6	NULL
stmts	23:8	23:17	3	
return	23:8	23:17	4	-1
op	23:15	0:0	5	-
water	23:16	0:0	5	1
water	24:4	0:0	2	dt
op	24:6	0:0	2	->
water	24:8	0:0	2	fdv
op	24:12	0:0	2	=
water	24:14	0:0	2	fdv
water	24:17	0:0	2	;
water	25:4	0:0	2	dt
op	25:6	0:0	2	->
water	25:8	0:0	2	fdv
op	25:11	0:0	2	[
water	25:12	0:0	2	dt
op	25:14	0:0	2	->
water	25:16	0:0	2	fdc
op	25:19	0:0	2	]
op	25:21	0:0	2	=
water	25:23	0:0	2	fd
water	25:25	0:0	2	;
water	26:4	0:0	2	fd
op	26:7	0:0	2	=
water	26:9	0:0	2	3
op	26:11	0:0	2	+
water	26:13	0:0	2	dt
op	26:15	0:0	2	->
water	26:17	0:0	2	fdc
water	26:20	0:0	2	;
water	27:4	0:0	2	dt
op	27:6	0:0	2	->
water	27:8	0:0	2	fdc
op	27:11	0:0	2	++
water	27:13	0:0	2	;
return	28:4	28:13	2	fd
water	28:11	0:0	3	fd

func	2:0	40:0	0	static int	ProcessHeaders
params	2:25	0:0	1	
param	2:27	2:44	2	decoder_t *	p_dec
stmnts	0:0	39:22	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:24	2	ogg_packet	oggpacket
water	6:4	0:0	2	unsigned
water	6:13	0:0	2	pi_size
op	6:20	0:0	2	[
water	6:21	0:0	2	XIPH_MAX_HEADER_COUNT
op	6:42	0:0	2	]
water	6:43	0:0	2	;
decl	7:4	7:44	2	void	*pp_data[XIPH_MAX_HEADER_COUNT]
water	8:4	0:0	2	unsigned
water	8:13	0:0	2	i_count
water	8:20	0:0	2	;
if	9:4	11:27	2	(xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra ))
cond	9:8	10:71	3	xiph_SplitHeaders (pi_size ,pp_data ,& i_count ,p_dec -> fmt_in . i_extra ,p_dec -> fmt_in . p_extra )
call	9:8	10:71	4	xiph_SplitHeaders
arg	9:27	9:34	5	pi_size
water	9:27	0:0	6	pi_size
arg	9:36	9:43	5	pp_data
water	9:36	0:0	6	pp_data
arg	9:45	9:53	5	&i_count
op	9:45	0:0	6	&
water	9:46	0:0	6	i_count
arg	10:27	10:48	5	p_dec->fmt_in.i_extra
water	10:27	0:0	6	p_dec
op	10:32	0:0	6	->
water	10:34	0:0	6	fmt_in
op	10:40	0:0	6	.
water	10:41	0:0	6	i_extra
arg	10:50	10:71	5	p_dec->fmt_in.p_extra
water	10:50	0:0	6	p_dec
op	10:55	0:0	6	->
water	10:57	0:0	6	fmt_in
op	10:63	0:0	6	.
water	10:64	0:0	6	p_extra
stmts	11:8	11:27	3	
return	11:8	11:27	4	VLC_EGENERIC
water	11:15	0:0	5	VLC_EGENERIC
if	12:4	13:27	2	(i_count < 2)
cond	12:8	12:18	3	i_count < 2
water	12:8	0:0	4	i_count
op	12:16	0:0	4	<
water	12:18	0:0	4	2
stmts	13:8	13:27	3	
return	13:8	13:27	4	VLC_EGENERIC
water	13:15	0:0	5	VLC_EGENERIC
water	13:28	0:0	2	;
water	14:4	0:0	2	oggpacket
op	14:13	0:0	2	.
water	14:14	0:0	2	granulepos
op	14:25	0:0	2	=
op	14:27	0:0	2	-
water	14:28	0:0	2	1
water	14:29	0:0	2	;
water	15:4	0:0	2	oggpacket
op	15:13	0:0	2	.
water	15:14	0:0	2	e_o_s
op	15:20	0:0	2	=
water	15:22	0:0	2	0
water	15:23	0:0	2	;
water	16:4	0:0	2	oggpacket
op	16:13	0:0	2	.
water	16:14	0:0	2	packetno
op	16:23	0:0	2	=
water	16:25	0:0	2	0
water	16:26	0:0	2	;
water	18:4	0:0	2	oggpacket
op	18:13	0:0	2	.
water	18:14	0:0	2	b_o_s
op	18:20	0:0	2	=
water	18:22	0:0	2	1
water	18:23	0:0	2	;
water	19:4	0:0	2	oggpacket
op	19:13	0:0	2	.
water	19:14	0:0	2	bytes
op	19:21	0:0	2	=
water	19:23	0:0	2	pi_size
op	19:30	0:0	2	[
water	19:31	0:0	2	0
op	19:32	0:0	2	]
water	19:33	0:0	2	;
water	20:4	0:0	2	oggpacket
op	20:13	0:0	2	.
water	20:14	0:0	2	packet
op	20:21	0:0	2	=
water	20:23	0:0	2	pp_data
op	20:30	0:0	2	[
water	20:31	0:0	2	0
op	20:32	0:0	2	]
water	20:33	0:0	2	;
if	21:4	25:4	2	(ProcessInitialHeader (p_dec ,& oggpacket ) != VLC_SUCCESS)
cond	21:8	21:53	3	ProcessInitialHeader (p_dec ,& oggpacket ) != VLC_SUCCESS
call	21:8	21:48	4	ProcessInitialHeader
arg	21:30	21:35	5	p_dec
water	21:30	0:0	6	p_dec
arg	21:37	21:48	5	&oggpacket
op	21:37	0:0	6	&
water	21:38	0:0	6	oggpacket
op	21:50	0:0	4	!=
water	21:53	0:0	4	VLC_SUCCESS
stmts	22:4	25:4	3	
water	22:4	0:0	4	{
call	23:8	23:60	4	msg_Err
arg	23:17	23:22	5	p_dec
water	23:17	0:0	6	p_dec
arg	23:24	23:60	5	"initial Speex header is corrupted"
water	23:24	0:0	6	"initial Speex header is corrupted"
water	23:61	0:0	4	;
return	24:8	24:27	4	VLC_EGENERIC
water	24:15	0:0	5	VLC_EGENERIC
water	24:28	0:0	4	;
water	25:4	0:0	4	}
water	27:4	0:0	2	oggpacket
op	27:13	0:0	2	.
water	27:14	0:0	2	b_o_s
op	27:20	0:0	2	=
water	27:22	0:0	2	0
water	27:23	0:0	2	;
water	28:4	0:0	2	oggpacket
op	28:13	0:0	2	.
water	28:14	0:0	2	bytes
op	28:21	0:0	2	=
water	28:23	0:0	2	pi_size
op	28:30	0:0	2	[
water	28:31	0:0	2	1
op	28:32	0:0	2	]
water	28:33	0:0	2	;
water	29:4	0:0	2	oggpacket
op	29:13	0:0	2	.
water	29:14	0:0	2	packet
op	29:21	0:0	2	=
water	29:23	0:0	2	pp_data
op	29:30	0:0	2	[
water	29:31	0:0	2	1
op	29:32	0:0	2	]
water	29:33	0:0	2	;
call	30:4	30:42	2	ParseSpeexComments
arg	30:24	30:29	3	p_dec
water	30:24	0:0	4	p_dec
arg	30:31	30:42	3	&oggpacket
op	30:31	0:0	4	&
water	30:32	0:0	4	oggpacket
water	30:43	0:0	2	;
if	31:4	38:4	2	(p_sys -> b_packetizer)
cond	31:8	31:15	3	p_sys -> b_packetizer
water	31:8	0:0	4	p_sys
op	31:13	0:0	4	->
water	31:15	0:0	4	b_packetizer
stmts	32:4	38:4	3	
water	32:4	0:0	4	{
water	33:8	0:0	4	p_dec
op	33:13	0:0	4	->
water	33:15	0:0	4	fmt_out
op	33:22	0:0	4	.
water	33:23	0:0	4	i_extra
op	33:31	0:0	4	=
water	33:33	0:0	4	p_dec
op	33:38	0:0	4	->
water	33:40	0:0	4	fmt_in
op	33:46	0:0	4	.
water	33:47	0:0	4	i_extra
water	33:54	0:0	4	;
water	34:8	0:0	4	p_dec
op	34:13	0:0	4	->
water	34:15	0:0	4	fmt_out
op	34:22	0:0	4	.
water	34:23	0:0	4	p_extra
op	34:31	0:0	4	=
call	34:33	35:73	4	xrealloc
arg	34:43	34:65	5	p_dec->fmt_out.p_extra
water	34:43	0:0	6	p_dec
op	34:48	0:0	6	->
water	34:50	0:0	6	fmt_out
op	34:57	0:0	6	.
water	34:58	0:0	6	p_extra
arg	35:50	35:73	5	p_dec->fmt_out.i_extra
water	35:50	0:0	6	p_dec
op	35:55	0:0	6	->
water	35:57	0:0	6	fmt_out
op	35:64	0:0	6	.
water	35:65	0:0	6	i_extra
water	35:74	0:0	4	;
call	36:8	37:62	4	memcpy
arg	36:16	36:38	5	p_dec->fmt_out.p_extra
water	36:16	0:0	6	p_dec
op	36:21	0:0	6	->
water	36:23	0:0	6	fmt_out
op	36:30	0:0	6	.
water	36:31	0:0	6	p_extra
arg	37:16	37:37	5	p_dec->fmt_in.p_extra
water	37:16	0:0	6	p_dec
op	37:21	0:0	6	->
water	37:23	0:0	6	fmt_in
op	37:29	0:0	6	.
water	37:30	0:0	6	p_extra
arg	37:39	37:62	5	p_dec->fmt_out.i_extra
water	37:39	0:0	6	p_dec
op	37:44	0:0	6	->
water	37:46	0:0	6	fmt_out
op	37:53	0:0	6	.
water	37:54	0:0	6	i_extra
water	37:63	0:0	4	;
water	38:4	0:0	4	}
return	39:4	39:22	2	VLC_SUCCESS
water	39:11	0:0	3	VLC_SUCCESS

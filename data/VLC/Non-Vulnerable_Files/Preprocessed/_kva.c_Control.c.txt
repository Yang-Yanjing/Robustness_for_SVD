func	2:0	96:0	0	static int	Control
params	2:18	0:0	1	
param	2:20	2:38	2	vout_display_t *	vd
param	2:40	2:49	2	int	query
param	2:51	2:64	2	va_list	args
stmnts	0:0	95:23	1	
decl	4:4	4:37	2	vout_display_sys_t	*sys
op	4:28	0:0	2	=
water	4:30	0:0	2	vd
op	4:32	0:0	2	->
water	4:34	0:0	2	sys
switch	5:4	93:4	2	(query)
cond	5:12	5:12	3	query
water	5:12	0:0	4	query
stmts	6:4	93:4	3	
water	6:4	0:0	4	{
label	7:4	7:32	4	case VOUT_DISPLAY_HIDE_MOUSE :
water	8:4	0:0	4	{
decl	9:8	9:18	4	POINTL	ptl
call	10:8	10:47	4	WinQueryPointerPos
arg	10:28	10:40	5	HWND_DESKTOP
water	10:28	0:0	6	HWND_DESKTOP
arg	10:42	10:47	5	&ptl
op	10:42	0:0	6	&
water	10:43	0:0	6	ptl
water	10:48	0:0	4	;
if	11:8	16:8	4	(! sys -> is_mouse_hidden &&WinWindowFromPoint (HWND_DESKTOP ,& ptl ,TRUE ) == sys -> client)
cond	11:12	12:67	5	! sys -> is_mouse_hidden &&WinWindowFromPoint (HWND_DESKTOP ,& ptl ,TRUE ) == sys -> client
op	11:12	0:0	6	!
water	11:13	0:0	6	sys
op	11:16	0:0	6	->
water	11:18	0:0	6	is_mouse_hidden
op	11:34	0:0	6	&&
call	12:12	12:57	6	WinWindowFromPoint
arg	12:32	12:44	7	HWND_DESKTOP
water	12:32	0:0	8	HWND_DESKTOP
arg	12:46	12:50	7	&ptl
op	12:46	0:0	8	&
water	12:47	0:0	8	ptl
arg	12:52	12:57	7	TRUE
water	12:52	0:0	8	TRUE
op	12:59	0:0	6	==
water	12:62	0:0	6	sys
op	12:65	0:0	6	->
water	12:67	0:0	6	client
stmts	13:8	16:8	5	
water	13:8	0:0	6	{
call	14:12	14:48	6	WinShowPointer
arg	14:28	14:40	7	HWND_DESKTOP
water	14:28	0:0	8	HWND_DESKTOP
arg	14:42	14:48	7	FALSE
water	14:42	0:0	8	FALSE
water	14:49	0:0	6	;
water	15:12	0:0	6	sys
op	15:15	0:0	6	->
water	15:17	0:0	6	is_mouse_hidden
op	15:33	0:0	6	=
water	15:35	0:0	6	true
water	15:39	0:0	6	;
water	16:8	0:0	6	}
return	17:8	17:26	4	VLC_SUCCESS
water	17:15	0:0	5	VLC_SUCCESS
water	18:4	0:0	4	}
label	19:4	19:39	4	case VOUT_DISPLAY_CHANGE_FULLSCREEN :
water	20:4	0:0	4	{
decl	21:8	21:74	4	vout_display_cfg_t	cfg
op	21:31	0:0	4	=
call	21:33	21:73	5	*va_arg
arg	21:41	21:45	6	args
water	21:41	0:0	7	args
arg	21:47	21:73	6	constvout_display_cfg_t*
water	21:47	0:0	7	const
water	21:53	0:0	7	vout_display_cfg_t
op	21:72	0:0	7	*
if	22:8	23:76	4	(sys -> parent_window)
cond	22:12	22:17	5	sys -> parent_window
water	22:12	0:0	6	sys
op	22:15	0:0	6	->
water	22:17	0:0	6	parent_window
stmts	23:12	23:76	5	
call	23:12	23:75	6	vout_window_SetFullScreen
arg	23:38	23:56	7	sys->parent_window
water	23:38	0:0	8	sys
op	23:41	0:0	8	->
water	23:43	0:0	8	parent_window
arg	23:58	23:75	7	cfg.is_fullscreen
water	23:58	0:0	8	cfg
op	23:61	0:0	8	.
water	23:62	0:0	8	is_fullscreen
water	23:76	0:0	6	;
else	24:8	26:60	4
stmts	25:12	26:60	5	
call	25:12	26:59	6	WinPostMsg
arg	25:24	25:35	7	sys->client
water	25:24	0:0	8	sys
op	25:27	0:0	8	->
water	25:29	0:0	8	client
arg	25:37	25:61	7	WM_VLC_FULLSCREEN_CHANGE
water	25:37	0:0	8	WM_VLC_FULLSCREEN_CHANGE
arg	26:24	26:55	7	MPFROMLONG(cfg.is_fullscreen)
call	26:24	26:54	8	MPFROMLONG
arg	26:36	26:54	9	cfg.is_fullscreen
water	26:36	0:0	10	cfg
op	26:39	0:0	10	.
water	26:40	0:0	10	is_fullscreen
arg	26:57	26:59	7	0
water	26:57	0:0	8	0
water	26:60	0:0	6	;
return	27:8	27:26	4	VLC_SUCCESS
water	27:15	0:0	5	VLC_SUCCESS
water	28:4	0:0	4	}
label	29:4	29:41	4	case VOUT_DISPLAY_CHANGE_WINDOW_STATE :
water	30:4	0:0	4	{
water	31:8	0:0	4	const
water	31:14	0:0	4	unsigned
water	31:23	0:0	4	state
op	31:29	0:0	4	=
call	31:31	31:54	4	va_arg
arg	31:39	31:43	5	args
water	31:39	0:0	6	args
arg	31:45	31:54	5	unsigned
water	31:45	0:0	6	unsigned
water	31:55	0:0	4	;
decl	32:8	32:69	4	const bool	is_on_top
op	32:29	0:0	4	=
water	32:31	0:0	4	(
water	32:32	0:0	4	state
op	32:38	0:0	4	&
water	32:40	0:0	4	VOUT_WINDOW_STATE_ABOVE
water	32:63	0:0	4	)
op	32:65	0:0	4	!=
water	32:68	0:0	4	0
if	33:8	37:8	4	(sys -> parent_window)
cond	33:12	33:17	5	sys -> parent_window
water	33:12	0:0	6	sys
op	33:15	0:0	6	->
water	33:17	0:0	6	parent_window
stmts	34:8	37:8	5	
water	34:8	0:0	6	{
if	35:12	36:35	6	(vout_window_SetState (sys -> parent_window ,state ))
cond	35:16	35:64	7	vout_window_SetState (sys -> parent_window ,state )
call	35:16	35:64	8	vout_window_SetState
arg	35:38	35:56	9	sys->parent_window
water	35:38	0:0	10	sys
op	35:41	0:0	10	->
water	35:43	0:0	10	parent_window
arg	35:58	35:64	9	state
water	35:58	0:0	10	state
stmts	36:16	36:35	7	
return	36:16	36:35	8	VLC_EGENERIC
water	36:23	0:0	9	VLC_EGENERIC
water	37:8	0:0	6	}
else	38:8	39:75	4
stmts	38:13	39:75	5	
if	38:13	39:75	6	(is_on_top)
cond	38:17	38:17	7	is_on_top
water	38:17	0:0	8	is_on_top
stmts	39:12	39:75	7	
call	39:12	39:74	8	WinSetWindowPos
arg	39:29	39:39	9	sys->frame
water	39:29	0:0	10	sys
op	39:32	0:0	10	->
water	39:34	0:0	10	frame
arg	39:41	39:49	9	HWND_TOP
water	39:41	0:0	10	HWND_TOP
arg	39:51	39:52	9	0
water	39:51	0:0	10	0
arg	39:54	39:55	9	0
water	39:54	0:0	10	0
arg	39:57	39:58	9	0
water	39:57	0:0	10	0
arg	39:60	39:61	9	0
water	39:60	0:0	10	0
arg	39:63	39:74	9	SWP_ZORDER
water	39:63	0:0	10	SWP_ZORDER
water	39:75	0:0	8	;
water	40:8	0:0	4	sys
op	40:11	0:0	4	->
water	40:13	0:0	4	is_on_top
op	40:23	0:0	4	=
water	40:25	0:0	4	is_on_top
water	40:34	0:0	4	;
return	41:8	41:26	4	VLC_SUCCESS
water	41:15	0:0	5	VLC_SUCCESS
water	42:4	0:0	4	}
label	43:4	43:41	4	case VOUT_DISPLAY_CHANGE_DISPLAY_SIZE :
label	44:4	44:33	4	case VOUT_DISPLAY_CHANGE_ZOOM :
water	45:4	0:0	4	{
decl	46:8	46:80	4	const vout_display_cfg_t	*cfg
op	46:38	0:0	4	=
call	46:40	46:79	5	va_arg
arg	46:47	46:51	6	args
water	46:47	0:0	7	args
arg	46:53	46:79	6	constvout_display_cfg_t*
water	46:53	0:0	7	const
water	46:59	0:0	7	vout_display_cfg_t
op	46:78	0:0	7	*
decl	47:8	48:43	4	bool	is_forced
op	47:24	0:0	4	=
water	47:26	0:0	4	query
op	47:32	0:0	4	==
water	47:35	0:0	4	VOUT_DISPLAY_CHANGE_ZOOM
op	47:60	0:0	4	||
call	48:26	48:42	5	va_arg
arg	48:33	48:37	6	args
water	48:33	0:0	7	args
arg	48:39	48:42	6	int
water	48:39	0:0	7	int
if	49:8	60:8	4	(is_forced)
cond	49:12	49:12	5	is_forced
water	49:12	0:0	6	is_forced
stmts	50:8	60:8	5	
water	50:8	0:0	6	{
if	51:12	55:12	6	(sys -> parent_window)
cond	51:16	51:21	7	sys -> parent_window
water	51:16	0:0	8	sys
op	51:19	0:0	8	->
water	51:21	0:0	8	parent_window
stmts	52:12	55:12	7	
water	52:12	0:0	8	{
call	53:16	54:75	8	vout_window_SetSize
arg	53:36	53:54	9	sys->parent_window
water	53:36	0:0	10	sys
op	53:39	0:0	10	->
water	53:41	0:0	10	parent_window
arg	54:36	54:54	9	cfg->display.width
water	54:36	0:0	10	cfg
op	54:39	0:0	10	->
water	54:41	0:0	10	display
op	54:48	0:0	10	.
water	54:49	0:0	10	width
arg	54:56	54:75	9	cfg->display.height
water	54:56	0:0	10	cfg
op	54:59	0:0	10	->
water	54:61	0:0	10	display
op	54:68	0:0	10	.
water	54:69	0:0	10	height
water	54:76	0:0	8	;
water	55:12	0:0	8	}
else	56:12	59:62	6
stmts	57:16	59:62	7	
call	57:16	59:61	8	WinPostMsg
arg	57:28	57:39	9	sys->client
water	57:28	0:0	10	sys
op	57:31	0:0	10	->
water	57:33	0:0	10	client
arg	57:41	57:59	9	WM_VLC_SIZE_CHANGE
water	57:41	0:0	10	WM_VLC_SIZE_CHANGE
arg	58:28	58:60	9	MPFROMLONG(cfg->display.width)
call	58:28	58:59	10	MPFROMLONG
arg	58:40	58:59	11	cfg->display.width
water	58:40	0:0	12	cfg
op	58:43	0:0	12	->
water	58:45	0:0	12	display
op	58:52	0:0	12	.
water	58:53	0:0	12	width
arg	59:28	59:61	9	MPFROMLONG(cfg->display.height)
call	59:28	59:60	10	MPFROMLONG
arg	59:40	59:60	11	cfg->display.height
water	59:40	0:0	12	cfg
op	59:43	0:0	12	->
water	59:45	0:0	12	display
op	59:52	0:0	12	.
water	59:53	0:0	12	height
water	59:62	0:0	8	;
water	60:8	0:0	6	}
return	61:8	61:26	4	VLC_SUCCESS
water	61:15	0:0	5	VLC_SUCCESS
water	62:4	0:0	4	}
label	63:4	63:42	4	case VOUT_DISPLAY_CHANGE_SOURCE_ASPECT :
label	64:4	64:40	4	case VOUT_DISPLAY_CHANGE_SOURCE_CROP :
water	65:4	0:0	4	{
decl	66:8	66:72	4	const video_format_t	*src
op	66:34	0:0	4	=
call	66:36	66:71	5	va_arg
arg	66:43	66:47	6	args
water	66:43	0:0	7	args
arg	66:49	66:71	6	constvideo_format_t*
water	66:49	0:0	7	const
water	66:55	0:0	7	video_format_t
op	66:70	0:0	7	*
if	67:8	73:8	4	(query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT)
cond	67:12	67:21	5	query == VOUT_DISPLAY_CHANGE_SOURCE_ASPECT
water	67:12	0:0	6	query
op	67:18	0:0	6	==
water	67:21	0:0	6	VOUT_DISPLAY_CHANGE_SOURCE_ASPECT
stmts	68:8	73:8	5	
water	68:8	0:0	6	{
decl	69:12	69:38	6	vout_display_place_t	place
call	70:12	70:65	6	vout_display_PlacePicture
arg	70:38	70:44	7	&place
op	70:38	0:0	8	&
water	70:39	0:0	8	place
arg	70:46	70:49	7	src
water	70:46	0:0	8	src
arg	70:51	70:58	7	vd->cfg
water	70:51	0:0	8	vd
op	70:53	0:0	8	->
water	70:55	0:0	8	cfg
arg	70:60	70:65	7	false
water	70:60	0:0	8	false
water	70:66	0:0	6	;
water	71:12	0:0	6	sys
op	71:15	0:0	6	->
water	71:17	0:0	6	kvas
op	71:21	0:0	6	.
water	71:22	0:0	6	ulAspectWidth
op	71:37	0:0	6	=
water	71:39	0:0	6	place
op	71:44	0:0	6	.
water	71:45	0:0	6	width
water	71:50	0:0	6	;
water	72:12	0:0	6	sys
op	72:15	0:0	6	->
water	72:17	0:0	6	kvas
op	72:21	0:0	6	.
water	72:22	0:0	6	ulAspectHeight
op	72:37	0:0	6	=
water	72:39	0:0	6	place
op	72:44	0:0	6	.
water	72:45	0:0	6	height
water	72:51	0:0	6	;
water	73:8	0:0	6	}
else	74:8	84:8	4
stmts	75:8	84:8	5	
water	75:8	0:0	6	{
decl	76:12	76:34	6	video_format_t	src_rot
call	77:12	77:52	6	video_format_ApplyRotation
arg	77:39	77:47	7	&src_rot
op	77:39	0:0	8	&
water	77:40	0:0	8	src_rot
arg	77:49	77:52	7	src
water	77:49	0:0	8	src
water	77:53	0:0	6	;
water	78:12	0:0	6	sys
op	78:15	0:0	6	->
water	78:17	0:0	6	kvas
op	78:21	0:0	6	.
water	78:22	0:0	6	rclSrcRect
op	78:32	0:0	6	.
water	78:33	0:0	6	xLeft
op	78:41	0:0	6	=
water	78:43	0:0	6	src_rot
op	78:50	0:0	6	.
water	78:51	0:0	6	i_x_offset
water	78:61	0:0	6	;
water	79:12	0:0	6	sys
op	79:15	0:0	6	->
water	79:17	0:0	6	kvas
op	79:21	0:0	6	.
water	79:22	0:0	6	rclSrcRect
op	79:32	0:0	6	.
water	79:33	0:0	6	yTop
op	79:41	0:0	6	=
water	79:43	0:0	6	src_rot
op	79:50	0:0	6	.
water	79:51	0:0	6	i_y_offset
water	79:61	0:0	6	;
water	80:12	0:0	6	sys
op	80:15	0:0	6	->
water	80:17	0:0	6	kvas
op	80:21	0:0	6	.
water	80:22	0:0	6	rclSrcRect
op	80:32	0:0	6	.
water	80:33	0:0	6	xRight
op	80:41	0:0	6	=
water	80:43	0:0	6	src_rot
op	80:50	0:0	6	.
water	80:51	0:0	6	i_x_offset
op	80:62	0:0	6	+
water	81:43	0:0	6	src_rot
op	81:50	0:0	6	.
water	81:51	0:0	6	i_visible_width
water	81:66	0:0	6	;
water	82:12	0:0	6	sys
op	82:15	0:0	6	->
water	82:17	0:0	6	kvas
op	82:21	0:0	6	.
water	82:22	0:0	6	rclSrcRect
op	82:32	0:0	6	.
water	82:33	0:0	6	yBottom
op	82:41	0:0	6	=
water	82:43	0:0	6	src_rot
op	82:50	0:0	6	.
water	82:51	0:0	6	i_y_offset
op	82:62	0:0	6	+
water	83:43	0:0	6	src_rot
op	83:50	0:0	6	.
water	83:51	0:0	6	i_visible_height
water	83:67	0:0	6	;
water	84:8	0:0	6	}
call	85:8	85:29	4	kvaSetup
arg	85:18	85:29	5	&sys->kvas
op	85:18	0:0	6	&
water	85:19	0:0	6	sys
op	85:22	0:0	6	->
water	85:24	0:0	6	kvas
water	85:30	0:0	4	;
return	86:8	86:26	4	VLC_SUCCESS
water	86:15	0:0	5	VLC_SUCCESS
water	87:4	0:0	4	}
label	88:4	88:36	4	case VOUT_DISPLAY_RESET_PICTURES :
label	89:4	89:43	4	case VOUT_DISPLAY_CHANGE_DISPLAY_FILLED :
label	90:4	90:32	4	case VOUT_DISPLAY_GET_OPENGL :
break	92:8	92:13	4	
water	93:4	0:0	4	}
call	94:4	94:67	2	msg_Err
arg	94:12	94:14	3	vd
water	94:12	0:0	4	vd
arg	94:16	94:60	3	"Unsupported query(=%d) in vout display KVA"
water	94:16	0:0	4	"Unsupported query(=%d) in vout display KVA"
arg	94:62	94:67	3	query
water	94:62	0:0	4	query
water	94:68	0:0	2	;
return	95:4	95:23	2	VLC_EGENERIC
water	95:11	0:0	3	VLC_EGENERIC

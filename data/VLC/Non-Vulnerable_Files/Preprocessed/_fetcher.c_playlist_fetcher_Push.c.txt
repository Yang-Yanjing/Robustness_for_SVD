func	2:0	29:0	0	void	playlist_fetcher_Push
params	2:26	0:0	1	
param	2:28	2:57	2	playlist_fetcher_t *	p_fetcher
param	2:59	2:79	2	input_item_t *	p_item
param	3:28	3:71	2	input_item_meta_request_option_t	i_options
stmnts	0:0	28:40	1	
decl	5:4	5:64	2	fetcher_entry_t	*p_entry
op	5:29	0:0	2	=
call	5:31	5:63	3	malloc
arg	5:39	5:63	4	sizeof(fetcher_entry_t)
op	5:39	0:0	5	sizeof
water	5:45	0:0	5	(
water	5:46	0:0	5	fetcher_entry_t
water	5:61	0:0	5	)
if	6:4	6:26	2	(! p_entry)
cond	6:9	6:10	3	! p_entry
op	6:9	0:0	4	!
water	6:10	0:0	4	p_entry
stmts	6:20	6:26	3	
return	6:20	6:26	4	
call	7:4	7:26	2	vlc_gc_incref
arg	7:19	7:26	3	p_item
water	7:19	0:0	4	p_item
water	7:27	0:0	2	;
water	8:4	0:0	2	p_entry
op	8:11	0:0	2	->
water	8:13	0:0	2	p_item
op	8:20	0:0	2	=
water	8:22	0:0	2	p_item
water	8:28	0:0	2	;
water	9:4	0:0	2	p_entry
op	9:11	0:0	2	->
water	9:13	0:0	2	p_next
op	9:20	0:0	2	=
water	9:22	0:0	2	NULL
water	9:26	0:0	2	;
water	10:4	0:0	2	p_entry
op	10:11	0:0	2	->
water	10:13	0:0	2	i_options
op	10:23	0:0	2	=
water	10:25	0:0	2	i_options
water	10:34	0:0	2	;
call	11:4	11:37	2	vlc_mutex_lock
arg	11:20	11:37	3	&p_fetcher->lock
op	11:20	0:0	4	&
water	11:21	0:0	4	p_fetcher
op	11:30	0:0	4	->
water	11:32	0:0	4	lock
water	11:38	0:0	2	;
if	13:4	14:64	2	(p_fetcher -> p_waiting_head [ PASS1_LOCAL ])
cond	13:9	13:46	3	p_fetcher -> p_waiting_head [ PASS1_LOCAL ]
water	13:9	0:0	4	p_fetcher
op	13:18	0:0	4	->
water	13:20	0:0	4	p_waiting_head
op	13:34	0:0	4	[
water	13:35	0:0	4	PASS1_LOCAL
op	13:46	0:0	4	]
stmts	14:8	14:64	3	
water	14:8	0:0	4	p_fetcher
op	14:17	0:0	4	->
water	14:19	0:0	4	p_waiting_tail
op	14:33	0:0	4	[
water	14:34	0:0	4	PASS1_LOCAL
op	14:45	0:0	4	]
op	14:46	0:0	4	->
water	14:48	0:0	4	p_next
op	14:55	0:0	4	=
water	14:57	0:0	4	p_entry
water	14:64	0:0	4	;
else	15:4	16:56	2
stmts	16:8	16:56	3	
water	16:8	0:0	4	p_fetcher
op	16:17	0:0	4	->
water	16:19	0:0	4	p_waiting_head
op	16:33	0:0	4	[
water	16:34	0:0	4	PASS1_LOCAL
op	16:45	0:0	4	]
op	16:47	0:0	4	=
water	16:49	0:0	4	p_entry
water	16:56	0:0	4	;
water	17:4	0:0	2	p_fetcher
op	17:13	0:0	2	->
water	17:15	0:0	2	p_waiting_tail
op	17:29	0:0	2	[
water	17:30	0:0	2	PASS1_LOCAL
op	17:41	0:0	2	]
op	17:43	0:0	2	=
water	17:45	0:0	2	p_entry
water	17:52	0:0	2	;
if	18:4	27:4	2	(! p_fetcher -> b_live)
cond	18:8	18:20	3	! p_fetcher -> b_live
op	18:8	0:0	4	!
water	18:9	0:0	4	p_fetcher
op	18:18	0:0	4	->
water	18:20	0:0	4	b_live
stmts	19:4	27:4	3	
water	19:4	0:0	4	{
call	20:8	20:55	4	assert
arg	20:16	20:55	5	p_fetcher->p_waiting_head[PASS1_LOCAL]
water	20:16	0:0	6	p_fetcher
op	20:25	0:0	6	->
water	20:27	0:0	6	p_waiting_head
op	20:41	0:0	6	[
water	20:42	0:0	6	PASS1_LOCAL
op	20:53	0:0	6	]
water	20:56	0:0	4	;
if	21:8	24:63	4	(vlc_clone_detach (NULL ,Thread ,p_fetcher ,VLC_THREAD_PRIORITY_LOW ))
cond	21:12	22:54	5	vlc_clone_detach (NULL ,Thread ,p_fetcher ,VLC_THREAD_PRIORITY_LOW )
call	21:12	22:54	6	vlc_clone_detach
arg	21:30	21:34	7	NULL
water	21:30	0:0	8	NULL
arg	21:36	21:42	7	Thread
water	21:36	0:0	8	Thread
arg	21:44	21:53	7	p_fetcher
water	21:44	0:0	8	p_fetcher
arg	22:30	22:54	7	VLC_THREAD_PRIORITY_LOW
water	22:30	0:0	8	VLC_THREAD_PRIORITY_LOW
stmts	23:12	24:63	5	
call	23:12	24:62	6	msg_Err
arg	23:21	23:38	7	p_fetcher->object
water	23:21	0:0	8	p_fetcher
op	23:30	0:0	8	->
water	23:32	0:0	8	object
arg	24:21	24:62	7	"cannot spawn secondary preparse thread"
water	24:21	0:0	8	"cannot spawn secondary preparse thread"
water	24:63	0:0	6	;
else	25:8	26:36	4
stmts	26:12	26:36	5	
water	26:12	0:0	6	p_fetcher
op	26:21	0:0	6	->
water	26:23	0:0	6	b_live
op	26:30	0:0	6	=
water	26:32	0:0	6	true
water	26:36	0:0	6	;
water	27:4	0:0	4	}
call	28:4	28:39	2	vlc_mutex_unlock
arg	28:22	28:39	3	&p_fetcher->lock
op	28:22	0:0	4	&
water	28:23	0:0	4	p_fetcher
op	28:32	0:0	4	->
water	28:34	0:0	4	lock
water	28:40	0:0	2	;

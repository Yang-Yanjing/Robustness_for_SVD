func	2:0	25:0	0	static filter_t *	CreateFilter
params	2:29	0:0	1	
param	2:31	2:51	2	vlc_object_t *	p_this
param	2:53	2:74	2	es_format_t *	p_fmt_in
param	3:31	3:56	2	video_format_t *	p_fmt_out
param	4:31	4:54	2	const char *	psz_module
stmnts	0:0	24:19	1	
decl	6:4	6:22	2	filter_t	*p_filter
water	7:4	0:0	2	p_filter
op	7:13	0:0	2	=
call	7:15	7:69	2	vlc_custom_create
arg	7:34	7:40	3	p_this
water	7:34	0:0	4	p_this
arg	7:42	7:58	3	sizeof(filter_t)
op	7:42	0:0	4	sizeof
water	7:48	0:0	4	(
water	7:49	0:0	4	filter_t
water	7:57	0:0	4	)
arg	7:60	7:69	3	"filter"
water	7:60	0:0	4	"filter"
water	7:70	0:0	2	;
water	8:4	0:0	2	p_filter
op	8:12	0:0	2	->
water	8:14	0:0	2	pf_video_buffer_new
op	8:34	0:0	2	=
water	9:8	0:0	2	(
water	9:9	0:0	2	picture_t
op	9:19	0:0	2	*
call	9:20	9:34	2	(*)
arg	9:24	9:34	3	filter_t*
water	9:24	0:0	4	filter_t
op	9:33	0:0	4	*
water	9:35	0:0	2	)
water	9:36	0:0	2	video_new_buffer
water	9:52	0:0	2	;
water	10:4	0:0	2	p_filter
op	10:12	0:0	2	->
water	10:14	0:0	2	pf_video_buffer_del
op	10:34	0:0	2	=
water	11:8	0:0	2	(
call	11:9	11:16	2	void
arg	11:15	11:16	3	*
op	11:15	0:0	4	*
water	11:17	0:0	2	(
water	11:18	0:0	2	filter_t
op	11:27	0:0	2	*
water	11:28	0:0	2	,
water	11:30	0:0	2	picture_t
op	11:40	0:0	2	*
water	11:41	0:0	2	)
water	11:42	0:0	2	)
water	11:43	0:0	2	video_del_buffer
water	11:59	0:0	2	;
water	12:4	0:0	2	p_filter
op	12:12	0:0	2	->
water	12:14	0:0	2	fmt_in
op	12:21	0:0	2	=
op	12:23	0:0	2	*
water	12:24	0:0	2	p_fmt_in
water	12:32	0:0	2	;
water	13:4	0:0	2	p_filter
op	13:12	0:0	2	->
water	13:14	0:0	2	fmt_out
op	13:22	0:0	2	=
op	13:24	0:0	2	*
water	13:25	0:0	2	p_fmt_in
water	13:33	0:0	2	;
water	14:4	0:0	2	p_filter
op	14:12	0:0	2	->
water	14:14	0:0	2	fmt_out
op	14:21	0:0	2	.
water	14:22	0:0	2	i_codec
op	14:30	0:0	2	=
water	14:32	0:0	2	p_fmt_out
op	14:41	0:0	2	->
water	14:43	0:0	2	i_chroma
water	14:51	0:0	2	;
water	15:4	0:0	2	p_filter
op	15:12	0:0	2	->
water	15:14	0:0	2	fmt_out
op	15:21	0:0	2	.
water	15:22	0:0	2	video
op	15:28	0:0	2	=
op	15:30	0:0	2	*
water	15:31	0:0	2	p_fmt_out
water	15:40	0:0	2	;
water	16:4	0:0	2	p_filter
op	16:12	0:0	2	->
water	16:14	0:0	2	p_module
op	16:23	0:0	2	=
call	16:25	17:56	2	module_need
arg	16:38	16:46	3	p_filter
water	16:38	0:0	4	p_filter
arg	16:48	16:63	3	"video filter2"
water	16:48	0:0	4	"video filter2"
arg	17:38	17:48	3	psz_module
water	17:38	0:0	4	psz_module
arg	17:50	17:56	3	false
water	17:50	0:0	4	false
water	17:57	0:0	2	;
if	18:4	23:4	2	(! p_filter -> p_module)
cond	18:8	18:19	3	! p_filter -> p_module
op	18:8	0:0	4	!
water	18:9	0:0	4	p_filter
op	18:17	0:0	4	->
water	18:19	0:0	4	p_module
stmts	19:4	23:4	3	
water	19:4	0:0	4	{
call	20:8	20:51	4	msg_Dbg
arg	20:17	20:25	5	p_filter
water	20:17	0:0	6	p_filter
arg	20:27	20:51	5	"no video filter found"
water	20:27	0:0	6	"no video filter found"
water	20:52	0:0	4	;
call	21:8	21:31	4	DeleteFilter
arg	21:22	21:31	5	p_filter
water	21:22	0:0	6	p_filter
water	21:32	0:0	4	;
return	22:8	22:19	4	NULL
water	22:15	0:0	5	NULL
water	23:4	0:0	4	}
return	24:4	24:19	2	p_filter
water	24:11	0:0	3	p_filter

func	2:0	60:0	0	static int	Control
params	2:18	0:0	1	
param	2:20	2:36	2	demux_t *	p_demux
param	2:38	2:49	2	int	i_query
param	2:51	2:64	2	va_list	args
stmnts	0:0	59:4	1	
decl	4:4	4:39	2	demux_sys_t	*p_sys
op	4:23	0:0	2	=
water	4:25	0:0	2	p_demux
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:17	2	double	f
water	5:12	0:0	2	,
decl	5:4	5:17	2	double	*pf
decl	6:4	6:17	2	int64_t	*pi64
switch	7:4	59:4	2	(i_query)
cond	7:12	7:12	3	i_query
water	7:12	0:0	4	i_query
stmts	8:4	59:4	3	
water	8:4	0:0	4	{
label	9:8	9:31	4	case DEMUX_GET_POSITION :
water	10:8	0:0	4	{
decl	11:12	11:49	4	int64_t	i_start
op	11:28	0:0	4	=
water	11:30	0:0	4	p_sys
op	11:35	0:0	4	->
water	11:37	0:0	4	i_ssnd_start
decl	12:12	12:99	4	int64_t	i_end
op	12:28	0:0	4	=
water	12:30	0:0	4	p_sys
op	12:35	0:0	4	->
water	12:37	0:0	4	i_ssnd_end
op	12:48	0:0	4	>
water	12:50	0:0	4	0
water	12:52	0:0	4	?
water	12:54	0:0	4	p_sys
op	12:59	0:0	4	->
water	12:61	0:0	4	i_ssnd_end
water	12:72	0:0	4	:
call	12:74	12:98	5	stream_Size
arg	12:87	12:98	6	p_demux->s
water	12:87	0:0	7	p_demux
op	12:94	0:0	7	->
water	12:96	0:0	7	s
decl	13:12	13:55	4	int64_t	i_tell
op	13:28	0:0	4	=
call	13:30	13:54	5	stream_Tell
arg	13:43	13:54	6	p_demux->s
water	13:43	0:0	7	p_demux
op	13:50	0:0	7	->
water	13:52	0:0	7	s
water	14:12	0:0	4	pf
op	14:15	0:0	4	=
water	14:17	0:0	4	(
water	14:18	0:0	4	double
op	14:24	0:0	4	*
water	14:25	0:0	4	)
call	14:27	14:49	4	va_arg
arg	14:35	14:39	5	args
water	14:35	0:0	6	args
arg	14:41	14:49	5	double*
water	14:41	0:0	6	double
op	14:47	0:0	6	*
water	14:50	0:0	4	;
if	15:12	19:12	4	(i_start < i_end)
cond	15:16	15:26	5	i_start < i_end
water	15:16	0:0	6	i_start
op	15:24	0:0	6	<
water	15:26	0:0	6	i_end
stmts	16:12	19:12	5	
water	16:12	0:0	6	{
op	17:16	0:0	6	*
water	17:17	0:0	6	pf
op	17:20	0:0	6	=
call	17:22	17:47	6	(double)
arg	17:31	17:47	7	i_tell-i_start
water	17:31	0:0	8	i_tell
op	17:38	0:0	8	-
water	17:40	0:0	8	i_start
op	17:48	0:0	6	/
call	17:49	17:73	6	(double)
arg	17:58	17:73	7	i_end-i_start
water	17:58	0:0	8	i_end
op	17:64	0:0	8	-
water	17:66	0:0	8	i_start
water	17:74	0:0	6	;
return	18:16	18:34	6	VLC_SUCCESS
water	18:23	0:0	7	VLC_SUCCESS
water	19:12	0:0	6	}
return	20:12	20:31	4	VLC_EGENERIC
water	20:19	0:0	5	VLC_EGENERIC
water	21:8	0:0	4	}
label	22:8	22:31	4	case DEMUX_SET_POSITION :
water	23:8	0:0	4	{
decl	24:12	24:49	4	int64_t	i_start
op	24:28	0:0	4	=
water	24:30	0:0	4	p_sys
op	24:35	0:0	4	->
water	24:37	0:0	4	i_ssnd_start
decl	25:12	25:98	4	int64_t	i_end
op	25:27	0:0	4	=
water	25:29	0:0	4	p_sys
op	25:34	0:0	4	->
water	25:36	0:0	4	i_ssnd_end
op	25:47	0:0	4	>
water	25:49	0:0	4	0
water	25:51	0:0	4	?
water	25:53	0:0	4	p_sys
op	25:58	0:0	4	->
water	25:60	0:0	4	i_ssnd_end
water	25:71	0:0	4	:
call	25:73	25:97	5	stream_Size
arg	25:86	25:97	6	p_demux->s
water	25:86	0:0	7	p_demux
op	25:93	0:0	7	->
water	25:95	0:0	7	s
water	26:12	0:0	4	f
op	26:14	0:0	4	=
water	26:16	0:0	4	(
water	26:17	0:0	4	double
water	26:23	0:0	4	)
call	26:25	26:46	4	va_arg
arg	26:33	26:37	5	args
water	26:33	0:0	6	args
arg	26:39	26:46	5	double
water	26:39	0:0	6	double
water	26:47	0:0	4	;
if	27:12	37:12	4	(i_start < i_end)
cond	27:16	27:26	5	i_start < i_end
water	27:16	0:0	6	i_start
op	27:24	0:0	6	<
water	27:26	0:0	6	i_end
stmts	28:12	37:12	5	
water	28:12	0:0	6	{
decl	29:16	29:81	6	int	i_frame
op	29:32	0:0	6	=
water	29:34	0:0	6	(
water	29:35	0:0	6	f
op	29:37	0:0	6	*
water	29:39	0:0	6	(
water	29:41	0:0	6	i_end
op	29:47	0:0	6	-
water	29:49	0:0	6	i_start
water	29:57	0:0	6	)
water	29:58	0:0	6	)
op	29:60	0:0	6	/
water	29:62	0:0	6	p_sys
op	29:67	0:0	6	->
water	29:69	0:0	6	i_ssnd_fsize
decl	30:16	30:73	6	int64_t	i_new
op	30:32	0:0	6	=
water	30:34	0:0	6	i_start
op	30:42	0:0	6	+
water	30:44	0:0	6	i_frame
op	30:52	0:0	6	*
water	30:54	0:0	6	p_sys
op	30:59	0:0	6	->
water	30:61	0:0	6	i_ssnd_fsize
if	31:16	34:16	6	(stream_Seek (p_demux -> s ,i_new ))
cond	31:20	31:51	7	stream_Seek (p_demux -> s ,i_new )
call	31:20	31:51	8	stream_Seek
arg	31:33	31:43	9	p_demux->s
water	31:33	0:0	10	p_demux
op	31:40	0:0	10	->
water	31:42	0:0	10	s
arg	31:45	31:51	9	i_new
water	31:45	0:0	10	i_new
stmts	32:16	34:16	7	
water	32:16	0:0	8	{
return	33:20	33:39	8	VLC_EGENERIC
water	33:27	0:0	9	VLC_EGENERIC
water	34:16	0:0	8	}
water	35:16	0:0	6	p_sys
op	35:21	0:0	6	->
water	35:23	0:0	6	i_time
op	35:30	0:0	6	=
water	35:32	0:0	6	(
water	35:33	0:0	6	int64_t
water	35:40	0:0	6	)
water	35:41	0:0	6	1000000
op	35:49	0:0	6	*
water	35:51	0:0	6	i_frame
op	35:59	0:0	6	/
water	35:61	0:0	6	p_sys
op	35:66	0:0	6	->
water	35:68	0:0	6	fmt
op	35:71	0:0	6	.
water	35:72	0:0	6	audio
op	35:77	0:0	6	.
water	35:78	0:0	6	i_rate
water	35:84	0:0	6	;
return	36:16	36:34	6	VLC_SUCCESS
water	36:23	0:0	7	VLC_SUCCESS
water	37:12	0:0	6	}
return	38:12	38:31	4	VLC_EGENERIC
water	38:19	0:0	5	VLC_EGENERIC
water	39:8	0:0	4	}
label	40:8	40:27	4	case DEMUX_GET_TIME :
water	41:12	0:0	4	pi64
op	41:17	0:0	4	=
water	41:19	0:0	4	(
water	41:20	0:0	4	int64_t
op	41:27	0:0	4	*
water	41:28	0:0	4	)
call	41:29	41:53	4	va_arg
arg	41:37	41:41	5	args
water	41:37	0:0	6	args
arg	41:43	41:53	5	int64_t*
water	41:43	0:0	6	int64_t
op	41:51	0:0	6	*
water	41:54	0:0	4	;
op	42:12	0:0	4	*
water	42:13	0:0	4	pi64
op	42:18	0:0	4	=
water	42:20	0:0	4	p_sys
op	42:25	0:0	4	->
water	42:27	0:0	4	i_time
water	42:33	0:0	4	;
return	43:12	43:30	4	VLC_SUCCESS
water	43:19	0:0	5	VLC_SUCCESS
label	44:8	44:29	4	case DEMUX_GET_LENGTH :
water	45:8	0:0	4	{
decl	46:12	46:98	4	int64_t	i_end
op	46:27	0:0	4	=
water	46:29	0:0	4	p_sys
op	46:34	0:0	4	->
water	46:36	0:0	4	i_ssnd_end
op	46:47	0:0	4	>
water	46:49	0:0	4	0
water	46:51	0:0	4	?
water	46:53	0:0	4	p_sys
op	46:58	0:0	4	->
water	46:60	0:0	4	i_ssnd_end
water	46:71	0:0	4	:
call	46:73	46:97	5	stream_Size
arg	46:86	46:97	6	p_demux->s
water	46:86	0:0	7	p_demux
op	46:93	0:0	7	->
water	46:95	0:0	7	s
water	47:12	0:0	4	pi64
op	47:17	0:0	4	=
water	47:19	0:0	4	(
water	47:20	0:0	4	int64_t
op	47:27	0:0	4	*
water	47:28	0:0	4	)
call	47:29	47:53	4	va_arg
arg	47:37	47:41	5	args
water	47:37	0:0	6	args
arg	47:43	47:53	5	int64_t*
water	47:43	0:0	6	int64_t
op	47:51	0:0	6	*
water	47:54	0:0	4	;
if	48:12	52:12	4	(p_sys -> i_ssnd_start < i_end)
cond	48:16	48:38	5	p_sys -> i_ssnd_start < i_end
water	48:16	0:0	6	p_sys
op	48:21	0:0	6	->
water	48:23	0:0	6	i_ssnd_start
op	48:36	0:0	6	<
water	48:38	0:0	6	i_end
stmts	49:12	52:12	5	
water	49:12	0:0	6	{
op	50:16	0:0	6	*
water	50:17	0:0	6	pi64
op	50:22	0:0	6	=
water	50:24	0:0	6	(
water	50:25	0:0	6	int64_t
water	50:32	0:0	6	)
water	50:33	0:0	6	1000000
op	50:41	0:0	6	*
water	50:43	0:0	6	(
water	50:45	0:0	6	i_end
op	50:51	0:0	6	-
water	50:53	0:0	6	p_sys
op	50:58	0:0	6	->
water	50:60	0:0	6	i_ssnd_start
water	50:73	0:0	6	)
op	50:75	0:0	6	/
water	50:77	0:0	6	p_sys
op	50:82	0:0	6	->
water	50:84	0:0	6	i_ssnd_fsize
op	50:97	0:0	6	/
water	50:99	0:0	6	p_sys
op	50:104	0:0	6	->
water	50:106	0:0	6	fmt
op	50:109	0:0	6	.
water	50:110	0:0	6	audio
op	50:115	0:0	6	.
water	50:116	0:0	6	i_rate
water	50:122	0:0	6	;
return	51:16	51:34	6	VLC_SUCCESS
water	51:23	0:0	7	VLC_SUCCESS
water	52:12	0:0	6	}
return	53:12	53:31	4	VLC_EGENERIC
water	53:19	0:0	5	VLC_EGENERIC
water	54:8	0:0	4	}
label	55:8	55:27	4	case DEMUX_SET_TIME :
label	56:8	56:26	4	case DEMUX_GET_FPS :
label	57:8	57:15	4	default :
return	58:12	58:31	4	VLC_EGENERIC
water	58:19	0:0	5	VLC_EGENERIC
water	59:4	0:0	4	}

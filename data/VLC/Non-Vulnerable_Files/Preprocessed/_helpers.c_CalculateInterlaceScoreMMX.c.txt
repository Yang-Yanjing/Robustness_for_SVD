func	2:0	106:0	0	static int	CalculateInterlaceScoreMMX
params	2:37	0:0	1	
param	2:39	2:65	2	const picture_t *	p_pic_top
param	3:39	3:66	2	const picture_t *	p_pic_bot
stmnts	5:4	105:38	1	
call	5:4	5:55	2	assert
arg	5:12	5:55	3	p_pic_top->i_planes==p_pic_bot->i_planes
water	5:12	0:0	4	p_pic_top
op	5:21	0:0	4	->
water	5:23	0:0	4	i_planes
op	5:32	0:0	4	==
water	5:35	0:0	4	p_pic_bot
op	5:44	0:0	4	->
water	5:46	0:0	4	i_planes
water	5:56	0:0	2	;
decl	8:4	8:27	2	int32_t	i_score_mmx
op	8:24	0:0	2	=
water	8:26	0:0	2	0
decl	9:4	9:27	2	int32_t	i_score_c
op	9:24	0:0	2	=
water	9:26	0:0	2	0
call	10:4	10:23	2	pxor_r2r
arg	10:14	10:17	3	mm7
water	10:14	0:0	4	mm7
arg	10:19	10:23	3	mm7
water	10:19	0:0	4	mm7
water	10:24	0:0	2	;
for	11:4	102:4	2	( int i_plane = 0 ;i_plane < p_pic_top -> i_planes;++ i_plane)
forinit	0:0	11:25	3	 int i_plane = 0 ;
decl	11:9	11:25	4	int	i_plane
op	11:21	0:0	4	=
water	11:23	0:0	4	0
cond	11:27	11:48	3	i_plane < p_pic_top -> i_planes
water	11:27	0:0	4	i_plane
op	11:35	0:0	4	<
water	11:37	0:0	4	p_pic_top
op	11:46	0:0	4	->
water	11:48	0:0	4	i_planes
forexpr	11:59	11:61	3	++ i_plane
op	11:59	0:0	4	++
water	11:61	0:0	4	i_plane
stmts	12:4	102:4	3	
water	12:4	0:0	4	{
if	14:8	16:21	4	(p_pic_top -> p [ i_plane ] . i_visible_lines != p_pic_bot -> p [ i_plane ] . i_visible_lines)
cond	14:12	15:34	5	p_pic_top -> p [ i_plane ] . i_visible_lines != p_pic_bot -> p [ i_plane ] . i_visible_lines
water	14:12	0:0	6	p_pic_top
op	14:21	0:0	6	->
water	14:23	0:0	6	p
op	14:24	0:0	6	[
water	14:25	0:0	6	i_plane
op	14:32	0:0	6	]
op	14:33	0:0	6	.
water	14:34	0:0	6	i_visible_lines
op	14:50	0:0	6	!=
water	15:12	0:0	6	p_pic_bot
op	15:21	0:0	6	->
water	15:23	0:0	6	p
op	15:24	0:0	6	[
water	15:25	0:0	6	i_plane
op	15:32	0:0	6	]
op	15:33	0:0	6	.
water	15:34	0:0	6	i_visible_lines
stmts	16:12	16:21	5	
return	16:12	16:21	6	-1
op	16:19	0:0	7	-
water	16:20	0:0	7	1
decl	17:8	17:67	4	const int	i_lasty
op	17:26	0:0	4	=
water	17:28	0:0	4	p_pic_top
op	17:37	0:0	4	->
water	17:39	0:0	4	p
op	17:40	0:0	4	[
water	17:41	0:0	4	i_plane
op	17:48	0:0	4	]
op	17:49	0:0	4	.
water	17:50	0:0	4	i_visible_lines
op	17:65	0:0	4	-
water	17:66	0:0	4	1
decl	18:8	19:68	4	const int	w
op	18:20	0:0	4	=
call	18:22	19:67	5	FFMIN
arg	18:29	18:66	6	p_pic_top->p[i_plane].i_visible_pitch
water	18:29	0:0	7	p_pic_top
op	18:38	0:0	7	->
water	18:40	0:0	7	p
op	18:41	0:0	7	[
water	18:42	0:0	7	i_plane
op	18:49	0:0	7	]
op	18:50	0:0	7	.
water	18:51	0:0	7	i_visible_pitch
arg	19:29	19:67	6	p_pic_bot->p[i_plane].i_visible_pitch
water	19:29	0:0	7	p_pic_bot
op	19:38	0:0	7	->
water	19:40	0:0	7	p
op	19:41	0:0	7	[
water	19:42	0:0	7	i_plane
op	19:49	0:0	7	]
op	19:50	0:0	7	.
water	19:51	0:0	7	i_visible_pitch
decl	20:8	20:29	4	const int	wm8
op	20:22	0:0	4	=
water	20:24	0:0	4	w
op	20:26	0:0	4	%
water	20:28	0:0	4	8
decl	21:8	21:31	4	const int	w8
op	21:22	0:0	4	=
water	21:24	0:0	4	w
op	21:26	0:0	4	-
water	21:28	0:0	4	wm8
decl	23:8	23:40	4	const picture_t	*cur
op	23:29	0:0	4	=
water	23:31	0:0	4	p_pic_bot
decl	24:8	24:40	4	const picture_t	*ngh
op	24:29	0:0	4	=
water	24:31	0:0	4	p_pic_top
decl	25:8	25:40	4	int	wc
op	25:15	0:0	4	=
water	25:17	0:0	4	cur
op	25:20	0:0	4	->
water	25:22	0:0	4	p
op	25:23	0:0	4	[
water	25:24	0:0	4	i_plane
op	25:31	0:0	4	]
op	25:32	0:0	4	.
water	25:33	0:0	4	i_pitch
decl	26:8	26:40	4	int	wn
op	26:15	0:0	4	=
water	26:17	0:0	4	ngh
op	26:20	0:0	4	->
water	26:22	0:0	4	p
op	26:23	0:0	4	[
water	26:24	0:0	4	i_plane
op	26:31	0:0	4	]
op	26:32	0:0	4	.
water	26:33	0:0	4	i_pitch
for	31:8	101:8	4	( int y = 1 ;y < i_lasty;++ y)
forinit	0:0	31:22	5	 int y = 1 ;
decl	31:13	31:22	6	int	y
op	31:19	0:0	6	=
water	31:21	0:0	6	1
cond	31:24	31:28	5	y < i_lasty
water	31:24	0:0	6	y
op	31:26	0:0	6	<
water	31:28	0:0	6	i_lasty
forexpr	31:37	31:39	5	++ y
op	31:37	0:0	6	++
water	31:39	0:0	6	y
stmts	32:8	101:8	5	
water	32:8	0:0	6	{
decl	33:12	33:58	6	uint8_t	*p_c
op	33:25	0:0	6	=
op	33:27	0:0	6	&
water	33:28	0:0	6	cur
op	33:31	0:0	6	->
water	33:33	0:0	6	p
op	33:34	0:0	6	[
water	33:35	0:0	6	i_plane
op	33:42	0:0	6	]
op	33:43	0:0	6	.
water	33:44	0:0	6	p_pixels
op	33:52	0:0	6	[
water	33:53	0:0	6	y
op	33:54	0:0	6	*
water	33:55	0:0	6	wc
op	33:57	0:0	6	]
decl	34:12	34:62	6	uint8_t	*p_p
op	34:25	0:0	6	=
op	34:27	0:0	6	&
water	34:28	0:0	6	ngh
op	34:31	0:0	6	->
water	34:33	0:0	6	p
op	34:34	0:0	6	[
water	34:35	0:0	6	i_plane
op	34:42	0:0	6	]
op	34:43	0:0	6	.
water	34:44	0:0	6	p_pixels
op	34:52	0:0	6	[
water	34:53	0:0	6	(
water	34:54	0:0	6	y
op	34:55	0:0	6	-
water	34:56	0:0	6	1
water	34:57	0:0	6	)
op	34:58	0:0	6	*
water	34:59	0:0	6	wn
op	34:61	0:0	6	]
decl	35:12	35:62	6	uint8_t	*p_n
op	35:25	0:0	6	=
op	35:27	0:0	6	&
water	35:28	0:0	6	ngh
op	35:31	0:0	6	->
water	35:33	0:0	6	p
op	35:34	0:0	6	[
water	35:35	0:0	6	i_plane
op	35:42	0:0	6	]
op	35:43	0:0	6	.
water	35:44	0:0	6	p_pixels
op	35:52	0:0	6	[
water	35:53	0:0	6	(
water	35:54	0:0	6	y
op	35:55	0:0	6	+
water	35:56	0:0	6	1
water	35:57	0:0	6	)
op	35:58	0:0	6	*
water	35:59	0:0	6	wn
op	35:61	0:0	6	]
decl	36:12	36:21	6	int	x
op	36:18	0:0	6	=
water	36:20	0:0	6	0
water	42:12	0:0	6	static
water	42:19	0:0	6	const
water	42:25	0:0	6	mmx_t
water	42:31	0:0	6	b0
op	42:36	0:0	6	=
water	42:38	0:0	6	{
op	42:40	0:0	6	.
water	42:41	0:0	6	uq
op	42:44	0:0	6	=
water	42:46	0:0	6	0
water	42:47	0:0	6	x0000000000000000ULL
water	42:68	0:0	6	}
water	42:69	0:0	6	;
water	43:12	0:0	6	static
water	43:19	0:0	6	const
water	43:25	0:0	6	mmx_t
water	43:31	0:0	6	b128
op	43:36	0:0	6	=
water	43:38	0:0	6	{
op	43:40	0:0	6	.
water	43:41	0:0	6	uq
op	43:44	0:0	6	=
water	43:46	0:0	6	0
water	43:47	0:0	6	x8080808080808080ULL
water	43:68	0:0	6	}
water	43:69	0:0	6	;
water	44:12	0:0	6	static
water	44:19	0:0	6	const
water	44:25	0:0	6	mmx_t
water	44:31	0:0	6	bT
op	44:36	0:0	6	=
water	44:38	0:0	6	{
op	44:40	0:0	6	.
water	44:41	0:0	6	ub
op	44:44	0:0	6	=
water	44:46	0:0	6	{
water	44:48	0:0	6	T
water	44:49	0:0	6	,
water	44:51	0:0	6	T
water	44:52	0:0	6	,
water	44:54	0:0	6	T
water	44:55	0:0	6	,
water	44:57	0:0	6	T
water	44:58	0:0	6	,
water	44:60	0:0	6	T
water	44:61	0:0	6	,
water	44:63	0:0	6	T
water	44:64	0:0	6	,
water	44:66	0:0	6	T
water	44:67	0:0	6	,
water	44:69	0:0	6	T
water	44:71	0:0	6	}
water	44:73	0:0	6	}
water	44:74	0:0	6	;
for	45:12	72:12	6	(;x < w8;x += 8)
forinit	45:17	45:17	7	;
water	45:17	0:0	8	;
cond	45:19	45:23	7	x < w8
water	45:19	0:0	8	x
op	45:21	0:0	8	<
water	45:23	0:0	8	w8
forexpr	45:27	45:32	7	x += 8
water	45:27	0:0	8	x
op	45:29	0:0	8	+=
water	45:32	0:0	8	8
stmts	46:12	72:12	7	
water	46:12	0:0	8	{
call	47:16	47:48	8	movq_m2r
arg	47:26	47:42	9	*((int64_t*)p_c)
op	47:26	0:0	10	*
water	47:27	0:0	10	(
water	47:28	0:0	10	(
water	47:29	0:0	10	int64_t
op	47:36	0:0	10	*
water	47:37	0:0	10	)
water	47:38	0:0	10	p_c
water	47:41	0:0	10	)
arg	47:44	47:48	9	mm0
water	47:44	0:0	10	mm0
water	47:49	0:0	8	;
call	48:16	48:48	8	movq_m2r
arg	48:26	48:42	9	*((int64_t*)p_p)
op	48:26	0:0	10	*
water	48:27	0:0	10	(
water	48:28	0:0	10	(
water	48:29	0:0	10	int64_t
op	48:36	0:0	10	*
water	48:37	0:0	10	)
water	48:38	0:0	10	p_p
water	48:41	0:0	10	)
arg	48:44	48:48	9	mm1
water	48:44	0:0	10	mm1
water	48:49	0:0	8	;
call	49:16	49:48	8	movq_m2r
arg	49:26	49:42	9	*((int64_t*)p_n)
op	49:26	0:0	10	*
water	49:27	0:0	10	(
water	49:28	0:0	10	(
water	49:29	0:0	10	int64_t
op	49:36	0:0	10	*
water	49:37	0:0	10	)
water	49:38	0:0	10	p_n
water	49:41	0:0	10	)
arg	49:44	49:48	9	mm2
water	49:44	0:0	10	mm2
water	49:49	0:0	8	;
call	50:16	50:37	8	psubb_m2r
arg	50:27	50:31	9	b128
water	50:27	0:0	10	b128
arg	50:33	50:37	9	mm0
water	50:33	0:0	10	mm0
water	50:38	0:0	8	;
call	51:16	51:37	8	psubb_m2r
arg	51:27	51:31	9	b128
water	51:27	0:0	10	b128
arg	51:33	51:37	9	mm1
water	51:33	0:0	10	mm1
water	51:38	0:0	8	;
call	52:16	52:37	8	psubb_m2r
arg	52:27	52:31	9	b128
water	52:27	0:0	10	b128
arg	52:33	52:37	9	mm2
water	52:33	0:0	10	mm2
water	52:38	0:0	8	;
call	53:16	53:37	8	psubsb_r2r
arg	53:28	53:31	9	mm0
water	53:28	0:0	10	mm0
arg	53:33	53:37	9	mm1
water	53:33	0:0	10	mm1
water	53:38	0:0	8	;
call	54:16	54:37	8	psubsb_r2r
arg	54:28	54:31	9	mm0
water	54:28	0:0	10	mm0
arg	54:33	54:37	9	mm2
water	54:33	0:0	10	mm2
water	54:38	0:0	8	;
call	55:16	55:35	8	pxor_r2r
arg	55:26	55:29	9	mm3
water	55:26	0:0	10	mm3
arg	55:31	55:35	9	mm3
water	55:31	0:0	10	mm3
water	55:36	0:0	8	;
call	56:16	56:35	8	pxor_r2r
arg	56:26	56:29	9	mm4
water	56:26	0:0	10	mm4
arg	56:31	56:35	9	mm4
water	56:31	0:0	10	mm4
water	56:36	0:0	8	;
call	57:16	57:35	8	pxor_r2r
arg	57:26	57:29	9	mm5
water	57:26	0:0	10	mm5
arg	57:31	57:35	9	mm5
water	57:31	0:0	10	mm5
water	57:36	0:0	8	;
call	58:16	58:35	8	pxor_r2r
arg	58:26	58:29	9	mm6
water	58:26	0:0	10	mm6
arg	58:31	58:35	9	mm6
water	58:31	0:0	10	mm6
water	58:36	0:0	8	;
call	59:16	59:40	8	punpcklbw_r2r
arg	59:31	59:34	9	mm1
water	59:31	0:0	10	mm1
arg	59:36	59:40	9	mm3
water	59:36	0:0	10	mm3
water	59:41	0:0	8	;
call	60:16	60:40	8	punpcklbw_r2r
arg	60:31	60:34	9	mm2
water	60:31	0:0	10	mm2
arg	60:36	60:40	9	mm4
water	60:36	0:0	10	mm4
water	60:41	0:0	8	;
call	61:16	61:40	8	punpckhbw_r2r
arg	61:31	61:34	9	mm1
water	61:31	0:0	10	mm1
arg	61:36	61:40	9	mm5
water	61:36	0:0	10	mm5
water	61:41	0:0	8	;
call	62:16	62:40	8	punpckhbw_r2r
arg	62:31	62:34	9	mm2
water	62:31	0:0	10	mm2
arg	62:36	62:40	9	mm6
water	62:36	0:0	10	mm6
water	62:41	0:0	8	;
call	63:16	63:37	8	pmulhw_r2r
arg	63:28	63:31	9	mm3
water	63:28	0:0	10	mm3
arg	63:33	63:37	9	mm4
water	63:33	0:0	10	mm4
water	63:38	0:0	8	;
call	64:16	64:37	8	pmulhw_r2r
arg	64:28	64:31	9	mm5
water	64:28	0:0	10	mm5
arg	64:33	64:37	9	mm6
water	64:33	0:0	10	mm6
water	64:38	0:0	8	;
call	65:16	65:37	8	packsswb_r2r
arg	65:29	65:32	9	mm4
water	65:29	0:0	10	mm4
arg	65:34	65:37	9	mm6
water	65:34	0:0	10	mm6
water	65:38	0:0	8	;
call	66:16	66:37	8	pcmpgtb_m2r
arg	66:29	66:31	9	bT
water	66:29	0:0	10	bT
arg	66:33	66:37	9	mm6
water	66:33	0:0	10	mm6
water	66:38	0:0	8	;
call	67:16	67:36	8	psadbw_m2r
arg	67:28	67:30	9	b0
water	67:28	0:0	10	b0
arg	67:32	67:36	9	mm6
water	67:32	0:0	10	mm6
water	67:37	0:0	8	;
call	68:16	68:36	8	paddd_r2r
arg	68:27	68:30	9	mm6
water	68:27	0:0	10	mm6
arg	68:32	68:36	9	mm7
water	68:32	0:0	10	mm7
water	68:37	0:0	8	;
water	69:16	0:0	8	p_c
op	69:20	0:0	8	+=
water	69:23	0:0	8	8
water	69:24	0:0	8	;
water	70:16	0:0	8	p_p
op	70:20	0:0	8	+=
water	70:23	0:0	8	8
water	70:24	0:0	8	;
water	71:16	0:0	8	p_n
op	71:20	0:0	8	+=
water	71:23	0:0	8	8
water	71:24	0:0	8	;
water	72:12	0:0	8	}
for	73:12	93:12	6	(;x < w;++ x)
forinit	73:17	73:17	7	;
water	73:17	0:0	8	;
cond	73:19	73:23	7	x < w
water	73:19	0:0	8	x
op	73:21	0:0	8	<
water	73:23	0:0	8	w
forexpr	73:26	73:28	7	++ x
op	73:26	0:0	8	++
water	73:28	0:0	8	x
stmts	74:12	93:12	7	
water	74:12	0:0	8	{
decl	76:16	76:37	8	int_fast32_t	C
op	76:31	0:0	8	=
op	76:33	0:0	8	*
water	76:34	0:0	8	p_c
decl	77:16	77:37	8	int_fast32_t	P
op	77:31	0:0	8	=
op	77:33	0:0	8	*
water	77:34	0:0	8	p_p
decl	78:16	78:37	8	int_fast32_t	N
op	78:31	0:0	8	=
op	78:33	0:0	8	*
water	78:34	0:0	8	p_n
decl	87:16	87:53	8	int_fast32_t	comb
op	87:34	0:0	8	=
water	87:36	0:0	8	(
water	87:37	0:0	8	P
op	87:39	0:0	8	-
water	87:41	0:0	8	C
water	87:42	0:0	8	)
op	87:44	0:0	8	*
water	87:46	0:0	8	(
water	87:47	0:0	8	N
op	87:49	0:0	8	-
water	87:51	0:0	8	C
water	87:52	0:0	8	)
if	88:16	89:31	8	(comb > T)
cond	88:20	88:27	9	comb > T
water	88:20	0:0	10	comb
op	88:25	0:0	10	>
water	88:27	0:0	10	T
stmts	89:20	89:31	9	
op	89:20	0:0	10	++
water	89:22	0:0	10	i_score_c
water	89:31	0:0	10	;
op	90:16	0:0	8	++
water	90:18	0:0	8	p_c
water	90:21	0:0	8	;
op	91:16	0:0	8	++
water	91:18	0:0	8	p_p
water	91:21	0:0	8	;
op	92:16	0:0	8	++
water	92:18	0:0	8	p_n
water	92:21	0:0	8	;
water	93:12	0:0	8	}
decl	95:12	95:38	6	const picture_t	*tmp
op	95:33	0:0	6	=
water	95:35	0:0	6	cur
water	96:12	0:0	6	cur
op	96:16	0:0	6	=
water	96:18	0:0	6	ngh
water	96:21	0:0	6	;
water	97:12	0:0	6	ngh
op	97:16	0:0	6	=
water	97:18	0:0	6	tmp
water	97:21	0:0	6	;
decl	98:12	98:30	6	int	tmp_pitch
op	98:26	0:0	6	=
water	98:28	0:0	6	wc
water	99:12	0:0	6	wc
op	99:15	0:0	6	=
water	99:17	0:0	6	wn
water	99:19	0:0	6	;
water	100:12	0:0	6	wn
op	100:15	0:0	6	=
water	100:17	0:0	6	tmp_pitch
water	100:26	0:0	6	;
water	101:8	0:0	6	}
water	102:4	0:0	4	}
call	103:4	103:31	2	movd_r2m
arg	103:14	103:17	3	mm7
water	103:14	0:0	4	mm7
arg	103:19	103:31	3	i_score_mmx
water	103:19	0:0	4	i_score_mmx
water	103:32	0:0	2	;
call	104:4	104:9	2	emms
water	104:10	0:0	2	;
return	105:4	105:38	2	i_score_mmx/255+i_score_c
water	105:11	0:0	3	i_score_mmx
op	105:22	0:0	3	/
water	105:23	0:0	3	255
op	105:27	0:0	3	+
water	105:29	0:0	3	i_score_c

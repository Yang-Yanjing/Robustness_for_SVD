func	1:0	11:0	0	static int	MarshalVolume
params	2:13	0:0	1	
param	2:15	2:36	2	intf_thread_t *	p_intf
param	2:38	2:65	2	DBusMessageIter *	container
stmnts	0:0	10:22	1	
decl	4:4	4:65	2	float	f_vol
op	4:16	0:0	2	=
call	4:18	4:64	3	playlist_VolumeGet
arg	4:38	4:64	4	p_intf->p_sys->p_playlist
water	4:38	0:0	5	p_intf
op	4:44	0:0	5	->
water	4:46	0:0	5	p_sys
op	4:51	0:0	5	->
water	4:53	0:0	5	p_playlist
if	5:4	6:19	2	(f_vol < 0 . f)
cond	5:8	5:18	3	f_vol < 0 . f
water	5:8	0:0	4	f_vol
op	5:14	0:0	4	<
water	5:16	0:0	4	0
op	5:17	0:0	4	.
water	5:18	0:0	4	f
stmts	6:8	6:19	3	
water	6:8	0:0	4	f_vol
op	6:14	0:0	4	=
water	6:16	0:0	4	1
op	6:17	0:0	4	.
water	6:18	0:0	4	f
water	6:19	0:0	4	;
decl	7:4	7:24	2	double	d_vol
op	7:17	0:0	2	=
water	7:19	0:0	2	f_vol
if	8:4	9:25	2	(!dbus_message_iter_append_basic (container ,DBUS_TYPE_DOUBLE ,& d_vol ))
cond	8:8	8:77	3	!dbus_message_iter_append_basic (container ,DBUS_TYPE_DOUBLE ,& d_vol )
op	8:8	0:0	4	!
call	8:9	8:77	4	dbus_message_iter_append_basic
arg	8:41	8:50	5	container
water	8:41	0:0	6	container
arg	8:52	8:68	5	DBUS_TYPE_DOUBLE
water	8:52	0:0	6	DBUS_TYPE_DOUBLE
arg	8:70	8:77	5	&d_vol
op	8:70	0:0	6	&
water	8:71	0:0	6	d_vol
stmts	9:8	9:25	3	
return	9:8	9:25	4	VLC_ENOMEM
water	9:15	0:0	5	VLC_ENOMEM
return	10:4	10:22	2	VLC_SUCCESS
water	10:11	0:0	3	VLC_SUCCESS

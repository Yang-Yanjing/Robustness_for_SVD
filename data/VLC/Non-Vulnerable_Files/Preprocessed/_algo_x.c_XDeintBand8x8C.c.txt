func	2:0	28:0	0	static inline void	XDeintBand8x8C
params	2:33	0:0	1	
param	2:35	2:47	2	uint8_t *	dst
param	2:49	2:58	2	int	i_dst
param	3:35	3:47	2	uint8_t *	src
param	3:49	3:58	2	int	i_src
param	4:35	4:50	2	const int	i_mbx
param	4:52	4:63	2	int	i_modx
stmnts	0:0	27:54	1	
decl	6:4	6:9	2	int	x
for	7:4	25:4	2	(x = 0 ;x < i_mbx;x ++)
forinit	7:9	7:14	3	x = 0 ;
water	7:9	0:0	4	x
op	7:11	0:0	4	=
water	7:13	0:0	4	0
water	7:14	0:0	4	;
cond	7:16	7:20	3	x < i_mbx
water	7:16	0:0	4	x
op	7:18	0:0	4	<
water	7:20	0:0	4	i_mbx
forexpr	7:27	7:28	3	x ++
water	7:27	0:0	4	x
op	7:28	0:0	4	++
stmts	8:4	25:4	3	
water	8:4	0:0	4	{
decl	9:8	9:13	4	int	s
if	10:8	16:8	4	(( s =XDeint8x8DetectC (src ,i_src ) ))
cond	10:12	10:49	5	( s =XDeint8x8DetectC (src ,i_src ) )
water	10:12	0:0	6	(
water	10:14	0:0	6	s
op	10:16	0:0	6	=
call	10:18	10:47	6	XDeint8x8DetectC
arg	10:36	10:39	7	src
water	10:36	0:0	8	src
arg	10:41	10:47	7	i_src
water	10:41	0:0	8	i_src
water	10:49	0:0	6	)
stmts	11:8	16:8	5	
water	11:8	0:0	6	{
if	12:12	13:58	6	(x == 0 || x == i_mbx - 1)
cond	12:16	12:39	7	x == 0 || x == i_mbx - 1
water	12:16	0:0	8	x
op	12:18	0:0	8	==
water	12:21	0:0	8	0
op	12:23	0:0	8	||
water	12:26	0:0	8	x
op	12:28	0:0	8	==
water	12:31	0:0	8	i_mbx
op	12:37	0:0	8	-
water	12:39	0:0	8	1
stmts	13:16	13:58	7	
call	13:16	13:57	8	XDeint8x8FieldEC
arg	13:34	13:37	9	dst
water	13:34	0:0	10	dst
arg	13:39	13:44	9	i_dst
water	13:39	0:0	10	i_dst
arg	13:46	13:49	9	src
water	13:46	0:0	10	src
arg	13:51	13:57	9	i_src
water	13:51	0:0	10	i_src
water	13:58	0:0	8	;
else	14:12	15:57	6
stmts	15:16	15:57	7	
call	15:16	15:56	8	XDeint8x8FieldC
arg	15:33	15:36	9	dst
water	15:33	0:0	10	dst
arg	15:38	15:43	9	i_dst
water	15:38	0:0	10	i_dst
arg	15:45	15:48	9	src
water	15:45	0:0	10	src
arg	15:50	15:56	9	i_src
water	15:50	0:0	10	i_src
water	15:57	0:0	8	;
water	16:8	0:0	6	}
else	17:8	22:8	4
stmts	18:8	22:8	5	
water	18:8	0:0	6	{
call	19:12	21:52	6	XDeint8x8MergeC
arg	19:29	19:32	7	dst
water	19:29	0:0	8	dst
arg	19:34	19:39	7	i_dst
water	19:34	0:0	8	i_dst
arg	20:29	20:42	7	&src[0*i_src]
op	20:29	0:0	8	&
water	20:30	0:0	8	src
op	20:33	0:0	8	[
water	20:34	0:0	8	0
op	20:35	0:0	8	*
water	20:36	0:0	8	i_src
op	20:41	0:0	8	]
arg	20:44	20:51	7	2*i_src
water	20:44	0:0	8	2
op	20:45	0:0	8	*
water	20:46	0:0	8	i_src
arg	21:29	21:42	7	&src[1*i_src]
op	21:29	0:0	8	&
water	21:30	0:0	8	src
op	21:33	0:0	8	[
water	21:34	0:0	8	1
op	21:35	0:0	8	*
water	21:36	0:0	8	i_src
op	21:41	0:0	8	]
arg	21:44	21:52	7	2*i_src
water	21:44	0:0	8	2
op	21:45	0:0	8	*
water	21:46	0:0	8	i_src
water	21:53	0:0	6	;
water	22:8	0:0	6	}
water	23:8	0:0	4	dst
op	23:12	0:0	4	+=
water	23:15	0:0	4	8
water	23:16	0:0	4	;
water	24:8	0:0	4	src
op	24:12	0:0	4	+=
water	24:15	0:0	4	8
water	24:16	0:0	4	;
water	25:4	0:0	4	}
if	26:4	27:54	2	(i_modx)
cond	26:8	26:8	3	i_modx
water	26:8	0:0	4	i_modx
stmts	27:8	27:54	3	
call	27:8	27:53	4	XDeintNxN
arg	27:19	27:22	5	dst
water	27:19	0:0	6	dst
arg	27:24	27:29	5	i_dst
water	27:24	0:0	6	i_dst
arg	27:31	27:34	5	src
water	27:31	0:0	6	src
arg	27:36	27:41	5	i_src
water	27:36	0:0	6	i_src
arg	27:43	27:49	5	i_modx
water	27:43	0:0	6	i_modx
arg	27:51	27:53	5	8
water	27:51	0:0	6	8
water	27:54	0:0	4	;
decl	34:4	34:9	0	int	x
decl	37:8	37:13	0	int	s

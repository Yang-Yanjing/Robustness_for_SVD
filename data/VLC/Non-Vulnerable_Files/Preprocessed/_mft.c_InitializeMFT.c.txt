decl	1:7	1:40	0	void	DestroyMFT
water	1:22	0:0	0	(
water	1:23	0:0	0	decoder_t
op	1:33	0:0	0	*
water	1:34	0:0	0	p_dec
water	1:39	0:0	0	)
func	2:0	93:0	0	static int	InitializeMFT
params	2:24	0:0	1	
param	2:25	2:41	2	decoder_t *	p_dec
stmnts	0:0	92:23	1	
decl	4:4	4:39	2	decoder_sys_t	*p_sys
op	4:25	0:0	2	=
water	4:27	0:0	2	p_dec
op	4:32	0:0	2	->
water	4:34	0:0	2	p_sys
decl	5:4	5:14	2	HRESULT	hr
decl	6:4	6:36	2	IMFAttributes	*attributes
op	6:30	0:0	2	=
water	6:32	0:0	2	NULL
water	7:4	0:0	2	hr
op	7:7	0:0	2	=
call	7:9	7:59	2	IMFTransform_GetAttributes
arg	7:36	7:46	3	p_sys->mft
water	7:36	0:0	4	p_sys
op	7:41	0:0	4	->
water	7:43	0:0	4	mft
arg	7:48	7:59	3	&attributes
op	7:48	0:0	4	&
water	7:49	0:0	4	attributes
water	7:60	0:0	2	;
if	8:4	9:18	2	(hr != E_NOTIMPL &&FAILED (hr ))
cond	8:8	8:36	3	hr != E_NOTIMPL &&FAILED (hr )
water	8:8	0:0	4	hr
op	8:11	0:0	4	!=
water	8:14	0:0	4	E_NOTIMPL
op	8:24	0:0	4	&&
call	8:27	8:36	4	FAILED
arg	8:34	8:36	5	hr
water	8:34	0:0	6	hr
stmts	9:8	9:18	3	
goto	9:8	9:18	4	error
water	9:13	0:0	5	error
if	10:4	26:4	2	(SUCCEEDED (hr ))
cond	10:8	10:20	3	SUCCEEDED (hr )
call	10:8	10:20	4	SUCCEEDED
arg	10:18	10:20	5	hr
water	10:18	0:0	6	hr
stmts	11:4	26:4	3	
water	11:4	0:0	4	{
decl	12:8	12:31	4	UINT32	is_async
op	12:24	0:0	4	=
water	12:26	0:0	4	false
water	13:8	0:0	4	hr
op	13:11	0:0	4	=
call	13:13	13:79	4	IMFAttributes_GetUINT32
arg	13:37	13:47	5	attributes
water	13:37	0:0	6	attributes
arg	13:49	13:68	5	&MF_TRANSFORM_ASYNC
op	13:49	0:0	6	&
water	13:50	0:0	6	MF_TRANSFORM_ASYNC
arg	13:70	13:79	5	&is_async
op	13:70	0:0	6	&
water	13:71	0:0	6	is_async
water	13:80	0:0	4	;
if	14:8	15:22	4	(hr != MF_E_ATTRIBUTENOTFOUND &&FAILED (hr ))
cond	14:12	14:53	5	hr != MF_E_ATTRIBUTENOTFOUND &&FAILED (hr )
water	14:12	0:0	6	hr
op	14:15	0:0	6	!=
water	14:18	0:0	6	MF_E_ATTRIBUTENOTFOUND
op	14:41	0:0	6	&&
call	14:44	14:53	6	FAILED
arg	14:51	14:53	7	hr
water	14:51	0:0	8	hr
stmts	15:12	15:22	5	
goto	15:12	15:22	6	error
water	15:17	0:0	7	error
water	16:8	0:0	4	p_sys
op	16:13	0:0	4	->
water	16:15	0:0	4	is_async
op	16:24	0:0	4	=
water	16:26	0:0	4	is_async
water	16:34	0:0	4	;
if	17:8	25:8	4	(p_sys -> is_async)
cond	17:12	17:19	5	p_sys -> is_async
water	17:12	0:0	6	p_sys
op	17:17	0:0	6	->
water	17:19	0:0	6	is_async
stmts	18:8	25:8	5	
water	18:8	0:0	6	{
water	19:12	0:0	6	hr
op	19:15	0:0	6	=
call	19:17	19:85	6	IMFAttributes_SetUINT32
arg	19:41	19:51	7	attributes
water	19:41	0:0	8	attributes
arg	19:53	19:79	7	&MF_TRANSFORM_ASYNC_UNLOCK
op	19:53	0:0	8	&
water	19:54	0:0	8	MF_TRANSFORM_ASYNC_UNLOCK
arg	19:81	19:85	7	true
water	19:81	0:0	8	true
water	19:86	0:0	6	;
if	20:12	21:26	6	(FAILED (hr ))
cond	20:16	20:25	7	FAILED (hr )
call	20:16	20:25	8	FAILED
arg	20:23	20:25	9	hr
water	20:23	0:0	10	hr
stmts	21:16	21:26	7	
goto	21:16	21:26	8	error
water	21:21	0:0	9	error
water	22:12	0:0	6	hr
op	22:15	0:0	6	=
call	22:17	22:117	6	IMFTransform_QueryInterface
arg	22:45	22:55	7	p_sys->mft
water	22:45	0:0	8	p_sys
op	22:50	0:0	8	->
water	22:52	0:0	8	mft
arg	22:57	22:84	7	&IID_IMFMediaEventGenerator
op	22:57	0:0	8	&
water	22:58	0:0	8	IID_IMFMediaEventGenerator
arg	22:86	22:117	7	(void**)&p_sys->event_generator
water	22:86	0:0	8	(
water	22:87	0:0	8	void
op	22:91	0:0	8	*
op	22:92	0:0	8	*
water	22:93	0:0	8	)
op	22:94	0:0	8	&
water	22:95	0:0	8	p_sys
op	22:100	0:0	8	->
water	22:102	0:0	8	event_generator
water	22:118	0:0	6	;
if	23:12	24:26	6	(FAILED (hr ))
cond	23:16	23:25	7	FAILED (hr )
call	23:16	23:25	8	FAILED
arg	23:23	23:25	9	hr
water	23:23	0:0	10	hr
stmts	24:16	24:26	7	
goto	24:16	24:26	8	error
water	24:21	0:0	9	error
water	25:8	0:0	6	}
water	26:4	0:0	4	}
decl	27:4	27:29	2	DWORD	input_streams_count
decl	28:4	28:30	2	DWORD	output_streams_count
water	29:4	0:0	2	hr
op	29:7	0:0	2	=
call	29:9	29:92	2	IMFTransform_GetStreamCount
arg	29:37	29:47	3	p_sys->mft
water	29:37	0:0	4	p_sys
op	29:42	0:0	4	->
water	29:44	0:0	4	mft
arg	29:49	29:69	3	&input_streams_count
op	29:49	0:0	4	&
water	29:50	0:0	4	input_streams_count
arg	29:71	29:92	3	&output_streams_count
op	29:71	0:0	4	&
water	29:72	0:0	4	output_streams_count
water	29:93	0:0	2	;
if	30:4	31:18	2	(FAILED (hr ))
cond	30:8	30:17	3	FAILED (hr )
call	30:8	30:17	4	FAILED
arg	30:15	30:17	5	hr
water	30:15	0:0	6	hr
stmts	31:8	31:18	3	
goto	31:8	31:18	4	error
water	31:13	0:0	5	error
if	32:4	36:4	2	(input_streams_count != 1 || output_streams_count != 1)
cond	32:8	32:60	3	input_streams_count != 1 || output_streams_count != 1
water	32:8	0:0	4	input_streams_count
op	32:28	0:0	4	!=
water	32:31	0:0	4	1
op	32:33	0:0	4	||
water	32:36	0:0	4	output_streams_count
op	32:57	0:0	4	!=
water	32:60	0:0	4	1
stmts	33:4	36:4	3	
water	33:4	0:0	4	{
call	34:8	34:84	4	msg_Err
arg	34:16	34:21	5	p_dec
water	34:16	0:0	6	p_dec
arg	34:23	34:84	5	"MFT decoder should have 1 input stream and 1 output stream."
water	34:23	0:0	6	"MFT decoder should have 1 input stream and 1 output stream."
water	34:85	0:0	4	;
goto	35:8	35:18	4	error
water	35:13	0:0	5	error
water	36:4	0:0	4	}
water	37:4	0:0	2	hr
op	37:7	0:0	2	=
call	37:9	37:102	2	IMFTransform_GetStreamIDs
arg	37:35	37:45	3	p_sys->mft
water	37:35	0:0	4	p_sys
op	37:40	0:0	4	->
water	37:42	0:0	4	mft
arg	37:47	37:48	3	1
water	37:47	0:0	4	1
arg	37:50	37:73	3	&p_sys->input_stream_id
op	37:50	0:0	4	&
water	37:51	0:0	4	p_sys
op	37:56	0:0	4	->
water	37:58	0:0	4	input_stream_id
arg	37:75	37:76	3	1
water	37:75	0:0	4	1
arg	37:78	37:102	3	&p_sys->output_stream_id
op	37:78	0:0	4	&
water	37:79	0:0	4	p_sys
op	37:84	0:0	4	->
water	37:86	0:0	4	output_stream_id
water	37:103	0:0	2	;
if	38:4	48:4	2	(hr == E_NOTIMPL)
cond	38:8	38:14	3	hr == E_NOTIMPL
water	38:8	0:0	4	hr
op	38:11	0:0	4	==
water	38:14	0:0	4	E_NOTIMPL
stmts	39:4	48:4	3	
water	39:4	0:0	4	{
water	46:8	0:0	4	p_sys
op	46:13	0:0	4	->
water	46:15	0:0	4	input_stream_id
op	46:31	0:0	4	=
water	46:33	0:0	4	0
water	46:34	0:0	4	;
water	47:8	0:0	4	p_sys
op	47:13	0:0	4	->
water	47:15	0:0	4	output_stream_id
op	47:32	0:0	4	=
water	47:34	0:0	4	0
water	47:35	0:0	4	;
water	48:4	0:0	4	}
else	49:4	50:18	2
stmts	49:9	50:18	3	
if	49:9	50:18	4	(FAILED (hr ))
cond	49:13	49:22	5	FAILED (hr )
call	49:13	49:22	6	FAILED
arg	49:20	49:22	7	hr
water	49:20	0:0	8	hr
stmts	50:8	50:18	5	
goto	50:8	50:18	6	error
water	50:13	0:0	7	error
if	51:4	52:18	2	(SetInputType (p_dec ,p_sys -> input_stream_id ,& p_sys -> input_type ))
cond	51:8	51:70	3	SetInputType (p_dec ,p_sys -> input_stream_id ,& p_sys -> input_type )
call	51:8	51:70	4	SetInputType
arg	51:21	51:26	5	p_dec
water	51:21	0:0	6	p_dec
arg	51:28	51:50	5	p_sys->input_stream_id
water	51:28	0:0	6	p_sys
op	51:33	0:0	6	->
water	51:35	0:0	6	input_stream_id
arg	51:52	51:70	5	&p_sys->input_type
op	51:52	0:0	6	&
water	51:53	0:0	6	p_sys
op	51:58	0:0	6	->
water	51:60	0:0	6	input_type
stmts	52:8	52:18	3	
goto	52:8	52:18	4	error
water	52:13	0:0	5	error
if	53:4	54:18	2	(SetOutputType (p_dec ,p_sys -> output_stream_id ,& p_sys -> output_type ))
cond	53:8	53:73	3	SetOutputType (p_dec ,p_sys -> output_stream_id ,& p_sys -> output_type )
call	53:8	53:73	4	SetOutputType
arg	53:22	53:27	5	p_dec
water	53:22	0:0	6	p_dec
arg	53:29	53:52	5	p_sys->output_stream_id
water	53:29	0:0	6	p_sys
op	53:34	0:0	6	->
water	53:36	0:0	6	output_stream_id
arg	53:54	53:73	5	&p_sys->output_type
op	53:54	0:0	6	&
water	53:55	0:0	6	p_sys
op	53:60	0:0	6	->
water	53:62	0:0	6	output_type
stmts	54:8	54:18	3	
goto	54:8	54:18	4	error
water	54:13	0:0	5	error
if	59:4	61:22	2	(! p_sys -> input_type)
cond	59:8	59:16	3	! p_sys -> input_type
op	59:8	0:0	4	!
water	59:9	0:0	4	p_sys
op	59:14	0:0	4	->
water	59:16	0:0	4	input_type
stmts	60:8	61:22	3	
if	60:8	61:22	4	(SetInputType (p_dec ,p_sys -> input_stream_id ,& p_sys -> input_type ) || ! p_sys -> input_type)
cond	60:12	60:87	5	SetInputType (p_dec ,p_sys -> input_stream_id ,& p_sys -> input_type ) || ! p_sys -> input_type
call	60:12	60:74	6	SetInputType
arg	60:25	60:30	7	p_dec
water	60:25	0:0	8	p_dec
arg	60:32	60:54	7	p_sys->input_stream_id
water	60:32	0:0	8	p_sys
op	60:37	0:0	8	->
water	60:39	0:0	8	input_stream_id
arg	60:56	60:74	7	&p_sys->input_type
op	60:56	0:0	8	&
water	60:57	0:0	8	p_sys
op	60:62	0:0	8	->
water	60:64	0:0	8	input_type
op	60:76	0:0	6	||
op	60:79	0:0	6	!
water	60:80	0:0	6	p_sys
op	60:85	0:0	6	->
water	60:87	0:0	6	input_type
stmts	61:12	61:22	5	
goto	61:12	61:22	6	error
water	61:17	0:0	7	error
water	63:4	0:0	2	hr
op	63:7	0:0	2	=
call	63:9	63:97	2	IMFTransform_ProcessMessage
arg	63:37	63:47	3	p_sys->mft
water	63:37	0:0	4	p_sys
op	63:42	0:0	4	->
water	63:44	0:0	4	mft
arg	63:49	63:83	3	MFT_MESSAGE_NOTIFY_BEGIN_STREAMING
water	63:49	0:0	4	MFT_MESSAGE_NOTIFY_BEGIN_STREAMING
arg	63:85	63:97	3	(ULONG_PTR)0
water	63:85	0:0	4	(
water	63:86	0:0	4	ULONG_PTR
water	63:95	0:0	4	)
water	63:96	0:0	4	0
water	63:98	0:0	2	;
if	64:4	65:18	2	(FAILED (hr ))
cond	64:8	64:17	3	FAILED (hr )
call	64:8	64:17	4	FAILED
arg	64:15	64:17	5	hr
water	64:15	0:0	6	hr
stmts	65:8	65:18	3	
goto	65:8	65:18	4	error
water	65:13	0:0	5	error
water	67:4	0:0	2	hr
op	67:7	0:0	2	=
call	67:9	67:97	2	IMFTransform_ProcessMessage
arg	67:37	67:47	3	p_sys->mft
water	67:37	0:0	4	p_sys
op	67:42	0:0	4	->
water	67:44	0:0	4	mft
arg	67:49	67:83	3	MFT_MESSAGE_NOTIFY_START_OF_STREAM
water	67:49	0:0	4	MFT_MESSAGE_NOTIFY_START_OF_STREAM
arg	67:85	67:97	3	(ULONG_PTR)0
water	67:85	0:0	4	(
water	67:86	0:0	4	ULONG_PTR
water	67:95	0:0	4	)
water	67:96	0:0	4	0
water	67:98	0:0	2	;
if	68:4	69:18	2	(FAILED (hr ))
cond	68:8	68:17	3	FAILED (hr )
call	68:8	68:17	4	FAILED
arg	68:15	68:17	5	hr
water	68:15	0:0	6	hr
stmts	69:8	69:18	3	
goto	69:8	69:18	4	error
water	69:13	0:0	5	error
if	70:4	87:4	2	(p_dec -> fmt_in . i_codec == VLC_CODEC_H264)
cond	70:8	70:33	3	p_dec -> fmt_in . i_codec == VLC_CODEC_H264
water	70:8	0:0	4	p_dec
op	70:13	0:0	4	->
water	70:15	0:0	4	fmt_in
op	70:21	0:0	4	.
water	70:22	0:0	4	i_codec
op	70:30	0:0	4	==
water	70:33	0:0	4	VLC_CODEC_H264
stmts	71:4	87:4	3	
water	71:4	0:0	4	{
call	73:8	73:76	4	IMFAttributes_SetUINT32
arg	73:32	73:42	5	attributes
water	73:32	0:0	6	attributes
arg	73:44	73:70	5	&CODECAPI_AVLowLatencyMode
op	73:44	0:0	6	&
water	73:45	0:0	6	CODECAPI_AVLowLatencyMode
arg	73:72	73:76	5	true
water	73:72	0:0	6	true
water	73:77	0:0	4	;
if	74:8	86:8	4	(p_dec -> fmt_in . i_extra)
cond	74:12	74:26	5	p_dec -> fmt_in . i_extra
water	74:12	0:0	6	p_dec
op	74:17	0:0	6	->
water	74:19	0:0	6	fmt_in
op	74:25	0:0	6	.
water	74:26	0:0	6	i_extra
stmts	75:8	86:8	5	
water	75:8	0:0	6	{
decl	76:12	76:53	6	int	buf_size
op	76:25	0:0	6	=
water	76:27	0:0	6	p_dec
op	76:32	0:0	6	->
water	76:34	0:0	6	fmt_in
op	76:40	0:0	6	.
water	76:41	0:0	6	i_extra
op	76:49	0:0	6	+
water	76:51	0:0	6	20
decl	77:12	77:49	6	uint32_t	size
op	77:26	0:0	6	=
water	77:28	0:0	6	p_dec
op	77:33	0:0	6	->
water	77:35	0:0	6	fmt_in
op	77:41	0:0	6	.
water	77:42	0:0	6	i_extra
decl	78:12	78:43	6	uint8_t	*buf
op	78:25	0:0	6	=
call	78:27	78:42	7	malloc
arg	78:34	78:42	8	buf_size
water	78:34	0:0	9	buf_size
if	79:12	84:12	6	(( ( uint8_t * ) p_dec -> fmt_in . p_extra ) [ 0 ] == 1)
cond	79:16	79:56	7	( ( uint8_t * ) p_dec -> fmt_in . p_extra ) [ 0 ] == 1
water	79:16	0:0	8	(
water	79:17	0:0	8	(
water	79:18	0:0	8	uint8_t
op	79:25	0:0	8	*
water	79:26	0:0	8	)
water	79:27	0:0	8	p_dec
op	79:32	0:0	8	->
water	79:34	0:0	8	fmt_in
op	79:40	0:0	8	.
water	79:41	0:0	8	p_extra
water	79:48	0:0	8	)
op	79:49	0:0	8	[
water	79:50	0:0	8	0
op	79:51	0:0	8	]
op	79:53	0:0	8	==
water	79:56	0:0	8	1
stmts	80:12	84:12	7	
water	80:12	0:0	8	{
call	81:16	83:55	8	convert_sps_pps
arg	81:32	81:37	9	p_dec
water	81:32	0:0	10	p_dec
arg	81:39	81:60	9	p_dec->fmt_in.p_extra
water	81:39	0:0	10	p_dec
op	81:44	0:0	10	->
water	81:46	0:0	10	fmt_in
op	81:52	0:0	10	.
water	81:53	0:0	10	p_extra
arg	81:62	81:83	9	p_dec->fmt_in.i_extra
water	81:62	0:0	10	p_dec
op	81:67	0:0	10	->
water	81:69	0:0	10	fmt_in
op	81:75	0:0	10	.
water	81:76	0:0	10	i_extra
arg	82:32	82:35	9	buf
water	82:32	0:0	10	buf
arg	82:37	82:45	9	buf_size
water	82:37	0:0	10	buf_size
arg	83:32	83:37	9	&size
op	83:32	0:0	10	&
water	83:33	0:0	10	size
arg	83:39	83:55	9	&p_sys->nal_size
op	83:39	0:0	10	&
water	83:40	0:0	10	p_sys
op	83:45	0:0	10	->
water	83:47	0:0	10	nal_size
water	83:56	0:0	8	;
water	84:12	0:0	8	}
call	85:12	85:20	6	free
arg	85:17	85:20	7	buf
water	85:17	0:0	8	buf
water	85:21	0:0	6	;
water	86:8	0:0	6	}
water	87:4	0:0	4	}
return	88:4	88:22	2	VLC_SUCCESS
water	88:11	0:0	3	VLC_SUCCESS
label	89:0	89:5	2	error :
call	90:4	90:45	2	msg_Err
arg	90:12	90:17	3	p_dec
water	90:12	0:0	4	p_dec
arg	90:19	90:45	3	"Error in InitializeMFT()"
water	90:19	0:0	4	"Error in InitializeMFT()"
water	90:46	0:0	2	;
call	91:4	91:20	2	DestroyMFT
arg	91:15	91:20	3	p_dec
water	91:15	0:0	4	p_dec
water	91:21	0:0	2	;
return	92:4	92:23	2	VLC_EGENERIC
water	92:11	0:0	3	VLC_EGENERIC

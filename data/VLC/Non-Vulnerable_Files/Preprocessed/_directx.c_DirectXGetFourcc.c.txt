func	2:0	18:0	0	static DWORD	DirectXGetFourcc
params	2:29	0:0	1	
param	2:30	2:48	2	vlc_fourcc_t	codec
stmnts	4:4	17:12	1	
water	4:4	0:0	2	static
water	4:11	0:0	2	const
water	4:17	0:0	2	dx_format_t
water	4:29	0:0	2	dx_formats
op	4:39	0:0	2	[
op	4:40	0:0	2	]
op	4:42	0:0	2	=
water	4:44	0:0	2	{
water	5:8	0:0	2	{
water	5:10	0:0	2	VLC_CODEC_YUYV
water	5:24	0:0	2	,
call	5:26	5:52	2	MAKEFOURCC
arg	5:37	5:40	3	'Y'
water	5:37	0:0	4	'Y'
arg	5:41	5:44	3	'U'
water	5:41	0:0	4	'U'
arg	5:45	5:48	3	'Y'
water	5:45	0:0	4	'Y'
arg	5:49	5:52	3	'2'
water	5:49	0:0	4	'2'
water	5:54	0:0	2	}
water	5:55	0:0	2	,
water	6:8	0:0	2	{
water	6:10	0:0	2	VLC_CODEC_UYVY
water	6:24	0:0	2	,
call	6:26	6:52	2	MAKEFOURCC
arg	6:37	6:40	3	'U'
water	6:37	0:0	4	'U'
arg	6:41	6:44	3	'Y'
water	6:41	0:0	4	'Y'
arg	6:45	6:48	3	'V'
water	6:45	0:0	4	'V'
arg	6:49	6:52	3	'Y'
water	6:49	0:0	4	'Y'
water	6:54	0:0	2	}
water	6:55	0:0	2	,
water	7:8	0:0	2	{
water	7:10	0:0	2	VLC_CODEC_YVYU
water	7:24	0:0	2	,
call	7:26	7:52	2	MAKEFOURCC
arg	7:37	7:40	3	'Y'
water	7:37	0:0	4	'Y'
arg	7:41	7:44	3	'V'
water	7:41	0:0	4	'V'
arg	7:45	7:48	3	'Y'
water	7:45	0:0	4	'Y'
arg	7:49	7:52	3	'U'
water	7:49	0:0	4	'U'
water	7:54	0:0	2	}
water	7:55	0:0	2	,
water	8:8	0:0	2	{
water	8:10	0:0	2	VLC_CODEC_YV12
water	8:24	0:0	2	,
call	8:26	8:52	2	MAKEFOURCC
arg	8:37	8:40	3	'Y'
water	8:37	0:0	4	'Y'
arg	8:41	8:44	3	'V'
water	8:41	0:0	4	'V'
arg	8:45	8:48	3	'1'
water	8:45	0:0	4	'1'
arg	8:49	8:52	3	'2'
water	8:49	0:0	4	'2'
water	8:54	0:0	2	}
water	8:55	0:0	2	,
water	9:8	0:0	2	{
water	9:10	0:0	2	VLC_CODEC_I420
water	9:24	0:0	2	,
call	9:26	9:52	2	MAKEFOURCC
arg	9:37	9:40	3	'Y'
water	9:37	0:0	4	'Y'
arg	9:41	9:44	3	'V'
water	9:41	0:0	4	'V'
arg	9:45	9:48	3	'1'
water	9:45	0:0	4	'1'
arg	9:49	9:52	3	'2'
water	9:49	0:0	4	'2'
water	9:54	0:0	2	}
water	9:55	0:0	2	,
water	10:8	0:0	2	{
water	10:10	0:0	2	VLC_CODEC_J420
water	10:24	0:0	2	,
call	10:26	10:52	2	MAKEFOURCC
arg	10:37	10:40	3	'Y'
water	10:37	0:0	4	'Y'
arg	10:41	10:44	3	'V'
water	10:41	0:0	4	'V'
arg	10:45	10:48	3	'1'
water	10:45	0:0	4	'1'
arg	10:49	10:52	3	'2'
water	10:49	0:0	4	'2'
water	10:54	0:0	2	}
water	10:55	0:0	2	,
water	11:8	0:0	2	{
water	11:10	0:0	2	0
water	11:11	0:0	2	,
water	11:13	0:0	2	0
water	11:15	0:0	2	}
water	12:4	0:0	2	}
water	12:5	0:0	2	;
for	13:4	16:4	2	(unsigned i = 0 ;dx_formats [ i ] . codec != 0;i ++)
forinit	13:9	13:23	3	unsigned i = 0 ;
water	13:9	0:0	4	unsigned
water	13:18	0:0	4	i
op	13:20	0:0	4	=
water	13:22	0:0	4	0
water	13:23	0:0	4	;
cond	13:25	13:48	3	dx_formats [ i ] . codec != 0
water	13:25	0:0	4	dx_formats
op	13:35	0:0	4	[
water	13:36	0:0	4	i
op	13:37	0:0	4	]
op	13:38	0:0	4	.
water	13:39	0:0	4	codec
op	13:45	0:0	4	!=
water	13:48	0:0	4	0
forexpr	13:51	13:52	3	i ++
water	13:51	0:0	4	i
op	13:52	0:0	4	++
stmts	13:56	16:4	3	
water	13:56	0:0	4	{
if	14:8	15:39	4	(dx_formats [ i ] . codec == codec)
cond	14:12	14:35	5	dx_formats [ i ] . codec == codec
water	14:12	0:0	6	dx_formats
op	14:22	0:0	6	[
water	14:23	0:0	6	i
op	14:24	0:0	6	]
op	14:25	0:0	6	.
water	14:26	0:0	6	codec
op	14:32	0:0	6	==
water	14:35	0:0	6	codec
stmts	15:12	15:39	5	
return	15:12	15:39	6	dx_formats[i].fourcc
water	15:19	0:0	7	dx_formats
op	15:29	0:0	7	[
water	15:30	0:0	7	i
op	15:31	0:0	7	]
op	15:32	0:0	7	.
water	15:33	0:0	7	fourcc
water	16:4	0:0	4	}
return	17:4	17:12	2	0
water	17:11	0:0	3	0

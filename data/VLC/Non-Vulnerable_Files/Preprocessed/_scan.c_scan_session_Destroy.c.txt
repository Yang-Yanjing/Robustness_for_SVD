func	2:0	116:0	0	void	scan_session_Destroy
params	2:25	0:0	1	
param	2:27	2:41	2	scan_t *	p_scan
param	2:43	2:69	2	scan_session_t *	p_session
stmnts	0:0	115:21	1	
decl	4:4	4:49	2	const int	i_service_start
op	4:30	0:0	2	=
water	4:32	0:0	2	p_scan
op	4:38	0:0	2	->
water	4:40	0:0	2	i_service
decl	5:4	5:42	2	dvbpsi_pat_t	*p_pat
op	5:24	0:0	2	=
water	5:26	0:0	2	p_session
op	5:35	0:0	2	->
water	5:37	0:0	2	p_pat
decl	6:4	6:42	2	dvbpsi_sdt_t	*p_sdt
op	6:24	0:0	2	=
water	6:26	0:0	2	p_session
op	6:35	0:0	2	->
water	6:37	0:0	2	p_sdt
decl	8:4	8:42	2	dvbpsi_nit_t	*p_nit
op	8:24	0:0	2	=
water	8:26	0:0	2	p_session
op	8:35	0:0	2	->
water	8:37	0:0	2	p_nit
if	10:4	25:4	2	(p_pat)
cond	10:8	10:8	3	p_pat
water	10:8	0:0	4	p_pat
stmts	11:4	25:4	3	
water	11:4	0:0	4	{
decl	13:8	13:39	4	dvbpsi_pat_program_t	*p_program
for	14:8	24:8	4	(p_program = p_pat -> p_first_program ;p_program != NULL;p_program = p_program -> p_next)
forinit	14:13	14:47	5	p_program = p_pat -> p_first_program ;
water	14:13	0:0	6	p_program
op	14:23	0:0	6	=
water	14:25	0:0	6	p_pat
op	14:30	0:0	6	->
water	14:32	0:0	6	p_first_program
water	14:47	0:0	6	;
cond	14:49	14:62	5	p_program != NULL
water	14:49	0:0	6	p_program
op	14:59	0:0	6	!=
water	14:62	0:0	6	NULL
forexpr	14:68	14:91	5	p_program = p_program -> p_next
water	14:68	0:0	6	p_program
op	14:78	0:0	6	=
water	14:80	0:0	6	p_program
op	14:89	0:0	6	->
water	14:91	0:0	6	p_next
stmts	15:8	24:8	5	
water	15:8	0:0	6	{
if	16:12	17:24	6	(p_program -> i_number == 0)
cond	16:16	16:39	7	p_program -> i_number == 0
water	16:16	0:0	8	p_program
op	16:25	0:0	8	->
water	16:27	0:0	8	i_number
op	16:36	0:0	8	==
water	16:39	0:0	8	0
stmts	17:16	17:24	7	
continue	17:16	17:24	8	
decl	18:12	18:81	6	scan_service_t	*s
op	18:30	0:0	6	=
call	18:32	18:80	7	ScanFindService
arg	18:49	18:55	8	p_scan
water	18:49	0:0	9	p_scan
arg	18:57	18:58	8	0
water	18:57	0:0	9	0
arg	18:60	18:80	8	p_program->i_number
water	18:60	0:0	9	p_program
op	18:69	0:0	9	->
water	18:71	0:0	9	i_number
if	19:12	23:12	6	(s == NULL)
cond	19:16	19:21	7	s == NULL
water	19:16	0:0	8	s
op	19:18	0:0	8	==
water	19:21	0:0	8	NULL
stmts	20:12	23:12	7	
water	20:12	0:0	8	{
water	21:16	0:0	8	s
op	21:18	0:0	8	=
call	21:20	21:75	8	scan_service_New
arg	21:38	21:57	9	p_program->i_number
water	21:38	0:0	10	p_program
op	21:47	0:0	10	->
water	21:49	0:0	10	i_number
arg	21:59	21:75	9	&p_session->cfg
op	21:59	0:0	10	&
water	21:60	0:0	10	p_session
op	21:69	0:0	10	->
water	21:71	0:0	10	cfg
water	21:76	0:0	8	;
call	22:16	22:69	8	TAB_APPEND
arg	22:28	22:45	9	p_scan->i_service
water	22:28	0:0	10	p_scan
op	22:34	0:0	10	->
water	22:36	0:0	10	i_service
arg	22:47	22:65	9	p_scan->pp_service
water	22:47	0:0	10	p_scan
op	22:53	0:0	10	->
water	22:55	0:0	10	pp_service
arg	22:67	22:69	9	s
water	22:67	0:0	10	s
water	22:70	0:0	8	;
water	23:12	0:0	8	}
water	24:8	0:0	6	}
water	25:4	0:0	4	}
if	27:4	52:4	2	(p_pat && p_sdt)
cond	27:8	27:17	3	p_pat && p_sdt
water	27:8	0:0	4	p_pat
op	27:14	0:0	4	&&
water	27:17	0:0	4	p_sdt
stmts	28:4	52:4	3	
water	28:4	0:0	4	{
decl	29:8	29:35	4	dvbpsi_sdt_service_t	*p_srv
for	30:8	51:8	4	(p_srv = p_sdt -> p_first_service ;p_srv;p_srv = p_srv -> p_next)
forinit	30:13	30:43	5	p_srv = p_sdt -> p_first_service ;
water	30:13	0:0	6	p_srv
op	30:19	0:0	6	=
water	30:21	0:0	6	p_sdt
op	30:26	0:0	6	->
water	30:28	0:0	6	p_first_service
water	30:43	0:0	6	;
cond	30:45	30:45	5	p_srv
water	30:45	0:0	6	p_srv
forexpr	30:52	30:67	5	p_srv = p_srv -> p_next
water	30:52	0:0	6	p_srv
op	30:58	0:0	6	=
water	30:60	0:0	6	p_srv
op	30:65	0:0	6	->
water	30:67	0:0	6	p_next
stmts	31:8	51:8	5	
water	31:8	0:0	6	{
decl	32:12	32:81	6	scan_service_t	*s
op	32:30	0:0	6	=
call	32:32	32:80	7	ScanFindService
arg	32:49	32:55	8	p_scan
water	32:49	0:0	9	p_scan
arg	32:57	32:58	8	0
water	32:57	0:0	9	0
arg	32:60	32:80	8	p_srv->i_service_id
water	32:60	0:0	9	p_srv
op	32:65	0:0	9	->
water	32:67	0:0	9	i_service_id
decl	33:12	33:37	6	dvbpsi_descriptor_t	*p_dr
if	34:12	35:47	6	(s)
cond	34:16	34:16	7	s
water	34:16	0:0	8	s
stmts	35:16	35:47	7	
water	35:16	0:0	8	s
op	35:17	0:0	8	->
water	35:19	0:0	8	b_crypted
op	35:29	0:0	8	=
water	35:31	0:0	8	p_srv
op	35:36	0:0	8	->
water	35:38	0:0	8	b_free_ca
water	35:47	0:0	8	;
for	36:12	50:12	6	(p_dr = p_srv -> p_first_descriptor ;p_dr;p_dr = p_dr -> p_next)
forinit	36:17	36:49	7	p_dr = p_srv -> p_first_descriptor ;
water	36:17	0:0	8	p_dr
op	36:22	0:0	8	=
water	36:24	0:0	8	p_srv
op	36:29	0:0	8	->
water	36:31	0:0	8	p_first_descriptor
water	36:49	0:0	8	;
cond	36:51	36:51	7	p_dr
water	36:51	0:0	8	p_dr
forexpr	36:57	36:70	7	p_dr = p_dr -> p_next
water	36:57	0:0	8	p_dr
op	36:62	0:0	8	=
water	36:64	0:0	8	p_dr
op	36:68	0:0	8	->
water	36:70	0:0	8	p_next
stmts	37:12	50:12	7	
water	37:12	0:0	8	{
if	38:16	49:16	8	(p_dr -> i_tag == 0 x48)
cond	38:20	38:36	9	p_dr -> i_tag == 0 x48
water	38:20	0:0	10	p_dr
op	38:24	0:0	10	->
water	38:26	0:0	10	i_tag
op	38:32	0:0	10	==
water	38:35	0:0	10	0
water	38:36	0:0	10	x48
stmts	39:16	49:16	9	
water	39:16	0:0	10	{
decl	40:20	40:76	10	dvbpsi_service_dr_t	*pD
op	40:44	0:0	10	=
call	40:46	40:75	11	dvbpsi_DecodeServiceDr
arg	40:70	40:75	12	p_dr
water	40:70	0:0	13	p_dr
if	41:20	48:20	10	(s)
cond	41:24	41:24	11	s
water	41:24	0:0	12	s
stmts	42:20	48:20	11	
water	42:20	0:0	12	{
if	43:24	45:78	12	(! s -> psz_name)
cond	43:28	43:32	13	! s -> psz_name
op	43:28	0:0	14	!
water	43:29	0:0	14	s
op	43:30	0:0	14	->
water	43:32	0:0	14	psz_name
stmts	44:28	45:78	13	
water	44:28	0:0	14	s
op	44:29	0:0	14	->
water	44:31	0:0	14	psz_name
op	44:40	0:0	14	=
call	44:42	45:77	14	vlc_from_EIT
arg	44:56	44:74	15	pD->i_service_name
water	44:56	0:0	16	pD
op	44:58	0:0	16	->
water	44:60	0:0	16	i_service_name
arg	45:51	45:77	15	pD->i_service_name_length
water	45:51	0:0	16	pD
op	45:53	0:0	16	->
water	45:55	0:0	16	i_service_name_length
water	45:78	0:0	14	;
if	46:24	47:77	12	(s -> type == SERVICE_UNKNOWN)
cond	46:28	46:39	13	s -> type == SERVICE_UNKNOWN
water	46:28	0:0	14	s
op	46:29	0:0	14	->
water	46:31	0:0	14	type
op	46:36	0:0	14	==
water	46:39	0:0	14	SERVICE_UNKNOWN
stmts	47:28	47:77	13	
water	47:28	0:0	14	s
op	47:29	0:0	14	->
water	47:31	0:0	14	type
op	47:36	0:0	14	=
call	47:38	47:76	14	scan_service_type
arg	47:57	47:76	15	pD->i_service_type
water	47:57	0:0	16	pD
op	47:59	0:0	16	->
water	47:61	0:0	16	i_service_type
water	47:77	0:0	14	;
water	48:20	0:0	12	}
water	49:16	0:0	10	}
water	50:12	0:0	8	}
water	51:8	0:0	6	}
water	52:4	0:0	4	}
if	55:4	83:4	2	(p_pat && p_nit)
cond	55:8	55:17	3	p_pat && p_nit
water	55:8	0:0	4	p_pat
op	55:14	0:0	4	&&
water	55:17	0:0	4	p_nit
stmts	56:4	83:4	3	
water	56:4	0:0	4	{
decl	57:8	57:29	4	dvbpsi_nit_ts_t	*p_ts
for	58:8	82:8	4	(p_ts = p_nit -> p_first_ts ;p_ts != NULL;p_ts = p_ts -> p_next)
forinit	58:13	58:37	5	p_ts = p_nit -> p_first_ts ;
water	58:13	0:0	6	p_ts
op	58:18	0:0	6	=
water	58:20	0:0	6	p_nit
op	58:25	0:0	6	->
water	58:27	0:0	6	p_first_ts
water	58:37	0:0	6	;
cond	58:39	58:47	5	p_ts != NULL
water	58:39	0:0	6	p_ts
op	58:44	0:0	6	!=
water	58:47	0:0	6	NULL
forexpr	58:53	58:66	5	p_ts = p_ts -> p_next
water	58:53	0:0	6	p_ts
op	58:58	0:0	6	=
water	58:60	0:0	6	p_ts
op	58:64	0:0	6	->
water	58:66	0:0	6	p_next
stmts	59:8	82:8	5	
water	59:8	0:0	6	{
decl	60:12	60:42	6	uint32_t	i_private_data_id
op	60:39	0:0	6	=
water	60:41	0:0	6	0
decl	61:12	61:38	6	dvbpsi_descriptor_t	*p_dsc
if	62:12	63:24	6	(p_ts -> i_orig_network_id != p_nit -> i_network_id || p_ts -> i_ts_id != p_pat -> i_ts_id)
cond	62:16	62:90	7	p_ts -> i_orig_network_id != p_nit -> i_network_id || p_ts -> i_ts_id != p_pat -> i_ts_id
water	62:16	0:0	8	p_ts
op	62:20	0:0	8	->
water	62:22	0:0	8	i_orig_network_id
op	62:40	0:0	8	!=
water	62:43	0:0	8	p_nit
op	62:48	0:0	8	->
water	62:50	0:0	8	i_network_id
op	62:63	0:0	8	||
water	62:66	0:0	8	p_ts
op	62:70	0:0	8	->
water	62:72	0:0	8	i_ts_id
op	62:80	0:0	8	!=
water	62:83	0:0	8	p_pat
op	62:88	0:0	8	->
water	62:90	0:0	8	i_ts_id
stmts	63:16	63:24	7	
continue	63:16	63:24	8	
for	64:12	81:12	6	(p_dsc = p_ts -> p_first_descriptor ;p_dsc != NULL;p_dsc = p_dsc -> p_next)
forinit	64:17	64:49	7	p_dsc = p_ts -> p_first_descriptor ;
water	64:17	0:0	8	p_dsc
op	64:23	0:0	8	=
water	64:25	0:0	8	p_ts
op	64:29	0:0	8	->
water	64:31	0:0	8	p_first_descriptor
water	64:49	0:0	8	;
cond	64:51	64:60	7	p_dsc != NULL
water	64:51	0:0	8	p_dsc
op	64:57	0:0	8	!=
water	64:60	0:0	8	NULL
forexpr	64:66	64:81	7	p_dsc = p_dsc -> p_next
water	64:66	0:0	8	p_dsc
op	64:72	0:0	8	=
water	64:74	0:0	8	p_dsc
op	64:79	0:0	8	->
water	64:81	0:0	8	p_next
stmts	65:12	81:12	7	
water	65:12	0:0	8	{
if	66:16	69:16	8	(p_dsc -> i_tag == 0 x5f)
cond	66:20	66:37	9	p_dsc -> i_tag == 0 x5f
water	66:20	0:0	10	p_dsc
op	66:25	0:0	10	->
water	66:27	0:0	10	i_tag
op	66:33	0:0	10	==
water	66:36	0:0	10	0
water	66:37	0:0	10	x5f
stmts	67:16	69:16	9	
water	67:16	0:0	10	{
water	68:20	0:0	10	i_private_data_id
op	68:38	0:0	10	=
call	68:40	68:67	10	GetDWBE
arg	68:49	68:67	11	&p_dsc->p_data[0]
op	68:49	0:0	12	&
water	68:50	0:0	12	p_dsc
op	68:55	0:0	12	->
water	68:57	0:0	12	p_data
op	68:63	0:0	12	[
water	68:64	0:0	12	0
op	68:65	0:0	12	]
water	68:68	0:0	10	;
water	69:16	0:0	10	}
else	70:16	80:16	8
stmts	70:21	80:16	9	
if	70:21	80:16	10	(i_private_data_id == 0 x28 && p_dsc -> i_tag == 0 x83)
cond	70:25	70:71	11	i_private_data_id == 0 x28 && p_dsc -> i_tag == 0 x83
water	70:25	0:0	12	i_private_data_id
op	70:43	0:0	12	==
water	70:46	0:0	12	0
water	70:47	0:0	12	x28
op	70:51	0:0	12	&&
water	70:54	0:0	12	p_dsc
op	70:59	0:0	12	->
water	70:61	0:0	12	i_tag
op	70:67	0:0	12	==
water	70:70	0:0	12	0
water	70:71	0:0	12	x83
stmts	71:16	80:16	11	
water	71:16	0:0	12	{
for	72:20	79:20	12	( int i = 0 ;i < p_dsc -> i_length / 4;i ++)
forinit	0:0	72:34	13	 int i = 0 ;
decl	72:25	72:34	14	int	i
op	72:31	0:0	14	=
water	72:33	0:0	14	0
cond	72:36	72:56	13	i < p_dsc -> i_length / 4
water	72:36	0:0	14	i
op	72:38	0:0	14	<
water	72:40	0:0	14	p_dsc
op	72:45	0:0	14	->
water	72:47	0:0	14	i_length
op	72:55	0:0	14	/
water	72:56	0:0	14	4
forexpr	72:59	72:60	13	i ++
water	72:59	0:0	14	i
op	72:60	0:0	14	++
stmts	73:20	79:20	13	
water	73:20	0:0	14	{
decl	74:24	74:79	14	uint16_t	i_service_id
op	74:46	0:0	14	=
call	74:48	74:78	15	GetWBE
arg	74:56	74:78	16	&p_dsc->p_data[4*i+0]
op	74:56	0:0	17	&
water	74:57	0:0	17	p_dsc
op	74:62	0:0	17	->
water	74:64	0:0	17	p_data
op	74:70	0:0	17	[
water	74:71	0:0	17	4
op	74:72	0:0	17	*
water	74:73	0:0	17	i
op	74:74	0:0	17	+
water	74:75	0:0	17	0
op	74:76	0:0	17	]
decl	75:24	75:86	14	int	i_channel_number
op	75:45	0:0	14	=
call	75:47	75:77	15	GetWBE
arg	75:55	75:77	16	&p_dsc->p_data[4*i+2]
op	75:55	0:0	17	&
water	75:56	0:0	17	p_dsc
op	75:61	0:0	17	->
water	75:63	0:0	17	p_data
op	75:69	0:0	17	[
water	75:70	0:0	17	4
op	75:71	0:0	17	*
water	75:72	0:0	17	i
op	75:73	0:0	17	+
water	75:74	0:0	17	2
op	75:75	0:0	17	]
op	75:79	0:0	14	&
water	75:81	0:0	14	0
water	75:82	0:0	14	x3ff
decl	76:24	76:100	14	scan_service_t	*s
op	76:42	0:0	14	=
call	76:44	76:99	15	ScanFindService
arg	76:61	76:67	16	p_scan
water	76:61	0:0	17	p_scan
arg	76:69	76:84	16	i_service_start
water	76:69	0:0	17	i_service_start
arg	76:86	76:99	16	i_service_id
water	76:86	0:0	17	i_service_id
if	77:24	78:59	14	(s && s -> i_channel < 0)
cond	77:28	77:48	15	s && s -> i_channel < 0
water	77:28	0:0	16	s
op	77:30	0:0	16	&&
water	77:33	0:0	16	s
op	77:34	0:0	16	->
water	77:36	0:0	16	i_channel
op	77:46	0:0	16	<
water	77:48	0:0	16	0
stmts	78:28	78:59	15	
water	78:28	0:0	16	s
op	78:29	0:0	16	->
water	78:31	0:0	16	i_channel
op	78:41	0:0	16	=
water	78:43	0:0	16	i_channel_number
water	78:59	0:0	16	;
water	79:20	0:0	14	}
water	80:16	0:0	12	}
water	81:12	0:0	8	}
water	82:8	0:0	6	}
water	83:4	0:0	4	}
for	86:4	99:4	2	( int i = i_service_start ;i < p_scan -> i_service;i ++)
forinit	0:0	86:32	3	 int i = i_service_start ;
decl	86:9	86:32	4	int	i
op	86:15	0:0	4	=
water	86:17	0:0	4	i_service_start
cond	86:34	86:46	3	i < p_scan -> i_service
water	86:34	0:0	4	i
op	86:36	0:0	4	<
water	86:38	0:0	4	p_scan
op	86:44	0:0	4	->
water	86:46	0:0	4	i_service
forexpr	86:57	86:58	3	i ++
water	86:57	0:0	4	i
op	86:58	0:0	4	++
stmts	87:4	99:4	3	
water	87:4	0:0	4	{
decl	88:8	88:53	4	scan_service_t	*p_srv
op	88:30	0:0	4	=
water	88:32	0:0	4	p_scan
op	88:38	0:0	4	->
water	88:40	0:0	4	pp_service
op	88:50	0:0	4	[
water	88:51	0:0	4	i
op	88:52	0:0	4	]
water	89:8	0:0	4	p_srv
op	89:13	0:0	4	->
water	89:15	0:0	4	i_snr
op	89:21	0:0	4	=
water	89:23	0:0	4	p_session
op	89:32	0:0	4	->
water	89:34	0:0	4	i_snr
water	89:39	0:0	4	;
if	90:8	91:51	4	(p_sdt)
cond	90:12	90:12	5	p_sdt
water	90:12	0:0	6	p_sdt
stmts	91:12	91:51	5	
water	91:12	0:0	6	p_srv
op	91:17	0:0	6	->
water	91:19	0:0	6	i_sdt_version
op	91:33	0:0	6	=
water	91:35	0:0	6	p_sdt
op	91:40	0:0	6	->
water	91:42	0:0	6	i_version
water	91:51	0:0	6	;
if	93:8	97:8	4	(p_nit)
cond	93:12	93:12	5	p_nit
water	93:12	0:0	6	p_nit
stmts	94:8	97:8	5	
water	94:8	0:0	6	{
water	95:12	0:0	6	p_srv
op	95:17	0:0	6	->
water	95:19	0:0	6	i_network_id
op	95:32	0:0	6	=
water	95:34	0:0	6	p_nit
op	95:39	0:0	6	->
water	95:41	0:0	6	i_network_id
water	95:53	0:0	6	;
water	96:12	0:0	6	p_srv
op	96:17	0:0	6	->
water	96:19	0:0	6	i_nit_version
op	96:33	0:0	6	=
water	96:35	0:0	6	p_nit
op	96:40	0:0	6	->
water	96:42	0:0	6	i_version
water	96:51	0:0	6	;
water	97:8	0:0	6	}
water	99:4	0:0	4	}
if	101:4	102:42	2	(p_session -> pat)
cond	101:8	101:19	3	p_session -> pat
water	101:8	0:0	4	p_session
op	101:17	0:0	4	->
water	101:19	0:0	4	pat
stmts	102:8	102:42	3	
call	102:8	102:41	4	dvbpsi_DetachPAT
arg	102:26	102:41	5	p_session->pat
water	102:26	0:0	6	p_session
op	102:35	0:0	6	->
water	102:37	0:0	6	pat
water	102:42	0:0	4	;
if	103:4	104:44	2	(p_session -> p_pat)
cond	103:8	103:19	3	p_session -> p_pat
water	103:8	0:0	4	p_session
op	103:17	0:0	4	->
water	103:19	0:0	4	p_pat
stmts	104:8	104:44	3	
call	104:8	104:43	4	dvbpsi_DeletePAT
arg	104:26	104:43	5	p_session->p_pat
water	104:26	0:0	6	p_session
op	104:35	0:0	6	->
water	104:37	0:0	6	p_pat
water	104:44	0:0	4	;
if	105:4	106:44	2	(p_session -> sdt)
cond	105:8	105:19	3	p_session -> sdt
water	105:8	0:0	4	p_session
op	105:17	0:0	4	->
water	105:19	0:0	4	sdt
stmts	106:8	106:44	3	
call	106:8	106:43	4	dvbpsi_DetachDemux
arg	106:28	106:43	5	p_session->sdt
water	106:28	0:0	6	p_session
op	106:37	0:0	6	->
water	106:39	0:0	6	sdt
water	106:44	0:0	4	;
if	107:4	108:44	2	(p_session -> p_sdt)
cond	107:8	107:19	3	p_session -> p_sdt
water	107:8	0:0	4	p_session
op	107:17	0:0	4	->
water	107:19	0:0	4	p_sdt
stmts	108:8	108:44	3	
call	108:8	108:43	4	dvbpsi_DeleteSDT
arg	108:26	108:43	5	p_session->p_sdt
water	108:26	0:0	6	p_session
op	108:35	0:0	6	->
water	108:37	0:0	6	p_sdt
water	108:44	0:0	4	;
if	110:4	111:44	2	(p_session -> nit)
cond	110:8	110:19	3	p_session -> nit
water	110:8	0:0	4	p_session
op	110:17	0:0	4	->
water	110:19	0:0	4	nit
stmts	111:8	111:44	3	
call	111:8	111:43	4	dvbpsi_DetachDemux
arg	111:28	111:43	5	p_session->nit
water	111:28	0:0	6	p_session
op	111:37	0:0	6	->
water	111:39	0:0	6	nit
water	111:44	0:0	4	;
if	112:4	113:44	2	(p_session -> p_nit)
cond	112:8	112:19	3	p_session -> p_nit
water	112:8	0:0	4	p_session
op	112:17	0:0	4	->
water	112:19	0:0	4	p_nit
stmts	113:8	113:44	3	
call	113:8	113:43	4	dvbpsi_DeleteNIT
arg	113:26	113:43	5	p_session->p_nit
water	113:26	0:0	6	p_session
op	113:35	0:0	6	->
water	113:37	0:0	6	p_nit
water	113:44	0:0	4	;
call	115:4	115:20	2	free
arg	115:10	115:20	3	p_session
water	115:10	0:0	4	p_session
water	115:21	0:0	2	;

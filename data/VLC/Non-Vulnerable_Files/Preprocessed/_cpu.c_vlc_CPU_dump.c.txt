func	2:0	30:0	0	void	vlc_CPU_dump
params	2:18	0:0	1	
param	2:19	2:36	2	vlc_object_t *	obj
stmnts	0:0	29:53	1	
decl	4:4	4:27	2	char	buf[200]
water	4:17	0:0	2	,
decl	4:4	4:27	2	char	*p
op	4:22	0:0	2	=
water	4:24	0:0	2	buf
if	6:4	6:47	2	(vlc_CPU_MMX ( ))
cond	6:8	6:20	3	vlc_CPU_MMX ( )
call	6:8	6:20	4	vlc_CPU_MMX
stmts	6:23	6:47	3	
water	6:23	0:0	4	p
op	6:25	0:0	4	+=
call	6:28	6:46	4	sprintf
arg	6:37	6:38	5	p
water	6:37	0:0	6	p
arg	6:40	6:46	5	"MMX "
water	6:40	0:0	6	"MMX "
water	6:47	0:0	4	;
if	7:4	7:53	2	(vlc_CPU_MMXEXT ( ))
cond	7:8	7:23	3	vlc_CPU_MMXEXT ( )
call	7:8	7:23	4	vlc_CPU_MMXEXT
stmts	7:26	7:53	3	
water	7:26	0:0	4	p
op	7:28	0:0	4	+=
call	7:31	7:52	4	sprintf
arg	7:40	7:41	5	p
water	7:40	0:0	6	p
arg	7:43	7:52	5	"MMXEXT "
water	7:43	0:0	6	"MMXEXT "
water	7:53	0:0	4	;
if	8:4	8:47	2	(vlc_CPU_SSE ( ))
cond	8:8	8:20	3	vlc_CPU_SSE ( )
call	8:8	8:20	4	vlc_CPU_SSE
stmts	8:23	8:47	3	
water	8:23	0:0	4	p
op	8:25	0:0	4	+=
call	8:28	8:46	4	sprintf
arg	8:37	8:38	5	p
water	8:37	0:0	6	p
arg	8:40	8:46	5	"SSE "
water	8:40	0:0	6	"SSE "
water	8:47	0:0	4	;
if	9:4	9:49	2	(vlc_CPU_SSE2 ( ))
cond	9:8	9:21	3	vlc_CPU_SSE2 ( )
call	9:8	9:21	4	vlc_CPU_SSE2
stmts	9:24	9:49	3	
water	9:24	0:0	4	p
op	9:26	0:0	4	+=
call	9:29	9:48	4	sprintf
arg	9:38	9:39	5	p
water	9:38	0:0	6	p
arg	9:41	9:48	5	"SSE2 "
water	9:41	0:0	6	"SSE2 "
water	9:49	0:0	4	;
if	10:4	10:49	2	(vlc_CPU_SSE3 ( ))
cond	10:8	10:21	3	vlc_CPU_SSE3 ( )
call	10:8	10:21	4	vlc_CPU_SSE3
stmts	10:24	10:49	3	
water	10:24	0:0	4	p
op	10:26	0:0	4	+=
call	10:29	10:48	4	sprintf
arg	10:38	10:39	5	p
water	10:38	0:0	6	p
arg	10:41	10:48	5	"SSE3 "
water	10:41	0:0	6	"SSE3 "
water	10:49	0:0	4	;
if	11:4	11:51	2	(vlc_CPU_SSSE3 ( ))
cond	11:8	11:22	3	vlc_CPU_SSSE3 ( )
call	11:8	11:22	4	vlc_CPU_SSSE3
stmts	11:25	11:51	3	
water	11:25	0:0	4	p
op	11:27	0:0	4	+=
call	11:30	11:50	4	sprintf
arg	11:39	11:40	5	p
water	11:39	0:0	6	p
arg	11:42	11:50	5	"SSSE3 "
water	11:42	0:0	6	"SSSE3 "
water	11:51	0:0	4	;
if	12:4	12:53	2	(vlc_CPU_SSE4_1 ( ))
cond	12:8	12:23	3	vlc_CPU_SSE4_1 ( )
call	12:8	12:23	4	vlc_CPU_SSE4_1
stmts	12:26	12:53	3	
water	12:26	0:0	4	p
op	12:28	0:0	4	+=
call	12:31	12:52	4	sprintf
arg	12:40	12:41	5	p
water	12:40	0:0	6	p
arg	12:43	12:52	5	"SSE4.1 "
water	12:43	0:0	6	"SSE4.1 "
water	12:53	0:0	4	;
if	13:4	13:53	2	(vlc_CPU_SSE4_2 ( ))
cond	13:8	13:23	3	vlc_CPU_SSE4_2 ( )
call	13:8	13:23	4	vlc_CPU_SSE4_2
stmts	13:26	13:53	3	
water	13:26	0:0	4	p
op	13:28	0:0	4	+=
call	13:31	13:52	4	sprintf
arg	13:40	13:41	5	p
water	13:40	0:0	6	p
arg	13:43	13:52	5	"SSE4.2 "
water	13:43	0:0	6	"SSE4.2 "
water	13:53	0:0	4	;
if	14:4	14:51	2	(vlc_CPU_SSE4A ( ))
cond	14:8	14:22	3	vlc_CPU_SSE4A ( )
call	14:8	14:22	4	vlc_CPU_SSE4A
stmts	14:25	14:51	3	
water	14:25	0:0	4	p
op	14:27	0:0	4	+=
call	14:30	14:50	4	sprintf
arg	14:39	14:40	5	p
water	14:39	0:0	6	p
arg	14:42	14:50	5	"SSE4A "
water	14:42	0:0	6	"SSE4A "
water	14:51	0:0	4	;
if	15:4	15:47	2	(vlc_CPU_AVX ( ))
cond	15:8	15:20	3	vlc_CPU_AVX ( )
call	15:8	15:20	4	vlc_CPU_AVX
stmts	15:23	15:47	3	
water	15:23	0:0	4	p
op	15:25	0:0	4	+=
call	15:28	15:46	4	sprintf
arg	15:37	15:38	5	p
water	15:37	0:0	6	p
arg	15:40	15:46	5	"AVX "
water	15:40	0:0	6	"AVX "
water	15:47	0:0	4	;
if	16:4	16:48	2	(vlc_CPU_AVX2 ( ))
cond	16:8	16:21	3	vlc_CPU_AVX2 ( )
call	16:8	16:21	4	vlc_CPU_AVX2
stmts	16:24	16:48	3	
water	16:24	0:0	4	p
op	16:26	0:0	4	+=
call	16:29	16:47	4	sprintf
arg	16:38	16:39	5	p
water	16:38	0:0	6	p
arg	16:41	16:47	5	"AVX "
water	16:41	0:0	6	"AVX "
water	16:48	0:0	4	;
if	17:4	17:52	2	(vlc_CPU_3dNOW ( ))
cond	17:8	17:22	3	vlc_CPU_3dNOW ( )
call	17:8	17:22	4	vlc_CPU_3dNOW
stmts	17:25	17:52	3	
water	17:25	0:0	4	p
op	17:27	0:0	4	+=
call	17:30	17:51	4	sprintf
arg	17:39	17:40	5	p
water	17:39	0:0	6	p
arg	17:42	17:51	5	"3DNow! "
water	17:42	0:0	6	"3DNow! "
water	17:52	0:0	4	;
if	18:4	18:47	2	(vlc_CPU_XOP ( ))
cond	18:8	18:20	3	vlc_CPU_XOP ( )
call	18:8	18:20	4	vlc_CPU_XOP
stmts	18:23	18:47	3	
water	18:23	0:0	4	p
op	18:25	0:0	4	+=
call	18:28	18:46	4	sprintf
arg	18:37	18:38	5	p
water	18:37	0:0	6	p
arg	18:40	18:46	5	"XOP "
water	18:40	0:0	6	"XOP "
water	18:47	0:0	4	;
if	19:4	19:49	2	(vlc_CPU_FMA4 ( ))
cond	19:8	19:21	3	vlc_CPU_FMA4 ( )
call	19:8	19:21	4	vlc_CPU_FMA4
stmts	19:24	19:49	3	
water	19:24	0:0	4	p
op	19:26	0:0	4	+=
call	19:29	19:48	4	sprintf
arg	19:38	19:39	5	p
water	19:38	0:0	6	p
arg	19:41	19:48	5	"FMA4 "
water	19:41	0:0	6	"FMA4 "
water	19:49	0:0	4	;
if	21:4	21:55	2	(vlc_CPU_ALTIVEC ( ))
cond	21:8	21:24	3	vlc_CPU_ALTIVEC ( )
call	21:8	21:24	4	vlc_CPU_ALTIVEC
stmts	21:28	21:55	3	
water	21:28	0:0	4	p
op	21:30	0:0	4	+=
call	21:33	21:54	4	sprintf
arg	21:42	21:43	5	p
water	21:42	0:0	6	p
arg	21:45	21:54	5	"AltiVec"
water	21:45	0:0	6	"AltiVec"
water	21:55	0:0	4	;
if	23:4	23:57	2	(vlc_CPU_ARM_NEON ( ))
cond	23:8	23:25	3	vlc_CPU_ARM_NEON ( )
call	23:8	23:25	4	vlc_CPU_ARM_NEON
stmts	23:28	23:57	3	
water	23:28	0:0	4	p
op	23:30	0:0	4	+=
call	23:33	23:56	4	sprintf
arg	23:42	23:43	5	p
water	23:42	0:0	6	p
arg	23:45	23:56	5	"ARM_NEON "
water	23:45	0:0	6	"ARM_NEON "
water	23:57	0:0	4	;
water	26:4	0:0	2	p
op	26:6	0:0	2	+=
call	26:9	26:27	2	sprintf
arg	26:18	26:19	3	p
water	26:18	0:0	4	p
arg	26:21	26:27	3	"FPU "
water	26:21	0:0	4	"FPU "
water	26:28	0:0	2	;
if	28:4	29:53	2	(p > buf)
cond	28:8	28:12	3	p > buf
water	28:8	0:0	4	p
op	28:10	0:0	4	>
water	28:12	0:0	4	buf
stmts	29:8	29:53	3	
call	29:8	29:52	4	msg_Dbg
arg	29:17	29:20	5	obj
water	29:17	0:0	6	obj
arg	29:22	29:47	5	"CPU has capabilities %s"
water	29:22	0:0	6	"CPU has capabilities %s"
arg	29:49	29:52	5	buf
water	29:49	0:0	6	buf
water	29:53	0:0	4	;

func	2:0	45:0	0	static void *	DStreamThread
params	2:26	0:0	1	
param	2:28	2:38	2	void *	obj
stmnts	0:0	44:15	1	
decl	4:4	4:33	2	stream_t	*s
op	4:16	0:0	2	=
water	4:18	0:0	2	(
water	4:19	0:0	2	stream_t
op	4:28	0:0	2	*
water	4:29	0:0	2	)
water	4:30	0:0	2	obj
decl	5:4	5:34	2	stream_sys_t	*p_sys
op	5:24	0:0	2	=
water	5:26	0:0	2	s
op	5:27	0:0	2	->
water	5:29	0:0	2	p_sys
decl	6:4	6:20	2	demux_t	*p_demux
water	8:4	0:0	2	p_demux
op	8:12	0:0	2	=
call	8:14	9:31	2	demux_New
arg	8:25	8:26	3	s
water	8:25	0:0	4	s
arg	8:28	8:38	3	s->p_input
water	8:28	0:0	4	s
op	8:29	0:0	4	->
water	8:31	0:0	4	p_input
arg	8:40	8:42	3	""
water	8:40	0:0	4	""
arg	8:44	8:59	3	p_sys->psz_name
water	8:44	0:0	4	p_sys
op	8:49	0:0	4	->
water	8:51	0:0	4	psz_name
arg	8:61	8:63	3	""
water	8:61	0:0	4	""
arg	8:65	8:66	3	s
water	8:65	0:0	4	s
arg	8:68	8:78	3	p_sys->out
water	8:68	0:0	4	p_sys
op	8:73	0:0	4	->
water	8:75	0:0	4	out
arg	9:25	9:31	3	false
water	9:25	0:0	4	false
water	9:32	0:0	2	;
if	10:4	11:19	2	(p_demux == NULL)
cond	10:8	10:19	3	p_demux == NULL
water	10:8	0:0	4	p_demux
op	10:16	0:0	4	==
water	10:19	0:0	4	NULL
stmts	11:8	11:19	3	
return	11:8	11:19	4	NULL
water	11:15	0:0	5	NULL
call	14:4	14:54	2	demux_Control
arg	14:19	14:26	3	p_demux
water	14:19	0:0	4	p_demux
arg	14:28	14:43	3	DEMUX_SET_GROUP
water	14:28	0:0	4	DEMUX_SET_GROUP
arg	14:45	14:47	3	-1
op	14:45	0:0	4	-
water	14:46	0:0	4	1
arg	14:49	14:54	3	NULL
water	14:49	0:0	4	NULL
water	14:55	0:0	2	;
decl	16:4	16:27	2	mtime_t	next_update
op	16:24	0:0	2	=
water	16:26	0:0	2	0
while	17:4	39:4	2	(atomic_load (& p_sys -> active ))
cond	17:11	17:39	3	atomic_load (& p_sys -> active )
call	17:11	17:39	4	atomic_load
arg	17:24	17:39	5	&p_sys->active
op	17:24	0:0	6	&
water	17:25	0:0	6	p_sys
op	17:30	0:0	6	->
water	17:32	0:0	6	active
stmts	18:4	39:4	3	
water	18:4	0:0	4	{
if	19:8	36:8	4	(p_demux -> info . i_update ||mdate ( ) >= next_update)
cond	19:12	19:49	5	p_demux -> info . i_update ||mdate ( ) >= next_update
water	19:12	0:0	6	p_demux
op	19:19	0:0	6	->
water	19:21	0:0	6	info
op	19:25	0:0	6	.
water	19:26	0:0	6	i_update
op	19:35	0:0	6	||
call	19:38	19:44	6	mdate
op	19:46	0:0	6	>=
water	19:49	0:0	6	next_update
stmts	20:8	36:8	5	
water	20:8	0:0	6	{
decl	21:12	21:25	6	double	newpos
decl	22:12	22:35	6	int64_t	newlen
water	22:26	0:0	6	,
decl	22:12	22:35	6	int64_t	newtime
if	23:12	24:27	6	(demux_Control (p_demux ,DEMUX_GET_POSITION ,& newpos ))
cond	23:16	23:68	7	demux_Control (p_demux ,DEMUX_GET_POSITION ,& newpos )
call	23:16	23:68	8	demux_Control
arg	23:31	23:38	9	p_demux
water	23:31	0:0	10	p_demux
arg	23:40	23:58	9	DEMUX_GET_POSITION
water	23:40	0:0	10	DEMUX_GET_POSITION
arg	23:60	23:68	9	&newpos
op	23:60	0:0	10	&
water	23:61	0:0	10	newpos
stmts	24:16	24:27	7	
water	24:16	0:0	8	newpos
op	24:23	0:0	8	=
water	24:25	0:0	8	0
op	24:26	0:0	8	.
water	24:27	0:0	8	;
if	25:12	26:26	6	(demux_Control (p_demux ,DEMUX_GET_LENGTH ,& newlen ))
cond	25:16	25:66	7	demux_Control (p_demux ,DEMUX_GET_LENGTH ,& newlen )
call	25:16	25:66	8	demux_Control
arg	25:31	25:38	9	p_demux
water	25:31	0:0	10	p_demux
arg	25:40	25:56	9	DEMUX_GET_LENGTH
water	25:40	0:0	10	DEMUX_GET_LENGTH
arg	25:58	25:66	9	&newlen
op	25:58	0:0	10	&
water	25:59	0:0	10	newlen
stmts	26:16	26:26	7	
water	26:16	0:0	8	newlen
op	26:23	0:0	8	=
water	26:25	0:0	8	0
water	26:26	0:0	8	;
if	27:12	28:27	6	(demux_Control (p_demux ,DEMUX_GET_TIME ,& newtime ))
cond	27:16	27:65	7	demux_Control (p_demux ,DEMUX_GET_TIME ,& newtime )
call	27:16	27:65	8	demux_Control
arg	27:31	27:38	9	p_demux
water	27:31	0:0	10	p_demux
arg	27:40	27:54	9	DEMUX_GET_TIME
water	27:40	0:0	10	DEMUX_GET_TIME
arg	27:56	27:65	9	&newtime
op	27:56	0:0	10	&
water	27:57	0:0	10	newtime
stmts	28:16	28:27	7	
water	28:16	0:0	8	newtime
op	28:24	0:0	8	=
water	28:26	0:0	8	0
water	28:27	0:0	8	;
call	29:12	29:41	6	vlc_mutex_lock
arg	29:28	29:41	7	&p_sys->lock
op	29:28	0:0	8	&
water	29:29	0:0	8	p_sys
op	29:34	0:0	8	->
water	29:36	0:0	8	lock
water	29:42	0:0	6	;
water	30:12	0:0	6	p_sys
op	30:17	0:0	6	->
water	30:19	0:0	6	stats
op	30:24	0:0	6	.
water	30:25	0:0	6	position
op	30:34	0:0	6	=
water	30:36	0:0	6	newpos
water	30:42	0:0	6	;
water	31:12	0:0	6	p_sys
op	31:17	0:0	6	->
water	31:19	0:0	6	stats
op	31:24	0:0	6	.
water	31:25	0:0	6	length
op	31:32	0:0	6	=
water	31:34	0:0	6	newlen
water	31:40	0:0	6	;
water	32:12	0:0	6	p_sys
op	32:17	0:0	6	->
water	32:19	0:0	6	stats
op	32:24	0:0	6	.
water	32:25	0:0	6	time
op	32:30	0:0	6	=
water	32:32	0:0	6	newtime
water	32:39	0:0	6	;
call	33:12	33:43	6	vlc_mutex_unlock
arg	33:30	33:43	7	&p_sys->lock
op	33:30	0:0	8	&
water	33:31	0:0	8	p_sys
op	33:36	0:0	8	->
water	33:38	0:0	8	lock
water	33:44	0:0	6	;
water	34:12	0:0	6	p_demux
op	34:19	0:0	6	->
water	34:21	0:0	6	info
op	34:25	0:0	6	.
water	34:26	0:0	6	i_update
op	34:35	0:0	6	=
water	34:37	0:0	6	0
water	34:38	0:0	6	;
water	35:12	0:0	6	next_update
op	35:24	0:0	6	=
call	35:26	35:32	6	mdate
op	35:34	0:0	6	+
water	35:36	0:0	6	(
water	35:37	0:0	6	CLOCK_FREQ
op	35:48	0:0	6	/
water	35:50	0:0	6	4
water	35:51	0:0	6	)
water	35:52	0:0	6	;
water	36:8	0:0	6	}
if	37:8	38:17	4	(demux_Demux (p_demux ) <= 0)
cond	37:12	37:38	5	demux_Demux (p_demux ) <= 0
call	37:12	37:33	6	demux_Demux
arg	37:25	37:33	7	p_demux
water	37:25	0:0	8	p_demux
op	37:35	0:0	6	<=
water	37:38	0:0	6	0
stmts	38:12	38:17	5	
break	38:12	38:17	6	
water	39:4	0:0	4	}
water	42:4	0:0	2	p_demux
op	42:11	0:0	2	->
water	42:13	0:0	2	s
op	42:15	0:0	2	=
water	42:17	0:0	2	NULL
water	42:21	0:0	2	;
call	43:4	43:26	2	demux_Delete
arg	43:18	43:26	3	p_demux
water	43:18	0:0	4	p_demux
water	43:27	0:0	2	;
return	44:4	44:15	2	NULL
water	44:11	0:0	3	NULL

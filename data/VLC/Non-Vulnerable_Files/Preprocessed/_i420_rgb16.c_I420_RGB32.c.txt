func	2:0	82:0	0	void	I420_RGB32
params	2:15	0:0	1	
param	2:17	2:35	2	filter_t *	p_filter
param	2:37	2:53	2	picture_t *	p_src
param	2:55	2:73	2	picture_t *	p_dest
stmnts	0:0	81:4	1	
decl	5:4	5:52	2	uint32_t	*p_pic
op	5:20	0:0	2	=
water	5:22	0:0	2	(
water	5:23	0:0	2	uint32_t
op	5:31	0:0	2	*
water	5:32	0:0	2	)
water	5:33	0:0	2	p_dest
op	5:39	0:0	2	->
water	5:41	0:0	2	p
op	5:42	0:0	2	->
water	5:44	0:0	2	p_pixels
decl	6:4	6:37	2	uint8_t	*p_y
op	6:20	0:0	2	=
water	6:22	0:0	2	p_src
op	6:27	0:0	2	->
water	6:29	0:0	2	Y_PIXELS
decl	7:4	7:37	2	uint8_t	*p_u
op	7:20	0:0	2	=
water	7:22	0:0	2	p_src
op	7:27	0:0	2	->
water	7:29	0:0	2	U_PIXELS
decl	8:4	8:37	2	uint8_t	*p_v
op	8:20	0:0	2	=
water	8:22	0:0	2	p_src
op	8:27	0:0	2	->
water	8:29	0:0	2	V_PIXELS
decl	9:4	9:18	2	bool	b_hscale
decl	10:4	10:25	2	unsigned int	i_vscale
decl	11:4	11:25	2	unsigned int	i_x
water	11:20	0:0	2	,
decl	11:4	11:25	2	unsigned int	i_y
decl	12:4	12:30	2	int	i_right_margin
decl	13:4	13:24	2	int	i_rewind
decl	14:4	14:29	2	int	i_scale_count
decl	15:4	15:113	2	int	i_chroma_width
op	15:31	0:0	2	=
water	15:33	0:0	2	(
water	15:34	0:0	2	p_filter
op	15:42	0:0	2	->
water	15:44	0:0	2	fmt_in
op	15:50	0:0	2	.
water	15:51	0:0	2	video
op	15:56	0:0	2	.
water	15:57	0:0	2	i_x_offset
op	15:68	0:0	2	+
water	15:70	0:0	2	p_filter
op	15:78	0:0	2	->
water	15:80	0:0	2	fmt_in
op	15:86	0:0	2	.
water	15:87	0:0	2	video
op	15:92	0:0	2	.
water	15:93	0:0	2	i_visible_width
water	15:108	0:0	2	)
op	15:110	0:0	2	/
water	15:112	0:0	2	2
decl	16:4	16:27	2	uint32_t	*p_pic_start
decl	17:4	17:30	2	int	i_uval
water	17:22	0:0	2	,
decl	17:4	17:30	2	int	i_vval
decl	18:4	18:38	2	int	i_red
water	18:21	0:0	2	,
decl	18:4	18:38	2	int	i_green
water	18:30	0:0	2	,
decl	18:4	18:38	2	int	i_blue
decl	19:4	19:48	2	uint32_t	*p_yuv
op	19:22	0:0	2	=
water	19:24	0:0	2	p_filter
op	19:32	0:0	2	->
water	19:34	0:0	2	p_sys
op	19:39	0:0	2	->
water	19:41	0:0	2	p_rgb32
decl	20:4	20:23	2	uint32_t	*p_ybase
decl	22:4	22:69	2	uint32_t	*p_buffer_start
op	22:31	0:0	2	=
water	22:33	0:0	2	(
water	22:34	0:0	2	uint32_t
op	22:42	0:0	2	*
water	22:43	0:0	2	)
water	22:44	0:0	2	p_filter
op	22:52	0:0	2	->
water	22:54	0:0	2	p_sys
op	22:59	0:0	2	->
water	22:61	0:0	2	p_buffer
decl	23:4	23:24	2	uint32_t	*p_buffer
decl	25:4	25:58	2	int	*p_offset_start
op	25:31	0:0	2	=
water	25:33	0:0	2	p_filter
op	25:41	0:0	2	->
water	25:43	0:0	2	p_sys
op	25:48	0:0	2	->
water	25:50	0:0	2	p_offset
decl	26:4	26:24	2	int	*p_offset
decl	27:4	29:68	2	const int	i_source_margin
op	27:30	0:0	2	=
water	27:32	0:0	2	p_src
op	27:37	0:0	2	->
water	27:39	0:0	2	p
op	27:40	0:0	2	[
water	27:41	0:0	2	0
op	27:42	0:0	2	]
op	27:43	0:0	2	.
water	27:44	0:0	2	i_pitch
op	28:33	0:0	2	-
water	28:35	0:0	2	p_src
op	28:40	0:0	2	->
water	28:42	0:0	2	p
op	28:43	0:0	2	[
water	28:44	0:0	2	0
op	28:45	0:0	2	]
op	28:46	0:0	2	.
water	28:47	0:0	2	i_visible_pitch
op	29:33	0:0	2	-
water	29:35	0:0	2	p_filter
op	29:43	0:0	2	->
water	29:45	0:0	2	fmt_in
op	29:51	0:0	2	.
water	29:52	0:0	2	video
op	29:57	0:0	2	.
water	29:58	0:0	2	i_x_offset
decl	30:4	32:76	2	const int	i_source_margin_c
op	30:32	0:0	2	=
water	30:34	0:0	2	p_src
op	30:39	0:0	2	->
water	30:41	0:0	2	p
op	30:42	0:0	2	[
water	30:43	0:0	2	1
op	30:44	0:0	2	]
op	30:45	0:0	2	.
water	30:46	0:0	2	i_pitch
op	31:33	0:0	2	-
water	31:35	0:0	2	p_src
op	31:40	0:0	2	->
water	31:42	0:0	2	p
op	31:43	0:0	2	[
water	31:44	0:0	2	1
op	31:45	0:0	2	]
op	31:46	0:0	2	.
water	31:47	0:0	2	i_visible_pitch
op	32:33	0:0	2	-
water	32:35	0:0	2	(
water	32:37	0:0	2	p_filter
op	32:45	0:0	2	->
water	32:47	0:0	2	fmt_in
op	32:53	0:0	2	.
water	32:54	0:0	2	video
op	32:59	0:0	2	.
water	32:60	0:0	2	i_x_offset
op	32:71	0:0	2	/
water	32:73	0:0	2	2
water	32:75	0:0	2	)
water	33:4	0:0	2	i_right_margin
op	33:19	0:0	2	=
water	33:21	0:0	2	p_dest
op	33:27	0:0	2	->
water	33:29	0:0	2	p
op	33:30	0:0	2	->
water	33:32	0:0	2	i_pitch
op	33:40	0:0	2	-
water	33:42	0:0	2	p_dest
op	33:48	0:0	2	->
water	33:50	0:0	2	p
op	33:51	0:0	2	->
water	33:53	0:0	2	i_visible_pitch
water	33:68	0:0	2	;
water	34:4	0:0	2	i_rewind
op	34:13	0:0	2	=
water	34:15	0:0	2	(
op	34:16	0:0	2	-
water	34:17	0:0	2	(
water	34:18	0:0	2	p_filter
op	34:26	0:0	2	->
water	34:28	0:0	2	fmt_in
op	34:34	0:0	2	.
water	34:35	0:0	2	video
op	34:40	0:0	2	.
water	34:41	0:0	2	i_x_offset
op	34:52	0:0	2	+
water	34:54	0:0	2	p_filter
op	34:62	0:0	2	->
water	34:64	0:0	2	fmt_in
op	34:70	0:0	2	.
water	34:71	0:0	2	video
op	34:76	0:0	2	.
water	34:77	0:0	2	i_visible_width
water	34:92	0:0	2	)
water	34:93	0:0	2	)
op	34:95	0:0	2	&
water	34:97	0:0	2	7
water	34:98	0:0	2	;
call	38:4	42:52	2	SetOffset
arg	38:15	38:91	3	(p_filter->fmt_in.video.i_x_offset+p_filter->fmt_in.video.i_visible_width)
water	38:15	0:0	4	(
water	38:16	0:0	4	p_filter
op	38:24	0:0	4	->
water	38:26	0:0	4	fmt_in
op	38:32	0:0	4	.
water	38:33	0:0	4	video
op	38:38	0:0	4	.
water	38:39	0:0	4	i_x_offset
op	38:50	0:0	4	+
water	38:52	0:0	4	p_filter
op	38:60	0:0	4	->
water	38:62	0:0	4	fmt_in
op	38:68	0:0	4	.
water	38:69	0:0	4	video
op	38:74	0:0	4	.
water	38:75	0:0	4	i_visible_width
water	38:90	0:0	4	)
arg	39:15	39:92	3	(p_filter->fmt_in.video.i_y_offset+p_filter->fmt_in.video.i_visible_height)
water	39:15	0:0	4	(
water	39:16	0:0	4	p_filter
op	39:24	0:0	4	->
water	39:26	0:0	4	fmt_in
op	39:32	0:0	4	.
water	39:33	0:0	4	video
op	39:38	0:0	4	.
water	39:39	0:0	4	i_y_offset
op	39:50	0:0	4	+
water	39:52	0:0	4	p_filter
op	39:60	0:0	4	->
water	39:62	0:0	4	fmt_in
op	39:68	0:0	4	.
water	39:69	0:0	4	video
op	39:74	0:0	4	.
water	39:75	0:0	4	i_visible_height
water	39:91	0:0	4	)
arg	40:15	40:93	3	(p_filter->fmt_out.video.i_x_offset+p_filter->fmt_out.video.i_visible_width)
water	40:15	0:0	4	(
water	40:16	0:0	4	p_filter
op	40:24	0:0	4	->
water	40:26	0:0	4	fmt_out
op	40:33	0:0	4	.
water	40:34	0:0	4	video
op	40:39	0:0	4	.
water	40:40	0:0	4	i_x_offset
op	40:51	0:0	4	+
water	40:53	0:0	4	p_filter
op	40:61	0:0	4	->
water	40:63	0:0	4	fmt_out
op	40:70	0:0	4	.
water	40:71	0:0	4	video
op	40:76	0:0	4	.
water	40:77	0:0	4	i_visible_width
water	40:92	0:0	4	)
arg	41:15	41:94	3	(p_filter->fmt_out.video.i_y_offset+p_filter->fmt_out.video.i_visible_height)
water	41:15	0:0	4	(
water	41:16	0:0	4	p_filter
op	41:24	0:0	4	->
water	41:26	0:0	4	fmt_out
op	41:33	0:0	4	.
water	41:34	0:0	4	video
op	41:39	0:0	4	.
water	41:40	0:0	4	i_y_offset
op	41:51	0:0	4	+
water	41:53	0:0	4	p_filter
op	41:61	0:0	4	->
water	41:63	0:0	4	fmt_out
op	41:70	0:0	4	.
water	41:71	0:0	4	video
op	41:76	0:0	4	.
water	41:77	0:0	4	i_visible_height
water	41:93	0:0	4	)
arg	42:15	42:24	3	&b_hscale
op	42:15	0:0	4	&
water	42:16	0:0	4	b_hscale
arg	42:26	42:35	3	&i_vscale
op	42:26	0:0	4	&
water	42:27	0:0	4	i_vscale
arg	42:37	42:52	3	p_offset_start
water	42:37	0:0	4	p_offset_start
water	42:53	0:0	2	;
water	46:4	0:0	2	i_scale_count
op	46:18	0:0	2	=
water	46:20	0:0	2	(
water	46:22	0:0	2	i_vscale
op	46:31	0:0	2	==
water	46:34	0:0	2	1
water	46:36	0:0	2	)
water	46:38	0:0	2	?
water	47:20	0:0	2	(
water	47:21	0:0	2	p_filter
op	47:29	0:0	2	->
water	47:31	0:0	2	fmt_out
op	47:38	0:0	2	.
water	47:39	0:0	2	video
op	47:44	0:0	2	.
water	47:45	0:0	2	i_y_offset
op	47:56	0:0	2	+
water	47:58	0:0	2	p_filter
op	47:66	0:0	2	->
water	47:68	0:0	2	fmt_out
op	47:75	0:0	2	.
water	47:76	0:0	2	video
op	47:81	0:0	2	.
water	47:82	0:0	2	i_visible_height
water	47:98	0:0	2	)
water	47:100	0:0	2	:
water	48:20	0:0	2	(
water	48:21	0:0	2	p_filter
op	48:29	0:0	2	->
water	48:31	0:0	2	fmt_in
op	48:37	0:0	2	.
water	48:38	0:0	2	video
op	48:43	0:0	2	.
water	48:44	0:0	2	i_y_offset
op	48:55	0:0	2	+
water	48:57	0:0	2	p_filter
op	48:65	0:0	2	->
water	48:67	0:0	2	fmt_in
op	48:73	0:0	2	.
water	48:74	0:0	2	video
op	48:79	0:0	2	.
water	48:80	0:0	2	i_visible_height
water	48:96	0:0	2	)
water	48:97	0:0	2	;
for	49:4	81:4	2	(i_y = 0 ;i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height );i_y ++)
forinit	49:9	49:16	3	i_y = 0 ;
water	49:9	0:0	4	i_y
op	49:13	0:0	4	=
water	49:15	0:0	4	0
water	49:16	0:0	4	;
cond	49:18	49:100	3	i_y < ( p_filter -> fmt_in . video . i_y_offset + p_filter -> fmt_in . video . i_visible_height )
water	49:18	0:0	4	i_y
op	49:22	0:0	4	<
water	49:24	0:0	4	(
water	49:25	0:0	4	p_filter
op	49:33	0:0	4	->
water	49:35	0:0	4	fmt_in
op	49:41	0:0	4	.
water	49:42	0:0	4	video
op	49:47	0:0	4	.
water	49:48	0:0	4	i_y_offset
op	49:59	0:0	4	+
water	49:61	0:0	4	p_filter
op	49:69	0:0	4	->
water	49:71	0:0	4	fmt_in
op	49:77	0:0	4	.
water	49:78	0:0	4	video
op	49:83	0:0	4	.
water	49:84	0:0	4	i_visible_height
water	49:100	0:0	4	)
forexpr	49:103	49:106	3	i_y ++
water	49:103	0:0	4	i_y
op	49:106	0:0	4	++
stmts	50:4	81:4	3	
water	50:4	0:0	4	{
water	51:8	0:0	4	p_pic_start
op	51:20	0:0	4	=
water	51:22	0:0	4	p_pic
water	51:27	0:0	4	;
water	52:8	0:0	4	p_buffer
op	52:17	0:0	4	=
water	52:19	0:0	4	b_hscale
water	52:28	0:0	4	?
water	52:30	0:0	4	p_buffer_start
water	52:45	0:0	4	:
water	52:47	0:0	4	p_pic
water	52:52	0:0	4	;
for	53:8	59:8	4	(i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;i_x --;)
forinit	53:14	53:100	5	i_x = ( p_filter -> fmt_in . video . i_x_offset + p_filter -> fmt_in . video . i_visible_width ) / 8 ;
water	53:14	0:0	6	i_x
op	53:18	0:0	6	=
water	53:20	0:0	6	(
water	53:21	0:0	6	p_filter
op	53:29	0:0	6	->
water	53:31	0:0	6	fmt_in
op	53:37	0:0	6	.
water	53:38	0:0	6	video
op	53:43	0:0	6	.
water	53:44	0:0	6	i_x_offset
op	53:55	0:0	6	+
water	53:57	0:0	6	p_filter
op	53:65	0:0	6	->
water	53:67	0:0	6	fmt_in
op	53:73	0:0	6	.
water	53:74	0:0	6	video
op	53:79	0:0	6	.
water	53:80	0:0	6	i_visible_width
water	53:95	0:0	6	)
op	53:97	0:0	6	/
water	53:99	0:0	6	8
water	53:100	0:0	6	;
cond	53:102	53:105	5	i_x --
water	53:102	0:0	6	i_x
op	53:105	0:0	6	--
forexpr	0:0	0:0	5	
stmts	54:8	59:8	5	
water	54:8	0:0	6	{
call	55:12	55:31	6	CONVERT_YUV_PIXEL
arg	55:30	55:31	7	4
water	55:30	0:0	8	4
water	55:32	0:0	6	;
call	55:35	55:52	6	CONVERT_Y_PIXEL
arg	55:51	55:52	7	4
water	55:51	0:0	8	4
water	55:53	0:0	6	;
call	56:12	56:31	6	CONVERT_YUV_PIXEL
arg	56:30	56:31	7	4
water	56:30	0:0	8	4
water	56:32	0:0	6	;
call	56:35	56:52	6	CONVERT_Y_PIXEL
arg	56:51	56:52	7	4
water	56:51	0:0	8	4
water	56:53	0:0	6	;
call	57:12	57:31	6	CONVERT_YUV_PIXEL
arg	57:30	57:31	7	4
water	57:30	0:0	8	4
water	57:32	0:0	6	;
call	57:35	57:52	6	CONVERT_Y_PIXEL
arg	57:51	57:52	7	4
water	57:51	0:0	8	4
water	57:53	0:0	6	;
call	58:12	58:31	6	CONVERT_YUV_PIXEL
arg	58:30	58:31	7	4
water	58:30	0:0	8	4
water	58:32	0:0	6	;
call	58:35	58:52	6	CONVERT_Y_PIXEL
arg	58:51	58:52	7	4
water	58:51	0:0	8	4
water	58:53	0:0	6	;
water	59:8	0:0	6	}
if	62:8	72:8	4	(i_rewind)
cond	62:12	62:12	5	i_rewind
water	62:12	0:0	6	i_rewind
stmts	63:8	72:8	5	
water	63:8	0:0	6	{
water	64:12	0:0	6	p_y
op	64:16	0:0	6	-=
water	64:19	0:0	6	i_rewind
water	64:27	0:0	6	;
water	65:12	0:0	6	p_u
op	65:16	0:0	6	-=
water	65:19	0:0	6	i_rewind
op	65:28	0:0	6	>>
water	65:31	0:0	6	1
water	65:32	0:0	6	;
water	66:12	0:0	6	p_v
op	66:16	0:0	6	-=
water	66:19	0:0	6	i_rewind
op	66:28	0:0	6	>>
water	66:31	0:0	6	1
water	66:32	0:0	6	;
water	67:12	0:0	6	p_buffer
op	67:21	0:0	6	-=
water	67:24	0:0	6	i_rewind
water	67:32	0:0	6	;
call	68:12	68:31	6	CONVERT_YUV_PIXEL
arg	68:30	68:31	7	4
water	68:30	0:0	8	4
water	68:32	0:0	6	;
call	68:35	68:52	6	CONVERT_Y_PIXEL
arg	68:51	68:52	7	4
water	68:51	0:0	8	4
water	68:53	0:0	6	;
call	69:12	69:31	6	CONVERT_YUV_PIXEL
arg	69:30	69:31	7	4
water	69:30	0:0	8	4
water	69:32	0:0	6	;
call	69:35	69:52	6	CONVERT_Y_PIXEL
arg	69:51	69:52	7	4
water	69:51	0:0	8	4
water	69:53	0:0	6	;
call	70:12	70:31	6	CONVERT_YUV_PIXEL
arg	70:30	70:31	7	4
water	70:30	0:0	8	4
water	70:32	0:0	6	;
call	70:35	70:52	6	CONVERT_Y_PIXEL
arg	70:51	70:52	7	4
water	70:51	0:0	8	4
water	70:53	0:0	6	;
call	71:12	71:31	6	CONVERT_YUV_PIXEL
arg	71:30	71:31	7	4
water	71:30	0:0	8	4
water	71:32	0:0	6	;
call	71:35	71:52	6	CONVERT_Y_PIXEL
arg	71:51	71:52	7	4
water	71:51	0:0	8	4
water	71:53	0:0	6	;
water	72:8	0:0	6	}
water	73:8	0:0	4	SCALE_WIDTH
water	73:19	0:0	4	;
call	74:8	74:29	4	SCALE_HEIGHT
arg	74:22	74:25	5	420
water	74:22	0:0	6	420
arg	74:27	74:29	5	4
water	74:27	0:0	6	4
water	74:30	0:0	4	;
water	75:8	0:0	4	p_y
op	75:12	0:0	4	+=
water	75:15	0:0	4	i_source_margin
water	75:30	0:0	4	;
if	76:8	80:8	4	(i_y % 2)
cond	76:12	76:18	5	i_y % 2
water	76:12	0:0	6	i_y
op	76:16	0:0	6	%
water	76:18	0:0	6	2
stmts	77:8	80:8	5	
water	77:8	0:0	6	{
water	78:12	0:0	6	p_u
op	78:16	0:0	6	+=
water	78:19	0:0	6	i_source_margin_c
water	78:36	0:0	6	;
water	79:12	0:0	6	p_v
op	79:16	0:0	6	+=
water	79:19	0:0	6	i_source_margin_c
water	79:36	0:0	6	;
water	80:8	0:0	6	}
water	81:4	0:0	4	}
